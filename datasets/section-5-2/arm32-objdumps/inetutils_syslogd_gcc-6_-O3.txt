
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011634 <.init>:
   11634:	push	{r3, lr}
   11638:	bl	12c3c <__assert_fail@plt+0x112c>
   1163c:	pop	{r3, pc}

Disassembly of section .plt:

00011640 <calloc@plt-0x14>:
   11640:	push	{lr}		; (str lr, [sp, #-4]!)
   11644:	ldr	lr, [pc, #4]	; 11650 <calloc@plt-0x4>
   11648:	add	lr, pc, lr
   1164c:	ldr	pc, [lr, #8]!
   11650:			; <UNDEFINED> instruction: 0x000219b0

00011654 <calloc@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #135168	; 0x21000
   1165c:	ldr	pc, [ip, #2480]!	; 0x9b0

00011660 <fputs_unlocked@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #135168	; 0x21000
   11668:	ldr	pc, [ip, #2472]!	; 0x9a8

0001166c <raise@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #135168	; 0x21000
   11674:	ldr	pc, [ip, #2464]!	; 0x9a0

00011678 <fsync@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #135168	; 0x21000
   11680:	ldr	pc, [ip, #2456]!	; 0x998

00011684 <strcmp@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #135168	; 0x21000
   1168c:	ldr	pc, [ip, #2448]!	; 0x990

00011690 <strtol@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #135168	; 0x21000
   11698:	ldr	pc, [ip, #2440]!	; 0x988

0001169c <setsockopt@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #135168	; 0x21000
   116a4:	ldr	pc, [ip, #2432]!	; 0x980

000116a8 <pause@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #135168	; 0x21000
   116b0:	ldr	pc, [ip, #2424]!	; 0x978

000116b4 <printf@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #135168	; 0x21000
   116bc:	ldr	pc, [ip, #2416]!	; 0x970

000116c0 <read@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #135168	; 0x21000
   116c8:	ldr	pc, [ip, #2408]!	; 0x968

000116cc <fflush@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #135168	; 0x21000
   116d4:	ldr	pc, [ip, #2400]!	; 0x960

000116d8 <utmpxname@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #135168	; 0x21000
   116e0:	ldr	pc, [ip, #2392]!	; 0x958

000116e4 <sigprocmask@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #135168	; 0x21000
   116ec:	ldr	pc, [ip, #2384]!	; 0x950

000116f0 <memmove@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #135168	; 0x21000
   116f8:	ldr	pc, [ip, #2376]!	; 0x948

000116fc <strchrnul@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #135168	; 0x21000
   11704:	ldr	pc, [ip, #2368]!	; 0x940

00011708 <free@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #135168	; 0x21000
   11710:	ldr	pc, [ip, #2360]!	; 0x938

00011714 <gai_strerror@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #135168	; 0x21000
   1171c:	ldr	pc, [ip, #2352]!	; 0x930

00011720 <fgets@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #135168	; 0x21000
   11728:	ldr	pc, [ip, #2344]!	; 0x928

0001172c <strndup@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #135168	; 0x21000
   11734:	ldr	pc, [ip, #2336]!	; 0x920

00011738 <_exit@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #135168	; 0x21000
   11740:	ldr	pc, [ip, #2328]!	; 0x918

00011744 <memcpy@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #135168	; 0x21000
   1174c:	ldr	pc, [ip, #2320]!	; 0x910

00011750 <signal@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #135168	; 0x21000
   11758:	ldr	pc, [ip, #2312]!	; 0x908

0001175c <time@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #135168	; 0x21000
   11764:	ldr	pc, [ip, #2304]!	; 0x900

00011768 <fwrite_unlocked@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #135168	; 0x21000
   11770:	ldr	pc, [ip, #2296]!	; 0x8f8

00011774 <sleep@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #135168	; 0x21000
   1177c:	ldr	pc, [ip, #2288]!	; 0x8f0

00011780 <stpcpy@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #135168	; 0x21000
   11788:	ldr	pc, [ip, #2280]!	; 0x8e8

0001178c <ctime@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #135168	; 0x21000
   11794:	ldr	pc, [ip, #2272]!	; 0x8e0

00011798 <recvfrom@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #135168	; 0x21000
   117a0:	ldr	pc, [ip, #2264]!	; 0x8d8

000117a4 <strdup@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #135168	; 0x21000
   117ac:	ldr	pc, [ip, #2256]!	; 0x8d0

000117b0 <setutxent@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #135168	; 0x21000
   117b8:	ldr	pc, [ip, #2248]!	; 0x8c8

000117bc <alarm@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #135168	; 0x21000
   117c4:	ldr	pc, [ip, #2240]!	; 0x8c0

000117c8 <sysconf@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #135168	; 0x21000
   117d0:	ldr	pc, [ip, #2232]!	; 0x8b8

000117d4 <unlink@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #135168	; 0x21000
   117dc:	ldr	pc, [ip, #2224]!	; 0x8b0

000117e0 <dup2@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #135168	; 0x21000
   117e8:	ldr	pc, [ip, #2216]!	; 0x8a8

000117ec <realloc@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #135168	; 0x21000
   117f4:	ldr	pc, [ip, #2208]!	; 0x8a0

000117f8 <chdir@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #135168	; 0x21000
   11800:	ldr	pc, [ip, #2200]!	; 0x898

00011804 <strcasecmp@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #135168	; 0x21000
   1180c:	ldr	pc, [ip, #2192]!	; 0x890

00011810 <funlockfile@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #135168	; 0x21000
   11818:	ldr	pc, [ip, #2184]!	; 0x888

0001181c <poll@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #135168	; 0x21000
   11824:	ldr	pc, [ip, #2176]!	; 0x880

00011828 <sigaction@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #135168	; 0x21000
   11830:	ldr	pc, [ip, #2168]!	; 0x878

00011834 <fwrite@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #135168	; 0x21000
   1183c:	ldr	pc, [ip, #2160]!	; 0x870

00011840 <waitpid@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #135168	; 0x21000
   11848:	ldr	pc, [ip, #2152]!	; 0x868

0001184c <strcpy@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #135168	; 0x21000
   11854:	ldr	pc, [ip, #2144]!	; 0x860

00011858 <error@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #135168	; 0x21000
   11860:	ldr	pc, [ip, #2136]!	; 0x858

00011864 <gethostname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #135168	; 0x21000
   1186c:	ldr	pc, [ip, #2128]!	; 0x850

00011870 <opendir@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #135168	; 0x21000
   11878:	ldr	pc, [ip, #2120]!	; 0x848

0001187c <open64@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #135168	; 0x21000
   11884:	ldr	pc, [ip, #2112]!	; 0x840

00011888 <getenv@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #135168	; 0x21000
   11890:	ldr	pc, [ip, #2104]!	; 0x838

00011894 <malloc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #135168	; 0x21000
   1189c:	ldr	pc, [ip, #2096]!	; 0x830

000118a0 <sigaddset@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #135168	; 0x21000
   118a8:	ldr	pc, [ip, #2088]!	; 0x828

000118ac <__libc_start_main@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #135168	; 0x21000
   118b4:	ldr	pc, [ip, #2080]!	; 0x820

000118b8 <strerror@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #135168	; 0x21000
   118c0:	ldr	pc, [ip, #2072]!	; 0x818

000118c4 <__ctype_tolower_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #135168	; 0x21000
   118cc:	ldr	pc, [ip, #2064]!	; 0x810

000118d0 <__gmon_start__@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #135168	; 0x21000
   118d8:	ldr	pc, [ip, #2056]!	; 0x808

000118dc <mempcpy@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #135168	; 0x21000
   118e4:	ldr	pc, [ip, #2048]!	; 0x800

000118e8 <kill@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #135168	; 0x21000
   118f0:	ldr	pc, [ip, #2040]!	; 0x7f8

000118f4 <__ctype_b_loc@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #135168	; 0x21000
   118fc:	ldr	pc, [ip, #2032]!	; 0x7f0

00011900 <getpid@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #135168	; 0x21000
   11908:	ldr	pc, [ip, #2024]!	; 0x7e8

0001190c <exit@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #135168	; 0x21000
   11914:	ldr	pc, [ip, #2016]!	; 0x7e0

00011918 <strlen@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #135168	; 0x21000
   11920:	ldr	pc, [ip, #2008]!	; 0x7d8

00011924 <setsid@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #135168	; 0x21000
   1192c:	ldr	pc, [ip, #2000]!	; 0x7d0

00011930 <strchr@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #135168	; 0x21000
   11938:	ldr	pc, [ip, #1992]!	; 0x7c8

0001193c <fprintf@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #135168	; 0x21000
   11944:	ldr	pc, [ip, #1984]!	; 0x7c0

00011948 <__errno_location@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #135168	; 0x21000
   11950:	ldr	pc, [ip, #1976]!	; 0x7b8

00011954 <snprintf@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #135168	; 0x21000
   1195c:	ldr	pc, [ip, #1968]!	; 0x7b0

00011960 <strerror_r@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #135168	; 0x21000
   11968:	ldr	pc, [ip, #1960]!	; 0x7a8

0001196c <bind@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #135168	; 0x21000
   11974:	ldr	pc, [ip, #1952]!	; 0x7a0

00011978 <setvbuf@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #135168	; 0x21000
   11980:	ldr	pc, [ip, #1944]!	; 0x798

00011984 <memset@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #135168	; 0x21000
   1198c:	ldr	pc, [ip, #1936]!	; 0x790

00011990 <strncpy@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #135168	; 0x21000
   11998:	ldr	pc, [ip, #1928]!	; 0x788

0001199c <asprintf@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #135168	; 0x21000
   119a4:	ldr	pc, [ip, #1920]!	; 0x780

000119a8 <memchr@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #135168	; 0x21000
   119b0:	ldr	pc, [ip, #1912]!	; 0x778

000119b4 <writev@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #135168	; 0x21000
   119bc:	ldr	pc, [ip, #1904]!	; 0x770

000119c0 <fclose@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #135168	; 0x21000
   119c8:	ldr	pc, [ip, #1896]!	; 0x768

000119cc <fcntl64@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #135168	; 0x21000
   119d4:	ldr	pc, [ip, #1888]!	; 0x760

000119d8 <sendto@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #135168	; 0x21000
   119e0:	ldr	pc, [ip, #1880]!	; 0x758

000119e4 <endutxent@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #135168	; 0x21000
   119ec:	ldr	pc, [ip, #1872]!	; 0x750

000119f0 <__overflow@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #135168	; 0x21000
   119f8:	ldr	pc, [ip, #1864]!	; 0x748

000119fc <sigemptyset@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #135168	; 0x21000
   11a04:	ldr	pc, [ip, #1856]!	; 0x740

00011a08 <fork@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #135168	; 0x21000
   11a10:	ldr	pc, [ip, #1848]!	; 0x738

00011a14 <getnameinfo@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #135168	; 0x21000
   11a1c:	ldr	pc, [ip, #1840]!	; 0x730

00011a20 <strrchr@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #135168	; 0x21000
   11a28:	ldr	pc, [ip, #1832]!	; 0x728

00011a2c <vfprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #135168	; 0x21000
   11a34:	ldr	pc, [ip, #1824]!	; 0x720

00011a38 <fputc@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #135168	; 0x21000
   11a40:	ldr	pc, [ip, #1816]!	; 0x718

00011a44 <readdir64@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #135168	; 0x21000
   11a4c:	ldr	pc, [ip, #1808]!	; 0x710

00011a50 <flockfile@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #135168	; 0x21000
   11a58:	ldr	pc, [ip, #1800]!	; 0x708

00011a5c <vsnprintf@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #135168	; 0x21000
   11a64:	ldr	pc, [ip, #1792]!	; 0x700

00011a68 <fopen64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #135168	; 0x21000
   11a70:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a74 <qsort@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #135168	; 0x21000
   11a7c:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a80 <strpbrk@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #135168	; 0x21000
   11a88:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a8c <freeaddrinfo@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #135168	; 0x21000
   11a94:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a98 <getaddrinfo@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #135168	; 0x21000
   11aa0:	ldr	pc, [ip, #1752]!	; 0x6d8

00011aa4 <socket@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #135168	; 0x21000
   11aac:	ldr	pc, [ip, #1744]!	; 0x6d0

00011ab0 <chmod@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #135168	; 0x21000
   11ab8:	ldr	pc, [ip, #1736]!	; 0x6c8

00011abc <__xstat64@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #135168	; 0x21000
   11ac4:	ldr	pc, [ip, #1728]!	; 0x6c0

00011ac8 <isatty@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #135168	; 0x21000
   11ad0:	ldr	pc, [ip, #1720]!	; 0x6b8

00011ad4 <strncmp@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #135168	; 0x21000
   11adc:	ldr	pc, [ip, #1712]!	; 0x6b0

00011ae0 <abort@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #135168	; 0x21000
   11ae8:	ldr	pc, [ip, #1704]!	; 0x6a8

00011aec <getutxent@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #135168	; 0x21000
   11af4:	ldr	pc, [ip, #1696]!	; 0x6a0

00011af8 <close@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #135168	; 0x21000
   11b00:	ldr	pc, [ip, #1688]!	; 0x698

00011b04 <closedir@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #135168	; 0x21000
   11b0c:	ldr	pc, [ip, #1680]!	; 0x690

00011b10 <__assert_fail@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #135168	; 0x21000
   11b18:	ldr	pc, [ip, #1672]!	; 0x688

Disassembly of section .text:

00011b1c <daemon@@Base-0x4664>:
   11b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b20:	sub	sp, sp, #2480	; 0x9b0
   11b24:	ldr	r7, [pc, #4060]	; 12b08 <__assert_fail@plt+0xff8>
   11b28:	sub	sp, sp, #4
   11b2c:	mov	r5, r0
   11b30:	ldr	r0, [r1]
   11b34:	mov	r4, r1
   11b38:	bl	1cb58 <argp_parse@@Base+0x1258>
   11b3c:	ldr	r1, [r7]
   11b40:	ldr	r3, [pc, #4036]	; 12b0c <__assert_fail@plt+0xffc>
   11b44:	add	r1, r1, #1
   11b48:	ldr	r0, [r3]
   11b4c:	lsl	r1, r1, #3
   11b50:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   11b54:	ldr	r3, [pc, #4016]	; 12b0c <__assert_fail@plt+0xffc>
   11b58:	cmp	r0, #0
   11b5c:	str	r0, [r3]
   11b60:	movne	r3, r0
   11b64:	bne	11b84 <__assert_fail@plt+0x74>
   11b68:	bl	11948 <__errno_location@plt>
   11b6c:	ldr	r2, [pc, #3996]	; 12b10 <__assert_fail@plt+0x1000>
   11b70:	ldr	r1, [r0]
   11b74:	mov	r0, #1
   11b78:	bl	11858 <error@plt>
   11b7c:	ldr	r3, [pc, #3976]	; 12b0c <__assert_fail@plt+0xffc>
   11b80:	ldr	r3, [r3]
   11b84:	ldr	r2, [r7]
   11b88:	ldr	r1, [pc, #3972]	; 12b14 <__assert_fail@plt+0x1004>
   11b8c:	ldr	ip, [pc, #3972]	; 12b18 <__assert_fail@plt+0x1008>
   11b90:	str	r1, [r3, r2, lsl #3]
   11b94:	add	r3, r3, r2, lsl #3
   11b98:	mvn	r1, #0
   11b9c:	str	r1, [r3, #4]
   11ba0:	ldr	r3, [pc, #3956]	; 12b1c <__assert_fail@plt+0x100c>
   11ba4:	add	r2, r2, #1
   11ba8:	ldr	r1, [pc, #3952]	; 12b20 <__assert_fail@plt+0x1010>
   11bac:	ldr	r0, [pc, #3952]	; 12b24 <__assert_fail@plt+0x1014>
   11bb0:	str	r3, [ip]
   11bb4:	str	r2, [r7]
   11bb8:	bl	1c7a8 <argp_parse@@Base+0xea8>
   11bbc:	mov	r3, #0
   11bc0:	mov	r2, r4
   11bc4:	mov	r1, r5
   11bc8:	str	r3, [sp, #4]
   11bcc:	str	r3, [sp]
   11bd0:	ldr	r0, [pc, #3920]	; 12b28 <__assert_fail@plt+0x1018>
   11bd4:	bl	1b900 <argp_parse@@Base>
   11bd8:	ldr	r3, [pc, #3916]	; 12b2c <__assert_fail@plt+0x101c>
   11bdc:	ldr	r0, [r3, #12]
   11be0:	bl	15f04 <__assert_fail@plt+0x43f4>
   11be4:	ldr	r3, [pc, #3908]	; 12b30 <__assert_fail@plt+0x1020>
   11be8:	ldr	r4, [r3]
   11bec:	cmp	r4, #0
   11bf0:	beq	12190 <__assert_fail@plt+0x680>
   11bf4:	ldr	r3, [pc, #3896]	; 12b34 <__assert_fail@plt+0x1024>
   11bf8:	ldr	r3, [r3]
   11bfc:	cmp	r3, #0
   11c00:	movne	r3, #1
   11c04:	ldrne	r2, [pc, #3872]	; 12b2c <__assert_fail@plt+0x101c>
   11c08:	strne	r3, [r2, #4]
   11c0c:	ldr	r2, [pc, #3876]	; 12b38 <__assert_fail@plt+0x1028>
   11c10:	mov	r3, #0
   11c14:	mov	r1, r3
   11c18:	ldr	r0, [r2]
   11c1c:	mov	r2, #1
   11c20:	bl	11978 <setvbuf@plt>
   11c24:	mov	r3, #0
   11c28:	str	r3, [sp, #20]
   11c2c:	bl	162ac <daemon@@Base+0x12c>
   11c30:	ldr	r3, [pc, #3844]	; 12b3c <__assert_fail@plt+0x102c>
   11c34:	cmp	r0, #0
   11c38:	mov	r5, r0
   11c3c:	str	r0, [r3]
   11c40:	bne	11c60 <__assert_fail@plt+0x150>
   11c44:	bl	11948 <__errno_location@plt>
   11c48:	ldr	r2, [pc, #3824]	; 12b40 <__assert_fail@plt+0x1030>
   11c4c:	ldr	r1, [r0]
   11c50:	mov	r0, #1
   11c54:	bl	11858 <error@plt>
   11c58:	ldr	r3, [pc, #3804]	; 12b3c <__assert_fail@plt+0x102c>
   11c5c:	ldr	r5, [r3]
   11c60:	mov	r1, #46	; 0x2e
   11c64:	mov	r0, r5
   11c68:	bl	11930 <strchr@plt>
   11c6c:	subs	r4, r0, #0
   11c70:	beq	12120 <__assert_fail@plt+0x610>
   11c74:	ldr	r3, [pc, #3784]	; 12b44 <__assert_fail@plt+0x1034>
   11c78:	mov	r2, #0
   11c7c:	add	sl, sp, #1440	; 0x5a0
   11c80:	strb	r2, [r4], #1
   11c84:	add	sl, sl, #12
   11c88:	str	r4, [r3]
   11c8c:	add	r3, sp, #432	; 0x1b0
   11c90:	str	r3, [sp, #40]	; 0x28
   11c94:	add	r3, sp, #424	; 0x1a8
   11c98:	str	r3, [sp, #24]
   11c9c:	ldr	r6, [pc, #3748]	; 12b48 <__assert_fail@plt+0x1038>
   11ca0:	mov	r5, #3
   11ca4:	ldr	r0, [pc, #3744]	; 12b4c <__assert_fail@plt+0x103c>
   11ca8:	strh	r5, [r6, #4]
   11cac:	bl	117a4 <strdup@plt>
   11cb0:	ldr	r1, [pc, #3736]	; 12b50 <__assert_fail@plt+0x1040>
   11cb4:	mov	r4, r1
   11cb8:	str	r0, [r6, #40]	; 0x28
   11cbc:	mov	r0, #15
   11cc0:	bl	11750 <signal@plt>
   11cc4:	ldr	r3, [pc, #3684]	; 12b30 <__assert_fail@plt+0x1020>
   11cc8:	mov	r0, #2
   11ccc:	ldr	r1, [r3]
   11cd0:	cmp	r1, #0
   11cd4:	movne	r1, r4
   11cd8:	moveq	r1, #1
   11cdc:	bl	11750 <signal@plt>
   11ce0:	ldr	r3, [pc, #3656]	; 12b30 <__assert_fail@plt+0x1020>
   11ce4:	mov	r0, r5
   11ce8:	ldr	r1, [r3]
   11cec:	cmp	r1, #0
   11cf0:	movne	r1, r4
   11cf4:	moveq	r1, #1
   11cf8:	bl	11750 <signal@plt>
   11cfc:	add	r0, sp, #288	; 0x120
   11d00:	mov	r3, #268435456	; 0x10000000
   11d04:	sub	r2, r0, #4
   11d08:	str	r2, [sp, #32]
   11d0c:	str	r3, [sp, #416]	; 0x1a0
   11d10:	bl	119fc <sigemptyset@plt>
   11d14:	ldr	r3, [pc, #3640]	; 12b54 <__assert_fail@plt+0x1044>
   11d18:	ldr	r1, [sp, #32]
   11d1c:	mov	r2, #0
   11d20:	mov	r0, #14
   11d24:	str	r3, [sp, #284]	; 0x11c
   11d28:	bl	11828 <sigaction@plt>
   11d2c:	ldr	r3, [pc, #3580]	; 12b30 <__assert_fail@plt+0x1020>
   11d30:	ldr	r1, [sp, #32]
   11d34:	mov	r0, #10
   11d38:	ldr	r2, [r3]
   11d3c:	ldr	r3, [pc, #3604]	; 12b58 <__assert_fail@plt+0x1048>
   11d40:	cmp	r2, #0
   11d44:	moveq	r3, #1
   11d48:	mov	r2, #0
   11d4c:	str	r3, [sp, #284]	; 0x11c
   11d50:	bl	11828 <sigaction@plt>
   11d54:	mov	r0, #30
   11d58:	bl	117bc <alarm@plt>
   11d5c:	ldr	r0, [r7]
   11d60:	add	r0, r0, r5
   11d64:	lsl	r0, r0, r5
   11d68:	bl	1e278 <argp_parse@@Base+0x2978>
   11d6c:	subs	r3, r0, #0
   11d70:	str	r3, [sp, #28]
   11d74:	bne	11d8c <__assert_fail@plt+0x27c>
   11d78:	bl	11948 <__errno_location@plt>
   11d7c:	ldr	r2, [pc, #3544]	; 12b5c <__assert_fail@plt+0x104c>
   11d80:	ldr	r1, [r0]
   11d84:	mov	r0, #1
   11d88:	bl	11858 <error@plt>
   11d8c:	mov	r0, #0
   11d90:	bl	15aa0 <__assert_fail@plt+0x3f90>
   11d94:	ldr	r3, [pc, #3524]	; 12b60 <__assert_fail@plt+0x1050>
   11d98:	ldr	r4, [r3]
   11d9c:	cmp	r4, #0
   11da0:	beq	12978 <__assert_fail@plt+0xe68>
   11da4:	ldr	r9, [pc, #3512]	; 12b64 <__assert_fail@plt+0x1054>
   11da8:	mov	r3, #0
   11dac:	str	r3, [sp, #12]
   11db0:	ldr	r3, [pc, #3504]	; 12b68 <__assert_fail@plt+0x1058>
   11db4:	ldr	r2, [r3]
   11db8:	cmp	r2, #0
   11dbc:	bne	1296c <__assert_fail@plt+0xe5c>
   11dc0:	ldr	r3, [r7]
   11dc4:	cmp	r3, #0
   11dc8:	beq	1296c <__assert_fail@plt+0xe5c>
   11dcc:	str	r9, [sp, #44]	; 0x2c
   11dd0:	ldr	r9, [sp, #24]
   11dd4:	mov	r8, r2
   11dd8:	add	r3, sp, #156	; 0x9c
   11ddc:	str	r3, [sp, #16]
   11de0:	ldr	r3, [pc, #3364]	; 12b0c <__assert_fail@plt+0xffc>
   11de4:	lsl	r4, r8, #3
   11de8:	ldr	r3, [r3]
   11dec:	ldr	r5, [r3, r8, lsl #3]
   11df0:	add	r3, r3, r4
   11df4:	str	r3, [sp, #36]	; 0x24
   11df8:	ldrb	r3, [r5]
   11dfc:	cmp	r3, #0
   11e00:	beq	1293c <__assert_fail@plt+0xe2c>
   11e04:	mov	r0, r5
   11e08:	bl	11918 <strlen@plt>
   11e0c:	cmp	r0, #107	; 0x6b
   11e10:	bhi	128bc <__assert_fail@plt+0xdac>
   11e14:	mov	r0, r5
   11e18:	bl	117d4 <unlink@plt>
   11e1c:	ldr	r3, [sp, #40]	; 0x28
   11e20:	mov	r2, #110	; 0x6e
   11e24:	sub	fp, r3, #6
   11e28:	mov	r1, #0
   11e2c:	mov	r0, r9
   11e30:	bl	11984 <memset@plt>
   11e34:	mov	r6, #1
   11e38:	mov	r2, #107	; 0x6b
   11e3c:	mov	r1, r5
   11e40:	mov	r0, fp
   11e44:	strh	r6, [r9]
   11e48:	bl	11990 <strncpy@plt>
   11e4c:	mov	r0, r6
   11e50:	mov	r2, #0
   11e54:	mov	r1, #2
   11e58:	bl	11aa4 <socket@plt>
   11e5c:	subs	r6, r0, #0
   11e60:	blt	12a38 <__assert_fail@plt+0xf28>
   11e64:	mov	r0, fp
   11e68:	bl	11918 <strlen@plt>
   11e6c:	mov	r1, r9
   11e70:	add	r2, r0, #2
   11e74:	mov	r0, r6
   11e78:	bl	1196c <bind@plt>
   11e7c:	cmp	r0, #0
   11e80:	blt	12a38 <__assert_fail@plt+0xf28>
   11e84:	ldr	r1, [pc, #3296]	; 12b6c <__assert_fail@plt+0x105c>
   11e88:	mov	r0, r5
   11e8c:	bl	11ab0 <chmod@plt>
   11e90:	cmp	r0, #0
   11e94:	blt	12a38 <__assert_fail@plt+0xf28>
   11e98:	ldr	r3, [pc, #3180]	; 12b0c <__assert_fail@plt+0xffc>
   11e9c:	ldr	r3, [r3]
   11ea0:	add	r4, r3, r4
   11ea4:	ldr	r3, [sp, #36]	; 0x24
   11ea8:	str	r6, [r3, #4]
   11eac:	ldr	r3, [r4, #4]
   11eb0:	cmp	r3, #0
   11eb4:	blt	129c0 <__assert_fail@plt+0xeb0>
   11eb8:	ldr	r5, [sp, #12]
   11ebc:	ldr	ip, [sp, #28]
   11ec0:	mov	r0, #3
   11ec4:	add	r2, ip, r5, lsl #3
   11ec8:	str	r3, [ip, r5, lsl #3]
   11ecc:	ldr	r1, [r4]
   11ed0:	strh	r0, [r2, #4]
   11ed4:	ldr	r0, [pc, #3220]	; 12b70 <__assert_fail@plt+0x1060>
   11ed8:	bl	12d3c <__assert_fail@plt+0x122c>
   11edc:	ldr	r3, [r7]
   11ee0:	add	r8, r8, #1
   11ee4:	cmp	r3, r8
   11ee8:	add	r3, r5, #1
   11eec:	str	r3, [sp, #12]
   11ef0:	bhi	11de0 <__assert_fail@plt+0x2d0>
   11ef4:	ldr	r9, [sp, #44]	; 0x2c
   11ef8:	ldr	r3, [pc, #3188]	; 12b74 <__assert_fail@plt+0x1064>
   11efc:	ldr	r3, [r3]
   11f00:	cmp	r3, #0
   11f04:	bne	12684 <__assert_fail@plt+0xb74>
   11f08:	ldr	r1, [pc, #3176]	; 12b78 <__assert_fail@plt+0x1068>
   11f0c:	ldr	r0, [r9, #12]
   11f10:	bl	11a68 <fopen64@plt>
   11f14:	subs	r4, r0, #0
   11f18:	beq	11f38 <__assert_fail@plt+0x428>
   11f1c:	bl	11900 <getpid@plt>
   11f20:	ldr	r1, [pc, #3156]	; 12b7c <__assert_fail@plt+0x106c>
   11f24:	mov	r2, r0
   11f28:	mov	r0, r4
   11f2c:	bl	1193c <fprintf@plt>
   11f30:	mov	r0, r4
   11f34:	bl	119c0 <fclose@plt>
   11f38:	ldr	r0, [pc, #3136]	; 12b80 <__assert_fail@plt+0x1070>
   11f3c:	bl	12d3c <__assert_fail@plt+0x122c>
   11f40:	ldr	r3, [pc, #3132]	; 12b84 <__assert_fail@plt+0x1074>
   11f44:	ldr	r1, [sp, #32]
   11f48:	mov	r2, #0
   11f4c:	mov	r0, #1
   11f50:	str	r3, [sp, #284]	; 0x11c
   11f54:	bl	11828 <sigaction@plt>
   11f58:	ldr	r3, [pc, #3024]	; 12b30 <__assert_fail@plt+0x1020>
   11f5c:	ldr	r3, [r3]
   11f60:	cmp	r3, #0
   11f64:	beq	11f90 <__assert_fail@plt+0x480>
   11f68:	ldr	r2, [pc, #3004]	; 12b2c <__assert_fail@plt+0x101c>
   11f6c:	mov	r3, #1
   11f70:	str	r3, [r2, #4]
   11f74:	bl	11900 <getpid@plt>
   11f78:	mov	r1, r0
   11f7c:	ldr	r0, [pc, #3076]	; 12b88 <__assert_fail@plt+0x1078>
   11f80:	bl	12d3c <__assert_fail@plt+0x122c>
   11f84:	ldr	r2, [pc, #2976]	; 12b2c <__assert_fail@plt+0x101c>
   11f88:	mov	r3, #0
   11f8c:	str	r3, [r2, #4]
   11f90:	ldr	r3, [sp, #20]
   11f94:	cmp	r3, #0
   11f98:	beq	11fa8 <__assert_fail@plt+0x498>
   11f9c:	mov	r0, r3
   11fa0:	mov	r1, #15
   11fa4:	bl	118e8 <kill@plt>
   11fa8:	ldr	r3, [sp, #28]
   11fac:	mov	r4, #0
   11fb0:	add	r3, r3, #6
   11fb4:	str	r3, [sp, #32]
   11fb8:	mvn	r2, #0
   11fbc:	ldr	r1, [sp, #12]
   11fc0:	ldr	r0, [sp, #28]
   11fc4:	bl	1181c <poll@plt>
   11fc8:	cmp	r0, #0
   11fcc:	beq	11fb8 <__assert_fail@plt+0x4a8>
   11fd0:	ldr	r3, [pc, #2900]	; 12b2c <__assert_fail@plt+0x101c>
   11fd4:	ldr	r3, [r3]
   11fd8:	cmp	r3, #0
   11fdc:	str	r3, [sp, #20]
   11fe0:	bne	12520 <__assert_fail@plt+0xa10>
   11fe4:	cmp	r0, #0
   11fe8:	blt	12540 <__assert_fail@plt+0xa30>
   11fec:	ldr	r3, [sp, #12]
   11ff0:	cmp	r3, #0
   11ff4:	beq	11fb8 <__assert_fail@plt+0x4a8>
   11ff8:	ldr	r7, [sp, #32]
   11ffc:	ldr	r8, [sp, #20]
   12000:	b	120a0 <__assert_fail@plt+0x590>
   12004:	ldr	r5, [r7, #-6]
   12008:	cmn	r5, #1
   1200c:	beq	1208c <__assert_fail@plt+0x57c>
   12010:	ldr	r3, [r9, #384]	; 0x180
   12014:	cmp	r5, r3
   12018:	beq	1238c <__assert_fail@plt+0x87c>
   1201c:	ldr	r3, [r9, #312]	; 0x138
   12020:	cmp	r5, r3
   12024:	beq	121d0 <__assert_fail@plt+0x6c0>
   12028:	ldr	r3, [r9, #316]	; 0x13c
   1202c:	cmp	r5, r3
   12030:	beq	121d0 <__assert_fail@plt+0x6c0>
   12034:	add	r3, sp, #52	; 0x34
   12038:	str	r3, [sp, #4]
   1203c:	mov	r0, r5
   12040:	ldr	r3, [sp, #16]
   12044:	ldr	r5, [sp, #24]
   12048:	str	r3, [sp]
   1204c:	mov	ip, #110	; 0x6e
   12050:	mov	r3, #0
   12054:	mov	r2, #1024	; 0x400
   12058:	mov	r1, r5
   1205c:	str	ip, [sp, #52]	; 0x34
   12060:	bl	11798 <recvfrom@plt>
   12064:	cmp	r0, #0
   12068:	ble	12334 <__assert_fail@plt+0x824>
   1206c:	add	r3, sp, #2480	; 0x9b0
   12070:	add	r0, r3, r0
   12074:	mov	r3, #0
   12078:	strb	r3, [r0, #-2056]	; 0xfffff7f8
   1207c:	ldr	r3, [pc, #2744]	; 12b3c <__assert_fail@plt+0x102c>
   12080:	mov	r1, r5
   12084:	ldr	r0, [r3]
   12088:	bl	14628 <__assert_fail@plt+0x2b18>
   1208c:	ldr	r3, [sp, #12]
   12090:	add	r8, r8, #1
   12094:	cmp	r3, r8
   12098:	add	r7, r7, #8
   1209c:	beq	11fb8 <__assert_fail@plt+0x4a8>
   120a0:	ldrh	r3, [r7]
   120a4:	tst	r3, #3
   120a8:	bne	12004 <__assert_fail@plt+0x4f4>
   120ac:	tst	r3, #32
   120b0:	bne	12240 <__assert_fail@plt+0x730>
   120b4:	tst	r3, #8
   120b8:	bne	122a4 <__assert_fail@plt+0x794>
   120bc:	tst	r3, #16
   120c0:	beq	1208c <__assert_fail@plt+0x57c>
   120c4:	bl	11948 <__errno_location@plt>
   120c8:	mov	r5, r0
   120cc:	ldr	r0, [r0]
   120d0:	cmp	r0, #0
   120d4:	bne	12514 <__assert_fail@plt+0xa04>
   120d8:	ldr	r3, [pc, #2732]	; 12b8c <__assert_fail@plt+0x107c>
   120dc:	ldr	r2, [pc, #2732]	; 12b90 <__assert_fail@plt+0x1080>
   120e0:	mov	r1, #100	; 0x64
   120e4:	ldr	r0, [sp, #16]
   120e8:	bl	11954 <snprintf@plt>
   120ec:	mov	r3, #0
   120f0:	str	r3, [r5]
   120f4:	ldr	r5, [sp, #16]
   120f8:	ldr	r0, [pc, #2708]	; 12b94 <__assert_fail@plt+0x1084>
   120fc:	mov	r1, r5
   12100:	bl	12d3c <__assert_fail@plt+0x122c>
   12104:	ldr	r2, [pc, #2608]	; 12b3c <__assert_fail@plt+0x102c>
   12108:	mov	r3, #4
   1210c:	mov	r1, r5
   12110:	ldr	r2, [r2]
   12114:	mov	r0, #43	; 0x2b
   12118:	bl	14100 <__assert_fail@plt+0x25f0>
   1211c:	b	1208c <__assert_fail@plt+0x57c>
   12120:	add	r3, sp, #1456	; 0x5b0
   12124:	sub	sl, r3, #4
   12128:	add	r3, sp, #432	; 0x1b0
   1212c:	str	r3, [sp, #40]	; 0x28
   12130:	add	r3, sp, #424	; 0x1a8
   12134:	mov	r2, #32
   12138:	mov	r1, r4
   1213c:	mov	r6, r3
   12140:	mov	r0, sl
   12144:	str	r3, [sp, #24]
   12148:	bl	11984 <memset@plt>
   1214c:	mov	r0, r5
   12150:	mov	ip, #2
   12154:	mov	r1, r4
   12158:	mov	r2, sl
   1215c:	mov	r3, r6
   12160:	str	ip, [sp, #1452]	; 0x5ac
   12164:	bl	11a98 <getaddrinfo@plt>
   12168:	subs	r5, r0, #0
   1216c:	beq	129f4 <__assert_fail@plt+0xee4>
   12170:	ldr	r6, [pc, #2508]	; 12b44 <__assert_fail@plt+0x1034>
   12174:	ldr	r3, [r6]
   12178:	cmp	r3, #0
   1217c:	bne	11c9c <__assert_fail@plt+0x18c>
   12180:	ldr	r0, [pc, #2576]	; 12b98 <__assert_fail@plt+0x1088>
   12184:	bl	117a4 <strdup@plt>
   12188:	str	r0, [r6]
   1218c:	b	11c9c <__assert_fail@plt+0x18c>
   12190:	ldr	r1, [pc, #2564]	; 12b9c <__assert_fail@plt+0x108c>
   12194:	mov	r0, #15
   12198:	bl	11750 <signal@plt>
   1219c:	mov	r2, #30
   121a0:	mov	r1, r4
   121a4:	mov	r0, r4
   121a8:	bl	16034 <__assert_fail@plt+0x4524>
   121ac:	subs	r3, r0, #0
   121b0:	str	r3, [sp, #20]
   121b4:	bge	11c2c <__assert_fail@plt+0x11c>
   121b8:	bl	11948 <__errno_location@plt>
   121bc:	ldr	r2, [pc, #2524]	; 12ba0 <__assert_fail@plt+0x1090>
   121c0:	ldr	r1, [r0]
   121c4:	mov	r0, #1
   121c8:	bl	11858 <error@plt>
   121cc:	b	11c2c <__assert_fail@plt+0x11c>
   121d0:	ldr	r6, [sp, #24]
   121d4:	mov	r3, #128	; 0x80
   121d8:	ldr	r2, [pc, #2500]	; 12ba4 <__assert_fail@plt+0x1094>
   121dc:	mov	r1, #0
   121e0:	mov	r0, r6
   121e4:	str	r3, [sp, #52]	; 0x34
   121e8:	bl	11984 <memset@plt>
   121ec:	ldr	fp, [sp, #16]
   121f0:	add	r3, sp, #52	; 0x34
   121f4:	str	r3, [sp, #4]
   121f8:	str	fp, [sp]
   121fc:	mov	r0, r5
   12200:	mov	r3, #0
   12204:	mov	r2, #1024	; 0x400
   12208:	mov	r1, r6
   1220c:	bl	11798 <recvfrom@plt>
   12210:	cmp	r0, #0
   12214:	ble	122d0 <__assert_fail@plt+0x7c0>
   12218:	add	r3, sp, #2480	; 0x9b0
   1221c:	add	r0, r3, r0
   12220:	mov	r3, #0
   12224:	ldr	r1, [sp, #52]	; 0x34
   12228:	strb	r3, [r0, #-2056]	; 0xfffff7f8
   1222c:	mov	r0, fp
   12230:	bl	149d4 <__assert_fail@plt+0x2ec4>
   12234:	mov	r1, r6
   12238:	bl	14628 <__assert_fail@plt+0x2b18>
   1223c:	b	1208c <__assert_fail@plt+0x57c>
   12240:	bl	11948 <__errno_location@plt>
   12244:	mov	r5, r0
   12248:	ldr	r0, [r0]
   1224c:	cmp	r0, #0
   12250:	bne	1236c <__assert_fail@plt+0x85c>
   12254:	ldr	r3, [pc, #2380]	; 12ba8 <__assert_fail@plt+0x1098>
   12258:	ldr	r2, [pc, #2352]	; 12b90 <__assert_fail@plt+0x1080>
   1225c:	mov	r1, #100	; 0x64
   12260:	ldr	r0, [sp, #16]
   12264:	bl	11954 <snprintf@plt>
   12268:	mov	r3, #0
   1226c:	str	r3, [r5]
   12270:	ldr	r5, [sp, #16]
   12274:	ldr	r0, [pc, #2328]	; 12b94 <__assert_fail@plt+0x1084>
   12278:	mov	r1, r5
   1227c:	bl	12d3c <__assert_fail@plt+0x122c>
   12280:	ldr	r2, [pc, #2228]	; 12b3c <__assert_fail@plt+0x102c>
   12284:	mov	r3, #4
   12288:	mov	r1, r5
   1228c:	ldr	r2, [r2]
   12290:	mov	r0, #43	; 0x2b
   12294:	bl	14100 <__assert_fail@plt+0x25f0>
   12298:	mvn	r3, #0
   1229c:	str	r3, [r7, #-6]
   122a0:	b	1208c <__assert_fail@plt+0x57c>
   122a4:	bl	11948 <__errno_location@plt>
   122a8:	mov	r5, r0
   122ac:	ldr	r0, [r0]
   122b0:	cmp	r0, #0
   122b4:	bne	124f4 <__assert_fail@plt+0x9e4>
   122b8:	ldr	r3, [pc, #2284]	; 12bac <__assert_fail@plt+0x109c>
   122bc:	ldr	r2, [pc, #2252]	; 12b90 <__assert_fail@plt+0x1080>
   122c0:	mov	r1, #100	; 0x64
   122c4:	ldr	r0, [sp, #16]
   122c8:	bl	11954 <snprintf@plt>
   122cc:	b	120ec <__assert_fail@plt+0x5dc>
   122d0:	beq	1208c <__assert_fail@plt+0x57c>
   122d4:	bl	11948 <__errno_location@plt>
   122d8:	mov	r5, r0
   122dc:	ldr	r0, [r0]
   122e0:	cmp	r0, #4
   122e4:	beq	1208c <__assert_fail@plt+0x57c>
   122e8:	cmp	r0, #0
   122ec:	bne	12618 <__assert_fail@plt+0xb08>
   122f0:	ldr	r3, [pc, #2232]	; 12bb0 <__assert_fail@plt+0x10a0>
   122f4:	ldr	r2, [pc, #2196]	; 12b90 <__assert_fail@plt+0x1080>
   122f8:	mov	r1, #100	; 0x64
   122fc:	add	r0, sp, #56	; 0x38
   12300:	bl	11954 <snprintf@plt>
   12304:	mov	r3, #0
   12308:	str	r3, [r5]
   1230c:	add	r1, sp, #56	; 0x38
   12310:	ldr	r0, [pc, #2172]	; 12b94 <__assert_fail@plt+0x1084>
   12314:	bl	12d3c <__assert_fail@plt+0x122c>
   12318:	ldr	r2, [pc, #2076]	; 12b3c <__assert_fail@plt+0x102c>
   1231c:	mov	r3, #4
   12320:	add	r1, sp, #56	; 0x38
   12324:	ldr	r2, [r2]
   12328:	mov	r0, #43	; 0x2b
   1232c:	bl	14100 <__assert_fail@plt+0x25f0>
   12330:	b	1208c <__assert_fail@plt+0x57c>
   12334:	beq	1208c <__assert_fail@plt+0x57c>
   12338:	bl	11948 <__errno_location@plt>
   1233c:	mov	r5, r0
   12340:	ldr	r0, [r0]
   12344:	cmp	r0, #4
   12348:	beq	1208c <__assert_fail@plt+0x57c>
   1234c:	cmp	r0, #0
   12350:	bne	12658 <__assert_fail@plt+0xb48>
   12354:	ldr	r3, [pc, #2136]	; 12bb4 <__assert_fail@plt+0x10a4>
   12358:	ldr	r2, [pc, #2096]	; 12b90 <__assert_fail@plt+0x1080>
   1235c:	mov	r1, #100	; 0x64
   12360:	add	r0, sp, #56	; 0x38
   12364:	bl	11954 <snprintf@plt>
   12368:	b	12304 <__assert_fail@plt+0x7f4>
   1236c:	bl	118b8 <strerror@plt>
   12370:	ldr	r3, [pc, #2096]	; 12ba8 <__assert_fail@plt+0x1098>
   12374:	ldr	r2, [pc, #2108]	; 12bb8 <__assert_fail@plt+0x10a8>
   12378:	mov	r1, #100	; 0x64
   1237c:	str	r0, [sp]
   12380:	ldr	r0, [sp, #16]
   12384:	bl	11954 <snprintf@plt>
   12388:	b	12268 <__assert_fail@plt+0x758>
   1238c:	rsb	r2, r4, #1024	; 0x400
   12390:	add	r1, sl, r4
   12394:	mov	r0, r5
   12398:	bl	116c0 <read@plt>
   1239c:	cmp	r0, #0
   123a0:	addgt	r4, r4, r0
   123a4:	ble	125a4 <__assert_fail@plt+0xa94>
   123a8:	mov	r6, #0
   123ac:	mov	r5, #10
   123b0:	add	r3, sp, #2480	; 0x9b0
   123b4:	add	r3, r3, r4
   123b8:	mov	r1, r5
   123bc:	mov	r0, sl
   123c0:	strb	r6, [r3, #-1028]	; 0xfffffbfc
   123c4:	bl	11930 <strchr@plt>
   123c8:	cmp	r0, #0
   123cc:	beq	124ec <__assert_fail@plt+0x9dc>
   123d0:	mov	r3, sl
   123d4:	add	fp, r0, #1
   123d8:	sub	r2, fp, r3
   123dc:	strb	r6, [r0]
   123e0:	mov	r0, r3
   123e4:	sub	r4, r4, r2
   123e8:	bl	14778 <__assert_fail@plt+0x2c68>
   123ec:	mov	r1, r5
   123f0:	mov	r0, fp
   123f4:	bl	11930 <strchr@plt>
   123f8:	mov	r3, fp
   123fc:	cmp	r0, #0
   12400:	bne	123d4 <__assert_fail@plt+0x8c4>
   12404:	cmp	r4, #0
   12408:	beq	1243c <__assert_fail@plt+0x92c>
   1240c:	ldrb	r3, [fp]
   12410:	cmp	r3, #0
   12414:	bne	12444 <__assert_fail@plt+0x934>
   12418:	add	r3, fp, #1
   1241c:	b	12430 <__assert_fail@plt+0x920>
   12420:	ldrb	r2, [r3]
   12424:	add	r3, r3, #1
   12428:	cmp	r2, #0
   1242c:	bne	12444 <__assert_fail@plt+0x934>
   12430:	subs	r4, r4, #1
   12434:	mov	fp, r3
   12438:	bne	12420 <__assert_fail@plt+0x910>
   1243c:	ldr	r4, [sp, #20]
   12440:	b	1208c <__assert_fail@plt+0x57c>
   12444:	cmp	fp, sl
   12448:	beq	12460 <__assert_fail@plt+0x950>
   1244c:	mov	r1, fp
   12450:	mov	r2, r4
   12454:	mov	r0, sl
   12458:	bl	116f0 <memmove@plt>
   1245c:	b	123b0 <__assert_fail@plt+0x8a0>
   12460:	ldr	r3, [pc, #1876]	; 12bbc <__assert_fail@plt+0x10ac>
   12464:	cmp	r4, r3
   12468:	ble	1208c <__assert_fail@plt+0x57c>
   1246c:	mov	r0, sl
   12470:	bl	14778 <__assert_fail@plt+0x2c68>
   12474:	ldrb	r3, [sp, #1452]	; 0x5ac
   12478:	cmp	r3, #60	; 0x3c
   1247c:	beq	124a4 <__assert_fail@plt+0x994>
   12480:	mov	r1, r5
   12484:	mov	r0, sl
   12488:	strb	r6, [sp, #1452]	; 0x5ac
   1248c:	bl	11930 <strchr@plt>
   12490:	ldr	r4, [sp, #20]
   12494:	cmp	r0, #0
   12498:	bne	123d0 <__assert_fail@plt+0x8c0>
   1249c:	ldr	r4, [sp, #20]
   124a0:	b	1208c <__assert_fail@plt+0x57c>
   124a4:	bl	118f4 <__ctype_b_loc@plt>
   124a8:	ldrb	r3, [sp, #1453]	; 0x5ad
   124ac:	lsl	r3, r3, #1
   124b0:	ldr	r2, [r0]
   124b4:	ldrh	r3, [r2, r3]
   124b8:	tst	r3, #2048	; 0x800
   124bc:	beq	12480 <__assert_fail@plt+0x970>
   124c0:	ldrb	r3, [sp, #1454]	; 0x5ae
   124c4:	cmp	r3, #62	; 0x3e
   124c8:	bne	12480 <__assert_fail@plt+0x970>
   124cc:	mov	r1, r5
   124d0:	mov	r0, sl
   124d4:	strb	r6, [sp, #1455]	; 0x5af
   124d8:	bl	11930 <strchr@plt>
   124dc:	mov	r4, #3
   124e0:	cmp	r0, #0
   124e4:	bne	123d0 <__assert_fail@plt+0x8c0>
   124e8:	b	1208c <__assert_fail@plt+0x57c>
   124ec:	mov	fp, sl
   124f0:	b	12404 <__assert_fail@plt+0x8f4>
   124f4:	bl	118b8 <strerror@plt>
   124f8:	ldr	r3, [pc, #1708]	; 12bac <__assert_fail@plt+0x109c>
   124fc:	str	r0, [sp]
   12500:	ldr	r2, [pc, #1712]	; 12bb8 <__assert_fail@plt+0x10a8>
   12504:	mov	r1, #100	; 0x64
   12508:	ldr	r0, [sp, #16]
   1250c:	bl	11954 <snprintf@plt>
   12510:	b	120ec <__assert_fail@plt+0x5dc>
   12514:	bl	118b8 <strerror@plt>
   12518:	ldr	r3, [pc, #1644]	; 12b8c <__assert_fail@plt+0x107c>
   1251c:	b	124fc <__assert_fail@plt+0x9ec>
   12520:	ldr	r0, [pc, #1688]	; 12bc0 <__assert_fail@plt+0x10b0>
   12524:	bl	12d3c <__assert_fail@plt+0x122c>
   12528:	mov	r0, #0
   1252c:	bl	15aa0 <__assert_fail@plt+0x3f90>
   12530:	ldr	r2, [pc, #1524]	; 12b2c <__assert_fail@plt+0x101c>
   12534:	mov	r3, #0
   12538:	str	r3, [r2]
   1253c:	b	11fb8 <__assert_fail@plt+0x4a8>
   12540:	bl	11948 <__errno_location@plt>
   12544:	mov	r5, r0
   12548:	ldr	r0, [r0]
   1254c:	cmp	r0, #4
   12550:	beq	11fb8 <__assert_fail@plt+0x4a8>
   12554:	cmp	r0, #0
   12558:	bne	12638 <__assert_fail@plt+0xb28>
   1255c:	ldr	r3, [pc, #1632]	; 12bc4 <__assert_fail@plt+0x10b4>
   12560:	ldr	r2, [pc, #1576]	; 12b90 <__assert_fail@plt+0x1080>
   12564:	mov	r1, #100	; 0x64
   12568:	ldr	r0, [sp, #16]
   1256c:	bl	11954 <snprintf@plt>
   12570:	mov	r3, #0
   12574:	str	r3, [r5]
   12578:	ldr	r5, [sp, #16]
   1257c:	ldr	r0, [pc, #1552]	; 12b94 <__assert_fail@plt+0x1084>
   12580:	mov	r1, r5
   12584:	bl	12d3c <__assert_fail@plt+0x122c>
   12588:	ldr	r2, [pc, #1452]	; 12b3c <__assert_fail@plt+0x102c>
   1258c:	mov	r3, #4
   12590:	mov	r1, r5
   12594:	ldr	r2, [r2]
   12598:	mov	r0, #43	; 0x2b
   1259c:	bl	14100 <__assert_fail@plt+0x25f0>
   125a0:	b	11fb8 <__assert_fail@plt+0x4a8>
   125a4:	beq	123a8 <__assert_fail@plt+0x898>
   125a8:	bl	11948 <__errno_location@plt>
   125ac:	mov	r5, r0
   125b0:	ldr	r0, [r0]
   125b4:	cmp	r0, #4
   125b8:	beq	123a8 <__assert_fail@plt+0x898>
   125bc:	cmp	r0, #0
   125c0:	bne	12664 <__assert_fail@plt+0xb54>
   125c4:	ldr	r3, [pc, #1532]	; 12bc8 <__assert_fail@plt+0x10b8>
   125c8:	ldr	r2, [pc, #1472]	; 12b90 <__assert_fail@plt+0x1080>
   125cc:	mov	r1, #100	; 0x64
   125d0:	ldr	r0, [sp, #16]
   125d4:	bl	11954 <snprintf@plt>
   125d8:	mov	r3, #0
   125dc:	str	r3, [r5]
   125e0:	ldr	r5, [sp, #16]
   125e4:	ldr	r0, [pc, #1448]	; 12b94 <__assert_fail@plt+0x1084>
   125e8:	mov	r1, r5
   125ec:	bl	12d3c <__assert_fail@plt+0x122c>
   125f0:	ldr	r2, [pc, #1348]	; 12b3c <__assert_fail@plt+0x102c>
   125f4:	mov	r3, #4
   125f8:	mov	r1, r5
   125fc:	ldr	r2, [r2]
   12600:	mov	r0, #43	; 0x2b
   12604:	bl	14100 <__assert_fail@plt+0x25f0>
   12608:	mvn	r3, #0
   1260c:	str	r3, [r9, #384]	; 0x180
   12610:	str	r3, [r7, #-6]
   12614:	b	123a8 <__assert_fail@plt+0x898>
   12618:	bl	118b8 <strerror@plt>
   1261c:	ldr	r3, [pc, #1420]	; 12bb0 <__assert_fail@plt+0x10a0>
   12620:	str	r0, [sp]
   12624:	ldr	r2, [pc, #1420]	; 12bb8 <__assert_fail@plt+0x10a8>
   12628:	mov	r1, #100	; 0x64
   1262c:	add	r0, sp, #56	; 0x38
   12630:	bl	11954 <snprintf@plt>
   12634:	b	12304 <__assert_fail@plt+0x7f4>
   12638:	bl	118b8 <strerror@plt>
   1263c:	ldr	r3, [pc, #1408]	; 12bc4 <__assert_fail@plt+0x10b4>
   12640:	ldr	r2, [pc, #1392]	; 12bb8 <__assert_fail@plt+0x10a8>
   12644:	mov	r1, #100	; 0x64
   12648:	str	r0, [sp]
   1264c:	ldr	r0, [sp, #16]
   12650:	bl	11954 <snprintf@plt>
   12654:	b	12570 <__assert_fail@plt+0xa60>
   12658:	bl	118b8 <strerror@plt>
   1265c:	ldr	r3, [pc, #1360]	; 12bb4 <__assert_fail@plt+0x10a4>
   12660:	b	12620 <__assert_fail@plt+0xb10>
   12664:	bl	118b8 <strerror@plt>
   12668:	ldr	r3, [pc, #1368]	; 12bc8 <__assert_fail@plt+0x10b8>
   1266c:	ldr	r2, [pc, #1348]	; 12bb8 <__assert_fail@plt+0x10a8>
   12670:	mov	r1, #100	; 0x64
   12674:	str	r0, [sp]
   12678:	ldr	r0, [sp, #16]
   1267c:	bl	11954 <snprintf@plt>
   12680:	b	125d8 <__assert_fail@plt+0xac8>
   12684:	ldr	r3, [pc, #1184]	; 12b2c <__assert_fail@plt+0x101c>
   12688:	ldr	r4, [r9, #4]
   1268c:	ldr	r6, [r3, #48]	; 0x30
   12690:	mvn	r3, #0
   12694:	cmp	r6, #0
   12698:	str	r3, [r9, #316]	; 0x13c
   1269c:	str	r3, [r9, #312]	; 0x138
   126a0:	beq	12890 <__assert_fail@plt+0xd80>
   126a4:	mov	r2, #32
   126a8:	mov	r1, #0
   126ac:	mov	r0, sl
   126b0:	bl	11984 <memset@plt>
   126b4:	ldr	r0, [pc, #1136]	; 12b2c <__assert_fail@plt+0x101c>
   126b8:	mov	r1, r6
   126bc:	mov	r5, #2
   126c0:	mov	r6, #1
   126c4:	ldr	r3, [sp, #16]
   126c8:	mov	r2, sl
   126cc:	ldr	r0, [r0, #8]
   126d0:	str	r4, [sp, #1456]	; 0x5b0
   126d4:	str	r5, [sp, #1460]	; 0x5b4
   126d8:	str	r6, [sp, #1452]	; 0x5ac
   126dc:	bl	11a98 <getaddrinfo@plt>
   126e0:	cmp	r0, #0
   126e4:	bne	12868 <__assert_fail@plt+0xd58>
   126e8:	ldr	r4, [sp, #156]	; 0x9c
   126ec:	cmp	r4, #0
   126f0:	beq	127a8 <__assert_fail@plt+0xc98>
   126f4:	mov	r8, #4
   126f8:	mov	fp, #26
   126fc:	mov	r7, #41	; 0x29
   12700:	str	r5, [sp, #36]	; 0x24
   12704:	str	r6, [sp, #424]	; 0x1a8
   12708:	ldmib	r4, {r0, r1, r2}
   1270c:	bl	11aa4 <socket@plt>
   12710:	subs	r5, r0, #0
   12714:	blt	12798 <__assert_fail@plt+0xc88>
   12718:	str	r8, [sp]
   1271c:	ldr	r3, [sp, #24]
   12720:	ldr	r2, [sp, #36]	; 0x24
   12724:	mov	r1, r6
   12728:	bl	1169c <setsockopt@plt>
   1272c:	cmp	r0, #0
   12730:	bge	1273c <__assert_fail@plt+0xc2c>
   12734:	ldr	r0, [pc, #1168]	; 12bcc <__assert_fail@plt+0x10bc>
   12738:	bl	14b6c <__assert_fail@plt+0x305c>
   1273c:	ldr	r3, [r4, #4]
   12740:	cmp	r3, #10
   12744:	bne	12760 <__assert_fail@plt+0xc50>
   12748:	str	r8, [sp]
   1274c:	ldr	r3, [sp, #24]
   12750:	mov	r2, fp
   12754:	mov	r1, r7
   12758:	mov	r0, r5
   1275c:	bl	1169c <setsockopt@plt>
   12760:	ldr	r2, [r4, #16]
   12764:	ldr	r1, [r4, #20]
   12768:	mov	r0, r5
   1276c:	bl	1196c <bind@plt>
   12770:	cmp	r0, #0
   12774:	blt	1284c <__assert_fail@plt+0xd3c>
   12778:	ldr	r3, [r4, #4]
   1277c:	cmp	r3, #2
   12780:	beq	12858 <__assert_fail@plt+0xd48>
   12784:	cmp	r3, #10
   12788:	bne	12798 <__assert_fail@plt+0xc88>
   1278c:	ldr	r3, [r9, #316]	; 0x13c
   12790:	cmp	r3, #0
   12794:	strlt	r5, [r9, #316]	; 0x13c
   12798:	ldr	r4, [r4, #28]
   1279c:	cmp	r4, #0
   127a0:	bne	12704 <__assert_fail@plt+0xbf4>
   127a4:	ldr	r4, [sp, #156]	; 0x9c
   127a8:	mov	r0, r4
   127ac:	bl	11a8c <freeaddrinfo@plt>
   127b0:	ldr	r3, [r9, #312]	; 0x138
   127b4:	cmp	r3, #0
   127b8:	blt	128a0 <__assert_fail@plt+0xd90>
   127bc:	ldr	ip, [sp, #12]
   127c0:	ldr	lr, [sp, #28]
   127c4:	mov	r1, #3
   127c8:	add	r2, lr, ip, lsl #3
   127cc:	str	r3, [lr, ip, lsl #3]
   127d0:	ldr	r0, [pc, #1016]	; 12bd0 <__assert_fail@plt+0x10c0>
   127d4:	add	r3, ip, #1
   127d8:	strh	r1, [r2, #4]
   127dc:	str	r3, [sp, #12]
   127e0:	bl	12d3c <__assert_fail@plt+0x122c>
   127e4:	ldr	r3, [r9, #316]	; 0x13c
   127e8:	cmp	r3, #0
   127ec:	blt	12880 <__assert_fail@plt+0xd70>
   127f0:	ldr	r4, [sp, #12]
   127f4:	ldr	ip, [sp, #28]
   127f8:	mov	r1, #3
   127fc:	add	r2, ip, r4, lsl #3
   12800:	str	r3, [ip, r4, lsl #3]
   12804:	ldr	r0, [pc, #968]	; 12bd4 <__assert_fail@plt+0x10c4>
   12808:	strh	r1, [r2, #4]
   1280c:	bl	12d3c <__assert_fail@plt+0x122c>
   12810:	ldr	r3, [r9, #312]	; 0x138
   12814:	add	r2, r4, #1
   12818:	cmp	r3, #0
   1281c:	str	r2, [sp, #12]
   12820:	bge	11f08 <__assert_fail@plt+0x3f8>
   12824:	ldr	r3, [r9, #316]	; 0x13c
   12828:	cmp	r3, #0
   1282c:	bge	11f08 <__assert_fail@plt+0x3f8>
   12830:	bl	11948 <__errno_location@plt>
   12834:	ldr	r0, [r0]
   12838:	bl	118b8 <strerror@plt>
   1283c:	mov	r1, r0
   12840:	ldr	r0, [pc, #912]	; 12bd8 <__assert_fail@plt+0x10c8>
   12844:	bl	12d3c <__assert_fail@plt+0x122c>
   12848:	b	11f08 <__assert_fail@plt+0x3f8>
   1284c:	mov	r0, r5
   12850:	bl	11af8 <close@plt>
   12854:	b	12798 <__assert_fail@plt+0xc88>
   12858:	ldr	r3, [r9, #312]	; 0x138
   1285c:	cmp	r3, #0
   12860:	strlt	r5, [r9, #312]	; 0x138
   12864:	b	12798 <__assert_fail@plt+0xc88>
   12868:	ldr	r0, [pc, #876]	; 12bdc <__assert_fail@plt+0x10cc>
   1286c:	bl	14b6c <__assert_fail@plt+0x305c>
   12870:	ldr	r3, [r9, #312]	; 0x138
   12874:	cmp	r3, #0
   12878:	bge	127bc <__assert_fail@plt+0xcac>
   1287c:	b	127e4 <__assert_fail@plt+0xcd4>
   12880:	ldr	r3, [r9, #312]	; 0x138
   12884:	cmp	r3, #0
   12888:	bge	11f08 <__assert_fail@plt+0x3f8>
   1288c:	b	12830 <__assert_fail@plt+0xd20>
   12890:	ldr	r0, [pc, #840]	; 12be0 <__assert_fail@plt+0x10d0>
   12894:	bl	12d3c <__assert_fail@plt+0x122c>
   12898:	ldr	r3, [r9, #312]	; 0x138
   1289c:	b	12874 <__assert_fail@plt+0xd64>
   128a0:	ldr	r3, [r9, #316]	; 0x13c
   128a4:	cmp	r3, #0
   128a8:	bge	127e4 <__assert_fail@plt+0xcd4>
   128ac:	ldr	r0, [pc, #816]	; 12be4 <__assert_fail@plt+0x10d4>
   128b0:	bl	14b6c <__assert_fail@plt+0x305c>
   128b4:	ldr	r3, [r9, #312]	; 0x138
   128b8:	b	12874 <__assert_fail@plt+0xd64>
   128bc:	mov	r3, r5
   128c0:	ldr	r2, [pc, #800]	; 12be8 <__assert_fail@plt+0x10d8>
   128c4:	ldr	r1, [pc, #728]	; 12ba4 <__assert_fail@plt+0x1094>
   128c8:	mov	r0, sl
   128cc:	bl	11954 <snprintf@plt>
   128d0:	bl	11948 <__errno_location@plt>
   128d4:	mov	r5, r0
   128d8:	ldr	r0, [r0]
   128dc:	cmp	r0, #0
   128e0:	bne	1294c <__assert_fail@plt+0xe3c>
   128e4:	mov	r3, sl
   128e8:	ldr	r2, [pc, #672]	; 12b90 <__assert_fail@plt+0x1080>
   128ec:	mov	r1, #100	; 0x64
   128f0:	mov	r0, r9
   128f4:	bl	11954 <snprintf@plt>
   128f8:	mov	r3, #0
   128fc:	str	r3, [r5]
   12900:	mov	r1, r9
   12904:	ldr	r0, [pc, #648]	; 12b94 <__assert_fail@plt+0x1084>
   12908:	bl	12d3c <__assert_fail@plt+0x122c>
   1290c:	ldr	r2, [pc, #552]	; 12b3c <__assert_fail@plt+0x102c>
   12910:	mov	r3, #4
   12914:	mov	r1, r9
   12918:	ldr	r2, [r2]
   1291c:	mov	r0, #43	; 0x2b
   12920:	bl	14100 <__assert_fail@plt+0x25f0>
   12924:	ldr	r3, [pc, #480]	; 12b0c <__assert_fail@plt+0xffc>
   12928:	mvn	r6, #0
   1292c:	ldr	r3, [r3]
   12930:	add	r4, r3, r4
   12934:	ldr	r3, [sp, #36]	; 0x24
   12938:	b	11ea8 <__assert_fail@plt+0x398>
   1293c:	ldr	r4, [sp, #36]	; 0x24
   12940:	mvn	r6, #0
   12944:	mov	r3, r4
   12948:	b	11ea8 <__assert_fail@plt+0x398>
   1294c:	bl	118b8 <strerror@plt>
   12950:	mov	r3, sl
   12954:	ldr	r2, [pc, #604]	; 12bb8 <__assert_fail@plt+0x10a8>
   12958:	mov	r1, #100	; 0x64
   1295c:	str	r0, [sp]
   12960:	mov	r0, r9
   12964:	bl	11954 <snprintf@plt>
   12968:	b	128f8 <__assert_fail@plt+0xde8>
   1296c:	add	r3, sp, #156	; 0x9c
   12970:	str	r3, [sp, #16]
   12974:	b	11ef8 <__assert_fail@plt+0x3e8>
   12978:	mov	r2, r4
   1297c:	mov	r1, r4
   12980:	ldr	r0, [pc, #612]	; 12bec <__assert_fail@plt+0x10dc>
   12984:	bl	1187c <open64@plt>
   12988:	ldr	r9, [pc, #468]	; 12b64 <__assert_fail@plt+0x1054>
   1298c:	cmp	r0, #0
   12990:	str	r0, [r9, #384]	; 0x180
   12994:	blt	12ac4 <__assert_fail@plt+0xfb4>
   12998:	ldr	r2, [sp, #28]
   1299c:	mov	r3, #3
   129a0:	ldr	r1, [pc, #580]	; 12bec <__assert_fail@plt+0x10dc>
   129a4:	str	r0, [r2]
   129a8:	strh	r3, [r2, #4]
   129ac:	ldr	r0, [pc, #572]	; 12bf0 <__assert_fail@plt+0x10e0>
   129b0:	bl	12d3c <__assert_fail@plt+0x122c>
   129b4:	mov	r3, #1
   129b8:	str	r3, [sp, #12]
   129bc:	b	11db0 <__assert_fail@plt+0x2a0>
   129c0:	bl	11948 <__errno_location@plt>
   129c4:	ldr	r4, [r4]
   129c8:	add	r8, r8, #1
   129cc:	ldr	r0, [r0]
   129d0:	bl	118b8 <strerror@plt>
   129d4:	mov	r1, r4
   129d8:	mov	r2, r0
   129dc:	ldr	r0, [pc, #528]	; 12bf4 <__assert_fail@plt+0x10e4>
   129e0:	bl	12d3c <__assert_fail@plt+0x122c>
   129e4:	ldr	r3, [r7]
   129e8:	cmp	r3, r8
   129ec:	bhi	11de0 <__assert_fail@plt+0x2d0>
   129f0:	b	11ef4 <__assert_fail@plt+0x3e4>
   129f4:	ldr	r3, [pc, #320]	; 12b3c <__assert_fail@plt+0x102c>
   129f8:	ldr	r6, [pc, #324]	; 12b44 <__assert_fail@plt+0x1034>
   129fc:	ldr	r0, [r3]
   12a00:	bl	1ca50 <argp_parse@@Base+0x1150>
   12a04:	ldr	r4, [sp, #424]	; 0x1a8
   12a08:	ldr	r0, [r4, #24]
   12a0c:	bl	117a4 <strdup@plt>
   12a10:	ldr	r3, [pc, #292]	; 12b3c <__assert_fail@plt+0x102c>
   12a14:	mov	r1, #46	; 0x2e
   12a18:	str	r0, [r3]
   12a1c:	bl	11930 <strchr@plt>
   12a20:	subs	r3, r0, #0
   12a24:	mov	r0, r4
   12a28:	strbne	r5, [r3], #1
   12a2c:	strne	r3, [r6]
   12a30:	bl	11a8c <freeaddrinfo@plt>
   12a34:	b	12174 <__assert_fail@plt+0x664>
   12a38:	mov	r3, r5
   12a3c:	ldr	r2, [pc, #436]	; 12bf8 <__assert_fail@plt+0x10e8>
   12a40:	ldr	r1, [pc, #348]	; 12ba4 <__assert_fail@plt+0x1094>
   12a44:	mov	r0, sl
   12a48:	bl	11954 <snprintf@plt>
   12a4c:	bl	11948 <__errno_location@plt>
   12a50:	mov	fp, r0
   12a54:	ldr	r0, [r0]
   12a58:	cmp	r0, #0
   12a5c:	bne	12ae8 <__assert_fail@plt+0xfd8>
   12a60:	mov	r3, sl
   12a64:	ldr	r2, [pc, #292]	; 12b90 <__assert_fail@plt+0x1080>
   12a68:	mov	r1, #100	; 0x64
   12a6c:	ldr	r0, [sp, #16]
   12a70:	bl	11954 <snprintf@plt>
   12a74:	mov	r3, #0
   12a78:	str	r3, [fp]
   12a7c:	ldr	r1, [sp, #16]
   12a80:	ldr	r0, [pc, #268]	; 12b94 <__assert_fail@plt+0x1084>
   12a84:	bl	12d3c <__assert_fail@plt+0x122c>
   12a88:	ldr	r2, [pc, #172]	; 12b3c <__assert_fail@plt+0x102c>
   12a8c:	mov	r3, #4
   12a90:	ldr	r1, [sp, #16]
   12a94:	ldr	r2, [r2]
   12a98:	mov	r0, #43	; 0x2b
   12a9c:	bl	14100 <__assert_fail@plt+0x25f0>
   12aa0:	ldr	r0, [fp]
   12aa4:	bl	118b8 <strerror@plt>
   12aa8:	mov	r1, r5
   12aac:	mov	r2, r0
   12ab0:	ldr	r0, [pc, #324]	; 12bfc <__assert_fail@plt+0x10ec>
   12ab4:	bl	12d3c <__assert_fail@plt+0x122c>
   12ab8:	mov	r0, r6
   12abc:	bl	11af8 <close@plt>
   12ac0:	b	12924 <__assert_fail@plt+0xe14>
   12ac4:	bl	11948 <__errno_location@plt>
   12ac8:	str	r4, [sp, #12]
   12acc:	ldr	r0, [r0]
   12ad0:	bl	118b8 <strerror@plt>
   12ad4:	ldr	r1, [pc, #272]	; 12bec <__assert_fail@plt+0x10dc>
   12ad8:	mov	r2, r0
   12adc:	ldr	r0, [pc, #272]	; 12bf4 <__assert_fail@plt+0x10e4>
   12ae0:	bl	12d3c <__assert_fail@plt+0x122c>
   12ae4:	b	11db0 <__assert_fail@plt+0x2a0>
   12ae8:	bl	118b8 <strerror@plt>
   12aec:	mov	r3, sl
   12af0:	ldr	r2, [pc, #192]	; 12bb8 <__assert_fail@plt+0x10a8>
   12af4:	mov	r1, #100	; 0x64
   12af8:	str	r0, [sp]
   12afc:	ldr	r0, [sp, #16]
   12b00:	bl	11954 <snprintf@plt>
   12b04:	b	12a74 <__assert_fail@plt+0xf64>
   12b08:	andeq	r3, r3, r8, lsr #24
   12b0c:	andeq	r3, r3, r8, lsl #25
   12b10:	andeq	r0, r2, r0, ror #17
   12b14:	andeq	r1, r2, r8, ror r6
   12b18:	muleq	r3, r4, r0
   12b1c:	andeq	r0, r2, r4, lsr #30
   12b20:	andeq	r3, r3, r8, ror r5
   12b24:	andeq	r0, r2, ip, lsr pc
   12b28:	andeq	r3, r3, r4, lsr r3
   12b2c:	ldrdeq	r3, [r3], -r4
   12b30:	andeq	r3, r3, r4, asr #24
   12b34:	andeq	r3, r3, ip, lsr #24
   12b38:	andeq	r3, r3, ip, asr #11
   12b3c:	andeq	r3, r3, r0, asr #24
   12b40:	andeq	r0, r2, ip, asr pc
   12b44:	andeq	r3, r3, ip, lsr ip
   12b48:	andeq	r3, r3, r4, asr sl
   12b4c:	andeq	r3, r3, r8, lsl r3
   12b50:	andeq	r4, r1, ip, lsl #24
   12b54:	andeq	r4, r1, r8, lsr #17
   12b58:			; <UNDEFINED> instruction: 0x00012db8
   12b5c:	andeq	r0, r2, r8, ror pc
   12b60:	andeq	r3, r3, r4, asr #20
   12b64:			; <UNDEFINED> instruction: 0x000331b0
   12b68:	andeq	r3, r3, r0, lsr ip
   12b6c:			; <UNDEFINED> instruction: 0x000001b6
   12b70:	andeq	r1, r2, ip
   12b74:	andeq	r3, r3, r8, asr #20
   12b78:	andeq	r1, r2, ip, lsl #2
   12b7c:	andeq	r1, r2, r0, lsl r1
   12b80:	andeq	r1, r2, r4, lsl r1
   12b84:	andeq	r2, r1, r8, lsr #26
   12b88:	andeq	r1, r2, r8, lsr #2
   12b8c:	andeq	r1, r2, r0, ror #3
   12b90:	andeq	r0, r2, r4, ror #18
   12b94:	andeq	r1, r2, r8, lsl #31
   12b98:	andeq	r2, r2, r0, lsl #8
   12b9c:	andeq	r2, r1, r4, lsl #28
   12ba0:	andeq	r0, r2, r4, asr #30
   12ba4:	andeq	r0, r0, r1, lsl #8
   12ba8:	andeq	r1, r2, r8, asr #3
   12bac:	ldrdeq	r1, [r2], -r4
   12bb0:	andeq	r1, r2, r8, lsr #3
   12bb4:			; <UNDEFINED> instruction: 0x000211b8
   12bb8:	andeq	r0, r2, r4, asr r9
   12bbc:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12bc0:	andeq	r1, r2, r0, ror r1
   12bc4:	muleq	r2, r8, r1
   12bc8:	andeq	r1, r2, r0, lsr #3
   12bcc:	andeq	r1, r2, r4, ror r0
   12bd0:	strheq	r1, [r2], -r0
   12bd4:	ldrdeq	r1, [r2], -r0
   12bd8:	strdeq	r1, [r2], -r0
   12bdc:	andeq	r1, r2, ip, asr #32
   12be0:	andeq	r1, r2, r8, lsr #32
   12be4:	muleq	r2, r0, r0
   12be8:	andeq	r0, r2, r0, asr #31
   12bec:	muleq	r2, r0, pc	; <UNPREDICTABLE>
   12bf0:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12bf4:	andeq	r0, r2, ip, lsr #31
   12bf8:	andeq	r0, r2, r0, ror #31
   12bfc:	strdeq	r0, [r2], -r4
   12c00:	mov	fp, #0
   12c04:	mov	lr, #0
   12c08:	pop	{r1}		; (ldr r1, [sp], #4)
   12c0c:	mov	r2, sp
   12c10:	push	{r2}		; (str r2, [sp, #-4]!)
   12c14:	push	{r0}		; (str r0, [sp, #-4]!)
   12c18:	ldr	ip, [pc, #16]	; 12c30 <__assert_fail@plt+0x1120>
   12c1c:	push	{ip}		; (str ip, [sp, #-4]!)
   12c20:	ldr	r0, [pc, #12]	; 12c34 <__assert_fail@plt+0x1124>
   12c24:	ldr	r3, [pc, #12]	; 12c38 <__assert_fail@plt+0x1128>
   12c28:	bl	118ac <__libc_start_main@plt>
   12c2c:	bl	11ae0 <abort@plt>
   12c30:	andeq	r0, r2, r0, ror #16
   12c34:	andeq	r1, r1, ip, lsl fp
   12c38:	andeq	r0, r2, r0, lsl #16
   12c3c:	ldr	r3, [pc, #20]	; 12c58 <__assert_fail@plt+0x1148>
   12c40:	ldr	r2, [pc, #20]	; 12c5c <__assert_fail@plt+0x114c>
   12c44:	add	r3, pc, r3
   12c48:	ldr	r2, [r3, r2]
   12c4c:	cmp	r2, #0
   12c50:	bxeq	lr
   12c54:	b	118d0 <__gmon_start__@plt>
   12c58:			; <UNDEFINED> instruction: 0x000203b4
   12c5c:	andeq	r0, r0, r4, lsr #3
   12c60:	ldr	r3, [pc, #28]	; 12c84 <__assert_fail@plt+0x1174>
   12c64:	ldr	r0, [pc, #28]	; 12c88 <__assert_fail@plt+0x1178>
   12c68:	sub	r3, r3, r0
   12c6c:	cmp	r3, #6
   12c70:	bxls	lr
   12c74:	ldr	r3, [pc, #16]	; 12c8c <__assert_fail@plt+0x117c>
   12c78:	cmp	r3, #0
   12c7c:	bxeq	lr
   12c80:	bx	r3
   12c84:			; <UNDEFINED> instruction: 0x000335bf
   12c88:			; <UNDEFINED> instruction: 0x000335bc
   12c8c:	andeq	r0, r0, r0
   12c90:	ldr	r1, [pc, #36]	; 12cbc <__assert_fail@plt+0x11ac>
   12c94:	ldr	r0, [pc, #36]	; 12cc0 <__assert_fail@plt+0x11b0>
   12c98:	sub	r1, r1, r0
   12c9c:	asr	r1, r1, #2
   12ca0:	add	r1, r1, r1, lsr #31
   12ca4:	asrs	r1, r1, #1
   12ca8:	bxeq	lr
   12cac:	ldr	r3, [pc, #16]	; 12cc4 <__assert_fail@plt+0x11b4>
   12cb0:	cmp	r3, #0
   12cb4:	bxeq	lr
   12cb8:	bx	r3
   12cbc:			; <UNDEFINED> instruction: 0x000335bc
   12cc0:			; <UNDEFINED> instruction: 0x000335bc
   12cc4:	andeq	r0, r0, r0
   12cc8:	push	{r4, lr}
   12ccc:	ldr	r4, [pc, #24]	; 12cec <__assert_fail@plt+0x11dc>
   12cd0:	ldrb	r3, [r4]
   12cd4:	cmp	r3, #0
   12cd8:	popne	{r4, pc}
   12cdc:	bl	12c60 <__assert_fail@plt+0x1150>
   12ce0:	mov	r3, #1
   12ce4:	strb	r3, [r4]
   12ce8:	pop	{r4, pc}
   12cec:	ldrdeq	r3, [r3], -r0
   12cf0:	ldr	r0, [pc, #40]	; 12d20 <__assert_fail@plt+0x1210>
   12cf4:	ldr	r3, [r0]
   12cf8:	cmp	r3, #0
   12cfc:	bne	12d04 <__assert_fail@plt+0x11f4>
   12d00:	b	12c90 <__assert_fail@plt+0x1180>
   12d04:	ldr	r3, [pc, #24]	; 12d24 <__assert_fail@plt+0x1214>
   12d08:	cmp	r3, #0
   12d0c:	beq	12d00 <__assert_fail@plt+0x11f0>
   12d10:	push	{r4, lr}
   12d14:	blx	r3
   12d18:	pop	{r4, lr}
   12d1c:	b	12c90 <__assert_fail@plt+0x1180>
   12d20:	andeq	r2, r3, ip, lsl #30
   12d24:	andeq	r0, r0, r0
   12d28:	ldr	r3, [pc, #8]	; 12d38 <__assert_fail@plt+0x1228>
   12d2c:	mov	r2, #1
   12d30:	str	r2, [r3]
   12d34:	bx	lr
   12d38:	ldrdeq	r3, [r3], -r4
   12d3c:	push	{r0, r1, r2, r3}
   12d40:	ldr	r3, [pc, #100]	; 12dac <__assert_fail@plt+0x129c>
   12d44:	push	{r4, lr}
   12d48:	sub	sp, sp, #8
   12d4c:	ldr	r3, [r3]
   12d50:	cmp	r3, #0
   12d54:	beq	12d68 <__assert_fail@plt+0x1258>
   12d58:	ldr	r3, [pc, #80]	; 12db0 <__assert_fail@plt+0x12a0>
   12d5c:	ldr	r3, [r3, #4]
   12d60:	cmp	r3, #0
   12d64:	bne	12d78 <__assert_fail@plt+0x1268>
   12d68:	add	sp, sp, #8
   12d6c:	pop	{r4, lr}
   12d70:	add	sp, sp, #16
   12d74:	bx	lr
   12d78:	ldr	r4, [pc, #52]	; 12db4 <__assert_fail@plt+0x12a4>
   12d7c:	add	r3, sp, #20
   12d80:	mov	r2, r3
   12d84:	ldr	r1, [sp, #16]
   12d88:	ldr	r0, [r4]
   12d8c:	str	r3, [sp, #4]
   12d90:	bl	11a2c <vfprintf@plt>
   12d94:	ldr	r0, [r4]
   12d98:	bl	116cc <fflush@plt>
   12d9c:	add	sp, sp, #8
   12da0:	pop	{r4, lr}
   12da4:	add	sp, sp, #16
   12da8:	bx	lr
   12dac:	andeq	r3, r3, r4, asr #24
   12db0:	ldrdeq	r3, [r3], -r4
   12db4:	andeq	r3, r3, ip, asr #11
   12db8:	push	{r4, r5, r6, lr}
   12dbc:	mov	r3, #1
   12dc0:	ldr	r5, [pc, #44]	; 12df4 <__assert_fail@plt+0x12e4>
   12dc4:	ldr	r2, [pc, #44]	; 12df8 <__assert_fail@plt+0x12e8>
   12dc8:	ldr	r1, [pc, #44]	; 12dfc <__assert_fail@plt+0x12ec>
   12dcc:	ldr	r4, [r5, #4]
   12dd0:	ldr	r0, [pc, #40]	; 12e00 <__assert_fail@plt+0x12f0>
   12dd4:	cmp	r4, #0
   12dd8:	movne	r1, r2
   12ddc:	str	r3, [r5, #4]
   12de0:	bl	12d3c <__assert_fail@plt+0x122c>
   12de4:	clz	r3, r4
   12de8:	lsr	r3, r3, #5
   12dec:	str	r3, [r5, #4]
   12df0:	pop	{r4, r5, r6, pc}
   12df4:	ldrdeq	r3, [r3], -r4
   12df8:	muleq	r2, r4, r8
   12dfc:	andeq	r0, r2, ip, lsl #17
   12e00:	muleq	r2, ip, r8
   12e04:	push	{r4, lr}
   12e08:	mov	r0, #0
   12e0c:	bl	11738 <_exit@plt>
   12e10:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e14:	mov	r8, r0
   12e18:	mov	r4, r1
   12e1c:	mov	r5, #0
   12e20:	b	12e28 <__assert_fail@plt+0x1318>
   12e24:	strb	r5, [r4, r0]
   12e28:	mov	r0, r4
   12e2c:	bl	11918 <strlen@plt>
   12e30:	sub	r0, r0, #1
   12e34:	ldrb	r3, [r4, r0]
   12e38:	cmp	r3, #58	; 0x3a
   12e3c:	beq	12e24 <__assert_fail@plt+0x1314>
   12e40:	ldrb	r5, [r4]
   12e44:	cmp	r5, #58	; 0x3a
   12e48:	bne	12e58 <__assert_fail@plt+0x1348>
   12e4c:	ldrb	r5, [r4, #1]!
   12e50:	cmp	r5, #58	; 0x3a
   12e54:	beq	12e4c <__assert_fail@plt+0x133c>
   12e58:	cmp	r5, #0
   12e5c:	beq	12f80 <__assert_fail@plt+0x1470>
   12e60:	mov	r2, r4
   12e64:	mov	r3, #1
   12e68:	cmp	r5, #58	; 0x3a
   12e6c:	addeq	r3, r3, #1
   12e70:	ldrb	r5, [r2, #1]!
   12e74:	cmp	r5, #0
   12e78:	bne	12e68 <__assert_fail@plt+0x1358>
   12e7c:	cmp	r8, #0
   12e80:	beq	12fbc <__assert_fail@plt+0x14ac>
   12e84:	ldr	r2, [r8]
   12e88:	cmp	r2, #0
   12e8c:	beq	12ea4 <__assert_fail@plt+0x1394>
   12e90:	mov	r2, r8
   12e94:	ldr	r1, [r2, #4]!
   12e98:	add	r5, r5, #1
   12e9c:	cmp	r1, #0
   12ea0:	bne	12e94 <__assert_fail@plt+0x1384>
   12ea4:	add	r3, r3, r5
   12ea8:	add	r1, r3, #1
   12eac:	mov	r0, r8
   12eb0:	lsl	r1, r1, #2
   12eb4:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   12eb8:	subs	r8, r0, #0
   12ebc:	beq	12fa4 <__assert_fail@plt+0x1494>
   12ec0:	add	r7, r8, r5, lsl #2
   12ec4:	mov	r9, #58	; 0x3a
   12ec8:	mov	sl, #0
   12ecc:	b	12f00 <__assert_fail@plt+0x13f0>
   12ed0:	bl	1e278 <argp_parse@@Base+0x2978>
   12ed4:	mov	r3, r0
   12ed8:	cmp	r0, #0
   12edc:	str	r3, [r7]
   12ee0:	beq	12f88 <__assert_fail@plt+0x1478>
   12ee4:	mov	r1, r4
   12ee8:	mov	r2, fp
   12eec:	bl	11990 <strncpy@plt>
   12ef0:	ldr	r3, [r7], #4
   12ef4:	add	r5, r5, #1
   12ef8:	add	r4, r6, #1
   12efc:	strb	sl, [r3, fp]
   12f00:	mov	r1, r9
   12f04:	mov	r0, r4
   12f08:	bl	11930 <strchr@plt>
   12f0c:	subs	r6, r0, #0
   12f10:	sub	fp, r6, r4
   12f14:	add	r0, fp, #1
   12f18:	bne	12ed0 <__assert_fail@plt+0x13c0>
   12f1c:	mov	r0, r4
   12f20:	bl	11918 <strlen@plt>
   12f24:	add	r7, r8, r5, lsl #2
   12f28:	add	r0, r0, #1
   12f2c:	bl	1dbbc <argp_parse@@Base+0x22bc>
   12f30:	mov	r1, r4
   12f34:	str	r0, [r8, r5, lsl #2]
   12f38:	bl	1184c <strcpy@plt>
   12f3c:	ldr	r3, [pc, #128]	; 12fc4 <__assert_fail@plt+0x14b4>
   12f40:	str	r6, [r7, #4]
   12f44:	ldr	r3, [r3]
   12f48:	cmp	r3, #0
   12f4c:	beq	12f80 <__assert_fail@plt+0x1470>
   12f50:	ldr	r2, [r8]
   12f54:	cmp	r2, #0
   12f58:	beq	12f80 <__assert_fail@plt+0x1470>
   12f5c:	ldr	r5, [pc, #100]	; 12fc8 <__assert_fail@plt+0x14b8>
   12f60:	mov	r4, r8
   12f64:	mov	r1, r6
   12f68:	mov	r0, r5
   12f6c:	bl	116b4 <printf@plt>
   12f70:	ldr	r2, [r4, #4]!
   12f74:	add	r6, r6, #1
   12f78:	cmp	r2, #0
   12f7c:	bne	12f64 <__assert_fail@plt+0x1454>
   12f80:	mov	r0, r8
   12f84:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f88:	bl	11948 <__errno_location@plt>
   12f8c:	ldr	r2, [pc, #56]	; 12fcc <__assert_fail@plt+0x14bc>
   12f90:	ldr	r1, [r0]
   12f94:	mov	r0, #1
   12f98:	bl	11858 <error@plt>
   12f9c:	ldr	r0, [r7]
   12fa0:	b	12ee4 <__assert_fail@plt+0x13d4>
   12fa4:	bl	11948 <__errno_location@plt>
   12fa8:	ldr	r2, [pc, #28]	; 12fcc <__assert_fail@plt+0x14bc>
   12fac:	ldr	r1, [r0]
   12fb0:	mov	r0, #1
   12fb4:	bl	11858 <error@plt>
   12fb8:	b	12ec0 <__assert_fail@plt+0x13b0>
   12fbc:	mov	r5, r8
   12fc0:	b	12ea4 <__assert_fail@plt+0x1394>
   12fc4:	andeq	r3, r3, ip, lsr #24
   12fc8:	ldrdeq	r0, [r2], -r4
   12fcc:			; <UNDEFINED> instruction: 0x000208bc
   12fd0:	sub	r0, r0, #52	; 0x34
   12fd4:	push	{r4, r5, r6, lr}
   12fd8:	mov	r4, r1
   12fdc:	sub	sp, sp, #8
   12fe0:	cmp	r0, #207	; 0xcf
   12fe4:	ldrls	pc, [pc, r0, lsl #2]
   12fe8:	b	13558 <__assert_fail@plt+0x1a48>
   12fec:	andeq	r3, r1, r0, lsr #10
   12ff0:	andeq	r3, r1, r8, asr r5
   12ff4:	andeq	r3, r1, ip, lsl #10
   12ff8:	andeq	r3, r1, r8, asr r5
   12ffc:	andeq	r3, r1, r8, asr r5
   13000:	andeq	r3, r1, r8, asr r5
   13004:	andeq	r3, r1, r8, asr r5
   13008:	andeq	r3, r1, r8, asr r5
   1300c:	andeq	r3, r1, r8, asr r5
   13010:	andeq	r3, r1, r8, asr r5
   13014:	andeq	r3, r1, r8, asr r5
   13018:	andeq	r3, r1, r8, asr r5
   1301c:	andeq	r3, r1, r8, asr r5
   13020:	andeq	r3, r1, r8, asr r5
   13024:	strdeq	r3, [r1], -ip
   13028:	andeq	r3, r1, r8, asr r5
   1302c:	andeq	r3, r1, ip, ror #9
   13030:	andeq	r3, r1, r8, asr r5
   13034:	andeq	r3, r1, r8, asr r5
   13038:	andeq	r3, r1, r8, asr r5
   1303c:	andeq	r3, r1, r8, asr r5
   13040:	andeq	r3, r1, r8, asr r5
   13044:	andeq	r3, r1, r8, asr r5
   13048:	andeq	r3, r1, r8, asr r5
   1304c:	andeq	r3, r1, r8, asr r5
   13050:	andeq	r3, r1, r8, asr r5
   13054:	andeq	r3, r1, r8, asr r5
   13058:	andeq	r3, r1, r8, asr r5
   1305c:	andeq	r3, r1, r8, asr #10
   13060:	andeq	r3, r1, r8, asr r5
   13064:	andeq	r3, r1, r8, asr r5
   13068:	andeq	r3, r1, r4, lsr r5
   1306c:	ldrdeq	r3, [r1], -r8
   13070:	andeq	r3, r1, r8, asr r5
   13074:	andeq	r3, r1, r8, asr r5
   13078:	andeq	r3, r1, r8, asr r5
   1307c:	andeq	r3, r1, r8, asr r5
   13080:	andeq	r3, r1, r8, asr r5
   13084:	andeq	r3, r1, r8, asr r5
   13088:	andeq	r3, r1, r8, asr r5
   1308c:	andeq	r3, r1, r8, asr r5
   13090:	andeq	r3, r1, r8, asr r5
   13094:	andeq	r3, r1, r8, asr r5
   13098:	andeq	r3, r1, r8, asr r5
   1309c:	andeq	r3, r1, r8, asr r5
   130a0:	andeq	r3, r1, ip, lsl #9
   130a4:	andeq	r3, r1, ip, ror r4
   130a8:	andeq	r3, r1, r8, asr r5
   130ac:	andeq	r3, r1, r0, ror #8
   130b0:	andeq	r3, r1, r8, asr r5
   130b4:	andeq	r3, r1, r0, asr r4
   130b8:	andeq	r3, r1, r8, asr r5
   130bc:	andeq	r3, r1, ip, lsr r4
   130c0:	andeq	r3, r1, r8, asr r5
   130c4:	andeq	r3, r1, r8, asr r5
   130c8:	andeq	r3, r1, r8, asr r5
   130cc:	andeq	r3, r1, r4, lsr r4
   130d0:	andeq	r3, r1, r4, ror #7
   130d4:	ldrdeq	r3, [r1], -r0
   130d8:	andeq	r3, r1, r8, asr r5
   130dc:			; <UNDEFINED> instruction: 0x000133b4
   130e0:	andeq	r3, r1, r8, asr r5
   130e4:	andeq	r3, r1, r0, lsr #7
   130e8:	andeq	r3, r1, r4, lsl #7
   130ec:	andeq	r3, r1, r8, asr r5
   130f0:	andeq	r3, r1, r8, asr r5
   130f4:	andeq	r3, r1, r8, asr r5
   130f8:	andeq	r3, r1, r8, asr r5
   130fc:	andeq	r3, r1, r8, asr r5
   13100:	andeq	r3, r1, r8, asr r5
   13104:	andeq	r3, r1, r8, asr r5
   13108:	andeq	r3, r1, r8, asr r5
   1310c:	andeq	r3, r1, r8, asr r5
   13110:	andeq	r3, r1, r8, asr r5
   13114:	andeq	r3, r1, r8, asr r5
   13118:	andeq	r3, r1, r8, asr r5
   1311c:	andeq	r3, r1, r8, asr r5
   13120:	andeq	r3, r1, r8, asr r5
   13124:	andeq	r3, r1, r8, asr r5
   13128:	andeq	r3, r1, r8, asr r5
   1312c:	andeq	r3, r1, r8, asr r5
   13130:	andeq	r3, r1, r8, asr r5
   13134:	andeq	r3, r1, r8, asr r5
   13138:	andeq	r3, r1, r8, asr r5
   1313c:	andeq	r3, r1, r8, asr r5
   13140:	andeq	r3, r1, r8, asr r5
   13144:	andeq	r3, r1, r8, asr r5
   13148:	andeq	r3, r1, r8, asr r5
   1314c:	andeq	r3, r1, r8, asr r5
   13150:	andeq	r3, r1, r8, asr r5
   13154:	andeq	r3, r1, r8, asr r5
   13158:	andeq	r3, r1, r8, asr r5
   1315c:	andeq	r3, r1, r8, asr r5
   13160:	andeq	r3, r1, r8, asr r5
   13164:	andeq	r3, r1, r8, asr r5
   13168:	andeq	r3, r1, r8, asr r5
   1316c:	andeq	r3, r1, r8, asr r5
   13170:	andeq	r3, r1, r8, asr r5
   13174:	andeq	r3, r1, r8, asr r5
   13178:	andeq	r3, r1, r8, asr r5
   1317c:	andeq	r3, r1, r8, asr r5
   13180:	andeq	r3, r1, r8, asr r5
   13184:	andeq	r3, r1, r8, asr r5
   13188:	andeq	r3, r1, r8, asr r5
   1318c:	andeq	r3, r1, r8, asr r5
   13190:	andeq	r3, r1, r8, asr r5
   13194:	andeq	r3, r1, r8, asr r5
   13198:	andeq	r3, r1, r8, asr r5
   1319c:	andeq	r3, r1, r8, asr r5
   131a0:	andeq	r3, r1, r8, asr r5
   131a4:	andeq	r3, r1, r8, asr r5
   131a8:	andeq	r3, r1, r8, asr r5
   131ac:	andeq	r3, r1, r8, asr r5
   131b0:	andeq	r3, r1, r8, asr r5
   131b4:	andeq	r3, r1, r8, asr r5
   131b8:	andeq	r3, r1, r8, asr r5
   131bc:	andeq	r3, r1, r8, asr r5
   131c0:	andeq	r3, r1, r8, asr r5
   131c4:	andeq	r3, r1, r8, asr r5
   131c8:	andeq	r3, r1, r8, asr r5
   131cc:	andeq	r3, r1, r8, asr r5
   131d0:	andeq	r3, r1, r8, asr r5
   131d4:	andeq	r3, r1, r8, asr r5
   131d8:	andeq	r3, r1, r8, asr r5
   131dc:	andeq	r3, r1, r8, asr r5
   131e0:	andeq	r3, r1, r8, asr r5
   131e4:	andeq	r3, r1, r8, asr r5
   131e8:	andeq	r3, r1, r8, asr r5
   131ec:	andeq	r3, r1, r8, asr r5
   131f0:	andeq	r3, r1, r8, asr r5
   131f4:	andeq	r3, r1, r8, asr r5
   131f8:	andeq	r3, r1, r8, asr r5
   131fc:	andeq	r3, r1, r8, asr r5
   13200:	andeq	r3, r1, r8, asr r5
   13204:	andeq	r3, r1, r8, asr r5
   13208:	andeq	r3, r1, r8, asr r5
   1320c:	andeq	r3, r1, r8, asr r5
   13210:	andeq	r3, r1, r8, asr r5
   13214:	andeq	r3, r1, r8, asr r5
   13218:	andeq	r3, r1, r8, asr r5
   1321c:	andeq	r3, r1, r8, asr r5
   13220:	andeq	r3, r1, r8, asr r5
   13224:	andeq	r3, r1, r8, asr r5
   13228:	andeq	r3, r1, r8, asr r5
   1322c:	andeq	r3, r1, r8, asr r5
   13230:	andeq	r3, r1, r8, asr r5
   13234:	andeq	r3, r1, r8, asr r5
   13238:	andeq	r3, r1, r8, asr r5
   1323c:	andeq	r3, r1, r8, asr r5
   13240:	andeq	r3, r1, r8, asr r5
   13244:	andeq	r3, r1, r8, asr r5
   13248:	andeq	r3, r1, r8, asr r5
   1324c:	andeq	r3, r1, r8, asr r5
   13250:	andeq	r3, r1, r8, asr r5
   13254:	andeq	r3, r1, r8, asr r5
   13258:	andeq	r3, r1, r8, asr r5
   1325c:	andeq	r3, r1, r8, asr r5
   13260:	andeq	r3, r1, r8, asr r5
   13264:	andeq	r3, r1, r8, asr r5
   13268:	andeq	r3, r1, r8, asr r5
   1326c:	andeq	r3, r1, r8, asr r5
   13270:	andeq	r3, r1, r8, asr r5
   13274:	andeq	r3, r1, r8, asr r5
   13278:	andeq	r3, r1, r8, asr r5
   1327c:	andeq	r3, r1, r8, asr r5
   13280:	andeq	r3, r1, r8, asr r5
   13284:	andeq	r3, r1, r8, asr r5
   13288:	andeq	r3, r1, r8, asr r5
   1328c:	andeq	r3, r1, r8, asr r5
   13290:	andeq	r3, r1, r8, asr r5
   13294:	andeq	r3, r1, r8, asr r5
   13298:	andeq	r3, r1, r8, asr r5
   1329c:	andeq	r3, r1, r8, asr r5
   132a0:	andeq	r3, r1, r8, asr r5
   132a4:	andeq	r3, r1, r8, asr r5
   132a8:	andeq	r3, r1, r8, asr r5
   132ac:	andeq	r3, r1, r8, asr r5
   132b0:	andeq	r3, r1, r8, asr r5
   132b4:	andeq	r3, r1, r8, asr r5
   132b8:	andeq	r3, r1, r8, asr r5
   132bc:	andeq	r3, r1, r8, asr r5
   132c0:	andeq	r3, r1, r8, asr r5
   132c4:	andeq	r3, r1, r8, asr r5
   132c8:	andeq	r3, r1, r8, asr r5
   132cc:	andeq	r3, r1, r8, asr r5
   132d0:	andeq	r3, r1, r8, asr r5
   132d4:	andeq	r3, r1, r8, asr r5
   132d8:	andeq	r3, r1, r8, asr r5
   132dc:	andeq	r3, r1, r8, asr r5
   132e0:	andeq	r3, r1, r8, asr r5
   132e4:	andeq	r3, r1, r8, asr r5
   132e8:	andeq	r3, r1, r8, asr r5
   132ec:	andeq	r3, r1, r8, asr r5
   132f0:	andeq	r3, r1, r8, asr r5
   132f4:	andeq	r3, r1, r8, asr r5
   132f8:	andeq	r3, r1, r8, asr r5
   132fc:	andeq	r3, r1, r8, asr r5
   13300:	andeq	r3, r1, r8, asr r5
   13304:	andeq	r3, r1, r8, asr r5
   13308:	andeq	r3, r1, r8, asr r5
   1330c:	andeq	r3, r1, r8, asr r5
   13310:	andeq	r3, r1, r8, asr r5
   13314:	andeq	r3, r1, r8, asr r5
   13318:	andeq	r3, r1, r8, asr r5
   1331c:	andeq	r3, r1, r0, ror r3
   13320:	andeq	r3, r1, ip, asr r3
   13324:	andeq	r3, r1, r8, asr #6
   13328:	andeq	r3, r1, ip, lsr #6
   1332c:	mov	r2, #0
   13330:	ldr	r1, [pc, #580]	; 1357c <__assert_fail@plt+0x1a6c>
   13334:	mov	r3, r2
   13338:	str	r2, [r1, #4]
   1333c:	mov	r0, r3
   13340:	add	sp, sp, #8
   13344:	pop	{r4, r5, r6, pc}
   13348:	ldr	r2, [pc, #560]	; 13580 <__assert_fail@plt+0x1a70>
   1334c:	mov	r1, #1
   13350:	mov	r3, #0
   13354:	str	r1, [r2]
   13358:	b	1333c <__assert_fail@plt+0x182c>
   1335c:	ldr	r2, [pc, #544]	; 13584 <__assert_fail@plt+0x1a74>
   13360:	mov	r1, #1
   13364:	mov	r3, #0
   13368:	str	r1, [r2]
   1336c:	b	1333c <__assert_fail@plt+0x182c>
   13370:	ldr	r2, [pc, #528]	; 13588 <__assert_fail@plt+0x1a78>
   13374:	mov	r1, #1
   13378:	mov	r3, #0
   1337c:	str	r1, [r2]
   13380:	b	1333c <__assert_fail@plt+0x182c>
   13384:	ldr	r5, [pc, #512]	; 1358c <__assert_fail@plt+0x1a7c>
   13388:	mov	r1, r4
   1338c:	ldr	r0, [r5]
   13390:	bl	12e10 <__assert_fail@plt+0x1300>
   13394:	mov	r3, #0
   13398:	str	r0, [r5]
   1339c:	b	1333c <__assert_fail@plt+0x182c>
   133a0:	ldr	r2, [pc, #488]	; 13590 <__assert_fail@plt+0x1a80>
   133a4:	mov	r1, #1
   133a8:	mov	r3, #0
   133ac:	str	r1, [r2]
   133b0:	b	1333c <__assert_fail@plt+0x182c>
   133b4:	ldr	r2, [pc, #472]	; 13594 <__assert_fail@plt+0x1a84>
   133b8:	mvn	r1, #0
   133bc:	mov	r3, #0
   133c0:	ldr	r2, [r2]
   133c4:	str	r4, [r2]
   133c8:	str	r1, [r2, #4]
   133cc:	b	1333c <__assert_fail@plt+0x182c>
   133d0:	ldr	r2, [pc, #448]	; 13598 <__assert_fail@plt+0x1a88>
   133d4:	mov	r1, #1
   133d8:	mov	r3, #0
   133dc:	str	r1, [r2]
   133e0:	b	1333c <__assert_fail@plt+0x182c>
   133e4:	mov	r5, r2
   133e8:	add	r1, sp, #4
   133ec:	mov	r2, #10
   133f0:	mov	r0, r4
   133f4:	bl	11690 <strtol@plt>
   133f8:	ldr	r3, [sp, #4]
   133fc:	ldrb	r2, [r3]
   13400:	cmp	r2, #0
   13404:	mov	r6, r0
   13408:	beq	1341c <__assert_fail@plt+0x190c>
   1340c:	mov	r2, r4
   13410:	mov	r0, r5
   13414:	ldr	r1, [pc, #384]	; 1359c <__assert_fail@plt+0x1a8c>
   13418:	bl	1abec <argp_error@@Base>
   1341c:	rsb	r6, r6, r6, lsl #4
   13420:	ldr	r2, [pc, #340]	; 1357c <__assert_fail@plt+0x1a6c>
   13424:	lsl	r6, r6, #2
   13428:	mov	r3, #0
   1342c:	str	r6, [r2, #8]
   13430:	b	1333c <__assert_fail@plt+0x182c>
   13434:	ldr	r5, [pc, #356]	; 135a0 <__assert_fail@plt+0x1a90>
   13438:	b	13388 <__assert_fail@plt+0x1878>
   1343c:	ldr	r1, [pc, #312]	; 1357c <__assert_fail@plt+0x1a6c>
   13440:	mov	r2, #0
   13444:	mov	r3, r2
   13448:	str	r2, [r1]
   1344c:	b	1333c <__assert_fail@plt+0x182c>
   13450:	ldr	r2, [pc, #292]	; 1357c <__assert_fail@plt+0x1a6c>
   13454:	mov	r3, #0
   13458:	str	r1, [r2, #16]
   1345c:	b	1333c <__assert_fail@plt+0x182c>
   13460:	ldr	r1, [pc, #316]	; 135a4 <__assert_fail@plt+0x1a94>
   13464:	ldr	r2, [pc, #300]	; 13598 <__assert_fail@plt+0x1a88>
   13468:	mov	r3, #1
   1346c:	str	r3, [r1]
   13470:	str	r3, [r2]
   13474:	mov	r3, #0
   13478:	b	1333c <__assert_fail@plt+0x182c>
   1347c:	ldr	r2, [pc, #292]	; 135a8 <__assert_fail@plt+0x1a98>
   13480:	mov	r3, #0
   13484:	str	r1, [r2, #8]
   13488:	b	1333c <__assert_fail@plt+0x182c>
   1348c:	ldr	r5, [pc, #280]	; 135ac <__assert_fail@plt+0x1a9c>
   13490:	ldr	r6, [pc, #252]	; 13594 <__assert_fail@plt+0x1a84>
   13494:	ldr	r1, [r5]
   13498:	ldr	r0, [r6]
   1349c:	add	r1, r1, #1
   134a0:	lsl	r1, r1, #3
   134a4:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   134a8:	cmp	r0, #0
   134ac:	str	r0, [r6]
   134b0:	beq	13560 <__assert_fail@plt+0x1a50>
   134b4:	ldr	r3, [r5]
   134b8:	mvn	r1, #0
   134bc:	add	ip, r3, #1
   134c0:	add	r2, r0, r3, lsl #3
   134c4:	str	r4, [r0, r3, lsl #3]
   134c8:	str	ip, [r5]
   134cc:	mov	r3, #0
   134d0:	str	r1, [r2, #4]
   134d4:	b	1333c <__assert_fail@plt+0x182c>
   134d8:	ldr	r2, [pc, #200]	; 135a8 <__assert_fail@plt+0x1a98>
   134dc:	mov	r1, #1
   134e0:	mov	r3, #0
   134e4:	str	r1, [r2, #16]
   134e8:	b	1333c <__assert_fail@plt+0x182c>
   134ec:	ldr	r2, [pc, #136]	; 1357c <__assert_fail@plt+0x1a6c>
   134f0:	mov	r3, #0
   134f4:	str	r1, [r2, #20]
   134f8:	b	1333c <__assert_fail@plt+0x182c>
   134fc:	ldr	r2, [pc, #164]	; 135a8 <__assert_fail@plt+0x1a98>
   13500:	mov	r3, #0
   13504:	str	r1, [r2, #12]
   13508:	b	1333c <__assert_fail@plt+0x182c>
   1350c:	ldr	r2, [pc, #104]	; 1357c <__assert_fail@plt+0x1a6c>
   13510:	mov	r1, #10
   13514:	mov	r3, #0
   13518:	str	r1, [r2, #4]
   1351c:	b	1333c <__assert_fail@plt+0x182c>
   13520:	ldr	r2, [pc, #84]	; 1357c <__assert_fail@plt+0x1a6c>
   13524:	mov	r1, #2
   13528:	mov	r3, #0
   1352c:	str	r1, [r2, #4]
   13530:	b	1333c <__assert_fail@plt+0x182c>
   13534:	ldr	r2, [pc, #116]	; 135b0 <__assert_fail@plt+0x1aa0>
   13538:	mov	r1, #1
   1353c:	mov	r3, #0
   13540:	str	r1, [r2]
   13544:	b	1333c <__assert_fail@plt+0x182c>
   13548:	ldr	r2, [pc, #44]	; 1357c <__assert_fail@plt+0x1a6c>
   1354c:	mov	r3, #0
   13550:	str	r1, [r2, #12]
   13554:	b	1333c <__assert_fail@plt+0x182c>
   13558:	mov	r3, #7
   1355c:	b	1333c <__assert_fail@plt+0x182c>
   13560:	bl	11948 <__errno_location@plt>
   13564:	ldr	r2, [pc, #72]	; 135b4 <__assert_fail@plt+0x1aa4>
   13568:	ldr	r1, [r0]
   1356c:	mov	r0, #1
   13570:	bl	11858 <error@plt>
   13574:	ldr	r0, [r6]
   13578:	b	134b4 <__assert_fail@plt+0x19a4>
   1357c:			; <UNDEFINED> instruction: 0x000331b0
   13580:	andeq	r3, r3, r0, lsr ip
   13584:	andeq	r3, r3, r4, asr #20
   13588:	andeq	r3, r3, r4, lsl #25
   1358c:	andeq	r3, r3, r4, lsr #24
   13590:	andeq	r3, r3, r8, asr #20
   13594:	andeq	r3, r3, r8, lsl #25
   13598:	andeq	r3, r3, r4, asr #24
   1359c:	andeq	r0, r2, r8, lsl #18
   135a0:	andeq	r3, r3, ip, asr #24
   135a4:	andeq	r3, r3, ip, lsr #24
   135a8:	ldrdeq	r3, [r3], -r4
   135ac:	andeq	r3, r3, r8, lsr #24
   135b0:	andeq	r3, r3, r4, lsr ip
   135b4:	andeq	r0, r2, r0, ror #17
   135b8:	push	{lr}		; (str lr, [sp, #-4]!)
   135bc:	sub	sp, sp, #12
   135c0:	ldr	lr, [pc, #156]	; 13664 <__assert_fail@plt+0x1b54>
   135c4:	ldr	r3, [lr, #24]
   135c8:	cmp	r3, #0
   135cc:	beq	13604 <__assert_fail@plt+0x1af4>
   135d0:	ldr	r2, [lr, #28]
   135d4:	and	ip, r0, #1016	; 0x3f8
   135d8:	cmp	r2, ip
   135dc:	beq	13604 <__assert_fail@plt+0x1af4>
   135e0:	add	r2, lr, #24
   135e4:	b	135f4 <__assert_fail@plt+0x1ae4>
   135e8:	ldr	r1, [r2, #4]
   135ec:	cmp	r1, ip
   135f0:	beq	13604 <__assert_fail@plt+0x1af4>
   135f4:	ldr	r3, [r2, #8]
   135f8:	add	r2, r2, #8
   135fc:	cmp	r3, #0
   13600:	bne	135e8 <__assert_fail@plt+0x1ad8>
   13604:	ldr	r1, [lr, #208]	; 0xd0
   13608:	cmp	r1, #0
   1360c:	beq	13644 <__assert_fail@plt+0x1b34>
   13610:	ldr	r2, [lr, #212]	; 0xd4
   13614:	and	r0, r0, #7
   13618:	cmp	r0, r2
   1361c:	beq	13644 <__assert_fail@plt+0x1b34>
   13620:	ldr	r2, [pc, #64]	; 13668 <__assert_fail@plt+0x1b58>
   13624:	b	13634 <__assert_fail@plt+0x1b24>
   13628:	ldr	ip, [r2, #4]
   1362c:	cmp	ip, r0
   13630:	beq	13644 <__assert_fail@plt+0x1b34>
   13634:	ldr	r1, [r2, #8]
   13638:	add	r2, r2, #8
   1363c:	cmp	r1, #0
   13640:	bne	13628 <__assert_fail@plt+0x1b18>
   13644:	str	r1, [sp]
   13648:	ldr	r2, [pc, #28]	; 1366c <__assert_fail@plt+0x1b5c>
   1364c:	mov	r1, #20
   13650:	ldr	r0, [pc, #24]	; 13670 <__assert_fail@plt+0x1b60>
   13654:	bl	11954 <snprintf@plt>
   13658:	ldr	r0, [pc, #16]	; 13670 <__assert_fail@plt+0x1b60>
   1365c:	add	sp, sp, #12
   13660:	pop	{pc}		; (ldr pc, [sp], #4)
   13664:			; <UNDEFINED> instruction: 0x000331b0
   13668:	andeq	r3, r3, r0, lsl #5
   1366c:	andeq	r0, r2, r8, lsr #18
   13670:	andeq	r3, r3, r8, ror #11
   13674:	ldr	r3, [pc, #608]	; 138dc <__assert_fail@plt+0x1dcc>
   13678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1367c:	sub	sp, sp, #172	; 0xac
   13680:	ldr	r3, [r3, #40]	; 0x28
   13684:	ldr	r2, [pc, #592]	; 138dc <__assert_fail@plt+0x1dcc>
   13688:	str	r3, [sp, #16]
   1368c:	cmp	r3, #0
   13690:	add	r3, r3, #1
   13694:	str	r3, [r2, #40]	; 0x28
   13698:	beq	136a4 <__assert_fail@plt+0x1b94>
   1369c:	add	sp, sp, #172	; 0xac
   136a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136a4:	str	r1, [sp, #20]
   136a8:	mov	sl, r0
   136ac:	mov	r3, #3
   136b0:	add	r2, sp, #24
   136b4:	add	r1, sp, #28
   136b8:	ldr	r0, [pc, #544]	; 138e0 <__assert_fail@plt+0x1dd0>
   136bc:	bl	1cc80 <argp_parse@@Base+0x1380>
   136c0:	cmp	r0, #0
   136c4:	blt	1385c <__assert_fail@plt+0x1d4c>
   136c8:	ldr	r3, [sp, #28]
   136cc:	ldr	r9, [sp, #24]
   136d0:	str	r3, [sp, #8]
   136d4:	lsl	r2, r3, #1
   136d8:	add	r3, r2, r3
   136dc:	str	r2, [sp, #12]
   136e0:	add	r3, r9, r3, lsl #7
   136e4:	cmp	r9, r3
   136e8:	mov	r8, r9
   136ec:	bcs	137f8 <__assert_fail@plt+0x1ce8>
   136f0:	mov	r6, #32
   136f4:	add	r1, r9, #8
   136f8:	mov	r2, r6
   136fc:	add	r0, sp, #32
   13700:	bl	11990 <strncpy@plt>
   13704:	ldrsh	r1, [sl, #4]
   13708:	mov	r3, #0
   1370c:	strb	r3, [sp, #64]	; 0x40
   13710:	cmp	r1, #6
   13714:	beq	13814 <__assert_fail@plt+0x1d04>
   13718:	ldr	r5, [sl, #40]	; 0x28
   1371c:	cmp	r5, #0
   13720:	ble	137dc <__assert_fail@plt+0x1ccc>
   13724:	ldr	r3, [sl, #44]	; 0x2c
   13728:	add	r7, r9, #44	; 0x2c
   1372c:	sub	fp, r3, #4
   13730:	ldr	r4, [sp, #16]
   13734:	b	13740 <__assert_fail@plt+0x1c30>
   13738:	cmp	r4, r5
   1373c:	beq	137dc <__assert_fail@plt+0x1ccc>
   13740:	mov	r2, r6
   13744:	mov	r1, r7
   13748:	ldr	r0, [fp, #4]!
   1374c:	bl	11ad4 <strncmp@plt>
   13750:	add	r4, r4, #1
   13754:	cmp	r0, #0
   13758:	bne	13738 <__assert_fail@plt+0x1c28>
   1375c:	mov	r8, r0
   13760:	mov	r3, #10
   13764:	add	r2, sp, #32
   13768:	mov	r1, #6
   1376c:	ldr	r0, [sp, #20]
   13770:	bl	16408 <daemon@@Base+0x288>
   13774:	subs	r5, r0, #0
   13778:	beq	137c4 <__assert_fail@plt+0x1cb4>
   1377c:	bl	11948 <__errno_location@plt>
   13780:	mov	r3, r5
   13784:	ldr	r2, [pc, #344]	; 138e4 <__assert_fail@plt+0x1dd4>
   13788:	mov	r1, #100	; 0x64
   1378c:	mov	r4, r0
   13790:	str	r8, [r0]
   13794:	add	r0, sp, #68	; 0x44
   13798:	bl	11954 <snprintf@plt>
   1379c:	str	r8, [r4]
   137a0:	add	r1, sp, #68	; 0x44
   137a4:	ldr	r0, [pc, #316]	; 138e8 <__assert_fail@plt+0x1dd8>
   137a8:	bl	12d3c <__assert_fail@plt+0x122c>
   137ac:	ldr	r2, [pc, #312]	; 138ec <__assert_fail@plt+0x1ddc>
   137b0:	add	r1, sp, #68	; 0x44
   137b4:	mov	r3, #4
   137b8:	ldr	r2, [r2]
   137bc:	mov	r0, #43	; 0x2b
   137c0:	bl	14100 <__assert_fail@plt+0x25f0>
   137c4:	ldr	r3, [sp, #28]
   137c8:	ldr	r2, [sp, #24]
   137cc:	str	r3, [sp, #8]
   137d0:	mov	r8, r2
   137d4:	lsl	r3, r3, #1
   137d8:	str	r3, [sp, #12]
   137dc:	ldr	r3, [sp, #12]
   137e0:	ldr	r2, [sp, #8]
   137e4:	add	r9, r9, #384	; 0x180
   137e8:	add	r3, r3, r2
   137ec:	add	r3, r8, r3, lsl #7
   137f0:	cmp	r9, r3
   137f4:	bcc	136f4 <__assert_fail@plt+0x1be4>
   137f8:	mov	r0, r8
   137fc:	bl	1ca50 <argp_parse@@Base+0x1150>
   13800:	ldr	r2, [pc, #212]	; 138dc <__assert_fail@plt+0x1dcc>
   13804:	mov	r3, #0
   13808:	str	r3, [r2, #40]	; 0x28
   1380c:	add	sp, sp, #172	; 0xac
   13810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13814:	mov	r3, #10
   13818:	add	r2, sp, #32
   1381c:	ldr	r0, [sp, #20]
   13820:	bl	16408 <daemon@@Base+0x288>
   13824:	subs	r5, r0, #0
   13828:	beq	137c4 <__assert_fail@plt+0x1cb4>
   1382c:	bl	11948 <__errno_location@plt>
   13830:	mov	r3, #0
   13834:	ldr	r2, [pc, #168]	; 138e4 <__assert_fail@plt+0x1dd4>
   13838:	mov	r1, #100	; 0x64
   1383c:	str	r3, [r0]
   13840:	mov	r4, r0
   13844:	mov	r3, r5
   13848:	add	r0, sp, #68	; 0x44
   1384c:	bl	11954 <snprintf@plt>
   13850:	mov	r3, #0
   13854:	str	r3, [r4]
   13858:	b	137a0 <__assert_fail@plt+0x1c90>
   1385c:	bl	11948 <__errno_location@plt>
   13860:	mov	r5, r0
   13864:	ldr	r0, [r0]
   13868:	cmp	r0, #0
   1386c:	bne	138b8 <__assert_fail@plt+0x1da8>
   13870:	add	r4, sp, #68	; 0x44
   13874:	mov	r0, r4
   13878:	ldr	r3, [pc, #112]	; 138f0 <__assert_fail@plt+0x1de0>
   1387c:	ldr	r2, [pc, #96]	; 138e4 <__assert_fail@plt+0x1dd4>
   13880:	mov	r1, #100	; 0x64
   13884:	bl	11954 <snprintf@plt>
   13888:	mov	r3, #0
   1388c:	str	r3, [r5]
   13890:	mov	r1, r4
   13894:	ldr	r0, [pc, #76]	; 138e8 <__assert_fail@plt+0x1dd8>
   13898:	bl	12d3c <__assert_fail@plt+0x122c>
   1389c:	ldr	r2, [pc, #72]	; 138ec <__assert_fail@plt+0x1ddc>
   138a0:	mov	r1, r4
   138a4:	mov	r3, #4
   138a8:	ldr	r2, [r2]
   138ac:	mov	r0, #43	; 0x2b
   138b0:	bl	14100 <__assert_fail@plt+0x25f0>
   138b4:	b	1369c <__assert_fail@plt+0x1b8c>
   138b8:	bl	118b8 <strerror@plt>
   138bc:	add	r4, sp, #68	; 0x44
   138c0:	ldr	r3, [pc, #40]	; 138f0 <__assert_fail@plt+0x1de0>
   138c4:	ldr	r2, [pc, #40]	; 138f4 <__assert_fail@plt+0x1de4>
   138c8:	mov	r1, #100	; 0x64
   138cc:	str	r0, [sp]
   138d0:	mov	r0, r4
   138d4:	bl	11954 <snprintf@plt>
   138d8:	b	13888 <__assert_fail@plt+0x1d78>
   138dc:	ldrdeq	r3, [r3], -r4
   138e0:	andeq	r0, r2, r0, lsr r9
   138e4:	andeq	r0, r2, r4, ror #18
   138e8:	andeq	r1, r2, r8, lsl #31
   138ec:	andeq	r3, r3, r0, asr #24
   138f0:	andeq	r0, r2, r0, asr #18
   138f4:	andeq	r0, r2, r4, asr r9
   138f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138fc:	sub	sp, sp, #1456	; 0x5b0
   13900:	sub	sp, sp, #12
   13904:	mov	r4, r0
   13908:	mov	r7, r1
   1390c:	mov	sl, r2
   13910:	add	r0, sp, #8
   13914:	mov	r2, #48	; 0x30
   13918:	mov	r1, #0
   1391c:	mov	r6, r3
   13920:	bl	11984 <memset@plt>
   13924:	ldrsh	r3, [r4, #4]
   13928:	cmp	r3, #6
   1392c:	beq	13e58 <__assert_fail@plt+0x2348>
   13930:	add	r3, r4, #416	; 0x1a0
   13934:	ldr	r8, [pc, #1852]	; 14078 <__assert_fail@plt+0x2568>
   13938:	mov	r2, #15
   1393c:	str	r3, [sp, #8]
   13940:	mov	r3, #1
   13944:	str	r8, [sp, #16]
   13948:	str	r2, [sp, #12]
   1394c:	str	r3, [sp, #20]
   13950:	ldr	r3, [r4, #432]	; 0x1b0
   13954:	cmp	r3, #0
   13958:	addeq	r5, sp, #24
   1395c:	beq	13974 <__assert_fail@plt+0x1e64>
   13960:	mov	r0, r3
   13964:	str	r3, [sp, #24]
   13968:	bl	11918 <strlen@plt>
   1396c:	add	r5, sp, #32
   13970:	str	r0, [sp, #28]
   13974:	mov	r3, #1
   13978:	cmp	r6, #0
   1397c:	str	r8, [r5]
   13980:	str	r3, [r5, #4]
   13984:	beq	13e24 <__assert_fail@plt+0x2314>
   13988:	mov	r0, r6
   1398c:	str	r6, [r5, #8]
   13990:	bl	11918 <strlen@plt>
   13994:	str	r0, [r5, #12]
   13998:	ldrsh	r3, [r4, #4]
   1399c:	ldr	r6, [pc, #1752]	; 1407c <__assert_fail@plt+0x256c>
   139a0:	ldr	r0, [pc, #1752]	; 14080 <__assert_fail@plt+0x2570>
   139a4:	add	r3, r6, r3, lsl #2
   139a8:	ldr	r1, [r3, #320]	; 0x140
   139ac:	bl	12d3c <__assert_fail@plt+0x122c>
   139b0:	ldrsh	r3, [r4, #4]
   139b4:	cmp	r3, #9
   139b8:	ldrls	pc, [pc, r3, lsl #2]
   139bc:	b	13a54 <__assert_fail@plt+0x1f44>
   139c0:	andeq	r3, r1, r0, ror #27
   139c4:	strdeq	r3, [r1], -ip
   139c8:	strdeq	r3, [r1], -ip
   139cc:	strdeq	r3, [r1], -r4
   139d0:	muleq	r1, r8, sl
   139d4:	strdeq	r3, [r1], -r4
   139d8:	strdeq	r3, [r1], -r4
   139dc:	andeq	r3, r1, r0, ror sl
   139e0:	andeq	r3, r1, ip, lsr #26
   139e4:	strdeq	r3, [r1], -ip
   139e8:	mov	r3, #0
   139ec:	cmp	fp, #0
   139f0:	strh	r3, [r4, #4]
   139f4:	str	fp, [r6]
   139f8:	ldr	r7, [r4, #40]	; 0x28
   139fc:	bne	13f9c <__assert_fail@plt+0x248c>
   13a00:	add	r5, sp, #436	; 0x1b4
   13a04:	mov	r3, r7
   13a08:	mov	r0, r5
   13a0c:	ldr	r2, [pc, #1648]	; 14084 <__assert_fail@plt+0x2574>
   13a10:	mov	r1, #100	; 0x64
   13a14:	bl	11954 <snprintf@plt>
   13a18:	mov	r7, #0
   13a1c:	mov	r1, r5
   13a20:	ldr	r0, [pc, #1632]	; 14088 <__assert_fail@plt+0x2578>
   13a24:	str	r7, [r6]
   13a28:	bl	12d3c <__assert_fail@plt+0x122c>
   13a2c:	ldr	r2, [pc, #1624]	; 1408c <__assert_fail@plt+0x257c>
   13a30:	mov	r3, #4
   13a34:	mov	r1, r5
   13a38:	ldr	r2, [r2]
   13a3c:	mov	r0, #43	; 0x2b
   13a40:	bl	14100 <__assert_fail@plt+0x25f0>
   13a44:	ldr	r0, [r4, #40]	; 0x28
   13a48:	bl	1ca50 <argp_parse@@Base+0x1150>
   13a4c:	ldrsh	r3, [r4, #4]
   13a50:	str	r7, [r4, #40]	; 0x28
   13a54:	cmp	r3, #8
   13a58:	beq	13a64 <__assert_fail@plt+0x1f54>
   13a5c:	mov	r3, #0
   13a60:	str	r3, [r4, #452]	; 0x1c4
   13a64:	add	sp, sp, #1456	; 0x5b0
   13a68:	add	sp, sp, #12
   13a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a70:	mov	r0, #0
   13a74:	bl	1175c <time@plt>
   13a78:	ldr	r5, [r4, #8]
   13a7c:	sub	r5, r0, r5
   13a80:	cmp	r5, #179	; 0xb3
   13a84:	ble	13ed0 <__assert_fail@plt+0x23c0>
   13a88:	ldr	r0, [pc, #1536]	; 14090 <__assert_fail@plt+0x2580>
   13a8c:	bl	12d3c <__assert_fail@plt+0x122c>
   13a90:	mov	r3, #4
   13a94:	strh	r3, [r4, #4]
   13a98:	ldr	r8, [pc, #1516]	; 1408c <__assert_fail@plt+0x257c>
   13a9c:	ldr	r1, [r4, #40]	; 0x28
   13aa0:	ldr	r0, [pc, #1516]	; 14094 <__assert_fail@plt+0x2584>
   13aa4:	bl	12d3c <__assert_fail@plt+0x122c>
   13aa8:	mov	r0, r7
   13aac:	ldr	r1, [r8]
   13ab0:	bl	11804 <strcasecmp@plt>
   13ab4:	cmp	r0, #0
   13ab8:	bne	13e08 <__assert_fail@plt+0x22f8>
   13abc:	ldr	r3, [pc, #1492]	; 14098 <__assert_fail@plt+0x2588>
   13ac0:	ldr	r3, [r3]
   13ac4:	cmp	r3, #0
   13ac8:	bne	13ef0 <__assert_fail@plt+0x23e0>
   13acc:	ldrh	r9, [r4, #44]	; 0x2c
   13ad0:	cmp	r9, #2
   13ad4:	ldreq	r6, [r6, #312]	; 0x138
   13ad8:	ldrne	r6, [r6, #316]	; 0x13c
   13adc:	ldreq	r7, [pc, #1464]	; 1409c <__assert_fail@plt+0x258c>
   13ae0:	ldrne	r7, [pc, #1464]	; 140a0 <__assert_fail@plt+0x2590>
   13ae4:	cmp	r6, #0
   13ae8:	addge	r5, sp, #436	; 0x1b4
   13aec:	blt	13fb4 <__assert_fail@plt+0x24a4>
   13af0:	ldr	r2, [pc, #1452]	; 140a4 <__assert_fail@plt+0x2594>
   13af4:	ldr	r1, [sp, #40]	; 0x28
   13af8:	ldr	r3, [r4, #444]	; 0x1bc
   13afc:	ldr	r0, [r2]
   13b00:	ldr	r2, [sp, #8]
   13b04:	str	r0, [r4, #8]
   13b08:	mov	r0, r5
   13b0c:	str	r1, [sp, #4]
   13b10:	str	r2, [sp]
   13b14:	ldr	r1, [pc, #1420]	; 140a8 <__assert_fail@plt+0x2598>
   13b18:	ldr	r2, [pc, #1420]	; 140ac <__assert_fail@plt+0x259c>
   13b1c:	bl	11954 <snprintf@plt>
   13b20:	mov	r0, r5
   13b24:	bl	11918 <strlen@plt>
   13b28:	ldr	r2, [r4, #172]	; 0xac
   13b2c:	mov	r1, r5
   13b30:	add	r3, r4, #44	; 0x2c
   13b34:	str	r2, [sp, #4]
   13b38:	str	r3, [sp]
   13b3c:	mov	r3, #0
   13b40:	cmp	r0, #1024	; 0x400
   13b44:	movlt	r5, r0
   13b48:	movge	r5, #1024	; 0x400
   13b4c:	mov	r2, r5
   13b50:	mov	r0, r6
   13b54:	bl	119d8 <sendto@plt>
   13b58:	cmp	r0, r5
   13b5c:	beq	13bd8 <__assert_fail@plt+0x20c8>
   13b60:	bl	11948 <__errno_location@plt>
   13b64:	ldr	r5, [r0]
   13b68:	mov	r9, r0
   13b6c:	mov	r0, r5
   13b70:	bl	118b8 <strerror@plt>
   13b74:	mov	r1, r5
   13b78:	mov	r2, r0
   13b7c:	ldr	r0, [pc, #1324]	; 140b0 <__assert_fail@plt+0x25a0>
   13b80:	bl	12d3c <__assert_fail@plt+0x122c>
   13b84:	mov	r3, #7
   13b88:	cmp	r5, #0
   13b8c:	strh	r3, [r4, #4]
   13b90:	str	r5, [r9]
   13b94:	bne	13f3c <__assert_fail@plt+0x242c>
   13b98:	add	r5, sp, #136	; 0x88
   13b9c:	mov	r0, r5
   13ba0:	ldr	r3, [pc, #1292]	; 140b4 <__assert_fail@plt+0x25a4>
   13ba4:	ldr	r2, [pc, #1240]	; 14084 <__assert_fail@plt+0x2574>
   13ba8:	mov	r1, #100	; 0x64
   13bac:	bl	11954 <snprintf@plt>
   13bb0:	mov	r3, #0
   13bb4:	str	r3, [r9]
   13bb8:	mov	r1, r5
   13bbc:	ldr	r0, [pc, #1220]	; 14088 <__assert_fail@plt+0x2578>
   13bc0:	bl	12d3c <__assert_fail@plt+0x122c>
   13bc4:	ldr	r2, [r8]
   13bc8:	mov	r1, r5
   13bcc:	mov	r3, #4
   13bd0:	mov	r0, #43	; 0x2b
   13bd4:	bl	14100 <__assert_fail@plt+0x25f0>
   13bd8:	ldr	r3, [r7]
   13bdc:	cmp	r3, #0
   13be0:	bge	13d24 <__assert_fail@plt+0x2214>
   13be4:	mov	r0, r6
   13be8:	bl	11af8 <close@plt>
   13bec:	ldrsh	r3, [r4, #4]
   13bf0:	b	13a54 <__assert_fail@plt+0x1f44>
   13bf4:	ldr	r3, [pc, #1192]	; 140a4 <__assert_fail@plt+0x2594>
   13bf8:	tst	sl, #1
   13bfc:	ldr	r3, [r3]
   13c00:	str	r3, [r4, #8]
   13c04:	bne	13fa4 <__assert_fail@plt+0x2494>
   13c08:	str	r3, [r4, #8]
   13c0c:	ldr	r1, [r4, #40]	; 0x28
   13c10:	ldr	r0, [pc, #1148]	; 14094 <__assert_fail@plt+0x2584>
   13c14:	bl	12d3c <__assert_fail@plt+0x122c>
   13c18:	ldrh	r3, [r4, #4]
   13c1c:	ldr	r2, [pc, #1172]	; 140b8 <__assert_fail@plt+0x25a8>
   13c20:	ldr	r1, [pc, #1172]	; 140bc <__assert_fail@plt+0x25ac>
   13c24:	sub	r3, r3, #2
   13c28:	ldrsh	r0, [r4, #6]
   13c2c:	uxth	r3, r3
   13c30:	cmp	r3, #1
   13c34:	movhi	r3, r2
   13c38:	movls	r3, r1
   13c3c:	str	r3, [r5, #16]
   13c40:	movhi	r3, #1
   13c44:	movls	r3, #2
   13c48:	ldr	r9, [pc, #1112]	; 140a8 <__assert_fail@plt+0x2598>
   13c4c:	mov	r7, #6
   13c50:	str	r3, [r5, #20]
   13c54:	mov	r8, #0
   13c58:	b	13cbc <__assert_fail@plt+0x21ac>
   13c5c:	bl	11948 <__errno_location@plt>
   13c60:	ldrsh	r3, [r4, #4]
   13c64:	ldr	fp, [r0]
   13c68:	mov	r6, r0
   13c6c:	cmp	r3, #9
   13c70:	cmpeq	fp, #11
   13c74:	beq	13a5c <__assert_fail@plt+0x1f4c>
   13c78:	ldrsh	r0, [r4, #6]
   13c7c:	sub	r5, fp, #5
   13c80:	bl	11af8 <close@plt>
   13c84:	bics	r5, r5, #4
   13c88:	mov	r2, r8
   13c8c:	mov	r1, r9
   13c90:	bne	139e8 <__assert_fail@plt+0x1ed8>
   13c94:	ldrh	r3, [r4, #4]
   13c98:	sub	r3, r3, #2
   13c9c:	cmp	r3, #1
   13ca0:	bhi	139e8 <__assert_fail@plt+0x1ed8>
   13ca4:	ldr	r0, [r4, #40]	; 0x28
   13ca8:	bl	1187c <open64@plt>
   13cac:	sxth	r0, r0
   13cb0:	cmp	r0, #0
   13cb4:	strh	r0, [r4, #6]
   13cb8:	blt	13f64 <__assert_fail@plt+0x2454>
   13cbc:	mov	r2, r7
   13cc0:	add	r1, sp, #8
   13cc4:	bl	119b4 <writev@plt>
   13cc8:	cmp	r0, #0
   13ccc:	blt	13c5c <__assert_fail@plt+0x214c>
   13cd0:	tst	sl, #2
   13cd4:	beq	13d24 <__assert_fail@plt+0x2214>
   13cd8:	ldr	r3, [r4, #460]	; 0x1cc
   13cdc:	tst	r3, #1
   13ce0:	bne	13d24 <__assert_fail@plt+0x2214>
   13ce4:	ldrsh	r0, [r4, #6]
   13ce8:	bl	11678 <fsync@plt>
   13cec:	ldrsh	r3, [r4, #4]
   13cf0:	b	13a54 <__assert_fail@plt+0x1f44>
   13cf4:	ldr	r3, [pc, #936]	; 140a4 <__assert_fail@plt+0x2594>
   13cf8:	ldr	r0, [pc, #952]	; 140b8 <__assert_fail@plt+0x25a8>
   13cfc:	ldr	r3, [r3]
   13d00:	str	r3, [r4, #8]
   13d04:	bl	12d3c <__assert_fail@plt+0x122c>
   13d08:	ldr	r2, [pc, #940]	; 140bc <__assert_fail@plt+0x25ac>
   13d0c:	mov	r3, #2
   13d10:	add	r1, sp, #8
   13d14:	mov	r0, r4
   13d18:	str	r2, [r5, #16]
   13d1c:	str	r3, [r5, #20]
   13d20:	bl	13674 <__assert_fail@plt+0x1b64>
   13d24:	ldrsh	r3, [r4, #4]
   13d28:	b	13a54 <__assert_fail@plt+0x1f44>
   13d2c:	ldr	r1, [r4, #40]	; 0x28
   13d30:	ldr	r0, [pc, #860]	; 14094 <__assert_fail@plt+0x2584>
   13d34:	bl	12d3c <__assert_fail@plt+0x122c>
   13d38:	mov	r0, #0
   13d3c:	bl	1175c <time@plt>
   13d40:	ldr	r1, [r4, #8]
   13d44:	sub	r1, r0, r1
   13d48:	cmp	r1, #179	; 0xb3
   13d4c:	ble	13ebc <__assert_fail@plt+0x23ac>
   13d50:	mov	r8, #32
   13d54:	add	r5, sp, #436	; 0x1b4
   13d58:	mov	r2, r8
   13d5c:	mov	r1, #0
   13d60:	mov	r0, r5
   13d64:	bl	11984 <memset@plt>
   13d68:	ldr	r1, [pc, #848]	; 140c0 <__assert_fail@plt+0x25b0>
   13d6c:	ldr	r3, [r6, #4]
   13d70:	mov	r2, r5
   13d74:	cmp	r3, #0
   13d78:	str	r3, [sp, #440]	; 0x1b8
   13d7c:	ldr	r1, [r1, #44]	; 0x2c
   13d80:	add	r3, sp, #136	; 0x88
   13d84:	ldr	r0, [r4, #40]	; 0x28
   13d88:	streq	r8, [sp, #436]	; 0x1b4
   13d8c:	bl	11a98 <getaddrinfo@plt>
   13d90:	subs	r8, r0, #0
   13d94:	beq	13f00 <__assert_fail@plt+0x23f0>
   13d98:	bl	11714 <gai_strerror@plt>
   13d9c:	mov	r1, r0
   13da0:	ldr	r0, [pc, #796]	; 140c4 <__assert_fail@plt+0x25b4>
   13da4:	bl	12d3c <__assert_fail@plt+0x122c>
   13da8:	ldr	r1, [r4, #452]	; 0x1c4
   13dac:	ldr	r0, [pc, #788]	; 140c8 <__assert_fail@plt+0x25b8>
   13db0:	bl	12d3c <__assert_fail@plt+0x122c>
   13db4:	ldr	r3, [r4, #452]	; 0x1c4
   13db8:	sub	r3, r3, #1
   13dbc:	cmp	r3, #0
   13dc0:	str	r3, [r4, #452]	; 0x1c4
   13dc4:	bge	13d24 <__assert_fail@plt+0x2214>
   13dc8:	mov	r5, #0
   13dcc:	strh	r5, [r4, #4]
   13dd0:	ldr	r0, [r4, #40]	; 0x28
   13dd4:	bl	1ca50 <argp_parse@@Base+0x1150>
   13dd8:	str	r5, [r4, #40]	; 0x28
   13ddc:	b	13d24 <__assert_fail@plt+0x2214>
   13de0:	ldr	r3, [pc, #700]	; 140a4 <__assert_fail@plt+0x2594>
   13de4:	ldr	r0, [pc, #716]	; 140b8 <__assert_fail@plt+0x25a8>
   13de8:	ldr	r3, [r3]
   13dec:	str	r3, [r4, #8]
   13df0:	bl	12d3c <__assert_fail@plt+0x122c>
   13df4:	ldrsh	r3, [r4, #4]
   13df8:	b	13a54 <__assert_fail@plt+0x1f44>
   13dfc:	ldr	r3, [pc, #672]	; 140a4 <__assert_fail@plt+0x2594>
   13e00:	ldr	r3, [r3]
   13e04:	b	13c08 <__assert_fail@plt+0x20f8>
   13e08:	ldr	r3, [r6]
   13e0c:	cmp	r3, #0
   13e10:	beq	13abc <__assert_fail@plt+0x1fac>
   13e14:	ldr	r0, [pc, #688]	; 140cc <__assert_fail@plt+0x25bc>
   13e18:	bl	12d3c <__assert_fail@plt+0x122c>
   13e1c:	ldrsh	r3, [r4, #4]
   13e20:	b	13a54 <__assert_fail@plt+0x1f44>
   13e24:	ldr	r3, [r4, #452]	; 0x1c4
   13e28:	cmp	r3, #1
   13e2c:	ble	13ea8 <__assert_fail@plt+0x2398>
   13e30:	add	r6, sp, #56	; 0x38
   13e34:	ldr	r2, [pc, #660]	; 140d0 <__assert_fail@plt+0x25c0>
   13e38:	mov	r1, #80	; 0x50
   13e3c:	mov	r0, r6
   13e40:	str	r6, [r5, #8]
   13e44:	bl	11954 <snprintf@plt>
   13e48:	mov	r0, r6
   13e4c:	bl	11918 <strlen@plt>
   13e50:	str	r0, [r5, #12]
   13e54:	b	13998 <__assert_fail@plt+0x1e88>
   13e58:	add	r5, sp, #236	; 0xec
   13e5c:	ldr	r0, [pc, #576]	; 140a4 <__assert_fail@plt+0x2594>
   13e60:	ldr	r8, [r4, #432]	; 0x1b0
   13e64:	str	r5, [sp, #8]
   13e68:	bl	1178c <ctime@plt>
   13e6c:	mov	r3, r8
   13e70:	ldr	r2, [pc, #604]	; 140d4 <__assert_fail@plt+0x25c4>
   13e74:	mov	r1, #200	; 0xc8
   13e78:	ldr	r8, [pc, #504]	; 14078 <__assert_fail@plt+0x2568>
   13e7c:	str	r0, [sp]
   13e80:	mov	r0, r5
   13e84:	bl	11954 <snprintf@plt>
   13e88:	mov	r0, r5
   13e8c:	bl	11918 <strlen@plt>
   13e90:	ldr	r2, [pc, #576]	; 140d8 <__assert_fail@plt+0x25c8>
   13e94:	mov	r3, #0
   13e98:	str	r2, [sp, #16]
   13e9c:	str	r3, [sp, #20]
   13ea0:	str	r0, [sp, #12]
   13ea4:	b	13950 <__assert_fail@plt+0x1e40>
   13ea8:	ldr	r2, [r4, #448]	; 0x1c0
   13eac:	add	r3, r4, #176	; 0xb0
   13eb0:	str	r2, [r5, #12]
   13eb4:	str	r3, [r5, #8]
   13eb8:	b	13998 <__assert_fail@plt+0x1e88>
   13ebc:	rsb	r1, r1, #180	; 0xb4
   13ec0:	ldr	r0, [pc, #532]	; 140dc <__assert_fail@plt+0x25cc>
   13ec4:	bl	12d3c <__assert_fail@plt+0x122c>
   13ec8:	ldrsh	r3, [r4, #4]
   13ecc:	b	13a54 <__assert_fail@plt+0x1f44>
   13ed0:	ldr	r1, [r4, #40]	; 0x28
   13ed4:	ldr	r0, [pc, #440]	; 14094 <__assert_fail@plt+0x2584>
   13ed8:	bl	12d3c <__assert_fail@plt+0x122c>
   13edc:	rsb	r1, r5, #180	; 0xb4
   13ee0:	ldr	r0, [pc, #504]	; 140e0 <__assert_fail@plt+0x25d0>
   13ee4:	bl	12d3c <__assert_fail@plt+0x122c>
   13ee8:	ldrsh	r3, [r4, #4]
   13eec:	b	13a54 <__assert_fail@plt+0x1f44>
   13ef0:	ldr	r0, [pc, #492]	; 140e4 <__assert_fail@plt+0x25d4>
   13ef4:	bl	12d3c <__assert_fail@plt+0x122c>
   13ef8:	ldrsh	r3, [r4, #4]
   13efc:	b	13a54 <__assert_fail@plt+0x1f44>
   13f00:	ldr	r1, [r4, #40]	; 0x28
   13f04:	ldr	r0, [pc, #476]	; 140e8 <__assert_fail@plt+0x25d8>
   13f08:	bl	12d3c <__assert_fail@plt+0x122c>
   13f0c:	ldr	r5, [sp, #136]	; 0x88
   13f10:	add	r0, r4, #44	; 0x2c
   13f14:	ldr	r2, [r5, #16]
   13f18:	str	r2, [r4, #172]	; 0xac
   13f1c:	ldr	r1, [r5, #20]
   13f20:	bl	11744 <memcpy@plt>
   13f24:	mov	r0, r5
   13f28:	bl	11a8c <freeaddrinfo@plt>
   13f2c:	mov	r3, #4
   13f30:	str	r8, [r4, #452]	; 0x1c4
   13f34:	strh	r3, [r4, #4]
   13f38:	b	13a98 <__assert_fail@plt+0x1f88>
   13f3c:	mov	r0, r5
   13f40:	bl	118b8 <strerror@plt>
   13f44:	add	r5, sp, #136	; 0x88
   13f48:	ldr	r3, [pc, #356]	; 140b4 <__assert_fail@plt+0x25a4>
   13f4c:	ldr	r2, [pc, #408]	; 140ec <__assert_fail@plt+0x25dc>
   13f50:	mov	r1, #100	; 0x64
   13f54:	str	r0, [sp]
   13f58:	mov	r0, r5
   13f5c:	bl	11954 <snprintf@plt>
   13f60:	b	13bb0 <__assert_fail@plt+0x20a0>
   13f64:	ldr	r0, [r6]
   13f68:	ldr	r7, [r4, #40]	; 0x28
   13f6c:	cmp	r0, #0
   13f70:	strh	r5, [r4, #4]
   13f74:	beq	13a00 <__assert_fail@plt+0x1ef0>
   13f78:	bl	118b8 <strerror@plt>
   13f7c:	add	r5, sp, #436	; 0x1b4
   13f80:	mov	r3, r7
   13f84:	ldr	r2, [pc, #352]	; 140ec <__assert_fail@plt+0x25dc>
   13f88:	mov	r1, #100	; 0x64
   13f8c:	str	r0, [sp]
   13f90:	mov	r0, r5
   13f94:	bl	11954 <snprintf@plt>
   13f98:	b	13a18 <__assert_fail@plt+0x1f08>
   13f9c:	mov	r0, fp
   13fa0:	b	13f78 <__assert_fail@plt+0x2468>
   13fa4:	ldr	r0, [pc, #324]	; 140f0 <__assert_fail@plt+0x25e0>
   13fa8:	bl	12d3c <__assert_fail@plt+0x122c>
   13fac:	ldrsh	r3, [r4, #4]
   13fb0:	b	13a54 <__assert_fail@plt+0x1f44>
   13fb4:	add	r5, sp, #436	; 0x1b4
   13fb8:	mov	r2, #32
   13fbc:	mov	r1, #0
   13fc0:	mov	r0, r5
   13fc4:	bl	11984 <memset@plt>
   13fc8:	ldr	r3, [pc, #240]	; 140c0 <__assert_fail@plt+0x25b0>
   13fcc:	mov	r0, #2
   13fd0:	mov	ip, #1
   13fd4:	ldr	r1, [r3, #44]	; 0x2c
   13fd8:	str	r0, [sp, #444]	; 0x1bc
   13fdc:	mov	r2, r5
   13fe0:	add	r3, sp, #136	; 0x88
   13fe4:	mov	r0, #0
   13fe8:	str	r9, [sp, #440]	; 0x1b8
   13fec:	str	ip, [sp, #436]	; 0x1b4
   13ff0:	bl	11a98 <getaddrinfo@plt>
   13ff4:	cmp	r0, #0
   13ff8:	beq	14010 <__assert_fail@plt+0x2500>
   13ffc:	bl	11714 <gai_strerror@plt>
   14000:	mov	r1, r0
   14004:	ldr	r0, [pc, #232]	; 140f4 <__assert_fail@plt+0x25e4>
   14008:	bl	12d3c <__assert_fail@plt+0x122c>
   1400c:	b	13d24 <__assert_fail@plt+0x2214>
   14010:	ldr	r3, [sp, #136]	; 0x88
   14014:	ldmib	r3, {r0, r1, r2}
   14018:	bl	11aa4 <socket@plt>
   1401c:	subs	r6, r0, #0
   14020:	blt	14064 <__assert_fail@plt+0x2554>
   14024:	ldr	r3, [sp, #136]	; 0x88
   14028:	ldr	r2, [r3, #16]
   1402c:	ldr	r1, [r3, #20]
   14030:	bl	1196c <bind@plt>
   14034:	mov	r9, r0
   14038:	ldr	r0, [sp, #136]	; 0x88
   1403c:	bl	11a8c <freeaddrinfo@plt>
   14040:	cmp	r9, #0
   14044:	beq	13af0 <__assert_fail@plt+0x1fe0>
   14048:	bl	11948 <__errno_location@plt>
   1404c:	ldr	r0, [r0]
   14050:	bl	118b8 <strerror@plt>
   14054:	mov	r1, r0
   14058:	ldr	r0, [pc, #152]	; 140f8 <__assert_fail@plt+0x25e8>
   1405c:	bl	12d3c <__assert_fail@plt+0x122c>
   14060:	b	13d24 <__assert_fail@plt+0x2214>
   14064:	ldr	r0, [pc, #144]	; 140fc <__assert_fail@plt+0x25ec>
   14068:	bl	12d3c <__assert_fail@plt+0x122c>
   1406c:	ldr	r0, [sp, #136]	; 0x88
   14070:	bl	11a8c <freeaddrinfo@plt>
   14074:	b	13d24 <__assert_fail@plt+0x2214>
   14078:	andeq	r0, r2, r0, lsr #19
   1407c:			; <UNDEFINED> instruction: 0x000331b0
   14080:	andeq	r0, r2, r4, asr #19
   14084:	andeq	r0, r2, r4, ror #18
   14088:	andeq	r1, r2, r8, lsl #31
   1408c:	andeq	r3, r3, r0, asr #24
   14090:	ldrdeq	r0, [r2], -r4
   14094:	ldrdeq	r0, [r2], -r8
   14098:	andeq	r3, r3, r4, lsl #25
   1409c:	andeq	r3, r3, r8, ror #5
   140a0:	andeq	r3, r3, ip, ror #5
   140a4:	andeq	r3, r3, r0, lsl #25
   140a8:	andeq	r0, r0, r1, lsl #8
   140ac:	andeq	r0, r2, r4, ror #22
   140b0:	andeq	r0, r2, r4, ror fp
   140b4:	muleq	r2, r4, fp
   140b8:	muleq	r2, ip, r9
   140bc:	andeq	r0, r2, r0, ror r9
   140c0:	ldrdeq	r3, [r3], -r4
   140c4:	andeq	r0, r2, r0, lsr sl
   140c8:	andeq	r0, r2, r0, asr #20
   140cc:	muleq	r2, r8, sl
   140d0:	andeq	r0, r2, r4, lsr #19
   140d4:	andeq	r0, r2, r4, ror r9
   140d8:	andeq	r2, r2, r0, lsl #8
   140dc:	andeq	r0, r2, r8, ror #20
   140e0:	andeq	r0, r2, r0, lsl #20
   140e4:			; <UNDEFINED> instruction: 0x00020ab8
   140e8:	andeq	r0, r2, r0, asr sl
   140ec:	andeq	r0, r2, r4, asr r9
   140f0:	muleq	r2, ip, fp
   140f4:	andeq	r0, r2, r8, ror #21
   140f8:	andeq	r0, r2, ip, lsr fp
   140fc:	andeq	r0, r2, r4, lsl fp
   14100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14104:	mov	r6, r1
   14108:	ldr	r9, [pc, #1252]	; 145f4 <__assert_fail@plt+0x2ae4>
   1410c:	sub	sp, sp, #300	; 0x12c
   14110:	mov	r8, r3
   14114:	ldr	r1, [r9, #24]
   14118:	str	r0, [sp, #12]
   1411c:	cmp	r1, #0
   14120:	str	r2, [sp, #16]
   14124:	beq	1415c <__assert_fail@plt+0x264c>
   14128:	ldr	r3, [r9, #28]
   1412c:	and	r0, r0, #1016	; 0x3f8
   14130:	cmp	r0, r3
   14134:	beq	1415c <__assert_fail@plt+0x264c>
   14138:	add	r3, r9, #24
   1413c:	b	1414c <__assert_fail@plt+0x263c>
   14140:	ldr	r2, [r3, #4]
   14144:	cmp	r2, r0
   14148:	beq	1415c <__assert_fail@plt+0x264c>
   1414c:	ldr	r1, [r3, #8]
   14150:	add	r3, r3, #8
   14154:	cmp	r1, #0
   14158:	bne	14140 <__assert_fail@plt+0x2630>
   1415c:	ldr	r2, [r9, #208]	; 0xd0
   14160:	cmp	r2, #0
   14164:	beq	145e8 <__assert_fail@plt+0x2ad8>
   14168:	ldr	r3, [sp, #12]
   1416c:	ldr	r5, [r9, #212]	; 0xd4
   14170:	and	r0, r3, #7
   14174:	cmp	r0, r5
   14178:	ldrne	r3, [pc, #1144]	; 145f8 <__assert_fail@plt+0x2ae8>
   1417c:	bne	14190 <__assert_fail@plt+0x2680>
   14180:	b	141a8 <__assert_fail@plt+0x2698>
   14184:	ldr	r5, [r3, #4]
   14188:	cmp	r5, r0
   1418c:	beq	141a8 <__assert_fail@plt+0x2698>
   14190:	ldr	r2, [r3, #8]
   14194:	add	r3, r3, #8
   14198:	cmp	r2, #0
   1419c:	bne	14184 <__assert_fail@plt+0x2674>
   141a0:	mov	r5, r0
   141a4:	mov	r2, #0
   141a8:	mov	r3, r1
   141ac:	str	r2, [sp]
   141b0:	mov	r1, #20
   141b4:	ldr	r2, [pc, #1088]	; 145fc <__assert_fail@plt+0x2aec>
   141b8:	ldr	r0, [pc, #1088]	; 14600 <__assert_fail@plt+0x2af0>
   141bc:	bl	11954 <snprintf@plt>
   141c0:	ldr	r3, [sp, #16]
   141c4:	ldr	r2, [sp, #12]
   141c8:	ldr	r1, [pc, #1072]	; 14600 <__assert_fail@plt+0x2af0>
   141cc:	str	r3, [sp]
   141d0:	ldr	r0, [pc, #1068]	; 14604 <__assert_fail@plt+0x2af4>
   141d4:	mov	r3, r8
   141d8:	str	r6, [sp, #4]
   141dc:	bl	12d3c <__assert_fail@plt+0x122c>
   141e0:	add	r0, sp, #40	; 0x28
   141e4:	bl	119fc <sigemptyset@plt>
   141e8:	mov	r1, #1
   141ec:	add	r0, sp, #40	; 0x28
   141f0:	bl	118a0 <sigaddset@plt>
   141f4:	mov	r1, #14
   141f8:	add	r0, sp, #40	; 0x28
   141fc:	bl	118a0 <sigaddset@plt>
   14200:	add	r1, sp, #40	; 0x28
   14204:	add	r2, sp, #168	; 0xa8
   14208:	mov	r0, #0
   1420c:	bl	116e4 <sigprocmask@plt>
   14210:	mov	r0, r6
   14214:	bl	11918 <strlen@plt>
   14218:	cmp	r0, #15
   1421c:	mov	r4, r0
   14220:	str	r0, [sp, #20]
   14224:	ble	14234 <__assert_fail@plt+0x2724>
   14228:	ldrb	r3, [r6, #3]
   1422c:	cmp	r3, #32
   14230:	beq	144f4 <__assert_fail@plt+0x29e4>
   14234:	orr	r8, r8, #4
   14238:	ldr	fp, [pc, #968]	; 14608 <__assert_fail@plt+0x2af8>
   1423c:	mov	r0, fp
   14240:	bl	1175c <time@plt>
   14244:	tst	r8, #4
   14248:	bne	144b4 <__assert_fail@plt+0x29a4>
   1424c:	ldr	r3, [pc, #952]	; 1460c <__assert_fail@plt+0x2afc>
   14250:	ldr	r3, [r3, #16]
   14254:	cmp	r3, #0
   14258:	streq	r6, [sp, #28]
   1425c:	bne	144c8 <__assert_fail@plt+0x29b8>
   14260:	add	r6, r6, #16
   14264:	sub	r3, r4, #16
   14268:	str	r3, [sp, #20]
   1426c:	ands	r3, r8, #8
   14270:	mov	r1, r3
   14274:	ldreq	r3, [sp, #12]
   14278:	movne	r7, #24
   1427c:	asreq	r7, r3, #3
   14280:	ldr	r3, [pc, #904]	; 14610 <__assert_fail@plt+0x2b00>
   14284:	andeq	r7, r7, #127	; 0x7f
   14288:	ldr	r2, [r3]
   1428c:	cmp	r2, #0
   14290:	beq	14464 <__assert_fail@plt+0x2954>
   14294:	ldr	r3, [pc, #888]	; 14614 <__assert_fail@plt+0x2b04>
   14298:	ldr	r4, [r3]
   1429c:	cmp	r4, #0
   142a0:	beq	143ec <__assert_fail@plt+0x28dc>
   142a4:	mov	r3, #1
   142a8:	mov	sl, r1
   142ac:	lsl	r5, r3, r5
   142b0:	str	r3, [sp, #36]	; 0x24
   142b4:	and	r3, r8, r3
   142b8:	str	r3, [sp, #24]
   142bc:	str	r8, [sp, #32]
   142c0:	add	r3, r4, r7
   142c4:	ldrb	r3, [r3, #12]
   142c8:	tst	r3, r5
   142cc:	beq	143e0 <__assert_fail@plt+0x28d0>
   142d0:	ldrsh	r3, [r4, #4]
   142d4:	cmp	r3, #3
   142d8:	beq	14414 <__assert_fail@plt+0x2904>
   142dc:	cmp	sl, #0
   142e0:	beq	14404 <__assert_fail@plt+0x28f4>
   142e4:	ldr	r3, [r9, #8]
   142e8:	ldr	r2, [fp]
   142ec:	ldr	r1, [r4, #8]
   142f0:	add	r3, r3, r3, lsr #31
   142f4:	sub	r2, r2, r1
   142f8:	cmp	r2, r3, asr #1
   142fc:	blt	143e0 <__assert_fail@plt+0x28d0>
   14300:	ldr	r1, [r4, #436]	; 0x1b4
   14304:	cmp	r1, #0
   14308:	beq	1436c <__assert_fail@plt+0x285c>
   1430c:	ldr	r8, [r4, #440]	; 0x1b8
   14310:	mov	r0, r6
   14314:	mov	r2, r8
   14318:	bl	11ad4 <strncmp@plt>
   1431c:	cmp	r0, #0
   14320:	bne	143e0 <__assert_fail@plt+0x28d0>
   14324:	bl	118f4 <__ctype_b_loc@plt>
   14328:	ldrb	r3, [r6, r8]
   1432c:	cmp	r3, #95	; 0x5f
   14330:	cmpne	r3, #45	; 0x2d
   14334:	lsl	r3, r3, #1
   14338:	moveq	r2, #1
   1433c:	movne	r2, #0
   14340:	ldr	r1, [r0]
   14344:	ldrh	r3, [r1, r3]
   14348:	lsl	r3, r3, #28
   1434c:	orrs	r3, r2, r3, lsr #31
   14350:	bne	143e0 <__assert_fail@plt+0x28d0>
   14354:	cmp	sl, #0
   14358:	bne	1436c <__assert_fail@plt+0x285c>
   1435c:	ldr	r3, [r4, #448]	; 0x1c0
   14360:	ldr	r2, [sp, #20]
   14364:	cmp	r2, r3
   14368:	beq	14528 <__assert_fail@plt+0x2a18>
   1436c:	ldr	r3, [r4, #452]	; 0x1c4
   14370:	cmp	r3, #0
   14374:	bne	144dc <__assert_fail@plt+0x29cc>
   14378:	mov	r3, #0
   1437c:	str	r3, [r4, #456]	; 0x1c8
   14380:	mov	r2, #15
   14384:	ldr	r1, [sp, #28]
   14388:	add	r0, r4, #416	; 0x1a0
   1438c:	bl	11990 <strncpy@plt>
   14390:	ldr	r0, [r4, #432]	; 0x1b0
   14394:	bl	1ca50 <argp_parse@@Base+0x1150>
   14398:	ldr	r8, [sp, #16]
   1439c:	mov	r0, r8
   143a0:	bl	117a4 <strdup@plt>
   143a4:	ldr	r3, [sp, #20]
   143a8:	cmp	r3, #239	; 0xef
   143ac:	str	r0, [r4, #432]	; 0x1b0
   143b0:	bgt	14430 <__assert_fail@plt+0x2920>
   143b4:	str	r3, [r4, #448]	; 0x1c0
   143b8:	ldr	r3, [sp, #12]
   143bc:	mov	r1, r6
   143c0:	str	r3, [r4, #444]	; 0x1bc
   143c4:	add	r0, r4, #176	; 0xb0
   143c8:	bl	1184c <strcpy@plt>
   143cc:	mov	r3, #0
   143d0:	ldr	r2, [sp, #32]
   143d4:	mov	r1, r8
   143d8:	mov	r0, r4
   143dc:	bl	138f8 <__assert_fail@plt+0x1de8>
   143e0:	ldr	r4, [r4]
   143e4:	cmp	r4, #0
   143e8:	bne	142c0 <__assert_fail@plt+0x27b0>
   143ec:	add	r1, sp, #168	; 0xa8
   143f0:	mov	r2, #0
   143f4:	mov	r0, #2
   143f8:	bl	116e4 <sigprocmask@plt>
   143fc:	add	sp, sp, #300	; 0x12c
   14400:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14404:	ldr	r1, [r4, #436]	; 0x1b4
   14408:	cmp	r1, #0
   1440c:	bne	1430c <__assert_fail@plt+0x27fc>
   14410:	b	1435c <__assert_fail@plt+0x284c>
   14414:	ldr	r3, [sp, #24]
   14418:	cmp	r3, #0
   1441c:	beq	142dc <__assert_fail@plt+0x27cc>
   14420:	ldr	r4, [r4]
   14424:	cmp	r4, #0
   14428:	bne	142c0 <__assert_fail@plt+0x27b0>
   1442c:	b	143ec <__assert_fail@plt+0x28dc>
   14430:	mov	r3, #0
   14434:	strb	r3, [r4, #176]	; 0xb0
   14438:	mov	r3, #0
   1443c:	str	r3, [r4, #448]	; 0x1c0
   14440:	mov	r0, r4
   14444:	mov	r3, r6
   14448:	ldr	r2, [sp, #32]
   1444c:	ldr	r1, [sp, #16]
   14450:	bl	138f8 <__assert_fail@plt+0x1de8>
   14454:	ldr	r4, [r4]
   14458:	cmp	r4, #0
   1445c:	bne	142c0 <__assert_fail@plt+0x27b0>
   14460:	b	143ec <__assert_fail@plt+0x28dc>
   14464:	mov	r1, #1
   14468:	ldr	r0, [pc, #424]	; 14618 <__assert_fail@plt+0x2b08>
   1446c:	bl	1187c <open64@plt>
   14470:	ldr	r3, [pc, #420]	; 1461c <__assert_fail@plt+0x2b0c>
   14474:	ldr	r4, [pc, #420]	; 14620 <__assert_fail@plt+0x2b10>
   14478:	sxth	r5, r0
   1447c:	ldr	r0, [r3]
   14480:	strh	r5, [r4, #6]
   14484:	bl	117a4 <strdup@plt>
   14488:	cmp	r5, #0
   1448c:	str	r0, [r4, #432]	; 0x1b0
   14490:	blt	143ec <__assert_fail@plt+0x28dc>
   14494:	mov	r0, r4
   14498:	mov	r3, r6
   1449c:	mov	r2, r8
   144a0:	ldr	r1, [sp, #16]
   144a4:	bl	138f8 <__assert_fail@plt+0x1de8>
   144a8:	ldrsh	r0, [r4, #6]
   144ac:	bl	11af8 <close@plt>
   144b0:	b	143ec <__assert_fail@plt+0x28dc>
   144b4:	mov	r0, fp
   144b8:	bl	1178c <ctime@plt>
   144bc:	add	r3, r0, #4
   144c0:	str	r3, [sp, #28]
   144c4:	b	1426c <__assert_fail@plt+0x275c>
   144c8:	mov	r0, fp
   144cc:	bl	1178c <ctime@plt>
   144d0:	add	r3, r0, #4
   144d4:	str	r3, [sp, #28]
   144d8:	b	14260 <__assert_fail@plt+0x2750>
   144dc:	mov	r3, #0
   144e0:	mov	r2, r3
   144e4:	ldr	r1, [sp, #16]
   144e8:	mov	r0, r4
   144ec:	bl	138f8 <__assert_fail@plt+0x1de8>
   144f0:	b	14378 <__assert_fail@plt+0x2868>
   144f4:	ldrb	r3, [r6, #6]
   144f8:	cmp	r3, #32
   144fc:	bne	14234 <__assert_fail@plt+0x2724>
   14500:	ldrb	r3, [r6, #9]
   14504:	cmp	r3, #58	; 0x3a
   14508:	bne	14234 <__assert_fail@plt+0x2724>
   1450c:	ldrb	r3, [r6, #12]
   14510:	cmp	r3, #58	; 0x3a
   14514:	bne	14234 <__assert_fail@plt+0x2724>
   14518:	ldrb	r3, [r6, #15]
   1451c:	cmp	r3, #32
   14520:	bne	14234 <__assert_fail@plt+0x2724>
   14524:	b	14238 <__assert_fail@plt+0x2728>
   14528:	ldr	r8, [r4, #432]	; 0x1b0
   1452c:	cmp	r8, #0
   14530:	beq	1436c <__assert_fail@plt+0x285c>
   14534:	add	r1, r4, #176	; 0xb0
   14538:	mov	r0, r6
   1453c:	bl	11684 <strcmp@plt>
   14540:	cmp	r0, #0
   14544:	bne	1436c <__assert_fail@plt+0x285c>
   14548:	mov	r1, r8
   1454c:	ldr	r0, [sp, #16]
   14550:	bl	11684 <strcmp@plt>
   14554:	cmp	r0, #0
   14558:	bne	1436c <__assert_fail@plt+0x285c>
   1455c:	mov	r2, #15
   14560:	ldr	r1, [sp, #28]
   14564:	add	r0, r4, #416	; 0x1a0
   14568:	bl	11990 <strncpy@plt>
   1456c:	ldr	r3, [r4, #456]	; 0x1c8
   14570:	ldr	r1, [r4, #452]	; 0x1c4
   14574:	ldr	r0, [fp]
   14578:	ldr	r2, [r4, #8]
   1457c:	add	r3, r9, r3, lsl #2
   14580:	add	r1, r1, #1
   14584:	sub	r2, r0, r2
   14588:	ldr	r3, [r3, #376]	; 0x178
   1458c:	str	r1, [r4, #452]	; 0x1c4
   14590:	ldr	r0, [pc, #140]	; 14624 <__assert_fail@plt+0x2b14>
   14594:	bl	12d3c <__assert_fail@plt+0x122c>
   14598:	ldr	r3, [r4, #456]	; 0x1c8
   1459c:	ldr	r1, [r4, #8]
   145a0:	ldr	r2, [fp]
   145a4:	add	r3, r9, r3, lsl #2
   145a8:	ldr	r3, [r3, #376]	; 0x178
   145ac:	add	r3, r3, r1
   145b0:	cmp	r3, r2
   145b4:	bge	143e0 <__assert_fail@plt+0x28d0>
   145b8:	mov	r3, #0
   145bc:	ldr	r2, [sp, #32]
   145c0:	ldr	r1, [sp, #16]
   145c4:	mov	r0, r4
   145c8:	bl	138f8 <__assert_fail@plt+0x1de8>
   145cc:	ldr	r3, [r4, #456]	; 0x1c8
   145d0:	ldr	r2, [sp, #36]	; 0x24
   145d4:	add	r3, r3, #1
   145d8:	cmp	r3, #1
   145dc:	movhi	r3, r2
   145e0:	str	r3, [r4, #456]	; 0x1c8
   145e4:	b	143e0 <__assert_fail@plt+0x28d0>
   145e8:	ldr	r3, [sp, #12]
   145ec:	and	r0, r3, #7
   145f0:	b	141a0 <__assert_fail@plt+0x2690>
   145f4:			; <UNDEFINED> instruction: 0x000331b0
   145f8:	andeq	r3, r3, r0, lsl #5
   145fc:	andeq	r0, r2, r8, lsr #18
   14600:	andeq	r3, r3, r8, ror #11
   14604:	andeq	r0, r2, r8, lsr #23
   14608:	andeq	r3, r3, r0, lsl #25
   1460c:	ldrdeq	r3, [r3], -r4
   14610:	andeq	r3, r3, r8, lsr ip
   14614:	andeq	r3, r3, r0, asr sl
   14618:	andeq	r3, r3, r8, lsl r3
   1461c:	andeq	r3, r3, r0, asr #24
   14620:	andeq	r3, r3, r4, asr sl
   14624:	ldrdeq	r0, [r2], -r8
   14628:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1462c:	sub	sp, sp, #1040	; 0x410
   14630:	ldrb	r3, [r1]
   14634:	sub	sp, sp, #4
   14638:	mov	fp, r1
   1463c:	cmp	r3, #60	; 0x3c
   14640:	mov	sl, r0
   14644:	beq	14708 <__assert_fail@plt+0x2bf8>
   14648:	mov	r7, #13
   1464c:	add	r3, sp, #12
   14650:	add	r6, sp, #1024	; 0x400
   14654:	mov	r5, r3
   14658:	add	r6, r6, #12
   1465c:	mov	r9, #94	; 0x5e
   14660:	mov	r8, #32
   14664:	str	r3, [sp, #4]
   14668:	ldrb	r4, [fp], #1
   1466c:	cmp	r4, #0
   14670:	cmpne	r5, r6
   14674:	movcc	r3, #1
   14678:	movcs	r3, #0
   1467c:	bcs	146d8 <__assert_fail@plt+0x2bc8>
   14680:	bl	118f4 <__ctype_b_loc@plt>
   14684:	lsl	r3, r4, #1
   14688:	ldr	r2, [r0]
   1468c:	ldrh	r3, [r2, r3]
   14690:	tst	r3, #2
   14694:	beq	146cc <__assert_fail@plt+0x2bbc>
   14698:	cmp	r4, #10
   1469c:	strbeq	r8, [r5]
   146a0:	addeq	r5, r5, #1
   146a4:	beq	14668 <__assert_fail@plt+0x2b58>
   146a8:	cmp	r4, #9
   146ac:	beq	146cc <__assert_fail@plt+0x2bbc>
   146b0:	cmp	r4, #126	; 0x7e
   146b4:	mov	r3, r5
   146b8:	eor	r2, r4, #64	; 0x40
   146bc:	strble	r9, [r3], #2
   146c0:	strble	r2, [r5, #1]
   146c4:	movle	r5, r3
   146c8:	ble	14668 <__assert_fail@plt+0x2b58>
   146cc:	strb	r4, [r5]
   146d0:	add	r5, r5, #1
   146d4:	b	14668 <__assert_fail@plt+0x2b58>
   146d8:	ldr	r2, [pc, #148]	; 14774 <__assert_fail@plt+0x2c64>
   146dc:	strb	r3, [r5]
   146e0:	ldr	r1, [sp, #4]
   146e4:	ldr	r3, [r2]
   146e8:	mov	r0, r7
   146ec:	cmp	r3, #0
   146f0:	mov	r2, sl
   146f4:	movne	r3, #2
   146f8:	bl	14100 <__assert_fail@plt+0x25f0>
   146fc:	add	sp, sp, #1040	; 0x410
   14700:	add	sp, sp, #4
   14704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14708:	bl	118f4 <__ctype_b_loc@plt>
   1470c:	mov	r7, #0
   14710:	mov	lr, fp
   14714:	ldr	ip, [r0]
   14718:	b	14724 <__assert_fail@plt+0x2c14>
   1471c:	add	r7, r1, r0, lsl #1
   14720:	mov	lr, fp
   14724:	ldrb	r3, [fp, #1]!
   14728:	add	r0, r7, r7, lsl #2
   1472c:	sub	r1, r3, #48	; 0x30
   14730:	lsl	r2, r3, #1
   14734:	ldrh	r2, [ip, r2]
   14738:	tst	r2, #2048	; 0x800
   1473c:	bne	1471c <__assert_fail@plt+0x2c0c>
   14740:	cmp	r3, #62	; 0x3e
   14744:	bic	r3, r7, #1020	; 0x3fc
   14748:	bic	r3, r3, #3
   1474c:	addeq	fp, lr, #2
   14750:	cmp	r3, #0
   14754:	bne	14648 <__assert_fail@plt+0x2b38>
   14758:	asr	r3, r7, #3
   1475c:	cmp	r3, #24
   14760:	bgt	14648 <__assert_fail@plt+0x2b38>
   14764:	cmp	r3, #0
   14768:	andeq	r7, r7, #7
   1476c:	orreq	r7, r7, #8
   14770:	b	1464c <__assert_fail@plt+0x2b3c>
   14774:	andeq	r3, r3, r4, lsr ip
   14778:	ldr	r3, [pc, #284]	; 1489c <__assert_fail@plt+0x2d8c>
   1477c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14780:	mov	r4, r0
   14784:	sub	sp, sp, #1024	; 0x400
   14788:	ldm	r3, {r0, r1, r2}
   1478c:	sub	sp, sp, #12
   14790:	ldrb	ip, [r4]
   14794:	add	r3, sp, #4
   14798:	cmp	ip, #0
   1479c:	stmia	r3!, {r0, r1}
   147a0:	strb	r2, [r3]
   147a4:	beq	14830 <__assert_fail@plt+0x2d20>
   147a8:	add	r5, sp, #1024	; 0x400
   147ac:	ldr	r7, [pc, #236]	; 148a0 <__assert_fail@plt+0x2d90>
   147b0:	ldr	r9, [pc, #236]	; 148a4 <__assert_fail@plt+0x2d94>
   147b4:	add	r5, r5, #4
   147b8:	mov	r8, #7
   147bc:	mov	sl, #6
   147c0:	mov	r6, #0
   147c4:	cmp	ip, #60	; 0x3c
   147c8:	movne	r3, r8
   147cc:	movne	r1, #2
   147d0:	beq	1483c <__assert_fail@plt+0x2d2c>
   147d4:	cmp	ip, #10
   147d8:	add	r4, r4, #1
   147dc:	beq	14894 <__assert_fail@plt+0x2d84>
   147e0:	mov	r2, r4
   147e4:	add	lr, sp, #12
   147e8:	b	147fc <__assert_fail@plt+0x2cec>
   147ec:	cmp	ip, #10
   147f0:	cmpne	lr, r5
   147f4:	mov	r4, r2
   147f8:	bcs	14810 <__assert_fail@plt+0x2d00>
   147fc:	strb	ip, [lr], #1
   14800:	mov	r4, r2
   14804:	ldrb	ip, [r2], #1
   14808:	cmp	ip, #0
   1480c:	bne	147ec <__assert_fail@plt+0x2cdc>
   14810:	mov	r0, r1
   14814:	ldr	r2, [r7]
   14818:	add	r1, sp, #4
   1481c:	strb	r6, [lr]
   14820:	bl	14100 <__assert_fail@plt+0x25f0>
   14824:	ldrb	ip, [r4]
   14828:	cmp	ip, #0
   1482c:	bne	147c4 <__assert_fail@plt+0x2cb4>
   14830:	add	sp, sp, #1024	; 0x400
   14834:	add	sp, sp, #12
   14838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1483c:	bl	118f4 <__ctype_b_loc@plt>
   14840:	mov	lr, r4
   14844:	mov	r1, #0
   14848:	ldr	fp, [r0]
   1484c:	b	14858 <__assert_fail@plt+0x2d48>
   14850:	add	r1, r2, r0, lsl #1
   14854:	mov	lr, r4
   14858:	ldrb	ip, [r4, #1]!
   1485c:	add	r0, r1, r1, lsl #2
   14860:	sub	r2, ip, #48	; 0x30
   14864:	lsl	r3, ip, #1
   14868:	ldrh	r3, [fp, r3]
   1486c:	tst	r3, #2048	; 0x800
   14870:	bne	14850 <__assert_fail@plt+0x2d40>
   14874:	cmp	ip, #62	; 0x3e
   14878:	addeq	r4, lr, #2
   1487c:	ldrbeq	ip, [lr, #2]
   14880:	tst	r1, r9
   14884:	movne	r1, #2
   14888:	cmp	ip, #0
   1488c:	mov	r3, sl
   14890:	bne	147d4 <__assert_fail@plt+0x2cc4>
   14894:	add	lr, sp, #12
   14898:	b	14810 <__assert_fail@plt+0x2d00>
   1489c:	andeq	r0, r2, r0, lsl #24
   148a0:	andeq	r3, r3, r0, asr #24
   148a4:			; <UNDEFINED> instruction: 0xfffffc00
   148a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   148ac:	mov	r0, #0
   148b0:	bl	1175c <time@plt>
   148b4:	ldr	r5, [pc, #252]	; 149b8 <__assert_fail@plt+0x2ea8>
   148b8:	ldr	r6, [pc, #252]	; 149bc <__assert_fail@plt+0x2eac>
   148bc:	ldr	r2, [r5, #8]
   148c0:	cmp	r2, #0
   148c4:	str	r0, [r6]
   148c8:	ble	148e4 <__assert_fail@plt+0x2dd4>
   148cc:	ldr	r4, [pc, #236]	; 149c0 <__assert_fail@plt+0x2eb0>
   148d0:	ldr	r3, [r4]
   148d4:	add	r3, r3, #30
   148d8:	cmp	r2, r3
   148dc:	str	r3, [r4]
   148e0:	ble	14994 <__assert_fail@plt+0x2e84>
   148e4:	ldr	r3, [pc, #216]	; 149c4 <__assert_fail@plt+0x2eb4>
   148e8:	ldr	r4, [r3]
   148ec:	cmp	r4, #0
   148f0:	beq	14988 <__assert_fail@plt+0x2e78>
   148f4:	ldr	sl, [pc, #204]	; 149c8 <__assert_fail@plt+0x2eb8>
   148f8:	ldr	r9, [pc, #204]	; 149cc <__assert_fail@plt+0x2ebc>
   148fc:	mov	r8, #0
   14900:	mov	r7, #1
   14904:	b	14914 <__assert_fail@plt+0x2e04>
   14908:	ldr	r4, [r4]
   1490c:	cmp	r4, #0
   14910:	beq	14988 <__assert_fail@plt+0x2e78>
   14914:	ldr	r2, [r4, #452]	; 0x1c4
   14918:	cmp	r2, #0
   1491c:	beq	14908 <__assert_fail@plt+0x2df8>
   14920:	ldr	r3, [r4, #456]	; 0x1c8
   14924:	ldr	r1, [r4, #8]
   14928:	ldr	r0, [r6]
   1492c:	add	r3, r5, r3, lsl #2
   14930:	ldr	r3, [r3, #376]	; 0x178
   14934:	add	r1, r3, r1
   14938:	cmp	r1, r0
   1493c:	bgt	14908 <__assert_fail@plt+0x2df8>
   14940:	ldrsh	r1, [r4, #4]
   14944:	mov	r0, sl
   14948:	add	r1, r5, r1, lsl #2
   1494c:	ldr	r1, [r1, #320]	; 0x140
   14950:	bl	12d3c <__assert_fail@plt+0x122c>
   14954:	mov	r3, r8
   14958:	mov	r0, r4
   1495c:	mov	r2, #0
   14960:	ldr	r1, [r9]
   14964:	bl	138f8 <__assert_fail@plt+0x1de8>
   14968:	ldr	r3, [r4, #456]	; 0x1c8
   1496c:	add	r3, r3, #1
   14970:	cmp	r3, #1
   14974:	movhi	r3, r7
   14978:	str	r3, [r4, #456]	; 0x1c8
   1497c:	ldr	r4, [r4]
   14980:	cmp	r4, #0
   14984:	bne	14914 <__assert_fail@plt+0x2e04>
   14988:	mov	r0, #30
   1498c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14990:	b	117bc <alarm@plt>
   14994:	ldr	r2, [pc, #48]	; 149cc <__assert_fail@plt+0x2ebc>
   14998:	mov	r3, #12
   1499c:	ldr	r1, [pc, #44]	; 149d0 <__assert_fail@plt+0x2ec0>
   149a0:	ldr	r2, [r2]
   149a4:	mov	r0, #6
   149a8:	bl	14100 <__assert_fail@plt+0x25f0>
   149ac:	mov	r3, #0
   149b0:	str	r3, [r4]
   149b4:	b	148e4 <__assert_fail@plt+0x2dd4>
   149b8:			; <UNDEFINED> instruction: 0x000331b0
   149bc:	andeq	r3, r3, r0, lsl #25
   149c0:	andeq	r3, r3, ip, lsl #25
   149c4:	andeq	r3, r3, r0, asr sl
   149c8:	andeq	r0, r2, r8, lsl ip
   149cc:	andeq	r3, r3, r0, asr #24
   149d0:	andeq	r0, r2, ip, lsl #24
   149d4:	push	{r4, r5, r6, lr}
   149d8:	sub	sp, sp, #16
   149dc:	mov	r3, #0
   149e0:	mov	r2, #1
   149e4:	str	r2, [sp, #8]
   149e8:	str	r3, [sp, #4]
   149ec:	str	r3, [sp]
   149f0:	ldr	r2, [pc, #332]	; 14b44 <__assert_fail@plt+0x3034>
   149f4:	mov	r3, #46	; 0x2e
   149f8:	mov	r5, r0
   149fc:	mov	r6, r1
   14a00:	bl	11a14 <getnameinfo@plt>
   14a04:	subs	r4, r0, #0
   14a08:	bne	14ac0 <__assert_fail@plt+0x2fb0>
   14a0c:	ldr	r1, [pc, #304]	; 14b44 <__assert_fail@plt+0x3034>
   14a10:	ldr	r0, [pc, #304]	; 14b48 <__assert_fail@plt+0x3038>
   14a14:	bl	12d3c <__assert_fail@plt+0x122c>
   14a18:	mov	r3, #8
   14a1c:	str	r3, [sp, #8]
   14a20:	str	r4, [sp, #4]
   14a24:	str	r4, [sp]
   14a28:	mov	r1, r6
   14a2c:	mov	r0, r5
   14a30:	ldr	r3, [pc, #276]	; 14b4c <__assert_fail@plt+0x303c>
   14a34:	ldr	r2, [pc, #276]	; 14b50 <__assert_fail@plt+0x3040>
   14a38:	bl	11a14 <getnameinfo@plt>
   14a3c:	cmp	r0, #0
   14a40:	bne	14adc <__assert_fail@plt+0x2fcc>
   14a44:	mov	r1, #46	; 0x2e
   14a48:	ldr	r0, [pc, #256]	; 14b50 <__assert_fail@plt+0x3040>
   14a4c:	bl	11930 <strchr@plt>
   14a50:	subs	r6, r0, #0
   14a54:	beq	14b38 <__assert_fail@plt+0x3028>
   14a58:	ldr	r3, [pc, #244]	; 14b54 <__assert_fail@plt+0x3044>
   14a5c:	add	r5, r6, #1
   14a60:	mov	r0, r5
   14a64:	ldr	r1, [r3]
   14a68:	bl	11804 <strcasecmp@plt>
   14a6c:	cmp	r0, #0
   14a70:	beq	14ab0 <__assert_fail@plt+0x2fa0>
   14a74:	ldr	r3, [pc, #220]	; 14b58 <__assert_fail@plt+0x3048>
   14a78:	ldr	r4, [r3]
   14a7c:	cmp	r4, #0
   14a80:	beq	14af4 <__assert_fail@plt+0x2fe4>
   14a84:	ldr	r1, [r4]
   14a88:	cmp	r1, #0
   14a8c:	bne	14aa0 <__assert_fail@plt+0x2f90>
   14a90:	b	14af4 <__assert_fail@plt+0x2fe4>
   14a94:	ldr	r1, [r4, #4]!
   14a98:	cmp	r1, #0
   14a9c:	beq	14af4 <__assert_fail@plt+0x2fe4>
   14aa0:	mov	r0, r5
   14aa4:	bl	11804 <strcasecmp@plt>
   14aa8:	cmp	r0, #0
   14aac:	bne	14a94 <__assert_fail@plt+0x2f84>
   14ab0:	strb	r0, [r6]
   14ab4:	ldr	r0, [pc, #148]	; 14b50 <__assert_fail@plt+0x3040>
   14ab8:	add	sp, sp, #16
   14abc:	pop	{r4, r5, r6, pc}
   14ac0:	bl	11714 <gai_strerror@plt>
   14ac4:	mov	r1, r0
   14ac8:	ldr	r0, [pc, #140]	; 14b5c <__assert_fail@plt+0x304c>
   14acc:	bl	12d3c <__assert_fail@plt+0x122c>
   14ad0:	ldr	r0, [pc, #136]	; 14b60 <__assert_fail@plt+0x3050>
   14ad4:	add	sp, sp, #16
   14ad8:	pop	{r4, r5, r6, pc}
   14adc:	ldr	r1, [pc, #96]	; 14b44 <__assert_fail@plt+0x3034>
   14ae0:	ldr	r0, [pc, #124]	; 14b64 <__assert_fail@plt+0x3054>
   14ae4:	bl	12d3c <__assert_fail@plt+0x122c>
   14ae8:	ldr	r0, [pc, #84]	; 14b44 <__assert_fail@plt+0x3034>
   14aec:	add	sp, sp, #16
   14af0:	pop	{r4, r5, r6, pc}
   14af4:	ldr	r3, [pc, #108]	; 14b68 <__assert_fail@plt+0x3058>
   14af8:	ldr	r4, [r3]
   14afc:	cmp	r4, #0
   14b00:	beq	14b38 <__assert_fail@plt+0x3028>
   14b04:	ldr	r1, [r4]
   14b08:	cmp	r1, #0
   14b0c:	beq	14b38 <__assert_fail@plt+0x3028>
   14b10:	ldr	r5, [pc, #56]	; 14b50 <__assert_fail@plt+0x3040>
   14b14:	b	14b24 <__assert_fail@plt+0x3014>
   14b18:	ldr	r1, [r4, #4]!
   14b1c:	cmp	r1, #0
   14b20:	beq	14b38 <__assert_fail@plt+0x3028>
   14b24:	mov	r0, r5
   14b28:	bl	11804 <strcasecmp@plt>
   14b2c:	cmp	r0, #0
   14b30:	bne	14b18 <__assert_fail@plt+0x3008>
   14b34:	b	14ab0 <__assert_fail@plt+0x2fa0>
   14b38:	ldr	r0, [pc, #16]	; 14b50 <__assert_fail@plt+0x3040>
   14b3c:	add	sp, sp, #16
   14b40:	pop	{r4, r5, r6, pc}
   14b44:	andeq	r3, r3, r0, asr ip
   14b48:	andeq	r0, r2, r4, ror #24
   14b4c:	andeq	r0, r0, r1, lsl #8
   14b50:	muleq	r3, r0, ip
   14b54:	andeq	r3, r3, ip, lsr ip
   14b58:	andeq	r3, r3, r4, lsr #24
   14b5c:	andeq	r0, r2, r4, asr #24
   14b60:	andeq	r0, r2, r0, asr #24
   14b64:	andeq	r0, r2, r4, ror ip
   14b68:	andeq	r3, r3, ip, asr #24
   14b6c:	push	{r4, r5, r6, lr}
   14b70:	sub	sp, sp, #112	; 0x70
   14b74:	mov	r6, r0
   14b78:	bl	11948 <__errno_location@plt>
   14b7c:	mov	r5, r0
   14b80:	ldr	r0, [r0]
   14b84:	cmp	r0, #0
   14b88:	bne	14bd8 <__assert_fail@plt+0x30c8>
   14b8c:	add	r4, sp, #12
   14b90:	mov	r3, r6
   14b94:	mov	r0, r4
   14b98:	ldr	r2, [pc, #92]	; 14bfc <__assert_fail@plt+0x30ec>
   14b9c:	mov	r1, #100	; 0x64
   14ba0:	bl	11954 <snprintf@plt>
   14ba4:	mov	r3, #0
   14ba8:	str	r3, [r5]
   14bac:	mov	r1, r4
   14bb0:	ldr	r0, [pc, #72]	; 14c00 <__assert_fail@plt+0x30f0>
   14bb4:	bl	12d3c <__assert_fail@plt+0x122c>
   14bb8:	ldr	r2, [pc, #68]	; 14c04 <__assert_fail@plt+0x30f4>
   14bbc:	mov	r1, r4
   14bc0:	mov	r3, #4
   14bc4:	ldr	r2, [r2]
   14bc8:	mov	r0, #43	; 0x2b
   14bcc:	bl	14100 <__assert_fail@plt+0x25f0>
   14bd0:	add	sp, sp, #112	; 0x70
   14bd4:	pop	{r4, r5, r6, pc}
   14bd8:	bl	118b8 <strerror@plt>
   14bdc:	add	r4, sp, #12
   14be0:	mov	r3, r6
   14be4:	ldr	r2, [pc, #28]	; 14c08 <__assert_fail@plt+0x30f8>
   14be8:	mov	r1, #100	; 0x64
   14bec:	str	r0, [sp]
   14bf0:	mov	r0, r4
   14bf4:	bl	11954 <snprintf@plt>
   14bf8:	b	14ba4 <__assert_fail@plt+0x3094>
   14bfc:	andeq	r0, r2, r4, ror #18
   14c00:	andeq	r1, r2, r8, lsl #31
   14c04:	andeq	r3, r3, r0, asr #24
   14c08:	andeq	r0, r2, r4, asr r9
   14c0c:	ldr	r3, [pc, #324]	; 14d58 <__assert_fail@plt+0x3248>
   14c10:	push	{r4, r5, r6, r7, r8, r9, lr}
   14c14:	mov	r5, #0
   14c18:	ldr	r4, [r3]
   14c1c:	ldr	r6, [pc, #312]	; 14d5c <__assert_fail@plt+0x324c>
   14c20:	cmp	r4, r5
   14c24:	sub	sp, sp, #108	; 0x6c
   14c28:	ldr	r9, [r6]
   14c2c:	mov	r8, r0
   14c30:	str	r5, [r6]
   14c34:	ldrne	r7, [pc, #292]	; 14d60 <__assert_fail@plt+0x3250>
   14c38:	bne	14c4c <__assert_fail@plt+0x313c>
   14c3c:	b	14c78 <__assert_fail@plt+0x3168>
   14c40:	ldr	r4, [r4]
   14c44:	cmp	r4, #0
   14c48:	beq	14c78 <__assert_fail@plt+0x3168>
   14c4c:	ldr	r3, [r4, #452]	; 0x1c4
   14c50:	cmp	r3, #0
   14c54:	beq	14c40 <__assert_fail@plt+0x3130>
   14c58:	mov	r0, r4
   14c5c:	mov	r3, r5
   14c60:	mov	r2, #0
   14c64:	ldr	r1, [r7]
   14c68:	bl	138f8 <__assert_fail@plt+0x1de8>
   14c6c:	ldr	r4, [r4]
   14c70:	cmp	r4, #0
   14c74:	bne	14c4c <__assert_fail@plt+0x313c>
   14c78:	cmp	r8, #0
   14c7c:	str	r9, [r6]
   14c80:	bne	14d14 <__assert_fail@plt+0x3204>
   14c84:	ldr	r7, [pc, #216]	; 14d64 <__assert_fail@plt+0x3254>
   14c88:	ldr	r0, [r7, #384]	; 0x180
   14c8c:	cmp	r0, #0
   14c90:	blt	14c98 <__assert_fail@plt+0x3188>
   14c94:	bl	11af8 <close@plt>
   14c98:	ldr	r6, [pc, #200]	; 14d68 <__assert_fail@plt+0x3258>
   14c9c:	ldr	r2, [r6]
   14ca0:	cmp	r2, #0
   14ca4:	movne	r4, #0
   14ca8:	ldrne	r5, [pc, #188]	; 14d6c <__assert_fail@plt+0x325c>
   14cac:	beq	14cec <__assert_fail@plt+0x31dc>
   14cb0:	ldr	r3, [r5]
   14cb4:	add	r3, r3, r4, lsl #3
   14cb8:	ldr	r0, [r3, #4]
   14cbc:	cmp	r0, #0
   14cc0:	blt	14ce0 <__assert_fail@plt+0x31d0>
   14cc4:	bl	11af8 <close@plt>
   14cc8:	ldr	r3, [r5]
   14ccc:	ldr	r0, [r3, r4, lsl #3]
   14cd0:	cmp	r0, #0
   14cd4:	beq	14cdc <__assert_fail@plt+0x31cc>
   14cd8:	bl	117d4 <unlink@plt>
   14cdc:	ldr	r2, [r6]
   14ce0:	add	r4, r4, #1
   14ce4:	cmp	r4, r2
   14ce8:	bcc	14cb0 <__assert_fail@plt+0x31a0>
   14cec:	ldr	r0, [r7, #312]	; 0x138
   14cf0:	cmp	r0, #0
   14cf4:	blt	14cfc <__assert_fail@plt+0x31ec>
   14cf8:	bl	11af8 <close@plt>
   14cfc:	ldr	r0, [r7, #316]	; 0x13c
   14d00:	cmp	r0, #0
   14d04:	blt	14d0c <__assert_fail@plt+0x31fc>
   14d08:	bl	11af8 <close@plt>
   14d0c:	mov	r0, #0
   14d10:	bl	1190c <exit@plt>
   14d14:	ldr	r3, [pc, #84]	; 14d70 <__assert_fail@plt+0x3260>
   14d18:	mov	r2, r8
   14d1c:	ldr	r0, [pc, #80]	; 14d74 <__assert_fail@plt+0x3264>
   14d20:	ldr	r1, [r3]
   14d24:	bl	12d3c <__assert_fail@plt+0x122c>
   14d28:	mov	r3, r8
   14d2c:	ldr	r2, [pc, #68]	; 14d78 <__assert_fail@plt+0x3268>
   14d30:	mov	r1, #100	; 0x64
   14d34:	add	r0, sp, #4
   14d38:	bl	11954 <snprintf@plt>
   14d3c:	bl	11948 <__errno_location@plt>
   14d40:	mov	r2, #0
   14d44:	mov	r3, r0
   14d48:	add	r0, sp, #4
   14d4c:	str	r2, [r3]
   14d50:	bl	14b6c <__assert_fail@plt+0x305c>
   14d54:	b	14c84 <__assert_fail@plt+0x3174>
   14d58:	andeq	r3, r3, r0, asr sl
   14d5c:	andeq	r3, r3, r8, lsr ip
   14d60:	andeq	r3, r3, r0, asr #24
   14d64:			; <UNDEFINED> instruction: 0x000331b0
   14d68:	andeq	r3, r3, r8, lsr #24
   14d6c:	andeq	r3, r3, r8, lsl #25
   14d70:	andeq	r3, r3, r4, asr #11
   14d74:	andeq	r0, r2, r0, lsr #25
   14d78:			; <UNDEFINED> instruction: 0x00020cbc
   14d7c:	ldr	r3, [pc, #2364]	; 156c0 <__assert_fail@plt+0x3bb0>
   14d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d84:	sub	sp, sp, #1360	; 0x550
   14d88:	ldr	r3, [r3]
   14d8c:	sub	sp, sp, #4
   14d90:	cmp	r3, #0
   14d94:	mov	r4, r0
   14d98:	ldreq	r2, [pc, #2340]	; 156c4 <__assert_fail@plt+0x3bb4>
   14d9c:	ldrne	r2, [pc, #2340]	; 156c8 <__assert_fail@plt+0x3bb8>
   14da0:	moveq	r3, r2
   14da4:	str	r1, [sp, #12]
   14da8:	mov	r1, r0
   14dac:	ldr	r0, [pc, #2328]	; 156cc <__assert_fail@plt+0x3bbc>
   14db0:	bl	12d3c <__assert_fail@plt+0x122c>
   14db4:	bl	11948 <__errno_location@plt>
   14db8:	ldr	r7, [sp, #12]
   14dbc:	mov	r5, #0
   14dc0:	add	r3, r7, #12
   14dc4:	mov	r1, r5
   14dc8:	mov	r2, #464	; 0x1d0
   14dcc:	mov	r6, r3
   14dd0:	str	r3, [sp, #20]
   14dd4:	mov	sl, r4
   14dd8:	str	r0, [sp, #16]
   14ddc:	str	r5, [r0]
   14de0:	mov	r0, r7
   14de4:	bl	11984 <memset@plt>
   14de8:	str	r5, [r7, #12]
   14dec:	ldr	r7, [pc, #2268]	; 156d0 <__assert_fail@plt+0x3bc0>
   14df0:	str	r5, [r6, #4]
   14df4:	str	r5, [r6, #8]
   14df8:	str	r5, [r6, #12]
   14dfc:	str	r5, [r6, #16]
   14e00:	str	r5, [r6, #20]
   14e04:	strb	r5, [r6, #24]
   14e08:	ldrb	fp, [sl]
   14e0c:	and	r2, fp, #223	; 0xdf
   14e10:	cmp	fp, #9
   14e14:	cmpne	r2, #0
   14e18:	beq	15254 <__assert_fail@plt+0x3744>
   14e1c:	mov	r4, fp
   14e20:	cmp	r4, #0
   14e24:	cmpne	r4, #9
   14e28:	mov	r2, sl
   14e2c:	beq	14e50 <__assert_fail@plt+0x3340>
   14e30:	cmp	r4, #46	; 0x2e
   14e34:	add	r9, r2, #1
   14e38:	ldrb	r4, [r2, #1]
   14e3c:	beq	14e54 <__assert_fail@plt+0x3344>
   14e40:	cmp	r4, #0
   14e44:	cmpne	r4, #9
   14e48:	mov	r2, r9
   14e4c:	bne	14e30 <__assert_fail@plt+0x3320>
   14e50:	mov	r9, r2
   14e54:	cmp	r4, #0
   14e58:	addne	r8, sp, #336	; 0x150
   14e5c:	movne	r5, r8
   14e60:	bne	14e78 <__assert_fail@plt+0x3368>
   14e64:	b	15248 <__assert_fail@plt+0x3738>
   14e68:	strb	r4, [r5], #1
   14e6c:	ldrb	r4, [r9, #1]!
   14e70:	cmp	r4, #0
   14e74:	beq	151e4 <__assert_fail@plt+0x36d4>
   14e78:	mov	r1, r4
   14e7c:	ldr	r0, [pc, #2128]	; 156d4 <__assert_fail@plt+0x3bc4>
   14e80:	bl	11930 <strchr@plt>
   14e84:	cmp	r0, #0
   14e88:	beq	14e68 <__assert_fail@plt+0x3358>
   14e8c:	mov	r2, #0
   14e90:	strb	r2, [r5]
   14e94:	mov	r1, r4
   14e98:	b	14ea8 <__assert_fail@plt+0x3398>
   14e9c:	ldrb	r1, [r9, #1]!
   14ea0:	cmp	r1, #0
   14ea4:	beq	14eb8 <__assert_fail@plt+0x33a8>
   14ea8:	ldr	r0, [pc, #2088]	; 156d8 <__assert_fail@plt+0x3bc8>
   14eac:	bl	11930 <strchr@plt>
   14eb0:	cmp	r0, #0
   14eb4:	bne	14e9c <__assert_fail@plt+0x338c>
   14eb8:	mov	r6, #0
   14ebc:	mov	r4, r6
   14ec0:	mov	r0, r8
   14ec4:	mov	ip, #1
   14ec8:	ldrb	r2, [r0]
   14ecc:	mov	r5, r0
   14ed0:	add	r0, r0, #1
   14ed4:	cmp	r2, #61	; 0x3d
   14ed8:	cmpne	r2, #33	; 0x21
   14edc:	moveq	r1, #1
   14ee0:	movne	r1, #0
   14ee4:	bne	14f00 <__assert_fail@plt+0x33f0>
   14ee8:	cmp	r2, #33	; 0x21
   14eec:	moveq	r4, ip
   14ef0:	beq	14ec8 <__assert_fail@plt+0x33b8>
   14ef4:	cmp	r2, #61	; 0x3d
   14ef8:	moveq	r6, #1
   14efc:	b	14ec8 <__assert_fail@plt+0x33b8>
   14f00:	cmp	r2, #42	; 0x2a
   14f04:	str	r2, [sp, #24]
   14f08:	beq	151dc <__assert_fail@plt+0x36cc>
   14f0c:	str	r1, [sp, #28]
   14f10:	bl	118f4 <__ctype_b_loc@plt>
   14f14:	ldr	r2, [sp, #24]
   14f18:	ldr	r1, [sp, #28]
   14f1c:	lsl	r2, r2, #1
   14f20:	ldr	r0, [r0]
   14f24:	ldrh	r2, [r0, r2]
   14f28:	tst	r2, #2048	; 0x800
   14f2c:	bne	15214 <__assert_fail@plt+0x3704>
   14f30:	ldr	r3, [pc, #1956]	; 156dc <__assert_fail@plt+0x3bcc>
   14f34:	ldr	r1, [r3, #208]	; 0xd0
   14f38:	cmp	r1, #0
   14f3c:	beq	151ec <__assert_fail@plt+0x36dc>
   14f40:	ldr	fp, [pc, #1944]	; 156e0 <__assert_fail@plt+0x3bd0>
   14f44:	b	14f54 <__assert_fail@plt+0x3444>
   14f48:	ldr	r1, [fp, #8]!
   14f4c:	cmp	r1, #0
   14f50:	beq	151ec <__assert_fail@plt+0x36dc>
   14f54:	mov	r0, r5
   14f58:	bl	11804 <strcasecmp@plt>
   14f5c:	cmp	r0, #0
   14f60:	bne	14f48 <__assert_fail@plt+0x3438>
   14f64:	ldr	r0, [fp, #4]
   14f68:	cmp	r0, #0
   14f6c:	blt	151ec <__assert_fail@plt+0x36dc>
   14f70:	cmp	r0, #16
   14f74:	cmpne	r0, #7
   14f78:	movgt	r1, #1
   14f7c:	movle	r1, #0
   14f80:	bgt	151ec <__assert_fail@plt+0x36dc>
   14f84:	cmp	r0, #16
   14f88:	beq	15204 <__assert_fail@plt+0x36f4>
   14f8c:	cmp	r6, #0
   14f90:	movne	r5, #1
   14f94:	addeq	r0, r0, #1
   14f98:	mvneq	r5, #0
   14f9c:	ldrb	fp, [sl]
   14fa0:	lslne	r5, r5, r0
   14fa4:	mvneq	r5, r5, lsl r0
   14fa8:	moveq	r1, r6
   14fac:	cmp	r4, #0
   14fb0:	movne	r6, r5
   14fb4:	moveq	r6, r1
   14fb8:	mvn	r6, r6
   14fbc:	movne	r5, r1
   14fc0:	cmp	fp, #0
   14fc4:	beq	1507c <__assert_fail@plt+0x356c>
   14fc8:	mov	r1, fp
   14fcc:	ldr	r0, [pc, #1808]	; 156e4 <__assert_fail@plt+0x3bd4>
   14fd0:	bl	11930 <strchr@plt>
   14fd4:	cmp	r0, #0
   14fd8:	bne	1507c <__assert_fail@plt+0x356c>
   14fdc:	mov	r4, r8
   14fe0:	b	14ff4 <__assert_fail@plt+0x34e4>
   14fe4:	strb	fp, [r4], #1
   14fe8:	ldrb	fp, [sl, #1]!
   14fec:	cmp	fp, #0
   14ff0:	beq	15008 <__assert_fail@plt+0x34f8>
   14ff4:	mov	r1, fp
   14ff8:	mov	r0, r7
   14ffc:	bl	11930 <strchr@plt>
   15000:	cmp	r0, #0
   15004:	beq	14fe4 <__assert_fail@plt+0x34d4>
   15008:	mov	r3, #0
   1500c:	strb	r3, [r4]
   15010:	ldrb	fp, [sp, #336]	; 0x150
   15014:	cmp	fp, #42	; 0x2a
   15018:	bne	15084 <__assert_fail@plt+0x3574>
   1501c:	ldrb	r3, [sp, #337]	; 0x151
   15020:	ldr	r2, [pc, #1728]	; 156e8 <__assert_fail@plt+0x3bd8>
   15024:	cmp	r3, #42	; 0x2a
   15028:	ldr	r0, [r2]
   1502c:	beq	15194 <__assert_fail@plt+0x3684>
   15030:	ldr	r3, [sp, #12]
   15034:	add	r2, r3, #11
   15038:	add	r1, r3, #36	; 0x24
   1503c:	ldrb	r3, [r2, #1]
   15040:	and	r3, r3, r6
   15044:	orr	r3, r3, r5
   15048:	strb	r3, [r2, #1]!
   1504c:	cmp	r1, r2
   15050:	bne	1503c <__assert_fail@plt+0x352c>
   15054:	ldrb	fp, [sl]
   15058:	cmp	fp, #32
   1505c:	cmpne	fp, #44	; 0x2c
   15060:	bne	14fc0 <__assert_fail@plt+0x34b0>
   15064:	ldrb	fp, [sl, #1]!
   15068:	cmp	fp, #32
   1506c:	cmpne	fp, #44	; 0x2c
   15070:	beq	15064 <__assert_fail@plt+0x3554>
   15074:	cmp	fp, #0
   15078:	bne	14fc8 <__assert_fail@plt+0x34b8>
   1507c:	mov	sl, r9
   15080:	b	14e08 <__assert_fail@plt+0x32f8>
   15084:	bl	118f4 <__ctype_b_loc@plt>
   15088:	lsl	fp, fp, #1
   1508c:	ldr	r3, [r0]
   15090:	ldrh	r3, [r3, fp]
   15094:	tst	r3, #2048	; 0x800
   15098:	bne	151c8 <__assert_fail@plt+0x36b8>
   1509c:	ldr	r3, [pc, #1592]	; 156dc <__assert_fail@plt+0x3bcc>
   150a0:	ldr	r1, [r3, #24]
   150a4:	cmp	r1, #0
   150a8:	beq	15114 <__assert_fail@plt+0x3604>
   150ac:	ldr	fp, [pc, #1592]	; 156ec <__assert_fail@plt+0x3bdc>
   150b0:	b	150c0 <__assert_fail@plt+0x35b0>
   150b4:	ldr	r1, [fp, #8]!
   150b8:	cmp	r1, #0
   150bc:	beq	15114 <__assert_fail@plt+0x3604>
   150c0:	mov	r0, r8
   150c4:	bl	11804 <strcasecmp@plt>
   150c8:	cmp	r0, #0
   150cc:	bne	150b4 <__assert_fail@plt+0x35a4>
   150d0:	ldr	r0, [fp, #4]
   150d4:	cmp	r0, #192	; 0xc0
   150d8:	bhi	15114 <__assert_fail@plt+0x3604>
   150dc:	ldr	r3, [sp, #12]
   150e0:	asr	r0, r0, #3
   150e4:	add	r1, r3, r0
   150e8:	ldr	r3, [pc, #1528]	; 156e8 <__assert_fail@plt+0x3bd8>
   150ec:	mov	ip, #1
   150f0:	ldr	r2, [r3]
   150f4:	ldrb	r3, [r1, #12]
   150f8:	orr	r0, r2, ip, lsl r0
   150fc:	ldr	r2, [pc, #1508]	; 156e8 <__assert_fail@plt+0x3bd8>
   15100:	and	r3, r3, r6
   15104:	orr	r3, r3, r5
   15108:	str	r0, [r2]
   1510c:	strb	r3, [r1, #12]
   15110:	b	15054 <__assert_fail@plt+0x3544>
   15114:	add	r3, sp, #136	; 0x88
   15118:	str	r3, [sp, #12]
   1511c:	ldr	r0, [sp, #12]
   15120:	ldr	r2, [pc, #1480]	; 156f0 <__assert_fail@plt+0x3be0>
   15124:	mov	r3, r8
   15128:	mov	r1, #200	; 0xc8
   1512c:	bl	11954 <snprintf@plt>
   15130:	ldr	r3, [sp, #16]
   15134:	ldr	r0, [r3]
   15138:	cmp	r0, #0
   1513c:	bne	15224 <__assert_fail@plt+0x3714>
   15140:	add	r4, sp, #36	; 0x24
   15144:	ldr	r3, [sp, #12]
   15148:	mov	r0, r4
   1514c:	ldr	r2, [pc, #1440]	; 156f4 <__assert_fail@plt+0x3be4>
   15150:	mov	r1, #100	; 0x64
   15154:	bl	11954 <snprintf@plt>
   15158:	ldr	r2, [sp, #16]
   1515c:	mov	r3, #0
   15160:	mov	r1, r4
   15164:	str	r3, [r2]
   15168:	ldr	r0, [pc, #1416]	; 156f8 <__assert_fail@plt+0x3be8>
   1516c:	bl	12d3c <__assert_fail@plt+0x122c>
   15170:	ldr	r2, [pc, #1412]	; 156fc <__assert_fail@plt+0x3bec>
   15174:	mov	r1, r4
   15178:	mov	r3, #4
   1517c:	ldr	r2, [r2]
   15180:	mov	r0, #43	; 0x2b
   15184:	bl	14100 <__assert_fail@plt+0x25f0>
   15188:	add	sp, sp, #1360	; 0x550
   1518c:	add	sp, sp, #4
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	ldr	r1, [sp, #20]
   15198:	mov	r2, #0
   1519c:	asr	r3, r0, r2
   151a0:	tst	r3, #1
   151a4:	add	r2, r2, #1
   151a8:	ldrbeq	r3, [r1]
   151ac:	add	r1, r1, #1
   151b0:	andeq	r3, r3, r6
   151b4:	orreq	r3, r3, r5
   151b8:	strbeq	r3, [r1, #-1]
   151bc:	cmp	r2, #25
   151c0:	bne	1519c <__assert_fail@plt+0x368c>
   151c4:	b	15054 <__assert_fail@plt+0x3544>
   151c8:	mov	r2, #10
   151cc:	mov	r1, #0
   151d0:	mov	r0, r8
   151d4:	bl	11690 <strtol@plt>
   151d8:	b	150d4 <__assert_fail@plt+0x35c4>
   151dc:	mov	r5, #255	; 0xff
   151e0:	b	14fac <__assert_fail@plt+0x349c>
   151e4:	strb	r4, [r5]
   151e8:	b	14eb8 <__assert_fail@plt+0x33a8>
   151ec:	add	r3, sp, #136	; 0x88
   151f0:	str	r3, [sp, #12]
   151f4:	ldr	r0, [sp, #12]
   151f8:	mov	r3, r5
   151fc:	ldr	r2, [pc, #1276]	; 15700 <__assert_fail@plt+0x3bf0>
   15200:	b	15128 <__assert_fail@plt+0x3618>
   15204:	mov	r5, r1
   15208:	ldrb	fp, [sl]
   1520c:	mov	r1, #255	; 0xff
   15210:	b	14fac <__assert_fail@plt+0x349c>
   15214:	mov	r2, #10
   15218:	mov	r0, r5
   1521c:	bl	11690 <strtol@plt>
   15220:	b	14f68 <__assert_fail@plt+0x3458>
   15224:	bl	118b8 <strerror@plt>
   15228:	add	r4, sp, #36	; 0x24
   1522c:	ldr	r3, [sp, #12]
   15230:	ldr	r2, [pc, #1228]	; 15704 <__assert_fail@plt+0x3bf4>
   15234:	mov	r1, #100	; 0x64
   15238:	str	r0, [sp]
   1523c:	mov	r0, r4
   15240:	bl	11954 <snprintf@plt>
   15244:	b	15158 <__assert_fail@plt+0x3648>
   15248:	add	r8, sp, #1360	; 0x550
   1524c:	strb	r4, [r8, #-1024]!	; 0xfffffc00
   15250:	b	14eb8 <__assert_fail@plt+0x33a8>
   15254:	cmp	fp, #32
   15258:	cmpne	fp, #9
   1525c:	mov	r4, sl
   15260:	bne	15274 <__assert_fail@plt+0x3764>
   15264:	ldrb	fp, [r4, #1]!
   15268:	cmp	fp, #32
   1526c:	cmpne	fp, #9
   15270:	beq	15264 <__assert_fail@plt+0x3754>
   15274:	cmp	fp, #45	; 0x2d
   15278:	bne	15294 <__assert_fail@plt+0x3784>
   1527c:	ldr	r2, [sp, #12]
   15280:	add	r4, r4, #1
   15284:	ldr	r3, [r2, #460]	; 0x1cc
   15288:	orr	r3, r3, #1
   1528c:	str	r3, [r2, #460]	; 0x1cc
   15290:	ldrb	fp, [r4]
   15294:	cmp	fp, #0
   15298:	beq	15340 <__assert_fail@plt+0x3830>
   1529c:	cmp	fp, #47	; 0x2f
   152a0:	beq	15450 <__assert_fail@plt+0x3940>
   152a4:	bls	153c0 <__assert_fail@plt+0x38b0>
   152a8:	cmp	fp, #64	; 0x40
   152ac:	beq	155ac <__assert_fail@plt+0x3a9c>
   152b0:	cmp	fp, #124	; 0x7c
   152b4:	bne	154b4 <__assert_fail@plt+0x39a4>
   152b8:	mov	r0, r4
   152bc:	bl	117a4 <strdup@plt>
   152c0:	ldr	r6, [sp, #12]
   152c4:	add	r4, r4, #1
   152c8:	ldr	r1, [pc, #1080]	; 15708 <__assert_fail@plt+0x3bf8>
   152cc:	str	r0, [r6, #40]	; 0x28
   152d0:	mov	r0, r4
   152d4:	bl	1187c <open64@plt>
   152d8:	sxth	r5, r0
   152dc:	cmp	r5, #0
   152e0:	strh	r5, [r6, #6]
   152e4:	blt	153f8 <__assert_fail@plt+0x38e8>
   152e8:	mov	r0, r4
   152ec:	ldr	r1, [pc, #1048]	; 1570c <__assert_fail@plt+0x3bfc>
   152f0:	bl	11684 <strcmp@plt>
   152f4:	cmp	r0, #0
   152f8:	bne	153d8 <__assert_fail@plt+0x38c8>
   152fc:	ldr	r2, [sp, #12]
   15300:	mov	r3, #3
   15304:	strh	r3, [r2, #4]
   15308:	ldr	r3, [pc, #944]	; 156c0 <__assert_fail@plt+0x3bb0>
   1530c:	ldr	r4, [r3]
   15310:	cmp	r4, #0
   15314:	beq	153ac <__assert_fail@plt+0x389c>
   15318:	mov	r0, r4
   1531c:	bl	117a4 <strdup@plt>
   15320:	ldr	r5, [sp, #12]
   15324:	str	r0, [r5, #436]	; 0x1b4
   15328:	mov	r0, r4
   1532c:	bl	11918 <strlen@plt>
   15330:	str	r0, [r5, #440]	; 0x1b8
   15334:	add	sp, sp, #1360	; 0x550
   15338:	add	sp, sp, #4
   1533c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15340:	ldr	r3, [sp, #16]
   15344:	ldr	r0, [r3]
   15348:	ldr	r3, [sp, #12]
   1534c:	cmp	r0, #0
   15350:	strh	fp, [r3, #4]
   15354:	bne	1542c <__assert_fail@plt+0x391c>
   15358:	add	r5, sp, #136	; 0x88
   1535c:	mov	r0, r5
   15360:	ldr	r3, [pc, #936]	; 15710 <__assert_fail@plt+0x3c00>
   15364:	ldr	r2, [pc, #904]	; 156f4 <__assert_fail@plt+0x3be4>
   15368:	mov	r1, #100	; 0x64
   1536c:	bl	11954 <snprintf@plt>
   15370:	ldr	r2, [sp, #16]
   15374:	mov	r3, #0
   15378:	mov	r1, r5
   1537c:	str	r3, [r2]
   15380:	ldr	r0, [pc, #880]	; 156f8 <__assert_fail@plt+0x3be8>
   15384:	bl	12d3c <__assert_fail@plt+0x122c>
   15388:	ldr	r2, [pc, #876]	; 156fc <__assert_fail@plt+0x3bec>
   1538c:	mov	r1, r5
   15390:	mov	r3, #4
   15394:	ldr	r2, [r2]
   15398:	mov	r0, #43	; 0x2b
   1539c:	bl	14100 <__assert_fail@plt+0x25f0>
   153a0:	add	sp, sp, #1360	; 0x550
   153a4:	add	sp, sp, #4
   153a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153ac:	ldr	r3, [sp, #12]
   153b0:	str	r4, [r3, #436]	; 0x1b4
   153b4:	add	sp, sp, #1360	; 0x550
   153b8:	add	sp, sp, #4
   153bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153c0:	cmp	fp, #42	; 0x2a
   153c4:	bne	154b4 <__assert_fail@plt+0x39a4>
   153c8:	ldr	r2, [sp, #12]
   153cc:	mov	r3, #6
   153d0:	strh	r3, [r2, #4]
   153d4:	b	15308 <__assert_fail@plt+0x37f8>
   153d8:	mov	r0, r5
   153dc:	bl	11ac8 <isatty@plt>
   153e0:	cmp	r0, #0
   153e4:	beq	1541c <__assert_fail@plt+0x390c>
   153e8:	ldr	r2, [sp, #12]
   153ec:	mov	r3, #2
   153f0:	strh	r3, [r2, #4]
   153f4:	b	15308 <__assert_fail@plt+0x37f8>
   153f8:	mov	r0, r4
   153fc:	ldr	r4, [sp, #12]
   15400:	mov	r5, #0
   15404:	strh	r5, [r4, #4]
   15408:	bl	14b6c <__assert_fail@plt+0x305c>
   1540c:	ldr	r0, [r4, #40]	; 0x28
   15410:	bl	1ca50 <argp_parse@@Base+0x1150>
   15414:	str	r5, [r4, #40]	; 0x28
   15418:	b	15308 <__assert_fail@plt+0x37f8>
   1541c:	ldr	r2, [sp, #12]
   15420:	mov	r3, #9
   15424:	strh	r3, [r2, #4]
   15428:	b	15308 <__assert_fail@plt+0x37f8>
   1542c:	bl	118b8 <strerror@plt>
   15430:	add	r5, sp, #136	; 0x88
   15434:	ldr	r3, [pc, #724]	; 15710 <__assert_fail@plt+0x3c00>
   15438:	ldr	r2, [pc, #708]	; 15704 <__assert_fail@plt+0x3bf4>
   1543c:	mov	r1, #100	; 0x64
   15440:	str	r0, [sp]
   15444:	mov	r0, r5
   15448:	bl	11954 <snprintf@plt>
   1544c:	b	15370 <__assert_fail@plt+0x3860>
   15450:	mov	r0, r4
   15454:	bl	117a4 <strdup@plt>
   15458:	ldr	r6, [sp, #12]
   1545c:	mov	r2, #420	; 0x1a4
   15460:	ldr	r1, [pc, #684]	; 15714 <__assert_fail@plt+0x3c04>
   15464:	str	r0, [r6, #40]	; 0x28
   15468:	mov	r0, r4
   1546c:	bl	1187c <open64@plt>
   15470:	sxth	r5, r0
   15474:	cmp	r5, #0
   15478:	strh	r5, [r6, #6]
   1547c:	blt	153f8 <__assert_fail@plt+0x38e8>
   15480:	mov	r0, r4
   15484:	ldr	r1, [pc, #640]	; 1570c <__assert_fail@plt+0x3bfc>
   15488:	bl	11684 <strcmp@plt>
   1548c:	cmp	r0, #0
   15490:	beq	152fc <__assert_fail@plt+0x37ec>
   15494:	mov	r0, r5
   15498:	bl	11ac8 <isatty@plt>
   1549c:	cmp	r0, #0
   154a0:	bne	153e8 <__assert_fail@plt+0x38d8>
   154a4:	ldr	r2, [sp, #12]
   154a8:	mov	r3, #1
   154ac:	strh	r3, [r2, #4]
   154b0:	b	15308 <__assert_fail@plt+0x37f8>
   154b4:	ldr	r2, [sp, #12]
   154b8:	mov	r3, #1
   154bc:	str	r3, [r2, #40]	; 0x28
   154c0:	ldrb	r2, [r4]
   154c4:	cmp	r2, #0
   154c8:	beq	15670 <__assert_fail@plt+0x3b60>
   154cc:	mov	r1, r4
   154d0:	cmp	r2, #44	; 0x2c
   154d4:	addeq	r3, r3, #1
   154d8:	ldreq	r2, [sp, #12]
   154dc:	streq	r3, [r2, #40]	; 0x28
   154e0:	ldrb	r2, [r1, #1]!
   154e4:	cmp	r2, #0
   154e8:	bne	154d0 <__assert_fail@plt+0x39c0>
   154ec:	lsl	r0, r3, #2
   154f0:	bl	1e278 <argp_parse@@Base+0x2978>
   154f4:	ldr	sl, [sp, #12]
   154f8:	str	r0, [sl, #44]	; 0x2c
   154fc:	ldrb	r3, [r4]
   15500:	cmp	r3, #0
   15504:	beq	15660 <__assert_fail@plt+0x3b50>
   15508:	mov	r8, #0
   1550c:	mov	r9, r0
   15510:	mov	r6, r8
   15514:	mov	r7, #1
   15518:	cmp	r3, #44	; 0x2c
   1551c:	mov	r5, r4
   15520:	moveq	r0, r7
   15524:	moveq	fp, r6
   15528:	beq	15544 <__assert_fail@plt+0x3a34>
   1552c:	ldrb	r3, [r5, #1]!
   15530:	cmp	r3, #0
   15534:	cmpne	r3, #44	; 0x2c
   15538:	bne	1552c <__assert_fail@plt+0x3a1c>
   1553c:	sub	fp, r5, r4
   15540:	add	r0, fp, #1
   15544:	bl	1e278 <argp_parse@@Base+0x2978>
   15548:	str	r0, [r9, r8]
   1554c:	ldr	r3, [sl, #44]	; 0x2c
   15550:	ldr	r0, [r3, r8]
   15554:	cmp	r0, #0
   15558:	beq	15574 <__assert_fail@plt+0x3a64>
   1555c:	mov	r1, r4
   15560:	mov	r2, fp
   15564:	bl	11990 <strncpy@plt>
   15568:	ldr	r3, [sl, #44]	; 0x2c
   1556c:	ldr	r3, [r3, r8]
   15570:	strb	r6, [r3, fp]
   15574:	ldrb	r3, [r5]
   15578:	cmp	r3, #32
   1557c:	cmpne	r3, #44	; 0x2c
   15580:	bne	15594 <__assert_fail@plt+0x3a84>
   15584:	ldrb	r3, [r5, #1]!
   15588:	cmp	r3, #32
   1558c:	cmpne	r3, #44	; 0x2c
   15590:	beq	15584 <__assert_fail@plt+0x3a74>
   15594:	cmp	r3, #0
   15598:	add	r8, r8, #4
   1559c:	beq	15660 <__assert_fail@plt+0x3b50>
   155a0:	ldr	r9, [sl, #44]	; 0x2c
   155a4:	mov	r4, r5
   155a8:	b	15518 <__assert_fail@plt+0x3a08>
   155ac:	add	r4, r4, #1
   155b0:	mov	r0, r4
   155b4:	bl	117a4 <strdup@plt>
   155b8:	ldr	r3, [sp, #12]
   155bc:	mov	r6, #32
   155c0:	add	r5, sp, #136	; 0x88
   155c4:	mov	r2, r6
   155c8:	mov	r1, #0
   155cc:	str	r0, [r3, #40]	; 0x28
   155d0:	mov	r0, r5
   155d4:	bl	11984 <memset@plt>
   155d8:	ldr	r3, [pc, #252]	; 156dc <__assert_fail@plt+0x3bcc>
   155dc:	mov	r2, #2
   155e0:	str	r2, [sp, #144]	; 0x90
   155e4:	ldr	r3, [r3, #4]
   155e8:	mov	r2, #128	; 0x80
   155ec:	cmp	r3, #0
   155f0:	str	r3, [sp, #140]	; 0x8c
   155f4:	ldr	r3, [sp, #12]
   155f8:	streq	r6, [sp, #136]	; 0x88
   155fc:	add	r7, r3, #44	; 0x2c
   15600:	mov	r6, #0
   15604:	str	r6, [r3, #172]	; 0xac
   15608:	mov	r1, r6
   1560c:	mov	r0, r7
   15610:	bl	11984 <memset@plt>
   15614:	ldr	r3, [pc, #252]	; 15718 <__assert_fail@plt+0x3c08>
   15618:	mov	r2, r5
   1561c:	mov	r0, r4
   15620:	ldr	r1, [r3, #44]	; 0x2c
   15624:	add	r3, sp, #36	; 0x24
   15628:	bl	11a98 <getaddrinfo@plt>
   1562c:	cmp	r0, #0
   15630:	beq	15690 <__assert_fail@plt+0x3b80>
   15634:	cmn	r0, #10
   15638:	beq	15678 <__assert_fail@plt+0x3b68>
   1563c:	cmn	r0, #3
   15640:	beq	15678 <__assert_fail@plt+0x3b68>
   15644:	ldr	r3, [sp, #12]
   15648:	strh	r6, [r3, #4]
   1564c:	mov	r0, #0
   15650:	bl	1175c <time@plt>
   15654:	ldr	r3, [sp, #12]
   15658:	str	r0, [r3, #8]
   1565c:	b	15308 <__assert_fail@plt+0x37f8>
   15660:	ldr	r2, [sp, #12]
   15664:	mov	r3, #5
   15668:	strh	r3, [r2, #4]
   1566c:	b	15308 <__assert_fail@plt+0x37f8>
   15670:	mov	r0, #4
   15674:	b	154f0 <__assert_fail@plt+0x39e0>
   15678:	ldr	r1, [sp, #12]
   1567c:	mov	r2, #8
   15680:	mov	r3, #10
   15684:	strh	r2, [r1, #4]
   15688:	str	r3, [r1, #452]	; 0x1c4
   1568c:	b	1564c <__assert_fail@plt+0x3b3c>
   15690:	ldr	r4, [sp, #36]	; 0x24
   15694:	ldr	r1, [sp, #12]
   15698:	mov	r3, #4
   1569c:	ldr	r2, [r4, #16]
   156a0:	mov	r0, r7
   156a4:	strh	r3, [r1, #4]
   156a8:	str	r2, [r1, #172]	; 0xac
   156ac:	ldr	r1, [r4, #20]
   156b0:	bl	11744 <memcpy@plt>
   156b4:	mov	r0, r4
   156b8:	bl	11a8c <freeaddrinfo@plt>
   156bc:	b	15308 <__assert_fail@plt+0x37f8>
   156c0:	andeq	r3, r3, r8, asr #24
   156c4:	andeq	r2, r2, r0, lsl #8
   156c8:	ldrdeq	r0, [r2], -r4
   156cc:	andeq	r0, r2, r0, ror #25
   156d0:	andeq	r0, r2, r8, lsl sp
   156d4:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   156d8:	strdeq	r0, [r2], -r8
   156dc:			; <UNDEFINED> instruction: 0x000331b0
   156e0:	andeq	r3, r3, r0, lsl #5
   156e4:	andeq	r0, r2, ip, lsr sp
   156e8:	andeq	r3, r3, ip, asr #20
   156ec:	andeq	r3, r3, r8, asr #3
   156f0:	andeq	r0, r2, r0, lsr #26
   156f4:	andeq	r0, r2, r4, ror #18
   156f8:	andeq	r1, r2, r8, lsl #31
   156fc:	andeq	r3, r3, r0, asr #24
   15700:	strdeq	r0, [r2], -ip
   15704:	andeq	r0, r2, r4, asr r9
   15708:	andeq	r0, r0, r2, lsl #16
   1570c:	andeq	r3, r3, r8, lsl r3
   15710:	andeq	r0, r2, r4, asr #26
   15714:	andeq	r0, r0, r1, asr #8
   15718:	ldrdeq	r3, [r3], -r4
   1571c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15720:	mov	r4, r0
   15724:	ldr	r1, [pc, #844]	; 15a78 <__assert_fail@plt+0x3f68>
   15728:	bl	11a68 <fopen64@plt>
   1572c:	subs	sl, r0, #0
   15730:	beq	159c8 <__assert_fail@plt+0x3eb8>
   15734:	mov	r0, #2048	; 0x800
   15738:	bl	1e278 <argp_parse@@Base+0x2978>
   1573c:	subs	fp, r0, #0
   15740:	beq	159f8 <__assert_fail@plt+0x3ee8>
   15744:	ldr	r3, [pc, #816]	; 15a7c <__assert_fail@plt+0x3f6c>
   15748:	mov	r6, fp
   1574c:	mov	r9, #2048	; 0x800
   15750:	ldr	r0, [r3]
   15754:	bl	1ca50 <argp_parse@@Base+0x1150>
   15758:	mov	r2, #0
   1575c:	ldr	r3, [pc, #792]	; 15a7c <__assert_fail@plt+0x3f6c>
   15760:	mov	r7, r2
   15764:	mov	r8, r2
   15768:	str	r2, [r3]
   1576c:	sub	r5, fp, r6
   15770:	sub	r1, r9, r5
   15774:	mov	r2, sl
   15778:	mov	r0, fp
   1577c:	bl	11720 <fgets@plt>
   15780:	cmp	r0, #0
   15784:	beq	159a8 <__assert_fail@plt+0x3e98>
   15788:	mov	r0, fp
   1578c:	bl	11918 <strlen@plt>
   15790:	cmp	r7, #0
   15794:	mov	r4, r0
   15798:	beq	157d4 <__assert_fail@plt+0x3cc4>
   1579c:	ldrb	r3, [fp]
   157a0:	mov	r1, fp
   157a4:	cmp	r3, #32
   157a8:	cmpne	r3, #9
   157ac:	bne	159c0 <__assert_fail@plt+0x3eb0>
   157b0:	ldrb	r3, [r1, #1]!
   157b4:	cmp	r3, #9
   157b8:	cmpne	r3, #32
   157bc:	beq	157b0 <__assert_fail@plt+0x3ca0>
   157c0:	sub	r3, r1, fp
   157c4:	sub	r4, r4, r3
   157c8:	add	r2, r4, #1
   157cc:	mov	r0, fp
   157d0:	bl	116f0 <memmove@plt>
   157d4:	mov	r0, fp
   157d8:	mov	r1, #10
   157dc:	bl	11930 <strchr@plt>
   157e0:	cmp	r0, #0
   157e4:	beq	15978 <__assert_fail@plt+0x3e68>
   157e8:	bl	118f4 <__ctype_b_loc@plt>
   157ec:	mov	r3, r6
   157f0:	ldr	r1, [r0]
   157f4:	mov	r4, r0
   157f8:	mov	r5, r3
   157fc:	ldrb	r2, [r3], #1
   15800:	lsl	r0, r2, #1
   15804:	ldrh	r0, [r1, r0]
   15808:	tst	r0, #8192	; 0x2000
   1580c:	bne	157f8 <__assert_fail@plt+0x3ce8>
   15810:	cmp	r2, #33	; 0x21
   15814:	beq	15834 <__assert_fail@plt+0x3d24>
   15818:	cmp	r2, #35	; 0x23
   1581c:	beq	158c8 <__assert_fail@plt+0x3db8>
   15820:	cmp	r2, #0
   15824:	bne	158e0 <__assert_fail@plt+0x3dd0>
   15828:	mov	fp, r6
   1582c:	mov	r7, r8
   15830:	b	1576c <__assert_fail@plt+0x3c5c>
   15834:	ldrb	r2, [r5, #1]
   15838:	mov	r4, r3
   1583c:	cmp	r2, #33	; 0x21
   15840:	bne	1584c <__assert_fail@plt+0x3d3c>
   15844:	b	158d4 <__assert_fail@plt+0x3dc4>
   15848:	ldrb	r2, [r4, #1]!
   1584c:	lsl	r3, r2, #1
   15850:	ldrh	r3, [r1, r3]
   15854:	tst	r3, #8192	; 0x2000
   15858:	bne	15848 <__assert_fail@plt+0x3d38>
   1585c:	cmp	r2, #0
   15860:	beq	15828 <__assert_fail@plt+0x3d18>
   15864:	ldr	r3, [pc, #528]	; 15a7c <__assert_fail@plt+0x3f6c>
   15868:	ldr	r0, [r3]
   1586c:	bl	1ca50 <argp_parse@@Base+0x1150>
   15870:	ldr	r3, [pc, #516]	; 15a7c <__assert_fail@plt+0x3f6c>
   15874:	str	r8, [r3]
   15878:	ldrb	r3, [r4]
   1587c:	cmp	r3, #42	; 0x2a
   15880:	beq	15828 <__assert_fail@plt+0x3d18>
   15884:	mov	r1, #44	; 0x2c
   15888:	mov	r0, r4
   1588c:	bl	11930 <strchr@plt>
   15890:	ldr	r1, [pc, #488]	; 15a80 <__assert_fail@plt+0x3f70>
   15894:	mov	fp, r6
   15898:	mov	r7, r8
   1589c:	cmp	r0, #0
   158a0:	strbne	r8, [r0]
   158a4:	mov	r0, r4
   158a8:	bl	11a80 <strpbrk@plt>
   158ac:	cmp	r0, #0
   158b0:	strbne	r8, [r0]
   158b4:	mov	r0, r4
   158b8:	bl	117a4 <strdup@plt>
   158bc:	ldr	r3, [pc, #440]	; 15a7c <__assert_fail@plt+0x3f6c>
   158c0:	str	r0, [r3]
   158c4:	b	1576c <__assert_fail@plt+0x3c5c>
   158c8:	ldrb	r3, [r5, #1]
   158cc:	cmp	r3, #33	; 0x21
   158d0:	bne	15828 <__assert_fail@plt+0x3d18>
   158d4:	ldrb	r2, [r5, #2]
   158d8:	add	r4, r5, #2
   158dc:	b	1584c <__assert_fail@plt+0x3d3c>
   158e0:	mov	r0, r5
   158e4:	bl	11918 <strlen@plt>
   158e8:	mov	r1, r5
   158ec:	add	r2, r0, #1
   158f0:	mov	r0, r6
   158f4:	bl	116f0 <memmove@plt>
   158f8:	mov	r1, r8
   158fc:	mov	r0, r6
   15900:	bl	11930 <strchr@plt>
   15904:	ldr	r1, [r4]
   15908:	b	15910 <__assert_fail@plt+0x3e00>
   1590c:	mov	r0, fp
   15910:	ldrb	r2, [r0, #-1]
   15914:	sub	fp, r0, #1
   15918:	lsl	r3, r2, #1
   1591c:	ldrh	r3, [r1, r3]
   15920:	ands	r3, r3, #8192	; 0x2000
   15924:	bne	1590c <__assert_fail@plt+0x3dfc>
   15928:	cmp	r2, #92	; 0x5c
   1592c:	strbeq	r3, [fp]
   15930:	moveq	r7, #1
   15934:	beq	1576c <__assert_fail@plt+0x3c5c>
   15938:	strb	r3, [r0]
   1593c:	mov	r1, #464	; 0x1d0
   15940:	mov	r0, #1
   15944:	bl	1e230 <argp_parse@@Base+0x2930>
   15948:	mov	fp, r6
   1594c:	mov	r7, r8
   15950:	mov	r4, r0
   15954:	mov	r1, r0
   15958:	mov	r0, r6
   1595c:	bl	14d7c <__assert_fail@plt+0x326c>
   15960:	ldr	r3, [pc, #284]	; 15a84 <__assert_fail@plt+0x3f74>
   15964:	ldr	r3, [r3]
   15968:	str	r3, [r4]
   1596c:	ldr	r3, [pc, #272]	; 15a84 <__assert_fail@plt+0x3f74>
   15970:	str	r4, [r3]
   15974:	b	1576c <__assert_fail@plt+0x3c5c>
   15978:	lsl	r9, r9, #1
   1597c:	mov	r1, r9
   15980:	mov	r0, r6
   15984:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   15988:	cmp	r0, #0
   1598c:	beq	15a10 <__assert_fail@plt+0x3f00>
   15990:	sub	r5, r5, #1
   15994:	add	r4, r5, r4
   15998:	add	fp, r0, r4
   1599c:	mov	r6, r0
   159a0:	mov	r7, r8
   159a4:	b	1576c <__assert_fail@plt+0x3c5c>
   159a8:	mov	r0, sl
   159ac:	bl	119c0 <fclose@plt>
   159b0:	mov	r0, r6
   159b4:	bl	1ca50 <argp_parse@@Base+0x1150>
   159b8:	mov	r0, #1
   159bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159c0:	mov	r3, r8
   159c4:	b	157c4 <__assert_fail@plt+0x3cb4>
   159c8:	ldr	r5, [pc, #180]	; 15a84 <__assert_fail@plt+0x3f74>
   159cc:	mov	r1, r4
   159d0:	ldr	r0, [pc, #176]	; 15a88 <__assert_fail@plt+0x3f78>
   159d4:	bl	12d3c <__assert_fail@plt+0x122c>
   159d8:	ldr	r3, [r5]
   159dc:	cmp	r3, #0
   159e0:	beq	15a34 <__assert_fail@plt+0x3f24>
   159e4:	ldr	r2, [pc, #160]	; 15a8c <__assert_fail@plt+0x3f7c>
   159e8:	mov	r3, #1
   159ec:	mov	r0, r3
   159f0:	str	r3, [r2]
   159f4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159f8:	ldr	r0, [pc, #144]	; 15a90 <__assert_fail@plt+0x3f80>
   159fc:	bl	12d3c <__assert_fail@plt+0x122c>
   15a00:	mov	r0, sl
   15a04:	bl	119c0 <fclose@plt>
   15a08:	mov	r0, fp
   15a0c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a10:	mov	r7, r0
   15a14:	ldr	r0, [pc, #120]	; 15a94 <__assert_fail@plt+0x3f84>
   15a18:	bl	12d3c <__assert_fail@plt+0x122c>
   15a1c:	mov	r0, sl
   15a20:	bl	119c0 <fclose@plt>
   15a24:	mov	r0, r6
   15a28:	bl	1ca50 <argp_parse@@Base+0x1150>
   15a2c:	mov	r0, r7
   15a30:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a34:	mov	r1, #464	; 0x1d0
   15a38:	mov	r0, #1
   15a3c:	bl	1e230 <argp_parse@@Base+0x2930>
   15a40:	mov	r4, r0
   15a44:	mov	r1, r0
   15a48:	ldr	r0, [pc, #72]	; 15a98 <__assert_fail@plt+0x3f88>
   15a4c:	bl	14d7c <__assert_fail@plt+0x326c>
   15a50:	mov	r1, #464	; 0x1d0
   15a54:	mov	r0, #1
   15a58:	bl	1e230 <argp_parse@@Base+0x2930>
   15a5c:	mov	r3, r0
   15a60:	mov	r1, r0
   15a64:	str	r3, [r4]
   15a68:	ldr	r0, [pc, #44]	; 15a9c <__assert_fail@plt+0x3f8c>
   15a6c:	bl	14d7c <__assert_fail@plt+0x326c>
   15a70:	str	r4, [r5]
   15a74:	b	159e4 <__assert_fail@plt+0x3ed4>
   15a78:	andeq	r1, r2, r8, ror #23
   15a7c:	andeq	r3, r3, r8, asr #24
   15a80:	ldrdeq	r0, [r2], -ip
   15a84:	andeq	r3, r3, r0, asr sl
   15a88:	andeq	r0, r2, r8, asr sp
   15a8c:	andeq	r3, r3, r8, lsr ip
   15a90:	andeq	r0, r2, r8, lsl #27
   15a94:			; <UNDEFINED> instruction: 0x00020db4
   15a98:	andeq	r0, r2, r8, ror #26
   15a9c:	andeq	r0, r2, ip, ror sp
   15aa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15aa4:	sub	sp, sp, #132	; 0x84
   15aa8:	ldr	fp, [pc, #896]	; 15e30 <__assert_fail@plt+0x4320>
   15aac:	ldr	r0, [pc, #896]	; 15e34 <__assert_fail@plt+0x4324>
   15ab0:	bl	12d3c <__assert_fail@plt+0x122c>
   15ab4:	ldr	r3, [pc, #892]	; 15e38 <__assert_fail@plt+0x4328>
   15ab8:	ldr	r4, [fp]
   15abc:	mov	r7, #0
   15ac0:	cmp	r4, r7
   15ac4:	str	r7, [r3]
   15ac8:	ldr	r3, [pc, #876]	; 15e3c <__assert_fail@plt+0x432c>
   15acc:	ldrne	r6, [pc, #876]	; 15e40 <__assert_fail@plt+0x4330>
   15ad0:	str	r3, [sp, #12]
   15ad4:	movne	r8, #1
   15ad8:	movne	r9, r3
   15adc:	beq	15b68 <__assert_fail@plt+0x4058>
   15ae0:	ldr	r3, [r4, #452]	; 0x1c4
   15ae4:	cmp	r3, #0
   15ae8:	bne	15c0c <__assert_fail@plt+0x40fc>
   15aec:	ldrh	r3, [r4, #4]
   15af0:	cmp	r3, #9
   15af4:	bhi	15b44 <__assert_fail@plt+0x4034>
   15af8:	lsl	r3, r8, r3
   15afc:	tst	r3, #400	; 0x190
   15b00:	bne	15c30 <__assert_fail@plt+0x4120>
   15b04:	ands	r5, r3, r6
   15b08:	bne	15c3c <__assert_fail@plt+0x412c>
   15b0c:	tst	r3, #32
   15b10:	beq	15b44 <__assert_fail@plt+0x4034>
   15b14:	ldr	r3, [r4, #40]	; 0x28
   15b18:	cmp	r3, #0
   15b1c:	ble	15b3c <__assert_fail@plt+0x402c>
   15b20:	ldr	r3, [r4, #44]	; 0x2c
   15b24:	ldr	r0, [r3, r5, lsl #2]
   15b28:	bl	1ca50 <argp_parse@@Base+0x1150>
   15b2c:	ldr	r3, [r4, #40]	; 0x28
   15b30:	add	r5, r5, #1
   15b34:	cmp	r3, r5
   15b38:	bgt	15b20 <__assert_fail@plt+0x4010>
   15b3c:	ldr	r0, [r4, #44]	; 0x2c
   15b40:	bl	1ca50 <argp_parse@@Base+0x1150>
   15b44:	ldr	r0, [r4, #436]	; 0x1b4
   15b48:	bl	1ca50 <argp_parse@@Base+0x1150>
   15b4c:	ldr	r0, [r4, #432]	; 0x1b0
   15b50:	bl	1ca50 <argp_parse@@Base+0x1150>
   15b54:	ldr	r5, [r4]
   15b58:	mov	r0, r4
   15b5c:	bl	1ca50 <argp_parse@@Base+0x1150>
   15b60:	subs	r4, r5, #0
   15b64:	bne	15ae0 <__assert_fail@plt+0x3fd0>
   15b68:	ldr	r8, [pc, #724]	; 15e44 <__assert_fail@plt+0x4334>
   15b6c:	ldr	r3, [pc, #724]	; 15e48 <__assert_fail@plt+0x4338>
   15b70:	mov	r9, #0
   15b74:	ldr	r0, [r8, #16]
   15b78:	str	r9, [r3]
   15b7c:	str	r9, [fp]
   15b80:	bl	1571c <__assert_fail@plt+0x3c0c>
   15b84:	ldr	r4, [r8, #20]
   15b88:	str	r0, [sp, #8]
   15b8c:	mov	r0, r4
   15b90:	bl	11870 <opendir@plt>
   15b94:	subs	r5, r0, #0
   15b98:	beq	15e20 <__assert_fail@plt+0x4310>
   15b9c:	ldr	r6, [pc, #680]	; 15e4c <__assert_fail@plt+0x433c>
   15ba0:	ldr	sl, [pc, #680]	; 15e50 <__assert_fail@plt+0x4340>
   15ba4:	mov	r7, #3
   15ba8:	str	r9, [sp, #4]
   15bac:	mov	r0, r5
   15bb0:	bl	11a44 <readdir64@plt>
   15bb4:	mov	r2, r4
   15bb8:	mov	r1, r6
   15bbc:	subs	r3, r0, #0
   15bc0:	add	r3, r3, #19
   15bc4:	add	r0, sp, #20
   15bc8:	beq	15c6c <__assert_fail@plt+0x415c>
   15bcc:	bl	1199c <asprintf@plt>
   15bd0:	add	r2, sp, #24
   15bd4:	cmp	r0, #0
   15bd8:	mov	r0, r7
   15bdc:	blt	15e0c <__assert_fail@plt+0x42fc>
   15be0:	ldr	r1, [sp, #20]
   15be4:	bl	11abc <__xstat64@plt>
   15be8:	cmp	r0, #0
   15bec:	bne	15c24 <__assert_fail@plt+0x4114>
   15bf0:	ldr	r3, [sp, #40]	; 0x28
   15bf4:	and	r3, r3, #61440	; 0xf000
   15bf8:	cmp	r3, #32768	; 0x8000
   15bfc:	beq	15c50 <__assert_fail@plt+0x4140>
   15c00:	ldr	r0, [sp, #20]
   15c04:	bl	1ca50 <argp_parse@@Base+0x1150>
   15c08:	b	15bac <__assert_fail@plt+0x409c>
   15c0c:	mov	r3, r7
   15c10:	mov	r2, #0
   15c14:	ldr	r1, [r9]
   15c18:	mov	r0, r4
   15c1c:	bl	138f8 <__assert_fail@plt+0x1de8>
   15c20:	b	15aec <__assert_fail@plt+0x3fdc>
   15c24:	mov	r0, sl
   15c28:	bl	12d3c <__assert_fail@plt+0x122c>
   15c2c:	b	15bac <__assert_fail@plt+0x409c>
   15c30:	ldr	r0, [r4, #40]	; 0x28
   15c34:	bl	1ca50 <argp_parse@@Base+0x1150>
   15c38:	b	15b44 <__assert_fail@plt+0x4034>
   15c3c:	ldr	r0, [r4, #40]	; 0x28
   15c40:	bl	1ca50 <argp_parse@@Base+0x1150>
   15c44:	ldrsh	r0, [r4, #6]
   15c48:	bl	11af8 <close@plt>
   15c4c:	b	15b44 <__assert_fail@plt+0x4034>
   15c50:	ldr	r0, [sp, #20]
   15c54:	bl	1571c <__assert_fail@plt+0x3c0c>
   15c58:	ldr	r3, [sp, #4]
   15c5c:	add	r9, r9, #1
   15c60:	add	r3, r3, r0
   15c64:	str	r3, [sp, #4]
   15c68:	b	15c00 <__assert_fail@plt+0x40f0>
   15c6c:	mov	r0, r5
   15c70:	bl	11b04 <closedir@plt>
   15c74:	cmp	r9, #0
   15c78:	beq	15c8c <__assert_fail@plt+0x417c>
   15c7c:	ldmib	sp, {r2, r3}
   15c80:	cmp	r2, #0
   15c84:	moveq	r3, #0
   15c88:	str	r3, [sp, #8]
   15c8c:	ldr	r3, [pc, #448]	; 15e54 <__assert_fail@plt+0x4344>
   15c90:	ldr	r1, [pc, #416]	; 15e38 <__assert_fail@plt+0x4328>
   15c94:	mov	r2, #1
   15c98:	ldr	r3, [r3]
   15c9c:	str	r2, [r1]
   15ca0:	cmp	r3, #0
   15ca4:	beq	15d70 <__assert_fail@plt+0x4260>
   15ca8:	ldr	r7, [fp]
   15cac:	cmp	r7, #0
   15cb0:	beq	15d70 <__assert_fail@plt+0x4260>
   15cb4:	ldr	r6, [pc, #412]	; 15e58 <__assert_fail@plt+0x4348>
   15cb8:	ldr	r5, [pc, #412]	; 15e5c <__assert_fail@plt+0x434c>
   15cbc:	ldr	fp, [pc, #412]	; 15e60 <__assert_fail@plt+0x4350>
   15cc0:	ldr	r9, [pc, #412]	; 15e64 <__assert_fail@plt+0x4354>
   15cc4:	add	r4, r7, #11
   15cc8:	add	sl, r7, #36	; 0x24
   15ccc:	ldrb	r3, [r4, #1]!
   15cd0:	mov	r0, r5
   15cd4:	subs	r1, r3, #0
   15cd8:	bne	15dcc <__assert_fail@plt+0x42bc>
   15cdc:	bl	12d3c <__assert_fail@plt+0x122c>
   15ce0:	cmp	sl, r4
   15ce4:	bne	15ccc <__assert_fail@plt+0x41bc>
   15ce8:	ldrsh	r3, [r7, #4]
   15cec:	mov	r0, fp
   15cf0:	add	r3, r8, r3, lsl #2
   15cf4:	ldr	r1, [r3, #320]	; 0x140
   15cf8:	bl	12d3c <__assert_fail@plt+0x122c>
   15cfc:	ldrh	r2, [r7, #4]
   15d00:	cmp	r2, #9
   15d04:	bhi	15d5c <__assert_fail@plt+0x424c>
   15d08:	mov	r3, #1
   15d0c:	lsl	r3, r3, r2
   15d10:	tst	r3, #400	; 0x190
   15d14:	bne	15de0 <__assert_fail@plt+0x42d0>
   15d18:	ldr	r4, [pc, #288]	; 15e40 <__assert_fail@plt+0x4330>
   15d1c:	and	r4, r4, r3
   15d20:	cmp	r4, #0
   15d24:	bne	15de0 <__assert_fail@plt+0x42d0>
   15d28:	tst	r3, #32
   15d2c:	beq	15d5c <__assert_fail@plt+0x424c>
   15d30:	ldr	r3, [r7, #40]	; 0x28
   15d34:	cmp	r3, #0
   15d38:	ble	15d5c <__assert_fail@plt+0x424c>
   15d3c:	ldr	r3, [r7, #44]	; 0x2c
   15d40:	mov	r0, r9
   15d44:	ldr	r1, [r3, r4, lsl #2]
   15d48:	bl	12d3c <__assert_fail@plt+0x122c>
   15d4c:	ldr	r3, [r7, #40]	; 0x28
   15d50:	add	r4, r4, #1
   15d54:	cmp	r3, r4
   15d58:	bgt	15d3c <__assert_fail@plt+0x422c>
   15d5c:	ldr	r0, [pc, #260]	; 15e68 <__assert_fail@plt+0x4358>
   15d60:	bl	12d3c <__assert_fail@plt+0x122c>
   15d64:	ldr	r7, [r7]
   15d68:	cmp	r7, #0
   15d6c:	bne	15cc4 <__assert_fail@plt+0x41b4>
   15d70:	ldr	r3, [pc, #244]	; 15e6c <__assert_fail@plt+0x435c>
   15d74:	ldr	r3, [r3]
   15d78:	cmp	r3, #0
   15d7c:	beq	15df0 <__assert_fail@plt+0x42e0>
   15d80:	ldr	r2, [sp, #12]
   15d84:	mov	r3, #4
   15d88:	ldr	r1, [pc, #224]	; 15e70 <__assert_fail@plt+0x4360>
   15d8c:	ldr	r2, [r2]
   15d90:	mov	r0, #46	; 0x2e
   15d94:	bl	14100 <__assert_fail@plt+0x25f0>
   15d98:	ldr	r3, [sp, #8]
   15d9c:	cmp	r3, #0
   15da0:	bne	15dbc <__assert_fail@plt+0x42ac>
   15da4:	ldr	r3, [sp, #12]
   15da8:	ldr	r1, [pc, #196]	; 15e74 <__assert_fail@plt+0x4364>
   15dac:	mov	r0, #43	; 0x2b
   15db0:	ldr	r2, [r3]
   15db4:	mov	r3, #4
   15db8:	bl	14100 <__assert_fail@plt+0x25f0>
   15dbc:	ldr	r0, [pc, #180]	; 15e78 <__assert_fail@plt+0x4368>
   15dc0:	bl	12d3c <__assert_fail@plt+0x122c>
   15dc4:	add	sp, sp, #132	; 0x84
   15dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dcc:	mov	r0, r6
   15dd0:	bl	12d3c <__assert_fail@plt+0x122c>
   15dd4:	cmp	sl, r4
   15dd8:	bne	15ccc <__assert_fail@plt+0x41bc>
   15ddc:	b	15ce8 <__assert_fail@plt+0x41d8>
   15de0:	ldr	r1, [r7, #40]	; 0x28
   15de4:	ldr	r0, [pc, #144]	; 15e7c <__assert_fail@plt+0x436c>
   15de8:	bl	12d3c <__assert_fail@plt+0x122c>
   15dec:	b	15d5c <__assert_fail@plt+0x424c>
   15df0:	ldr	r2, [sp, #12]
   15df4:	mov	r3, #4
   15df8:	ldr	r1, [pc, #128]	; 15e80 <__assert_fail@plt+0x4370>
   15dfc:	ldr	r2, [r2]
   15e00:	mov	r0, #46	; 0x2e
   15e04:	bl	14100 <__assert_fail@plt+0x25f0>
   15e08:	b	15d98 <__assert_fail@plt+0x4288>
   15e0c:	ldr	r0, [pc, #112]	; 15e84 <__assert_fail@plt+0x4374>
   15e10:	bl	12d3c <__assert_fail@plt+0x122c>
   15e14:	mov	r3, #0
   15e18:	str	r3, [sp, #8]
   15e1c:	b	15c8c <__assert_fail@plt+0x417c>
   15e20:	mov	r1, r4
   15e24:	ldr	r0, [pc, #92]	; 15e88 <__assert_fail@plt+0x4378>
   15e28:	bl	12d3c <__assert_fail@plt+0x122c>
   15e2c:	b	15c8c <__assert_fail@plt+0x417c>
   15e30:	andeq	r3, r3, r0, asr sl
   15e34:	andeq	r0, r2, r4, ror #27
   15e38:	andeq	r3, r3, r8, lsr ip
   15e3c:	andeq	r3, r3, r0, asr #24
   15e40:	andeq	r0, r0, lr, lsl #4
   15e44:			; <UNDEFINED> instruction: 0x000331b0
   15e48:	andeq	r3, r3, ip, asr #20
   15e4c:	andeq	r0, r2, ip, ror #27
   15e50:	andeq	r0, r2, r8, lsr #28
   15e54:	andeq	r3, r3, ip, lsr #24
   15e58:	andeq	r0, r2, r4, asr lr
   15e5c:	andeq	r0, r2, r0, asr lr
   15e60:	andeq	r0, r2, ip, asr lr
   15e64:	andeq	r0, r2, r4, ror #28
   15e68:	muleq	r2, ip, r9
   15e6c:	andeq	r3, r3, r8, asr #20
   15e70:	andeq	r0, r2, ip, ror #28
   15e74:	andeq	r0, r2, r0, ror #29
   15e78:	andeq	r0, r2, r4, lsl #30
   15e7c:	andeq	r1, r2, r8, lsr #18
   15e80:			; <UNDEFINED> instruction: 0x00020eb0
   15e84:	strdeq	r0, [r2], -r4
   15e88:	andeq	r0, r2, r8, asr sp
   15e8c:	push	{r4, r5, r6, lr}
   15e90:	mov	r5, r0
   15e94:	mov	r4, r1
   15e98:	bl	118f4 <__ctype_b_loc@plt>
   15e9c:	ldrb	r3, [r5]
   15ea0:	lsl	r3, r3, #1
   15ea4:	ldr	r2, [r0]
   15ea8:	ldrh	r3, [r2, r3]
   15eac:	tst	r3, #2048	; 0x800
   15eb0:	bne	15ef0 <__assert_fail@plt+0x43e0>
   15eb4:	ldr	r1, [r4]
   15eb8:	cmp	r1, #0
   15ebc:	bne	15ed0 <__assert_fail@plt+0x43c0>
   15ec0:	b	15ee8 <__assert_fail@plt+0x43d8>
   15ec4:	ldr	r1, [r4, #8]!
   15ec8:	cmp	r1, #0
   15ecc:	beq	15ee8 <__assert_fail@plt+0x43d8>
   15ed0:	mov	r0, r5
   15ed4:	bl	11804 <strcasecmp@plt>
   15ed8:	cmp	r0, #0
   15edc:	bne	15ec4 <__assert_fail@plt+0x43b4>
   15ee0:	ldr	r0, [r4, #4]
   15ee4:	pop	{r4, r5, r6, pc}
   15ee8:	mvn	r0, #0
   15eec:	pop	{r4, r5, r6, pc}
   15ef0:	mov	r0, r5
   15ef4:	mov	r2, #10
   15ef8:	mov	r1, #0
   15efc:	pop	{r4, r5, r6, lr}
   15f00:	b	11690 <strtol@plt>
   15f04:	push	{r4, r5, r6, lr}
   15f08:	sub	sp, sp, #40	; 0x28
   15f0c:	ldr	r4, [pc, #216]	; 15fec <__assert_fail@plt+0x44dc>
   15f10:	ldr	r3, [pc, #216]	; 15ff0 <__assert_fail@plt+0x44e0>
   15f14:	mov	r2, #32
   15f18:	mov	r1, #0
   15f1c:	ldr	r6, [pc, #208]	; 15ff4 <__assert_fail@plt+0x44e4>
   15f20:	mov	r5, r0
   15f24:	add	r0, sp, #8
   15f28:	str	r3, [r4, #44]	; 0x2c
   15f2c:	bl	11984 <memset@plt>
   15f30:	mov	r0, #2
   15f34:	mov	ip, #1
   15f38:	str	r0, [sp, #16]
   15f3c:	add	r2, sp, #8
   15f40:	mov	r1, r6
   15f44:	add	r3, sp, #4
   15f48:	mov	r0, #0
   15f4c:	str	ip, [sp, #8]
   15f50:	bl	11a98 <getaddrinfo@plt>
   15f54:	cmp	r0, #0
   15f58:	beq	15fc4 <__assert_fail@plt+0x44b4>
   15f5c:	cmp	r5, #0
   15f60:	str	r5, [r4, #48]	; 0x30
   15f64:	beq	15fdc <__assert_fail@plt+0x44cc>
   15f68:	mov	r2, #32
   15f6c:	mov	r1, #0
   15f70:	add	r0, sp, #8
   15f74:	bl	11984 <memset@plt>
   15f78:	add	r3, sp, #4
   15f7c:	mov	lr, #2
   15f80:	mov	ip, #1
   15f84:	add	r2, sp, #8
   15f88:	mov	r1, r5
   15f8c:	mov	r0, #0
   15f90:	str	lr, [sp, #16]
   15f94:	str	ip, [sp, #8]
   15f98:	bl	11a98 <getaddrinfo@plt>
   15f9c:	cmp	r0, #0
   15fa0:	movne	r3, #0
   15fa4:	strne	r3, [r4, #48]	; 0x30
   15fa8:	beq	15fb4 <__assert_fail@plt+0x44a4>
   15fac:	add	sp, sp, #40	; 0x28
   15fb0:	pop	{r4, r5, r6, pc}
   15fb4:	ldr	r0, [sp, #4]
   15fb8:	bl	11a8c <freeaddrinfo@plt>
   15fbc:	add	sp, sp, #40	; 0x28
   15fc0:	pop	{r4, r5, r6, pc}
   15fc4:	ldr	r0, [sp, #4]
   15fc8:	str	r6, [r4, #44]	; 0x2c
   15fcc:	bl	11a8c <freeaddrinfo@plt>
   15fd0:	cmp	r5, #0
   15fd4:	str	r5, [r4, #48]	; 0x30
   15fd8:	bne	15f68 <__assert_fail@plt+0x4458>
   15fdc:	ldr	r3, [r4, #44]	; 0x2c
   15fe0:	str	r3, [r4, #48]	; 0x30
   15fe4:	add	sp, sp, #40	; 0x28
   15fe8:	pop	{r4, r5, r6, pc}
   15fec:	ldrdeq	r3, [r3], -r4
   15ff0:	andeq	r0, r2, r8, lsl pc
   15ff4:	andeq	r0, r2, ip, lsl pc
   15ff8:	push	{r4, lr}
   15ffc:	mov	r0, #0
   16000:	bl	117bc <alarm@plt>
   16004:	mov	r1, #0
   16008:	mov	r4, r0
   1600c:	mov	r0, #14
   16010:	bl	11750 <signal@plt>
   16014:	cmp	r4, #0
   16018:	popne	{r4, pc}
   1601c:	mov	r1, r4
   16020:	ldr	r2, [pc, #8]	; 16030 <__assert_fail@plt+0x4520>
   16024:	mov	r0, #1
   16028:	pop	{r4, lr}
   1602c:	b	11858 <error@plt>
   16030:	andeq	r1, r2, r8, ror r8
   16034:	push	{r4, r5, r6, r7, r8, lr}
   16038:	mov	r5, r1
   1603c:	mov	r6, r2
   16040:	mov	r7, r0
   16044:	bl	11900 <getpid@plt>
   16048:	mov	r8, r0
   1604c:	bl	11a08 <fork@plt>
   16050:	cmn	r0, #1
   16054:	mov	r4, r0
   16058:	beq	160e0 <__assert_fail@plt+0x45d0>
   1605c:	cmp	r0, #0
   16060:	bne	160a8 <__assert_fail@plt+0x4598>
   16064:	bl	11924 <setsid@plt>
   16068:	cmn	r0, #1
   1606c:	beq	160e0 <__assert_fail@plt+0x45d0>
   16070:	mov	r1, #1
   16074:	mov	r0, r1
   16078:	bl	11750 <signal@plt>
   1607c:	bl	11a08 <fork@plt>
   16080:	cmn	r0, #1
   16084:	popeq	{r4, r5, r6, r7, r8, pc}
   16088:	cmp	r0, #0
   1608c:	bne	160c8 <__assert_fail@plt+0x45b8>
   16090:	cmp	r7, #0
   16094:	beq	160d0 <__assert_fail@plt+0x45c0>
   16098:	cmp	r5, #0
   1609c:	beq	160e8 <__assert_fail@plt+0x45d8>
   160a0:	mov	r0, r8
   160a4:	pop	{r4, r5, r6, r7, r8, pc}
   160a8:	cmp	r6, #0
   160ac:	ble	160c8 <__assert_fail@plt+0x45b8>
   160b0:	ldr	r1, [pc, #188]	; 16174 <__assert_fail@plt+0x4664>
   160b4:	mov	r0, #14
   160b8:	bl	11750 <signal@plt>
   160bc:	mov	r0, r6
   160c0:	bl	117bc <alarm@plt>
   160c4:	bl	116a8 <pause@plt>
   160c8:	mov	r0, #0
   160cc:	bl	11738 <_exit@plt>
   160d0:	ldr	r0, [pc, #160]	; 16178 <__assert_fail@plt+0x4668>
   160d4:	bl	117f8 <chdir@plt>
   160d8:	cmp	r0, #0
   160dc:	bge	16098 <__assert_fail@plt+0x4588>
   160e0:	mvn	r0, #0
   160e4:	pop	{r4, r5, r6, r7, r8, pc}
   160e8:	mov	r0, #4
   160ec:	bl	117c8 <sysconf@plt>
   160f0:	cmn	r0, #1
   160f4:	mov	r4, r0
   160f8:	beq	1616c <__assert_fail@plt+0x465c>
   160fc:	cmp	r0, #0
   16100:	ble	16118 <__assert_fail@plt+0x4608>
   16104:	mov	r0, r5
   16108:	add	r5, r5, #1
   1610c:	bl	11af8 <close@plt>
   16110:	cmp	r5, r4
   16114:	blt	16104 <__assert_fail@plt+0x45f4>
   16118:	mov	r2, #0
   1611c:	mov	r1, #2
   16120:	ldr	r0, [pc, #84]	; 1617c <__assert_fail@plt+0x466c>
   16124:	bl	1187c <open64@plt>
   16128:	cmn	r0, #1
   1612c:	mov	r4, r0
   16130:	beq	160a0 <__assert_fail@plt+0x4590>
   16134:	mov	r1, #0
   16138:	bl	117e0 <dup2@plt>
   1613c:	mov	r1, #1
   16140:	mov	r0, r4
   16144:	bl	117e0 <dup2@plt>
   16148:	mov	r1, #2
   1614c:	mov	r0, r4
   16150:	bl	117e0 <dup2@plt>
   16154:	cmp	r4, #2
   16158:	ble	160a0 <__assert_fail@plt+0x4590>
   1615c:	mov	r0, r4
   16160:	bl	11af8 <close@plt>
   16164:	mov	r0, r8
   16168:	pop	{r4, r5, r6, r7, r8, pc}
   1616c:	mov	r4, #64	; 0x40
   16170:	b	16104 <__assert_fail@plt+0x45f4>
   16174:	strdeq	r5, [r1], -r8
   16178:	andeq	r1, r2, ip, lsl #18
   1617c:	muleq	r2, r4, r8

00016180 <daemon@@Base>:
   16180:	push	{r4, r5, r6, r7, r8, lr}
   16184:	mov	r5, r1
   16188:	mov	r7, r0
   1618c:	bl	11900 <getpid@plt>
   16190:	mov	r6, r0
   16194:	bl	11a08 <fork@plt>
   16198:	cmn	r0, #1
   1619c:	mov	r4, r0
   161a0:	beq	16214 <daemon@@Base+0x94>
   161a4:	cmp	r0, #0
   161a8:	bne	161fc <daemon@@Base+0x7c>
   161ac:	bl	11924 <setsid@plt>
   161b0:	cmn	r0, #1
   161b4:	beq	16214 <daemon@@Base+0x94>
   161b8:	mov	r1, #1
   161bc:	mov	r0, r1
   161c0:	bl	11750 <signal@plt>
   161c4:	bl	11a08 <fork@plt>
   161c8:	cmn	r0, #1
   161cc:	popeq	{r4, r5, r6, r7, r8, pc}
   161d0:	cmp	r0, #0
   161d4:	bne	161fc <daemon@@Base+0x7c>
   161d8:	cmp	r7, #0
   161dc:	beq	16204 <daemon@@Base+0x84>
   161e0:	cmp	r5, #0
   161e4:	beq	1621c <daemon@@Base+0x9c>
   161e8:	cmn	r6, #1
   161ec:	movne	r0, #0
   161f0:	moveq	r0, #1
   161f4:	rsb	r0, r0, #0
   161f8:	pop	{r4, r5, r6, r7, r8, pc}
   161fc:	mov	r0, #0
   16200:	bl	11738 <_exit@plt>
   16204:	ldr	r0, [pc, #152]	; 162a4 <daemon@@Base+0x124>
   16208:	bl	117f8 <chdir@plt>
   1620c:	cmp	r0, #0
   16210:	bge	161e0 <daemon@@Base+0x60>
   16214:	mvn	r0, #0
   16218:	pop	{r4, r5, r6, r7, r8, pc}
   1621c:	mov	r0, #4
   16220:	bl	117c8 <sysconf@plt>
   16224:	cmn	r0, #1
   16228:	mov	r4, r0
   1622c:	beq	1629c <daemon@@Base+0x11c>
   16230:	cmp	r0, #0
   16234:	ble	1624c <daemon@@Base+0xcc>
   16238:	mov	r0, r5
   1623c:	add	r5, r5, #1
   16240:	bl	11af8 <close@plt>
   16244:	cmp	r4, r5
   16248:	bgt	16238 <daemon@@Base+0xb8>
   1624c:	mov	r2, #0
   16250:	mov	r1, #2
   16254:	ldr	r0, [pc, #76]	; 162a8 <daemon@@Base+0x128>
   16258:	bl	1187c <open64@plt>
   1625c:	cmn	r0, #1
   16260:	mov	r4, r0
   16264:	beq	161e8 <daemon@@Base+0x68>
   16268:	mov	r1, #0
   1626c:	bl	117e0 <dup2@plt>
   16270:	mov	r1, #1
   16274:	mov	r0, r4
   16278:	bl	117e0 <dup2@plt>
   1627c:	mov	r1, #2
   16280:	mov	r0, r4
   16284:	bl	117e0 <dup2@plt>
   16288:	cmp	r4, #2
   1628c:	ble	161e8 <daemon@@Base+0x68>
   16290:	mov	r0, r4
   16294:	bl	11af8 <close@plt>
   16298:	b	161e8 <daemon@@Base+0x68>
   1629c:	mov	r4, #64	; 0x40
   162a0:	b	16238 <daemon@@Base+0xb8>
   162a4:	andeq	r1, r2, ip, lsl #18
   162a8:	muleq	r2, r4, r8
   162ac:	push	{r4, r5, r6, r7, r8, r9, lr}
   162b0:	sub	sp, sp, #1088	; 0x440
   162b4:	sub	sp, sp, #4
   162b8:	bl	11948 <__errno_location@plt>
   162bc:	mov	r4, #0
   162c0:	mov	r6, r4
   162c4:	mov	r7, r4
   162c8:	mov	r8, r0
   162cc:	b	16304 <daemon@@Base+0x184>
   162d0:	bl	11864 <gethostname@plt>
   162d4:	mov	r6, r5
   162d8:	mov	r2, r4
   162dc:	mov	r1, r7
   162e0:	subs	r9, r0, #0
   162e4:	mov	r0, r5
   162e8:	bne	162f8 <daemon@@Base+0x178>
   162ec:	bl	119a8 <memchr@plt>
   162f0:	cmp	r0, #0
   162f4:	beq	16304 <daemon@@Base+0x184>
   162f8:	ldr	r3, [r8]
   162fc:	cmp	r3, #36	; 0x24
   16300:	bne	16344 <daemon@@Base+0x1c4>
   16304:	add	r4, r4, #256	; 0x100
   16308:	mov	r1, r4
   1630c:	str	r7, [r8]
   16310:	mov	r0, r6
   16314:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   16318:	mov	r1, r4
   1631c:	subs	r5, r0, #0
   16320:	bne	162d0 <daemon@@Base+0x150>
   16324:	mov	r3, #12
   16328:	mov	r0, r6
   1632c:	str	r3, [r8]
   16330:	bl	1ca50 <argp_parse@@Base+0x1150>
   16334:	mov	r0, r5
   16338:	add	sp, sp, #1088	; 0x440
   1633c:	add	sp, sp, #4
   16340:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16344:	cmp	r3, #0
   16348:	cmpne	r9, #0
   1634c:	movne	r9, #1
   16350:	moveq	r9, #0
   16354:	bne	163f4 <daemon@@Base+0x274>
   16358:	mov	r2, #32
   1635c:	mov	r1, r9
   16360:	add	r0, sp, #28
   16364:	bl	11984 <memset@plt>
   16368:	add	r3, sp, #24
   1636c:	mov	ip, #2
   16370:	add	r2, sp, #28
   16374:	mov	r1, r9
   16378:	mov	r0, r5
   1637c:	str	ip, [sp, #32]
   16380:	bl	11a98 <getaddrinfo@plt>
   16384:	subs	r3, r0, #0
   16388:	bne	16334 <daemon@@Base+0x1b4>
   1638c:	ldr	r2, [sp, #24]
   16390:	add	r1, sp, #60	; 0x3c
   16394:	str	r1, [sp, #20]
   16398:	mov	ip, #8
   1639c:	ldr	r1, [r2, #16]
   163a0:	ldr	r0, [r2, #20]
   163a4:	str	r3, [sp, #4]
   163a8:	str	r3, [sp]
   163ac:	ldr	r2, [sp, #20]
   163b0:	str	ip, [sp, #8]
   163b4:	ldr	r3, [pc, #72]	; 16404 <daemon@@Base+0x284>
   163b8:	bl	11a14 <getnameinfo@plt>
   163bc:	cmp	r0, #0
   163c0:	beq	163dc <daemon@@Base+0x25c>
   163c4:	ldr	r0, [sp, #24]
   163c8:	bl	11a8c <freeaddrinfo@plt>
   163cc:	mov	r0, r5
   163d0:	add	sp, sp, #1088	; 0x440
   163d4:	add	sp, sp, #4
   163d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   163dc:	mov	r0, r5
   163e0:	bl	1ca50 <argp_parse@@Base+0x1150>
   163e4:	ldr	r0, [sp, #20]
   163e8:	bl	117a4 <strdup@plt>
   163ec:	mov	r5, r0
   163f0:	b	163c4 <daemon@@Base+0x244>
   163f4:	mov	r0, r5
   163f8:	bl	1ca50 <argp_parse@@Base+0x1150>
   163fc:	mov	r5, #0
   16400:	b	16334 <daemon@@Base+0x1b4>
   16404:	andeq	r0, r0, r1, lsl #8
   16408:	cmp	r1, #6
   1640c:	ble	16418 <daemon@@Base+0x298>
   16410:	ldr	r0, [pc, #1136]	; 16888 <daemon@@Base+0x708>
   16414:	bx	lr
   16418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1641c:	mov	r5, r0
   16420:	sub	sp, sp, #196	; 0xc4
   16424:	mov	r0, r2
   16428:	mov	r6, r1
   1642c:	mov	r9, r2
   16430:	mov	fp, r3
   16434:	bl	11918 <strlen@plt>
   16438:	add	r0, r0, #6
   1643c:	bl	1e278 <argp_parse@@Base+0x2978>
   16440:	subs	r7, r0, #0
   16444:	beq	167c0 <daemon@@Base+0x640>
   16448:	ldr	r3, [pc, #1084]	; 1688c <daemon@@Base+0x70c>
   1644c:	mov	r1, r9
   16450:	ldr	r0, [r3]
   16454:	ldrb	r3, [r3, #4]
   16458:	str	r0, [r7]
   1645c:	add	r0, r7, #5
   16460:	strb	r3, [r7, #4]
   16464:	bl	11780 <stpcpy@plt>
   16468:	cmp	r0, r7
   1646c:	sub	r0, r0, r7
   16470:	beq	164b4 <daemon@@Base+0x334>
   16474:	sub	r0, r0, #1
   16478:	mov	r1, #46	; 0x2e
   1647c:	ldrb	r3, [r7, r0]
   16480:	cmp	r3, #47	; 0x2f
   16484:	moveq	r3, #0
   16488:	strbeq	r3, [r7, r0]
   1648c:	mov	r0, r7
   16490:	bl	11930 <strchr@plt>
   16494:	subs	r3, r0, #0
   16498:	movne	r4, #46	; 0x2e
   1649c:	bne	16600 <daemon@@Base+0x480>
   164a0:	ldrb	r3, [r7]
   164a4:	cmp	r3, #0
   164a8:	moveq	r2, #47	; 0x2f
   164ac:	strbeq	r3, [r7, #1]
   164b0:	strbeq	r2, [r7]
   164b4:	mov	r2, #5
   164b8:	ldr	r1, [pc, #972]	; 1688c <daemon@@Base+0x70c>
   164bc:	mov	r0, r7
   164c0:	bl	11ad4 <strncmp@plt>
   164c4:	subs	r8, r0, #0
   164c8:	bne	16724 <daemon@@Base+0x5a4>
   164cc:	mov	r2, r8
   164d0:	ldr	r1, [pc, #952]	; 16890 <daemon@@Base+0x710>
   164d4:	mov	r0, r7
   164d8:	bl	1187c <open64@plt>
   164dc:	subs	sl, r0, #0
   164e0:	blt	16618 <daemon@@Base+0x498>
   164e4:	cmp	r6, #0
   164e8:	movle	r9, r8
   164ec:	ble	16540 <daemon@@Base+0x3c0>
   164f0:	cmp	r6, #1
   164f4:	ldr	r9, [r5, #4]
   164f8:	beq	16540 <daemon@@Base+0x3c0>
   164fc:	ldr	r3, [r5, #12]
   16500:	cmp	r6, #2
   16504:	add	r9, r9, r3
   16508:	beq	16540 <daemon@@Base+0x3c0>
   1650c:	ldr	r3, [r5, #20]
   16510:	cmp	r6, #3
   16514:	add	r9, r9, r3
   16518:	beq	16540 <daemon@@Base+0x3c0>
   1651c:	ldr	r3, [r5, #28]
   16520:	cmp	r6, #4
   16524:	add	r9, r9, r3
   16528:	beq	16540 <daemon@@Base+0x3c0>
   1652c:	ldr	r3, [r5, #36]	; 0x24
   16530:	cmp	r6, #6
   16534:	add	r9, r9, r3
   16538:	ldreq	r3, [r5, #44]	; 0x2c
   1653c:	addeq	r9, r9, r3
   16540:	mov	r2, r6
   16544:	mov	r1, r5
   16548:	mov	r0, sl
   1654c:	bl	119b4 <writev@plt>
   16550:	cmp	r9, r0
   16554:	mov	r4, r0
   16558:	ble	167ec <daemon@@Base+0x66c>
   1655c:	cmp	r0, #0
   16560:	blt	166a4 <daemon@@Base+0x524>
   16564:	add	r3, sp, #16
   16568:	cmp	r5, r3
   1656c:	sub	r9, r9, r0
   16570:	beq	16588 <daemon@@Base+0x408>
   16574:	mov	r0, r3
   16578:	mov	r1, r5
   1657c:	lsl	r2, r6, #3
   16580:	bl	11744 <memcpy@plt>
   16584:	mov	r3, r0
   16588:	ldr	r2, [sp, #20]
   1658c:	mov	r5, r3
   16590:	cmp	r4, r2
   16594:	blt	165b0 <daemon@@Base+0x430>
   16598:	add	r5, r5, #8
   1659c:	sub	r4, r4, r2
   165a0:	ldr	r2, [r5, #4]
   165a4:	sub	r6, r6, #1
   165a8:	cmp	r2, r4
   165ac:	ble	16598 <daemon@@Base+0x418>
   165b0:	cmp	r4, #0
   165b4:	beq	16540 <daemon@@Base+0x3c0>
   165b8:	ldr	r3, [r5]
   165bc:	sub	r2, r2, r4
   165c0:	add	r4, r3, r4
   165c4:	str	r2, [r5, #4]
   165c8:	str	r4, [r5]
   165cc:	b	16540 <daemon@@Base+0x3c0>
   165d0:	ldrb	r2, [r3, #1]
   165d4:	cmp	r2, #46	; 0x2e
   165d8:	bne	165ec <daemon@@Base+0x46c>
   165dc:	ldrb	r2, [r3, #2]
   165e0:	cmp	r2, #0
   165e4:	cmpne	r2, #47	; 0x2f
   165e8:	beq	16658 <daemon@@Base+0x4d8>
   165ec:	add	r0, r3, #1
   165f0:	mov	r1, r4
   165f4:	bl	11930 <strchr@plt>
   165f8:	subs	r3, r0, #0
   165fc:	beq	164a0 <daemon@@Base+0x320>
   16600:	cmp	r7, r3
   16604:	bcs	165ec <daemon@@Base+0x46c>
   16608:	ldrb	r2, [r3, #-1]
   1660c:	cmp	r2, #47	; 0x2f
   16610:	bne	165ec <daemon@@Base+0x46c>
   16614:	b	165d0 <daemon@@Base+0x450>
   16618:	bl	11948 <__errno_location@plt>
   1661c:	ldr	r0, [r0]
   16620:	cmp	r0, #13
   16624:	cmpne	r0, #16
   16628:	beq	16768 <daemon@@Base+0x5e8>
   1662c:	bl	118b8 <strerror@plt>
   16630:	mov	r3, r7
   16634:	ldr	r2, [pc, #600]	; 16894 <daemon@@Base+0x714>
   16638:	mov	r1, #1024	; 0x400
   1663c:	str	r0, [sp]
   16640:	ldr	r0, [pc, #592]	; 16898 <daemon@@Base+0x718>
   16644:	bl	11954 <snprintf@plt>
   16648:	mov	r0, r7
   1664c:	bl	1ca50 <argp_parse@@Base+0x1150>
   16650:	ldr	r0, [pc, #576]	; 16898 <daemon@@Base+0x718>
   16654:	b	1671c <daemon@@Base+0x59c>
   16658:	ldrb	r2, [r3, #-2]
   1665c:	sub	r0, r3, #2
   16660:	b	16668 <daemon@@Base+0x4e8>
   16664:	ldrb	r2, [r0, #-1]!
   16668:	subs	r2, r2, #47	; 0x2f
   1666c:	movne	r2, #1
   16670:	cmp	r7, r0
   16674:	movhi	r2, #0
   16678:	cmp	r2, #0
   1667c:	bne	16664 <daemon@@Base+0x4e4>
   16680:	cmp	r7, r0
   16684:	bhi	164a0 <daemon@@Base+0x320>
   16688:	add	r3, r3, #2
   1668c:	sub	r1, r0, #1
   16690:	ldrb	r2, [r3], #1
   16694:	cmp	r2, #0
   16698:	strb	r2, [r1, #1]!
   1669c:	bne	16690 <daemon@@Base+0x510>
   166a0:	b	165f0 <daemon@@Base+0x470>
   166a4:	bl	11948 <__errno_location@plt>
   166a8:	ldr	r3, [r0]
   166ac:	mov	r4, r0
   166b0:	cmp	r3, #11
   166b4:	bne	16850 <daemon@@Base+0x6d0>
   166b8:	mov	r3, #0
   166bc:	cmp	r8, #0
   166c0:	str	r3, [sp, #12]
   166c4:	bne	16878 <daemon@@Base+0x6f8>
   166c8:	bl	11a08 <fork@plt>
   166cc:	cmp	r0, #0
   166d0:	beq	16744 <daemon@@Base+0x5c4>
   166d4:	blt	1680c <daemon@@Base+0x68c>
   166d8:	mov	r2, r8
   166dc:	add	r1, sp, #64	; 0x40
   166e0:	bl	11840 <waitpid@plt>
   166e4:	cmp	r0, #0
   166e8:	blt	1680c <daemon@@Base+0x68c>
   166ec:	ldr	r3, [sp, #64]	; 0x40
   166f0:	tst	r3, #127	; 0x7f
   166f4:	bne	16840 <daemon@@Base+0x6c0>
   166f8:	asr	r3, r3, #8
   166fc:	ands	r0, r3, #255	; 0xff
   16700:	strne	r0, [r4]
   16704:	bne	16810 <daemon@@Base+0x690>
   16708:	mov	r0, sl
   1670c:	bl	11af8 <close@plt>
   16710:	mov	r0, r7
   16714:	bl	1ca50 <argp_parse@@Base+0x1150>
   16718:	mov	r0, r8
   1671c:	add	sp, sp, #196	; 0xc4
   16720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16724:	mov	r3, r9
   16728:	ldr	r2, [pc, #364]	; 1689c <daemon@@Base+0x71c>
   1672c:	mov	r1, #1024	; 0x400
   16730:	ldr	r0, [pc, #352]	; 16898 <daemon@@Base+0x718>
   16734:	bl	11954 <snprintf@plt>
   16738:	ldr	r0, [pc, #344]	; 16898 <daemon@@Base+0x718>
   1673c:	add	sp, sp, #196	; 0xc4
   16740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16744:	bl	11a08 <fork@plt>
   16748:	cmn	r0, #1
   1674c:	beq	16760 <daemon@@Base+0x5e0>
   16750:	cmp	r0, #0
   16754:	beq	16770 <daemon@@Base+0x5f0>
   16758:	mov	r0, r8
   1675c:	bl	11738 <_exit@plt>
   16760:	ldr	r0, [r4]
   16764:	bl	11738 <_exit@plt>
   16768:	mov	r0, #0
   1676c:	b	1671c <daemon@@Base+0x59c>
   16770:	mov	r1, #0
   16774:	mov	r0, #14
   16778:	bl	11750 <signal@plt>
   1677c:	mov	r1, #0
   16780:	mov	r0, #15
   16784:	bl	11750 <signal@plt>
   16788:	add	r0, sp, #64	; 0x40
   1678c:	bl	119fc <sigemptyset@plt>
   16790:	mov	r2, #0
   16794:	add	r1, sp, #64	; 0x40
   16798:	mov	r0, #2
   1679c:	bl	116e4 <sigprocmask@plt>
   167a0:	mov	r0, fp
   167a4:	bl	117bc <alarm@plt>
   167a8:	add	r2, sp, #12
   167ac:	mov	r1, #2048	; 0x800
   167b0:	mov	r0, sl
   167b4:	bl	1c87c <argp_parse@@Base+0xf7c>
   167b8:	mov	r8, #1
   167bc:	b	16540 <daemon@@Base+0x3c0>
   167c0:	ldr	ip, [pc, #216]	; 168a0 <daemon@@Base+0x720>
   167c4:	ldr	r8, [pc, #204]	; 16898 <daemon@@Base+0x718>
   167c8:	ldm	ip!, {r0, r1, r2, r3}
   167cc:	stmia	r8!, {r0, r1, r2, r3}
   167d0:	ldm	ip!, {r0, r1, r2, r3}
   167d4:	stmia	r8!, {r0, r1, r2, r3}
   167d8:	ldm	ip, {r0, r1}
   167dc:	str	r0, [r8], #4
   167e0:	mov	r0, r8
   167e4:	strh	r1, [r0], #-36	; 0xffffffdc
   167e8:	b	1671c <daemon@@Base+0x59c>
   167ec:	mov	r0, r7
   167f0:	bl	1ca50 <argp_parse@@Base+0x1150>
   167f4:	mov	r0, sl
   167f8:	bl	11af8 <close@plt>
   167fc:	cmp	r8, #0
   16800:	beq	16768 <daemon@@Base+0x5e8>
   16804:	mov	r0, #0
   16808:	bl	11738 <_exit@plt>
   1680c:	ldr	r0, [r4]
   16810:	bl	118b8 <strerror@plt>
   16814:	ldr	r2, [pc, #136]	; 168a4 <daemon@@Base+0x724>
   16818:	mov	r1, #1024	; 0x400
   1681c:	mov	r3, r0
   16820:	ldr	r0, [pc, #112]	; 16898 <daemon@@Base+0x718>
   16824:	bl	11954 <snprintf@plt>
   16828:	mov	r0, sl
   1682c:	bl	11af8 <close@plt>
   16830:	mov	r0, r7
   16834:	bl	1ca50 <argp_parse@@Base+0x1150>
   16838:	ldr	r0, [pc, #88]	; 16898 <daemon@@Base+0x718>
   1683c:	b	1671c <daemon@@Base+0x59c>
   16840:	mov	r3, #4
   16844:	str	r3, [r4]
   16848:	mov	r0, r3
   1684c:	b	16810 <daemon@@Base+0x690>
   16850:	cmp	r3, #5
   16854:	cmpne	r3, #19
   16858:	beq	167ec <daemon@@Base+0x66c>
   1685c:	mov	r0, sl
   16860:	bl	11af8 <close@plt>
   16864:	cmp	r8, #0
   16868:	ldreq	r0, [r4]
   1686c:	beq	1662c <daemon@@Base+0x4ac>
   16870:	mov	r0, #1
   16874:	bl	11738 <_exit@plt>
   16878:	mov	r0, sl
   1687c:	bl	11af8 <close@plt>
   16880:	mov	r0, #1
   16884:	bl	11738 <_exit@plt>
   16888:			; <UNDEFINED> instruction: 0x000218b0
   1688c:	andeq	r1, r2, r8, lsl #18
   16890:	andeq	r0, r0, r1, lsl #16
   16894:	andeq	r1, r2, r4, lsr #18
   16898:	andeq	r3, r3, r8, lsl #12
   1689c:	andeq	r1, r2, r0, lsl r9
   168a0:	andeq	r1, r2, r0, ror #17
   168a4:	andeq	r1, r2, ip, lsr #18
   168a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168ac:	mov	r7, r3
   168b0:	ldr	sl, [r0, #12]
   168b4:	sub	sp, sp, #36	; 0x24
   168b8:	ldr	r3, [r0, #16]
   168bc:	cmp	sl, #0
   168c0:	mov	fp, r0
   168c4:	mov	r6, r2
   168c8:	str	r3, [sp, #16]
   168cc:	mov	r9, r1
   168d0:	ldr	r8, [sp, #72]	; 0x48
   168d4:	ldr	r5, [sp, #76]	; 0x4c
   168d8:	beq	16ca8 <daemon@@Base+0xb28>
   168dc:	mov	r1, #11
   168e0:	mov	r0, sl
   168e4:	bl	11930 <strchr@plt>
   168e8:	cmp	r6, #0
   168ec:	bne	16bc4 <daemon@@Base+0xa44>
   168f0:	cmp	r0, #0
   168f4:	ldr	r3, [fp, #20]
   168f8:	beq	16e00 <daemon@@Base+0xc80>
   168fc:	cmp	r3, #0
   16900:	sub	r4, r0, sl
   16904:	beq	16d98 <daemon@@Base+0xc18>
   16908:	cmp	r4, #0
   1690c:	beq	16d38 <daemon@@Base+0xbb8>
   16910:	mov	r0, sl
   16914:	mov	r1, r4
   16918:	bl	1172c <strndup@plt>
   1691c:	mov	r3, #1
   16920:	str	r3, [sp, #24]
   16924:	mov	sl, r0
   16928:	adds	r3, r0, #0
   1692c:	movne	r3, #1
   16930:	str	r3, [sp, #20]
   16934:	mov	r1, r9
   16938:	mov	r0, fp
   1693c:	bl	1c720 <argp_parse@@Base+0xe20>
   16940:	ldr	r3, [fp, #20]
   16944:	str	r0, [sp, #12]
   16948:	ldr	r0, [pc, #1272]	; 16e48 <daemon@@Base+0xcc8>
   1694c:	ldr	r2, [sp, #12]
   16950:	mov	r1, sl
   16954:	blx	r3
   16958:	subs	r3, r0, #0
   1695c:	beq	16ce8 <daemon@@Base+0xb68>
   16960:	cmp	r7, #0
   16964:	beq	16988 <daemon@@Base+0x808>
   16968:	ldr	r2, [r5, #28]
   1696c:	ldr	r1, [r5, #32]
   16970:	cmp	r2, r1
   16974:	bcs	16cf0 <daemon@@Base+0xb70>
   16978:	add	r0, r2, #1
   1697c:	mov	r1, #10
   16980:	str	r0, [r5, #28]
   16984:	strb	r1, [r2]
   16988:	ldr	r2, [sp, #24]
   1698c:	cmp	sl, r3
   16990:	movne	r2, #0
   16994:	andeq	r2, r2, #1
   16998:	cmp	r2, #0
   1699c:	beq	16c08 <daemon@@Base+0xa88>
   169a0:	ldr	r0, [r5, #28]
   169a4:	ldr	r1, [r5, #32]
   169a8:	add	r2, r0, r4
   169ac:	cmp	r1, r2
   169b0:	bcs	16c68 <daemon@@Base+0xae8>
   169b4:	mov	r1, r4
   169b8:	mov	r0, r5
   169bc:	str	r3, [sp, #24]
   169c0:	bl	1e928 <argp_parse@@Base+0x3028>
   169c4:	ldr	r3, [sp, #24]
   169c8:	cmp	r0, #0
   169cc:	bne	16c64 <daemon@@Base+0xae4>
   169d0:	ldr	r4, [r5, #28]
   169d4:	ldr	r1, [r5, #24]
   169d8:	ldr	r2, [r5, #16]
   169dc:	sub	r4, r4, r1
   169e0:	cmp	r4, r2
   169e4:	bhi	16c8c <daemon@@Base+0xb0c>
   169e8:	ldr	r2, [r5, #20]
   169ec:	ldr	r1, [r5, #4]
   169f0:	bic	r2, r2, r2, asr #31
   169f4:	cmp	r1, r2
   169f8:	bcs	16a1c <daemon@@Base+0x89c>
   169fc:	ldr	r2, [r5, #28]
   16a00:	ldr	r1, [r5, #32]
   16a04:	cmp	r2, r1
   16a08:	bcs	16d14 <daemon@@Base+0xb94>
   16a0c:	add	r0, r2, #1
   16a10:	mov	r1, #10
   16a14:	str	r0, [r5, #28]
   16a18:	strb	r1, [r2]
   16a1c:	cmp	sl, r3
   16a20:	moveq	r4, #1
   16a24:	beq	16a34 <daemon@@Base+0x8b4>
   16a28:	mov	r0, r3
   16a2c:	bl	1ca50 <argp_parse@@Base+0x1150>
   16a30:	mov	r4, #1
   16a34:	ldr	r3, [sp, #20]
   16a38:	cmp	r3, #0
   16a3c:	beq	16a54 <daemon@@Base+0x8d4>
   16a40:	ldr	r3, [fp, #20]
   16a44:	cmp	r3, #0
   16a48:	beq	16b38 <daemon@@Base+0x9b8>
   16a4c:	mov	r0, sl
   16a50:	bl	1ca50 <argp_parse@@Base+0x1150>
   16a54:	cmp	r6, #0
   16a58:	beq	16b38 <daemon@@Base+0x9b8>
   16a5c:	ldr	r3, [fp, #20]
   16a60:	cmp	r3, #0
   16a64:	beq	16b38 <daemon@@Base+0x9b8>
   16a68:	ldr	r2, [sp, #12]
   16a6c:	mov	r1, #0
   16a70:	ldr	r0, [pc, #980]	; 16e4c <daemon@@Base+0xccc>
   16a74:	blx	r3
   16a78:	subs	sl, r0, #0
   16a7c:	beq	16b38 <daemon@@Base+0x9b8>
   16a80:	orrs	r3, r7, r4
   16a84:	beq	16aa8 <daemon@@Base+0x928>
   16a88:	ldr	r3, [r5, #28]
   16a8c:	ldr	r2, [r5, #32]
   16a90:	cmp	r3, r2
   16a94:	bcs	16dd0 <daemon@@Base+0xc50>
   16a98:	add	r1, r3, #1
   16a9c:	mov	r2, #10
   16aa0:	str	r1, [r5, #28]
   16aa4:	strb	r2, [r3]
   16aa8:	mov	r0, sl
   16aac:	bl	11918 <strlen@plt>
   16ab0:	subs	r4, r0, #0
   16ab4:	beq	16ae0 <daemon@@Base+0x960>
   16ab8:	ldr	r0, [r5, #28]
   16abc:	ldr	r2, [r5, #32]
   16ac0:	add	r3, r0, r4
   16ac4:	cmp	r2, r3
   16ac8:	bcs	16d48 <daemon@@Base+0xbc8>
   16acc:	mov	r1, r4
   16ad0:	mov	r0, r5
   16ad4:	bl	1e928 <argp_parse@@Base+0x3028>
   16ad8:	cmp	r0, #0
   16adc:	bne	16d44 <daemon@@Base+0xbc4>
   16ae0:	mov	r0, sl
   16ae4:	bl	1ca50 <argp_parse@@Base+0x1150>
   16ae8:	ldr	r3, [r5, #28]
   16aec:	ldr	r1, [r5, #24]
   16af0:	ldr	r2, [r5, #16]
   16af4:	sub	r3, r3, r1
   16af8:	cmp	r3, r2
   16afc:	bhi	16d64 <daemon@@Base+0xbe4>
   16b00:	ldr	r3, [r5, #20]
   16b04:	ldr	r2, [r5, #4]
   16b08:	bic	r3, r3, r3, asr #31
   16b0c:	cmp	r2, r3
   16b10:	bcs	16ca0 <daemon@@Base+0xb20>
   16b14:	ldr	r3, [r5, #28]
   16b18:	ldr	r2, [r5, #32]
   16b1c:	cmp	r3, r2
   16b20:	bcs	16db4 <daemon@@Base+0xc34>
   16b24:	mov	r4, #1
   16b28:	add	r2, r3, r4
   16b2c:	str	r2, [r5, #28]
   16b30:	mov	r2, #10
   16b34:	strb	r2, [r3]
   16b38:	ldr	fp, [sp, #16]
   16b3c:	cmp	fp, #0
   16b40:	beq	16bb8 <daemon@@Base+0xa38>
   16b44:	ldr	r3, [fp]
   16b48:	cmp	r3, #0
   16b4c:	beq	16bb8 <daemon@@Base+0xa38>
   16b50:	eor	r2, r4, #1
   16b54:	and	r2, r2, #1
   16b58:	clz	sl, r8
   16b5c:	lsr	sl, sl, #5
   16b60:	orrs	r2, sl, r2
   16b64:	bne	16b80 <daemon@@Base+0xa00>
   16b68:	b	16dec <daemon@@Base+0xc6c>
   16b6c:	cmp	r4, #0
   16b70:	movne	r2, sl
   16b74:	orreq	r2, sl, #1
   16b78:	cmp	r2, #0
   16b7c:	beq	16bb8 <daemon@@Base+0xa38>
   16b80:	orrs	r2, r7, r4
   16b84:	mov	r0, r3
   16b88:	str	r5, [sp, #4]
   16b8c:	movne	r3, #1
   16b90:	moveq	r3, #0
   16b94:	str	r8, [sp]
   16b98:	mov	r2, r6
   16b9c:	mov	r1, r9
   16ba0:	bl	168a8 <daemon@@Base+0x728>
   16ba4:	ldr	r3, [fp, #16]
   16ba8:	add	fp, fp, #16
   16bac:	cmp	r3, #0
   16bb0:	orr	r4, r4, r0
   16bb4:	bne	16b6c <daemon@@Base+0x9ec>
   16bb8:	mov	r0, r4
   16bbc:	add	sp, sp, #36	; 0x24
   16bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bc4:	cmp	r0, #0
   16bc8:	addne	sl, r0, #1
   16bcc:	beq	16d90 <daemon@@Base+0xc10>
   16bd0:	ldr	r3, [fp, #20]
   16bd4:	cmp	r3, #0
   16bd8:	beq	16d70 <daemon@@Base+0xbf0>
   16bdc:	mov	r3, #0
   16be0:	mov	r1, r9
   16be4:	mov	r0, fp
   16be8:	mov	r4, r3
   16bec:	str	r3, [sp, #20]
   16bf0:	bl	1c720 <argp_parse@@Base+0xe20>
   16bf4:	str	r4, [sp, #24]
   16bf8:	ldr	r3, [fp, #20]
   16bfc:	str	r0, [sp, #12]
   16c00:	ldr	r0, [pc, #584]	; 16e50 <daemon@@Base+0xcd0>
   16c04:	b	1694c <daemon@@Base+0x7cc>
   16c08:	mov	r0, r3
   16c0c:	str	r3, [sp, #24]
   16c10:	bl	11918 <strlen@plt>
   16c14:	ldr	r3, [sp, #24]
   16c18:	subs	r4, r0, #0
   16c1c:	beq	169d0 <daemon@@Base+0x850>
   16c20:	ldr	r0, [r5, #28]
   16c24:	ldr	r1, [r5, #32]
   16c28:	add	r2, r0, r4
   16c2c:	cmp	r1, r2
   16c30:	bcs	16c54 <daemon@@Base+0xad4>
   16c34:	mov	r1, r4
   16c38:	mov	r0, r5
   16c3c:	str	r3, [sp, #24]
   16c40:	bl	1e928 <argp_parse@@Base+0x3028>
   16c44:	ldr	r3, [sp, #24]
   16c48:	cmp	r0, #0
   16c4c:	beq	169d0 <daemon@@Base+0x850>
   16c50:	ldr	r0, [r5, #28]
   16c54:	mov	r2, r4
   16c58:	mov	r1, r3
   16c5c:	str	r3, [sp, #24]
   16c60:	b	16c74 <daemon@@Base+0xaf4>
   16c64:	ldr	r0, [r5, #28]
   16c68:	mov	r2, r4
   16c6c:	mov	r1, sl
   16c70:	str	r3, [sp, #24]
   16c74:	bl	11744 <memcpy@plt>
   16c78:	ldr	r2, [r5, #28]
   16c7c:	ldr	r3, [sp, #24]
   16c80:	add	r4, r2, r4
   16c84:	str	r4, [r5, #28]
   16c88:	b	169d4 <daemon@@Base+0x854>
   16c8c:	mov	r0, r5
   16c90:	str	r3, [sp, #24]
   16c94:	bl	1e37c <argp_parse@@Base+0x2a7c>
   16c98:	ldr	r3, [sp, #24]
   16c9c:	b	169e8 <daemon@@Base+0x868>
   16ca0:	mov	r4, #1
   16ca4:	b	16b38 <daemon@@Base+0x9b8>
   16ca8:	ldr	r4, [r0, #20]
   16cac:	cmp	r4, #0
   16cb0:	beq	16df8 <daemon@@Base+0xc78>
   16cb4:	bl	1c720 <argp_parse@@Base+0xe20>
   16cb8:	cmp	r6, #0
   16cbc:	ldr	r3, [fp, #20]
   16cc0:	strne	sl, [sp, #20]
   16cc4:	strne	sl, [sp, #24]
   16cc8:	movne	r4, sl
   16ccc:	streq	r6, [sp, #20]
   16cd0:	streq	r6, [sp, #24]
   16cd4:	moveq	r4, r6
   16cd8:	str	r0, [sp, #12]
   16cdc:	ldrne	r0, [pc, #364]	; 16e50 <daemon@@Base+0xcd0>
   16ce0:	ldreq	r0, [pc, #352]	; 16e48 <daemon@@Base+0xcc8>
   16ce4:	b	1694c <daemon@@Base+0x7cc>
   16ce8:	mov	r4, r3
   16cec:	b	16a34 <daemon@@Base+0x8b4>
   16cf0:	mov	r1, #1
   16cf4:	mov	r0, r5
   16cf8:	str	r3, [sp, #28]
   16cfc:	bl	1e928 <argp_parse@@Base+0x3028>
   16d00:	ldr	r3, [sp, #28]
   16d04:	cmp	r0, #0
   16d08:	beq	16988 <daemon@@Base+0x808>
   16d0c:	ldr	r2, [r5, #28]
   16d10:	b	16978 <daemon@@Base+0x7f8>
   16d14:	mov	r1, #1
   16d18:	mov	r0, r5
   16d1c:	str	r3, [sp, #24]
   16d20:	bl	1e928 <argp_parse@@Base+0x3028>
   16d24:	ldr	r3, [sp, #24]
   16d28:	cmp	r0, #0
   16d2c:	beq	16a1c <daemon@@Base+0x89c>
   16d30:	ldr	r2, [r5, #28]
   16d34:	b	16a0c <daemon@@Base+0x88c>
   16d38:	str	r4, [sp, #20]
   16d3c:	str	r4, [sp, #24]
   16d40:	b	16934 <daemon@@Base+0x7b4>
   16d44:	ldr	r0, [r5, #28]
   16d48:	mov	r2, r4
   16d4c:	mov	r1, sl
   16d50:	bl	11744 <memcpy@plt>
   16d54:	ldr	r3, [r5, #28]
   16d58:	add	r4, r3, r4
   16d5c:	str	r4, [r5, #28]
   16d60:	b	16ae0 <daemon@@Base+0x960>
   16d64:	mov	r0, r5
   16d68:	bl	1e37c <argp_parse@@Base+0x2a7c>
   16d6c:	b	16b00 <daemon@@Base+0x980>
   16d70:	cmp	sl, #0
   16d74:	beq	16df4 <daemon@@Base+0xc74>
   16d78:	str	r3, [sp, #20]
   16d7c:	str	r3, [sp, #24]
   16d80:	mov	r4, r3
   16d84:	str	r3, [sp, #12]
   16d88:	mov	r3, sl
   16d8c:	b	16960 <daemon@@Base+0x7e0>
   16d90:	mov	sl, r0
   16d94:	b	16bd0 <daemon@@Base+0xa50>
   16d98:	adds	r3, r4, #0
   16d9c:	movne	r3, #1
   16da0:	str	r3, [sp, #24]
   16da4:	str	r3, [sp, #20]
   16da8:	str	r6, [sp, #12]
   16dac:	mov	r3, sl
   16db0:	b	16960 <daemon@@Base+0x7e0>
   16db4:	mov	r1, #1
   16db8:	mov	r0, r5
   16dbc:	bl	1e928 <argp_parse@@Base+0x3028>
   16dc0:	cmp	r0, #0
   16dc4:	beq	16ca0 <daemon@@Base+0xb20>
   16dc8:	ldr	r3, [r5, #28]
   16dcc:	b	16b24 <daemon@@Base+0x9a4>
   16dd0:	mov	r1, #1
   16dd4:	mov	r0, r5
   16dd8:	bl	1e928 <argp_parse@@Base+0x3028>
   16ddc:	cmp	r0, #0
   16de0:	beq	16aa8 <daemon@@Base+0x928>
   16de4:	ldr	r3, [r5, #28]
   16de8:	b	16a98 <daemon@@Base+0x918>
   16dec:	mov	r4, #1
   16df0:	b	16bb8 <daemon@@Base+0xa38>
   16df4:	mov	r4, sl
   16df8:	str	r4, [sp, #12]
   16dfc:	b	16a54 <daemon@@Base+0x8d4>
   16e00:	cmp	r3, #0
   16e04:	beq	16e30 <daemon@@Base+0xcb0>
   16e08:	mov	r1, r9
   16e0c:	mov	r0, fp
   16e10:	bl	1c720 <argp_parse@@Base+0xe20>
   16e14:	mov	r4, r6
   16e18:	ldr	r3, [fp, #20]
   16e1c:	str	r6, [sp, #20]
   16e20:	str	r6, [sp, #24]
   16e24:	str	r0, [sp, #12]
   16e28:	ldr	r0, [pc, #24]	; 16e48 <daemon@@Base+0xcc8>
   16e2c:	b	1694c <daemon@@Base+0x7cc>
   16e30:	mov	r3, sl
   16e34:	str	r6, [sp, #20]
   16e38:	str	r6, [sp, #24]
   16e3c:	mov	r4, r6
   16e40:	str	r6, [sp, #12]
   16e44:	b	16960 <daemon@@Base+0x7e0>
   16e48:	andeq	r0, r0, #1
   16e4c:	andeq	r0, r0, #4
   16e50:	andeq	r0, r0, #2
   16e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e58:	sub	sp, sp, #52	; 0x34
   16e5c:	mov	r3, r0
   16e60:	str	r0, [sp, #20]
   16e64:	mov	r0, #16
   16e68:	ldr	r6, [r3, #16]
   16e6c:	ldr	r4, [r3]
   16e70:	str	r1, [sp, #28]
   16e74:	bl	1e278 <argp_parse@@Base+0x2978>
   16e78:	subs	r3, r0, #0
   16e7c:	str	r3, [sp, #16]
   16e80:	beq	17470 <daemon@@Base+0x12f0>
   16e84:	mov	r2, r3
   16e88:	cmp	r4, #0
   16e8c:	mov	r3, #0
   16e90:	str	r3, [r2, #4]
   16e94:	str	r3, [r2, #12]
   16e98:	beq	170ac <daemon@@Base+0xf2c>
   16e9c:	ldr	fp, [r4, #12]
   16ea0:	ands	fp, fp, #4
   16ea4:	bne	17484 <daemon@@Base+0x1304>
   16ea8:	add	r5, r4, #24
   16eac:	mov	r7, r4
   16eb0:	mov	r9, fp
   16eb4:	mov	sl, fp
   16eb8:	mov	r4, r2
   16ebc:	b	16f00 <daemon@@Base+0xd80>
   16ec0:	ldr	r3, [r5, #-12]
   16ec4:	tst	r3, #4
   16ec8:	addeq	r9, r9, #1
   16ecc:	streq	r9, [r4, #4]
   16ed0:	tst	r3, #8
   16ed4:	bne	16efc <daemon@@Base+0xd7c>
   16ed8:	sub	r3, r8, #1
   16edc:	cmp	r3, #254	; 0xfe
   16ee0:	bhi	16efc <daemon@@Base+0xd7c>
   16ee4:	bl	118f4 <__ctype_b_loc@plt>
   16ee8:	lsl	r8, r8, #1
   16eec:	ldr	r3, [r0]
   16ef0:	ldrh	r3, [r3, r8]
   16ef4:	tst	r3, #16384	; 0x4000
   16ef8:	addne	sl, sl, #1
   16efc:	add	r5, r5, #24
   16f00:	ldr	r8, [r5, #-20]	; 0xffffffec
   16f04:	cmp	r8, #0
   16f08:	bne	16ec0 <daemon@@Base+0xd40>
   16f0c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16f10:	cmp	r3, #0
   16f14:	bne	16ec0 <daemon@@Base+0xd40>
   16f18:	ldr	r3, [r5, #-8]
   16f1c:	cmp	r3, #0
   16f20:	bne	16ec0 <daemon@@Base+0xd40>
   16f24:	ldr	r3, [r5, #-4]
   16f28:	cmp	r3, #0
   16f2c:	bne	16ec0 <daemon@@Base+0xd40>
   16f30:	rsb	r9, r9, r9, lsl #3
   16f34:	mov	r4, r7
   16f38:	lsl	r0, r9, #2
   16f3c:	mov	r7, r3
   16f40:	bl	1e278 <argp_parse@@Base+0x2978>
   16f44:	ldr	r5, [sp, #16]
   16f48:	str	r0, [r5]
   16f4c:	add	r0, sl, #1
   16f50:	bl	1e278 <argp_parse@@Base+0x2978>
   16f54:	ldr	r8, [r5]
   16f58:	mov	r3, r5
   16f5c:	cmp	r0, #0
   16f60:	cmpne	r8, #0
   16f64:	mov	sl, r0
   16f68:	str	r0, [r3, #8]
   16f6c:	beq	1752c <daemon@@Base+0x13ac>
   16f70:	ldr	r2, [sp, #16]
   16f74:	ldr	r3, [pc, #1476]	; 17540 <daemon@@Base+0x13c0>
   16f78:	ldr	r2, [r2, #4]
   16f7c:	cmp	r2, r3
   16f80:	bhi	17518 <daemon@@Base+0x1398>
   16f84:	add	r8, r8, #28
   16f88:	mov	r9, sl
   16f8c:	mov	r2, fp
   16f90:	ldr	r3, [r4, #4]
   16f94:	mov	fp, sl
   16f98:	mov	sl, r8
   16f9c:	ldr	r8, [sp, #28]
   16fa0:	str	r6, [sp, #4]
   16fa4:	cmp	r3, #0
   16fa8:	bne	16fb8 <daemon@@Base+0xe38>
   16fac:	ldr	r0, [r4]
   16fb0:	cmp	r0, #0
   16fb4:	beq	174d0 <daemon@@Base+0x1350>
   16fb8:	str	r7, [sl, #-24]	; 0xffffffe8
   16fbc:	ldr	r5, [r4, #20]
   16fc0:	str	r4, [sl, #-28]	; 0xffffffe4
   16fc4:	cmp	r5, #0
   16fc8:	str	fp, [sl, #-20]	; 0xffffffec
   16fcc:	bne	16fe4 <daemon@@Base+0xe64>
   16fd0:	ldr	r0, [r4]
   16fd4:	cmp	r0, #0
   16fd8:	cmpeq	r3, #0
   16fdc:	movne	r5, r2
   16fe0:	beq	174f4 <daemon@@Base+0x1374>
   16fe4:	ldr	r2, [sp, #20]
   16fe8:	mov	r3, r7
   16fec:	str	r5, [sl, #-16]
   16ff0:	str	r8, [sl, #-12]
   16ff4:	str	r2, [sl, #-8]
   16ff8:	add	r3, r3, #1
   16ffc:	str	r3, [sl, #-24]	; 0xffffffe8
   17000:	ldr	r3, [r4, #12]
   17004:	tst	r3, #8
   17008:	bne	17074 <daemon@@Base+0xef4>
   1700c:	ldr	r6, [r4, #4]
   17010:	sub	r2, r6, #1
   17014:	cmp	r2, #254	; 0xfe
   17018:	bhi	17074 <daemon@@Base+0xef4>
   1701c:	bl	118f4 <__ctype_b_loc@plt>
   17020:	lsl	r2, r6, #1
   17024:	ldr	r0, [r0]
   17028:	ldrh	r2, [r0, r2]
   1702c:	tst	r2, #16384	; 0x4000
   17030:	beq	17074 <daemon@@Base+0xef4>
   17034:	cmp	r9, fp
   17038:	uxtb	r0, r6
   1703c:	bcs	1706c <daemon@@Base+0xeec>
   17040:	ldrb	r3, [r9]
   17044:	cmp	r3, r0
   17048:	movne	r3, r9
   1704c:	subne	ip, fp, #1
   17050:	bne	17064 <daemon@@Base+0xee4>
   17054:	b	17074 <daemon@@Base+0xef4>
   17058:	ldrb	r2, [r3, #1]!
   1705c:	cmp	r2, r0
   17060:	beq	17074 <daemon@@Base+0xef4>
   17064:	cmp	ip, r3
   17068:	bne	17058 <daemon@@Base+0xed8>
   1706c:	strb	r0, [fp]
   17070:	add	fp, fp, #1
   17074:	add	r4, r4, #24
   17078:	ldr	r3, [r4, #4]
   1707c:	cmp	r3, #0
   17080:	bne	17090 <daemon@@Base+0xf10>
   17084:	ldr	r2, [r4]
   17088:	cmp	r2, #0
   1708c:	beq	174ac <daemon@@Base+0x132c>
   17090:	ldr	r2, [r4, #12]
   17094:	tst	r2, #4
   17098:	beq	174c4 <daemon@@Base+0x1344>
   1709c:	ldr	r3, [sl, #-24]	; 0xffffffe8
   170a0:	b	16ff8 <daemon@@Base+0xe78>
   170a4:	ldr	r6, [sp, #4]
   170a8:	strb	r3, [fp]
   170ac:	cmp	r6, #0
   170b0:	beq	171ec <daemon@@Base+0x106c>
   170b4:	ldr	r0, [r6]
   170b8:	cmp	r0, #0
   170bc:	beq	171ec <daemon@@Base+0x106c>
   170c0:	add	r3, r6, #16
   170c4:	str	r3, [sp, #8]
   170c8:	ldr	r3, [sp, #16]
   170cc:	add	r3, r3, #12
   170d0:	str	r3, [sp, #44]	; 0x2c
   170d4:	ldr	r3, [sp, #8]
   170d8:	ldr	r5, [r3, #-4]
   170dc:	ldr	r6, [r3, #-8]
   170e0:	cmp	r5, #0
   170e4:	bne	170f0 <daemon@@Base+0xf70>
   170e8:	cmp	r6, #0
   170ec:	beq	17444 <daemon@@Base+0x12c4>
   170f0:	ldr	r3, [sp, #20]
   170f4:	mov	r0, #28
   170f8:	ldr	r2, [r3, #16]
   170fc:	ldr	r3, [sp, #8]
   17100:	sub	r3, r3, #16
   17104:	sub	r3, r3, r2
   17108:	asr	r4, r3, #4
   1710c:	bl	1e278 <argp_parse@@Base+0x2978>
   17110:	subs	r1, r0, #0
   17114:	beq	17158 <daemon@@Base+0xfd8>
   17118:	ldr	r3, [sp, #28]
   1711c:	ldr	r0, [sp, #16]
   17120:	cmp	r3, #0
   17124:	ldr	r2, [sp, #20]
   17128:	str	r3, [r1, #12]
   1712c:	ldrne	r3, [r3, #20]
   17130:	str	r2, [r1, #16]
   17134:	ldr	r2, [r0, #12]
   17138:	addne	r3, r3, #1
   1713c:	moveq	r3, #0
   17140:	str	r5, [r1, #8]
   17144:	str	r6, [r1]
   17148:	str	r4, [r1, #4]
   1714c:	str	r3, [r1, #20]
   17150:	str	r2, [r1, #24]
   17154:	str	r1, [r0, #12]
   17158:	ldr	r3, [sp, #8]
   1715c:	ldr	r0, [r3, #-16]
   17160:	bl	16e54 <daemon@@Base+0xcd4>
   17164:	ldr	r3, [sp, #16]
   17168:	ldr	r2, [r3, #12]
   1716c:	cmp	r2, #0
   17170:	mov	sl, r0
   17174:	bne	17180 <daemon@@Base+0x1000>
   17178:	b	1744c <daemon@@Base+0x12cc>
   1717c:	mov	r2, r3
   17180:	ldr	r3, [r2, #24]
   17184:	cmp	r3, #0
   17188:	bne	1717c <daemon@@Base+0xffc>
   1718c:	add	r2, r2, #24
   17190:	ldr	r3, [sl, #4]
   17194:	ldr	r1, [sl, #12]
   17198:	cmp	r3, #0
   1719c:	str	r1, [r2]
   171a0:	mov	r2, #0
   171a4:	str	r2, [sl, #12]
   171a8:	beq	171d0 <daemon@@Base+0x1050>
   171ac:	ldr	ip, [sp, #16]
   171b0:	ldr	r2, [ip, #4]
   171b4:	cmp	r2, #0
   171b8:	bne	171f8 <daemon@@Base+0x1078>
   171bc:	ldr	r0, [sl]
   171c0:	ldr	r1, [sl, #8]
   171c4:	stm	ip, {r0, r3}
   171c8:	str	r1, [ip, #8]
   171cc:	str	r2, [sl, #4]
   171d0:	mov	r0, sl
   171d4:	bl	1ca50 <argp_parse@@Base+0x1150>
   171d8:	ldr	r3, [sp, #8]
   171dc:	ldr	r0, [r3], #16
   171e0:	cmp	r0, #0
   171e4:	str	r3, [sp, #8]
   171e8:	bne	170d8 <daemon@@Base+0xf58>
   171ec:	ldr	r0, [sp, #16]
   171f0:	add	sp, sp, #52	; 0x34
   171f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171f8:	add	r3, r3, r2
   171fc:	str	r3, [sp, #32]
   17200:	rsb	r0, r3, r3, lsl #3
   17204:	lsl	r0, r0, #2
   17208:	bl	1e278 <argp_parse@@Base+0x2978>
   1720c:	ldr	r3, [sp, #16]
   17210:	mov	r4, r0
   17214:	str	r0, [sp, #24]
   17218:	ldr	r0, [r3, #8]
   1721c:	bl	11918 <strlen@plt>
   17220:	mov	r5, r0
   17224:	ldr	r0, [sl, #8]
   17228:	bl	11918 <strlen@plt>
   1722c:	add	r0, r5, r0
   17230:	add	r0, r0, #1
   17234:	bl	1e278 <argp_parse@@Base+0x2978>
   17238:	cmp	r4, #0
   1723c:	cmpne	r0, #0
   17240:	mov	r7, r0
   17244:	beq	1745c <daemon@@Base+0x12dc>
   17248:	ldr	r3, [sp, #32]
   1724c:	ldr	r2, [pc, #748]	; 17540 <daemon@@Base+0x13c0>
   17250:	cmp	r3, r2
   17254:	bhi	17498 <daemon@@Base+0x1318>
   17258:	ldr	r6, [sp, #16]
   1725c:	ldr	r8, [sp, #24]
   17260:	ldm	r6, {r3, r4}
   17264:	mov	r0, r8
   17268:	rsb	r9, r4, r4, lsl #3
   1726c:	mov	r1, r3
   17270:	lsl	r9, r9, #2
   17274:	mov	r2, r9
   17278:	str	r3, [sp, #36]	; 0x24
   1727c:	bl	118dc <mempcpy@plt>
   17280:	ldr	r3, [sl, #4]
   17284:	ldr	r1, [sl]
   17288:	str	r3, [sp, #4]
   1728c:	rsb	r2, r3, r3, lsl #3
   17290:	lsl	r2, r2, #2
   17294:	bl	11744 <memcpy@plt>
   17298:	ldr	r6, [r6, #8]
   1729c:	mov	r2, r5
   172a0:	mov	r1, r6
   172a4:	mov	r0, r7
   172a8:	bl	11744 <memcpy@plt>
   172ac:	cmp	r4, #0
   172b0:	beq	17454 <daemon@@Base+0x12d4>
   172b4:	mov	r2, r8
   172b8:	ldr	r3, [r2, #8]
   172bc:	subs	r4, r4, #1
   172c0:	sub	r3, r3, r6
   172c4:	add	r3, r7, r3
   172c8:	str	r3, [r2, #8]
   172cc:	add	r2, r2, #28
   172d0:	bne	172b8 <daemon@@Base+0x1138>
   172d4:	ldr	r3, [sp, #24]
   172d8:	add	r1, r3, r9
   172dc:	ldr	r3, [sp, #4]
   172e0:	ldr	r9, [sl, #8]
   172e4:	cmp	r3, #0
   172e8:	add	r3, r7, r5
   172ec:	str	r3, [sp, #12]
   172f0:	beq	173dc <daemon@@Base+0x125c>
   172f4:	add	fp, r1, #28
   172f8:	sub	r8, r3, #1
   172fc:	str	sl, [sp, #40]	; 0x28
   17300:	mov	r6, r3
   17304:	mov	sl, r9
   17308:	mov	r9, fp
   1730c:	mov	fp, r8
   17310:	ldr	r5, [r9, #-24]	; 0xffffffe8
   17314:	str	r6, [r9, #-20]	; 0xffffffec
   17318:	cmp	r5, #0
   1731c:	ldr	r4, [r9, #-28]	; 0xffffffe4
   17320:	bne	17334 <daemon@@Base+0x11b4>
   17324:	b	173c0 <daemon@@Base+0x1240>
   17328:	subs	r5, r5, #1
   1732c:	add	r4, r4, #24
   17330:	beq	173c0 <daemon@@Base+0x1240>
   17334:	ldr	r3, [r4, #12]
   17338:	tst	r3, #8
   1733c:	bne	17328 <daemon@@Base+0x11a8>
   17340:	ldr	r8, [r4, #4]
   17344:	sub	r3, r8, #1
   17348:	cmp	r3, #254	; 0xfe
   1734c:	bhi	17328 <daemon@@Base+0x11a8>
   17350:	bl	118f4 <__ctype_b_loc@plt>
   17354:	lsl	r3, r8, #1
   17358:	ldr	r2, [r0]
   1735c:	ldrh	r3, [r2, r3]
   17360:	tst	r3, #16384	; 0x4000
   17364:	beq	17328 <daemon@@Base+0x11a8>
   17368:	ldrb	r1, [sl]
   1736c:	cmp	r1, r8
   17370:	bne	17328 <daemon@@Base+0x11a8>
   17374:	ldr	r3, [sp, #12]
   17378:	cmp	r7, r3
   1737c:	bcs	173a8 <daemon@@Base+0x1228>
   17380:	ldrb	r3, [r7]
   17384:	cmp	r3, r1
   17388:	movne	r3, r7
   1738c:	bne	173a0 <daemon@@Base+0x1220>
   17390:	b	173b0 <daemon@@Base+0x1230>
   17394:	ldrb	r2, [r3, #1]!
   17398:	cmp	r2, r1
   1739c:	beq	173b0 <daemon@@Base+0x1230>
   173a0:	cmp	fp, r3
   173a4:	bne	17394 <daemon@@Base+0x1214>
   173a8:	strb	r1, [r6]
   173ac:	add	r6, r6, #1
   173b0:	subs	r5, r5, #1
   173b4:	add	sl, sl, #1
   173b8:	add	r4, r4, #24
   173bc:	bne	17334 <daemon@@Base+0x11b4>
   173c0:	ldr	r3, [sp, #4]
   173c4:	add	r9, r9, #28
   173c8:	subs	r3, r3, #1
   173cc:	str	r3, [sp, #4]
   173d0:	bne	17310 <daemon@@Base+0x1190>
   173d4:	ldr	sl, [sp, #40]	; 0x28
   173d8:	mov	r3, r6
   173dc:	mov	r2, #0
   173e0:	strb	r2, [r3]
   173e4:	ldr	r0, [sp, #36]	; 0x24
   173e8:	bl	1ca50 <argp_parse@@Base+0x1150>
   173ec:	ldr	r4, [sp, #16]
   173f0:	ldr	r0, [r4, #8]
   173f4:	bl	1ca50 <argp_parse@@Base+0x1150>
   173f8:	ldr	r2, [sp, #24]
   173fc:	ldr	r0, [sl, #12]
   17400:	str	r2, [r4]
   17404:	ldr	r2, [sp, #32]
   17408:	cmp	r0, #0
   1740c:	stmib	r4, {r2, r7}
   17410:	beq	17424 <daemon@@Base+0x12a4>
   17414:	ldr	r4, [r0, #24]
   17418:	bl	1ca50 <argp_parse@@Base+0x1150>
   1741c:	subs	r0, r4, #0
   17420:	bne	17414 <daemon@@Base+0x1294>
   17424:	ldr	r3, [sl, #4]
   17428:	cmp	r3, #0
   1742c:	beq	171d0 <daemon@@Base+0x1050>
   17430:	ldr	r0, [sl]
   17434:	bl	1ca50 <argp_parse@@Base+0x1150>
   17438:	ldr	r0, [sl, #8]
   1743c:	bl	1ca50 <argp_parse@@Base+0x1150>
   17440:	b	171d0 <daemon@@Base+0x1050>
   17444:	ldr	r1, [sp, #28]
   17448:	b	17160 <daemon@@Base+0xfe0>
   1744c:	ldr	r2, [sp, #44]	; 0x2c
   17450:	b	17190 <daemon@@Base+0x1010>
   17454:	ldr	r1, [sp, #24]
   17458:	b	172dc <daemon@@Base+0x115c>
   1745c:	ldr	r3, [pc, #224]	; 17544 <daemon@@Base+0x13c4>
   17460:	ldr	r2, [pc, #224]	; 17548 <daemon@@Base+0x13c8>
   17464:	ldr	r1, [pc, #224]	; 1754c <daemon@@Base+0x13cc>
   17468:	ldr	r0, [pc, #224]	; 17550 <daemon@@Base+0x13d0>
   1746c:	bl	11b10 <__assert_fail@plt>
   17470:	ldr	r3, [pc, #220]	; 17554 <daemon@@Base+0x13d4>
   17474:	ldr	r2, [pc, #220]	; 17558 <daemon@@Base+0x13d8>
   17478:	ldr	r1, [pc, #204]	; 1754c <daemon@@Base+0x13cc>
   1747c:	ldr	r0, [pc, #216]	; 1755c <daemon@@Base+0x13dc>
   17480:	bl	11b10 <__assert_fail@plt>
   17484:	ldr	r3, [pc, #200]	; 17554 <daemon@@Base+0x13d4>
   17488:	mov	r2, #460	; 0x1cc
   1748c:	ldr	r1, [pc, #184]	; 1754c <daemon@@Base+0x13cc>
   17490:	ldr	r0, [pc, #200]	; 17560 <daemon@@Base+0x13e0>
   17494:	bl	11b10 <__assert_fail@plt>
   17498:	ldr	r3, [pc, #164]	; 17544 <daemon@@Base+0x13c4>
   1749c:	mov	r2, #972	; 0x3cc
   174a0:	ldr	r1, [pc, #164]	; 1754c <daemon@@Base+0x13cc>
   174a4:	ldr	r0, [pc, #184]	; 17564 <daemon@@Base+0x13e4>
   174a8:	bl	11b10 <__assert_fail@plt>
   174ac:	ldr	r2, [r4, #16]
   174b0:	cmp	r2, #0
   174b4:	bne	17090 <daemon@@Base+0xf10>
   174b8:	ldr	r2, [r4, #20]
   174bc:	cmp	r2, #0
   174c0:	bne	17090 <daemon@@Base+0xf10>
   174c4:	add	sl, sl, #28
   174c8:	mov	r2, r5
   174cc:	b	16fa4 <daemon@@Base+0xe24>
   174d0:	ldr	r0, [r4, #16]
   174d4:	cmp	r0, #0
   174d8:	beq	174fc <daemon@@Base+0x137c>
   174dc:	str	r3, [sl, #-24]	; 0xffffffe8
   174e0:	ldr	r5, [r4, #20]
   174e4:	str	r4, [sl, #-28]	; 0xffffffe4
   174e8:	cmp	r5, #0
   174ec:	str	fp, [sl, #-20]	; 0xffffffec
   174f0:	bne	16fe4 <daemon@@Base+0xe64>
   174f4:	add	r5, r2, #1
   174f8:	b	16fe4 <daemon@@Base+0xe64>
   174fc:	ldr	r5, [r4, #20]
   17500:	cmp	r5, #0
   17504:	beq	170a4 <daemon@@Base+0xf24>
   17508:	str	r4, [sl, #-28]	; 0xffffffe4
   1750c:	str	r3, [sl, #-24]	; 0xffffffe8
   17510:	str	fp, [sl, #-20]	; 0xffffffec
   17514:	b	16fe4 <daemon@@Base+0xe64>
   17518:	ldr	r3, [pc, #52]	; 17554 <daemon@@Base+0x13d4>
   1751c:	mov	r2, #476	; 0x1dc
   17520:	ldr	r1, [pc, #36]	; 1754c <daemon@@Base+0x13cc>
   17524:	ldr	r0, [pc, #60]	; 17568 <daemon@@Base+0x13e8>
   17528:	bl	11b10 <__assert_fail@plt>
   1752c:	ldr	r3, [pc, #32]	; 17554 <daemon@@Base+0x13d4>
   17530:	ldr	r2, [pc, #52]	; 1756c <daemon@@Base+0x13ec>
   17534:	ldr	r1, [pc, #16]	; 1754c <daemon@@Base+0x13cc>
   17538:	ldr	r0, [pc, #48]	; 17570 <daemon@@Base+0x13f0>
   1753c:	bl	11b10 <__assert_fail@plt>
   17540:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   17544:	andeq	r1, r2, r4, asr #18
   17548:	andeq	r0, r0, sl, asr #7
   1754c:	andeq	r1, r2, r0, ror #19
   17550:	andeq	r1, r2, r0, ror #20
   17554:	andeq	r1, r2, r8, lsr r9
   17558:	andeq	r0, r0, r2, asr #3
   1755c:	andeq	r1, r2, ip, ror #19
   17560:	strdeq	r1, [r2], -r0
   17564:	andeq	r1, r2, ip, ror sl
   17568:	andeq	r1, r2, r4, lsr #20
   1756c:	ldrdeq	r0, [r0], -sl
   17570:	andeq	r1, r2, r0, lsl #20
   17574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17578:	mov	r7, r2
   1757c:	sub	sp, sp, #28
   17580:	mov	r4, r3
   17584:	ldr	r3, [r7]
   17588:	ldr	r2, [r0, #20]
   1758c:	str	r3, [sp, #20]
   17590:	ldr	r3, [r0, #16]
   17594:	cmp	r2, #0
   17598:	str	r3, [sp, #12]
   1759c:	ldr	r3, [r0, #8]
   175a0:	mov	r8, r1
   175a4:	mov	r9, r3
   175a8:	str	r3, [sp, #16]
   175ac:	ldr	r5, [sp, #64]	; 0x40
   175b0:	beq	17808 <daemon@@Base+0x1688>
   175b4:	mov	r6, r0
   175b8:	bl	1c720 <argp_parse@@Base+0xe20>
   175bc:	ldr	r3, [r6, #20]
   175c0:	mov	r1, r9
   175c4:	mov	r2, r0
   175c8:	ldr	r0, [pc, #640]	; 17850 <daemon@@Base+0x16d0>
   175cc:	blx	r3
   175d0:	mov	r3, r0
   175d4:	str	r0, [sp, #8]
   175d8:	cmp	r3, #0
   175dc:	beq	177a8 <daemon@@Base+0x1628>
   175e0:	mov	r1, #10
   175e4:	mov	r0, r3
   175e8:	bl	116fc <strchrnul@plt>
   175ec:	ldrb	sl, [r0]
   175f0:	mov	r6, r0
   175f4:	cmp	sl, #0
   175f8:	bne	17740 <daemon@@Base+0x15c0>
   175fc:	ldr	fp, [sp, #8]
   17600:	ldr	r3, [r5, #28]
   17604:	ldr	r1, [r5, #24]
   17608:	ldr	r0, [r5, #16]
   1760c:	sub	r1, r3, r1
   17610:	cmp	r1, r0
   17614:	add	r9, r6, #1
   17618:	mov	r1, r3
   1761c:	sub	r9, r9, fp
   17620:	bhi	177d8 <daemon@@Base+0x1658>
   17624:	ldr	r0, [r5, #20]
   17628:	ldr	ip, [r5, #8]
   1762c:	cmp	r0, #0
   17630:	addge	r9, r9, r0
   17634:	cmp	r9, ip
   17638:	bcc	17788 <daemon@@Base+0x1608>
   1763c:	ldr	r1, [r5, #32]
   17640:	cmp	r1, r3
   17644:	bls	17810 <daemon@@Base+0x1690>
   17648:	add	r0, r3, #1
   1764c:	mov	r1, #10
   17650:	str	r0, [r5, #28]
   17654:	strb	r1, [r3]
   17658:	ldr	r0, [r5, #28]
   1765c:	sub	r9, r6, fp
   17660:	ldr	r1, [r5, #32]
   17664:	add	r3, r0, r9
   17668:	cmp	r1, r3
   1766c:	bcs	17688 <daemon@@Base+0x1508>
   17670:	mov	r1, r9
   17674:	mov	r0, r5
   17678:	bl	1e928 <argp_parse@@Base+0x3028>
   1767c:	cmp	r0, #0
   17680:	beq	176a0 <daemon@@Base+0x1520>
   17684:	ldr	r0, [r5, #28]
   17688:	mov	r2, r9
   1768c:	mov	r1, fp
   17690:	bl	11744 <memcpy@plt>
   17694:	ldr	r3, [r5, #28]
   17698:	add	r9, r3, r9
   1769c:	str	r9, [r5, #28]
   176a0:	ldr	r3, [sp, #16]
   176a4:	ldr	r2, [sp, #8]
   176a8:	cmp	r3, r2
   176ac:	beq	176b8 <daemon@@Base+0x1538>
   176b0:	mov	r0, r2
   176b4:	bl	1ca50 <argp_parse@@Base+0x1150>
   176b8:	ldr	r3, [sp, #12]
   176bc:	cmp	r3, #0
   176c0:	beq	17704 <daemon@@Base+0x1584>
   176c4:	ldr	r2, [r3]
   176c8:	cmp	r2, #0
   176cc:	beq	17704 <daemon@@Base+0x1584>
   176d0:	ldr	r9, [sp, #12]
   176d4:	mov	r3, r4
   176d8:	mov	r0, r2
   176dc:	str	r5, [sp]
   176e0:	mov	r2, r7
   176e4:	mov	r1, r8
   176e8:	bl	17574 <daemon@@Base+0x13f4>
   176ec:	ldr	r2, [r9, #16]!
   176f0:	cmp	r2, #0
   176f4:	clz	r3, r0
   176f8:	lsr	r3, r3, #5
   176fc:	bne	176d8 <daemon@@Base+0x1558>
   17700:	mov	r4, r3
   17704:	cmp	r4, #0
   17708:	moveq	sl, #0
   1770c:	andne	sl, sl, #1
   17710:	cmp	sl, #0
   17714:	beq	177c8 <daemon@@Base+0x1648>
   17718:	ldrb	r0, [r6]
   1771c:	cmp	r0, #0
   17720:	bne	177ec <daemon@@Base+0x166c>
   17724:	ldr	r3, [sp, #20]
   17728:	ldrb	r4, [r3]
   1772c:	cmp	r4, #0
   17730:	moveq	r0, r4
   17734:	strbne	r0, [r3]
   17738:	add	sp, sp, #28
   1773c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17740:	ldr	r3, [sp, #20]
   17744:	ldrb	r9, [r3]
   17748:	cmp	r9, #0
   1774c:	beq	17848 <daemon@@Base+0x16c8>
   17750:	mov	sl, #0
   17754:	add	fp, r0, #1
   17758:	add	sl, sl, #1
   1775c:	mov	r0, fp
   17760:	mov	r1, #10
   17764:	bl	116fc <strchrnul@plt>
   17768:	cmp	sl, r9
   1776c:	bne	17754 <daemon@@Base+0x15d4>
   17770:	mov	r6, r0
   17774:	ldr	r3, [r7]
   17778:	mov	sl, #1
   1777c:	add	r3, r3, sl
   17780:	str	r3, [r7]
   17784:	b	17600 <daemon@@Base+0x1480>
   17788:	ldr	r0, [r5, #32]
   1778c:	cmp	r0, r3
   17790:	bls	1782c <daemon@@Base+0x16ac>
   17794:	add	r0, r1, #1
   17798:	mov	r3, #32
   1779c:	str	r0, [r5, #28]
   177a0:	strb	r3, [r1]
   177a4:	b	17658 <daemon@@Base+0x14d8>
   177a8:	ldr	r3, [sp, #12]
   177ac:	cmp	r3, #0
   177b0:	beq	177c8 <daemon@@Base+0x1648>
   177b4:	ldr	r2, [r3]
   177b8:	cmp	r2, #0
   177bc:	ldrne	r6, [sp, #8]
   177c0:	movne	sl, r6
   177c4:	bne	176d0 <daemon@@Base+0x1550>
   177c8:	clz	r0, r4
   177cc:	lsr	r0, r0, #5
   177d0:	add	sp, sp, #28
   177d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177d8:	mov	r0, r5
   177dc:	bl	1e37c <argp_parse@@Base+0x2a7c>
   177e0:	ldr	r3, [r5, #28]
   177e4:	mov	r1, r3
   177e8:	b	17624 <daemon@@Base+0x14a4>
   177ec:	ldr	r2, [sp, #20]
   177f0:	mov	r0, #1
   177f4:	ldrb	r3, [r2]
   177f8:	add	r3, r3, r0
   177fc:	strb	r3, [r2]
   17800:	add	sp, sp, #28
   17804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17808:	str	r3, [sp, #8]
   1780c:	b	175d8 <daemon@@Base+0x1458>
   17810:	mov	r1, #1
   17814:	mov	r0, r5
   17818:	bl	1e928 <argp_parse@@Base+0x3028>
   1781c:	cmp	r0, #0
   17820:	beq	17658 <daemon@@Base+0x14d8>
   17824:	ldr	r3, [r5, #28]
   17828:	b	17648 <daemon@@Base+0x14c8>
   1782c:	mov	r1, #1
   17830:	mov	r0, r5
   17834:	bl	1e928 <argp_parse@@Base+0x3028>
   17838:	cmp	r0, #0
   1783c:	beq	17658 <daemon@@Base+0x14d8>
   17840:	ldr	r1, [r5, #28]
   17844:	b	17794 <daemon@@Base+0x1614>
   17848:	ldr	fp, [sp, #8]
   1784c:	b	17774 <daemon@@Base+0x15f4>
   17850:	andeq	r0, r0, #6
   17854:	subs	r3, r0, #0
   17858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1785c:	moveq	r0, r3
   17860:	sub	sp, sp, #52	; 0x34
   17864:	mov	r4, r1
   17868:	beq	1787c <daemon@@Base+0x16fc>
   1786c:	mov	r1, #10
   17870:	bl	11930 <strchr@plt>
   17874:	adds	r0, r0, #0
   17878:	movne	r0, #1
   1787c:	cmp	r4, #0
   17880:	str	r0, [sp, #20]
   17884:	beq	17b94 <daemon@@Base+0x1a14>
   17888:	ldr	r3, [r4]
   1788c:	cmp	r3, #0
   17890:	beq	17b94 <daemon@@Base+0x1a14>
   17894:	mov	r9, #0
   17898:	mov	r8, #10
   1789c:	str	r4, [sp, #24]
   178a0:	ldr	r0, [r3, #8]
   178a4:	ldr	r4, [r3, #16]
   178a8:	cmp	r0, #0
   178ac:	moveq	r0, r9
   178b0:	beq	178c4 <daemon@@Base+0x1744>
   178b4:	mov	r1, r8
   178b8:	bl	11930 <strchr@plt>
   178bc:	adds	r0, r0, #0
   178c0:	movne	r0, #1
   178c4:	cmp	r4, #0
   178c8:	str	r0, [sp]
   178cc:	beq	17b70 <daemon@@Base+0x19f0>
   178d0:	ldr	r3, [r4]
   178d4:	cmp	r3, #0
   178d8:	beq	17b70 <daemon@@Base+0x19f0>
   178dc:	str	r4, [sp, #28]
   178e0:	ldr	r0, [r3, #8]
   178e4:	ldr	r4, [r3, #16]
   178e8:	cmp	r0, #0
   178ec:	moveq	r0, r9
   178f0:	beq	17904 <daemon@@Base+0x1784>
   178f4:	mov	r1, r8
   178f8:	bl	11930 <strchr@plt>
   178fc:	adds	r0, r0, #0
   17900:	movne	r0, #1
   17904:	cmp	r4, #0
   17908:	str	r0, [sp, #4]
   1790c:	beq	17b50 <daemon@@Base+0x19d0>
   17910:	ldr	r3, [r4]
   17914:	cmp	r3, #0
   17918:	beq	17b50 <daemon@@Base+0x19d0>
   1791c:	str	r4, [sp, #32]
   17920:	ldr	r0, [r3, #8]
   17924:	ldr	r4, [r3, #16]
   17928:	cmp	r0, #0
   1792c:	moveq	r0, r9
   17930:	beq	17944 <daemon@@Base+0x17c4>
   17934:	mov	r1, r8
   17938:	bl	11930 <strchr@plt>
   1793c:	adds	r0, r0, #0
   17940:	movne	r0, #1
   17944:	cmp	r4, #0
   17948:	str	r0, [sp, #8]
   1794c:	beq	17b30 <daemon@@Base+0x19b0>
   17950:	ldr	r3, [r4]
   17954:	cmp	r3, #0
   17958:	beq	17b30 <daemon@@Base+0x19b0>
   1795c:	str	r4, [sp, #36]	; 0x24
   17960:	ldr	r0, [r3, #8]
   17964:	ldr	r4, [r3, #16]
   17968:	cmp	r0, #0
   1796c:	moveq	r0, r9
   17970:	beq	17984 <daemon@@Base+0x1804>
   17974:	mov	r1, r8
   17978:	bl	11930 <strchr@plt>
   1797c:	adds	r0, r0, #0
   17980:	movne	r0, #1
   17984:	cmp	r4, #0
   17988:	str	r0, [sp, #12]
   1798c:	beq	17b0c <daemon@@Base+0x198c>
   17990:	ldr	r3, [r4]
   17994:	cmp	r3, #0
   17998:	beq	17b0c <daemon@@Base+0x198c>
   1799c:	str	r4, [sp, #40]	; 0x28
   179a0:	ldr	r0, [r3, #8]
   179a4:	ldr	fp, [r3, #16]
   179a8:	cmp	r0, #0
   179ac:	moveq	r0, r9
   179b0:	beq	179c4 <daemon@@Base+0x1844>
   179b4:	mov	r1, r8
   179b8:	bl	11930 <strchr@plt>
   179bc:	adds	r0, r0, #0
   179c0:	movne	r0, #1
   179c4:	cmp	fp, #0
   179c8:	str	r0, [sp, #16]
   179cc:	beq	17ae8 <daemon@@Base+0x1968>
   179d0:	ldr	r3, [fp]
   179d4:	cmp	r3, #0
   179d8:	beq	17ae8 <daemon@@Base+0x1968>
   179dc:	str	fp, [sp, #44]	; 0x2c
   179e0:	ldr	r0, [r3, #8]
   179e4:	ldr	r7, [r3, #16]
   179e8:	cmp	r0, #0
   179ec:	moveq	r0, r9
   179f0:	beq	17a04 <daemon@@Base+0x1884>
   179f4:	mov	r1, r8
   179f8:	bl	11930 <strchr@plt>
   179fc:	adds	r0, r0, #0
   17a00:	movne	r0, #1
   17a04:	cmp	r7, #0
   17a08:	mov	r6, r0
   17a0c:	beq	17ac8 <daemon@@Base+0x1948>
   17a10:	ldr	r3, [r7]
   17a14:	cmp	r3, #0
   17a18:	beq	17ac8 <daemon@@Base+0x1948>
   17a1c:	ldr	r0, [r3, #8]
   17a20:	ldr	r5, [r3, #16]
   17a24:	cmp	r0, #0
   17a28:	moveq	sl, r9
   17a2c:	beq	17a40 <daemon@@Base+0x18c0>
   17a30:	mov	r1, r8
   17a34:	bl	11930 <strchr@plt>
   17a38:	adds	sl, r0, #0
   17a3c:	movne	sl, #1
   17a40:	cmp	r5, #0
   17a44:	beq	17ab8 <daemon@@Base+0x1938>
   17a48:	ldr	r3, [r5]
   17a4c:	cmp	r3, #0
   17a50:	beq	17ab8 <daemon@@Base+0x1938>
   17a54:	ldr	r0, [r3, #8]
   17a58:	ldr	r4, [r3, #16]
   17a5c:	cmp	r0, #0
   17a60:	moveq	fp, r9
   17a64:	beq	17a78 <daemon@@Base+0x18f8>
   17a68:	mov	r1, r8
   17a6c:	bl	11930 <strchr@plt>
   17a70:	adds	fp, r0, #0
   17a74:	movne	fp, #1
   17a78:	cmp	r4, #0
   17a7c:	beq	17aa8 <daemon@@Base+0x1928>
   17a80:	ldr	r3, [r4]
   17a84:	cmp	r3, #0
   17a88:	beq	17aa8 <daemon@@Base+0x1928>
   17a8c:	ldr	r1, [r3, #16]
   17a90:	ldr	r0, [r3, #8]
   17a94:	bl	17854 <daemon@@Base+0x16d4>
   17a98:	ldr	r3, [r4, #16]!
   17a9c:	cmp	r3, #0
   17aa0:	add	fp, fp, r0
   17aa4:	bne	17a8c <daemon@@Base+0x190c>
   17aa8:	ldr	r3, [r5, #16]!
   17aac:	add	sl, sl, fp
   17ab0:	cmp	r3, #0
   17ab4:	bne	17a54 <daemon@@Base+0x18d4>
   17ab8:	ldr	r3, [r7, #16]!
   17abc:	add	r6, r6, sl
   17ac0:	cmp	r3, #0
   17ac4:	bne	17a1c <daemon@@Base+0x189c>
   17ac8:	ldr	r2, [sp, #44]	; 0x2c
   17acc:	ldr	r3, [r2, #16]!
   17ad0:	str	r2, [sp, #44]	; 0x2c
   17ad4:	ldr	r2, [sp, #16]
   17ad8:	cmp	r3, #0
   17adc:	add	r2, r2, r6
   17ae0:	str	r2, [sp, #16]
   17ae4:	bne	179e0 <daemon@@Base+0x1860>
   17ae8:	ldr	r2, [sp, #40]	; 0x28
   17aec:	ldr	r1, [sp, #16]
   17af0:	ldr	r3, [r2, #16]!
   17af4:	str	r2, [sp, #40]	; 0x28
   17af8:	ldr	r2, [sp, #12]
   17afc:	cmp	r3, #0
   17b00:	add	r2, r2, r1
   17b04:	str	r2, [sp, #12]
   17b08:	bne	179a0 <daemon@@Base+0x1820>
   17b0c:	ldr	r2, [sp, #36]	; 0x24
   17b10:	ldr	r1, [sp, #12]
   17b14:	ldr	r3, [r2, #16]!
   17b18:	str	r2, [sp, #36]	; 0x24
   17b1c:	ldr	r2, [sp, #8]
   17b20:	cmp	r3, #0
   17b24:	add	r2, r2, r1
   17b28:	str	r2, [sp, #8]
   17b2c:	bne	17960 <daemon@@Base+0x17e0>
   17b30:	ldr	r2, [sp, #32]
   17b34:	ldr	r3, [r2, #16]!
   17b38:	str	r2, [sp, #32]
   17b3c:	ldmib	sp, {r1, r2}
   17b40:	cmp	r3, #0
   17b44:	add	r2, r2, r1
   17b48:	str	r2, [sp, #4]
   17b4c:	bne	17920 <daemon@@Base+0x17a0>
   17b50:	ldr	r2, [sp, #28]
   17b54:	ldr	r3, [r2, #16]!
   17b58:	str	r2, [sp, #28]
   17b5c:	ldm	sp, {r1, r2}
   17b60:	cmp	r3, #0
   17b64:	add	r2, r2, r1
   17b68:	str	r2, [sp]
   17b6c:	bne	178e0 <daemon@@Base+0x1760>
   17b70:	ldr	r2, [sp, #24]
   17b74:	ldr	r1, [sp]
   17b78:	ldr	r3, [r2, #16]!
   17b7c:	str	r2, [sp, #24]
   17b80:	ldr	r2, [sp, #20]
   17b84:	cmp	r3, #0
   17b88:	add	r2, r2, r1
   17b8c:	str	r2, [sp, #20]
   17b90:	bne	178a0 <daemon@@Base+0x1720>
   17b94:	ldr	r0, [sp, #20]
   17b98:	add	sp, sp, #52	; 0x34
   17b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ba4:	add	fp, sp, #32
   17ba8:	sub	sp, sp, #36	; 0x24
   17bac:	ldr	r3, [r0, #4]
   17bb0:	cmp	r3, #0
   17bb4:	str	r3, [fp, #-40]	; 0xffffffd8
   17bb8:	bne	17bc4 <daemon@@Base+0x1a44>
   17bbc:	sub	sp, fp, #32
   17bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17bc4:	mov	r4, r0
   17bc8:	str	r0, [fp, #-60]	; 0xffffffc4
   17bcc:	ldr	r0, [r0, #8]
   17bd0:	str	r1, [fp, #-44]	; 0xffffffd4
   17bd4:	bl	11918 <strlen@plt>
   17bd8:	ldr	r3, [r4]
   17bdc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17be0:	add	r3, r3, #28
   17be4:	mov	r9, r3
   17be8:	str	r3, [fp, #-64]	; 0xffffffc0
   17bec:	mov	sl, r9
   17bf0:	str	r2, [fp, #-48]	; 0xffffffd0
   17bf4:	add	r3, r0, #15
   17bf8:	bic	r3, r3, #7
   17bfc:	sub	sp, sp, r3
   17c00:	str	sp, [fp, #-56]	; 0xffffffc8
   17c04:	str	sp, [fp, #-52]	; 0xffffffcc
   17c08:	ldr	r5, [sl, #-24]	; 0xffffffe8
   17c0c:	ldr	r4, [sl, #-28]	; 0xffffffe4
   17c10:	cmp	r5, #0
   17c14:	ldr	r9, [sl, #-20]	; 0xffffffec
   17c18:	beq	17c90 <daemon@@Base+0x1b10>
   17c1c:	mov	r8, r4
   17c20:	b	17c30 <daemon@@Base+0x1ab0>
   17c24:	subs	r5, r5, #1
   17c28:	add	r4, r4, #24
   17c2c:	beq	17c90 <daemon@@Base+0x1b10>
   17c30:	ldr	r6, [r4, #12]
   17c34:	tst	r6, #8
   17c38:	bne	17c24 <daemon@@Base+0x1aa4>
   17c3c:	ldr	r7, [r4, #4]
   17c40:	sub	r3, r7, #1
   17c44:	cmp	r3, #254	; 0xfe
   17c48:	bhi	17c24 <daemon@@Base+0x1aa4>
   17c4c:	bl	118f4 <__ctype_b_loc@plt>
   17c50:	lsl	r3, r7, #1
   17c54:	ldr	r2, [r0]
   17c58:	ldrh	r3, [r2, r3]
   17c5c:	tst	r3, #16384	; 0x4000
   17c60:	beq	17c24 <daemon@@Base+0x1aa4>
   17c64:	ldrb	r3, [r9]
   17c68:	cmp	r7, r3
   17c6c:	bne	17c24 <daemon@@Base+0x1aa4>
   17c70:	tst	r6, #4
   17c74:	moveq	r8, r4
   17c78:	tst	r6, #2
   17c7c:	beq	17e04 <daemon@@Base+0x1c84>
   17c80:	subs	r5, r5, #1
   17c84:	add	r9, r9, #1
   17c88:	add	r4, r4, #24
   17c8c:	bne	17c30 <daemon@@Base+0x1ab0>
   17c90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17c94:	add	sl, sl, #28
   17c98:	subs	r3, r3, #1
   17c9c:	str	r3, [fp, #-48]	; 0xffffffd0
   17ca0:	bne	17c08 <daemon@@Base+0x1a88>
   17ca4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17ca8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17cac:	cmp	r3, r2
   17cb0:	bcc	17fb8 <daemon@@Base+0x1e38>
   17cb4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   17cb8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17cbc:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17cc0:	cmp	r5, #0
   17cc4:	ldr	r6, [r7, #-20]	; 0xffffffec
   17cc8:	movne	r8, r4
   17ccc:	bne	17ce0 <daemon@@Base+0x1b60>
   17cd0:	b	17d40 <daemon@@Base+0x1bc0>
   17cd4:	subs	r5, r5, #1
   17cd8:	add	r4, r4, #24
   17cdc:	beq	17d40 <daemon@@Base+0x1bc0>
   17ce0:	ldr	r9, [r4, #12]
   17ce4:	tst	r9, #8
   17ce8:	bne	17cd4 <daemon@@Base+0x1b54>
   17cec:	ldr	sl, [r4, #4]
   17cf0:	sub	r3, sl, #1
   17cf4:	cmp	r3, #254	; 0xfe
   17cf8:	bhi	17cd4 <daemon@@Base+0x1b54>
   17cfc:	bl	118f4 <__ctype_b_loc@plt>
   17d00:	lsl	r3, sl, #1
   17d04:	ldr	r1, [r0]
   17d08:	ldrh	r3, [r1, r3]
   17d0c:	tst	r3, #16384	; 0x4000
   17d10:	beq	17cd4 <daemon@@Base+0x1b54>
   17d14:	ldrb	r3, [r6]
   17d18:	cmp	sl, r3
   17d1c:	bne	17cd4 <daemon@@Base+0x1b54>
   17d20:	tst	r9, #4
   17d24:	moveq	r8, r4
   17d28:	tst	r9, #2
   17d2c:	beq	17e3c <daemon@@Base+0x1cbc>
   17d30:	subs	r5, r5, #1
   17d34:	add	r6, r6, #1
   17d38:	add	r4, r4, #24
   17d3c:	bne	17ce0 <daemon@@Base+0x1b60>
   17d40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17d44:	add	r7, r7, #28
   17d48:	subs	r3, r3, #1
   17d4c:	str	r3, [fp, #-40]	; 0xffffffd8
   17d50:	bne	17cb8 <daemon@@Base+0x1b38>
   17d54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17d58:	ldm	r3, {r7, r8}
   17d5c:	cmp	r8, #0
   17d60:	beq	17bbc <daemon@@Base+0x1a3c>
   17d64:	ldr	sl, [pc, #652]	; 17ff8 <daemon@@Base+0x1e78>
   17d68:	ldr	r9, [pc, #652]	; 17ffc <daemon@@Base+0x1e7c>
   17d6c:	add	r7, r7, #28
   17d70:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17d74:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17d78:	cmp	r5, #0
   17d7c:	movne	r6, r4
   17d80:	bne	17d94 <daemon@@Base+0x1c14>
   17d84:	b	17df0 <daemon@@Base+0x1c70>
   17d88:	subs	r5, r5, #1
   17d8c:	add	r4, r4, #24
   17d90:	beq	17df0 <daemon@@Base+0x1c70>
   17d94:	ldr	r2, [r4]
   17d98:	cmp	r2, #0
   17d9c:	beq	17d88 <daemon@@Base+0x1c08>
   17da0:	ldr	r1, [r4, #12]
   17da4:	tst	r1, #4
   17da8:	moveq	r6, r4
   17dac:	tst	r1, #2
   17db0:	bne	17d88 <daemon@@Base+0x1c08>
   17db4:	ldr	r3, [r4, #8]
   17db8:	ldr	r0, [r6, #12]
   17dbc:	cmp	r3, #0
   17dc0:	orr	r1, r1, r0
   17dc4:	beq	17ee8 <daemon@@Base+0x1d68>
   17dc8:	tst	r1, #16
   17dcc:	bne	17d88 <daemon@@Base+0x1c08>
   17dd0:	tst	r1, #1
   17dd4:	movne	r1, r9
   17dd8:	moveq	r1, sl
   17ddc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17de0:	bl	1ea28 <argp_parse@@Base+0x3128>
   17de4:	subs	r5, r5, #1
   17de8:	add	r4, r4, #24
   17dec:	bne	17d94 <daemon@@Base+0x1c14>
   17df0:	subs	r8, r8, #1
   17df4:	add	r7, r7, #28
   17df8:	bne	17d70 <daemon@@Base+0x1bf0>
   17dfc:	sub	sp, fp, #32
   17e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e04:	ldr	r3, [r4, #8]
   17e08:	cmp	r3, #0
   17e0c:	bne	17c80 <daemon@@Base+0x1b00>
   17e10:	ldr	r3, [r8, #8]
   17e14:	cmp	r3, #0
   17e18:	bne	17c80 <daemon@@Base+0x1b00>
   17e1c:	ldr	r3, [r8, #12]
   17e20:	orr	r6, r6, r3
   17e24:	tst	r6, #16
   17e28:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   17e2c:	strbeq	r7, [r3]
   17e30:	addeq	r3, r3, #1
   17e34:	streq	r3, [fp, #-52]	; 0xffffffcc
   17e38:	b	17c80 <daemon@@Base+0x1b00>
   17e3c:	ldr	r3, [r4, #8]
   17e40:	ldr	r1, [r8, #12]
   17e44:	cmp	r3, #0
   17e48:	orr	r9, r9, r1
   17e4c:	beq	17f44 <daemon@@Base+0x1dc4>
   17e50:	tst	r9, #16
   17e54:	bne	17d30 <daemon@@Base+0x1bb0>
   17e58:	tst	r9, #1
   17e5c:	bne	17f0c <daemon@@Base+0x1d8c>
   17e60:	mov	r0, r3
   17e64:	str	r3, [fp, #-48]	; 0xffffffd0
   17e68:	bl	11918 <strlen@plt>
   17e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e70:	ldr	r1, [r3, #28]
   17e74:	ldr	r2, [r3, #24]
   17e78:	sub	r2, r1, r2
   17e7c:	mov	r9, r0
   17e80:	ldr	r0, [r3, #16]
   17e84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17e88:	cmp	r2, r0
   17e8c:	bhi	17fa0 <daemon@@Base+0x1e20>
   17e90:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17e94:	ldr	r2, [ip, #20]
   17e98:	ldr	r0, [ip, #8]
   17e9c:	bic	r2, r2, r2, asr #31
   17ea0:	add	r2, r2, #6
   17ea4:	add	r2, r2, r9
   17ea8:	cmp	r2, r0
   17eac:	bcc	17f20 <daemon@@Base+0x1da0>
   17eb0:	ldr	r2, [ip, #32]
   17eb4:	mov	r0, ip
   17eb8:	cmp	r2, r1
   17ebc:	bls	17f54 <daemon@@Base+0x1dd4>
   17ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ec4:	add	r2, r1, #1
   17ec8:	str	r2, [r0, #28]
   17ecc:	mov	r2, #10
   17ed0:	strb	r2, [r1]
   17ed4:	ldr	r2, [r4, #4]
   17ed8:	ldr	r1, [pc, #288]	; 18000 <daemon@@Base+0x1e80>
   17edc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ee0:	bl	1ea28 <argp_parse@@Base+0x3128>
   17ee4:	b	17d30 <daemon@@Base+0x1bb0>
   17ee8:	tst	r1, #16
   17eec:	bne	17d88 <daemon@@Base+0x1c08>
   17ef0:	ldr	r3, [r6, #8]
   17ef4:	cmp	r3, #0
   17ef8:	bne	17dd0 <daemon@@Base+0x1c50>
   17efc:	ldr	r1, [pc, #256]	; 18004 <daemon@@Base+0x1e84>
   17f00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f04:	bl	1ea28 <argp_parse@@Base+0x3128>
   17f08:	b	17d88 <daemon@@Base+0x1c08>
   17f0c:	mov	r2, sl
   17f10:	ldr	r1, [pc, #240]	; 18008 <daemon@@Base+0x1e88>
   17f14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f18:	bl	1ea28 <argp_parse@@Base+0x3128>
   17f1c:	b	17d30 <daemon@@Base+0x1bb0>
   17f20:	ldr	r2, [ip, #32]
   17f24:	cmp	r2, r1
   17f28:	bls	17f78 <daemon@@Base+0x1df8>
   17f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17f30:	add	r2, r1, #1
   17f34:	str	r2, [r0, #28]
   17f38:	mov	r2, #32
   17f3c:	strb	r2, [r1]
   17f40:	b	17ed4 <daemon@@Base+0x1d54>
   17f44:	ldr	r3, [r8, #8]
   17f48:	cmp	r3, #0
   17f4c:	beq	17d30 <daemon@@Base+0x1bb0>
   17f50:	b	17e50 <daemon@@Base+0x1cd0>
   17f54:	mov	r1, #1
   17f58:	str	r3, [fp, #-48]	; 0xffffffd0
   17f5c:	mov	r9, ip
   17f60:	bl	1e928 <argp_parse@@Base+0x3028>
   17f64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17f68:	cmp	r0, #0
   17f6c:	beq	17ed4 <daemon@@Base+0x1d54>
   17f70:	ldr	r1, [r9, #28]
   17f74:	b	17ec0 <daemon@@Base+0x1d40>
   17f78:	ldr	r9, [fp, #-44]	; 0xffffffd4
   17f7c:	mov	r1, #1
   17f80:	mov	r0, r9
   17f84:	str	r3, [fp, #-48]	; 0xffffffd0
   17f88:	bl	1e928 <argp_parse@@Base+0x3028>
   17f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17f90:	cmp	r0, #0
   17f94:	beq	17ed4 <daemon@@Base+0x1d54>
   17f98:	ldr	r1, [r9, #28]
   17f9c:	b	17f2c <daemon@@Base+0x1dac>
   17fa0:	ldr	sl, [fp, #-44]	; 0xffffffd4
   17fa4:	mov	r0, sl
   17fa8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   17fac:	ldr	r1, [sl, #28]
   17fb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17fb4:	b	17e90 <daemon@@Base+0x1d10>
   17fb8:	mov	r2, r3
   17fbc:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   17fc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17fc4:	ldr	r1, [pc, #64]	; 1800c <daemon@@Base+0x1e8c>
   17fc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17fcc:	strb	ip, [r3]
   17fd0:	bl	1ea28 <argp_parse@@Base+0x3128>
   17fd4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   17fd8:	ldr	r3, [r2, #4]
   17fdc:	cmp	r3, #0
   17fe0:	str	r3, [fp, #-40]	; 0xffffffd8
   17fe4:	beq	17bbc <daemon@@Base+0x1a3c>
   17fe8:	ldr	r3, [r2]
   17fec:	add	r3, r3, #28
   17ff0:	str	r3, [fp, #-64]	; 0xffffffc0
   17ff4:	b	17cb4 <daemon@@Base+0x1b34>
   17ff8:	andeq	r1, r2, r0, ror #21
   17ffc:	ldrdeq	r1, [r2], -r0
   18000:	andeq	r1, r2, r4, asr #21
   18004:	andeq	r1, r2, ip, ror #21
   18008:			; <UNDEFINED> instruction: 0x00021ab8
   1800c:			; <UNDEFINED> instruction: 0x00021ab0
   18010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18014:	subs	r4, r1, #0
   18018:	sub	sp, sp, #12
   1801c:	mov	r8, r0
   18020:	mov	r7, r2
   18024:	beq	181f8 <daemon@@Base+0x2078>
   18028:	ldr	r3, [r4, #20]
   1802c:	cmp	r3, #0
   18030:	beq	181f8 <daemon@@Base+0x2078>
   18034:	ldr	r1, [r2, #16]
   18038:	mov	r0, r4
   1803c:	bl	1c720 <argp_parse@@Base+0xe20>
   18040:	ldr	r3, [r4, #20]
   18044:	mov	r1, r8
   18048:	mov	r2, r0
   1804c:	ldr	r0, [pc, #628]	; 182c8 <daemon@@Base+0x2148>
   18050:	blx	r3
   18054:	mov	r6, r0
   18058:	cmp	r6, #0
   1805c:	beq	181c4 <daemon@@Base+0x2044>
   18060:	ldrb	r3, [r6]
   18064:	cmp	r3, #0
   18068:	beq	181b8 <daemon@@Base+0x2038>
   1806c:	ldr	r3, [r7, #8]
   18070:	ldr	r3, [r3]
   18074:	cmp	r3, #0
   18078:	beq	180a0 <daemon@@Base+0x1f20>
   1807c:	ldr	r4, [r7, #4]
   18080:	ldr	r3, [r4, #28]
   18084:	ldr	r2, [r4, #32]
   18088:	cmp	r3, r2
   1808c:	bcs	182ac <daemon@@Base+0x212c>
   18090:	add	r1, r3, #1
   18094:	mov	r2, #10
   18098:	str	r1, [r4, #28]
   1809c:	strb	r2, [r3]
   180a0:	ldr	r4, [r7, #4]
   180a4:	ldr	sl, [pc, #544]	; 182cc <daemon@@Base+0x214c>
   180a8:	ldr	r3, [r4, #28]
   180ac:	ldr	r1, [r4, #24]
   180b0:	ldr	r2, [r4, #16]
   180b4:	sub	r3, r3, r1
   180b8:	cmp	r3, r2
   180bc:	ldr	r5, [sl, #24]
   180c0:	bhi	18284 <daemon@@Base+0x2104>
   180c4:	ldr	r3, [r4, #20]
   180c8:	mov	fp, #32
   180cc:	cmp	r3, #0
   180d0:	subge	r5, r5, r3
   180d4:	mov	r9, #1
   180d8:	cmp	r5, #0
   180dc:	sub	r5, r5, #1
   180e0:	ble	1810c <daemon@@Base+0x1f8c>
   180e4:	ldr	r3, [r4, #28]
   180e8:	ldr	r2, [r4, #32]
   180ec:	cmp	r3, r2
   180f0:	bcs	181dc <daemon@@Base+0x205c>
   180f4:	add	r2, r3, #1
   180f8:	cmp	r5, #0
   180fc:	str	r2, [r4, #28]
   18100:	sub	r5, r5, #1
   18104:	strb	fp, [r3]
   18108:	bgt	180e4 <daemon@@Base+0x1f64>
   1810c:	ldr	r4, [r7, #4]
   18110:	ldr	r9, [sl, #24]
   18114:	ldr	r5, [r4, #28]
   18118:	ldr	r3, [r4, #24]
   1811c:	ldr	r2, [r4, #16]
   18120:	sub	r3, r5, r3
   18124:	cmp	r3, r2
   18128:	strls	r9, [r4, #4]
   1812c:	movls	fp, r4
   18130:	bhi	18238 <daemon@@Base+0x20b8>
   18134:	str	r9, [fp, #12]
   18138:	mov	r0, r6
   1813c:	bl	11918 <strlen@plt>
   18140:	subs	r9, r0, #0
   18144:	beq	1817c <daemon@@Base+0x1ffc>
   18148:	ldr	r2, [r4, #32]
   1814c:	add	r3, r5, r9
   18150:	cmp	r2, r3
   18154:	bcc	18208 <daemon@@Base+0x2088>
   18158:	mov	r2, r9
   1815c:	mov	r0, r5
   18160:	mov	r1, r6
   18164:	bl	11744 <memcpy@plt>
   18168:	ldr	r3, [r4, #28]
   1816c:	add	r9, r3, r9
   18170:	str	r9, [r4, #28]
   18174:	ldr	r4, [r7, #4]
   18178:	ldr	r5, [r4, #28]
   1817c:	ldr	r3, [r4, #24]
   18180:	ldr	r2, [r4, #16]
   18184:	sub	r3, r5, r3
   18188:	cmp	r3, r2
   1818c:	movls	r9, r4
   18190:	bhi	18224 <daemon@@Base+0x20a4>
   18194:	ldr	r2, [r9, #32]
   18198:	mov	r3, #0
   1819c:	cmp	r2, r5
   181a0:	str	r3, [r4, #4]
   181a4:	bls	18290 <daemon@@Base+0x2110>
   181a8:	add	r2, r5, #1
   181ac:	mov	r3, #10
   181b0:	str	r2, [r9, #28]
   181b4:	strb	r3, [r5]
   181b8:	ldr	r3, [r7, #8]
   181bc:	mov	r2, #1
   181c0:	str	r2, [r3, #4]
   181c4:	cmp	r8, r6
   181c8:	beq	18200 <daemon@@Base+0x2080>
   181cc:	mov	r0, r6
   181d0:	add	sp, sp, #12
   181d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   181d8:	b	1ca50 <argp_parse@@Base+0x1150>
   181dc:	mov	r1, r9
   181e0:	mov	r0, r4
   181e4:	bl	1e928 <argp_parse@@Base+0x3028>
   181e8:	cmp	r0, #0
   181ec:	beq	180d8 <daemon@@Base+0x1f58>
   181f0:	ldr	r3, [r4, #28]
   181f4:	b	180f4 <daemon@@Base+0x1f74>
   181f8:	mov	r6, r8
   181fc:	b	18058 <daemon@@Base+0x1ed8>
   18200:	add	sp, sp, #12
   18204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18208:	mov	r1, r9
   1820c:	mov	r0, r4
   18210:	bl	1e928 <argp_parse@@Base+0x3028>
   18214:	cmp	r0, #0
   18218:	beq	18174 <daemon@@Base+0x1ff4>
   1821c:	ldr	r5, [r4, #28]
   18220:	b	18158 <daemon@@Base+0x1fd8>
   18224:	mov	r0, r4
   18228:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1822c:	ldr	r9, [r7, #4]
   18230:	ldr	r5, [r9, #28]
   18234:	b	18194 <daemon@@Base+0x2014>
   18238:	mov	r0, r4
   1823c:	str	r9, [sp, #4]
   18240:	bl	1e37c <argp_parse@@Base+0x2a7c>
   18244:	ldr	fp, [r7, #4]
   18248:	ldr	r3, [sp, #4]
   1824c:	ldr	r9, [sl, #24]
   18250:	ldr	r5, [fp, #28]
   18254:	ldr	r2, [fp, #24]
   18258:	ldr	r1, [fp, #16]
   1825c:	sub	r2, r5, r2
   18260:	cmp	r2, r1
   18264:	str	r3, [r4, #4]
   18268:	movls	r4, fp
   1826c:	bls	18134 <daemon@@Base+0x1fb4>
   18270:	mov	r0, fp
   18274:	bl	1e37c <argp_parse@@Base+0x2a7c>
   18278:	ldr	r4, [r7, #4]
   1827c:	ldr	r5, [r4, #28]
   18280:	b	18134 <daemon@@Base+0x1fb4>
   18284:	mov	r0, r4
   18288:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1828c:	b	180c4 <daemon@@Base+0x1f44>
   18290:	mov	r1, #1
   18294:	mov	r0, r9
   18298:	bl	1e928 <argp_parse@@Base+0x3028>
   1829c:	cmp	r0, #0
   182a0:	beq	181b8 <daemon@@Base+0x2038>
   182a4:	ldr	r5, [r9, #28]
   182a8:	b	181a8 <daemon@@Base+0x2028>
   182ac:	mov	r1, #1
   182b0:	mov	r0, r4
   182b4:	bl	1e928 <argp_parse@@Base+0x3028>
   182b8:	cmp	r0, #0
   182bc:	beq	180a0 <daemon@@Base+0x1f20>
   182c0:	ldr	r3, [r4, #28]
   182c4:	b	18090 <daemon@@Base+0x1f10>
   182c8:	andeq	r0, r0, #3
   182cc:	andeq	r3, r3, r0, lsl #11
   182d0:	ldr	r3, [r1, #12]
   182d4:	push	{r4, r5, r6, r7, r8, lr}
   182d8:	cmp	r3, #0
   182dc:	mov	r6, r1
   182e0:	mov	r5, r0
   182e4:	beq	183cc <daemon@@Base+0x224c>
   182e8:	ldr	r3, [r1, #8]
   182ec:	ldr	r2, [r1]
   182f0:	ldr	r7, [r3]
   182f4:	ldr	r3, [r3, #4]
   182f8:	ldr	r4, [r2, #16]
   182fc:	cmp	r3, #0
   18300:	cmpne	r7, #0
   18304:	beq	1833c <daemon@@Base+0x21bc>
   18308:	ldr	r2, [r2, #12]
   1830c:	ldr	r3, [r7, #12]
   18310:	cmp	r2, r3
   18314:	beq	1833c <daemon@@Base+0x21bc>
   18318:	ldr	r8, [r1, #4]
   1831c:	ldr	r3, [r8, #28]
   18320:	ldr	r2, [r8, #32]
   18324:	cmp	r3, r2
   18328:	bcs	18504 <daemon@@Base+0x2384>
   1832c:	add	r1, r3, #1
   18330:	mov	r2, #10
   18334:	str	r1, [r8, #28]
   18338:	strb	r2, [r3]
   1833c:	cmp	r4, #0
   18340:	beq	18480 <daemon@@Base+0x2300>
   18344:	ldr	r0, [r4]
   18348:	cmp	r0, #0
   1834c:	beq	18480 <daemon@@Base+0x2300>
   18350:	ldrb	r3, [r0]
   18354:	cmp	r3, #0
   18358:	beq	18480 <daemon@@Base+0x2300>
   1835c:	cmp	r7, #0
   18360:	beq	18390 <daemon@@Base+0x2210>
   18364:	ldr	r3, [r7, #16]
   18368:	cmp	r4, r3
   1836c:	beq	18480 <daemon@@Base+0x2300>
   18370:	cmp	r3, #0
   18374:	beq	18390 <daemon@@Base+0x2210>
   18378:	ldr	r3, [r3, #12]
   1837c:	cmp	r3, #0
   18380:	cmpne	r4, r3
   18384:	bne	18378 <daemon@@Base+0x21f8>
   18388:	cmp	r4, r3
   1838c:	beq	18480 <daemon@@Base+0x2300>
   18390:	ldr	r3, [r6, #4]
   18394:	ldr	r1, [r4, #16]
   18398:	mov	r2, r6
   1839c:	ldr	r7, [r3, #12]
   183a0:	bl	18010 <daemon@@Base+0x1e90>
   183a4:	ldr	r8, [r6, #4]
   183a8:	ldr	r3, [r8, #28]
   183ac:	ldr	r1, [r8, #24]
   183b0:	ldr	r2, [r8, #16]
   183b4:	sub	r3, r3, r1
   183b8:	cmp	r3, r2
   183bc:	movls	r4, r8
   183c0:	bhi	184e4 <daemon@@Base+0x2364>
   183c4:	str	r7, [r8, #12]
   183c8:	b	18494 <daemon@@Base+0x2314>
   183cc:	ldr	r7, [r1, #4]
   183d0:	ldr	r3, [r7, #28]
   183d4:	ldr	r1, [r7, #32]
   183d8:	add	r2, r3, #2
   183dc:	cmp	r1, r2
   183e0:	bcc	18464 <daemon@@Base+0x22e4>
   183e4:	ldr	r2, [pc, #308]	; 18520 <daemon@@Base+0x23a0>
   183e8:	ldrh	r2, [r2]
   183ec:	strh	r2, [r3]
   183f0:	ldr	r4, [r6, #4]
   183f4:	ldr	r3, [r7, #28]
   183f8:	add	r3, r3, #2
   183fc:	str	r3, [r7, #28]
   18400:	ldr	r1, [r4, #24]
   18404:	ldr	r3, [r4, #28]
   18408:	ldr	r2, [r4, #16]
   1840c:	sub	r3, r3, r1
   18410:	cmp	r3, r2
   18414:	bhi	184a4 <daemon@@Base+0x2324>
   18418:	ldr	r3, [r4, #20]
   1841c:	mov	r6, #32
   18420:	cmp	r3, #0
   18424:	subge	r5, r5, r3
   18428:	mov	r7, #1
   1842c:	cmp	r5, #0
   18430:	sub	r5, r5, #1
   18434:	ble	18460 <daemon@@Base+0x22e0>
   18438:	ldr	r3, [r4, #28]
   1843c:	ldr	r2, [r4, #32]
   18440:	cmp	r3, r2
   18444:	bcs	184b0 <daemon@@Base+0x2330>
   18448:	add	r2, r3, #1
   1844c:	cmp	r5, #0
   18450:	str	r2, [r4, #28]
   18454:	sub	r5, r5, #1
   18458:	strb	r6, [r3]
   1845c:	bgt	18438 <daemon@@Base+0x22b8>
   18460:	pop	{r4, r5, r6, r7, r8, pc}
   18464:	mov	r1, #2
   18468:	mov	r0, r7
   1846c:	bl	1e928 <argp_parse@@Base+0x3028>
   18470:	cmp	r0, #0
   18474:	beq	184cc <daemon@@Base+0x234c>
   18478:	ldr	r3, [r7, #28]
   1847c:	b	183e4 <daemon@@Base+0x2264>
   18480:	ldr	r4, [r6, #4]
   18484:	ldr	r3, [r4, #28]
   18488:	ldr	r1, [r4, #24]
   1848c:	ldr	r2, [r4, #16]
   18490:	sub	r3, r3, r1
   18494:	mov	r1, #0
   18498:	cmp	r3, r2
   1849c:	str	r1, [r6, #12]
   184a0:	bls	18418 <daemon@@Base+0x2298>
   184a4:	mov	r0, r4
   184a8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   184ac:	b	18418 <daemon@@Base+0x2298>
   184b0:	mov	r1, r7
   184b4:	mov	r0, r4
   184b8:	bl	1e928 <argp_parse@@Base+0x3028>
   184bc:	cmp	r0, #0
   184c0:	beq	1842c <daemon@@Base+0x22ac>
   184c4:	ldr	r3, [r4, #28]
   184c8:	b	18448 <daemon@@Base+0x22c8>
   184cc:	ldr	r4, [r6, #4]
   184d0:	ldr	r3, [r4, #28]
   184d4:	ldr	r1, [r4, #24]
   184d8:	ldr	r2, [r4, #16]
   184dc:	sub	r3, r3, r1
   184e0:	b	18410 <daemon@@Base+0x2290>
   184e4:	mov	r0, r8
   184e8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   184ec:	ldr	r4, [r6, #4]
   184f0:	ldr	r3, [r4, #28]
   184f4:	ldr	r1, [r4, #24]
   184f8:	ldr	r2, [r4, #16]
   184fc:	sub	r3, r3, r1
   18500:	b	183c4 <daemon@@Base+0x2244>
   18504:	mov	r1, #1
   18508:	mov	r0, r8
   1850c:	bl	1e928 <argp_parse@@Base+0x3028>
   18510:	cmp	r0, #0
   18514:	beq	1833c <daemon@@Base+0x21bc>
   18518:	ldr	r3, [r8, #28]
   1851c:	b	1832c <daemon@@Base+0x21ac>
   18520:	strdeq	r1, [r2], -r4
   18524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18528:	sub	sp, sp, #28
   1852c:	ldr	r6, [r0, #12]
   18530:	ldr	r7, [r1, #12]
   18534:	cmp	r6, r7
   18538:	beq	187b0 <daemon@@Base+0x2630>
   1853c:	ldr	r8, [r6, #12]
   18540:	ldr	r9, [r7, #12]
   18544:	mov	r5, r1
   18548:	cmp	r8, r9
   1854c:	mov	r4, r0
   18550:	beq	18778 <daemon@@Base+0x25f8>
   18554:	ldr	sl, [r8, #12]
   18558:	ldr	fp, [r9, #12]
   1855c:	cmp	sl, fp
   18560:	beq	18818 <daemon@@Base+0x2698>
   18564:	ldr	r3, [sl, #12]
   18568:	ldr	r2, [fp, #12]
   1856c:	cmp	r3, r2
   18570:	beq	1884c <daemon@@Base+0x26cc>
   18574:	ldr	r1, [r3, #12]
   18578:	ldr	r0, [r2, #12]
   1857c:	str	r1, [sp]
   18580:	cmp	r1, r0
   18584:	str	r0, [sp, #4]
   18588:	beq	187e4 <daemon@@Base+0x2664>
   1858c:	ldr	r1, [r1, #12]
   18590:	ldr	r0, [r0, #12]
   18594:	str	r1, [sp, #8]
   18598:	cmp	r1, r0
   1859c:	str	r0, [sp, #12]
   185a0:	beq	18880 <daemon@@Base+0x2700>
   185a4:	ldr	r0, [r1, #12]
   185a8:	ldr	r1, [sp, #12]
   185ac:	ldr	r1, [r1, #12]
   185b0:	cmp	r0, r1
   185b4:	beq	188c0 <daemon@@Base+0x2740>
   185b8:	str	r2, [sp, #20]
   185bc:	str	r3, [sp, #16]
   185c0:	bl	18524 <daemon@@Base+0x23a4>
   185c4:	cmp	r0, #0
   185c8:	bne	18770 <daemon@@Base+0x25f0>
   185cc:	ldr	r3, [sp, #12]
   185d0:	ldr	r2, [sp, #20]
   185d4:	ldr	r1, [r3, #8]
   185d8:	ldr	r3, [sp, #8]
   185dc:	mvn	ip, r1
   185e0:	ldr	r0, [r3, #8]
   185e4:	lsr	ip, ip, #31
   185e8:	ldr	r3, [sp, #16]
   185ec:	cmp	ip, r0, lsr #31
   185f0:	subne	r0, r0, r1
   185f4:	subeq	r0, r1, r0
   185f8:	cmp	r0, #0
   185fc:	bne	18770 <daemon@@Base+0x25f0>
   18600:	ldr	r1, [sp, #12]
   18604:	ldr	r0, [sp, #8]
   18608:	ldr	r1, [r1, #4]
   1860c:	ldr	r0, [r0, #4]
   18610:	sub	r0, r1, r0
   18614:	cmp	r0, #0
   18618:	bne	18770 <daemon@@Base+0x25f0>
   1861c:	ldr	r1, [sp, #4]
   18620:	ldr	r0, [sp]
   18624:	ldr	r1, [r1, #8]
   18628:	ldr	r0, [r0, #8]
   1862c:	mvn	ip, r1
   18630:	lsr	ip, ip, #31
   18634:	cmp	ip, r0, lsr #31
   18638:	subne	r0, r0, r1
   1863c:	subeq	r0, r1, r0
   18640:	cmp	r0, #0
   18644:	bne	18770 <daemon@@Base+0x25f0>
   18648:	ldr	r1, [sp, #4]
   1864c:	ldr	r0, [sp]
   18650:	ldr	r1, [r1, #4]
   18654:	ldr	r0, [r0, #4]
   18658:	sub	r0, r1, r0
   1865c:	cmp	r0, #0
   18660:	bne	18770 <daemon@@Base+0x25f0>
   18664:	ldr	r1, [r2, #8]
   18668:	ldr	r0, [r3, #8]
   1866c:	mvn	ip, r1
   18670:	lsr	ip, ip, #31
   18674:	cmp	ip, r0, lsr #31
   18678:	subne	r0, r0, r1
   1867c:	subeq	r0, r1, r0
   18680:	cmp	r0, #0
   18684:	bne	18770 <daemon@@Base+0x25f0>
   18688:	ldr	r2, [r2, #4]
   1868c:	ldr	r0, [r3, #4]
   18690:	sub	r0, r2, r0
   18694:	cmp	r0, #0
   18698:	bne	18770 <daemon@@Base+0x25f0>
   1869c:	ldr	r3, [fp, #8]
   186a0:	ldr	r0, [sl, #8]
   186a4:	mvn	r2, r3
   186a8:	lsr	r2, r2, #31
   186ac:	cmp	r2, r0, lsr #31
   186b0:	subne	r0, r0, r3
   186b4:	subeq	r0, r3, r0
   186b8:	cmp	r0, #0
   186bc:	bne	18770 <daemon@@Base+0x25f0>
   186c0:	ldr	r3, [fp, #4]
   186c4:	ldr	r0, [sl, #4]
   186c8:	sub	r0, r3, r0
   186cc:	cmp	r0, #0
   186d0:	bne	18770 <daemon@@Base+0x25f0>
   186d4:	ldr	r3, [r9, #8]
   186d8:	ldr	r0, [r8, #8]
   186dc:	mvn	r2, r3
   186e0:	lsr	r2, r2, #31
   186e4:	cmp	r2, r0, lsr #31
   186e8:	subne	r0, r0, r3
   186ec:	subeq	r0, r3, r0
   186f0:	cmp	r0, #0
   186f4:	bne	18770 <daemon@@Base+0x25f0>
   186f8:	ldr	r3, [r9, #4]
   186fc:	ldr	r0, [r8, #4]
   18700:	sub	r0, r3, r0
   18704:	cmp	r0, #0
   18708:	bne	18770 <daemon@@Base+0x25f0>
   1870c:	ldr	r3, [r7, #8]
   18710:	ldr	r0, [r6, #8]
   18714:	mvn	r2, r3
   18718:	lsr	r2, r2, #31
   1871c:	cmp	r2, r0, lsr #31
   18720:	subne	r0, r0, r3
   18724:	subeq	r0, r3, r0
   18728:	cmp	r0, #0
   1872c:	bne	18770 <daemon@@Base+0x25f0>
   18730:	ldr	r3, [r7, #4]
   18734:	ldr	r0, [r6, #4]
   18738:	sub	r0, r3, r0
   1873c:	cmp	r0, #0
   18740:	bne	18770 <daemon@@Base+0x25f0>
   18744:	ldr	r3, [r5, #8]
   18748:	ldr	r0, [r4, #8]
   1874c:	mvn	r2, r3
   18750:	lsr	r2, r2, #31
   18754:	cmp	r2, r0, lsr #31
   18758:	subne	r0, r0, r3
   1875c:	subeq	r0, r3, r0
   18760:	cmp	r0, #0
   18764:	ldreq	r3, [r5, #4]
   18768:	ldreq	r0, [r4, #4]
   1876c:	subeq	r0, r3, r0
   18770:	add	sp, sp, #28
   18774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18778:	ldr	r3, [r7, #8]
   1877c:	ldr	r0, [r6, #8]
   18780:	mvn	r2, r3
   18784:	ldr	r1, [r7, #4]
   18788:	lsr	r2, r2, #31
   1878c:	cmp	r2, r0, lsr #31
   18790:	subne	r0, r0, r3
   18794:	subeq	r0, r3, r0
   18798:	ldr	r2, [r6, #4]
   1879c:	cmp	r0, #0
   187a0:	subeq	r0, r1, r2
   187a4:	beq	1873c <daemon@@Base+0x25bc>
   187a8:	add	sp, sp, #28
   187ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187b0:	ldr	r2, [r1, #8]
   187b4:	ldr	r3, [r0, #8]
   187b8:	mvn	ip, r2
   187bc:	ldr	lr, [r1, #4]
   187c0:	lsr	ip, ip, #31
   187c4:	cmp	ip, r3, lsr #31
   187c8:	ldr	r1, [r0, #4]
   187cc:	subne	r0, r3, r2
   187d0:	subeq	r0, r2, r3
   187d4:	cmp	r0, #0
   187d8:	subeq	r0, lr, r1
   187dc:	add	sp, sp, #28
   187e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187e4:	ldr	r1, [r2, #8]
   187e8:	ldr	r0, [r3, #8]
   187ec:	mvn	ip, r1
   187f0:	ldr	r2, [r2, #4]
   187f4:	lsr	ip, ip, #31
   187f8:	cmp	ip, r0, lsr #31
   187fc:	subne	r0, r0, r1
   18800:	subeq	r0, r1, r0
   18804:	ldr	r3, [r3, #4]
   18808:	cmp	r0, #0
   1880c:	subeq	r0, r2, r3
   18810:	beq	18694 <daemon@@Base+0x2514>
   18814:	b	18770 <daemon@@Base+0x25f0>
   18818:	ldr	r3, [r9, #8]
   1881c:	ldr	r0, [r8, #8]
   18820:	mvn	r2, r3
   18824:	ldr	r1, [r9, #4]
   18828:	lsr	r2, r2, #31
   1882c:	cmp	r2, r0, lsr #31
   18830:	subne	r0, r0, r3
   18834:	subeq	r0, r3, r0
   18838:	ldr	r2, [r8, #4]
   1883c:	cmp	r0, #0
   18840:	subeq	r0, r1, r2
   18844:	beq	18704 <daemon@@Base+0x2584>
   18848:	b	18770 <daemon@@Base+0x25f0>
   1884c:	ldr	r3, [fp, #8]
   18850:	ldr	r0, [sl, #8]
   18854:	mvn	r2, r3
   18858:	ldr	r1, [fp, #4]
   1885c:	lsr	r2, r2, #31
   18860:	cmp	r2, r0, lsr #31
   18864:	subne	r0, r0, r3
   18868:	subeq	r0, r3, r0
   1886c:	ldr	r2, [sl, #4]
   18870:	cmp	r0, #0
   18874:	subeq	r0, r1, r2
   18878:	beq	186cc <daemon@@Base+0x254c>
   1887c:	b	18770 <daemon@@Base+0x25f0>
   18880:	ldr	ip, [sp, #4]
   18884:	ldr	r1, [sp]
   18888:	ldr	lr, [ip, #8]
   1888c:	ldr	r0, [r1, #8]
   18890:	mvn	r1, lr
   18894:	ldr	ip, [ip, #4]
   18898:	lsr	r1, r1, #31
   1889c:	cmp	r1, r0, lsr #31
   188a0:	ldr	r1, [sp]
   188a4:	subne	r0, r0, lr
   188a8:	subeq	r0, lr, r0
   188ac:	ldr	r1, [r1, #4]
   188b0:	cmp	r0, #0
   188b4:	subeq	r0, ip, r1
   188b8:	beq	1865c <daemon@@Base+0x24dc>
   188bc:	b	18770 <daemon@@Base+0x25f0>
   188c0:	ldr	ip, [sp, #12]
   188c4:	ldr	r1, [sp, #8]
   188c8:	ldr	lr, [ip, #8]
   188cc:	ldr	r0, [r1, #8]
   188d0:	mvn	r1, lr
   188d4:	ldr	ip, [ip, #4]
   188d8:	lsr	r1, r1, #31
   188dc:	cmp	r1, r0, lsr #31
   188e0:	ldr	r1, [sp, #8]
   188e4:	subne	r0, r0, lr
   188e8:	subeq	r0, lr, r0
   188ec:	ldr	r1, [r1, #4]
   188f0:	cmp	r0, #0
   188f4:	subeq	r0, ip, r1
   188f8:	beq	18614 <daemon@@Base+0x2494>
   188fc:	b	18770 <daemon@@Base+0x25f0>
   18900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18904:	mov	r6, r1
   18908:	ldr	r4, [r0, #16]
   1890c:	sub	sp, sp, #28
   18910:	cmp	r4, #0
   18914:	movne	r2, r4
   18918:	bne	18924 <daemon@@Base+0x27a4>
   1891c:	b	18f4c <daemon@@Base+0x2dcc>
   18920:	mov	r2, r3
   18924:	ldr	r3, [r2, #12]
   18928:	cmp	r3, #0
   1892c:	bne	18920 <daemon@@Base+0x27a0>
   18930:	ldr	r5, [r6, #16]
   18934:	ldr	ip, [r2, #8]
   18938:	cmp	r5, #0
   1893c:	movne	r2, r5
   18940:	bne	1894c <daemon@@Base+0x27cc>
   18944:	b	18f60 <daemon@@Base+0x2de0>
   18948:	mov	r2, r3
   1894c:	ldr	r3, [r2, #12]
   18950:	cmp	r3, #0
   18954:	bne	18948 <daemon@@Base+0x27c8>
   18958:	ldr	r3, [r2, #8]
   1895c:	mvn	r2, r3
   18960:	lsr	r2, r2, #31
   18964:	cmp	r2, ip, lsr #31
   18968:	subne	r1, ip, r3
   1896c:	subeq	r1, r3, ip
   18970:	cmp	r1, #0
   18974:	bne	18af0 <daemon@@Base+0x2970>
   18978:	adds	r1, r5, #0
   1897c:	movne	r1, #1
   18980:	cmp	r4, #0
   18984:	rsbeq	r1, r1, #0
   18988:	rsbne	r1, r1, #1
   1898c:	cmp	r1, #0
   18990:	bne	18af0 <daemon@@Base+0x2970>
   18994:	cmp	r4, #0
   18998:	mov	fp, r0
   1899c:	beq	18ce8 <daemon@@Base+0x2b68>
   189a0:	ldr	r1, [r4, #20]
   189a4:	ldr	r2, [r5, #20]
   189a8:	cmp	r1, r2
   189ac:	bgt	18afc <daemon@@Base+0x297c>
   189b0:	bge	18c94 <daemon@@Base+0x2b14>
   189b4:	ldr	r5, [r5, #12]
   189b8:	ldr	r3, [r5, #20]
   189bc:	cmp	r1, r3
   189c0:	blt	189b4 <daemon@@Base+0x2834>
   189c4:	ldr	r6, [r4, #12]
   189c8:	ldr	r7, [r5, #12]
   189cc:	cmp	r6, r7
   189d0:	beq	191d0 <daemon@@Base+0x3050>
   189d4:	ldr	r8, [r6, #12]
   189d8:	ldr	r9, [r7, #12]
   189dc:	cmp	r8, r9
   189e0:	beq	19108 <daemon@@Base+0x2f88>
   189e4:	ldr	sl, [r8, #12]
   189e8:	ldr	fp, [r9, #12]
   189ec:	cmp	sl, fp
   189f0:	beq	19238 <daemon@@Base+0x30b8>
   189f4:	ldr	r0, [sl, #12]
   189f8:	ldr	r1, [fp, #12]
   189fc:	cmp	r0, r1
   18a00:	beq	192e4 <daemon@@Base+0x3164>
   18a04:	bl	18524 <daemon@@Base+0x23a4>
   18a08:	subs	r1, r0, #0
   18a0c:	bne	18af0 <daemon@@Base+0x2970>
   18a10:	ldr	r1, [fp, #8]
   18a14:	ldr	r3, [sl, #8]
   18a18:	mvn	r2, r1
   18a1c:	lsr	r2, r2, #31
   18a20:	cmp	r2, r3, lsr #31
   18a24:	subne	r1, r3, r1
   18a28:	subeq	r1, r1, r3
   18a2c:	cmp	r1, #0
   18a30:	bne	18af0 <daemon@@Base+0x2970>
   18a34:	ldr	r1, [fp, #4]
   18a38:	ldr	r3, [sl, #4]
   18a3c:	sub	r1, r1, r3
   18a40:	cmp	r1, #0
   18a44:	bne	18af0 <daemon@@Base+0x2970>
   18a48:	ldr	r1, [r9, #8]
   18a4c:	ldr	r3, [r8, #8]
   18a50:	mvn	r2, r1
   18a54:	lsr	r2, r2, #31
   18a58:	cmp	r2, r3, lsr #31
   18a5c:	subne	r1, r3, r1
   18a60:	subeq	r1, r1, r3
   18a64:	cmp	r1, #0
   18a68:	bne	18af0 <daemon@@Base+0x2970>
   18a6c:	ldr	r1, [r9, #4]
   18a70:	ldr	r3, [r8, #4]
   18a74:	sub	r1, r1, r3
   18a78:	cmp	r1, #0
   18a7c:	bne	18af0 <daemon@@Base+0x2970>
   18a80:	ldr	r1, [r7, #8]
   18a84:	ldr	r3, [r6, #8]
   18a88:	mvn	r2, r1
   18a8c:	lsr	r2, r2, #31
   18a90:	cmp	r2, r3, lsr #31
   18a94:	subne	r1, r3, r1
   18a98:	subeq	r1, r1, r3
   18a9c:	cmp	r1, #0
   18aa0:	bne	18af0 <daemon@@Base+0x2970>
   18aa4:	ldr	r1, [r7, #4]
   18aa8:	ldr	r3, [r6, #4]
   18aac:	sub	r1, r1, r3
   18ab0:	cmp	r1, #0
   18ab4:	bne	18af0 <daemon@@Base+0x2970>
   18ab8:	ldr	r1, [r5, #8]
   18abc:	ldr	r3, [r4, #8]
   18ac0:	mvn	r2, r1
   18ac4:	lsr	r2, r2, #31
   18ac8:	cmp	r2, r3, lsr #31
   18acc:	subne	r1, r3, r1
   18ad0:	subeq	r1, r1, r3
   18ad4:	cmp	r1, #0
   18ad8:	bne	18af0 <daemon@@Base+0x2970>
   18adc:	ldr	r1, [r5, #4]
   18ae0:	ldr	r3, [r4, #4]
   18ae4:	sub	r1, r1, r3
   18ae8:	cmp	r1, #0
   18aec:	mvneq	r1, #0
   18af0:	mov	r0, r1
   18af4:	add	sp, sp, #28
   18af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18afc:	ldr	r4, [r4, #12]
   18b00:	ldr	r3, [r4, #20]
   18b04:	cmp	r2, r3
   18b08:	blt	18afc <daemon@@Base+0x297c>
   18b0c:	ldr	r6, [r4, #12]
   18b10:	ldr	r7, [r5, #12]
   18b14:	cmp	r6, r7
   18b18:	beq	19170 <daemon@@Base+0x2ff0>
   18b1c:	ldr	r8, [r6, #12]
   18b20:	ldr	r9, [r7, #12]
   18b24:	cmp	r8, r9
   18b28:	beq	19204 <daemon@@Base+0x3084>
   18b2c:	ldr	sl, [r8, #12]
   18b30:	ldr	fp, [r9, #12]
   18b34:	cmp	sl, fp
   18b38:	beq	1913c <daemon@@Base+0x2fbc>
   18b3c:	ldr	r3, [sl, #12]
   18b40:	ldr	r2, [fp, #12]
   18b44:	cmp	r3, r2
   18b48:	beq	1926c <daemon@@Base+0x30ec>
   18b4c:	ldr	r0, [r3, #12]
   18b50:	ldr	r1, [r2, #12]
   18b54:	cmp	r0, r1
   18b58:	beq	19318 <daemon@@Base+0x3198>
   18b5c:	str	r2, [sp, #8]
   18b60:	str	r3, [sp, #4]
   18b64:	bl	18524 <daemon@@Base+0x23a4>
   18b68:	subs	r1, r0, #0
   18b6c:	bne	18af0 <daemon@@Base+0x2970>
   18b70:	ldr	r2, [sp, #8]
   18b74:	ldr	r3, [sp, #4]
   18b78:	ldr	r0, [r2, #8]
   18b7c:	ldr	r1, [r3, #8]
   18b80:	mvn	ip, r0
   18b84:	lsr	ip, ip, #31
   18b88:	cmp	ip, r1, lsr #31
   18b8c:	subne	r1, r1, r0
   18b90:	subeq	r1, r0, r1
   18b94:	cmp	r1, #0
   18b98:	bne	18af0 <daemon@@Base+0x2970>
   18b9c:	ldr	r1, [r2, #4]
   18ba0:	ldr	r3, [r3, #4]
   18ba4:	sub	r1, r1, r3
   18ba8:	cmp	r1, #0
   18bac:	bne	18af0 <daemon@@Base+0x2970>
   18bb0:	ldr	r1, [fp, #8]
   18bb4:	ldr	r3, [sl, #8]
   18bb8:	mvn	r2, r1
   18bbc:	lsr	r2, r2, #31
   18bc0:	cmp	r2, r3, lsr #31
   18bc4:	subne	r1, r3, r1
   18bc8:	subeq	r1, r1, r3
   18bcc:	cmp	r1, #0
   18bd0:	bne	18af0 <daemon@@Base+0x2970>
   18bd4:	ldr	r1, [fp, #4]
   18bd8:	ldr	r3, [sl, #4]
   18bdc:	sub	r1, r1, r3
   18be0:	cmp	r1, #0
   18be4:	bne	18af0 <daemon@@Base+0x2970>
   18be8:	ldr	r1, [r9, #8]
   18bec:	ldr	r3, [r8, #8]
   18bf0:	mvn	r2, r1
   18bf4:	lsr	r2, r2, #31
   18bf8:	cmp	r2, r3, lsr #31
   18bfc:	subne	r1, r3, r1
   18c00:	subeq	r1, r1, r3
   18c04:	cmp	r1, #0
   18c08:	bne	18af0 <daemon@@Base+0x2970>
   18c0c:	ldr	r1, [r9, #4]
   18c10:	ldr	r3, [r8, #4]
   18c14:	sub	r1, r1, r3
   18c18:	cmp	r1, #0
   18c1c:	bne	18af0 <daemon@@Base+0x2970>
   18c20:	ldr	r1, [r7, #8]
   18c24:	ldr	r3, [r6, #8]
   18c28:	mvn	r2, r1
   18c2c:	lsr	r2, r2, #31
   18c30:	cmp	r2, r3, lsr #31
   18c34:	subne	r1, r3, r1
   18c38:	subeq	r1, r1, r3
   18c3c:	cmp	r1, #0
   18c40:	bne	18af0 <daemon@@Base+0x2970>
   18c44:	ldr	r1, [r7, #4]
   18c48:	ldr	r3, [r6, #4]
   18c4c:	sub	r1, r1, r3
   18c50:	cmp	r1, #0
   18c54:	bne	18af0 <daemon@@Base+0x2970>
   18c58:	ldr	r1, [r5, #8]
   18c5c:	ldr	r3, [r4, #8]
   18c60:	mvn	r2, r1
   18c64:	lsr	r2, r2, #31
   18c68:	cmp	r2, r3, lsr #31
   18c6c:	subne	r1, r3, r1
   18c70:	subeq	r1, r1, r3
   18c74:	cmp	r1, #0
   18c78:	bne	18af0 <daemon@@Base+0x2970>
   18c7c:	ldr	r1, [r5, #4]
   18c80:	ldr	r3, [r4, #4]
   18c84:	sub	r1, r1, r3
   18c88:	cmp	r1, #0
   18c8c:	moveq	r1, #1
   18c90:	b	18af0 <daemon@@Base+0x2970>
   18c94:	ldr	r0, [r4, #12]
   18c98:	ldr	r1, [r5, #12]
   18c9c:	cmp	r0, r1
   18ca0:	beq	192a0 <daemon@@Base+0x3120>
   18ca4:	bl	18524 <daemon@@Base+0x23a4>
   18ca8:	subs	r1, r0, #0
   18cac:	bne	18af0 <daemon@@Base+0x2970>
   18cb0:	ldr	r1, [r5, #8]
   18cb4:	ldr	r3, [r4, #8]
   18cb8:	mvn	r2, r1
   18cbc:	lsr	r2, r2, #31
   18cc0:	cmp	r2, r3, lsr #31
   18cc4:	subne	r1, r3, r1
   18cc8:	subeq	r1, r1, r3
   18ccc:	cmp	r1, #0
   18cd0:	bne	18af0 <daemon@@Base+0x2970>
   18cd4:	ldr	r1, [r5, #4]
   18cd8:	ldr	r3, [r4, #4]
   18cdc:	sub	r1, r1, r3
   18ce0:	cmp	r1, #0
   18ce4:	bne	18af0 <daemon@@Base+0x2970>
   18ce8:	ldr	r1, [r6, #12]
   18cec:	ldr	r3, [fp, #12]
   18cf0:	mvn	r2, r1
   18cf4:	lsr	r2, r2, #31
   18cf8:	cmp	r2, r3, lsr #31
   18cfc:	subne	r1, r3, r1
   18d00:	subeq	r1, r1, r3
   18d04:	cmp	r1, #0
   18d08:	bne	18af0 <daemon@@Base+0x2970>
   18d0c:	ldm	fp, {r8, r9}
   18d10:	cmp	r9, #0
   18d14:	beq	1934c <daemon@@Base+0x31cc>
   18d18:	add	r3, r8, #24
   18d1c:	mov	r2, r9
   18d20:	ldr	r4, [r3, #-24]	; 0xffffffe8
   18d24:	cmp	r4, #0
   18d28:	beq	18d38 <daemon@@Base+0x2bb8>
   18d2c:	ldr	r0, [r3, #-12]
   18d30:	tst	r0, #2
   18d34:	beq	18d48 <daemon@@Base+0x2bc8>
   18d38:	subs	r2, r2, #1
   18d3c:	add	r3, r3, #24
   18d40:	bne	18d20 <daemon@@Base+0x2ba0>
   18d44:	mov	r4, r2
   18d48:	ldm	r6, {r7, sl}
   18d4c:	cmp	sl, #0
   18d50:	beq	19354 <daemon@@Base+0x31d4>
   18d54:	add	r3, r7, #24
   18d58:	mov	r2, sl
   18d5c:	ldr	r5, [r3, #-24]	; 0xffffffe8
   18d60:	cmp	r5, #0
   18d64:	beq	18d74 <daemon@@Base+0x2bf4>
   18d68:	ldr	r0, [r3, #-12]
   18d6c:	tst	r0, #2
   18d70:	beq	18d84 <daemon@@Base+0x2c04>
   18d74:	subs	r2, r2, #1
   18d78:	add	r3, r3, #24
   18d7c:	bne	18d5c <daemon@@Base+0x2bdc>
   18d80:	mov	r5, r2
   18d84:	ldr	r3, [r8, #12]
   18d88:	tst	r3, #8
   18d8c:	beq	18df8 <daemon@@Base+0x2c78>
   18d90:	cmp	r4, #0
   18d94:	beq	18df8 <daemon@@Base+0x2c78>
   18d98:	str	r1, [sp, #4]
   18d9c:	bl	118f4 <__ctype_b_loc@plt>
   18da0:	ldr	r1, [sp, #4]
   18da4:	mov	ip, r4
   18da8:	ldr	r0, [r0]
   18dac:	ldrb	r2, [ip]
   18db0:	mov	r4, ip
   18db4:	add	ip, ip, #1
   18db8:	lsl	r3, r2, #1
   18dbc:	ldrh	r3, [r0, r3]
   18dc0:	tst	r3, #8192	; 0x2000
   18dc4:	bne	18dac <daemon@@Base+0x2c2c>
   18dc8:	cmp	r2, #0
   18dcc:	bne	18de8 <daemon@@Base+0x2c68>
   18dd0:	b	190f4 <daemon@@Base+0x2f74>
   18dd4:	ldrb	r3, [r4, #1]!
   18dd8:	cmp	r3, #0
   18ddc:	lsl	r3, r3, #1
   18de0:	beq	18df0 <daemon@@Base+0x2c70>
   18de4:	ldrh	r3, [r0, r3]
   18de8:	tst	r3, #8
   18dec:	beq	18dd4 <daemon@@Base+0x2c54>
   18df0:	cmp	r2, #45	; 0x2d
   18df4:	bne	190f4 <daemon@@Base+0x2f74>
   18df8:	ldr	r3, [r7, #12]
   18dfc:	tst	r3, #8
   18e00:	beq	18e8c <daemon@@Base+0x2d0c>
   18e04:	cmp	r5, #0
   18e08:	movne	r2, r1
   18e0c:	beq	18e8c <daemon@@Base+0x2d0c>
   18e10:	str	r1, [sp, #8]
   18e14:	str	r2, [sp, #4]
   18e18:	bl	118f4 <__ctype_b_loc@plt>
   18e1c:	ldr	r2, [sp, #4]
   18e20:	ldr	r1, [sp, #8]
   18e24:	mov	r3, r5
   18e28:	ldr	ip, [r0]
   18e2c:	ldrb	r0, [r3]
   18e30:	mov	r5, r3
   18e34:	add	r3, r3, #1
   18e38:	lsl	lr, r0, #1
   18e3c:	ldrh	lr, [ip, lr]
   18e40:	tst	lr, #8192	; 0x2000
   18e44:	bne	18e2c <daemon@@Base+0x2cac>
   18e48:	cmp	r0, #0
   18e4c:	beq	18e78 <daemon@@Base+0x2cf8>
   18e50:	tst	lr, #8
   18e54:	beq	18e68 <daemon@@Base+0x2ce8>
   18e58:	b	18e78 <daemon@@Base+0x2cf8>
   18e5c:	ldrh	r3, [ip, r3]
   18e60:	tst	r3, #8
   18e64:	bne	18e78 <daemon@@Base+0x2cf8>
   18e68:	ldrb	r3, [r5, #1]!
   18e6c:	cmp	r3, #0
   18e70:	lsl	r3, r3, #1
   18e74:	bne	18e5c <daemon@@Base+0x2cdc>
   18e78:	cmp	r0, #45	; 0x2d
   18e7c:	subne	r2, r2, #1
   18e80:	cmp	r2, #0
   18e84:	movne	r1, r2
   18e88:	bne	18af0 <daemon@@Base+0x2970>
   18e8c:	ldr	r3, [fp, #8]
   18e90:	cmp	r9, #0
   18e94:	mov	r2, r3
   18e98:	beq	1935c <daemon@@Base+0x31dc>
   18e9c:	str	r7, [sp, #16]
   18ea0:	str	r6, [sp, #20]
   18ea4:	mov	r3, #1
   18ea8:	str	r4, [sp, #8]
   18eac:	str	r5, [sp, #12]
   18eb0:	mov	r7, r1
   18eb4:	mov	r6, r2
   18eb8:	b	18ed4 <daemon@@Base+0x2d54>
   18ebc:	subs	r9, r9, #1
   18ec0:	moveq	ip, #0
   18ec4:	andne	ip, ip, #1
   18ec8:	cmp	ip, #0
   18ecc:	add	r8, r8, #24
   18ed0:	beq	18f68 <daemon@@Base+0x2de8>
   18ed4:	ldr	r4, [r8, #12]
   18ed8:	mov	ip, r3
   18edc:	ands	fp, r4, #8
   18ee0:	movne	fp, r7
   18ee4:	bne	18ebc <daemon@@Base+0x2d3c>
   18ee8:	ldr	r5, [r8, #4]
   18eec:	sub	r0, r5, #1
   18ef0:	cmp	r0, #254	; 0xfe
   18ef4:	bhi	18ebc <daemon@@Base+0x2d3c>
   18ef8:	str	r3, [sp, #4]
   18efc:	bl	118f4 <__ctype_b_loc@plt>
   18f00:	lsl	lr, r5, #1
   18f04:	ldr	r3, [sp, #4]
   18f08:	mov	ip, r3
   18f0c:	ldr	r0, [r0]
   18f10:	ldrh	r0, [r0, lr]
   18f14:	tst	r0, #16384	; 0x4000
   18f18:	beq	18ebc <daemon@@Base+0x2d3c>
   18f1c:	ldrb	r0, [r6]
   18f20:	mov	ip, r3
   18f24:	cmp	r5, r0
   18f28:	bne	18ebc <daemon@@Base+0x2d3c>
   18f2c:	and	r4, r4, #10
   18f30:	cmp	r4, #0
   18f34:	moveq	fp, r5
   18f38:	movne	fp, #0
   18f3c:	add	r6, r6, #1
   18f40:	movne	ip, #1
   18f44:	moveq	ip, #0
   18f48:	b	18ebc <daemon@@Base+0x2d3c>
   18f4c:	ldr	r5, [r6, #16]
   18f50:	ldr	ip, [r0, #12]
   18f54:	cmp	r5, #0
   18f58:	movne	r2, r5
   18f5c:	bne	1894c <daemon@@Base+0x27cc>
   18f60:	ldr	r3, [r6, #12]
   18f64:	b	1895c <daemon@@Base+0x27dc>
   18f68:	mov	r3, fp
   18f6c:	ldr	r6, [sp, #20]
   18f70:	uxtb	r3, r3
   18f74:	cmp	sl, #0
   18f78:	str	fp, [sp, #4]
   18f7c:	mov	r1, r7
   18f80:	ldr	r4, [sp, #8]
   18f84:	ldr	r7, [sp, #16]
   18f88:	ldr	r5, [sp, #12]
   18f8c:	ldr	fp, [r6, #8]
   18f90:	str	r3, [sp, #16]
   18f94:	beq	191a4 <daemon@@Base+0x3024>
   18f98:	str	r4, [sp, #8]
   18f9c:	mov	r8, #1
   18fa0:	str	r5, [sp, #12]
   18fa4:	mov	r4, r1
   18fa8:	b	18fc4 <daemon@@Base+0x2e44>
   18fac:	subs	sl, sl, #1
   18fb0:	moveq	r3, #0
   18fb4:	andne	r3, r3, #1
   18fb8:	cmp	r3, #0
   18fbc:	add	r7, r7, #24
   18fc0:	beq	19030 <daemon@@Base+0x2eb0>
   18fc4:	ldr	r6, [r7, #12]
   18fc8:	mov	r3, r8
   18fcc:	ands	r9, r6, #8
   18fd0:	movne	r9, r4
   18fd4:	bne	18fac <daemon@@Base+0x2e2c>
   18fd8:	ldr	r5, [r7, #4]
   18fdc:	sub	r0, r5, #1
   18fe0:	cmp	r0, #254	; 0xfe
   18fe4:	bhi	18fac <daemon@@Base+0x2e2c>
   18fe8:	bl	118f4 <__ctype_b_loc@plt>
   18fec:	lsl	ip, r5, #1
   18ff0:	mov	r3, r8
   18ff4:	ldr	r0, [r0]
   18ff8:	ldrh	r0, [r0, ip]
   18ffc:	tst	r0, #16384	; 0x4000
   19000:	beq	18fac <daemon@@Base+0x2e2c>
   19004:	ldrb	r0, [fp]
   19008:	mov	r3, r8
   1900c:	cmp	r5, r0
   19010:	bne	18fac <daemon@@Base+0x2e2c>
   19014:	and	r6, r6, #2
   19018:	cmp	r6, #0
   1901c:	moveq	r9, r5
   19020:	add	fp, fp, #1
   19024:	movne	r3, #1
   19028:	moveq	r3, #0
   1902c:	b	18fac <daemon@@Base+0x2e2c>
   19030:	mov	r1, r4
   19034:	ldmib	sp, {r3, r4}
   19038:	ldr	r5, [sp, #12]
   1903c:	uxtb	r6, r9
   19040:	cmp	r3, #0
   19044:	beq	190e0 <daemon@@Base+0x2f60>
   19048:	ldr	r3, [sp, #16]
   1904c:	mov	r7, r3
   19050:	lsl	r8, r3, #2
   19054:	cmp	r9, #0
   19058:	beq	191bc <daemon@@Base+0x303c>
   1905c:	lsl	sl, r6, #2
   19060:	bl	118c4 <__ctype_tolower_loc@plt>
   19064:	ldr	r3, [r0]
   19068:	ldr	r1, [r3, r8]
   1906c:	ldr	r3, [r3, sl]
   19070:	subs	r1, r1, r3
   19074:	bne	18af0 <daemon@@Base+0x2970>
   19078:	subs	r1, r6, r7
   1907c:	bne	18af0 <daemon@@Base+0x2970>
   19080:	adds	r1, r9, #0
   19084:	ldr	r3, [sp, #4]
   19088:	movne	r1, #1
   1908c:	cmp	r3, #0
   19090:	rsbeq	r1, r1, #0
   19094:	rsbne	r1, r1, #1
   19098:	cmp	r1, #0
   1909c:	bne	18af0 <daemon@@Base+0x2970>
   190a0:	cmp	r3, #0
   190a4:	bne	18af0 <daemon@@Base+0x2970>
   190a8:	adds	r1, r5, #0
   190ac:	movne	r1, #1
   190b0:	cmp	r4, #0
   190b4:	rsbeq	r1, r1, #0
   190b8:	rsbne	r1, r1, #1
   190bc:	cmp	r1, #0
   190c0:	bne	18af0 <daemon@@Base+0x2970>
   190c4:	cmp	r4, #0
   190c8:	beq	18af0 <daemon@@Base+0x2970>
   190cc:	mov	r1, r5
   190d0:	mov	r0, r4
   190d4:	add	sp, sp, #28
   190d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190dc:	b	11804 <strcasecmp@plt>
   190e0:	cmp	r4, #0
   190e4:	beq	19388 <daemon@@Base+0x3208>
   190e8:	ldrb	r7, [r4]
   190ec:	lsl	r8, r7, #2
   190f0:	b	19054 <daemon@@Base+0x2ed4>
   190f4:	ldr	r3, [r7, #12]
   190f8:	tst	r3, #8
   190fc:	bne	192d4 <daemon@@Base+0x3154>
   19100:	mov	r1, #1
   19104:	b	18af0 <daemon@@Base+0x2970>
   19108:	ldr	r1, [r7, #8]
   1910c:	ldr	r3, [r6, #8]
   19110:	mvn	r2, r1
   19114:	ldr	r0, [r7, #4]
   19118:	lsr	r2, r2, #31
   1911c:	cmp	r2, r3, lsr #31
   19120:	subne	r1, r3, r1
   19124:	subeq	r1, r1, r3
   19128:	ldr	r2, [r6, #4]
   1912c:	cmp	r1, #0
   19130:	subeq	r1, r0, r2
   19134:	beq	18ab0 <daemon@@Base+0x2930>
   19138:	b	18af0 <daemon@@Base+0x2970>
   1913c:	ldr	r1, [r9, #8]
   19140:	ldr	r3, [r8, #8]
   19144:	mvn	r2, r1
   19148:	ldr	r0, [r9, #4]
   1914c:	lsr	r2, r2, #31
   19150:	cmp	r2, r3, lsr #31
   19154:	subne	r1, r3, r1
   19158:	subeq	r1, r1, r3
   1915c:	ldr	r2, [r8, #4]
   19160:	cmp	r1, #0
   19164:	subeq	r1, r0, r2
   19168:	beq	18c18 <daemon@@Base+0x2a98>
   1916c:	b	18af0 <daemon@@Base+0x2970>
   19170:	ldr	r1, [r5, #8]
   19174:	ldr	r3, [r4, #8]
   19178:	mvn	r2, r1
   1917c:	ldr	r0, [r5, #4]
   19180:	lsr	r2, r2, #31
   19184:	cmp	r2, r3, lsr #31
   19188:	subne	r1, r3, r1
   1918c:	subeq	r1, r1, r3
   19190:	ldr	r2, [r4, #4]
   19194:	cmp	r1, #0
   19198:	subeq	r1, r0, r2
   1919c:	beq	18c88 <daemon@@Base+0x2b08>
   191a0:	b	18af0 <daemon@@Base+0x2970>
   191a4:	ldr	r3, [sp, #4]
   191a8:	cmp	r3, #0
   191ac:	beq	19394 <daemon@@Base+0x3214>
   191b0:	ldr	r3, [sp, #16]
   191b4:	mov	r7, r3
   191b8:	lsl	r8, r3, #2
   191bc:	cmp	r5, #0
   191c0:	beq	19378 <daemon@@Base+0x31f8>
   191c4:	ldrb	r6, [r5]
   191c8:	mov	r9, r1
   191cc:	b	1905c <daemon@@Base+0x2edc>
   191d0:	ldr	r1, [r5, #8]
   191d4:	ldr	r3, [r4, #8]
   191d8:	mvn	r2, r1
   191dc:	ldr	r0, [r5, #4]
   191e0:	lsr	r2, r2, #31
   191e4:	cmp	r2, r3, lsr #31
   191e8:	subne	r1, r3, r1
   191ec:	subeq	r1, r1, r3
   191f0:	ldr	r2, [r4, #4]
   191f4:	cmp	r1, #0
   191f8:	subeq	r1, r0, r2
   191fc:	beq	18ae8 <daemon@@Base+0x2968>
   19200:	b	18af0 <daemon@@Base+0x2970>
   19204:	ldr	r1, [r7, #8]
   19208:	ldr	r3, [r6, #8]
   1920c:	mvn	r2, r1
   19210:	ldr	r0, [r7, #4]
   19214:	lsr	r2, r2, #31
   19218:	cmp	r2, r3, lsr #31
   1921c:	subne	r1, r3, r1
   19220:	subeq	r1, r1, r3
   19224:	ldr	r2, [r6, #4]
   19228:	cmp	r1, #0
   1922c:	subeq	r1, r0, r2
   19230:	beq	18c50 <daemon@@Base+0x2ad0>
   19234:	b	18af0 <daemon@@Base+0x2970>
   19238:	ldr	r1, [r9, #8]
   1923c:	ldr	r3, [r8, #8]
   19240:	mvn	r2, r1
   19244:	ldr	r0, [r9, #4]
   19248:	lsr	r2, r2, #31
   1924c:	cmp	r2, r3, lsr #31
   19250:	subne	r1, r3, r1
   19254:	subeq	r1, r1, r3
   19258:	ldr	r2, [r8, #4]
   1925c:	cmp	r1, #0
   19260:	subeq	r1, r0, r2
   19264:	beq	18a78 <daemon@@Base+0x28f8>
   19268:	b	18af0 <daemon@@Base+0x2970>
   1926c:	ldr	r1, [fp, #8]
   19270:	ldr	r3, [sl, #8]
   19274:	mvn	r2, r1
   19278:	ldr	r0, [fp, #4]
   1927c:	lsr	r2, r2, #31
   19280:	cmp	r2, r3, lsr #31
   19284:	subne	r1, r3, r1
   19288:	subeq	r1, r1, r3
   1928c:	ldr	r2, [sl, #4]
   19290:	cmp	r1, #0
   19294:	subeq	r1, r0, r2
   19298:	beq	18be0 <daemon@@Base+0x2a60>
   1929c:	b	18af0 <daemon@@Base+0x2970>
   192a0:	ldr	r1, [r5, #8]
   192a4:	ldr	r3, [r4, #8]
   192a8:	mvn	r2, r1
   192ac:	ldr	r0, [r5, #4]
   192b0:	lsr	r2, r2, #31
   192b4:	cmp	r2, r3, lsr #31
   192b8:	subne	r1, r3, r1
   192bc:	subeq	r1, r1, r3
   192c0:	ldr	r2, [r4, #4]
   192c4:	cmp	r1, #0
   192c8:	subeq	r1, r0, r2
   192cc:	beq	18ce0 <daemon@@Base+0x2b60>
   192d0:	b	18af0 <daemon@@Base+0x2970>
   192d4:	cmp	r5, #0
   192d8:	beq	19100 <daemon@@Base+0x2f80>
   192dc:	mov	r2, #1
   192e0:	b	18e10 <daemon@@Base+0x2c90>
   192e4:	ldr	r1, [fp, #8]
   192e8:	ldr	r3, [sl, #8]
   192ec:	mvn	r2, r1
   192f0:	ldr	r0, [fp, #4]
   192f4:	lsr	r2, r2, #31
   192f8:	cmp	r2, r3, lsr #31
   192fc:	subne	r1, r3, r1
   19300:	subeq	r1, r1, r3
   19304:	ldr	r2, [sl, #4]
   19308:	cmp	r1, #0
   1930c:	subeq	r1, r0, r2
   19310:	beq	18a40 <daemon@@Base+0x28c0>
   19314:	b	18af0 <daemon@@Base+0x2970>
   19318:	ldr	r0, [r2, #8]
   1931c:	ldr	r1, [r3, #8]
   19320:	mvn	ip, r0
   19324:	ldr	r2, [r2, #4]
   19328:	lsr	ip, ip, #31
   1932c:	cmp	ip, r1, lsr #31
   19330:	subne	r1, r1, r0
   19334:	subeq	r1, r0, r1
   19338:	ldr	r3, [r3, #4]
   1933c:	cmp	r1, #0
   19340:	subeq	r1, r2, r3
   19344:	beq	18ba8 <daemon@@Base+0x2a28>
   19348:	b	18af0 <daemon@@Base+0x2970>
   1934c:	mov	r4, r1
   19350:	b	18d48 <daemon@@Base+0x2bc8>
   19354:	mov	r5, sl
   19358:	b	18d84 <daemon@@Base+0x2c04>
   1935c:	cmp	sl, #0
   19360:	ldr	fp, [r6, #8]
   19364:	streq	r1, [sp, #4]
   19368:	beq	19394 <daemon@@Base+0x3214>
   1936c:	str	r9, [sp, #16]
   19370:	str	r1, [sp, #4]
   19374:	b	18f98 <daemon@@Base+0x2e18>
   19378:	mov	r9, r1
   1937c:	mov	sl, r5
   19380:	mov	r6, r5
   19384:	b	19060 <daemon@@Base+0x2ee0>
   19388:	mov	r8, r4
   1938c:	mov	r7, r4
   19390:	b	19054 <daemon@@Base+0x2ed4>
   19394:	cmp	r4, #0
   19398:	moveq	r8, r4
   1939c:	moveq	r7, r4
   193a0:	beq	191bc <daemon@@Base+0x303c>
   193a4:	mov	r9, r1
   193a8:	mov	r6, #0
   193ac:	b	190e8 <daemon@@Base+0x2f68>

000193b0 <argp_failure@@Base>:
   193b0:	push	{r3}		; (str r3, [sp, #-4]!)
   193b4:	push	{r4, r5, r6, r7, lr}
   193b8:	subs	r5, r0, #0
   193bc:	sub	sp, sp, #200	; 0xc8
   193c0:	mov	r7, r1
   193c4:	mov	r6, r2
   193c8:	beq	19518 <argp_failure@@Base+0x168>
   193cc:	ldr	r3, [r5, #16]
   193d0:	tst	r3, #2
   193d4:	bne	19508 <argp_failure@@Base+0x158>
   193d8:	ldr	r4, [r5, #44]	; 0x2c
   193dc:	cmp	r4, #0
   193e0:	beq	19508 <argp_failure@@Base+0x158>
   193e4:	mov	r0, r4
   193e8:	bl	11a50 <flockfile@plt>
   193ec:	ldr	r0, [r5, #40]	; 0x28
   193f0:	mov	r1, r4
   193f4:	bl	11660 <fputs_unlocked@plt>
   193f8:	ldr	r3, [sp, #220]	; 0xdc
   193fc:	cmp	r3, #0
   19400:	beq	1945c <argp_failure@@Base+0xac>
   19404:	ldr	r3, [r4, #20]
   19408:	ldr	r1, [r4, #24]
   1940c:	add	r2, sp, #224	; 0xe0
   19410:	cmp	r3, r1
   19414:	str	r2, [sp]
   19418:	addcc	r1, r3, #1
   1941c:	movcc	r2, #58	; 0x3a
   19420:	strcc	r1, [r4, #20]
   19424:	strbcc	r2, [r3]
   19428:	bcs	19564 <argp_failure@@Base+0x1b4>
   1942c:	ldr	r3, [r4, #20]
   19430:	ldr	r2, [r4, #24]
   19434:	cmp	r3, r2
   19438:	addcc	r1, r3, #1
   1943c:	movcc	r2, #32
   19440:	strcc	r1, [r4, #20]
   19444:	strbcc	r2, [r3]
   19448:	bcs	19554 <argp_failure@@Base+0x1a4>
   1944c:	ldr	r2, [sp]
   19450:	ldr	r1, [sp, #220]	; 0xdc
   19454:	mov	r0, r4
   19458:	bl	11a2c <vfprintf@plt>
   1945c:	cmp	r6, #0
   19460:	beq	194c4 <argp_failure@@Base+0x114>
   19464:	ldr	r3, [r4, #20]
   19468:	ldr	r2, [r4, #24]
   1946c:	cmp	r3, r2
   19470:	addcc	r1, r3, #1
   19474:	movcc	r2, #58	; 0x3a
   19478:	strcc	r1, [r4, #20]
   1947c:	strbcc	r2, [r3]
   19480:	bcs	19584 <argp_failure@@Base+0x1d4>
   19484:	ldr	r3, [r4, #20]
   19488:	ldr	r2, [r4, #24]
   1948c:	cmp	r3, r2
   19490:	addcc	r1, r3, #1
   19494:	movcc	r2, #32
   19498:	strcc	r1, [r4, #20]
   1949c:	strbcc	r2, [r3]
   194a0:	bcs	19574 <argp_failure@@Base+0x1c4>
   194a4:	mov	r2, #200	; 0xc8
   194a8:	mov	r1, sp
   194ac:	mov	r0, r6
   194b0:	bl	11960 <strerror_r@plt>
   194b4:	cmp	r0, #0
   194b8:	beq	19594 <argp_failure@@Base+0x1e4>
   194bc:	mov	r1, r4
   194c0:	bl	11660 <fputs_unlocked@plt>
   194c4:	ldr	r3, [r4, #20]
   194c8:	ldr	r2, [r4, #24]
   194cc:	cmp	r3, r2
   194d0:	addcc	r1, r3, #1
   194d4:	movcc	r2, #10
   194d8:	strcc	r1, [r4, #20]
   194dc:	strbcc	r2, [r3]
   194e0:	bcs	1953c <argp_failure@@Base+0x18c>
   194e4:	mov	r0, r4
   194e8:	bl	11810 <funlockfile@plt>
   194ec:	cmp	r7, #0
   194f0:	beq	19508 <argp_failure@@Base+0x158>
   194f4:	cmp	r5, #0
   194f8:	beq	1954c <argp_failure@@Base+0x19c>
   194fc:	ldr	r3, [r5, #16]
   19500:	tst	r3, #32
   19504:	beq	1954c <argp_failure@@Base+0x19c>
   19508:	add	sp, sp, #200	; 0xc8
   1950c:	pop	{r4, r5, r6, r7, lr}
   19510:	add	sp, sp, #4
   19514:	bx	lr
   19518:	ldr	r3, [pc, #140]	; 195ac <argp_failure@@Base+0x1fc>
   1951c:	ldr	r4, [r3]
   19520:	cmp	r4, #0
   19524:	beq	19508 <argp_failure@@Base+0x158>
   19528:	mov	r0, r4
   1952c:	bl	11a50 <flockfile@plt>
   19530:	ldr	r3, [pc, #120]	; 195b0 <argp_failure@@Base+0x200>
   19534:	ldr	r0, [r3]
   19538:	b	193f0 <argp_failure@@Base+0x40>
   1953c:	mov	r1, #10
   19540:	mov	r0, r4
   19544:	bl	119f0 <__overflow@plt>
   19548:	b	194e4 <argp_failure@@Base+0x134>
   1954c:	mov	r0, r7
   19550:	bl	1190c <exit@plt>
   19554:	mov	r1, #32
   19558:	mov	r0, r4
   1955c:	bl	119f0 <__overflow@plt>
   19560:	b	1944c <argp_failure@@Base+0x9c>
   19564:	mov	r1, #58	; 0x3a
   19568:	mov	r0, r4
   1956c:	bl	119f0 <__overflow@plt>
   19570:	b	1942c <argp_failure@@Base+0x7c>
   19574:	mov	r1, #32
   19578:	mov	r0, r4
   1957c:	bl	119f0 <__overflow@plt>
   19580:	b	194a4 <argp_failure@@Base+0xf4>
   19584:	mov	r1, #58	; 0x3a
   19588:	mov	r0, r4
   1958c:	bl	119f0 <__overflow@plt>
   19590:	b	19484 <argp_failure@@Base+0xd4>
   19594:	mov	r0, r6
   19598:	bl	118b8 <strerror@plt>
   1959c:	ldr	r3, [pc, #16]	; 195b4 <argp_failure@@Base+0x204>
   195a0:	cmp	r0, #0
   195a4:	moveq	r0, r3
   195a8:	b	194bc <argp_failure@@Base+0x10c>
   195ac:	andeq	r3, r3, r8, asr #11
   195b0:	andeq	r3, r3, r0, asr #11
   195b4:	strdeq	r1, [r2], -r8
   195b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195bc:	add	fp, sp, #32
   195c0:	cmp	r2, #0
   195c4:	sub	sp, sp, #116	; 0x74
   195c8:	str	r2, [fp, #-136]	; 0xffffff78
   195cc:	str	r0, [fp, #-116]	; 0xffffff8c
   195d0:	str	r1, [fp, #-104]	; 0xffffff98
   195d4:	str	r3, [fp, #-100]	; 0xffffff9c
   195d8:	beq	196fc <argp_failure@@Base+0x34c>
   195dc:	ldr	r3, [pc, #4076]	; 1a5d0 <argp_failure@@Base+0x1220>
   195e0:	mov	r0, r2
   195e4:	mov	r4, r3
   195e8:	str	r3, [fp, #-96]	; 0xffffffa0
   195ec:	bl	11a50 <flockfile@plt>
   195f0:	ldr	sl, [r4, #36]	; 0x24
   195f4:	cmp	sl, #0
   195f8:	beq	19b10 <argp_failure@@Base+0x760>
   195fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19600:	mov	r3, #0
   19604:	mov	r1, r3
   19608:	ldr	r2, [r2, #32]
   1960c:	ldr	r0, [fp, #-136]	; 0xffffff78
   19610:	bl	1e300 <argp_parse@@Base+0x2a00>
   19614:	subs	sl, r0, #0
   19618:	beq	1a92c <argp_failure@@Base+0x157c>
   1961c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19620:	ands	r3, r3, #11
   19624:	streq	r3, [fp, #-108]	; 0xffffff94
   19628:	bne	19f3c <argp_failure@@Base+0xb8c>
   1962c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19630:	ands	r4, r3, #3
   19634:	bne	1a064 <argp_failure@@Base+0xcb4>
   19638:	tst	r3, #16
   1963c:	bne	1a03c <argp_failure@@Base+0xc8c>
   19640:	tst	r3, #4
   19644:	bne	19f1c <argp_failure@@Base+0xb6c>
   19648:	tst	r3, #8
   1964c:	bne	19704 <argp_failure@@Base+0x354>
   19650:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19654:	tst	r3, #32
   19658:	bne	19acc <argp_failure@@Base+0x71c>
   1965c:	tst	r3, #64	; 0x40
   19660:	beq	196ac <argp_failure@@Base+0x2fc>
   19664:	ldr	r5, [pc, #3944]	; 1a5d4 <argp_failure@@Base+0x1224>
   19668:	ldr	r2, [r5]
   1966c:	cmp	r2, #0
   19670:	beq	196ac <argp_failure@@Base+0x2fc>
   19674:	cmp	r4, #0
   19678:	beq	196a0 <argp_failure@@Base+0x2f0>
   1967c:	ldr	r3, [sl, #28]
   19680:	ldr	r2, [sl, #32]
   19684:	cmp	r3, r2
   19688:	bcs	1a8fc <argp_failure@@Base+0x154c>
   1968c:	add	r1, r3, #1
   19690:	mov	r2, #10
   19694:	str	r1, [sl, #28]
   19698:	strb	r2, [r3]
   1969c:	ldr	r2, [r5]
   196a0:	ldr	r1, [pc, #3888]	; 1a5d8 <argp_failure@@Base+0x1228>
   196a4:	mov	r0, sl
   196a8:	bl	1ea28 <argp_parse@@Base+0x3128>
   196ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   196b0:	bl	11810 <funlockfile@plt>
   196b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   196b8:	cmp	r3, #0
   196bc:	beq	196f4 <argp_failure@@Base+0x344>
   196c0:	ldr	r0, [r3, #12]
   196c4:	cmp	r0, #0
   196c8:	beq	196e0 <argp_failure@@Base+0x330>
   196cc:	ldr	r4, [r0, #24]
   196d0:	bl	1ca50 <argp_parse@@Base+0x1150>
   196d4:	subs	r0, r4, #0
   196d8:	bne	196cc <argp_failure@@Base+0x31c>
   196dc:	ldr	r3, [fp, #-108]	; 0xffffff94
   196e0:	ldr	r3, [r3, #4]
   196e4:	cmp	r3, #0
   196e8:	bne	19af8 <argp_failure@@Base+0x748>
   196ec:	ldr	r0, [fp, #-108]	; 0xffffff94
   196f0:	bl	1ca50 <argp_parse@@Base+0x1150>
   196f4:	mov	r0, sl
   196f8:	bl	1e8e8 <argp_parse@@Base+0x2fe8>
   196fc:	sub	sp, fp, #32
   19700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19704:	ldr	r3, [fp, #-108]	; 0xffffff94
   19708:	ldr	r3, [r3, #4]
   1970c:	cmp	r3, #0
   19710:	str	r3, [fp, #-112]	; 0xffffff90
   19714:	beq	19650 <argp_failure@@Base+0x2a0>
   19718:	cmp	r4, #0
   1971c:	beq	1a80c <argp_failure@@Base+0x145c>
   19720:	ldr	r3, [sl, #28]
   19724:	ldr	r2, [sl, #32]
   19728:	cmp	r3, r2
   1972c:	bcs	1aa78 <argp_failure@@Base+0x16c8>
   19730:	add	r1, r3, #1
   19734:	mov	r2, #10
   19738:	str	r1, [sl, #28]
   1973c:	strb	r2, [r3]
   19740:	ldr	r3, [fp, #-108]	; 0xffffff94
   19744:	ldr	r2, [fp, #-108]	; 0xffffff94
   19748:	ldr	r3, [r3, #4]
   1974c:	ldr	r8, [r2]
   19750:	str	r3, [fp, #-112]	; 0xffffff90
   19754:	cmp	r3, #0
   19758:	mov	r3, #0
   1975c:	str	r3, [fp, #-88]	; 0xffffffa8
   19760:	str	r3, [fp, #-84]	; 0xffffffac
   19764:	str	r3, [fp, #-80]	; 0xffffffb0
   19768:	beq	19abc <argp_failure@@Base+0x70c>
   1976c:	ldr	ip, [sl, #28]
   19770:	ldr	r3, [sl, #24]
   19774:	ldr	lr, [sl, #16]
   19778:	sub	ip, ip, r3
   1977c:	cmp	ip, lr
   19780:	ldr	r6, [r8]
   19784:	ldr	r9, [r8, #8]
   19788:	bhi	1a66c <argp_failure@@Base+0x12bc>
   1978c:	ldr	r3, [sl, #4]
   19790:	ldr	r0, [r6, #12]
   19794:	str	r3, [fp, #-120]	; 0xffffff88
   19798:	ldr	r3, [sl, #12]
   1979c:	mov	r7, #0
   197a0:	str	r3, [fp, #-124]	; 0xffffff84
   197a4:	sub	r3, fp, #88	; 0x58
   197a8:	str	r7, [sl, #4]
   197ac:	str	r3, [fp, #-68]	; 0xffffffbc
   197b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   197b4:	ands	r0, r0, #8
   197b8:	mov	r2, #1
   197bc:	str	r2, [fp, #-64]	; 0xffffffc0
   197c0:	str	r8, [fp, #-76]	; 0xffffffb4
   197c4:	str	sl, [fp, #-72]	; 0xffffffb8
   197c8:	str	r3, [fp, #-60]	; 0xffffffc4
   197cc:	strne	r7, [fp, #-132]	; 0xffffff7c
   197d0:	bne	1980c <argp_failure@@Base+0x45c>
   197d4:	ldr	r1, [r8, #4]
   197d8:	cmp	r1, r7
   197dc:	beq	19808 <argp_failure@@Base+0x458>
   197e0:	add	r2, r6, #24
   197e4:	ldr	r3, [r2, #-24]	; 0xffffffe8
   197e8:	cmp	r3, #0
   197ec:	beq	197fc <argp_failure@@Base+0x44c>
   197f0:	ldr	r3, [r2, #-12]
   197f4:	tst	r3, #2
   197f8:	beq	1a6b0 <argp_failure@@Base+0x1300>
   197fc:	subs	r1, r1, #1
   19800:	add	r2, r2, #24
   19804:	bne	197e4 <argp_failure@@Base+0x434>
   19808:	str	r0, [fp, #-132]	; 0xffffff7c
   1980c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19810:	cmp	ip, lr
   19814:	ldr	r4, [r3, #8]
   19818:	bhi	1a658 <argp_failure@@Base+0x12a8>
   1981c:	str	r4, [sl, #12]
   19820:	ldr	r5, [r8, #4]
   19824:	cmp	r5, #0
   19828:	beq	198ac <argp_failure@@Base+0x4fc>
   1982c:	str	r8, [fp, #-128]	; 0xffffff80
   19830:	mov	r4, r6
   19834:	mov	r8, r9
   19838:	b	19848 <argp_failure@@Base+0x498>
   1983c:	subs	r5, r5, #1
   19840:	add	r4, r4, #24
   19844:	beq	198a0 <argp_failure@@Base+0x4f0>
   19848:	ldr	r7, [r4, #12]
   1984c:	tst	r7, #8
   19850:	bne	1983c <argp_failure@@Base+0x48c>
   19854:	ldr	r9, [r4, #4]
   19858:	sub	r2, r9, #1
   1985c:	cmp	r2, #254	; 0xfe
   19860:	bhi	1983c <argp_failure@@Base+0x48c>
   19864:	bl	118f4 <__ctype_b_loc@plt>
   19868:	lsl	r2, r9, #1
   1986c:	ldr	r1, [r0]
   19870:	ldrh	r2, [r1, r2]
   19874:	tst	r2, #16384	; 0x4000
   19878:	beq	1983c <argp_failure@@Base+0x48c>
   1987c:	ldrb	r2, [r8]
   19880:	cmp	r9, r2
   19884:	bne	1983c <argp_failure@@Base+0x48c>
   19888:	tst	r7, #2
   1988c:	beq	1a3d0 <argp_failure@@Base+0x1020>
   19890:	subs	r5, r5, #1
   19894:	add	r8, r8, #1
   19898:	add	r4, r4, #24
   1989c:	bne	19848 <argp_failure@@Base+0x498>
   198a0:	ldr	r0, [r6, #12]
   198a4:	ldr	r8, [fp, #-128]	; 0xffffff80
   198a8:	and	r0, r0, #8
   198ac:	ldr	r3, [sl, #28]
   198b0:	ldr	r1, [sl, #24]
   198b4:	cmp	r0, #0
   198b8:	ldr	r2, [sl, #16]
   198bc:	sub	r3, r3, r1
   198c0:	beq	1a33c <argp_failure@@Base+0xf8c>
   198c4:	cmp	r3, r2
   198c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   198cc:	ldr	r4, [r3, #16]
   198d0:	bhi	1a6c8 <argp_failure@@Base+0x1318>
   198d4:	str	r4, [sl, #12]
   198d8:	ldr	r5, [r8, #4]
   198dc:	cmp	r5, #0
   198e0:	addne	r4, r6, #24
   198e4:	bne	198f8 <argp_failure@@Base+0x548>
   198e8:	b	19988 <argp_failure@@Base+0x5d8>
   198ec:	subs	r5, r5, #1
   198f0:	add	r4, r4, #24
   198f4:	beq	19988 <argp_failure@@Base+0x5d8>
   198f8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   198fc:	cmp	r3, #0
   19900:	beq	198ec <argp_failure@@Base+0x53c>
   19904:	ldr	r3, [r4, #-12]
   19908:	tst	r3, #2
   1990c:	bne	198ec <argp_failure@@Base+0x53c>
   19910:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19914:	sub	r1, fp, #76	; 0x4c
   19918:	ldr	r0, [r3, #16]
   1991c:	bl	182d0 <daemon@@Base+0x2150>
   19920:	ldr	r9, [r4, #-24]	; 0xffffffe8
   19924:	mov	r0, r9
   19928:	bl	11918 <strlen@plt>
   1992c:	subs	r7, r0, #0
   19930:	beq	198ec <argp_failure@@Base+0x53c>
   19934:	ldr	r2, [sl, #28]
   19938:	ldr	lr, [sl, #32]
   1993c:	add	ip, r2, r7
   19940:	cmp	lr, ip
   19944:	mov	r1, r7
   19948:	mov	r0, sl
   1994c:	bcs	19960 <argp_failure@@Base+0x5b0>
   19950:	bl	1e928 <argp_parse@@Base+0x3028>
   19954:	cmp	r0, #0
   19958:	beq	198ec <argp_failure@@Base+0x53c>
   1995c:	ldr	r2, [sl, #28]
   19960:	mov	r0, r2
   19964:	mov	r1, r9
   19968:	mov	r2, r7
   1996c:	bl	11744 <memcpy@plt>
   19970:	ldr	r2, [sl, #28]
   19974:	subs	r5, r5, #1
   19978:	add	r3, r2, r7
   1997c:	str	r3, [sl, #28]
   19980:	add	r4, r4, #24
   19984:	bne	198f8 <argp_failure@@Base+0x548>
   19988:	ldr	r3, [sl, #28]
   1998c:	ldr	r1, [sl, #24]
   19990:	ldr	r2, [sl, #16]
   19994:	sub	r3, r3, r1
   19998:	cmp	r3, r2
   1999c:	bhi	1a590 <argp_failure@@Base+0x11e0>
   199a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   199a4:	mov	r3, #0
   199a8:	cmp	r2, r3
   199ac:	str	r3, [sl, #4]
   199b0:	beq	1a450 <argp_failure@@Base+0x10a0>
   199b4:	ldr	r3, [r6, #12]
   199b8:	tst	r3, #8
   199bc:	bne	199e8 <argp_failure@@Base+0x638>
   199c0:	ldr	r4, [r6, #4]
   199c4:	sub	r3, r4, #1
   199c8:	cmp	r3, #254	; 0xfe
   199cc:	bhi	199e8 <argp_failure@@Base+0x638>
   199d0:	bl	118f4 <__ctype_b_loc@plt>
   199d4:	lsl	r4, r4, #1
   199d8:	ldr	r3, [r0]
   199dc:	ldrh	r3, [r3, r4]
   199e0:	tst	r3, #16384	; 0x4000
   199e4:	bne	199f4 <argp_failure@@Base+0x644>
   199e8:	ldr	r3, [r6]
   199ec:	cmp	r3, #0
   199f0:	beq	1a918 <argp_failure@@Base+0x1568>
   199f4:	ldr	r3, [sl, #28]
   199f8:	ldr	r1, [sl, #24]
   199fc:	ldr	r2, [sl, #16]
   19a00:	sub	r3, r3, r1
   19a04:	cmp	r3, r2
   19a08:	bhi	1a59c <argp_failure@@Base+0x11ec>
   19a0c:	ldr	r3, [fp, #-120]	; 0xffffff88
   19a10:	str	r3, [sl, #4]
   19a14:	ldr	r3, [fp, #-112]	; 0xffffff90
   19a18:	add	r8, r8, #28
   19a1c:	subs	r3, r3, #1
   19a20:	str	r3, [fp, #-112]	; 0xffffff90
   19a24:	ldr	r3, [fp, #-124]	; 0xffffff84
   19a28:	str	r3, [sl, #12]
   19a2c:	bne	1976c <argp_failure@@Base+0x3bc>
   19a30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a34:	cmp	r3, #0
   19a38:	beq	19abc <argp_failure@@Base+0x70c>
   19a3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a40:	ldr	r3, [r3, #4]
   19a44:	cmp	r3, #0
   19a48:	beq	19abc <argp_failure@@Base+0x70c>
   19a4c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19a50:	cmp	r1, #0
   19a54:	beq	1aadc <argp_failure@@Base+0x172c>
   19a58:	ldr	r4, [r1]
   19a5c:	cmp	r4, #0
   19a60:	beq	1ab0c <argp_failure@@Base+0x175c>
   19a64:	ldr	r3, [r4, #20]
   19a68:	cmp	r3, #0
   19a6c:	beq	1a9dc <argp_failure@@Base+0x162c>
   19a70:	mov	r0, r4
   19a74:	bl	1c720 <argp_parse@@Base+0xe20>
   19a78:	ldr	r9, [pc, #3028]	; 1a654 <argp_failure@@Base+0x12a4>
   19a7c:	ldr	r3, [r4, #20]
   19a80:	mov	r1, r9
   19a84:	mov	r2, r0
   19a88:	ldr	r0, [pc, #2892]	; 1a5dc <argp_failure@@Base+0x122c>
   19a8c:	blx	r3
   19a90:	subs	r4, r0, #0
   19a94:	beq	19abc <argp_failure@@Base+0x70c>
   19a98:	ldrb	r3, [r4]
   19a9c:	subs	r9, r4, r9
   19aa0:	movne	r9, #1
   19aa4:	cmp	r3, #0
   19aa8:	bne	1a9e4 <argp_failure@@Base+0x1634>
   19aac:	cmp	r9, #0
   19ab0:	beq	19abc <argp_failure@@Base+0x70c>
   19ab4:	mov	r0, r4
   19ab8:	bl	1ca50 <argp_parse@@Base+0x1150>
   19abc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19ac0:	mov	r4, #1
   19ac4:	tst	r3, #32
   19ac8:	beq	1965c <argp_failure@@Base+0x2ac>
   19acc:	mov	r3, #0
   19ad0:	str	r3, [sp]
   19ad4:	str	sl, [sp, #4]
   19ad8:	mov	r3, r4
   19adc:	ldr	r1, [fp, #-104]	; 0xffffff98
   19ae0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19ae4:	mov	r2, #1
   19ae8:	bl	168a8 <daemon@@Base+0x728>
   19aec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19af0:	orr	r4, r4, r0
   19af4:	b	1965c <argp_failure@@Base+0x2ac>
   19af8:	ldr	r4, [fp, #-108]	; 0xffffff94
   19afc:	ldr	r0, [r4]
   19b00:	bl	1ca50 <argp_parse@@Base+0x1150>
   19b04:	ldr	r0, [r4, #8]
   19b08:	bl	1ca50 <argp_parse@@Base+0x1150>
   19b0c:	b	196ec <argp_failure@@Base+0x33c>
   19b10:	ldr	r0, [pc, #2760]	; 1a5e0 <argp_failure@@Base+0x1230>
   19b14:	bl	11888 <getenv@plt>
   19b18:	ldr	lr, [fp, #-96]	; 0xffffffa0
   19b1c:	sub	r3, fp, #76	; 0x4c
   19b20:	mov	ip, r3
   19b24:	str	r3, [fp, #-112]	; 0xffffff90
   19b28:	mov	r5, r0
   19b2c:	ldm	lr!, {r0, r1, r2, r3}
   19b30:	cmp	r5, #0
   19b34:	stmia	ip!, {r0, r1, r2, r3}
   19b38:	ldm	lr!, {r0, r1, r2, r3}
   19b3c:	stmia	ip!, {r0, r1, r2, r3}
   19b40:	ldm	lr, {r0, r1}
   19b44:	stm	ip, {r0, r1}
   19b48:	beq	195fc <argp_failure@@Base+0x24c>
   19b4c:	ldrb	r8, [r5]
   19b50:	ldr	r9, [pc, #2700]	; 1a5e4 <argp_failure@@Base+0x1234>
   19b54:	str	sl, [fp, #-120]	; 0xffffff88
   19b58:	cmp	r8, #0
   19b5c:	beq	19d10 <argp_failure@@Base+0x960>
   19b60:	bl	118f4 <__ctype_b_loc@plt>
   19b64:	mov	r7, r0
   19b68:	ldr	r0, [r0]
   19b6c:	b	19b74 <argp_failure@@Base+0x7c4>
   19b70:	ldrb	r8, [r5, #1]!
   19b74:	lsl	r3, r8, #1
   19b78:	ldrh	r1, [r0, r3]
   19b7c:	tst	r1, #8192	; 0x2000
   19b80:	bne	19b70 <argp_failure@@Base+0x7c0>
   19b84:	ands	r2, r1, #1024	; 0x400
   19b88:	beq	19d08 <argp_failure@@Base+0x958>
   19b8c:	cmp	r8, #95	; 0x5f
   19b90:	cmpne	r8, #45	; 0x2d
   19b94:	lsl	r3, r1, #28
   19b98:	moveq	r6, #1
   19b9c:	movne	r6, #0
   19ba0:	orrs	r6, r6, r3, lsr #31
   19ba4:	beq	1a7ac <argp_failure@@Base+0x13fc>
   19ba8:	mov	r4, r5
   19bac:	ldrb	r3, [r4, #1]!
   19bb0:	cmp	r3, #95	; 0x5f
   19bb4:	cmpne	r3, #45	; 0x2d
   19bb8:	lsl	r1, r3, #1
   19bbc:	moveq	r2, #1
   19bc0:	ldrh	r1, [r0, r1]
   19bc4:	movne	r2, #0
   19bc8:	lsl	ip, r1, #28
   19bcc:	orrs	r2, r2, ip, lsr #31
   19bd0:	bne	19bac <argp_failure@@Base+0x7fc>
   19bd4:	tst	r1, #8192	; 0x2000
   19bd8:	sub	r6, r4, r5
   19bdc:	beq	19bf4 <argp_failure@@Base+0x844>
   19be0:	ldrb	r3, [r4, #1]!
   19be4:	lsl	r2, r3, #1
   19be8:	ldrh	r1, [r0, r2]
   19bec:	tst	r1, #8192	; 0x2000
   19bf0:	bne	19be0 <argp_failure@@Base+0x830>
   19bf4:	cmp	r3, #44	; 0x2c
   19bf8:	cmpne	r3, #0
   19bfc:	beq	19d94 <argp_failure@@Base+0x9e4>
   19c00:	cmp	r3, #61	; 0x3d
   19c04:	beq	1a30c <argp_failure@@Base+0xf5c>
   19c08:	tst	r1, #2048	; 0x800
   19c0c:	bne	1a27c <argp_failure@@Base+0xecc>
   19c10:	ldr	r3, [fp, #-120]	; 0xffffff88
   19c14:	mov	sl, r3
   19c18:	str	r3, [fp, #-108]	; 0xffffff94
   19c1c:	mov	r0, r9
   19c20:	bl	11918 <strlen@plt>
   19c24:	cmp	r6, r0
   19c28:	beq	19db4 <argp_failure@@Base+0xa04>
   19c2c:	ldr	r0, [pc, #2484]	; 1a5e8 <argp_failure@@Base+0x1238>
   19c30:	bl	11918 <strlen@plt>
   19c34:	cmp	r6, r0
   19c38:	mov	r7, r0
   19c3c:	beq	19e48 <argp_failure@@Base+0xa98>
   19c40:	ldr	r0, [pc, #2556]	; 1a644 <argp_failure@@Base+0x1294>
   19c44:	bl	11918 <strlen@plt>
   19c48:	cmp	r6, r0
   19c4c:	mov	r7, r0
   19c50:	beq	19dfc <argp_failure@@Base+0xa4c>
   19c54:	ldr	r0, [pc, #2532]	; 1a640 <argp_failure@@Base+0x1290>
   19c58:	bl	11918 <strlen@plt>
   19c5c:	cmp	r6, r0
   19c60:	mov	r7, r0
   19c64:	beq	19e68 <argp_failure@@Base+0xab8>
   19c68:	ldr	r0, [pc, #2500]	; 1a634 <argp_failure@@Base+0x1284>
   19c6c:	bl	11918 <strlen@plt>
   19c70:	cmp	r6, r0
   19c74:	mov	r7, r0
   19c78:	beq	19e88 <argp_failure@@Base+0xad8>
   19c7c:	ldr	r8, [pc, #2504]	; 1a64c <argp_failure@@Base+0x129c>
   19c80:	mov	r0, r8
   19c84:	bl	11918 <strlen@plt>
   19c88:	cmp	r6, r0
   19c8c:	mov	r7, r0
   19c90:	beq	19ea8 <argp_failure@@Base+0xaf8>
   19c94:	ldr	r8, [pc, #2476]	; 1a648 <argp_failure@@Base+0x1298>
   19c98:	mov	r0, r8
   19c9c:	bl	11918 <strlen@plt>
   19ca0:	cmp	r6, r0
   19ca4:	mov	r7, r0
   19ca8:	beq	19ec4 <argp_failure@@Base+0xb14>
   19cac:	ldr	r8, [pc, #2460]	; 1a650 <argp_failure@@Base+0x12a0>
   19cb0:	mov	r0, r8
   19cb4:	bl	11918 <strlen@plt>
   19cb8:	cmp	r6, r0
   19cbc:	mov	r7, r0
   19cc0:	beq	19ee0 <argp_failure@@Base+0xb30>
   19cc4:	ldr	r8, [pc, #2336]	; 1a5ec <argp_failure@@Base+0x123c>
   19cc8:	mov	r0, r8
   19ccc:	bl	11918 <strlen@plt>
   19cd0:	cmp	r0, r6
   19cd4:	beq	19efc <argp_failure@@Base+0xb4c>
   19cd8:	mov	r2, #0
   19cdc:	str	r5, [sp, #4]
   19ce0:	str	r6, [sp]
   19ce4:	mov	r1, r2
   19ce8:	ldr	r3, [pc, #2304]	; 1a5f0 <argp_failure@@Base+0x1240>
   19cec:	ldr	r0, [fp, #-104]	; 0xffffff98
   19cf0:	bl	193b0 <argp_failure@@Base>
   19cf4:	ldrb	r8, [r4]
   19cf8:	cmp	r8, #44	; 0x2c
   19cfc:	beq	19df0 <argp_failure@@Base+0xa40>
   19d00:	mov	r5, r4
   19d04:	b	19b58 <argp_failure@@Base+0x7a8>
   19d08:	cmp	r8, #0
   19d0c:	bne	1a8b8 <argp_failure@@Base+0x1508>
   19d10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19d14:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19d18:	cmp	r3, r2
   19d1c:	ble	1aa9c <argp_failure@@Base+0x16ec>
   19d20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19d24:	cmp	r3, r2
   19d28:	ble	1a8f4 <argp_failure@@Base+0x1544>
   19d2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19d30:	cmp	r3, r2
   19d34:	ble	1a8d0 <argp_failure@@Base+0x1520>
   19d38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19d3c:	cmp	r3, r2
   19d40:	ble	1aad4 <argp_failure@@Base+0x1724>
   19d44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d48:	cmp	r3, r2
   19d4c:	ble	1aacc <argp_failure@@Base+0x171c>
   19d50:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19d54:	cmp	r3, r2
   19d58:	ble	1aae8 <argp_failure@@Base+0x1738>
   19d5c:	ldr	lr, [fp, #-112]	; 0xffffff90
   19d60:	ldr	r3, [pc, #2152]	; 1a5d0 <argp_failure@@Base+0x1220>
   19d64:	mov	r4, #1
   19d68:	mov	r5, r3
   19d6c:	str	r3, [fp, #-96]	; 0xffffffa0
   19d70:	ldm	lr!, {r0, r1, r2, r3}
   19d74:	mov	ip, r5
   19d78:	stmia	ip!, {r0, r1, r2, r3}
   19d7c:	ldm	lr!, {r0, r1, r2, r3}
   19d80:	stmia	ip!, {r0, r1, r2, r3}
   19d84:	ldm	lr, {r0, r1}
   19d88:	stm	ip, {r0, r1}
   19d8c:	str	r4, [r5, #36]	; 0x24
   19d90:	b	195fc <argp_failure@@Base+0x24c>
   19d94:	cmp	r8, #110	; 0x6e
   19d98:	beq	1a2dc <argp_failure@@Base+0xf2c>
   19d9c:	mov	sl, #1
   19da0:	mov	r0, r9
   19da4:	str	sl, [fp, #-108]	; 0xffffff94
   19da8:	bl	11918 <strlen@plt>
   19dac:	cmp	r6, r0
   19db0:	bne	19c2c <argp_failure@@Base+0x87c>
   19db4:	mov	r2, r6
   19db8:	mov	r1, r9
   19dbc:	mov	r0, r5
   19dc0:	bl	11ad4 <strncmp@plt>
   19dc4:	cmp	r0, #0
   19dc8:	bne	19c2c <argp_failure@@Base+0x87c>
   19dcc:	mov	r8, r9
   19dd0:	ldrb	r3, [r8, #15]
   19dd4:	ldrb	r8, [r4]
   19dd8:	sub	r2, fp, #36	; 0x24
   19ddc:	add	r3, r2, r3
   19de0:	ldr	r2, [fp, #-108]	; 0xffffff94
   19de4:	cmp	r8, #44	; 0x2c
   19de8:	str	r2, [r3, #-40]	; 0xffffffd8
   19dec:	bne	19d00 <argp_failure@@Base+0x950>
   19df0:	ldrb	r8, [r4, #1]
   19df4:	add	r4, r4, #1
   19df8:	b	19d00 <argp_failure@@Base+0x950>
   19dfc:	mov	r2, r0
   19e00:	ldr	r1, [pc, #2108]	; 1a644 <argp_failure@@Base+0x1294>
   19e04:	mov	r0, r5
   19e08:	bl	11ad4 <strncmp@plt>
   19e0c:	cmp	r0, #0
   19e10:	bne	19c54 <argp_failure@@Base+0x8a4>
   19e14:	ldr	r8, [pc, #2088]	; 1a644 <argp_failure@@Base+0x1294>
   19e18:	cmp	sl, #0
   19e1c:	beq	19dd0 <argp_failure@@Base+0xa20>
   19e20:	ldrb	r2, [r8, #14]
   19e24:	cmp	r2, #0
   19e28:	bne	19dd0 <argp_failure@@Base+0xa20>
   19e2c:	str	r5, [sp, #4]
   19e30:	str	r7, [sp]
   19e34:	ldr	r3, [pc, #1976]	; 1a5f4 <argp_failure@@Base+0x1244>
   19e38:	mov	r1, r2
   19e3c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19e40:	bl	193b0 <argp_failure@@Base>
   19e44:	b	19cf4 <argp_failure@@Base+0x944>
   19e48:	mov	r2, r0
   19e4c:	ldr	r1, [pc, #1940]	; 1a5e8 <argp_failure@@Base+0x1238>
   19e50:	mov	r0, r5
   19e54:	bl	11ad4 <strncmp@plt>
   19e58:	cmp	r0, #0
   19e5c:	bne	19c40 <argp_failure@@Base+0x890>
   19e60:	ldr	r8, [pc, #1920]	; 1a5e8 <argp_failure@@Base+0x1238>
   19e64:	b	19e18 <argp_failure@@Base+0xa68>
   19e68:	mov	r2, r0
   19e6c:	ldr	r1, [pc, #1996]	; 1a640 <argp_failure@@Base+0x1290>
   19e70:	mov	r0, r5
   19e74:	bl	11ad4 <strncmp@plt>
   19e78:	cmp	r0, #0
   19e7c:	bne	19c68 <argp_failure@@Base+0x8b8>
   19e80:	ldr	r8, [pc, #1976]	; 1a640 <argp_failure@@Base+0x1290>
   19e84:	b	19e18 <argp_failure@@Base+0xa68>
   19e88:	mov	r2, r0
   19e8c:	ldr	r1, [pc, #1952]	; 1a634 <argp_failure@@Base+0x1284>
   19e90:	mov	r0, r5
   19e94:	bl	11ad4 <strncmp@plt>
   19e98:	cmp	r0, #0
   19e9c:	bne	19c7c <argp_failure@@Base+0x8cc>
   19ea0:	ldr	r8, [pc, #1932]	; 1a634 <argp_failure@@Base+0x1284>
   19ea4:	b	19e18 <argp_failure@@Base+0xa68>
   19ea8:	mov	r2, r0
   19eac:	mov	r1, r8
   19eb0:	mov	r0, r5
   19eb4:	bl	11ad4 <strncmp@plt>
   19eb8:	cmp	r0, #0
   19ebc:	bne	19c94 <argp_failure@@Base+0x8e4>
   19ec0:	b	19e18 <argp_failure@@Base+0xa68>
   19ec4:	mov	r2, r0
   19ec8:	mov	r1, r8
   19ecc:	mov	r0, r5
   19ed0:	bl	11ad4 <strncmp@plt>
   19ed4:	cmp	r0, #0
   19ed8:	bne	19cac <argp_failure@@Base+0x8fc>
   19edc:	b	19e18 <argp_failure@@Base+0xa68>
   19ee0:	mov	r2, r0
   19ee4:	mov	r1, r8
   19ee8:	mov	r0, r5
   19eec:	bl	11ad4 <strncmp@plt>
   19ef0:	cmp	r0, #0
   19ef4:	bne	19cc4 <argp_failure@@Base+0x914>
   19ef8:	b	19e18 <argp_failure@@Base+0xa68>
   19efc:	mov	r2, r6
   19f00:	mov	r1, r8
   19f04:	mov	r0, r5
   19f08:	bl	11ad4 <strncmp@plt>
   19f0c:	cmp	r0, #0
   19f10:	moveq	r7, r6
   19f14:	bne	19cd8 <argp_failure@@Base+0x928>
   19f18:	b	19e18 <argp_failure@@Base+0xa68>
   19f1c:	ldr	r3, [fp, #4]
   19f20:	ldr	r1, [pc, #1744]	; 1a5f8 <argp_failure@@Base+0x1248>
   19f24:	mov	r2, r3
   19f28:	mov	r0, sl
   19f2c:	bl	1ea28 <argp_parse@@Base+0x3128>
   19f30:	mov	r4, #1
   19f34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19f38:	b	19648 <argp_failure@@Base+0x298>
   19f3c:	mov	r1, #0
   19f40:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19f44:	bl	16e54 <daemon@@Base+0xcd4>
   19f48:	ldr	r2, [r0, #4]
   19f4c:	ldr	r3, [r0]
   19f50:	cmp	r2, #0
   19f54:	str	r0, [fp, #-108]	; 0xffffff94
   19f58:	str	r2, [fp, #-120]	; 0xffffff88
   19f5c:	str	r3, [fp, #-112]	; 0xffffff90
   19f60:	sub	r6, r2, #1
   19f64:	beq	1962c <argp_failure@@Base+0x27c>
   19f68:	ldr	r5, [pc, #1676]	; 1a5fc <argp_failure@@Base+0x124c>
   19f6c:	mov	r8, r6
   19f70:	mov	r7, r3
   19f74:	ldm	r7, {r4, r9}
   19f78:	cmp	r9, #0
   19f7c:	sub	r9, r9, #1
   19f80:	beq	19fc0 <argp_failure@@Base+0xc10>
   19f84:	add	r4, r4, #24
   19f88:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19f8c:	mov	r1, r5
   19f90:	subs	r0, r3, #0
   19f94:	sub	r9, r9, #1
   19f98:	beq	19fb4 <argp_failure@@Base+0xc04>
   19f9c:	ldr	r3, [r4, #-12]
   19fa0:	tst	r3, #2
   19fa4:	bne	19fb4 <argp_failure@@Base+0xc04>
   19fa8:	bl	11684 <strcmp@plt>
   19fac:	cmp	r0, #0
   19fb0:	beq	1a754 <argp_failure@@Base+0x13a4>
   19fb4:	cmn	r9, #1
   19fb8:	add	r4, r4, #24
   19fbc:	bne	19f88 <argp_failure@@Base+0xbd8>
   19fc0:	sub	r8, r8, #1
   19fc4:	cmn	r8, #1
   19fc8:	add	r7, r7, #28
   19fcc:	bne	19f74 <argp_failure@@Base+0xbc4>
   19fd0:	ldr	r7, [fp, #-112]	; 0xffffff90
   19fd4:	ldr	r9, [pc, #1572]	; 1a600 <argp_failure@@Base+0x1250>
   19fd8:	ldm	r7, {r4, r5}
   19fdc:	cmp	r5, #0
   19fe0:	sub	r5, r5, #1
   19fe4:	beq	1a024 <argp_failure@@Base+0xc74>
   19fe8:	add	r4, r4, #24
   19fec:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19ff0:	mov	r1, r9
   19ff4:	subs	r0, r3, #0
   19ff8:	sub	r5, r5, #1
   19ffc:	beq	1a018 <argp_failure@@Base+0xc68>
   1a000:	ldr	r3, [r4, #-12]
   1a004:	tst	r3, #2
   1a008:	bne	1a018 <argp_failure@@Base+0xc68>
   1a00c:	bl	11684 <strcmp@plt>
   1a010:	cmp	r0, #0
   1a014:	beq	1a70c <argp_failure@@Base+0x135c>
   1a018:	cmn	r5, #1
   1a01c:	add	r4, r4, #24
   1a020:	bne	19fec <argp_failure@@Base+0xc3c>
   1a024:	cmp	r6, #0
   1a028:	add	r7, r7, #28
   1a02c:	sub	r6, r6, #1
   1a030:	bne	19fd8 <argp_failure@@Base+0xc28>
   1a034:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a038:	b	1a724 <argp_failure@@Base+0x1374>
   1a03c:	mov	r2, #1
   1a040:	mov	r3, #0
   1a044:	stm	sp, {r2, sl}
   1a048:	ldr	r1, [fp, #-104]	; 0xffffff98
   1a04c:	mov	r2, r3
   1a050:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1a054:	bl	168a8 <daemon@@Base+0x728>
   1a058:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a05c:	orr	r4, r4, r0
   1a060:	b	19640 <argp_failure@@Base+0x290>
   1a064:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a068:	mov	r4, #1
   1a06c:	ldr	r8, [pc, #1424]	; 1a604 <argp_failure@@Base+0x1254>
   1a070:	ldr	r1, [r3, #16]
   1a074:	ldr	r0, [r3, #8]
   1a078:	bl	17854 <daemon@@Base+0x16d4>
   1a07c:	mov	r1, #0
   1a080:	mov	r6, r4
   1a084:	add	r3, r0, #14
   1a088:	bic	r3, r3, #7
   1a08c:	sub	sp, sp, r3
   1a090:	add	r7, sp, #8
   1a094:	mov	r2, r0
   1a098:	mov	r0, r7
   1a09c:	bl	11984 <memset@plt>
   1a0a0:	sub	r3, fp, #76	; 0x4c
   1a0a4:	str	r3, [fp, #-112]	; 0xffffff90
   1a0a8:	str	r7, [fp, #-120]	; 0xffffff88
   1a0ac:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1a0b0:	b	1a1d0 <argp_failure@@Base+0xe20>
   1a0b4:	cmp	r4, #0
   1a0b8:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a0bc:	ldr	r7, [sl, #12]
   1a0c0:	ldrne	r2, [pc, #1344]	; 1a608 <argp_failure@@Base+0x1258>
   1a0c4:	str	r9, [sl, #12]
   1a0c8:	ldreq	r2, [pc, #1340]	; 1a60c <argp_failure@@Base+0x125c>
   1a0cc:	str	r3, [fp, #-76]	; 0xffffffb4
   1a0d0:	mov	r1, r8
   1a0d4:	ldr	r3, [fp, #4]
   1a0d8:	mov	r0, sl
   1a0dc:	bl	1ea28 <argp_parse@@Base+0x3128>
   1a0e0:	ldr	r3, [sl, #28]
   1a0e4:	ldr	r1, [sl, #24]
   1a0e8:	ldr	r2, [sl, #16]
   1a0ec:	sub	r3, r3, r1
   1a0f0:	cmp	r3, r2
   1a0f4:	ldr	r9, [r5, #28]
   1a0f8:	bhi	1a248 <argp_failure@@Base+0xe98>
   1a0fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a100:	ldr	r4, [sl, #4]
   1a104:	tst	r3, #2
   1a108:	str	r9, [sl, #4]
   1a10c:	beq	1a254 <argp_failure@@Base+0xea4>
   1a110:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a114:	ldr	r3, [r3, #4]
   1a118:	cmp	r3, #0
   1a11c:	beq	1a16c <argp_failure@@Base+0xdbc>
   1a120:	ldr	ip, [sl, #28]
   1a124:	ldr	r2, [sl, #32]
   1a128:	add	r3, ip, #12
   1a12c:	cmp	r2, r3
   1a130:	bcs	1a14c <argp_failure@@Base+0xd9c>
   1a134:	mov	r1, #12
   1a138:	mov	r0, sl
   1a13c:	bl	1e928 <argp_parse@@Base+0x3028>
   1a140:	cmp	r0, #0
   1a144:	beq	1a16c <argp_failure@@Base+0xdbc>
   1a148:	ldr	ip, [sl, #28]
   1a14c:	ldr	r3, [pc, #1212]	; 1a610 <argp_failure@@Base+0x1260>
   1a150:	ldm	r3!, {r0, r1, r2}
   1a154:	str	r0, [ip]
   1a158:	str	r1, [ip, #4]
   1a15c:	str	r2, [ip, #8]
   1a160:	ldr	r3, [sl, #28]
   1a164:	add	r3, r3, #12
   1a168:	str	r3, [sl, #28]
   1a16c:	mov	r3, r6
   1a170:	ldr	r1, [fp, #-104]	; 0xffffff98
   1a174:	str	sl, [sp]
   1a178:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a17c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1a180:	bl	17574 <daemon@@Base+0x13f4>
   1a184:	ldr	r3, [sl, #28]
   1a188:	ldr	r1, [sl, #24]
   1a18c:	sub	r1, r3, r1
   1a190:	mov	r9, r0
   1a194:	ldr	r0, [sl, #16]
   1a198:	cmp	r1, r0
   1a19c:	strls	r7, [sl, #12]
   1a1a0:	bhi	1a214 <argp_failure@@Base+0xe64>
   1a1a4:	ldr	r1, [sl, #32]
   1a1a8:	str	r4, [sl, #4]
   1a1ac:	cmp	r1, r3
   1a1b0:	bls	1a1f8 <argp_failure@@Base+0xe48>
   1a1b4:	add	r1, r3, #1
   1a1b8:	mov	r2, #10
   1a1bc:	str	r1, [sl, #28]
   1a1c0:	strb	r2, [r3]
   1a1c4:	cmp	r9, #0
   1a1c8:	mov	r4, #0
   1a1cc:	beq	1a270 <argp_failure@@Base+0xec0>
   1a1d0:	ldr	r3, [sl, #28]
   1a1d4:	ldr	r1, [sl, #24]
   1a1d8:	ldr	r2, [sl, #16]
   1a1dc:	sub	r3, r3, r1
   1a1e0:	cmp	r3, r2
   1a1e4:	ldr	r9, [r5, #28]
   1a1e8:	bls	1a0b4 <argp_failure@@Base+0xd04>
   1a1ec:	mov	r0, sl
   1a1f0:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a1f4:	b	1a0b4 <argp_failure@@Base+0xd04>
   1a1f8:	mov	r1, r6
   1a1fc:	mov	r0, sl
   1a200:	bl	1e928 <argp_parse@@Base+0x3028>
   1a204:	cmp	r0, #0
   1a208:	beq	1a1c4 <argp_failure@@Base+0xe14>
   1a20c:	ldr	r3, [sl, #28]
   1a210:	b	1a1b4 <argp_failure@@Base+0xe04>
   1a214:	mov	r0, sl
   1a218:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a21c:	ldr	r3, [sl, #28]
   1a220:	ldr	r1, [sl, #24]
   1a224:	ldr	r0, [sl, #16]
   1a228:	sub	r1, r3, r1
   1a22c:	cmp	r1, r0
   1a230:	str	r7, [sl, #12]
   1a234:	bls	1a1a4 <argp_failure@@Base+0xdf4>
   1a238:	mov	r0, sl
   1a23c:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a240:	ldr	r3, [sl, #28]
   1a244:	b	1a1a4 <argp_failure@@Base+0xdf4>
   1a248:	mov	r0, sl
   1a24c:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a250:	b	1a0fc <argp_failure@@Base+0xd4c>
   1a254:	mov	r1, sl
   1a258:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a25c:	bl	17ba0 <daemon@@Base+0x1a20>
   1a260:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a264:	orr	r3, r3, #2
   1a268:	str	r3, [fp, #-100]	; 0xffffff9c
   1a26c:	b	1a16c <argp_failure@@Base+0xdbc>
   1a270:	mov	r4, #1
   1a274:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a278:	b	19638 <argp_failure@@Base+0x288>
   1a27c:	mov	r2, #10
   1a280:	mov	r1, #0
   1a284:	mov	r0, r4
   1a288:	bl	11690 <strtol@plt>
   1a28c:	ldrb	r3, [r4]
   1a290:	ldr	r2, [r7]
   1a294:	lsl	r3, r3, #1
   1a298:	ldrh	r3, [r2, r3]
   1a29c:	tst	r3, #2048	; 0x800
   1a2a0:	str	r0, [fp, #-108]	; 0xffffff94
   1a2a4:	beq	1a2cc <argp_failure@@Base+0xf1c>
   1a2a8:	ldrb	r3, [r4, #1]!
   1a2ac:	lsl	r3, r3, #1
   1a2b0:	ldrh	r3, [r2, r3]
   1a2b4:	tst	r3, #2048	; 0x800
   1a2b8:	bne	1a2a8 <argp_failure@@Base+0xef8>
   1a2bc:	b	1a2cc <argp_failure@@Base+0xf1c>
   1a2c0:	ldrb	r3, [r4, #1]!
   1a2c4:	lsl	r3, r3, #1
   1a2c8:	ldrh	r3, [r2, r3]
   1a2cc:	tst	r3, #8192	; 0x2000
   1a2d0:	bne	1a2c0 <argp_failure@@Base+0xf10>
   1a2d4:	ldr	sl, [fp, #-120]	; 0xffffff88
   1a2d8:	b	19c1c <argp_failure@@Base+0x86c>
   1a2dc:	ldrb	r3, [r5, #1]
   1a2e0:	cmp	r3, #111	; 0x6f
   1a2e4:	bne	19d9c <argp_failure@@Base+0x9ec>
   1a2e8:	ldrb	r3, [r5, #2]
   1a2ec:	cmp	r3, #45	; 0x2d
   1a2f0:	bne	19d9c <argp_failure@@Base+0x9ec>
   1a2f4:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a2f8:	add	r5, r5, #3
   1a2fc:	sub	r6, r6, #3
   1a300:	str	r3, [fp, #-108]	; 0xffffff94
   1a304:	mov	sl, #1
   1a308:	b	19c1c <argp_failure@@Base+0x86c>
   1a30c:	ldrb	r3, [r4, #1]
   1a310:	add	r4, r4, #1
   1a314:	lsl	r3, r3, #1
   1a318:	ldrh	r1, [r0, r3]
   1a31c:	tst	r1, #8192	; 0x2000
   1a320:	beq	19c08 <argp_failure@@Base+0x858>
   1a324:	ldrb	r3, [r4, #1]!
   1a328:	lsl	r3, r3, #1
   1a32c:	ldrh	r1, [r0, r3]
   1a330:	tst	r1, #8192	; 0x2000
   1a334:	bne	1a324 <argp_failure@@Base+0xf74>
   1a338:	b	19c08 <argp_failure@@Base+0x858>
   1a33c:	cmp	r3, r2
   1a340:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a344:	ldr	r4, [r3, #12]
   1a348:	bhi	1a6bc <argp_failure@@Base+0x130c>
   1a34c:	str	r4, [sl, #12]
   1a350:	ldr	r5, [r8, #4]
   1a354:	cmp	r5, #0
   1a358:	beq	19988 <argp_failure@@Base+0x5d8>
   1a35c:	add	r4, r6, #24
   1a360:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1a364:	b	1a374 <argp_failure@@Base+0xfc4>
   1a368:	subs	r5, r5, #1
   1a36c:	add	r4, r4, #24
   1a370:	beq	19988 <argp_failure@@Base+0x5d8>
   1a374:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1a378:	cmp	r3, #0
   1a37c:	beq	1a368 <argp_failure@@Base+0xfb8>
   1a380:	ldr	r3, [r4, #-12]
   1a384:	tst	r3, #2
   1a388:	bne	1a368 <argp_failure@@Base+0xfb8>
   1a38c:	sub	r1, fp, #76	; 0x4c
   1a390:	ldr	r0, [r7, #12]
   1a394:	bl	182d0 <daemon@@Base+0x2150>
   1a398:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1a39c:	ldr	r1, [pc, #624]	; 1a614 <argp_failure@@Base+0x1264>
   1a3a0:	mov	r0, sl
   1a3a4:	bl	1ea28 <argp_parse@@Base+0x3128>
   1a3a8:	ldr	r3, [r6, #8]
   1a3ac:	ldr	r1, [pc, #612]	; 1a618 <argp_failure@@Base+0x1268>
   1a3b0:	subs	r2, r3, #0
   1a3b4:	mov	r0, sl
   1a3b8:	beq	1a368 <argp_failure@@Base+0xfb8>
   1a3bc:	ldr	ip, [r6, #12]
   1a3c0:	tst	ip, #1
   1a3c4:	ldrne	r1, [pc, #592]	; 1a61c <argp_failure@@Base+0x126c>
   1a3c8:	bl	1ea28 <argp_parse@@Base+0x3128>
   1a3cc:	b	1a368 <argp_failure@@Base+0xfb8>
   1a3d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a3d4:	sub	r1, fp, #76	; 0x4c
   1a3d8:	ldr	r0, [r3, #8]
   1a3dc:	bl	182d0 <daemon@@Base+0x2150>
   1a3e0:	ldr	r2, [sl, #28]
   1a3e4:	ldr	r1, [sl, #32]
   1a3e8:	cmp	r2, r1
   1a3ec:	bcs	1a6f0 <argp_failure@@Base+0x1340>
   1a3f0:	add	r1, r2, #1
   1a3f4:	mov	r3, #45	; 0x2d
   1a3f8:	str	r1, [sl, #28]
   1a3fc:	strb	r3, [r2]
   1a400:	ldr	r2, [sl, #28]
   1a404:	ldr	r1, [sl, #32]
   1a408:	ldrb	r7, [r8]
   1a40c:	cmp	r2, r1
   1a410:	bcs	1a6d4 <argp_failure@@Base+0x1324>
   1a414:	add	r1, r2, #1
   1a418:	str	r1, [sl, #28]
   1a41c:	strb	r7, [r2]
   1a420:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1a424:	cmp	r3, #0
   1a428:	beq	1a688 <argp_failure@@Base+0x12d8>
   1a42c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a430:	ldr	r2, [r3]
   1a434:	cmp	r2, #0
   1a438:	bne	1a688 <argp_failure@@Base+0x12d8>
   1a43c:	ldr	r2, [r6, #8]
   1a440:	cmp	r2, #0
   1a444:	movne	r3, #1
   1a448:	strne	r3, [fp, #-80]	; 0xffffffb0
   1a44c:	b	19890 <argp_failure@@Base+0x4e0>
   1a450:	ldr	r5, [r8, #20]
   1a454:	ldr	r9, [r6, #16]
   1a458:	cmp	r5, #0
   1a45c:	beq	1a778 <argp_failure@@Base+0x13c8>
   1a460:	ldr	r3, [r5, #20]
   1a464:	cmp	r3, #0
   1a468:	beq	1a778 <argp_failure@@Base+0x13c8>
   1a46c:	ldr	r1, [fp, #-104]	; 0xffffff98
   1a470:	mov	r0, r5
   1a474:	ldr	r4, [r6, #4]
   1a478:	bl	1c720 <argp_parse@@Base+0xe20>
   1a47c:	ldr	r3, [r5, #20]
   1a480:	mov	r1, r9
   1a484:	mov	r2, r0
   1a488:	mov	r0, r4
   1a48c:	blx	r3
   1a490:	mov	r4, r0
   1a494:	cmp	r4, #0
   1a498:	beq	1a54c <argp_failure@@Base+0x119c>
   1a49c:	ldrb	r3, [r4]
   1a4a0:	cmp	r3, #0
   1a4a4:	beq	1a53c <argp_failure@@Base+0x118c>
   1a4a8:	ldr	r3, [sl, #28]
   1a4ac:	ldr	r2, [sl, #24]
   1a4b0:	ldr	r1, [sl, #16]
   1a4b4:	sub	r2, r3, r2
   1a4b8:	cmp	r2, r1
   1a4bc:	bhi	1a844 <argp_failure@@Base+0x1494>
   1a4c0:	ldr	r6, [sl, #20]
   1a4c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a4c8:	bic	r6, r6, r6, asr #31
   1a4cc:	ldr	r5, [r2, #20]
   1a4d0:	mov	r7, r5
   1a4d4:	str	r5, [sl, #4]
   1a4d8:	add	r2, r5, #3
   1a4dc:	cmp	r2, r6
   1a4e0:	str	r7, [sl, #12]
   1a4e4:	bcs	1a7b8 <argp_failure@@Base+0x1408>
   1a4e8:	ldr	r2, [sl, #32]
   1a4ec:	cmp	r2, r3
   1a4f0:	bls	1a9c0 <argp_failure@@Base+0x1610>
   1a4f4:	add	r1, r3, #1
   1a4f8:	mov	r2, #10
   1a4fc:	str	r1, [sl, #28]
   1a500:	strb	r2, [r3]
   1a504:	mov	r0, r4
   1a508:	bl	11918 <strlen@plt>
   1a50c:	subs	r5, r0, #0
   1a510:	beq	1a53c <argp_failure@@Base+0x118c>
   1a514:	ldr	r0, [sl, #28]
   1a518:	ldr	r2, [sl, #32]
   1a51c:	add	r3, r0, r5
   1a520:	cmp	r2, r3
   1a524:	bcs	1a828 <argp_failure@@Base+0x1478>
   1a528:	mov	r1, r5
   1a52c:	mov	r0, sl
   1a530:	bl	1e928 <argp_parse@@Base+0x3028>
   1a534:	cmp	r0, #0
   1a538:	bne	1a824 <argp_failure@@Base+0x1474>
   1a53c:	cmp	r9, r4
   1a540:	beq	1a54c <argp_failure@@Base+0x119c>
   1a544:	mov	r0, r4
   1a548:	bl	1ca50 <argp_parse@@Base+0x1150>
   1a54c:	ldr	r3, [sl, #28]
   1a550:	ldr	r2, [sl, #24]
   1a554:	ldr	r1, [sl, #16]
   1a558:	sub	r2, r3, r2
   1a55c:	cmp	r2, r1
   1a560:	bhi	1a79c <argp_failure@@Base+0x13ec>
   1a564:	ldr	r1, [sl, #32]
   1a568:	mov	r2, #0
   1a56c:	cmp	r1, r3
   1a570:	str	r2, [sl, #4]
   1a574:	bls	1a780 <argp_failure@@Base+0x13d0>
   1a578:	add	r1, r3, #1
   1a57c:	mov	r2, #10
   1a580:	str	r1, [sl, #28]
   1a584:	strb	r2, [r3]
   1a588:	str	r8, [fp, #-88]	; 0xffffffa8
   1a58c:	b	199f4 <argp_failure@@Base+0x644>
   1a590:	mov	r0, sl
   1a594:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a598:	b	199a0 <argp_failure@@Base+0x5f0>
   1a59c:	mov	r0, sl
   1a5a0:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a5a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   1a5a8:	ldr	r3, [sl, #28]
   1a5ac:	ldr	r1, [sl, #24]
   1a5b0:	str	r2, [sl, #4]
   1a5b4:	ldr	r2, [sl, #16]
   1a5b8:	sub	r3, r3, r1
   1a5bc:	cmp	r3, r2
   1a5c0:	bls	19a14 <argp_failure@@Base+0x664>
   1a5c4:	mov	r0, sl
   1a5c8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a5cc:	b	19a14 <argp_failure@@Base+0x664>
   1a5d0:	andeq	r3, r3, r0, lsl #11
   1a5d4:	muleq	r3, r4, r0
   1a5d8:	ldrdeq	r1, [r2], -r8
   1a5dc:	andeq	r0, r0, #5
   1a5e0:	andeq	r1, r2, r4, lsl #23
   1a5e4:	andeq	r1, r2, r0, asr r9
   1a5e8:	andeq	r1, r2, r0, ror #18
   1a5ec:	ldrdeq	r1, [r2], -r0
   1a5f0:	andeq	r1, r2, r4, asr #23
   1a5f4:	muleq	r2, r4, fp
   1a5f8:	andeq	r1, r2, r0, lsl #25
   1a5fc:	andeq	r1, r2, r8, asr #24
   1a600:	andeq	r1, r2, r0, asr ip
   1a604:	andeq	r1, r2, r0, ror #24
   1a608:	andeq	r1, r2, r8, asr ip
   1a60c:	andeq	r1, r2, r8, ror #24
   1a610:	andeq	r1, r2, r0, ror ip
   1a614:	andeq	r1, r2, r0, asr #25
   1a618:	ldrdeq	r1, [r2], -r0
   1a61c:	andeq	r1, r2, r8, asr #25
   1a620:			; <UNDEFINED> instruction: 0x00021cb8
   1a624:	andeq	r1, r2, r4, lsr lr
   1a628:	andeq	r8, r1, r0, lsl #18
   1a62c:	ldrdeq	r1, [r2], -r4
   1a630:	andeq	r1, r2, ip, ror #23
   1a634:	muleq	r2, r0, r9
   1a638:	andeq	r1, r2, r0, asr #24
   1a63c:	andeq	r1, r2, ip, lsl #24
   1a640:	andeq	r1, r2, r0, lsl #19
   1a644:	andeq	r1, r2, r0, ror r9
   1a648:			; <UNDEFINED> instruction: 0x000219b0
   1a64c:	andeq	r1, r2, r0, lsr #19
   1a650:	andeq	r1, r2, r0, asr #19
   1a654:	andeq	r1, r2, r0, lsl fp
   1a658:	mov	r0, sl
   1a65c:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a660:	ldr	r0, [r6, #12]
   1a664:	and	r0, r0, #8
   1a668:	b	1981c <argp_failure@@Base+0x46c>
   1a66c:	mov	r0, sl
   1a670:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a674:	ldr	ip, [sl, #28]
   1a678:	ldr	r2, [sl, #24]
   1a67c:	ldr	lr, [sl, #16]
   1a680:	sub	ip, ip, r2
   1a684:	b	1978c <argp_failure@@Base+0x3dc>
   1a688:	ldr	r2, [r6, #8]
   1a68c:	cmp	r2, #0
   1a690:	beq	19890 <argp_failure@@Base+0x4e0>
   1a694:	ldr	r1, [r6, #12]
   1a698:	mov	r0, sl
   1a69c:	tst	r1, #1
   1a6a0:	ldrne	r1, [pc, #-136]	; 1a620 <argp_failure@@Base+0x1270>
   1a6a4:	ldreq	r1, [pc, #-136]	; 1a624 <argp_failure@@Base+0x1274>
   1a6a8:	bl	1ea28 <argp_parse@@Base+0x3128>
   1a6ac:	b	19890 <argp_failure@@Base+0x4e0>
   1a6b0:	mov	r3, #1
   1a6b4:	str	r3, [fp, #-132]	; 0xffffff7c
   1a6b8:	b	1980c <argp_failure@@Base+0x45c>
   1a6bc:	mov	r0, sl
   1a6c0:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a6c4:	b	1a34c <argp_failure@@Base+0xf9c>
   1a6c8:	mov	r0, sl
   1a6cc:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a6d0:	b	198d4 <argp_failure@@Base+0x524>
   1a6d4:	mov	r1, #1
   1a6d8:	mov	r0, sl
   1a6dc:	bl	1e928 <argp_parse@@Base+0x3028>
   1a6e0:	cmp	r0, #0
   1a6e4:	beq	1a420 <argp_failure@@Base+0x1070>
   1a6e8:	ldr	r2, [sl, #28]
   1a6ec:	b	1a414 <argp_failure@@Base+0x1064>
   1a6f0:	mov	r1, #1
   1a6f4:	mov	r0, sl
   1a6f8:	bl	1e928 <argp_parse@@Base+0x3028>
   1a6fc:	cmp	r0, #0
   1a700:	beq	1a400 <argp_failure@@Base+0x1050>
   1a704:	ldr	r2, [sl, #28]
   1a708:	b	1a3f0 <argp_failure@@Base+0x1040>
   1a70c:	mvn	r3, #0
   1a710:	str	r3, [r7, #12]
   1a714:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a718:	ldr	r1, [r3, #4]
   1a71c:	cmp	r1, #0
   1a720:	beq	1962c <argp_failure@@Base+0x27c>
   1a724:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a728:	mov	r3, #0
   1a72c:	str	r3, [r2, #24]
   1a730:	add	r3, r3, #1
   1a734:	cmp	r3, r1
   1a738:	add	r2, r2, #28
   1a73c:	bcc	1a72c <argp_failure@@Base+0x137c>
   1a740:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a744:	ldr	r3, [pc, #-292]	; 1a628 <argp_failure@@Base+0x1278>
   1a748:	mov	r2, #28
   1a74c:	bl	11a74 <qsort@plt>
   1a750:	b	1962c <argp_failure@@Base+0x27c>
   1a754:	mvn	r3, #0
   1a758:	str	r3, [r7, #12]
   1a75c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a760:	ldr	r3, [r3, #4]
   1a764:	cmp	r3, #0
   1a768:	str	r3, [fp, #-120]	; 0xffffff88
   1a76c:	sub	r6, r3, #1
   1a770:	bne	19fd0 <argp_failure@@Base+0xc20>
   1a774:	b	1962c <argp_failure@@Base+0x27c>
   1a778:	mov	r4, r9
   1a77c:	b	1a494 <argp_failure@@Base+0x10e4>
   1a780:	mov	r1, #1
   1a784:	mov	r0, sl
   1a788:	bl	1e928 <argp_parse@@Base+0x3028>
   1a78c:	cmp	r0, #0
   1a790:	beq	1a588 <argp_failure@@Base+0x11d8>
   1a794:	ldr	r3, [sl, #28]
   1a798:	b	1a578 <argp_failure@@Base+0x11c8>
   1a79c:	mov	r0, sl
   1a7a0:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a7a4:	ldr	r3, [sl, #28]
   1a7a8:	b	1a564 <argp_failure@@Base+0x11b4>
   1a7ac:	mov	r3, r8
   1a7b0:	mov	r4, r5
   1a7b4:	b	19bf4 <argp_failure@@Base+0x844>
   1a7b8:	cmp	r5, r6
   1a7bc:	bhi	1a938 <argp_failure@@Base+0x1588>
   1a7c0:	ldr	r1, [sl, #32]
   1a7c4:	add	r2, r3, #3
   1a7c8:	cmp	r1, r2
   1a7cc:	bcs	1a7e8 <argp_failure@@Base+0x1438>
   1a7d0:	mov	r1, #3
   1a7d4:	mov	r0, sl
   1a7d8:	bl	1e928 <argp_parse@@Base+0x3028>
   1a7dc:	cmp	r0, #0
   1a7e0:	beq	1a504 <argp_failure@@Base+0x1154>
   1a7e4:	ldr	r3, [sl, #28]
   1a7e8:	ldr	r2, [pc, #-452]	; 1a62c <argp_failure@@Base+0x127c>
   1a7ec:	ldrh	r1, [r2]
   1a7f0:	ldrb	r2, [r2, #2]
   1a7f4:	strh	r1, [r3]
   1a7f8:	strb	r2, [r3, #2]
   1a7fc:	ldr	r3, [sl, #28]
   1a800:	add	r3, r3, #3
   1a804:	str	r3, [sl, #28]
   1a808:	b	1a504 <argp_failure@@Base+0x1154>
   1a80c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a810:	ldr	r8, [r3]
   1a814:	str	r4, [fp, #-88]	; 0xffffffa8
   1a818:	str	r4, [fp, #-84]	; 0xffffffac
   1a81c:	str	r4, [fp, #-80]	; 0xffffffb0
   1a820:	b	1976c <argp_failure@@Base+0x3bc>
   1a824:	ldr	r0, [sl, #28]
   1a828:	mov	r2, r5
   1a82c:	mov	r1, r4
   1a830:	bl	11744 <memcpy@plt>
   1a834:	ldr	r3, [sl, #28]
   1a838:	add	r5, r3, r5
   1a83c:	str	r5, [sl, #28]
   1a840:	b	1a53c <argp_failure@@Base+0x118c>
   1a844:	mov	r0, sl
   1a848:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a84c:	ldr	r3, [sl, #28]
   1a850:	ldr	r2, [sl, #24]
   1a854:	ldr	r1, [sl, #16]
   1a858:	ldr	r6, [sl, #20]
   1a85c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1a860:	sub	r2, r3, r2
   1a864:	cmp	r2, r1
   1a868:	bic	r6, r6, r6, asr #31
   1a86c:	ldr	r5, [r7, #20]
   1a870:	bls	1a4d0 <argp_failure@@Base+0x1120>
   1a874:	mov	r0, sl
   1a878:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a87c:	ldr	r3, [sl, #28]
   1a880:	ldr	r2, [sl, #24]
   1a884:	ldr	r1, [sl, #16]
   1a888:	sub	r2, r3, r2
   1a88c:	str	r5, [sl, #4]
   1a890:	mov	r5, r7
   1a894:	ldr	r7, [r7, #20]
   1a898:	cmp	r2, r1
   1a89c:	movls	r5, r7
   1a8a0:	bls	1a4d8 <argp_failure@@Base+0x1128>
   1a8a4:	mov	r0, sl
   1a8a8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1a8ac:	ldr	r5, [r5, #20]
   1a8b0:	ldr	r3, [sl, #28]
   1a8b4:	b	1a4d8 <argp_failure@@Base+0x1128>
   1a8b8:	str	r5, [sp]
   1a8bc:	ldr	r3, [pc, #-660]	; 1a630 <argp_failure@@Base+0x1280>
   1a8c0:	mov	r1, r2
   1a8c4:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a8c8:	bl	193b0 <argp_failure@@Base>
   1a8cc:	b	19d10 <argp_failure@@Base+0x960>
   1a8d0:	ldr	r3, [pc, #-676]	; 1a634 <argp_failure@@Base+0x1284>
   1a8d4:	ldr	r1, [pc, #-676]	; 1a638 <argp_failure@@Base+0x1288>
   1a8d8:	mov	r2, #0
   1a8dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a8e0:	stm	sp, {r1, r3}
   1a8e4:	mov	r1, r2
   1a8e8:	ldr	r3, [pc, #-692]	; 1a63c <argp_failure@@Base+0x128c>
   1a8ec:	bl	193b0 <argp_failure@@Base>
   1a8f0:	b	195fc <argp_failure@@Base+0x24c>
   1a8f4:	ldr	r3, [pc, #-700]	; 1a640 <argp_failure@@Base+0x1290>
   1a8f8:	b	1a8d4 <argp_failure@@Base+0x1524>
   1a8fc:	mov	r1, #1
   1a900:	mov	r0, sl
   1a904:	bl	1e928 <argp_parse@@Base+0x3028>
   1a908:	cmp	r0, #0
   1a90c:	beq	1969c <argp_failure@@Base+0x2ec>
   1a910:	ldr	r3, [sl, #28]
   1a914:	b	1968c <argp_failure@@Base+0x2dc>
   1a918:	ldr	r0, [r6, #16]
   1a91c:	sub	r2, fp, #76	; 0x4c
   1a920:	ldr	r1, [r8, #20]
   1a924:	bl	18010 <daemon@@Base+0x1e90>
   1a928:	b	1a588 <argp_failure@@Base+0x11d8>
   1a92c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a930:	bl	11810 <funlockfile@plt>
   1a934:	b	196fc <argp_failure@@Base+0x34c>
   1a938:	ldr	r2, [sl, #24]
   1a93c:	ldr	r1, [sl, #16]
   1a940:	sub	r3, r3, r2
   1a944:	cmp	r3, r1
   1a948:	bhi	1aac0 <argp_failure@@Base+0x1710>
   1a94c:	ldr	r3, [sl, #20]
   1a950:	mov	r6, #32
   1a954:	cmp	r3, #0
   1a958:	subge	r5, r5, r3
   1a95c:	mov	r7, #1
   1a960:	cmp	r5, #0
   1a964:	sub	r5, r5, #1
   1a968:	ble	1a504 <argp_failure@@Base+0x1154>
   1a96c:	ldr	r3, [sl, #28]
   1a970:	ldr	r2, [sl, #32]
   1a974:	cmp	r3, r2
   1a978:	bcs	1a9a4 <argp_failure@@Base+0x15f4>
   1a97c:	add	r2, r3, #1
   1a980:	cmp	r5, #0
   1a984:	str	r2, [sl, #28]
   1a988:	sub	r5, r5, #1
   1a98c:	strb	r6, [r3]
   1a990:	ble	1a504 <argp_failure@@Base+0x1154>
   1a994:	ldr	r3, [sl, #28]
   1a998:	ldr	r2, [sl, #32]
   1a99c:	cmp	r3, r2
   1a9a0:	bcc	1a97c <argp_failure@@Base+0x15cc>
   1a9a4:	mov	r1, r7
   1a9a8:	mov	r0, sl
   1a9ac:	bl	1e928 <argp_parse@@Base+0x3028>
   1a9b0:	cmp	r0, #0
   1a9b4:	beq	1a960 <argp_failure@@Base+0x15b0>
   1a9b8:	ldr	r3, [sl, #28]
   1a9bc:	b	1a97c <argp_failure@@Base+0x15cc>
   1a9c0:	mov	r1, #1
   1a9c4:	mov	r0, sl
   1a9c8:	bl	1e928 <argp_parse@@Base+0x3028>
   1a9cc:	cmp	r0, #0
   1a9d0:	beq	1a504 <argp_failure@@Base+0x1154>
   1a9d4:	ldr	r3, [sl, #28]
   1a9d8:	b	1a4f4 <argp_failure@@Base+0x1144>
   1a9dc:	ldr	r4, [pc, #-912]	; 1a654 <argp_failure@@Base+0x12a4>
   1a9e0:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a9e4:	ldr	r3, [sl, #28]
   1a9e8:	ldr	r2, [sl, #32]
   1a9ec:	cmp	r3, r2
   1a9f0:	bcs	1aaa4 <argp_failure@@Base+0x16f4>
   1a9f4:	add	r1, r3, #1
   1a9f8:	mov	r2, #10
   1a9fc:	str	r1, [sl, #28]
   1aa00:	strb	r2, [r3]
   1aa04:	mov	r0, r4
   1aa08:	bl	11918 <strlen@plt>
   1aa0c:	subs	r6, r0, #0
   1aa10:	beq	1aa94 <argp_failure@@Base+0x16e4>
   1aa14:	ldr	r0, [sl, #28]
   1aa18:	ldr	r2, [sl, #32]
   1aa1c:	add	r3, r0, r6
   1aa20:	cmp	r2, r3
   1aa24:	bcs	1aa40 <argp_failure@@Base+0x1690>
   1aa28:	mov	r1, r6
   1aa2c:	mov	r0, sl
   1aa30:	bl	1e928 <argp_parse@@Base+0x3028>
   1aa34:	cmp	r0, #0
   1aa38:	beq	1aa94 <argp_failure@@Base+0x16e4>
   1aa3c:	ldr	r0, [sl, #28]
   1aa40:	mov	r2, r6
   1aa44:	mov	r1, r4
   1aa48:	bl	11744 <memcpy@plt>
   1aa4c:	ldr	r3, [sl, #28]
   1aa50:	add	r3, r3, r6
   1aa54:	str	r3, [sl, #28]
   1aa58:	ldr	r2, [sl, #32]
   1aa5c:	cmp	r2, r3
   1aa60:	bls	1aaf0 <argp_failure@@Base+0x1740>
   1aa64:	add	r1, r3, #1
   1aa68:	mov	r2, #10
   1aa6c:	str	r1, [sl, #28]
   1aa70:	strb	r2, [r3]
   1aa74:	b	19aac <argp_failure@@Base+0x6fc>
   1aa78:	mov	r1, #1
   1aa7c:	mov	r0, sl
   1aa80:	bl	1e928 <argp_parse@@Base+0x3028>
   1aa84:	cmp	r0, #0
   1aa88:	beq	19740 <argp_failure@@Base+0x390>
   1aa8c:	ldr	r3, [sl, #28]
   1aa90:	b	19730 <argp_failure@@Base+0x380>
   1aa94:	ldr	r3, [sl, #28]
   1aa98:	b	1aa58 <argp_failure@@Base+0x16a8>
   1aa9c:	ldr	r3, [pc, #-1120]	; 1a644 <argp_failure@@Base+0x1294>
   1aaa0:	b	1a8d4 <argp_failure@@Base+0x1524>
   1aaa4:	mov	r1, #1
   1aaa8:	mov	r0, sl
   1aaac:	bl	1e928 <argp_parse@@Base+0x3028>
   1aab0:	cmp	r0, #0
   1aab4:	beq	1aa04 <argp_failure@@Base+0x1654>
   1aab8:	ldr	r3, [sl, #28]
   1aabc:	b	1a9f4 <argp_failure@@Base+0x1644>
   1aac0:	mov	r0, sl
   1aac4:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1aac8:	b	1a94c <argp_failure@@Base+0x159c>
   1aacc:	ldr	r3, [pc, #-1164]	; 1a648 <argp_failure@@Base+0x1298>
   1aad0:	b	1a8d4 <argp_failure@@Base+0x1524>
   1aad4:	ldr	r3, [pc, #-1168]	; 1a64c <argp_failure@@Base+0x129c>
   1aad8:	b	1a8d4 <argp_failure@@Base+0x1524>
   1aadc:	mov	r9, r1
   1aae0:	ldr	r4, [pc, #-1172]	; 1a654 <argp_failure@@Base+0x12a4>
   1aae4:	b	1a9e4 <argp_failure@@Base+0x1634>
   1aae8:	ldr	r3, [pc, #-1184]	; 1a650 <argp_failure@@Base+0x12a0>
   1aaec:	b	1a8d4 <argp_failure@@Base+0x1524>
   1aaf0:	mov	r1, #1
   1aaf4:	mov	r0, sl
   1aaf8:	bl	1e928 <argp_parse@@Base+0x3028>
   1aafc:	cmp	r0, #0
   1ab00:	beq	19aac <argp_failure@@Base+0x6fc>
   1ab04:	ldr	r3, [sl, #28]
   1ab08:	b	1aa64 <argp_failure@@Base+0x16b4>
   1ab0c:	ldr	r9, [fp, #-112]	; 0xffffff90
   1ab10:	ldr	r4, [pc, #-1220]	; 1a654 <argp_failure@@Base+0x12a4>
   1ab14:	b	1a9e4 <argp_failure@@Base+0x1634>

0001ab18 <argp_help@@Base>:
   1ab18:	push	{lr}		; (str lr, [sp, #-4]!)
   1ab1c:	sub	sp, sp, #12
   1ab20:	str	r3, [sp]
   1ab24:	mov	r3, r2
   1ab28:	mov	r2, r1
   1ab2c:	mov	r1, #0
   1ab30:	bl	195b8 <argp_failure@@Base+0x208>
   1ab34:	add	sp, sp, #12
   1ab38:	pop	{pc}		; (ldr pc, [sp], #4)

0001ab3c <argp_state_help@@Base>:
   1ab3c:	push	{r4, r5, lr}
   1ab40:	subs	r4, r0, #0
   1ab44:	sub	sp, sp, #12
   1ab48:	mov	r5, r2
   1ab4c:	beq	1abac <argp_state_help@@Base+0x70>
   1ab50:	ldr	r3, [r4, #16]
   1ab54:	tst	r3, #2
   1ab58:	bne	1aba4 <argp_state_help@@Base+0x68>
   1ab5c:	cmp	r1, #0
   1ab60:	beq	1aba4 <argp_state_help@@Base+0x68>
   1ab64:	tst	r3, #64	; 0x40
   1ab68:	ldr	r3, [r4, #40]	; 0x28
   1ab6c:	orrne	r5, r5, #128	; 0x80
   1ab70:	ldr	r0, [r4]
   1ab74:	mov	r2, r1
   1ab78:	str	r3, [sp]
   1ab7c:	mov	r1, r4
   1ab80:	mov	r3, r5
   1ab84:	bl	195b8 <argp_failure@@Base+0x208>
   1ab88:	ldr	r3, [r4, #16]
   1ab8c:	tst	r3, #32
   1ab90:	bne	1aba4 <argp_state_help@@Base+0x68>
   1ab94:	ands	r0, r5, #256	; 0x100
   1ab98:	bne	1abd8 <argp_state_help@@Base+0x9c>
   1ab9c:	tst	r5, #512	; 0x200
   1aba0:	bne	1abd4 <argp_state_help@@Base+0x98>
   1aba4:	add	sp, sp, #12
   1aba8:	pop	{r4, r5, pc}
   1abac:	cmp	r1, #0
   1abb0:	beq	1aba4 <argp_state_help@@Base+0x68>
   1abb4:	ldr	r3, [pc, #40]	; 1abe4 <argp_state_help@@Base+0xa8>
   1abb8:	mov	r2, r1
   1abbc:	mov	r1, r4
   1abc0:	ldr	ip, [r3]
   1abc4:	mov	r3, r5
   1abc8:	str	ip, [sp]
   1abcc:	bl	195b8 <argp_failure@@Base+0x208>
   1abd0:	b	1ab94 <argp_state_help@@Base+0x58>
   1abd4:	bl	1190c <exit@plt>
   1abd8:	ldr	r3, [pc, #8]	; 1abe8 <argp_state_help@@Base+0xac>
   1abdc:	ldr	r0, [r3]
   1abe0:	bl	1190c <exit@plt>
   1abe4:	andeq	r3, r3, r0, asr #11
   1abe8:	andeq	r3, r3, r8, lsr #11

0001abec <argp_error@@Base>:
   1abec:	push	{r1, r2, r3}
   1abf0:	push	{r4, r5, lr}
   1abf4:	subs	r5, r0, #0
   1abf8:	sub	sp, sp, #16
   1abfc:	beq	1ad0c <argp_error@@Base+0x120>
   1ac00:	ldr	r3, [r5, #16]
   1ac04:	tst	r3, #2
   1ac08:	bne	1acfc <argp_error@@Base+0x110>
   1ac0c:	ldr	r4, [r5, #44]	; 0x2c
   1ac10:	cmp	r4, #0
   1ac14:	beq	1acfc <argp_error@@Base+0x110>
   1ac18:	mov	r0, r4
   1ac1c:	bl	11a50 <flockfile@plt>
   1ac20:	ldr	r0, [r5, #40]	; 0x28
   1ac24:	add	r3, sp, #32
   1ac28:	str	r3, [sp, #12]
   1ac2c:	mov	r1, r4
   1ac30:	bl	11660 <fputs_unlocked@plt>
   1ac34:	ldr	r3, [r4, #20]
   1ac38:	ldr	r2, [r4, #24]
   1ac3c:	cmp	r3, r2
   1ac40:	addcc	r1, r3, #1
   1ac44:	movcc	r2, #58	; 0x3a
   1ac48:	strcc	r1, [r4, #20]
   1ac4c:	strbcc	r2, [r3]
   1ac50:	bcs	1ad38 <argp_error@@Base+0x14c>
   1ac54:	ldr	r3, [r4, #20]
   1ac58:	ldr	r2, [r4, #24]
   1ac5c:	cmp	r3, r2
   1ac60:	addcc	r1, r3, #1
   1ac64:	movcc	r2, #32
   1ac68:	strcc	r1, [r4, #20]
   1ac6c:	strbcc	r2, [r3]
   1ac70:	bcs	1ad58 <argp_error@@Base+0x16c>
   1ac74:	ldr	r1, [sp, #28]
   1ac78:	ldr	r2, [sp, #12]
   1ac7c:	mov	r0, r4
   1ac80:	bl	11a2c <vfprintf@plt>
   1ac84:	ldr	r3, [r4, #20]
   1ac88:	ldr	r2, [r4, #24]
   1ac8c:	cmp	r3, r2
   1ac90:	addcc	r1, r3, #1
   1ac94:	movcc	r2, #10
   1ac98:	strcc	r1, [r4, #20]
   1ac9c:	strbcc	r2, [r3]
   1aca0:	bcs	1ad48 <argp_error@@Base+0x15c>
   1aca4:	cmp	r5, #0
   1aca8:	beq	1ad68 <argp_error@@Base+0x17c>
   1acac:	ldr	r3, [r5, #16]
   1acb0:	tst	r3, #2
   1acb4:	bne	1acf4 <argp_error@@Base+0x108>
   1acb8:	ldr	r2, [r5, #40]	; 0x28
   1acbc:	tst	r3, #64	; 0x40
   1acc0:	moveq	r3, #260	; 0x104
   1acc4:	movne	r3, #388	; 0x184
   1acc8:	ldr	r0, [r5]
   1accc:	mov	r1, r5
   1acd0:	str	r2, [sp]
   1acd4:	mov	r2, r4
   1acd8:	bl	195b8 <argp_failure@@Base+0x208>
   1acdc:	ldr	r3, [r5, #16]
   1ace0:	tst	r3, #32
   1ace4:	bne	1acf4 <argp_error@@Base+0x108>
   1ace8:	ldr	r3, [pc, #156]	; 1ad8c <argp_error@@Base+0x1a0>
   1acec:	ldr	r0, [r3]
   1acf0:	bl	1190c <exit@plt>
   1acf4:	mov	r0, r4
   1acf8:	bl	11810 <funlockfile@plt>
   1acfc:	add	sp, sp, #16
   1ad00:	pop	{r4, r5, lr}
   1ad04:	add	sp, sp, #12
   1ad08:	bx	lr
   1ad0c:	ldr	r3, [pc, #124]	; 1ad90 <argp_error@@Base+0x1a4>
   1ad10:	ldr	r4, [r3]
   1ad14:	cmp	r4, #0
   1ad18:	beq	1acfc <argp_error@@Base+0x110>
   1ad1c:	mov	r0, r4
   1ad20:	bl	11a50 <flockfile@plt>
   1ad24:	ldr	r2, [pc, #104]	; 1ad94 <argp_error@@Base+0x1a8>
   1ad28:	add	r3, sp, #32
   1ad2c:	str	r3, [sp, #12]
   1ad30:	ldr	r0, [r2]
   1ad34:	b	1ac2c <argp_error@@Base+0x40>
   1ad38:	mov	r1, #58	; 0x3a
   1ad3c:	mov	r0, r4
   1ad40:	bl	119f0 <__overflow@plt>
   1ad44:	b	1ac54 <argp_error@@Base+0x68>
   1ad48:	mov	r1, #10
   1ad4c:	mov	r0, r4
   1ad50:	bl	119f0 <__overflow@plt>
   1ad54:	b	1aca4 <argp_error@@Base+0xb8>
   1ad58:	mov	r1, #32
   1ad5c:	mov	r0, r4
   1ad60:	bl	119f0 <__overflow@plt>
   1ad64:	b	1ac74 <argp_error@@Base+0x88>
   1ad68:	ldr	r1, [pc, #36]	; 1ad94 <argp_error@@Base+0x1a8>
   1ad6c:	mov	r2, r4
   1ad70:	mov	r3, #260	; 0x104
   1ad74:	ldr	r0, [r1]
   1ad78:	mov	r1, r5
   1ad7c:	str	r0, [sp]
   1ad80:	mov	r0, r5
   1ad84:	bl	195b8 <argp_failure@@Base+0x208>
   1ad88:	b	1ace8 <argp_error@@Base+0xfc>
   1ad8c:	andeq	r3, r3, r8, lsr #11
   1ad90:	andeq	r3, r3, r8, asr #11
   1ad94:	andeq	r3, r3, r0, asr #11
   1ad98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad9c:	sub	sp, sp, #36	; 0x24
   1ada0:	ldr	sl, [r0]
   1ada4:	str	r0, [sp, #12]
   1ada8:	cmp	sl, #0
   1adac:	str	r1, [sp, #16]
   1adb0:	str	r2, [sp, #20]
   1adb4:	mov	r9, r3
   1adb8:	ldr	r8, [r0, #16]
   1adbc:	ldr	r7, [sp, #72]	; 0x48
   1adc0:	beq	1af8c <argp_error@@Base+0x3a0>
   1adc4:	add	fp, sl, #24
   1adc8:	str	r8, [sp, #28]
   1adcc:	str	r3, [sp, #24]
   1add0:	ldr	r4, [fp, #-20]	; 0xffffffec
   1add4:	sub	r1, fp, #24
   1add8:	cmp	r4, #0
   1addc:	bne	1adec <argp_error@@Base+0x200>
   1ade0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ade4:	cmp	r3, #0
   1ade8:	beq	1af60 <argp_error@@Base+0x374>
   1adec:	ldr	r3, [fp, #-12]
   1adf0:	tst	r3, #4
   1adf4:	moveq	sl, r1
   1adf8:	moveq	r5, r3
   1adfc:	ldrne	r5, [sl, #12]
   1ae00:	ands	r5, r5, #8
   1ae04:	bne	1af48 <argp_error@@Base+0x35c>
   1ae08:	tst	r3, #8
   1ae0c:	bne	1ae88 <argp_error@@Base+0x29c>
   1ae10:	sub	r3, r4, #1
   1ae14:	cmp	r3, #254	; 0xfe
   1ae18:	bhi	1ae88 <argp_error@@Base+0x29c>
   1ae1c:	bl	118f4 <__ctype_b_loc@plt>
   1ae20:	lsl	r3, r4, #1
   1ae24:	ldr	r1, [r0]
   1ae28:	ldrh	r3, [r1, r3]
   1ae2c:	tst	r3, #16384	; 0x4000
   1ae30:	beq	1ae88 <argp_error@@Base+0x29c>
   1ae34:	ldr	r3, [r7, #4]
   1ae38:	add	r1, r3, #1
   1ae3c:	str	r1, [r7, #4]
   1ae40:	strb	r4, [r3]
   1ae44:	ldr	r3, [sl, #8]
   1ae48:	cmp	r3, #0
   1ae4c:	beq	1ae7c <argp_error@@Base+0x290>
   1ae50:	ldr	r3, [r7, #4]
   1ae54:	mov	r2, #58	; 0x3a
   1ae58:	add	r1, r3, #1
   1ae5c:	str	r1, [r7, #4]
   1ae60:	strb	r2, [r3]
   1ae64:	ldr	r3, [sl, #12]
   1ae68:	tst	r3, #1
   1ae6c:	ldrne	r3, [r7, #4]
   1ae70:	addne	r1, r3, #1
   1ae74:	strne	r1, [r7, #4]
   1ae78:	strbne	r2, [r3]
   1ae7c:	ldr	r3, [r7, #4]
   1ae80:	mov	r2, #0
   1ae84:	strb	r2, [r3]
   1ae88:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1ae8c:	cmp	r4, #0
   1ae90:	beq	1af48 <argp_error@@Base+0x35c>
   1ae94:	ldr	r8, [r7]
   1ae98:	ldr	r6, [r8, #8]
   1ae9c:	ldr	r0, [r6]
   1aea0:	cmp	r0, #0
   1aea4:	beq	1aec8 <argp_error@@Base+0x2dc>
   1aea8:	mov	r9, r6
   1aeac:	mov	r1, r4
   1aeb0:	bl	11684 <strcmp@plt>
   1aeb4:	cmp	r0, #0
   1aeb8:	beq	1af50 <argp_error@@Base+0x364>
   1aebc:	ldr	r0, [r9, #16]!
   1aec0:	cmp	r0, #0
   1aec4:	bne	1aeac <argp_error@@Base+0x2c0>
   1aec8:	ldr	r3, [sl, #8]
   1aecc:	ldr	r1, [r7, #8]
   1aed0:	cmp	r3, #0
   1aed4:	str	r4, [r1]
   1aed8:	beq	1aeec <argp_error@@Base+0x300>
   1aedc:	ldr	r3, [sl, #12]
   1aee0:	tst	r3, #1
   1aee4:	moveq	r5, #1
   1aee8:	movne	r5, #2
   1aeec:	str	r5, [r1, #4]
   1aef0:	ldr	ip, [fp, #-20]	; 0xffffffec
   1aef4:	mov	r3, #0
   1aef8:	cmp	ip, r3
   1aefc:	str	r3, [r1, #8]
   1af00:	ldr	r2, [sp, #24]
   1af04:	ldr	r3, [r8, #48]	; 0x30
   1af08:	ldreq	ip, [sl, #4]
   1af0c:	sub	r3, r2, r3
   1af10:	bic	ip, ip, #-16777216	; 0xff000000
   1af14:	asr	r3, r3, #2
   1af18:	add	lr, r1, #16
   1af1c:	rsb	r0, r3, r3, lsl #3
   1af20:	add	r0, r0, r0, lsl #6
   1af24:	add	r0, r3, r0, lsl #3
   1af28:	rsb	r0, r0, r0, lsl #15
   1af2c:	add	r3, r3, r0, lsl #3
   1af30:	add	r3, r3, #1
   1af34:	add	r3, ip, r3, lsl #24
   1af38:	str	r3, [r1, #12]
   1af3c:	mov	r3, #0
   1af40:	str	lr, [r7, #8]
   1af44:	str	r3, [r1, #16]
   1af48:	add	fp, fp, #24
   1af4c:	b	1add0 <argp_error@@Base+0x1e4>
   1af50:	sub	r6, r9, r6
   1af54:	cmn	r6, #15
   1af58:	bge	1af48 <argp_error@@Base+0x35c>
   1af5c:	b	1aec8 <argp_error@@Base+0x2dc>
   1af60:	ldr	r3, [fp, #-8]
   1af64:	cmp	r3, #0
   1af68:	bne	1adec <argp_error@@Base+0x200>
   1af6c:	ldr	r3, [fp, #-4]
   1af70:	cmp	r3, #0
   1af74:	bne	1adec <argp_error@@Base+0x200>
   1af78:	ldr	r3, [sp, #12]
   1af7c:	ldr	r8, [sp, #28]
   1af80:	ldr	r9, [sp, #24]
   1af84:	ldr	r3, [r3, #4]
   1af88:	b	1afa0 <argp_error@@Base+0x3b4>
   1af8c:	ldr	r3, [r0, #4]
   1af90:	cmp	r3, #0
   1af94:	moveq	r0, r9
   1af98:	moveq	r9, r3
   1af9c:	beq	1b010 <argp_error@@Base+0x424>
   1afa0:	ldr	r2, [r7, #4]
   1afa4:	ldr	r1, [sp, #12]
   1afa8:	str	r3, [r9]
   1afac:	cmp	r8, #0
   1afb0:	stmib	r9, {r1, r2}
   1afb4:	ldr	r2, [sp, #16]
   1afb8:	mov	r3, #0
   1afbc:	str	r2, [r9, #16]
   1afc0:	ldr	r2, [sp, #20]
   1afc4:	str	r3, [r9, #12]
   1afc8:	str	r2, [r9, #20]
   1afcc:	str	r3, [r9, #24]
   1afd0:	str	r3, [r9, #32]
   1afd4:	str	r3, [r9, #28]
   1afd8:	beq	1b00c <argp_error@@Base+0x420>
   1afdc:	ldr	r2, [r8]
   1afe0:	cmp	r2, r3
   1afe4:	beq	1b058 <argp_error@@Base+0x46c>
   1afe8:	add	r3, r3, #1
   1afec:	ldr	r2, [r8, r3, lsl #4]
   1aff0:	cmp	r2, #0
   1aff4:	bne	1afe8 <argp_error@@Base+0x3fc>
   1aff8:	lsl	r3, r3, #2
   1affc:	ldr	r2, [r7, #12]
   1b000:	add	r3, r2, r3
   1b004:	str	r2, [r9, #28]
   1b008:	str	r3, [r7, #12]
   1b00c:	add	r0, r9, #36	; 0x24
   1b010:	cmp	r8, #0
   1b014:	beq	1b050 <argp_error@@Base+0x464>
   1b018:	ldr	r1, [r8]
   1b01c:	cmp	r1, #0
   1b020:	beq	1b050 <argp_error@@Base+0x464>
   1b024:	mov	r2, #0
   1b028:	add	r4, r2, #1
   1b02c:	mov	r3, r0
   1b030:	str	r7, [sp]
   1b034:	mov	r0, r1
   1b038:	mov	r1, r9
   1b03c:	bl	1ad98 <argp_error@@Base+0x1ac>
   1b040:	ldr	r1, [r8, r4, lsl #4]
   1b044:	mov	r2, r4
   1b048:	cmp	r1, #0
   1b04c:	bne	1b028 <argp_error@@Base+0x43c>
   1b050:	add	sp, sp, #36	; 0x24
   1b054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b058:	mov	r3, r2
   1b05c:	b	1affc <argp_error@@Base+0x410>
   1b060:	cmp	r0, #86	; 0x56
   1b064:	beq	1b070 <argp_error@@Base+0x484>
   1b068:	mov	r0, #7
   1b06c:	bx	lr
   1b070:	ldr	r3, [pc, #104]	; 1b0e0 <argp_error@@Base+0x4f4>
   1b074:	push	{r4, lr}
   1b078:	mov	r4, r2
   1b07c:	ldr	r3, [r3]
   1b080:	cmp	r3, #0
   1b084:	beq	1b0a8 <argp_error@@Base+0x4bc>
   1b088:	mov	r1, r2
   1b08c:	ldr	r0, [r2, #48]	; 0x30
   1b090:	blx	r3
   1b094:	ldr	r0, [r4, #16]
   1b098:	ands	r0, r0, #32
   1b09c:	beq	1b0dc <argp_error@@Base+0x4f0>
   1b0a0:	mov	r0, #0
   1b0a4:	pop	{r4, pc}
   1b0a8:	ldr	r3, [pc, #52]	; 1b0e4 <argp_error@@Base+0x4f8>
   1b0ac:	ldr	r2, [r3]
   1b0b0:	cmp	r2, #0
   1b0b4:	beq	1b0c8 <argp_error@@Base+0x4dc>
   1b0b8:	ldr	r1, [pc, #40]	; 1b0e8 <argp_error@@Base+0x4fc>
   1b0bc:	ldr	r0, [r4, #48]	; 0x30
   1b0c0:	bl	1193c <fprintf@plt>
   1b0c4:	b	1b094 <argp_error@@Base+0x4a8>
   1b0c8:	ldr	r2, [pc, #28]	; 1b0ec <argp_error@@Base+0x500>
   1b0cc:	ldr	r1, [pc, #28]	; 1b0f0 <argp_error@@Base+0x504>
   1b0d0:	mov	r0, r4
   1b0d4:	bl	1abec <argp_error@@Base>
   1b0d8:	b	1b094 <argp_error@@Base+0x4a8>
   1b0dc:	bl	1190c <exit@plt>
   1b0e0:	andeq	r3, r3, ip, lsl #20
   1b0e4:	muleq	r3, r8, r0
   1b0e8:	andeq	r1, r2, r8, lsl #31
   1b0ec:	andeq	r1, r2, r4, lsl #28
   1b0f0:	andeq	r1, r2, r8, lsr #18
   1b0f4:	cmn	r0, #3
   1b0f8:	push	{r4, r5, lr}
   1b0fc:	mov	r4, r2
   1b100:	sub	sp, sp, #12
   1b104:	beq	1b1e8 <argp_error@@Base+0x5fc>
   1b108:	ble	1b178 <argp_error@@Base+0x58c>
   1b10c:	cmn	r0, #2
   1b110:	beq	1b138 <argp_error@@Base+0x54c>
   1b114:	cmp	r0, #63	; 0x3f
   1b118:	bne	1b1dc <argp_error@@Base+0x5f0>
   1b11c:	mov	r0, r4
   1b120:	ldr	r2, [pc, #236]	; 1b214 <argp_error@@Base+0x628>
   1b124:	ldr	r1, [r4, #48]	; 0x30
   1b128:	bl	1ab3c <argp_state_help@@Base>
   1b12c:	mov	r0, #0
   1b130:	add	sp, sp, #12
   1b134:	pop	{r4, r5, pc}
   1b138:	ldr	r3, [pc, #216]	; 1b218 <argp_error@@Base+0x62c>
   1b13c:	mov	r0, r1
   1b140:	str	r1, [sp, #4]
   1b144:	str	r1, [r3]
   1b148:	bl	1c7d0 <argp_parse@@Base+0xed0>
   1b14c:	ldr	r3, [r4, #16]
   1b150:	ldr	r2, [pc, #196]	; 1b21c <argp_error@@Base+0x630>
   1b154:	and	r3, r3, #3
   1b158:	cmp	r3, #1
   1b15c:	ldr	r1, [sp, #4]
   1b160:	str	r0, [r4, #40]	; 0x28
   1b164:	str	r0, [r2]
   1b168:	beq	1b204 <argp_error@@Base+0x618>
   1b16c:	mov	r0, #0
   1b170:	add	sp, sp, #12
   1b174:	pop	{r4, r5, pc}
   1b178:	cmn	r0, #4
   1b17c:	bne	1b1dc <argp_error@@Base+0x5f0>
   1b180:	cmp	r1, #0
   1b184:	ldr	r0, [pc, #148]	; 1b220 <argp_error@@Base+0x634>
   1b188:	mov	r2, #10
   1b18c:	movne	r0, r1
   1b190:	mov	r1, #0
   1b194:	bl	11690 <strtol@plt>
   1b198:	ldr	r4, [pc, #132]	; 1b224 <argp_error@@Base+0x638>
   1b19c:	str	r0, [r4]
   1b1a0:	ldr	r3, [r4]
   1b1a4:	cmp	r3, #0
   1b1a8:	sub	r3, r3, #1
   1b1ac:	str	r3, [r4]
   1b1b0:	ble	1b16c <argp_error@@Base+0x580>
   1b1b4:	mov	r5, #1
   1b1b8:	mov	r0, r5
   1b1bc:	bl	11774 <sleep@plt>
   1b1c0:	ldr	r3, [r4]
   1b1c4:	cmp	r3, #0
   1b1c8:	sub	r3, r3, #1
   1b1cc:	str	r3, [r4]
   1b1d0:	bgt	1b1b8 <argp_error@@Base+0x5cc>
   1b1d4:	mov	r0, #0
   1b1d8:	b	1b170 <argp_error@@Base+0x584>
   1b1dc:	mov	r0, #7
   1b1e0:	add	sp, sp, #12
   1b1e4:	pop	{r4, r5, pc}
   1b1e8:	mov	r0, r4
   1b1ec:	ldr	r2, [pc, #52]	; 1b228 <argp_error@@Base+0x63c>
   1b1f0:	ldr	r1, [r4, #48]	; 0x30
   1b1f4:	bl	1ab3c <argp_state_help@@Base>
   1b1f8:	mov	r0, #0
   1b1fc:	add	sp, sp, #12
   1b200:	pop	{r4, r5, pc}
   1b204:	ldr	r3, [r4, #8]
   1b208:	mov	r0, #0
   1b20c:	str	r1, [r3]
   1b210:	b	1b130 <argp_error@@Base+0x544>
   1b214:	andeq	r0, r0, sl, ror r2
   1b218:	andeq	r3, r3, r4, asr #11
   1b21c:	andeq	r3, r3, r0, asr #11
   1b220:	andeq	r1, r2, r8, lsr #28
   1b224:	andeq	r3, r3, r8, lsl #20
   1b228:	andeq	r0, r0, r1, lsl #4
   1b22c:	ldr	r3, [r0]
   1b230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b234:	cmp	r3, #0
   1b238:	sub	sp, sp, #12
   1b23c:	ldr	lr, [r0, #16]
   1b240:	beq	1b278 <argp_error@@Base+0x68c>
   1b244:	ldr	r0, [r1, #8]
   1b248:	mov	r2, #0
   1b24c:	add	r0, r0, #1
   1b250:	str	r0, [r1, #8]
   1b254:	add	r3, r3, #24
   1b258:	ldr	r0, [r3, #-20]	; 0xffffffec
   1b25c:	cmp	r0, #0
   1b260:	bne	1b270 <argp_error@@Base+0x684>
   1b264:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1b268:	cmp	r0, #0
   1b26c:	beq	1b830 <argp_error@@Base+0xc44>
   1b270:	add	r2, r2, #1
   1b274:	b	1b254 <argp_error@@Base+0x668>
   1b278:	ldr	r3, [r0, #4]
   1b27c:	cmp	r3, #0
   1b280:	ldrne	r3, [r1, #8]
   1b284:	addne	r3, r3, #1
   1b288:	strne	r3, [r1, #8]
   1b28c:	cmp	lr, #0
   1b290:	beq	1b61c <argp_error@@Base+0xa30>
   1b294:	ldr	r0, [lr]
   1b298:	cmp	r0, #0
   1b29c:	beq	1b61c <argp_error@@Base+0xa30>
   1b2a0:	mov	r6, r1
   1b2a4:	str	lr, [sp]
   1b2a8:	ldr	r2, [r0]
   1b2ac:	ldr	r7, [r0, #16]
   1b2b0:	cmp	r2, #0
   1b2b4:	beq	1b2ec <argp_error@@Base+0x700>
   1b2b8:	ldr	r0, [r6, #8]
   1b2bc:	mov	r1, #0
   1b2c0:	add	r0, r0, #1
   1b2c4:	str	r0, [r6, #8]
   1b2c8:	add	r2, r2, #24
   1b2cc:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b2d0:	cmp	r0, #0
   1b2d4:	bne	1b2e4 <argp_error@@Base+0x6f8>
   1b2d8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b2dc:	cmp	r0, #0
   1b2e0:	beq	1b860 <argp_error@@Base+0xc74>
   1b2e4:	add	r1, r1, #1
   1b2e8:	b	1b2c8 <argp_error@@Base+0x6dc>
   1b2ec:	ldr	r2, [r0, #4]
   1b2f0:	cmp	r2, #0
   1b2f4:	ldrne	r2, [r6, #8]
   1b2f8:	addne	r2, r2, #1
   1b2fc:	strne	r2, [r6, #8]
   1b300:	cmp	r7, #0
   1b304:	beq	1b8c0 <argp_error@@Base+0xcd4>
   1b308:	ldr	r1, [r7]
   1b30c:	cmp	r1, #0
   1b310:	beq	1b8c0 <argp_error@@Base+0xcd4>
   1b314:	str	r7, [sp, #4]
   1b318:	ldr	r2, [r1]
   1b31c:	ldr	r8, [r1, #16]
   1b320:	cmp	r2, #0
   1b324:	beq	1b35c <argp_error@@Base+0x770>
   1b328:	ldr	r0, [r6, #8]
   1b32c:	mov	r1, #0
   1b330:	add	r0, r0, #1
   1b334:	str	r0, [r6, #8]
   1b338:	add	r2, r2, #24
   1b33c:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b340:	cmp	r0, #0
   1b344:	bne	1b354 <argp_error@@Base+0x768>
   1b348:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b34c:	cmp	r0, #0
   1b350:	beq	1b890 <argp_error@@Base+0xca4>
   1b354:	add	r1, r1, #1
   1b358:	b	1b338 <argp_error@@Base+0x74c>
   1b35c:	ldr	r2, [r1, #4]
   1b360:	cmp	r2, #0
   1b364:	ldrne	r2, [r6, #8]
   1b368:	addne	r2, r2, #1
   1b36c:	strne	r2, [r6, #8]
   1b370:	cmp	r8, #0
   1b374:	beq	1b8c8 <argp_error@@Base+0xcdc>
   1b378:	ldr	r1, [r8]
   1b37c:	cmp	r1, #0
   1b380:	beq	1b8c8 <argp_error@@Base+0xcdc>
   1b384:	ldr	r2, [r1]
   1b388:	ldr	r9, [r1, #16]
   1b38c:	cmp	r2, #0
   1b390:	beq	1b3c8 <argp_error@@Base+0x7dc>
   1b394:	ldr	r0, [r6, #8]
   1b398:	mov	r1, #0
   1b39c:	add	r0, r0, #1
   1b3a0:	str	r0, [r6, #8]
   1b3a4:	add	r2, r2, #24
   1b3a8:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b3ac:	cmp	r0, #0
   1b3b0:	bne	1b3c0 <argp_error@@Base+0x7d4>
   1b3b4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b3b8:	cmp	r0, #0
   1b3bc:	beq	1b8d0 <argp_error@@Base+0xce4>
   1b3c0:	add	r1, r1, #1
   1b3c4:	b	1b3a4 <argp_error@@Base+0x7b8>
   1b3c8:	ldr	r2, [r1, #4]
   1b3cc:	cmp	r2, #0
   1b3d0:	ldrne	r2, [r6, #8]
   1b3d4:	addne	r2, r2, #1
   1b3d8:	strne	r2, [r6, #8]
   1b3dc:	cmp	r9, #0
   1b3e0:	beq	1b5cc <argp_error@@Base+0x9e0>
   1b3e4:	ldr	r1, [r9]
   1b3e8:	cmp	r1, #0
   1b3ec:	beq	1b5cc <argp_error@@Base+0x9e0>
   1b3f0:	ldr	r2, [r1]
   1b3f4:	ldr	sl, [r1, #16]
   1b3f8:	cmp	r2, #0
   1b3fc:	beq	1b464 <argp_error@@Base+0x878>
   1b400:	ldr	r0, [r6, #8]
   1b404:	mov	r1, #0
   1b408:	add	r0, r0, #1
   1b40c:	str	r0, [r6, #8]
   1b410:	b	1b418 <argp_error@@Base+0x82c>
   1b414:	add	r1, r1, #1
   1b418:	add	r2, r2, #24
   1b41c:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b420:	cmp	r0, #0
   1b424:	bne	1b414 <argp_error@@Base+0x828>
   1b428:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b42c:	cmp	r0, #0
   1b430:	bne	1b414 <argp_error@@Base+0x828>
   1b434:	ldr	r0, [r2, #-8]
   1b438:	cmp	r0, #0
   1b43c:	bne	1b414 <argp_error@@Base+0x828>
   1b440:	ldr	r0, [r2, #-4]
   1b444:	cmp	r0, #0
   1b448:	bne	1b414 <argp_error@@Base+0x828>
   1b44c:	ldm	r6, {r0, r2}
   1b450:	add	ip, r1, r1, lsl #1
   1b454:	add	r0, r0, ip
   1b458:	add	r1, r2, r1
   1b45c:	stm	r6, {r0, r1}
   1b460:	b	1b478 <argp_error@@Base+0x88c>
   1b464:	ldr	r2, [r1, #4]
   1b468:	cmp	r2, #0
   1b46c:	ldrne	r2, [r6, #8]
   1b470:	addne	r2, r2, #1
   1b474:	strne	r2, [r6, #8]
   1b478:	cmp	sl, #0
   1b47c:	beq	1b828 <argp_error@@Base+0xc3c>
   1b480:	ldr	r1, [sl]
   1b484:	cmp	r1, #0
   1b488:	beq	1b828 <argp_error@@Base+0xc3c>
   1b48c:	ldr	r2, [r1]
   1b490:	ldr	fp, [r1, #16]
   1b494:	cmp	r2, #0
   1b498:	beq	1b800 <argp_error@@Base+0xc14>
   1b49c:	ldr	r0, [r6, #8]
   1b4a0:	mov	r1, #0
   1b4a4:	add	r0, r0, #1
   1b4a8:	str	r0, [r6, #8]
   1b4ac:	b	1b4b4 <argp_error@@Base+0x8c8>
   1b4b0:	add	r1, r1, #1
   1b4b4:	add	r2, r2, #24
   1b4b8:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b4bc:	cmp	r0, #0
   1b4c0:	bne	1b4b0 <argp_error@@Base+0x8c4>
   1b4c4:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b4c8:	cmp	r0, #0
   1b4cc:	bne	1b4b0 <argp_error@@Base+0x8c4>
   1b4d0:	ldr	r0, [r2, #-8]
   1b4d4:	cmp	r0, #0
   1b4d8:	bne	1b4b0 <argp_error@@Base+0x8c4>
   1b4dc:	ldr	r0, [r2, #-4]
   1b4e0:	cmp	r0, #0
   1b4e4:	bne	1b4b0 <argp_error@@Base+0x8c4>
   1b4e8:	ldm	r6, {r0, r2}
   1b4ec:	add	ip, r1, r1, lsl #1
   1b4f0:	add	r0, r0, ip
   1b4f4:	add	r1, r2, r1
   1b4f8:	stm	r6, {r0, r1}
   1b4fc:	cmp	fp, #0
   1b500:	beq	1b820 <argp_error@@Base+0xc34>
   1b504:	ldr	r0, [fp]
   1b508:	cmp	r0, #0
   1b50c:	beq	1b820 <argp_error@@Base+0xc34>
   1b510:	ldr	r2, [r0]
   1b514:	ldr	r5, [r0, #16]
   1b518:	cmp	r2, #0
   1b51c:	beq	1b624 <argp_error@@Base+0xa38>
   1b520:	ldr	r0, [r6, #8]
   1b524:	mov	r1, #0
   1b528:	add	r0, r0, #1
   1b52c:	str	r0, [r6, #8]
   1b530:	b	1b538 <argp_error@@Base+0x94c>
   1b534:	add	r1, r1, #1
   1b538:	add	r2, r2, #24
   1b53c:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b540:	cmp	r0, #0
   1b544:	bne	1b534 <argp_error@@Base+0x948>
   1b548:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b54c:	cmp	r0, #0
   1b550:	bne	1b534 <argp_error@@Base+0x948>
   1b554:	ldr	r0, [r2, #-8]
   1b558:	cmp	r0, #0
   1b55c:	bne	1b534 <argp_error@@Base+0x948>
   1b560:	ldr	r0, [r2, #-4]
   1b564:	cmp	r0, #0
   1b568:	bne	1b534 <argp_error@@Base+0x948>
   1b56c:	ldm	r6, {r0, r2}
   1b570:	add	ip, r1, r1, lsl #1
   1b574:	cmp	r5, #0
   1b578:	add	r0, r0, ip
   1b57c:	add	r1, r2, r1
   1b580:	stm	r6, {r0, r1}
   1b584:	bne	1b640 <argp_error@@Base+0xa54>
   1b588:	ldr	r1, [r6, #12]
   1b58c:	ldr	r0, [fp, #16]!
   1b590:	add	r2, r1, #1
   1b594:	cmp	r0, #0
   1b598:	str	r2, [r6, #12]
   1b59c:	bne	1b510 <argp_error@@Base+0x924>
   1b5a0:	ldr	r1, [sl, #16]!
   1b5a4:	add	r2, r2, #1
   1b5a8:	cmp	r1, #0
   1b5ac:	str	r2, [r6, #12]
   1b5b0:	bne	1b48c <argp_error@@Base+0x8a0>
   1b5b4:	ldr	r1, [r9, #16]!
   1b5b8:	add	r2, r2, #1
   1b5bc:	cmp	r1, #0
   1b5c0:	str	r2, [r6, #12]
   1b5c4:	bne	1b3f0 <argp_error@@Base+0x804>
   1b5c8:	b	1b5d0 <argp_error@@Base+0x9e4>
   1b5cc:	ldr	r2, [r6, #12]
   1b5d0:	ldr	r1, [r8, #16]!
   1b5d4:	add	r2, r2, #1
   1b5d8:	cmp	r1, #0
   1b5dc:	str	r2, [r6, #12]
   1b5e0:	bne	1b384 <argp_error@@Base+0x798>
   1b5e4:	ldr	r3, [sp, #4]
   1b5e8:	add	r2, r2, #1
   1b5ec:	ldr	r1, [r3, #16]!
   1b5f0:	str	r2, [r6, #12]
   1b5f4:	cmp	r1, #0
   1b5f8:	str	r3, [sp, #4]
   1b5fc:	bne	1b318 <argp_error@@Base+0x72c>
   1b600:	ldr	r3, [sp]
   1b604:	add	r2, r2, #1
   1b608:	ldr	r0, [r3, #16]!
   1b60c:	str	r2, [r6, #12]
   1b610:	cmp	r0, #0
   1b614:	str	r3, [sp]
   1b618:	bne	1b2a8 <argp_error@@Base+0x6bc>
   1b61c:	add	sp, sp, #12
   1b620:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b624:	ldr	r2, [r0, #4]
   1b628:	cmp	r2, #0
   1b62c:	ldrne	r2, [r6, #8]
   1b630:	addne	r2, r2, #1
   1b634:	strne	r2, [r6, #8]
   1b638:	cmp	r5, #0
   1b63c:	beq	1b588 <argp_error@@Base+0x99c>
   1b640:	ldr	r0, [r5]
   1b644:	cmp	r0, #0
   1b648:	beq	1b588 <argp_error@@Base+0x99c>
   1b64c:	ldr	r2, [r0]
   1b650:	ldr	r4, [r0, #16]
   1b654:	cmp	r2, #0
   1b658:	beq	1b7b8 <argp_error@@Base+0xbcc>
   1b65c:	ldr	r0, [r6, #8]
   1b660:	mov	r1, #0
   1b664:	add	r0, r0, #1
   1b668:	str	r0, [r6, #8]
   1b66c:	b	1b674 <argp_error@@Base+0xa88>
   1b670:	add	r1, r1, #1
   1b674:	add	r2, r2, #24
   1b678:	ldr	r0, [r2, #-20]	; 0xffffffec
   1b67c:	cmp	r0, #0
   1b680:	bne	1b670 <argp_error@@Base+0xa84>
   1b684:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1b688:	cmp	r0, #0
   1b68c:	bne	1b670 <argp_error@@Base+0xa84>
   1b690:	ldr	r0, [r2, #-8]
   1b694:	cmp	r0, #0
   1b698:	bne	1b670 <argp_error@@Base+0xa84>
   1b69c:	ldr	r0, [r2, #-4]
   1b6a0:	cmp	r0, #0
   1b6a4:	bne	1b670 <argp_error@@Base+0xa84>
   1b6a8:	ldm	r6, {r0, r2}
   1b6ac:	add	ip, r1, r1, lsl #1
   1b6b0:	add	r0, r0, ip
   1b6b4:	add	r1, r2, r1
   1b6b8:	stm	r6, {r0, r1}
   1b6bc:	cmp	r4, #0
   1b6c0:	beq	1b7d8 <argp_error@@Base+0xbec>
   1b6c4:	ldr	r0, [r4]
   1b6c8:	cmp	r0, #0
   1b6cc:	beq	1b7d8 <argp_error@@Base+0xbec>
   1b6d0:	ldr	r1, [r0]
   1b6d4:	ldr	r2, [r0, #16]
   1b6d8:	cmp	r1, #0
   1b6dc:	beq	1b7e8 <argp_error@@Base+0xbfc>
   1b6e0:	ldr	ip, [r6, #8]
   1b6e4:	mov	r0, #0
   1b6e8:	add	ip, ip, #1
   1b6ec:	str	ip, [r6, #8]
   1b6f0:	b	1b6f8 <argp_error@@Base+0xb0c>
   1b6f4:	add	r0, r0, #1
   1b6f8:	add	r1, r1, #24
   1b6fc:	ldr	ip, [r1, #-20]	; 0xffffffec
   1b700:	cmp	ip, #0
   1b704:	bne	1b6f4 <argp_error@@Base+0xb08>
   1b708:	ldr	ip, [r1, #-24]	; 0xffffffe8
   1b70c:	cmp	ip, #0
   1b710:	bne	1b6f4 <argp_error@@Base+0xb08>
   1b714:	ldr	ip, [r1, #-8]
   1b718:	cmp	ip, #0
   1b71c:	bne	1b6f4 <argp_error@@Base+0xb08>
   1b720:	ldr	ip, [r1, #-4]
   1b724:	cmp	ip, #0
   1b728:	bne	1b6f4 <argp_error@@Base+0xb08>
   1b72c:	ldr	ip, [r6]
   1b730:	ldr	r1, [r6, #4]
   1b734:	add	lr, r0, r0, lsl #1
   1b738:	add	ip, ip, lr
   1b73c:	add	r0, r1, r0
   1b740:	str	ip, [r6]
   1b744:	str	r0, [r6, #4]
   1b748:	cmp	r2, #0
   1b74c:	beq	1b7e0 <argp_error@@Base+0xbf4>
   1b750:	ldr	r0, [r2]
   1b754:	cmp	r0, #0
   1b758:	beq	1b7e0 <argp_error@@Base+0xbf4>
   1b75c:	mov	r7, r2
   1b760:	mov	r1, r6
   1b764:	bl	1b22c <argp_error@@Base+0x640>
   1b768:	ldr	r1, [r6, #12]
   1b76c:	ldr	r0, [r7, #16]!
   1b770:	add	r1, r1, #1
   1b774:	cmp	r0, #0
   1b778:	str	r1, [r6, #12]
   1b77c:	bne	1b760 <argp_error@@Base+0xb74>
   1b780:	ldr	r0, [r4, #16]!
   1b784:	add	r1, r1, #1
   1b788:	cmp	r0, #0
   1b78c:	str	r1, [r6, #12]
   1b790:	bne	1b6d0 <argp_error@@Base+0xae4>
   1b794:	ldr	r0, [r5, #16]!
   1b798:	add	r1, r1, #1
   1b79c:	cmp	r0, #0
   1b7a0:	str	r1, [r6, #12]
   1b7a4:	beq	1b58c <argp_error@@Base+0x9a0>
   1b7a8:	ldr	r2, [r0]
   1b7ac:	ldr	r4, [r0, #16]
   1b7b0:	cmp	r2, #0
   1b7b4:	bne	1b65c <argp_error@@Base+0xa70>
   1b7b8:	ldr	r2, [r0, #4]
   1b7bc:	cmp	r2, #0
   1b7c0:	beq	1b6bc <argp_error@@Base+0xad0>
   1b7c4:	ldr	r2, [r6, #8]
   1b7c8:	cmp	r4, #0
   1b7cc:	add	r2, r2, #1
   1b7d0:	str	r2, [r6, #8]
   1b7d4:	bne	1b6c4 <argp_error@@Base+0xad8>
   1b7d8:	ldr	r1, [r6, #12]
   1b7dc:	b	1b794 <argp_error@@Base+0xba8>
   1b7e0:	ldr	r1, [r6, #12]
   1b7e4:	b	1b780 <argp_error@@Base+0xb94>
   1b7e8:	ldr	r1, [r0, #4]
   1b7ec:	cmp	r1, #0
   1b7f0:	ldrne	r1, [r6, #8]
   1b7f4:	addne	r1, r1, #1
   1b7f8:	strne	r1, [r6, #8]
   1b7fc:	b	1b748 <argp_error@@Base+0xb5c>
   1b800:	ldr	r2, [r1, #4]
   1b804:	cmp	r2, #0
   1b808:	beq	1b4fc <argp_error@@Base+0x910>
   1b80c:	ldr	r2, [r6, #8]
   1b810:	cmp	fp, #0
   1b814:	add	r2, r2, #1
   1b818:	str	r2, [r6, #8]
   1b81c:	bne	1b504 <argp_error@@Base+0x918>
   1b820:	ldr	r2, [r6, #12]
   1b824:	b	1b5a0 <argp_error@@Base+0x9b4>
   1b828:	ldr	r2, [r6, #12]
   1b82c:	b	1b5b4 <argp_error@@Base+0x9c8>
   1b830:	ldr	r0, [r3, #-8]
   1b834:	cmp	r0, #0
   1b838:	bne	1b270 <argp_error@@Base+0x684>
   1b83c:	ldr	r0, [r3, #-4]
   1b840:	cmp	r0, #0
   1b844:	bne	1b270 <argp_error@@Base+0x684>
   1b848:	ldm	r1, {r0, r3}
   1b84c:	add	ip, r2, r2, lsl #1
   1b850:	add	r0, r0, ip
   1b854:	add	r2, r3, r2
   1b858:	stm	r1, {r0, r2}
   1b85c:	b	1b28c <argp_error@@Base+0x6a0>
   1b860:	ldr	r0, [r2, #-8]
   1b864:	cmp	r0, #0
   1b868:	bne	1b2e4 <argp_error@@Base+0x6f8>
   1b86c:	ldr	r0, [r2, #-4]
   1b870:	cmp	r0, #0
   1b874:	bne	1b2e4 <argp_error@@Base+0x6f8>
   1b878:	ldm	r6, {r0, r2}
   1b87c:	add	ip, r1, r1, lsl #1
   1b880:	add	r0, r0, ip
   1b884:	add	r1, r2, r1
   1b888:	stm	r6, {r0, r1}
   1b88c:	b	1b300 <argp_error@@Base+0x714>
   1b890:	ldr	r0, [r2, #-8]
   1b894:	cmp	r0, #0
   1b898:	bne	1b354 <argp_error@@Base+0x768>
   1b89c:	ldr	r0, [r2, #-4]
   1b8a0:	cmp	r0, #0
   1b8a4:	bne	1b354 <argp_error@@Base+0x768>
   1b8a8:	ldm	r6, {r0, r2}
   1b8ac:	add	ip, r1, r1, lsl #1
   1b8b0:	add	r0, r0, ip
   1b8b4:	add	r1, r2, r1
   1b8b8:	stm	r6, {r0, r1}
   1b8bc:	b	1b370 <argp_error@@Base+0x784>
   1b8c0:	ldr	r2, [r6, #12]
   1b8c4:	b	1b600 <argp_error@@Base+0xa14>
   1b8c8:	ldr	r2, [r6, #12]
   1b8cc:	b	1b5e4 <argp_error@@Base+0x9f8>
   1b8d0:	ldr	r0, [r2, #-8]
   1b8d4:	cmp	r0, #0
   1b8d8:	bne	1b3c0 <argp_error@@Base+0x7d4>
   1b8dc:	ldr	r0, [r2, #-4]
   1b8e0:	cmp	r0, #0
   1b8e4:	bne	1b3c0 <argp_error@@Base+0x7d4>
   1b8e8:	ldm	r6, {r0, r2}
   1b8ec:	add	ip, r1, r1, lsl #1
   1b8f0:	add	r0, r0, ip
   1b8f4:	add	r1, r2, r1
   1b8f8:	stm	r6, {r0, r1}
   1b8fc:	b	1b3dc <argp_error@@Base+0x7f0>

0001b900 <argp_parse@@Base>:
   1b900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b904:	add	fp, sp, #32
   1b908:	tst	r3, #1
   1b90c:	sub	sp, sp, #220	; 0xdc
   1b910:	mov	r7, r3
   1b914:	mov	r8, r0
   1b918:	str	r1, [fp, #-240]	; 0xffffff10
   1b91c:	str	r2, [fp, #-236]	; 0xffffff14
   1b920:	bne	1b94c <argp_parse@@Base+0x4c>
   1b924:	ldr	r3, [pc, #3488]	; 1c6cc <argp_parse@@Base+0xdcc>
   1b928:	ldr	r4, [pc, #3488]	; 1c6d0 <argp_parse@@Base+0xdd0>
   1b92c:	ldr	r2, [r3]
   1b930:	cmp	r2, #0
   1b934:	ldreq	r2, [fp, #-236]	; 0xffffff14
   1b938:	ldreq	r2, [r2]
   1b93c:	streq	r2, [r3]
   1b940:	ldr	r3, [r4]
   1b944:	cmp	r3, #0
   1b948:	beq	1c02c <argp_parse@@Base+0x72c>
   1b94c:	ands	r3, r7, #16
   1b950:	beq	1bf10 <argp_parse@@Base+0x610>
   1b954:	sub	r5, fp, #196	; 0xc4
   1b958:	mov	r0, r5
   1b95c:	mov	r2, #36	; 0x24
   1b960:	mov	r1, #0
   1b964:	bl	11984 <memset@plt>
   1b968:	ands	r3, r7, #4
   1b96c:	str	r3, [fp, #-244]	; 0xffffff0c
   1b970:	mov	r3, #0
   1b974:	moveq	r0, #1
   1b978:	movne	r0, #0
   1b97c:	cmp	r8, r3
   1b980:	str	r3, [fp, #-224]	; 0xffffff20
   1b984:	str	r3, [fp, #-220]	; 0xffffff24
   1b988:	str	r3, [fp, #-216]	; 0xffffff28
   1b98c:	str	r0, [fp, #-228]	; 0xffffff1c
   1b990:	beq	1ba04 <argp_parse@@Base+0x104>
   1b994:	ldr	r4, [r8, #16]
   1b998:	ldr	r3, [r8]
   1b99c:	cmp	r3, #0
   1b9a0:	movne	r2, #1
   1b9a4:	strne	r2, [fp, #-220]	; 0xffffff24
   1b9a8:	movne	r2, #0
   1b9ac:	bne	1b9b8 <argp_parse@@Base+0xb8>
   1b9b0:	b	1c4f8 <argp_parse@@Base+0xbf8>
   1b9b4:	add	r2, r2, #1
   1b9b8:	add	r3, r3, #24
   1b9bc:	ldr	r1, [r3, #-20]	; 0xffffffec
   1b9c0:	cmp	r1, #0
   1b9c4:	bne	1b9b4 <argp_parse@@Base+0xb4>
   1b9c8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1b9cc:	cmp	r1, #0
   1b9d0:	bne	1b9b4 <argp_parse@@Base+0xb4>
   1b9d4:	ldr	r1, [r3, #-8]
   1b9d8:	cmp	r1, #0
   1b9dc:	bne	1b9b4 <argp_parse@@Base+0xb4>
   1b9e0:	ldr	r1, [r3, #-4]
   1b9e4:	cmp	r1, #0
   1b9e8:	bne	1b9b4 <argp_parse@@Base+0xb4>
   1b9ec:	add	r3, r2, r2, lsl #1
   1b9f0:	add	r0, r3, r0
   1b9f4:	str	r2, [fp, #-224]	; 0xffffff20
   1b9f8:	str	r0, [fp, #-228]	; 0xffffff1c
   1b9fc:	mov	r6, #72	; 0x48
   1ba00:	b	1c510 <argp_parse@@Base+0xc10>
   1ba04:	mov	sl, #36	; 0x24
   1ba08:	mov	r6, sl
   1ba0c:	mov	r4, r8
   1ba10:	mov	r3, #52	; 0x34
   1ba14:	str	r3, [fp, #-232]	; 0xffffff18
   1ba18:	add	r0, r3, r0
   1ba1c:	add	r0, r0, #1
   1ba20:	bl	1e278 <argp_parse@@Base+0x2978>
   1ba24:	cmp	r0, #0
   1ba28:	mov	r9, r0
   1ba2c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ba30:	moveq	r5, #12
   1ba34:	beq	1be30 <argp_parse@@Base+0x530>
   1ba38:	mov	lr, r5
   1ba3c:	mov	r3, #1
   1ba40:	str	r3, [fp, #-196]	; 0xffffff3c
   1ba44:	str	r3, [fp, #-192]	; 0xffffff40
   1ba48:	ldm	lr!, {r0, r1, r2, r3}
   1ba4c:	sub	ip, fp, #148	; 0x94
   1ba50:	add	r5, r9, sl
   1ba54:	ldr	sl, [fp, #-232]	; 0xffffff18
   1ba58:	stmia	ip!, {r0, r1, r2, r3}
   1ba5c:	add	r6, r9, r6
   1ba60:	ldm	lr!, {r0, r1, r2, r3}
   1ba64:	add	sl, r9, sl
   1ba68:	str	r6, [fp, #-104]	; 0xffffff98
   1ba6c:	str	r5, [fp, #-152]	; 0xffffff68
   1ba70:	ldr	lr, [lr]
   1ba74:	stmia	ip!, {r0, r1, r2, r3}
   1ba78:	mov	r2, r4
   1ba7c:	mov	r0, r6
   1ba80:	mov	r1, #0
   1ba84:	str	r9, [fp, #-112]	; 0xffffff90
   1ba88:	str	lr, [ip]
   1ba8c:	str	sl, [fp, #-156]	; 0xffffff64
   1ba90:	sub	r4, fp, #160	; 0xa0
   1ba94:	bl	11984 <memset@plt>
   1ba98:	tst	r7, #8
   1ba9c:	str	r5, [fp, #-204]	; 0xffffff34
   1baa0:	str	sl, [fp, #-208]	; 0xffffff30
   1baa4:	str	r6, [fp, #-200]	; 0xffffff38
   1baa8:	str	r4, [fp, #-212]	; 0xffffff2c
   1baac:	beq	1bfc4 <argp_parse@@Base+0x6c4>
   1bab0:	ldr	r2, [fp, #-232]	; 0xffffff18
   1bab4:	add	sl, sl, #1
   1bab8:	mov	r3, #45	; 0x2d
   1babc:	str	sl, [fp, #-208]	; 0xffffff30
   1bac0:	strb	r3, [r9, r2]
   1bac4:	mov	r2, #0
   1bac8:	strb	r2, [sl]
   1bacc:	ldr	r3, [fp, #-204]	; 0xffffff34
   1bad0:	cmp	r8, r2
   1bad4:	str	r2, [r3]
   1bad8:	str	r8, [fp, #-160]	; 0xffffff60
   1badc:	beq	1bff4 <argp_parse@@Base+0x6f4>
   1bae0:	sub	r1, fp, #212	; 0xd4
   1bae4:	mov	r0, r8
   1bae8:	str	r1, [sp]
   1baec:	ldr	r3, [fp, #-112]	; 0xffffff90
   1baf0:	mov	r1, r2
   1baf4:	bl	1ad98 <argp_error@@Base+0x1ac>
   1baf8:	ldr	r8, [fp, #-160]	; 0xffffff60
   1bafc:	ldr	r5, [fp, #-112]	; 0xffffff90
   1bb00:	mov	r6, r0
   1bb04:	str	r0, [fp, #-108]	; 0xffffff94
   1bb08:	mov	r2, #56	; 0x38
   1bb0c:	mov	r1, #0
   1bb10:	sub	r0, fp, #96	; 0x60
   1bb14:	bl	11984 <memset@plt>
   1bb18:	ldr	r2, [pc, #2996]	; 1c6d4 <argp_parse@@Base+0xdd4>
   1bb1c:	ldr	r3, [pc, #2996]	; 1c6d8 <argp_parse@@Base+0xdd8>
   1bb20:	ldr	r0, [fp, #-240]	; 0xffffff10
   1bb24:	ldr	r1, [r2]
   1bb28:	str	r0, [fp, #-92]	; 0xffffffa4
   1bb2c:	ldr	r2, [r3]
   1bb30:	ldr	r0, [fp, #-236]	; 0xffffff14
   1bb34:	mov	r3, #1
   1bb38:	cmp	r5, r6
   1bb3c:	str	r8, [fp, #-96]	; 0xffffffa0
   1bb40:	str	r0, [fp, #-88]	; 0xffffffa8
   1bb44:	str	r7, [fp, #-80]	; 0xffffffb0
   1bb48:	str	r4, [fp, #-44]	; 0xffffffd4
   1bb4c:	str	r1, [fp, #-52]	; 0xffffffcc
   1bb50:	str	r2, [fp, #-48]	; 0xffffffd0
   1bb54:	str	r3, [fp, #-100]	; 0xffffff9c
   1bb58:	bcc	1be3c <argp_parse@@Base+0x53c>
   1bb5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bb60:	tst	r3, #2
   1bb64:	bne	1c004 <argp_parse@@Base+0x704>
   1bb68:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bb6c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1bb70:	mov	r2, #1
   1bb74:	str	r2, [fp, #-144]	; 0xffffff70
   1bb78:	ldr	r2, [fp, #-236]	; 0xffffff14
   1bb7c:	cmp	r2, r3
   1bb80:	beq	1c5a4 <argp_parse@@Base+0xca4>
   1bb84:	ldr	r3, [pc, #2884]	; 1c6d0 <argp_parse@@Base+0xdd0>
   1bb88:	ldr	r3, [r3]
   1bb8c:	str	r3, [fp, #-56]	; 0xffffffc8
   1bb90:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1bb94:	ldr	r5, [fp, #-84]	; 0xffffffac
   1bb98:	ldr	sl, [pc, #2876]	; 1c6dc <argp_parse@@Base+0xddc>
   1bb9c:	mov	r0, r4
   1bba0:	mov	r6, #0
   1bba4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bba8:	cmp	r3, #0
   1bbac:	beq	1c040 <argp_parse@@Base+0x740>
   1bbb0:	cmp	r3, r5
   1bbb4:	strgt	r6, [fp, #-72]	; 0xffffffb8
   1bbb8:	bgt	1c040 <argp_parse@@Base+0x740>
   1bbbc:	cmp	r5, r0
   1bbc0:	blt	1c3dc <argp_parse@@Base+0xadc>
   1bbc4:	cmp	r5, r0
   1bbc8:	bne	1c3e8 <argp_parse@@Base+0xae8>
   1bbcc:	ldr	r6, [fp, #-112]	; 0xffffff90
   1bbd0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1bbd4:	cmp	r6, ip
   1bbd8:	bcs	1c66c <argp_parse@@Base+0xd6c>
   1bbdc:	mov	r5, #0
   1bbe0:	add	r6, r6, #36	; 0x24
   1bbe4:	mov	r8, r5
   1bbe8:	ldr	r7, [pc, #2800]	; 1c6e0 <argp_parse@@Base+0xde0>
   1bbec:	mov	r0, r5
   1bbf0:	b	1bc38 <argp_parse@@Base+0x338>
   1bbf4:	ldr	ip, [r6, #-4]
   1bbf8:	str	ip, [fp, #-60]	; 0xffffffc4
   1bbfc:	ldr	ip, [r6, #-12]
   1bc00:	str	ip, [fp, #-68]	; 0xffffffbc
   1bc04:	ldr	ip, [r6, #-8]
   1bc08:	str	r3, [fp, #-76]	; 0xffffffb4
   1bc0c:	str	ip, [fp, #-64]	; 0xffffffc0
   1bc10:	blx	r4
   1bc14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bc18:	str	r3, [r6, #-4]
   1bc1c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1bc20:	cmp	ip, r6
   1bc24:	bls	1c614 <argp_parse@@Base+0xd14>
   1bc28:	cmp	r0, #7
   1bc2c:	cmpne	r0, #0
   1bc30:	bne	1c5d4 <argp_parse@@Base+0xcd4>
   1bc34:	add	r6, r6, #36	; 0x24
   1bc38:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1bc3c:	cmp	r3, #0
   1bc40:	bne	1bc20 <argp_parse@@Base+0x320>
   1bc44:	ldr	r4, [r6, #-36]	; 0xffffffdc
   1bc48:	sub	r2, fp, #96	; 0x60
   1bc4c:	cmp	r4, #0
   1bc50:	mov	r1, r8
   1bc54:	mov	r0, r7
   1bc58:	bne	1bbf4 <argp_parse@@Base+0x2f4>
   1bc5c:	cmp	ip, r6
   1bc60:	mov	r0, #7
   1bc64:	bhi	1bc34 <argp_parse@@Base+0x334>
   1bc68:	ldr	r6, [fp, #-112]	; 0xffffff90
   1bc6c:	sub	r4, ip, #36	; 0x24
   1bc70:	cmp	r6, r4
   1bc74:	movls	r5, #7
   1bc78:	bhi	1bd00 <argp_parse@@Base+0x400>
   1bc7c:	cmp	r5, #7
   1bc80:	cmpne	r5, #0
   1bc84:	bne	1c5e8 <argp_parse@@Base+0xce8>
   1bc88:	sub	r4, r4, #36	; 0x24
   1bc8c:	mov	r8, #0
   1bc90:	ldr	r7, [pc, #2636]	; 1c6e4 <argp_parse@@Base+0xde4>
   1bc94:	b	1bce0 <argp_parse@@Base+0x3e0>
   1bc98:	ldr	ip, [r4, #68]	; 0x44
   1bc9c:	ldr	lr, [r4, #48]	; 0x30
   1bca0:	str	ip, [fp, #-60]	; 0xffffffc4
   1bca4:	ldr	ip, [r4, #60]	; 0x3c
   1bca8:	str	ip, [fp, #-68]	; 0xffffffbc
   1bcac:	ldr	ip, [r4, #64]	; 0x40
   1bcb0:	str	lr, [fp, #-76]	; 0xffffffb4
   1bcb4:	str	ip, [fp, #-64]	; 0xffffffc0
   1bcb8:	blx	r3
   1bcbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bcc0:	str	r3, [r4, #68]	; 0x44
   1bcc4:	ldr	r6, [fp, #-112]	; 0xffffff90
   1bcc8:	cmp	r6, r4
   1bccc:	bhi	1c664 <argp_parse@@Base+0xd64>
   1bcd0:	cmp	r0, #7
   1bcd4:	cmpne	r0, #0
   1bcd8:	bne	1c5f8 <argp_parse@@Base+0xcf8>
   1bcdc:	sub	r4, r4, #36	; 0x24
   1bce0:	ldr	r3, [r4, #36]	; 0x24
   1bce4:	sub	r2, fp, #96	; 0x60
   1bce8:	cmp	r3, #0
   1bcec:	mov	r1, r8
   1bcf0:	mov	r0, r7
   1bcf4:	bne	1bc98 <argp_parse@@Base+0x398>
   1bcf8:	cmp	r6, r4
   1bcfc:	bls	1bcdc <argp_parse@@Base+0x3dc>
   1bd00:	ldr	r3, [fp, #4]
   1bd04:	cmp	r3, #0
   1bd08:	beq	1bd24 <argp_parse@@Base+0x424>
   1bd0c:	mov	r5, #0
   1bd10:	ldr	r2, [fp, #4]
   1bd14:	ldr	r3, [fp, #-84]	; 0xffffffac
   1bd18:	str	r3, [r2]
   1bd1c:	cmp	r5, #0
   1bd20:	bne	1c608 <argp_parse@@Base+0xd08>
   1bd24:	ldr	ip, [fp, #-108]	; 0xffffff94
   1bd28:	b	1c400 <argp_parse@@Base+0xb00>
   1bd2c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1bd30:	mov	r5, r0
   1bd34:	ldr	ip, [fp, #-108]	; 0xffffff94
   1bd38:	cmp	r6, ip
   1bd3c:	mov	r4, ip
   1bd40:	subcs	r4, ip, #36	; 0x24
   1bd44:	bcs	1bdb4 <argp_parse@@Base+0x4b4>
   1bd48:	ldr	r8, [pc, #2456]	; 1c6e8 <argp_parse@@Base+0xde8>
   1bd4c:	add	r6, r6, #36	; 0x24
   1bd50:	mov	r9, #0
   1bd54:	ldr	r3, [r6, #-36]	; 0xffffffdc
   1bd58:	sub	r2, fp, #96	; 0x60
   1bd5c:	cmp	r3, #0
   1bd60:	mov	r1, r9
   1bd64:	mov	r0, r8
   1bd68:	mov	r7, r6
   1bd6c:	beq	1bda0 <argp_parse@@Base+0x4a0>
   1bd70:	ldr	ip, [r6, #-4]
   1bd74:	ldr	lr, [r6, #-24]	; 0xffffffe8
   1bd78:	str	ip, [fp, #-60]	; 0xffffffc4
   1bd7c:	ldr	ip, [r6, #-12]
   1bd80:	str	ip, [fp, #-68]	; 0xffffffbc
   1bd84:	ldr	ip, [r6, #-8]
   1bd88:	str	lr, [fp, #-76]	; 0xffffffb4
   1bd8c:	str	ip, [fp, #-64]	; 0xffffffc0
   1bd90:	blx	r3
   1bd94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bd98:	str	r3, [r6, #-4]
   1bd9c:	ldr	r4, [fp, #-108]	; 0xffffff94
   1bda0:	cmp	r7, r4
   1bda4:	add	r6, r6, #36	; 0x24
   1bda8:	bcc	1bd54 <argp_parse@@Base+0x454>
   1bdac:	ldr	r6, [fp, #-112]	; 0xffffff90
   1bdb0:	sub	r4, r4, #36	; 0x24
   1bdb4:	cmp	r6, r4
   1bdb8:	bhi	1be20 <argp_parse@@Base+0x520>
   1bdbc:	ldr	r8, [pc, #2344]	; 1c6ec <argp_parse@@Base+0xdec>
   1bdc0:	sub	r4, r4, #36	; 0x24
   1bdc4:	mov	r9, #0
   1bdc8:	ldr	r3, [r4, #36]	; 0x24
   1bdcc:	sub	r2, fp, #96	; 0x60
   1bdd0:	cmp	r3, #0
   1bdd4:	mov	r1, r9
   1bdd8:	mov	r0, r8
   1bddc:	mov	r7, r4
   1bde0:	beq	1be14 <argp_parse@@Base+0x514>
   1bde4:	ldr	ip, [r4, #68]	; 0x44
   1bde8:	ldr	lr, [r4, #48]	; 0x30
   1bdec:	str	ip, [fp, #-60]	; 0xffffffc4
   1bdf0:	ldr	ip, [r4, #60]	; 0x3c
   1bdf4:	str	ip, [fp, #-68]	; 0xffffffbc
   1bdf8:	ldr	ip, [r4, #64]	; 0x40
   1bdfc:	str	lr, [fp, #-76]	; 0xffffffb4
   1be00:	str	ip, [fp, #-64]	; 0xffffffc0
   1be04:	blx	r3
   1be08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1be0c:	str	r3, [r4, #68]	; 0x44
   1be10:	ldr	r6, [fp, #-112]	; 0xffffff90
   1be14:	cmp	r6, r7
   1be18:	sub	r4, r4, #36	; 0x24
   1be1c:	bls	1bdc8 <argp_parse@@Base+0x4c8>
   1be20:	cmp	r5, #7
   1be24:	moveq	r5, #22
   1be28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be2c:	bl	1ca50 <argp_parse@@Base+0x1150>
   1be30:	mov	r0, r5
   1be34:	sub	sp, fp, #32
   1be38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be3c:	ldr	r3, [fp, #8]
   1be40:	add	r4, r5, #36	; 0x24
   1be44:	str	r3, [r5, #24]
   1be48:	mov	r7, #0
   1be4c:	ldr	r6, [pc, #2204]	; 1c6f0 <argp_parse@@Base+0xdf0>
   1be50:	b	1bea8 <argp_parse@@Base+0x5a8>
   1be54:	ldr	r2, [r4, #-4]
   1be58:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1be5c:	str	r2, [fp, #-60]	; 0xffffffc4
   1be60:	ldr	r1, [r4, #-12]
   1be64:	sub	r2, fp, #96	; 0x60
   1be68:	str	r1, [fp, #-68]	; 0xffffffbc
   1be6c:	ldr	ip, [r4, #-8]
   1be70:	mov	r1, r7
   1be74:	str	r0, [fp, #-76]	; 0xffffffb4
   1be78:	str	ip, [fp, #-64]	; 0xffffffc0
   1be7c:	mov	r0, r6
   1be80:	blx	r3
   1be84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1be88:	str	r3, [r4, #-4]
   1be8c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1be90:	cmp	r3, r4
   1be94:	bls	1c6a0 <argp_parse@@Base+0xda0>
   1be98:	cmp	r0, #7
   1be9c:	cmpne	r0, #0
   1bea0:	bne	1bfe4 <argp_parse@@Base+0x6e4>
   1bea4:	add	r4, r4, #36	; 0x24
   1bea8:	ldr	r3, [r4, #-20]	; 0xffffffec
   1beac:	cmp	r3, #0
   1beb0:	ldrne	r3, [r3, #28]
   1beb4:	ldrne	r2, [r4, #-16]
   1beb8:	ldrne	r3, [r3, r2, lsl #2]
   1bebc:	strne	r3, [r4, #-12]
   1bec0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1bec4:	cmp	r3, #0
   1bec8:	bne	1be54 <argp_parse@@Base+0x554>
   1becc:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1bed0:	ldr	r3, [r3, #16]
   1bed4:	cmp	r3, #0
   1bed8:	beq	1bf00 <argp_parse@@Base+0x600>
   1bedc:	ldr	r3, [r3]
   1bee0:	cmp	r3, #0
   1bee4:	beq	1bf00 <argp_parse@@Base+0x600>
   1bee8:	ldr	r3, [r4, #-8]
   1beec:	ldr	r2, [r4, #-12]
   1bef0:	str	r2, [r3]
   1bef4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1bef8:	cmp	r3, #0
   1befc:	bne	1be54 <argp_parse@@Base+0x554>
   1bf00:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bf04:	cmp	r3, r4
   1bf08:	bhi	1bea4 <argp_parse@@Base+0x5a4>
   1bf0c:	b	1bb5c <argp_parse@@Base+0x25c>
   1bf10:	sub	sp, sp, #72	; 0x48
   1bf14:	add	r4, sp, #8
   1bf18:	sub	sp, sp, #40	; 0x28
   1bf1c:	add	r6, sp, #8
   1bf20:	mov	r1, r3
   1bf24:	str	r3, [r6]
   1bf28:	str	r3, [r6, #4]
   1bf2c:	str	r3, [r6, #8]
   1bf30:	str	r3, [r6, #12]
   1bf34:	str	r3, [r6, #20]
   1bf38:	str	r3, [r6, #24]
   1bf3c:	mov	r2, #64	; 0x40
   1bf40:	mov	r0, r4
   1bf44:	str	r4, [r6, #16]
   1bf48:	bl	11984 <memset@plt>
   1bf4c:	ldr	r2, [pc, #1952]	; 1c6f4 <argp_parse@@Base+0xdf4>
   1bf50:	cmp	r8, #0
   1bf54:	addne	r3, r4, #16
   1bf58:	ldr	r2, [r2]
   1bf5c:	moveq	r3, r4
   1bf60:	ldr	r1, [pc, #1936]	; 1c6f8 <argp_parse@@Base+0xdf8>
   1bf64:	strne	r8, [r4]
   1bf68:	cmp	r2, #0
   1bf6c:	str	r1, [r3]
   1bf70:	beq	1c5bc <argp_parse@@Base+0xcbc>
   1bf74:	ldr	r2, [pc, #1920]	; 1c6fc <argp_parse@@Base+0xdfc>
   1bf78:	add	ip, r3, #32
   1bf7c:	str	r2, [r3, #16]
   1bf80:	mov	r9, #0
   1bf84:	sub	r5, fp, #196	; 0xc4
   1bf88:	mov	r1, r9
   1bf8c:	mov	r0, r5
   1bf90:	mov	r2, #36	; 0x24
   1bf94:	str	r9, [ip]
   1bf98:	bl	11984 <memset@plt>
   1bf9c:	ands	r3, r7, #4
   1bfa0:	moveq	r0, #1
   1bfa4:	movne	r0, r9
   1bfa8:	str	r3, [fp, #-244]	; 0xffffff0c
   1bfac:	mov	r8, r6
   1bfb0:	str	r9, [fp, #-224]	; 0xffffff20
   1bfb4:	str	r9, [fp, #-220]	; 0xffffff24
   1bfb8:	str	r9, [fp, #-216]	; 0xffffff28
   1bfbc:	str	r0, [fp, #-228]	; 0xffffff1c
   1bfc0:	b	1b998 <argp_parse@@Base+0x98>
   1bfc4:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1bfc8:	cmp	r3, #0
   1bfcc:	addne	r3, sl, #1
   1bfd0:	movne	r2, #43	; 0x2b
   1bfd4:	strbne	r2, [sl]
   1bfd8:	strne	r3, [fp, #-208]	; 0xffffff30
   1bfdc:	movne	sl, r3
   1bfe0:	b	1bac4 <argp_parse@@Base+0x1c4>
   1bfe4:	mov	r5, r0
   1bfe8:	mov	r0, r5
   1bfec:	sub	sp, fp, #32
   1bff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bff4:	ldr	r5, [fp, #-112]	; 0xffffff90
   1bff8:	mov	r6, r5
   1bffc:	str	r5, [fp, #-108]	; 0xffffff94
   1c000:	b	1bb08 <argp_parse@@Base+0x208>
   1c004:	tst	r3, #1
   1c008:	mov	r3, #0
   1c00c:	str	r3, [fp, #-144]	; 0xffffff70
   1c010:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1c014:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c018:	subne	r3, r3, #4
   1c01c:	addne	r4, r4, #1
   1c020:	strne	r3, [fp, #-88]	; 0xffffffa8
   1c024:	strne	r4, [fp, #-92]	; 0xffffffa4
   1c028:	b	1bb78 <argp_parse@@Base+0x278>
   1c02c:	ldr	r3, [fp, #-236]	; 0xffffff14
   1c030:	ldr	r0, [r3]
   1c034:	bl	1c7d0 <argp_parse@@Base+0xed0>
   1c038:	str	r0, [r4]
   1c03c:	b	1b94c <argp_parse@@Base+0x4c>
   1c040:	cmp	r2, #0
   1c044:	beq	1bbbc <argp_parse@@Base+0x2bc>
   1c048:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c04c:	str	r5, [fp, #-148]	; 0xffffff6c
   1c050:	ands	ip, r3, #64	; 0x40
   1c054:	mvn	r3, #0
   1c058:	str	r3, [fp, #-140]	; 0xffffff74
   1c05c:	ldr	r2, [fp, #-156]	; 0xffffff64
   1c060:	ldr	r3, [fp, #-152]	; 0xffffff68
   1c064:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1c068:	beq	1c388 <argp_parse@@Base+0xa88>
   1c06c:	sub	ip, fp, #148	; 0x94
   1c070:	stm	sp, {r6, ip}
   1c074:	bl	1cb24 <argp_parse@@Base+0x1224>
   1c078:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1c07c:	str	r5, [fp, #-84]	; 0xffffffac
   1c080:	mov	r7, r0
   1c084:	cmn	r7, #1
   1c088:	beq	1c3a8 <argp_parse@@Base+0xaa8>
   1c08c:	cmp	r7, #63	; 0x3f
   1c090:	beq	1c4ac <argp_parse@@Base+0xbac>
   1c094:	cmp	r7, #1
   1c098:	beq	1c1f0 <argp_parse@@Base+0x8f0>
   1c09c:	asrs	r8, r7, #24
   1c0a0:	bne	1c14c <argp_parse@@Base+0x84c>
   1c0a4:	mov	r1, r7
   1c0a8:	ldr	r0, [fp, #-156]	; 0xffffff64
   1c0ac:	bl	11930 <strchr@plt>
   1c0b0:	cmp	r0, #0
   1c0b4:	beq	1c1bc <argp_parse@@Base+0x8bc>
   1c0b8:	ldr	r4, [fp, #-112]	; 0xffffff90
   1c0bc:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c0c0:	cmp	r4, r2
   1c0c4:	bcc	1c0d8 <argp_parse@@Base+0x7d8>
   1c0c8:	b	1c1bc <argp_parse@@Base+0x8bc>
   1c0cc:	add	r4, r4, #36	; 0x24
   1c0d0:	cmp	r4, r2
   1c0d4:	bcs	1c1bc <argp_parse@@Base+0x8bc>
   1c0d8:	ldr	r3, [r4, #8]
   1c0dc:	cmp	r0, r3
   1c0e0:	bcs	1c0cc <argp_parse@@Base+0x7cc>
   1c0e4:	ldr	r3, [r4]
   1c0e8:	cmp	r3, #0
   1c0ec:	beq	1c1bc <argp_parse@@Base+0x8bc>
   1c0f0:	ldr	r2, [r4, #32]
   1c0f4:	ldr	r0, [r4, #28]
   1c0f8:	ldr	ip, [r4, #24]
   1c0fc:	str	r2, [fp, #-60]	; 0xffffffc4
   1c100:	ldr	r2, [r4, #12]
   1c104:	ldr	r1, [fp, #-136]	; 0xffffff78
   1c108:	str	r0, [fp, #-64]	; 0xffffffc0
   1c10c:	str	r2, [fp, #-76]	; 0xffffffb4
   1c110:	str	ip, [fp, #-68]	; 0xffffffbc
   1c114:	sub	r2, fp, #96	; 0x60
   1c118:	mov	r0, r7
   1c11c:	blx	r3
   1c120:	mov	r8, r6
   1c124:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c128:	str	r3, [r4, #32]
   1c12c:	cmp	r0, #7
   1c130:	beq	1c1b4 <argp_parse@@Base+0x8b4>
   1c134:	cmp	r0, #0
   1c138:	bne	1bd2c <argp_parse@@Base+0x42c>
   1c13c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1c140:	ldr	r5, [fp, #-84]	; 0xffffffac
   1c144:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c148:	b	1bba4 <argp_parse@@Base+0x2a4>
   1c14c:	add	r3, r8, r8, lsl #3
   1c150:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c154:	lsl	r3, r3, #2
   1c158:	sub	r3, r3, #36	; 0x24
   1c15c:	add	r4, r2, r3
   1c160:	ldr	r5, [r2, r3]
   1c164:	ands	r3, r7, #8388608	; 0x800000
   1c168:	movne	r3, #-16777216	; 0xff000000
   1c16c:	cmp	r5, #0
   1c170:	beq	1c340 <argp_parse@@Base+0xa40>
   1c174:	ldr	r0, [r4, #32]
   1c178:	ldr	r2, [r4, #24]
   1c17c:	str	r0, [fp, #-60]	; 0xffffffc4
   1c180:	ldr	r0, [r4, #28]
   1c184:	str	r2, [fp, #-68]	; 0xffffffbc
   1c188:	ldr	r2, [r4, #12]
   1c18c:	str	r0, [fp, #-64]	; 0xffffffc0
   1c190:	bic	r0, r7, #-16777216	; 0xff000000
   1c194:	str	r2, [fp, #-76]	; 0xffffffb4
   1c198:	orr	r0, r0, r3
   1c19c:	ldr	r1, [fp, #-136]	; 0xffffff78
   1c1a0:	sub	r2, fp, #96	; 0x60
   1c1a4:	blx	r5
   1c1a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c1ac:	str	r3, [r4, #32]
   1c1b0:	b	1c12c <argp_parse@@Base+0x82c>
   1c1b4:	cmp	r8, #0
   1c1b8:	bne	1c340 <argp_parse@@Base+0xa40>
   1c1bc:	mov	r2, r7
   1c1c0:	ldr	r3, [pc, #1336]	; 1c700 <argp_parse@@Base+0xe00>
   1c1c4:	ldr	r1, [pc, #1336]	; 1c704 <argp_parse@@Base+0xe04>
   1c1c8:	sub	r0, fp, #96	; 0x60
   1c1cc:	bl	1abec <argp_error@@Base>
   1c1d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c1d4:	mov	r2, #260	; 0x104
   1c1d8:	sub	r0, fp, #96	; 0x60
   1c1dc:	bl	1ab3c <argp_state_help@@Base>
   1c1e0:	mov	r5, #7
   1c1e4:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c1e8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c1ec:	b	1bd38 <argp_parse@@Base+0x438>
   1c1f0:	ldr	r7, [fp, #-136]	; 0xffffff78
   1c1f4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c1f8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c1fc:	sub	r8, r5, #1
   1c200:	cmp	r3, ip
   1c204:	str	r8, [fp, #-84]	; 0xffffffac
   1c208:	bcs	1c334 <argp_parse@@Base+0xa34>
   1c20c:	mov	lr, r8
   1c210:	add	r4, r3, #36	; 0x24
   1c214:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1c218:	add	r5, lr, #1
   1c21c:	cmp	r3, #0
   1c220:	str	r5, [fp, #-84]	; 0xffffffac
   1c224:	sub	r2, fp, #96	; 0x60
   1c228:	mov	r1, r7
   1c22c:	mov	r0, r6
   1c230:	sub	r5, r4, #36	; 0x24
   1c234:	mov	r9, r4
   1c238:	streq	lr, [fp, #-84]	; 0xffffffac
   1c23c:	beq	1c328 <argp_parse@@Base+0xa28>
   1c240:	ldr	ip, [r4, #-4]
   1c244:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1c248:	str	ip, [fp, #-60]	; 0xffffffc4
   1c24c:	ldr	ip, [r4, #-12]
   1c250:	str	ip, [fp, #-68]	; 0xffffffbc
   1c254:	ldr	ip, [r4, #-8]
   1c258:	str	lr, [fp, #-76]	; 0xffffffb4
   1c25c:	str	ip, [fp, #-64]	; 0xffffffc0
   1c260:	blx	r3
   1c264:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c268:	str	r3, [r4, #-4]
   1c26c:	cmp	r0, #7
   1c270:	beq	1c2ac <argp_parse@@Base+0x9ac>
   1c274:	cmp	r0, #0
   1c278:	bne	1bd2c <argp_parse@@Base+0x42c>
   1c27c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c280:	ldr	r5, [fp, #-84]	; 0xffffffac
   1c284:	cmp	r8, r5
   1c288:	sublt	r8, r5, r8
   1c28c:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   1c290:	movge	r3, #1
   1c294:	addlt	r8, r3, r8
   1c298:	strlt	r8, [r4, #-24]	; 0xffffffe8
   1c29c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   1c2a0:	strge	r3, [fp, #-100]	; 0xffffff9c
   1c2a4:	movge	r2, r3
   1c2a8:	b	1bba4 <argp_parse@@Base+0x2a4>
   1c2ac:	ldr	lr, [fp, #-84]	; 0xffffffac
   1c2b0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1c2b4:	sub	lr, lr, #1
   1c2b8:	cmp	r3, #0
   1c2bc:	str	lr, [fp, #-84]	; 0xffffffac
   1c2c0:	beq	1c324 <argp_parse@@Base+0xa24>
   1c2c4:	add	r0, r5, #24
   1c2c8:	ldr	r2, [r5, #12]
   1c2cc:	ldm	r0, {r0, r1, ip}
   1c2d0:	str	r2, [fp, #-76]	; 0xffffffb4
   1c2d4:	sub	r2, fp, #96	; 0x60
   1c2d8:	str	ip, [fp, #-60]	; 0xffffffc4
   1c2dc:	str	r0, [fp, #-68]	; 0xffffffbc
   1c2e0:	str	r1, [fp, #-64]	; 0xffffffc0
   1c2e4:	mov	r0, sl
   1c2e8:	mov	r1, r6
   1c2ec:	blx	r3
   1c2f0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c2f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c2f8:	cmp	r4, ip
   1c2fc:	movcs	r1, #0
   1c300:	movcc	r1, #1
   1c304:	mov	r3, r4
   1c308:	str	r2, [r5, #32]
   1c30c:	cmp	r0, #7
   1c310:	movne	r1, #0
   1c314:	cmp	r1, #0
   1c318:	beq	1c688 <argp_parse@@Base+0xd88>
   1c31c:	ldr	lr, [fp, #-84]	; 0xffffffac
   1c320:	b	1c210 <argp_parse@@Base+0x910>
   1c324:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c328:	cmp	r9, ip
   1c32c:	add	r4, r4, #36	; 0x24
   1c330:	bcc	1c214 <argp_parse@@Base+0x914>
   1c334:	ldr	r5, [fp, #-84]	; 0xffffffac
   1c338:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c33c:	b	1bbc4 <argp_parse@@Base+0x2c4>
   1c340:	ldr	r3, [fp, #-152]	; 0xffffff68
   1c344:	ldr	r2, [r3, #12]
   1c348:	cmp	r7, r2
   1c34c:	bne	1c364 <argp_parse@@Base+0xa64>
   1c350:	b	1c498 <argp_parse@@Base+0xb98>
   1c354:	add	r3, r3, #16
   1c358:	ldr	r2, [r3, #12]
   1c35c:	cmp	r7, r2
   1c360:	beq	1c498 <argp_parse@@Base+0xb98>
   1c364:	ldr	r2, [r3]
   1c368:	cmp	r2, #0
   1c36c:	bne	1c354 <argp_parse@@Base+0xa54>
   1c370:	ldr	r2, [pc, #912]	; 1c708 <argp_parse@@Base+0xe08>
   1c374:	ldr	r3, [pc, #900]	; 1c700 <argp_parse@@Base+0xe00>
   1c378:	ldr	r1, [pc, #908]	; 1c70c <argp_parse@@Base+0xe0c>
   1c37c:	sub	r0, fp, #96	; 0x60
   1c380:	bl	1abec <argp_error@@Base>
   1c384:	b	1c1d0 <argp_parse@@Base+0x8d0>
   1c388:	sub	lr, fp, #148	; 0x94
   1c38c:	stm	sp, {ip, lr}
   1c390:	bl	1cad0 <argp_parse@@Base+0x11d0>
   1c394:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1c398:	str	r5, [fp, #-84]	; 0xffffffac
   1c39c:	mov	r7, r0
   1c3a0:	cmn	r7, #1
   1c3a4:	bne	1c08c <argp_parse@@Base+0x78c>
   1c3a8:	cmp	r5, #1
   1c3ac:	str	r6, [fp, #-100]	; 0xffffff9c
   1c3b0:	ble	1c3d0 <argp_parse@@Base+0xad0>
   1c3b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c3b8:	sub	r3, r5, #-1073741823	; 0xc0000001
   1c3bc:	ldr	r1, [pc, #844]	; 1c710 <argp_parse@@Base+0xe10>
   1c3c0:	ldr	r0, [r2, r3, lsl #2]
   1c3c4:	bl	11684 <strcmp@plt>
   1c3c8:	cmp	r0, #0
   1c3cc:	streq	r5, [fp, #-72]	; 0xffffffb8
   1c3d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c3d4:	cmp	r5, r0
   1c3d8:	bge	1bbc4 <argp_parse@@Base+0x2c4>
   1c3dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c3e0:	tst	r3, #4
   1c3e4:	beq	1c4bc <argp_parse@@Base+0xbbc>
   1c3e8:	ldr	r3, [fp, #4]
   1c3ec:	cmp	r3, #0
   1c3f0:	beq	1c634 <argp_parse@@Base+0xd34>
   1c3f4:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c3f8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c3fc:	str	r5, [r3]
   1c400:	sub	r3, ip, #36	; 0x24
   1c404:	cmp	r6, r3
   1c408:	bhi	1c4f0 <argp_parse@@Base+0xbf0>
   1c40c:	ldr	r7, [pc, #768]	; 1c714 <argp_parse@@Base+0xe14>
   1c410:	sub	r4, ip, #72	; 0x48
   1c414:	mov	r8, #0
   1c418:	ldr	r3, [r4, #36]	; 0x24
   1c41c:	sub	r2, fp, #96	; 0x60
   1c420:	cmp	r3, #0
   1c424:	mov	r1, r8
   1c428:	mov	r0, r7
   1c42c:	beq	1c488 <argp_parse@@Base+0xb88>
   1c430:	ldr	ip, [r4, #68]	; 0x44
   1c434:	ldr	lr, [r4, #48]	; 0x30
   1c438:	str	ip, [fp, #-60]	; 0xffffffc4
   1c43c:	ldr	ip, [r4, #60]	; 0x3c
   1c440:	str	ip, [fp, #-68]	; 0xffffffbc
   1c444:	ldr	ip, [r4, #64]	; 0x40
   1c448:	str	lr, [fp, #-76]	; 0xffffffb4
   1c44c:	str	ip, [fp, #-64]	; 0xffffffc0
   1c450:	blx	r3
   1c454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c458:	str	r3, [r4, #68]	; 0x44
   1c45c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c460:	cmp	r6, r4
   1c464:	bhi	1c4d0 <argp_parse@@Base+0xbd0>
   1c468:	cmp	r0, #7
   1c46c:	cmpne	r0, #0
   1c470:	sub	r4, r4, #36	; 0x24
   1c474:	beq	1c418 <argp_parse@@Base+0xb18>
   1c478:	ldr	r4, [fp, #-108]	; 0xffffff94
   1c47c:	mov	r5, r0
   1c480:	sub	r4, r4, #36	; 0x24
   1c484:	b	1bdb4 <argp_parse@@Base+0x4b4>
   1c488:	cmp	r6, r4
   1c48c:	bhi	1c4dc <argp_parse@@Base+0xbdc>
   1c490:	sub	r4, r4, #36	; 0x24
   1c494:	b	1c418 <argp_parse@@Base+0xb18>
   1c498:	ldr	r2, [r3]
   1c49c:	ldr	r3, [pc, #612]	; 1c708 <argp_parse@@Base+0xe08>
   1c4a0:	cmp	r2, #0
   1c4a4:	moveq	r2, r3
   1c4a8:	b	1c374 <argp_parse@@Base+0xa74>
   1c4ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1c4b0:	cmn	r3, #1
   1c4b4:	bne	1c1d0 <argp_parse@@Base+0x8d0>
   1c4b8:	b	1c0a4 <argp_parse@@Base+0x7a4>
   1c4bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c4c0:	ldr	r7, [r3, r5, lsl #2]
   1c4c4:	add	r5, r5, #1
   1c4c8:	str	r7, [fp, #-136]	; 0xffffff78
   1c4cc:	b	1c1f4 <argp_parse@@Base+0x8f4>
   1c4d0:	cmp	r0, #7
   1c4d4:	mov	r5, r0
   1c4d8:	bne	1c598 <argp_parse@@Base+0xc98>
   1c4dc:	ldr	r4, [fp, #-108]	; 0xffffff94
   1c4e0:	sub	r4, r4, #36	; 0x24
   1c4e4:	cmp	r6, r4
   1c4e8:	movls	r5, #0
   1c4ec:	bls	1bdbc <argp_parse@@Base+0x4bc>
   1c4f0:	mov	r5, #0
   1c4f4:	b	1be28 <argp_parse@@Base+0x528>
   1c4f8:	ldr	r3, [r8, #4]
   1c4fc:	cmp	r3, #0
   1c500:	moveq	r6, #36	; 0x24
   1c504:	movne	r6, #72	; 0x48
   1c508:	movne	r3, #1
   1c50c:	strne	r3, [fp, #-220]	; 0xffffff24
   1c510:	cmp	r4, #0
   1c514:	beq	1c574 <argp_parse@@Base+0xc74>
   1c518:	ldr	r0, [r4]
   1c51c:	cmp	r0, #0
   1c520:	beq	1c574 <argp_parse@@Base+0xc74>
   1c524:	sub	r1, fp, #228	; 0xe4
   1c528:	bl	1b22c <argp_error@@Base+0x640>
   1c52c:	ldr	r3, [fp, #-216]	; 0xffffff28
   1c530:	ldr	r0, [r4, #16]!
   1c534:	add	r3, r3, #1
   1c538:	cmp	r0, #0
   1c53c:	str	r3, [fp, #-216]	; 0xffffff28
   1c540:	bne	1c524 <argp_parse@@Base+0xc24>
   1c544:	ldr	r6, [fp, #-220]	; 0xffffff24
   1c548:	ldr	r2, [fp, #-224]	; 0xffffff20
   1c54c:	add	r6, r6, #1
   1c550:	lsl	r4, r3, #2
   1c554:	add	r6, r6, r6, lsl #3
   1c558:	add	r3, r2, #1
   1c55c:	lsl	r6, r6, #2
   1c560:	add	sl, r4, r6
   1c564:	add	r3, sl, r3, lsl #4
   1c568:	str	r3, [fp, #-232]	; 0xffffff18
   1c56c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1c570:	b	1ba18 <argp_parse@@Base+0x118>
   1c574:	ldr	r4, [fp, #-216]	; 0xffffff28
   1c578:	ldr	r3, [fp, #-224]	; 0xffffff20
   1c57c:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1c580:	lsl	r4, r4, #2
   1c584:	add	r3, r3, #1
   1c588:	add	sl, r4, r6
   1c58c:	add	r3, sl, r3, lsl #4
   1c590:	str	r3, [fp, #-232]	; 0xffffff18
   1c594:	b	1ba18 <argp_parse@@Base+0x118>
   1c598:	ldr	r4, [fp, #-108]	; 0xffffff94
   1c59c:	sub	r4, r4, #36	; 0x24
   1c5a0:	b	1bdb4 <argp_parse@@Base+0x4b4>
   1c5a4:	ldr	r0, [r2]
   1c5a8:	cmp	r0, #0
   1c5ac:	beq	1bb84 <argp_parse@@Base+0x284>
   1c5b0:	bl	1c7d0 <argp_parse@@Base+0xed0>
   1c5b4:	str	r0, [fp, #-56]	; 0xffffffc8
   1c5b8:	b	1bb90 <argp_parse@@Base+0x290>
   1c5bc:	ldr	r2, [pc, #340]	; 1c718 <argp_parse@@Base+0xe18>
   1c5c0:	ldr	r2, [r2]
   1c5c4:	cmp	r2, #0
   1c5c8:	addeq	ip, r3, #16
   1c5cc:	bne	1bf74 <argp_parse@@Base+0x674>
   1c5d0:	b	1bf80 <argp_parse@@Base+0x680>
   1c5d4:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c5d8:	sub	ip, ip, #36	; 0x24
   1c5dc:	cmp	r6, ip
   1c5e0:	mov	r5, r0
   1c5e4:	bls	1c5fc <argp_parse@@Base+0xcfc>
   1c5e8:	ldr	r3, [fp, #4]
   1c5ec:	cmp	r3, #0
   1c5f0:	bne	1bd10 <argp_parse@@Base+0x410>
   1c5f4:	b	1bd1c <argp_parse@@Base+0x41c>
   1c5f8:	mov	r5, r0
   1c5fc:	ldr	r3, [fp, #4]
   1c600:	cmp	r3, #0
   1c604:	bne	1bd10 <argp_parse@@Base+0x410>
   1c608:	cmp	r5, #7
   1c60c:	bne	1bd34 <argp_parse@@Base+0x434>
   1c610:	b	1c1d0 <argp_parse@@Base+0x8d0>
   1c614:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c618:	sub	r4, ip, #36	; 0x24
   1c61c:	cmp	r4, r6
   1c620:	mov	r5, r0
   1c624:	bcs	1bc7c <argp_parse@@Base+0x37c>
   1c628:	cmp	r5, #7
   1c62c:	beq	1bd00 <argp_parse@@Base+0x400>
   1c630:	b	1c5e8 <argp_parse@@Base+0xce8>
   1c634:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c638:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c63c:	tst	r3, #2
   1c640:	bne	1c1d4 <argp_parse@@Base+0x8d4>
   1c644:	cmp	r1, #0
   1c648:	beq	1c1d4 <argp_parse@@Base+0x8d4>
   1c64c:	mov	r0, r1
   1c650:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c654:	ldr	r1, [pc, #192]	; 1c71c <argp_parse@@Base+0xe1c>
   1c658:	bl	1193c <fprintf@plt>
   1c65c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c660:	b	1c1d4 <argp_parse@@Base+0x8d4>
   1c664:	mov	r5, r0
   1c668:	b	1c628 <argp_parse@@Base+0xd28>
   1c66c:	sub	r4, ip, #36	; 0x24
   1c670:	cmp	r6, r4
   1c674:	bls	1bc88 <argp_parse@@Base+0x388>
   1c678:	ldr	r3, [fp, #4]
   1c67c:	cmp	r3, #0
   1c680:	bne	1bd0c <argp_parse@@Base+0x40c>
   1c684:	b	1c400 <argp_parse@@Base+0xb00>
   1c688:	cmp	r0, #0
   1c68c:	bne	1c6b8 <argp_parse@@Base+0xdb8>
   1c690:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c694:	mov	r5, r0
   1c698:	str	r0, [fp, #-84]	; 0xffffffac
   1c69c:	b	1c284 <argp_parse@@Base+0x984>
   1c6a0:	cmp	r0, #7
   1c6a4:	mov	r5, r0
   1c6a8:	beq	1bb5c <argp_parse@@Base+0x25c>
   1c6ac:	cmp	r0, #0
   1c6b0:	bne	1be30 <argp_parse@@Base+0x530>
   1c6b4:	b	1bb5c <argp_parse@@Base+0x25c>
   1c6b8:	cmp	r0, #7
   1c6bc:	mov	r5, r0
   1c6c0:	beq	1c334 <argp_parse@@Base+0xa34>
   1c6c4:	ldr	r6, [fp, #-112]	; 0xffffff90
   1c6c8:	b	1bd38 <argp_parse@@Base+0x438>
   1c6cc:	andeq	r3, r3, r4, asr #11
   1c6d0:	andeq	r3, r3, r0, asr #11
   1c6d4:	andeq	r3, r3, r8, asr #11
   1c6d8:	andeq	r3, r3, ip, asr #11
   1c6dc:	tsteq	r0, r6
   1c6e0:	tsteq	r0, r2
   1c6e4:	tsteq	r0, r1
   1c6e8:	tsteq	r0, r5
   1c6ec:	tsteq	r0, r7
   1c6f0:	tsteq	r0, r3
   1c6f4:	muleq	r3, r8, r0
   1c6f8:	andeq	r1, r2, ip, ror #25
   1c6fc:	andeq	r1, r2, r8, lsl #26
   1c700:	andeq	r1, r2, r4, lsr #26
   1c704:	andeq	r1, r2, r0, lsr lr
   1c708:	andeq	r0, r2, r0, asr #24
   1c70c:	andeq	r1, r2, r8, lsr lr
   1c710:	andeq	r0, r2, r4, lsl ip
   1c714:	tsteq	r0, r4
   1c718:	andeq	r3, r3, ip, lsl #20
   1c71c:	andeq	r1, r2, r4, asr #28
   1c720:	cmp	r1, #0
   1c724:	beq	1c764 <argp_parse@@Base+0xe64>
   1c728:	ldr	r2, [r1, #52]	; 0x34
   1c72c:	ldr	r3, [r2, #48]	; 0x30
   1c730:	ldr	r1, [r2, #52]	; 0x34
   1c734:	cmp	r3, r1
   1c738:	bcs	1c764 <argp_parse@@Base+0xe64>
   1c73c:	ldr	r2, [r3, #4]
   1c740:	cmp	r0, r2
   1c744:	bne	1c758 <argp_parse@@Base+0xe58>
   1c748:	b	1c76c <argp_parse@@Base+0xe6c>
   1c74c:	ldr	r2, [r3, #4]
   1c750:	cmp	r2, r0
   1c754:	beq	1c76c <argp_parse@@Base+0xe6c>
   1c758:	add	r3, r3, #36	; 0x24
   1c75c:	cmp	r3, r1
   1c760:	bcc	1c74c <argp_parse@@Base+0xe4c>
   1c764:	mov	r0, #0
   1c768:	bx	lr
   1c76c:	ldr	r0, [r3, #24]
   1c770:	bx	lr
   1c774:	ldr	ip, [pc, #32]	; 1c79c <argp_parse@@Base+0xe9c>
   1c778:	push	{lr}		; (str lr, [sp, #-4]!)
   1c77c:	sub	sp, sp, #12
   1c780:	ldm	ip, {r1, ip}
   1c784:	ldr	r3, [pc, #20]	; 1c7a0 <argp_parse@@Base+0xea0>
   1c788:	ldr	r2, [pc, #20]	; 1c7a4 <argp_parse@@Base+0xea4>
   1c78c:	str	ip, [sp]
   1c790:	bl	1d0f8 <argp_parse@@Base+0x17f8>
   1c794:	add	sp, sp, #12
   1c798:	pop	{pc}		; (ldr pc, [sp], #4)
   1c79c:	andeq	r3, r3, r0, lsl sl
   1c7a0:	andeq	r1, r2, ip, lsl pc
   1c7a4:	andeq	r1, r2, ip, lsr #30
   1c7a8:	ldr	r3, [pc, #20]	; 1c7c4 <argp_parse@@Base+0xec4>
   1c7ac:	ldr	r2, [pc, #20]	; 1c7c8 <argp_parse@@Base+0xec8>
   1c7b0:	ldr	ip, [pc, #20]	; 1c7cc <argp_parse@@Base+0xecc>
   1c7b4:	str	r0, [r3]
   1c7b8:	str	ip, [r2]
   1c7bc:	str	r1, [r3, #4]
   1c7c0:	bx	lr
   1c7c4:	andeq	r3, r3, r0, lsl sl
   1c7c8:	andeq	r3, r3, ip, lsl #20
   1c7cc:	andeq	ip, r1, r4, ror r7
   1c7d0:	ldrb	r3, [r0]
   1c7d4:	cmp	r3, #47	; 0x2f
   1c7d8:	bne	1c7e8 <argp_parse@@Base+0xee8>
   1c7dc:	ldrb	r3, [r0, #1]!
   1c7e0:	cmp	r3, #47	; 0x2f
   1c7e4:	beq	1c7dc <argp_parse@@Base+0xedc>
   1c7e8:	cmp	r3, #0
   1c7ec:	bxeq	lr
   1c7f0:	mov	r2, #0
   1c7f4:	push	{lr}		; (str lr, [sp, #-4]!)
   1c7f8:	mov	ip, r2
   1c7fc:	mov	r1, r0
   1c800:	mov	lr, #1
   1c804:	cmp	r3, #47	; 0x2f
   1c808:	moveq	r2, lr
   1c80c:	beq	1c81c <argp_parse@@Base+0xf1c>
   1c810:	cmp	r2, #0
   1c814:	movne	r0, r1
   1c818:	movne	r2, ip
   1c81c:	ldrb	r3, [r1, #1]!
   1c820:	cmp	r3, #0
   1c824:	bne	1c804 <argp_parse@@Base+0xf04>
   1c828:	pop	{pc}		; (ldr pc, [sp], #4)
   1c82c:	push	{r4, lr}
   1c830:	mov	r4, r0
   1c834:	bl	11918 <strlen@plt>
   1c838:	cmp	r0, #1
   1c83c:	popls	{r4, pc}
   1c840:	sub	r3, r0, #1
   1c844:	add	r2, r4, r3
   1c848:	ldrb	r1, [r4, r3]
   1c84c:	cmp	r1, #47	; 0x2f
   1c850:	popne	{r4, pc}
   1c854:	cmp	r3, #1
   1c858:	beq	1c86c <argp_parse@@Base+0xf6c>
   1c85c:	ldrb	r1, [r2, #-1]!
   1c860:	sub	r0, r3, #1
   1c864:	cmp	r1, #47	; 0x2f
   1c868:	beq	1c874 <argp_parse@@Base+0xf74>
   1c86c:	mov	r0, r3
   1c870:	pop	{r4, pc}
   1c874:	mov	r3, r0
   1c878:	b	1c854 <argp_parse@@Base+0xf54>
   1c87c:	push	{r1, r2, r3}
   1c880:	push	{r4, r5, r6, r7, lr}
   1c884:	sub	sp, sp, #8
   1c888:	add	r3, sp, #32
   1c88c:	ldr	r1, [sp, #28]
   1c890:	str	r3, [sp, #4]
   1c894:	cmp	r1, #0
   1c898:	beq	1c930 <argp_parse@@Base+0x1030>
   1c89c:	ldr	r2, [pc, #412]	; 1ca40 <argp_parse@@Base+0x1140>
   1c8a0:	mov	r5, r0
   1c8a4:	cmp	r1, r2
   1c8a8:	bne	1c8f4 <argp_parse@@Base+0xff4>
   1c8ac:	ldr	r6, [pc, #400]	; 1ca44 <argp_parse@@Base+0x1144>
   1c8b0:	ldr	r7, [r3]
   1c8b4:	add	r2, sp, #36	; 0x24
   1c8b8:	ldr	r3, [r6]
   1c8bc:	str	r2, [sp, #4]
   1c8c0:	cmp	r3, #0
   1c8c4:	mov	r2, r7
   1c8c8:	blt	1c9f4 <argp_parse@@Base+0x10f4>
   1c8cc:	bl	119cc <fcntl64@plt>
   1c8d0:	subs	r4, r0, #0
   1c8d4:	blt	1c978 <argp_parse@@Base+0x1078>
   1c8d8:	mov	r3, #1
   1c8dc:	str	r3, [r6]
   1c8e0:	mov	r0, r4
   1c8e4:	add	sp, sp, #8
   1c8e8:	pop	{r4, r5, r6, r7, lr}
   1c8ec:	add	sp, sp, #12
   1c8f0:	bx	lr
   1c8f4:	cmp	r1, #11
   1c8f8:	beq	1c920 <argp_parse@@Base+0x1020>
   1c8fc:	bgt	1c940 <argp_parse@@Base+0x1040>
   1c900:	cmp	r1, #3
   1c904:	beq	1c920 <argp_parse@@Base+0x1020>
   1c908:	ble	1ca34 <argp_parse@@Base+0x1134>
   1c90c:	cmp	r1, #8
   1c910:	beq	1c960 <argp_parse@@Base+0x1060>
   1c914:	ble	1c960 <argp_parse@@Base+0x1060>
   1c918:	cmp	r1, #9
   1c91c:	bne	1c960 <argp_parse@@Base+0x1060>
   1c920:	mov	r0, r5
   1c924:	bl	119cc <fcntl64@plt>
   1c928:	mov	r4, r0
   1c92c:	b	1c8e0 <argp_parse@@Base+0xfe0>
   1c930:	ldr	r2, [sp, #32]
   1c934:	bl	119cc <fcntl64@plt>
   1c938:	mov	r4, r0
   1c93c:	b	1c8e0 <argp_parse@@Base+0xfe0>
   1c940:	ldr	r3, [pc, #256]	; 1ca48 <argp_parse@@Base+0x1148>
   1c944:	cmp	r1, r3
   1c948:	bgt	1ca14 <argp_parse@@Base+0x1114>
   1c94c:	cmp	r1, r2
   1c950:	bge	1c960 <argp_parse@@Base+0x1060>
   1c954:	sub	r3, r3, #6
   1c958:	cmp	r1, r3
   1c95c:	beq	1c920 <argp_parse@@Base+0x1020>
   1c960:	ldr	r3, [sp, #4]
   1c964:	mov	r0, r5
   1c968:	ldr	r2, [r3]
   1c96c:	bl	119cc <fcntl64@plt>
   1c970:	mov	r4, r0
   1c974:	b	1c8e0 <argp_parse@@Base+0xfe0>
   1c978:	bl	11948 <__errno_location@plt>
   1c97c:	ldr	r3, [r0]
   1c980:	cmp	r3, #22
   1c984:	bne	1c8d8 <argp_parse@@Base+0xfd8>
   1c988:	mov	r2, r7
   1c98c:	mov	r0, r5
   1c990:	mov	r1, #0
   1c994:	bl	119cc <fcntl64@plt>
   1c998:	subs	r4, r0, #0
   1c99c:	blt	1c8e0 <argp_parse@@Base+0xfe0>
   1c9a0:	mvn	r3, #0
   1c9a4:	str	r3, [r6]
   1c9a8:	mov	r1, #1
   1c9ac:	mov	r0, r4
   1c9b0:	bl	119cc <fcntl64@plt>
   1c9b4:	subs	r2, r0, #0
   1c9b8:	blt	1c9d4 <argp_parse@@Base+0x10d4>
   1c9bc:	orr	r2, r2, #1
   1c9c0:	mov	r1, #2
   1c9c4:	mov	r0, r4
   1c9c8:	bl	119cc <fcntl64@plt>
   1c9cc:	cmn	r0, #1
   1c9d0:	bne	1c8e0 <argp_parse@@Base+0xfe0>
   1c9d4:	bl	11948 <__errno_location@plt>
   1c9d8:	mov	r5, r0
   1c9dc:	mov	r0, r4
   1c9e0:	ldr	r6, [r5]
   1c9e4:	mvn	r4, #0
   1c9e8:	bl	11af8 <close@plt>
   1c9ec:	str	r6, [r5]
   1c9f0:	b	1c8e0 <argp_parse@@Base+0xfe0>
   1c9f4:	mov	r1, #0
   1c9f8:	bl	119cc <fcntl64@plt>
   1c9fc:	subs	r4, r0, #0
   1ca00:	blt	1c8e0 <argp_parse@@Base+0xfe0>
   1ca04:	ldr	r3, [r6]
   1ca08:	cmn	r3, #1
   1ca0c:	beq	1c9a8 <argp_parse@@Base+0x10a8>
   1ca10:	b	1c8e0 <argp_parse@@Base+0xfe0>
   1ca14:	ldr	r3, [pc, #48]	; 1ca4c <argp_parse@@Base+0x114c>
   1ca18:	cmp	r1, r3
   1ca1c:	beq	1c960 <argp_parse@@Base+0x1060>
   1ca20:	blt	1c920 <argp_parse@@Base+0x1020>
   1ca24:	add	r3, r3, #1
   1ca28:	cmp	r1, r3
   1ca2c:	bne	1c960 <argp_parse@@Base+0x1060>
   1ca30:	b	1c920 <argp_parse@@Base+0x1020>
   1ca34:	cmp	r1, #1
   1ca38:	bne	1c960 <argp_parse@@Base+0x1060>
   1ca3c:	b	1c920 <argp_parse@@Base+0x1020>
   1ca40:	andeq	r0, r0, r6, lsl #8
   1ca44:	andeq	r3, r3, r8, lsl sl
   1ca48:	andeq	r0, r0, r7, lsl #8
   1ca4c:	andeq	r0, r0, r9, lsl #8
   1ca50:	push	{r4, r5, lr}
   1ca54:	sub	sp, sp, #12
   1ca58:	mov	r5, r0
   1ca5c:	bl	11948 <__errno_location@plt>
   1ca60:	mov	r2, #0
   1ca64:	mov	r4, r0
   1ca68:	ldr	r3, [r0]
   1ca6c:	str	r2, [r4]
   1ca70:	mov	r0, r5
   1ca74:	str	r3, [sp]
   1ca78:	str	r3, [sp, #4]
   1ca7c:	bl	11708 <free@plt>
   1ca80:	ldr	r3, [r4]
   1ca84:	add	r2, sp, #8
   1ca88:	cmp	r3, #0
   1ca8c:	moveq	r3, #4
   1ca90:	movne	r3, #0
   1ca94:	add	r3, r2, r3
   1ca98:	ldr	r3, [r3, #-8]
   1ca9c:	str	r3, [r4]
   1caa0:	add	sp, sp, #12
   1caa4:	pop	{r4, r5, pc}
   1caa8:	push	{lr}		; (str lr, [sp, #-4]!)
   1caac:	sub	sp, sp, #20
   1cab0:	mov	ip, #0
   1cab4:	ldr	lr, [sp, #24]
   1cab8:	str	ip, [sp, #8]
   1cabc:	str	lr, [sp]
   1cac0:	str	ip, [sp, #4]
   1cac4:	bl	1f8b4 <argp_parse@@Base+0x3fb4>
   1cac8:	add	sp, sp, #20
   1cacc:	pop	{pc}		; (ldr pc, [sp], #4)
   1cad0:	push	{r4, lr}
   1cad4:	sub	sp, sp, #16
   1cad8:	mov	ip, #0
   1cadc:	ldr	r4, [sp, #24]
   1cae0:	ldr	lr, [sp, #28]
   1cae4:	str	r4, [sp]
   1cae8:	str	lr, [sp, #8]
   1caec:	str	ip, [sp, #12]
   1caf0:	str	ip, [sp, #4]
   1caf4:	bl	1f340 <argp_parse@@Base+0x3a40>
   1caf8:	add	sp, sp, #16
   1cafc:	pop	{r4, pc}
   1cb00:	push	{r4, lr}
   1cb04:	sub	sp, sp, #16
   1cb08:	mov	lr, #0
   1cb0c:	ldr	r4, [sp, #24]
   1cb10:	mov	ip, #1
   1cb14:	stm	sp, {r4, ip, lr}
   1cb18:	bl	1f8b4 <argp_parse@@Base+0x3fb4>
   1cb1c:	add	sp, sp, #16
   1cb20:	pop	{r4, pc}
   1cb24:	push	{r4, r5, lr}
   1cb28:	sub	sp, sp, #20
   1cb2c:	mov	lr, #0
   1cb30:	ldr	r5, [sp, #32]
   1cb34:	ldr	r4, [sp, #36]	; 0x24
   1cb38:	mov	ip, #1
   1cb3c:	str	r5, [sp]
   1cb40:	str	r4, [sp, #8]
   1cb44:	str	lr, [sp, #12]
   1cb48:	str	ip, [sp, #4]
   1cb4c:	bl	1f340 <argp_parse@@Base+0x3a40>
   1cb50:	add	sp, sp, #20
   1cb54:	pop	{r4, r5, pc}
   1cb58:	push	{r4, r5, r6, lr}
   1cb5c:	subs	r4, r0, #0
   1cb60:	beq	1cbd4 <argp_parse@@Base+0x12d4>
   1cb64:	mov	r1, #47	; 0x2f
   1cb68:	bl	11a20 <strrchr@plt>
   1cb6c:	subs	r5, r0, #0
   1cb70:	beq	1cbc0 <argp_parse@@Base+0x12c0>
   1cb74:	add	r6, r5, #1
   1cb78:	sub	r3, r6, r4
   1cb7c:	cmp	r3, #6
   1cb80:	ble	1cbc0 <argp_parse@@Base+0x12c0>
   1cb84:	mov	r2, #7
   1cb88:	ldr	r1, [pc, #96]	; 1cbf0 <argp_parse@@Base+0x12f0>
   1cb8c:	sub	r0, r5, #6
   1cb90:	bl	11ad4 <strncmp@plt>
   1cb94:	cmp	r0, #0
   1cb98:	bne	1cbc0 <argp_parse@@Base+0x12c0>
   1cb9c:	mov	r2, #3
   1cba0:	ldr	r1, [pc, #76]	; 1cbf4 <argp_parse@@Base+0x12f4>
   1cba4:	mov	r0, r6
   1cba8:	bl	11ad4 <strncmp@plt>
   1cbac:	cmp	r0, #0
   1cbb0:	movne	r4, r6
   1cbb4:	ldreq	r3, [pc, #60]	; 1cbf8 <argp_parse@@Base+0x12f8>
   1cbb8:	addeq	r4, r5, #4
   1cbbc:	streq	r4, [r3]
   1cbc0:	ldr	r2, [pc, #52]	; 1cbfc <argp_parse@@Base+0x12fc>
   1cbc4:	ldr	r3, [pc, #52]	; 1cc00 <argp_parse@@Base+0x1300>
   1cbc8:	str	r4, [r2]
   1cbcc:	str	r4, [r3]
   1cbd0:	pop	{r4, r5, r6, pc}
   1cbd4:	ldr	r3, [pc, #40]	; 1cc04 <argp_parse@@Base+0x1304>
   1cbd8:	mov	r2, #55	; 0x37
   1cbdc:	mov	r1, #1
   1cbe0:	ldr	r3, [r3]
   1cbe4:	ldr	r0, [pc, #28]	; 1cc08 <argp_parse@@Base+0x1308>
   1cbe8:	bl	11834 <fwrite@plt>
   1cbec:	bl	11ae0 <abort@plt>
   1cbf0:	andeq	r1, r2, r4, ror pc
   1cbf4:	andeq	r1, r2, ip, ror pc
   1cbf8:	andeq	r3, r3, r0, asr #11
   1cbfc:	andeq	r3, r3, ip, lsl sl
   1cc00:	andeq	r3, r3, r4, asr #11
   1cc04:	andeq	r3, r3, r8, asr #11
   1cc08:	andeq	r1, r2, ip, lsr pc
   1cc0c:	push	{r4, r5, r6, lr}
   1cc10:	mov	r5, r0
   1cc14:	mov	r0, #33	; 0x21
   1cc18:	bl	1dbbc <argp_parse@@Base+0x22bc>
   1cc1c:	add	r1, r5, #44	; 0x2c
   1cc20:	mov	r2, #32
   1cc24:	mov	r5, #0
   1cc28:	mov	r4, r0
   1cc2c:	bl	11990 <strncpy@plt>
   1cc30:	mov	r0, r4
   1cc34:	strb	r5, [r4, #32]
   1cc38:	bl	11918 <strlen@plt>
   1cc3c:	add	r0, r4, r0
   1cc40:	cmp	r4, r0
   1cc44:	bcs	1cc54 <argp_parse@@Base+0x1354>
   1cc48:	ldrb	r3, [r0, #-1]
   1cc4c:	cmp	r3, #32
   1cc50:	beq	1cc5c <argp_parse@@Base+0x135c>
   1cc54:	mov	r0, r4
   1cc58:	pop	{r4, r5, r6, pc}
   1cc5c:	sub	r0, r0, #1
   1cc60:	cmp	r0, r4
   1cc64:	strb	r5, [r0]
   1cc68:	beq	1cc54 <argp_parse@@Base+0x1354>
   1cc6c:	ldrb	r3, [r0, #-1]!
   1cc70:	cmp	r3, #32
   1cc74:	beq	1cc60 <argp_parse@@Base+0x1360>
   1cc78:	mov	r0, r4
   1cc7c:	pop	{r4, r5, r6, pc}
   1cc80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cc84:	sub	sp, sp, #28
   1cc88:	mov	r8, r3
   1cc8c:	add	sl, sp, #24
   1cc90:	mov	ip, #0
   1cc94:	and	fp, r8, #2
   1cc98:	mov	r7, ip
   1cc9c:	str	r1, [sp, #8]
   1cca0:	str	r2, [sp, #12]
   1cca4:	str	ip, [sl, #-4]!
   1cca8:	mov	r9, ip
   1ccac:	bl	116d8 <utmpxname@plt>
   1ccb0:	bl	117b0 <setutxent@plt>
   1ccb4:	cmp	fp, #0
   1ccb8:	mov	r5, r7
   1ccbc:	mov	r6, r7
   1ccc0:	and	r8, r8, #1
   1ccc4:	beq	1cd48 <argp_parse@@Base+0x1448>
   1ccc8:	cmp	r8, #0
   1cccc:	beq	1ce18 <argp_parse@@Base+0x1518>
   1ccd0:	bl	11aec <getutxent@plt>
   1ccd4:	subs	r4, r0, #0
   1ccd8:	beq	1cde4 <argp_parse@@Base+0x14e4>
   1ccdc:	ldrb	r2, [r4, #44]	; 0x2c
   1cce0:	ldrsh	r3, [r4]
   1cce4:	cmp	r2, #0
   1cce8:	sub	r3, r3, #7
   1ccec:	clz	r3, r3
   1ccf0:	lsr	r3, r3, #5
   1ccf4:	moveq	r3, #0
   1ccf8:	cmp	r3, #0
   1ccfc:	beq	1ccd0 <argp_parse@@Base+0x13d0>
   1cd00:	ldr	r3, [r4, #4]
   1cd04:	mov	r1, r6
   1cd08:	subs	r0, r3, #0
   1cd0c:	ble	1cd1c <argp_parse@@Base+0x141c>
   1cd10:	bl	118e8 <kill@plt>
   1cd14:	cmp	r0, #0
   1cd18:	blt	1ce04 <argp_parse@@Base+0x1504>
   1cd1c:	ldr	r3, [sp, #20]
   1cd20:	cmp	r5, r3
   1cd24:	beq	1cdb4 <argp_parse@@Base+0x14b4>
   1cd28:	add	r0, r9, r7
   1cd2c:	mov	r1, r4
   1cd30:	mov	r2, #384	; 0x180
   1cd34:	bl	11744 <memcpy@plt>
   1cd38:	cmp	fp, #0
   1cd3c:	add	r5, r5, #1
   1cd40:	add	r7, r7, #384	; 0x180
   1cd44:	bne	1ccc8 <argp_parse@@Base+0x13c8>
   1cd48:	cmp	r8, #0
   1cd4c:	beq	1cdd8 <argp_parse@@Base+0x14d8>
   1cd50:	bl	11aec <getutxent@plt>
   1cd54:	subs	r4, r0, #0
   1cd58:	beq	1cde4 <argp_parse@@Base+0x14e4>
   1cd5c:	ldrb	r3, [r4, #44]	; 0x2c
   1cd60:	ldrsh	r2, [r4]
   1cd64:	adds	r3, r3, #0
   1cd68:	movne	r3, #1
   1cd6c:	cmp	r2, #7
   1cd70:	movne	r3, #0
   1cd74:	cmp	r3, #0
   1cd78:	beq	1cd1c <argp_parse@@Base+0x141c>
   1cd7c:	ldr	r3, [r4, #4]
   1cd80:	mov	r1, r6
   1cd84:	subs	r0, r3, #0
   1cd88:	ble	1cd1c <argp_parse@@Base+0x141c>
   1cd8c:	bl	118e8 <kill@plt>
   1cd90:	cmp	r0, #0
   1cd94:	bge	1cd1c <argp_parse@@Base+0x141c>
   1cd98:	bl	11948 <__errno_location@plt>
   1cd9c:	ldr	r3, [r0]
   1cda0:	cmp	r3, #3
   1cda4:	beq	1cd50 <argp_parse@@Base+0x1450>
   1cda8:	ldr	r3, [sp, #20]
   1cdac:	cmp	r5, r3
   1cdb0:	bne	1cd28 <argp_parse@@Base+0x1428>
   1cdb4:	mov	r3, #384	; 0x180
   1cdb8:	str	r3, [sp]
   1cdbc:	mov	r0, r9
   1cdc0:	mvn	r3, #0
   1cdc4:	mov	r2, #1
   1cdc8:	mov	r1, sl
   1cdcc:	bl	1de00 <argp_parse@@Base+0x2500>
   1cdd0:	mov	r9, r0
   1cdd4:	b	1cd28 <argp_parse@@Base+0x1428>
   1cdd8:	bl	11aec <getutxent@plt>
   1cddc:	subs	r4, r0, #0
   1cde0:	bne	1cd1c <argp_parse@@Base+0x141c>
   1cde4:	bl	119e4 <endutxent@plt>
   1cde8:	ldr	r3, [sp, #8]
   1cdec:	mov	r0, #0
   1cdf0:	str	r5, [r3]
   1cdf4:	ldr	r3, [sp, #12]
   1cdf8:	str	r9, [r3]
   1cdfc:	add	sp, sp, #28
   1ce00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce04:	bl	11948 <__errno_location@plt>
   1ce08:	ldr	r3, [r0]
   1ce0c:	cmp	r3, #3
   1ce10:	bne	1cd1c <argp_parse@@Base+0x141c>
   1ce14:	b	1ccd0 <argp_parse@@Base+0x13d0>
   1ce18:	bl	11aec <getutxent@plt>
   1ce1c:	cmp	r0, #0
   1ce20:	beq	1cde4 <argp_parse@@Base+0x14e4>
   1ce24:	ldrb	r2, [r0, #44]	; 0x2c
   1ce28:	ldrsh	r3, [r0]
   1ce2c:	cmp	r2, #0
   1ce30:	sub	r3, r3, #7
   1ce34:	clz	r3, r3
   1ce38:	lsr	r3, r3, #5
   1ce3c:	moveq	r3, #0
   1ce40:	cmp	r3, #0
   1ce44:	beq	1ce18 <argp_parse@@Base+0x1518>
   1ce48:	mov	r4, r0
   1ce4c:	b	1cd1c <argp_parse@@Base+0x141c>
   1ce50:	push	{r4, r5, r6, r7, lr}
   1ce54:	sub	sp, sp, #36	; 0x24
   1ce58:	cmp	r1, #0
   1ce5c:	mov	r4, r0
   1ce60:	ldr	r5, [sp, #56]	; 0x38
   1ce64:	ldr	r6, [sp, #60]	; 0x3c
   1ce68:	beq	1d0a8 <argp_parse@@Base+0x17a8>
   1ce6c:	str	r3, [sp]
   1ce70:	mov	r3, r2
   1ce74:	mov	r2, r1
   1ce78:	ldr	r1, [pc, #564]	; 1d0b4 <argp_parse@@Base+0x17b4>
   1ce7c:	bl	1193c <fprintf@plt>
   1ce80:	ldr	r3, [pc, #560]	; 1d0b8 <argp_parse@@Base+0x17b8>
   1ce84:	ldr	r2, [pc, #560]	; 1d0bc <argp_parse@@Base+0x17bc>
   1ce88:	ldr	r1, [pc, #560]	; 1d0c0 <argp_parse@@Base+0x17c0>
   1ce8c:	mov	r0, r4
   1ce90:	bl	1193c <fprintf@plt>
   1ce94:	mov	r1, r4
   1ce98:	mov	r0, #10
   1ce9c:	bl	11a38 <fputc@plt>
   1cea0:	ldr	r1, [pc, #540]	; 1d0c4 <argp_parse@@Base+0x17c4>
   1cea4:	ldr	r2, [pc, #540]	; 1d0c8 <argp_parse@@Base+0x17c8>
   1cea8:	mov	r0, r4
   1ceac:	bl	1193c <fprintf@plt>
   1ceb0:	mov	r1, r4
   1ceb4:	mov	r0, #10
   1ceb8:	bl	11a38 <fputc@plt>
   1cebc:	cmp	r6, #9
   1cec0:	ldrls	pc, [pc, r6, lsl #2]
   1cec4:	b	1cef0 <argp_parse@@Base+0x15f0>
   1cec8:	andeq	ip, r1, r0, lsr pc
   1cecc:	andeq	ip, r1, ip, ror pc
   1ced0:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1ced4:	andeq	ip, r1, ip, lsr #31
   1ced8:	andeq	ip, r1, ip, asr #31
   1cedc:	strdeq	ip, [r1], -r4
   1cee0:	andeq	sp, r1, r4, lsl r0
   1cee4:	andeq	sp, r1, ip, lsr r0
   1cee8:	andeq	sp, r1, ip, rrx
   1ceec:	andeq	ip, r1, r8, lsr pc
   1cef0:	ldr	ip, [r5, #32]
   1cef4:	ldr	r1, [r5, #28]
   1cef8:	ldm	r5, {r2, r3}
   1cefc:	ldr	r7, [r5, #24]
   1cf00:	ldr	r6, [r5, #20]
   1cf04:	str	ip, [sp, #24]
   1cf08:	ldr	lr, [r5, #16]
   1cf0c:	str	r1, [sp, #20]
   1cf10:	ldr	r1, [r5, #8]
   1cf14:	ldr	ip, [r5, #12]
   1cf18:	mov	r0, r4
   1cf1c:	str	r7, [sp, #16]
   1cf20:	stm	sp, {r1, ip, lr}
   1cf24:	str	r6, [sp, #12]
   1cf28:	ldr	r1, [pc, #412]	; 1d0cc <argp_parse@@Base+0x17cc>
   1cf2c:	bl	1193c <fprintf@plt>
   1cf30:	add	sp, sp, #36	; 0x24
   1cf34:	pop	{r4, r5, r6, r7, pc}
   1cf38:	ldr	ip, [r5, #32]
   1cf3c:	ldr	r1, [r5, #28]
   1cf40:	ldm	r5, {r2, r3}
   1cf44:	ldr	r7, [r5, #24]
   1cf48:	ldr	r6, [r5, #20]
   1cf4c:	str	ip, [sp, #24]
   1cf50:	ldr	lr, [r5, #16]
   1cf54:	str	r1, [sp, #20]
   1cf58:	ldr	r1, [r5, #8]
   1cf5c:	ldr	ip, [r5, #12]
   1cf60:	mov	r0, r4
   1cf64:	str	r7, [sp, #16]
   1cf68:	stm	sp, {r1, ip, lr}
   1cf6c:	str	r6, [sp, #12]
   1cf70:	ldr	r1, [pc, #344]	; 1d0d0 <argp_parse@@Base+0x17d0>
   1cf74:	bl	1193c <fprintf@plt>
   1cf78:	b	1cf30 <argp_parse@@Base+0x1630>
   1cf7c:	ldr	r2, [r5]
   1cf80:	mov	r0, r4
   1cf84:	ldr	r1, [pc, #328]	; 1d0d4 <argp_parse@@Base+0x17d4>
   1cf88:	add	sp, sp, #36	; 0x24
   1cf8c:	pop	{r4, r5, r6, r7, lr}
   1cf90:	b	1193c <fprintf@plt>
   1cf94:	mov	r0, r4
   1cf98:	ldm	r5, {r2, r3}
   1cf9c:	ldr	r1, [pc, #308]	; 1d0d8 <argp_parse@@Base+0x17d8>
   1cfa0:	add	sp, sp, #36	; 0x24
   1cfa4:	pop	{r4, r5, r6, r7, lr}
   1cfa8:	b	1193c <fprintf@plt>
   1cfac:	ldr	r1, [r5, #8]
   1cfb0:	ldm	r5, {r2, r3}
   1cfb4:	mov	r0, r4
   1cfb8:	str	r1, [sp, #56]	; 0x38
   1cfbc:	ldr	r1, [pc, #280]	; 1d0dc <argp_parse@@Base+0x17dc>
   1cfc0:	add	sp, sp, #36	; 0x24
   1cfc4:	pop	{r4, r5, r6, r7, lr}
   1cfc8:	b	1193c <fprintf@plt>
   1cfcc:	ldr	r1, [r5, #8]
   1cfd0:	ldr	ip, [r5, #12]
   1cfd4:	ldm	r5, {r2, r3}
   1cfd8:	mov	r0, r4
   1cfdc:	str	r1, [sp, #56]	; 0x38
   1cfe0:	str	ip, [sp, #60]	; 0x3c
   1cfe4:	ldr	r1, [pc, #244]	; 1d0e0 <argp_parse@@Base+0x17e0>
   1cfe8:	add	sp, sp, #36	; 0x24
   1cfec:	pop	{r4, r5, r6, r7, lr}
   1cff0:	b	1193c <fprintf@plt>
   1cff4:	add	r1, r5, #8
   1cff8:	ldm	r5, {r2, r3}
   1cffc:	ldm	r1, {r1, ip, lr}
   1d000:	mov	r0, r4
   1d004:	stm	sp, {r1, ip, lr}
   1d008:	ldr	r1, [pc, #212]	; 1d0e4 <argp_parse@@Base+0x17e4>
   1d00c:	bl	1193c <fprintf@plt>
   1d010:	b	1cf30 <argp_parse@@Base+0x1630>
   1d014:	add	r1, r5, #8
   1d018:	ldr	r6, [r5, #20]
   1d01c:	ldm	r1, {r1, ip, lr}
   1d020:	mov	r0, r4
   1d024:	ldm	r5, {r2, r3}
   1d028:	str	r6, [sp, #12]
   1d02c:	stm	sp, {r1, ip, lr}
   1d030:	ldr	r1, [pc, #176]	; 1d0e8 <argp_parse@@Base+0x17e8>
   1d034:	bl	1193c <fprintf@plt>
   1d038:	b	1cf30 <argp_parse@@Base+0x1630>
   1d03c:	add	r1, r5, #8
   1d040:	ldr	r7, [r5, #24]
   1d044:	ldm	r1, {r1, ip, lr}
   1d048:	mov	r0, r4
   1d04c:	ldr	r6, [r5, #20]
   1d050:	ldm	r5, {r2, r3}
   1d054:	stm	sp, {r1, ip, lr}
   1d058:	str	r7, [sp, #16]
   1d05c:	str	r6, [sp, #12]
   1d060:	ldr	r1, [pc, #132]	; 1d0ec <argp_parse@@Base+0x17ec>
   1d064:	bl	1193c <fprintf@plt>
   1d068:	b	1cf30 <argp_parse@@Base+0x1630>
   1d06c:	ldr	r1, [r5, #28]
   1d070:	ldm	r5, {r2, r3}
   1d074:	ldr	r7, [r5, #24]
   1d078:	ldr	r6, [r5, #20]
   1d07c:	ldr	lr, [r5, #16]
   1d080:	str	r1, [sp, #20]
   1d084:	ldr	r1, [r5, #8]
   1d088:	ldr	ip, [r5, #12]
   1d08c:	mov	r0, r4
   1d090:	str	r7, [sp, #16]
   1d094:	stm	sp, {r1, ip, lr}
   1d098:	str	r6, [sp, #12]
   1d09c:	ldr	r1, [pc, #76]	; 1d0f0 <argp_parse@@Base+0x17f0>
   1d0a0:	bl	1193c <fprintf@plt>
   1d0a4:	b	1cf30 <argp_parse@@Base+0x1630>
   1d0a8:	ldr	r1, [pc, #68]	; 1d0f4 <argp_parse@@Base+0x17f4>
   1d0ac:	bl	1193c <fprintf@plt>
   1d0b0:	b	1ce80 <argp_parse@@Base+0x1580>
   1d0b4:	andeq	r1, r2, r0, lsl #31
   1d0b8:	andeq	r0, r0, r6, ror #15
   1d0bc:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1d0c0:	muleq	r2, r4, r2
   1d0c4:			; <UNDEFINED> instruction: 0x00021fbc
   1d0c8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1d0cc:	andeq	r2, r2, r8, lsr #3
   1d0d0:	andeq	r2, r2, r4, ror r1
   1d0d4:	andeq	r2, r2, r8, rrx
   1d0d8:	andeq	r2, r2, r8, ror r0
   1d0dc:	muleq	r2, r0, r0
   1d0e0:	andeq	r2, r2, ip, lsr #1
   1d0e4:	andeq	r2, r2, ip, asr #1
   1d0e8:	strdeq	r2, [r2], -r0
   1d0ec:	andeq	r2, r2, r8, lsl r1
   1d0f0:	andeq	r2, r2, r4, asr #2
   1d0f4:	andeq	r1, r2, ip, lsl #31
   1d0f8:	push	{r4, r5, r6, r7, lr}
   1d0fc:	sub	sp, sp, #36	; 0x24
   1d100:	mov	r6, r0
   1d104:	ldr	r5, [sp, #56]	; 0x38
   1d108:	ldr	r4, [r5]
   1d10c:	cmp	r4, #0
   1d110:	beq	1d12c <argp_parse@@Base+0x182c>
   1d114:	mov	r0, r5
   1d118:	mov	r4, #0
   1d11c:	ldr	ip, [r0, #4]!
   1d120:	add	r4, r4, #1
   1d124:	cmp	ip, #0
   1d128:	bne	1d11c <argp_parse@@Base+0x181c>
   1d12c:	cmp	r1, #0
   1d130:	beq	1d36c <argp_parse@@Base+0x1a6c>
   1d134:	str	r3, [sp]
   1d138:	mov	r0, r6
   1d13c:	mov	r3, r2
   1d140:	mov	r2, r1
   1d144:	ldr	r1, [pc, #560]	; 1d37c <argp_parse@@Base+0x1a7c>
   1d148:	bl	1193c <fprintf@plt>
   1d14c:	ldr	r3, [pc, #556]	; 1d380 <argp_parse@@Base+0x1a80>
   1d150:	ldr	r2, [pc, #556]	; 1d384 <argp_parse@@Base+0x1a84>
   1d154:	ldr	r1, [pc, #556]	; 1d388 <argp_parse@@Base+0x1a88>
   1d158:	mov	r0, r6
   1d15c:	bl	1193c <fprintf@plt>
   1d160:	mov	r1, r6
   1d164:	mov	r0, #10
   1d168:	bl	11a38 <fputc@plt>
   1d16c:	ldr	r1, [pc, #536]	; 1d38c <argp_parse@@Base+0x1a8c>
   1d170:	ldr	r2, [pc, #536]	; 1d390 <argp_parse@@Base+0x1a90>
   1d174:	mov	r0, r6
   1d178:	bl	1193c <fprintf@plt>
   1d17c:	mov	r1, r6
   1d180:	mov	r0, #10
   1d184:	bl	11a38 <fputc@plt>
   1d188:	cmp	r4, #9
   1d18c:	ldrls	pc, [pc, r4, lsl #2]
   1d190:	b	1d1bc <argp_parse@@Base+0x18bc>
   1d194:	strdeq	sp, [r1], -ip
   1d198:	andeq	sp, r1, r8, asr #4
   1d19c:	andeq	sp, r1, r0, ror #4
   1d1a0:	andeq	sp, r1, r8, ror r2
   1d1a4:	muleq	r1, r8, r2
   1d1a8:			; <UNDEFINED> instruction: 0x0001d2b8
   1d1ac:	ldrdeq	sp, [r1], -r8
   1d1b0:	andeq	sp, r1, r0, lsl #6
   1d1b4:	andeq	sp, r1, r0, lsr r3
   1d1b8:	andeq	sp, r1, r4, lsl #4
   1d1bc:	ldr	ip, [r5, #32]
   1d1c0:	ldr	r1, [r5, #28]
   1d1c4:	ldm	r5, {r2, r3}
   1d1c8:	ldr	r7, [r5, #24]
   1d1cc:	ldr	r4, [r5, #20]
   1d1d0:	str	ip, [sp, #24]
   1d1d4:	ldr	lr, [r5, #16]
   1d1d8:	str	r1, [sp, #20]
   1d1dc:	ldr	r1, [r5, #8]
   1d1e0:	ldr	ip, [r5, #12]
   1d1e4:	mov	r0, r6
   1d1e8:	str	r7, [sp, #16]
   1d1ec:	stm	sp, {r1, ip, lr}
   1d1f0:	str	r4, [sp, #12]
   1d1f4:	ldr	r1, [pc, #408]	; 1d394 <argp_parse@@Base+0x1a94>
   1d1f8:	bl	1193c <fprintf@plt>
   1d1fc:	add	sp, sp, #36	; 0x24
   1d200:	pop	{r4, r5, r6, r7, pc}
   1d204:	ldr	ip, [r5, #32]
   1d208:	ldr	r1, [r5, #28]
   1d20c:	ldm	r5, {r2, r3}
   1d210:	ldr	r7, [r5, #24]
   1d214:	ldr	r4, [r5, #20]
   1d218:	str	ip, [sp, #24]
   1d21c:	ldr	lr, [r5, #16]
   1d220:	str	r1, [sp, #20]
   1d224:	ldr	r1, [r5, #8]
   1d228:	ldr	ip, [r5, #12]
   1d22c:	mov	r0, r6
   1d230:	str	r7, [sp, #16]
   1d234:	stm	sp, {r1, ip, lr}
   1d238:	str	r4, [sp, #12]
   1d23c:	ldr	r1, [pc, #340]	; 1d398 <argp_parse@@Base+0x1a98>
   1d240:	bl	1193c <fprintf@plt>
   1d244:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d248:	ldr	r2, [r5]
   1d24c:	mov	r0, r6
   1d250:	ldr	r1, [pc, #324]	; 1d39c <argp_parse@@Base+0x1a9c>
   1d254:	add	sp, sp, #36	; 0x24
   1d258:	pop	{r4, r5, r6, r7, lr}
   1d25c:	b	1193c <fprintf@plt>
   1d260:	mov	r0, r6
   1d264:	ldm	r5, {r2, r3}
   1d268:	ldr	r1, [pc, #304]	; 1d3a0 <argp_parse@@Base+0x1aa0>
   1d26c:	add	sp, sp, #36	; 0x24
   1d270:	pop	{r4, r5, r6, r7, lr}
   1d274:	b	1193c <fprintf@plt>
   1d278:	ldr	r1, [r5, #8]
   1d27c:	ldm	r5, {r2, r3}
   1d280:	mov	r0, r6
   1d284:	str	r1, [sp, #56]	; 0x38
   1d288:	ldr	r1, [pc, #276]	; 1d3a4 <argp_parse@@Base+0x1aa4>
   1d28c:	add	sp, sp, #36	; 0x24
   1d290:	pop	{r4, r5, r6, r7, lr}
   1d294:	b	1193c <fprintf@plt>
   1d298:	ldr	r1, [r5, #8]
   1d29c:	ldr	ip, [r5, #12]
   1d2a0:	ldm	r5, {r2, r3}
   1d2a4:	mov	r0, r6
   1d2a8:	stm	sp, {r1, ip}
   1d2ac:	ldr	r1, [pc, #244]	; 1d3a8 <argp_parse@@Base+0x1aa8>
   1d2b0:	bl	1193c <fprintf@plt>
   1d2b4:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d2b8:	add	r1, r5, #8
   1d2bc:	ldm	r5, {r2, r3}
   1d2c0:	ldm	r1, {r1, ip, lr}
   1d2c4:	mov	r0, r6
   1d2c8:	stm	sp, {r1, ip, lr}
   1d2cc:	ldr	r1, [pc, #216]	; 1d3ac <argp_parse@@Base+0x1aac>
   1d2d0:	bl	1193c <fprintf@plt>
   1d2d4:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d2d8:	add	r1, r5, #8
   1d2dc:	ldr	r4, [r5, #20]
   1d2e0:	ldm	r1, {r1, ip, lr}
   1d2e4:	mov	r0, r6
   1d2e8:	ldm	r5, {r2, r3}
   1d2ec:	str	r4, [sp, #12]
   1d2f0:	stm	sp, {r1, ip, lr}
   1d2f4:	ldr	r1, [pc, #180]	; 1d3b0 <argp_parse@@Base+0x1ab0>
   1d2f8:	bl	1193c <fprintf@plt>
   1d2fc:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d300:	add	r1, r5, #8
   1d304:	ldr	r7, [r5, #24]
   1d308:	ldm	r1, {r1, ip, lr}
   1d30c:	mov	r0, r6
   1d310:	ldr	r4, [r5, #20]
   1d314:	ldm	r5, {r2, r3}
   1d318:	stm	sp, {r1, ip, lr}
   1d31c:	str	r7, [sp, #16]
   1d320:	str	r4, [sp, #12]
   1d324:	ldr	r1, [pc, #136]	; 1d3b4 <argp_parse@@Base+0x1ab4>
   1d328:	bl	1193c <fprintf@plt>
   1d32c:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d330:	ldr	r1, [r5, #28]
   1d334:	ldm	r5, {r2, r3}
   1d338:	ldr	r7, [r5, #24]
   1d33c:	ldr	r4, [r5, #20]
   1d340:	ldr	lr, [r5, #16]
   1d344:	str	r1, [sp, #20]
   1d348:	ldr	r1, [r5, #8]
   1d34c:	ldr	ip, [r5, #12]
   1d350:	mov	r0, r6
   1d354:	str	r7, [sp, #16]
   1d358:	stm	sp, {r1, ip, lr}
   1d35c:	str	r4, [sp, #12]
   1d360:	ldr	r1, [pc, #80]	; 1d3b8 <argp_parse@@Base+0x1ab8>
   1d364:	bl	1193c <fprintf@plt>
   1d368:	b	1d1fc <argp_parse@@Base+0x18fc>
   1d36c:	ldr	r1, [pc, #72]	; 1d3bc <argp_parse@@Base+0x1abc>
   1d370:	mov	r0, r6
   1d374:	bl	1193c <fprintf@plt>
   1d378:	b	1d14c <argp_parse@@Base+0x184c>
   1d37c:	andeq	r1, r2, r0, lsl #31
   1d380:	andeq	r0, r0, r6, ror #15
   1d384:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1d388:	muleq	r2, r4, r2
   1d38c:			; <UNDEFINED> instruction: 0x00021fbc
   1d390:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1d394:	andeq	r2, r2, r8, lsr #3
   1d398:	andeq	r2, r2, r4, ror r1
   1d39c:	andeq	r2, r2, r8, rrx
   1d3a0:	andeq	r2, r2, r8, ror r0
   1d3a4:	muleq	r2, r0, r0
   1d3a8:	andeq	r2, r2, ip, lsr #1
   1d3ac:	andeq	r2, r2, ip, asr #1
   1d3b0:	strdeq	r2, [r2], -r0
   1d3b4:	andeq	r2, r2, r8, lsl r1
   1d3b8:	andeq	r2, r2, r4, asr #2
   1d3bc:	andeq	r1, r2, ip, lsl #31
   1d3c0:	push	{r4, r5, r6, lr}
   1d3c4:	sub	sp, sp, #72	; 0x48
   1d3c8:	mov	r5, r0
   1d3cc:	ldr	ip, [sp, #88]	; 0x58
   1d3d0:	ldr	r0, [ip]
   1d3d4:	cmp	r0, #0
   1d3d8:	str	r0, [sp, #32]
   1d3dc:	beq	1d6e4 <argp_parse@@Base+0x1de4>
   1d3e0:	ldr	r0, [ip, #4]
   1d3e4:	cmp	r0, #0
   1d3e8:	str	r0, [sp, #36]	; 0x24
   1d3ec:	beq	1d6ec <argp_parse@@Base+0x1dec>
   1d3f0:	ldr	r0, [ip, #8]
   1d3f4:	cmp	r0, #0
   1d3f8:	str	r0, [sp, #40]	; 0x28
   1d3fc:	beq	1d6f4 <argp_parse@@Base+0x1df4>
   1d400:	ldr	r0, [ip, #12]
   1d404:	cmp	r0, #0
   1d408:	str	r0, [sp, #44]	; 0x2c
   1d40c:	beq	1d6fc <argp_parse@@Base+0x1dfc>
   1d410:	ldr	r0, [ip, #16]
   1d414:	cmp	r0, #0
   1d418:	str	r0, [sp, #48]	; 0x30
   1d41c:	beq	1d704 <argp_parse@@Base+0x1e04>
   1d420:	ldr	r0, [ip, #20]
   1d424:	cmp	r0, #0
   1d428:	str	r0, [sp, #52]	; 0x34
   1d42c:	beq	1d70c <argp_parse@@Base+0x1e0c>
   1d430:	ldr	r0, [ip, #24]
   1d434:	cmp	r0, #0
   1d438:	str	r0, [sp, #56]	; 0x38
   1d43c:	beq	1d714 <argp_parse@@Base+0x1e14>
   1d440:	ldr	r0, [ip, #28]
   1d444:	cmp	r0, #0
   1d448:	str	r0, [sp, #60]	; 0x3c
   1d44c:	beq	1d71c <argp_parse@@Base+0x1e1c>
   1d450:	ldr	r0, [ip, #32]
   1d454:	cmp	r0, #0
   1d458:	str	r0, [sp, #64]	; 0x40
   1d45c:	beq	1d724 <argp_parse@@Base+0x1e24>
   1d460:	ldr	r0, [ip, #36]	; 0x24
   1d464:	cmp	r0, #0
   1d468:	movne	r4, #10
   1d46c:	moveq	r4, #9
   1d470:	cmp	r1, #0
   1d474:	beq	1d6d4 <argp_parse@@Base+0x1dd4>
   1d478:	str	r3, [sp]
   1d47c:	mov	r0, r5
   1d480:	mov	r3, r2
   1d484:	mov	r2, r1
   1d488:	ldr	r1, [pc, #668]	; 1d72c <argp_parse@@Base+0x1e2c>
   1d48c:	bl	1193c <fprintf@plt>
   1d490:	ldr	r3, [pc, #664]	; 1d730 <argp_parse@@Base+0x1e30>
   1d494:	ldr	r2, [pc, #664]	; 1d734 <argp_parse@@Base+0x1e34>
   1d498:	ldr	r1, [pc, #664]	; 1d738 <argp_parse@@Base+0x1e38>
   1d49c:	mov	r0, r5
   1d4a0:	bl	1193c <fprintf@plt>
   1d4a4:	mov	r1, r5
   1d4a8:	mov	r0, #10
   1d4ac:	bl	11a38 <fputc@plt>
   1d4b0:	ldr	r1, [pc, #644]	; 1d73c <argp_parse@@Base+0x1e3c>
   1d4b4:	ldr	r2, [pc, #644]	; 1d740 <argp_parse@@Base+0x1e40>
   1d4b8:	mov	r0, r5
   1d4bc:	bl	1193c <fprintf@plt>
   1d4c0:	mov	r1, r5
   1d4c4:	mov	r0, #10
   1d4c8:	bl	11a38 <fputc@plt>
   1d4cc:	cmp	r4, #9
   1d4d0:	ldrls	pc, [pc, r4, lsl #2]
   1d4d4:	b	1d500 <argp_parse@@Base+0x1c00>
   1d4d8:	andeq	sp, r1, r4, asr #10
   1d4dc:	muleq	r1, r4, r5
   1d4e0:	andeq	sp, r1, ip, lsr #11
   1d4e4:	andeq	sp, r1, r8, asr #11
   1d4e8:	andeq	sp, r1, ip, ror #11
   1d4ec:	andeq	sp, r1, r0, lsl r6
   1d4f0:	andeq	sp, r1, r4, lsr r6
   1d4f4:	andeq	sp, r1, r0, ror #12
   1d4f8:	muleq	r1, r4, r6
   1d4fc:	andeq	sp, r1, ip, asr #10
   1d500:	ldr	ip, [sp, #64]	; 0x40
   1d504:	ldr	r1, [sp, #60]	; 0x3c
   1d508:	ldr	lr, [sp, #48]	; 0x30
   1d50c:	str	ip, [sp, #24]
   1d510:	str	r1, [sp, #20]
   1d514:	ldr	ip, [sp, #44]	; 0x2c
   1d518:	ldr	r1, [sp, #40]	; 0x28
   1d51c:	ldr	r6, [sp, #56]	; 0x38
   1d520:	ldr	r4, [sp, #52]	; 0x34
   1d524:	stm	sp, {r1, ip, lr}
   1d528:	mov	r0, r5
   1d52c:	ldr	r3, [sp, #36]	; 0x24
   1d530:	ldr	r2, [sp, #32]
   1d534:	str	r6, [sp, #16]
   1d538:	str	r4, [sp, #12]
   1d53c:	ldr	r1, [pc, #512]	; 1d744 <argp_parse@@Base+0x1e44>
   1d540:	bl	1193c <fprintf@plt>
   1d544:	add	sp, sp, #72	; 0x48
   1d548:	pop	{r4, r5, r6, pc}
   1d54c:	ldr	ip, [sp, #64]	; 0x40
   1d550:	ldr	r1, [sp, #60]	; 0x3c
   1d554:	ldr	lr, [sp, #48]	; 0x30
   1d558:	str	ip, [sp, #24]
   1d55c:	str	r1, [sp, #20]
   1d560:	ldr	ip, [sp, #44]	; 0x2c
   1d564:	ldr	r1, [sp, #40]	; 0x28
   1d568:	ldr	r6, [sp, #56]	; 0x38
   1d56c:	ldr	r4, [sp, #52]	; 0x34
   1d570:	stm	sp, {r1, ip, lr}
   1d574:	mov	r0, r5
   1d578:	ldr	r3, [sp, #36]	; 0x24
   1d57c:	ldr	r2, [sp, #32]
   1d580:	str	r6, [sp, #16]
   1d584:	str	r4, [sp, #12]
   1d588:	ldr	r1, [pc, #440]	; 1d748 <argp_parse@@Base+0x1e48>
   1d58c:	bl	1193c <fprintf@plt>
   1d590:	b	1d544 <argp_parse@@Base+0x1c44>
   1d594:	mov	r0, r5
   1d598:	ldr	r2, [sp, #32]
   1d59c:	ldr	r1, [pc, #424]	; 1d74c <argp_parse@@Base+0x1e4c>
   1d5a0:	add	sp, sp, #72	; 0x48
   1d5a4:	pop	{r4, r5, r6, lr}
   1d5a8:	b	1193c <fprintf@plt>
   1d5ac:	mov	r0, r5
   1d5b0:	ldr	r3, [sp, #36]	; 0x24
   1d5b4:	ldr	r2, [sp, #32]
   1d5b8:	ldr	r1, [pc, #400]	; 1d750 <argp_parse@@Base+0x1e50>
   1d5bc:	add	sp, sp, #72	; 0x48
   1d5c0:	pop	{r4, r5, r6, lr}
   1d5c4:	b	1193c <fprintf@plt>
   1d5c8:	ldr	r1, [sp, #40]	; 0x28
   1d5cc:	ldr	r3, [sp, #36]	; 0x24
   1d5d0:	str	r1, [sp, #88]	; 0x58
   1d5d4:	ldr	r2, [sp, #32]
   1d5d8:	mov	r0, r5
   1d5dc:	ldr	r1, [pc, #368]	; 1d754 <argp_parse@@Base+0x1e54>
   1d5e0:	add	sp, sp, #72	; 0x48
   1d5e4:	pop	{r4, r5, r6, lr}
   1d5e8:	b	1193c <fprintf@plt>
   1d5ec:	ldr	r1, [sp, #40]	; 0x28
   1d5f0:	ldr	ip, [sp, #44]	; 0x2c
   1d5f4:	ldr	r3, [sp, #36]	; 0x24
   1d5f8:	ldr	r2, [sp, #32]
   1d5fc:	stm	sp, {r1, ip}
   1d600:	mov	r0, r5
   1d604:	ldr	r1, [pc, #332]	; 1d758 <argp_parse@@Base+0x1e58>
   1d608:	bl	1193c <fprintf@plt>
   1d60c:	b	1d544 <argp_parse@@Base+0x1c44>
   1d610:	add	r1, sp, #40	; 0x28
   1d614:	ldr	r3, [sp, #36]	; 0x24
   1d618:	ldm	r1, {r1, ip, lr}
   1d61c:	mov	r0, r5
   1d620:	ldr	r2, [sp, #32]
   1d624:	stm	sp, {r1, ip, lr}
   1d628:	ldr	r1, [pc, #300]	; 1d75c <argp_parse@@Base+0x1e5c>
   1d62c:	bl	1193c <fprintf@plt>
   1d630:	b	1d544 <argp_parse@@Base+0x1c44>
   1d634:	add	r1, sp, #40	; 0x28
   1d638:	ldr	r4, [sp, #52]	; 0x34
   1d63c:	ldm	r1, {r1, ip, lr}
   1d640:	mov	r0, r5
   1d644:	ldr	r3, [sp, #36]	; 0x24
   1d648:	ldr	r2, [sp, #32]
   1d64c:	stm	sp, {r1, ip, lr}
   1d650:	str	r4, [sp, #12]
   1d654:	ldr	r1, [pc, #260]	; 1d760 <argp_parse@@Base+0x1e60>
   1d658:	bl	1193c <fprintf@plt>
   1d65c:	b	1d544 <argp_parse@@Base+0x1c44>
   1d660:	add	r1, sp, #40	; 0x28
   1d664:	ldr	r6, [sp, #56]	; 0x38
   1d668:	ldm	r1, {r1, ip, lr}
   1d66c:	mov	r0, r5
   1d670:	ldr	r4, [sp, #52]	; 0x34
   1d674:	ldr	r3, [sp, #36]	; 0x24
   1d678:	stm	sp, {r1, ip, lr}
   1d67c:	ldr	r2, [sp, #32]
   1d680:	str	r6, [sp, #16]
   1d684:	str	r4, [sp, #12]
   1d688:	ldr	r1, [pc, #212]	; 1d764 <argp_parse@@Base+0x1e64>
   1d68c:	bl	1193c <fprintf@plt>
   1d690:	b	1d544 <argp_parse@@Base+0x1c44>
   1d694:	ldr	r1, [sp, #60]	; 0x3c
   1d698:	ldr	lr, [sp, #48]	; 0x30
   1d69c:	ldr	ip, [sp, #44]	; 0x2c
   1d6a0:	str	r1, [sp, #20]
   1d6a4:	ldr	r1, [sp, #40]	; 0x28
   1d6a8:	ldr	r6, [sp, #56]	; 0x38
   1d6ac:	ldr	r4, [sp, #52]	; 0x34
   1d6b0:	stm	sp, {r1, ip, lr}
   1d6b4:	mov	r0, r5
   1d6b8:	ldr	r3, [sp, #36]	; 0x24
   1d6bc:	ldr	r2, [sp, #32]
   1d6c0:	str	r6, [sp, #16]
   1d6c4:	str	r4, [sp, #12]
   1d6c8:	ldr	r1, [pc, #152]	; 1d768 <argp_parse@@Base+0x1e68>
   1d6cc:	bl	1193c <fprintf@plt>
   1d6d0:	b	1d544 <argp_parse@@Base+0x1c44>
   1d6d4:	ldr	r1, [pc, #144]	; 1d76c <argp_parse@@Base+0x1e6c>
   1d6d8:	mov	r0, r5
   1d6dc:	bl	1193c <fprintf@plt>
   1d6e0:	b	1d490 <argp_parse@@Base+0x1b90>
   1d6e4:	mov	r4, r0
   1d6e8:	b	1d470 <argp_parse@@Base+0x1b70>
   1d6ec:	mov	r4, #1
   1d6f0:	b	1d470 <argp_parse@@Base+0x1b70>
   1d6f4:	mov	r4, #2
   1d6f8:	b	1d470 <argp_parse@@Base+0x1b70>
   1d6fc:	mov	r4, #3
   1d700:	b	1d470 <argp_parse@@Base+0x1b70>
   1d704:	mov	r4, #4
   1d708:	b	1d470 <argp_parse@@Base+0x1b70>
   1d70c:	mov	r4, #5
   1d710:	b	1d470 <argp_parse@@Base+0x1b70>
   1d714:	mov	r4, #6
   1d718:	b	1d470 <argp_parse@@Base+0x1b70>
   1d71c:	mov	r4, #7
   1d720:	b	1d470 <argp_parse@@Base+0x1b70>
   1d724:	mov	r4, #8
   1d728:	b	1d470 <argp_parse@@Base+0x1b70>
   1d72c:	andeq	r1, r2, r0, lsl #31
   1d730:	andeq	r0, r0, r6, ror #15
   1d734:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1d738:	muleq	r2, r4, r2
   1d73c:			; <UNDEFINED> instruction: 0x00021fbc
   1d740:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1d744:	andeq	r2, r2, r8, lsr #3
   1d748:	andeq	r2, r2, r4, ror r1
   1d74c:	andeq	r2, r2, r8, rrx
   1d750:	andeq	r2, r2, r8, ror r0
   1d754:	muleq	r2, r0, r0
   1d758:	andeq	r2, r2, ip, lsr #1
   1d75c:	andeq	r2, r2, ip, asr #1
   1d760:	strdeq	r2, [r2], -r0
   1d764:	andeq	r2, r2, r8, lsl r1
   1d768:	andeq	r2, r2, r4, asr #2
   1d76c:	andeq	r1, r2, ip, lsl #31
   1d770:	push	{r3}		; (str r3, [sp, #-4]!)
   1d774:	push	{r4, r5, r6, lr}
   1d778:	sub	sp, sp, #84	; 0x54
   1d77c:	add	ip, sp, #104	; 0x68
   1d780:	ldr	lr, [sp, #104]	; 0x68
   1d784:	mov	r5, r0
   1d788:	cmp	lr, #0
   1d78c:	str	lr, [sp, #40]	; 0x28
   1d790:	str	ip, [sp, #36]	; 0x24
   1d794:	beq	1da9c <argp_parse@@Base+0x219c>
   1d798:	ldr	r0, [sp, #108]	; 0x6c
   1d79c:	cmp	r0, #0
   1d7a0:	str	r0, [sp, #44]	; 0x2c
   1d7a4:	beq	1daa4 <argp_parse@@Base+0x21a4>
   1d7a8:	ldr	r0, [sp, #112]	; 0x70
   1d7ac:	cmp	r0, #0
   1d7b0:	str	r0, [sp, #48]	; 0x30
   1d7b4:	beq	1daac <argp_parse@@Base+0x21ac>
   1d7b8:	ldr	r0, [sp, #116]	; 0x74
   1d7bc:	cmp	r0, #0
   1d7c0:	str	r0, [sp, #52]	; 0x34
   1d7c4:	beq	1dab4 <argp_parse@@Base+0x21b4>
   1d7c8:	ldr	r0, [sp, #120]	; 0x78
   1d7cc:	cmp	r0, #0
   1d7d0:	str	r0, [sp, #56]	; 0x38
   1d7d4:	beq	1dabc <argp_parse@@Base+0x21bc>
   1d7d8:	ldr	r0, [sp, #124]	; 0x7c
   1d7dc:	cmp	r0, #0
   1d7e0:	str	r0, [sp, #60]	; 0x3c
   1d7e4:	beq	1dac4 <argp_parse@@Base+0x21c4>
   1d7e8:	ldr	r0, [sp, #128]	; 0x80
   1d7ec:	cmp	r0, #0
   1d7f0:	str	r0, [sp, #64]	; 0x40
   1d7f4:	beq	1dacc <argp_parse@@Base+0x21cc>
   1d7f8:	ldr	r0, [sp, #132]	; 0x84
   1d7fc:	cmp	r0, #0
   1d800:	str	r0, [sp, #68]	; 0x44
   1d804:	beq	1dad4 <argp_parse@@Base+0x21d4>
   1d808:	ldr	r3, [sp, #136]	; 0x88
   1d80c:	cmp	r3, #0
   1d810:	str	r3, [sp, #72]	; 0x48
   1d814:	beq	1dadc <argp_parse@@Base+0x21dc>
   1d818:	ldr	lr, [sp, #140]	; 0x8c
   1d81c:	cmp	lr, #0
   1d820:	movne	r4, #10
   1d824:	moveq	r4, #9
   1d828:	cmp	r1, #0
   1d82c:	ldr	r3, [sp, #100]	; 0x64
   1d830:	beq	1da8c <argp_parse@@Base+0x218c>
   1d834:	str	r3, [sp]
   1d838:	mov	r0, r5
   1d83c:	mov	r3, r2
   1d840:	mov	r2, r1
   1d844:	ldr	r1, [pc, #664]	; 1dae4 <argp_parse@@Base+0x21e4>
   1d848:	bl	1193c <fprintf@plt>
   1d84c:	ldr	r3, [pc, #660]	; 1dae8 <argp_parse@@Base+0x21e8>
   1d850:	ldr	r2, [pc, #660]	; 1daec <argp_parse@@Base+0x21ec>
   1d854:	ldr	r1, [pc, #660]	; 1daf0 <argp_parse@@Base+0x21f0>
   1d858:	mov	r0, r5
   1d85c:	bl	1193c <fprintf@plt>
   1d860:	mov	r1, r5
   1d864:	mov	r0, #10
   1d868:	bl	11a38 <fputc@plt>
   1d86c:	ldr	r1, [pc, #640]	; 1daf4 <argp_parse@@Base+0x21f4>
   1d870:	ldr	r2, [pc, #640]	; 1daf8 <argp_parse@@Base+0x21f8>
   1d874:	mov	r0, r5
   1d878:	bl	1193c <fprintf@plt>
   1d87c:	mov	r1, r5
   1d880:	mov	r0, #10
   1d884:	bl	11a38 <fputc@plt>
   1d888:	cmp	r4, #9
   1d88c:	ldrls	pc, [pc, r4, lsl #2]
   1d890:	b	1d8bc <argp_parse@@Base+0x1fbc>
   1d894:	andeq	sp, r1, r0, lsl #18
   1d898:	andeq	sp, r1, r8, asr r9
   1d89c:	andeq	sp, r1, ip, ror #18
   1d8a0:	andeq	sp, r1, r4, lsl #19
   1d8a4:	andeq	sp, r1, r4, lsr #19
   1d8a8:	andeq	sp, r1, r8, asr #19
   1d8ac:	andeq	sp, r1, ip, ror #19
   1d8b0:	andeq	sp, r1, r8, lsl sl
   1d8b4:	andeq	sp, r1, ip, asr #20
   1d8b8:	andeq	sp, r1, r0, lsl r9
   1d8bc:	ldr	ip, [sp, #72]	; 0x48
   1d8c0:	ldr	r1, [sp, #68]	; 0x44
   1d8c4:	ldr	lr, [sp, #56]	; 0x38
   1d8c8:	str	ip, [sp, #24]
   1d8cc:	str	r1, [sp, #20]
   1d8d0:	ldr	ip, [sp, #52]	; 0x34
   1d8d4:	ldr	r1, [sp, #48]	; 0x30
   1d8d8:	ldr	r6, [sp, #64]	; 0x40
   1d8dc:	ldr	r4, [sp, #60]	; 0x3c
   1d8e0:	stm	sp, {r1, ip, lr}
   1d8e4:	mov	r0, r5
   1d8e8:	ldr	r3, [sp, #44]	; 0x2c
   1d8ec:	ldr	r2, [sp, #40]	; 0x28
   1d8f0:	str	r6, [sp, #16]
   1d8f4:	str	r4, [sp, #12]
   1d8f8:	ldr	r1, [pc, #508]	; 1dafc <argp_parse@@Base+0x21fc>
   1d8fc:	bl	1193c <fprintf@plt>
   1d900:	add	sp, sp, #84	; 0x54
   1d904:	pop	{r4, r5, r6, lr}
   1d908:	add	sp, sp, #4
   1d90c:	bx	lr
   1d910:	ldr	ip, [sp, #72]	; 0x48
   1d914:	ldr	r1, [sp, #68]	; 0x44
   1d918:	ldr	lr, [sp, #56]	; 0x38
   1d91c:	str	ip, [sp, #24]
   1d920:	str	r1, [sp, #20]
   1d924:	ldr	ip, [sp, #52]	; 0x34
   1d928:	ldr	r1, [sp, #48]	; 0x30
   1d92c:	ldr	r6, [sp, #64]	; 0x40
   1d930:	ldr	r4, [sp, #60]	; 0x3c
   1d934:	stm	sp, {r1, ip, lr}
   1d938:	mov	r0, r5
   1d93c:	ldr	r3, [sp, #44]	; 0x2c
   1d940:	ldr	r2, [sp, #40]	; 0x28
   1d944:	str	r6, [sp, #16]
   1d948:	str	r4, [sp, #12]
   1d94c:	ldr	r1, [pc, #428]	; 1db00 <argp_parse@@Base+0x2200>
   1d950:	bl	1193c <fprintf@plt>
   1d954:	b	1d900 <argp_parse@@Base+0x2000>
   1d958:	mov	r0, r5
   1d95c:	ldr	r2, [sp, #40]	; 0x28
   1d960:	ldr	r1, [pc, #412]	; 1db04 <argp_parse@@Base+0x2204>
   1d964:	bl	1193c <fprintf@plt>
   1d968:	b	1d900 <argp_parse@@Base+0x2000>
   1d96c:	mov	r0, r5
   1d970:	ldr	r3, [sp, #44]	; 0x2c
   1d974:	ldr	r2, [sp, #40]	; 0x28
   1d978:	ldr	r1, [pc, #392]	; 1db08 <argp_parse@@Base+0x2208>
   1d97c:	bl	1193c <fprintf@plt>
   1d980:	b	1d900 <argp_parse@@Base+0x2000>
   1d984:	ldr	r1, [sp, #48]	; 0x30
   1d988:	ldr	r3, [sp, #44]	; 0x2c
   1d98c:	str	r1, [sp]
   1d990:	ldr	r2, [sp, #40]	; 0x28
   1d994:	mov	r0, r5
   1d998:	ldr	r1, [pc, #364]	; 1db0c <argp_parse@@Base+0x220c>
   1d99c:	bl	1193c <fprintf@plt>
   1d9a0:	b	1d900 <argp_parse@@Base+0x2000>
   1d9a4:	ldr	r1, [sp, #48]	; 0x30
   1d9a8:	ldr	ip, [sp, #52]	; 0x34
   1d9ac:	ldr	r3, [sp, #44]	; 0x2c
   1d9b0:	ldr	r2, [sp, #40]	; 0x28
   1d9b4:	stm	sp, {r1, ip}
   1d9b8:	mov	r0, r5
   1d9bc:	ldr	r1, [pc, #332]	; 1db10 <argp_parse@@Base+0x2210>
   1d9c0:	bl	1193c <fprintf@plt>
   1d9c4:	b	1d900 <argp_parse@@Base+0x2000>
   1d9c8:	add	r1, sp, #48	; 0x30
   1d9cc:	ldr	r3, [sp, #44]	; 0x2c
   1d9d0:	ldm	r1, {r1, ip, lr}
   1d9d4:	mov	r0, r5
   1d9d8:	ldr	r2, [sp, #40]	; 0x28
   1d9dc:	stm	sp, {r1, ip, lr}
   1d9e0:	ldr	r1, [pc, #300]	; 1db14 <argp_parse@@Base+0x2214>
   1d9e4:	bl	1193c <fprintf@plt>
   1d9e8:	b	1d900 <argp_parse@@Base+0x2000>
   1d9ec:	add	r1, sp, #48	; 0x30
   1d9f0:	ldr	r4, [sp, #60]	; 0x3c
   1d9f4:	ldm	r1, {r1, ip, lr}
   1d9f8:	mov	r0, r5
   1d9fc:	ldr	r3, [sp, #44]	; 0x2c
   1da00:	ldr	r2, [sp, #40]	; 0x28
   1da04:	stm	sp, {r1, ip, lr}
   1da08:	str	r4, [sp, #12]
   1da0c:	ldr	r1, [pc, #260]	; 1db18 <argp_parse@@Base+0x2218>
   1da10:	bl	1193c <fprintf@plt>
   1da14:	b	1d900 <argp_parse@@Base+0x2000>
   1da18:	add	r1, sp, #48	; 0x30
   1da1c:	ldr	r6, [sp, #64]	; 0x40
   1da20:	ldm	r1, {r1, ip, lr}
   1da24:	mov	r0, r5
   1da28:	ldr	r4, [sp, #60]	; 0x3c
   1da2c:	ldr	r3, [sp, #44]	; 0x2c
   1da30:	stm	sp, {r1, ip, lr}
   1da34:	ldr	r2, [sp, #40]	; 0x28
   1da38:	str	r6, [sp, #16]
   1da3c:	str	r4, [sp, #12]
   1da40:	ldr	r1, [pc, #212]	; 1db1c <argp_parse@@Base+0x221c>
   1da44:	bl	1193c <fprintf@plt>
   1da48:	b	1d900 <argp_parse@@Base+0x2000>
   1da4c:	ldr	r1, [sp, #68]	; 0x44
   1da50:	ldr	lr, [sp, #56]	; 0x38
   1da54:	ldr	ip, [sp, #52]	; 0x34
   1da58:	str	r1, [sp, #20]
   1da5c:	ldr	r1, [sp, #48]	; 0x30
   1da60:	ldr	r6, [sp, #64]	; 0x40
   1da64:	ldr	r4, [sp, #60]	; 0x3c
   1da68:	stm	sp, {r1, ip, lr}
   1da6c:	mov	r0, r5
   1da70:	ldr	r3, [sp, #44]	; 0x2c
   1da74:	ldr	r2, [sp, #40]	; 0x28
   1da78:	str	r6, [sp, #16]
   1da7c:	str	r4, [sp, #12]
   1da80:	ldr	r1, [pc, #152]	; 1db20 <argp_parse@@Base+0x2220>
   1da84:	bl	1193c <fprintf@plt>
   1da88:	b	1d900 <argp_parse@@Base+0x2000>
   1da8c:	ldr	r1, [pc, #144]	; 1db24 <argp_parse@@Base+0x2224>
   1da90:	mov	r0, r5
   1da94:	bl	1193c <fprintf@plt>
   1da98:	b	1d84c <argp_parse@@Base+0x1f4c>
   1da9c:	mov	r4, lr
   1daa0:	b	1d828 <argp_parse@@Base+0x1f28>
   1daa4:	mov	r4, #1
   1daa8:	b	1d828 <argp_parse@@Base+0x1f28>
   1daac:	mov	r4, #2
   1dab0:	b	1d828 <argp_parse@@Base+0x1f28>
   1dab4:	mov	r4, #3
   1dab8:	b	1d828 <argp_parse@@Base+0x1f28>
   1dabc:	mov	r4, #4
   1dac0:	b	1d828 <argp_parse@@Base+0x1f28>
   1dac4:	mov	r4, #5
   1dac8:	b	1d828 <argp_parse@@Base+0x1f28>
   1dacc:	mov	r4, #6
   1dad0:	b	1d828 <argp_parse@@Base+0x1f28>
   1dad4:	mov	r4, #7
   1dad8:	b	1d828 <argp_parse@@Base+0x1f28>
   1dadc:	mov	r4, #8
   1dae0:	b	1d828 <argp_parse@@Base+0x1f28>
   1dae4:	andeq	r1, r2, r0, lsl #31
   1dae8:	andeq	r0, r0, r6, ror #15
   1daec:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   1daf0:	muleq	r2, r4, r2
   1daf4:			; <UNDEFINED> instruction: 0x00021fbc
   1daf8:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1dafc:	andeq	r2, r2, r8, lsr #3
   1db00:	andeq	r2, r2, r4, ror r1
   1db04:	andeq	r2, r2, r8, rrx
   1db08:	andeq	r2, r2, r8, ror r0
   1db0c:	muleq	r2, r0, r0
   1db10:	andeq	r2, r2, ip, lsr #1
   1db14:	andeq	r2, r2, ip, asr #1
   1db18:	strdeq	r2, [r2], -r0
   1db1c:	andeq	r2, r2, r8, lsl r1
   1db20:	andeq	r2, r2, r4, asr #2
   1db24:	andeq	r1, r2, ip, lsl #31
   1db28:	ldr	r3, [pc, #56]	; 1db68 <argp_parse@@Base+0x2268>
   1db2c:	push	{r4, lr}
   1db30:	mov	r0, #10
   1db34:	ldr	r1, [r3]
   1db38:	bl	11a38 <fputc@plt>
   1db3c:	ldr	r1, [pc, #40]	; 1db6c <argp_parse@@Base+0x226c>
   1db40:	ldr	r0, [pc, #40]	; 1db70 <argp_parse@@Base+0x2270>
   1db44:	bl	116b4 <printf@plt>
   1db48:	ldr	r1, [pc, #36]	; 1db74 <argp_parse@@Base+0x2274>
   1db4c:	ldr	r2, [pc, #36]	; 1db78 <argp_parse@@Base+0x2278>
   1db50:	ldr	r0, [pc, #36]	; 1db7c <argp_parse@@Base+0x227c>
   1db54:	bl	116b4 <printf@plt>
   1db58:	ldr	r1, [pc, #32]	; 1db80 <argp_parse@@Base+0x2280>
   1db5c:	ldr	r0, [pc, #32]	; 1db84 <argp_parse@@Base+0x2284>
   1db60:	pop	{r4, lr}
   1db64:	b	116b4 <printf@plt>
   1db68:	andeq	r3, r3, ip, asr #11
   1db6c:	andeq	r2, r2, r4, ror #3
   1db70:	strdeq	r2, [r2], -ip
   1db74:	andeq	r1, r2, ip, lsr #30
   1db78:	andeq	r2, r2, r0, lsl r2
   1db7c:	andeq	r2, r2, r8, lsr r2
   1db80:	andeq	r2, r2, ip, asr #4
   1db84:	andeq	r2, r2, ip, ror #4
   1db88:	push	{r4, r5, r6, lr}
   1db8c:	mov	r6, r0
   1db90:	mov	r5, r1
   1db94:	mov	r4, r2
   1db98:	bl	20358 <argp_parse@@Base+0x4a58>
   1db9c:	cmp	r0, #0
   1dba0:	popne	{r4, r5, r6, pc}
   1dba4:	cmp	r6, #0
   1dba8:	beq	1dbb8 <argp_parse@@Base+0x22b8>
   1dbac:	cmp	r5, #0
   1dbb0:	cmpne	r4, #0
   1dbb4:	popeq	{r4, r5, r6, pc}
   1dbb8:	bl	1e204 <argp_parse@@Base+0x2904>
   1dbbc:	push	{r4, lr}
   1dbc0:	bl	1e278 <argp_parse@@Base+0x2978>
   1dbc4:	cmp	r0, #0
   1dbc8:	popne	{r4, pc}
   1dbcc:	bl	1e204 <argp_parse@@Base+0x2904>
   1dbd0:	push	{r4, lr}
   1dbd4:	bl	1e278 <argp_parse@@Base+0x2978>
   1dbd8:	cmp	r0, #0
   1dbdc:	popne	{r4, pc}
   1dbe0:	bl	1e204 <argp_parse@@Base+0x2904>
   1dbe4:	push	{r4, lr}
   1dbe8:	bl	1e278 <argp_parse@@Base+0x2978>
   1dbec:	cmp	r0, #0
   1dbf0:	popne	{r4, pc}
   1dbf4:	bl	1e204 <argp_parse@@Base+0x2904>
   1dbf8:	push	{r4, r5, r6, lr}
   1dbfc:	mov	r5, r0
   1dc00:	mov	r4, r1
   1dc04:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   1dc08:	cmp	r0, #0
   1dc0c:	popne	{r4, r5, r6, pc}
   1dc10:	adds	r4, r4, #0
   1dc14:	movne	r4, #1
   1dc18:	cmp	r5, #0
   1dc1c:	orreq	r4, r4, #1
   1dc20:	cmp	r4, #0
   1dc24:	popeq	{r4, r5, r6, pc}
   1dc28:	bl	1e204 <argp_parse@@Base+0x2904>
   1dc2c:	push	{r4, lr}
   1dc30:	cmp	r1, #0
   1dc34:	orreq	r1, r1, #1
   1dc38:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   1dc3c:	cmp	r0, #0
   1dc40:	popne	{r4, pc}
   1dc44:	bl	1e204 <argp_parse@@Base+0x2904>
   1dc48:	push	{r4, r5, r6, lr}
   1dc4c:	mov	r6, r0
   1dc50:	mov	r5, r1
   1dc54:	mov	r4, r2
   1dc58:	bl	20358 <argp_parse@@Base+0x4a58>
   1dc5c:	cmp	r0, #0
   1dc60:	popne	{r4, r5, r6, pc}
   1dc64:	cmp	r6, #0
   1dc68:	beq	1dc78 <argp_parse@@Base+0x2378>
   1dc6c:	cmp	r5, #0
   1dc70:	cmpne	r4, #0
   1dc74:	popeq	{r4, r5, r6, pc}
   1dc78:	bl	1e204 <argp_parse@@Base+0x2904>
   1dc7c:	cmp	r2, #0
   1dc80:	cmpne	r1, #0
   1dc84:	moveq	r2, #1
   1dc88:	moveq	r1, r2
   1dc8c:	push	{r4, lr}
   1dc90:	bl	20358 <argp_parse@@Base+0x4a58>
   1dc94:	cmp	r0, #0
   1dc98:	popne	{r4, pc}
   1dc9c:	bl	1e204 <argp_parse@@Base+0x2904>
   1dca0:	push	{r4, lr}
   1dca4:	mov	r2, r1
   1dca8:	mov	r1, r0
   1dcac:	mov	r0, #0
   1dcb0:	bl	20358 <argp_parse@@Base+0x4a58>
   1dcb4:	cmp	r0, #0
   1dcb8:	popne	{r4, pc}
   1dcbc:	bl	1e204 <argp_parse@@Base+0x2904>
   1dcc0:	cmp	r1, #0
   1dcc4:	cmpne	r0, #0
   1dcc8:	moveq	r2, #1
   1dccc:	movne	r2, r1
   1dcd0:	moveq	r1, r2
   1dcd4:	movne	r1, r0
   1dcd8:	push	{r4, lr}
   1dcdc:	mov	r0, #0
   1dce0:	bl	20358 <argp_parse@@Base+0x4a58>
   1dce4:	cmp	r0, #0
   1dce8:	popne	{r4, pc}
   1dcec:	bl	1e204 <argp_parse@@Base+0x2904>
   1dcf0:	cmp	r0, #0
   1dcf4:	push	{r4, r5, r6, lr}
   1dcf8:	mov	r5, r1
   1dcfc:	ldr	r4, [r1]
   1dd00:	beq	1dd3c <argp_parse@@Base+0x243c>
   1dd04:	lsr	r2, r4, #1
   1dd08:	add	r3, r2, #1
   1dd0c:	mvn	r3, r3
   1dd10:	cmp	r4, r3
   1dd14:	bhi	1dd58 <argp_parse@@Base+0x2458>
   1dd18:	add	r4, r4, #1
   1dd1c:	add	r4, r4, r2
   1dd20:	mov	r1, r4
   1dd24:	mov	r2, #1
   1dd28:	bl	20358 <argp_parse@@Base+0x4a58>
   1dd2c:	cmp	r0, #0
   1dd30:	beq	1dd5c <argp_parse@@Base+0x245c>
   1dd34:	str	r4, [r5]
   1dd38:	pop	{r4, r5, r6, pc}
   1dd3c:	cmp	r4, #0
   1dd40:	moveq	r4, #64	; 0x40
   1dd44:	mov	r1, r4
   1dd48:	mov	r2, #1
   1dd4c:	bl	20358 <argp_parse@@Base+0x4a58>
   1dd50:	cmp	r0, #0
   1dd54:	bne	1dd34 <argp_parse@@Base+0x2434>
   1dd58:	bl	1e204 <argp_parse@@Base+0x2904>
   1dd5c:	cmp	r4, #0
   1dd60:	bne	1dd58 <argp_parse@@Base+0x2458>
   1dd64:	str	r4, [r5]
   1dd68:	pop	{r4, r5, r6, pc}
   1dd6c:	cmp	r0, #0
   1dd70:	push	{r4, r5, r6, lr}
   1dd74:	mov	r5, r1
   1dd78:	ldr	r4, [r1]
   1dd7c:	mov	r6, r2
   1dd80:	beq	1ddc4 <argp_parse@@Base+0x24c4>
   1dd84:	lsr	r1, r4, #1
   1dd88:	add	r3, r1, #1
   1dd8c:	mvn	r3, r3
   1dd90:	cmp	r4, r3
   1dd94:	bhi	1ddfc <argp_parse@@Base+0x24fc>
   1dd98:	add	r4, r4, #1
   1dd9c:	add	r4, r4, r1
   1dda0:	mov	r1, r4
   1dda4:	bl	20358 <argp_parse@@Base+0x4a58>
   1dda8:	cmp	r0, #0
   1ddac:	bne	1ddbc <argp_parse@@Base+0x24bc>
   1ddb0:	cmp	r4, #0
   1ddb4:	cmpne	r6, #0
   1ddb8:	bne	1ddfc <argp_parse@@Base+0x24fc>
   1ddbc:	str	r4, [r5]
   1ddc0:	pop	{r4, r5, r6, pc}
   1ddc4:	cmp	r4, #0
   1ddc8:	bne	1dde4 <argp_parse@@Base+0x24e4>
   1ddcc:	mov	r1, r2
   1ddd0:	mov	r0, #64	; 0x40
   1ddd4:	bl	203a4 <argp_parse@@Base+0x4aa4>
   1ddd8:	cmp	r0, #0
   1dddc:	movne	r4, r0
   1dde0:	addeq	r4, r0, #1
   1dde4:	mov	r2, r6
   1dde8:	mov	r1, r4
   1ddec:	mov	r0, #0
   1ddf0:	bl	20358 <argp_parse@@Base+0x4a58>
   1ddf4:	cmp	r0, #0
   1ddf8:	bne	1ddbc <argp_parse@@Base+0x24bc>
   1ddfc:	bl	1e204 <argp_parse@@Base+0x2904>
   1de00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de04:	sub	sp, sp, #12
   1de08:	ldr	r6, [r1]
   1de0c:	mov	r8, r1
   1de10:	mov	r9, r0
   1de14:	asrs	r4, r6, #1
   1de18:	mov	sl, r2
   1de1c:	mov	fp, r3
   1de20:	ldr	r7, [sp, #48]	; 0x30
   1de24:	bmi	1dfa0 <argp_parse@@Base+0x26a0>
   1de28:	mvn	r1, #-2147483648	; 0x80000000
   1de2c:	sub	r1, r1, r4
   1de30:	cmp	r6, r1
   1de34:	movle	r1, #0
   1de38:	movgt	r1, #1
   1de3c:	mvn	r3, fp
   1de40:	cmp	r1, #0
   1de44:	addeq	r4, r4, r6
   1de48:	mvnne	r4, #-2147483648	; 0x80000000
   1de4c:	lsr	r3, r3, #31
   1de50:	cmp	fp, r4
   1de54:	movge	r2, #0
   1de58:	andlt	r2, r3, #1
   1de5c:	cmp	r2, #0
   1de60:	beq	1df50 <argp_parse@@Base+0x2650>
   1de64:	cmp	r7, #0
   1de68:	blt	1e038 <argp_parse@@Base+0x2738>
   1de6c:	bne	1e030 <argp_parse@@Base+0x2730>
   1de70:	mov	r5, #64	; 0x40
   1de74:	mov	r1, r7
   1de78:	mov	r0, r5
   1de7c:	str	r3, [sp, #4]
   1de80:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1de84:	mov	r1, r7
   1de88:	mov	r4, r0
   1de8c:	mov	r0, r5
   1de90:	bl	207d0 <argp_parse@@Base+0x4ed0>
   1de94:	ldr	r3, [sp, #4]
   1de98:	sub	r5, r5, r1
   1de9c:	cmp	r9, #0
   1dea0:	sub	r2, r4, r6
   1dea4:	streq	r9, [r8]
   1dea8:	cmp	r2, sl
   1deac:	bge	1df30 <argp_parse@@Base+0x2630>
   1deb0:	cmp	sl, #0
   1deb4:	blt	1dfd0 <argp_parse@@Base+0x26d0>
   1deb8:	cmp	r6, #0
   1debc:	blt	1dedc <argp_parse@@Base+0x25dc>
   1dec0:	mvn	r2, #-2147483648	; 0x80000000
   1dec4:	sub	r2, r2, sl
   1dec8:	cmp	r6, r2
   1decc:	movle	r2, #0
   1ded0:	movgt	r2, #1
   1ded4:	cmp	r2, #0
   1ded8:	bne	1dfcc <argp_parse@@Base+0x26cc>
   1dedc:	add	r6, r6, sl
   1dee0:	cmp	fp, r6
   1dee4:	movge	r3, #0
   1dee8:	andlt	r3, r3, #1
   1deec:	cmp	r3, #0
   1def0:	mov	r4, r6
   1def4:	bne	1dfcc <argp_parse@@Base+0x26cc>
   1def8:	cmp	r7, #0
   1defc:	blt	1dfe4 <argp_parse@@Base+0x26e4>
   1df00:	beq	1df2c <argp_parse@@Base+0x262c>
   1df04:	cmp	r6, #0
   1df08:	blt	1e088 <argp_parse@@Base+0x2788>
   1df0c:	mov	r1, r7
   1df10:	mvn	r0, #-2147483648	; 0x80000000
   1df14:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1df18:	cmp	r6, r0
   1df1c:	movle	r0, #0
   1df20:	movgt	r0, #1
   1df24:	cmp	r0, #0
   1df28:	bne	1dfcc <argp_parse@@Base+0x26cc>
   1df2c:	mul	r5, r6, r7
   1df30:	mov	r1, r5
   1df34:	mov	r0, r9
   1df38:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   1df3c:	cmp	r0, #0
   1df40:	beq	1dfb4 <argp_parse@@Base+0x26b4>
   1df44:	str	r4, [r8]
   1df48:	add	sp, sp, #12
   1df4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df50:	cmp	r7, #0
   1df54:	blt	1e010 <argp_parse@@Base+0x2710>
   1df58:	beq	1de70 <argp_parse@@Base+0x2570>
   1df5c:	cmp	r4, #0
   1df60:	blt	1e040 <argp_parse@@Base+0x2740>
   1df64:	mov	r1, r7
   1df68:	mvn	r0, #-2147483648	; 0x80000000
   1df6c:	str	r3, [sp, #4]
   1df70:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1df74:	ldr	r3, [sp, #4]
   1df78:	cmp	r0, r4
   1df7c:	movge	r0, #0
   1df80:	movlt	r0, #1
   1df84:	cmp	r0, #0
   1df88:	mvnne	r5, #-2147483648	; 0x80000000
   1df8c:	bne	1de74 <argp_parse@@Base+0x2574>
   1df90:	mul	r5, r7, r4
   1df94:	cmp	r5, #63	; 0x3f
   1df98:	bgt	1de9c <argp_parse@@Base+0x259c>
   1df9c:	b	1de70 <argp_parse@@Base+0x2570>
   1dfa0:	rsb	r1, r4, #-2147483648	; 0x80000000
   1dfa4:	cmp	r6, r1
   1dfa8:	movge	r1, #0
   1dfac:	movlt	r1, #1
   1dfb0:	b	1de3c <argp_parse@@Base+0x253c>
   1dfb4:	adds	r5, r5, #0
   1dfb8:	movne	r5, #1
   1dfbc:	cmp	r9, #0
   1dfc0:	orreq	r5, r5, #1
   1dfc4:	cmp	r5, #0
   1dfc8:	beq	1df44 <argp_parse@@Base+0x2644>
   1dfcc:	bl	1e204 <argp_parse@@Base+0x2904>
   1dfd0:	rsb	r2, sl, #-2147483648	; 0x80000000
   1dfd4:	cmp	r6, r2
   1dfd8:	movge	r2, #0
   1dfdc:	movlt	r2, #1
   1dfe0:	b	1ded4 <argp_parse@@Base+0x25d4>
   1dfe4:	cmp	r6, #0
   1dfe8:	blt	1e06c <argp_parse@@Base+0x276c>
   1dfec:	cmn	r7, #1
   1dff0:	beq	1df2c <argp_parse@@Base+0x262c>
   1dff4:	mov	r1, r7
   1dff8:	mov	r0, #-2147483648	; 0x80000000
   1dffc:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1e000:	cmp	r6, r0
   1e004:	movle	r0, #0
   1e008:	movgt	r0, #1
   1e00c:	b	1df24 <argp_parse@@Base+0x2624>
   1e010:	cmp	r4, #0
   1e014:	blt	1e0ac <argp_parse@@Base+0x27ac>
   1e018:	cmn	r7, #1
   1e01c:	beq	1df90 <argp_parse@@Base+0x2690>
   1e020:	str	r3, [sp, #4]
   1e024:	mov	r1, r7
   1e028:	mov	r0, #-2147483648	; 0x80000000
   1e02c:	b	1df70 <argp_parse@@Base+0x2670>
   1e030:	mov	r4, fp
   1e034:	b	1df64 <argp_parse@@Base+0x2664>
   1e038:	mov	r4, fp
   1e03c:	b	1e018 <argp_parse@@Base+0x2718>
   1e040:	cmn	r4, #1
   1e044:	beq	1df90 <argp_parse@@Base+0x2690>
   1e048:	mov	r1, r4
   1e04c:	mov	r0, #-2147483648	; 0x80000000
   1e050:	str	r3, [sp, #4]
   1e054:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1e058:	ldr	r3, [sp, #4]
   1e05c:	cmp	r7, r0
   1e060:	movle	r0, #0
   1e064:	movgt	r0, #1
   1e068:	b	1df84 <argp_parse@@Base+0x2684>
   1e06c:	mov	r1, r7
   1e070:	mvn	r0, #-2147483648	; 0x80000000
   1e074:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1e078:	cmp	r6, r0
   1e07c:	movge	r0, #0
   1e080:	movlt	r0, #1
   1e084:	b	1df24 <argp_parse@@Base+0x2624>
   1e088:	cmn	r6, #1
   1e08c:	beq	1df2c <argp_parse@@Base+0x262c>
   1e090:	mov	r1, r6
   1e094:	mov	r0, #-2147483648	; 0x80000000
   1e098:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1e09c:	cmp	r7, r0
   1e0a0:	movle	r0, #0
   1e0a4:	movgt	r0, #1
   1e0a8:	b	1df24 <argp_parse@@Base+0x2624>
   1e0ac:	mov	r1, r7
   1e0b0:	mvn	r0, #-2147483648	; 0x80000000
   1e0b4:	str	r3, [sp, #4]
   1e0b8:	bl	205b0 <argp_parse@@Base+0x4cb0>
   1e0bc:	ldr	r3, [sp, #4]
   1e0c0:	cmp	r0, r4
   1e0c4:	movle	r0, #0
   1e0c8:	movgt	r0, #1
   1e0cc:	b	1df84 <argp_parse@@Base+0x2684>
   1e0d0:	push	{r4, lr}
   1e0d4:	mov	r1, #1
   1e0d8:	bl	1e230 <argp_parse@@Base+0x2930>
   1e0dc:	cmp	r0, #0
   1e0e0:	popne	{r4, pc}
   1e0e4:	bl	1e204 <argp_parse@@Base+0x2904>
   1e0e8:	push	{r4, lr}
   1e0ec:	mov	r1, #1
   1e0f0:	bl	1e230 <argp_parse@@Base+0x2930>
   1e0f4:	cmp	r0, #0
   1e0f8:	popne	{r4, pc}
   1e0fc:	bl	1e204 <argp_parse@@Base+0x2904>
   1e100:	push	{r4, lr}
   1e104:	bl	1e230 <argp_parse@@Base+0x2930>
   1e108:	cmp	r0, #0
   1e10c:	popne	{r4, pc}
   1e110:	bl	1e204 <argp_parse@@Base+0x2904>
   1e114:	push	{r4, lr}
   1e118:	bl	1e230 <argp_parse@@Base+0x2930>
   1e11c:	cmp	r0, #0
   1e120:	popne	{r4, pc}
   1e124:	bl	1e204 <argp_parse@@Base+0x2904>
   1e128:	push	{r4, r5, r6, lr}
   1e12c:	mov	r6, r0
   1e130:	mov	r0, r1
   1e134:	mov	r4, r1
   1e138:	bl	1e278 <argp_parse@@Base+0x2978>
   1e13c:	subs	r5, r0, #0
   1e140:	beq	1e158 <argp_parse@@Base+0x2858>
   1e144:	mov	r2, r4
   1e148:	mov	r1, r6
   1e14c:	bl	11744 <memcpy@plt>
   1e150:	mov	r0, r5
   1e154:	pop	{r4, r5, r6, pc}
   1e158:	bl	1e204 <argp_parse@@Base+0x2904>
   1e15c:	push	{r4, r5, r6, lr}
   1e160:	mov	r6, r0
   1e164:	mov	r0, r1
   1e168:	mov	r4, r1
   1e16c:	bl	1e278 <argp_parse@@Base+0x2978>
   1e170:	subs	r5, r0, #0
   1e174:	beq	1e18c <argp_parse@@Base+0x288c>
   1e178:	mov	r2, r4
   1e17c:	mov	r1, r6
   1e180:	bl	11744 <memcpy@plt>
   1e184:	mov	r0, r5
   1e188:	pop	{r4, r5, r6, pc}
   1e18c:	bl	1e204 <argp_parse@@Base+0x2904>
   1e190:	push	{r4, r5, r6, lr}
   1e194:	mov	r6, r0
   1e198:	add	r0, r1, #1
   1e19c:	mov	r4, r1
   1e1a0:	bl	1e278 <argp_parse@@Base+0x2978>
   1e1a4:	subs	r5, r0, #0
   1e1a8:	beq	1e1c8 <argp_parse@@Base+0x28c8>
   1e1ac:	mov	r3, #0
   1e1b0:	mov	r1, r6
   1e1b4:	strb	r3, [r5, r4]
   1e1b8:	mov	r2, r4
   1e1bc:	bl	11744 <memcpy@plt>
   1e1c0:	mov	r0, r5
   1e1c4:	pop	{r4, r5, r6, pc}
   1e1c8:	bl	1e204 <argp_parse@@Base+0x2904>
   1e1cc:	push	{r4, r5, r6, lr}
   1e1d0:	mov	r6, r0
   1e1d4:	bl	11918 <strlen@plt>
   1e1d8:	add	r4, r0, #1
   1e1dc:	mov	r0, r4
   1e1e0:	bl	1e278 <argp_parse@@Base+0x2978>
   1e1e4:	subs	r5, r0, #0
   1e1e8:	beq	1e200 <argp_parse@@Base+0x2900>
   1e1ec:	mov	r2, r4
   1e1f0:	mov	r1, r6
   1e1f4:	bl	11744 <memcpy@plt>
   1e1f8:	mov	r0, r5
   1e1fc:	pop	{r4, r5, r6, pc}
   1e200:	bl	1e204 <argp_parse@@Base+0x2904>
   1e204:	ldr	r1, [pc, #24]	; 1e224 <argp_parse@@Base+0x2924>
   1e208:	push	{r4, lr}
   1e20c:	ldr	r0, [r1]
   1e210:	ldr	r3, [pc, #16]	; 1e228 <argp_parse@@Base+0x2928>
   1e214:	ldr	r2, [pc, #16]	; 1e22c <argp_parse@@Base+0x292c>
   1e218:	mov	r1, #0
   1e21c:	bl	11858 <error@plt>
   1e220:	bl	11ae0 <abort@plt>
   1e224:	andeq	r3, r3, ip, lsr #11
   1e228:	andeq	r2, r2, r4, asr #5
   1e22c:	andeq	r1, r2, r8, lsr #18
   1e230:	cmp	r1, #0
   1e234:	cmpne	r0, #0
   1e238:	moveq	r1, #1
   1e23c:	moveq	r0, r1
   1e240:	umull	r2, r3, r0, r1
   1e244:	adds	r3, r3, #0
   1e248:	movne	r3, #1
   1e24c:	cmp	r2, #0
   1e250:	blt	1e260 <argp_parse@@Base+0x2960>
   1e254:	cmp	r3, #0
   1e258:	bne	1e260 <argp_parse@@Base+0x2960>
   1e25c:	b	11654 <calloc@plt>
   1e260:	push	{r4, lr}
   1e264:	bl	11948 <__errno_location@plt>
   1e268:	mov	r3, #12
   1e26c:	str	r3, [r0]
   1e270:	mov	r0, #0
   1e274:	pop	{r4, pc}
   1e278:	cmp	r0, #0
   1e27c:	moveq	r0, #1
   1e280:	cmp	r0, #0
   1e284:	blt	1e28c <argp_parse@@Base+0x298c>
   1e288:	b	11894 <malloc@plt>
   1e28c:	push	{r4, lr}
   1e290:	bl	11948 <__errno_location@plt>
   1e294:	mov	r3, #12
   1e298:	str	r3, [r0]
   1e29c:	mov	r0, #0
   1e2a0:	pop	{r4, pc}
   1e2a4:	cmp	r0, #0
   1e2a8:	beq	1e2cc <argp_parse@@Base+0x29cc>
   1e2ac:	cmp	r1, #0
   1e2b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1e2b4:	sub	sp, sp, #12
   1e2b8:	beq	1e2d4 <argp_parse@@Base+0x29d4>
   1e2bc:	blt	1e2ec <argp_parse@@Base+0x29ec>
   1e2c0:	add	sp, sp, #12
   1e2c4:	pop	{lr}		; (ldr lr, [sp], #4)
   1e2c8:	b	117ec <realloc@plt>
   1e2cc:	mov	r0, r1
   1e2d0:	b	1e278 <argp_parse@@Base+0x2978>
   1e2d4:	str	r1, [sp, #4]
   1e2d8:	bl	1ca50 <argp_parse@@Base+0x1150>
   1e2dc:	ldr	r3, [sp, #4]
   1e2e0:	mov	r0, r3
   1e2e4:	add	sp, sp, #12
   1e2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e2ec:	bl	11948 <__errno_location@plt>
   1e2f0:	mov	r2, #12
   1e2f4:	mov	r3, #0
   1e2f8:	str	r2, [r0]
   1e2fc:	b	1e2e0 <argp_parse@@Base+0x29e0>
   1e300:	push	{r4, r5, r6, r7, r8, lr}
   1e304:	mov	r8, r0
   1e308:	mov	r0, #36	; 0x24
   1e30c:	mov	r7, r1
   1e310:	mov	r6, r2
   1e314:	mov	r5, r3
   1e318:	bl	1e278 <argp_parse@@Base+0x2978>
   1e31c:	subs	r4, r0, #0
   1e320:	beq	1e364 <argp_parse@@Base+0x2a64>
   1e324:	mov	r0, #0
   1e328:	str	r5, [r4, #12]
   1e32c:	str	r0, [r4, #20]
   1e330:	str	r0, [r4, #16]
   1e334:	str	r8, [r4]
   1e338:	str	r7, [r4, #4]
   1e33c:	str	r6, [r4, #8]
   1e340:	mov	r0, #200	; 0xc8
   1e344:	bl	1e278 <argp_parse@@Base+0x2978>
   1e348:	cmp	r0, #0
   1e34c:	addne	r3, r0, #200	; 0xc8
   1e350:	mov	r5, r0
   1e354:	str	r0, [r4, #24]
   1e358:	strne	r0, [r4, #28]
   1e35c:	strne	r3, [r4, #32]
   1e360:	beq	1e36c <argp_parse@@Base+0x2a6c>
   1e364:	mov	r0, r4
   1e368:	pop	{r4, r5, r6, r7, r8, pc}
   1e36c:	mov	r0, r4
   1e370:	bl	1ca50 <argp_parse@@Base+0x1150>
   1e374:	mov	r4, r5
   1e378:	b	1e364 <argp_parse@@Base+0x2a64>
   1e37c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e380:	mov	r7, r0
   1e384:	ldr	r4, [r0, #24]
   1e388:	ldr	r3, [r0, #16]
   1e38c:	ldr	r9, [r0, #28]
   1e390:	sub	sp, sp, #12
   1e394:	add	r4, r4, r3
   1e398:	mov	sl, #32
   1e39c:	cmp	r4, r9
   1e3a0:	bcs	1e474 <argp_parse@@Base+0x2b74>
   1e3a4:	ldr	r8, [r7, #20]
   1e3a8:	cmp	r8, #0
   1e3ac:	bne	1e418 <argp_parse@@Base+0x2b18>
   1e3b0:	ldr	r5, [r7, #4]
   1e3b4:	cmp	r5, #0
   1e3b8:	beq	1e6e8 <argp_parse@@Base+0x2de8>
   1e3bc:	ldr	r2, [r7, #32]
   1e3c0:	add	r3, r9, r5
   1e3c4:	cmp	r2, r3
   1e3c8:	bls	1e3e0 <argp_parse@@Base+0x2ae0>
   1e3cc:	b	1e810 <argp_parse@@Base+0x2f10>
   1e3d0:	cmp	r5, r8
   1e3d4:	str	r1, [r0, #20]
   1e3d8:	strb	sl, [r3]
   1e3dc:	beq	1e40c <argp_parse@@Base+0x2b0c>
   1e3e0:	ldr	r0, [r7]
   1e3e4:	add	r8, r8, #1
   1e3e8:	ldr	r3, [r0, #20]
   1e3ec:	ldr	r2, [r0, #24]
   1e3f0:	add	r1, r3, #1
   1e3f4:	cmp	r3, r2
   1e3f8:	bcc	1e3d0 <argp_parse@@Base+0x2ad0>
   1e3fc:	mov	r1, sl
   1e400:	bl	119f0 <__overflow@plt>
   1e404:	cmp	r5, r8
   1e408:	bne	1e3e0 <argp_parse@@Base+0x2ae0>
   1e40c:	ldr	r9, [r7, #28]
   1e410:	mov	r8, r5
   1e414:	str	r5, [r7, #20]
   1e418:	sub	fp, r9, r4
   1e41c:	mov	r2, fp
   1e420:	mov	r1, #10
   1e424:	mov	r0, r4
   1e428:	bl	119a8 <memchr@plt>
   1e42c:	cmp	r8, #0
   1e430:	movlt	r8, #0
   1e434:	movlt	r3, r8
   1e438:	mov	r5, r0
   1e43c:	strlt	r3, [r7, #20]
   1e440:	cmp	r5, #0
   1e444:	beq	1e708 <argp_parse@@Base+0x2e08>
   1e448:	sub	r2, r5, r4
   1e44c:	ldr	r3, [r7, #8]
   1e450:	add	r2, r2, r8
   1e454:	cmp	r2, r3
   1e458:	bge	1e488 <argp_parse@@Base+0x2b88>
   1e45c:	ldr	r9, [r7, #28]
   1e460:	add	r4, r5, #1
   1e464:	mov	r3, #0
   1e468:	cmp	r4, r9
   1e46c:	str	r3, [r7, #20]
   1e470:	bcc	1e3a4 <argp_parse@@Base+0x2aa4>
   1e474:	ldr	r3, [r7, #24]
   1e478:	sub	r9, r9, r3
   1e47c:	str	r9, [r7, #16]
   1e480:	add	sp, sp, #12
   1e484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e488:	ldr	r2, [r7, #12]
   1e48c:	sub	r6, r3, #1
   1e490:	cmp	r2, #0
   1e494:	str	r2, [sp, #4]
   1e498:	blt	1e7c0 <argp_parse@@Base+0x2ec0>
   1e49c:	add	r6, r6, #1
   1e4a0:	sub	r8, r6, r8
   1e4a4:	adds	r8, r4, r8
   1e4a8:	bcs	1e740 <argp_parse@@Base+0x2e40>
   1e4ac:	bl	118f4 <__ctype_b_loc@plt>
   1e4b0:	mov	r3, r8
   1e4b4:	ldr	r0, [r0]
   1e4b8:	b	1e4c4 <argp_parse@@Base+0x2bc4>
   1e4bc:	cmp	r3, r4
   1e4c0:	bcc	1e744 <argp_parse@@Base+0x2e44>
   1e4c4:	mov	r1, r3
   1e4c8:	sub	r3, r3, #1
   1e4cc:	ldrb	r2, [r1]
   1e4d0:	mov	r6, r3
   1e4d4:	lsl	r2, r2, #1
   1e4d8:	ldrh	r2, [r0, r2]
   1e4dc:	tst	r2, #1
   1e4e0:	beq	1e4bc <argp_parse@@Base+0x2bbc>
   1e4e4:	add	r6, r1, #1
   1e4e8:	cmp	r6, r4
   1e4ec:	bls	1e758 <argp_parse@@Base+0x2e58>
   1e4f0:	cmp	r4, r1
   1e4f4:	bhi	1e750 <argp_parse@@Base+0x2e50>
   1e4f8:	mov	r1, r3
   1e4fc:	sub	r8, r4, #1
   1e500:	b	1e51c <argp_parse@@Base+0x2c1c>
   1e504:	ldrb	r3, [r1]
   1e508:	sub	r1, r1, #1
   1e50c:	lsl	r3, r3, #1
   1e510:	ldrh	r3, [r0, r3]
   1e514:	tst	r3, #1
   1e518:	beq	1e848 <argp_parse@@Base+0x2f48>
   1e51c:	cmp	r8, r1
   1e520:	mov	r2, r1
   1e524:	bne	1e504 <argp_parse@@Base+0x2c04>
   1e528:	add	r8, r8, #1
   1e52c:	add	r3, fp, #1
   1e530:	add	r3, r4, r3
   1e534:	cmp	r6, r3
   1e538:	beq	1e618 <argp_parse@@Base+0x2d18>
   1e53c:	add	r5, r8, #1
   1e540:	ldr	r3, [sp, #4]
   1e544:	sub	r1, r6, r5
   1e548:	cmp	r1, r3
   1e54c:	bge	1e634 <argp_parse@@Base+0x2d34>
   1e550:	cmp	r6, r9
   1e554:	bcs	1e62c <argp_parse@@Base+0x2d2c>
   1e558:	ldr	r3, [r7, #32]
   1e55c:	ldr	r2, [sp, #4]
   1e560:	sub	r3, r3, r9
   1e564:	add	r0, r2, #1
   1e568:	cmp	r3, r0
   1e56c:	bgt	1e878 <argp_parse@@Base+0x2f78>
   1e570:	ldr	r0, [r7, #24]
   1e574:	cmp	r8, r0
   1e578:	bls	1e58c <argp_parse@@Base+0x2c8c>
   1e57c:	sub	r2, r8, r0
   1e580:	ldr	r3, [r7]
   1e584:	mov	r1, #1
   1e588:	bl	11768 <fwrite_unlocked@plt>
   1e58c:	ldr	r0, [r7]
   1e590:	ldr	r2, [r0, #24]
   1e594:	ldr	r3, [r0, #20]
   1e598:	cmp	r3, r2
   1e59c:	addcc	r2, r3, #1
   1e5a0:	strcc	r2, [r0, #20]
   1e5a4:	movcc	r2, #10
   1e5a8:	strbcc	r2, [r3]
   1e5ac:	bcs	1e8b8 <argp_parse@@Base+0x2fb8>
   1e5b0:	ldr	r5, [r7, #24]
   1e5b4:	sub	r4, r4, r5
   1e5b8:	sub	r1, r6, r5
   1e5bc:	add	fp, fp, r4
   1e5c0:	mov	r9, r1
   1e5c4:	mov	r2, r5
   1e5c8:	ldr	r3, [r7, #12]
   1e5cc:	cmp	r3, r1
   1e5d0:	bgt	1e650 <argp_parse@@Base+0x2d50>
   1e5d4:	cmp	r3, #0
   1e5d8:	mov	r4, r5
   1e5dc:	ble	1e5f4 <argp_parse@@Base+0x2cf4>
   1e5e0:	strb	sl, [r4], #1
   1e5e4:	ldr	r3, [r7, #12]
   1e5e8:	sub	r1, r4, r5
   1e5ec:	cmp	r1, r3
   1e5f0:	blt	1e5e0 <argp_parse@@Base+0x2ce0>
   1e5f4:	cmp	r4, r6
   1e5f8:	bcc	1e6cc <argp_parse@@Base+0x2dcc>
   1e5fc:	sub	r9, fp, r9
   1e600:	cmp	r3, #0
   1e604:	add	r9, r4, r9
   1e608:	mvneq	r3, #0
   1e60c:	str	r9, [r7, #28]
   1e610:	str	r3, [r7, #20]
   1e614:	b	1e39c <argp_parse@@Base+0x2a9c>
   1e618:	ldr	r3, [r7, #32]
   1e61c:	ldr	r2, [sp, #4]
   1e620:	sub	r3, r3, r8
   1e624:	cmp	r3, r2
   1e628:	ble	1e550 <argp_parse@@Base+0x2c50>
   1e62c:	add	r5, r8, #1
   1e630:	sub	r1, r6, r5
   1e634:	mov	r3, #10
   1e638:	strb	r3, [r8]
   1e63c:	ldr	r3, [r7, #12]
   1e640:	sub	r9, r6, r4
   1e644:	cmp	r3, r1
   1e648:	mov	r2, r4
   1e64c:	ble	1e5d4 <argp_parse@@Base+0x2cd4>
   1e650:	add	r1, fp, #1
   1e654:	add	r1, r2, r1
   1e658:	cmp	r6, r1
   1e65c:	beq	1e864 <argp_parse@@Base+0x2f64>
   1e660:	cmp	r3, #0
   1e664:	ble	1e6c0 <argp_parse@@Base+0x2dc0>
   1e668:	mov	r4, #0
   1e66c:	mov	r8, r2
   1e670:	b	1e68c <argp_parse@@Base+0x2d8c>
   1e674:	str	ip, [r0, #20]
   1e678:	strb	sl, [r3]
   1e67c:	ldr	r3, [r7, #12]
   1e680:	add	r4, r4, #1
   1e684:	cmp	r3, r4
   1e688:	ble	1e6bc <argp_parse@@Base+0x2dbc>
   1e68c:	ldr	r0, [r7]
   1e690:	ldr	r3, [r0, #20]
   1e694:	ldr	r1, [r0, #24]
   1e698:	add	ip, r3, #1
   1e69c:	cmp	r3, r1
   1e6a0:	bcc	1e674 <argp_parse@@Base+0x2d74>
   1e6a4:	mov	r1, sl
   1e6a8:	bl	119f0 <__overflow@plt>
   1e6ac:	ldr	r3, [r7, #12]
   1e6b0:	add	r4, r4, #1
   1e6b4:	cmp	r3, r4
   1e6b8:	bgt	1e68c <argp_parse@@Base+0x2d8c>
   1e6bc:	mov	r2, r8
   1e6c0:	mov	r4, r5
   1e6c4:	cmp	r4, r6
   1e6c8:	bcs	1e5fc <argp_parse@@Base+0x2cfc>
   1e6cc:	add	r2, r2, fp
   1e6d0:	sub	r2, r2, r6
   1e6d4:	mov	r1, r6
   1e6d8:	mov	r0, r4
   1e6dc:	bl	116f0 <memmove@plt>
   1e6e0:	ldr	r3, [r7, #12]
   1e6e4:	b	1e5fc <argp_parse@@Base+0x2cfc>
   1e6e8:	sub	fp, r9, r4
   1e6ec:	mov	r2, fp
   1e6f0:	mov	r1, #10
   1e6f4:	mov	r0, r4
   1e6f8:	bl	119a8 <memchr@plt>
   1e6fc:	mov	r5, r0
   1e700:	cmp	r5, #0
   1e704:	bne	1e448 <argp_parse@@Base+0x2b48>
   1e708:	ldr	r6, [r7, #8]
   1e70c:	add	r3, fp, r8
   1e710:	cmp	r3, r6
   1e714:	bcc	1e8dc <argp_parse@@Base+0x2fdc>
   1e718:	ldr	r2, [r7, #12]
   1e71c:	sub	r6, r6, #1
   1e720:	cmp	r2, #0
   1e724:	str	r2, [sp, #4]
   1e728:	blt	1e8c8 <argp_parse@@Base+0x2fc8>
   1e72c:	add	r6, r6, #1
   1e730:	sub	r8, r6, r8
   1e734:	adds	r8, r4, r8
   1e738:	mov	r5, r9
   1e73c:	bcc	1e4ac <argp_parse@@Base+0x2bac>
   1e740:	mov	r6, r8
   1e744:	add	r6, r6, #1
   1e748:	cmp	r4, r6
   1e74c:	bcs	1e758 <argp_parse@@Base+0x2e58>
   1e750:	mov	r8, r6
   1e754:	b	1e52c <argp_parse@@Base+0x2c2c>
   1e758:	cmp	r8, r5
   1e75c:	bcs	1e794 <argp_parse@@Base+0x2e94>
   1e760:	add	r6, r8, #1
   1e764:	b	1e788 <argp_parse@@Base+0x2e88>
   1e768:	bl	118f4 <__ctype_b_loc@plt>
   1e76c:	ldrb	r3, [r6]
   1e770:	add	r6, r6, #1
   1e774:	lsl	r3, r3, #1
   1e778:	ldr	r2, [r0]
   1e77c:	ldrh	r3, [r2, r3]
   1e780:	tst	r3, #1
   1e784:	bne	1e7a4 <argp_parse@@Base+0x2ea4>
   1e788:	cmp	r6, r5
   1e78c:	mov	r8, r6
   1e790:	bne	1e768 <argp_parse@@Base+0x2e68>
   1e794:	cmp	r8, r5
   1e798:	beq	1e850 <argp_parse@@Base+0x2f50>
   1e79c:	bl	118f4 <__ctype_b_loc@plt>
   1e7a0:	ldr	r2, [r0]
   1e7a4:	mov	r6, r8
   1e7a8:	ldrb	r3, [r6, #1]!
   1e7ac:	lsl	r3, r3, #1
   1e7b0:	ldrh	r3, [r2, r3]
   1e7b4:	tst	r3, #1
   1e7b8:	bne	1e7a8 <argp_parse@@Base+0x2ea8>
   1e7bc:	b	1e52c <argp_parse@@Base+0x2c2c>
   1e7c0:	cmp	r9, r5
   1e7c4:	str	r3, [sp, #4]
   1e7c8:	bls	1e8c4 <argp_parse@@Base+0x2fc4>
   1e7cc:	sub	r0, r6, r8
   1e7d0:	sub	r2, r9, r5
   1e7d4:	add	r0, r4, r0
   1e7d8:	mov	r1, r5
   1e7dc:	bl	116f0 <memmove@plt>
   1e7e0:	ldr	r2, [r7, #20]
   1e7e4:	ldr	r9, [r7, #28]
   1e7e8:	sub	r6, r6, r2
   1e7ec:	add	r6, r4, r6
   1e7f0:	mov	r3, #0
   1e7f4:	sub	r5, r6, r5
   1e7f8:	str	r3, [r7, #20]
   1e7fc:	ldr	r3, [sp, #4]
   1e800:	sub	r9, r9, r5
   1e804:	add	r4, r4, r3
   1e808:	str	r9, [r7, #28]
   1e80c:	b	1e39c <argp_parse@@Base+0x2a9c>
   1e810:	add	r6, r4, r5
   1e814:	sub	r2, r9, r4
   1e818:	mov	r1, r4
   1e81c:	mov	r0, r6
   1e820:	bl	116f0 <memmove@plt>
   1e824:	ldr	r3, [r7, #28]
   1e828:	mov	r0, r4
   1e82c:	add	r3, r3, r5
   1e830:	str	r3, [r7, #28]
   1e834:	mov	r2, r5
   1e838:	mov	r1, sl
   1e83c:	mov	r4, r6
   1e840:	bl	11984 <memset@plt>
   1e844:	b	1e40c <argp_parse@@Base+0x2b0c>
   1e848:	add	r8, r2, #1
   1e84c:	b	1e52c <argp_parse@@Base+0x2c2c>
   1e850:	mov	r3, #0
   1e854:	str	r3, [r7, #20]
   1e858:	add	r4, r8, #1
   1e85c:	ldr	r9, [r7, #28]
   1e860:	b	1e39c <argp_parse@@Base+0x2a9c>
   1e864:	ldr	r1, [r7, #32]
   1e868:	sub	r1, r1, r6
   1e86c:	cmp	r3, r1
   1e870:	ble	1e5d4 <argp_parse@@Base+0x2cd4>
   1e874:	b	1e660 <argp_parse@@Base+0x2d60>
   1e878:	sub	r9, r9, r6
   1e87c:	mov	r1, r6
   1e880:	mov	r2, r9
   1e884:	add	r0, r8, r0
   1e888:	bl	116f0 <memmove@plt>
   1e88c:	ldr	r1, [r7, #12]
   1e890:	mov	r3, #10
   1e894:	add	r6, r1, #1
   1e898:	add	r6, r8, r6
   1e89c:	add	r9, r6, r9
   1e8a0:	sub	fp, r9, r4
   1e8a4:	add	r5, r8, #1
   1e8a8:	strb	r3, [r8]
   1e8ac:	sub	r9, r6, r4
   1e8b0:	mov	r2, r4
   1e8b4:	b	1e5c8 <argp_parse@@Base+0x2cc8>
   1e8b8:	mov	r1, #10
   1e8bc:	bl	119f0 <__overflow@plt>
   1e8c0:	b	1e5b0 <argp_parse@@Base+0x2cb0>
   1e8c4:	add	r3, r8, fp
   1e8c8:	sub	r6, r6, r3
   1e8cc:	add	r9, r9, r6
   1e8d0:	str	r9, [r7, #28]
   1e8d4:	str	r3, [r7, #20]
   1e8d8:	b	1e474 <argp_parse@@Base+0x2b74>
   1e8dc:	str	r3, [r7, #20]
   1e8e0:	ldr	r9, [r7, #28]
   1e8e4:	b	1e474 <argp_parse@@Base+0x2b74>
   1e8e8:	push	{r4, lr}
   1e8ec:	mov	r4, r0
   1e8f0:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1e8f4:	ldr	r2, [r4, #28]
   1e8f8:	ldr	r0, [r4, #24]
   1e8fc:	cmp	r2, r0
   1e900:	bls	1e918 <argp_parse@@Base+0x3018>
   1e904:	sub	r2, r2, r0
   1e908:	ldr	r3, [r4]
   1e90c:	mov	r1, #1
   1e910:	bl	11768 <fwrite_unlocked@plt>
   1e914:	ldr	r0, [r4, #24]
   1e918:	bl	1ca50 <argp_parse@@Base+0x1150>
   1e91c:	mov	r0, r4
   1e920:	pop	{r4, lr}
   1e924:	b	1ca50 <argp_parse@@Base+0x1150>
   1e928:	ldr	r3, [r0, #32]
   1e92c:	ldr	r2, [r0, #28]
   1e930:	sub	r3, r3, r2
   1e934:	cmp	r3, r1
   1e938:	bcc	1e948 <argp_parse@@Base+0x3048>
   1e93c:	mov	r3, #1
   1e940:	mov	r0, r3
   1e944:	bx	lr
   1e948:	push	{r4, r5, r6, lr}
   1e94c:	mov	r4, r0
   1e950:	mov	r5, r1
   1e954:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1e958:	ldr	r3, [r4, #24]
   1e95c:	ldr	r2, [r4, #28]
   1e960:	mov	r0, r3
   1e964:	sub	r2, r2, r3
   1e968:	mov	r1, #1
   1e96c:	ldr	r3, [r4]
   1e970:	bl	11768 <fwrite_unlocked@plt>
   1e974:	ldr	r2, [r4, #28]
   1e978:	ldr	r3, [r4, #24]
   1e97c:	sub	r1, r2, r3
   1e980:	cmp	r0, r1
   1e984:	bne	1e9cc <argp_parse@@Base+0x30cc>
   1e988:	ldr	r1, [r4, #32]
   1e98c:	mov	r2, #0
   1e990:	sub	r1, r1, r3
   1e994:	cmp	r5, r1
   1e998:	str	r3, [r4, #28]
   1e99c:	str	r2, [r4, #16]
   1e9a0:	bls	1e9c0 <argp_parse@@Base+0x30c0>
   1e9a4:	adds	r5, r5, r1
   1e9a8:	bcc	1e9fc <argp_parse@@Base+0x30fc>
   1e9ac:	bl	11948 <__errno_location@plt>
   1e9b0:	mov	r2, #12
   1e9b4:	mov	r3, #0
   1e9b8:	str	r2, [r0]
   1e9bc:	b	1e9c4 <argp_parse@@Base+0x30c4>
   1e9c0:	mov	r3, #1
   1e9c4:	mov	r0, r3
   1e9c8:	pop	{r4, r5, r6, pc}
   1e9cc:	ldr	r1, [r4, #16]
   1e9d0:	sub	r2, r2, r0
   1e9d4:	sub	r1, r1, r0
   1e9d8:	str	r2, [r4, #28]
   1e9dc:	str	r1, [r4, #16]
   1e9e0:	sub	r2, r2, r3
   1e9e4:	add	r1, r3, r0
   1e9e8:	mov	r0, r3
   1e9ec:	bl	116f0 <memmove@plt>
   1e9f0:	mov	r3, #0
   1e9f4:	mov	r0, r3
   1e9f8:	pop	{r4, r5, r6, pc}
   1e9fc:	mov	r0, r3
   1ea00:	mov	r1, r5
   1ea04:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   1ea08:	cmp	r0, #0
   1ea0c:	beq	1e9ac <argp_parse@@Base+0x30ac>
   1ea10:	add	r5, r0, r5
   1ea14:	mov	r3, #1
   1ea18:	str	r5, [r4, #32]
   1ea1c:	str	r0, [r4, #24]
   1ea20:	str	r0, [r4, #28]
   1ea24:	b	1e9c4 <argp_parse@@Base+0x30c4>
   1ea28:	push	{r1, r2, r3}
   1ea2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ea30:	sub	sp, sp, #8
   1ea34:	mov	r5, r0
   1ea38:	ldr	r7, [sp, #36]	; 0x24
   1ea3c:	mov	r4, #150	; 0x96
   1ea40:	mov	r8, #1
   1ea44:	mov	r9, #0
   1ea48:	add	r6, sp, #40	; 0x28
   1ea4c:	ldr	r1, [r5, #32]
   1ea50:	ldr	r0, [r5, #28]
   1ea54:	sub	r3, r1, r0
   1ea58:	cmp	r4, r3
   1ea5c:	bhi	1eaa4 <argp_parse@@Base+0x31a4>
   1ea60:	sub	r4, r1, r0
   1ea64:	mov	r1, r4
   1ea68:	mov	r3, r6
   1ea6c:	mov	r2, r7
   1ea70:	str	r6, [sp, #4]
   1ea74:	bl	11a5c <vsnprintf@plt>
   1ea78:	cmp	r4, r0
   1ea7c:	bls	1ea9c <argp_parse@@Base+0x319c>
   1ea80:	ldr	r3, [r5, #28]
   1ea84:	add	r3, r3, r0
   1ea88:	str	r3, [r5, #28]
   1ea8c:	add	sp, sp, #8
   1ea90:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1ea94:	add	sp, sp, #12
   1ea98:	bx	lr
   1ea9c:	add	r4, r0, #1
   1eaa0:	b	1ea4c <argp_parse@@Base+0x314c>
   1eaa4:	mov	r0, r5
   1eaa8:	bl	1e37c <argp_parse@@Base+0x2a7c>
   1eaac:	ldr	r3, [r5, #24]
   1eab0:	ldr	r2, [r5, #28]
   1eab4:	mov	r0, r3
   1eab8:	sub	r2, r2, r3
   1eabc:	mov	r1, r8
   1eac0:	ldr	r3, [r5]
   1eac4:	bl	11768 <fwrite_unlocked@plt>
   1eac8:	ldr	r2, [r5, #28]
   1eacc:	ldr	r3, [r5, #24]
   1ead0:	sub	r1, r2, r3
   1ead4:	cmp	r0, r1
   1ead8:	bne	1eb20 <argp_parse@@Base+0x3220>
   1eadc:	ldr	r1, [r5, #32]
   1eae0:	str	r3, [r5, #28]
   1eae4:	sub	r0, r1, r3
   1eae8:	cmp	r4, r0
   1eaec:	str	r9, [r5, #16]
   1eaf0:	movls	r0, r3
   1eaf4:	bls	1ea60 <argp_parse@@Base+0x3160>
   1eaf8:	adds	r4, r4, r0
   1eafc:	bcc	1eb48 <argp_parse@@Base+0x3248>
   1eb00:	bl	11948 <__errno_location@plt>
   1eb04:	mov	r3, #12
   1eb08:	str	r3, [r0]
   1eb0c:	mvn	r0, #0
   1eb10:	add	sp, sp, #8
   1eb14:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1eb18:	add	sp, sp, #12
   1eb1c:	bx	lr
   1eb20:	ldr	r1, [r5, #16]
   1eb24:	sub	r2, r2, r0
   1eb28:	sub	r1, r1, r0
   1eb2c:	str	r2, [r5, #28]
   1eb30:	str	r1, [r5, #16]
   1eb34:	sub	r2, r2, r3
   1eb38:	add	r1, r3, r0
   1eb3c:	mov	r0, r3
   1eb40:	bl	116f0 <memmove@plt>
   1eb44:	b	1eb0c <argp_parse@@Base+0x320c>
   1eb48:	mov	r1, r4
   1eb4c:	mov	r0, r3
   1eb50:	bl	1e2a4 <argp_parse@@Base+0x29a4>
   1eb54:	cmp	r0, #0
   1eb58:	add	r1, r0, r4
   1eb5c:	beq	1eb00 <argp_parse@@Base+0x3200>
   1eb60:	str	r0, [r5, #24]
   1eb64:	str	r1, [r5, #32]
   1eb68:	str	r0, [r5, #28]
   1eb6c:	b	1ea60 <argp_parse@@Base+0x3160>
   1eb70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eb74:	ldr	r4, [r1, #32]
   1eb78:	ldr	r8, [r1, #28]
   1eb7c:	ldr	r7, [r1]
   1eb80:	add	r6, r0, r4, lsl #2
   1eb84:	mov	r2, r8
   1eb88:	mov	r5, r7
   1eb8c:	cmp	r5, r4
   1eb90:	movle	r3, #0
   1eb94:	movgt	r3, #1
   1eb98:	cmp	r2, r4
   1eb9c:	movge	r3, #0
   1eba0:	cmp	r3, #0
   1eba4:	beq	1ec18 <argp_parse@@Base+0x3318>
   1eba8:	sub	r3, r5, r4
   1ebac:	sub	sl, r4, r2
   1ebb0:	cmp	r3, sl
   1ebb4:	ble	1ebe8 <argp_parse@@Base+0x32e8>
   1ebb8:	sub	r5, r5, sl
   1ebbc:	add	sl, sl, r2
   1ebc0:	add	ip, r0, r5, lsl #2
   1ebc4:	add	sl, r0, sl, lsl #2
   1ebc8:	add	r3, r0, r2, lsl #2
   1ebcc:	ldr	r9, [ip]
   1ebd0:	ldr	lr, [r3]
   1ebd4:	str	r9, [r3], #4
   1ebd8:	cmp	r3, sl
   1ebdc:	str	lr, [ip], #4
   1ebe0:	bne	1ebcc <argp_parse@@Base+0x32cc>
   1ebe4:	b	1eb8c <argp_parse@@Base+0x328c>
   1ebe8:	add	sl, r3, r2
   1ebec:	add	r3, r0, r2, lsl #2
   1ebf0:	add	r9, r0, sl, lsl #2
   1ebf4:	mov	r2, r6
   1ebf8:	ldr	lr, [r2]
   1ebfc:	ldr	ip, [r3]
   1ec00:	str	lr, [r3], #4
   1ec04:	cmp	r9, r3
   1ec08:	str	ip, [r2], #4
   1ec0c:	bne	1ebf8 <argp_parse@@Base+0x32f8>
   1ec10:	mov	r2, sl
   1ec14:	b	1eb8c <argp_parse@@Base+0x328c>
   1ec18:	sub	r4, r7, r4
   1ec1c:	add	r8, r4, r8
   1ec20:	str	r8, [r1, #28]
   1ec24:	str	r7, [r1, #32]
   1ec28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ec2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec30:	sub	sp, sp, #52	; 0x34
   1ec34:	str	r1, [sp, #24]
   1ec38:	ldr	r1, [sp, #96]	; 0x60
   1ec3c:	str	r0, [sp, #28]
   1ec40:	str	r2, [sp, #32]
   1ec44:	ldr	r8, [r1, #20]
   1ec48:	str	r3, [sp, #12]
   1ec4c:	mov	r7, r8
   1ec50:	ldrb	r5, [r8]
   1ec54:	cmp	r5, #61	; 0x3d
   1ec58:	cmpne	r5, #0
   1ec5c:	movne	r5, #1
   1ec60:	moveq	r5, #0
   1ec64:	beq	1ec80 <argp_parse@@Base+0x3380>
   1ec68:	ldrb	r3, [r7, #1]!
   1ec6c:	cmp	r3, #0
   1ec70:	cmpne	r3, #61	; 0x3d
   1ec74:	bne	1ec68 <argp_parse@@Base+0x3368>
   1ec78:	ldr	r3, [sp, #12]
   1ec7c:	sub	r5, r7, r8
   1ec80:	ldr	sl, [r3]
   1ec84:	cmp	sl, #0
   1ec88:	beq	1f060 <argp_parse@@Base+0x3760>
   1ec8c:	mov	fp, r3
   1ec90:	mov	r4, sl
   1ec94:	mov	r6, #0
   1ec98:	str	r3, [sp, #20]
   1ec9c:	mov	r2, r5
   1eca0:	mov	r1, r8
   1eca4:	mov	r0, r4
   1eca8:	bl	11ad4 <strncmp@plt>
   1ecac:	mov	r9, fp
   1ecb0:	cmp	r0, #0
   1ecb4:	mov	r0, r4
   1ecb8:	bne	1ecc8 <argp_parse@@Base+0x33c8>
   1ecbc:	bl	11918 <strlen@plt>
   1ecc0:	cmp	r0, r5
   1ecc4:	beq	1ed88 <argp_parse@@Base+0x3488>
   1ecc8:	ldr	r4, [fp, #16]!
   1eccc:	add	r6, r6, #1
   1ecd0:	cmp	r4, #0
   1ecd4:	bne	1ec9c <argp_parse@@Base+0x339c>
   1ecd8:	ldr	r3, [sp, #100]	; 0x64
   1ecdc:	cmp	r3, #0
   1ece0:	ldr	r3, [sp, #92]	; 0x5c
   1ece4:	beq	1ee2c <argp_parse@@Base+0x352c>
   1ece8:	cmp	r3, #0
   1ecec:	bne	1ef44 <argp_parse@@Base+0x3644>
   1ecf0:	mov	fp, r3
   1ecf4:	mov	r0, sl
   1ecf8:	ldr	r4, [sp, #12]
   1ecfc:	ldr	sl, [sp, #96]	; 0x60
   1ed00:	mov	r9, fp
   1ed04:	mov	r1, r8
   1ed08:	str	r3, [sp, #16]
   1ed0c:	str	r3, [sp, #44]	; 0x2c
   1ed10:	mvn	r3, #0
   1ed14:	str	r3, [sp, #40]	; 0x28
   1ed18:	str	fp, [sp, #36]	; 0x24
   1ed1c:	mov	r2, r5
   1ed20:	bl	11ad4 <strncmp@plt>
   1ed24:	cmp	r0, #0
   1ed28:	bne	1ed64 <argp_parse@@Base+0x3464>
   1ed2c:	cmp	r9, #0
   1ed30:	beq	1f298 <argp_parse@@Base+0x3998>
   1ed34:	ldr	r2, [r9, #4]
   1ed38:	ldr	r3, [r4, #4]
   1ed3c:	cmp	r2, r3
   1ed40:	beq	1f2f4 <argp_parse@@Base+0x39f4>
   1ed44:	ldr	r3, [sp, #16]
   1ed48:	cmp	r3, #0
   1ed4c:	bne	1ed64 <argp_parse@@Base+0x3464>
   1ed50:	ldr	r3, [sp, #36]	; 0x24
   1ed54:	cmp	r3, #0
   1ed58:	beq	1f1d0 <argp_parse@@Base+0x38d0>
   1ed5c:	mov	r2, #1
   1ed60:	strb	r2, [r3, fp]
   1ed64:	ldr	r0, [r4, #16]!
   1ed68:	add	fp, fp, #1
   1ed6c:	cmp	r0, #0
   1ed70:	beq	1eea0 <argp_parse@@Base+0x35a0>
   1ed74:	ldr	r1, [sl, #20]
   1ed78:	b	1ed1c <argp_parse@@Base+0x341c>
   1ed7c:	cmp	r9, #0
   1ed80:	beq	1f060 <argp_parse@@Base+0x3760>
   1ed84:	ldr	r6, [sp, #40]	; 0x28
   1ed88:	ldr	r3, [sp, #96]	; 0x60
   1ed8c:	ldr	r0, [sp, #96]	; 0x60
   1ed90:	mov	r1, #0
   1ed94:	ldr	r2, [r3]
   1ed98:	str	r1, [r0, #20]
   1ed9c:	add	r3, r2, #1
   1eda0:	str	r3, [r0]
   1eda4:	ldrb	r1, [r7]
   1eda8:	cmp	r1, #0
   1edac:	bne	1edec <argp_parse@@Base+0x34ec>
   1edb0:	ldr	r1, [r9, #4]
   1edb4:	cmp	r1, #1
   1edb8:	beq	1f0d0 <argp_parse@@Base+0x37d0>
   1edbc:	ldr	r3, [sp, #88]	; 0x58
   1edc0:	ldr	r2, [r9, #8]
   1edc4:	cmp	r3, #0
   1edc8:	strne	r6, [r3]
   1edcc:	cmp	r2, #0
   1edd0:	movne	r3, #0
   1edd4:	ldreq	r3, [r9, #12]
   1edd8:	ldrne	r1, [r9, #12]
   1eddc:	strne	r1, [r2]
   1ede0:	mov	r0, r3
   1ede4:	add	sp, sp, #52	; 0x34
   1ede8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edec:	ldr	r3, [r9, #4]
   1edf0:	cmp	r3, #0
   1edf4:	movne	r3, r0
   1edf8:	addne	r7, r7, #1
   1edfc:	strne	r7, [r3, #12]
   1ee00:	bne	1edbc <argp_parse@@Base+0x34bc>
   1ee04:	ldr	r3, [sp, #100]	; 0x64
   1ee08:	cmp	r3, #0
   1ee0c:	bne	1f028 <argp_parse@@Base+0x3728>
   1ee10:	ldr	r1, [sp, #96]	; 0x60
   1ee14:	ldr	r2, [r9, #12]
   1ee18:	mov	r3, #63	; 0x3f
   1ee1c:	str	r2, [r1, #8]
   1ee20:	mov	r0, r3
   1ee24:	add	sp, sp, #52	; 0x34
   1ee28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ee2c:	cmp	r3, #0
   1ee30:	bne	1efc0 <argp_parse@@Base+0x36c0>
   1ee34:	mov	fp, r3
   1ee38:	ldr	r4, [sp, #12]
   1ee3c:	mov	r9, fp
   1ee40:	mov	r0, sl
   1ee44:	str	r3, [sp, #16]
   1ee48:	mvn	r3, #0
   1ee4c:	str	r3, [sp, #40]	; 0x28
   1ee50:	mov	r2, r5
   1ee54:	mov	r1, r8
   1ee58:	bl	11ad4 <strncmp@plt>
   1ee5c:	cmp	r0, #0
   1ee60:	bne	1ee84 <argp_parse@@Base+0x3584>
   1ee64:	cmp	r9, #0
   1ee68:	beq	1f28c <argp_parse@@Base+0x398c>
   1ee6c:	ldr	r2, [r9, #4]
   1ee70:	ldr	r3, [r4, #4]
   1ee74:	cmp	r2, r3
   1ee78:	beq	1f2c8 <argp_parse@@Base+0x39c8>
   1ee7c:	mov	r3, #1
   1ee80:	str	r3, [sp, #16]
   1ee84:	ldr	r0, [r4, #16]!
   1ee88:	add	fp, fp, #1
   1ee8c:	cmp	r0, #0
   1ee90:	bne	1ee50 <argp_parse@@Base+0x3550>
   1ee94:	ldr	r3, [sp, #92]	; 0x5c
   1ee98:	str	r0, [sp, #36]	; 0x24
   1ee9c:	str	r3, [sp, #44]	; 0x2c
   1eea0:	ldr	r2, [sp, #36]	; 0x24
   1eea4:	ldr	r3, [sp, #16]
   1eea8:	cmp	r3, #0
   1eeac:	cmpeq	r2, #0
   1eeb0:	beq	1ed7c <argp_parse@@Base+0x347c>
   1eeb4:	ldr	r2, [sp, #100]	; 0x64
   1eeb8:	cmp	r2, #0
   1eebc:	beq	1f120 <argp_parse@@Base+0x3820>
   1eec0:	cmp	r3, #0
   1eec4:	bne	1f0f8 <argp_parse@@Base+0x37f8>
   1eec8:	ldr	r5, [pc, #1108]	; 1f324 <argp_parse@@Base+0x3a24>
   1eecc:	ldr	r3, [sp, #36]	; 0x24
   1eed0:	ldr	r7, [pc, #1104]	; 1f328 <argp_parse@@Base+0x3a28>
   1eed4:	ldr	r0, [r5]
   1eed8:	add	r6, r3, r6
   1eedc:	mov	r4, r3
   1eee0:	bl	11a50 <flockfile@plt>
   1eee4:	ldr	r3, [sp, #24]
   1eee8:	ldr	r0, [r5]
   1eeec:	ldr	r1, [pc, #1080]	; 1f32c <argp_parse@@Base+0x3a2c>
   1eef0:	ldr	r2, [r3]
   1eef4:	ldr	r3, [sp, #96]	; 0x60
   1eef8:	ldr	r3, [r3, #20]
   1eefc:	str	r3, [sp]
   1ef00:	ldr	r3, [sp, #104]	; 0x68
   1ef04:	bl	1193c <fprintf@plt>
   1ef08:	ldr	r8, [sp, #16]
   1ef0c:	ldr	r9, [sp, #12]
   1ef10:	b	1ef20 <argp_parse@@Base+0x3620>
   1ef14:	cmp	r4, r6
   1ef18:	add	r8, r8, #1
   1ef1c:	beq	1f2b0 <argp_parse@@Base+0x39b0>
   1ef20:	ldrb	r3, [r4], #1
   1ef24:	cmp	r3, #0
   1ef28:	beq	1ef14 <argp_parse@@Base+0x3614>
   1ef2c:	ldr	r3, [r9, r8, lsl #4]
   1ef30:	ldr	r2, [sp, #104]	; 0x68
   1ef34:	mov	r1, r7
   1ef38:	ldr	r0, [r5]
   1ef3c:	bl	1193c <fprintf@plt>
   1ef40:	b	1ef14 <argp_parse@@Base+0x3614>
   1ef44:	mov	r9, r4
   1ef48:	str	r4, [sp, #16]
   1ef4c:	str	r4, [sp, #44]	; 0x2c
   1ef50:	str	r4, [sp, #36]	; 0x24
   1ef54:	mov	r1, r8
   1ef58:	mov	r0, sl
   1ef5c:	mov	r8, r4
   1ef60:	ldr	sl, [sp, #20]
   1ef64:	ldr	r4, [sp, #96]	; 0x60
   1ef68:	mov	fp, #1
   1ef6c:	mvn	r3, #0
   1ef70:	str	r3, [sp, #40]	; 0x28
   1ef74:	mov	r2, r5
   1ef78:	bl	11ad4 <strncmp@plt>
   1ef7c:	cmp	r0, #0
   1ef80:	bne	1efa8 <argp_parse@@Base+0x36a8>
   1ef84:	cmp	r9, #0
   1ef88:	beq	1f2a4 <argp_parse@@Base+0x39a4>
   1ef8c:	ldr	r3, [sp, #16]
   1ef90:	cmp	r3, #0
   1ef94:	bne	1efa8 <argp_parse@@Base+0x36a8>
   1ef98:	ldr	r3, [sp, #36]	; 0x24
   1ef9c:	cmp	r3, #0
   1efa0:	beq	1f214 <argp_parse@@Base+0x3914>
   1efa4:	strb	fp, [r3, r8]
   1efa8:	ldr	r0, [sl, #16]!
   1efac:	add	r8, r8, #1
   1efb0:	cmp	r0, #0
   1efb4:	beq	1eea0 <argp_parse@@Base+0x35a0>
   1efb8:	ldr	r1, [r4, #20]
   1efbc:	b	1ef74 <argp_parse@@Base+0x3674>
   1efc0:	ldr	r3, [sp, #100]	; 0x64
   1efc4:	mov	r0, sl
   1efc8:	mov	r4, r3
   1efcc:	ldr	sl, [sp, #20]
   1efd0:	mov	r9, r4
   1efd4:	str	r3, [sp, #16]
   1efd8:	mvn	r3, #0
   1efdc:	str	r3, [sp, #40]	; 0x28
   1efe0:	mov	r2, r5
   1efe4:	mov	r1, r8
   1efe8:	bl	11ad4 <strncmp@plt>
   1efec:	cmp	r0, #0
   1eff0:	bne	1f008 <argp_parse@@Base+0x3708>
   1eff4:	cmp	r9, #0
   1eff8:	moveq	r9, sl
   1effc:	movne	r3, #1
   1f000:	strne	r3, [sp, #16]
   1f004:	streq	r4, [sp, #40]	; 0x28
   1f008:	ldr	r0, [sl, #16]!
   1f00c:	add	r4, r4, #1
   1f010:	cmp	r0, #0
   1f014:	bne	1efe0 <argp_parse@@Base+0x36e0>
   1f018:	ldr	r3, [sp, #100]	; 0x64
   1f01c:	str	r0, [sp, #36]	; 0x24
   1f020:	str	r3, [sp, #44]	; 0x2c
   1f024:	b	1eea0 <argp_parse@@Base+0x35a0>
   1f028:	ldr	r3, [sp, #24]
   1f02c:	ldr	r1, [pc, #752]	; 1f324 <argp_parse@@Base+0x3a24>
   1f030:	ldr	r2, [r3]
   1f034:	ldr	r3, [r9]
   1f038:	ldr	r0, [r1]
   1f03c:	str	r3, [sp]
   1f040:	ldr	r1, [pc, #744]	; 1f330 <argp_parse@@Base+0x3a30>
   1f044:	ldr	r3, [sp, #104]	; 0x68
   1f048:	bl	1193c <fprintf@plt>
   1f04c:	ldr	r1, [sp, #96]	; 0x60
   1f050:	ldr	r2, [r9, #12]
   1f054:	mov	r3, #63	; 0x3f
   1f058:	str	r2, [r1, #8]
   1f05c:	b	1ee20 <argp_parse@@Base+0x3520>
   1f060:	ldr	r3, [sp, #92]	; 0x5c
   1f064:	cmp	r3, #0
   1f068:	bne	1f24c <argp_parse@@Base+0x394c>
   1f06c:	ldr	r3, [sp, #100]	; 0x64
   1f070:	cmp	r3, #0
   1f074:	beq	1f0a0 <argp_parse@@Base+0x37a0>
   1f078:	ldr	r3, [sp, #24]
   1f07c:	ldr	r1, [pc, #672]	; 1f324 <argp_parse@@Base+0x3a24>
   1f080:	ldr	r2, [r3]
   1f084:	ldr	r3, [sp, #96]	; 0x60
   1f088:	ldr	r0, [r1]
   1f08c:	ldr	r1, [pc, #672]	; 1f334 <argp_parse@@Base+0x3a34>
   1f090:	ldr	r3, [r3, #20]
   1f094:	str	r3, [sp]
   1f098:	ldr	r3, [sp, #104]	; 0x68
   1f09c:	bl	1193c <fprintf@plt>
   1f0a0:	ldr	r3, [sp, #96]	; 0x60
   1f0a4:	ldr	r1, [sp, #96]	; 0x60
   1f0a8:	mov	r2, #0
   1f0ac:	ldr	r3, [r3]
   1f0b0:	str	r2, [r1, #20]
   1f0b4:	add	r3, r3, #1
   1f0b8:	str	r3, [r1]
   1f0bc:	mov	r3, #63	; 0x3f
   1f0c0:	mov	r0, r3
   1f0c4:	str	r2, [r1, #8]
   1f0c8:	add	sp, sp, #52	; 0x34
   1f0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0d0:	ldr	r1, [sp, #28]
   1f0d4:	cmp	r3, r1
   1f0d8:	bge	1f178 <argp_parse@@Base+0x3878>
   1f0dc:	ldr	r1, [sp, #24]
   1f0e0:	add	r2, r2, #2
   1f0e4:	ldr	r3, [r1, r3, lsl #2]
   1f0e8:	ldr	r1, [sp, #96]	; 0x60
   1f0ec:	str	r3, [r1, #12]
   1f0f0:	str	r2, [r1]
   1f0f4:	b	1edbc <argp_parse@@Base+0x34bc>
   1f0f8:	ldr	r3, [sp, #24]
   1f0fc:	ldr	r1, [pc, #544]	; 1f324 <argp_parse@@Base+0x3a24>
   1f100:	ldr	r2, [r3]
   1f104:	ldr	r3, [sp, #96]	; 0x60
   1f108:	ldr	r0, [r1]
   1f10c:	ldr	r1, [pc, #548]	; 1f338 <argp_parse@@Base+0x3a38>
   1f110:	ldr	r3, [r3, #20]
   1f114:	str	r3, [sp]
   1f118:	ldr	r3, [sp, #104]	; 0x68
   1f11c:	bl	1193c <fprintf@plt>
   1f120:	ldr	r3, [sp, #44]	; 0x2c
   1f124:	cmp	r3, #0
   1f128:	beq	1f134 <argp_parse@@Base+0x3834>
   1f12c:	ldr	r0, [sp, #36]	; 0x24
   1f130:	bl	1ca50 <argp_parse@@Base+0x1150>
   1f134:	ldr	r3, [sp, #96]	; 0x60
   1f138:	ldr	r4, [r3, #20]
   1f13c:	mov	r0, r4
   1f140:	bl	11918 <strlen@plt>
   1f144:	ldr	r3, [sp, #96]	; 0x60
   1f148:	ldr	r1, [sp, #96]	; 0x60
   1f14c:	mov	r2, #0
   1f150:	ldr	r3, [r3]
   1f154:	str	r2, [r1, #8]
   1f158:	add	r3, r3, #1
   1f15c:	str	r3, [r1]
   1f160:	mov	r3, #63	; 0x3f
   1f164:	add	r0, r4, r0
   1f168:	str	r0, [r1, #20]
   1f16c:	mov	r0, r3
   1f170:	add	sp, sp, #52	; 0x34
   1f174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f178:	ldr	r3, [sp, #100]	; 0x64
   1f17c:	cmp	r3, #0
   1f180:	bne	1f1a8 <argp_parse@@Base+0x38a8>
   1f184:	ldr	r2, [sp, #96]	; 0x60
   1f188:	ldr	r3, [r9, #12]
   1f18c:	str	r3, [r2, #8]
   1f190:	ldr	r3, [sp, #32]
   1f194:	ldrb	r3, [r3]
   1f198:	cmp	r3, #58	; 0x3a
   1f19c:	movne	r3, #63	; 0x3f
   1f1a0:	moveq	r3, #58	; 0x3a
   1f1a4:	b	1ede0 <argp_parse@@Base+0x34e0>
   1f1a8:	ldr	r3, [sp, #24]
   1f1ac:	ldr	r1, [pc, #368]	; 1f324 <argp_parse@@Base+0x3a24>
   1f1b0:	ldr	r2, [r3]
   1f1b4:	ldr	r3, [r9]
   1f1b8:	ldr	r0, [r1]
   1f1bc:	str	r3, [sp]
   1f1c0:	ldr	r1, [pc, #372]	; 1f33c <argp_parse@@Base+0x3a3c>
   1f1c4:	ldr	r3, [sp, #104]	; 0x68
   1f1c8:	bl	1193c <fprintf@plt>
   1f1cc:	b	1f184 <argp_parse@@Base+0x3884>
   1f1d0:	mov	r0, r6
   1f1d4:	bl	1e278 <argp_parse@@Base+0x2978>
   1f1d8:	subs	r3, r0, #0
   1f1dc:	mov	r8, r3
   1f1e0:	str	r3, [sp, #36]	; 0x24
   1f1e4:	mov	r3, #1
   1f1e8:	streq	r3, [sp, #16]
   1f1ec:	beq	1ed64 <argp_parse@@Base+0x3464>
   1f1f0:	mov	r2, r6
   1f1f4:	mov	r1, #0
   1f1f8:	str	r3, [sp, #44]	; 0x2c
   1f1fc:	bl	11984 <memset@plt>
   1f200:	ldr	r2, [sp, #40]	; 0x28
   1f204:	mov	r1, #1
   1f208:	ldr	r3, [sp, #36]	; 0x24
   1f20c:	strb	r1, [r8, r2]
   1f210:	b	1ed5c <argp_parse@@Base+0x345c>
   1f214:	mov	r0, r6
   1f218:	bl	1e278 <argp_parse@@Base+0x2978>
   1f21c:	subs	r3, r0, #0
   1f220:	str	r3, [sp, #36]	; 0x24
   1f224:	beq	1f318 <argp_parse@@Base+0x3a18>
   1f228:	mov	r2, r6
   1f22c:	mov	r1, #0
   1f230:	bl	11984 <memset@plt>
   1f234:	mov	r2, #1
   1f238:	str	r2, [sp, #44]	; 0x2c
   1f23c:	ldr	r3, [sp, #36]	; 0x24
   1f240:	ldr	r2, [sp, #40]	; 0x28
   1f244:	strb	fp, [r3, r2]
   1f248:	b	1efa4 <argp_parse@@Base+0x36a4>
   1f24c:	ldr	r3, [sp, #96]	; 0x60
   1f250:	ldr	r2, [sp, #24]
   1f254:	ldr	r3, [r3]
   1f258:	ldr	r3, [r2, r3, lsl #2]
   1f25c:	ldrb	r3, [r3, #1]
   1f260:	cmp	r3, #45	; 0x2d
   1f264:	beq	1f06c <argp_parse@@Base+0x376c>
   1f268:	ldr	r3, [sp, #96]	; 0x60
   1f26c:	ldr	r0, [sp, #32]
   1f270:	ldr	r3, [r3, #20]
   1f274:	ldrb	r1, [r3]
   1f278:	bl	11930 <strchr@plt>
   1f27c:	cmp	r0, #0
   1f280:	beq	1f06c <argp_parse@@Base+0x376c>
   1f284:	mvn	r3, #0
   1f288:	b	1ede0 <argp_parse@@Base+0x34e0>
   1f28c:	str	fp, [sp, #40]	; 0x28
   1f290:	mov	r9, r4
   1f294:	b	1ee84 <argp_parse@@Base+0x3584>
   1f298:	str	fp, [sp, #40]	; 0x28
   1f29c:	mov	r9, r4
   1f2a0:	b	1ed64 <argp_parse@@Base+0x3464>
   1f2a4:	str	r8, [sp, #40]	; 0x28
   1f2a8:	mov	r9, sl
   1f2ac:	b	1efa8 <argp_parse@@Base+0x36a8>
   1f2b0:	ldr	r1, [r5]
   1f2b4:	mov	r0, #10
   1f2b8:	bl	11a38 <fputc@plt>
   1f2bc:	ldr	r0, [r5]
   1f2c0:	bl	11810 <funlockfile@plt>
   1f2c4:	b	1f120 <argp_parse@@Base+0x3820>
   1f2c8:	ldr	r2, [r9, #8]
   1f2cc:	ldr	r3, [r4, #8]
   1f2d0:	cmp	r2, r3
   1f2d4:	bne	1ee7c <argp_parse@@Base+0x357c>
   1f2d8:	ldr	r2, [r9, #12]
   1f2dc:	ldr	r3, [r4, #12]
   1f2e0:	ldr	r1, [sp, #16]
   1f2e4:	cmp	r2, r3
   1f2e8:	movne	r1, #1
   1f2ec:	str	r1, [sp, #16]
   1f2f0:	b	1ee84 <argp_parse@@Base+0x3584>
   1f2f4:	ldr	r2, [r9, #8]
   1f2f8:	ldr	r3, [r4, #8]
   1f2fc:	cmp	r2, r3
   1f300:	bne	1ed44 <argp_parse@@Base+0x3444>
   1f304:	ldr	r2, [r9, #12]
   1f308:	ldr	r3, [r4, #12]
   1f30c:	cmp	r2, r3
   1f310:	bne	1ed44 <argp_parse@@Base+0x3444>
   1f314:	b	1ed64 <argp_parse@@Base+0x3464>
   1f318:	mov	r3, #1
   1f31c:	str	r3, [sp, #16]
   1f320:	b	1efa8 <argp_parse@@Base+0x36a8>
   1f324:	andeq	r3, r3, r8, asr #11
   1f328:	andeq	r2, r2, r8, lsr #6
   1f32c:	strdeq	r2, [r2], -r8
   1f330:	andeq	r2, r2, r0, asr r3
   1f334:	andeq	r2, r2, r0, lsr r3
   1f338:	ldrdeq	r2, [r2], -r8
   1f33c:	andeq	r2, r2, r0, lsl #7
   1f340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f344:	sub	sp, sp, #36	; 0x24
   1f348:	subs	r6, r0, #0
   1f34c:	ldr	r4, [sp, #80]	; 0x50
   1f350:	ldr	r8, [r4, #4]
   1f354:	ble	1f528 <argp_parse@@Base+0x3c28>
   1f358:	mov	sl, r3
   1f35c:	ldr	r3, [r4]
   1f360:	mov	r7, r2
   1f364:	mov	r2, #0
   1f368:	cmp	r3, r2
   1f36c:	mov	r9, r1
   1f370:	str	r2, [r4, #12]
   1f374:	beq	1f5b0 <argp_parse@@Base+0x3cb0>
   1f378:	ldr	r2, [r4, #16]
   1f37c:	cmp	r2, #0
   1f380:	bne	1f534 <argp_parse@@Base+0x3c34>
   1f384:	mov	r5, #0
   1f388:	str	r3, [r4, #32]
   1f38c:	str	r3, [r4, #28]
   1f390:	str	r5, [r4, #20]
   1f394:	ldrb	r3, [r7]
   1f398:	cmp	r3, #45	; 0x2d
   1f39c:	moveq	r3, #2
   1f3a0:	addeq	r7, r7, #1
   1f3a4:	streq	r3, [r4, #24]
   1f3a8:	beq	1f3d0 <argp_parse@@Base+0x3ad0>
   1f3ac:	cmp	r3, #43	; 0x2b
   1f3b0:	streq	r5, [r4, #24]
   1f3b4:	addeq	r7, r7, #1
   1f3b8:	beq	1f3d0 <argp_parse@@Base+0x3ad0>
   1f3bc:	ldr	r3, [sp, #84]	; 0x54
   1f3c0:	cmp	r3, #0
   1f3c4:	beq	1f640 <argp_parse@@Base+0x3d40>
   1f3c8:	mov	r3, #0
   1f3cc:	str	r3, [r4, #24]
   1f3d0:	mov	r3, #1
   1f3d4:	str	r3, [r4, #16]
   1f3d8:	ldrb	r3, [r7]
   1f3dc:	cmp	r3, #58	; 0x3a
   1f3e0:	moveq	r8, #0
   1f3e4:	cmp	r5, #0
   1f3e8:	beq	1f490 <argp_parse@@Base+0x3b90>
   1f3ec:	ldrb	r3, [r5]
   1f3f0:	cmp	r3, #0
   1f3f4:	beq	1f490 <argp_parse@@Base+0x3b90>
   1f3f8:	add	r3, r5, #1
   1f3fc:	str	r3, [r4, #20]
   1f400:	ldrb	fp, [r5]
   1f404:	mov	r0, r7
   1f408:	str	r3, [sp, #28]
   1f40c:	mov	r1, fp
   1f410:	bl	11930 <strchr@plt>
   1f414:	ldrb	r1, [r5, #1]
   1f418:	ldr	r3, [sp, #28]
   1f41c:	cmp	r1, #0
   1f420:	ldreq	r1, [r4]
   1f424:	addeq	r1, r1, #1
   1f428:	streq	r1, [r4]
   1f42c:	sub	r1, fp, #58	; 0x3a
   1f430:	mov	r2, r0
   1f434:	cmp	r2, #0
   1f438:	cmpne	r1, #1
   1f43c:	mov	r0, fp
   1f440:	bls	1f580 <argp_parse@@Base+0x3c80>
   1f444:	ldrb	r1, [r2]
   1f448:	cmp	r1, #87	; 0x57
   1f44c:	ldrb	r1, [r2, #1]
   1f450:	beq	1f6cc <argp_parse@@Base+0x3dcc>
   1f454:	cmp	r1, #58	; 0x3a
   1f458:	bne	1f578 <argp_parse@@Base+0x3c78>
   1f45c:	ldrb	r2, [r2, #2]
   1f460:	cmp	r2, #58	; 0x3a
   1f464:	ldrb	r2, [r5, #1]
   1f468:	beq	1f7c4 <argp_parse@@Base+0x3ec4>
   1f46c:	cmp	r2, #0
   1f470:	beq	1f7a4 <argp_parse@@Base+0x3ea4>
   1f474:	ldr	r2, [r4]
   1f478:	str	r3, [r4, #12]
   1f47c:	add	r3, r2, #1
   1f480:	str	r3, [r4]
   1f484:	mov	r3, #0
   1f488:	str	r3, [r4, #20]
   1f48c:	b	1f578 <argp_parse@@Base+0x3c78>
   1f490:	ldr	fp, [r4]
   1f494:	ldr	r3, [r4, #32]
   1f498:	ldr	r2, [r4, #28]
   1f49c:	cmp	r3, fp
   1f4a0:	ldr	r3, [r4, #24]
   1f4a4:	strgt	fp, [r4, #32]
   1f4a8:	cmp	fp, r2
   1f4ac:	movlt	r2, fp
   1f4b0:	strlt	fp, [r4, #28]
   1f4b4:	cmp	r3, #1
   1f4b8:	beq	1f5c0 <argp_parse@@Base+0x3cc0>
   1f4bc:	cmp	r6, fp
   1f4c0:	beq	1f628 <argp_parse@@Base+0x3d28>
   1f4c4:	ldr	r3, [pc, #972]	; 1f898 <argp_parse@@Base+0x3f98>
   1f4c8:	ldr	r5, [r9, fp, lsl #2]
   1f4cc:	mov	r1, r3
   1f4d0:	mov	r0, r5
   1f4d4:	str	r3, [sp, #28]
   1f4d8:	bl	11684 <strcmp@plt>
   1f4dc:	ldr	r3, [sp, #28]
   1f4e0:	cmp	r0, #0
   1f4e4:	bne	1f550 <argp_parse@@Base+0x3c50>
   1f4e8:	ldr	r3, [r4, #28]
   1f4ec:	ldr	r2, [r4, #32]
   1f4f0:	add	fp, fp, #1
   1f4f4:	cmp	r3, r2
   1f4f8:	str	fp, [r4]
   1f4fc:	beq	1f6c0 <argp_parse@@Base+0x3dc0>
   1f500:	cmp	fp, r2
   1f504:	beq	1f518 <argp_parse@@Base+0x3c18>
   1f508:	mov	r0, r9
   1f50c:	mov	r1, r4
   1f510:	bl	1eb70 <argp_parse@@Base+0x3270>
   1f514:	ldr	r3, [r4, #28]
   1f518:	cmp	r6, r3
   1f51c:	str	r6, [r4]
   1f520:	str	r6, [r4, #32]
   1f524:	strne	r3, [r4]
   1f528:	mvn	r0, #0
   1f52c:	add	sp, sp, #36	; 0x24
   1f530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f534:	ldrb	r3, [r7]
   1f538:	ldr	r5, [r4, #20]
   1f53c:	sub	r2, r3, #43	; 0x2b
   1f540:	tst	r2, #253	; 0xfd
   1f544:	ldrbeq	r3, [r7, #1]
   1f548:	addeq	r7, r7, #1
   1f54c:	b	1f3dc <argp_parse@@Base+0x3adc>
   1f550:	ldrb	r2, [r5]
   1f554:	cmp	r2, #45	; 0x2d
   1f558:	beq	1f674 <argp_parse@@Base+0x3d74>
   1f55c:	ldr	r3, [r4, #24]
   1f560:	cmp	r3, #0
   1f564:	beq	1f528 <argp_parse@@Base+0x3c28>
   1f568:	mov	r0, #1
   1f56c:	add	fp, fp, #1
   1f570:	str	fp, [r4]
   1f574:	str	r5, [r4, #12]
   1f578:	add	sp, sp, #36	; 0x24
   1f57c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f580:	cmp	r8, #0
   1f584:	beq	1f5a0 <argp_parse@@Base+0x3ca0>
   1f588:	ldr	r1, [pc, #780]	; 1f89c <argp_parse@@Base+0x3f9c>
   1f58c:	ldr	r2, [r9]
   1f590:	mov	r3, fp
   1f594:	ldr	r0, [r1]
   1f598:	ldr	r1, [pc, #768]	; 1f8a0 <argp_parse@@Base+0x3fa0>
   1f59c:	bl	1193c <fprintf@plt>
   1f5a0:	mov	r0, #63	; 0x3f
   1f5a4:	str	fp, [r4, #8]
   1f5a8:	add	sp, sp, #36	; 0x24
   1f5ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f5b0:	mov	r2, #1
   1f5b4:	mov	r3, r2
   1f5b8:	str	r2, [r4]
   1f5bc:	b	1f384 <argp_parse@@Base+0x3a84>
   1f5c0:	ldr	r3, [r4, #32]
   1f5c4:	cmp	r3, r2
   1f5c8:	beq	1f740 <argp_parse@@Base+0x3e40>
   1f5cc:	cmp	fp, r3
   1f5d0:	beq	1f5e4 <argp_parse@@Base+0x3ce4>
   1f5d4:	mov	r1, r4
   1f5d8:	mov	r0, r9
   1f5dc:	bl	1eb70 <argp_parse@@Base+0x3270>
   1f5e0:	ldr	r3, [r4]
   1f5e4:	cmp	r6, r3
   1f5e8:	addgt	r1, r9, r3, lsl #2
   1f5ec:	bgt	1f604 <argp_parse@@Base+0x3d04>
   1f5f0:	b	1f620 <argp_parse@@Base+0x3d20>
   1f5f4:	add	r3, r3, #1
   1f5f8:	cmp	r6, r3
   1f5fc:	str	r3, [r4]
   1f600:	beq	1f660 <argp_parse@@Base+0x3d60>
   1f604:	ldr	r2, [r1], #4
   1f608:	ldrb	r0, [r2]
   1f60c:	cmp	r0, #45	; 0x2d
   1f610:	bne	1f5f4 <argp_parse@@Base+0x3cf4>
   1f614:	ldrb	r2, [r2, #1]
   1f618:	cmp	r2, #0
   1f61c:	beq	1f5f4 <argp_parse@@Base+0x3cf4>
   1f620:	mov	fp, r3
   1f624:	b	1f664 <argp_parse@@Base+0x3d64>
   1f628:	ldr	r3, [r4, #28]
   1f62c:	ldr	r6, [r4, #32]
   1f630:	mvn	r0, #0
   1f634:	cmp	r6, r3
   1f638:	strne	r3, [r4]
   1f63c:	b	1f52c <argp_parse@@Base+0x3c2c>
   1f640:	ldr	r0, [pc, #604]	; 1f8a4 <argp_parse@@Base+0x3fa4>
   1f644:	bl	11888 <getenv@plt>
   1f648:	ldr	r5, [r4, #20]
   1f64c:	cmp	r0, #0
   1f650:	bne	1f3c8 <argp_parse@@Base+0x3ac8>
   1f654:	mov	r3, #1
   1f658:	str	r3, [r4, #24]
   1f65c:	b	1f3d0 <argp_parse@@Base+0x3ad0>
   1f660:	mov	fp, r6
   1f664:	cmp	r6, fp
   1f668:	str	fp, [r4, #32]
   1f66c:	bne	1f4c4 <argp_parse@@Base+0x3bc4>
   1f670:	b	1f628 <argp_parse@@Base+0x3d28>
   1f674:	ldrb	r1, [r5, #1]
   1f678:	cmp	r1, #0
   1f67c:	beq	1f55c <argp_parse@@Base+0x3c5c>
   1f680:	cmp	sl, #0
   1f684:	beq	1f6b8 <argp_parse@@Base+0x3db8>
   1f688:	cmp	r1, #45	; 0x2d
   1f68c:	beq	1f7e8 <argp_parse@@Base+0x3ee8>
   1f690:	ldr	r3, [sp, #76]	; 0x4c
   1f694:	cmp	r3, #0
   1f698:	beq	1f6b8 <argp_parse@@Base+0x3db8>
   1f69c:	ldrb	r3, [r5, #2]
   1f6a0:	cmp	r3, #0
   1f6a4:	bne	1f754 <argp_parse@@Base+0x3e54>
   1f6a8:	mov	r0, r7
   1f6ac:	bl	11930 <strchr@plt>
   1f6b0:	cmp	r0, #0
   1f6b4:	beq	1f754 <argp_parse@@Base+0x3e54>
   1f6b8:	add	r5, r5, #1
   1f6bc:	b	1f3f8 <argp_parse@@Base+0x3af8>
   1f6c0:	mov	r3, fp
   1f6c4:	str	fp, [r4, #28]
   1f6c8:	b	1f518 <argp_parse@@Base+0x3c18>
   1f6cc:	adds	ip, sl, #0
   1f6d0:	movne	ip, #1
   1f6d4:	cmp	r1, #59	; 0x3b
   1f6d8:	movne	ip, #0
   1f6dc:	cmp	ip, #0
   1f6e0:	beq	1f454 <argp_parse@@Base+0x3b54>
   1f6e4:	ldrb	r2, [r5, #1]
   1f6e8:	cmp	r2, #0
   1f6ec:	bne	1f700 <argp_parse@@Base+0x3e00>
   1f6f0:	ldr	r3, [r4]
   1f6f4:	cmp	r6, r3
   1f6f8:	ldrne	r3, [r9, r3, lsl #2]
   1f6fc:	beq	1f844 <argp_parse@@Base+0x3f44>
   1f700:	str	r3, [r4, #20]
   1f704:	ldr	lr, [pc, #412]	; 1f8a8 <argp_parse@@Base+0x3fa8>
   1f708:	ldr	r3, [sp, #72]	; 0x48
   1f70c:	mov	ip, #0
   1f710:	str	r3, [sp]
   1f714:	str	r8, [sp, #12]
   1f718:	str	r4, [sp, #8]
   1f71c:	str	lr, [sp, #16]
   1f720:	mov	r3, sl
   1f724:	str	ip, [r4, #12]
   1f728:	mov	r2, r7
   1f72c:	mov	r1, r9
   1f730:	mov	r0, r6
   1f734:	str	ip, [sp, #4]
   1f738:	bl	1ec2c <argp_parse@@Base+0x332c>
   1f73c:	b	1f578 <argp_parse@@Base+0x3c78>
   1f740:	cmp	fp, r2
   1f744:	strne	fp, [r4, #28]
   1f748:	movne	r3, fp
   1f74c:	moveq	r3, r2
   1f750:	b	1f5e4 <argp_parse@@Base+0x3ce4>
   1f754:	ldr	r2, [sp, #76]	; 0x4c
   1f758:	add	r5, r5, #1
   1f75c:	str	r5, [r4, #20]
   1f760:	ldr	r3, [pc, #324]	; 1f8ac <argp_parse@@Base+0x3fac>
   1f764:	str	r2, [sp, #4]
   1f768:	ldr	r2, [sp, #72]	; 0x48
   1f76c:	str	r3, [sp, #16]
   1f770:	str	r2, [sp]
   1f774:	str	r8, [sp, #12]
   1f778:	str	r4, [sp, #8]
   1f77c:	mov	r3, sl
   1f780:	mov	r2, r7
   1f784:	mov	r1, r9
   1f788:	mov	r0, r6
   1f78c:	bl	1ec2c <argp_parse@@Base+0x332c>
   1f790:	cmn	r0, #1
   1f794:	bne	1f578 <argp_parse@@Base+0x3c78>
   1f798:	ldr	r3, [r4]
   1f79c:	ldr	r5, [r9, r3, lsl #2]
   1f7a0:	b	1f6b8 <argp_parse@@Base+0x3db8>
   1f7a4:	ldr	r3, [r4]
   1f7a8:	cmp	r6, r3
   1f7ac:	beq	1f824 <argp_parse@@Base+0x3f24>
   1f7b0:	ldr	r2, [r9, r3, lsl #2]
   1f7b4:	add	r3, r3, #1
   1f7b8:	str	r2, [r4, #12]
   1f7bc:	str	r3, [r4]
   1f7c0:	b	1f484 <argp_parse@@Base+0x3b84>
   1f7c4:	cmp	r2, #0
   1f7c8:	moveq	r3, r2
   1f7cc:	ldrne	r2, [r4]
   1f7d0:	str	r3, [r4, #12]
   1f7d4:	addne	r2, r2, #1
   1f7d8:	strne	r2, [r4]
   1f7dc:	mov	r2, #0
   1f7e0:	str	r2, [r4, #20]
   1f7e4:	b	1f578 <argp_parse@@Base+0x3c78>
   1f7e8:	add	r5, r5, #2
   1f7ec:	str	r5, [r4, #20]
   1f7f0:	str	r3, [sp, #16]
   1f7f4:	ldr	r3, [sp, #76]	; 0x4c
   1f7f8:	str	r8, [sp, #12]
   1f7fc:	str	r3, [sp, #4]
   1f800:	ldr	r3, [sp, #72]	; 0x48
   1f804:	str	r4, [sp, #8]
   1f808:	str	r3, [sp]
   1f80c:	mov	r2, r7
   1f810:	mov	r3, sl
   1f814:	mov	r1, r9
   1f818:	mov	r0, r6
   1f81c:	bl	1ec2c <argp_parse@@Base+0x332c>
   1f820:	b	1f578 <argp_parse@@Base+0x3c78>
   1f824:	cmp	r8, #0
   1f828:	bne	1f87c <argp_parse@@Base+0x3f7c>
   1f82c:	str	fp, [r4, #8]
   1f830:	ldrb	r0, [r7]
   1f834:	cmp	r0, #58	; 0x3a
   1f838:	movne	r0, #63	; 0x3f
   1f83c:	moveq	r0, #58	; 0x3a
   1f840:	b	1f484 <argp_parse@@Base+0x3b84>
   1f844:	cmp	r8, #0
   1f848:	beq	1f864 <argp_parse@@Base+0x3f64>
   1f84c:	ldr	r1, [pc, #72]	; 1f89c <argp_parse@@Base+0x3f9c>
   1f850:	ldr	r2, [r9]
   1f854:	mov	r3, fp
   1f858:	ldr	r0, [r1]
   1f85c:	ldr	r1, [pc, #76]	; 1f8b0 <argp_parse@@Base+0x3fb0>
   1f860:	bl	1193c <fprintf@plt>
   1f864:	str	fp, [r4, #8]
   1f868:	ldrb	r0, [r7]
   1f86c:	cmp	r0, #58	; 0x3a
   1f870:	movne	r0, #63	; 0x3f
   1f874:	moveq	r0, #58	; 0x3a
   1f878:	b	1f578 <argp_parse@@Base+0x3c78>
   1f87c:	ldr	r1, [pc, #24]	; 1f89c <argp_parse@@Base+0x3f9c>
   1f880:	ldr	r2, [r9]
   1f884:	mov	r3, fp
   1f888:	ldr	r0, [r1]
   1f88c:	ldr	r1, [pc, #28]	; 1f8b0 <argp_parse@@Base+0x3fb0>
   1f890:	bl	1193c <fprintf@plt>
   1f894:	b	1f82c <argp_parse@@Base+0x3f2c>
   1f898:	andeq	r0, r2, r4, lsl ip
   1f89c:	andeq	r3, r3, r8, asr #11
   1f8a0:			; <UNDEFINED> instruction: 0x000223bc
   1f8a4:	andeq	r2, r2, r8, lsr #7
   1f8a8:	andeq	r2, r2, r4, lsl #8
   1f8ac:			; <UNDEFINED> instruction: 0x000223b8
   1f8b0:	ldrdeq	r2, [r2], -r8
   1f8b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8b8:	sub	sp, sp, #44	; 0x2c
   1f8bc:	ldr	r7, [pc, #1572]	; 1fee8 <argp_parse@@Base+0x45e8>
   1f8c0:	ldr	r4, [pc, #1572]	; 1feec <argp_parse@@Base+0x45ec>
   1f8c4:	subs	r6, r0, #0
   1f8c8:	ldm	r7, {r5, sl}
   1f8cc:	str	r1, [sp, #32]
   1f8d0:	str	r3, [sp, #36]	; 0x24
   1f8d4:	stm	r4, {r5, sl}
   1f8d8:	ble	1fa84 <argp_parse@@Base+0x4184>
   1f8dc:	mov	r3, #0
   1f8e0:	cmp	r5, #0
   1f8e4:	mov	fp, r2
   1f8e8:	str	r3, [r4, #12]
   1f8ec:	beq	1fb40 <argp_parse@@Base+0x4240>
   1f8f0:	ldr	r3, [r4, #16]
   1f8f4:	cmp	r3, #0
   1f8f8:	bne	1fa9c <argp_parse@@Base+0x419c>
   1f8fc:	mov	r3, #0
   1f900:	str	r5, [r4, #32]
   1f904:	str	r5, [r4, #28]
   1f908:	str	r3, [r4, #20]
   1f90c:	ldrb	r2, [fp]
   1f910:	cmp	r2, #45	; 0x2d
   1f914:	beq	1fbf0 <argp_parse@@Base+0x42f0>
   1f918:	cmp	r2, #43	; 0x2b
   1f91c:	streq	r3, [r4, #24]
   1f920:	addeq	fp, fp, #1
   1f924:	moveq	r5, r3
   1f928:	beq	1f944 <argp_parse@@Base+0x4044>
   1f92c:	ldr	r2, [sp, #88]	; 0x58
   1f930:	cmp	r2, #0
   1f934:	movne	r5, r3
   1f938:	beq	1fbd0 <argp_parse@@Base+0x42d0>
   1f93c:	mov	r3, #0
   1f940:	str	r3, [r4, #24]
   1f944:	mov	r3, #1
   1f948:	str	r3, [r4, #16]
   1f94c:	ldrb	r3, [fp]
   1f950:	cmp	r3, #58	; 0x3a
   1f954:	moveq	sl, #0
   1f958:	cmp	r5, #0
   1f95c:	beq	1f9e0 <argp_parse@@Base+0x40e0>
   1f960:	ldrb	r3, [r5]
   1f964:	cmp	r3, #0
   1f968:	beq	1f9e0 <argp_parse@@Base+0x40e0>
   1f96c:	add	r9, r5, #1
   1f970:	str	r9, [r4, #20]
   1f974:	ldrb	r8, [r5]
   1f978:	mov	r0, fp
   1f97c:	mov	r1, r8
   1f980:	bl	11930 <strchr@plt>
   1f984:	ldrb	r3, [r5, #1]
   1f988:	str	r8, [sp, #28]
   1f98c:	cmp	r3, #0
   1f990:	ldreq	r3, [r4]
   1f994:	addeq	r3, r3, #1
   1f998:	streq	r3, [r4]
   1f99c:	sub	r3, r8, #58	; 0x3a
   1f9a0:	cmp	r0, #0
   1f9a4:	cmpne	r3, #1
   1f9a8:	bls	1fb04 <argp_parse@@Base+0x4204>
   1f9ac:	ldrb	r3, [r0]
   1f9b0:	cmp	r3, #87	; 0x57
   1f9b4:	ldrb	r3, [r0, #1]
   1f9b8:	beq	1fc78 <argp_parse@@Base+0x4378>
   1f9bc:	cmp	r3, #58	; 0x3a
   1f9c0:	beq	1fd1c <argp_parse@@Base+0x441c>
   1f9c4:	ldr	r3, [r4, #8]
   1f9c8:	mov	r0, r8
   1f9cc:	ldr	r9, [r4, #12]
   1f9d0:	ldr	r5, [r4]
   1f9d4:	str	r3, [sp, #28]
   1f9d8:	mov	r2, r3
   1f9dc:	b	1faec <argp_parse@@Base+0x41ec>
   1f9e0:	ldr	r5, [r4]
   1f9e4:	ldr	r8, [r4, #32]
   1f9e8:	ldr	r3, [r4, #28]
   1f9ec:	cmp	r8, r5
   1f9f0:	ldr	r2, [r4, #24]
   1f9f4:	movgt	r8, r5
   1f9f8:	strgt	r5, [r4, #32]
   1f9fc:	cmp	r5, r3
   1fa00:	movlt	r3, r5
   1fa04:	strlt	r5, [r4, #28]
   1fa08:	cmp	r2, #1
   1fa0c:	beq	1fb50 <argp_parse@@Base+0x4250>
   1fa10:	cmp	r6, r5
   1fa14:	beq	1fbb8 <argp_parse@@Base+0x42b8>
   1fa18:	ldr	r3, [sp, #32]
   1fa1c:	ldr	r9, [r3, r5, lsl #2]
   1fa20:	ldr	r3, [pc, #1224]	; 1fef0 <argp_parse@@Base+0x45f0>
   1fa24:	mov	r0, r9
   1fa28:	mov	r1, r3
   1fa2c:	str	r3, [sp, #28]
   1fa30:	bl	11684 <strcmp@plt>
   1fa34:	ldr	r3, [sp, #28]
   1fa38:	cmp	r0, #0
   1fa3c:	bne	1fab8 <argp_parse@@Base+0x41b8>
   1fa40:	add	r3, r5, #1
   1fa44:	ldr	r5, [r4, #28]
   1fa48:	str	r3, [r4]
   1fa4c:	cmp	r5, r8
   1fa50:	beq	1fc6c <argp_parse@@Base+0x436c>
   1fa54:	cmp	r3, r8
   1fa58:	beq	1fa6c <argp_parse@@Base+0x416c>
   1fa5c:	ldr	r0, [sp, #32]
   1fa60:	ldr	r1, [pc, #1156]	; 1feec <argp_parse@@Base+0x45ec>
   1fa64:	bl	1eb70 <argp_parse@@Base+0x3270>
   1fa68:	ldr	r5, [r4, #28]
   1fa6c:	mov	r8, r6
   1fa70:	cmp	r8, r5
   1fa74:	str	r6, [r4, #32]
   1fa78:	str	r6, [r4]
   1fa7c:	moveq	r5, r6
   1fa80:	bne	1fbc8 <argp_parse@@Base+0x42c8>
   1fa84:	ldr	r3, [r4, #8]
   1fa88:	ldr	r9, [r4, #12]
   1fa8c:	str	r3, [sp, #28]
   1fa90:	mvn	r0, #0
   1fa94:	mov	r2, r3
   1fa98:	b	1faec <argp_parse@@Base+0x41ec>
   1fa9c:	ldrb	r3, [r2]
   1faa0:	ldr	r5, [r4, #20]
   1faa4:	sub	r2, r3, #43	; 0x2b
   1faa8:	tst	r2, #253	; 0xfd
   1faac:	ldrbeq	r3, [fp, #1]
   1fab0:	addeq	fp, fp, #1
   1fab4:	b	1f950 <argp_parse@@Base+0x4050>
   1fab8:	ldrb	r2, [r9]
   1fabc:	cmp	r2, #45	; 0x2d
   1fac0:	beq	1fc1c <argp_parse@@Base+0x431c>
   1fac4:	ldr	r3, [r4, #24]
   1fac8:	cmp	r3, #0
   1facc:	beq	1fa84 <argp_parse@@Base+0x4184>
   1fad0:	ldr	r3, [r4, #8]
   1fad4:	mov	r0, #1
   1fad8:	mov	r2, r3
   1fadc:	add	r5, r5, #1
   1fae0:	str	r5, [r4]
   1fae4:	str	r9, [r4, #12]
   1fae8:	str	r3, [sp, #28]
   1faec:	ldr	r3, [pc, #1024]	; 1fef4 <argp_parse@@Base+0x45f4>
   1faf0:	str	r5, [r7]
   1faf4:	str	r2, [r7, #8]
   1faf8:	str	r9, [r3]
   1fafc:	add	sp, sp, #44	; 0x2c
   1fb00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb04:	cmp	sl, #0
   1fb08:	beq	1fb28 <argp_parse@@Base+0x4228>
   1fb0c:	ldr	r1, [pc, #996]	; 1fef8 <argp_parse@@Base+0x45f8>
   1fb10:	ldr	r3, [sp, #32]
   1fb14:	ldr	r0, [r1]
   1fb18:	ldr	r2, [r3]
   1fb1c:	ldr	r1, [pc, #984]	; 1fefc <argp_parse@@Base+0x45fc>
   1fb20:	mov	r3, r8
   1fb24:	bl	1193c <fprintf@plt>
   1fb28:	str	r8, [r4, #8]
   1fb2c:	ldr	r5, [r4]
   1fb30:	ldr	r9, [r4, #12]
   1fb34:	mov	r0, #63	; 0x3f
   1fb38:	ldr	r2, [sp, #28]
   1fb3c:	b	1faec <argp_parse@@Base+0x41ec>
   1fb40:	mov	r3, #1
   1fb44:	mov	r5, r3
   1fb48:	str	r3, [r4]
   1fb4c:	b	1f8fc <argp_parse@@Base+0x3ffc>
   1fb50:	cmp	r8, r3
   1fb54:	beq	1fd0c <argp_parse@@Base+0x440c>
   1fb58:	cmp	r5, r8
   1fb5c:	beq	1fb70 <argp_parse@@Base+0x4270>
   1fb60:	ldr	r1, [pc, #900]	; 1feec <argp_parse@@Base+0x45ec>
   1fb64:	ldr	r0, [sp, #32]
   1fb68:	bl	1eb70 <argp_parse@@Base+0x3270>
   1fb6c:	ldr	r8, [r4]
   1fb70:	cmp	r6, r8
   1fb74:	ldrgt	r3, [sp, #32]
   1fb78:	addgt	r2, r3, r8, lsl #2
   1fb7c:	bgt	1fb94 <argp_parse@@Base+0x4294>
   1fb80:	b	1fbb0 <argp_parse@@Base+0x42b0>
   1fb84:	add	r8, r8, #1
   1fb88:	cmp	r6, r8
   1fb8c:	str	r8, [r4]
   1fb90:	beq	1fc04 <argp_parse@@Base+0x4304>
   1fb94:	ldr	r3, [r2], #4
   1fb98:	ldrb	r1, [r3]
   1fb9c:	cmp	r1, #45	; 0x2d
   1fba0:	bne	1fb84 <argp_parse@@Base+0x4284>
   1fba4:	ldrb	r3, [r3, #1]
   1fba8:	cmp	r3, #0
   1fbac:	beq	1fb84 <argp_parse@@Base+0x4284>
   1fbb0:	mov	r5, r8
   1fbb4:	b	1fc08 <argp_parse@@Base+0x4308>
   1fbb8:	ldr	r5, [r4, #28]
   1fbbc:	cmp	r8, r5
   1fbc0:	moveq	r5, r6
   1fbc4:	beq	1fa84 <argp_parse@@Base+0x4184>
   1fbc8:	str	r5, [r4]
   1fbcc:	b	1fa84 <argp_parse@@Base+0x4184>
   1fbd0:	ldr	r0, [pc, #808]	; 1ff00 <argp_parse@@Base+0x4600>
   1fbd4:	bl	11888 <getenv@plt>
   1fbd8:	ldr	r5, [r4, #20]
   1fbdc:	cmp	r0, #0
   1fbe0:	bne	1f93c <argp_parse@@Base+0x403c>
   1fbe4:	mov	r3, #1
   1fbe8:	str	r3, [r4, #24]
   1fbec:	b	1f944 <argp_parse@@Base+0x4044>
   1fbf0:	mov	r2, #2
   1fbf4:	add	fp, fp, #1
   1fbf8:	mov	r5, r3
   1fbfc:	str	r2, [r4, #24]
   1fc00:	b	1f944 <argp_parse@@Base+0x4044>
   1fc04:	mov	r5, r6
   1fc08:	cmp	r6, r5
   1fc0c:	mov	r8, r5
   1fc10:	str	r5, [r4, #32]
   1fc14:	bne	1fa18 <argp_parse@@Base+0x4118>
   1fc18:	b	1fbb8 <argp_parse@@Base+0x42b8>
   1fc1c:	ldrb	r1, [r9, #1]
   1fc20:	cmp	r1, #0
   1fc24:	beq	1fac4 <argp_parse@@Base+0x41c4>
   1fc28:	ldr	r2, [sp, #36]	; 0x24
   1fc2c:	cmp	r2, #0
   1fc30:	beq	1fc64 <argp_parse@@Base+0x4364>
   1fc34:	cmp	r1, #45	; 0x2d
   1fc38:	beq	1fe18 <argp_parse@@Base+0x4518>
   1fc3c:	ldr	r3, [sp, #84]	; 0x54
   1fc40:	cmp	r3, #0
   1fc44:	beq	1fc64 <argp_parse@@Base+0x4364>
   1fc48:	ldrb	r3, [r9, #2]
   1fc4c:	cmp	r3, #0
   1fc50:	bne	1fd60 <argp_parse@@Base+0x4460>
   1fc54:	mov	r0, fp
   1fc58:	bl	11930 <strchr@plt>
   1fc5c:	cmp	r0, #0
   1fc60:	beq	1fd60 <argp_parse@@Base+0x4460>
   1fc64:	add	r5, r9, #1
   1fc68:	b	1f96c <argp_parse@@Base+0x406c>
   1fc6c:	mov	r5, r3
   1fc70:	str	r3, [r4, #28]
   1fc74:	b	1fa6c <argp_parse@@Base+0x416c>
   1fc78:	ldr	r1, [sp, #36]	; 0x24
   1fc7c:	sub	r2, r3, #59	; 0x3b
   1fc80:	cmp	r1, #0
   1fc84:	clz	r2, r2
   1fc88:	lsr	r2, r2, #5
   1fc8c:	moveq	r2, #0
   1fc90:	cmp	r2, #0
   1fc94:	beq	1f9bc <argp_parse@@Base+0x40bc>
   1fc98:	ldrb	r3, [r5, #1]
   1fc9c:	cmp	r3, #0
   1fca0:	bne	1fcb8 <argp_parse@@Base+0x43b8>
   1fca4:	ldr	r3, [r4]
   1fca8:	cmp	r6, r3
   1fcac:	beq	1fe80 <argp_parse@@Base+0x4580>
   1fcb0:	ldr	r2, [sp, #32]
   1fcb4:	ldr	r9, [r2, r3, lsl #2]
   1fcb8:	ldr	r3, [sp, #80]	; 0x50
   1fcbc:	ldr	r1, [sp, #32]
   1fcc0:	str	r3, [sp]
   1fcc4:	ldr	r3, [sp, #36]	; 0x24
   1fcc8:	ldr	lr, [pc, #564]	; 1ff04 <argp_parse@@Base+0x4604>
   1fccc:	mov	r2, fp
   1fcd0:	mov	r0, r6
   1fcd4:	mov	ip, #0
   1fcd8:	str	sl, [sp, #12]
   1fcdc:	str	r4, [sp, #8]
   1fce0:	str	lr, [sp, #16]
   1fce4:	str	ip, [sp, #4]
   1fce8:	str	r9, [r4, #20]
   1fcec:	str	ip, [r4, #12]
   1fcf0:	bl	1ec2c <argp_parse@@Base+0x332c>
   1fcf4:	ldr	r3, [r4, #8]
   1fcf8:	ldr	r5, [r4]
   1fcfc:	ldr	r9, [r4, #12]
   1fd00:	str	r3, [sp, #28]
   1fd04:	mov	r2, r3
   1fd08:	b	1faec <argp_parse@@Base+0x41ec>
   1fd0c:	cmp	r5, r8
   1fd10:	movne	r8, r5
   1fd14:	strne	r5, [r4, #28]
   1fd18:	b	1fb70 <argp_parse@@Base+0x4270>
   1fd1c:	ldrb	r3, [r0, #2]
   1fd20:	cmp	r3, #58	; 0x3a
   1fd24:	ldrb	r3, [r5, #1]
   1fd28:	beq	1fde0 <argp_parse@@Base+0x44e0>
   1fd2c:	cmp	r3, #0
   1fd30:	ldr	r5, [r4]
   1fd34:	beq	1fdb4 <argp_parse@@Base+0x44b4>
   1fd38:	ldr	r3, [r4, #8]
   1fd3c:	mov	r0, r8
   1fd40:	add	r5, r5, #1
   1fd44:	str	r9, [r4, #12]
   1fd48:	str	r5, [r4]
   1fd4c:	str	r3, [sp, #28]
   1fd50:	mov	r3, #0
   1fd54:	str	r3, [r4, #20]
   1fd58:	ldr	r2, [sp, #28]
   1fd5c:	b	1faec <argp_parse@@Base+0x41ec>
   1fd60:	ldr	r2, [sp, #84]	; 0x54
   1fd64:	ldr	r3, [pc, #412]	; 1ff08 <argp_parse@@Base+0x4608>
   1fd68:	str	r2, [sp, #4]
   1fd6c:	ldr	r2, [sp, #80]	; 0x50
   1fd70:	str	r3, [sp, #16]
   1fd74:	str	r2, [sp]
   1fd78:	add	r9, r9, #1
   1fd7c:	str	sl, [sp, #12]
   1fd80:	str	r4, [sp, #8]
   1fd84:	ldr	r3, [sp, #36]	; 0x24
   1fd88:	mov	r2, fp
   1fd8c:	ldr	r1, [sp, #32]
   1fd90:	mov	r0, r6
   1fd94:	str	r9, [r4, #20]
   1fd98:	bl	1ec2c <argp_parse@@Base+0x332c>
   1fd9c:	cmn	r0, #1
   1fda0:	bne	1fcf4 <argp_parse@@Base+0x43f4>
   1fda4:	ldr	r3, [r4]
   1fda8:	ldr	r2, [sp, #32]
   1fdac:	ldr	r9, [r2, r3, lsl #2]
   1fdb0:	b	1fc64 <argp_parse@@Base+0x4364>
   1fdb4:	cmp	r6, r5
   1fdb8:	beq	1fe50 <argp_parse@@Base+0x4550>
   1fdbc:	ldr	r3, [r4, #8]
   1fdc0:	mov	r0, r8
   1fdc4:	str	r3, [sp, #28]
   1fdc8:	ldr	r3, [sp, #32]
   1fdcc:	ldr	r9, [r3, r5, lsl #2]
   1fdd0:	add	r5, r5, #1
   1fdd4:	str	r9, [r4, #12]
   1fdd8:	str	r5, [r4]
   1fddc:	b	1fd50 <argp_parse@@Base+0x4450>
   1fde0:	cmp	r3, #0
   1fde4:	moveq	r9, r3
   1fde8:	ldrne	r5, [r4]
   1fdec:	mov	r3, #0
   1fdf0:	str	r3, [r4, #20]
   1fdf4:	ldr	r3, [r4, #8]
   1fdf8:	addne	r5, r5, #1
   1fdfc:	ldreq	r5, [r4]
   1fe00:	strne	r5, [r4]
   1fe04:	str	r9, [r4, #12]
   1fe08:	mov	r0, r8
   1fe0c:	str	r3, [sp, #28]
   1fe10:	mov	r2, r3
   1fe14:	b	1faec <argp_parse@@Base+0x41ec>
   1fe18:	str	r3, [sp, #16]
   1fe1c:	ldr	r3, [sp, #84]	; 0x54
   1fe20:	add	r9, r9, #2
   1fe24:	str	r3, [sp, #4]
   1fe28:	ldr	r3, [sp, #80]	; 0x50
   1fe2c:	str	sl, [sp, #12]
   1fe30:	str	r3, [sp]
   1fe34:	str	r4, [sp, #8]
   1fe38:	mov	r3, r2
   1fe3c:	ldr	r1, [sp, #32]
   1fe40:	mov	r2, fp
   1fe44:	mov	r0, r6
   1fe48:	str	r9, [r4, #20]
   1fe4c:	b	1fcf0 <argp_parse@@Base+0x43f0>
   1fe50:	cmp	sl, #0
   1fe54:	bne	1fec8 <argp_parse@@Base+0x45c8>
   1fe58:	str	r8, [r4, #8]
   1fe5c:	ldrb	r8, [fp]
   1fe60:	cmp	r8, #58	; 0x3a
   1fe64:	moveq	r0, r8
   1fe68:	ldreq	r5, [r4]
   1fe6c:	ldreq	r9, [r4, #12]
   1fe70:	ldrne	r5, [r4]
   1fe74:	ldrne	r9, [r4, #12]
   1fe78:	movne	r0, #63	; 0x3f
   1fe7c:	b	1fd50 <argp_parse@@Base+0x4450>
   1fe80:	cmp	sl, #0
   1fe84:	beq	1fea4 <argp_parse@@Base+0x45a4>
   1fe88:	ldr	r1, [pc, #104]	; 1fef8 <argp_parse@@Base+0x45f8>
   1fe8c:	ldr	r3, [sp, #32]
   1fe90:	ldr	r0, [r1]
   1fe94:	ldr	r2, [r3]
   1fe98:	ldr	r1, [pc, #108]	; 1ff0c <argp_parse@@Base+0x460c>
   1fe9c:	mov	r3, r8
   1fea0:	bl	1193c <fprintf@plt>
   1fea4:	str	r8, [r4, #8]
   1fea8:	ldrb	r8, [fp]
   1feac:	ldr	r5, [r4]
   1feb0:	ldr	r9, [r4, #12]
   1feb4:	cmp	r8, #58	; 0x3a
   1feb8:	movne	r0, #63	; 0x3f
   1febc:	moveq	r0, #58	; 0x3a
   1fec0:	ldr	r2, [sp, #28]
   1fec4:	b	1faec <argp_parse@@Base+0x41ec>
   1fec8:	ldr	r3, [sp, #32]
   1fecc:	ldr	r1, [pc, #36]	; 1fef8 <argp_parse@@Base+0x45f8>
   1fed0:	ldr	r2, [r3]
   1fed4:	ldr	r0, [r1]
   1fed8:	mov	r3, r8
   1fedc:	ldr	r1, [pc, #40]	; 1ff0c <argp_parse@@Base+0x460c>
   1fee0:	bl	1193c <fprintf@plt>
   1fee4:	b	1fe58 <argp_parse@@Base+0x4558>
   1fee8:			; <UNDEFINED> instruction: 0x000335b0
   1feec:	andeq	r3, r3, r0, lsr #20
   1fef0:	andeq	r0, r2, r4, lsl ip
   1fef4:	muleq	r3, ip, r0
   1fef8:	andeq	r3, r3, r8, asr #11
   1fefc:			; <UNDEFINED> instruction: 0x000223bc
   1ff00:	andeq	r2, r2, r8, lsr #7
   1ff04:	andeq	r2, r2, r4, lsl #8
   1ff08:			; <UNDEFINED> instruction: 0x000223b8
   1ff0c:	ldrdeq	r2, [r2], -r8
   1ff10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ff14:	sub	sp, sp, #20
   1ff18:	ldr	r7, [pc, #1052]	; 2033c <argp_parse@@Base+0x4a3c>
   1ff1c:	ldr	r4, [pc, #1052]	; 20340 <argp_parse@@Base+0x4a40>
   1ff20:	subs	r6, r0, #0
   1ff24:	ldr	r5, [r7]
   1ff28:	ldr	r3, [r7, #4]
   1ff2c:	str	r1, [sp, #4]
   1ff30:	str	r5, [r4]
   1ff34:	str	r3, [r4, #4]
   1ff38:	ble	20210 <argp_parse@@Base+0x4910>
   1ff3c:	mov	sl, r2
   1ff40:	cmp	r5, #0
   1ff44:	mov	r2, #0
   1ff48:	str	r2, [r4, #12]
   1ff4c:	beq	1fff8 <argp_parse@@Base+0x46f8>
   1ff50:	ldr	r2, [r4, #16]
   1ff54:	cmp	r2, #0
   1ff58:	beq	20004 <argp_parse@@Base+0x4704>
   1ff5c:	ldrb	r2, [sl]
   1ff60:	sub	r1, r2, #43	; 0x2b
   1ff64:	tst	r1, #253	; 0xfd
   1ff68:	ldrbeq	r2, [sl, #1]
   1ff6c:	addeq	sl, sl, #1
   1ff70:	cmp	r2, #58	; 0x3a
   1ff74:	ldr	r2, [r4, #20]
   1ff78:	moveq	r3, #0
   1ff7c:	cmp	r2, #0
   1ff80:	beq	20058 <argp_parse@@Base+0x4758>
   1ff84:	ldrb	r1, [r2]
   1ff88:	cmp	r1, #0
   1ff8c:	beq	20058 <argp_parse@@Base+0x4758>
   1ff90:	add	r9, r2, #1
   1ff94:	str	r9, [r4, #20]
   1ff98:	ldrb	r8, [r2]
   1ff9c:	mov	r0, sl
   1ffa0:	str	r3, [sp, #12]
   1ffa4:	mov	r1, r8
   1ffa8:	str	r2, [sp, #8]
   1ffac:	bl	11930 <strchr@plt>
   1ffb0:	ldr	r2, [sp, #8]
   1ffb4:	mov	fp, r8
   1ffb8:	ldr	r3, [sp, #12]
   1ffbc:	ldrb	r1, [r2, #1]
   1ffc0:	cmp	r1, #0
   1ffc4:	addeq	r5, r5, #1
   1ffc8:	sub	r1, r8, #58	; 0x3a
   1ffcc:	streq	r5, [r4]
   1ffd0:	cmp	r0, #0
   1ffd4:	cmpne	r1, #1
   1ffd8:	bls	20144 <argp_parse@@Base+0x4844>
   1ffdc:	ldrb	r1, [r0, #1]
   1ffe0:	cmp	r1, #58	; 0x3a
   1ffe4:	beq	20250 <argp_parse@@Base+0x4950>
   1ffe8:	mov	r0, r8
   1ffec:	ldr	r9, [r4, #12]
   1fff0:	ldr	fp, [r4, #8]
   1fff4:	b	2012c <argp_parse@@Base+0x482c>
   1fff8:	mov	r2, #1
   1fffc:	mov	r5, r2
   20000:	str	r2, [r4]
   20004:	mov	r2, #0
   20008:	str	r5, [r4, #32]
   2000c:	str	r5, [r4, #28]
   20010:	str	r2, [r4, #20]
   20014:	ldrb	r1, [sl]
   20018:	cmp	r1, #45	; 0x2d
   2001c:	moveq	r1, #2
   20020:	addeq	sl, sl, #1
   20024:	streq	r1, [r4, #24]
   20028:	beq	20044 <argp_parse@@Base+0x4744>
   2002c:	cmp	r1, #43	; 0x2b
   20030:	addeq	sl, sl, #1
   20034:	moveq	r1, r2
   20038:	movne	r1, r2
   2003c:	streq	r2, [r4, #24]
   20040:	strne	r2, [r4, #24]
   20044:	mov	r2, #1
   20048:	str	r2, [r4, #16]
   2004c:	ldrb	r2, [sl]
   20050:	cmp	r2, #58	; 0x3a
   20054:	beq	2017c <argp_parse@@Base+0x487c>
   20058:	add	r1, r4, #24
   2005c:	ldm	r1, {r1, r2, r8}
   20060:	cmp	r8, r5
   20064:	movgt	r8, r5
   20068:	strgt	r5, [r4, #32]
   2006c:	cmp	r5, r2
   20070:	movlt	r2, r5
   20074:	strlt	r5, [r4, #28]
   20078:	cmp	r1, #1
   2007c:	beq	20190 <argp_parse@@Base+0x4890>
   20080:	cmp	r6, r5
   20084:	str	r3, [sp, #8]
   20088:	beq	20200 <argp_parse@@Base+0x4900>
   2008c:	ldr	fp, [sp, #4]
   20090:	ldr	r1, [pc, #684]	; 20344 <argp_parse@@Base+0x4a44>
   20094:	ldr	r9, [fp, r5, lsl #2]
   20098:	mov	r0, r9
   2009c:	bl	11684 <strcmp@plt>
   200a0:	ldr	r3, [sp, #8]
   200a4:	cmp	r0, #0
   200a8:	bne	20100 <argp_parse@@Base+0x4800>
   200ac:	add	r3, r5, #1
   200b0:	ldr	r5, [r4, #28]
   200b4:	str	r3, [r4]
   200b8:	cmp	r5, r8
   200bc:	beq	20244 <argp_parse@@Base+0x4944>
   200c0:	cmp	r3, r8
   200c4:	beq	200d8 <argp_parse@@Base+0x47d8>
   200c8:	mov	r0, fp
   200cc:	ldr	r1, [pc, #620]	; 20340 <argp_parse@@Base+0x4a40>
   200d0:	bl	1eb70 <argp_parse@@Base+0x3270>
   200d4:	ldr	r5, [r4, #28]
   200d8:	mov	r8, r6
   200dc:	cmp	r8, r5
   200e0:	str	r6, [r4, #32]
   200e4:	str	r6, [r4]
   200e8:	beq	2020c <argp_parse@@Base+0x490c>
   200ec:	str	r5, [r4]
   200f0:	ldr	r9, [r4, #12]
   200f4:	ldr	fp, [r4, #8]
   200f8:	mvn	r0, #0
   200fc:	b	2012c <argp_parse@@Base+0x482c>
   20100:	ldrb	r2, [r9]
   20104:	cmp	r2, #45	; 0x2d
   20108:	beq	20230 <argp_parse@@Base+0x4930>
   2010c:	ldr	r3, [r4, #24]
   20110:	cmp	r3, #0
   20114:	beq	20210 <argp_parse@@Base+0x4910>
   20118:	ldr	fp, [r4, #8]
   2011c:	mov	r0, #1
   20120:	add	r5, r5, #1
   20124:	str	r5, [r4]
   20128:	str	r9, [r4, #12]
   2012c:	ldr	r3, [pc, #532]	; 20348 <argp_parse@@Base+0x4a48>
   20130:	str	r5, [r7]
   20134:	str	fp, [r7, #8]
   20138:	str	r9, [r3]
   2013c:	add	sp, sp, #20
   20140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20144:	cmp	r3, #0
   20148:	beq	2016c <argp_parse@@Base+0x486c>
   2014c:	ldr	r3, [sp, #4]
   20150:	ldr	r1, [pc, #500]	; 2034c <argp_parse@@Base+0x4a4c>
   20154:	ldr	r2, [r3]
   20158:	ldr	r0, [r1]
   2015c:	mov	r3, r8
   20160:	ldr	r1, [pc, #488]	; 20350 <argp_parse@@Base+0x4a50>
   20164:	bl	1193c <fprintf@plt>
   20168:	ldr	r5, [r4]
   2016c:	str	r8, [r4, #8]
   20170:	ldr	r9, [r4, #12]
   20174:	mov	r0, #63	; 0x3f
   20178:	b	2012c <argp_parse@@Base+0x482c>
   2017c:	cmp	r1, #1
   20180:	mov	r8, r5
   20184:	mov	r2, r5
   20188:	mov	r3, #0
   2018c:	bne	20080 <argp_parse@@Base+0x4780>
   20190:	cmp	r2, r8
   20194:	beq	20288 <argp_parse@@Base+0x4988>
   20198:	cmp	r5, r8
   2019c:	beq	201b8 <argp_parse@@Base+0x48b8>
   201a0:	ldr	r1, [pc, #408]	; 20340 <argp_parse@@Base+0x4a40>
   201a4:	ldr	r0, [sp, #4]
   201a8:	str	r3, [sp, #8]
   201ac:	bl	1eb70 <argp_parse@@Base+0x3270>
   201b0:	ldr	r8, [r4]
   201b4:	ldr	r3, [sp, #8]
   201b8:	cmp	r6, r8
   201bc:	ldrgt	r2, [sp, #4]
   201c0:	addgt	r1, r2, r8, lsl #2
   201c4:	bgt	201dc <argp_parse@@Base+0x48dc>
   201c8:	b	201f8 <argp_parse@@Base+0x48f8>
   201cc:	add	r8, r8, #1
   201d0:	cmp	r6, r8
   201d4:	str	r8, [r4]
   201d8:	beq	20220 <argp_parse@@Base+0x4920>
   201dc:	ldr	r2, [r1], #4
   201e0:	ldrb	r0, [r2]
   201e4:	cmp	r0, #45	; 0x2d
   201e8:	bne	201cc <argp_parse@@Base+0x48cc>
   201ec:	ldrb	r2, [r2, #1]
   201f0:	cmp	r2, #0
   201f4:	beq	201cc <argp_parse@@Base+0x48cc>
   201f8:	mov	r5, r8
   201fc:	b	20224 <argp_parse@@Base+0x4924>
   20200:	ldr	r5, [r4, #28]
   20204:	cmp	r8, r5
   20208:	bne	200ec <argp_parse@@Base+0x47ec>
   2020c:	mov	r5, r6
   20210:	ldr	r9, [r4, #12]
   20214:	ldr	fp, [r4, #8]
   20218:	mvn	r0, #0
   2021c:	b	2012c <argp_parse@@Base+0x482c>
   20220:	mov	r5, r6
   20224:	mov	r8, r5
   20228:	str	r5, [r4, #32]
   2022c:	b	20080 <argp_parse@@Base+0x4780>
   20230:	ldrb	r2, [r9, #1]
   20234:	cmp	r2, #0
   20238:	beq	2010c <argp_parse@@Base+0x480c>
   2023c:	add	r2, r9, #1
   20240:	b	1ff90 <argp_parse@@Base+0x4690>
   20244:	mov	r5, r3
   20248:	str	r3, [r4, #28]
   2024c:	b	200d8 <argp_parse@@Base+0x47d8>
   20250:	ldrb	r1, [r0, #2]
   20254:	cmp	r1, #58	; 0x3a
   20258:	beq	202c4 <argp_parse@@Base+0x49c4>
   2025c:	ldrb	r2, [r2, #1]
   20260:	cmp	r2, #0
   20264:	beq	20298 <argp_parse@@Base+0x4998>
   20268:	ldr	fp, [r4, #8]
   2026c:	mov	r0, r8
   20270:	add	r5, r5, #1
   20274:	str	r5, [r4]
   20278:	str	r9, [r4, #12]
   2027c:	mov	r3, #0
   20280:	str	r3, [r4, #20]
   20284:	b	2012c <argp_parse@@Base+0x482c>
   20288:	cmp	r5, r8
   2028c:	movne	r8, r5
   20290:	strne	r5, [r4, #28]
   20294:	b	201b8 <argp_parse@@Base+0x48b8>
   20298:	cmp	r6, r5
   2029c:	beq	202f0 <argp_parse@@Base+0x49f0>
   202a0:	ldr	r2, [sp, #4]
   202a4:	add	r3, r5, #1
   202a8:	ldr	fp, [r4, #8]
   202ac:	ldr	r9, [r2, r5, lsl #2]
   202b0:	mov	r0, r8
   202b4:	mov	r5, r3
   202b8:	str	r9, [r4, #12]
   202bc:	str	r3, [r4]
   202c0:	b	2027c <argp_parse@@Base+0x497c>
   202c4:	ldrb	r3, [r2, #1]
   202c8:	mov	r0, r8
   202cc:	ldr	fp, [r4, #8]
   202d0:	cmp	r3, #0
   202d4:	moveq	r9, r3
   202d8:	addne	r5, r5, #1
   202dc:	mov	r3, #0
   202e0:	strne	r5, [r4]
   202e4:	str	r9, [r4, #12]
   202e8:	str	r3, [r4, #20]
   202ec:	b	2012c <argp_parse@@Base+0x482c>
   202f0:	cmp	r3, #0
   202f4:	beq	20318 <argp_parse@@Base+0x4a18>
   202f8:	ldr	r3, [sp, #4]
   202fc:	ldr	r1, [pc, #72]	; 2034c <argp_parse@@Base+0x4a4c>
   20300:	ldr	r2, [r3]
   20304:	ldr	r0, [r1]
   20308:	mov	r3, r8
   2030c:	ldr	r1, [pc, #64]	; 20354 <argp_parse@@Base+0x4a54>
   20310:	bl	1193c <fprintf@plt>
   20314:	ldr	r6, [r4]
   20318:	str	r8, [r4, #8]
   2031c:	ldrb	r8, [sl]
   20320:	mov	r5, r6
   20324:	cmp	r8, #58	; 0x3a
   20328:	moveq	r0, r8
   2032c:	ldreq	r9, [r4, #12]
   20330:	ldrne	r9, [r4, #12]
   20334:	movne	r0, #63	; 0x3f
   20338:	b	2027c <argp_parse@@Base+0x497c>
   2033c:			; <UNDEFINED> instruction: 0x000335b0
   20340:	andeq	r3, r3, r0, lsr #20
   20344:	andeq	r0, r2, r4, lsl ip
   20348:	muleq	r3, ip, r0
   2034c:	andeq	r3, r3, r8, asr #11
   20350:			; <UNDEFINED> instruction: 0x000223bc
   20354:	ldrdeq	r2, [r2], -r8
   20358:	push	{r4, r5, r6, lr}
   2035c:	subs	r4, r2, #0
   20360:	mov	r6, r0
   20364:	mov	r5, r1
   20368:	beq	20394 <argp_parse@@Base+0x4a94>
   2036c:	mov	r1, r4
   20370:	mvn	r0, #0
   20374:	bl	203a4 <argp_parse@@Base+0x4aa4>
   20378:	cmp	r0, r5
   2037c:	bcs	20394 <argp_parse@@Base+0x4a94>
   20380:	bl	11948 <__errno_location@plt>
   20384:	mov	r3, #12
   20388:	str	r3, [r0]
   2038c:	mov	r0, #0
   20390:	pop	{r4, r5, r6, pc}
   20394:	mul	r1, r5, r4
   20398:	mov	r0, r6
   2039c:	pop	{r4, r5, r6, lr}
   203a0:	b	1e2a4 <argp_parse@@Base+0x29a4>
   203a4:	subs	r2, r1, #1
   203a8:	bxeq	lr
   203ac:	bcc	20584 <argp_parse@@Base+0x4c84>
   203b0:	cmp	r0, r1
   203b4:	bls	20568 <argp_parse@@Base+0x4c68>
   203b8:	tst	r1, r2
   203bc:	beq	20574 <argp_parse@@Base+0x4c74>
   203c0:	clz	r3, r0
   203c4:	clz	r2, r1
   203c8:	sub	r3, r2, r3
   203cc:	rsbs	r3, r3, #31
   203d0:	addne	r3, r3, r3, lsl #1
   203d4:	mov	r2, #0
   203d8:	addne	pc, pc, r3, lsl #2
   203dc:	nop			; (mov r0, r0)
   203e0:	cmp	r0, r1, lsl #31
   203e4:	adc	r2, r2, r2
   203e8:	subcs	r0, r0, r1, lsl #31
   203ec:	cmp	r0, r1, lsl #30
   203f0:	adc	r2, r2, r2
   203f4:	subcs	r0, r0, r1, lsl #30
   203f8:	cmp	r0, r1, lsl #29
   203fc:	adc	r2, r2, r2
   20400:	subcs	r0, r0, r1, lsl #29
   20404:	cmp	r0, r1, lsl #28
   20408:	adc	r2, r2, r2
   2040c:	subcs	r0, r0, r1, lsl #28
   20410:	cmp	r0, r1, lsl #27
   20414:	adc	r2, r2, r2
   20418:	subcs	r0, r0, r1, lsl #27
   2041c:	cmp	r0, r1, lsl #26
   20420:	adc	r2, r2, r2
   20424:	subcs	r0, r0, r1, lsl #26
   20428:	cmp	r0, r1, lsl #25
   2042c:	adc	r2, r2, r2
   20430:	subcs	r0, r0, r1, lsl #25
   20434:	cmp	r0, r1, lsl #24
   20438:	adc	r2, r2, r2
   2043c:	subcs	r0, r0, r1, lsl #24
   20440:	cmp	r0, r1, lsl #23
   20444:	adc	r2, r2, r2
   20448:	subcs	r0, r0, r1, lsl #23
   2044c:	cmp	r0, r1, lsl #22
   20450:	adc	r2, r2, r2
   20454:	subcs	r0, r0, r1, lsl #22
   20458:	cmp	r0, r1, lsl #21
   2045c:	adc	r2, r2, r2
   20460:	subcs	r0, r0, r1, lsl #21
   20464:	cmp	r0, r1, lsl #20
   20468:	adc	r2, r2, r2
   2046c:	subcs	r0, r0, r1, lsl #20
   20470:	cmp	r0, r1, lsl #19
   20474:	adc	r2, r2, r2
   20478:	subcs	r0, r0, r1, lsl #19
   2047c:	cmp	r0, r1, lsl #18
   20480:	adc	r2, r2, r2
   20484:	subcs	r0, r0, r1, lsl #18
   20488:	cmp	r0, r1, lsl #17
   2048c:	adc	r2, r2, r2
   20490:	subcs	r0, r0, r1, lsl #17
   20494:	cmp	r0, r1, lsl #16
   20498:	adc	r2, r2, r2
   2049c:	subcs	r0, r0, r1, lsl #16
   204a0:	cmp	r0, r1, lsl #15
   204a4:	adc	r2, r2, r2
   204a8:	subcs	r0, r0, r1, lsl #15
   204ac:	cmp	r0, r1, lsl #14
   204b0:	adc	r2, r2, r2
   204b4:	subcs	r0, r0, r1, lsl #14
   204b8:	cmp	r0, r1, lsl #13
   204bc:	adc	r2, r2, r2
   204c0:	subcs	r0, r0, r1, lsl #13
   204c4:	cmp	r0, r1, lsl #12
   204c8:	adc	r2, r2, r2
   204cc:	subcs	r0, r0, r1, lsl #12
   204d0:	cmp	r0, r1, lsl #11
   204d4:	adc	r2, r2, r2
   204d8:	subcs	r0, r0, r1, lsl #11
   204dc:	cmp	r0, r1, lsl #10
   204e0:	adc	r2, r2, r2
   204e4:	subcs	r0, r0, r1, lsl #10
   204e8:	cmp	r0, r1, lsl #9
   204ec:	adc	r2, r2, r2
   204f0:	subcs	r0, r0, r1, lsl #9
   204f4:	cmp	r0, r1, lsl #8
   204f8:	adc	r2, r2, r2
   204fc:	subcs	r0, r0, r1, lsl #8
   20500:	cmp	r0, r1, lsl #7
   20504:	adc	r2, r2, r2
   20508:	subcs	r0, r0, r1, lsl #7
   2050c:	cmp	r0, r1, lsl #6
   20510:	adc	r2, r2, r2
   20514:	subcs	r0, r0, r1, lsl #6
   20518:	cmp	r0, r1, lsl #5
   2051c:	adc	r2, r2, r2
   20520:	subcs	r0, r0, r1, lsl #5
   20524:	cmp	r0, r1, lsl #4
   20528:	adc	r2, r2, r2
   2052c:	subcs	r0, r0, r1, lsl #4
   20530:	cmp	r0, r1, lsl #3
   20534:	adc	r2, r2, r2
   20538:	subcs	r0, r0, r1, lsl #3
   2053c:	cmp	r0, r1, lsl #2
   20540:	adc	r2, r2, r2
   20544:	subcs	r0, r0, r1, lsl #2
   20548:	cmp	r0, r1, lsl #1
   2054c:	adc	r2, r2, r2
   20550:	subcs	r0, r0, r1, lsl #1
   20554:	cmp	r0, r1
   20558:	adc	r2, r2, r2
   2055c:	subcs	r0, r0, r1
   20560:	mov	r0, r2
   20564:	bx	lr
   20568:	moveq	r0, #1
   2056c:	movne	r0, #0
   20570:	bx	lr
   20574:	clz	r2, r1
   20578:	rsb	r2, r2, #31
   2057c:	lsr	r0, r0, r2
   20580:	bx	lr
   20584:	cmp	r0, #0
   20588:	mvnne	r0, #0
   2058c:	b	207f0 <argp_parse@@Base+0x4ef0>
   20590:	cmp	r1, #0
   20594:	beq	20584 <argp_parse@@Base+0x4c84>
   20598:	push	{r0, r1, lr}
   2059c:	bl	203a4 <argp_parse@@Base+0x4aa4>
   205a0:	pop	{r1, r2, lr}
   205a4:	mul	r3, r2, r0
   205a8:	sub	r1, r1, r3
   205ac:	bx	lr
   205b0:	cmp	r1, #0
   205b4:	beq	207c0 <argp_parse@@Base+0x4ec0>
   205b8:	eor	ip, r0, r1
   205bc:	rsbmi	r1, r1, #0
   205c0:	subs	r2, r1, #1
   205c4:	beq	2078c <argp_parse@@Base+0x4e8c>
   205c8:	movs	r3, r0
   205cc:	rsbmi	r3, r0, #0
   205d0:	cmp	r3, r1
   205d4:	bls	20798 <argp_parse@@Base+0x4e98>
   205d8:	tst	r1, r2
   205dc:	beq	207a8 <argp_parse@@Base+0x4ea8>
   205e0:	clz	r2, r3
   205e4:	clz	r0, r1
   205e8:	sub	r2, r0, r2
   205ec:	rsbs	r2, r2, #31
   205f0:	addne	r2, r2, r2, lsl #1
   205f4:	mov	r0, #0
   205f8:	addne	pc, pc, r2, lsl #2
   205fc:	nop			; (mov r0, r0)
   20600:	cmp	r3, r1, lsl #31
   20604:	adc	r0, r0, r0
   20608:	subcs	r3, r3, r1, lsl #31
   2060c:	cmp	r3, r1, lsl #30
   20610:	adc	r0, r0, r0
   20614:	subcs	r3, r3, r1, lsl #30
   20618:	cmp	r3, r1, lsl #29
   2061c:	adc	r0, r0, r0
   20620:	subcs	r3, r3, r1, lsl #29
   20624:	cmp	r3, r1, lsl #28
   20628:	adc	r0, r0, r0
   2062c:	subcs	r3, r3, r1, lsl #28
   20630:	cmp	r3, r1, lsl #27
   20634:	adc	r0, r0, r0
   20638:	subcs	r3, r3, r1, lsl #27
   2063c:	cmp	r3, r1, lsl #26
   20640:	adc	r0, r0, r0
   20644:	subcs	r3, r3, r1, lsl #26
   20648:	cmp	r3, r1, lsl #25
   2064c:	adc	r0, r0, r0
   20650:	subcs	r3, r3, r1, lsl #25
   20654:	cmp	r3, r1, lsl #24
   20658:	adc	r0, r0, r0
   2065c:	subcs	r3, r3, r1, lsl #24
   20660:	cmp	r3, r1, lsl #23
   20664:	adc	r0, r0, r0
   20668:	subcs	r3, r3, r1, lsl #23
   2066c:	cmp	r3, r1, lsl #22
   20670:	adc	r0, r0, r0
   20674:	subcs	r3, r3, r1, lsl #22
   20678:	cmp	r3, r1, lsl #21
   2067c:	adc	r0, r0, r0
   20680:	subcs	r3, r3, r1, lsl #21
   20684:	cmp	r3, r1, lsl #20
   20688:	adc	r0, r0, r0
   2068c:	subcs	r3, r3, r1, lsl #20
   20690:	cmp	r3, r1, lsl #19
   20694:	adc	r0, r0, r0
   20698:	subcs	r3, r3, r1, lsl #19
   2069c:	cmp	r3, r1, lsl #18
   206a0:	adc	r0, r0, r0
   206a4:	subcs	r3, r3, r1, lsl #18
   206a8:	cmp	r3, r1, lsl #17
   206ac:	adc	r0, r0, r0
   206b0:	subcs	r3, r3, r1, lsl #17
   206b4:	cmp	r3, r1, lsl #16
   206b8:	adc	r0, r0, r0
   206bc:	subcs	r3, r3, r1, lsl #16
   206c0:	cmp	r3, r1, lsl #15
   206c4:	adc	r0, r0, r0
   206c8:	subcs	r3, r3, r1, lsl #15
   206cc:	cmp	r3, r1, lsl #14
   206d0:	adc	r0, r0, r0
   206d4:	subcs	r3, r3, r1, lsl #14
   206d8:	cmp	r3, r1, lsl #13
   206dc:	adc	r0, r0, r0
   206e0:	subcs	r3, r3, r1, lsl #13
   206e4:	cmp	r3, r1, lsl #12
   206e8:	adc	r0, r0, r0
   206ec:	subcs	r3, r3, r1, lsl #12
   206f0:	cmp	r3, r1, lsl #11
   206f4:	adc	r0, r0, r0
   206f8:	subcs	r3, r3, r1, lsl #11
   206fc:	cmp	r3, r1, lsl #10
   20700:	adc	r0, r0, r0
   20704:	subcs	r3, r3, r1, lsl #10
   20708:	cmp	r3, r1, lsl #9
   2070c:	adc	r0, r0, r0
   20710:	subcs	r3, r3, r1, lsl #9
   20714:	cmp	r3, r1, lsl #8
   20718:	adc	r0, r0, r0
   2071c:	subcs	r3, r3, r1, lsl #8
   20720:	cmp	r3, r1, lsl #7
   20724:	adc	r0, r0, r0
   20728:	subcs	r3, r3, r1, lsl #7
   2072c:	cmp	r3, r1, lsl #6
   20730:	adc	r0, r0, r0
   20734:	subcs	r3, r3, r1, lsl #6
   20738:	cmp	r3, r1, lsl #5
   2073c:	adc	r0, r0, r0
   20740:	subcs	r3, r3, r1, lsl #5
   20744:	cmp	r3, r1, lsl #4
   20748:	adc	r0, r0, r0
   2074c:	subcs	r3, r3, r1, lsl #4
   20750:	cmp	r3, r1, lsl #3
   20754:	adc	r0, r0, r0
   20758:	subcs	r3, r3, r1, lsl #3
   2075c:	cmp	r3, r1, lsl #2
   20760:	adc	r0, r0, r0
   20764:	subcs	r3, r3, r1, lsl #2
   20768:	cmp	r3, r1, lsl #1
   2076c:	adc	r0, r0, r0
   20770:	subcs	r3, r3, r1, lsl #1
   20774:	cmp	r3, r1
   20778:	adc	r0, r0, r0
   2077c:	subcs	r3, r3, r1
   20780:	cmp	ip, #0
   20784:	rsbmi	r0, r0, #0
   20788:	bx	lr
   2078c:	teq	ip, r0
   20790:	rsbmi	r0, r0, #0
   20794:	bx	lr
   20798:	movcc	r0, #0
   2079c:	asreq	r0, ip, #31
   207a0:	orreq	r0, r0, #1
   207a4:	bx	lr
   207a8:	clz	r2, r1
   207ac:	rsb	r2, r2, #31
   207b0:	cmp	ip, #0
   207b4:	lsr	r0, r3, r2
   207b8:	rsbmi	r0, r0, #0
   207bc:	bx	lr
   207c0:	cmp	r0, #0
   207c4:	mvngt	r0, #-2147483648	; 0x80000000
   207c8:	movlt	r0, #-2147483648	; 0x80000000
   207cc:	b	207f0 <argp_parse@@Base+0x4ef0>
   207d0:	cmp	r1, #0
   207d4:	beq	207c0 <argp_parse@@Base+0x4ec0>
   207d8:	push	{r0, r1, lr}
   207dc:	bl	205b8 <argp_parse@@Base+0x4cb8>
   207e0:	pop	{r1, r2, lr}
   207e4:	mul	r3, r2, r0
   207e8:	sub	r1, r1, r3
   207ec:	bx	lr
   207f0:	push	{r1, lr}
   207f4:	mov	r0, #8
   207f8:	bl	1166c <raise@plt>
   207fc:	pop	{r1, pc}
   20800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20804:	mov	r7, r0
   20808:	ldr	r6, [pc, #72]	; 20858 <argp_parse@@Base+0x4f58>
   2080c:	ldr	r5, [pc, #72]	; 2085c <argp_parse@@Base+0x4f5c>
   20810:	add	r6, pc, r6
   20814:	add	r5, pc, r5
   20818:	sub	r6, r6, r5
   2081c:	mov	r8, r1
   20820:	mov	r9, r2
   20824:	bl	11634 <calloc@plt-0x20>
   20828:	asrs	r6, r6, #2
   2082c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   20830:	mov	r4, #0
   20834:	add	r4, r4, #1
   20838:	ldr	r3, [r5], #4
   2083c:	mov	r2, r9
   20840:	mov	r1, r8
   20844:	mov	r0, r7
   20848:	blx	r3
   2084c:	cmp	r6, r4
   20850:	bne	20834 <argp_parse@@Base+0x4f34>
   20854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20858:	strdeq	r2, [r1], -r0
   2085c:	andeq	r2, r1, r8, ror #13
   20860:	bx	lr

Disassembly of section .fini:

00020864 <.fini>:
   20864:	push	{r3, lr}
   20868:	pop	{r3, pc}
