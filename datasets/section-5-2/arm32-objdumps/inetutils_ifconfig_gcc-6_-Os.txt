
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

00011370 <.init>:
   11370:	push	{r3, lr}
   11374:	bl	11890 <ftello64@plt+0x164>
   11378:	pop	{r3, pc}

Disassembly of section .plt:

0001137c <calloc@plt-0x14>:
   1137c:	push	{lr}		; (str lr, [sp, #-4]!)
   11380:	ldr	lr, [pc, #4]	; 1138c <calloc@plt-0x4>
   11384:	add	lr, pc, lr
   11388:	ldr	pc, [lr, #8]!
   1138c:	andeq	lr, r1, r4, ror ip

00011390 <calloc@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #122880	; 0x1e000
   11398:	ldr	pc, [ip, #3188]!	; 0xc74

0001139c <fputs_unlocked@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #122880	; 0x1e000
   113a4:	ldr	pc, [ip, #3180]!	; 0xc6c

000113a8 <strstr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #122880	; 0x1e000
   113b0:	ldr	pc, [ip, #3172]!	; 0xc64

000113b4 <ether_hostton@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #122880	; 0x1e000
   113bc:	ldr	pc, [ip, #3164]!	; 0xc5c

000113c0 <raise@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #122880	; 0x1e000
   113c8:	ldr	pc, [ip, #3156]!	; 0xc54

000113cc <inet_aton@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #122880	; 0x1e000
   113d4:	ldr	pc, [ip, #3148]!	; 0xc4c

000113d8 <strcmp@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #122880	; 0x1e000
   113e0:	ldr	pc, [ip, #3140]!	; 0xc44

000113e4 <strtol@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #122880	; 0x1e000
   113ec:	ldr	pc, [ip, #3132]!	; 0xc3c

000113f0 <printf@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #122880	; 0x1e000
   113f8:	ldr	pc, [ip, #3124]!	; 0xc34

000113fc <memmove@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #122880	; 0x1e000
   11404:	ldr	pc, [ip, #3116]!	; 0xc2c

00011408 <strchrnul@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #122880	; 0x1e000
   11410:	ldr	pc, [ip, #3108]!	; 0xc24

00011414 <free@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #122880	; 0x1e000
   1141c:	ldr	pc, [ip, #3100]!	; 0xc1c

00011420 <gai_strerror@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #122880	; 0x1e000
   11428:	ldr	pc, [ip, #3092]!	; 0xc14

0001142c <ferror@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #122880	; 0x1e000
   11434:	ldr	pc, [ip, #3084]!	; 0xc0c

00011438 <strndup@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #122880	; 0x1e000
   11440:	ldr	pc, [ip, #3076]!	; 0xc04

00011444 <memcpy@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #122880	; 0x1e000
   1144c:	ldr	pc, [ip, #3068]!	; 0xbfc

00011450 <fwrite_unlocked@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #122880	; 0x1e000
   11458:	ldr	pc, [ip, #3060]!	; 0xbf4

0001145c <inet_ntoa@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #122880	; 0x1e000
   11464:	ldr	pc, [ip, #3052]!	; 0xbec

00011468 <sleep@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #122880	; 0x1e000
   11470:	ldr	pc, [ip, #3044]!	; 0xbe4

00011474 <strdup@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #122880	; 0x1e000
   1147c:	ldr	pc, [ip, #3036]!	; 0xbdc

00011480 <realloc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #122880	; 0x1e000
   11488:	ldr	pc, [ip, #3028]!	; 0xbd4

0001148c <strcasecmp@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #122880	; 0x1e000
   11494:	ldr	pc, [ip, #3020]!	; 0xbcc

00011498 <funlockfile@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #122880	; 0x1e000
   114a0:	ldr	pc, [ip, #3012]!	; 0xbc4

000114a4 <__fxstat64@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #122880	; 0x1e000
   114ac:	ldr	pc, [ip, #3004]!	; 0xbbc

000114b0 <ioctl@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #122880	; 0x1e000
   114b8:	ldr	pc, [ip, #2996]!	; 0xbb4

000114bc <strcpy@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #122880	; 0x1e000
   114c4:	ldr	pc, [ip, #2988]!	; 0xbac

000114c8 <fread@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #122880	; 0x1e000
   114d0:	ldr	pc, [ip, #2980]!	; 0xba4

000114d4 <error@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #122880	; 0x1e000
   114dc:	ldr	pc, [ip, #2972]!	; 0xb9c

000114e0 <getenv@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #122880	; 0x1e000
   114e8:	ldr	pc, [ip, #2964]!	; 0xb94

000114ec <puts@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #122880	; 0x1e000
   114f4:	ldr	pc, [ip, #2956]!	; 0xb8c

000114f8 <malloc@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #122880	; 0x1e000
   11500:	ldr	pc, [ip, #2948]!	; 0xb84

00011504 <__libc_start_main@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #122880	; 0x1e000
   1150c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011510 <strerror@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #122880	; 0x1e000
   11518:	ldr	pc, [ip, #2932]!	; 0xb74

0001151c <__ctype_tolower_loc@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #122880	; 0x1e000
   11524:	ldr	pc, [ip, #2924]!	; 0xb6c

00011528 <ether_aton@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #122880	; 0x1e000
   11530:	ldr	pc, [ip, #2916]!	; 0xb64

00011534 <__gmon_start__@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #122880	; 0x1e000
   1153c:	ldr	pc, [ip, #2908]!	; 0xb5c

00011540 <mempcpy@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #122880	; 0x1e000
   11548:	ldr	pc, [ip, #2900]!	; 0xb54

0001154c <__ctype_b_loc@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #122880	; 0x1e000
   11554:	ldr	pc, [ip, #2892]!	; 0xb4c

00011558 <exit@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #122880	; 0x1e000
   11560:	ldr	pc, [ip, #2884]!	; 0xb44

00011564 <strtoul@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #122880	; 0x1e000
   1156c:	ldr	pc, [ip, #2876]!	; 0xb3c

00011570 <strlen@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #122880	; 0x1e000
   11578:	ldr	pc, [ip, #2868]!	; 0xb34

0001157c <strchr@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #122880	; 0x1e000
   11584:	ldr	pc, [ip, #2860]!	; 0xb2c

00011588 <fprintf@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #122880	; 0x1e000
   11590:	ldr	pc, [ip, #2852]!	; 0xb24

00011594 <__errno_location@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #122880	; 0x1e000
   1159c:	ldr	pc, [ip, #2844]!	; 0xb1c

000115a0 <strncasecmp@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #122880	; 0x1e000
   115a8:	ldr	pc, [ip, #2836]!	; 0xb14

000115ac <strerror_r@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #122880	; 0x1e000
   115b4:	ldr	pc, [ip, #2828]!	; 0xb0c

000115b8 <setvbuf@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #122880	; 0x1e000
   115c0:	ldr	pc, [ip, #2820]!	; 0xb04

000115c4 <memset@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #122880	; 0x1e000
   115cc:	ldr	pc, [ip, #2812]!	; 0xafc

000115d0 <putchar@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #122880	; 0x1e000
   115d8:	ldr	pc, [ip, #2804]!	; 0xaf4

000115dc <strncpy@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #122880	; 0x1e000
   115e4:	ldr	pc, [ip, #2796]!	; 0xaec

000115e8 <fileno@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #122880	; 0x1e000
   115f0:	ldr	pc, [ip, #2788]!	; 0xae4

000115f4 <memchr@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #122880	; 0x1e000
   115fc:	ldr	pc, [ip, #2780]!	; 0xadc

00011600 <fclose@plt>:
   11600:	add	ip, pc, #0, 12
   11604:	add	ip, ip, #122880	; 0x1e000
   11608:	ldr	pc, [ip, #2772]!	; 0xad4

0001160c <ether_ntoa@plt>:
   1160c:	add	ip, pc, #0, 12
   11610:	add	ip, ip, #122880	; 0x1e000
   11614:	ldr	pc, [ip, #2764]!	; 0xacc

00011618 <getnameinfo@plt>:
   11618:	add	ip, pc, #0, 12
   1161c:	add	ip, ip, #122880	; 0x1e000
   11620:	ldr	pc, [ip, #2756]!	; 0xac4

00011624 <strrchr@plt>:
   11624:	add	ip, pc, #0, 12
   11628:	add	ip, ip, #122880	; 0x1e000
   1162c:	ldr	pc, [ip, #2748]!	; 0xabc

00011630 <vfprintf@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #122880	; 0x1e000
   11638:	ldr	pc, [ip, #2740]!	; 0xab4

0001163c <fputc@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #122880	; 0x1e000
   11644:	ldr	pc, [ip, #2732]!	; 0xaac

00011648 <sscanf@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #122880	; 0x1e000
   11650:	ldr	pc, [ip, #2724]!	; 0xaa4

00011654 <putc@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #122880	; 0x1e000
   1165c:	ldr	pc, [ip, #2716]!	; 0xa9c

00011660 <flockfile@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #122880	; 0x1e000
   11668:	ldr	pc, [ip, #2708]!	; 0xa94

0001166c <vsnprintf@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #122880	; 0x1e000
   11674:	ldr	pc, [ip, #2700]!	; 0xa8c

00011678 <atoi@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #122880	; 0x1e000
   11680:	ldr	pc, [ip, #2692]!	; 0xa84

00011684 <fopen64@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #122880	; 0x1e000
   1168c:	ldr	pc, [ip, #2684]!	; 0xa7c

00011690 <qsort@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #122880	; 0x1e000
   11698:	ldr	pc, [ip, #2676]!	; 0xa74

0001169c <explicit_bzero@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #122880	; 0x1e000
   116a4:	ldr	pc, [ip, #2668]!	; 0xa6c

000116a8 <freeaddrinfo@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #122880	; 0x1e000
   116b0:	ldr	pc, [ip, #2660]!	; 0xa64

000116b4 <getaddrinfo@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #122880	; 0x1e000
   116bc:	ldr	pc, [ip, #2652]!	; 0xa5c

000116c0 <socket@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #122880	; 0x1e000
   116c8:	ldr	pc, [ip, #2644]!	; 0xa54

000116cc <getline@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #122880	; 0x1e000
   116d4:	ldr	pc, [ip, #2636]!	; 0xa4c

000116d8 <if_nametoindex@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #122880	; 0x1e000
   116e0:	ldr	pc, [ip, #2628]!	; 0xa44

000116e4 <fputs@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #122880	; 0x1e000
   116ec:	ldr	pc, [ip, #2620]!	; 0xa3c

000116f0 <strncmp@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #122880	; 0x1e000
   116f8:	ldr	pc, [ip, #2612]!	; 0xa34

000116fc <abort@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #122880	; 0x1e000
   11704:	ldr	pc, [ip, #2604]!	; 0xa2c

00011708 <close@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #122880	; 0x1e000
   11710:	ldr	pc, [ip, #2596]!	; 0xa24

00011714 <__assert_fail@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #122880	; 0x1e000
   1171c:	ldr	pc, [ip, #2588]!	; 0xa1c

00011720 <putc_unlocked@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #122880	; 0x1e000
   11728:	ldr	pc, [ip, #2580]!	; 0xa14

0001172c <ftello64@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #122880	; 0x1e000
   11734:	ldr	pc, [ip, #2572]!	; 0xa0c

Disassembly of section .text:

00011738 <argp_parse@@Base-0x5010>:
   11738:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1173c:	mov	r5, r0
   11740:	mov	r4, r1
   11744:	ldr	r0, [r1]
   11748:	bl	17628 <_obstack_memory_used@@Base+0x28>
   1174c:	mov	r1, r4
   11750:	mov	r0, r5
   11754:	bl	132bc <ftello64@plt+0x1b90>
   11758:	mov	r2, #0
   1175c:	mov	r1, #1
   11760:	mov	r0, #2
   11764:	bl	116c0 <socket@plt>
   11768:	subs	r7, r0, #0
   1176c:	bge	1178c <ftello64@plt+0x60>
   11770:	bl	11594 <__errno_location@plt>
   11774:	ldr	r2, [pc, #196]	; 11840 <ftello64@plt+0x114>
   11778:	ldr	r1, [r0]
   1177c:	mov	r0, #0
   11780:	bl	114d4 <error@plt>
   11784:	mov	r0, #1
   11788:	bl	11558 <exit@plt>
   1178c:	ldr	r6, [pc, #176]	; 11844 <ftello64@plt+0x118>
   11790:	ldr	sl, [pc, #176]	; 11848 <ftello64@plt+0x11c>
   11794:	ldr	r8, [pc, #176]	; 1184c <ftello64@plt+0x120>
   11798:	ldr	r4, [r6]
   1179c:	mov	r5, #0
   117a0:	add	r4, r4, #56	; 0x38
   117a4:	mov	r9, #56	; 0x38
   117a8:	ldr	r3, [sl]
   117ac:	ldr	r2, [r6]
   117b0:	sub	r1, r4, #56	; 0x38
   117b4:	mla	r3, r9, r3, r2
   117b8:	cmp	r1, r3
   117bc:	bcs	11818 <ftello64@plt+0xec>
   117c0:	ldr	r3, [r8]
   117c4:	cmp	r3, #0
   117c8:	beq	11808 <ftello64@plt+0xdc>
   117cc:	ldr	r0, [r4, #-56]	; 0xffffffc8
   117d0:	bl	116d8 <if_nametoindex@plt>
   117d4:	cmp	r0, #0
   117d8:	beq	11800 <ftello64@plt+0xd4>
   117dc:	cmp	r5, #0
   117e0:	add	fp, r5, #1
   117e4:	beq	117f0 <ftello64@plt+0xc4>
   117e8:	mov	r0, #32
   117ec:	bl	115d0 <putchar@plt>
   117f0:	ldr	r1, [r4, #-56]	; 0xffffffc8
   117f4:	ldr	r0, [pc, #84]	; 11850 <ftello64@plt+0x124>
   117f8:	bl	113f0 <printf@plt>
   117fc:	mov	r5, fp
   11800:	add	r4, r4, #56	; 0x38
   11804:	b	117a8 <ftello64@plt+0x7c>
   11808:	mov	r0, r7
   1180c:	bl	125b8 <ftello64@plt+0xe8c>
   11810:	subs	r5, r0, #0
   11814:	beq	11800 <ftello64@plt+0xd4>
   11818:	ldr	r3, [r8]
   1181c:	cmp	r3, #0
   11820:	cmpne	r5, #0
   11824:	beq	11830 <ftello64@plt+0x104>
   11828:	mov	r0, #10
   1182c:	bl	115d0 <putchar@plt>
   11830:	mov	r0, r7
   11834:	bl	11708 <close@plt>
   11838:	mov	r0, r5
   1183c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11840:			; <UNDEFINED> instruction: 0x0001c5b0
   11844:	strdeq	r0, [r3], -r4
   11848:	strdeq	r0, [r3], -r8
   1184c:	andeq	r0, r3, ip, lsl #24
   11850:	andeq	ip, r1, r0, lsl #13
   11854:	mov	fp, #0
   11858:	mov	lr, #0
   1185c:	pop	{r1}		; (ldr r1, [sp], #4)
   11860:	mov	r2, sp
   11864:	push	{r2}		; (str r2, [sp, #-4]!)
   11868:	push	{r0}		; (str r0, [sp, #-4]!)
   1186c:	ldr	ip, [pc, #16]	; 11884 <ftello64@plt+0x158>
   11870:	push	{ip}		; (str ip, [sp, #-4]!)
   11874:	ldr	r0, [pc, #12]	; 11888 <ftello64@plt+0x15c>
   11878:	ldr	r3, [pc, #12]	; 1188c <ftello64@plt+0x160>
   1187c:	bl	11504 <__libc_start_main@plt>
   11880:	bl	116fc <abort@plt>
   11884:	muleq	r1, r0, r5
   11888:	andeq	r1, r1, r8, lsr r7
   1188c:	andeq	ip, r1, r0, lsr r5
   11890:	ldr	r3, [pc, #20]	; 118ac <ftello64@plt+0x180>
   11894:	ldr	r2, [pc, #20]	; 118b0 <ftello64@plt+0x184>
   11898:	add	r3, pc, r3
   1189c:	ldr	r2, [r3, r2]
   118a0:	cmp	r2, #0
   118a4:	bxeq	lr
   118a8:	b	11534 <__gmon_start__@plt>
   118ac:	andeq	lr, r1, r0, ror #14
   118b0:	andeq	r0, r0, r4, asr #2
   118b4:	ldr	r3, [pc, #28]	; 118d8 <ftello64@plt+0x1ac>
   118b8:	ldr	r0, [pc, #28]	; 118dc <ftello64@plt+0x1b0>
   118bc:	sub	r3, r3, r0
   118c0:	cmp	r3, #6
   118c4:	bxls	lr
   118c8:	ldr	r3, [pc, #16]	; 118e0 <ftello64@plt+0x1b4>
   118cc:	cmp	r3, #0
   118d0:	bxeq	lr
   118d4:	bx	r3
   118d8:	andeq	r0, r3, r7, asr #22
   118dc:	andeq	r0, r3, r4, asr #22
   118e0:	andeq	r0, r0, r0
   118e4:	ldr	r1, [pc, #36]	; 11910 <ftello64@plt+0x1e4>
   118e8:	ldr	r0, [pc, #36]	; 11914 <ftello64@plt+0x1e8>
   118ec:	sub	r1, r1, r0
   118f0:	asr	r1, r1, #2
   118f4:	add	r1, r1, r1, lsr #31
   118f8:	asrs	r1, r1, #1
   118fc:	bxeq	lr
   11900:	ldr	r3, [pc, #16]	; 11918 <ftello64@plt+0x1ec>
   11904:	cmp	r3, #0
   11908:	bxeq	lr
   1190c:	bx	r3
   11910:	andeq	r0, r3, r4, asr #22
   11914:	andeq	r0, r3, r4, asr #22
   11918:	andeq	r0, r0, r0
   1191c:	push	{r4, lr}
   11920:	ldr	r4, [pc, #24]	; 11940 <ftello64@plt+0x214>
   11924:	ldrb	r3, [r4]
   11928:	cmp	r3, #0
   1192c:	popne	{r4, pc}
   11930:	bl	118b4 <ftello64@plt+0x188>
   11934:	mov	r3, #1
   11938:	strb	r3, [r4]
   1193c:	pop	{r4, pc}
   11940:	andeq	r0, r3, r8, asr fp
   11944:	ldr	r0, [pc, #40]	; 11974 <ftello64@plt+0x248>
   11948:	ldr	r3, [r0]
   1194c:	cmp	r3, #0
   11950:	bne	11958 <ftello64@plt+0x22c>
   11954:	b	118e4 <ftello64@plt+0x1b8>
   11958:	ldr	r3, [pc, #24]	; 11978 <ftello64@plt+0x24c>
   1195c:	cmp	r3, #0
   11960:	beq	11954 <ftello64@plt+0x228>
   11964:	push	{r4, lr}
   11968:	blx	r3
   1196c:	pop	{r4, lr}
   11970:	b	118e4 <ftello64@plt+0x1b8>
   11974:	andeq	pc, r2, r4, lsl pc	; <UNPREDICTABLE>
   11978:	andeq	r0, r0, r0
   1197c:	ldr	r1, [r1]
   11980:	ldr	r0, [r0]
   11984:	b	113d8 <strcmp@plt>
   11988:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1198c:	mov	r9, r0
   11990:	ldr	r6, [pc, #476]	; 11b74 <ftello64@plt+0x448>
   11994:	mov	r5, #0
   11998:	ldr	r4, [r6]
   1199c:	cmp	r4, #0
   119a0:	bne	11a5c <ftello64@plt+0x330>
   119a4:	add	r0, r5, #80	; 0x50
   119a8:	bl	17d8c <_obstack_memory_used@@Base+0x78c>
   119ac:	ldr	sl, [pc, #448]	; 11b74 <ftello64@plt+0x448>
   119b0:	mov	r8, r0
   119b4:	add	r7, r0, #80	; 0x50
   119b8:	ldr	r6, [sl]
   119bc:	cmp	r6, #0
   119c0:	bne	11a80 <ftello64@plt+0x354>
   119c4:	ldr	r3, [pc, #428]	; 11b78 <ftello64@plt+0x44c>
   119c8:	mov	r2, #4
   119cc:	mov	r1, r4
   119d0:	mov	r0, r8
   119d4:	bl	11690 <qsort@plt>
   119d8:	cmp	r9, #0
   119dc:	add	r5, r5, r4, lsl #1
   119e0:	beq	119f0 <ftello64@plt+0x2c4>
   119e4:	mov	r0, r9
   119e8:	bl	11570 <strlen@plt>
   119ec:	add	r5, r5, r0
   119f0:	add	r0, r5, #36	; 0x24
   119f4:	bl	17d8c <_obstack_memory_used@@Base+0x78c>
   119f8:	cmp	r9, #0
   119fc:	mov	r7, r0
   11a00:	moveq	r5, r0
   11a04:	beq	11a1c <ftello64@plt+0x2f0>
   11a08:	mov	r1, r9
   11a0c:	bl	114bc <strcpy@plt>
   11a10:	mov	r0, r9
   11a14:	bl	11570 <strlen@plt>
   11a18:	add	r5, r7, r0
   11a1c:	sub	fp, r8, #4
   11a20:	mov	r3, #0
   11a24:	mov	r9, #44	; 0x2c
   11a28:	mov	sl, #32
   11a2c:	cmp	r4, r3
   11a30:	bne	11af8 <ftello64@plt+0x3cc>
   11a34:	ldr	r1, [pc, #320]	; 11b7c <ftello64@plt+0x450>
   11a38:	mov	r0, r5
   11a3c:	bl	114bc <strcpy@plt>
   11a40:	mov	r3, #0
   11a44:	mov	r0, r8
   11a48:	strb	r3, [r5, #35]	; 0x23
   11a4c:	bl	171e4 <argp_parse@@Base+0xa9c>
   11a50:	mov	r0, r7
   11a54:	add	sp, sp, #12
   11a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a5c:	ldr	r3, [r6, #8]
   11a60:	cmp	r3, #0
   11a64:	bne	11a78 <ftello64@plt+0x34c>
   11a68:	mov	r0, r4
   11a6c:	bl	11570 <strlen@plt>
   11a70:	add	r5, r5, #1
   11a74:	add	r5, r0, r5
   11a78:	add	r6, r6, #12
   11a7c:	b	11998 <ftello64@plt+0x26c>
   11a80:	ldr	r2, [sl, #8]
   11a84:	cmp	r2, #0
   11a88:	bne	11ad8 <ftello64@plt+0x3ac>
   11a8c:	ldr	r2, [sl, #4]
   11a90:	tst	r2, #72	; 0x48
   11a94:	bne	11ad8 <ftello64@plt+0x3ac>
   11a98:	mov	r0, r6
   11a9c:	mov	r2, #2
   11aa0:	ldr	r1, [pc, #216]	; 11b80 <ftello64@plt+0x454>
   11aa4:	str	r7, [r8, r4, lsl #2]
   11aa8:	bl	116f0 <strncmp@plt>
   11aac:	add	fp, r4, #1
   11ab0:	cmp	r0, #0
   11ab4:	addeq	r6, r6, #2
   11ab8:	sub	r6, r6, #1
   11abc:	ldrb	r4, [r6, #1]!
   11ac0:	add	r2, r7, #1
   11ac4:	cmp	r4, #0
   11ac8:	bne	11ae0 <ftello64@plt+0x3b4>
   11acc:	strb	r4, [r7]
   11ad0:	mov	r7, r2
   11ad4:	mov	r4, fp
   11ad8:	add	sl, sl, #12
   11adc:	b	119b8 <ftello64@plt+0x28c>
   11ae0:	mov	r7, r2
   11ae4:	bl	1151c <__ctype_tolower_loc@plt>
   11ae8:	ldr	r2, [r0]
   11aec:	ldr	r2, [r2, r4, lsl #2]
   11af0:	strb	r2, [r7, #-1]
   11af4:	b	11abc <ftello64@plt+0x390>
   11af8:	cmp	r3, #0
   11afc:	add	r6, r3, #1
   11b00:	beq	11b30 <ftello64@plt+0x404>
   11b04:	ldr	r3, [fp]
   11b08:	mov	r0, r3
   11b0c:	str	r3, [sp, #4]
   11b10:	bl	11570 <strlen@plt>
   11b14:	ldr	r3, [sp, #4]
   11b18:	ldr	r1, [fp, #4]
   11b1c:	mov	r2, r0
   11b20:	mov	r0, r3
   11b24:	bl	116f0 <strncmp@plt>
   11b28:	cmp	r0, #0
   11b2c:	beq	11b68 <ftello64@plt+0x43c>
   11b30:	ldr	r3, [fp, #4]
   11b34:	mov	r0, r5
   11b38:	mov	r1, r3
   11b3c:	str	r3, [sp, #4]
   11b40:	bl	114bc <strcpy@plt>
   11b44:	ldr	r3, [sp, #4]
   11b48:	mov	r0, r3
   11b4c:	bl	11570 <strlen@plt>
   11b50:	cmp	r4, r6
   11b54:	add	r5, r5, r0
   11b58:	movhi	r3, r5
   11b5c:	strbhi	r9, [r3], #2
   11b60:	strbhi	sl, [r5, #1]
   11b64:	movhi	r5, r3
   11b68:	mov	r3, r6
   11b6c:	add	fp, fp, #4
   11b70:	b	11a2c <ftello64@plt+0x300>
   11b74:	andeq	r0, r3, r0, asr r1
   11b78:	andeq	r1, r1, ip, ror r9
   11b7c:	andeq	ip, r1, r0, asr #11
   11b80:			; <UNDEFINED> instruction: 0x0001c5bd
   11b84:	push	{r4, r5, r6, r7, r8, lr}
   11b88:	ldr	r4, [pc, #140]	; 11c1c <ftello64@plt+0x4f0>
   11b8c:	ldr	r5, [r4]
   11b90:	cmp	r5, #0
   11b94:	beq	11c14 <ftello64@plt+0x4e8>
   11b98:	ldr	r3, [r4, #4]
   11b9c:	cmp	r3, r0
   11ba0:	bne	11bb0 <ftello64@plt+0x484>
   11ba4:	ldr	r3, [r4, #8]
   11ba8:	cmp	r3, #0
   11bac:	beq	11bb8 <ftello64@plt+0x48c>
   11bb0:	add	r4, r4, #12
   11bb4:	b	11b8c <ftello64@plt+0x460>
   11bb8:	mov	r6, r1
   11bbc:	cmp	r1, #0
   11bc0:	beq	11c08 <ftello64@plt+0x4dc>
   11bc4:	ldr	r8, [r4]
   11bc8:	mov	r0, r6
   11bcc:	mov	r1, r8
   11bd0:	bl	113a8 <strstr@plt>
   11bd4:	subs	r7, r0, #0
   11bd8:	beq	11c08 <ftello64@plt+0x4dc>
   11bdc:	ldrb	r3, [r7, #-1]
   11be0:	cmp	r3, #58	; 0x3a
   11be4:	bne	11c08 <ftello64@plt+0x4dc>
   11be8:	mov	r0, r8
   11bec:	bl	11570 <strlen@plt>
   11bf0:	ldrb	r3, [r7, r0]
   11bf4:	cmp	r3, #58	; 0x3a
   11bf8:	bne	11c08 <ftello64@plt+0x4dc>
   11bfc:	ldr	r3, [r4, #12]!
   11c00:	cmp	r3, #0
   11c04:	b	11bc0 <ftello64@plt+0x494>
   11c08:	ldr	r3, [r4]
   11c0c:	cmp	r3, #0
   11c10:	movne	r5, r3
   11c14:	mov	r0, r5
   11c18:	pop	{r4, r5, r6, r7, r8, pc}
   11c1c:	andeq	r0, r3, r0, asr r1
   11c20:	cmp	r1, #1
   11c24:	push	{r4, r5, r6, r7, r8, lr}
   11c28:	mov	r5, r0
   11c2c:	mov	r4, r1
   11c30:	mov	r8, r2
   11c34:	bls	11c88 <ftello64@plt+0x55c>
   11c38:	ldrb	r3, [r0]
   11c3c:	cmp	r3, #45	; 0x2d
   11c40:	addeq	r5, r0, #1
   11c44:	subeq	r4, r1, #1
   11c48:	beq	11c70 <ftello64@plt+0x544>
   11c4c:	cmp	r4, #2
   11c50:	beq	11c88 <ftello64@plt+0x55c>
   11c54:	mov	r2, #2
   11c58:	ldr	r1, [pc, #96]	; 11cc0 <ftello64@plt+0x594>
   11c5c:	bl	115a0 <strncasecmp@plt>
   11c60:	cmp	r0, #0
   11c64:	bne	11c88 <ftello64@plt+0x55c>
   11c68:	add	r5, r5, #2
   11c6c:	sub	r4, r4, #2
   11c70:	mov	r7, #1
   11c74:	ldr	r6, [pc, #72]	; 11cc4 <ftello64@plt+0x598>
   11c78:	ldr	r0, [r6]
   11c7c:	cmp	r0, #0
   11c80:	bne	11c90 <ftello64@plt+0x564>
   11c84:	pop	{r4, r5, r6, r7, r8, pc}
   11c88:	mov	r7, #0
   11c8c:	b	11c74 <ftello64@plt+0x548>
   11c90:	mov	r2, r4
   11c94:	mov	r1, r5
   11c98:	bl	115a0 <strncasecmp@plt>
   11c9c:	cmp	r0, #0
   11ca0:	bne	11cb8 <ftello64@plt+0x58c>
   11ca4:	ldr	r3, [r6, #8]
   11ca8:	eor	r7, r7, r3
   11cac:	str	r7, [r8]
   11cb0:	ldr	r0, [r6, #4]
   11cb4:	pop	{r4, r5, r6, r7, r8, pc}
   11cb8:	add	r6, r6, #12
   11cbc:	b	11c78 <ftello64@plt+0x54c>
   11cc0:			; <UNDEFINED> instruction: 0x0001c5bd
   11cc4:	andeq	r0, r3, r0, asr r1
   11cc8:	push	{r4, r5, r6, lr}
   11ccc:	mov	r5, r1
   11cd0:	mov	r4, r0
   11cd4:	bl	11570 <strlen@plt>
   11cd8:	mov	r2, r5
   11cdc:	mov	r1, r0
   11ce0:	mov	r0, r4
   11ce4:	pop	{r4, r5, r6, lr}
   11ce8:	b	11c20 <ftello64@plt+0x4f4>
   11cec:	ldr	r3, [pc, #60]	; 11d30 <ftello64@plt+0x604>
   11cf0:	sub	r2, r2, #1
   11cf4:	cmp	r2, #0
   11cf8:	bne	11d08 <ftello64@plt+0x5dc>
   11cfc:	mov	r3, #0
   11d00:	strb	r3, [r1]
   11d04:	bx	lr
   11d08:	ldr	ip, [r3]
   11d0c:	cmp	ip, #0
   11d10:	beq	11cfc <ftello64@plt+0x5d0>
   11d14:	tst	ip, r0
   11d18:	subne	r2, r2, #1
   11d1c:	ldrne	ip, [r3, #4]
   11d20:	add	r3, r3, #8
   11d24:	strbne	ip, [r1]
   11d28:	addne	r1, r1, #1
   11d2c:	b	11cf4 <ftello64@plt+0x5c8>
   11d30:	andeq	r0, r3, ip, asr #4
   11d34:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d38:	mov	r4, #0
   11d3c:	mov	r7, #1
   11d40:	ldr	sl, [pc, #168]	; 11df0 <ftello64@plt+0x6c4>
   11d44:	mov	r5, r0
   11d48:	mov	r9, r1
   11d4c:	mov	r8, r2
   11d50:	mov	r6, r7
   11d54:	mov	fp, r4
   11d58:	cmp	r5, #0
   11d5c:	cmpne	r6, #0
   11d60:	bne	11d9c <ftello64@plt+0x670>
   11d64:	cmp	r5, #0
   11d68:	beq	11d90 <ftello64@plt+0x664>
   11d6c:	cmp	r7, #0
   11d70:	bne	11d80 <ftello64@plt+0x654>
   11d74:	mov	r0, r8
   11d78:	bl	115d0 <putchar@plt>
   11d7c:	add	r4, r4, #1
   11d80:	mov	r1, r5
   11d84:	ldr	r0, [pc, #104]	; 11df4 <ftello64@plt+0x6c8>
   11d88:	bl	113f0 <printf@plt>
   11d8c:	add	r4, r4, r0
   11d90:	mov	r0, r4
   11d94:	add	sp, sp, #12
   11d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d9c:	tst	r5, r6
   11da0:	beq	11de8 <ftello64@plt+0x6bc>
   11da4:	mov	r1, r9
   11da8:	mov	r0, r6
   11dac:	bl	11b84 <ftello64@plt+0x458>
   11db0:	subs	r1, r0, #0
   11db4:	beq	11de8 <ftello64@plt+0x6bc>
   11db8:	cmp	r7, #0
   11dbc:	bne	11dd4 <ftello64@plt+0x6a8>
   11dc0:	mov	r0, r8
   11dc4:	str	r1, [sp, #4]
   11dc8:	bl	115d0 <putchar@plt>
   11dcc:	ldr	r1, [sp, #4]
   11dd0:	add	r4, r4, #1
   11dd4:	mov	r0, sl
   11dd8:	bl	113f0 <printf@plt>
   11ddc:	bic	r5, r5, r6
   11de0:	mov	r7, fp
   11de4:	add	r4, r4, r0
   11de8:	lsl	r6, r6, #1
   11dec:	b	11d58 <ftello64@plt+0x62c>
   11df0:	andeq	ip, r1, r0, lsl #13
   11df4:	andeq	ip, r1, r4, ror #11
   11df8:	push	{r4, r5, r6, r7, r8, r9, lr}
   11dfc:	sub	sp, sp, #76	; 0x4c
   11e00:	mov	r6, r2
   11e04:	mov	r9, r0
   11e08:	mov	r2, #32
   11e0c:	mov	r4, r1
   11e10:	add	r0, sp, #40	; 0x28
   11e14:	mov	r1, #0
   11e18:	bl	115c4 <memset@plt>
   11e1c:	mov	r3, #2
   11e20:	str	r3, [sp, #44]	; 0x2c
   11e24:	add	r2, sp, #40	; 0x28
   11e28:	add	r3, sp, #20
   11e2c:	mov	r1, #0
   11e30:	mov	r0, r6
   11e34:	bl	116b4 <getaddrinfo@plt>
   11e38:	cmp	r0, #0
   11e3c:	ldreq	r0, [sp, #20]
   11e40:	beq	11e78 <ftello64@plt+0x74c>
   11e44:	bl	11420 <gai_strerror@plt>
   11e48:	mov	r1, #0
   11e4c:	mov	r3, r6
   11e50:	ldr	r2, [pc, #272]	; 11f68 <ftello64@plt+0x83c>
   11e54:	str	r0, [sp]
   11e58:	mov	r0, r1
   11e5c:	bl	114d4 <error@plt>
   11e60:	mvn	r0, #0
   11e64:	b	11f1c <ftello64@plt+0x7f0>
   11e68:	ldr	r8, [r0, #4]
   11e6c:	cmp	r8, #2
   11e70:	beq	11f24 <ftello64@plt+0x7f8>
   11e74:	ldr	r0, [r0, #28]
   11e78:	cmp	r0, #0
   11e7c:	bne	11e68 <ftello64@plt+0x73c>
   11e80:	mov	r1, r0
   11e84:	mov	r3, r6
   11e88:	ldr	r2, [pc, #220]	; 11f6c <ftello64@plt+0x840>
   11e8c:	bl	114d4 <error@plt>
   11e90:	ldr	r0, [sp, #20]
   11e94:	bl	116a8 <freeaddrinfo@plt>
   11e98:	b	11e60 <ftello64@plt+0x734>
   11e9c:	add	r1, r4, #20
   11ea0:	strh	r8, [r4, #16]
   11ea4:	add	r0, sp, #24
   11ea8:	bl	113cc <inet_aton@plt>
   11eac:	subs	r1, r0, #0
   11eb0:	addeq	r3, sp, #24
   11eb4:	ldreq	r2, [pc, #180]	; 11f70 <ftello64@plt+0x844>
   11eb8:	beq	11ee8 <ftello64@plt+0x7bc>
   11ebc:	mov	r2, r4
   11ec0:	ldr	r1, [pc, #172]	; 11f74 <ftello64@plt+0x848>
   11ec4:	mov	r0, r9
   11ec8:	bl	172d8 <argp_parse@@Base+0xb90>
   11ecc:	cmp	r0, #0
   11ed0:	bge	11ef0 <ftello64@plt+0x7c4>
   11ed4:	bl	11594 <__errno_location@plt>
   11ed8:	ldr	r3, [pc, #152]	; 11f78 <ftello64@plt+0x84c>
   11edc:	ldr	r2, [pc, #152]	; 11f7c <ftello64@plt+0x850>
   11ee0:	ldr	r1, [r0]
   11ee4:	mov	r0, r5
   11ee8:	bl	114d4 <error@plt>
   11eec:	b	11e60 <ftello64@plt+0x734>
   11ef0:	ldr	r3, [pc, #136]	; 11f80 <ftello64@plt+0x854>
   11ef4:	ldr	r0, [r3]
   11ef8:	cmp	r0, #0
   11efc:	beq	11f1c <ftello64@plt+0x7f0>
   11f00:	ldr	r0, [r4, #20]
   11f04:	bl	1145c <inet_ntoa@plt>
   11f08:	mov	r1, r4
   11f0c:	mov	r2, r0
   11f10:	ldr	r0, [pc, #108]	; 11f84 <ftello64@plt+0x858>
   11f14:	bl	113f0 <printf@plt>
   11f18:	mov	r0, r5
   11f1c:	add	sp, sp, #76	; 0x4c
   11f20:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f24:	mov	r7, #0
   11f28:	mov	r3, #1
   11f2c:	str	r3, [sp, #8]
   11f30:	str	r7, [sp, #4]
   11f34:	str	r7, [sp]
   11f38:	mov	r3, #16
   11f3c:	ldr	r1, [r0, #16]
   11f40:	add	r2, sp, #24
   11f44:	ldr	r0, [r0, #20]
   11f48:	bl	11618 <getnameinfo@plt>
   11f4c:	mov	r5, r0
   11f50:	ldr	r0, [sp, #20]
   11f54:	bl	116a8 <freeaddrinfo@plt>
   11f58:	cmp	r5, r7
   11f5c:	beq	11e9c <ftello64@plt+0x770>
   11f60:	mov	r0, r5
   11f64:	b	11e44 <ftello64@plt+0x718>
   11f68:	andeq	ip, r1, fp, ror #12
   11f6c:	ldrdeq	ip, [r1], -fp
   11f70:	andeq	ip, r1, r3, lsl #13
   11f74:	andeq	r8, r0, r6, lsl r9
   11f78:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   11f7c:	andeq	ip, r1, fp, lsr #13
   11f80:	andeq	r0, r3, r8, lsl #24
   11f84:			; <UNDEFINED> instruction: 0x0001c6b5
   11f88:	mov	r3, #2
   11f8c:	push	{r4, r5, r6, lr}
   11f90:	mov	r6, r0
   11f94:	strh	r3, [r1, #16]
   11f98:	mov	r0, r2
   11f9c:	mov	r4, r1
   11fa0:	add	r1, r1, #20
   11fa4:	mov	r5, r2
   11fa8:	bl	113cc <inet_aton@plt>
   11fac:	subs	r1, r0, #0
   11fb0:	moveq	r3, r5
   11fb4:	ldreq	r2, [pc, #104]	; 12024 <ftello64@plt+0x8f8>
   11fb8:	beq	11fe8 <ftello64@plt+0x8bc>
   11fbc:	mov	r2, r4
   11fc0:	ldr	r1, [pc, #96]	; 12028 <ftello64@plt+0x8fc>
   11fc4:	mov	r0, r6
   11fc8:	bl	172d8 <argp_parse@@Base+0xb90>
   11fcc:	cmp	r0, #0
   11fd0:	bge	11ff4 <ftello64@plt+0x8c8>
   11fd4:	bl	11594 <__errno_location@plt>
   11fd8:	ldr	r3, [pc, #76]	; 1202c <ftello64@plt+0x900>
   11fdc:	ldr	r2, [pc, #76]	; 12030 <ftello64@plt+0x904>
   11fe0:	ldr	r1, [r0]
   11fe4:	mov	r0, #0
   11fe8:	bl	114d4 <error@plt>
   11fec:	mvn	r0, #0
   11ff0:	pop	{r4, r5, r6, pc}
   11ff4:	ldr	r3, [pc, #56]	; 12034 <ftello64@plt+0x908>
   11ff8:	ldr	r0, [r3]
   11ffc:	cmp	r0, #0
   12000:	popeq	{r4, r5, r6, pc}
   12004:	ldr	r0, [r4, #20]
   12008:	bl	1145c <inet_ntoa@plt>
   1200c:	mov	r1, r4
   12010:	mov	r2, r0
   12014:	ldr	r0, [pc, #28]	; 12038 <ftello64@plt+0x90c>
   12018:	bl	113f0 <printf@plt>
   1201c:	mov	r0, #0
   12020:	pop	{r4, r5, r6, pc}
   12024:	andeq	ip, r1, r3, lsl #13
   12028:	andeq	r8, r0, ip, lsl r9
   1202c:	andeq	ip, r1, r2, lsl #14
   12030:	andeq	ip, r1, fp, lsr #13
   12034:	andeq	r0, r3, r8, lsl #24
   12038:	andeq	ip, r1, r1, lsl r7
   1203c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12040:	sub	sp, sp, #76	; 0x4c
   12044:	mov	r6, r2
   12048:	mov	r9, r0
   1204c:	mov	r2, #32
   12050:	mov	r4, r1
   12054:	add	r0, sp, #40	; 0x28
   12058:	mov	r1, #0
   1205c:	bl	115c4 <memset@plt>
   12060:	mov	r3, #2
   12064:	str	r3, [sp, #44]	; 0x2c
   12068:	add	r2, sp, #40	; 0x28
   1206c:	add	r3, sp, #20
   12070:	mov	r1, #0
   12074:	mov	r0, r6
   12078:	bl	116b4 <getaddrinfo@plt>
   1207c:	cmp	r0, #0
   12080:	ldreq	r0, [sp, #20]
   12084:	beq	120bc <ftello64@plt+0x990>
   12088:	bl	11420 <gai_strerror@plt>
   1208c:	mov	r1, #0
   12090:	mov	r3, r6
   12094:	ldr	r2, [pc, #272]	; 121ac <ftello64@plt+0xa80>
   12098:	str	r0, [sp]
   1209c:	mov	r0, r1
   120a0:	bl	114d4 <error@plt>
   120a4:	mvn	r0, #0
   120a8:	b	12160 <ftello64@plt+0xa34>
   120ac:	ldr	r8, [r0, #4]
   120b0:	cmp	r8, #2
   120b4:	beq	12168 <ftello64@plt+0xa3c>
   120b8:	ldr	r0, [r0, #28]
   120bc:	cmp	r0, #0
   120c0:	bne	120ac <ftello64@plt+0x980>
   120c4:	mov	r1, r0
   120c8:	mov	r3, r6
   120cc:	ldr	r2, [pc, #220]	; 121b0 <ftello64@plt+0xa84>
   120d0:	bl	114d4 <error@plt>
   120d4:	ldr	r0, [sp, #20]
   120d8:	bl	116a8 <freeaddrinfo@plt>
   120dc:	b	120a4 <ftello64@plt+0x978>
   120e0:	add	r1, r4, #20
   120e4:	strh	r8, [r4, #16]
   120e8:	add	r0, sp, #24
   120ec:	bl	113cc <inet_aton@plt>
   120f0:	subs	r1, r0, #0
   120f4:	addeq	r3, sp, #24
   120f8:	ldreq	r2, [pc, #180]	; 121b4 <ftello64@plt+0xa88>
   120fc:	beq	1212c <ftello64@plt+0xa00>
   12100:	mov	r2, r4
   12104:	ldr	r1, [pc, #172]	; 121b8 <ftello64@plt+0xa8c>
   12108:	mov	r0, r9
   1210c:	bl	172d8 <argp_parse@@Base+0xb90>
   12110:	cmp	r0, #0
   12114:	bge	12134 <ftello64@plt+0xa08>
   12118:	bl	11594 <__errno_location@plt>
   1211c:	ldr	r3, [pc, #152]	; 121bc <ftello64@plt+0xa90>
   12120:	ldr	r2, [pc, #152]	; 121c0 <ftello64@plt+0xa94>
   12124:	ldr	r1, [r0]
   12128:	mov	r0, r5
   1212c:	bl	114d4 <error@plt>
   12130:	b	120a4 <ftello64@plt+0x978>
   12134:	ldr	r3, [pc, #136]	; 121c4 <ftello64@plt+0xa98>
   12138:	ldr	r0, [r3]
   1213c:	cmp	r0, #0
   12140:	beq	12160 <ftello64@plt+0xa34>
   12144:	ldr	r0, [r4, #20]
   12148:	bl	1145c <inet_ntoa@plt>
   1214c:	mov	r1, r4
   12150:	mov	r2, r0
   12154:	ldr	r0, [pc, #108]	; 121c8 <ftello64@plt+0xa9c>
   12158:	bl	113f0 <printf@plt>
   1215c:	mov	r0, r5
   12160:	add	sp, sp, #76	; 0x4c
   12164:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12168:	mov	r7, #0
   1216c:	mov	r3, #1
   12170:	str	r3, [sp, #8]
   12174:	str	r7, [sp, #4]
   12178:	str	r7, [sp]
   1217c:	mov	r3, #16
   12180:	ldr	r1, [r0, #16]
   12184:	add	r2, sp, #24
   12188:	ldr	r0, [r0, #20]
   1218c:	bl	11618 <getnameinfo@plt>
   12190:	mov	r5, r0
   12194:	ldr	r0, [sp, #20]
   12198:	bl	116a8 <freeaddrinfo@plt>
   1219c:	cmp	r5, r7
   121a0:	beq	120e0 <ftello64@plt+0x9b4>
   121a4:	mov	r0, r5
   121a8:	b	12088 <ftello64@plt+0x95c>
   121ac:	andeq	ip, r1, fp, ror #12
   121b0:	ldrdeq	ip, [r1], -fp
   121b4:	andeq	ip, r1, r3, lsl #13
   121b8:	andeq	r8, r0, r8, lsl r9
   121bc:	andeq	ip, r1, r7, lsr r7
   121c0:	andeq	ip, r1, fp, lsr #13
   121c4:	andeq	r0, r3, r8, lsl #24
   121c8:	andeq	ip, r1, r6, asr #14
   121cc:	mov	r3, #2
   121d0:	push	{r4, r5, r6, lr}
   121d4:	mov	r6, r0
   121d8:	strh	r3, [r1, #16]
   121dc:	mov	r0, r2
   121e0:	mov	r4, r1
   121e4:	add	r1, r1, #20
   121e8:	mov	r5, r2
   121ec:	bl	113cc <inet_aton@plt>
   121f0:	subs	r1, r0, #0
   121f4:	moveq	r3, r5
   121f8:	ldreq	r2, [pc, #104]	; 12268 <ftello64@plt+0xb3c>
   121fc:	beq	1222c <ftello64@plt+0xb00>
   12200:	mov	r2, r4
   12204:	ldr	r1, [pc, #96]	; 1226c <ftello64@plt+0xb40>
   12208:	mov	r0, r6
   1220c:	bl	172d8 <argp_parse@@Base+0xb90>
   12210:	cmp	r0, #0
   12214:	bge	12238 <ftello64@plt+0xb0c>
   12218:	bl	11594 <__errno_location@plt>
   1221c:	ldr	r3, [pc, #76]	; 12270 <ftello64@plt+0xb44>
   12220:	ldr	r2, [pc, #76]	; 12274 <ftello64@plt+0xb48>
   12224:	ldr	r1, [r0]
   12228:	mov	r0, #0
   1222c:	bl	114d4 <error@plt>
   12230:	mvn	r0, #0
   12234:	pop	{r4, r5, r6, pc}
   12238:	ldr	r3, [pc, #56]	; 12278 <ftello64@plt+0xb4c>
   1223c:	ldr	r0, [r3]
   12240:	cmp	r0, #0
   12244:	popeq	{r4, r5, r6, pc}
   12248:	ldr	r0, [r4, #20]
   1224c:	bl	1145c <inet_ntoa@plt>
   12250:	mov	r1, r4
   12254:	mov	r2, r0
   12258:	ldr	r0, [pc, #28]	; 1227c <ftello64@plt+0xb50>
   1225c:	bl	113f0 <printf@plt>
   12260:	mov	r0, #0
   12264:	pop	{r4, r5, r6, pc}
   12268:	andeq	ip, r1, r3, lsl #13
   1226c:	andeq	r8, r0, sl, lsl r9
   12270:	andeq	ip, r1, r1, ror r7
   12274:	andeq	ip, r1, fp, lsr #13
   12278:	andeq	r0, r3, r8, lsl #24
   1227c:	andeq	ip, r1, r0, lsl #15
   12280:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12284:	mov	r7, r0
   12288:	mov	r0, r2
   1228c:	mov	r4, r1
   12290:	mov	r6, r2
   12294:	bl	11528 <ether_aton@plt>
   12298:	subs	r5, r0, #0
   1229c:	bne	122d8 <ftello64@plt+0xbac>
   122a0:	mov	r1, sp
   122a4:	mov	r0, r6
   122a8:	bl	113b4 <ether_hostton@plt>
   122ac:	cmp	r0, #0
   122b0:	moveq	r5, sp
   122b4:	beq	122d8 <ftello64@plt+0xbac>
   122b8:	ldr	r2, [pc, #148]	; 12354 <ftello64@plt+0xc28>
   122bc:	mov	r3, r6
   122c0:	mov	r1, r5
   122c4:	mov	r0, #0
   122c8:	bl	114d4 <error@plt>
   122cc:	mvn	r0, #0
   122d0:	add	sp, sp, #12
   122d4:	pop	{r4, r5, r6, r7, pc}
   122d8:	mov	r2, r4
   122dc:	ldr	r1, [pc, #116]	; 12358 <ftello64@plt+0xc2c>
   122e0:	mov	r0, r7
   122e4:	bl	172d8 <argp_parse@@Base+0xb90>
   122e8:	ldr	r3, [r5]
   122ec:	mov	r2, r4
   122f0:	str	r3, [r4, #18]
   122f4:	ldrh	r3, [r5, #4]
   122f8:	ldr	r1, [pc, #92]	; 1235c <ftello64@plt+0xc30>
   122fc:	mov	r0, r7
   12300:	strh	r3, [r4, #22]
   12304:	bl	172d8 <argp_parse@@Base+0xb90>
   12308:	cmp	r0, #0
   1230c:	bge	12324 <ftello64@plt+0xbf8>
   12310:	bl	11594 <__errno_location@plt>
   12314:	ldr	r3, [pc, #68]	; 12360 <ftello64@plt+0xc34>
   12318:	ldr	r2, [pc, #68]	; 12364 <ftello64@plt+0xc38>
   1231c:	ldr	r1, [r0]
   12320:	b	122c4 <ftello64@plt+0xb98>
   12324:	ldr	r3, [pc, #60]	; 12368 <ftello64@plt+0xc3c>
   12328:	ldr	r0, [r3]
   1232c:	cmp	r0, #0
   12330:	beq	122d0 <ftello64@plt+0xba4>
   12334:	mov	r0, r5
   12338:	bl	1160c <ether_ntoa@plt>
   1233c:	mov	r1, r4
   12340:	mov	r2, r0
   12344:	ldr	r0, [pc, #32]	; 1236c <ftello64@plt+0xc40>
   12348:	bl	113f0 <printf@plt>
   1234c:	mov	r0, #0
   12350:	b	122d0 <ftello64@plt+0xba4>
   12354:			; <UNDEFINED> instruction: 0x0001c7b0
   12358:	andeq	r8, r0, r7, lsr #18
   1235c:	andeq	r8, r0, r4, lsr #18
   12360:	ldrdeq	ip, [r1], -r5
   12364:	andeq	ip, r1, fp, lsr #13
   12368:	andeq	r0, r3, r8, lsl #24
   1236c:	andeq	ip, r1, r3, ror #15
   12370:	push	{r4, lr}
   12374:	mov	r4, r1
   12378:	str	r2, [r1, #16]
   1237c:	mov	r2, r1
   12380:	ldr	r1, [pc, #76]	; 123d4 <ftello64@plt+0xca8>
   12384:	bl	172d8 <argp_parse@@Base+0xb90>
   12388:	cmp	r0, #0
   1238c:	bge	123ac <ftello64@plt+0xc80>
   12390:	bl	11594 <__errno_location@plt>
   12394:	ldr	r2, [pc, #60]	; 123d8 <ftello64@plt+0xcac>
   12398:	ldr	r1, [r0]
   1239c:	mov	r0, #0
   123a0:	bl	114d4 <error@plt>
   123a4:	mvn	r0, #0
   123a8:	pop	{r4, pc}
   123ac:	ldr	r3, [pc, #40]	; 123dc <ftello64@plt+0xcb0>
   123b0:	ldr	r0, [r3]
   123b4:	cmp	r0, #0
   123b8:	popeq	{r4, pc}
   123bc:	ldr	r2, [r4, #16]
   123c0:	mov	r1, r4
   123c4:	ldr	r0, [pc, #20]	; 123e0 <ftello64@plt+0xcb4>
   123c8:	bl	113f0 <printf@plt>
   123cc:	mov	r0, #0
   123d0:	pop	{r4, pc}
   123d4:	andeq	r8, r0, r2, lsr #18
   123d8:	andeq	ip, r1, r2, lsl r8
   123dc:	andeq	r0, r3, r8, lsl #24
   123e0:	andeq	ip, r1, r4, lsr #16
   123e4:	push	{r4, lr}
   123e8:	mov	r4, r1
   123ec:	str	r2, [r1, #16]
   123f0:	mov	r2, r1
   123f4:	ldr	r1, [pc, #76]	; 12448 <ftello64@plt+0xd1c>
   123f8:	bl	172d8 <argp_parse@@Base+0xb90>
   123fc:	cmp	r0, #0
   12400:	bge	12420 <ftello64@plt+0xcf4>
   12404:	bl	11594 <__errno_location@plt>
   12408:	ldr	r2, [pc, #60]	; 1244c <ftello64@plt+0xd20>
   1240c:	ldr	r1, [r0]
   12410:	mov	r0, #0
   12414:	bl	114d4 <error@plt>
   12418:	mvn	r0, #0
   1241c:	pop	{r4, pc}
   12420:	ldr	r3, [pc, #40]	; 12450 <ftello64@plt+0xd24>
   12424:	ldr	r0, [r3]
   12428:	cmp	r0, #0
   1242c:	popeq	{r4, pc}
   12430:	ldr	r2, [r4, #16]
   12434:	mov	r1, r4
   12438:	ldr	r0, [pc, #20]	; 12454 <ftello64@plt+0xd28>
   1243c:	bl	113f0 <printf@plt>
   12440:	mov	r0, #0
   12444:	pop	{r4, pc}
   12448:	andeq	r8, r0, lr, lsl r9
   1244c:	andeq	ip, r1, r4, asr #16
   12450:	andeq	r0, r3, r8, lsl #24
   12454:	andeq	ip, r1, r9, asr r8
   12458:	push	{r4, r5, r6, r7, lr}
   1245c:	mov	lr, r1
   12460:	mov	r7, r0
   12464:	mov	r4, r1
   12468:	mov	r5, r2
   1246c:	mov	r6, r3
   12470:	ldm	lr!, {r0, r1, r2, r3}
   12474:	sub	sp, sp, #36	; 0x24
   12478:	mov	ip, sp
   1247c:	stmia	ip!, {r0, r1, r2, r3}
   12480:	ldm	lr, {r0, r1, r2, r3}
   12484:	stm	ip, {r0, r1, r2, r3}
   12488:	mov	r2, sp
   1248c:	ldr	r1, [pc, #244]	; 12588 <ftello64@plt+0xe5c>
   12490:	mov	r0, r7
   12494:	bl	172d8 <argp_parse@@Base+0xb90>
   12498:	cmp	r0, #0
   1249c:	bge	124c0 <ftello64@plt+0xd94>
   124a0:	bl	11594 <__errno_location@plt>
   124a4:	ldr	r2, [pc, #224]	; 1258c <ftello64@plt+0xe60>
   124a8:	ldr	r1, [r0]
   124ac:	mov	r0, #0
   124b0:	bl	114d4 <error@plt>
   124b4:	mvn	r0, #0
   124b8:	add	sp, sp, #36	; 0x24
   124bc:	pop	{r4, r5, r6, r7, pc}
   124c0:	ldrh	r3, [sp, #16]
   124c4:	mov	r2, r4
   124c8:	ldr	r1, [pc, #192]	; 12590 <ftello64@plt+0xe64>
   124cc:	orr	r3, r3, r5
   124d0:	bic	r3, r3, r6
   124d4:	strh	r3, [r4, #16]
   124d8:	mov	r0, r7
   124dc:	bl	172d8 <argp_parse@@Base+0xb90>
   124e0:	cmp	r0, #0
   124e4:	bge	124f4 <ftello64@plt+0xdc8>
   124e8:	bl	11594 <__errno_location@plt>
   124ec:	ldr	r2, [pc, #160]	; 12594 <ftello64@plt+0xe68>
   124f0:	b	124a8 <ftello64@plt+0xd7c>
   124f4:	ldr	r3, [pc, #156]	; 12598 <ftello64@plt+0xe6c>
   124f8:	ldr	r0, [r3]
   124fc:	cmp	r0, #0
   12500:	beq	124b8 <ftello64@plt+0xd8c>
   12504:	ldr	r3, [pc, #144]	; 1259c <ftello64@plt+0xe70>
   12508:	cmp	r5, #0
   1250c:	ldr	r1, [pc, #140]	; 125a0 <ftello64@plt+0xe74>
   12510:	ldr	r0, [pc, #140]	; 125a4 <ftello64@plt+0xe78>
   12514:	moveq	r1, r3
   12518:	bl	113f0 <printf@plt>
   1251c:	cmp	r5, #0
   12520:	beq	12544 <ftello64@plt+0xe18>
   12524:	ldr	r0, [pc, #124]	; 125a8 <ftello64@plt+0xe7c>
   12528:	bl	113f0 <printf@plt>
   1252c:	mov	r2, #44	; 0x2c
   12530:	mov	r1, #0
   12534:	mov	r0, r5
   12538:	bl	11d34 <ftello64@plt+0x608>
   1253c:	mov	r0, #39	; 0x27
   12540:	bl	115d0 <putchar@plt>
   12544:	mov	r1, r4
   12548:	ldr	r0, [pc, #92]	; 125ac <ftello64@plt+0xe80>
   1254c:	bl	113f0 <printf@plt>
   12550:	cmp	r6, #0
   12554:	beq	12578 <ftello64@plt+0xe4c>
   12558:	ldr	r0, [pc, #80]	; 125b0 <ftello64@plt+0xe84>
   1255c:	bl	113f0 <printf@plt>
   12560:	mov	r2, #44	; 0x2c
   12564:	mov	r1, #0
   12568:	mov	r0, r6
   1256c:	bl	11d34 <ftello64@plt+0x608>
   12570:	mov	r0, #39	; 0x27
   12574:	bl	115d0 <putchar@plt>
   12578:	ldr	r0, [pc, #52]	; 125b4 <ftello64@plt+0xe88>
   1257c:	bl	114ec <puts@plt>
   12580:	mov	r0, #0
   12584:	b	124b8 <ftello64@plt+0xd8c>
   12588:	andeq	r8, r0, r3, lsl r9
   1258c:	andeq	ip, r1, r0, lsl #17
   12590:	andeq	r8, r0, r4, lsl r9
   12594:	muleq	r1, r4, r8
   12598:	andeq	r0, r3, r8, lsl #24
   1259c:	andeq	ip, r1, ip, ror r8
   125a0:	andeq	pc, r1, fp, asr r6	; <UNPREDICTABLE>
   125a4:	andeq	ip, r1, r8, lsr #17
   125a8:	andeq	ip, r1, fp, asr #17
   125ac:			; <UNDEFINED> instruction: 0x0001c8b8
   125b0:	andeq	ip, r1, r1, asr #17
   125b4:	ldrdeq	sp, [r1], -r5
   125b8:	push	{r4, r5, lr}
   125bc:	mov	r4, r1
   125c0:	sub	sp, sp, #36	; 0x24
   125c4:	mov	r2, #32
   125c8:	mov	r1, #0
   125cc:	mov	r5, r0
   125d0:	mov	r0, sp
   125d4:	bl	115c4 <memset@plt>
   125d8:	mov	r2, #16
   125dc:	ldr	r1, [r4]
   125e0:	mov	r0, sp
   125e4:	bl	115dc <strncpy@plt>
   125e8:	mov	r3, #0
   125ec:	strb	r3, [sp, #15]
   125f0:	ldr	r3, [r4, #4]
   125f4:	tst	r3, #8
   125f8:	bne	12720 <ftello64@plt+0xff4>
   125fc:	ldr	r3, [r4, #4]
   12600:	tst	r3, #16
   12604:	beq	12620 <ftello64@plt+0xef4>
   12608:	ldr	r2, [r4, #24]
   1260c:	mov	r1, sp
   12610:	mov	r0, r5
   12614:	bl	11f88 <ftello64@plt+0x85c>
   12618:	cmp	r0, #0
   1261c:	bne	12738 <ftello64@plt+0x100c>
   12620:	ldr	r3, [r4, #4]
   12624:	tst	r3, #32
   12628:	beq	12644 <ftello64@plt+0xf18>
   1262c:	ldr	r2, [r4, #28]
   12630:	mov	r1, sp
   12634:	mov	r0, r5
   12638:	bl	1203c <ftello64@plt+0x910>
   1263c:	cmp	r0, #0
   12640:	bne	12738 <ftello64@plt+0x100c>
   12644:	ldr	r3, [r4, #4]
   12648:	tst	r3, #64	; 0x40
   1264c:	beq	12668 <ftello64@plt+0xf3c>
   12650:	ldr	r2, [r4, #32]
   12654:	mov	r1, sp
   12658:	mov	r0, r5
   1265c:	bl	121cc <ftello64@plt+0xaa0>
   12660:	cmp	r0, #0
   12664:	bne	12738 <ftello64@plt+0x100c>
   12668:	ldr	r3, [r4, #4]
   1266c:	tst	r3, #1024	; 0x400
   12670:	beq	1268c <ftello64@plt+0xf60>
   12674:	ldr	r2, [r4, #52]	; 0x34
   12678:	mov	r1, sp
   1267c:	mov	r0, r5
   12680:	bl	12280 <ftello64@plt+0xb54>
   12684:	cmp	r0, #0
   12688:	bne	12738 <ftello64@plt+0x100c>
   1268c:	ldr	r3, [r4, #4]
   12690:	tst	r3, #128	; 0x80
   12694:	beq	126b0 <ftello64@plt+0xf84>
   12698:	ldr	r2, [r4, #36]	; 0x24
   1269c:	mov	r1, sp
   126a0:	mov	r0, r5
   126a4:	bl	12370 <ftello64@plt+0xc44>
   126a8:	cmp	r0, #0
   126ac:	bne	12738 <ftello64@plt+0x100c>
   126b0:	ldr	r3, [r4, #4]
   126b4:	tst	r3, #256	; 0x100
   126b8:	beq	126d4 <ftello64@plt+0xfa8>
   126bc:	ldr	r2, [r4, #40]	; 0x28
   126c0:	mov	r1, sp
   126c4:	mov	r0, r5
   126c8:	bl	123e4 <ftello64@plt+0xcb8>
   126cc:	cmp	r0, #0
   126d0:	bne	12738 <ftello64@plt+0x100c>
   126d4:	ldr	r3, [r4, #4]
   126d8:	tst	r3, #1
   126dc:	beq	126f8 <ftello64@plt+0xfcc>
   126e0:	ldr	r2, [r4, #8]
   126e4:	mov	r1, sp
   126e8:	mov	r0, r5
   126ec:	bl	1618c <ftello64@plt+0x4a60>
   126f0:	cmp	r0, #0
   126f4:	bne	12738 <ftello64@plt+0x100c>
   126f8:	ldr	r2, [r4, #44]	; 0x2c
   126fc:	cmp	r2, #0
   12700:	beq	12740 <ftello64@plt+0x1014>
   12704:	ldr	r3, [r4, #48]	; 0x30
   12708:	mov	r1, sp
   1270c:	mov	r0, r5
   12710:	bl	12458 <ftello64@plt+0xd2c>
   12714:	cmp	r0, #0
   12718:	beq	1274c <ftello64@plt+0x1020>
   1271c:	b	12738 <ftello64@plt+0x100c>
   12720:	ldr	r2, [r4, #20]
   12724:	mov	r1, sp
   12728:	mov	r0, r5
   1272c:	bl	11df8 <ftello64@plt+0x6cc>
   12730:	cmp	r0, #0
   12734:	beq	125fc <ftello64@plt+0xed0>
   12738:	add	sp, sp, #36	; 0x24
   1273c:	pop	{r4, r5, pc}
   12740:	ldr	r3, [r4, #48]	; 0x30
   12744:	cmp	r3, #0
   12748:	bne	12704 <ftello64@plt+0xfd8>
   1274c:	ldr	r0, [r4, #4]
   12750:	ands	r0, r0, #2
   12754:	beq	12738 <ftello64@plt+0x100c>
   12758:	mov	r0, r5
   1275c:	ldr	r3, [r4, #12]
   12760:	mov	r2, sp
   12764:	ldr	r1, [r4]
   12768:	bl	14a24 <ftello64@plt+0x32f8>
   1276c:	mov	r0, #0
   12770:	b	12738 <ftello64@plt+0x100c>
   12774:	ldr	r1, [r1]
   12778:	ldr	r0, [r0]
   1277c:	b	113d8 <strcmp@plt>
   12780:	ldr	r3, [pc, #20]	; 1279c <ftello64@plt+0x1070>
   12784:	cmp	r0, r3
   12788:	bne	12794 <ftello64@plt+0x1068>
   1278c:	ldr	r0, [pc, #12]	; 127a0 <ftello64@plt+0x1074>
   12790:	b	11988 <ftello64@plt+0x25c>
   12794:	mov	r0, r1
   12798:	bx	lr
   1279c:	andeq	r0, r0, #4
   127a0:	andeq	ip, r1, r6, lsr #18
   127a4:	push	{r4, r5, r6, lr}
   127a8:	mov	r5, r0
   127ac:	ldr	r4, [pc, #44]	; 127e0 <ftello64@plt+0x10b4>
   127b0:	ldr	r0, [r4]
   127b4:	cmp	r0, #0
   127b8:	bne	127c8 <ftello64@plt+0x109c>
   127bc:	mov	r4, r0
   127c0:	mov	r0, r4
   127c4:	pop	{r4, r5, r6, pc}
   127c8:	mov	r1, r5
   127cc:	bl	113d8 <strcmp@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	127c0 <ftello64@plt+0x1094>
   127d8:	add	r4, r4, #12
   127dc:	b	127b0 <ftello64@plt+0x1084>
   127e0:			; <UNDEFINED> instruction: 0x000302bc
   127e4:	push	{r4, r5, r6, r7, r8, lr}
   127e8:	mov	r8, #1
   127ec:	ldr	r3, [pc, #148]	; 12888 <ftello64@plt+0x115c>
   127f0:	ldr	r7, [pc, #148]	; 1288c <ftello64@plt+0x1160>
   127f4:	ldr	r5, [pc, #148]	; 12890 <ftello64@plt+0x1164>
   127f8:	str	r8, [r3]
   127fc:	ldr	r3, [r7]
   12800:	mov	r1, #56	; 0x38
   12804:	add	r3, r3, r8
   12808:	mov	r6, r0
   1280c:	mul	r1, r1, r3
   12810:	ldr	r0, [r5]
   12814:	str	r3, [r7]
   12818:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   1281c:	cmp	r0, #0
   12820:	str	r0, [r5]
   12824:	bne	1283c <ftello64@plt+0x1110>
   12828:	bl	11594 <__errno_location@plt>
   1282c:	ldr	r2, [pc, #96]	; 12894 <ftello64@plt+0x1168>
   12830:	ldr	r1, [r0]
   12834:	mov	r0, r8
   12838:	bl	114d4 <error@plt>
   1283c:	ldr	r3, [r7]
   12840:	mov	r4, #56	; 0x38
   12844:	ldr	lr, [pc, #76]	; 12898 <ftello64@plt+0x116c>
   12848:	mul	r4, r4, r3
   1284c:	ldr	r7, [r5]
   12850:	sub	r4, r4, #56	; 0x38
   12854:	ldm	lr!, {r0, r1, r2, r3}
   12858:	add	r5, r7, r4
   1285c:	mov	ip, r5
   12860:	stmia	ip!, {r0, r1, r2, r3}
   12864:	ldm	lr!, {r0, r1, r2, r3}
   12868:	stmia	ip!, {r0, r1, r2, r3}
   1286c:	ldm	lr!, {r0, r1, r2, r3}
   12870:	stmia	ip!, {r0, r1, r2, r3}
   12874:	ldm	lr, {r0, r1}
   12878:	stm	ip, {r0, r1}
   1287c:	str	r6, [r7, r4]
   12880:	mov	r0, r5
   12884:	pop	{r4, r5, r6, r7, r8, pc}
   12888:	andeq	r0, r3, r4, lsl #24
   1288c:	strdeq	r0, [r3], -r8
   12890:	strdeq	r0, [r3], -r4
   12894:	andeq	ip, r1, r8, lsr r9
   12898:	ldrdeq	ip, [r1], -r0
   1289c:	push	{r0, r1, r2, r4, r5, lr}
   128a0:	subs	r4, r0, #0
   128a4:	mov	r5, r1
   128a8:	bne	128c4 <ftello64@plt+0x1198>
   128ac:	str	r1, [sp]
   128b0:	ldr	r3, [pc, #76]	; 12904 <ftello64@plt+0x11d8>
   128b4:	ldr	r2, [pc, #76]	; 12908 <ftello64@plt+0x11dc>
   128b8:	mov	r1, r4
   128bc:	mov	r0, #1
   128c0:	bl	114d4 <error@plt>
   128c4:	ldr	r3, [r4, #4]
   128c8:	tst	r3, #8
   128cc:	beq	128ec <ftello64@plt+0x11c0>
   128d0:	ldr	r3, [r4]
   128d4:	ldr	r2, [pc, #48]	; 1290c <ftello64@plt+0x11e0>
   128d8:	str	r3, [sp]
   128dc:	mov	r1, #0
   128e0:	ldr	r3, [pc, #28]	; 12904 <ftello64@plt+0x11d8>
   128e4:	mov	r0, #1
   128e8:	bl	114d4 <error@plt>
   128ec:	ldr	r3, [r4, #4]
   128f0:	str	r5, [r4, #20]
   128f4:	orr	r3, r3, #8
   128f8:	str	r3, [r4, #4]
   128fc:	add	sp, sp, #12
   12900:	pop	{r4, r5, pc}
   12904:	muleq	r1, r7, r6
   12908:	andeq	ip, r1, r5, ror #18
   1290c:	andeq	ip, r1, r8, lsl #19
   12910:	push	{r0, r1, r2, r4, r5, lr}
   12914:	subs	r4, r0, #0
   12918:	mov	r5, r1
   1291c:	bne	12938 <ftello64@plt+0x120c>
   12920:	str	r1, [sp]
   12924:	ldr	r3, [pc, #76]	; 12978 <ftello64@plt+0x124c>
   12928:	ldr	r2, [pc, #76]	; 1297c <ftello64@plt+0x1250>
   1292c:	mov	r1, r4
   12930:	mov	r0, #1
   12934:	bl	114d4 <error@plt>
   12938:	ldr	r3, [r4, #4]
   1293c:	tst	r3, #16
   12940:	beq	12960 <ftello64@plt+0x1234>
   12944:	ldr	r3, [r4]
   12948:	ldr	r2, [pc, #48]	; 12980 <ftello64@plt+0x1254>
   1294c:	str	r3, [sp]
   12950:	mov	r1, #0
   12954:	ldr	r3, [pc, #28]	; 12978 <ftello64@plt+0x124c>
   12958:	mov	r0, #1
   1295c:	bl	114d4 <error@plt>
   12960:	ldr	r3, [r4, #4]
   12964:	str	r5, [r4, #24]
   12968:	orr	r3, r3, #16
   1296c:	str	r3, [r4, #4]
   12970:	add	sp, sp, #12
   12974:	pop	{r4, r5, pc}
   12978:	andeq	ip, r1, pc, lsr #19
   1297c:	andeq	ip, r1, r5, ror #18
   12980:	andeq	ip, r1, r8, lsl #19
   12984:	push	{r0, r1, r2, r4, r5, lr}
   12988:	subs	r4, r0, #0
   1298c:	mov	r5, r1
   12990:	bne	129ac <ftello64@plt+0x1280>
   12994:	str	r1, [sp]
   12998:	ldr	r3, [pc, #76]	; 129ec <ftello64@plt+0x12c0>
   1299c:	ldr	r2, [pc, #76]	; 129f0 <ftello64@plt+0x12c4>
   129a0:	mov	r1, r4
   129a4:	mov	r0, #1
   129a8:	bl	114d4 <error@plt>
   129ac:	ldr	r3, [r4, #4]
   129b0:	tst	r3, #32
   129b4:	beq	129d4 <ftello64@plt+0x12a8>
   129b8:	ldr	r3, [r4]
   129bc:	ldr	r2, [pc, #48]	; 129f4 <ftello64@plt+0x12c8>
   129c0:	str	r3, [sp]
   129c4:	mov	r1, #0
   129c8:	ldr	r3, [pc, #28]	; 129ec <ftello64@plt+0x12c0>
   129cc:	mov	r0, #1
   129d0:	bl	114d4 <error@plt>
   129d4:	ldr	r3, [r4, #4]
   129d8:	str	r5, [r4, #28]
   129dc:	orr	r3, r3, #32
   129e0:	str	r3, [r4, #4]
   129e4:	add	sp, sp, #12
   129e8:	pop	{r4, r5, pc}
   129ec:			; <UNDEFINED> instruction: 0x0001c9b7
   129f0:	andeq	ip, r1, r5, ror #18
   129f4:	andeq	ip, r1, r8, lsl #19
   129f8:	push	{r0, r1, r2, r4, r5, lr}
   129fc:	subs	r4, r0, #0
   12a00:	mov	r5, r1
   12a04:	bne	12a20 <ftello64@plt+0x12f4>
   12a08:	str	r1, [sp]
   12a0c:	ldr	r3, [pc, #76]	; 12a60 <ftello64@plt+0x1334>
   12a10:	ldr	r2, [pc, #76]	; 12a64 <ftello64@plt+0x1338>
   12a14:	mov	r1, r4
   12a18:	mov	r0, #1
   12a1c:	bl	114d4 <error@plt>
   12a20:	ldr	r3, [r4, #4]
   12a24:	tst	r3, #64	; 0x40
   12a28:	beq	12a48 <ftello64@plt+0x131c>
   12a2c:	ldr	r3, [r4]
   12a30:	ldr	r2, [pc, #48]	; 12a68 <ftello64@plt+0x133c>
   12a34:	str	r3, [sp]
   12a38:	mov	r1, #0
   12a3c:	ldr	r3, [pc, #28]	; 12a60 <ftello64@plt+0x1334>
   12a40:	mov	r0, #1
   12a44:	bl	114d4 <error@plt>
   12a48:	ldr	r3, [r4, #4]
   12a4c:	str	r5, [r4, #32]
   12a50:	orr	r3, r3, #64	; 0x40
   12a54:	str	r3, [r4, #4]
   12a58:	add	sp, sp, #12
   12a5c:	pop	{r4, r5, pc}
   12a60:	ldrdeq	ip, [r1], -r2
   12a64:	andeq	ip, r1, r5, ror #18
   12a68:	andeq	ip, r1, r8, lsl #19
   12a6c:	push	{r0, r1, r2, r4, r5, lr}
   12a70:	subs	r4, r0, #0
   12a74:	mov	r5, r1
   12a78:	bne	12a94 <ftello64@plt+0x1368>
   12a7c:	str	r1, [sp]
   12a80:	ldr	r3, [pc, #76]	; 12ad4 <ftello64@plt+0x13a8>
   12a84:	ldr	r2, [pc, #76]	; 12ad8 <ftello64@plt+0x13ac>
   12a88:	mov	r1, r4
   12a8c:	mov	r0, #1
   12a90:	bl	114d4 <error@plt>
   12a94:	ldr	r3, [r4, #4]
   12a98:	tst	r3, #1024	; 0x400
   12a9c:	beq	12abc <ftello64@plt+0x1390>
   12aa0:	ldr	r3, [r4]
   12aa4:	ldr	r2, [pc, #48]	; 12adc <ftello64@plt+0x13b0>
   12aa8:	str	r3, [sp]
   12aac:	mov	r1, #0
   12ab0:	ldr	r3, [pc, #28]	; 12ad4 <ftello64@plt+0x13a8>
   12ab4:	mov	r0, #1
   12ab8:	bl	114d4 <error@plt>
   12abc:	ldr	r3, [r4, #4]
   12ac0:	str	r5, [r4, #52]	; 0x34
   12ac4:	orr	r3, r3, #1024	; 0x400
   12ac8:	str	r3, [r4, #4]
   12acc:	add	sp, sp, #12
   12ad0:	pop	{r4, r5, pc}
   12ad4:	andeq	ip, r1, r4, asr #15
   12ad8:	andeq	ip, r1, r5, ror #18
   12adc:	andeq	ip, r1, r8, lsl #19
   12ae0:	push	{r4, r5, lr}
   12ae4:	subs	r4, r0, #0
   12ae8:	sub	sp, sp, #20
   12aec:	mov	r5, r1
   12af0:	bne	12b0c <ftello64@plt+0x13e0>
   12af4:	str	r1, [sp]
   12af8:	ldr	r3, [pc, #148]	; 12b94 <ftello64@plt+0x1468>
   12afc:	ldr	r2, [pc, #148]	; 12b98 <ftello64@plt+0x146c>
   12b00:	mov	r1, r4
   12b04:	mov	r0, #1
   12b08:	bl	114d4 <error@plt>
   12b0c:	ldr	r3, [r4, #4]
   12b10:	tst	r3, #128	; 0x80
   12b14:	beq	12b34 <ftello64@plt+0x1408>
   12b18:	ldr	r3, [r4]
   12b1c:	ldr	r2, [pc, #120]	; 12b9c <ftello64@plt+0x1470>
   12b20:	str	r3, [sp]
   12b24:	mov	r1, #0
   12b28:	ldr	r3, [pc, #100]	; 12b94 <ftello64@plt+0x1468>
   12b2c:	mov	r0, #1
   12b30:	bl	114d4 <error@plt>
   12b34:	mov	r2, #0
   12b38:	add	r1, sp, #12
   12b3c:	mov	r0, r5
   12b40:	bl	113e4 <strtol@plt>
   12b44:	str	r0, [r4, #36]	; 0x24
   12b48:	ldrb	r3, [r5]
   12b4c:	cmp	r3, #0
   12b50:	beq	12b64 <ftello64@plt+0x1438>
   12b54:	ldr	r3, [sp, #12]
   12b58:	ldrb	r3, [r3]
   12b5c:	cmp	r3, #0
   12b60:	beq	12b80 <ftello64@plt+0x1454>
   12b64:	ldr	r3, [r4]
   12b68:	ldr	r2, [pc, #48]	; 12ba0 <ftello64@plt+0x1474>
   12b6c:	str	r3, [sp]
   12b70:	mov	r1, #0
   12b74:	mov	r3, r5
   12b78:	mov	r0, #1
   12b7c:	bl	114d4 <error@plt>
   12b80:	ldr	r3, [r4, #4]
   12b84:	orr	r3, r3, #128	; 0x80
   12b88:	str	r3, [r4, #4]
   12b8c:	add	sp, sp, #20
   12b90:	pop	{r4, r5, pc}
   12b94:	andeq	ip, r1, r4, ror #19
   12b98:	andeq	ip, r1, lr, ror #19
   12b9c:	andeq	ip, r1, r8, lsl #19
   12ba0:	andeq	ip, r1, r2, lsl sl
   12ba4:	push	{r4, r5, lr}
   12ba8:	subs	r4, r0, #0
   12bac:	sub	sp, sp, #20
   12bb0:	mov	r5, r1
   12bb4:	bne	12bd0 <ftello64@plt+0x14a4>
   12bb8:	str	r1, [sp]
   12bbc:	ldr	r3, [pc, #148]	; 12c58 <ftello64@plt+0x152c>
   12bc0:	ldr	r2, [pc, #148]	; 12c5c <ftello64@plt+0x1530>
   12bc4:	mov	r1, r4
   12bc8:	mov	r0, #1
   12bcc:	bl	114d4 <error@plt>
   12bd0:	ldr	r3, [r4, #4]
   12bd4:	tst	r3, #256	; 0x100
   12bd8:	beq	12bf8 <ftello64@plt+0x14cc>
   12bdc:	ldr	r3, [r4]
   12be0:	ldr	r2, [pc, #120]	; 12c60 <ftello64@plt+0x1534>
   12be4:	str	r3, [sp]
   12be8:	mov	r1, #0
   12bec:	ldr	r3, [pc, #100]	; 12c58 <ftello64@plt+0x152c>
   12bf0:	mov	r0, #1
   12bf4:	bl	114d4 <error@plt>
   12bf8:	mov	r2, #0
   12bfc:	add	r1, sp, #12
   12c00:	mov	r0, r5
   12c04:	bl	113e4 <strtol@plt>
   12c08:	str	r0, [r4, #40]	; 0x28
   12c0c:	ldrb	r3, [r5]
   12c10:	cmp	r3, #0
   12c14:	beq	12c28 <ftello64@plt+0x14fc>
   12c18:	ldr	r3, [sp, #12]
   12c1c:	ldrb	r3, [r3]
   12c20:	cmp	r3, #0
   12c24:	beq	12c44 <ftello64@plt+0x1518>
   12c28:	ldr	r3, [r4]
   12c2c:	ldr	r2, [pc, #48]	; 12c64 <ftello64@plt+0x1538>
   12c30:	str	r3, [sp]
   12c34:	mov	r1, #0
   12c38:	mov	r3, r5
   12c3c:	mov	r0, #1
   12c40:	bl	114d4 <error@plt>
   12c44:	ldr	r3, [r4, #4]
   12c48:	orr	r3, r3, #256	; 0x100
   12c4c:	str	r3, [r4, #4]
   12c50:	add	sp, sp, #20
   12c54:	pop	{r4, r5, pc}
   12c58:	andeq	ip, r1, r4, asr #20
   12c5c:	andeq	ip, r1, lr, ror #19
   12c60:	andeq	ip, r1, r8, lsl #19
   12c64:	andeq	ip, r1, r2, lsl sl
   12c68:	push	{r0, r1, r2, r4, r5, lr}
   12c6c:	subs	r4, r0, #0
   12c70:	mov	r5, r1
   12c74:	bne	12c8c <ftello64@plt+0x1560>
   12c78:	mov	r3, r1
   12c7c:	ldr	r2, [pc, #84]	; 12cd8 <ftello64@plt+0x15ac>
   12c80:	mov	r1, r4
   12c84:	mov	r0, #1
   12c88:	bl	114d4 <error@plt>
   12c8c:	ldr	r1, [pc, #72]	; 12cdc <ftello64@plt+0x15b0>
   12c90:	mov	r0, r5
   12c94:	bl	1148c <strcasecmp@plt>
   12c98:	cmp	r0, #0
   12c9c:	moveq	r3, #2
   12ca0:	strheq	r3, [r4, #16]
   12ca4:	beq	12cc4 <ftello64@plt+0x1598>
   12ca8:	ldr	r3, [r4]
   12cac:	ldr	r2, [pc, #44]	; 12ce0 <ftello64@plt+0x15b4>
   12cb0:	str	r3, [sp]
   12cb4:	mov	r1, #0
   12cb8:	mov	r3, r5
   12cbc:	mov	r0, #1
   12cc0:	bl	114d4 <error@plt>
   12cc4:	ldr	r3, [r4, #4]
   12cc8:	orr	r3, r3, #4
   12ccc:	str	r3, [r4, #4]
   12cd0:	add	sp, sp, #12
   12cd4:	pop	{r4, r5, pc}
   12cd8:	andeq	ip, r1, r1, asr sl
   12cdc:	andeq	ip, r1, r0, lsl #21
   12ce0:	andeq	ip, r1, r5, lsl #21
   12ce4:	ldr	r3, [pc, #84]	; 12d40 <ftello64@plt+0x1614>
   12ce8:	cmp	r0, #0
   12cec:	ldreq	r0, [r3]
   12cf0:	ldrne	ip, [r0, #4]
   12cf4:	orreq	r0, r0, #512	; 0x200
   12cf8:	orrne	ip, ip, #512	; 0x200
   12cfc:	strne	ip, [r0, #4]
   12d00:	streq	r0, [r3]
   12d04:	cmp	r2, #0
   12d08:	mvn	r2, r1
   12d0c:	ldrne	r0, [r3, #4]
   12d10:	ldreq	r0, [r3, #8]
   12d14:	orrne	r1, r0, r1
   12d18:	orreq	r1, r0, r1
   12d1c:	strne	r1, [r3, #4]
   12d20:	streq	r1, [r3, #8]
   12d24:	ldrne	r1, [r3, #8]
   12d28:	ldreq	r1, [r3, #4]
   12d2c:	andne	r2, r2, r1
   12d30:	andeq	r2, r2, r1
   12d34:	strne	r2, [r3, #8]
   12d38:	streq	r2, [r3, #4]
   12d3c:	bx	lr
   12d40:	andeq	r0, r3, ip, asr fp
   12d44:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   12d48:	mov	r8, r0
   12d4c:	ldr	sl, [pc, #144]	; 12de4 <ftello64@plt+0x16b8>
   12d50:	mov	r4, r1
   12d54:	mov	r9, #44	; 0x2c
   12d58:	ldrb	r3, [r4]
   12d5c:	cmp	r3, #0
   12d60:	bne	12d6c <ftello64@plt+0x1640>
   12d64:	add	sp, sp, #16
   12d68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d6c:	mov	r1, r9
   12d70:	mov	r0, r4
   12d74:	bl	1157c <strchr@plt>
   12d78:	subs	r6, r0, #0
   12d7c:	subne	r5, r6, r4
   12d80:	bne	12d90 <ftello64@plt+0x1664>
   12d84:	mov	r0, r4
   12d88:	bl	11570 <strlen@plt>
   12d8c:	mov	r5, r0
   12d90:	add	r2, sp, #12
   12d94:	mov	r1, r5
   12d98:	mov	r0, r4
   12d9c:	bl	11c20 <ftello64@plt+0x4f4>
   12da0:	subs	r7, r0, #0
   12da4:	bne	12dc4 <ftello64@plt+0x1698>
   12da8:	str	r4, [sp, #4]
   12dac:	str	r5, [sp]
   12db0:	mov	r3, r5
   12db4:	mov	r2, sl
   12db8:	mov	r1, r7
   12dbc:	mov	r0, #1
   12dc0:	bl	114d4 <error@plt>
   12dc4:	ldr	r2, [sp, #12]
   12dc8:	mov	r1, r7
   12dcc:	mov	r0, r8
   12dd0:	bl	12ce4 <ftello64@plt+0x15b8>
   12dd4:	add	r4, r4, r5
   12dd8:	cmp	r6, #0
   12ddc:	addne	r4, r4, #1
   12de0:	b	12d58 <ftello64@plt+0x162c>
   12de4:	andeq	ip, r1, r5, asr #21
   12de8:	push	{r4, lr}
   12dec:	mov	r4, r0
   12df0:	bl	12984 <ftello64@plt+0x1258>
   12df4:	mov	r0, r4
   12df8:	mov	r2, #0
   12dfc:	mov	r1, #16
   12e00:	pop	{r4, lr}
   12e04:	b	12ce4 <ftello64@plt+0x15b8>
   12e08:	push	{r4, r5, r6, lr}
   12e0c:	subs	r4, r0, #0
   12e10:	bne	12e28 <ftello64@plt+0x16fc>
   12e14:	ldr	r3, [pc, #96]	; 12e7c <ftello64@plt+0x1750>
   12e18:	ldr	r4, [r3]
   12e1c:	ldr	r3, [pc, #92]	; 12e80 <ftello64@plt+0x1754>
   12e20:	cmp	r4, #0
   12e24:	moveq	r4, r3
   12e28:	ldr	r5, [pc, #84]	; 12e84 <ftello64@plt+0x1758>
   12e2c:	ldr	r1, [r5]
   12e30:	cmp	r1, #0
   12e34:	bne	12e64 <ftello64@plt+0x1738>
   12e38:	ldr	r1, [r5, #8]
   12e3c:	cmp	r1, #0
   12e40:	bne	12e54 <ftello64@plt+0x1728>
   12e44:	mov	r3, r4
   12e48:	ldr	r2, [pc, #56]	; 12e88 <ftello64@plt+0x175c>
   12e4c:	mov	r0, #1
   12e50:	bl	114d4 <error@plt>
   12e54:	ldr	r3, [pc, #48]	; 12e8c <ftello64@plt+0x1760>
   12e58:	ldr	r2, [r5, #8]
   12e5c:	str	r2, [r3]
   12e60:	pop	{r4, r5, r6, pc}
   12e64:	mov	r0, r4
   12e68:	bl	113d8 <strcmp@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	12e38 <ftello64@plt+0x170c>
   12e74:	add	r5, r5, #12
   12e78:	b	12e2c <ftello64@plt+0x1700>
   12e7c:	andeq	r0, r3, r0, lsl #22
   12e80:	ldrdeq	ip, [r1], -r8
   12e84:			; <UNDEFINED> instruction: 0x000302bc
   12e88:	andeq	ip, r1, r0, ror #21
   12e8c:	strdeq	r0, [r3], -ip
   12e90:	push	{r4, r5, r6, r7, lr}
   12e94:	sub	sp, sp, #20
   12e98:	mov	r3, #0
   12e9c:	ldr	r1, [pc, #412]	; 13040 <ftello64@plt+0x1914>
   12ea0:	mov	r4, r0
   12ea4:	str	r3, [sp, #8]
   12ea8:	str	r3, [sp, #12]
   12eac:	bl	11684 <fopen64@plt>
   12eb0:	subs	r7, r0, #0
   12eb4:	bne	12ed0 <ftello64@plt+0x17a4>
   12eb8:	bl	11594 <__errno_location@plt>
   12ebc:	mov	r3, r4
   12ec0:	ldr	r2, [pc, #380]	; 13044 <ftello64@plt+0x1918>
   12ec4:	ldr	r1, [r0]
   12ec8:	mov	r0, #1
   12ecc:	bl	114d4 <error@plt>
   12ed0:	ldr	r3, [pc, #368]	; 13048 <ftello64@plt+0x191c>
   12ed4:	mov	r2, #0
   12ed8:	str	r3, [sp]
   12edc:	mov	r1, r2
   12ee0:	ldr	r3, [pc, #356]	; 1304c <ftello64@plt+0x1920>
   12ee4:	ldr	r0, [pc, #356]	; 13050 <ftello64@plt+0x1924>
   12ee8:	bl	1741c <_obstack_begin@@Base>
   12eec:	ldr	r6, [pc, #352]	; 13054 <ftello64@plt+0x1928>
   12ef0:	mov	r2, r7
   12ef4:	add	r1, sp, #12
   12ef8:	add	r0, sp, #8
   12efc:	bl	116cc <getline@plt>
   12f00:	cmp	r0, #0
   12f04:	bgt	12fa4 <ftello64@plt+0x1878>
   12f08:	ldr	r4, [pc, #324]	; 13054 <ftello64@plt+0x1928>
   12f0c:	ldr	r0, [sp, #8]
   12f10:	bl	171e4 <argp_parse@@Base+0xa9c>
   12f14:	mov	r0, r7
   12f18:	bl	11600 <fclose@plt>
   12f1c:	ldr	r2, [r4, #28]
   12f20:	ldr	r3, [r4, #24]
   12f24:	cmp	r2, r3
   12f28:	bne	12f38 <ftello64@plt+0x180c>
   12f2c:	mov	r1, #1
   12f30:	add	r0, r4, #12
   12f34:	bl	1745c <_obstack_newchunk@@Base>
   12f38:	ldr	r3, [r4, #24]
   12f3c:	add	r2, r3, #1
   12f40:	str	r2, [r4, #24]
   12f44:	mov	r2, #0
   12f48:	strb	r2, [r3]
   12f4c:	ldr	r3, [r4, #24]
   12f50:	ldr	r1, [r4, #20]
   12f54:	ldr	r0, [r4, #28]
   12f58:	cmp	r1, r3
   12f5c:	ldrbeq	r2, [r4, #52]	; 0x34
   12f60:	orreq	r2, r2, #2
   12f64:	strbeq	r2, [r4, #52]	; 0x34
   12f68:	ldr	r2, [r4, #36]	; 0x24
   12f6c:	add	r3, r3, r2
   12f70:	bic	r3, r3, r2
   12f74:	ldr	r2, [r4, #16]
   12f78:	str	r3, [r4, #24]
   12f7c:	sub	r3, r3, r2
   12f80:	sub	r2, r0, r2
   12f84:	cmp	r3, r2
   12f88:	strhi	r0, [r4, #24]
   12f8c:	ldr	r3, [r4, #24]
   12f90:	str	r3, [r4, #20]
   12f94:	ldr	r3, [pc, #188]	; 13058 <ftello64@plt+0x192c>
   12f98:	str	r1, [r3]
   12f9c:	add	sp, sp, #20
   12fa0:	pop	{r4, r5, r6, r7, pc}
   12fa4:	ldr	r4, [sp, #8]
   12fa8:	mov	r0, r4
   12fac:	bl	11570 <strlen@plt>
   12fb0:	subs	r5, r0, #0
   12fb4:	beq	12ef0 <ftello64@plt+0x17c4>
   12fb8:	sub	r3, r5, #1
   12fbc:	ldrb	r2, [r4, r3]
   12fc0:	cmp	r2, #10
   12fc4:	bne	12fd4 <ftello64@plt+0x18a8>
   12fc8:	cmp	r3, #0
   12fcc:	movne	r5, r3
   12fd0:	beq	12ef0 <ftello64@plt+0x17c4>
   12fd4:	add	r2, r4, r5
   12fd8:	b	12ff8 <ftello64@plt+0x18cc>
   12fdc:	ldrb	r3, [r4], #1
   12fe0:	cmp	r3, #32
   12fe4:	beq	12ff8 <ftello64@plt+0x18cc>
   12fe8:	cmp	r3, #35	; 0x23
   12fec:	beq	12ef0 <ftello64@plt+0x17c4>
   12ff0:	cmp	r3, #9
   12ff4:	bne	13000 <ftello64@plt+0x18d4>
   12ff8:	cmp	r4, r2
   12ffc:	bne	12fdc <ftello64@plt+0x18b0>
   13000:	ldr	r3, [r6, #28]
   13004:	ldr	r2, [r6, #24]
   13008:	sub	r3, r3, r2
   1300c:	cmp	r3, r5
   13010:	bcs	13020 <ftello64@plt+0x18f4>
   13014:	mov	r1, r5
   13018:	ldr	r0, [pc, #48]	; 13050 <ftello64@plt+0x1924>
   1301c:	bl	1745c <_obstack_newchunk@@Base>
   13020:	mov	r2, r5
   13024:	ldr	r1, [sp, #8]
   13028:	ldr	r0, [r6, #24]
   1302c:	bl	11444 <memcpy@plt>
   13030:	ldr	r3, [r6, #24]
   13034:	add	r5, r3, r5
   13038:	str	r5, [r6, #24]
   1303c:	b	12ef0 <ftello64@plt+0x17c4>
   13040:	muleq	r1, r4, ip
   13044:	strdeq	ip, [r1], -sl
   13048:	andeq	r7, r1, r4, ror #3
   1304c:	muleq	r1, r4, r2
   13050:	andeq	r0, r3, r8, ror #22
   13054:	andeq	r0, r3, ip, asr fp
   13058:	strdeq	r0, [r3], -ip
   1305c:	cmp	r0, #0
   13060:	bxeq	lr
   13064:	ldr	r3, [pc, #112]	; 130dc <ftello64@plt+0x19b0>
   13068:	ldr	r1, [r3]
   1306c:	cmp	r1, #0
   13070:	ldrne	r2, [r0, #4]
   13074:	orrne	r2, r2, r1
   13078:	strne	r2, [r0, #4]
   1307c:	movne	r2, #0
   13080:	strne	r2, [r3]
   13084:	ldr	r2, [r0, #4]
   13088:	cmp	r2, #0
   1308c:	moveq	r2, #2
   13090:	streq	r2, [r0, #4]
   13094:	ldreq	r2, [pc, #68]	; 130e0 <ftello64@plt+0x19b4>
   13098:	ldreq	r2, [r2]
   1309c:	streq	r2, [r0, #12]
   130a0:	ldr	r2, [r3, #8]
   130a4:	ldr	ip, [r3, #4]
   130a8:	orrs	r1, r2, ip
   130ac:	bne	130b4 <ftello64@plt+0x1988>
   130b0:	bx	lr
   130b4:	ldr	r1, [r0, #44]	; 0x2c
   130b8:	orr	r1, r1, r2
   130bc:	ldr	r2, [r0, #48]	; 0x30
   130c0:	str	r1, [r0, #44]	; 0x2c
   130c4:	orr	r2, r2, ip
   130c8:	str	r2, [r0, #48]	; 0x30
   130cc:	mov	r2, #0
   130d0:	str	r2, [r3, #4]
   130d4:	str	r2, [r3, #8]
   130d8:	bx	lr
   130dc:	andeq	r0, r3, ip, asr fp
   130e0:	strdeq	r0, [r3], -ip
   130e4:	ldr	ip, [r2, #28]
   130e8:	mov	r3, r0
   130ec:	cmp	r3, #108	; 0x6c
   130f0:	ldr	r0, [ip]
   130f4:	beq	13240 <ftello64@plt+0x1b14>
   130f8:	push	{r4, r5, r6, lr}
   130fc:	mov	r4, r1
   13100:	mov	r5, r2
   13104:	bgt	13178 <ftello64@plt+0x1a4c>
   13108:	cmp	r3, #77	; 0x4d
   1310c:	beq	1322c <ftello64@plt+0x1b00>
   13110:	bgt	13134 <ftello64@plt+0x1a08>
   13114:	cmp	r3, #66	; 0x42
   13118:	beq	13218 <ftello64@plt+0x1aec>
   1311c:	cmp	r3, #70	; 0x46
   13120:	beq	13224 <ftello64@plt+0x1af8>
   13124:	cmp	r3, #65	; 0x41
   13128:	bne	13148 <ftello64@plt+0x1a1c>
   1312c:	bl	1289c <ftello64@plt+0x1170>
   13130:	b	131f4 <ftello64@plt+0x1ac8>
   13134:	cmp	r3, #98	; 0x62
   13138:	beq	13218 <ftello64@plt+0x1aec>
   1313c:	bgt	13150 <ftello64@plt+0x1a24>
   13140:	cmp	r3, #97	; 0x61
   13144:	beq	131fc <ftello64@plt+0x1ad0>
   13148:	mov	r0, #7
   1314c:	pop	{r4, r5, r6, pc}
   13150:	cmp	r3, #100	; 0x64
   13154:	beq	1320c <ftello64@plt+0x1ae0>
   13158:	cmp	r3, #105	; 0x69
   1315c:	bne	13148 <ftello64@plt+0x1a1c>
   13160:	bl	1305c <ftello64@plt+0x1930>
   13164:	mov	r0, r4
   13168:	bl	127e4 <ftello64@plt+0x10b8>
   1316c:	ldr	r3, [r5, #28]
   13170:	str	r0, [r3]
   13174:	b	131f4 <ftello64@plt+0x1ac8>
   13178:	cmp	r3, #256	; 0x100
   1317c:	beq	13258 <ftello64@plt+0x1b2c>
   13180:	bgt	131c4 <ftello64@plt+0x1a98>
   13184:	cmp	r3, #112	; 0x70
   13188:	beq	1320c <ftello64@plt+0x1ae0>
   1318c:	bgt	131a0 <ftello64@plt+0x1a74>
   13190:	cmp	r3, #109	; 0x6d
   13194:	bne	13148 <ftello64@plt+0x1a1c>
   13198:	bl	12910 <ftello64@plt+0x11e4>
   1319c:	b	131f4 <ftello64@plt+0x1ac8>
   131a0:	cmp	r3, #115	; 0x73
   131a4:	beq	13234 <ftello64@plt+0x1b08>
   131a8:	cmp	r3, #118	; 0x76
   131ac:	bne	13148 <ftello64@plt+0x1a1c>
   131b0:	ldr	r2, [pc, #236]	; 132a4 <ftello64@plt+0x1b78>
   131b4:	ldr	r3, [r2]
   131b8:	add	r3, r3, #1
   131bc:	str	r3, [r2]
   131c0:	b	131f4 <ftello64@plt+0x1ac8>
   131c4:	ldr	r2, [pc, #220]	; 132a8 <ftello64@plt+0x1b7c>
   131c8:	cmp	r3, r2
   131cc:	beq	13288 <ftello64@plt+0x1b5c>
   131d0:	blt	13260 <ftello64@plt+0x1b34>
   131d4:	add	r2, r2, #1
   131d8:	cmp	r3, r2
   131dc:	beq	13298 <ftello64@plt+0x1b6c>
   131e0:	ldr	r2, [pc, #196]	; 132ac <ftello64@plt+0x1b80>
   131e4:	cmp	r3, r2
   131e8:	ldreq	r3, [r5, #32]
   131ec:	streq	ip, [r3]
   131f0:	bne	13148 <ftello64@plt+0x1a1c>
   131f4:	mov	r0, #0
   131f8:	pop	{r4, r5, r6, pc}
   131fc:	ldr	r3, [pc, #172]	; 132b0 <ftello64@plt+0x1b84>
   13200:	mov	r2, #1
   13204:	str	r2, [r3]
   13208:	b	131f4 <ftello64@plt+0x1ac8>
   1320c:	mov	r1, r4
   13210:	bl	12de8 <ftello64@plt+0x16bc>
   13214:	b	131f4 <ftello64@plt+0x1ac8>
   13218:	mov	r1, r4
   1321c:	bl	129f8 <ftello64@plt+0x12cc>
   13220:	b	131f4 <ftello64@plt+0x1ac8>
   13224:	bl	12d44 <ftello64@plt+0x1618>
   13228:	b	131f4 <ftello64@plt+0x1ac8>
   1322c:	bl	12ae0 <ftello64@plt+0x13b4>
   13230:	b	131f4 <ftello64@plt+0x1ac8>
   13234:	ldr	r0, [pc, #120]	; 132b4 <ftello64@plt+0x1b88>
   13238:	bl	12e08 <ftello64@plt+0x16dc>
   1323c:	b	131f4 <ftello64@plt+0x1ac8>
   13240:	ldr	r2, [pc, #112]	; 132b8 <ftello64@plt+0x1b8c>
   13244:	mov	r0, #0
   13248:	ldr	r3, [r2]
   1324c:	add	r3, r3, #1
   13250:	str	r3, [r2]
   13254:	bx	lr
   13258:	bl	12ba4 <ftello64@plt+0x1478>
   1325c:	b	131f4 <ftello64@plt+0x1ac8>
   13260:	cmp	r1, #0
   13264:	beq	13280 <ftello64@plt+0x1b54>
   13268:	ldrb	r3, [r1]
   1326c:	cmp	r3, #64	; 0x40
   13270:	bne	13280 <ftello64@plt+0x1b54>
   13274:	add	r0, r1, #1
   13278:	bl	12e90 <ftello64@plt+0x1764>
   1327c:	b	131f4 <ftello64@plt+0x1ac8>
   13280:	mov	r0, r4
   13284:	b	13238 <ftello64@plt+0x1b0c>
   13288:	mov	r2, #0
   1328c:	mov	r1, #65	; 0x41
   13290:	bl	12ce4 <ftello64@plt+0x15b8>
   13294:	b	131f4 <ftello64@plt+0x1ac8>
   13298:	mov	r2, #1
   1329c:	mov	r1, r2
   132a0:	b	13290 <ftello64@plt+0x1b64>
   132a4:	andeq	r0, r3, r8, lsl #24
   132a8:	andeq	r0, r0, r2, lsl #2
   132ac:	tsteq	r0, r3
   132b0:	andeq	r0, r3, r0, lsl #24
   132b4:	andeq	ip, r1, r5, lsl fp
   132b8:	andeq	r0, r3, ip, lsl #24
   132bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132c0:	sub	sp, sp, #20
   132c4:	ldr	r4, [pc, #444]	; 13488 <ftello64@plt+0x1d5c>
   132c8:	add	r6, sp, #16
   132cc:	mov	r7, r0
   132d0:	ldr	r3, [r4]
   132d4:	mov	r0, #0
   132d8:	ldr	r5, [pc, #428]	; 1348c <ftello64@plt+0x1d60>
   132dc:	mov	r8, r1
   132e0:	str	r3, [r6, #-4]!
   132e4:	bl	12e08 <ftello64@plt+0x16dc>
   132e8:	ldr	r3, [pc, #416]	; 13490 <ftello64@plt+0x1d64>
   132ec:	ldr	r2, [pc, #416]	; 13494 <ftello64@plt+0x1d68>
   132f0:	add	r1, r5, #144	; 0x90
   132f4:	ldr	r0, [pc, #412]	; 13498 <ftello64@plt+0x1d6c>
   132f8:	str	r2, [r3]
   132fc:	bl	17130 <argp_parse@@Base+0x9e8>
   13300:	ldr	r3, [pc, #404]	; 1349c <ftello64@plt+0x1d70>
   13304:	ldr	ip, [pc, #404]	; 134a0 <ftello64@plt+0x1d74>
   13308:	ldm	r3, {r0, r1, r2, r3}
   1330c:	str	ip, [r5, #168]	; 0xa8
   13310:	stm	ip, {r0, r1, r2, r3}
   13314:	mov	r1, r7
   13318:	ldr	r3, [pc, #388]	; 134a4 <ftello64@plt+0x1d78>
   1331c:	mov	r2, r8
   13320:	add	r0, r5, #152	; 0x98
   13324:	ldr	r3, [r3]
   13328:	str	r3, [r5, #160]	; 0xa0
   1332c:	add	r3, sp, #8
   13330:	str	r3, [sp]
   13334:	str	r6, [sp, #4]
   13338:	mov	r3, #8
   1333c:	bl	16748 <argp_parse@@Base>
   13340:	ldr	r0, [sp, #12]
   13344:	bl	1305c <ftello64@plt+0x1930>
   13348:	ldr	r1, [sp, #8]
   1334c:	cmp	r7, r1
   13350:	ble	13380 <ftello64@plt+0x1c54>
   13354:	add	r2, r8, r1, lsl #2
   13358:	mov	r0, r6
   1335c:	sub	r1, r7, r1
   13360:	bl	15e2c <ftello64@plt+0x4700>
   13364:	subs	r1, r0, #0
   13368:	bne	13378 <ftello64@plt+0x1c4c>
   1336c:	ldr	r2, [pc, #308]	; 134a8 <ftello64@plt+0x1d7c>
   13370:	mov	r0, #1
   13374:	bl	114d4 <error@plt>
   13378:	ldr	r0, [sp, #12]
   1337c:	bl	1305c <ftello64@plt+0x1930>
   13380:	ldr	r3, [r4]
   13384:	cmp	r3, #0
   13388:	bne	133ec <ftello64@plt+0x1cc0>
   1338c:	ldr	r3, [pc, #280]	; 134ac <ftello64@plt+0x1d80>
   13390:	ldr	r3, [r3]
   13394:	blx	r3
   13398:	subs	r5, r0, #0
   1339c:	bne	133b0 <ftello64@plt+0x1c84>
   133a0:	ldr	r2, [pc, #264]	; 134b0 <ftello64@plt+0x1d84>
   133a4:	mov	r1, r5
   133a8:	mov	r0, #1
   133ac:	bl	114d4 <error@plt>
   133b0:	ldr	r7, [pc, #252]	; 134b4 <ftello64@plt+0x1d88>
   133b4:	ldr	r9, [pc, #252]	; 134b8 <ftello64@plt+0x1d8c>
   133b8:	add	r5, r5, #8
   133bc:	mov	r8, #56	; 0x38
   133c0:	ldr	r3, [r5, #-8]
   133c4:	cmp	r3, #0
   133c8:	bne	133f4 <ftello64@plt+0x1cc8>
   133cc:	ldr	r3, [r5, #-4]
   133d0:	cmp	r3, #0
   133d4:	bne	133f4 <ftello64@plt+0x1cc8>
   133d8:	ldr	r3, [pc, #220]	; 134bc <ftello64@plt+0x1d90>
   133dc:	mov	r2, #56	; 0x38
   133e0:	ldr	r1, [r7]
   133e4:	ldr	r0, [r4]
   133e8:	bl	11690 <qsort@plt>
   133ec:	add	sp, sp, #20
   133f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133f4:	ldr	r1, [r7]
   133f8:	ldr	r0, [r4]
   133fc:	add	r1, r1, #1
   13400:	str	r1, [r7]
   13404:	mul	r1, r8, r1
   13408:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   1340c:	cmp	r0, #0
   13410:	str	r0, [r4]
   13414:	bne	1342c <ftello64@plt+0x1d00>
   13418:	bl	11594 <__errno_location@plt>
   1341c:	ldr	r2, [pc, #156]	; 134c0 <ftello64@plt+0x1d94>
   13420:	ldr	r1, [r0]
   13424:	mov	r0, #1
   13428:	bl	114d4 <error@plt>
   1342c:	ldr	r6, [r7]
   13430:	ldr	lr, [pc, #140]	; 134c4 <ftello64@plt+0x1d98>
   13434:	ldr	fp, [r4]
   13438:	mul	r6, r8, r6
   1343c:	ldm	lr!, {r0, r1, r2, r3}
   13440:	sub	r6, r6, #56	; 0x38
   13444:	add	sl, fp, r6
   13448:	mov	ip, sl
   1344c:	add	r5, r5, #8
   13450:	stmia	ip!, {r0, r1, r2, r3}
   13454:	ldm	lr!, {r0, r1, r2, r3}
   13458:	stmia	ip!, {r0, r1, r2, r3}
   1345c:	ldm	lr!, {r0, r1, r2, r3}
   13460:	stmia	ip!, {r0, r1, r2, r3}
   13464:	ldm	lr, {r0, r1}
   13468:	stm	ip, {r0, r1}
   1346c:	ldr	r3, [r5, #-12]
   13470:	str	r3, [fp, r6]
   13474:	mov	r3, #2
   13478:	str	r3, [sl, #4]
   1347c:	ldr	r3, [r9]
   13480:	str	r3, [sl, #12]
   13484:	b	133c0 <ftello64@plt+0x1c94>
   13488:	strdeq	r0, [r3], -r4
   1348c:			; <UNDEFINED> instruction: 0x000302bc
   13490:	andeq	r0, r3, r8, lsr #24
   13494:	andeq	ip, r1, sp, lsl fp
   13498:	andeq	ip, r1, r5, lsr fp
   1349c:	andeq	r0, r3, r0, lsr #21
   134a0:	muleq	r3, r4, fp
   134a4:	strdeq	r0, [r3], -ip
   134a8:	andeq	ip, r1, lr, lsr fp
   134ac:	muleq	r3, ip, sl
   134b0:	andeq	ip, r1, r0, asr fp
   134b4:	strdeq	r0, [r3], -r8
   134b8:	strdeq	r0, [r3], -ip
   134bc:	andeq	r2, r1, r4, ror r7
   134c0:	andeq	ip, r1, r8, lsr r9
   134c4:	ldrdeq	ip, [r1], -r0
   134c8:	bx	lr
   134cc:	cmp	r1, #0
   134d0:	push	{r4, lr}
   134d4:	movle	r0, #0
   134d8:	ble	134f0 <ftello64@plt+0x1dc4>
   134dc:	mov	r3, r2
   134e0:	mov	r2, #0
   134e4:	mov	r1, r2
   134e8:	ldr	r0, [r3]
   134ec:	bl	11564 <strtoul@plt>
   134f0:	bl	11558 <exit@plt>
   134f4:	push	{r4, r5, r6, lr}
   134f8:	mov	r4, r0
   134fc:	ldr	r0, [r0]
   13500:	bl	116d8 <if_nametoindex@plt>
   13504:	subs	r5, r0, #0
   13508:	bne	13524 <ftello64@plt+0x1df8>
   1350c:	bl	11594 <__errno_location@plt>
   13510:	ldr	r3, [r4]
   13514:	ldr	r2, [pc, #56]	; 13554 <ftello64@plt+0x1e28>
   13518:	ldr	r1, [r0]
   1351c:	mov	r0, #1
   13520:	bl	114d4 <error@plt>
   13524:	mov	r1, r5
   13528:	ldr	r0, [pc, #40]	; 13558 <ftello64@plt+0x1e2c>
   1352c:	bl	113f0 <printf@plt>
   13530:	ldr	r3, [pc, #36]	; 1355c <ftello64@plt+0x1e30>
   13534:	ldr	r2, [r3]
   13538:	ldr	r3, [r2]
   1353c:	add	r0, r3, r0
   13540:	ldr	r3, [pc, #24]	; 13560 <ftello64@plt+0x1e34>
   13544:	str	r0, [r2]
   13548:	mov	r2, #1
   1354c:	str	r2, [r3]
   13550:	pop	{r4, r5, r6, pc}
   13554:	ldrdeq	sp, [r1], -r0
   13558:	ldrdeq	lr, [r1], -r0
   1355c:	andeq	r0, r3, r0, lsr #10
   13560:	andeq	r0, r3, r0, lsl ip
   13564:	cmp	r1, #9
   13568:	push	{r4, lr}
   1356c:	mov	r0, r1
   13570:	ldr	r3, [pc, #96]	; 135d8 <ftello64@plt+0x1eac>
   13574:	beq	1359c <ftello64@plt+0x1e70>
   13578:	cmp	r1, #10
   1357c:	moveq	r2, #0
   13580:	ldreq	r3, [r3]
   13584:	streq	r2, [r3]
   13588:	beq	135bc <ftello64@plt+0x1e90>
   1358c:	ldr	r2, [r3]
   13590:	ldr	r3, [r2]
   13594:	add	r3, r3, #1
   13598:	b	135b8 <ftello64@plt+0x1e8c>
   1359c:	ldr	r2, [r3]
   135a0:	ldr	r3, [r2]
   135a4:	add	r1, r3, #7
   135a8:	cmp	r3, #0
   135ac:	movlt	r3, r1
   135b0:	bic	r3, r3, #7
   135b4:	add	r3, r3, #8
   135b8:	str	r3, [r2]
   135bc:	ldr	r3, [pc, #24]	; 135dc <ftello64@plt+0x1eb0>
   135c0:	ldr	r1, [r3]
   135c4:	bl	11654 <putc@plt>
   135c8:	ldr	r3, [pc, #16]	; 135e0 <ftello64@plt+0x1eb4>
   135cc:	mov	r2, #1
   135d0:	str	r2, [r3]
   135d4:	pop	{r4, pc}
   135d8:	andeq	r0, r3, r0, lsr #10
   135dc:	andeq	r0, r3, ip, lsl ip
   135e0:	andeq	r0, r3, r0, lsl ip
   135e4:	mov	r1, #10
   135e8:	b	13564 <ftello64@plt+0x1e38>
   135ec:	mov	r1, #9
   135f0:	b	13564 <ftello64@plt+0x1e38>
   135f4:	push	{r4, r5, r6, r7, r8, lr}
   135f8:	mov	r5, r1
   135fc:	mov	r4, r2
   13600:	mov	r6, r0
   13604:	bl	11594 <__errno_location@plt>
   13608:	mov	r2, #0
   1360c:	cmp	r5, r2
   13610:	ldr	r5, [pc, #96]	; 13678 <ftello64@plt+0x1f4c>
   13614:	str	r2, [r0]
   13618:	bgt	13650 <ftello64@plt+0x1f24>
   1361c:	ldr	r3, [r5]
   13620:	ldr	r3, [r3]
   13624:	add	r4, r3, #7
   13628:	cmp	r3, #0
   1362c:	movlt	r3, r4
   13630:	bic	r4, r3, #7
   13634:	add	r4, r4, #8
   13638:	mov	r7, #32
   1363c:	ldr	r3, [r5]
   13640:	ldr	r3, [r3]
   13644:	cmp	r4, r3
   13648:	bgt	13668 <ftello64@plt+0x1f3c>
   1364c:	pop	{r4, r5, r6, r7, r8, pc}
   13650:	ldr	r0, [r4]
   13654:	mov	r1, r2
   13658:	bl	113e4 <strtol@plt>
   1365c:	subs	r4, r0, #0
   13660:	bgt	13638 <ftello64@plt+0x1f0c>
   13664:	b	1361c <ftello64@plt+0x1ef0>
   13668:	mov	r1, r7
   1366c:	mov	r0, r6
   13670:	bl	13564 <ftello64@plt+0x1e38>
   13674:	b	1363c <ftello64@plt+0x1f10>
   13678:	andeq	r0, r3, r0, lsr #10
   1367c:	push	{r4, r5, r6, lr}
   13680:	mov	r5, r0
   13684:	sub	r4, r1, #1
   13688:	ldrb	r1, [r4, #1]!
   1368c:	cmp	r1, #0
   13690:	bne	13698 <ftello64@plt+0x1f6c>
   13694:	pop	{r4, r5, r6, pc}
   13698:	mov	r0, r5
   1369c:	bl	13564 <ftello64@plt+0x1e38>
   136a0:	b	13688 <ftello64@plt+0x1f5c>
   136a4:	cmp	r1, #0
   136a8:	push	{r4, r5, r6, lr}
   136ac:	mov	r5, r0
   136b0:	ldreq	r4, [r0]
   136b4:	ldrne	r4, [r2]
   136b8:	mov	r0, r4
   136bc:	bl	127a4 <ftello64@plt+0x1078>
   136c0:	subs	r6, r0, #0
   136c4:	bne	136e0 <ftello64@plt+0x1fb4>
   136c8:	bl	11594 <__errno_location@plt>
   136cc:	mov	r3, r4
   136d0:	ldr	r2, [pc, #24]	; 136f0 <ftello64@plt+0x1fc4>
   136d4:	ldr	r1, [r0]
   136d8:	mov	r0, #1
   136dc:	bl	114d4 <error@plt>
   136e0:	ldr	r1, [r6, #4]
   136e4:	mov	r0, r5
   136e8:	pop	{r4, r5, r6, lr}
   136ec:	b	1367c <ftello64@plt+0x1f50>
   136f0:	strdeq	sp, [r1], -r9
   136f4:	cmp	r1, #0
   136f8:	push	{r4, r5, r6, lr}
   136fc:	mov	r5, r0
   13700:	ldreq	r4, [r0]
   13704:	ldrne	r4, [r2]
   13708:	mov	r0, r4
   1370c:	bl	127a4 <ftello64@plt+0x1078>
   13710:	subs	r6, r0, #0
   13714:	bne	13730 <ftello64@plt+0x2004>
   13718:	bl	11594 <__errno_location@plt>
   1371c:	mov	r3, r4
   13720:	ldr	r2, [pc, #24]	; 13740 <ftello64@plt+0x2014>
   13724:	ldr	r1, [r0]
   13728:	mov	r0, #1
   1372c:	bl	114d4 <error@plt>
   13730:	ldr	r1, [r6, #8]
   13734:	mov	r0, r5
   13738:	pop	{r4, r5, r6, lr}
   1373c:	b	1367c <ftello64@plt+0x1f50>
   13740:	strdeq	sp, [r1], -r9
   13744:	ldr	r3, [pc, #4]	; 13750 <ftello64@plt+0x2024>
   13748:	ldr	r1, [r3]
   1374c:	b	1367c <ftello64@plt+0x1f50>
   13750:	andeq	r0, r3, ip, asr #23
   13754:	ldr	r1, [r0]
   13758:	b	1367c <ftello64@plt+0x1f50>
   1375c:	ldr	r1, [pc]	; 13764 <ftello64@plt+0x2038>
   13760:	b	1367c <ftello64@plt+0x1f50>
   13764:	andeq	sp, r1, lr, lsl #30
   13768:	ldr	r1, [pc]	; 13770 <ftello64@plt+0x2044>
   1376c:	b	1367c <ftello64@plt+0x1f50>
   13770:	andeq	sp, r1, lr, lsl #30
   13774:	cmp	r1, #0
   13778:	push	{r4, r5, r6, lr}
   1377c:	mov	r6, r3
   13780:	ble	13878 <ftello64@plt+0x214c>
   13784:	ldr	r1, [r2]
   13788:	mov	r5, r2
   1378c:	ldrb	r3, [r1]
   13790:	cmp	r3, #37	; 0x25
   13794:	bne	13878 <ftello64@plt+0x214c>
   13798:	ldrb	r3, [r1, #1]
   1379c:	cmp	r3, #35	; 0x23
   137a0:	addne	r4, r1, #1
   137a4:	addeq	r4, r1, #2
   137a8:	bl	1154c <__ctype_b_loc@plt>
   137ac:	ldr	r2, [r0]
   137b0:	mov	r0, r4
   137b4:	ldrb	ip, [r0]
   137b8:	mov	r1, r0
   137bc:	add	r0, r0, #1
   137c0:	lsl	r3, ip, #1
   137c4:	ldrh	r3, [r2, r3]
   137c8:	tst	r3, #2048	; 0x800
   137cc:	bne	137b4 <ftello64@plt+0x2088>
   137d0:	and	ip, ip, #223	; 0xdf
   137d4:	cmp	ip, #72	; 0x48
   137d8:	bne	137e8 <ftello64@plt+0x20bc>
   137dc:	ldrb	r3, [r1, #1]
   137e0:	cmp	r3, #0
   137e4:	movne	r1, r0
   137e8:	ldrb	r0, [r1]
   137ec:	cmp	r0, #88	; 0x58
   137f0:	beq	13868 <ftello64@plt+0x213c>
   137f4:	bhi	13848 <ftello64@plt+0x211c>
   137f8:	cmp	r0, #72	; 0x48
   137fc:	beq	13868 <ftello64@plt+0x213c>
   13800:	cmp	r0, #79	; 0x4f
   13804:	beq	13870 <ftello64@plt+0x2144>
   13808:	mov	r3, #105	; 0x69
   1380c:	strb	r3, [r1]
   13810:	mov	r3, #0
   13814:	strb	r3, [r1, #1]
   13818:	ldr	r0, [r5]
   1381c:	mov	r1, r6
   13820:	bl	113f0 <printf@plt>
   13824:	ldr	r3, [pc, #84]	; 13880 <ftello64@plt+0x2154>
   13828:	ldr	r2, [r3]
   1382c:	ldr	r3, [r2]
   13830:	add	r0, r3, r0
   13834:	ldr	r3, [pc, #72]	; 13884 <ftello64@plt+0x2158>
   13838:	str	r0, [r2]
   1383c:	mov	r2, #1
   13840:	str	r2, [r3]
   13844:	pop	{r4, r5, r6, pc}
   13848:	cmp	r0, #111	; 0x6f
   1384c:	beq	13870 <ftello64@plt+0x2144>
   13850:	cmp	r0, #120	; 0x78
   13854:	beq	13860 <ftello64@plt+0x2134>
   13858:	cmp	r0, #104	; 0x68
   1385c:	bne	13808 <ftello64@plt+0x20dc>
   13860:	mov	r3, #120	; 0x78
   13864:	b	1380c <ftello64@plt+0x20e0>
   13868:	mov	r3, #88	; 0x58
   1386c:	b	1380c <ftello64@plt+0x20e0>
   13870:	mov	r3, #111	; 0x6f
   13874:	b	1380c <ftello64@plt+0x20e0>
   13878:	ldr	r0, [pc, #8]	; 13888 <ftello64@plt+0x215c>
   1387c:	b	1381c <ftello64@plt+0x20f0>
   13880:	andeq	r0, r3, r0, lsr #10
   13884:	andeq	r0, r3, r0, lsl ip
   13888:	ldrdeq	lr, [r1], -r0
   1388c:	push	{r4, r5, r6, lr}
   13890:	mov	r4, r0
   13894:	mov	r5, r1
   13898:	mov	r6, r2
   1389c:	ldr	r1, [pc, #72]	; 138ec <ftello64@plt+0x21c0>
   138a0:	ldr	r2, [r0, #4]
   138a4:	ldr	r0, [r0, #8]
   138a8:	bl	172d8 <argp_parse@@Base+0xb90>
   138ac:	cmp	r0, #0
   138b0:	bge	138d0 <ftello64@plt+0x21a4>
   138b4:	bl	11594 <__errno_location@plt>
   138b8:	ldr	r3, [r4, #4]
   138bc:	ldr	r2, [pc, #44]	; 138f0 <ftello64@plt+0x21c4>
   138c0:	pop	{r4, r5, r6, lr}
   138c4:	ldr	r1, [r0]
   138c8:	mov	r0, #1
   138cc:	b	114d4 <error@plt>
   138d0:	ldr	r3, [r4, #4]
   138d4:	mov	r2, r6
   138d8:	mov	r1, r5
   138dc:	mov	r0, r4
   138e0:	ldr	r3, [r3, #16]
   138e4:	pop	{r4, r5, r6, lr}
   138e8:	b	13774 <ftello64@plt+0x2048>
   138ec:	andeq	r8, r0, r1, lsr #18
   138f0:	andeq	sp, r1, sl, lsl pc
   138f4:	push	{r4, r5, r6, lr}
   138f8:	mov	r4, r0
   138fc:	mov	r5, r1
   13900:	mov	r6, r2
   13904:	ldr	r1, [pc, #72]	; 13954 <ftello64@plt+0x2228>
   13908:	ldr	r2, [r0, #4]
   1390c:	ldr	r0, [r0, #8]
   13910:	bl	172d8 <argp_parse@@Base+0xb90>
   13914:	cmp	r0, #0
   13918:	bge	13938 <ftello64@plt+0x220c>
   1391c:	bl	11594 <__errno_location@plt>
   13920:	ldr	r3, [r4, #4]
   13924:	ldr	r2, [pc, #44]	; 13958 <ftello64@plt+0x222c>
   13928:	pop	{r4, r5, r6, lr}
   1392c:	ldr	r1, [r0]
   13930:	mov	r0, #1
   13934:	b	114d4 <error@plt>
   13938:	ldr	r3, [r4, #4]
   1393c:	mov	r2, r6
   13940:	mov	r1, r5
   13944:	mov	r0, r4
   13948:	ldr	r3, [r3, #16]
   1394c:	pop	{r4, r5, r6, lr}
   13950:	b	13774 <ftello64@plt+0x2048>
   13954:	andeq	r8, r0, sp, lsl r9
   13958:	andeq	sp, r1, pc, lsr pc
   1395c:	ldr	r3, [r0, #4]
   13960:	ldrb	r3, [r3, #26]
   13964:	b	13774 <ftello64@plt+0x2048>
   13968:	ldr	r3, [r0, #4]
   1396c:	ldrh	r3, [r3, #24]
   13970:	cmp	r3, #255	; 0xff
   13974:	bls	1397c <ftello64@plt+0x2250>
   13978:	b	13774 <ftello64@plt+0x2048>
   1397c:	ldr	r1, [pc]	; 13984 <ftello64@plt+0x2258>
   13980:	b	1367c <ftello64@plt+0x1f50>
   13984:	andeq	sp, r1, r7, ror #30
   13988:	ldr	r3, [r0, #4]
   1398c:	ldrb	r3, [r3, #27]
   13990:	cmp	r3, #0
   13994:	beq	1399c <ftello64@plt+0x2270>
   13998:	b	13774 <ftello64@plt+0x2048>
   1399c:	ldr	r1, [pc]	; 139a4 <ftello64@plt+0x2278>
   139a0:	b	1367c <ftello64@plt+0x1f50>
   139a4:	andeq	sp, r1, r7, ror #30
   139a8:	cmp	r1, #0
   139ac:	push	{r4, r5, r6, lr}
   139b0:	mov	r6, r3
   139b4:	ble	13a98 <ftello64@plt+0x236c>
   139b8:	ldr	r4, [r2]
   139bc:	mov	r5, r2
   139c0:	ldrb	r3, [r4]
   139c4:	cmp	r3, #37	; 0x25
   139c8:	bne	13a98 <ftello64@plt+0x236c>
   139cc:	bl	1154c <__ctype_b_loc@plt>
   139d0:	ldr	ip, [r0]
   139d4:	add	r0, r4, #1
   139d8:	ldrb	r2, [r0]
   139dc:	mov	r1, r0
   139e0:	add	r0, r0, #1
   139e4:	lsl	r3, r2, #1
   139e8:	ldrh	r3, [ip, r3]
   139ec:	tst	r3, #2048	; 0x800
   139f0:	bne	139d8 <ftello64@plt+0x22ac>
   139f4:	cmp	r2, #35	; 0x23
   139f8:	moveq	r1, r0
   139fc:	ldrb	r3, [r1]
   13a00:	cmp	r3, #108	; 0x6c
   13a04:	addeq	r1, r1, #1
   13a08:	ldrb	r0, [r1]
   13a0c:	cmp	r0, #88	; 0x58
   13a10:	beq	13a88 <ftello64@plt+0x235c>
   13a14:	bhi	13a68 <ftello64@plt+0x233c>
   13a18:	cmp	r0, #72	; 0x48
   13a1c:	beq	13a88 <ftello64@plt+0x235c>
   13a20:	cmp	r0, #79	; 0x4f
   13a24:	beq	13a90 <ftello64@plt+0x2364>
   13a28:	mov	r3, #105	; 0x69
   13a2c:	strb	r3, [r1]
   13a30:	mov	r3, #0
   13a34:	strb	r3, [r1, #1]
   13a38:	ldr	r0, [r5]
   13a3c:	mov	r1, r6
   13a40:	bl	113f0 <printf@plt>
   13a44:	ldr	r3, [pc, #84]	; 13aa0 <ftello64@plt+0x2374>
   13a48:	ldr	r2, [r3]
   13a4c:	ldr	r3, [r2]
   13a50:	add	r0, r3, r0
   13a54:	ldr	r3, [pc, #72]	; 13aa4 <ftello64@plt+0x2378>
   13a58:	str	r0, [r2]
   13a5c:	mov	r2, #1
   13a60:	str	r2, [r3]
   13a64:	pop	{r4, r5, r6, pc}
   13a68:	cmp	r0, #111	; 0x6f
   13a6c:	beq	13a90 <ftello64@plt+0x2364>
   13a70:	cmp	r0, #120	; 0x78
   13a74:	beq	13a80 <ftello64@plt+0x2354>
   13a78:	cmp	r0, #104	; 0x68
   13a7c:	bne	13a28 <ftello64@plt+0x22fc>
   13a80:	mov	r3, #120	; 0x78
   13a84:	b	13a2c <ftello64@plt+0x2300>
   13a88:	mov	r3, #88	; 0x58
   13a8c:	b	13a2c <ftello64@plt+0x2300>
   13a90:	mov	r3, #111	; 0x6f
   13a94:	b	13a2c <ftello64@plt+0x2300>
   13a98:	ldr	r0, [pc, #8]	; 13aa8 <ftello64@plt+0x237c>
   13a9c:	b	13a3c <ftello64@plt+0x2310>
   13aa0:	andeq	r0, r3, r0, lsr #10
   13aa4:	andeq	r0, r3, r0, lsl ip
   13aa8:	andeq	lr, r1, r3, lsl r3
   13aac:	ldr	r3, [r0, #4]
   13ab0:	ldr	r3, [r3, #16]
   13ab4:	cmp	r3, #0
   13ab8:	beq	13ac0 <ftello64@plt+0x2394>
   13abc:	b	139a8 <ftello64@plt+0x227c>
   13ac0:	ldr	r1, [pc]	; 13ac8 <ftello64@plt+0x239c>
   13ac4:	b	1367c <ftello64@plt+0x1f50>
   13ac8:	andeq	sp, r1, r7, ror #30
   13acc:	ldr	r3, [r0, #4]
   13ad0:	ldr	r3, [r3, #20]
   13ad4:	cmp	r3, #0
   13ad8:	beq	13ae0 <ftello64@plt+0x23b4>
   13adc:	b	139a8 <ftello64@plt+0x227c>
   13ae0:	ldr	r1, [pc]	; 13ae8 <ftello64@plt+0x23bc>
   13ae4:	b	1367c <ftello64@plt+0x1f50>
   13ae8:	andeq	sp, r1, r7, ror #30
   13aec:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   13af0:	mov	r7, r0
   13af4:	ldr	r0, [r3, #4]
   13af8:	mov	sl, r3
   13afc:	mov	r8, r1
   13b00:	mov	r9, r2
   13b04:	bl	1145c <inet_ntoa@plt>
   13b08:	mov	r1, #46	; 0x2e
   13b0c:	mov	r4, #0
   13b10:	mov	r5, r0
   13b14:	bl	1157c <strchr@plt>
   13b18:	mov	r2, r4
   13b1c:	mov	r1, r4
   13b20:	mov	r6, r0
   13b24:	mov	r0, r5
   13b28:	strb	r4, [r6], #1
   13b2c:	bl	113e4 <strtol@plt>
   13b30:	mov	r1, #46	; 0x2e
   13b34:	str	r0, [sp]
   13b38:	mov	r0, r6
   13b3c:	bl	1157c <strchr@plt>
   13b40:	mov	r2, r4
   13b44:	mov	r1, r4
   13b48:	mov	r5, r0
   13b4c:	mov	r0, r6
   13b50:	strb	r4, [r5], #1
   13b54:	bl	113e4 <strtol@plt>
   13b58:	mov	r1, #46	; 0x2e
   13b5c:	str	r0, [sp, #4]
   13b60:	mov	r0, r5
   13b64:	bl	1157c <strchr@plt>
   13b68:	mov	r2, r4
   13b6c:	mov	r1, r4
   13b70:	mov	r6, r0
   13b74:	mov	r0, r5
   13b78:	strb	r4, [r6], #1
   13b7c:	bl	113e4 <strtol@plt>
   13b80:	mov	r2, r4
   13b84:	mov	r1, r4
   13b88:	str	r0, [sp, #8]
   13b8c:	mov	r0, r6
   13b90:	bl	113e4 <strtol@plt>
   13b94:	str	r0, [sp, #12]
   13b98:	ldr	r0, [sl, #4]
   13b9c:	bl	1145c <inet_ntoa@plt>
   13ba0:	cmp	r8, r4
   13ba4:	ble	13be4 <ftello64@plt+0x24b8>
   13ba8:	mov	r2, r4
   13bac:	mov	r1, r4
   13bb0:	ldr	r0, [r9]
   13bb4:	bl	113e4 <strtol@plt>
   13bb8:	cmp	r0, #3
   13bbc:	bhi	13bf8 <ftello64@plt+0x24cc>
   13bc0:	add	r3, sp, #16
   13bc4:	add	r0, r3, r0, lsl #2
   13bc8:	add	r2, r9, #4
   13bcc:	ldr	r3, [r0, #-16]
   13bd0:	sub	r1, r8, #1
   13bd4:	mov	r0, r7
   13bd8:	add	sp, sp, #16
   13bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13be0:	b	13774 <ftello64@plt+0x2048>
   13be4:	mov	r1, r0
   13be8:	mov	r0, r7
   13bec:	add	sp, sp, #16
   13bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bf4:	b	1367c <ftello64@plt+0x1f50>
   13bf8:	add	sp, sp, #16
   13bfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c00:	push	{r4, r5, r6, lr}
   13c04:	mov	r4, r0
   13c08:	mov	r5, r1
   13c0c:	mov	r6, r2
   13c10:	ldr	r1, [pc, #72]	; 13c60 <ftello64@plt+0x2534>
   13c14:	ldr	r2, [r0, #4]
   13c18:	ldr	r0, [r0, #8]
   13c1c:	bl	172d8 <argp_parse@@Base+0xb90>
   13c20:	cmp	r0, #0
   13c24:	bge	13c44 <ftello64@plt+0x2518>
   13c28:	bl	11594 <__errno_location@plt>
   13c2c:	ldr	r3, [r4, #4]
   13c30:	ldr	r2, [pc, #44]	; 13c64 <ftello64@plt+0x2538>
   13c34:	pop	{r4, r5, r6, lr}
   13c38:	ldr	r1, [r0]
   13c3c:	mov	r0, #1
   13c40:	b	114d4 <error@plt>
   13c44:	ldr	r3, [r4, #4]
   13c48:	mov	r2, r6
   13c4c:	mov	r1, r5
   13c50:	mov	r0, r4
   13c54:	add	r3, r3, #16
   13c58:	pop	{r4, r5, r6, lr}
   13c5c:	b	13aec <ftello64@plt+0x23c0>
   13c60:	andeq	r8, r0, r5, lsl r9
   13c64:	andeq	sp, r1, r7, ror pc
   13c68:	push	{r4, r5, r6, lr}
   13c6c:	mov	r4, r0
   13c70:	mov	r5, r1
   13c74:	mov	r6, r2
   13c78:	ldr	r1, [pc, #72]	; 13cc8 <ftello64@plt+0x259c>
   13c7c:	ldr	r2, [r0, #4]
   13c80:	ldr	r0, [r0, #8]
   13c84:	bl	172d8 <argp_parse@@Base+0xb90>
   13c88:	cmp	r0, #0
   13c8c:	bge	13cac <ftello64@plt+0x2580>
   13c90:	bl	11594 <__errno_location@plt>
   13c94:	ldr	r3, [r4, #4]
   13c98:	ldr	r2, [pc, #44]	; 13ccc <ftello64@plt+0x25a0>
   13c9c:	pop	{r4, r5, r6, lr}
   13ca0:	ldr	r1, [r0]
   13ca4:	mov	r0, #1
   13ca8:	b	114d4 <error@plt>
   13cac:	ldr	r3, [r4, #4]
   13cb0:	mov	r2, r6
   13cb4:	mov	r1, r5
   13cb8:	mov	r0, r4
   13cbc:	add	r3, r3, #16
   13cc0:	pop	{r4, r5, r6, lr}
   13cc4:	b	13aec <ftello64@plt+0x23c0>
   13cc8:	andeq	r8, r0, fp, lsl r9
   13ccc:	muleq	r1, sp, pc	; <UNPREDICTABLE>
   13cd0:	push	{r4, r5, r6, lr}
   13cd4:	mov	r4, r0
   13cd8:	mov	r5, r1
   13cdc:	mov	r6, r2
   13ce0:	ldr	r1, [pc, #72]	; 13d30 <ftello64@plt+0x2604>
   13ce4:	ldr	r2, [r0, #4]
   13ce8:	ldr	r0, [r0, #8]
   13cec:	bl	172d8 <argp_parse@@Base+0xb90>
   13cf0:	cmp	r0, #0
   13cf4:	bge	13d14 <ftello64@plt+0x25e8>
   13cf8:	bl	11594 <__errno_location@plt>
   13cfc:	ldr	r3, [r4, #4]
   13d00:	ldr	r2, [pc, #44]	; 13d34 <ftello64@plt+0x2608>
   13d04:	pop	{r4, r5, r6, lr}
   13d08:	ldr	r1, [r0]
   13d0c:	mov	r0, #1
   13d10:	b	114d4 <error@plt>
   13d14:	ldr	r3, [r4, #4]
   13d18:	mov	r2, r6
   13d1c:	mov	r1, r5
   13d20:	mov	r0, r4
   13d24:	add	r3, r3, #16
   13d28:	pop	{r4, r5, r6, lr}
   13d2c:	b	13aec <ftello64@plt+0x23c0>
   13d30:	andeq	r8, r0, r9, lsl r9
   13d34:	andeq	sp, r1, r6, asr #31
   13d38:	push	{r4, r5, r6, lr}
   13d3c:	mov	r4, r0
   13d40:	mov	r5, r1
   13d44:	mov	r6, r2
   13d48:	ldr	r1, [pc, #72]	; 13d98 <ftello64@plt+0x266c>
   13d4c:	ldr	r2, [r0, #4]
   13d50:	ldr	r0, [r0, #8]
   13d54:	bl	172d8 <argp_parse@@Base+0xb90>
   13d58:	cmp	r0, #0
   13d5c:	bge	13d7c <ftello64@plt+0x2650>
   13d60:	bl	11594 <__errno_location@plt>
   13d64:	ldr	r3, [r4, #4]
   13d68:	ldr	r2, [pc, #44]	; 13d9c <ftello64@plt+0x2670>
   13d6c:	pop	{r4, r5, r6, lr}
   13d70:	ldr	r1, [r0]
   13d74:	mov	r0, #1
   13d78:	b	114d4 <error@plt>
   13d7c:	ldr	r3, [r4, #4]
   13d80:	mov	r2, r6
   13d84:	mov	r1, r5
   13d88:	mov	r0, r4
   13d8c:	add	r3, r3, #16
   13d90:	pop	{r4, r5, r6, lr}
   13d94:	b	13aec <ftello64@plt+0x23c0>
   13d98:	andeq	r8, r0, r7, lsl r9
   13d9c:	andeq	sp, r1, pc, ror #31
   13da0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13da4:	mov	r5, r3
   13da8:	mov	r3, #1
   13dac:	mov	r4, r0
   13db0:	mov	r7, r1
   13db4:	mov	r8, r2
   13db8:	mov	r6, r3
   13dbc:	mov	r9, #0
   13dc0:	mov	sl, #32
   13dc4:	cmp	r5, #0
   13dc8:	cmpne	r6, #0
   13dcc:	bne	13e10 <ftello64@plt+0x26e4>
   13dd0:	cmp	r5, #0
   13dd4:	beq	13e8c <ftello64@plt+0x2760>
   13dd8:	cmp	r3, #0
   13ddc:	bne	13df4 <ftello64@plt+0x26c8>
   13de0:	cmp	r7, #0
   13de4:	ble	13e7c <ftello64@plt+0x2750>
   13de8:	ldr	r1, [r8]
   13dec:	mov	r0, r4
   13df0:	bl	1367c <ftello64@plt+0x1f50>
   13df4:	mov	r3, r5
   13df8:	add	r2, r8, #4
   13dfc:	sub	r1, r7, #1
   13e00:	mov	r0, r4
   13e04:	add	sp, sp, #12
   13e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e0c:	b	13774 <ftello64@plt+0x2048>
   13e10:	tst	r6, r5
   13e14:	beq	13e64 <ftello64@plt+0x2738>
   13e18:	mov	r1, r9
   13e1c:	mov	r0, r6
   13e20:	str	r3, [sp, #4]
   13e24:	bl	11b84 <ftello64@plt+0x458>
   13e28:	ldr	r3, [sp, #4]
   13e2c:	subs	fp, r0, #0
   13e30:	beq	13e64 <ftello64@plt+0x2738>
   13e34:	cmp	r3, #0
   13e38:	bne	13e50 <ftello64@plt+0x2724>
   13e3c:	cmp	r7, #0
   13e40:	ble	13e6c <ftello64@plt+0x2740>
   13e44:	ldr	r1, [r8]
   13e48:	mov	r0, r4
   13e4c:	bl	1367c <ftello64@plt+0x1f50>
   13e50:	mov	r1, fp
   13e54:	mov	r0, r4
   13e58:	bl	1367c <ftello64@plt+0x1f50>
   13e5c:	bic	r5, r5, r6
   13e60:	mov	r3, r9
   13e64:	lsl	r6, r6, #1
   13e68:	b	13dc4 <ftello64@plt+0x2698>
   13e6c:	mov	r1, sl
   13e70:	mov	r0, r4
   13e74:	bl	13564 <ftello64@plt+0x1e38>
   13e78:	b	13e50 <ftello64@plt+0x2724>
   13e7c:	mov	r1, #32
   13e80:	mov	r0, r4
   13e84:	bl	13564 <ftello64@plt+0x1e38>
   13e88:	b	13df4 <ftello64@plt+0x26c8>
   13e8c:	add	sp, sp, #12
   13e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e94:	push	{r0, r1, r2, r3, r4, lr}
   13e98:	mov	r4, r0
   13e9c:	mov	r2, #15
   13ea0:	mov	r0, r3
   13ea4:	mov	r1, sp
   13ea8:	bl	11cec <ftello64@plt+0x5c0>
   13eac:	mov	r1, sp
   13eb0:	mov	r0, r4
   13eb4:	bl	1367c <ftello64@plt+0x1f50>
   13eb8:	add	sp, sp, #16
   13ebc:	pop	{r4, pc}
   13ec0:	push	{r4, r5, r6, r7, r8, lr}
   13ec4:	mov	r4, r0
   13ec8:	mov	r5, r1
   13ecc:	mov	r6, r2
   13ed0:	ldr	r1, [pc, #212]	; 13fac <ftello64@plt+0x2880>
   13ed4:	ldr	r2, [r0, #4]
   13ed8:	ldr	r0, [r0, #8]
   13edc:	bl	172d8 <argp_parse@@Base+0xb90>
   13ee0:	cmp	r0, #0
   13ee4:	bge	13f04 <ftello64@plt+0x27d8>
   13ee8:	bl	11594 <__errno_location@plt>
   13eec:	ldr	r3, [r4, #4]
   13ef0:	ldr	r2, [pc, #184]	; 13fb0 <ftello64@plt+0x2884>
   13ef4:	pop	{r4, r5, r6, r7, r8, lr}
   13ef8:	ldr	r1, [r0]
   13efc:	mov	r0, #1
   13f00:	b	114d4 <error@plt>
   13f04:	ldr	r3, [r4, #4]
   13f08:	cmp	r5, #0
   13f0c:	ldrh	r7, [r3, #16]
   13f10:	ble	13f9c <ftello64@plt+0x2870>
   13f14:	ldr	r8, [r6]
   13f18:	ldr	r1, [pc, #148]	; 13fb4 <ftello64@plt+0x2888>
   13f1c:	mov	r0, r8
   13f20:	bl	113d8 <strcmp@plt>
   13f24:	cmp	r0, #0
   13f28:	bne	13f44 <ftello64@plt+0x2818>
   13f2c:	mov	r3, r7
   13f30:	add	r2, r6, #4
   13f34:	sub	r1, r5, #1
   13f38:	mov	r0, r4
   13f3c:	pop	{r4, r5, r6, r7, r8, lr}
   13f40:	b	13774 <ftello64@plt+0x2048>
   13f44:	ldr	r1, [pc, #108]	; 13fb8 <ftello64@plt+0x288c>
   13f48:	mov	r0, r8
   13f4c:	bl	113d8 <strcmp@plt>
   13f50:	cmp	r0, #0
   13f54:	bne	13f70 <ftello64@plt+0x2844>
   13f58:	mov	r3, r7
   13f5c:	add	r2, r6, #4
   13f60:	sub	r1, r5, #1
   13f64:	mov	r0, r4
   13f68:	pop	{r4, r5, r6, r7, r8, lr}
   13f6c:	b	13e94 <ftello64@plt+0x2768>
   13f70:	ldr	r1, [pc, #68]	; 13fbc <ftello64@plt+0x2890>
   13f74:	mov	r0, r8
   13f78:	bl	113d8 <strcmp@plt>
   13f7c:	cmp	r0, #0
   13f80:	popne	{r4, r5, r6, r7, r8, pc}
   13f84:	mov	r3, r7
   13f88:	add	r2, r6, #4
   13f8c:	sub	r1, r5, #1
   13f90:	mov	r0, r4
   13f94:	pop	{r4, r5, r6, r7, r8, lr}
   13f98:	b	13da0 <ftello64@plt+0x2674>
   13f9c:	mov	r3, r7
   13fa0:	mov	r2, r6
   13fa4:	mov	r1, r5
   13fa8:	b	13f90 <ftello64@plt+0x2864>
   13fac:	andeq	r8, r0, r3, lsl r9
   13fb0:	andeq	lr, r1, r8, lsl r0
   13fb4:	andeq	lr, r1, pc, ror #13
   13fb8:	muleq	r1, sp, sp
   13fbc:	andeq	lr, r1, pc, lsr r0
   13fc0:	push	{r4, r5, r6, r7, r8, lr}
   13fc4:	mov	r6, r0
   13fc8:	ldr	r4, [pc, #156]	; 1406c <ftello64@plt+0x2940>
   13fcc:	mov	r5, r1
   13fd0:	mov	r7, r2
   13fd4:	mov	r8, r3
   13fd8:	ldr	r0, [r4]
   13fdc:	cmp	r0, #0
   13fe0:	bne	14034 <ftello64@plt+0x2908>
   13fe4:	ldr	r0, [pc, #132]	; 14070 <ftello64@plt+0x2944>
   13fe8:	bl	113f0 <printf@plt>
   13fec:	ldr	r4, [pc, #128]	; 14074 <ftello64@plt+0x2948>
   13ff0:	mov	r1, r6
   13ff4:	ldr	r2, [r4]
   13ff8:	ldr	r3, [r2]
   13ffc:	add	r0, r3, r0
   14000:	str	r0, [r2]
   14004:	mov	r0, r5
   14008:	bl	1367c <ftello64@plt+0x1f50>
   1400c:	ldr	r0, [pc, #100]	; 14078 <ftello64@plt+0x294c>
   14010:	bl	113f0 <printf@plt>
   14014:	ldr	r2, [r4]
   14018:	ldr	r3, [r2]
   1401c:	add	r0, r3, r0
   14020:	ldr	r3, [pc, #84]	; 1407c <ftello64@plt+0x2950>
   14024:	str	r0, [r2]
   14028:	mov	r2, #1
   1402c:	str	r2, [r3]
   14030:	pop	{r4, r5, r6, r7, r8, pc}
   14034:	mov	r1, r6
   14038:	bl	113d8 <strcmp@plt>
   1403c:	cmp	r0, #0
   14040:	bne	14064 <ftello64@plt+0x2938>
   14044:	ldr	r3, [r4, #4]
   14048:	cmp	r3, #0
   1404c:	popeq	{r4, r5, r6, r7, r8, pc}
   14050:	mov	r2, r8
   14054:	mov	r1, r7
   14058:	mov	r0, r5
   1405c:	pop	{r4, r5, r6, r7, r8, lr}
   14060:	bx	r3
   14064:	add	r4, r4, #8
   14068:	b	13fd8 <ftello64@plt+0x28ac>
   1406c:	andeq	r0, r3, r4, lsr #10
   14070:	andeq	lr, r1, r6, asr #32
   14074:	andeq	r0, r3, r0, lsr #10
   14078:	andeq	lr, r1, sl, lsr #8
   1407c:	andeq	r0, r3, r0, lsl ip
   14080:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14084:	add	fp, sp, #32
   14088:	sub	sp, sp, #12
   1408c:	ldr	r3, [r0, #20]
   14090:	ldr	r4, [r0, #16]
   14094:	mov	r5, r0
   14098:	mov	r7, r1
   1409c:	add	r3, r3, #1
   140a0:	str	r3, [r0, #20]
   140a4:	ldrb	r3, [r4]
   140a8:	cmp	r3, #0
   140ac:	beq	1411c <ftello64@plt+0x29f0>
   140b0:	subs	r3, r3, #125	; 0x7d
   140b4:	ldr	r2, [r5, #20]
   140b8:	movne	r3, #1
   140bc:	cmp	r2, #1
   140c0:	orrle	r3, r3, #1
   140c4:	cmp	r3, #0
   140c8:	beq	1411c <ftello64@plt+0x29f0>
   140cc:	mov	r6, r4
   140d0:	b	140e4 <ftello64@plt+0x29b8>
   140d4:	cmp	r7, #0
   140d8:	bne	140e4 <ftello64@plt+0x29b8>
   140dc:	mov	r0, r5
   140e0:	bl	13564 <ftello64@plt+0x1e38>
   140e4:	mov	r4, r6
   140e8:	ldrb	r1, [r6], #1
   140ec:	cmp	r1, #36	; 0x24
   140f0:	cmpne	r1, #0
   140f4:	movne	r9, #1
   140f8:	moveq	r9, #0
   140fc:	beq	14134 <ftello64@plt+0x2a08>
   14100:	subs	r3, r1, #125	; 0x7d
   14104:	ldr	r2, [r5, #20]
   14108:	movne	r3, #1
   1410c:	cmp	r2, #1
   14110:	orrle	r3, r3, #1
   14114:	cmp	r3, #0
   14118:	bne	140d4 <ftello64@plt+0x29a8>
   1411c:	ldr	r3, [r5, #20]
   14120:	str	r4, [r5, #16]
   14124:	sub	r3, r3, #1
   14128:	str	r3, [r5, #20]
   1412c:	sub	sp, fp, #32
   14130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14134:	cmp	r1, #36	; 0x24
   14138:	bne	1411c <ftello64@plt+0x29f0>
   1413c:	ldrb	r3, [r4, #1]
   14140:	add	r6, r4, #2
   14144:	cmp	r3, #123	; 0x7b
   14148:	beq	1418c <ftello64@plt+0x2a60>
   1414c:	cmp	r3, #125	; 0x7d
   14150:	beq	1417c <ftello64@plt+0x2a50>
   14154:	cmp	r3, #36	; 0x24
   14158:	beq	1417c <ftello64@plt+0x2a50>
   1415c:	cmp	r7, #0
   14160:	bne	14184 <ftello64@plt+0x2a58>
   14164:	mov	r0, r5
   14168:	bl	13564 <ftello64@plt+0x1e38>
   1416c:	ldrb	r1, [r4, #1]
   14170:	mov	r0, r5
   14174:	bl	13564 <ftello64@plt+0x1e38>
   14178:	b	14184 <ftello64@plt+0x2a58>
   1417c:	cmp	r7, #0
   14180:	beq	1416c <ftello64@plt+0x2a40>
   14184:	mov	r4, r6
   14188:	b	140a4 <ftello64@plt+0x2978>
   1418c:	mov	r1, #125	; 0x7d
   14190:	mov	r0, r6
   14194:	bl	1157c <strchr@plt>
   14198:	subs	r8, r0, #0
   1419c:	bne	141c0 <ftello64@plt+0x2a94>
   141a0:	mov	r1, r4
   141a4:	mov	r0, r5
   141a8:	bl	1367c <ftello64@plt+0x1f50>
   141ac:	mov	r0, r4
   141b0:	mov	r1, #0
   141b4:	bl	1157c <strchr@plt>
   141b8:	mov	r4, r0
   141bc:	b	140a4 <ftello64@plt+0x2978>
   141c0:	sub	r4, r8, r6
   141c4:	add	r3, r4, #15
   141c8:	bic	r3, r3, #7
   141cc:	sub	sp, sp, r3
   141d0:	mov	r3, sp
   141d4:	mov	r2, r4
   141d8:	lsr	sl, r3, #3
   141dc:	mov	r1, r6
   141e0:	lsl	r3, sl, #3
   141e4:	mov	r0, r3
   141e8:	str	r3, [fp, #-40]	; 0xffffffd8
   141ec:	bl	11444 <memcpy@plt>
   141f0:	strb	r9, [r4, sl, lsl #3]
   141f4:	cmp	r7, #0
   141f8:	add	r4, r8, #1
   141fc:	strne	r4, [r5, #16]
   14200:	bne	14288 <ftello64@plt+0x2b5c>
   14204:	mov	r0, r8
   14208:	bl	11570 <strlen@plt>
   1420c:	mov	r6, r7
   14210:	lsr	r0, r0, #1
   14214:	add	r0, r0, #14
   14218:	bic	r0, r0, #7
   1421c:	sub	sp, sp, r0
   14220:	mov	r8, sp
   14224:	ldrb	r3, [r4]
   14228:	cmp	r3, #123	; 0x7b
   1422c:	beq	1429c <ftello64@plt+0x2b70>
   14230:	mov	r2, r6
   14234:	add	r6, r8, r6, lsl #2
   14238:	mov	r3, r8
   1423c:	mov	r1, r5
   14240:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14244:	bl	13fc0 <ftello64@plt+0x2894>
   14248:	str	r4, [r5, #16]
   1424c:	cmp	r8, r6
   14250:	beq	140a4 <ftello64@plt+0x2978>
   14254:	ldr	r0, [r6, #-4]!
   14258:	bl	171e4 <argp_parse@@Base+0xa9c>
   1425c:	b	1424c <ftello64@plt+0x2b20>
   14260:	add	r4, r4, #1
   14264:	str	r4, [r5, #16]
   14268:	mov	r1, #1
   1426c:	mov	r0, r5
   14270:	bl	14080 <ftello64@plt+0x2954>
   14274:	ldr	r3, [r5, #16]
   14278:	ldrb	r2, [r3]
   1427c:	cmp	r2, #125	; 0x7d
   14280:	addeq	r3, r3, #1
   14284:	streq	r3, [r5, #16]
   14288:	ldr	r4, [r5, #16]
   1428c:	ldrb	r3, [r4]
   14290:	cmp	r3, #123	; 0x7b
   14294:	beq	14260 <ftello64@plt+0x2b34>
   14298:	b	140a4 <ftello64@plt+0x2978>
   1429c:	add	sl, r4, #1
   142a0:	mov	r1, #1
   142a4:	mov	r0, r5
   142a8:	str	sl, [r5, #16]
   142ac:	bl	14080 <ftello64@plt+0x2954>
   142b0:	ldr	r4, [r5, #16]
   142b4:	sub	r9, r4, sl
   142b8:	add	r0, r9, #1
   142bc:	bl	17d8c <_obstack_memory_used@@Base+0x78c>
   142c0:	mov	r2, r9
   142c4:	mov	r1, sl
   142c8:	str	r0, [r8, r6, lsl #2]
   142cc:	bl	11444 <memcpy@plt>
   142d0:	mov	r2, #0
   142d4:	add	r6, r6, #1
   142d8:	strb	r2, [r0, r9]
   142dc:	ldrb	r3, [r4]
   142e0:	cmp	r3, #125	; 0x7d
   142e4:	addeq	r4, r4, #1
   142e8:	b	14224 <ftello64@plt+0x2af8>
   142ec:	cmp	r3, r1
   142f0:	bxge	lr
   142f4:	ldr	r3, [r2, r3, lsl #2]
   142f8:	mov	r1, #0
   142fc:	str	r3, [r0, #16]
   14300:	b	14080 <ftello64@plt+0x2954>
   14304:	push	{r4, r5, r6, lr}
   14308:	subs	r6, r1, #0
   1430c:	pople	{r4, r5, r6, pc}
   14310:	mov	r5, r0
   14314:	ldr	r0, [r2]
   14318:	mov	r4, r2
   1431c:	bl	127a4 <ftello64@plt+0x1078>
   14320:	mov	r2, r4
   14324:	mov	r1, r6
   14328:	cmp	r0, #0
   1432c:	movne	r3, #1
   14330:	mov	r0, r5
   14334:	moveq	r3, #2
   14338:	pop	{r4, r5, r6, lr}
   1433c:	b	142ec <ftello64@plt+0x2bc0>
   14340:	ldr	r3, [r0, #12]
   14344:	clz	r3, r3
   14348:	lsr	r3, r3, #5
   1434c:	b	142ec <ftello64@plt+0x2bc0>
   14350:	ldr	r3, [pc, #148]	; 143ec <ftello64@plt+0x2cc0>
   14354:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   14358:	mov	r5, r0
   1435c:	ldr	r3, [r3]
   14360:	mov	r7, r1
   14364:	cmp	r3, #0
   14368:	mov	r8, r2
   1436c:	bne	143cc <ftello64@plt+0x2ca0>
   14370:	ldr	r3, [pc, #120]	; 143f0 <ftello64@plt+0x2cc4>
   14374:	ldr	r4, [r3]
   14378:	cmp	r4, #0
   1437c:	bne	143cc <ftello64@plt+0x2ca0>
   14380:	add	r1, sp, #8
   14384:	ldr	r0, [pc, #104]	; 143f4 <ftello64@plt+0x2cc8>
   14388:	str	r4, [r1, #-4]!
   1438c:	bl	11cc8 <ftello64@plt+0x59c>
   14390:	subs	r6, r0, #0
   14394:	beq	143b0 <ftello64@plt+0x2c84>
   14398:	ldr	r2, [r5, #4]
   1439c:	ldr	r1, [pc, #84]	; 143f8 <ftello64@plt+0x2ccc>
   143a0:	ldr	r0, [r5, #8]
   143a4:	bl	172d8 <argp_parse@@Base+0xb90>
   143a8:	cmp	r0, #0
   143ac:	beq	143d4 <ftello64@plt+0x2ca8>
   143b0:	eor	r3, r4, #1
   143b4:	mov	r2, r8
   143b8:	mov	r1, r7
   143bc:	mov	r0, r5
   143c0:	bl	142ec <ftello64@plt+0x2bc0>
   143c4:	add	sp, sp, #8
   143c8:	pop	{r4, r5, r6, r7, r8, pc}
   143cc:	mov	r4, #1
   143d0:	b	143b0 <ftello64@plt+0x2c84>
   143d4:	ldr	r3, [r5, #4]
   143d8:	ldrh	r3, [r3, #16]
   143dc:	tst	r3, r6
   143e0:	movne	r4, #1
   143e4:	moveq	r4, #0
   143e8:	b	143b0 <ftello64@plt+0x2c84>
   143ec:	andeq	r0, r3, r0, lsl #24
   143f0:	andeq	r0, r3, r4, lsl #24
   143f4:	andeq	ip, r1, r8, ror #11
   143f8:	andeq	r8, r0, r3, lsl r9
   143fc:	ldr	r3, [pc, #12]	; 14410 <ftello64@plt+0x2ce4>
   14400:	ldr	r3, [r3]
   14404:	clz	r3, r3
   14408:	lsr	r3, r3, #5
   1440c:	b	142ec <ftello64@plt+0x2bc0>
   14410:	andeq	r0, r3, r8, lsl #24
   14414:	push	{r4, r5, r6, r7, r8, lr}
   14418:	subs	r6, r1, #0
   1441c:	bgt	14440 <ftello64@plt+0x2d14>
   14420:	pop	{r4, r5, r6, r7, r8, pc}
   14424:	ldr	r1, [r4]
   14428:	bl	113d8 <strcmp@plt>
   1442c:	add	r7, r7, #1
   14430:	cmp	r0, #0
   14434:	bne	14450 <ftello64@plt+0x2d24>
   14438:	mov	r3, #1
   1443c:	b	14460 <ftello64@plt+0x2d34>
   14440:	ldr	r8, [pc, #44]	; 14474 <ftello64@plt+0x2d48>
   14444:	mov	r4, r2
   14448:	mov	r5, r0
   1444c:	mov	r7, #0
   14450:	ldr	r0, [r8, r7, lsl #3]
   14454:	cmp	r0, #0
   14458:	bne	14424 <ftello64@plt+0x2cf8>
   1445c:	mov	r3, #2
   14460:	mov	r2, r4
   14464:	mov	r1, r6
   14468:	mov	r0, r5
   1446c:	pop	{r4, r5, r6, r7, r8, lr}
   14470:	b	142ec <ftello64@plt+0x2bc0>
   14474:	andeq	r0, r3, r4, lsr #10
   14478:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1447c:	mov	sl, r2
   14480:	ldr	r2, [pc, #92]	; 144e4 <ftello64@plt+0x2db8>
   14484:	ldr	r4, [pc, #92]	; 144e8 <ftello64@plt+0x2dbc>
   14488:	ldr	r3, [pc, #92]	; 144ec <ftello64@plt+0x2dc0>
   1448c:	ldr	r2, [r2]
   14490:	ldr	r8, [r4]
   14494:	mov	r9, r0
   14498:	str	r2, [r4]
   1449c:	mov	r6, r1
   144a0:	ldr	r2, [pc, #72]	; 144f0 <ftello64@plt+0x2dc4>
   144a4:	mov	r5, #0
   144a8:	mov	fp, r3
   144ac:	ldr	r7, [r3]
   144b0:	str	r2, [r3]
   144b4:	cmp	r5, r6
   144b8:	blt	144c8 <ftello64@plt+0x2d9c>
   144bc:	str	r8, [r4]
   144c0:	str	r7, [fp]
   144c4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144c8:	mov	r3, r5
   144cc:	mov	r2, sl
   144d0:	mov	r1, r6
   144d4:	mov	r0, r9
   144d8:	bl	142ec <ftello64@plt+0x2bc0>
   144dc:	add	r5, r5, #1
   144e0:	b	144b4 <ftello64@plt+0x2d88>
   144e4:	andeq	r0, r3, r0, asr fp
   144e8:	andeq	r0, r3, ip, lsl ip
   144ec:	andeq	r0, r3, r0, lsr #10
   144f0:	andeq	r0, r3, r4, lsl ip
   144f4:	push	{r4, r5, r6, lr}
   144f8:	mov	r4, r0
   144fc:	ldr	r0, [r0]
   14500:	mov	r5, r1
   14504:	mov	r6, r2
   14508:	bl	116d8 <if_nametoindex@plt>
   1450c:	mov	r2, r6
   14510:	mov	r1, r5
   14514:	clz	r3, r0
   14518:	mov	r0, r4
   1451c:	lsr	r3, r3, #5
   14520:	pop	{r4, r5, r6, lr}
   14524:	b	142ec <ftello64@plt+0x2bc0>
   14528:	push	{r4, r5, r6, lr}
   1452c:	mov	r4, r0
   14530:	mov	r5, r1
   14534:	mov	r6, r2
   14538:	ldr	r1, [pc, #40]	; 14568 <ftello64@plt+0x2e3c>
   1453c:	ldr	r2, [r0, #4]
   14540:	ldr	r0, [r0, #8]
   14544:	bl	172d8 <argp_parse@@Base+0xb90>
   14548:	mov	r2, r6
   1454c:	mov	r1, r5
   14550:	cmp	r0, #0
   14554:	movge	r3, #0
   14558:	mov	r0, r4
   1455c:	movlt	r3, #1
   14560:	pop	{r4, r5, r6, lr}
   14564:	b	142ec <ftello64@plt+0x2bc0>
   14568:	andeq	r8, r0, r5, lsl r9
   1456c:	push	{r4, r5, r6, lr}
   14570:	mov	r4, r0
   14574:	mov	r5, r1
   14578:	mov	r6, r2
   1457c:	ldr	r1, [pc, #40]	; 145ac <ftello64@plt+0x2e80>
   14580:	ldr	r2, [r0, #4]
   14584:	ldr	r0, [r0, #8]
   14588:	bl	172d8 <argp_parse@@Base+0xb90>
   1458c:	mov	r2, r6
   14590:	mov	r1, r5
   14594:	cmp	r0, #0
   14598:	movge	r3, #0
   1459c:	mov	r0, r4
   145a0:	movlt	r3, #1
   145a4:	pop	{r4, r5, r6, lr}
   145a8:	b	142ec <ftello64@plt+0x2bc0>
   145ac:	andeq	r8, r0, fp, lsl r9
   145b0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   145b4:	mov	r4, r0
   145b8:	mov	r5, r1
   145bc:	ldr	r0, [pc, #112]	; 14634 <ftello64@plt+0x2f08>
   145c0:	add	r1, sp, #4
   145c4:	mov	r6, r2
   145c8:	bl	11cc8 <ftello64@plt+0x59c>
   145cc:	subs	r7, r0, #0
   145d0:	beq	145ec <ftello64@plt+0x2ec0>
   145d4:	ldr	r2, [r4, #4]
   145d8:	ldr	r1, [pc, #88]	; 14638 <ftello64@plt+0x2f0c>
   145dc:	ldr	r0, [r4, #8]
   145e0:	bl	172d8 <argp_parse@@Base+0xb90>
   145e4:	cmp	r0, #0
   145e8:	bge	14608 <ftello64@plt+0x2edc>
   145ec:	mov	r3, #1
   145f0:	mov	r2, r6
   145f4:	mov	r1, r5
   145f8:	mov	r0, r4
   145fc:	bl	142ec <ftello64@plt+0x2bc0>
   14600:	add	sp, sp, #12
   14604:	pop	{r4, r5, r6, r7, pc}
   14608:	ldr	r2, [r4, #4]
   1460c:	ldrh	r3, [r2, #16]
   14610:	tst	r3, r7
   14614:	beq	145ec <ftello64@plt+0x2ec0>
   14618:	ldr	r1, [pc, #28]	; 1463c <ftello64@plt+0x2f10>
   1461c:	ldr	r0, [r4, #8]
   14620:	bl	172d8 <argp_parse@@Base+0xb90>
   14624:	cmp	r0, #0
   14628:	blt	145ec <ftello64@plt+0x2ec0>
   1462c:	mov	r3, #0
   14630:	b	145f0 <ftello64@plt+0x2ec4>
   14634:	andeq	ip, r1, fp, ror #11
   14638:	andeq	r8, r0, r3, lsl r9
   1463c:	andeq	r8, r0, r9, lsl r9
   14640:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14644:	mov	r4, r0
   14648:	mov	r5, r1
   1464c:	ldr	r0, [pc, #112]	; 146c4 <ftello64@plt+0x2f98>
   14650:	add	r1, sp, #4
   14654:	mov	r6, r2
   14658:	bl	11cc8 <ftello64@plt+0x59c>
   1465c:	subs	r7, r0, #0
   14660:	beq	1467c <ftello64@plt+0x2f50>
   14664:	ldr	r2, [r4, #4]
   14668:	ldr	r1, [pc, #88]	; 146c8 <ftello64@plt+0x2f9c>
   1466c:	ldr	r0, [r4, #8]
   14670:	bl	172d8 <argp_parse@@Base+0xb90>
   14674:	cmp	r0, #0
   14678:	bge	14698 <ftello64@plt+0x2f6c>
   1467c:	mov	r3, #1
   14680:	mov	r2, r6
   14684:	mov	r1, r5
   14688:	mov	r0, r4
   1468c:	bl	142ec <ftello64@plt+0x2bc0>
   14690:	add	sp, sp, #12
   14694:	pop	{r4, r5, r6, r7, pc}
   14698:	ldr	r2, [r4, #4]
   1469c:	ldrh	r3, [r2, #16]
   146a0:	tst	r3, r7
   146a4:	beq	1467c <ftello64@plt+0x2f50>
   146a8:	ldr	r1, [pc, #28]	; 146cc <ftello64@plt+0x2fa0>
   146ac:	ldr	r0, [r4, #8]
   146b0:	bl	172d8 <argp_parse@@Base+0xb90>
   146b4:	cmp	r0, #0
   146b8:	blt	1467c <ftello64@plt+0x2f50>
   146bc:	mov	r3, #0
   146c0:	b	14680 <ftello64@plt+0x2f54>
   146c4:	andeq	ip, r1, r4, lsl #12
   146c8:	andeq	r8, r0, r3, lsl r9
   146cc:	andeq	r8, r0, r7, lsl r9
   146d0:	push	{r4, r5, r6, lr}
   146d4:	mov	r4, r0
   146d8:	mov	r5, r1
   146dc:	mov	r6, r2
   146e0:	ldr	r1, [pc, #40]	; 14710 <ftello64@plt+0x2fe4>
   146e4:	ldr	r2, [r0, #4]
   146e8:	ldr	r0, [r0, #8]
   146ec:	bl	172d8 <argp_parse@@Base+0xb90>
   146f0:	mov	r2, r6
   146f4:	mov	r1, r5
   146f8:	cmp	r0, #0
   146fc:	movge	r3, #0
   14700:	mov	r0, r4
   14704:	movlt	r3, #1
   14708:	pop	{r4, r5, r6, lr}
   1470c:	b	142ec <ftello64@plt+0x2bc0>
   14710:	andeq	r8, r0, r1, lsr #18
   14714:	push	{r4, r5, r6, lr}
   14718:	mov	r4, r0
   1471c:	mov	r5, r1
   14720:	mov	r6, r2
   14724:	ldr	r1, [pc, #60]	; 14768 <ftello64@plt+0x303c>
   14728:	ldr	r2, [r0, #4]
   1472c:	ldr	r0, [r0, #8]
   14730:	bl	172d8 <argp_parse@@Base+0xb90>
   14734:	cmp	r0, #0
   14738:	blt	14750 <ftello64@plt+0x3024>
   1473c:	ldr	r3, [r4, #4]
   14740:	ldr	r3, [r3, #16]
   14744:	cmp	r3, #0
   14748:	movgt	r3, #0
   1474c:	bgt	14754 <ftello64@plt+0x3028>
   14750:	mov	r3, #1
   14754:	mov	r2, r6
   14758:	mov	r1, r5
   1475c:	mov	r0, r4
   14760:	pop	{r4, r5, r6, lr}
   14764:	b	142ec <ftello64@plt+0x2bc0>
   14768:	andeq	r8, r0, sp, lsl r9
   1476c:	push	{r4, r5, r6, lr}
   14770:	mov	r4, r0
   14774:	mov	r5, r1
   14778:	mov	r6, r2
   1477c:	ldr	r1, [pc, #40]	; 147ac <ftello64@plt+0x3080>
   14780:	ldr	r2, [r0, #4]
   14784:	ldr	r0, [r0, #8]
   14788:	bl	172d8 <argp_parse@@Base+0xb90>
   1478c:	mov	r2, r6
   14790:	mov	r1, r5
   14794:	cmp	r0, #0
   14798:	movge	r3, #0
   1479c:	mov	r0, r4
   147a0:	movlt	r3, #1
   147a4:	pop	{r4, r5, r6, lr}
   147a8:	b	142ec <ftello64@plt+0x2bc0>
   147ac:	andeq	r8, r0, r3, lsl r9
   147b0:	mov	r3, #1
   147b4:	b	142ec <ftello64@plt+0x2bc0>
   147b8:	b	147b0 <ftello64@plt+0x3084>
   147bc:	push	{r4, r5, r6, lr}
   147c0:	mov	r4, r0
   147c4:	mov	r5, r1
   147c8:	mov	r6, r2
   147cc:	ldr	r1, [pc, #40]	; 147fc <ftello64@plt+0x30d0>
   147d0:	ldr	r2, [r0, #4]
   147d4:	ldr	r0, [r0, #8]
   147d8:	bl	172d8 <argp_parse@@Base+0xb90>
   147dc:	mov	r2, r6
   147e0:	mov	r1, r5
   147e4:	cmp	r0, #0
   147e8:	movge	r3, #0
   147ec:	mov	r0, r4
   147f0:	movlt	r3, #1
   147f4:	pop	{r4, r5, r6, lr}
   147f8:	b	142ec <ftello64@plt+0x2bc0>
   147fc:	andeq	r8, r0, r0, ror r9
   14800:	ldr	r3, [r0, #4]
   14804:	ldrb	r3, [r3, #26]
   14808:	cmp	r3, #0
   1480c:	movne	r3, #0
   14810:	moveq	r3, #1
   14814:	b	142ec <ftello64@plt+0x2bc0>
   14818:	ldr	r3, [r0, #4]
   1481c:	ldrh	r3, [r3, #24]
   14820:	cmp	r3, #255	; 0xff
   14824:	movhi	r3, #0
   14828:	movls	r3, #1
   1482c:	b	142ec <ftello64@plt+0x2bc0>
   14830:	ldr	r3, [r0, #4]
   14834:	ldr	r3, [r3, #16]
   14838:	cmp	r3, #0
   1483c:	movne	r3, #0
   14840:	moveq	r3, #1
   14844:	b	142ec <ftello64@plt+0x2bc0>
   14848:	ldr	r3, [r0, #4]
   1484c:	ldr	r3, [r3, #20]
   14850:	cmp	r3, #0
   14854:	movne	r3, #0
   14858:	moveq	r3, #1
   1485c:	b	142ec <ftello64@plt+0x2bc0>
   14860:	ldr	r3, [r0, #4]
   14864:	ldrb	r3, [r3, #27]
   14868:	cmp	r3, #0
   1486c:	movne	r3, #0
   14870:	moveq	r3, #1
   14874:	b	142ec <ftello64@plt+0x2bc0>
   14878:	cmp	r1, #0
   1487c:	bxeq	lr
   14880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14884:	mov	r5, #0
   14888:	ldr	r7, [r0]
   1488c:	ldr	r8, [pc, #64]	; 148d4 <ftello64@plt+0x31a8>
   14890:	mov	r6, r2
   14894:	mov	r4, r0
   14898:	mov	r9, r5
   1489c:	add	r5, r5, #12
   148a0:	add	r3, r5, r8
   148a4:	ldr	r3, [r3, #-12]
   148a8:	cmp	r3, #0
   148ac:	bne	148b8 <ftello64@plt+0x318c>
   148b0:	str	r7, [r4]
   148b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148b8:	str	r3, [r4]
   148bc:	ldr	r3, [r6]
   148c0:	mov	r1, r9
   148c4:	str	r3, [r4, #16]
   148c8:	mov	r0, r4
   148cc:	bl	14080 <ftello64@plt+0x2954>
   148d0:	b	1489c <ftello64@plt+0x3170>
   148d4:			; <UNDEFINED> instruction: 0x000302bc
   148d8:	cmp	r1, #1
   148dc:	bxle	lr
   148e0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   148e4:	mov	r5, r2
   148e8:	mov	r4, r0
   148ec:	mov	r2, #10
   148f0:	add	r1, sp, #4
   148f4:	ldr	r0, [r5]
   148f8:	bl	11564 <strtoul@plt>
   148fc:	ldr	r3, [sp, #4]
   14900:	ldrb	r3, [r3]
   14904:	cmp	r3, #0
   14908:	mov	r6, r0
   1490c:	beq	14920 <ftello64@plt+0x31f4>
   14910:	ldr	r2, [pc, #56]	; 14950 <ftello64@plt+0x3224>
   14914:	mov	r1, #0
   14918:	mov	r0, #1
   1491c:	bl	114d4 <error@plt>
   14920:	mov	r7, #0
   14924:	cmp	r6, #0
   14928:	bne	14934 <ftello64@plt+0x3208>
   1492c:	add	sp, sp, #12
   14930:	pop	{r4, r5, r6, r7, pc}
   14934:	ldr	r3, [r5, #4]
   14938:	mov	r1, r7
   1493c:	str	r3, [r4, #16]
   14940:	mov	r0, r4
   14944:	bl	14080 <ftello64@plt+0x2954>
   14948:	sub	r6, r6, #1
   1494c:	b	14924 <ftello64@plt+0x31f8>
   14950:	andeq	lr, r1, r8, asr #32
   14954:	cmp	r1, #1
   14958:	bxle	lr
   1495c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14960:	mov	r4, #0
   14964:	ldr	r5, [pc, #100]	; 149d0 <ftello64@plt+0x32a4>
   14968:	mov	r8, r2
   1496c:	mov	r7, r1
   14970:	mov	r6, r0
   14974:	mov	sl, r4
   14978:	mov	fp, #1
   1497c:	ldr	r9, [r5]
   14980:	str	r4, [r5]
   14984:	add	r4, r4, #1
   14988:	cmp	r7, r4
   1498c:	bne	14998 <ftello64@plt+0x326c>
   14990:	str	r9, [r5]
   14994:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14998:	ldr	r3, [r5]
   1499c:	cmp	r3, #0
   149a0:	beq	149b8 <ftello64@plt+0x328c>
   149a4:	mov	r9, fp
   149a8:	ldr	r1, [r8]
   149ac:	mov	r0, r6
   149b0:	bl	1367c <ftello64@plt+0x1f50>
   149b4:	str	sl, [r5]
   149b8:	ldr	r3, [r8, r4, lsl #2]
   149bc:	mov	r1, sl
   149c0:	str	r3, [r6, #16]
   149c4:	mov	r0, r6
   149c8:	bl	14080 <ftello64@plt+0x2954>
   149cc:	b	14984 <ftello64@plt+0x3258>
   149d0:	andeq	r0, r3, r0, lsl ip
   149d4:	push	{r4, r5, r6, r7, r8, lr}
   149d8:	mov	r5, r0
   149dc:	mov	r6, r1
   149e0:	mov	r7, r2
   149e4:	mov	r4, #0
   149e8:	cmp	r4, r6
   149ec:	blt	149f4 <ftello64@plt+0x32c8>
   149f0:	pop	{r4, r5, r6, r7, r8, pc}
   149f4:	ldr	r0, [r7, r4, lsl #2]
   149f8:	bl	127a4 <ftello64@plt+0x1078>
   149fc:	cmp	r0, #0
   14a00:	beq	14a1c <ftello64@plt+0x32f0>
   14a04:	ldr	r3, [r0, #8]
   14a08:	mov	r1, #0
   14a0c:	str	r3, [r5, #16]
   14a10:	mov	r0, r5
   14a14:	pop	{r4, r5, r6, r7, r8, lr}
   14a18:	b	14080 <ftello64@plt+0x2954>
   14a1c:	add	r4, r4, #1
   14a20:	b	149e8 <ftello64@plt+0x32bc>
   14a24:	ldr	ip, [pc, #88]	; 14a84 <ftello64@plt+0x3358>
   14a28:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   14a2c:	ldr	lr, [ip]
   14a30:	stm	sp, {r1, r2}
   14a34:	cmp	lr, #0
   14a38:	str	r0, [sp, #8]
   14a3c:	ldreq	lr, [pc, #68]	; 14a88 <ftello64@plt+0x335c>
   14a40:	mov	r1, #0
   14a44:	mov	r0, sp
   14a48:	ldreq	lr, [lr]
   14a4c:	str	r3, [sp, #16]
   14a50:	streq	lr, [ip]
   14a54:	ldr	ip, [pc, #48]	; 14a8c <ftello64@plt+0x3360>
   14a58:	str	r1, [sp, #20]
   14a5c:	ldr	lr, [ip]
   14a60:	cmp	lr, #0
   14a64:	moveq	lr, #1
   14a68:	movne	ip, #0
   14a6c:	streq	lr, [sp, #12]
   14a70:	streq	lr, [ip]
   14a74:	strne	ip, [sp, #12]
   14a78:	bl	14080 <ftello64@plt+0x2954>
   14a7c:	add	sp, sp, #28
   14a80:	pop	{pc}		; (ldr pc, [sp], #4)
   14a84:	andeq	r0, r3, ip, lsl ip
   14a88:	andeq	r0, r3, r4, asr fp
   14a8c:			; <UNDEFINED> instruction: 0x00030bb4
   14a90:	push	{r0, r1, r2, lr}
   14a94:	ldrb	r0, [r1, #3]
   14a98:	ldrb	r3, [r1, #1]
   14a9c:	ldrb	r2, [r1, #2]
   14aa0:	ldrb	r1, [r1]
   14aa4:	str	r1, [sp]
   14aa8:	mov	r1, r0
   14aac:	ldr	r0, [pc, #40]	; 14adc <ftello64@plt+0x33b0>
   14ab0:	bl	113f0 <printf@plt>
   14ab4:	ldr	r3, [pc, #36]	; 14ae0 <ftello64@plt+0x33b4>
   14ab8:	ldr	r2, [r3]
   14abc:	ldr	r3, [r2]
   14ac0:	add	r0, r3, r0
   14ac4:	ldr	r3, [pc, #24]	; 14ae4 <ftello64@plt+0x33b8>
   14ac8:	str	r0, [r2]
   14acc:	mov	r2, #1
   14ad0:	str	r2, [r3]
   14ad4:	add	sp, sp, #12
   14ad8:	pop	{pc}		; (ldr pc, [sp], #4)
   14adc:			; <UNDEFINED> instruction: 0x0001e2bb
   14ae0:	andeq	r0, r3, r0, lsr #10
   14ae4:	andeq	r0, r3, r0, lsl ip
   14ae8:	push	{r0, r1, r2, lr}
   14aec:	ldrb	ip, [r1, #4]
   14af0:	ldrb	r0, [r1]
   14af4:	ldrb	r3, [r1, #2]
   14af8:	ldrb	r2, [r1, #1]
   14afc:	str	ip, [sp, #4]
   14b00:	ldrb	r1, [r1, #3]
   14b04:	str	r1, [sp]
   14b08:	mov	r1, r0
   14b0c:	ldr	r0, [pc, #40]	; 14b3c <ftello64@plt+0x3410>
   14b10:	bl	113f0 <printf@plt>
   14b14:	ldr	r3, [pc, #36]	; 14b40 <ftello64@plt+0x3414>
   14b18:	ldr	r2, [r3]
   14b1c:	ldr	r3, [r2]
   14b20:	add	r0, r3, r0
   14b24:	ldr	r3, [pc, #24]	; 14b44 <ftello64@plt+0x3418>
   14b28:	str	r0, [r2]
   14b2c:	mov	r2, #1
   14b30:	str	r2, [r3]
   14b34:	add	sp, sp, #12
   14b38:	pop	{pc}		; (ldr pc, [sp], #4)
   14b3c:	muleq	r1, ip, r2
   14b40:	andeq	r0, r3, r0, lsr #10
   14b44:	andeq	r0, r3, r0, lsl ip
   14b48:	push	{r4, lr}
   14b4c:	ldrsh	r1, [r1]
   14b50:	ldr	r0, [pc, #36]	; 14b7c <ftello64@plt+0x3450>
   14b54:	bl	113f0 <printf@plt>
   14b58:	ldr	r3, [pc, #32]	; 14b80 <ftello64@plt+0x3454>
   14b5c:	ldr	r2, [r3]
   14b60:	ldr	r3, [r2]
   14b64:	add	r0, r3, r0
   14b68:	ldr	r3, [pc, #20]	; 14b84 <ftello64@plt+0x3458>
   14b6c:	str	r0, [r2]
   14b70:	mov	r2, #1
   14b74:	str	r2, [r3]
   14b78:	pop	{r4, pc}
   14b7c:	ldrdeq	lr, [r1], -r0
   14b80:	andeq	r0, r3, r0, lsr #10
   14b84:	andeq	r0, r3, r0, lsl ip
   14b88:	push	{r4, lr}
   14b8c:	ldr	r0, [pc, #40]	; 14bbc <ftello64@plt+0x3490>
   14b90:	ldrb	r1, [r1]
   14b94:	bl	113f0 <printf@plt>
   14b98:	ldr	r3, [pc, #32]	; 14bc0 <ftello64@plt+0x3494>
   14b9c:	ldr	r2, [r3]
   14ba0:	ldr	r3, [r2]
   14ba4:	add	r0, r3, r0
   14ba8:	ldr	r3, [pc, #20]	; 14bc4 <ftello64@plt+0x3498>
   14bac:	str	r0, [r2]
   14bb0:	mov	r2, #1
   14bb4:	str	r2, [r3]
   14bb8:	pop	{r4, pc}
   14bbc:	andeq	lr, r1, sl, asr #5
   14bc0:	andeq	r0, r3, r0, lsr #10
   14bc4:	andeq	r0, r3, r0, lsl ip
   14bc8:	push	{r0, r1, r2, r3, r4, lr}
   14bcc:	ldrb	ip, [r1, #5]
   14bd0:	ldrb	r0, [r1]
   14bd4:	ldrb	r3, [r1, #2]
   14bd8:	ldrb	r2, [r1, #1]
   14bdc:	str	ip, [sp, #8]
   14be0:	ldrb	ip, [r1, #4]
   14be4:	str	ip, [sp, #4]
   14be8:	ldrb	r1, [r1, #3]
   14bec:	str	r1, [sp]
   14bf0:	mov	r1, r0
   14bf4:	ldr	r0, [pc, #40]	; 14c24 <ftello64@plt+0x34f8>
   14bf8:	bl	113f0 <printf@plt>
   14bfc:	ldr	r3, [pc, #36]	; 14c28 <ftello64@plt+0x34fc>
   14c00:	ldr	r2, [r3]
   14c04:	ldr	r3, [r2]
   14c08:	add	r0, r3, r0
   14c0c:	ldr	r3, [pc, #24]	; 14c2c <ftello64@plt+0x3500>
   14c10:	str	r0, [r2]
   14c14:	mov	r2, #1
   14c18:	str	r2, [r3]
   14c1c:	add	sp, sp, #20
   14c20:	pop	{pc}		; (ldr pc, [sp], #4)
   14c24:			; <UNDEFINED> instruction: 0x0001e2b1
   14c28:	andeq	r0, r3, r0, lsr #10
   14c2c:	andeq	r0, r3, r0, lsl ip
   14c30:	push	{r4, r5, r6, r7, r8, lr}
   14c34:	mov	r7, r0
   14c38:	mov	r4, r1
   14c3c:	sub	r5, r1, #1
   14c40:	add	r6, r1, #5
   14c44:	ldrb	r1, [r5, #1]!
   14c48:	lsr	r1, r1, #1
   14c4c:	cmp	r1, #32
   14c50:	beq	14c64 <ftello64@plt+0x3538>
   14c54:	mov	r0, r7
   14c58:	bl	13564 <ftello64@plt+0x1e38>
   14c5c:	cmp	r6, r5
   14c60:	bne	14c44 <ftello64@plt+0x3518>
   14c64:	ldrb	r1, [r4, #6]
   14c68:	asr	r1, r1, #1
   14c6c:	ands	r1, r1, #15
   14c70:	popeq	{r4, r5, r6, r7, r8, pc}
   14c74:	ldr	r0, [pc, #36]	; 14ca0 <ftello64@plt+0x3574>
   14c78:	bl	113f0 <printf@plt>
   14c7c:	ldr	r3, [pc, #32]	; 14ca4 <ftello64@plt+0x3578>
   14c80:	ldr	r2, [r3]
   14c84:	ldr	r3, [r2]
   14c88:	add	r0, r3, r0
   14c8c:	ldr	r3, [pc, #20]	; 14ca8 <ftello64@plt+0x357c>
   14c90:	str	r0, [r2]
   14c94:	mov	r2, #1
   14c98:	str	r2, [r3]
   14c9c:	pop	{r4, r5, r6, r7, r8, pc}
   14ca0:	andeq	lr, r1, pc, asr #5
   14ca4:	andeq	r0, r3, r0, lsr #10
   14ca8:	andeq	r0, r3, r0, lsl ip
   14cac:	push	{lr}		; (str lr, [sp, #-4]!)
   14cb0:	sub	sp, sp, #60	; 0x3c
   14cb4:	add	r3, r1, #64	; 0x40
   14cb8:	str	r3, [sp, #52]	; 0x34
   14cbc:	add	r3, r1, #100	; 0x64
   14cc0:	str	r3, [sp, #48]	; 0x30
   14cc4:	add	r3, r1, #68	; 0x44
   14cc8:	str	r3, [sp, #44]	; 0x2c
   14ccc:	add	r3, r1, #104	; 0x68
   14cd0:	str	r3, [sp, #40]	; 0x28
   14cd4:	add	r3, r1, #52	; 0x34
   14cd8:	str	r3, [sp, #36]	; 0x24
   14cdc:	add	r3, r1, #44	; 0x2c
   14ce0:	str	r3, [sp, #32]
   14ce4:	add	r3, r1, #16
   14ce8:	str	r3, [sp, #28]
   14cec:	add	r3, r1, #32
   14cf0:	str	r3, [sp, #24]
   14cf4:	add	r3, r1, #56	; 0x38
   14cf8:	str	r3, [sp, #20]
   14cfc:	add	r3, r1, #60	; 0x3c
   14d00:	str	r3, [sp, #16]
   14d04:	add	r3, r1, #84	; 0x54
   14d08:	str	r3, [sp, #12]
   14d0c:	add	r3, r1, #88	; 0x58
   14d10:	str	r3, [sp, #8]
   14d14:	add	r3, r1, #48	; 0x30
   14d18:	str	r3, [sp, #4]
   14d1c:	add	r3, r1, #40	; 0x28
   14d20:	str	r3, [sp]
   14d24:	add	r2, r1, #24
   14d28:	add	r3, r1, #8
   14d2c:	ldr	r1, [pc, #20]	; 14d48 <ftello64@plt+0x361c>
   14d30:	bl	11648 <sscanf@plt>
   14d34:	sub	r0, r0, #16
   14d38:	clz	r0, r0
   14d3c:	lsr	r0, r0, #5
   14d40:	add	sp, sp, #60	; 0x3c
   14d44:	pop	{pc}		; (ldr pc, [sp], #4)
   14d48:	ldrdeq	lr, [r1], -r3
   14d4c:	push	{r4, lr}
   14d50:	sub	sp, sp, #48	; 0x30
   14d54:	add	r3, r1, #100	; 0x64
   14d58:	str	r3, [sp, #40]	; 0x28
   14d5c:	add	r3, r1, #68	; 0x44
   14d60:	str	r3, [sp, #36]	; 0x24
   14d64:	add	r3, r1, #104	; 0x68
   14d68:	str	r3, [sp, #32]
   14d6c:	add	r3, r1, #52	; 0x34
   14d70:	str	r3, [sp, #28]
   14d74:	add	r3, r1, #44	; 0x2c
   14d78:	str	r3, [sp, #24]
   14d7c:	add	r3, r1, #16
   14d80:	str	r3, [sp, #20]
   14d84:	add	r3, r1, #32
   14d88:	str	r3, [sp, #16]
   14d8c:	add	r3, r1, #84	; 0x54
   14d90:	str	r3, [sp, #12]
   14d94:	add	r3, r1, #88	; 0x58
   14d98:	str	r3, [sp, #8]
   14d9c:	add	r3, r1, #48	; 0x30
   14da0:	str	r3, [sp, #4]
   14da4:	add	r3, r1, #40	; 0x28
   14da8:	mov	r4, r1
   14dac:	str	r3, [sp]
   14db0:	add	r2, r1, #24
   14db4:	add	r3, r1, #8
   14db8:	ldr	r1, [pc, #28]	; 14ddc <ftello64@plt+0x36b0>
   14dbc:	bl	11648 <sscanf@plt>
   14dc0:	mov	r3, #0
   14dc4:	str	r3, [r4, #56]	; 0x38
   14dc8:	sub	r0, r0, #13
   14dcc:	clz	r0, r0
   14dd0:	lsr	r0, r0, #5
   14dd4:	add	sp, sp, #48	; 0x30
   14dd8:	pop	{r4, pc}
   14ddc:	andeq	lr, r1, r7, lsl r3
   14de0:	push	{r4, lr}
   14de4:	sub	sp, sp, #40	; 0x28
   14de8:	add	r3, r1, #100	; 0x64
   14dec:	str	r3, [sp, #32]
   14df0:	add	r3, r1, #68	; 0x44
   14df4:	str	r3, [sp, #28]
   14df8:	add	r3, r1, #104	; 0x68
   14dfc:	str	r3, [sp, #24]
   14e00:	add	r3, r1, #52	; 0x34
   14e04:	str	r3, [sp, #20]
   14e08:	add	r3, r1, #44	; 0x2c
   14e0c:	str	r3, [sp, #16]
   14e10:	add	r3, r1, #16
   14e14:	str	r3, [sp, #12]
   14e18:	add	r3, r1, #84	; 0x54
   14e1c:	str	r3, [sp, #8]
   14e20:	add	r3, r1, #88	; 0x58
   14e24:	str	r3, [sp, #4]
   14e28:	add	r3, r1, #48	; 0x30
   14e2c:	mov	r4, r1
   14e30:	str	r3, [sp]
   14e34:	add	r2, r1, #8
   14e38:	add	r3, r1, #40	; 0x28
   14e3c:	ldr	r1, [pc, #44]	; 14e70 <ftello64@plt+0x3744>
   14e40:	bl	11648 <sscanf@plt>
   14e44:	mov	r2, #0
   14e48:	mov	r3, #0
   14e4c:	strd	r2, [r4, #24]
   14e50:	strd	r2, [r4, #32]
   14e54:	mov	r3, #0
   14e58:	str	r3, [r4, #56]	; 0x38
   14e5c:	sub	r0, r0, #11
   14e60:	clz	r0, r0
   14e64:	lsr	r0, r0, #5
   14e68:	add	sp, sp, #40	; 0x28
   14e6c:	pop	{r4, pc}
   14e70:	andeq	lr, r1, pc, asr #6
   14e74:	mov	r1, #2
   14e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e7c:	mov	r2, #0
   14e80:	sub	sp, sp, #52	; 0x34
   14e84:	mov	r0, r1
   14e88:	bl	116c0 <socket@plt>
   14e8c:	subs	r9, r0, #0
   14e90:	bge	14ea4 <ftello64@plt+0x3778>
   14e94:	mov	r7, #0
   14e98:	mov	r0, r7
   14e9c:	add	sp, sp, #52	; 0x34
   14ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ea4:	add	r2, sp, #12
   14ea8:	mov	r1, #0
   14eac:	ldr	r0, [pc, #352]	; 15014 <ftello64@plt+0x38e8>
   14eb0:	bl	1790c <_obstack_memory_used@@Base+0x30c>
   14eb4:	subs	r5, r0, #0
   14eb8:	beq	14e94 <ftello64@plt+0x3768>
   14ebc:	ldr	r8, [sp, #12]
   14ec0:	mov	r4, r5
   14ec4:	mov	r6, #0
   14ec8:	mov	r7, #58	; 0x3a
   14ecc:	sub	r2, r4, r5
   14ed0:	add	r0, r4, #1
   14ed4:	sub	r2, r8, r2
   14ed8:	mov	r1, r7
   14edc:	bl	115f4 <memchr@plt>
   14ee0:	add	r6, r6, #1
   14ee4:	subs	r4, r0, #0
   14ee8:	bne	14ecc <ftello64@plt+0x37a0>
   14eec:	lsl	r0, r6, #3
   14ef0:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   14ef4:	subs	r7, r0, #0
   14ef8:	bne	14f20 <ftello64@plt+0x37f4>
   14efc:	bl	11594 <__errno_location@plt>
   14f00:	ldr	r6, [r0]
   14f04:	mov	r4, r0
   14f08:	mov	r0, r9
   14f0c:	bl	11708 <close@plt>
   14f10:	mov	r0, r5
   14f14:	bl	171e4 <argp_parse@@Base+0xa9c>
   14f18:	str	r6, [r4]
   14f1c:	b	14e98 <ftello64@plt+0x376c>
   14f20:	ldr	r2, [sp, #12]
   14f24:	mov	r1, #58	; 0x3a
   14f28:	mov	r0, r5
   14f2c:	bl	115f4 <memchr@plt>
   14f30:	mov	r8, r7
   14f34:	mov	sl, r4
   14f38:	mvn	fp, #0
   14f3c:	mov	r6, r0
   14f40:	cmp	r6, #0
   14f44:	bne	14f60 <ftello64@plt+0x3834>
   14f48:	add	r3, r7, r4, lsl #3
   14f4c:	str	r6, [r7, r4, lsl #3]
   14f50:	mov	r0, r5
   14f54:	str	r6, [r3, #4]
   14f58:	bl	171e4 <argp_parse@@Base+0xa9c>
   14f5c:	b	14e98 <ftello64@plt+0x376c>
   14f60:	mov	r3, r6
   14f64:	strb	sl, [r3], #-1
   14f68:	mov	r0, r3
   14f6c:	ldrb	r2, [r3], #-1
   14f70:	cmp	r2, #32
   14f74:	cmpne	r2, #10
   14f78:	bne	14f68 <ftello64@plt+0x383c>
   14f7c:	add	r0, r0, #1
   14f80:	bl	11474 <strdup@plt>
   14f84:	add	r4, r4, #1
   14f88:	str	r4, [r8]
   14f8c:	add	r8, r8, #8
   14f90:	str	r0, [r8, #-4]
   14f94:	mov	r1, r0
   14f98:	add	r0, sp, #16
   14f9c:	bl	114bc <strcpy@plt>
   14fa0:	add	r2, sp, #16
   14fa4:	ldr	r1, [pc, #108]	; 15018 <ftello64@plt+0x38ec>
   14fa8:	mov	r0, r9
   14fac:	str	fp, [sp, #32]
   14fb0:	bl	172d8 <argp_parse@@Base+0xb90>
   14fb4:	cmp	r0, #0
   14fb8:	ldrge	r3, [sp, #32]
   14fbc:	strge	r3, [r8, #-8]
   14fc0:	ldr	r3, [r8, #-4]
   14fc4:	cmp	r3, #0
   14fc8:	bne	14ff4 <ftello64@plt+0x38c8>
   14fcc:	str	r3, [sp, #4]
   14fd0:	bl	11594 <__errno_location@plt>
   14fd4:	ldr	r6, [r0]
   14fd8:	mov	r4, r0
   14fdc:	mov	r0, r9
   14fe0:	bl	11708 <close@plt>
   14fe4:	mov	r0, r5
   14fe8:	bl	171e4 <argp_parse@@Base+0xa9c>
   14fec:	str	r6, [r4]
   14ff0:	b	14e94 <ftello64@plt+0x3768>
   14ff4:	ldr	r2, [sp, #12]
   14ff8:	sub	r3, r6, r5
   14ffc:	mov	r0, r6
   15000:	sub	r2, r2, r3
   15004:	mov	r1, #58	; 0x3a
   15008:	bl	115f4 <memchr@plt>
   1500c:	mov	r6, r0
   15010:	b	14f40 <ftello64@plt+0x3814>
   15014:	andeq	lr, r1, sp, ror r3
   15018:	andeq	r8, r0, r3, lsr r9
   1501c:	ldr	r3, [pc, #40]	; 1504c <ftello64@plt+0x3920>
   15020:	ldr	r2, [r3]
   15024:	cmp	r2, #0
   15028:	bne	15038 <ftello64@plt+0x390c>
   1502c:	mov	r3, r2
   15030:	mov	r0, r3
   15034:	bx	lr
   15038:	ldr	r2, [r3, #8]
   1503c:	cmp	r2, r0
   15040:	beq	15030 <ftello64@plt+0x3904>
   15044:	add	r3, r3, #16
   15048:	b	15020 <ftello64@plt+0x38f4>
   1504c:	andeq	r0, r3, ip, asr #15
   15050:	ldr	r2, [pc, #564]	; 1528c <ftello64@plt+0x3b60>
   15054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15058:	sub	sp, sp, #28
   1505c:	ldr	r3, [r2]
   15060:	str	r0, [sp, #4]
   15064:	cmp	r3, #0
   15068:	str	r2, [sp, #8]
   1506c:	bne	150b0 <ftello64@plt+0x3984>
   15070:	ldr	r1, [pc, #536]	; 15290 <ftello64@plt+0x3b64>
   15074:	ldr	r0, [pc, #536]	; 15294 <ftello64@plt+0x3b68>
   15078:	str	r3, [sp, #16]
   1507c:	str	r3, [sp, #20]
   15080:	bl	11684 <fopen64@plt>
   15084:	subs	r5, r0, #0
   15088:	bne	150cc <ftello64@plt+0x39a0>
   1508c:	bl	11594 <__errno_location@plt>
   15090:	ldr	r3, [pc, #508]	; 15294 <ftello64@plt+0x3b68>
   15094:	ldr	r2, [pc, #508]	; 15298 <ftello64@plt+0x3b6c>
   15098:	ldr	r1, [r0]
   1509c:	mov	r0, r5
   150a0:	bl	114d4 <error@plt>
   150a4:	ldr	r2, [sp, #8]
   150a8:	mov	r3, #1
   150ac:	str	r3, [r2]
   150b0:	ldr	r3, [pc, #484]	; 1529c <ftello64@plt+0x3b70>
   150b4:	ldr	r4, [r3]
   150b8:	cmp	r4, #0
   150bc:	bne	15270 <ftello64@plt+0x3b44>
   150c0:	mov	r0, r4
   150c4:	add	sp, sp, #28
   150c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150cc:	mov	r2, r5
   150d0:	add	r1, sp, #20
   150d4:	add	r0, sp, #16
   150d8:	bl	116cc <getline@plt>
   150dc:	cmp	r0, #0
   150e0:	bge	15110 <ftello64@plt+0x39e4>
   150e4:	bl	11594 <__errno_location@plt>
   150e8:	ldr	r3, [pc, #420]	; 15294 <ftello64@plt+0x3b68>
   150ec:	ldr	r2, [pc, #428]	; 152a0 <ftello64@plt+0x3b74>
   150f0:	ldr	r1, [r0]
   150f4:	mov	r0, #0
   150f8:	bl	114d4 <error@plt>
   150fc:	mov	r0, r5
   15100:	bl	11600 <fclose@plt>
   15104:	ldr	r0, [sp, #16]
   15108:	bl	171e4 <argp_parse@@Base+0xa9c>
   1510c:	b	150a4 <ftello64@plt+0x3978>
   15110:	mov	r2, r5
   15114:	add	r1, sp, #20
   15118:	add	r0, sp, #16
   1511c:	bl	116cc <getline@plt>
   15120:	cmp	r0, #0
   15124:	blt	150e4 <ftello64@plt+0x39b8>
   15128:	ldr	r4, [sp, #16]
   1512c:	ldr	r1, [pc, #368]	; 152a4 <ftello64@plt+0x3b78>
   15130:	mov	r0, r4
   15134:	bl	113a8 <strstr@plt>
   15138:	cmp	r0, #0
   1513c:	movne	r9, #2
   15140:	bne	15158 <ftello64@plt+0x3a2c>
   15144:	ldr	r1, [pc, #348]	; 152a8 <ftello64@plt+0x3b7c>
   15148:	mov	r0, r4
   1514c:	bl	113a8 <strstr@plt>
   15150:	adds	r9, r0, #0
   15154:	movne	r9, #1
   15158:	ldr	fp, [pc, #332]	; 152ac <ftello64@plt+0x3b80>
   1515c:	ldr	sl, [pc, #332]	; 152b0 <ftello64@plt+0x3b84>
   15160:	mov	r2, r5
   15164:	add	r1, sp, #20
   15168:	add	r0, sp, #16
   1516c:	bl	116cc <getline@plt>
   15170:	cmp	r0, #0
   15174:	ble	150fc <ftello64@plt+0x39d0>
   15178:	mov	r0, #120	; 0x78
   1517c:	bl	1816c <_obstack_memory_used@@Base+0xb6c>
   15180:	ldr	r6, [sp, #16]
   15184:	mov	r4, r0
   15188:	mov	r8, r6
   1518c:	ldrb	r7, [r8], #1
   15190:	cmp	r7, #0
   15194:	bne	151d0 <ftello64@plt+0x3aa4>
   15198:	mov	r1, #58	; 0x3a
   1519c:	mov	r0, r6
   151a0:	bl	1157c <strchr@plt>
   151a4:	subs	r7, r0, #0
   151a8:	bne	151f8 <ftello64@plt+0x3acc>
   151ac:	bl	11594 <__errno_location@plt>
   151b0:	ldr	r3, [pc, #220]	; 15294 <ftello64@plt+0x3b68>
   151b4:	ldr	r2, [pc, #228]	; 152a0 <ftello64@plt+0x3b74>
   151b8:	ldr	r1, [r0]
   151bc:	mov	r0, r7
   151c0:	bl	114d4 <error@plt>
   151c4:	mov	r0, r4
   151c8:	bl	171e4 <argp_parse@@Base+0xa9c>
   151cc:	b	150fc <ftello64@plt+0x39d0>
   151d0:	tst	r7, #128	; 0x80
   151d4:	bne	15198 <ftello64@plt+0x3a6c>
   151d8:	bl	1154c <__ctype_b_loc@plt>
   151dc:	lsl	r7, r7, #1
   151e0:	ldr	r3, [r0]
   151e4:	ldrh	r3, [r3, r7]
   151e8:	tst	r3, #8192	; 0x2000
   151ec:	beq	15198 <ftello64@plt+0x3a6c>
   151f0:	mov	r6, r8
   151f4:	b	15188 <ftello64@plt+0x3a5c>
   151f8:	sub	r8, r7, r6
   151fc:	add	r0, r8, #1
   15200:	bl	17d8c <_obstack_memory_used@@Base+0x78c>
   15204:	mov	r1, r6
   15208:	mov	r2, r8
   1520c:	str	r0, [r4, #4]
   15210:	bl	11444 <memcpy@plt>
   15214:	mov	r2, #0
   15218:	ldr	r3, [fp, r9, lsl #2]
   1521c:	mov	r1, r4
   15220:	str	r2, [sp, #12]
   15224:	strb	r2, [r0, r8]
   15228:	add	r0, r7, #1
   1522c:	blx	r3
   15230:	ldr	r2, [sp, #12]
   15234:	subs	r6, r0, #0
   15238:	bne	15254 <ftello64@plt+0x3b28>
   1523c:	bl	11594 <__errno_location@plt>
   15240:	ldr	r3, [pc, #76]	; 15294 <ftello64@plt+0x3b68>
   15244:	ldr	r2, [pc, #84]	; 152a0 <ftello64@plt+0x3b74>
   15248:	ldr	r1, [r0]
   1524c:	mov	r0, r6
   15250:	b	151c0 <ftello64@plt+0x3a94>
   15254:	ldr	r3, [sl]
   15258:	str	r2, [r4]
   1525c:	cmp	r3, #0
   15260:	ldreq	r3, [pc, #52]	; 1529c <ftello64@plt+0x3b70>
   15264:	str	r4, [r3]
   15268:	str	r4, [sl]
   1526c:	b	15160 <ftello64@plt+0x3a34>
   15270:	ldr	r1, [sp, #4]
   15274:	ldr	r0, [r4, #4]
   15278:	bl	113d8 <strcmp@plt>
   1527c:	cmp	r0, #0
   15280:	beq	150c0 <ftello64@plt+0x3994>
   15284:	ldr	r4, [r4]
   15288:	b	150b8 <ftello64@plt+0x398c>
   1528c:			; <UNDEFINED> instruction: 0x00030bb8
   15290:	muleq	r1, r4, ip
   15294:	andeq	lr, r1, sp, ror r3
   15298:	andeq	lr, r1, fp, lsl #7
   1529c:	andeq	r0, r3, r4, lsr #24
   152a0:	muleq	r1, sl, r3
   152a4:	strdeq	lr, [r1], -r8
   152a8:	strheq	lr, [r1], -r6
   152ac:	muleq	r1, r0, r2
   152b0:	andeq	r0, r3, r0, lsr #24
   152b4:	push	{r4, r5, r6, lr}
   152b8:	mov	r4, r0
   152bc:	ldr	r0, [r0, #4]
   152c0:	mov	r5, r1
   152c4:	mov	r6, r2
   152c8:	bl	15050 <ftello64@plt+0x3924>
   152cc:	mov	r2, r6
   152d0:	mov	r1, r5
   152d4:	clz	r3, r0
   152d8:	mov	r0, r4
   152dc:	lsr	r3, r3, #5
   152e0:	pop	{r4, r5, r6, lr}
   152e4:	b	142ec <ftello64@plt+0x2bc0>
   152e8:	push	{r4, r5, r6, lr}
   152ec:	mov	r4, r0
   152f0:	ldr	r0, [r0, #4]
   152f4:	mov	r5, r1
   152f8:	mov	r6, r2
   152fc:	bl	15050 <ftello64@plt+0x3924>
   15300:	cmp	r0, #0
   15304:	bne	15318 <ftello64@plt+0x3bec>
   15308:	mov	r0, r4
   1530c:	ldr	r1, [pc, #28]	; 15330 <ftello64@plt+0x3c04>
   15310:	pop	{r4, r5, r6, lr}
   15314:	b	1367c <ftello64@plt+0x1f50>
   15318:	ldr	r3, [r0, #8]
   1531c:	mov	r2, r6
   15320:	mov	r1, r5
   15324:	mov	r0, r4
   15328:	pop	{r4, r5, r6, lr}
   1532c:	b	139a8 <ftello64@plt+0x227c>
   15330:	andeq	lr, r1, r7, lsr #7
   15334:	push	{r4, r5, r6, lr}
   15338:	mov	r4, r0
   1533c:	ldr	r0, [r0, #4]
   15340:	mov	r5, r1
   15344:	mov	r6, r2
   15348:	bl	15050 <ftello64@plt+0x3924>
   1534c:	cmp	r0, #0
   15350:	bne	15364 <ftello64@plt+0x3c38>
   15354:	mov	r0, r4
   15358:	ldr	r1, [pc, #28]	; 1537c <ftello64@plt+0x3c50>
   1535c:	pop	{r4, r5, r6, lr}
   15360:	b	1367c <ftello64@plt+0x1f50>
   15364:	ldr	r3, [r0, #16]
   15368:	mov	r2, r6
   1536c:	mov	r1, r5
   15370:	mov	r0, r4
   15374:	pop	{r4, r5, r6, lr}
   15378:	b	139a8 <ftello64@plt+0x227c>
   1537c:			; <UNDEFINED> instruction: 0x0001e3bc
   15380:	push	{r4, r5, r6, lr}
   15384:	mov	r4, r0
   15388:	ldr	r0, [r0, #4]
   1538c:	mov	r5, r1
   15390:	mov	r6, r2
   15394:	bl	15050 <ftello64@plt+0x3924>
   15398:	cmp	r0, #0
   1539c:	bne	153b0 <ftello64@plt+0x3c84>
   153a0:	mov	r0, r4
   153a4:	ldr	r1, [pc, #28]	; 153c8 <ftello64@plt+0x3c9c>
   153a8:	pop	{r4, r5, r6, lr}
   153ac:	b	1367c <ftello64@plt+0x1f50>
   153b0:	ldr	r3, [r0, #24]
   153b4:	mov	r2, r6
   153b8:	mov	r1, r5
   153bc:	mov	r0, r4
   153c0:	pop	{r4, r5, r6, lr}
   153c4:	b	139a8 <ftello64@plt+0x227c>
   153c8:	ldrdeq	lr, [r1], -r1
   153cc:	push	{r4, r5, r6, lr}
   153d0:	mov	r4, r0
   153d4:	ldr	r0, [r0, #4]
   153d8:	mov	r5, r1
   153dc:	mov	r6, r2
   153e0:	bl	15050 <ftello64@plt+0x3924>
   153e4:	cmp	r0, #0
   153e8:	bne	153fc <ftello64@plt+0x3cd0>
   153ec:	mov	r0, r4
   153f0:	ldr	r1, [pc, #28]	; 15414 <ftello64@plt+0x3ce8>
   153f4:	pop	{r4, r5, r6, lr}
   153f8:	b	1367c <ftello64@plt+0x1f50>
   153fc:	ldr	r3, [r0, #32]
   15400:	mov	r2, r6
   15404:	mov	r1, r5
   15408:	mov	r0, r4
   1540c:	pop	{r4, r5, r6, lr}
   15410:	b	139a8 <ftello64@plt+0x227c>
   15414:	andeq	lr, r1, r4, ror #7
   15418:	push	{r4, r5, r6, lr}
   1541c:	mov	r4, r0
   15420:	ldr	r0, [r0, #4]
   15424:	mov	r5, r1
   15428:	mov	r6, r2
   1542c:	bl	15050 <ftello64@plt+0x3924>
   15430:	cmp	r0, #0
   15434:	bne	15448 <ftello64@plt+0x3d1c>
   15438:	mov	r0, r4
   1543c:	ldr	r1, [pc, #28]	; 15460 <ftello64@plt+0x3d34>
   15440:	pop	{r4, r5, r6, lr}
   15444:	b	1367c <ftello64@plt+0x1f50>
   15448:	ldr	r3, [r0, #40]	; 0x28
   1544c:	mov	r2, r6
   15450:	mov	r1, r5
   15454:	mov	r0, r4
   15458:	pop	{r4, r5, r6, lr}
   1545c:	b	139a8 <ftello64@plt+0x227c>
   15460:	strdeq	lr, [r1], -r7
   15464:	push	{r4, r5, r6, lr}
   15468:	mov	r4, r0
   1546c:	ldr	r0, [r0, #4]
   15470:	mov	r5, r1
   15474:	mov	r6, r2
   15478:	bl	15050 <ftello64@plt+0x3924>
   1547c:	cmp	r0, #0
   15480:	bne	15494 <ftello64@plt+0x3d68>
   15484:	mov	r0, r4
   15488:	ldr	r1, [pc, #28]	; 154ac <ftello64@plt+0x3d80>
   1548c:	pop	{r4, r5, r6, lr}
   15490:	b	1367c <ftello64@plt+0x1f50>
   15494:	ldr	r3, [r0, #44]	; 0x2c
   15498:	mov	r2, r6
   1549c:	mov	r1, r5
   154a0:	mov	r0, r4
   154a4:	pop	{r4, r5, r6, lr}
   154a8:	b	139a8 <ftello64@plt+0x227c>
   154ac:	andeq	lr, r1, fp, lsl #8
   154b0:	push	{r4, r5, r6, lr}
   154b4:	mov	r4, r0
   154b8:	ldr	r0, [r0, #4]
   154bc:	mov	r5, r1
   154c0:	mov	r6, r2
   154c4:	bl	15050 <ftello64@plt+0x3924>
   154c8:	cmp	r0, #0
   154cc:	bne	154e0 <ftello64@plt+0x3db4>
   154d0:	mov	r0, r4
   154d4:	ldr	r1, [pc, #28]	; 154f8 <ftello64@plt+0x3dcc>
   154d8:	pop	{r4, r5, r6, lr}
   154dc:	b	1367c <ftello64@plt+0x1f50>
   154e0:	ldr	r3, [r0, #48]	; 0x30
   154e4:	mov	r2, r6
   154e8:	mov	r1, r5
   154ec:	mov	r0, r4
   154f0:	pop	{r4, r5, r6, lr}
   154f4:	b	139a8 <ftello64@plt+0x227c>
   154f8:	andeq	lr, r1, pc, lsl r4
   154fc:	push	{r4, r5, r6, lr}
   15500:	mov	r4, r0
   15504:	ldr	r0, [r0, #4]
   15508:	mov	r5, r1
   1550c:	mov	r6, r2
   15510:	bl	15050 <ftello64@plt+0x3924>
   15514:	cmp	r0, #0
   15518:	bne	1552c <ftello64@plt+0x3e00>
   1551c:	mov	r0, r4
   15520:	ldr	r1, [pc, #28]	; 15544 <ftello64@plt+0x3e18>
   15524:	pop	{r4, r5, r6, lr}
   15528:	b	1367c <ftello64@plt+0x1f50>
   1552c:	ldr	r3, [r0, #52]	; 0x34
   15530:	mov	r2, r6
   15534:	mov	r1, r5
   15538:	mov	r0, r4
   1553c:	pop	{r4, r5, r6, lr}
   15540:	b	139a8 <ftello64@plt+0x227c>
   15544:	andeq	lr, r1, r4, lsr r4
   15548:	push	{r4, r5, r6, lr}
   1554c:	mov	r4, r0
   15550:	ldr	r0, [r0, #4]
   15554:	mov	r5, r1
   15558:	mov	r6, r2
   1555c:	bl	15050 <ftello64@plt+0x3924>
   15560:	cmp	r0, #0
   15564:	bne	15578 <ftello64@plt+0x3e4c>
   15568:	mov	r0, r4
   1556c:	ldr	r1, [pc, #28]	; 15590 <ftello64@plt+0x3e64>
   15570:	pop	{r4, r5, r6, lr}
   15574:	b	1367c <ftello64@plt+0x1f50>
   15578:	ldr	r3, [r0, #56]	; 0x38
   1557c:	mov	r2, r6
   15580:	mov	r1, r5
   15584:	mov	r0, r4
   15588:	pop	{r4, r5, r6, lr}
   1558c:	b	139a8 <ftello64@plt+0x227c>
   15590:	andeq	lr, r1, r9, asr #8
   15594:	push	{r4, r5, r6, lr}
   15598:	mov	r4, r0
   1559c:	ldr	r0, [r0, #4]
   155a0:	mov	r5, r1
   155a4:	mov	r6, r2
   155a8:	bl	15050 <ftello64@plt+0x3924>
   155ac:	cmp	r0, #0
   155b0:	bne	155c4 <ftello64@plt+0x3e98>
   155b4:	mov	r0, r4
   155b8:	ldr	r1, [pc, #28]	; 155dc <ftello64@plt+0x3eb0>
   155bc:	pop	{r4, r5, r6, lr}
   155c0:	b	1367c <ftello64@plt+0x1f50>
   155c4:	ldr	r3, [r0, #60]	; 0x3c
   155c8:	mov	r2, r6
   155cc:	mov	r1, r5
   155d0:	mov	r0, r4
   155d4:	pop	{r4, r5, r6, lr}
   155d8:	b	139a8 <ftello64@plt+0x227c>
   155dc:	andeq	lr, r1, r0, ror #8
   155e0:	push	{r4, r5, r6, lr}
   155e4:	mov	r4, r0
   155e8:	ldr	r0, [r0, #4]
   155ec:	mov	r5, r1
   155f0:	mov	r6, r2
   155f4:	bl	15050 <ftello64@plt+0x3924>
   155f8:	cmp	r0, #0
   155fc:	bne	15610 <ftello64@plt+0x3ee4>
   15600:	mov	r0, r4
   15604:	ldr	r1, [pc, #28]	; 15628 <ftello64@plt+0x3efc>
   15608:	pop	{r4, r5, r6, lr}
   1560c:	b	1367c <ftello64@plt+0x1f50>
   15610:	ldr	r3, [r0, #64]	; 0x40
   15614:	mov	r2, r6
   15618:	mov	r1, r5
   1561c:	mov	r0, r4
   15620:	pop	{r4, r5, r6, lr}
   15624:	b	139a8 <ftello64@plt+0x227c>
   15628:	andeq	lr, r1, r8, ror r4
   1562c:	push	{r4, r5, r6, lr}
   15630:	mov	r4, r0
   15634:	ldr	r0, [r0, #4]
   15638:	mov	r5, r1
   1563c:	mov	r6, r2
   15640:	bl	15050 <ftello64@plt+0x3924>
   15644:	cmp	r0, #0
   15648:	bne	1565c <ftello64@plt+0x3f30>
   1564c:	mov	r0, r4
   15650:	ldr	r1, [pc, #28]	; 15674 <ftello64@plt+0x3f48>
   15654:	pop	{r4, r5, r6, lr}
   15658:	b	1367c <ftello64@plt+0x1f50>
   1565c:	ldr	r3, [r0, #68]	; 0x44
   15660:	mov	r2, r6
   15664:	mov	r1, r5
   15668:	mov	r0, r4
   1566c:	pop	{r4, r5, r6, lr}
   15670:	b	139a8 <ftello64@plt+0x227c>
   15674:	muleq	r1, r0, r4
   15678:	push	{r4, r5, r6, lr}
   1567c:	mov	r4, r0
   15680:	ldr	r0, [r0, #4]
   15684:	mov	r5, r1
   15688:	mov	r6, r2
   1568c:	bl	15050 <ftello64@plt+0x3924>
   15690:	cmp	r0, #0
   15694:	bne	156a8 <ftello64@plt+0x3f7c>
   15698:	mov	r0, r4
   1569c:	ldr	r1, [pc, #28]	; 156c0 <ftello64@plt+0x3f94>
   156a0:	pop	{r4, r5, r6, lr}
   156a4:	b	1367c <ftello64@plt+0x1f50>
   156a8:	ldr	r3, [r0, #72]	; 0x48
   156ac:	mov	r2, r6
   156b0:	mov	r1, r5
   156b4:	mov	r0, r4
   156b8:	pop	{r4, r5, r6, lr}
   156bc:	b	139a8 <ftello64@plt+0x227c>
   156c0:	andeq	lr, r1, r5, lsr #9
   156c4:	push	{r4, r5, r6, lr}
   156c8:	mov	r4, r0
   156cc:	ldr	r0, [r0, #4]
   156d0:	mov	r5, r1
   156d4:	mov	r6, r2
   156d8:	bl	15050 <ftello64@plt+0x3924>
   156dc:	cmp	r0, #0
   156e0:	bne	156f4 <ftello64@plt+0x3fc8>
   156e4:	mov	r0, r4
   156e8:	ldr	r1, [pc, #28]	; 1570c <ftello64@plt+0x3fe0>
   156ec:	pop	{r4, r5, r6, lr}
   156f0:	b	1367c <ftello64@plt+0x1f50>
   156f4:	ldr	r3, [r0, #76]	; 0x4c
   156f8:	mov	r2, r6
   156fc:	mov	r1, r5
   15700:	mov	r0, r4
   15704:	pop	{r4, r5, r6, lr}
   15708:	b	139a8 <ftello64@plt+0x227c>
   1570c:	andeq	lr, r1, r0, asr #9
   15710:	push	{r4, r5, r6, lr}
   15714:	mov	r4, r0
   15718:	ldr	r0, [r0, #4]
   1571c:	mov	r5, r1
   15720:	mov	r6, r2
   15724:	bl	15050 <ftello64@plt+0x3924>
   15728:	cmp	r0, #0
   1572c:	bne	15740 <ftello64@plt+0x4014>
   15730:	mov	r0, r4
   15734:	ldr	r1, [pc, #28]	; 15758 <ftello64@plt+0x402c>
   15738:	pop	{r4, r5, r6, lr}
   1573c:	b	1367c <ftello64@plt+0x1f50>
   15740:	ldr	r3, [r0, #80]	; 0x50
   15744:	mov	r2, r6
   15748:	mov	r1, r5
   1574c:	mov	r0, r4
   15750:	pop	{r4, r5, r6, lr}
   15754:	b	139a8 <ftello64@plt+0x227c>
   15758:	ldrdeq	lr, [r1], -r9
   1575c:	push	{r4, r5, r6, lr}
   15760:	mov	r4, r0
   15764:	ldr	r0, [r0, #4]
   15768:	mov	r5, r1
   1576c:	mov	r6, r2
   15770:	bl	15050 <ftello64@plt+0x3924>
   15774:	cmp	r0, #0
   15778:	bne	1578c <ftello64@plt+0x4060>
   1577c:	mov	r0, r4
   15780:	ldr	r1, [pc, #28]	; 157a4 <ftello64@plt+0x4078>
   15784:	pop	{r4, r5, r6, lr}
   15788:	b	1367c <ftello64@plt+0x1f50>
   1578c:	ldr	r3, [r0, #84]	; 0x54
   15790:	mov	r2, r6
   15794:	mov	r1, r5
   15798:	mov	r0, r4
   1579c:	pop	{r4, r5, r6, lr}
   157a0:	b	139a8 <ftello64@plt+0x227c>
   157a4:	strdeq	lr, [r1], -r1
   157a8:	push	{r4, r5, r6, lr}
   157ac:	mov	r4, r0
   157b0:	ldr	r0, [r0, #4]
   157b4:	mov	r5, r1
   157b8:	mov	r6, r2
   157bc:	bl	15050 <ftello64@plt+0x3924>
   157c0:	cmp	r0, #0
   157c4:	bne	157d8 <ftello64@plt+0x40ac>
   157c8:	mov	r0, r4
   157cc:	ldr	r1, [pc, #28]	; 157f0 <ftello64@plt+0x40c4>
   157d0:	pop	{r4, r5, r6, lr}
   157d4:	b	1367c <ftello64@plt+0x1f50>
   157d8:	ldr	r3, [r0, #88]	; 0x58
   157dc:	mov	r2, r6
   157e0:	mov	r1, r5
   157e4:	mov	r0, r4
   157e8:	pop	{r4, r5, r6, lr}
   157ec:	b	139a8 <ftello64@plt+0x227c>
   157f0:	andeq	lr, r1, fp, lsl #10
   157f4:	push	{r4, r5, r6, lr}
   157f8:	mov	r4, r0
   157fc:	ldr	r0, [r0, #4]
   15800:	mov	r5, r1
   15804:	mov	r6, r2
   15808:	bl	15050 <ftello64@plt+0x3924>
   1580c:	cmp	r0, #0
   15810:	bne	15824 <ftello64@plt+0x40f8>
   15814:	mov	r0, r4
   15818:	ldr	r1, [pc, #28]	; 1583c <ftello64@plt+0x4110>
   1581c:	pop	{r4, r5, r6, lr}
   15820:	b	1367c <ftello64@plt+0x1f50>
   15824:	ldr	r3, [r0, #92]	; 0x5c
   15828:	mov	r2, r6
   1582c:	mov	r1, r5
   15830:	mov	r0, r4
   15834:	pop	{r4, r5, r6, lr}
   15838:	b	139a8 <ftello64@plt+0x227c>
   1583c:	andeq	lr, r1, r4, lsr #10
   15840:	push	{r4, r5, r6, lr}
   15844:	mov	r4, r0
   15848:	ldr	r0, [r0, #4]
   1584c:	mov	r5, r1
   15850:	mov	r6, r2
   15854:	bl	15050 <ftello64@plt+0x3924>
   15858:	cmp	r0, #0
   1585c:	bne	15870 <ftello64@plt+0x4144>
   15860:	mov	r0, r4
   15864:	ldr	r1, [pc, #28]	; 15888 <ftello64@plt+0x415c>
   15868:	pop	{r4, r5, r6, lr}
   1586c:	b	1367c <ftello64@plt+0x1f50>
   15870:	ldr	r3, [r0, #96]	; 0x60
   15874:	mov	r2, r6
   15878:	mov	r1, r5
   1587c:	mov	r0, r4
   15880:	pop	{r4, r5, r6, lr}
   15884:	b	139a8 <ftello64@plt+0x227c>
   15888:	andeq	lr, r1, pc, lsr r5
   1588c:	push	{r4, r5, r6, lr}
   15890:	mov	r4, r0
   15894:	ldr	r0, [r0, #4]
   15898:	mov	r5, r1
   1589c:	mov	r6, r2
   158a0:	bl	15050 <ftello64@plt+0x3924>
   158a4:	cmp	r0, #0
   158a8:	bne	158bc <ftello64@plt+0x4190>
   158ac:	mov	r0, r4
   158b0:	ldr	r1, [pc, #28]	; 158d4 <ftello64@plt+0x41a8>
   158b4:	pop	{r4, r5, r6, lr}
   158b8:	b	1367c <ftello64@plt+0x1f50>
   158bc:	ldr	r3, [r0, #100]	; 0x64
   158c0:	mov	r2, r6
   158c4:	mov	r1, r5
   158c8:	mov	r0, r4
   158cc:	pop	{r4, r5, r6, lr}
   158d0:	b	139a8 <ftello64@plt+0x227c>
   158d4:	andeq	lr, r1, fp, asr r5
   158d8:	push	{r4, r5, r6, lr}
   158dc:	mov	r4, r0
   158e0:	ldr	r0, [r0, #4]
   158e4:	mov	r5, r1
   158e8:	mov	r6, r2
   158ec:	bl	15050 <ftello64@plt+0x3924>
   158f0:	cmp	r0, #0
   158f4:	bne	15908 <ftello64@plt+0x41dc>
   158f8:	mov	r0, r4
   158fc:	ldr	r1, [pc, #28]	; 15920 <ftello64@plt+0x41f4>
   15900:	pop	{r4, r5, r6, lr}
   15904:	b	1367c <ftello64@plt+0x1f50>
   15908:	ldr	r3, [r0, #104]	; 0x68
   1590c:	mov	r2, r6
   15910:	mov	r1, r5
   15914:	mov	r0, r4
   15918:	pop	{r4, r5, r6, lr}
   1591c:	b	139a8 <ftello64@plt+0x227c>
   15920:	andeq	lr, r1, r7, ror r5
   15924:	push	{r4, r5, r6, lr}
   15928:	mov	r4, r0
   1592c:	ldr	r0, [r0, #4]
   15930:	mov	r5, r1
   15934:	mov	r6, r2
   15938:	bl	15050 <ftello64@plt+0x3924>
   1593c:	cmp	r0, #0
   15940:	bne	15954 <ftello64@plt+0x4228>
   15944:	mov	r0, r4
   15948:	ldr	r1, [pc, #28]	; 1596c <ftello64@plt+0x4240>
   1594c:	pop	{r4, r5, r6, lr}
   15950:	b	1367c <ftello64@plt+0x1f50>
   15954:	ldr	r3, [r0, #108]	; 0x6c
   15958:	mov	r2, r6
   1595c:	mov	r1, r5
   15960:	mov	r0, r4
   15964:	pop	{r4, r5, r6, lr}
   15968:	b	139a8 <ftello64@plt+0x227c>
   1596c:	muleq	r1, r0, r5
   15970:	push	{r4, r5, r6, lr}
   15974:	mov	r4, r0
   15978:	ldr	r0, [r0, #4]
   1597c:	mov	r5, r1
   15980:	mov	r6, r2
   15984:	bl	15050 <ftello64@plt+0x3924>
   15988:	cmp	r0, #0
   1598c:	bne	159a0 <ftello64@plt+0x4274>
   15990:	mov	r0, r4
   15994:	ldr	r1, [pc, #28]	; 159b8 <ftello64@plt+0x428c>
   15998:	pop	{r4, r5, r6, lr}
   1599c:	b	1367c <ftello64@plt+0x1f50>
   159a0:	ldr	r3, [r0, #112]	; 0x70
   159a4:	mov	r2, r6
   159a8:	mov	r1, r5
   159ac:	mov	r0, r4
   159b0:	pop	{r4, r5, r6, lr}
   159b4:	b	139a8 <ftello64@plt+0x227c>
   159b8:	andeq	lr, r1, lr, lsr #11
   159bc:	push	{r4, r5, r6, lr}
   159c0:	mov	r4, r0
   159c4:	mov	r5, r1
   159c8:	mov	r6, r2
   159cc:	ldr	r1, [pc, #88]	; 15a2c <ftello64@plt+0x4300>
   159d0:	ldr	r2, [r0, #4]
   159d4:	ldr	r0, [r0, #8]
   159d8:	bl	172d8 <argp_parse@@Base+0xb90>
   159dc:	cmp	r0, #0
   159e0:	bge	159f8 <ftello64@plt+0x42cc>
   159e4:	mov	r3, #1
   159e8:	mov	r2, r6
   159ec:	mov	r1, r5
   159f0:	mov	r0, r4
   159f4:	bl	142ec <ftello64@plt+0x2bc0>
   159f8:	ldr	r3, [r4, #4]
   159fc:	ldrh	r0, [r3, #16]
   15a00:	bl	1501c <ftello64@plt+0x38f0>
   15a04:	mov	r2, r6
   15a08:	mov	r1, r5
   15a0c:	cmp	r0, #0
   15a10:	moveq	r3, #1
   15a14:	ldrne	r3, [r0, #12]
   15a18:	mov	r0, r4
   15a1c:	clzne	r3, r3
   15a20:	pop	{r4, r5, r6, lr}
   15a24:	lsrne	r3, r3, #5
   15a28:	b	142ec <ftello64@plt+0x2bc0>
   15a2c:	andeq	r8, r0, r7, lsr #18
   15a30:	push	{r4, lr}
   15a34:	mov	r4, r0
   15a38:	ldr	r2, [r0, #4]
   15a3c:	ldr	r1, [pc, #104]	; 15aac <ftello64@plt+0x4380>
   15a40:	ldr	r0, [r0, #8]
   15a44:	bl	172d8 <argp_parse@@Base+0xb90>
   15a48:	cmp	r0, #0
   15a4c:	bge	15a6c <ftello64@plt+0x4340>
   15a50:	bl	11594 <__errno_location@plt>
   15a54:	ldr	r3, [r4, #4]
   15a58:	ldr	r2, [pc, #80]	; 15ab0 <ftello64@plt+0x4384>
   15a5c:	pop	{r4, lr}
   15a60:	ldr	r1, [r0]
   15a64:	mov	r0, #1
   15a68:	b	114d4 <error@plt>
   15a6c:	ldr	r1, [r4, #4]
   15a70:	ldrh	r0, [r1, #16]
   15a74:	bl	1501c <ftello64@plt+0x38f0>
   15a78:	cmp	r0, #0
   15a7c:	beq	15a9c <ftello64@plt+0x4370>
   15a80:	ldr	r3, [r0, #12]
   15a84:	cmp	r3, #0
   15a88:	beq	15a9c <ftello64@plt+0x4370>
   15a8c:	mov	r0, r4
   15a90:	add	r1, r1, #18
   15a94:	pop	{r4, lr}
   15a98:	bx	r3
   15a9c:	mov	r0, r4
   15aa0:	ldr	r1, [pc, #12]	; 15ab4 <ftello64@plt+0x4388>
   15aa4:	pop	{r4, lr}
   15aa8:	b	1367c <ftello64@plt+0x1f50>
   15aac:	andeq	r8, r0, r7, lsr #18
   15ab0:	andeq	lr, r1, r9, asr #11
   15ab4:	strdeq	lr, [r1], -r1
   15ab8:	push	{r4, r5, r6, lr}
   15abc:	mov	r4, r0
   15ac0:	mov	r5, r1
   15ac4:	mov	r6, r2
   15ac8:	ldr	r1, [pc, #40]	; 15af8 <ftello64@plt+0x43cc>
   15acc:	ldr	r2, [r0, #4]
   15ad0:	ldr	r0, [r0, #8]
   15ad4:	bl	172d8 <argp_parse@@Base+0xb90>
   15ad8:	mov	r2, r6
   15adc:	mov	r1, r5
   15ae0:	cmp	r0, #0
   15ae4:	movge	r3, #0
   15ae8:	mov	r0, r4
   15aec:	movlt	r3, #1
   15af0:	pop	{r4, r5, r6, lr}
   15af4:	b	142ec <ftello64@plt+0x2bc0>
   15af8:	andeq	r8, r0, r7, lsr #18
   15afc:	push	{r4, lr}
   15b00:	mov	r4, r0
   15b04:	ldr	r2, [r0, #4]
   15b08:	ldr	r1, [pc, #76]	; 15b5c <ftello64@plt+0x4430>
   15b0c:	ldr	r0, [r0, #8]
   15b10:	bl	172d8 <argp_parse@@Base+0xb90>
   15b14:	cmp	r0, #0
   15b18:	bge	15b38 <ftello64@plt+0x440c>
   15b1c:	bl	11594 <__errno_location@plt>
   15b20:	ldr	r3, [r4, #4]
   15b24:	ldr	r2, [pc, #52]	; 15b60 <ftello64@plt+0x4434>
   15b28:	pop	{r4, lr}
   15b2c:	ldr	r1, [r0]
   15b30:	mov	r0, #1
   15b34:	b	114d4 <error@plt>
   15b38:	ldr	r3, [r4, #4]
   15b3c:	ldrh	r0, [r3, #16]
   15b40:	bl	1501c <ftello64@plt+0x38f0>
   15b44:	cmp	r0, #0
   15b48:	ldrne	r1, [r0, #4]
   15b4c:	ldreq	r1, [pc, #16]	; 15b64 <ftello64@plt+0x4438>
   15b50:	mov	r0, r4
   15b54:	pop	{r4, lr}
   15b58:	b	1367c <ftello64@plt+0x1f50>
   15b5c:	andeq	r8, r0, r7, lsr #18
   15b60:	andeq	lr, r1, r9, asr #11
   15b64:	andeq	lr, r1, r2, lsl #12
   15b68:	push	{r4, r5, r6, lr}
   15b6c:	mov	r4, r0
   15b70:	mov	r5, r1
   15b74:	mov	r6, r2
   15b78:	ldr	r1, [pc, #40]	; 15ba8 <ftello64@plt+0x447c>
   15b7c:	ldr	r2, [r0, #4]
   15b80:	ldr	r0, [r0, #8]
   15b84:	bl	172d8 <argp_parse@@Base+0xb90>
   15b88:	mov	r2, r6
   15b8c:	mov	r1, r5
   15b90:	cmp	r0, #0
   15b94:	movge	r3, #0
   15b98:	mov	r0, r4
   15b9c:	movlt	r3, #1
   15ba0:	pop	{r4, r5, r6, lr}
   15ba4:	b	142ec <ftello64@plt+0x2bc0>
   15ba8:	andeq	r8, r0, sp, lsl r9
   15bac:	push	{r4, r5, r6, lr}
   15bb0:	mov	r4, r0
   15bb4:	mov	r5, r1
   15bb8:	mov	r6, r2
   15bbc:	ldr	r1, [pc, #80]	; 15c14 <ftello64@plt+0x44e8>
   15bc0:	ldr	r2, [r0, #4]
   15bc4:	ldr	r0, [r0, #8]
   15bc8:	bl	172d8 <argp_parse@@Base+0xb90>
   15bcc:	cmp	r0, #0
   15bd0:	bge	15bf0 <ftello64@plt+0x44c4>
   15bd4:	bl	11594 <__errno_location@plt>
   15bd8:	ldr	r3, [r4, #4]
   15bdc:	ldr	r2, [pc, #52]	; 15c18 <ftello64@plt+0x44ec>
   15be0:	pop	{r4, r5, r6, lr}
   15be4:	ldr	r1, [r0]
   15be8:	mov	r0, #1
   15bec:	b	114d4 <error@plt>
   15bf0:	ldr	r3, [r4, #4]
   15bf4:	mov	r2, r6
   15bf8:	mov	r1, r5
   15bfc:	ldr	r3, [r3, #16]
   15c00:	mov	r0, r4
   15c04:	cmp	r3, #0
   15c08:	moveq	r3, #1
   15c0c:	pop	{r4, r5, r6, lr}
   15c10:	b	13774 <ftello64@plt+0x2048>
   15c14:	andeq	r8, r0, sp, lsl r9
   15c18:	andeq	sp, r1, pc, lsr pc
   15c1c:	push	{r4, r5, r6, lr}
   15c20:	mov	r4, r0
   15c24:	mov	r5, r1
   15c28:	mov	r6, r2
   15c2c:	ldr	r1, [pc, #48]	; 15c64 <ftello64@plt+0x4538>
   15c30:	ldr	r2, [r0, #4]
   15c34:	ldr	r0, [r0, #8]
   15c38:	bl	172d8 <argp_parse@@Base+0xb90>
   15c3c:	mov	r2, r6
   15c40:	mov	r1, r5
   15c44:	cmp	r0, #0
   15c48:	movlt	r3, #1
   15c4c:	ldrge	r3, [r4, #4]
   15c50:	mov	r0, r4
   15c54:	pop	{r4, r5, r6, lr}
   15c58:	ldrge	r3, [r3, #16]
   15c5c:	lsrge	r3, r3, #31
   15c60:	b	142ec <ftello64@plt+0x2bc0>
   15c64:	andeq	r8, r0, r2, asr #18
   15c68:	push	{r4, r5, r6, lr}
   15c6c:	mov	r4, r0
   15c70:	mov	r5, r1
   15c74:	mov	r6, r2
   15c78:	ldr	r1, [pc, #72]	; 15cc8 <ftello64@plt+0x459c>
   15c7c:	ldr	r2, [r0, #4]
   15c80:	ldr	r0, [r0, #8]
   15c84:	bl	172d8 <argp_parse@@Base+0xb90>
   15c88:	cmp	r0, #0
   15c8c:	bge	15cac <ftello64@plt+0x4580>
   15c90:	bl	11594 <__errno_location@plt>
   15c94:	ldr	r3, [r4, #4]
   15c98:	ldr	r2, [pc, #44]	; 15ccc <ftello64@plt+0x45a0>
   15c9c:	pop	{r4, r5, r6, lr}
   15ca0:	ldr	r1, [r0]
   15ca4:	mov	r0, #1
   15ca8:	b	114d4 <error@plt>
   15cac:	ldr	r3, [r4, #4]
   15cb0:	mov	r2, r6
   15cb4:	mov	r1, r5
   15cb8:	mov	r0, r4
   15cbc:	ldr	r3, [r3, #16]
   15cc0:	pop	{r4, r5, r6, lr}
   15cc4:	b	13774 <ftello64@plt+0x2048>
   15cc8:	andeq	r8, r0, r2, asr #18
   15ccc:	andeq	lr, r1, r3, lsl r6
   15cd0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   15cd4:	subs	r4, r0, #0
   15cd8:	mov	r5, r1
   15cdc:	bne	15cf4 <ftello64@plt+0x45c8>
   15ce0:	mov	r3, r1
   15ce4:	ldr	r2, [pc, #224]	; 15dcc <ftello64@plt+0x46a0>
   15ce8:	mov	r1, r4
   15cec:	mov	r0, #1
   15cf0:	bl	114d4 <error@plt>
   15cf4:	ldr	r3, [r4, #4]
   15cf8:	tst	r3, #1
   15cfc:	bne	15d40 <ftello64@plt+0x4614>
   15d00:	mov	r0, #8
   15d04:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   15d08:	cmp	r0, #0
   15d0c:	str	r0, [r4, #8]
   15d10:	bne	15d28 <ftello64@plt+0x45fc>
   15d14:	bl	11594 <__errno_location@plt>
   15d18:	ldr	r2, [pc, #176]	; 15dd0 <ftello64@plt+0x46a4>
   15d1c:	ldr	r1, [r0]
   15d20:	mov	r0, #1
   15d24:	bl	114d4 <error@plt>
   15d28:	ldr	r3, [r4, #8]
   15d2c:	mov	r2, #0
   15d30:	str	r2, [r3]
   15d34:	ldr	r3, [r4, #4]
   15d38:	orr	r3, r3, #1
   15d3c:	str	r3, [r4, #4]
   15d40:	ldr	r3, [r4, #8]
   15d44:	ldr	r3, [r3]
   15d48:	tst	r3, #1
   15d4c:	beq	15d64 <ftello64@plt+0x4638>
   15d50:	ldr	r3, [r4]
   15d54:	ldr	r2, [pc, #120]	; 15dd4 <ftello64@plt+0x46a8>
   15d58:	mov	r1, #0
   15d5c:	mov	r0, #1
   15d60:	bl	114d4 <error@plt>
   15d64:	mov	r2, #0
   15d68:	add	r1, sp, #12
   15d6c:	mov	r0, r5
   15d70:	ldr	r6, [r4, #8]
   15d74:	bl	113e4 <strtol@plt>
   15d78:	str	r0, [r6, #4]
   15d7c:	ldrb	r3, [r5]
   15d80:	cmp	r3, #0
   15d84:	beq	15d98 <ftello64@plt+0x466c>
   15d88:	ldr	r3, [sp, #12]
   15d8c:	ldrb	r3, [r3]
   15d90:	cmp	r3, #0
   15d94:	beq	15db4 <ftello64@plt+0x4688>
   15d98:	ldr	r3, [r4]
   15d9c:	ldr	r2, [pc, #52]	; 15dd8 <ftello64@plt+0x46ac>
   15da0:	str	r3, [sp]
   15da4:	mov	r1, #0
   15da8:	mov	r3, r5
   15dac:	mov	r0, #1
   15db0:	bl	114d4 <error@plt>
   15db4:	ldr	r2, [r4, #8]
   15db8:	ldr	r3, [r2]
   15dbc:	orr	r3, r3, #1
   15dc0:	str	r3, [r2]
   15dc4:	add	sp, sp, #16
   15dc8:	pop	{r4, r5, r6, pc}
   15dcc:	andeq	lr, r1, fp, lsr r6
   15dd0:	andeq	lr, r1, r2, ror #12
   15dd4:	muleq	r1, r6, r6
   15dd8:	andeq	lr, r1, r1, asr #13
   15ddc:	cmp	r0, #84	; 0x54
   15de0:	bne	15dfc <ftello64@plt+0x46d0>
   15de4:	ldr	r3, [r2, #28]
   15de8:	push	{r4, lr}
   15dec:	ldr	r0, [r3]
   15df0:	bl	15cd0 <ftello64@plt+0x45a4>
   15df4:	mov	r0, #0
   15df8:	pop	{r4, pc}
   15dfc:	mov	r0, #7
   15e00:	bx	lr
   15e04:	cmp	r1, #84	; 0x54
   15e08:	bne	15e24 <ftello64@plt+0x46f8>
   15e0c:	push	{r4, lr}
   15e10:	mov	r1, r2
   15e14:	ldr	r0, [r0]
   15e18:	bl	15cd0 <ftello64@plt+0x45a4>
   15e1c:	mov	r0, #1
   15e20:	pop	{r4, pc}
   15e24:	mov	r0, #0
   15e28:	bx	lr
   15e2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e30:	mov	r4, r2
   15e34:	mov	r6, r0
   15e38:	ldr	r0, [r4], #4
   15e3c:	mov	r8, r1
   15e40:	bl	127e4 <ftello64@plt+0x10b8>
   15e44:	ldr	r9, [pc, #744]	; 16134 <ftello64@plt+0x4a08>
   15e48:	mov	r3, #0
   15e4c:	mov	r7, r3
   15e50:	mov	sl, #2
   15e54:	str	r0, [r6]
   15e58:	add	r7, r7, #1
   15e5c:	cmp	r7, r8
   15e60:	blt	15e90 <ftello64@plt+0x4764>
   15e64:	sub	r3, r3, #2
   15e68:	cmp	r3, #6
   15e6c:	ldrls	pc, [pc, r3, lsl #2]
   15e70:	b	1612c <ftello64@plt+0x4a00>
   15e74:	andeq	r6, r1, r4, ror #1
   15e78:	strdeq	r6, [r1], -ip
   15e7c:	andeq	r6, r1, r4, lsl #2
   15e80:	andeq	r6, r1, ip, lsl #2
   15e84:	andeq	r6, r1, ip, lsl r1
   15e88:	andeq	r6, r1, r4, lsl r1
   15e8c:	andeq	r6, r1, r4, lsr #2
   15e90:	cmp	r3, #8
   15e94:	ldrls	pc, [pc, r3, lsl #2]
   15e98:	b	15f80 <ftello64@plt+0x4854>
   15e9c:	andeq	r5, r1, r8, lsr pc
   15ea0:	andeq	r5, r1, r0, lsl #31
   15ea4:	andeq	r5, r1, r0, asr #29
   15ea8:	ldrdeq	r5, [r1], -r8
   15eac:	andeq	r5, r1, r8, ror #29
   15eb0:	strdeq	r5, [r1], -r8
   15eb4:	andeq	r5, r1, r8, lsl #30
   15eb8:	andeq	r5, r1, r8, lsl pc
   15ebc:	andeq	r5, r1, r8, lsr #30
   15ec0:	ldr	r1, [r4]
   15ec4:	ldr	r0, [r6]
   15ec8:	bl	129f8 <ftello64@plt+0x12cc>
   15ecc:	mov	r3, #1
   15ed0:	add	r4, r4, #4
   15ed4:	b	15e58 <ftello64@plt+0x472c>
   15ed8:	ldr	r1, [r4]
   15edc:	ldr	r0, [r6]
   15ee0:	bl	12de8 <ftello64@plt+0x16bc>
   15ee4:	b	15ecc <ftello64@plt+0x47a0>
   15ee8:	ldr	r1, [r4]
   15eec:	ldr	r0, [r6]
   15ef0:	bl	12910 <ftello64@plt+0x11e4>
   15ef4:	b	15ecc <ftello64@plt+0x47a0>
   15ef8:	ldr	r1, [r4]
   15efc:	ldr	r0, [r6]
   15f00:	bl	12a6c <ftello64@plt+0x1340>
   15f04:	b	15ecc <ftello64@plt+0x47a0>
   15f08:	ldr	r1, [r4]
   15f0c:	ldr	r0, [r6]
   15f10:	bl	12ae0 <ftello64@plt+0x13b4>
   15f14:	b	15ecc <ftello64@plt+0x47a0>
   15f18:	ldr	r1, [r4]
   15f1c:	ldr	r0, [r6]
   15f20:	bl	12ba4 <ftello64@plt+0x1478>
   15f24:	b	15ecc <ftello64@plt+0x47a0>
   15f28:	ldr	r1, [r4]
   15f2c:	ldr	r0, [r6]
   15f30:	bl	15cd0 <ftello64@plt+0x45a4>
   15f34:	b	15ecc <ftello64@plt+0x47a0>
   15f38:	ldr	fp, [r4]
   15f3c:	ldr	r1, [pc, #500]	; 16138 <ftello64@plt+0x4a0c>
   15f40:	mov	r0, fp
   15f44:	bl	113d8 <strcmp@plt>
   15f48:	cmp	r0, #0
   15f4c:	beq	15ecc <ftello64@plt+0x47a0>
   15f50:	ldr	r1, [pc, #484]	; 1613c <ftello64@plt+0x4a10>
   15f54:	mov	r0, fp
   15f58:	bl	113d8 <strcmp@plt>
   15f5c:	subs	r5, r0, #0
   15f60:	bne	15f88 <ftello64@plt+0x485c>
   15f64:	mov	r3, fp
   15f68:	ldr	r2, [pc, #464]	; 16140 <ftello64@plt+0x4a14>
   15f6c:	mov	r1, r5
   15f70:	bl	114d4 <error@plt>
   15f74:	mov	r0, r5
   15f78:	add	sp, sp, #12
   15f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f80:	cmp	r3, #1
   15f84:	bne	15ecc <ftello64@plt+0x47a0>
   15f88:	ldr	r5, [r4]
   15f8c:	mov	r1, r9
   15f90:	mov	r0, r5
   15f94:	bl	113d8 <strcmp@plt>
   15f98:	cmp	r0, #0
   15f9c:	moveq	r3, sl
   15fa0:	beq	15ed0 <ftello64@plt+0x47a4>
   15fa4:	ldr	r1, [pc, #408]	; 16144 <ftello64@plt+0x4a18>
   15fa8:	mov	r0, r5
   15fac:	bl	113d8 <strcmp@plt>
   15fb0:	cmp	r0, #0
   15fb4:	beq	160d4 <ftello64@plt+0x49a8>
   15fb8:	ldr	r1, [pc, #392]	; 16148 <ftello64@plt+0x4a1c>
   15fbc:	mov	r0, r5
   15fc0:	bl	113d8 <strcmp@plt>
   15fc4:	cmp	r0, #0
   15fc8:	beq	160d4 <ftello64@plt+0x49a8>
   15fcc:	ldr	r1, [pc, #376]	; 1614c <ftello64@plt+0x4a20>
   15fd0:	mov	r0, r5
   15fd4:	bl	113d8 <strcmp@plt>
   15fd8:	cmp	r0, #0
   15fdc:	moveq	r3, #4
   15fe0:	beq	15ed0 <ftello64@plt+0x47a4>
   15fe4:	ldr	r1, [pc, #356]	; 16150 <ftello64@plt+0x4a24>
   15fe8:	mov	r0, r5
   15fec:	bl	113d8 <strcmp@plt>
   15ff0:	cmp	r0, #0
   15ff4:	beq	160dc <ftello64@plt+0x49b0>
   15ff8:	ldr	r1, [pc, #340]	; 16154 <ftello64@plt+0x4a28>
   15ffc:	mov	r0, r5
   16000:	bl	113d8 <strcmp@plt>
   16004:	cmp	r0, #0
   16008:	beq	160dc <ftello64@plt+0x49b0>
   1600c:	ldr	r1, [pc, #324]	; 16158 <ftello64@plt+0x4a2c>
   16010:	mov	r0, r5
   16014:	bl	113d8 <strcmp@plt>
   16018:	cmp	r0, #0
   1601c:	beq	160dc <ftello64@plt+0x49b0>
   16020:	ldr	r1, [pc, #308]	; 1615c <ftello64@plt+0x4a30>
   16024:	mov	r0, r5
   16028:	bl	113d8 <strcmp@plt>
   1602c:	cmp	r0, #0
   16030:	moveq	r3, #7
   16034:	beq	15ed0 <ftello64@plt+0x47a4>
   16038:	ldr	r1, [pc, #288]	; 16160 <ftello64@plt+0x4a34>
   1603c:	mov	r0, r5
   16040:	bl	113d8 <strcmp@plt>
   16044:	cmp	r0, #0
   16048:	moveq	r3, #6
   1604c:	beq	15ed0 <ftello64@plt+0x47a4>
   16050:	ldr	r1, [pc, #268]	; 16164 <ftello64@plt+0x4a38>
   16054:	mov	r0, r5
   16058:	bl	113d8 <strcmp@plt>
   1605c:	cmp	r0, #0
   16060:	moveq	r3, #8
   16064:	beq	15ed0 <ftello64@plt+0x47a4>
   16068:	ldr	r1, [pc, #248]	; 16168 <ftello64@plt+0x4a3c>
   1606c:	mov	r0, r5
   16070:	bl	113d8 <strcmp@plt>
   16074:	subs	r2, r0, #0
   16078:	moveq	r1, #65	; 0x41
   1607c:	beq	1609c <ftello64@plt+0x4970>
   16080:	ldr	r1, [pc, #228]	; 1616c <ftello64@plt+0x4a40>
   16084:	mov	r0, r5
   16088:	bl	113d8 <strcmp@plt>
   1608c:	cmp	r0, #0
   16090:	bne	160a8 <ftello64@plt+0x497c>
   16094:	mov	r2, #1
   16098:	mov	r1, r2
   1609c:	ldr	r0, [r6]
   160a0:	bl	12ce4 <ftello64@plt+0x15b8>
   160a4:	b	15ecc <ftello64@plt+0x47a0>
   160a8:	add	r1, sp, #4
   160ac:	mov	r0, r5
   160b0:	bl	11cc8 <ftello64@plt+0x59c>
   160b4:	bics	r3, r0, #72	; 0x48
   160b8:	mov	r1, r0
   160bc:	ldrne	r2, [sp, #4]
   160c0:	bne	1609c <ftello64@plt+0x4970>
   160c4:	ldr	r1, [r4]
   160c8:	ldr	r0, [r6]
   160cc:	bl	1289c <ftello64@plt+0x1170>
   160d0:	b	15ecc <ftello64@plt+0x47a0>
   160d4:	mov	r3, #3
   160d8:	b	15ed0 <ftello64@plt+0x47a4>
   160dc:	mov	r3, #5
   160e0:	b	15ed0 <ftello64@plt+0x47a4>
   160e4:	ldr	r2, [pc, #132]	; 16170 <ftello64@plt+0x4a44>
   160e8:	mov	r1, #0
   160ec:	mov	r0, r1
   160f0:	bl	114d4 <error@plt>
   160f4:	mov	r5, #0
   160f8:	b	15f74 <ftello64@plt+0x4848>
   160fc:	ldr	r2, [pc, #112]	; 16174 <ftello64@plt+0x4a48>
   16100:	b	160e8 <ftello64@plt+0x49bc>
   16104:	ldr	r2, [pc, #108]	; 16178 <ftello64@plt+0x4a4c>
   16108:	b	160e8 <ftello64@plt+0x49bc>
   1610c:	ldr	r2, [pc, #104]	; 1617c <ftello64@plt+0x4a50>
   16110:	b	160e8 <ftello64@plt+0x49bc>
   16114:	ldr	r2, [pc, #100]	; 16180 <ftello64@plt+0x4a54>
   16118:	b	160e8 <ftello64@plt+0x49bc>
   1611c:	ldr	r2, [pc, #96]	; 16184 <ftello64@plt+0x4a58>
   16120:	b	160e8 <ftello64@plt+0x49bc>
   16124:	ldr	r2, [pc, #92]	; 16188 <ftello64@plt+0x4a5c>
   16128:	b	160e8 <ftello64@plt+0x49bc>
   1612c:	mov	r5, #1
   16130:	b	15f74 <ftello64@plt+0x4848>
   16134:	andeq	ip, r1, r2, lsr #25
   16138:	andeq	ip, r1, r0, lsl #21
   1613c:	strdeq	lr, [r1], -r6
   16140:	strdeq	lr, [r1], -ip
   16144:	andeq	ip, r1, r8, ror #24
   16148:	andeq	lr, r1, r1, lsr #14
   1614c:	andeq	ip, r1, pc, lsr #19
   16150:	andeq	lr, r1, sp, lsr #14
   16154:	andeq	lr, r1, fp, rrx
   16158:	andeq	lr, r1, r3, lsr r7
   1615c:	andeq	ip, r1, sl, asr #25
   16160:	andeq	ip, r1, ip, lsr #25
   16164:	andeq	lr, r1, sl, lsr r7
   16168:	andeq	ip, r1, r2, lsr #26
   1616c:	andeq	ip, r1, pc, asr #26
   16170:	andeq	lr, r1, r5, asr #14
   16174:	andeq	lr, r1, sp, ror #14
   16178:	andeq	lr, r1, r3, lsr #15
   1617c:	andeq	lr, r1, r9, asr #15
   16180:	andeq	lr, r1, lr, ror #15
   16184:	andeq	lr, r1, r3, lsl r8
   16188:	andeq	lr, r1, r5, lsr r8
   1618c:	ldr	r3, [r2]
   16190:	tst	r3, #1
   16194:	beq	161f8 <ftello64@plt+0x4acc>
   16198:	ldr	r3, [r2, #4]
   1619c:	push	{r4, lr}
   161a0:	mov	r2, r1
   161a4:	str	r3, [r1, #16]
   161a8:	mov	r4, r1
   161ac:	ldr	r1, [pc, #76]	; 16200 <ftello64@plt+0x4ad4>
   161b0:	bl	172d8 <argp_parse@@Base+0xb90>
   161b4:	cmp	r0, #0
   161b8:	bge	161d0 <ftello64@plt+0x4aa4>
   161bc:	bl	11594 <__errno_location@plt>
   161c0:	ldr	r2, [pc, #60]	; 16204 <ftello64@plt+0x4ad8>
   161c4:	ldr	r1, [r0]
   161c8:	mov	r0, #0
   161cc:	bl	114d4 <error@plt>
   161d0:	ldr	r3, [pc, #48]	; 16208 <ftello64@plt+0x4adc>
   161d4:	ldr	r3, [r3]
   161d8:	cmp	r3, #0
   161dc:	beq	161f0 <ftello64@plt+0x4ac4>
   161e0:	ldr	r2, [r4, #16]
   161e4:	mov	r1, r4
   161e8:	ldr	r0, [pc, #28]	; 1620c <ftello64@plt+0x4ae0>
   161ec:	bl	113f0 <printf@plt>
   161f0:	mov	r0, #0
   161f4:	pop	{r4, pc}
   161f8:	mov	r0, #0
   161fc:	bx	lr
   16200:	andeq	r8, r0, r3, asr #18
   16204:	andeq	lr, r1, lr, asr r8
   16208:	andeq	r0, r3, r8, lsl #24
   1620c:	andeq	lr, r1, r3, ror r8
   16210:	push	{r4, r5, r6, lr}
   16214:	ldr	r6, [r0]
   16218:	cmp	r6, #0
   1621c:	beq	16268 <ftello64@plt+0x4b3c>
   16220:	mov	ip, r2
   16224:	ldr	r2, [r0, #32]
   16228:	mov	r5, r1
   1622c:	str	r2, [r1, #36]	; 0x24
   16230:	ldr	r2, [r0, #24]
   16234:	mov	r4, r0
   16238:	str	r2, [r1, #28]
   1623c:	ldr	r2, [r0, #28]
   16240:	str	r2, [r1, #32]
   16244:	ldr	r2, [r0, #12]
   16248:	mov	r0, ip
   1624c:	str	r2, [r1, #20]
   16250:	mov	r2, r1
   16254:	mov	r1, r3
   16258:	blx	r6
   1625c:	ldr	r3, [r5, #36]	; 0x24
   16260:	str	r3, [r4, #32]
   16264:	pop	{r4, r5, r6, pc}
   16268:	mov	r0, #7
   1626c:	pop	{r4, r5, r6, pc}
   16270:	ldr	r3, [r0]
   16274:	push	{r4, r5, r6, lr}
   16278:	cmp	r3, #0
   1627c:	ldr	r4, [r0, #16]
   16280:	bne	16290 <ftello64@plt+0x4b64>
   16284:	ldr	r2, [r0, #4]
   16288:	cmp	r2, #0
   1628c:	beq	162f8 <ftello64@plt+0x4bcc>
   16290:	ldr	r2, [r1, #8]
   16294:	cmp	r3, #0
   16298:	add	r2, r2, #1
   1629c:	str	r2, [r1, #8]
   162a0:	beq	162f8 <ftello64@plt+0x4bcc>
   162a4:	mov	r2, #0
   162a8:	add	r3, r3, #24
   162ac:	ldr	r0, [r3, #-20]	; 0xffffffec
   162b0:	cmp	r0, #0
   162b4:	bne	16334 <ftello64@plt+0x4c08>
   162b8:	ldr	r0, [r3, #-24]	; 0xffffffe8
   162bc:	cmp	r0, #0
   162c0:	bne	16334 <ftello64@plt+0x4c08>
   162c4:	ldr	r0, [r3, #-8]
   162c8:	cmp	r0, #0
   162cc:	bne	16334 <ftello64@plt+0x4c08>
   162d0:	ldr	r0, [r3, #-4]
   162d4:	cmp	r0, #0
   162d8:	bne	16334 <ftello64@plt+0x4c08>
   162dc:	ldr	r3, [r1]
   162e0:	add	r0, r2, r2, lsl #1
   162e4:	add	r3, r3, r0
   162e8:	str	r3, [r1]
   162ec:	ldr	r3, [r1, #4]
   162f0:	add	r2, r3, r2
   162f4:	str	r2, [r1, #4]
   162f8:	cmp	r4, #0
   162fc:	movne	r5, r1
   16300:	addne	r4, r4, #16
   16304:	bne	16320 <ftello64@plt+0x4bf4>
   16308:	pop	{r4, r5, r6, pc}
   1630c:	mov	r1, r5
   16310:	bl	16270 <ftello64@plt+0x4b44>
   16314:	ldr	r3, [r5, #12]
   16318:	add	r3, r3, #1
   1631c:	str	r3, [r5, #12]
   16320:	add	r4, r4, #16
   16324:	ldr	r0, [r4, #-32]	; 0xffffffe0
   16328:	cmp	r0, #0
   1632c:	bne	1630c <ftello64@plt+0x4be0>
   16330:	pop	{r4, r5, r6, pc}
   16334:	add	r2, r2, #1
   16338:	b	162a8 <ftello64@plt+0x4b7c>
   1633c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16340:	sub	sp, sp, #36	; 0x24
   16344:	ldr	r6, [r0]
   16348:	mov	r9, r0
   1634c:	cmp	r6, #0
   16350:	str	r1, [sp, #16]
   16354:	str	r2, [sp, #20]
   16358:	mov	r4, r3
   1635c:	ldr	r5, [sp, #72]	; 0x48
   16360:	ldr	sl, [r0, #16]
   16364:	addne	r7, r6, #24
   16368:	movne	fp, #0
   1636c:	bne	164e8 <ftello64@plt+0x4dbc>
   16370:	ldr	r6, [r0, #4]
   16374:	cmp	r6, #0
   16378:	beq	163dc <ftello64@plt+0x4cb0>
   1637c:	ldr	r3, [r9, #4]
   16380:	ldr	r2, [sp, #16]
   16384:	stm	r4, {r3, r9}
   16388:	ldr	r3, [r5, #4]
   1638c:	str	r2, [r4, #16]
   16390:	str	r3, [r4, #8]
   16394:	ldr	r2, [sp, #20]
   16398:	mov	r3, #0
   1639c:	cmp	sl, r3
   163a0:	str	r3, [r4, #12]
   163a4:	str	r2, [r4, #20]
   163a8:	str	r3, [r4, #24]
   163ac:	str	r3, [r4, #32]
   163b0:	str	r3, [r4, #28]
   163b4:	beq	163d4 <ftello64@plt+0x4ca8>
   163b8:	ldr	r2, [sl, r3, lsl #4]
   163bc:	cmp	r2, #0
   163c0:	bne	16544 <ftello64@plt+0x4e18>
   163c4:	ldr	r2, [r5, #12]
   163c8:	add	r3, r2, r3, lsl #2
   163cc:	str	r2, [r4, #28]
   163d0:	str	r3, [r5, #12]
   163d4:	mov	r6, r4
   163d8:	add	r4, r4, #36	; 0x24
   163dc:	cmp	sl, #0
   163e0:	movne	r2, #0
   163e4:	bne	16568 <ftello64@plt+0x4e3c>
   163e8:	mov	r0, r4
   163ec:	add	sp, sp, #36	; 0x24
   163f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163f4:	tst	r2, #8
   163f8:	bne	16420 <ftello64@plt+0x4cf4>
   163fc:	sub	r3, r8, #1
   16400:	cmp	r3, #254	; 0xfe
   16404:	bhi	16420 <ftello64@plt+0x4cf4>
   16408:	bl	1154c <__ctype_b_loc@plt>
   1640c:	lsl	r3, r8, #1
   16410:	ldr	r2, [r0]
   16414:	ldrh	r3, [r2, r3]
   16418:	tst	r3, #16384	; 0x4000
   1641c:	bne	16578 <ftello64@plt+0x4e4c>
   16420:	ldr	r3, [r7, #-24]	; 0xffffffe8
   16424:	cmp	r3, #0
   16428:	beq	164e4 <ftello64@plt+0x4db8>
   1642c:	ldr	r2, [r5]
   16430:	str	r2, [sp, #12]
   16434:	ldr	r2, [r2, #8]
   16438:	mov	r8, r2
   1643c:	ldr	r0, [r8]
   16440:	cmp	r0, #0
   16444:	beq	16474 <ftello64@plt+0x4d48>
   16448:	mov	r1, r3
   1644c:	str	r2, [sp, #28]
   16450:	str	r3, [sp, #24]
   16454:	bl	113d8 <strcmp@plt>
   16458:	ldr	r3, [sp, #24]
   1645c:	ldr	r2, [sp, #28]
   16460:	cmp	r0, #0
   16464:	bne	1653c <ftello64@plt+0x4e10>
   16468:	sub	r8, r8, r2
   1646c:	cmn	r8, #15
   16470:	bge	164e4 <ftello64@plt+0x4db8>
   16474:	ldr	r1, [r5, #8]
   16478:	str	r3, [r1]
   1647c:	ldr	r3, [r6, #8]
   16480:	cmp	r3, #0
   16484:	beq	1649c <ftello64@plt+0x4d70>
   16488:	ldr	r3, [r6, #12]
   1648c:	tst	r3, #1
   16490:	movne	r3, #2
   16494:	moveq	r3, #1
   16498:	str	r3, [sp, #8]
   1649c:	ldr	r2, [sp, #12]
   164a0:	ldr	r3, [sp, #8]
   164a4:	ldr	r0, [pc, #292]	; 165d0 <ftello64@plt+0x4ea4>
   164a8:	ldr	r2, [r2, #48]	; 0x30
   164ac:	stmib	r1, {r3, fp}
   164b0:	sub	r2, r4, r2
   164b4:	ldr	r3, [r7, #-20]	; 0xffffffec
   164b8:	asr	r2, r2, #2
   164bc:	cmp	r3, #0
   164c0:	mul	r2, r0, r2
   164c4:	ldreq	r3, [r6, #4]
   164c8:	add	r2, r2, #1
   164cc:	bic	r3, r3, #-16777216	; 0xff000000
   164d0:	add	r3, r3, r2, lsl #24
   164d4:	str	r3, [r1, #12]
   164d8:	add	r3, r1, #16
   164dc:	str	r3, [r5, #8]
   164e0:	str	fp, [r1, #16]
   164e4:	add	r7, r7, #24
   164e8:	ldr	r8, [r7, #-20]	; 0xffffffec
   164ec:	sub	r3, r7, #24
   164f0:	cmp	r8, #0
   164f4:	bne	1651c <ftello64@plt+0x4df0>
   164f8:	ldr	r2, [r7, #-24]	; 0xffffffe8
   164fc:	cmp	r2, #0
   16500:	bne	1651c <ftello64@plt+0x4df0>
   16504:	ldr	r2, [r7, #-8]
   16508:	cmp	r2, #0
   1650c:	bne	1651c <ftello64@plt+0x4df0>
   16510:	ldr	r2, [r7, #-4]
   16514:	cmp	r2, #0
   16518:	beq	1637c <ftello64@plt+0x4c50>
   1651c:	ldr	r2, [r7, #-12]
   16520:	tst	r2, #4
   16524:	moveq	r6, r3
   16528:	ldr	r3, [r6, #12]
   1652c:	ands	r3, r3, #8
   16530:	str	r3, [sp, #8]
   16534:	beq	163f4 <ftello64@plt+0x4cc8>
   16538:	b	164e4 <ftello64@plt+0x4db8>
   1653c:	add	r8, r8, #16
   16540:	b	1643c <ftello64@plt+0x4d10>
   16544:	add	r3, r3, #1
   16548:	b	163b8 <ftello64@plt+0x4c8c>
   1654c:	mov	r3, r4
   16550:	str	r5, [sp]
   16554:	mov	r1, r6
   16558:	add	r7, r2, #1
   1655c:	bl	1633c <ftello64@plt+0x4c10>
   16560:	mov	r2, r7
   16564:	mov	r4, r0
   16568:	ldr	r0, [sl, r2, lsl #4]
   1656c:	cmp	r0, #0
   16570:	bne	1654c <ftello64@plt+0x4e20>
   16574:	b	163e8 <ftello64@plt+0x4cbc>
   16578:	ldr	r3, [r5, #4]
   1657c:	add	r2, r3, #1
   16580:	str	r2, [r5, #4]
   16584:	strb	r8, [r3]
   16588:	ldr	r3, [r6, #8]
   1658c:	cmp	r3, #0
   16590:	beq	165c4 <ftello64@plt+0x4e98>
   16594:	ldr	r3, [r5, #4]
   16598:	add	r2, r3, #1
   1659c:	str	r2, [r5, #4]
   165a0:	mov	r2, #58	; 0x3a
   165a4:	strb	r2, [r3]
   165a8:	ldr	r3, [r6, #12]
   165ac:	tst	r3, #1
   165b0:	ldrne	r3, [r5, #4]
   165b4:	addne	r2, r3, #1
   165b8:	strne	r2, [r5, #4]
   165bc:	movne	r2, #58	; 0x3a
   165c0:	strbne	r2, [r3]
   165c4:	ldr	r3, [r5, #4]
   165c8:	strb	fp, [r3]
   165cc:	b	16420 <ftello64@plt+0x4cf4>
   165d0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   165d4:	cmp	r0, #86	; 0x56
   165d8:	bne	16644 <ftello64@plt+0x4f18>
   165dc:	ldr	r3, [pc, #112]	; 16654 <ftello64@plt+0x4f28>
   165e0:	push	{r4, lr}
   165e4:	mov	r4, r2
   165e8:	ldr	r3, [r3]
   165ec:	cmp	r3, #0
   165f0:	beq	16610 <ftello64@plt+0x4ee4>
   165f4:	mov	r1, r2
   165f8:	ldr	r0, [r2, #48]	; 0x30
   165fc:	blx	r3
   16600:	ldr	r0, [r4, #16]
   16604:	ands	r0, r0, #32
   16608:	bne	1664c <ftello64@plt+0x4f20>
   1660c:	bl	11558 <exit@plt>
   16610:	ldr	r3, [pc, #64]	; 16658 <ftello64@plt+0x4f2c>
   16614:	ldr	r2, [r3]
   16618:	cmp	r2, #0
   1661c:	beq	16630 <ftello64@plt+0x4f04>
   16620:	ldr	r1, [pc, #52]	; 1665c <ftello64@plt+0x4f30>
   16624:	ldr	r0, [r4, #48]	; 0x30
   16628:	bl	11588 <fprintf@plt>
   1662c:	b	16600 <ftello64@plt+0x4ed4>
   16630:	ldr	r2, [pc, #40]	; 16660 <ftello64@plt+0x4f34>
   16634:	ldr	r1, [pc, #40]	; 16664 <ftello64@plt+0x4f38>
   16638:	mov	r0, r4
   1663c:	bl	1aef0 <argp_error@@Base>
   16640:	b	16600 <ftello64@plt+0x4ed4>
   16644:	mov	r0, #7
   16648:	bx	lr
   1664c:	mov	r0, #0
   16650:	pop	{r4, pc}
   16654:	andeq	r0, r3, r0, asr #23
   16658:	andeq	r0, r3, ip, lsr #24
   1665c:	strdeq	lr, [r1], -r5
   16660:	andeq	lr, r1, r0, lsl #27
   16664:	andeq	ip, r1, r0, lsl #13
   16668:	cmn	r0, #3
   1666c:	push	{r4, r5, r6, lr}
   16670:	mov	r4, r2
   16674:	beq	166b8 <ftello64@plt+0x4f8c>
   16678:	mov	r5, r1
   1667c:	bgt	16690 <ftello64@plt+0x4f64>
   16680:	cmn	r0, #4
   16684:	beq	166f4 <ftello64@plt+0x4fc8>
   16688:	mov	r0, #7
   1668c:	pop	{r4, r5, r6, pc}
   16690:	cmn	r0, #2
   16694:	beq	166c0 <ftello64@plt+0x4f94>
   16698:	cmp	r0, #63	; 0x3f
   1669c:	ldreq	r2, [pc, #140]	; 16730 <ftello64@plt+0x5004>
   166a0:	bne	16688 <ftello64@plt+0x4f5c>
   166a4:	ldr	r1, [r4, #48]	; 0x30
   166a8:	mov	r0, r4
   166ac:	bl	1ae50 <argp_state_help@@Base>
   166b0:	mov	r0, #0
   166b4:	pop	{r4, r5, r6, pc}
   166b8:	ldr	r2, [pc, #116]	; 16734 <ftello64@plt+0x5008>
   166bc:	b	166a4 <ftello64@plt+0x4f78>
   166c0:	ldr	r3, [pc, #112]	; 16738 <ftello64@plt+0x500c>
   166c4:	mov	r0, r1
   166c8:	str	r1, [r3]
   166cc:	bl	17154 <argp_parse@@Base+0xa0c>
   166d0:	ldr	r3, [pc, #100]	; 1673c <ftello64@plt+0x5010>
   166d4:	str	r0, [r3]
   166d8:	ldr	r3, [r4, #16]
   166dc:	str	r0, [r4, #40]	; 0x28
   166e0:	and	r3, r3, #3
   166e4:	cmp	r3, #1
   166e8:	ldreq	r3, [r4, #8]
   166ec:	streq	r5, [r3]
   166f0:	b	166b0 <ftello64@plt+0x4f84>
   166f4:	cmp	r1, #0
   166f8:	ldr	r0, [pc, #64]	; 16740 <ftello64@plt+0x5014>
   166fc:	movne	r0, r1
   16700:	bl	11678 <atoi@plt>
   16704:	ldr	r4, [pc, #56]	; 16744 <ftello64@plt+0x5018>
   16708:	mov	r5, #1
   1670c:	str	r0, [r4]
   16710:	ldr	r3, [r4]
   16714:	sub	r2, r3, #1
   16718:	cmp	r3, #0
   1671c:	str	r2, [r4]
   16720:	ble	166b0 <ftello64@plt+0x4f84>
   16724:	mov	r0, r5
   16728:	bl	11468 <sleep@plt>
   1672c:	b	16710 <ftello64@plt+0x4fe4>
   16730:	andeq	r0, r0, sl, ror r2
   16734:	andeq	r0, r0, r1, lsl #4
   16738:	andeq	r0, r3, ip, asr #22
   1673c:	andeq	r0, r3, r8, asr #22
   16740:	andeq	lr, r1, r3, lsr #27
   16744:			; <UNDEFINED> instruction: 0x00030bbc

00016748 <argp_parse@@Base>:
   16748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1674c:	add	fp, sp, #32
   16750:	tst	r3, #1
   16754:	sub	sp, sp, #220	; 0xdc
   16758:	mov	r4, r0
   1675c:	mov	r8, r2
   16760:	str	r1, [fp, #-240]	; 0xffffff10
   16764:	mov	sl, r3
   16768:	bne	1679c <argp_parse@@Base+0x54>
   1676c:	ldr	r3, [pc, #2296]	; 1706c <argp_parse@@Base+0x924>
   16770:	ldr	r5, [pc, #2296]	; 17070 <argp_parse@@Base+0x928>
   16774:	ldr	r2, [r3]
   16778:	cmp	r2, #0
   1677c:	ldreq	r2, [r8]
   16780:	streq	r2, [r3]
   16784:	ldr	r3, [r5]
   16788:	cmp	r3, #0
   1678c:	bne	1679c <argp_parse@@Base+0x54>
   16790:	ldr	r0, [r8]
   16794:	bl	17154 <argp_parse@@Base+0xa0c>
   16798:	str	r0, [r5]
   1679c:	ands	r7, sl, #16
   167a0:	bne	16828 <argp_parse@@Base+0xe0>
   167a4:	sub	sp, sp, #72	; 0x48
   167a8:	add	r5, sp, #8
   167ac:	sub	sp, sp, #40	; 0x28
   167b0:	add	r6, sp, #8
   167b4:	mov	r2, #28
   167b8:	mov	r1, r7
   167bc:	mov	r0, r6
   167c0:	bl	115c4 <memset@plt>
   167c4:	str	r5, [r6, #16]
   167c8:	mov	r0, r5
   167cc:	mov	r2, #64	; 0x40
   167d0:	mov	r1, r7
   167d4:	bl	115c4 <memset@plt>
   167d8:	cmp	r4, #0
   167dc:	strne	r4, [r5]
   167e0:	ldr	r3, [pc, #2188]	; 17074 <argp_parse@@Base+0x92c>
   167e4:	addne	r5, r5, #16
   167e8:	str	r3, [r5]
   167ec:	ldr	r3, [pc, #2180]	; 17078 <argp_parse@@Base+0x930>
   167f0:	ldr	r3, [r3]
   167f4:	cmp	r3, #0
   167f8:	bne	16810 <argp_parse@@Base+0xc8>
   167fc:	ldr	r3, [pc, #2168]	; 1707c <argp_parse@@Base+0x934>
   16800:	ldr	r3, [r3]
   16804:	cmp	r3, #0
   16808:	addeq	r3, r5, #16
   1680c:	beq	1681c <argp_parse@@Base+0xd4>
   16810:	ldr	r2, [pc, #2152]	; 17080 <argp_parse@@Base+0x938>
   16814:	add	r3, r5, #32
   16818:	str	r2, [r5, #16]
   1681c:	mov	r4, r6
   16820:	mov	r2, #0
   16824:	str	r2, [r3]
   16828:	mov	r2, #36	; 0x24
   1682c:	mov	r1, #0
   16830:	sub	r0, fp, #196	; 0xc4
   16834:	bl	115c4 <memset@plt>
   16838:	ands	r3, sl, #4
   1683c:	moveq	r3, #1
   16840:	movne	r3, #0
   16844:	str	r3, [fp, #-228]	; 0xffffff1c
   16848:	mov	r3, #0
   1684c:	cmp	r4, r3
   16850:	str	r3, [fp, #-224]	; 0xffffff20
   16854:	str	r3, [fp, #-220]	; 0xffffff24
   16858:	str	r3, [fp, #-216]	; 0xffffff28
   1685c:	beq	1686c <argp_parse@@Base+0x124>
   16860:	sub	r1, fp, #228	; 0xe4
   16864:	mov	r0, r4
   16868:	bl	16270 <ftello64@plt+0x4b44>
   1686c:	ldr	r9, [fp, #-220]	; 0xffffff24
   16870:	ldr	r5, [fp, #-216]	; 0xffffff28
   16874:	add	r3, r9, #1
   16878:	mov	r9, #36	; 0x24
   1687c:	ldr	r6, [fp, #-224]	; 0xffffff20
   16880:	mul	r9, r9, r3
   16884:	ldr	r0, [fp, #-228]	; 0xffffff1c
   16888:	lsl	r5, r5, #2
   1688c:	add	r6, r6, #1
   16890:	add	r3, r9, r5
   16894:	add	r6, r3, r6, lsl #4
   16898:	add	r0, r0, #1
   1689c:	add	r0, r0, r6
   168a0:	str	r3, [fp, #-236]	; 0xffffff14
   168a4:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   168a8:	cmp	r0, #0
   168ac:	mov	r7, r0
   168b0:	str	r0, [fp, #-40]	; 0xffffffd8
   168b4:	moveq	r4, #12
   168b8:	beq	16a38 <argp_parse@@Base+0x2f0>
   168bc:	add	r3, r0, r9
   168c0:	str	r3, [fp, #-232]	; 0xffffff18
   168c4:	str	r3, [fp, #-104]	; 0xffffff98
   168c8:	ldr	r3, [fp, #-236]	; 0xffffff14
   168cc:	sub	lr, fp, #196	; 0xc4
   168d0:	add	r3, r0, r3
   168d4:	str	r3, [fp, #-236]	; 0xffffff14
   168d8:	str	r3, [fp, #-152]	; 0xffffff68
   168dc:	mov	r3, #1
   168e0:	add	r9, r0, r6
   168e4:	str	r0, [fp, #-112]	; 0xffffff90
   168e8:	str	r3, [fp, #-196]	; 0xffffff3c
   168ec:	str	r3, [fp, #-192]	; 0xffffff40
   168f0:	ldm	lr!, {r0, r1, r2, r3}
   168f4:	sub	ip, fp, #148	; 0x94
   168f8:	str	r9, [fp, #-156]	; 0xffffff64
   168fc:	stmia	ip!, {r0, r1, r2, r3}
   16900:	ldm	lr!, {r0, r1, r2, r3}
   16904:	stmia	ip!, {r0, r1, r2, r3}
   16908:	mov	r2, r5
   1690c:	ldr	r3, [lr]
   16910:	mov	r1, #0
   16914:	ldr	r0, [fp, #-232]	; 0xffffff18
   16918:	str	r3, [ip]
   1691c:	bl	115c4 <memset@plt>
   16920:	ldr	r3, [fp, #-236]	; 0xffffff14
   16924:	tst	sl, #8
   16928:	str	r3, [fp, #-204]	; 0xffffff34
   1692c:	ldr	r3, [fp, #-232]	; 0xffffff18
   16930:	str	r9, [fp, #-208]	; 0xffffff30
   16934:	sub	r5, fp, #160	; 0xa0
   16938:	addne	r9, r9, #1
   1693c:	str	r3, [fp, #-200]	; 0xffffff38
   16940:	str	r5, [fp, #-212]	; 0xffffff2c
   16944:	strne	r9, [fp, #-208]	; 0xffffff30
   16948:	movne	r3, #45	; 0x2d
   1694c:	bne	16968 <argp_parse@@Base+0x220>
   16950:	ands	r3, sl, #4
   16954:	cmp	r3, #0
   16958:	beq	1696c <argp_parse@@Base+0x224>
   1695c:	mov	r3, #43	; 0x2b
   16960:	add	r9, r9, #1
   16964:	str	r9, [fp, #-208]	; 0xffffff30
   16968:	strb	r3, [r7, r6]
   1696c:	ldr	r3, [fp, #-208]	; 0xffffff30
   16970:	mov	r2, #0
   16974:	cmp	r4, r2
   16978:	strb	r2, [r3]
   1697c:	ldr	r3, [fp, #-204]	; 0xffffff34
   16980:	str	r2, [r3]
   16984:	ldreq	r3, [fp, #-112]	; 0xffffff90
   16988:	str	r4, [fp, #-160]	; 0xffffff60
   1698c:	streq	r3, [fp, #-108]	; 0xffffff94
   16990:	beq	169b0 <argp_parse@@Base+0x268>
   16994:	sub	r3, fp, #212	; 0xd4
   16998:	str	r3, [sp]
   1699c:	mov	r1, r2
   169a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   169a4:	mov	r0, r4
   169a8:	bl	1633c <ftello64@plt+0x4c10>
   169ac:	str	r0, [fp, #-108]	; 0xffffff94
   169b0:	mov	r2, #56	; 0x38
   169b4:	mov	r1, #0
   169b8:	add	r0, r5, #64	; 0x40
   169bc:	bl	115c4 <memset@plt>
   169c0:	ldr	r3, [fp, #-160]	; 0xffffff60
   169c4:	ldr	r6, [fp, #-112]	; 0xffffff90
   169c8:	str	r3, [fp, #-96]	; 0xffffffa0
   169cc:	ldr	r3, [fp, #-240]	; 0xffffff10
   169d0:	str	sl, [fp, #-80]	; 0xffffffb0
   169d4:	str	r3, [fp, #-92]	; 0xffffffa4
   169d8:	ldr	r3, [pc, #1700]	; 17084 <argp_parse@@Base+0x93c>
   169dc:	mov	r4, #0
   169e0:	ldr	sl, [pc, #1696]	; 17088 <argp_parse@@Base+0x940>
   169e4:	ldr	r3, [r3]
   169e8:	add	r7, r5, #64	; 0x40
   169ec:	str	r3, [fp, #-52]	; 0xffffffcc
   169f0:	ldr	r3, [pc, #1684]	; 1708c <argp_parse@@Base+0x944>
   169f4:	mov	r9, r4
   169f8:	str	r8, [fp, #-88]	; 0xffffffa8
   169fc:	ldr	r3, [r3]
   16a00:	str	r5, [fp, #-44]	; 0xffffffd4
   16a04:	str	r3, [fp, #-48]	; 0xffffffd0
   16a08:	mov	r3, #1
   16a0c:	str	r3, [fp, #-100]	; 0xffffff9c
   16a10:	ldr	r3, [fp, #-108]	; 0xffffff94
   16a14:	cmp	r6, r3
   16a18:	ldrcc	r3, [fp, #8]
   16a1c:	strcc	r3, [r6, #24]
   16a20:	ldr	r3, [fp, #-108]	; 0xffffff94
   16a24:	cmp	r6, r3
   16a28:	bcs	16aac <argp_parse@@Base+0x364>
   16a2c:	cmp	r4, #7
   16a30:	cmpne	r4, #0
   16a34:	beq	16a44 <argp_parse@@Base+0x2fc>
   16a38:	mov	r0, r4
   16a3c:	sub	sp, fp, #32
   16a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a44:	ldr	r3, [r6, #16]
   16a48:	cmp	r3, #0
   16a4c:	ldrne	r3, [r3, #28]
   16a50:	ldrne	r2, [r6, #20]
   16a54:	ldrne	r3, [r3, r2, lsl #2]
   16a58:	strne	r3, [r6, #24]
   16a5c:	ldr	r3, [r6]
   16a60:	cmp	r3, #0
   16a64:	bne	16a8c <argp_parse@@Base+0x344>
   16a68:	ldr	r3, [r6, #4]
   16a6c:	ldr	r3, [r3, #16]
   16a70:	cmp	r3, #0
   16a74:	beq	16a8c <argp_parse@@Base+0x344>
   16a78:	ldr	r3, [r3]
   16a7c:	cmp	r3, #0
   16a80:	ldrne	r3, [r6, #28]
   16a84:	ldrne	r2, [r6, #24]
   16a88:	strne	r2, [r3]
   16a8c:	mov	r0, r6
   16a90:	mov	r3, r9
   16a94:	mov	r2, sl
   16a98:	mov	r1, r7
   16a9c:	bl	16210 <ftello64@plt+0x4ae4>
   16aa0:	add	r6, r6, #36	; 0x24
   16aa4:	mov	r4, r0
   16aa8:	b	16a20 <argp_parse@@Base+0x2d8>
   16aac:	cmp	r4, #7
   16ab0:	beq	16abc <argp_parse@@Base+0x374>
   16ab4:	cmp	r4, #0
   16ab8:	bne	16a38 <argp_parse@@Base+0x2f0>
   16abc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16ac0:	tst	r3, #2
   16ac4:	moveq	r3, #1
   16ac8:	streq	r3, [fp, #-144]	; 0xffffff70
   16acc:	beq	16af4 <argp_parse@@Base+0x3ac>
   16ad0:	tst	r3, #1
   16ad4:	mov	r2, #0
   16ad8:	ldrne	r3, [fp, #-88]	; 0xffffffa8
   16adc:	str	r2, [fp, #-144]	; 0xffffff70
   16ae0:	subne	r3, r3, #4
   16ae4:	strne	r3, [fp, #-88]	; 0xffffffa8
   16ae8:	ldrne	r3, [fp, #-92]	; 0xffffffa4
   16aec:	addne	r3, r3, #1
   16af0:	strne	r3, [fp, #-92]	; 0xffffffa4
   16af4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16af8:	cmp	r8, r3
   16afc:	bne	16b20 <argp_parse@@Base+0x3d8>
   16b00:	ldr	r0, [r8]
   16b04:	cmp	r0, #0
   16b08:	beq	16b20 <argp_parse@@Base+0x3d8>
   16b0c:	bl	17154 <argp_parse@@Base+0xa0c>
   16b10:	str	r0, [fp, #-56]	; 0xffffffc8
   16b14:	add	r8, r5, #64	; 0x40
   16b18:	ldr	r9, [pc, #1392]	; 17090 <argp_parse@@Base+0x948>
   16b1c:	b	16ce4 <argp_parse@@Base+0x59c>
   16b20:	ldr	r3, [pc, #1352]	; 17070 <argp_parse@@Base+0x928>
   16b24:	ldr	r3, [r3]
   16b28:	str	r3, [fp, #-56]	; 0xffffffc8
   16b2c:	b	16b14 <argp_parse@@Base+0x3cc>
   16b30:	bl	1725c <argp_parse@@Base+0xb14>
   16b34:	b	16d50 <argp_parse@@Base+0x608>
   16b38:	cmp	r0, #63	; 0x3f
   16b3c:	bne	17000 <argp_parse@@Base+0x8b8>
   16b40:	ldr	r3, [fp, #-140]	; 0xffffff74
   16b44:	cmn	r3, #1
   16b48:	bne	16fa4 <argp_parse@@Base+0x85c>
   16b4c:	asrs	r3, r6, #24
   16b50:	bne	16e0c <argp_parse@@Base+0x6c4>
   16b54:	mov	r1, r6
   16b58:	ldr	r0, [fp, #-156]	; 0xffffff64
   16b5c:	bl	1157c <strchr@plt>
   16b60:	subs	r2, r0, #0
   16b64:	beq	16ba0 <argp_parse@@Base+0x458>
   16b68:	ldr	r0, [fp, #-112]	; 0xffffff90
   16b6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16b70:	cmp	r0, r3
   16b74:	bcs	16ba0 <argp_parse@@Base+0x458>
   16b78:	ldr	r1, [r0, #8]
   16b7c:	cmp	r2, r1
   16b80:	bcs	16e04 <argp_parse@@Base+0x6bc>
   16b84:	ldr	r3, [fp, #-136]	; 0xffffff78
   16b88:	mov	r2, r6
   16b8c:	mov	r1, r8
   16b90:	bl	16210 <ftello64@plt+0x4ae4>
   16b94:	cmp	r0, #7
   16b98:	mov	r4, r0
   16b9c:	bne	16e98 <argp_parse@@Base+0x750>
   16ba0:	ldr	r3, [pc, #1260]	; 17094 <argp_parse@@Base+0x94c>
   16ba4:	ldr	r1, [pc, #1260]	; 17098 <argp_parse@@Base+0x950>
   16ba8:	mov	r2, r6
   16bac:	add	r0, r5, #64	; 0x40
   16bb0:	bl	1aef0 <argp_error@@Base>
   16bb4:	sub	r7, r6, #1
   16bb8:	mov	r4, #7
   16bbc:	clz	r7, r7
   16bc0:	lsr	r7, r7, #5
   16bc4:	cmp	r4, #7
   16bc8:	movne	r7, #0
   16bcc:	andeq	r7, r7, #1
   16bd0:	cmp	r7, #0
   16bd4:	beq	16f18 <argp_parse@@Base+0x7d0>
   16bd8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16bdc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16be0:	cmp	r3, r2
   16be4:	bne	16f70 <argp_parse@@Base+0x828>
   16be8:	mov	r4, #0
   16bec:	ldr	r7, [fp, #-112]	; 0xffffff90
   16bf0:	ldr	sl, [pc, #1188]	; 1709c <argp_parse@@Base+0x954>
   16bf4:	add	r8, r5, #64	; 0x40
   16bf8:	mov	r9, r4
   16bfc:	ldr	r6, [fp, #-108]	; 0xffffff94
   16c00:	cmp	r7, r6
   16c04:	bcc	16ea4 <argp_parse@@Base+0x75c>
   16c08:	ldr	r9, [pc, #1168]	; 170a0 <argp_parse@@Base+0x958>
   16c0c:	sub	r6, r6, #36	; 0x24
   16c10:	add	r7, r5, #64	; 0x40
   16c14:	mov	r8, #0
   16c18:	ldr	r3, [fp, #-112]	; 0xffffff90
   16c1c:	cmp	r6, r3
   16c20:	bcc	16efc <argp_parse@@Base+0x7b4>
   16c24:	cmp	r4, #7
   16c28:	cmpne	r4, #0
   16c2c:	beq	16edc <argp_parse@@Base+0x794>
   16c30:	ldr	r3, [fp, #4]
   16c34:	cmp	r3, #0
   16c38:	beq	16f18 <argp_parse@@Base+0x7d0>
   16c3c:	ldr	r2, [fp, #4]
   16c40:	ldr	r3, [fp, #-84]	; 0xffffffac
   16c44:	str	r3, [r2]
   16c48:	b	16f10 <argp_parse@@Base+0x7c8>
   16c4c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16c50:	tst	r2, #4
   16c54:	bne	16bd8 <argp_parse@@Base+0x490>
   16c58:	add	r2, r3, #1
   16c5c:	str	r2, [fp, #-84]	; 0xffffffac
   16c60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16c64:	ldr	r3, [r2, r3, lsl #2]
   16c68:	str	r3, [fp, #-136]	; 0xffffff78
   16c6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16c70:	ldr	r7, [fp, #-84]	; 0xffffffac
   16c74:	str	r3, [fp, #-232]	; 0xffffff18
   16c78:	ldr	r6, [fp, #-112]	; 0xffffff90
   16c7c:	mov	r3, #0
   16c80:	mov	r4, #7
   16c84:	mov	sl, r3
   16c88:	sub	r7, r7, #1
   16c8c:	str	r7, [fp, #-84]	; 0xffffffac
   16c90:	ldr	r2, [fp, #-108]	; 0xffffff94
   16c94:	cmp	r6, r2
   16c98:	movcs	r2, #0
   16c9c:	movcc	r2, #1
   16ca0:	cmp	r4, #7
   16ca4:	movne	r2, #0
   16ca8:	cmp	r2, #0
   16cac:	bne	16da4 <argp_parse@@Base+0x65c>
   16cb0:	cmp	r4, #0
   16cb4:	bne	16e88 <argp_parse@@Base+0x740>
   16cb8:	cmp	r3, r9
   16cbc:	ldreq	r3, [fp, #-92]	; 0xffffffa4
   16cc0:	streq	r3, [fp, #-84]	; 0xffffffac
   16cc4:	ldr	r3, [fp, #-84]	; 0xffffffac
   16cc8:	cmp	r7, r3
   16ccc:	sublt	r7, r3, r7
   16cd0:	ldrlt	r3, [r6, #-24]	; 0xffffffe8
   16cd4:	movge	r3, #1
   16cd8:	addlt	r7, r3, r7
   16cdc:	strlt	r7, [r6, #-24]	; 0xffffffe8
   16ce0:	strge	r3, [fp, #-100]	; 0xffffff9c
   16ce4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16ce8:	ldr	r3, [fp, #-84]	; 0xffffffac
   16cec:	cmp	r2, #0
   16cf0:	beq	16d00 <argp_parse@@Base+0x5b8>
   16cf4:	cmp	r2, r3
   16cf8:	movgt	r2, #0
   16cfc:	strgt	r2, [fp, #-72]	; 0xffffffb8
   16d00:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16d04:	cmp	r2, #0
   16d08:	beq	16d90 <argp_parse@@Base+0x648>
   16d0c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   16d10:	cmp	r7, #0
   16d14:	bne	16d90 <argp_parse@@Base+0x648>
   16d18:	str	r3, [fp, #-148]	; 0xffffff6c
   16d1c:	mvn	r3, #0
   16d20:	str	r3, [fp, #-140]	; 0xffffff74
   16d24:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16d28:	str	r7, [sp]
   16d2c:	tst	r3, #64	; 0x40
   16d30:	add	r3, r5, #12
   16d34:	str	r3, [sp, #4]
   16d38:	ldr	r2, [fp, #-156]	; 0xffffff64
   16d3c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16d40:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16d44:	ldr	r0, [fp, #-92]	; 0xffffffa4
   16d48:	beq	16b30 <argp_parse@@Base+0x3e8>
   16d4c:	bl	172a8 <argp_parse@@Base+0xb60>
   16d50:	ldr	r4, [fp, #-148]	; 0xffffff6c
   16d54:	cmn	r0, #1
   16d58:	mov	r6, r0
   16d5c:	str	r4, [fp, #-84]	; 0xffffffac
   16d60:	bne	16b38 <argp_parse@@Base+0x3f0>
   16d64:	mov	r3, #0
   16d68:	cmp	r4, #1
   16d6c:	str	r3, [fp, #-100]	; 0xffffff9c
   16d70:	ble	16d90 <argp_parse@@Base+0x648>
   16d74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16d78:	sub	r3, r4, #-1073741823	; 0xc0000001
   16d7c:	ldr	r1, [pc, #800]	; 170a4 <argp_parse@@Base+0x95c>
   16d80:	ldr	r0, [r2, r3, lsl #2]
   16d84:	bl	113d8 <strcmp@plt>
   16d88:	cmp	r0, #0
   16d8c:	streq	r4, [fp, #-72]	; 0xffffffb8
   16d90:	ldr	r3, [fp, #-84]	; 0xffffffac
   16d94:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16d98:	cmp	r3, r2
   16d9c:	bge	16bd8 <argp_parse@@Base+0x490>
   16da0:	b	16c4c <argp_parse@@Base+0x504>
   16da4:	ldr	r3, [fp, #-84]	; 0xffffffac
   16da8:	mov	r2, sl
   16dac:	add	r3, r3, #1
   16db0:	str	r3, [fp, #-84]	; 0xffffffac
   16db4:	mov	r1, r8
   16db8:	ldr	r3, [fp, #-232]	; 0xffffff18
   16dbc:	mov	r0, r6
   16dc0:	bl	16210 <ftello64@plt+0x4ae4>
   16dc4:	cmp	r0, #7
   16dc8:	mov	r4, r0
   16dcc:	movne	r3, sl
   16dd0:	bne	16dfc <argp_parse@@Base+0x6b4>
   16dd4:	ldr	r3, [fp, #-84]	; 0xffffffac
   16dd8:	mov	r2, r9
   16ddc:	sub	r3, r3, #1
   16de0:	str	r3, [fp, #-84]	; 0xffffffac
   16de4:	mov	r1, r8
   16de8:	mov	r3, sl
   16dec:	mov	r0, r6
   16df0:	bl	16210 <ftello64@plt+0x4ae4>
   16df4:	mov	r3, r9
   16df8:	mov	r4, r0
   16dfc:	add	r6, r6, #36	; 0x24
   16e00:	b	16c90 <argp_parse@@Base+0x548>
   16e04:	add	r0, r0, #36	; 0x24
   16e08:	b	16b70 <argp_parse@@Base+0x428>
   16e0c:	mov	r0, #36	; 0x24
   16e10:	ands	r1, r6, #8388608	; 0x800000
   16e14:	mul	r0, r0, r3
   16e18:	ldr	ip, [fp, #-112]	; 0xffffff90
   16e1c:	movne	r1, #-16777216	; 0xff000000
   16e20:	bic	r2, r6, #-16777216	; 0xff000000
   16e24:	sub	r0, r0, #36	; 0x24
   16e28:	orr	r2, r2, r1
   16e2c:	ldr	r3, [fp, #-136]	; 0xffffff78
   16e30:	mov	r1, r8
   16e34:	add	r0, ip, r0
   16e38:	bl	16210 <ftello64@plt+0x4ae4>
   16e3c:	cmp	r0, #7
   16e40:	mov	r4, r0
   16e44:	bne	16e98 <argp_parse@@Base+0x750>
   16e48:	ldr	r3, [fp, #-152]	; 0xffffff68
   16e4c:	b	16e60 <argp_parse@@Base+0x718>
   16e50:	ldr	r2, [r3]
   16e54:	cmp	r2, #0
   16e58:	beq	16e6c <argp_parse@@Base+0x724>
   16e5c:	add	r3, r3, #16
   16e60:	ldr	r2, [r3, #12]
   16e64:	cmp	r2, r6
   16e68:	bne	16e50 <argp_parse@@Base+0x708>
   16e6c:	ldr	r2, [r3]
   16e70:	ldr	r1, [pc, #560]	; 170a8 <argp_parse@@Base+0x960>
   16e74:	cmp	r2, #0
   16e78:	moveq	r2, r1
   16e7c:	ldr	r3, [pc, #528]	; 17094 <argp_parse@@Base+0x94c>
   16e80:	ldr	r1, [pc, #548]	; 170ac <argp_parse@@Base+0x964>
   16e84:	b	16bac <argp_parse@@Base+0x464>
   16e88:	cmp	r4, #7
   16e8c:	bne	16f20 <argp_parse@@Base+0x7d8>
   16e90:	mov	r6, #1
   16e94:	b	16bb4 <argp_parse@@Base+0x46c>
   16e98:	cmp	r4, #0
   16e9c:	beq	16ce4 <argp_parse@@Base+0x59c>
   16ea0:	b	16bc4 <argp_parse@@Base+0x47c>
   16ea4:	cmp	r4, #7
   16ea8:	cmpne	r4, #0
   16eac:	bne	16c08 <argp_parse@@Base+0x4c0>
   16eb0:	ldr	r3, [r7, #12]
   16eb4:	cmp	r3, #0
   16eb8:	bne	16ed4 <argp_parse@@Base+0x78c>
   16ebc:	mov	r3, r9
   16ec0:	mov	r2, sl
   16ec4:	mov	r1, r8
   16ec8:	mov	r0, r7
   16ecc:	bl	16210 <ftello64@plt+0x4ae4>
   16ed0:	mov	r4, r0
   16ed4:	add	r7, r7, #36	; 0x24
   16ed8:	b	16bfc <argp_parse@@Base+0x4b4>
   16edc:	mov	r0, r6
   16ee0:	mov	r3, r8
   16ee4:	mov	r2, r9
   16ee8:	mov	r1, r7
   16eec:	bl	16210 <ftello64@plt+0x4ae4>
   16ef0:	sub	r6, r6, #36	; 0x24
   16ef4:	mov	r4, r0
   16ef8:	b	16c18 <argp_parse@@Base+0x4d0>
   16efc:	cmp	r4, #7
   16f00:	beq	1700c <argp_parse@@Base+0x8c4>
   16f04:	ldr	r3, [fp, #4]
   16f08:	cmp	r3, #0
   16f0c:	bne	16c3c <argp_parse@@Base+0x4f4>
   16f10:	cmp	r4, #0
   16f14:	beq	1701c <argp_parse@@Base+0x8d4>
   16f18:	cmp	r4, #7
   16f1c:	beq	16fa4 <argp_parse@@Base+0x85c>
   16f20:	ldr	r6, [fp, #-112]	; 0xffffff90
   16f24:	ldr	r9, [pc, #388]	; 170b0 <argp_parse@@Base+0x968>
   16f28:	add	r7, r5, #64	; 0x40
   16f2c:	mov	r8, #0
   16f30:	ldr	r3, [fp, #-108]	; 0xffffff94
   16f34:	cmp	r6, r3
   16f38:	bcc	16fbc <argp_parse@@Base+0x874>
   16f3c:	ldr	r6, [fp, #-108]	; 0xffffff94
   16f40:	ldr	r8, [pc, #364]	; 170b4 <argp_parse@@Base+0x96c>
   16f44:	sub	r6, r6, #36	; 0x24
   16f48:	add	r5, r5, #64	; 0x40
   16f4c:	mov	r7, #0
   16f50:	ldr	r3, [fp, #-112]	; 0xffffff90
   16f54:	cmp	r6, r3
   16f58:	bcs	16fe4 <argp_parse@@Base+0x89c>
   16f5c:	cmp	r4, #7
   16f60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16f64:	moveq	r4, #22
   16f68:	bl	171e4 <argp_parse@@Base+0xa9c>
   16f6c:	b	16a38 <argp_parse@@Base+0x2f0>
   16f70:	ldr	r2, [fp, #4]
   16f74:	cmp	r2, #0
   16f78:	strne	r3, [r2]
   16f7c:	bne	1701c <argp_parse@@Base+0x8d4>
   16f80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16f84:	tst	r3, #2
   16f88:	bne	16fa4 <argp_parse@@Base+0x85c>
   16f8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16f90:	cmp	r0, #0
   16f94:	beq	16fa4 <argp_parse@@Base+0x85c>
   16f98:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f9c:	ldr	r1, [pc, #276]	; 170b8 <argp_parse@@Base+0x970>
   16fa0:	bl	11588 <fprintf@plt>
   16fa4:	mov	r2, #260	; 0x104
   16fa8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16fac:	add	r0, r5, #64	; 0x40
   16fb0:	bl	1ae50 <argp_state_help@@Base>
   16fb4:	mov	r4, #7
   16fb8:	b	16f20 <argp_parse@@Base+0x7d8>
   16fbc:	mov	r0, r6
   16fc0:	mov	r3, r8
   16fc4:	mov	r2, r9
   16fc8:	mov	r1, r7
   16fcc:	bl	16210 <ftello64@plt+0x4ae4>
   16fd0:	add	r6, r6, #36	; 0x24
   16fd4:	b	16f30 <argp_parse@@Base+0x7e8>
   16fd8:	cmp	r4, #7
   16fdc:	moveq	r4, #0
   16fe0:	b	16f3c <argp_parse@@Base+0x7f4>
   16fe4:	mov	r0, r6
   16fe8:	mov	r3, r7
   16fec:	mov	r2, r8
   16ff0:	mov	r1, r5
   16ff4:	bl	16210 <ftello64@plt+0x4ae4>
   16ff8:	sub	r6, r6, #36	; 0x24
   16ffc:	b	16f50 <argp_parse@@Base+0x808>
   17000:	cmp	r0, #1
   17004:	bne	16b4c <argp_parse@@Base+0x404>
   17008:	b	16c6c <argp_parse@@Base+0x524>
   1700c:	ldr	r3, [fp, #4]
   17010:	cmp	r3, #0
   17014:	movne	r4, #0
   17018:	bne	16c3c <argp_parse@@Base+0x4f4>
   1701c:	ldr	r6, [fp, #-108]	; 0xffffff94
   17020:	mov	r4, #0
   17024:	ldr	r9, [pc, #144]	; 170bc <argp_parse@@Base+0x974>
   17028:	sub	r6, r6, #36	; 0x24
   1702c:	add	r7, r5, #64	; 0x40
   17030:	mov	r8, r4
   17034:	ldr	r3, [fp, #-112]	; 0xffffff90
   17038:	cmp	r6, r3
   1703c:	bcc	16fd8 <argp_parse@@Base+0x890>
   17040:	cmp	r4, #7
   17044:	cmpne	r4, #0
   17048:	bne	16f3c <argp_parse@@Base+0x7f4>
   1704c:	mov	r0, r6
   17050:	mov	r3, r8
   17054:	mov	r2, r9
   17058:	mov	r1, r7
   1705c:	bl	16210 <ftello64@plt+0x4ae4>
   17060:	sub	r6, r6, #36	; 0x24
   17064:	mov	r4, r0
   17068:	b	17034 <argp_parse@@Base+0x8ec>
   1706c:	andeq	r0, r3, ip, asr #22
   17070:	andeq	r0, r3, r8, asr #22
   17074:	andeq	lr, r1, r8, ror #24
   17078:	andeq	r0, r3, ip, lsr #24
   1707c:	andeq	r0, r3, r0, asr #23
   17080:	andeq	lr, r1, r4, lsl #25
   17084:	andeq	r0, r3, r0, asr fp
   17088:	tsteq	r0, r3
   1708c:	andeq	r0, r3, r4, asr fp
   17090:	tsteq	r0, r6
   17094:	andeq	lr, r1, r0, lsr #25
   17098:	andeq	lr, r1, pc, lsr #27
   1709c:	tsteq	r0, r2
   170a0:	tsteq	r0, r1
   170a4:	andeq	lr, r1, ip, lsr #27
   170a8:	andeq	lr, r1, r8, lsr #27
   170ac:			; <UNDEFINED> instruction: 0x0001edb7
   170b0:	tsteq	r0, r5
   170b4:	tsteq	r0, r7
   170b8:	andeq	lr, r1, r0, asr #27
   170bc:	tsteq	r0, r4
   170c0:	cmp	r1, #0
   170c4:	ldrne	r2, [r1, #52]	; 0x34
   170c8:	ldrne	r3, [r2, #48]	; 0x30
   170cc:	ldrne	r2, [r2, #52]	; 0x34
   170d0:	bne	170e0 <argp_parse@@Base+0x998>
   170d4:	mov	r0, #0
   170d8:	bx	lr
   170dc:	add	r3, r3, #36	; 0x24
   170e0:	cmp	r3, r2
   170e4:	bcs	170d4 <argp_parse@@Base+0x98c>
   170e8:	ldr	r1, [r3, #4]
   170ec:	cmp	r1, r0
   170f0:	bne	170dc <argp_parse@@Base+0x994>
   170f4:	ldr	r0, [r3, #24]
   170f8:	bx	lr
   170fc:	push	{r0, r1, r2, lr}
   17100:	ldr	r1, [pc, #28]	; 17124 <argp_parse@@Base+0x9dc>
   17104:	ldr	r2, [pc, #28]	; 17128 <argp_parse@@Base+0x9e0>
   17108:	ldr	r3, [r1, #4]
   1710c:	str	r3, [sp]
   17110:	ldr	r3, [pc, #20]	; 1712c <argp_parse@@Base+0x9e4>
   17114:	ldr	r1, [r1]
   17118:	bl	17c88 <_obstack_memory_used@@Base+0x688>
   1711c:	add	sp, sp, #12
   17120:	pop	{pc}		; (ldr pc, [sp], #4)
   17124:	andeq	r0, r3, r4, asr #23
   17128:	andeq	lr, r1, r6, lsl #29
   1712c:	andeq	lr, r1, r9, ror lr
   17130:	ldr	r3, [pc, #16]	; 17148 <argp_parse@@Base+0xa00>
   17134:	ldr	r2, [pc, #16]	; 1714c <argp_parse@@Base+0xa04>
   17138:	str	r2, [r3]
   1713c:	ldr	r3, [pc, #12]	; 17150 <argp_parse@@Base+0xa08>
   17140:	stm	r3, {r0, r1}
   17144:	bx	lr
   17148:	andeq	r0, r3, r0, asr #23
   1714c:	strdeq	r7, [r1], -ip
   17150:	andeq	r0, r3, r4, asr #23
   17154:	mov	r2, r0
   17158:	push	{r4, lr}
   1715c:	mov	r0, r2
   17160:	ldrb	r3, [r2]
   17164:	add	r1, r2, #1
   17168:	cmp	r3, #47	; 0x2f
   1716c:	beq	17190 <argp_parse@@Base+0xa48>
   17170:	mov	r3, #0
   17174:	mov	lr, #1
   17178:	mov	r4, r3
   1717c:	mov	ip, r2
   17180:	ldrb	r1, [r2], #1
   17184:	cmp	r1, #0
   17188:	bne	17198 <argp_parse@@Base+0xa50>
   1718c:	pop	{r4, pc}
   17190:	mov	r2, r1
   17194:	b	1715c <argp_parse@@Base+0xa14>
   17198:	cmp	r1, #47	; 0x2f
   1719c:	moveq	r3, lr
   171a0:	beq	1717c <argp_parse@@Base+0xa34>
   171a4:	cmp	r3, #0
   171a8:	movne	r0, ip
   171ac:	movne	r3, r4
   171b0:	b	1717c <argp_parse@@Base+0xa34>
   171b4:	push	{r4, lr}
   171b8:	mov	r4, r0
   171bc:	bl	11570 <strlen@plt>
   171c0:	cmp	r0, #1
   171c4:	popls	{r4, pc}
   171c8:	sub	r3, r0, #1
   171cc:	ldrb	r2, [r4, r3]
   171d0:	cmp	r2, #47	; 0x2f
   171d4:	beq	171dc <argp_parse@@Base+0xa94>
   171d8:	pop	{r4, pc}
   171dc:	mov	r0, r3
   171e0:	b	171c0 <argp_parse@@Base+0xa78>
   171e4:	push	{r0, r1, r2, r4, r5, lr}
   171e8:	mov	r5, r0
   171ec:	bl	11594 <__errno_location@plt>
   171f0:	ldr	r3, [r0]
   171f4:	mov	r4, r0
   171f8:	str	r3, [sp]
   171fc:	str	r3, [sp, #4]
   17200:	mov	r3, #0
   17204:	str	r3, [r0]
   17208:	mov	r0, r5
   1720c:	bl	11414 <free@plt>
   17210:	ldr	r3, [r4]
   17214:	add	r2, sp, #8
   17218:	cmp	r3, #0
   1721c:	moveq	r3, #4
   17220:	movne	r3, #0
   17224:	add	r3, r2, r3
   17228:	ldr	r3, [r3, #-8]
   1722c:	str	r3, [r4]
   17230:	add	sp, sp, #12
   17234:	pop	{r4, r5, pc}
   17238:	push	{r0, r1, r2, r3, r4, lr}
   1723c:	mov	ip, #0
   17240:	str	ip, [sp, #8]
   17244:	str	ip, [sp, #4]
   17248:	ldr	ip, [sp, #24]
   1724c:	str	ip, [sp]
   17250:	bl	1b9d4 <argp_error@@Base+0xae4>
   17254:	add	sp, sp, #20
   17258:	pop	{pc}		; (ldr pc, [sp], #4)
   1725c:	push	{r0, r1, r2, r3, r4, lr}
   17260:	mov	ip, #0
   17264:	ldr	lr, [sp, #28]
   17268:	str	ip, [sp, #12]
   1726c:	stmib	sp, {ip, lr}
   17270:	ldr	ip, [sp, #24]
   17274:	str	ip, [sp]
   17278:	bl	1b4dc <argp_error@@Base+0x5ec>
   1727c:	add	sp, sp, #20
   17280:	pop	{pc}		; (ldr pc, [sp], #4)
   17284:	push	{r0, r1, r2, r3, r4, lr}
   17288:	mov	ip, #1
   1728c:	mov	lr, #0
   17290:	stmib	sp, {ip, lr}
   17294:	ldr	ip, [sp, #24]
   17298:	str	ip, [sp]
   1729c:	bl	1b9d4 <argp_error@@Base+0xae4>
   172a0:	add	sp, sp, #20
   172a4:	pop	{pc}		; (ldr pc, [sp], #4)
   172a8:	push	{r0, r1, r2, r3, r4, lr}
   172ac:	mov	ip, #0
   172b0:	str	ip, [sp, #12]
   172b4:	ldr	ip, [sp, #28]
   172b8:	str	ip, [sp, #8]
   172bc:	mov	ip, #1
   172c0:	str	ip, [sp, #4]
   172c4:	ldr	ip, [sp, #24]
   172c8:	str	ip, [sp]
   172cc:	bl	1b4dc <argp_error@@Base+0x5ec>
   172d0:	add	sp, sp, #20
   172d4:	pop	{pc}		; (ldr pc, [sp], #4)
   172d8:	push	{r1, r2, r3}
   172dc:	push	{r0, r1, lr}
   172e0:	add	r3, sp, #16
   172e4:	ldr	r2, [sp, #16]
   172e8:	ldr	r1, [sp, #12]
   172ec:	str	r3, [sp, #4]
   172f0:	bl	114b0 <ioctl@plt>
   172f4:	add	sp, sp, #8
   172f8:	pop	{lr}		; (ldr lr, [sp], #4)
   172fc:	add	sp, sp, #12
   17300:	bx	lr
   17304:	ldr	r3, [pc, #28]	; 17328 <argp_parse@@Base+0xbe0>
   17308:	push	{r4, lr}
   1730c:	ldr	r0, [r3]
   17310:	ldr	r2, [pc, #20]	; 1732c <argp_parse@@Base+0xbe4>
   17314:	ldr	r1, [pc, #20]	; 17330 <argp_parse@@Base+0xbe8>
   17318:	bl	11588 <fprintf@plt>
   1731c:	ldr	r3, [pc, #16]	; 17334 <argp_parse@@Base+0xbec>
   17320:	ldr	r0, [r3]
   17324:	bl	11558 <exit@plt>
   17328:	andeq	r0, r3, r0, asr fp
   1732c:	muleq	r1, r4, lr
   17330:	strdeq	lr, [r1], -r5
   17334:	andeq	r0, r3, r0, lsr fp
   17338:	mov	r3, r0
   1733c:	mov	r0, r1
   17340:	ldrb	r2, [r3, #40]	; 0x28
   17344:	tst	r2, #1
   17348:	beq	17358 <argp_parse@@Base+0xc10>
   1734c:	ldr	r2, [r3, #28]
   17350:	ldr	r0, [r3, #36]	; 0x24
   17354:	bx	r2
   17358:	ldr	r3, [r3, #28]
   1735c:	bx	r3
   17360:	mov	r3, r0
   17364:	mov	r0, r1
   17368:	ldrb	r2, [r3, #40]	; 0x28
   1736c:	tst	r2, #1
   17370:	beq	17380 <argp_parse@@Base+0xc38>
   17374:	ldr	r2, [r3, #32]
   17378:	ldr	r0, [r3, #36]	; 0x24
   1737c:	bx	r2
   17380:	ldr	r3, [r3, #32]
   17384:	bx	r3
   17388:	cmp	r2, #0
   1738c:	ldr	r3, [pc, #128]	; 17414 <argp_parse@@Base+0xccc>
   17390:	push	{r4, r5, r6, lr}
   17394:	movne	r5, r2
   17398:	moveq	r5, #8
   1739c:	cmp	r1, #0
   173a0:	moveq	r1, r3
   173a4:	sub	r6, r5, #1
   173a8:	str	r1, [r0]
   173ac:	str	r6, [r0, #24]
   173b0:	mov	r4, r0
   173b4:	bl	17338 <argp_parse@@Base+0xbf0>
   173b8:	cmp	r0, #0
   173bc:	str	r0, [r4, #4]
   173c0:	bne	173d0 <argp_parse@@Base+0xc88>
   173c4:	ldr	r3, [pc, #76]	; 17418 <argp_parse@@Base+0xcd0>
   173c8:	ldr	r3, [r3]
   173cc:	blx	r3
   173d0:	add	r3, r0, #8
   173d4:	add	r3, r3, r6
   173d8:	rsb	r2, r5, #0
   173dc:	and	r2, r2, r3
   173e0:	ldr	r3, [r4]
   173e4:	str	r2, [r4, #8]
   173e8:	add	r3, r0, r3
   173ec:	str	r2, [r4, #12]
   173f0:	str	r3, [r0]
   173f4:	str	r3, [r4, #16]
   173f8:	mov	r3, #0
   173fc:	str	r3, [r0, #4]
   17400:	ldrb	r3, [r4, #40]	; 0x28
   17404:	mov	r0, #1
   17408:	and	r3, r3, #249	; 0xf9
   1740c:	strb	r3, [r4, #40]	; 0x28
   17410:	pop	{r4, r5, r6, pc}
   17414:	andeq	r0, r0, r8, ror #31
   17418:	andeq	r0, r3, r4, lsl #22

0001741c <_obstack_begin@@Base>:
   1741c:	str	r3, [r0, #28]
   17420:	ldr	r3, [sp]
   17424:	str	r3, [r0, #32]
   17428:	ldrb	r3, [r0, #40]	; 0x28
   1742c:	bic	r3, r3, #1
   17430:	strb	r3, [r0, #40]	; 0x28
   17434:	b	17388 <argp_parse@@Base+0xc40>

00017438 <_obstack_begin_1@@Base>:
   17438:	str	r3, [r0, #28]
   1743c:	ldr	r3, [sp]
   17440:	str	r3, [r0, #32]
   17444:	ldr	r3, [sp, #4]
   17448:	str	r3, [r0, #36]	; 0x24
   1744c:	ldrb	r3, [r0, #40]	; 0x28
   17450:	orr	r3, r3, #1
   17454:	strb	r3, [r0, #40]	; 0x28
   17458:	b	17388 <argp_parse@@Base+0xc40>

0001745c <_obstack_newchunk@@Base>:
   1745c:	push	{r4, r5, r6, r7, r8, lr}
   17460:	ldr	r3, [r0, #8]
   17464:	ldr	r5, [r0, #12]
   17468:	sub	r6, r5, r3
   1746c:	ldr	r3, [r0, #24]
   17470:	add	r1, r6, r1
   17474:	adds	r3, r1, r3
   17478:	movcc	r2, #1
   1747c:	movcs	r2, #0
   17480:	cmp	r6, r1
   17484:	movhi	r1, #0
   17488:	andls	r1, r2, #1
   1748c:	cmp	r1, #0
   17490:	bne	174a0 <_obstack_newchunk@@Base+0x44>
   17494:	ldr	r3, [pc, #196]	; 17560 <_obstack_newchunk@@Base+0x104>
   17498:	ldr	r3, [r3]
   1749c:	blx	r3
   174a0:	ldr	r2, [r0]
   174a4:	add	r5, r3, r6, lsr #3
   174a8:	cmp	r3, r2
   174ac:	add	r5, r5, #100	; 0x64
   174b0:	movcc	r3, r2
   174b4:	cmp	r3, r5
   174b8:	movcs	r5, r3
   174bc:	mov	r1, r5
   174c0:	mov	r4, r0
   174c4:	ldr	r8, [r0, #4]
   174c8:	bl	17338 <argp_parse@@Base+0xbf0>
   174cc:	subs	r7, r0, #0
   174d0:	beq	17494 <_obstack_newchunk@@Base+0x38>
   174d4:	mov	r3, r7
   174d8:	add	r5, r7, r5
   174dc:	str	r7, [r4, #4]
   174e0:	str	r8, [r7, #4]
   174e4:	str	r5, [r4, #16]
   174e8:	str	r5, [r3], #8
   174ec:	ldr	r5, [r4, #24]
   174f0:	mov	r2, r6
   174f4:	add	r3, r3, r5
   174f8:	bic	r5, r3, r5
   174fc:	ldr	r1, [r4, #8]
   17500:	mov	r0, r5
   17504:	bl	11444 <memcpy@plt>
   17508:	ldrb	r3, [r4, #40]	; 0x28
   1750c:	tst	r3, #2
   17510:	bne	17544 <_obstack_newchunk@@Base+0xe8>
   17514:	ldr	r2, [r4, #24]
   17518:	add	r3, r8, #8
   1751c:	add	r3, r3, r2
   17520:	bic	r3, r3, r2
   17524:	ldr	r2, [r4, #8]
   17528:	cmp	r2, r3
   1752c:	bne	17544 <_obstack_newchunk@@Base+0xe8>
   17530:	ldr	r3, [r8, #4]
   17534:	mov	r1, r8
   17538:	str	r3, [r7, #4]
   1753c:	mov	r0, r4
   17540:	bl	17360 <argp_parse@@Base+0xc18>
   17544:	ldrb	r3, [r4, #40]	; 0x28
   17548:	str	r5, [r4, #8]
   1754c:	add	r5, r5, r6
   17550:	bic	r3, r3, #2
   17554:	str	r5, [r4, #12]
   17558:	strb	r3, [r4, #40]	; 0x28
   1755c:	pop	{r4, r5, r6, r7, r8, pc}
   17560:	andeq	r0, r3, r4, lsl #22

00017564 <_obstack_allocated_p@@Base>:
   17564:	ldr	r0, [r0, #4]
   17568:	cmp	r0, #0
   1756c:	beq	17584 <_obstack_allocated_p@@Base+0x20>
   17570:	cmp	r0, r1
   17574:	bcs	17564 <_obstack_allocated_p@@Base>
   17578:	ldr	r3, [r0]
   1757c:	cmp	r1, r3
   17580:	bhi	17564 <_obstack_allocated_p@@Base>
   17584:	adds	r0, r0, #0
   17588:	movne	r0, #1
   1758c:	bx	lr

00017590 <_obstack_free@@Base>:
   17590:	push	{r4, r5, r6, lr}
   17594:	mov	r5, r1
   17598:	ldr	r1, [r0, #4]
   1759c:	mov	r4, r0
   175a0:	cmp	r1, #0
   175a4:	beq	175f4 <_obstack_free@@Base+0x64>
   175a8:	cmp	r1, r5
   175ac:	bcs	175d0 <_obstack_free@@Base+0x40>
   175b0:	ldr	r3, [r1]
   175b4:	cmp	r5, r3
   175b8:	bhi	175d0 <_obstack_free@@Base+0x40>
   175bc:	str	r5, [r4, #12]
   175c0:	str	r5, [r4, #8]
   175c4:	str	r3, [r4, #16]
   175c8:	str	r1, [r4, #4]
   175cc:	pop	{r4, r5, r6, pc}
   175d0:	mov	r0, r4
   175d4:	ldr	r6, [r1, #4]
   175d8:	bl	17360 <argp_parse@@Base+0xc18>
   175dc:	ldrb	r3, [r4, #40]	; 0x28
   175e0:	mov	r1, r6
   175e4:	orr	r3, r3, #2
   175e8:	strb	r3, [r4, #40]	; 0x28
   175ec:	b	175a0 <_obstack_free@@Base+0x10>
   175f0:	bl	116fc <abort@plt>
   175f4:	cmp	r5, #0
   175f8:	bne	175f0 <_obstack_free@@Base+0x60>
   175fc:	pop	{r4, r5, r6, pc}

00017600 <_obstack_memory_used@@Base>:
   17600:	ldr	r3, [r0, #4]
   17604:	mov	r0, #0
   17608:	cmp	r3, #0
   1760c:	bne	17614 <_obstack_memory_used@@Base+0x14>
   17610:	bx	lr
   17614:	ldr	r2, [r3]
   17618:	sub	r2, r2, r3
   1761c:	add	r0, r0, r2
   17620:	ldr	r3, [r3, #4]
   17624:	b	17608 <_obstack_memory_used@@Base+0x8>
   17628:	push	{r4, r5, r6, lr}
   1762c:	subs	r5, r0, #0
   17630:	bne	17648 <_obstack_memory_used@@Base+0x48>
   17634:	ldr	r3, [pc, #124]	; 176b8 <_obstack_memory_used@@Base+0xb8>
   17638:	ldr	r0, [pc, #124]	; 176bc <_obstack_memory_used@@Base+0xbc>
   1763c:	ldr	r1, [r3]
   17640:	bl	116e4 <fputs@plt>
   17644:	bl	116fc <abort@plt>
   17648:	mov	r1, #47	; 0x2f
   1764c:	bl	11624 <strrchr@plt>
   17650:	cmp	r0, #0
   17654:	addne	r4, r0, #1
   17658:	moveq	r4, r5
   1765c:	sub	r3, r4, r5
   17660:	cmp	r3, #6
   17664:	ble	176a4 <_obstack_memory_used@@Base+0xa4>
   17668:	mov	r2, #7
   1766c:	ldr	r1, [pc, #76]	; 176c0 <_obstack_memory_used@@Base+0xc0>
   17670:	sub	r0, r4, #7
   17674:	bl	116f0 <strncmp@plt>
   17678:	cmp	r0, #0
   1767c:	bne	176a4 <_obstack_memory_used@@Base+0xa4>
   17680:	mov	r2, #3
   17684:	ldr	r1, [pc, #56]	; 176c4 <_obstack_memory_used@@Base+0xc4>
   17688:	mov	r0, r4
   1768c:	bl	116f0 <strncmp@plt>
   17690:	cmp	r0, #0
   17694:	movne	r5, r4
   17698:	ldreq	r3, [pc, #40]	; 176c8 <_obstack_memory_used@@Base+0xc8>
   1769c:	addeq	r5, r4, #3
   176a0:	streq	r5, [r3]
   176a4:	ldr	r3, [pc, #32]	; 176cc <_obstack_memory_used@@Base+0xcc>
   176a8:	str	r5, [r3]
   176ac:	ldr	r3, [pc, #28]	; 176d0 <_obstack_memory_used@@Base+0xd0>
   176b0:	str	r5, [r3]
   176b4:	pop	{r4, r5, r6, pc}
   176b8:	andeq	r0, r3, r0, asr fp
   176bc:	andeq	lr, r1, r5, lsr #29
   176c0:	ldrdeq	lr, [r1], -sp
   176c4:	andeq	lr, r1, r5, ror #29
   176c8:	andeq	r0, r3, r8, asr #22
   176cc:	andeq	r0, r3, ip, asr #23
   176d0:	andeq	r0, r3, ip, asr #22
   176d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d8:	sub	sp, sp, #116	; 0x74
   176dc:	mov	r8, r1
   176e0:	mov	fp, r2
   176e4:	mov	r9, r0
   176e8:	bl	115e8 <fileno@plt>
   176ec:	add	r1, sp, #8
   176f0:	bl	1c594 <argp_error@@Base+0x16a4>
   176f4:	cmp	r0, #0
   176f8:	bge	177a8 <_obstack_memory_used@@Base+0x1a8>
   176fc:	mov	r4, #8192	; 0x2000
   17700:	mov	r0, r4
   17704:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   17708:	subs	r5, r0, #0
   1770c:	beq	1779c <_obstack_memory_used@@Base+0x19c>
   17710:	mov	r6, #0
   17714:	mvn	sl, #-2147483648	; 0x80000000
   17718:	and	r3, r8, #2
   1771c:	str	r3, [sp]
   17720:	sub	r7, r4, r6
   17724:	add	r0, r5, r6
   17728:	mov	r3, r9
   1772c:	mov	r2, r7
   17730:	mov	r1, #1
   17734:	bl	114c8 <fread@plt>
   17738:	cmp	r7, r0
   1773c:	add	r6, r6, r0
   17740:	beq	1784c <_obstack_memory_used@@Base+0x24c>
   17744:	bl	11594 <__errno_location@plt>
   17748:	ldr	sl, [r0]
   1774c:	mov	r0, r9
   17750:	bl	1142c <ferror@plt>
   17754:	cmp	r0, #0
   17758:	bne	17890 <_obstack_memory_used@@Base+0x290>
   1775c:	sub	r3, r4, #1
   17760:	cmp	r6, r3
   17764:	bcs	17790 <_obstack_memory_used@@Base+0x190>
   17768:	tst	r8, #2
   1776c:	add	r1, r6, #1
   17770:	beq	17838 <_obstack_memory_used@@Base+0x238>
   17774:	mov	r0, r1
   17778:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1777c:	subs	r7, r0, #0
   17780:	bne	17810 <_obstack_memory_used@@Base+0x210>
   17784:	sub	r1, r4, r6
   17788:	add	r0, r5, r6
   1778c:	bl	1169c <explicit_bzero@plt>
   17790:	mov	r3, #0
   17794:	strb	r3, [r5, r6]
   17798:	str	r6, [fp]
   1779c:	mov	r0, r5
   177a0:	add	sp, sp, #116	; 0x74
   177a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177a8:	ldr	r3, [sp, #24]
   177ac:	and	r3, r3, #61440	; 0xf000
   177b0:	cmp	r3, #32768	; 0x8000
   177b4:	bne	176fc <_obstack_memory_used@@Base+0xfc>
   177b8:	mov	r0, r9
   177bc:	bl	1172c <ftello64@plt>
   177c0:	cmp	r0, #0
   177c4:	sbcs	r3, r1, #0
   177c8:	blt	176fc <_obstack_memory_used@@Base+0xfc>
   177cc:	ldrd	r4, [sp, #56]	; 0x38
   177d0:	cmp	r0, r4
   177d4:	sbcs	r3, r1, r5
   177d8:	bge	176fc <_obstack_memory_used@@Base+0xfc>
   177dc:	subs	r4, r4, r0
   177e0:	mvn	r2, #-2147483647	; 0x80000001
   177e4:	sbc	r5, r5, r1
   177e8:	mov	r3, #0
   177ec:	cmp	r2, r4
   177f0:	sbcs	r3, r3, r5
   177f4:	addge	r4, r4, #1
   177f8:	bge	17700 <_obstack_memory_used@@Base+0x100>
   177fc:	bl	11594 <__errno_location@plt>
   17800:	mov	r3, #12
   17804:	str	r3, [r0]
   17808:	mov	r5, #0
   1780c:	b	1779c <_obstack_memory_used@@Base+0x19c>
   17810:	mov	r2, r6
   17814:	mov	r1, r5
   17818:	bl	11444 <memcpy@plt>
   1781c:	mov	r0, r5
   17820:	mov	r1, r4
   17824:	bl	1169c <explicit_bzero@plt>
   17828:	mov	r0, r5
   1782c:	bl	171e4 <argp_parse@@Base+0xa9c>
   17830:	mov	r5, r7
   17834:	b	17790 <_obstack_memory_used@@Base+0x190>
   17838:	mov	r0, r5
   1783c:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   17840:	cmp	r0, #0
   17844:	movne	r5, r0
   17848:	b	17790 <_obstack_memory_used@@Base+0x190>
   1784c:	cmn	r4, #-2147483647	; 0x80000001
   17850:	beq	17904 <_obstack_memory_used@@Base+0x304>
   17854:	lsr	r7, r4, #1
   17858:	sub	r3, sl, r7
   1785c:	cmp	r4, r3
   17860:	ldr	r3, [sp]
   17864:	addcc	r7, r4, r7
   17868:	movcs	r7, sl
   1786c:	cmp	r3, #0
   17870:	beq	178ec <_obstack_memory_used@@Base+0x2ec>
   17874:	mov	r0, r7
   17878:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1787c:	subs	r3, r0, #0
   17880:	bne	178b8 <_obstack_memory_used@@Base+0x2b8>
   17884:	bl	11594 <__errno_location@plt>
   17888:	mov	r4, r7
   1788c:	ldr	sl, [r0]
   17890:	tst	r8, #2
   17894:	beq	178a4 <_obstack_memory_used@@Base+0x2a4>
   17898:	mov	r1, r4
   1789c:	mov	r0, r5
   178a0:	bl	1169c <explicit_bzero@plt>
   178a4:	mov	r0, r5
   178a8:	bl	171e4 <argp_parse@@Base+0xa9c>
   178ac:	bl	11594 <__errno_location@plt>
   178b0:	str	sl, [r0]
   178b4:	b	17808 <_obstack_memory_used@@Base+0x208>
   178b8:	mov	r2, r4
   178bc:	mov	r1, r5
   178c0:	str	r3, [sp, #4]
   178c4:	bl	11444 <memcpy@plt>
   178c8:	mov	r1, r4
   178cc:	mov	r0, r5
   178d0:	bl	1169c <explicit_bzero@plt>
   178d4:	mov	r0, r5
   178d8:	bl	171e4 <argp_parse@@Base+0xa9c>
   178dc:	ldr	r3, [sp, #4]
   178e0:	mov	r4, r7
   178e4:	mov	r5, r3
   178e8:	b	17720 <_obstack_memory_used@@Base+0x120>
   178ec:	mov	r1, r7
   178f0:	mov	r0, r5
   178f4:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   178f8:	subs	r3, r0, #0
   178fc:	bne	178e0 <_obstack_memory_used@@Base+0x2e0>
   17900:	b	17884 <_obstack_memory_used@@Base+0x284>
   17904:	mov	sl, #12
   17908:	b	17890 <_obstack_memory_used@@Base+0x290>
   1790c:	ldr	r3, [pc, #144]	; 179a4 <_obstack_memory_used@@Base+0x3a4>
   17910:	tst	r1, #1
   17914:	push	{r4, r5, r6, r7, r8, lr}
   17918:	mov	r4, r1
   1791c:	ldr	r1, [pc, #132]	; 179a8 <_obstack_memory_used@@Base+0x3a8>
   17920:	moveq	r1, r3
   17924:	mov	r5, r2
   17928:	bl	11684 <fopen64@plt>
   1792c:	subs	r6, r0, #0
   17930:	bne	17940 <_obstack_memory_used@@Base+0x340>
   17934:	mov	r4, #0
   17938:	mov	r0, r4
   1793c:	pop	{r4, r5, r6, r7, r8, pc}
   17940:	ands	r7, r4, #2
   17944:	beq	17958 <_obstack_memory_used@@Base+0x358>
   17948:	mov	r3, #0
   1794c:	mov	r2, #2
   17950:	mov	r1, r3
   17954:	bl	115b8 <setvbuf@plt>
   17958:	mov	r1, r4
   1795c:	mov	r2, r5
   17960:	mov	r0, r6
   17964:	bl	176d4 <_obstack_memory_used@@Base+0xd4>
   17968:	mov	r4, r0
   1796c:	mov	r0, r6
   17970:	bl	11600 <fclose@plt>
   17974:	cmp	r0, #0
   17978:	beq	17938 <_obstack_memory_used@@Base+0x338>
   1797c:	cmp	r4, #0
   17980:	beq	17934 <_obstack_memory_used@@Base+0x334>
   17984:	cmp	r7, #0
   17988:	beq	17998 <_obstack_memory_used@@Base+0x398>
   1798c:	ldr	r1, [r5]
   17990:	mov	r0, r4
   17994:	bl	1169c <explicit_bzero@plt>
   17998:	mov	r0, r4
   1799c:	bl	171e4 <argp_parse@@Base+0xa9c>
   179a0:	b	17934 <_obstack_memory_used@@Base+0x334>
   179a4:	andeq	lr, r1, r0, ror #21
   179a8:	andeq	lr, r1, r9, ror #29
   179ac:	push	{r4, r5, r6, lr}
   179b0:	sub	sp, sp, #32
   179b4:	cmp	r1, #0
   179b8:	mov	r5, r0
   179bc:	ldr	r4, [sp, #48]	; 0x30
   179c0:	ldr	r6, [sp, #52]	; 0x34
   179c4:	beq	17a4c <_obstack_memory_used@@Base+0x44c>
   179c8:	str	r3, [sp]
   179cc:	mov	r3, r2
   179d0:	mov	r2, r1
   179d4:	ldr	r1, [pc, #616]	; 17c44 <_obstack_memory_used@@Base+0x644>
   179d8:	bl	11588 <fprintf@plt>
   179dc:	ldr	r3, [pc, #612]	; 17c48 <_obstack_memory_used@@Base+0x648>
   179e0:	ldr	r2, [pc, #612]	; 17c4c <_obstack_memory_used@@Base+0x64c>
   179e4:	ldr	r1, [pc, #612]	; 17c50 <_obstack_memory_used@@Base+0x650>
   179e8:	mov	r0, r5
   179ec:	bl	11588 <fprintf@plt>
   179f0:	mov	r1, r5
   179f4:	mov	r0, #10
   179f8:	bl	1163c <fputc@plt>
   179fc:	ldr	r1, [pc, #592]	; 17c54 <_obstack_memory_used@@Base+0x654>
   17a00:	ldr	r2, [pc, #592]	; 17c58 <_obstack_memory_used@@Base+0x658>
   17a04:	mov	r0, r5
   17a08:	bl	11588 <fprintf@plt>
   17a0c:	mov	r1, r5
   17a10:	mov	r0, #10
   17a14:	bl	1163c <fputc@plt>
   17a18:	cmp	r6, #9
   17a1c:	ldrls	pc, [pc, r6, lsl #2]
   17a20:	b	17c00 <_obstack_memory_used@@Base+0x600>
   17a24:	strdeq	r7, [r1], -r8
   17a28:	andeq	r7, r1, r8, asr sl
   17a2c:	andeq	r7, r1, r0, ror sl
   17a30:	andeq	r7, r1, r8, lsl #21
   17a34:	andeq	r7, r1, r8, lsr #21
   17a38:	ldrdeq	r7, [r1], -r0
   17a3c:	andeq	r7, r1, r0, lsl #22
   17a40:	andeq	r7, r1, r4, lsr fp
   17a44:	andeq	r7, r1, r0, ror fp
   17a48:			; <UNDEFINED> instruction: 0x00017bb4
   17a4c:	ldr	r1, [pc, #520]	; 17c5c <_obstack_memory_used@@Base+0x65c>
   17a50:	bl	11588 <fprintf@plt>
   17a54:	b	179dc <_obstack_memory_used@@Base+0x3dc>
   17a58:	ldr	r2, [r4]
   17a5c:	ldr	r1, [pc, #508]	; 17c60 <_obstack_memory_used@@Base+0x660>
   17a60:	mov	r0, r5
   17a64:	add	sp, sp, #32
   17a68:	pop	{r4, r5, r6, lr}
   17a6c:	b	11588 <fprintf@plt>
   17a70:	ldm	r4, {r2, r3}
   17a74:	ldr	r1, [pc, #488]	; 17c64 <_obstack_memory_used@@Base+0x664>
   17a78:	mov	r0, r5
   17a7c:	add	sp, sp, #32
   17a80:	pop	{r4, r5, r6, lr}
   17a84:	b	11588 <fprintf@plt>
   17a88:	ldr	r3, [r4, #8]
   17a8c:	ldr	r1, [pc, #468]	; 17c68 <_obstack_memory_used@@Base+0x668>
   17a90:	str	r3, [sp, #48]	; 0x30
   17a94:	mov	r0, r5
   17a98:	ldm	r4, {r2, r3}
   17a9c:	add	sp, sp, #32
   17aa0:	pop	{r4, r5, r6, lr}
   17aa4:	b	11588 <fprintf@plt>
   17aa8:	ldr	r3, [r4, #12]
   17aac:	ldr	r1, [pc, #440]	; 17c6c <_obstack_memory_used@@Base+0x66c>
   17ab0:	str	r3, [sp, #52]	; 0x34
   17ab4:	ldr	r3, [r4, #8]
   17ab8:	mov	r0, r5
   17abc:	str	r3, [sp, #48]	; 0x30
   17ac0:	ldm	r4, {r2, r3}
   17ac4:	add	sp, sp, #32
   17ac8:	pop	{r4, r5, r6, lr}
   17acc:	b	11588 <fprintf@plt>
   17ad0:	ldr	r3, [r4, #16]
   17ad4:	ldr	r1, [pc, #404]	; 17c70 <_obstack_memory_used@@Base+0x670>
   17ad8:	str	r3, [sp, #8]
   17adc:	ldr	r3, [r4, #12]
   17ae0:	mov	r0, r5
   17ae4:	str	r3, [sp, #4]
   17ae8:	ldr	r3, [r4, #8]
   17aec:	str	r3, [sp]
   17af0:	ldm	r4, {r2, r3}
   17af4:	bl	11588 <fprintf@plt>
   17af8:	add	sp, sp, #32
   17afc:	pop	{r4, r5, r6, pc}
   17b00:	ldr	r3, [r4, #20]
   17b04:	ldr	r1, [pc, #360]	; 17c74 <_obstack_memory_used@@Base+0x674>
   17b08:	str	r3, [sp, #12]
   17b0c:	ldr	r3, [r4, #16]
   17b10:	mov	r0, r5
   17b14:	str	r3, [sp, #8]
   17b18:	ldr	r3, [r4, #12]
   17b1c:	str	r3, [sp, #4]
   17b20:	ldr	r3, [r4, #8]
   17b24:	str	r3, [sp]
   17b28:	ldm	r4, {r2, r3}
   17b2c:	bl	11588 <fprintf@plt>
   17b30:	b	17af8 <_obstack_memory_used@@Base+0x4f8>
   17b34:	ldr	r3, [r4, #24]
   17b38:	ldr	r1, [pc, #312]	; 17c78 <_obstack_memory_used@@Base+0x678>
   17b3c:	str	r3, [sp, #16]
   17b40:	ldr	r3, [r4, #20]
   17b44:	mov	r0, r5
   17b48:	str	r3, [sp, #12]
   17b4c:	ldr	r3, [r4, #16]
   17b50:	str	r3, [sp, #8]
   17b54:	ldr	r3, [r4, #12]
   17b58:	str	r3, [sp, #4]
   17b5c:	ldr	r3, [r4, #8]
   17b60:	str	r3, [sp]
   17b64:	ldm	r4, {r2, r3}
   17b68:	bl	11588 <fprintf@plt>
   17b6c:	b	17af8 <_obstack_memory_used@@Base+0x4f8>
   17b70:	ldr	r3, [r4, #28]
   17b74:	ldr	r1, [pc, #256]	; 17c7c <_obstack_memory_used@@Base+0x67c>
   17b78:	str	r3, [sp, #20]
   17b7c:	ldr	r3, [r4, #24]
   17b80:	mov	r0, r5
   17b84:	str	r3, [sp, #16]
   17b88:	ldr	r3, [r4, #20]
   17b8c:	str	r3, [sp, #12]
   17b90:	ldr	r3, [r4, #16]
   17b94:	str	r3, [sp, #8]
   17b98:	ldr	r3, [r4, #12]
   17b9c:	str	r3, [sp, #4]
   17ba0:	ldr	r3, [r4, #8]
   17ba4:	str	r3, [sp]
   17ba8:	ldm	r4, {r2, r3}
   17bac:	bl	11588 <fprintf@plt>
   17bb0:	b	17af8 <_obstack_memory_used@@Base+0x4f8>
   17bb4:	ldr	r3, [r4, #32]
   17bb8:	ldr	r1, [pc, #192]	; 17c80 <_obstack_memory_used@@Base+0x680>
   17bbc:	str	r3, [sp, #24]
   17bc0:	ldr	r3, [r4, #28]
   17bc4:	str	r3, [sp, #20]
   17bc8:	ldr	r3, [r4, #24]
   17bcc:	str	r3, [sp, #16]
   17bd0:	ldr	r3, [r4, #20]
   17bd4:	str	r3, [sp, #12]
   17bd8:	ldr	r3, [r4, #16]
   17bdc:	str	r3, [sp, #8]
   17be0:	ldr	r3, [r4, #12]
   17be4:	str	r3, [sp, #4]
   17be8:	ldr	r3, [r4, #8]
   17bec:	str	r3, [sp]
   17bf0:	ldm	r4, {r2, r3}
   17bf4:	mov	r0, r5
   17bf8:	bl	11588 <fprintf@plt>
   17bfc:	b	17af8 <_obstack_memory_used@@Base+0x4f8>
   17c00:	ldr	r3, [r4, #32]
   17c04:	ldr	r1, [pc, #120]	; 17c84 <_obstack_memory_used@@Base+0x684>
   17c08:	str	r3, [sp, #24]
   17c0c:	ldr	r3, [r4, #28]
   17c10:	str	r3, [sp, #20]
   17c14:	ldr	r3, [r4, #24]
   17c18:	str	r3, [sp, #16]
   17c1c:	ldr	r3, [r4, #20]
   17c20:	str	r3, [sp, #12]
   17c24:	ldr	r3, [r4, #16]
   17c28:	str	r3, [sp, #8]
   17c2c:	ldr	r3, [r4, #12]
   17c30:	str	r3, [sp, #4]
   17c34:	ldr	r3, [r4, #8]
   17c38:	str	r3, [sp]
   17c3c:	ldm	r4, {r2, r3}
   17c40:	b	17bf4 <_obstack_memory_used@@Base+0x5f4>
   17c44:	andeq	lr, r1, sp, ror #29
   17c48:	andeq	r0, r0, r6, ror #15
   17c4c:	andeq	lr, r1, r0, lsl #30
   17c50:	strdeq	pc, [r1], -r5
   17c54:	andeq	lr, r1, r6, lsr #30
   17c58:	andeq	lr, r1, r4, lsl #30
   17c5c:	strdeq	lr, [r1], -r9
   17c60:	ldrdeq	lr, [r1], -r1
   17c64:	andeq	lr, r1, r1, ror #31
   17c68:	strdeq	lr, [r1], -r8
   17c6c:	andeq	pc, r1, r4, lsl r0	; <UNPREDICTABLE>
   17c70:	andeq	pc, r1, r4, lsr r0	; <UNPREDICTABLE>
   17c74:	andeq	pc, r1, r8, asr r0	; <UNPREDICTABLE>
   17c78:	andeq	pc, r1, r0, lsl #1
   17c7c:	andeq	pc, r1, ip, lsr #1
   17c80:	ldrdeq	pc, [r1], -ip
   17c84:	andeq	pc, r1, r0, lsl r1	; <UNPREDICTABLE>
   17c88:	push	{r0, r1, r4, lr}
   17c8c:	mov	ip, #0
   17c90:	ldr	lr, [sp, #16]
   17c94:	ldr	r4, [lr, ip, lsl #2]
   17c98:	cmp	r4, #0
   17c9c:	bne	17cb4 <_obstack_memory_used@@Base+0x6b4>
   17ca0:	str	ip, [sp, #4]
   17ca4:	str	lr, [sp]
   17ca8:	bl	179ac <_obstack_memory_used@@Base+0x3ac>
   17cac:	add	sp, sp, #8
   17cb0:	pop	{r4, pc}
   17cb4:	add	ip, ip, #1
   17cb8:	b	17c94 <_obstack_memory_used@@Base+0x694>
   17cbc:	push	{r4, r5, lr}
   17cc0:	sub	sp, sp, #52	; 0x34
   17cc4:	mov	ip, #0
   17cc8:	ldr	r5, [sp, #64]	; 0x40
   17ccc:	add	lr, sp, #8
   17cd0:	ldr	r4, [r5, ip, lsl #2]
   17cd4:	cmp	r4, #0
   17cd8:	str	r4, [lr, ip, lsl #2]
   17cdc:	beq	17cec <_obstack_memory_used@@Base+0x6ec>
   17ce0:	add	ip, ip, #1
   17ce4:	cmp	ip, #10
   17ce8:	bne	17cd0 <_obstack_memory_used@@Base+0x6d0>
   17cec:	str	ip, [sp, #4]
   17cf0:	str	lr, [sp]
   17cf4:	bl	179ac <_obstack_memory_used@@Base+0x3ac>
   17cf8:	add	sp, sp, #52	; 0x34
   17cfc:	pop	{r4, r5, pc}
   17d00:	push	{r3}		; (str r3, [sp, #-4]!)
   17d04:	push	{r0, r1, r2, r3, lr}
   17d08:	add	r3, sp, #24
   17d0c:	str	r3, [sp, #12]
   17d10:	str	r3, [sp]
   17d14:	ldr	r3, [sp, #20]
   17d18:	bl	17cbc <_obstack_memory_used@@Base+0x6bc>
   17d1c:	add	sp, sp, #16
   17d20:	pop	{lr}		; (ldr lr, [sp], #4)
   17d24:	add	sp, sp, #4
   17d28:	bx	lr
   17d2c:	ldr	r3, [pc, #56]	; 17d6c <_obstack_memory_used@@Base+0x76c>
   17d30:	push	{r4, lr}
   17d34:	mov	r0, #10
   17d38:	ldr	r1, [r3]
   17d3c:	bl	1163c <fputc@plt>
   17d40:	ldr	r1, [pc, #40]	; 17d70 <_obstack_memory_used@@Base+0x770>
   17d44:	ldr	r0, [pc, #40]	; 17d74 <_obstack_memory_used@@Base+0x774>
   17d48:	bl	113f0 <printf@plt>
   17d4c:	ldr	r1, [pc, #36]	; 17d78 <_obstack_memory_used@@Base+0x778>
   17d50:	ldr	r2, [pc, #36]	; 17d7c <_obstack_memory_used@@Base+0x77c>
   17d54:	ldr	r0, [pc, #36]	; 17d80 <_obstack_memory_used@@Base+0x780>
   17d58:	bl	113f0 <printf@plt>
   17d5c:	ldr	r1, [pc, #32]	; 17d84 <_obstack_memory_used@@Base+0x784>
   17d60:	ldr	r0, [pc, #32]	; 17d88 <_obstack_memory_used@@Base+0x788>
   17d64:	pop	{r4, lr}
   17d68:	b	113f0 <printf@plt>
   17d6c:	andeq	r0, r3, r4, asr fp
   17d70:	andeq	pc, r1, ip, asr #2
   17d74:	andeq	pc, r1, r2, ror #2
   17d78:	andeq	lr, r1, r6, lsl #29
   17d7c:	andeq	pc, r1, r6, ror r1	; <UNPREDICTABLE>
   17d80:	muleq	r1, sp, r1
   17d84:			; <UNDEFINED> instruction: 0x0001f1b1
   17d88:	andeq	pc, r1, lr, asr #3
   17d8c:	push	{r4, lr}
   17d90:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   17d94:	cmp	r0, #0
   17d98:	popne	{r4, pc}
   17d9c:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17da0:	push	{r4, lr}
   17da4:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   17da8:	cmp	r0, #0
   17dac:	popne	{r4, pc}
   17db0:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17db4:	b	17d8c <_obstack_memory_used@@Base+0x78c>
   17db8:	push	{r4, r5, r6, lr}
   17dbc:	mov	r5, r0
   17dc0:	mov	r4, r1
   17dc4:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   17dc8:	cmp	r0, #0
   17dcc:	popne	{r4, r5, r6, pc}
   17dd0:	adds	r4, r4, #0
   17dd4:	movne	r4, #1
   17dd8:	cmp	r5, #0
   17ddc:	orreq	r4, r4, #1
   17de0:	cmp	r4, #0
   17de4:	popeq	{r4, r5, r6, pc}
   17de8:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17dec:	push	{r4, lr}
   17df0:	cmp	r1, #0
   17df4:	orreq	r1, r1, #1
   17df8:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   17dfc:	cmp	r0, #0
   17e00:	popne	{r4, pc}
   17e04:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17e08:	push	{r4, r5, r6, lr}
   17e0c:	mov	r6, r0
   17e10:	mov	r5, r1
   17e14:	mov	r4, r2
   17e18:	bl	1ba68 <argp_error@@Base+0xb78>
   17e1c:	cmp	r0, #0
   17e20:	popne	{r4, r5, r6, pc}
   17e24:	cmp	r6, #0
   17e28:	beq	17e38 <_obstack_memory_used@@Base+0x838>
   17e2c:	cmp	r5, #0
   17e30:	cmpne	r4, #0
   17e34:	popeq	{r4, r5, r6, pc}
   17e38:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17e3c:	b	17e08 <_obstack_memory_used@@Base+0x808>
   17e40:	cmp	r2, #0
   17e44:	cmpne	r1, #0
   17e48:	moveq	r2, #1
   17e4c:	moveq	r1, r2
   17e50:	push	{r4, lr}
   17e54:	bl	1ba68 <argp_error@@Base+0xb78>
   17e58:	cmp	r0, #0
   17e5c:	popne	{r4, pc}
   17e60:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17e64:	mov	r2, r1
   17e68:	mov	r1, r0
   17e6c:	mov	r0, #0
   17e70:	b	17e08 <_obstack_memory_used@@Base+0x808>
   17e74:	mov	r2, r1
   17e78:	mov	r1, r0
   17e7c:	mov	r0, #0
   17e80:	b	17e40 <_obstack_memory_used@@Base+0x840>
   17e84:	push	{r4, r5, r6, r7, r8, lr}
   17e88:	subs	r7, r0, #0
   17e8c:	mov	r5, r1
   17e90:	mov	r6, r2
   17e94:	ldr	r4, [r1]
   17e98:	bne	17ed4 <_obstack_memory_used@@Base+0x8d4>
   17e9c:	cmp	r4, #0
   17ea0:	bne	17ebc <_obstack_memory_used@@Base+0x8bc>
   17ea4:	mov	r1, r2
   17ea8:	mov	r0, #64	; 0x40
   17eac:	bl	1c0d4 <argp_error@@Base+0x11e4>
   17eb0:	cmp	r0, #0
   17eb4:	movne	r4, r0
   17eb8:	addeq	r4, r0, #1
   17ebc:	mov	r2, r6
   17ec0:	mov	r1, r4
   17ec4:	mov	r0, r7
   17ec8:	bl	17e08 <_obstack_memory_used@@Base+0x808>
   17ecc:	str	r4, [r5]
   17ed0:	pop	{r4, r5, r6, r7, r8, pc}
   17ed4:	lsr	r2, r4, #1
   17ed8:	add	r3, r2, #1
   17edc:	mvn	r3, r3
   17ee0:	cmp	r4, r3
   17ee4:	addls	r4, r4, #1
   17ee8:	addls	r4, r4, r2
   17eec:	bls	17ebc <_obstack_memory_used@@Base+0x8bc>
   17ef0:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   17ef4:	mov	r2, #1
   17ef8:	b	17e84 <_obstack_memory_used@@Base+0x884>
   17efc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f00:	mov	sl, r0
   17f04:	ldr	r8, [r1]
   17f08:	mov	fp, r1
   17f0c:	mov	r5, r2
   17f10:	asrs	r4, r8, #1
   17f14:	mov	r9, r3
   17f18:	ldr	r7, [sp, #48]	; 0x30
   17f1c:	bpl	17fb8 <_obstack_memory_used@@Base+0x9b8>
   17f20:	rsb	r2, r4, #-2147483648	; 0x80000000
   17f24:	cmp	r8, r2
   17f28:	movge	r2, #0
   17f2c:	movlt	r2, #1
   17f30:	mvn	r3, r9
   17f34:	cmp	r2, #0
   17f38:	lsr	r3, r3, #31
   17f3c:	addeq	r4, r4, r8
   17f40:	mvnne	r4, #-2147483648	; 0x80000000
   17f44:	mov	r0, r3
   17f48:	cmp	r9, r4
   17f4c:	movge	r0, #0
   17f50:	andlt	r0, r0, #1
   17f54:	cmp	r0, #0
   17f58:	str	r3, [sp, #4]
   17f5c:	bne	1812c <_obstack_memory_used@@Base+0xb2c>
   17f60:	cmp	r7, #0
   17f64:	bge	18078 <_obstack_memory_used@@Base+0xa78>
   17f68:	cmp	r4, #0
   17f6c:	bge	17fd0 <_obstack_memory_used@@Base+0x9d0>
   17f70:	mov	r1, r7
   17f74:	mvn	r0, #-2147483648	; 0x80000000
   17f78:	bl	1c2e0 <argp_error@@Base+0x13f0>
   17f7c:	cmp	r0, r4
   17f80:	movle	r0, #0
   17f84:	movgt	r0, #1
   17f88:	cmp	r0, #0
   17f8c:	mvnne	r6, #-2147483648	; 0x80000000
   17f90:	beq	17fe0 <_obstack_memory_used@@Base+0x9e0>
   17f94:	mov	r1, r7
   17f98:	mov	r0, r6
   17f9c:	bl	1c2e0 <argp_error@@Base+0x13f0>
   17fa0:	mov	r1, r7
   17fa4:	mov	r4, r0
   17fa8:	mov	r0, r6
   17fac:	bl	1c500 <argp_error@@Base+0x1610>
   17fb0:	sub	r1, r6, r1
   17fb4:	b	17ff0 <_obstack_memory_used@@Base+0x9f0>
   17fb8:	mvn	r2, #-2147483648	; 0x80000000
   17fbc:	sub	r2, r2, r4
   17fc0:	cmp	r8, r2
   17fc4:	movle	r2, #0
   17fc8:	movgt	r2, #1
   17fcc:	b	17f30 <_obstack_memory_used@@Base+0x930>
   17fd0:	cmn	r7, #1
   17fd4:	movne	r1, r7
   17fd8:	movne	r0, #-2147483648	; 0x80000000
   17fdc:	bne	18144 <_obstack_memory_used@@Base+0xb44>
   17fe0:	mul	r1, r7, r4
   17fe4:	cmp	r1, #63	; 0x3f
   17fe8:	movle	r6, #64	; 0x40
   17fec:	ble	17f94 <_obstack_memory_used@@Base+0x994>
   17ff0:	cmp	sl, #0
   17ff4:	sub	r2, r4, r8
   17ff8:	streq	sl, [fp]
   17ffc:	cmp	r2, r5
   18000:	bge	180d4 <_obstack_memory_used@@Base+0xad4>
   18004:	cmp	r5, #0
   18008:	bge	180a0 <_obstack_memory_used@@Base+0xaa0>
   1800c:	rsb	r2, r5, #-2147483648	; 0x80000000
   18010:	cmp	r8, r2
   18014:	movge	r2, #0
   18018:	movlt	r2, #1
   1801c:	cmp	r2, #0
   18020:	bne	18074 <_obstack_memory_used@@Base+0xa74>
   18024:	ldr	r0, [sp, #4]
   18028:	add	r5, r8, r5
   1802c:	cmp	r9, r5
   18030:	movge	r0, #0
   18034:	andlt	r0, r0, #1
   18038:	cmp	r0, #0
   1803c:	mov	r4, r5
   18040:	bne	18074 <_obstack_memory_used@@Base+0xa74>
   18044:	cmp	r7, #0
   18048:	bge	180e8 <_obstack_memory_used@@Base+0xae8>
   1804c:	cmp	r5, #0
   18050:	bge	180c0 <_obstack_memory_used@@Base+0xac0>
   18054:	mov	r1, r7
   18058:	mvn	r0, #-2147483648	; 0x80000000
   1805c:	bl	1c2e0 <argp_error@@Base+0x13f0>
   18060:	cmp	r5, r0
   18064:	movge	r0, #0
   18068:	movlt	r0, #1
   1806c:	cmp	r0, #0
   18070:	beq	180d0 <_obstack_memory_used@@Base+0xad0>
   18074:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   18078:	beq	17fe0 <_obstack_memory_used@@Base+0x9e0>
   1807c:	cmp	r4, #0
   18080:	bge	1813c <_obstack_memory_used@@Base+0xb3c>
   18084:	cmn	r4, #1
   18088:	beq	17fe0 <_obstack_memory_used@@Base+0x9e0>
   1808c:	mov	r1, r4
   18090:	mov	r0, #-2147483648	; 0x80000000
   18094:	bl	1c2e0 <argp_error@@Base+0x13f0>
   18098:	cmp	r7, r0
   1809c:	b	17f80 <_obstack_memory_used@@Base+0x980>
   180a0:	cmp	r8, #0
   180a4:	blt	18024 <_obstack_memory_used@@Base+0xa24>
   180a8:	mvn	r2, #-2147483648	; 0x80000000
   180ac:	sub	r2, r2, r5
   180b0:	cmp	r8, r2
   180b4:	movle	r2, #0
   180b8:	movgt	r2, #1
   180bc:	b	1801c <_obstack_memory_used@@Base+0xa1c>
   180c0:	cmn	r7, #1
   180c4:	movne	r1, r7
   180c8:	movne	r0, #-2147483648	; 0x80000000
   180cc:	bne	18120 <_obstack_memory_used@@Base+0xb20>
   180d0:	mul	r1, r5, r7
   180d4:	mov	r0, sl
   180d8:	bl	17db8 <_obstack_memory_used@@Base+0x7b8>
   180dc:	str	r4, [fp]
   180e0:	add	sp, sp, #12
   180e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180e8:	beq	180d0 <_obstack_memory_used@@Base+0xad0>
   180ec:	cmp	r5, #0
   180f0:	movge	r1, r7
   180f4:	mvnge	r0, #-2147483648	; 0x80000000
   180f8:	bge	18120 <_obstack_memory_used@@Base+0xb20>
   180fc:	cmn	r5, #1
   18100:	beq	180d0 <_obstack_memory_used@@Base+0xad0>
   18104:	mov	r1, r5
   18108:	mov	r0, #-2147483648	; 0x80000000
   1810c:	bl	1c2e0 <argp_error@@Base+0x13f0>
   18110:	cmp	r7, r0
   18114:	movle	r0, #0
   18118:	movgt	r0, #1
   1811c:	b	1806c <_obstack_memory_used@@Base+0xa6c>
   18120:	bl	1c2e0 <argp_error@@Base+0x13f0>
   18124:	cmp	r5, r0
   18128:	b	18114 <_obstack_memory_used@@Base+0xb14>
   1812c:	cmp	r7, #0
   18130:	mov	r4, r9
   18134:	blt	17fd0 <_obstack_memory_used@@Base+0x9d0>
   18138:	beq	17fe0 <_obstack_memory_used@@Base+0x9e0>
   1813c:	mov	r1, r7
   18140:	mvn	r0, #-2147483648	; 0x80000000
   18144:	bl	1c2e0 <argp_error@@Base+0x13f0>
   18148:	cmp	r0, r4
   1814c:	movge	r0, #0
   18150:	movlt	r0, #1
   18154:	b	17f88 <_obstack_memory_used@@Base+0x988>
   18158:	push	{r4, lr}
   1815c:	bl	1824c <_obstack_memory_used@@Base+0xc4c>
   18160:	cmp	r0, #0
   18164:	popne	{r4, pc}
   18168:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   1816c:	mov	r1, #1
   18170:	b	18158 <_obstack_memory_used@@Base+0xb58>
   18174:	push	{r4, lr}
   18178:	bl	1824c <_obstack_memory_used@@Base+0xc4c>
   1817c:	cmp	r0, #0
   18180:	popne	{r4, pc}
   18184:	bl	18220 <_obstack_memory_used@@Base+0xc20>
   18188:	mov	r1, #1
   1818c:	b	18174 <_obstack_memory_used@@Base+0xb74>
   18190:	push	{r4, r5, r6, lr}
   18194:	mov	r4, r1
   18198:	mov	r5, r0
   1819c:	mov	r0, r1
   181a0:	bl	17d8c <_obstack_memory_used@@Base+0x78c>
   181a4:	mov	r2, r4
   181a8:	mov	r1, r5
   181ac:	pop	{r4, r5, r6, lr}
   181b0:	b	11444 <memcpy@plt>
   181b4:	push	{r4, r5, r6, lr}
   181b8:	mov	r4, r1
   181bc:	mov	r5, r0
   181c0:	mov	r0, r1
   181c4:	bl	17da0 <_obstack_memory_used@@Base+0x7a0>
   181c8:	mov	r2, r4
   181cc:	mov	r1, r5
   181d0:	pop	{r4, r5, r6, lr}
   181d4:	b	11444 <memcpy@plt>
   181d8:	push	{r4, r5, r6, lr}
   181dc:	mov	r5, r0
   181e0:	add	r0, r1, #1
   181e4:	mov	r4, r1
   181e8:	bl	17da0 <_obstack_memory_used@@Base+0x7a0>
   181ec:	mov	r2, #0
   181f0:	mov	r1, r5
   181f4:	strb	r2, [r0, r4]
   181f8:	mov	r2, r4
   181fc:	pop	{r4, r5, r6, lr}
   18200:	b	11444 <memcpy@plt>
   18204:	push	{r4, lr}
   18208:	mov	r4, r0
   1820c:	bl	11570 <strlen@plt>
   18210:	add	r1, r0, #1
   18214:	mov	r0, r4
   18218:	pop	{r4, lr}
   1821c:	b	18190 <_obstack_memory_used@@Base+0xb90>
   18220:	ldr	r3, [pc, #24]	; 18240 <_obstack_memory_used@@Base+0xc40>
   18224:	push	{r4, lr}
   18228:	mov	r1, #0
   1822c:	ldr	r0, [r3]
   18230:	ldr	r2, [pc, #12]	; 18244 <_obstack_memory_used@@Base+0xc44>
   18234:	ldr	r3, [pc, #12]	; 18248 <_obstack_memory_used@@Base+0xc48>
   18238:	bl	114d4 <error@plt>
   1823c:	bl	116fc <abort@plt>
   18240:	andeq	r0, r3, r0, lsr fp
   18244:	andeq	ip, r1, r0, lsl #13
   18248:	muleq	r1, r4, lr
   1824c:	cmp	r1, #0
   18250:	cmpne	r0, #0
   18254:	moveq	r1, #1
   18258:	moveq	r0, r1
   1825c:	umull	r2, r3, r0, r1
   18260:	adds	r3, r3, #0
   18264:	movne	r3, #1
   18268:	cmp	r2, #0
   1826c:	blt	1827c <_obstack_memory_used@@Base+0xc7c>
   18270:	cmp	r3, #0
   18274:	bne	1827c <_obstack_memory_used@@Base+0xc7c>
   18278:	b	11390 <calloc@plt>
   1827c:	push	{r4, lr}
   18280:	bl	11594 <__errno_location@plt>
   18284:	mov	r3, #12
   18288:	str	r3, [r0]
   1828c:	mov	r0, #0
   18290:	pop	{r4, pc}
   18294:	cmp	r0, #0
   18298:	mov	r3, #0
   1829c:	moveq	r0, #1
   182a0:	adds	r3, r3, #0
   182a4:	movne	r3, #1
   182a8:	cmp	r0, #0
   182ac:	blt	182bc <_obstack_memory_used@@Base+0xcbc>
   182b0:	cmp	r3, #0
   182b4:	bne	182bc <_obstack_memory_used@@Base+0xcbc>
   182b8:	b	114f8 <malloc@plt>
   182bc:	push	{r4, lr}
   182c0:	bl	11594 <__errno_location@plt>
   182c4:	mov	r3, #12
   182c8:	str	r3, [r0]
   182cc:	mov	r0, #0
   182d0:	pop	{r4, pc}
   182d4:	cmp	r0, #0
   182d8:	push	{r4, lr}
   182dc:	mov	r4, r1
   182e0:	bne	182f0 <_obstack_memory_used@@Base+0xcf0>
   182e4:	mov	r0, r1
   182e8:	pop	{r4, lr}
   182ec:	b	18294 <_obstack_memory_used@@Base+0xc94>
   182f0:	cmp	r1, #0
   182f4:	bne	18304 <_obstack_memory_used@@Base+0xd04>
   182f8:	bl	171e4 <argp_parse@@Base+0xa9c>
   182fc:	mov	r0, #0
   18300:	pop	{r4, pc}
   18304:	cmp	r1, #0
   18308:	blt	18318 <_obstack_memory_used@@Base+0xd18>
   1830c:	mov	r3, #0
   18310:	cmp	r3, r3
   18314:	beq	18328 <_obstack_memory_used@@Base+0xd28>
   18318:	bl	11594 <__errno_location@plt>
   1831c:	mov	r3, #12
   18320:	str	r3, [r0]
   18324:	b	182fc <_obstack_memory_used@@Base+0xcfc>
   18328:	pop	{r4, lr}
   1832c:	b	11480 <realloc@plt>
   18330:	ldr	r2, [r0, #4]
   18334:	ldr	r3, [r0]
   18338:	cmp	r2, #0
   1833c:	add	r3, r3, #24
   18340:	bne	1834c <_obstack_memory_used@@Base+0xd4c>
   18344:	mov	r0, r2
   18348:	bx	lr
   1834c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   18350:	cmp	r0, #0
   18354:	beq	18364 <_obstack_memory_used@@Base+0xd64>
   18358:	ldr	r1, [r3, #-12]
   1835c:	tst	r1, #2
   18360:	bxeq	lr
   18364:	sub	r2, r2, #1
   18368:	b	18338 <_obstack_memory_used@@Base+0xd38>
   1836c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18370:	mov	sl, r3
   18374:	ldm	r0, {r5, r6, r7}
   18378:	mov	r3, #0
   1837c:	sub	sp, sp, #20
   18380:	mov	r8, r1
   18384:	mov	r9, r2
   18388:	mov	r4, r5
   1838c:	mov	fp, r3
   18390:	adds	r2, r6, #0
   18394:	movne	r2, #1
   18398:	cmp	r3, #0
   1839c:	movne	r2, #0
   183a0:	cmp	r2, #0
   183a4:	bne	183b4 <_obstack_memory_used@@Base+0xdb4>
   183a8:	mov	r0, r3
   183ac:	add	sp, sp, #20
   183b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183b4:	ldr	r2, [r4, #12]
   183b8:	ands	r3, r2, #8
   183bc:	str	r2, [sp, #12]
   183c0:	movne	r3, fp
   183c4:	bne	18404 <_obstack_memory_used@@Base+0xe04>
   183c8:	ldr	r1, [r4, #4]
   183cc:	sub	r0, r1, #1
   183d0:	cmp	r0, #254	; 0xfe
   183d4:	str	r1, [sp, #8]
   183d8:	bhi	18404 <_obstack_memory_used@@Base+0xe04>
   183dc:	str	r3, [sp, #4]
   183e0:	bl	1154c <__ctype_b_loc@plt>
   183e4:	ldr	r1, [sp, #8]
   183e8:	ldr	r3, [sp, #4]
   183ec:	ldr	r2, [sp, #12]
   183f0:	ldr	ip, [r0]
   183f4:	lsl	r0, r1, #1
   183f8:	ldrh	r0, [ip, r0]
   183fc:	tst	r0, #16384	; 0x4000
   18400:	bne	18410 <_obstack_memory_used@@Base+0xe10>
   18404:	add	r4, r4, #24
   18408:	sub	r6, r6, #1
   1840c:	b	18390 <_obstack_memory_used@@Base+0xd90>
   18410:	ldrb	r0, [r7]
   18414:	cmp	r0, r1
   18418:	bne	18404 <_obstack_memory_used@@Base+0xe04>
   1841c:	tst	r2, #4
   18420:	moveq	r5, r4
   18424:	tst	r2, #2
   18428:	bne	18444 <_obstack_memory_used@@Base+0xe44>
   1842c:	mov	r3, sl
   18430:	mov	r2, r9
   18434:	mov	r1, r5
   18438:	mov	r0, r4
   1843c:	blx	r8
   18440:	mov	r3, r0
   18444:	add	r7, r7, #1
   18448:	b	18404 <_obstack_memory_used@@Base+0xe04>
   1844c:	ldr	r3, [r0, #12]
   18450:	ands	r3, r3, #8
   18454:	bne	1848c <_obstack_memory_used@@Base+0xe8c>
   18458:	push	{r4, lr}
   1845c:	ldr	r4, [r0, #4]
   18460:	sub	r2, r4, #1
   18464:	cmp	r2, #254	; 0xfe
   18468:	bhi	18484 <_obstack_memory_used@@Base+0xe84>
   1846c:	bl	1154c <__ctype_b_loc@plt>
   18470:	lsl	r3, r4, #1
   18474:	ldr	r2, [r0]
   18478:	ldrh	r3, [r2, r3]
   1847c:	ands	r3, r3, #16384	; 0x4000
   18480:	movne	r3, r4
   18484:	mov	r0, r3
   18488:	pop	{r4, pc}
   1848c:	mov	r3, #0
   18490:	mov	r0, r3
   18494:	bx	lr
   18498:	push	{r4, lr}
   1849c:	mov	r4, r0
   184a0:	bl	1154c <__ctype_b_loc@plt>
   184a4:	ldr	r1, [r0]
   184a8:	ldr	r3, [r4]
   184ac:	ldrb	r0, [r3]
   184b0:	lsl	r2, r0, #1
   184b4:	ldrh	r2, [r1, r2]
   184b8:	tst	r2, #8192	; 0x2000
   184bc:	bne	184ec <_obstack_memory_used@@Base+0xeec>
   184c0:	subs	r0, r0, #45	; 0x2d
   184c4:	movne	r0, #1
   184c8:	ldr	r2, [r4]
   184cc:	ldrb	r3, [r2]
   184d0:	cmp	r3, #0
   184d4:	popeq	{r4, pc}
   184d8:	lsl	r3, r3, #1
   184dc:	ldrh	r3, [r1, r3]
   184e0:	tst	r3, #8
   184e4:	beq	184f8 <_obstack_memory_used@@Base+0xef8>
   184e8:	pop	{r4, pc}
   184ec:	add	r3, r3, #1
   184f0:	str	r3, [r4]
   184f4:	b	184a8 <_obstack_memory_used@@Base+0xea8>
   184f8:	add	r2, r2, #1
   184fc:	str	r2, [r4]
   18500:	b	184c8 <_obstack_memory_used@@Base+0xec8>
   18504:	push	{r4, r5, r6, lr}
   18508:	mov	r4, r0
   1850c:	ldr	r0, [r0, #12]
   18510:	cmp	r0, #0
   18514:	bne	18540 <_obstack_memory_used@@Base+0xf40>
   18518:	ldr	r3, [r4, #4]
   1851c:	cmp	r3, #0
   18520:	beq	18534 <_obstack_memory_used@@Base+0xf34>
   18524:	ldr	r0, [r4]
   18528:	bl	171e4 <argp_parse@@Base+0xa9c>
   1852c:	ldr	r0, [r4, #8]
   18530:	bl	171e4 <argp_parse@@Base+0xa9c>
   18534:	mov	r0, r4
   18538:	pop	{r4, r5, r6, lr}
   1853c:	b	171e4 <argp_parse@@Base+0xa9c>
   18540:	ldr	r5, [r0, #24]
   18544:	bl	171e4 <argp_parse@@Base+0xa9c>
   18548:	mov	r0, r5
   1854c:	b	18510 <_obstack_memory_used@@Base+0xf10>
   18550:	push	{r4, r5, r6, lr}
   18554:	ldr	r5, [r0, #16]
   18558:	ldr	r0, [r0, #8]
   1855c:	cmp	r0, #0
   18560:	beq	18574 <_obstack_memory_used@@Base+0xf74>
   18564:	mov	r1, #10
   18568:	bl	1157c <strchr@plt>
   1856c:	adds	r0, r0, #0
   18570:	movne	r0, #1
   18574:	cmp	r5, #0
   18578:	mov	r4, r0
   1857c:	addne	r5, r5, #16
   18580:	bne	18594 <_obstack_memory_used@@Base+0xf94>
   18584:	mov	r0, r4
   18588:	pop	{r4, r5, r6, pc}
   1858c:	bl	18550 <_obstack_memory_used@@Base+0xf50>
   18590:	add	r4, r4, r0
   18594:	add	r5, r5, #16
   18598:	ldr	r0, [r5, #-32]	; 0xffffffe0
   1859c:	cmp	r0, #0
   185a0:	bne	1858c <_obstack_memory_used@@Base+0xf8c>
   185a4:	b	18584 <_obstack_memory_used@@Base+0xf84>
   185a8:	ldr	r2, [r0, #24]
   185ac:	ldr	r3, [r0, #28]
   185b0:	push	{r4, r5, r6, r7, r8, lr}
   185b4:	sub	r3, r3, r2
   185b8:	ldr	r2, [r0, #16]
   185bc:	mov	r4, r0
   185c0:	cmp	r3, r2
   185c4:	mov	r5, r1
   185c8:	bls	185d0 <_obstack_memory_used@@Base+0xfd0>
   185cc:	bl	1bb2c <argp_error@@Base+0xc3c>
   185d0:	ldr	r1, [r4, #20]
   185d4:	mov	r6, #1
   185d8:	cmp	r1, #0
   185dc:	subge	r5, r5, r1
   185e0:	mov	r7, #32
   185e4:	cmp	r5, #0
   185e8:	bgt	185f0 <_obstack_memory_used@@Base+0xff0>
   185ec:	pop	{r4, r5, r6, r7, r8, pc}
   185f0:	ldr	r2, [r4, #28]
   185f4:	ldr	r3, [r4, #32]
   185f8:	cmp	r2, r3
   185fc:	bcs	18618 <_obstack_memory_used@@Base+0x1018>
   18600:	ldr	r3, [r4, #28]
   18604:	add	r2, r3, #1
   18608:	str	r2, [r4, #28]
   1860c:	strb	r7, [r3]
   18610:	sub	r5, r5, #1
   18614:	b	185e4 <_obstack_memory_used@@Base+0xfe4>
   18618:	mov	r1, r6
   1861c:	mov	r0, r4
   18620:	bl	1bf7c <argp_error@@Base+0x108c>
   18624:	cmp	r0, #0
   18628:	bne	18600 <_obstack_memory_used@@Base+0x1000>
   1862c:	b	18610 <_obstack_memory_used@@Base+0x1010>
   18630:	push	{r4, r5, r6, lr}
   18634:	subs	r4, r2, #0
   18638:	popeq	{r4, r5, r6, pc}
   1863c:	ldr	r2, [r4, #20]
   18640:	cmp	r2, #0
   18644:	popeq	{r4, r5, r6, pc}
   18648:	mov	r6, r1
   1864c:	mov	r5, r0
   18650:	mov	r1, r3
   18654:	mov	r0, r4
   18658:	bl	170c0 <argp_parse@@Base+0x978>
   1865c:	ldr	r3, [r4, #20]
   18660:	mov	r1, r5
   18664:	mov	r2, r0
   18668:	mov	r0, r6
   1866c:	pop	{r4, r5, r6, lr}
   18670:	bx	r3
   18674:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18678:	mov	r4, r2
   1867c:	ldr	r3, [r2, #16]
   18680:	mov	r2, r1
   18684:	ldr	r1, [pc, #440]	; 18844 <_obstack_memory_used@@Base+0x1244>
   18688:	mov	r7, r0
   1868c:	bl	18630 <_obstack_memory_used@@Base+0x1030>
   18690:	subs	r6, r0, #0
   18694:	beq	187e8 <_obstack_memory_used@@Base+0x11e8>
   18698:	ldrb	r3, [r6]
   1869c:	cmp	r3, #0
   186a0:	beq	187dc <_obstack_memory_used@@Base+0x11dc>
   186a4:	ldr	r3, [r4, #8]
   186a8:	ldr	r3, [r3]
   186ac:	cmp	r3, #0
   186b0:	beq	186dc <_obstack_memory_used@@Base+0x10dc>
   186b4:	ldr	r5, [r4, #4]
   186b8:	ldr	r2, [r5, #28]
   186bc:	ldr	r3, [r5, #32]
   186c0:	cmp	r2, r3
   186c4:	bcs	187fc <_obstack_memory_used@@Base+0x11fc>
   186c8:	ldr	r3, [r5, #28]
   186cc:	add	r2, r3, #1
   186d0:	str	r2, [r5, #28]
   186d4:	mov	r2, #10
   186d8:	strb	r2, [r3]
   186dc:	ldr	r8, [pc, #356]	; 18848 <_obstack_memory_used@@Base+0x1248>
   186e0:	ldr	r0, [r4, #4]
   186e4:	ldr	r1, [r8, #24]
   186e8:	bl	185a8 <_obstack_memory_used@@Base+0xfa8>
   186ec:	ldr	r9, [r4, #4]
   186f0:	ldr	sl, [r8, #24]
   186f4:	ldr	r2, [r9, #24]
   186f8:	ldr	r3, [r9, #28]
   186fc:	sub	r3, r3, r2
   18700:	ldr	r2, [r9, #16]
   18704:	cmp	r3, r2
   18708:	bls	18714 <_obstack_memory_used@@Base+0x1114>
   1870c:	mov	r0, r9
   18710:	bl	1bb2c <argp_error@@Base+0xc3c>
   18714:	ldr	r5, [r4, #4]
   18718:	str	sl, [r9, #4]
   1871c:	ldr	r8, [r8, #24]
   18720:	ldr	r2, [r5, #24]
   18724:	ldr	r3, [r5, #28]
   18728:	sub	r3, r3, r2
   1872c:	ldr	r2, [r5, #16]
   18730:	cmp	r3, r2
   18734:	bls	18740 <_obstack_memory_used@@Base+0x1140>
   18738:	mov	r0, r5
   1873c:	bl	1bb2c <argp_error@@Base+0xc3c>
   18740:	str	r8, [r5, #12]
   18744:	mov	r0, r6
   18748:	bl	11570 <strlen@plt>
   1874c:	subs	r8, r0, #0
   18750:	beq	18788 <_obstack_memory_used@@Base+0x1188>
   18754:	ldr	r5, [r4, #4]
   18758:	ldr	r3, [r5, #28]
   1875c:	ldr	r2, [r5, #32]
   18760:	add	r3, r3, r8
   18764:	cmp	r2, r3
   18768:	bcc	18814 <_obstack_memory_used@@Base+0x1214>
   1876c:	mov	r2, r8
   18770:	mov	r1, r6
   18774:	ldr	r0, [r5, #28]
   18778:	bl	11444 <memcpy@plt>
   1877c:	ldr	r3, [r5, #28]
   18780:	add	r8, r3, r8
   18784:	str	r8, [r5, #28]
   18788:	ldr	r5, [r4, #4]
   1878c:	ldr	r2, [r5, #24]
   18790:	ldr	r3, [r5, #28]
   18794:	sub	r3, r3, r2
   18798:	ldr	r2, [r5, #16]
   1879c:	cmp	r3, r2
   187a0:	bls	187ac <_obstack_memory_used@@Base+0x11ac>
   187a4:	mov	r0, r5
   187a8:	bl	1bb2c <argp_error@@Base+0xc3c>
   187ac:	mov	r3, #0
   187b0:	str	r3, [r5, #4]
   187b4:	ldr	r5, [r4, #4]
   187b8:	ldr	r2, [r5, #28]
   187bc:	ldr	r3, [r5, #32]
   187c0:	cmp	r2, r3
   187c4:	bcs	1882c <_obstack_memory_used@@Base+0x122c>
   187c8:	ldr	r3, [r5, #28]
   187cc:	add	r2, r3, #1
   187d0:	str	r2, [r5, #28]
   187d4:	mov	r2, #10
   187d8:	strb	r2, [r3]
   187dc:	ldr	r3, [r4, #8]
   187e0:	mov	r2, #1
   187e4:	str	r2, [r3, #4]
   187e8:	cmp	r7, r6
   187ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   187f0:	mov	r0, r6
   187f4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   187f8:	b	171e4 <argp_parse@@Base+0xa9c>
   187fc:	mov	r1, #1
   18800:	mov	r0, r5
   18804:	bl	1bf7c <argp_error@@Base+0x108c>
   18808:	cmp	r0, #0
   1880c:	bne	186c8 <_obstack_memory_used@@Base+0x10c8>
   18810:	b	186dc <_obstack_memory_used@@Base+0x10dc>
   18814:	mov	r1, r8
   18818:	mov	r0, r5
   1881c:	bl	1bf7c <argp_error@@Base+0x108c>
   18820:	cmp	r0, #0
   18824:	bne	1876c <_obstack_memory_used@@Base+0x116c>
   18828:	b	18788 <_obstack_memory_used@@Base+0x1188>
   1882c:	mov	r1, #1
   18830:	mov	r0, r5
   18834:	bl	1bf7c <argp_error@@Base+0x108c>
   18838:	cmp	r0, #0
   1883c:	bne	187c8 <_obstack_memory_used@@Base+0x11c8>
   18840:	b	187dc <_obstack_memory_used@@Base+0x11dc>
   18844:	andeq	r0, r0, #3
   18848:	andeq	r0, r3, r8, lsl #22
   1884c:	ldr	r3, [r1, #12]
   18850:	push	{r4, r5, r6, r7, r8, lr}
   18854:	cmp	r3, #0
   18858:	mov	r7, r0
   1885c:	mov	r4, r1
   18860:	beq	18978 <_obstack_memory_used@@Base+0x1378>
   18864:	ldr	r2, [r1, #8]
   18868:	ldr	r3, [r1]
   1886c:	ldr	r8, [r2]
   18870:	ldr	r2, [r2, #4]
   18874:	ldr	r5, [r3, #16]
   18878:	cmp	r2, #0
   1887c:	cmpne	r8, #0
   18880:	beq	188bc <_obstack_memory_used@@Base+0x12bc>
   18884:	ldr	r2, [r3, #12]
   18888:	ldr	r3, [r8, #12]
   1888c:	cmp	r2, r3
   18890:	beq	188bc <_obstack_memory_used@@Base+0x12bc>
   18894:	ldr	r6, [r1, #4]
   18898:	ldr	r2, [r6, #28]
   1889c:	ldr	r3, [r6, #32]
   188a0:	cmp	r2, r3
   188a4:	bcs	18958 <_obstack_memory_used@@Base+0x1358>
   188a8:	ldr	r3, [r6, #28]
   188ac:	add	r2, r3, #1
   188b0:	str	r2, [r6, #28]
   188b4:	mov	r2, #10
   188b8:	strb	r2, [r3]
   188bc:	cmp	r5, #0
   188c0:	beq	18940 <_obstack_memory_used@@Base+0x1340>
   188c4:	ldr	r0, [r5]
   188c8:	cmp	r0, #0
   188cc:	beq	18940 <_obstack_memory_used@@Base+0x1340>
   188d0:	ldrb	r3, [r0]
   188d4:	cmp	r3, #0
   188d8:	beq	18940 <_obstack_memory_used@@Base+0x1340>
   188dc:	cmp	r8, #0
   188e0:	beq	18904 <_obstack_memory_used@@Base+0x1304>
   188e4:	ldr	r3, [r8, #16]
   188e8:	cmp	r5, r3
   188ec:	beq	18940 <_obstack_memory_used@@Base+0x1340>
   188f0:	cmp	r3, #0
   188f4:	cmpne	r5, r3
   188f8:	bne	18970 <_obstack_memory_used@@Base+0x1370>
   188fc:	cmp	r5, r3
   18900:	beq	18940 <_obstack_memory_used@@Base+0x1340>
   18904:	ldr	r3, [r4, #4]
   18908:	mov	r2, r4
   1890c:	ldr	r1, [r5, #16]
   18910:	ldr	r6, [r3, #12]
   18914:	bl	18674 <_obstack_memory_used@@Base+0x1074>
   18918:	ldr	r5, [r4, #4]
   1891c:	ldr	r2, [r5, #24]
   18920:	ldr	r3, [r5, #28]
   18924:	sub	r3, r3, r2
   18928:	ldr	r2, [r5, #16]
   1892c:	cmp	r3, r2
   18930:	bls	1893c <_obstack_memory_used@@Base+0x133c>
   18934:	mov	r0, r5
   18938:	bl	1bb2c <argp_error@@Base+0xc3c>
   1893c:	str	r6, [r5, #12]
   18940:	mov	r3, #0
   18944:	str	r3, [r4, #12]
   18948:	mov	r1, r7
   1894c:	ldr	r0, [r4, #4]
   18950:	pop	{r4, r5, r6, r7, r8, lr}
   18954:	b	185a8 <_obstack_memory_used@@Base+0xfa8>
   18958:	mov	r1, #1
   1895c:	mov	r0, r6
   18960:	bl	1bf7c <argp_error@@Base+0x108c>
   18964:	cmp	r0, #0
   18968:	bne	188a8 <_obstack_memory_used@@Base+0x12a8>
   1896c:	b	188bc <_obstack_memory_used@@Base+0x12bc>
   18970:	ldr	r3, [r3, #12]
   18974:	b	188f0 <_obstack_memory_used@@Base+0x12f0>
   18978:	ldr	r5, [r1, #4]
   1897c:	ldr	r3, [r5, #28]
   18980:	ldr	r2, [r5, #32]
   18984:	add	r3, r3, #2
   18988:	cmp	r2, r3
   1898c:	bcc	189b0 <_obstack_memory_used@@Base+0x13b0>
   18990:	ldr	r2, [pc, #48]	; 189c8 <_obstack_memory_used@@Base+0x13c8>
   18994:	ldr	r3, [r5, #28]
   18998:	ldrh	r2, [r2]
   1899c:	strh	r2, [r3]
   189a0:	ldr	r3, [r5, #28]
   189a4:	add	r3, r3, #2
   189a8:	str	r3, [r5, #28]
   189ac:	b	18948 <_obstack_memory_used@@Base+0x1348>
   189b0:	mov	r1, #2
   189b4:	mov	r0, r5
   189b8:	bl	1bf7c <argp_error@@Base+0x108c>
   189bc:	cmp	r0, #0
   189c0:	bne	18990 <_obstack_memory_used@@Base+0x1390>
   189c4:	b	18948 <_obstack_memory_used@@Base+0x1348>
   189c8:	andeq	pc, r1, r8, asr #5
   189cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189d0:	sub	sp, sp, #28
   189d4:	ldr	r7, [r0, #12]
   189d8:	str	r3, [sp, #8]
   189dc:	cmp	r7, #0
   189e0:	ldr	r3, [r0, #16]
   189e4:	moveq	r5, r7
   189e8:	mov	r8, r0
   189ec:	str	r1, [sp, #16]
   189f0:	mov	fp, r2
   189f4:	ldr	r4, [sp, #68]	; 0x44
   189f8:	str	r3, [sp, #12]
   189fc:	moveq	r6, r5
   18a00:	beq	18a40 <_obstack_memory_used@@Base+0x1440>
   18a04:	mov	r1, #11
   18a08:	mov	r0, r7
   18a0c:	bl	1157c <strchr@plt>
   18a10:	cmp	fp, #0
   18a14:	moveq	r5, r7
   18a18:	beq	18a28 <_obstack_memory_used@@Base+0x1428>
   18a1c:	cmp	r0, #0
   18a20:	addne	r5, r0, #1
   18a24:	moveq	r5, r0
   18a28:	cmp	r0, #0
   18a2c:	clz	r6, fp
   18a30:	lsr	r6, r6, #5
   18a34:	moveq	r6, #0
   18a38:	cmp	r6, #0
   18a3c:	subne	r6, r0, r7
   18a40:	ldr	r9, [r8, #20]
   18a44:	cmp	r9, #0
   18a48:	moveq	sl, r5
   18a4c:	beq	18aa0 <_obstack_memory_used@@Base+0x14a0>
   18a50:	cmp	r6, #0
   18a54:	beq	18a68 <_obstack_memory_used@@Base+0x1468>
   18a58:	mov	r0, r5
   18a5c:	mov	r1, r6
   18a60:	bl	11438 <strndup@plt>
   18a64:	mov	r5, r0
   18a68:	ldr	r1, [sp, #16]
   18a6c:	mov	r0, r8
   18a70:	bl	170c0 <argp_parse@@Base+0x978>
   18a74:	ldr	ip, [pc, #928]	; 18e1c <_obstack_memory_used@@Base+0x181c>
   18a78:	cmp	fp, #0
   18a7c:	mov	r1, r5
   18a80:	ldr	r3, [r8, #20]
   18a84:	mov	sl, r5
   18a88:	mov	r2, r0
   18a8c:	mov	r9, r0
   18a90:	ldr	r0, [pc, #904]	; 18e20 <_obstack_memory_used@@Base+0x1820>
   18a94:	movne	r0, ip
   18a98:	blx	r3
   18a9c:	mov	r5, r0
   18aa0:	cmp	r5, #0
   18aa4:	moveq	r7, r5
   18aa8:	beq	18b60 <_obstack_memory_used@@Base+0x1560>
   18aac:	ldr	r3, [sp, #8]
   18ab0:	cmp	r3, #0
   18ab4:	beq	18adc <_obstack_memory_used@@Base+0x14dc>
   18ab8:	ldr	r2, [r4, #28]
   18abc:	ldr	r3, [r4, #32]
   18ac0:	cmp	r2, r3
   18ac4:	bcs	18c8c <_obstack_memory_used@@Base+0x168c>
   18ac8:	ldr	r3, [r4, #28]
   18acc:	add	r2, r3, #1
   18ad0:	str	r2, [r4, #28]
   18ad4:	mov	r2, #10
   18ad8:	strb	r2, [r3]
   18adc:	cmp	r6, #0
   18ae0:	sub	r3, r5, sl
   18ae4:	clz	r3, r3
   18ae8:	lsr	r3, r3, #5
   18aec:	moveq	r3, #0
   18af0:	cmp	r3, #0
   18af4:	ldr	r3, [r4, #28]
   18af8:	beq	18cbc <_obstack_memory_used@@Base+0x16bc>
   18afc:	ldr	r2, [r4, #32]
   18b00:	add	r3, r3, r6
   18b04:	cmp	r2, r3
   18b08:	bcc	18ca4 <_obstack_memory_used@@Base+0x16a4>
   18b0c:	mov	r2, r6
   18b10:	mov	r1, sl
   18b14:	ldr	r0, [r4, #28]
   18b18:	bl	11444 <memcpy@plt>
   18b1c:	ldr	r3, [r4, #28]
   18b20:	add	r3, r3, r6
   18b24:	str	r3, [r4, #28]
   18b28:	ldr	r2, [r4, #24]
   18b2c:	ldr	r3, [r4, #28]
   18b30:	sub	r3, r3, r2
   18b34:	ldr	r2, [r4, #16]
   18b38:	cmp	r3, r2
   18b3c:	bls	18b48 <_obstack_memory_used@@Base+0x1548>
   18b40:	mov	r0, r4
   18b44:	bl	1bb2c <argp_error@@Base+0xc3c>
   18b48:	ldr	r3, [r4, #20]
   18b4c:	ldr	r2, [r4, #4]
   18b50:	bic	r3, r3, r3, asr #31
   18b54:	cmp	r2, r3
   18b58:	bcc	18d1c <_obstack_memory_used@@Base+0x171c>
   18b5c:	mov	r7, #1
   18b60:	cmp	r5, #0
   18b64:	cmpne	r5, sl
   18b68:	beq	18b74 <_obstack_memory_used@@Base+0x1574>
   18b6c:	mov	r0, r5
   18b70:	bl	171e4 <argp_parse@@Base+0xa9c>
   18b74:	cmp	sl, #0
   18b78:	cmpne	r6, #0
   18b7c:	beq	18b94 <_obstack_memory_used@@Base+0x1594>
   18b80:	ldr	r3, [r8, #20]
   18b84:	cmp	r3, #0
   18b88:	beq	18c70 <_obstack_memory_used@@Base+0x1670>
   18b8c:	mov	r0, sl
   18b90:	bl	171e4 <argp_parse@@Base+0xa9c>
   18b94:	cmp	fp, #0
   18b98:	beq	18c70 <_obstack_memory_used@@Base+0x1670>
   18b9c:	ldr	r3, [r8, #20]
   18ba0:	cmp	r3, #0
   18ba4:	beq	18c70 <_obstack_memory_used@@Base+0x1670>
   18ba8:	mov	r2, r9
   18bac:	mov	r1, #0
   18bb0:	ldr	r0, [pc, #620]	; 18e24 <_obstack_memory_used@@Base+0x1824>
   18bb4:	blx	r3
   18bb8:	subs	r5, r0, #0
   18bbc:	beq	18c70 <_obstack_memory_used@@Base+0x1670>
   18bc0:	ldr	r3, [sp, #8]
   18bc4:	orrs	r3, r7, r3
   18bc8:	beq	18bf0 <_obstack_memory_used@@Base+0x15f0>
   18bcc:	ldr	r2, [r4, #28]
   18bd0:	ldr	r3, [r4, #32]
   18bd4:	cmp	r2, r3
   18bd8:	bcs	18d5c <_obstack_memory_used@@Base+0x175c>
   18bdc:	ldr	r3, [r4, #28]
   18be0:	add	r2, r3, #1
   18be4:	str	r2, [r4, #28]
   18be8:	mov	r2, #10
   18bec:	strb	r2, [r3]
   18bf0:	mov	r0, r5
   18bf4:	bl	11570 <strlen@plt>
   18bf8:	subs	r6, r0, #0
   18bfc:	beq	18c30 <_obstack_memory_used@@Base+0x1630>
   18c00:	ldr	r3, [r4, #28]
   18c04:	ldr	r2, [r4, #32]
   18c08:	add	r3, r3, r6
   18c0c:	cmp	r2, r3
   18c10:	bcc	18d74 <_obstack_memory_used@@Base+0x1774>
   18c14:	mov	r2, r6
   18c18:	mov	r1, r5
   18c1c:	ldr	r0, [r4, #28]
   18c20:	bl	11444 <memcpy@plt>
   18c24:	ldr	r3, [r4, #28]
   18c28:	add	r6, r3, r6
   18c2c:	str	r6, [r4, #28]
   18c30:	mov	r0, r5
   18c34:	bl	171e4 <argp_parse@@Base+0xa9c>
   18c38:	ldr	r2, [r4, #24]
   18c3c:	ldr	r3, [r4, #28]
   18c40:	sub	r3, r3, r2
   18c44:	ldr	r2, [r4, #16]
   18c48:	cmp	r3, r2
   18c4c:	bls	18c58 <_obstack_memory_used@@Base+0x1658>
   18c50:	mov	r0, r4
   18c54:	bl	1bb2c <argp_error@@Base+0xc3c>
   18c58:	ldr	r3, [r4, #20]
   18c5c:	ldr	r2, [r4, #4]
   18c60:	bic	r3, r3, r3, asr #31
   18c64:	cmp	r2, r3
   18c68:	bcc	18d8c <_obstack_memory_used@@Base+0x178c>
   18c6c:	mov	r7, #1
   18c70:	ldr	r3, [sp, #12]
   18c74:	cmp	r3, #0
   18c78:	addne	r5, r3, #16
   18c7c:	bne	18df8 <_obstack_memory_used@@Base+0x17f8>
   18c80:	mov	r0, r7
   18c84:	add	sp, sp, #28
   18c88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18c8c:	mov	r1, #1
   18c90:	mov	r0, r4
   18c94:	bl	1bf7c <argp_error@@Base+0x108c>
   18c98:	cmp	r0, #0
   18c9c:	bne	18ac8 <_obstack_memory_used@@Base+0x14c8>
   18ca0:	b	18adc <_obstack_memory_used@@Base+0x14dc>
   18ca4:	mov	r1, r6
   18ca8:	mov	r0, r4
   18cac:	bl	1bf7c <argp_error@@Base+0x108c>
   18cb0:	cmp	r0, #0
   18cb4:	bne	18b0c <_obstack_memory_used@@Base+0x150c>
   18cb8:	b	18b28 <_obstack_memory_used@@Base+0x1528>
   18cbc:	mov	r0, r5
   18cc0:	str	r3, [sp, #20]
   18cc4:	bl	11570 <strlen@plt>
   18cc8:	subs	r7, r0, #0
   18ccc:	beq	18b28 <_obstack_memory_used@@Base+0x1528>
   18cd0:	ldr	r3, [sp, #20]
   18cd4:	ldr	r2, [r4, #32]
   18cd8:	add	r3, r3, r7
   18cdc:	cmp	r2, r3
   18ce0:	bcc	18d04 <_obstack_memory_used@@Base+0x1704>
   18ce4:	mov	r2, r7
   18ce8:	mov	r1, r5
   18cec:	ldr	r0, [r4, #28]
   18cf0:	bl	11444 <memcpy@plt>
   18cf4:	ldr	r3, [r4, #28]
   18cf8:	add	r7, r3, r7
   18cfc:	str	r7, [r4, #28]
   18d00:	b	18b28 <_obstack_memory_used@@Base+0x1528>
   18d04:	mov	r1, r7
   18d08:	mov	r0, r4
   18d0c:	bl	1bf7c <argp_error@@Base+0x108c>
   18d10:	cmp	r0, #0
   18d14:	bne	18ce4 <_obstack_memory_used@@Base+0x16e4>
   18d18:	b	18b28 <_obstack_memory_used@@Base+0x1528>
   18d1c:	ldr	r2, [r4, #28]
   18d20:	ldr	r3, [r4, #32]
   18d24:	cmp	r2, r3
   18d28:	bcs	18d44 <_obstack_memory_used@@Base+0x1744>
   18d2c:	ldr	r3, [r4, #28]
   18d30:	add	r2, r3, #1
   18d34:	str	r2, [r4, #28]
   18d38:	mov	r2, #10
   18d3c:	strb	r2, [r3]
   18d40:	b	18b5c <_obstack_memory_used@@Base+0x155c>
   18d44:	mov	r1, #1
   18d48:	mov	r0, r4
   18d4c:	bl	1bf7c <argp_error@@Base+0x108c>
   18d50:	cmp	r0, #0
   18d54:	bne	18d2c <_obstack_memory_used@@Base+0x172c>
   18d58:	b	18b5c <_obstack_memory_used@@Base+0x155c>
   18d5c:	mov	r1, #1
   18d60:	mov	r0, r4
   18d64:	bl	1bf7c <argp_error@@Base+0x108c>
   18d68:	cmp	r0, #0
   18d6c:	bne	18bdc <_obstack_memory_used@@Base+0x15dc>
   18d70:	b	18bf0 <_obstack_memory_used@@Base+0x15f0>
   18d74:	mov	r1, r6
   18d78:	mov	r0, r4
   18d7c:	bl	1bf7c <argp_error@@Base+0x108c>
   18d80:	cmp	r0, #0
   18d84:	bne	18c14 <_obstack_memory_used@@Base+0x1614>
   18d88:	b	18c30 <_obstack_memory_used@@Base+0x1630>
   18d8c:	ldr	r2, [r4, #28]
   18d90:	ldr	r3, [r4, #32]
   18d94:	cmp	r2, r3
   18d98:	bcs	18db4 <_obstack_memory_used@@Base+0x17b4>
   18d9c:	ldr	r3, [r4, #28]
   18da0:	add	r2, r3, #1
   18da4:	str	r2, [r4, #28]
   18da8:	mov	r2, #10
   18dac:	strb	r2, [r3]
   18db0:	b	18c6c <_obstack_memory_used@@Base+0x166c>
   18db4:	mov	r1, #1
   18db8:	mov	r0, r4
   18dbc:	bl	1bf7c <argp_error@@Base+0x108c>
   18dc0:	cmp	r0, #0
   18dc4:	bne	18d9c <_obstack_memory_used@@Base+0x179c>
   18dc8:	b	18c6c <_obstack_memory_used@@Base+0x166c>
   18dcc:	ldr	r3, [sp, #8]
   18dd0:	str	r4, [sp, #4]
   18dd4:	orrs	r3, r7, r3
   18dd8:	ldr	r3, [sp, #64]	; 0x40
   18ddc:	mov	r2, fp
   18de0:	str	r3, [sp]
   18de4:	ldr	r1, [sp, #16]
   18de8:	movne	r3, #1
   18dec:	moveq	r3, #0
   18df0:	bl	189cc <_obstack_memory_used@@Base+0x13cc>
   18df4:	orr	r7, r7, r0
   18df8:	ldr	r0, [r5, #-16]
   18dfc:	cmp	r0, #0
   18e00:	beq	18c80 <_obstack_memory_used@@Base+0x1680>
   18e04:	ldr	r3, [sp, #64]	; 0x40
   18e08:	add	r5, r5, #16
   18e0c:	cmp	r7, #0
   18e10:	cmpne	r3, #0
   18e14:	beq	18dcc <_obstack_memory_used@@Base+0x17cc>
   18e18:	b	18c80 <_obstack_memory_used@@Base+0x1680>
   18e1c:	andeq	r0, r0, #2
   18e20:	andeq	r0, r0, #1
   18e24:	andeq	r0, r0, #4
   18e28:	ldr	r2, [r0, #24]
   18e2c:	ldr	r3, [r0, #28]
   18e30:	push	{r4, r5, r6, lr}
   18e34:	sub	r3, r3, r2
   18e38:	ldr	r2, [r0, #16]
   18e3c:	mov	r4, r0
   18e40:	cmp	r3, r2
   18e44:	mov	r5, r1
   18e48:	bls	18e50 <_obstack_memory_used@@Base+0x1850>
   18e4c:	bl	1bb2c <argp_error@@Base+0xc3c>
   18e50:	ldr	r1, [r4, #20]
   18e54:	ldr	r3, [r4, #8]
   18e58:	cmp	r1, #0
   18e5c:	addge	r5, r5, r1
   18e60:	cmp	r5, r3
   18e64:	ldr	r2, [r4, #28]
   18e68:	ldr	r3, [r4, #32]
   18e6c:	bcc	18ea8 <_obstack_memory_used@@Base+0x18a8>
   18e70:	cmp	r2, r3
   18e74:	bcs	18e90 <_obstack_memory_used@@Base+0x1890>
   18e78:	ldr	r3, [r4, #28]
   18e7c:	add	r2, r3, #1
   18e80:	str	r2, [r4, #28]
   18e84:	mov	r2, #10
   18e88:	strb	r2, [r3]
   18e8c:	pop	{r4, r5, r6, pc}
   18e90:	mov	r1, #1
   18e94:	mov	r0, r4
   18e98:	bl	1bf7c <argp_error@@Base+0x108c>
   18e9c:	cmp	r0, #0
   18ea0:	bne	18e78 <_obstack_memory_used@@Base+0x1878>
   18ea4:	pop	{r4, r5, r6, pc}
   18ea8:	cmp	r2, r3
   18eac:	bcs	18ec4 <_obstack_memory_used@@Base+0x18c4>
   18eb0:	ldr	r3, [r4, #28]
   18eb4:	add	r2, r3, #1
   18eb8:	str	r2, [r4, #28]
   18ebc:	mov	r2, #32
   18ec0:	b	18e88 <_obstack_memory_used@@Base+0x1888>
   18ec4:	mov	r1, #1
   18ec8:	mov	r0, r4
   18ecc:	bl	1bf7c <argp_error@@Base+0x108c>
   18ed0:	cmp	r0, #0
   18ed4:	bne	18eb0 <_obstack_memory_used@@Base+0x18b0>
   18ed8:	pop	{r4, r5, r6, pc}
   18edc:	push	{r4, r5, r6, lr}
   18ee0:	ldr	r5, [r0, #8]
   18ee4:	ldr	r2, [r0, #12]
   18ee8:	ldr	ip, [r1, #12]
   18eec:	cmp	r5, #0
   18ef0:	orr	r2, r2, ip
   18ef4:	bne	18f04 <_obstack_memory_used@@Base+0x1904>
   18ef8:	ldr	r5, [r1, #8]
   18efc:	cmp	r5, #0
   18f00:	beq	18f30 <_obstack_memory_used@@Base+0x1930>
   18f04:	tst	r2, #16
   18f08:	bne	18f30 <_obstack_memory_used@@Base+0x1930>
   18f0c:	tst	r2, #1
   18f10:	mov	r6, r3
   18f14:	mov	r4, r0
   18f18:	beq	18f38 <_obstack_memory_used@@Base+0x1938>
   18f1c:	ldr	r2, [r0, #4]
   18f20:	ldr	r1, [pc, #52]	; 18f5c <_obstack_memory_used@@Base+0x195c>
   18f24:	mov	r3, r5
   18f28:	mov	r0, r6
   18f2c:	bl	1c060 <argp_error@@Base+0x1170>
   18f30:	mov	r0, #0
   18f34:	pop	{r4, r5, r6, pc}
   18f38:	mov	r0, r5
   18f3c:	bl	11570 <strlen@plt>
   18f40:	add	r1, r0, #6
   18f44:	mov	r0, r6
   18f48:	bl	18e28 <_obstack_memory_used@@Base+0x1828>
   18f4c:	mov	r3, r5
   18f50:	ldr	r2, [r4, #4]
   18f54:	ldr	r1, [pc, #4]	; 18f60 <_obstack_memory_used@@Base+0x1960>
   18f58:	b	18f28 <_obstack_memory_used@@Base+0x1928>
   18f5c:	andeq	pc, r1, fp, asr #5
   18f60:	ldrdeq	pc, [r1], -r6
   18f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f68:	mov	r6, r3
   18f6c:	sub	sp, sp, #36	; 0x24
   18f70:	ldr	r3, [r0, #16]
   18f74:	str	r1, [sp, #20]
   18f78:	str	r3, [sp, #12]
   18f7c:	ldr	r3, [r0, #8]
   18f80:	ldr	sl, [r2]
   18f84:	str	r3, [sp, #16]
   18f88:	mov	fp, r2
   18f8c:	mov	r3, r1
   18f90:	mov	r2, r0
   18f94:	ldr	r1, [pc, #404]	; 19130 <_obstack_memory_used@@Base+0x1b30>
   18f98:	ldr	r0, [sp, #16]
   18f9c:	ldr	r5, [sp, #72]	; 0x48
   18fa0:	bl	18630 <_obstack_memory_used@@Base+0x1030>
   18fa4:	subs	r8, r0, #0
   18fa8:	moveq	r7, r8
   18fac:	moveq	r4, r8
   18fb0:	beq	19044 <_obstack_memory_used@@Base+0x1a44>
   18fb4:	mov	r1, #10
   18fb8:	bl	11408 <strchrnul@plt>
   18fbc:	ldrb	r4, [r0]
   18fc0:	mov	r7, r0
   18fc4:	cmp	r4, #0
   18fc8:	moveq	r9, r8
   18fcc:	beq	18ff8 <_obstack_memory_used@@Base+0x19f8>
   18fd0:	ldrb	r3, [sl]
   18fd4:	mov	r9, r8
   18fd8:	mov	r4, #0
   18fdc:	mov	r2, #10
   18fe0:	cmp	r4, r3
   18fe4:	blt	190b4 <_obstack_memory_used@@Base+0x1ab4>
   18fe8:	ldr	r3, [fp]
   18fec:	mov	r4, #1
   18ff0:	add	r3, r3, #1
   18ff4:	str	r3, [fp]
   18ff8:	add	r1, r7, #1
   18ffc:	sub	r1, r1, r9
   19000:	mov	r0, r5
   19004:	bl	18e28 <_obstack_memory_used@@Base+0x1828>
   19008:	ldr	r2, [r5, #28]
   1900c:	sub	r3, r7, r9
   19010:	ldr	r1, [r5, #32]
   19014:	add	r2, r2, r3
   19018:	cmp	r1, r2
   1901c:	bcc	190e0 <_obstack_memory_used@@Base+0x1ae0>
   19020:	mov	r2, r3
   19024:	mov	r1, r9
   19028:	ldr	r0, [r5, #28]
   1902c:	str	r3, [sp, #24]
   19030:	bl	11444 <memcpy@plt>
   19034:	ldr	r2, [r5, #28]
   19038:	ldr	r3, [sp, #24]
   1903c:	add	r3, r2, r3
   19040:	str	r3, [r5, #28]
   19044:	ldr	r3, [sp, #16]
   19048:	cmp	r8, #0
   1904c:	cmpne	r3, r8
   19050:	beq	1905c <_obstack_memory_used@@Base+0x1a5c>
   19054:	mov	r0, r8
   19058:	bl	171e4 <argp_parse@@Base+0xa9c>
   1905c:	ldr	r3, [sp, #12]
   19060:	cmp	r3, #0
   19064:	addne	r8, r3, #16
   19068:	bne	1911c <_obstack_memory_used@@Base+0x1b1c>
   1906c:	cmp	r6, #0
   19070:	moveq	r4, #0
   19074:	andne	r4, r4, #1
   19078:	cmp	r4, #0
   1907c:	beq	190a4 <_obstack_memory_used@@Base+0x1aa4>
   19080:	ldrb	r2, [r7]
   19084:	ldrb	r3, [sl]
   19088:	cmp	r2, #0
   1908c:	addne	r3, r3, #1
   19090:	strbne	r3, [sl]
   19094:	movne	r6, #0
   19098:	bne	190a4 <_obstack_memory_used@@Base+0x1aa4>
   1909c:	cmp	r3, #0
   190a0:	strbne	r2, [sl]
   190a4:	clz	r0, r6
   190a8:	lsr	r0, r0, #5
   190ac:	add	sp, sp, #36	; 0x24
   190b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   190b4:	add	r9, r7, #1
   190b8:	mov	r1, r2
   190bc:	mov	r0, r9
   190c0:	str	r3, [sp, #28]
   190c4:	str	r2, [sp, #24]
   190c8:	bl	11408 <strchrnul@plt>
   190cc:	add	r4, r4, #1
   190d0:	ldr	r3, [sp, #28]
   190d4:	ldr	r2, [sp, #24]
   190d8:	mov	r7, r0
   190dc:	b	18fe0 <_obstack_memory_used@@Base+0x19e0>
   190e0:	mov	r1, r3
   190e4:	mov	r0, r5
   190e8:	str	r3, [sp, #24]
   190ec:	bl	1bf7c <argp_error@@Base+0x108c>
   190f0:	ldr	r3, [sp, #24]
   190f4:	cmp	r0, #0
   190f8:	bne	19020 <_obstack_memory_used@@Base+0x1a20>
   190fc:	b	19044 <_obstack_memory_used@@Base+0x1a44>
   19100:	mov	r3, r6
   19104:	str	r5, [sp]
   19108:	mov	r2, fp
   1910c:	ldr	r1, [sp, #20]
   19110:	bl	18f64 <_obstack_memory_used@@Base+0x1964>
   19114:	clz	r6, r0
   19118:	lsr	r6, r6, #5
   1911c:	add	r8, r8, #16
   19120:	ldr	r0, [r8, #-32]	; 0xffffffe0
   19124:	cmp	r0, #0
   19128:	bne	19100 <_obstack_memory_used@@Base+0x1b00>
   1912c:	b	1906c <_obstack_memory_used@@Base+0x1a6c>
   19130:	andeq	r0, r0, #6
   19134:	ldr	r2, [r0, #8]
   19138:	cmp	r2, #0
   1913c:	bne	19170 <_obstack_memory_used@@Base+0x1b70>
   19140:	ldr	r2, [r1, #8]
   19144:	cmp	r2, #0
   19148:	bne	19170 <_obstack_memory_used@@Base+0x1b70>
   1914c:	ldr	r1, [r1, #12]
   19150:	ldr	r2, [r0, #12]
   19154:	orr	r2, r2, r1
   19158:	tst	r2, #16
   1915c:	ldreq	r2, [r3]
   19160:	addeq	r1, r2, #1
   19164:	streq	r1, [r3]
   19168:	ldreq	r3, [r0, #4]
   1916c:	strbeq	r3, [r2]
   19170:	mov	r0, #0
   19174:	bx	lr
   19178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1917c:	add	fp, sp, #32
   19180:	sub	sp, sp, #12
   19184:	ldr	r6, [r0, #4]
   19188:	cmp	r6, #0
   1918c:	beq	19230 <_obstack_memory_used@@Base+0x1c30>
   19190:	mov	r5, r0
   19194:	ldr	r0, [r0, #8]
   19198:	mov	r4, r1
   1919c:	bl	11570 <strlen@plt>
   191a0:	ldr	sl, [pc, #324]	; 192ec <_obstack_memory_used@@Base+0x1cec>
   191a4:	ldr	r7, [r5]
   191a8:	sub	r9, fp, #36	; 0x24
   191ac:	add	r0, r0, #15
   191b0:	bic	r0, r0, #7
   191b4:	sub	sp, sp, r0
   191b8:	mov	r8, sp
   191bc:	str	sp, [r9, #-4]!
   191c0:	ldr	r2, [r7, #20]
   191c4:	mov	r0, r7
   191c8:	mov	r3, r9
   191cc:	ldr	r2, [r2, #24]
   191d0:	mov	r1, sl
   191d4:	bl	1836c <_obstack_memory_used@@Base+0xd6c>
   191d8:	subs	r6, r6, #1
   191dc:	add	r7, r7, #28
   191e0:	bne	191c0 <_obstack_memory_used@@Base+0x1bc0>
   191e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191e8:	cmp	r8, r3
   191ec:	bcs	1920c <_obstack_memory_used@@Base+0x1c0c>
   191f0:	add	r2, r3, #1
   191f4:	str	r2, [fp, #-40]	; 0xffffffd8
   191f8:	ldr	r1, [pc, #240]	; 192f0 <_obstack_memory_used@@Base+0x1cf0>
   191fc:	strb	r6, [r3]
   19200:	mov	r2, r8
   19204:	mov	r0, r4
   19208:	bl	1c060 <argp_error@@Base+0x1170>
   1920c:	ldm	r5, {r6, r7}
   19210:	ldr	r8, [pc, #220]	; 192f4 <_obstack_memory_used@@Base+0x1cf4>
   19214:	cmp	r7, #0
   19218:	bne	19238 <_obstack_memory_used@@Base+0x1c38>
   1921c:	ldm	r5, {r5, r8}
   19220:	ldr	sl, [pc, #208]	; 192f8 <_obstack_memory_used@@Base+0x1cf8>
   19224:	add	r5, r5, #28
   19228:	cmp	r8, #0
   1922c:	bne	1925c <_obstack_memory_used@@Base+0x1c5c>
   19230:	sub	sp, fp, #32
   19234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19238:	ldr	r2, [r6, #20]
   1923c:	mov	r0, r6
   19240:	mov	r3, r4
   19244:	ldr	r2, [r2, #24]
   19248:	mov	r1, r8
   1924c:	bl	1836c <_obstack_memory_used@@Base+0xd6c>
   19250:	add	r6, r6, #28
   19254:	sub	r7, r7, #1
   19258:	b	19214 <_obstack_memory_used@@Base+0x1c14>
   1925c:	ldr	r7, [r5, #-28]	; 0xffffffe4
   19260:	ldr	r9, [r5, #-24]	; 0xffffffe8
   19264:	mov	r6, r7
   19268:	cmp	r9, #0
   1926c:	subeq	r8, r8, #1
   19270:	addeq	r5, r5, #28
   19274:	beq	19228 <_obstack_memory_used@@Base+0x1c28>
   19278:	ldr	r2, [r6]
   1927c:	cmp	r2, #0
   19280:	beq	192d0 <_obstack_memory_used@@Base+0x1cd0>
   19284:	ldr	r1, [r6, #12]
   19288:	tst	r1, #4
   1928c:	moveq	r7, r6
   19290:	tst	r1, #2
   19294:	bne	192d0 <_obstack_memory_used@@Base+0x1cd0>
   19298:	ldr	r3, [r6, #8]
   1929c:	ldr	r0, [r7, #12]
   192a0:	cmp	r3, #0
   192a4:	orr	r1, r1, r0
   192a8:	ldreq	r3, [r7, #8]
   192ac:	tst	r1, #16
   192b0:	bne	192d0 <_obstack_memory_used@@Base+0x1cd0>
   192b4:	cmp	r3, #0
   192b8:	beq	192dc <_obstack_memory_used@@Base+0x1cdc>
   192bc:	tst	r1, #1
   192c0:	movne	r1, sl
   192c4:	ldreq	r1, [pc, #48]	; 192fc <_obstack_memory_used@@Base+0x1cfc>
   192c8:	mov	r0, r4
   192cc:	bl	1c060 <argp_error@@Base+0x1170>
   192d0:	add	r6, r6, #24
   192d4:	sub	r9, r9, #1
   192d8:	b	19268 <_obstack_memory_used@@Base+0x1c68>
   192dc:	ldr	r1, [pc, #28]	; 19300 <_obstack_memory_used@@Base+0x1d00>
   192e0:	mov	r0, r4
   192e4:	bl	1c060 <argp_error@@Base+0x1170>
   192e8:	b	192d0 <_obstack_memory_used@@Base+0x1cd0>
   192ec:	andeq	r9, r1, r4, lsr r1
   192f0:	ldrdeq	pc, [r1], -pc	; <UNPREDICTABLE>
   192f4:	ldrdeq	r8, [r1], -ip
   192f8:	andeq	pc, r1, r6, ror #5
   192fc:	strdeq	pc, [r1], -r3
   19300:	strdeq	pc, [r1], -lr
   19304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19308:	mov	r8, r1
   1930c:	ldm	r0, {r5, r6}
   19310:	cmp	r6, #0
   19314:	bne	1931c <_obstack_memory_used@@Base+0x1d1c>
   19318:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1931c:	ldm	r5, {r4, r9}
   19320:	mov	r7, #0
   19324:	add	r4, r4, #24
   19328:	cmp	r9, r7
   1932c:	subeq	r6, r6, #1
   19330:	addeq	r5, r5, #28
   19334:	beq	19310 <_obstack_memory_used@@Base+0x1d10>
   19338:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1933c:	cmp	r0, #0
   19340:	beq	19360 <_obstack_memory_used@@Base+0x1d60>
   19344:	ldr	r3, [r4, #-12]
   19348:	tst	r3, #2
   1934c:	bne	19360 <_obstack_memory_used@@Base+0x1d60>
   19350:	mov	r1, r8
   19354:	bl	113d8 <strcmp@plt>
   19358:	cmp	r0, #0
   1935c:	beq	1936c <_obstack_memory_used@@Base+0x1d6c>
   19360:	add	r7, r7, #1
   19364:	add	r4, r4, #24
   19368:	b	19328 <_obstack_memory_used@@Base+0x1d28>
   1936c:	mvn	r3, #0
   19370:	str	r3, [r5, #12]
   19374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1937c:	sub	sp, sp, #44	; 0x2c
   19380:	ldr	r6, [r0, #16]
   19384:	str	r0, [sp, #8]
   19388:	ldr	r5, [r0]
   1938c:	mov	r0, #16
   19390:	mov	r9, r1
   19394:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   19398:	subs	r4, r0, #0
   1939c:	bne	193b4 <_obstack_memory_used@@Base+0x1db4>
   193a0:	ldr	r3, [pc, #1444]	; 1994c <_obstack_memory_used@@Base+0x234c>
   193a4:	ldr	r2, [pc, #1444]	; 19950 <_obstack_memory_used@@Base+0x2350>
   193a8:	ldr	r1, [pc, #1444]	; 19954 <_obstack_memory_used@@Base+0x2354>
   193ac:	ldr	r0, [pc, #1444]	; 19958 <_obstack_memory_used@@Base+0x2358>
   193b0:	bl	11714 <__assert_fail@plt>
   193b4:	mov	r3, #0
   193b8:	cmp	r5, r3
   193bc:	str	r3, [r4, #4]
   193c0:	str	r3, [r4, #12]
   193c4:	beq	19918 <_obstack_memory_used@@Base+0x2318>
   193c8:	ldr	r8, [r5, #12]
   193cc:	ands	r8, r8, #4
   193d0:	addeq	r7, r5, #24
   193d4:	moveq	fp, r8
   193d8:	beq	19780 <_obstack_memory_used@@Base+0x2180>
   193dc:	ldr	r3, [pc, #1384]	; 1994c <_obstack_memory_used@@Base+0x234c>
   193e0:	mov	r2, #460	; 0x1cc
   193e4:	ldr	r1, [pc, #1384]	; 19954 <_obstack_memory_used@@Base+0x2354>
   193e8:	ldr	r0, [pc, #1388]	; 1995c <_obstack_memory_used@@Base+0x235c>
   193ec:	b	193b0 <_obstack_memory_used@@Base+0x1db0>
   193f0:	ldr	r2, [pc, #1384]	; 19960 <_obstack_memory_used@@Base+0x2360>
   193f4:	ldr	r0, [r4, #4]
   193f8:	cmp	r0, r2
   193fc:	addls	r7, r7, #28
   19400:	movls	sl, r3
   19404:	movls	r2, r1
   19408:	bls	198e4 <_obstack_memory_used@@Base+0x22e4>
   1940c:	ldr	r3, [pc, #1336]	; 1994c <_obstack_memory_used@@Base+0x234c>
   19410:	mov	r2, #476	; 0x1dc
   19414:	ldr	r1, [pc, #1336]	; 19954 <_obstack_memory_used@@Base+0x2354>
   19418:	ldr	r0, [pc, #1348]	; 19964 <_obstack_memory_used@@Base+0x2364>
   1941c:	b	193b0 <_obstack_memory_used@@Base+0x1db0>
   19420:	ldrb	r0, [r0]
   19424:	add	r1, r1, #1
   19428:	cmp	r0, r8
   1942c:	beq	198a8 <_obstack_memory_used@@Base+0x22a8>
   19430:	cmp	sl, r1
   19434:	mov	r0, r1
   19438:	bhi	19420 <_obstack_memory_used@@Base+0x1e20>
   1943c:	strb	r8, [sl]
   19440:	add	sl, sl, #1
   19444:	b	198a8 <_obstack_memory_used@@Base+0x22a8>
   19448:	ldr	r8, [r6, #-4]
   1944c:	ldr	r7, [r6, #-8]
   19450:	cmp	r8, #0
   19454:	bne	19464 <_obstack_memory_used@@Base+0x1e64>
   19458:	cmp	r7, #0
   1945c:	moveq	r1, r9
   19460:	beq	194c0 <_obstack_memory_used@@Base+0x1ec0>
   19464:	ldr	r3, [sp, #8]
   19468:	sub	r5, r6, #16
   1946c:	mov	r0, #28
   19470:	ldr	r3, [r3, #16]
   19474:	sub	r5, r5, r3
   19478:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1947c:	asr	r5, r5, #4
   19480:	subs	r1, r0, #0
   19484:	beq	194c0 <_obstack_memory_used@@Base+0x1ec0>
   19488:	ldr	r3, [sp, #8]
   1948c:	cmp	r9, #0
   19490:	str	r3, [r1, #16]
   19494:	ldrne	r3, [r9, #20]
   19498:	moveq	r3, #0
   1949c:	addne	r3, r3, #1
   194a0:	str	r3, [r1, #20]
   194a4:	ldr	r3, [r4, #12]
   194a8:	str	r8, [r1, #8]
   194ac:	str	r7, [r1]
   194b0:	str	r5, [r1, #4]
   194b4:	str	r9, [r1, #12]
   194b8:	str	r3, [r1, #24]
   194bc:	str	r1, [r4, #12]
   194c0:	ldr	r0, [r6, #-16]
   194c4:	bl	19378 <_obstack_memory_used@@Base+0x1d78>
   194c8:	ldr	r2, [sp, #28]
   194cc:	ldr	r3, [r4, #12]
   194d0:	mov	r5, r0
   194d4:	cmp	r3, #0
   194d8:	bne	19534 <_obstack_memory_used@@Base+0x1f34>
   194dc:	ldr	r1, [r5, #12]
   194e0:	str	r1, [r2]
   194e4:	ldr	r2, [r5, #4]
   194e8:	str	r3, [r5, #12]
   194ec:	cmp	r2, #0
   194f0:	beq	19518 <_obstack_memory_used@@Base+0x1f18>
   194f4:	ldr	r1, [r4, #4]
   194f8:	cmp	r1, #0
   194fc:	bne	19540 <_obstack_memory_used@@Base+0x1f40>
   19500:	str	r2, [r4, #4]
   19504:	ldr	r2, [r5]
   19508:	str	r2, [r4]
   1950c:	ldr	r2, [r5, #8]
   19510:	str	r2, [r4, #8]
   19514:	str	r3, [r5, #4]
   19518:	mov	r0, r5
   1951c:	bl	18504 <_obstack_memory_used@@Base+0xf04>
   19520:	add	r6, r6, #16
   19524:	ldr	r3, [r6, #-16]
   19528:	cmp	r3, #0
   1952c:	bne	19448 <_obstack_memory_used@@Base+0x1e48>
   19530:	b	1992c <_obstack_memory_used@@Base+0x232c>
   19534:	add	r2, r3, #24
   19538:	ldr	r3, [r3, #24]
   1953c:	b	194d4 <_obstack_memory_used@@Base+0x1ed4>
   19540:	add	r3, r2, r1
   19544:	mov	r7, #28
   19548:	str	r3, [sp, #12]
   1954c:	mul	r0, r7, r3
   19550:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   19554:	str	r0, [sp]
   19558:	ldr	r0, [r4, #8]
   1955c:	bl	11570 <strlen@plt>
   19560:	mov	fp, r0
   19564:	ldr	r0, [r5, #8]
   19568:	bl	11570 <strlen@plt>
   1956c:	add	r0, fp, r0
   19570:	add	r0, r0, #1
   19574:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   19578:	ldr	r3, [sp]
   1957c:	cmp	r3, #0
   19580:	cmpne	r0, #0
   19584:	mov	r8, r0
   19588:	ldreq	r3, [pc, #984]	; 19968 <_obstack_memory_used@@Base+0x2368>
   1958c:	ldreq	r2, [pc, #984]	; 1996c <_obstack_memory_used@@Base+0x236c>
   19590:	ldreq	r1, [pc, #956]	; 19954 <_obstack_memory_used@@Base+0x2354>
   19594:	ldreq	r0, [pc, #980]	; 19970 <_obstack_memory_used@@Base+0x2370>
   19598:	beq	193b0 <_obstack_memory_used@@Base+0x1db0>
   1959c:	ldr	r3, [sp, #12]
   195a0:	ldr	r2, [pc, #952]	; 19960 <_obstack_memory_used@@Base+0x2360>
   195a4:	cmp	r3, r2
   195a8:	ldrhi	r3, [pc, #952]	; 19968 <_obstack_memory_used@@Base+0x2368>
   195ac:	movhi	r2, #972	; 0x3cc
   195b0:	ldrhi	r1, [pc, #924]	; 19954 <_obstack_memory_used@@Base+0x2354>
   195b4:	ldrhi	r0, [pc, #952]	; 19974 <_obstack_memory_used@@Base+0x2374>
   195b8:	bhi	193b0 <_obstack_memory_used@@Base+0x1db0>
   195bc:	ldr	sl, [r4, #4]
   195c0:	ldr	r3, [r4]
   195c4:	ldr	r0, [sp]
   195c8:	str	r3, [sp, #16]
   195cc:	mul	r3, r7, sl
   195d0:	ldr	r1, [sp, #16]
   195d4:	mov	r2, r3
   195d8:	str	r3, [sp, #24]
   195dc:	bl	11540 <mempcpy@plt>
   195e0:	ldr	r3, [r5, #4]
   195e4:	ldr	r1, [r5]
   195e8:	str	r3, [sp, #4]
   195ec:	mul	r2, r7, r3
   195f0:	bl	11444 <memcpy@plt>
   195f4:	ldr	r3, [r4, #8]
   195f8:	mov	r2, fp
   195fc:	mov	r1, r3
   19600:	mov	r0, r8
   19604:	str	r3, [sp, #20]
   19608:	bl	11444 <memcpy@plt>
   1960c:	ldr	r1, [sp]
   19610:	ldr	r3, [sp, #20]
   19614:	cmp	sl, #0
   19618:	bne	19674 <_obstack_memory_used@@Base+0x2074>
   1961c:	add	r3, r8, fp
   19620:	str	r3, [sp, #20]
   19624:	ldr	r3, [sp, #24]
   19628:	ldr	r1, [r5, #8]
   1962c:	add	r7, r3, #28
   19630:	ldr	r3, [sp]
   19634:	ldr	sl, [sp, #20]
   19638:	add	r7, r3, r7
   1963c:	ldr	r3, [sp, #4]
   19640:	cmp	r3, #0
   19644:	bne	19690 <_obstack_memory_used@@Base+0x2090>
   19648:	ldrb	r3, [sp, #4]
   1964c:	ldr	r0, [sp, #16]
   19650:	strb	r3, [sl]
   19654:	bl	171e4 <argp_parse@@Base+0xa9c>
   19658:	ldr	r0, [r4, #8]
   1965c:	bl	171e4 <argp_parse@@Base+0xa9c>
   19660:	ldr	r3, [sp]
   19664:	str	r3, [r4]
   19668:	ldr	r3, [sp, #12]
   1966c:	stmib	r4, {r3, r8}
   19670:	b	19518 <_obstack_memory_used@@Base+0x1f18>
   19674:	ldr	r2, [r1, #8]
   19678:	sub	sl, sl, #1
   1967c:	sub	r2, r2, r3
   19680:	add	r2, r8, r2
   19684:	str	r2, [r1, #8]
   19688:	add	r1, r1, #28
   1968c:	b	19614 <_obstack_memory_used@@Base+0x2014>
   19690:	ldr	r3, [r7, #-24]	; 0xffffffe8
   19694:	ldr	fp, [r7, #-28]	; 0xffffffe4
   19698:	str	sl, [r7, #-20]	; 0xffffffec
   1969c:	cmp	r3, #0
   196a0:	ldreq	r3, [sp, #4]
   196a4:	addeq	r7, r7, #28
   196a8:	subeq	r3, r3, #1
   196ac:	streq	r3, [sp, #4]
   196b0:	beq	1963c <_obstack_memory_used@@Base+0x203c>
   196b4:	ldr	r2, [fp, #12]
   196b8:	tst	r2, #8
   196bc:	bne	19700 <_obstack_memory_used@@Base+0x2100>
   196c0:	ldr	r2, [fp, #4]
   196c4:	sub	r0, r2, #1
   196c8:	cmp	r0, #254	; 0xfe
   196cc:	str	r2, [sp, #36]	; 0x24
   196d0:	bhi	19700 <_obstack_memory_used@@Base+0x2100>
   196d4:	str	r3, [sp, #32]
   196d8:	str	r1, [sp, #24]
   196dc:	bl	1154c <__ctype_b_loc@plt>
   196e0:	ldr	r2, [sp, #36]	; 0x24
   196e4:	ldr	r1, [sp, #24]
   196e8:	ldr	r3, [sp, #32]
   196ec:	ldr	ip, [r0]
   196f0:	lsl	r0, r2, #1
   196f4:	ldrh	r0, [ip, r0]
   196f8:	tst	r0, #16384	; 0x4000
   196fc:	bne	19938 <_obstack_memory_used@@Base+0x2338>
   19700:	add	fp, fp, #24
   19704:	sub	r3, r3, #1
   19708:	b	1969c <_obstack_memory_used@@Base+0x209c>
   1970c:	ldrb	ip, [ip]
   19710:	add	r2, r2, #1
   19714:	cmp	ip, r0
   19718:	beq	19734 <_obstack_memory_used@@Base+0x2134>
   1971c:	ldr	lr, [sp, #20]
   19720:	mov	ip, r2
   19724:	cmp	lr, r2
   19728:	bhi	1970c <_obstack_memory_used@@Base+0x210c>
   1972c:	strb	r0, [sl]
   19730:	add	sl, sl, #1
   19734:	add	r1, r1, #1
   19738:	b	19700 <_obstack_memory_used@@Base+0x2100>
   1973c:	ldr	r1, [r7, #-12]
   19740:	tst	r1, #4
   19744:	ldreq	r2, [r4, #4]
   19748:	addeq	r2, r2, #1
   1974c:	streq	r2, [r4, #4]
   19750:	tst	r1, #8
   19754:	bne	1977c <_obstack_memory_used@@Base+0x217c>
   19758:	sub	r2, sl, #1
   1975c:	cmp	r2, #254	; 0xfe
   19760:	bhi	1977c <_obstack_memory_used@@Base+0x217c>
   19764:	bl	1154c <__ctype_b_loc@plt>
   19768:	lsl	sl, sl, #1
   1976c:	ldr	r2, [r0]
   19770:	ldrh	r2, [r2, sl]
   19774:	tst	r2, #16384	; 0x4000
   19778:	addne	fp, fp, #1
   1977c:	add	r7, r7, #24
   19780:	ldr	sl, [r7, #-20]	; 0xffffffec
   19784:	cmp	sl, #0
   19788:	bne	1973c <_obstack_memory_used@@Base+0x213c>
   1978c:	ldr	r2, [r7, #-24]	; 0xffffffe8
   19790:	cmp	r2, #0
   19794:	bne	1973c <_obstack_memory_used@@Base+0x213c>
   19798:	ldr	r2, [r7, #-8]
   1979c:	cmp	r2, #0
   197a0:	bne	1973c <_obstack_memory_used@@Base+0x213c>
   197a4:	ldr	r1, [r7, #-4]
   197a8:	cmp	r1, #0
   197ac:	bne	1973c <_obstack_memory_used@@Base+0x213c>
   197b0:	ldr	r2, [r4, #4]
   197b4:	mov	r0, #28
   197b8:	str	r1, [sp]
   197bc:	mul	r0, r0, r2
   197c0:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   197c4:	str	r0, [r4]
   197c8:	add	r0, fp, #1
   197cc:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   197d0:	ldr	r7, [r4]
   197d4:	ldr	r1, [sp]
   197d8:	cmp	r0, #0
   197dc:	cmpne	r7, #0
   197e0:	mov	r3, r0
   197e4:	str	r0, [r4, #8]
   197e8:	bne	193f0 <_obstack_memory_used@@Base+0x1df0>
   197ec:	ldr	r3, [pc, #344]	; 1994c <_obstack_memory_used@@Base+0x234c>
   197f0:	ldr	r2, [pc, #384]	; 19978 <_obstack_memory_used@@Base+0x2378>
   197f4:	ldr	r1, [pc, #344]	; 19954 <_obstack_memory_used@@Base+0x2354>
   197f8:	ldr	r0, [pc, #380]	; 1997c <_obstack_memory_used@@Base+0x237c>
   197fc:	b	193b0 <_obstack_memory_used@@Base+0x1db0>
   19800:	uxtb	r8, r8
   19804:	mov	r1, r3
   19808:	b	19430 <_obstack_memory_used@@Base+0x1e30>
   1980c:	ldr	r1, [r5, #12]
   19810:	tst	r1, #4
   19814:	bne	19858 <_obstack_memory_used@@Base+0x2258>
   19818:	b	198dc <_obstack_memory_used@@Base+0x22dc>
   1981c:	str	r2, [r7, #-24]	; 0xffffffe8
   19820:	ldr	fp, [r5, #20]
   19824:	str	r5, [r7, #-28]	; 0xffffffe4
   19828:	cmp	fp, #0
   1982c:	str	sl, [r7, #-20]	; 0xffffffec
   19830:	bne	19848 <_obstack_memory_used@@Base+0x2248>
   19834:	ldr	r1, [r5]
   19838:	cmp	r1, #0
   1983c:	cmpeq	r0, #0
   19840:	addeq	fp, r8, #1
   19844:	movne	fp, r8
   19848:	ldr	r1, [sp, #8]
   1984c:	str	fp, [r7, #-16]
   19850:	str	r9, [r7, #-12]
   19854:	str	r1, [r7, #-8]
   19858:	ldr	r1, [r7, #-24]	; 0xffffffe8
   1985c:	add	r1, r1, #1
   19860:	str	r1, [r7, #-24]	; 0xffffffe8
   19864:	ldr	r1, [r5, #12]
   19868:	tst	r1, #8
   1986c:	bne	198a8 <_obstack_memory_used@@Base+0x22a8>
   19870:	ldr	r8, [r5, #4]
   19874:	sub	r1, r8, #1
   19878:	cmp	r1, #254	; 0xfe
   1987c:	bhi	198a8 <_obstack_memory_used@@Base+0x22a8>
   19880:	str	r2, [sp, #4]
   19884:	str	r3, [sp]
   19888:	bl	1154c <__ctype_b_loc@plt>
   1988c:	lsl	r1, r8, #1
   19890:	ldr	r3, [sp]
   19894:	ldr	r2, [sp, #4]
   19898:	ldr	r0, [r0]
   1989c:	ldrh	r1, [r0, r1]
   198a0:	tst	r1, #16384	; 0x4000
   198a4:	bne	19800 <_obstack_memory_used@@Base+0x2200>
   198a8:	add	r5, r5, #24
   198ac:	ldr	r1, [r5, #4]
   198b0:	cmp	r1, #0
   198b4:	bne	1980c <_obstack_memory_used@@Base+0x220c>
   198b8:	ldr	r1, [r5]
   198bc:	cmp	r1, #0
   198c0:	bne	1980c <_obstack_memory_used@@Base+0x220c>
   198c4:	ldr	r1, [r5, #16]
   198c8:	cmp	r1, #0
   198cc:	bne	1980c <_obstack_memory_used@@Base+0x220c>
   198d0:	ldr	r1, [r5, #20]
   198d4:	cmp	r1, #0
   198d8:	bne	1980c <_obstack_memory_used@@Base+0x220c>
   198dc:	add	r7, r7, #28
   198e0:	mov	r8, fp
   198e4:	ldr	r0, [r5, #4]
   198e8:	cmp	r0, #0
   198ec:	bne	1981c <_obstack_memory_used@@Base+0x221c>
   198f0:	ldr	r1, [r5]
   198f4:	cmp	r1, #0
   198f8:	bne	1981c <_obstack_memory_used@@Base+0x221c>
   198fc:	ldr	r1, [r5, #16]
   19900:	cmp	r1, #0
   19904:	bne	1981c <_obstack_memory_used@@Base+0x221c>
   19908:	ldr	r1, [r5, #20]
   1990c:	cmp	r1, #0
   19910:	bne	1981c <_obstack_memory_used@@Base+0x221c>
   19914:	strb	r1, [sl]
   19918:	cmp	r6, #0
   1991c:	addne	r3, r4, #12
   19920:	addne	r6, r6, #16
   19924:	strne	r3, [sp, #28]
   19928:	bne	19524 <_obstack_memory_used@@Base+0x1f24>
   1992c:	mov	r0, r4
   19930:	add	sp, sp, #44	; 0x2c
   19934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19938:	ldrb	r0, [r1]
   1993c:	cmp	r0, r2
   19940:	moveq	r2, r8
   19944:	bne	19700 <_obstack_memory_used@@Base+0x2100>
   19948:	b	1971c <_obstack_memory_used@@Base+0x211c>
   1994c:	andeq	pc, r1, r4, lsr #4
   19950:	andeq	r0, r0, r2, asr #3
   19954:	andeq	pc, r1, r6, lsl #6
   19958:	andeq	pc, r1, r2, lsl r3	; <UNPREDICTABLE>
   1995c:	andeq	pc, r1, r6, lsl r3	; <UNPREDICTABLE>
   19960:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   19964:	andeq	pc, r1, r9, asr #6
   19968:	andeq	pc, r1, sp, lsr #4
   1996c:	andeq	r0, r0, sl, asr #7
   19970:	andeq	pc, r1, r2, lsl #7
   19974:	andeq	pc, r1, lr, asr #6
   19978:	ldrdeq	r0, [r0], -sl
   1997c:	andeq	pc, r1, r6, lsr #6
   19980:	push	{r4, r5, r6, lr}
   19984:	mov	r4, r0
   19988:	mov	r5, r1
   1998c:	ldr	r0, [r0, #12]
   19990:	ldr	r1, [r1, #12]
   19994:	cmp	r0, r1
   19998:	bne	199d0 <_obstack_memory_used@@Base+0x23d0>
   1999c:	ldr	r0, [r5, #8]
   199a0:	ldr	r3, [r4, #8]
   199a4:	mvn	r2, r0
   199a8:	lsr	r2, r2, #31
   199ac:	cmp	r2, r3, lsr #31
   199b0:	subne	r0, r3, r0
   199b4:	subeq	r0, r0, r3
   199b8:	cmp	r0, #0
   199bc:	popne	{r4, r5, r6, pc}
   199c0:	ldr	r0, [r5, #4]
   199c4:	ldr	r3, [r4, #4]
   199c8:	sub	r0, r0, r3
   199cc:	pop	{r4, r5, r6, pc}
   199d0:	bl	19980 <_obstack_memory_used@@Base+0x2380>
   199d4:	cmp	r0, #0
   199d8:	popne	{r4, r5, r6, pc}
   199dc:	ldr	r0, [r5, #8]
   199e0:	ldr	r3, [r4, #8]
   199e4:	mvn	r2, r0
   199e8:	lsr	r2, r2, #31
   199ec:	cmp	r2, r3, lsr #31
   199f0:	subne	r0, r3, r0
   199f4:	subeq	r0, r0, r3
   199f8:	cmp	r0, #0
   199fc:	beq	199c0 <_obstack_memory_used@@Base+0x23c0>
   19a00:	pop	{r4, r5, r6, pc}
   19a04:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   19a08:	mov	r6, r0
   19a0c:	ldr	r0, [r0, #16]
   19a10:	mov	r5, r1
   19a14:	cmp	r0, #0
   19a18:	movne	r3, r0
   19a1c:	bne	19a2c <_obstack_memory_used@@Base+0x242c>
   19a20:	ldr	r3, [r6, #12]
   19a24:	b	19a3c <_obstack_memory_used@@Base+0x243c>
   19a28:	mov	r3, r2
   19a2c:	ldr	r2, [r3, #12]
   19a30:	cmp	r2, #0
   19a34:	bne	19a28 <_obstack_memory_used@@Base+0x2428>
   19a38:	ldr	r3, [r3, #8]
   19a3c:	ldr	r1, [r5, #16]
   19a40:	cmp	r1, #0
   19a44:	movne	r2, r1
   19a48:	bne	19a58 <_obstack_memory_used@@Base+0x2458>
   19a4c:	ldr	r4, [r5, #12]
   19a50:	b	19a68 <_obstack_memory_used@@Base+0x2468>
   19a54:	mov	r2, ip
   19a58:	ldr	ip, [r2, #12]
   19a5c:	cmp	ip, #0
   19a60:	bne	19a54 <_obstack_memory_used@@Base+0x2454>
   19a64:	ldr	r4, [r2, #8]
   19a68:	mvn	r2, r4
   19a6c:	lsr	r2, r2, #31
   19a70:	cmp	r2, r3, lsr #31
   19a74:	subne	r4, r3, r4
   19a78:	subeq	r4, r4, r3
   19a7c:	cmp	r4, #0
   19a80:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19a84:	adds	r4, r1, #0
   19a88:	movne	r4, #1
   19a8c:	cmp	r0, #0
   19a90:	rsbeq	r4, r4, #0
   19a94:	rsbne	r4, r4, #1
   19a98:	cmp	r4, #0
   19a9c:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19aa0:	cmp	r0, #0
   19aa4:	beq	19b14 <_obstack_memory_used@@Base+0x2514>
   19aa8:	ldr	r3, [r0, #20]
   19aac:	ldr	r2, [r1, #20]
   19ab0:	cmp	r3, r2
   19ab4:	ble	19ae4 <_obstack_memory_used@@Base+0x24e4>
   19ab8:	ldr	r0, [r0, #12]
   19abc:	ldr	r3, [r0, #20]
   19ac0:	cmp	r2, r3
   19ac4:	blt	19ab8 <_obstack_memory_used@@Base+0x24b8>
   19ac8:	bl	19980 <_obstack_memory_used@@Base+0x2380>
   19acc:	cmp	r0, #0
   19ad0:	movne	r4, r0
   19ad4:	moveq	r4, #1
   19ad8:	mov	r0, r4
   19adc:	add	sp, sp, #8
   19ae0:	pop	{r4, r5, r6, r7, r8, pc}
   19ae4:	bge	19b08 <_obstack_memory_used@@Base+0x2508>
   19ae8:	ldr	r1, [r1, #12]
   19aec:	ldr	r2, [r1, #20]
   19af0:	cmp	r3, r2
   19af4:	blt	19ae8 <_obstack_memory_used@@Base+0x24e8>
   19af8:	bl	19980 <_obstack_memory_used@@Base+0x2380>
   19afc:	subs	r4, r0, #0
   19b00:	mvneq	r4, #0
   19b04:	b	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19b08:	bl	19980 <_obstack_memory_used@@Base+0x2380>
   19b0c:	subs	r4, r0, #0
   19b10:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19b14:	ldr	r4, [r5, #12]
   19b18:	ldr	r3, [r6, #12]
   19b1c:	mvn	r2, r4
   19b20:	lsr	r2, r2, #31
   19b24:	cmp	r2, r3, lsr #31
   19b28:	subne	r4, r3, r4
   19b2c:	subeq	r4, r4, r3
   19b30:	cmp	r4, #0
   19b34:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19b38:	mov	r0, r6
   19b3c:	bl	18330 <_obstack_memory_used@@Base+0xd30>
   19b40:	mov	r7, r0
   19b44:	str	r0, [sp]
   19b48:	mov	r0, r5
   19b4c:	bl	18330 <_obstack_memory_used@@Base+0xd30>
   19b50:	ldr	r3, [r6]
   19b54:	adds	r7, r7, #0
   19b58:	movne	r7, #1
   19b5c:	ldr	r3, [r3, #12]
   19b60:	ands	r3, r7, r3, lsr #3
   19b64:	moveq	r7, r4
   19b68:	str	r0, [sp, #4]
   19b6c:	beq	19b80 <_obstack_memory_used@@Base+0x2580>
   19b70:	mov	r0, sp
   19b74:	bl	18498 <_obstack_memory_used@@Base+0xe98>
   19b78:	adds	r7, r0, #0
   19b7c:	movne	r7, #1
   19b80:	ldr	r3, [r5]
   19b84:	ldr	r0, [r3, #12]
   19b88:	ands	r0, r0, #8
   19b8c:	beq	19bb0 <_obstack_memory_used@@Base+0x25b0>
   19b90:	ldr	r3, [sp, #4]
   19b94:	cmp	r3, #0
   19b98:	moveq	r0, r4
   19b9c:	beq	19bb0 <_obstack_memory_used@@Base+0x25b0>
   19ba0:	add	r0, sp, #4
   19ba4:	bl	18498 <_obstack_memory_used@@Base+0xe98>
   19ba8:	adds	r0, r0, #0
   19bac:	movne	r0, #1
   19bb0:	subs	r4, r7, r0
   19bb4:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19bb8:	ldr	r2, [r6, #20]
   19bbc:	mov	r3, r4
   19bc0:	ldr	r1, [pc, #224]	; 19ca8 <_obstack_memory_used@@Base+0x26a8>
   19bc4:	ldr	r2, [r2, #24]
   19bc8:	mov	r0, r6
   19bcc:	bl	1836c <_obstack_memory_used@@Base+0xd6c>
   19bd0:	ldr	r2, [r5, #20]
   19bd4:	mov	r3, r4
   19bd8:	ldr	r1, [pc, #200]	; 19ca8 <_obstack_memory_used@@Base+0x26a8>
   19bdc:	ldr	r2, [r2, #24]
   19be0:	uxtb	r8, r0
   19be4:	mov	r0, r5
   19be8:	bl	1836c <_obstack_memory_used@@Base+0xd6c>
   19bec:	cmp	r8, #0
   19bf0:	uxtb	r5, r0
   19bf4:	beq	19c00 <_obstack_memory_used@@Base+0x2600>
   19bf8:	mov	r6, r8
   19bfc:	b	19c10 <_obstack_memory_used@@Base+0x2610>
   19c00:	ldr	r3, [sp]
   19c04:	cmp	r3, #0
   19c08:	ldrbne	r6, [r3]
   19c0c:	beq	19bf8 <_obstack_memory_used@@Base+0x25f8>
   19c10:	cmp	r5, #0
   19c14:	beq	19c20 <_obstack_memory_used@@Base+0x2620>
   19c18:	mov	r7, r5
   19c1c:	b	19c30 <_obstack_memory_used@@Base+0x2630>
   19c20:	ldr	r3, [sp, #4]
   19c24:	cmp	r3, #0
   19c28:	ldrbne	r7, [r3]
   19c2c:	beq	19c18 <_obstack_memory_used@@Base+0x2618>
   19c30:	bl	1151c <__ctype_tolower_loc@plt>
   19c34:	ldr	r3, [r0]
   19c38:	ldr	r4, [r3, r6, lsl #2]
   19c3c:	ldr	r3, [r3, r7, lsl #2]
   19c40:	subs	r4, r4, r3
   19c44:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c48:	subs	r4, r7, r6
   19c4c:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c50:	adds	r4, r5, #0
   19c54:	movne	r4, #1
   19c58:	cmp	r8, #0
   19c5c:	rsbeq	r4, r4, #0
   19c60:	rsbne	r4, r4, #1
   19c64:	cmp	r4, #0
   19c68:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c6c:	cmp	r8, #0
   19c70:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c74:	ldm	sp, {r0, r1}
   19c78:	adds	r4, r1, #0
   19c7c:	movne	r4, #1
   19c80:	cmp	r0, #0
   19c84:	rsbeq	r4, r4, #0
   19c88:	rsbne	r4, r4, #1
   19c8c:	cmp	r4, #0
   19c90:	bne	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c94:	cmp	r0, #0
   19c98:	beq	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19c9c:	bl	1148c <strcasecmp@plt>
   19ca0:	mov	r4, r0
   19ca4:	b	19ad8 <_obstack_memory_used@@Base+0x24d8>
   19ca8:	andeq	r8, r1, ip, asr #8

00019cac <argp_failure@@Base>:
   19cac:	push	{r3}		; (str r3, [sp, #-4]!)
   19cb0:	push	{r4, r5, r6, r7, r8, lr}
   19cb4:	sub	sp, sp, #204	; 0xcc
   19cb8:	subs	r5, r0, #0
   19cbc:	mov	r7, r1
   19cc0:	mov	r6, r2
   19cc4:	ldr	r8, [sp, #228]	; 0xe4
   19cc8:	beq	19cf4 <argp_failure@@Base+0x48>
   19ccc:	ldr	r3, [r5, #16]
   19cd0:	tst	r3, #2
   19cd4:	bne	19ce4 <argp_failure@@Base+0x38>
   19cd8:	ldr	r4, [r5, #44]	; 0x2c
   19cdc:	cmp	r4, #0
   19ce0:	bne	19d18 <argp_failure@@Base+0x6c>
   19ce4:	add	sp, sp, #204	; 0xcc
   19ce8:	pop	{r4, r5, r6, r7, r8, lr}
   19cec:	add	sp, sp, #4
   19cf0:	bx	lr
   19cf4:	ldr	r3, [pc, #244]	; 19df0 <argp_failure@@Base+0x144>
   19cf8:	ldr	r4, [r3]
   19cfc:	cmp	r4, #0
   19d00:	beq	19ce4 <argp_failure@@Base+0x38>
   19d04:	mov	r0, r4
   19d08:	bl	11660 <flockfile@plt>
   19d0c:	ldr	r3, [pc, #224]	; 19df4 <argp_failure@@Base+0x148>
   19d10:	ldr	r0, [r3]
   19d14:	b	19d24 <argp_failure@@Base+0x78>
   19d18:	mov	r0, r4
   19d1c:	bl	11660 <flockfile@plt>
   19d20:	ldr	r0, [r5, #40]	; 0x28
   19d24:	mov	r1, r4
   19d28:	bl	1139c <fputs_unlocked@plt>
   19d2c:	cmp	r8, #0
   19d30:	beq	19d64 <argp_failure@@Base+0xb8>
   19d34:	add	r3, sp, #232	; 0xe8
   19d38:	mov	r1, r4
   19d3c:	mov	r0, #58	; 0x3a
   19d40:	str	r3, [sp]
   19d44:	bl	11720 <putc_unlocked@plt>
   19d48:	mov	r1, r4
   19d4c:	mov	r0, #32
   19d50:	bl	11720 <putc_unlocked@plt>
   19d54:	ldr	r2, [sp]
   19d58:	mov	r1, r8
   19d5c:	mov	r0, r4
   19d60:	bl	11630 <vfprintf@plt>
   19d64:	cmp	r6, #0
   19d68:	beq	19db8 <argp_failure@@Base+0x10c>
   19d6c:	mov	r1, r4
   19d70:	mov	r0, #58	; 0x3a
   19d74:	bl	11720 <putc_unlocked@plt>
   19d78:	mov	r1, r4
   19d7c:	mov	r0, #32
   19d80:	bl	11720 <putc_unlocked@plt>
   19d84:	mov	r2, #200	; 0xc8
   19d88:	mov	r1, sp
   19d8c:	mov	r0, r6
   19d90:	bl	115ac <strerror_r@plt>
   19d94:	cmp	r0, #0
   19d98:	bne	19db0 <argp_failure@@Base+0x104>
   19d9c:	mov	r0, r6
   19da0:	bl	11510 <strerror@plt>
   19da4:	ldr	r3, [pc, #76]	; 19df8 <argp_failure@@Base+0x14c>
   19da8:	cmp	r0, #0
   19dac:	moveq	r0, r3
   19db0:	mov	r1, r4
   19db4:	bl	1139c <fputs_unlocked@plt>
   19db8:	mov	r1, r4
   19dbc:	mov	r0, #10
   19dc0:	bl	11720 <putc_unlocked@plt>
   19dc4:	mov	r0, r4
   19dc8:	bl	11498 <funlockfile@plt>
   19dcc:	cmp	r7, #0
   19dd0:	beq	19ce4 <argp_failure@@Base+0x38>
   19dd4:	cmp	r5, #0
   19dd8:	beq	19de8 <argp_failure@@Base+0x13c>
   19ddc:	ldr	r3, [r5, #16]
   19de0:	tst	r3, #32
   19de4:	bne	19ce4 <argp_failure@@Base+0x38>
   19de8:	mov	r0, r7
   19dec:	bl	11558 <exit@plt>
   19df0:	andeq	r0, r3, r0, asr fp
   19df4:	andeq	r0, r3, r8, asr #22
   19df8:	muleq	r1, fp, r3
   19dfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e00:	add	fp, sp, #32
   19e04:	sub	sp, sp, #116	; 0x74
   19e08:	str	r3, [fp, #-104]	; 0xffffff98
   19e0c:	subs	r3, r2, #0
   19e10:	str	r0, [fp, #-108]	; 0xffffff94
   19e14:	str	r1, [fp, #-96]	; 0xffffffa0
   19e18:	str	r3, [fp, #-112]	; 0xffffff90
   19e1c:	beq	19e98 <argp_failure@@Base+0x1ec>
   19e20:	ldr	r5, [pc, #3996]	; 1adc4 <argp_failure@@Base+0x1118>
   19e24:	mov	r0, r3
   19e28:	bl	11660 <flockfile@plt>
   19e2c:	ldr	r9, [r5, #36]	; 0x24
   19e30:	cmp	r9, #0
   19e34:	bne	19e70 <argp_failure@@Base+0x1c4>
   19e38:	ldr	r0, [pc, #3976]	; 1adc8 <argp_failure@@Base+0x111c>
   19e3c:	bl	114e0 <getenv@plt>
   19e40:	mov	ip, r5
   19e44:	sub	lr, fp, #76	; 0x4c
   19e48:	mov	r4, r0
   19e4c:	ldm	ip!, {r0, r1, r2, r3}
   19e50:	cmp	r4, #0
   19e54:	movne	r5, #1
   19e58:	stmia	lr!, {r0, r1, r2, r3}
   19e5c:	ldm	ip!, {r0, r1, r2, r3}
   19e60:	stmia	lr!, {r0, r1, r2, r3}
   19e64:	ldm	ip, {r0, r1}
   19e68:	stm	lr, {r0, r1}
   19e6c:	bne	1a0ec <argp_failure@@Base+0x440>
   19e70:	ldr	r5, [pc, #3916]	; 1adc4 <argp_failure@@Base+0x1118>
   19e74:	mov	r3, #0
   19e78:	mov	r1, r3
   19e7c:	ldr	r2, [r5, #32]
   19e80:	ldr	r0, [fp, #-112]	; 0xffffff90
   19e84:	bl	1bab4 <argp_error@@Base+0xbc4>
   19e88:	subs	r4, r0, #0
   19e8c:	bne	1a180 <argp_failure@@Base+0x4d4>
   19e90:	ldr	r0, [fp, #-112]	; 0xffffff90
   19e94:	bl	11498 <funlockfile@plt>
   19e98:	sub	sp, fp, #32
   19e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ea0:	mov	r3, r1
   19ea4:	mov	r1, r3
   19ea8:	str	r3, [fp, #-100]	; 0xffffff9c
   19eac:	ldrb	r0, [r1], #1
   19eb0:	lsl	r2, r0, #1
   19eb4:	ldrh	r2, [r6, r2]
   19eb8:	tst	r2, #8192	; 0x2000
   19ebc:	bne	19ea0 <argp_failure@@Base+0x1f4>
   19ec0:	ands	r2, r2, #1024	; 0x400
   19ec4:	movne	r2, r3
   19ec8:	bne	19f44 <argp_failure@@Base+0x298>
   19ecc:	cmp	r0, #0
   19ed0:	beq	1a13c <argp_failure@@Base+0x490>
   19ed4:	str	r3, [sp]
   19ed8:	mov	r1, r2
   19edc:	ldr	r3, [pc, #3816]	; 1adcc <argp_failure@@Base+0x1120>
   19ee0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19ee4:	bl	19cac <argp_failure@@Base>
   19ee8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   19eec:	ldr	r3, [pc, #3804]	; 1add0 <argp_failure@@Base+0x1124>
   19ef0:	mov	r0, #9
   19ef4:	ldrb	r2, [r3, #14]
   19ef8:	cmp	r2, #0
   19efc:	bne	1a144 <argp_failure@@Base+0x498>
   19f00:	ldrb	r1, [r3, #15]
   19f04:	cmp	r1, #32
   19f08:	beq	1a144 <argp_failure@@Base+0x498>
   19f0c:	sub	lr, fp, #36	; 0x24
   19f10:	add	r1, lr, r1
   19f14:	ldr	r1, [r1, #-40]	; 0xffffffd8
   19f18:	cmp	r1, ip
   19f1c:	blt	1a144 <argp_failure@@Base+0x498>
   19f20:	str	r3, [sp, #4]
   19f24:	ldr	r3, [pc, #3752]	; 1add4 <argp_failure@@Base+0x1128>
   19f28:	mov	r1, r2
   19f2c:	str	r3, [sp]
   19f30:	ldr	r0, [fp, #-96]	; 0xffffffa0
   19f34:	ldr	r3, [pc, #3740]	; 1add8 <argp_failure@@Base+0x112c>
   19f38:	bl	19cac <argp_failure@@Base>
   19f3c:	b	19e70 <argp_failure@@Base+0x1c4>
   19f40:	mov	r2, lr
   19f44:	mov	lr, r2
   19f48:	ldrb	r1, [lr], #1
   19f4c:	cmp	r1, #95	; 0x5f
   19f50:	cmpne	r1, #45	; 0x2d
   19f54:	lsl	ip, r1, #1
   19f58:	moveq	r1, #1
   19f5c:	ldrh	ip, [r6, ip]
   19f60:	movne	r1, #0
   19f64:	lsl	ip, ip, #28
   19f68:	orrs	r1, r1, ip, lsr #31
   19f6c:	bne	19f40 <argp_failure@@Base+0x294>
   19f70:	sub	r8, r2, r3
   19f74:	mov	r4, r2
   19f78:	ldrb	r1, [r2], #1
   19f7c:	lsl	ip, r1, #1
   19f80:	ldrh	ip, [r6, ip]
   19f84:	tst	ip, #8192	; 0x2000
   19f88:	bne	19f74 <argp_failure@@Base+0x2c8>
   19f8c:	cmp	r1, #44	; 0x2c
   19f90:	cmpne	r1, #0
   19f94:	beq	1ad04 <argp_failure@@Base+0x1058>
   19f98:	cmp	r1, #61	; 0x3d
   19f9c:	bne	19fbc <argp_failure@@Base+0x310>
   19fa0:	mov	r4, r2
   19fa4:	add	r2, r2, #1
   19fa8:	ldrb	r3, [r4]
   19fac:	lsl	r3, r3, #1
   19fb0:	ldrh	r3, [r6, r3]
   19fb4:	tst	r3, #8192	; 0x2000
   19fb8:	bne	19fa0 <argp_failure@@Base+0x2f4>
   19fbc:	ldrb	r3, [r4]
   19fc0:	lsl	r3, r3, #1
   19fc4:	ldrh	r3, [r6, r3]
   19fc8:	tst	r3, #2048	; 0x800
   19fcc:	moveq	sl, r9
   19fd0:	moveq	r7, r9
   19fd4:	beq	1a050 <argp_failure@@Base+0x3a4>
   19fd8:	mov	r0, r4
   19fdc:	bl	11678 <atoi@plt>
   19fe0:	mov	r3, r4
   19fe4:	mov	r7, r0
   19fe8:	ldrb	r2, [r3]
   19fec:	add	r1, r3, #1
   19ff0:	lsl	r2, r2, #1
   19ff4:	ldrh	r2, [r6, r2]
   19ff8:	tst	r2, #2048	; 0x800
   19ffc:	bne	1a108 <argp_failure@@Base+0x45c>
   1a000:	mov	r4, r3
   1a004:	add	r3, r3, #1
   1a008:	ldrb	r2, [r4]
   1a00c:	lsl	r2, r2, #1
   1a010:	ldrh	r2, [r6, r2]
   1a014:	tst	r2, #8192	; 0x2000
   1a018:	bne	1a000 <argp_failure@@Base+0x354>
   1a01c:	mov	sl, r9
   1a020:	b	1a050 <argp_failure@@Base+0x3a4>
   1a024:	ldrb	r2, [r3, #1]
   1a028:	cmp	r2, #111	; 0x6f
   1a02c:	bne	1ad0c <argp_failure@@Base+0x1060>
   1a030:	ldrb	r2, [r3, #2]
   1a034:	cmp	r2, #45	; 0x2d
   1a038:	bne	1ad0c <argp_failure@@Base+0x1060>
   1a03c:	sub	r8, r8, #3
   1a040:	mov	r7, r9
   1a044:	mov	sl, r5
   1a048:	add	r3, r3, #3
   1a04c:	str	r3, [fp, #-100]	; 0xffffff9c
   1a050:	ldr	r6, [pc, #3448]	; 1add0 <argp_failure@@Base+0x1124>
   1a054:	mov	r3, #9
   1a058:	str	r3, [fp, #-116]	; 0xffffff8c
   1a05c:	mov	r0, r6
   1a060:	bl	11570 <strlen@plt>
   1a064:	cmp	r0, r8
   1a068:	bne	1a124 <argp_failure@@Base+0x478>
   1a06c:	mov	r2, r8
   1a070:	mov	r1, r6
   1a074:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a078:	bl	116f0 <strncmp@plt>
   1a07c:	cmp	r0, #0
   1a080:	bne	1a124 <argp_failure@@Base+0x478>
   1a084:	cmp	sl, #0
   1a088:	beq	1a110 <argp_failure@@Base+0x464>
   1a08c:	ldrb	r2, [r6, #14]
   1a090:	cmp	r2, #0
   1a094:	bne	1a110 <argp_failure@@Base+0x464>
   1a098:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a09c:	str	r8, [sp]
   1a0a0:	str	r3, [sp, #4]
   1a0a4:	mov	r1, r2
   1a0a8:	ldr	r3, [pc, #3372]	; 1addc <argp_failure@@Base+0x1130>
   1a0ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a0b0:	bl	19cac <argp_failure@@Base>
   1a0b4:	ldr	r3, [pc, #3364]	; 1ade0 <argp_failure@@Base+0x1134>
   1a0b8:	cmp	r6, r3
   1a0bc:	bne	1a0e0 <argp_failure@@Base+0x434>
   1a0c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a0c4:	mov	r2, #0
   1a0c8:	str	r3, [sp, #4]
   1a0cc:	str	r8, [sp]
   1a0d0:	ldr	r3, [pc, #3340]	; 1ade4 <argp_failure@@Base+0x1138>
   1a0d4:	mov	r1, r2
   1a0d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a0dc:	bl	19cac <argp_failure@@Base>
   1a0e0:	ldrb	r3, [r4]
   1a0e4:	cmp	r3, #44	; 0x2c
   1a0e8:	addeq	r4, r4, #1
   1a0ec:	ldrb	r3, [r4]
   1a0f0:	cmp	r3, #0
   1a0f4:	beq	19ee8 <argp_failure@@Base+0x23c>
   1a0f8:	bl	1154c <__ctype_b_loc@plt>
   1a0fc:	mov	r3, r4
   1a100:	ldr	r6, [r0]
   1a104:	b	19ea4 <argp_failure@@Base+0x1f8>
   1a108:	mov	r3, r1
   1a10c:	b	19fe8 <argp_failure@@Base+0x33c>
   1a110:	ldrb	r3, [r6, #15]
   1a114:	sub	r2, fp, #36	; 0x24
   1a118:	add	r3, r2, r3
   1a11c:	str	r7, [r3, #-40]	; 0xffffffd8
   1a120:	b	1a0b4 <argp_failure@@Base+0x408>
   1a124:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a128:	add	r6, r6, #16
   1a12c:	subs	r3, r3, #1
   1a130:	str	r3, [fp, #-116]	; 0xffffff8c
   1a134:	bne	1a05c <argp_failure@@Base+0x3b0>
   1a138:	b	1a0b4 <argp_failure@@Base+0x408>
   1a13c:	mov	r4, r3
   1a140:	b	1a0ec <argp_failure@@Base+0x440>
   1a144:	subs	r0, r0, #1
   1a148:	add	r3, r3, #16
   1a14c:	bne	19ef4 <argp_failure@@Base+0x248>
   1a150:	sub	lr, fp, #76	; 0x4c
   1a154:	ldr	r4, [pc, #3176]	; 1adc4 <argp_failure@@Base+0x1118>
   1a158:	ldm	lr!, {r0, r1, r2, r3}
   1a15c:	mov	ip, r4
   1a160:	stmia	ip!, {r0, r1, r2, r3}
   1a164:	ldm	lr!, {r0, r1, r2, r3}
   1a168:	stmia	ip!, {r0, r1, r2, r3}
   1a16c:	mov	r3, #1
   1a170:	ldm	lr, {r0, r1}
   1a174:	stm	ip, {r0, r1}
   1a178:	str	r3, [r4, #36]	; 0x24
   1a17c:	b	19e70 <argp_failure@@Base+0x1c4>
   1a180:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a184:	ands	r3, r3, #11
   1a188:	moveq	sl, r3
   1a18c:	beq	1a1ec <argp_failure@@Base+0x540>
   1a190:	mov	r1, #0
   1a194:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a198:	bl	19378 <_obstack_memory_used@@Base+0x1d78>
   1a19c:	ldr	r1, [pc, #3140]	; 1ade8 <argp_failure@@Base+0x113c>
   1a1a0:	mov	sl, r0
   1a1a4:	bl	19304 <_obstack_memory_used@@Base+0x1d04>
   1a1a8:	ldr	r1, [pc, #3132]	; 1adec <argp_failure@@Base+0x1140>
   1a1ac:	mov	r0, sl
   1a1b0:	bl	19304 <_obstack_memory_used@@Base+0x1d04>
   1a1b4:	ldr	r1, [sl, #4]
   1a1b8:	cmp	r1, #0
   1a1bc:	beq	1a1ec <argp_failure@@Base+0x540>
   1a1c0:	ldr	r0, [sl]
   1a1c4:	mov	r3, #0
   1a1c8:	mov	r2, r0
   1a1cc:	str	r3, [r2, #24]
   1a1d0:	add	r3, r3, #1
   1a1d4:	cmp	r1, r3
   1a1d8:	add	r2, r2, #28
   1a1dc:	bne	1a1cc <argp_failure@@Base+0x520>
   1a1e0:	ldr	r3, [pc, #3080]	; 1adf0 <argp_failure@@Base+0x1144>
   1a1e4:	mov	r2, #28
   1a1e8:	bl	11690 <qsort@plt>
   1a1ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a1f0:	ands	r3, r3, #3
   1a1f4:	moveq	r5, r3
   1a1f8:	beq	1a398 <argp_failure@@Base+0x6ec>
   1a1fc:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a200:	bl	18550 <_obstack_memory_used@@Base+0xf50>
   1a204:	mov	r1, #0
   1a208:	ldr	r6, [pc, #3044]	; 1adf4 <argp_failure@@Base+0x1148>
   1a20c:	mov	r9, #1
   1a210:	add	r3, r0, #14
   1a214:	bic	r3, r3, #7
   1a218:	sub	sp, sp, r3
   1a21c:	add	r7, sp, #8
   1a220:	mov	r2, r0
   1a224:	mov	r0, r7
   1a228:	bl	115c4 <memset@plt>
   1a22c:	ldr	r2, [r4, #24]
   1a230:	ldr	r3, [r4, #28]
   1a234:	ldr	r8, [r5, #28]
   1a238:	sub	r3, r3, r2
   1a23c:	ldr	r2, [r4, #16]
   1a240:	cmp	r3, r2
   1a244:	bls	1a250 <argp_failure@@Base+0x5a4>
   1a248:	mov	r0, r4
   1a24c:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a250:	ldr	r3, [r4, #12]
   1a254:	cmp	r9, #0
   1a258:	str	r8, [r4, #12]
   1a25c:	ldrne	r2, [pc, #2964]	; 1adf8 <argp_failure@@Base+0x114c>
   1a260:	ldreq	r2, [pc, #2964]	; 1adfc <argp_failure@@Base+0x1150>
   1a264:	str	r3, [fp, #-100]	; 0xffffff9c
   1a268:	ldr	r1, [pc, #2960]	; 1ae00 <argp_failure@@Base+0x1154>
   1a26c:	ldr	r3, [fp, #4]
   1a270:	mov	r0, r4
   1a274:	str	r7, [fp, #-76]	; 0xffffffb4
   1a278:	bl	1c060 <argp_error@@Base+0x1170>
   1a27c:	ldr	r2, [r4, #24]
   1a280:	ldr	r3, [r4, #28]
   1a284:	ldr	r8, [r5, #28]
   1a288:	sub	r3, r3, r2
   1a28c:	ldr	r2, [r4, #16]
   1a290:	cmp	r3, r2
   1a294:	bls	1a2a0 <argp_failure@@Base+0x5f4>
   1a298:	mov	r0, r4
   1a29c:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a2a0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a2a4:	ldr	r9, [r4, #4]
   1a2a8:	tst	r3, #2
   1a2ac:	str	r8, [r4, #4]
   1a2b0:	beq	1a614 <argp_failure@@Base+0x968>
   1a2b4:	ldr	r3, [sl, #4]
   1a2b8:	cmp	r3, #0
   1a2bc:	beq	1a2fc <argp_failure@@Base+0x650>
   1a2c0:	ldr	r3, [r4, #28]
   1a2c4:	ldr	r2, [r4, #32]
   1a2c8:	add	r3, r3, #12
   1a2cc:	cmp	r2, r3
   1a2d0:	bcc	1a5fc <argp_failure@@Base+0x950>
   1a2d4:	ldr	r2, [r4, #28]
   1a2d8:	ldr	r3, [r6]
   1a2dc:	str	r3, [r2]
   1a2e0:	ldr	r3, [r6, #4]
   1a2e4:	str	r3, [r2, #4]
   1a2e8:	ldr	r3, [r6, #8]
   1a2ec:	str	r3, [r2, #8]
   1a2f0:	ldr	r3, [r4, #28]
   1a2f4:	add	r3, r3, #12
   1a2f8:	str	r3, [r4, #28]
   1a2fc:	mov	r3, #1
   1a300:	sub	r2, fp, #76	; 0x4c
   1a304:	str	r4, [sp]
   1a308:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a30c:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a310:	bl	18f64 <_obstack_memory_used@@Base+0x1964>
   1a314:	ldr	r2, [r4, #24]
   1a318:	ldr	r3, [r4, #28]
   1a31c:	sub	r3, r3, r2
   1a320:	ldr	r2, [r4, #16]
   1a324:	cmp	r3, r2
   1a328:	mov	r8, r0
   1a32c:	bls	1a338 <argp_failure@@Base+0x68c>
   1a330:	mov	r0, r4
   1a334:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a338:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a33c:	ldr	r2, [r4, #24]
   1a340:	str	r3, [r4, #12]
   1a344:	ldr	r3, [r4, #28]
   1a348:	sub	r3, r3, r2
   1a34c:	ldr	r2, [r4, #16]
   1a350:	cmp	r3, r2
   1a354:	bls	1a360 <argp_failure@@Base+0x6b4>
   1a358:	mov	r0, r4
   1a35c:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a360:	ldr	r2, [r4, #28]
   1a364:	ldr	r3, [r4, #32]
   1a368:	str	r9, [r4, #4]
   1a36c:	cmp	r2, r3
   1a370:	bcs	1a630 <argp_failure@@Base+0x984>
   1a374:	ldr	r3, [r4, #28]
   1a378:	add	r2, r3, #1
   1a37c:	str	r2, [r4, #28]
   1a380:	mov	r2, #10
   1a384:	strb	r2, [r3]
   1a388:	mov	r9, #0
   1a38c:	cmp	r8, r9
   1a390:	bne	1a22c <argp_failure@@Base+0x580>
   1a394:	mov	r5, #1
   1a398:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a39c:	tst	r3, #16
   1a3a0:	beq	1a3c8 <argp_failure@@Base+0x71c>
   1a3a4:	mov	r3, #1
   1a3a8:	str	r3, [sp]
   1a3ac:	mov	r3, #0
   1a3b0:	str	r4, [sp, #4]
   1a3b4:	mov	r2, r3
   1a3b8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a3bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a3c0:	bl	189cc <_obstack_memory_used@@Base+0x13cc>
   1a3c4:	orr	r5, r5, r0
   1a3c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a3cc:	tst	r3, #4
   1a3d0:	beq	1a3ec <argp_failure@@Base+0x740>
   1a3d4:	ldr	r3, [fp, #4]
   1a3d8:	ldr	r1, [pc, #2596]	; 1ae04 <argp_failure@@Base+0x1158>
   1a3dc:	mov	r2, r3
   1a3e0:	mov	r0, r4
   1a3e4:	bl	1c060 <argp_error@@Base+0x1170>
   1a3e8:	mov	r5, #1
   1a3ec:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a3f0:	tst	r3, #8
   1a3f4:	beq	1a54c <argp_failure@@Base+0x8a0>
   1a3f8:	ldr	r3, [sl, #4]
   1a3fc:	cmp	r3, #0
   1a400:	beq	1a54c <argp_failure@@Base+0x8a0>
   1a404:	cmp	r5, #0
   1a408:	beq	1a430 <argp_failure@@Base+0x784>
   1a40c:	ldr	r2, [r4, #28]
   1a410:	ldr	r3, [r4, #32]
   1a414:	cmp	r2, r3
   1a418:	bcs	1a648 <argp_failure@@Base+0x99c>
   1a41c:	ldr	r3, [r4, #28]
   1a420:	add	r2, r3, #1
   1a424:	str	r2, [r4, #28]
   1a428:	mov	r2, #10
   1a42c:	strb	r2, [r3]
   1a430:	mov	r3, #0
   1a434:	str	r3, [fp, #-88]	; 0xffffffa8
   1a438:	str	r3, [fp, #-84]	; 0xffffffac
   1a43c:	str	r3, [fp, #-80]	; 0xffffffb0
   1a440:	ldr	r3, [sl]
   1a444:	str	r3, [fp, #-100]	; 0xffffff9c
   1a448:	ldr	r3, [sl, #4]
   1a44c:	str	r3, [fp, #-116]	; 0xffffff8c
   1a450:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a454:	cmp	r3, #0
   1a458:	bne	1a660 <argp_failure@@Base+0x9b4>
   1a45c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a460:	cmp	r3, #0
   1a464:	beq	1a548 <argp_failure@@Base+0x89c>
   1a468:	ldr	r3, [pc, #2388]	; 1adc4 <argp_failure@@Base+0x1118>
   1a46c:	ldr	r3, [r3, #4]
   1a470:	cmp	r3, #0
   1a474:	beq	1a548 <argp_failure@@Base+0x89c>
   1a478:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a47c:	ldr	r1, [pc, #2436]	; 1ae08 <argp_failure@@Base+0x115c>
   1a480:	cmp	r3, #0
   1a484:	ldr	r0, [pc, #2432]	; 1ae0c <argp_failure@@Base+0x1160>
   1a488:	ldrne	r2, [r3]
   1a48c:	ldreq	r2, [fp, #-96]	; 0xffffffa0
   1a490:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a494:	bl	18630 <_obstack_memory_used@@Base+0x1030>
   1a498:	subs	r5, r0, #0
   1a49c:	beq	1a548 <argp_failure@@Base+0x89c>
   1a4a0:	ldrb	r3, [r5]
   1a4a4:	cmp	r3, #0
   1a4a8:	beq	1a534 <argp_failure@@Base+0x888>
   1a4ac:	ldr	r2, [r4, #28]
   1a4b0:	ldr	r3, [r4, #32]
   1a4b4:	cmp	r2, r3
   1a4b8:	bcs	1aca4 <argp_failure@@Base+0xff8>
   1a4bc:	ldr	r3, [r4, #28]
   1a4c0:	add	r2, r3, #1
   1a4c4:	str	r2, [r4, #28]
   1a4c8:	mov	r2, #10
   1a4cc:	strb	r2, [r3]
   1a4d0:	mov	r0, r5
   1a4d4:	bl	11570 <strlen@plt>
   1a4d8:	subs	r6, r0, #0
   1a4dc:	beq	1a510 <argp_failure@@Base+0x864>
   1a4e0:	ldr	r3, [r4, #28]
   1a4e4:	ldr	r2, [r4, #32]
   1a4e8:	add	r3, r3, r6
   1a4ec:	cmp	r2, r3
   1a4f0:	bcc	1acbc <argp_failure@@Base+0x1010>
   1a4f4:	mov	r2, r6
   1a4f8:	mov	r1, r5
   1a4fc:	ldr	r0, [r4, #28]
   1a500:	bl	11444 <memcpy@plt>
   1a504:	ldr	r3, [r4, #28]
   1a508:	add	r6, r3, r6
   1a50c:	str	r6, [r4, #28]
   1a510:	ldr	r2, [r4, #28]
   1a514:	ldr	r3, [r4, #32]
   1a518:	cmp	r2, r3
   1a51c:	bcs	1acd4 <argp_failure@@Base+0x1028>
   1a520:	ldr	r3, [r4, #28]
   1a524:	add	r2, r3, #1
   1a528:	str	r2, [r4, #28]
   1a52c:	mov	r2, #10
   1a530:	strb	r2, [r3]
   1a534:	ldr	r3, [pc, #2256]	; 1ae0c <argp_failure@@Base+0x1160>
   1a538:	cmp	r5, r3
   1a53c:	beq	1a548 <argp_failure@@Base+0x89c>
   1a540:	mov	r0, r5
   1a544:	bl	171e4 <argp_parse@@Base+0xa9c>
   1a548:	mov	r5, #1
   1a54c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a550:	tst	r3, #32
   1a554:	beq	1a57c <argp_failure@@Base+0x8d0>
   1a558:	mov	r3, #0
   1a55c:	str	r3, [sp]
   1a560:	str	r4, [sp, #4]
   1a564:	mov	r3, r5
   1a568:	mov	r2, #1
   1a56c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a570:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a574:	bl	189cc <_obstack_memory_used@@Base+0x13cc>
   1a578:	orr	r5, r5, r0
   1a57c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a580:	tst	r3, #64	; 0x40
   1a584:	beq	1a5d8 <argp_failure@@Base+0x92c>
   1a588:	ldr	r3, [pc, #2176]	; 1ae10 <argp_failure@@Base+0x1164>
   1a58c:	mov	r6, r3
   1a590:	ldr	r2, [r3]
   1a594:	cmp	r2, #0
   1a598:	beq	1a5d8 <argp_failure@@Base+0x92c>
   1a59c:	cmp	r5, #0
   1a5a0:	beq	1a5c8 <argp_failure@@Base+0x91c>
   1a5a4:	ldr	r2, [r4, #28]
   1a5a8:	ldr	r3, [r4, #32]
   1a5ac:	cmp	r2, r3
   1a5b0:	bcs	1acec <argp_failure@@Base+0x1040>
   1a5b4:	ldr	r3, [r4, #28]
   1a5b8:	add	r2, r3, #1
   1a5bc:	str	r2, [r4, #28]
   1a5c0:	mov	r2, #10
   1a5c4:	strb	r2, [r3]
   1a5c8:	ldr	r2, [r6]
   1a5cc:	ldr	r1, [pc, #2112]	; 1ae14 <argp_failure@@Base+0x1168>
   1a5d0:	mov	r0, r4
   1a5d4:	bl	1c060 <argp_error@@Base+0x1170>
   1a5d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a5dc:	bl	11498 <funlockfile@plt>
   1a5e0:	cmp	sl, #0
   1a5e4:	beq	1a5f0 <argp_failure@@Base+0x944>
   1a5e8:	mov	r0, sl
   1a5ec:	bl	18504 <_obstack_memory_used@@Base+0xf04>
   1a5f0:	mov	r0, r4
   1a5f4:	bl	1bf3c <argp_error@@Base+0x104c>
   1a5f8:	b	19e98 <argp_failure@@Base+0x1ec>
   1a5fc:	mov	r1, #12
   1a600:	mov	r0, r4
   1a604:	bl	1bf7c <argp_error@@Base+0x108c>
   1a608:	cmp	r0, #0
   1a60c:	bne	1a2d4 <argp_failure@@Base+0x628>
   1a610:	b	1a2fc <argp_failure@@Base+0x650>
   1a614:	mov	r1, r4
   1a618:	mov	r0, sl
   1a61c:	bl	19178 <_obstack_memory_used@@Base+0x1b78>
   1a620:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a624:	orr	r3, r3, #2
   1a628:	str	r3, [fp, #-104]	; 0xffffff98
   1a62c:	b	1a2fc <argp_failure@@Base+0x650>
   1a630:	mov	r1, #1
   1a634:	mov	r0, r4
   1a638:	bl	1bf7c <argp_error@@Base+0x108c>
   1a63c:	cmp	r0, #0
   1a640:	bne	1a374 <argp_failure@@Base+0x6c8>
   1a644:	b	1a388 <argp_failure@@Base+0x6dc>
   1a648:	mov	r1, #1
   1a64c:	mov	r0, r4
   1a650:	bl	1bf7c <argp_error@@Base+0x108c>
   1a654:	cmp	r0, #0
   1a658:	bne	1a41c <argp_failure@@Base+0x770>
   1a65c:	b	1a430 <argp_failure@@Base+0x784>
   1a660:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a664:	ldr	r2, [r4, #24]
   1a668:	ldr	r5, [r3]
   1a66c:	ldr	r9, [r3, #8]
   1a670:	ldr	r3, [r4, #28]
   1a674:	sub	r3, r3, r2
   1a678:	ldr	r2, [r4, #16]
   1a67c:	cmp	r3, r2
   1a680:	bls	1a68c <argp_failure@@Base+0x9e0>
   1a684:	mov	r0, r4
   1a688:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a68c:	ldr	r2, [r4, #12]
   1a690:	ldr	r3, [r4, #4]
   1a694:	str	r2, [fp, #-128]	; 0xffffff80
   1a698:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a69c:	str	r3, [fp, #-124]	; 0xffffff84
   1a6a0:	mov	r3, #0
   1a6a4:	str	r3, [r4, #4]
   1a6a8:	str	r2, [fp, #-76]	; 0xffffffb4
   1a6ac:	sub	r2, fp, #88	; 0x58
   1a6b0:	str	r2, [fp, #-68]	; 0xffffffbc
   1a6b4:	mov	r2, #1
   1a6b8:	str	r2, [fp, #-64]	; 0xffffffc0
   1a6bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a6c0:	str	r4, [fp, #-72]	; 0xffffffb8
   1a6c4:	str	r2, [fp, #-60]	; 0xffffffc4
   1a6c8:	ldr	r2, [r5, #12]
   1a6cc:	ands	r2, r2, #8
   1a6d0:	str	r2, [fp, #-120]	; 0xffffff88
   1a6d4:	ldreq	r3, [fp, #-100]	; 0xffffff9c
   1a6d8:	ldreq	r2, [r3, #4]
   1a6dc:	addeq	r3, r5, #24
   1a6e0:	beq	1a70c <argp_failure@@Base+0xa60>
   1a6e4:	str	r3, [fp, #-120]	; 0xffffff88
   1a6e8:	b	1a714 <argp_failure@@Base+0xa68>
   1a6ec:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1a6f0:	cmp	r1, #0
   1a6f4:	beq	1a704 <argp_failure@@Base+0xa58>
   1a6f8:	ldr	r1, [r3, #-12]
   1a6fc:	tst	r1, #2
   1a700:	beq	1a89c <argp_failure@@Base+0xbf0>
   1a704:	sub	r2, r2, #1
   1a708:	add	r3, r3, #24
   1a70c:	cmp	r2, #0
   1a710:	bne	1a6ec <argp_failure@@Base+0xa40>
   1a714:	ldr	r3, [pc, #1704]	; 1adc4 <argp_failure@@Base+0x1118>
   1a718:	ldr	r2, [r4, #24]
   1a71c:	ldr	r6, [r3, #8]
   1a720:	ldr	r3, [r4, #28]
   1a724:	sub	r3, r3, r2
   1a728:	ldr	r2, [r4, #16]
   1a72c:	cmp	r3, r2
   1a730:	bls	1a73c <argp_failure@@Base+0xa90>
   1a734:	mov	r0, r4
   1a738:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a73c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a740:	str	r6, [r4, #12]
   1a744:	ldr	r7, [pc, #1656]	; 1adc4 <argp_failure@@Base+0x1118>
   1a748:	ldr	r8, [r3, #4]
   1a74c:	mov	r6, r5
   1a750:	cmp	r8, #0
   1a754:	bne	1a8a4 <argp_failure@@Base+0xbf8>
   1a758:	ldr	r3, [r5, #12]
   1a75c:	ldr	r1, [pc, #1632]	; 1adc4 <argp_failure@@Base+0x1118>
   1a760:	tst	r3, #8
   1a764:	ldr	r2, [r4, #24]
   1a768:	ldr	r3, [r4, #28]
   1a76c:	beq	1a9d0 <argp_failure@@Base+0xd24>
   1a770:	sub	r3, r3, r2
   1a774:	ldr	r2, [r4, #16]
   1a778:	ldr	r6, [r1, #16]
   1a77c:	cmp	r3, r2
   1a780:	bls	1a78c <argp_failure@@Base+0xae0>
   1a784:	mov	r0, r4
   1a788:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a78c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a790:	str	r6, [r4, #12]
   1a794:	add	r6, r5, #24
   1a798:	ldr	r7, [r3, #4]
   1a79c:	cmp	r7, #0
   1a7a0:	bne	1a940 <argp_failure@@Base+0xc94>
   1a7a4:	ldr	r2, [r4, #24]
   1a7a8:	ldr	r3, [r4, #28]
   1a7ac:	sub	r3, r3, r2
   1a7b0:	ldr	r2, [r4, #16]
   1a7b4:	cmp	r3, r2
   1a7b8:	bls	1a7c4 <argp_failure@@Base+0xb18>
   1a7bc:	mov	r0, r4
   1a7c0:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a7c4:	mov	r3, #0
   1a7c8:	str	r3, [r4, #4]
   1a7cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a7d0:	cmp	r3, #0
   1a7d4:	beq	1aa70 <argp_failure@@Base+0xdc4>
   1a7d8:	ldr	r3, [r5, #12]
   1a7dc:	tst	r3, #8
   1a7e0:	bne	1a80c <argp_failure@@Base+0xb60>
   1a7e4:	ldr	r6, [r5, #4]
   1a7e8:	sub	r3, r6, #1
   1a7ec:	cmp	r3, #254	; 0xfe
   1a7f0:	bhi	1a80c <argp_failure@@Base+0xb60>
   1a7f4:	bl	1154c <__ctype_b_loc@plt>
   1a7f8:	lsl	r6, r6, #1
   1a7fc:	ldr	r3, [r0]
   1a800:	ldrh	r3, [r3, r6]
   1a804:	tst	r3, #16384	; 0x4000
   1a808:	bne	1a834 <argp_failure@@Base+0xb88>
   1a80c:	ldr	r3, [r5]
   1a810:	cmp	r3, #0
   1a814:	bne	1a834 <argp_failure@@Base+0xb88>
   1a818:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a81c:	sub	r2, fp, #76	; 0x4c
   1a820:	ldr	r0, [r5, #16]
   1a824:	ldr	r1, [r3, #20]
   1a828:	bl	18674 <_obstack_memory_used@@Base+0x1074>
   1a82c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a830:	str	r3, [fp, #-88]	; 0xffffffa8
   1a834:	ldr	r2, [r4, #24]
   1a838:	ldr	r3, [r4, #28]
   1a83c:	sub	r3, r3, r2
   1a840:	ldr	r2, [r4, #16]
   1a844:	cmp	r3, r2
   1a848:	bls	1a854 <argp_failure@@Base+0xba8>
   1a84c:	mov	r0, r4
   1a850:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a854:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a858:	ldr	r2, [r4, #24]
   1a85c:	str	r3, [r4, #4]
   1a860:	ldr	r3, [r4, #28]
   1a864:	sub	r3, r3, r2
   1a868:	ldr	r2, [r4, #16]
   1a86c:	cmp	r3, r2
   1a870:	bls	1a87c <argp_failure@@Base+0xbd0>
   1a874:	mov	r0, r4
   1a878:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a87c:	ldr	r3, [fp, #-128]	; 0xffffff80
   1a880:	str	r3, [r4, #12]
   1a884:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a888:	add	r3, r3, #28
   1a88c:	str	r3, [fp, #-100]	; 0xffffff9c
   1a890:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a894:	sub	r3, r3, #1
   1a898:	b	1a44c <argp_failure@@Base+0x7a0>
   1a89c:	mov	r3, #1
   1a8a0:	b	1a6e4 <argp_failure@@Base+0xa38>
   1a8a4:	ldr	r2, [r6, #12]
   1a8a8:	tst	r2, #8
   1a8ac:	str	r2, [fp, #-136]	; 0xffffff78
   1a8b0:	bne	1a8e8 <argp_failure@@Base+0xc3c>
   1a8b4:	ldr	r3, [r6, #4]
   1a8b8:	sub	r1, r3, #1
   1a8bc:	cmp	r1, #254	; 0xfe
   1a8c0:	str	r3, [fp, #-132]	; 0xffffff7c
   1a8c4:	bhi	1a8e8 <argp_failure@@Base+0xc3c>
   1a8c8:	bl	1154c <__ctype_b_loc@plt>
   1a8cc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1a8d0:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a8d4:	lsl	r1, r3, #1
   1a8d8:	ldr	r0, [r0]
   1a8dc:	ldrh	r1, [r0, r1]
   1a8e0:	tst	r1, #16384	; 0x4000
   1a8e4:	bne	1ad18 <argp_failure@@Base+0x106c>
   1a8e8:	add	r6, r6, #24
   1a8ec:	sub	r8, r8, #1
   1a8f0:	b	1a750 <argp_failure@@Base+0xaa4>
   1a8f4:	mov	r1, #1
   1a8f8:	mov	r0, r4
   1a8fc:	bl	1bf7c <argp_error@@Base+0x108c>
   1a900:	cmp	r0, #0
   1a904:	bne	1ad48 <argp_failure@@Base+0x109c>
   1a908:	b	1ad5c <argp_failure@@Base+0x10b0>
   1a90c:	mov	r1, #1
   1a910:	mov	r0, r4
   1a914:	str	r2, [fp, #-132]	; 0xffffff7c
   1a918:	bl	1bf7c <argp_error@@Base+0x108c>
   1a91c:	ldr	r2, [fp, #-132]	; 0xffffff7c
   1a920:	cmp	r0, #0
   1a924:	bne	1ad70 <argp_failure@@Base+0x10c4>
   1a928:	b	1ad80 <argp_failure@@Base+0x10d4>
   1a92c:	ldr	r3, [r5, #8]
   1a930:	cmp	r3, #0
   1a934:	movne	r3, #1
   1a938:	strne	r3, [fp, #-80]	; 0xffffffb0
   1a93c:	b	1adbc <argp_failure@@Base+0x1110>
   1a940:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1a944:	cmp	r3, #0
   1a948:	beq	1a9ac <argp_failure@@Base+0xd00>
   1a94c:	ldr	r3, [r6, #-12]
   1a950:	tst	r3, #2
   1a954:	bne	1a9ac <argp_failure@@Base+0xd00>
   1a958:	ldr	r3, [pc, #1124]	; 1adc4 <argp_failure@@Base+0x1118>
   1a95c:	sub	r1, fp, #76	; 0x4c
   1a960:	ldr	r0, [r3, #16]
   1a964:	bl	1884c <_obstack_memory_used@@Base+0x124c>
   1a968:	ldr	r8, [r6, #-24]	; 0xffffffe8
   1a96c:	mov	r0, r8
   1a970:	bl	11570 <strlen@plt>
   1a974:	subs	r9, r0, #0
   1a978:	beq	1a9ac <argp_failure@@Base+0xd00>
   1a97c:	ldr	r3, [r4, #28]
   1a980:	ldr	r2, [r4, #32]
   1a984:	add	r3, r3, r9
   1a988:	cmp	r2, r3
   1a98c:	bcc	1a9b8 <argp_failure@@Base+0xd0c>
   1a990:	mov	r2, r9
   1a994:	mov	r1, r8
   1a998:	ldr	r0, [r4, #28]
   1a99c:	bl	11444 <memcpy@plt>
   1a9a0:	ldr	r3, [r4, #28]
   1a9a4:	add	r9, r3, r9
   1a9a8:	str	r9, [r4, #28]
   1a9ac:	sub	r7, r7, #1
   1a9b0:	add	r6, r6, #24
   1a9b4:	b	1a79c <argp_failure@@Base+0xaf0>
   1a9b8:	mov	r1, r9
   1a9bc:	mov	r0, r4
   1a9c0:	bl	1bf7c <argp_error@@Base+0x108c>
   1a9c4:	cmp	r0, #0
   1a9c8:	bne	1a990 <argp_failure@@Base+0xce4>
   1a9cc:	b	1a9ac <argp_failure@@Base+0xd00>
   1a9d0:	sub	r3, r3, r2
   1a9d4:	ldr	r2, [r4, #16]
   1a9d8:	ldr	r6, [r1, #12]
   1a9dc:	cmp	r3, r2
   1a9e0:	bls	1a9ec <argp_failure@@Base+0xd40>
   1a9e4:	mov	r0, r4
   1a9e8:	bl	1bb2c <argp_error@@Base+0xc3c>
   1a9ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a9f0:	str	r6, [r4, #12]
   1a9f4:	ldr	r7, [pc, #968]	; 1adc4 <argp_failure@@Base+0x1118>
   1a9f8:	ldr	r6, [r3, #4]
   1a9fc:	ldr	r8, [pc, #1044]	; 1ae18 <argp_failure@@Base+0x116c>
   1aa00:	add	r9, r5, #24
   1aa04:	cmp	r6, #0
   1aa08:	beq	1a7a4 <argp_failure@@Base+0xaf8>
   1aa0c:	ldr	r3, [r9, #-24]	; 0xffffffe8
   1aa10:	cmp	r3, #0
   1aa14:	beq	1aa64 <argp_failure@@Base+0xdb8>
   1aa18:	ldr	r3, [r9, #-12]
   1aa1c:	tst	r3, #2
   1aa20:	bne	1aa64 <argp_failure@@Base+0xdb8>
   1aa24:	sub	r1, fp, #76	; 0x4c
   1aa28:	ldr	r0, [r7, #12]
   1aa2c:	bl	1884c <_obstack_memory_used@@Base+0x124c>
   1aa30:	ldr	r2, [r9, #-24]	; 0xffffffe8
   1aa34:	mov	r1, r8
   1aa38:	mov	r0, r4
   1aa3c:	bl	1c060 <argp_error@@Base+0x1170>
   1aa40:	ldr	r2, [r5, #8]
   1aa44:	cmp	r2, #0
   1aa48:	beq	1aa64 <argp_failure@@Base+0xdb8>
   1aa4c:	ldr	r3, [r5, #12]
   1aa50:	mov	r0, r4
   1aa54:	tst	r3, #1
   1aa58:	ldrne	r1, [pc, #956]	; 1ae1c <argp_failure@@Base+0x1170>
   1aa5c:	ldreq	r1, [pc, #956]	; 1ae20 <argp_failure@@Base+0x1174>
   1aa60:	bl	1c060 <argp_error@@Base+0x1170>
   1aa64:	sub	r6, r6, #1
   1aa68:	add	r9, r9, #24
   1aa6c:	b	1aa04 <argp_failure@@Base+0xd58>
   1aa70:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1aa74:	ldr	r6, [r5, #16]
   1aa78:	ldr	r1, [r5, #4]
   1aa7c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1aa80:	ldr	r2, [r2, #20]
   1aa84:	mov	r0, r6
   1aa88:	bl	18630 <_obstack_memory_used@@Base+0x1030>
   1aa8c:	subs	r5, r0, #0
   1aa90:	beq	1aba4 <argp_failure@@Base+0xef8>
   1aa94:	ldrb	r3, [r5]
   1aa98:	cmp	r3, #0
   1aa9c:	beq	1ab94 <argp_failure@@Base+0xee8>
   1aaa0:	ldr	r2, [r4, #24]
   1aaa4:	ldr	r3, [r4, #28]
   1aaa8:	sub	r3, r3, r2
   1aaac:	ldr	r2, [r4, #16]
   1aab0:	cmp	r3, r2
   1aab4:	bls	1aac0 <argp_failure@@Base+0xe14>
   1aab8:	mov	r0, r4
   1aabc:	bl	1bb2c <argp_error@@Base+0xc3c>
   1aac0:	ldr	r2, [r4, #24]
   1aac4:	ldr	r3, [r4, #28]
   1aac8:	ldr	r7, [r4, #20]
   1aacc:	sub	r3, r3, r2
   1aad0:	ldr	r8, [pc, #748]	; 1adc4 <argp_failure@@Base+0x1118>
   1aad4:	ldr	r2, [r4, #16]
   1aad8:	bic	r7, r7, r7, asr #31
   1aadc:	cmp	r3, r2
   1aae0:	ldr	r9, [r8, #20]
   1aae4:	bls	1aaf0 <argp_failure@@Base+0xe44>
   1aae8:	mov	r0, r4
   1aaec:	bl	1bb2c <argp_error@@Base+0xc3c>
   1aaf0:	ldr	r2, [r4, #24]
   1aaf4:	ldr	r3, [r4, #28]
   1aaf8:	str	r9, [r4, #4]
   1aafc:	sub	r3, r3, r2
   1ab00:	ldr	r2, [r4, #16]
   1ab04:	ldr	r8, [r8, #20]
   1ab08:	cmp	r3, r2
   1ab0c:	bls	1ab18 <argp_failure@@Base+0xe6c>
   1ab10:	mov	r0, r4
   1ab14:	bl	1bb2c <argp_error@@Base+0xc3c>
   1ab18:	ldr	r3, [pc, #676]	; 1adc4 <argp_failure@@Base+0x1118>
   1ab1c:	str	r8, [r4, #12]
   1ab20:	ldr	r1, [r3, #20]
   1ab24:	add	r3, r1, #3
   1ab28:	cmp	r7, r3
   1ab2c:	bls	1ac0c <argp_failure@@Base+0xf60>
   1ab30:	ldr	r2, [r4, #28]
   1ab34:	ldr	r3, [r4, #32]
   1ab38:	cmp	r2, r3
   1ab3c:	bcs	1abf4 <argp_failure@@Base+0xf48>
   1ab40:	ldr	r3, [r4, #28]
   1ab44:	add	r2, r3, #1
   1ab48:	str	r2, [r4, #28]
   1ab4c:	mov	r2, #10
   1ab50:	strb	r2, [r3]
   1ab54:	mov	r0, r5
   1ab58:	bl	11570 <strlen@plt>
   1ab5c:	subs	r7, r0, #0
   1ab60:	beq	1ab94 <argp_failure@@Base+0xee8>
   1ab64:	ldr	r3, [r4, #28]
   1ab68:	ldr	r2, [r4, #32]
   1ab6c:	add	r3, r3, r7
   1ab70:	cmp	r2, r3
   1ab74:	bcc	1ac74 <argp_failure@@Base+0xfc8>
   1ab78:	mov	r2, r7
   1ab7c:	mov	r1, r5
   1ab80:	ldr	r0, [r4, #28]
   1ab84:	bl	11444 <memcpy@plt>
   1ab88:	ldr	r3, [r4, #28]
   1ab8c:	add	r7, r3, r7
   1ab90:	str	r7, [r4, #28]
   1ab94:	cmp	r6, r5
   1ab98:	beq	1aba4 <argp_failure@@Base+0xef8>
   1ab9c:	mov	r0, r5
   1aba0:	bl	171e4 <argp_parse@@Base+0xa9c>
   1aba4:	ldr	r2, [r4, #24]
   1aba8:	ldr	r3, [r4, #28]
   1abac:	sub	r3, r3, r2
   1abb0:	ldr	r2, [r4, #16]
   1abb4:	cmp	r3, r2
   1abb8:	bls	1abc4 <argp_failure@@Base+0xf18>
   1abbc:	mov	r0, r4
   1abc0:	bl	1bb2c <argp_error@@Base+0xc3c>
   1abc4:	mov	r3, #0
   1abc8:	str	r3, [r4, #4]
   1abcc:	ldr	r2, [r4, #28]
   1abd0:	ldr	r3, [r4, #32]
   1abd4:	cmp	r2, r3
   1abd8:	bcs	1ac8c <argp_failure@@Base+0xfe0>
   1abdc:	ldr	r3, [r4, #28]
   1abe0:	add	r2, r3, #1
   1abe4:	str	r2, [r4, #28]
   1abe8:	mov	r2, #10
   1abec:	strb	r2, [r3]
   1abf0:	b	1a82c <argp_failure@@Base+0xb80>
   1abf4:	mov	r1, #1
   1abf8:	mov	r0, r4
   1abfc:	bl	1bf7c <argp_error@@Base+0x108c>
   1ac00:	cmp	r0, #0
   1ac04:	bne	1ab40 <argp_failure@@Base+0xe94>
   1ac08:	b	1ab54 <argp_failure@@Base+0xea8>
   1ac0c:	cmp	r7, r1
   1ac10:	bcc	1ac68 <argp_failure@@Base+0xfbc>
   1ac14:	ldr	r3, [r4, #28]
   1ac18:	ldr	r2, [r4, #32]
   1ac1c:	add	r3, r3, #3
   1ac20:	cmp	r2, r3
   1ac24:	bcc	1ac50 <argp_failure@@Base+0xfa4>
   1ac28:	ldr	r2, [pc, #500]	; 1ae24 <argp_failure@@Base+0x1178>
   1ac2c:	ldr	r3, [r4, #28]
   1ac30:	ldrh	r1, [r2]
   1ac34:	ldrb	r2, [r2, #2]
   1ac38:	strh	r1, [r3]
   1ac3c:	strb	r2, [r3, #2]
   1ac40:	ldr	r3, [r4, #28]
   1ac44:	add	r3, r3, #3
   1ac48:	str	r3, [r4, #28]
   1ac4c:	b	1ab54 <argp_failure@@Base+0xea8>
   1ac50:	mov	r1, #3
   1ac54:	mov	r0, r4
   1ac58:	bl	1bf7c <argp_error@@Base+0x108c>
   1ac5c:	cmp	r0, #0
   1ac60:	bne	1ac28 <argp_failure@@Base+0xf7c>
   1ac64:	b	1ab54 <argp_failure@@Base+0xea8>
   1ac68:	mov	r0, r4
   1ac6c:	bl	185a8 <_obstack_memory_used@@Base+0xfa8>
   1ac70:	b	1ab54 <argp_failure@@Base+0xea8>
   1ac74:	mov	r1, r7
   1ac78:	mov	r0, r4
   1ac7c:	bl	1bf7c <argp_error@@Base+0x108c>
   1ac80:	cmp	r0, #0
   1ac84:	bne	1ab78 <argp_failure@@Base+0xecc>
   1ac88:	b	1ab94 <argp_failure@@Base+0xee8>
   1ac8c:	mov	r1, #1
   1ac90:	mov	r0, r4
   1ac94:	bl	1bf7c <argp_error@@Base+0x108c>
   1ac98:	cmp	r0, #0
   1ac9c:	bne	1abdc <argp_failure@@Base+0xf30>
   1aca0:	b	1a82c <argp_failure@@Base+0xb80>
   1aca4:	mov	r1, #1
   1aca8:	mov	r0, r4
   1acac:	bl	1bf7c <argp_error@@Base+0x108c>
   1acb0:	cmp	r0, #0
   1acb4:	bne	1a4bc <argp_failure@@Base+0x810>
   1acb8:	b	1a4d0 <argp_failure@@Base+0x824>
   1acbc:	mov	r1, r6
   1acc0:	mov	r0, r4
   1acc4:	bl	1bf7c <argp_error@@Base+0x108c>
   1acc8:	cmp	r0, #0
   1accc:	bne	1a4f4 <argp_failure@@Base+0x848>
   1acd0:	b	1a510 <argp_failure@@Base+0x864>
   1acd4:	mov	r1, #1
   1acd8:	mov	r0, r4
   1acdc:	bl	1bf7c <argp_error@@Base+0x108c>
   1ace0:	cmp	r0, #0
   1ace4:	bne	1a520 <argp_failure@@Base+0x874>
   1ace8:	b	1a534 <argp_failure@@Base+0x888>
   1acec:	mov	r1, #1
   1acf0:	mov	r0, r4
   1acf4:	bl	1bf7c <argp_error@@Base+0x108c>
   1acf8:	cmp	r0, #0
   1acfc:	bne	1a5b4 <argp_failure@@Base+0x908>
   1ad00:	b	1a5c8 <argp_failure@@Base+0x91c>
   1ad04:	cmp	r0, #110	; 0x6e
   1ad08:	beq	1a024 <argp_failure@@Base+0x378>
   1ad0c:	mov	sl, r5
   1ad10:	mov	r7, r5
   1ad14:	b	1a050 <argp_failure@@Base+0x3a4>
   1ad18:	ldrb	r1, [r9]
   1ad1c:	cmp	r3, r1
   1ad20:	bne	1a8e8 <argp_failure@@Base+0xc3c>
   1ad24:	tst	r2, #2
   1ad28:	bne	1adbc <argp_failure@@Base+0x1110>
   1ad2c:	sub	r1, fp, #76	; 0x4c
   1ad30:	ldr	r0, [r7, #8]
   1ad34:	bl	1884c <_obstack_memory_used@@Base+0x124c>
   1ad38:	ldr	r2, [r4, #28]
   1ad3c:	ldr	r3, [r4, #32]
   1ad40:	cmp	r2, r3
   1ad44:	bcs	1a8f4 <argp_failure@@Base+0xc48>
   1ad48:	ldr	r3, [r4, #28]
   1ad4c:	add	r2, r3, #1
   1ad50:	str	r2, [r4, #28]
   1ad54:	mov	r2, #45	; 0x2d
   1ad58:	strb	r2, [r3]
   1ad5c:	ldr	r1, [r4, #28]
   1ad60:	ldr	r3, [r4, #32]
   1ad64:	ldrb	r2, [r9]
   1ad68:	cmp	r1, r3
   1ad6c:	bcs	1a90c <argp_failure@@Base+0xc60>
   1ad70:	ldr	r3, [r4, #28]
   1ad74:	add	r1, r3, #1
   1ad78:	str	r1, [r4, #28]
   1ad7c:	strb	r2, [r3]
   1ad80:	ldr	r3, [fp, #-120]	; 0xffffff88
   1ad84:	cmp	r3, #0
   1ad88:	beq	1ad98 <argp_failure@@Base+0x10ec>
   1ad8c:	ldr	r3, [r7]
   1ad90:	cmp	r3, #0
   1ad94:	beq	1a92c <argp_failure@@Base+0xc80>
   1ad98:	ldr	r2, [r5, #8]
   1ad9c:	cmp	r2, #0
   1ada0:	beq	1adbc <argp_failure@@Base+0x1110>
   1ada4:	ldr	r3, [r5, #12]
   1ada8:	mov	r0, r4
   1adac:	tst	r3, #1
   1adb0:	ldrne	r1, [pc, #112]	; 1ae28 <argp_failure@@Base+0x117c>
   1adb4:	ldreq	r1, [pc, #112]	; 1ae2c <argp_failure@@Base+0x1180>
   1adb8:	bl	1c060 <argp_error@@Base+0x1170>
   1adbc:	add	r9, r9, #1
   1adc0:	b	1a8e8 <argp_failure@@Base+0xc3c>
   1adc4:	andeq	r0, r3, r8, lsl #22
   1adc8:			; <UNDEFINED> instruction: 0x0001f3b0
   1adcc:	andeq	pc, r1, r3, lsl r4	; <UNPREDICTABLE>
   1add0:	andeq	pc, r1, r8, lsr r2	; <UNPREDICTABLE>
   1add4:	andeq	pc, r1, r4, ror #8
   1add8:	andeq	pc, r1, r0, lsr r4	; <UNPREDICTABLE>
   1addc:			; <UNDEFINED> instruction: 0x0001f3be
   1ade0:	andeq	pc, r1, r8, asr #5
   1ade4:	andeq	pc, r1, sp, ror #7
   1ade8:	andeq	sp, r1, r0, lsr lr
   1adec:	andeq	lr, r1, fp, ror #27
   1adf0:	andeq	r9, r1, r4, lsl #20
   1adf4:	andeq	pc, r1, r0, lsl #9
   1adf8:	andeq	pc, r1, ip, ror #8
   1adfc:	andeq	pc, r1, r9, ror r4	; <UNPREDICTABLE>
   1ae00:	andeq	pc, r1, r3, ror r4	; <UNPREDICTABLE>
   1ae04:	andeq	pc, r1, sp, lsl #9
   1ae08:	andeq	r0, r0, #5
   1ae0c:	ldrdeq	pc, [r1], -ip
   1ae10:	andeq	r0, r3, r8, lsr #24
   1ae14:	andeq	pc, r1, r0, asr r5	; <UNPREDICTABLE>
   1ae18:	andeq	pc, r1, r9, asr #9
   1ae1c:	andeq	pc, r1, lr, asr #9
   1ae20:	ldrdeq	pc, [r1], -r4
   1ae24:	ldrdeq	pc, [r1], -r8
   1ae28:	andeq	pc, r1, r4, asr #9
   1ae2c:	andeq	ip, r1, pc, ror r6

0001ae30 <argp_help@@Base>:
   1ae30:	push	{r0, r1, r2, lr}
   1ae34:	str	r3, [sp]
   1ae38:	mov	r3, r2
   1ae3c:	mov	r2, r1
   1ae40:	mov	r1, #0
   1ae44:	bl	19dfc <argp_failure@@Base+0x150>
   1ae48:	add	sp, sp, #12
   1ae4c:	pop	{pc}		; (ldr pc, [sp], #4)

0001ae50 <argp_state_help@@Base>:
   1ae50:	push	{r0, r1, r2, r4, r5, lr}
   1ae54:	subs	r4, r0, #0
   1ae58:	mov	r5, r2
   1ae5c:	beq	1ae74 <argp_state_help@@Base+0x24>
   1ae60:	ldr	r3, [r4, #16]
   1ae64:	tst	r3, #2
   1ae68:	beq	1ae8c <argp_state_help@@Base+0x3c>
   1ae6c:	add	sp, sp, #12
   1ae70:	pop	{r4, r5, pc}
   1ae74:	cmp	r1, #0
   1ae78:	beq	1ae6c <argp_state_help@@Base+0x1c>
   1ae7c:	ldr	r3, [pc, #100]	; 1aee8 <argp_state_help@@Base+0x98>
   1ae80:	mov	r0, r4
   1ae84:	ldr	r3, [r3]
   1ae88:	b	1aea4 <argp_state_help@@Base+0x54>
   1ae8c:	cmp	r1, #0
   1ae90:	beq	1ae6c <argp_state_help@@Base+0x1c>
   1ae94:	tst	r3, #64	; 0x40
   1ae98:	ldr	r0, [r4]
   1ae9c:	ldr	r3, [r4, #40]	; 0x28
   1aea0:	orrne	r5, r5, #128	; 0x80
   1aea4:	str	r3, [sp]
   1aea8:	mov	r2, r1
   1aeac:	mov	r3, r5
   1aeb0:	mov	r1, r4
   1aeb4:	bl	19dfc <argp_failure@@Base+0x150>
   1aeb8:	cmp	r4, #0
   1aebc:	beq	1aecc <argp_state_help@@Base+0x7c>
   1aec0:	ldr	r3, [r4, #16]
   1aec4:	tst	r3, #32
   1aec8:	bne	1ae6c <argp_state_help@@Base+0x1c>
   1aecc:	ands	r0, r5, #256	; 0x100
   1aed0:	ldrne	r3, [pc, #20]	; 1aeec <argp_state_help@@Base+0x9c>
   1aed4:	ldrne	r0, [r3]
   1aed8:	bne	1aee4 <argp_state_help@@Base+0x94>
   1aedc:	tst	r5, #512	; 0x200
   1aee0:	beq	1ae6c <argp_state_help@@Base+0x1c>
   1aee4:	bl	11558 <exit@plt>
   1aee8:	andeq	r0, r3, r8, asr #22
   1aeec:	andeq	r0, r3, r0, asr #22

0001aef0 <argp_error@@Base>:
   1aef0:	push	{r1, r2, r3}
   1aef4:	push	{r0, r1, r4, r5, lr}
   1aef8:	subs	r5, r0, #0
   1aefc:	beq	1af28 <argp_error@@Base+0x38>
   1af00:	ldr	r3, [r5, #16]
   1af04:	tst	r3, #2
   1af08:	bne	1af18 <argp_error@@Base+0x28>
   1af0c:	ldr	r4, [r5, #44]	; 0x2c
   1af10:	cmp	r4, #0
   1af14:	bne	1af54 <argp_error@@Base+0x64>
   1af18:	add	sp, sp, #8
   1af1c:	pop	{r4, r5, lr}
   1af20:	add	sp, sp, #12
   1af24:	bx	lr
   1af28:	ldr	r3, [pc, #144]	; 1afc0 <argp_error@@Base+0xd0>
   1af2c:	ldr	r4, [r3]
   1af30:	cmp	r4, #0
   1af34:	beq	1af18 <argp_error@@Base+0x28>
   1af38:	mov	r0, r4
   1af3c:	bl	11660 <flockfile@plt>
   1af40:	add	r3, sp, #24
   1af44:	str	r3, [sp, #4]
   1af48:	ldr	r3, [pc, #116]	; 1afc4 <argp_error@@Base+0xd4>
   1af4c:	ldr	r0, [r3]
   1af50:	b	1af68 <argp_error@@Base+0x78>
   1af54:	mov	r0, r4
   1af58:	bl	11660 <flockfile@plt>
   1af5c:	ldr	r0, [r5, #40]	; 0x28
   1af60:	add	r3, sp, #24
   1af64:	str	r3, [sp, #4]
   1af68:	mov	r1, r4
   1af6c:	bl	1139c <fputs_unlocked@plt>
   1af70:	mov	r1, r4
   1af74:	mov	r0, #58	; 0x3a
   1af78:	bl	11720 <putc_unlocked@plt>
   1af7c:	mov	r1, r4
   1af80:	mov	r0, #32
   1af84:	bl	11720 <putc_unlocked@plt>
   1af88:	ldr	r2, [sp, #4]
   1af8c:	ldr	r1, [sp, #20]
   1af90:	mov	r0, r4
   1af94:	bl	11630 <vfprintf@plt>
   1af98:	mov	r1, r4
   1af9c:	mov	r0, #10
   1afa0:	bl	11720 <putc_unlocked@plt>
   1afa4:	mov	r0, r5
   1afa8:	mov	r2, #260	; 0x104
   1afac:	mov	r1, r4
   1afb0:	bl	1ae50 <argp_state_help@@Base>
   1afb4:	mov	r0, r4
   1afb8:	bl	11498 <funlockfile@plt>
   1afbc:	b	1af18 <argp_error@@Base+0x28>
   1afc0:	andeq	r0, r3, r0, asr fp
   1afc4:	andeq	r0, r3, r8, asr #22
   1afc8:	ldr	r3, [r1, #32]
   1afcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1afd0:	ldr	r7, [r1, #28]
   1afd4:	ldr	r6, [r1]
   1afd8:	add	r8, r0, r3, lsl #2
   1afdc:	mov	lr, r6
   1afe0:	mov	r4, r7
   1afe4:	cmp	lr, r3
   1afe8:	movle	r2, #0
   1afec:	movgt	r2, #1
   1aff0:	cmp	r4, r3
   1aff4:	movge	r2, #0
   1aff8:	cmp	r2, #0
   1affc:	bne	1b014 <argp_error@@Base+0x124>
   1b000:	sub	r3, r6, r3
   1b004:	add	r3, r3, r7
   1b008:	str	r3, [r1, #28]
   1b00c:	str	r6, [r1, #32]
   1b010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b014:	sub	r2, r3, r4
   1b018:	sub	r5, lr, r3
   1b01c:	cmp	r5, r2
   1b020:	lsl	ip, r4, #2
   1b024:	addle	r2, r0, ip
   1b028:	movle	r9, r8
   1b02c:	movle	ip, #0
   1b030:	ble	1b064 <argp_error@@Base+0x174>
   1b034:	sub	r2, lr, r2
   1b038:	add	ip, r0, ip
   1b03c:	add	r5, r0, r2, lsl #2
   1b040:	add	lr, r0, lr, lsl #2
   1b044:	ldr	r9, [ip]
   1b048:	ldr	sl, [r5]
   1b04c:	str	sl, [ip], #4
   1b050:	str	r9, [r5], #4
   1b054:	cmp	lr, r5
   1b058:	bne	1b044 <argp_error@@Base+0x154>
   1b05c:	mov	lr, r2
   1b060:	b	1afe4 <argp_error@@Base+0xf4>
   1b064:	ldr	sl, [r2]
   1b068:	ldr	fp, [r9]
   1b06c:	add	ip, ip, #1
   1b070:	cmp	r5, ip
   1b074:	str	fp, [r2], #4
   1b078:	str	sl, [r9], #4
   1b07c:	bgt	1b064 <argp_error@@Base+0x174>
   1b080:	add	r4, r4, r5
   1b084:	mov	r2, lr
   1b088:	b	1b05c <argp_error@@Base+0x16c>
   1b08c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b090:	sub	sp, sp, #44	; 0x2c
   1b094:	mov	sl, r1
   1b098:	ldr	r4, [sp, #88]	; 0x58
   1b09c:	str	r0, [sp, #36]	; 0x24
   1b0a0:	str	r2, [sp, #32]
   1b0a4:	ldr	r8, [r4, #20]
   1b0a8:	str	r3, [sp, #20]
   1b0ac:	mov	r9, r8
   1b0b0:	mov	r3, r9
   1b0b4:	ldrb	r6, [r3], #1
   1b0b8:	cmp	r6, #0
   1b0bc:	cmpne	r6, #61	; 0x3d
   1b0c0:	movne	r6, #1
   1b0c4:	moveq	r6, #0
   1b0c8:	bne	1b190 <argp_error@@Base+0x2a0>
   1b0cc:	sub	r3, r9, r8
   1b0d0:	str	r3, [sp, #24]
   1b0d4:	ldr	r3, [sp, #20]
   1b0d8:	add	r7, r3, r6, lsl #4
   1b0dc:	ldr	r5, [r3, r6, lsl #4]
   1b0e0:	cmp	r5, #0
   1b0e4:	bne	1b198 <argp_error@@Base+0x2a8>
   1b0e8:	mov	r8, r5
   1b0ec:	mov	r7, r5
   1b0f0:	mov	fp, r3
   1b0f4:	mvn	r3, #0
   1b0f8:	str	r3, [sp, #16]
   1b0fc:	str	r5, [sp, #28]
   1b100:	str	r5, [sp, #12]
   1b104:	ldr	r0, [fp]
   1b108:	cmp	r0, #0
   1b10c:	bne	1b1cc <argp_error@@Base+0x2dc>
   1b110:	cmp	r5, #0
   1b114:	cmpeq	r8, #0
   1b118:	beq	1b304 <argp_error@@Base+0x414>
   1b11c:	ldr	r3, [sp, #92]	; 0x5c
   1b120:	cmp	r3, #0
   1b124:	beq	1b150 <argp_error@@Base+0x260>
   1b128:	cmp	r5, #0
   1b12c:	ldr	r7, [pc, #908]	; 1b4c0 <argp_error@@Base+0x5d0>
   1b130:	beq	1b290 <argp_error@@Base+0x3a0>
   1b134:	ldr	r3, [r4, #20]
   1b138:	ldr	r2, [sl]
   1b13c:	str	r3, [sp]
   1b140:	ldr	r1, [pc, #892]	; 1b4c4 <argp_error@@Base+0x5d4>
   1b144:	ldr	r3, [sp, #96]	; 0x60
   1b148:	ldr	r0, [r7]
   1b14c:	bl	11588 <fprintf@plt>
   1b150:	ldr	r3, [sp, #28]
   1b154:	cmp	r3, #0
   1b158:	beq	1b164 <argp_error@@Base+0x274>
   1b15c:	mov	r0, r8
   1b160:	bl	171e4 <argp_parse@@Base+0xa9c>
   1b164:	ldr	r5, [r4, #20]
   1b168:	mov	r0, r5
   1b16c:	bl	11570 <strlen@plt>
   1b170:	ldr	r3, [r4]
   1b174:	add	r3, r3, #1
   1b178:	str	r3, [r4]
   1b17c:	mov	r3, #0
   1b180:	add	r0, r5, r0
   1b184:	str	r0, [r4, #20]
   1b188:	str	r3, [r4, #8]
   1b18c:	b	1b38c <argp_error@@Base+0x49c>
   1b190:	mov	r9, r3
   1b194:	b	1b0b0 <argp_error@@Base+0x1c0>
   1b198:	ldr	r2, [sp, #24]
   1b19c:	mov	r1, r8
   1b1a0:	mov	r0, r5
   1b1a4:	bl	116f0 <strncmp@plt>
   1b1a8:	cmp	r0, #0
   1b1ac:	bne	1b1c4 <argp_error@@Base+0x2d4>
   1b1b0:	mov	r0, r5
   1b1b4:	bl	11570 <strlen@plt>
   1b1b8:	ldr	r3, [sp, #24]
   1b1bc:	cmp	r3, r0
   1b1c0:	beq	1b398 <argp_error@@Base+0x4a8>
   1b1c4:	add	r6, r6, #1
   1b1c8:	b	1b0d4 <argp_error@@Base+0x1e4>
   1b1cc:	ldr	r2, [sp, #24]
   1b1d0:	ldr	r1, [r4, #20]
   1b1d4:	bl	116f0 <strncmp@plt>
   1b1d8:	cmp	r0, #0
   1b1dc:	bne	1b27c <argp_error@@Base+0x38c>
   1b1e0:	cmp	r7, #0
   1b1e4:	moveq	r7, fp
   1b1e8:	ldreq	r3, [sp, #12]
   1b1ec:	streq	r3, [sp, #16]
   1b1f0:	beq	1b27c <argp_error@@Base+0x38c>
   1b1f4:	ldr	r3, [sp, #84]	; 0x54
   1b1f8:	cmp	r3, #0
   1b1fc:	bne	1b230 <argp_error@@Base+0x340>
   1b200:	ldr	r1, [r7, #4]
   1b204:	ldr	r2, [fp, #4]
   1b208:	cmp	r1, r2
   1b20c:	bne	1b230 <argp_error@@Base+0x340>
   1b210:	ldr	r1, [r7, #8]
   1b214:	ldr	r2, [fp, #8]
   1b218:	cmp	r1, r2
   1b21c:	bne	1b230 <argp_error@@Base+0x340>
   1b220:	ldr	r1, [r7, #12]
   1b224:	ldr	r2, [fp, #12]
   1b228:	cmp	r1, r2
   1b22c:	beq	1b27c <argp_error@@Base+0x38c>
   1b230:	cmp	r5, #0
   1b234:	bne	1b27c <argp_error@@Base+0x38c>
   1b238:	ldr	r3, [sp, #92]	; 0x5c
   1b23c:	cmp	r3, #0
   1b240:	beq	1b264 <argp_error@@Base+0x374>
   1b244:	cmp	r8, #0
   1b248:	bne	1b270 <argp_error@@Base+0x380>
   1b24c:	mov	r0, r6
   1b250:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1b254:	subs	r8, r0, #0
   1b258:	bne	1b49c <argp_error@@Base+0x5ac>
   1b25c:	mov	r5, #1
   1b260:	b	1b27c <argp_error@@Base+0x38c>
   1b264:	cmp	r8, #0
   1b268:	mov	r5, #1
   1b26c:	beq	1b27c <argp_error@@Base+0x38c>
   1b270:	ldr	r3, [sp, #12]
   1b274:	mov	r2, #1
   1b278:	strb	r2, [r8, r3]
   1b27c:	ldr	r3, [sp, #12]
   1b280:	add	fp, fp, #16
   1b284:	add	r3, r3, #1
   1b288:	str	r3, [sp, #12]
   1b28c:	b	1b104 <argp_error@@Base+0x214>
   1b290:	ldr	r0, [r7]
   1b294:	bl	11660 <flockfile@plt>
   1b298:	ldr	r3, [r4, #20]
   1b29c:	ldr	r2, [sl]
   1b2a0:	str	r3, [sp]
   1b2a4:	ldr	r1, [pc, #540]	; 1b4c8 <argp_error@@Base+0x5d8>
   1b2a8:	ldr	r3, [sp, #96]	; 0x60
   1b2ac:	ldr	r0, [r7]
   1b2b0:	bl	11588 <fprintf@plt>
   1b2b4:	ldr	r9, [pc, #528]	; 1b4cc <argp_error@@Base+0x5dc>
   1b2b8:	cmp	r6, r5
   1b2bc:	bne	1b2d8 <argp_error@@Base+0x3e8>
   1b2c0:	ldr	r1, [r7]
   1b2c4:	mov	r0, #10
   1b2c8:	bl	1163c <fputc@plt>
   1b2cc:	ldr	r0, [r7]
   1b2d0:	bl	11498 <funlockfile@plt>
   1b2d4:	b	1b150 <argp_error@@Base+0x260>
   1b2d8:	ldrb	r3, [r8, r5]
   1b2dc:	cmp	r3, #0
   1b2e0:	beq	1b2fc <argp_error@@Base+0x40c>
   1b2e4:	ldr	r3, [sp, #20]
   1b2e8:	ldr	r2, [sp, #96]	; 0x60
   1b2ec:	mov	r1, r9
   1b2f0:	ldr	r3, [r3, r5, lsl #4]
   1b2f4:	ldr	r0, [r7]
   1b2f8:	bl	11588 <fprintf@plt>
   1b2fc:	add	r5, r5, #1
   1b300:	b	1b2b8 <argp_error@@Base+0x3c8>
   1b304:	cmp	r7, #0
   1b308:	bne	1b39c <argp_error@@Base+0x4ac>
   1b30c:	ldr	r3, [sp, #84]	; 0x54
   1b310:	cmp	r3, #0
   1b314:	beq	1b348 <argp_error@@Base+0x458>
   1b318:	ldr	r3, [r4]
   1b31c:	ldr	r3, [sl, r3, lsl #2]
   1b320:	ldrb	r3, [r3, #1]
   1b324:	cmp	r3, #45	; 0x2d
   1b328:	beq	1b348 <argp_error@@Base+0x458>
   1b32c:	ldr	r3, [r4, #20]
   1b330:	ldr	r0, [sp, #32]
   1b334:	ldrb	r1, [r3]
   1b338:	bl	1157c <strchr@plt>
   1b33c:	cmp	r0, #0
   1b340:	mvnne	r0, #0
   1b344:	bne	1b390 <argp_error@@Base+0x4a0>
   1b348:	ldr	r3, [sp, #92]	; 0x5c
   1b34c:	cmp	r3, #0
   1b350:	beq	1b374 <argp_error@@Base+0x484>
   1b354:	ldr	r0, [pc, #356]	; 1b4c0 <argp_error@@Base+0x5d0>
   1b358:	ldr	r3, [r4, #20]
   1b35c:	ldr	r2, [sl]
   1b360:	str	r3, [sp]
   1b364:	ldr	r1, [pc, #356]	; 1b4d0 <argp_error@@Base+0x5e0>
   1b368:	ldr	r3, [sp, #96]	; 0x60
   1b36c:	ldr	r0, [r0]
   1b370:	bl	11588 <fprintf@plt>
   1b374:	ldr	r3, [r4]
   1b378:	mov	r2, #0
   1b37c:	add	r3, r3, #1
   1b380:	str	r2, [r4, #20]
   1b384:	str	r3, [r4]
   1b388:	str	r2, [r4, #8]
   1b38c:	mov	r0, #63	; 0x3f
   1b390:	add	sp, sp, #44	; 0x2c
   1b394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b398:	str	r6, [sp, #16]
   1b39c:	ldr	r3, [r4]
   1b3a0:	mov	r1, #0
   1b3a4:	add	r2, r3, #1
   1b3a8:	str	r2, [r4]
   1b3ac:	str	r1, [r4, #20]
   1b3b0:	ldrb	r1, [r9]
   1b3b4:	cmp	r1, #0
   1b3b8:	ldr	r1, [r7, #4]
   1b3bc:	beq	1b404 <argp_error@@Base+0x514>
   1b3c0:	cmp	r1, #0
   1b3c4:	addne	r9, r9, #1
   1b3c8:	strne	r9, [r4, #12]
   1b3cc:	bne	1b428 <argp_error@@Base+0x538>
   1b3d0:	ldr	r3, [sp, #92]	; 0x5c
   1b3d4:	cmp	r3, #0
   1b3d8:	beq	1b3fc <argp_error@@Base+0x50c>
   1b3dc:	ldr	r0, [pc, #220]	; 1b4c0 <argp_error@@Base+0x5d0>
   1b3e0:	ldr	r3, [r7]
   1b3e4:	ldr	r2, [sl]
   1b3e8:	str	r3, [sp]
   1b3ec:	ldr	r1, [pc, #224]	; 1b4d4 <argp_error@@Base+0x5e4>
   1b3f0:	ldr	r3, [sp, #96]	; 0x60
   1b3f4:	ldr	r0, [r0]
   1b3f8:	bl	11588 <fprintf@plt>
   1b3fc:	ldr	r3, [r7, #12]
   1b400:	b	1b188 <argp_error@@Base+0x298>
   1b404:	cmp	r1, #1
   1b408:	bne	1b428 <argp_error@@Base+0x538>
   1b40c:	ldr	r1, [sp, #36]	; 0x24
   1b410:	cmp	r2, r1
   1b414:	bge	1b450 <argp_error@@Base+0x560>
   1b418:	add	r3, r3, #2
   1b41c:	str	r3, [r4]
   1b420:	ldr	r3, [sl, r2, lsl #2]
   1b424:	str	r3, [r4, #12]
   1b428:	ldr	r3, [sp, #80]	; 0x50
   1b42c:	cmp	r3, #0
   1b430:	ldrne	r2, [sp, #16]
   1b434:	strne	r2, [r3]
   1b438:	ldr	r3, [r7, #8]
   1b43c:	ldr	r0, [r7, #12]
   1b440:	cmp	r3, #0
   1b444:	strne	r0, [r3]
   1b448:	movne	r0, #0
   1b44c:	b	1b390 <argp_error@@Base+0x4a0>
   1b450:	ldr	r3, [sp, #92]	; 0x5c
   1b454:	cmp	r3, #0
   1b458:	beq	1b47c <argp_error@@Base+0x58c>
   1b45c:	ldr	r0, [pc, #92]	; 1b4c0 <argp_error@@Base+0x5d0>
   1b460:	ldr	r3, [r7]
   1b464:	ldr	r2, [sl]
   1b468:	str	r3, [sp]
   1b46c:	ldr	r1, [pc, #100]	; 1b4d8 <argp_error@@Base+0x5e8>
   1b470:	ldr	r3, [sp, #96]	; 0x60
   1b474:	ldr	r0, [r0]
   1b478:	bl	11588 <fprintf@plt>
   1b47c:	ldr	r3, [r7, #12]
   1b480:	str	r3, [r4, #8]
   1b484:	ldr	r3, [sp, #32]
   1b488:	ldrb	r0, [r3]
   1b48c:	cmp	r0, #58	; 0x3a
   1b490:	moveq	r0, #58	; 0x3a
   1b494:	movne	r0, #63	; 0x3f
   1b498:	b	1b390 <argp_error@@Base+0x4a0>
   1b49c:	mov	r2, r6
   1b4a0:	mov	r1, #0
   1b4a4:	bl	115c4 <memset@plt>
   1b4a8:	ldr	r3, [sp, #16]
   1b4ac:	mov	r2, #1
   1b4b0:	strb	r2, [r8, r3]
   1b4b4:	mov	r3, #1
   1b4b8:	str	r3, [sp, #28]
   1b4bc:	b	1b270 <argp_error@@Base+0x380>
   1b4c0:	andeq	r0, r3, r0, asr fp
   1b4c4:	andeq	pc, r1, r4, ror #10
   1b4c8:	andeq	pc, r1, r4, lsl #11
   1b4cc:			; <UNDEFINED> instruction: 0x0001f5b3
   1b4d0:			; <UNDEFINED> instruction: 0x0001f5bb
   1b4d4:	ldrdeq	pc, [r1], -fp
   1b4d8:	andeq	pc, r1, r8, lsl #12
   1b4dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b4e0:	sub	sp, sp, #36	; 0x24
   1b4e4:	subs	r8, r0, #0
   1b4e8:	ldr	r4, [sp, #80]	; 0x50
   1b4ec:	ldr	fp, [sp, #72]	; 0x48
   1b4f0:	ldr	r5, [sp, #76]	; 0x4c
   1b4f4:	ldr	r9, [r4, #4]
   1b4f8:	bgt	1b508 <argp_error@@Base+0x618>
   1b4fc:	mvn	r0, #0
   1b500:	add	sp, sp, #36	; 0x24
   1b504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b508:	mov	sl, r3
   1b50c:	mov	r3, #0
   1b510:	str	r3, [r4, #12]
   1b514:	ldr	r3, [r4]
   1b518:	mov	r7, r1
   1b51c:	cmp	r3, #0
   1b520:	mov	r6, r2
   1b524:	beq	1b548 <argp_error@@Base+0x658>
   1b528:	ldr	r3, [r4, #16]
   1b52c:	cmp	r3, #0
   1b530:	beq	1b550 <argp_error@@Base+0x660>
   1b534:	ldrb	r3, [r2]
   1b538:	sub	r3, r3, #43	; 0x2b
   1b53c:	tst	r3, #253	; 0xfd
   1b540:	addeq	r6, r2, #1
   1b544:	b	1b58c <argp_error@@Base+0x69c>
   1b548:	mov	r3, #1
   1b54c:	str	r3, [r4]
   1b550:	ldr	r3, [r4]
   1b554:	str	r3, [r4, #32]
   1b558:	str	r3, [r4, #28]
   1b55c:	mov	r3, #0
   1b560:	str	r3, [r4, #20]
   1b564:	ldrb	r2, [r6]
   1b568:	cmp	r2, #45	; 0x2d
   1b56c:	moveq	r3, #2
   1b570:	beq	1b57c <argp_error@@Base+0x68c>
   1b574:	cmp	r2, #43	; 0x2b
   1b578:	bne	1b68c <argp_error@@Base+0x79c>
   1b57c:	add	r6, r6, #1
   1b580:	str	r3, [r4, #24]
   1b584:	mov	r3, #1
   1b588:	str	r3, [r4, #16]
   1b58c:	ldrb	r3, [r6]
   1b590:	cmp	r3, #58	; 0x3a
   1b594:	ldr	r3, [r4, #20]
   1b598:	moveq	r9, #0
   1b59c:	cmp	r3, #0
   1b5a0:	beq	1b5b0 <argp_error@@Base+0x6c0>
   1b5a4:	ldrb	r3, [r3]
   1b5a8:	cmp	r3, #0
   1b5ac:	bne	1b744 <argp_error@@Base+0x854>
   1b5b0:	ldr	r3, [r4]
   1b5b4:	ldr	r2, [r4, #32]
   1b5b8:	cmp	r2, r3
   1b5bc:	ldr	r2, [r4, #28]
   1b5c0:	strgt	r3, [r4, #32]
   1b5c4:	cmp	r3, r2
   1b5c8:	ldr	r2, [r4, #24]
   1b5cc:	strlt	r3, [r4, #28]
   1b5d0:	cmp	r2, #1
   1b5d4:	bne	1b60c <argp_error@@Base+0x71c>
   1b5d8:	ldr	r1, [r4, #32]
   1b5dc:	ldr	r2, [r4, #28]
   1b5e0:	cmp	r2, r1
   1b5e4:	beq	1b6bc <argp_error@@Base+0x7cc>
   1b5e8:	cmp	r3, r1
   1b5ec:	beq	1b5fc <argp_error@@Base+0x70c>
   1b5f0:	mov	r1, r4
   1b5f4:	mov	r0, r7
   1b5f8:	bl	1afc8 <argp_error@@Base+0xd8>
   1b5fc:	ldr	r3, [r4]
   1b600:	cmp	r8, r3
   1b604:	bgt	1b6c8 <argp_error@@Base+0x7d8>
   1b608:	str	r3, [r4, #32]
   1b60c:	ldr	r3, [r4]
   1b610:	cmp	r8, r3
   1b614:	beq	1b66c <argp_error@@Base+0x77c>
   1b618:	ldr	r1, [pc, #920]	; 1b9b8 <argp_error@@Base+0xac8>
   1b61c:	ldr	r0, [r7, r3, lsl #2]
   1b620:	str	r3, [sp, #24]
   1b624:	bl	113d8 <strcmp@plt>
   1b628:	cmp	r0, #0
   1b62c:	bne	1b66c <argp_error@@Base+0x77c>
   1b630:	ldr	r1, [r4, #28]
   1b634:	ldr	r3, [sp, #24]
   1b638:	ldr	r2, [r4, #32]
   1b63c:	add	r3, r3, #1
   1b640:	cmp	r1, r2
   1b644:	str	r3, [r4]
   1b648:	streq	r3, [r4, #28]
   1b64c:	beq	1b664 <argp_error@@Base+0x774>
   1b650:	cmp	r3, r2
   1b654:	beq	1b664 <argp_error@@Base+0x774>
   1b658:	mov	r1, r4
   1b65c:	mov	r0, r7
   1b660:	bl	1afc8 <argp_error@@Base+0xd8>
   1b664:	str	r8, [r4, #32]
   1b668:	str	r8, [r4]
   1b66c:	ldr	r2, [r4]
   1b670:	cmp	r8, r2
   1b674:	bne	1b6f0 <argp_error@@Base+0x800>
   1b678:	ldr	r3, [r4, #28]
   1b67c:	ldr	r2, [r4, #32]
   1b680:	cmp	r3, r2
   1b684:	strne	r3, [r4]
   1b688:	b	1b4fc <argp_error@@Base+0x60c>
   1b68c:	ldr	r3, [sp, #84]	; 0x54
   1b690:	cmp	r3, #0
   1b694:	beq	1b6a4 <argp_error@@Base+0x7b4>
   1b698:	mov	r3, #0
   1b69c:	str	r3, [r4, #24]
   1b6a0:	b	1b584 <argp_error@@Base+0x694>
   1b6a4:	ldr	r0, [pc, #784]	; 1b9bc <argp_error@@Base+0xacc>
   1b6a8:	bl	114e0 <getenv@plt>
   1b6ac:	cmp	r0, #0
   1b6b0:	bne	1b698 <argp_error@@Base+0x7a8>
   1b6b4:	mov	r3, #1
   1b6b8:	b	1b69c <argp_error@@Base+0x7ac>
   1b6bc:	cmp	r3, r2
   1b6c0:	strne	r3, [r4, #28]
   1b6c4:	b	1b5fc <argp_error@@Base+0x70c>
   1b6c8:	ldr	r2, [r7, r3, lsl #2]
   1b6cc:	ldrb	r1, [r2]
   1b6d0:	cmp	r1, #45	; 0x2d
   1b6d4:	bne	1b6e4 <argp_error@@Base+0x7f4>
   1b6d8:	ldrb	r2, [r2, #1]
   1b6dc:	cmp	r2, #0
   1b6e0:	bne	1b608 <argp_error@@Base+0x718>
   1b6e4:	add	r3, r3, #1
   1b6e8:	str	r3, [r4]
   1b6ec:	b	1b5fc <argp_error@@Base+0x70c>
   1b6f0:	ldr	r3, [r7, r2, lsl #2]
   1b6f4:	ldrb	r1, [r3]
   1b6f8:	cmp	r1, #45	; 0x2d
   1b6fc:	bne	1b70c <argp_error@@Base+0x81c>
   1b700:	ldrb	r1, [r3, #1]
   1b704:	cmp	r1, #0
   1b708:	bne	1b72c <argp_error@@Base+0x83c>
   1b70c:	ldr	r1, [r4, #24]
   1b710:	cmp	r1, #0
   1b714:	beq	1b4fc <argp_error@@Base+0x60c>
   1b718:	add	r2, r2, #1
   1b71c:	str	r2, [r4]
   1b720:	str	r3, [r4, #12]
   1b724:	mov	r0, #1
   1b728:	b	1b500 <argp_error@@Base+0x610>
   1b72c:	cmp	sl, #0
   1b730:	bne	1b7c0 <argp_error@@Base+0x8d0>
   1b734:	ldr	r3, [r4]
   1b738:	ldr	r3, [r7, r3, lsl #2]
   1b73c:	add	r3, r3, #1
   1b740:	str	r3, [r4, #20]
   1b744:	ldr	r3, [r4, #20]
   1b748:	mov	r0, r6
   1b74c:	add	r2, r3, #1
   1b750:	str	r2, [r4, #20]
   1b754:	ldrb	r5, [r3]
   1b758:	str	r2, [sp, #28]
   1b75c:	str	r3, [sp, #24]
   1b760:	mov	r1, r5
   1b764:	bl	1157c <strchr@plt>
   1b768:	ldr	r3, [sp, #24]
   1b76c:	ldr	r2, [sp, #28]
   1b770:	ldrb	r1, [r3, #1]
   1b774:	cmp	r1, #0
   1b778:	ldreq	r1, [r4]
   1b77c:	addeq	r1, r1, #1
   1b780:	streq	r1, [r4]
   1b784:	sub	r1, r5, #58	; 0x3a
   1b788:	cmp	r0, #0
   1b78c:	cmpne	r1, #1
   1b790:	bhi	1b86c <argp_error@@Base+0x97c>
   1b794:	cmp	r9, #0
   1b798:	beq	1b7b4 <argp_error@@Base+0x8c4>
   1b79c:	ldr	r0, [pc, #540]	; 1b9c0 <argp_error@@Base+0xad0>
   1b7a0:	mov	r3, r5
   1b7a4:	ldr	r2, [r7]
   1b7a8:	ldr	r1, [pc, #532]	; 1b9c4 <argp_error@@Base+0xad4>
   1b7ac:	ldr	r0, [r0]
   1b7b0:	bl	11588 <fprintf@plt>
   1b7b4:	str	r5, [r4, #8]
   1b7b8:	mov	r0, #63	; 0x3f
   1b7bc:	b	1b500 <argp_error@@Base+0x610>
   1b7c0:	cmp	r1, #45	; 0x2d
   1b7c4:	bne	1b800 <argp_error@@Base+0x910>
   1b7c8:	add	r3, r3, #2
   1b7cc:	str	r3, [r4, #20]
   1b7d0:	ldr	r3, [pc, #480]	; 1b9b8 <argp_error@@Base+0xac8>
   1b7d4:	str	r9, [sp, #12]
   1b7d8:	str	r3, [sp, #16]
   1b7dc:	str	r4, [sp, #8]
   1b7e0:	str	r5, [sp, #4]
   1b7e4:	str	fp, [sp]
   1b7e8:	mov	r3, sl
   1b7ec:	mov	r2, r6
   1b7f0:	mov	r1, r7
   1b7f4:	mov	r0, r8
   1b7f8:	bl	1b08c <argp_error@@Base+0x19c>
   1b7fc:	b	1b500 <argp_error@@Base+0x610>
   1b800:	cmp	r5, #0
   1b804:	beq	1b734 <argp_error@@Base+0x844>
   1b808:	ldrb	r2, [r3, #2]
   1b80c:	cmp	r2, #0
   1b810:	bne	1b82c <argp_error@@Base+0x93c>
   1b814:	mov	r0, r6
   1b818:	str	r3, [sp, #24]
   1b81c:	bl	1157c <strchr@plt>
   1b820:	ldr	r3, [sp, #24]
   1b824:	cmp	r0, #0
   1b828:	bne	1b734 <argp_error@@Base+0x844>
   1b82c:	add	r3, r3, #1
   1b830:	str	r3, [r4, #20]
   1b834:	ldr	r3, [pc, #396]	; 1b9c8 <argp_error@@Base+0xad8>
   1b838:	str	r9, [sp, #12]
   1b83c:	str	r3, [sp, #16]
   1b840:	str	r4, [sp, #8]
   1b844:	str	r5, [sp, #4]
   1b848:	str	fp, [sp]
   1b84c:	mov	r3, sl
   1b850:	mov	r2, r6
   1b854:	mov	r1, r7
   1b858:	mov	r0, r8
   1b85c:	bl	1b08c <argp_error@@Base+0x19c>
   1b860:	cmn	r0, #1
   1b864:	bne	1b500 <argp_error@@Base+0x610>
   1b868:	b	1b734 <argp_error@@Base+0x844>
   1b86c:	ldrb	r1, [r0]
   1b870:	cmp	r1, #87	; 0x57
   1b874:	ldrb	r1, [r0, #1]
   1b878:	bne	1b914 <argp_error@@Base+0xa24>
   1b87c:	cmp	sl, #0
   1b880:	sub	ip, r1, #59	; 0x3b
   1b884:	clz	ip, ip
   1b888:	lsr	ip, ip, #5
   1b88c:	moveq	ip, #0
   1b890:	cmp	ip, #0
   1b894:	beq	1b914 <argp_error@@Base+0xa24>
   1b898:	ldrb	r3, [r3, #1]
   1b89c:	cmp	r3, #0
   1b8a0:	strne	r2, [r4, #12]
   1b8a4:	bne	1b8f4 <argp_error@@Base+0xa04>
   1b8a8:	ldr	r3, [r4]
   1b8ac:	cmp	r8, r3
   1b8b0:	ldrne	r3, [r7, r3, lsl #2]
   1b8b4:	strne	r3, [r4, #12]
   1b8b8:	bne	1b8f4 <argp_error@@Base+0xa04>
   1b8bc:	cmp	r9, #0
   1b8c0:	beq	1b8dc <argp_error@@Base+0x9ec>
   1b8c4:	ldr	r0, [pc, #244]	; 1b9c0 <argp_error@@Base+0xad0>
   1b8c8:	mov	r3, r5
   1b8cc:	ldr	r2, [r7]
   1b8d0:	ldr	r1, [pc, #244]	; 1b9cc <argp_error@@Base+0xadc>
   1b8d4:	ldr	r0, [r0]
   1b8d8:	bl	11588 <fprintf@plt>
   1b8dc:	str	r5, [r4, #8]
   1b8e0:	ldrb	r0, [r6]
   1b8e4:	cmp	r0, #58	; 0x3a
   1b8e8:	moveq	r0, #58	; 0x3a
   1b8ec:	movne	r0, #63	; 0x3f
   1b8f0:	b	1b500 <argp_error@@Base+0x610>
   1b8f4:	ldr	r3, [r4, #12]
   1b8f8:	ldr	r2, [pc, #208]	; 1b9d0 <argp_error@@Base+0xae0>
   1b8fc:	str	r3, [r4, #20]
   1b900:	mov	r3, #0
   1b904:	str	r3, [r4, #12]
   1b908:	str	r2, [sp, #16]
   1b90c:	stmib	sp, {r3, r4, r9}
   1b910:	b	1b7e4 <argp_error@@Base+0x8f4>
   1b914:	cmp	r1, #58	; 0x3a
   1b918:	bne	1b964 <argp_error@@Base+0xa74>
   1b91c:	ldrb	r1, [r0, #2]
   1b920:	ldrb	r3, [r3, #1]
   1b924:	cmp	r1, #58	; 0x3a
   1b928:	bne	1b944 <argp_error@@Base+0xa54>
   1b92c:	cmp	r3, #0
   1b930:	strne	r2, [r4, #12]
   1b934:	ldrne	r3, [r4]
   1b938:	bne	1b954 <argp_error@@Base+0xa64>
   1b93c:	str	r3, [r4, #12]
   1b940:	b	1b95c <argp_error@@Base+0xa6c>
   1b944:	cmp	r3, #0
   1b948:	ldr	r3, [r4]
   1b94c:	beq	1b96c <argp_error@@Base+0xa7c>
   1b950:	str	r2, [r4, #12]
   1b954:	add	r3, r3, #1
   1b958:	str	r3, [r4]
   1b95c:	mov	r3, #0
   1b960:	str	r3, [r4, #20]
   1b964:	mov	r0, r5
   1b968:	b	1b500 <argp_error@@Base+0x610>
   1b96c:	cmp	r8, r3
   1b970:	addne	r2, r3, #1
   1b974:	strne	r2, [r4]
   1b978:	ldrne	r3, [r7, r3, lsl #2]
   1b97c:	bne	1b93c <argp_error@@Base+0xa4c>
   1b980:	cmp	r9, #0
   1b984:	beq	1b9a0 <argp_error@@Base+0xab0>
   1b988:	ldr	r0, [pc, #48]	; 1b9c0 <argp_error@@Base+0xad0>
   1b98c:	mov	r3, r5
   1b990:	ldr	r2, [r7]
   1b994:	ldr	r1, [pc, #48]	; 1b9cc <argp_error@@Base+0xadc>
   1b998:	ldr	r0, [r0]
   1b99c:	bl	11588 <fprintf@plt>
   1b9a0:	str	r5, [r4, #8]
   1b9a4:	ldrb	r5, [r6]
   1b9a8:	cmp	r5, #58	; 0x3a
   1b9ac:	moveq	r5, #58	; 0x3a
   1b9b0:	movne	r5, #63	; 0x3f
   1b9b4:	b	1b95c <argp_error@@Base+0xa6c>
   1b9b8:	andeq	lr, r1, ip, lsr #27
   1b9bc:	andeq	pc, r1, r0, lsr r6	; <UNPREDICTABLE>
   1b9c0:	andeq	r0, r3, r0, asr fp
   1b9c4:	andeq	pc, r1, r0, asr #12
   1b9c8:	andeq	lr, r1, sp, lsr #27
   1b9cc:	andeq	pc, r1, ip, asr r6	; <UNPREDICTABLE>
   1b9d0:	andeq	pc, r1, r5, lsl #13
   1b9d4:	push	{r4, r5, lr}
   1b9d8:	sub	sp, sp, #20
   1b9dc:	ldr	r5, [pc, #84]	; 1ba38 <argp_error@@Base+0xb48>
   1b9e0:	ldr	r4, [pc, #84]	; 1ba3c <argp_error@@Base+0xb4c>
   1b9e4:	ldr	ip, [r5]
   1b9e8:	str	r4, [sp, #8]
   1b9ec:	str	ip, [r4]
   1b9f0:	ldr	ip, [r5, #4]
   1b9f4:	str	ip, [r4, #4]
   1b9f8:	ldr	ip, [sp, #40]	; 0x28
   1b9fc:	str	ip, [sp, #12]
   1ba00:	ldr	ip, [sp, #36]	; 0x24
   1ba04:	str	ip, [sp, #4]
   1ba08:	ldr	ip, [sp, #32]
   1ba0c:	str	ip, [sp]
   1ba10:	bl	1b4dc <argp_error@@Base+0x5ec>
   1ba14:	ldr	r3, [r4]
   1ba18:	ldr	r2, [r4, #12]
   1ba1c:	str	r3, [r5]
   1ba20:	ldr	r3, [pc, #24]	; 1ba40 <argp_error@@Base+0xb50>
   1ba24:	str	r2, [r3]
   1ba28:	ldr	r3, [r4, #8]
   1ba2c:	str	r3, [r5, #8]
   1ba30:	add	sp, sp, #20
   1ba34:	pop	{r4, r5, pc}
   1ba38:	andeq	r0, r3, r4, lsr fp
   1ba3c:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   1ba40:	andeq	r0, r3, r0, lsr ip
   1ba44:	push	{r0, r1, r2, r3, r4, lr}
   1ba48:	mov	r3, #1
   1ba4c:	str	r3, [sp, #8]
   1ba50:	mov	r3, #0
   1ba54:	str	r3, [sp, #4]
   1ba58:	str	r3, [sp]
   1ba5c:	bl	1b9d4 <argp_error@@Base+0xae4>
   1ba60:	add	sp, sp, #20
   1ba64:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba68:	push	{r4, r5, r6, lr}
   1ba6c:	subs	r4, r2, #0
   1ba70:	mov	r6, r0
   1ba74:	mov	r5, r1
   1ba78:	beq	1ba90 <argp_error@@Base+0xba0>
   1ba7c:	mov	r1, r4
   1ba80:	mvn	r0, #0
   1ba84:	bl	1c0d4 <argp_error@@Base+0x11e4>
   1ba88:	cmp	r0, r5
   1ba8c:	bcc	1baa0 <argp_error@@Base+0xbb0>
   1ba90:	mul	r1, r5, r4
   1ba94:	mov	r0, r6
   1ba98:	pop	{r4, r5, r6, lr}
   1ba9c:	b	182d4 <_obstack_memory_used@@Base+0xcd4>
   1baa0:	bl	11594 <__errno_location@plt>
   1baa4:	mov	r3, #12
   1baa8:	str	r3, [r0]
   1baac:	mov	r0, #0
   1bab0:	pop	{r4, r5, r6, pc}
   1bab4:	push	{r4, r5, r6, r7, r8, lr}
   1bab8:	mov	r8, r0
   1babc:	mov	r0, #36	; 0x24
   1bac0:	mov	r7, r1
   1bac4:	mov	r6, r2
   1bac8:	mov	r5, r3
   1bacc:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1bad0:	subs	r4, r0, #0
   1bad4:	beq	1bb24 <argp_error@@Base+0xc34>
   1bad8:	mov	r3, #0
   1badc:	str	r5, [r4, #12]
   1bae0:	str	r8, [r4]
   1bae4:	str	r7, [r4, #4]
   1bae8:	str	r6, [r4, #8]
   1baec:	str	r3, [r4, #20]
   1baf0:	str	r3, [r4, #16]
   1baf4:	mov	r0, #200	; 0xc8
   1baf8:	bl	18294 <_obstack_memory_used@@Base+0xc94>
   1bafc:	cmp	r0, #0
   1bb00:	mov	r5, r0
   1bb04:	addne	r5, r0, #200	; 0xc8
   1bb08:	str	r0, [r4, #24]
   1bb0c:	strne	r0, [r4, #28]
   1bb10:	strne	r5, [r4, #32]
   1bb14:	bne	1bb24 <argp_error@@Base+0xc34>
   1bb18:	mov	r0, r4
   1bb1c:	bl	171e4 <argp_parse@@Base+0xa9c>
   1bb20:	mov	r4, r5
   1bb24:	mov	r0, r4
   1bb28:	pop	{r4, r5, r6, r7, r8, pc}
   1bb2c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bb30:	mov	r4, r0
   1bb34:	ldr	r6, [r0, #24]
   1bb38:	ldr	r3, [r0, #16]
   1bb3c:	add	r6, r6, r3
   1bb40:	ldr	r2, [r4, #28]
   1bb44:	cmp	r6, r2
   1bb48:	bcs	1bbf8 <argp_error@@Base+0xd08>
   1bb4c:	ldr	r7, [r4, #20]
   1bb50:	cmp	r7, #0
   1bb54:	bne	1bbac <argp_error@@Base+0xcbc>
   1bb58:	ldr	r5, [r4, #4]
   1bb5c:	cmp	r5, #0
   1bb60:	beq	1bbac <argp_error@@Base+0xcbc>
   1bb64:	ldr	r1, [r4, #32]
   1bb68:	add	r3, r2, r5
   1bb6c:	cmp	r1, r3
   1bb70:	bls	1bc10 <argp_error@@Base+0xd20>
   1bb74:	add	r7, r6, r5
   1bb78:	sub	r2, r2, r6
   1bb7c:	mov	r1, r6
   1bb80:	mov	r0, r7
   1bb84:	bl	113fc <memmove@plt>
   1bb88:	ldr	r3, [r4, #28]
   1bb8c:	mov	r0, r6
   1bb90:	add	r3, r3, r5
   1bb94:	str	r3, [r4, #28]
   1bb98:	mov	r2, r5
   1bb9c:	mov	r1, #32
   1bba0:	bl	115c4 <memset@plt>
   1bba4:	mov	r6, r7
   1bba8:	str	r5, [r4, #20]
   1bbac:	ldr	r9, [r4, #28]
   1bbb0:	mov	r1, #10
   1bbb4:	sub	r8, r9, r6
   1bbb8:	mov	r2, r8
   1bbbc:	mov	r0, r6
   1bbc0:	bl	115f4 <memchr@plt>
   1bbc4:	ldr	r2, [r4, #20]
   1bbc8:	ldr	r5, [r4, #8]
   1bbcc:	cmp	r2, #0
   1bbd0:	movlt	r3, #0
   1bbd4:	strlt	r3, [r4, #20]
   1bbd8:	cmp	r0, #0
   1bbdc:	mov	fp, r0
   1bbe0:	ldr	r0, [r4, #20]
   1bbe4:	bne	1bc2c <argp_error@@Base+0xd3c>
   1bbe8:	add	r3, r8, r0
   1bbec:	cmp	r3, r5
   1bbf0:	bcs	1bc4c <argp_error@@Base+0xd5c>
   1bbf4:	str	r3, [r4, #20]
   1bbf8:	ldr	r3, [r4, #28]
   1bbfc:	ldr	r2, [r4, #24]
   1bc00:	sub	r3, r3, r2
   1bc04:	str	r3, [r4, #16]
   1bc08:	add	sp, sp, #12
   1bc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc10:	ldr	r1, [r4]
   1bc14:	mov	r0, #32
   1bc18:	add	r7, r7, #1
   1bc1c:	bl	11720 <putc_unlocked@plt>
   1bc20:	cmp	r5, r7
   1bc24:	bne	1bc10 <argp_error@@Base+0xd20>
   1bc28:	b	1bba8 <argp_error@@Base+0xcb8>
   1bc2c:	sub	r2, fp, r6
   1bc30:	add	r2, r2, r0
   1bc34:	cmp	r2, r5
   1bc38:	bge	1bc50 <argp_error@@Base+0xd60>
   1bc3c:	mov	r3, #0
   1bc40:	str	r3, [r4, #20]
   1bc44:	add	r3, fp, #1
   1bc48:	b	1bcb0 <argp_error@@Base+0xdc0>
   1bc4c:	mov	fp, r9
   1bc50:	ldr	sl, [r4, #12]
   1bc54:	cmp	sl, #0
   1bc58:	subge	r5, r5, r0
   1bc5c:	addge	r5, r6, r5
   1bc60:	movge	r7, r5
   1bc64:	bge	1bcd0 <argp_error@@Base+0xde0>
   1bc68:	cmp	fp, r9
   1bc6c:	sub	sl, r5, #1
   1bc70:	bcs	1bcb8 <argp_error@@Base+0xdc8>
   1bc74:	sub	r0, sl, r0
   1bc78:	sub	r2, r9, fp
   1bc7c:	mov	r1, fp
   1bc80:	add	r0, r6, r0
   1bc84:	bl	113fc <memmove@plt>
   1bc88:	ldr	r8, [r4, #20]
   1bc8c:	sub	sl, sl, r8
   1bc90:	add	sl, r6, sl
   1bc94:	sub	r3, sl, fp
   1bc98:	ldr	sl, [r4, #28]
   1bc9c:	sub	r3, sl, r3
   1bca0:	str	r3, [r4, #28]
   1bca4:	mov	r3, #0
   1bca8:	str	r3, [r4, #20]
   1bcac:	add	r3, r6, r5
   1bcb0:	mov	r6, r3
   1bcb4:	b	1bb40 <argp_error@@Base+0xc50>
   1bcb8:	add	r0, r8, r0
   1bcbc:	str	r0, [r4, #20]
   1bcc0:	sub	r0, sl, r0
   1bcc4:	add	r9, r9, r0
   1bcc8:	str	r9, [r4, #28]
   1bccc:	b	1bbf8 <argp_error@@Base+0xd08>
   1bcd0:	cmp	r6, r7
   1bcd4:	mov	r2, r7
   1bcd8:	bhi	1bd04 <argp_error@@Base+0xe14>
   1bcdc:	str	r7, [sp, #4]
   1bce0:	bl	1154c <__ctype_b_loc@plt>
   1bce4:	ldr	r2, [sp, #4]
   1bce8:	sub	r7, r7, #1
   1bcec:	ldrb	r1, [r2]
   1bcf0:	lsl	r1, r1, #1
   1bcf4:	ldr	r0, [r0]
   1bcf8:	ldrh	r1, [r0, r1]
   1bcfc:	tst	r1, #1
   1bd00:	beq	1bcd0 <argp_error@@Base+0xde0>
   1bd04:	add	r7, r2, #1
   1bd08:	cmp	r6, r7
   1bd0c:	bcs	1bd84 <argp_error@@Base+0xe94>
   1bd10:	cmp	r6, r2
   1bd14:	bhi	1bd50 <argp_error@@Base+0xe60>
   1bd18:	sub	r5, r2, #1
   1bd1c:	cmp	r6, r5
   1bd20:	mov	r2, r5
   1bd24:	bhi	1bd50 <argp_error@@Base+0xe60>
   1bd28:	str	r5, [sp, #4]
   1bd2c:	bl	1154c <__ctype_b_loc@plt>
   1bd30:	ldr	r2, [sp, #4]
   1bd34:	sub	r5, r5, #1
   1bd38:	ldrb	r3, [r2]
   1bd3c:	lsl	r3, r3, #1
   1bd40:	ldr	r1, [r0]
   1bd44:	ldrh	r3, [r1, r3]
   1bd48:	tst	r3, #1
   1bd4c:	bne	1bd1c <argp_error@@Base+0xe2c>
   1bd50:	add	r5, r2, #1
   1bd54:	add	r3, r8, #1
   1bd58:	add	r3, r6, r3
   1bd5c:	cmp	r7, r3
   1bd60:	bne	1bdec <argp_error@@Base+0xefc>
   1bd64:	ldr	r3, [r4, #32]
   1bd68:	sub	r3, r3, r5
   1bd6c:	cmp	sl, r3
   1bd70:	bge	1bdfc <argp_error@@Base+0xf0c>
   1bd74:	mov	r3, #10
   1bd78:	add	r9, r5, #1
   1bd7c:	strb	r3, [r5]
   1bd80:	b	1be7c <argp_error@@Base+0xf8c>
   1bd84:	cmp	fp, r5
   1bd88:	bls	1bde0 <argp_error@@Base+0xef0>
   1bd8c:	add	r7, r5, #1
   1bd90:	cmp	fp, r7
   1bd94:	mov	r5, r7
   1bd98:	beq	1bde0 <argp_error@@Base+0xef0>
   1bd9c:	bl	1154c <__ctype_b_loc@plt>
   1bda0:	ldrb	r2, [r5]
   1bda4:	add	r7, r7, #1
   1bda8:	lsl	r2, r2, #1
   1bdac:	ldr	r1, [r0]
   1bdb0:	ldrh	r2, [r1, r2]
   1bdb4:	tst	r2, #1
   1bdb8:	beq	1bd90 <argp_error@@Base+0xea0>
   1bdbc:	bl	1154c <__ctype_b_loc@plt>
   1bdc0:	mov	r7, r5
   1bdc4:	ldr	r2, [r0]
   1bdc8:	ldrb	r3, [r7, #1]!
   1bdcc:	lsl	r3, r3, #1
   1bdd0:	ldrh	r3, [r2, r3]
   1bdd4:	tst	r3, #1
   1bdd8:	bne	1bdc8 <argp_error@@Base+0xed8>
   1bddc:	b	1bd54 <argp_error@@Base+0xe64>
   1bde0:	cmp	fp, r5
   1bde4:	bne	1bdbc <argp_error@@Base+0xecc>
   1bde8:	b	1bc3c <argp_error@@Base+0xd4c>
   1bdec:	add	r3, r5, #1
   1bdf0:	sub	r3, r7, r3
   1bdf4:	cmp	sl, r3
   1bdf8:	ble	1bd74 <argp_error@@Base+0xe84>
   1bdfc:	cmp	r7, r9
   1be00:	bcs	1bd74 <argp_error@@Base+0xe84>
   1be04:	ldr	r3, [r4, #32]
   1be08:	add	r0, sl, #1
   1be0c:	sub	r3, r3, r9
   1be10:	cmp	r3, r0
   1be14:	ble	1be44 <argp_error@@Base+0xf54>
   1be18:	sub	r9, r9, r7
   1be1c:	mov	r2, r9
   1be20:	mov	r1, r7
   1be24:	add	r0, r5, r0
   1be28:	bl	113fc <memmove@plt>
   1be2c:	ldr	r7, [r4, #12]
   1be30:	add	r7, r7, #1
   1be34:	add	r7, r5, r7
   1be38:	add	r9, r7, r9
   1be3c:	sub	r8, r9, r6
   1be40:	b	1bd74 <argp_error@@Base+0xe84>
   1be44:	ldr	r0, [r4, #24]
   1be48:	cmp	r5, r0
   1be4c:	bls	1be60 <argp_error@@Base+0xf70>
   1be50:	ldr	r3, [r4]
   1be54:	sub	r2, r5, r0
   1be58:	mov	r1, #1
   1be5c:	bl	11450 <fwrite_unlocked@plt>
   1be60:	ldr	r1, [r4]
   1be64:	mov	r0, #10
   1be68:	bl	11720 <putc_unlocked@plt>
   1be6c:	ldr	r9, [r4, #24]
   1be70:	sub	r6, r6, r9
   1be74:	add	r8, r8, r6
   1be78:	mov	r6, r9
   1be7c:	ldr	r2, [r4, #12]
   1be80:	sub	r3, r7, r9
   1be84:	cmp	r3, r2
   1be88:	bge	1bec4 <argp_error@@Base+0xfd4>
   1be8c:	add	r3, r8, #1
   1be90:	add	r3, r6, r3
   1be94:	cmp	r7, r3
   1be98:	bne	1beac <argp_error@@Base+0xfbc>
   1be9c:	ldr	r3, [r4, #32]
   1bea0:	sub	r3, r3, r7
   1bea4:	cmp	r2, r3
   1bea8:	ble	1bec4 <argp_error@@Base+0xfd4>
   1beac:	mov	r5, #0
   1beb0:	ldr	r3, [r4, #12]
   1beb4:	cmp	r5, r3
   1beb8:	blt	1bf28 <argp_error@@Base+0x1038>
   1bebc:	mov	r3, r9
   1bec0:	b	1bed8 <argp_error@@Base+0xfe8>
   1bec4:	mov	r3, r9
   1bec8:	ldr	r1, [r4, #12]
   1becc:	sub	r2, r3, r9
   1bed0:	cmp	r1, r2
   1bed4:	bgt	1bf1c <argp_error@@Base+0x102c>
   1bed8:	cmp	r3, r7
   1bedc:	bcs	1bef8 <argp_error@@Base+0x1008>
   1bee0:	add	r2, r6, r8
   1bee4:	mov	r0, r3
   1bee8:	sub	r2, r2, r7
   1beec:	mov	r1, r7
   1bef0:	bl	113fc <memmove@plt>
   1bef4:	mov	r3, r0
   1bef8:	ldr	r2, [r4, #12]
   1befc:	sub	r6, r7, r6
   1bf00:	sub	r6, r8, r6
   1bf04:	cmp	r2, #0
   1bf08:	add	r6, r3, r6
   1bf0c:	mvneq	r2, #0
   1bf10:	str	r6, [r4, #28]
   1bf14:	str	r2, [r4, #20]
   1bf18:	b	1bcb0 <argp_error@@Base+0xdc0>
   1bf1c:	mov	r2, #32
   1bf20:	strb	r2, [r3], #1
   1bf24:	b	1bec8 <argp_error@@Base+0xfd8>
   1bf28:	ldr	r1, [r4]
   1bf2c:	mov	r0, #32
   1bf30:	bl	11720 <putc_unlocked@plt>
   1bf34:	add	r5, r5, #1
   1bf38:	b	1beb0 <argp_error@@Base+0xfc0>
   1bf3c:	push	{r4, lr}
   1bf40:	mov	r4, r0
   1bf44:	bl	1bb2c <argp_error@@Base+0xc3c>
   1bf48:	ldr	r2, [r4, #28]
   1bf4c:	ldr	r0, [r4, #24]
   1bf50:	cmp	r2, r0
   1bf54:	bls	1bf68 <argp_error@@Base+0x1078>
   1bf58:	ldr	r3, [r4]
   1bf5c:	sub	r2, r2, r0
   1bf60:	mov	r1, #1
   1bf64:	bl	11450 <fwrite_unlocked@plt>
   1bf68:	ldr	r0, [r4, #24]
   1bf6c:	bl	171e4 <argp_parse@@Base+0xa9c>
   1bf70:	mov	r0, r4
   1bf74:	pop	{r4, lr}
   1bf78:	b	171e4 <argp_parse@@Base+0xa9c>
   1bf7c:	ldr	r3, [r0, #32]
   1bf80:	ldr	r2, [r0, #28]
   1bf84:	sub	r3, r3, r2
   1bf88:	cmp	r3, r1
   1bf8c:	bcc	1bf98 <argp_error@@Base+0x10a8>
   1bf90:	mov	r0, #1
   1bf94:	bx	lr
   1bf98:	push	{r4, r5, r6, lr}
   1bf9c:	mov	r4, r0
   1bfa0:	mov	r5, r1
   1bfa4:	bl	1bb2c <argp_error@@Base+0xc3c>
   1bfa8:	ldr	r0, [r4, #24]
   1bfac:	ldr	r2, [r4, #28]
   1bfb0:	ldr	r3, [r4]
   1bfb4:	sub	r2, r2, r0
   1bfb8:	mov	r1, #1
   1bfbc:	bl	11450 <fwrite_unlocked@plt>
   1bfc0:	ldr	r2, [r4, #28]
   1bfc4:	mov	r1, r0
   1bfc8:	ldr	r0, [r4, #24]
   1bfcc:	sub	r3, r2, r0
   1bfd0:	cmp	r1, r3
   1bfd4:	bne	1bffc <argp_error@@Base+0x110c>
   1bfd8:	ldr	r1, [r4, #32]
   1bfdc:	mov	r3, #0
   1bfe0:	sub	r1, r1, r0
   1bfe4:	cmp	r5, r1
   1bfe8:	str	r0, [r4, #28]
   1bfec:	str	r3, [r4, #16]
   1bff0:	bhi	1c024 <argp_error@@Base+0x1134>
   1bff4:	mov	r0, #1
   1bff8:	pop	{r4, r5, r6, pc}
   1bffc:	ldr	r3, [r4, #16]
   1c000:	sub	r2, r2, r1
   1c004:	sub	r3, r3, r1
   1c008:	str	r2, [r4, #28]
   1c00c:	str	r3, [r4, #16]
   1c010:	sub	r2, r2, r0
   1c014:	add	r1, r0, r1
   1c018:	bl	113fc <memmove@plt>
   1c01c:	mov	r0, #0
   1c020:	pop	{r4, r5, r6, pc}
   1c024:	adds	r5, r5, r1
   1c028:	bcc	1c03c <argp_error@@Base+0x114c>
   1c02c:	bl	11594 <__errno_location@plt>
   1c030:	mov	r3, #12
   1c034:	str	r3, [r0]
   1c038:	b	1c01c <argp_error@@Base+0x112c>
   1c03c:	mov	r1, r5
   1c040:	bl	182d4 <_obstack_memory_used@@Base+0xcd4>
   1c044:	cmp	r0, #0
   1c048:	beq	1c02c <argp_error@@Base+0x113c>
   1c04c:	add	r5, r0, r5
   1c050:	str	r0, [r4, #24]
   1c054:	str	r5, [r4, #32]
   1c058:	str	r0, [r4, #28]
   1c05c:	b	1bff4 <argp_error@@Base+0x1104>
   1c060:	push	{r1, r2, r3}
   1c064:	push	{r0, r1, r2, r4, r5, r6, lr}
   1c068:	mov	r4, r0
   1c06c:	mov	r1, #150	; 0x96
   1c070:	add	r6, sp, #32
   1c074:	mov	r0, r4
   1c078:	bl	1bf7c <argp_error@@Base+0x108c>
   1c07c:	cmp	r0, #0
   1c080:	bne	1c098 <argp_error@@Base+0x11a8>
   1c084:	mvn	r0, #0
   1c088:	add	sp, sp, #12
   1c08c:	pop	{r4, r5, r6, lr}
   1c090:	add	sp, sp, #12
   1c094:	bx	lr
   1c098:	ldr	r0, [r4, #28]
   1c09c:	ldr	r5, [r4, #32]
   1c0a0:	mov	r3, r6
   1c0a4:	sub	r5, r5, r0
   1c0a8:	ldr	r2, [sp, #28]
   1c0ac:	mov	r1, r5
   1c0b0:	str	r6, [sp, #4]
   1c0b4:	bl	1166c <vsnprintf@plt>
   1c0b8:	cmp	r5, r0
   1c0bc:	addls	r1, r0, #1
   1c0c0:	bls	1c074 <argp_error@@Base+0x1184>
   1c0c4:	ldr	r3, [r4, #28]
   1c0c8:	add	r3, r3, r0
   1c0cc:	str	r3, [r4, #28]
   1c0d0:	b	1c088 <argp_error@@Base+0x1198>
   1c0d4:	subs	r2, r1, #1
   1c0d8:	bxeq	lr
   1c0dc:	bcc	1c2b4 <argp_error@@Base+0x13c4>
   1c0e0:	cmp	r0, r1
   1c0e4:	bls	1c298 <argp_error@@Base+0x13a8>
   1c0e8:	tst	r1, r2
   1c0ec:	beq	1c2a4 <argp_error@@Base+0x13b4>
   1c0f0:	clz	r3, r0
   1c0f4:	clz	r2, r1
   1c0f8:	sub	r3, r2, r3
   1c0fc:	rsbs	r3, r3, #31
   1c100:	addne	r3, r3, r3, lsl #1
   1c104:	mov	r2, #0
   1c108:	addne	pc, pc, r3, lsl #2
   1c10c:	nop			; (mov r0, r0)
   1c110:	cmp	r0, r1, lsl #31
   1c114:	adc	r2, r2, r2
   1c118:	subcs	r0, r0, r1, lsl #31
   1c11c:	cmp	r0, r1, lsl #30
   1c120:	adc	r2, r2, r2
   1c124:	subcs	r0, r0, r1, lsl #30
   1c128:	cmp	r0, r1, lsl #29
   1c12c:	adc	r2, r2, r2
   1c130:	subcs	r0, r0, r1, lsl #29
   1c134:	cmp	r0, r1, lsl #28
   1c138:	adc	r2, r2, r2
   1c13c:	subcs	r0, r0, r1, lsl #28
   1c140:	cmp	r0, r1, lsl #27
   1c144:	adc	r2, r2, r2
   1c148:	subcs	r0, r0, r1, lsl #27
   1c14c:	cmp	r0, r1, lsl #26
   1c150:	adc	r2, r2, r2
   1c154:	subcs	r0, r0, r1, lsl #26
   1c158:	cmp	r0, r1, lsl #25
   1c15c:	adc	r2, r2, r2
   1c160:	subcs	r0, r0, r1, lsl #25
   1c164:	cmp	r0, r1, lsl #24
   1c168:	adc	r2, r2, r2
   1c16c:	subcs	r0, r0, r1, lsl #24
   1c170:	cmp	r0, r1, lsl #23
   1c174:	adc	r2, r2, r2
   1c178:	subcs	r0, r0, r1, lsl #23
   1c17c:	cmp	r0, r1, lsl #22
   1c180:	adc	r2, r2, r2
   1c184:	subcs	r0, r0, r1, lsl #22
   1c188:	cmp	r0, r1, lsl #21
   1c18c:	adc	r2, r2, r2
   1c190:	subcs	r0, r0, r1, lsl #21
   1c194:	cmp	r0, r1, lsl #20
   1c198:	adc	r2, r2, r2
   1c19c:	subcs	r0, r0, r1, lsl #20
   1c1a0:	cmp	r0, r1, lsl #19
   1c1a4:	adc	r2, r2, r2
   1c1a8:	subcs	r0, r0, r1, lsl #19
   1c1ac:	cmp	r0, r1, lsl #18
   1c1b0:	adc	r2, r2, r2
   1c1b4:	subcs	r0, r0, r1, lsl #18
   1c1b8:	cmp	r0, r1, lsl #17
   1c1bc:	adc	r2, r2, r2
   1c1c0:	subcs	r0, r0, r1, lsl #17
   1c1c4:	cmp	r0, r1, lsl #16
   1c1c8:	adc	r2, r2, r2
   1c1cc:	subcs	r0, r0, r1, lsl #16
   1c1d0:	cmp	r0, r1, lsl #15
   1c1d4:	adc	r2, r2, r2
   1c1d8:	subcs	r0, r0, r1, lsl #15
   1c1dc:	cmp	r0, r1, lsl #14
   1c1e0:	adc	r2, r2, r2
   1c1e4:	subcs	r0, r0, r1, lsl #14
   1c1e8:	cmp	r0, r1, lsl #13
   1c1ec:	adc	r2, r2, r2
   1c1f0:	subcs	r0, r0, r1, lsl #13
   1c1f4:	cmp	r0, r1, lsl #12
   1c1f8:	adc	r2, r2, r2
   1c1fc:	subcs	r0, r0, r1, lsl #12
   1c200:	cmp	r0, r1, lsl #11
   1c204:	adc	r2, r2, r2
   1c208:	subcs	r0, r0, r1, lsl #11
   1c20c:	cmp	r0, r1, lsl #10
   1c210:	adc	r2, r2, r2
   1c214:	subcs	r0, r0, r1, lsl #10
   1c218:	cmp	r0, r1, lsl #9
   1c21c:	adc	r2, r2, r2
   1c220:	subcs	r0, r0, r1, lsl #9
   1c224:	cmp	r0, r1, lsl #8
   1c228:	adc	r2, r2, r2
   1c22c:	subcs	r0, r0, r1, lsl #8
   1c230:	cmp	r0, r1, lsl #7
   1c234:	adc	r2, r2, r2
   1c238:	subcs	r0, r0, r1, lsl #7
   1c23c:	cmp	r0, r1, lsl #6
   1c240:	adc	r2, r2, r2
   1c244:	subcs	r0, r0, r1, lsl #6
   1c248:	cmp	r0, r1, lsl #5
   1c24c:	adc	r2, r2, r2
   1c250:	subcs	r0, r0, r1, lsl #5
   1c254:	cmp	r0, r1, lsl #4
   1c258:	adc	r2, r2, r2
   1c25c:	subcs	r0, r0, r1, lsl #4
   1c260:	cmp	r0, r1, lsl #3
   1c264:	adc	r2, r2, r2
   1c268:	subcs	r0, r0, r1, lsl #3
   1c26c:	cmp	r0, r1, lsl #2
   1c270:	adc	r2, r2, r2
   1c274:	subcs	r0, r0, r1, lsl #2
   1c278:	cmp	r0, r1, lsl #1
   1c27c:	adc	r2, r2, r2
   1c280:	subcs	r0, r0, r1, lsl #1
   1c284:	cmp	r0, r1
   1c288:	adc	r2, r2, r2
   1c28c:	subcs	r0, r0, r1
   1c290:	mov	r0, r2
   1c294:	bx	lr
   1c298:	moveq	r0, #1
   1c29c:	movne	r0, #0
   1c2a0:	bx	lr
   1c2a4:	clz	r2, r1
   1c2a8:	rsb	r2, r2, #31
   1c2ac:	lsr	r0, r0, r2
   1c2b0:	bx	lr
   1c2b4:	cmp	r0, #0
   1c2b8:	mvnne	r0, #0
   1c2bc:	b	1c520 <argp_error@@Base+0x1630>
   1c2c0:	cmp	r1, #0
   1c2c4:	beq	1c2b4 <argp_error@@Base+0x13c4>
   1c2c8:	push	{r0, r1, lr}
   1c2cc:	bl	1c0d4 <argp_error@@Base+0x11e4>
   1c2d0:	pop	{r1, r2, lr}
   1c2d4:	mul	r3, r2, r0
   1c2d8:	sub	r1, r1, r3
   1c2dc:	bx	lr
   1c2e0:	cmp	r1, #0
   1c2e4:	beq	1c4f0 <argp_error@@Base+0x1600>
   1c2e8:	eor	ip, r0, r1
   1c2ec:	rsbmi	r1, r1, #0
   1c2f0:	subs	r2, r1, #1
   1c2f4:	beq	1c4bc <argp_error@@Base+0x15cc>
   1c2f8:	movs	r3, r0
   1c2fc:	rsbmi	r3, r0, #0
   1c300:	cmp	r3, r1
   1c304:	bls	1c4c8 <argp_error@@Base+0x15d8>
   1c308:	tst	r1, r2
   1c30c:	beq	1c4d8 <argp_error@@Base+0x15e8>
   1c310:	clz	r2, r3
   1c314:	clz	r0, r1
   1c318:	sub	r2, r0, r2
   1c31c:	rsbs	r2, r2, #31
   1c320:	addne	r2, r2, r2, lsl #1
   1c324:	mov	r0, #0
   1c328:	addne	pc, pc, r2, lsl #2
   1c32c:	nop			; (mov r0, r0)
   1c330:	cmp	r3, r1, lsl #31
   1c334:	adc	r0, r0, r0
   1c338:	subcs	r3, r3, r1, lsl #31
   1c33c:	cmp	r3, r1, lsl #30
   1c340:	adc	r0, r0, r0
   1c344:	subcs	r3, r3, r1, lsl #30
   1c348:	cmp	r3, r1, lsl #29
   1c34c:	adc	r0, r0, r0
   1c350:	subcs	r3, r3, r1, lsl #29
   1c354:	cmp	r3, r1, lsl #28
   1c358:	adc	r0, r0, r0
   1c35c:	subcs	r3, r3, r1, lsl #28
   1c360:	cmp	r3, r1, lsl #27
   1c364:	adc	r0, r0, r0
   1c368:	subcs	r3, r3, r1, lsl #27
   1c36c:	cmp	r3, r1, lsl #26
   1c370:	adc	r0, r0, r0
   1c374:	subcs	r3, r3, r1, lsl #26
   1c378:	cmp	r3, r1, lsl #25
   1c37c:	adc	r0, r0, r0
   1c380:	subcs	r3, r3, r1, lsl #25
   1c384:	cmp	r3, r1, lsl #24
   1c388:	adc	r0, r0, r0
   1c38c:	subcs	r3, r3, r1, lsl #24
   1c390:	cmp	r3, r1, lsl #23
   1c394:	adc	r0, r0, r0
   1c398:	subcs	r3, r3, r1, lsl #23
   1c39c:	cmp	r3, r1, lsl #22
   1c3a0:	adc	r0, r0, r0
   1c3a4:	subcs	r3, r3, r1, lsl #22
   1c3a8:	cmp	r3, r1, lsl #21
   1c3ac:	adc	r0, r0, r0
   1c3b0:	subcs	r3, r3, r1, lsl #21
   1c3b4:	cmp	r3, r1, lsl #20
   1c3b8:	adc	r0, r0, r0
   1c3bc:	subcs	r3, r3, r1, lsl #20
   1c3c0:	cmp	r3, r1, lsl #19
   1c3c4:	adc	r0, r0, r0
   1c3c8:	subcs	r3, r3, r1, lsl #19
   1c3cc:	cmp	r3, r1, lsl #18
   1c3d0:	adc	r0, r0, r0
   1c3d4:	subcs	r3, r3, r1, lsl #18
   1c3d8:	cmp	r3, r1, lsl #17
   1c3dc:	adc	r0, r0, r0
   1c3e0:	subcs	r3, r3, r1, lsl #17
   1c3e4:	cmp	r3, r1, lsl #16
   1c3e8:	adc	r0, r0, r0
   1c3ec:	subcs	r3, r3, r1, lsl #16
   1c3f0:	cmp	r3, r1, lsl #15
   1c3f4:	adc	r0, r0, r0
   1c3f8:	subcs	r3, r3, r1, lsl #15
   1c3fc:	cmp	r3, r1, lsl #14
   1c400:	adc	r0, r0, r0
   1c404:	subcs	r3, r3, r1, lsl #14
   1c408:	cmp	r3, r1, lsl #13
   1c40c:	adc	r0, r0, r0
   1c410:	subcs	r3, r3, r1, lsl #13
   1c414:	cmp	r3, r1, lsl #12
   1c418:	adc	r0, r0, r0
   1c41c:	subcs	r3, r3, r1, lsl #12
   1c420:	cmp	r3, r1, lsl #11
   1c424:	adc	r0, r0, r0
   1c428:	subcs	r3, r3, r1, lsl #11
   1c42c:	cmp	r3, r1, lsl #10
   1c430:	adc	r0, r0, r0
   1c434:	subcs	r3, r3, r1, lsl #10
   1c438:	cmp	r3, r1, lsl #9
   1c43c:	adc	r0, r0, r0
   1c440:	subcs	r3, r3, r1, lsl #9
   1c444:	cmp	r3, r1, lsl #8
   1c448:	adc	r0, r0, r0
   1c44c:	subcs	r3, r3, r1, lsl #8
   1c450:	cmp	r3, r1, lsl #7
   1c454:	adc	r0, r0, r0
   1c458:	subcs	r3, r3, r1, lsl #7
   1c45c:	cmp	r3, r1, lsl #6
   1c460:	adc	r0, r0, r0
   1c464:	subcs	r3, r3, r1, lsl #6
   1c468:	cmp	r3, r1, lsl #5
   1c46c:	adc	r0, r0, r0
   1c470:	subcs	r3, r3, r1, lsl #5
   1c474:	cmp	r3, r1, lsl #4
   1c478:	adc	r0, r0, r0
   1c47c:	subcs	r3, r3, r1, lsl #4
   1c480:	cmp	r3, r1, lsl #3
   1c484:	adc	r0, r0, r0
   1c488:	subcs	r3, r3, r1, lsl #3
   1c48c:	cmp	r3, r1, lsl #2
   1c490:	adc	r0, r0, r0
   1c494:	subcs	r3, r3, r1, lsl #2
   1c498:	cmp	r3, r1, lsl #1
   1c49c:	adc	r0, r0, r0
   1c4a0:	subcs	r3, r3, r1, lsl #1
   1c4a4:	cmp	r3, r1
   1c4a8:	adc	r0, r0, r0
   1c4ac:	subcs	r3, r3, r1
   1c4b0:	cmp	ip, #0
   1c4b4:	rsbmi	r0, r0, #0
   1c4b8:	bx	lr
   1c4bc:	teq	ip, r0
   1c4c0:	rsbmi	r0, r0, #0
   1c4c4:	bx	lr
   1c4c8:	movcc	r0, #0
   1c4cc:	asreq	r0, ip, #31
   1c4d0:	orreq	r0, r0, #1
   1c4d4:	bx	lr
   1c4d8:	clz	r2, r1
   1c4dc:	rsb	r2, r2, #31
   1c4e0:	cmp	ip, #0
   1c4e4:	lsr	r0, r3, r2
   1c4e8:	rsbmi	r0, r0, #0
   1c4ec:	bx	lr
   1c4f0:	cmp	r0, #0
   1c4f4:	mvngt	r0, #-2147483648	; 0x80000000
   1c4f8:	movlt	r0, #-2147483648	; 0x80000000
   1c4fc:	b	1c520 <argp_error@@Base+0x1630>
   1c500:	cmp	r1, #0
   1c504:	beq	1c4f0 <argp_error@@Base+0x1600>
   1c508:	push	{r0, r1, lr}
   1c50c:	bl	1c2e8 <argp_error@@Base+0x13f8>
   1c510:	pop	{r1, r2, lr}
   1c514:	mul	r3, r2, r0
   1c518:	sub	r1, r1, r3
   1c51c:	bx	lr
   1c520:	push	{r1, lr}
   1c524:	mov	r0, #8
   1c528:	bl	113c0 <raise@plt>
   1c52c:	pop	{r1, pc}
   1c530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c534:	mov	r7, r0
   1c538:	ldr	r6, [pc, #72]	; 1c588 <argp_error@@Base+0x1698>
   1c53c:	ldr	r5, [pc, #72]	; 1c58c <argp_error@@Base+0x169c>
   1c540:	add	r6, pc, r6
   1c544:	add	r5, pc, r5
   1c548:	sub	r6, r6, r5
   1c54c:	mov	r8, r1
   1c550:	mov	r9, r2
   1c554:	bl	11370 <calloc@plt-0x20>
   1c558:	asrs	r6, r6, #2
   1c55c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c560:	mov	r4, #0
   1c564:	add	r4, r4, #1
   1c568:	ldr	r3, [r5], #4
   1c56c:	mov	r2, r9
   1c570:	mov	r1, r8
   1c574:	mov	r0, r7
   1c578:	blx	r3
   1c57c:	cmp	r6, r4
   1c580:	bne	1c564 <argp_error@@Base+0x1674>
   1c584:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c588:	andeq	r3, r1, r8, asr #19
   1c58c:	andeq	r3, r1, r0, asr #19
   1c590:	bx	lr
   1c594:	mov	r2, r1
   1c598:	mov	r1, r0
   1c59c:	mov	r0, #3
   1c5a0:	b	114a4 <__fxstat64@plt>

Disassembly of section .fini:

0001c5a4 <.fini>:
   1c5a4:	push	{r3, lr}
   1c5a8:	pop	{r3, pc}
