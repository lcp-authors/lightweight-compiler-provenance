
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r4, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <Mat_VarGetCells@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCell@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarCreate@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <free@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <Mat_Warning@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_VarReadDataLinear@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_Message@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_VarReadData@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadDataAll@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadInfo@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <fwrite@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <Mat_VarGetStructFieldnames@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <getenv@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <puts@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <malloc@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <log10@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <__libc_start_main@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__gmon_start__@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <exit@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <Mat_VarFree@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_SizeOf@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <strlen@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strchr@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <warnx@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <fprintf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <Mat_GetLibraryVersion@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_VarPrint@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <memset@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <putchar@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <Mat_Close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Critical@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_LogInitFunc@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_VerbMessage@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VarGetCellsLinear@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #24]!

00011098 <sprintf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <Mat_Help@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <atoi@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x1c54>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fc0 <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:	andeq	r3, r1, r4, lsl #21
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	andeq	r3, r1, r4, lsr #20
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fcc <__gmon_start__@plt>
   11168:	andeq	r3, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r0, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	andeq	r5, r2, ip, asr #3
   11194:	andeq	r5, r2, ip, asr #3
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r5, r2, ip, asr #3
   111cc:	andeq	r5, r2, ip, asr #3
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r5, [r2], -r4
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #60	; 0x3c
   1120c:	mov	r6, r0
   11210:	sub	r0, fp, #40	; 0x28
   11214:	mov	r4, r1
   11218:	add	r1, r0, #4
   1121c:	add	r2, r0, #8
   11220:	bl	1102c <Mat_GetLibraryVersion@plt>
   11224:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11228:	cmp	r0, #1
   1122c:	ldreq	r0, [fp, #-36]	; 0xffffffdc
   11230:	cmpeq	r0, #5
   11234:	beq	11260 <Mat_VarReadNextInfo@plt+0x15c>
   11238:	movw	r0, #20944	; 0x51d0
   1123c:	mov	r1, #55	; 0x37
   11240:	mov	r2, #1
   11244:	mov	r4, #1
   11248:	movt	r0, #2
   1124c:	ldr	r3, [r0]
   11250:	movw	r0, #15004	; 0x3a9c
   11254:	movt	r0, #1
   11258:	bl	10f78 <fwrite@plt>
   1125c:	b	11d54 <Mat_VarReadNextInfo@plt+0xc50>
   11260:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11264:	cmp	r0, #15
   11268:	bne	11238 <Mat_VarReadNextInfo@plt+0x134>
   1126c:	movw	r0, #14996	; 0x3a94
   11270:	movw	r1, #7576	; 0x1d98
   11274:	str	r4, [sp, #36]	; 0x24
   11278:	movt	r0, #1
   1127c:	movt	r1, #1
   11280:	bl	11074 <Mat_LogInitFunc@plt>
   11284:	movw	r1, #20952	; 0x51d8
   11288:	movw	r0, #7656	; 0x1de8
   1128c:	movw	r9, #15532	; 0x3cac
   11290:	movw	sl, #20728	; 0x50f8
   11294:	movw	r8, #15060	; 0x3ad4
   11298:	movw	r4, #15264	; 0x3ba0
   1129c:	mov	r7, #0
   112a0:	mov	r5, #1
   112a4:	movt	r1, #2
   112a8:	movt	r0, #1
   112ac:	movt	r9, #1
   112b0:	movt	sl, #2
   112b4:	movt	r8, #1
   112b8:	movt	r4, #1
   112bc:	str	r0, [r1]
   112c0:	b	1138c <Mat_VarReadNextInfo@plt+0x288>
   112c4:	cmp	r1, #72	; 0x48
   112c8:	bne	11360 <Mat_VarReadNextInfo@plt+0x25c>
   112cc:	b	11d60 <Mat_VarReadNextInfo@plt+0xc5c>
   112d0:	cmp	r1, #100	; 0x64
   112d4:	bne	11358 <Mat_VarReadNextInfo@plt+0x254>
   112d8:	movw	r0, #20956	; 0x51dc
   112dc:	mov	r1, r8
   112e0:	movt	r0, #2
   112e4:	strb	r5, [r0]
   112e8:	mov	r0, #1
   112ec:	bl	11080 <Mat_VerbMessage@plt>
   112f0:	b	1138c <Mat_VarReadNextInfo@plt+0x288>
   112f4:	movw	r0, #20976	; 0x51f0
   112f8:	mov	r7, r8
   112fc:	movt	r0, #2
   11300:	ldr	r8, [r0]
   11304:	cmp	r8, #0
   11308:	beq	11348 <Mat_VarReadNextInfo@plt+0x244>
   1130c:	movw	r1, #15075	; 0x3ae3
   11310:	mov	r0, r8
   11314:	movt	r1, #1
   11318:	bl	10edc <strcmp@plt>
   1131c:	cmp	r0, #0
   11320:	beq	1136c <Mat_VarReadNextInfo@plt+0x268>
   11324:	movw	r0, #15080	; 0x3ae8
   11328:	mov	r1, r8
   1132c:	movt	r0, #1
   11330:	bl	10f30 <Mat_Warning@plt>
   11334:	b	11380 <Mat_VarReadNextInfo@plt+0x27c>
   11338:	movw	r0, #20960	; 0x51e0
   1133c:	movt	r0, #2
   11340:	strb	r5, [r0]
   11344:	b	1138c <Mat_VarReadNextInfo@plt+0x288>
   11348:	movw	r0, #15133	; 0x3b1d
   1134c:	movt	r0, #1
   11350:	bl	10f30 <Mat_Warning@plt>
   11354:	b	11380 <Mat_VarReadNextInfo@plt+0x27c>
   11358:	cmp	r1, #86	; 0x56
   1135c:	beq	11d74 <Mat_VarReadNextInfo@plt+0xc70>
   11360:	mov	r0, r4
   11364:	bl	10ef4 <printf@plt>
   11368:	b	1138c <Mat_VarReadNextInfo@plt+0x288>
   1136c:	movw	r0, #20952	; 0x51d8
   11370:	movw	r1, #9384	; 0x24a8
   11374:	movt	r0, #2
   11378:	movt	r1, #1
   1137c:	str	r1, [r0]
   11380:	mov	r8, r7
   11384:	mov	r5, #1
   11388:	mov	r7, #0
   1138c:	ldr	r1, [sp, #36]	; 0x24
   11390:	mov	r0, r6
   11394:	mov	r2, r9
   11398:	mov	r3, sl
   1139c:	str	r7, [sp]
   113a0:	bl	134e0 <getopt_long@@Base>
   113a4:	mov	r1, r0
   113a8:	cmp	r0, #101	; 0x65
   113ac:	ble	113d8 <Mat_VarReadNextInfo@plt+0x2d4>
   113b0:	cmp	r1, #102	; 0x66
   113b4:	beq	112f4 <Mat_VarReadNextInfo@plt+0x1f0>
   113b8:	cmp	r1, #104	; 0x68
   113bc:	beq	11338 <Mat_VarReadNextInfo@plt+0x234>
   113c0:	cmp	r1, #118	; 0x76
   113c4:	bne	11360 <Mat_VarReadNextInfo@plt+0x25c>
   113c8:	mov	r0, #1
   113cc:	mov	r1, #0
   113d0:	bl	10eb8 <Mat_SetVerbose@plt>
   113d4:	b	1138c <Mat_VarReadNextInfo@plt+0x288>
   113d8:	cmp	r1, #85	; 0x55
   113dc:	bgt	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   113e0:	cmn	r1, #1
   113e4:	bne	112c4 <Mat_VarReadNextInfo@plt+0x1c0>
   113e8:	movw	r4, #20916	; 0x51b4
   113ec:	movt	r4, #2
   113f0:	ldr	r0, [r4]
   113f4:	cmp	r0, r6
   113f8:	bge	11438 <Mat_VarReadNextInfo@plt+0x334>
   113fc:	ldr	r8, [sp, #36]	; 0x24
   11400:	mov	r1, #0
   11404:	ldr	r0, [r8, r0, lsl #2]
   11408:	bl	10ee8 <Mat_Open@plt>
   1140c:	mov	r9, r0
   11410:	ldr	r0, [r4]
   11414:	cmp	r9, #0
   11418:	beq	11448 <Mat_VarReadNextInfo@plt+0x344>
   1141c:	add	r7, r0, #1
   11420:	cmp	r7, r6
   11424:	str	r7, [r4]
   11428:	bge	11460 <Mat_VarReadNextInfo@plt+0x35c>
   1142c:	str	r6, [sp, #16]
   11430:	str	r9, [sp, #12]
   11434:	b	1154c <Mat_VarReadNextInfo@plt+0x448>
   11438:	movw	r0, #15287	; 0x3bb7
   1143c:	movt	r0, #1
   11440:	bl	11068 <Mat_Critical@plt>
   11444:	b	11458 <Mat_VarReadNextInfo@plt+0x354>
   11448:	ldr	r1, [r8, r0, lsl #2]
   1144c:	movw	r0, #15322	; 0x3bda
   11450:	movt	r0, #1
   11454:	bl	11068 <Mat_Critical@plt>
   11458:	mov	r4, #1
   1145c:	b	11d54 <Mat_VarReadNextInfo@plt+0xc50>
   11460:	movw	r0, #20956	; 0x51dc
   11464:	movt	r0, #2
   11468:	ldrb	r0, [r0]
   1146c:	cmp	r0, #0
   11470:	beq	114bc <Mat_VarReadNextInfo@plt+0x3b8>
   11474:	mov	r0, r9
   11478:	bl	10ed0 <Mat_VarReadNext@plt>
   1147c:	cmp	r0, #0
   11480:	beq	11d44 <Mat_VarReadNextInfo@plt+0xc40>
   11484:	mov	r4, r0
   11488:	movw	r0, #20952	; 0x51d8
   1148c:	movt	r0, #2
   11490:	ldr	r1, [r0]
   11494:	mov	r0, r4
   11498:	blx	r1
   1149c:	mov	r0, r4
   114a0:	bl	10fe4 <Mat_VarFree@plt>
   114a4:	mov	r0, r9
   114a8:	bl	10ed0 <Mat_VarReadNext@plt>
   114ac:	mov	r4, r0
   114b0:	cmp	r0, #0
   114b4:	bne	11488 <Mat_VarReadNextInfo@plt+0x384>
   114b8:	b	11d44 <Mat_VarReadNextInfo@plt+0xc40>
   114bc:	mov	r0, r9
   114c0:	bl	11104 <Mat_VarReadNextInfo@plt>
   114c4:	cmp	r0, #0
   114c8:	beq	11d44 <Mat_VarReadNextInfo@plt+0xc40>
   114cc:	mov	r4, r0
   114d0:	movw	r0, #20952	; 0x51d8
   114d4:	movt	r0, #2
   114d8:	ldr	r1, [r0]
   114dc:	mov	r0, r4
   114e0:	blx	r1
   114e4:	mov	r0, r4
   114e8:	bl	10fe4 <Mat_VarFree@plt>
   114ec:	mov	r0, r9
   114f0:	bl	11104 <Mat_VarReadNextInfo@plt>
   114f4:	mov	r4, r0
   114f8:	cmp	r0, #0
   114fc:	bne	114d0 <Mat_VarReadNextInfo@plt+0x3cc>
   11500:	b	11d44 <Mat_VarReadNextInfo@plt+0xc40>
   11504:	mov	r1, #0
   11508:	strb	r1, [r0]
   1150c:	movw	r0, #20944	; 0x51d0
   11510:	mov	r1, #56	; 0x38
   11514:	movt	r0, #2
   11518:	ldr	r3, [r0]
   1151c:	movw	r0, #16536	; 0x4098
   11520:	movt	r0, #1
   11524:	b	11bc0 <Mat_VarReadNextInfo@plt+0xabc>
   11528:	movw	r0, #20944	; 0x51d0
   1152c:	mov	r1, #37	; 0x25
   11530:	mov	r2, #1
   11534:	movt	r0, #2
   11538:	ldr	r3, [r0]
   1153c:	movw	r0, #16593	; 0x40d1
   11540:	movt	r0, #1
   11544:	bl	10f78 <fwrite@plt>
   11548:	b	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   1154c:	ldr	r5, [r8, r7, lsl #2]
   11550:	mov	r0, r5
   11554:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   11558:	cmp	r0, r5
   1155c:	mov	r4, r0
   11560:	mov	r6, #0
   11564:	str	r7, [sp, #32]
   11568:	movne	r0, #0
   1156c:	ldrbne	r6, [r4]
   11570:	strbne	r0, [r4]
   11574:	mov	r0, r9
   11578:	ldrne	r5, [r8, r7, lsl #2]
   1157c:	mov	r1, r5
   11580:	bl	10f6c <Mat_VarReadInfo@plt>
   11584:	cmp	r0, #0
   11588:	beq	115c4 <Mat_VarReadNextInfo@plt+0x4c0>
   1158c:	mov	sl, r0
   11590:	movw	r0, #20956	; 0x51dc
   11594:	movt	r0, #2
   11598:	ldrb	r0, [r0]
   1159c:	cmp	r0, #1
   115a0:	bne	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   115a4:	cmp	r6, #0
   115a8:	mov	r8, #1
   115ac:	beq	115dc <Mat_VarReadNextInfo@plt+0x4d8>
   115b0:	mov	r0, r4
   115b4:	strb	r6, [r4]
   115b8:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   115bc:	ldrb	r1, [r0]
   115c0:	b	11630 <Mat_VarReadNextInfo@plt+0x52c>
   115c4:	ldr	r7, [sp, #32]
   115c8:	movw	r0, #15340	; 0x3bec
   115cc:	movt	r0, #1
   115d0:	ldr	r1, [r8, r7, lsl #2]
   115d4:	bl	10f30 <Mat_Warning@plt>
   115d8:	b	11d34 <Mat_VarReadNextInfo@plt+0xc30>
   115dc:	mov	r0, r9
   115e0:	mov	r1, sl
   115e4:	bl	10f60 <Mat_VarReadDataAll@plt>
   115e8:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   115ec:	movw	r0, #20944	; 0x51d0
   115f0:	mov	r1, #24
   115f4:	movt	r0, #2
   115f8:	ldr	r3, [r0]
   115fc:	movw	r0, #16792	; 0x4198
   11600:	movt	r0, #1
   11604:	b	11620 <Mat_VarReadNextInfo@plt+0x51c>
   11608:	movw	r0, #20944	; 0x51d0
   1160c:	mov	r1, #31
   11610:	movt	r0, #2
   11614:	ldr	r3, [r0]
   11618:	movw	r0, #16760	; 0x4178
   1161c:	movt	r0, #1
   11620:	mov	r2, #1
   11624:	bl	10f78 <fwrite@plt>
   11628:	mov	r5, #0
   1162c:	b	11a00 <Mat_VarReadNextInfo@plt+0x8fc>
   11630:	str	sl, [sp, #44]	; 0x2c
   11634:	mov	sl, r0
   11638:	uxtb	r0, r1
   1163c:	mov	r2, #0
   11640:	cmp	r0, #46	; 0x2e
   11644:	beq	116b4 <Mat_VarReadNextInfo@plt+0x5b0>
   11648:	cmp	r0, #123	; 0x7b
   1164c:	beq	11664 <Mat_VarReadNextInfo@plt+0x560>
   11650:	cmp	r0, #40	; 0x28
   11654:	beq	11a70 <Mat_VarReadNextInfo@plt+0x96c>
   11658:	mov	r0, sl
   1165c:	ldr	sl, [sp, #44]	; 0x2c
   11660:	b	11a64 <Mat_VarReadNextInfo@plt+0x960>
   11664:	ldr	r0, [sp, #44]	; 0x2c
   11668:	ldr	r0, [r0, #16]
   1166c:	cmp	r0, #1
   11670:	bne	11ba8 <Mat_VarReadNextInfo@plt+0xaa4>
   11674:	add	r6, sl, #1
   11678:	mov	r1, #125	; 0x7d
   1167c:	mov	r0, r6
   11680:	bl	11008 <strchr@plt>
   11684:	mov	r5, r0
   11688:	add	r0, r0, #1
   1168c:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   11690:	ldrb	r1, [r0]
   11694:	mov	r4, #1
   11698:	cmp	r1, #0
   1169c:	beq	11728 <Mat_VarReadNextInfo@plt+0x624>
   116a0:	mov	r3, #0
   116a4:	mov	r2, #0
   116a8:	str	r2, [sp, #20]
   116ac:	strb	r3, [r0]
   116b0:	b	11734 <Mat_VarReadNextInfo@plt+0x630>
   116b4:	add	r4, sl, #1
   116b8:	ldr	sl, [sp, #44]	; 0x2c
   116bc:	ldr	r0, [sl, #16]
   116c0:	cmp	r0, #1
   116c4:	beq	116f4 <Mat_VarReadNextInfo@plt+0x5f0>
   116c8:	cmp	r0, #2
   116cc:	bne	11bd0 <Mat_VarReadNextInfo@plt+0xacc>
   116d0:	mov	r0, r4
   116d4:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   116d8:	cmp	r0, r4
   116dc:	beq	1188c <Mat_VarReadNextInfo@plt+0x788>
   116e0:	ldrb	r9, [r0]
   116e4:	mov	r5, #0
   116e8:	mov	r7, r0
   116ec:	strb	r5, [r0]
   116f0:	b	11898 <Mat_VarReadNextInfo@plt+0x794>
   116f4:	ldr	r0, [sl]
   116f8:	ldr	r1, [sl, #12]
   116fc:	ldr	r2, [sl, #40]	; 0x28
   11700:	udiv	r9, r0, r1
   11704:	mov	r0, r4
   11708:	str	r2, [sp, #40]	; 0x28
   1170c:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   11710:	cmp	r0, r4
   11714:	beq	118e4 <Mat_VarReadNextInfo@plt+0x7e0>
   11718:	ldrb	r1, [r0]
   1171c:	mov	r2, #0
   11720:	strb	r2, [r0]
   11724:	b	118ec <Mat_VarReadNextInfo@plt+0x7e8>
   11728:	mov	r2, #1
   1172c:	mov	r1, #123	; 0x7b
   11730:	str	r2, [sp, #20]
   11734:	cmp	r6, r5
   11738:	str	r0, [sp, #24]
   1173c:	str	r1, [sp, #28]
   11740:	beq	1175c <Mat_VarReadNextInfo@plt+0x658>
   11744:	mov	r4, #1
   11748:	ldrb	r0, [r6], #1
   1174c:	cmp	r0, #44	; 0x2c
   11750:	addeq	r4, r4, #1
   11754:	cmp	r5, r6
   11758:	bne	11748 <Mat_VarReadNextInfo@plt+0x644>
   1175c:	lsl	r7, r4, #2
   11760:	mov	r0, r7
   11764:	bl	10fa8 <malloc@plt>
   11768:	mov	r9, r0
   1176c:	mov	r0, r7
   11770:	bl	10fa8 <malloc@plt>
   11774:	str	r0, [sp, #40]	; 0x28
   11778:	mov	r0, r7
   1177c:	bl	10fa8 <malloc@plt>
   11780:	mov	r6, r0
   11784:	cmp	r4, #1
   11788:	blt	117b8 <Mat_VarReadNextInfo@plt+0x6b4>
   1178c:	mov	r0, r9
   11790:	mov	r1, #0
   11794:	mov	r2, r7
   11798:	bl	11044 <memset@plt>
   1179c:	ldr	r0, [sp, #40]	; 0x28
   117a0:	mov	r1, r6
   117a4:	mov	r2, r4
   117a8:	str	r8, [r0], #4
   117ac:	str	r8, [r1], #4
   117b0:	subs	r2, r2, #1
   117b4:	bne	117a8 <Mat_VarReadNextInfo@plt+0x6a4>
   117b8:	mov	r1, r5
   117bc:	ldr	r5, [sp, #40]	; 0x28
   117c0:	mov	r0, sl
   117c4:	mov	r2, r9
   117c8:	str	r6, [sp]
   117cc:	mov	r3, r5
   117d0:	bl	12828 <Mat_VarReadNextInfo@plt+0x1724>
   117d4:	ldr	sl, [sp, #44]	; 0x2c
   117d8:	mov	r0, r4
   117dc:	mov	r1, r9
   117e0:	mov	r2, r5
   117e4:	mov	r3, r6
   117e8:	str	sl, [sp]
   117ec:	bl	12a50 <Mat_VarReadNextInfo@plt+0x194c>
   117f0:	cmp	r0, #0
   117f4:	beq	115ec <Mat_VarReadNextInfo@plt+0x4e8>
   117f8:	mov	r5, r0
   117fc:	cmp	r4, #1
   11800:	bne	11848 <Mat_VarReadNextInfo@plt+0x744>
   11804:	ldr	r0, [sp, #40]	; 0x28
   11808:	ldr	r3, [r6]
   1180c:	ldr	r1, [r9]
   11810:	ldr	r2, [r0]
   11814:	mov	r0, sl
   11818:	bl	1108c <Mat_VarGetCellsLinear@plt>
   1181c:	ldr	r1, [sl, #4]
   11820:	mov	r7, r0
   11824:	ldr	r0, [sl, #32]
   11828:	cmp	r1, #2
   1182c:	bne	11884 <Mat_VarReadNextInfo@plt+0x780>
   11830:	ldr	r1, [r0]
   11834:	cmp	r1, #1
   11838:	bne	1198c <Mat_VarReadNextInfo@plt+0x888>
   1183c:	ldr	r1, [r6]
   11840:	str	r1, [r0, #4]
   11844:	b	119a0 <Mat_VarReadNextInfo@plt+0x89c>
   11848:	ldr	r2, [sp, #40]	; 0x28
   1184c:	mov	r0, sl
   11850:	mov	r1, r9
   11854:	mov	r3, r6
   11858:	bl	10f00 <Mat_VarGetCells@plt>
   1185c:	mov	r7, r0
   11860:	cmp	r4, #1
   11864:	blt	119a0 <Mat_VarReadNextInfo@plt+0x89c>
   11868:	ldr	r0, [sl, #32]
   1186c:	mov	r1, r6
   11870:	ldr	r2, [r1], #4
   11874:	subs	r4, r4, #1
   11878:	str	r2, [r0], #4
   1187c:	bne	11870 <Mat_VarReadNextInfo@plt+0x76c>
   11880:	b	119a0 <Mat_VarReadNextInfo@plt+0x89c>
   11884:	str	r8, [sl, #4]
   11888:	b	11998 <Mat_VarReadNextInfo@plt+0x894>
   1188c:	mov	r7, r0
   11890:	mov	r9, #46	; 0x2e
   11894:	mov	r5, #1
   11898:	mov	r0, sl
   1189c:	mov	r1, r4
   118a0:	mov	r2, #0
   118a4:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   118a8:	ldr	r6, [sp, #12]
   118ac:	cmp	r0, #0
   118b0:	beq	11bf0 <Mat_VarReadNextInfo@plt+0xaec>
   118b4:	mov	r1, #1
   118b8:	bl	110f8 <Mat_VarDuplicate@plt>
   118bc:	mov	r4, r0
   118c0:	mov	r0, sl
   118c4:	bl	10fe4 <Mat_VarFree@plt>
   118c8:	cmp	r5, #0
   118cc:	bne	11cb0 <Mat_VarReadNextInfo@plt+0xbac>
   118d0:	mov	sl, r4
   118d4:	mov	r1, r9
   118d8:	mov	r0, r7
   118dc:	mov	r2, #0
   118e0:	b	11a64 <Mat_VarReadNextInfo@plt+0x960>
   118e4:	mov	r1, #46	; 0x2e
   118e8:	mov	r2, #1
   118ec:	mov	r5, #0
   118f0:	cmp	r9, #1
   118f4:	str	r2, [sp, #20]
   118f8:	str	r0, [sp, #24]
   118fc:	str	r1, [sp, #28]
   11900:	blt	11a50 <Mat_VarReadNextInfo@plt+0x94c>
   11904:	mov	r0, sl
   11908:	mov	r1, r5
   1190c:	bl	10f0c <Mat_VarGetCell@plt>
   11910:	cmp	r0, #0
   11914:	beq	1196c <Mat_VarReadNextInfo@plt+0x868>
   11918:	mov	r6, r0
   1191c:	ldr	r0, [r0, #16]
   11920:	cmp	r0, #2
   11924:	bne	1196c <Mat_VarReadNextInfo@plt+0x868>
   11928:	mov	r0, r6
   1192c:	mov	r1, r4
   11930:	mov	r2, #0
   11934:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11938:	cmp	r0, #0
   1193c:	beq	11a30 <Mat_VarReadNextInfo@plt+0x92c>
   11940:	mov	r1, #1
   11944:	bl	110f8 <Mat_VarDuplicate@plt>
   11948:	mov	r7, r0
   1194c:	mov	r0, r6
   11950:	bl	10fe4 <Mat_VarFree@plt>
   11954:	ldr	r0, [sp, #40]	; 0x28
   11958:	str	r7, [r0, r5, lsl #2]
   1195c:	add	r5, r5, #1
   11960:	cmp	r5, r9
   11964:	blt	11904 <Mat_VarReadNextInfo@plt+0x800>
   11968:	b	11a50 <Mat_VarReadNextInfo@plt+0x94c>
   1196c:	movw	r0, #20944	; 0x51d0
   11970:	movw	r1, #16670	; 0x411e
   11974:	mov	r2, r5
   11978:	movt	r0, #2
   1197c:	movt	r1, #1
   11980:	ldr	r0, [r0]
   11984:	bl	11020 <fprintf@plt>
   11988:	b	11a50 <Mat_VarReadNextInfo@plt+0x94c>
   1198c:	ldr	r1, [r0, #4]
   11990:	cmp	r1, #1
   11994:	strne	r8, [sl, #4]
   11998:	ldr	r1, [r6]
   1199c:	str	r1, [r0]
   119a0:	cmp	r7, #0
   119a4:	beq	11608 <Mat_VarReadNextInfo@plt+0x504>
   119a8:	cmp	r5, #1
   119ac:	mov	r4, r7
   119b0:	blt	119cc <Mat_VarReadNextInfo@plt+0x8c8>
   119b4:	ldr	r0, [r4]
   119b8:	mov	r1, #1
   119bc:	bl	110f8 <Mat_VarDuplicate@plt>
   119c0:	str	r0, [r4], #4
   119c4:	subs	r5, r5, #1
   119c8:	bne	119b4 <Mat_VarReadNextInfo@plt+0x8b0>
   119cc:	ldr	r1, [sl, #32]
   119d0:	ldr	r3, [sl, #4]
   119d4:	ldr	r0, [sl, #36]	; 0x24
   119d8:	mov	r5, #1
   119dc:	mov	r2, #21
   119e0:	stm	sp, {r1, r7}
   119e4:	mov	r1, #1
   119e8:	str	r5, [sp, #8]
   119ec:	bl	10f18 <Mat_VarCreate@plt>
   119f0:	mov	r4, r0
   119f4:	mov	r0, sl
   119f8:	bl	10fe4 <Mat_VarFree@plt>
   119fc:	mov	sl, r4
   11a00:	mov	r0, r9
   11a04:	bl	10f24 <free@plt>
   11a08:	ldr	r0, [sp, #40]	; 0x28
   11a0c:	bl	10f24 <free@plt>
   11a10:	mov	r0, r6
   11a14:	bl	10f24 <free@plt>
   11a18:	ldr	r1, [sp, #28]
   11a1c:	ldr	r0, [sp, #24]
   11a20:	ldr	r2, [sp, #20]
   11a24:	cmp	r5, #0
   11a28:	bne	11a64 <Mat_VarReadNextInfo@plt+0x960>
   11a2c:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11a30:	movw	r0, #20944	; 0x51d0
   11a34:	ldr	r3, [sl, #36]	; 0x24
   11a38:	movw	r1, #16631	; 0x40f7
   11a3c:	mov	r2, r4
   11a40:	movt	r0, #2
   11a44:	movt	r1, #1
   11a48:	ldr	r0, [r0]
   11a4c:	bl	11020 <fprintf@plt>
   11a50:	ldr	r1, [sp, #28]
   11a54:	ldr	r0, [sp, #24]
   11a58:	ldr	r2, [sp, #20]
   11a5c:	cmp	r5, r9
   11a60:	bne	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11a64:	cmp	r2, #0
   11a68:	beq	11630 <Mat_VarReadNextInfo@plt+0x52c>
   11a6c:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11a70:	add	r6, sl, #1
   11a74:	mov	r1, #41	; 0x29
   11a78:	mov	r0, r6
   11a7c:	bl	11008 <strchr@plt>
   11a80:	add	r5, r0, #1
   11a84:	mov	r4, r0
   11a88:	mov	r0, r5
   11a8c:	bl	126d0 <Mat_VarReadNextInfo@plt+0x15cc>
   11a90:	cmp	r0, r5
   11a94:	bne	11504 <Mat_VarReadNextInfo@plt+0x400>
   11a98:	mov	r5, #1
   11a9c:	cmp	r6, r4
   11aa0:	beq	11ab8 <Mat_VarReadNextInfo@plt+0x9b4>
   11aa4:	ldrb	r0, [r6], #1
   11aa8:	cmp	r0, #44	; 0x2c
   11aac:	addeq	r5, r5, #1
   11ab0:	cmp	r4, r6
   11ab4:	bne	11aa4 <Mat_VarReadNextInfo@plt+0x9a0>
   11ab8:	lsl	r6, r5, #2
   11abc:	mov	r0, r6
   11ac0:	bl	10fa8 <malloc@plt>
   11ac4:	mov	r9, r0
   11ac8:	mov	r0, r6
   11acc:	bl	10fa8 <malloc@plt>
   11ad0:	str	r0, [sp, #40]	; 0x28
   11ad4:	mov	r0, r6
   11ad8:	bl	10fa8 <malloc@plt>
   11adc:	mov	r7, r0
   11ae0:	cmp	r5, #1
   11ae4:	blt	11b14 <Mat_VarReadNextInfo@plt+0xa10>
   11ae8:	mov	r0, r9
   11aec:	mov	r1, #0
   11af0:	mov	r2, r6
   11af4:	bl	11044 <memset@plt>
   11af8:	ldr	r0, [sp, #40]	; 0x28
   11afc:	mov	r1, r7
   11b00:	mov	r2, r5
   11b04:	str	r8, [r0], #4
   11b08:	str	r8, [r1], #4
   11b0c:	subs	r2, r2, #1
   11b10:	bne	11b04 <Mat_VarReadNextInfo@plt+0xa00>
   11b14:	ldr	r6, [sp, #40]	; 0x28
   11b18:	mov	r0, sl
   11b1c:	mov	r1, r4
   11b20:	mov	r2, r9
   11b24:	str	r7, [sp]
   11b28:	mov	r3, r6
   11b2c:	bl	12828 <Mat_VarReadNextInfo@plt+0x1724>
   11b30:	ldr	sl, [sp, #44]	; 0x2c
   11b34:	mov	r0, r5
   11b38:	mov	r1, r9
   11b3c:	mov	r2, r6
   11b40:	mov	r3, r7
   11b44:	str	sl, [sp]
   11b48:	bl	12a50 <Mat_VarReadNextInfo@plt+0x194c>
   11b4c:	cmp	r0, #0
   11b50:	beq	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   11b54:	mov	r4, r0
   11b58:	ldr	r0, [sl, #16]
   11b5c:	bl	110c8 <Mat_SizeOfClass@plt>
   11b60:	str	r0, [sl, #12]
   11b64:	mul	r0, r0, r4
   11b68:	str	r0, [sl]
   11b6c:	ldr	r1, [sl, #20]
   11b70:	cmp	r1, #0
   11b74:	beq	11c14 <Mat_VarReadNextInfo@plt+0xb10>
   11b78:	mov	r0, #8
   11b7c:	bl	10fa8 <malloc@plt>
   11b80:	str	r0, [sl, #40]	; 0x28
   11b84:	mov	r4, r0
   11b88:	ldr	r0, [sl]
   11b8c:	bl	10fa8 <malloc@plt>
   11b90:	str	r0, [r4]
   11b94:	ldr	r0, [sl]
   11b98:	bl	10fa8 <malloc@plt>
   11b9c:	str	r0, [r4, #4]
   11ba0:	ldr	r2, [sl, #40]	; 0x28
   11ba4:	b	11c20 <Mat_VarReadNextInfo@plt+0xb1c>
   11ba8:	movw	r0, #20944	; 0x51d0
   11bac:	mov	r1, #34	; 0x22
   11bb0:	movt	r0, #2
   11bb4:	ldr	r3, [r0]
   11bb8:	movw	r0, #16725	; 0x4155
   11bbc:	movt	r0, #1
   11bc0:	mov	r2, #1
   11bc4:	bl	10f78 <fwrite@plt>
   11bc8:	ldr	sl, [sp, #44]	; 0x2c
   11bcc:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11bd0:	movw	r0, #20944	; 0x51d0
   11bd4:	movw	r1, #16703	; 0x413f
   11bd8:	mov	r2, r4
   11bdc:	movt	r0, #2
   11be0:	movt	r1, #1
   11be4:	ldr	r0, [r0]
   11be8:	bl	11020 <fprintf@plt>
   11bec:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11bf0:	movw	r0, #20944	; 0x51d0
   11bf4:	ldr	r3, [sl, #36]	; 0x24
   11bf8:	movw	r1, #16631	; 0x40f7
   11bfc:	mov	r2, r4
   11c00:	movt	r0, #2
   11c04:	movt	r1, #1
   11c08:	ldr	r0, [r0]
   11c0c:	bl	11020 <fprintf@plt>
   11c10:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11c14:	bl	10fa8 <malloc@plt>
   11c18:	mov	r2, r0
   11c1c:	str	r0, [sl, #40]	; 0x28
   11c20:	ldr	r0, [sp, #12]
   11c24:	cmp	r2, #0
   11c28:	beq	11528 <Mat_VarReadNextInfo@plt+0x424>
   11c2c:	cmp	r5, #1
   11c30:	bne	11c7c <Mat_VarReadNextInfo@plt+0xb78>
   11c34:	ldr	r1, [r7]
   11c38:	ldr	r6, [r6]
   11c3c:	ldr	r3, [r9]
   11c40:	str	r1, [sp, #4]
   11c44:	mov	r1, sl
   11c48:	str	r6, [sp]
   11c4c:	bl	10f3c <Mat_VarReadDataLinear@plt>
   11c50:	ldr	r1, [sl, #4]
   11c54:	ldr	r0, [sl, #32]
   11c58:	cmp	r1, #2
   11c5c:	bne	11ce0 <Mat_VarReadNextInfo@plt+0xbdc>
   11c60:	ldr	r1, [r0]
   11c64:	cmp	r1, #1
   11c68:	bne	11cc4 <Mat_VarReadNextInfo@plt+0xbc0>
   11c6c:	ldr	r1, [r7]
   11c70:	ldr	r6, [sp, #40]	; 0x28
   11c74:	str	r1, [r0, #4]
   11c78:	b	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   11c7c:	mov	r1, sl
   11c80:	mov	r3, r9
   11c84:	stm	sp, {r6, r7}
   11c88:	bl	10f54 <Mat_VarReadData@plt>
   11c8c:	cmp	r5, #1
   11c90:	blt	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   11c94:	ldr	r0, [sl, #32]
   11c98:	mov	r1, r7
   11c9c:	ldr	r2, [r1], #4
   11ca0:	subs	r5, r5, #1
   11ca4:	str	r2, [r0], #4
   11ca8:	bne	11c9c <Mat_VarReadNextInfo@plt+0xb98>
   11cac:	b	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   11cb0:	mov	r0, r6
   11cb4:	mov	r1, r4
   11cb8:	bl	10f60 <Mat_VarReadDataAll@plt>
   11cbc:	mov	sl, r4
   11cc0:	b	11d0c <Mat_VarReadNextInfo@plt+0xc08>
   11cc4:	ldr	r1, [r0, #4]
   11cc8:	cmp	r1, #1
   11ccc:	bne	11ce0 <Mat_VarReadNextInfo@plt+0xbdc>
   11cd0:	ldr	r1, [r7]
   11cd4:	ldr	r6, [sp, #40]	; 0x28
   11cd8:	str	r1, [r0]
   11cdc:	b	11cf4 <Mat_VarReadNextInfo@plt+0xbf0>
   11ce0:	mov	r1, #2
   11ce4:	str	r1, [sl, #4]
   11ce8:	ldr	r1, [r7]
   11cec:	stm	r0, {r1, r8}
   11cf0:	ldr	r6, [sp, #40]	; 0x28
   11cf4:	mov	r0, r9
   11cf8:	bl	10f24 <free@plt>
   11cfc:	mov	r0, r6
   11d00:	bl	10f24 <free@plt>
   11d04:	mov	r0, r7
   11d08:	bl	10f24 <free@plt>
   11d0c:	movw	r0, #20952	; 0x51d8
   11d10:	movt	r0, #2
   11d14:	ldr	r1, [r0]
   11d18:	mov	r0, sl
   11d1c:	blx	r1
   11d20:	mov	r0, sl
   11d24:	bl	10fe4 <Mat_VarFree@plt>
   11d28:	ldr	r8, [sp, #36]	; 0x24
   11d2c:	ldr	r9, [sp, #12]
   11d30:	ldr	r7, [sp, #32]
   11d34:	ldr	r0, [sp, #16]
   11d38:	add	r7, r7, #1
   11d3c:	cmp	r7, r0
   11d40:	bne	1154c <Mat_VarReadNextInfo@plt+0x448>
   11d44:	mov	r0, r9
   11d48:	bl	1105c <Mat_Close@plt>
   11d4c:	bl	10ec4 <Mat_LogClose@plt>
   11d50:	mov	r4, #0
   11d54:	mov	r0, r4
   11d58:	sub	sp, fp, #28
   11d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d60:	movw	r0, #20840	; 0x5168
   11d64:	movt	r0, #2
   11d68:	bl	110a4 <Mat_Help@plt>
   11d6c:	mov	r0, #0
   11d70:	bl	10fd8 <exit@plt>
   11d74:	movw	r0, #15171	; 0x3b43
   11d78:	movw	r1, #14996	; 0x3a94
   11d7c:	movw	r2, #15257	; 0x3b99
   11d80:	movt	r0, #1
   11d84:	movt	r1, #1
   11d88:	movt	r2, #1
   11d8c:	bl	10ef4 <printf@plt>
   11d90:	mov	r0, #0
   11d94:	bl	10fd8 <exit@plt>
   11d98:	push	{r4, r5, r6, r7, fp, lr}
   11d9c:	add	fp, sp, #16
   11da0:	movw	r6, #20964	; 0x51e4
   11da4:	mov	r4, r1
   11da8:	movt	r6, #2
   11dac:	ldr	r0, [r6]
   11db0:	cmp	r0, #1
   11db4:	blt	11ddc <Mat_VarReadNextInfo@plt+0xcd8>
   11db8:	movw	r5, #15674	; 0x3d3a
   11dbc:	mov	r7, #0
   11dc0:	movt	r5, #1
   11dc4:	mov	r0, r5
   11dc8:	bl	10ef4 <printf@plt>
   11dcc:	ldr	r0, [r6]
   11dd0:	add	r7, r7, #1
   11dd4:	cmp	r7, r0
   11dd8:	blt	11dc4 <Mat_VarReadNextInfo@plt+0xcc0>
   11ddc:	mov	r0, r4
   11de0:	pop	{r4, r5, r6, r7, fp, lr}
   11de4:	b	10f9c <puts@plt>
   11de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dec:	add	fp, sp, #28
   11df0:	sub	sp, sp, #20
   11df4:	cmp	r0, #0
   11df8:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11dfc:	mov	r4, r0
   11e00:	ldr	r0, [r0, #16]
   11e04:	sub	r1, r0, #6
   11e08:	cmp	r1, #10
   11e0c:	bcs	11ef4 <Mat_VarReadNextInfo@plt+0xdf0>
   11e10:	ldr	r0, [r4, #4]
   11e14:	str	r4, [sp, #16]
   11e18:	cmp	r0, #3
   11e1c:	beq	11ff0 <Mat_VarReadNextInfo@plt+0xeec>
   11e20:	cmp	r0, #2
   11e24:	bne	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11e28:	ldr	r0, [r4, #40]	; 0x28
   11e2c:	cmp	r0, #0
   11e30:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11e34:	ldr	r0, [r4, #8]
   11e38:	bl	10ff0 <Mat_SizeOf@plt>
   11e3c:	mov	r5, r0
   11e40:	ldr	r0, [r4, #20]
   11e44:	cmp	r0, #0
   11e48:	beq	12254 <Mat_VarReadNextInfo@plt+0x1150>
   11e4c:	ldr	r1, [r4, #32]
   11e50:	ldr	r0, [r1]
   11e54:	cmp	r0, #0
   11e58:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11e5c:	ldr	r2, [r4, #40]	; 0x28
   11e60:	ldr	r4, [sp, #16]
   11e64:	mov	r6, #0
   11e68:	ldr	sl, [r2]
   11e6c:	ldr	r7, [r2, #4]
   11e70:	ldr	r1, [r1, #4]
   11e74:	cmp	r1, #0
   11e78:	beq	11ed0 <Mat_VarReadNextInfo@plt+0xdcc>
   11e7c:	mov	r8, #0
   11e80:	b	11e88 <Mat_VarReadNextInfo@plt+0xd84>
   11e84:	ldr	r0, [r0]
   11e88:	mla	r9, r8, r0, r6
   11e8c:	ldr	r0, [r4, #8]
   11e90:	mla	r1, r9, r5, sl
   11e94:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   11e98:	movw	r0, #15476	; 0x3c74
   11e9c:	movt	r0, #1
   11ea0:	bl	10ef4 <printf@plt>
   11ea4:	ldr	r0, [r4, #8]
   11ea8:	mla	r1, r9, r5, r7
   11eac:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   11eb0:	movw	r0, #15480	; 0x3c78
   11eb4:	movt	r0, #1
   11eb8:	bl	10ef4 <printf@plt>
   11ebc:	ldr	r0, [r4, #32]
   11ec0:	add	r8, r8, #1
   11ec4:	ldr	r1, [r0, #4]
   11ec8:	cmp	r8, r1
   11ecc:	bcc	11e84 <Mat_VarReadNextInfo@plt+0xd80>
   11ed0:	mov	r0, #10
   11ed4:	bl	11050 <putchar@plt>
   11ed8:	ldr	r0, [sp, #16]
   11edc:	add	r6, r6, #1
   11ee0:	ldr	r1, [r0, #32]
   11ee4:	ldr	r0, [r1]
   11ee8:	cmp	r6, r0
   11eec:	bcc	11e70 <Mat_VarReadNextInfo@plt+0xd6c>
   11ef0:	b	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11ef4:	sub	r1, r0, #4
   11ef8:	cmp	r1, #2
   11efc:	bcc	12174 <Mat_VarReadNextInfo@plt+0x1070>
   11f00:	cmp	r0, #1
   11f04:	beq	12190 <Mat_VarReadNextInfo@plt+0x108c>
   11f08:	cmp	r0, #2
   11f0c:	bne	12248 <Mat_VarReadNextInfo@plt+0x1144>
   11f10:	ldr	r1, [r4, #36]	; 0x24
   11f14:	cmp	r1, #0
   11f18:	beq	11f28 <Mat_VarReadNextInfo@plt+0xe24>
   11f1c:	movw	r0, #15382	; 0x3c16
   11f20:	movt	r0, #1
   11f24:	bl	10f48 <Mat_Message@plt>
   11f28:	ldr	r1, [r4, #4]
   11f2c:	movw	r0, #15397	; 0x3c25
   11f30:	movt	r0, #1
   11f34:	bl	10f48 <Mat_Message@plt>
   11f38:	ldr	r0, [r4, #4]
   11f3c:	cmp	r0, #0
   11f40:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11f44:	movw	r0, #15412	; 0x3c34
   11f48:	movt	r0, #1
   11f4c:	bl	10f48 <Mat_Message@plt>
   11f50:	mov	r0, r4
   11f54:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   11f58:	ldr	r1, [r4, #32]
   11f5c:	ldr	r7, [r4, #4]
   11f60:	mov	r5, r0
   11f64:	ldr	r6, [r1]
   11f68:	cmp	r7, #2
   11f6c:	blt	11f88 <Mat_VarReadNextInfo@plt+0xe84>
   11f70:	mov	r2, #1
   11f74:	ldr	r3, [r1, r2, lsl #2]
   11f78:	add	r2, r2, #1
   11f7c:	cmp	r2, r7
   11f80:	mul	r6, r3, r6
   11f84:	blt	11f74 <Mat_VarReadNextInfo@plt+0xe70>
   11f88:	cmp	r5, #1
   11f8c:	blt	12430 <Mat_VarReadNextInfo@plt+0x132c>
   11f90:	cmp	r6, #0
   11f94:	bne	12430 <Mat_VarReadNextInfo@plt+0x132c>
   11f98:	mov	r0, r4
   11f9c:	bl	10f84 <Mat_VarGetStructFieldnames@plt>
   11fa0:	mov	r4, r0
   11fa4:	movw	r0, #15434	; 0x3c4a
   11fa8:	mov	r1, r5
   11fac:	movt	r0, #1
   11fb0:	bl	10f48 <Mat_Message@plt>
   11fb4:	movw	r7, #20964	; 0x51e4
   11fb8:	cmp	r4, #0
   11fbc:	movt	r7, #2
   11fc0:	ldr	r0, [r7]
   11fc4:	add	r0, r0, #1
   11fc8:	str	r0, [r7]
   11fcc:	beq	1248c <Mat_VarReadNextInfo@plt+0x1388>
   11fd0:	movw	r6, #15384	; 0x3c18
   11fd4:	movt	r6, #1
   11fd8:	ldr	r1, [r4], #4
   11fdc:	mov	r0, r6
   11fe0:	bl	10f48 <Mat_Message@plt>
   11fe4:	subs	r5, r5, #1
   11fe8:	bne	11fd8 <Mat_VarReadNextInfo@plt+0xed4>
   11fec:	b	12488 <Mat_VarReadNextInfo@plt+0x1384>
   11ff0:	ldr	r0, [r4, #40]	; 0x28
   11ff4:	cmp	r0, #0
   11ff8:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   11ffc:	ldr	r0, [r4, #8]
   12000:	bl	10ff0 <Mat_SizeOf@plt>
   12004:	str	r0, [sp, #8]
   12008:	ldr	r0, [r4, #20]
   1200c:	cmp	r0, #0
   12010:	beq	122f0 <Mat_VarReadNextInfo@plt+0x11ec>
   12014:	ldr	r0, [r4, #32]
   12018:	ldr	r0, [r0, #8]
   1201c:	cmp	r0, #0
   12020:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12024:	ldr	r0, [r4, #40]	; 0x28
   12028:	movw	r5, #20964	; 0x51e4
   1202c:	movw	r7, #15674	; 0x3d3a
   12030:	mov	r2, #0
   12034:	movt	r5, #2
   12038:	movt	r7, #1
   1203c:	ldr	sl, [r0]
   12040:	ldr	r0, [r0, #4]
   12044:	str	r0, [sp, #16]
   12048:	ldr	r1, [r4, #36]	; 0x24
   1204c:	movw	r0, #15517	; 0x3c9d
   12050:	str	r2, [sp, #12]
   12054:	movt	r0, #1
   12058:	bl	10f48 <Mat_Message@plt>
   1205c:	ldr	r0, [r5]
   12060:	add	r1, r0, #1
   12064:	str	r1, [r5]
   12068:	ldr	r0, [r4, #32]
   1206c:	ldr	r2, [r0]
   12070:	cmp	r2, #0
   12074:	beq	12148 <Mat_VarReadNextInfo@plt+0x1044>
   12078:	mov	r8, #0
   1207c:	cmp	r1, #0
   12080:	beq	120a4 <Mat_VarReadNextInfo@plt+0xfa0>
   12084:	mov	r6, #0
   12088:	mov	r0, r7
   1208c:	bl	10ef4 <printf@plt>
   12090:	ldr	r0, [r5]
   12094:	add	r6, r6, #1
   12098:	cmp	r6, r0
   1209c:	bcc	12088 <Mat_VarReadNextInfo@plt+0xf84>
   120a0:	ldr	r0, [r4, #32]
   120a4:	ldr	r1, [r0, #4]
   120a8:	ldr	r5, [sp, #12]
   120ac:	ldr	r7, [sp, #8]
   120b0:	mov	r9, sl
   120b4:	cmp	r1, #0
   120b8:	beq	12114 <Mat_VarReadNextInfo@plt+0x1010>
   120bc:	mov	sl, #0
   120c0:	ldr	r0, [r0]
   120c4:	mla	r1, r5, r1, sl
   120c8:	mla	r6, r1, r0, r8
   120cc:	ldr	r0, [r4, #8]
   120d0:	mla	r1, r6, r7, r9
   120d4:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   120d8:	movw	r0, #15476	; 0x3c74
   120dc:	movt	r0, #1
   120e0:	bl	10ef4 <printf@plt>
   120e4:	ldr	r0, [sp, #16]
   120e8:	mla	r1, r6, r7, r0
   120ec:	ldr	r0, [r4, #8]
   120f0:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   120f4:	movw	r0, #15480	; 0x3c78
   120f8:	movt	r0, #1
   120fc:	bl	10ef4 <printf@plt>
   12100:	ldr	r0, [r4, #32]
   12104:	add	sl, sl, #1
   12108:	ldr	r1, [r0, #4]
   1210c:	cmp	sl, r1
   12110:	bcc	120c0 <Mat_VarReadNextInfo@plt+0xfbc>
   12114:	mov	r0, #10
   12118:	bl	11050 <putchar@plt>
   1211c:	ldr	r0, [r4, #32]
   12120:	movw	r5, #20964	; 0x51e4
   12124:	movw	r7, #15674	; 0x3d3a
   12128:	add	r8, r8, #1
   1212c:	mov	sl, r9
   12130:	movt	r5, #2
   12134:	movt	r7, #1
   12138:	ldr	r1, [r5]
   1213c:	ldr	r2, [r0]
   12140:	cmp	r8, r2
   12144:	bcc	1207c <Mat_VarReadNextInfo@plt+0xf78>
   12148:	sub	r0, r1, #1
   1214c:	str	r0, [r5]
   12150:	mov	r0, #10
   12154:	bl	11050 <putchar@plt>
   12158:	ldr	r0, [r4, #32]
   1215c:	ldr	r2, [sp, #12]
   12160:	ldr	r0, [r0, #8]
   12164:	add	r2, r2, #1
   12168:	cmp	r2, r0
   1216c:	bcc	12048 <Mat_VarReadNextInfo@plt+0xf44>
   12170:	b	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12174:	movw	r0, #20956	; 0x51dc
   12178:	movt	r0, #2
   1217c:	ldrb	r1, [r0]
   12180:	mov	r0, r4
   12184:	sub	sp, fp, #28
   12188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1218c:	b	11038 <Mat_VarPrint@plt>
   12190:	ldr	r1, [r4, #36]	; 0x24
   12194:	cmp	r1, #0
   12198:	beq	121a8 <Mat_VarReadNextInfo@plt+0x10a4>
   1219c:	movw	r0, #15382	; 0x3c16
   121a0:	movt	r0, #1
   121a4:	bl	10f48 <Mat_Message@plt>
   121a8:	ldr	r1, [r4, #4]
   121ac:	movw	r0, #15397	; 0x3c25
   121b0:	movt	r0, #1
   121b4:	bl	10f48 <Mat_Message@plt>
   121b8:	ldr	r0, [r4, #4]
   121bc:	cmp	r0, #0
   121c0:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   121c4:	ldr	r1, [r4, #32]
   121c8:	cmp	r0, #2
   121cc:	ldr	r5, [r1]
   121d0:	blt	121ec <Mat_VarReadNextInfo@plt+0x10e8>
   121d4:	sub	r0, r0, #1
   121d8:	add	r1, r1, #4
   121dc:	ldr	r2, [r1], #4
   121e0:	subs	r0, r0, #1
   121e4:	mul	r5, r2, r5
   121e8:	bne	121dc <Mat_VarReadNextInfo@plt+0x10d8>
   121ec:	movw	r0, #15447	; 0x3c57
   121f0:	movt	r0, #1
   121f4:	bl	10f48 <Mat_Message@plt>
   121f8:	movw	r0, #15445	; 0x3c55
   121fc:	movt	r0, #1
   12200:	bl	10f48 <Mat_Message@plt>
   12204:	movw	r6, #20964	; 0x51e4
   12208:	movt	r6, #2
   1220c:	ldr	r0, [r6]
   12210:	add	r0, r0, #1
   12214:	str	r0, [r6]
   12218:	ldr	r4, [r4, #40]	; 0x28
   1221c:	cmp	r4, #0
   12220:	cmpne	r5, #0
   12224:	beq	1223c <Mat_VarReadNextInfo@plt+0x1138>
   12228:	ldr	r0, [r4], #4
   1222c:	bl	11de8 <Mat_VarReadNextInfo@plt+0xce4>
   12230:	subs	r5, r5, #1
   12234:	bne	12228 <Mat_VarReadNextInfo@plt+0x1124>
   12238:	ldr	r0, [r6]
   1223c:	sub	r0, r0, #1
   12240:	str	r0, [r6]
   12244:	b	12494 <Mat_VarReadNextInfo@plt+0x1390>
   12248:	movw	r0, #15470	; 0x3c6e
   1224c:	movt	r0, #1
   12250:	b	1249c <Mat_VarReadNextInfo@plt+0x1398>
   12254:	ldr	r0, [r4, #32]
   12258:	ldr	r1, [r0]
   1225c:	cmp	r1, #0
   12260:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12264:	ldr	r8, [r4, #40]	; 0x28
   12268:	mov	r7, #0
   1226c:	ldr	r0, [r0, #4]
   12270:	cmp	r0, #0
   12274:	beq	122d0 <Mat_VarReadNextInfo@plt+0x11cc>
   12278:	ldr	r0, [r4, #8]
   1227c:	mla	r1, r7, r5, r8
   12280:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   12284:	mov	r0, #32
   12288:	bl	11050 <putchar@plt>
   1228c:	ldr	r0, [r4, #32]
   12290:	ldr	r1, [r0, #4]
   12294:	cmp	r1, #2
   12298:	bcc	122d0 <Mat_VarReadNextInfo@plt+0x11cc>
   1229c:	mov	r6, #1
   122a0:	ldr	r0, [r0]
   122a4:	mla	r0, r6, r0, r7
   122a8:	mla	r1, r0, r5, r8
   122ac:	ldr	r0, [r4, #8]
   122b0:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   122b4:	mov	r0, #32
   122b8:	bl	11050 <putchar@plt>
   122bc:	ldr	r0, [r4, #32]
   122c0:	add	r6, r6, #1
   122c4:	ldr	r1, [r0, #4]
   122c8:	cmp	r6, r1
   122cc:	bcc	122a0 <Mat_VarReadNextInfo@plt+0x119c>
   122d0:	mov	r0, #10
   122d4:	bl	11050 <putchar@plt>
   122d8:	ldr	r0, [r4, #32]
   122dc:	add	r7, r7, #1
   122e0:	ldr	r1, [r0]
   122e4:	cmp	r7, r1
   122e8:	bcc	1226c <Mat_VarReadNextInfo@plt+0x1168>
   122ec:	b	12428 <Mat_VarReadNextInfo@plt+0x1324>
   122f0:	ldr	r0, [r4, #32]
   122f4:	ldr	r0, [r0, #8]
   122f8:	cmp	r0, #0
   122fc:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12300:	ldr	r0, [r4, #40]	; 0x28
   12304:	movw	r8, #20964	; 0x51e4
   12308:	mov	r7, r4
   1230c:	movw	r4, #15674	; 0x3d3a
   12310:	mov	r2, #0
   12314:	movt	r8, #2
   12318:	movt	r4, #1
   1231c:	str	r0, [sp, #4]
   12320:	ldr	r5, [sp, #8]
   12324:	ldr	r1, [r7, #36]	; 0x24
   12328:	movw	r0, #15517	; 0x3c9d
   1232c:	str	r2, [sp, #12]
   12330:	movt	r0, #1
   12334:	bl	10f48 <Mat_Message@plt>
   12338:	ldr	r0, [r8]
   1233c:	add	r1, r0, #1
   12340:	str	r1, [r8]
   12344:	ldr	r0, [r7, #32]
   12348:	ldr	r2, [r0]
   1234c:	cmp	r2, #0
   12350:	beq	12400 <Mat_VarReadNextInfo@plt+0x12fc>
   12354:	mov	r6, #0
   12358:	cmp	r1, #0
   1235c:	beq	12384 <Mat_VarReadNextInfo@plt+0x1280>
   12360:	mov	r7, #0
   12364:	mov	r0, r4
   12368:	bl	10ef4 <printf@plt>
   1236c:	ldr	r0, [r8]
   12370:	add	r7, r7, #1
   12374:	cmp	r7, r0
   12378:	bcc	12364 <Mat_VarReadNextInfo@plt+0x1260>
   1237c:	ldr	r7, [sp, #16]
   12380:	ldr	r0, [r7, #32]
   12384:	ldr	r1, [r0, #4]
   12388:	mov	r4, r8
   1238c:	ldr	r8, [sp, #4]
   12390:	ldr	sl, [sp, #12]
   12394:	cmp	r1, #0
   12398:	beq	123d4 <Mat_VarReadNextInfo@plt+0x12d0>
   1239c:	mov	r9, #0
   123a0:	ldr	r0, [r0]
   123a4:	mla	r1, sl, r1, r9
   123a8:	mla	r0, r1, r0, r6
   123ac:	mla	r1, r0, r5, r8
   123b0:	ldr	r0, [r7, #8]
   123b4:	bl	1273c <Mat_VarReadNextInfo@plt+0x1638>
   123b8:	mov	r0, #32
   123bc:	bl	11050 <putchar@plt>
   123c0:	ldr	r0, [r7, #32]
   123c4:	add	r9, r9, #1
   123c8:	ldr	r1, [r0, #4]
   123cc:	cmp	r9, r1
   123d0:	bcc	123a0 <Mat_VarReadNextInfo@plt+0x129c>
   123d4:	mov	r0, #10
   123d8:	bl	11050 <putchar@plt>
   123dc:	ldr	r0, [r7, #32]
   123e0:	ldr	r1, [r4]
   123e4:	mov	r8, r4
   123e8:	movw	r4, #15674	; 0x3d3a
   123ec:	add	r6, r6, #1
   123f0:	movt	r4, #1
   123f4:	ldr	r2, [r0]
   123f8:	cmp	r6, r2
   123fc:	bcc	12358 <Mat_VarReadNextInfo@plt+0x1254>
   12400:	sub	r0, r1, #1
   12404:	str	r0, [r8]
   12408:	mov	r0, #10
   1240c:	bl	11050 <putchar@plt>
   12410:	ldr	r0, [r7, #32]
   12414:	ldr	r2, [sp, #12]
   12418:	ldr	r0, [r0, #8]
   1241c:	add	r2, r2, #1
   12420:	cmp	r2, r0
   12424:	bcc	12324 <Mat_VarReadNextInfo@plt+0x1220>
   12428:	sub	sp, fp, #28
   1242c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12430:	cmp	r5, #1
   12434:	blt	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12438:	cmp	r6, #0
   1243c:	beq	12428 <Mat_VarReadNextInfo@plt+0x1324>
   12440:	movw	r0, #15434	; 0x3c4a
   12444:	mov	r1, r5
   12448:	movt	r0, #1
   1244c:	bl	10f48 <Mat_Message@plt>
   12450:	movw	r7, #20964	; 0x51e4
   12454:	movt	r7, #2
   12458:	ldr	r0, [r7]
   1245c:	add	r0, r0, #1
   12460:	str	r0, [r7]
   12464:	ldr	r4, [r4, #40]	; 0x28
   12468:	cmp	r4, #0
   1246c:	mulne	r5, r6, r5
   12470:	cmpne	r5, #0
   12474:	beq	1248c <Mat_VarReadNextInfo@plt+0x1388>
   12478:	ldr	r0, [r4], #4
   1247c:	bl	11de8 <Mat_VarReadNextInfo@plt+0xce4>
   12480:	subs	r5, r5, #1
   12484:	bne	12478 <Mat_VarReadNextInfo@plt+0x1374>
   12488:	ldr	r0, [r7]
   1248c:	sub	r0, r0, #1
   12490:	str	r0, [r7]
   12494:	movw	r0, #16758	; 0x4176
   12498:	movt	r0, #1
   1249c:	sub	sp, fp, #28
   124a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124a4:	b	10f48 <Mat_Message@plt>
   124a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   124ac:	add	fp, sp, #24
   124b0:	vpush	{d8-d9}
   124b4:	sub	sp, sp, #40	; 0x28
   124b8:	add	r8, sp, #8
   124bc:	movw	r5, #20968	; 0x51e8
   124c0:	mov	r4, r0
   124c4:	vmov.i32	q8, #0	; 0x00000000
   124c8:	mov	r0, r8
   124cc:	movt	r5, #2
   124d0:	vst1.64	{d16-d17}, [r0]!
   124d4:	vst1.64	{d16-d17}, [r0]
   124d8:	ldrb	r0, [r5]
   124dc:	cmp	r0, #0
   124e0:	bne	1251c <Mat_VarReadNextInfo@plt+0x1418>
   124e4:	movw	r0, #15630	; 0x3d0e
   124e8:	movw	r1, #15614	; 0x3cfe
   124ec:	movw	r2, #15619	; 0x3d03
   124f0:	movw	r3, #15624	; 0x3d08
   124f4:	movt	r0, #1
   124f8:	movt	r1, #1
   124fc:	movt	r2, #1
   12500:	movt	r3, #1
   12504:	str	r0, [sp]
   12508:	movw	r0, #15574	; 0x3cd6
   1250c:	movt	r0, #1
   12510:	bl	10ef4 <printf@plt>
   12514:	mov	r0, #1
   12518:	strb	r0, [r5]
   1251c:	ldr	r1, [r4, #36]	; 0x24
   12520:	movw	r0, #15636	; 0x3d14
   12524:	movt	r0, #1
   12528:	bl	10ef4 <printf@plt>
   1252c:	ldr	r0, [r4, #4]
   12530:	cmp	r0, #1
   12534:	blt	125d4 <Mat_VarReadNextInfo@plt+0x14d0>
   12538:	ldr	r0, [r4, #32]
   1253c:	ldr	r1, [r0]
   12540:	movw	r0, #15642	; 0x3d1a
   12544:	movt	r0, #1
   12548:	bl	10ef4 <printf@plt>
   1254c:	ldr	r0, [r4, #4]
   12550:	cmp	r0, #2
   12554:	blt	125c0 <Mat_VarReadNextInfo@plt+0x14bc>
   12558:	vldr	d8, [pc, #336]	; 126b0 <Mat_VarReadNextInfo@plt+0x15ac>
   1255c:	movw	r5, #15647	; 0x3d1f
   12560:	mov	r7, #1
   12564:	mov	r6, #0
   12568:	vmov.f64	d9, #112	; 0x3f800000  1.0
   1256c:	movt	r5, #1
   12570:	ldr	r0, [r4, #32]
   12574:	add	r0, r0, r7, lsl #2
   12578:	vldr	s0, [r0]
   1257c:	vcvt.f64.u32	d0, s0
   12580:	bl	10fb4 <log10@plt>
   12584:	vrintp.f64	d16, d0
   12588:	vadd.f64	d16, d16, d9
   1258c:	vcmpe.f64	d16, d8
   12590:	vmrs	APSR_nzcv, fpscr
   12594:	bpl	125b0 <Mat_VarReadNextInfo@plt+0x14ac>
   12598:	ldr	r0, [r4, #32]
   1259c:	mov	r1, r5
   125a0:	ldr	r2, [r0, r7, lsl #2]
   125a4:	add	r0, r8, r6
   125a8:	bl	11098 <sprintf@plt>
   125ac:	add	r6, r0, r6
   125b0:	ldr	r0, [r4, #4]
   125b4:	add	r7, r7, #1
   125b8:	cmp	r7, r0
   125bc:	blt	12570 <Mat_VarReadNextInfo@plt+0x146c>
   125c0:	movw	r0, #15652	; 0x3d24
   125c4:	add	r1, sp, #8
   125c8:	movt	r0, #1
   125cc:	bl	10ef4 <printf@plt>
   125d0:	b	125e0 <Mat_VarReadNextInfo@plt+0x14dc>
   125d4:	movw	r0, #15658	; 0x3d2a
   125d8:	movt	r0, #1
   125dc:	bl	10ef4 <printf@plt>
   125e0:	mov	r0, r4
   125e4:	bl	110d4 <Mat_VarGetSize@plt>
   125e8:	mov	r1, r0
   125ec:	movw	r0, #20960	; 0x51e0
   125f0:	movt	r0, #2
   125f4:	ldrb	r0, [r0]
   125f8:	cmp	r0, #1
   125fc:	bne	12620 <Mat_VarReadNextInfo@plt+0x151c>
   12600:	cmp	r1, #1073741825	; 0x40000001
   12604:	bcc	12630 <Mat_VarReadNextInfo@plt+0x152c>
   12608:	vldr	d16, [pc, #184]	; 126c8 <Mat_VarReadNextInfo@plt+0x15c4>
   1260c:	vmov	s0, r1
   12610:	movw	r0, #15679	; 0x3d3f
   12614:	vcvt.f64.u32	d17, s0
   12618:	movt	r0, #1
   1261c:	b	1266c <Mat_VarReadNextInfo@plt+0x1568>
   12620:	movw	r0, #15714	; 0x3d62
   12624:	movt	r0, #1
   12628:	bl	10ef4 <printf@plt>
   1262c:	b	12678 <Mat_VarReadNextInfo@plt+0x1574>
   12630:	cmp	r1, #1048576	; 0x100000
   12634:	bls	12650 <Mat_VarReadNextInfo@plt+0x154c>
   12638:	vldr	d16, [pc, #128]	; 126c0 <Mat_VarReadNextInfo@plt+0x15bc>
   1263c:	vmov	s0, r1
   12640:	movw	r0, #15688	; 0x3d48
   12644:	vcvt.f64.u32	d17, s0
   12648:	movt	r0, #1
   1264c:	b	1266c <Mat_VarReadNextInfo@plt+0x1568>
   12650:	cmp	r1, #1024	; 0x400
   12654:	bls	126a0 <Mat_VarReadNextInfo@plt+0x159c>
   12658:	vldr	d16, [pc, #88]	; 126b8 <Mat_VarReadNextInfo@plt+0x15b4>
   1265c:	vmov	s0, r1
   12660:	movw	r0, #15697	; 0x3d51
   12664:	vcvt.f64.u32	d17, s0
   12668:	movt	r0, #1
   1266c:	vmul.f64	d16, d17, d16
   12670:	vmov	r2, r3, d16
   12674:	bl	10ef4 <printf@plt>
   12678:	ldr	r0, [r4, #16]
   1267c:	movw	r1, #16980	; 0x4254
   12680:	movt	r1, #1
   12684:	ldr	r1, [r1, r0, lsl #2]
   12688:	movw	r0, #15722	; 0x3d6a
   1268c:	movt	r0, #1
   12690:	bl	10ef4 <printf@plt>
   12694:	sub	sp, fp, #40	; 0x28
   12698:	vpop	{d8-d9}
   1269c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   126a0:	movw	r0, #15706	; 0x3d5a
   126a4:	movt	r0, #1
   126a8:	b	12628 <Mat_VarReadNextInfo@plt+0x1524>
   126ac:	nop	{0}
   126b0:	andeq	r0, r0, r0
   126b4:	submi	r0, r0, r0
   126b8:	andeq	r0, r0, r0
   126bc:	svccc	0x00500000
   126c0:	andeq	r0, r0, r0
   126c4:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   126c8:	andeq	r0, r0, r0
   126cc:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   126d0:	push	{r4, r5, r6, r7, fp, lr}
   126d4:	add	fp, sp, #16
   126d8:	movw	r7, #16530	; 0x4092
   126dc:	mov	r4, r0
   126e0:	mov	r5, #0
   126e4:	mov	r0, #40	; 0x28
   126e8:	mvn	r6, #0
   126ec:	movt	r7, #1
   126f0:	uxtb	r1, r0
   126f4:	mov	r0, r4
   126f8:	bl	11008 <strchr@plt>
   126fc:	cmp	r0, #0
   12700:	beq	1271c <Mat_VarReadNextInfo@plt+0x1618>
   12704:	cmp	r5, #0
   12708:	beq	12718 <Mat_VarReadNextInfo@plt+0x1614>
   1270c:	cmp	r0, r5
   12710:	movcc	r5, r0
   12714:	b	1271c <Mat_VarReadNextInfo@plt+0x1618>
   12718:	mov	r5, r0
   1271c:	ldrb	r0, [r7, -r6]
   12720:	sub	r6, r6, #1
   12724:	cmn	r6, #6
   12728:	bne	126f0 <Mat_VarReadNextInfo@plt+0x15ec>
   1272c:	cmp	r5, #0
   12730:	movne	r4, r5
   12734:	mov	r0, r4
   12738:	pop	{r4, r5, r6, r7, fp, pc}
   1273c:	sub	r0, r0, #1
   12740:	cmp	r0, #12
   12744:	bxhi	lr
   12748:	add	r2, pc, #0
   1274c:	ldr	pc, [r2, r0, lsl #2]
   12750:	andeq	r2, r1, r4, lsl #15
   12754:	muleq	r1, r4, r7
   12758:	andeq	r2, r1, r4, lsr #15
   1275c:			; <UNDEFINED> instruction: 0x000127b4
   12760:	andeq	r2, r1, r4, asr #15
   12764:	ldrdeq	r2, [r1], -r4
   12768:	andeq	r2, r1, r4, ror #15
   1276c:	andeq	r2, r1, r4, lsr #16
   12770:	strdeq	r2, [r1], -r0
   12774:	andeq	r2, r1, r4, lsr #16
   12778:	andeq	r2, r1, r4, lsr #16
   1277c:	andeq	r2, r1, r4, lsl #16
   12780:	andeq	r2, r1, r4, lsl r8
   12784:	ldrsb	r1, [r1]
   12788:	movw	r0, #15507	; 0x3c93
   1278c:	movt	r0, #1
   12790:	b	10ef4 <printf@plt>
   12794:	ldrb	r1, [r1]
   12798:	movw	r0, #15512	; 0x3c98
   1279c:	movt	r0, #1
   127a0:	b	10ef4 <printf@plt>
   127a4:	ldrsh	r1, [r1]
   127a8:	movw	r0, #15499	; 0x3c8b
   127ac:	movt	r0, #1
   127b0:	b	10ef4 <printf@plt>
   127b4:	ldrh	r1, [r1]
   127b8:	movw	r0, #15503	; 0x3c8f
   127bc:	movt	r0, #1
   127c0:	b	10ef4 <printf@plt>
   127c4:	ldr	r1, [r1]
   127c8:	movw	r0, #15409	; 0x3c31
   127cc:	movt	r0, #1
   127d0:	b	10ef4 <printf@plt>
   127d4:	ldr	r1, [r1]
   127d8:	movw	r0, #15496	; 0x3c88
   127dc:	movt	r0, #1
   127e0:	b	10ef4 <printf@plt>
   127e4:	vldr	s0, [r1]
   127e8:	vcvt.f64.f32	d16, s0
   127ec:	b	127f4 <Mat_VarReadNextInfo@plt+0x16f0>
   127f0:	vldr	d16, [r1]
   127f4:	movw	r0, #15483	; 0x3c7b
   127f8:	vmov	r2, r3, d16
   127fc:	movt	r0, #1
   12800:	b	10ef4 <printf@plt>
   12804:	ldrd	r2, [r1]
   12808:	movw	r0, #15486	; 0x3c7e
   1280c:	movt	r0, #1
   12810:	b	10ef4 <printf@plt>
   12814:	ldrd	r2, [r1]
   12818:	movw	r0, #15491	; 0x3c83
   1281c:	movt	r0, #1
   12820:	b	10ef4 <printf@plt>
   12824:	bx	lr
   12828:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1282c:	add	fp, sp, #28
   12830:	sub	sp, sp, #12
   12834:	movw	r4, #16817	; 0x41b1
   12838:	mov	r6, r1
   1283c:	mov	r7, r0
   12840:	add	r5, r0, #1
   12844:	mov	r9, #0
   12848:	mov	sl, #0
   1284c:	str	r3, [sp, #4]
   12850:	str	r2, [sp, #8]
   12854:	movt	r4, #1
   12858:	mov	r8, r7
   1285c:	ldrb	r0, [r7, #1]!
   12860:	cmp	r0, #57	; 0x39
   12864:	bgt	128b4 <Mat_VarReadNextInfo@plt+0x17b0>
   12868:	cmp	r0, #41	; 0x29
   1286c:	beq	128c4 <Mat_VarReadNextInfo@plt+0x17c0>
   12870:	cmp	r0, #44	; 0x2c
   12874:	bne	12a40 <Mat_VarReadNextInfo@plt+0x193c>
   12878:	cmp	r9, #0
   1287c:	beq	129ac <Mat_VarReadNextInfo@plt+0x18a8>
   12880:	cmp	r9, #1
   12884:	cmpne	r9, #2
   12888:	bne	12a34 <Mat_VarReadNextInfo@plt+0x1930>
   1288c:	mov	r0, #0
   12890:	mov	r1, r4
   12894:	strb	r0, [r8, #1]
   12898:	mov	r0, r5
   1289c:	bl	10edc <strcmp@plt>
   128a0:	cmp	r0, #0
   128a4:	beq	129e8 <Mat_VarReadNextInfo@plt+0x18e4>
   128a8:	mov	r0, r5
   128ac:	bl	110b0 <atoi@plt>
   128b0:	b	12a2c <Mat_VarReadNextInfo@plt+0x1928>
   128b4:	cmp	r0, #58	; 0x3a
   128b8:	beq	12900 <Mat_VarReadNextInfo@plt+0x17fc>
   128bc:	cmp	r0, #125	; 0x7d
   128c0:	bne	12a40 <Mat_VarReadNextInfo@plt+0x193c>
   128c4:	mov	r0, #0
   128c8:	mov	r1, r4
   128cc:	strb	r0, [r8, #1]
   128d0:	mov	r0, r5
   128d4:	bl	10edc <strcmp@plt>
   128d8:	cmp	r0, #0
   128dc:	beq	12948 <Mat_VarReadNextInfo@plt+0x1844>
   128e0:	mov	r0, r5
   128e4:	bl	110b0 <atoi@plt>
   128e8:	cmp	r9, #2
   128ec:	cmpne	r9, #1
   128f0:	bne	12994 <Mat_VarReadNextInfo@plt+0x1890>
   128f4:	ldr	r1, [fp, #8]
   128f8:	str	r0, [r1, sl, lsl #2]
   128fc:	b	12988 <Mat_VarReadNextInfo@plt+0x1884>
   12900:	mov	r0, #0
   12904:	mov	r1, r4
   12908:	strb	r0, [r8, #1]
   1290c:	mov	r0, r5
   12910:	bl	10edc <strcmp@plt>
   12914:	cmp	r0, #0
   12918:	beq	12970 <Mat_VarReadNextInfo@plt+0x186c>
   1291c:	mov	r0, r5
   12920:	bl	110b0 <atoi@plt>
   12924:	cmp	r9, #2
   12928:	beq	128f4 <Mat_VarReadNextInfo@plt+0x17f0>
   1292c:	cmp	r9, #1
   12930:	beq	129e0 <Mat_VarReadNextInfo@plt+0x18dc>
   12934:	cmp	r9, #0
   12938:	bne	12a00 <Mat_VarReadNextInfo@plt+0x18fc>
   1293c:	ldr	r1, [sp, #8]
   12940:	sub	r0, r0, #1
   12944:	b	128f8 <Mat_VarReadNextInfo@plt+0x17f4>
   12948:	cmp	r9, #2
   1294c:	cmpne	r9, #1
   12950:	beq	1297c <Mat_VarReadNextInfo@plt+0x1878>
   12954:	cmp	r9, #0
   12958:	bne	12a00 <Mat_VarReadNextInfo@plt+0x18fc>
   1295c:	ldr	r0, [sp, #8]
   12960:	mvn	r1, #0
   12964:	str	r1, [r0, sl, lsl #2]
   12968:	ldr	r0, [fp, #8]
   1296c:	b	12984 <Mat_VarReadNextInfo@plt+0x1880>
   12970:	cmp	r9, #2
   12974:	cmpne	r9, #1
   12978:	bne	129f0 <Mat_VarReadNextInfo@plt+0x18ec>
   1297c:	ldr	r0, [fp, #8]
   12980:	mvn	r1, #0
   12984:	str	r1, [r0, sl, lsl #2]
   12988:	add	r5, r8, #2
   1298c:	add	r9, r9, #1
   12990:	b	12a40 <Mat_VarReadNextInfo@plt+0x193c>
   12994:	cmp	r9, #0
   12998:	bne	12a00 <Mat_VarReadNextInfo@plt+0x18fc>
   1299c:	ldr	r2, [sp, #8]
   129a0:	sub	r1, r0, #1
   129a4:	str	r1, [r2, sl, lsl #2]
   129a8:	b	128f4 <Mat_VarReadNextInfo@plt+0x17f0>
   129ac:	mov	r0, #0
   129b0:	mov	r1, r4
   129b4:	strb	r0, [r8, #1]
   129b8:	mov	r0, r5
   129bc:	bl	10edc <strcmp@plt>
   129c0:	cmp	r0, #0
   129c4:	beq	12a20 <Mat_VarReadNextInfo@plt+0x191c>
   129c8:	mov	r0, r5
   129cc:	bl	110b0 <atoi@plt>
   129d0:	ldr	r2, [sp, #8]
   129d4:	sub	r1, r0, #1
   129d8:	str	r1, [r2, sl, lsl #2]
   129dc:	b	12a2c <Mat_VarReadNextInfo@plt+0x1928>
   129e0:	ldr	r1, [sp, #4]
   129e4:	b	128f8 <Mat_VarReadNextInfo@plt+0x17f4>
   129e8:	mvn	r0, #0
   129ec:	b	12a2c <Mat_VarReadNextInfo@plt+0x1928>
   129f0:	cmp	r9, #0
   129f4:	bne	12a00 <Mat_VarReadNextInfo@plt+0x18fc>
   129f8:	ldr	r0, [sp, #8]
   129fc:	b	12980 <Mat_VarReadNextInfo@plt+0x187c>
   12a00:	movw	r0, #20944	; 0x51d0
   12a04:	movw	r1, #16821	; 0x41b5
   12a08:	add	r2, sl, #1
   12a0c:	movt	r0, #2
   12a10:	movt	r1, #1
   12a14:	ldr	r0, [r0]
   12a18:	bl	11020 <fprintf@plt>
   12a1c:	b	12988 <Mat_VarReadNextInfo@plt+0x1884>
   12a20:	ldr	r1, [sp, #8]
   12a24:	mvn	r0, #0
   12a28:	str	r0, [r1, sl, lsl #2]
   12a2c:	ldr	r1, [fp, #8]
   12a30:	str	r0, [r1, sl, lsl #2]
   12a34:	add	r5, r8, #2
   12a38:	add	sl, sl, #1
   12a3c:	mov	r9, #0
   12a40:	cmp	r6, r7
   12a44:	subeq	sp, fp, #28
   12a48:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a4c:	b	12858 <Mat_VarReadNextInfo@plt+0x1754>
   12a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a54:	add	fp, sp, #28
   12a58:	sub	sp, sp, #4
   12a5c:	ldr	ip, [fp, #8]
   12a60:	cmp	r0, #1
   12a64:	mov	r9, #0
   12a68:	ldr	r7, [ip, #4]
   12a6c:	cmpne	r7, r0
   12a70:	bne	12d58 <Mat_VarReadNextInfo@plt+0x1c54>
   12a74:	cmp	r0, #1
   12a78:	bne	12aa0 <Mat_VarReadNextInfo@plt+0x199c>
   12a7c:	cmp	r7, #1
   12a80:	blt	12bc4 <Mat_VarReadNextInfo@plt+0x1ac0>
   12a84:	ldr	r6, [ip, #32]
   12a88:	mov	r0, #1
   12a8c:	ldr	r5, [r6], #4
   12a90:	subs	r7, r7, #1
   12a94:	mul	r0, r5, r0
   12a98:	bne	12a8c <Mat_VarReadNextInfo@plt+0x1988>
   12a9c:	b	12bc8 <Mat_VarReadNextInfo@plt+0x1ac4>
   12aa0:	blt	12c28 <Mat_VarReadNextInfo@plt+0x1b24>
   12aa4:	mov	lr, #0
   12aa8:	mov	r8, #1
   12aac:	mov	r9, #1
   12ab0:	mov	r4, #0
   12ab4:	ldr	r7, [r2, r4, lsl #2]
   12ab8:	cmp	r7, #0
   12abc:	ble	12c58 <Mat_VarReadNextInfo@plt+0x1b54>
   12ac0:	ldr	r6, [r3, r4, lsl #2]
   12ac4:	cmn	r6, #1
   12ac8:	beq	12b10 <Mat_VarReadNextInfo@plt+0x1a0c>
   12acc:	cmp	r6, #0
   12ad0:	blt	12b1c <Mat_VarReadNextInfo@plt+0x1a18>
   12ad4:	ldr	r5, [ip, #32]
   12ad8:	ldr	r5, [r5, r4, lsl #2]
   12adc:	cmp	r6, r5
   12ae0:	bhi	12cc4 <Mat_VarReadNextInfo@plt+0x1bc0>
   12ae4:	ldr	sl, [r1, r4, lsl #2]
   12ae8:	cmp	sl, r5
   12aec:	bcs	12c7c <Mat_VarReadNextInfo@plt+0x1b78>
   12af0:	cmp	r6, #1
   12af4:	cmpge	sl, r6
   12af8:	bgt	12c7c <Mat_VarReadNextInfo@plt+0x1b78>
   12afc:	add	r5, sl, #1
   12b00:	cmp	r6, r5
   12b04:	bne	12b60 <Mat_VarReadNextInfo@plt+0x1a5c>
   12b08:	str	r8, [r3, r4, lsl #2]
   12b0c:	b	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12b10:	ldr	r5, [r1, r4, lsl #2]
   12b14:	cmn	r5, #1
   12b18:	beq	12b98 <Mat_VarReadNextInfo@plt+0x1a94>
   12b1c:	ldr	r5, [ip, #32]
   12b20:	cmp	r7, #1
   12b24:	ldr	r5, [r5, r4, lsl #2]
   12b28:	bne	12b40 <Mat_VarReadNextInfo@plt+0x1a3c>
   12b2c:	str	r5, [r3, r4, lsl #2]
   12b30:	ldr	r5, [r1, r4, lsl #2]
   12b34:	cmn	r5, #1
   12b38:	strle	lr, [r1, r4, lsl #2]
   12b3c:	b	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12b40:	ldr	r6, [r1, r4, lsl #2]
   12b44:	vmov	s0, r7
   12b48:	vcvt.f64.s32	d16, s0
   12b4c:	mvn	r6, r6
   12b50:	add	r5, r5, r6
   12b54:	vmov	s0, r5
   12b58:	vcvt.f64.u32	d17, s0
   12b5c:	b	12b80 <Mat_VarReadNextInfo@plt+0x1a7c>
   12b60:	cmp	r6, #1
   12b64:	blt	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12b68:	mvn	r5, sl
   12b6c:	vmov	s0, r7
   12b70:	add	r5, r6, r5
   12b74:	vcvt.f64.s32	d16, s0
   12b78:	vmov	s0, r5
   12b7c:	vcvt.f64.s32	d17, s0
   12b80:	vdiv.f64	d16, d17, d16
   12b84:	vcvtm.s32.f64	s0, d16
   12b88:	vmov	r5, s0
   12b8c:	add	r5, r5, #1
   12b90:	str	r5, [r3, r4, lsl #2]
   12b94:	b	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12b98:	str	r8, [r3, r4, lsl #2]
   12b9c:	ldr	r5, [ip, #32]
   12ba0:	ldr	r5, [r5, r4, lsl #2]
   12ba4:	sub	r5, r5, #1
   12ba8:	str	r5, [r1, r4, lsl #2]
   12bac:	ldr	r5, [r3, r4, lsl #2]
   12bb0:	add	r4, r4, #1
   12bb4:	cmp	r4, r0
   12bb8:	mul	r9, r5, r9
   12bbc:	blt	12ab4 <Mat_VarReadNextInfo@plt+0x19b0>
   12bc0:	b	12d58 <Mat_VarReadNextInfo@plt+0x1c54>
   12bc4:	mov	r0, #1
   12bc8:	ldr	r7, [r2]
   12bcc:	cmp	r7, #0
   12bd0:	ble	12d1c <Mat_VarReadNextInfo@plt+0x1c18>
   12bd4:	ldr	r6, [r3]
   12bd8:	cmp	r6, r0
   12bdc:	bgt	12d38 <Mat_VarReadNextInfo@plt+0x1c34>
   12be0:	ldr	r4, [r1]
   12be4:	cmp	r4, r0
   12be8:	bge	12ca8 <Mat_VarReadNextInfo@plt+0x1ba4>
   12bec:	cmp	r6, #1
   12bf0:	cmpge	r4, r6
   12bf4:	bgt	12ca8 <Mat_VarReadNextInfo@plt+0x1ba4>
   12bf8:	cmn	r6, #1
   12bfc:	beq	12c30 <Mat_VarReadNextInfo@plt+0x1b2c>
   12c00:	cmp	r6, #1
   12c04:	blt	12d14 <Mat_VarReadNextInfo@plt+0x1c10>
   12c08:	mvn	r0, r4
   12c0c:	vmov	s0, r7
   12c10:	add	r0, r6, r0
   12c14:	vcvt.f64.s32	d16, s0
   12c18:	vmov	s0, r0
   12c1c:	vcvt.f64.s32	d17, s0
   12c20:	vdiv.f64	d16, d17, d16
   12c24:	b	12d04 <Mat_VarReadNextInfo@plt+0x1c00>
   12c28:	mov	r9, #1
   12c2c:	b	12d58 <Mat_VarReadNextInfo@plt+0x1c54>
   12c30:	cmn	r4, #1
   12c34:	beq	12c94 <Mat_VarReadNextInfo@plt+0x1b90>
   12c38:	str	r0, [r3]
   12c3c:	cmp	r7, #1
   12c40:	ldr	r6, [r1]
   12c44:	bne	12ce8 <Mat_VarReadNextInfo@plt+0x1be4>
   12c48:	cmn	r6, #1
   12c4c:	bgt	12d14 <Mat_VarReadNextInfo@plt+0x1c10>
   12c50:	mov	r0, #0
   12c54:	b	12ca0 <Mat_VarReadNextInfo@plt+0x1b9c>
   12c58:	movw	r0, #20944	; 0x51d0
   12c5c:	mov	r1, #23
   12c60:	mov	r2, #1
   12c64:	movt	r0, #2
   12c68:	ldr	r3, [r0]
   12c6c:	movw	r0, #16847	; 0x41cf
   12c70:	movt	r0, #1
   12c74:	bl	10f78 <fwrite@plt>
   12c78:	b	12ce0 <Mat_VarReadNextInfo@plt+0x1bdc>
   12c7c:	movw	r0, #20944	; 0x51d0
   12c80:	movw	r1, #16942	; 0x422e
   12c84:	add	r2, r4, #1
   12c88:	movt	r0, #2
   12c8c:	movt	r1, #1
   12c90:	b	12cd8 <Mat_VarReadNextInfo@plt+0x1bd4>
   12c94:	mov	r2, #1
   12c98:	sub	r0, r0, #1
   12c9c:	str	r2, [r3]
   12ca0:	str	r0, [r1]
   12ca4:	b	12d14 <Mat_VarReadNextInfo@plt+0x1c10>
   12ca8:	movw	r0, #20944	; 0x51d0
   12cac:	mov	r1, #18
   12cb0:	movt	r0, #2
   12cb4:	ldr	r3, [r0]
   12cb8:	movw	r0, #16889	; 0x41f9
   12cbc:	movt	r0, #1
   12cc0:	b	12d50 <Mat_VarReadNextInfo@plt+0x1c4c>
   12cc4:	movw	r0, #20944	; 0x51d0
   12cc8:	movw	r1, #16908	; 0x420c
   12ccc:	add	r2, r4, #1
   12cd0:	movt	r0, #2
   12cd4:	movt	r1, #1
   12cd8:	ldr	r0, [r0]
   12cdc:	bl	11020 <fprintf@plt>
   12ce0:	mov	r9, #0
   12ce4:	b	12d58 <Mat_VarReadNextInfo@plt+0x1c54>
   12ce8:	vldr	s0, [r2]
   12cec:	mvn	r1, r6
   12cf0:	add	r0, r0, r1
   12cf4:	vmov	s2, r0
   12cf8:	vcvt.f64.s32	d16, s2
   12cfc:	vcvt.f64.s32	d17, s0
   12d00:	vdiv.f64	d16, d16, d17
   12d04:	vcvtm.s32.f64	s0, d16
   12d08:	vmov	r0, s0
   12d0c:	add	r0, r0, #1
   12d10:	str	r0, [r3]
   12d14:	ldr	r9, [r3]
   12d18:	b	12d58 <Mat_VarReadNextInfo@plt+0x1c54>
   12d1c:	movw	r0, #20944	; 0x51d0
   12d20:	mov	r1, #23
   12d24:	movt	r0, #2
   12d28:	ldr	r3, [r0]
   12d2c:	movw	r0, #16847	; 0x41cf
   12d30:	movt	r0, #1
   12d34:	b	12d50 <Mat_VarReadNextInfo@plt+0x1c4c>
   12d38:	movw	r0, #20944	; 0x51d0
   12d3c:	mov	r1, #17
   12d40:	movt	r0, #2
   12d44:	ldr	r3, [r0]
   12d48:	movw	r0, #16871	; 0x41e7
   12d4c:	movt	r0, #1
   12d50:	mov	r2, #1
   12d54:	bl	10f78 <fwrite@plt>
   12d58:	mov	r0, r9
   12d5c:	sub	sp, fp, #28
   12d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d64 <getopt@@Base>:
   12d64:	push	{fp, lr}
   12d68:	mov	fp, sp
   12d6c:	sub	sp, sp, #8
   12d70:	mov	r3, #0
   12d74:	str	r3, [sp]
   12d78:	str	r3, [sp, #4]
   12d7c:	mov	r3, #0
   12d80:	bl	12d8c <getopt@@Base+0x28>
   12d84:	mov	sp, fp
   12d88:	pop	{fp, pc}
   12d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d90:	add	fp, sp, #28
   12d94:	sub	sp, sp, #36	; 0x24
   12d98:	cmp	r2, #0
   12d9c:	beq	131c0 <getopt@@Base+0x45c>
   12da0:	str	r1, [sp, #28]
   12da4:	str	r0, [sp, #32]
   12da8:	ldr	r4, [fp, #12]
   12dac:	mov	r7, r3
   12db0:	mov	r6, r2
   12db4:	ldr	r0, [pc, #1632]	; 1341c <getopt@@Base+0x6b8>
   12db8:	add	r0, pc, r0
   12dbc:	bl	10f90 <getenv@plt>
   12dc0:	ldrb	r1, [r6]
   12dc4:	cmp	r1, #45	; 0x2d
   12dc8:	bne	12dd4 <getopt@@Base+0x70>
   12dcc:	orr	r5, r4, #2
   12dd0:	b	12df0 <getopt@@Base+0x8c>
   12dd4:	bic	r5, r4, #1
   12dd8:	cmp	r1, #43	; 0x2b
   12ddc:	moveq	r4, r5
   12de0:	cmp	r0, #0
   12de4:	movne	r4, r5
   12de8:	cmp	r1, #43	; 0x2b
   12dec:	bne	12df8 <getopt@@Base+0x94>
   12df0:	add	r6, r6, #1
   12df4:	b	12dfc <getopt@@Base+0x98>
   12df8:	mov	r5, r4
   12dfc:	ldr	ip, [pc, #1564]	; 13420 <getopt@@Base+0x6bc>
   12e00:	ldr	ip, [pc, ip]
   12e04:	str	r6, [sp, #24]
   12e08:	str	r7, [sp, #20]
   12e0c:	str	r0, [sp, #12]
   12e10:	ldr	r2, [ip]
   12e14:	cmp	r2, #0
   12e18:	beq	12e44 <getopt@@Base+0xe0>
   12e1c:	ldr	r1, [pc, #1544]	; 1342c <getopt@@Base+0x6c8>
   12e20:	mov	r0, #0
   12e24:	ldr	r1, [pc, r1]
   12e28:	str	r0, [r1]
   12e2c:	ldr	r1, [pc, #1532]	; 13430 <getopt@@Base+0x6cc>
   12e30:	ldr	r1, [pc, r1]
   12e34:	ldr	r1, [r1]
   12e38:	cmp	r1, #0
   12e3c:	bne	12e6c <getopt@@Base+0x108>
   12e40:	b	12e8c <getopt@@Base+0x128>
   12e44:	mov	r2, #1
   12e48:	mov	r1, #0
   12e4c:	str	r2, [ip]
   12e50:	ldr	r0, [pc, #1484]	; 13424 <getopt@@Base+0x6c0>
   12e54:	ldr	r0, [pc, r0]
   12e58:	str	r2, [r0]
   12e5c:	ldr	r0, [pc, #1476]	; 13428 <getopt@@Base+0x6c4>
   12e60:	ldr	r0, [pc, r0]
   12e64:	str	r1, [r0]
   12e68:	mov	r1, #1
   12e6c:	ldr	r0, [pc, #1472]	; 13434 <getopt@@Base+0x6d0>
   12e70:	mvn	r3, #0
   12e74:	add	r0, pc, r0
   12e78:	str	r3, [r0]
   12e7c:	ldr	r0, [pc, #1460]	; 13438 <getopt@@Base+0x6d4>
   12e80:	add	r0, pc, r0
   12e84:	str	r3, [r0]
   12e88:	mov	r0, r1
   12e8c:	str	r5, [sp, #16]
   12e90:	and	r9, r5, #1
   12e94:	and	sl, r5, #2
   12e98:	ldr	r8, [pc, #1436]	; 1343c <getopt@@Base+0x6d8>
   12e9c:	ldr	r8, [pc, r8]
   12ea0:	ldr	r5, [pc, #1432]	; 13440 <getopt@@Base+0x6dc>
   12ea4:	ldr	r6, [pc, #1432]	; 13444 <getopt@@Base+0x6e0>
   12ea8:	ldr	r3, [sp, #32]
   12eac:	ldr	lr, [sp, #28]
   12eb0:	add	r5, pc, r5
   12eb4:	add	r6, pc, r6
   12eb8:	b	12f84 <getopt@@Base+0x220>
   12ebc:	ldr	r4, [lr, r2, lsl #2]
   12ec0:	str	r4, [r5]
   12ec4:	ldrb	r1, [r4]
   12ec8:	cmp	r1, #45	; 0x2d
   12ecc:	bne	12edc <getopt@@Base+0x178>
   12ed0:	ldrb	r7, [r4, #1]
   12ed4:	cmp	r7, #0
   12ed8:	bne	13014 <getopt@@Base+0x2b0>
   12edc:	cmp	sl, #0
   12ee0:	str	r6, [r5]
   12ee4:	bne	12ff8 <getopt@@Base+0x294>
   12ee8:	cmp	r9, #0
   12eec:	beq	131c0 <getopt@@Base+0x45c>
   12ef0:	ldr	r7, [pc, #1392]	; 13468 <getopt@@Base+0x704>
   12ef4:	ldr	r7, [pc, r7]
   12ef8:	cmn	r7, #1
   12efc:	beq	12f6c <getopt@@Base+0x208>
   12f00:	ldr	r4, [pc, #1384]	; 13470 <getopt@@Base+0x70c>
   12f04:	ldr	r4, [pc, r4]
   12f08:	cmn	r4, #1
   12f0c:	beq	12f78 <getopt@@Base+0x214>
   12f10:	mov	r0, r7
   12f14:	mov	r1, r4
   12f18:	mov	r3, lr
   12f1c:	mov	r5, lr
   12f20:	bl	13530 <getopt_long_only@@Base+0x28>
   12f24:	mov	lr, r5
   12f28:	ldr	r5, [pc, #1348]	; 13474 <getopt@@Base+0x710>
   12f2c:	ldr	r3, [sp, #32]
   12f30:	ldr	ip, [pc, #1344]	; 13478 <getopt@@Base+0x714>
   12f34:	mvn	r1, #0
   12f38:	ldr	ip, [pc, ip]
   12f3c:	ldr	r0, [pc, #1336]	; 1347c <getopt@@Base+0x718>
   12f40:	add	r5, pc, r5
   12f44:	add	r0, pc, r0
   12f48:	ldr	r2, [ip]
   12f4c:	str	r1, [r0]
   12f50:	sub	r0, r7, r4
   12f54:	ldr	r1, [pc, #1316]	; 13480 <getopt@@Base+0x71c>
   12f58:	add	r0, r0, r2
   12f5c:	add	r1, pc, r1
   12f60:	str	r0, [r1]
   12f64:	ldr	r0, [r8]
   12f68:	b	12f7c <getopt@@Base+0x218>
   12f6c:	ldr	r0, [pc, #1272]	; 1346c <getopt@@Base+0x708>
   12f70:	add	r0, pc, r0
   12f74:	str	r2, [r0]
   12f78:	mov	r0, #0
   12f7c:	add	r2, r2, #1
   12f80:	str	r2, [ip]
   12f84:	cmp	r0, #0
   12f88:	bne	12fa0 <getopt@@Base+0x23c>
   12f8c:	ldr	r1, [pc, #1204]	; 13448 <getopt@@Base+0x6e4>
   12f90:	ldr	r1, [pc, r1]
   12f94:	ldrb	r7, [r1]
   12f98:	cmp	r7, #0
   12f9c:	bne	13054 <getopt@@Base+0x2f0>
   12fa0:	mov	r0, #0
   12fa4:	cmp	r2, r3
   12fa8:	str	r0, [r8]
   12fac:	blt	12ebc <getopt@@Base+0x158>
   12fb0:	str	r6, [r5]
   12fb4:	ldr	r4, [pc, #1172]	; 13450 <getopt@@Base+0x6ec>
   12fb8:	ldr	r4, [pc, r4]
   12fbc:	ldr	r6, [pc, #1168]	; 13454 <getopt@@Base+0x6f0>
   12fc0:	ldr	r6, [pc, r6]
   12fc4:	cmn	r6, #1
   12fc8:	beq	13064 <getopt@@Base+0x300>
   12fcc:	mov	r0, r4
   12fd0:	mov	r1, r6
   12fd4:	mov	r3, lr
   12fd8:	bl	13530 <getopt_long_only@@Base+0x28>
   12fdc:	ldr	ip, [pc, #1140]	; 13458 <getopt@@Base+0x6f4>
   12fe0:	sub	r0, r4, r6
   12fe4:	ldr	ip, [pc, ip]
   12fe8:	ldr	r1, [ip]
   12fec:	add	r4, r0, r1
   12ff0:	str	r4, [ip]
   12ff4:	b	1306c <getopt@@Base+0x308>
   12ff8:	ldr	r1, [pc, #1124]	; 13464 <getopt@@Base+0x700>
   12ffc:	add	r0, r2, #1
   13000:	mov	r7, #1
   13004:	ldr	r1, [pc, r1]
   13008:	str	r0, [ip]
   1300c:	str	r4, [r1]
   13010:	b	131c4 <getopt@@Base+0x460>
   13014:	ldr	r3, [pc, #1128]	; 13484 <getopt@@Base+0x720>
   13018:	add	r1, r4, #1
   1301c:	ldr	r3, [pc, r3]
   13020:	ldr	r0, [pc, #1120]	; 13488 <getopt@@Base+0x724>
   13024:	ldr	r0, [pc, r0]
   13028:	cmn	r0, #1
   1302c:	beq	1308c <getopt@@Base+0x328>
   13030:	cmn	r3, #1
   13034:	ldr	r8, [sp, #24]
   13038:	ldr	sl, [sp, #20]
   1303c:	ldr	r9, [sp, #16]
   13040:	ldreq	r3, [pc, #1092]	; 1348c <getopt@@Base+0x728>
   13044:	addeq	r3, pc, r3
   13048:	streq	r2, [r3]
   1304c:	moveq	r3, r2
   13050:	b	13098 <getopt@@Base+0x334>
   13054:	ldr	r8, [sp, #24]
   13058:	ldr	sl, [sp, #20]
   1305c:	ldr	r9, [sp, #16]
   13060:	b	130b8 <getopt@@Base+0x354>
   13064:	cmn	r4, #1
   13068:	strne	r4, [ip]
   1306c:	ldr	r0, [pc, #1000]	; 1345c <getopt@@Base+0x6f8>
   13070:	mvn	r7, #0
   13074:	add	r0, pc, r0
   13078:	str	r7, [r0]
   1307c:	ldr	r0, [pc, #988]	; 13460 <getopt@@Base+0x6fc>
   13080:	add	r0, pc, r0
   13084:	str	r7, [r0]
   13088:	b	131c4 <getopt@@Base+0x460>
   1308c:	ldr	r8, [sp, #24]
   13090:	ldr	sl, [sp, #20]
   13094:	ldr	r9, [sp, #16]
   13098:	cmp	r7, #45	; 0x2d
   1309c:	str	r1, [r5]
   130a0:	bne	130b8 <getopt@@Base+0x354>
   130a4:	str	r3, [sp, #16]
   130a8:	ldrb	r3, [r4, #2]
   130ac:	mov	r7, #45	; 0x2d
   130b0:	cmp	r3, #0
   130b4:	beq	1323c <getopt@@Base+0x4d8>
   130b8:	cmp	sl, #0
   130bc:	ldrne	r0, [lr, r2, lsl #2]
   130c0:	cmpne	r1, r0
   130c4:	bne	13160 <getopt@@Base+0x3fc>
   130c8:	add	r4, r1, #1
   130cc:	cmp	r7, #58	; 0x3a
   130d0:	str	r4, [r5]
   130d4:	beq	131d0 <getopt@@Base+0x46c>
   130d8:	cmp	r7, #45	; 0x2d
   130dc:	bne	130ec <getopt@@Base+0x388>
   130e0:	ldrb	r0, [r4]
   130e4:	cmp	r0, #0
   130e8:	bne	131e4 <getopt@@Base+0x480>
   130ec:	mov	r0, r8
   130f0:	mov	r1, r7
   130f4:	mov	r5, lr
   130f8:	bl	11008 <strchr@plt>
   130fc:	cmp	r0, #0
   13100:	beq	131a4 <getopt@@Base+0x440>
   13104:	ldrb	r1, [r0, #1]
   13108:	ldr	r3, [pc, #928]	; 134b0 <getopt@@Base+0x74c>
   1310c:	cmp	sl, #0
   13110:	ldr	r3, [pc, r3]
   13114:	mov	lr, r3
   13118:	beq	13128 <getopt@@Base+0x3c4>
   1311c:	cmp	r7, #87	; 0x57
   13120:	cmpeq	r1, #59	; 0x3b
   13124:	beq	1328c <getopt@@Base+0x528>
   13128:	cmp	r1, #58	; 0x3a
   1312c:	bne	1327c <getopt@@Base+0x518>
   13130:	ldr	ip, [pc, #920]	; 134d0 <getopt@@Base+0x76c>
   13134:	mov	r2, #0
   13138:	mov	r1, r6
   1313c:	ldr	ip, [pc, ip]
   13140:	str	r2, [ip]
   13144:	ldrb	r2, [r4]
   13148:	cmp	r2, #0
   1314c:	beq	13378 <getopt@@Base+0x614>
   13150:	str	r4, [ip]
   13154:	ldr	r6, [pc, #888]	; 134d4 <getopt@@Base+0x770>
   13158:	add	r6, pc, r6
   1315c:	b	133ac <getopt@@Base+0x648>
   13160:	tst	r9, #4
   13164:	bne	13170 <getopt@@Base+0x40c>
   13168:	cmp	r7, #45	; 0x2d
   1316c:	bne	130c8 <getopt@@Base+0x364>
   13170:	ldr	r2, [pc, #724]	; 1344c <getopt@@Base+0x6e8>
   13174:	mov	r0, #0
   13178:	cmp	r7, #58	; 0x3a
   1317c:	add	r2, pc, r2
   13180:	str	r0, [r2]
   13184:	beq	1331c <getopt@@Base+0x5b8>
   13188:	cmp	r7, #45	; 0x2d
   1318c:	bne	13300 <getopt@@Base+0x59c>
   13190:	mov	r3, #1
   13194:	add	r1, r1, #1
   13198:	str	r3, [r2]
   1319c:	str	r1, [r5]
   131a0:	b	1331c <getopt@@Base+0x5b8>
   131a4:	ldr	ip, [pc, #752]	; 1349c <getopt@@Base+0x738>
   131a8:	cmp	r7, #45	; 0x2d
   131ac:	ldr	ip, [pc, ip]
   131b0:	bne	131d0 <getopt@@Base+0x46c>
   131b4:	ldrb	r0, [r4]
   131b8:	cmp	r0, #0
   131bc:	bne	131e4 <getopt@@Base+0x480>
   131c0:	mvn	r7, #0
   131c4:	mov	r0, r7
   131c8:	sub	sp, fp, #28
   131cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131d0:	ldrb	r0, [r4]
   131d4:	cmp	r0, #0
   131d8:	ldreq	r0, [ip]
   131dc:	addeq	r0, r0, #1
   131e0:	streq	r0, [ip]
   131e4:	ldr	r0, [pc, #692]	; 134a0 <getopt@@Base+0x73c>
   131e8:	ldr	r0, [pc, r0]
   131ec:	ldr	r0, [r0]
   131f0:	cmp	r0, #0
   131f4:	ldrbne	r0, [r8]
   131f8:	cmpne	r0, #58	; 0x3a
   131fc:	bne	13214 <getopt@@Base+0x4b0>
   13200:	ldr	r0, [pc, #676]	; 134ac <getopt@@Base+0x748>
   13204:	ldr	r0, [pc, r0]
   13208:	str	r7, [r0]
   1320c:	mov	r7, #63	; 0x3f
   13210:	b	131c4 <getopt@@Base+0x460>
   13214:	ldr	r1, [pc, #648]	; 134a4 <getopt@@Base+0x740>
   13218:	ldr	r0, [pc, #648]	; 134a8 <getopt@@Base+0x744>
   1321c:	ldr	r2, [sp, #12]
   13220:	add	r1, pc, r1
   13224:	add	r0, pc, r0
   13228:	cmp	r2, #0
   1322c:	movne	r0, r1
   13230:	mov	r1, r7
   13234:	bl	11014 <warnx@plt>
   13238:	b	13200 <getopt@@Base+0x49c>
   1323c:	ldr	r1, [sp, #16]
   13240:	add	r2, r2, #1
   13244:	str	r6, [r5]
   13248:	str	r2, [ip]
   1324c:	cmn	r1, #1
   13250:	beq	1306c <getopt@@Base+0x308>
   13254:	mov	r3, lr
   13258:	mov	r4, r0
   1325c:	mov	r6, r1
   13260:	mov	r5, ip
   13264:	bl	13530 <getopt_long_only@@Base+0x28>
   13268:	ldr	r1, [r5]
   1326c:	sub	r0, r4, r6
   13270:	add	r0, r0, r1
   13274:	str	r0, [r5]
   13278:	b	1306c <getopt@@Base+0x308>
   1327c:	ldrb	r0, [r4]
   13280:	cmp	r0, #0
   13284:	bne	131c4 <getopt@@Base+0x460>
   13288:	b	133b0 <getopt@@Base+0x64c>
   1328c:	ldrb	r0, [r4]
   13290:	ldr	r3, [fp, #8]
   13294:	cmp	r0, #0
   13298:	bne	132c4 <getopt@@Base+0x560>
   1329c:	ldr	r1, [lr]
   132a0:	add	r2, r1, #1
   132a4:	ldr	r1, [sp, #32]
   132a8:	str	r2, [lr]
   132ac:	cmp	r2, r1
   132b0:	bge	133c0 <getopt@@Base+0x65c>
   132b4:	ldr	r2, [r5, r2, lsl #2]
   132b8:	ldr	r1, [pc, #516]	; 134c4 <getopt@@Base+0x760>
   132bc:	add	r1, pc, r1
   132c0:	str	r2, [r1]
   132c4:	ldr	r2, [pc, #508]	; 134c8 <getopt@@Base+0x764>
   132c8:	mov	r1, #2
   132cc:	mov	r0, r5
   132d0:	add	r2, pc, r2
   132d4:	str	r1, [r2]
   132d8:	mov	r1, #0
   132dc:	mov	r2, sl
   132e0:	stm	sp, {r1, r9}
   132e4:	mov	r1, r8
   132e8:	bl	135d4 <getopt_long_only@@Base+0xcc>
   132ec:	ldr	r1, [pc, #472]	; 134cc <getopt@@Base+0x768>
   132f0:	add	r1, pc, r1
   132f4:	str	r6, [r1]
   132f8:	sub	sp, fp, #28
   132fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13300:	mov	r0, r8
   13304:	mov	r1, r7
   13308:	mov	r4, lr
   1330c:	bl	11008 <strchr@plt>
   13310:	cmp	r0, #0
   13314:	mov	lr, r4
   13318:	movwne	r0, #1
   1331c:	ldr	r3, [fp, #8]
   13320:	stm	sp, {r0, r9}
   13324:	mov	r0, lr
   13328:	mov	r1, r8
   1332c:	mov	r2, sl
   13330:	mov	r4, lr
   13334:	bl	135d4 <getopt_long_only@@Base+0xcc>
   13338:	cmn	r0, #1
   1333c:	beq	13354 <getopt@@Base+0x5f0>
   13340:	mov	r7, r0
   13344:	ldr	r0, [pc, #400]	; 134dc <getopt@@Base+0x778>
   13348:	add	r0, pc, r0
   1334c:	str	r6, [r0]
   13350:	b	131c4 <getopt@@Base+0x460>
   13354:	ldr	r1, [pc, #308]	; 13490 <getopt@@Base+0x72c>
   13358:	mov	lr, r4
   1335c:	ldr	r1, [pc, r1]
   13360:	ldrb	r7, [r1]
   13364:	ldr	ip, [pc, #296]	; 13494 <getopt@@Base+0x730>
   13368:	ldr	ip, [pc, ip]
   1336c:	ldr	r5, [pc, #292]	; 13498 <getopt@@Base+0x734>
   13370:	add	r5, pc, r5
   13374:	b	130c8 <getopt@@Base+0x364>
   13378:	ldrb	r0, [r0, #2]
   1337c:	ldr	r6, [pc, #340]	; 134d8 <getopt@@Base+0x774>
   13380:	cmp	r0, #58	; 0x3a
   13384:	add	r6, pc, r6
   13388:	beq	133ac <getopt@@Base+0x648>
   1338c:	ldr	r0, [lr]
   13390:	ldr	r2, [sp, #32]
   13394:	add	r0, r0, #1
   13398:	cmp	r0, r2
   1339c:	str	r0, [lr]
   133a0:	bge	133d0 <getopt@@Base+0x66c>
   133a4:	ldr	r0, [r5, r0, lsl #2]
   133a8:	str	r0, [ip]
   133ac:	str	r1, [r6]
   133b0:	ldr	r0, [lr]
   133b4:	add	r0, r0, #1
   133b8:	str	r0, [lr]
   133bc:	b	131c4 <getopt@@Base+0x460>
   133c0:	ldr	r0, [pc, #236]	; 134b4 <getopt@@Base+0x750>
   133c4:	add	r0, pc, r0
   133c8:	str	r6, [r0]
   133cc:	b	133d4 <getopt@@Base+0x670>
   133d0:	str	r1, [r6]
   133d4:	ldr	r0, [pc, #220]	; 134b8 <getopt@@Base+0x754>
   133d8:	ldr	r0, [pc, r0]
   133dc:	ldr	r0, [r0]
   133e0:	cmp	r0, #0
   133e4:	ldrbne	r0, [r8]
   133e8:	cmpne	r0, #58	; 0x3a
   133ec:	beq	13400 <getopt@@Base+0x69c>
   133f0:	ldr	r0, [pc, #196]	; 134bc <getopt@@Base+0x758>
   133f4:	mov	r1, r7
   133f8:	add	r0, pc, r0
   133fc:	bl	11014 <warnx@plt>
   13400:	ldr	r0, [pc, #184]	; 134c0 <getopt@@Base+0x75c>
   13404:	ldr	r0, [pc, r0]
   13408:	str	r7, [r0]
   1340c:	ldrb	r7, [r8]
   13410:	cmp	r7, #58	; 0x3a
   13414:	movwne	r7, #63	; 0x3f
   13418:	b	131c4 <getopt@@Base+0x460>
   1341c:	ldrdeq	r1, [r0], -ip
   13420:	ldrdeq	r2, [r1], -ip
   13424:	andeq	r2, r1, ip, ror r2
   13428:	andeq	r2, r1, r4, lsl #5
   1342c:	andeq	r2, r1, r0, asr #5
   13430:	andeq	r2, r1, r0, lsr #5
   13434:	andeq	r2, r1, r4, asr #6
   13438:	andeq	r2, r1, r4, lsr r3
   1343c:	andeq	r2, r1, r4, lsr r2
   13440:	andeq	r2, r1, ip, lsl #6
   13444:	andeq	r0, r0, r1, asr #28
   13448:	andeq	r2, r1, ip, lsr #4
   1344c:	andeq	r2, r1, r4, asr #32
   13450:	andeq	r2, r1, r0, lsl #4
   13454:	strdeq	r2, [r1], -r4
   13458:	strdeq	r2, [r1], -r8
   1345c:	andeq	r2, r1, r4, asr #2
   13460:	andeq	r2, r1, r4, lsr r1
   13464:	andeq	r2, r1, r0, ror #1
   13468:	andeq	r2, r1, r4, asr #5
   1346c:	andeq	r2, r1, r8, asr #4
   13470:			; <UNDEFINED> instruction: 0x000122b0
   13474:	andeq	r2, r1, ip, ror r2
   13478:	andeq	r2, r1, r4, lsr #3
   1347c:	andeq	r2, r1, r0, ror r2
   13480:	andeq	r2, r1, ip, asr r2
   13484:	muleq	r1, r8, r1
   13488:	muleq	r1, r4, r1
   1348c:	andeq	r2, r1, r0, ror r1
   13490:	andeq	r1, r1, r0, ror #28
   13494:	andeq	r1, r1, r4, ror sp
   13498:	andeq	r1, r1, ip, asr #28
   1349c:	andeq	r1, r1, r0, lsr pc
   134a0:	andeq	r1, r1, ip, ror #29
   134a4:	andeq	r1, r0, fp, lsl #1
   134a8:	muleq	r0, ip, r0
   134ac:	ldrdeq	r1, [r1], -ip
   134b0:	andeq	r1, r1, ip, asr #31
   134b4:	strdeq	r1, [r1], -r8
   134b8:	strdeq	r1, [r1], -ip
   134bc:	ldrdeq	r0, [r0], -sp
   134c0:	ldrdeq	r1, [r1], -ip
   134c4:	andeq	r1, r1, r0, lsl #30
   134c8:	strdeq	r1, [r1], -r0
   134cc:	andeq	r1, r1, ip, asr #29
   134d0:	andeq	r1, r1, r8, lsr #31
   134d4:	andeq	r2, r1, r4, rrx
   134d8:	andeq	r1, r1, r8, lsr lr
   134dc:	andeq	r1, r1, r4, ror lr

000134e0 <getopt_long@@Base>:
   134e0:	push	{fp, lr}
   134e4:	mov	fp, sp
   134e8:	sub	sp, sp, #8
   134ec:	mov	ip, #1
   134f0:	str	ip, [sp, #4]
   134f4:	ldr	ip, [fp, #8]
   134f8:	str	ip, [sp]
   134fc:	bl	12d8c <getopt@@Base+0x28>
   13500:	mov	sp, fp
   13504:	pop	{fp, pc}

00013508 <getopt_long_only@@Base>:
   13508:	push	{fp, lr}
   1350c:	mov	fp, sp
   13510:	sub	sp, sp, #8
   13514:	mov	ip, #5
   13518:	str	ip, [sp, #4]
   1351c:	ldr	ip, [fp, #8]
   13520:	str	ip, [sp]
   13524:	bl	12d8c <getopt@@Base+0x28>
   13528:	mov	sp, fp
   1352c:	pop	{fp, pc}
   13530:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13534:	add	fp, sp, #24
   13538:	sub	ip, r2, r1
   1353c:	sub	lr, r1, r0
   13540:	sdiv	r4, lr, ip
   13544:	mov	r9, ip
   13548:	mls	r5, r4, ip, lr
   1354c:	cmp	r5, #0
   13550:	beq	13570 <getopt_long_only@@Base+0x68>
   13554:	mov	r6, ip
   13558:	mov	r9, r5
   1355c:	sdiv	r5, r6, r5
   13560:	mls	r5, r5, r9, r6
   13564:	mov	r6, r9
   13568:	cmp	r5, #0
   1356c:	bne	13558 <getopt_long_only@@Base+0x50>
   13570:	cmp	r9, #1
   13574:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   13578:	sub	r0, r2, r0
   1357c:	mov	r2, #0
   13580:	sdiv	r8, r0, r9
   13584:	cmp	r8, #1
   13588:	blt	135c4 <getopt_long_only@@Base+0xbc>
   1358c:	add	r5, r2, r1
   13590:	mov	r6, r8
   13594:	ldr	r0, [r3, r5, lsl #2]
   13598:	mov	r7, r5
   1359c:	cmp	r7, r1
   135a0:	mov	r4, ip
   135a4:	rsbge	r4, lr, #0
   135a8:	subs	r6, r6, #1
   135ac:	add	r7, r4, r7
   135b0:	ldr	r4, [r3, r7, lsl #2]
   135b4:	str	r0, [r3, r7, lsl #2]
   135b8:	mov	r0, r4
   135bc:	str	r4, [r3, r5, lsl #2]
   135c0:	bne	1359c <getopt_long_only@@Base+0x94>
   135c4:	add	r2, r2, #1
   135c8:	cmp	r2, r9
   135cc:	bne	13584 <getopt_long_only@@Base+0x7c>
   135d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   135d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135d8:	add	fp, sp, #28
   135dc:	sub	sp, sp, #36	; 0x24
   135e0:	str	r3, [sp, #16]
   135e4:	mov	r8, r0
   135e8:	mov	r5, r2
   135ec:	mov	sl, r1
   135f0:	ldr	r0, [pc, #980]	; 139cc <getopt_long_only@@Base+0x4c4>
   135f4:	ldr	r0, [pc, r0]
   135f8:	ldr	r4, [pc, #976]	; 139d0 <getopt_long_only@@Base+0x4c8>
   135fc:	ldr	r4, [pc, r4]
   13600:	cmp	r0, #2
   13604:	bhi	13618 <getopt_long_only@@Base+0x110>
   13608:	ldr	r1, [pc, #968]	; 139d8 <getopt_long_only@@Base+0x4d0>
   1360c:	add	r1, pc, r1
   13610:	ldr	r9, [r1, r0, lsl #2]
   13614:	b	13620 <getopt_long_only@@Base+0x118>
   13618:	ldr	r9, [pc, #948]	; 139d4 <getopt_long_only@@Base+0x4cc>
   1361c:	add	r9, pc, r9
   13620:	ldr	r0, [pc, #948]	; 139dc <getopt_long_only@@Base+0x4d4>
   13624:	mov	r1, #61	; 0x3d
   13628:	ldr	r0, [pc, r0]
   1362c:	ldr	r7, [r0]
   13630:	add	r6, r7, #1
   13634:	str	r6, [r0]
   13638:	mov	r0, r4
   1363c:	bl	11008 <strchr@plt>
   13640:	cmp	r0, #0
   13644:	str	r7, [sp, #24]
   13648:	stm	sp, {r6, r8}
   1364c:	beq	1365c <getopt_long_only@@Base+0x154>
   13650:	sub	r6, r0, r4
   13654:	add	r0, r0, #1
   13658:	b	1366c <getopt_long_only@@Base+0x164>
   1365c:	mov	r0, r4
   13660:	bl	10ffc <strlen@plt>
   13664:	mov	r6, r0
   13668:	mov	r0, #0
   1366c:	ldr	r8, [r5]
   13670:	ldr	r1, [fp, #8]
   13674:	mov	r7, sl
   13678:	cmp	r8, #0
   1367c:	beq	13830 <getopt_long_only@@Base+0x328>
   13680:	str	r0, [sp, #8]
   13684:	ldr	r0, [fp, #12]
   13688:	sub	r2, r6, #1
   1368c:	cmp	r1, #0
   13690:	str	r9, [sp, #12]
   13694:	str	r7, [sp, #20]
   13698:	mvn	sl, #0
   1369c:	mov	r9, #0
   136a0:	clz	r2, r2
   136a4:	movwne	r1, #1
   136a8:	lsr	r2, r2, #5
   136ac:	and	r7, r1, r2
   136b0:	and	r0, r0, #4
   136b4:	str	r0, [sp, #28]
   136b8:	mov	r0, #0
   136bc:	str	r0, [sp, #32]
   136c0:	mov	r0, r4
   136c4:	mov	r1, r8
   136c8:	mov	r2, r6
   136cc:	bl	110e0 <strncmp@plt>
   136d0:	cmp	r0, #0
   136d4:	bne	1374c <getopt_long_only@@Base+0x244>
   136d8:	mov	r0, r8
   136dc:	bl	10ffc <strlen@plt>
   136e0:	cmp	r0, r6
   136e4:	beq	137ac <getopt_long_only@@Base+0x2a4>
   136e8:	cmp	r7, #0
   136ec:	bne	1374c <getopt_long_only@@Base+0x244>
   136f0:	cmn	sl, #1
   136f4:	beq	13748 <getopt_long_only@@Base+0x240>
   136f8:	ldr	r0, [sp, #28]
   136fc:	cmp	r0, #0
   13700:	bne	1373c <getopt_long_only@@Base+0x234>
   13704:	add	r0, r5, sl, lsl #4
   13708:	add	r1, r5, r9, lsl #4
   1370c:	ldr	r2, [r0, #4]
   13710:	ldr	r3, [r1, #4]
   13714:	cmp	r3, r2
   13718:	bne	1373c <getopt_long_only@@Base+0x234>
   1371c:	ldr	r2, [r0, #8]
   13720:	ldr	r3, [r1, #8]
   13724:	cmp	r3, r2
   13728:	bne	1373c <getopt_long_only@@Base+0x234>
   1372c:	ldr	r0, [r0, #12]
   13730:	ldr	r1, [r1, #12]
   13734:	cmp	r1, r0
   13738:	beq	1374c <getopt_long_only@@Base+0x244>
   1373c:	mov	r0, #1
   13740:	str	r0, [sp, #32]
   13744:	b	1374c <getopt_long_only@@Base+0x244>
   13748:	mov	sl, r9
   1374c:	add	r0, r5, r9, lsl #4
   13750:	add	r9, r9, #1
   13754:	ldr	r8, [r0, #16]
   13758:	cmp	r8, #0
   1375c:	bne	136c0 <getopt_long_only@@Base+0x1b8>
   13760:	ldr	r0, [sp, #32]
   13764:	cmp	r0, #0
   13768:	beq	137c0 <getopt_long_only@@Base+0x2b8>
   1376c:	ldr	r0, [pc, #620]	; 139e0 <getopt_long_only@@Base+0x4d8>
   13770:	ldr	r0, [pc, r0]
   13774:	ldr	r0, [r0]
   13778:	cmp	r0, #0
   1377c:	beq	1386c <getopt_long_only@@Base+0x364>
   13780:	ldr	r0, [sp, #20]
   13784:	ldrb	r0, [r0]
   13788:	cmp	r0, #58	; 0x3a
   1378c:	beq	1386c <getopt_long_only@@Base+0x364>
   13790:	ldr	r0, [pc, #588]	; 139e4 <getopt_long_only@@Base+0x4dc>
   13794:	ldr	r1, [sp, #12]
   13798:	mov	r2, r6
   1379c:	mov	r3, r4
   137a0:	add	r0, pc, r0
   137a4:	bl	11014 <warnx@plt>
   137a8:	b	1386c <getopt_long_only@@Base+0x364>
   137ac:	mov	sl, r9
   137b0:	ldr	r7, [sp, #20]
   137b4:	ldr	r9, [sp, #12]
   137b8:	ldr	r2, [sp, #8]
   137bc:	b	137d8 <getopt_long_only@@Base+0x2d0>
   137c0:	ldr	r7, [sp, #20]
   137c4:	ldr	r9, [sp, #12]
   137c8:	ldr	r2, [sp, #8]
   137cc:	ldr	r1, [fp, #8]
   137d0:	cmn	sl, #1
   137d4:	beq	13830 <getopt_long_only@@Base+0x328>
   137d8:	add	r5, r5, sl, lsl #4
   137dc:	cmp	r2, #0
   137e0:	mov	r0, r5
   137e4:	ldr	r1, [r0, #4]!
   137e8:	beq	13888 <getopt_long_only@@Base+0x380>
   137ec:	cmp	r1, #0
   137f0:	bne	13888 <getopt_long_only@@Base+0x380>
   137f4:	ldr	r0, [pc, #496]	; 139ec <getopt_long_only@@Base+0x4e4>
   137f8:	ldr	r0, [pc, r0]
   137fc:	ldr	r0, [r0]
   13800:	cmp	r0, #0
   13804:	ldrbne	r0, [r7]
   13808:	cmpne	r0, #58	; 0x3a
   1380c:	bne	138c8 <getopt_long_only@@Base+0x3c0>
   13810:	ldr	r1, [r5, #8]
   13814:	mov	r0, #0
   13818:	cmp	r1, #0
   1381c:	ldreq	r0, [r5, #12]
   13820:	ldr	r1, [pc, #460]	; 139f4 <getopt_long_only@@Base+0x4ec>
   13824:	ldr	r1, [pc, r1]
   13828:	str	r0, [r1]
   1382c:	b	1387c <getopt_long_only@@Base+0x374>
   13830:	cmp	r1, #0
   13834:	beq	13850 <getopt_long_only@@Base+0x348>
   13838:	ldr	r0, [pc, #472]	; 13a18 <getopt_long_only@@Base+0x510>
   1383c:	ldr	r0, [pc, r0]
   13840:	ldr	r1, [sp, #24]
   13844:	str	r1, [r0]
   13848:	mvn	r0, #0
   1384c:	b	13880 <getopt_long_only@@Base+0x378>
   13850:	ldr	r0, [pc, #452]	; 13a1c <getopt_long_only@@Base+0x514>
   13854:	ldr	r0, [pc, r0]
   13858:	ldr	r0, [r0]
   1385c:	cmp	r0, #0
   13860:	ldrbne	r0, [r7]
   13864:	cmpne	r0, #58	; 0x3a
   13868:	bne	138b0 <getopt_long_only@@Base+0x3a8>
   1386c:	ldr	r0, [pc, #372]	; 139e8 <getopt_long_only@@Base+0x4e0>
   13870:	mov	r1, #0
   13874:	ldr	r0, [pc, r0]
   13878:	str	r1, [r0]
   1387c:	mov	r0, #63	; 0x3f
   13880:	sub	sp, fp, #28
   13884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13888:	sub	r2, r1, #1
   1388c:	cmp	r2, #1
   13890:	bhi	13934 <getopt_long_only@@Base+0x42c>
   13894:	ldr	r2, [sp, #8]
   13898:	cmp	r2, #0
   1389c:	beq	138e4 <getopt_long_only@@Base+0x3dc>
   138a0:	ldr	r0, [pc, #336]	; 139f8 <getopt_long_only@@Base+0x4f0>
   138a4:	ldr	r0, [pc, r0]
   138a8:	str	r2, [r0]
   138ac:	b	1391c <getopt_long_only@@Base+0x414>
   138b0:	ldr	r0, [pc, #360]	; 13a20 <getopt_long_only@@Base+0x518>
   138b4:	mov	r1, r9
   138b8:	mov	r2, r4
   138bc:	add	r0, pc, r0
   138c0:	bl	11014 <warnx@plt>
   138c4:	b	1386c <getopt_long_only@@Base+0x364>
   138c8:	ldr	r0, [pc, #288]	; 139f0 <getopt_long_only@@Base+0x4e8>
   138cc:	mov	r1, r9
   138d0:	mov	r2, r6
   138d4:	mov	r3, r4
   138d8:	add	r0, pc, r0
   138dc:	bl	11014 <warnx@plt>
   138e0:	b	13810 <getopt_long_only@@Base+0x308>
   138e4:	cmp	r1, #1
   138e8:	bne	13934 <getopt_long_only@@Base+0x42c>
   138ec:	ldr	r1, [sp, #24]
   138f0:	ldr	r2, [pc, #260]	; 139fc <getopt_long_only@@Base+0x4f4>
   138f4:	ldr	r2, [pc, r2]
   138f8:	add	r1, r1, #2
   138fc:	str	r1, [r2]
   13900:	ldr	r1, [sp, #4]
   13904:	ldr	r2, [sp]
   13908:	ldr	r1, [r1, r2, lsl #2]
   1390c:	ldr	r2, [pc, #236]	; 13a00 <getopt_long_only@@Base+0x4f8>
   13910:	ldr	r2, [pc, r2]
   13914:	str	r1, [r2]
   13918:	ldr	r1, [r0]
   1391c:	cmp	r1, #1
   13920:	ldreq	r0, [pc, #220]	; 13a04 <getopt_long_only@@Base+0x4fc>
   13924:	ldreq	r0, [pc, r0]
   13928:	ldreq	r0, [r0]
   1392c:	cmpeq	r0, #0
   13930:	beq	13958 <getopt_long_only@@Base+0x450>
   13934:	ldr	r0, [sp, #16]
   13938:	cmp	r0, #0
   1393c:	strne	sl, [r0]
   13940:	ldr	r1, [r5, #8]
   13944:	ldr	r0, [r5, #12]
   13948:	cmp	r1, #0
   1394c:	strne	r0, [r1]
   13950:	movne	r0, #0
   13954:	b	13880 <getopt_long_only@@Base+0x378>
   13958:	ldr	r0, [pc, #168]	; 13a08 <getopt_long_only@@Base+0x500>
   1395c:	ldr	r0, [pc, r0]
   13960:	ldr	r0, [r0]
   13964:	cmp	r0, #0
   13968:	ldrbne	r0, [r7]
   1396c:	cmpne	r0, #58	; 0x3a
   13970:	beq	13988 <getopt_long_only@@Base+0x480>
   13974:	ldr	r0, [pc, #144]	; 13a0c <getopt_long_only@@Base+0x504>
   13978:	mov	r1, r9
   1397c:	mov	r2, r4
   13980:	add	r0, pc, r0
   13984:	bl	11014 <warnx@plt>
   13988:	ldr	r1, [r5, #8]
   1398c:	mov	r0, #0
   13990:	cmp	r1, #0
   13994:	ldreq	r0, [r5, #12]
   13998:	ldr	r1, [pc, #112]	; 13a10 <getopt_long_only@@Base+0x508>
   1399c:	ldr	r1, [pc, r1]
   139a0:	str	r0, [r1]
   139a4:	ldr	r0, [pc, #104]	; 13a14 <getopt_long_only@@Base+0x50c>
   139a8:	ldr	r0, [pc, r0]
   139ac:	mov	r1, r0
   139b0:	ldr	r0, [r0]
   139b4:	sub	r0, r0, #1
   139b8:	str	r0, [r1]
   139bc:	ldrb	r0, [r7]
   139c0:	cmp	r0, #58	; 0x3a
   139c4:	movwne	r0, #63	; 0x3f
   139c8:	b	13880 <getopt_long_only@@Base+0x378>
   139cc:	andeq	r1, r1, ip, asr #23
   139d0:	andeq	r1, r1, r0, asr #23
   139d4:	ldrdeq	r0, [r0], -r9
   139d8:	ldrdeq	r1, [r1], -r8
   139dc:			; <UNDEFINED> instruction: 0x00011ab4
   139e0:	andeq	r1, r1, r4, ror #18
   139e4:	andeq	r0, r0, r7, asr fp
   139e8:	andeq	r1, r1, ip, ror #16
   139ec:	ldrdeq	r1, [r1], -ip
   139f0:	andeq	r0, r0, ip, lsr sl
   139f4:			; <UNDEFINED> instruction: 0x000118bc
   139f8:	andeq	r1, r1, r0, asr #16
   139fc:	andeq	r1, r1, r8, ror #15
   13a00:	ldrdeq	r1, [r1], -r4
   13a04:	andeq	r1, r1, r0, asr #15
   13a08:	andeq	r1, r1, r8, ror r7
   13a0c:			; <UNDEFINED> instruction: 0x000009be
   13a10:	andeq	r1, r1, r4, asr #14
   13a14:	andeq	r1, r1, r4, lsr r7
   13a18:	andeq	r1, r1, r0, lsr #17
   13a1c:	andeq	r1, r1, r0, lsl #17
   13a20:	andeq	r0, r0, r5, lsr #21
   13a24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13a28:	mov	r7, r0
   13a2c:	ldr	r6, [pc, #72]	; 13a7c <getopt_long_only@@Base+0x574>
   13a30:	ldr	r5, [pc, #72]	; 13a80 <getopt_long_only@@Base+0x578>
   13a34:	add	r6, pc, r6
   13a38:	add	r5, pc, r5
   13a3c:	sub	r6, r6, r5
   13a40:	mov	r8, r1
   13a44:	mov	r9, r2
   13a48:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   13a4c:	asrs	r6, r6, #2
   13a50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a54:	mov	r4, #0
   13a58:	add	r4, r4, #1
   13a5c:	ldr	r3, [r5], #4
   13a60:	mov	r2, r9
   13a64:	mov	r1, r8
   13a68:	mov	r0, r7
   13a6c:	blx	r3
   13a70:	cmp	r6, r4
   13a74:	bne	13a58 <getopt_long_only@@Base+0x550>
   13a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a7c:	andeq	r1, r1, ip, lsr #9
   13a80:	andeq	r1, r1, r4, lsr #9
   13a84:	bx	lr

Disassembly of section .fini:

00013a88 <.fini>:
   13a88:	push	{r3, lr}
   13a8c:	pop	{r3, pc}
