
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

00010ab4 <.init>:
   10ab4:	push	{r3, lr}
   10ab8:	bl	10cac <getc@plt+0x4c>
   10abc:	pop	{r3, pc}

Disassembly of section .plt:

00010ac0 <calloc@plt-0x14>:
   10ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac4:	ldr	lr, [pc, #4]	; 10ad0 <calloc@plt-0x4>
   10ac8:	add	lr, pc, lr
   10acc:	ldr	pc, [lr, #8]!
   10ad0:	andeq	r4, r1, r0, lsr r5

00010ad4 <calloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1328]!	; 0x530

00010ae0 <strcmp@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1320]!	; 0x528

00010aec <printf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1312]!	; 0x520

00010af8 <fopen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1304]!	; 0x518

00010b04 <free@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1296]!	; 0x510

00010b10 <utf8proc_get_property@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1288]!	; 0x508

00010b1c <fgets@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1280]!	; 0x500

00010b28 <utf8proc_encode_char@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b34 <strdup@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b40 <rewind@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b4c <unlink@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b58 <utf8proc_tolower@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b64 <__xstat@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b70 <fwrite@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b7c <fread@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b88 <utf8proc_iterate@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b94 <__libc_start_main@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010ba0 <__sysv_signal@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bac <__gmon_start__@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bb8 <getpid@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1176]!	; 0x498

00010bc4 <exit@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1168]!	; 0x490

00010bd0 <bcmp@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1160]!	; 0x488

00010bdc <utf8proc_category@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1152]!	; 0x480

00010be8 <strlen@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1144]!	; 0x478

00010bf4 <fprintf@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1136]!	; 0x470

00010c00 <sqrt@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1128]!	; 0x468

00010c0c <__isoc99_sscanf@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #20, 20	; 0x14000
   10c14:	ldr	pc, [ip, #1120]!	; 0x460

00010c18 <fclose@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #20, 20	; 0x14000
   10c20:	ldr	pc, [ip, #1112]!	; 0x458

00010c24 <sprintf@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #20, 20	; 0x14000
   10c2c:	ldr	pc, [ip, #1104]!	; 0x450

00010c30 <utf8proc_errmsg@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #20, 20	; 0x14000
   10c38:	ldr	pc, [ip, #1096]!	; 0x448

00010c3c <fputs@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #20, 20	; 0x14000
   10c44:	ldr	pc, [ip, #1088]!	; 0x440

00010c48 <strncmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #20, 20	; 0x14000
   10c50:	ldr	pc, [ip, #1080]!	; 0x438

00010c54 <abort@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #1072]!	; 0x430

00010c60 <getc@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #1064]!	; 0x428

Disassembly of section .text:

00010c70 <error@@Base-0x17a8>:
   10c70:	mov	fp, #0
   10c74:	mov	lr, #0
   10c78:	pop	{r1}		; (ldr r1, [sp], #4)
   10c7c:	mov	r2, sp
   10c80:	push	{r2}		; (str r2, [sp, #-4]!)
   10c84:	push	{r0}		; (str r0, [sp, #-4]!)
   10c88:	ldr	ip, [pc, #16]	; 10ca0 <getc@plt+0x40>
   10c8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c90:	ldr	r0, [pc, #12]	; 10ca4 <getc@plt+0x44>
   10c94:	ldr	r3, [pc, #12]	; 10ca8 <getc@plt+0x48>
   10c98:	bl	10b94 <__libc_start_main@plt>
   10c9c:	bl	10c54 <abort@plt>
   10ca0:	andeq	r2, r1, ip, asr #31
   10ca4:	andeq	r0, r1, r8, ror #28
   10ca8:	andeq	r2, r1, ip, ror #30
   10cac:	ldr	r3, [pc, #20]	; 10cc8 <getc@plt+0x68>
   10cb0:	ldr	r2, [pc, #20]	; 10ccc <getc@plt+0x6c>
   10cb4:	add	r3, pc, r3
   10cb8:	ldr	r2, [r3, r2]
   10cbc:	cmp	r2, #0
   10cc0:	bxeq	lr
   10cc4:	b	10bac <__gmon_start__@plt>
   10cc8:	andeq	r4, r1, r4, asr #6
   10ccc:	muleq	r0, r4, r0
   10cd0:	ldr	r0, [pc, #24]	; 10cf0 <getc@plt+0x90>
   10cd4:	ldr	r3, [pc, #24]	; 10cf4 <getc@plt+0x94>
   10cd8:	cmp	r3, r0
   10cdc:	bxeq	lr
   10ce0:	ldr	r3, [pc, #16]	; 10cf8 <getc@plt+0x98>
   10ce4:	cmp	r3, #0
   10ce8:	bxeq	lr
   10cec:	bx	r3
   10cf0:	andeq	r5, r2, r8, lsr #1
   10cf4:	andeq	r5, r2, r8, lsr #1
   10cf8:	andeq	r0, r0, r0
   10cfc:	ldr	r0, [pc, #36]	; 10d28 <getc@plt+0xc8>
   10d00:	ldr	r1, [pc, #36]	; 10d2c <getc@plt+0xcc>
   10d04:	sub	r1, r1, r0
   10d08:	asr	r1, r1, #2
   10d0c:	add	r1, r1, r1, lsr #31
   10d10:	asrs	r1, r1, #1
   10d14:	bxeq	lr
   10d18:	ldr	r3, [pc, #16]	; 10d30 <getc@plt+0xd0>
   10d1c:	cmp	r3, #0
   10d20:	bxeq	lr
   10d24:	bx	r3
   10d28:	andeq	r5, r2, r8, lsr #1
   10d2c:	andeq	r5, r2, r8, lsr #1
   10d30:	andeq	r0, r0, r0
   10d34:	push	{r4, lr}
   10d38:	ldr	r4, [pc, #24]	; 10d58 <getc@plt+0xf8>
   10d3c:	ldrb	r3, [r4]
   10d40:	cmp	r3, #0
   10d44:	popne	{r4, pc}
   10d48:	bl	10cd0 <getc@plt+0x70>
   10d4c:	mov	r3, #1
   10d50:	strb	r3, [r4]
   10d54:	pop	{r4, pc}
   10d58:	strheq	r5, [r2], -r8
   10d5c:	b	10cfc <getc@plt+0x9c>
   10d60:	push	{r4, r5, r6, sl, fp, lr}
   10d64:	add	fp, sp, #16
   10d68:	mov	r1, r0
   10d6c:	movw	r4, #21808	; 0x5530
   10d70:	movt	r4, #19
   10d74:	ldm	r4, {r5, r6}
   10d78:	mov	r0, r4
   10d7c:	bl	10fcc <getc@plt+0x36c>
   10d80:	ldm	r4, {r0, r2}
   10d84:	sub	r1, r0, r5
   10d88:	sub	r2, r2, r6
   10d8c:	movw	r0, #31984	; 0x7cf0
   10d90:	movt	r0, #155	; 0x9b
   10d94:	pop	{r4, r5, r6, sl, fp, lr}
   10d98:	b	119e8 <getc@plt+0xd88>
   10d9c:	nop	{0}
   10da0:	push	{r4, sl, fp, lr}
   10da4:	add	fp, sp, #8
   10da8:	sub	sp, sp, #32
   10dac:	movw	r4, #31984	; 0x7cf0
   10db0:	movt	r4, #155	; 0x9b
   10db4:	sub	r1, fp, #16
   10db8:	add	r2, sp, #16
   10dbc:	mov	r0, r4
   10dc0:	bl	11a38 <getc@plt+0xdd8>
   10dc4:	ldr	r1, [r4, #12]
   10dc8:	movw	r0, #12268	; 0x2fec
   10dcc:	movt	r0, #1
   10dd0:	bl	10aec <printf@plt>
   10dd4:	movw	r4, #21808	; 0x5530
   10dd8:	movt	r4, #19
   10ddc:	ldr	r1, [r4]
   10de0:	movw	r0, #12290	; 0x3002
   10de4:	movt	r0, #1
   10de8:	bl	10aec <printf@plt>
   10dec:	ldr	r1, [r4, #4]
   10df0:	movw	r0, #12310	; 0x3016
   10df4:	movt	r0, #1
   10df8:	bl	10aec <printf@plt>
   10dfc:	ldm	r4, {r0, r1}
   10e00:	sub	r1, r0, r1
   10e04:	vldr	d16, [pc, #84]	; 10e60 <getc@plt+0x200>
   10e08:	vmov	s0, r1
   10e0c:	vmov	s2, r0
   10e10:	vcvt.f64.s32	d17, s0
   10e14:	vcvt.f64.s32	d18, s2
   10e18:	vmul.f64	d16, d17, d16
   10e1c:	vdiv.f64	d16, d16, d18
   10e20:	vmov	r2, r3, d16
   10e24:	movw	r0, #12326	; 0x3026
   10e28:	movt	r0, #1
   10e2c:	bl	10aec <printf@plt>
   10e30:	vldr	d16, [fp, #-16]
   10e34:	vldr	d17, [sp, #16]
   10e38:	movw	r0, #12367	; 0x304f
   10e3c:	movt	r0, #1
   10e40:	str	r0, [sp, #8]
   10e44:	vstr	d17, [sp]
   10e48:	vmov	r2, r3, d16
   10e4c:	movw	r0, #12346	; 0x303a
   10e50:	movt	r0, #1
   10e54:	bl	10aec <printf@plt>
   10e58:	sub	sp, fp, #8
   10e5c:	pop	{r4, sl, fp, pc}
   10e60:	andeq	r0, r0, r0
   10e64:	subsmi	r0, r9, r0
   10e68:	push	{fp, lr}
   10e6c:	mov	fp, sp
   10e70:	sub	sp, sp, #8
   10e74:	mov	r4, r1
   10e78:	str	r0, [sp, #4]
   10e7c:	add	r0, sp, #4
   10e80:	movw	r2, #12416	; 0x3080
   10e84:	movt	r2, #1
   10e88:	mov	r3, #0
   10e8c:	bl	12294 <getc@plt+0x1634>
   10e90:	ldr	r0, [sp, #4]
   10e94:	cmp	r0, #2
   10e98:	blt	10ecc <getc@plt+0x26c>
   10e9c:	ldr	r0, [sp, #4]
   10ea0:	cmp	r0, #1
   10ea4:	blt	10ec4 <getc@plt+0x264>
   10ea8:	mov	r5, #0
   10eac:	ldr	r0, [r4, r5, lsl #2]
   10eb0:	bl	10d60 <getc@plt+0x100>
   10eb4:	add	r5, r5, #1
   10eb8:	ldr	r0, [sp, #4]
   10ebc:	cmp	r5, r0
   10ec0:	blt	10eac <getc@plt+0x24c>
   10ec4:	bl	10da0 <getc@plt+0x140>
   10ec8:	bl	123d8 <getc@plt+0x1778>
   10ecc:	movw	r0, #12466	; 0x30b2
   10ed0:	movt	r0, #1
   10ed4:	bl	12418 <error@@Base>
   10ed8:	push	{r4, r5, r6, r7, fp, lr}
   10edc:	add	fp, sp, #16
   10ee0:	mov	r4, r3
   10ee4:	mov	r5, r2
   10ee8:	mov	r6, r1
   10eec:	mov	r7, r0
   10ef0:	mov	r0, r1
   10ef4:	bl	11eb8 <getc@plt+0x1258>
   10ef8:	add	r0, r7, r0, lsl #3
   10efc:	add	r0, r0, #68	; 0x44
   10f00:	mov	r1, r5
   10f04:	mov	r2, r4
   10f08:	bl	10f3c <getc@plt+0x2dc>
   10f0c:	movw	r0, #2116	; 0x844
   10f10:	add	r0, r7, r0
   10f14:	mov	r1, r5
   10f18:	mov	r2, r4
   10f1c:	bl	10f3c <getc@plt+0x2dc>
   10f20:	add	r0, r7, r6, lsl #3
   10f24:	movw	r1, #10180	; 0x27c4
   10f28:	add	r0, r0, r1
   10f2c:	mov	r1, r5
   10f30:	mov	r2, r4
   10f34:	pop	{r4, r5, r6, r7, fp, lr}
   10f38:	b	10f3c <getc@plt+0x2dc>
   10f3c:	ldm	r0, {r3, ip}
   10f40:	add	r1, r3, r1
   10f44:	add	r2, ip, r2
   10f48:	stm	r0, {r1, r2}
   10f4c:	bx	lr
   10f50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f54:	add	fp, sp, #24
   10f58:	mov	r8, r3
   10f5c:	mov	r5, r2
   10f60:	mov	r7, r1
   10f64:	movw	r1, #2124	; 0x84c
   10f68:	add	r6, r0, r1
   10f6c:	mov	r0, r6
   10f70:	mov	r1, r7
   10f74:	bl	11c9c <getc@plt+0x103c>
   10f78:	cmp	r0, #0
   10f7c:	beq	10f9c <getc@plt+0x33c>
   10f80:	ldr	r1, [r0, #12]
   10f84:	ldr	r2, [r0, #16]
   10f88:	add	r1, r1, r5
   10f8c:	add	r2, r2, r8
   10f90:	str	r1, [r0, #12]
   10f94:	str	r2, [r0, #16]
   10f98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f9c:	mov	r0, #1
   10fa0:	mov	r1, #20
   10fa4:	bl	12064 <getc@plt+0x1404>
   10fa8:	mov	r4, r0
   10fac:	mov	r0, r7
   10fb0:	bl	10b34 <strdup@plt>
   10fb4:	add	r1, r4, #8
   10fb8:	stm	r1, {r0, r5, r8}
   10fbc:	mov	r0, r6
   10fc0:	mov	r1, r4
   10fc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fc8:	b	11d44 <getc@plt+0x10e4>
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd0:	add	fp, sp, #28
   10fd4:	sub	sp, sp, #20
   10fd8:	mov	r7, r1
   10fdc:	mov	sl, r0
   10fe0:	movw	r1, #15909	; 0x3e25
   10fe4:	movt	r1, #1
   10fe8:	mov	r0, r7
   10fec:	bl	12108 <getc@plt+0x14a8>
   10ff0:	mov	r5, r0
   10ff4:	bl	112d4 <getc@plt+0x674>
   10ff8:	cmp	r0, #0
   10ffc:	beq	112b8 <getc@plt+0x658>
   11000:	movw	r0, #20665	; 0x50b9
   11004:	movt	r0, #2
   11008:	movw	r1, #12489	; 0x30c9
   1100c:	movt	r1, #1
   11010:	mov	r2, #40	; 0x28
   11014:	bl	10bd0 <bcmp@plt>
   11018:	cmp	r0, #0
   1101c:	bne	112b8 <getc@plt+0x658>
   11020:	mov	r0, r5
   11024:	bl	112d4 <getc@plt+0x674>
   11028:	cmp	r0, #0
   1102c:	beq	112b8 <getc@plt+0x658>
   11030:	movw	r9, #20665	; 0x50b9
   11034:	movt	r9, #2
   11038:	movw	r1, #15844	; 0x3de4
   1103c:	movt	r1, #1
   11040:	mov	r0, r9
   11044:	mov	r2, #43	; 0x2b
   11048:	bl	10bd0 <bcmp@plt>
   1104c:	cmp	r0, #0
   11050:	bne	112b8 <getc@plt+0x658>
   11054:	add	r1, sp, #16
   11058:	mov	r0, r5
   1105c:	mov	r2, sl
   11060:	bl	112fc <getc@plt+0x69c>
   11064:	cmp	r0, #0
   11068:	beq	112b8 <getc@plt+0x658>
   1106c:	add	r2, sl, #4
   11070:	add	r1, sp, #12
   11074:	mov	r0, r5
   11078:	bl	112fc <getc@plt+0x69c>
   1107c:	cmp	r0, #0
   11080:	beq	112b8 <getc@plt+0x658>
   11084:	mov	r0, r5
   11088:	bl	112d4 <getc@plt+0x674>
   1108c:	cmp	r0, #0
   11090:	beq	112b8 <getc@plt+0x658>
   11094:	mov	r0, r5
   11098:	bl	112d4 <getc@plt+0x674>
   1109c:	cmp	r0, #0
   110a0:	beq	112b8 <getc@plt+0x658>
   110a4:	add	r2, sl, #8
   110a8:	add	r1, sp, #8
   110ac:	mov	r0, r5
   110b0:	bl	112fc <getc@plt+0x69c>
   110b4:	cmp	r0, #0
   110b8:	beq	112b8 <getc@plt+0x658>
   110bc:	add	r2, sl, #12
   110c0:	add	r1, sp, #8
   110c4:	mov	r0, r5
   110c8:	bl	112fc <getc@plt+0x69c>
   110cc:	cmp	r0, #0
   110d0:	beq	112b8 <getc@plt+0x658>
   110d4:	add	r2, sl, #16
   110d8:	add	r1, sp, #8
   110dc:	mov	r0, r5
   110e0:	bl	112fc <getc@plt+0x69c>
   110e4:	cmp	r0, #0
   110e8:	beq	112b8 <getc@plt+0x658>
   110ec:	mov	r0, r5
   110f0:	bl	112d4 <getc@plt+0x674>
   110f4:	cmp	r0, #0
   110f8:	beq	112b8 <getc@plt+0x658>
   110fc:	mov	r0, r5
   11100:	bl	112d4 <getc@plt+0x674>
   11104:	cmp	r0, #0
   11108:	beq	112b8 <getc@plt+0x658>
   1110c:	mov	r0, r5
   11110:	bl	112d4 <getc@plt+0x674>
   11114:	cmp	r0, #0
   11118:	beq	112b8 <getc@plt+0x658>
   1111c:	mov	r0, r5
   11120:	bl	112d4 <getc@plt+0x674>
   11124:	cmp	r0, #0
   11128:	beq	112b8 <getc@plt+0x658>
   1112c:	add	r1, sl, #20
   11130:	mov	r0, r5
   11134:	bl	11358 <getc@plt+0x6f8>
   11138:	cmp	r0, #0
   1113c:	beq	112b8 <getc@plt+0x658>
   11140:	add	r1, sl, #36	; 0x24
   11144:	mov	r0, r5
   11148:	bl	11358 <getc@plt+0x6f8>
   1114c:	cmp	r0, #0
   11150:	beq	112b8 <getc@plt+0x658>
   11154:	add	r1, sl, #52	; 0x34
   11158:	mov	r0, r5
   1115c:	bl	11358 <getc@plt+0x6f8>
   11160:	cmp	r0, #0
   11164:	beq	112b8 <getc@plt+0x658>
   11168:	mov	r0, r5
   1116c:	bl	112d4 <getc@plt+0x674>
   11170:	cmp	r0, #0
   11174:	beq	112b8 <getc@plt+0x658>
   11178:	mov	r0, r5
   1117c:	bl	112d4 <getc@plt+0x674>
   11180:	cmp	r0, #0
   11184:	ldrbne	r0, [r9]
   11188:	cmpne	r0, #10
   1118c:	bne	11178 <getc@plt+0x518>
   11190:	ldr	r0, [sp, #12]
   11194:	cmp	r0, #1
   11198:	blt	111fc <getc@plt+0x59c>
   1119c:	mov	r0, r5
   111a0:	bl	112d4 <getc@plt+0x674>
   111a4:	cmp	r0, #0
   111a8:	beq	111fc <getc@plt+0x59c>
   111ac:	add	r1, sp, #8
   111b0:	add	r2, sp, #4
   111b4:	mov	r0, r5
   111b8:	bl	113e4 <getc@plt+0x784>
   111bc:	cmp	r0, #0
   111c0:	beq	111fc <getc@plt+0x59c>
   111c4:	add	r7, r9, #20
   111c8:	add	r4, sp, #8
   111cc:	add	r6, sp, #4
   111d0:	ldr	r3, [sp, #4]
   111d4:	ldr	r2, [sp, #8]
   111d8:	mov	r0, sl
   111dc:	mov	r1, r7
   111e0:	bl	10f50 <getc@plt+0x2f0>
   111e4:	mov	r0, r5
   111e8:	mov	r1, r4
   111ec:	mov	r2, r6
   111f0:	bl	113e4 <getc@plt+0x784>
   111f4:	cmp	r0, #0
   111f8:	bne	111d0 <getc@plt+0x570>
   111fc:	ldr	r0, [sp, #16]
   11200:	cmp	r0, #1
   11204:	blt	112a8 <getc@plt+0x648>
   11208:	mov	r0, r5
   1120c:	bl	112d4 <getc@plt+0x674>
   11210:	cmp	r0, #0
   11214:	beq	112a8 <getc@plt+0x648>
   11218:	add	r1, sp, #8
   1121c:	add	r2, sp, #4
   11220:	mov	r0, r5
   11224:	bl	113e4 <getc@plt+0x784>
   11228:	cmp	r0, #0
   1122c:	beq	112a8 <getc@plt+0x648>
   11230:	add	r8, sp, #8
   11234:	add	r7, sp, #4
   11238:	add	r6, r9, #31
   1123c:	mov	r4, sp
   11240:	b	11274 <getc@plt+0x614>
   11244:	mov	r0, #10
   11248:	str	r0, [sp]
   1124c:	ldr	r2, [sp, #8]
   11250:	ldm	sp, {r1, r3}
   11254:	mov	r0, sl
   11258:	bl	10ed8 <getc@plt+0x278>
   1125c:	mov	r0, r5
   11260:	mov	r1, r8
   11264:	mov	r2, r7
   11268:	bl	113e4 <getc@plt+0x784>
   1126c:	cmp	r0, #0
   11270:	beq	112a8 <getc@plt+0x648>
   11274:	ldrb	r0, [r9, #31]
   11278:	cmp	r0, #92	; 0x5c
   1127c:	beq	11244 <getc@plt+0x5e4>
   11280:	cmp	r0, #125	; 0x7d
   11284:	bne	11290 <getc@plt+0x630>
   11288:	ldrb	r0, [r9, #30]
   1128c:	b	11248 <getc@plt+0x5e8>
   11290:	mov	r0, r6
   11294:	movw	r1, #12532	; 0x30f4
   11298:	movt	r1, #1
   1129c:	mov	r2, r4
   112a0:	bl	10c0c <__isoc99_sscanf@plt>
   112a4:	b	1124c <getc@plt+0x5ec>
   112a8:	mov	r0, r5
   112ac:	bl	12180 <getc@plt+0x1520>
   112b0:	sub	sp, fp, #28
   112b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112b8:	movw	r1, #12554	; 0x310a
   112bc:	movt	r1, #1
   112c0:	cmp	r7, #0
   112c4:	movne	r1, r7
   112c8:	movw	r0, #12536	; 0x30f8
   112cc:	movt	r0, #1
   112d0:	bl	12458 <error@@Base+0x40>
   112d4:	push	{fp, lr}
   112d8:	mov	fp, sp
   112dc:	mov	r2, r0
   112e0:	movw	r0, #20665	; 0x50b9
   112e4:	movt	r0, #2
   112e8:	mov	r1, #99	; 0x63
   112ec:	bl	10b1c <fgets@plt>
   112f0:	cmp	r0, #0
   112f4:	movwne	r0, #1
   112f8:	pop	{fp, pc}
   112fc:	push	{r4, r5, r6, sl, fp, lr}
   11300:	add	fp, sp, #16
   11304:	mov	r4, r2
   11308:	mov	r5, r1
   1130c:	bl	112d4 <getc@plt+0x674>
   11310:	mov	r6, #0
   11314:	cmp	r0, #0
   11318:	beq	11350 <getc@plt+0x6f0>
   1131c:	movw	r0, #20665	; 0x50b9
   11320:	movt	r0, #2
   11324:	movw	r1, #12829	; 0x321d
   11328:	movt	r1, #1
   1132c:	mov	r2, r5
   11330:	bl	10c0c <__isoc99_sscanf@plt>
   11334:	cmp	r0, #1
   11338:	bne	11350 <getc@plt+0x6f0>
   1133c:	ldr	r0, [r5]
   11340:	ldr	r1, [r4]
   11344:	add	r0, r1, r0
   11348:	str	r0, [r4]
   1134c:	mov	r6, #1
   11350:	mov	r0, r6
   11354:	pop	{r4, r5, r6, sl, fp, pc}
   11358:	push	{r4, r5, fp, lr}
   1135c:	add	fp, sp, #8
   11360:	sub	sp, sp, #24
   11364:	mov	r4, r1
   11368:	bl	112d4 <getc@plt+0x674>
   1136c:	mov	r5, #0
   11370:	cmp	r0, #0
   11374:	beq	113d8 <getc@plt+0x778>
   11378:	add	r2, sp, #8
   1137c:	add	r0, r2, #12
   11380:	add	r1, r2, #8
   11384:	str	r1, [sp]
   11388:	str	r0, [sp, #4]
   1138c:	add	r3, r2, #4
   11390:	movw	r0, #20665	; 0x50b9
   11394:	movt	r0, #2
   11398:	movw	r1, #12817	; 0x3211
   1139c:	movt	r1, #1
   113a0:	bl	10c0c <__isoc99_sscanf@plt>
   113a4:	cmp	r0, #4
   113a8:	bne	113d8 <getc@plt+0x778>
   113ac:	ldm	r4, {r0, r1, r2, r3}
   113b0:	ldr	r5, [sp, #8]
   113b4:	add	r0, r0, r5
   113b8:	ldr	r5, [sp, #12]
   113bc:	add	r1, r1, r5
   113c0:	ldr	r5, [sp, #16]
   113c4:	add	r2, r2, r5
   113c8:	ldr	r5, [sp, #20]
   113cc:	add	r3, r3, r5
   113d0:	stm	r4, {r0, r1, r2, r3}
   113d4:	mov	r5, #1
   113d8:	mov	r0, r5
   113dc:	sub	sp, fp, #8
   113e0:	pop	{r4, r5, fp, pc}
   113e4:	push	{r4, r5, fp, lr}
   113e8:	add	fp, sp, #8
   113ec:	mov	r4, r2
   113f0:	mov	r5, r1
   113f4:	bl	112d4 <getc@plt+0x674>
   113f8:	cmp	r0, #0
   113fc:	beq	1142c <getc@plt+0x7cc>
   11400:	movw	r0, #20665	; 0x50b9
   11404:	movt	r0, #2
   11408:	movw	r1, #12825	; 0x3219
   1140c:	movt	r1, #1
   11410:	mov	r2, r5
   11414:	mov	r3, r4
   11418:	bl	10c0c <__isoc99_sscanf@plt>
   1141c:	sub	r0, r0, #2
   11420:	clz	r0, r0
   11424:	lsr	r0, r0, #5
   11428:	pop	{r4, r5, fp, pc}
   1142c:	mov	r0, #0
   11430:	pop	{r4, r5, fp, pc}
   11434:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11438:	add	fp, sp, #24
   1143c:	mov	r2, r1
   11440:	mov	r8, r0
   11444:	movw	r1, #13429	; 0x3475
   11448:	movt	r1, #1
   1144c:	mov	r0, r2
   11450:	bl	12108 <getc@plt+0x14a8>
   11454:	mov	r4, r0
   11458:	movw	r1, #12560	; 0x3110
   1145c:	movt	r1, #1
   11460:	movw	r2, #12489	; 0x30c9
   11464:	movt	r2, #1
   11468:	movw	r3, #15844	; 0x3de4
   1146c:	movt	r3, #1
   11470:	bl	10bf4 <fprintf@plt>
   11474:	ldr	r1, [r8]
   11478:	movw	r2, #13159	; 0x3367
   1147c:	movt	r2, #1
   11480:	mov	r0, r4
   11484:	bl	11700 <getc@plt+0xaa0>
   11488:	ldr	r1, [r8, #4]
   1148c:	movw	r2, #12565	; 0x3115
   11490:	movt	r2, #1
   11494:	mov	r0, r4
   11498:	bl	11700 <getc@plt+0xaa0>
   1149c:	ldr	r2, [r8]
   114a0:	ldr	r0, [r8, #4]
   114a4:	sub	r1, r2, r0
   114a8:	mov	r0, r4
   114ac:	bl	11718 <getc@plt+0xab8>
   114b0:	movw	r1, #12572	; 0x311c
   114b4:	movt	r1, #1
   114b8:	mov	r0, r4
   114bc:	bl	10bf4 <fprintf@plt>
   114c0:	ldr	r1, [r8, #8]
   114c4:	movw	r2, #12587	; 0x312b
   114c8:	movt	r2, #1
   114cc:	mov	r0, r4
   114d0:	bl	11700 <getc@plt+0xaa0>
   114d4:	ldr	r1, [r8, #12]
   114d8:	movw	r2, #12605	; 0x313d
   114dc:	movt	r2, #1
   114e0:	mov	r0, r4
   114e4:	bl	11700 <getc@plt+0xaa0>
   114e8:	ldr	r1, [r8, #16]
   114ec:	movw	r2, #12621	; 0x314d
   114f0:	movt	r2, #1
   114f4:	mov	r0, r4
   114f8:	bl	11700 <getc@plt+0xaa0>
   114fc:	ldr	r2, [r8]
   11500:	ldr	r0, [r8, #8]
   11504:	ldr	r1, [r8, #12]
   11508:	add	r1, r1, r0
   1150c:	mov	r0, r4
   11510:	bl	11718 <getc@plt+0xab8>
   11514:	movw	r1, #12633	; 0x3159
   11518:	movt	r1, #1
   1151c:	mov	r0, r4
   11520:	bl	10bf4 <fprintf@plt>
   11524:	ldr	r2, [r8]
   11528:	ldr	r0, [r8, #48]	; 0x30
   1152c:	sub	r1, r2, r0
   11530:	mov	r0, r4
   11534:	bl	11718 <getc@plt+0xab8>
   11538:	movw	r1, #12656	; 0x3170
   1153c:	movt	r1, #1
   11540:	mov	r0, r4
   11544:	bl	10bf4 <fprintf@plt>
   11548:	movw	r0, #12687	; 0x318f
   1154c:	movt	r0, #1
   11550:	mov	r1, #37	; 0x25
   11554:	mov	r2, #1
   11558:	mov	r3, r4
   1155c:	bl	10b70 <fwrite@plt>
   11560:	add	r1, r8, #20
   11564:	movw	r2, #12725	; 0x31b5
   11568:	movt	r2, #1
   1156c:	mov	r0, r4
   11570:	bl	11778 <getc@plt+0xb18>
   11574:	add	r1, r8, #36	; 0x24
   11578:	movw	r2, #12732	; 0x31bc
   1157c:	movt	r2, #1
   11580:	mov	r0, r4
   11584:	bl	11778 <getc@plt+0xb18>
   11588:	add	r1, r8, #52	; 0x34
   1158c:	movw	r2, #12741	; 0x31c5
   11590:	movt	r2, #1
   11594:	mov	r0, r4
   11598:	bl	11778 <getc@plt+0xb18>
   1159c:	movw	r1, #12747	; 0x31cb
   115a0:	movt	r1, #1
   115a4:	mov	r0, r4
   115a8:	bl	10bf4 <fprintf@plt>
   115ac:	movw	r0, #10172	; 0x27bc
   115b0:	add	r7, r8, r0
   115b4:	add	r6, r8, #68	; 0x44
   115b8:	mvn	r5, #255	; 0xff
   115bc:	b	115cc <getc@plt+0x96c>
   115c0:	add	r6, r6, #8
   115c4:	adds	r5, r5, #1
   115c8:	bcs	115f8 <getc@plt+0x998>
   115cc:	ldr	r0, [r6]
   115d0:	cmp	r0, #1
   115d4:	blt	115c0 <getc@plt+0x960>
   115d8:	add	r0, r5, #256	; 0x100
   115dc:	bl	11ee8 <getc@plt+0x1288>
   115e0:	mov	r2, r0
   115e4:	mov	r0, r4
   115e8:	mov	r1, r6
   115ec:	mov	r3, #0
   115f0:	bl	117b0 <getc@plt+0xb50>
   115f4:	b	115c0 <getc@plt+0x960>
   115f8:	movw	r0, #2116	; 0x844
   115fc:	add	r1, r8, r0
   11600:	movw	r2, #12741	; 0x31c5
   11604:	movt	r2, #1
   11608:	mov	r0, r4
   1160c:	mov	r3, #0
   11610:	bl	117b0 <getc@plt+0xb50>
   11614:	ldr	r0, [r8, #4]
   11618:	cmp	r0, #1
   1161c:	blt	11688 <getc@plt+0xa28>
   11620:	movw	r0, #2124	; 0x84c
   11624:	add	r0, r8, r0
   11628:	bl	11df0 <getc@plt+0x1190>
   1162c:	ldr	r1, [r7]
   11630:	ldr	r0, [r7, #4]
   11634:	movw	r2, #6200	; 0x1838
   11638:	movt	r2, #1
   1163c:	bl	1189c <getc@plt+0xc3c>
   11640:	movw	r0, #12777	; 0x31e9
   11644:	movt	r0, #1
   11648:	mov	r1, #39	; 0x27
   1164c:	mov	r2, #1
   11650:	mov	r3, r4
   11654:	bl	10b70 <fwrite@plt>
   11658:	ldr	r0, [r7, #4]
   1165c:	cmp	r0, #1
   11660:	blt	11688 <getc@plt+0xa28>
   11664:	mov	r5, #0
   11668:	ldr	r0, [r7]
   1166c:	ldr	r1, [r0, r5, lsl #2]
   11670:	mov	r0, r4
   11674:	bl	1186c <getc@plt+0xc0c>
   11678:	add	r5, r5, #1
   1167c:	ldr	r0, [r7, #4]
   11680:	cmp	r5, r0
   11684:	blt	11668 <getc@plt+0xa08>
   11688:	ldr	r0, [r8]
   1168c:	cmp	r0, #1
   11690:	blt	116f4 <getc@plt+0xa94>
   11694:	movw	r1, #12747	; 0x31cb
   11698:	movt	r1, #1
   1169c:	mov	r0, r4
   116a0:	bl	10bf4 <fprintf@plt>
   116a4:	movw	r0, #10180	; 0x27c4
   116a8:	add	r6, r8, r0
   116ac:	mov	r7, #0
   116b0:	movw	r8, #65535	; 0xffff
   116b4:	movt	r8, #16
   116b8:	mov	r5, #0
   116bc:	b	116d0 <getc@plt+0xa70>
   116c0:	add	r7, r7, #8
   116c4:	add	r5, r5, #1
   116c8:	cmp	r5, r8
   116cc:	beq	116f4 <getc@plt+0xa94>
   116d0:	ldr	r0, [r6, r5, lsl #3]
   116d4:	cmp	r0, #1
   116d8:	blt	116c0 <getc@plt+0xa60>
   116dc:	add	r1, r6, r7
   116e0:	mov	r0, r4
   116e4:	mov	r2, #0
   116e8:	mov	r3, r5
   116ec:	bl	117b0 <getc@plt+0xb50>
   116f0:	b	116c0 <getc@plt+0xa60>
   116f4:	mov	r0, r4
   116f8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   116fc:	b	12180 <getc@plt+0x1520>
   11700:	mov	r3, r2
   11704:	mov	r2, r1
   11708:	movw	r1, #12863	; 0x323f
   1170c:	movt	r1, #1
   11710:	b	10bf4 <fprintf@plt>
   11714:	nop	{0}
   11718:	mov	ip, r0
   1171c:	cmp	r2, #0
   11720:	beq	11754 <getc@plt+0xaf4>
   11724:	vldr	d16, [pc, #68]	; 11770 <getc@plt+0xb10>
   11728:	vmov	s0, r1
   1172c:	vcvt.f64.s32	d17, s0
   11730:	vmov	s0, r2
   11734:	vcvt.f64.s32	d18, s0
   11738:	vmul.f64	d16, d17, d16
   1173c:	vdiv.f64	d16, d16, d18
   11740:	vmov	r2, r3, d16
   11744:	movw	r1, #12842	; 0x322a
   11748:	movt	r1, #1
   1174c:	mov	r0, ip
   11750:	b	10bf4 <fprintf@plt>
   11754:	movw	r0, #12833	; 0x3221
   11758:	movt	r0, #1
   1175c:	mov	r1, #8
   11760:	mov	r2, #1
   11764:	mov	r3, ip
   11768:	b	10b70 <fwrite@plt>
   1176c:	nop	{0}
   11770:	andeq	r0, r0, r0
   11774:	subsmi	r0, r9, r0
   11778:	push	{fp, lr}
   1177c:	mov	fp, sp
   11780:	sub	sp, sp, #16
   11784:	ldr	ip, [r1]
   11788:	ldmib	r1, {r3, lr}
   1178c:	ldr	r1, [r1, #12]
   11790:	str	lr, [sp]
   11794:	stmib	sp, {r1, r2}
   11798:	movw	r1, #12848	; 0x3230
   1179c:	movt	r1, #1
   117a0:	mov	r2, ip
   117a4:	bl	10bf4 <fprintf@plt>
   117a8:	mov	sp, fp
   117ac:	pop	{fp, pc}
   117b0:	push	{r4, r5, r6, r7, fp, lr}
   117b4:	add	fp, sp, #16
   117b8:	sub	sp, sp, #16
   117bc:	mov	r5, r3
   117c0:	mov	r6, r2
   117c4:	mov	r7, r1
   117c8:	mov	r4, r0
   117cc:	ldm	r1, {r2, r3}
   117d0:	movw	r1, #12874	; 0x324a
   117d4:	movt	r1, #1
   117d8:	bl	10bf4 <fprintf@plt>
   117dc:	ldr	r2, [r7]
   117e0:	ldr	r0, [r7, #4]
   117e4:	sub	r1, r2, r0
   117e8:	mov	r0, r4
   117ec:	bl	11718 <getc@plt+0xab8>
   117f0:	cmp	r6, #0
   117f4:	beq	11804 <getc@plt+0xba4>
   117f8:	movw	r1, #12867	; 0x3243
   117fc:	movt	r1, #1
   11800:	b	11824 <getc@plt+0xbc4>
   11804:	add	r6, sp, #7
   11808:	mov	r0, #0
   1180c:	mov	r1, r5
   11810:	mov	r2, r6
   11814:	mov	r3, #1
   11818:	bl	12ad4 <error@@Base+0x6bc>
   1181c:	movw	r1, #12885	; 0x3255
   11820:	movt	r1, #1
   11824:	mov	r0, r4
   11828:	mov	r2, r6
   1182c:	bl	10bf4 <fprintf@plt>
   11830:	sub	sp, fp, #16
   11834:	pop	{r4, r5, r6, r7, fp, pc}
   11838:	ldr	r2, [r1, #12]
   1183c:	ldr	r3, [r0, #12]
   11840:	cmp	r2, r3
   11844:	bne	11864 <getc@plt+0xc04>
   11848:	ldr	r2, [r1, #16]
   1184c:	ldr	r3, [r0, #16]
   11850:	cmp	r2, r3
   11854:	bne	11864 <getc@plt+0xc04>
   11858:	ldr	r1, [r1, #8]
   1185c:	ldr	r0, [r0, #8]
   11860:	b	12084 <getc@plt+0x1424>
   11864:	sub	r0, r2, r3
   11868:	bx	lr
   1186c:	push	{fp, lr}
   11870:	mov	fp, sp
   11874:	sub	sp, sp, #8
   11878:	ldr	ip, [r1, #8]
   1187c:	ldr	r2, [r1, #12]
   11880:	ldr	r3, [r1, #16]
   11884:	str	ip, [sp]
   11888:	movw	r1, #12894	; 0x325e
   1188c:	movt	r1, #1
   11890:	bl	10bf4 <fprintf@plt>
   11894:	mov	sp, fp
   11898:	pop	{fp, pc}
   1189c:	cmp	r0, #2
   118a0:	bxlt	lr
   118a4:	movw	r3, #20772	; 0x5124
   118a8:	movt	r3, #2
   118ac:	str	r2, [r3]
   118b0:	movw	r2, #20768	; 0x5120
   118b4:	movt	r2, #2
   118b8:	str	r1, [r2]
   118bc:	sub	r1, r0, #1
   118c0:	mov	r0, #0
   118c4:	b	118c8 <getc@plt+0xc68>
   118c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118cc:	add	fp, sp, #28
   118d0:	sub	sp, sp, #4
   118d4:	mov	r8, r1
   118d8:	mov	r9, r0
   118dc:	movw	r7, #20768	; 0x5120
   118e0:	movt	r7, #2
   118e4:	movw	sl, #20772	; 0x5124
   118e8:	movt	sl, #2
   118ec:	b	11914 <getc@plt+0xcb4>
   118f0:	ldr	r0, [r7]
   118f4:	str	r6, [r0, r4, lsl #2]
   118f8:	sub	r1, r4, #1
   118fc:	cmp	r1, r9
   11900:	movgt	r0, r9
   11904:	blgt	118c8 <getc@plt+0xc68>
   11908:	add	r9, r5, #1
   1190c:	cmp	r9, r8
   11910:	bge	119dc <getc@plt+0xd7c>
   11914:	ldr	r0, [r7]
   11918:	ldr	r6, [r0, r9, lsl #2]
   1191c:	cmp	r9, r8
   11920:	mov	r4, r8
   11924:	mov	r5, r9
   11928:	bge	118f0 <getc@plt+0xc90>
   1192c:	mov	r5, r9
   11930:	mov	r4, r8
   11934:	cmp	r5, r4
   11938:	blt	11950 <getc@plt+0xcf0>
   1193c:	b	11978 <getc@plt+0xd18>
   11940:	cmp	r5, r4
   11944:	bge	118f0 <getc@plt+0xc90>
   11948:	cmp	r5, r4
   1194c:	bge	11978 <getc@plt+0xd18>
   11950:	ldr	r0, [r7]
   11954:	ldr	r1, [r0, r4, lsl #2]
   11958:	ldr	r2, [sl]
   1195c:	mov	r0, r6
   11960:	blx	r2
   11964:	cmn	r0, #1
   11968:	bgt	11978 <getc@plt+0xd18>
   1196c:	sub	r4, r4, #1
   11970:	cmp	r5, r4
   11974:	blt	11950 <getc@plt+0xcf0>
   11978:	cmp	r5, r4
   1197c:	beq	11990 <getc@plt+0xd30>
   11980:	ldr	r0, [r7]
   11984:	ldr	r1, [r0, r4, lsl #2]
   11988:	str	r1, [r0, r5, lsl #2]
   1198c:	add	r5, r5, #1
   11990:	cmp	r5, r4
   11994:	bge	119c0 <getc@plt+0xd60>
   11998:	ldr	r0, [r7]
   1199c:	ldr	r1, [r0, r5, lsl #2]
   119a0:	ldr	r2, [sl]
   119a4:	mov	r0, r6
   119a8:	blx	r2
   119ac:	cmp	r0, #1
   119b0:	blt	119c0 <getc@plt+0xd60>
   119b4:	add	r5, r5, #1
   119b8:	cmp	r4, r5
   119bc:	bne	11998 <getc@plt+0xd38>
   119c0:	cmp	r5, r4
   119c4:	beq	11940 <getc@plt+0xce0>
   119c8:	ldr	r0, [r7]
   119cc:	ldr	r1, [r0, r5, lsl #2]
   119d0:	str	r1, [r0, r4, lsl #2]
   119d4:	sub	r4, r4, #1
   119d8:	b	11940 <getc@plt+0xce0>
   119dc:	sub	sp, fp, #28
   119e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119e4:	andeq	r0, r0, r0
   119e8:	push	{r4, r5, r6, sl, fp, lr}
   119ec:	add	fp, sp, #16
   119f0:	mov	r5, r2
   119f4:	mov	r6, r1
   119f8:	mov	r4, r0
   119fc:	mov	r0, #1
   11a00:	mov	r1, #32
   11a04:	bl	12064 <getc@plt+0x1404>
   11a08:	mov	r1, r0
   11a0c:	str	r6, [r1, #8]
   11a10:	str	r5, [r1, #12]
   11a14:	ldr	r0, [r4, #24]
   11a18:	ldr	r3, [r4, #28]
   11a1c:	add	r0, r0, r6
   11a20:	add	r3, r3, r5
   11a24:	str	r0, [r4, #24]
   11a28:	str	r3, [r4, #28]
   11a2c:	mov	r0, r4
   11a30:	pop	{r4, r5, r6, sl, fp, lr}
   11a34:	b	12e2c <error@@Base+0xa14>
   11a38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a3c:	add	fp, sp, #28
   11a40:	sub	sp, sp, #4
   11a44:	vpush	{d8-d12}
   11a48:	mov	sl, r2
   11a4c:	mov	r6, r1
   11a50:	mov	r5, r0
   11a54:	bl	11bf0 <getc@plt+0xf90>
   11a58:	cmp	r0, #0
   11a5c:	beq	11bd4 <getc@plt+0xf74>
   11a60:	ldr	r7, [r5, #12]
   11a64:	ldrd	r8, [r5, #24]
   11a68:	mov	r0, r8
   11a6c:	mov	r1, r9
   11a70:	bl	11c30 <getc@plt+0xfd0>
   11a74:	vmov	s2, r7
   11a78:	vcvt.f64.s32	d8, s2
   11a7c:	vmov.i32	d9, #0	; 0x00000000
   11a80:	vmul.f64	d10, d0, d8
   11a84:	vstr	d0, [r5, #32]
   11a88:	ldr	r4, [r5]
   11a8c:	cmp	r4, #0
   11a90:	vmov.i32	d11, #0	; 0x00000000
   11a94:	beq	11ad8 <getc@plt+0xe78>
   11a98:	sub	r0, r7, #1
   11a9c:	vmov.i32	d11, #0	; 0x00000000
   11aa0:	vmov	s0, r0
   11aa4:	vcvt.f64.s32	d12, s0
   11aa8:	ldrd	r0, [r4, #8]
   11aac:	sub	r0, r8, r0
   11ab0:	sub	r1, r9, r1
   11ab4:	bl	11c30 <getc@plt+0xfd0>
   11ab8:	vmov.f64	d16, d10
   11abc:	vmls.f64	d16, d0, d12
   11ac0:	vadd.f64	d11, d11, d0
   11ac4:	vstr	d0, [r4, #16]
   11ac8:	vstr	d16, [r4, #24]
   11acc:	ldr	r4, [r4, #4]
   11ad0:	cmp	r4, #0
   11ad4:	bne	11aa8 <getc@plt+0xe48>
   11ad8:	sub	r0, r7, #1
   11adc:	vmov	s0, r0
   11ae0:	vcvt.f64.s32	d16, s0
   11ae4:	vmul.f64	d17, d11, d16
   11ae8:	vdiv.f64	d17, d17, d8
   11aec:	vsub.f64	d17, d10, d17
   11af0:	vstr	d17, [r5, #40]	; 0x28
   11af4:	ldr	r0, [r5]
   11af8:	cmp	r0, #0
   11afc:	beq	11b1c <getc@plt+0xebc>
   11b00:	vmov.i32	d9, #0	; 0x00000000
   11b04:	vldr	d18, [r0, #24]
   11b08:	ldr	r0, [r0, #4]
   11b0c:	vsub.f64	d18, d18, d17
   11b10:	vmla.f64	d9, d18, d18
   11b14:	cmp	r0, #0
   11b18:	bne	11b04 <getc@plt+0xea4>
   11b1c:	vdiv.f64	d16, d9, d16
   11b20:	vdiv.f64	d16, d16, d8
   11b24:	vsqrt.f64	d0, d16
   11b28:	vcmpe.f64	d0, d0
   11b2c:	vmrs	APSR_nzcv, fpscr
   11b30:	bvc	11b3c <getc@plt+0xedc>
   11b34:	vmov.f64	d0, d16
   11b38:	bl	10c00 <sqrt@plt>
   11b3c:	vldr	d16, [pc, #156]	; 11be0 <getc@plt+0xf80>
   11b40:	vldr	d17, [r5, #40]	; 0x28
   11b44:	vldr	d18, [pc, #156]	; 11be8 <getc@plt+0xf88>
   11b48:	vmul.f64	d16, d0, d16
   11b4c:	vmov.i32	d19, #0	; 0x00000000
   11b50:	vsub.f64	d17, d17, d16
   11b54:	vcmpe.f64	d17, d18
   11b58:	vmrs	APSR_nzcv, fpscr
   11b5c:	vselgt.f64	d20, d18, d19
   11b60:	vcmpe.f64	d17, #0.0
   11b64:	vmrs	APSR_nzcv, fpscr
   11b68:	vmov.f64	d21, d18
   11b6c:	vmovmi.f64	d21, d20
   11b70:	vcmpe.f64	d17, d18
   11b74:	vmrs	APSR_nzcv, fpscr
   11b78:	vselgt.f64	d20, d21, d17
   11b7c:	vcmpe.f64	d17, #0.0
   11b80:	vmrs	APSR_nzcv, fpscr
   11b84:	vmovmi.f64	d20, d21
   11b88:	vstr	d20, [r6]
   11b8c:	vldr	d17, [r5, #40]	; 0x28
   11b90:	vadd.f64	d16, d16, d17
   11b94:	vcmpe.f64	d16, d18
   11b98:	vmrs	APSR_nzcv, fpscr
   11b9c:	vselgt.f64	d17, d18, d19
   11ba0:	vcmpe.f64	d16, #0.0
   11ba4:	vmrs	APSR_nzcv, fpscr
   11ba8:	vcmpe.f64	d16, d18
   11bac:	vmovmi.f64	d18, d17
   11bb0:	vmrs	APSR_nzcv, fpscr
   11bb4:	vselgt.f64	d17, d18, d16
   11bb8:	vcmpe.f64	d16, #0.0
   11bbc:	vmrs	APSR_nzcv, fpscr
   11bc0:	vmovmi.f64	d17, d18
   11bc4:	vstr	d17, [sl]
   11bc8:	vpop	{d8-d12}
   11bcc:	add	sp, sp, #4
   11bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bd4:	movw	r0, #12909	; 0x326d
   11bd8:	movt	r0, #1
   11bdc:	bl	12418 <error@@Base>
   11be0:			; <UNDEFINED> instruction: 0xf5c28f5c
   11be4:	svccc	0x00ff5c28
   11be8:	andeq	r0, r0, r0
   11bec:	subsmi	r0, r9, r0
   11bf0:	ldr	r0, [r0]
   11bf4:	cmp	r0, #0
   11bf8:	moveq	r0, #0
   11bfc:	bxeq	lr
   11c00:	mov	r1, #0
   11c04:	ldr	r2, [r0, #4]
   11c08:	ldr	r0, [r0, #8]
   11c0c:	cmp	r0, #0
   11c10:	addgt	r1, r1, #1
   11c14:	cmp	r2, #0
   11c18:	mov	r0, r2
   11c1c:	bne	11c04 <getc@plt+0xfa4>
   11c20:	mov	r0, #0
   11c24:	cmp	r1, #1
   11c28:	movwhi	r0, #1
   11c2c:	bx	lr
   11c30:	sub	r1, r0, r1
   11c34:	vldr	d16, [pc, #28]	; 11c58 <getc@plt+0xff8>
   11c38:	vmov	s0, r1
   11c3c:	vmov	s2, r0
   11c40:	vcvt.f64.s32	d17, s0
   11c44:	vcvt.f64.s32	d18, s2
   11c48:	vmul.f64	d16, d17, d16
   11c4c:	vdiv.f64	d0, d16, d18
   11c50:	bx	lr
   11c54:	nop	{0}
   11c58:	andeq	r0, r0, r0
   11c5c:	subsmi	r0, r9, r0
   11c60:	push	{r4, r5, r6, sl, fp, lr}
   11c64:	add	fp, sp, #16
   11c68:	mov	r4, r0
   11c6c:	movw	r0, #8048	; 0x1f70
   11c70:	add	r5, r4, r0
   11c74:	movw	r6, #503	; 0x1f7
   11c78:	mov	r0, r4
   11c7c:	bl	12dd0 <error@@Base+0x9b8>
   11c80:	subs	r6, r6, #1
   11c84:	add	r4, r4, #16
   11c88:	bne	11c78 <getc@plt+0x1018>
   11c8c:	mov	r0, #0
   11c90:	str	r0, [r5]
   11c94:	str	r0, [r5, #4]
   11c98:	pop	{r4, r5, r6, sl, fp, pc}
   11c9c:	push	{r4, r5, r6, sl, fp, lr}
   11ca0:	add	fp, sp, #16
   11ca4:	mov	r5, r1
   11ca8:	mov	r4, r0
   11cac:	mov	r0, r1
   11cb0:	bl	11cf8 <getc@plt+0x1098>
   11cb4:	ldr	r6, [r4, r0, lsl #4]
   11cb8:	mov	r4, #0
   11cbc:	cmp	r6, #0
   11cc0:	beq	11ce4 <getc@plt+0x1084>
   11cc4:	ldr	r1, [r6, #8]
   11cc8:	mov	r0, r5
   11ccc:	bl	10ae0 <strcmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	beq	11cec <getc@plt+0x108c>
   11cd8:	ldr	r6, [r6, #4]
   11cdc:	cmp	r6, #0
   11ce0:	bne	11cc4 <getc@plt+0x1064>
   11ce4:	mov	r0, r4
   11ce8:	pop	{r4, r5, r6, sl, fp, pc}
   11cec:	mov	r4, r6
   11cf0:	mov	r0, r4
   11cf4:	pop	{r4, r5, r6, sl, fp, pc}
   11cf8:	ldrb	r1, [r0]
   11cfc:	cmp	r1, #0
   11d00:	moveq	r0, #0
   11d04:	sxtheq	r0, r0
   11d08:	bxeq	lr
   11d0c:	add	r2, r0, #1
   11d10:	mov	r0, #0
   11d14:	uxtab	r0, r0, r1
   11d18:	ldrb	r1, [r2], #1
   11d1c:	cmp	r1, #0
   11d20:	bne	11d14 <getc@plt+0x10b4>
   11d24:	movw	r1, #20065	; 0x4e61
   11d28:	movt	r1, #33354	; 0x824a
   11d2c:	umull	r1, r2, r0, r1
   11d30:	lsr	r1, r2, #8
   11d34:	movw	r2, #503	; 0x1f7
   11d38:	mls	r0, r1, r2, r0
   11d3c:	sxth	r0, r0
   11d40:	bx	lr
   11d44:	push	{r4, r5, fp, lr}
   11d48:	add	fp, sp, #8
   11d4c:	mov	r4, r1
   11d50:	mov	r5, r0
   11d54:	ldr	r0, [r1, #8]
   11d58:	bl	11cf8 <getc@plt+0x1098>
   11d5c:	add	r0, r5, r0, lsl #4
   11d60:	mov	r1, r4
   11d64:	bl	12ddc <error@@Base+0x9c4>
   11d68:	mov	r0, r5
   11d6c:	bl	11d84 <getc@plt+0x1124>
   11d70:	movw	r0, #8052	; 0x1f74
   11d74:	ldr	r0, [r5, r0]!
   11d78:	add	r0, r0, #1
   11d7c:	str	r0, [r5]
   11d80:	pop	{r4, r5, fp, pc}
   11d84:	push	{r4, sl, fp, lr}
   11d88:	add	fp, sp, #8
   11d8c:	mov	r4, r0
   11d90:	movw	r0, #8048	; 0x1f70
   11d94:	ldr	r0, [r4, r0]!
   11d98:	cmp	r0, #0
   11d9c:	popeq	{r4, sl, fp, pc}
   11da0:	bl	10b04 <free@plt>
   11da4:	mov	r0, #0
   11da8:	str	r0, [r4]
   11dac:	pop	{r4, sl, fp, pc}
   11db0:	push	{r4, r5, fp, lr}
   11db4:	add	fp, sp, #8
   11db8:	mov	r4, r1
   11dbc:	mov	r5, r0
   11dc0:	ldr	r0, [r1, #8]
   11dc4:	bl	11cf8 <getc@plt+0x1098>
   11dc8:	add	r0, r5, r0, lsl #4
   11dcc:	mov	r1, r4
   11dd0:	bl	12e54 <error@@Base+0xa3c>
   11dd4:	mov	r0, r5
   11dd8:	bl	11d84 <getc@plt+0x1124>
   11ddc:	movw	r0, #8052	; 0x1f74
   11de0:	ldr	r0, [r5, r0]!
   11de4:	sub	r0, r0, #1
   11de8:	str	r0, [r5]
   11dec:	pop	{r4, r5, fp, pc}
   11df0:	push	{r4, r5, fp, lr}
   11df4:	add	fp, sp, #8
   11df8:	mov	r4, r0
   11dfc:	movw	r0, #8048	; 0x1f70
   11e00:	mov	r5, r4
   11e04:	ldr	r0, [r5, r0]!
   11e08:	cmp	r0, #0
   11e0c:	bne	11e6c <getc@plt+0x120c>
   11e10:	ldr	r0, [r5, #4]
   11e14:	cmp	r0, #0
   11e18:	popeq	{r4, r5, fp, pc}
   11e1c:	mov	r1, #4
   11e20:	bl	12064 <getc@plt+0x1404>
   11e24:	str	r0, [r5]
   11e28:	mov	r0, #0
   11e2c:	movw	ip, #503	; 0x1f7
   11e30:	mov	r2, #0
   11e34:	b	11e44 <getc@plt+0x11e4>
   11e38:	add	r2, r2, #1
   11e3c:	cmp	r2, ip
   11e40:	beq	11e6c <getc@plt+0x120c>
   11e44:	ldr	r3, [r4, r2, lsl #4]
   11e48:	cmp	r3, #0
   11e4c:	beq	11e38 <getc@plt+0x11d8>
   11e50:	ldr	r1, [r5]
   11e54:	str	r3, [r1, r0, lsl #2]
   11e58:	add	r0, r0, #1
   11e5c:	ldr	r3, [r3, #4]
   11e60:	cmp	r3, #0
   11e64:	bne	11e50 <getc@plt+0x11f0>
   11e68:	b	11e38 <getc@plt+0x11d8>
   11e6c:	pop	{r4, r5, fp, pc}
   11e70:	push	{r4, r5, r6, r7, fp, lr}
   11e74:	add	fp, sp, #16
   11e78:	mov	r5, r1
   11e7c:	mov	r4, r0
   11e80:	mov	r6, #0
   11e84:	movw	r7, #8048	; 0x1f70
   11e88:	add	r0, r4, r6
   11e8c:	mov	r1, r5
   11e90:	bl	12f2c <error@@Base+0xb14>
   11e94:	add	r6, r6, #16
   11e98:	cmp	r6, r7
   11e9c:	bne	11e88 <getc@plt+0x1228>
   11ea0:	mov	r0, r4
   11ea4:	bl	11d84 <getc@plt+0x1124>
   11ea8:	movw	r0, #8052	; 0x1f74
   11eac:	mov	r1, #0
   11eb0:	str	r1, [r4, r0]
   11eb4:	pop	{r4, r5, r6, r7, fp, pc}
   11eb8:	push	{r4, sl, fp, lr}
   11ebc:	add	fp, sp, #8
   11ec0:	mov	r4, r0
   11ec4:	movw	r0, #20776	; 0x5128
   11ec8:	movt	r0, #2
   11ecc:	ldrh	r0, [r0]
   11ed0:	cmp	r0, #0
   11ed4:	bleq	11f30 <getc@plt+0x12d0>
   11ed8:	movw	r0, #20778	; 0x512a
   11edc:	movt	r0, #2
   11ee0:	ldrb	r0, [r0, r4]
   11ee4:	pop	{r4, sl, fp, pc}
   11ee8:	push	{r4, r5, fp, lr}
   11eec:	add	fp, sp, #8
   11ef0:	mov	r4, r0
   11ef4:	movw	r5, #20776	; 0x5128
   11ef8:	movt	r5, #2
   11efc:	ldrh	r0, [r5]
   11f00:	cmp	r0, #0
   11f04:	bleq	11f30 <getc@plt+0x12d0>
   11f08:	ldrsh	r1, [r5]
   11f0c:	uxtb	r0, r4
   11f10:	cmp	r0, r1
   11f14:	movwlt	r1, #20780	; 0x512c
   11f18:	movtlt	r1, #19
   11f1c:	ldrlt	r0, [r1, r0, lsl #2]
   11f20:	poplt	{r4, r5, fp, pc}
   11f24:	movw	r0, #12933	; 0x3285
   11f28:	movt	r0, #1
   11f2c:	bl	12418 <error@@Base>
   11f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f34:	add	fp, sp, #28
   11f38:	sub	sp, sp, #4
   11f3c:	mov	r5, #0
   11f40:	movw	r3, #20776	; 0x5128
   11f44:	movt	r3, #2
   11f48:	movw	r4, #14444	; 0x386c
   11f4c:	movt	r4, #1
   11f50:	movw	sl, #20780	; 0x512c
   11f54:	movt	sl, #19
   11f58:	movw	r7, #20778	; 0x512a
   11f5c:	movt	r7, #2
   11f60:	b	11f70 <getc@plt+0x1310>
   11f64:	add	r5, r5, #1
   11f68:	cmp	r5, #91	; 0x5b
   11f6c:	beq	12050 <getc@plt+0x13f0>
   11f70:	ldrsh	r8, [r3]
   11f74:	cmp	r8, #1
   11f78:	blt	11fdc <getc@plt+0x137c>
   11f7c:	add	r0, r5, r5, lsl #1
   11f80:	add	r0, r4, r0, lsl #2
   11f84:	ldr	r4, [r0, #8]
   11f88:	ldrsh	r9, [r3]
   11f8c:	ldr	r1, [sl]
   11f90:	mov	r0, r4
   11f94:	bl	10ae0 <strcmp@plt>
   11f98:	cmp	r0, #0
   11f9c:	mov	r6, #0
   11fa0:	mov	r0, r8
   11fa4:	beq	11fe4 <getc@plt+0x1384>
   11fa8:	uxth	r8, r9
   11fac:	mov	r1, #1
   11fb0:	mov	r6, r1
   11fb4:	cmp	r1, r9
   11fb8:	bge	11fd4 <getc@plt+0x1374>
   11fbc:	ldr	r1, [sl, r6, lsl #2]
   11fc0:	mov	r0, r4
   11fc4:	bl	10ae0 <strcmp@plt>
   11fc8:	add	r1, r6, #1
   11fcc:	cmp	r0, #0
   11fd0:	bne	11fb0 <getc@plt+0x1350>
   11fd4:	mov	r0, r9
   11fd8:	b	11fe4 <getc@plt+0x1384>
   11fdc:	mov	r6, #0
   11fe0:	mov	r0, r8
   11fe4:	cmp	r6, r0
   11fe8:	movw	r3, #20776	; 0x5128
   11fec:	movt	r3, #2
   11ff0:	movw	r4, #14444	; 0x386c
   11ff4:	movt	r4, #1
   11ff8:	bne	12020 <getc@plt+0x13c0>
   11ffc:	uxth	r0, r8
   12000:	cmp	r0, #256	; 0x100
   12004:	beq	12058 <getc@plt+0x13f8>
   12008:	add	r0, r8, #1
   1200c:	strh	r0, [r3]
   12010:	add	r0, r5, r5, lsl #1
   12014:	add	r0, r4, r0, lsl #2
   12018:	ldr	r0, [r0, #8]
   1201c:	str	r0, [sl, r6, lsl #2]
   12020:	add	r0, r5, r5, lsl #1
   12024:	mov	r1, r4
   12028:	ldr	r0, [r1, r0, lsl #2]!
   1202c:	ldr	r2, [r1, #4]!
   12030:	cmp	r0, r2
   12034:	bhi	11f64 <getc@plt+0x1304>
   12038:	ldr	r1, [r1]
   1203c:	strb	r6, [r7, r0]
   12040:	add	r0, r0, #1
   12044:	cmp	r0, r1
   12048:	bls	1203c <getc@plt+0x13dc>
   1204c:	b	11f64 <getc@plt+0x1304>
   12050:	sub	sp, fp, #28
   12054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12058:	movw	r0, #12957	; 0x329d
   1205c:	movt	r0, #1
   12060:	bl	12418 <error@@Base>
   12064:	push	{fp, lr}
   12068:	mov	fp, sp
   1206c:	bl	10ad4 <calloc@plt>
   12070:	cmp	r0, #0
   12074:	popne	{fp, pc}
   12078:	movw	r0, #15536	; 0x3cb0
   1207c:	movt	r0, #1
   12080:	bl	12418 <error@@Base>
   12084:	push	{r4, r5, r6, sl, fp, lr}
   12088:	add	fp, sp, #16
   1208c:	mov	r2, r0
   12090:	ldrb	ip, [r1]
   12094:	ldrb	r3, [r0]
   12098:	mov	r0, #0
   1209c:	cmp	r3, #0
   120a0:	beq	120e0 <getc@plt+0x1480>
   120a4:	add	lr, r1, #1
   120a8:	add	r6, r2, #1
   120ac:	mov	r2, #0
   120b0:	uxtb	r4, ip
   120b4:	uxtb	r5, r3
   120b8:	cmp	r5, r4
   120bc:	bne	120f0 <getc@plt+0x1490>
   120c0:	ldrb	ip, [lr, r2]
   120c4:	ldrb	r3, [r6, r2]
   120c8:	add	r2, r2, #1
   120cc:	cmp	r3, #0
   120d0:	bne	120b0 <getc@plt+0x1450>
   120d4:	cmp	ip, #0
   120d8:	bne	120ec <getc@plt+0x148c>
   120dc:	pop	{r4, r5, r6, sl, fp, pc}
   120e0:	mov	r2, #0
   120e4:	cmp	ip, #0
   120e8:	beq	120dc <getc@plt+0x147c>
   120ec:	mov	r3, #0
   120f0:	ldrb	r1, [r1, r2]
   120f4:	uxtb	r2, r3
   120f8:	mov	r0, #1
   120fc:	cmp	r2, r1
   12100:	mvncc	r0, #0
   12104:	pop	{r4, r5, r6, sl, fp, pc}
   12108:	push	{r4, r5, fp, lr}
   1210c:	add	fp, sp, #8
   12110:	mov	r5, r1
   12114:	cmp	r0, #0
   12118:	beq	1214c <getc@plt+0x14ec>
   1211c:	mov	r4, r0
   12120:	mov	r1, r5
   12124:	bl	10af8 <fopen@plt>
   12128:	cmp	r0, #0
   1212c:	popne	{r4, r5, fp, pc}
   12130:	ldrb	r0, [r5]
   12134:	cmp	r0, #119	; 0x77
   12138:	bne	12170 <getc@plt+0x1510>
   1213c:	movw	r0, #15562	; 0x3cca
   12140:	movt	r0, #1
   12144:	mov	r1, r4
   12148:	bl	12458 <error@@Base+0x40>
   1214c:	ldrb	r0, [r5]
   12150:	movw	r1, #20656	; 0x50b0
   12154:	movt	r1, #2
   12158:	movw	r2, #20660	; 0x50b4
   1215c:	movt	r2, #2
   12160:	cmp	r0, #114	; 0x72
   12164:	moveq	r2, r1
   12168:	ldr	r0, [r2]
   1216c:	pop	{r4, r5, fp, pc}
   12170:	movw	r0, #15584	; 0x3ce0
   12174:	movt	r0, #1
   12178:	mov	r1, r4
   1217c:	bl	12458 <error@@Base+0x40>
   12180:	movw	r1, #20656	; 0x50b0
   12184:	movt	r1, #2
   12188:	ldr	r1, [r1]
   1218c:	cmp	r1, r0
   12190:	bxeq	lr
   12194:	movw	r1, #20660	; 0x50b4
   12198:	movt	r1, #2
   1219c:	ldr	r1, [r1]
   121a0:	cmp	r1, r0
   121a4:	beq	121ac <getc@plt+0x154c>
   121a8:	b	10c18 <fclose@plt>
   121ac:	bx	lr
   121b0:	push	{fp, lr}
   121b4:	mov	fp, sp
   121b8:	sub	sp, sp, #88	; 0x58
   121bc:	mov	r1, sp
   121c0:	bl	12fd0 <error@@Base+0xbb8>
   121c4:	clz	r0, r0
   121c8:	lsr	r0, r0, #5
   121cc:	mov	sp, fp
   121d0:	pop	{fp, pc}
   121d4:	push	{r4, sl, fp, lr}
   121d8:	add	fp, sp, #8
   121dc:	movw	r0, #21804	; 0x552c
   121e0:	movt	r0, #19
   121e4:	ldrh	r1, [r0]
   121e8:	add	r1, r1, #1
   121ec:	strh	r1, [r0]
   121f0:	sxth	r0, r1
   121f4:	bl	12208 <getc@plt+0x15a8>
   121f8:	mov	r4, r0
   121fc:	bl	10b4c <unlink@plt>
   12200:	mov	r0, r4
   12204:	pop	{r4, sl, fp, pc}
   12208:	push	{r4, r5, fp, lr}
   1220c:	add	fp, sp, #8
   12210:	sub	sp, sp, #104	; 0x68
   12214:	mov	r4, r0
   12218:	movw	r0, #32036	; 0x7d24
   1221c:	movt	r0, #155	; 0x9b
   12220:	ldr	r5, [r0]
   12224:	bl	10bb8 <getpid@plt>
   12228:	mov	r3, r0
   1222c:	sxth	r0, r4
   12230:	str	r0, [sp]
   12234:	add	r4, sp, #4
   12238:	movw	r1, #15625	; 0x3d09
   1223c:	movt	r1, #1
   12240:	mov	r0, r4
   12244:	mov	r2, r5
   12248:	bl	10c24 <sprintf@plt>
   1224c:	mov	r0, r4
   12250:	bl	10b34 <strdup@plt>
   12254:	sub	sp, fp, #8
   12258:	pop	{r4, r5, fp, pc}
   1225c:	push	{r4, sl, fp, lr}
   12260:	add	fp, sp, #8
   12264:	mov	r4, r0
   12268:	bl	10be8 <strlen@plt>
   1226c:	sub	r0, r0, #1
   12270:	sxth	r0, r0
   12274:	cmp	r0, #0
   12278:	bmi	12288 <getc@plt+0x1628>
   1227c:	ldrb	r1, [r4, r0]
   12280:	cmp	r1, #47	; 0x2f
   12284:	bne	1226c <getc@plt+0x160c>
   12288:	add	r0, r0, r4
   1228c:	add	r0, r0, #1
   12290:	pop	{r4, sl, fp, pc}
   12294:	push	{r4, r5, r6, r7, fp, lr}
   12298:	add	fp, sp, #16
   1229c:	mov	r4, r3
   122a0:	mov	r5, r2
   122a4:	mov	r6, r1
   122a8:	mov	r7, r0
   122ac:	ldr	r0, [r1]
   122b0:	bl	1225c <getc@plt+0x15fc>
   122b4:	movw	r1, #32036	; 0x7d24
   122b8:	movt	r1, #155	; 0x9b
   122bc:	str	r0, [r1]
   122c0:	bl	124e0 <error@@Base+0xc8>
   122c4:	mov	r0, r7
   122c8:	mov	r1, r6
   122cc:	mov	r2, r5
   122d0:	mov	r3, r4
   122d4:	pop	{r4, r5, r6, r7, fp, lr}
   122d8:	b	122dc <getc@plt+0x167c>
   122dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122e0:	add	fp, sp, #28
   122e4:	sub	sp, sp, #12
   122e8:	stmib	sp, {r2, r3}
   122ec:	mov	r7, r1
   122f0:	mov	r5, r0
   122f4:	ldr	r0, [r0]
   122f8:	cmp	r0, #1
   122fc:	bne	12314 <getc@plt+0x16b4>
   12300:	movw	r0, #20640	; 0x50a0
   12304:	movt	r0, #2
   12308:	ldrb	r0, [r0]
   1230c:	cmp	r0, #0
   12310:	bne	123d0 <getc@plt+0x1770>
   12314:	ldr	r9, [r5]
   12318:	mov	r6, #0
   1231c:	cmp	r9, #2
   12320:	blt	123c0 <getc@plt+0x1760>
   12324:	mov	sl, #1
   12328:	mov	r6, #0
   1232c:	mov	r8, #1
   12330:	b	12358 <getc@plt+0x16f8>
   12334:	ldr	r0, [r7, sl, lsl #2]
   12338:	sxth	r1, r6
   1233c:	str	r0, [r7, r1, lsl #2]
   12340:	add	r6, r6, #1
   12344:	ldr	r9, [r5]
   12348:	add	r8, r8, #1
   1234c:	sxth	sl, r8
   12350:	cmp	r9, sl
   12354:	ble	123c0 <getc@plt+0x1760>
   12358:	ldr	r4, [r7, sl, lsl #2]
   1235c:	ldrb	r0, [r4]
   12360:	cmp	r0, #45	; 0x2d
   12364:	bne	12334 <getc@plt+0x16d4>
   12368:	ldrb	r0, [r4, #1]
   1236c:	cmp	r0, #0
   12370:	beq	12334 <getc@plt+0x16d4>
   12374:	mov	r0, r4
   12378:	bl	10be8 <strlen@plt>
   1237c:	mov	r2, r0
   12380:	movw	r0, #15654	; 0x3d26
   12384:	movt	r0, #1
   12388:	mov	r1, r4
   1238c:	bl	10c48 <strncmp@plt>
   12390:	cmp	r0, #0
   12394:	beq	123d0 <getc@plt+0x1770>
   12398:	add	r0, sl, #1
   1239c:	mov	r1, #0
   123a0:	cmp	r0, r9
   123a4:	ldrlt	r1, [r7, r0, lsl #2]
   123a8:	mov	r0, r4
   123ac:	ldr	r2, [sp, #8]
   123b0:	bl	1258c <error@@Base+0x174>
   123b4:	cmp	r0, #0
   123b8:	addne	r8, r8, #1
   123bc:	b	12344 <getc@plt+0x16e4>
   123c0:	sxth	r0, r6
   123c4:	str	r0, [r5]
   123c8:	sub	sp, fp, #28
   123cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123d0:	ldr	r0, [sp, #4]
   123d4:	bl	1253c <error@@Base+0x124>
   123d8:	push	{fp, lr}
   123dc:	mov	fp, sp
   123e0:	mov	r0, #0
   123e4:	bl	123e8 <getc@plt+0x1788>
   123e8:	push	{fp, lr}
   123ec:	mov	fp, sp
   123f0:	mov	r4, r0
   123f4:	movw	r0, #32040	; 0x7d28
   123f8:	movt	r0, #155	; 0x9b
   123fc:	ldr	r0, [r0]
   12400:	cmp	r0, #0
   12404:	beq	1240c <getc@plt+0x17ac>
   12408:	blx	r0
   1240c:	bl	1267c <error@@Base+0x264>
   12410:	mov	r0, r4
   12414:	bl	10bc4 <exit@plt>

00012418 <error@@Base>:
   12418:	push	{fp, lr}
   1241c:	mov	fp, sp
   12420:	mov	r3, r0
   12424:	movw	r0, #32036	; 0x7d24
   12428:	movt	r0, #155	; 0x9b
   1242c:	ldr	r2, [r0]
   12430:	movw	r0, #20648	; 0x50a8
   12434:	movt	r0, #2
   12438:	ldr	r0, [r0]
   1243c:	movw	r1, #15604	; 0x3cf4
   12440:	movt	r1, #1
   12444:	bl	10bf4 <fprintf@plt>
   12448:	movw	r0, #20644	; 0x50a4
   1244c:	movt	r0, #2
   12450:	ldr	r0, [r0]
   12454:	bl	123e8 <getc@plt+0x1788>
   12458:	push	{fp, lr}
   1245c:	mov	fp, sp
   12460:	sub	sp, sp, #8
   12464:	mov	r3, r0
   12468:	movw	r0, #32036	; 0x7d24
   1246c:	movt	r0, #155	; 0x9b
   12470:	ldr	r2, [r0]
   12474:	movw	r0, #20648	; 0x50a8
   12478:	movt	r0, #2
   1247c:	ldr	r0, [r0]
   12480:	str	r1, [sp]
   12484:	movw	r1, #15612	; 0x3cfc
   12488:	movt	r1, #1
   1248c:	bl	10bf4 <fprintf@plt>
   12490:	movw	r0, #20644	; 0x50a4
   12494:	movt	r0, #2
   12498:	ldr	r0, [r0]
   1249c:	bl	123e8 <getc@plt+0x1788>
   124a0:	push	{fp, lr}
   124a4:	mov	fp, sp
   124a8:	sub	sp, sp, #8
   124ac:	mov	r3, r0
   124b0:	movw	r0, #32036	; 0x7d24
   124b4:	movt	r0, #155	; 0x9b
   124b8:	ldr	r2, [r0]
   124bc:	movw	r0, #20648	; 0x50a8
   124c0:	movt	r0, #2
   124c4:	ldr	r0, [r0]
   124c8:	str	r1, [sp]
   124cc:	movw	r1, #15612	; 0x3cfc
   124d0:	movt	r1, #1
   124d4:	bl	10bf4 <fprintf@plt>
   124d8:	mov	sp, fp
   124dc:	pop	{fp, pc}
   124e0:	push	{r4, sl, fp, lr}
   124e4:	add	fp, sp, #8
   124e8:	movw	r4, #9484	; 0x250c
   124ec:	movt	r4, #1
   124f0:	mov	r0, #2
   124f4:	mov	r1, r4
   124f8:	bl	10ba0 <__sysv_signal@plt>
   124fc:	mov	r0, #15
   12500:	mov	r1, r4
   12504:	pop	{r4, sl, fp, lr}
   12508:	b	10ba0 <__sysv_signal@plt>
   1250c:	push	{fp, lr}
   12510:	mov	fp, sp
   12514:	movw	r0, #21806	; 0x552e
   12518:	movt	r0, #19
   1251c:	ldrb	r1, [r0]
   12520:	cmp	r1, #1
   12524:	popeq	{fp, pc}
   12528:	mov	r1, #1
   1252c:	strb	r1, [r0]
   12530:	movw	r0, #15639	; 0x3d17
   12534:	movt	r0, #1
   12538:	bl	12418 <error@@Base>
   1253c:	push	{fp, lr}
   12540:	mov	fp, sp
   12544:	mov	r3, r0
   12548:	movw	r0, #32032	; 0x7d20
   1254c:	movt	r0, #155	; 0x9b
   12550:	ldr	r0, [r0]
   12554:	cmp	r0, #0
   12558:	bne	12584 <error@@Base+0x16c>
   1255c:	movw	r0, #32036	; 0x7d24
   12560:	movt	r0, #155	; 0x9b
   12564:	ldr	r2, [r0]
   12568:	movw	r0, #20648	; 0x50a8
   1256c:	movt	r0, #2
   12570:	ldr	r0, [r0]
   12574:	movw	r1, #15660	; 0x3d2c
   12578:	movt	r1, #1
   1257c:	bl	10bf4 <fprintf@plt>
   12580:	bl	123d8 <getc@plt+0x1778>
   12584:	blx	r0
   12588:	bl	123d8 <getc@plt+0x1778>
   1258c:	push	{r4, sl, fp, lr}
   12590:	add	fp, sp, #8
   12594:	mov	ip, r0
   12598:	cmp	r2, #0
   1259c:	ldrbne	r0, [r2]
   125a0:	cmpne	r0, #0
   125a4:	bne	125b8 <error@@Base+0x1a0>
   125a8:	movw	r0, #15675	; 0x3d3b
   125ac:	movt	r0, #1
   125b0:	mov	r1, ip
   125b4:	bl	12458 <error@@Base+0x40>
   125b8:	ldrb	lr, [ip, #1]
   125bc:	mov	r3, #0
   125c0:	cmp	lr, r0
   125c4:	beq	125ec <error@@Base+0x1d4>
   125c8:	mov	r0, #1
   125cc:	sxth	r3, r0
   125d0:	add	r4, r3, r3, lsl #1
   125d4:	ldrb	r4, [r2, r4, lsl #2]
   125d8:	cmp	r4, #0
   125dc:	beq	125a8 <error@@Base+0x190>
   125e0:	add	r0, r0, #1
   125e4:	cmp	lr, r4
   125e8:	bne	125cc <error@@Base+0x1b4>
   125ec:	add	r0, r3, r3, lsl #1
   125f0:	add	r3, r2, r0, lsl #2
   125f4:	ldr	r0, [r3, #4]
   125f8:	cmp	r0, #0
   125fc:	beq	1263c <error@@Base+0x224>
   12600:	mov	r2, ip
   12604:	ldrb	lr, [r2, #2]!
   12608:	cmp	r1, #0
   1260c:	cmpeq	lr, #0
   12610:	beq	1263c <error@@Base+0x224>
   12614:	ldr	r3, [r0]
   12618:	cmp	r3, #0
   1261c:	bne	1266c <error@@Base+0x254>
   12620:	cmp	lr, #0
   12624:	movne	r1, r2
   12628:	str	r1, [r0]
   1262c:	ldrb	r0, [r2]
   12630:	clz	r0, r0
   12634:	lsr	r0, r0, #5
   12638:	pop	{r4, sl, fp, pc}
   1263c:	ldr	r0, [r3, #8]
   12640:	cmp	r0, #0
   12644:	beq	125a8 <error@@Base+0x190>
   12648:	ldrb	r1, [ip, #2]
   1264c:	cmp	r1, #0
   12650:	bne	125a8 <error@@Base+0x190>
   12654:	ldrb	r1, [r0]
   12658:	cmp	r1, #0
   1265c:	moveq	r1, #1
   12660:	strbeq	r1, [r0]
   12664:	moveq	r0, #0
   12668:	popeq	{r4, sl, fp, pc}
   1266c:	movw	r0, #15690	; 0x3d4a
   12670:	movt	r0, #1
   12674:	mov	r1, ip
   12678:	bl	12458 <error@@Base+0x40>
   1267c:	push	{r4, r5, r6, sl, fp, lr}
   12680:	add	fp, sp, #16
   12684:	movw	r5, #21804	; 0x552c
   12688:	movt	r5, #19
   1268c:	ldrsh	r0, [r5]
   12690:	cmp	r0, #1
   12694:	blt	126c8 <error@@Base+0x2b0>
   12698:	mov	r6, #1
   1269c:	sxth	r0, r6
   126a0:	bl	12208 <getc@plt+0x15a8>
   126a4:	mov	r4, r0
   126a8:	bl	10b4c <unlink@plt>
   126ac:	mov	r0, r4
   126b0:	bl	10b04 <free@plt>
   126b4:	add	r0, r6, #1
   126b8:	sxth	r6, r0
   126bc:	ldrsh	r0, [r5]
   126c0:	cmp	r6, r0
   126c4:	ble	1269c <error@@Base+0x284>
   126c8:	pop	{r4, r5, r6, sl, fp, pc}
   126cc:	push	{r4, r5, r6, sl, fp, lr}
   126d0:	add	fp, sp, #16
   126d4:	mov	r4, r2
   126d8:	mov	r5, r1
   126dc:	mov	r6, r0
   126e0:	mov	r0, #1
   126e4:	mov	r1, #16
   126e8:	bl	12064 <getc@plt+0x1404>
   126ec:	mov	r1, r0
   126f0:	str	r4, [r0, #12]
   126f4:	strb	r5, [r0, #8]
   126f8:	mov	r0, r6
   126fc:	pop	{r4, r5, r6, sl, fp, lr}
   12700:	b	12e2c <error@@Base+0xa14>
   12704:	push	{r4, r5, r6, r7, fp, lr}
   12708:	add	fp, sp, #16
   1270c:	mov	r5, r2
   12710:	mov	r2, r1
   12714:	mov	r4, r0
   12718:	cmp	r1, #0
   1271c:	bne	1272c <error@@Base+0x314>
   12720:	ldrb	r0, [r5]
   12724:	cmp	r0, #0
   12728:	bne	127c8 <error@@Base+0x3b0>
   1272c:	ldr	r7, [r4, #4]
   12730:	movw	r1, #15909	; 0x3e25
   12734:	movt	r1, #1
   12738:	mov	r0, r2
   1273c:	bl	12108 <getc@plt+0x14a8>
   12740:	mov	r6, r0
   12744:	ldrb	r0, [r5]
   12748:	cmp	r0, #0
   1274c:	beq	1275c <error@@Base+0x344>
   12750:	mov	r0, r6
   12754:	bl	127dc <error@@Base+0x3c4>
   12758:	strb	r0, [r5, #11]
   1275c:	ldrb	r2, [r5, #1]
   12760:	ldr	r3, [r5, #4]
   12764:	cmp	r3, #0
   12768:	movweq	r3, #94	; 0x5e
   1276c:	mov	r0, r6
   12770:	mov	r1, r4
   12774:	bl	1288c <error@@Base+0x474>
   12778:	mov	r0, r6
   1277c:	bl	12180 <getc@plt+0x1520>
   12780:	ldrb	r0, [r5, #9]
   12784:	cmp	r0, #0
   12788:	beq	127a4 <error@@Base+0x38c>
   1278c:	cmp	r7, #0
   12790:	mov	r0, r4
   12794:	addne	r0, r7, #4
   12798:	ldr	r1, [r0]
   1279c:	mov	r0, r4
   127a0:	bl	1299c <error@@Base+0x584>
   127a4:	ldrb	r0, [r5, #10]
   127a8:	cmp	r0, #0
   127ac:	beq	127c4 <error@@Base+0x3ac>
   127b0:	cmp	r7, #0
   127b4:	addne	r4, r7, #4
   127b8:	ldr	r0, [r4]
   127bc:	pop	{r4, r5, r6, r7, fp, lr}
   127c0:	b	12a80 <error@@Base+0x668>
   127c4:	pop	{r4, r5, r6, r7, fp, pc}
   127c8:	movw	r0, #15707	; 0x3d5b
   127cc:	movt	r0, #1
   127d0:	movw	r1, #15723	; 0x3d6b
   127d4:	movt	r1, #1
   127d8:	bl	12458 <error@@Base+0x40>
   127dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   127e0:	add	fp, sp, #24
   127e4:	sub	sp, sp, #104	; 0x68
   127e8:	mov	r4, r0
   127ec:	add	r0, sp, #4
   127f0:	mov	r1, #99	; 0x63
   127f4:	mov	r2, r4
   127f8:	bl	10b1c <fgets@plt>
   127fc:	cmp	r0, #0
   12800:	beq	12820 <error@@Base+0x408>
   12804:	add	r0, sp, #4
   12808:	movw	r1, #15775	; 0x3d9f
   1280c:	movt	r1, #1
   12810:	mov	r2, #51	; 0x33
   12814:	bl	10bd0 <bcmp@plt>
   12818:	cmp	r0, #0
   1281c:	beq	12838 <error@@Base+0x420>
   12820:	mov	r0, r4
   12824:	bl	10b40 <rewind@plt>
   12828:	mov	r7, #0
   1282c:	mov	r0, r7
   12830:	sub	sp, fp, #24
   12834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12838:	mov	r6, #0
   1283c:	add	r5, sp, #4
   12840:	movw	r8, #15831	; 0x3dd7
   12844:	movt	r8, #1
   12848:	mov	r7, #1
   1284c:	mov	r0, r5
   12850:	mov	r1, #99	; 0x63
   12854:	mov	r2, r4
   12858:	bl	10b1c <fgets@plt>
   1285c:	cmp	r0, #0
   12860:	beq	1282c <error@@Base+0x414>
   12864:	mov	r0, r5
   12868:	mov	r1, r8
   1286c:	mov	r2, #56	; 0x38
   12870:	bl	10bd0 <bcmp@plt>
   12874:	cmp	r0, #0
   12878:	addeq	r6, r6, #1
   1287c:	uxth	r0, r6
   12880:	cmp	r0, #2
   12884:	bcc	1284c <error@@Base+0x434>
   12888:	b	1282c <error@@Base+0x414>
   1288c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12890:	add	fp, sp, #28
   12894:	sub	sp, sp, #20
   12898:	str	r3, [sp, #8]
   1289c:	mov	r5, r2
   128a0:	str	r1, [sp, #4]
   128a4:	mov	r9, r0
   128a8:	bl	10c60 <getc@plt>
   128ac:	cmn	r0, #1
   128b0:	beq	12974 <error@@Base+0x55c>
   128b4:	uxtb	r8, r5
   128b8:	add	r4, sp, #16
   128bc:	add	r1, r4, #1
   128c0:	str	r1, [sp]
   128c4:	mov	r7, #0
   128c8:	movw	r6, #19968	; 0x4e00
   128cc:	movt	r6, #2
   128d0:	b	128f8 <error@@Base+0x4e0>
   128d4:	ldr	r0, [sp, #4]
   128d8:	mov	r1, r7
   128dc:	bl	126cc <error@@Base+0x2b4>
   128e0:	mov	r5, #0
   128e4:	mov	r0, r9
   128e8:	bl	10c60 <getc@plt>
   128ec:	cmn	r0, #1
   128f0:	mov	r7, r5
   128f4:	beq	12974 <error@@Base+0x55c>
   128f8:	add	r1, r6, r0
   128fc:	ldrsb	sl, [r1]
   12900:	cmp	sl, #0
   12904:	ble	1297c <error@@Base+0x564>
   12908:	strb	r0, [sp, #16]
   1290c:	cmp	sl, #1
   12910:	beq	1293c <error@@Base+0x524>
   12914:	mov	r5, r8
   12918:	sub	r8, sl, #1
   1291c:	ldr	r0, [sp]
   12920:	mov	r1, #1
   12924:	mov	r2, r8
   12928:	mov	r3, r9
   1292c:	bl	10b7c <fread@plt>
   12930:	cmp	r0, r8
   12934:	mov	r8, r5
   12938:	bne	12990 <error@@Base+0x578>
   1293c:	mov	r0, r4
   12940:	mov	r1, #4
   12944:	add	r2, sp, #12
   12948:	bl	10b88 <utf8proc_iterate@plt>
   1294c:	cmp	r0, sl
   12950:	bne	12988 <error@@Base+0x570>
   12954:	ldr	r2, [sp, #12]
   12958:	cmp	r8, #0
   1295c:	beq	128d4 <error@@Base+0x4bc>
   12960:	mov	r5, #1
   12964:	ldr	r0, [sp, #8]
   12968:	cmp	r2, r0
   1296c:	beq	128e4 <error@@Base+0x4cc>
   12970:	b	128d4 <error@@Base+0x4bc>
   12974:	sub	sp, fp, #28
   12978:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1297c:	movw	r0, #15887	; 0x3e0f
   12980:	movt	r0, #1
   12984:	bl	12418 <error@@Base>
   12988:	bl	10c30 <utf8proc_errmsg@plt>
   1298c:	bl	12418 <error@@Base>
   12990:	movw	r0, #15911	; 0x3e27
   12994:	movt	r0, #1
   12998:	bl	12418 <error@@Base>
   1299c:	push	{r4, r5, r6, r7, fp, lr}
   129a0:	add	fp, sp, #16
   129a4:	cmp	r1, #0
   129a8:	beq	12a7c <error@@Base+0x664>
   129ac:	mov	r5, r1
   129b0:	mov	r4, r0
   129b4:	mov	r6, #32
   129b8:	mov	r7, r1
   129bc:	ldr	r0, [r7, #12]
   129c0:	bl	12d5c <error@@Base+0x944>
   129c4:	cmp	r0, #0
   129c8:	strne	r6, [r7, #12]
   129cc:	ldr	r7, [r7, #4]
   129d0:	cmp	r7, #0
   129d4:	bne	129bc <error@@Base+0x5a4>
   129d8:	mov	r6, #0
   129dc:	b	12a00 <error@@Base+0x5e8>
   129e0:	mov	r0, r4
   129e4:	mov	r1, r5
   129e8:	bl	12e54 <error@@Base+0xa3c>
   129ec:	mov	r0, r5
   129f0:	bl	10b04 <free@plt>
   129f4:	cmp	r7, #0
   129f8:	mov	r5, r7
   129fc:	beq	12a7c <error@@Base+0x664>
   12a00:	ldr	r7, [r5, #4]
   12a04:	ldr	r1, [r5, #12]
   12a08:	cmp	r1, #32
   12a0c:	bne	12a48 <error@@Base+0x630>
   12a10:	tst	r6, #255	; 0xff
   12a14:	cmpne	r7, #0
   12a18:	bne	12a64 <error@@Base+0x64c>
   12a1c:	tst	r6, #255	; 0xff
   12a20:	cmpne	r7, #0
   12a24:	beq	129e0 <error@@Base+0x5c8>
   12a28:	ldr	r0, [r7, #12]
   12a2c:	cmp	r0, #32
   12a30:	bne	129e0 <error@@Base+0x5c8>
   12a34:	ldrb	r0, [r5, #8]
   12a38:	ldrb	r1, [r7, #8]
   12a3c:	orr	r0, r1, r0
   12a40:	strb	r0, [r7, #8]
   12a44:	b	129e0 <error@@Base+0x5c8>
   12a48:	subs	r0, r1, #10
   12a4c:	movwne	r0, #1
   12a50:	tst	r6, #255	; 0xff
   12a54:	cmpeq	r1, #10
   12a58:	beq	129e0 <error@@Base+0x5c8>
   12a5c:	mov	r6, r0
   12a60:	b	129f4 <error@@Base+0x5dc>
   12a64:	ldr	r1, [r7, #12]
   12a68:	cmp	r1, #10
   12a6c:	movne	r0, #1
   12a70:	cmpne	r1, #32
   12a74:	beq	12a1c <error@@Base+0x604>
   12a78:	b	12a5c <error@@Base+0x644>
   12a7c:	pop	{r4, r5, r6, r7, fp, pc}
   12a80:	push	{r4, sl, fp, lr}
   12a84:	add	fp, sp, #8
   12a88:	cmp	r0, #0
   12a8c:	popeq	{r4, sl, fp, pc}
   12a90:	mov	r4, r0
   12a94:	ldr	r0, [r4, #12]
   12a98:	bl	10b58 <utf8proc_tolower@plt>
   12a9c:	str	r0, [r4, #12]
   12aa0:	ldr	r4, [r4, #4]
   12aa4:	cmp	r4, #0
   12aa8:	bne	12a94 <error@@Base+0x67c>
   12aac:	pop	{r4, sl, fp, pc}
   12ab0:	push	{fp, lr}
   12ab4:	mov	fp, sp
   12ab8:	bl	10b28 <utf8proc_encode_char@plt>
   12abc:	cmp	r0, #0
   12ac0:	sxtbgt	r0, r0
   12ac4:	popgt	{fp, pc}
   12ac8:	movw	r0, #15733	; 0x3d75
   12acc:	movt	r0, #1
   12ad0:	bl	12418 <error@@Base>
   12ad4:	push	{r4, r5, r6, r7, fp, lr}
   12ad8:	add	fp, sp, #16
   12adc:	mov	r7, r3
   12ae0:	mov	r4, r2
   12ae4:	mov	r5, r1
   12ae8:	tst	r0, #255	; 0xff
   12aec:	beq	12b2c <error@@Base+0x714>
   12af0:	mov	r0, #94	; 0x5e
   12af4:	mov	r1, r4
   12af8:	bl	12ab0 <error@@Base+0x698>
   12afc:	mov	r6, r0
   12b00:	cmp	r5, #10
   12b04:	bne	12b38 <error@@Base+0x720>
   12b08:	movw	r0, #12585	; 0x3129
   12b0c:	movt	r0, #1
   12b10:	movw	r1, #15756	; 0x3d8c
   12b14:	movt	r1, #1
   12b18:	tst	r7, #255	; 0xff
   12b1c:	moveq	r1, r0
   12b20:	add	r0, r4, r6
   12b24:	pop	{r4, r5, r6, r7, fp, lr}
   12b28:	b	10c24 <sprintf@plt>
   12b2c:	mov	r6, #0
   12b30:	cmp	r5, #10
   12b34:	beq	12b08 <error@@Base+0x6f0>
   12b38:	mov	r0, r5
   12b3c:	bl	12bb0 <error@@Base+0x798>
   12b40:	cmp	r0, #0
   12b44:	beq	12b84 <error@@Base+0x76c>
   12b48:	mov	r0, r5
   12b4c:	bl	12bf0 <error@@Base+0x7d8>
   12b50:	cmp	r0, #0
   12b54:	beq	12b68 <error@@Base+0x750>
   12b58:	add	r1, r4, r6
   12b5c:	movw	r0, #9676	; 0x25cc
   12b60:	bl	12ab0 <error@@Base+0x698>
   12b64:	add	r6, r6, r0
   12b68:	add	r1, r4, r6
   12b6c:	mov	r0, r5
   12b70:	bl	12ab0 <error@@Base+0x698>
   12b74:	add	r0, r6, r0
   12b78:	mov	r1, #0
   12b7c:	strb	r1, [r4, r0]
   12b80:	pop	{r4, r5, r6, r7, fp, pc}
   12b84:	add	r0, r4, r6
   12b88:	cmp	r5, #255	; 0xff
   12b8c:	bhi	12b9c <error@@Base+0x784>
   12b90:	movw	r1, #15761	; 0x3d91
   12b94:	movt	r1, #1
   12b98:	b	12ba4 <error@@Base+0x78c>
   12b9c:	movw	r1, #15768	; 0x3d98
   12ba0:	movt	r1, #1
   12ba4:	mov	r2, r5
   12ba8:	pop	{r4, r5, r6, r7, fp, lr}
   12bac:	b	10c24 <sprintf@plt>
   12bb0:	push	{r4, sl, fp, lr}
   12bb4:	add	fp, sp, #8
   12bb8:	mov	r4, r0
   12bbc:	bl	10b10 <utf8proc_get_property@plt>
   12bc0:	mov	r1, r0
   12bc4:	mov	r0, #1
   12bc8:	cmp	r4, #32
   12bcc:	popeq	{r4, sl, fp, pc}
   12bd0:	ldrsh	r1, [r1]
   12bd4:	sub	r2, r1, #1
   12bd8:	cmp	r2, #22
   12bdc:	bcs	12be4 <error@@Base+0x7cc>
   12be0:	pop	{r4, sl, fp, pc}
   12be4:	cmp	r1, #29
   12be8:	movne	r0, #0
   12bec:	pop	{r4, sl, fp, pc}
   12bf0:	push	{fp, lr}
   12bf4:	mov	fp, sp
   12bf8:	bl	10bdc <utf8proc_category@plt>
   12bfc:	sub	r1, r0, #6
   12c00:	mov	r0, #0
   12c04:	cmp	r1, #3
   12c08:	movwcc	r0, #1
   12c0c:	pop	{fp, pc}
   12c10:	push	{r4, r5, r6, r7, fp, lr}
   12c14:	add	fp, sp, #16
   12c18:	sub	sp, sp, #16
   12c1c:	mov	r6, r2
   12c20:	mov	r2, r1
   12c24:	mov	r5, r0
   12c28:	movw	r1, #13429	; 0x3475
   12c2c:	movt	r1, #1
   12c30:	mov	r0, r2
   12c34:	bl	12108 <getc@plt+0x14a8>
   12c38:	mov	r4, r0
   12c3c:	cmp	r6, #0
   12c40:	beq	12c94 <error@@Base+0x87c>
   12c44:	movw	r0, #15775	; 0x3d9f
   12c48:	movt	r0, #1
   12c4c:	mov	r1, #55	; 0x37
   12c50:	mov	r2, #1
   12c54:	mov	r3, r4
   12c58:	bl	10b70 <fwrite@plt>
   12c5c:	movw	r7, #15831	; 0x3dd7
   12c60:	movt	r7, #1
   12c64:	mov	r0, r7
   12c68:	mov	r1, #55	; 0x37
   12c6c:	mov	r2, #1
   12c70:	mov	r3, r4
   12c74:	bl	10b70 <fwrite@plt>
   12c78:	mov	r0, r4
   12c7c:	blx	r6
   12c80:	mov	r0, r7
   12c84:	mov	r1, #55	; 0x37
   12c88:	mov	r2, #1
   12c8c:	mov	r3, r4
   12c90:	bl	10b70 <fwrite@plt>
   12c94:	ldr	r6, [r5]
   12c98:	cmp	r6, #0
   12c9c:	beq	12cd0 <error@@Base+0x8b8>
   12ca0:	add	r5, sp, #7
   12ca4:	ldr	r1, [r6, #12]
   12ca8:	ldrb	r0, [r6, #8]
   12cac:	mov	r2, r5
   12cb0:	mov	r3, #0
   12cb4:	bl	12ad4 <error@@Base+0x6bc>
   12cb8:	mov	r0, r5
   12cbc:	mov	r1, r4
   12cc0:	bl	10c3c <fputs@plt>
   12cc4:	ldr	r6, [r6, #4]
   12cc8:	cmp	r6, #0
   12ccc:	bne	12ca4 <error@@Base+0x88c>
   12cd0:	mov	r0, r4
   12cd4:	bl	12180 <getc@plt+0x1520>
   12cd8:	sub	sp, fp, #16
   12cdc:	pop	{r4, r5, r6, r7, fp, pc}
   12ce0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ce4:	add	fp, sp, #24
   12ce8:	sub	sp, sp, #8
   12cec:	mov	r6, r0
   12cf0:	mov	r0, #0
   12cf4:	str	r0, [sp, #4]
   12cf8:	ldrb	r0, [r1]
   12cfc:	mov	r8, #1
   12d00:	cmp	r0, #0
   12d04:	beq	12d50 <error@@Base+0x938>
   12d08:	mov	r5, r1
   12d0c:	add	r7, sp, #4
   12d10:	mov	r0, r5
   12d14:	mvn	r1, #0
   12d18:	mov	r2, r7
   12d1c:	bl	10b88 <utf8proc_iterate@plt>
   12d20:	cmp	r0, #1
   12d24:	blt	12d4c <error@@Base+0x934>
   12d28:	mov	r4, r0
   12d2c:	ldr	r2, [sp, #4]
   12d30:	mov	r0, r6
   12d34:	mov	r1, #0
   12d38:	bl	126cc <error@@Base+0x2b4>
   12d3c:	ldrb	r0, [r5, r4]!
   12d40:	cmp	r0, #0
   12d44:	bne	12d10 <error@@Base+0x8f8>
   12d48:	b	12d50 <error@@Base+0x938>
   12d4c:	mov	r8, #0
   12d50:	mov	r0, r8
   12d54:	sub	sp, fp, #24
   12d58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12d5c:	push	{r4, sl, fp, lr}
   12d60:	add	fp, sp, #8
   12d64:	mov	r4, r0
   12d68:	bl	10b10 <utf8proc_get_property@plt>
   12d6c:	cmp	r4, #10
   12d70:	ble	12d8c <error@@Base+0x974>
   12d74:	sub	r1, r4, #11
   12d78:	cmp	r1, #3
   12d7c:	bcc	12da8 <error@@Base+0x990>
   12d80:	cmp	r4, #160	; 0xa0
   12d84:	beq	12da8 <error@@Base+0x990>
   12d88:	b	12db4 <error@@Base+0x99c>
   12d8c:	cmp	r4, #9
   12d90:	beq	12da8 <error@@Base+0x990>
   12d94:	mov	r1, #0
   12d98:	cmp	r4, #10
   12d9c:	bne	12db4 <error@@Base+0x99c>
   12da0:	mov	r0, r1
   12da4:	pop	{r4, sl, fp, pc}
   12da8:	mov	r1, #1
   12dac:	mov	r0, r1
   12db0:	pop	{r4, sl, fp, pc}
   12db4:	ldrsh	r0, [r0]
   12db8:	sub	r0, r0, #23
   12dbc:	mov	r1, #0
   12dc0:	cmp	r0, #3
   12dc4:	movwcc	r1, #1
   12dc8:	mov	r0, r1
   12dcc:	pop	{r4, sl, fp, pc}
   12dd0:	vmov.i32	q8, #0	; 0x00000000
   12dd4:	vst1.32	{d16-d17}, [r0]
   12dd8:	bx	lr
   12ddc:	mov	r2, r1
   12de0:	ldr	r3, [r0]
   12de4:	mov	r1, #0
   12de8:	b	12dec <error@@Base+0x9d4>
   12dec:	push	{r4, sl, fp, lr}
   12df0:	add	fp, sp, #8
   12df4:	mov	r4, r0
   12df8:	stm	r2, {r1, r3}
   12dfc:	cmp	r1, #0
   12e00:	addne	r0, r1, #4
   12e04:	str	r2, [r0]
   12e08:	cmp	r3, #0
   12e0c:	addeq	r3, r4, #4
   12e10:	str	r2, [r3]
   12e14:	mov	r0, r4
   12e18:	bl	12ea8 <error@@Base+0xa90>
   12e1c:	ldr	r0, [r4, #12]
   12e20:	add	r0, r0, #1
   12e24:	str	r0, [r4, #12]
   12e28:	pop	{r4, sl, fp, pc}
   12e2c:	mov	r2, r1
   12e30:	ldr	r1, [r0, #4]
   12e34:	mov	r3, #0
   12e38:	b	12dec <error@@Base+0x9d4>
   12e3c:	mov	r3, r2
   12e40:	mov	r2, r1
   12e44:	ldr	r1, [r3]
   12e48:	b	12dec <error@@Base+0x9d4>
   12e4c:	ldr	r3, [r1, #4]
   12e50:	b	12dec <error@@Base+0x9d4>
   12e54:	push	{r4, sl, fp, lr}
   12e58:	add	fp, sp, #8
   12e5c:	mov	r4, r0
   12e60:	ldm	r1, {r0, r2}
   12e64:	cmp	r0, #0
   12e68:	mov	r3, r4
   12e6c:	addne	r3, r0, #4
   12e70:	str	r2, [r3]
   12e74:	ldm	r1, {r0, r2}
   12e78:	cmp	r2, #0
   12e7c:	addeq	r2, r4, #4
   12e80:	str	r0, [r2]
   12e84:	mov	r0, #0
   12e88:	str	r0, [r1]
   12e8c:	str	r0, [r1, #4]
   12e90:	mov	r0, r4
   12e94:	bl	12ea8 <error@@Base+0xa90>
   12e98:	ldr	r0, [r4, #12]
   12e9c:	sub	r0, r0, #1
   12ea0:	str	r0, [r4, #12]
   12ea4:	pop	{r4, sl, fp, pc}
   12ea8:	push	{r4, sl, fp, lr}
   12eac:	add	fp, sp, #8
   12eb0:	mov	r4, r0
   12eb4:	ldr	r0, [r0, #8]
   12eb8:	cmp	r0, #0
   12ebc:	popeq	{r4, sl, fp, pc}
   12ec0:	bl	10b04 <free@plt>
   12ec4:	mov	r0, #0
   12ec8:	str	r0, [r4, #8]
   12ecc:	pop	{r4, sl, fp, pc}
   12ed0:	push	{r4, sl, fp, lr}
   12ed4:	add	fp, sp, #8
   12ed8:	mov	r4, r0
   12edc:	ldr	r0, [r0, #8]
   12ee0:	cmp	r0, #0
   12ee4:	bne	12f28 <error@@Base+0xb10>
   12ee8:	ldr	r0, [r4, #12]
   12eec:	cmp	r0, #0
   12ef0:	beq	12f28 <error@@Base+0xb10>
   12ef4:	mov	r1, #4
   12ef8:	bl	12064 <getc@plt+0x1404>
   12efc:	str	r0, [r4, #8]
   12f00:	ldr	r0, [r4]
   12f04:	cmp	r0, #0
   12f08:	popeq	{r4, sl, fp, pc}
   12f0c:	mov	r1, #0
   12f10:	ldr	r2, [r4, #8]
   12f14:	str	r0, [r2, r1]
   12f18:	add	r1, r1, #4
   12f1c:	ldr	r0, [r0, #4]
   12f20:	cmp	r0, #0
   12f24:	bne	12f10 <error@@Base+0xaf8>
   12f28:	pop	{r4, sl, fp, pc}
   12f2c:	push	{r4, r5, r6, sl, fp, lr}
   12f30:	add	fp, sp, #16
   12f34:	ldr	r6, [r0]
   12f38:	cmp	r6, #0
   12f3c:	beq	12f68 <error@@Base+0xb50>
   12f40:	mov	r4, r1
   12f44:	mov	r5, r0
   12f48:	mov	r0, r5
   12f4c:	mov	r1, r6
   12f50:	bl	12e54 <error@@Base+0xa3c>
   12f54:	mov	r0, r6
   12f58:	blx	r4
   12f5c:	ldr	r6, [r5]
   12f60:	cmp	r6, #0
   12f64:	bne	12f48 <error@@Base+0xb30>
   12f68:	pop	{r4, r5, r6, sl, fp, pc}
   12f6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f70:	mov	r7, r0
   12f74:	ldr	r6, [pc, #72]	; 12fc4 <error@@Base+0xbac>
   12f78:	ldr	r5, [pc, #72]	; 12fc8 <error@@Base+0xbb0>
   12f7c:	add	r6, pc, r6
   12f80:	add	r5, pc, r5
   12f84:	sub	r6, r6, r5
   12f88:	mov	r8, r1
   12f8c:	mov	r9, r2
   12f90:	bl	10ab4 <calloc@plt-0x20>
   12f94:	asrs	r6, r6, #2
   12f98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f9c:	mov	r4, #0
   12fa0:	add	r4, r4, #1
   12fa4:	ldr	r3, [r5], #4
   12fa8:	mov	r2, r9
   12fac:	mov	r1, r8
   12fb0:	mov	r0, r7
   12fb4:	blx	r3
   12fb8:	cmp	r6, r4
   12fbc:	bne	12fa0 <error@@Base+0xb88>
   12fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fc4:	andeq	r1, r1, r8, ror lr
   12fc8:	andeq	r1, r1, r0, ror lr
   12fcc:	bx	lr
   12fd0:	mov	r2, r1
   12fd4:	mov	r1, r0
   12fd8:	mov	r0, #3
   12fdc:	b	10b64 <__xstat@plt>

Disassembly of section .fini:

00012fe0 <.fini>:
   12fe0:	push	{r3, lr}
   12fe4:	pop	{r3, pc}
