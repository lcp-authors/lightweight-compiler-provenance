
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf32-littlearm


Disassembly of section .init:

0001088c <.init>:
   1088c:	push	{r3, lr}
   10890:	bl	10af0 <getc@plt+0xdc>
   10894:	pop	{r3, pc}

Disassembly of section .plt:

00010898 <calloc@plt-0x14>:
   10898:	push	{lr}		; (str lr, [sp, #-4]!)
   1089c:	ldr	lr, [pc, #4]	; 108a8 <calloc@plt-0x4>
   108a0:	add	lr, pc, lr
   108a4:	ldr	pc, [lr, #8]!
   108a8:	andeq	r3, r1, r8, asr r7

000108ac <calloc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #77824	; 0x13000
   108b4:	ldr	pc, [ip, #1880]!	; 0x758

000108b8 <strcmp@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #77824	; 0x13000
   108c0:	ldr	pc, [ip, #1872]!	; 0x750

000108c4 <fopen@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #77824	; 0x13000
   108cc:	ldr	pc, [ip, #1864]!	; 0x748

000108d0 <free@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #77824	; 0x13000
   108d8:	ldr	pc, [ip, #1856]!	; 0x740

000108dc <utf8proc_get_property@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #77824	; 0x13000
   108e4:	ldr	pc, [ip, #1848]!	; 0x738

000108e8 <fgets@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #77824	; 0x13000
   108f0:	ldr	pc, [ip, #1840]!	; 0x730

000108f4 <utf8proc_encode_char@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #77824	; 0x13000
   108fc:	ldr	pc, [ip, #1832]!	; 0x728

00010900 <strdup@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #77824	; 0x13000
   10908:	ldr	pc, [ip, #1824]!	; 0x720

0001090c <rewind@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #77824	; 0x13000
   10914:	ldr	pc, [ip, #1816]!	; 0x718

00010918 <unlink@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #77824	; 0x13000
   10920:	ldr	pc, [ip, #1808]!	; 0x710

00010924 <utf8proc_tolower@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #77824	; 0x13000
   1092c:	ldr	pc, [ip, #1800]!	; 0x708

00010930 <__xstat@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #77824	; 0x13000
   10938:	ldr	pc, [ip, #1792]!	; 0x700

0001093c <fwrite@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #77824	; 0x13000
   10944:	ldr	pc, [ip, #1784]!	; 0x6f8

00010948 <fread@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #77824	; 0x13000
   10950:	ldr	pc, [ip, #1776]!	; 0x6f0

00010954 <utf8proc_iterate@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #77824	; 0x13000
   1095c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010960 <__libc_start_main@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #77824	; 0x13000
   10968:	ldr	pc, [ip, #1760]!	; 0x6e0

0001096c <__sysv_signal@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1752]!	; 0x6d8

00010978 <__gmon_start__@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1744]!	; 0x6d0

00010984 <getpid@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010990 <exit@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1728]!	; 0x6c0

0001099c <utf8proc_category@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1720]!	; 0x6b8

000109a8 <strlen@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1712]!	; 0x6b0

000109b4 <fprintf@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1704]!	; 0x6a8

000109c0 <__isoc99_sscanf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1696]!	; 0x6a0

000109cc <fclose@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1688]!	; 0x698

000109d8 <sprintf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1680]!	; 0x690

000109e4 <utf8proc_errmsg@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1672]!	; 0x688

000109f0 <fputs@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1664]!	; 0x680

000109fc <strncmp@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1656]!	; 0x678

00010a08 <abort@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1648]!	; 0x670

00010a14 <getc@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1640]!	; 0x668

Disassembly of section .text:

00010a20 <error@@Base-0x15b4>:
   10a20:	push	{r4, r5, r6, lr}
   10a24:	sub	sp, sp, #8
   10a28:	add	ip, sp, #8
   10a2c:	ldr	r2, [pc, #112]	; 10aa4 <getc@plt+0x90>
   10a30:	mov	r3, #0
   10a34:	str	r0, [ip, #-4]!
   10a38:	add	r2, pc, r2
   10a3c:	mov	r0, ip
   10a40:	mov	r5, r1
   10a44:	bl	12174 <error@@Base+0x1a0>
   10a48:	ldr	r3, [sp, #4]
   10a4c:	ldr	r2, [pc, #84]	; 10aa8 <getc@plt+0x94>
   10a50:	cmp	r3, #1
   10a54:	add	r2, pc, r2
   10a58:	ble	10a98 <getc@plt+0x84>
   10a5c:	ldr	r3, [pc, #72]	; 10aac <getc@plt+0x98>
   10a60:	sub	r5, r5, #4
   10a64:	mov	r4, #0
   10a68:	ldr	r6, [r2, r3]
   10a6c:	ldr	r1, [r5, #4]!
   10a70:	mov	r0, r6
   10a74:	bl	10f8c <getc@plt+0x578>
   10a78:	ldr	r3, [sp, #4]
   10a7c:	add	r4, r4, #1
   10a80:	cmp	r3, r4
   10a84:	bgt	10a6c <getc@plt+0x58>
   10a88:	mov	r0, r6
   10a8c:	mov	r1, #0
   10a90:	bl	11330 <getc@plt+0x91c>
   10a94:	bl	11f60 <getc@plt+0x154c>
   10a98:	ldr	r0, [pc, #16]	; 10ab0 <getc@plt+0x9c>
   10a9c:	add	r0, pc, r0
   10aa0:	bl	11fd4 <error@@Base>
   10aa4:	andeq	r2, r0, ip, lsl r3
   10aa8:	andeq	r3, r1, r4, lsr #11
   10aac:	andeq	r0, r0, ip, lsl #1
   10ab0:	strdeq	r2, [r0], -r0
   10ab4:	mov	fp, #0
   10ab8:	mov	lr, #0
   10abc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ac0:	mov	r2, sp
   10ac4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac8:	push	{r0}		; (str r0, [sp, #-4]!)
   10acc:	ldr	ip, [pc, #16]	; 10ae4 <getc@plt+0xd0>
   10ad0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ad4:	ldr	r0, [pc, #12]	; 10ae8 <getc@plt+0xd4>
   10ad8:	ldr	r3, [pc, #12]	; 10aec <getc@plt+0xd8>
   10adc:	bl	10960 <__libc_start_main@plt>
   10ae0:	bl	10a08 <abort@plt>
   10ae4:	andeq	r2, r1, ip, asr #26
   10ae8:	andeq	r0, r1, r0, lsr #20
   10aec:	andeq	r2, r1, ip, ror #25
   10af0:	ldr	r3, [pc, #20]	; 10b0c <getc@plt+0xf8>
   10af4:	ldr	r2, [pc, #20]	; 10b10 <getc@plt+0xfc>
   10af8:	add	r3, pc, r3
   10afc:	ldr	r2, [r3, r2]
   10b00:	cmp	r2, #0
   10b04:	bxeq	lr
   10b08:	b	10978 <__gmon_start__@plt>
   10b0c:	andeq	r3, r1, r0, lsl #10
   10b10:	muleq	r0, r8, r0
   10b14:	ldr	r3, [pc, #28]	; 10b38 <getc@plt+0x124>
   10b18:	ldr	r0, [pc, #28]	; 10b3c <getc@plt+0x128>
   10b1c:	sub	r3, r3, r0
   10b20:	cmp	r3, #6
   10b24:	bxls	lr
   10b28:	ldr	r3, [pc, #16]	; 10b40 <getc@plt+0x12c>
   10b2c:	cmp	r3, #0
   10b30:	bxeq	lr
   10b34:	bx	r3
   10b38:	andeq	r4, r2, r7, asr #1
   10b3c:	andeq	r4, r2, r4, asr #1
   10b40:	andeq	r0, r0, r0
   10b44:	ldr	r1, [pc, #36]	; 10b70 <getc@plt+0x15c>
   10b48:	ldr	r0, [pc, #36]	; 10b74 <getc@plt+0x160>
   10b4c:	sub	r1, r1, r0
   10b50:	asr	r1, r1, #2
   10b54:	add	r1, r1, r1, lsr #31
   10b58:	asrs	r1, r1, #1
   10b5c:	bxeq	lr
   10b60:	ldr	r3, [pc, #16]	; 10b78 <getc@plt+0x164>
   10b64:	cmp	r3, #0
   10b68:	bxeq	lr
   10b6c:	bx	r3
   10b70:	andeq	r4, r2, r4, asr #1
   10b74:	andeq	r4, r2, r4, asr #1
   10b78:	andeq	r0, r0, r0
   10b7c:	push	{r4, lr}
   10b80:	ldr	r4, [pc, #24]	; 10ba0 <getc@plt+0x18c>
   10b84:	ldrb	r3, [r4]
   10b88:	cmp	r3, #0
   10b8c:	popne	{r4, pc}
   10b90:	bl	10b14 <getc@plt+0x100>
   10b94:	mov	r3, #1
   10b98:	strb	r3, [r4]
   10b9c:	pop	{r4, pc}
   10ba0:	andeq	r4, r2, r4, asr #1
   10ba4:	ldr	r0, [pc, #40]	; 10bd4 <getc@plt+0x1c0>
   10ba8:	ldr	r3, [r0]
   10bac:	cmp	r3, #0
   10bb0:	bne	10bb8 <getc@plt+0x1a4>
   10bb4:	b	10b44 <getc@plt+0x130>
   10bb8:	ldr	r3, [pc, #24]	; 10bd8 <getc@plt+0x1c4>
   10bbc:	cmp	r3, #0
   10bc0:	beq	10bb4 <getc@plt+0x1a0>
   10bc4:	push	{r4, lr}
   10bc8:	blx	r3
   10bcc:	pop	{r4, lr}
   10bd0:	b	10b44 <getc@plt+0x130>
   10bd4:	andeq	r3, r2, r0, asr #21
	...
   10be0:	push	{r4, r5, r6, lr}
   10be4:	mov	r6, r2
   10be8:	ldr	r4, [pc, #84]	; 10c44 <getc@plt+0x230>
   10bec:	mov	r2, r0
   10bf0:	add	r4, pc, r4
   10bf4:	mov	r5, r1
   10bf8:	mov	r0, r4
   10bfc:	mov	r1, #99	; 0x63
   10c00:	bl	108e8 <fgets@plt>
   10c04:	cmp	r0, #0
   10c08:	beq	10c28 <getc@plt+0x214>
   10c0c:	ldr	r1, [pc, #52]	; 10c48 <getc@plt+0x234>
   10c10:	mov	r0, r4
   10c14:	mov	r2, r5
   10c18:	add	r1, pc, r1
   10c1c:	bl	109c0 <__isoc99_sscanf@plt>
   10c20:	cmp	r0, #1
   10c24:	beq	10c30 <getc@plt+0x21c>
   10c28:	mov	r0, #0
   10c2c:	pop	{r4, r5, r6, pc}
   10c30:	ldr	r2, [r5]
   10c34:	ldr	r3, [r6]
   10c38:	add	r3, r3, r2
   10c3c:	str	r3, [r6]
   10c40:	pop	{r4, r5, r6, pc}
   10c44:	ldrdeq	r3, [r1], -r0
   10c48:	muleq	r0, r8, r1
   10c4c:	push	{r4, r5, lr}
   10c50:	mov	r2, r0
   10c54:	ldr	r5, [pc, #156]	; 10cf8 <getc@plt+0x2e4>
   10c58:	sub	sp, sp, #28
   10c5c:	add	r5, pc, r5
   10c60:	mov	r4, r1
   10c64:	mov	r0, r5
   10c68:	mov	r1, #99	; 0x63
   10c6c:	bl	108e8 <fgets@plt>
   10c70:	cmp	r0, #0
   10c74:	beq	10ca8 <getc@plt+0x294>
   10c78:	add	r3, sp, #20
   10c7c:	ldr	r1, [pc, #120]	; 10cfc <getc@plt+0x2e8>
   10c80:	str	r3, [sp, #4]
   10c84:	add	r3, sp, #16
   10c88:	str	r3, [sp]
   10c8c:	mov	r0, r5
   10c90:	add	r3, sp, #12
   10c94:	add	r2, sp, #8
   10c98:	add	r1, pc, r1
   10c9c:	bl	109c0 <__isoc99_sscanf@plt>
   10ca0:	cmp	r0, #4
   10ca4:	beq	10cb4 <getc@plt+0x2a0>
   10ca8:	mov	r0, #0
   10cac:	add	sp, sp, #28
   10cb0:	pop	{r4, r5, pc}
   10cb4:	ldr	ip, [r4]
   10cb8:	ldr	lr, [sp, #8]
   10cbc:	ldr	r1, [r4, #4]
   10cc0:	ldr	r0, [sp, #12]
   10cc4:	ldr	r2, [r4, #8]
   10cc8:	ldr	r3, [r4, #12]
   10ccc:	add	ip, ip, lr
   10cd0:	ldr	r5, [sp, #16]
   10cd4:	ldr	lr, [sp, #20]
   10cd8:	add	r1, r1, r0
   10cdc:	add	r2, r2, r5
   10ce0:	add	r3, r3, lr
   10ce4:	mov	r0, #1
   10ce8:	str	ip, [r4]
   10cec:	stmib	r4, {r1, r2, r3}
   10cf0:	add	sp, sp, #28
   10cf4:	pop	{r4, r5, pc}
   10cf8:	andeq	r3, r1, r4, ror #8
   10cfc:	andeq	r2, r0, ip, lsl #2
   10d00:	push	{r4, r5, r6, lr}
   10d04:	mov	r6, r2
   10d08:	ldr	r4, [pc, #68]	; 10d54 <getc@plt+0x340>
   10d0c:	mov	r2, r0
   10d10:	add	r4, pc, r4
   10d14:	mov	r5, r1
   10d18:	mov	r0, r4
   10d1c:	mov	r1, #99	; 0x63
   10d20:	bl	108e8 <fgets@plt>
   10d24:	cmp	r0, #0
   10d28:	popeq	{r4, r5, r6, pc}
   10d2c:	ldr	r1, [pc, #36]	; 10d58 <getc@plt+0x344>
   10d30:	mov	r3, r6
   10d34:	mov	r2, r5
   10d38:	mov	r0, r4
   10d3c:	add	r1, pc, r1
   10d40:	bl	109c0 <__isoc99_sscanf@plt>
   10d44:	sub	r0, r0, #2
   10d48:	clz	r0, r0
   10d4c:	lsr	r0, r0, #5
   10d50:	pop	{r4, r5, r6, pc}
   10d54:			; <UNDEFINED> instruction: 0x000133b0
   10d58:	andeq	r2, r0, r0, ror r0
   10d5c:	sub	sp, sp, #8
   10d60:	cmp	r2, #0
   10d64:	str	r1, [sp, #4]
   10d68:	beq	10d9c <getc@plt+0x388>
   10d6c:	vldr	s15, [sp, #4]
   10d70:	vldr	d5, [pc, #64]	; 10db8 <getc@plt+0x3a4>
   10d74:	vmov	s13, r2
   10d78:	ldr	r1, [pc, #64]	; 10dc0 <getc@plt+0x3ac>
   10d7c:	vcvt.f64.s32	d7, s15
   10d80:	add	r1, pc, r1
   10d84:	vcvt.f64.s32	d6, s13
   10d88:	vmul.f64	d7, d7, d5
   10d8c:	vdiv.f64	d5, d7, d6
   10d90:	vmov	r2, r3, d5
   10d94:	add	sp, sp, #8
   10d98:	b	109b4 <fprintf@plt>
   10d9c:	mov	r3, r0
   10da0:	ldr	r0, [pc, #28]	; 10dc4 <getc@plt+0x3b0>
   10da4:	mov	r2, #8
   10da8:	mov	r1, #1
   10dac:	add	r0, pc, r0
   10db0:	add	sp, sp, #8
   10db4:	b	1093c <fwrite@plt>
   10db8:	andeq	r0, r0, r0
   10dbc:	subsmi	r0, r9, r0
   10dc0:	andeq	r2, r0, r0, asr #32
   10dc4:	andeq	r2, r0, r8
   10dc8:	ldr	r2, [r0, #12]
   10dcc:	ldr	r3, [r1, #12]
   10dd0:	cmp	r2, r3
   10dd4:	beq	10de0 <getc@plt+0x3cc>
   10dd8:	sub	r0, r3, r2
   10ddc:	bx	lr
   10de0:	ldr	r2, [r0, #16]
   10de4:	ldr	r3, [r1, #16]
   10de8:	cmp	r2, r3
   10dec:	bne	10dd8 <getc@plt+0x3c4>
   10df0:	ldr	r1, [r1, #8]
   10df4:	ldr	r0, [r0, #8]
   10df8:	b	11de4 <getc@plt+0x13d0>
   10dfc:	push	{r4, r5, r6, r7, lr}
   10e00:	mov	r4, r1
   10e04:	mov	r6, r2
   10e08:	mov	r7, r3
   10e0c:	ldm	r1, {r2, r3}
   10e10:	ldr	r1, [pc, #120]	; 10e90 <getc@plt+0x47c>
   10e14:	sub	sp, sp, #20
   10e18:	add	r1, pc, r1
   10e1c:	mov	r5, r0
   10e20:	bl	109b4 <fprintf@plt>
   10e24:	ldr	r2, [r4]
   10e28:	ldr	r1, [r4, #4]
   10e2c:	mov	r0, r5
   10e30:	sub	r1, r2, r1
   10e34:	bl	10d5c <getc@plt+0x348>
   10e38:	cmp	r6, #0
   10e3c:	beq	10e5c <getc@plt+0x448>
   10e40:	ldr	r1, [pc, #76]	; 10e94 <getc@plt+0x480>
   10e44:	mov	r2, r6
   10e48:	mov	r0, r5
   10e4c:	add	r1, pc, r1
   10e50:	bl	109b4 <fprintf@plt>
   10e54:	add	sp, sp, #20
   10e58:	pop	{r4, r5, r6, r7, pc}
   10e5c:	add	r4, sp, #4
   10e60:	mov	r1, r7
   10e64:	mov	r0, r6
   10e68:	mov	r2, r4
   10e6c:	mov	r3, #1
   10e70:	bl	1283c <error@@Base+0x868>
   10e74:	ldr	r1, [pc, #28]	; 10e98 <getc@plt+0x484>
   10e78:	mov	r2, r4
   10e7c:	mov	r0, r5
   10e80:	add	r1, pc, r1
   10e84:	bl	109b4 <fprintf@plt>
   10e88:	add	sp, sp, #20
   10e8c:	pop	{r4, r5, r6, r7, pc}
   10e90:			; <UNDEFINED> instruction: 0x00001fb0
   10e94:	andeq	r2, r0, ip, lsr #32
   10e98:	andeq	r1, r0, r4, asr pc
   10e9c:	push	{r4, r5, r6, r7, r8, lr}
   10ea0:	mov	r5, r0
   10ea4:	mov	r0, r1
   10ea8:	mov	r7, r2
   10eac:	mov	r6, r3
   10eb0:	mov	r4, r1
   10eb4:	bl	11c6c <getc@plt+0x1258>
   10eb8:	add	r1, r5, r4, lsl #3
   10ebc:	add	r1, r1, #8192	; 0x2000
   10ec0:	sxth	r0, r0
   10ec4:	add	r0, r5, r0, lsl #3
   10ec8:	ldr	r2, [r0, #68]	; 0x44
   10ecc:	ldr	r3, [r0, #72]	; 0x48
   10ed0:	add	r2, r2, r7
   10ed4:	add	r3, r3, r6
   10ed8:	str	r2, [r0, #68]	; 0x44
   10edc:	str	r3, [r0, #72]	; 0x48
   10ee0:	ldr	r2, [r5, #2116]	; 0x844
   10ee4:	ldr	r3, [r5, #2120]	; 0x848
   10ee8:	add	r2, r2, r7
   10eec:	add	r3, r3, r6
   10ef0:	str	r2, [r5, #2116]	; 0x844
   10ef4:	str	r3, [r5, #2120]	; 0x848
   10ef8:	ldr	ip, [r1, #1988]	; 0x7c4
   10efc:	ldr	r0, [r1, #1992]	; 0x7c8
   10f00:	add	r2, ip, r7
   10f04:	add	r3, r0, r6
   10f08:	str	r2, [r1, #1988]	; 0x7c4
   10f0c:	str	r3, [r1, #1992]	; 0x7c8
   10f10:	pop	{r4, r5, r6, r7, r8, pc}
   10f14:	add	r0, r0, #2112	; 0x840
   10f18:	push	{r4, r5, r6, r7, r8, lr}
   10f1c:	add	r4, r0, #12
   10f20:	mov	r0, r4
   10f24:	mov	r6, r2
   10f28:	mov	r5, r3
   10f2c:	mov	r7, r1
   10f30:	bl	11904 <getc@plt+0xef0>
   10f34:	cmp	r0, #0
   10f38:	beq	10f58 <getc@plt+0x544>
   10f3c:	ldr	ip, [r0, #12]
   10f40:	ldr	r1, [r0, #16]
   10f44:	add	r2, ip, r6
   10f48:	add	r3, r1, r5
   10f4c:	str	r2, [r0, #12]
   10f50:	str	r3, [r0, #16]
   10f54:	pop	{r4, r5, r6, r7, r8, pc}
   10f58:	mov	r1, #20
   10f5c:	mov	r0, #1
   10f60:	bl	1202c <error@@Base+0x58>
   10f64:	mov	r8, r0
   10f68:	mov	r0, r7
   10f6c:	bl	10900 <strdup@plt>
   10f70:	str	r6, [r8, #12]
   10f74:	str	r5, [r8, #16]
   10f78:	mov	r1, r8
   10f7c:	str	r0, [r8, #8]
   10f80:	mov	r0, r4
   10f84:	pop	{r4, r5, r6, r7, r8, lr}
   10f88:	b	11988 <getc@plt+0xf74>
   10f8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f90:	mov	r8, r1
   10f94:	ldr	r1, [pc, #868]	; 11300 <getc@plt+0x8ec>
   10f98:	sub	sp, sp, #28
   10f9c:	add	r1, pc, r1
   10fa0:	mov	r5, r0
   10fa4:	mov	r0, r8
   10fa8:	bl	120e4 <error@@Base+0x110>
   10fac:	ldr	r6, [pc, #848]	; 11304 <getc@plt+0x8f0>
   10fb0:	mov	r1, #99	; 0x63
   10fb4:	add	r6, pc, r6
   10fb8:	mov	r2, r0
   10fbc:	mov	r4, r0
   10fc0:	mov	r0, r6
   10fc4:	bl	108e8 <fgets@plt>
   10fc8:	cmp	r0, #0
   10fcc:	beq	112dc <getc@plt+0x8c8>
   10fd0:	ldr	r1, [pc, #816]	; 11308 <getc@plt+0x8f4>
   10fd4:	mov	r2, #40	; 0x28
   10fd8:	add	r1, pc, r1
   10fdc:	mov	r0, r6
   10fe0:	bl	109fc <strncmp@plt>
   10fe4:	cmp	r0, #0
   10fe8:	bne	112dc <getc@plt+0x8c8>
   10fec:	mov	r2, r4
   10ff0:	mov	r1, #99	; 0x63
   10ff4:	mov	r0, r6
   10ff8:	bl	108e8 <fgets@plt>
   10ffc:	cmp	r0, #0
   11000:	beq	112dc <getc@plt+0x8c8>
   11004:	ldr	r1, [pc, #768]	; 1130c <getc@plt+0x8f8>
   11008:	mov	r0, r6
   1100c:	add	r1, pc, r1
   11010:	bl	108b8 <strcmp@plt>
   11014:	cmp	r0, #0
   11018:	bne	112dc <getc@plt+0x8c8>
   1101c:	mov	r2, r5
   11020:	add	r1, sp, #4
   11024:	mov	r0, r4
   11028:	bl	10be0 <getc@plt+0x1cc>
   1102c:	cmp	r0, #0
   11030:	beq	112dc <getc@plt+0x8c8>
   11034:	add	r2, r5, #4
   11038:	add	r1, sp, #8
   1103c:	mov	r0, r4
   11040:	bl	10be0 <getc@plt+0x1cc>
   11044:	cmp	r0, #0
   11048:	beq	112dc <getc@plt+0x8c8>
   1104c:	mov	r2, r4
   11050:	mov	r1, #99	; 0x63
   11054:	mov	r0, r6
   11058:	bl	108e8 <fgets@plt>
   1105c:	cmp	r0, #0
   11060:	beq	112dc <getc@plt+0x8c8>
   11064:	mov	r0, r6
   11068:	mov	r2, r4
   1106c:	mov	r1, #99	; 0x63
   11070:	bl	108e8 <fgets@plt>
   11074:	cmp	r0, #0
   11078:	beq	112dc <getc@plt+0x8c8>
   1107c:	add	r6, sp, #12
   11080:	mov	r1, r6
   11084:	add	r2, r5, #8
   11088:	mov	r0, r4
   1108c:	bl	10be0 <getc@plt+0x1cc>
   11090:	cmp	r0, #0
   11094:	beq	112dc <getc@plt+0x8c8>
   11098:	add	r2, r5, #12
   1109c:	mov	r1, r6
   110a0:	mov	r0, r4
   110a4:	bl	10be0 <getc@plt+0x1cc>
   110a8:	cmp	r0, #0
   110ac:	beq	112dc <getc@plt+0x8c8>
   110b0:	add	r2, r5, #16
   110b4:	mov	r1, r6
   110b8:	mov	r0, r4
   110bc:	bl	10be0 <getc@plt+0x1cc>
   110c0:	cmp	r0, #0
   110c4:	beq	112dc <getc@plt+0x8c8>
   110c8:	ldr	r7, [pc, #576]	; 11310 <getc@plt+0x8fc>
   110cc:	mov	r2, r4
   110d0:	add	r7, pc, r7
   110d4:	mov	r0, r7
   110d8:	mov	r1, #99	; 0x63
   110dc:	bl	108e8 <fgets@plt>
   110e0:	cmp	r0, #0
   110e4:	beq	112dc <getc@plt+0x8c8>
   110e8:	mov	r2, r4
   110ec:	mov	r1, #99	; 0x63
   110f0:	mov	r0, r7
   110f4:	bl	108e8 <fgets@plt>
   110f8:	cmp	r0, #0
   110fc:	beq	112dc <getc@plt+0x8c8>
   11100:	mov	r2, r4
   11104:	mov	r1, #99	; 0x63
   11108:	mov	r0, r7
   1110c:	bl	108e8 <fgets@plt>
   11110:	cmp	r0, #0
   11114:	beq	112dc <getc@plt+0x8c8>
   11118:	mov	r2, r4
   1111c:	mov	r1, #99	; 0x63
   11120:	mov	r0, r7
   11124:	bl	108e8 <fgets@plt>
   11128:	cmp	r0, #0
   1112c:	beq	112dc <getc@plt+0x8c8>
   11130:	add	r1, r5, #20
   11134:	mov	r0, r4
   11138:	bl	10c4c <getc@plt+0x238>
   1113c:	cmp	r0, #0
   11140:	beq	112dc <getc@plt+0x8c8>
   11144:	add	r1, r5, #36	; 0x24
   11148:	mov	r0, r4
   1114c:	bl	10c4c <getc@plt+0x238>
   11150:	cmp	r0, #0
   11154:	beq	112dc <getc@plt+0x8c8>
   11158:	add	r1, r5, #52	; 0x34
   1115c:	mov	r0, r4
   11160:	bl	10c4c <getc@plt+0x238>
   11164:	cmp	r0, #0
   11168:	beq	112dc <getc@plt+0x8c8>
   1116c:	mov	r2, r4
   11170:	mov	r1, #99	; 0x63
   11174:	mov	r0, r7
   11178:	bl	108e8 <fgets@plt>
   1117c:	cmp	r0, #0
   11180:	beq	112dc <getc@plt+0x8c8>
   11184:	mov	r8, #99	; 0x63
   11188:	b	11198 <getc@plt+0x784>
   1118c:	ldrb	r3, [r7]
   11190:	cmp	r3, #10
   11194:	beq	111b0 <getc@plt+0x79c>
   11198:	mov	r2, r4
   1119c:	mov	r1, r8
   111a0:	mov	r0, r7
   111a4:	bl	108e8 <fgets@plt>
   111a8:	cmp	r0, #0
   111ac:	bne	1118c <getc@plt+0x778>
   111b0:	ldr	r3, [sp, #8]
   111b4:	cmp	r3, #0
   111b8:	ble	11218 <getc@plt+0x804>
   111bc:	ldr	r0, [pc, #336]	; 11314 <getc@plt+0x900>
   111c0:	mov	r2, r4
   111c4:	mov	r1, #99	; 0x63
   111c8:	add	r0, pc, r0
   111cc:	bl	108e8 <fgets@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	11218 <getc@plt+0x804>
   111d8:	ldr	r8, [pc, #312]	; 11318 <getc@plt+0x904>
   111dc:	add	r7, sp, #16
   111e0:	add	r8, pc, r8
   111e4:	add	r8, r8, #20
   111e8:	b	11200 <getc@plt+0x7ec>
   111ec:	ldr	r3, [sp, #16]
   111f0:	ldr	r2, [sp, #12]
   111f4:	mov	r1, r8
   111f8:	mov	r0, r5
   111fc:	bl	10f14 <getc@plt+0x500>
   11200:	mov	r2, r7
   11204:	mov	r1, r6
   11208:	mov	r0, r4
   1120c:	bl	10d00 <getc@plt+0x2ec>
   11210:	cmp	r0, #0
   11214:	bne	111ec <getc@plt+0x7d8>
   11218:	ldr	r3, [sp, #4]
   1121c:	cmp	r3, #0
   11220:	ble	112cc <getc@plt+0x8b8>
   11224:	ldr	r0, [pc, #240]	; 1131c <getc@plt+0x908>
   11228:	mov	r2, r4
   1122c:	mov	r1, #99	; 0x63
   11230:	add	r0, pc, r0
   11234:	bl	108e8 <fgets@plt>
   11238:	cmp	r0, #0
   1123c:	beq	112cc <getc@plt+0x8b8>
   11240:	ldr	r8, [pc, #216]	; 11320 <getc@plt+0x90c>
   11244:	ldr	r9, [pc, #216]	; 11324 <getc@plt+0x910>
   11248:	add	r8, pc, r8
   1124c:	add	r7, sp, #16
   11250:	add	fp, r8, #31
   11254:	add	sl, sp, #20
   11258:	add	r9, pc, r9
   1125c:	b	1127c <getc@plt+0x868>
   11260:	mov	r3, #10
   11264:	mov	r1, r3
   11268:	str	r3, [sp, #20]
   1126c:	ldr	r3, [sp, #16]
   11270:	ldr	r2, [sp, #12]
   11274:	mov	r0, r5
   11278:	bl	10e9c <getc@plt+0x488>
   1127c:	mov	r2, r7
   11280:	mov	r1, r6
   11284:	mov	r0, r4
   11288:	bl	10d00 <getc@plt+0x2ec>
   1128c:	cmp	r0, #0
   11290:	beq	112cc <getc@plt+0x8b8>
   11294:	ldrb	r3, [r8, #31]
   11298:	cmp	r3, #125	; 0x7d
   1129c:	beq	112c0 <getc@plt+0x8ac>
   112a0:	cmp	r3, #92	; 0x5c
   112a4:	beq	11260 <getc@plt+0x84c>
   112a8:	mov	r1, r9
   112ac:	mov	r2, sl
   112b0:	mov	r0, fp
   112b4:	bl	109c0 <__isoc99_sscanf@plt>
   112b8:	ldr	r1, [sp, #20]
   112bc:	b	1126c <getc@plt+0x858>
   112c0:	ldrb	r1, [r8, #30]
   112c4:	str	r1, [sp, #20]
   112c8:	b	1126c <getc@plt+0x858>
   112cc:	mov	r0, r4
   112d0:	bl	11e78 <getc@plt+0x1464>
   112d4:	add	sp, sp, #28
   112d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112dc:	cmp	r8, #0
   112e0:	beq	112f4 <getc@plt+0x8e0>
   112e4:	ldr	r0, [pc, #60]	; 11328 <getc@plt+0x914>
   112e8:	mov	r1, r8
   112ec:	add	r0, pc, r0
   112f0:	bl	12084 <error@@Base+0xb0>
   112f4:	ldr	r8, [pc, #48]	; 1132c <getc@plt+0x918>
   112f8:	add	r8, pc, r8
   112fc:	b	112e4 <getc@plt+0x8d0>
   11300:	andeq	r1, r0, ip, asr #28
   11304:	andeq	r3, r1, ip, lsl #2
   11308:	andeq	r1, r0, r4, lsl lr
   1130c:	andeq	r1, r0, ip, lsl #28
   11310:	strdeq	r2, [r1], -r0
   11314:	strdeq	r2, [r1], -r8
   11318:	andeq	r2, r1, r0, ror #29
   1131c:	muleq	r1, r0, lr
   11320:	andeq	r2, r1, r8, ror lr
   11324:	andeq	r1, r0, ip, ror #23
   11328:	andeq	r1, r0, ip, asr fp
   1132c:	andeq	r1, r0, r8, ror #21
   11330:	mov	r3, r1
   11334:	ldr	r1, [pc, #832]	; 1167c <getc@plt+0xc68>
   11338:	push	{r4, r5, r6, r7, r8, lr}
   1133c:	add	r1, pc, r1
   11340:	sub	sp, sp, #16
   11344:	mov	r6, r0
   11348:	mov	r0, r3
   1134c:	bl	120e4 <error@@Base+0x110>
   11350:	ldr	r3, [pc, #808]	; 11680 <getc@plt+0xc6c>
   11354:	ldr	r2, [pc, #808]	; 11684 <getc@plt+0xc70>
   11358:	ldr	r1, [pc, #808]	; 11688 <getc@plt+0xc74>
   1135c:	add	r3, pc, r3
   11360:	add	r2, pc, r2
   11364:	add	r1, pc, r1
   11368:	ldr	r4, [pc, #796]	; 1168c <getc@plt+0xc78>
   1136c:	add	r5, r6, #68	; 0x44
   11370:	add	r4, pc, r4
   11374:	mov	r7, r0
   11378:	bl	109b4 <fprintf@plt>
   1137c:	ldr	r3, [pc, #780]	; 11690 <getc@plt+0xc7c>
   11380:	mov	r1, r4
   11384:	ldr	r2, [r6]
   11388:	add	r3, pc, r3
   1138c:	mov	r0, r7
   11390:	bl	109b4 <fprintf@plt>
   11394:	ldr	r3, [pc, #760]	; 11694 <getc@plt+0xc80>
   11398:	mov	r1, r4
   1139c:	add	r3, pc, r3
   113a0:	ldr	r2, [r6, #4]
   113a4:	mov	r0, r7
   113a8:	bl	109b4 <fprintf@plt>
   113ac:	ldr	r2, [r6]
   113b0:	ldr	r1, [r6, #4]
   113b4:	mov	r0, r7
   113b8:	sub	r1, r2, r1
   113bc:	bl	10d5c <getc@plt+0x348>
   113c0:	ldr	r1, [pc, #720]	; 11698 <getc@plt+0xc84>
   113c4:	mov	r0, r7
   113c8:	add	r1, pc, r1
   113cc:	bl	109b4 <fprintf@plt>
   113d0:	ldr	r3, [pc, #708]	; 1169c <getc@plt+0xc88>
   113d4:	mov	r1, r4
   113d8:	ldr	r2, [r6, #8]
   113dc:	add	r3, pc, r3
   113e0:	mov	r0, r7
   113e4:	bl	109b4 <fprintf@plt>
   113e8:	ldr	r3, [pc, #688]	; 116a0 <getc@plt+0xc8c>
   113ec:	mov	r1, r4
   113f0:	ldr	r2, [r6, #12]
   113f4:	add	r3, pc, r3
   113f8:	mov	r0, r7
   113fc:	bl	109b4 <fprintf@plt>
   11400:	ldr	r3, [pc, #668]	; 116a4 <getc@plt+0xc90>
   11404:	mov	r1, r4
   11408:	ldr	r2, [r6, #16]
   1140c:	add	r3, pc, r3
   11410:	mov	r0, r7
   11414:	bl	109b4 <fprintf@plt>
   11418:	ldr	r3, [r6, #12]
   1141c:	ldr	r1, [r6, #8]
   11420:	ldr	r2, [r6]
   11424:	add	r1, r1, r3
   11428:	mov	r0, r7
   1142c:	bl	10d5c <getc@plt+0x348>
   11430:	ldr	r1, [pc, #624]	; 116a8 <getc@plt+0xc94>
   11434:	mov	r0, r7
   11438:	add	r1, pc, r1
   1143c:	bl	109b4 <fprintf@plt>
   11440:	ldr	r2, [r6]
   11444:	ldr	r1, [r6, #48]	; 0x30
   11448:	mov	r0, r7
   1144c:	sub	r1, r2, r1
   11450:	bl	10d5c <getc@plt+0x348>
   11454:	ldr	r1, [pc, #592]	; 116ac <getc@plt+0xc98>
   11458:	mov	r0, r7
   1145c:	add	r1, pc, r1
   11460:	bl	109b4 <fprintf@plt>
   11464:	ldr	r0, [pc, #580]	; 116b0 <getc@plt+0xc9c>
   11468:	mov	r3, r7
   1146c:	mov	r2, #37	; 0x25
   11470:	mov	r1, #1
   11474:	add	r0, pc, r0
   11478:	bl	1093c <fwrite@plt>
   1147c:	ldr	r4, [pc, #560]	; 116b4 <getc@plt+0xca0>
   11480:	ldr	ip, [pc, #560]	; 116b8 <getc@plt+0xca4>
   11484:	ldr	r0, [r6, #32]
   11488:	ldr	r1, [r6, #28]
   1148c:	add	r4, pc, r4
   11490:	add	ip, pc, ip
   11494:	ldr	r3, [r6, #24]
   11498:	ldr	r2, [r6, #20]
   1149c:	str	r0, [sp, #4]
   114a0:	str	r1, [sp]
   114a4:	str	ip, [sp, #8]
   114a8:	mov	r1, r4
   114ac:	mov	r0, r7
   114b0:	bl	109b4 <fprintf@plt>
   114b4:	ldr	ip, [pc, #512]	; 116bc <getc@plt+0xca8>
   114b8:	ldr	r0, [r6, #48]	; 0x30
   114bc:	ldr	r1, [r6, #44]	; 0x2c
   114c0:	add	ip, pc, ip
   114c4:	ldr	r3, [r6, #40]	; 0x28
   114c8:	ldr	r2, [r6, #36]	; 0x24
   114cc:	str	r0, [sp, #4]
   114d0:	str	r1, [sp]
   114d4:	str	ip, [sp, #8]
   114d8:	mov	r1, r4
   114dc:	mov	r0, r7
   114e0:	bl	109b4 <fprintf@plt>
   114e4:	ldr	lr, [r6, #64]	; 0x40
   114e8:	ldr	r0, [r6, #60]	; 0x3c
   114ec:	ldr	ip, [pc, #460]	; 116c0 <getc@plt+0xcac>
   114f0:	ldr	r3, [r6, #56]	; 0x38
   114f4:	add	ip, pc, ip
   114f8:	ldr	r2, [r6, #52]	; 0x34
   114fc:	mov	r1, r4
   11500:	stm	sp, {r0, lr}
   11504:	str	ip, [sp, #8]
   11508:	mov	r0, r7
   1150c:	bl	109b4 <fprintf@plt>
   11510:	ldr	r1, [pc, #428]	; 116c4 <getc@plt+0xcb0>
   11514:	mov	r0, r7
   11518:	add	r1, pc, r1
   1151c:	bl	109b4 <fprintf@plt>
   11520:	mov	r4, #0
   11524:	mov	r8, r4
   11528:	ldr	r3, [r5]
   1152c:	mov	r0, r4
   11530:	cmp	r3, #0
   11534:	add	r4, r4, #1
   11538:	ble	11554 <getc@plt+0xb40>
   1153c:	bl	11ca8 <getc@plt+0x1294>
   11540:	mov	r3, r8
   11544:	mov	r1, r5
   11548:	mov	r2, r0
   1154c:	mov	r0, r7
   11550:	bl	10dfc <getc@plt+0x3e8>
   11554:	cmp	r4, #256	; 0x100
   11558:	add	r5, r5, #8
   1155c:	bne	11528 <getc@plt+0xb14>
   11560:	ldr	r2, [pc, #352]	; 116c8 <getc@plt+0xcb4>
   11564:	add	r4, r6, #2112	; 0x840
   11568:	mov	r3, #0
   1156c:	add	r1, r4, #4
   11570:	add	r2, pc, r2
   11574:	mov	r0, r7
   11578:	bl	10dfc <getc@plt+0x3e8>
   1157c:	ldr	r3, [r6, #4]
   11580:	cmp	r3, #0
   11584:	ble	1160c <getc@plt+0xbf8>
   11588:	add	r0, r4, #12
   1158c:	bl	11a90 <getc@plt+0x107c>
   11590:	add	r5, r6, #8192	; 0x2000
   11594:	ldr	r2, [pc, #304]	; 116cc <getc@plt+0xcb8>
   11598:	ldr	r1, [r5, #1980]	; 0x7bc
   1159c:	ldr	r0, [r5, #1984]	; 0x7c0
   115a0:	add	r2, pc, r2
   115a4:	bl	1189c <getc@plt+0xe88>
   115a8:	ldr	r0, [pc, #288]	; 116d0 <getc@plt+0xcbc>
   115ac:	mov	r3, r7
   115b0:	mov	r2, #39	; 0x27
   115b4:	mov	r1, #1
   115b8:	add	r0, pc, r0
   115bc:	bl	1093c <fwrite@plt>
   115c0:	ldr	r3, [r5, #1984]	; 0x7c0
   115c4:	cmp	r3, #0
   115c8:	ble	1160c <getc@plt+0xbf8>
   115cc:	ldr	r8, [pc, #256]	; 116d4 <getc@plt+0xcc0>
   115d0:	mov	r4, #0
   115d4:	add	r8, pc, r8
   115d8:	ldr	r3, [r5, #1980]	; 0x7bc
   115dc:	mov	r1, r8
   115e0:	mov	r0, r7
   115e4:	ldr	ip, [r3, r4, lsl #2]
   115e8:	add	r4, r4, #1
   115ec:	ldr	r3, [ip, #16]
   115f0:	ldr	r2, [ip, #12]
   115f4:	ldr	ip, [ip, #8]
   115f8:	str	ip, [sp]
   115fc:	bl	109b4 <fprintf@plt>
   11600:	ldr	r3, [r5, #1984]	; 0x7c0
   11604:	cmp	r3, r4
   11608:	bgt	115d8 <getc@plt+0xbc4>
   1160c:	ldr	r3, [r6]
   11610:	cmp	r3, #0
   11614:	ble	1166c <getc@plt+0xc58>
   11618:	ldr	r1, [pc, #184]	; 116d8 <getc@plt+0xcc4>
   1161c:	mov	r0, r7
   11620:	add	r1, pc, r1
   11624:	bl	109b4 <fprintf@plt>
   11628:	add	r4, r6, #10176	; 0x27c0
   1162c:	mov	r5, #0
   11630:	ldr	r8, [pc, #164]	; 116dc <getc@plt+0xcc8>
   11634:	add	r4, r4, #4
   11638:	mov	r6, r5
   1163c:	ldr	ip, [r4]
   11640:	mov	r3, r5
   11644:	cmp	ip, #0
   11648:	mov	r1, r4
   1164c:	mov	r2, r6
   11650:	mov	r0, r7
   11654:	add	r5, r5, #1
   11658:	ble	11660 <getc@plt+0xc4c>
   1165c:	bl	10dfc <getc@plt+0x3e8>
   11660:	cmp	r5, r8
   11664:	add	r4, r4, #8
   11668:	bne	1163c <getc@plt+0xc28>
   1166c:	mov	r0, r7
   11670:	add	sp, sp, #16
   11674:	pop	{r4, r5, r6, r7, r8, lr}
   11678:	b	11e78 <getc@plt+0x1464>
   1167c:	andeq	r1, r0, r0, lsr #22
   11680:			; <UNDEFINED> instruction: 0x00001abc
   11684:	andeq	r1, r0, ip, lsl #21
   11688:	strdeq	r1, [r0], -ip
   1168c:	andeq	r1, r0, r4, lsl #22
   11690:	andeq	r1, r0, r0, ror #21
   11694:	andeq	r1, r0, r4, ror #21
   11698:	andeq	r1, r0, r0, asr #21
   1169c:			; <UNDEFINED> instruction: 0x00001abc
   116a0:			; <UNDEFINED> instruction: 0x00001ab8
   116a4:			; <UNDEFINED> instruction: 0x00001ab0
   116a8:	muleq	r0, r0, sl
   116ac:	andeq	r1, r0, r4, lsl #21
   116b0:	andeq	r1, r0, ip, lsl #21
   116b4:	muleq	r0, ip, sl
   116b8:			; <UNDEFINED> instruction: 0x00001ab4
   116bc:	andeq	r1, r0, ip, lsl #21
   116c0:	andeq	r1, r0, r4, ror #20
   116c4:	andeq	r1, r0, r8, asr #20
   116c8:	andeq	r1, r0, r8, ror #19
   116cc:			; <UNDEFINED> instruction: 0xfffff820
   116d0:	andeq	r1, r0, r8, asr #19
   116d4:	ldrdeq	r1, [r0], -r4
   116d8:	andeq	r1, r0, r0, asr #18
   116dc:			; <UNDEFINED> instruction: 0x0010ffff
   116e0:	ldr	r2, [pc, #420]	; 1188c <getc@plt+0xe78>
   116e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116e8:	sub	sp, sp, #28
   116ec:	add	r2, pc, r2
   116f0:	ldr	r9, [pc, #408]	; 11890 <getc@plt+0xe7c>
   116f4:	ldr	r8, [pc, #408]	; 11894 <getc@plt+0xe80>
   116f8:	str	r2, [sp, #16]
   116fc:	ldr	r2, [pc, #404]	; 11898 <getc@plt+0xe84>
   11700:	add	r9, pc, r9
   11704:	add	r8, pc, r8
   11708:	add	r2, pc, r2
   1170c:	lsl	r3, r1, #2
   11710:	str	r1, [sp, #12]
   11714:	str	r2, [sp, #4]
   11718:	str	r0, [sp, #8]
   1171c:	str	r3, [sp, #20]
   11720:	ldr	r3, [sp, #16]
   11724:	ldr	r2, [sp, #12]
   11728:	ldr	r1, [r3]
   1172c:	ldr	r3, [sp, #8]
   11730:	cmp	r3, r2
   11734:	ldr	r7, [r1, r3, lsl #2]
   11738:	bge	11870 <getc@plt+0xe5c>
   1173c:	ldr	r4, [sp, #8]
   11740:	ldr	r5, [sp, #12]
   11744:	lsl	r6, r5, #2
   11748:	b	11750 <getc@plt+0xd3c>
   1174c:	ldr	r1, [r9]
   11750:	ldr	r1, [r1, r6]
   11754:	ldr	r3, [r9, #4]
   11758:	mov	r0, r7
   1175c:	blx	r3
   11760:	cmp	r0, #0
   11764:	bge	117bc <getc@plt+0xda8>
   11768:	sub	r5, r5, #1
   1176c:	cmp	r5, r4
   11770:	sub	r6, r6, #4
   11774:	bgt	1174c <getc@plt+0xd38>
   11778:	bne	117b8 <getc@plt+0xda4>
   1177c:	ldr	r1, [r9]
   11780:	mov	fp, r5
   11784:	add	r0, r1, fp, lsl #2
   11788:	ldr	r3, [sp, #8]
   1178c:	sub	r1, fp, #1
   11790:	cmp	r3, r1
   11794:	str	r7, [r0]
   11798:	blt	11854 <getc@plt+0xe40>
   1179c:	ldr	r2, [sp, #12]
   117a0:	add	r3, r5, #1
   117a4:	cmp	r3, r2
   117a8:	str	r3, [sp, #8]
   117ac:	blt	11720 <getc@plt+0xd0c>
   117b0:	add	sp, sp, #28
   117b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117b8:	lsl	r6, r5, #2
   117bc:	ldr	r3, [sp, #4]
   117c0:	add	sl, r4, #1
   117c4:	cmp	sl, r5
   117c8:	ldr	r1, [r3]
   117cc:	add	r0, r1, r6
   117d0:	ldr	r2, [r1, r6]
   117d4:	str	r2, [r1, r4, lsl #2]
   117d8:	lsl	r4, r4, #2
   117dc:	bge	11860 <getc@plt+0xe4c>
   117e0:	add	fp, r4, #4
   117e4:	b	117fc <getc@plt+0xde8>
   117e8:	add	sl, sl, #1
   117ec:	cmp	sl, r5
   117f0:	add	fp, fp, #4
   117f4:	beq	11840 <getc@plt+0xe2c>
   117f8:	ldr	r1, [r8]
   117fc:	ldr	r1, [r1, fp]
   11800:	ldr	r3, [r8, #4]
   11804:	mov	r0, r7
   11808:	blx	r3
   1180c:	cmp	r0, #0
   11810:	bgt	117e8 <getc@plt+0xdd4>
   11814:	ldr	r1, [r8]
   11818:	mov	r4, sl
   1181c:	add	r0, r1, r6
   11820:	sub	r5, r5, #1
   11824:	ldr	r2, [r1, fp]
   11828:	cmp	r5, sl
   1182c:	str	r2, [r0]
   11830:	bgt	11744 <getc@plt+0xd30>
   11834:	mov	fp, r5
   11838:	mov	r5, r4
   1183c:	b	11784 <getc@plt+0xd70>
   11840:	ldr	r0, [r8]
   11844:	mov	fp, sl
   11848:	add	r0, r0, r6
   1184c:	mov	r5, fp
   11850:	b	11788 <getc@plt+0xd74>
   11854:	mov	r0, r3
   11858:	bl	116e0 <getc@plt+0xccc>
   1185c:	b	1179c <getc@plt+0xd88>
   11860:	beq	11884 <getc@plt+0xe70>
   11864:	lsl	fp, sl, #2
   11868:	mov	r4, sl
   1186c:	b	11820 <getc@plt+0xe0c>
   11870:	ldr	r3, [sp, #20]
   11874:	mov	fp, r2
   11878:	add	r0, r1, r3
   1187c:	ldr	r5, [sp, #8]
   11880:	b	11788 <getc@plt+0xd74>
   11884:	mov	fp, sl
   11888:	b	1184c <getc@plt+0xe38>
   1188c:	andeq	r2, r1, r8, lsr sl
   11890:	andeq	r2, r1, r4, lsr #20
   11894:	andeq	r2, r1, r0, lsr #20
   11898:	andeq	r2, r1, ip, lsl sl
   1189c:	cmp	r0, #1
   118a0:	mov	ip, r1
   118a4:	bxle	lr
   118a8:	ldr	r3, [pc, #20]	; 118c4 <getc@plt+0xeb0>
   118ac:	sub	r1, r0, #1
   118b0:	add	r3, pc, r3
   118b4:	mov	r0, #0
   118b8:	str	ip, [r3]
   118bc:	str	r2, [r3, #4]
   118c0:	b	116e0 <getc@plt+0xccc>
   118c4:	andeq	r2, r1, r4, ror r8
   118c8:	push	{r4, r5, r6, lr}
   118cc:	add	r5, r0, #8000	; 0x1f40
   118d0:	mov	r6, r0
   118d4:	add	r5, r5, #48	; 0x30
   118d8:	mov	r4, r0
   118dc:	mov	r0, r4
   118e0:	add	r4, r4, #16
   118e4:	bl	12ab8 <error@@Base+0xae4>
   118e8:	cmp	r4, r5
   118ec:	bne	118dc <getc@plt+0xec8>
   118f0:	add	r6, r6, #4096	; 0x1000
   118f4:	mov	r3, #0
   118f8:	str	r3, [r6, #3952]	; 0xf70
   118fc:	str	r3, [r6, #3956]	; 0xf74
   11900:	pop	{r4, r5, r6, pc}
   11904:	push	{r4, r5, r6, lr}
   11908:	mov	r5, r1
   1190c:	ldrb	r3, [r1]
   11910:	cmp	r3, #0
   11914:	beq	1194c <getc@plt+0xf38>
   11918:	mov	r2, #0
   1191c:	add	r2, r2, r3
   11920:	ldrb	r3, [r1, #1]!
   11924:	cmp	r3, #0
   11928:	bne	1191c <getc@plt+0xf08>
   1192c:	ldr	r1, [pc, #80]	; 11984 <getc@plt+0xf70>
   11930:	asr	r3, r2, #31
   11934:	smull	ip, r1, r1, r2
   11938:	add	r1, r1, r2
   1193c:	rsb	r3, r3, r1, asr #8
   11940:	rsb	r1, r3, r3, lsl #6
   11944:	rsb	r3, r3, r1, lsl #3
   11948:	sub	r3, r2, r3
   1194c:	ldr	r4, [r0, r3, lsl #4]
   11950:	cmp	r4, #0
   11954:	bne	11968 <getc@plt+0xf54>
   11958:	b	1197c <getc@plt+0xf68>
   1195c:	ldr	r4, [r4, #4]
   11960:	cmp	r4, #0
   11964:	beq	1197c <getc@plt+0xf68>
   11968:	ldr	r1, [r4, #8]
   1196c:	mov	r0, r5
   11970:	bl	108b8 <strcmp@plt>
   11974:	cmp	r0, #0
   11978:	bne	1195c <getc@plt+0xf48>
   1197c:	mov	r0, r4
   11980:	pop	{r4, r5, r6, pc}
   11984:	subhi	r4, sl, #1552	; 0x610
   11988:	ldr	ip, [r1, #8]
   1198c:	push	{r4, lr}
   11990:	ldrb	r3, [ip]
   11994:	cmp	r3, #0
   11998:	beq	119d4 <getc@plt+0xfc0>
   1199c:	mov	r2, #0
   119a0:	add	r2, r2, r3
   119a4:	ldrb	r3, [ip, #1]!
   119a8:	cmp	r3, #0
   119ac:	bne	119a0 <getc@plt+0xf8c>
   119b0:	ldr	ip, [pc, #80]	; 11a08 <getc@plt+0xff4>
   119b4:	asr	r3, r2, #31
   119b8:	smull	lr, ip, ip, r2
   119bc:	add	ip, ip, r2
   119c0:	rsb	r3, r3, ip, asr #8
   119c4:	rsb	ip, r3, r3, lsl #6
   119c8:	rsb	r3, r3, ip, lsl #3
   119cc:	sub	r3, r2, r3
   119d0:	lsl	r3, r3, #4
   119d4:	add	r4, r0, #4096	; 0x1000
   119d8:	add	r0, r0, r3
   119dc:	bl	12ad0 <error@@Base+0xafc>
   119e0:	ldr	r0, [r4, #3952]	; 0xf70
   119e4:	cmp	r0, #0
   119e8:	beq	119f8 <getc@plt+0xfe4>
   119ec:	bl	108d0 <free@plt>
   119f0:	mov	r3, #0
   119f4:	str	r3, [r4, #3952]	; 0xf70
   119f8:	ldr	r3, [r4, #3956]	; 0xf74
   119fc:	add	r3, r3, #1
   11a00:	str	r3, [r4, #3956]	; 0xf74
   11a04:	pop	{r4, pc}
   11a08:	subhi	r4, sl, #1552	; 0x610
   11a0c:	ldr	ip, [r1, #8]
   11a10:	push	{r4, lr}
   11a14:	ldrb	r3, [ip]
   11a18:	cmp	r3, #0
   11a1c:	beq	11a58 <getc@plt+0x1044>
   11a20:	mov	r2, #0
   11a24:	add	r2, r2, r3
   11a28:	ldrb	r3, [ip, #1]!
   11a2c:	cmp	r3, #0
   11a30:	bne	11a24 <getc@plt+0x1010>
   11a34:	ldr	ip, [pc, #80]	; 11a8c <getc@plt+0x1078>
   11a38:	asr	r3, r2, #31
   11a3c:	smull	lr, ip, ip, r2
   11a40:	add	ip, ip, r2
   11a44:	rsb	r3, r3, ip, asr #8
   11a48:	rsb	ip, r3, r3, lsl #6
   11a4c:	rsb	r3, r3, ip, lsl #3
   11a50:	sub	r3, r2, r3
   11a54:	lsl	r3, r3, #4
   11a58:	add	r4, r0, #4096	; 0x1000
   11a5c:	add	r0, r0, r3
   11a60:	bl	12c00 <error@@Base+0xc2c>
   11a64:	ldr	r0, [r4, #3952]	; 0xf70
   11a68:	cmp	r0, #0
   11a6c:	beq	11a7c <getc@plt+0x1068>
   11a70:	bl	108d0 <free@plt>
   11a74:	mov	r3, #0
   11a78:	str	r3, [r4, #3952]	; 0xf70
   11a7c:	ldr	r3, [r4, #3956]	; 0xf74
   11a80:	sub	r3, r3, #1
   11a84:	str	r3, [r4, #3956]	; 0xf74
   11a88:	pop	{r4, pc}
   11a8c:	subhi	r4, sl, #1552	; 0x610
   11a90:	push	{r4, r5, r6, lr}
   11a94:	add	r6, r0, #4096	; 0x1000
   11a98:	ldr	r4, [r6, #3952]	; 0xf70
   11a9c:	cmp	r4, #0
   11aa0:	popne	{r4, r5, r6, pc}
   11aa4:	ldr	r3, [r6, #3956]	; 0xf74
   11aa8:	cmp	r3, #0
   11aac:	popeq	{r4, r5, r6, pc}
   11ab0:	mov	r5, r0
   11ab4:	mov	r1, #4
   11ab8:	mov	r0, r3
   11abc:	bl	1202c <error@@Base+0x58>
   11ac0:	ldr	lr, [pc, #60]	; 11b04 <getc@plt+0x10f0>
   11ac4:	mov	r2, r4
   11ac8:	mov	ip, r4
   11acc:	str	r0, [r6, #3952]	; 0xf70
   11ad0:	ldr	r3, [r5, ip, lsl #4]
   11ad4:	cmp	r3, #0
   11ad8:	beq	11af4 <getc@plt+0x10e0>
   11adc:	add	r1, r0, r2, lsl #2
   11ae0:	str	r3, [r1], #4
   11ae4:	ldr	r3, [r3, #4]
   11ae8:	add	r2, r2, #1
   11aec:	cmp	r3, #0
   11af0:	bne	11ae0 <getc@plt+0x10cc>
   11af4:	add	ip, ip, #1
   11af8:	cmp	ip, lr
   11afc:	bne	11ad0 <getc@plt+0x10bc>
   11b00:	pop	{r4, r5, r6, pc}
   11b04:	strdeq	r0, [r0], -r7
   11b08:	push	{r4, r5, r6, r7, r8, lr}
   11b0c:	add	r5, r0, #8000	; 0x1f40
   11b10:	mov	r7, r0
   11b14:	mov	r6, r1
   11b18:	add	r5, r5, #48	; 0x30
   11b1c:	mov	r4, r0
   11b20:	mov	r0, r4
   11b24:	mov	r1, r6
   11b28:	add	r4, r4, #16
   11b2c:	bl	12cb0 <error@@Base+0xcdc>
   11b30:	cmp	r4, r5
   11b34:	bne	11b20 <getc@plt+0x110c>
   11b38:	add	r7, r7, #4096	; 0x1000
   11b3c:	ldr	r0, [r7, #3952]	; 0xf70
   11b40:	cmp	r0, #0
   11b44:	beq	11b54 <getc@plt+0x1140>
   11b48:	bl	108d0 <free@plt>
   11b4c:	mov	r3, #0
   11b50:	str	r3, [r7, #3952]	; 0xf70
   11b54:	mov	r3, #0
   11b58:	str	r3, [r7, #3956]	; 0xf74
   11b5c:	pop	{r4, r5, r6, r7, r8, pc}
   11b60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b64:	sub	sp, sp, #12
   11b68:	ldr	r4, [pc, #232]	; 11c58 <getc@plt+0x1244>
   11b6c:	ldr	r6, [pc, #232]	; 11c5c <getc@plt+0x1248>
   11b70:	add	r4, pc, r4
   11b74:	add	r6, pc, r6
   11b78:	ldr	r5, [pc, #224]	; 11c60 <getc@plt+0x124c>
   11b7c:	add	r7, r4, #1088	; 0x440
   11b80:	add	r6, r6, #1024	; 0x400
   11b84:	ldr	r3, [pc, #216]	; 11c64 <getc@plt+0x1250>
   11b88:	add	r7, r7, #4
   11b8c:	add	r6, r6, #4
   11b90:	add	r5, pc, r5
   11b94:	add	r3, pc, r3
   11b98:	str	r3, [sp, #4]
   11b9c:	ldrsh	sl, [r5]
   11ba0:	cmp	sl, #0
   11ba4:	ble	11c44 <getc@plt+0x1230>
   11ba8:	ldr	fp, [r4, #8]
   11bac:	mov	r8, r5
   11bb0:	mov	r9, #0
   11bb4:	b	11bc4 <getc@plt+0x11b0>
   11bb8:	add	r9, r9, #1
   11bbc:	cmp	r9, sl
   11bc0:	beq	11c20 <getc@plt+0x120c>
   11bc4:	ldr	r1, [r8, #4]!
   11bc8:	mov	r0, fp
   11bcc:	bl	108b8 <strcmp@plt>
   11bd0:	cmp	r0, #0
   11bd4:	bne	11bb8 <getc@plt+0x11a4>
   11bd8:	cmp	sl, r9
   11bdc:	beq	11c20 <getc@plt+0x120c>
   11be0:	ldr	r3, [r4]
   11be4:	ldr	r1, [r4, #4]
   11be8:	cmp	r3, r1
   11bec:	subls	r2, r3, #1
   11bf0:	uxtbls	r0, r9
   11bf4:	addls	r2, r6, r2
   11bf8:	bhi	11c0c <getc@plt+0x11f8>
   11bfc:	add	r3, r3, #1
   11c00:	cmp	r3, r1
   11c04:	strb	r0, [r2, #1]!
   11c08:	bls	11bfc <getc@plt+0x11e8>
   11c0c:	add	r4, r4, #12
   11c10:	cmp	r4, r7
   11c14:	bne	11b9c <getc@plt+0x1188>
   11c18:	add	sp, sp, #12
   11c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c20:	cmp	sl, #256	; 0x100
   11c24:	beq	11c4c <getc@plt+0x1238>
   11c28:	ldr	r1, [sp, #4]
   11c2c:	ldr	r2, [r4, #8]
   11c30:	add	r3, r1, sl, lsl #2
   11c34:	add	sl, sl, #1
   11c38:	strh	sl, [r1]
   11c3c:	str	r2, [r3, #4]
   11c40:	b	11be0 <getc@plt+0x11cc>
   11c44:	mov	r9, #0
   11c48:	b	11bd8 <getc@plt+0x11c4>
   11c4c:	ldr	r0, [pc, #20]	; 11c68 <getc@plt+0x1254>
   11c50:	add	r0, pc, r0
   11c54:	bl	11fd4 <error@@Base>
   11c58:	andeq	r1, r1, ip, asr #30
   11c5c:			; <UNDEFINED> instruction: 0x000125b8
   11c60:	muleq	r1, ip, r5
   11c64:	muleq	r1, r8, r5
   11c68:	andeq	r1, r0, r8, ror #6
   11c6c:	ldr	r3, [pc, #44]	; 11ca0 <getc@plt+0x128c>
   11c70:	push	{r4, lr}
   11c74:	add	r3, pc, r3
   11c78:	mov	r4, r0
   11c7c:	ldrsh	r3, [r3]
   11c80:	cmp	r3, #0
   11c84:	bne	11c8c <getc@plt+0x1278>
   11c88:	bl	11b60 <getc@plt+0x114c>
   11c8c:	ldr	r3, [pc, #16]	; 11ca4 <getc@plt+0x1290>
   11c90:	add	r3, pc, r3
   11c94:	add	r0, r3, r4
   11c98:	ldrb	r0, [r0, #1028]	; 0x404
   11c9c:	pop	{r4, pc}
   11ca0:			; <UNDEFINED> instruction: 0x000124b8
   11ca4:	muleq	r1, ip, r4
   11ca8:	push	{r4, r5, r6, lr}
   11cac:	uxtb	r4, r0
   11cb0:	ldr	r5, [pc, #64]	; 11cf8 <getc@plt+0x12e4>
   11cb4:	add	r5, pc, r5
   11cb8:	ldrsh	r3, [r5]
   11cbc:	cmp	r3, #0
   11cc0:	beq	11ce0 <getc@plt+0x12cc>
   11cc4:	cmp	r4, r3
   11cc8:	bge	11cec <getc@plt+0x12d8>
   11ccc:	ldr	r3, [pc, #40]	; 11cfc <getc@plt+0x12e8>
   11cd0:	add	r3, pc, r3
   11cd4:	add	r0, r3, r4, lsl #2
   11cd8:	ldr	r0, [r0, #4]
   11cdc:	pop	{r4, r5, r6, pc}
   11ce0:	bl	11b60 <getc@plt+0x114c>
   11ce4:	ldrsh	r3, [r5]
   11ce8:	b	11cc4 <getc@plt+0x12b0>
   11cec:	ldr	r0, [pc, #12]	; 11d00 <getc@plt+0x12ec>
   11cf0:	add	r0, pc, r0
   11cf4:	bl	11fd4 <error@@Base>
   11cf8:	andeq	r2, r1, r8, ror r4
   11cfc:	andeq	r2, r1, ip, asr r4
   11d00:	andeq	r1, r0, r4, ror #5
   11d04:	ldr	r3, [pc, #76]	; 11d58 <getc@plt+0x1344>
   11d08:	ldr	r2, [pc, #76]	; 11d5c <getc@plt+0x1348>
   11d0c:	add	r3, pc, r3
   11d10:	push	{r4, r5, lr}
   11d14:	sub	sp, sp, #116	; 0x74
   11d18:	ldr	r3, [r3, r2]
   11d1c:	mov	r5, r0
   11d20:	ldr	r4, [r3]
   11d24:	bl	10984 <getpid@plt>
   11d28:	ldr	r1, [pc, #48]	; 11d60 <getc@plt+0x134c>
   11d2c:	mov	r2, r4
   11d30:	add	r4, sp, #12
   11d34:	add	r1, pc, r1
   11d38:	str	r5, [sp]
   11d3c:	mov	r3, r0
   11d40:	mov	r0, r4
   11d44:	bl	109d8 <sprintf@plt>
   11d48:	mov	r0, r4
   11d4c:	bl	10900 <strdup@plt>
   11d50:	add	sp, sp, #116	; 0x74
   11d54:	pop	{r4, r5, pc}
   11d58:	andeq	r2, r1, ip, ror #5
   11d5c:	muleq	r0, ip, r0
   11d60:	strdeq	r1, [r0], -r0
   11d64:	ldr	r3, [pc, #108]	; 11dd8 <getc@plt+0x13c4>
   11d68:	ldr	r2, [pc, #108]	; 11ddc <getc@plt+0x13c8>
   11d6c:	add	r3, pc, r3
   11d70:	push	{r7, lr}
   11d74:	mov	r7, r0
   11d78:	ldr	r3, [r3, r2]
   11d7c:	ldr	r3, [r3]
   11d80:	cmp	r3, #0
   11d84:	beq	11d8c <getc@plt+0x1378>
   11d88:	blx	r3
   11d8c:	ldr	r6, [pc, #76]	; 11de0 <getc@plt+0x13cc>
   11d90:	add	r6, pc, r6
   11d94:	ldrsh	r3, [r6]
   11d98:	cmp	r3, #0
   11d9c:	movgt	r4, #1
   11da0:	ble	11dd0 <getc@plt+0x13bc>
   11da4:	mov	r0, r4
   11da8:	bl	11d04 <getc@plt+0x12f0>
   11dac:	add	r4, r4, #1
   11db0:	sxth	r4, r4
   11db4:	mov	r5, r0
   11db8:	bl	10918 <unlink@plt>
   11dbc:	mov	r0, r5
   11dc0:	bl	108d0 <free@plt>
   11dc4:	ldrsh	r3, [r6]
   11dc8:	cmp	r3, r4
   11dcc:	bge	11da4 <getc@plt+0x1390>
   11dd0:	mov	r0, r7
   11dd4:	bl	10990 <exit@plt>
   11dd8:	andeq	r2, r1, ip, lsl #5
   11ddc:	andeq	r0, r0, r0, lsr #1
   11de0:	andseq	r2, r2, r0, lsr #15
   11de4:	ldrb	r3, [r0]
   11de8:	cmp	r3, #0
   11dec:	beq	11e50 <getc@plt+0x143c>
   11df0:	ldrb	ip, [r1]
   11df4:	cmp	ip, r3
   11df8:	bne	11e60 <getc@plt+0x144c>
   11dfc:	push	{lr}		; (str lr, [sp, #-4]!)
   11e00:	mov	r2, #0
   11e04:	mov	lr, r1
   11e08:	b	11e18 <getc@plt+0x1404>
   11e0c:	ldrb	ip, [lr, #1]!
   11e10:	cmp	r3, ip
   11e14:	bne	11e38 <getc@plt+0x1424>
   11e18:	ldrb	r3, [r0, #1]!
   11e1c:	add	r2, r2, #1
   11e20:	cmp	r3, #0
   11e24:	bne	11e0c <getc@plt+0x13f8>
   11e28:	ldrb	ip, [r1, r2]
   11e2c:	cmp	ip, #0
   11e30:	movne	r3, #0
   11e34:	beq	11e48 <getc@plt+0x1434>
   11e38:	cmp	r3, ip
   11e3c:	movcs	r0, #1
   11e40:	mvncc	r0, #0
   11e44:	pop	{pc}		; (ldr pc, [sp], #4)
   11e48:	mov	r0, ip
   11e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e50:	ldrb	ip, [r1, r3]
   11e54:	cmp	ip, #0
   11e58:	movne	r3, #0
   11e5c:	beq	11e70 <getc@plt+0x145c>
   11e60:	cmp	r3, ip
   11e64:	movcs	r0, #1
   11e68:	mvncc	r0, #0
   11e6c:	bx	lr
   11e70:	mov	r0, ip
   11e74:	bx	lr
   11e78:	ldr	r2, [pc, #44]	; 11eac <getc@plt+0x1498>
   11e7c:	ldr	r3, [pc, #44]	; 11eb0 <getc@plt+0x149c>
   11e80:	add	r2, pc, r2
   11e84:	ldr	r3, [r2, r3]
   11e88:	ldr	r3, [r3]
   11e8c:	cmp	r3, r0
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #24]	; 11eb4 <getc@plt+0x14a0>
   11e98:	ldr	r3, [r2, r3]
   11e9c:	ldr	r3, [r3]
   11ea0:	cmp	r0, r3
   11ea4:	bxeq	lr
   11ea8:	b	109cc <fclose@plt>
   11eac:	andeq	r2, r1, r8, ror r1
   11eb0:	andeq	r0, r0, r8, lsr #1
   11eb4:	andeq	r0, r0, ip, lsr #1
   11eb8:	push	{lr}		; (str lr, [sp, #-4]!)
   11ebc:	sub	sp, sp, #92	; 0x5c
   11ec0:	mov	r1, r0
   11ec4:	mov	r2, sp
   11ec8:	mov	r0, #3
   11ecc:	bl	10930 <__xstat@plt>
   11ed0:	clz	r0, r0
   11ed4:	lsr	r0, r0, #5
   11ed8:	add	sp, sp, #92	; 0x5c
   11edc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee0:	ldr	r2, [pc, #44]	; 11f14 <getc@plt+0x1500>
   11ee4:	push	{r4, lr}
   11ee8:	add	r2, pc, r2
   11eec:	ldrh	r3, [r2]
   11ef0:	add	r3, r3, #1
   11ef4:	sxth	r3, r3
   11ef8:	mov	r0, r3
   11efc:	strh	r3, [r2]
   11f00:	bl	11d04 <getc@plt+0x12f0>
   11f04:	mov	r4, r0
   11f08:	bl	10918 <unlink@plt>
   11f0c:	mov	r0, r4
   11f10:	pop	{r4, pc}
   11f14:	andseq	r2, r2, r8, asr #12
   11f18:	push	{r4, lr}
   11f1c:	mov	r4, r0
   11f20:	bl	109a8 <strlen@plt>
   11f24:	sub	r0, r0, #1
   11f28:	sxth	r0, r0
   11f2c:	cmp	r0, #0
   11f30:	bge	11f48 <getc@plt+0x1534>
   11f34:	b	11f54 <getc@plt+0x1540>
   11f38:	sub	r0, r0, #1
   11f3c:	sxth	r0, r0
   11f40:	cmn	r0, #1
   11f44:	beq	11f54 <getc@plt+0x1540>
   11f48:	ldrb	r3, [r4, r0]
   11f4c:	cmp	r3, #47	; 0x2f
   11f50:	bne	11f38 <getc@plt+0x1524>
   11f54:	add	r0, r0, #1
   11f58:	add	r0, r4, r0
   11f5c:	pop	{r4, pc}
   11f60:	push	{r4, lr}
   11f64:	mov	r0, #0
   11f68:	bl	11d64 <getc@plt+0x1350>
   11f6c:	ldr	r1, [pc, #76]	; 11fc0 <getc@plt+0x15ac>
   11f70:	ldr	r2, [pc, #76]	; 11fc4 <getc@plt+0x15b0>
   11f74:	add	r1, pc, r1
   11f78:	push	{r4, lr}
   11f7c:	ldr	r2, [r1, r2]
   11f80:	ldr	r2, [r2]
   11f84:	cmp	r2, #0
   11f88:	beq	11f94 <getc@plt+0x1580>
   11f8c:	blx	r2
   11f90:	bl	11f60 <getc@plt+0x154c>
   11f94:	ldr	r2, [pc, #44]	; 11fc8 <getc@plt+0x15b4>
   11f98:	ldr	ip, [pc, #44]	; 11fcc <getc@plt+0x15b8>
   11f9c:	mov	r3, r0
   11fa0:	ldr	r0, [r1, r2]
   11fa4:	ldr	ip, [r1, ip]
   11fa8:	ldr	r1, [pc, #32]	; 11fd0 <getc@plt+0x15bc>
   11fac:	ldr	r0, [r0]
   11fb0:	add	r1, pc, r1
   11fb4:	ldr	r2, [ip]
   11fb8:	bl	109b4 <fprintf@plt>
   11fbc:	b	11f90 <getc@plt+0x157c>
   11fc0:	andeq	r2, r1, r4, lsl #1
   11fc4:	muleq	r0, r0, r0
   11fc8:	muleq	r0, r4, r0
   11fcc:	muleq	r0, ip, r0
   11fd0:	andeq	r1, r0, r4, lsl #13

00011fd4 <error@@Base>:
   11fd4:	push	{r4, lr}
   11fd8:	mov	r3, r0
   11fdc:	ldr	r4, [pc, #52]	; 12018 <error@@Base+0x44>
   11fe0:	ldr	r1, [pc, #52]	; 1201c <error@@Base+0x48>
   11fe4:	ldr	r2, [pc, #52]	; 12020 <error@@Base+0x4c>
   11fe8:	add	r4, pc, r4
   11fec:	ldr	ip, [r4, r1]
   11ff0:	ldr	r0, [r4, r2]
   11ff4:	ldr	r1, [pc, #40]	; 12024 <error@@Base+0x50>
   11ff8:	ldr	r2, [ip]
   11ffc:	add	r1, pc, r1
   12000:	ldr	r0, [r0]
   12004:	bl	109b4 <fprintf@plt>
   12008:	ldr	r3, [pc, #24]	; 12028 <error@@Base+0x54>
   1200c:	ldr	r3, [r4, r3]
   12010:	ldr	r0, [r3]
   12014:	bl	11d64 <getc@plt+0x1350>
   12018:	andeq	r2, r1, r0, lsl r0
   1201c:	muleq	r0, ip, r0
   12020:	muleq	r0, r4, r0
   12024:	andeq	r1, r0, r8, asr #12
   12028:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1202c:	push	{r4, lr}
   12030:	bl	108ac <calloc@plt>
   12034:	cmp	r0, #0
   12038:	popne	{r4, pc}
   1203c:	ldr	r0, [pc, #4]	; 12048 <error@@Base+0x74>
   12040:	add	r0, pc, r0
   12044:	bl	11fd4 <error@@Base>
   12048:	andeq	r1, r0, ip, lsl #12
   1204c:	ldr	r3, [pc, #40]	; 1207c <error@@Base+0xa8>
   12050:	add	r3, pc, r3
   12054:	ldrb	r2, [r3, #2]
   12058:	cmp	r2, #0
   1205c:	beq	12064 <error@@Base+0x90>
   12060:	bx	lr
   12064:	ldr	r0, [pc, #20]	; 12080 <error@@Base+0xac>
   12068:	push	{r4, lr}
   1206c:	mov	r2, #1
   12070:	add	r0, pc, r0
   12074:	strb	r2, [r3, #2]
   12078:	bl	11fd4 <error@@Base>
   1207c:	andseq	r2, r2, r0, ror #9
   12080:	strdeq	r1, [r0], -r8
   12084:	ldr	r4, [pc, #68]	; 120d0 <error@@Base+0xfc>
   12088:	ldr	r2, [pc, #68]	; 120d4 <error@@Base+0x100>
   1208c:	ldr	ip, [pc, #68]	; 120d8 <error@@Base+0x104>
   12090:	add	r4, pc, r4
   12094:	push	{lr}		; (str lr, [sp, #-4]!)
   12098:	sub	sp, sp, #12
   1209c:	mov	r3, r0
   120a0:	ldr	ip, [r4, ip]
   120a4:	ldr	r0, [r4, r2]
   120a8:	str	r1, [sp]
   120ac:	ldr	r1, [pc, #40]	; 120dc <error@@Base+0x108>
   120b0:	ldr	r2, [ip]
   120b4:	ldr	r0, [r0]
   120b8:	add	r1, pc, r1
   120bc:	bl	109b4 <fprintf@plt>
   120c0:	ldr	r3, [pc, #24]	; 120e0 <error@@Base+0x10c>
   120c4:	ldr	r3, [r4, r3]
   120c8:	ldr	r0, [r3]
   120cc:	bl	11d64 <getc@plt+0x1350>
   120d0:	andeq	r1, r1, r8, ror #30
   120d4:	muleq	r0, r4, r0
   120d8:	muleq	r0, ip, r0
   120dc:	andeq	r1, r0, r0, asr #11
   120e0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   120e4:	ldr	ip, [pc, #116]	; 12160 <error@@Base+0x18c>
   120e8:	subs	r2, r0, #0
   120ec:	push	{r4, r5, r6, lr}
   120f0:	add	ip, pc, ip
   120f4:	mov	r4, r1
   120f8:	beq	12128 <error@@Base+0x154>
   120fc:	mov	r5, r2
   12100:	bl	108c4 <fopen@plt>
   12104:	cmp	r0, #0
   12108:	popne	{r4, r5, r6, pc}
   1210c:	ldrb	r3, [r4]
   12110:	mov	r1, r5
   12114:	cmp	r3, #119	; 0x77
   12118:	beq	12154 <error@@Base+0x180>
   1211c:	ldr	r0, [pc, #64]	; 12164 <error@@Base+0x190>
   12120:	add	r0, pc, r0
   12124:	bl	12084 <error@@Base+0xb0>
   12128:	ldrb	r3, [r1]
   1212c:	cmp	r3, #114	; 0x72
   12130:	beq	12144 <error@@Base+0x170>
   12134:	ldr	r3, [pc, #44]	; 12168 <error@@Base+0x194>
   12138:	ldr	r3, [ip, r3]
   1213c:	ldr	r0, [r3]
   12140:	pop	{r4, r5, r6, pc}
   12144:	ldr	r3, [pc, #32]	; 1216c <error@@Base+0x198>
   12148:	ldr	r3, [ip, r3]
   1214c:	ldr	r0, [r3]
   12150:	pop	{r4, r5, r6, pc}
   12154:	ldr	r0, [pc, #20]	; 12170 <error@@Base+0x19c>
   12158:	add	r0, pc, r0
   1215c:	bl	12084 <error@@Base+0xb0>
   12160:	andeq	r1, r1, r8, lsl #30
   12164:	andeq	r1, r0, r0, lsl #11
   12168:	andeq	r0, r0, ip, lsr #1
   1216c:	andeq	r0, r0, r8, lsr #1
   12170:	andeq	r1, r0, r0, lsr r5
   12174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12178:	sub	sp, sp, #20
   1217c:	mov	r7, r0
   12180:	str	r0, [sp, #8]
   12184:	ldr	r0, [r1]
   12188:	str	r2, [sp, #12]
   1218c:	mov	r9, r1
   12190:	mov	r6, r3
   12194:	bl	11f18 <getc@plt+0x1504>
   12198:	ldr	r5, [pc, #496]	; 12390 <error@@Base+0x3bc>
   1219c:	ldr	r3, [pc, #496]	; 12394 <error@@Base+0x3c0>
   121a0:	add	r5, pc, r5
   121a4:	ldr	r4, [pc, #492]	; 12398 <error@@Base+0x3c4>
   121a8:	ldr	r3, [r5, r3]
   121ac:	add	r4, pc, r4
   121b0:	mov	r1, r4
   121b4:	str	r0, [r3]
   121b8:	mov	r0, #2
   121bc:	bl	1096c <__sysv_signal@plt>
   121c0:	mov	r1, r4
   121c4:	mov	r0, #15
   121c8:	bl	1096c <__sysv_signal@plt>
   121cc:	ldr	fp, [r7]
   121d0:	cmp	fp, #1
   121d4:	beq	1231c <error@@Base+0x348>
   121d8:	mov	r7, #0
   121dc:	ble	12330 <error@@Base+0x35c>
   121e0:	ldr	r3, [pc, #436]	; 1239c <error@@Base+0x3c8>
   121e4:	mov	sl, #1
   121e8:	add	r3, pc, r3
   121ec:	str	r3, [sp, #4]
   121f0:	mov	r4, sl
   121f4:	mov	r3, fp
   121f8:	b	1221c <error@@Base+0x248>
   121fc:	add	r2, r7, #1
   12200:	str	r5, [r9, r7, lsl #2]
   12204:	sxth	r7, r2
   12208:	add	r4, r4, #1
   1220c:	sxth	r4, r4
   12210:	cmp	r4, r3
   12214:	mov	sl, r4
   12218:	bge	12330 <error@@Base+0x35c>
   1221c:	ldr	r5, [r9, r4, lsl #2]
   12220:	lsl	fp, r4, #2
   12224:	ldrb	r2, [r5]
   12228:	cmp	r2, #45	; 0x2d
   1222c:	bne	121fc <error@@Base+0x228>
   12230:	ldrb	r8, [r5, #1]
   12234:	cmp	r8, #0
   12238:	beq	121fc <error@@Base+0x228>
   1223c:	mov	r0, r5
   12240:	str	r3, [sp]
   12244:	bl	109a8 <strlen@plt>
   12248:	mov	r1, r5
   1224c:	mov	r2, r0
   12250:	ldr	r0, [sp, #4]
   12254:	bl	109fc <strncmp@plt>
   12258:	cmp	r0, #0
   1225c:	beq	12378 <error@@Base+0x3a4>
   12260:	ldr	r3, [sp]
   12264:	add	sl, sl, #1
   12268:	cmp	sl, r3
   1226c:	addlt	fp, r9, fp
   12270:	movge	ip, #0
   12274:	ldrlt	ip, [fp, #4]
   12278:	cmp	r6, #0
   1227c:	beq	122c0 <error@@Base+0x2ec>
   12280:	ldrb	r2, [r6]
   12284:	cmp	r2, #0
   12288:	beq	122c0 <error@@Base+0x2ec>
   1228c:	cmp	r2, r8
   12290:	beq	122d0 <error@@Base+0x2fc>
   12294:	mov	r2, #0
   12298:	b	122a4 <error@@Base+0x2d0>
   1229c:	cmp	r8, r0
   122a0:	beq	122d4 <error@@Base+0x300>
   122a4:	add	r2, r2, #1
   122a8:	sxth	r2, r2
   122ac:	add	r1, r2, r2, lsl #1
   122b0:	ldrb	r0, [r6, r1, lsl #2]
   122b4:	add	r1, r6, r1, lsl #2
   122b8:	cmp	r0, #0
   122bc:	bne	1229c <error@@Base+0x2c8>
   122c0:	ldr	r0, [pc, #216]	; 123a0 <error@@Base+0x3cc>
   122c4:	mov	r1, r5
   122c8:	add	r0, pc, r0
   122cc:	bl	12084 <error@@Base+0xb0>
   122d0:	mov	r1, r6
   122d4:	ldr	r2, [r1, #4]
   122d8:	cmp	r2, #0
   122dc:	beq	12340 <error@@Base+0x36c>
   122e0:	ldrb	r0, [r5, #2]
   122e4:	cmp	r0, #0
   122e8:	cmpeq	ip, #0
   122ec:	beq	12340 <error@@Base+0x36c>
   122f0:	ldr	r1, [r2]
   122f4:	cmp	r1, #0
   122f8:	bne	12380 <error@@Base+0x3ac>
   122fc:	cmp	r0, #0
   12300:	addne	ip, r5, #2
   12304:	str	ip, [r2]
   12308:	ldrb	r2, [r5, #2]
   1230c:	cmp	r2, #0
   12310:	addeq	r4, r4, #1
   12314:	sxtheq	r4, r4
   12318:	b	12208 <error@@Base+0x234>
   1231c:	ldr	r3, [pc, #128]	; 123a4 <error@@Base+0x3d0>
   12320:	ldr	r3, [r5, r3]
   12324:	ldrb	r7, [r3]
   12328:	cmp	r7, #0
   1232c:	bne	12378 <error@@Base+0x3a4>
   12330:	ldr	r3, [sp, #8]
   12334:	str	r7, [r3]
   12338:	add	sp, sp, #20
   1233c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12340:	ldr	r3, [r1, #8]
   12344:	cmp	r3, #0
   12348:	beq	122c0 <error@@Base+0x2ec>
   1234c:	ldrb	r2, [r5, #2]
   12350:	cmp	r2, #0
   12354:	bne	122c0 <error@@Base+0x2ec>
   12358:	ldrb	r2, [r3]
   1235c:	cmp	r2, #0
   12360:	bne	12380 <error@@Base+0x3ac>
   12364:	mov	r2, #1
   12368:	strb	r2, [r3]
   1236c:	ldr	r3, [sp, #8]
   12370:	ldr	r3, [r3]
   12374:	b	12208 <error@@Base+0x234>
   12378:	ldr	r0, [sp, #12]
   1237c:	bl	11f6c <getc@plt+0x1558>
   12380:	ldr	r0, [pc, #32]	; 123a8 <error@@Base+0x3d4>
   12384:	mov	r1, r5
   12388:	add	r0, pc, r0
   1238c:	bl	12084 <error@@Base+0xb0>
   12390:	andeq	r1, r1, r8, asr lr
   12394:	muleq	r0, ip, r0
   12398:			; <UNDEFINED> instruction: 0xfffffe98
   1239c:	andeq	r1, r0, ip, asr #9
   123a0:	strdeq	r1, [r0], -r4
   123a4:	andeq	r0, r0, r8, lsl #1
   123a8:	andeq	r1, r0, r4, asr #6
   123ac:	ldr	ip, [pc, #60]	; 123f0 <error@@Base+0x41c>
   123b0:	push	{lr}		; (str lr, [sp, #-4]!)
   123b4:	add	ip, pc, ip
   123b8:	ldr	r2, [pc, #52]	; 123f4 <error@@Base+0x420>
   123bc:	ldr	lr, [pc, #52]	; 123f8 <error@@Base+0x424>
   123c0:	sub	sp, sp, #12
   123c4:	mov	r3, r0
   123c8:	ldr	lr, [ip, lr]
   123cc:	ldr	r0, [ip, r2]
   123d0:	str	r1, [sp]
   123d4:	ldr	r1, [pc, #32]	; 123fc <error@@Base+0x428>
   123d8:	ldr	r2, [lr]
   123dc:	add	r1, pc, r1
   123e0:	ldr	r0, [r0]
   123e4:	bl	109b4 <fprintf@plt>
   123e8:	add	sp, sp, #12
   123ec:	pop	{pc}		; (ldr pc, [sp], #4)
   123f0:	andeq	r1, r1, r4, asr #24
   123f4:	muleq	r0, r4, r0
   123f8:	muleq	r0, ip, r0
   123fc:	muleq	r0, ip, r2
   12400:	push	{r4, r5, r6, lr}
   12404:	mov	r4, r0
   12408:	uxtb	r6, r1
   1240c:	mov	r0, #1
   12410:	mov	r1, #16
   12414:	mov	r5, r2
   12418:	bl	1202c <error@@Base+0x58>
   1241c:	strb	r6, [r0, #8]
   12420:	str	r5, [r0, #12]
   12424:	mov	r1, r0
   12428:	mov	r0, r4
   1242c:	pop	{r4, r5, r6, lr}
   12430:	b	12b1c <error@@Base+0xb48>
   12434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12438:	sub	sp, sp, #132	; 0x84
   1243c:	ldrb	r3, [r2]
   12440:	ldr	r6, [pc, #936]	; 127f0 <error@@Base+0x81c>
   12444:	str	r2, [sp, #16]
   12448:	adds	r3, r3, #0
   1244c:	movne	r3, #1
   12450:	cmp	r1, #0
   12454:	movne	r3, #0
   12458:	cmp	r3, #0
   1245c:	str	r0, [sp, #4]
   12460:	add	r6, pc, r6
   12464:	bne	127dc <error@@Base+0x808>
   12468:	ldr	r3, [sp, #4]
   1246c:	mov	r0, r1
   12470:	ldr	r1, [pc, #892]	; 127f4 <error@@Base+0x820>
   12474:	ldr	r3, [r3, #4]
   12478:	add	r1, pc, r1
   1247c:	str	r3, [sp, #20]
   12480:	bl	120e4 <error@@Base+0x110>
   12484:	ldr	r3, [sp, #16]
   12488:	ldrb	r3, [r3]
   1248c:	cmp	r3, #0
   12490:	mov	r7, r0
   12494:	bne	1271c <error@@Base+0x748>
   12498:	ldr	r2, [sp, #16]
   1249c:	mov	r0, r7
   124a0:	ldr	r3, [r2, #4]
   124a4:	ldrb	fp, [r2, #1]
   124a8:	mov	r4, r3
   124ac:	bl	10a14 <getc@plt>
   124b0:	cmp	r4, #0
   124b4:	mov	r2, r4
   124b8:	moveq	r2, #94	; 0x5e
   124bc:	str	r2, [sp, #12]
   124c0:	cmn	r0, #1
   124c4:	beq	1258c <error@@Base+0x5b8>
   124c8:	ldr	r3, [pc, #808]	; 127f8 <error@@Base+0x824>
   124cc:	ldr	r3, [r6, r3]
   124d0:	str	r3, [sp]
   124d4:	ldrsb	r4, [r3, r0]
   124d8:	cmp	r4, #0
   124dc:	ble	127c4 <error@@Base+0x7f0>
   124e0:	add	r3, sp, #25
   124e4:	mov	r6, #0
   124e8:	str	r3, [sp, #8]
   124ec:	add	sl, sp, #28
   124f0:	add	r9, sp, #24
   124f4:	mov	r8, #4
   124f8:	b	1250c <error@@Base+0x538>
   124fc:	ldr	r3, [sp]
   12500:	ldrsb	r4, [r3, r0]
   12504:	cmp	r4, #0
   12508:	ble	127c4 <error@@Base+0x7f0>
   1250c:	cmp	r4, #1
   12510:	strb	r0, [sp, #24]
   12514:	beq	12538 <error@@Base+0x564>
   12518:	sub	r5, r4, #1
   1251c:	mov	r2, r5
   12520:	mov	r3, r7
   12524:	mov	r1, #1
   12528:	ldr	r0, [sp, #8]
   1252c:	bl	10948 <fread@plt>
   12530:	cmp	r5, r0
   12534:	bne	127d0 <error@@Base+0x7fc>
   12538:	mov	r2, sl
   1253c:	mov	r1, r8
   12540:	mov	r0, r9
   12544:	bl	10954 <utf8proc_iterate@plt>
   12548:	cmp	r0, r4
   1254c:	bne	127bc <error@@Base+0x7e8>
   12550:	cmp	fp, #0
   12554:	ldr	r2, [sp, #28]
   12558:	beq	1256c <error@@Base+0x598>
   1255c:	ldr	r3, [sp, #12]
   12560:	cmp	r2, r3
   12564:	moveq	r6, #1
   12568:	beq	1257c <error@@Base+0x5a8>
   1256c:	mov	r1, r6
   12570:	ldr	r0, [sp, #4]
   12574:	bl	12400 <error@@Base+0x42c>
   12578:	mov	r6, #0
   1257c:	mov	r0, r7
   12580:	bl	10a14 <getc@plt>
   12584:	cmn	r0, #1
   12588:	bne	124fc <error@@Base+0x528>
   1258c:	mov	r0, r7
   12590:	bl	11e78 <getc@plt+0x1464>
   12594:	ldr	r3, [sp, #16]
   12598:	ldrb	r3, [r3, #9]
   1259c:	cmp	r3, #0
   125a0:	beq	126d4 <error@@Base+0x700>
   125a4:	ldr	r3, [sp, #20]
   125a8:	cmp	r3, #0
   125ac:	ldreq	r3, [sp, #4]
   125b0:	ldrne	r6, [r3, #4]
   125b4:	ldreq	r6, [r3]
   125b8:	cmp	r6, #0
   125bc:	beq	126d4 <error@@Base+0x700>
   125c0:	mov	r5, r6
   125c4:	mov	r7, #32
   125c8:	b	125f0 <error@@Base+0x61c>
   125cc:	cmp	r4, #11
   125d0:	bcs	1261c <error@@Base+0x648>
   125d4:	cmp	r4, #9
   125d8:	beq	1261c <error@@Base+0x648>
   125dc:	cmp	r4, #10
   125e0:	bne	1260c <error@@Base+0x638>
   125e4:	ldr	r5, [r5, #4]
   125e8:	cmp	r5, #0
   125ec:	beq	1262c <error@@Base+0x658>
   125f0:	ldr	r4, [r5, #12]
   125f4:	mov	r0, r4
   125f8:	bl	108dc <utf8proc_get_property@plt>
   125fc:	cmp	r4, #13
   12600:	bls	125cc <error@@Base+0x5f8>
   12604:	cmp	r4, #160	; 0xa0
   12608:	beq	1261c <error@@Base+0x648>
   1260c:	ldrsh	r3, [r0]
   12610:	sub	r3, r3, #23
   12614:	cmp	r3, #2
   12618:	bhi	125e4 <error@@Base+0x610>
   1261c:	str	r7, [r5, #12]
   12620:	ldr	r5, [r5, #4]
   12624:	cmp	r5, #0
   12628:	bne	125f0 <error@@Base+0x61c>
   1262c:	ldr	r7, [sp, #4]
   12630:	b	12690 <error@@Base+0x6bc>
   12634:	cmp	r3, #10
   12638:	movne	r2, #0
   1263c:	andeq	r2, r2, #1
   12640:	cmp	r2, #0
   12644:	beq	126c4 <error@@Base+0x6f0>
   12648:	cmp	r4, #0
   1264c:	moveq	r3, #0
   12650:	andne	r3, r5, #1
   12654:	cmp	r3, #0
   12658:	beq	12674 <error@@Base+0x6a0>
   1265c:	ldr	r3, [r4, #12]
   12660:	cmp	r3, #32
   12664:	ldrbeq	r3, [r4, #8]
   12668:	ldrbeq	r2, [r6, #8]
   1266c:	orreq	r3, r3, r2
   12670:	strbeq	r3, [r4, #8]
   12674:	mov	r1, r6
   12678:	mov	r0, r7
   1267c:	bl	12c00 <error@@Base+0xc2c>
   12680:	mov	r0, r6
   12684:	bl	108d0 <free@plt>
   12688:	subs	r6, r4, #0
   1268c:	beq	126d4 <error@@Base+0x700>
   12690:	ldr	r3, [r6, #12]
   12694:	ldr	r4, [r6, #4]
   12698:	cmp	r3, #32
   1269c:	eor	r2, r5, #1
   126a0:	bne	12634 <error@@Base+0x660>
   126a4:	cmp	r4, #0
   126a8:	orreq	r2, r2, #1
   126ac:	cmp	r2, #0
   126b0:	bne	12648 <error@@Base+0x674>
   126b4:	ldr	r2, [r4, #12]
   126b8:	cmp	r2, #10
   126bc:	cmpne	r2, #32
   126c0:	beq	12648 <error@@Base+0x674>
   126c4:	subs	r5, r3, #10
   126c8:	movne	r5, #1
   126cc:	subs	r6, r4, #0
   126d0:	bne	12690 <error@@Base+0x6bc>
   126d4:	ldr	r3, [sp, #16]
   126d8:	ldrb	r3, [r3, #10]
   126dc:	cmp	r3, #0
   126e0:	beq	12714 <error@@Base+0x740>
   126e4:	ldr	r3, [sp, #20]
   126e8:	cmp	r3, #0
   126ec:	ldreq	r3, [sp, #4]
   126f0:	ldrne	r4, [r3, #4]
   126f4:	ldreq	r4, [r3]
   126f8:	b	1270c <error@@Base+0x738>
   126fc:	ldr	r0, [r4, #12]
   12700:	bl	10924 <utf8proc_tolower@plt>
   12704:	str	r0, [r4, #12]
   12708:	ldr	r4, [r4, #4]
   1270c:	cmp	r4, #0
   12710:	bne	126fc <error@@Base+0x728>
   12714:	add	sp, sp, #132	; 0x84
   12718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1271c:	add	r5, sp, #28
   12720:	mov	r0, r5
   12724:	mov	r2, r7
   12728:	mov	r1, #99	; 0x63
   1272c:	bl	108e8 <fgets@plt>
   12730:	cmp	r0, #0
   12734:	beq	127a4 <error@@Base+0x7d0>
   12738:	ldr	r1, [pc, #188]	; 127fc <error@@Base+0x828>
   1273c:	mov	r2, #51	; 0x33
   12740:	add	r1, pc, r1
   12744:	mov	r0, r5
   12748:	bl	109fc <strncmp@plt>
   1274c:	subs	r4, r0, #0
   12750:	bne	127a4 <error@@Base+0x7d0>
   12754:	ldr	r9, [pc, #164]	; 12800 <error@@Base+0x82c>
   12758:	mov	r8, #99	; 0x63
   1275c:	add	r9, pc, r9
   12760:	mov	r2, r7
   12764:	mov	r1, r8
   12768:	mov	r0, r5
   1276c:	bl	108e8 <fgets@plt>
   12770:	cmp	r0, #0
   12774:	beq	1279c <error@@Base+0x7c8>
   12778:	mov	r1, r9
   1277c:	mov	r0, r5
   12780:	bl	108b8 <strcmp@plt>
   12784:	cmp	r0, #0
   12788:	bne	12760 <error@@Base+0x78c>
   1278c:	add	r4, r4, #1
   12790:	sxth	r4, r4
   12794:	cmp	r4, #1
   12798:	ble	12760 <error@@Base+0x78c>
   1279c:	mov	r3, #1
   127a0:	b	127b0 <error@@Base+0x7dc>
   127a4:	mov	r0, r7
   127a8:	bl	1090c <rewind@plt>
   127ac:	mov	r3, #0
   127b0:	ldr	r2, [sp, #16]
   127b4:	strb	r3, [r2, #11]
   127b8:	b	12498 <error@@Base+0x4c4>
   127bc:	bl	109e4 <utf8proc_errmsg@plt>
   127c0:	bl	11fd4 <error@@Base>
   127c4:	ldr	r0, [pc, #56]	; 12804 <error@@Base+0x830>
   127c8:	add	r0, pc, r0
   127cc:	bl	11fd4 <error@@Base>
   127d0:	ldr	r0, [pc, #48]	; 12808 <error@@Base+0x834>
   127d4:	add	r0, pc, r0
   127d8:	bl	11fd4 <error@@Base>
   127dc:	ldr	r1, [pc, #40]	; 1280c <error@@Base+0x838>
   127e0:	ldr	r0, [pc, #40]	; 12810 <error@@Base+0x83c>
   127e4:	add	r1, pc, r1
   127e8:	add	r0, pc, r0
   127ec:	bl	12084 <error@@Base+0xb0>
   127f0:	muleq	r1, r8, fp
   127f4:	andeq	r0, r0, r0, ror r9
   127f8:	andeq	r0, r0, r4, lsr #1
   127fc:			; <UNDEFINED> instruction: 0x00000fbc
   12800:	ldrdeq	r0, [r0], -r8
   12804:	andeq	r0, r0, r4, lsr #31
   12808:			; <UNDEFINED> instruction: 0x00000fb0
   1280c:	strdeq	r0, [r0], -ip
   12810:	andeq	r0, r0, r4, lsl #30
   12814:	push	{r4, lr}
   12818:	bl	108f4 <utf8proc_encode_char@plt>
   1281c:	cmp	r0, #0
   12820:	ble	1282c <error@@Base+0x858>
   12824:	sxtb	r0, r0
   12828:	pop	{r4, pc}
   1282c:	ldr	r0, [pc, #4]	; 12838 <error@@Base+0x864>
   12830:	add	r0, pc, r0
   12834:	bl	11fd4 <error@@Base>
   12838:	andeq	r0, r0, ip, ror #30
   1283c:	push	{r4, r5, r6, r7, r8, lr}
   12840:	uxtb	r4, r0
   12844:	cmp	r4, #0
   12848:	mov	r6, r1
   1284c:	mov	r8, r2
   12850:	uxtb	r5, r3
   12854:	moveq	r7, r4
   12858:	bne	128d0 <error@@Base+0x8fc>
   1285c:	cmp	r6, #10
   12860:	beq	128b0 <error@@Base+0x8dc>
   12864:	mov	r0, r6
   12868:	bl	108dc <utf8proc_get_property@plt>
   1286c:	cmp	r6, #32
   12870:	beq	128e8 <error@@Base+0x914>
   12874:	ldrh	r3, [r0]
   12878:	cmp	r3, #29
   1287c:	bhi	12890 <error@@Base+0x8bc>
   12880:	mov	r1, #1
   12884:	ldr	r2, [pc, #192]	; 1294c <error@@Base+0x978>
   12888:	ands	r3, r2, r1, lsl r3
   1288c:	bne	128e8 <error@@Base+0x914>
   12890:	cmp	r6, #255	; 0xff
   12894:	bls	12934 <error@@Base+0x960>
   12898:	ldr	r1, [pc, #176]	; 12950 <error@@Base+0x97c>
   1289c:	mov	r2, r6
   128a0:	add	r0, r8, r4
   128a4:	add	r1, pc, r1
   128a8:	pop	{r4, r5, r6, r7, r8, lr}
   128ac:	b	109d8 <sprintf@plt>
   128b0:	ldr	r1, [pc, #156]	; 12954 <error@@Base+0x980>
   128b4:	cmp	r5, #0
   128b8:	add	r1, pc, r1
   128bc:	add	r0, r8, r4
   128c0:	ldreq	r1, [pc, #144]	; 12958 <error@@Base+0x984>
   128c4:	addeq	r1, pc, r1
   128c8:	pop	{r4, r5, r6, r7, r8, lr}
   128cc:	b	109d8 <sprintf@plt>
   128d0:	mov	r1, r2
   128d4:	mov	r0, #94	; 0x5e
   128d8:	bl	12814 <error@@Base+0x840>
   128dc:	mov	r4, r0
   128e0:	sxth	r7, r0
   128e4:	b	1285c <error@@Base+0x888>
   128e8:	mov	r0, r6
   128ec:	bl	1099c <utf8proc_category@plt>
   128f0:	sub	r0, r0, #6
   128f4:	cmp	r0, #2
   128f8:	bhi	12914 <error@@Base+0x940>
   128fc:	add	r1, r8, r4
   12900:	ldr	r0, [pc, #84]	; 1295c <error@@Base+0x988>
   12904:	bl	12814 <error@@Base+0x840>
   12908:	add	r7, r0, r7
   1290c:	sxth	r7, r7
   12910:	mov	r4, r7
   12914:	add	r1, r8, r4
   12918:	mov	r0, r6
   1291c:	bl	12814 <error@@Base+0x840>
   12920:	mov	r3, #0
   12924:	add	r0, r0, r7
   12928:	sxth	r0, r0
   1292c:	strb	r3, [r8, r0]
   12930:	pop	{r4, r5, r6, r7, r8, pc}
   12934:	ldr	r1, [pc, #36]	; 12960 <error@@Base+0x98c>
   12938:	mov	r2, r6
   1293c:	add	r0, r8, r4
   12940:	add	r1, pc, r1
   12944:	pop	{r4, r5, r6, r7, r8, lr}
   12948:	b	109d8 <sprintf@plt>
   1294c:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12950:	andeq	r0, r0, r0, lsr #30
   12954:	strdeq	r0, [r0], -ip
   12958:	andeq	r0, r0, ip, ror r6
   1295c:	andeq	r2, r0, ip, asr #11
   12960:	andeq	r0, r0, ip, ror lr
   12964:	push	{r4, r5, r6, r7, lr}
   12968:	mov	r7, r0
   1296c:	mov	r0, r1
   12970:	ldr	r1, [pc, #184]	; 12a30 <error@@Base+0xa5c>
   12974:	sub	sp, sp, #20
   12978:	add	r1, pc, r1
   1297c:	mov	r5, r2
   12980:	bl	120e4 <error@@Base+0x110>
   12984:	cmp	r5, #0
   12988:	mov	r6, r0
   1298c:	beq	129e0 <error@@Base+0xa0c>
   12990:	mov	r3, r0
   12994:	ldr	r4, [pc, #152]	; 12a34 <error@@Base+0xa60>
   12998:	ldr	r0, [pc, #152]	; 12a38 <error@@Base+0xa64>
   1299c:	add	r4, pc, r4
   129a0:	mov	r2, #55	; 0x37
   129a4:	mov	r1, #1
   129a8:	add	r0, pc, r0
   129ac:	bl	1093c <fwrite@plt>
   129b0:	mov	r3, r6
   129b4:	mov	r2, #55	; 0x37
   129b8:	mov	r1, #1
   129bc:	mov	r0, r4
   129c0:	bl	1093c <fwrite@plt>
   129c4:	mov	r0, r6
   129c8:	blx	r5
   129cc:	mov	r3, r6
   129d0:	mov	r0, r4
   129d4:	mov	r2, #55	; 0x37
   129d8:	mov	r1, #1
   129dc:	bl	1093c <fwrite@plt>
   129e0:	ldr	r4, [r7]
   129e4:	cmp	r4, #0
   129e8:	addne	r5, sp, #4
   129ec:	movne	r7, #0
   129f0:	beq	12a20 <error@@Base+0xa4c>
   129f4:	ldr	r1, [r4, #12]
   129f8:	ldrb	r0, [r4, #8]
   129fc:	mov	r3, r7
   12a00:	mov	r2, r5
   12a04:	bl	1283c <error@@Base+0x868>
   12a08:	mov	r1, r6
   12a0c:	mov	r0, r5
   12a10:	bl	109f0 <fputs@plt>
   12a14:	ldr	r4, [r4, #4]
   12a18:	cmp	r4, #0
   12a1c:	bne	129f4 <error@@Base+0xa20>
   12a20:	mov	r0, r6
   12a24:	bl	11e78 <getc@plt+0x1464>
   12a28:	add	sp, sp, #20
   12a2c:	pop	{r4, r5, r6, r7, pc}
   12a30:	andeq	r0, r0, r4, ror #9
   12a34:	muleq	r0, r8, sp
   12a38:	andeq	r0, r0, r4, asr sp
   12a3c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a40:	mov	r5, #0
   12a44:	ldrb	r3, [r1]
   12a48:	sub	sp, sp, #12
   12a4c:	cmp	r3, r5
   12a50:	str	r5, [sp, #4]
   12a54:	movne	r4, r1
   12a58:	movne	r6, r0
   12a5c:	addne	r8, sp, #4
   12a60:	mvnne	r7, #0
   12a64:	bne	12a80 <error@@Base+0xaac>
   12a68:	b	12aac <error@@Base+0xad8>
   12a6c:	ldr	r2, [sp, #4]
   12a70:	bl	12400 <error@@Base+0x42c>
   12a74:	ldrb	r3, [r4, r9]!
   12a78:	cmp	r3, #0
   12a7c:	beq	12aac <error@@Base+0xad8>
   12a80:	mov	r1, r7
   12a84:	mov	r2, r8
   12a88:	mov	r0, r4
   12a8c:	bl	10954 <utf8proc_iterate@plt>
   12a90:	mov	r1, r5
   12a94:	subs	r9, r0, #0
   12a98:	mov	r0, r6
   12a9c:	bgt	12a6c <error@@Base+0xa98>
   12aa0:	mov	r0, #0
   12aa4:	add	sp, sp, #12
   12aa8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12aac:	mov	r0, #1
   12ab0:	add	sp, sp, #12
   12ab4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12ab8:	mov	r3, #0
   12abc:	str	r3, [r0, #4]
   12ac0:	str	r3, [r0]
   12ac4:	str	r3, [r0, #8]
   12ac8:	str	r3, [r0, #12]
   12acc:	bx	lr
   12ad0:	ldr	r3, [r0]
   12ad4:	mov	r2, #0
   12ad8:	cmp	r3, r2
   12adc:	push	{r4, lr}
   12ae0:	mov	r4, r0
   12ae4:	stm	r1, {r2, r3}
   12ae8:	str	r1, [r0]
   12aec:	streq	r1, [r0, #4]
   12af0:	ldr	r0, [r0, #8]
   12af4:	strne	r1, [r3]
   12af8:	cmp	r0, #0
   12afc:	beq	12b0c <error@@Base+0xb38>
   12b00:	bl	108d0 <free@plt>
   12b04:	mov	r3, #0
   12b08:	str	r3, [r4, #8]
   12b0c:	ldr	r3, [r4, #12]
   12b10:	add	r3, r3, #1
   12b14:	str	r3, [r4, #12]
   12b18:	pop	{r4, pc}
   12b1c:	ldr	r3, [r0, #4]
   12b20:	mov	r2, #0
   12b24:	cmp	r3, r2
   12b28:	push	{r4, lr}
   12b2c:	mov	r4, r0
   12b30:	str	r3, [r1]
   12b34:	str	r2, [r1, #4]
   12b38:	streq	r1, [r0]
   12b3c:	ldr	r0, [r0, #8]
   12b40:	strne	r1, [r3, #4]
   12b44:	cmp	r0, #0
   12b48:	str	r1, [r4, #4]
   12b4c:	beq	12b5c <error@@Base+0xb88>
   12b50:	bl	108d0 <free@plt>
   12b54:	mov	r3, #0
   12b58:	str	r3, [r4, #8]
   12b5c:	ldr	r3, [r4, #12]
   12b60:	add	r3, r3, #1
   12b64:	str	r3, [r4, #12]
   12b68:	pop	{r4, pc}
   12b6c:	ldr	r3, [r2]
   12b70:	push	{r4, lr}
   12b74:	cmp	r3, #0
   12b78:	str	r3, [r1]
   12b7c:	str	r2, [r1, #4]
   12b80:	mov	r4, r0
   12b84:	streq	r1, [r0]
   12b88:	ldr	r0, [r0, #8]
   12b8c:	strne	r1, [r3, #4]
   12b90:	cmp	r0, #0
   12b94:	str	r1, [r2]
   12b98:	beq	12ba8 <error@@Base+0xbd4>
   12b9c:	bl	108d0 <free@plt>
   12ba0:	mov	r3, #0
   12ba4:	str	r3, [r4, #8]
   12ba8:	ldr	r3, [r4, #12]
   12bac:	add	r3, r3, #1
   12bb0:	str	r3, [r4, #12]
   12bb4:	pop	{r4, pc}
   12bb8:	ldr	r3, [r1, #4]
   12bbc:	push	{r4, lr}
   12bc0:	cmp	r3, #0
   12bc4:	stm	r2, {r1, r3}
   12bc8:	mov	r4, r0
   12bcc:	str	r2, [r1, #4]
   12bd0:	streq	r2, [r0, #4]
   12bd4:	ldr	r0, [r0, #8]
   12bd8:	strne	r2, [r3]
   12bdc:	cmp	r0, #0
   12be0:	beq	12bf0 <error@@Base+0xc1c>
   12be4:	bl	108d0 <free@plt>
   12be8:	mov	r3, #0
   12bec:	str	r3, [r4, #8]
   12bf0:	ldr	r3, [r4, #12]
   12bf4:	add	r3, r3, #1
   12bf8:	str	r3, [r4, #12]
   12bfc:	pop	{r4, pc}
   12c00:	ldr	r3, [r1]
   12c04:	ldr	r2, [r1, #4]
   12c08:	cmp	r3, #0
   12c0c:	push	{r4, r5, r6, lr}
   12c10:	mov	r4, r0
   12c14:	strne	r2, [r3, #4]
   12c18:	ldrne	r2, [r1, #4]
   12c1c:	streq	r2, [r0]
   12c20:	cmp	r2, #0
   12c24:	streq	r3, [r0, #4]
   12c28:	ldr	r0, [r0, #8]
   12c2c:	mov	r5, #0
   12c30:	strne	r3, [r2]
   12c34:	cmp	r0, r5
   12c38:	str	r5, [r1, #4]
   12c3c:	str	r5, [r1]
   12c40:	beq	12c4c <error@@Base+0xc78>
   12c44:	bl	108d0 <free@plt>
   12c48:	str	r5, [r4, #8]
   12c4c:	ldr	r3, [r4, #12]
   12c50:	sub	r3, r3, #1
   12c54:	str	r3, [r4, #12]
   12c58:	pop	{r4, r5, r6, pc}
   12c5c:	ldr	r3, [r0, #8]
   12c60:	cmp	r3, #0
   12c64:	bxne	lr
   12c68:	ldr	r3, [r0, #12]
   12c6c:	cmp	r3, #0
   12c70:	bxeq	lr
   12c74:	push	{r4, lr}
   12c78:	mov	r1, #4
   12c7c:	mov	r4, r0
   12c80:	mov	r0, r3
   12c84:	bl	1202c <error@@Base+0x58>
   12c88:	ldr	r3, [r4]
   12c8c:	cmp	r3, #0
   12c90:	str	r0, [r4, #8]
   12c94:	popeq	{r4, pc}
   12c98:	sub	r0, r0, #4
   12c9c:	str	r3, [r0, #4]!
   12ca0:	ldr	r3, [r3, #4]
   12ca4:	cmp	r3, #0
   12ca8:	bne	12c9c <error@@Base+0xcc8>
   12cac:	pop	{r4, pc}
   12cb0:	push	{r4, r5, r6, lr}
   12cb4:	ldr	r4, [r0]
   12cb8:	cmp	r4, #0
   12cbc:	popeq	{r4, r5, r6, pc}
   12cc0:	mov	r5, r0
   12cc4:	mov	r6, r1
   12cc8:	mov	r1, r4
   12ccc:	mov	r0, r5
   12cd0:	bl	12c00 <error@@Base+0xc2c>
   12cd4:	mov	r0, r4
   12cd8:	blx	r6
   12cdc:	ldr	r4, [r5]
   12ce0:	cmp	r4, #0
   12ce4:	bne	12cc8 <error@@Base+0xcf4>
   12ce8:	pop	{r4, r5, r6, pc}
   12cec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12cf0:	mov	r7, r0
   12cf4:	ldr	r6, [pc, #72]	; 12d44 <error@@Base+0xd70>
   12cf8:	ldr	r5, [pc, #72]	; 12d48 <error@@Base+0xd74>
   12cfc:	add	r6, pc, r6
   12d00:	add	r5, pc, r5
   12d04:	sub	r6, r6, r5
   12d08:	mov	r8, r1
   12d0c:	mov	r9, r2
   12d10:	bl	1088c <calloc@plt-0x20>
   12d14:	asrs	r6, r6, #2
   12d18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d1c:	mov	r4, #0
   12d20:	add	r4, r4, #1
   12d24:	ldr	r3, [r5], #4
   12d28:	mov	r2, r9
   12d2c:	mov	r1, r8
   12d30:	mov	r0, r7
   12d34:	blx	r3
   12d38:	cmp	r6, r4
   12d3c:	bne	12d20 <error@@Base+0xd4c>
   12d40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d44:			; <UNDEFINED> instruction: 0x00010db8
   12d48:			; <UNDEFINED> instruction: 0x00010db0
   12d4c:	bx	lr

Disassembly of section .fini:

00012d50 <.fini>:
   12d50:	push	{r3, lr}
   12d54:	pop	{r3, pc}
