
../repos/diffutils/src/sdiff:     file format elf32-littlearm


Disassembly of section .init:

00011470 <.init>:
   11470:	push	{r3, lr}
   11474:	bl	118d4 <sigaltstack@plt+0x48>
   11478:	pop	{r3, pc}

Disassembly of section .plt:

0001147c <fdopen@plt-0x14>:
   1147c:	push	{lr}		; (str lr, [sp, #-4]!)
   11480:	ldr	lr, [pc, #4]	; 1148c <fdopen@plt-0x4>
   11484:	add	lr, pc, lr
   11488:	ldr	pc, [lr, #8]!
   1148c:	andeq	r7, r1, r4, ror fp

00011490 <fdopen@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #94208	; 0x17000
   11498:	ldr	pc, [ip, #2932]!	; 0xb74

0001149c <calloc@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #94208	; 0x17000
   114a4:	ldr	pc, [ip, #2924]!	; 0xb6c

000114a8 <fputs_unlocked@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #94208	; 0x17000
   114b0:	ldr	pc, [ip, #2916]!	; 0xb64

000114b4 <raise@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #94208	; 0x17000
   114bc:	ldr	pc, [ip, #2908]!	; 0xb5c

000114c0 <iconv_close@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #94208	; 0x17000
   114c8:	ldr	pc, [ip, #2900]!	; 0xb54

000114cc <iconv@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #94208	; 0x17000
   114d4:	ldr	pc, [ip, #2892]!	; 0xb4c

000114d8 <strcmp@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #94208	; 0x17000
   114e0:	ldr	pc, [ip, #2884]!	; 0xb44

000114e4 <printf@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #94208	; 0x17000
   114ec:	ldr	pc, [ip, #2876]!	; 0xb3c

000114f0 <read@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #94208	; 0x17000
   114f8:	ldr	pc, [ip, #2868]!	; 0xb34

000114fc <wcwidth@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #94208	; 0x17000
   11504:	ldr	pc, [ip, #2860]!	; 0xb2c

00011508 <memmove@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #94208	; 0x17000
   11510:	ldr	pc, [ip, #2852]!	; 0xb24

00011514 <free@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #94208	; 0x17000
   1151c:	ldr	pc, [ip, #2844]!	; 0xb1c

00011520 <_exit@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #94208	; 0x17000
   11528:	ldr	pc, [ip, #2836]!	; 0xb14

0001152c <memcpy@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #94208	; 0x17000
   11534:	ldr	pc, [ip, #2828]!	; 0xb0c

00011538 <execvp@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #94208	; 0x17000
   11540:	ldr	pc, [ip, #2820]!	; 0xb04

00011544 <mmap64@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #94208	; 0x17000
   1154c:	ldr	pc, [ip, #2812]!	; 0xafc

00011550 <mbsinit@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #94208	; 0x17000
   11558:	ldr	pc, [ip, #2804]!	; 0xaf4

0001155c <signal@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #94208	; 0x17000
   11564:	ldr	pc, [ip, #2796]!	; 0xaec

00011568 <fwrite_unlocked@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #94208	; 0x17000
   11570:	ldr	pc, [ip, #2788]!	; 0xae4

00011574 <dcgettext@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #94208	; 0x17000
   1157c:	ldr	pc, [ip, #2780]!	; 0xadc

00011580 <strdup@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #94208	; 0x17000
   11588:	ldr	pc, [ip, #2772]!	; 0xad4

0001158c <unlink@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #94208	; 0x17000
   11594:	ldr	pc, [ip, #2764]!	; 0xacc

00011598 <dup2@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #94208	; 0x17000
   115a0:	ldr	pc, [ip, #2756]!	; 0xac4

000115a4 <realloc@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #94208	; 0x17000
   115ac:	ldr	pc, [ip, #2748]!	; 0xabc

000115b0 <textdomain@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #94208	; 0x17000
   115b8:	ldr	pc, [ip, #2740]!	; 0xab4

000115bc <iswcntrl@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #94208	; 0x17000
   115c4:	ldr	pc, [ip, #2732]!	; 0xaac

000115c8 <rawmemchr@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #94208	; 0x17000
   115d0:	ldr	pc, [ip, #2724]!	; 0xaa4

000115d4 <perror@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #94208	; 0x17000
   115dc:	ldr	pc, [ip, #2716]!	; 0xa9c

000115e0 <fflush_unlocked@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #94208	; 0x17000
   115e8:	ldr	pc, [ip, #2708]!	; 0xa94

000115ec <sigaction@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #94208	; 0x17000
   115f4:	ldr	pc, [ip, #2700]!	; 0xa8c

000115f8 <fwrite@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #94208	; 0x17000
   11600:	ldr	pc, [ip, #2692]!	; 0xa84

00011604 <lseek64@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #94208	; 0x17000
   1160c:	ldr	pc, [ip, #2684]!	; 0xa7c

00011610 <waitpid@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #94208	; 0x17000
   11618:	ldr	pc, [ip, #2676]!	; 0xa74

0001161c <__ctype_get_mb_cur_max@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #94208	; 0x17000
   11624:	ldr	pc, [ip, #2668]!	; 0xa6c

00011628 <ferror_unlocked@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #94208	; 0x17000
   11630:	ldr	pc, [ip, #2660]!	; 0xa64

00011634 <mbrtowc@plt>:
   11634:	add	ip, pc, #0, 12
   11638:	add	ip, ip, #94208	; 0x17000
   1163c:	ldr	pc, [ip, #2652]!	; 0xa5c

00011640 <error@plt>:
   11640:	add	ip, pc, #0, 12
   11644:	add	ip, ip, #94208	; 0x17000
   11648:	ldr	pc, [ip, #2644]!	; 0xa54

0001164c <open64@plt>:
   1164c:	add	ip, pc, #0, 12
   11650:	add	ip, ip, #94208	; 0x17000
   11654:	ldr	pc, [ip, #2636]!	; 0xa4c

00011658 <getenv@plt>:
   11658:	add	ip, pc, #0, 12
   1165c:	add	ip, ip, #94208	; 0x17000
   11660:	ldr	pc, [ip, #2628]!	; 0xa44

00011664 <mkstemp64@plt>:
   11664:	add	ip, pc, #0, 12
   11668:	add	ip, ip, #94208	; 0x17000
   1166c:	ldr	pc, [ip, #2620]!	; 0xa3c

00011670 <puts@plt>:
   11670:	add	ip, pc, #0, 12
   11674:	add	ip, ip, #94208	; 0x17000
   11678:	ldr	pc, [ip, #2612]!	; 0xa34

0001167c <malloc@plt>:
   1167c:	add	ip, pc, #0, 12
   11680:	add	ip, ip, #94208	; 0x17000
   11684:	ldr	pc, [ip, #2604]!	; 0xa2c

00011688 <iconv_open@plt>:
   11688:	add	ip, pc, #0, 12
   1168c:	add	ip, ip, #94208	; 0x17000
   11690:	ldr	pc, [ip, #2596]!	; 0xa24

00011694 <sigaddset@plt>:
   11694:	add	ip, pc, #0, 12
   11698:	add	ip, ip, #94208	; 0x17000
   1169c:	ldr	pc, [ip, #2588]!	; 0xa1c

000116a0 <__libc_start_main@plt>:
   116a0:	add	ip, pc, #0, 12
   116a4:	add	ip, ip, #94208	; 0x17000
   116a8:	ldr	pc, [ip, #2580]!	; 0xa14

000116ac <__gmon_start__@plt>:
   116ac:	add	ip, pc, #0, 12
   116b0:	add	ip, ip, #94208	; 0x17000
   116b4:	ldr	pc, [ip, #2572]!	; 0xa0c

000116b8 <getopt_long@plt>:
   116b8:	add	ip, pc, #0, 12
   116bc:	add	ip, ip, #94208	; 0x17000
   116c0:	ldr	pc, [ip, #2564]!	; 0xa04

000116c4 <kill@plt>:
   116c4:	add	ip, pc, #0, 12
   116c8:	add	ip, ip, #94208	; 0x17000
   116cc:	ldr	pc, [ip, #2556]!	; 0x9fc

000116d0 <__ctype_b_loc@plt>:
   116d0:	add	ip, pc, #0, 12
   116d4:	add	ip, ip, #94208	; 0x17000
   116d8:	ldr	pc, [ip, #2548]!	; 0x9f4

000116dc <exit@plt>:
   116dc:	add	ip, pc, #0, 12
   116e0:	add	ip, ip, #94208	; 0x17000
   116e4:	ldr	pc, [ip, #2540]!	; 0x9ec

000116e8 <iswspace@plt>:
   116e8:	add	ip, pc, #0, 12
   116ec:	add	ip, ip, #94208	; 0x17000
   116f0:	ldr	pc, [ip, #2532]!	; 0x9e4

000116f4 <bcmp@plt>:
   116f4:	add	ip, pc, #0, 12
   116f8:	add	ip, ip, #94208	; 0x17000
   116fc:	ldr	pc, [ip, #2524]!	; 0x9dc

00011700 <strlen@plt>:
   11700:	add	ip, pc, #0, 12
   11704:	add	ip, ip, #94208	; 0x17000
   11708:	ldr	pc, [ip, #2516]!	; 0x9d4

0001170c <getchar_unlocked@plt>:
   1170c:	add	ip, pc, #0, 12
   11710:	add	ip, ip, #94208	; 0x17000
   11714:	ldr	pc, [ip, #2508]!	; 0x9cc

00011718 <strchr@plt>:
   11718:	add	ip, pc, #0, 12
   1171c:	add	ip, ip, #94208	; 0x17000
   11720:	ldr	pc, [ip, #2500]!	; 0x9c4

00011724 <fprintf@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #94208	; 0x17000
   1172c:	ldr	pc, [ip, #2492]!	; 0x9bc

00011730 <getpagesize@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #94208	; 0x17000
   11738:	ldr	pc, [ip, #2484]!	; 0x9b4

0001173c <__errno_location@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #94208	; 0x17000
   11744:	ldr	pc, [ip, #2476]!	; 0x9ac

00011748 <iswalnum@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #94208	; 0x17000
   11750:	ldr	pc, [ip, #2468]!	; 0x9a4

00011754 <write@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #94208	; 0x17000
   1175c:	ldr	pc, [ip, #2460]!	; 0x99c

00011760 <memchr@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #94208	; 0x17000
   11768:	ldr	pc, [ip, #2452]!	; 0x994

0001176c <strtoimax@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #94208	; 0x17000
   11774:	ldr	pc, [ip, #2444]!	; 0x98c

00011778 <fclose@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #94208	; 0x17000
   11780:	ldr	pc, [ip, #2436]!	; 0x984

00011784 <strnlen@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #94208	; 0x17000
   1178c:	ldr	pc, [ip, #2428]!	; 0x97c

00011790 <pipe@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #94208	; 0x17000
   11798:	ldr	pc, [ip, #2420]!	; 0x974

0001179c <munmap@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #94208	; 0x17000
   117a4:	ldr	pc, [ip, #2412]!	; 0x96c

000117a8 <fcntl64@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #94208	; 0x17000
   117b0:	ldr	pc, [ip, #2404]!	; 0x964

000117b4 <setlocale@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #94208	; 0x17000
   117bc:	ldr	pc, [ip, #2396]!	; 0x95c

000117c0 <sigemptyset@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #94208	; 0x17000
   117c8:	ldr	pc, [ip, #2388]!	; 0x954

000117cc <fork@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #94208	; 0x17000
   117d4:	ldr	pc, [ip, #2380]!	; 0x94c

000117d8 <strrchr@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #94208	; 0x17000
   117e0:	ldr	pc, [ip, #2372]!	; 0x944

000117e4 <nl_langinfo@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #94208	; 0x17000
   117ec:	ldr	pc, [ip, #2364]!	; 0x93c

000117f0 <sprintf@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #94208	; 0x17000
   117f8:	ldr	pc, [ip, #2356]!	; 0x934

000117fc <fopen64@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #94208	; 0x17000
   11804:	ldr	pc, [ip, #2348]!	; 0x92c

00011808 <mincore@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #94208	; 0x17000
   11810:	ldr	pc, [ip, #2340]!	; 0x924

00011814 <bindtextdomain@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #94208	; 0x17000
   1181c:	ldr	pc, [ip, #2332]!	; 0x91c

00011820 <fread_unlocked@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #94208	; 0x17000
   11828:	ldr	pc, [ip, #2324]!	; 0x914

0001182c <__xstat64@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #94208	; 0x17000
   11834:	ldr	pc, [ip, #2316]!	; 0x90c

00011838 <fputs@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #94208	; 0x17000
   11840:	ldr	pc, [ip, #2308]!	; 0x904

00011844 <strncmp@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #94208	; 0x17000
   1184c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011850 <abort@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #94208	; 0x17000
   11858:	ldr	pc, [ip, #2292]!	; 0x8f4

0001185c <feof_unlocked@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #94208	; 0x17000
   11864:	ldr	pc, [ip, #2284]!	; 0x8ec

00011868 <close@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #94208	; 0x17000
   11870:	ldr	pc, [ip, #2276]!	; 0x8e4

00011874 <putchar_unlocked@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #94208	; 0x17000
   1187c:	ldr	pc, [ip, #2268]!	; 0x8dc

00011880 <__assert_fail@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #94208	; 0x17000
   11888:	ldr	pc, [ip, #2260]!	; 0x8d4

0001188c <sigaltstack@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #94208	; 0x17000
   11894:	ldr	pc, [ip, #2252]!	; 0x8cc

Disassembly of section .text:

00011898 <.text>:
   11898:	mov	fp, #0
   1189c:	mov	lr, #0
   118a0:	pop	{r1}		; (ldr r1, [sp], #4)
   118a4:	mov	r2, sp
   118a8:	push	{r2}		; (str r2, [sp, #-4]!)
   118ac:	push	{r0}		; (str r0, [sp, #-4]!)
   118b0:	ldr	ip, [pc, #16]	; 118c8 <sigaltstack@plt+0x3c>
   118b4:	push	{ip}		; (str ip, [sp, #-4]!)
   118b8:	ldr	r0, [pc, #12]	; 118cc <sigaltstack@plt+0x40>
   118bc:	ldr	r3, [pc, #12]	; 118d0 <sigaltstack@plt+0x44>
   118c0:	bl	116a0 <__libc_start_main@plt>
   118c4:	bl	11850 <abort@plt>
   118c8:	andeq	r7, r1, r4, lsl #16
   118cc:	andeq	r1, r1, r8, lsl #19
   118d0:	andeq	r7, r1, r4, lsr #15
   118d4:	ldr	r3, [pc, #20]	; 118f0 <sigaltstack@plt+0x64>
   118d8:	ldr	r2, [pc, #20]	; 118f4 <sigaltstack@plt+0x68>
   118dc:	add	r3, pc, r3
   118e0:	ldr	r2, [r3, r2]
   118e4:	cmp	r2, #0
   118e8:	bxeq	lr
   118ec:	b	116ac <__gmon_start__@plt>
   118f0:	andeq	r7, r1, ip, lsl r7
   118f4:	andeq	r0, r0, r4, ror #2
   118f8:	ldr	r0, [pc, #24]	; 11918 <sigaltstack@plt+0x8c>
   118fc:	ldr	r3, [pc, #24]	; 1191c <sigaltstack@plt+0x90>
   11900:	cmp	r3, r0
   11904:	bxeq	lr
   11908:	ldr	r3, [pc, #16]	; 11920 <sigaltstack@plt+0x94>
   1190c:	cmp	r3, #0
   11910:	bxeq	lr
   11914:	bx	r3
   11918:	andeq	r9, r2, r0, lsl #3
   1191c:	andeq	r9, r2, r0, lsl #3
   11920:	andeq	r0, r0, r0
   11924:	ldr	r0, [pc, #36]	; 11950 <sigaltstack@plt+0xc4>
   11928:	ldr	r1, [pc, #36]	; 11954 <sigaltstack@plt+0xc8>
   1192c:	sub	r1, r1, r0
   11930:	asr	r1, r1, #2
   11934:	add	r1, r1, r1, lsr #31
   11938:	asrs	r1, r1, #1
   1193c:	bxeq	lr
   11940:	ldr	r3, [pc, #16]	; 11958 <sigaltstack@plt+0xcc>
   11944:	cmp	r3, #0
   11948:	bxeq	lr
   1194c:	bx	r3
   11950:	andeq	r9, r2, r0, lsl #3
   11954:	andeq	r9, r2, r0, lsl #3
   11958:	andeq	r0, r0, r0
   1195c:	push	{r4, lr}
   11960:	ldr	r4, [pc, #24]	; 11980 <sigaltstack@plt+0xf4>
   11964:	ldrb	r3, [r4]
   11968:	cmp	r3, #0
   1196c:	popne	{r4, pc}
   11970:	bl	118f8 <sigaltstack@plt+0x6c>
   11974:	mov	r3, #1
   11978:	strb	r3, [r4]
   1197c:	pop	{r4, pc}
   11980:	andeq	r9, r2, r4, lsr #3
   11984:	b	11924 <sigaltstack@plt+0x98>
   11988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1198c:	add	fp, sp, #28
   11990:	sub	sp, sp, #76	; 0x4c
   11994:	mov	r4, r1
   11998:	mov	r5, r0
   1199c:	movw	r0, #37240	; 0x9178
   119a0:	movt	r0, #2
   119a4:	mov	r1, #2
   119a8:	str	r1, [r0]
   119ac:	ldr	r0, [r4]
   119b0:	bl	139c0 <sigaltstack@plt+0x2134>
   119b4:	movw	r1, #31354	; 0x7a7a
   119b8:	movt	r1, #1
   119bc:	mov	r0, #6
   119c0:	bl	117b4 <setlocale@plt>
   119c4:	movw	r6, #30858	; 0x788a
   119c8:	movt	r6, #1
   119cc:	movw	r1, #30756	; 0x7824
   119d0:	movt	r1, #1
   119d4:	mov	r0, r6
   119d8:	bl	11814 <bindtextdomain@plt>
   119dc:	mov	r0, r6
   119e0:	bl	115b0 <textdomain@plt>
   119e4:	movw	r0, #8972	; 0x230c
   119e8:	movt	r0, #1
   119ec:	bl	13768 <sigaltstack@plt+0x1edc>
   119f0:	bl	157d8 <sigaltstack@plt+0x3f4c>
   119f4:	movw	r0, #30780	; 0x783c
   119f8:	movt	r0, #1
   119fc:	bl	11658 <getenv@plt>
   11a00:	cmp	r0, #0
   11a04:	movwne	r1, #37232	; 0x9170
   11a08:	movtne	r1, #2
   11a0c:	strne	r0, [r1]
   11a10:	movw	r0, #30849	; 0x7881
   11a14:	movt	r0, #1
   11a18:	bl	12354 <sigaltstack@plt+0xac8>
   11a1c:	mov	r8, #0
   11a20:	movw	r6, #30787	; 0x7843
   11a24:	movt	r6, #1
   11a28:	movw	r7, #33668	; 0x8384
   11a2c:	movt	r7, #1
   11a30:	movw	r9, #37280	; 0x91a0
   11a34:	movt	r9, #2
   11a38:	movw	sl, #30909	; 0x78bd
   11a3c:	movt	sl, #1
   11a40:	str	r8, [sp]
   11a44:	mov	r0, r5
   11a48:	mov	r1, r4
   11a4c:	mov	r2, r6
   11a50:	mov	r3, r7
   11a54:	bl	116b8 <getopt_long@plt>
   11a58:	sub	r1, r0, #66	; 0x42
   11a5c:	cmp	r1, #193	; 0xc1
   11a60:	bhi	11ea0 <sigaltstack@plt+0x614>
   11a64:	add	r0, pc, #0
   11a68:	ldr	pc, [r0, r1, lsl #2]
   11a6c:	andeq	r1, r1, r4, ror sp
   11a70:	andeq	r2, r1, r8, lsr #3
   11a74:	andeq	r2, r1, r8, lsr #3
   11a78:	andeq	r1, r1, r4, asr #28
   11a7c:	andeq	r2, r1, r8, lsr #3
   11a80:	andeq	r2, r1, r8, lsr #3
   11a84:	andeq	r1, r1, r4, ror #28
   11a88:	andeq	r1, r1, r8, lsr lr
   11a8c:	andeq	r2, r1, r8, lsr #3
   11a90:	andeq	r2, r1, r8, lsr #3
   11a94:	andeq	r2, r1, r8, lsr #3
   11a98:	andeq	r2, r1, r8, lsr #3
   11a9c:	andeq	r2, r1, r8, lsr #3
   11aa0:	andeq	r2, r1, r8, lsr #3
   11aa4:	andeq	r2, r1, r8, lsr #3
   11aa8:	andeq	r2, r1, r8, lsr #3
   11aac:	andeq	r2, r1, r8, lsr #3
   11ab0:	andeq	r2, r1, r8, lsr #3
   11ab4:	andeq	r2, r1, r8, lsr #3
   11ab8:	andeq	r2, r1, r8, lsr #3
   11abc:	andeq	r2, r1, r8, lsr #3
   11ac0:	andeq	r1, r1, r8, lsl #28
   11ac4:	andeq	r2, r1, r8, lsr #3
   11ac8:	andeq	r2, r1, r8, lsr #3
   11acc:	ldrdeq	r1, [r1], -r8
   11ad0:	andeq	r2, r1, r8, lsr #3
   11ad4:	andeq	r2, r1, r8, lsr #3
   11ad8:	andeq	r2, r1, r8, lsr #3
   11adc:	andeq	r2, r1, r8, lsr #3
   11ae0:	andeq	r2, r1, r8, lsr #3
   11ae4:	andeq	r2, r1, r8, lsr #3
   11ae8:	strdeq	r1, [r1], -r8
   11aec:			; <UNDEFINED> instruction: 0x00011dbc
   11af0:	andeq	r2, r1, r8, lsr #3
   11af4:	andeq	r1, r1, r8, lsl lr
   11af8:	andeq	r2, r1, r8, lsr #3
   11afc:	andeq	r2, r1, r8, lsr #3
   11b00:	andeq	r2, r1, r8, lsr #3
   11b04:	andeq	r2, r1, r8, lsr #3
   11b08:	andeq	r1, r1, ip, lsr #27
   11b0c:	andeq	r2, r1, r8, lsr #3
   11b10:	andeq	r2, r1, r8, lsr #3
   11b14:	andeq	r1, r1, r8, lsr #28
   11b18:	andeq	r2, r1, r8, lsr #3
   11b1c:	andeq	r2, r1, r8, lsr #3
   11b20:	andeq	r1, r1, r4, lsl #27
   11b24:	andeq	r2, r1, r8, lsr #3
   11b28:	andeq	r2, r1, r8, lsr #3
   11b2c:	andeq	r2, r1, r8, lsr #3
   11b30:	muleq	r1, r8, sp
   11b34:	andeq	r1, r1, r8, ror #27
   11b38:	andeq	r2, r1, r8, lsr #3
   11b3c:	andeq	r2, r1, r0, asr #2
   11b40:	andeq	r1, r1, ip, asr #27
   11b44:	andeq	r2, r1, r8, lsr #3
   11b48:	andeq	r2, r1, r8, lsr #3
   11b4c:	andeq	r2, r1, r8, lsr #3
   11b50:	andeq	r2, r1, r8, lsr #3
   11b54:	andeq	r2, r1, r8, lsr #3
   11b58:	andeq	r2, r1, r8, lsr #3
   11b5c:	andeq	r2, r1, r8, lsr #3
   11b60:	andeq	r2, r1, r8, lsr #3
   11b64:	andeq	r2, r1, r8, lsr #3
   11b68:	andeq	r2, r1, r8, lsr #3
   11b6c:	andeq	r2, r1, r8, lsr #3
   11b70:	andeq	r2, r1, r8, lsr #3
   11b74:	andeq	r2, r1, r8, lsr #3
   11b78:	andeq	r2, r1, r8, lsr #3
   11b7c:	andeq	r2, r1, r8, lsr #3
   11b80:	andeq	r2, r1, r8, lsr #3
   11b84:	andeq	r2, r1, r8, lsr #3
   11b88:	andeq	r2, r1, r8, lsr #3
   11b8c:	andeq	r2, r1, r8, lsr #3
   11b90:	andeq	r2, r1, r8, lsr #3
   11b94:	andeq	r2, r1, r8, lsr #3
   11b98:	andeq	r2, r1, r8, lsr #3
   11b9c:	andeq	r2, r1, r8, lsr #3
   11ba0:	andeq	r2, r1, r8, lsr #3
   11ba4:	andeq	r2, r1, r8, lsr #3
   11ba8:	andeq	r2, r1, r8, lsr #3
   11bac:	andeq	r2, r1, r8, lsr #3
   11bb0:	andeq	r2, r1, r8, lsr #3
   11bb4:	andeq	r2, r1, r8, lsr #3
   11bb8:	andeq	r2, r1, r8, lsr #3
   11bbc:	andeq	r2, r1, r8, lsr #3
   11bc0:	andeq	r2, r1, r8, lsr #3
   11bc4:	andeq	r2, r1, r8, lsr #3
   11bc8:	andeq	r2, r1, r8, lsr #3
   11bcc:	andeq	r2, r1, r8, lsr #3
   11bd0:	andeq	r2, r1, r8, lsr #3
   11bd4:	andeq	r2, r1, r8, lsr #3
   11bd8:	andeq	r2, r1, r8, lsr #3
   11bdc:	andeq	r2, r1, r8, lsr #3
   11be0:	andeq	r2, r1, r8, lsr #3
   11be4:	andeq	r2, r1, r8, lsr #3
   11be8:	andeq	r2, r1, r8, lsr #3
   11bec:	andeq	r2, r1, r8, lsr #3
   11bf0:	andeq	r2, r1, r8, lsr #3
   11bf4:	andeq	r2, r1, r8, lsr #3
   11bf8:	andeq	r2, r1, r8, lsr #3
   11bfc:	andeq	r2, r1, r8, lsr #3
   11c00:	andeq	r2, r1, r8, lsr #3
   11c04:	andeq	r2, r1, r8, lsr #3
   11c08:	andeq	r2, r1, r8, lsr #3
   11c0c:	andeq	r2, r1, r8, lsr #3
   11c10:	andeq	r2, r1, r8, lsr #3
   11c14:	andeq	r2, r1, r8, lsr #3
   11c18:	andeq	r2, r1, r8, lsr #3
   11c1c:	andeq	r2, r1, r8, lsr #3
   11c20:	andeq	r2, r1, r8, lsr #3
   11c24:	andeq	r2, r1, r8, lsr #3
   11c28:	andeq	r2, r1, r8, lsr #3
   11c2c:	andeq	r2, r1, r8, lsr #3
   11c30:	andeq	r2, r1, r8, lsr #3
   11c34:	andeq	r2, r1, r8, lsr #3
   11c38:	andeq	r2, r1, r8, lsr #3
   11c3c:	andeq	r2, r1, r8, lsr #3
   11c40:	andeq	r2, r1, r8, lsr #3
   11c44:	andeq	r2, r1, r8, lsr #3
   11c48:	andeq	r2, r1, r8, lsr #3
   11c4c:	andeq	r2, r1, r8, lsr #3
   11c50:	andeq	r2, r1, r8, lsr #3
   11c54:	andeq	r2, r1, r8, lsr #3
   11c58:	andeq	r2, r1, r8, lsr #3
   11c5c:	andeq	r2, r1, r8, lsr #3
   11c60:	andeq	r2, r1, r8, lsr #3
   11c64:	andeq	r2, r1, r8, lsr #3
   11c68:	andeq	r2, r1, r8, lsr #3
   11c6c:	andeq	r2, r1, r8, lsr #3
   11c70:	andeq	r2, r1, r8, lsr #3
   11c74:	andeq	r2, r1, r8, lsr #3
   11c78:	andeq	r2, r1, r8, lsr #3
   11c7c:	andeq	r2, r1, r8, lsr #3
   11c80:	andeq	r2, r1, r8, lsr #3
   11c84:	andeq	r2, r1, r8, lsr #3
   11c88:	andeq	r2, r1, r8, lsr #3
   11c8c:	andeq	r2, r1, r8, lsr #3
   11c90:	andeq	r2, r1, r8, lsr #3
   11c94:	andeq	r2, r1, r8, lsr #3
   11c98:	andeq	r2, r1, r8, lsr #3
   11c9c:	andeq	r2, r1, r8, lsr #3
   11ca0:	andeq	r2, r1, r8, lsr #3
   11ca4:	andeq	r2, r1, r8, lsr #3
   11ca8:	andeq	r2, r1, r8, lsr #3
   11cac:	andeq	r2, r1, r8, lsr #3
   11cb0:	andeq	r2, r1, r8, lsr #3
   11cb4:	andeq	r2, r1, r8, lsr #3
   11cb8:	andeq	r2, r1, r8, lsr #3
   11cbc:	andeq	r2, r1, r8, lsr #3
   11cc0:	andeq	r2, r1, r8, lsr #3
   11cc4:	andeq	r2, r1, r8, lsr #3
   11cc8:	andeq	r2, r1, r8, lsr #3
   11ccc:	andeq	r2, r1, r8, lsr #3
   11cd0:	andeq	r2, r1, r8, lsr #3
   11cd4:	andeq	r2, r1, r8, lsr #3
   11cd8:	andeq	r2, r1, r8, lsr #3
   11cdc:	andeq	r2, r1, r8, lsr #3
   11ce0:	andeq	r2, r1, r8, lsr #3
   11ce4:	andeq	r2, r1, r8, lsr #3
   11ce8:	andeq	r2, r1, r8, lsr #3
   11cec:	andeq	r2, r1, r8, lsr #3
   11cf0:	andeq	r2, r1, r8, lsr #3
   11cf4:	andeq	r2, r1, r8, lsr #3
   11cf8:	andeq	r2, r1, r8, lsr #3
   11cfc:	andeq	r2, r1, r8, lsr #3
   11d00:	andeq	r2, r1, r8, lsr #3
   11d04:	andeq	r2, r1, r8, lsr #3
   11d08:	andeq	r2, r1, r8, lsr #3
   11d0c:	andeq	r2, r1, r8, lsr #3
   11d10:	andeq	r2, r1, r8, lsr #3
   11d14:	andeq	r2, r1, r8, lsr #3
   11d18:	andeq	r2, r1, r8, lsr #3
   11d1c:	andeq	r2, r1, r8, lsr #3
   11d20:	andeq	r2, r1, r8, lsr #3
   11d24:	andeq	r2, r1, r8, lsr #3
   11d28:	andeq	r2, r1, r8, lsr #3
   11d2c:	andeq	r2, r1, r8, lsr #3
   11d30:	andeq	r2, r1, r8, lsr #3
   11d34:	andeq	r2, r1, r8, lsr #3
   11d38:	andeq	r2, r1, r8, lsr #3
   11d3c:	andeq	r2, r1, r8, lsr #3
   11d40:	andeq	r2, r1, r8, lsr #3
   11d44:	andeq	r2, r1, r8, lsr #3
   11d48:	andeq	r2, r1, r8, lsr #3
   11d4c:	andeq	r2, r1, r8, lsr #3
   11d50:	andeq	r2, r1, r8, lsr #3
   11d54:	andeq	r2, r1, r8, lsr #3
   11d58:	andeq	r2, r1, r8, lsr #3
   11d5c:	andeq	r2, r1, r8, lsr #3
   11d60:	andeq	r2, r1, r8, lsr #3
   11d64:	andeq	r1, r1, r8, lsl #29
   11d68:	andeq	r2, r1, r8, lsr r1
   11d6c:	andeq	r1, r1, r4, asr lr
   11d70:	andeq	r1, r1, r4, ror lr
   11d74:	movw	r0, #30813	; 0x785d
   11d78:	movt	r0, #1
   11d7c:	bl	12354 <sigaltstack@plt+0xac8>
   11d80:	b	11a40 <sigaltstack@plt+0x1b4>
   11d84:	ldr	r0, [r9]
   11d88:	movw	r1, #37288	; 0x91a8
   11d8c:	movt	r1, #2
   11d90:	str	r0, [r1]
   11d94:	b	11a40 <sigaltstack@plt+0x1b4>
   11d98:	movw	r0, #37292	; 0x91ac
   11d9c:	movt	r0, #2
   11da0:	mov	r1, #1
   11da4:	strb	r1, [r0]
   11da8:	b	11a40 <sigaltstack@plt+0x1b4>
   11dac:	movw	r0, #30825	; 0x7869
   11db0:	movt	r0, #1
   11db4:	bl	12354 <sigaltstack@plt+0xac8>
   11db8:	b	11a40 <sigaltstack@plt+0x1b4>
   11dbc:	movw	r0, #30810	; 0x785a
   11dc0:	movt	r0, #1
   11dc4:	bl	12354 <sigaltstack@plt+0xac8>
   11dc8:	b	11a40 <sigaltstack@plt+0x1b4>
   11dcc:	movw	r0, #30880	; 0x78a0
   11dd0:	movt	r0, #1
   11dd4:	b	11e78 <sigaltstack@plt+0x5ec>
   11dd8:	movw	r0, #30886	; 0x78a6
   11ddc:	movt	r0, #1
   11de0:	bl	12354 <sigaltstack@plt+0xac8>
   11de4:	b	11a40 <sigaltstack@plt+0x1b4>
   11de8:	movw	r0, #30845	; 0x787d
   11dec:	movt	r0, #1
   11df0:	bl	12354 <sigaltstack@plt+0xac8>
   11df4:	b	11a40 <sigaltstack@plt+0x1b4>
   11df8:	movw	r0, #30807	; 0x7857
   11dfc:	movt	r0, #1
   11e00:	bl	12354 <sigaltstack@plt+0xac8>
   11e04:	b	11a40 <sigaltstack@plt+0x1b4>
   11e08:	movw	r0, #30883	; 0x78a3
   11e0c:	movt	r0, #1
   11e10:	bl	12354 <sigaltstack@plt+0xac8>
   11e14:	b	11a40 <sigaltstack@plt+0x1b4>
   11e18:	movw	r0, #30816	; 0x7860
   11e1c:	movt	r0, #1
   11e20:	bl	12354 <sigaltstack@plt+0xac8>
   11e24:	b	11a40 <sigaltstack@plt+0x1b4>
   11e28:	movw	r0, #30831	; 0x786f
   11e2c:	movt	r0, #1
   11e30:	bl	12354 <sigaltstack@plt+0xac8>
   11e34:	b	11a40 <sigaltstack@plt+0x1b4>
   11e38:	movw	r0, #30828	; 0x786c
   11e3c:	movt	r0, #1
   11e40:	b	11e78 <sigaltstack@plt+0x5ec>
   11e44:	movw	r0, #30819	; 0x7863
   11e48:	movt	r0, #1
   11e4c:	bl	12354 <sigaltstack@plt+0xac8>
   11e50:	b	11a40 <sigaltstack@plt+0x1b4>
   11e54:	movw	r0, #30889	; 0x78a9
   11e58:	movt	r0, #1
   11e5c:	bl	12354 <sigaltstack@plt+0xac8>
   11e60:	b	11a40 <sigaltstack@plt+0x1b4>
   11e64:	movw	r0, #30822	; 0x7866
   11e68:	movt	r0, #1
   11e6c:	bl	12354 <sigaltstack@plt+0xac8>
   11e70:	b	11a40 <sigaltstack@plt+0x1b4>
   11e74:	mov	r0, sl
   11e78:	bl	12354 <sigaltstack@plt+0xac8>
   11e7c:	ldr	r0, [r9]
   11e80:	bl	12354 <sigaltstack@plt+0xac8>
   11e84:	b	11a40 <sigaltstack@plt+0x1b4>
   11e88:	movw	r0, #37296	; 0x91b0
   11e8c:	movt	r0, #2
   11e90:	ldr	r0, [r0]
   11e94:	ldr	r1, [r9]
   11e98:	str	r1, [r0]
   11e9c:	b	11a40 <sigaltstack@plt+0x1b4>
   11ea0:	cmn	r0, #1
   11ea4:	bne	121a8 <sigaltstack@plt+0x91c>
   11ea8:	movw	r8, #37256	; 0x9188
   11eac:	movt	r8, #2
   11eb0:	ldr	r0, [r8]
   11eb4:	sub	r1, r5, r0
   11eb8:	cmp	r1, #2
   11ebc:	bne	121b4 <sigaltstack@plt+0x928>
   11ec0:	movw	r1, #37288	; 0x91a8
   11ec4:	movt	r1, #2
   11ec8:	ldr	r1, [r1]
   11ecc:	cmp	r1, #0
   11ed0:	beq	121d0 <sigaltstack@plt+0x944>
   11ed4:	ldr	r0, [r4, r0, lsl #2]
   11ed8:	bl	125dc <sigaltstack@plt+0xd50>
   11edc:	mov	r6, r0
   11ee0:	ldr	r0, [r8]
   11ee4:	add	r0, r4, r0, lsl #2
   11ee8:	ldr	r0, [r0, #4]
   11eec:	bl	125dc <sigaltstack@plt+0xd50>
   11ef0:	mov	r5, r0
   11ef4:	cmp	r6, #0
   11ef8:	cmpne	r5, #0
   11efc:	bne	12250 <sigaltstack@plt+0x9c4>
   11f00:	ldr	r0, [r8]
   11f04:	mov	r1, r4
   11f08:	ldr	r0, [r1, r0, lsl #2]!
   11f0c:	ldr	r2, [r1, #4]
   11f10:	mov	r1, r6
   11f14:	bl	12658 <sigaltstack@plt+0xdcc>
   11f18:	mov	r9, r0
   11f1c:	movw	r7, #30907	; 0x78bb
   11f20:	movt	r7, #1
   11f24:	mov	r1, r7
   11f28:	bl	1273c <sigaltstack@plt+0xeb0>
   11f2c:	str	r0, [sp, #16]
   11f30:	ldr	r0, [r8]
   11f34:	mov	r1, r4
   11f38:	ldr	r2, [r1, r0, lsl #2]!
   11f3c:	ldr	r0, [r1, #4]
   11f40:	mov	r1, r5
   11f44:	bl	12658 <sigaltstack@plt+0xdcc>
   11f48:	str	r0, [sp, #12]
   11f4c:	mov	r1, r7
   11f50:	bl	1273c <sigaltstack@plt+0xeb0>
   11f54:	mov	r5, r0
   11f58:	movw	r0, #37288	; 0x91a8
   11f5c:	movt	r0, #2
   11f60:	ldr	r0, [r0]
   11f64:	movw	r1, #30884	; 0x78a4
   11f68:	movt	r1, #1
   11f6c:	bl	1273c <sigaltstack@plt+0xeb0>
   11f70:	mov	r7, r0
   11f74:	movw	r0, #31037	; 0x793d
   11f78:	movt	r0, #1
   11f7c:	bl	12354 <sigaltstack@plt+0xac8>
   11f80:	movw	r0, #30992	; 0x7910
   11f84:	movt	r0, #1
   11f88:	bl	12354 <sigaltstack@plt+0xac8>
   11f8c:	ldr	r0, [r8]
   11f90:	ldr	r0, [r4, r0, lsl #2]
   11f94:	bl	12354 <sigaltstack@plt+0xac8>
   11f98:	ldr	r0, [r8]
   11f9c:	add	r0, r4, r0, lsl #2
   11fa0:	ldr	r0, [r0, #4]
   11fa4:	bl	12354 <sigaltstack@plt+0xac8>
   11fa8:	mov	r0, #0
   11fac:	bl	12354 <sigaltstack@plt+0xac8>
   11fb0:	bl	1275c <sigaltstack@plt+0xed0>
   11fb4:	sub	r0, fp, #44	; 0x2c
   11fb8:	bl	11790 <pipe@plt>
   11fbc:	cmp	r0, #0
   11fc0:	bne	1225c <sigaltstack@plt+0x9d0>
   11fc4:	bl	117cc <fork@plt>
   11fc8:	movw	sl, #37300	; 0x91b4
   11fcc:	movt	sl, #2
   11fd0:	str	r0, [sl]
   11fd4:	ldr	r0, [sl]
   11fd8:	cmn	r0, #1
   11fdc:	ble	12268 <sigaltstack@plt+0x9dc>
   11fe0:	ldr	r0, [sl]
   11fe4:	cmp	r0, #0
   11fe8:	beq	12274 <sigaltstack@plt+0x9e8>
   11fec:	mov	r6, r5
   11ff0:	str	r9, [sp, #20]
   11ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ff8:	bl	11868 <close@plt>
   11ffc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12000:	movw	r1, #30907	; 0x78bb
   12004:	movt	r1, #1
   12008:	bl	11490 <fdopen@plt>
   1200c:	cmp	r0, #0
   12010:	beq	122ec <sigaltstack@plt+0xa60>
   12014:	mov	r4, r0
   12018:	add	r0, sp, #28
   1201c:	mov	r1, r4
   12020:	bl	12828 <sigaltstack@plt+0xf9c>
   12024:	sub	r8, fp, #44	; 0x2c
   12028:	mov	r0, r8
   1202c:	ldr	r9, [sp, #16]
   12030:	mov	r1, r9
   12034:	bl	12828 <sigaltstack@plt+0xf9c>
   12038:	add	r5, sp, #44	; 0x2c
   1203c:	mov	r0, r5
   12040:	mov	r1, r6
   12044:	bl	12828 <sigaltstack@plt+0xf9c>
   12048:	ldr	r0, [sp, #12]
   1204c:	stm	sp, {r0, r7}
   12050:	add	r0, sp, #28
   12054:	mov	r1, r8
   12058:	ldr	r2, [sp, #20]
   1205c:	mov	r3, r5
   12060:	bl	1285c <sigaltstack@plt+0xfd0>
   12064:	mov	r8, r0
   12068:	mov	r0, r9
   1206c:	bl	12a5c <sigaltstack@plt+0x11d0>
   12070:	mov	r0, r6
   12074:	bl	12a5c <sigaltstack@plt+0x11d0>
   12078:	mov	r0, r7
   1207c:	bl	12a5c <sigaltstack@plt+0x11d0>
   12080:	mov	r0, r4
   12084:	bl	12a5c <sigaltstack@plt+0x11d0>
   12088:	ldr	r0, [sl]
   1208c:	add	r1, sp, #24
   12090:	mov	r6, #0
   12094:	mov	r2, #0
   12098:	bl	11610 <waitpid@plt>
   1209c:	cmn	r0, #1
   120a0:	bgt	120d8 <sigaltstack@plt+0x84c>
   120a4:	bl	1173c <__errno_location@plt>
   120a8:	mov	r4, r0
   120ac:	add	r5, sp, #24
   120b0:	ldr	r0, [r4]
   120b4:	cmp	r0, #4
   120b8:	bne	12198 <sigaltstack@plt+0x90c>
   120bc:	bl	12a7c <sigaltstack@plt+0x11f0>
   120c0:	ldr	r0, [sl]
   120c4:	mov	r1, r5
   120c8:	mov	r2, #0
   120cc:	bl	11610 <waitpid@plt>
   120d0:	cmp	r0, #0
   120d4:	bmi	120b0 <sigaltstack@plt+0x824>
   120d8:	str	r6, [sl]
   120dc:	movw	r4, #38284	; 0x958c
   120e0:	movt	r4, #2
   120e4:	ldr	r0, [r4]
   120e8:	cmp	r0, #0
   120ec:	beq	12100 <sigaltstack@plt+0x874>
   120f0:	ldr	r0, [r4]
   120f4:	bl	1158c <unlink@plt>
   120f8:	mov	r0, #0
   120fc:	str	r0, [r4]
   12100:	cmp	r8, #0
   12104:	beq	121a4 <sigaltstack@plt+0x918>
   12108:	movw	r0, #37296	; 0x91b0
   1210c:	movt	r0, #2
   12110:	ldr	r0, [r0]
   12114:	ldr	r2, [r0]
   12118:	ldr	r0, [sp, #24]
   1211c:	mov	r1, #1
   12120:	bl	12adc <sigaltstack@plt+0x1250>
   12124:	mov	r0, #0
   12128:	bl	12b6c <sigaltstack@plt+0x12e0>
   1212c:	bl	12a7c <sigaltstack@plt+0x11f0>
   12130:	ldrb	r0, [sp, #25]
   12134:	bl	116dc <exit@plt>
   12138:	bl	12428 <sigaltstack@plt+0xb9c>
   1213c:	b	12188 <sigaltstack@plt+0x8fc>
   12140:	movw	r0, #37236	; 0x9174
   12144:	movt	r0, #2
   12148:	ldr	r4, [r0]
   1214c:	movw	r0, #37276	; 0x919c
   12150:	movt	r0, #2
   12154:	ldr	r5, [r0]
   12158:	movw	r0, #30868	; 0x7894
   1215c:	movt	r0, #1
   12160:	bl	13a84 <sigaltstack@plt+0x21f8>
   12164:	mov	r1, #0
   12168:	stm	sp, {r0, r1}
   1216c:	movw	r1, #30848	; 0x7880
   12170:	movt	r1, #1
   12174:	movw	r2, #30854	; 0x7886
   12178:	movt	r2, #1
   1217c:	mov	r0, r5
   12180:	mov	r3, r4
   12184:	bl	1532c <sigaltstack@plt+0x3aa0>
   12188:	bl	123d4 <sigaltstack@plt+0xb48>
   1218c:	mov	r0, #0
   12190:	sub	sp, fp, #28
   12194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12198:	movw	r0, #31075	; 0x7963
   1219c:	movt	r0, #1
   121a0:	bl	125a8 <sigaltstack@plt+0xd1c>
   121a4:	bl	12ab8 <sigaltstack@plt+0x122c>
   121a8:	mov	r0, #0
   121ac:	mov	r1, #0
   121b0:	bl	12540 <sigaltstack@plt+0xcb4>
   121b4:	cmp	r1, #1
   121b8:	bgt	122f8 <sigaltstack@plt+0xa6c>
   121bc:	add	r0, r4, r5, lsl #2
   121c0:	ldr	r1, [r0, #-4]
   121c4:	movw	r0, #30919	; 0x78c7
   121c8:	movt	r0, #1
   121cc:	bl	12540 <sigaltstack@plt+0xcb4>
   121d0:	movw	r0, #37292	; 0x91ac
   121d4:	movt	r0, #2
   121d8:	ldrb	r0, [r0]
   121dc:	cmp	r0, #1
   121e0:	bne	121f0 <sigaltstack@plt+0x964>
   121e4:	movw	r0, #30965	; 0x78f5
   121e8:	movt	r0, #1
   121ec:	bl	12354 <sigaltstack@plt+0xac8>
   121f0:	movw	r0, #30989	; 0x790d
   121f4:	movt	r0, #1
   121f8:	bl	12354 <sigaltstack@plt+0xac8>
   121fc:	movw	r0, #30992	; 0x7910
   12200:	movt	r0, #1
   12204:	bl	12354 <sigaltstack@plt+0xac8>
   12208:	ldr	r0, [r8]
   1220c:	ldr	r0, [r4, r0, lsl #2]
   12210:	bl	12354 <sigaltstack@plt+0xac8>
   12214:	ldr	r0, [r8]
   12218:	add	r0, r4, r0, lsl #2
   1221c:	ldr	r0, [r0, #4]
   12220:	bl	12354 <sigaltstack@plt+0xac8>
   12224:	mov	r0, #0
   12228:	bl	12354 <sigaltstack@plt+0xac8>
   1222c:	movw	r0, #37296	; 0x91b0
   12230:	movt	r0, #2
   12234:	mov	r4, r0
   12238:	ldr	r1, [r0]
   1223c:	ldr	r0, [r1]
   12240:	bl	11538 <execvp@plt>
   12244:	ldr	r0, [r4]
   12248:	ldr	r0, [r0]
   1224c:	bl	125a8 <sigaltstack@plt+0xd1c>
   12250:	movw	r0, #30995	; 0x7913
   12254:	movt	r0, #1
   12258:	bl	12624 <sigaltstack@plt+0xd98>
   1225c:	movw	r0, #31058	; 0x7952
   12260:	movt	r0, #1
   12264:	bl	125a8 <sigaltstack@plt+0xd1c>
   12268:	movw	r0, #31063	; 0x7957
   1226c:	movt	r0, #1
   12270:	bl	125a8 <sigaltstack@plt+0xd1c>
   12274:	movw	r0, #37304	; 0x91b8
   12278:	movt	r0, #2
   1227c:	ldr	r0, [r0, #840]	; 0x348
   12280:	cmp	r0, #1
   12284:	movne	r0, #2
   12288:	movne	r1, #1
   1228c:	blne	12810 <sigaltstack@plt+0xf84>
   12290:	mov	r0, #13
   12294:	mov	r1, #0
   12298:	bl	12810 <sigaltstack@plt+0xf84>
   1229c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   122a0:	bl	11868 <close@plt>
   122a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122a8:	cmp	r0, #1
   122ac:	beq	122c0 <sigaltstack@plt+0xa34>
   122b0:	mov	r1, #1
   122b4:	bl	11598 <dup2@plt>
   122b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   122bc:	bl	11868 <close@plt>
   122c0:	movw	r0, #37296	; 0x91b0
   122c4:	movt	r0, #2
   122c8:	ldr	r1, [r0]
   122cc:	ldr	r0, [r1]
   122d0:	bl	11538 <execvp@plt>
   122d4:	bl	1173c <__errno_location@plt>
   122d8:	ldr	r1, [r0]
   122dc:	mov	r0, #126	; 0x7e
   122e0:	cmp	r1, #2
   122e4:	movweq	r0, #127	; 0x7f
   122e8:	bl	11520 <_exit@plt>
   122ec:	movw	r0, #31068	; 0x795c
   122f0:	movt	r0, #1
   122f4:	bl	125a8 <sigaltstack@plt+0xd1c>
   122f8:	add	r0, r4, r0, lsl #2
   122fc:	ldr	r1, [r0, #8]
   12300:	movw	r0, #30946	; 0x78e2
   12304:	movt	r0, #1
   12308:	bl	12540 <sigaltstack@plt+0xcb4>
   1230c:	push	{fp, lr}
   12310:	mov	fp, sp
   12314:	movw	r0, #37300	; 0x91b4
   12318:	movt	r0, #2
   1231c:	ldr	r1, [r0]
   12320:	cmp	r1, #1
   12324:	blt	12334 <sigaltstack@plt+0xaa8>
   12328:	ldr	r0, [r0]
   1232c:	mov	r1, #13
   12330:	bl	116c4 <kill@plt>
   12334:	movw	r0, #38284	; 0x958c
   12338:	movt	r0, #2
   1233c:	ldr	r1, [r0]
   12340:	cmp	r1, #0
   12344:	popeq	{fp, pc}
   12348:	ldr	r0, [r0]
   1234c:	pop	{fp, lr}
   12350:	b	1158c <unlink@plt>
   12354:	push	{r4, r5, r6, sl, fp, lr}
   12358:	add	fp, sp, #16
   1235c:	mov	r4, r0
   12360:	movw	r0, #38292	; 0x9594
   12364:	movt	r0, #2
   12368:	ldr	r1, [r0]
   1236c:	movw	r5, #38288	; 0x9590
   12370:	movt	r5, #2
   12374:	ldr	r2, [r5]
   12378:	cmp	r2, r1
   1237c:	movw	r6, #37296	; 0x91b0
   12380:	movt	r6, #2
   12384:	bne	123b8 <sigaltstack@plt+0xb2c>
   12388:	cmp	r1, #0
   1238c:	beq	123a0 <sigaltstack@plt+0xb14>
   12390:	cmn	r1, #-268435455	; 0xf0000001
   12394:	bcs	123d0 <sigaltstack@plt+0xb44>
   12398:	lsl	r1, r1, #1
   1239c:	b	123a4 <sigaltstack@plt+0xb18>
   123a0:	mov	r1, #16
   123a4:	str	r1, [r0]
   123a8:	ldr	r0, [r6]
   123ac:	lsl	r1, r1, #2
   123b0:	bl	1546c <sigaltstack@plt+0x3be0>
   123b4:	str	r0, [r6]
   123b8:	ldr	r0, [r5]
   123bc:	add	r1, r0, #1
   123c0:	str	r1, [r5]
   123c4:	ldr	r1, [r6]
   123c8:	str	r4, [r1, r0, lsl #2]
   123cc:	pop	{r4, r5, r6, sl, fp, pc}
   123d0:	bl	15794 <sigaltstack@plt+0x3f08>
   123d4:	push	{r4, sl, fp, lr}
   123d8:	add	fp, sp, #8
   123dc:	movw	r4, #37276	; 0x919c
   123e0:	movt	r4, #2
   123e4:	ldr	r0, [r4]
   123e8:	bl	11628 <ferror_unlocked@plt>
   123ec:	cmp	r0, #0
   123f0:	bne	1241c <sigaltstack@plt+0xb90>
   123f4:	ldr	r0, [r4]
   123f8:	bl	11778 <fclose@plt>
   123fc:	cmp	r0, #0
   12400:	popeq	{r4, sl, fp, pc}
   12404:	movw	r1, #31299	; 0x7a43
   12408:	movt	r1, #1
   1240c:	mov	r0, #0
   12410:	mov	r2, #5
   12414:	bl	11574 <dcgettext@plt>
   12418:	bl	125a8 <sigaltstack@plt+0xd1c>
   1241c:	movw	r0, #31286	; 0x7a36
   12420:	movt	r0, #1
   12424:	bl	12624 <sigaltstack@plt+0xd98>
   12428:	push	{r4, r5, fp, lr}
   1242c:	add	fp, sp, #8
   12430:	movw	r1, #31315	; 0x7a53
   12434:	movt	r1, #1
   12438:	mov	r0, #0
   1243c:	mov	r2, #5
   12440:	bl	11574 <dcgettext@plt>
   12444:	movw	r1, #38468	; 0x9644
   12448:	movt	r1, #3
   1244c:	ldr	r1, [r1]
   12450:	bl	114e4 <printf@plt>
   12454:	movw	r1, #31355	; 0x7a7b
   12458:	movt	r1, #1
   1245c:	mov	r0, #0
   12460:	mov	r2, #5
   12464:	bl	11574 <dcgettext@plt>
   12468:	mov	r1, r0
   1246c:	movw	r0, #31350	; 0x7a76
   12470:	movt	r0, #1
   12474:	bl	114e4 <printf@plt>
   12478:	movw	r1, #31414	; 0x7ab6
   1247c:	movt	r1, #1
   12480:	mov	r0, #0
   12484:	mov	r2, #5
   12488:	bl	11574 <dcgettext@plt>
   1248c:	movw	r1, #37276	; 0x919c
   12490:	movt	r1, #2
   12494:	ldr	r1, [r1]
   12498:	bl	114a8 <fputs_unlocked@plt>
   1249c:	movw	r0, #34004	; 0x84d4
   124a0:	movt	r0, #1
   124a4:	add	r5, r0, #4
   124a8:	movw	r1, #31612	; 0x7b7c
   124ac:	movt	r1, #1
   124b0:	movw	r4, #31488	; 0x7b00
   124b4:	movt	r4, #1
   124b8:	b	124d0 <sigaltstack@plt+0xc44>
   124bc:	mov	r0, #10
   124c0:	bl	11874 <putchar_unlocked@plt>
   124c4:	ldr	r1, [r5], #4
   124c8:	cmp	r1, #0
   124cc:	beq	124f8 <sigaltstack@plt+0xc6c>
   124d0:	ldrb	r0, [r1]
   124d4:	cmp	r0, #0
   124d8:	beq	124bc <sigaltstack@plt+0xc30>
   124dc:	mov	r0, #0
   124e0:	mov	r2, #5
   124e4:	bl	11574 <dcgettext@plt>
   124e8:	mov	r1, r0
   124ec:	mov	r0, r4
   124f0:	bl	114e4 <printf@plt>
   124f4:	b	124c4 <sigaltstack@plt+0xc38>
   124f8:	movw	r1, #31502	; 0x7b0e
   124fc:	movt	r1, #1
   12500:	mov	r0, #0
   12504:	mov	r2, #5
   12508:	bl	11574 <dcgettext@plt>
   1250c:	mov	r4, r0
   12510:	movw	r1, #31541	; 0x7b35
   12514:	movt	r1, #1
   12518:	mov	r0, #0
   1251c:	mov	r2, #5
   12520:	bl	11574 <dcgettext@plt>
   12524:	mov	r2, r0
   12528:	movw	r0, #31494	; 0x7b06
   1252c:	movt	r0, #1
   12530:	mov	r1, r4
   12534:	bl	114e4 <printf@plt>
   12538:	pop	{r4, r5, fp, lr}
   1253c:	b	15350 <sigaltstack@plt+0x3ac4>
   12540:	push	{fp, lr}
   12544:	mov	fp, sp
   12548:	cmp	r0, #0
   1254c:	beq	12578 <sigaltstack@plt+0xcec>
   12550:	mov	r4, r1
   12554:	mov	r1, r0
   12558:	mov	r0, #0
   1255c:	mov	r2, #5
   12560:	bl	11574 <dcgettext@plt>
   12564:	mov	r2, r0
   12568:	mov	r0, #0
   1256c:	mov	r1, #0
   12570:	mov	r3, r4
   12574:	bl	11640 <error@plt>
   12578:	movw	r1, #32948	; 0x80b4
   1257c:	movt	r1, #1
   12580:	mov	r0, #0
   12584:	mov	r2, #5
   12588:	bl	11574 <dcgettext@plt>
   1258c:	mov	r2, r0
   12590:	movw	r0, #38468	; 0x9644
   12594:	movt	r0, #3
   12598:	ldr	r3, [r0]
   1259c:	mov	r0, #2
   125a0:	mov	r1, #0
   125a4:	bl	11640 <error@plt>
   125a8:	push	{fp, lr}
   125ac:	mov	fp, sp
   125b0:	mov	r4, r0
   125b4:	bl	1173c <__errno_location@plt>
   125b8:	ldr	r5, [r0]
   125bc:	bl	12a7c <sigaltstack@plt+0x11f0>
   125c0:	movw	r2, #32986	; 0x80da
   125c4:	movt	r2, #1
   125c8:	mov	r0, #0
   125cc:	mov	r1, r5
   125d0:	mov	r3, r4
   125d4:	bl	11640 <error@plt>
   125d8:	bl	12ab8 <sigaltstack@plt+0x122c>
   125dc:	push	{fp, lr}
   125e0:	mov	fp, sp
   125e4:	sub	sp, sp, #104	; 0x68
   125e8:	mov	r1, sp
   125ec:	bl	17808 <sigaltstack@plt+0x5f7c>
   125f0:	mov	r1, r0
   125f4:	mov	r0, #0
   125f8:	cmp	r1, #0
   125fc:	beq	12608 <sigaltstack@plt+0xd7c>
   12600:	mov	sp, fp
   12604:	pop	{fp, pc}
   12608:	ldr	r0, [sp, #16]
   1260c:	and	r0, r0, #61440	; 0xf000
   12610:	sub	r0, r0, #16384	; 0x4000
   12614:	clz	r0, r0
   12618:	lsr	r0, r0, #5
   1261c:	mov	sp, fp
   12620:	pop	{fp, pc}
   12624:	push	{fp, lr}
   12628:	mov	fp, sp
   1262c:	mov	r1, r0
   12630:	mov	r0, #0
   12634:	mov	r2, #5
   12638:	bl	11574 <dcgettext@plt>
   1263c:	mov	r3, r0
   12640:	movw	r2, #32986	; 0x80da
   12644:	movt	r2, #1
   12648:	mov	r0, #0
   1264c:	mov	r1, #0
   12650:	bl	11640 <error@plt>
   12654:	bl	12ab8 <sigaltstack@plt+0x122c>
   12658:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1265c:	add	fp, sp, #28
   12660:	sub	sp, sp, #4
   12664:	mov	r4, r2
   12668:	mov	r6, r1
   1266c:	mov	r5, r0
   12670:	movw	r1, #30993	; 0x7911
   12674:	movt	r1, #1
   12678:	bl	114d8 <strcmp@plt>
   1267c:	cmp	r0, #0
   12680:	beq	12730 <sigaltstack@plt+0xea4>
   12684:	cmp	r6, #0
   12688:	beq	12720 <sigaltstack@plt+0xe94>
   1268c:	mov	r0, r4
   12690:	bl	136e4 <sigaltstack@plt+0x1e58>
   12694:	mov	r8, r0
   12698:	mov	r0, r5
   1269c:	bl	11700 <strlen@plt>
   126a0:	mov	r6, r0
   126a4:	mov	r0, r8
   126a8:	bl	13730 <sigaltstack@plt+0x1ea4>
   126ac:	mov	sl, r0
   126b0:	mov	r0, r5
   126b4:	bl	136e4 <sigaltstack@plt+0x1e58>
   126b8:	ldrb	r0, [r0]
   126bc:	cmp	r0, #0
   126c0:	mov	r7, #0
   126c4:	beq	126d8 <sigaltstack@plt+0xe4c>
   126c8:	add	r0, r6, r5
   126cc:	ldrb	r0, [r0, #-1]
   126d0:	subs	r7, r0, #47	; 0x2f
   126d4:	movwne	r7, #1
   126d8:	add	r0, sl, r6
   126dc:	add	r9, r0, r7
   126e0:	add	r0, r9, #1
   126e4:	bl	15430 <sigaltstack@plt+0x3ba4>
   126e8:	mov	r4, r0
   126ec:	mov	r1, r5
   126f0:	mov	r2, r6
   126f4:	bl	1152c <memcpy@plt>
   126f8:	mov	r0, #47	; 0x2f
   126fc:	mov	r1, r4
   12700:	strb	r0, [r1, r6]!
   12704:	add	r0, r1, r7
   12708:	mov	r1, r8
   1270c:	mov	r2, sl
   12710:	bl	1152c <memcpy@plt>
   12714:	mov	r0, #0
   12718:	strb	r0, [r4, r9]
   1271c:	b	12724 <sigaltstack@plt+0xe98>
   12720:	mov	r4, r5
   12724:	mov	r0, r4
   12728:	sub	sp, fp, #28
   1272c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12730:	movw	r0, #32989	; 0x80dd
   12734:	movt	r0, #1
   12738:	bl	12624 <sigaltstack@plt+0xd98>
   1273c:	push	{r4, sl, fp, lr}
   12740:	add	fp, sp, #8
   12744:	mov	r4, r0
   12748:	bl	117fc <fopen64@plt>
   1274c:	cmp	r0, #0
   12750:	popne	{r4, sl, fp, pc}
   12754:	mov	r0, r4
   12758:	bl	125a8 <sigaltstack@plt+0xd1c>
   1275c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12760:	add	fp, sp, #24
   12764:	movw	r0, #38296	; 0x9598
   12768:	movt	r0, #2
   1276c:	mov	r1, #268435456	; 0x10000000
   12770:	str	r1, [r0, #132]	; 0x84
   12774:	add	r4, r0, #4
   12778:	mov	r0, r4
   1277c:	bl	117c0 <sigemptyset@plt>
   12780:	mov	r5, #0
   12784:	movw	r7, #34108	; 0x853c
   12788:	movt	r7, #1
   1278c:	ldr	r1, [r7, -r5, lsl #2]
   12790:	mov	r0, r4
   12794:	bl	11694 <sigaddset@plt>
   12798:	sub	r5, r5, #1
   1279c:	cmn	r5, #7
   127a0:	bne	1278c <sigaltstack@plt+0xf00>
   127a4:	mov	r5, #0
   127a8:	movw	r4, #37304	; 0x91b8
   127ac:	movt	r4, #2
   127b0:	movw	r8, #11252	; 0x2bf4
   127b4:	movt	r8, #1
   127b8:	ldr	r6, [r7, -r5, lsl #2]
   127bc:	mov	r0, r6
   127c0:	mov	r1, #0
   127c4:	mov	r2, r4
   127c8:	bl	115ec <sigaction@plt>
   127cc:	ldr	r0, [r4]
   127d0:	cmp	r0, #1
   127d4:	movne	r0, r6
   127d8:	movne	r1, r8
   127dc:	blne	12810 <sigaltstack@plt+0xf84>
   127e0:	add	r4, r4, #140	; 0x8c
   127e4:	sub	r5, r5, #1
   127e8:	cmn	r5, #7
   127ec:	bne	127b8 <sigaltstack@plt+0xf2c>
   127f0:	mov	r0, #17
   127f4:	mov	r1, #0
   127f8:	bl	1155c <signal@plt>
   127fc:	movw	r0, #38436	; 0x9624
   12800:	movt	r0, #2
   12804:	mov	r1, #1
   12808:	strb	r1, [r0]
   1280c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12810:	movw	r2, #38296	; 0x9598
   12814:	movt	r2, #2
   12818:	str	r1, [r2]
   1281c:	mov	r1, r2
   12820:	mov	r2, #0
   12824:	b	115ec <sigaction@plt>
   12828:	push	{r4, sl, fp, lr}
   1282c:	add	fp, sp, #8
   12830:	mov	r4, r0
   12834:	str	r1, [r0]
   12838:	movw	r0, #1
   1283c:	movt	r0, #1
   12840:	bl	15430 <sigaltstack@plt+0x3ba4>
   12844:	str	r0, [r4, #4]
   12848:	str	r0, [r4, #8]
   1284c:	str	r0, [r4, #12]
   12850:	mov	r1, #10
   12854:	strb	r1, [r0]
   12858:	pop	{r4, sl, fp, pc}
   1285c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12860:	add	fp, sp, #28
   12864:	sub	sp, sp, #300	; 0x12c
   12868:	str	r3, [sp, #32]
   1286c:	str	r2, [sp, #20]
   12870:	str	r1, [sp, #28]
   12874:	mov	r8, r0
   12878:	add	r6, sp, #40	; 0x28
   1287c:	mov	r1, r6
   12880:	bl	12c20 <sigaltstack@plt+0x1394>
   12884:	cmp	r0, #1
   12888:	blt	12a40 <sigaltstack@plt+0x11b4>
   1288c:	add	r5, r6, #1
   12890:	mov	r7, #1
   12894:	mov	r9, #1
   12898:	str	r5, [sp, #24]
   1289c:	bl	12a7c <sigaltstack@plt+0x11f0>
   128a0:	ldrb	r0, [sp, #40]	; 0x28
   128a4:	cmp	r0, #32
   128a8:	bne	128cc <sigaltstack@plt+0x1040>
   128ac:	mov	r0, r5
   128b0:	bl	11670 <puts@plt>
   128b4:	mov	r0, r8
   128b8:	mov	r1, r6
   128bc:	bl	12c20 <sigaltstack@plt+0x1394>
   128c0:	cmp	r0, #1
   128c4:	bge	1289c <sigaltstack@plt+0x1010>
   128c8:	b	12a40 <sigaltstack@plt+0x11b4>
   128cc:	mov	r4, r8
   128d0:	bl	1173c <__errno_location@plt>
   128d4:	mov	r8, r0
   128d8:	mov	r0, #0
   128dc:	str	r0, [r8]
   128e0:	mov	r0, r5
   128e4:	add	r5, sp, #36	; 0x24
   128e8:	mov	r1, r5
   128ec:	mov	r2, #10
   128f0:	bl	1176c <strtoimax@plt>
   128f4:	mov	sl, r0
   128f8:	mvn	r0, #-2147483648	; 0x80000000
   128fc:	subs	r0, r0, sl
   12900:	rscs	r0, r1, #0
   12904:	bcc	12a38 <sigaltstack@plt+0x11ac>
   12908:	ldr	r0, [r8]
   1290c:	cmp	r0, #0
   12910:	ldreq	r0, [sp, #36]	; 0x24
   12914:	ldrbeq	r1, [r0]
   12918:	cmpeq	r1, #44	; 0x2c
   1291c:	bne	12a38 <sigaltstack@plt+0x11ac>
   12920:	add	r0, r0, #1
   12924:	mov	r1, r5
   12928:	mov	r2, #10
   1292c:	bl	1176c <strtoimax@plt>
   12930:	mov	r6, r0
   12934:	mvn	r0, #-2147483648	; 0x80000000
   12938:	subs	r0, r0, r6
   1293c:	rscs	r0, r1, #0
   12940:	bcc	12a38 <sigaltstack@plt+0x11ac>
   12944:	ldr	r0, [r8]
   12948:	cmp	r0, #0
   1294c:	ldreq	r0, [sp, #36]	; 0x24
   12950:	ldrbeq	r0, [r0]
   12954:	cmpeq	r0, #0
   12958:	bne	12a38 <sigaltstack@plt+0x11ac>
   1295c:	cmp	sl, r6
   12960:	mov	r1, r6
   12964:	movge	r1, sl
   12968:	ldrb	r0, [sp, #40]	; 0x28
   1296c:	cmp	r0, #99	; 0x63
   12970:	beq	129a0 <sigaltstack@plt+0x1114>
   12974:	cmp	r0, #105	; 0x69
   12978:	bne	12a38 <sigaltstack@plt+0x11ac>
   1297c:	mov	r8, r4
   12980:	movw	r0, #37292	; 0x91ac
   12984:	movt	r0, #2
   12988:	ldrb	r0, [r0]
   1298c:	cmp	r0, #1
   12990:	bne	129f4 <sigaltstack@plt+0x1168>
   12994:	mov	r0, r8
   12998:	bl	12ce4 <sigaltstack@plt+0x1458>
   1299c:	b	12a08 <sigaltstack@plt+0x117c>
   129a0:	movw	r0, #37276	; 0x919c
   129a4:	movt	r0, #2
   129a8:	ldr	r2, [r0]
   129ac:	mov	r8, r4
   129b0:	mov	r0, r4
   129b4:	bl	12d44 <sigaltstack@plt+0x14b8>
   129b8:	ldr	r0, [sp, #32]
   129bc:	str	r0, [sp]
   129c0:	ldr	r0, [fp, #8]
   129c4:	stmib	sp, {r0, r9}
   129c8:	str	r6, [sp, #12]
   129cc:	ldr	r0, [fp, #12]
   129d0:	str	r0, [sp, #16]
   129d4:	ldr	r0, [sp, #28]
   129d8:	ldr	r1, [sp, #20]
   129dc:	mov	r2, r7
   129e0:	mov	r3, sl
   129e4:	bl	12de0 <sigaltstack@plt+0x1554>
   129e8:	cmp	r0, #0
   129ec:	bne	12a24 <sigaltstack@plt+0x1198>
   129f0:	b	12a50 <sigaltstack@plt+0x11c4>
   129f4:	movw	r0, #37276	; 0x919c
   129f8:	movt	r0, #2
   129fc:	ldr	r2, [r0]
   12a00:	mov	r0, r8
   12a04:	bl	12d44 <sigaltstack@plt+0x14b8>
   12a08:	ldr	r0, [sp, #28]
   12a0c:	mov	r1, sl
   12a10:	ldr	r2, [fp, #12]
   12a14:	bl	12d44 <sigaltstack@plt+0x14b8>
   12a18:	ldr	r0, [sp, #32]
   12a1c:	mov	r1, r6
   12a20:	bl	12ce4 <sigaltstack@plt+0x1458>
   12a24:	add	r9, r9, r6
   12a28:	add	r7, r7, sl
   12a2c:	add	r6, sp, #40	; 0x28
   12a30:	ldr	r5, [sp, #24]
   12a34:	b	128b4 <sigaltstack@plt+0x1028>
   12a38:	add	r0, sp, #40	; 0x28
   12a3c:	bl	12624 <sigaltstack@plt+0xd98>
   12a40:	cmp	r0, #0
   12a44:	movwne	r0, #1
   12a48:	sub	sp, fp, #28
   12a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a50:	mov	r0, #0
   12a54:	sub	sp, fp, #28
   12a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a5c:	push	{fp, lr}
   12a60:	mov	fp, sp
   12a64:	bl	11778 <fclose@plt>
   12a68:	cmp	r0, #0
   12a6c:	popeq	{fp, pc}
   12a70:	movw	r0, #33031	; 0x8107
   12a74:	movt	r0, #1
   12a78:	bl	125a8 <sigaltstack@plt+0xd1c>
   12a7c:	push	{r4, sl, fp, lr}
   12a80:	add	fp, sp, #8
   12a84:	movw	r0, #38440	; 0x9628
   12a88:	movt	r0, #2
   12a8c:	ldr	r4, [r0]
   12a90:	cmp	r4, #0
   12a94:	popeq	{r4, sl, fp, pc}
   12a98:	mov	r0, #0
   12a9c:	bl	1230c <sigaltstack@plt+0xa80>
   12aa0:	mov	r0, r4
   12aa4:	bl	12b6c <sigaltstack@plt+0x12e0>
   12aa8:	mov	r0, r4
   12aac:	bl	114b4 <raise@plt>
   12ab0:	mov	r0, #2
   12ab4:	bl	116dc <exit@plt>
   12ab8:	push	{fp, lr}
   12abc:	mov	fp, sp
   12ac0:	mov	r0, #0
   12ac4:	bl	1230c <sigaltstack@plt+0xa80>
   12ac8:	mov	r0, #0
   12acc:	bl	12b6c <sigaltstack@plt+0x12e0>
   12ad0:	bl	12a7c <sigaltstack@plt+0x11f0>
   12ad4:	mov	r0, #2
   12ad8:	bl	116dc <exit@plt>
   12adc:	push	{r4, r5, fp, lr}
   12ae0:	add	fp, sp, #8
   12ae4:	sub	sp, sp, #8
   12ae8:	ubfx	r5, r0, #8, #8
   12aec:	tst	r0, #127	; 0x7f
   12af0:	mvnne	r5, #-2147483648	; 0x80000000
   12af4:	cmp	r5, r1
   12af8:	suble	sp, fp, #8
   12afc:	pople	{r4, r5, fp, pc}
   12b00:	mov	r4, r2
   12b04:	cmp	r5, #126	; 0x7e
   12b08:	beq	12b20 <sigaltstack@plt+0x1294>
   12b0c:	cmp	r5, #127	; 0x7f
   12b10:	bne	12b2c <sigaltstack@plt+0x12a0>
   12b14:	movw	r1, #33083	; 0x813b
   12b18:	movt	r1, #1
   12b1c:	b	12b44 <sigaltstack@plt+0x12b8>
   12b20:	movw	r1, #33038	; 0x810e
   12b24:	movt	r1, #1
   12b28:	b	12b44 <sigaltstack@plt+0x12b8>
   12b2c:	movw	r0, #33117	; 0x815d
   12b30:	movt	r0, #1
   12b34:	movw	r1, #33148	; 0x817c
   12b38:	movt	r1, #1
   12b3c:	cmn	r5, #-2147483647	; 0x80000001
   12b40:	moveq	r1, r0
   12b44:	mov	r0, #0
   12b48:	mov	r2, #5
   12b4c:	bl	11574 <dcgettext@plt>
   12b50:	mov	r2, r0
   12b54:	str	r5, [sp]
   12b58:	mov	r0, #0
   12b5c:	mov	r1, #0
   12b60:	mov	r3, r4
   12b64:	bl	11640 <error@plt>
   12b68:	bl	12ab8 <sigaltstack@plt+0x122c>
   12b6c:	push	{r4, r5, r6, r7, fp, lr}
   12b70:	add	fp, sp, #16
   12b74:	mov	r4, r0
   12b78:	movw	r0, #38436	; 0x9624
   12b7c:	movt	r0, #2
   12b80:	ldrb	r0, [r0]
   12b84:	cmp	r0, #1
   12b88:	popne	{r4, r5, r6, r7, fp, pc}
   12b8c:	mov	r6, #0
   12b90:	movw	r5, #37304	; 0x91b8
   12b94:	movt	r5, #2
   12b98:	movw	r7, #34108	; 0x853c
   12b9c:	movt	r7, #1
   12ba0:	cmp	r4, #0
   12ba4:	bne	12bc4 <sigaltstack@plt+0x1338>
   12ba8:	b	12bd0 <sigaltstack@plt+0x1344>
   12bac:	add	r5, r5, #140	; 0x8c
   12bb0:	sub	r6, r6, #1
   12bb4:	cmn	r6, #7
   12bb8:	beq	12bf0 <sigaltstack@plt+0x1364>
   12bbc:	cmp	r4, #0
   12bc0:	beq	12bd0 <sigaltstack@plt+0x1344>
   12bc4:	ldr	r0, [r7, -r6, lsl #2]
   12bc8:	cmp	r0, r4
   12bcc:	bne	12bac <sigaltstack@plt+0x1320>
   12bd0:	ldr	r0, [r5]
   12bd4:	cmp	r0, #1
   12bd8:	beq	12bac <sigaltstack@plt+0x1320>
   12bdc:	ldr	r0, [r7, -r6, lsl #2]
   12be0:	mov	r1, r5
   12be4:	mov	r2, #0
   12be8:	bl	115ec <sigaction@plt>
   12bec:	b	12bac <sigaltstack@plt+0x1320>
   12bf0:	pop	{r4, r5, r6, r7, fp, pc}
   12bf4:	cmp	r0, #2
   12bf8:	bne	12c10 <sigaltstack@plt+0x1384>
   12bfc:	movw	r1, #38437	; 0x9625
   12c00:	movt	r1, #2
   12c04:	ldrb	r1, [r1]
   12c08:	cmp	r1, #0
   12c0c:	bxne	lr
   12c10:	movw	r1, #38440	; 0x9628
   12c14:	movt	r1, #2
   12c18:	str	r0, [r1]
   12c1c:	bx	lr
   12c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c24:	add	fp, sp, #28
   12c28:	sub	sp, sp, #4
   12c2c:	mov	sl, r1
   12c30:	mov	r9, r0
   12c34:	ldr	r4, [r0, #4]
   12c38:	mov	r0, r4
   12c3c:	mov	r1, #10
   12c40:	bl	115c8 <rawmemchr@plt>
   12c44:	sub	r7, r0, r4
   12c48:	mov	r8, #0
   12c4c:	cmp	r7, #255	; 0xff
   12c50:	bhi	12cd8 <sigaltstack@plt+0x144c>
   12c54:	mov	r5, r0
   12c58:	mov	r6, #256	; 0x100
   12c5c:	mov	r0, sl
   12c60:	mov	r1, r4
   12c64:	mov	r2, r7
   12c68:	bl	1152c <memcpy@plt>
   12c6c:	ldr	r0, [r9, #12]
   12c70:	cmp	r5, r0
   12c74:	bcc	12cb4 <sigaltstack@plt+0x1428>
   12c78:	mov	r0, r9
   12c7c:	bl	13488 <sigaltstack@plt+0x1bfc>
   12c80:	cmp	r0, #0
   12c84:	beq	12ccc <sigaltstack@plt+0x1440>
   12c88:	sub	r6, r6, r7
   12c8c:	add	sl, sl, r7
   12c90:	ldr	r4, [r9, #4]
   12c94:	mov	r0, r4
   12c98:	mov	r1, #10
   12c9c:	bl	115c8 <rawmemchr@plt>
   12ca0:	mov	r5, r0
   12ca4:	sub	r7, r0, r4
   12ca8:	cmp	r6, r7
   12cac:	bhi	12c5c <sigaltstack@plt+0x13d0>
   12cb0:	b	12cd8 <sigaltstack@plt+0x144c>
   12cb4:	mov	r0, #0
   12cb8:	strb	r0, [sl, r7]
   12cbc:	add	r0, r5, #1
   12cc0:	str	r0, [r9, #4]
   12cc4:	mov	r8, #1
   12cc8:	b	12cd8 <sigaltstack@plt+0x144c>
   12ccc:	mov	r8, #0
   12cd0:	cmp	r7, #0
   12cd4:	mvneq	r8, #0
   12cd8:	mov	r0, r8
   12cdc:	sub	sp, fp, #28
   12ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ce4:	push	{r4, r5, fp, lr}
   12ce8:	add	fp, sp, #8
   12cec:	cmp	r1, #0
   12cf0:	popeq	{r4, r5, fp, pc}
   12cf4:	mov	r4, r1
   12cf8:	mov	r5, r0
   12cfc:	b	12d14 <sigaltstack@plt+0x1488>
   12d00:	add	r0, r0, #1
   12d04:	str	r0, [r5, #4]
   12d08:	sub	r4, r4, #1
   12d0c:	cmp	r4, #0
   12d10:	beq	12d40 <sigaltstack@plt+0x14b4>
   12d14:	ldr	r0, [r5, #4]
   12d18:	mov	r1, #10
   12d1c:	bl	115c8 <rawmemchr@plt>
   12d20:	str	r0, [r5, #4]
   12d24:	ldr	r1, [r5, #12]
   12d28:	cmp	r0, r1
   12d2c:	bne	12d00 <sigaltstack@plt+0x1474>
   12d30:	mov	r0, r5
   12d34:	bl	13488 <sigaltstack@plt+0x1bfc>
   12d38:	cmp	r0, #0
   12d3c:	bne	12d0c <sigaltstack@plt+0x1480>
   12d40:	pop	{r4, r5, fp, pc}
   12d44:	push	{r4, r5, r6, r7, fp, lr}
   12d48:	add	fp, sp, #16
   12d4c:	mov	r4, r2
   12d50:	mov	r5, r0
   12d54:	ldr	r7, [r0, #4]
   12d58:	cmp	r1, #0
   12d5c:	beq	12dc4 <sigaltstack@plt+0x1538>
   12d60:	mov	r6, r1
   12d64:	b	12d7c <sigaltstack@plt+0x14f0>
   12d68:	add	r0, r0, #1
   12d6c:	str	r0, [r5, #4]
   12d70:	sub	r6, r6, #1
   12d74:	cmp	r6, #0
   12d78:	beq	12dc4 <sigaltstack@plt+0x1538>
   12d7c:	ldr	r0, [r5, #4]
   12d80:	mov	r1, #10
   12d84:	bl	115c8 <rawmemchr@plt>
   12d88:	str	r0, [r5, #4]
   12d8c:	ldr	r1, [r5, #12]
   12d90:	cmp	r0, r1
   12d94:	bne	12d68 <sigaltstack@plt+0x14dc>
   12d98:	sub	r1, r1, r7
   12d9c:	mov	r0, r7
   12da0:	mov	r2, r4
   12da4:	bl	13520 <sigaltstack@plt+0x1c94>
   12da8:	mov	r0, r5
   12dac:	bl	13488 <sigaltstack@plt+0x1bfc>
   12db0:	cmp	r0, #0
   12db4:	beq	12ddc <sigaltstack@plt+0x1550>
   12db8:	ldr	r7, [r5, #4]
   12dbc:	cmp	r6, #0
   12dc0:	bne	12d7c <sigaltstack@plt+0x14f0>
   12dc4:	ldr	r0, [r5, #4]
   12dc8:	sub	r1, r0, r7
   12dcc:	mov	r0, r7
   12dd0:	mov	r2, r4
   12dd4:	pop	{r4, r5, r6, r7, fp, lr}
   12dd8:	b	13520 <sigaltstack@plt+0x1c94>
   12ddc:	pop	{r4, r5, r6, r7, fp, pc}
   12de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de4:	add	fp, sp, #28
   12de8:	sub	sp, sp, #28
   12dec:	sub	sp, sp, #65536	; 0x10000
   12df0:	str	r3, [sp, #16]
   12df4:	stmib	sp, {r1, r2}
   12df8:	str	r0, [sp, #12]
   12dfc:	mov	r0, #37	; 0x25
   12e00:	bl	11874 <putchar_unlocked@plt>
   12e04:	cmp	r0, #37	; 0x25
   12e08:	bne	13420 <sigaltstack@plt+0x1b94>
   12e0c:	movw	r5, #37276	; 0x919c
   12e10:	movt	r5, #2
   12e14:	movw	r6, #37272	; 0x9198
   12e18:	movt	r6, #2
   12e1c:	movw	r7, #37292	; 0x91ac
   12e20:	movt	r7, #2
   12e24:	mov	r4, #1
   12e28:	movw	sl, #1029	; 0x405
   12e2c:	movt	sl, #1
   12e30:	b	12e58 <sigaltstack@plt+0x15cc>
   12e34:	cmn	r0, #1
   12e38:	beq	12fa8 <sigaltstack@plt+0x171c>
   12e3c:	cmp	r0, #10
   12e40:	blne	13638 <sigaltstack@plt+0x1dac>
   12e44:	bl	13604 <sigaltstack@plt+0x1d78>
   12e48:	mov	r0, #37	; 0x25
   12e4c:	bl	11874 <putchar_unlocked@plt>
   12e50:	cmp	r0, #37	; 0x25
   12e54:	bne	13420 <sigaltstack@plt+0x1b94>
   12e58:	ldr	r0, [r5]
   12e5c:	bl	1355c <sigaltstack@plt+0x1cd0>
   12e60:	bl	13588 <sigaltstack@plt+0x1cfc>
   12e64:	sub	r9, r0, #49	; 0x31
   12e68:	cmp	r9, #69	; 0x45
   12e6c:	bhi	12e34 <sigaltstack@plt+0x15a8>
   12e70:	add	r0, pc, #0
   12e74:	ldr	pc, [r0, r9, lsl #2]
   12e78:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12e7c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12e80:			; <UNDEFINED> instruction: 0x00012fb8
   12e84:			; <UNDEFINED> instruction: 0x00012fb8
   12e88:			; <UNDEFINED> instruction: 0x00012fb8
   12e8c:			; <UNDEFINED> instruction: 0x00012fb8
   12e90:			; <UNDEFINED> instruction: 0x00012fb8
   12e94:			; <UNDEFINED> instruction: 0x00012fb8
   12e98:			; <UNDEFINED> instruction: 0x00012fb8
   12e9c:			; <UNDEFINED> instruction: 0x00012fb8
   12ea0:			; <UNDEFINED> instruction: 0x00012fb8
   12ea4:			; <UNDEFINED> instruction: 0x00012fb8
   12ea8:			; <UNDEFINED> instruction: 0x00012fb8
   12eac:			; <UNDEFINED> instruction: 0x00012fb8
   12eb0:			; <UNDEFINED> instruction: 0x00012fb8
   12eb4:			; <UNDEFINED> instruction: 0x00012fb8
   12eb8:			; <UNDEFINED> instruction: 0x00012fb8
   12ebc:			; <UNDEFINED> instruction: 0x00012fb8
   12ec0:			; <UNDEFINED> instruction: 0x00012fb8
   12ec4:			; <UNDEFINED> instruction: 0x00012fb8
   12ec8:			; <UNDEFINED> instruction: 0x00012fb8
   12ecc:			; <UNDEFINED> instruction: 0x00012fb8
   12ed0:			; <UNDEFINED> instruction: 0x00012fb8
   12ed4:			; <UNDEFINED> instruction: 0x00012fb8
   12ed8:			; <UNDEFINED> instruction: 0x00012fb8
   12edc:			; <UNDEFINED> instruction: 0x00012fb8
   12ee0:			; <UNDEFINED> instruction: 0x00012fb8
   12ee4:			; <UNDEFINED> instruction: 0x00012fb8
   12ee8:			; <UNDEFINED> instruction: 0x00012fb8
   12eec:			; <UNDEFINED> instruction: 0x00012fb8
   12ef0:			; <UNDEFINED> instruction: 0x00012fb8
   12ef4:			; <UNDEFINED> instruction: 0x00012fb8
   12ef8:			; <UNDEFINED> instruction: 0x00012fb8
   12efc:			; <UNDEFINED> instruction: 0x00012fb8
   12f00:			; <UNDEFINED> instruction: 0x00012fb8
   12f04:			; <UNDEFINED> instruction: 0x00012fb8
   12f08:			; <UNDEFINED> instruction: 0x00012fb8
   12f0c:			; <UNDEFINED> instruction: 0x00012fb8
   12f10:			; <UNDEFINED> instruction: 0x00012fb8
   12f14:			; <UNDEFINED> instruction: 0x00012fb8
   12f18:			; <UNDEFINED> instruction: 0x00012fb8
   12f1c:			; <UNDEFINED> instruction: 0x00012fb8
   12f20:			; <UNDEFINED> instruction: 0x00012fb8
   12f24:			; <UNDEFINED> instruction: 0x00012fb8
   12f28:			; <UNDEFINED> instruction: 0x00012fb8
   12f2c:			; <UNDEFINED> instruction: 0x00012fb8
   12f30:			; <UNDEFINED> instruction: 0x00012fb8
   12f34:			; <UNDEFINED> instruction: 0x00012fb8
   12f38:			; <UNDEFINED> instruction: 0x00012fb8
   12f3c:			; <UNDEFINED> instruction: 0x00012fb8
   12f40:			; <UNDEFINED> instruction: 0x00012fb8
   12f44:			; <UNDEFINED> instruction: 0x00012fb8
   12f48:	andeq	r2, r1, r0, asr #31
   12f4c:			; <UNDEFINED> instruction: 0x00012fb8
   12f50:			; <UNDEFINED> instruction: 0x00012fb8
   12f54:			; <UNDEFINED> instruction: 0x00012fb8
   12f58:			; <UNDEFINED> instruction: 0x00012fb8
   12f5c:			; <UNDEFINED> instruction: 0x00012fb8
   12f60:			; <UNDEFINED> instruction: 0x00012fb8
   12f64:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f68:			; <UNDEFINED> instruction: 0x00012fb8
   12f6c:			; <UNDEFINED> instruction: 0x00012fb8
   12f70:			; <UNDEFINED> instruction: 0x00012fb8
   12f74:			; <UNDEFINED> instruction: 0x00012fb8
   12f78:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f7c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f80:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f84:			; <UNDEFINED> instruction: 0x00012fb8
   12f88:			; <UNDEFINED> instruction: 0x00012fb8
   12f8c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f90:	bl	13588 <sigaltstack@plt+0x1cfc>
   12f94:	cmp	r0, #10
   12f98:	beq	12ff8 <sigaltstack@plt+0x176c>
   12f9c:	bl	13604 <sigaltstack@plt+0x1d78>
   12fa0:	bl	13638 <sigaltstack@plt+0x1dac>
   12fa4:	b	12e48 <sigaltstack@plt+0x15bc>
   12fa8:	ldr	r0, [r6]
   12fac:	bl	1185c <feof_unlocked@plt>
   12fb0:	cmp	r0, #0
   12fb4:	bne	13164 <sigaltstack@plt+0x18d8>
   12fb8:	bl	13638 <sigaltstack@plt+0x1dac>
   12fbc:	b	12e44 <sigaltstack@plt+0x15b8>
   12fc0:	bl	13588 <sigaltstack@plt+0x1cfc>
   12fc4:	mov	r8, r0
   12fc8:	sub	r0, r0, #98	; 0x62
   12fcc:	cmp	r0, #16
   12fd0:	bhi	12fdc <sigaltstack@plt+0x1750>
   12fd4:	tst	sl, r4, lsl r0
   12fd8:	bne	12fe8 <sigaltstack@plt+0x175c>
   12fdc:	sub	r0, r8, #49	; 0x31
   12fe0:	cmp	r0, #2
   12fe4:	bcs	13134 <sigaltstack@plt+0x18a8>
   12fe8:	bl	13588 <sigaltstack@plt+0x1cfc>
   12fec:	cmp	r0, #10
   12ff0:	bne	12f9c <sigaltstack@plt+0x1710>
   12ff4:	b	1313c <sigaltstack@plt+0x18b0>
   12ff8:	cmp	r9, #69	; 0x45
   12ffc:	bhi	12e44 <sigaltstack@plt+0x15b8>
   13000:	add	r0, pc, #0
   13004:	ldr	pc, [r0, r9, lsl #2]
   13008:	andeq	r3, r1, r8, lsr r2
   1300c:	andeq	r3, r1, r4, asr r2
   13010:	andeq	r2, r1, r4, asr #28
   13014:	andeq	r2, r1, r4, asr #28
   13018:	andeq	r2, r1, r4, asr #28
   1301c:	andeq	r2, r1, r4, asr #28
   13020:	andeq	r2, r1, r4, asr #28
   13024:	andeq	r2, r1, r4, asr #28
   13028:	andeq	r2, r1, r4, asr #28
   1302c:	andeq	r2, r1, r4, asr #28
   13030:	andeq	r2, r1, r4, asr #28
   13034:	andeq	r2, r1, r4, asr #28
   13038:	andeq	r2, r1, r4, asr #28
   1303c:	andeq	r2, r1, r4, asr #28
   13040:	andeq	r2, r1, r4, asr #28
   13044:	andeq	r2, r1, r4, asr #28
   13048:	andeq	r2, r1, r4, asr #28
   1304c:	andeq	r2, r1, r4, asr #28
   13050:	andeq	r2, r1, r4, asr #28
   13054:	andeq	r2, r1, r4, asr #28
   13058:	andeq	r2, r1, r4, asr #28
   1305c:	andeq	r2, r1, r4, asr #28
   13060:	andeq	r2, r1, r4, asr #28
   13064:	andeq	r2, r1, r4, asr #28
   13068:	andeq	r2, r1, r4, asr #28
   1306c:	andeq	r2, r1, r4, asr #28
   13070:	andeq	r2, r1, r4, asr #28
   13074:	andeq	r2, r1, r4, asr #28
   13078:	andeq	r2, r1, r4, asr #28
   1307c:	andeq	r2, r1, r4, asr #28
   13080:	andeq	r2, r1, r4, asr #28
   13084:	andeq	r2, r1, r4, asr #28
   13088:	andeq	r2, r1, r4, asr #28
   1308c:	andeq	r2, r1, r4, asr #28
   13090:	andeq	r2, r1, r4, asr #28
   13094:	andeq	r2, r1, r4, asr #28
   13098:	andeq	r2, r1, r4, asr #28
   1309c:	andeq	r2, r1, r4, asr #28
   130a0:	andeq	r2, r1, r4, asr #28
   130a4:	andeq	r2, r1, r4, asr #28
   130a8:	andeq	r2, r1, r4, asr #28
   130ac:	andeq	r2, r1, r4, asr #28
   130b0:	andeq	r2, r1, r4, asr #28
   130b4:	andeq	r2, r1, r4, asr #28
   130b8:	andeq	r2, r1, r4, asr #28
   130bc:	andeq	r2, r1, r4, asr #28
   130c0:	andeq	r2, r1, r4, asr #28
   130c4:	andeq	r2, r1, r4, asr #28
   130c8:	andeq	r2, r1, r4, asr #28
   130cc:	andeq	r2, r1, r4, asr #28
   130d0:	andeq	r2, r1, r4, asr #28
   130d4:	andeq	r2, r1, r4, asr #28
   130d8:	andeq	r3, r1, ip, lsr r1
   130dc:	andeq	r2, r1, r4, asr #28
   130e0:	andeq	r2, r1, r4, asr #28
   130e4:	andeq	r2, r1, r4, asr #28
   130e8:	andeq	r2, r1, r4, asr #28
   130ec:	andeq	r2, r1, r4, asr #28
   130f0:	andeq	r2, r1, r4, asr #28
   130f4:	andeq	r3, r1, r8, lsr r2
   130f8:	andeq	r2, r1, r4, asr #28
   130fc:	andeq	r2, r1, r4, asr #28
   13100:	andeq	r2, r1, r4, asr #28
   13104:	andeq	r2, r1, r4, asr #28
   13108:	andeq	r3, r1, r4, ror #2
   1310c:	andeq	r3, r1, r4, asr r2
   13110:	andeq	r3, r1, r0, lsr #2
   13114:	andeq	r2, r1, r4, asr #28
   13118:	andeq	r2, r1, r4, asr #28
   1311c:	andeq	r3, r1, r8, lsr #2
   13120:	strb	r4, [r7]
   13124:	b	12e48 <sigaltstack@plt+0x15bc>
   13128:	mov	r0, #0
   1312c:	strb	r0, [r7]
   13130:	b	12e48 <sigaltstack@plt+0x15bc>
   13134:	cmp	r8, #10
   13138:	bne	12f9c <sigaltstack@plt+0x1710>
   1313c:	movw	r9, #38284	; 0x958c
   13140:	movt	r9, #2
   13144:	ldr	r0, [r9]
   13148:	cmp	r0, #0
   1314c:	beq	13170 <sigaltstack@plt+0x18e4>
   13150:	ldr	r0, [r9]
   13154:	movw	r1, #30884	; 0x78a4
   13158:	movt	r1, #1
   1315c:	bl	117fc <fopen64@plt>
   13160:	b	13188 <sigaltstack@plt+0x18fc>
   13164:	mov	r0, #0
   13168:	sub	sp, fp, #28
   1316c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13170:	bl	13680 <sigaltstack@plt+0x1df4>
   13174:	cmn	r0, #1
   13178:	ble	1347c <sigaltstack@plt+0x1bf0>
   1317c:	movw	r1, #30884	; 0x78a4
   13180:	movt	r1, #1
   13184:	bl	11490 <fdopen@plt>
   13188:	ldr	r4, [fp, #20]
   1318c:	ldr	r5, [sp, #16]
   13190:	movw	sl, #38444	; 0x962c
   13194:	movt	sl, #2
   13198:	str	r0, [sl]
   1319c:	cmp	r0, #0
   131a0:	beq	13444 <sigaltstack@plt+0x1bb8>
   131a4:	cmp	r8, #99	; 0x63
   131a8:	bgt	131bc <sigaltstack@plt+0x1930>
   131ac:	cmp	r8, #49	; 0x31
   131b0:	cmpne	r8, #98	; 0x62
   131b4:	beq	13294 <sigaltstack@plt+0x1a08>
   131b8:	b	131ec <sigaltstack@plt+0x1960>
   131bc:	cmp	r8, #108	; 0x6c
   131c0:	beq	13294 <sigaltstack@plt+0x1a08>
   131c4:	cmp	r8, #100	; 0x64
   131c8:	bne	131ec <sigaltstack@plt+0x1960>
   131cc:	cmp	r5, #0
   131d0:	beq	13294 <sigaltstack@plt+0x1a08>
   131d4:	cmp	r5, #1
   131d8:	bne	13274 <sigaltstack@plt+0x19e8>
   131dc:	movw	r1, #33216	; 0x81c0
   131e0:	movt	r1, #1
   131e4:	ldmib	sp, {r2, r3}
   131e8:	b	13290 <sigaltstack@plt+0x1a04>
   131ec:	ldr	r0, [sp, #12]
   131f0:	mov	r1, r5
   131f4:	bl	12ce4 <sigaltstack@plt+0x1458>
   131f8:	cmp	r8, #99	; 0x63
   131fc:	ble	132ac <sigaltstack@plt+0x1a20>
   13200:	cmp	r8, #114	; 0x72
   13204:	beq	132b8 <sigaltstack@plt+0x1a2c>
   13208:	cmp	r8, #100	; 0x64
   1320c:	bne	133ec <sigaltstack@plt+0x1b60>
   13210:	cmp	r4, #0
   13214:	beq	132b8 <sigaltstack@plt+0x1a2c>
   13218:	ldr	r0, [sl]
   1321c:	cmp	r4, #1
   13220:	bne	133fc <sigaltstack@plt+0x1b70>
   13224:	movw	r1, #33244	; 0x81dc
   13228:	movt	r1, #1
   1322c:	ldr	r2, [fp, #12]
   13230:	ldr	r3, [fp, #16]
   13234:	b	13418 <sigaltstack@plt+0x1b8c>
   13238:	ldr	r0, [sp, #12]
   1323c:	ldr	r1, [sp, #16]
   13240:	ldr	r2, [fp, #24]
   13244:	bl	12d44 <sigaltstack@plt+0x14b8>
   13248:	ldr	r0, [fp, #8]
   1324c:	ldr	r1, [fp, #20]
   13250:	b	1326c <sigaltstack@plt+0x19e0>
   13254:	ldr	r0, [fp, #8]
   13258:	ldr	r1, [fp, #20]
   1325c:	ldr	r2, [fp, #24]
   13260:	bl	12d44 <sigaltstack@plt+0x14b8>
   13264:	ldr	r0, [sp, #12]
   13268:	ldr	r1, [sp, #16]
   1326c:	bl	12ce4 <sigaltstack@plt+0x1458>
   13270:	b	133e0 <sigaltstack@plt+0x1b54>
   13274:	ldr	r3, [sp, #8]
   13278:	add	r1, r3, r5
   1327c:	sub	r1, r1, #1
   13280:	str	r1, [sp]
   13284:	movw	r1, #33228	; 0x81cc
   13288:	movt	r1, #1
   1328c:	ldr	r2, [sp, #4]
   13290:	bl	11724 <fprintf@plt>
   13294:	ldr	r2, [sl]
   13298:	ldr	r0, [sp, #12]
   1329c:	mov	r1, r5
   132a0:	bl	12d44 <sigaltstack@plt+0x14b8>
   132a4:	cmp	r8, #99	; 0x63
   132a8:	bgt	13200 <sigaltstack@plt+0x1974>
   132ac:	cmp	r8, #50	; 0x32
   132b0:	cmpne	r8, #98	; 0x62
   132b4:	bne	133ec <sigaltstack@plt+0x1b60>
   132b8:	ldr	r2, [sl]
   132bc:	ldr	r0, [fp, #8]
   132c0:	mov	r1, r4
   132c4:	bl	12d44 <sigaltstack@plt+0x14b8>
   132c8:	ldr	r0, [sl]
   132cc:	bl	12a5c <sigaltstack@plt+0x11d0>
   132d0:	movw	r8, #38437	; 0x9625
   132d4:	movt	r8, #2
   132d8:	mov	r0, #1
   132dc:	strb	r0, [r8]
   132e0:	bl	12a7c <sigaltstack@plt+0x11f0>
   132e4:	mov	r0, #0
   132e8:	str	r0, [sp, #28]
   132ec:	movw	r4, #37232	; 0x9170
   132f0:	movt	r4, #2
   132f4:	ldr	r0, [r4]
   132f8:	str	r0, [sp, #20]
   132fc:	ldr	r0, [r9]
   13300:	str	r0, [sp, #24]
   13304:	bl	117cc <fork@plt>
   13308:	cmp	r0, #0
   1330c:	beq	1344c <sigaltstack@plt+0x1bc0>
   13310:	bmi	13470 <sigaltstack@plt+0x1be4>
   13314:	mov	r5, r0
   13318:	sub	r1, fp, #36	; 0x24
   1331c:	mov	r2, #0
   13320:	bl	11610 <waitpid@plt>
   13324:	cmn	r0, #1
   13328:	bgt	13360 <sigaltstack@plt+0x1ad4>
   1332c:	bl	1173c <__errno_location@plt>
   13330:	mov	r6, r0
   13334:	sub	r7, fp, #36	; 0x24
   13338:	ldr	r0, [r6]
   1333c:	cmp	r0, #4
   13340:	bne	13438 <sigaltstack@plt+0x1bac>
   13344:	bl	12a7c <sigaltstack@plt+0x11f0>
   13348:	mov	r0, r5
   1334c:	mov	r1, r7
   13350:	mov	r2, #0
   13354:	bl	11610 <waitpid@plt>
   13358:	cmp	r0, #0
   1335c:	bmi	13338 <sigaltstack@plt+0x1aac>
   13360:	mov	r0, #0
   13364:	strb	r0, [r8]
   13368:	ldr	r2, [r4]
   1336c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13370:	mov	r1, #0
   13374:	bl	12adc <sigaltstack@plt+0x1250>
   13378:	ldr	r0, [r9]
   1337c:	movw	r1, #30907	; 0x78bb
   13380:	movt	r1, #1
   13384:	bl	1273c <sigaltstack@plt+0xeb0>
   13388:	mov	r1, r0
   1338c:	str	r0, [sl]
   13390:	add	r0, sp, #20
   13394:	bl	134c8 <sigaltstack@plt+0x1c3c>
   13398:	cmp	r0, #0
   1339c:	ldr	r4, [fp, #24]
   133a0:	beq	133d8 <sigaltstack@plt+0x1b4c>
   133a4:	mov	r6, r0
   133a8:	add	r5, sp, #20
   133ac:	bl	12a7c <sigaltstack@plt+0x11f0>
   133b0:	mov	r0, r5
   133b4:	mov	r1, r6
   133b8:	mov	r2, r4
   133bc:	bl	13520 <sigaltstack@plt+0x1c94>
   133c0:	ldr	r1, [sl]
   133c4:	mov	r0, r5
   133c8:	bl	134c8 <sigaltstack@plt+0x1c3c>
   133cc:	mov	r6, r0
   133d0:	cmp	r0, #0
   133d4:	bne	133ac <sigaltstack@plt+0x1b20>
   133d8:	ldr	r0, [sl]
   133dc:	bl	12a5c <sigaltstack@plt+0x11d0>
   133e0:	mov	r0, #1
   133e4:	sub	sp, fp, #28
   133e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133ec:	ldr	r0, [fp, #8]
   133f0:	mov	r1, r4
   133f4:	bl	12ce4 <sigaltstack@plt+0x1458>
   133f8:	b	132c8 <sigaltstack@plt+0x1a3c>
   133fc:	ldr	r3, [fp, #16]
   13400:	add	r1, r3, r4
   13404:	sub	r1, r1, #1
   13408:	str	r1, [sp]
   1340c:	movw	r1, #33256	; 0x81e8
   13410:	movt	r1, #1
   13414:	ldr	r2, [fp, #12]
   13418:	bl	11724 <fprintf@plt>
   1341c:	b	132b8 <sigaltstack@plt+0x1a2c>
   13420:	movw	r1, #31286	; 0x7a36
   13424:	movt	r1, #1
   13428:	mov	r0, #0
   1342c:	mov	r2, #5
   13430:	bl	11574 <dcgettext@plt>
   13434:	bl	125a8 <sigaltstack@plt+0xd1c>
   13438:	movw	r0, #31075	; 0x7963
   1343c:	movt	r0, #1
   13440:	bl	125a8 <sigaltstack@plt+0xd1c>
   13444:	ldr	r0, [r9]
   13448:	bl	125a8 <sigaltstack@plt+0xd1c>
   1344c:	ldr	r0, [r4]
   13450:	add	r1, sp, #20
   13454:	bl	11538 <execvp@plt>
   13458:	bl	1173c <__errno_location@plt>
   1345c:	ldr	r1, [r0]
   13460:	mov	r0, #126	; 0x7e
   13464:	cmp	r1, #2
   13468:	movweq	r0, #127	; 0x7f
   1346c:	bl	11520 <_exit@plt>
   13470:	movw	r0, #31063	; 0x7957
   13474:	movt	r0, #1
   13478:	bl	125a8 <sigaltstack@plt+0xd1c>
   1347c:	movw	r0, #33208	; 0x81b8
   13480:	movt	r0, #1
   13484:	bl	125a8 <sigaltstack@plt+0xd1c>
   13488:	push	{r4, r5, fp, lr}
   1348c:	add	fp, sp, #8
   13490:	mov	r4, r0
   13494:	ldr	r1, [r0]
   13498:	ldr	r0, [r0, #8]
   1349c:	bl	134c8 <sigaltstack@plt+0x1c3c>
   134a0:	mov	r5, r0
   134a4:	ldr	r0, [r4, #8]
   134a8:	str	r0, [r4, #4]
   134ac:	add	r1, r0, r5
   134b0:	str	r1, [r4, #12]
   134b4:	mov	r1, #10
   134b8:	strb	r1, [r0, r5]
   134bc:	bl	12a7c <sigaltstack@plt+0x11f0>
   134c0:	mov	r0, r5
   134c4:	pop	{r4, r5, fp, pc}
   134c8:	push	{r4, r5, fp, lr}
   134cc:	add	fp, sp, #8
   134d0:	mov	r4, r1
   134d4:	mov	r1, #1
   134d8:	mov	r2, #65536	; 0x10000
   134dc:	mov	r3, r4
   134e0:	bl	11820 <fread_unlocked@plt>
   134e4:	mov	r5, r0
   134e8:	cmp	r0, #0
   134ec:	bne	13500 <sigaltstack@plt+0x1c74>
   134f0:	mov	r0, r4
   134f4:	bl	11628 <ferror_unlocked@plt>
   134f8:	cmp	r0, #0
   134fc:	bne	13508 <sigaltstack@plt+0x1c7c>
   13500:	mov	r0, r5
   13504:	pop	{r4, r5, fp, pc}
   13508:	movw	r1, #33196	; 0x81ac
   1350c:	movt	r1, #1
   13510:	mov	r0, #0
   13514:	mov	r2, #5
   13518:	bl	11574 <dcgettext@plt>
   1351c:	bl	125a8 <sigaltstack@plt+0xd1c>
   13520:	push	{r4, sl, fp, lr}
   13524:	add	fp, sp, #8
   13528:	mov	r3, r2
   1352c:	mov	r4, r1
   13530:	mov	r1, #1
   13534:	mov	r2, r4
   13538:	bl	11568 <fwrite_unlocked@plt>
   1353c:	cmp	r0, r4
   13540:	popeq	{r4, sl, fp, pc}
   13544:	movw	r1, #31286	; 0x7a36
   13548:	movt	r1, #1
   1354c:	mov	r0, #0
   13550:	mov	r2, #5
   13554:	bl	11574 <dcgettext@plt>
   13558:	bl	125a8 <sigaltstack@plt+0xd1c>
   1355c:	push	{fp, lr}
   13560:	mov	fp, sp
   13564:	bl	115e0 <fflush_unlocked@plt>
   13568:	cmp	r0, #0
   1356c:	popeq	{fp, pc}
   13570:	movw	r1, #31286	; 0x7a36
   13574:	movt	r1, #1
   13578:	mov	r0, #0
   1357c:	mov	r2, #5
   13580:	bl	11574 <dcgettext@plt>
   13584:	bl	125a8 <sigaltstack@plt+0xd1c>
   13588:	push	{r4, r5, fp, lr}
   1358c:	add	fp, sp, #8
   13590:	bl	1170c <getchar_unlocked@plt>
   13594:	mov	r4, r0
   13598:	bl	116d0 <__ctype_b_loc@plt>
   1359c:	cmp	r4, #10
   135a0:	beq	135d0 <sigaltstack@plt+0x1d44>
   135a4:	mov	r5, r0
   135a8:	ldr	r0, [r5]
   135ac:	add	r0, r0, r4, lsl #1
   135b0:	ldrh	r0, [r0]
   135b4:	ands	r0, r0, #8192	; 0x2000
   135b8:	beq	135d0 <sigaltstack@plt+0x1d44>
   135bc:	bl	12a7c <sigaltstack@plt+0x11f0>
   135c0:	bl	1170c <getchar_unlocked@plt>
   135c4:	mov	r4, r0
   135c8:	cmp	r0, #10
   135cc:	bne	135a8 <sigaltstack@plt+0x1d1c>
   135d0:	movw	r0, #37272	; 0x9198
   135d4:	movt	r0, #2
   135d8:	ldr	r0, [r0]
   135dc:	bl	11628 <ferror_unlocked@plt>
   135e0:	cmp	r0, #0
   135e4:	moveq	r0, r4
   135e8:	popeq	{r4, r5, fp, pc}
   135ec:	movw	r1, #33196	; 0x81ac
   135f0:	movt	r1, #1
   135f4:	mov	r0, #0
   135f8:	mov	r2, #5
   135fc:	bl	11574 <dcgettext@plt>
   13600:	bl	125a8 <sigaltstack@plt+0xd1c>
   13604:	push	{r4, sl, fp, lr}
   13608:	add	fp, sp, #8
   1360c:	movw	r0, #37264	; 0x9190
   13610:	movt	r0, #2
   13614:	ldr	r4, [r0]
   13618:	movw	r1, #33272	; 0x81f8
   1361c:	movt	r1, #1
   13620:	mov	r0, #0
   13624:	mov	r2, #5
   13628:	bl	11574 <dcgettext@plt>
   1362c:	mov	r1, r4
   13630:	pop	{r4, sl, fp, lr}
   13634:	b	11838 <fputs@plt>
   13638:	push	{fp, lr}
   1363c:	mov	fp, sp
   13640:	bl	1170c <getchar_unlocked@plt>
   13644:	cmp	r0, #10
   13648:	cmnne	r0, #1
   1364c:	bne	13640 <sigaltstack@plt+0x1db4>
   13650:	movw	r0, #37272	; 0x9198
   13654:	movt	r0, #2
   13658:	ldr	r0, [r0]
   1365c:	bl	11628 <ferror_unlocked@plt>
   13660:	cmp	r0, #0
   13664:	popeq	{fp, pc}
   13668:	movw	r1, #33196	; 0x81ac
   1366c:	movt	r1, #1
   13670:	mov	r0, #0
   13674:	mov	r2, #5
   13678:	bl	11574 <dcgettext@plt>
   1367c:	bl	125a8 <sigaltstack@plt+0xd1c>
   13680:	push	{r4, r5, fp, lr}
   13684:	add	fp, sp, #8
   13688:	movw	r0, #33639	; 0x8367
   1368c:	movt	r0, #1
   13690:	bl	11658 <getenv@plt>
   13694:	movw	r5, #33646	; 0x836e
   13698:	movt	r5, #1
   1369c:	cmp	r0, #0
   136a0:	movne	r5, r0
   136a4:	mov	r0, r5
   136a8:	bl	11700 <strlen@plt>
   136ac:	add	r0, r0, #13
   136b0:	bl	15430 <sigaltstack@plt+0x3ba4>
   136b4:	mov	r4, r0
   136b8:	movw	r1, #33651	; 0x8373
   136bc:	movt	r1, #1
   136c0:	mov	r2, r5
   136c4:	bl	117f0 <sprintf@plt>
   136c8:	mov	r0, r4
   136cc:	bl	11664 <mkstemp64@plt>
   136d0:	cmp	r0, #0
   136d4:	movwpl	r1, #38284	; 0x958c
   136d8:	movtpl	r1, #2
   136dc:	strpl	r4, [r1]
   136e0:	pop	{r4, r5, fp, pc}
   136e4:	sub	r0, r0, #1
   136e8:	ldrb	r3, [r0, #1]!
   136ec:	cmp	r3, #47	; 0x2f
   136f0:	beq	136e8 <sigaltstack@plt+0x1e5c>
   136f4:	mov	r2, #0
   136f8:	mov	r1, r0
   136fc:	b	13708 <sigaltstack@plt+0x1e7c>
   13700:	mov	r2, #1
   13704:	ldrb	r3, [r1, #1]!
   13708:	uxtb	r3, r3
   1370c:	cmp	r3, #47	; 0x2f
   13710:	beq	13700 <sigaltstack@plt+0x1e74>
   13714:	cmp	r3, #0
   13718:	bxeq	lr
   1371c:	tst	r2, #1
   13720:	movne	r0, r1
   13724:	mov	r2, #0
   13728:	ldrb	r3, [r1, #1]!
   1372c:	b	13708 <sigaltstack@plt+0x1e7c>
   13730:	push	{r4, sl, fp, lr}
   13734:	add	fp, sp, #8
   13738:	mov	r4, r0
   1373c:	bl	11700 <strlen@plt>
   13740:	mov	r1, r0
   13744:	sub	r2, r4, #1
   13748:	mov	r0, r1
   1374c:	cmp	r1, #2
   13750:	bcc	13764 <sigaltstack@plt+0x1ed8>
   13754:	ldrb	r3, [r2, r0]
   13758:	sub	r1, r0, #1
   1375c:	cmp	r3, #47	; 0x2f
   13760:	beq	13748 <sigaltstack@plt+0x1ebc>
   13764:	pop	{r4, sl, fp, pc}
   13768:	push	{r4, sl, fp, lr}
   1376c:	add	fp, sp, #8
   13770:	movw	r1, #14392	; 0x3838
   13774:	movt	r1, #1
   13778:	cmp	r0, #0
   1377c:	movne	r1, r0
   13780:	movw	r0, #38448	; 0x9630
   13784:	movt	r0, #2
   13788:	str	r1, [r0]
   1378c:	mov	r4, #0
   13790:	movw	r1, #34140	; 0x855c
   13794:	movt	r1, #1
   13798:	mov	r0, #0
   1379c:	mov	r2, #5
   137a0:	bl	11574 <dcgettext@plt>
   137a4:	movw	r1, #38452	; 0x9634
   137a8:	movt	r1, #2
   137ac:	str	r0, [r1]
   137b0:	movw	r1, #34154	; 0x856a
   137b4:	movt	r1, #1
   137b8:	mov	r0, #0
   137bc:	mov	r2, #5
   137c0:	bl	11574 <dcgettext@plt>
   137c4:	movw	r1, #38456	; 0x9638
   137c8:	movt	r1, #2
   137cc:	str	r0, [r1]
   137d0:	bl	139b0 <sigaltstack@plt+0x2124>
   137d4:	movw	r1, #38460	; 0x963c
   137d8:	movt	r1, #2
   137dc:	str	r0, [r1]
   137e0:	movw	r0, #14396	; 0x383c
   137e4:	movt	r0, #1
   137e8:	movw	r1, #38464	; 0x9640
   137ec:	movt	r1, #2
   137f0:	mov	r2, #65536	; 0x10000
   137f4:	bl	141d4 <sigaltstack@plt+0x2948>
   137f8:	cmp	r0, #0
   137fc:	beq	13818 <sigaltstack@plt+0x1f8c>
   13800:	bl	1173c <__errno_location@plt>
   13804:	mov	r1, #95	; 0x5f
   13808:	str	r1, [r0]
   1380c:	mvn	r4, #0
   13810:	mov	r0, r4
   13814:	pop	{r4, sl, fp, pc}
   13818:	movw	r0, #14448	; 0x3870
   1381c:	movt	r0, #1
   13820:	bl	14018 <sigaltstack@plt+0x278c>
   13824:	movw	r1, #38464	; 0x9640
   13828:	movt	r1, #3
   1382c:	str	r0, [r1]
   13830:	mov	r0, r4
   13834:	pop	{r4, sl, fp, pc}
   13838:	bx	lr
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	mov	r1, r0
   13848:	mov	r0, #0
   1384c:	cmp	r1, #0
   13850:	beq	1386c <sigaltstack@plt+0x1fe0>
   13854:	movw	r0, #38464	; 0x9640
   13858:	movt	r0, #3
   1385c:	ldr	r1, [r0]
   13860:	mov	r0, #0
   13864:	cmp	r1, #0
   13868:	movweq	r0, #11
   1386c:	bl	1388c <sigaltstack@plt+0x2000>
   13870:	cmp	r1, #0
   13874:	moveq	r0, #0
   13878:	bxeq	lr
   1387c:	push	{fp, lr}
   13880:	mov	fp, sp
   13884:	mov	r0, #11
   13888:	bl	1388c <sigaltstack@plt+0x2000>
   1388c:	push	{r4, r5, fp, lr}
   13890:	add	fp, sp, #8
   13894:	sub	sp, sp, #8
   13898:	sub	sp, sp, #4096	; 0x1000
   1389c:	mov	r9, r0
   138a0:	movw	r0, #38448	; 0x9630
   138a4:	movt	r0, #2
   138a8:	ldr	r1, [r0]
   138ac:	mov	r0, r9
   138b0:	blx	r1
   138b4:	movw	r0, #38452	; 0x9634
   138b8:	movt	r0, #2
   138bc:	movw	r1, #38456	; 0x9638
   138c0:	movt	r1, #2
   138c4:	cmp	r9, #0
   138c8:	movne	r1, r0
   138cc:	ldr	r5, [r1]
   138d0:	movw	r4, #38460	; 0x963c
   138d4:	movt	r4, #2
   138d8:	ldr	r0, [r4]
   138dc:	bl	11700 <strlen@plt>
   138e0:	mov	r7, r0
   138e4:	mov	r0, r5
   138e8:	bl	11700 <strlen@plt>
   138ec:	mov	r6, r0
   138f0:	add	r0, r0, r7
   138f4:	ldr	r1, [r4]
   138f8:	mov	r2, #0
   138fc:	cmp	r2, r0, lsr #12
   13900:	bne	13944 <sigaltstack@plt+0x20b8>
   13904:	add	r8, sp, #2
   13908:	mov	r0, r8
   1390c:	mov	r2, r7
   13910:	bl	1152c <memcpy@plt>
   13914:	add	r7, r8, r7
   13918:	movw	r0, #8250	; 0x203a
   1391c:	strh	r0, [r7], #2
   13920:	mov	r0, r7
   13924:	mov	r1, r5
   13928:	mov	r2, r6
   1392c:	bl	1152c <memcpy@plt>
   13930:	mov	r0, #10
   13934:	strb	r0, [r7, r6]!
   13938:	sub	r0, r7, r8
   1393c:	add	r2, r0, #1
   13940:	b	13980 <sigaltstack@plt+0x20f4>
   13944:	mov	r0, #2
   13948:	mov	r2, r7
   1394c:	bl	11754 <write@plt>
   13950:	movw	r1, #34169	; 0x8579
   13954:	movt	r1, #1
   13958:	mov	r0, #2
   1395c:	mov	r2, #2
   13960:	bl	11754 <write@plt>
   13964:	mov	r0, #2
   13968:	mov	r1, r5
   1396c:	mov	r2, r6
   13970:	bl	11754 <write@plt>
   13974:	mov	r0, #10
   13978:	strb	r0, [sp, #2]
   1397c:	mov	r2, #1
   13980:	add	r1, sp, #2
   13984:	mov	r0, #2
   13988:	bl	11754 <write@plt>
   1398c:	cmp	r9, #0
   13990:	beq	139a0 <sigaltstack@plt+0x2114>
   13994:	mov	r0, r9
   13998:	bl	114b4 <raise@plt>
   1399c:	bl	11850 <abort@plt>
   139a0:	movw	r0, #37240	; 0x9178
   139a4:	movt	r0, #2
   139a8:	ldr	r0, [r0]
   139ac:	bl	11520 <_exit@plt>
   139b0:	movw	r0, #37248	; 0x9180
   139b4:	movt	r0, #2
   139b8:	ldr	r0, [r0]
   139bc:	bx	lr
   139c0:	push	{r4, r5, fp, lr}
   139c4:	add	fp, sp, #8
   139c8:	cmp	r0, #0
   139cc:	beq	13a60 <sigaltstack@plt+0x21d4>
   139d0:	mov	r4, r0
   139d4:	mov	r1, #47	; 0x2f
   139d8:	bl	117d8 <strrchr@plt>
   139dc:	cmp	r0, #0
   139e0:	mov	r5, r4
   139e4:	addne	r5, r0, #1
   139e8:	sub	r0, r5, r4
   139ec:	cmp	r0, #7
   139f0:	blt	13a44 <sigaltstack@plt+0x21b8>
   139f4:	sub	r0, r5, #7
   139f8:	movw	r1, #34227	; 0x85b3
   139fc:	movt	r1, #1
   13a00:	mov	r2, #7
   13a04:	bl	11844 <strncmp@plt>
   13a08:	cmp	r0, #0
   13a0c:	bne	13a44 <sigaltstack@plt+0x21b8>
   13a10:	movw	r1, #34235	; 0x85bb
   13a14:	movt	r1, #1
   13a18:	mov	r0, r5
   13a1c:	mov	r2, #3
   13a20:	bl	11844 <strncmp@plt>
   13a24:	cmp	r0, #0
   13a28:	beq	13a34 <sigaltstack@plt+0x21a8>
   13a2c:	mov	r4, r5
   13a30:	b	13a44 <sigaltstack@plt+0x21b8>
   13a34:	add	r4, r5, #3
   13a38:	movw	r0, #37248	; 0x9180
   13a3c:	movt	r0, #2
   13a40:	str	r4, [r0]
   13a44:	movw	r0, #37252	; 0x9184
   13a48:	movt	r0, #2
   13a4c:	str	r4, [r0]
   13a50:	movw	r0, #38468	; 0x9644
   13a54:	movt	r0, #3
   13a58:	str	r4, [r0]
   13a5c:	pop	{r4, r5, fp, pc}
   13a60:	movw	r0, #37264	; 0x9190
   13a64:	movt	r0, #2
   13a68:	ldr	r3, [r0]
   13a6c:	movw	r0, #34171	; 0x857b
   13a70:	movt	r0, #1
   13a74:	mov	r1, #55	; 0x37
   13a78:	mov	r2, #1
   13a7c:	bl	115f8 <fwrite@plt>
   13a80:	bl	11850 <abort@plt>
   13a84:	push	{r4, r5, r6, sl, fp, lr}
   13a88:	add	fp, sp, #16
   13a8c:	mov	r4, r0
   13a90:	mov	r0, #0
   13a94:	mov	r1, r4
   13a98:	mov	r2, #5
   13a9c:	bl	11574 <dcgettext@plt>
   13aa0:	cmp	r0, r4
   13aa4:	beq	13ac4 <sigaltstack@plt+0x2238>
   13aa8:	mov	r5, r0
   13aac:	mov	r1, r4
   13ab0:	bl	13b0c <sigaltstack@plt+0x2280>
   13ab4:	cmp	r0, #0
   13ab8:	beq	13acc <sigaltstack@plt+0x2240>
   13abc:	mov	r0, r5
   13ac0:	pop	{r4, r5, r6, sl, fp, pc}
   13ac4:	mov	r0, r4
   13ac8:	pop	{r4, r5, r6, sl, fp, pc}
   13acc:	mov	r0, r5
   13ad0:	bl	11700 <strlen@plt>
   13ad4:	mov	r6, r0
   13ad8:	mov	r0, r4
   13adc:	bl	11700 <strlen@plt>
   13ae0:	add	r0, r6, r0
   13ae4:	add	r0, r0, #4
   13ae8:	bl	15430 <sigaltstack@plt+0x3ba4>
   13aec:	mov	r6, r0
   13af0:	movw	r1, #34239	; 0x85bf
   13af4:	movt	r1, #1
   13af8:	mov	r2, r5
   13afc:	mov	r3, r4
   13b00:	bl	117f0 <sprintf@plt>
   13b04:	mov	r0, r6
   13b08:	pop	{r4, r5, r6, sl, fp, pc}
   13b0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b10:	add	fp, sp, #28
   13b14:	sub	sp, sp, #124	; 0x7c
   13b18:	mov	r4, r0
   13b1c:	mov	r0, r1
   13b20:	mov	r1, #2
   13b24:	bl	14cac <sigaltstack@plt+0x3420>
   13b28:	mov	sl, r0
   13b2c:	ldrb	r0, [r4]
   13b30:	cmp	r0, #0
   13b34:	beq	13db0 <sigaltstack@plt+0x2524>
   13b38:	add	r5, sp, #12
   13b3c:	add	r0, r5, #4
   13b40:	str	r0, [sp, #4]
   13b44:	add	r6, sp, #68	; 0x44
   13b48:	add	r8, r6, #4
   13b4c:	mov	r9, #0
   13b50:	str	r8, [sp]
   13b54:	b	13b6c <sigaltstack@plt+0x22e0>
   13b58:	ldr	r0, [sp, #88]	; 0x58
   13b5c:	add	r4, r7, r0
   13b60:	ldrb	r0, [r4]
   13b64:	cmp	r0, #0
   13b68:	beq	13db0 <sigaltstack@plt+0x2524>
   13b6c:	mov	r0, r4
   13b70:	mov	r1, sl
   13b74:	bl	15cdc <sigaltstack@plt+0x4450>
   13b78:	cmp	r0, #0
   13b7c:	beq	13db0 <sigaltstack@plt+0x2524>
   13b80:	mov	r7, r0
   13b84:	bl	1161c <__ctype_get_mb_cur_max@plt>
   13b88:	cmp	r0, #2
   13b8c:	bcc	13bf8 <sigaltstack@plt+0x236c>
   13b90:	strb	r9, [sp, #68]	; 0x44
   13b94:	str	r4, [sp, #84]	; 0x54
   13b98:	str	r9, [r8]
   13b9c:	str	r9, [r8, #4]
   13ba0:	strb	r9, [sp, #80]	; 0x50
   13ba4:	mov	r0, #1
   13ba8:	str	r0, [sp, #8]
   13bac:	cmp	r4, r7
   13bb0:	bcc	13bd4 <sigaltstack@plt+0x2348>
   13bb4:	b	13c94 <sigaltstack@plt+0x2408>
   13bb8:	strb	r9, [sp, #80]	; 0x50
   13bbc:	ldr	r2, [sp, #84]	; 0x54
   13bc0:	ldr	r3, [sp, #88]	; 0x58
   13bc4:	add	r2, r2, r3
   13bc8:	str	r2, [sp, #84]	; 0x54
   13bcc:	cmp	r2, r7
   13bd0:	bcs	13c7c <sigaltstack@plt+0x23f0>
   13bd4:	mov	r0, r6
   13bd8:	bl	166f8 <sigaltstack@plt+0x4e6c>
   13bdc:	ldr	r0, [sp, #96]	; 0x60
   13be0:	ldrb	r1, [sp, #92]	; 0x5c
   13be4:	cmp	r1, #0
   13be8:	beq	13bb8 <sigaltstack@plt+0x232c>
   13bec:	cmp	r0, #0
   13bf0:	bne	13bb8 <sigaltstack@plt+0x232c>
   13bf4:	b	13dd4 <sigaltstack@plt+0x2548>
   13bf8:	mov	r8, #1
   13bfc:	cmp	r4, r7
   13c00:	mov	r4, #1
   13c04:	bcs	13c24 <sigaltstack@plt+0x2398>
   13c08:	bl	116d0 <__ctype_b_loc@plt>
   13c0c:	ldrb	r1, [r7, #-1]
   13c10:	ldr	r0, [r0]
   13c14:	ldrb	r0, [r0, r1, lsl #1]
   13c18:	and	r0, r0, #8
   13c1c:	mov	r1, #1
   13c20:	eor	r4, r1, r0, lsr #3
   13c24:	mov	r5, sl
   13c28:	mov	r0, sl
   13c2c:	bl	11700 <strlen@plt>
   13c30:	ldrb	sl, [r7, r0]
   13c34:	cmp	sl, #0
   13c38:	beq	13c54 <sigaltstack@plt+0x23c8>
   13c3c:	bl	116d0 <__ctype_b_loc@plt>
   13c40:	ldr	r0, [r0]
   13c44:	ldrb	r0, [r0, sl, lsl #1]
   13c48:	and	r0, r0, #8
   13c4c:	mov	r1, #1
   13c50:	eor	r8, r1, r0, lsr #3
   13c54:	tst	r4, r8
   13c58:	bne	13dc8 <sigaltstack@plt+0x253c>
   13c5c:	ldrb	r0, [r7], #1
   13c60:	cmp	r0, #0
   13c64:	mov	r4, r7
   13c68:	mov	sl, r5
   13c6c:	add	r5, sp, #12
   13c70:	ldr	r8, [sp]
   13c74:	bne	13b60 <sigaltstack@plt+0x22d4>
   13c78:	b	13db0 <sigaltstack@plt+0x2524>
   13c7c:	cmp	r1, #0
   13c80:	beq	13c94 <sigaltstack@plt+0x2408>
   13c84:	bl	11748 <iswalnum@plt>
   13c88:	clz	r0, r0
   13c8c:	lsr	r0, r0, #5
   13c90:	str	r0, [sp, #8]
   13c94:	strb	r9, [sp, #68]	; 0x44
   13c98:	str	r7, [sp, #84]	; 0x54
   13c9c:	str	r9, [r8]
   13ca0:	str	r9, [r8, #4]
   13ca4:	strb	r9, [sp, #80]	; 0x50
   13ca8:	strb	r9, [sp, #12]
   13cac:	str	sl, [sp, #28]
   13cb0:	ldr	r0, [sp, #4]
   13cb4:	str	r9, [r0]
   13cb8:	str	r9, [r0, #4]
   13cbc:	strb	r9, [sp, #24]
   13cc0:	b	13cec <sigaltstack@plt+0x2460>
   13cc4:	strb	r9, [sp, #80]	; 0x50
   13cc8:	strb	r9, [sp, #24]
   13ccc:	ldr	r0, [sp, #84]	; 0x54
   13cd0:	ldr	r1, [sp, #88]	; 0x58
   13cd4:	add	r0, r0, r1
   13cd8:	str	r0, [sp, #84]	; 0x54
   13cdc:	ldr	r0, [sp, #28]
   13ce0:	ldr	r1, [sp, #32]
   13ce4:	add	r0, r0, r1
   13ce8:	str	r0, [sp, #28]
   13cec:	mov	r0, r5
   13cf0:	bl	166f8 <sigaltstack@plt+0x4e6c>
   13cf4:	ldrb	r0, [sp, #36]	; 0x24
   13cf8:	cmp	r0, #0
   13cfc:	beq	13d0c <sigaltstack@plt+0x2480>
   13d00:	ldr	r0, [sp, #40]	; 0x28
   13d04:	cmp	r0, #0
   13d08:	beq	13d30 <sigaltstack@plt+0x24a4>
   13d0c:	mov	r0, r6
   13d10:	bl	166f8 <sigaltstack@plt+0x4e6c>
   13d14:	ldrb	r0, [sp, #92]	; 0x5c
   13d18:	cmp	r0, #0
   13d1c:	beq	13cc4 <sigaltstack@plt+0x2438>
   13d20:	ldr	r0, [sp, #96]	; 0x60
   13d24:	cmp	r0, #0
   13d28:	bne	13cc4 <sigaltstack@plt+0x2438>
   13d2c:	b	13dd4 <sigaltstack@plt+0x2548>
   13d30:	mov	r0, r6
   13d34:	bl	166f8 <sigaltstack@plt+0x4e6c>
   13d38:	mov	r4, #1
   13d3c:	ldrb	r0, [sp, #92]	; 0x5c
   13d40:	cmp	r0, #0
   13d44:	mov	r1, #1
   13d48:	beq	13d68 <sigaltstack@plt+0x24dc>
   13d4c:	ldr	r0, [sp, #96]	; 0x60
   13d50:	cmp	r0, #0
   13d54:	mov	r1, #1
   13d58:	beq	13d68 <sigaltstack@plt+0x24dc>
   13d5c:	bl	11748 <iswalnum@plt>
   13d60:	clz	r0, r0
   13d64:	lsr	r1, r0, #5
   13d68:	ldr	r0, [sp, #8]
   13d6c:	tst	r0, r1
   13d70:	bne	13db4 <sigaltstack@plt+0x2528>
   13d74:	mov	r4, #0
   13d78:	strb	r4, [sp, #68]	; 0x44
   13d7c:	str	r7, [sp, #84]	; 0x54
   13d80:	str	r4, [r8]
   13d84:	str	r4, [r8, #4]
   13d88:	strb	r4, [sp, #80]	; 0x50
   13d8c:	mov	r0, r6
   13d90:	bl	166f8 <sigaltstack@plt+0x4e6c>
   13d94:	ldrb	r0, [sp, #92]	; 0x5c
   13d98:	cmp	r0, #0
   13d9c:	beq	13b58 <sigaltstack@plt+0x22cc>
   13da0:	ldr	r0, [sp, #96]	; 0x60
   13da4:	cmp	r0, #0
   13da8:	bne	13b58 <sigaltstack@plt+0x22cc>
   13dac:	b	13db4 <sigaltstack@plt+0x2528>
   13db0:	mov	r4, #0
   13db4:	mov	r0, sl
   13db8:	bl	15924 <sigaltstack@plt+0x4098>
   13dbc:	mov	r0, r4
   13dc0:	sub	sp, fp, #28
   13dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dc8:	mov	r4, #1
   13dcc:	mov	sl, r5
   13dd0:	b	13db4 <sigaltstack@plt+0x2528>
   13dd4:	bl	11850 <abort@plt>
   13dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ddc:	add	fp, sp, #28
   13de0:	sub	sp, sp, #4
   13de4:	mov	r4, r1
   13de8:	mov	r8, r0
   13dec:	mov	sl, #0
   13df0:	mov	r0, #0
   13df4:	mov	r1, r8
   13df8:	mov	r2, #5
   13dfc:	bl	11574 <dcgettext@plt>
   13e00:	mov	r7, r0
   13e04:	bl	15abc <sigaltstack@plt+0x4230>
   13e08:	mov	r6, r0
   13e0c:	movw	r1, #34247	; 0x85c7
   13e10:	movt	r1, #1
   13e14:	bl	15a0c <sigaltstack@plt+0x4180>
   13e18:	cmp	r0, #0
   13e1c:	beq	13ed0 <sigaltstack@plt+0x2644>
   13e20:	str	r7, [sp]
   13e24:	movw	sl, #34247	; 0x85c7
   13e28:	movt	sl, #1
   13e2c:	mov	r0, r4
   13e30:	mov	r1, sl
   13e34:	mov	r2, r6
   13e38:	bl	1589c <sigaltstack@plt+0x4010>
   13e3c:	mov	r5, r0
   13e40:	mov	r0, r6
   13e44:	bl	11700 <strlen@plt>
   13e48:	mov	r7, r0
   13e4c:	add	r0, r0, #11
   13e50:	bl	15430 <sigaltstack@plt+0x3ba4>
   13e54:	mov	r9, r0
   13e58:	mov	r1, r6
   13e5c:	mov	r2, r7
   13e60:	bl	1152c <memcpy@plt>
   13e64:	movw	r0, #34384	; 0x8650
   13e68:	movt	r0, #1
   13e6c:	vldr	d16, [r0]
   13e70:	add	r0, r9, r7
   13e74:	movw	r1, #18764	; 0x494c
   13e78:	movt	r1, #84	; 0x54
   13e7c:	str	r1, [r0, #7]
   13e80:	vst1.8	{d16}, [r0]
   13e84:	mov	r0, r4
   13e88:	mov	r1, sl
   13e8c:	mov	r2, r9
   13e90:	bl	1589c <sigaltstack@plt+0x4010>
   13e94:	mov	sl, r0
   13e98:	mov	r0, r9
   13e9c:	bl	15924 <sigaltstack@plt+0x4098>
   13ea0:	mov	r4, #0
   13ea4:	cmp	sl, #0
   13ea8:	beq	13ec8 <sigaltstack@plt+0x263c>
   13eac:	mov	r0, sl
   13eb0:	mov	r1, #63	; 0x3f
   13eb4:	bl	11718 <strchr@plt>
   13eb8:	cmp	r0, #0
   13ebc:	beq	13edc <sigaltstack@plt+0x2650>
   13ec0:	mov	r0, sl
   13ec4:	bl	15924 <sigaltstack@plt+0x4098>
   13ec8:	mov	sl, #0
   13ecc:	b	13ee0 <sigaltstack@plt+0x2654>
   13ed0:	mov	r5, r4
   13ed4:	mov	r9, #0
   13ed8:	b	13ee8 <sigaltstack@plt+0x265c>
   13edc:	mov	r4, sl
   13ee0:	mov	r9, r5
   13ee4:	ldr	r7, [sp]
   13ee8:	cmp	r4, #0
   13eec:	mov	r6, r4
   13ef0:	moveq	r6, r8
   13ef4:	cmp	r5, #0
   13ef8:	movne	r6, r5
   13efc:	mov	r0, r7
   13f00:	mov	r1, r8
   13f04:	bl	114d8 <strcmp@plt>
   13f08:	cmp	r0, #0
   13f0c:	beq	13f80 <sigaltstack@plt+0x26f4>
   13f10:	mov	r0, r7
   13f14:	mov	r1, r8
   13f18:	bl	13b0c <sigaltstack@plt+0x2280>
   13f1c:	cmp	r0, #0
   13f20:	bne	13f5c <sigaltstack@plt+0x26d0>
   13f24:	cmp	r5, #0
   13f28:	beq	13f40 <sigaltstack@plt+0x26b4>
   13f2c:	mov	r0, r7
   13f30:	mov	r1, r5
   13f34:	bl	13b0c <sigaltstack@plt+0x2280>
   13f38:	cmp	r0, #0
   13f3c:	bne	13f5c <sigaltstack@plt+0x26d0>
   13f40:	cmp	r4, #0
   13f44:	beq	13fb0 <sigaltstack@plt+0x2724>
   13f48:	mov	r0, r7
   13f4c:	mov	r1, r4
   13f50:	bl	13b0c <sigaltstack@plt+0x2280>
   13f54:	cmp	r0, #0
   13f58:	beq	13fb0 <sigaltstack@plt+0x2724>
   13f5c:	cmp	r9, #0
   13f60:	beq	13f6c <sigaltstack@plt+0x26e0>
   13f64:	mov	r0, r9
   13f68:	bl	15924 <sigaltstack@plt+0x4098>
   13f6c:	cmp	sl, #0
   13f70:	beq	1400c <sigaltstack@plt+0x2780>
   13f74:	mov	r0, sl
   13f78:	bl	15924 <sigaltstack@plt+0x4098>
   13f7c:	b	1400c <sigaltstack@plt+0x2780>
   13f80:	cmp	r9, #0
   13f84:	cmpne	r9, r6
   13f88:	beq	13f94 <sigaltstack@plt+0x2708>
   13f8c:	mov	r0, r9
   13f90:	bl	15924 <sigaltstack@plt+0x4098>
   13f94:	cmp	sl, #0
   13f98:	cmpne	sl, r6
   13f9c:	beq	13fa8 <sigaltstack@plt+0x271c>
   13fa0:	mov	r0, sl
   13fa4:	bl	15924 <sigaltstack@plt+0x4098>
   13fa8:	mov	r7, r6
   13fac:	b	1400c <sigaltstack@plt+0x2780>
   13fb0:	mov	r0, r7
   13fb4:	bl	11700 <strlen@plt>
   13fb8:	mov	r4, r0
   13fbc:	mov	r0, r6
   13fc0:	bl	11700 <strlen@plt>
   13fc4:	add	r0, r4, r0
   13fc8:	add	r0, r0, #4
   13fcc:	bl	15430 <sigaltstack@plt+0x3ba4>
   13fd0:	mov	r4, r0
   13fd4:	movw	r1, #34239	; 0x85bf
   13fd8:	movt	r1, #1
   13fdc:	mov	r2, r7
   13fe0:	mov	r3, r6
   13fe4:	bl	117f0 <sprintf@plt>
   13fe8:	cmp	r9, #0
   13fec:	beq	13ff8 <sigaltstack@plt+0x276c>
   13ff0:	mov	r0, r9
   13ff4:	bl	15924 <sigaltstack@plt+0x4098>
   13ff8:	cmp	sl, #0
   13ffc:	beq	14008 <sigaltstack@plt+0x277c>
   14000:	mov	r0, sl
   14004:	bl	15924 <sigaltstack@plt+0x4098>
   14008:	mov	r7, r4
   1400c:	mov	r0, r7
   14010:	sub	sp, fp, #28
   14014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	movw	r1, #38472	; 0x9648
   14024:	movt	r1, #3
   14028:	str	r0, [r1]
   1402c:	bl	14038 <sigaltstack@plt+0x27ac>
   14030:	mov	r0, #0
   14034:	pop	{fp, pc}
   14038:	push	{r4, r5, fp, lr}
   1403c:	add	fp, sp, #8
   14040:	sub	sp, sp, #144	; 0x90
   14044:	movw	r0, #17192	; 0x4328
   14048:	movt	r0, #1
   1404c:	str	r0, [sp, #4]
   14050:	add	r4, sp, #4
   14054:	add	r5, r4, #4
   14058:	mov	r0, r5
   1405c:	bl	117c0 <sigemptyset@plt>
   14060:	mov	r0, r5
   14064:	mov	r1, #1
   14068:	bl	11694 <sigaddset@plt>
   1406c:	mov	r0, r5
   14070:	mov	r1, #2
   14074:	bl	11694 <sigaddset@plt>
   14078:	mov	r0, r5
   1407c:	mov	r1, #3
   14080:	bl	11694 <sigaddset@plt>
   14084:	mov	r0, r5
   14088:	mov	r1, #13
   1408c:	bl	11694 <sigaddset@plt>
   14090:	mov	r0, r5
   14094:	mov	r1, #14
   14098:	bl	11694 <sigaddset@plt>
   1409c:	mov	r0, r5
   140a0:	mov	r1, #15
   140a4:	bl	11694 <sigaddset@plt>
   140a8:	mov	r0, r5
   140ac:	mov	r1, #10
   140b0:	bl	11694 <sigaddset@plt>
   140b4:	mov	r0, r5
   140b8:	mov	r1, #12
   140bc:	bl	11694 <sigaddset@plt>
   140c0:	mov	r0, r5
   140c4:	mov	r1, #17
   140c8:	bl	11694 <sigaddset@plt>
   140cc:	mov	r0, r5
   140d0:	mov	r1, #17
   140d4:	bl	11694 <sigaddset@plt>
   140d8:	mov	r0, r5
   140dc:	mov	r1, #23
   140e0:	bl	11694 <sigaddset@plt>
   140e4:	mov	r0, r5
   140e8:	mov	r1, #29
   140ec:	bl	11694 <sigaddset@plt>
   140f0:	mov	r0, r5
   140f4:	mov	r1, #29
   140f8:	bl	11694 <sigaddset@plt>
   140fc:	mov	r0, r5
   14100:	mov	r1, #24
   14104:	bl	11694 <sigaddset@plt>
   14108:	mov	r0, r5
   1410c:	mov	r1, #25
   14110:	bl	11694 <sigaddset@plt>
   14114:	mov	r0, r5
   14118:	mov	r1, #26
   1411c:	bl	11694 <sigaddset@plt>
   14120:	mov	r0, r5
   14124:	mov	r1, #27
   14128:	bl	11694 <sigaddset@plt>
   1412c:	mov	r0, r5
   14130:	mov	r1, #30
   14134:	bl	11694 <sigaddset@plt>
   14138:	mov	r0, r5
   1413c:	mov	r1, #28
   14140:	bl	11694 <sigaddset@plt>
   14144:	movw	r0, #38476	; 0x964c
   14148:	movt	r0, #3
   1414c:	ldr	r0, [r0]
   14150:	movw	r1, #4
   14154:	movt	r1, #2048	; 0x800
   14158:	cmp	r0, #0
   1415c:	movweq	r1, #4
   14160:	str	r1, [sp, #136]	; 0x88
   14164:	mov	r0, #11
   14168:	mov	r1, r4
   1416c:	mov	r2, #0
   14170:	bl	115ec <sigaction@plt>
   14174:	sub	sp, fp, #8
   14178:	pop	{r4, r5, fp, pc}
   1417c:	movw	r0, #38472	; 0x9648
   14180:	movt	r0, #3
   14184:	mov	r1, #0
   14188:	str	r1, [r0]
   1418c:	movw	r0, #38476	; 0x964c
   14190:	movt	r0, #3
   14194:	ldr	r0, [r0]
   14198:	cmp	r0, #0
   1419c:	bxne	lr
   141a0:	mov	r0, #11
   141a4:	mov	r1, #0
   141a8:	b	1155c <signal@plt>
   141ac:	push	{fp, lr}
   141b0:	mov	fp, sp
   141b4:	mov	ip, r3
   141b8:	mov	r3, r0
   141bc:	mov	r0, r1
   141c0:	mov	r1, r2
   141c4:	mov	r2, ip
   141c8:	blx	r3
   141cc:	mov	r0, #1
   141d0:	pop	{fp, pc}
   141d4:	push	{r4, r5, r6, r7, fp, lr}
   141d8:	add	fp, sp, #16
   141dc:	sub	sp, sp, #16
   141e0:	mov	r5, r2
   141e4:	mov	r4, r1
   141e8:	mov	r6, r0
   141ec:	movw	r7, #38480	; 0x9650
   141f0:	movt	r7, #3
   141f4:	ldr	r0, [r7]
   141f8:	cmp	r0, #0
   141fc:	bne	14214 <sigaltstack@plt+0x2988>
   14200:	add	r0, sp, #4
   14204:	bl	14274 <sigaltstack@plt+0x29e8>
   14208:	ldr	r0, [r7]
   1420c:	cmp	r0, #0
   14210:	beq	14264 <sigaltstack@plt+0x29d8>
   14214:	movw	r0, #38484	; 0x9654
   14218:	movt	r0, #3
   1421c:	str	r4, [r0]
   14220:	movw	r0, #38476	; 0x964c
   14224:	movt	r0, #3
   14228:	str	r6, [r0]
   1422c:	movw	r0, #38488	; 0x9658
   14230:	movt	r0, #3
   14234:	str	r5, [r0]
   14238:	str	r5, [sp, #12]
   1423c:	str	r4, [sp, #4]
   14240:	mov	r4, #0
   14244:	str	r4, [sp, #8]
   14248:	add	r0, sp, #4
   1424c:	mov	r1, #0
   14250:	bl	1188c <sigaltstack@plt>
   14254:	cmp	r0, #0
   14258:	bmi	14264 <sigaltstack@plt+0x29d8>
   1425c:	bl	14038 <sigaltstack@plt+0x27ac>
   14260:	b	14268 <sigaltstack@plt+0x29dc>
   14264:	mvn	r4, #0
   14268:	mov	r0, r4
   1426c:	sub	sp, fp, #16
   14270:	pop	{r4, r5, r6, r7, fp, pc}
   14274:	push	{fp, lr}
   14278:	mov	fp, sp
   1427c:	sub	sp, sp, #16
   14280:	mov	r1, sp
   14284:	bl	14470 <sigaltstack@plt+0x2be4>
   14288:	cmp	r0, #0
   1428c:	bmi	142a4 <sigaltstack@plt+0x2a18>
   14290:	ldr	r0, [sp, #4]
   14294:	sub	r0, r0, #1
   14298:	movw	r1, #38480	; 0x9650
   1429c:	movt	r1, #3
   142a0:	str	r0, [r1]
   142a4:	mov	sp, fp
   142a8:	pop	{fp, pc}
   142ac:	push	{fp, lr}
   142b0:	mov	fp, sp
   142b4:	sub	sp, sp, #16
   142b8:	movw	r0, #38476	; 0x964c
   142bc:	movt	r0, #3
   142c0:	mov	r1, #0
   142c4:	str	r1, [r0]
   142c8:	movw	r0, #38472	; 0x9648
   142cc:	movt	r0, #3
   142d0:	ldr	r0, [r0]
   142d4:	cmp	r0, #0
   142d8:	beq	142e4 <sigaltstack@plt+0x2a58>
   142dc:	bl	14038 <sigaltstack@plt+0x27ac>
   142e0:	b	142f0 <sigaltstack@plt+0x2a64>
   142e4:	mov	r0, #11
   142e8:	mov	r1, #0
   142ec:	bl	1155c <signal@plt>
   142f0:	mov	r0, #2
   142f4:	str	r0, [sp, #8]
   142f8:	add	r0, sp, #4
   142fc:	mov	r1, #0
   14300:	bl	1188c <sigaltstack@plt>
   14304:	cmn	r0, #1
   14308:	ble	14314 <sigaltstack@plt+0x2a88>
   1430c:	mov	sp, fp
   14310:	pop	{fp, pc}
   14314:	movw	r0, #34400	; 0x8660
   14318:	movt	r0, #1
   1431c:	bl	115d4 <perror@plt>
   14320:	mov	sp, fp
   14324:	pop	{fp, pc}
   14328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1432c:	add	fp, sp, #28
   14330:	sub	sp, sp, #20
   14334:	mov	r5, r2
   14338:	movw	r8, #38472	; 0x9648
   1433c:	movt	r8, #3
   14340:	ldr	r2, [r8]
   14344:	ldr	r4, [r1, #12]
   14348:	cmp	r2, #0
   1434c:	beq	14364 <sigaltstack@plt+0x2ad8>
   14350:	mov	r0, r4
   14354:	mov	r1, #0
   14358:	blx	r2
   1435c:	cmp	r0, #0
   14360:	bne	14454 <sigaltstack@plt+0x2bc8>
   14364:	movw	r9, #38476	; 0x964c
   14368:	movt	r9, #3
   1436c:	ldr	r0, [r9]
   14370:	cmp	r0, #0
   14374:	beq	14434 <sigaltstack@plt+0x2ba8>
   14378:	movw	r0, #38480	; 0x9650
   1437c:	movt	r0, #3
   14380:	ldr	r6, [r0]
   14384:	cmp	r6, #0
   14388:	beq	14434 <sigaltstack@plt+0x2ba8>
   1438c:	ldr	r0, [r5, #84]	; 0x54
   14390:	str	r0, [sp]
   14394:	bl	1173c <__errno_location@plt>
   14398:	mov	r7, r0
   1439c:	ldr	sl, [r0]
   143a0:	add	r1, sp, #4
   143a4:	mov	r0, r6
   143a8:	bl	14470 <sigaltstack@plt+0x2be4>
   143ac:	str	sl, [r7]
   143b0:	cmp	r0, #0
   143b4:	bmi	14434 <sigaltstack@plt+0x2ba8>
   143b8:	ldr	r0, [sp, #4]
   143bc:	cmp	r0, r4
   143c0:	bls	143e0 <sigaltstack@plt+0x2b54>
   143c4:	ldr	r2, [sp, #12]
   143c8:	add	r1, sp, #4
   143cc:	mov	r0, r4
   143d0:	blx	r2
   143d4:	cmp	r0, #0
   143d8:	bne	143f0 <sigaltstack@plt+0x2b64>
   143dc:	b	14434 <sigaltstack@plt+0x2ba8>
   143e0:	ldr	r0, [sp, #8]
   143e4:	sub	r0, r0, #1
   143e8:	cmp	r0, r4
   143ec:	bcc	14434 <sigaltstack@plt+0x2ba8>
   143f0:	movw	r0, #38484	; 0x9654
   143f4:	movt	r0, #3
   143f8:	ldr	r1, [r0]
   143fc:	mov	r0, #0
   14400:	ldr	r2, [sp]
   14404:	cmp	r2, r1
   14408:	bcc	14428 <sigaltstack@plt+0x2b9c>
   1440c:	movw	r0, #38488	; 0x9658
   14410:	movt	r0, #3
   14414:	ldr	r0, [r0]
   14418:	add	r1, r0, r1
   1441c:	mov	r0, #0
   14420:	cmp	r2, r1
   14424:	movwls	r0, #1
   14428:	ldr	r2, [r9]
   1442c:	mov	r1, r5
   14430:	blx	r2
   14434:	ldr	r2, [r8]
   14438:	cmp	r2, #0
   1443c:	beq	1445c <sigaltstack@plt+0x2bd0>
   14440:	mov	r0, r4
   14444:	mov	r1, #1
   14448:	blx	r2
   1444c:	cmp	r0, #0
   14450:	beq	1445c <sigaltstack@plt+0x2bd0>
   14454:	sub	sp, fp, #28
   14458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1445c:	mov	r0, #11
   14460:	mov	r1, #0
   14464:	bl	1155c <signal@plt>
   14468:	sub	sp, fp, #28
   1446c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14470:	push	{r4, r5, fp, lr}
   14474:	add	fp, sp, #8
   14478:	sub	sp, sp, #16
   1447c:	mov	r4, r1
   14480:	mov	r5, r0
   14484:	mvn	r0, #0
   14488:	str	r0, [sp, #12]
   1448c:	mov	r0, #0
   14490:	str	r0, [sp, #8]
   14494:	str	r1, [sp, #4]
   14498:	str	r5, [sp]
   1449c:	mov	r0, sp
   144a0:	bl	144d8 <sigaltstack@plt+0x2c4c>
   144a4:	ldr	r0, [sp, #12]
   144a8:	cmp	r0, #0
   144ac:	beq	144c0 <sigaltstack@plt+0x2c34>
   144b0:	mov	r0, r5
   144b4:	mov	r1, r4
   144b8:	bl	144fc <sigaltstack@plt+0x2c70>
   144bc:	b	144cc <sigaltstack@plt+0x2c40>
   144c0:	movw	r0, #17628	; 0x44dc
   144c4:	movt	r0, #1
   144c8:	str	r0, [r4, #8]
   144cc:	mov	r0, #0
   144d0:	sub	sp, fp, #8
   144d4:	pop	{r4, r5, fp, pc}
   144d8:	b	14550 <sigaltstack@plt+0x2cc4>
   144dc:	ldr	r2, [r1]
   144e0:	ldr	r1, [r1, #12]
   144e4:	sub	r3, r2, r0
   144e8:	sub	r1, r2, r1
   144ec:	mov	r0, #0
   144f0:	cmp	r3, r1, lsr #1
   144f4:	movwls	r0, #1
   144f8:	bx	lr
   144fc:	push	{r4, r5, r6, sl, fp, lr}
   14500:	add	fp, sp, #16
   14504:	mov	r4, r1
   14508:	mov	r5, r0
   1450c:	movw	r6, #38492	; 0x965c
   14510:	movt	r6, #3
   14514:	ldr	r0, [r6]
   14518:	cmp	r0, #0
   1451c:	bleq	149cc <sigaltstack@plt+0x3140>
   14520:	ldr	r0, [r6]
   14524:	udiv	r1, r5, r0
   14528:	mul	r5, r1, r0
   1452c:	mov	r0, r5
   14530:	bl	149e8 <sigaltstack@plt+0x315c>
   14534:	str	r0, [r4]
   14538:	mov	r0, r5
   1453c:	bl	14ab0 <sigaltstack@plt+0x3224>
   14540:	movw	r1, #19324	; 0x4b7c
   14544:	movt	r1, #1
   14548:	stmib	r4, {r0, r1}
   1454c:	pop	{r4, r5, r6, sl, fp, pc}
   14550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14554:	add	fp, sp, #28
   14558:	sub	sp, sp, #52	; 0x34
   1455c:	mov	r4, r0
   14560:	add	r0, sp, #16
   14564:	bl	14674 <sigaltstack@plt+0x2de8>
   14568:	cmp	r0, #0
   1456c:	bmi	14668 <sigaltstack@plt+0x2ddc>
   14570:	ldr	r5, [sp, #40]	; 0x28
   14574:	ldr	r0, [sp, #44]	; 0x2c
   14578:	str	r0, [sp, #4]
   1457c:	add	r0, sp, #16
   14580:	add	r1, sp, #12
   14584:	bl	148a4 <sigaltstack@plt+0x3018>
   14588:	cmp	r0, #0
   1458c:	bmi	14654 <sigaltstack@plt+0x2dc8>
   14590:	ldr	r0, [sp, #4]
   14594:	sub	r8, r0, #1
   14598:	add	r7, sp, #16
   1459c:	add	sl, sp, #8
   145a0:	mov	r0, r7
   145a4:	bl	14928 <sigaltstack@plt+0x309c>
   145a8:	cmp	r0, #45	; 0x2d
   145ac:	bne	14654 <sigaltstack@plt+0x2dc8>
   145b0:	mov	r0, r7
   145b4:	mov	r1, sl
   145b8:	bl	148a4 <sigaltstack@plt+0x3018>
   145bc:	cmp	r0, #0
   145c0:	bmi	14654 <sigaltstack@plt+0x2dc8>
   145c4:	mov	r0, r7
   145c8:	bl	14928 <sigaltstack@plt+0x309c>
   145cc:	cmp	r0, #10
   145d0:	cmnne	r0, #1
   145d4:	bne	145c4 <sigaltstack@plt+0x2d38>
   145d8:	ldr	r1, [sp, #12]
   145dc:	cmp	r1, r5
   145e0:	bhi	145f4 <sigaltstack@plt+0x2d68>
   145e4:	ldr	r6, [sp, #8]
   145e8:	sub	r9, r6, #1
   145ec:	cmp	r8, r9
   145f0:	bls	14620 <sigaltstack@plt+0x2d94>
   145f4:	ldr	r2, [sp, #8]
   145f8:	mov	r0, r4
   145fc:	bl	1494c <sigaltstack@plt+0x30c0>
   14600:	cmp	r0, #0
   14604:	bne	14654 <sigaltstack@plt+0x2dc8>
   14608:	mov	r0, r7
   1460c:	add	r1, sp, #12
   14610:	bl	148a4 <sigaltstack@plt+0x3018>
   14614:	cmn	r0, #1
   14618:	bgt	145a0 <sigaltstack@plt+0x2d14>
   1461c:	b	14654 <sigaltstack@plt+0x2dc8>
   14620:	cmp	r1, r5
   14624:	bcs	1463c <sigaltstack@plt+0x2db0>
   14628:	mov	r0, r4
   1462c:	mov	r2, r5
   14630:	bl	1494c <sigaltstack@plt+0x30c0>
   14634:	cmp	r0, #0
   14638:	bne	14654 <sigaltstack@plt+0x2dc8>
   1463c:	cmp	r8, r9
   14640:	bcs	14608 <sigaltstack@plt+0x2d7c>
   14644:	mov	r0, r4
   14648:	ldr	r1, [sp, #4]
   1464c:	mov	r2, r6
   14650:	b	145fc <sigaltstack@plt+0x2d70>
   14654:	add	r0, sp, #16
   14658:	bl	14990 <sigaltstack@plt+0x3104>
   1465c:	mov	r0, #0
   14660:	sub	sp, fp, #28
   14664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14668:	mvn	r0, #0
   1466c:	sub	sp, fp, #28
   14670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14674:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14678:	add	fp, sp, #28
   1467c:	sub	sp, sp, #20
   14680:	mov	r4, r0
   14684:	movw	r0, #34449	; 0x8691
   14688:	movt	r0, #1
   1468c:	mov	sl, #0
   14690:	mov	r1, #0
   14694:	bl	1164c <open64@plt>
   14698:	cmp	r0, #0
   1469c:	bmi	14894 <sigaltstack@plt+0x3008>
   146a0:	mov	r5, r0
   146a4:	str	sl, [r4, #24]
   146a8:	str	sl, [r4, #28]
   146ac:	str	sl, [r4]
   146b0:	add	r0, r4, #32
   146b4:	str	sl, [r4, #8]
   146b8:	str	r0, [r4, #12]
   146bc:	str	sl, [r4, #16]
   146c0:	mov	r7, #1
   146c4:	movw	r6, #4170	; 0x104a
   146c8:	movw	r8, #4169	; 0x1049
   146cc:	mov	r9, #0
   146d0:	cmp	r7, r6
   146d4:	bcc	1473c <sigaltstack@plt+0x2eb0>
   146d8:	b	14710 <sigaltstack@plt+0x2e84>
   146dc:	bl	1173c <__errno_location@plt>
   146e0:	ldr	r0, [r0]
   146e4:	cmp	r0, #4
   146e8:	bne	14868 <sigaltstack@plt+0x2fdc>
   146ec:	str	sl, [sp]
   146f0:	mov	r0, r5
   146f4:	mov	r2, #0
   146f8:	mov	r3, #0
   146fc:	bl	11604 <lseek64@plt>
   14700:	cmn	r1, #1
   14704:	ble	14830 <sigaltstack@plt+0x2fa4>
   14708:	cmp	r7, r6
   1470c:	bcc	1473c <sigaltstack@plt+0x2eb0>
   14710:	ldr	r1, [r4, #12]
   14714:	mov	r0, r5
   14718:	mov	r2, r7
   1471c:	bl	114f0 <read@plt>
   14720:	cmn	r0, #1
   14724:	ble	146dc <sigaltstack@plt+0x2e50>
   14728:	cmp	r0, #0
   1472c:	beq	14868 <sigaltstack@plt+0x2fdc>
   14730:	add	r1, r0, r8
   14734:	cmp	r1, r7
   14738:	bls	147cc <sigaltstack@plt+0x2f40>
   1473c:	cmp	r9, #0
   14740:	beq	14768 <sigaltstack@plt+0x2edc>
   14744:	cmp	sl, r7, lsl #1
   14748:	beq	14868 <sigaltstack@plt+0x2fdc>
   1474c:	lsl	r7, r7, #1
   14750:	ldr	r0, [r4, #16]
   14754:	cmp	r0, #0
   14758:	beq	14780 <sigaltstack@plt+0x2ef4>
   1475c:	ldr	r1, [r4, #20]
   14760:	bl	1179c <munmap@plt>
   14764:	b	14780 <sigaltstack@plt+0x2ef4>
   14768:	bl	11730 <getpagesize@plt>
   1476c:	mov	r9, r0
   14770:	mov	r7, r0
   14774:	lsl	r0, r0, #1
   14778:	cmp	r7, r6
   1477c:	bcc	14770 <sigaltstack@plt+0x2ee4>
   14780:	str	sl, [sp, #8]
   14784:	str	sl, [sp, #12]
   14788:	mvn	r0, #0
   1478c:	str	r0, [sp]
   14790:	mov	r0, #0
   14794:	mov	r1, r7
   14798:	mov	r2, #3
   1479c:	mov	r3, #34	; 0x22
   147a0:	bl	11544 <mmap64@plt>
   147a4:	str	r0, [r4, #16]
   147a8:	cmn	r0, #1
   147ac:	beq	1488c <sigaltstack@plt+0x3000>
   147b0:	ldr	r0, [r4, #16]
   147b4:	str	r0, [r4, #12]
   147b8:	add	r1, r0, r7
   147bc:	str	r7, [r4, #20]
   147c0:	str	r0, [r4, #24]
   147c4:	str	r1, [r4, #28]
   147c8:	b	146ec <sigaltstack@plt+0x2e60>
   147cc:	str	r0, [r4, #4]
   147d0:	sub	r2, r7, r0
   147d4:	ldr	r1, [r4, #12]
   147d8:	add	r1, r1, r0
   147dc:	mov	r0, r5
   147e0:	bl	114f0 <read@plt>
   147e4:	cmp	r0, #0
   147e8:	bmi	146dc <sigaltstack@plt+0x2e50>
   147ec:	add	r2, r0, r8
   147f0:	ldr	r1, [r4, #4]
   147f4:	sub	r3, r7, r1
   147f8:	cmp	r2, r3
   147fc:	bhi	1473c <sigaltstack@plt+0x2eb0>
   14800:	cmp	r0, #0
   14804:	beq	14858 <sigaltstack@plt+0x2fcc>
   14808:	add	r0, r1, r0
   1480c:	str	r0, [r4, #4]
   14810:	sub	r2, r7, r0
   14814:	ldr	r1, [r4, #12]
   14818:	add	r1, r1, r0
   1481c:	mov	r0, r5
   14820:	bl	114f0 <read@plt>
   14824:	cmn	r0, #1
   14828:	bgt	147ec <sigaltstack@plt+0x2f60>
   1482c:	b	146dc <sigaltstack@plt+0x2e50>
   14830:	mov	r0, r5
   14834:	bl	11868 <close@plt>
   14838:	movw	r0, #34449	; 0x8691
   1483c:	movt	r0, #1
   14840:	mov	r1, #0
   14844:	bl	1164c <open64@plt>
   14848:	mov	r5, r0
   1484c:	cmp	r0, #0
   14850:	bpl	14708 <sigaltstack@plt+0x2e7c>
   14854:	b	14870 <sigaltstack@plt+0x2fe4>
   14858:	mov	r0, r5
   1485c:	bl	11868 <close@plt>
   14860:	mov	r5, #0
   14864:	b	14898 <sigaltstack@plt+0x300c>
   14868:	mov	r0, r5
   1486c:	bl	11868 <close@plt>
   14870:	ldr	r0, [r4, #16]
   14874:	mvn	r5, #0
   14878:	cmp	r0, #0
   1487c:	beq	14898 <sigaltstack@plt+0x300c>
   14880:	ldr	r1, [r4, #20]
   14884:	bl	1179c <munmap@plt>
   14888:	b	14898 <sigaltstack@plt+0x300c>
   1488c:	mov	r0, r5
   14890:	bl	11868 <close@plt>
   14894:	mvn	r5, #0
   14898:	mov	r0, r5
   1489c:	sub	sp, fp, #28
   148a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a4:	push	{r4, r5, r6, r7, fp, lr}
   148a8:	add	fp, sp, #16
   148ac:	mov	r4, r1
   148b0:	mov	r5, r0
   148b4:	mov	r6, #0
   148b8:	mov	r7, #0
   148bc:	b	148d0 <sigaltstack@plt+0x3044>
   148c0:	add	r7, r1, r7, lsl #4
   148c4:	mov	r0, r5
   148c8:	bl	14928 <sigaltstack@plt+0x309c>
   148cc:	sub	r6, r6, #1
   148d0:	mov	r0, r5
   148d4:	bl	149a8 <sigaltstack@plt+0x311c>
   148d8:	sub	r1, r0, #48	; 0x30
   148dc:	cmp	r1, #9
   148e0:	bls	148c0 <sigaltstack@plt+0x3034>
   148e4:	sub	r1, r0, #65	; 0x41
   148e8:	cmp	r1, #5
   148ec:	bhi	148fc <sigaltstack@plt+0x3070>
   148f0:	add	r0, r0, r7, lsl #4
   148f4:	sub	r7, r0, #55	; 0x37
   148f8:	b	148c4 <sigaltstack@plt+0x3038>
   148fc:	sub	r1, r0, #97	; 0x61
   14900:	cmp	r1, #5
   14904:	bhi	14914 <sigaltstack@plt+0x3088>
   14908:	add	r0, r0, r7, lsl #4
   1490c:	sub	r7, r0, #87	; 0x57
   14910:	b	148c4 <sigaltstack@plt+0x3038>
   14914:	cmp	r6, #0
   14918:	mvneq	r0, #0
   1491c:	strne	r7, [r4]
   14920:	movne	r0, #0
   14924:	pop	{r4, r5, r6, r7, fp, pc}
   14928:	push	{r4, sl, fp, lr}
   1492c:	add	fp, sp, #8
   14930:	mov	r4, r0
   14934:	bl	149a8 <sigaltstack@plt+0x311c>
   14938:	cmp	r0, #0
   1493c:	ldrpl	r1, [r4]
   14940:	addpl	r1, r1, #1
   14944:	strpl	r1, [r4]
   14948:	pop	{r4, sl, fp, pc}
   1494c:	ldr	ip, [r0]
   14950:	cmp	ip, r1
   14954:	bcc	14984 <sigaltstack@plt+0x30f8>
   14958:	sub	r3, r2, #1
   1495c:	cmp	ip, r3
   14960:	bhi	14984 <sigaltstack@plt+0x30f8>
   14964:	ldr	r3, [r0, #4]
   14968:	stm	r3, {r1, r2}
   1496c:	ldr	r1, [r0, #8]
   14970:	str	r1, [r3, #12]
   14974:	mov	r1, #0
   14978:	str	r1, [r0, #12]
   1497c:	mov	r0, #1
   14980:	bx	lr
   14984:	str	r2, [r0, #8]
   14988:	mov	r0, #0
   1498c:	bx	lr
   14990:	mov	r1, r0
   14994:	ldr	r0, [r0, #16]
   14998:	cmp	r0, #0
   1499c:	bxeq	lr
   149a0:	ldr	r1, [r1, #20]
   149a4:	b	1179c <munmap@plt>
   149a8:	ldm	r0, {r1, r2}
   149ac:	cmp	r1, r2
   149b0:	moveq	r1, #1
   149b4:	streq	r1, [r0, #8]
   149b8:	mvneq	r0, #0
   149bc:	bxeq	lr
   149c0:	ldr	r0, [r0, #12]
   149c4:	ldrb	r0, [r0, r1]
   149c8:	bx	lr
   149cc:	push	{fp, lr}
   149d0:	mov	fp, sp
   149d4:	bl	11730 <getpagesize@plt>
   149d8:	movw	r1, #38492	; 0x965c
   149dc:	movt	r1, #3
   149e0:	str	r0, [r1]
   149e4:	pop	{fp, pc}
   149e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   149ec:	add	fp, sp, #24
   149f0:	sub	sp, sp, #1024	; 0x400
   149f4:	cmp	r0, #0
   149f8:	beq	14a48 <sigaltstack@plt+0x31bc>
   149fc:	mov	r4, r0
   14a00:	mov	r7, #1024	; 0x400
   14a04:	movw	r6, #38492	; 0x965c
   14a08:	movt	r6, #3
   14a0c:	mov	r5, sp
   14a10:	ldr	r1, [r6]
   14a14:	udiv	r0, r4, r1
   14a18:	cmp	r7, r0
   14a1c:	movhi	r7, r0
   14a20:	mls	r0, r7, r1, r4
   14a24:	mul	r1, r7, r1
   14a28:	mov	r2, r5
   14a2c:	bl	11808 <mincore@plt>
   14a30:	cmp	r0, #0
   14a34:	bmi	14a58 <sigaltstack@plt+0x31cc>
   14a38:	ldr	r0, [r6]
   14a3c:	mls	r4, r0, r7, r4
   14a40:	cmp	r4, #0
   14a44:	bne	14a10 <sigaltstack@plt+0x3184>
   14a48:	mov	r4, #0
   14a4c:	mov	r0, r4
   14a50:	sub	sp, fp, #24
   14a54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14a58:	cmp	r7, #1
   14a5c:	beq	14a4c <sigaltstack@plt+0x31c0>
   14a60:	mov	r8, sp
   14a64:	b	14a74 <sigaltstack@plt+0x31e8>
   14a68:	mov	r7, r5
   14a6c:	cmp	r7, #1
   14a70:	beq	14a4c <sigaltstack@plt+0x31c0>
   14a74:	ldr	r1, [r6]
   14a78:	add	r0, r7, #1
   14a7c:	lsr	r5, r0, #1
   14a80:	mls	r0, r1, r5, r4
   14a84:	mul	r1, r1, r5
   14a88:	mov	r2, r8
   14a8c:	bl	11808 <mincore@plt>
   14a90:	cmp	r0, #0
   14a94:	bmi	14a68 <sigaltstack@plt+0x31dc>
   14a98:	ldr	r0, [r6]
   14a9c:	mls	r4, r0, r5, r4
   14aa0:	lsr	r7, r7, #1
   14aa4:	cmp	r7, #1
   14aa8:	bne	14a74 <sigaltstack@plt+0x31e8>
   14aac:	b	14a4c <sigaltstack@plt+0x31c0>
   14ab0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ab4:	add	fp, sp, #24
   14ab8:	sub	sp, sp, #1024	; 0x400
   14abc:	movw	r6, #38492	; 0x965c
   14ac0:	movt	r6, #3
   14ac4:	ldr	r1, [r6]
   14ac8:	adds	r4, r1, r0
   14acc:	beq	14b14 <sigaltstack@plt+0x3288>
   14ad0:	mov	r7, #1024	; 0x400
   14ad4:	mov	r5, sp
   14ad8:	ldr	r0, [r6]
   14adc:	rsb	r1, r4, #0
   14ae0:	udiv	r1, r1, r0
   14ae4:	cmp	r7, r1
   14ae8:	movhi	r7, r1
   14aec:	mul	r1, r7, r0
   14af0:	mov	r0, r4
   14af4:	mov	r2, r5
   14af8:	bl	11808 <mincore@plt>
   14afc:	cmp	r0, #0
   14b00:	bmi	14b24 <sigaltstack@plt+0x3298>
   14b04:	ldr	r0, [r6]
   14b08:	mla	r4, r0, r7, r4
   14b0c:	cmp	r4, #0
   14b10:	bne	14ad8 <sigaltstack@plt+0x324c>
   14b14:	mov	r4, #0
   14b18:	mov	r0, r4
   14b1c:	sub	sp, fp, #24
   14b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b24:	cmp	r7, #1
   14b28:	beq	14b18 <sigaltstack@plt+0x328c>
   14b2c:	mov	r8, sp
   14b30:	b	14b40 <sigaltstack@plt+0x32b4>
   14b34:	mov	r7, r5
   14b38:	cmp	r7, #1
   14b3c:	beq	14b18 <sigaltstack@plt+0x328c>
   14b40:	ldr	r0, [r6]
   14b44:	add	r1, r7, #1
   14b48:	lsr	r5, r1, #1
   14b4c:	mul	r1, r0, r5
   14b50:	mov	r0, r4
   14b54:	mov	r2, r8
   14b58:	bl	11808 <mincore@plt>
   14b5c:	cmp	r0, #0
   14b60:	bmi	14b34 <sigaltstack@plt+0x32a8>
   14b64:	ldr	r0, [r6]
   14b68:	mla	r4, r0, r5, r4
   14b6c:	lsr	r7, r7, #1
   14b70:	cmp	r7, #1
   14b74:	bne	14b40 <sigaltstack@plt+0x32b4>
   14b78:	b	14b18 <sigaltstack@plt+0x328c>
   14b7c:	mov	r2, r0
   14b80:	ldr	r1, [r1]
   14b84:	sub	r0, r0, r1
   14b88:	add	r0, r0, r2
   14b8c:	cmp	r0, r2
   14b90:	movhi	r0, #0
   14b94:	bxhi	lr
   14b98:	sub	r1, r1, #1
   14b9c:	b	14ba0 <sigaltstack@plt+0x3314>
   14ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ba4:	add	fp, sp, #28
   14ba8:	sub	sp, sp, #4
   14bac:	movw	r2, #38492	; 0x965c
   14bb0:	movt	r2, #3
   14bb4:	ldr	r2, [r2]
   14bb8:	udiv	r0, r0, r2
   14bbc:	udiv	r1, r1, r2
   14bc0:	add	r1, r1, #1
   14bc4:	mul	r1, r1, r2
   14bc8:	mls	r1, r0, r2, r1
   14bcc:	udiv	r7, r1, r2
   14bd0:	mul	r0, r0, r2
   14bd4:	str	r0, [sp]
   14bd8:	mov	r0, #1
   14bdc:	mov	sl, r0
   14be0:	lsl	r0, r0, #1
   14be4:	cmp	sl, r7
   14be8:	bcc	14bdc <sigaltstack@plt+0x3350>
   14bec:	mov	r4, #1
   14bf0:	mov	r0, #0
   14bf4:	cmp	r0, sl, lsr #1
   14bf8:	beq	14c70 <sigaltstack@plt+0x33e4>
   14bfc:	lsr	r0, sl, #1
   14c00:	b	14c14 <sigaltstack@plt+0x3388>
   14c04:	lsr	r0, sl, #1
   14c08:	mov	r1, #0
   14c0c:	cmp	r1, sl, lsr #1
   14c10:	beq	14c70 <sigaltstack@plt+0x33e4>
   14c14:	mov	r1, sl
   14c18:	mov	sl, r0
   14c1c:	cmp	r0, r7
   14c20:	bcs	14c04 <sigaltstack@plt+0x3378>
   14c24:	movw	r0, #38492	; 0x965c
   14c28:	movt	r0, #3
   14c2c:	ldr	r0, [r0]
   14c30:	mul	r0, r0, sl
   14c34:	ldr	r2, [sp]
   14c38:	add	r5, r0, r2
   14c3c:	lsl	r8, r0, #1
   14c40:	bic	r9, r1, #1
   14c44:	mov	r6, sl
   14c48:	mov	r0, r5
   14c4c:	bl	14c7c <sigaltstack@plt+0x33f0>
   14c50:	cmp	r0, #0
   14c54:	bne	14c6c <sigaltstack@plt+0x33e0>
   14c58:	add	r5, r5, r8
   14c5c:	add	r6, r6, r9
   14c60:	cmp	r6, r7
   14c64:	bcc	14c48 <sigaltstack@plt+0x33bc>
   14c68:	b	14c04 <sigaltstack@plt+0x3378>
   14c6c:	mov	r4, #0
   14c70:	mov	r0, r4
   14c74:	sub	sp, fp, #28
   14c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c7c:	push	{fp, lr}
   14c80:	mov	fp, sp
   14c84:	sub	sp, sp, #8
   14c88:	movw	r1, #38492	; 0x965c
   14c8c:	movt	r1, #3
   14c90:	ldr	r1, [r1]
   14c94:	sub	r2, fp, #1
   14c98:	bl	11808 <mincore@plt>
   14c9c:	mvn	r0, r0
   14ca0:	lsr	r0, r0, #31
   14ca4:	mov	sp, fp
   14ca8:	pop	{fp, pc}
   14cac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14cb0:	add	fp, sp, #24
   14cb4:	sub	sp, sp, #64	; 0x40
   14cb8:	mov	r5, r1
   14cbc:	bl	11580 <strdup@plt>
   14cc0:	cmp	r0, #0
   14cc4:	beq	14f70 <sigaltstack@plt+0x36e4>
   14cc8:	mov	r4, r0
   14ccc:	bl	1161c <__ctype_get_mb_cur_max@plt>
   14cd0:	cmp	r0, #2
   14cd4:	bcc	14eb0 <sigaltstack@plt+0x3624>
   14cd8:	cmp	r5, #0
   14cdc:	beq	14d80 <sigaltstack@plt+0x34f4>
   14ce0:	str	r4, [sp, #24]
   14ce4:	mov	r0, r4
   14ce8:	bl	11700 <strlen@plt>
   14cec:	mov	r7, #0
   14cf0:	str	r7, [sp, #16]
   14cf4:	str	r7, [sp, #12]
   14cf8:	strb	r7, [sp, #20]
   14cfc:	strb	r7, [sp, #8]
   14d00:	add	r0, r4, r0
   14d04:	str	r0, [sp, #4]
   14d08:	ldr	r1, [sp, #24]
   14d0c:	cmp	r1, r0
   14d10:	bcs	14d5c <sigaltstack@plt+0x34d0>
   14d14:	add	r6, sp, #4
   14d18:	mov	r0, r6
   14d1c:	bl	15af4 <sigaltstack@plt+0x4268>
   14d20:	ldrb	r0, [sp, #32]
   14d24:	cmp	r0, #0
   14d28:	beq	14d5c <sigaltstack@plt+0x34d0>
   14d2c:	ldr	r0, [sp, #36]	; 0x24
   14d30:	bl	116e8 <iswspace@plt>
   14d34:	cmp	r0, #0
   14d38:	beq	14d5c <sigaltstack@plt+0x34d0>
   14d3c:	strb	r7, [sp, #20]
   14d40:	ldr	r0, [sp, #4]
   14d44:	ldr	r1, [sp, #24]
   14d48:	ldr	r2, [sp, #28]
   14d4c:	add	r1, r1, r2
   14d50:	str	r1, [sp, #24]
   14d54:	cmp	r1, r0
   14d58:	bcc	14d18 <sigaltstack@plt+0x348c>
   14d5c:	ldr	r6, [sp, #24]
   14d60:	mov	r0, r6
   14d64:	bl	11700 <strlen@plt>
   14d68:	add	r2, r0, #1
   14d6c:	mov	r0, r4
   14d70:	mov	r1, r6
   14d74:	bl	11508 <memmove@plt>
   14d78:	cmp	r5, #1
   14d7c:	beq	14f64 <sigaltstack@plt+0x36d8>
   14d80:	str	r4, [sp, #24]
   14d84:	mov	r0, r4
   14d88:	bl	11700 <strlen@plt>
   14d8c:	mov	r6, #0
   14d90:	str	r6, [sp, #16]
   14d94:	str	r6, [sp, #12]
   14d98:	strb	r6, [sp, #20]
   14d9c:	strb	r6, [sp, #8]
   14da0:	add	r0, r4, r0
   14da4:	str	r0, [sp, #4]
   14da8:	ldr	r1, [sp, #24]
   14dac:	cmp	r1, r0
   14db0:	bcs	14f64 <sigaltstack@plt+0x36d8>
   14db4:	add	r5, sp, #4
   14db8:	mov	r7, #0
   14dbc:	b	14de4 <sigaltstack@plt+0x3558>
   14dc0:	mov	r7, #1
   14dc4:	strb	r6, [sp, #20]
   14dc8:	ldr	r0, [sp, #4]
   14dcc:	ldr	r1, [sp, #24]
   14dd0:	ldr	r2, [sp, #28]
   14dd4:	add	r1, r1, r2
   14dd8:	str	r1, [sp, #24]
   14ddc:	cmp	r1, r0
   14de0:	bcs	14f58 <sigaltstack@plt+0x36cc>
   14de4:	mov	r0, r5
   14de8:	bl	15af4 <sigaltstack@plt+0x4268>
   14dec:	cmp	r7, #1
   14df0:	beq	14e24 <sigaltstack@plt+0x3598>
   14df4:	cmp	r7, #0
   14df8:	bne	14e6c <sigaltstack@plt+0x35e0>
   14dfc:	mov	r7, #1
   14e00:	ldrb	r0, [sp, #32]
   14e04:	cmp	r0, #0
   14e08:	beq	14dc4 <sigaltstack@plt+0x3538>
   14e0c:	ldr	r0, [sp, #36]	; 0x24
   14e10:	bl	116e8 <iswspace@plt>
   14e14:	cmp	r0, #0
   14e18:	beq	14e90 <sigaltstack@plt+0x3604>
   14e1c:	mov	r7, #0
   14e20:	b	14dc4 <sigaltstack@plt+0x3538>
   14e24:	mov	r7, #1
   14e28:	ldrb	r0, [sp, #32]
   14e2c:	cmp	r0, #0
   14e30:	beq	14dc4 <sigaltstack@plt+0x3538>
   14e34:	ldr	r0, [sp, #36]	; 0x24
   14e38:	bl	116e8 <iswspace@plt>
   14e3c:	cmp	r0, #0
   14e40:	beq	14dc4 <sigaltstack@plt+0x3538>
   14e44:	ldrb	r0, [sp, #32]
   14e48:	cmp	r0, #0
   14e4c:	beq	14dc0 <sigaltstack@plt+0x3534>
   14e50:	ldr	r0, [sp, #36]	; 0x24
   14e54:	bl	116e8 <iswspace@plt>
   14e58:	cmp	r0, #0
   14e5c:	beq	14dc0 <sigaltstack@plt+0x3534>
   14e60:	mov	r7, #2
   14e64:	ldr	r8, [sp, #24]
   14e68:	b	14dc4 <sigaltstack@plt+0x3538>
   14e6c:	ldrb	r0, [sp, #32]
   14e70:	cmp	r0, #0
   14e74:	beq	14dc0 <sigaltstack@plt+0x3534>
   14e78:	ldr	r0, [sp, #36]	; 0x24
   14e7c:	bl	116e8 <iswspace@plt>
   14e80:	mov	r7, #2
   14e84:	cmp	r0, #0
   14e88:	bne	14dc4 <sigaltstack@plt+0x3538>
   14e8c:	b	14dc0 <sigaltstack@plt+0x3534>
   14e90:	ldrb	r0, [sp, #32]
   14e94:	cmp	r0, #0
   14e98:	beq	14dc4 <sigaltstack@plt+0x3538>
   14e9c:	ldr	r0, [sp, #36]	; 0x24
   14ea0:	bl	116e8 <iswspace@plt>
   14ea4:	cmp	r0, #0
   14ea8:	movne	r7, #1
   14eac:	b	14dc4 <sigaltstack@plt+0x3538>
   14eb0:	cmp	r5, #0
   14eb4:	beq	14f10 <sigaltstack@plt+0x3684>
   14eb8:	ldrb	r7, [r4]
   14ebc:	cmp	r7, #0
   14ec0:	mov	r6, r4
   14ec4:	beq	14ef0 <sigaltstack@plt+0x3664>
   14ec8:	bl	116d0 <__ctype_b_loc@plt>
   14ecc:	ldr	r0, [r0]
   14ed0:	mov	r6, r4
   14ed4:	uxtb	r1, r7
   14ed8:	add	r1, r0, r1, lsl #1
   14edc:	ldrb	r1, [r1, #1]
   14ee0:	tst	r1, #32
   14ee4:	ldrbne	r7, [r6, #1]!
   14ee8:	cmpne	r7, #0
   14eec:	bne	14ed4 <sigaltstack@plt+0x3648>
   14ef0:	mov	r0, r6
   14ef4:	bl	11700 <strlen@plt>
   14ef8:	add	r2, r0, #1
   14efc:	mov	r0, r4
   14f00:	mov	r1, r6
   14f04:	bl	11508 <memmove@plt>
   14f08:	cmp	r5, #1
   14f0c:	beq	14f64 <sigaltstack@plt+0x36d8>
   14f10:	mov	r0, r4
   14f14:	bl	11700 <strlen@plt>
   14f18:	add	r0, r4, r0
   14f1c:	sub	r5, r0, #1
   14f20:	cmp	r5, r4
   14f24:	bcc	14f64 <sigaltstack@plt+0x36d8>
   14f28:	bl	116d0 <__ctype_b_loc@plt>
   14f2c:	mov	r1, #0
   14f30:	ldrb	r2, [r5]
   14f34:	ldr	r3, [r0]
   14f38:	add	r2, r3, r2, lsl #1
   14f3c:	ldrb	r2, [r2, #1]
   14f40:	tst	r2, #32
   14f44:	beq	14f64 <sigaltstack@plt+0x36d8>
   14f48:	strb	r1, [r5], #-1
   14f4c:	cmp	r5, r4
   14f50:	bcs	14f30 <sigaltstack@plt+0x36a4>
   14f54:	b	14f64 <sigaltstack@plt+0x36d8>
   14f58:	cmp	r7, #2
   14f5c:	moveq	r0, #0
   14f60:	strbeq	r0, [r8]
   14f64:	mov	r0, r4
   14f68:	sub	sp, fp, #24
   14f6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14f70:	bl	15794 <sigaltstack@plt+0x3f08>
   14f74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14f78:	add	fp, sp, #24
   14f7c:	sub	sp, sp, #32
   14f80:	mov	r4, r2
   14f84:	mov	r5, r0
   14f88:	ldr	r7, [fp, #12]
   14f8c:	ldr	r6, [fp, #8]
   14f90:	cmp	r1, #0
   14f94:	beq	14fb4 <sigaltstack@plt+0x3728>
   14f98:	mov	r2, r1
   14f9c:	str	r3, [sp]
   14fa0:	movw	r1, #34522	; 0x86da
   14fa4:	movt	r1, #1
   14fa8:	mov	r0, r5
   14fac:	mov	r3, r4
   14fb0:	b	14fc4 <sigaltstack@plt+0x3738>
   14fb4:	movw	r1, #34534	; 0x86e6
   14fb8:	movt	r1, #1
   14fbc:	mov	r0, r5
   14fc0:	mov	r2, r4
   14fc4:	bl	11724 <fprintf@plt>
   14fc8:	movw	r1, #34541	; 0x86ed
   14fcc:	movt	r1, #1
   14fd0:	mov	r0, #0
   14fd4:	mov	r2, #5
   14fd8:	bl	11574 <dcgettext@plt>
   14fdc:	mov	r2, r0
   14fe0:	movw	r1, #35299	; 0x89e3
   14fe4:	movt	r1, #1
   14fe8:	mov	r0, r5
   14fec:	movw	r3, #2021	; 0x7e5
   14ff0:	bl	11724 <fprintf@plt>
   14ff4:	movw	r4, #31353	; 0x7a79
   14ff8:	movt	r4, #1
   14ffc:	mov	r0, r4
   15000:	mov	r1, r5
   15004:	bl	114a8 <fputs_unlocked@plt>
   15008:	movw	r1, #34545	; 0x86f1
   1500c:	movt	r1, #1
   15010:	mov	r0, #0
   15014:	mov	r2, #5
   15018:	bl	11574 <dcgettext@plt>
   1501c:	mov	r1, r0
   15020:	movw	r2, #34716	; 0x879c
   15024:	movt	r2, #1
   15028:	mov	r0, r5
   1502c:	bl	11724 <fprintf@plt>
   15030:	mov	r0, r4
   15034:	mov	r1, r5
   15038:	bl	114a8 <fputs_unlocked@plt>
   1503c:	cmp	r7, #9
   15040:	bhi	1507c <sigaltstack@plt+0x37f0>
   15044:	add	r0, pc, #0
   15048:	ldr	pc, [r0, r7, lsl #2]
   1504c:	andeq	r5, r1, r4, ror r0
   15050:	andeq	r5, r1, r8, lsl #1
   15054:	strheq	r5, [r1], -r4
   15058:	andeq	r5, r1, r0, ror #1
   1505c:	andeq	r5, r1, r8, lsl #2
   15060:	andeq	r5, r1, r4, lsr r1
   15064:	andeq	r5, r1, r8, ror #2
   15068:	andeq	r5, r1, r8, lsr #3
   1506c:	andeq	r5, r1, r4, asr #4
   15070:	andeq	r5, r1, ip, ror #3
   15074:	sub	sp, fp, #24
   15078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1507c:	movw	r1, #35069	; 0x88fd
   15080:	movt	r1, #1
   15084:	b	151f4 <sigaltstack@plt+0x3968>
   15088:	movw	r1, #34750	; 0x87be
   1508c:	movt	r1, #1
   15090:	mov	r0, #0
   15094:	mov	r2, #5
   15098:	bl	11574 <dcgettext@plt>
   1509c:	mov	r1, r0
   150a0:	ldr	r2, [r6]
   150a4:	mov	r0, r5
   150a8:	sub	sp, fp, #24
   150ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   150b0:	b	11724 <fprintf@plt>
   150b4:	movw	r1, #34766	; 0x87ce
   150b8:	movt	r1, #1
   150bc:	mov	r0, #0
   150c0:	mov	r2, #5
   150c4:	bl	11574 <dcgettext@plt>
   150c8:	mov	r1, r0
   150cc:	ldm	r6, {r2, r3}
   150d0:	mov	r0, r5
   150d4:	sub	sp, fp, #24
   150d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   150dc:	b	11724 <fprintf@plt>
   150e0:	movw	r1, #34789	; 0x87e5
   150e4:	movt	r1, #1
   150e8:	mov	r0, #0
   150ec:	mov	r2, #5
   150f0:	bl	11574 <dcgettext@plt>
   150f4:	mov	r1, r0
   150f8:	ldm	r6, {r2, r3}
   150fc:	ldr	r0, [r6, #8]
   15100:	str	r0, [sp]
   15104:	b	151a0 <sigaltstack@plt+0x3914>
   15108:	movw	r1, #34817	; 0x8801
   1510c:	movt	r1, #1
   15110:	mov	r0, #0
   15114:	mov	r2, #5
   15118:	bl	11574 <dcgettext@plt>
   1511c:	mov	r1, r0
   15120:	ldm	r6, {r2, r3}
   15124:	ldr	r0, [r6, #8]
   15128:	ldr	r7, [r6, #12]
   1512c:	stm	sp, {r0, r7}
   15130:	b	151a0 <sigaltstack@plt+0x3914>
   15134:	movw	r1, #34849	; 0x8821
   15138:	movt	r1, #1
   1513c:	mov	r0, #0
   15140:	mov	r2, #5
   15144:	bl	11574 <dcgettext@plt>
   15148:	mov	r1, r0
   1514c:	ldm	r6, {r2, r3}
   15150:	ldr	r0, [r6, #8]
   15154:	ldr	r7, [r6, #12]
   15158:	ldr	r6, [r6, #16]
   1515c:	stm	sp, {r0, r7}
   15160:	str	r6, [sp, #8]
   15164:	b	151a0 <sigaltstack@plt+0x3914>
   15168:	movw	r1, #34885	; 0x8845
   1516c:	movt	r1, #1
   15170:	mov	r0, #0
   15174:	mov	r2, #5
   15178:	bl	11574 <dcgettext@plt>
   1517c:	mov	r1, r0
   15180:	ldm	r6, {r2, r3}
   15184:	ldr	r0, [r6, #8]
   15188:	ldr	r7, [r6, #12]
   1518c:	ldr	r4, [r6, #16]
   15190:	ldr	r6, [r6, #20]
   15194:	stm	sp, {r0, r7}
   15198:	str	r4, [sp, #8]
   1519c:	str	r6, [sp, #12]
   151a0:	mov	r0, r5
   151a4:	b	15294 <sigaltstack@plt+0x3a08>
   151a8:	movw	r1, #34925	; 0x886d
   151ac:	movt	r1, #1
   151b0:	mov	r0, #0
   151b4:	mov	r2, #5
   151b8:	bl	11574 <dcgettext@plt>
   151bc:	mov	ip, r0
   151c0:	ldm	r6, {r2, r3}
   151c4:	ldr	r0, [r6, #8]
   151c8:	ldr	r7, [r6, #12]
   151cc:	ldr	r4, [r6, #16]
   151d0:	ldr	r1, [r6, #20]
   151d4:	ldr	r6, [r6, #24]
   151d8:	stm	sp, {r0, r7}
   151dc:	str	r4, [sp, #8]
   151e0:	str	r1, [sp, #12]
   151e4:	str	r6, [sp, #16]
   151e8:	b	1528c <sigaltstack@plt+0x3a00>
   151ec:	movw	r1, #35017	; 0x88c9
   151f0:	movt	r1, #1
   151f4:	mov	r0, #0
   151f8:	mov	r2, #5
   151fc:	bl	11574 <dcgettext@plt>
   15200:	mov	ip, r0
   15204:	ldr	r2, [r6]
   15208:	ldr	r3, [r6, #4]
   1520c:	ldr	r0, [r6, #8]
   15210:	ldr	r7, [r6, #12]
   15214:	ldr	r4, [r6, #16]
   15218:	ldr	r1, [r6, #20]
   1521c:	ldr	lr, [r6, #24]
   15220:	ldr	r8, [r6, #28]
   15224:	ldr	r6, [r6, #32]
   15228:	stm	sp, {r0, r7}
   1522c:	str	r4, [sp, #8]
   15230:	str	r1, [sp, #12]
   15234:	str	lr, [sp, #16]
   15238:	str	r8, [sp, #20]
   1523c:	str	r6, [sp, #24]
   15240:	b	1528c <sigaltstack@plt+0x3a00>
   15244:	movw	r1, #34969	; 0x8899
   15248:	movt	r1, #1
   1524c:	mov	r0, #0
   15250:	mov	r2, #5
   15254:	bl	11574 <dcgettext@plt>
   15258:	mov	ip, r0
   1525c:	ldm	r6, {r2, r3}
   15260:	ldr	r0, [r6, #8]
   15264:	ldr	r7, [r6, #12]
   15268:	ldr	r4, [r6, #16]
   1526c:	ldr	r1, [r6, #20]
   15270:	ldr	lr, [r6, #24]
   15274:	ldr	r6, [r6, #28]
   15278:	stm	sp, {r0, r7}
   1527c:	str	r4, [sp, #8]
   15280:	str	r1, [sp, #12]
   15284:	str	lr, [sp, #16]
   15288:	str	r6, [sp, #20]
   1528c:	mov	r0, r5
   15290:	mov	r1, ip
   15294:	bl	11724 <fprintf@plt>
   15298:	sub	sp, fp, #24
   1529c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152a0:	push	{r4, sl, fp, lr}
   152a4:	add	fp, sp, #8
   152a8:	sub	sp, sp, #8
   152ac:	mov	lr, #0
   152b0:	ldr	ip, [fp, #8]
   152b4:	ldr	r4, [ip, lr, lsl #2]
   152b8:	add	lr, lr, #1
   152bc:	cmp	r4, #0
   152c0:	bne	152b4 <sigaltstack@plt+0x3a28>
   152c4:	sub	r4, lr, #1
   152c8:	str	ip, [sp]
   152cc:	str	r4, [sp, #4]
   152d0:	bl	14f74 <sigaltstack@plt+0x36e8>
   152d4:	sub	sp, fp, #8
   152d8:	pop	{r4, sl, fp, pc}
   152dc:	push	{r4, r5, fp, lr}
   152e0:	add	fp, sp, #8
   152e4:	sub	sp, sp, #48	; 0x30
   152e8:	mov	ip, #0
   152ec:	ldr	r4, [fp, #8]
   152f0:	add	lr, sp, #8
   152f4:	ldr	r5, [r4]
   152f8:	str	r5, [lr, ip, lsl #2]
   152fc:	cmp	r5, #0
   15300:	beq	15318 <sigaltstack@plt+0x3a8c>
   15304:	add	ip, ip, #1
   15308:	add	r4, r4, #4
   1530c:	cmp	ip, #10
   15310:	bne	152f4 <sigaltstack@plt+0x3a68>
   15314:	mov	ip, #10
   15318:	str	lr, [sp]
   1531c:	str	ip, [sp, #4]
   15320:	bl	14f74 <sigaltstack@plt+0x36e8>
   15324:	sub	sp, fp, #8
   15328:	pop	{r4, r5, fp, pc}
   1532c:	push	{fp, lr}
   15330:	mov	fp, sp
   15334:	sub	sp, sp, #8
   15338:	add	ip, fp, #8
   1533c:	str	ip, [sp, #4]
   15340:	str	ip, [sp]
   15344:	bl	152dc <sigaltstack@plt+0x3a50>
   15348:	mov	sp, fp
   1534c:	pop	{fp, pc}
   15350:	push	{fp, lr}
   15354:	mov	fp, sp
   15358:	movw	r0, #37276	; 0x919c
   1535c:	movt	r0, #2
   15360:	ldr	r1, [r0]
   15364:	movw	r0, #31353	; 0x7a79
   15368:	movt	r0, #1
   1536c:	bl	114a8 <fputs_unlocked@plt>
   15370:	movw	r1, #35129	; 0x8939
   15374:	movt	r1, #1
   15378:	mov	r0, #0
   1537c:	mov	r2, #5
   15380:	bl	11574 <dcgettext@plt>
   15384:	movw	r1, #35149	; 0x894d
   15388:	movt	r1, #1
   1538c:	bl	114e4 <printf@plt>
   15390:	movw	r1, #35171	; 0x8963
   15394:	movt	r1, #1
   15398:	mov	r0, #0
   1539c:	mov	r2, #5
   153a0:	bl	11574 <dcgettext@plt>
   153a4:	movw	r1, #30854	; 0x7886
   153a8:	movt	r1, #1
   153ac:	movw	r2, #35191	; 0x8977
   153b0:	movt	r2, #1
   153b4:	bl	114e4 <printf@plt>
   153b8:	movw	r1, #35231	; 0x899f
   153bc:	movt	r1, #1
   153c0:	mov	r0, #0
   153c4:	mov	r2, #5
   153c8:	bl	11574 <dcgettext@plt>
   153cc:	movw	r1, #35270	; 0x89c6
   153d0:	movt	r1, #1
   153d4:	pop	{fp, lr}
   153d8:	b	114e4 <printf@plt>
   153dc:	mov	r2, r1
   153e0:	mov	r1, r0
   153e4:	mov	r0, #0
   153e8:	b	153ec <sigaltstack@plt+0x3b60>
   153ec:	push	{r4, r5, r6, sl, fp, lr}
   153f0:	add	fp, sp, #16
   153f4:	mov	r4, r2
   153f8:	mov	r5, r1
   153fc:	mov	r6, r0
   15400:	bl	159d0 <sigaltstack@plt+0x4144>
   15404:	cmp	r0, #0
   15408:	popne	{r4, r5, r6, sl, fp, pc}
   1540c:	cmp	r6, #0
   15410:	beq	15424 <sigaltstack@plt+0x3b98>
   15414:	cmp	r5, #0
   15418:	cmpne	r4, #0
   1541c:	bne	15424 <sigaltstack@plt+0x3b98>
   15420:	pop	{r4, r5, r6, sl, fp, pc}
   15424:	bl	15794 <sigaltstack@plt+0x3f08>
   15428:	b	153ec <sigaltstack@plt+0x3b60>
   1542c:	b	15430 <sigaltstack@plt+0x3ba4>
   15430:	push	{fp, lr}
   15434:	mov	fp, sp
   15438:	bl	1594c <sigaltstack@plt+0x40c0>
   1543c:	pop	{fp, lr}
   15440:	b	15444 <sigaltstack@plt+0x3bb8>
   15444:	cmp	r0, #0
   15448:	bxne	lr
   1544c:	push	{fp, lr}
   15450:	mov	fp, sp
   15454:	bl	15794 <sigaltstack@plt+0x3f08>
   15458:	push	{fp, lr}
   1545c:	mov	fp, sp
   15460:	bl	15a88 <sigaltstack@plt+0x41fc>
   15464:	pop	{fp, lr}
   15468:	b	15444 <sigaltstack@plt+0x3bb8>
   1546c:	push	{r4, r5, fp, lr}
   15470:	add	fp, sp, #8
   15474:	mov	r4, r1
   15478:	mov	r5, r0
   1547c:	bl	1597c <sigaltstack@plt+0x40f0>
   15480:	cmp	r0, #0
   15484:	popne	{r4, r5, fp, pc}
   15488:	cmp	r5, #0
   1548c:	beq	1549c <sigaltstack@plt+0x3c10>
   15490:	cmp	r4, #0
   15494:	bne	1549c <sigaltstack@plt+0x3c10>
   15498:	pop	{r4, r5, fp, pc}
   1549c:	bl	15794 <sigaltstack@plt+0x3f08>
   154a0:	push	{fp, lr}
   154a4:	mov	fp, sp
   154a8:	bl	15a8c <sigaltstack@plt+0x4200>
   154ac:	pop	{fp, lr}
   154b0:	b	15444 <sigaltstack@plt+0x3bb8>
   154b4:	push	{fp, lr}
   154b8:	mov	fp, sp
   154bc:	bl	15a9c <sigaltstack@plt+0x4210>
   154c0:	pop	{fp, lr}
   154c4:	b	15444 <sigaltstack@plt+0x3bb8>
   154c8:	mov	r2, #1
   154cc:	b	154d0 <sigaltstack@plt+0x3c44>
   154d0:	push	{r4, r5, fp, lr}
   154d4:	add	fp, sp, #8
   154d8:	mov	r4, r1
   154dc:	ldr	r5, [r1]
   154e0:	cmp	r0, #0
   154e4:	beq	154fc <sigaltstack@plt+0x3c70>
   154e8:	mov	r1, #1
   154ec:	add	r1, r1, r5, lsr #1
   154f0:	adds	r5, r5, r1
   154f4:	bcc	15514 <sigaltstack@plt+0x3c88>
   154f8:	bl	15794 <sigaltstack@plt+0x3f08>
   154fc:	cmp	r5, #0
   15500:	bne	15514 <sigaltstack@plt+0x3c88>
   15504:	mov	r1, #64	; 0x40
   15508:	udiv	r5, r1, r2
   1550c:	cmp	r2, #64	; 0x40
   15510:	addhi	r5, r5, #1
   15514:	mov	r1, r5
   15518:	bl	153ec <sigaltstack@plt+0x3b60>
   1551c:	str	r5, [r4]
   15520:	pop	{r4, r5, fp, pc}
   15524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15528:	add	fp, sp, #24
   1552c:	mov	r8, r1
   15530:	ldr	r6, [r1]
   15534:	add	r1, r6, r6, asr #1
   15538:	cmp	r1, r6
   1553c:	mvnvs	r1, #-2147483648	; 0x80000000
   15540:	cmp	r1, r3
   15544:	mov	r5, r1
   15548:	movgt	r5, r3
   1554c:	cmn	r3, #1
   15550:	movle	r5, r1
   15554:	ldr	r4, [fp, #8]
   15558:	cmn	r4, #1
   1555c:	ble	15584 <sigaltstack@plt+0x3cf8>
   15560:	cmp	r4, #0
   15564:	beq	155d8 <sigaltstack@plt+0x3d4c>
   15568:	cmn	r5, #1
   1556c:	ble	155ac <sigaltstack@plt+0x3d20>
   15570:	mvn	r7, #-2147483648	; 0x80000000
   15574:	udiv	r1, r7, r4
   15578:	cmp	r1, r5
   1557c:	bge	155d8 <sigaltstack@plt+0x3d4c>
   15580:	b	155e8 <sigaltstack@plt+0x3d5c>
   15584:	cmn	r5, #1
   15588:	ble	155c8 <sigaltstack@plt+0x3d3c>
   1558c:	cmn	r4, #1
   15590:	beq	155d8 <sigaltstack@plt+0x3d4c>
   15594:	mov	r1, #-2147483648	; 0x80000000
   15598:	sdiv	r1, r1, r4
   1559c:	mvn	r7, #-2147483648	; 0x80000000
   155a0:	cmp	r1, r5
   155a4:	bge	155d8 <sigaltstack@plt+0x3d4c>
   155a8:	b	155e8 <sigaltstack@plt+0x3d5c>
   155ac:	beq	155d8 <sigaltstack@plt+0x3d4c>
   155b0:	mov	r1, #-2147483648	; 0x80000000
   155b4:	sdiv	r1, r1, r5
   155b8:	mvn	r7, #-2147483648	; 0x80000000
   155bc:	cmp	r1, r4
   155c0:	bge	155d8 <sigaltstack@plt+0x3d4c>
   155c4:	b	155e8 <sigaltstack@plt+0x3d5c>
   155c8:	mvn	r7, #-2147483648	; 0x80000000
   155cc:	sdiv	r1, r7, r4
   155d0:	cmp	r5, r1
   155d4:	blt	155e8 <sigaltstack@plt+0x3d5c>
   155d8:	mul	r1, r5, r4
   155dc:	mov	r7, #64	; 0x40
   155e0:	cmp	r1, #63	; 0x3f
   155e4:	bgt	155f0 <sigaltstack@plt+0x3d64>
   155e8:	sdiv	r5, r7, r4
   155ec:	mul	r1, r5, r4
   155f0:	cmp	r0, #0
   155f4:	moveq	r7, #0
   155f8:	streq	r7, [r8]
   155fc:	sub	r7, r5, r6
   15600:	cmp	r7, r2
   15604:	bge	156b0 <sigaltstack@plt+0x3e24>
   15608:	add	r5, r6, r2
   1560c:	mov	r1, #0
   15610:	cmp	r5, r3
   15614:	mov	r2, #0
   15618:	movwgt	r2, #1
   1561c:	cmn	r3, #1
   15620:	movwgt	r1, #1
   15624:	cmp	r5, r6
   15628:	bvs	15698 <sigaltstack@plt+0x3e0c>
   1562c:	ands	r1, r1, r2
   15630:	bne	15698 <sigaltstack@plt+0x3e0c>
   15634:	cmn	r4, #1
   15638:	ble	15660 <sigaltstack@plt+0x3dd4>
   1563c:	cmp	r4, #0
   15640:	beq	156ac <sigaltstack@plt+0x3e20>
   15644:	cmn	r5, #1
   15648:	ble	15684 <sigaltstack@plt+0x3df8>
   1564c:	mvn	r1, #-2147483648	; 0x80000000
   15650:	udiv	r1, r1, r4
   15654:	cmp	r1, r5
   15658:	bge	156ac <sigaltstack@plt+0x3e20>
   1565c:	b	15698 <sigaltstack@plt+0x3e0c>
   15660:	cmn	r5, #1
   15664:	ble	1569c <sigaltstack@plt+0x3e10>
   15668:	cmn	r4, #1
   1566c:	beq	156ac <sigaltstack@plt+0x3e20>
   15670:	mov	r1, #-2147483648	; 0x80000000
   15674:	sdiv	r1, r1, r4
   15678:	cmp	r1, r5
   1567c:	bge	156ac <sigaltstack@plt+0x3e20>
   15680:	b	15698 <sigaltstack@plt+0x3e0c>
   15684:	beq	156ac <sigaltstack@plt+0x3e20>
   15688:	mov	r1, #-2147483648	; 0x80000000
   1568c:	sdiv	r1, r1, r5
   15690:	cmp	r1, r4
   15694:	bge	156ac <sigaltstack@plt+0x3e20>
   15698:	bl	15794 <sigaltstack@plt+0x3f08>
   1569c:	mvn	r1, #-2147483648	; 0x80000000
   156a0:	sdiv	r1, r1, r4
   156a4:	cmp	r5, r1
   156a8:	blt	15698 <sigaltstack@plt+0x3e0c>
   156ac:	mul	r1, r5, r4
   156b0:	bl	1546c <sigaltstack@plt+0x3be0>
   156b4:	str	r5, [r8]
   156b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156bc:	mov	r1, #1
   156c0:	b	156c4 <sigaltstack@plt+0x3e38>
   156c4:	push	{fp, lr}
   156c8:	mov	fp, sp
   156cc:	bl	158d0 <sigaltstack@plt+0x4044>
   156d0:	pop	{fp, lr}
   156d4:	b	15444 <sigaltstack@plt+0x3bb8>
   156d8:	mov	r1, #1
   156dc:	b	156e0 <sigaltstack@plt+0x3e54>
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	bl	15a98 <sigaltstack@plt+0x420c>
   156ec:	pop	{fp, lr}
   156f0:	b	15444 <sigaltstack@plt+0x3bb8>
   156f4:	push	{r4, r5, fp, lr}
   156f8:	add	fp, sp, #8
   156fc:	mov	r4, r1
   15700:	mov	r5, r0
   15704:	mov	r0, r1
   15708:	bl	15430 <sigaltstack@plt+0x3ba4>
   1570c:	mov	r1, r5
   15710:	mov	r2, r4
   15714:	pop	{r4, r5, fp, lr}
   15718:	b	1152c <memcpy@plt>
   1571c:	push	{r4, r5, fp, lr}
   15720:	add	fp, sp, #8
   15724:	mov	r4, r1
   15728:	mov	r5, r0
   1572c:	mov	r0, r1
   15730:	bl	15458 <sigaltstack@plt+0x3bcc>
   15734:	mov	r1, r5
   15738:	mov	r2, r4
   1573c:	pop	{r4, r5, fp, lr}
   15740:	b	1152c <memcpy@plt>
   15744:	push	{r4, r5, fp, lr}
   15748:	add	fp, sp, #8
   1574c:	mov	r4, r1
   15750:	mov	r5, r0
   15754:	add	r0, r1, #1
   15758:	bl	15458 <sigaltstack@plt+0x3bcc>
   1575c:	mov	r1, #0
   15760:	strb	r1, [r0, r4]
   15764:	mov	r1, r5
   15768:	mov	r2, r4
   1576c:	pop	{r4, r5, fp, lr}
   15770:	b	1152c <memcpy@plt>
   15774:	push	{r4, sl, fp, lr}
   15778:	add	fp, sp, #8
   1577c:	mov	r4, r0
   15780:	bl	11700 <strlen@plt>
   15784:	add	r1, r0, #1
   15788:	mov	r0, r4
   1578c:	pop	{r4, sl, fp, lr}
   15790:	b	156f4 <sigaltstack@plt+0x3e68>
   15794:	push	{fp, lr}
   15798:	mov	fp, sp
   1579c:	movw	r0, #37240	; 0x9178
   157a0:	movt	r0, #2
   157a4:	ldr	r4, [r0]
   157a8:	movw	r1, #35346	; 0x8a12
   157ac:	movt	r1, #1
   157b0:	mov	r0, #0
   157b4:	mov	r2, #5
   157b8:	bl	11574 <dcgettext@plt>
   157bc:	mov	r3, r0
   157c0:	movw	r2, #32986	; 0x80da
   157c4:	movt	r2, #1
   157c8:	mov	r0, r4
   157cc:	mov	r1, #0
   157d0:	bl	11640 <error@plt>
   157d4:	bl	11850 <abort@plt>
   157d8:	push	{r4, r5, fp, lr}
   157dc:	add	fp, sp, #8
   157e0:	bl	168d4 <sigaltstack@plt+0x5048>
   157e4:	cmp	r0, #0
   157e8:	popeq	{r4, r5, fp, pc}
   157ec:	mov	r4, r0
   157f0:	movw	r0, #37240	; 0x9178
   157f4:	movt	r0, #2
   157f8:	ldr	r5, [r0]
   157fc:	movw	r1, #35363	; 0x8a23
   15800:	movt	r1, #1
   15804:	mov	r0, #0
   15808:	mov	r2, #5
   1580c:	bl	11574 <dcgettext@plt>
   15810:	mov	r2, r0
   15814:	mov	r0, r5
   15818:	mov	r1, r4
   1581c:	pop	{r4, r5, fp, lr}
   15820:	b	11640 <error@plt>
   15824:	push	{r4, sl, fp, lr}
   15828:	add	fp, sp, #8
   1582c:	sub	sp, sp, #8
   15830:	ldr	r4, [fp, #8]
   15834:	str	r4, [sp]
   15838:	bl	16978 <sigaltstack@plt+0x50ec>
   1583c:	mov	r4, r0
   15840:	cmn	r0, #1
   15844:	bgt	15858 <sigaltstack@plt+0x3fcc>
   15848:	bl	1173c <__errno_location@plt>
   1584c:	ldr	r0, [r0]
   15850:	cmp	r0, #12
   15854:	beq	15864 <sigaltstack@plt+0x3fd8>
   15858:	mov	r0, r4
   1585c:	sub	sp, fp, #8
   15860:	pop	{r4, sl, fp, pc}
   15864:	bl	15794 <sigaltstack@plt+0x3f08>
   15868:	push	{r4, sl, fp, lr}
   1586c:	add	fp, sp, #8
   15870:	bl	16bf0 <sigaltstack@plt+0x5364>
   15874:	mov	r4, r0
   15878:	cmp	r0, #0
   1587c:	bne	15890 <sigaltstack@plt+0x4004>
   15880:	bl	1173c <__errno_location@plt>
   15884:	ldr	r0, [r0]
   15888:	cmp	r0, #12
   1588c:	beq	15898 <sigaltstack@plt+0x400c>
   15890:	mov	r0, r4
   15894:	pop	{r4, sl, fp, pc}
   15898:	bl	15794 <sigaltstack@plt+0x3f08>
   1589c:	push	{r4, sl, fp, lr}
   158a0:	add	fp, sp, #8
   158a4:	bl	16e20 <sigaltstack@plt+0x5594>
   158a8:	mov	r4, r0
   158ac:	cmp	r0, #0
   158b0:	bne	158c4 <sigaltstack@plt+0x4038>
   158b4:	bl	1173c <__errno_location@plt>
   158b8:	ldr	r0, [r0]
   158bc:	cmp	r0, #12
   158c0:	beq	158cc <sigaltstack@plt+0x4040>
   158c4:	mov	r0, r4
   158c8:	pop	{r4, sl, fp, pc}
   158cc:	bl	15794 <sigaltstack@plt+0x3f08>
   158d0:	clz	r2, r1
   158d4:	lsr	r2, r2, #5
   158d8:	clz	r3, r0
   158dc:	lsr	r3, r3, #5
   158e0:	orrs	r2, r3, r2
   158e4:	movwne	r1, #1
   158e8:	movwne	r0, #1
   158ec:	cmp	r1, #0
   158f0:	beq	15920 <sigaltstack@plt+0x4094>
   158f4:	mvn	r2, #-2147483648	; 0x80000000
   158f8:	udiv	r2, r2, r1
   158fc:	cmp	r2, r0
   15900:	bcs	15920 <sigaltstack@plt+0x4094>
   15904:	push	{fp, lr}
   15908:	mov	fp, sp
   1590c:	bl	1173c <__errno_location@plt>
   15910:	mov	r1, #12
   15914:	str	r1, [r0]
   15918:	mov	r0, #0
   1591c:	pop	{fp, pc}
   15920:	b	1149c <calloc@plt>
   15924:	push	{r4, r5, r6, sl, fp, lr}
   15928:	add	fp, sp, #16
   1592c:	mov	r4, r0
   15930:	bl	1173c <__errno_location@plt>
   15934:	mov	r5, r0
   15938:	ldr	r6, [r0]
   1593c:	mov	r0, r4
   15940:	bl	11514 <free@plt>
   15944:	str	r6, [r5]
   15948:	pop	{r4, r5, r6, sl, fp, pc}
   1594c:	cmp	r0, #0
   15950:	movweq	r0, #1
   15954:	cmn	r0, #1
   15958:	ble	15960 <sigaltstack@plt+0x40d4>
   1595c:	b	1167c <malloc@plt>
   15960:	push	{fp, lr}
   15964:	mov	fp, sp
   15968:	bl	1173c <__errno_location@plt>
   1596c:	mov	r1, #12
   15970:	str	r1, [r0]
   15974:	mov	r0, #0
   15978:	pop	{fp, pc}
   1597c:	push	{fp, lr}
   15980:	mov	fp, sp
   15984:	cmp	r0, #0
   15988:	beq	159a4 <sigaltstack@plt+0x4118>
   1598c:	cmp	r1, #0
   15990:	beq	159b0 <sigaltstack@plt+0x4124>
   15994:	cmn	r1, #1
   15998:	ble	159bc <sigaltstack@plt+0x4130>
   1599c:	pop	{fp, lr}
   159a0:	b	115a4 <realloc@plt>
   159a4:	mov	r0, r1
   159a8:	pop	{fp, lr}
   159ac:	b	1594c <sigaltstack@plt+0x40c0>
   159b0:	bl	15924 <sigaltstack@plt+0x4098>
   159b4:	mov	r0, #0
   159b8:	pop	{fp, pc}
   159bc:	bl	1173c <__errno_location@plt>
   159c0:	mov	r1, #12
   159c4:	str	r1, [r0]
   159c8:	mov	r0, #0
   159cc:	pop	{fp, pc}
   159d0:	cmp	r2, #0
   159d4:	beq	15a04 <sigaltstack@plt+0x4178>
   159d8:	mvn	r3, #0
   159dc:	udiv	r3, r3, r2
   159e0:	cmp	r3, r1
   159e4:	bcs	15a04 <sigaltstack@plt+0x4178>
   159e8:	push	{fp, lr}
   159ec:	mov	fp, sp
   159f0:	bl	1173c <__errno_location@plt>
   159f4:	mov	r1, #12
   159f8:	str	r1, [r0]
   159fc:	mov	r0, #0
   15a00:	pop	{fp, pc}
   15a04:	mul	r1, r2, r1
   15a08:	b	1597c <sigaltstack@plt+0x40f0>
   15a0c:	push	{r4, r5, r6, sl, fp, lr}
   15a10:	add	fp, sp, #16
   15a14:	cmp	r0, r1
   15a18:	beq	15a64 <sigaltstack@plt+0x41d8>
   15a1c:	mov	r4, r1
   15a20:	mov	r5, r0
   15a24:	ldrb	r0, [r5]
   15a28:	bl	17480 <sigaltstack@plt+0x5bf4>
   15a2c:	mov	r6, r0
   15a30:	ldrb	r0, [r4]
   15a34:	bl	17480 <sigaltstack@plt+0x5bf4>
   15a38:	uxtb	r1, r6
   15a3c:	cmp	r1, #0
   15a40:	beq	15a58 <sigaltstack@plt+0x41cc>
   15a44:	add	r4, r4, #1
   15a48:	add	r5, r5, #1
   15a4c:	uxtb	r2, r0
   15a50:	cmp	r1, r2
   15a54:	beq	15a24 <sigaltstack@plt+0x4198>
   15a58:	uxtb	r0, r0
   15a5c:	sub	r0, r1, r0
   15a60:	pop	{r4, r5, r6, sl, fp, pc}
   15a64:	mov	r0, #0
   15a68:	pop	{r4, r5, r6, sl, fp, pc}
   15a6c:	push	{fp, lr}
   15a70:	mov	fp, sp
   15a74:	bl	1173c <__errno_location@plt>
   15a78:	mov	r1, #12
   15a7c:	str	r1, [r0]
   15a80:	mov	r0, #0
   15a84:	pop	{fp, pc}
   15a88:	b	1594c <sigaltstack@plt+0x40c0>
   15a8c:	cmp	r1, #0
   15a90:	orreq	r1, r1, #1
   15a94:	b	1597c <sigaltstack@plt+0x40f0>
   15a98:	b	158d0 <sigaltstack@plt+0x4044>
   15a9c:	clz	r3, r2
   15aa0:	lsr	ip, r3, #5
   15aa4:	clz	r3, r1
   15aa8:	lsr	r3, r3, #5
   15aac:	orrs	r3, r3, ip
   15ab0:	movwne	r1, #1
   15ab4:	movwne	r2, #1
   15ab8:	b	159d0 <sigaltstack@plt+0x4144>
   15abc:	push	{fp, lr}
   15ac0:	mov	fp, sp
   15ac4:	mov	r0, #14
   15ac8:	bl	117e4 <nl_langinfo@plt>
   15acc:	movw	r1, #31354	; 0x7a7a
   15ad0:	movt	r1, #1
   15ad4:	cmp	r0, #0
   15ad8:	movne	r1, r0
   15adc:	ldrb	r2, [r1]
   15ae0:	movw	r0, #35389	; 0x8a3d
   15ae4:	movt	r0, #1
   15ae8:	cmp	r2, #0
   15aec:	movne	r0, r1
   15af0:	pop	{fp, pc}
   15af4:	push	{r4, r5, r6, sl, fp, lr}
   15af8:	add	fp, sp, #16
   15afc:	mov	r4, r0
   15b00:	ldrb	r0, [r0, #16]
   15b04:	cmp	r0, #0
   15b08:	popne	{r4, r5, r6, sl, fp, pc}
   15b0c:	ldrb	r0, [r4, #4]
   15b10:	cmp	r0, #0
   15b14:	bne	15b60 <sigaltstack@plt+0x42d4>
   15b18:	ldr	r0, [r4, #20]
   15b1c:	ldrb	r0, [r0]
   15b20:	bl	17624 <sigaltstack@plt+0x5d98>
   15b24:	cmp	r0, #0
   15b28:	beq	15b48 <sigaltstack@plt+0x42bc>
   15b2c:	mov	r0, #1
   15b30:	str	r0, [r4, #24]
   15b34:	ldr	r1, [r4, #20]
   15b38:	ldrb	r1, [r1]
   15b3c:	strb	r0, [r4, #28]
   15b40:	str	r1, [r4, #32]
   15b44:	b	15c08 <sigaltstack@plt+0x437c>
   15b48:	add	r0, r4, #8
   15b4c:	bl	11550 <mbsinit@plt>
   15b50:	cmp	r0, #0
   15b54:	beq	15c14 <sigaltstack@plt+0x4388>
   15b58:	mov	r0, #1
   15b5c:	strb	r0, [r4, #4]
   15b60:	ldr	r0, [r4]
   15b64:	ldr	r1, [r4, #20]
   15b68:	add	r6, r4, #32
   15b6c:	add	r5, r4, #8
   15b70:	sub	r2, r0, r1
   15b74:	mov	r0, r6
   15b78:	mov	r3, r5
   15b7c:	bl	17118 <sigaltstack@plt+0x588c>
   15b80:	str	r0, [r4, #24]
   15b84:	cmn	r0, #2
   15b88:	beq	15bf0 <sigaltstack@plt+0x4364>
   15b8c:	cmp	r0, #0
   15b90:	beq	15bac <sigaltstack@plt+0x4320>
   15b94:	cmn	r0, #1
   15b98:	bne	15bd0 <sigaltstack@plt+0x4344>
   15b9c:	mov	r0, #0
   15ba0:	strb	r0, [r4, #28]
   15ba4:	mov	r0, #1
   15ba8:	b	15c04 <sigaltstack@plt+0x4378>
   15bac:	mov	r0, #1
   15bb0:	str	r0, [r4, #24]
   15bb4:	ldr	r0, [r4, #20]
   15bb8:	ldrb	r0, [r0]
   15bbc:	cmp	r0, #0
   15bc0:	bne	15c34 <sigaltstack@plt+0x43a8>
   15bc4:	ldr	r0, [r6]
   15bc8:	cmp	r0, #0
   15bcc:	bne	15c54 <sigaltstack@plt+0x43c8>
   15bd0:	mov	r0, #1
   15bd4:	strb	r0, [r4, #28]
   15bd8:	mov	r0, r5
   15bdc:	bl	11550 <mbsinit@plt>
   15be0:	cmp	r0, #0
   15be4:	movne	r0, #0
   15be8:	strbne	r0, [r4, #4]
   15bec:	b	15c08 <sigaltstack@plt+0x437c>
   15bf0:	mov	r0, #0
   15bf4:	strb	r0, [r4, #28]
   15bf8:	ldr	r0, [r4]
   15bfc:	ldr	r1, [r4, #20]
   15c00:	sub	r0, r0, r1
   15c04:	str	r0, [r4, #24]
   15c08:	mov	r0, #1
   15c0c:	strb	r0, [r4, #16]
   15c10:	pop	{r4, r5, r6, sl, fp, pc}
   15c14:	movw	r0, #34253	; 0x85cd
   15c18:	movt	r0, #1
   15c1c:	movw	r1, #34465	; 0x86a1
   15c20:	movt	r1, #1
   15c24:	movw	r3, #34476	; 0x86ac
   15c28:	movt	r3, #1
   15c2c:	mov	r2, #135	; 0x87
   15c30:	bl	11880 <__assert_fail@plt>
   15c34:	movw	r0, #34336	; 0x8620
   15c38:	movt	r0, #1
   15c3c:	movw	r1, #34465	; 0x86a1
   15c40:	movt	r1, #1
   15c44:	movw	r3, #34476	; 0x86ac
   15c48:	movt	r3, #1
   15c4c:	mov	r2, #162	; 0xa2
   15c50:	bl	11880 <__assert_fail@plt>
   15c54:	movw	r0, #34359	; 0x8637
   15c58:	movt	r0, #1
   15c5c:	movw	r1, #34465	; 0x86a1
   15c60:	movt	r1, #1
   15c64:	movw	r3, #34476	; 0x86ac
   15c68:	movt	r3, #1
   15c6c:	mov	r2, #163	; 0xa3
   15c70:	bl	11880 <__assert_fail@plt>
   15c74:	ldr	r2, [r0]
   15c78:	ldr	r3, [r0, #20]
   15c7c:	add	r3, r3, r1
   15c80:	str	r3, [r0, #20]
   15c84:	add	r1, r2, r1
   15c88:	str	r1, [r0]
   15c8c:	bx	lr
   15c90:	ldr	r2, [r1]
   15c94:	str	r2, [r0]
   15c98:	ldrb	r3, [r1, #4]
   15c9c:	strb	r3, [r0, #4]
   15ca0:	add	r2, r0, #8
   15ca4:	cmp	r3, #0
   15ca8:	beq	15cbc <sigaltstack@plt+0x4430>
   15cac:	ldr	r3, [r1, #8]
   15cb0:	ldr	ip, [r1, #12]
   15cb4:	stm	r2, {r3, ip}
   15cb8:	b	15cc8 <sigaltstack@plt+0x443c>
   15cbc:	mov	r3, #0
   15cc0:	str	r3, [r2]
   15cc4:	str	r3, [r2, #4]
   15cc8:	ldrb	r2, [r1, #16]
   15ccc:	strb	r2, [r0, #16]
   15cd0:	add	r0, r0, #20
   15cd4:	add	r1, r1, #20
   15cd8:	b	175d4 <sigaltstack@plt+0x5d48>
   15cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ce0:	add	fp, sp, #28
   15ce4:	sub	sp, sp, #300	; 0x12c
   15ce8:	mov	r5, r1
   15cec:	mov	r6, r0
   15cf0:	bl	1161c <__ctype_get_mb_cur_max@plt>
   15cf4:	cmp	r0, #2
   15cf8:	bcc	1608c <sigaltstack@plt+0x4800>
   15cfc:	mov	r4, #0
   15d00:	str	r4, [fp, #-80]	; 0xffffffb0
   15d04:	str	r4, [fp, #-84]	; 0xffffffac
   15d08:	strb	r4, [fp, #-76]	; 0xffffffb4
   15d0c:	strb	r4, [fp, #-88]	; 0xffffffa8
   15d10:	str	r5, [fp, #-72]	; 0xffffffb8
   15d14:	sub	r0, fp, #88	; 0x58
   15d18:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15d1c:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15d20:	cmp	r0, #0
   15d24:	beq	15d34 <sigaltstack@plt+0x44a8>
   15d28:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15d2c:	cmp	r0, #0
   15d30:	beq	1618c <sigaltstack@plt+0x4900>
   15d34:	str	r4, [fp, #-136]	; 0xffffff78
   15d38:	str	r4, [fp, #-140]	; 0xffffff74
   15d3c:	str	r5, [fp, #-128]	; 0xffffff80
   15d40:	strb	r4, [fp, #-132]	; 0xffffff7c
   15d44:	strb	r4, [fp, #-144]	; 0xffffff70
   15d48:	str	r4, [sp, #136]	; 0x88
   15d4c:	str	r4, [sp, #132]	; 0x84
   15d50:	str	r6, [sp, #144]	; 0x90
   15d54:	strb	r4, [sp, #140]	; 0x8c
   15d58:	strb	r4, [sp, #128]	; 0x80
   15d5c:	add	r7, sp, #128	; 0x80
   15d60:	mov	r0, r7
   15d64:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15d68:	ldrb	r0, [sp, #152]	; 0x98
   15d6c:	cmp	r0, #0
   15d70:	beq	15d80 <sigaltstack@plt+0x44f4>
   15d74:	ldr	r0, [sp, #156]	; 0x9c
   15d78:	cmp	r0, #0
   15d7c:	beq	16198 <sigaltstack@plt+0x490c>
   15d80:	add	r0, sp, #16
   15d84:	add	r0, r0, #4
   15d88:	str	r0, [sp, #4]
   15d8c:	mov	r0, #1
   15d90:	str	r0, [sp, #8]
   15d94:	mov	r8, #0
   15d98:	add	r0, r7, #16
   15d9c:	str	r0, [sp]
   15da0:	mov	r0, #0
   15da4:	str	r0, [sp, #12]
   15da8:	mov	sl, #0
   15dac:	mov	r9, #0
   15db0:	mov	r4, sl
   15db4:	add	r0, r9, r9, lsl #2
   15db8:	cmp	sl, r0
   15dbc:	bcc	15e80 <sigaltstack@plt+0x45f4>
   15dc0:	ldr	r0, [sp, #8]
   15dc4:	tst	r0, #1
   15dc8:	beq	15e80 <sigaltstack@plt+0x45f4>
   15dcc:	cmp	r9, #10
   15dd0:	bcc	15e80 <sigaltstack@plt+0x45f4>
   15dd4:	mov	sl, r7
   15dd8:	ldr	r1, [sp, #12]
   15ddc:	subs	r0, r4, r1
   15de0:	beq	15e28 <sigaltstack@plt+0x459c>
   15de4:	sub	r7, r1, r4
   15de8:	b	15e08 <sigaltstack@plt+0x457c>
   15dec:	strb	r8, [fp, #-132]	; 0xffffff7c
   15df0:	ldr	r0, [fp, #-128]	; 0xffffff80
   15df4:	ldr	r1, [fp, #-124]	; 0xffffff84
   15df8:	add	r0, r0, r1
   15dfc:	str	r0, [fp, #-128]	; 0xffffff80
   15e00:	adds	r7, r7, #1
   15e04:	bcs	15e28 <sigaltstack@plt+0x459c>
   15e08:	sub	r0, fp, #144	; 0x90
   15e0c:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15e10:	ldrb	r0, [fp, #-120]	; 0xffffff88
   15e14:	cmp	r0, #0
   15e18:	beq	15dec <sigaltstack@plt+0x4560>
   15e1c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15e20:	cmp	r0, #0
   15e24:	bne	15dec <sigaltstack@plt+0x4560>
   15e28:	sub	r0, fp, #144	; 0x90
   15e2c:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15e30:	ldrb	r0, [fp, #-120]	; 0xffffff88
   15e34:	cmp	r0, #0
   15e38:	beq	15e78 <sigaltstack@plt+0x45ec>
   15e3c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15e40:	cmp	r0, #0
   15e44:	str	r4, [sp, #12]
   15e48:	mov	r7, sl
   15e4c:	bne	15e80 <sigaltstack@plt+0x45f4>
   15e50:	mov	r0, r6
   15e54:	mov	r1, r5
   15e58:	add	r2, sp, #72	; 0x48
   15e5c:	bl	161c0 <sigaltstack@plt+0x4934>
   15e60:	mov	r1, #0
   15e64:	str	r1, [sp, #8]
   15e68:	cmp	r0, #0
   15e6c:	str	r4, [sp, #12]
   15e70:	beq	15e80 <sigaltstack@plt+0x45f4>
   15e74:	b	161b4 <sigaltstack@plt+0x4928>
   15e78:	str	r4, [sp, #12]
   15e7c:	mov	r7, sl
   15e80:	add	sl, r4, #1
   15e84:	ldrb	r0, [sp, #152]	; 0x98
   15e88:	cmp	r0, #0
   15e8c:	ldrbne	r0, [fp, #-64]	; 0xffffffc0
   15e90:	cmpne	r0, #0
   15e94:	bne	15ec0 <sigaltstack@plt+0x4634>
   15e98:	ldr	r2, [sp, #148]	; 0x94
   15e9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ea0:	cmp	r2, r0
   15ea4:	bne	1604c <sigaltstack@plt+0x47c0>
   15ea8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15eac:	ldr	r0, [sp, #144]	; 0x90
   15eb0:	bl	116f4 <bcmp@plt>
   15eb4:	cmp	r0, #0
   15eb8:	bne	1604c <sigaltstack@plt+0x47c0>
   15ebc:	b	15ed0 <sigaltstack@plt+0x4644>
   15ec0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15ec4:	ldr	r1, [sp, #156]	; 0x9c
   15ec8:	cmp	r1, r0
   15ecc:	bne	1604c <sigaltstack@plt+0x47c0>
   15ed0:	mov	r0, r7
   15ed4:	mov	r1, #48	; 0x30
   15ed8:	vld1.64	{d16-d17}, [r0], r1
   15edc:	ldr	r1, [sp]
   15ee0:	vld1.64	{d18-d19}, [r1]
   15ee4:	add	r3, sp, #72	; 0x48
   15ee8:	add	r1, r3, #16
   15eec:	add	r2, r7, #32
   15ef0:	vld1.64	{d20-d21}, [r2]
   15ef4:	vldr	d22, [r0]
   15ef8:	vst1.64	{d18-d19}, [r1]
   15efc:	add	r0, r3, #32
   15f00:	vst1.64	{d20-d21}, [r0]
   15f04:	mov	r0, r3
   15f08:	mov	r1, #12
   15f0c:	vst1.64	{d16-d17}, [r0], r1
   15f10:	strb	r8, [r0]
   15f14:	str	r5, [sp, #32]
   15f18:	strb	r8, [sp, #16]
   15f1c:	vstr	d22, [sp, #120]	; 0x78
   15f20:	ldr	r0, [sp, #88]	; 0x58
   15f24:	ldr	r1, [sp, #92]	; 0x5c
   15f28:	add	r0, r0, r1
   15f2c:	str	r0, [sp, #88]	; 0x58
   15f30:	ldr	r0, [sp, #4]
   15f34:	str	r8, [r0]
   15f38:	str	r8, [r0, #4]
   15f3c:	strb	r8, [sp, #28]
   15f40:	add	r0, sp, #16
   15f44:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15f48:	ldrb	r0, [sp, #40]	; 0x28
   15f4c:	cmp	r0, #0
   15f50:	beq	15f60 <sigaltstack@plt+0x46d4>
   15f54:	ldr	r0, [sp, #44]	; 0x2c
   15f58:	cmp	r0, #0
   15f5c:	beq	161bc <sigaltstack@plt+0x4930>
   15f60:	strb	r8, [sp, #28]
   15f64:	ldr	r0, [sp, #32]
   15f68:	ldr	r1, [sp, #36]	; 0x24
   15f6c:	add	r0, r0, r1
   15f70:	str	r0, [sp, #32]
   15f74:	add	r0, sp, #16
   15f78:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15f7c:	ldrb	r0, [sp, #40]	; 0x28
   15f80:	cmp	r0, #0
   15f84:	beq	15f94 <sigaltstack@plt+0x4708>
   15f88:	ldr	r0, [sp, #44]	; 0x2c
   15f8c:	cmp	r0, #0
   15f90:	beq	161a4 <sigaltstack@plt+0x4918>
   15f94:	add	sl, r4, #2
   15f98:	add	r0, sp, #72	; 0x48
   15f9c:	bl	166f8 <sigaltstack@plt+0x4e6c>
   15fa0:	ldr	r0, [sp, #100]	; 0x64
   15fa4:	ldrb	r1, [sp, #96]	; 0x60
   15fa8:	cmp	r0, #0
   15fac:	bne	15fb8 <sigaltstack@plt+0x472c>
   15fb0:	cmp	r1, #0
   15fb4:	bne	16194 <sigaltstack@plt+0x4908>
   15fb8:	cmp	r1, #0
   15fbc:	ldrbne	r1, [sp, #40]	; 0x28
   15fc0:	cmpne	r1, #0
   15fc4:	bne	15ff0 <sigaltstack@plt+0x4764>
   15fc8:	ldr	r2, [sp, #92]	; 0x5c
   15fcc:	ldr	r0, [sp, #36]	; 0x24
   15fd0:	cmp	r2, r0
   15fd4:	bne	1604c <sigaltstack@plt+0x47c0>
   15fd8:	ldr	r1, [sp, #32]
   15fdc:	ldr	r0, [sp, #88]	; 0x58
   15fe0:	bl	116f4 <bcmp@plt>
   15fe4:	cmp	r0, #0
   15fe8:	beq	15ffc <sigaltstack@plt+0x4770>
   15fec:	b	1604c <sigaltstack@plt+0x47c0>
   15ff0:	ldr	r1, [sp, #44]	; 0x2c
   15ff4:	cmp	r0, r1
   15ff8:	bne	1604c <sigaltstack@plt+0x47c0>
   15ffc:	strb	r8, [sp, #84]	; 0x54
   16000:	strb	r8, [sp, #28]
   16004:	ldr	r0, [sp, #88]	; 0x58
   16008:	ldr	r1, [sp, #92]	; 0x5c
   1600c:	add	r0, r0, r1
   16010:	str	r0, [sp, #88]	; 0x58
   16014:	ldr	r0, [sp, #32]
   16018:	ldr	r1, [sp, #36]	; 0x24
   1601c:	add	r0, r0, r1
   16020:	str	r0, [sp, #32]
   16024:	add	r0, sp, #16
   16028:	bl	166f8 <sigaltstack@plt+0x4e6c>
   1602c:	add	sl, sl, #1
   16030:	ldrb	r0, [sp, #40]	; 0x28
   16034:	cmp	r0, #0
   16038:	beq	15f98 <sigaltstack@plt+0x470c>
   1603c:	ldr	r0, [sp, #44]	; 0x2c
   16040:	cmp	r0, #0
   16044:	bne	15f98 <sigaltstack@plt+0x470c>
   16048:	b	161a4 <sigaltstack@plt+0x4918>
   1604c:	add	r9, r9, #1
   16050:	mov	r4, #0
   16054:	strb	r4, [sp, #140]	; 0x8c
   16058:	ldr	r0, [sp, #144]	; 0x90
   1605c:	ldr	r1, [sp, #148]	; 0x94
   16060:	add	r0, r0, r1
   16064:	str	r0, [sp, #144]	; 0x90
   16068:	mov	r0, r7
   1606c:	bl	166f8 <sigaltstack@plt+0x4e6c>
   16070:	ldrb	r0, [sp, #152]	; 0x98
   16074:	cmp	r0, #0
   16078:	beq	15db0 <sigaltstack@plt+0x4524>
   1607c:	ldr	r0, [sp, #156]	; 0x9c
   16080:	cmp	r0, #0
   16084:	bne	15db0 <sigaltstack@plt+0x4524>
   16088:	b	16198 <sigaltstack@plt+0x490c>
   1608c:	ldrb	r9, [r5]
   16090:	cmp	r9, #0
   16094:	beq	1618c <sigaltstack@plt+0x4900>
   16098:	ldrb	r0, [r6]
   1609c:	cmp	r0, #0
   160a0:	beq	16194 <sigaltstack@plt+0x4908>
   160a4:	mov	r3, #1
   160a8:	mov	ip, #0
   160ac:	mov	sl, r5
   160b0:	mov	r7, #0
   160b4:	mov	r8, #0
   160b8:	add	r0, r8, r8, lsl #2
   160bc:	cmp	r7, r0
   160c0:	bcc	16134 <sigaltstack@plt+0x48a8>
   160c4:	tst	r3, #1
   160c8:	beq	16134 <sigaltstack@plt+0x48a8>
   160cc:	cmp	r8, #10
   160d0:	bcc	16134 <sigaltstack@plt+0x48a8>
   160d4:	cmp	sl, #0
   160d8:	beq	16100 <sigaltstack@plt+0x4874>
   160dc:	sub	r1, r7, ip
   160e0:	mov	r0, sl
   160e4:	mov	r4, r3
   160e8:	bl	11784 <strnlen@plt>
   160ec:	mov	r3, r4
   160f0:	ldrb	r0, [sl, r0]!
   160f4:	cmp	r0, #0
   160f8:	mov	ip, r7
   160fc:	bne	16134 <sigaltstack@plt+0x48a8>
   16100:	mov	r0, r5
   16104:	mov	r4, ip
   16108:	bl	11700 <strlen@plt>
   1610c:	mov	r2, r0
   16110:	mov	r0, r6
   16114:	mov	r1, r5
   16118:	sub	r3, fp, #88	; 0x58
   1611c:	bl	1659c <sigaltstack@plt+0x4d10>
   16120:	mov	ip, r4
   16124:	mov	r3, #0
   16128:	cmp	r0, #0
   1612c:	mov	sl, #0
   16130:	bne	161ac <sigaltstack@plt+0x4920>
   16134:	ldrb	r0, [r6]
   16138:	cmp	r0, r9
   1613c:	bne	16170 <sigaltstack@plt+0x48e4>
   16140:	mov	r0, #1
   16144:	ldrb	r1, [r5, r0]
   16148:	cmp	r1, #0
   1614c:	beq	1618c <sigaltstack@plt+0x4900>
   16150:	ldrb	r2, [r6, r0]
   16154:	cmp	r2, #0
   16158:	beq	16194 <sigaltstack@plt+0x4908>
   1615c:	add	r0, r0, #1
   16160:	cmp	r2, r1
   16164:	beq	16144 <sigaltstack@plt+0x48b8>
   16168:	add	r7, r7, r0
   1616c:	b	16174 <sigaltstack@plt+0x48e8>
   16170:	add	r7, r7, #1
   16174:	add	r8, r8, #1
   16178:	ldrb	r0, [r6, #1]!
   1617c:	mov	r4, #0
   16180:	cmp	r0, #0
   16184:	bne	160b8 <sigaltstack@plt+0x482c>
   16188:	b	16198 <sigaltstack@plt+0x490c>
   1618c:	mov	r4, r6
   16190:	b	16198 <sigaltstack@plt+0x490c>
   16194:	mov	r4, #0
   16198:	mov	r0, r4
   1619c:	sub	sp, fp, #28
   161a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161a4:	ldr	r4, [sp, #144]	; 0x90
   161a8:	b	16198 <sigaltstack@plt+0x490c>
   161ac:	ldr	r4, [fp, #-88]	; 0xffffffa8
   161b0:	b	16198 <sigaltstack@plt+0x490c>
   161b4:	ldr	r4, [sp, #72]	; 0x48
   161b8:	b	16198 <sigaltstack@plt+0x490c>
   161bc:	bl	11850 <abort@plt>
   161c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161c4:	add	fp, sp, #28
   161c8:	sub	sp, sp, #132	; 0x84
   161cc:	mov	r5, r2
   161d0:	mov	r4, r1
   161d4:	mov	r8, r0
   161d8:	mov	r0, r1
   161dc:	bl	1764c <sigaltstack@plt+0x5dc0>
   161e0:	mov	r6, r0
   161e4:	mov	r7, #0
   161e8:	movw	r0, #47662	; 0xba2e
   161ec:	movt	r0, #744	; 0x2e8
   161f0:	cmp	r6, r0
   161f4:	bhi	1658c <sigaltstack@plt+0x4d00>
   161f8:	mov	r0, #44	; 0x2c
   161fc:	mul	r0, r6, r0
   16200:	cmp	r0, #4016	; 0xfb0
   16204:	bhi	1622c <sigaltstack@plt+0x49a0>
   16208:	add	r0, r0, #22
   1620c:	bic	r0, r0, #7
   16210:	sub	r0, sp, r0
   16214:	add	r1, r0, #15
   16218:	bic	sl, r1, #15
   1621c:	mov	sp, r0
   16220:	cmp	sl, #0
   16224:	bne	1623c <sigaltstack@plt+0x49b0>
   16228:	b	1658c <sigaltstack@plt+0x4d00>
   1622c:	bl	1750c <sigaltstack@plt+0x5c80>
   16230:	mov	sl, r0
   16234:	cmp	sl, #0
   16238:	beq	1658c <sigaltstack@plt+0x4d00>
   1623c:	str	r5, [fp, #-156]	; 0xffffff64
   16240:	mov	r9, #0
   16244:	str	r9, [fp, #-80]	; 0xffffffb0
   16248:	str	r9, [fp, #-84]	; 0xffffffac
   1624c:	strb	r9, [fp, #-76]	; 0xffffffb4
   16250:	strb	r9, [fp, #-88]	; 0xffffffa8
   16254:	str	r4, [fp, #-72]	; 0xffffffb8
   16258:	sub	r4, fp, #88	; 0x58
   1625c:	mov	r0, r4
   16260:	bl	166f8 <sigaltstack@plt+0x4e6c>
   16264:	add	r0, r6, r6, lsl #2
   16268:	add	r0, sl, r0, lsl #3
   1626c:	str	r0, [fp, #-148]	; 0xffffff6c
   16270:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   16274:	cmp	r0, #0
   16278:	beq	16288 <sigaltstack@plt+0x49fc>
   1627c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16280:	cmp	r0, #0
   16284:	beq	162d8 <sigaltstack@plt+0x4a4c>
   16288:	add	r4, r4, #16
   1628c:	sub	r7, fp, #88	; 0x58
   16290:	mov	r5, sl
   16294:	mov	r0, r5
   16298:	mov	r1, r4
   1629c:	bl	175d4 <sigaltstack@plt+0x5d48>
   162a0:	strb	r9, [fp, #-76]	; 0xffffffb4
   162a4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   162a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   162ac:	add	r0, r0, r1
   162b0:	str	r0, [fp, #-72]	; 0xffffffb8
   162b4:	mov	r0, r7
   162b8:	bl	166f8 <sigaltstack@plt+0x4e6c>
   162bc:	add	r5, r5, #40	; 0x28
   162c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   162c4:	ldrb	r1, [fp, #-64]	; 0xffffffc0
   162c8:	cmp	r1, #0
   162cc:	beq	16294 <sigaltstack@plt+0x4a08>
   162d0:	cmp	r0, #0
   162d4:	bne	16294 <sigaltstack@plt+0x4a08>
   162d8:	str	r8, [fp, #-160]	; 0xffffff60
   162dc:	mov	r0, #1
   162e0:	ldr	r3, [fp, #-148]	; 0xffffff6c
   162e4:	str	r0, [r3, #4]
   162e8:	str	r6, [fp, #-152]	; 0xffffff68
   162ec:	cmp	r6, #3
   162f0:	bcc	163bc <sigaltstack@plt+0x4b30>
   162f4:	mov	r4, #2
   162f8:	mov	r5, #0
   162fc:	b	1631c <sigaltstack@plt+0x4a90>
   16300:	mov	r5, #0
   16304:	mov	r0, r4
   16308:	str	r0, [r3, r4, lsl #2]
   1630c:	add	r4, r4, #1
   16310:	ldr	r0, [fp, #-152]	; 0xffffff68
   16314:	cmp	r4, r0
   16318:	beq	163bc <sigaltstack@plt+0x4b30>
   1631c:	add	r0, r4, r4, lsl #2
   16320:	add	r0, sl, r0, lsl #3
   16324:	sub	r9, r0, #40	; 0x28
   16328:	sub	r6, r0, #36	; 0x24
   1632c:	sub	r7, r0, #28
   16330:	ldrb	r8, [r0, #-32]	; 0xffffffe0
   16334:	cmp	r8, #0
   16338:	beq	16364 <sigaltstack@plt+0x4ad8>
   1633c:	add	r0, r5, r5, lsl #2
   16340:	add	r0, sl, r0, lsl #3
   16344:	ldrb	r1, [r0, #8]
   16348:	cmp	r1, #0
   1634c:	beq	16364 <sigaltstack@plt+0x4ad8>
   16350:	ldr	r0, [r0, #12]
   16354:	ldr	r1, [r7]
   16358:	cmp	r1, r0
   1635c:	bne	16394 <sigaltstack@plt+0x4b08>
   16360:	b	163b0 <sigaltstack@plt+0x4b24>
   16364:	add	r0, r5, r5, lsl #2
   16368:	add	r1, sl, r0, lsl #3
   1636c:	ldr	r1, [r1, #4]
   16370:	ldr	r2, [r6]
   16374:	cmp	r2, r1
   16378:	bne	16394 <sigaltstack@plt+0x4b08>
   1637c:	ldr	r1, [sl, r0, lsl #3]
   16380:	ldr	r0, [r9]
   16384:	bl	116f4 <bcmp@plt>
   16388:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1638c:	cmp	r0, #0
   16390:	beq	163b0 <sigaltstack@plt+0x4b24>
   16394:	cmp	r5, #0
   16398:	beq	16300 <sigaltstack@plt+0x4a74>
   1639c:	ldr	r0, [r3, r5, lsl #2]
   163a0:	sub	r5, r5, r0
   163a4:	cmp	r8, #0
   163a8:	bne	1633c <sigaltstack@plt+0x4ab0>
   163ac:	b	16364 <sigaltstack@plt+0x4ad8>
   163b0:	add	r5, r5, #1
   163b4:	sub	r0, r4, r5
   163b8:	b	16308 <sigaltstack@plt+0x4a7c>
   163bc:	mov	r5, #0
   163c0:	ldr	r8, [fp, #-156]	; 0xffffff64
   163c4:	str	r5, [r8]
   163c8:	str	r5, [fp, #-80]	; 0xffffffb0
   163cc:	str	r5, [fp, #-84]	; 0xffffffac
   163d0:	str	r5, [fp, #-136]	; 0xffffff78
   163d4:	str	r5, [fp, #-140]	; 0xffffff74
   163d8:	strb	r5, [fp, #-76]	; 0xffffffb4
   163dc:	strb	r5, [fp, #-88]	; 0xffffffa8
   163e0:	ldr	r0, [fp, #-160]	; 0xffffff60
   163e4:	str	r0, [fp, #-72]	; 0xffffffb8
   163e8:	str	r0, [fp, #-128]	; 0xffffff80
   163ec:	strb	r5, [fp, #-132]	; 0xffffff7c
   163f0:	strb	r5, [fp, #-144]	; 0xffffff70
   163f4:	sub	r0, fp, #144	; 0x90
   163f8:	bl	166f8 <sigaltstack@plt+0x4e6c>
   163fc:	ldrb	r1, [fp, #-120]	; 0xffffff88
   16400:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16404:	cmp	r0, #0
   16408:	bne	16414 <sigaltstack@plt+0x4b88>
   1640c:	cmp	r1, #0
   16410:	bne	16580 <sigaltstack@plt+0x4cf4>
   16414:	clz	r1, r1
   16418:	lsr	r1, r1, #5
   1641c:	sub	r9, fp, #144	; 0x90
   16420:	sub	r4, fp, #88	; 0x58
   16424:	mov	r7, #0
   16428:	add	r3, r7, r7, lsl #2
   1642c:	add	r2, sl, r3, lsl #3
   16430:	tst	r1, #1
   16434:	bne	16454 <sigaltstack@plt+0x4bc8>
   16438:	ldrb	r1, [r2, #8]
   1643c:	cmp	r1, #0
   16440:	beq	16454 <sigaltstack@plt+0x4bc8>
   16444:	ldr	r1, [r2, #12]
   16448:	cmp	r1, r0
   1644c:	bne	16478 <sigaltstack@plt+0x4bec>
   16450:	b	164d8 <sigaltstack@plt+0x4c4c>
   16454:	ldr	r2, [r2, #4]
   16458:	ldr	r0, [fp, #-124]	; 0xffffff84
   1645c:	cmp	r2, r0
   16460:	bne	16478 <sigaltstack@plt+0x4bec>
   16464:	ldr	r0, [sl, r3, lsl #3]
   16468:	ldr	r1, [fp, #-128]	; 0xffffff80
   1646c:	bl	116f4 <bcmp@plt>
   16470:	cmp	r0, #0
   16474:	beq	164d8 <sigaltstack@plt+0x4c4c>
   16478:	cmp	r7, #0
   1647c:	beq	16500 <sigaltstack@plt+0x4c74>
   16480:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16484:	ldr	r6, [r0, r7, lsl #2]
   16488:	sub	r7, r7, r6
   1648c:	cmp	r6, #0
   16490:	bne	164b4 <sigaltstack@plt+0x4c28>
   16494:	b	1654c <sigaltstack@plt+0x4cc0>
   16498:	strb	r5, [fp, #-76]	; 0xffffffb4
   1649c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   164a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   164a4:	add	r0, r0, r1
   164a8:	str	r0, [fp, #-72]	; 0xffffffb8
   164ac:	subs	r6, r6, #1
   164b0:	beq	1654c <sigaltstack@plt+0x4cc0>
   164b4:	mov	r0, r4
   164b8:	bl	166f8 <sigaltstack@plt+0x4e6c>
   164bc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   164c0:	cmp	r0, #0
   164c4:	beq	16498 <sigaltstack@plt+0x4c0c>
   164c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   164cc:	cmp	r0, #0
   164d0:	bne	16498 <sigaltstack@plt+0x4c0c>
   164d4:	b	16598 <sigaltstack@plt+0x4d0c>
   164d8:	strb	r5, [fp, #-132]	; 0xffffff7c
   164dc:	ldr	r0, [fp, #-128]	; 0xffffff80
   164e0:	ldr	r1, [fp, #-124]	; 0xffffff84
   164e4:	add	r0, r0, r1
   164e8:	str	r0, [fp, #-128]	; 0xffffff80
   164ec:	add	r7, r7, #1
   164f0:	ldr	r0, [fp, #-152]	; 0xffffff68
   164f4:	cmp	r7, r0
   164f8:	bne	1654c <sigaltstack@plt+0x4cc0>
   164fc:	b	16578 <sigaltstack@plt+0x4cec>
   16500:	mov	r0, r4
   16504:	bl	166f8 <sigaltstack@plt+0x4e6c>
   16508:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1650c:	cmp	r0, #0
   16510:	beq	16520 <sigaltstack@plt+0x4c94>
   16514:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16518:	cmp	r0, #0
   1651c:	beq	16598 <sigaltstack@plt+0x4d0c>
   16520:	mov	r7, #0
   16524:	strb	r7, [fp, #-76]	; 0xffffffb4
   16528:	strb	r7, [fp, #-132]	; 0xffffff7c
   1652c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16530:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16534:	add	r0, r0, r1
   16538:	str	r0, [fp, #-72]	; 0xffffffb8
   1653c:	ldr	r0, [fp, #-128]	; 0xffffff80
   16540:	ldr	r1, [fp, #-124]	; 0xffffff84
   16544:	add	r0, r0, r1
   16548:	str	r0, [fp, #-128]	; 0xffffff80
   1654c:	mov	r0, r9
   16550:	bl	166f8 <sigaltstack@plt+0x4e6c>
   16554:	ldrb	r2, [fp, #-120]	; 0xffffff88
   16558:	clz	r0, r2
   1655c:	lsr	r1, r0, #5
   16560:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16564:	cmp	r0, #0
   16568:	bne	16428 <sigaltstack@plt+0x4b9c>
   1656c:	cmp	r2, #0
   16570:	beq	16428 <sigaltstack@plt+0x4b9c>
   16574:	b	16580 <sigaltstack@plt+0x4cf4>
   16578:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1657c:	str	r0, [r8]
   16580:	mov	r0, sl
   16584:	bl	1757c <sigaltstack@plt+0x5cf0>
   16588:	mov	r7, #1
   1658c:	mov	r0, r7
   16590:	sub	sp, fp, #28
   16594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16598:	bl	11850 <abort@plt>
   1659c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   165a0:	add	fp, sp, #24
   165a4:	mov	r4, #0
   165a8:	cmn	r2, #-536870911	; 0xe0000001
   165ac:	bhi	166ec <sigaltstack@plt+0x4e60>
   165b0:	mov	r8, r3
   165b4:	mov	r5, r2
   165b8:	mov	r6, r1
   165bc:	mov	r7, r0
   165c0:	lsl	r0, r2, #2
   165c4:	cmp	r0, #4016	; 0xfb0
   165c8:	bhi	165f0 <sigaltstack@plt+0x4d64>
   165cc:	add	r0, r0, #22
   165d0:	bic	r0, r0, #7
   165d4:	sub	r1, sp, r0
   165d8:	add	r0, r1, #15
   165dc:	bic	r0, r0, #15
   165e0:	mov	sp, r1
   165e4:	cmp	r0, #0
   165e8:	bne	165fc <sigaltstack@plt+0x4d70>
   165ec:	b	166ec <sigaltstack@plt+0x4e60>
   165f0:	bl	1750c <sigaltstack@plt+0x5c80>
   165f4:	cmp	r0, #0
   165f8:	beq	166ec <sigaltstack@plt+0x4e60>
   165fc:	mov	r1, #1
   16600:	str	r1, [r0, #4]
   16604:	cmp	r5, #3
   16608:	bcc	16670 <sigaltstack@plt+0x4de4>
   1660c:	mov	r1, #2
   16610:	mov	r2, #0
   16614:	b	16630 <sigaltstack@plt+0x4da4>
   16618:	add	r2, r2, #1
   1661c:	sub	r3, r1, r2
   16620:	str	r3, [r0, r1, lsl #2]
   16624:	add	r1, r1, #1
   16628:	cmp	r1, r5
   1662c:	beq	16670 <sigaltstack@plt+0x4de4>
   16630:	ldrb	r4, [r6, r2]
   16634:	add	r3, r1, r6
   16638:	ldrb	r3, [r3, #-1]
   1663c:	cmp	r3, r4
   16640:	beq	16618 <sigaltstack@plt+0x4d8c>
   16644:	cmp	r2, #0
   16648:	beq	16664 <sigaltstack@plt+0x4dd8>
   1664c:	ldr	r4, [r0, r2, lsl #2]
   16650:	sub	r2, r2, r4
   16654:	ldrb	r4, [r6, r2]
   16658:	cmp	r3, r4
   1665c:	bne	16644 <sigaltstack@plt+0x4db8>
   16660:	b	16618 <sigaltstack@plt+0x4d8c>
   16664:	mov	r2, #0
   16668:	mov	r3, r1
   1666c:	b	16620 <sigaltstack@plt+0x4d94>
   16670:	mov	r1, #0
   16674:	str	r1, [r8]
   16678:	ldrb	r3, [r7]
   1667c:	cmp	r3, #0
   16680:	beq	166e4 <sigaltstack@plt+0x4e58>
   16684:	mov	r2, r7
   16688:	b	166a4 <sigaltstack@plt+0x4e18>
   1668c:	add	r7, r7, #1
   16690:	add	r2, r2, #1
   16694:	mov	r1, #0
   16698:	ldrb	r3, [r7]
   1669c:	cmp	r3, #0
   166a0:	beq	166e4 <sigaltstack@plt+0x4e58>
   166a4:	ldrb	r4, [r6, r1]
   166a8:	uxtb	r3, r3
   166ac:	cmp	r4, r3
   166b0:	bne	166c8 <sigaltstack@plt+0x4e3c>
   166b4:	add	r1, r1, #1
   166b8:	cmp	r1, r5
   166bc:	beq	166e0 <sigaltstack@plt+0x4e54>
   166c0:	add	r7, r7, #1
   166c4:	b	16698 <sigaltstack@plt+0x4e0c>
   166c8:	cmp	r1, #0
   166cc:	beq	1668c <sigaltstack@plt+0x4e00>
   166d0:	ldr	r3, [r0, r1, lsl #2]
   166d4:	sub	r1, r1, r3
   166d8:	add	r2, r2, r3
   166dc:	b	16698 <sigaltstack@plt+0x4e0c>
   166e0:	str	r2, [r8]
   166e4:	bl	1757c <sigaltstack@plt+0x5cf0>
   166e8:	mov	r4, #1
   166ec:	mov	r0, r4
   166f0:	sub	sp, fp, #24
   166f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   166f8:	push	{r4, r5, r6, r7, fp, lr}
   166fc:	add	fp, sp, #16
   16700:	mov	r4, r0
   16704:	ldrb	r0, [r0, #12]
   16708:	cmp	r0, #0
   1670c:	popne	{r4, r5, r6, r7, fp, pc}
   16710:	ldrb	r0, [r4]
   16714:	cmp	r0, #0
   16718:	bne	16764 <sigaltstack@plt+0x4ed8>
   1671c:	ldr	r0, [r4, #16]
   16720:	ldrb	r0, [r0]
   16724:	bl	17624 <sigaltstack@plt+0x5d98>
   16728:	cmp	r0, #0
   1672c:	beq	1674c <sigaltstack@plt+0x4ec0>
   16730:	mov	r0, #1
   16734:	str	r0, [r4, #20]
   16738:	ldr	r1, [r4, #16]
   1673c:	ldrb	r1, [r1]
   16740:	strb	r0, [r4, #24]
   16744:	str	r1, [r4, #28]
   16748:	b	16818 <sigaltstack@plt+0x4f8c>
   1674c:	add	r0, r4, #4
   16750:	bl	11550 <mbsinit@plt>
   16754:	cmp	r0, #0
   16758:	beq	16824 <sigaltstack@plt+0x4f98>
   1675c:	mov	r0, #1
   16760:	strb	r0, [r4]
   16764:	ldr	r7, [r4, #16]
   16768:	bl	1161c <__ctype_get_mb_cur_max@plt>
   1676c:	mov	r1, r0
   16770:	mov	r0, r7
   16774:	bl	16f04 <sigaltstack@plt+0x5678>
   16778:	mov	r2, r0
   1677c:	add	r6, r4, #28
   16780:	add	r5, r4, #4
   16784:	mov	r0, r6
   16788:	mov	r1, r7
   1678c:	mov	r3, r5
   16790:	bl	17118 <sigaltstack@plt+0x588c>
   16794:	str	r0, [r4, #20]
   16798:	cmn	r0, #2
   1679c:	beq	16804 <sigaltstack@plt+0x4f78>
   167a0:	cmp	r0, #0
   167a4:	beq	167c0 <sigaltstack@plt+0x4f34>
   167a8:	cmn	r0, #1
   167ac:	bne	167e4 <sigaltstack@plt+0x4f58>
   167b0:	mov	r0, #0
   167b4:	strb	r0, [r4, #24]
   167b8:	mov	r0, #1
   167bc:	b	16814 <sigaltstack@plt+0x4f88>
   167c0:	mov	r0, #1
   167c4:	str	r0, [r4, #20]
   167c8:	ldr	r0, [r4, #16]
   167cc:	ldrb	r0, [r0]
   167d0:	cmp	r0, #0
   167d4:	bne	16844 <sigaltstack@plt+0x4fb8>
   167d8:	ldr	r0, [r6]
   167dc:	cmp	r0, #0
   167e0:	bne	16864 <sigaltstack@plt+0x4fd8>
   167e4:	mov	r0, #1
   167e8:	strb	r0, [r4, #24]
   167ec:	mov	r0, r5
   167f0:	bl	11550 <mbsinit@plt>
   167f4:	cmp	r0, #0
   167f8:	movne	r0, #0
   167fc:	strbne	r0, [r4]
   16800:	b	16818 <sigaltstack@plt+0x4f8c>
   16804:	ldr	r0, [r4, #16]
   16808:	bl	11700 <strlen@plt>
   1680c:	mov	r1, #0
   16810:	strb	r1, [r4, #24]
   16814:	str	r0, [r4, #20]
   16818:	mov	r0, #1
   1681c:	strb	r0, [r4, #12]
   16820:	pop	{r4, r5, r6, r7, fp, pc}
   16824:	movw	r0, #34253	; 0x85cd
   16828:	movt	r0, #1
   1682c:	movw	r1, #34276	; 0x85e4
   16830:	movt	r1, #1
   16834:	movw	r3, #34288	; 0x85f0
   16838:	movt	r3, #1
   1683c:	mov	r2, #143	; 0x8f
   16840:	bl	11880 <__assert_fail@plt>
   16844:	movw	r0, #34336	; 0x8620
   16848:	movt	r0, #1
   1684c:	movw	r1, #34276	; 0x85e4
   16850:	movt	r1, #1
   16854:	movw	r3, #34288	; 0x85f0
   16858:	movt	r3, #1
   1685c:	mov	r2, #171	; 0xab
   16860:	bl	11880 <__assert_fail@plt>
   16864:	movw	r0, #34359	; 0x8637
   16868:	movt	r0, #1
   1686c:	movw	r1, #34276	; 0x85e4
   16870:	movt	r1, #1
   16874:	movw	r3, #34288	; 0x85f0
   16878:	movt	r3, #1
   1687c:	mov	r2, #172	; 0xac
   16880:	bl	11880 <__assert_fail@plt>
   16884:	ldr	r2, [r0, #16]
   16888:	add	r1, r2, r1
   1688c:	str	r1, [r0, #16]
   16890:	bx	lr
   16894:	ldrb	r3, [r1]
   16898:	mov	r2, r0
   1689c:	strb	r3, [r2], #4
   168a0:	cmp	r3, #0
   168a4:	beq	168b4 <sigaltstack@plt+0x5028>
   168a8:	ldmib	r1, {r3, ip}
   168ac:	stm	r2, {r3, ip}
   168b0:	b	168c0 <sigaltstack@plt+0x5034>
   168b4:	mov	r3, #0
   168b8:	str	r3, [r2]
   168bc:	str	r3, [r2, #4]
   168c0:	ldrb	r2, [r1, #12]
   168c4:	strb	r2, [r0, #12]
   168c8:	add	r0, r0, #16
   168cc:	add	r1, r1, #16
   168d0:	b	175d4 <sigaltstack@plt+0x5d48>
   168d4:	push	{r4, r5, r6, r7, fp, lr}
   168d8:	add	fp, sp, #16
   168dc:	mov	r4, #0
   168e0:	movw	r5, #35395	; 0x8a43
   168e4:	movt	r5, #1
   168e8:	movw	r6, #35405	; 0x8a4d
   168ec:	movt	r6, #1
   168f0:	b	1691c <sigaltstack@plt+0x5090>
   168f4:	mov	r0, r6
   168f8:	mov	r1, r7
   168fc:	bl	1164c <open64@plt>
   16900:	cmn	r0, #1
   16904:	ble	1696c <sigaltstack@plt+0x50e0>
   16908:	cmp	r0, #3
   1690c:	bge	16960 <sigaltstack@plt+0x50d4>
   16910:	add	r4, r4, #1
   16914:	cmp	r4, #3
   16918:	beq	16958 <sigaltstack@plt+0x50cc>
   1691c:	mov	r0, r4
   16920:	mov	r1, #1
   16924:	bl	16f34 <sigaltstack@plt+0x56a8>
   16928:	cmn	r0, #1
   1692c:	bgt	16910 <sigaltstack@plt+0x5084>
   16930:	clz	r0, r4
   16934:	lsr	r7, r0, #5
   16938:	cmp	r4, #0
   1693c:	bne	168f4 <sigaltstack@plt+0x5068>
   16940:	mov	r0, r5
   16944:	mov	r1, r7
   16948:	bl	1164c <open64@plt>
   1694c:	cmn	r0, #1
   16950:	bgt	16908 <sigaltstack@plt+0x507c>
   16954:	b	168f4 <sigaltstack@plt+0x5068>
   16958:	mov	r0, #0
   1695c:	pop	{r4, r5, r6, r7, fp, pc}
   16960:	bl	11868 <close@plt>
   16964:	mov	r0, #0
   16968:	pop	{r4, r5, r6, r7, fp, pc}
   1696c:	bl	1173c <__errno_location@plt>
   16970:	ldr	r0, [r0]
   16974:	pop	{r4, r5, r6, r7, fp, pc}
   16978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1697c:	add	fp, sp, #28
   16980:	sub	sp, sp, #44	; 0x2c
   16984:	sub	sp, sp, #4096	; 0x1000
   16988:	str	r3, [sp, #16]
   1698c:	mov	r4, r1
   16990:	mov	r5, r0
   16994:	mov	r0, #0
   16998:	str	r0, [sp]
   1699c:	str	r2, [sp, #20]
   169a0:	mov	r0, r2
   169a4:	mov	r1, #0
   169a8:	mov	r2, #0
   169ac:	mov	r3, #0
   169b0:	bl	114cc <iconv@plt>
   169b4:	str	r5, [sp, #8]
   169b8:	str	r5, [sp, #36]	; 0x24
   169bc:	str	r4, [sp, #32]
   169c0:	str	r4, [sp, #12]
   169c4:	cmp	r4, #0
   169c8:	mov	r6, #0
   169cc:	beq	16a48 <sigaltstack@plt+0x51bc>
   169d0:	mov	r6, #0
   169d4:	add	r8, sp, #40	; 0x28
   169d8:	mov	sl, #4096	; 0x1000
   169dc:	add	r9, sp, #24
   169e0:	add	r4, sp, #36	; 0x24
   169e4:	add	r7, sp, #32
   169e8:	add	r5, sp, #28
   169ec:	b	16a08 <sigaltstack@plt+0x517c>
   169f0:	sub	r0, r6, r8
   169f4:	ldr	r1, [sp, #28]
   169f8:	add	r6, r0, r1
   169fc:	ldr	r0, [sp, #32]
   16a00:	cmp	r0, #0
   16a04:	beq	16a48 <sigaltstack@plt+0x51bc>
   16a08:	str	r8, [sp, #28]
   16a0c:	str	sl, [sp, #24]
   16a10:	str	r9, [sp]
   16a14:	ldr	r0, [sp, #20]
   16a18:	mov	r1, r4
   16a1c:	mov	r2, r7
   16a20:	mov	r3, r5
   16a24:	bl	114cc <iconv@plt>
   16a28:	cmn	r0, #1
   16a2c:	bne	169f0 <sigaltstack@plt+0x5164>
   16a30:	bl	1173c <__errno_location@plt>
   16a34:	ldr	r0, [r0]
   16a38:	cmp	r0, #7
   16a3c:	beq	169f0 <sigaltstack@plt+0x5164>
   16a40:	cmp	r0, #22
   16a44:	bne	16a98 <sigaltstack@plt+0x520c>
   16a48:	add	r4, sp, #40	; 0x28
   16a4c:	str	r4, [sp, #28]
   16a50:	mov	r0, #4096	; 0x1000
   16a54:	str	r0, [sp, #24]
   16a58:	add	r0, sp, #24
   16a5c:	str	r0, [sp]
   16a60:	add	r3, sp, #28
   16a64:	ldr	r0, [sp, #20]
   16a68:	mov	r1, #0
   16a6c:	mov	r2, #0
   16a70:	bl	114cc <iconv@plt>
   16a74:	cmn	r0, #1
   16a78:	beq	16a90 <sigaltstack@plt+0x5204>
   16a7c:	sub	r0, r6, r4
   16a80:	ldr	r1, [sp, #28]
   16a84:	add	r6, r0, r1
   16a88:	mov	r0, #1
   16a8c:	b	16a9c <sigaltstack@plt+0x5210>
   16a90:	mov	r0, #0
   16a94:	b	16a9c <sigaltstack@plt+0x5210>
   16a98:	mov	r0, #0
   16a9c:	mvn	r9, #0
   16aa0:	cmp	r0, #0
   16aa4:	beq	16be0 <sigaltstack@plt+0x5354>
   16aa8:	ldr	r1, [fp, #8]
   16aac:	cmp	r6, #0
   16ab0:	beq	16bac <sigaltstack@plt+0x5320>
   16ab4:	ldr	r0, [sp, #16]
   16ab8:	ldr	r4, [r0]
   16abc:	cmp	r4, #0
   16ac0:	beq	16ad0 <sigaltstack@plt+0x5244>
   16ac4:	ldr	r0, [r1]
   16ac8:	cmp	r0, r6
   16acc:	bcs	16ae4 <sigaltstack@plt+0x5258>
   16ad0:	mov	r0, r6
   16ad4:	bl	1594c <sigaltstack@plt+0x40c0>
   16ad8:	mov	r4, r0
   16adc:	cmp	r0, #0
   16ae0:	beq	16bd4 <sigaltstack@plt+0x5348>
   16ae4:	mov	r0, #0
   16ae8:	str	r0, [sp]
   16aec:	ldr	r0, [sp, #20]
   16af0:	mov	r1, #0
   16af4:	mov	r2, #0
   16af8:	mov	r3, #0
   16afc:	bl	114cc <iconv@plt>
   16b00:	ldr	r0, [sp, #8]
   16b04:	str	r0, [sp, #40]	; 0x28
   16b08:	ldr	r0, [sp, #12]
   16b0c:	str	r0, [sp, #36]	; 0x24
   16b10:	mov	sl, r4
   16b14:	str	r4, [sp, #32]
   16b18:	str	r6, [sp, #28]
   16b1c:	add	r8, sp, #28
   16b20:	add	r5, sp, #40	; 0x28
   16b24:	add	r7, sp, #36	; 0x24
   16b28:	add	r4, sp, #32
   16b2c:	ldr	r0, [sp, #36]	; 0x24
   16b30:	cmp	r0, #0
   16b34:	beq	16b68 <sigaltstack@plt+0x52dc>
   16b38:	str	r8, [sp]
   16b3c:	ldr	r0, [sp, #20]
   16b40:	mov	r1, r5
   16b44:	mov	r2, r7
   16b48:	mov	r3, r4
   16b4c:	bl	114cc <iconv@plt>
   16b50:	cmn	r0, #1
   16b54:	bne	16b2c <sigaltstack@plt+0x52a0>
   16b58:	bl	1173c <__errno_location@plt>
   16b5c:	ldr	r0, [r0]
   16b60:	cmp	r0, #22
   16b64:	bne	16bb8 <sigaltstack@plt+0x532c>
   16b68:	str	r8, [sp]
   16b6c:	add	r3, sp, #32
   16b70:	ldr	r0, [sp, #20]
   16b74:	mov	r1, #0
   16b78:	mov	r2, #0
   16b7c:	bl	114cc <iconv@plt>
   16b80:	cmn	r0, #1
   16b84:	beq	16bb8 <sigaltstack@plt+0x532c>
   16b88:	ldr	r0, [sp, #28]
   16b8c:	cmp	r0, #0
   16b90:	bne	16bec <sigaltstack@plt+0x5360>
   16b94:	ldr	r0, [sp, #16]
   16b98:	str	sl, [r0]
   16b9c:	ldr	r0, [fp, #8]
   16ba0:	str	r6, [r0]
   16ba4:	mov	r9, #0
   16ba8:	b	16be0 <sigaltstack@plt+0x5354>
   16bac:	mov	r9, #0
   16bb0:	str	r9, [r1]
   16bb4:	b	16be0 <sigaltstack@plt+0x5354>
   16bb8:	ldr	r0, [sp, #16]
   16bbc:	ldr	r1, [r0]
   16bc0:	cmp	sl, r1
   16bc4:	beq	16be0 <sigaltstack@plt+0x5354>
   16bc8:	mov	r0, sl
   16bcc:	bl	15924 <sigaltstack@plt+0x4098>
   16bd0:	b	16be0 <sigaltstack@plt+0x5354>
   16bd4:	bl	1173c <__errno_location@plt>
   16bd8:	mov	r1, #12
   16bdc:	str	r1, [r0]
   16be0:	mov	r0, r9
   16be4:	sub	sp, fp, #28
   16be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16bec:	bl	11850 <abort@plt>
   16bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16bf4:	add	fp, sp, #28
   16bf8:	sub	sp, sp, #20
   16bfc:	mov	r5, r1
   16c00:	str	r0, [sp, #16]
   16c04:	bl	11700 <strlen@plt>
   16c08:	mov	r6, r0
   16c0c:	str	r0, [sp, #12]
   16c10:	cmp	r0, #4096	; 0x1000
   16c14:	lslcc	r6, r0, #4
   16c18:	add	r4, r6, #1
   16c1c:	mov	r0, r4
   16c20:	bl	1594c <sigaltstack@plt+0x40c0>
   16c24:	cmp	r0, #0
   16c28:	beq	16d5c <sigaltstack@plt+0x54d0>
   16c2c:	mov	r7, r0
   16c30:	mov	r0, #0
   16c34:	str	r0, [sp]
   16c38:	mov	r0, r5
   16c3c:	mov	r1, #0
   16c40:	mov	r2, #0
   16c44:	mov	r3, #0
   16c48:	bl	114cc <iconv@plt>
   16c4c:	stmib	sp, {r6, r7}
   16c50:	add	r9, sp, #4
   16c54:	str	r9, [sp]
   16c58:	add	r1, sp, #16
   16c5c:	add	r2, sp, #12
   16c60:	add	r3, sp, #8
   16c64:	mov	r0, r5
   16c68:	bl	114cc <iconv@plt>
   16c6c:	cmn	r0, #1
   16c70:	beq	16d3c <sigaltstack@plt+0x54b0>
   16c74:	mov	r6, r7
   16c78:	str	r9, [sp]
   16c7c:	add	r3, sp, #8
   16c80:	mov	r0, r5
   16c84:	mov	r1, #0
   16c88:	mov	r2, #0
   16c8c:	bl	114cc <iconv@plt>
   16c90:	cmn	r0, #1
   16c94:	beq	16d6c <sigaltstack@plt+0x54e0>
   16c98:	mov	r7, r6
   16c9c:	ldr	r0, [sp, #8]
   16ca0:	add	r1, r0, #1
   16ca4:	str	r1, [sp, #8]
   16ca8:	mov	r1, #0
   16cac:	strb	r1, [r0]
   16cb0:	ldr	r0, [sp, #8]
   16cb4:	sub	r1, r0, r7
   16cb8:	cmp	r1, r4
   16cbc:	bcs	16de8 <sigaltstack@plt+0x555c>
   16cc0:	mov	r0, r7
   16cc4:	bl	1597c <sigaltstack@plt+0x40f0>
   16cc8:	cmp	r0, #0
   16ccc:	moveq	r0, r7
   16cd0:	sub	sp, fp, #28
   16cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cd8:	cmp	r4, r4, lsl #1
   16cdc:	bcs	16df4 <sigaltstack@plt+0x5568>
   16ce0:	ldr	sl, [sp, #8]
   16ce4:	lsl	r4, r4, #1
   16ce8:	mov	r0, r7
   16cec:	mov	r1, r4
   16cf0:	bl	1597c <sigaltstack@plt+0x40f0>
   16cf4:	cmp	r0, #0
   16cf8:	beq	16df4 <sigaltstack@plt+0x5568>
   16cfc:	mov	r6, r0
   16d00:	sub	r0, sl, r7
   16d04:	add	r1, r6, r0
   16d08:	str	r1, [sp, #8]
   16d0c:	mvn	r0, r0
   16d10:	add	r0, r4, r0
   16d14:	str	r0, [sp, #4]
   16d18:	str	r9, [sp]
   16d1c:	mov	r0, r5
   16d20:	add	r1, sp, #16
   16d24:	add	r2, sp, #12
   16d28:	add	r3, sp, #8
   16d2c:	bl	114cc <iconv@plt>
   16d30:	cmn	r0, #1
   16d34:	mov	r7, r6
   16d38:	bne	16c78 <sigaltstack@plt+0x53ec>
   16d3c:	bl	1173c <__errno_location@plt>
   16d40:	mov	r8, r0
   16d44:	ldr	r0, [r0]
   16d48:	cmp	r0, #7
   16d4c:	beq	16cd8 <sigaltstack@plt+0x544c>
   16d50:	cmp	r0, #22
   16d54:	beq	16c74 <sigaltstack@plt+0x53e8>
   16d58:	b	16e0c <sigaltstack@plt+0x5580>
   16d5c:	bl	1173c <__errno_location@plt>
   16d60:	mov	r1, #12
   16d64:	str	r1, [r0]
   16d68:	b	16e14 <sigaltstack@plt+0x5588>
   16d6c:	bl	1173c <__errno_location@plt>
   16d70:	mov	r8, r0
   16d74:	ldr	r0, [r8]
   16d78:	cmp	r0, #7
   16d7c:	bne	16e08 <sigaltstack@plt+0x557c>
   16d80:	cmp	r4, r4, lsl #1
   16d84:	bcs	16e00 <sigaltstack@plt+0x5574>
   16d88:	ldr	sl, [sp, #8]
   16d8c:	lsl	r4, r4, #1
   16d90:	mov	r0, r6
   16d94:	mov	r1, r4
   16d98:	bl	1597c <sigaltstack@plt+0x40f0>
   16d9c:	cmp	r0, #0
   16da0:	beq	16e00 <sigaltstack@plt+0x5574>
   16da4:	mov	r7, r0
   16da8:	sub	r0, sl, r6
   16dac:	add	r1, r7, r0
   16db0:	str	r1, [sp, #8]
   16db4:	mvn	r0, r0
   16db8:	add	r0, r4, r0
   16dbc:	str	r0, [sp, #4]
   16dc0:	str	r9, [sp]
   16dc4:	mov	r0, r5
   16dc8:	mov	r1, #0
   16dcc:	mov	r2, #0
   16dd0:	add	r3, sp, #8
   16dd4:	bl	114cc <iconv@plt>
   16dd8:	cmn	r0, #1
   16ddc:	mov	r6, r7
   16de0:	beq	16d74 <sigaltstack@plt+0x54e8>
   16de4:	b	16c9c <sigaltstack@plt+0x5410>
   16de8:	mov	r0, r7
   16dec:	sub	sp, fp, #28
   16df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df4:	mov	r0, #12
   16df8:	str	r0, [r8]
   16dfc:	b	16e0c <sigaltstack@plt+0x5580>
   16e00:	mov	r0, #12
   16e04:	str	r0, [r8]
   16e08:	mov	r7, r6
   16e0c:	mov	r0, r7
   16e10:	bl	15924 <sigaltstack@plt+0x4098>
   16e14:	mov	r0, #0
   16e18:	sub	sp, fp, #28
   16e1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e20:	push	{r4, r5, r6, r7, fp, lr}
   16e24:	add	fp, sp, #16
   16e28:	mov	r5, r0
   16e2c:	ldrb	r0, [r0]
   16e30:	cmp	r0, #0
   16e34:	beq	16ea0 <sigaltstack@plt+0x5614>
   16e38:	mov	r6, r2
   16e3c:	mov	r4, r1
   16e40:	mov	r0, r1
   16e44:	mov	r1, r2
   16e48:	bl	15a0c <sigaltstack@plt+0x4180>
   16e4c:	cmp	r0, #0
   16e50:	beq	16ea0 <sigaltstack@plt+0x5614>
   16e54:	mov	r0, r6
   16e58:	mov	r1, r4
   16e5c:	bl	11688 <iconv_open@plt>
   16e60:	mov	r4, #0
   16e64:	cmn	r0, #1
   16e68:	beq	16eb4 <sigaltstack@plt+0x5628>
   16e6c:	mov	r6, r0
   16e70:	mov	r0, r5
   16e74:	mov	r1, r6
   16e78:	bl	16bf0 <sigaltstack@plt+0x5364>
   16e7c:	cmp	r0, #0
   16e80:	beq	16ed4 <sigaltstack@plt+0x5648>
   16e84:	mov	r5, r0
   16e88:	mov	r0, r6
   16e8c:	bl	114c0 <iconv_close@plt>
   16e90:	cmn	r0, #1
   16e94:	ble	16ef4 <sigaltstack@plt+0x5668>
   16e98:	mov	r0, r5
   16e9c:	pop	{r4, r5, r6, r7, fp, pc}
   16ea0:	mov	r0, r5
   16ea4:	bl	11580 <strdup@plt>
   16ea8:	mov	r4, r0
   16eac:	cmp	r0, #0
   16eb0:	beq	16ebc <sigaltstack@plt+0x5630>
   16eb4:	mov	r0, r4
   16eb8:	pop	{r4, r5, r6, r7, fp, pc}
   16ebc:	bl	1173c <__errno_location@plt>
   16ec0:	mov	r1, #12
   16ec4:	str	r1, [r0]
   16ec8:	mov	r4, #0
   16ecc:	mov	r0, r4
   16ed0:	pop	{r4, r5, r6, r7, fp, pc}
   16ed4:	bl	1173c <__errno_location@plt>
   16ed8:	mov	r5, r0
   16edc:	ldr	r7, [r0]
   16ee0:	mov	r0, r6
   16ee4:	bl	114c0 <iconv_close@plt>
   16ee8:	str	r7, [r5]
   16eec:	mov	r0, r4
   16ef0:	pop	{r4, r5, r6, r7, fp, pc}
   16ef4:	mov	r0, r5
   16ef8:	bl	15924 <sigaltstack@plt+0x4098>
   16efc:	mov	r0, r4
   16f00:	pop	{r4, r5, r6, r7, fp, pc}
   16f04:	push	{r4, r5, fp, lr}
   16f08:	add	fp, sp, #8
   16f0c:	mov	r4, r1
   16f10:	mov	r5, r0
   16f14:	mov	r1, #0
   16f18:	mov	r2, r4
   16f1c:	bl	11760 <memchr@plt>
   16f20:	sub	r1, r0, r5
   16f24:	cmp	r0, #0
   16f28:	addne	r4, r1, #1
   16f2c:	mov	r0, r4
   16f30:	pop	{r4, r5, fp, pc}
   16f34:	sub	sp, sp, #8
   16f38:	push	{fp, lr}
   16f3c:	mov	fp, sp
   16f40:	sub	sp, sp, #8
   16f44:	str	r2, [fp, #8]
   16f48:	str	r3, [fp, #12]
   16f4c:	add	r2, fp, #8
   16f50:	str	r2, [sp, #4]
   16f54:	cmp	r1, #11
   16f58:	bhi	16f98 <sigaltstack@plt+0x570c>
   16f5c:	mov	r2, #1
   16f60:	movw	r3, #1300	; 0x514
   16f64:	tst	r3, r2, lsl r1
   16f68:	bne	16fe8 <sigaltstack@plt+0x575c>
   16f6c:	movw	r3, #2570	; 0xa0a
   16f70:	tst	r3, r2, lsl r1
   16f74:	bne	16fc0 <sigaltstack@plt+0x5734>
   16f78:	cmp	r1, #0
   16f7c:	bne	16f98 <sigaltstack@plt+0x570c>
   16f80:	ldr	r1, [sp, #4]
   16f84:	add	r2, r1, #4
   16f88:	str	r2, [sp, #4]
   16f8c:	ldr	r1, [r1]
   16f90:	bl	1700c <sigaltstack@plt+0x5780>
   16f94:	b	16ffc <sigaltstack@plt+0x5770>
   16f98:	sub	r2, r1, #1024	; 0x400
   16f9c:	cmp	r2, #10
   16fa0:	bhi	16fe8 <sigaltstack@plt+0x575c>
   16fa4:	mov	ip, #1
   16fa8:	movw	r3, #645	; 0x285
   16fac:	tst	r3, ip, lsl r2
   16fb0:	bne	16fe8 <sigaltstack@plt+0x575c>
   16fb4:	movw	r3, #1282	; 0x502
   16fb8:	tst	r3, ip, lsl r2
   16fbc:	beq	16fc8 <sigaltstack@plt+0x573c>
   16fc0:	bl	117a8 <fcntl64@plt>
   16fc4:	b	16ffc <sigaltstack@plt+0x5770>
   16fc8:	cmp	r2, #6
   16fcc:	bne	16fe8 <sigaltstack@plt+0x575c>
   16fd0:	ldr	r1, [sp, #4]
   16fd4:	add	r2, r1, #4
   16fd8:	str	r2, [sp, #4]
   16fdc:	ldr	r1, [r1]
   16fe0:	bl	17018 <sigaltstack@plt+0x578c>
   16fe4:	b	16ffc <sigaltstack@plt+0x5770>
   16fe8:	ldr	r2, [sp, #4]
   16fec:	add	r3, r2, #4
   16ff0:	str	r3, [sp, #4]
   16ff4:	ldr	r2, [r2]
   16ff8:	bl	117a8 <fcntl64@plt>
   16ffc:	mov	sp, fp
   17000:	pop	{fp, lr}
   17004:	add	sp, sp, #8
   17008:	bx	lr
   1700c:	mov	r2, r1
   17010:	mov	r1, #0
   17014:	b	117a8 <fcntl64@plt>
   17018:	push	{r4, r5, r6, r7, fp, lr}
   1701c:	add	fp, sp, #16
   17020:	mov	r5, r1
   17024:	mov	r6, r0
   17028:	movw	r7, #38496	; 0x9660
   1702c:	movt	r7, #3
   17030:	ldr	r0, [r7]
   17034:	cmp	r0, #0
   17038:	bmi	1709c <sigaltstack@plt+0x5810>
   1703c:	mov	r0, r6
   17040:	movw	r1, #1030	; 0x406
   17044:	mov	r2, r5
   17048:	bl	117a8 <fcntl64@plt>
   1704c:	mov	r4, r0
   17050:	cmn	r0, #1
   17054:	bgt	17088 <sigaltstack@plt+0x57fc>
   17058:	bl	1173c <__errno_location@plt>
   1705c:	ldr	r0, [r0]
   17060:	cmp	r0, #22
   17064:	bne	17088 <sigaltstack@plt+0x57fc>
   17068:	mov	r0, r6
   1706c:	mov	r1, r5
   17070:	bl	1700c <sigaltstack@plt+0x5780>
   17074:	mov	r4, r0
   17078:	cmp	r0, #0
   1707c:	bmi	170ec <sigaltstack@plt+0x5860>
   17080:	mvn	r0, #0
   17084:	b	1708c <sigaltstack@plt+0x5800>
   17088:	mov	r0, #1
   1708c:	str	r0, [r7]
   17090:	cmp	r4, #0
   17094:	bpl	170b4 <sigaltstack@plt+0x5828>
   17098:	b	170ec <sigaltstack@plt+0x5860>
   1709c:	mov	r0, r6
   170a0:	mov	r1, r5
   170a4:	bl	1700c <sigaltstack@plt+0x5780>
   170a8:	mov	r4, r0
   170ac:	cmp	r4, #0
   170b0:	bmi	170ec <sigaltstack@plt+0x5860>
   170b4:	ldr	r0, [r7]
   170b8:	cmn	r0, #1
   170bc:	bne	170ec <sigaltstack@plt+0x5860>
   170c0:	mov	r0, r4
   170c4:	mov	r1, #1
   170c8:	bl	117a8 <fcntl64@plt>
   170cc:	cmp	r0, #0
   170d0:	bmi	170f4 <sigaltstack@plt+0x5868>
   170d4:	orr	r2, r0, #1
   170d8:	mov	r0, r4
   170dc:	mov	r1, #2
   170e0:	bl	117a8 <fcntl64@plt>
   170e4:	cmn	r0, #1
   170e8:	beq	170f4 <sigaltstack@plt+0x5868>
   170ec:	mov	r0, r4
   170f0:	pop	{r4, r5, r6, r7, fp, pc}
   170f4:	bl	1173c <__errno_location@plt>
   170f8:	mov	r5, r0
   170fc:	ldr	r6, [r0]
   17100:	mov	r0, r4
   17104:	bl	11868 <close@plt>
   17108:	str	r6, [r5]
   1710c:	mvn	r4, #0
   17110:	mov	r0, r4
   17114:	pop	{r4, r5, r6, r7, fp, pc}
   17118:	push	{r4, r5, r6, r7, fp, lr}
   1711c:	add	fp, sp, #16
   17120:	sub	sp, sp, #8
   17124:	mov	r7, r2
   17128:	mov	r4, r1
   1712c:	add	r5, sp, #4
   17130:	cmp	r0, #0
   17134:	movne	r5, r0
   17138:	mov	r0, r5
   1713c:	bl	11634 <mbrtowc@plt>
   17140:	mov	r6, r0
   17144:	cmp	r7, #0
   17148:	beq	17170 <sigaltstack@plt+0x58e4>
   1714c:	cmn	r6, #2
   17150:	bcc	17170 <sigaltstack@plt+0x58e4>
   17154:	mov	r0, #0
   17158:	bl	174a0 <sigaltstack@plt+0x5c14>
   1715c:	cmp	r0, #0
   17160:	bne	17170 <sigaltstack@plt+0x58e4>
   17164:	ldrb	r0, [r4]
   17168:	str	r0, [r5]
   1716c:	mov	r6, #1
   17170:	mov	r0, r6
   17174:	sub	sp, fp, #16
   17178:	pop	{r4, r5, r6, r7, fp, pc}
   1717c:	mov	r1, r0
   17180:	sub	r2, r0, #65	; 0x41
   17184:	mov	r0, #1
   17188:	cmp	r2, #26
   1718c:	subcs	r2, r1, #97	; 0x61
   17190:	cmpcs	r2, #26
   17194:	bcs	1719c <sigaltstack@plt+0x5910>
   17198:	bx	lr
   1719c:	sub	r1, r1, #48	; 0x30
   171a0:	cmp	r1, #10
   171a4:	movcs	r0, #0
   171a8:	bx	lr
   171ac:	mov	r1, r0
   171b0:	sub	r2, r0, #65	; 0x41
   171b4:	mov	r0, #1
   171b8:	cmp	r2, #26
   171bc:	subcs	r1, r1, #97	; 0x61
   171c0:	cmpcs	r1, #26
   171c4:	movcs	r0, #0
   171c8:	bx	lr
   171cc:	mov	r1, #0
   171d0:	cmp	r0, #128	; 0x80
   171d4:	movwcc	r1, #1
   171d8:	mov	r0, r1
   171dc:	bx	lr
   171e0:	sub	r1, r0, #9
   171e4:	clz	r1, r1
   171e8:	lsr	r1, r1, #5
   171ec:	sub	r0, r0, #32
   171f0:	clz	r0, r0
   171f4:	lsr	r0, r0, #5
   171f8:	orr	r0, r0, r1
   171fc:	bx	lr
   17200:	mov	r1, r0
   17204:	mov	r0, #1
   17208:	cmp	r1, #32
   1720c:	bxcc	lr
   17210:	cmp	r1, #127	; 0x7f
   17214:	movne	r0, #0
   17218:	bx	lr
   1721c:	sub	r1, r0, #48	; 0x30
   17220:	mov	r0, #0
   17224:	cmp	r1, #10
   17228:	movwcc	r0, #1
   1722c:	bx	lr
   17230:	sub	r1, r0, #33	; 0x21
   17234:	mov	r0, #0
   17238:	cmp	r1, #94	; 0x5e
   1723c:	movwcc	r0, #1
   17240:	bx	lr
   17244:	sub	r1, r0, #97	; 0x61
   17248:	mov	r0, #0
   1724c:	cmp	r1, #26
   17250:	movwcc	r0, #1
   17254:	bx	lr
   17258:	sub	r1, r0, #32
   1725c:	mov	r0, #0
   17260:	cmp	r1, #95	; 0x5f
   17264:	movwcc	r0, #1
   17268:	bx	lr
   1726c:	sub	r1, r0, #33	; 0x21
   17270:	cmp	r1, #93	; 0x5d
   17274:	bhi	17400 <sigaltstack@plt+0x5b74>
   17278:	mov	r0, #1
   1727c:	add	r2, pc, #0
   17280:	ldr	pc, [r2, r1, lsl #2]
   17284:	strdeq	r7, [r1], -ip
   17288:	strdeq	r7, [r1], -ip
   1728c:	strdeq	r7, [r1], -ip
   17290:	strdeq	r7, [r1], -ip
   17294:	strdeq	r7, [r1], -ip
   17298:	strdeq	r7, [r1], -ip
   1729c:	strdeq	r7, [r1], -ip
   172a0:	strdeq	r7, [r1], -ip
   172a4:	strdeq	r7, [r1], -ip
   172a8:	strdeq	r7, [r1], -ip
   172ac:	strdeq	r7, [r1], -ip
   172b0:	strdeq	r7, [r1], -ip
   172b4:	strdeq	r7, [r1], -ip
   172b8:	strdeq	r7, [r1], -ip
   172bc:	strdeq	r7, [r1], -ip
   172c0:	andeq	r7, r1, r0, lsl #8
   172c4:	andeq	r7, r1, r0, lsl #8
   172c8:	andeq	r7, r1, r0, lsl #8
   172cc:	andeq	r7, r1, r0, lsl #8
   172d0:	andeq	r7, r1, r0, lsl #8
   172d4:	andeq	r7, r1, r0, lsl #8
   172d8:	andeq	r7, r1, r0, lsl #8
   172dc:	andeq	r7, r1, r0, lsl #8
   172e0:	andeq	r7, r1, r0, lsl #8
   172e4:	andeq	r7, r1, r0, lsl #8
   172e8:	strdeq	r7, [r1], -ip
   172ec:	strdeq	r7, [r1], -ip
   172f0:	strdeq	r7, [r1], -ip
   172f4:	strdeq	r7, [r1], -ip
   172f8:	strdeq	r7, [r1], -ip
   172fc:	strdeq	r7, [r1], -ip
   17300:	strdeq	r7, [r1], -ip
   17304:	andeq	r7, r1, r0, lsl #8
   17308:	andeq	r7, r1, r0, lsl #8
   1730c:	andeq	r7, r1, r0, lsl #8
   17310:	andeq	r7, r1, r0, lsl #8
   17314:	andeq	r7, r1, r0, lsl #8
   17318:	andeq	r7, r1, r0, lsl #8
   1731c:	andeq	r7, r1, r0, lsl #8
   17320:	andeq	r7, r1, r0, lsl #8
   17324:	andeq	r7, r1, r0, lsl #8
   17328:	andeq	r7, r1, r0, lsl #8
   1732c:	andeq	r7, r1, r0, lsl #8
   17330:	andeq	r7, r1, r0, lsl #8
   17334:	andeq	r7, r1, r0, lsl #8
   17338:	andeq	r7, r1, r0, lsl #8
   1733c:	andeq	r7, r1, r0, lsl #8
   17340:	andeq	r7, r1, r0, lsl #8
   17344:	andeq	r7, r1, r0, lsl #8
   17348:	andeq	r7, r1, r0, lsl #8
   1734c:	andeq	r7, r1, r0, lsl #8
   17350:	andeq	r7, r1, r0, lsl #8
   17354:	andeq	r7, r1, r0, lsl #8
   17358:	andeq	r7, r1, r0, lsl #8
   1735c:	andeq	r7, r1, r0, lsl #8
   17360:	andeq	r7, r1, r0, lsl #8
   17364:	andeq	r7, r1, r0, lsl #8
   17368:	andeq	r7, r1, r0, lsl #8
   1736c:	strdeq	r7, [r1], -ip
   17370:	strdeq	r7, [r1], -ip
   17374:	strdeq	r7, [r1], -ip
   17378:	strdeq	r7, [r1], -ip
   1737c:	strdeq	r7, [r1], -ip
   17380:	strdeq	r7, [r1], -ip
   17384:	andeq	r7, r1, r0, lsl #8
   17388:	andeq	r7, r1, r0, lsl #8
   1738c:	andeq	r7, r1, r0, lsl #8
   17390:	andeq	r7, r1, r0, lsl #8
   17394:	andeq	r7, r1, r0, lsl #8
   17398:	andeq	r7, r1, r0, lsl #8
   1739c:	andeq	r7, r1, r0, lsl #8
   173a0:	andeq	r7, r1, r0, lsl #8
   173a4:	andeq	r7, r1, r0, lsl #8
   173a8:	andeq	r7, r1, r0, lsl #8
   173ac:	andeq	r7, r1, r0, lsl #8
   173b0:	andeq	r7, r1, r0, lsl #8
   173b4:	andeq	r7, r1, r0, lsl #8
   173b8:	andeq	r7, r1, r0, lsl #8
   173bc:	andeq	r7, r1, r0, lsl #8
   173c0:	andeq	r7, r1, r0, lsl #8
   173c4:	andeq	r7, r1, r0, lsl #8
   173c8:	andeq	r7, r1, r0, lsl #8
   173cc:	andeq	r7, r1, r0, lsl #8
   173d0:	andeq	r7, r1, r0, lsl #8
   173d4:	andeq	r7, r1, r0, lsl #8
   173d8:	andeq	r7, r1, r0, lsl #8
   173dc:	andeq	r7, r1, r0, lsl #8
   173e0:	andeq	r7, r1, r0, lsl #8
   173e4:	andeq	r7, r1, r0, lsl #8
   173e8:	andeq	r7, r1, r0, lsl #8
   173ec:	strdeq	r7, [r1], -ip
   173f0:	strdeq	r7, [r1], -ip
   173f4:	strdeq	r7, [r1], -ip
   173f8:	strdeq	r7, [r1], -ip
   173fc:	bx	lr
   17400:	mov	r0, #0
   17404:	bx	lr
   17408:	sub	r0, r0, #9
   1740c:	cmp	r0, #23
   17410:	movhi	r0, #0
   17414:	bxhi	lr
   17418:	bic	r0, r0, #-16777216	; 0xff000000
   1741c:	movw	r1, #31
   17420:	movt	r1, #128	; 0x80
   17424:	mov	r2, #1
   17428:	and	r0, r2, r1, lsr r0
   1742c:	bx	lr
   17430:	sub	r1, r0, #65	; 0x41
   17434:	mov	r0, #0
   17438:	cmp	r1, #26
   1743c:	movwcc	r0, #1
   17440:	bx	lr
   17444:	mov	r1, r0
   17448:	sub	r2, r0, #48	; 0x30
   1744c:	mov	r0, #1
   17450:	cmp	r2, #22
   17454:	bhi	1746c <sigaltstack@plt+0x5be0>
   17458:	mov	ip, #1
   1745c:	movw	r3, #1023	; 0x3ff
   17460:	movt	r3, #126	; 0x7e
   17464:	tst	r3, ip, lsl r2
   17468:	bxne	lr
   1746c:	sub	r1, r1, #97	; 0x61
   17470:	cmp	r1, #6
   17474:	movcs	r0, #0
   17478:	bxcs	lr
   1747c:	bx	lr
   17480:	sub	r1, r0, #65	; 0x41
   17484:	cmp	r1, #26
   17488:	addcc	r0, r0, #32
   1748c:	bx	lr
   17490:	sub	r1, r0, #97	; 0x61
   17494:	cmp	r1, #26
   17498:	subcc	r0, r0, #32
   1749c:	bx	lr
   174a0:	push	{r4, sl, fp, lr}
   174a4:	add	fp, sp, #8
   174a8:	sub	sp, sp, #264	; 0x108
   174ac:	add	r1, sp, #7
   174b0:	movw	r2, #257	; 0x101
   174b4:	bl	17700 <sigaltstack@plt+0x5e74>
   174b8:	mov	r4, #0
   174bc:	cmp	r0, #0
   174c0:	bne	17500 <sigaltstack@plt+0x5c74>
   174c4:	add	r0, sp, #7
   174c8:	movw	r1, #35415	; 0x8a57
   174cc:	movt	r1, #1
   174d0:	mov	r2, #2
   174d4:	bl	116f4 <bcmp@plt>
   174d8:	cmp	r0, #0
   174dc:	beq	17500 <sigaltstack@plt+0x5c74>
   174e0:	add	r0, sp, #7
   174e4:	movw	r1, #35417	; 0x8a59
   174e8:	movt	r1, #1
   174ec:	mov	r2, #6
   174f0:	bl	116f4 <bcmp@plt>
   174f4:	mov	r4, r0
   174f8:	cmp	r0, #0
   174fc:	movwne	r4, #1
   17500:	mov	r0, r4
   17504:	sub	sp, fp, #8
   17508:	pop	{r4, sl, fp, pc}
   1750c:	push	{r4, sl, fp, lr}
   17510:	add	fp, sp, #8
   17514:	mov	r4, #0
   17518:	adds	r0, r0, #16
   1751c:	adc	r1, r4, #0
   17520:	rsb	r2, r1, #0
   17524:	eors	r2, r2, r1
   17528:	movwne	r2, #1
   1752c:	cmp	r0, #0
   17530:	bmi	17550 <sigaltstack@plt+0x5cc4>
   17534:	cmp	r2, #0
   17538:	asreq	r2, r0, #31
   1753c:	eoreq	r3, r0, r0
   17540:	andeq	r2, r2, #1
   17544:	eoreq	r1, r1, r2
   17548:	orrseq	r1, r3, r1
   1754c:	beq	17558 <sigaltstack@plt+0x5ccc>
   17550:	mov	r0, r4
   17554:	pop	{r4, sl, fp, pc}
   17558:	bl	1167c <malloc@plt>
   1755c:	cmp	r0, #0
   17560:	addne	r4, r0, #8
   17564:	movne	r1, #8
   17568:	bfine	r4, r1, #0, #4
   1756c:	subne	r0, r4, r0
   17570:	strbne	r0, [r4, #-1]
   17574:	mov	r0, r4
   17578:	pop	{r4, sl, fp, pc}
   1757c:	push	{fp, lr}
   17580:	mov	fp, sp
   17584:	tst	r0, #7
   17588:	bne	175a4 <sigaltstack@plt+0x5d18>
   1758c:	tst	r0, #8
   17590:	popeq	{fp, pc}
   17594:	ldrb	r1, [r0, #-1]
   17598:	sub	r0, r0, r1
   1759c:	pop	{fp, lr}
   175a0:	b	15924 <sigaltstack@plt+0x4098>
   175a4:	bl	11850 <abort@plt>
   175a8:	push	{r4, sl, fp, lr}
   175ac:	add	fp, sp, #8
   175b0:	mov	r4, r0
   175b4:	bl	114fc <wcwidth@plt>
   175b8:	cmn	r0, #1
   175bc:	popgt	{r4, sl, fp, pc}
   175c0:	mov	r0, r4
   175c4:	bl	115bc <iswcntrl@plt>
   175c8:	clz	r0, r0
   175cc:	lsr	r0, r0, #5
   175d0:	pop	{r4, sl, fp, pc}
   175d4:	push	{r4, r5, r6, sl, fp, lr}
   175d8:	add	fp, sp, #16
   175dc:	mov	r5, r1
   175e0:	mov	r4, r0
   175e4:	ldr	r6, [r1], #16
   175e8:	cmp	r6, r1
   175ec:	bne	17600 <sigaltstack@plt+0x5d74>
   175f0:	ldr	r2, [r5, #4]
   175f4:	add	r6, r4, #16
   175f8:	mov	r0, r6
   175fc:	bl	1152c <memcpy@plt>
   17600:	str	r6, [r4]
   17604:	ldr	r0, [r5, #4]
   17608:	str	r0, [r4, #4]
   1760c:	ldrb	r0, [r5, #8]
   17610:	strb	r0, [r4, #8]
   17614:	cmp	r0, #0
   17618:	ldrne	r0, [r5, #12]
   1761c:	strne	r0, [r4, #12]
   17620:	pop	{r4, r5, r6, sl, fp, pc}
   17624:	ubfx	r1, r0, #5, #3
   17628:	movw	r2, #35424	; 0x8a60
   1762c:	movt	r2, #1
   17630:	ldr	r1, [r2, r1, lsl #2]
   17634:	and	r0, r0, #31
   17638:	mov	r2, #1
   1763c:	and	r0, r1, r2, lsl r0
   17640:	cmp	r0, #0
   17644:	movwne	r0, #1
   17648:	bx	lr
   1764c:	push	{r4, r5, r6, sl, fp, lr}
   17650:	add	fp, sp, #16
   17654:	sub	sp, sp, #56	; 0x38
   17658:	mov	r5, r0
   1765c:	bl	1161c <__ctype_get_mb_cur_max@plt>
   17660:	cmp	r0, #2
   17664:	bcc	176f0 <sigaltstack@plt+0x5e64>
   17668:	mov	r4, #0
   1766c:	str	r4, [sp, #8]
   17670:	str	r4, [sp, #4]
   17674:	strb	r4, [sp, #12]
   17678:	strb	r4, [sp]
   1767c:	str	r5, [sp, #16]
   17680:	mov	r0, sp
   17684:	bl	166f8 <sigaltstack@plt+0x4e6c>
   17688:	ldrb	r0, [sp, #24]
   1768c:	cmp	r0, #0
   17690:	beq	176a0 <sigaltstack@plt+0x5e14>
   17694:	ldr	r0, [sp, #28]
   17698:	cmp	r0, #0
   1769c:	beq	176e4 <sigaltstack@plt+0x5e58>
   176a0:	mov	r6, #0
   176a4:	mov	r5, sp
   176a8:	mov	r4, #0
   176ac:	strb	r6, [sp, #12]
   176b0:	ldr	r0, [sp, #16]
   176b4:	ldr	r1, [sp, #20]
   176b8:	add	r0, r0, r1
   176bc:	str	r0, [sp, #16]
   176c0:	mov	r0, r5
   176c4:	bl	166f8 <sigaltstack@plt+0x4e6c>
   176c8:	add	r4, r4, #1
   176cc:	ldr	r0, [sp, #28]
   176d0:	ldrb	r1, [sp, #24]
   176d4:	cmp	r1, #0
   176d8:	beq	176ac <sigaltstack@plt+0x5e20>
   176dc:	cmp	r0, #0
   176e0:	bne	176ac <sigaltstack@plt+0x5e20>
   176e4:	mov	r0, r4
   176e8:	sub	sp, fp, #16
   176ec:	pop	{r4, r5, r6, sl, fp, pc}
   176f0:	mov	r0, r5
   176f4:	sub	sp, fp, #16
   176f8:	pop	{r4, r5, r6, sl, fp, lr}
   176fc:	b	11700 <strlen@plt>
   17700:	b	17704 <sigaltstack@plt+0x5e78>
   17704:	push	{r4, r5, r6, r7, fp, lr}
   17708:	add	fp, sp, #16
   1770c:	mov	r6, r2
   17710:	mov	r4, r1
   17714:	bl	1779c <sigaltstack@plt+0x5f10>
   17718:	cmp	r0, #0
   1771c:	beq	1774c <sigaltstack@plt+0x5ec0>
   17720:	mov	r7, r0
   17724:	bl	11700 <strlen@plt>
   17728:	cmp	r0, r6
   1772c:	bcs	17768 <sigaltstack@plt+0x5edc>
   17730:	add	r2, r0, #1
   17734:	mov	r0, r4
   17738:	mov	r1, r7
   1773c:	bl	1152c <memcpy@plt>
   17740:	mov	r5, #0
   17744:	mov	r0, r5
   17748:	pop	{r4, r5, r6, r7, fp, pc}
   1774c:	mov	r5, #22
   17750:	cmp	r6, #0
   17754:	beq	17790 <sigaltstack@plt+0x5f04>
   17758:	mov	r0, #0
   1775c:	strb	r0, [r4]
   17760:	mov	r0, r5
   17764:	pop	{r4, r5, r6, r7, fp, pc}
   17768:	mov	r5, #34	; 0x22
   1776c:	cmp	r6, #0
   17770:	beq	17790 <sigaltstack@plt+0x5f04>
   17774:	sub	r6, r6, #1
   17778:	mov	r0, r4
   1777c:	mov	r1, r7
   17780:	mov	r2, r6
   17784:	bl	1152c <memcpy@plt>
   17788:	mov	r0, #0
   1778c:	strb	r0, [r4, r6]
   17790:	mov	r0, r5
   17794:	pop	{r4, r5, r6, r7, fp, pc}
   17798:	b	1779c <sigaltstack@plt+0x5f10>
   1779c:	mov	r1, #0
   177a0:	b	117b4 <setlocale@plt>
   177a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   177a8:	mov	r7, r0
   177ac:	ldr	r6, [pc, #72]	; 177fc <sigaltstack@plt+0x5f70>
   177b0:	ldr	r5, [pc, #72]	; 17800 <sigaltstack@plt+0x5f74>
   177b4:	add	r6, pc, r6
   177b8:	add	r5, pc, r5
   177bc:	sub	r6, r6, r5
   177c0:	mov	r8, r1
   177c4:	mov	r9, r2
   177c8:	bl	11470 <fdopen@plt-0x20>
   177cc:	asrs	r6, r6, #2
   177d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   177d4:	mov	r4, #0
   177d8:	add	r4, r4, #1
   177dc:	ldr	r3, [r5], #4
   177e0:	mov	r2, r9
   177e4:	mov	r1, r8
   177e8:	mov	r0, r7
   177ec:	blx	r3
   177f0:	cmp	r6, r4
   177f4:	bne	177d8 <sigaltstack@plt+0x5f4c>
   177f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   177fc:	andeq	r1, r1, r0, asr r7
   17800:	andeq	r1, r1, r8, asr #14
   17804:	bx	lr
   17808:	mov	r2, r1
   1780c:	mov	r1, r0
   17810:	mov	r0, #3
   17814:	b	1182c <__xstat64@plt>

Disassembly of section .fini:

00017818 <.fini>:
   17818:	push	{r3, lr}
   1781c:	pop	{r3, pc}
