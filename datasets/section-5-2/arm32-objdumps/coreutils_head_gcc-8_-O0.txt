
../repos/coreutils/src/head:     file format elf32-littlearm


Disassembly of section .init:

00010cc0 <.init>:
   10cc0:	push	{r3, lr}
   10cc4:	bl	10fbc <__assert_fail@plt+0x48>
   10cc8:	pop	{r3, pc}

Disassembly of section .plt:

00010ccc <calloc@plt-0x14>:
   10ccc:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd0:	ldr	lr, [pc, #4]	; 10cdc <calloc@plt-0x4>
   10cd4:	add	lr, pc, lr
   10cd8:	ldr	pc, [lr, #8]!
   10cdc:	andeq	sl, r1, r4, lsr #6

00010ce0 <calloc@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #106496	; 0x1a000
   10ce8:	ldr	pc, [ip, #804]!	; 0x324

00010cec <fputs_unlocked@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #106496	; 0x1a000
   10cf4:	ldr	pc, [ip, #796]!	; 0x31c

00010cf8 <raise@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #106496	; 0x1a000
   10d00:	ldr	pc, [ip, #788]!	; 0x314

00010d04 <strcmp@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #106496	; 0x1a000
   10d0c:	ldr	pc, [ip, #780]!	; 0x30c

00010d10 <printf@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #106496	; 0x1a000
   10d18:	ldr	pc, [ip, #772]!	; 0x304

00010d1c <read@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #106496	; 0x1a000
   10d24:	ldr	pc, [ip, #764]!	; 0x2fc

00010d28 <fflush@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #106496	; 0x1a000
   10d30:	ldr	pc, [ip, #756]!	; 0x2f4

00010d34 <free@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #106496	; 0x1a000
   10d3c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #106496	; 0x1a000
   10d48:	ldr	pc, [ip, #740]!	; 0x2e4

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #106496	; 0x1a000
   10d54:	ldr	pc, [ip, #732]!	; 0x2dc

00010d58 <mbsinit@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #106496	; 0x1a000
   10d60:	ldr	pc, [ip, #724]!	; 0x2d4

00010d64 <fwrite_unlocked@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #106496	; 0x1a000
   10d6c:	ldr	pc, [ip, #716]!	; 0x2cc

00010d70 <memcmp@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #106496	; 0x1a000
   10d78:	ldr	pc, [ip, #708]!	; 0x2c4

00010d7c <fputc_unlocked@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #106496	; 0x1a000
   10d84:	ldr	pc, [ip, #700]!	; 0x2bc

00010d88 <realloc@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #106496	; 0x1a000
   10d90:	ldr	pc, [ip, #692]!	; 0x2b4

00010d94 <textdomain@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #106496	; 0x1a000
   10d9c:	ldr	pc, [ip, #684]!	; 0x2ac

00010da0 <rawmemchr@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #106496	; 0x1a000
   10da8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dac <iswprint@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #106496	; 0x1a000
   10db4:	ldr	pc, [ip, #668]!	; 0x29c

00010db8 <__fxstat64@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #106496	; 0x1a000
   10dc0:	ldr	pc, [ip, #660]!	; 0x294

00010dc4 <fwrite@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #106496	; 0x1a000
   10dcc:	ldr	pc, [ip, #652]!	; 0x28c

00010dd0 <lseek64@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #106496	; 0x1a000
   10dd8:	ldr	pc, [ip, #644]!	; 0x284

00010ddc <__ctype_get_mb_cur_max@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #106496	; 0x1a000
   10de4:	ldr	pc, [ip, #636]!	; 0x27c

00010de8 <__fpending@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #106496	; 0x1a000
   10df0:	ldr	pc, [ip, #628]!	; 0x274

00010df4 <ferror_unlocked@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #106496	; 0x1a000
   10dfc:	ldr	pc, [ip, #620]!	; 0x26c

00010e00 <mbrtowc@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #106496	; 0x1a000
   10e08:	ldr	pc, [ip, #612]!	; 0x264

00010e0c <error@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #106496	; 0x1a000
   10e14:	ldr	pc, [ip, #604]!	; 0x25c

00010e18 <open64@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #106496	; 0x1a000
   10e20:	ldr	pc, [ip, #596]!	; 0x254

00010e24 <malloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #106496	; 0x1a000
   10e2c:	ldr	pc, [ip, #588]!	; 0x24c

00010e30 <__libc_start_main@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #106496	; 0x1a000
   10e38:	ldr	pc, [ip, #580]!	; 0x244

00010e3c <__freading@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #106496	; 0x1a000
   10e44:	ldr	pc, [ip, #572]!	; 0x23c

00010e48 <__gmon_start__@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #106496	; 0x1a000
   10e50:	ldr	pc, [ip, #564]!	; 0x234

00010e54 <getopt_long@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #106496	; 0x1a000
   10e5c:	ldr	pc, [ip, #556]!	; 0x22c

00010e60 <__ctype_b_loc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #106496	; 0x1a000
   10e68:	ldr	pc, [ip, #548]!	; 0x224

00010e6c <exit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #106496	; 0x1a000
   10e74:	ldr	pc, [ip, #540]!	; 0x21c

00010e78 <gettext@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #106496	; 0x1a000
   10e80:	ldr	pc, [ip, #532]!	; 0x214

00010e84 <strlen@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #106496	; 0x1a000
   10e8c:	ldr	pc, [ip, #524]!	; 0x20c

00010e90 <strchr@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #106496	; 0x1a000
   10e98:	ldr	pc, [ip, #516]!	; 0x204

00010e9c <memrchr@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #106496	; 0x1a000
   10ea4:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea8 <fprintf@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #106496	; 0x1a000
   10eb0:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb4 <__errno_location@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #106496	; 0x1a000
   10ebc:	ldr	pc, [ip, #492]!	; 0x1ec

00010ec0 <__cxa_atexit@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #106496	; 0x1a000
   10ec8:	ldr	pc, [ip, #484]!	; 0x1e4

00010ecc <memset@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #106496	; 0x1a000
   10ed4:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed8 <fileno@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #106496	; 0x1a000
   10ee0:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee4 <strtoumax@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #106496	; 0x1a000
   10eec:	ldr	pc, [ip, #460]!	; 0x1cc

00010ef0 <memchr@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #106496	; 0x1a000
   10ef8:	ldr	pc, [ip, #452]!	; 0x1c4

00010efc <fclose@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #106496	; 0x1a000
   10f04:	ldr	pc, [ip, #444]!	; 0x1bc

00010f08 <fseeko64@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #106496	; 0x1a000
   10f10:	ldr	pc, [ip, #436]!	; 0x1b4

00010f14 <setlocale@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #106496	; 0x1a000
   10f1c:	ldr	pc, [ip, #428]!	; 0x1ac

00010f20 <strrchr@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #106496	; 0x1a000
   10f28:	ldr	pc, [ip, #420]!	; 0x1a4

00010f2c <nl_langinfo@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #106496	; 0x1a000
   10f34:	ldr	pc, [ip, #412]!	; 0x19c

00010f38 <clearerr_unlocked@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #106496	; 0x1a000
   10f40:	ldr	pc, [ip, #404]!	; 0x194

00010f44 <bindtextdomain@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #106496	; 0x1a000
   10f4c:	ldr	pc, [ip, #396]!	; 0x18c

00010f50 <strncmp@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #106496	; 0x1a000
   10f58:	ldr	pc, [ip, #388]!	; 0x184

00010f5c <abort@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #106496	; 0x1a000
   10f64:	ldr	pc, [ip, #380]!	; 0x17c

00010f68 <close@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #106496	; 0x1a000
   10f70:	ldr	pc, [ip, #372]!	; 0x174

00010f74 <__assert_fail@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #106496	; 0x1a000
   10f7c:	ldr	pc, [ip, #364]!	; 0x16c

Disassembly of section .text:

00010f80 <.text>:
   10f80:	mov	fp, #0
   10f84:	mov	lr, #0
   10f88:	pop	{r1}		; (ldr r1, [sp], #4)
   10f8c:	mov	r2, sp
   10f90:	push	{r2}		; (str r2, [sp, #-4]!)
   10f94:	push	{r0}		; (str r0, [sp, #-4]!)
   10f98:	ldr	ip, [pc, #16]	; 10fb0 <__assert_fail@plt+0x3c>
   10f9c:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa0:	ldr	r0, [pc, #12]	; 10fb4 <__assert_fail@plt+0x40>
   10fa4:	ldr	r3, [pc, #12]	; 10fb8 <__assert_fail@plt+0x44>
   10fa8:	bl	10e30 <__libc_start_main@plt>
   10fac:	bl	10f5c <abort@plt>
   10fb0:	andeq	r9, r1, r4, asr #30
   10fb4:	muleq	r1, ip, r8
   10fb8:	andeq	r9, r1, r4, ror #29
   10fbc:	ldr	r3, [pc, #20]	; 10fd8 <__assert_fail@plt+0x64>
   10fc0:	ldr	r2, [pc, #20]	; 10fdc <__assert_fail@plt+0x68>
   10fc4:	add	r3, pc, r3
   10fc8:	ldr	r2, [r3, r2]
   10fcc:	cmp	r2, #0
   10fd0:	bxeq	lr
   10fd4:	b	10e48 <__gmon_start__@plt>
   10fd8:	andeq	sl, r1, r4, lsr r0
   10fdc:	andeq	r0, r0, ip, ror #1
   10fe0:	ldr	r0, [pc, #24]	; 11000 <__assert_fail@plt+0x8c>
   10fe4:	ldr	r3, [pc, #24]	; 11004 <__assert_fail@plt+0x90>
   10fe8:	cmp	r3, r0
   10fec:	bxeq	lr
   10ff0:	ldr	r3, [pc, #16]	; 11008 <__assert_fail@plt+0x94>
   10ff4:	cmp	r3, #0
   10ff8:	bxeq	lr
   10ffc:	bx	r3
   11000:	andeq	fp, r2, r4, asr #2
   11004:	andeq	fp, r2, r4, asr #2
   11008:	andeq	r0, r0, r0
   1100c:	ldr	r0, [pc, #36]	; 11038 <__assert_fail@plt+0xc4>
   11010:	ldr	r1, [pc, #36]	; 1103c <__assert_fail@plt+0xc8>
   11014:	sub	r1, r1, r0
   11018:	asr	r1, r1, #2
   1101c:	add	r1, r1, r1, lsr #31
   11020:	asrs	r1, r1, #1
   11024:	bxeq	lr
   11028:	ldr	r3, [pc, #16]	; 11040 <__assert_fail@plt+0xcc>
   1102c:	cmp	r3, #0
   11030:	bxeq	lr
   11034:	bx	r3
   11038:	andeq	fp, r2, r4, asr #2
   1103c:	andeq	fp, r2, r4, asr #2
   11040:	andeq	r0, r0, r0
   11044:	push	{r4, lr}
   11048:	ldr	r4, [pc, #24]	; 11068 <__assert_fail@plt+0xf4>
   1104c:	ldrb	r3, [r4]
   11050:	cmp	r3, #0
   11054:	popne	{r4, pc}
   11058:	bl	10fe0 <__assert_fail@plt+0x6c>
   1105c:	mov	r3, #1
   11060:	strb	r3, [r4]
   11064:	pop	{r4, pc}
   11068:	andeq	fp, r2, r4, ror #2
   1106c:	b	1100c <__assert_fail@plt+0x98>
   11070:	str	fp, [sp, #-8]!
   11074:	str	lr, [sp, #4]
   11078:	add	fp, sp, #4
   1107c:	movw	r0, #40828	; 0x9f7c
   11080:	movt	r0, #1
   11084:	bl	10e78 <gettext@plt>
   11088:	mov	r2, r0
   1108c:	movw	r3, #45404	; 0xb15c
   11090:	movt	r3, #2
   11094:	ldr	r3, [r3]
   11098:	mov	r1, r3
   1109c:	mov	r0, r2
   110a0:	bl	10cec <fputs_unlocked@plt>
   110a4:	nop	{0}
   110a8:	sub	sp, fp, #4
   110ac:	ldr	fp, [sp]
   110b0:	add	sp, sp, #4
   110b4:	pop	{pc}		; (ldr pc, [sp], #4)
   110b8:	str	fp, [sp, #-8]!
   110bc:	str	lr, [sp, #4]
   110c0:	add	fp, sp, #4
   110c4:	movw	r0, #40884	; 0x9fb4
   110c8:	movt	r0, #1
   110cc:	bl	10e78 <gettext@plt>
   110d0:	mov	r2, r0
   110d4:	movw	r3, #45404	; 0xb15c
   110d8:	movt	r3, #2
   110dc:	ldr	r3, [r3]
   110e0:	mov	r1, r3
   110e4:	mov	r0, r2
   110e8:	bl	10cec <fputs_unlocked@plt>
   110ec:	nop	{0}
   110f0:	sub	sp, fp, #4
   110f4:	ldr	fp, [sp]
   110f8:	add	sp, sp, #4
   110fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11100:	str	fp, [sp, #-8]!
   11104:	str	lr, [sp, #4]
   11108:	add	fp, sp, #4
   1110c:	sub	sp, sp, #80	; 0x50
   11110:	str	r0, [fp, #-80]	; 0xffffffb0
   11114:	movw	r2, #41332	; 0xa174
   11118:	movt	r2, #1
   1111c:	sub	r3, fp, #72	; 0x48
   11120:	ldrd	r0, [r2]
   11124:	strd	r0, [r3]
   11128:	ldrd	r0, [r2, #8]
   1112c:	strd	r0, [r3, #8]
   11130:	ldrd	r0, [r2, #16]
   11134:	strd	r0, [r3, #16]
   11138:	ldrd	r0, [r2, #24]
   1113c:	strd	r0, [r3, #24]
   11140:	ldrd	r0, [r2, #32]
   11144:	strd	r0, [r3, #32]
   11148:	ldrd	r0, [r2, #40]	; 0x28
   1114c:	strd	r0, [r3, #40]	; 0x28
   11150:	ldrd	r0, [r2, #48]	; 0x30
   11154:	strd	r0, [r3, #48]	; 0x30
   11158:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1115c:	str	r3, [fp, #-8]
   11160:	sub	r3, fp, #72	; 0x48
   11164:	str	r3, [fp, #-12]
   11168:	b	11178 <__assert_fail@plt+0x204>
   1116c:	ldr	r3, [fp, #-12]
   11170:	add	r3, r3, #8
   11174:	str	r3, [fp, #-12]
   11178:	ldr	r3, [fp, #-12]
   1117c:	ldr	r3, [r3]
   11180:	cmp	r3, #0
   11184:	beq	111a8 <__assert_fail@plt+0x234>
   11188:	ldr	r3, [fp, #-12]
   1118c:	ldr	r3, [r3]
   11190:	mov	r1, r3
   11194:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11198:	bl	10d04 <strcmp@plt>
   1119c:	mov	r3, r0
   111a0:	cmp	r3, #0
   111a4:	bne	1116c <__assert_fail@plt+0x1f8>
   111a8:	ldr	r3, [fp, #-12]
   111ac:	ldr	r3, [r3, #4]
   111b0:	cmp	r3, #0
   111b4:	beq	111c4 <__assert_fail@plt+0x250>
   111b8:	ldr	r3, [fp, #-12]
   111bc:	ldr	r3, [r3, #4]
   111c0:	str	r3, [fp, #-8]
   111c4:	movw	r0, #40960	; 0xa000
   111c8:	movt	r0, #1
   111cc:	bl	10e78 <gettext@plt>
   111d0:	mov	r3, r0
   111d4:	movw	r2, #40984	; 0xa018
   111d8:	movt	r2, #1
   111dc:	movw	r1, #41024	; 0xa040
   111e0:	movt	r1, #1
   111e4:	mov	r0, r3
   111e8:	bl	10d10 <printf@plt>
   111ec:	mov	r1, #0
   111f0:	mov	r0, #5
   111f4:	bl	10f14 <setlocale@plt>
   111f8:	str	r0, [fp, #-16]
   111fc:	ldr	r3, [fp, #-16]
   11200:	cmp	r3, #0
   11204:	beq	11250 <__assert_fail@plt+0x2dc>
   11208:	mov	r2, #3
   1120c:	movw	r1, #41040	; 0xa050
   11210:	movt	r1, #1
   11214:	ldr	r0, [fp, #-16]
   11218:	bl	10f50 <strncmp@plt>
   1121c:	mov	r3, r0
   11220:	cmp	r3, #0
   11224:	beq	11250 <__assert_fail@plt+0x2dc>
   11228:	movw	r0, #41044	; 0xa054
   1122c:	movt	r0, #1
   11230:	bl	10e78 <gettext@plt>
   11234:	mov	r2, r0
   11238:	movw	r3, #45404	; 0xb15c
   1123c:	movt	r3, #2
   11240:	ldr	r3, [r3]
   11244:	mov	r1, r3
   11248:	mov	r0, r2
   1124c:	bl	10cec <fputs_unlocked@plt>
   11250:	movw	r0, #41116	; 0xa09c
   11254:	movt	r0, #1
   11258:	bl	10e78 <gettext@plt>
   1125c:	mov	r3, r0
   11260:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11264:	movw	r1, #40984	; 0xa018
   11268:	movt	r1, #1
   1126c:	mov	r0, r3
   11270:	bl	10d10 <printf@plt>
   11274:	movw	r0, #41144	; 0xa0b8
   11278:	movt	r0, #1
   1127c:	bl	10e78 <gettext@plt>
   11280:	ldr	r2, [fp, #-8]
   11284:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11288:	cmp	r2, r3
   1128c:	bne	1129c <__assert_fail@plt+0x328>
   11290:	movw	r3, #41196	; 0xa0ec
   11294:	movt	r3, #1
   11298:	b	112a4 <__assert_fail@plt+0x330>
   1129c:	movw	r3, #41208	; 0xa0f8
   112a0:	movt	r3, #1
   112a4:	mov	r2, r3
   112a8:	ldr	r1, [fp, #-8]
   112ac:	bl	10d10 <printf@plt>
   112b0:	nop	{0}
   112b4:	sub	sp, fp, #4
   112b8:	ldr	fp, [sp]
   112bc:	add	sp, sp, #4
   112c0:	pop	{pc}		; (ldr pc, [sp], #4)
   112c4:	push	{fp}		; (str fp, [sp, #-4]!)
   112c8:	add	fp, sp, #0
   112cc:	sub	sp, sp, #12
   112d0:	str	r0, [fp, #-8]
   112d4:	ldr	r3, [fp, #-8]
   112d8:	ldr	r3, [r3, #16]
   112dc:	and	r3, r3, #61440	; 0xf000
   112e0:	cmp	r3, #32768	; 0x8000
   112e4:	beq	112fc <__assert_fail@plt+0x388>
   112e8:	ldr	r3, [fp, #-8]
   112ec:	ldr	r3, [r3, #16]
   112f0:	and	r3, r3, #61440	; 0xf000
   112f4:	cmp	r3, #40960	; 0xa000
   112f8:	bne	11304 <__assert_fail@plt+0x390>
   112fc:	mov	r3, #1
   11300:	b	11308 <__assert_fail@plt+0x394>
   11304:	mov	r3, #0
   11308:	and	r3, r3, #1
   1130c:	uxtb	r3, r3
   11310:	mov	r0, r3
   11314:	add	sp, fp, #0
   11318:	pop	{fp}		; (ldr fp, [sp], #4)
   1131c:	bx	lr
   11320:	str	r4, [sp, #-12]!
   11324:	str	fp, [sp, #4]
   11328:	str	lr, [sp, #8]
   1132c:	add	fp, sp, #8
   11330:	sub	sp, sp, #12
   11334:	str	r0, [fp, #-16]
   11338:	ldr	r3, [fp, #-16]
   1133c:	cmp	r3, #0
   11340:	beq	1137c <__assert_fail@plt+0x408>
   11344:	movw	r3, #45400	; 0xb158
   11348:	movt	r3, #2
   1134c:	ldr	r4, [r3]
   11350:	movw	r0, #41640	; 0xa2a8
   11354:	movt	r0, #1
   11358:	bl	10e78 <gettext@plt>
   1135c:	mov	r1, r0
   11360:	movw	r3, #45428	; 0xb174
   11364:	movt	r3, #2
   11368:	ldr	r3, [r3]
   1136c:	mov	r2, r3
   11370:	mov	r0, r4
   11374:	bl	10ea8 <fprintf@plt>
   11378:	b	114b8 <__assert_fail@plt+0x544>
   1137c:	movw	r0, #41680	; 0xa2d0
   11380:	movt	r0, #1
   11384:	bl	10e78 <gettext@plt>
   11388:	mov	r2, r0
   1138c:	movw	r3, #45428	; 0xb174
   11390:	movt	r3, #2
   11394:	ldr	r3, [r3]
   11398:	mov	r1, r3
   1139c:	mov	r0, r2
   113a0:	bl	10d10 <printf@plt>
   113a4:	movw	r0, #41716	; 0xa2f4
   113a8:	movt	r0, #1
   113ac:	bl	10e78 <gettext@plt>
   113b0:	mov	r3, r0
   113b4:	mov	r1, #10
   113b8:	mov	r0, r3
   113bc:	bl	10d10 <printf@plt>
   113c0:	bl	11070 <__assert_fail@plt+0xfc>
   113c4:	bl	110b8 <__assert_fail@plt+0x144>
   113c8:	movw	r0, #41852	; 0xa37c
   113cc:	movt	r0, #1
   113d0:	bl	10e78 <gettext@plt>
   113d4:	mov	r3, r0
   113d8:	mov	r1, #10
   113dc:	mov	r0, r3
   113e0:	bl	10d10 <printf@plt>
   113e4:	movw	r0, #42252	; 0xa50c
   113e8:	movt	r0, #1
   113ec:	bl	10e78 <gettext@plt>
   113f0:	mov	r2, r0
   113f4:	movw	r3, #45404	; 0xb15c
   113f8:	movt	r3, #2
   113fc:	ldr	r3, [r3]
   11400:	mov	r1, r3
   11404:	mov	r0, r2
   11408:	bl	10cec <fputs_unlocked@plt>
   1140c:	movw	r0, #42384	; 0xa590
   11410:	movt	r0, #1
   11414:	bl	10e78 <gettext@plt>
   11418:	mov	r2, r0
   1141c:	movw	r3, #45404	; 0xb15c
   11420:	movt	r3, #2
   11424:	ldr	r3, [r3]
   11428:	mov	r1, r3
   1142c:	mov	r0, r2
   11430:	bl	10cec <fputs_unlocked@plt>
   11434:	movw	r0, #42448	; 0xa5d0
   11438:	movt	r0, #1
   1143c:	bl	10e78 <gettext@plt>
   11440:	mov	r2, r0
   11444:	movw	r3, #45404	; 0xb15c
   11448:	movt	r3, #2
   1144c:	ldr	r3, [r3]
   11450:	mov	r1, r3
   11454:	mov	r0, r2
   11458:	bl	10cec <fputs_unlocked@plt>
   1145c:	movw	r0, #42496	; 0xa600
   11460:	movt	r0, #1
   11464:	bl	10e78 <gettext@plt>
   11468:	mov	r2, r0
   1146c:	movw	r3, #45404	; 0xb15c
   11470:	movt	r3, #2
   11474:	ldr	r3, [r3]
   11478:	mov	r1, r3
   1147c:	mov	r0, r2
   11480:	bl	10cec <fputs_unlocked@plt>
   11484:	movw	r0, #42552	; 0xa638
   11488:	movt	r0, #1
   1148c:	bl	10e78 <gettext@plt>
   11490:	mov	r2, r0
   11494:	movw	r3, #45404	; 0xb15c
   11498:	movt	r3, #2
   1149c:	ldr	r3, [r3]
   114a0:	mov	r1, r3
   114a4:	mov	r0, r2
   114a8:	bl	10cec <fputs_unlocked@plt>
   114ac:	movw	r0, #42764	; 0xa70c
   114b0:	movt	r0, #1
   114b4:	bl	11100 <__assert_fail@plt+0x18c>
   114b8:	ldr	r0, [fp, #-16]
   114bc:	bl	10e6c <exit@plt>
   114c0:	strd	r4, [sp, #-16]!
   114c4:	str	fp, [sp, #8]
   114c8:	str	lr, [sp, #12]
   114cc:	add	fp, sp, #12
   114d0:	sub	sp, sp, #8
   114d4:	str	r0, [fp, #-16]
   114d8:	str	r1, [fp, #-20]	; 0xffffffec
   114dc:	ldr	r3, [fp, #-16]
   114e0:	cmp	r3, #1
   114e4:	beq	114f8 <__assert_fail@plt+0x584>
   114e8:	ldr	r3, [fp, #-16]
   114ec:	cmp	r3, #2
   114f0:	beq	11538 <__assert_fail@plt+0x5c4>
   114f4:	b	1157c <__assert_fail@plt+0x608>
   114f8:	bl	10eb4 <__errno_location@plt>
   114fc:	mov	r3, r0
   11500:	ldr	r4, [r3]
   11504:	movw	r0, #42772	; 0xa714
   11508:	movt	r0, #1
   1150c:	bl	10e78 <gettext@plt>
   11510:	mov	r5, r0
   11514:	ldr	r1, [fp, #-20]	; 0xffffffec
   11518:	mov	r0, #4
   1151c:	bl	1696c <__assert_fail@plt+0x59f8>
   11520:	mov	r3, r0
   11524:	mov	r2, r5
   11528:	mov	r1, r4
   1152c:	mov	r0, #0
   11530:	bl	10e0c <error@plt>
   11534:	b	11580 <__assert_fail@plt+0x60c>
   11538:	bl	10eb4 <__errno_location@plt>
   1153c:	mov	r3, r0
   11540:	ldr	r4, [r3]
   11544:	movw	r0, #42792	; 0xa728
   11548:	movt	r0, #1
   1154c:	bl	10e78 <gettext@plt>
   11550:	mov	r5, r0
   11554:	ldr	r2, [fp, #-20]	; 0xffffffec
   11558:	mov	r1, #3
   1155c:	mov	r0, #0
   11560:	bl	16b50 <__assert_fail@plt+0x5bdc>
   11564:	mov	r3, r0
   11568:	mov	r2, r5
   1156c:	mov	r1, r4
   11570:	mov	r0, #0
   11574:	bl	10e0c <error@plt>
   11578:	b	11580 <__assert_fail@plt+0x60c>
   1157c:	bl	10f5c <abort@plt>
   11580:	nop	{0}
   11584:	sub	sp, fp, #12
   11588:	ldrd	r4, [sp]
   1158c:	ldr	fp, [sp, #8]
   11590:	add	sp, sp, #12
   11594:	pop	{pc}		; (ldr pc, [sp], #4)
   11598:	str	fp, [sp, #-8]!
   1159c:	str	lr, [sp, #4]
   115a0:	add	fp, sp, #4
   115a4:	sub	sp, sp, #8
   115a8:	str	r0, [fp, #-8]
   115ac:	movw	r3, #45304	; 0xb0f8
   115b0:	movt	r3, #2
   115b4:	ldrb	r3, [r3]
   115b8:	cmp	r3, #0
   115bc:	beq	115cc <__assert_fail@plt+0x658>
   115c0:	movw	r3, #41208	; 0xa0f8
   115c4:	movt	r3, #1
   115c8:	b	115d4 <__assert_fail@plt+0x660>
   115cc:	movw	r3, #42824	; 0xa748
   115d0:	movt	r3, #1
   115d4:	ldr	r2, [fp, #-8]
   115d8:	mov	r1, r3
   115dc:	movw	r0, #42828	; 0xa74c
   115e0:	movt	r0, #1
   115e4:	bl	10d10 <printf@plt>
   115e8:	movw	r3, #45304	; 0xb0f8
   115ec:	movt	r3, #2
   115f0:	mov	r2, #0
   115f4:	strb	r2, [r3]
   115f8:	nop	{0}
   115fc:	sub	sp, fp, #4
   11600:	ldr	fp, [sp]
   11604:	add	sp, sp, #4
   11608:	pop	{pc}		; (ldr pc, [sp], #4)
   1160c:	strd	r4, [sp, #-16]!
   11610:	str	fp, [sp, #8]
   11614:	str	lr, [sp, #12]
   11618:	add	fp, sp, #12
   1161c:	sub	sp, sp, #8
   11620:	str	r0, [fp, #-16]
   11624:	str	r1, [fp, #-20]	; 0xffffffec
   11628:	ldr	r3, [fp, #-20]	; 0xffffffec
   1162c:	cmp	r3, #0
   11630:	beq	116b4 <__assert_fail@plt+0x740>
   11634:	movw	r3, #45404	; 0xb15c
   11638:	movt	r3, #2
   1163c:	ldr	r3, [r3]
   11640:	ldr	r2, [fp, #-20]	; 0xffffffec
   11644:	mov	r1, #1
   11648:	ldr	r0, [fp, #-16]
   1164c:	bl	10d64 <fwrite_unlocked@plt>
   11650:	mov	r2, r0
   11654:	ldr	r3, [fp, #-20]	; 0xffffffec
   11658:	cmp	r3, r2
   1165c:	bls	116b4 <__assert_fail@plt+0x740>
   11660:	movw	r3, #45404	; 0xb15c
   11664:	movt	r3, #2
   11668:	ldr	r3, [r3]
   1166c:	mov	r0, r3
   11670:	bl	10f38 <clearerr_unlocked@plt>
   11674:	bl	10eb4 <__errno_location@plt>
   11678:	mov	r3, r0
   1167c:	ldr	r4, [r3]
   11680:	movw	r0, #42844	; 0xa75c
   11684:	movt	r0, #1
   11688:	bl	10e78 <gettext@plt>
   1168c:	mov	r5, r0
   11690:	movw	r1, #42864	; 0xa770
   11694:	movt	r1, #1
   11698:	mov	r0, #4
   1169c:	bl	1696c <__assert_fail@plt+0x59f8>
   116a0:	mov	r3, r0
   116a4:	mov	r2, r5
   116a8:	mov	r1, r4
   116ac:	mov	r0, #1
   116b0:	bl	10e0c <error@plt>
   116b4:	nop	{0}
   116b8:	sub	sp, fp, #12
   116bc:	ldrd	r4, [sp]
   116c0:	ldr	fp, [sp, #8]
   116c4:	add	sp, sp, #12
   116c8:	pop	{pc}		; (ldr pc, [sp], #4)
   116cc:	strd	r4, [sp, #-16]!
   116d0:	str	fp, [sp, #8]
   116d4:	str	lr, [sp, #12]
   116d8:	add	fp, sp, #12
   116dc:	sub	sp, sp, #8192	; 0x2000
   116e0:	sub	sp, sp, #32
   116e4:	sub	r1, fp, #8192	; 0x2000
   116e8:	sub	r1, r1, #12
   116ec:	str	r0, [r1, #-20]	; 0xffffffec
   116f0:	sub	r1, fp, #8192	; 0x2000
   116f4:	sub	r1, r1, #12
   116f8:	sub	r1, r1, #32
   116fc:	strd	r2, [r1]
   11700:	mov	r3, #8192	; 0x2000
   11704:	str	r3, [fp, #-16]
   11708:	b	11800 <__assert_fail@plt+0x88c>
   1170c:	ldr	r3, [fp, #-16]
   11710:	mov	r0, r3
   11714:	mov	r1, #0
   11718:	sub	r3, fp, #8192	; 0x2000
   1171c:	sub	r3, r3, #12
   11720:	sub	r3, r3, #32
   11724:	ldrd	r2, [r3]
   11728:	cmp	r3, r1
   1172c:	cmpeq	r2, r0
   11730:	bls	1173c <__assert_fail@plt+0x7c8>
   11734:	mov	r2, r0
   11738:	mov	r3, r1
   1173c:	mov	r3, r2
   11740:	str	r3, [fp, #-20]	; 0xffffffec
   11744:	sub	r3, fp, #8192	; 0x2000
   11748:	sub	r3, r3, #12
   1174c:	sub	r3, r3, #12
   11750:	sub	r2, fp, #8192	; 0x2000
   11754:	sub	r2, r2, #12
   11758:	mov	r0, r2
   1175c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11760:	mov	r1, r3
   11764:	ldr	r0, [r0, #-20]	; 0xffffffec
   11768:	bl	16e84 <__assert_fail@plt+0x5f10>
   1176c:	str	r0, [fp, #-24]	; 0xffffffe8
   11770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11774:	cmn	r3, #1
   11778:	bne	11784 <__assert_fail@plt+0x810>
   1177c:	mov	r3, #1
   11780:	b	1181c <__assert_fail@plt+0x8a8>
   11784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11788:	mov	r2, r3
   1178c:	mov	r3, #0
   11790:	sub	r1, fp, #8192	; 0x2000
   11794:	sub	r1, r1, #12
   11798:	sub	r1, r1, #32
   1179c:	mov	ip, r1
   117a0:	sub	r1, fp, #8192	; 0x2000
   117a4:	sub	r1, r1, #12
   117a8:	sub	r1, r1, #32
   117ac:	ldrd	r0, [r1]
   117b0:	subs	r4, r0, r2
   117b4:	sbc	r5, r1, r3
   117b8:	strd	r4, [ip]
   117bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117c0:	cmp	r3, #0
   117c4:	bne	117e8 <__assert_fail@plt+0x874>
   117c8:	sub	r3, fp, #8192	; 0x2000
   117cc:	sub	r3, r3, #12
   117d0:	sub	r3, r3, #32
   117d4:	ldrd	r2, [r3]
   117d8:	orrs	r3, r2, r3
   117dc:	beq	117e8 <__assert_fail@plt+0x874>
   117e0:	mov	r3, #2
   117e4:	b	1181c <__assert_fail@plt+0x8a8>
   117e8:	sub	r3, fp, #8192	; 0x2000
   117ec:	sub	r3, r3, #12
   117f0:	sub	r3, r3, #12
   117f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   117f8:	mov	r0, r3
   117fc:	bl	1160c <__assert_fail@plt+0x698>
   11800:	sub	r3, fp, #8192	; 0x2000
   11804:	sub	r3, r3, #12
   11808:	sub	r3, r3, #32
   1180c:	ldrd	r2, [r3]
   11810:	orrs	r3, r2, r3
   11814:	bne	1170c <__assert_fail@plt+0x798>
   11818:	mov	r3, #0
   1181c:	mov	r0, r3
   11820:	sub	sp, fp, #12
   11824:	ldrd	r4, [sp]
   11828:	ldr	fp, [sp, #8]
   1182c:	add	sp, sp, #12
   11830:	pop	{pc}		; (ldr pc, [sp], #4)
   11834:	strd	r4, [sp, #-20]!	; 0xffffffec
   11838:	str	r6, [sp, #8]
   1183c:	str	fp, [sp, #12]
   11840:	str	lr, [sp, #16]
   11844:	add	fp, sp, #16
   11848:	sub	sp, sp, #60	; 0x3c
   1184c:	str	r0, [fp, #-56]	; 0xffffffc8
   11850:	strd	r2, [fp, #-68]	; 0xffffffbc
   11854:	ldr	r3, [fp, #4]
   11858:	str	r3, [sp]
   1185c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   11860:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11864:	bl	10dd0 <lseek64@plt>
   11868:	strd	r0, [fp, #-28]	; 0xffffffe4
   1186c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11870:	cmp	r2, #0
   11874:	sbcs	r3, r3, #0
   11878:	bge	118f4 <__assert_fail@plt+0x980>
   1187c:	bl	10eb4 <__errno_location@plt>
   11880:	mov	r3, r0
   11884:	ldr	r4, [r3]
   11888:	ldr	r3, [fp, #4]
   1188c:	cmp	r3, #0
   11890:	bne	118a0 <__assert_fail@plt+0x92c>
   11894:	movw	r3, #42880	; 0xa780
   11898:	movt	r3, #1
   1189c:	b	118a8 <__assert_fail@plt+0x934>
   118a0:	movw	r3, #42912	; 0xa7a0
   118a4:	movt	r3, #1
   118a8:	mov	r0, r3
   118ac:	bl	10e78 <gettext@plt>
   118b0:	mov	r5, r0
   118b4:	ldr	r2, [fp, #8]
   118b8:	mov	r1, #3
   118bc:	mov	r0, #0
   118c0:	bl	16b50 <__assert_fail@plt+0x5bdc>
   118c4:	mov	r6, r0
   118c8:	sub	r3, fp, #52	; 0x34
   118cc:	mov	r2, r3
   118d0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   118d4:	bl	14328 <__assert_fail@plt+0x33b4>
   118d8:	mov	r3, r0
   118dc:	str	r3, [sp]
   118e0:	mov	r3, r6
   118e4:	mov	r2, r5
   118e8:	mov	r1, r4
   118ec:	mov	r0, #0
   118f0:	bl	10e0c <error@plt>
   118f4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   118f8:	mov	r0, r2
   118fc:	mov	r1, r3
   11900:	sub	sp, fp, #16
   11904:	ldrd	r4, [sp]
   11908:	ldr	r6, [sp, #8]
   1190c:	ldr	fp, [sp, #12]
   11910:	add	sp, sp, #16
   11914:	pop	{pc}		; (ldr pc, [sp], #4)
   11918:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1191c:	strd	r6, [sp, #8]
   11920:	strd	r8, [sp, #16]
   11924:	str	fp, [sp, #24]
   11928:	str	lr, [sp, #28]
   1192c:	add	fp, sp, #28
   11930:	sub	sp, sp, #168	; 0xa8
   11934:	str	r0, [fp, #-152]	; 0xffffff68
   11938:	str	r1, [fp, #-156]	; 0xffffff64
   1193c:	strd	r2, [fp, #-164]	; 0xffffff5c
   11940:	ldr	r3, [fp, #-164]	; 0xffffff5c
   11944:	str	r3, [fp, #-80]	; 0xffffffb0
   11948:	ldrd	r2, [fp, #4]
   1194c:	strd	r2, [fp, #-36]	; 0xffffffdc
   11950:	mov	r3, #1
   11954:	strb	r3, [fp, #-37]	; 0xffffffdb
   11958:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   1195c:	adds	r1, r2, #8192	; 0x2000
   11960:	str	r1, [fp, #-172]	; 0xffffff54
   11964:	adc	r3, r3, #0
   11968:	str	r3, [fp, #-168]	; 0xffffff58
   1196c:	mvn	r2, #0
   11970:	mov	r3, #0
   11974:	ldrd	r0, [fp, #-172]	; 0xffffff54
   11978:	cmp	r1, r3
   1197c:	cmpeq	r0, r2
   11980:	bls	119b8 <__assert_fail@plt+0xa44>
   11984:	movw	r0, #42952	; 0xa7c8
   11988:	movt	r0, #1
   1198c:	bl	10e78 <gettext@plt>
   11990:	mov	r4, r0
   11994:	sub	r3, fp, #136	; 0x88
   11998:	mov	r2, r3
   1199c:	ldrd	r0, [fp, #-164]	; 0xffffff5c
   119a0:	bl	1444c <__assert_fail@plt+0x34d8>
   119a4:	mov	r3, r0
   119a8:	mov	r2, r4
   119ac:	mov	r1, #0
   119b0:	mov	r0, #1
   119b4:	bl	10e0c <error@plt>
   119b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   119bc:	cmp	r3, #1048576	; 0x100000
   119c0:	bhi	11c0c <__assert_fail@plt+0xc98>
   119c4:	mov	r3, #1
   119c8:	strb	r3, [fp, #-38]	; 0xffffffda
   119cc:	mov	r3, #0
   119d0:	strb	r3, [fp, #-39]	; 0xffffffd9
   119d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   119d8:	add	r3, r3, #8192	; 0x2000
   119dc:	str	r3, [fp, #-84]	; 0xffffffac
   119e0:	ldr	r1, [fp, #-84]	; 0xffffffac
   119e4:	mov	r0, #2
   119e8:	bl	179b8 <__assert_fail@plt+0x6a44>
   119ec:	mov	r3, r0
   119f0:	str	r3, [fp, #-144]	; 0xffffff70
   119f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   119f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   119fc:	add	r3, r2, r3
   11a00:	str	r3, [fp, #-140]	; 0xffffff74
   11a04:	mov	r3, #0
   11a08:	strb	r3, [fp, #-40]	; 0xffffffd8
   11a0c:	b	11be8 <__assert_fail@plt+0xc74>
   11a10:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   11a14:	lsl	r3, r3, #2
   11a18:	sub	r2, fp, #28
   11a1c:	add	r3, r2, r3
   11a20:	ldr	r3, [r3, #-116]	; 0xffffff8c
   11a24:	ldr	r2, [fp, #-84]	; 0xffffffac
   11a28:	mov	r1, r3
   11a2c:	ldr	r0, [fp, #-156]	; 0xffffff64
   11a30:	bl	1425c <__assert_fail@plt+0x32e8>
   11a34:	str	r0, [fp, #-88]	; 0xffffffa8
   11a38:	mov	r3, #0
   11a3c:	str	r3, [fp, #-44]	; 0xffffffd4
   11a40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11a44:	ldr	r3, [fp, #-84]	; 0xffffffac
   11a48:	cmp	r2, r3
   11a4c:	bcs	11ae0 <__assert_fail@plt+0xb6c>
   11a50:	bl	10eb4 <__errno_location@plt>
   11a54:	mov	r3, r0
   11a58:	ldr	r3, [r3]
   11a5c:	cmp	r3, #0
   11a60:	beq	11aac <__assert_fail@plt+0xb38>
   11a64:	bl	10eb4 <__errno_location@plt>
   11a68:	mov	r3, r0
   11a6c:	ldr	r4, [r3]
   11a70:	movw	r0, #42772	; 0xa714
   11a74:	movt	r0, #1
   11a78:	bl	10e78 <gettext@plt>
   11a7c:	mov	r5, r0
   11a80:	ldr	r1, [fp, #-152]	; 0xffffff68
   11a84:	mov	r0, #4
   11a88:	bl	1696c <__assert_fail@plt+0x59f8>
   11a8c:	mov	r3, r0
   11a90:	mov	r2, r5
   11a94:	mov	r1, r4
   11a98:	mov	r0, #0
   11a9c:	bl	10e0c <error@plt>
   11aa0:	mov	r3, #0
   11aa4:	strb	r3, [fp, #-37]	; 0xffffffdb
   11aa8:	b	11bfc <__assert_fail@plt+0xc88>
   11aac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11ab0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11ab4:	cmp	r2, r3
   11ab8:	bhi	11ad8 <__assert_fail@plt+0xb64>
   11abc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   11ac0:	cmp	r3, #0
   11ac4:	bne	11ad8 <__assert_fail@plt+0xb64>
   11ac8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11acc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11ad0:	sub	r3, r2, r3
   11ad4:	str	r3, [fp, #-44]	; 0xffffffd4
   11ad8:	mov	r3, #1
   11adc:	strb	r3, [fp, #-39]	; 0xffffffd9
   11ae0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   11ae4:	eor	r3, r3, #1
   11ae8:	uxtb	r3, r3
   11aec:	cmp	r3, #0
   11af0:	beq	11b4c <__assert_fail@plt+0xbd8>
   11af4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11af8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11afc:	sub	r3, r2, r3
   11b00:	mov	r2, r3
   11b04:	mov	r3, #0
   11b08:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11b0c:	adds	r4, r0, r2
   11b10:	adc	r5, r1, r3
   11b14:	strd	r4, [fp, #-36]	; 0xffffffdc
   11b18:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   11b1c:	eor	r3, r3, #1
   11b20:	uxtb	r3, r3
   11b24:	lsl	r3, r3, #2
   11b28:	sub	r2, fp, #28
   11b2c:	add	r3, r2, r3
   11b30:	ldr	r3, [r3, #-116]	; 0xffffff8c
   11b34:	add	r0, r3, #8192	; 0x2000
   11b38:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11b3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b40:	sub	r3, r2, r3
   11b44:	mov	r1, r3
   11b48:	bl	1160c <__assert_fail@plt+0x698>
   11b4c:	mov	r3, #0
   11b50:	strb	r3, [fp, #-38]	; 0xffffffda
   11b54:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11b58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11b5c:	cmp	r2, r3
   11b60:	bcs	11bbc <__assert_fail@plt+0xc48>
   11b64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11b68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11b6c:	sub	r3, r2, r3
   11b70:	mov	r2, r3
   11b74:	mov	r3, #0
   11b78:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11b7c:	adds	ip, r0, r2
   11b80:	str	ip, [fp, #-180]	; 0xffffff4c
   11b84:	adc	r3, r1, r3
   11b88:	str	r3, [fp, #-176]	; 0xffffff50
   11b8c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   11b90:	strd	r2, [fp, #-36]	; 0xffffffdc
   11b94:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   11b98:	lsl	r3, r3, #2
   11b9c:	sub	r2, fp, #28
   11ba0:	add	r3, r2, r3
   11ba4:	ldr	r0, [r3, #-116]	; 0xffffff8c
   11ba8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   11bac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11bb0:	sub	r3, r2, r3
   11bb4:	mov	r1, r3
   11bb8:	bl	1160c <__assert_fail@plt+0x698>
   11bbc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   11bc0:	cmp	r3, #0
   11bc4:	movne	r3, #1
   11bc8:	moveq	r3, #0
   11bcc:	uxtb	r3, r3
   11bd0:	eor	r3, r3, #1
   11bd4:	uxtb	r3, r3
   11bd8:	strb	r3, [fp, #-40]	; 0xffffffd8
   11bdc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   11be0:	and	r3, r3, #1
   11be4:	strb	r3, [fp, #-40]	; 0xffffffd8
   11be8:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   11bec:	eor	r3, r3, #1
   11bf0:	uxtb	r3, r3
   11bf4:	cmp	r3, #0
   11bf8:	bne	11a10 <__assert_fail@plt+0xa9c>
   11bfc:	ldr	r3, [fp, #-144]	; 0xffffff70
   11c00:	mov	r0, r3
   11c04:	bl	141b8 <__assert_fail@plt+0x3244>
   11c08:	b	12000 <__assert_fail@plt+0x108c>
   11c0c:	mov	r3, #0
   11c10:	strb	r3, [fp, #-45]	; 0xffffffd3
   11c14:	mov	r3, #0
   11c18:	str	r3, [fp, #-68]	; 0xffffffbc
   11c1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11c20:	ubfx	r3, r3, #0, #13
   11c24:	rsb	r3, r3, #8192	; 0x2000
   11c28:	str	r3, [fp, #-92]	; 0xffffffa4
   11c2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11c30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11c34:	add	r3, r2, r3
   11c38:	str	r3, [fp, #-96]	; 0xffffffa0
   11c3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11c40:	lsr	r3, r3, #13
   11c44:	add	r3, r3, #1
   11c48:	str	r3, [fp, #-100]	; 0xffffff9c
   11c4c:	mov	r3, #0
   11c50:	str	r3, [fp, #-72]	; 0xffffffb8
   11c54:	mov	r3, #0
   11c58:	str	r3, [fp, #-76]	; 0xffffffb4
   11c5c:	mov	r3, #0
   11c60:	strb	r3, [fp, #-53]	; 0xffffffcb
   11c64:	mov	r3, #0
   11c68:	str	r3, [fp, #-60]	; 0xffffffc4
   11c6c:	mov	r3, #1
   11c70:	str	r3, [fp, #-64]	; 0xffffffc0
   11c74:	b	11e5c <__assert_fail@plt+0xee8>
   11c78:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11c7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c80:	cmp	r2, r3
   11c84:	bne	11cec <__assert_fail@plt+0xd78>
   11c88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11c8c:	cmp	r3, #0
   11c90:	bne	11cac <__assert_fail@plt+0xd38>
   11c94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11c98:	cmp	r3, #16
   11c9c:	movcc	r3, r3
   11ca0:	movcs	r3, #16
   11ca4:	str	r3, [fp, #-76]	; 0xffffffb4
   11ca8:	b	11cd8 <__assert_fail@plt+0xd64>
   11cac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11cb0:	lsr	r3, r3, #1
   11cb4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11cb8:	cmp	r2, r3
   11cbc:	bhi	11cd0 <__assert_fail@plt+0xd5c>
   11cc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11cc4:	lsl	r3, r3, #1
   11cc8:	str	r3, [fp, #-76]	; 0xffffffb4
   11ccc:	b	11cd8 <__assert_fail@plt+0xd64>
   11cd0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11cd4:	str	r3, [fp, #-76]	; 0xffffffb4
   11cd8:	mov	r2, #4
   11cdc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   11ce0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11ce4:	bl	17708 <__assert_fail@plt+0x6794>
   11ce8:	str	r0, [fp, #-68]	; 0xffffffbc
   11cec:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   11cf0:	eor	r3, r3, #1
   11cf4:	uxtb	r3, r3
   11cf8:	cmp	r3, #0
   11cfc:	beq	11d2c <__assert_fail@plt+0xdb8>
   11d00:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d04:	lsl	r3, r3, #2
   11d08:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11d0c:	add	r4, r2, r3
   11d10:	mov	r0, #8192	; 0x2000
   11d14:	bl	17788 <__assert_fail@plt+0x6814>
   11d18:	mov	r3, r0
   11d1c:	str	r3, [r4]
   11d20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d24:	add	r3, r3, #1
   11d28:	str	r3, [fp, #-72]	; 0xffffffb8
   11d2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11d30:	lsl	r3, r3, #2
   11d34:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11d38:	add	r3, r2, r3
   11d3c:	ldr	r3, [r3]
   11d40:	mov	r2, #8192	; 0x2000
   11d44:	mov	r1, r3
   11d48:	ldr	r0, [fp, #-156]	; 0xffffff64
   11d4c:	bl	1425c <__assert_fail@plt+0x32e8>
   11d50:	str	r0, [fp, #-52]	; 0xffffffcc
   11d54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11d58:	cmp	r3, #8192	; 0x2000
   11d5c:	bcs	11dc4 <__assert_fail@plt+0xe50>
   11d60:	bl	10eb4 <__errno_location@plt>
   11d64:	mov	r3, r0
   11d68:	ldr	r3, [r3]
   11d6c:	cmp	r3, #0
   11d70:	beq	11dbc <__assert_fail@plt+0xe48>
   11d74:	bl	10eb4 <__errno_location@plt>
   11d78:	mov	r3, r0
   11d7c:	ldr	r4, [r3]
   11d80:	movw	r0, #42772	; 0xa714
   11d84:	movt	r0, #1
   11d88:	bl	10e78 <gettext@plt>
   11d8c:	mov	r5, r0
   11d90:	ldr	r1, [fp, #-152]	; 0xffffff68
   11d94:	mov	r0, #4
   11d98:	bl	1696c <__assert_fail@plt+0x59f8>
   11d9c:	mov	r3, r0
   11da0:	mov	r2, r5
   11da4:	mov	r1, r4
   11da8:	mov	r0, #0
   11dac:	bl	10e0c <error@plt>
   11db0:	mov	r3, #0
   11db4:	strb	r3, [fp, #-37]	; 0xffffffdb
   11db8:	b	11fb4 <__assert_fail@plt+0x1040>
   11dbc:	mov	r3, #1
   11dc0:	strb	r3, [fp, #-45]	; 0xffffffd3
   11dc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11dc8:	add	r3, r3, #1
   11dcc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11dd0:	cmp	r2, r3
   11dd4:	bne	11de0 <__assert_fail@plt+0xe6c>
   11dd8:	mov	r3, #1
   11ddc:	strb	r3, [fp, #-53]	; 0xffffffcb
   11de0:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   11de4:	cmp	r3, #0
   11de8:	beq	11e34 <__assert_fail@plt+0xec0>
   11dec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11df0:	mov	r2, r3
   11df4:	mov	r3, #0
   11df8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11dfc:	adds	ip, r0, r2
   11e00:	str	ip, [fp, #-188]	; 0xffffff44
   11e04:	adc	r3, r1, r3
   11e08:	str	r3, [fp, #-184]	; 0xffffff48
   11e0c:	ldrd	r2, [fp, #-188]	; 0xffffff44
   11e10:	strd	r2, [fp, #-36]	; 0xffffffdc
   11e14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e18:	lsl	r3, r3, #2
   11e1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11e20:	add	r3, r2, r3
   11e24:	ldr	r3, [r3]
   11e28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11e2c:	mov	r0, r3
   11e30:	bl	1160c <__assert_fail@plt+0x698>
   11e34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e38:	str	r3, [fp, #-60]	; 0xffffffc4
   11e3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11e40:	add	r3, r3, #1
   11e44:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11e48:	udiv	r2, r3, r2
   11e4c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   11e50:	mul	r2, r1, r2
   11e54:	sub	r3, r3, r2
   11e58:	str	r3, [fp, #-64]	; 0xffffffc0
   11e5c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   11e60:	eor	r3, r3, #1
   11e64:	uxtb	r3, r3
   11e68:	cmp	r3, #0
   11e6c:	bne	11c78 <__assert_fail@plt+0xd04>
   11e70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11e74:	cmp	r3, #0
   11e78:	beq	11fb0 <__assert_fail@plt+0x103c>
   11e7c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   11e80:	cmp	r3, #0
   11e84:	beq	11f40 <__assert_fail@plt+0xfcc>
   11e88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11e8c:	rsb	r3, r3, #8192	; 0x2000
   11e90:	str	r3, [fp, #-104]	; 0xffffff98
   11e94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11e98:	mov	r2, r3
   11e9c:	mov	r3, #0
   11ea0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11ea4:	adds	r8, r0, r2
   11ea8:	adc	r9, r1, r3
   11eac:	strd	r8, [fp, #-36]	; 0xffffffdc
   11eb0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11eb4:	ldr	r3, [fp, #-104]	; 0xffffff98
   11eb8:	cmp	r2, r3
   11ebc:	bcs	11eec <__assert_fail@plt+0xf78>
   11ec0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ec4:	lsl	r3, r3, #2
   11ec8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11ecc:	add	r3, r2, r3
   11ed0:	ldr	r2, [r3]
   11ed4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11ed8:	add	r3, r2, r3
   11edc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   11ee0:	mov	r0, r3
   11ee4:	bl	1160c <__assert_fail@plt+0x698>
   11ee8:	b	11fb4 <__assert_fail@plt+0x1040>
   11eec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ef0:	lsl	r3, r3, #2
   11ef4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11ef8:	add	r3, r2, r3
   11efc:	ldr	r2, [r3]
   11f00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11f04:	add	r3, r2, r3
   11f08:	ldr	r1, [fp, #-104]	; 0xffffff98
   11f0c:	mov	r0, r3
   11f10:	bl	1160c <__assert_fail@plt+0x698>
   11f14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f18:	lsl	r3, r3, #2
   11f1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11f20:	add	r3, r2, r3
   11f24:	ldr	r0, [r3]
   11f28:	ldr	r2, [fp, #-92]	; 0xffffffa4
   11f2c:	ldr	r3, [fp, #-104]	; 0xffffff98
   11f30:	sub	r3, r2, r3
   11f34:	mov	r1, r3
   11f38:	bl	1160c <__assert_fail@plt+0x698>
   11f3c:	b	11fb4 <__assert_fail@plt+0x1040>
   11f40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11f44:	add	r3, r3, #1
   11f48:	ldr	r2, [fp, #-100]	; 0xffffff9c
   11f4c:	cmp	r2, r3
   11f50:	bne	11fb0 <__assert_fail@plt+0x103c>
   11f54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11f58:	rsb	r3, r3, #8192	; 0x2000
   11f5c:	str	r3, [fp, #-108]	; 0xffffff94
   11f60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11f64:	ldr	r3, [fp, #-108]	; 0xffffff94
   11f68:	sub	r3, r2, r3
   11f6c:	str	r3, [fp, #-112]	; 0xffffff90
   11f70:	ldr	r3, [fp, #-112]	; 0xffffff90
   11f74:	mov	r2, r3
   11f78:	mov	r3, #0
   11f7c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   11f80:	adds	r6, r0, r2
   11f84:	adc	r7, r1, r3
   11f88:	strd	r6, [fp, #-36]	; 0xffffffdc
   11f8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f90:	lsl	r3, r3, #2
   11f94:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11f98:	add	r3, r2, r3
   11f9c:	ldr	r3, [r3]
   11fa0:	ldr	r1, [fp, #-112]	; 0xffffff90
   11fa4:	mov	r0, r3
   11fa8:	bl	1160c <__assert_fail@plt+0x698>
   11fac:	b	11fb4 <__assert_fail@plt+0x1040>
   11fb0:	nop	{0}
   11fb4:	mov	r3, #0
   11fb8:	str	r3, [fp, #-60]	; 0xffffffc4
   11fbc:	b	11fe8 <__assert_fail@plt+0x1074>
   11fc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11fc4:	lsl	r3, r3, #2
   11fc8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11fcc:	add	r3, r2, r3
   11fd0:	ldr	r3, [r3]
   11fd4:	mov	r0, r3
   11fd8:	bl	141b8 <__assert_fail@plt+0x3244>
   11fdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11fe0:	add	r3, r3, #1
   11fe4:	str	r3, [fp, #-60]	; 0xffffffc4
   11fe8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11fec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11ff0:	cmp	r2, r3
   11ff4:	bcc	11fc0 <__assert_fail@plt+0x104c>
   11ff8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11ffc:	bl	141b8 <__assert_fail@plt+0x3244>
   12000:	ldrd	r2, [fp, #4]
   12004:	cmp	r2, #0
   12008:	sbcs	r3, r3, #0
   1200c:	blt	12048 <__assert_fail@plt+0x10d4>
   12010:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12014:	ldr	r1, [fp, #-152]	; 0xffffff68
   12018:	str	r1, [sp, #4]
   1201c:	mov	r1, #0
   12020:	str	r1, [sp]
   12024:	ldr	r0, [fp, #-156]	; 0xffffff64
   12028:	bl	11834 <__assert_fail@plt+0x8c0>
   1202c:	mov	r2, r0
   12030:	mov	r3, r1
   12034:	cmp	r2, #0
   12038:	sbcs	r3, r3, #0
   1203c:	bge	12048 <__assert_fail@plt+0x10d4>
   12040:	mov	r3, #0
   12044:	strb	r3, [fp, #-37]	; 0xffffffdb
   12048:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1204c:	mov	r0, r3
   12050:	sub	sp, fp, #28
   12054:	ldrd	r4, [sp]
   12058:	ldrd	r6, [sp, #8]
   1205c:	ldrd	r8, [sp, #16]
   12060:	ldr	fp, [sp, #24]
   12064:	add	sp, sp, #28
   12068:	pop	{pc}		; (ldr pc, [sp], #4)
   1206c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12070:	strd	r6, [sp, #8]
   12074:	str	fp, [sp, #16]
   12078:	str	lr, [sp, #20]
   1207c:	add	fp, sp, #20
   12080:	sub	sp, sp, #56	; 0x38
   12084:	str	r0, [fp, #-56]	; 0xffffffc8
   12088:	str	r1, [fp, #-60]	; 0xffffffc4
   1208c:	strd	r2, [fp, #-68]	; 0xffffffbc
   12090:	ldr	r3, [fp, #4]
   12094:	ldrd	r2, [r3, #48]	; 0x30
   12098:	strd	r2, [fp, #-28]	; 0xffffffe4
   1209c:	movw	r3, #45413	; 0xb165
   120a0:	movt	r3, #2
   120a4:	ldrb	r3, [r3]
   120a8:	cmp	r3, #0
   120ac:	bne	1210c <__assert_fail@plt+0x1198>
   120b0:	ldrd	r2, [fp, #12]
   120b4:	cmp	r2, #0
   120b8:	sbcs	r3, r3, #0
   120bc:	blt	1210c <__assert_fail@plt+0x1198>
   120c0:	ldr	r3, [fp, #4]
   120c4:	ldr	r3, [r3, #56]	; 0x38
   120c8:	cmp	r3, #0
   120cc:	ble	120f4 <__assert_fail@plt+0x1180>
   120d0:	ldr	r3, [fp, #4]
   120d4:	ldr	r3, [r3, #56]	; 0x38
   120d8:	cmp	r3, #536870912	; 0x20000000
   120dc:	bhi	120f4 <__assert_fail@plt+0x1180>
   120e0:	ldr	r3, [fp, #4]
   120e4:	ldr	r3, [r3, #56]	; 0x38
   120e8:	mov	r2, r3
   120ec:	asr	r3, r2, #31
   120f0:	b	120fc <__assert_fail@plt+0x1188>
   120f4:	mov	r2, #512	; 0x200
   120f8:	mov	r3, #0
   120fc:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12100:	cmp	r2, r0
   12104:	sbcs	r3, r3, r1
   12108:	blt	1212c <__assert_fail@plt+0x11b8>
   1210c:	ldrd	r2, [fp, #12]
   12110:	strd	r2, [sp]
   12114:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12118:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1211c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12120:	bl	11918 <__assert_fail@plt+0x9a4>
   12124:	mov	r3, r0
   12128:	b	121c0 <__assert_fail@plt+0x124c>
   1212c:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   12130:	ldrd	r2, [fp, #12]
   12134:	subs	r4, r0, r2
   12138:	sbc	r5, r1, r3
   1213c:	strd	r4, [fp, #-36]	; 0xffffffdc
   12140:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12144:	cmp	r2, #0
   12148:	sbcs	r1, r3, #0
   1214c:	bge	12158 <__assert_fail@plt+0x11e4>
   12150:	mov	r2, #0
   12154:	mov	r3, #0
   12158:	strd	r2, [fp, #-44]	; 0xffffffd4
   1215c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12160:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   12164:	cmp	r1, r3
   12168:	cmpeq	r0, r2
   1216c:	bcc	12178 <__assert_fail@plt+0x1204>
   12170:	mov	r3, #1
   12174:	b	121c0 <__assert_fail@plt+0x124c>
   12178:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1217c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12180:	subs	r6, r0, r2
   12184:	sbc	r7, r1, r3
   12188:	mov	r2, r6
   1218c:	mov	r3, r7
   12190:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12194:	bl	116cc <__assert_fail@plt+0x758>
   12198:	str	r0, [fp, #-48]	; 0xffffffd0
   1219c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   121a0:	cmp	r3, #0
   121a4:	bne	121b0 <__assert_fail@plt+0x123c>
   121a8:	mov	r3, #1
   121ac:	b	121c0 <__assert_fail@plt+0x124c>
   121b0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   121b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   121b8:	bl	114c0 <__assert_fail@plt+0x54c>
   121bc:	mov	r3, #0
   121c0:	mov	r0, r3
   121c4:	sub	sp, fp, #20
   121c8:	ldrd	r4, [sp]
   121cc:	ldrd	r6, [sp, #8]
   121d0:	ldr	fp, [sp, #16]
   121d4:	add	sp, sp, #20
   121d8:	pop	{pc}		; (ldr pc, [sp], #4)
   121dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   121e0:	strd	r6, [sp, #8]
   121e4:	strd	r8, [sp, #16]
   121e8:	str	fp, [sp, #24]
   121ec:	str	lr, [sp, #28]
   121f0:	add	fp, sp, #28
   121f4:	sub	sp, sp, #88	; 0x58
   121f8:	str	r0, [fp, #-88]	; 0xffffffa8
   121fc:	str	r1, [fp, #-92]	; 0xffffffa4
   12200:	strd	r2, [fp, #-100]	; 0xffffff9c
   12204:	ldrd	r2, [fp, #4]
   12208:	strd	r2, [fp, #-36]	; 0xffffffdc
   1220c:	mov	r3, #0
   12210:	str	r3, [fp, #-52]	; 0xffffffcc
   12214:	mov	r3, #1
   12218:	strb	r3, [fp, #-53]	; 0xffffffcb
   1221c:	movw	r0, #8208	; 0x2010
   12220:	bl	17788 <__assert_fail@plt+0x6814>
   12224:	mov	r3, r0
   12228:	str	r3, [fp, #-44]	; 0xffffffd4
   1222c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12230:	str	r3, [fp, #-40]	; 0xffffffd8
   12234:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12238:	add	r3, r3, #8192	; 0x2000
   1223c:	mov	r2, r3
   12240:	mov	r3, #0
   12244:	str	r3, [r2, #8]
   12248:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1224c:	add	r3, r3, #8192	; 0x2000
   12250:	ldr	r3, [r3, #8]
   12254:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12258:	add	r2, r2, #8192	; 0x2000
   1225c:	str	r3, [r2, #4]
   12260:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12264:	add	r3, r3, #8192	; 0x2000
   12268:	mov	r2, r3
   1226c:	mov	r3, #0
   12270:	str	r3, [r2, #12]
   12274:	movw	r0, #8208	; 0x2010
   12278:	bl	17788 <__assert_fail@plt+0x6814>
   1227c:	mov	r3, r0
   12280:	str	r3, [fp, #-48]	; 0xffffffd0
   12284:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12288:	mov	r2, #8192	; 0x2000
   1228c:	mov	r1, r3
   12290:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12294:	bl	16e84 <__assert_fail@plt+0x5f10>
   12298:	str	r0, [fp, #-72]	; 0xffffffb8
   1229c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   122a0:	cmp	r3, #0
   122a4:	beq	12550 <__assert_fail@plt+0x15dc>
   122a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   122ac:	cmn	r3, #1
   122b0:	beq	12550 <__assert_fail@plt+0x15dc>
   122b4:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   122b8:	orrs	r3, r2, r3
   122bc:	bne	122f0 <__assert_fail@plt+0x137c>
   122c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   122c4:	mov	r2, r3
   122c8:	mov	r3, #0
   122cc:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   122d0:	adds	r8, r0, r2
   122d4:	adc	r9, r1, r3
   122d8:	strd	r8, [fp, #-36]	; 0xffffffdc
   122dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   122e0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   122e4:	mov	r0, r3
   122e8:	bl	1160c <__assert_fail@plt+0x698>
   122ec:	b	1254c <__assert_fail@plt+0x15d8>
   122f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   122f4:	add	r3, r3, #8192	; 0x2000
   122f8:	mov	r2, r3
   122fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12300:	str	r3, [r2, #4]
   12304:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12308:	add	r3, r3, #8192	; 0x2000
   1230c:	mov	r2, r3
   12310:	mov	r3, #0
   12314:	str	r3, [r2, #8]
   12318:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1231c:	add	r3, r3, #8192	; 0x2000
   12320:	mov	r2, r3
   12324:	mov	r3, #0
   12328:	str	r3, [r2, #12]
   1232c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12330:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12334:	add	r3, r2, r3
   12338:	str	r3, [fp, #-76]	; 0xffffffb4
   1233c:	movw	r3, #45415	; 0xb167
   12340:	movt	r3, #2
   12344:	ldrb	r2, [r3]
   12348:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1234c:	strb	r2, [r3]
   12350:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12354:	str	r3, [fp, #-60]	; 0xffffffc4
   12358:	b	12384 <__assert_fail@plt+0x1410>
   1235c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12360:	add	r3, r3, #1
   12364:	str	r3, [fp, #-60]	; 0xffffffc4
   12368:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1236c:	add	r3, r3, #8192	; 0x2000
   12370:	ldr	r3, [r3, #8]
   12374:	add	r3, r3, #1
   12378:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1237c:	add	r2, r2, #8192	; 0x2000
   12380:	str	r3, [r2, #8]
   12384:	movw	r3, #45415	; 0xb167
   12388:	movt	r3, #2
   1238c:	ldrb	r3, [r3]
   12390:	mov	r1, r3
   12394:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12398:	bl	10da0 <rawmemchr@plt>
   1239c:	str	r0, [fp, #-60]	; 0xffffffc4
   123a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   123a4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   123a8:	cmp	r2, r3
   123ac:	bcc	1235c <__assert_fail@plt+0x13e8>
   123b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   123b4:	add	r3, r3, #8192	; 0x2000
   123b8:	ldr	r3, [r3, #8]
   123bc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   123c0:	add	r3, r2, r3
   123c4:	str	r3, [fp, #-52]	; 0xffffffcc
   123c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   123cc:	add	r3, r3, #8192	; 0x2000
   123d0:	ldr	r2, [r3, #4]
   123d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   123d8:	add	r3, r3, #8192	; 0x2000
   123dc:	ldr	r3, [r3, #4]
   123e0:	add	r3, r2, r3
   123e4:	cmp	r3, #8192	; 0x2000
   123e8:	bcs	1246c <__assert_fail@plt+0x14f8>
   123ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   123f0:	add	r3, r3, #8192	; 0x2000
   123f4:	ldr	r3, [r3, #4]
   123f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   123fc:	add	r0, r2, r3
   12400:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12404:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12408:	add	r3, r3, #8192	; 0x2000
   1240c:	ldr	r3, [r3, #4]
   12410:	mov	r2, r3
   12414:	bl	10d4c <memcpy@plt>
   12418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1241c:	add	r3, r3, #8192	; 0x2000
   12420:	ldr	r2, [r3, #4]
   12424:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12428:	add	r3, r3, #8192	; 0x2000
   1242c:	ldr	r3, [r3, #4]
   12430:	add	r3, r2, r3
   12434:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12438:	add	r2, r2, #8192	; 0x2000
   1243c:	str	r3, [r2, #4]
   12440:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12444:	add	r3, r3, #8192	; 0x2000
   12448:	ldr	r2, [r3, #8]
   1244c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12450:	add	r3, r3, #8192	; 0x2000
   12454:	ldr	r3, [r3, #8]
   12458:	add	r3, r2, r3
   1245c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12460:	add	r2, r2, #8192	; 0x2000
   12464:	str	r3, [r2, #8]
   12468:	b	12284 <__assert_fail@plt+0x1310>
   1246c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12470:	add	r3, r3, #8192	; 0x2000
   12474:	mov	r2, r3
   12478:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1247c:	str	r3, [r2, #12]
   12480:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12484:	add	r3, r3, #8192	; 0x2000
   12488:	ldr	r3, [r3, #12]
   1248c:	str	r3, [fp, #-44]	; 0xffffffd4
   12490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12494:	add	r3, r3, #8192	; 0x2000
   12498:	ldr	r3, [r3, #8]
   1249c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   124a0:	sub	r3, r2, r3
   124a4:	mov	r2, r3
   124a8:	mov	r3, #0
   124ac:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   124b0:	cmp	r1, r3
   124b4:	cmpeq	r0, r2
   124b8:	bcs	1253c <__assert_fail@plt+0x15c8>
   124bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124c0:	add	r3, r3, #8192	; 0x2000
   124c4:	ldr	r3, [r3, #4]
   124c8:	mov	r2, r3
   124cc:	mov	r3, #0
   124d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   124d4:	adds	ip, r0, r2
   124d8:	str	ip, [fp, #-108]	; 0xffffff94
   124dc:	adc	r3, r1, r3
   124e0:	str	r3, [fp, #-104]	; 0xffffff98
   124e4:	ldrd	r2, [fp, #-108]	; 0xffffff94
   124e8:	strd	r2, [fp, #-36]	; 0xffffffdc
   124ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   124f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124f4:	add	r3, r3, #8192	; 0x2000
   124f8:	ldr	r3, [r3, #4]
   124fc:	mov	r1, r3
   12500:	mov	r0, r2
   12504:	bl	1160c <__assert_fail@plt+0x698>
   12508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1250c:	str	r3, [fp, #-48]	; 0xffffffd0
   12510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12514:	add	r3, r3, #8192	; 0x2000
   12518:	ldr	r3, [r3, #8]
   1251c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12520:	sub	r3, r2, r3
   12524:	str	r3, [fp, #-52]	; 0xffffffcc
   12528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1252c:	add	r3, r3, #8192	; 0x2000
   12530:	ldr	r3, [r3, #12]
   12534:	str	r3, [fp, #-40]	; 0xffffffd8
   12538:	b	12284 <__assert_fail@plt+0x1310>
   1253c:	movw	r0, #8208	; 0x2010
   12540:	bl	17788 <__assert_fail@plt+0x6814>
   12544:	mov	r3, r0
   12548:	str	r3, [fp, #-48]	; 0xffffffd0
   1254c:	b	12284 <__assert_fail@plt+0x1310>
   12550:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12554:	bl	141b8 <__assert_fail@plt+0x3244>
   12558:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1255c:	cmn	r3, #1
   12560:	bne	125ac <__assert_fail@plt+0x1638>
   12564:	bl	10eb4 <__errno_location@plt>
   12568:	mov	r3, r0
   1256c:	ldr	r4, [r3]
   12570:	movw	r0, #42772	; 0xa714
   12574:	movt	r0, #1
   12578:	bl	10e78 <gettext@plt>
   1257c:	mov	r5, r0
   12580:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12584:	mov	r0, #4
   12588:	bl	1696c <__assert_fail@plt+0x59f8>
   1258c:	mov	r3, r0
   12590:	mov	r2, r5
   12594:	mov	r1, r4
   12598:	mov	r0, #0
   1259c:	bl	10e0c <error@plt>
   125a0:	mov	r3, #0
   125a4:	strb	r3, [fp, #-53]	; 0xffffffcb
   125a8:	b	127c0 <__assert_fail@plt+0x184c>
   125ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   125b0:	add	r3, r3, #8192	; 0x2000
   125b4:	ldr	r3, [r3, #4]
   125b8:	cmp	r3, #0
   125bc:	beq	12614 <__assert_fail@plt+0x16a0>
   125c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   125c4:	add	r3, r3, #8192	; 0x2000
   125c8:	ldr	r3, [r3, #4]
   125cc:	sub	r3, r3, #1
   125d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   125d4:	ldrb	r2, [r2, r3]
   125d8:	movw	r3, #45415	; 0xb167
   125dc:	movt	r3, #2
   125e0:	ldrb	r3, [r3]
   125e4:	cmp	r2, r3
   125e8:	beq	12614 <__assert_fail@plt+0x16a0>
   125ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   125f0:	add	r3, r3, #8192	; 0x2000
   125f4:	ldr	r3, [r3, #8]
   125f8:	add	r3, r3, #1
   125fc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   12600:	add	r2, r2, #8192	; 0x2000
   12604:	str	r3, [r2, #8]
   12608:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1260c:	add	r3, r3, #1
   12610:	str	r3, [fp, #-52]	; 0xffffffcc
   12614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12618:	str	r3, [fp, #-48]	; 0xffffffd0
   1261c:	b	12688 <__assert_fail@plt+0x1714>
   12620:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12624:	add	r3, r3, #8192	; 0x2000
   12628:	ldr	r3, [r3, #4]
   1262c:	mov	r2, r3
   12630:	mov	r3, #0
   12634:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12638:	adds	r6, r0, r2
   1263c:	adc	r7, r1, r3
   12640:	strd	r6, [fp, #-36]	; 0xffffffdc
   12644:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1264c:	add	r3, r3, #8192	; 0x2000
   12650:	ldr	r3, [r3, #4]
   12654:	mov	r1, r3
   12658:	mov	r0, r2
   1265c:	bl	1160c <__assert_fail@plt+0x698>
   12660:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12664:	add	r3, r3, #8192	; 0x2000
   12668:	ldr	r3, [r3, #8]
   1266c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12670:	sub	r3, r2, r3
   12674:	str	r3, [fp, #-52]	; 0xffffffcc
   12678:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1267c:	add	r3, r3, #8192	; 0x2000
   12680:	ldr	r3, [r3, #12]
   12684:	str	r3, [fp, #-48]	; 0xffffffd0
   12688:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1268c:	add	r3, r3, #8192	; 0x2000
   12690:	ldr	r3, [r3, #8]
   12694:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12698:	sub	r3, r2, r3
   1269c:	mov	r2, r3
   126a0:	mov	r3, #0
   126a4:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   126a8:	cmp	r1, r3
   126ac:	cmpeq	r0, r2
   126b0:	bcc	12620 <__assert_fail@plt+0x16ac>
   126b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126b8:	mov	r2, r3
   126bc:	mov	r3, #0
   126c0:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   126c4:	cmp	r1, r3
   126c8:	cmpeq	r0, r2
   126cc:	bcs	127bc <__assert_fail@plt+0x1848>
   126d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   126d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   126d8:	sub	r3, r2, r3
   126dc:	str	r3, [fp, #-64]	; 0xffffffc0
   126e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   126e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   126e8:	add	r3, r3, #8192	; 0x2000
   126ec:	ldr	r3, [r3, #4]
   126f0:	add	r3, r2, r3
   126f4:	str	r3, [fp, #-80]	; 0xffffffb0
   126f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   126fc:	str	r3, [fp, #-68]	; 0xffffffbc
   12700:	b	12738 <__assert_fail@plt+0x17c4>
   12704:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12708:	add	r3, r3, #1
   1270c:	str	r3, [fp, #-68]	; 0xffffffbc
   12710:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12714:	add	r3, r3, #8192	; 0x2000
   12718:	ldr	r3, [r3, #8]
   1271c:	add	r3, r3, #1
   12720:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12724:	add	r2, r2, #8192	; 0x2000
   12728:	str	r3, [r2, #8]
   1272c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12730:	sub	r3, r3, #1
   12734:	str	r3, [fp, #-64]	; 0xffffffc0
   12738:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1273c:	cmp	r3, #0
   12740:	beq	1277c <__assert_fail@plt+0x1808>
   12744:	movw	r3, #45415	; 0xb167
   12748:	movt	r3, #2
   1274c:	ldrb	r3, [r3]
   12750:	mov	r1, r3
   12754:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12758:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1275c:	sub	r3, r2, r3
   12760:	mov	r2, r3
   12764:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12768:	bl	10ef0 <memchr@plt>
   1276c:	str	r0, [fp, #-68]	; 0xffffffbc
   12770:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12774:	cmp	r3, #0
   12778:	bne	12704 <__assert_fail@plt+0x1790>
   1277c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12780:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12784:	sub	r3, r2, r3
   12788:	mov	r2, r3
   1278c:	asr	r3, r2, #31
   12790:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   12794:	adds	r4, r0, r2
   12798:	adc	r5, r1, r3
   1279c:	strd	r4, [fp, #-36]	; 0xffffffdc
   127a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   127a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   127a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   127ac:	sub	r3, r2, r3
   127b0:	mov	r1, r3
   127b4:	bl	1160c <__assert_fail@plt+0x698>
   127b8:	b	127e4 <__assert_fail@plt+0x1870>
   127bc:	nop	{0}
   127c0:	b	127e4 <__assert_fail@plt+0x1870>
   127c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127c8:	add	r3, r3, #8192	; 0x2000
   127cc:	ldr	r3, [r3, #12]
   127d0:	str	r3, [fp, #-48]	; 0xffffffd0
   127d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   127d8:	bl	141b8 <__assert_fail@plt+0x3244>
   127dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   127e0:	str	r3, [fp, #-40]	; 0xffffffd8
   127e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   127e8:	cmp	r3, #0
   127ec:	bne	127c4 <__assert_fail@plt+0x1850>
   127f0:	ldrd	r2, [fp, #4]
   127f4:	cmp	r2, #0
   127f8:	sbcs	r3, r3, #0
   127fc:	blt	12838 <__assert_fail@plt+0x18c4>
   12800:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12804:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12808:	str	r1, [sp, #4]
   1280c:	mov	r1, #0
   12810:	str	r1, [sp]
   12814:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12818:	bl	11834 <__assert_fail@plt+0x8c0>
   1281c:	mov	r2, r0
   12820:	mov	r3, r1
   12824:	cmp	r2, #0
   12828:	sbcs	r3, r3, #0
   1282c:	bge	12838 <__assert_fail@plt+0x18c4>
   12830:	mov	r3, #0
   12834:	strb	r3, [fp, #-53]	; 0xffffffcb
   12838:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   1283c:	mov	r0, r3
   12840:	sub	sp, fp, #28
   12844:	ldrd	r4, [sp]
   12848:	ldrd	r6, [sp, #8]
   1284c:	ldrd	r8, [sp, #16]
   12850:	ldr	fp, [sp, #24]
   12854:	add	sp, sp, #28
   12858:	pop	{pc}		; (ldr pc, [sp], #4)
   1285c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12860:	strd	r6, [sp, #8]
   12864:	strd	r8, [sp, #16]
   12868:	str	fp, [sp, #24]
   1286c:	str	lr, [sp, #28]
   12870:	add	fp, sp, #28
   12874:	sub	sp, sp, #8320	; 0x2080
   12878:	sub	sp, sp, #8
   1287c:	sub	ip, fp, #8192	; 0x2000
   12880:	sub	ip, ip, #28
   12884:	str	r0, [ip, #-36]	; 0xffffffdc
   12888:	sub	r0, fp, #8192	; 0x2000
   1288c:	sub	r0, r0, #28
   12890:	str	r1, [r0, #-40]	; 0xffffffd8
   12894:	sub	r1, fp, #8192	; 0x2000
   12898:	sub	r1, r1, #28
   1289c:	sub	r1, r1, #48	; 0x30
   128a0:	strd	r2, [r1]
   128a4:	ldrd	r2, [fp, #12]
   128a8:	strd	r2, [fp, #-44]	; 0xffffffd4
   128ac:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   128b0:	ldrd	r2, [fp, #4]
   128b4:	subs	r4, r0, r2
   128b8:	sbc	r5, r1, r3
   128bc:	asr	r3, r5, #31
   128c0:	mov	r2, r3
   128c4:	asr	r3, r2, #31
   128c8:	eor	r6, r4, r2
   128cc:	eor	r7, r5, r3
   128d0:	subs	r8, r6, r2
   128d4:	sbc	r9, r7, r3
   128d8:	movw	r0, #8191	; 0x1fff
   128dc:	mov	r1, #0
   128e0:	and	ip, r8, r0
   128e4:	sub	lr, fp, #8256	; 0x2040
   128e8:	sub	lr, lr, #44	; 0x2c
   128ec:	str	ip, [lr]
   128f0:	and	r1, r9, r1
   128f4:	sub	r0, fp, #8256	; 0x2040
   128f8:	sub	r0, r0, #40	; 0x28
   128fc:	str	r1, [r0]
   12900:	sub	r1, fp, #8256	; 0x2040
   12904:	sub	r1, r1, #44	; 0x2c
   12908:	ldrd	r0, [r1]
   1290c:	mov	ip, r0
   12910:	eor	ip, ip, r2
   12914:	sub	lr, fp, #8256	; 0x2040
   12918:	sub	lr, lr, #52	; 0x34
   1291c:	str	ip, [lr]
   12920:	eor	r1, r1, r3
   12924:	sub	r0, fp, #8256	; 0x2040
   12928:	sub	r0, r0, #48	; 0x30
   1292c:	str	r1, [r0]
   12930:	sub	r1, fp, #8256	; 0x2040
   12934:	sub	r1, r1, #52	; 0x34
   12938:	ldrd	r0, [r1]
   1293c:	mov	ip, r0
   12940:	subs	ip, ip, r2
   12944:	sub	lr, fp, #8256	; 0x2040
   12948:	sub	lr, lr, #60	; 0x3c
   1294c:	str	ip, [lr]
   12950:	sbc	r3, r1, r3
   12954:	sub	r2, fp, #8256	; 0x2040
   12958:	sub	r2, r2, #56	; 0x38
   1295c:	str	r3, [r2]
   12960:	sub	r3, fp, #8256	; 0x2040
   12964:	sub	r3, r3, #60	; 0x3c
   12968:	ldrd	r2, [r3]
   1296c:	mov	r3, r2
   12970:	str	r3, [fp, #-32]	; 0xffffffe0
   12974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12978:	cmp	r3, #0
   1297c:	bne	12988 <__assert_fail@plt+0x1a14>
   12980:	mov	r3, #8192	; 0x2000
   12984:	str	r3, [fp, #-32]	; 0xffffffe0
   12988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1298c:	mov	r0, r3
   12990:	mov	r1, #0
   12994:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12998:	subs	ip, r2, r0
   1299c:	sub	lr, fp, #8320	; 0x2080
   129a0:	sub	lr, lr, #4
   129a4:	str	ip, [lr]
   129a8:	sbc	r3, r3, r1
   129ac:	sub	r2, fp, #8320	; 0x2080
   129b0:	str	r3, [r2]
   129b4:	sub	r3, fp, #8320	; 0x2080
   129b8:	sub	r3, r3, #4
   129bc:	ldrd	r2, [r3]
   129c0:	strd	r2, [fp, #-44]	; 0xffffffd4
   129c4:	sub	r3, fp, #8192	; 0x2000
   129c8:	sub	r3, r3, #28
   129cc:	mov	r1, r3
   129d0:	sub	r3, fp, #8192	; 0x2000
   129d4:	sub	r3, r3, #28
   129d8:	ldr	r3, [r3, #-36]	; 0xffffffdc
   129dc:	str	r3, [sp, #4]
   129e0:	mov	r3, #0
   129e4:	str	r3, [sp]
   129e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   129ec:	ldr	r0, [r1, #-40]	; 0xffffffd8
   129f0:	bl	11834 <__assert_fail@plt+0x8c0>
   129f4:	mov	r2, r0
   129f8:	mov	r3, r1
   129fc:	cmp	r2, #0
   12a00:	sbcs	r3, r3, #0
   12a04:	bge	12a10 <__assert_fail@plt+0x1a9c>
   12a08:	mov	r3, #0
   12a0c:	b	12f18 <__assert_fail@plt+0x1fa4>
   12a10:	sub	r3, fp, #8192	; 0x2000
   12a14:	sub	r3, r3, #28
   12a18:	sub	r3, r3, #32
   12a1c:	sub	r2, fp, #8192	; 0x2000
   12a20:	sub	r2, r2, #28
   12a24:	mov	r0, r2
   12a28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a2c:	mov	r1, r3
   12a30:	ldr	r0, [r0, #-40]	; 0xffffffd8
   12a34:	bl	16e84 <__assert_fail@plt+0x5f10>
   12a38:	str	r0, [fp, #-32]	; 0xffffffe0
   12a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12a40:	cmn	r3, #1
   12a44:	bne	12a94 <__assert_fail@plt+0x1b20>
   12a48:	bl	10eb4 <__errno_location@plt>
   12a4c:	mov	r3, r0
   12a50:	ldr	r4, [r3]
   12a54:	movw	r0, #42772	; 0xa714
   12a58:	movt	r0, #1
   12a5c:	bl	10e78 <gettext@plt>
   12a60:	mov	r5, r0
   12a64:	sub	r3, fp, #8192	; 0x2000
   12a68:	sub	r3, r3, #28
   12a6c:	ldr	r1, [r3, #-36]	; 0xffffffdc
   12a70:	mov	r0, #4
   12a74:	bl	1696c <__assert_fail@plt+0x59f8>
   12a78:	mov	r3, r0
   12a7c:	mov	r2, r5
   12a80:	mov	r1, r4
   12a84:	mov	r0, #0
   12a88:	bl	10e0c <error@plt>
   12a8c:	mov	r3, #0
   12a90:	b	12f18 <__assert_fail@plt+0x1fa4>
   12a94:	sub	r3, fp, #8192	; 0x2000
   12a98:	sub	r3, r3, #28
   12a9c:	sub	r3, r3, #48	; 0x30
   12aa0:	ldr	r2, [r3]
   12aa4:	ldr	r3, [r3, #4]
   12aa8:	orr	r3, r2, r3
   12aac:	cmp	r3, #0
   12ab0:	moveq	r3, #1
   12ab4:	movne	r3, #0
   12ab8:	strb	r3, [fp, #-49]	; 0xffffffcf
   12abc:	sub	r3, fp, #8192	; 0x2000
   12ac0:	sub	r3, r3, #28
   12ac4:	sub	r3, r3, #48	; 0x30
   12ac8:	ldrd	r2, [r3]
   12acc:	orrs	r3, r2, r3
   12ad0:	beq	12b5c <__assert_fail@plt+0x1be8>
   12ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ad8:	cmp	r3, #0
   12adc:	beq	12b5c <__assert_fail@plt+0x1be8>
   12ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12ae4:	sub	r2, r3, #1
   12ae8:	sub	r3, fp, #8192	; 0x2000
   12aec:	sub	r3, r3, #28
   12af0:	add	r3, r3, r2
   12af4:	ldrb	r2, [r3, #-32]	; 0xffffffe0
   12af8:	movw	r3, #45415	; 0xb167
   12afc:	movt	r3, #2
   12b00:	ldrb	r3, [r3]
   12b04:	cmp	r2, r3
   12b08:	beq	12b5c <__assert_fail@plt+0x1be8>
   12b0c:	sub	r3, fp, #8192	; 0x2000
   12b10:	sub	r3, r3, #28
   12b14:	sub	r3, r3, #48	; 0x30
   12b18:	mov	r1, r3
   12b1c:	sub	r3, fp, #8192	; 0x2000
   12b20:	sub	r3, r3, #28
   12b24:	sub	r3, r3, #48	; 0x30
   12b28:	ldrd	r2, [r3]
   12b2c:	subs	r0, r2, #1
   12b30:	sub	ip, fp, #8320	; 0x2080
   12b34:	sub	ip, ip, #12
   12b38:	str	r0, [ip]
   12b3c:	sbc	r3, r3, #0
   12b40:	sub	r2, fp, #8320	; 0x2080
   12b44:	sub	r2, r2, #8
   12b48:	str	r3, [r2]
   12b4c:	sub	r3, fp, #8320	; 0x2080
   12b50:	sub	r3, r3, #12
   12b54:	ldrd	r2, [r3]
   12b58:	strd	r2, [r1]
   12b5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b60:	str	r3, [fp, #-48]	; 0xffffffd0
   12b64:	b	12dd4 <__assert_fail@plt+0x1e60>
   12b68:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   12b6c:	cmp	r3, #0
   12b70:	beq	12b84 <__assert_fail@plt+0x1c10>
   12b74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12b78:	sub	r3, r3, #1
   12b7c:	str	r3, [fp, #-48]	; 0xffffffd0
   12b80:	b	12bd4 <__assert_fail@plt+0x1c60>
   12b84:	movw	r3, #45415	; 0xb167
   12b88:	movt	r3, #2
   12b8c:	ldrb	r3, [r3]
   12b90:	mov	r1, r3
   12b94:	sub	r3, fp, #8192	; 0x2000
   12b98:	sub	r3, r3, #28
   12b9c:	sub	r3, r3, #32
   12ba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12ba4:	mov	r0, r3
   12ba8:	bl	10e9c <memrchr@plt>
   12bac:	str	r0, [fp, #-56]	; 0xffffffc8
   12bb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12bb4:	cmp	r3, #0
   12bb8:	beq	12de4 <__assert_fail@plt+0x1e70>
   12bbc:	sub	r3, fp, #8192	; 0x2000
   12bc0:	sub	r3, r3, #28
   12bc4:	sub	r3, r3, #32
   12bc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12bcc:	sub	r3, r2, r3
   12bd0:	str	r3, [fp, #-48]	; 0xffffffd0
   12bd4:	sub	r3, fp, #8192	; 0x2000
   12bd8:	sub	r3, r3, #28
   12bdc:	sub	r3, r3, #48	; 0x30
   12be0:	ldrd	r2, [r3]
   12be4:	sub	r1, fp, #8192	; 0x2000
   12be8:	sub	r1, r1, #28
   12bec:	sub	r1, r1, #48	; 0x30
   12bf0:	subs	r0, r2, #1
   12bf4:	sub	ip, fp, #8320	; 0x2080
   12bf8:	sub	ip, ip, #20
   12bfc:	str	r0, [ip]
   12c00:	sbc	r0, r3, #0
   12c04:	sub	ip, fp, #8320	; 0x2080
   12c08:	sub	ip, ip, #16
   12c0c:	str	r0, [ip]
   12c10:	sub	r0, fp, #8320	; 0x2080
   12c14:	sub	r0, r0, #20
   12c18:	ldrd	r4, [r0]
   12c1c:	strd	r4, [r1]
   12c20:	orrs	r3, r2, r3
   12c24:	bne	12dd4 <__assert_fail@plt+0x1e60>
   12c28:	ldrd	r0, [fp, #4]
   12c2c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12c30:	cmp	r0, r2
   12c34:	sbcs	r3, r1, r3
   12c38:	bge	12d04 <__assert_fail@plt+0x1d90>
   12c3c:	sub	r3, fp, #8192	; 0x2000
   12c40:	sub	r3, r3, #28
   12c44:	mov	r1, r3
   12c48:	sub	r3, fp, #8192	; 0x2000
   12c4c:	sub	r3, r3, #28
   12c50:	ldr	r3, [r3, #-36]	; 0xffffffdc
   12c54:	str	r3, [sp, #4]
   12c58:	mov	r3, #0
   12c5c:	str	r3, [sp]
   12c60:	ldrd	r2, [fp, #4]
   12c64:	ldr	r0, [r1, #-40]	; 0xffffffd8
   12c68:	bl	11834 <__assert_fail@plt+0x8c0>
   12c6c:	mov	r2, r0
   12c70:	mov	r3, r1
   12c74:	cmp	r2, #0
   12c78:	sbcs	r3, r3, #0
   12c7c:	bge	12c88 <__assert_fail@plt+0x1d14>
   12c80:	mov	r3, #0
   12c84:	b	12f18 <__assert_fail@plt+0x1fa4>
   12c88:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12c8c:	ldrd	r2, [fp, #4]
   12c90:	subs	ip, r0, r2
   12c94:	sub	lr, fp, #8256	; 0x2040
   12c98:	sub	lr, lr, #20
   12c9c:	str	ip, [lr]
   12ca0:	sbc	r3, r1, r3
   12ca4:	sub	r2, fp, #8256	; 0x2040
   12ca8:	sub	r2, r2, #16
   12cac:	str	r3, [r2]
   12cb0:	sub	r3, fp, #8256	; 0x2040
   12cb4:	sub	r3, r3, #20
   12cb8:	ldrd	r4, [r3]
   12cbc:	sub	r3, fp, #8192	; 0x2000
   12cc0:	sub	r3, r3, #28
   12cc4:	mov	r1, r3
   12cc8:	mov	r2, r4
   12ccc:	mov	r3, r5
   12cd0:	ldr	r0, [r1, #-40]	; 0xffffffd8
   12cd4:	bl	116cc <__assert_fail@plt+0x758>
   12cd8:	str	r0, [fp, #-60]	; 0xffffffc4
   12cdc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ce0:	cmp	r3, #0
   12ce4:	beq	12d04 <__assert_fail@plt+0x1d90>
   12ce8:	sub	r3, fp, #8192	; 0x2000
   12cec:	sub	r3, r3, #28
   12cf0:	ldr	r1, [r3, #-36]	; 0xffffffdc
   12cf4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12cf8:	bl	114c0 <__assert_fail@plt+0x54c>
   12cfc:	mov	r3, #0
   12d00:	b	12f18 <__assert_fail@plt+0x1fa4>
   12d04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d08:	add	r2, r3, #1
   12d0c:	sub	r3, fp, #8192	; 0x2000
   12d10:	sub	r3, r3, #28
   12d14:	sub	r3, r3, #32
   12d18:	mov	r1, r2
   12d1c:	mov	r0, r3
   12d20:	bl	1160c <__assert_fail@plt+0x698>
   12d24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12d28:	mov	r0, r3
   12d2c:	mov	r1, #0
   12d30:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12d34:	adds	ip, r0, r2
   12d38:	sub	lr, fp, #8256	; 0x2040
   12d3c:	sub	lr, lr, #28
   12d40:	str	ip, [lr]
   12d44:	adc	r3, r1, r3
   12d48:	sub	r2, fp, #8256	; 0x2040
   12d4c:	sub	r2, r2, #24
   12d50:	str	r3, [r2]
   12d54:	sub	r3, fp, #8256	; 0x2040
   12d58:	sub	r3, r3, #28
   12d5c:	ldrd	r2, [r3]
   12d60:	mov	r1, r2
   12d64:	adds	r1, r1, #1
   12d68:	sub	r0, fp, #8256	; 0x2040
   12d6c:	sub	r0, r0, #36	; 0x24
   12d70:	str	r1, [r0]
   12d74:	adc	r3, r3, #0
   12d78:	sub	r2, fp, #8256	; 0x2040
   12d7c:	sub	r2, r2, #32
   12d80:	str	r3, [r2]
   12d84:	sub	r3, fp, #8192	; 0x2000
   12d88:	sub	r3, r3, #28
   12d8c:	mov	r1, r3
   12d90:	sub	r3, fp, #8192	; 0x2000
   12d94:	sub	r3, r3, #28
   12d98:	ldr	r3, [r3, #-36]	; 0xffffffdc
   12d9c:	str	r3, [sp, #4]
   12da0:	mov	r3, #0
   12da4:	str	r3, [sp]
   12da8:	sub	r3, fp, #8256	; 0x2040
   12dac:	sub	r3, r3, #36	; 0x24
   12db0:	ldrd	r2, [r3]
   12db4:	ldr	r0, [r1, #-40]	; 0xffffffd8
   12db8:	bl	11834 <__assert_fail@plt+0x8c0>
   12dbc:	mov	r2, r0
   12dc0:	mov	r3, r1
   12dc4:	mvn	r3, r3
   12dc8:	lsr	r3, r3, #31
   12dcc:	uxtb	r3, r3
   12dd0:	b	12f18 <__assert_fail@plt+0x1fa4>
   12dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12dd8:	cmp	r3, #0
   12ddc:	bne	12b68 <__assert_fail@plt+0x1bf4>
   12de0:	b	12de8 <__assert_fail@plt+0x1e74>
   12de4:	nop	{0}
   12de8:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   12dec:	ldrd	r2, [fp, #4]
   12df0:	cmp	r1, r3
   12df4:	cmpeq	r0, r2
   12df8:	bne	12e04 <__assert_fail@plt+0x1e90>
   12dfc:	mov	r3, #1
   12e00:	b	12f18 <__assert_fail@plt+0x1fa4>
   12e04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12e08:	subs	r1, r2, #8192	; 0x2000
   12e0c:	sub	r0, fp, #8320	; 0x2080
   12e10:	sub	r0, r0, #28
   12e14:	str	r1, [r0]
   12e18:	sbc	r3, r3, #0
   12e1c:	sub	r2, fp, #8320	; 0x2080
   12e20:	sub	r2, r2, #24
   12e24:	str	r3, [r2]
   12e28:	sub	r3, fp, #8320	; 0x2080
   12e2c:	sub	r3, r3, #28
   12e30:	ldrd	r2, [r3]
   12e34:	strd	r2, [fp, #-44]	; 0xffffffd4
   12e38:	sub	r3, fp, #8192	; 0x2000
   12e3c:	sub	r3, r3, #28
   12e40:	mov	r1, r3
   12e44:	sub	r3, fp, #8192	; 0x2000
   12e48:	sub	r3, r3, #28
   12e4c:	ldr	r3, [r3, #-36]	; 0xffffffdc
   12e50:	str	r3, [sp, #4]
   12e54:	mov	r3, #0
   12e58:	str	r3, [sp]
   12e5c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   12e60:	ldr	r0, [r1, #-40]	; 0xffffffd8
   12e64:	bl	11834 <__assert_fail@plt+0x8c0>
   12e68:	mov	r2, r0
   12e6c:	mov	r3, r1
   12e70:	cmp	r2, #0
   12e74:	sbcs	r3, r3, #0
   12e78:	bge	12e84 <__assert_fail@plt+0x1f10>
   12e7c:	mov	r3, #0
   12e80:	b	12f18 <__assert_fail@plt+0x1fa4>
   12e84:	sub	r3, fp, #8192	; 0x2000
   12e88:	sub	r3, r3, #28
   12e8c:	sub	r3, r3, #32
   12e90:	sub	r2, fp, #8192	; 0x2000
   12e94:	sub	r2, r2, #28
   12e98:	mov	r0, r2
   12e9c:	mov	r2, #8192	; 0x2000
   12ea0:	mov	r1, r3
   12ea4:	ldr	r0, [r0, #-40]	; 0xffffffd8
   12ea8:	bl	16e84 <__assert_fail@plt+0x5f10>
   12eac:	str	r0, [fp, #-32]	; 0xffffffe0
   12eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12eb4:	cmn	r3, #1
   12eb8:	bne	12f08 <__assert_fail@plt+0x1f94>
   12ebc:	bl	10eb4 <__errno_location@plt>
   12ec0:	mov	r3, r0
   12ec4:	ldr	r4, [r3]
   12ec8:	movw	r0, #42772	; 0xa714
   12ecc:	movt	r0, #1
   12ed0:	bl	10e78 <gettext@plt>
   12ed4:	mov	r5, r0
   12ed8:	sub	r3, fp, #8192	; 0x2000
   12edc:	sub	r3, r3, #28
   12ee0:	ldr	r1, [r3, #-36]	; 0xffffffdc
   12ee4:	mov	r0, #4
   12ee8:	bl	1696c <__assert_fail@plt+0x59f8>
   12eec:	mov	r3, r0
   12ef0:	mov	r2, r5
   12ef4:	mov	r1, r4
   12ef8:	mov	r0, #0
   12efc:	bl	10e0c <error@plt>
   12f00:	mov	r3, #0
   12f04:	b	12f18 <__assert_fail@plt+0x1fa4>
   12f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12f0c:	cmp	r3, #0
   12f10:	bne	12b5c <__assert_fail@plt+0x1be8>
   12f14:	mov	r3, #1
   12f18:	mov	r0, r3
   12f1c:	sub	sp, fp, #28
   12f20:	ldrd	r4, [sp]
   12f24:	ldrd	r6, [sp, #8]
   12f28:	ldrd	r8, [sp, #16]
   12f2c:	ldr	fp, [sp, #24]
   12f30:	add	sp, sp, #28
   12f34:	pop	{pc}		; (ldr pc, [sp], #4)
   12f38:	str	fp, [sp, #-8]!
   12f3c:	str	lr, [sp, #4]
   12f40:	add	fp, sp, #4
   12f44:	sub	sp, sp, #40	; 0x28
   12f48:	str	r0, [fp, #-16]
   12f4c:	str	r1, [fp, #-20]	; 0xffffffec
   12f50:	strd	r2, [fp, #-28]	; 0xffffffe4
   12f54:	ldr	r3, [fp, #4]
   12f58:	ldrd	r2, [r3, #48]	; 0x30
   12f5c:	strd	r2, [fp, #-12]
   12f60:	movw	r3, #45413	; 0xb165
   12f64:	movt	r3, #2
   12f68:	ldrb	r3, [r3]
   12f6c:	cmp	r3, #0
   12f70:	bne	12fd0 <__assert_fail@plt+0x205c>
   12f74:	ldrd	r2, [fp, #12]
   12f78:	cmp	r2, #0
   12f7c:	sbcs	r3, r3, #0
   12f80:	blt	12fd0 <__assert_fail@plt+0x205c>
   12f84:	ldr	r3, [fp, #4]
   12f88:	ldr	r3, [r3, #56]	; 0x38
   12f8c:	cmp	r3, #0
   12f90:	ble	12fb8 <__assert_fail@plt+0x2044>
   12f94:	ldr	r3, [fp, #4]
   12f98:	ldr	r3, [r3, #56]	; 0x38
   12f9c:	cmp	r3, #536870912	; 0x20000000
   12fa0:	bhi	12fb8 <__assert_fail@plt+0x2044>
   12fa4:	ldr	r3, [fp, #4]
   12fa8:	ldr	r3, [r3, #56]	; 0x38
   12fac:	mov	r2, r3
   12fb0:	asr	r3, r2, #31
   12fb4:	b	12fc0 <__assert_fail@plt+0x204c>
   12fb8:	mov	r2, #512	; 0x200
   12fbc:	mov	r3, #0
   12fc0:	ldrd	r0, [fp, #-12]
   12fc4:	cmp	r2, r0
   12fc8:	sbcs	r3, r3, r1
   12fcc:	blt	12ff0 <__assert_fail@plt+0x207c>
   12fd0:	ldrd	r2, [fp, #12]
   12fd4:	strd	r2, [sp]
   12fd8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fe0:	ldr	r0, [fp, #-16]
   12fe4:	bl	121dc <__assert_fail@plt+0x1268>
   12fe8:	mov	r3, r0
   12fec:	b	13044 <__assert_fail@plt+0x20d0>
   12ff0:	ldrd	r2, [fp, #-12]
   12ff4:	ldrd	r0, [fp, #12]
   12ff8:	cmp	r0, r2
   12ffc:	sbcs	r3, r1, r3
   13000:	bge	13030 <__assert_fail@plt+0x20bc>
   13004:	ldrd	r2, [fp, #-12]
   13008:	strd	r2, [sp, #8]
   1300c:	ldrd	r2, [fp, #12]
   13010:	strd	r2, [sp]
   13014:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13018:	ldr	r1, [fp, #-20]	; 0xffffffec
   1301c:	ldr	r0, [fp, #-16]
   13020:	bl	1285c <__assert_fail@plt+0x18e8>
   13024:	mov	r3, r0
   13028:	cmp	r3, #0
   1302c:	beq	13038 <__assert_fail@plt+0x20c4>
   13030:	mov	r3, #1
   13034:	b	1303c <__assert_fail@plt+0x20c8>
   13038:	mov	r3, #0
   1303c:	and	r3, r3, #1
   13040:	uxtb	r3, r3
   13044:	mov	r0, r3
   13048:	sub	sp, fp, #4
   1304c:	ldr	fp, [sp]
   13050:	add	sp, sp, #4
   13054:	pop	{pc}		; (ldr pc, [sp], #4)
   13058:	strd	r4, [sp, #-16]!
   1305c:	str	fp, [sp, #8]
   13060:	str	lr, [sp, #12]
   13064:	add	fp, sp, #12
   13068:	sub	sp, sp, #8192	; 0x2000
   1306c:	sub	sp, sp, #24
   13070:	sub	ip, fp, #8192	; 0x2000
   13074:	sub	ip, ip, #12
   13078:	str	r0, [ip, #-12]
   1307c:	sub	r0, fp, #8192	; 0x2000
   13080:	sub	r0, r0, #12
   13084:	str	r1, [r0, #-16]
   13088:	sub	r1, fp, #8192	; 0x2000
   1308c:	sub	r1, r1, #12
   13090:	sub	r1, r1, #16
   13094:	strd	r2, [r1, #-8]
   13098:	mov	r3, #8192	; 0x2000
   1309c:	str	r3, [fp, #-16]
   130a0:	b	131c0 <__assert_fail@plt+0x224c>
   130a4:	ldr	r3, [fp, #-16]
   130a8:	mov	r0, r3
   130ac:	mov	r1, #0
   130b0:	sub	r3, fp, #8192	; 0x2000
   130b4:	sub	r3, r3, #12
   130b8:	sub	r3, r3, #16
   130bc:	ldrd	r2, [r3, #-8]
   130c0:	cmp	r3, r1
   130c4:	cmpeq	r2, r0
   130c8:	bcs	130e0 <__assert_fail@plt+0x216c>
   130cc:	sub	r3, fp, #8192	; 0x2000
   130d0:	sub	r3, r3, #12
   130d4:	sub	r3, r3, #16
   130d8:	ldr	r3, [r3, #-8]
   130dc:	str	r3, [fp, #-16]
   130e0:	sub	r3, fp, #8192	; 0x2000
   130e4:	sub	r3, r3, #12
   130e8:	sub	r3, r3, #8
   130ec:	sub	r2, fp, #8192	; 0x2000
   130f0:	sub	r2, r2, #12
   130f4:	mov	r0, r2
   130f8:	ldr	r2, [fp, #-16]
   130fc:	mov	r1, r3
   13100:	ldr	r0, [r0, #-16]
   13104:	bl	16e84 <__assert_fail@plt+0x5f10>
   13108:	str	r0, [fp, #-20]	; 0xffffffec
   1310c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13110:	cmn	r3, #1
   13114:	bne	13164 <__assert_fail@plt+0x21f0>
   13118:	bl	10eb4 <__errno_location@plt>
   1311c:	mov	r3, r0
   13120:	ldr	r4, [r3]
   13124:	movw	r0, #42772	; 0xa714
   13128:	movt	r0, #1
   1312c:	bl	10e78 <gettext@plt>
   13130:	mov	r5, r0
   13134:	sub	r3, fp, #8192	; 0x2000
   13138:	sub	r3, r3, #12
   1313c:	ldr	r1, [r3, #-12]
   13140:	mov	r0, #4
   13144:	bl	1696c <__assert_fail@plt+0x59f8>
   13148:	mov	r3, r0
   1314c:	mov	r2, r5
   13150:	mov	r1, r4
   13154:	mov	r0, #0
   13158:	bl	10e0c <error@plt>
   1315c:	mov	r3, #0
   13160:	b	131e4 <__assert_fail@plt+0x2270>
   13164:	ldr	r3, [fp, #-20]	; 0xffffffec
   13168:	cmp	r3, #0
   1316c:	beq	131dc <__assert_fail@plt+0x2268>
   13170:	sub	r3, fp, #8192	; 0x2000
   13174:	sub	r3, r3, #12
   13178:	sub	r3, r3, #8
   1317c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13180:	mov	r0, r3
   13184:	bl	1160c <__assert_fail@plt+0x698>
   13188:	ldr	r3, [fp, #-20]	; 0xffffffec
   1318c:	mov	r2, r3
   13190:	mov	r3, #0
   13194:	sub	r1, fp, #8192	; 0x2000
   13198:	sub	r1, r1, #12
   1319c:	sub	r1, r1, #16
   131a0:	mov	ip, r1
   131a4:	sub	r1, fp, #8192	; 0x2000
   131a8:	sub	r1, r1, #12
   131ac:	sub	r1, r1, #16
   131b0:	ldrd	r0, [r1, #-8]
   131b4:	subs	r4, r0, r2
   131b8:	sbc	r5, r1, r3
   131bc:	strd	r4, [ip, #-8]
   131c0:	sub	r3, fp, #8192	; 0x2000
   131c4:	sub	r3, r3, #12
   131c8:	sub	r3, r3, #16
   131cc:	ldrd	r2, [r3, #-8]
   131d0:	orrs	r3, r2, r3
   131d4:	bne	130a4 <__assert_fail@plt+0x2130>
   131d8:	b	131e0 <__assert_fail@plt+0x226c>
   131dc:	nop	{0}
   131e0:	mov	r3, #1
   131e4:	mov	r0, r3
   131e8:	sub	sp, fp, #12
   131ec:	ldrd	r4, [sp]
   131f0:	ldr	fp, [sp, #8]
   131f4:	add	sp, sp, #12
   131f8:	pop	{pc}		; (ldr pc, [sp], #4)
   131fc:	strd	r4, [sp, #-16]!
   13200:	str	fp, [sp, #8]
   13204:	str	lr, [sp, #12]
   13208:	add	fp, sp, #12
   1320c:	sub	sp, sp, #8320	; 0x2080
   13210:	sub	sp, sp, #16
   13214:	sub	ip, fp, #8192	; 0x2000
   13218:	sub	ip, ip, #12
   1321c:	str	r0, [ip, #-124]	; 0xffffff84
   13220:	sub	r0, fp, #8192	; 0x2000
   13224:	sub	r0, r0, #12
   13228:	str	r1, [r0, #-128]	; 0xffffff80
   1322c:	sub	r1, fp, #8320	; 0x2080
   13230:	sub	r1, r1, #12
   13234:	strd	r2, [r1, #-8]
   13238:	b	13460 <__assert_fail@plt+0x24ec>
   1323c:	sub	r3, fp, #8192	; 0x2000
   13240:	sub	r3, r3, #12
   13244:	sub	r3, r3, #16
   13248:	sub	r2, fp, #8192	; 0x2000
   1324c:	sub	r2, r2, #12
   13250:	mov	r0, r2
   13254:	mov	r2, #8192	; 0x2000
   13258:	mov	r1, r3
   1325c:	ldr	r0, [r0, #-128]	; 0xffffff80
   13260:	bl	16e84 <__assert_fail@plt+0x5f10>
   13264:	str	r0, [fp, #-20]	; 0xffffffec
   13268:	mov	r3, #0
   1326c:	str	r3, [fp, #-16]
   13270:	ldr	r3, [fp, #-20]	; 0xffffffec
   13274:	cmn	r3, #1
   13278:	bne	132c8 <__assert_fail@plt+0x2354>
   1327c:	bl	10eb4 <__errno_location@plt>
   13280:	mov	r3, r0
   13284:	ldr	r4, [r3]
   13288:	movw	r0, #42772	; 0xa714
   1328c:	movt	r0, #1
   13290:	bl	10e78 <gettext@plt>
   13294:	mov	r5, r0
   13298:	sub	r3, fp, #8192	; 0x2000
   1329c:	sub	r3, r3, #12
   132a0:	ldr	r1, [r3, #-124]	; 0xffffff84
   132a4:	mov	r0, #4
   132a8:	bl	1696c <__assert_fail@plt+0x59f8>
   132ac:	mov	r3, r0
   132b0:	mov	r2, r5
   132b4:	mov	r1, r4
   132b8:	mov	r0, #0
   132bc:	bl	10e0c <error@plt>
   132c0:	mov	r3, #0
   132c4:	b	13480 <__assert_fail@plt+0x250c>
   132c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132cc:	cmp	r3, #0
   132d0:	beq	13478 <__assert_fail@plt+0x2504>
   132d4:	b	13430 <__assert_fail@plt+0x24bc>
   132d8:	ldr	r3, [fp, #-16]
   132dc:	add	r2, r3, #1
   132e0:	str	r2, [fp, #-16]
   132e4:	sub	r2, fp, #8192	; 0x2000
   132e8:	sub	r2, r2, #12
   132ec:	add	r3, r2, r3
   132f0:	ldrb	r0, [r3, #-16]
   132f4:	movw	r3, #45415	; 0xb167
   132f8:	movt	r3, #2
   132fc:	ldrb	r1, [r3]
   13300:	sub	r3, fp, #8320	; 0x2080
   13304:	sub	r3, r3, #12
   13308:	mov	ip, r3
   1330c:	sub	r3, fp, #8320	; 0x2080
   13310:	sub	r3, r3, #12
   13314:	ldrd	r2, [r3, #-8]
   13318:	strd	r2, [ip, #-8]
   1331c:	cmp	r0, r1
   13320:	bne	13430 <__assert_fail@plt+0x24bc>
   13324:	sub	r3, fp, #8320	; 0x2080
   13328:	sub	r3, r3, #12
   1332c:	mov	r1, r3
   13330:	sub	r3, fp, #8320	; 0x2080
   13334:	sub	r3, r3, #12
   13338:	ldrd	r2, [r3, #-8]
   1333c:	subs	r4, r2, #1
   13340:	sbc	r5, r3, #0
   13344:	strd	r4, [r1, #-8]
   13348:	sub	r3, fp, #8320	; 0x2080
   1334c:	sub	r3, r3, #12
   13350:	ldrd	r2, [r3, #-8]
   13354:	orrs	r3, r2, r3
   13358:	bne	13430 <__assert_fail@plt+0x24bc>
   1335c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13360:	ldr	r3, [fp, #-16]
   13364:	sub	r3, r2, r3
   13368:	mov	r2, r3
   1336c:	mov	r3, #0
   13370:	strd	r2, [fp, #-28]	; 0xffffffe4
   13374:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13378:	rsbs	r2, r2, #0
   1337c:	rsc	r3, r3, #0
   13380:	sub	r1, fp, #8192	; 0x2000
   13384:	sub	r1, r1, #12
   13388:	mov	r0, r1
   1338c:	mov	r1, #1
   13390:	str	r1, [sp]
   13394:	ldr	r0, [r0, #-128]	; 0xffffff80
   13398:	bl	10dd0 <lseek64@plt>
   1339c:	mov	r2, r0
   133a0:	mov	r3, r1
   133a4:	cmp	r2, #0
   133a8:	sbcs	r3, r3, #0
   133ac:	bge	13444 <__assert_fail@plt+0x24d0>
   133b0:	sub	r3, fp, #8256	; 0x2040
   133b4:	sub	r3, r3, #12
   133b8:	sub	r3, r3, #56	; 0x38
   133bc:	sub	r2, fp, #8192	; 0x2000
   133c0:	sub	r2, r2, #12
   133c4:	mov	r1, r3
   133c8:	ldr	r0, [r2, #-128]	; 0xffffff80
   133cc:	bl	19f60 <__assert_fail@plt+0x8fec>
   133d0:	mov	r3, r0
   133d4:	cmp	r3, #0
   133d8:	bne	133f4 <__assert_fail@plt+0x2480>
   133dc:	sub	r3, fp, #8192	; 0x2000
   133e0:	sub	r3, r3, #12
   133e4:	ldr	r3, [r3, #-104]	; 0xffffff98
   133e8:	and	r3, r3, #61440	; 0xf000
   133ec:	cmp	r3, #32768	; 0x8000
   133f0:	bne	13444 <__assert_fail@plt+0x24d0>
   133f4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   133f8:	rsbs	r2, r2, #0
   133fc:	rsc	r3, r3, #0
   13400:	sub	r1, fp, #8192	; 0x2000
   13404:	sub	r1, r1, #12
   13408:	mov	r0, r1
   1340c:	sub	r1, fp, #8192	; 0x2000
   13410:	sub	r1, r1, #12
   13414:	ldr	r1, [r1, #-124]	; 0xffffff84
   13418:	str	r1, [sp, #4]
   1341c:	mov	r1, #1
   13420:	str	r1, [sp]
   13424:	ldr	r0, [r0, #-128]	; 0xffffff80
   13428:	bl	11834 <__assert_fail@plt+0x8c0>
   1342c:	b	13444 <__assert_fail@plt+0x24d0>
   13430:	ldr	r2, [fp, #-16]
   13434:	ldr	r3, [fp, #-20]	; 0xffffffec
   13438:	cmp	r2, r3
   1343c:	bcc	132d8 <__assert_fail@plt+0x2364>
   13440:	b	13448 <__assert_fail@plt+0x24d4>
   13444:	nop	{0}
   13448:	sub	r3, fp, #8192	; 0x2000
   1344c:	sub	r3, r3, #12
   13450:	sub	r3, r3, #16
   13454:	ldr	r1, [fp, #-16]
   13458:	mov	r0, r3
   1345c:	bl	1160c <__assert_fail@plt+0x698>
   13460:	sub	r3, fp, #8320	; 0x2080
   13464:	sub	r3, r3, #12
   13468:	ldrd	r2, [r3, #-8]
   1346c:	orrs	r3, r2, r3
   13470:	bne	1323c <__assert_fail@plt+0x22c8>
   13474:	b	1347c <__assert_fail@plt+0x2508>
   13478:	nop	{0}
   1347c:	mov	r3, #1
   13480:	mov	r0, r3
   13484:	sub	sp, fp, #12
   13488:	ldrd	r4, [sp]
   1348c:	ldr	fp, [sp, #8]
   13490:	add	sp, sp, #12
   13494:	pop	{pc}		; (ldr pc, [sp], #4)
   13498:	strd	r4, [sp, #-16]!
   1349c:	str	fp, [sp, #8]
   134a0:	str	lr, [sp, #12]
   134a4:	add	fp, sp, #12
   134a8:	sub	sp, sp, #144	; 0x90
   134ac:	str	r0, [fp, #-128]	; 0xffffff80
   134b0:	str	r1, [fp, #-132]	; 0xffffff7c
   134b4:	strd	r2, [fp, #-140]	; 0xffffff74
   134b8:	movw	r3, #45414	; 0xb166
   134bc:	movt	r3, #2
   134c0:	ldrb	r3, [r3]
   134c4:	cmp	r3, #0
   134c8:	beq	134d4 <__assert_fail@plt+0x2560>
   134cc:	ldr	r0, [fp, #-128]	; 0xffffff80
   134d0:	bl	11598 <__assert_fail@plt+0x624>
   134d4:	ldrb	r3, [fp, #8]
   134d8:	cmp	r3, #0
   134dc:	beq	13618 <__assert_fail@plt+0x26a4>
   134e0:	mvn	r2, #0
   134e4:	mvn	r3, #0
   134e8:	strd	r2, [fp, #-20]	; 0xffffffec
   134ec:	sub	r3, fp, #124	; 0x7c
   134f0:	mov	r1, r3
   134f4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   134f8:	bl	19f60 <__assert_fail@plt+0x8fec>
   134fc:	mov	r3, r0
   13500:	cmp	r3, #0
   13504:	beq	1354c <__assert_fail@plt+0x25d8>
   13508:	bl	10eb4 <__errno_location@plt>
   1350c:	mov	r3, r0
   13510:	ldr	r4, [r3]
   13514:	movw	r0, #42988	; 0xa7ec
   13518:	movt	r0, #1
   1351c:	bl	10e78 <gettext@plt>
   13520:	mov	r5, r0
   13524:	ldr	r1, [fp, #-128]	; 0xffffff80
   13528:	mov	r0, #4
   1352c:	bl	1696c <__assert_fail@plt+0x59f8>
   13530:	mov	r3, r0
   13534:	mov	r2, r5
   13538:	mov	r1, r4
   1353c:	mov	r0, #0
   13540:	bl	10e0c <error@plt>
   13544:	mov	r3, #0
   13548:	b	13650 <__assert_fail@plt+0x26dc>
   1354c:	movw	r3, #45413	; 0xb165
   13550:	movt	r3, #2
   13554:	ldrb	r3, [r3]
   13558:	eor	r3, r3, #1
   1355c:	uxtb	r3, r3
   13560:	cmp	r3, #0
   13564:	beq	135bc <__assert_fail@plt+0x2648>
   13568:	sub	r3, fp, #124	; 0x7c
   1356c:	mov	r0, r3
   13570:	bl	112c4 <__assert_fail@plt+0x350>
   13574:	mov	r3, r0
   13578:	cmp	r3, #0
   1357c:	beq	135bc <__assert_fail@plt+0x2648>
   13580:	ldr	r3, [fp, #-128]	; 0xffffff80
   13584:	str	r3, [sp, #4]
   13588:	mov	r3, #1
   1358c:	str	r3, [sp]
   13590:	mov	r2, #0
   13594:	mov	r3, #0
   13598:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1359c:	bl	11834 <__assert_fail@plt+0x8c0>
   135a0:	strd	r0, [fp, #-20]	; 0xffffffec
   135a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   135a8:	cmp	r2, #0
   135ac:	sbcs	r3, r3, #0
   135b0:	bge	135bc <__assert_fail@plt+0x2648>
   135b4:	mov	r3, #0
   135b8:	b	13650 <__assert_fail@plt+0x26dc>
   135bc:	ldrb	r3, [fp, #4]
   135c0:	cmp	r3, #0
   135c4:	beq	135f0 <__assert_fail@plt+0x267c>
   135c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   135cc:	strd	r2, [sp, #8]
   135d0:	sub	r3, fp, #124	; 0x7c
   135d4:	str	r3, [sp]
   135d8:	ldrd	r2, [fp, #-140]	; 0xffffff74
   135dc:	ldr	r1, [fp, #-132]	; 0xffffff7c
   135e0:	ldr	r0, [fp, #-128]	; 0xffffff80
   135e4:	bl	12f38 <__assert_fail@plt+0x1fc4>
   135e8:	mov	r3, r0
   135ec:	b	13650 <__assert_fail@plt+0x26dc>
   135f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   135f4:	strd	r2, [sp, #8]
   135f8:	sub	r3, fp, #124	; 0x7c
   135fc:	str	r3, [sp]
   13600:	ldrd	r2, [fp, #-140]	; 0xffffff74
   13604:	ldr	r1, [fp, #-132]	; 0xffffff7c
   13608:	ldr	r0, [fp, #-128]	; 0xffffff80
   1360c:	bl	1206c <__assert_fail@plt+0x10f8>
   13610:	mov	r3, r0
   13614:	b	13650 <__assert_fail@plt+0x26dc>
   13618:	ldrb	r3, [fp, #4]
   1361c:	cmp	r3, #0
   13620:	beq	1363c <__assert_fail@plt+0x26c8>
   13624:	ldrd	r2, [fp, #-140]	; 0xffffff74
   13628:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1362c:	ldr	r0, [fp, #-128]	; 0xffffff80
   13630:	bl	131fc <__assert_fail@plt+0x2288>
   13634:	mov	r3, r0
   13638:	b	13650 <__assert_fail@plt+0x26dc>
   1363c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   13640:	ldr	r1, [fp, #-132]	; 0xffffff7c
   13644:	ldr	r0, [fp, #-128]	; 0xffffff80
   13648:	bl	13058 <__assert_fail@plt+0x20e4>
   1364c:	mov	r3, r0
   13650:	mov	r0, r3
   13654:	sub	sp, fp, #12
   13658:	ldrd	r4, [sp]
   1365c:	ldr	fp, [sp, #8]
   13660:	add	sp, sp, #12
   13664:	pop	{pc}		; (ldr pc, [sp], #4)
   13668:	strd	r4, [sp, #-16]!
   1366c:	str	fp, [sp, #8]
   13670:	str	lr, [sp, #12]
   13674:	add	fp, sp, #12
   13678:	sub	sp, sp, #32
   1367c:	str	r0, [fp, #-24]	; 0xffffffe8
   13680:	strd	r2, [fp, #-36]	; 0xffffffdc
   13684:	movw	r1, #43004	; 0xa7fc
   13688:	movt	r1, #1
   1368c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13690:	bl	10d04 <strcmp@plt>
   13694:	mov	r3, r0
   13698:	cmp	r3, #0
   1369c:	moveq	r3, #1
   136a0:	movne	r3, #0
   136a4:	strb	r3, [fp, #-17]	; 0xffffffef
   136a8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   136ac:	cmp	r3, #0
   136b0:	beq	136ec <__assert_fail@plt+0x2778>
   136b4:	movw	r3, #45416	; 0xb168
   136b8:	movt	r3, #2
   136bc:	mov	r2, #1
   136c0:	strb	r2, [r3]
   136c4:	mov	r3, #0
   136c8:	str	r3, [fp, #-16]
   136cc:	movw	r0, #43008	; 0xa800
   136d0:	movt	r0, #1
   136d4:	bl	10e78 <gettext@plt>
   136d8:	str	r0, [fp, #-24]	; 0xffffffe8
   136dc:	mov	r1, #0
   136e0:	mov	r0, #0
   136e4:	bl	18058 <__assert_fail@plt+0x70e4>
   136e8:	b	1374c <__assert_fail@plt+0x27d8>
   136ec:	mov	r1, #0
   136f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136f4:	bl	10e18 <open64@plt>
   136f8:	str	r0, [fp, #-16]
   136fc:	ldr	r3, [fp, #-16]
   13700:	cmp	r3, #0
   13704:	bge	1374c <__assert_fail@plt+0x27d8>
   13708:	bl	10eb4 <__errno_location@plt>
   1370c:	mov	r3, r0
   13710:	ldr	r4, [r3]
   13714:	movw	r0, #43024	; 0xa810
   13718:	movt	r0, #1
   1371c:	bl	10e78 <gettext@plt>
   13720:	mov	r5, r0
   13724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13728:	mov	r0, #4
   1372c:	bl	1696c <__assert_fail@plt+0x59f8>
   13730:	mov	r3, r0
   13734:	mov	r2, r5
   13738:	mov	r1, r4
   1373c:	mov	r0, #0
   13740:	bl	10e0c <error@plt>
   13744:	mov	r3, #0
   13748:	b	137e4 <__assert_fail@plt+0x2870>
   1374c:	ldrb	r3, [fp, #8]
   13750:	str	r3, [sp, #4]
   13754:	ldrb	r3, [fp, #4]
   13758:	str	r3, [sp]
   1375c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13760:	ldr	r1, [fp, #-16]
   13764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13768:	bl	13498 <__assert_fail@plt+0x2524>
   1376c:	mov	r3, r0
   13770:	strb	r3, [fp, #-18]	; 0xffffffee
   13774:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13778:	eor	r3, r3, #1
   1377c:	uxtb	r3, r3
   13780:	cmp	r3, #0
   13784:	beq	137e0 <__assert_fail@plt+0x286c>
   13788:	ldr	r0, [fp, #-16]
   1378c:	bl	10f68 <close@plt>
   13790:	mov	r3, r0
   13794:	cmp	r3, #0
   13798:	beq	137e0 <__assert_fail@plt+0x286c>
   1379c:	bl	10eb4 <__errno_location@plt>
   137a0:	mov	r3, r0
   137a4:	ldr	r4, [r3]
   137a8:	movw	r0, #43052	; 0xa82c
   137ac:	movt	r0, #1
   137b0:	bl	10e78 <gettext@plt>
   137b4:	mov	r5, r0
   137b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137bc:	mov	r0, #4
   137c0:	bl	1696c <__assert_fail@plt+0x59f8>
   137c4:	mov	r3, r0
   137c8:	mov	r2, r5
   137cc:	mov	r1, r4
   137d0:	mov	r0, #0
   137d4:	bl	10e0c <error@plt>
   137d8:	mov	r3, #0
   137dc:	b	137e4 <__assert_fail@plt+0x2870>
   137e0:	ldrb	r3, [fp, #-18]	; 0xffffffee
   137e4:	mov	r0, r3
   137e8:	sub	sp, fp, #12
   137ec:	ldrd	r4, [sp]
   137f0:	ldr	fp, [sp, #8]
   137f4:	add	sp, sp, #12
   137f8:	pop	{pc}		; (ldr pc, [sp], #4)
   137fc:	str	fp, [sp, #-8]!
   13800:	str	lr, [sp, #4]
   13804:	add	fp, sp, #4
   13808:	sub	sp, sp, #32
   1380c:	mov	r3, r0
   13810:	str	r1, [fp, #-12]
   13814:	strb	r3, [fp, #-5]
   13818:	ldrb	r3, [fp, #-5]
   1381c:	cmp	r3, #0
   13820:	beq	13838 <__assert_fail@plt+0x28c4>
   13824:	movw	r0, #43072	; 0xa840
   13828:	movt	r0, #1
   1382c:	bl	10e78 <gettext@plt>
   13830:	mov	r2, r0
   13834:	b	13848 <__assert_fail@plt+0x28d4>
   13838:	movw	r0, #43096	; 0xa858
   1383c:	movt	r0, #1
   13840:	bl	10e78 <gettext@plt>
   13844:	mov	r2, r0
   13848:	mov	r3, #0
   1384c:	str	r3, [sp, #16]
   13850:	str	r2, [sp, #12]
   13854:	movw	r3, #43120	; 0xa870
   13858:	movt	r3, #1
   1385c:	str	r3, [sp, #8]
   13860:	mvn	r2, #0
   13864:	mvn	r3, #0
   13868:	strd	r2, [sp]
   1386c:	mov	r2, #0
   13870:	mov	r3, #0
   13874:	ldr	r0, [fp, #-12]
   13878:	bl	18230 <__assert_fail@plt+0x72bc>
   1387c:	mov	r2, r0
   13880:	mov	r3, r1
   13884:	mov	r0, r2
   13888:	mov	r1, r3
   1388c:	sub	sp, fp, #4
   13890:	ldr	fp, [sp]
   13894:	add	sp, sp, #4
   13898:	pop	{pc}		; (ldr pc, [sp], #4)
   1389c:	str	r4, [sp, #-12]!
   138a0:	str	fp, [sp, #4]
   138a4:	str	lr, [sp, #8]
   138a8:	add	fp, sp, #8
   138ac:	sub	sp, sp, #108	; 0x6c
   138b0:	str	r0, [fp, #-96]	; 0xffffffa0
   138b4:	str	r1, [fp, #-100]	; 0xffffff9c
   138b8:	mov	r3, #0
   138bc:	str	r3, [fp, #-16]
   138c0:	mov	r3, #1
   138c4:	strb	r3, [fp, #-17]	; 0xffffffef
   138c8:	mov	r2, #10
   138cc:	mov	r3, #0
   138d0:	strd	r2, [fp, #-36]	; 0xffffffdc
   138d4:	mov	r3, #1
   138d8:	strb	r3, [fp, #-37]	; 0xffffffdb
   138dc:	mov	r3, #0
   138e0:	strb	r3, [fp, #-38]	; 0xffffffda
   138e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   138e8:	ldr	r3, [r3]
   138ec:	mov	r0, r3
   138f0:	bl	144ec <__assert_fail@plt+0x3578>
   138f4:	movw	r1, #41208	; 0xa0f8
   138f8:	movt	r1, #1
   138fc:	mov	r0, #6
   13900:	bl	10f14 <setlocale@plt>
   13904:	movw	r1, #43136	; 0xa880
   13908:	movt	r1, #1
   1390c:	movw	r0, #41232	; 0xa110
   13910:	movt	r0, #1
   13914:	bl	10f44 <bindtextdomain@plt>
   13918:	movw	r0, #41232	; 0xa110
   1391c:	movt	r0, #1
   13920:	bl	10d94 <textdomain@plt>
   13924:	movw	r0, #16488	; 0x4068
   13928:	movt	r0, #1
   1392c:	bl	19f48 <__assert_fail@plt+0x8fd4>
   13930:	movw	r3, #45416	; 0xb168
   13934:	movt	r3, #2
   13938:	mov	r2, #0
   1393c:	strb	r2, [r3]
   13940:	movw	r3, #45414	; 0xb166
   13944:	movt	r3, #2
   13948:	mov	r2, #0
   1394c:	strb	r2, [r3]
   13950:	movw	r3, #45415	; 0xb167
   13954:	movt	r3, #2
   13958:	mov	r2, #10
   1395c:	strb	r2, [r3]
   13960:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13964:	cmp	r3, #1
   13968:	ble	13dd4 <__assert_fail@plt+0x2e60>
   1396c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13970:	add	r3, r3, #4
   13974:	ldr	r3, [r3]
   13978:	ldrb	r3, [r3]
   1397c:	cmp	r3, #45	; 0x2d
   13980:	bne	13dd4 <__assert_fail@plt+0x2e60>
   13984:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13988:	add	r3, r3, #4
   1398c:	ldr	r3, [r3]
   13990:	add	r3, r3, #1
   13994:	ldrb	r3, [r3]
   13998:	sub	r3, r3, #48	; 0x30
   1399c:	cmp	r3, #9
   139a0:	bhi	13dd4 <__assert_fail@plt+0x2e60>
   139a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   139a8:	ldr	r3, [r3, #4]
   139ac:	str	r3, [fp, #-44]	; 0xffffffd4
   139b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139b4:	add	r3, r3, #1
   139b8:	str	r3, [fp, #-44]	; 0xffffffd4
   139bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139c0:	str	r3, [fp, #-52]	; 0xffffffcc
   139c4:	mov	r3, #0
   139c8:	strb	r3, [fp, #-45]	; 0xffffffd3
   139cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139d0:	add	r3, r3, #1
   139d4:	str	r3, [fp, #-44]	; 0xffffffd4
   139d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139dc:	ldrb	r3, [r3]
   139e0:	sub	r3, r3, #48	; 0x30
   139e4:	cmp	r3, #9
   139e8:	bls	139cc <__assert_fail@plt+0x2a58>
   139ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139f0:	str	r3, [fp, #-56]	; 0xffffffc8
   139f4:	b	13b10 <__assert_fail@plt+0x2b9c>
   139f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   139fc:	ldrb	r3, [r3]
   13a00:	sub	r3, r3, #98	; 0x62
   13a04:	cmp	r3, #24
   13a08:	ldrls	pc, [pc, r3, lsl #2]
   13a0c:	b	13ad8 <__assert_fail@plt+0x2b64>
   13a10:	andeq	r3, r1, r8, lsl #21
   13a14:	andeq	r3, r1, r4, ror sl
   13a18:	ldrdeq	r3, [r1], -r8
   13a1c:	ldrdeq	r3, [r1], -r8
   13a20:	ldrdeq	r3, [r1], -r8
   13a24:	ldrdeq	r3, [r1], -r8
   13a28:	ldrdeq	r3, [r1], -r8
   13a2c:	ldrdeq	r3, [r1], -r8
   13a30:	ldrdeq	r3, [r1], -r8
   13a34:	andeq	r3, r1, r8, lsl #21
   13a38:	andeq	r3, r1, r0, lsr #21
   13a3c:	andeq	r3, r1, r8, lsl #21
   13a40:	ldrdeq	r3, [r1], -r8
   13a44:	ldrdeq	r3, [r1], -r8
   13a48:	ldrdeq	r3, [r1], -r8
   13a4c:	andeq	r3, r1, ip, lsr #21
   13a50:	ldrdeq	r3, [r1], -r8
   13a54:	ldrdeq	r3, [r1], -r8
   13a58:	ldrdeq	r3, [r1], -r8
   13a5c:	ldrdeq	r3, [r1], -r8
   13a60:			; <UNDEFINED> instruction: 0x00013ab8
   13a64:	ldrdeq	r3, [r1], -r8
   13a68:	ldrdeq	r3, [r1], -r8
   13a6c:	ldrdeq	r3, [r1], -r8
   13a70:	andeq	r3, r1, r4, asr #21
   13a74:	mov	r3, #0
   13a78:	strb	r3, [fp, #-37]	; 0xffffffdb
   13a7c:	mov	r3, #0
   13a80:	strb	r3, [fp, #-45]	; 0xffffffd3
   13a84:	b	13b04 <__assert_fail@plt+0x2b90>
   13a88:	mov	r3, #0
   13a8c:	strb	r3, [fp, #-37]	; 0xffffffdb
   13a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13a94:	ldrb	r3, [r3]
   13a98:	strb	r3, [fp, #-45]	; 0xffffffd3
   13a9c:	b	13b04 <__assert_fail@plt+0x2b90>
   13aa0:	mov	r3, #1
   13aa4:	strb	r3, [fp, #-37]	; 0xffffffdb
   13aa8:	b	13b04 <__assert_fail@plt+0x2b90>
   13aac:	mov	r3, #2
   13ab0:	str	r3, [fp, #-16]
   13ab4:	b	13b04 <__assert_fail@plt+0x2b90>
   13ab8:	mov	r3, #1
   13abc:	str	r3, [fp, #-16]
   13ac0:	b	13b04 <__assert_fail@plt+0x2b90>
   13ac4:	movw	r3, #45415	; 0xb167
   13ac8:	movt	r3, #2
   13acc:	mov	r2, #0
   13ad0:	strb	r2, [r3]
   13ad4:	b	13b04 <__assert_fail@plt+0x2b90>
   13ad8:	movw	r0, #43160	; 0xa898
   13adc:	movt	r0, #1
   13ae0:	bl	10e78 <gettext@plt>
   13ae4:	mov	r2, r0
   13ae8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13aec:	ldrb	r3, [r3]
   13af0:	mov	r1, #0
   13af4:	mov	r0, #0
   13af8:	bl	10e0c <error@plt>
   13afc:	mov	r0, #1
   13b00:	bl	11320 <__assert_fail@plt+0x3ac>
   13b04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b08:	add	r3, r3, #1
   13b0c:	str	r3, [fp, #-44]	; 0xffffffd4
   13b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13b14:	ldrb	r3, [r3]
   13b18:	cmp	r3, #0
   13b1c:	bne	139f8 <__assert_fail@plt+0x2a84>
   13b20:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b24:	ldrb	r2, [fp, #-45]	; 0xffffffd3
   13b28:	strb	r2, [r3]
   13b2c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   13b30:	cmp	r3, #0
   13b34:	beq	13b50 <__assert_fail@plt+0x2bdc>
   13b38:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b3c:	add	r3, r3, #1
   13b40:	str	r3, [fp, #-56]	; 0xffffffc8
   13b44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13b48:	mov	r2, #0
   13b4c:	strb	r2, [r3]
   13b50:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13b54:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13b58:	mov	r0, r3
   13b5c:	bl	137fc <__assert_fail@plt+0x2888>
   13b60:	strd	r0, [fp, #-36]	; 0xffffffdc
   13b64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13b68:	add	r3, r3, #4
   13b6c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13b70:	ldr	r2, [r2]
   13b74:	str	r2, [r3]
   13b78:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13b7c:	add	r3, r3, #4
   13b80:	str	r3, [fp, #-100]	; 0xffffff9c
   13b84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13b88:	sub	r3, r3, #1
   13b8c:	str	r3, [fp, #-96]	; 0xffffffa0
   13b90:	b	13dd4 <__assert_fail@plt+0x2e60>
   13b94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b98:	cmp	r3, #110	; 0x6e
   13b9c:	beq	13c9c <__assert_fail@plt+0x2d28>
   13ba0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ba4:	cmp	r3, #110	; 0x6e
   13ba8:	bgt	13bd4 <__assert_fail@plt+0x2c60>
   13bac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bb0:	cmn	r3, #2
   13bb4:	beq	13d3c <__assert_fail@plt+0x2dc8>
   13bb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bbc:	cmp	r3, #99	; 0x63
   13bc0:	beq	13c28 <__assert_fail@plt+0x2cb4>
   13bc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bc8:	cmn	r3, #3
   13bcc:	beq	13d44 <__assert_fail@plt+0x2dd0>
   13bd0:	b	13d9c <__assert_fail@plt+0x2e28>
   13bd4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bd8:	cmp	r3, #118	; 0x76
   13bdc:	beq	13d1c <__assert_fail@plt+0x2da8>
   13be0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13be4:	cmp	r3, #118	; 0x76
   13be8:	bgt	13bfc <__assert_fail@plt+0x2c88>
   13bec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13bf0:	cmp	r3, #113	; 0x71
   13bf4:	beq	13d10 <__assert_fail@plt+0x2d9c>
   13bf8:	b	13d9c <__assert_fail@plt+0x2e28>
   13bfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c00:	cmp	r3, #122	; 0x7a
   13c04:	beq	13d28 <__assert_fail@plt+0x2db4>
   13c08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c0c:	cmp	r3, #256	; 0x100
   13c10:	bne	13d9c <__assert_fail@plt+0x2e28>
   13c14:	movw	r3, #45413	; 0xb165
   13c18:	movt	r3, #2
   13c1c:	mov	r2, #1
   13c20:	strb	r2, [r3]
   13c24:	b	13dd4 <__assert_fail@plt+0x2e60>
   13c28:	mov	r3, #0
   13c2c:	strb	r3, [fp, #-37]	; 0xffffffdb
   13c30:	movw	r3, #45408	; 0xb160
   13c34:	movt	r3, #2
   13c38:	ldr	r3, [r3]
   13c3c:	ldrb	r3, [r3]
   13c40:	cmp	r3, #45	; 0x2d
   13c44:	moveq	r3, #1
   13c48:	movne	r3, #0
   13c4c:	strb	r3, [fp, #-38]	; 0xffffffda
   13c50:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13c54:	cmp	r3, #0
   13c58:	beq	13c78 <__assert_fail@plt+0x2d04>
   13c5c:	movw	r3, #45408	; 0xb160
   13c60:	movt	r3, #2
   13c64:	ldr	r3, [r3]
   13c68:	add	r2, r3, #1
   13c6c:	movw	r3, #45408	; 0xb160
   13c70:	movt	r3, #2
   13c74:	str	r2, [r3]
   13c78:	movw	r3, #45408	; 0xb160
   13c7c:	movt	r3, #2
   13c80:	ldr	r2, [r3]
   13c84:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13c88:	mov	r1, r2
   13c8c:	mov	r0, r3
   13c90:	bl	137fc <__assert_fail@plt+0x2888>
   13c94:	strd	r0, [fp, #-36]	; 0xffffffdc
   13c98:	b	13dd4 <__assert_fail@plt+0x2e60>
   13c9c:	mov	r3, #1
   13ca0:	strb	r3, [fp, #-37]	; 0xffffffdb
   13ca4:	movw	r3, #45408	; 0xb160
   13ca8:	movt	r3, #2
   13cac:	ldr	r3, [r3]
   13cb0:	ldrb	r3, [r3]
   13cb4:	cmp	r3, #45	; 0x2d
   13cb8:	moveq	r3, #1
   13cbc:	movne	r3, #0
   13cc0:	strb	r3, [fp, #-38]	; 0xffffffda
   13cc4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13cc8:	cmp	r3, #0
   13ccc:	beq	13cec <__assert_fail@plt+0x2d78>
   13cd0:	movw	r3, #45408	; 0xb160
   13cd4:	movt	r3, #2
   13cd8:	ldr	r3, [r3]
   13cdc:	add	r2, r3, #1
   13ce0:	movw	r3, #45408	; 0xb160
   13ce4:	movt	r3, #2
   13ce8:	str	r2, [r3]
   13cec:	movw	r3, #45408	; 0xb160
   13cf0:	movt	r3, #2
   13cf4:	ldr	r2, [r3]
   13cf8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13cfc:	mov	r1, r2
   13d00:	mov	r0, r3
   13d04:	bl	137fc <__assert_fail@plt+0x2888>
   13d08:	strd	r0, [fp, #-36]	; 0xffffffdc
   13d0c:	b	13dd4 <__assert_fail@plt+0x2e60>
   13d10:	mov	r3, #2
   13d14:	str	r3, [fp, #-16]
   13d18:	b	13dd4 <__assert_fail@plt+0x2e60>
   13d1c:	mov	r3, #1
   13d20:	str	r3, [fp, #-16]
   13d24:	b	13dd4 <__assert_fail@plt+0x2e60>
   13d28:	movw	r3, #45415	; 0xb167
   13d2c:	movt	r3, #2
   13d30:	mov	r2, #0
   13d34:	strb	r2, [r3]
   13d38:	b	13dd4 <__assert_fail@plt+0x2e60>
   13d3c:	mov	r0, #0
   13d40:	bl	11320 <__assert_fail@plt+0x3ac>
   13d44:	movw	r3, #45404	; 0xb15c
   13d48:	movt	r3, #2
   13d4c:	ldr	r0, [r3]
   13d50:	movw	r3, #45308	; 0xb0fc
   13d54:	movt	r3, #2
   13d58:	ldr	r2, [r3]
   13d5c:	mov	r3, #0
   13d60:	str	r3, [sp, #8]
   13d64:	movw	r3, #43192	; 0xa8b8
   13d68:	movt	r3, #1
   13d6c:	str	r3, [sp, #4]
   13d70:	movw	r3, #43208	; 0xa8c8
   13d74:	movt	r3, #1
   13d78:	str	r3, [sp]
   13d7c:	mov	r3, r2
   13d80:	movw	r2, #41024	; 0xa040
   13d84:	movt	r2, #1
   13d88:	movw	r1, #42764	; 0xa70c
   13d8c:	movt	r1, #1
   13d90:	bl	17608 <__assert_fail@plt+0x6694>
   13d94:	mov	r0, #0
   13d98:	bl	10e6c <exit@plt>
   13d9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13da0:	sub	r3, r3, #48	; 0x30
   13da4:	cmp	r3, #9
   13da8:	bhi	13dcc <__assert_fail@plt+0x2e58>
   13dac:	movw	r0, #43160	; 0xa898
   13db0:	movt	r0, #1
   13db4:	bl	10e78 <gettext@plt>
   13db8:	mov	r2, r0
   13dbc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13dc0:	mov	r1, #0
   13dc4:	mov	r0, #0
   13dc8:	bl	10e0c <error@plt>
   13dcc:	mov	r0, #1
   13dd0:	bl	11320 <__assert_fail@plt+0x3ac>
   13dd4:	mov	r3, #0
   13dd8:	str	r3, [sp]
   13ddc:	movw	r3, #41480	; 0xa208
   13de0:	movt	r3, #1
   13de4:	movw	r2, #43224	; 0xa8d8
   13de8:	movt	r2, #1
   13dec:	ldr	r1, [fp, #-100]	; 0xffffff9c
   13df0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13df4:	bl	10e54 <getopt_long@plt>
   13df8:	str	r0, [fp, #-60]	; 0xffffffc4
   13dfc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e00:	cmn	r3, #1
   13e04:	bne	13b94 <__assert_fail@plt+0x2c20>
   13e08:	ldr	r3, [fp, #-16]
   13e0c:	cmp	r3, #1
   13e10:	beq	13e3c <__assert_fail@plt+0x2ec8>
   13e14:	ldr	r3, [fp, #-16]
   13e18:	cmp	r3, #0
   13e1c:	bne	13e4c <__assert_fail@plt+0x2ed8>
   13e20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13e24:	sub	r2, r3, #1
   13e28:	movw	r3, #45392	; 0xb150
   13e2c:	movt	r3, #2
   13e30:	ldr	r3, [r3]
   13e34:	cmp	r2, r3
   13e38:	ble	13e4c <__assert_fail@plt+0x2ed8>
   13e3c:	movw	r3, #45414	; 0xb166
   13e40:	movt	r3, #2
   13e44:	mov	r2, #1
   13e48:	strb	r2, [r3]
   13e4c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13e50:	eor	r3, r3, #1
   13e54:	uxtb	r3, r3
   13e58:	cmp	r3, #0
   13e5c:	beq	13ec8 <__assert_fail@plt+0x2f54>
   13e60:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13e64:	cmp	r3, #0
   13e68:	beq	13ec8 <__assert_fail@plt+0x2f54>
   13e6c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13e70:	cmp	r2, #0
   13e74:	sbcs	r3, r3, #0
   13e78:	bge	13ec8 <__assert_fail@plt+0x2f54>
   13e7c:	movw	r0, #43096	; 0xa858
   13e80:	movt	r0, #1
   13e84:	bl	10e78 <gettext@plt>
   13e88:	mov	r4, r0
   13e8c:	sub	r3, fp, #88	; 0x58
   13e90:	mov	r2, r3
   13e94:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   13e98:	bl	1444c <__assert_fail@plt+0x34d8>
   13e9c:	mov	r3, r0
   13ea0:	mov	r0, r3
   13ea4:	bl	16e4c <__assert_fail@plt+0x5ed8>
   13ea8:	mov	r3, r0
   13eac:	str	r3, [sp]
   13eb0:	mov	r3, r4
   13eb4:	movw	r2, #43244	; 0xa8ec
   13eb8:	movt	r2, #1
   13ebc:	mov	r1, #75	; 0x4b
   13ec0:	mov	r0, #1
   13ec4:	bl	10e0c <error@plt>
   13ec8:	movw	r3, #45392	; 0xb150
   13ecc:	movt	r3, #2
   13ed0:	ldr	r3, [r3]
   13ed4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13ed8:	cmp	r2, r3
   13edc:	ble	13efc <__assert_fail@plt+0x2f88>
   13ee0:	movw	r3, #45392	; 0xb150
   13ee4:	movt	r3, #2
   13ee8:	ldr	r3, [r3]
   13eec:	lsl	r3, r3, #2
   13ef0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13ef4:	add	r3, r2, r3
   13ef8:	b	13f04 <__assert_fail@plt+0x2f90>
   13efc:	movw	r3, #43252	; 0xa8f4
   13f00:	movt	r3, #1
   13f04:	str	r3, [fp, #-64]	; 0xffffffc0
   13f08:	mov	r1, #0
   13f0c:	mov	r0, #1
   13f10:	bl	18058 <__assert_fail@plt+0x70e4>
   13f14:	mov	r3, #0
   13f18:	str	r3, [fp, #-24]	; 0xffffffe8
   13f1c:	b	13f7c <__assert_fail@plt+0x3008>
   13f20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f24:	lsl	r3, r3, #2
   13f28:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13f2c:	add	r3, r2, r3
   13f30:	ldr	r1, [r3]
   13f34:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13f38:	str	r3, [sp, #4]
   13f3c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13f40:	str	r3, [sp]
   13f44:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   13f48:	mov	r0, r1
   13f4c:	bl	13668 <__assert_fail@plt+0x26f4>
   13f50:	mov	r3, r0
   13f54:	mov	r2, r3
   13f58:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13f5c:	and	r3, r3, r2
   13f60:	cmp	r3, #0
   13f64:	movne	r3, #1
   13f68:	moveq	r3, #0
   13f6c:	strb	r3, [fp, #-17]	; 0xffffffef
   13f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f74:	add	r3, r3, #1
   13f78:	str	r3, [fp, #-24]	; 0xffffffe8
   13f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13f80:	lsl	r3, r3, #2
   13f84:	ldr	r2, [fp, #-64]	; 0xffffffc0
   13f88:	add	r3, r2, r3
   13f8c:	ldr	r3, [r3]
   13f90:	cmp	r3, #0
   13f94:	bne	13f20 <__assert_fail@plt+0x2fac>
   13f98:	movw	r3, #45416	; 0xb168
   13f9c:	movt	r3, #2
   13fa0:	ldrb	r3, [r3]
   13fa4:	cmp	r3, #0
   13fa8:	beq	13fe0 <__assert_fail@plt+0x306c>
   13fac:	mov	r0, #0
   13fb0:	bl	10f68 <close@plt>
   13fb4:	mov	r3, r0
   13fb8:	cmp	r3, #0
   13fbc:	bge	13fe0 <__assert_fail@plt+0x306c>
   13fc0:	bl	10eb4 <__errno_location@plt>
   13fc4:	mov	r3, r0
   13fc8:	ldr	r3, [r3]
   13fcc:	movw	r2, #43004	; 0xa7fc
   13fd0:	movt	r2, #1
   13fd4:	mov	r1, r3
   13fd8:	mov	r0, #1
   13fdc:	bl	10e0c <error@plt>
   13fe0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   13fe4:	eor	r3, r3, #1
   13fe8:	uxtb	r3, r3
   13fec:	mov	r0, r3
   13ff0:	sub	sp, fp, #8
   13ff4:	ldr	r4, [sp]
   13ff8:	ldr	fp, [sp, #4]
   13ffc:	add	sp, sp, #8
   14000:	pop	{pc}		; (ldr pc, [sp], #4)
   14004:	push	{fp}		; (str fp, [sp, #-4]!)
   14008:	add	fp, sp, #0
   1400c:	sub	sp, sp, #12
   14010:	str	r0, [fp, #-8]
   14014:	movw	r3, #45420	; 0xb16c
   14018:	movt	r3, #2
   1401c:	ldr	r2, [fp, #-8]
   14020:	str	r2, [r3]
   14024:	nop	{0}
   14028:	add	sp, fp, #0
   1402c:	pop	{fp}		; (ldr fp, [sp], #4)
   14030:	bx	lr
   14034:	push	{fp}		; (str fp, [sp, #-4]!)
   14038:	add	fp, sp, #0
   1403c:	sub	sp, sp, #12
   14040:	mov	r3, r0
   14044:	strb	r3, [fp, #-5]
   14048:	movw	r3, #45424	; 0xb170
   1404c:	movt	r3, #2
   14050:	ldrb	r2, [fp, #-5]
   14054:	strb	r2, [r3]
   14058:	nop	{0}
   1405c:	add	sp, fp, #0
   14060:	pop	{fp}		; (ldr fp, [sp], #4)
   14064:	bx	lr
   14068:	str	r4, [sp, #-12]!
   1406c:	str	fp, [sp, #4]
   14070:	str	lr, [sp, #8]
   14074:	add	fp, sp, #8
   14078:	sub	sp, sp, #20
   1407c:	movw	r3, #45404	; 0xb15c
   14080:	movt	r3, #2
   14084:	ldr	r3, [r3]
   14088:	mov	r0, r3
   1408c:	bl	18e60 <__assert_fail@plt+0x7eec>
   14090:	mov	r3, r0
   14094:	cmp	r3, #0
   14098:	beq	1416c <__assert_fail@plt+0x31f8>
   1409c:	movw	r3, #45424	; 0xb170
   140a0:	movt	r3, #2
   140a4:	ldrb	r3, [r3]
   140a8:	eor	r3, r3, #1
   140ac:	uxtb	r3, r3
   140b0:	cmp	r3, #0
   140b4:	bne	140cc <__assert_fail@plt+0x3158>
   140b8:	bl	10eb4 <__errno_location@plt>
   140bc:	mov	r3, r0
   140c0:	ldr	r3, [r3]
   140c4:	cmp	r3, #32
   140c8:	beq	1416c <__assert_fail@plt+0x31f8>
   140cc:	movw	r0, #43276	; 0xa90c
   140d0:	movt	r0, #1
   140d4:	bl	10e78 <gettext@plt>
   140d8:	str	r0, [fp, #-16]
   140dc:	movw	r3, #45420	; 0xb16c
   140e0:	movt	r3, #2
   140e4:	ldr	r3, [r3]
   140e8:	cmp	r3, #0
   140ec:	beq	14138 <__assert_fail@plt+0x31c4>
   140f0:	bl	10eb4 <__errno_location@plt>
   140f4:	mov	r3, r0
   140f8:	ldr	r4, [r3]
   140fc:	movw	r3, #45420	; 0xb16c
   14100:	movt	r3, #2
   14104:	ldr	r3, [r3]
   14108:	mov	r0, r3
   1410c:	bl	16ad8 <__assert_fail@plt+0x5b64>
   14110:	mov	r2, r0
   14114:	ldr	r3, [fp, #-16]
   14118:	str	r3, [sp]
   1411c:	mov	r3, r2
   14120:	movw	r2, #43288	; 0xa918
   14124:	movt	r2, #1
   14128:	mov	r1, r4
   1412c:	mov	r0, #0
   14130:	bl	10e0c <error@plt>
   14134:	b	14158 <__assert_fail@plt+0x31e4>
   14138:	bl	10eb4 <__errno_location@plt>
   1413c:	mov	r3, r0
   14140:	ldr	r1, [r3]
   14144:	ldr	r3, [fp, #-16]
   14148:	movw	r2, #43296	; 0xa920
   1414c:	movt	r2, #1
   14150:	mov	r0, #0
   14154:	bl	10e0c <error@plt>
   14158:	movw	r3, #45312	; 0xb100
   1415c:	movt	r3, #2
   14160:	ldr	r3, [r3]
   14164:	mov	r0, r3
   14168:	bl	10d40 <_exit@plt>
   1416c:	movw	r3, #45400	; 0xb158
   14170:	movt	r3, #2
   14174:	ldr	r3, [r3]
   14178:	mov	r0, r3
   1417c:	bl	18e60 <__assert_fail@plt+0x7eec>
   14180:	mov	r3, r0
   14184:	cmp	r3, #0
   14188:	beq	141a0 <__assert_fail@plt+0x322c>
   1418c:	movw	r3, #45312	; 0xb100
   14190:	movt	r3, #2
   14194:	ldr	r3, [r3]
   14198:	mov	r0, r3
   1419c:	bl	10d40 <_exit@plt>
   141a0:	nop	{0}
   141a4:	sub	sp, fp, #8
   141a8:	ldr	r4, [sp]
   141ac:	ldr	fp, [sp, #4]
   141b0:	add	sp, sp, #8
   141b4:	pop	{pc}		; (ldr pc, [sp], #4)
   141b8:	str	r4, [sp, #-12]!
   141bc:	str	fp, [sp, #4]
   141c0:	str	lr, [sp, #8]
   141c4:	add	fp, sp, #8
   141c8:	sub	sp, sp, #20
   141cc:	str	r0, [fp, #-24]	; 0xffffffe8
   141d0:	bl	10eb4 <__errno_location@plt>
   141d4:	mov	r3, r0
   141d8:	ldr	r3, [r3]
   141dc:	str	r3, [fp, #-20]	; 0xffffffec
   141e0:	bl	10eb4 <__errno_location@plt>
   141e4:	mov	r3, r0
   141e8:	ldr	r3, [r3]
   141ec:	str	r3, [fp, #-16]
   141f0:	bl	10eb4 <__errno_location@plt>
   141f4:	mov	r2, r0
   141f8:	mov	r3, #0
   141fc:	str	r3, [r2]
   14200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14204:	bl	10d34 <free@plt>
   14208:	bl	10eb4 <__errno_location@plt>
   1420c:	mov	r3, r0
   14210:	ldr	r3, [r3]
   14214:	cmp	r3, #0
   14218:	moveq	r3, #1
   1421c:	movne	r3, #0
   14220:	uxtb	r3, r3
   14224:	mov	r4, r3
   14228:	bl	10eb4 <__errno_location@plt>
   1422c:	mov	r2, r0
   14230:	lsl	r3, r4, #2
   14234:	sub	r1, fp, #12
   14238:	add	r3, r1, r3
   1423c:	ldr	r3, [r3, #-8]
   14240:	str	r3, [r2]
   14244:	nop	{0}
   14248:	sub	sp, fp, #8
   1424c:	ldr	r4, [sp]
   14250:	ldr	fp, [sp, #4]
   14254:	add	sp, sp, #8
   14258:	pop	{pc}		; (ldr pc, [sp], #4)
   1425c:	str	fp, [sp, #-8]!
   14260:	str	lr, [sp, #4]
   14264:	add	fp, sp, #4
   14268:	sub	sp, sp, #32
   1426c:	str	r0, [fp, #-24]	; 0xffffffe8
   14270:	str	r1, [fp, #-28]	; 0xffffffe4
   14274:	str	r2, [fp, #-32]	; 0xffffffe0
   14278:	mov	r3, #0
   1427c:	str	r3, [fp, #-8]
   14280:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14284:	str	r3, [fp, #-12]
   14288:	b	142fc <__assert_fail@plt+0x3388>
   1428c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14290:	ldr	r1, [fp, #-12]
   14294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14298:	bl	16e84 <__assert_fail@plt+0x5f10>
   1429c:	str	r0, [fp, #-16]
   142a0:	ldr	r3, [fp, #-16]
   142a4:	cmn	r3, #1
   142a8:	beq	1430c <__assert_fail@plt+0x3398>
   142ac:	ldr	r3, [fp, #-16]
   142b0:	cmp	r3, #0
   142b4:	bne	142cc <__assert_fail@plt+0x3358>
   142b8:	bl	10eb4 <__errno_location@plt>
   142bc:	mov	r2, r0
   142c0:	mov	r3, #0
   142c4:	str	r3, [r2]
   142c8:	b	14310 <__assert_fail@plt+0x339c>
   142cc:	ldr	r2, [fp, #-8]
   142d0:	ldr	r3, [fp, #-16]
   142d4:	add	r3, r2, r3
   142d8:	str	r3, [fp, #-8]
   142dc:	ldr	r2, [fp, #-12]
   142e0:	ldr	r3, [fp, #-16]
   142e4:	add	r3, r2, r3
   142e8:	str	r3, [fp, #-12]
   142ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   142f0:	ldr	r3, [fp, #-16]
   142f4:	sub	r3, r2, r3
   142f8:	str	r3, [fp, #-32]	; 0xffffffe0
   142fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14300:	cmp	r3, #0
   14304:	bne	1428c <__assert_fail@plt+0x3318>
   14308:	b	14310 <__assert_fail@plt+0x339c>
   1430c:	nop	{0}
   14310:	ldr	r3, [fp, #-8]
   14314:	mov	r0, r3
   14318:	sub	sp, fp, #4
   1431c:	ldr	fp, [sp]
   14320:	add	sp, sp, #4
   14324:	pop	{pc}		; (ldr pc, [sp], #4)
   14328:	str	fp, [sp, #-8]!
   1432c:	str	lr, [sp, #4]
   14330:	add	fp, sp, #4
   14334:	sub	sp, sp, #24
   14338:	strd	r0, [fp, #-20]	; 0xffffffec
   1433c:	str	r2, [fp, #-24]	; 0xffffffe8
   14340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14344:	add	r3, r3, #20
   14348:	str	r3, [fp, #-8]
   1434c:	ldr	r3, [fp, #-8]
   14350:	mov	r2, #0
   14354:	strb	r2, [r3]
   14358:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1435c:	cmp	r2, #0
   14360:	sbcs	r3, r3, #0
   14364:	bge	143dc <__assert_fail@plt+0x3468>
   14368:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1436c:	mov	r2, #10
   14370:	mov	r3, #0
   14374:	bl	19c9c <__assert_fail@plt+0x8d28>
   14378:	uxtb	r3, r2
   1437c:	ldr	r2, [fp, #-8]
   14380:	sub	r2, r2, #1
   14384:	str	r2, [fp, #-8]
   14388:	rsb	r3, r3, #48	; 0x30
   1438c:	uxtb	r2, r3
   14390:	ldr	r3, [fp, #-8]
   14394:	strb	r2, [r3]
   14398:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1439c:	mov	r2, #10
   143a0:	mov	r3, #0
   143a4:	bl	19c9c <__assert_fail@plt+0x8d28>
   143a8:	mov	r2, r0
   143ac:	mov	r3, r1
   143b0:	strd	r2, [fp, #-20]	; 0xffffffec
   143b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   143b8:	orrs	r3, r2, r3
   143bc:	bne	14368 <__assert_fail@plt+0x33f4>
   143c0:	ldr	r3, [fp, #-8]
   143c4:	sub	r3, r3, #1
   143c8:	str	r3, [fp, #-8]
   143cc:	ldr	r3, [fp, #-8]
   143d0:	mov	r2, #45	; 0x2d
   143d4:	strb	r2, [r3]
   143d8:	b	14434 <__assert_fail@plt+0x34c0>
   143dc:	ldrd	r0, [fp, #-20]	; 0xffffffec
   143e0:	mov	r2, #10
   143e4:	mov	r3, #0
   143e8:	bl	19c9c <__assert_fail@plt+0x8d28>
   143ec:	uxtb	r3, r2
   143f0:	ldr	r2, [fp, #-8]
   143f4:	sub	r2, r2, #1
   143f8:	str	r2, [fp, #-8]
   143fc:	add	r3, r3, #48	; 0x30
   14400:	uxtb	r2, r3
   14404:	ldr	r3, [fp, #-8]
   14408:	strb	r2, [r3]
   1440c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14410:	mov	r2, #10
   14414:	mov	r3, #0
   14418:	bl	19c9c <__assert_fail@plt+0x8d28>
   1441c:	mov	r2, r0
   14420:	mov	r3, r1
   14424:	strd	r2, [fp, #-20]	; 0xffffffec
   14428:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1442c:	orrs	r3, r2, r3
   14430:	bne	143dc <__assert_fail@plt+0x3468>
   14434:	ldr	r3, [fp, #-8]
   14438:	mov	r0, r3
   1443c:	sub	sp, fp, #4
   14440:	ldr	fp, [sp]
   14444:	add	sp, sp, #4
   14448:	pop	{pc}		; (ldr pc, [sp], #4)
   1444c:	str	fp, [sp, #-8]!
   14450:	str	lr, [sp, #4]
   14454:	add	fp, sp, #4
   14458:	sub	sp, sp, #24
   1445c:	strd	r0, [fp, #-20]	; 0xffffffec
   14460:	str	r2, [fp, #-24]	; 0xffffffe8
   14464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14468:	add	r3, r3, #20
   1446c:	str	r3, [fp, #-8]
   14470:	ldr	r3, [fp, #-8]
   14474:	mov	r2, #0
   14478:	strb	r2, [r3]
   1447c:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14480:	mov	r2, #10
   14484:	mov	r3, #0
   14488:	bl	19d70 <__assert_fail@plt+0x8dfc>
   1448c:	uxtb	r3, r2
   14490:	ldr	r2, [fp, #-8]
   14494:	sub	r2, r2, #1
   14498:	str	r2, [fp, #-8]
   1449c:	add	r3, r3, #48	; 0x30
   144a0:	uxtb	r2, r3
   144a4:	ldr	r3, [fp, #-8]
   144a8:	strb	r2, [r3]
   144ac:	ldrd	r0, [fp, #-20]	; 0xffffffec
   144b0:	mov	r2, #10
   144b4:	mov	r3, #0
   144b8:	bl	19d70 <__assert_fail@plt+0x8dfc>
   144bc:	mov	r2, r0
   144c0:	mov	r3, r1
   144c4:	strd	r2, [fp, #-20]	; 0xffffffec
   144c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   144cc:	orrs	r3, r2, r3
   144d0:	bne	1447c <__assert_fail@plt+0x3508>
   144d4:	ldr	r3, [fp, #-8]
   144d8:	mov	r0, r3
   144dc:	sub	sp, fp, #4
   144e0:	ldr	fp, [sp]
   144e4:	add	sp, sp, #4
   144e8:	pop	{pc}		; (ldr pc, [sp], #4)
   144ec:	str	fp, [sp, #-8]!
   144f0:	str	lr, [sp, #4]
   144f4:	add	fp, sp, #4
   144f8:	sub	sp, sp, #16
   144fc:	str	r0, [fp, #-16]
   14500:	ldr	r3, [fp, #-16]
   14504:	cmp	r3, #0
   14508:	bne	14530 <__assert_fail@plt+0x35bc>
   1450c:	movw	r3, #45400	; 0xb158
   14510:	movt	r3, #2
   14514:	ldr	r3, [r3]
   14518:	mov	r2, #55	; 0x37
   1451c:	mov	r1, #1
   14520:	movw	r0, #43300	; 0xa924
   14524:	movt	r0, #1
   14528:	bl	10dc4 <fwrite@plt>
   1452c:	bl	10f5c <abort@plt>
   14530:	mov	r1, #47	; 0x2f
   14534:	ldr	r0, [fp, #-16]
   14538:	bl	10f20 <strrchr@plt>
   1453c:	str	r0, [fp, #-8]
   14540:	ldr	r3, [fp, #-8]
   14544:	cmp	r3, #0
   14548:	beq	14558 <__assert_fail@plt+0x35e4>
   1454c:	ldr	r3, [fp, #-8]
   14550:	add	r3, r3, #1
   14554:	b	1455c <__assert_fail@plt+0x35e8>
   14558:	ldr	r3, [fp, #-16]
   1455c:	str	r3, [fp, #-12]
   14560:	ldr	r2, [fp, #-12]
   14564:	ldr	r3, [fp, #-16]
   14568:	sub	r3, r2, r3
   1456c:	cmp	r3, #6
   14570:	ble	145e0 <__assert_fail@plt+0x366c>
   14574:	ldr	r3, [fp, #-12]
   14578:	sub	r3, r3, #7
   1457c:	mov	r2, #7
   14580:	movw	r1, #43356	; 0xa95c
   14584:	movt	r1, #1
   14588:	mov	r0, r3
   1458c:	bl	10f50 <strncmp@plt>
   14590:	mov	r3, r0
   14594:	cmp	r3, #0
   14598:	bne	145e0 <__assert_fail@plt+0x366c>
   1459c:	ldr	r3, [fp, #-12]
   145a0:	str	r3, [fp, #-16]
   145a4:	mov	r2, #3
   145a8:	movw	r1, #43364	; 0xa964
   145ac:	movt	r1, #1
   145b0:	ldr	r0, [fp, #-12]
   145b4:	bl	10f50 <strncmp@plt>
   145b8:	mov	r3, r0
   145bc:	cmp	r3, #0
   145c0:	bne	145e0 <__assert_fail@plt+0x366c>
   145c4:	ldr	r3, [fp, #-12]
   145c8:	add	r3, r3, #3
   145cc:	str	r3, [fp, #-16]
   145d0:	movw	r3, #45384	; 0xb148
   145d4:	movt	r3, #2
   145d8:	ldr	r2, [fp, #-16]
   145dc:	str	r2, [r3]
   145e0:	movw	r3, #45428	; 0xb174
   145e4:	movt	r3, #2
   145e8:	ldr	r2, [fp, #-16]
   145ec:	str	r2, [r3]
   145f0:	movw	r3, #45388	; 0xb14c
   145f4:	movt	r3, #2
   145f8:	ldr	r2, [fp, #-16]
   145fc:	str	r2, [r3]
   14600:	nop	{0}
   14604:	sub	sp, fp, #4
   14608:	ldr	fp, [sp]
   1460c:	add	sp, sp, #4
   14610:	pop	{pc}		; (ldr pc, [sp], #4)
   14614:	str	fp, [sp, #-8]!
   14618:	str	lr, [sp, #4]
   1461c:	add	fp, sp, #4
   14620:	sub	sp, sp, #16
   14624:	str	r0, [fp, #-16]
   14628:	bl	10eb4 <__errno_location@plt>
   1462c:	mov	r3, r0
   14630:	ldr	r3, [r3]
   14634:	str	r3, [fp, #-8]
   14638:	ldr	r3, [fp, #-16]
   1463c:	cmp	r3, #0
   14640:	beq	1464c <__assert_fail@plt+0x36d8>
   14644:	ldr	r3, [fp, #-16]
   14648:	b	14654 <__assert_fail@plt+0x36e0>
   1464c:	movw	r3, #45432	; 0xb178
   14650:	movt	r3, #2
   14654:	mov	r1, #48	; 0x30
   14658:	mov	r0, r3
   1465c:	bl	17ea8 <__assert_fail@plt+0x6f34>
   14660:	mov	r3, r0
   14664:	str	r3, [fp, #-12]
   14668:	bl	10eb4 <__errno_location@plt>
   1466c:	mov	r2, r0
   14670:	ldr	r3, [fp, #-8]
   14674:	str	r3, [r2]
   14678:	ldr	r3, [fp, #-12]
   1467c:	mov	r0, r3
   14680:	sub	sp, fp, #4
   14684:	ldr	fp, [sp]
   14688:	add	sp, sp, #4
   1468c:	pop	{pc}		; (ldr pc, [sp], #4)
   14690:	push	{fp}		; (str fp, [sp, #-4]!)
   14694:	add	fp, sp, #0
   14698:	sub	sp, sp, #12
   1469c:	str	r0, [fp, #-8]
   146a0:	ldr	r3, [fp, #-8]
   146a4:	cmp	r3, #0
   146a8:	beq	146b4 <__assert_fail@plt+0x3740>
   146ac:	ldr	r3, [fp, #-8]
   146b0:	b	146bc <__assert_fail@plt+0x3748>
   146b4:	movw	r3, #45432	; 0xb178
   146b8:	movt	r3, #2
   146bc:	ldr	r3, [r3]
   146c0:	mov	r0, r3
   146c4:	add	sp, fp, #0
   146c8:	pop	{fp}		; (ldr fp, [sp], #4)
   146cc:	bx	lr
   146d0:	push	{fp}		; (str fp, [sp, #-4]!)
   146d4:	add	fp, sp, #0
   146d8:	sub	sp, sp, #12
   146dc:	str	r0, [fp, #-8]
   146e0:	str	r1, [fp, #-12]
   146e4:	ldr	r3, [fp, #-8]
   146e8:	cmp	r3, #0
   146ec:	beq	146f8 <__assert_fail@plt+0x3784>
   146f0:	ldr	r3, [fp, #-8]
   146f4:	b	14700 <__assert_fail@plt+0x378c>
   146f8:	movw	r3, #45432	; 0xb178
   146fc:	movt	r3, #2
   14700:	ldr	r2, [fp, #-12]
   14704:	str	r2, [r3]
   14708:	nop	{0}
   1470c:	add	sp, fp, #0
   14710:	pop	{fp}		; (ldr fp, [sp], #4)
   14714:	bx	lr
   14718:	push	{fp}		; (str fp, [sp, #-4]!)
   1471c:	add	fp, sp, #0
   14720:	sub	sp, sp, #36	; 0x24
   14724:	str	r0, [fp, #-24]	; 0xffffffe8
   14728:	mov	r3, r1
   1472c:	str	r2, [fp, #-32]	; 0xffffffe0
   14730:	strb	r3, [fp, #-25]	; 0xffffffe7
   14734:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   14738:	strb	r3, [fp, #-5]
   1473c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14740:	cmp	r3, #0
   14744:	beq	14750 <__assert_fail@plt+0x37dc>
   14748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1474c:	b	14758 <__assert_fail@plt+0x37e4>
   14750:	movw	r3, #45432	; 0xb178
   14754:	movt	r3, #2
   14758:	add	r2, r3, #8
   1475c:	ldrb	r3, [fp, #-5]
   14760:	lsr	r3, r3, #5
   14764:	uxtb	r3, r3
   14768:	lsl	r3, r3, #2
   1476c:	add	r3, r2, r3
   14770:	str	r3, [fp, #-12]
   14774:	ldrb	r3, [fp, #-5]
   14778:	and	r3, r3, #31
   1477c:	str	r3, [fp, #-16]
   14780:	ldr	r3, [fp, #-12]
   14784:	ldr	r2, [r3]
   14788:	ldr	r3, [fp, #-16]
   1478c:	lsr	r3, r2, r3
   14790:	and	r3, r3, #1
   14794:	str	r3, [fp, #-20]	; 0xffffffec
   14798:	ldr	r3, [fp, #-12]
   1479c:	ldr	r3, [r3]
   147a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147a4:	and	r1, r2, #1
   147a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   147ac:	eor	r1, r1, r2
   147b0:	ldr	r2, [fp, #-16]
   147b4:	lsl	r2, r1, r2
   147b8:	eor	r2, r2, r3
   147bc:	ldr	r3, [fp, #-12]
   147c0:	str	r2, [r3]
   147c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   147c8:	mov	r0, r3
   147cc:	add	sp, fp, #0
   147d0:	pop	{fp}		; (ldr fp, [sp], #4)
   147d4:	bx	lr
   147d8:	push	{fp}		; (str fp, [sp, #-4]!)
   147dc:	add	fp, sp, #0
   147e0:	sub	sp, sp, #20
   147e4:	str	r0, [fp, #-16]
   147e8:	str	r1, [fp, #-20]	; 0xffffffec
   147ec:	ldr	r3, [fp, #-16]
   147f0:	cmp	r3, #0
   147f4:	bne	14804 <__assert_fail@plt+0x3890>
   147f8:	movw	r3, #45432	; 0xb178
   147fc:	movt	r3, #2
   14800:	str	r3, [fp, #-16]
   14804:	ldr	r3, [fp, #-16]
   14808:	ldr	r3, [r3, #4]
   1480c:	str	r3, [fp, #-8]
   14810:	ldr	r3, [fp, #-16]
   14814:	ldr	r2, [fp, #-20]	; 0xffffffec
   14818:	str	r2, [r3, #4]
   1481c:	ldr	r3, [fp, #-8]
   14820:	mov	r0, r3
   14824:	add	sp, fp, #0
   14828:	pop	{fp}		; (ldr fp, [sp], #4)
   1482c:	bx	lr
   14830:	str	fp, [sp, #-8]!
   14834:	str	lr, [sp, #4]
   14838:	add	fp, sp, #4
   1483c:	sub	sp, sp, #16
   14840:	str	r0, [fp, #-8]
   14844:	str	r1, [fp, #-12]
   14848:	str	r2, [fp, #-16]
   1484c:	ldr	r3, [fp, #-8]
   14850:	cmp	r3, #0
   14854:	bne	14864 <__assert_fail@plt+0x38f0>
   14858:	movw	r3, #45432	; 0xb178
   1485c:	movt	r3, #2
   14860:	str	r3, [fp, #-8]
   14864:	ldr	r3, [fp, #-8]
   14868:	mov	r2, #10
   1486c:	str	r2, [r3]
   14870:	ldr	r3, [fp, #-12]
   14874:	cmp	r3, #0
   14878:	beq	14888 <__assert_fail@plt+0x3914>
   1487c:	ldr	r3, [fp, #-16]
   14880:	cmp	r3, #0
   14884:	bne	1488c <__assert_fail@plt+0x3918>
   14888:	bl	10f5c <abort@plt>
   1488c:	ldr	r3, [fp, #-8]
   14890:	ldr	r2, [fp, #-12]
   14894:	str	r2, [r3, #40]	; 0x28
   14898:	ldr	r3, [fp, #-8]
   1489c:	ldr	r2, [fp, #-16]
   148a0:	str	r2, [r3, #44]	; 0x2c
   148a4:	nop	{0}
   148a8:	sub	sp, fp, #4
   148ac:	ldr	fp, [sp]
   148b0:	add	sp, sp, #4
   148b4:	pop	{pc}		; (ldr pc, [sp], #4)
   148b8:	str	fp, [sp, #-8]!
   148bc:	str	lr, [sp, #4]
   148c0:	add	fp, sp, #4
   148c4:	sub	sp, sp, #56	; 0x38
   148c8:	str	r0, [fp, #-56]	; 0xffffffc8
   148cc:	str	r1, [fp, #-60]	; 0xffffffc4
   148d0:	sub	r1, fp, #52	; 0x34
   148d4:	mov	r2, #0
   148d8:	mov	r3, #0
   148dc:	strd	r2, [r1]
   148e0:	strd	r2, [r1, #8]
   148e4:	strd	r2, [r1, #16]
   148e8:	strd	r2, [r1, #24]
   148ec:	strd	r2, [r1, #32]
   148f0:	strd	r2, [r1, #40]	; 0x28
   148f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   148f8:	cmp	r3, #10
   148fc:	bne	14904 <__assert_fail@plt+0x3990>
   14900:	bl	10f5c <abort@plt>
   14904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14908:	str	r3, [fp, #-52]	; 0xffffffcc
   1490c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14910:	mov	r2, r3
   14914:	sub	r3, fp, #52	; 0x34
   14918:	ldrd	r0, [r3]
   1491c:	strd	r0, [r2]
   14920:	ldrd	r0, [r3, #8]
   14924:	strd	r0, [r2, #8]
   14928:	ldrd	r0, [r3, #16]
   1492c:	strd	r0, [r2, #16]
   14930:	ldrd	r0, [r3, #24]
   14934:	strd	r0, [r2, #24]
   14938:	ldrd	r0, [r3, #32]
   1493c:	strd	r0, [r2, #32]
   14940:	ldrd	r0, [r3, #40]	; 0x28
   14944:	strd	r0, [r2, #40]	; 0x28
   14948:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1494c:	sub	sp, fp, #4
   14950:	ldr	fp, [sp]
   14954:	add	sp, sp, #4
   14958:	pop	{pc}		; (ldr pc, [sp], #4)
   1495c:	str	fp, [sp, #-8]!
   14960:	str	lr, [sp, #4]
   14964:	add	fp, sp, #4
   14968:	sub	sp, sp, #16
   1496c:	str	r0, [fp, #-16]
   14970:	str	r1, [fp, #-20]	; 0xffffffec
   14974:	ldr	r0, [fp, #-16]
   14978:	bl	10e78 <gettext@plt>
   1497c:	str	r0, [fp, #-8]
   14980:	ldr	r2, [fp, #-8]
   14984:	ldr	r3, [fp, #-16]
   14988:	cmp	r2, r3
   1498c:	beq	14998 <__assert_fail@plt+0x3a24>
   14990:	ldr	r3, [fp, #-8]
   14994:	b	14a48 <__assert_fail@plt+0x3ad4>
   14998:	bl	19374 <__assert_fail@plt+0x8400>
   1499c:	str	r0, [fp, #-12]
   149a0:	movw	r1, #43556	; 0xaa24
   149a4:	movt	r1, #1
   149a8:	ldr	r0, [fp, #-12]
   149ac:	bl	18db4 <__assert_fail@plt+0x7e40>
   149b0:	mov	r3, r0
   149b4:	cmp	r3, #0
   149b8:	bne	149e4 <__assert_fail@plt+0x3a70>
   149bc:	ldr	r3, [fp, #-16]
   149c0:	ldrb	r3, [r3]
   149c4:	cmp	r3, #96	; 0x60
   149c8:	bne	149d8 <__assert_fail@plt+0x3a64>
   149cc:	movw	r3, #43564	; 0xaa2c
   149d0:	movt	r3, #1
   149d4:	b	14a48 <__assert_fail@plt+0x3ad4>
   149d8:	movw	r3, #43568	; 0xaa30
   149dc:	movt	r3, #1
   149e0:	b	14a48 <__assert_fail@plt+0x3ad4>
   149e4:	movw	r1, #43572	; 0xaa34
   149e8:	movt	r1, #1
   149ec:	ldr	r0, [fp, #-12]
   149f0:	bl	18db4 <__assert_fail@plt+0x7e40>
   149f4:	mov	r3, r0
   149f8:	cmp	r3, #0
   149fc:	bne	14a28 <__assert_fail@plt+0x3ab4>
   14a00:	ldr	r3, [fp, #-16]
   14a04:	ldrb	r3, [r3]
   14a08:	cmp	r3, #96	; 0x60
   14a0c:	bne	14a1c <__assert_fail@plt+0x3aa8>
   14a10:	movw	r3, #43580	; 0xaa3c
   14a14:	movt	r3, #1
   14a18:	b	14a48 <__assert_fail@plt+0x3ad4>
   14a1c:	movw	r3, #43584	; 0xaa40
   14a20:	movt	r3, #1
   14a24:	b	14a48 <__assert_fail@plt+0x3ad4>
   14a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a2c:	cmp	r3, #9
   14a30:	bne	14a40 <__assert_fail@plt+0x3acc>
   14a34:	movw	r3, #43588	; 0xaa44
   14a38:	movt	r3, #1
   14a3c:	b	14a48 <__assert_fail@plt+0x3ad4>
   14a40:	movw	r3, #43592	; 0xaa48
   14a44:	movt	r3, #1
   14a48:	mov	r0, r3
   14a4c:	sub	sp, fp, #4
   14a50:	ldr	fp, [sp]
   14a54:	add	sp, sp, #4
   14a58:	pop	{pc}		; (ldr pc, [sp], #4)
   14a5c:	str	r4, [sp, #-12]!
   14a60:	str	fp, [sp, #4]
   14a64:	str	lr, [sp, #8]
   14a68:	add	fp, sp, #8
   14a6c:	sub	sp, sp, #116	; 0x74
   14a70:	str	r0, [fp, #-88]	; 0xffffffa8
   14a74:	str	r1, [fp, #-92]	; 0xffffffa4
   14a78:	str	r2, [fp, #-96]	; 0xffffffa0
   14a7c:	str	r3, [fp, #-100]	; 0xffffff9c
   14a80:	mov	r3, #0
   14a84:	str	r3, [fp, #-20]	; 0xffffffec
   14a88:	mov	r3, #0
   14a8c:	str	r3, [fp, #-24]	; 0xffffffe8
   14a90:	mov	r3, #0
   14a94:	str	r3, [fp, #-28]	; 0xffffffe4
   14a98:	mov	r3, #0
   14a9c:	str	r3, [fp, #-32]	; 0xffffffe0
   14aa0:	mov	r3, #0
   14aa4:	strb	r3, [fp, #-33]	; 0xffffffdf
   14aa8:	bl	10ddc <__ctype_get_mb_cur_max@plt>
   14aac:	mov	r3, r0
   14ab0:	cmp	r3, #1
   14ab4:	moveq	r3, #1
   14ab8:	movne	r3, #0
   14abc:	strb	r3, [fp, #-57]	; 0xffffffc7
   14ac0:	ldr	r3, [fp, #8]
   14ac4:	and	r3, r3, #2
   14ac8:	cmp	r3, #0
   14acc:	movne	r3, #1
   14ad0:	moveq	r3, #0
   14ad4:	strb	r3, [fp, #-34]	; 0xffffffde
   14ad8:	mov	r3, #0
   14adc:	strb	r3, [fp, #-35]	; 0xffffffdd
   14ae0:	mov	r3, #0
   14ae4:	strb	r3, [fp, #-36]	; 0xffffffdc
   14ae8:	mov	r3, #1
   14aec:	strb	r3, [fp, #-37]	; 0xffffffdb
   14af0:	ldr	r3, [fp, #4]
   14af4:	cmp	r3, #10
   14af8:	ldrls	pc, [pc, r3, lsl #2]
   14afc:	b	14d14 <__assert_fail@plt+0x3da0>
   14b00:	andeq	r4, r1, r8, lsl #26
   14b04:	andeq	r4, r1, r0, lsl #25
   14b08:	andeq	r4, r1, r4, lsr #25
   14b0c:	andeq	r4, r1, r8, ror ip
   14b10:	andeq	r4, r1, r8, lsl #25
   14b14:	andeq	r4, r1, ip, lsr fp
   14b18:	andeq	r4, r1, ip, lsr #22
   14b1c:	andeq	r4, r1, r0, lsr #23
   14b20:			; <UNDEFINED> instruction: 0x00014bb4
   14b24:			; <UNDEFINED> instruction: 0x00014bb4
   14b28:			; <UNDEFINED> instruction: 0x00014bb4
   14b2c:	mov	r3, #5
   14b30:	str	r3, [fp, #4]
   14b34:	mov	r3, #1
   14b38:	strb	r3, [fp, #-34]	; 0xffffffde
   14b3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14b40:	eor	r3, r3, #1
   14b44:	uxtb	r3, r3
   14b48:	cmp	r3, #0
   14b4c:	beq	14b80 <__assert_fail@plt+0x3c0c>
   14b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b58:	cmp	r2, r3
   14b5c:	bcs	14b74 <__assert_fail@plt+0x3c00>
   14b60:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b64:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b68:	add	r3, r2, r3
   14b6c:	mov	r2, #34	; 0x22
   14b70:	strb	r2, [r3]
   14b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b78:	add	r3, r3, #1
   14b7c:	str	r3, [fp, #-20]	; 0xffffffec
   14b80:	mov	r3, #1
   14b84:	strb	r3, [fp, #-33]	; 0xffffffdf
   14b88:	movw	r3, #43588	; 0xaa44
   14b8c:	movt	r3, #1
   14b90:	str	r3, [fp, #-28]	; 0xffffffe4
   14b94:	mov	r3, #1
   14b98:	str	r3, [fp, #-32]	; 0xffffffe0
   14b9c:	b	14d18 <__assert_fail@plt+0x3da4>
   14ba0:	mov	r3, #1
   14ba4:	strb	r3, [fp, #-33]	; 0xffffffdf
   14ba8:	mov	r3, #0
   14bac:	strb	r3, [fp, #-34]	; 0xffffffde
   14bb0:	b	14d18 <__assert_fail@plt+0x3da4>
   14bb4:	ldr	r3, [fp, #4]
   14bb8:	cmp	r3, #10
   14bbc:	beq	14be8 <__assert_fail@plt+0x3c74>
   14bc0:	ldr	r1, [fp, #4]
   14bc4:	movw	r0, #43596	; 0xaa4c
   14bc8:	movt	r0, #1
   14bcc:	bl	1495c <__assert_fail@plt+0x39e8>
   14bd0:	str	r0, [fp, #16]
   14bd4:	ldr	r1, [fp, #4]
   14bd8:	movw	r0, #43592	; 0xaa48
   14bdc:	movt	r0, #1
   14be0:	bl	1495c <__assert_fail@plt+0x39e8>
   14be4:	str	r0, [fp, #20]
   14be8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14bec:	eor	r3, r3, #1
   14bf0:	uxtb	r3, r3
   14bf4:	cmp	r3, #0
   14bf8:	beq	14c58 <__assert_fail@plt+0x3ce4>
   14bfc:	ldr	r3, [fp, #16]
   14c00:	str	r3, [fp, #-28]	; 0xffffffe4
   14c04:	b	14c48 <__assert_fail@plt+0x3cd4>
   14c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c0c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14c10:	cmp	r2, r3
   14c14:	bcs	14c30 <__assert_fail@plt+0x3cbc>
   14c18:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c20:	add	r3, r2, r3
   14c24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14c28:	ldrb	r2, [r2]
   14c2c:	strb	r2, [r3]
   14c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c34:	add	r3, r3, #1
   14c38:	str	r3, [fp, #-20]	; 0xffffffec
   14c3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c40:	add	r3, r3, #1
   14c44:	str	r3, [fp, #-28]	; 0xffffffe4
   14c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c4c:	ldrb	r3, [r3]
   14c50:	cmp	r3, #0
   14c54:	bne	14c08 <__assert_fail@plt+0x3c94>
   14c58:	mov	r3, #1
   14c5c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14c60:	ldr	r3, [fp, #20]
   14c64:	str	r3, [fp, #-28]	; 0xffffffe4
   14c68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c6c:	bl	10e84 <strlen@plt>
   14c70:	str	r0, [fp, #-32]	; 0xffffffe0
   14c74:	b	14d18 <__assert_fail@plt+0x3da4>
   14c78:	mov	r3, #1
   14c7c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14c80:	mov	r3, #1
   14c84:	strb	r3, [fp, #-34]	; 0xffffffde
   14c88:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14c8c:	eor	r3, r3, #1
   14c90:	uxtb	r3, r3
   14c94:	cmp	r3, #0
   14c98:	beq	14ca4 <__assert_fail@plt+0x3d30>
   14c9c:	mov	r3, #1
   14ca0:	strb	r3, [fp, #-33]	; 0xffffffdf
   14ca4:	mov	r3, #2
   14ca8:	str	r3, [fp, #4]
   14cac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14cb0:	eor	r3, r3, #1
   14cb4:	uxtb	r3, r3
   14cb8:	cmp	r3, #0
   14cbc:	beq	14cf0 <__assert_fail@plt+0x3d7c>
   14cc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   14cc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14cc8:	cmp	r2, r3
   14ccc:	bcs	14ce4 <__assert_fail@plt+0x3d70>
   14cd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14cd8:	add	r3, r2, r3
   14cdc:	mov	r2, #39	; 0x27
   14ce0:	strb	r2, [r3]
   14ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ce8:	add	r3, r3, #1
   14cec:	str	r3, [fp, #-20]	; 0xffffffec
   14cf0:	movw	r3, #43592	; 0xaa48
   14cf4:	movt	r3, #1
   14cf8:	str	r3, [fp, #-28]	; 0xffffffe4
   14cfc:	mov	r3, #1
   14d00:	str	r3, [fp, #-32]	; 0xffffffe0
   14d04:	b	14d18 <__assert_fail@plt+0x3da4>
   14d08:	mov	r3, #0
   14d0c:	strb	r3, [fp, #-34]	; 0xffffffde
   14d10:	b	14d18 <__assert_fail@plt+0x3da4>
   14d14:	bl	10f5c <abort@plt>
   14d18:	mov	r3, #0
   14d1c:	str	r3, [fp, #-16]
   14d20:	b	15ebc <__assert_fail@plt+0x4f48>
   14d24:	mov	r3, #0
   14d28:	strb	r3, [fp, #-40]	; 0xffffffd8
   14d2c:	mov	r3, #0
   14d30:	strb	r3, [fp, #-41]	; 0xffffffd7
   14d34:	mov	r3, #0
   14d38:	strb	r3, [fp, #-42]	; 0xffffffd6
   14d3c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14d40:	cmp	r3, #0
   14d44:	beq	14de0 <__assert_fail@plt+0x3e6c>
   14d48:	ldr	r3, [fp, #4]
   14d4c:	cmp	r3, #2
   14d50:	beq	14de0 <__assert_fail@plt+0x3e6c>
   14d54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d58:	cmp	r3, #0
   14d5c:	beq	14de0 <__assert_fail@plt+0x3e6c>
   14d60:	ldr	r2, [fp, #-16]
   14d64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d68:	add	r4, r2, r3
   14d6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d70:	cmn	r3, #1
   14d74:	bne	14d98 <__assert_fail@plt+0x3e24>
   14d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d7c:	cmp	r3, #1
   14d80:	bls	14d98 <__assert_fail@plt+0x3e24>
   14d84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14d88:	bl	10e84 <strlen@plt>
   14d8c:	str	r0, [fp, #-100]	; 0xffffff9c
   14d90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d94:	b	14d9c <__assert_fail@plt+0x3e28>
   14d98:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14d9c:	cmp	r3, r4
   14da0:	bcc	14de0 <__assert_fail@plt+0x3e6c>
   14da4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14da8:	ldr	r3, [fp, #-16]
   14dac:	add	r3, r2, r3
   14db0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14db8:	mov	r0, r3
   14dbc:	bl	10d70 <memcmp@plt>
   14dc0:	mov	r3, r0
   14dc4:	cmp	r3, #0
   14dc8:	bne	14de0 <__assert_fail@plt+0x3e6c>
   14dcc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14dd0:	cmp	r3, #0
   14dd4:	bne	16078 <__assert_fail@plt+0x5104>
   14dd8:	mov	r3, #1
   14ddc:	strb	r3, [fp, #-40]	; 0xffffffd8
   14de0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14de4:	ldr	r3, [fp, #-16]
   14de8:	add	r3, r2, r3
   14dec:	ldrb	r3, [r3]
   14df0:	strb	r3, [fp, #-38]	; 0xffffffda
   14df4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14df8:	cmp	r3, #126	; 0x7e
   14dfc:	ldrls	pc, [pc, r3, lsl #2]
   14e00:	b	15638 <__assert_fail@plt+0x46c4>
   14e04:	andeq	r5, r1, r0
   14e08:	andeq	r5, r1, r8, lsr r6
   14e0c:	andeq	r5, r1, r8, lsr r6
   14e10:	andeq	r5, r1, r8, lsr r6
   14e14:	andeq	r5, r1, r8, lsr r6
   14e18:	andeq	r5, r1, r8, lsr r6
   14e1c:	andeq	r5, r1, r8, lsr r6
   14e20:	strdeq	r5, [r1], -r4
   14e24:	andeq	r5, r1, r0, lsl #8
   14e28:	andeq	r5, r1, r0, lsr r4
   14e2c:	andeq	r5, r1, r8, lsl r4
   14e30:	andeq	r5, r1, ip, lsr r4
   14e34:	andeq	r5, r1, ip, lsl #8
   14e38:	andeq	r5, r1, r4, lsr #8
   14e3c:	andeq	r5, r1, r8, lsr r6
   14e40:	andeq	r5, r1, r8, lsr r6
   14e44:	andeq	r5, r1, r8, lsr r6
   14e48:	andeq	r5, r1, r8, lsr r6
   14e4c:	andeq	r5, r1, r8, lsr r6
   14e50:	andeq	r5, r1, r8, lsr r6
   14e54:	andeq	r5, r1, r8, lsr r6
   14e58:	andeq	r5, r1, r8, lsr r6
   14e5c:	andeq	r5, r1, r8, lsr r6
   14e60:	andeq	r5, r1, r8, lsr r6
   14e64:	andeq	r5, r1, r8, lsr r6
   14e68:	andeq	r5, r1, r8, lsr r6
   14e6c:	andeq	r5, r1, r8, lsr r6
   14e70:	andeq	r5, r1, r8, lsr r6
   14e74:	andeq	r5, r1, r8, lsr r6
   14e78:	andeq	r5, r1, r8, lsr r6
   14e7c:	andeq	r5, r1, r8, lsr r6
   14e80:	andeq	r5, r1, r8, lsr r6
   14e84:	andeq	r5, r1, ip, lsl r5
   14e88:	andeq	r5, r1, r4, lsr #10
   14e8c:	andeq	r5, r1, r4, lsr #10
   14e90:	andeq	r5, r1, r0, lsl r5
   14e94:	andeq	r5, r1, r4, lsr #10
   14e98:	andeq	r5, r1, ip, lsr #12
   14e9c:	andeq	r5, r1, r4, lsr #10
   14ea0:	andeq	r5, r1, r0, asr #10
   14ea4:	andeq	r5, r1, r4, lsr #10
   14ea8:	andeq	r5, r1, r4, lsr #10
   14eac:	andeq	r5, r1, r4, lsr #10
   14eb0:	andeq	r5, r1, ip, lsr #12
   14eb4:	andeq	r5, r1, ip, lsr #12
   14eb8:	andeq	r5, r1, ip, lsr #12
   14ebc:	andeq	r5, r1, ip, lsr #12
   14ec0:	andeq	r5, r1, ip, lsr #12
   14ec4:	andeq	r5, r1, ip, lsr #12
   14ec8:	andeq	r5, r1, ip, lsr #12
   14ecc:	andeq	r5, r1, ip, lsr #12
   14ed0:	andeq	r5, r1, ip, lsr #12
   14ed4:	andeq	r5, r1, ip, lsr #12
   14ed8:	andeq	r5, r1, ip, lsr #12
   14edc:	andeq	r5, r1, ip, lsr #12
   14ee0:	andeq	r5, r1, ip, lsr #12
   14ee4:	andeq	r5, r1, ip, lsr #12
   14ee8:	andeq	r5, r1, ip, lsr #12
   14eec:	andeq	r5, r1, ip, lsr #12
   14ef0:	andeq	r5, r1, r4, lsr #10
   14ef4:	andeq	r5, r1, r4, lsr #10
   14ef8:	andeq	r5, r1, r4, lsr #10
   14efc:	andeq	r5, r1, r4, lsr #10
   14f00:	andeq	r5, r1, r0, ror #3
   14f04:	andeq	r5, r1, r8, lsr r6
   14f08:	andeq	r5, r1, ip, lsr #12
   14f0c:	andeq	r5, r1, ip, lsr #12
   14f10:	andeq	r5, r1, ip, lsr #12
   14f14:	andeq	r5, r1, ip, lsr #12
   14f18:	andeq	r5, r1, ip, lsr #12
   14f1c:	andeq	r5, r1, ip, lsr #12
   14f20:	andeq	r5, r1, ip, lsr #12
   14f24:	andeq	r5, r1, ip, lsr #12
   14f28:	andeq	r5, r1, ip, lsr #12
   14f2c:	andeq	r5, r1, ip, lsr #12
   14f30:	andeq	r5, r1, ip, lsr #12
   14f34:	andeq	r5, r1, ip, lsr #12
   14f38:	andeq	r5, r1, ip, lsr #12
   14f3c:	andeq	r5, r1, ip, lsr #12
   14f40:	andeq	r5, r1, ip, lsr #12
   14f44:	andeq	r5, r1, ip, lsr #12
   14f48:	andeq	r5, r1, ip, lsr #12
   14f4c:	andeq	r5, r1, ip, lsr #12
   14f50:	andeq	r5, r1, ip, lsr #12
   14f54:	andeq	r5, r1, ip, lsr #12
   14f58:	andeq	r5, r1, ip, lsr #12
   14f5c:	andeq	r5, r1, ip, lsr #12
   14f60:	andeq	r5, r1, ip, lsr #12
   14f64:	andeq	r5, r1, ip, lsr #12
   14f68:	andeq	r5, r1, ip, lsr #12
   14f6c:	andeq	r5, r1, ip, lsr #12
   14f70:	andeq	r5, r1, r4, lsr #10
   14f74:	andeq	r5, r1, r8, asr #8
   14f78:	andeq	r5, r1, ip, lsr #12
   14f7c:	andeq	r5, r1, r4, lsr #10
   14f80:	andeq	r5, r1, ip, lsr #12
   14f84:	andeq	r5, r1, r4, lsr #10
   14f88:	andeq	r5, r1, ip, lsr #12
   14f8c:	andeq	r5, r1, ip, lsr #12
   14f90:	andeq	r5, r1, ip, lsr #12
   14f94:	andeq	r5, r1, ip, lsr #12
   14f98:	andeq	r5, r1, ip, lsr #12
   14f9c:	andeq	r5, r1, ip, lsr #12
   14fa0:	andeq	r5, r1, ip, lsr #12
   14fa4:	andeq	r5, r1, ip, lsr #12
   14fa8:	andeq	r5, r1, ip, lsr #12
   14fac:	andeq	r5, r1, ip, lsr #12
   14fb0:	andeq	r5, r1, ip, lsr #12
   14fb4:	andeq	r5, r1, ip, lsr #12
   14fb8:	andeq	r5, r1, ip, lsr #12
   14fbc:	andeq	r5, r1, ip, lsr #12
   14fc0:	andeq	r5, r1, ip, lsr #12
   14fc4:	andeq	r5, r1, ip, lsr #12
   14fc8:	andeq	r5, r1, ip, lsr #12
   14fcc:	andeq	r5, r1, ip, lsr #12
   14fd0:	andeq	r5, r1, ip, lsr #12
   14fd4:	andeq	r5, r1, ip, lsr #12
   14fd8:	andeq	r5, r1, ip, lsr #12
   14fdc:	andeq	r5, r1, ip, lsr #12
   14fe0:	andeq	r5, r1, ip, lsr #12
   14fe4:	andeq	r5, r1, ip, lsr #12
   14fe8:	andeq	r5, r1, ip, lsr #12
   14fec:	andeq	r5, r1, ip, lsr #12
   14ff0:	andeq	r5, r1, r8, asr #9
   14ff4:	andeq	r5, r1, r4, lsr #10
   14ff8:	andeq	r5, r1, r8, asr #9
   14ffc:	andeq	r5, r1, r0, lsl r5
   15000:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15004:	cmp	r3, #0
   15008:	beq	151cc <__assert_fail@plt+0x4258>
   1500c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15010:	cmp	r3, #0
   15014:	bne	16080 <__assert_fail@plt+0x510c>
   15018:	mov	r3, #1
   1501c:	strb	r3, [fp, #-41]	; 0xffffffd7
   15020:	ldr	r3, [fp, #4]
   15024:	cmp	r3, #2
   15028:	bne	150d8 <__assert_fail@plt+0x4164>
   1502c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15030:	eor	r3, r3, #1
   15034:	uxtb	r3, r3
   15038:	cmp	r3, #0
   1503c:	beq	150d8 <__assert_fail@plt+0x4164>
   15040:	ldr	r2, [fp, #-20]	; 0xffffffec
   15044:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15048:	cmp	r2, r3
   1504c:	bcs	15064 <__assert_fail@plt+0x40f0>
   15050:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15054:	ldr	r3, [fp, #-20]	; 0xffffffec
   15058:	add	r3, r2, r3
   1505c:	mov	r2, #39	; 0x27
   15060:	strb	r2, [r3]
   15064:	ldr	r3, [fp, #-20]	; 0xffffffec
   15068:	add	r3, r3, #1
   1506c:	str	r3, [fp, #-20]	; 0xffffffec
   15070:	ldr	r2, [fp, #-20]	; 0xffffffec
   15074:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15078:	cmp	r2, r3
   1507c:	bcs	15094 <__assert_fail@plt+0x4120>
   15080:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15084:	ldr	r3, [fp, #-20]	; 0xffffffec
   15088:	add	r3, r2, r3
   1508c:	mov	r2, #36	; 0x24
   15090:	strb	r2, [r3]
   15094:	ldr	r3, [fp, #-20]	; 0xffffffec
   15098:	add	r3, r3, #1
   1509c:	str	r3, [fp, #-20]	; 0xffffffec
   150a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   150a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150a8:	cmp	r2, r3
   150ac:	bcs	150c4 <__assert_fail@plt+0x4150>
   150b0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150b8:	add	r3, r2, r3
   150bc:	mov	r2, #39	; 0x27
   150c0:	strb	r2, [r3]
   150c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   150c8:	add	r3, r3, #1
   150cc:	str	r3, [fp, #-20]	; 0xffffffec
   150d0:	mov	r3, #1
   150d4:	strb	r3, [fp, #-35]	; 0xffffffdd
   150d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   150dc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150e0:	cmp	r2, r3
   150e4:	bcs	150fc <__assert_fail@plt+0x4188>
   150e8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   150ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   150f0:	add	r3, r2, r3
   150f4:	mov	r2, #92	; 0x5c
   150f8:	strb	r2, [r3]
   150fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15100:	add	r3, r3, #1
   15104:	str	r3, [fp, #-20]	; 0xffffffec
   15108:	ldr	r3, [fp, #4]
   1510c:	cmp	r3, #2
   15110:	beq	151c0 <__assert_fail@plt+0x424c>
   15114:	ldr	r3, [fp, #-16]
   15118:	add	r3, r3, #1
   1511c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15120:	cmp	r2, r3
   15124:	bls	151c0 <__assert_fail@plt+0x424c>
   15128:	ldr	r3, [fp, #-16]
   1512c:	add	r3, r3, #1
   15130:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15134:	add	r3, r2, r3
   15138:	ldrb	r3, [r3]
   1513c:	cmp	r3, #47	; 0x2f
   15140:	bls	151c0 <__assert_fail@plt+0x424c>
   15144:	ldr	r3, [fp, #-16]
   15148:	add	r3, r3, #1
   1514c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15150:	add	r3, r2, r3
   15154:	ldrb	r3, [r3]
   15158:	cmp	r3, #57	; 0x39
   1515c:	bhi	151c0 <__assert_fail@plt+0x424c>
   15160:	ldr	r2, [fp, #-20]	; 0xffffffec
   15164:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15168:	cmp	r2, r3
   1516c:	bcs	15184 <__assert_fail@plt+0x4210>
   15170:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15174:	ldr	r3, [fp, #-20]	; 0xffffffec
   15178:	add	r3, r2, r3
   1517c:	mov	r2, #48	; 0x30
   15180:	strb	r2, [r3]
   15184:	ldr	r3, [fp, #-20]	; 0xffffffec
   15188:	add	r3, r3, #1
   1518c:	str	r3, [fp, #-20]	; 0xffffffec
   15190:	ldr	r2, [fp, #-20]	; 0xffffffec
   15194:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15198:	cmp	r2, r3
   1519c:	bcs	151b4 <__assert_fail@plt+0x4240>
   151a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   151a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151a8:	add	r3, r2, r3
   151ac:	mov	r2, #48	; 0x30
   151b0:	strb	r2, [r3]
   151b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b8:	add	r3, r3, #1
   151bc:	str	r3, [fp, #-20]	; 0xffffffec
   151c0:	mov	r3, #48	; 0x30
   151c4:	strb	r3, [fp, #-38]	; 0xffffffda
   151c8:	b	15c08 <__assert_fail@plt+0x4c94>
   151cc:	ldr	r3, [fp, #8]
   151d0:	and	r3, r3, #1
   151d4:	cmp	r3, #0
   151d8:	beq	15c08 <__assert_fail@plt+0x4c94>
   151dc:	b	15eb0 <__assert_fail@plt+0x4f3c>
   151e0:	ldr	r3, [fp, #4]
   151e4:	cmp	r3, #2
   151e8:	beq	151fc <__assert_fail@plt+0x4288>
   151ec:	ldr	r3, [fp, #4]
   151f0:	cmp	r3, #5
   151f4:	beq	1520c <__assert_fail@plt+0x4298>
   151f8:	b	153f0 <__assert_fail@plt+0x447c>
   151fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15200:	cmp	r3, #0
   15204:	beq	153e4 <__assert_fail@plt+0x4470>
   15208:	b	160b4 <__assert_fail@plt+0x5140>
   1520c:	ldr	r3, [fp, #8]
   15210:	and	r3, r3, #4
   15214:	cmp	r3, #0
   15218:	beq	153ec <__assert_fail@plt+0x4478>
   1521c:	ldr	r3, [fp, #-16]
   15220:	add	r3, r3, #2
   15224:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15228:	cmp	r2, r3
   1522c:	bls	153ec <__assert_fail@plt+0x4478>
   15230:	ldr	r3, [fp, #-16]
   15234:	add	r3, r3, #1
   15238:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1523c:	add	r3, r2, r3
   15240:	ldrb	r3, [r3]
   15244:	cmp	r3, #63	; 0x3f
   15248:	bne	153ec <__assert_fail@plt+0x4478>
   1524c:	ldr	r3, [fp, #-16]
   15250:	add	r3, r3, #2
   15254:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15258:	add	r3, r2, r3
   1525c:	ldrb	r3, [r3]
   15260:	sub	r3, r3, #33	; 0x21
   15264:	cmp	r3, #29
   15268:	ldrls	pc, [pc, r3, lsl #2]
   1526c:	b	153dc <__assert_fail@plt+0x4468>
   15270:	andeq	r5, r1, r8, ror #5
   15274:	ldrdeq	r5, [r1], -ip
   15278:	ldrdeq	r5, [r1], -ip
   1527c:	ldrdeq	r5, [r1], -ip
   15280:	ldrdeq	r5, [r1], -ip
   15284:	ldrdeq	r5, [r1], -ip
   15288:	andeq	r5, r1, r8, ror #5
   1528c:	andeq	r5, r1, r8, ror #5
   15290:	andeq	r5, r1, r8, ror #5
   15294:	ldrdeq	r5, [r1], -ip
   15298:	ldrdeq	r5, [r1], -ip
   1529c:	ldrdeq	r5, [r1], -ip
   152a0:	andeq	r5, r1, r8, ror #5
   152a4:	ldrdeq	r5, [r1], -ip
   152a8:	andeq	r5, r1, r8, ror #5
   152ac:	ldrdeq	r5, [r1], -ip
   152b0:	ldrdeq	r5, [r1], -ip
   152b4:	ldrdeq	r5, [r1], -ip
   152b8:	ldrdeq	r5, [r1], -ip
   152bc:	ldrdeq	r5, [r1], -ip
   152c0:	ldrdeq	r5, [r1], -ip
   152c4:	ldrdeq	r5, [r1], -ip
   152c8:	ldrdeq	r5, [r1], -ip
   152cc:	ldrdeq	r5, [r1], -ip
   152d0:	ldrdeq	r5, [r1], -ip
   152d4:	ldrdeq	r5, [r1], -ip
   152d8:	ldrdeq	r5, [r1], -ip
   152dc:	andeq	r5, r1, r8, ror #5
   152e0:	andeq	r5, r1, r8, ror #5
   152e4:	andeq	r5, r1, r8, ror #5
   152e8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   152ec:	cmp	r3, #0
   152f0:	bne	16088 <__assert_fail@plt+0x5114>
   152f4:	ldr	r3, [fp, #-16]
   152f8:	add	r3, r3, #2
   152fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15300:	add	r3, r2, r3
   15304:	ldrb	r3, [r3]
   15308:	strb	r3, [fp, #-38]	; 0xffffffda
   1530c:	ldr	r3, [fp, #-16]
   15310:	add	r3, r3, #2
   15314:	str	r3, [fp, #-16]
   15318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1531c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15320:	cmp	r2, r3
   15324:	bcs	1533c <__assert_fail@plt+0x43c8>
   15328:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1532c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15330:	add	r3, r2, r3
   15334:	mov	r2, #63	; 0x3f
   15338:	strb	r2, [r3]
   1533c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15340:	add	r3, r3, #1
   15344:	str	r3, [fp, #-20]	; 0xffffffec
   15348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1534c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15350:	cmp	r2, r3
   15354:	bcs	1536c <__assert_fail@plt+0x43f8>
   15358:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1535c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15360:	add	r3, r2, r3
   15364:	mov	r2, #34	; 0x22
   15368:	strb	r2, [r3]
   1536c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15370:	add	r3, r3, #1
   15374:	str	r3, [fp, #-20]	; 0xffffffec
   15378:	ldr	r2, [fp, #-20]	; 0xffffffec
   1537c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15380:	cmp	r2, r3
   15384:	bcs	1539c <__assert_fail@plt+0x4428>
   15388:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1538c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15390:	add	r3, r2, r3
   15394:	mov	r2, #34	; 0x22
   15398:	strb	r2, [r3]
   1539c:	ldr	r3, [fp, #-20]	; 0xffffffec
   153a0:	add	r3, r3, #1
   153a4:	str	r3, [fp, #-20]	; 0xffffffec
   153a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   153ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   153b0:	cmp	r2, r3
   153b4:	bcs	153cc <__assert_fail@plt+0x4458>
   153b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   153bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   153c0:	add	r3, r2, r3
   153c4:	mov	r2, #63	; 0x3f
   153c8:	strb	r2, [r3]
   153cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   153d0:	add	r3, r3, #1
   153d4:	str	r3, [fp, #-20]	; 0xffffffec
   153d8:	b	153e0 <__assert_fail@plt+0x446c>
   153dc:	nop	{0}
   153e0:	b	153ec <__assert_fail@plt+0x4478>
   153e4:	nop	{0}
   153e8:	b	15c3c <__assert_fail@plt+0x4cc8>
   153ec:	nop	{0}
   153f0:	b	15c3c <__assert_fail@plt+0x4cc8>
   153f4:	mov	r3, #97	; 0x61
   153f8:	strb	r3, [fp, #-39]	; 0xffffffd9
   153fc:	b	154b0 <__assert_fail@plt+0x453c>
   15400:	mov	r3, #98	; 0x62
   15404:	strb	r3, [fp, #-39]	; 0xffffffd9
   15408:	b	154b0 <__assert_fail@plt+0x453c>
   1540c:	mov	r3, #102	; 0x66
   15410:	strb	r3, [fp, #-39]	; 0xffffffd9
   15414:	b	154b0 <__assert_fail@plt+0x453c>
   15418:	mov	r3, #110	; 0x6e
   1541c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15420:	b	15494 <__assert_fail@plt+0x4520>
   15424:	mov	r3, #114	; 0x72
   15428:	strb	r3, [fp, #-39]	; 0xffffffd9
   1542c:	b	15494 <__assert_fail@plt+0x4520>
   15430:	mov	r3, #116	; 0x74
   15434:	strb	r3, [fp, #-39]	; 0xffffffd9
   15438:	b	15494 <__assert_fail@plt+0x4520>
   1543c:	mov	r3, #118	; 0x76
   15440:	strb	r3, [fp, #-39]	; 0xffffffd9
   15444:	b	154b0 <__assert_fail@plt+0x453c>
   15448:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1544c:	strb	r3, [fp, #-39]	; 0xffffffd9
   15450:	ldr	r3, [fp, #4]
   15454:	cmp	r3, #2
   15458:	bne	1546c <__assert_fail@plt+0x44f8>
   1545c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15460:	cmp	r3, #0
   15464:	beq	15dc8 <__assert_fail@plt+0x4e54>
   15468:	b	160b4 <__assert_fail@plt+0x5140>
   1546c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15470:	cmp	r3, #0
   15474:	beq	15490 <__assert_fail@plt+0x451c>
   15478:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1547c:	cmp	r3, #0
   15480:	beq	15490 <__assert_fail@plt+0x451c>
   15484:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15488:	cmp	r3, #0
   1548c:	bne	15dd0 <__assert_fail@plt+0x4e5c>
   15490:	nop	{0}
   15494:	ldr	r3, [fp, #4]
   15498:	cmp	r3, #2
   1549c:	bne	154ac <__assert_fail@plt+0x4538>
   154a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   154a4:	cmp	r3, #0
   154a8:	bne	16090 <__assert_fail@plt+0x511c>
   154ac:	nop	{0}
   154b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   154b4:	cmp	r3, #0
   154b8:	beq	15c10 <__assert_fail@plt+0x4c9c>
   154bc:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   154c0:	strb	r3, [fp, #-38]	; 0xffffffda
   154c4:	b	15cc8 <__assert_fail@plt+0x4d54>
   154c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154cc:	cmn	r3, #1
   154d0:	bne	154f4 <__assert_fail@plt+0x4580>
   154d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   154d8:	add	r3, r3, #1
   154dc:	ldrb	r3, [r3]
   154e0:	cmp	r3, #0
   154e4:	movne	r3, #1
   154e8:	moveq	r3, #0
   154ec:	uxtb	r3, r3
   154f0:	b	15508 <__assert_fail@plt+0x4594>
   154f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154f8:	cmp	r3, #1
   154fc:	movne	r3, #1
   15500:	moveq	r3, #0
   15504:	uxtb	r3, r3
   15508:	cmp	r3, #0
   1550c:	bne	15c18 <__assert_fail@plt+0x4ca4>
   15510:	ldr	r3, [fp, #-16]
   15514:	cmp	r3, #0
   15518:	bne	15c20 <__assert_fail@plt+0x4cac>
   1551c:	mov	r3, #1
   15520:	strb	r3, [fp, #-42]	; 0xffffffd6
   15524:	ldr	r3, [fp, #4]
   15528:	cmp	r3, #2
   1552c:	bne	15c28 <__assert_fail@plt+0x4cb4>
   15530:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15534:	cmp	r3, #0
   15538:	beq	15c28 <__assert_fail@plt+0x4cb4>
   1553c:	b	160b4 <__assert_fail@plt+0x5140>
   15540:	mov	r3, #1
   15544:	strb	r3, [fp, #-36]	; 0xffffffdc
   15548:	mov	r3, #1
   1554c:	strb	r3, [fp, #-42]	; 0xffffffd6
   15550:	ldr	r3, [fp, #4]
   15554:	cmp	r3, #2
   15558:	bne	15c30 <__assert_fail@plt+0x4cbc>
   1555c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15560:	cmp	r3, #0
   15564:	bne	16098 <__assert_fail@plt+0x5124>
   15568:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1556c:	cmp	r3, #0
   15570:	beq	15590 <__assert_fail@plt+0x461c>
   15574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15578:	cmp	r3, #0
   1557c:	bne	15590 <__assert_fail@plt+0x461c>
   15580:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15584:	str	r3, [fp, #-24]	; 0xffffffe8
   15588:	mov	r3, #0
   1558c:	str	r3, [fp, #-92]	; 0xffffffa4
   15590:	ldr	r2, [fp, #-20]	; 0xffffffec
   15594:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15598:	cmp	r2, r3
   1559c:	bcs	155b4 <__assert_fail@plt+0x4640>
   155a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   155a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155a8:	add	r3, r2, r3
   155ac:	mov	r2, #39	; 0x27
   155b0:	strb	r2, [r3]
   155b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155b8:	add	r3, r3, #1
   155bc:	str	r3, [fp, #-20]	; 0xffffffec
   155c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   155c4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155c8:	cmp	r2, r3
   155cc:	bcs	155e4 <__assert_fail@plt+0x4670>
   155d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   155d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155d8:	add	r3, r2, r3
   155dc:	mov	r2, #92	; 0x5c
   155e0:	strb	r2, [r3]
   155e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e8:	add	r3, r3, #1
   155ec:	str	r3, [fp, #-20]	; 0xffffffec
   155f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   155f4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   155f8:	cmp	r2, r3
   155fc:	bcs	15614 <__assert_fail@plt+0x46a0>
   15600:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15604:	ldr	r3, [fp, #-20]	; 0xffffffec
   15608:	add	r3, r2, r3
   1560c:	mov	r2, #39	; 0x27
   15610:	strb	r2, [r3]
   15614:	ldr	r3, [fp, #-20]	; 0xffffffec
   15618:	add	r3, r3, #1
   1561c:	str	r3, [fp, #-20]	; 0xffffffec
   15620:	mov	r3, #0
   15624:	strb	r3, [fp, #-35]	; 0xffffffdd
   15628:	b	15c30 <__assert_fail@plt+0x4cbc>
   1562c:	mov	r3, #1
   15630:	strb	r3, [fp, #-42]	; 0xffffffd6
   15634:	b	15c3c <__assert_fail@plt+0x4cc8>
   15638:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   1563c:	cmp	r3, #0
   15640:	beq	15680 <__assert_fail@plt+0x470c>
   15644:	mov	r3, #1
   15648:	str	r3, [fp, #-48]	; 0xffffffd0
   1564c:	bl	10e60 <__ctype_b_loc@plt>
   15650:	mov	r3, r0
   15654:	ldr	r2, [r3]
   15658:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1565c:	lsl	r3, r3, #1
   15660:	add	r3, r2, r3
   15664:	ldrh	r3, [r3]
   15668:	and	r3, r3, #16384	; 0x4000
   1566c:	cmp	r3, #0
   15670:	movne	r3, #1
   15674:	moveq	r3, #0
   15678:	strb	r3, [fp, #-49]	; 0xffffffcf
   1567c:	b	158cc <__assert_fail@plt+0x4958>
   15680:	sub	r3, fp, #76	; 0x4c
   15684:	mov	r2, #8
   15688:	mov	r1, #0
   1568c:	mov	r0, r3
   15690:	bl	10ecc <memset@plt>
   15694:	mov	r3, #0
   15698:	str	r3, [fp, #-48]	; 0xffffffd0
   1569c:	mov	r3, #1
   156a0:	strb	r3, [fp, #-49]	; 0xffffffcf
   156a4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   156a8:	cmn	r3, #1
   156ac:	bne	156bc <__assert_fail@plt+0x4748>
   156b0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   156b4:	bl	10e84 <strlen@plt>
   156b8:	str	r0, [fp, #-100]	; 0xffffff9c
   156bc:	ldr	r2, [fp, #-16]
   156c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156c4:	add	r3, r2, r3
   156c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   156cc:	add	r1, r2, r3
   156d0:	ldr	r2, [fp, #-16]
   156d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   156d8:	add	r3, r2, r3
   156dc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   156e0:	sub	r2, r2, r3
   156e4:	sub	r3, fp, #76	; 0x4c
   156e8:	sub	r0, fp, #80	; 0x50
   156ec:	bl	193dc <__assert_fail@plt+0x8468>
   156f0:	str	r0, [fp, #-64]	; 0xffffffc0
   156f4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   156f8:	cmp	r3, #0
   156fc:	beq	158c0 <__assert_fail@plt+0x494c>
   15700:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15704:	cmn	r3, #1
   15708:	bne	15718 <__assert_fail@plt+0x47a4>
   1570c:	mov	r3, #0
   15710:	strb	r3, [fp, #-49]	; 0xffffffcf
   15714:	b	158cc <__assert_fail@plt+0x4958>
   15718:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1571c:	cmn	r3, #2
   15720:	bne	15778 <__assert_fail@plt+0x4804>
   15724:	mov	r3, #0
   15728:	strb	r3, [fp, #-49]	; 0xffffffcf
   1572c:	b	1573c <__assert_fail@plt+0x47c8>
   15730:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15734:	add	r3, r3, #1
   15738:	str	r3, [fp, #-48]	; 0xffffffd0
   1573c:	ldr	r2, [fp, #-16]
   15740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15744:	add	r3, r2, r3
   15748:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1574c:	cmp	r2, r3
   15750:	bls	158c8 <__assert_fail@plt+0x4954>
   15754:	ldr	r2, [fp, #-16]
   15758:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1575c:	add	r3, r2, r3
   15760:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15764:	add	r3, r2, r3
   15768:	ldrb	r3, [r3]
   1576c:	cmp	r3, #0
   15770:	bne	15730 <__assert_fail@plt+0x47bc>
   15774:	b	158c8 <__assert_fail@plt+0x4954>
   15778:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1577c:	cmp	r3, #0
   15780:	beq	15874 <__assert_fail@plt+0x4900>
   15784:	ldr	r3, [fp, #4]
   15788:	cmp	r3, #2
   1578c:	bne	15874 <__assert_fail@plt+0x4900>
   15790:	mov	r3, #1
   15794:	str	r3, [fp, #-56]	; 0xffffffc8
   15798:	b	15864 <__assert_fail@plt+0x48f0>
   1579c:	ldr	r2, [fp, #-16]
   157a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   157a4:	add	r2, r2, r3
   157a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   157ac:	add	r3, r2, r3
   157b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   157b4:	add	r3, r2, r3
   157b8:	ldrb	r3, [r3]
   157bc:	sub	r3, r3, #91	; 0x5b
   157c0:	cmp	r3, #33	; 0x21
   157c4:	ldrls	pc, [pc, r3, lsl #2]
   157c8:	b	15854 <__assert_fail@plt+0x48e0>
   157cc:	strheq	r6, [r1], -r4
   157d0:	strheq	r6, [r1], -r4
   157d4:	andeq	r5, r1, r4, asr r8
   157d8:	strheq	r6, [r1], -r4
   157dc:	andeq	r5, r1, r4, asr r8
   157e0:	strheq	r6, [r1], -r4
   157e4:	andeq	r5, r1, r4, asr r8
   157e8:	andeq	r5, r1, r4, asr r8
   157ec:	andeq	r5, r1, r4, asr r8
   157f0:	andeq	r5, r1, r4, asr r8
   157f4:	andeq	r5, r1, r4, asr r8
   157f8:	andeq	r5, r1, r4, asr r8
   157fc:	andeq	r5, r1, r4, asr r8
   15800:	andeq	r5, r1, r4, asr r8
   15804:	andeq	r5, r1, r4, asr r8
   15808:	andeq	r5, r1, r4, asr r8
   1580c:	andeq	r5, r1, r4, asr r8
   15810:	andeq	r5, r1, r4, asr r8
   15814:	andeq	r5, r1, r4, asr r8
   15818:	andeq	r5, r1, r4, asr r8
   1581c:	andeq	r5, r1, r4, asr r8
   15820:	andeq	r5, r1, r4, asr r8
   15824:	andeq	r5, r1, r4, asr r8
   15828:	andeq	r5, r1, r4, asr r8
   1582c:	andeq	r5, r1, r4, asr r8
   15830:	andeq	r5, r1, r4, asr r8
   15834:	andeq	r5, r1, r4, asr r8
   15838:	andeq	r5, r1, r4, asr r8
   1583c:	andeq	r5, r1, r4, asr r8
   15840:	andeq	r5, r1, r4, asr r8
   15844:	andeq	r5, r1, r4, asr r8
   15848:	andeq	r5, r1, r4, asr r8
   1584c:	andeq	r5, r1, r4, asr r8
   15850:	strheq	r6, [r1], -r4
   15854:	nop	{0}
   15858:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1585c:	add	r3, r3, #1
   15860:	str	r3, [fp, #-56]	; 0xffffffc8
   15864:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15868:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1586c:	cmp	r2, r3
   15870:	bcc	1579c <__assert_fail@plt+0x4828>
   15874:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15878:	mov	r0, r3
   1587c:	bl	10dac <iswprint@plt>
   15880:	mov	r3, r0
   15884:	cmp	r3, #0
   15888:	bne	15894 <__assert_fail@plt+0x4920>
   1588c:	mov	r3, #0
   15890:	strb	r3, [fp, #-49]	; 0xffffffcf
   15894:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15898:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1589c:	add	r3, r2, r3
   158a0:	str	r3, [fp, #-48]	; 0xffffffd0
   158a4:	sub	r3, fp, #76	; 0x4c
   158a8:	mov	r0, r3
   158ac:	bl	10d58 <mbsinit@plt>
   158b0:	mov	r3, r0
   158b4:	cmp	r3, #0
   158b8:	beq	156bc <__assert_fail@plt+0x4748>
   158bc:	b	158cc <__assert_fail@plt+0x4958>
   158c0:	nop	{0}
   158c4:	b	158cc <__assert_fail@plt+0x4958>
   158c8:	nop	{0}
   158cc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   158d0:	strb	r3, [fp, #-42]	; 0xffffffd6
   158d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   158d8:	cmp	r3, #1
   158dc:	bhi	15900 <__assert_fail@plt+0x498c>
   158e0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   158e4:	cmp	r3, #0
   158e8:	beq	15c38 <__assert_fail@plt+0x4cc4>
   158ec:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   158f0:	eor	r3, r3, #1
   158f4:	uxtb	r3, r3
   158f8:	cmp	r3, #0
   158fc:	beq	15c38 <__assert_fail@plt+0x4cc4>
   15900:	ldr	r2, [fp, #-16]
   15904:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15908:	add	r3, r2, r3
   1590c:	str	r3, [fp, #-68]	; 0xffffffbc
   15910:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15914:	cmp	r3, #0
   15918:	beq	15acc <__assert_fail@plt+0x4b58>
   1591c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   15920:	eor	r3, r3, #1
   15924:	uxtb	r3, r3
   15928:	cmp	r3, #0
   1592c:	beq	15acc <__assert_fail@plt+0x4b58>
   15930:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15934:	cmp	r3, #0
   15938:	bne	160a0 <__assert_fail@plt+0x512c>
   1593c:	mov	r3, #1
   15940:	strb	r3, [fp, #-41]	; 0xffffffd7
   15944:	ldr	r3, [fp, #4]
   15948:	cmp	r3, #2
   1594c:	bne	159fc <__assert_fail@plt+0x4a88>
   15950:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15954:	eor	r3, r3, #1
   15958:	uxtb	r3, r3
   1595c:	cmp	r3, #0
   15960:	beq	159fc <__assert_fail@plt+0x4a88>
   15964:	ldr	r2, [fp, #-20]	; 0xffffffec
   15968:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1596c:	cmp	r2, r3
   15970:	bcs	15988 <__assert_fail@plt+0x4a14>
   15974:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1597c:	add	r3, r2, r3
   15980:	mov	r2, #39	; 0x27
   15984:	strb	r2, [r3]
   15988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1598c:	add	r3, r3, #1
   15990:	str	r3, [fp, #-20]	; 0xffffffec
   15994:	ldr	r2, [fp, #-20]	; 0xffffffec
   15998:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1599c:	cmp	r2, r3
   159a0:	bcs	159b8 <__assert_fail@plt+0x4a44>
   159a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   159a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ac:	add	r3, r2, r3
   159b0:	mov	r2, #36	; 0x24
   159b4:	strb	r2, [r3]
   159b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159bc:	add	r3, r3, #1
   159c0:	str	r3, [fp, #-20]	; 0xffffffec
   159c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   159c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   159cc:	cmp	r2, r3
   159d0:	bcs	159e8 <__assert_fail@plt+0x4a74>
   159d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   159d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159dc:	add	r3, r2, r3
   159e0:	mov	r2, #39	; 0x27
   159e4:	strb	r2, [r3]
   159e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   159ec:	add	r3, r3, #1
   159f0:	str	r3, [fp, #-20]	; 0xffffffec
   159f4:	mov	r3, #1
   159f8:	strb	r3, [fp, #-35]	; 0xffffffdd
   159fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a04:	cmp	r2, r3
   15a08:	bcs	15a20 <__assert_fail@plt+0x4aac>
   15a0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15a10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a14:	add	r3, r2, r3
   15a18:	mov	r2, #92	; 0x5c
   15a1c:	strb	r2, [r3]
   15a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a24:	add	r3, r3, #1
   15a28:	str	r3, [fp, #-20]	; 0xffffffec
   15a2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a34:	cmp	r2, r3
   15a38:	bcs	15a60 <__assert_fail@plt+0x4aec>
   15a3c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15a40:	lsr	r3, r3, #6
   15a44:	uxtb	r2, r3
   15a48:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a50:	add	r3, r1, r3
   15a54:	add	r2, r2, #48	; 0x30
   15a58:	uxtb	r2, r2
   15a5c:	strb	r2, [r3]
   15a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a64:	add	r3, r3, #1
   15a68:	str	r3, [fp, #-20]	; 0xffffffec
   15a6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15a74:	cmp	r2, r3
   15a78:	bcs	15aa8 <__assert_fail@plt+0x4b34>
   15a7c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15a80:	lsr	r3, r3, #3
   15a84:	uxtb	r3, r3
   15a88:	and	r3, r3, #7
   15a8c:	uxtb	r2, r3
   15a90:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a98:	add	r3, r1, r3
   15a9c:	add	r2, r2, #48	; 0x30
   15aa0:	uxtb	r2, r2
   15aa4:	strb	r2, [r3]
   15aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15aac:	add	r3, r3, #1
   15ab0:	str	r3, [fp, #-20]	; 0xffffffec
   15ab4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15ab8:	and	r3, r3, #7
   15abc:	uxtb	r3, r3
   15ac0:	add	r3, r3, #48	; 0x30
   15ac4:	strb	r3, [fp, #-38]	; 0xffffffda
   15ac8:	b	15b10 <__assert_fail@plt+0x4b9c>
   15acc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   15ad0:	cmp	r3, #0
   15ad4:	beq	15b10 <__assert_fail@plt+0x4b9c>
   15ad8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15adc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15ae0:	cmp	r2, r3
   15ae4:	bcs	15afc <__assert_fail@plt+0x4b88>
   15ae8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   15af0:	add	r3, r2, r3
   15af4:	mov	r2, #92	; 0x5c
   15af8:	strb	r2, [r3]
   15afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b00:	add	r3, r3, #1
   15b04:	str	r3, [fp, #-20]	; 0xffffffec
   15b08:	mov	r3, #0
   15b0c:	strb	r3, [fp, #-40]	; 0xffffffd8
   15b10:	ldr	r3, [fp, #-16]
   15b14:	add	r3, r3, #1
   15b18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15b1c:	cmp	r2, r3
   15b20:	bls	15c00 <__assert_fail@plt+0x4c8c>
   15b24:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15b28:	cmp	r3, #0
   15b2c:	beq	15bac <__assert_fail@plt+0x4c38>
   15b30:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   15b34:	eor	r3, r3, #1
   15b38:	uxtb	r3, r3
   15b3c:	cmp	r3, #0
   15b40:	beq	15bac <__assert_fail@plt+0x4c38>
   15b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b4c:	cmp	r2, r3
   15b50:	bcs	15b68 <__assert_fail@plt+0x4bf4>
   15b54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b5c:	add	r3, r2, r3
   15b60:	mov	r2, #39	; 0x27
   15b64:	strb	r2, [r3]
   15b68:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b6c:	add	r3, r3, #1
   15b70:	str	r3, [fp, #-20]	; 0xffffffec
   15b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   15b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15b7c:	cmp	r2, r3
   15b80:	bcs	15b98 <__assert_fail@plt+0x4c24>
   15b84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b8c:	add	r3, r2, r3
   15b90:	mov	r2, #39	; 0x27
   15b94:	strb	r2, [r3]
   15b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b9c:	add	r3, r3, #1
   15ba0:	str	r3, [fp, #-20]	; 0xffffffec
   15ba4:	mov	r3, #0
   15ba8:	strb	r3, [fp, #-35]	; 0xffffffdd
   15bac:	ldr	r2, [fp, #-20]	; 0xffffffec
   15bb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15bb4:	cmp	r2, r3
   15bb8:	bcs	15bd0 <__assert_fail@plt+0x4c5c>
   15bbc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15bc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc4:	add	r3, r2, r3
   15bc8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15bcc:	strb	r2, [r3]
   15bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bd4:	add	r3, r3, #1
   15bd8:	str	r3, [fp, #-20]	; 0xffffffec
   15bdc:	ldr	r3, [fp, #-16]
   15be0:	add	r3, r3, #1
   15be4:	str	r3, [fp, #-16]
   15be8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15bec:	ldr	r3, [fp, #-16]
   15bf0:	add	r3, r2, r3
   15bf4:	ldrb	r3, [r3]
   15bf8:	strb	r3, [fp, #-38]	; 0xffffffda
   15bfc:	b	15910 <__assert_fail@plt+0x499c>
   15c00:	nop	{0}
   15c04:	b	15ddc <__assert_fail@plt+0x4e68>
   15c08:	nop	{0}
   15c0c:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c10:	nop	{0}
   15c14:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c18:	nop	{0}
   15c1c:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c20:	nop	{0}
   15c24:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c28:	nop	{0}
   15c2c:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c30:	nop	{0}
   15c34:	b	15c3c <__assert_fail@plt+0x4cc8>
   15c38:	nop	{0}
   15c3c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15c40:	eor	r3, r3, #1
   15c44:	uxtb	r3, r3
   15c48:	cmp	r3, #0
   15c4c:	bne	15c5c <__assert_fail@plt+0x4ce8>
   15c50:	ldr	r3, [fp, #4]
   15c54:	cmp	r3, #2
   15c58:	bne	15c70 <__assert_fail@plt+0x4cfc>
   15c5c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15c60:	eor	r3, r3, #1
   15c64:	uxtb	r3, r3
   15c68:	cmp	r3, #0
   15c6c:	bne	15cb0 <__assert_fail@plt+0x4d3c>
   15c70:	ldr	r3, [fp, #12]
   15c74:	cmp	r3, #0
   15c78:	beq	15cb0 <__assert_fail@plt+0x4d3c>
   15c7c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15c80:	lsr	r3, r3, #5
   15c84:	uxtb	r3, r3
   15c88:	lsl	r3, r3, #2
   15c8c:	ldr	r2, [fp, #12]
   15c90:	add	r3, r2, r3
   15c94:	ldr	r2, [r3]
   15c98:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15c9c:	and	r3, r3, #31
   15ca0:	lsr	r3, r2, r3
   15ca4:	and	r3, r3, #1
   15ca8:	cmp	r3, #0
   15cac:	bne	15cc4 <__assert_fail@plt+0x4d50>
   15cb0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   15cb4:	eor	r3, r3, #1
   15cb8:	uxtb	r3, r3
   15cbc:	cmp	r3, #0
   15cc0:	bne	15dd8 <__assert_fail@plt+0x4e64>
   15cc4:	nop	{0}
   15cc8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15ccc:	cmp	r3, #0
   15cd0:	bne	160a8 <__assert_fail@plt+0x5134>
   15cd4:	mov	r3, #1
   15cd8:	strb	r3, [fp, #-41]	; 0xffffffd7
   15cdc:	ldr	r3, [fp, #4]
   15ce0:	cmp	r3, #2
   15ce4:	bne	15d94 <__assert_fail@plt+0x4e20>
   15ce8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15cec:	eor	r3, r3, #1
   15cf0:	uxtb	r3, r3
   15cf4:	cmp	r3, #0
   15cf8:	beq	15d94 <__assert_fail@plt+0x4e20>
   15cfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d04:	cmp	r2, r3
   15d08:	bcs	15d20 <__assert_fail@plt+0x4dac>
   15d0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d14:	add	r3, r2, r3
   15d18:	mov	r2, #39	; 0x27
   15d1c:	strb	r2, [r3]
   15d20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d24:	add	r3, r3, #1
   15d28:	str	r3, [fp, #-20]	; 0xffffffec
   15d2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d34:	cmp	r2, r3
   15d38:	bcs	15d50 <__assert_fail@plt+0x4ddc>
   15d3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d44:	add	r3, r2, r3
   15d48:	mov	r2, #36	; 0x24
   15d4c:	strb	r2, [r3]
   15d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d54:	add	r3, r3, #1
   15d58:	str	r3, [fp, #-20]	; 0xffffffec
   15d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d64:	cmp	r2, r3
   15d68:	bcs	15d80 <__assert_fail@plt+0x4e0c>
   15d6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d74:	add	r3, r2, r3
   15d78:	mov	r2, #39	; 0x27
   15d7c:	strb	r2, [r3]
   15d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d84:	add	r3, r3, #1
   15d88:	str	r3, [fp, #-20]	; 0xffffffec
   15d8c:	mov	r3, #1
   15d90:	strb	r3, [fp, #-35]	; 0xffffffdd
   15d94:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d9c:	cmp	r2, r3
   15da0:	bcs	15db8 <__assert_fail@plt+0x4e44>
   15da4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dac:	add	r3, r2, r3
   15db0:	mov	r2, #92	; 0x5c
   15db4:	strb	r2, [r3]
   15db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15dbc:	add	r3, r3, #1
   15dc0:	str	r3, [fp, #-20]	; 0xffffffec
   15dc4:	b	15ddc <__assert_fail@plt+0x4e68>
   15dc8:	nop	{0}
   15dcc:	b	15ddc <__assert_fail@plt+0x4e68>
   15dd0:	nop	{0}
   15dd4:	b	15ddc <__assert_fail@plt+0x4e68>
   15dd8:	nop	{0}
   15ddc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   15de0:	cmp	r3, #0
   15de4:	beq	15e64 <__assert_fail@plt+0x4ef0>
   15de8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   15dec:	eor	r3, r3, #1
   15df0:	uxtb	r3, r3
   15df4:	cmp	r3, #0
   15df8:	beq	15e64 <__assert_fail@plt+0x4ef0>
   15dfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e00:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e04:	cmp	r2, r3
   15e08:	bcs	15e20 <__assert_fail@plt+0x4eac>
   15e0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e14:	add	r3, r2, r3
   15e18:	mov	r2, #39	; 0x27
   15e1c:	strb	r2, [r3]
   15e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e24:	add	r3, r3, #1
   15e28:	str	r3, [fp, #-20]	; 0xffffffec
   15e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e34:	cmp	r2, r3
   15e38:	bcs	15e50 <__assert_fail@plt+0x4edc>
   15e3c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e44:	add	r3, r2, r3
   15e48:	mov	r2, #39	; 0x27
   15e4c:	strb	r2, [r3]
   15e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e54:	add	r3, r3, #1
   15e58:	str	r3, [fp, #-20]	; 0xffffffec
   15e5c:	mov	r3, #0
   15e60:	strb	r3, [fp, #-35]	; 0xffffffdd
   15e64:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15e6c:	cmp	r2, r3
   15e70:	bcs	15e88 <__assert_fail@plt+0x4f14>
   15e74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e7c:	add	r3, r2, r3
   15e80:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15e84:	strb	r2, [r3]
   15e88:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e8c:	add	r3, r3, #1
   15e90:	str	r3, [fp, #-20]	; 0xffffffec
   15e94:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   15e98:	eor	r3, r3, #1
   15e9c:	uxtb	r3, r3
   15ea0:	cmp	r3, #0
   15ea4:	beq	15eb0 <__assert_fail@plt+0x4f3c>
   15ea8:	mov	r3, #0
   15eac:	strb	r3, [fp, #-37]	; 0xffffffdb
   15eb0:	ldr	r3, [fp, #-16]
   15eb4:	add	r3, r3, #1
   15eb8:	str	r3, [fp, #-16]
   15ebc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ec0:	cmn	r3, #1
   15ec4:	bne	15eec <__assert_fail@plt+0x4f78>
   15ec8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15ecc:	ldr	r3, [fp, #-16]
   15ed0:	add	r3, r2, r3
   15ed4:	ldrb	r3, [r3]
   15ed8:	cmp	r3, #0
   15edc:	movne	r3, #1
   15ee0:	moveq	r3, #0
   15ee4:	uxtb	r3, r3
   15ee8:	b	15f04 <__assert_fail@plt+0x4f90>
   15eec:	ldr	r2, [fp, #-16]
   15ef0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15ef4:	cmp	r2, r3
   15ef8:	movne	r3, #1
   15efc:	moveq	r3, #0
   15f00:	uxtb	r3, r3
   15f04:	cmp	r3, #0
   15f08:	bne	14d24 <__assert_fail@plt+0x3db0>
   15f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f10:	cmp	r3, #0
   15f14:	bne	15f30 <__assert_fail@plt+0x4fbc>
   15f18:	ldr	r3, [fp, #4]
   15f1c:	cmp	r3, #2
   15f20:	bne	15f30 <__assert_fail@plt+0x4fbc>
   15f24:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15f28:	cmp	r3, #0
   15f2c:	bne	160b0 <__assert_fail@plt+0x513c>
   15f30:	ldr	r3, [fp, #4]
   15f34:	cmp	r3, #2
   15f38:	bne	15fd8 <__assert_fail@plt+0x5064>
   15f3c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15f40:	eor	r3, r3, #1
   15f44:	uxtb	r3, r3
   15f48:	cmp	r3, #0
   15f4c:	beq	15fd8 <__assert_fail@plt+0x5064>
   15f50:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   15f54:	cmp	r3, #0
   15f58:	beq	15fd8 <__assert_fail@plt+0x5064>
   15f5c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15f60:	cmp	r3, #0
   15f64:	beq	15fac <__assert_fail@plt+0x5038>
   15f68:	ldr	r3, [fp, #20]
   15f6c:	str	r3, [sp, #16]
   15f70:	ldr	r3, [fp, #16]
   15f74:	str	r3, [sp, #12]
   15f78:	ldr	r3, [fp, #12]
   15f7c:	str	r3, [sp, #8]
   15f80:	ldr	r3, [fp, #8]
   15f84:	str	r3, [sp, #4]
   15f88:	mov	r3, #5
   15f8c:	str	r3, [sp]
   15f90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15f94:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15fa0:	bl	14a5c <__assert_fail@plt+0x3ae8>
   15fa4:	mov	r3, r0
   15fa8:	b	16118 <__assert_fail@plt+0x51a4>
   15fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15fb0:	cmp	r3, #0
   15fb4:	bne	15fd8 <__assert_fail@plt+0x5064>
   15fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fbc:	cmp	r3, #0
   15fc0:	beq	15fd8 <__assert_fail@plt+0x5064>
   15fc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fc8:	str	r3, [fp, #-92]	; 0xffffffa4
   15fcc:	mov	r3, #0
   15fd0:	str	r3, [fp, #-20]	; 0xffffffec
   15fd4:	b	14af0 <__assert_fail@plt+0x3b7c>
   15fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15fdc:	cmp	r3, #0
   15fe0:	beq	1604c <__assert_fail@plt+0x50d8>
   15fe4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15fe8:	eor	r3, r3, #1
   15fec:	uxtb	r3, r3
   15ff0:	cmp	r3, #0
   15ff4:	beq	1604c <__assert_fail@plt+0x50d8>
   15ff8:	b	1603c <__assert_fail@plt+0x50c8>
   15ffc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16000:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16004:	cmp	r2, r3
   16008:	bcs	16024 <__assert_fail@plt+0x50b0>
   1600c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16010:	ldr	r3, [fp, #-20]	; 0xffffffec
   16014:	add	r3, r2, r3
   16018:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1601c:	ldrb	r2, [r2]
   16020:	strb	r2, [r3]
   16024:	ldr	r3, [fp, #-20]	; 0xffffffec
   16028:	add	r3, r3, #1
   1602c:	str	r3, [fp, #-20]	; 0xffffffec
   16030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16034:	add	r3, r3, #1
   16038:	str	r3, [fp, #-28]	; 0xffffffe4
   1603c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16040:	ldrb	r3, [r3]
   16044:	cmp	r3, #0
   16048:	bne	15ffc <__assert_fail@plt+0x5088>
   1604c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16050:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16054:	cmp	r2, r3
   16058:	bcs	16070 <__assert_fail@plt+0x50fc>
   1605c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16060:	ldr	r3, [fp, #-20]	; 0xffffffec
   16064:	add	r3, r2, r3
   16068:	mov	r2, #0
   1606c:	strb	r2, [r3]
   16070:	ldr	r3, [fp, #-20]	; 0xffffffec
   16074:	b	16118 <__assert_fail@plt+0x51a4>
   16078:	nop	{0}
   1607c:	b	160b4 <__assert_fail@plt+0x5140>
   16080:	nop	{0}
   16084:	b	160b4 <__assert_fail@plt+0x5140>
   16088:	nop	{0}
   1608c:	b	160b4 <__assert_fail@plt+0x5140>
   16090:	nop	{0}
   16094:	b	160b4 <__assert_fail@plt+0x5140>
   16098:	nop	{0}
   1609c:	b	160b4 <__assert_fail@plt+0x5140>
   160a0:	nop	{0}
   160a4:	b	160b4 <__assert_fail@plt+0x5140>
   160a8:	nop	{0}
   160ac:	b	160b4 <__assert_fail@plt+0x5140>
   160b0:	nop	{0}
   160b4:	ldr	r3, [fp, #4]
   160b8:	cmp	r3, #2
   160bc:	bne	160d4 <__assert_fail@plt+0x5160>
   160c0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   160c4:	cmp	r3, #0
   160c8:	beq	160d4 <__assert_fail@plt+0x5160>
   160cc:	mov	r3, #4
   160d0:	str	r3, [fp, #4]
   160d4:	ldr	r3, [fp, #8]
   160d8:	bic	r3, r3, #2
   160dc:	ldr	r2, [fp, #20]
   160e0:	str	r2, [sp, #16]
   160e4:	ldr	r2, [fp, #16]
   160e8:	str	r2, [sp, #12]
   160ec:	mov	r2, #0
   160f0:	str	r2, [sp, #8]
   160f4:	str	r3, [sp, #4]
   160f8:	ldr	r3, [fp, #4]
   160fc:	str	r3, [sp]
   16100:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16104:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16108:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1610c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16110:	bl	14a5c <__assert_fail@plt+0x3ae8>
   16114:	mov	r3, r0
   16118:	mov	r0, r3
   1611c:	sub	sp, fp, #8
   16120:	ldr	r4, [sp]
   16124:	ldr	fp, [sp, #4]
   16128:	add	sp, sp, #8
   1612c:	pop	{pc}		; (ldr pc, [sp], #4)
   16130:	str	fp, [sp, #-8]!
   16134:	str	lr, [sp, #4]
   16138:	add	fp, sp, #4
   1613c:	sub	sp, sp, #56	; 0x38
   16140:	str	r0, [fp, #-24]	; 0xffffffe8
   16144:	str	r1, [fp, #-28]	; 0xffffffe4
   16148:	str	r2, [fp, #-32]	; 0xffffffe0
   1614c:	str	r3, [fp, #-36]	; 0xffffffdc
   16150:	ldr	r3, [fp, #4]
   16154:	cmp	r3, #0
   16158:	beq	16164 <__assert_fail@plt+0x51f0>
   1615c:	ldr	r3, [fp, #4]
   16160:	b	1616c <__assert_fail@plt+0x51f8>
   16164:	movw	r3, #45432	; 0xb178
   16168:	movt	r3, #2
   1616c:	str	r3, [fp, #-8]
   16170:	bl	10eb4 <__errno_location@plt>
   16174:	mov	r3, r0
   16178:	ldr	r3, [r3]
   1617c:	str	r3, [fp, #-12]
   16180:	ldr	r3, [fp, #-8]
   16184:	ldr	r3, [r3]
   16188:	ldr	r2, [fp, #-8]
   1618c:	ldr	r2, [r2, #4]
   16190:	ldr	r1, [fp, #-8]
   16194:	add	r1, r1, #8
   16198:	ldr	r0, [fp, #-8]
   1619c:	ldr	r0, [r0, #40]	; 0x28
   161a0:	ldr	ip, [fp, #-8]
   161a4:	ldr	ip, [ip, #44]	; 0x2c
   161a8:	str	ip, [sp, #16]
   161ac:	str	r0, [sp, #12]
   161b0:	str	r1, [sp, #8]
   161b4:	str	r2, [sp, #4]
   161b8:	str	r3, [sp]
   161bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   161c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161cc:	bl	14a5c <__assert_fail@plt+0x3ae8>
   161d0:	str	r0, [fp, #-16]
   161d4:	bl	10eb4 <__errno_location@plt>
   161d8:	mov	r2, r0
   161dc:	ldr	r3, [fp, #-12]
   161e0:	str	r3, [r2]
   161e4:	ldr	r3, [fp, #-16]
   161e8:	mov	r0, r3
   161ec:	sub	sp, fp, #4
   161f0:	ldr	fp, [sp]
   161f4:	add	sp, sp, #4
   161f8:	pop	{pc}		; (ldr pc, [sp], #4)
   161fc:	str	fp, [sp, #-8]!
   16200:	str	lr, [sp, #4]
   16204:	add	fp, sp, #4
   16208:	sub	sp, sp, #16
   1620c:	str	r0, [fp, #-8]
   16210:	str	r1, [fp, #-12]
   16214:	str	r2, [fp, #-16]
   16218:	ldr	r3, [fp, #-16]
   1621c:	mov	r2, #0
   16220:	ldr	r1, [fp, #-12]
   16224:	ldr	r0, [fp, #-8]
   16228:	bl	16244 <__assert_fail@plt+0x52d0>
   1622c:	mov	r3, r0
   16230:	mov	r0, r3
   16234:	sub	sp, fp, #4
   16238:	ldr	fp, [sp]
   1623c:	add	sp, sp, #4
   16240:	pop	{pc}		; (ldr pc, [sp], #4)
   16244:	str	fp, [sp, #-8]!
   16248:	str	lr, [sp, #4]
   1624c:	add	fp, sp, #4
   16250:	sub	sp, sp, #64	; 0x40
   16254:	str	r0, [fp, #-32]	; 0xffffffe0
   16258:	str	r1, [fp, #-36]	; 0xffffffdc
   1625c:	str	r2, [fp, #-40]	; 0xffffffd8
   16260:	str	r3, [fp, #-44]	; 0xffffffd4
   16264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16268:	cmp	r3, #0
   1626c:	beq	16278 <__assert_fail@plt+0x5304>
   16270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16274:	b	16280 <__assert_fail@plt+0x530c>
   16278:	movw	r3, #45432	; 0xb178
   1627c:	movt	r3, #2
   16280:	str	r3, [fp, #-8]
   16284:	bl	10eb4 <__errno_location@plt>
   16288:	mov	r3, r0
   1628c:	ldr	r3, [r3]
   16290:	str	r3, [fp, #-12]
   16294:	ldr	r3, [fp, #-8]
   16298:	ldr	r3, [r3, #4]
   1629c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   162a0:	cmp	r2, #0
   162a4:	moveq	r2, #1
   162a8:	movne	r2, #0
   162ac:	uxtb	r2, r2
   162b0:	orr	r3, r3, r2
   162b4:	str	r3, [fp, #-16]
   162b8:	ldr	r3, [fp, #-8]
   162bc:	ldr	r3, [r3]
   162c0:	ldr	r2, [fp, #-8]
   162c4:	add	r2, r2, #8
   162c8:	ldr	r1, [fp, #-8]
   162cc:	ldr	r1, [r1, #40]	; 0x28
   162d0:	ldr	r0, [fp, #-8]
   162d4:	ldr	r0, [r0, #44]	; 0x2c
   162d8:	str	r0, [sp, #16]
   162dc:	str	r1, [sp, #12]
   162e0:	str	r2, [sp, #8]
   162e4:	ldr	r2, [fp, #-16]
   162e8:	str	r2, [sp, #4]
   162ec:	str	r3, [sp]
   162f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   162f8:	mov	r1, #0
   162fc:	mov	r0, #0
   16300:	bl	14a5c <__assert_fail@plt+0x3ae8>
   16304:	mov	r3, r0
   16308:	add	r3, r3, #1
   1630c:	str	r3, [fp, #-20]	; 0xffffffec
   16310:	ldr	r0, [fp, #-20]	; 0xffffffec
   16314:	bl	17808 <__assert_fail@plt+0x6894>
   16318:	mov	r3, r0
   1631c:	str	r3, [fp, #-24]	; 0xffffffe8
   16320:	ldr	r3, [fp, #-8]
   16324:	ldr	r3, [r3]
   16328:	ldr	r2, [fp, #-8]
   1632c:	add	r2, r2, #8
   16330:	ldr	r1, [fp, #-8]
   16334:	ldr	r1, [r1, #40]	; 0x28
   16338:	ldr	r0, [fp, #-8]
   1633c:	ldr	r0, [r0, #44]	; 0x2c
   16340:	str	r0, [sp, #16]
   16344:	str	r1, [sp, #12]
   16348:	str	r2, [sp, #8]
   1634c:	ldr	r2, [fp, #-16]
   16350:	str	r2, [sp, #4]
   16354:	str	r3, [sp]
   16358:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1635c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16360:	ldr	r1, [fp, #-20]	; 0xffffffec
   16364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16368:	bl	14a5c <__assert_fail@plt+0x3ae8>
   1636c:	bl	10eb4 <__errno_location@plt>
   16370:	mov	r2, r0
   16374:	ldr	r3, [fp, #-12]
   16378:	str	r3, [r2]
   1637c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16380:	cmp	r3, #0
   16384:	beq	16398 <__assert_fail@plt+0x5424>
   16388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1638c:	sub	r2, r3, #1
   16390:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16394:	str	r2, [r3]
   16398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1639c:	mov	r0, r3
   163a0:	sub	sp, fp, #4
   163a4:	ldr	fp, [sp]
   163a8:	add	sp, sp, #4
   163ac:	pop	{pc}		; (ldr pc, [sp], #4)
   163b0:	str	fp, [sp, #-8]!
   163b4:	str	lr, [sp, #4]
   163b8:	add	fp, sp, #4
   163bc:	sub	sp, sp, #8
   163c0:	movw	r3, #45328	; 0xb110
   163c4:	movt	r3, #2
   163c8:	ldr	r3, [r3]
   163cc:	str	r3, [fp, #-12]
   163d0:	mov	r3, #1
   163d4:	str	r3, [fp, #-8]
   163d8:	b	16404 <__assert_fail@plt+0x5490>
   163dc:	ldr	r3, [fp, #-8]
   163e0:	lsl	r3, r3, #3
   163e4:	ldr	r2, [fp, #-12]
   163e8:	add	r3, r2, r3
   163ec:	ldr	r3, [r3, #4]
   163f0:	mov	r0, r3
   163f4:	bl	141b8 <__assert_fail@plt+0x3244>
   163f8:	ldr	r3, [fp, #-8]
   163fc:	add	r3, r3, #1
   16400:	str	r3, [fp, #-8]
   16404:	movw	r3, #45316	; 0xb104
   16408:	movt	r3, #2
   1640c:	ldr	r3, [r3]
   16410:	ldr	r2, [fp, #-8]
   16414:	cmp	r2, r3
   16418:	blt	163dc <__assert_fail@plt+0x5468>
   1641c:	ldr	r3, [fp, #-12]
   16420:	ldr	r2, [r3, #4]
   16424:	movw	r3, #45480	; 0xb1a8
   16428:	movt	r3, #2
   1642c:	cmp	r2, r3
   16430:	beq	16468 <__assert_fail@plt+0x54f4>
   16434:	ldr	r3, [fp, #-12]
   16438:	ldr	r3, [r3, #4]
   1643c:	mov	r0, r3
   16440:	bl	141b8 <__assert_fail@plt+0x3244>
   16444:	movw	r3, #45320	; 0xb108
   16448:	movt	r3, #2
   1644c:	mov	r2, #256	; 0x100
   16450:	str	r2, [r3]
   16454:	movw	r3, #45320	; 0xb108
   16458:	movt	r3, #2
   1645c:	movw	r2, #45480	; 0xb1a8
   16460:	movt	r2, #2
   16464:	str	r2, [r3, #4]
   16468:	ldr	r2, [fp, #-12]
   1646c:	movw	r3, #45320	; 0xb108
   16470:	movt	r3, #2
   16474:	cmp	r2, r3
   16478:	beq	16498 <__assert_fail@plt+0x5524>
   1647c:	ldr	r0, [fp, #-12]
   16480:	bl	141b8 <__assert_fail@plt+0x3244>
   16484:	movw	r3, #45328	; 0xb110
   16488:	movt	r3, #2
   1648c:	movw	r2, #45320	; 0xb108
   16490:	movt	r2, #2
   16494:	str	r2, [r3]
   16498:	movw	r3, #45316	; 0xb104
   1649c:	movt	r3, #2
   164a0:	mov	r2, #1
   164a4:	str	r2, [r3]
   164a8:	nop	{0}
   164ac:	sub	sp, fp, #4
   164b0:	ldr	fp, [sp]
   164b4:	add	sp, sp, #4
   164b8:	pop	{pc}		; (ldr pc, [sp], #4)
   164bc:	str	fp, [sp, #-8]!
   164c0:	str	lr, [sp, #4]
   164c4:	add	fp, sp, #4
   164c8:	sub	sp, sp, #80	; 0x50
   164cc:	str	r0, [fp, #-48]	; 0xffffffd0
   164d0:	str	r1, [fp, #-52]	; 0xffffffcc
   164d4:	str	r2, [fp, #-56]	; 0xffffffc8
   164d8:	str	r3, [fp, #-60]	; 0xffffffc4
   164dc:	bl	10eb4 <__errno_location@plt>
   164e0:	mov	r3, r0
   164e4:	ldr	r3, [r3]
   164e8:	str	r3, [fp, #-16]
   164ec:	movw	r3, #45328	; 0xb110
   164f0:	movt	r3, #2
   164f4:	ldr	r3, [r3]
   164f8:	str	r3, [fp, #-8]
   164fc:	mvn	r3, #-2147483648	; 0x80000000
   16500:	str	r3, [fp, #-20]	; 0xffffffec
   16504:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16508:	cmp	r3, #0
   1650c:	blt	16520 <__assert_fail@plt+0x55ac>
   16510:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16514:	ldr	r3, [fp, #-20]	; 0xffffffec
   16518:	cmp	r2, r3
   1651c:	blt	16524 <__assert_fail@plt+0x55b0>
   16520:	bl	10f5c <abort@plt>
   16524:	movw	r3, #45316	; 0xb104
   16528:	movt	r3, #2
   1652c:	ldr	r3, [r3]
   16530:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16534:	cmp	r2, r3
   16538:	blt	16630 <__assert_fail@plt+0x56bc>
   1653c:	ldr	r2, [fp, #-8]
   16540:	movw	r3, #45320	; 0xb108
   16544:	movt	r3, #2
   16548:	cmp	r2, r3
   1654c:	moveq	r3, #1
   16550:	movne	r3, #0
   16554:	strb	r3, [fp, #-21]	; 0xffffffeb
   16558:	movw	r3, #45316	; 0xb104
   1655c:	movt	r3, #2
   16560:	ldr	r3, [r3]
   16564:	str	r3, [fp, #-40]	; 0xffffffd8
   16568:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1656c:	cmp	r3, #0
   16570:	beq	1657c <__assert_fail@plt+0x5608>
   16574:	mov	r0, #0
   16578:	b	16580 <__assert_fail@plt+0x560c>
   1657c:	ldr	r0, [fp, #-8]
   16580:	movw	r3, #45316	; 0xb104
   16584:	movt	r3, #2
   16588:	ldr	r3, [r3]
   1658c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16590:	sub	r3, r2, r3
   16594:	add	r2, r3, #1
   16598:	sub	r1, fp, #40	; 0x28
   1659c:	mov	r3, #8
   165a0:	str	r3, [sp]
   165a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   165a8:	bl	17b68 <__assert_fail@plt+0x6bf4>
   165ac:	str	r0, [fp, #-8]
   165b0:	movw	r3, #45328	; 0xb110
   165b4:	movt	r3, #2
   165b8:	ldr	r2, [fp, #-8]
   165bc:	str	r2, [r3]
   165c0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   165c4:	cmp	r3, #0
   165c8:	beq	165e4 <__assert_fail@plt+0x5670>
   165cc:	ldr	r2, [fp, #-8]
   165d0:	movw	r3, #45320	; 0xb108
   165d4:	movt	r3, #2
   165d8:	mov	r1, r2
   165dc:	ldrd	r2, [r3]
   165e0:	strd	r2, [r1]
   165e4:	movw	r3, #45316	; 0xb104
   165e8:	movt	r3, #2
   165ec:	ldr	r3, [r3]
   165f0:	lsl	r3, r3, #3
   165f4:	ldr	r2, [fp, #-8]
   165f8:	add	r0, r2, r3
   165fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16600:	movw	r3, #45316	; 0xb104
   16604:	movt	r3, #2
   16608:	ldr	r3, [r3]
   1660c:	sub	r3, r2, r3
   16610:	lsl	r3, r3, #3
   16614:	mov	r2, r3
   16618:	mov	r1, #0
   1661c:	bl	10ecc <memset@plt>
   16620:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16624:	movw	r3, #45316	; 0xb104
   16628:	movt	r3, #2
   1662c:	str	r2, [r3]
   16630:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16634:	lsl	r3, r3, #3
   16638:	ldr	r2, [fp, #-8]
   1663c:	add	r3, r2, r3
   16640:	ldr	r3, [r3]
   16644:	str	r3, [fp, #-28]	; 0xffffffe4
   16648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1664c:	lsl	r3, r3, #3
   16650:	ldr	r2, [fp, #-8]
   16654:	add	r3, r2, r3
   16658:	ldr	r3, [r3, #4]
   1665c:	str	r3, [fp, #-12]
   16660:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16664:	ldr	r3, [r3, #4]
   16668:	orr	r3, r3, #1
   1666c:	str	r3, [fp, #-32]	; 0xffffffe0
   16670:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16674:	ldr	r3, [r3]
   16678:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1667c:	add	r2, r2, #8
   16680:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16684:	ldr	r1, [r1, #40]	; 0x28
   16688:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1668c:	ldr	r0, [r0, #44]	; 0x2c
   16690:	str	r0, [sp, #16]
   16694:	str	r1, [sp, #12]
   16698:	str	r2, [sp, #8]
   1669c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   166a0:	str	r2, [sp, #4]
   166a4:	str	r3, [sp]
   166a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   166b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   166b4:	ldr	r0, [fp, #-12]
   166b8:	bl	14a5c <__assert_fail@plt+0x3ae8>
   166bc:	str	r0, [fp, #-36]	; 0xffffffdc
   166c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   166c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166c8:	cmp	r2, r3
   166cc:	bhi	16784 <__assert_fail@plt+0x5810>
   166d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   166d4:	add	r3, r3, #1
   166d8:	str	r3, [fp, #-28]	; 0xffffffe4
   166dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   166e0:	lsl	r3, r3, #3
   166e4:	ldr	r2, [fp, #-8]
   166e8:	add	r3, r2, r3
   166ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   166f0:	str	r2, [r3]
   166f4:	ldr	r2, [fp, #-12]
   166f8:	movw	r3, #45480	; 0xb1a8
   166fc:	movt	r3, #2
   16700:	cmp	r2, r3
   16704:	beq	16710 <__assert_fail@plt+0x579c>
   16708:	ldr	r0, [fp, #-12]
   1670c:	bl	141b8 <__assert_fail@plt+0x3244>
   16710:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16714:	bl	17808 <__assert_fail@plt+0x6894>
   16718:	mov	r3, r0
   1671c:	str	r3, [fp, #-12]
   16720:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16724:	lsl	r3, r3, #3
   16728:	ldr	r2, [fp, #-8]
   1672c:	add	r3, r2, r3
   16730:	ldr	r2, [fp, #-12]
   16734:	str	r2, [r3, #4]
   16738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1673c:	ldr	r3, [r3]
   16740:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16744:	add	r2, r2, #8
   16748:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1674c:	ldr	r1, [r1, #40]	; 0x28
   16750:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16754:	ldr	r0, [r0, #44]	; 0x2c
   16758:	str	r0, [sp, #16]
   1675c:	str	r1, [sp, #12]
   16760:	str	r2, [sp, #8]
   16764:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16768:	str	r2, [sp, #4]
   1676c:	str	r3, [sp]
   16770:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16774:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16778:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1677c:	ldr	r0, [fp, #-12]
   16780:	bl	14a5c <__assert_fail@plt+0x3ae8>
   16784:	bl	10eb4 <__errno_location@plt>
   16788:	mov	r2, r0
   1678c:	ldr	r3, [fp, #-16]
   16790:	str	r3, [r2]
   16794:	ldr	r3, [fp, #-12]
   16798:	mov	r0, r3
   1679c:	sub	sp, fp, #4
   167a0:	ldr	fp, [sp]
   167a4:	add	sp, sp, #4
   167a8:	pop	{pc}		; (ldr pc, [sp], #4)
   167ac:	str	fp, [sp, #-8]!
   167b0:	str	lr, [sp, #4]
   167b4:	add	fp, sp, #4
   167b8:	sub	sp, sp, #8
   167bc:	str	r0, [fp, #-8]
   167c0:	str	r1, [fp, #-12]
   167c4:	movw	r3, #45432	; 0xb178
   167c8:	movt	r3, #2
   167cc:	mvn	r2, #0
   167d0:	ldr	r1, [fp, #-12]
   167d4:	ldr	r0, [fp, #-8]
   167d8:	bl	164bc <__assert_fail@plt+0x5548>
   167dc:	mov	r3, r0
   167e0:	mov	r0, r3
   167e4:	sub	sp, fp, #4
   167e8:	ldr	fp, [sp]
   167ec:	add	sp, sp, #4
   167f0:	pop	{pc}		; (ldr pc, [sp], #4)
   167f4:	str	fp, [sp, #-8]!
   167f8:	str	lr, [sp, #4]
   167fc:	add	fp, sp, #4
   16800:	sub	sp, sp, #16
   16804:	str	r0, [fp, #-8]
   16808:	str	r1, [fp, #-12]
   1680c:	str	r2, [fp, #-16]
   16810:	movw	r3, #45432	; 0xb178
   16814:	movt	r3, #2
   16818:	ldr	r2, [fp, #-16]
   1681c:	ldr	r1, [fp, #-12]
   16820:	ldr	r0, [fp, #-8]
   16824:	bl	164bc <__assert_fail@plt+0x5548>
   16828:	mov	r3, r0
   1682c:	mov	r0, r3
   16830:	sub	sp, fp, #4
   16834:	ldr	fp, [sp]
   16838:	add	sp, sp, #4
   1683c:	pop	{pc}		; (ldr pc, [sp], #4)
   16840:	str	fp, [sp, #-8]!
   16844:	str	lr, [sp, #4]
   16848:	add	fp, sp, #4
   1684c:	sub	sp, sp, #8
   16850:	str	r0, [fp, #-8]
   16854:	ldr	r1, [fp, #-8]
   16858:	mov	r0, #0
   1685c:	bl	167ac <__assert_fail@plt+0x5838>
   16860:	mov	r3, r0
   16864:	mov	r0, r3
   16868:	sub	sp, fp, #4
   1686c:	ldr	fp, [sp]
   16870:	add	sp, sp, #4
   16874:	pop	{pc}		; (ldr pc, [sp], #4)
   16878:	str	fp, [sp, #-8]!
   1687c:	str	lr, [sp, #4]
   16880:	add	fp, sp, #4
   16884:	sub	sp, sp, #8
   16888:	str	r0, [fp, #-8]
   1688c:	str	r1, [fp, #-12]
   16890:	ldr	r2, [fp, #-12]
   16894:	ldr	r1, [fp, #-8]
   16898:	mov	r0, #0
   1689c:	bl	167f4 <__assert_fail@plt+0x5880>
   168a0:	mov	r3, r0
   168a4:	mov	r0, r3
   168a8:	sub	sp, fp, #4
   168ac:	ldr	fp, [sp]
   168b0:	add	sp, sp, #4
   168b4:	pop	{pc}		; (ldr pc, [sp], #4)
   168b8:	str	fp, [sp, #-8]!
   168bc:	str	lr, [sp, #4]
   168c0:	add	fp, sp, #4
   168c4:	sub	sp, sp, #64	; 0x40
   168c8:	str	r0, [fp, #-56]	; 0xffffffc8
   168cc:	str	r1, [fp, #-60]	; 0xffffffc4
   168d0:	str	r2, [fp, #-64]	; 0xffffffc0
   168d4:	sub	r3, fp, #52	; 0x34
   168d8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   168dc:	mov	r0, r3
   168e0:	bl	148b8 <__assert_fail@plt+0x3944>
   168e4:	sub	r3, fp, #52	; 0x34
   168e8:	mvn	r2, #0
   168ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   168f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   168f4:	bl	164bc <__assert_fail@plt+0x5548>
   168f8:	mov	r3, r0
   168fc:	mov	r0, r3
   16900:	sub	sp, fp, #4
   16904:	ldr	fp, [sp]
   16908:	add	sp, sp, #4
   1690c:	pop	{pc}		; (ldr pc, [sp], #4)
   16910:	str	fp, [sp, #-8]!
   16914:	str	lr, [sp, #4]
   16918:	add	fp, sp, #4
   1691c:	sub	sp, sp, #64	; 0x40
   16920:	str	r0, [fp, #-56]	; 0xffffffc8
   16924:	str	r1, [fp, #-60]	; 0xffffffc4
   16928:	str	r2, [fp, #-64]	; 0xffffffc0
   1692c:	str	r3, [fp, #-68]	; 0xffffffbc
   16930:	sub	r3, fp, #52	; 0x34
   16934:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16938:	mov	r0, r3
   1693c:	bl	148b8 <__assert_fail@plt+0x3944>
   16940:	sub	r3, fp, #52	; 0x34
   16944:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16948:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1694c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16950:	bl	164bc <__assert_fail@plt+0x5548>
   16954:	mov	r3, r0
   16958:	mov	r0, r3
   1695c:	sub	sp, fp, #4
   16960:	ldr	fp, [sp]
   16964:	add	sp, sp, #4
   16968:	pop	{pc}		; (ldr pc, [sp], #4)
   1696c:	str	fp, [sp, #-8]!
   16970:	str	lr, [sp, #4]
   16974:	add	fp, sp, #4
   16978:	sub	sp, sp, #8
   1697c:	str	r0, [fp, #-8]
   16980:	str	r1, [fp, #-12]
   16984:	ldr	r2, [fp, #-12]
   16988:	ldr	r1, [fp, #-8]
   1698c:	mov	r0, #0
   16990:	bl	168b8 <__assert_fail@plt+0x5944>
   16994:	mov	r3, r0
   16998:	mov	r0, r3
   1699c:	sub	sp, fp, #4
   169a0:	ldr	fp, [sp]
   169a4:	add	sp, sp, #4
   169a8:	pop	{pc}		; (ldr pc, [sp], #4)
   169ac:	str	fp, [sp, #-8]!
   169b0:	str	lr, [sp, #4]
   169b4:	add	fp, sp, #4
   169b8:	sub	sp, sp, #16
   169bc:	str	r0, [fp, #-8]
   169c0:	str	r1, [fp, #-12]
   169c4:	str	r2, [fp, #-16]
   169c8:	ldr	r3, [fp, #-16]
   169cc:	ldr	r2, [fp, #-12]
   169d0:	ldr	r1, [fp, #-8]
   169d4:	mov	r0, #0
   169d8:	bl	16910 <__assert_fail@plt+0x599c>
   169dc:	mov	r3, r0
   169e0:	mov	r0, r3
   169e4:	sub	sp, fp, #4
   169e8:	ldr	fp, [sp]
   169ec:	add	sp, sp, #4
   169f0:	pop	{pc}		; (ldr pc, [sp], #4)
   169f4:	str	fp, [sp, #-8]!
   169f8:	str	lr, [sp, #4]
   169fc:	add	fp, sp, #4
   16a00:	sub	sp, sp, #64	; 0x40
   16a04:	str	r0, [fp, #-56]	; 0xffffffc8
   16a08:	str	r1, [fp, #-60]	; 0xffffffc4
   16a0c:	mov	r3, r2
   16a10:	strb	r3, [fp, #-61]	; 0xffffffc3
   16a14:	movw	r2, #45432	; 0xb178
   16a18:	movt	r2, #2
   16a1c:	sub	r3, fp, #52	; 0x34
   16a20:	ldrd	r0, [r2]
   16a24:	strd	r0, [r3]
   16a28:	ldrd	r0, [r2, #8]
   16a2c:	strd	r0, [r3, #8]
   16a30:	ldrd	r0, [r2, #16]
   16a34:	strd	r0, [r3, #16]
   16a38:	ldrd	r0, [r2, #24]
   16a3c:	strd	r0, [r3, #24]
   16a40:	ldrd	r0, [r2, #32]
   16a44:	strd	r0, [r3, #32]
   16a48:	ldrd	r0, [r2, #40]	; 0x28
   16a4c:	strd	r0, [r3, #40]	; 0x28
   16a50:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   16a54:	sub	r3, fp, #52	; 0x34
   16a58:	mov	r2, #1
   16a5c:	mov	r0, r3
   16a60:	bl	14718 <__assert_fail@plt+0x37a4>
   16a64:	sub	r3, fp, #52	; 0x34
   16a68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16a6c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16a70:	mov	r0, #0
   16a74:	bl	164bc <__assert_fail@plt+0x5548>
   16a78:	mov	r3, r0
   16a7c:	mov	r0, r3
   16a80:	sub	sp, fp, #4
   16a84:	ldr	fp, [sp]
   16a88:	add	sp, sp, #4
   16a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a90:	str	fp, [sp, #-8]!
   16a94:	str	lr, [sp, #4]
   16a98:	add	fp, sp, #4
   16a9c:	sub	sp, sp, #8
   16aa0:	str	r0, [fp, #-8]
   16aa4:	mov	r3, r1
   16aa8:	strb	r3, [fp, #-9]
   16aac:	ldrb	r3, [fp, #-9]
   16ab0:	mov	r2, r3
   16ab4:	mvn	r1, #0
   16ab8:	ldr	r0, [fp, #-8]
   16abc:	bl	169f4 <__assert_fail@plt+0x5a80>
   16ac0:	mov	r3, r0
   16ac4:	mov	r0, r3
   16ac8:	sub	sp, fp, #4
   16acc:	ldr	fp, [sp]
   16ad0:	add	sp, sp, #4
   16ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ad8:	str	fp, [sp, #-8]!
   16adc:	str	lr, [sp, #4]
   16ae0:	add	fp, sp, #4
   16ae4:	sub	sp, sp, #8
   16ae8:	str	r0, [fp, #-8]
   16aec:	mov	r1, #58	; 0x3a
   16af0:	ldr	r0, [fp, #-8]
   16af4:	bl	16a90 <__assert_fail@plt+0x5b1c>
   16af8:	mov	r3, r0
   16afc:	mov	r0, r3
   16b00:	sub	sp, fp, #4
   16b04:	ldr	fp, [sp]
   16b08:	add	sp, sp, #4
   16b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b10:	str	fp, [sp, #-8]!
   16b14:	str	lr, [sp, #4]
   16b18:	add	fp, sp, #4
   16b1c:	sub	sp, sp, #8
   16b20:	str	r0, [fp, #-8]
   16b24:	str	r1, [fp, #-12]
   16b28:	mov	r2, #58	; 0x3a
   16b2c:	ldr	r1, [fp, #-12]
   16b30:	ldr	r0, [fp, #-8]
   16b34:	bl	169f4 <__assert_fail@plt+0x5a80>
   16b38:	mov	r3, r0
   16b3c:	mov	r0, r3
   16b40:	sub	sp, fp, #4
   16b44:	ldr	fp, [sp]
   16b48:	add	sp, sp, #4
   16b4c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b50:	str	fp, [sp, #-8]!
   16b54:	str	lr, [sp, #4]
   16b58:	add	fp, sp, #4
   16b5c:	sub	sp, sp, #112	; 0x70
   16b60:	str	r0, [fp, #-56]	; 0xffffffc8
   16b64:	str	r1, [fp, #-60]	; 0xffffffc4
   16b68:	str	r2, [fp, #-64]	; 0xffffffc0
   16b6c:	sub	r3, fp, #116	; 0x74
   16b70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16b74:	mov	r0, r3
   16b78:	bl	148b8 <__assert_fail@plt+0x3944>
   16b7c:	sub	r3, fp, #52	; 0x34
   16b80:	sub	r2, fp, #116	; 0x74
   16b84:	ldrd	r0, [r2]
   16b88:	strd	r0, [r3]
   16b8c:	ldrd	r0, [r2, #8]
   16b90:	strd	r0, [r3, #8]
   16b94:	ldrd	r0, [r2, #16]
   16b98:	strd	r0, [r3, #16]
   16b9c:	ldrd	r0, [r2, #24]
   16ba0:	strd	r0, [r3, #24]
   16ba4:	ldrd	r0, [r2, #32]
   16ba8:	strd	r0, [r3, #32]
   16bac:	ldrd	r0, [r2, #40]	; 0x28
   16bb0:	strd	r0, [r3, #40]	; 0x28
   16bb4:	sub	r3, fp, #52	; 0x34
   16bb8:	mov	r2, #1
   16bbc:	mov	r1, #58	; 0x3a
   16bc0:	mov	r0, r3
   16bc4:	bl	14718 <__assert_fail@plt+0x37a4>
   16bc8:	sub	r3, fp, #52	; 0x34
   16bcc:	mvn	r2, #0
   16bd0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16bd4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16bd8:	bl	164bc <__assert_fail@plt+0x5548>
   16bdc:	mov	r3, r0
   16be0:	mov	r0, r3
   16be4:	sub	sp, fp, #4
   16be8:	ldr	fp, [sp]
   16bec:	add	sp, sp, #4
   16bf0:	pop	{pc}		; (ldr pc, [sp], #4)
   16bf4:	str	fp, [sp, #-8]!
   16bf8:	str	lr, [sp, #4]
   16bfc:	add	fp, sp, #4
   16c00:	sub	sp, sp, #24
   16c04:	str	r0, [fp, #-8]
   16c08:	str	r1, [fp, #-12]
   16c0c:	str	r2, [fp, #-16]
   16c10:	str	r3, [fp, #-20]	; 0xffffffec
   16c14:	mvn	r3, #0
   16c18:	str	r3, [sp]
   16c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c20:	ldr	r2, [fp, #-16]
   16c24:	ldr	r1, [fp, #-12]
   16c28:	ldr	r0, [fp, #-8]
   16c2c:	bl	16c48 <__assert_fail@plt+0x5cd4>
   16c30:	mov	r3, r0
   16c34:	mov	r0, r3
   16c38:	sub	sp, fp, #4
   16c3c:	ldr	fp, [sp]
   16c40:	add	sp, sp, #4
   16c44:	pop	{pc}		; (ldr pc, [sp], #4)
   16c48:	str	fp, [sp, #-8]!
   16c4c:	str	lr, [sp, #4]
   16c50:	add	fp, sp, #4
   16c54:	sub	sp, sp, #64	; 0x40
   16c58:	str	r0, [fp, #-56]	; 0xffffffc8
   16c5c:	str	r1, [fp, #-60]	; 0xffffffc4
   16c60:	str	r2, [fp, #-64]	; 0xffffffc0
   16c64:	str	r3, [fp, #-68]	; 0xffffffbc
   16c68:	movw	r2, #45432	; 0xb178
   16c6c:	movt	r2, #2
   16c70:	sub	r3, fp, #52	; 0x34
   16c74:	ldrd	r0, [r2]
   16c78:	strd	r0, [r3]
   16c7c:	ldrd	r0, [r2, #8]
   16c80:	strd	r0, [r3, #8]
   16c84:	ldrd	r0, [r2, #16]
   16c88:	strd	r0, [r3, #16]
   16c8c:	ldrd	r0, [r2, #24]
   16c90:	strd	r0, [r3, #24]
   16c94:	ldrd	r0, [r2, #32]
   16c98:	strd	r0, [r3, #32]
   16c9c:	ldrd	r0, [r2, #40]	; 0x28
   16ca0:	strd	r0, [r3, #40]	; 0x28
   16ca4:	sub	r3, fp, #52	; 0x34
   16ca8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16cac:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16cb0:	mov	r0, r3
   16cb4:	bl	14830 <__assert_fail@plt+0x38bc>
   16cb8:	sub	r3, fp, #52	; 0x34
   16cbc:	ldr	r2, [fp, #4]
   16cc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16cc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16cc8:	bl	164bc <__assert_fail@plt+0x5548>
   16ccc:	mov	r3, r0
   16cd0:	mov	r0, r3
   16cd4:	sub	sp, fp, #4
   16cd8:	ldr	fp, [sp]
   16cdc:	add	sp, sp, #4
   16ce0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ce4:	str	fp, [sp, #-8]!
   16ce8:	str	lr, [sp, #4]
   16cec:	add	fp, sp, #4
   16cf0:	sub	sp, sp, #16
   16cf4:	str	r0, [fp, #-8]
   16cf8:	str	r1, [fp, #-12]
   16cfc:	str	r2, [fp, #-16]
   16d00:	ldr	r3, [fp, #-16]
   16d04:	ldr	r2, [fp, #-12]
   16d08:	ldr	r1, [fp, #-8]
   16d0c:	mov	r0, #0
   16d10:	bl	16bf4 <__assert_fail@plt+0x5c80>
   16d14:	mov	r3, r0
   16d18:	mov	r0, r3
   16d1c:	sub	sp, fp, #4
   16d20:	ldr	fp, [sp]
   16d24:	add	sp, sp, #4
   16d28:	pop	{pc}		; (ldr pc, [sp], #4)
   16d2c:	str	fp, [sp, #-8]!
   16d30:	str	lr, [sp, #4]
   16d34:	add	fp, sp, #4
   16d38:	sub	sp, sp, #24
   16d3c:	str	r0, [fp, #-8]
   16d40:	str	r1, [fp, #-12]
   16d44:	str	r2, [fp, #-16]
   16d48:	str	r3, [fp, #-20]	; 0xffffffec
   16d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d50:	str	r3, [sp]
   16d54:	ldr	r3, [fp, #-16]
   16d58:	ldr	r2, [fp, #-12]
   16d5c:	ldr	r1, [fp, #-8]
   16d60:	mov	r0, #0
   16d64:	bl	16c48 <__assert_fail@plt+0x5cd4>
   16d68:	mov	r3, r0
   16d6c:	mov	r0, r3
   16d70:	sub	sp, fp, #4
   16d74:	ldr	fp, [sp]
   16d78:	add	sp, sp, #4
   16d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d80:	str	fp, [sp, #-8]!
   16d84:	str	lr, [sp, #4]
   16d88:	add	fp, sp, #4
   16d8c:	sub	sp, sp, #16
   16d90:	str	r0, [fp, #-8]
   16d94:	str	r1, [fp, #-12]
   16d98:	str	r2, [fp, #-16]
   16d9c:	movw	r3, #45332	; 0xb114
   16da0:	movt	r3, #2
   16da4:	ldr	r2, [fp, #-16]
   16da8:	ldr	r1, [fp, #-12]
   16dac:	ldr	r0, [fp, #-8]
   16db0:	bl	164bc <__assert_fail@plt+0x5548>
   16db4:	mov	r3, r0
   16db8:	mov	r0, r3
   16dbc:	sub	sp, fp, #4
   16dc0:	ldr	fp, [sp]
   16dc4:	add	sp, sp, #4
   16dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   16dcc:	str	fp, [sp, #-8]!
   16dd0:	str	lr, [sp, #4]
   16dd4:	add	fp, sp, #4
   16dd8:	sub	sp, sp, #8
   16ddc:	str	r0, [fp, #-8]
   16de0:	str	r1, [fp, #-12]
   16de4:	ldr	r2, [fp, #-12]
   16de8:	ldr	r1, [fp, #-8]
   16dec:	mov	r0, #0
   16df0:	bl	16d80 <__assert_fail@plt+0x5e0c>
   16df4:	mov	r3, r0
   16df8:	mov	r0, r3
   16dfc:	sub	sp, fp, #4
   16e00:	ldr	fp, [sp]
   16e04:	add	sp, sp, #4
   16e08:	pop	{pc}		; (ldr pc, [sp], #4)
   16e0c:	str	fp, [sp, #-8]!
   16e10:	str	lr, [sp, #4]
   16e14:	add	fp, sp, #4
   16e18:	sub	sp, sp, #8
   16e1c:	str	r0, [fp, #-8]
   16e20:	str	r1, [fp, #-12]
   16e24:	mvn	r2, #0
   16e28:	ldr	r1, [fp, #-12]
   16e2c:	ldr	r0, [fp, #-8]
   16e30:	bl	16d80 <__assert_fail@plt+0x5e0c>
   16e34:	mov	r3, r0
   16e38:	mov	r0, r3
   16e3c:	sub	sp, fp, #4
   16e40:	ldr	fp, [sp]
   16e44:	add	sp, sp, #4
   16e48:	pop	{pc}		; (ldr pc, [sp], #4)
   16e4c:	str	fp, [sp, #-8]!
   16e50:	str	lr, [sp, #4]
   16e54:	add	fp, sp, #4
   16e58:	sub	sp, sp, #8
   16e5c:	str	r0, [fp, #-8]
   16e60:	ldr	r1, [fp, #-8]
   16e64:	mov	r0, #0
   16e68:	bl	16e0c <__assert_fail@plt+0x5e98>
   16e6c:	mov	r3, r0
   16e70:	mov	r0, r3
   16e74:	sub	sp, fp, #4
   16e78:	ldr	fp, [sp]
   16e7c:	add	sp, sp, #4
   16e80:	pop	{pc}		; (ldr pc, [sp], #4)
   16e84:	str	fp, [sp, #-8]!
   16e88:	str	lr, [sp, #4]
   16e8c:	add	fp, sp, #4
   16e90:	sub	sp, sp, #24
   16e94:	str	r0, [fp, #-16]
   16e98:	str	r1, [fp, #-20]	; 0xffffffec
   16e9c:	str	r2, [fp, #-24]	; 0xffffffe8
   16ea0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ea4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ea8:	ldr	r0, [fp, #-16]
   16eac:	bl	10d1c <read@plt>
   16eb0:	str	r0, [fp, #-8]
   16eb4:	ldr	r3, [fp, #-8]
   16eb8:	cmp	r3, #0
   16ebc:	blt	16ec8 <__assert_fail@plt+0x5f54>
   16ec0:	ldr	r3, [fp, #-8]
   16ec4:	b	16f24 <__assert_fail@plt+0x5fb0>
   16ec8:	bl	10eb4 <__errno_location@plt>
   16ecc:	mov	r3, r0
   16ed0:	ldr	r3, [r3]
   16ed4:	cmp	r3, #4
   16ed8:	beq	16f1c <__assert_fail@plt+0x5fa8>
   16edc:	bl	10eb4 <__errno_location@plt>
   16ee0:	mov	r3, r0
   16ee4:	ldr	r3, [r3]
   16ee8:	cmp	r3, #22
   16eec:	bne	16f14 <__assert_fail@plt+0x5fa0>
   16ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ef4:	mov	r3, #0
   16ef8:	movt	r3, #32752	; 0x7ff0
   16efc:	cmp	r2, r3
   16f00:	bls	16f14 <__assert_fail@plt+0x5fa0>
   16f04:	mov	r3, #0
   16f08:	movt	r3, #32752	; 0x7ff0
   16f0c:	str	r3, [fp, #-24]	; 0xffffffe8
   16f10:	b	16f20 <__assert_fail@plt+0x5fac>
   16f14:	ldr	r3, [fp, #-8]
   16f18:	b	16f24 <__assert_fail@plt+0x5fb0>
   16f1c:	nop	{0}
   16f20:	b	16ea0 <__assert_fail@plt+0x5f2c>
   16f24:	mov	r0, r3
   16f28:	sub	sp, fp, #4
   16f2c:	ldr	fp, [sp]
   16f30:	add	sp, sp, #4
   16f34:	pop	{pc}		; (ldr pc, [sp], #4)
   16f38:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16f3c:	strd	r6, [sp, #8]
   16f40:	str	fp, [sp, #16]
   16f44:	str	lr, [sp, #20]
   16f48:	add	fp, sp, #20
   16f4c:	sub	sp, sp, #48	; 0x30
   16f50:	str	r0, [fp, #-24]	; 0xffffffe8
   16f54:	str	r1, [fp, #-28]	; 0xffffffe4
   16f58:	str	r2, [fp, #-32]	; 0xffffffe0
   16f5c:	str	r3, [fp, #-36]	; 0xffffffdc
   16f60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16f64:	cmp	r3, #0
   16f68:	beq	16f90 <__assert_fail@plt+0x601c>
   16f6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f70:	str	r3, [sp]
   16f74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16f78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16f7c:	movw	r1, #43600	; 0xaa50
   16f80:	movt	r1, #1
   16f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f88:	bl	10ea8 <fprintf@plt>
   16f8c:	b	16fa8 <__assert_fail@plt+0x6034>
   16f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16f98:	movw	r1, #43612	; 0xaa5c
   16f9c:	movt	r1, #1
   16fa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fa4:	bl	10ea8 <fprintf@plt>
   16fa8:	movw	r0, #43620	; 0xaa64
   16fac:	movt	r0, #1
   16fb0:	bl	10e78 <gettext@plt>
   16fb4:	mov	r2, r0
   16fb8:	movw	r3, #2022	; 0x7e6
   16fbc:	movw	r1, #44404	; 0xad74
   16fc0:	movt	r1, #1
   16fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fc8:	bl	10ea8 <fprintf@plt>
   16fcc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fd0:	mov	r0, #10
   16fd4:	bl	10d7c <fputc_unlocked@plt>
   16fd8:	movw	r0, #43624	; 0xaa68
   16fdc:	movt	r0, #1
   16fe0:	bl	10e78 <gettext@plt>
   16fe4:	mov	r3, r0
   16fe8:	movw	r2, #43796	; 0xab14
   16fec:	movt	r2, #1
   16ff0:	mov	r1, r3
   16ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff8:	bl	10ea8 <fprintf@plt>
   16ffc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17000:	mov	r0, #10
   17004:	bl	10d7c <fputc_unlocked@plt>
   17008:	ldr	r3, [fp, #8]
   1700c:	cmp	r3, #9
   17010:	ldrls	pc, [pc, r3, lsl #2]
   17014:	b	173f4 <__assert_fail@plt+0x6480>
   17018:	andeq	r7, r1, r0, lsr #9
   1701c:	andeq	r7, r1, r0, asr #32
   17020:	andeq	r7, r1, r8, rrx
   17024:	muleq	r1, r8, r0
   17028:	ldrdeq	r7, [r1], -ip
   1702c:	andeq	r7, r1, r8, lsr r1
   17030:	andeq	r7, r1, r4, lsr #3
   17034:	andeq	r7, r1, r0, lsr #4
   17038:	andeq	r7, r1, ip, lsr #5
   1703c:	andeq	r7, r1, r8, asr #6
   17040:	movw	r0, #43832	; 0xab38
   17044:	movt	r0, #1
   17048:	bl	10e78 <gettext@plt>
   1704c:	mov	r1, r0
   17050:	ldr	r3, [fp, #4]
   17054:	ldr	r3, [r3]
   17058:	mov	r2, r3
   1705c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17060:	bl	10ea8 <fprintf@plt>
   17064:	b	174a4 <__assert_fail@plt+0x6530>
   17068:	movw	r0, #43848	; 0xab48
   1706c:	movt	r0, #1
   17070:	bl	10e78 <gettext@plt>
   17074:	mov	r1, r0
   17078:	ldr	r3, [fp, #4]
   1707c:	ldr	r2, [r3]
   17080:	ldr	r3, [fp, #4]
   17084:	add	r3, r3, #4
   17088:	ldr	r3, [r3]
   1708c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17090:	bl	10ea8 <fprintf@plt>
   17094:	b	174a4 <__assert_fail@plt+0x6530>
   17098:	movw	r0, #43872	; 0xab60
   1709c:	movt	r0, #1
   170a0:	bl	10e78 <gettext@plt>
   170a4:	ldr	r3, [fp, #4]
   170a8:	ldr	r2, [r3]
   170ac:	ldr	r3, [fp, #4]
   170b0:	add	r3, r3, #4
   170b4:	ldr	r1, [r3]
   170b8:	ldr	r3, [fp, #4]
   170bc:	add	r3, r3, #8
   170c0:	ldr	r3, [r3]
   170c4:	str	r3, [sp]
   170c8:	mov	r3, r1
   170cc:	mov	r1, r0
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	bl	10ea8 <fprintf@plt>
   170d8:	b	174a4 <__assert_fail@plt+0x6530>
   170dc:	movw	r0, #43900	; 0xab7c
   170e0:	movt	r0, #1
   170e4:	bl	10e78 <gettext@plt>
   170e8:	mov	ip, r0
   170ec:	ldr	r3, [fp, #4]
   170f0:	ldr	r1, [r3]
   170f4:	ldr	r3, [fp, #4]
   170f8:	add	r3, r3, #4
   170fc:	ldr	r0, [r3]
   17100:	ldr	r3, [fp, #4]
   17104:	add	r3, r3, #8
   17108:	ldr	r3, [r3]
   1710c:	ldr	r2, [fp, #4]
   17110:	add	r2, r2, #12
   17114:	ldr	r2, [r2]
   17118:	str	r2, [sp, #4]
   1711c:	str	r3, [sp]
   17120:	mov	r3, r0
   17124:	mov	r2, r1
   17128:	mov	r1, ip
   1712c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17130:	bl	10ea8 <fprintf@plt>
   17134:	b	174a4 <__assert_fail@plt+0x6530>
   17138:	movw	r0, #43932	; 0xab9c
   1713c:	movt	r0, #1
   17140:	bl	10e78 <gettext@plt>
   17144:	mov	lr, r0
   17148:	ldr	r3, [fp, #4]
   1714c:	ldr	r0, [r3]
   17150:	ldr	r3, [fp, #4]
   17154:	add	r3, r3, #4
   17158:	ldr	ip, [r3]
   1715c:	ldr	r3, [fp, #4]
   17160:	add	r3, r3, #8
   17164:	ldr	r3, [r3]
   17168:	ldr	r2, [fp, #4]
   1716c:	add	r2, r2, #12
   17170:	ldr	r2, [r2]
   17174:	ldr	r1, [fp, #4]
   17178:	add	r1, r1, #16
   1717c:	ldr	r1, [r1]
   17180:	str	r1, [sp, #8]
   17184:	str	r2, [sp, #4]
   17188:	str	r3, [sp]
   1718c:	mov	r3, ip
   17190:	mov	r2, r0
   17194:	mov	r1, lr
   17198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1719c:	bl	10ea8 <fprintf@plt>
   171a0:	b	174a4 <__assert_fail@plt+0x6530>
   171a4:	movw	r0, #43968	; 0xabc0
   171a8:	movt	r0, #1
   171ac:	bl	10e78 <gettext@plt>
   171b0:	mov	r4, r0
   171b4:	ldr	r3, [fp, #4]
   171b8:	ldr	ip, [r3]
   171bc:	ldr	r3, [fp, #4]
   171c0:	add	r3, r3, #4
   171c4:	ldr	lr, [r3]
   171c8:	ldr	r3, [fp, #4]
   171cc:	add	r3, r3, #8
   171d0:	ldr	r3, [r3]
   171d4:	ldr	r2, [fp, #4]
   171d8:	add	r2, r2, #12
   171dc:	ldr	r2, [r2]
   171e0:	ldr	r1, [fp, #4]
   171e4:	add	r1, r1, #16
   171e8:	ldr	r1, [r1]
   171ec:	ldr	r0, [fp, #4]
   171f0:	add	r0, r0, #20
   171f4:	ldr	r0, [r0]
   171f8:	str	r0, [sp, #12]
   171fc:	str	r1, [sp, #8]
   17200:	str	r2, [sp, #4]
   17204:	str	r3, [sp]
   17208:	mov	r3, lr
   1720c:	mov	r2, ip
   17210:	mov	r1, r4
   17214:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17218:	bl	10ea8 <fprintf@plt>
   1721c:	b	174a4 <__assert_fail@plt+0x6530>
   17220:	movw	r0, #44008	; 0xabe8
   17224:	movt	r0, #1
   17228:	bl	10e78 <gettext@plt>
   1722c:	mov	r5, r0
   17230:	ldr	r3, [fp, #4]
   17234:	ldr	lr, [r3]
   17238:	ldr	r3, [fp, #4]
   1723c:	add	r3, r3, #4
   17240:	ldr	r4, [r3]
   17244:	ldr	r3, [fp, #4]
   17248:	add	r3, r3, #8
   1724c:	ldr	r3, [r3]
   17250:	ldr	r2, [fp, #4]
   17254:	add	r2, r2, #12
   17258:	ldr	r2, [r2]
   1725c:	ldr	r1, [fp, #4]
   17260:	add	r1, r1, #16
   17264:	ldr	r1, [r1]
   17268:	ldr	r0, [fp, #4]
   1726c:	add	r0, r0, #20
   17270:	ldr	r0, [r0]
   17274:	ldr	ip, [fp, #4]
   17278:	add	ip, ip, #24
   1727c:	ldr	ip, [ip]
   17280:	str	ip, [sp, #16]
   17284:	str	r0, [sp, #12]
   17288:	str	r1, [sp, #8]
   1728c:	str	r2, [sp, #4]
   17290:	str	r3, [sp]
   17294:	mov	r3, r4
   17298:	mov	r2, lr
   1729c:	mov	r1, r5
   172a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172a4:	bl	10ea8 <fprintf@plt>
   172a8:	b	174a4 <__assert_fail@plt+0x6530>
   172ac:	movw	r0, #44052	; 0xac14
   172b0:	movt	r0, #1
   172b4:	bl	10e78 <gettext@plt>
   172b8:	mov	r6, r0
   172bc:	ldr	r3, [fp, #4]
   172c0:	ldr	r4, [r3]
   172c4:	ldr	r3, [fp, #4]
   172c8:	add	r3, r3, #4
   172cc:	ldr	r5, [r3]
   172d0:	ldr	r3, [fp, #4]
   172d4:	add	r3, r3, #8
   172d8:	ldr	r3, [r3]
   172dc:	ldr	r2, [fp, #4]
   172e0:	add	r2, r2, #12
   172e4:	ldr	r2, [r2]
   172e8:	ldr	r1, [fp, #4]
   172ec:	add	r1, r1, #16
   172f0:	ldr	r1, [r1]
   172f4:	ldr	r0, [fp, #4]
   172f8:	add	r0, r0, #20
   172fc:	ldr	r0, [r0]
   17300:	ldr	ip, [fp, #4]
   17304:	add	ip, ip, #24
   17308:	ldr	ip, [ip]
   1730c:	ldr	lr, [fp, #4]
   17310:	add	lr, lr, #28
   17314:	ldr	lr, [lr]
   17318:	str	lr, [sp, #20]
   1731c:	str	ip, [sp, #16]
   17320:	str	r0, [sp, #12]
   17324:	str	r1, [sp, #8]
   17328:	str	r2, [sp, #4]
   1732c:	str	r3, [sp]
   17330:	mov	r3, r5
   17334:	mov	r2, r4
   17338:	mov	r1, r6
   1733c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17340:	bl	10ea8 <fprintf@plt>
   17344:	b	174a4 <__assert_fail@plt+0x6530>
   17348:	movw	r0, #44100	; 0xac44
   1734c:	movt	r0, #1
   17350:	bl	10e78 <gettext@plt>
   17354:	mov	r7, r0
   17358:	ldr	r3, [fp, #4]
   1735c:	ldr	r5, [r3]
   17360:	ldr	r3, [fp, #4]
   17364:	add	r3, r3, #4
   17368:	ldr	r6, [r3]
   1736c:	ldr	r3, [fp, #4]
   17370:	add	r3, r3, #8
   17374:	ldr	r3, [r3]
   17378:	ldr	r2, [fp, #4]
   1737c:	add	r2, r2, #12
   17380:	ldr	r2, [r2]
   17384:	ldr	r1, [fp, #4]
   17388:	add	r1, r1, #16
   1738c:	ldr	r1, [r1]
   17390:	ldr	r0, [fp, #4]
   17394:	add	r0, r0, #20
   17398:	ldr	r0, [r0]
   1739c:	ldr	ip, [fp, #4]
   173a0:	add	ip, ip, #24
   173a4:	ldr	ip, [ip]
   173a8:	ldr	lr, [fp, #4]
   173ac:	add	lr, lr, #28
   173b0:	ldr	lr, [lr]
   173b4:	ldr	r4, [fp, #4]
   173b8:	add	r4, r4, #32
   173bc:	ldr	r4, [r4]
   173c0:	str	r4, [sp, #24]
   173c4:	str	lr, [sp, #20]
   173c8:	str	ip, [sp, #16]
   173cc:	str	r0, [sp, #12]
   173d0:	str	r1, [sp, #8]
   173d4:	str	r2, [sp, #4]
   173d8:	str	r3, [sp]
   173dc:	mov	r3, r6
   173e0:	mov	r2, r5
   173e4:	mov	r1, r7
   173e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173ec:	bl	10ea8 <fprintf@plt>
   173f0:	b	174a4 <__assert_fail@plt+0x6530>
   173f4:	movw	r0, #44152	; 0xac78
   173f8:	movt	r0, #1
   173fc:	bl	10e78 <gettext@plt>
   17400:	mov	r7, r0
   17404:	ldr	r3, [fp, #4]
   17408:	ldr	r5, [r3]
   1740c:	ldr	r3, [fp, #4]
   17410:	add	r3, r3, #4
   17414:	ldr	r6, [r3]
   17418:	ldr	r3, [fp, #4]
   1741c:	add	r3, r3, #8
   17420:	ldr	r3, [r3]
   17424:	ldr	r2, [fp, #4]
   17428:	add	r2, r2, #12
   1742c:	ldr	r2, [r2]
   17430:	ldr	r1, [fp, #4]
   17434:	add	r1, r1, #16
   17438:	ldr	r1, [r1]
   1743c:	ldr	r0, [fp, #4]
   17440:	add	r0, r0, #20
   17444:	ldr	r0, [r0]
   17448:	ldr	ip, [fp, #4]
   1744c:	add	ip, ip, #24
   17450:	ldr	ip, [ip]
   17454:	ldr	lr, [fp, #4]
   17458:	add	lr, lr, #28
   1745c:	ldr	lr, [lr]
   17460:	ldr	r4, [fp, #4]
   17464:	add	r4, r4, #32
   17468:	ldr	r4, [r4]
   1746c:	str	r4, [sp, #24]
   17470:	str	lr, [sp, #20]
   17474:	str	ip, [sp, #16]
   17478:	str	r0, [sp, #12]
   1747c:	str	r1, [sp, #8]
   17480:	str	r2, [sp, #4]
   17484:	str	r3, [sp]
   17488:	mov	r3, r6
   1748c:	mov	r2, r5
   17490:	mov	r1, r7
   17494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17498:	bl	10ea8 <fprintf@plt>
   1749c:	b	174a4 <__assert_fail@plt+0x6530>
   174a0:	nop	{0}
   174a4:	nop	{0}
   174a8:	sub	sp, fp, #20
   174ac:	ldrd	r4, [sp]
   174b0:	ldrd	r6, [sp, #8]
   174b4:	ldr	fp, [sp, #16]
   174b8:	add	sp, sp, #20
   174bc:	pop	{pc}		; (ldr pc, [sp], #4)
   174c0:	str	fp, [sp, #-8]!
   174c4:	str	lr, [sp, #4]
   174c8:	add	fp, sp, #4
   174cc:	sub	sp, sp, #32
   174d0:	str	r0, [fp, #-16]
   174d4:	str	r1, [fp, #-20]	; 0xffffffec
   174d8:	str	r2, [fp, #-24]	; 0xffffffe8
   174dc:	str	r3, [fp, #-28]	; 0xffffffe4
   174e0:	mov	r3, #0
   174e4:	str	r3, [fp, #-8]
   174e8:	b	174f8 <__assert_fail@plt+0x6584>
   174ec:	ldr	r3, [fp, #-8]
   174f0:	add	r3, r3, #1
   174f4:	str	r3, [fp, #-8]
   174f8:	ldr	r3, [fp, #-8]
   174fc:	lsl	r3, r3, #2
   17500:	ldr	r2, [fp, #4]
   17504:	add	r3, r2, r3
   17508:	ldr	r3, [r3]
   1750c:	cmp	r3, #0
   17510:	bne	174ec <__assert_fail@plt+0x6578>
   17514:	ldr	r3, [fp, #-8]
   17518:	str	r3, [sp, #4]
   1751c:	ldr	r3, [fp, #4]
   17520:	str	r3, [sp]
   17524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17528:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1752c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17530:	ldr	r0, [fp, #-16]
   17534:	bl	16f38 <__assert_fail@plt+0x5fc4>
   17538:	nop	{0}
   1753c:	sub	sp, fp, #4
   17540:	ldr	fp, [sp]
   17544:	add	sp, sp, #4
   17548:	pop	{pc}		; (ldr pc, [sp], #4)
   1754c:	str	fp, [sp, #-8]!
   17550:	str	lr, [sp, #4]
   17554:	add	fp, sp, #4
   17558:	sub	sp, sp, #72	; 0x48
   1755c:	str	r0, [fp, #-56]	; 0xffffffc8
   17560:	str	r1, [fp, #-60]	; 0xffffffc4
   17564:	str	r2, [fp, #-64]	; 0xffffffc0
   17568:	str	r3, [fp, #-68]	; 0xffffffbc
   1756c:	mov	r3, #0
   17570:	str	r3, [fp, #-8]
   17574:	b	17584 <__assert_fail@plt+0x6610>
   17578:	ldr	r3, [fp, #-8]
   1757c:	add	r3, r3, #1
   17580:	str	r3, [fp, #-8]
   17584:	ldr	r3, [fp, #-8]
   17588:	cmp	r3, #9
   1758c:	bhi	175d0 <__assert_fail@plt+0x665c>
   17590:	ldr	r3, [fp, #4]
   17594:	add	r2, r3, #4
   17598:	str	r2, [fp, #4]
   1759c:	ldr	r2, [r3]
   175a0:	ldr	r3, [fp, #-8]
   175a4:	lsl	r3, r3, #2
   175a8:	sub	r1, fp, #4
   175ac:	add	r3, r1, r3
   175b0:	str	r2, [r3, #-44]	; 0xffffffd4
   175b4:	ldr	r3, [fp, #-8]
   175b8:	lsl	r3, r3, #2
   175bc:	sub	r2, fp, #4
   175c0:	add	r3, r2, r3
   175c4:	ldr	r3, [r3, #-44]	; 0xffffffd4
   175c8:	cmp	r3, #0
   175cc:	bne	17578 <__assert_fail@plt+0x6604>
   175d0:	ldr	r3, [fp, #-8]
   175d4:	str	r3, [sp, #4]
   175d8:	sub	r3, fp, #48	; 0x30
   175dc:	str	r3, [sp]
   175e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   175e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   175e8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   175ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   175f0:	bl	16f38 <__assert_fail@plt+0x5fc4>
   175f4:	nop	{0}
   175f8:	sub	sp, fp, #4
   175fc:	ldr	fp, [sp]
   17600:	add	sp, sp, #4
   17604:	pop	{pc}		; (ldr pc, [sp], #4)
   17608:	push	{r3}		; (str r3, [sp, #-4]!)
   1760c:	str	fp, [sp, #-8]!
   17610:	str	lr, [sp, #4]
   17614:	add	fp, sp, #4
   17618:	sub	sp, sp, #36	; 0x24
   1761c:	str	r0, [fp, #-20]	; 0xffffffec
   17620:	str	r1, [fp, #-24]	; 0xffffffe8
   17624:	str	r2, [fp, #-28]	; 0xffffffe4
   17628:	add	r3, fp, #8
   1762c:	str	r3, [fp, #-12]
   17630:	ldr	r3, [fp, #-12]
   17634:	str	r3, [sp]
   17638:	ldr	r3, [fp, #4]
   1763c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17640:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17644:	ldr	r0, [fp, #-20]	; 0xffffffec
   17648:	bl	1754c <__assert_fail@plt+0x65d8>
   1764c:	nop	{0}
   17650:	sub	sp, fp, #4
   17654:	ldr	fp, [sp]
   17658:	ldr	lr, [sp, #4]
   1765c:	add	sp, sp, #8
   17660:	add	sp, sp, #4
   17664:	bx	lr
   17668:	str	fp, [sp, #-8]!
   1766c:	str	lr, [sp, #4]
   17670:	add	fp, sp, #4
   17674:	movw	r3, #45404	; 0xb15c
   17678:	movt	r3, #2
   1767c:	ldr	r3, [r3]
   17680:	mov	r1, r3
   17684:	mov	r0, #10
   17688:	bl	10d7c <fputc_unlocked@plt>
   1768c:	movw	r0, #44212	; 0xacb4
   17690:	movt	r0, #1
   17694:	bl	10e78 <gettext@plt>
   17698:	mov	r3, r0
   1769c:	movw	r1, #44232	; 0xacc8
   176a0:	movt	r1, #1
   176a4:	mov	r0, r3
   176a8:	bl	10d10 <printf@plt>
   176ac:	movw	r0, #44256	; 0xace0
   176b0:	movt	r0, #1
   176b4:	bl	10e78 <gettext@plt>
   176b8:	mov	r3, r0
   176bc:	movw	r2, #44276	; 0xacf4
   176c0:	movt	r2, #1
   176c4:	movw	r1, #44316	; 0xad1c
   176c8:	movt	r1, #1
   176cc:	mov	r0, r3
   176d0:	bl	10d10 <printf@plt>
   176d4:	movw	r0, #44332	; 0xad2c
   176d8:	movt	r0, #1
   176dc:	bl	10e78 <gettext@plt>
   176e0:	mov	r3, r0
   176e4:	movw	r1, #44372	; 0xad54
   176e8:	movt	r1, #1
   176ec:	mov	r0, r3
   176f0:	bl	10d10 <printf@plt>
   176f4:	nop	{0}
   176f8:	sub	sp, fp, #4
   176fc:	ldr	fp, [sp]
   17700:	add	sp, sp, #4
   17704:	pop	{pc}		; (ldr pc, [sp], #4)
   17708:	str	fp, [sp, #-8]!
   1770c:	str	lr, [sp, #4]
   17710:	add	fp, sp, #4
   17714:	sub	sp, sp, #16
   17718:	str	r0, [fp, #-8]
   1771c:	str	r1, [fp, #-12]
   17720:	str	r2, [fp, #-16]
   17724:	ldr	r2, [fp, #-16]
   17728:	ldr	r1, [fp, #-12]
   1772c:	ldr	r0, [fp, #-8]
   17730:	bl	178ec <__assert_fail@plt+0x6978>
   17734:	mov	r3, r0
   17738:	mov	r0, r3
   1773c:	sub	sp, fp, #4
   17740:	ldr	fp, [sp]
   17744:	add	sp, sp, #4
   17748:	pop	{pc}		; (ldr pc, [sp], #4)
   1774c:	str	fp, [sp, #-8]!
   17750:	str	lr, [sp, #4]
   17754:	add	fp, sp, #4
   17758:	sub	sp, sp, #8
   1775c:	str	r0, [fp, #-8]
   17760:	ldr	r3, [fp, #-8]
   17764:	cmp	r3, #0
   17768:	bne	17770 <__assert_fail@plt+0x67fc>
   1776c:	bl	17ffc <__assert_fail@plt+0x7088>
   17770:	ldr	r3, [fp, #-8]
   17774:	mov	r0, r3
   17778:	sub	sp, fp, #4
   1777c:	ldr	fp, [sp]
   17780:	add	sp, sp, #4
   17784:	pop	{pc}		; (ldr pc, [sp], #4)
   17788:	str	fp, [sp, #-8]!
   1778c:	str	lr, [sp, #4]
   17790:	add	fp, sp, #4
   17794:	sub	sp, sp, #8
   17798:	str	r0, [fp, #-8]
   1779c:	ldr	r0, [fp, #-8]
   177a0:	bl	18c08 <__assert_fail@plt+0x7c94>
   177a4:	mov	r3, r0
   177a8:	mov	r0, r3
   177ac:	bl	1774c <__assert_fail@plt+0x67d8>
   177b0:	mov	r3, r0
   177b4:	mov	r0, r3
   177b8:	sub	sp, fp, #4
   177bc:	ldr	fp, [sp]
   177c0:	add	sp, sp, #4
   177c4:	pop	{pc}		; (ldr pc, [sp], #4)
   177c8:	str	fp, [sp, #-8]!
   177cc:	str	lr, [sp, #4]
   177d0:	add	fp, sp, #4
   177d4:	sub	sp, sp, #8
   177d8:	str	r0, [fp, #-8]
   177dc:	ldr	r0, [fp, #-8]
   177e0:	bl	1922c <__assert_fail@plt+0x82b8>
   177e4:	mov	r3, r0
   177e8:	mov	r0, r3
   177ec:	bl	1774c <__assert_fail@plt+0x67d8>
   177f0:	mov	r3, r0
   177f4:	mov	r0, r3
   177f8:	sub	sp, fp, #4
   177fc:	ldr	fp, [sp]
   17800:	add	sp, sp, #4
   17804:	pop	{pc}		; (ldr pc, [sp], #4)
   17808:	str	fp, [sp, #-8]!
   1780c:	str	lr, [sp, #4]
   17810:	add	fp, sp, #4
   17814:	sub	sp, sp, #8
   17818:	str	r0, [fp, #-8]
   1781c:	ldr	r0, [fp, #-8]
   17820:	bl	17788 <__assert_fail@plt+0x6814>
   17824:	mov	r3, r0
   17828:	mov	r0, r3
   1782c:	sub	sp, fp, #4
   17830:	ldr	fp, [sp]
   17834:	add	sp, sp, #4
   17838:	pop	{pc}		; (ldr pc, [sp], #4)
   1783c:	str	fp, [sp, #-8]!
   17840:	str	lr, [sp, #4]
   17844:	add	fp, sp, #4
   17848:	sub	sp, sp, #16
   1784c:	str	r0, [fp, #-16]
   17850:	str	r1, [fp, #-20]	; 0xffffffec
   17854:	ldr	r1, [fp, #-20]	; 0xffffffec
   17858:	ldr	r0, [fp, #-16]
   1785c:	bl	18c98 <__assert_fail@plt+0x7d24>
   17860:	str	r0, [fp, #-8]
   17864:	ldr	r3, [fp, #-8]
   17868:	cmp	r3, #0
   1786c:	bne	1788c <__assert_fail@plt+0x6918>
   17870:	ldr	r3, [fp, #-16]
   17874:	cmp	r3, #0
   17878:	beq	17888 <__assert_fail@plt+0x6914>
   1787c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17880:	cmp	r3, #0
   17884:	beq	1788c <__assert_fail@plt+0x6918>
   17888:	bl	17ffc <__assert_fail@plt+0x7088>
   1788c:	ldr	r3, [fp, #-8]
   17890:	mov	r0, r3
   17894:	sub	sp, fp, #4
   17898:	ldr	fp, [sp]
   1789c:	add	sp, sp, #4
   178a0:	pop	{pc}		; (ldr pc, [sp], #4)
   178a4:	str	fp, [sp, #-8]!
   178a8:	str	lr, [sp, #4]
   178ac:	add	fp, sp, #4
   178b0:	sub	sp, sp, #8
   178b4:	str	r0, [fp, #-8]
   178b8:	str	r1, [fp, #-12]
   178bc:	ldr	r1, [fp, #-12]
   178c0:	ldr	r0, [fp, #-8]
   178c4:	bl	19264 <__assert_fail@plt+0x82f0>
   178c8:	mov	r3, r0
   178cc:	mov	r0, r3
   178d0:	bl	1774c <__assert_fail@plt+0x67d8>
   178d4:	mov	r3, r0
   178d8:	mov	r0, r3
   178dc:	sub	sp, fp, #4
   178e0:	ldr	fp, [sp]
   178e4:	add	sp, sp, #4
   178e8:	pop	{pc}		; (ldr pc, [sp], #4)
   178ec:	str	fp, [sp, #-8]!
   178f0:	str	lr, [sp, #4]
   178f4:	add	fp, sp, #4
   178f8:	sub	sp, sp, #24
   178fc:	str	r0, [fp, #-16]
   17900:	str	r1, [fp, #-20]	; 0xffffffec
   17904:	str	r2, [fp, #-24]	; 0xffffffe8
   17908:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1790c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17910:	ldr	r0, [fp, #-16]
   17914:	bl	19494 <__assert_fail@plt+0x8520>
   17918:	str	r0, [fp, #-8]
   1791c:	ldr	r3, [fp, #-8]
   17920:	cmp	r3, #0
   17924:	bne	17950 <__assert_fail@plt+0x69dc>
   17928:	ldr	r3, [fp, #-16]
   1792c:	cmp	r3, #0
   17930:	beq	1794c <__assert_fail@plt+0x69d8>
   17934:	ldr	r3, [fp, #-20]	; 0xffffffec
   17938:	cmp	r3, #0
   1793c:	beq	17950 <__assert_fail@plt+0x69dc>
   17940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17944:	cmp	r3, #0
   17948:	beq	17950 <__assert_fail@plt+0x69dc>
   1794c:	bl	17ffc <__assert_fail@plt+0x7088>
   17950:	ldr	r3, [fp, #-8]
   17954:	mov	r0, r3
   17958:	sub	sp, fp, #4
   1795c:	ldr	fp, [sp]
   17960:	add	sp, sp, #4
   17964:	pop	{pc}		; (ldr pc, [sp], #4)
   17968:	str	fp, [sp, #-8]!
   1796c:	str	lr, [sp, #4]
   17970:	add	fp, sp, #4
   17974:	sub	sp, sp, #16
   17978:	str	r0, [fp, #-8]
   1797c:	str	r1, [fp, #-12]
   17980:	str	r2, [fp, #-16]
   17984:	ldr	r2, [fp, #-16]
   17988:	ldr	r1, [fp, #-12]
   1798c:	ldr	r0, [fp, #-8]
   17990:	bl	19304 <__assert_fail@plt+0x8390>
   17994:	mov	r3, r0
   17998:	mov	r0, r3
   1799c:	bl	1774c <__assert_fail@plt+0x67d8>
   179a0:	mov	r3, r0
   179a4:	mov	r0, r3
   179a8:	sub	sp, fp, #4
   179ac:	ldr	fp, [sp]
   179b0:	add	sp, sp, #4
   179b4:	pop	{pc}		; (ldr pc, [sp], #4)
   179b8:	str	fp, [sp, #-8]!
   179bc:	str	lr, [sp, #4]
   179c0:	add	fp, sp, #4
   179c4:	sub	sp, sp, #8
   179c8:	str	r0, [fp, #-8]
   179cc:	str	r1, [fp, #-12]
   179d0:	ldr	r2, [fp, #-12]
   179d4:	ldr	r1, [fp, #-8]
   179d8:	mov	r0, #0
   179dc:	bl	178ec <__assert_fail@plt+0x6978>
   179e0:	mov	r3, r0
   179e4:	mov	r0, r3
   179e8:	sub	sp, fp, #4
   179ec:	ldr	fp, [sp]
   179f0:	add	sp, sp, #4
   179f4:	pop	{pc}		; (ldr pc, [sp], #4)
   179f8:	str	fp, [sp, #-8]!
   179fc:	str	lr, [sp, #4]
   17a00:	add	fp, sp, #4
   17a04:	sub	sp, sp, #8
   17a08:	str	r0, [fp, #-8]
   17a0c:	str	r1, [fp, #-12]
   17a10:	ldr	r2, [fp, #-12]
   17a14:	ldr	r1, [fp, #-8]
   17a18:	mov	r0, #0
   17a1c:	bl	17968 <__assert_fail@plt+0x69f4>
   17a20:	mov	r3, r0
   17a24:	mov	r0, r3
   17a28:	sub	sp, fp, #4
   17a2c:	ldr	fp, [sp]
   17a30:	add	sp, sp, #4
   17a34:	pop	{pc}		; (ldr pc, [sp], #4)
   17a38:	str	fp, [sp, #-8]!
   17a3c:	str	lr, [sp, #4]
   17a40:	add	fp, sp, #4
   17a44:	sub	sp, sp, #8
   17a48:	str	r0, [fp, #-8]
   17a4c:	str	r1, [fp, #-12]
   17a50:	mov	r2, #1
   17a54:	ldr	r1, [fp, #-12]
   17a58:	ldr	r0, [fp, #-8]
   17a5c:	bl	17a78 <__assert_fail@plt+0x6b04>
   17a60:	mov	r3, r0
   17a64:	mov	r0, r3
   17a68:	sub	sp, fp, #4
   17a6c:	ldr	fp, [sp]
   17a70:	add	sp, sp, #4
   17a74:	pop	{pc}		; (ldr pc, [sp], #4)
   17a78:	str	fp, [sp, #-8]!
   17a7c:	str	lr, [sp, #4]
   17a80:	add	fp, sp, #4
   17a84:	sub	sp, sp, #24
   17a88:	str	r0, [fp, #-16]
   17a8c:	str	r1, [fp, #-20]	; 0xffffffec
   17a90:	str	r2, [fp, #-24]	; 0xffffffe8
   17a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   17a98:	ldr	r3, [r3]
   17a9c:	str	r3, [fp, #-8]
   17aa0:	ldr	r3, [fp, #-16]
   17aa4:	cmp	r3, #0
   17aa8:	bne	17af0 <__assert_fail@plt+0x6b7c>
   17aac:	ldr	r3, [fp, #-8]
   17ab0:	cmp	r3, #0
   17ab4:	bne	17b2c <__assert_fail@plt+0x6bb8>
   17ab8:	mov	r2, #64	; 0x40
   17abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ac0:	udiv	r3, r2, r3
   17ac4:	str	r3, [fp, #-8]
   17ac8:	ldr	r3, [fp, #-8]
   17acc:	cmp	r3, #0
   17ad0:	moveq	r3, #1
   17ad4:	movne	r3, #0
   17ad8:	uxtb	r3, r3
   17adc:	mov	r2, r3
   17ae0:	ldr	r3, [fp, #-8]
   17ae4:	add	r3, r2, r3
   17ae8:	str	r3, [fp, #-8]
   17aec:	b	17b2c <__assert_fail@plt+0x6bb8>
   17af0:	ldr	r2, [fp, #-8]
   17af4:	ldr	r3, [fp, #-8]
   17af8:	lsr	r3, r3, #1
   17afc:	add	r3, r3, #1
   17b00:	mov	r1, #0
   17b04:	adds	r3, r2, r3
   17b08:	bcc	17b10 <__assert_fail@plt+0x6b9c>
   17b0c:	mov	r1, #1
   17b10:	str	r3, [fp, #-8]
   17b14:	mov	r3, r1
   17b18:	and	r3, r3, #1
   17b1c:	uxtb	r3, r3
   17b20:	cmp	r3, #0
   17b24:	beq	17b2c <__assert_fail@plt+0x6bb8>
   17b28:	bl	17ffc <__assert_fail@plt+0x7088>
   17b2c:	ldr	r3, [fp, #-8]
   17b30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17b34:	mov	r1, r3
   17b38:	ldr	r0, [fp, #-16]
   17b3c:	bl	178ec <__assert_fail@plt+0x6978>
   17b40:	str	r0, [fp, #-16]
   17b44:	ldr	r2, [fp, #-8]
   17b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b4c:	str	r2, [r3]
   17b50:	ldr	r3, [fp, #-16]
   17b54:	mov	r0, r3
   17b58:	sub	sp, fp, #4
   17b5c:	ldr	fp, [sp]
   17b60:	add	sp, sp, #4
   17b64:	pop	{pc}		; (ldr pc, [sp], #4)
   17b68:	str	fp, [sp, #-8]!
   17b6c:	str	lr, [sp, #4]
   17b70:	add	fp, sp, #4
   17b74:	sub	sp, sp, #32
   17b78:	str	r0, [fp, #-24]	; 0xffffffe8
   17b7c:	str	r1, [fp, #-28]	; 0xffffffe4
   17b80:	str	r2, [fp, #-32]	; 0xffffffe0
   17b84:	str	r3, [fp, #-36]	; 0xffffffdc
   17b88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17b8c:	ldr	r3, [r3]
   17b90:	str	r3, [fp, #-8]
   17b94:	ldr	r3, [fp, #-8]
   17b98:	asr	r3, r3, #1
   17b9c:	mov	r1, #0
   17ba0:	ldr	r2, [fp, #-8]
   17ba4:	adds	r3, r2, r3
   17ba8:	bvc	17bb0 <__assert_fail@plt+0x6c3c>
   17bac:	mov	r1, #1
   17bb0:	str	r3, [fp, #-16]
   17bb4:	mov	r3, r1
   17bb8:	and	r3, r3, #1
   17bbc:	uxtb	r3, r3
   17bc0:	cmp	r3, #0
   17bc4:	beq	17bd0 <__assert_fail@plt+0x6c5c>
   17bc8:	mvn	r3, #-2147483648	; 0x80000000
   17bcc:	str	r3, [fp, #-16]
   17bd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bd4:	cmp	r3, #0
   17bd8:	blt	17bf4 <__assert_fail@plt+0x6c80>
   17bdc:	ldr	r3, [fp, #-16]
   17be0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17be4:	cmp	r2, r3
   17be8:	bge	17bf4 <__assert_fail@plt+0x6c80>
   17bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bf0:	str	r3, [fp, #-16]
   17bf4:	ldr	r2, [fp, #-16]
   17bf8:	mov	lr, #0
   17bfc:	ldr	r3, [fp, #4]
   17c00:	smull	r2, r3, r2, r3
   17c04:	mov	r0, #0
   17c08:	mov	r1, #0
   17c0c:	mov	r0, r3
   17c10:	asr	r1, r3, #31
   17c14:	asr	ip, r2, #31
   17c18:	cmp	ip, r0
   17c1c:	beq	17c24 <__assert_fail@plt+0x6cb0>
   17c20:	mov	lr, #1
   17c24:	mov	r3, r2
   17c28:	str	r3, [fp, #-20]	; 0xffffffec
   17c2c:	mov	r3, lr
   17c30:	and	r3, r3, #1
   17c34:	uxtb	r3, r3
   17c38:	cmp	r3, #0
   17c3c:	beq	17c48 <__assert_fail@plt+0x6cd4>
   17c40:	mvn	r3, #-2147483648	; 0x80000000
   17c44:	b	17c60 <__assert_fail@plt+0x6cec>
   17c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   17c4c:	cmp	r3, #63	; 0x3f
   17c50:	bgt	17c5c <__assert_fail@plt+0x6ce8>
   17c54:	mov	r3, #64	; 0x40
   17c58:	b	17c60 <__assert_fail@plt+0x6cec>
   17c5c:	mov	r3, #0
   17c60:	str	r3, [fp, #-12]
   17c64:	ldr	r3, [fp, #-12]
   17c68:	cmp	r3, #0
   17c6c:	beq	17ca4 <__assert_fail@plt+0x6d30>
   17c70:	ldr	r2, [fp, #-12]
   17c74:	ldr	r3, [fp, #4]
   17c78:	sdiv	r3, r2, r3
   17c7c:	str	r3, [fp, #-16]
   17c80:	ldr	r3, [fp, #-12]
   17c84:	ldr	r2, [fp, #4]
   17c88:	sdiv	r2, r3, r2
   17c8c:	ldr	r1, [fp, #4]
   17c90:	mul	r2, r1, r2
   17c94:	sub	r3, r3, r2
   17c98:	ldr	r2, [fp, #-12]
   17c9c:	sub	r3, r2, r3
   17ca0:	str	r3, [fp, #-20]	; 0xffffffec
   17ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ca8:	cmp	r3, #0
   17cac:	bne	17cbc <__assert_fail@plt+0x6d48>
   17cb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17cb4:	mov	r2, #0
   17cb8:	str	r2, [r3]
   17cbc:	ldr	r2, [fp, #-16]
   17cc0:	ldr	r3, [fp, #-8]
   17cc4:	sub	r3, r2, r3
   17cc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17ccc:	cmp	r2, r3
   17cd0:	ble	17d70 <__assert_fail@plt+0x6dfc>
   17cd4:	mov	r1, #0
   17cd8:	ldr	r2, [fp, #-8]
   17cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17ce0:	adds	r3, r2, r3
   17ce4:	bvc	17cec <__assert_fail@plt+0x6d78>
   17ce8:	mov	r1, #1
   17cec:	str	r3, [fp, #-16]
   17cf0:	mov	r3, r1
   17cf4:	and	r3, r3, #1
   17cf8:	uxtb	r3, r3
   17cfc:	cmp	r3, #0
   17d00:	bne	17d6c <__assert_fail@plt+0x6df8>
   17d04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d08:	cmp	r3, #0
   17d0c:	blt	17d20 <__assert_fail@plt+0x6dac>
   17d10:	ldr	r3, [fp, #-16]
   17d14:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17d18:	cmp	r2, r3
   17d1c:	blt	17d6c <__assert_fail@plt+0x6df8>
   17d20:	ldr	r2, [fp, #-16]
   17d24:	mov	lr, #0
   17d28:	ldr	r3, [fp, #4]
   17d2c:	smull	r2, r3, r2, r3
   17d30:	mov	r0, #0
   17d34:	mov	r1, #0
   17d38:	mov	r0, r3
   17d3c:	asr	r1, r3, #31
   17d40:	asr	ip, r2, #31
   17d44:	cmp	ip, r0
   17d48:	beq	17d50 <__assert_fail@plt+0x6ddc>
   17d4c:	mov	lr, #1
   17d50:	mov	r3, r2
   17d54:	str	r3, [fp, #-20]	; 0xffffffec
   17d58:	mov	r3, lr
   17d5c:	and	r3, r3, #1
   17d60:	uxtb	r3, r3
   17d64:	cmp	r3, #0
   17d68:	beq	17d70 <__assert_fail@plt+0x6dfc>
   17d6c:	bl	17ffc <__assert_fail@plt+0x7088>
   17d70:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d74:	mov	r1, r3
   17d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d7c:	bl	1783c <__assert_fail@plt+0x68c8>
   17d80:	str	r0, [fp, #-24]	; 0xffffffe8
   17d84:	ldr	r2, [fp, #-16]
   17d88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17d8c:	str	r2, [r3]
   17d90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d94:	mov	r0, r3
   17d98:	sub	sp, fp, #4
   17d9c:	ldr	fp, [sp]
   17da0:	add	sp, sp, #4
   17da4:	pop	{pc}		; (ldr pc, [sp], #4)
   17da8:	str	fp, [sp, #-8]!
   17dac:	str	lr, [sp, #4]
   17db0:	add	fp, sp, #4
   17db4:	sub	sp, sp, #8
   17db8:	str	r0, [fp, #-8]
   17dbc:	mov	r1, #1
   17dc0:	ldr	r0, [fp, #-8]
   17dc4:	bl	17e18 <__assert_fail@plt+0x6ea4>
   17dc8:	mov	r3, r0
   17dcc:	mov	r0, r3
   17dd0:	sub	sp, fp, #4
   17dd4:	ldr	fp, [sp]
   17dd8:	add	sp, sp, #4
   17ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   17de0:	str	fp, [sp, #-8]!
   17de4:	str	lr, [sp, #4]
   17de8:	add	fp, sp, #4
   17dec:	sub	sp, sp, #8
   17df0:	str	r0, [fp, #-8]
   17df4:	mov	r1, #1
   17df8:	ldr	r0, [fp, #-8]
   17dfc:	bl	17e60 <__assert_fail@plt+0x6eec>
   17e00:	mov	r3, r0
   17e04:	mov	r0, r3
   17e08:	sub	sp, fp, #4
   17e0c:	ldr	fp, [sp]
   17e10:	add	sp, sp, #4
   17e14:	pop	{pc}		; (ldr pc, [sp], #4)
   17e18:	str	fp, [sp, #-8]!
   17e1c:	str	lr, [sp, #4]
   17e20:	add	fp, sp, #4
   17e24:	sub	sp, sp, #8
   17e28:	str	r0, [fp, #-8]
   17e2c:	str	r1, [fp, #-12]
   17e30:	ldr	r1, [fp, #-12]
   17e34:	ldr	r0, [fp, #-8]
   17e38:	bl	18b38 <__assert_fail@plt+0x7bc4>
   17e3c:	mov	r3, r0
   17e40:	mov	r0, r3
   17e44:	bl	1774c <__assert_fail@plt+0x67d8>
   17e48:	mov	r3, r0
   17e4c:	mov	r0, r3
   17e50:	sub	sp, fp, #4
   17e54:	ldr	fp, [sp]
   17e58:	add	sp, sp, #4
   17e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e60:	str	fp, [sp, #-8]!
   17e64:	str	lr, [sp, #4]
   17e68:	add	fp, sp, #4
   17e6c:	sub	sp, sp, #8
   17e70:	str	r0, [fp, #-8]
   17e74:	str	r1, [fp, #-12]
   17e78:	ldr	r1, [fp, #-12]
   17e7c:	ldr	r0, [fp, #-8]
   17e80:	bl	192c0 <__assert_fail@plt+0x834c>
   17e84:	mov	r3, r0
   17e88:	mov	r0, r3
   17e8c:	bl	1774c <__assert_fail@plt+0x67d8>
   17e90:	mov	r3, r0
   17e94:	mov	r0, r3
   17e98:	sub	sp, fp, #4
   17e9c:	ldr	fp, [sp]
   17ea0:	add	sp, sp, #4
   17ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   17ea8:	str	fp, [sp, #-8]!
   17eac:	str	lr, [sp, #4]
   17eb0:	add	fp, sp, #4
   17eb4:	sub	sp, sp, #8
   17eb8:	str	r0, [fp, #-8]
   17ebc:	str	r1, [fp, #-12]
   17ec0:	ldr	r0, [fp, #-12]
   17ec4:	bl	17788 <__assert_fail@plt+0x6814>
   17ec8:	mov	r3, r0
   17ecc:	ldr	r2, [fp, #-12]
   17ed0:	ldr	r1, [fp, #-8]
   17ed4:	mov	r0, r3
   17ed8:	bl	10d4c <memcpy@plt>
   17edc:	mov	r3, r0
   17ee0:	mov	r0, r3
   17ee4:	sub	sp, fp, #4
   17ee8:	ldr	fp, [sp]
   17eec:	add	sp, sp, #4
   17ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef4:	str	fp, [sp, #-8]!
   17ef8:	str	lr, [sp, #4]
   17efc:	add	fp, sp, #4
   17f00:	sub	sp, sp, #8
   17f04:	str	r0, [fp, #-8]
   17f08:	str	r1, [fp, #-12]
   17f0c:	ldr	r0, [fp, #-12]
   17f10:	bl	177c8 <__assert_fail@plt+0x6854>
   17f14:	mov	r3, r0
   17f18:	mov	r0, r3
   17f1c:	ldr	r3, [fp, #-12]
   17f20:	mov	r2, r3
   17f24:	ldr	r1, [fp, #-8]
   17f28:	bl	10d4c <memcpy@plt>
   17f2c:	mov	r3, r0
   17f30:	mov	r0, r3
   17f34:	sub	sp, fp, #4
   17f38:	ldr	fp, [sp]
   17f3c:	add	sp, sp, #4
   17f40:	pop	{pc}		; (ldr pc, [sp], #4)
   17f44:	str	fp, [sp, #-8]!
   17f48:	str	lr, [sp, #4]
   17f4c:	add	fp, sp, #4
   17f50:	sub	sp, sp, #16
   17f54:	str	r0, [fp, #-16]
   17f58:	str	r1, [fp, #-20]	; 0xffffffec
   17f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f60:	add	r3, r3, #1
   17f64:	mov	r0, r3
   17f68:	bl	177c8 <__assert_fail@plt+0x6854>
   17f6c:	mov	r3, r0
   17f70:	str	r3, [fp, #-8]
   17f74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f78:	ldr	r2, [fp, #-8]
   17f7c:	add	r3, r2, r3
   17f80:	mov	r2, #0
   17f84:	strb	r2, [r3]
   17f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f8c:	mov	r2, r3
   17f90:	ldr	r1, [fp, #-16]
   17f94:	ldr	r0, [fp, #-8]
   17f98:	bl	10d4c <memcpy@plt>
   17f9c:	mov	r3, r0
   17fa0:	mov	r0, r3
   17fa4:	sub	sp, fp, #4
   17fa8:	ldr	fp, [sp]
   17fac:	add	sp, sp, #4
   17fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   17fb4:	str	fp, [sp, #-8]!
   17fb8:	str	lr, [sp, #4]
   17fbc:	add	fp, sp, #4
   17fc0:	sub	sp, sp, #8
   17fc4:	str	r0, [fp, #-8]
   17fc8:	ldr	r0, [fp, #-8]
   17fcc:	bl	10e84 <strlen@plt>
   17fd0:	mov	r3, r0
   17fd4:	add	r3, r3, #1
   17fd8:	mov	r1, r3
   17fdc:	ldr	r0, [fp, #-8]
   17fe0:	bl	17ea8 <__assert_fail@plt+0x6f34>
   17fe4:	mov	r3, r0
   17fe8:	mov	r0, r3
   17fec:	sub	sp, fp, #4
   17ff0:	ldr	fp, [sp]
   17ff4:	add	sp, sp, #4
   17ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   17ffc:	strd	r4, [sp, #-16]!
   18000:	str	fp, [sp, #8]
   18004:	str	lr, [sp, #12]
   18008:	add	fp, sp, #12
   1800c:	movw	r3, #45312	; 0xb100
   18010:	movt	r3, #2
   18014:	ldr	r4, [r3]
   18018:	movw	r0, #44452	; 0xada4
   1801c:	movt	r0, #1
   18020:	bl	10e78 <gettext@plt>
   18024:	mov	r3, r0
   18028:	movw	r2, #44472	; 0xadb8
   1802c:	movt	r2, #1
   18030:	mov	r1, #0
   18034:	mov	r0, r4
   18038:	bl	10e0c <error@plt>
   1803c:	bl	10f5c <abort@plt>
   18040:	push	{fp}		; (str fp, [sp, #-4]!)
   18044:	add	fp, sp, #0
   18048:	nop	{0}
   1804c:	add	sp, fp, #0
   18050:	pop	{fp}		; (ldr fp, [sp], #4)
   18054:	bx	lr
   18058:	str	fp, [sp, #-8]!
   1805c:	str	lr, [sp, #4]
   18060:	add	fp, sp, #4
   18064:	sub	sp, sp, #8
   18068:	str	r0, [fp, #-8]
   1806c:	str	r1, [fp, #-12]
   18070:	ldr	r1, [fp, #-12]
   18074:	ldr	r0, [fp, #-8]
   18078:	bl	18d78 <__assert_fail@plt+0x7e04>
   1807c:	mov	r3, r0
   18080:	cmp	r3, #0
   18084:	bge	1808c <__assert_fail@plt+0x7118>
   18088:	bl	18040 <__assert_fail@plt+0x70cc>
   1808c:	nop	{0}
   18090:	sub	sp, fp, #4
   18094:	ldr	fp, [sp]
   18098:	add	sp, sp, #4
   1809c:	pop	{pc}		; (ldr pc, [sp], #4)
   180a0:	strd	r4, [sp, #-16]!
   180a4:	str	fp, [sp, #8]
   180a8:	str	lr, [sp, #12]
   180ac:	add	fp, sp, #12
   180b0:	sub	sp, sp, #40	; 0x28
   180b4:	str	r0, [fp, #-32]	; 0xffffffe0
   180b8:	str	r1, [fp, #-36]	; 0xffffffdc
   180bc:	strd	r2, [fp, #-44]	; 0xffffffd4
   180c0:	sub	r2, fp, #28
   180c4:	ldr	r3, [fp, #12]
   180c8:	str	r3, [sp]
   180cc:	mov	r3, r2
   180d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   180d4:	mov	r1, #0
   180d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180dc:	bl	184e4 <__assert_fail@plt+0x7570>
   180e0:	str	r0, [fp, #-16]
   180e4:	ldr	r3, [fp, #-16]
   180e8:	cmp	r3, #0
   180ec:	bne	18160 <__assert_fail@plt+0x71ec>
   180f0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   180f4:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   180f8:	cmp	r1, r3
   180fc:	cmpeq	r0, r2
   18100:	bhi	18118 <__assert_fail@plt+0x71a4>
   18104:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18108:	ldrd	r0, [fp, #4]
   1810c:	cmp	r1, r3
   18110:	cmpeq	r0, r2
   18114:	bcs	1819c <__assert_fail@plt+0x7228>
   18118:	mov	r3, #1
   1811c:	str	r3, [fp, #-16]
   18120:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18124:	mvn	r0, #-1073741824	; 0xc0000000
   18128:	mov	r1, #0
   1812c:	cmp	r3, r1
   18130:	cmpeq	r2, r0
   18134:	bls	1814c <__assert_fail@plt+0x71d8>
   18138:	bl	10eb4 <__errno_location@plt>
   1813c:	mov	r2, r0
   18140:	mov	r3, #75	; 0x4b
   18144:	str	r3, [r2]
   18148:	b	1819c <__assert_fail@plt+0x7228>
   1814c:	bl	10eb4 <__errno_location@plt>
   18150:	mov	r2, r0
   18154:	mov	r3, #34	; 0x22
   18158:	str	r3, [r2]
   1815c:	b	1819c <__assert_fail@plt+0x7228>
   18160:	ldr	r3, [fp, #-16]
   18164:	cmp	r3, #1
   18168:	bne	18180 <__assert_fail@plt+0x720c>
   1816c:	bl	10eb4 <__errno_location@plt>
   18170:	mov	r2, r0
   18174:	mov	r3, #75	; 0x4b
   18178:	str	r3, [r2]
   1817c:	b	1819c <__assert_fail@plt+0x7228>
   18180:	ldr	r3, [fp, #-16]
   18184:	cmp	r3, #3
   18188:	bne	1819c <__assert_fail@plt+0x7228>
   1818c:	bl	10eb4 <__errno_location@plt>
   18190:	mov	r2, r0
   18194:	mov	r3, #0
   18198:	str	r3, [r2]
   1819c:	ldr	r3, [fp, #-16]
   181a0:	cmp	r3, #0
   181a4:	beq	18210 <__assert_fail@plt+0x729c>
   181a8:	ldr	r3, [fp, #20]
   181ac:	cmp	r3, #0
   181b0:	beq	181bc <__assert_fail@plt+0x7248>
   181b4:	ldr	r4, [fp, #20]
   181b8:	b	181c0 <__assert_fail@plt+0x724c>
   181bc:	mov	r4, #1
   181c0:	bl	10eb4 <__errno_location@plt>
   181c4:	mov	r3, r0
   181c8:	ldr	r3, [r3]
   181cc:	cmp	r3, #22
   181d0:	beq	181e4 <__assert_fail@plt+0x7270>
   181d4:	bl	10eb4 <__errno_location@plt>
   181d8:	mov	r3, r0
   181dc:	ldr	r5, [r3]
   181e0:	b	181e8 <__assert_fail@plt+0x7274>
   181e4:	mov	r5, #0
   181e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   181ec:	bl	16e4c <__assert_fail@plt+0x5ed8>
   181f0:	mov	r3, r0
   181f4:	str	r3, [sp]
   181f8:	ldr	r3, [fp, #16]
   181fc:	movw	r2, #44476	; 0xadbc
   18200:	movt	r2, #1
   18204:	mov	r1, r5
   18208:	mov	r0, r4
   1820c:	bl	10e0c <error@plt>
   18210:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18214:	mov	r0, r2
   18218:	mov	r1, r3
   1821c:	sub	sp, fp, #12
   18220:	ldrd	r4, [sp]
   18224:	ldr	fp, [sp, #8]
   18228:	add	sp, sp, #12
   1822c:	pop	{pc}		; (ldr pc, [sp], #4)
   18230:	str	fp, [sp, #-8]!
   18234:	str	lr, [sp, #4]
   18238:	add	fp, sp, #4
   1823c:	sub	sp, sp, #40	; 0x28
   18240:	str	r0, [fp, #-8]
   18244:	strd	r2, [fp, #-20]	; 0xffffffec
   18248:	ldr	r3, [fp, #20]
   1824c:	str	r3, [sp, #16]
   18250:	ldr	r3, [fp, #16]
   18254:	str	r3, [sp, #12]
   18258:	ldr	r3, [fp, #12]
   1825c:	str	r3, [sp, #8]
   18260:	ldrd	r2, [fp, #4]
   18264:	strd	r2, [sp]
   18268:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1826c:	mov	r1, #10
   18270:	ldr	r0, [fp, #-8]
   18274:	bl	180a0 <__assert_fail@plt+0x712c>
   18278:	mov	r2, r0
   1827c:	mov	r3, r1
   18280:	mov	r0, r2
   18284:	mov	r1, r3
   18288:	sub	sp, fp, #4
   1828c:	ldr	fp, [sp]
   18290:	add	sp, sp, #4
   18294:	pop	{pc}		; (ldr pc, [sp], #4)
   18298:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1829c:	strd	r6, [sp, #8]
   182a0:	strd	r8, [sp, #16]
   182a4:	str	fp, [sp, #24]
   182a8:	add	fp, sp, #24
   182ac:	sub	sp, sp, #44	; 0x2c
   182b0:	str	r0, [fp, #-40]	; 0xffffffd8
   182b4:	str	r1, [fp, #-44]	; 0xffffffd4
   182b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   182bc:	ldrd	r4, [r3]
   182c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   182c4:	mov	r6, r3
   182c8:	asr	r7, r6, #31
   182cc:	mov	r2, #0
   182d0:	mov	r3, #0
   182d4:	strd	r2, [fp, #-60]	; 0xffffffc4
   182d8:	cmp	r6, #0
   182dc:	sbcs	r3, r7, #0
   182e0:	bge	182f8 <__assert_fail@plt+0x7384>
   182e4:	orrs	r3, r4, r5
   182e8:	beq	182f8 <__assert_fail@plt+0x7384>
   182ec:	mov	r2, #1
   182f0:	mov	r3, #0
   182f4:	strd	r2, [fp, #-60]	; 0xffffffc4
   182f8:	mov	r0, #0
   182fc:	mov	r1, #0
   18300:	mov	r0, r7
   18304:	mov	r1, #0
   18308:	mov	r2, #0
   1830c:	mov	r3, #0
   18310:	mov	r2, r5
   18314:	mov	r3, #0
   18318:	cmp	r0, #0
   1831c:	bne	18340 <__assert_fail@plt+0x73cc>
   18320:	cmp	r2, #0
   18324:	bne	18334 <__assert_fail@plt+0x73c0>
   18328:	umull	r2, r3, r6, r4
   1832c:	strd	r2, [fp, #-52]	; 0xffffffcc
   18330:	b	1840c <__assert_fail@plt+0x7498>
   18334:	mov	r3, r2
   18338:	mov	r2, r6
   1833c:	b	18350 <__assert_fail@plt+0x73dc>
   18340:	cmp	r2, #0
   18344:	bne	183c8 <__assert_fail@plt+0x7454>
   18348:	mov	r3, r0
   1834c:	mov	r2, r4
   18350:	umull	r8, r9, r6, r4
   18354:	umull	r2, r3, r2, r3
   18358:	mov	r0, r2
   1835c:	mov	r1, r3
   18360:	mov	r2, #0
   18364:	mov	r3, #0
   18368:	mov	r2, r9
   1836c:	mov	r3, #0
   18370:	adds	ip, r0, r2
   18374:	str	ip, [fp, #-68]	; 0xffffffbc
   18378:	adc	r3, r1, r3
   1837c:	str	r3, [fp, #-64]	; 0xffffffc0
   18380:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   18384:	mov	r2, #0
   18388:	mov	r3, #0
   1838c:	mov	r2, r1
   18390:	asr	r3, r1, #31
   18394:	cmp	r2, #0
   18398:	bne	183e4 <__assert_fail@plt+0x7470>
   1839c:	mov	r2, #0
   183a0:	mov	r3, #0
   183a4:	mov	r3, r0
   183a8:	mov	r2, #0
   183ac:	mov	r0, r8
   183b0:	mov	r1, #0
   183b4:	orr	ip, r2, r0
   183b8:	str	ip, [fp, #-52]	; 0xffffffcc
   183bc:	orr	r3, r3, r1
   183c0:	str	r3, [fp, #-48]	; 0xffffffd0
   183c4:	b	1840c <__assert_fail@plt+0x7498>
   183c8:	mul	r2, r4, r7
   183cc:	mul	r3, r6, r5
   183d0:	add	r1, r2, r3
   183d4:	umull	r2, r3, r6, r4
   183d8:	add	r1, r1, r3
   183dc:	mov	r3, r1
   183e0:	strd	r2, [fp, #-52]	; 0xffffffcc
   183e4:	mul	r2, r4, r7
   183e8:	mul	r3, r6, r5
   183ec:	add	r1, r2, r3
   183f0:	umull	r2, r3, r6, r4
   183f4:	add	r1, r1, r3
   183f8:	mov	r3, r1
   183fc:	strd	r2, [fp, #-52]	; 0xffffffcc
   18400:	mov	r2, #1
   18404:	mov	r3, #0
   18408:	strd	r2, [fp, #-60]	; 0xffffffc4
   1840c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18410:	strd	r2, [fp, #-36]	; 0xffffffdc
   18414:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18418:	mov	r3, r2
   1841c:	and	r3, r3, #1
   18420:	uxtb	r3, r3
   18424:	cmp	r3, #0
   18428:	beq	18444 <__assert_fail@plt+0x74d0>
   1842c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18430:	mvn	r2, #0
   18434:	mvn	r3, #0
   18438:	strd	r2, [r1]
   1843c:	mov	r3, #1
   18440:	b	18454 <__assert_fail@plt+0x74e0>
   18444:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18448:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1844c:	strd	r2, [r1]
   18450:	mov	r3, #0
   18454:	mov	r0, r3
   18458:	sub	sp, fp, #24
   1845c:	ldrd	r4, [sp]
   18460:	ldrd	r6, [sp, #8]
   18464:	ldrd	r8, [sp, #16]
   18468:	ldr	fp, [sp, #24]
   1846c:	add	sp, sp, #28
   18470:	bx	lr
   18474:	str	fp, [sp, #-8]!
   18478:	str	lr, [sp, #4]
   1847c:	add	fp, sp, #4
   18480:	sub	sp, sp, #24
   18484:	str	r0, [fp, #-16]
   18488:	str	r1, [fp, #-20]	; 0xffffffec
   1848c:	str	r2, [fp, #-24]	; 0xffffffe8
   18490:	mov	r3, #0
   18494:	str	r3, [fp, #-8]
   18498:	b	184b8 <__assert_fail@plt+0x7544>
   1849c:	ldr	r1, [fp, #-20]	; 0xffffffec
   184a0:	ldr	r0, [fp, #-16]
   184a4:	bl	18298 <__assert_fail@plt+0x7324>
   184a8:	mov	r2, r0
   184ac:	ldr	r3, [fp, #-8]
   184b0:	orr	r3, r3, r2
   184b4:	str	r3, [fp, #-8]
   184b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   184bc:	sub	r2, r3, #1
   184c0:	str	r2, [fp, #-24]	; 0xffffffe8
   184c4:	cmp	r3, #0
   184c8:	bne	1849c <__assert_fail@plt+0x7528>
   184cc:	ldr	r3, [fp, #-8]
   184d0:	mov	r0, r3
   184d4:	sub	sp, fp, #4
   184d8:	ldr	fp, [sp]
   184dc:	add	sp, sp, #4
   184e0:	pop	{pc}		; (ldr pc, [sp], #4)
   184e4:	str	fp, [sp, #-8]!
   184e8:	str	lr, [sp, #4]
   184ec:	add	fp, sp, #4
   184f0:	sub	sp, sp, #56	; 0x38
   184f4:	str	r0, [fp, #-48]	; 0xffffffd0
   184f8:	str	r1, [fp, #-52]	; 0xffffffcc
   184fc:	str	r2, [fp, #-56]	; 0xffffffc8
   18500:	str	r3, [fp, #-60]	; 0xffffffc4
   18504:	mov	r3, #0
   18508:	str	r3, [fp, #-8]
   1850c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18510:	cmp	r3, #0
   18514:	blt	18524 <__assert_fail@plt+0x75b0>
   18518:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1851c:	cmp	r3, #36	; 0x24
   18520:	ble	18544 <__assert_fail@plt+0x75d0>
   18524:	movw	r3, #44540	; 0xadfc
   18528:	movt	r3, #1
   1852c:	mov	r2, #85	; 0x55
   18530:	movw	r1, #44484	; 0xadc4
   18534:	movt	r1, #1
   18538:	movw	r0, #44500	; 0xadd4
   1853c:	movt	r0, #1
   18540:	bl	10f74 <__assert_fail@plt>
   18544:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18548:	cmp	r3, #0
   1854c:	bne	18558 <__assert_fail@plt+0x75e4>
   18550:	sub	r3, fp, #36	; 0x24
   18554:	b	1855c <__assert_fail@plt+0x75e8>
   18558:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1855c:	str	r3, [fp, #-32]	; 0xffffffe0
   18560:	bl	10eb4 <__errno_location@plt>
   18564:	mov	r2, r0
   18568:	mov	r3, #0
   1856c:	str	r3, [r2]
   18570:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18574:	str	r3, [fp, #-12]
   18578:	ldr	r3, [fp, #-12]
   1857c:	ldrb	r3, [r3]
   18580:	strb	r3, [fp, #-13]
   18584:	b	185a0 <__assert_fail@plt+0x762c>
   18588:	ldr	r3, [fp, #-12]
   1858c:	add	r3, r3, #1
   18590:	str	r3, [fp, #-12]
   18594:	ldr	r3, [fp, #-12]
   18598:	ldrb	r3, [r3]
   1859c:	strb	r3, [fp, #-13]
   185a0:	bl	10e60 <__ctype_b_loc@plt>
   185a4:	mov	r3, r0
   185a8:	ldr	r2, [r3]
   185ac:	ldrb	r3, [fp, #-13]
   185b0:	lsl	r3, r3, #1
   185b4:	add	r3, r2, r3
   185b8:	ldrh	r3, [r3]
   185bc:	and	r3, r3, #8192	; 0x2000
   185c0:	cmp	r3, #0
   185c4:	bne	18588 <__assert_fail@plt+0x7614>
   185c8:	ldrb	r3, [fp, #-13]
   185cc:	cmp	r3, #45	; 0x2d
   185d0:	bne	185dc <__assert_fail@plt+0x7668>
   185d4:	mov	r3, #4
   185d8:	b	18b24 <__assert_fail@plt+0x7bb0>
   185dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   185e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   185e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   185e8:	bl	10ee4 <strtoumax@plt>
   185ec:	mov	r2, r0
   185f0:	mov	r3, r1
   185f4:	strd	r2, [fp, #-44]	; 0xffffffd4
   185f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   185fc:	ldr	r3, [r3]
   18600:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18604:	cmp	r2, r3
   18608:	bne	18668 <__assert_fail@plt+0x76f4>
   1860c:	ldr	r3, [fp, #4]
   18610:	cmp	r3, #0
   18614:	beq	18660 <__assert_fail@plt+0x76ec>
   18618:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1861c:	ldr	r3, [r3]
   18620:	ldrb	r3, [r3]
   18624:	cmp	r3, #0
   18628:	beq	18660 <__assert_fail@plt+0x76ec>
   1862c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18630:	ldr	r3, [r3]
   18634:	ldrb	r3, [r3]
   18638:	mov	r1, r3
   1863c:	ldr	r0, [fp, #4]
   18640:	bl	10e90 <strchr@plt>
   18644:	mov	r3, r0
   18648:	cmp	r3, #0
   1864c:	beq	18660 <__assert_fail@plt+0x76ec>
   18650:	mov	r2, #1
   18654:	mov	r3, #0
   18658:	strd	r2, [fp, #-44]	; 0xffffffd4
   1865c:	b	186a0 <__assert_fail@plt+0x772c>
   18660:	mov	r3, #4
   18664:	b	18b24 <__assert_fail@plt+0x7bb0>
   18668:	bl	10eb4 <__errno_location@plt>
   1866c:	mov	r3, r0
   18670:	ldr	r3, [r3]
   18674:	cmp	r3, #0
   18678:	beq	186a0 <__assert_fail@plt+0x772c>
   1867c:	bl	10eb4 <__errno_location@plt>
   18680:	mov	r3, r0
   18684:	ldr	r3, [r3]
   18688:	cmp	r3, #34	; 0x22
   1868c:	beq	18698 <__assert_fail@plt+0x7724>
   18690:	mov	r3, #4
   18694:	b	18b24 <__assert_fail@plt+0x7bb0>
   18698:	mov	r3, #1
   1869c:	str	r3, [fp, #-8]
   186a0:	ldr	r3, [fp, #4]
   186a4:	cmp	r3, #0
   186a8:	bne	186c0 <__assert_fail@plt+0x774c>
   186ac:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   186b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   186b4:	strd	r2, [r1]
   186b8:	ldr	r3, [fp, #-8]
   186bc:	b	18b24 <__assert_fail@plt+0x7bb0>
   186c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   186c4:	ldr	r3, [r3]
   186c8:	ldrb	r3, [r3]
   186cc:	cmp	r3, #0
   186d0:	beq	18b14 <__assert_fail@plt+0x7ba0>
   186d4:	mov	r3, #1024	; 0x400
   186d8:	str	r3, [fp, #-20]	; 0xffffffec
   186dc:	mov	r3, #1
   186e0:	str	r3, [fp, #-24]	; 0xffffffe8
   186e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   186e8:	ldr	r3, [r3]
   186ec:	ldrb	r3, [r3]
   186f0:	mov	r1, r3
   186f4:	ldr	r0, [fp, #4]
   186f8:	bl	10e90 <strchr@plt>
   186fc:	mov	r3, r0
   18700:	cmp	r3, #0
   18704:	bne	18720 <__assert_fail@plt+0x77ac>
   18708:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1870c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18710:	strd	r2, [r1]
   18714:	ldr	r3, [fp, #-8]
   18718:	orr	r3, r3, #2
   1871c:	b	18b24 <__assert_fail@plt+0x7bb0>
   18720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18724:	ldr	r3, [r3]
   18728:	ldrb	r3, [r3]
   1872c:	sub	r3, r3, #69	; 0x45
   18730:	cmp	r3, #47	; 0x2f
   18734:	ldrls	pc, [pc, r3, lsl #2]
   18738:	b	1888c <__assert_fail@plt+0x7918>
   1873c:	strdeq	r8, [r1], -ip
   18740:	andeq	r8, r1, ip, lsl #17
   18744:	strdeq	r8, [r1], -ip
   18748:	andeq	r8, r1, ip, lsl #17
   1874c:	andeq	r8, r1, ip, lsl #17
   18750:	andeq	r8, r1, ip, lsl #17
   18754:	strdeq	r8, [r1], -ip
   18758:	andeq	r8, r1, ip, lsl #17
   1875c:	strdeq	r8, [r1], -ip
   18760:	andeq	r8, r1, ip, lsl #17
   18764:	andeq	r8, r1, ip, lsl #17
   18768:	strdeq	r8, [r1], -ip
   1876c:	andeq	r8, r1, ip, lsl #17
   18770:	andeq	r8, r1, ip, lsl #17
   18774:	andeq	r8, r1, ip, lsl #17
   18778:	strdeq	r8, [r1], -ip
   1877c:	andeq	r8, r1, ip, lsl #17
   18780:	andeq	r8, r1, ip, lsl #17
   18784:	andeq	r8, r1, ip, lsl #17
   18788:	andeq	r8, r1, ip, lsl #17
   1878c:	strdeq	r8, [r1], -ip
   18790:	strdeq	r8, [r1], -ip
   18794:	andeq	r8, r1, ip, lsl #17
   18798:	andeq	r8, r1, ip, lsl #17
   1879c:	andeq	r8, r1, ip, lsl #17
   187a0:	andeq	r8, r1, ip, lsl #17
   187a4:	andeq	r8, r1, ip, lsl #17
   187a8:	andeq	r8, r1, ip, lsl #17
   187ac:	andeq	r8, r1, ip, lsl #17
   187b0:	andeq	r8, r1, ip, lsl #17
   187b4:	andeq	r8, r1, ip, lsl #17
   187b8:	andeq	r8, r1, ip, lsl #17
   187bc:	andeq	r8, r1, ip, lsl #17
   187c0:	andeq	r8, r1, ip, lsl #17
   187c4:	strdeq	r8, [r1], -ip
   187c8:	andeq	r8, r1, ip, lsl #17
   187cc:	andeq	r8, r1, ip, lsl #17
   187d0:	andeq	r8, r1, ip, lsl #17
   187d4:	strdeq	r8, [r1], -ip
   187d8:	andeq	r8, r1, ip, lsl #17
   187dc:	strdeq	r8, [r1], -ip
   187e0:	andeq	r8, r1, ip, lsl #17
   187e4:	andeq	r8, r1, ip, lsl #17
   187e8:	andeq	r8, r1, ip, lsl #17
   187ec:	andeq	r8, r1, ip, lsl #17
   187f0:	andeq	r8, r1, ip, lsl #17
   187f4:	andeq	r8, r1, ip, lsl #17
   187f8:	strdeq	r8, [r1], -ip
   187fc:	mov	r1, #48	; 0x30
   18800:	ldr	r0, [fp, #4]
   18804:	bl	10e90 <strchr@plt>
   18808:	mov	r3, r0
   1880c:	cmp	r3, #0
   18810:	beq	18880 <__assert_fail@plt+0x790c>
   18814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18818:	ldr	r3, [r3]
   1881c:	add	r3, r3, #1
   18820:	ldrb	r3, [r3]
   18824:	cmp	r3, #68	; 0x44
   18828:	beq	18868 <__assert_fail@plt+0x78f4>
   1882c:	cmp	r3, #105	; 0x69
   18830:	beq	18840 <__assert_fail@plt+0x78cc>
   18834:	cmp	r3, #66	; 0x42
   18838:	beq	18868 <__assert_fail@plt+0x78f4>
   1883c:	b	1888c <__assert_fail@plt+0x7918>
   18840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18844:	ldr	r3, [r3]
   18848:	add	r3, r3, #2
   1884c:	ldrb	r3, [r3]
   18850:	cmp	r3, #66	; 0x42
   18854:	bne	18888 <__assert_fail@plt+0x7914>
   18858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1885c:	add	r3, r3, #2
   18860:	str	r3, [fp, #-24]	; 0xffffffe8
   18864:	b	18888 <__assert_fail@plt+0x7914>
   18868:	mov	r3, #1000	; 0x3e8
   1886c:	str	r3, [fp, #-20]	; 0xffffffec
   18870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18874:	add	r3, r3, #1
   18878:	str	r3, [fp, #-24]	; 0xffffffe8
   1887c:	b	1888c <__assert_fail@plt+0x7918>
   18880:	nop	{0}
   18884:	b	1888c <__assert_fail@plt+0x7918>
   18888:	nop	{0}
   1888c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18890:	ldr	r3, [r3]
   18894:	ldrb	r3, [r3]
   18898:	sub	r3, r3, #66	; 0x42
   1889c:	cmp	r3, #53	; 0x35
   188a0:	ldrls	pc, [pc, r3, lsl #2]
   188a4:	b	18ab4 <__assert_fail@plt+0x7b40>
   188a8:	muleq	r1, r8, r9
   188ac:			; <UNDEFINED> instruction: 0x00018ab4
   188b0:			; <UNDEFINED> instruction: 0x00018ab4
   188b4:			; <UNDEFINED> instruction: 0x000189bc
   188b8:			; <UNDEFINED> instruction: 0x00018ab4
   188bc:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   188c0:			; <UNDEFINED> instruction: 0x00018ab4
   188c4:			; <UNDEFINED> instruction: 0x00018ab4
   188c8:			; <UNDEFINED> instruction: 0x00018ab4
   188cc:	strdeq	r8, [r1], -r4
   188d0:			; <UNDEFINED> instruction: 0x00018ab4
   188d4:	andeq	r8, r1, r0, lsl sl
   188d8:			; <UNDEFINED> instruction: 0x00018ab4
   188dc:			; <UNDEFINED> instruction: 0x00018ab4
   188e0:	andeq	r8, r1, ip, lsr #20
   188e4:			; <UNDEFINED> instruction: 0x00018ab4
   188e8:			; <UNDEFINED> instruction: 0x00018ab4
   188ec:			; <UNDEFINED> instruction: 0x00018ab4
   188f0:	andeq	r8, r1, r8, asr #20
   188f4:			; <UNDEFINED> instruction: 0x00018ab4
   188f8:			; <UNDEFINED> instruction: 0x00018ab4
   188fc:			; <UNDEFINED> instruction: 0x00018ab4
   18900:			; <UNDEFINED> instruction: 0x00018ab4
   18904:	andeq	r8, r1, ip, ror sl
   18908:	muleq	r1, r8, sl
   1890c:			; <UNDEFINED> instruction: 0x00018ab4
   18910:			; <UNDEFINED> instruction: 0x00018ab4
   18914:			; <UNDEFINED> instruction: 0x00018ab4
   18918:			; <UNDEFINED> instruction: 0x00018ab4
   1891c:			; <UNDEFINED> instruction: 0x00018ab4
   18920:			; <UNDEFINED> instruction: 0x00018ab4
   18924:			; <UNDEFINED> instruction: 0x00018ab4
   18928:	andeq	r8, r1, r0, lsl #19
   1892c:			; <UNDEFINED> instruction: 0x000189b0
   18930:			; <UNDEFINED> instruction: 0x00018ab4
   18934:			; <UNDEFINED> instruction: 0x00018ab4
   18938:			; <UNDEFINED> instruction: 0x00018ab4
   1893c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18940:			; <UNDEFINED> instruction: 0x00018ab4
   18944:			; <UNDEFINED> instruction: 0x00018ab4
   18948:			; <UNDEFINED> instruction: 0x00018ab4
   1894c:	strdeq	r8, [r1], -r4
   18950:			; <UNDEFINED> instruction: 0x00018ab4
   18954:	andeq	r8, r1, r0, lsl sl
   18958:			; <UNDEFINED> instruction: 0x00018ab4
   1895c:			; <UNDEFINED> instruction: 0x00018ab4
   18960:			; <UNDEFINED> instruction: 0x00018ab4
   18964:			; <UNDEFINED> instruction: 0x00018ab4
   18968:			; <UNDEFINED> instruction: 0x00018ab4
   1896c:			; <UNDEFINED> instruction: 0x00018ab4
   18970:	andeq	r8, r1, r8, asr #20
   18974:			; <UNDEFINED> instruction: 0x00018ab4
   18978:			; <UNDEFINED> instruction: 0x00018ab4
   1897c:	andeq	r8, r1, r4, ror #20
   18980:	sub	r3, fp, #44	; 0x2c
   18984:	mov	r1, #512	; 0x200
   18988:	mov	r0, r3
   1898c:	bl	18298 <__assert_fail@plt+0x7324>
   18990:	str	r0, [fp, #-28]	; 0xffffffe4
   18994:	b	18acc <__assert_fail@plt+0x7b58>
   18998:	sub	r3, fp, #44	; 0x2c
   1899c:	mov	r1, #1024	; 0x400
   189a0:	mov	r0, r3
   189a4:	bl	18298 <__assert_fail@plt+0x7324>
   189a8:	str	r0, [fp, #-28]	; 0xffffffe4
   189ac:	b	18acc <__assert_fail@plt+0x7b58>
   189b0:	mov	r3, #0
   189b4:	str	r3, [fp, #-28]	; 0xffffffe4
   189b8:	b	18acc <__assert_fail@plt+0x7b58>
   189bc:	sub	r3, fp, #44	; 0x2c
   189c0:	mov	r2, #6
   189c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   189c8:	mov	r0, r3
   189cc:	bl	18474 <__assert_fail@plt+0x7500>
   189d0:	str	r0, [fp, #-28]	; 0xffffffe4
   189d4:	b	18acc <__assert_fail@plt+0x7b58>
   189d8:	sub	r3, fp, #44	; 0x2c
   189dc:	mov	r2, #3
   189e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   189e4:	mov	r0, r3
   189e8:	bl	18474 <__assert_fail@plt+0x7500>
   189ec:	str	r0, [fp, #-28]	; 0xffffffe4
   189f0:	b	18acc <__assert_fail@plt+0x7b58>
   189f4:	sub	r3, fp, #44	; 0x2c
   189f8:	mov	r2, #1
   189fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a00:	mov	r0, r3
   18a04:	bl	18474 <__assert_fail@plt+0x7500>
   18a08:	str	r0, [fp, #-28]	; 0xffffffe4
   18a0c:	b	18acc <__assert_fail@plt+0x7b58>
   18a10:	sub	r3, fp, #44	; 0x2c
   18a14:	mov	r2, #2
   18a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a1c:	mov	r0, r3
   18a20:	bl	18474 <__assert_fail@plt+0x7500>
   18a24:	str	r0, [fp, #-28]	; 0xffffffe4
   18a28:	b	18acc <__assert_fail@plt+0x7b58>
   18a2c:	sub	r3, fp, #44	; 0x2c
   18a30:	mov	r2, #5
   18a34:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a38:	mov	r0, r3
   18a3c:	bl	18474 <__assert_fail@plt+0x7500>
   18a40:	str	r0, [fp, #-28]	; 0xffffffe4
   18a44:	b	18acc <__assert_fail@plt+0x7b58>
   18a48:	sub	r3, fp, #44	; 0x2c
   18a4c:	mov	r2, #4
   18a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a54:	mov	r0, r3
   18a58:	bl	18474 <__assert_fail@plt+0x7500>
   18a5c:	str	r0, [fp, #-28]	; 0xffffffe4
   18a60:	b	18acc <__assert_fail@plt+0x7b58>
   18a64:	sub	r3, fp, #44	; 0x2c
   18a68:	mov	r1, #2
   18a6c:	mov	r0, r3
   18a70:	bl	18298 <__assert_fail@plt+0x7324>
   18a74:	str	r0, [fp, #-28]	; 0xffffffe4
   18a78:	b	18acc <__assert_fail@plt+0x7b58>
   18a7c:	sub	r3, fp, #44	; 0x2c
   18a80:	mov	r2, #8
   18a84:	ldr	r1, [fp, #-20]	; 0xffffffec
   18a88:	mov	r0, r3
   18a8c:	bl	18474 <__assert_fail@plt+0x7500>
   18a90:	str	r0, [fp, #-28]	; 0xffffffe4
   18a94:	b	18acc <__assert_fail@plt+0x7b58>
   18a98:	sub	r3, fp, #44	; 0x2c
   18a9c:	mov	r2, #7
   18aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   18aa4:	mov	r0, r3
   18aa8:	bl	18474 <__assert_fail@plt+0x7500>
   18aac:	str	r0, [fp, #-28]	; 0xffffffe4
   18ab0:	b	18acc <__assert_fail@plt+0x7b58>
   18ab4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18ab8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18abc:	strd	r2, [r1]
   18ac0:	ldr	r3, [fp, #-8]
   18ac4:	orr	r3, r3, #2
   18ac8:	b	18b24 <__assert_fail@plt+0x7bb0>
   18acc:	ldr	r2, [fp, #-8]
   18ad0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ad4:	orr	r3, r2, r3
   18ad8:	str	r3, [fp, #-8]
   18adc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ae0:	ldr	r2, [r3]
   18ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ae8:	add	r2, r2, r3
   18aec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18af0:	str	r2, [r3]
   18af4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18af8:	ldr	r3, [r3]
   18afc:	ldrb	r3, [r3]
   18b00:	cmp	r3, #0
   18b04:	beq	18b14 <__assert_fail@plt+0x7ba0>
   18b08:	ldr	r3, [fp, #-8]
   18b0c:	orr	r3, r3, #2
   18b10:	str	r3, [fp, #-8]
   18b14:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18b18:	ldr	r1, [fp, #-60]	; 0xffffffc4
   18b1c:	strd	r2, [r1]
   18b20:	ldr	r3, [fp, #-8]
   18b24:	mov	r0, r3
   18b28:	sub	sp, fp, #4
   18b2c:	ldr	fp, [sp]
   18b30:	add	sp, sp, #4
   18b34:	pop	{pc}		; (ldr pc, [sp], #4)
   18b38:	str	fp, [sp, #-8]!
   18b3c:	str	lr, [sp, #4]
   18b40:	add	fp, sp, #4
   18b44:	sub	sp, sp, #16
   18b48:	str	r0, [fp, #-16]
   18b4c:	str	r1, [fp, #-20]	; 0xffffffec
   18b50:	ldr	r3, [fp, #-16]
   18b54:	cmp	r3, #0
   18b58:	beq	18b68 <__assert_fail@plt+0x7bf4>
   18b5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b60:	cmp	r3, #0
   18b64:	bne	18b78 <__assert_fail@plt+0x7c04>
   18b68:	mov	r3, #1
   18b6c:	str	r3, [fp, #-20]	; 0xffffffec
   18b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b74:	str	r3, [fp, #-16]
   18b78:	mov	ip, #0
   18b7c:	ldr	r2, [fp, #-16]
   18b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b84:	umull	r0, r1, r2, r3
   18b88:	mov	r2, #0
   18b8c:	mov	r3, #0
   18b90:	mov	r2, r1
   18b94:	mov	r3, #0
   18b98:	cmp	r2, #0
   18b9c:	beq	18ba4 <__assert_fail@plt+0x7c30>
   18ba0:	mov	ip, #1
   18ba4:	cmp	r0, #0
   18ba8:	bge	18bb0 <__assert_fail@plt+0x7c3c>
   18bac:	mov	ip, #1
   18bb0:	mov	r3, ip
   18bb4:	and	r3, r3, #1
   18bb8:	uxtb	r3, r3
   18bbc:	cmp	r3, #0
   18bc0:	beq	18bdc <__assert_fail@plt+0x7c68>
   18bc4:	bl	10eb4 <__errno_location@plt>
   18bc8:	mov	r2, r0
   18bcc:	mov	r3, #12
   18bd0:	str	r3, [r2]
   18bd4:	mov	r3, #0
   18bd8:	b	18bf4 <__assert_fail@plt+0x7c80>
   18bdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18be0:	ldr	r0, [fp, #-16]
   18be4:	bl	10ce0 <calloc@plt>
   18be8:	mov	r3, r0
   18bec:	str	r3, [fp, #-8]
   18bf0:	ldr	r3, [fp, #-8]
   18bf4:	mov	r0, r3
   18bf8:	sub	sp, fp, #4
   18bfc:	ldr	fp, [sp]
   18c00:	add	sp, sp, #4
   18c04:	pop	{pc}		; (ldr pc, [sp], #4)
   18c08:	str	fp, [sp, #-8]!
   18c0c:	str	lr, [sp, #4]
   18c10:	add	fp, sp, #4
   18c14:	sub	sp, sp, #16
   18c18:	str	r0, [fp, #-16]
   18c1c:	ldr	r3, [fp, #-16]
   18c20:	cmp	r3, #0
   18c24:	bne	18c30 <__assert_fail@plt+0x7cbc>
   18c28:	mov	r3, #1
   18c2c:	str	r3, [fp, #-16]
   18c30:	mov	r2, #0
   18c34:	ldr	r3, [fp, #-16]
   18c38:	cmp	r3, #0
   18c3c:	bge	18c44 <__assert_fail@plt+0x7cd0>
   18c40:	mov	r2, #1
   18c44:	mov	r3, r2
   18c48:	and	r3, r3, #1
   18c4c:	uxtb	r3, r3
   18c50:	cmp	r3, #0
   18c54:	beq	18c70 <__assert_fail@plt+0x7cfc>
   18c58:	bl	10eb4 <__errno_location@plt>
   18c5c:	mov	r2, r0
   18c60:	mov	r3, #12
   18c64:	str	r3, [r2]
   18c68:	mov	r3, #0
   18c6c:	b	18c84 <__assert_fail@plt+0x7d10>
   18c70:	ldr	r0, [fp, #-16]
   18c74:	bl	10e24 <malloc@plt>
   18c78:	mov	r3, r0
   18c7c:	str	r3, [fp, #-8]
   18c80:	ldr	r3, [fp, #-8]
   18c84:	mov	r0, r3
   18c88:	sub	sp, fp, #4
   18c8c:	ldr	fp, [sp]
   18c90:	add	sp, sp, #4
   18c94:	pop	{pc}		; (ldr pc, [sp], #4)
   18c98:	str	fp, [sp, #-8]!
   18c9c:	str	lr, [sp, #4]
   18ca0:	add	fp, sp, #4
   18ca4:	sub	sp, sp, #16
   18ca8:	str	r0, [fp, #-16]
   18cac:	str	r1, [fp, #-20]	; 0xffffffec
   18cb0:	ldr	r3, [fp, #-16]
   18cb4:	cmp	r3, #0
   18cb8:	bne	18ccc <__assert_fail@plt+0x7d58>
   18cbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   18cc0:	bl	18c08 <__assert_fail@plt+0x7c94>
   18cc4:	mov	r3, r0
   18cc8:	b	18d3c <__assert_fail@plt+0x7dc8>
   18ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cd0:	cmp	r3, #0
   18cd4:	bne	18ce8 <__assert_fail@plt+0x7d74>
   18cd8:	ldr	r0, [fp, #-16]
   18cdc:	bl	141b8 <__assert_fail@plt+0x3244>
   18ce0:	mov	r3, #0
   18ce4:	b	18d3c <__assert_fail@plt+0x7dc8>
   18ce8:	mov	r2, #0
   18cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cf0:	cmp	r3, #0
   18cf4:	bge	18cfc <__assert_fail@plt+0x7d88>
   18cf8:	mov	r2, #1
   18cfc:	mov	r3, r2
   18d00:	and	r3, r3, #1
   18d04:	uxtb	r3, r3
   18d08:	cmp	r3, #0
   18d0c:	beq	18d28 <__assert_fail@plt+0x7db4>
   18d10:	bl	10eb4 <__errno_location@plt>
   18d14:	mov	r2, r0
   18d18:	mov	r3, #12
   18d1c:	str	r3, [r2]
   18d20:	mov	r3, #0
   18d24:	b	18d3c <__assert_fail@plt+0x7dc8>
   18d28:	ldr	r1, [fp, #-20]	; 0xffffffec
   18d2c:	ldr	r0, [fp, #-16]
   18d30:	bl	10d88 <realloc@plt>
   18d34:	str	r0, [fp, #-8]
   18d38:	ldr	r3, [fp, #-8]
   18d3c:	mov	r0, r3
   18d40:	sub	sp, fp, #4
   18d44:	ldr	fp, [sp]
   18d48:	add	sp, sp, #4
   18d4c:	pop	{pc}		; (ldr pc, [sp], #4)
   18d50:	push	{fp}		; (str fp, [sp, #-4]!)
   18d54:	add	fp, sp, #0
   18d58:	sub	sp, sp, #12
   18d5c:	str	r0, [fp, #-8]
   18d60:	str	r1, [fp, #-12]
   18d64:	mov	r3, #0
   18d68:	mov	r0, r3
   18d6c:	add	sp, fp, #0
   18d70:	pop	{fp}		; (ldr fp, [sp], #4)
   18d74:	bx	lr
   18d78:	str	fp, [sp, #-8]!
   18d7c:	str	lr, [sp, #4]
   18d80:	add	fp, sp, #4
   18d84:	sub	sp, sp, #8
   18d88:	str	r0, [fp, #-8]
   18d8c:	str	r1, [fp, #-12]
   18d90:	ldr	r1, [fp, #-12]
   18d94:	ldr	r0, [fp, #-8]
   18d98:	bl	18d50 <__assert_fail@plt+0x7ddc>
   18d9c:	mov	r3, r0
   18da0:	mov	r0, r3
   18da4:	sub	sp, fp, #4
   18da8:	ldr	fp, [sp]
   18dac:	add	sp, sp, #4
   18db0:	pop	{pc}		; (ldr pc, [sp], #4)
   18db4:	strd	r4, [sp, #-16]!
   18db8:	str	fp, [sp, #8]
   18dbc:	str	lr, [sp, #12]
   18dc0:	add	fp, sp, #12
   18dc4:	sub	sp, sp, #16
   18dc8:	str	r0, [fp, #-24]	; 0xffffffe8
   18dcc:	str	r1, [fp, #-28]	; 0xffffffe4
   18dd0:	ldr	r5, [fp, #-24]	; 0xffffffe8
   18dd4:	ldr	r4, [fp, #-28]	; 0xffffffe4
   18dd8:	cmp	r5, r4
   18ddc:	bne	18de8 <__assert_fail@plt+0x7e74>
   18de0:	mov	r3, #0
   18de4:	b	18e48 <__assert_fail@plt+0x7ed4>
   18de8:	ldrb	r3, [r5]
   18dec:	mov	r0, r3
   18df0:	bl	199e0 <__assert_fail@plt+0x8a6c>
   18df4:	mov	r3, r0
   18df8:	strb	r3, [fp, #-13]
   18dfc:	ldrb	r3, [r4]
   18e00:	mov	r0, r3
   18e04:	bl	199e0 <__assert_fail@plt+0x8a6c>
   18e08:	mov	r3, r0
   18e0c:	strb	r3, [fp, #-14]
   18e10:	ldrb	r3, [fp, #-13]
   18e14:	cmp	r3, #0
   18e18:	beq	18e38 <__assert_fail@plt+0x7ec4>
   18e1c:	add	r5, r5, #1
   18e20:	add	r4, r4, #1
   18e24:	ldrb	r2, [fp, #-13]
   18e28:	ldrb	r3, [fp, #-14]
   18e2c:	cmp	r2, r3
   18e30:	beq	18de8 <__assert_fail@plt+0x7e74>
   18e34:	b	18e3c <__assert_fail@plt+0x7ec8>
   18e38:	nop	{0}
   18e3c:	ldrb	r2, [fp, #-13]
   18e40:	ldrb	r3, [fp, #-14]
   18e44:	sub	r3, r2, r3
   18e48:	mov	r0, r3
   18e4c:	sub	sp, fp, #12
   18e50:	ldrd	r4, [sp]
   18e54:	ldr	fp, [sp, #8]
   18e58:	add	sp, sp, #12
   18e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   18e60:	str	fp, [sp, #-8]!
   18e64:	str	lr, [sp, #4]
   18e68:	add	fp, sp, #4
   18e6c:	sub	sp, sp, #16
   18e70:	str	r0, [fp, #-16]
   18e74:	ldr	r0, [fp, #-16]
   18e78:	bl	10de8 <__fpending@plt>
   18e7c:	mov	r3, r0
   18e80:	cmp	r3, #0
   18e84:	movne	r3, #1
   18e88:	moveq	r3, #0
   18e8c:	strb	r3, [fp, #-5]
   18e90:	ldr	r0, [fp, #-16]
   18e94:	bl	10df4 <ferror_unlocked@plt>
   18e98:	mov	r3, r0
   18e9c:	cmp	r3, #0
   18ea0:	movne	r3, #1
   18ea4:	moveq	r3, #0
   18ea8:	strb	r3, [fp, #-6]
   18eac:	ldr	r0, [fp, #-16]
   18eb0:	bl	18f44 <__assert_fail@plt+0x7fd0>
   18eb4:	mov	r3, r0
   18eb8:	cmp	r3, #0
   18ebc:	movne	r3, #1
   18ec0:	moveq	r3, #0
   18ec4:	strb	r3, [fp, #-7]
   18ec8:	ldrb	r3, [fp, #-6]
   18ecc:	cmp	r3, #0
   18ed0:	bne	18f00 <__assert_fail@plt+0x7f8c>
   18ed4:	ldrb	r3, [fp, #-7]
   18ed8:	cmp	r3, #0
   18edc:	beq	18f2c <__assert_fail@plt+0x7fb8>
   18ee0:	ldrb	r3, [fp, #-5]
   18ee4:	cmp	r3, #0
   18ee8:	bne	18f00 <__assert_fail@plt+0x7f8c>
   18eec:	bl	10eb4 <__errno_location@plt>
   18ef0:	mov	r3, r0
   18ef4:	ldr	r3, [r3]
   18ef8:	cmp	r3, #9
   18efc:	beq	18f2c <__assert_fail@plt+0x7fb8>
   18f00:	ldrb	r3, [fp, #-7]
   18f04:	eor	r3, r3, #1
   18f08:	uxtb	r3, r3
   18f0c:	cmp	r3, #0
   18f10:	beq	18f24 <__assert_fail@plt+0x7fb0>
   18f14:	bl	10eb4 <__errno_location@plt>
   18f18:	mov	r2, r0
   18f1c:	mov	r3, #0
   18f20:	str	r3, [r2]
   18f24:	mvn	r3, #0
   18f28:	b	18f30 <__assert_fail@plt+0x7fbc>
   18f2c:	mov	r3, #0
   18f30:	mov	r0, r3
   18f34:	sub	sp, fp, #4
   18f38:	ldr	fp, [sp]
   18f3c:	add	sp, sp, #4
   18f40:	pop	{pc}		; (ldr pc, [sp], #4)
   18f44:	str	fp, [sp, #-8]!
   18f48:	str	lr, [sp, #4]
   18f4c:	add	fp, sp, #4
   18f50:	sub	sp, sp, #32
   18f54:	str	r0, [fp, #-24]	; 0xffffffe8
   18f58:	mov	r3, #0
   18f5c:	str	r3, [fp, #-8]
   18f60:	mov	r3, #0
   18f64:	str	r3, [fp, #-12]
   18f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f6c:	bl	10ed8 <fileno@plt>
   18f70:	str	r0, [fp, #-16]
   18f74:	ldr	r3, [fp, #-16]
   18f78:	cmp	r3, #0
   18f7c:	bge	18f90 <__assert_fail@plt+0x801c>
   18f80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f84:	bl	10efc <fclose@plt>
   18f88:	mov	r3, r0
   18f8c:	b	19034 <__assert_fail@plt+0x80c0>
   18f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f94:	bl	10e3c <__freading@plt>
   18f98:	mov	r3, r0
   18f9c:	cmp	r3, #0
   18fa0:	beq	18fdc <__assert_fail@plt+0x8068>
   18fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa8:	bl	10ed8 <fileno@plt>
   18fac:	mov	r1, r0
   18fb0:	mov	r3, #1
   18fb4:	str	r3, [sp]
   18fb8:	mov	r2, #0
   18fbc:	mov	r3, #0
   18fc0:	mov	r0, r1
   18fc4:	bl	10dd0 <lseek64@plt>
   18fc8:	mvn	r2, #0
   18fcc:	mvn	r3, #0
   18fd0:	cmp	r1, r3
   18fd4:	cmpeq	r0, r2
   18fd8:	beq	19000 <__assert_fail@plt+0x808c>
   18fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe0:	bl	1909c <__assert_fail@plt+0x8128>
   18fe4:	mov	r3, r0
   18fe8:	cmp	r3, #0
   18fec:	beq	19000 <__assert_fail@plt+0x808c>
   18ff0:	bl	10eb4 <__errno_location@plt>
   18ff4:	mov	r3, r0
   18ff8:	ldr	r3, [r3]
   18ffc:	str	r3, [fp, #-8]
   19000:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19004:	bl	10efc <fclose@plt>
   19008:	str	r0, [fp, #-12]
   1900c:	ldr	r3, [fp, #-8]
   19010:	cmp	r3, #0
   19014:	beq	19030 <__assert_fail@plt+0x80bc>
   19018:	bl	10eb4 <__errno_location@plt>
   1901c:	mov	r2, r0
   19020:	ldr	r3, [fp, #-8]
   19024:	str	r3, [r2]
   19028:	mvn	r3, #0
   1902c:	str	r3, [fp, #-12]
   19030:	ldr	r3, [fp, #-12]
   19034:	mov	r0, r3
   19038:	sub	sp, fp, #4
   1903c:	ldr	fp, [sp]
   19040:	add	sp, sp, #4
   19044:	pop	{pc}		; (ldr pc, [sp], #4)
   19048:	str	fp, [sp, #-8]!
   1904c:	str	lr, [sp, #4]
   19050:	add	fp, sp, #4
   19054:	sub	sp, sp, #16
   19058:	str	r0, [fp, #-8]
   1905c:	ldr	r3, [fp, #-8]
   19060:	ldr	r3, [r3]
   19064:	and	r3, r3, #256	; 0x100
   19068:	cmp	r3, #0
   1906c:	beq	19088 <__assert_fail@plt+0x8114>
   19070:	mov	r3, #1
   19074:	str	r3, [sp]
   19078:	mov	r2, #0
   1907c:	mov	r3, #0
   19080:	ldr	r0, [fp, #-8]
   19084:	bl	19108 <__assert_fail@plt+0x8194>
   19088:	nop	{0}
   1908c:	sub	sp, fp, #4
   19090:	ldr	fp, [sp]
   19094:	add	sp, sp, #4
   19098:	pop	{pc}		; (ldr pc, [sp], #4)
   1909c:	str	fp, [sp, #-8]!
   190a0:	str	lr, [sp, #4]
   190a4:	add	fp, sp, #4
   190a8:	sub	sp, sp, #8
   190ac:	str	r0, [fp, #-8]
   190b0:	ldr	r3, [fp, #-8]
   190b4:	cmp	r3, #0
   190b8:	beq	190d0 <__assert_fail@plt+0x815c>
   190bc:	ldr	r0, [fp, #-8]
   190c0:	bl	10e3c <__freading@plt>
   190c4:	mov	r3, r0
   190c8:	cmp	r3, #0
   190cc:	bne	190e0 <__assert_fail@plt+0x816c>
   190d0:	ldr	r0, [fp, #-8]
   190d4:	bl	10d28 <fflush@plt>
   190d8:	mov	r3, r0
   190dc:	b	190f4 <__assert_fail@plt+0x8180>
   190e0:	ldr	r0, [fp, #-8]
   190e4:	bl	19048 <__assert_fail@plt+0x80d4>
   190e8:	ldr	r0, [fp, #-8]
   190ec:	bl	10d28 <fflush@plt>
   190f0:	mov	r3, r0
   190f4:	mov	r0, r3
   190f8:	sub	sp, fp, #4
   190fc:	ldr	fp, [sp]
   19100:	add	sp, sp, #4
   19104:	pop	{pc}		; (ldr pc, [sp], #4)
   19108:	str	fp, [sp, #-8]!
   1910c:	str	lr, [sp, #4]
   19110:	add	fp, sp, #4
   19114:	sub	sp, sp, #32
   19118:	str	r0, [fp, #-16]
   1911c:	strd	r2, [fp, #-28]	; 0xffffffe4
   19120:	ldr	r3, [fp, #-16]
   19124:	ldr	r2, [r3, #8]
   19128:	ldr	r3, [fp, #-16]
   1912c:	ldr	r3, [r3, #4]
   19130:	cmp	r2, r3
   19134:	bne	191cc <__assert_fail@plt+0x8258>
   19138:	ldr	r3, [fp, #-16]
   1913c:	ldr	r2, [r3, #20]
   19140:	ldr	r3, [fp, #-16]
   19144:	ldr	r3, [r3, #16]
   19148:	cmp	r2, r3
   1914c:	bne	191cc <__assert_fail@plt+0x8258>
   19150:	ldr	r3, [fp, #-16]
   19154:	ldr	r3, [r3, #36]	; 0x24
   19158:	cmp	r3, #0
   1915c:	bne	191cc <__assert_fail@plt+0x8258>
   19160:	ldr	r0, [fp, #-16]
   19164:	bl	10ed8 <fileno@plt>
   19168:	mov	r1, r0
   1916c:	ldr	r3, [fp, #4]
   19170:	str	r3, [sp]
   19174:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   19178:	mov	r0, r1
   1917c:	bl	10dd0 <lseek64@plt>
   19180:	strd	r0, [fp, #-12]
   19184:	ldrd	r2, [fp, #-12]
   19188:	mvn	r0, #0
   1918c:	mvn	r1, #0
   19190:	cmp	r3, r1
   19194:	cmpeq	r2, r0
   19198:	bne	191a4 <__assert_fail@plt+0x8230>
   1919c:	mvn	r3, #0
   191a0:	b	191e4 <__assert_fail@plt+0x8270>
   191a4:	ldr	r3, [fp, #-16]
   191a8:	ldr	r3, [r3]
   191ac:	bic	r2, r3, #16
   191b0:	ldr	r3, [fp, #-16]
   191b4:	str	r2, [r3]
   191b8:	ldr	r1, [fp, #-16]
   191bc:	ldrd	r2, [fp, #-12]
   191c0:	strd	r2, [r1, #80]	; 0x50
   191c4:	mov	r3, #0
   191c8:	b	191e4 <__assert_fail@plt+0x8270>
   191cc:	ldr	r3, [fp, #4]
   191d0:	str	r3, [sp]
   191d4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   191d8:	ldr	r0, [fp, #-16]
   191dc:	bl	10f08 <fseeko64@plt>
   191e0:	mov	r3, r0
   191e4:	mov	r0, r3
   191e8:	sub	sp, fp, #4
   191ec:	ldr	fp, [sp]
   191f0:	add	sp, sp, #4
   191f4:	pop	{pc}		; (ldr pc, [sp], #4)
   191f8:	str	fp, [sp, #-8]!
   191fc:	str	lr, [sp, #4]
   19200:	add	fp, sp, #4
   19204:	bl	10eb4 <__errno_location@plt>
   19208:	mov	r2, r0
   1920c:	mov	r3, #12
   19210:	str	r3, [r2]
   19214:	mov	r3, #0
   19218:	mov	r0, r3
   1921c:	sub	sp, fp, #4
   19220:	ldr	fp, [sp]
   19224:	add	sp, sp, #4
   19228:	pop	{pc}		; (ldr pc, [sp], #4)
   1922c:	str	fp, [sp, #-8]!
   19230:	str	lr, [sp, #4]
   19234:	add	fp, sp, #4
   19238:	sub	sp, sp, #8
   1923c:	str	r0, [fp, #-8]
   19240:	ldr	r3, [fp, #-8]
   19244:	mov	r0, r3
   19248:	bl	18c08 <__assert_fail@plt+0x7c94>
   1924c:	mov	r3, r0
   19250:	mov	r0, r3
   19254:	sub	sp, fp, #4
   19258:	ldr	fp, [sp]
   1925c:	add	sp, sp, #4
   19260:	pop	{pc}		; (ldr pc, [sp], #4)
   19264:	str	fp, [sp, #-8]!
   19268:	str	lr, [sp, #4]
   1926c:	add	fp, sp, #4
   19270:	sub	sp, sp, #8
   19274:	str	r0, [fp, #-8]
   19278:	str	r1, [fp, #-12]
   1927c:	ldr	r3, [fp, #-12]
   19280:	cmp	r3, #0
   19284:	moveq	r3, #1
   19288:	movne	r3, #0
   1928c:	uxtb	r3, r3
   19290:	mov	r2, r3
   19294:	ldr	r3, [fp, #-12]
   19298:	orr	r3, r2, r3
   1929c:	mov	r1, r3
   192a0:	ldr	r0, [fp, #-8]
   192a4:	bl	18c98 <__assert_fail@plt+0x7d24>
   192a8:	mov	r3, r0
   192ac:	mov	r0, r3
   192b0:	sub	sp, fp, #4
   192b4:	ldr	fp, [sp]
   192b8:	add	sp, sp, #4
   192bc:	pop	{pc}		; (ldr pc, [sp], #4)
   192c0:	str	fp, [sp, #-8]!
   192c4:	str	lr, [sp, #4]
   192c8:	add	fp, sp, #4
   192cc:	sub	sp, sp, #8
   192d0:	str	r0, [fp, #-8]
   192d4:	str	r1, [fp, #-12]
   192d8:	ldr	r3, [fp, #-8]
   192dc:	ldr	r2, [fp, #-12]
   192e0:	mov	r1, r2
   192e4:	mov	r0, r3
   192e8:	bl	18b38 <__assert_fail@plt+0x7bc4>
   192ec:	mov	r3, r0
   192f0:	mov	r0, r3
   192f4:	sub	sp, fp, #4
   192f8:	ldr	fp, [sp]
   192fc:	add	sp, sp, #4
   19300:	pop	{pc}		; (ldr pc, [sp], #4)
   19304:	str	fp, [sp, #-8]!
   19308:	str	lr, [sp, #4]
   1930c:	add	fp, sp, #4
   19310:	sub	sp, sp, #16
   19314:	str	r0, [fp, #-8]
   19318:	str	r1, [fp, #-12]
   1931c:	str	r2, [fp, #-16]
   19320:	ldr	r3, [fp, #-12]
   19324:	cmp	r3, #0
   19328:	beq	19338 <__assert_fail@plt+0x83c4>
   1932c:	ldr	r3, [fp, #-16]
   19330:	cmp	r3, #0
   19334:	bne	19348 <__assert_fail@plt+0x83d4>
   19338:	mov	r3, #1
   1933c:	str	r3, [fp, #-16]
   19340:	ldr	r3, [fp, #-16]
   19344:	str	r3, [fp, #-12]
   19348:	ldr	r3, [fp, #-12]
   1934c:	ldr	r2, [fp, #-16]
   19350:	mov	r1, r3
   19354:	ldr	r0, [fp, #-8]
   19358:	bl	19494 <__assert_fail@plt+0x8520>
   1935c:	mov	r3, r0
   19360:	mov	r0, r3
   19364:	sub	sp, fp, #4
   19368:	ldr	fp, [sp]
   1936c:	add	sp, sp, #4
   19370:	pop	{pc}		; (ldr pc, [sp], #4)
   19374:	str	fp, [sp, #-8]!
   19378:	str	lr, [sp, #4]
   1937c:	add	fp, sp, #4
   19380:	sub	sp, sp, #8
   19384:	mov	r0, #14
   19388:	bl	10f2c <nl_langinfo@plt>
   1938c:	str	r0, [fp, #-8]
   19390:	ldr	r3, [fp, #-8]
   19394:	cmp	r3, #0
   19398:	bne	193a8 <__assert_fail@plt+0x8434>
   1939c:	movw	r3, #44552	; 0xae08
   193a0:	movt	r3, #1
   193a4:	str	r3, [fp, #-8]
   193a8:	ldr	r3, [fp, #-8]
   193ac:	ldrb	r3, [r3]
   193b0:	cmp	r3, #0
   193b4:	bne	193c4 <__assert_fail@plt+0x8450>
   193b8:	movw	r3, #44556	; 0xae0c
   193bc:	movt	r3, #1
   193c0:	str	r3, [fp, #-8]
   193c4:	ldr	r3, [fp, #-8]
   193c8:	mov	r0, r3
   193cc:	sub	sp, fp, #4
   193d0:	ldr	fp, [sp]
   193d4:	add	sp, sp, #4
   193d8:	pop	{pc}		; (ldr pc, [sp], #4)
   193dc:	str	fp, [sp, #-8]!
   193e0:	str	lr, [sp, #4]
   193e4:	add	fp, sp, #4
   193e8:	sub	sp, sp, #32
   193ec:	str	r0, [fp, #-24]	; 0xffffffe8
   193f0:	str	r1, [fp, #-28]	; 0xffffffe4
   193f4:	str	r2, [fp, #-32]	; 0xffffffe0
   193f8:	str	r3, [fp, #-36]	; 0xffffffdc
   193fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19400:	cmp	r3, #0
   19404:	bne	19410 <__assert_fail@plt+0x849c>
   19408:	sub	r3, fp, #16
   1940c:	str	r3, [fp, #-24]	; 0xffffffe8
   19410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19414:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19418:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1941c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19420:	bl	10e00 <mbrtowc@plt>
   19424:	str	r0, [fp, #-8]
   19428:	ldr	r3, [fp, #-8]
   1942c:	cmn	r3, #3
   19430:	bls	1947c <__assert_fail@plt+0x8508>
   19434:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19438:	cmp	r3, #0
   1943c:	beq	1947c <__assert_fail@plt+0x8508>
   19440:	mov	r0, #0
   19444:	bl	19a60 <__assert_fail@plt+0x8aec>
   19448:	mov	r3, r0
   1944c:	eor	r3, r3, #1
   19450:	uxtb	r3, r3
   19454:	cmp	r3, #0
   19458:	beq	1947c <__assert_fail@plt+0x8508>
   1945c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19460:	ldrb	r3, [r3]
   19464:	strb	r3, [fp, #-9]
   19468:	ldrb	r2, [fp, #-9]
   1946c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19470:	str	r2, [r3]
   19474:	mov	r3, #1
   19478:	b	19480 <__assert_fail@plt+0x850c>
   1947c:	ldr	r3, [fp, #-8]
   19480:	mov	r0, r3
   19484:	sub	sp, fp, #4
   19488:	ldr	fp, [sp]
   1948c:	add	sp, sp, #4
   19490:	pop	{pc}		; (ldr pc, [sp], #4)
   19494:	str	fp, [sp, #-8]!
   19498:	str	lr, [sp, #4]
   1949c:	add	fp, sp, #4
   194a0:	sub	sp, sp, #24
   194a4:	str	r0, [fp, #-16]
   194a8:	str	r1, [fp, #-20]	; 0xffffffec
   194ac:	str	r2, [fp, #-24]	; 0xffffffe8
   194b0:	mov	ip, #0
   194b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   194b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194bc:	umull	r0, r1, r2, r3
   194c0:	mov	r2, #0
   194c4:	mov	r3, #0
   194c8:	mov	r2, r1
   194cc:	mov	r3, #0
   194d0:	cmp	r2, #0
   194d4:	beq	194dc <__assert_fail@plt+0x8568>
   194d8:	mov	ip, #1
   194dc:	mov	r3, r0
   194e0:	str	r3, [fp, #-8]
   194e4:	mov	r3, ip
   194e8:	and	r3, r3, #1
   194ec:	uxtb	r3, r3
   194f0:	cmp	r3, #0
   194f4:	beq	19510 <__assert_fail@plt+0x859c>
   194f8:	bl	10eb4 <__errno_location@plt>
   194fc:	mov	r2, r0
   19500:	mov	r3, #12
   19504:	str	r3, [r2]
   19508:	mov	r3, #0
   1950c:	b	19524 <__assert_fail@plt+0x85b0>
   19510:	ldr	r3, [fp, #-8]
   19514:	mov	r1, r3
   19518:	ldr	r0, [fp, #-16]
   1951c:	bl	18c98 <__assert_fail@plt+0x7d24>
   19520:	mov	r3, r0
   19524:	mov	r0, r3
   19528:	sub	sp, fp, #4
   1952c:	ldr	fp, [sp]
   19530:	add	sp, sp, #4
   19534:	pop	{pc}		; (ldr pc, [sp], #4)
   19538:	push	{fp}		; (str fp, [sp, #-4]!)
   1953c:	add	fp, sp, #0
   19540:	sub	sp, sp, #12
   19544:	str	r0, [fp, #-8]
   19548:	ldr	r3, [fp, #-8]
   1954c:	cmp	r3, #90	; 0x5a
   19550:	bgt	19574 <__assert_fail@plt+0x8600>
   19554:	ldr	r3, [fp, #-8]
   19558:	cmp	r3, #65	; 0x41
   1955c:	bge	19584 <__assert_fail@plt+0x8610>
   19560:	ldr	r3, [fp, #-8]
   19564:	sub	r3, r3, #48	; 0x30
   19568:	cmp	r3, #9
   1956c:	bhi	1958c <__assert_fail@plt+0x8618>
   19570:	b	19584 <__assert_fail@plt+0x8610>
   19574:	ldr	r3, [fp, #-8]
   19578:	sub	r3, r3, #97	; 0x61
   1957c:	cmp	r3, #25
   19580:	bhi	1958c <__assert_fail@plt+0x8618>
   19584:	mov	r3, #1
   19588:	b	19590 <__assert_fail@plt+0x861c>
   1958c:	mov	r3, #0
   19590:	mov	r0, r3
   19594:	add	sp, fp, #0
   19598:	pop	{fp}		; (ldr fp, [sp], #4)
   1959c:	bx	lr
   195a0:	push	{fp}		; (str fp, [sp, #-4]!)
   195a4:	add	fp, sp, #0
   195a8:	sub	sp, sp, #12
   195ac:	str	r0, [fp, #-8]
   195b0:	ldr	r3, [fp, #-8]
   195b4:	cmp	r3, #65	; 0x41
   195b8:	blt	195e0 <__assert_fail@plt+0x866c>
   195bc:	ldr	r3, [fp, #-8]
   195c0:	cmp	r3, #90	; 0x5a
   195c4:	ble	195d8 <__assert_fail@plt+0x8664>
   195c8:	ldr	r3, [fp, #-8]
   195cc:	sub	r3, r3, #97	; 0x61
   195d0:	cmp	r3, #25
   195d4:	bhi	195e0 <__assert_fail@plt+0x866c>
   195d8:	mov	r3, #1
   195dc:	b	195e4 <__assert_fail@plt+0x8670>
   195e0:	mov	r3, #0
   195e4:	mov	r0, r3
   195e8:	add	sp, fp, #0
   195ec:	pop	{fp}		; (ldr fp, [sp], #4)
   195f0:	bx	lr
   195f4:	push	{fp}		; (str fp, [sp, #-4]!)
   195f8:	add	fp, sp, #0
   195fc:	sub	sp, sp, #12
   19600:	str	r0, [fp, #-8]
   19604:	ldr	r3, [fp, #-8]
   19608:	cmp	r3, #127	; 0x7f
   1960c:	bhi	19618 <__assert_fail@plt+0x86a4>
   19610:	mov	r3, #1
   19614:	b	1961c <__assert_fail@plt+0x86a8>
   19618:	mov	r3, #0
   1961c:	mov	r0, r3
   19620:	add	sp, fp, #0
   19624:	pop	{fp}		; (ldr fp, [sp], #4)
   19628:	bx	lr
   1962c:	push	{fp}		; (str fp, [sp, #-4]!)
   19630:	add	fp, sp, #0
   19634:	sub	sp, sp, #12
   19638:	str	r0, [fp, #-8]
   1963c:	ldr	r3, [fp, #-8]
   19640:	cmp	r3, #32
   19644:	beq	19654 <__assert_fail@plt+0x86e0>
   19648:	ldr	r3, [fp, #-8]
   1964c:	cmp	r3, #9
   19650:	bne	1965c <__assert_fail@plt+0x86e8>
   19654:	mov	r3, #1
   19658:	b	19660 <__assert_fail@plt+0x86ec>
   1965c:	mov	r3, #0
   19660:	and	r3, r3, #1
   19664:	uxtb	r3, r3
   19668:	mov	r0, r3
   1966c:	add	sp, fp, #0
   19670:	pop	{fp}		; (ldr fp, [sp], #4)
   19674:	bx	lr
   19678:	push	{fp}		; (str fp, [sp, #-4]!)
   1967c:	add	fp, sp, #0
   19680:	sub	sp, sp, #12
   19684:	str	r0, [fp, #-8]
   19688:	ldr	r3, [fp, #-8]
   1968c:	cmp	r3, #0
   19690:	blt	196b4 <__assert_fail@plt+0x8740>
   19694:	ldr	r3, [fp, #-8]
   19698:	cmp	r3, #31
   1969c:	ble	196ac <__assert_fail@plt+0x8738>
   196a0:	ldr	r3, [fp, #-8]
   196a4:	cmp	r3, #127	; 0x7f
   196a8:	bne	196b4 <__assert_fail@plt+0x8740>
   196ac:	mov	r3, #1
   196b0:	b	196b8 <__assert_fail@plt+0x8744>
   196b4:	mov	r3, #0
   196b8:	mov	r0, r3
   196bc:	add	sp, fp, #0
   196c0:	pop	{fp}		; (ldr fp, [sp], #4)
   196c4:	bx	lr
   196c8:	push	{fp}		; (str fp, [sp, #-4]!)
   196cc:	add	fp, sp, #0
   196d0:	sub	sp, sp, #12
   196d4:	str	r0, [fp, #-8]
   196d8:	ldr	r3, [fp, #-8]
   196dc:	sub	r3, r3, #48	; 0x30
   196e0:	cmp	r3, #9
   196e4:	bhi	196f0 <__assert_fail@plt+0x877c>
   196e8:	mov	r3, #1
   196ec:	b	196f4 <__assert_fail@plt+0x8780>
   196f0:	mov	r3, #0
   196f4:	mov	r0, r3
   196f8:	add	sp, fp, #0
   196fc:	pop	{fp}		; (ldr fp, [sp], #4)
   19700:	bx	lr
   19704:	push	{fp}		; (str fp, [sp, #-4]!)
   19708:	add	fp, sp, #0
   1970c:	sub	sp, sp, #12
   19710:	str	r0, [fp, #-8]
   19714:	ldr	r3, [fp, #-8]
   19718:	sub	r3, r3, #33	; 0x21
   1971c:	cmp	r3, #93	; 0x5d
   19720:	bhi	1972c <__assert_fail@plt+0x87b8>
   19724:	mov	r3, #1
   19728:	b	19730 <__assert_fail@plt+0x87bc>
   1972c:	mov	r3, #0
   19730:	mov	r0, r3
   19734:	add	sp, fp, #0
   19738:	pop	{fp}		; (ldr fp, [sp], #4)
   1973c:	bx	lr
   19740:	push	{fp}		; (str fp, [sp, #-4]!)
   19744:	add	fp, sp, #0
   19748:	sub	sp, sp, #12
   1974c:	str	r0, [fp, #-8]
   19750:	ldr	r3, [fp, #-8]
   19754:	sub	r3, r3, #97	; 0x61
   19758:	cmp	r3, #25
   1975c:	bhi	19768 <__assert_fail@plt+0x87f4>
   19760:	mov	r3, #1
   19764:	b	1976c <__assert_fail@plt+0x87f8>
   19768:	mov	r3, #0
   1976c:	mov	r0, r3
   19770:	add	sp, fp, #0
   19774:	pop	{fp}		; (ldr fp, [sp], #4)
   19778:	bx	lr
   1977c:	push	{fp}		; (str fp, [sp, #-4]!)
   19780:	add	fp, sp, #0
   19784:	sub	sp, sp, #12
   19788:	str	r0, [fp, #-8]
   1978c:	ldr	r3, [fp, #-8]
   19790:	sub	r3, r3, #32
   19794:	cmp	r3, #94	; 0x5e
   19798:	bhi	197a4 <__assert_fail@plt+0x8830>
   1979c:	mov	r3, #1
   197a0:	b	197a8 <__assert_fail@plt+0x8834>
   197a4:	mov	r3, #0
   197a8:	mov	r0, r3
   197ac:	add	sp, fp, #0
   197b0:	pop	{fp}		; (ldr fp, [sp], #4)
   197b4:	bx	lr
   197b8:	push	{fp}		; (str fp, [sp, #-4]!)
   197bc:	add	fp, sp, #0
   197c0:	sub	sp, sp, #12
   197c4:	str	r0, [fp, #-8]
   197c8:	ldr	r3, [fp, #-8]
   197cc:	cmp	r3, #64	; 0x40
   197d0:	bgt	197f4 <__assert_fail@plt+0x8880>
   197d4:	ldr	r3, [fp, #-8]
   197d8:	cmp	r3, #58	; 0x3a
   197dc:	bge	1981c <__assert_fail@plt+0x88a8>
   197e0:	ldr	r3, [fp, #-8]
   197e4:	sub	r3, r3, #33	; 0x21
   197e8:	cmp	r3, #14
   197ec:	bhi	19824 <__assert_fail@plt+0x88b0>
   197f0:	b	1981c <__assert_fail@plt+0x88a8>
   197f4:	ldr	r3, [fp, #-8]
   197f8:	cmp	r3, #91	; 0x5b
   197fc:	blt	19824 <__assert_fail@plt+0x88b0>
   19800:	ldr	r3, [fp, #-8]
   19804:	cmp	r3, #96	; 0x60
   19808:	ble	1981c <__assert_fail@plt+0x88a8>
   1980c:	ldr	r3, [fp, #-8]
   19810:	sub	r3, r3, #123	; 0x7b
   19814:	cmp	r3, #3
   19818:	bhi	19824 <__assert_fail@plt+0x88b0>
   1981c:	mov	r3, #1
   19820:	b	19828 <__assert_fail@plt+0x88b4>
   19824:	mov	r3, #0
   19828:	mov	r0, r3
   1982c:	add	sp, fp, #0
   19830:	pop	{fp}		; (ldr fp, [sp], #4)
   19834:	bx	lr
   19838:	push	{fp}		; (str fp, [sp, #-4]!)
   1983c:	add	fp, sp, #0
   19840:	sub	sp, sp, #12
   19844:	str	r0, [fp, #-8]
   19848:	ldr	r3, [fp, #-8]
   1984c:	cmp	r3, #9
   19850:	blt	19874 <__assert_fail@plt+0x8900>
   19854:	ldr	r3, [fp, #-8]
   19858:	cmp	r3, #13
   1985c:	ble	1986c <__assert_fail@plt+0x88f8>
   19860:	ldr	r3, [fp, #-8]
   19864:	cmp	r3, #32
   19868:	bne	19874 <__assert_fail@plt+0x8900>
   1986c:	mov	r3, #1
   19870:	b	19878 <__assert_fail@plt+0x8904>
   19874:	mov	r3, #0
   19878:	mov	r0, r3
   1987c:	add	sp, fp, #0
   19880:	pop	{fp}		; (ldr fp, [sp], #4)
   19884:	bx	lr
   19888:	push	{fp}		; (str fp, [sp, #-4]!)
   1988c:	add	fp, sp, #0
   19890:	sub	sp, sp, #12
   19894:	str	r0, [fp, #-8]
   19898:	ldr	r3, [fp, #-8]
   1989c:	sub	r3, r3, #65	; 0x41
   198a0:	cmp	r3, #25
   198a4:	bhi	198b0 <__assert_fail@plt+0x893c>
   198a8:	mov	r3, #1
   198ac:	b	198b4 <__assert_fail@plt+0x8940>
   198b0:	mov	r3, #0
   198b4:	mov	r0, r3
   198b8:	add	sp, fp, #0
   198bc:	pop	{fp}		; (ldr fp, [sp], #4)
   198c0:	bx	lr
   198c4:	push	{fp}		; (str fp, [sp, #-4]!)
   198c8:	add	fp, sp, #0
   198cc:	sub	sp, sp, #12
   198d0:	str	r0, [fp, #-8]
   198d4:	ldr	r3, [fp, #-8]
   198d8:	sub	r3, r3, #48	; 0x30
   198dc:	cmp	r3, #54	; 0x36
   198e0:	ldrls	pc, [pc, r3, lsl #2]
   198e4:	b	199cc <__assert_fail@plt+0x8a58>
   198e8:	andeq	r9, r1, r4, asr #19
   198ec:	andeq	r9, r1, r4, asr #19
   198f0:	andeq	r9, r1, r4, asr #19
   198f4:	andeq	r9, r1, r4, asr #19
   198f8:	andeq	r9, r1, r4, asr #19
   198fc:	andeq	r9, r1, r4, asr #19
   19900:	andeq	r9, r1, r4, asr #19
   19904:	andeq	r9, r1, r4, asr #19
   19908:	andeq	r9, r1, r4, asr #19
   1990c:	andeq	r9, r1, r4, asr #19
   19910:	andeq	r9, r1, ip, asr #19
   19914:	andeq	r9, r1, ip, asr #19
   19918:	andeq	r9, r1, ip, asr #19
   1991c:	andeq	r9, r1, ip, asr #19
   19920:	andeq	r9, r1, ip, asr #19
   19924:	andeq	r9, r1, ip, asr #19
   19928:	andeq	r9, r1, ip, asr #19
   1992c:	andeq	r9, r1, r4, asr #19
   19930:	andeq	r9, r1, r4, asr #19
   19934:	andeq	r9, r1, r4, asr #19
   19938:	andeq	r9, r1, r4, asr #19
   1993c:	andeq	r9, r1, r4, asr #19
   19940:	andeq	r9, r1, r4, asr #19
   19944:	andeq	r9, r1, ip, asr #19
   19948:	andeq	r9, r1, ip, asr #19
   1994c:	andeq	r9, r1, ip, asr #19
   19950:	andeq	r9, r1, ip, asr #19
   19954:	andeq	r9, r1, ip, asr #19
   19958:	andeq	r9, r1, ip, asr #19
   1995c:	andeq	r9, r1, ip, asr #19
   19960:	andeq	r9, r1, ip, asr #19
   19964:	andeq	r9, r1, ip, asr #19
   19968:	andeq	r9, r1, ip, asr #19
   1996c:	andeq	r9, r1, ip, asr #19
   19970:	andeq	r9, r1, ip, asr #19
   19974:	andeq	r9, r1, ip, asr #19
   19978:	andeq	r9, r1, ip, asr #19
   1997c:	andeq	r9, r1, ip, asr #19
   19980:	andeq	r9, r1, ip, asr #19
   19984:	andeq	r9, r1, ip, asr #19
   19988:	andeq	r9, r1, ip, asr #19
   1998c:	andeq	r9, r1, ip, asr #19
   19990:	andeq	r9, r1, ip, asr #19
   19994:	andeq	r9, r1, ip, asr #19
   19998:	andeq	r9, r1, ip, asr #19
   1999c:	andeq	r9, r1, ip, asr #19
   199a0:	andeq	r9, r1, ip, asr #19
   199a4:	andeq	r9, r1, ip, asr #19
   199a8:	andeq	r9, r1, ip, asr #19
   199ac:	andeq	r9, r1, r4, asr #19
   199b0:	andeq	r9, r1, r4, asr #19
   199b4:	andeq	r9, r1, r4, asr #19
   199b8:	andeq	r9, r1, r4, asr #19
   199bc:	andeq	r9, r1, r4, asr #19
   199c0:	andeq	r9, r1, r4, asr #19
   199c4:	mov	r3, #1
   199c8:	b	199d0 <__assert_fail@plt+0x8a5c>
   199cc:	mov	r3, #0
   199d0:	mov	r0, r3
   199d4:	add	sp, fp, #0
   199d8:	pop	{fp}		; (ldr fp, [sp], #4)
   199dc:	bx	lr
   199e0:	push	{fp}		; (str fp, [sp, #-4]!)
   199e4:	add	fp, sp, #0
   199e8:	sub	sp, sp, #12
   199ec:	str	r0, [fp, #-8]
   199f0:	ldr	r3, [fp, #-8]
   199f4:	sub	r3, r3, #65	; 0x41
   199f8:	cmp	r3, #25
   199fc:	bhi	19a0c <__assert_fail@plt+0x8a98>
   19a00:	ldr	r3, [fp, #-8]
   19a04:	add	r3, r3, #32
   19a08:	b	19a10 <__assert_fail@plt+0x8a9c>
   19a0c:	ldr	r3, [fp, #-8]
   19a10:	mov	r0, r3
   19a14:	add	sp, fp, #0
   19a18:	pop	{fp}		; (ldr fp, [sp], #4)
   19a1c:	bx	lr
   19a20:	push	{fp}		; (str fp, [sp, #-4]!)
   19a24:	add	fp, sp, #0
   19a28:	sub	sp, sp, #12
   19a2c:	str	r0, [fp, #-8]
   19a30:	ldr	r3, [fp, #-8]
   19a34:	sub	r3, r3, #97	; 0x61
   19a38:	cmp	r3, #25
   19a3c:	bhi	19a4c <__assert_fail@plt+0x8ad8>
   19a40:	ldr	r3, [fp, #-8]
   19a44:	sub	r3, r3, #32
   19a48:	b	19a50 <__assert_fail@plt+0x8adc>
   19a4c:	ldr	r3, [fp, #-8]
   19a50:	mov	r0, r3
   19a54:	add	sp, fp, #0
   19a58:	pop	{fp}		; (ldr fp, [sp], #4)
   19a5c:	bx	lr
   19a60:	str	fp, [sp, #-8]!
   19a64:	str	lr, [sp, #4]
   19a68:	add	fp, sp, #4
   19a6c:	sub	sp, sp, #272	; 0x110
   19a70:	str	r0, [fp, #-272]	; 0xfffffef0
   19a74:	sub	r3, fp, #264	; 0x108
   19a78:	movw	r2, #257	; 0x101
   19a7c:	mov	r1, r3
   19a80:	ldr	r0, [fp, #-272]	; 0xfffffef0
   19a84:	bl	19c24 <__assert_fail@plt+0x8cb0>
   19a88:	mov	r3, r0
   19a8c:	cmp	r3, #0
   19a90:	beq	19a9c <__assert_fail@plt+0x8b28>
   19a94:	mov	r3, #0
   19a98:	b	19af0 <__assert_fail@plt+0x8b7c>
   19a9c:	sub	r3, fp, #264	; 0x108
   19aa0:	movw	r1, #44564	; 0xae14
   19aa4:	movt	r1, #1
   19aa8:	mov	r0, r3
   19aac:	bl	10d04 <strcmp@plt>
   19ab0:	mov	r3, r0
   19ab4:	cmp	r3, #0
   19ab8:	beq	19ae4 <__assert_fail@plt+0x8b70>
   19abc:	sub	r3, fp, #264	; 0x108
   19ac0:	movw	r1, #44568	; 0xae18
   19ac4:	movt	r1, #1
   19ac8:	mov	r0, r3
   19acc:	bl	10d04 <strcmp@plt>
   19ad0:	mov	r3, r0
   19ad4:	cmp	r3, #0
   19ad8:	beq	19ae4 <__assert_fail@plt+0x8b70>
   19adc:	mov	r3, #1
   19ae0:	b	19ae8 <__assert_fail@plt+0x8b74>
   19ae4:	mov	r3, #0
   19ae8:	and	r3, r3, #1
   19aec:	uxtb	r3, r3
   19af0:	mov	r0, r3
   19af4:	sub	sp, fp, #4
   19af8:	ldr	fp, [sp]
   19afc:	add	sp, sp, #4
   19b00:	pop	{pc}		; (ldr pc, [sp], #4)
   19b04:	str	fp, [sp, #-8]!
   19b08:	str	lr, [sp, #4]
   19b0c:	add	fp, sp, #4
   19b10:	sub	sp, sp, #16
   19b14:	str	r0, [fp, #-16]
   19b18:	mov	r1, #0
   19b1c:	ldr	r0, [fp, #-16]
   19b20:	bl	10f14 <setlocale@plt>
   19b24:	str	r0, [fp, #-8]
   19b28:	ldr	r3, [fp, #-8]
   19b2c:	mov	r0, r3
   19b30:	sub	sp, fp, #4
   19b34:	ldr	fp, [sp]
   19b38:	add	sp, sp, #4
   19b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   19b40:	str	fp, [sp, #-8]!
   19b44:	str	lr, [sp, #4]
   19b48:	add	fp, sp, #4
   19b4c:	sub	sp, sp, #24
   19b50:	str	r0, [fp, #-16]
   19b54:	str	r1, [fp, #-20]	; 0xffffffec
   19b58:	str	r2, [fp, #-24]	; 0xffffffe8
   19b5c:	ldr	r0, [fp, #-16]
   19b60:	bl	19b04 <__assert_fail@plt+0x8b90>
   19b64:	str	r0, [fp, #-8]
   19b68:	ldr	r3, [fp, #-8]
   19b6c:	cmp	r3, #0
   19b70:	bne	19b94 <__assert_fail@plt+0x8c20>
   19b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b78:	cmp	r3, #0
   19b7c:	beq	19b8c <__assert_fail@plt+0x8c18>
   19b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b84:	mov	r2, #0
   19b88:	strb	r2, [r3]
   19b8c:	mov	r3, #22
   19b90:	b	19c10 <__assert_fail@plt+0x8c9c>
   19b94:	ldr	r0, [fp, #-8]
   19b98:	bl	10e84 <strlen@plt>
   19b9c:	str	r0, [fp, #-12]
   19ba0:	ldr	r2, [fp, #-12]
   19ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ba8:	cmp	r2, r3
   19bac:	bcs	19bd0 <__assert_fail@plt+0x8c5c>
   19bb0:	ldr	r3, [fp, #-12]
   19bb4:	add	r3, r3, #1
   19bb8:	mov	r2, r3
   19bbc:	ldr	r1, [fp, #-8]
   19bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19bc4:	bl	10d4c <memcpy@plt>
   19bc8:	mov	r3, #0
   19bcc:	b	19c10 <__assert_fail@plt+0x8c9c>
   19bd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bd4:	cmp	r3, #0
   19bd8:	beq	19c0c <__assert_fail@plt+0x8c98>
   19bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19be0:	sub	r3, r3, #1
   19be4:	mov	r2, r3
   19be8:	ldr	r1, [fp, #-8]
   19bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   19bf0:	bl	10d4c <memcpy@plt>
   19bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bf8:	sub	r3, r3, #1
   19bfc:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c00:	add	r3, r2, r3
   19c04:	mov	r2, #0
   19c08:	strb	r2, [r3]
   19c0c:	mov	r3, #34	; 0x22
   19c10:	mov	r0, r3
   19c14:	sub	sp, fp, #4
   19c18:	ldr	fp, [sp]
   19c1c:	add	sp, sp, #4
   19c20:	pop	{pc}		; (ldr pc, [sp], #4)
   19c24:	str	fp, [sp, #-8]!
   19c28:	str	lr, [sp, #4]
   19c2c:	add	fp, sp, #4
   19c30:	sub	sp, sp, #16
   19c34:	str	r0, [fp, #-8]
   19c38:	str	r1, [fp, #-12]
   19c3c:	str	r2, [fp, #-16]
   19c40:	ldr	r2, [fp, #-16]
   19c44:	ldr	r1, [fp, #-12]
   19c48:	ldr	r0, [fp, #-8]
   19c4c:	bl	19b40 <__assert_fail@plt+0x8bcc>
   19c50:	mov	r3, r0
   19c54:	mov	r0, r3
   19c58:	sub	sp, fp, #4
   19c5c:	ldr	fp, [sp]
   19c60:	add	sp, sp, #4
   19c64:	pop	{pc}		; (ldr pc, [sp], #4)
   19c68:	str	fp, [sp, #-8]!
   19c6c:	str	lr, [sp, #4]
   19c70:	add	fp, sp, #4
   19c74:	sub	sp, sp, #8
   19c78:	str	r0, [fp, #-8]
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	bl	19b04 <__assert_fail@plt+0x8b90>
   19c84:	mov	r3, r0
   19c88:	mov	r0, r3
   19c8c:	sub	sp, fp, #4
   19c90:	ldr	fp, [sp]
   19c94:	add	sp, sp, #4
   19c98:	pop	{pc}		; (ldr pc, [sp], #4)
   19c9c:	cmp	r3, #0
   19ca0:	cmpeq	r2, #0
   19ca4:	bne	19cc8 <__assert_fail@plt+0x8d54>
   19ca8:	cmp	r1, #0
   19cac:	movlt	r1, #-2147483648	; 0x80000000
   19cb0:	movlt	r0, #0
   19cb4:	blt	19cc4 <__assert_fail@plt+0x8d50>
   19cb8:	cmpeq	r0, #0
   19cbc:	mvnne	r1, #-2147483648	; 0x80000000
   19cc0:	mvnne	r0, #0
   19cc4:	b	19dac <__assert_fail@plt+0x8e38>
   19cc8:	sub	sp, sp, #8
   19ccc:	push	{sp, lr}
   19cd0:	cmp	r1, #0
   19cd4:	blt	19cf4 <__assert_fail@plt+0x8d80>
   19cd8:	cmp	r3, #0
   19cdc:	blt	19d28 <__assert_fail@plt+0x8db4>
   19ce0:	bl	19dbc <__assert_fail@plt+0x8e48>
   19ce4:	ldr	lr, [sp, #4]
   19ce8:	add	sp, sp, #8
   19cec:	pop	{r2, r3}
   19cf0:	bx	lr
   19cf4:	rsbs	r0, r0, #0
   19cf8:	sbc	r1, r1, r1, lsl #1
   19cfc:	cmp	r3, #0
   19d00:	blt	19d4c <__assert_fail@plt+0x8dd8>
   19d04:	bl	19dbc <__assert_fail@plt+0x8e48>
   19d08:	ldr	lr, [sp, #4]
   19d0c:	add	sp, sp, #8
   19d10:	pop	{r2, r3}
   19d14:	rsbs	r0, r0, #0
   19d18:	sbc	r1, r1, r1, lsl #1
   19d1c:	rsbs	r2, r2, #0
   19d20:	sbc	r3, r3, r3, lsl #1
   19d24:	bx	lr
   19d28:	rsbs	r2, r2, #0
   19d2c:	sbc	r3, r3, r3, lsl #1
   19d30:	bl	19dbc <__assert_fail@plt+0x8e48>
   19d34:	ldr	lr, [sp, #4]
   19d38:	add	sp, sp, #8
   19d3c:	pop	{r2, r3}
   19d40:	rsbs	r0, r0, #0
   19d44:	sbc	r1, r1, r1, lsl #1
   19d48:	bx	lr
   19d4c:	rsbs	r2, r2, #0
   19d50:	sbc	r3, r3, r3, lsl #1
   19d54:	bl	19dbc <__assert_fail@plt+0x8e48>
   19d58:	ldr	lr, [sp, #4]
   19d5c:	add	sp, sp, #8
   19d60:	pop	{r2, r3}
   19d64:	rsbs	r2, r2, #0
   19d68:	sbc	r3, r3, r3, lsl #1
   19d6c:	bx	lr
   19d70:	cmp	r3, #0
   19d74:	cmpeq	r2, #0
   19d78:	bne	19d90 <__assert_fail@plt+0x8e1c>
   19d7c:	cmp	r1, #0
   19d80:	cmpeq	r0, #0
   19d84:	mvnne	r1, #0
   19d88:	mvnne	r0, #0
   19d8c:	b	19dac <__assert_fail@plt+0x8e38>
   19d90:	sub	sp, sp, #8
   19d94:	push	{sp, lr}
   19d98:	bl	19dbc <__assert_fail@plt+0x8e48>
   19d9c:	ldr	lr, [sp, #4]
   19da0:	add	sp, sp, #8
   19da4:	pop	{r2, r3}
   19da8:	bx	lr
   19dac:	push	{r1, lr}
   19db0:	mov	r0, #8
   19db4:	bl	10cf8 <raise@plt>
   19db8:	pop	{r1, pc}
   19dbc:	cmp	r1, r3
   19dc0:	cmpeq	r0, r2
   19dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19dc8:	mov	r4, r0
   19dcc:	movcc	r0, #0
   19dd0:	mov	r5, r1
   19dd4:	ldr	lr, [sp, #36]	; 0x24
   19dd8:	movcc	r1, r0
   19ddc:	bcc	19ed8 <__assert_fail@plt+0x8f64>
   19de0:	cmp	r3, #0
   19de4:	clzeq	ip, r2
   19de8:	clzne	ip, r3
   19dec:	addeq	ip, ip, #32
   19df0:	cmp	r5, #0
   19df4:	clzeq	r1, r4
   19df8:	addeq	r1, r1, #32
   19dfc:	clzne	r1, r5
   19e00:	sub	ip, ip, r1
   19e04:	sub	sl, ip, #32
   19e08:	lsl	r9, r3, ip
   19e0c:	rsb	fp, ip, #32
   19e10:	orr	r9, r9, r2, lsl sl
   19e14:	orr	r9, r9, r2, lsr fp
   19e18:	lsl	r8, r2, ip
   19e1c:	cmp	r5, r9
   19e20:	cmpeq	r4, r8
   19e24:	movcc	r0, #0
   19e28:	movcc	r1, r0
   19e2c:	bcc	19e48 <__assert_fail@plt+0x8ed4>
   19e30:	mov	r0, #1
   19e34:	subs	r4, r4, r8
   19e38:	lsl	r1, r0, sl
   19e3c:	orr	r1, r1, r0, lsr fp
   19e40:	lsl	r0, r0, ip
   19e44:	sbc	r5, r5, r9
   19e48:	cmp	ip, #0
   19e4c:	beq	19ed8 <__assert_fail@plt+0x8f64>
   19e50:	lsr	r6, r8, #1
   19e54:	orr	r6, r6, r9, lsl #31
   19e58:	lsr	r7, r9, #1
   19e5c:	mov	r2, ip
   19e60:	b	19e84 <__assert_fail@plt+0x8f10>
   19e64:	subs	r3, r4, r6
   19e68:	sbc	r8, r5, r7
   19e6c:	adds	r3, r3, r3
   19e70:	adc	r8, r8, r8
   19e74:	adds	r4, r3, #1
   19e78:	adc	r5, r8, #0
   19e7c:	subs	r2, r2, #1
   19e80:	beq	19ea0 <__assert_fail@plt+0x8f2c>
   19e84:	cmp	r5, r7
   19e88:	cmpeq	r4, r6
   19e8c:	bcs	19e64 <__assert_fail@plt+0x8ef0>
   19e90:	adds	r4, r4, r4
   19e94:	adc	r5, r5, r5
   19e98:	subs	r2, r2, #1
   19e9c:	bne	19e84 <__assert_fail@plt+0x8f10>
   19ea0:	lsr	r3, r4, ip
   19ea4:	orr	r3, r3, r5, lsl fp
   19ea8:	lsr	r2, r5, ip
   19eac:	orr	r3, r3, r5, lsr sl
   19eb0:	adds	r0, r0, r4
   19eb4:	mov	r4, r3
   19eb8:	lsl	r3, r2, ip
   19ebc:	orr	r3, r3, r4, lsl sl
   19ec0:	lsl	ip, r4, ip
   19ec4:	orr	r3, r3, r4, lsr fp
   19ec8:	adc	r1, r1, r5
   19ecc:	subs	r0, r0, ip
   19ed0:	mov	r5, r2
   19ed4:	sbc	r1, r1, r3
   19ed8:	cmp	lr, #0
   19edc:	strdne	r4, [lr]
   19ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ee4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ee8:	mov	r7, r0
   19eec:	ldr	r6, [pc, #72]	; 19f3c <__assert_fail@plt+0x8fc8>
   19ef0:	ldr	r5, [pc, #72]	; 19f40 <__assert_fail@plt+0x8fcc>
   19ef4:	add	r6, pc, r6
   19ef8:	add	r5, pc, r5
   19efc:	sub	r6, r6, r5
   19f00:	mov	r8, r1
   19f04:	mov	r9, r2
   19f08:	bl	10cc0 <calloc@plt-0x20>
   19f0c:	asrs	r6, r6, #2
   19f10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f14:	mov	r4, #0
   19f18:	add	r4, r4, #1
   19f1c:	ldr	r3, [r5], #4
   19f20:	mov	r2, r9
   19f24:	mov	r1, r8
   19f28:	mov	r0, r7
   19f2c:	blx	r3
   19f30:	cmp	r6, r4
   19f34:	bne	19f18 <__assert_fail@plt+0x8fa4>
   19f38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f3c:	andeq	r1, r1, r8, lsl r0
   19f40:	andeq	r1, r1, r0, lsl r0
   19f44:	bx	lr
   19f48:	ldr	r3, [pc, #12]	; 19f5c <__assert_fail@plt+0x8fe8>
   19f4c:	mov	r1, #0
   19f50:	add	r3, pc, r3
   19f54:	ldr	r2, [r3]
   19f58:	b	10ec0 <__cxa_atexit@plt>
   19f5c:	muleq	r1, ip, r1
   19f60:	mov	r2, r1
   19f64:	mov	r1, r0
   19f68:	mov	r0, #3
   19f6c:	b	10db8 <__fxstat64@plt>

Disassembly of section .fini:

00019f70 <.fini>:
   19f70:	push	{r3, lr}
   19f74:	pop	{r3, pc}
