
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000d18 <_init>:
 d18:	push	{r3, lr}
 d1c:	bl	10a0 <call_weak_fn>
 d20:	pop	{r3, pc}

Disassembly of section .plt:

00000d24 <.plt>:
 d24:	push	{lr}		; (str lr, [sp, #-4]!)
 d28:	ldr	lr, [pc, #4]	; d34 <.plt+0x10>
 d2c:	add	lr, pc, lr
 d30:	ldr	pc, [lr, #8]!
 d34:	.word	0x0002f2cc

00000d38 <calloc@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #192512	; 0x2f000
 d40:	ldr	pc, [ip, #716]!	; 0x2cc

00000d44 <raise@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #192512	; 0x2f000
 d4c:	ldr	pc, [ip, #708]!	; 0x2c4

00000d50 <strcmp@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #192512	; 0x2f000
 d58:	ldr	pc, [ip, #700]!	; 0x2bc

00000d5c <__cxa_finalize@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #192512	; 0x2f000
 d64:	ldr	pc, [ip, #692]!	; 0x2b4

00000d68 <printf@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #192512	; 0x2f000
 d70:	ldr	pc, [ip, #684]!	; 0x2ac

00000d74 <fopen@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #192512	; 0x2f000
 d7c:	ldr	pc, [ip, #676]!	; 0x2a4

00000d80 <getprotobyname@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #192512	; 0x2f000
 d88:	ldr	pc, [ip, #668]!	; 0x29c

00000d8c <longjmp@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #192512	; 0x2f000
 d94:	ldr	pc, [ip, #660]!	; 0x294

00000d98 <_setjmp@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #192512	; 0x2f000
 da0:	ldr	pc, [ip, #652]!	; 0x28c

00000da4 <free@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #192512	; 0x2f000
 dac:	ldr	pc, [ip, #644]!	; 0x284

00000db0 <getnetbyname@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #192512	; 0x2f000
 db8:	ldr	pc, [ip, #636]!	; 0x27c

00000dbc <ferror@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #192512	; 0x2f000
 dc4:	ldr	pc, [ip, #628]!	; 0x274

00000dc8 <memcpy@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #192512	; 0x2f000
 dd0:	ldr	pc, [ip, #620]!	; 0x26c

00000dd4 <strdup@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #192512	; 0x2f000
 ddc:	ldr	pc, [ip, #612]!	; 0x264

00000de0 <rewind@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #192512	; 0x2f000
 de8:	ldr	pc, [ip, #604]!	; 0x25c

00000dec <realloc@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #192512	; 0x2f000
 df4:	ldr	pc, [ip, #596]!	; 0x254

00000df8 <fwrite@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #192512	; 0x2f000
 e00:	ldr	pc, [ip, #588]!	; 0x24c

00000e04 <fread@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #192512	; 0x2f000
 e0c:	ldr	pc, [ip, #580]!	; 0x244

00000e10 <puts@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #192512	; 0x2f000
 e18:	ldr	pc, [ip, #572]!	; 0x23c

00000e1c <malloc@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #192512	; 0x2f000
 e24:	ldr	pc, [ip, #564]!	; 0x234

00000e28 <__gmon_start__@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #192512	; 0x2f000
 e30:	ldr	pc, [ip, #556]!	; 0x22c

00000e34 <__ctype_b_loc@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #192512	; 0x2f000
 e3c:	ldr	pc, [ip, #548]!	; 0x224

00000e40 <exit@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #192512	; 0x2f000
 e48:	ldr	pc, [ip, #540]!	; 0x21c

00000e4c <strlen@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #192512	; 0x2f000
 e54:	ldr	pc, [ip, #532]!	; 0x214

00000e58 <strchr@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #192512	; 0x2f000
 e60:	ldr	pc, [ip, #524]!	; 0x20c

00000e64 <fprintf@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #192512	; 0x2f000
 e6c:	ldr	pc, [ip, #516]!	; 0x204

00000e70 <__errno_location@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #192512	; 0x2f000
 e78:	ldr	pc, [ip, #508]!	; 0x1fc

00000e7c <getservbyname@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #192512	; 0x2f000
 e84:	ldr	pc, [ip, #500]!	; 0x1f4

00000e88 <memset@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #192512	; 0x2f000
 e90:	ldr	pc, [ip, #492]!	; 0x1ec

00000e94 <putchar@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #192512	; 0x2f000
 e9c:	ldr	pc, [ip, #484]!	; 0x1e4

00000ea0 <strncpy@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #192512	; 0x2f000
 ea8:	ldr	pc, [ip, #476]!	; 0x1dc

00000eac <fileno@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #192512	; 0x2f000
 eb4:	ldr	pc, [ip, #468]!	; 0x1d4

00000eb8 <sscanf@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #192512	; 0x2f000
 ec0:	ldr	pc, [ip, #460]!	; 0x1cc

00000ec4 <clearerr@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #192512	; 0x2f000
 ecc:	ldr	pc, [ip, #452]!	; 0x1c4

00000ed0 <vsnprintf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #192512	; 0x2f000
 ed8:	ldr	pc, [ip, #444]!	; 0x1bc

00000edc <freeaddrinfo@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #192512	; 0x2f000
 ee4:	ldr	pc, [ip, #436]!	; 0x1b4

00000ee8 <getaddrinfo@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #192512	; 0x2f000
 ef0:	ldr	pc, [ip, #428]!	; 0x1ac

00000ef4 <ffs@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #192512	; 0x2f000
 efc:	ldr	pc, [ip, #420]!	; 0x1a4

00000f00 <gethostbyname@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #192512	; 0x2f000
 f08:	ldr	pc, [ip, #412]!	; 0x19c

00000f0c <isatty@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #192512	; 0x2f000
 f14:	ldr	pc, [ip, #404]!	; 0x194

00000f18 <abort@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #192512	; 0x2f000
 f20:	ldr	pc, [ip, #396]!	; 0x18c

00000f24 <getc@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #192512	; 0x2f000
 f2c:	ldr	pc, [ip, #388]!	; 0x184

Disassembly of section .text:

00000f30 <yy_get_previous_state>:
     f30:	ldr	r1, [pc, #316]	; 1074 <yy_get_previous_state+0x144>
     f34:	ldr	r3, [pc, #316]	; 1078 <yy_get_previous_state+0x148>
     f38:	add	r1, pc, r1
     f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     f40:	sub	sp, sp, #28
     f44:	ldr	r4, [pc, #304]	; 107c <yy_get_previous_state+0x14c>
     f48:	ldr	r0, [pc, #304]	; 1080 <yy_get_previous_state+0x150>
     f4c:	ldr	r6, [r1, r3]
     f50:	ldr	r3, [pc, #300]	; 1084 <yy_get_previous_state+0x154>
     f54:	add	r4, pc, r4
     f58:	add	r0, pc, r0
     f5c:	add	r3, pc, r3
     f60:	ldr	lr, [pc, #288]	; 1088 <yy_get_previous_state+0x158>
     f64:	add	r4, r4, #3120	; 0xc30
     f68:	add	r0, r0, #1104	; 0x450
     f6c:	add	r4, r4, #4
     f70:	add	r0, r0, #12
     f74:	add	lr, pc, lr
     f78:	ldr	ip, [pc, #268]	; 108c <yy_get_previous_state+0x15c>
     f7c:	str	r4, [sp, #16]
     f80:	str	r0, [sp, #20]
     f84:	ldm	r3, {r0, r4}
     f88:	add	r5, lr, #2560	; 0xa00
     f8c:	mov	r2, #0
     f90:	add	r5, r5, #12
     f94:	add	ip, pc, ip
     f98:	ldr	r1, [r6]
     f9c:	mov	r6, r2
     fa0:	str	r5, [sp, #12]
     fa4:	str	r4, [sp, #4]
     fa8:	ldr	r5, [r3, #8]
     fac:	ldr	r4, [r3, #12]
     fb0:	add	r3, ip, #256	; 0x100
     fb4:	str	r3, [sp, #8]
     fb8:	ldr	r3, [sp, #4]
     fbc:	mov	r7, r1
     fc0:	cmp	r1, r3
     fc4:	bcs	104c <yy_get_previous_state+0x11c>
     fc8:	ldrb	r3, [r1], #1
     fcc:	cmp	r3, #0
     fd0:	moveq	ip, #1
     fd4:	ldrne	ip, [pc, #180]	; 1090 <yy_get_previous_state+0x160>
     fd8:	addne	ip, pc, ip
     fdc:	ldrbne	ip, [ip, r3]
     fe0:	ldr	r8, [sp, #8]
     fe4:	lsl	r3, r0, #1
     fe8:	sub	r9, lr, #1216	; 0x4c0
     fec:	ldrsh	r3, [r8, r3]
     ff0:	ldr	r8, [pc, #156]	; 1094 <yy_get_previous_state+0x164>
     ff4:	cmp	r3, #0
     ff8:	movne	r2, #1
     ffc:	movne	r4, r7
    1000:	movne	r6, r2
    1004:	movne	r5, r0
    1008:	lsl	r7, r0, #1
    100c:	ldr	fp, [sp, #12]
    1010:	ldrsh	r3, [r9, r7]
    1014:	add	sl, lr, ip
    1018:	add	r3, r3, ip
    101c:	lsl	r3, r3, #1
    1020:	ldrsh	fp, [fp, r3]
    1024:	cmp	r0, fp
    1028:	beq	1040 <yy_get_previous_state+0x110>
    102c:	ldr	r3, [sp, #16]
    1030:	ldrsh	r0, [r3, r7]
    1034:	cmp	r0, r8
    1038:	ldrbgt	ip, [sl, #-1272]	; 0xfffffb08
    103c:	b	1008 <yy_get_previous_state+0xd8>
    1040:	ldr	r0, [sp, #20]
    1044:	ldrsh	r0, [r0, r3]
    1048:	b	fb8 <yy_get_previous_state+0x88>
    104c:	cmp	r6, #0
    1050:	ldrne	r3, [pc, #64]	; 1098 <yy_get_previous_state+0x168>
    1054:	addne	r3, pc, r3
    1058:	strne	r5, [r3, #8]
    105c:	cmp	r2, #0
    1060:	ldrne	r3, [pc, #52]	; 109c <yy_get_previous_state+0x16c>
    1064:	addne	r3, pc, r3
    1068:	strne	r4, [r3, #12]
    106c:	add	sp, sp, #28
    1070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1074:	.word	0x0002f0c0
    1078:	.word	0x000000dc
    107c:	.word	0x00014ab0
    1080:	.word	0x0001aa94
    1084:	.word	0x0002fbe0
    1088:	.word	0x00016a88
    108c:	.word	0x00014a70
    1090:	.word	0x00014a2c
    1094:	.word	0x00000599
    1098:	.word	0x0002fae8
    109c:	.word	0x0002fad8

000010a0 <call_weak_fn>:
    10a0:	ldr	r3, [pc, #20]	; 10bc <call_weak_fn+0x1c>
    10a4:	ldr	r2, [pc, #20]	; 10c0 <call_weak_fn+0x20>
    10a8:	add	r3, pc, r3
    10ac:	ldr	r2, [r3, r2]
    10b0:	cmp	r2, #0
    10b4:	bxeq	lr
    10b8:	b	e28 <__gmon_start__@plt>
    10bc:	.word	0x0002ef50
    10c0:	.word	0x000000e0

000010c4 <deregister_tm_clones>:
    10c4:	ldr	r3, [pc, #52]	; 1100 <deregister_tm_clones+0x3c>
    10c8:	ldr	r0, [pc, #52]	; 1104 <deregister_tm_clones+0x40>
    10cc:	add	r3, pc, r3
    10d0:	add	r0, pc, r0
    10d4:	add	r3, r3, #3
    10d8:	sub	r3, r3, r0
    10dc:	cmp	r3, #6
    10e0:	ldr	r3, [pc, #32]	; 1108 <deregister_tm_clones+0x44>
    10e4:	add	r3, pc, r3
    10e8:	bxls	lr
    10ec:	ldr	r2, [pc, #24]	; 110c <deregister_tm_clones+0x48>
    10f0:	ldr	r3, [r3, r2]
    10f4:	cmp	r3, #0
    10f8:	bxeq	lr
    10fc:	bx	r3
    1100:	.word	0x0002f290
    1104:	.word	0x0002f28c
    1108:	.word	0x0002ef14
    110c:	.word	0x000000c0

00001110 <register_tm_clones>:
    1110:	ldr	r1, [pc, #56]	; 1150 <register_tm_clones+0x40>
    1114:	ldr	r0, [pc, #56]	; 1154 <register_tm_clones+0x44>
    1118:	add	r1, pc, r1
    111c:	add	r0, pc, r0
    1120:	sub	r1, r1, r0
    1124:	ldr	r3, [pc, #44]	; 1158 <register_tm_clones+0x48>
    1128:	asr	r1, r1, #2
    112c:	add	r3, pc, r3
    1130:	add	r1, r1, r1, lsr #31
    1134:	asrs	r1, r1, #1
    1138:	bxeq	lr
    113c:	ldr	r2, [pc, #24]	; 115c <register_tm_clones+0x4c>
    1140:	ldr	r3, [r3, r2]
    1144:	cmp	r3, #0
    1148:	bxeq	lr
    114c:	bx	r3
    1150:	.word	0x0002f244
    1154:	.word	0x0002f240
    1158:	.word	0x0002eecc
    115c:	.word	0x00000100

00001160 <__do_global_dtors_aux>:
    1160:	ldr	r3, [pc, #76]	; 11b4 <__do_global_dtors_aux+0x54>
    1164:	ldr	r2, [pc, #76]	; 11b8 <__do_global_dtors_aux+0x58>
    1168:	add	r3, pc, r3
    116c:	add	r2, pc, r2
    1170:	ldrb	r3, [r3]
    1174:	cmp	r3, #0
    1178:	bxne	lr
    117c:	ldr	r3, [pc, #56]	; 11bc <__do_global_dtors_aux+0x5c>
    1180:	push	{r4, lr}
    1184:	ldr	r3, [r2, r3]
    1188:	cmp	r3, #0
    118c:	beq	119c <__do_global_dtors_aux+0x3c>
    1190:	ldr	r3, [pc, #40]	; 11c0 <__do_global_dtors_aux+0x60>
    1194:	ldr	r0, [pc, r3]
    1198:	bl	d5c <__cxa_finalize@plt>
    119c:	bl	10c4 <deregister_tm_clones>
    11a0:	ldr	r3, [pc, #28]	; 11c4 <__do_global_dtors_aux+0x64>
    11a4:	mov	r2, #1
    11a8:	add	r3, pc, r3
    11ac:	strb	r2, [r3]
    11b0:	pop	{r4, pc}
    11b4:	.word	0x0002f1f8
    11b8:	.word	0x0002ee8c
    11bc:	.word	0x000000bc
    11c0:	.word	0x0002ef70
    11c4:	.word	0x0002f1b8

000011c8 <frame_dummy>:
    11c8:	ldr	r0, [pc, #56]	; 1208 <frame_dummy+0x40>
    11cc:	ldr	r3, [pc, #56]	; 120c <frame_dummy+0x44>
    11d0:	add	r0, pc, r0
    11d4:	ldr	r2, [r0]
    11d8:	add	r3, pc, r3
    11dc:	cmp	r2, #0
    11e0:	bne	11e8 <frame_dummy+0x20>
    11e4:	b	1110 <register_tm_clones>
    11e8:	ldr	r2, [pc, #32]	; 1210 <frame_dummy+0x48>
    11ec:	ldr	r3, [r3, r2]
    11f0:	cmp	r3, #0
    11f4:	beq	11e4 <frame_dummy+0x1c>
    11f8:	push	{r4, lr}
    11fc:	blx	r3
    1200:	pop	{r4, lr}
    1204:	b	1110 <register_tm_clones>
    1208:	.word	0x0002eb8c
    120c:	.word	0x0002ee20
    1210:	.word	0x000000f8

00001214 <sfbpf_filter>:
    1214:	cmp	r0, #0
    1218:	bne	1224 <sfbpf_filter+0x10>
    121c:	mvn	r0, #0
    1220:	bx	lr
    1224:	push	{r4, r5, r6, r7, r8, lr}
    1228:	mov	r8, #0
    122c:	sub	ip, r0, #8
    1230:	sub	sp, sp, #64	; 0x40
    1234:	mov	r4, r3
    1238:	mov	r7, r2
    123c:	mov	r6, r1
    1240:	mov	r0, r8
    1244:	ldrh	lr, [ip, #8]
    1248:	add	r5, ip, #8
    124c:	cmp	lr, #177	; 0xb1
    1250:	addls	pc, pc, lr, lsl #2
    1254:	b	1840 <sfbpf_filter+0x62c>
    1258:	b	17f0 <sfbpf_filter+0x5dc>
    125c:	b	17e4 <sfbpf_filter+0x5d0>
    1260:	b	17cc <sfbpf_filter+0x5b8>
    1264:	b	17b4 <sfbpf_filter+0x5a0>
    1268:	b	17a4 <sfbpf_filter+0x590>
    126c:	b	1798 <sfbpf_filter+0x584>
    1270:	b	1790 <sfbpf_filter+0x57c>
    1274:	b	1784 <sfbpf_filter+0x570>
    1278:	b	1840 <sfbpf_filter+0x62c>
    127c:	b	1840 <sfbpf_filter+0x62c>
    1280:	b	1840 <sfbpf_filter+0x62c>
    1284:	b	1840 <sfbpf_filter+0x62c>
    1288:	b	1778 <sfbpf_filter+0x564>
    128c:	b	1840 <sfbpf_filter+0x62c>
    1290:	b	1840 <sfbpf_filter+0x62c>
    1294:	b	1840 <sfbpf_filter+0x62c>
    1298:	b	1840 <sfbpf_filter+0x62c>
    129c:	b	1840 <sfbpf_filter+0x62c>
    12a0:	b	1840 <sfbpf_filter+0x62c>
    12a4:	b	1840 <sfbpf_filter+0x62c>
    12a8:	b	1768 <sfbpf_filter+0x554>
    12ac:	b	1758 <sfbpf_filter+0x544>
    12b0:	b	1530 <sfbpf_filter+0x31c>
    12b4:	b	1840 <sfbpf_filter+0x62c>
    12b8:	b	1840 <sfbpf_filter+0x62c>
    12bc:	b	1840 <sfbpf_filter+0x62c>
    12c0:	b	1840 <sfbpf_filter+0x62c>
    12c4:	b	1840 <sfbpf_filter+0x62c>
    12c8:	b	174c <sfbpf_filter+0x538>
    12cc:	b	1740 <sfbpf_filter+0x52c>
    12d0:	b	1840 <sfbpf_filter+0x62c>
    12d4:	b	1840 <sfbpf_filter+0x62c>
    12d8:	b	172c <sfbpf_filter+0x518>
    12dc:	b	1840 <sfbpf_filter+0x62c>
    12e0:	b	1840 <sfbpf_filter+0x62c>
    12e4:	b	1840 <sfbpf_filter+0x62c>
    12e8:	b	171c <sfbpf_filter+0x508>
    12ec:	b	170c <sfbpf_filter+0x4f8>
    12f0:	b	1840 <sfbpf_filter+0x62c>
    12f4:	b	1840 <sfbpf_filter+0x62c>
    12f8:	b	16f8 <sfbpf_filter+0x4e4>
    12fc:	b	1840 <sfbpf_filter+0x62c>
    1300:	b	1840 <sfbpf_filter+0x62c>
    1304:	b	1840 <sfbpf_filter+0x62c>
    1308:	b	16ec <sfbpf_filter+0x4d8>
    130c:	b	16e0 <sfbpf_filter+0x4cc>
    1310:	b	1840 <sfbpf_filter+0x62c>
    1314:	b	1840 <sfbpf_filter+0x62c>
    1318:	b	1520 <sfbpf_filter+0x30c>
    131c:	b	1840 <sfbpf_filter+0x62c>
    1320:	b	1840 <sfbpf_filter+0x62c>
    1324:	b	1840 <sfbpf_filter+0x62c>
    1328:	b	16d0 <sfbpf_filter+0x4bc>
    132c:	b	16c0 <sfbpf_filter+0x4ac>
    1330:	b	1840 <sfbpf_filter+0x62c>
    1334:	b	1840 <sfbpf_filter+0x62c>
    1338:	b	1840 <sfbpf_filter+0x62c>
    133c:	b	1840 <sfbpf_filter+0x62c>
    1340:	b	1840 <sfbpf_filter+0x62c>
    1344:	b	1840 <sfbpf_filter+0x62c>
    1348:	b	16a8 <sfbpf_filter+0x494>
    134c:	b	169c <sfbpf_filter+0x488>
    1350:	b	1840 <sfbpf_filter+0x62c>
    1354:	b	1840 <sfbpf_filter+0x62c>
    1358:	b	165c <sfbpf_filter+0x448>
    135c:	b	1840 <sfbpf_filter+0x62c>
    1360:	b	1840 <sfbpf_filter+0x62c>
    1364:	b	1840 <sfbpf_filter+0x62c>
    1368:	b	164c <sfbpf_filter+0x438>
    136c:	b	1634 <sfbpf_filter+0x420>
    1370:	b	1840 <sfbpf_filter+0x62c>
    1374:	b	1840 <sfbpf_filter+0x62c>
    1378:	b	1608 <sfbpf_filter+0x3f4>
    137c:	b	1840 <sfbpf_filter+0x62c>
    1380:	b	1840 <sfbpf_filter+0x62c>
    1384:	b	1840 <sfbpf_filter+0x62c>
    1388:	b	15fc <sfbpf_filter+0x3e8>
    138c:	b	15e4 <sfbpf_filter+0x3d0>
    1390:	b	1840 <sfbpf_filter+0x62c>
    1394:	b	1840 <sfbpf_filter+0x62c>
    1398:	b	15c8 <sfbpf_filter+0x3b4>
    139c:	b	1840 <sfbpf_filter+0x62c>
    13a0:	b	1840 <sfbpf_filter+0x62c>
    13a4:	b	1840 <sfbpf_filter+0x62c>
    13a8:	b	15b8 <sfbpf_filter+0x3a4>
    13ac:	b	1840 <sfbpf_filter+0x62c>
    13b0:	b	1840 <sfbpf_filter+0x62c>
    13b4:	b	1840 <sfbpf_filter+0x62c>
    13b8:	b	1840 <sfbpf_filter+0x62c>
    13bc:	b	1840 <sfbpf_filter+0x62c>
    13c0:	b	1840 <sfbpf_filter+0x62c>
    13c4:	b	1840 <sfbpf_filter+0x62c>
    13c8:	b	15ac <sfbpf_filter+0x398>
    13cc:	b	1840 <sfbpf_filter+0x62c>
    13d0:	b	1840 <sfbpf_filter+0x62c>
    13d4:	b	1840 <sfbpf_filter+0x62c>
    13d8:	b	1594 <sfbpf_filter+0x380>
    13dc:	b	157c <sfbpf_filter+0x368>
    13e0:	b	1840 <sfbpf_filter+0x62c>
    13e4:	b	1840 <sfbpf_filter+0x62c>
    13e8:	b	156c <sfbpf_filter+0x358>
    13ec:	b	1840 <sfbpf_filter+0x62c>
    13f0:	b	1840 <sfbpf_filter+0x62c>
    13f4:	b	1840 <sfbpf_filter+0x62c>
    13f8:	b	1840 <sfbpf_filter+0x62c>
    13fc:	b	1840 <sfbpf_filter+0x62c>
    1400:	b	1840 <sfbpf_filter+0x62c>
    1404:	b	1840 <sfbpf_filter+0x62c>
    1408:	b	1560 <sfbpf_filter+0x34c>
    140c:	b	1840 <sfbpf_filter+0x62c>
    1410:	b	1840 <sfbpf_filter+0x62c>
    1414:	b	1840 <sfbpf_filter+0x62c>
    1418:	b	1840 <sfbpf_filter+0x62c>
    141c:	b	1840 <sfbpf_filter+0x62c>
    1420:	b	1840 <sfbpf_filter+0x62c>
    1424:	b	1840 <sfbpf_filter+0x62c>
    1428:	b	1550 <sfbpf_filter+0x33c>
    142c:	b	1840 <sfbpf_filter+0x62c>
    1430:	b	1840 <sfbpf_filter+0x62c>
    1434:	b	1840 <sfbpf_filter+0x62c>
    1438:	b	1840 <sfbpf_filter+0x62c>
    143c:	b	1840 <sfbpf_filter+0x62c>
    1440:	b	1840 <sfbpf_filter+0x62c>
    1444:	b	1840 <sfbpf_filter+0x62c>
    1448:	b	1544 <sfbpf_filter+0x330>
    144c:	b	1840 <sfbpf_filter+0x62c>
    1450:	b	1840 <sfbpf_filter+0x62c>
    1454:	b	1840 <sfbpf_filter+0x62c>
    1458:	b	1538 <sfbpf_filter+0x324>
    145c:	b	1834 <sfbpf_filter+0x620>
    1460:	b	1840 <sfbpf_filter+0x62c>
    1464:	b	1840 <sfbpf_filter+0x62c>
    1468:	b	1828 <sfbpf_filter+0x614>
    146c:	b	1840 <sfbpf_filter+0x62c>
    1470:	b	1840 <sfbpf_filter+0x62c>
    1474:	b	181c <sfbpf_filter+0x608>
    1478:	b	1840 <sfbpf_filter+0x62c>
    147c:	b	1840 <sfbpf_filter+0x62c>
    1480:	b	1840 <sfbpf_filter+0x62c>
    1484:	b	1840 <sfbpf_filter+0x62c>
    1488:	b	1840 <sfbpf_filter+0x62c>
    148c:	b	1840 <sfbpf_filter+0x62c>
    1490:	b	1840 <sfbpf_filter+0x62c>
    1494:	b	1840 <sfbpf_filter+0x62c>
    1498:	b	1840 <sfbpf_filter+0x62c>
    149c:	b	1840 <sfbpf_filter+0x62c>
    14a0:	b	1840 <sfbpf_filter+0x62c>
    14a4:	b	1840 <sfbpf_filter+0x62c>
    14a8:	b	1840 <sfbpf_filter+0x62c>
    14ac:	b	1840 <sfbpf_filter+0x62c>
    14b0:	b	1840 <sfbpf_filter+0x62c>
    14b4:	b	1840 <sfbpf_filter+0x62c>
    14b8:	b	1840 <sfbpf_filter+0x62c>
    14bc:	b	1840 <sfbpf_filter+0x62c>
    14c0:	b	1840 <sfbpf_filter+0x62c>
    14c4:	b	1840 <sfbpf_filter+0x62c>
    14c8:	b	1840 <sfbpf_filter+0x62c>
    14cc:	b	1840 <sfbpf_filter+0x62c>
    14d0:	b	1840 <sfbpf_filter+0x62c>
    14d4:	b	1840 <sfbpf_filter+0x62c>
    14d8:	b	1840 <sfbpf_filter+0x62c>
    14dc:	b	1840 <sfbpf_filter+0x62c>
    14e0:	b	1840 <sfbpf_filter+0x62c>
    14e4:	b	1840 <sfbpf_filter+0x62c>
    14e8:	b	1840 <sfbpf_filter+0x62c>
    14ec:	b	1840 <sfbpf_filter+0x62c>
    14f0:	b	1840 <sfbpf_filter+0x62c>
    14f4:	b	1840 <sfbpf_filter+0x62c>
    14f8:	b	1840 <sfbpf_filter+0x62c>
    14fc:	b	1840 <sfbpf_filter+0x62c>
    1500:	b	1840 <sfbpf_filter+0x62c>
    1504:	b	1840 <sfbpf_filter+0x62c>
    1508:	b	1840 <sfbpf_filter+0x62c>
    150c:	b	1840 <sfbpf_filter+0x62c>
    1510:	b	1840 <sfbpf_filter+0x62c>
    1514:	b	1840 <sfbpf_filter+0x62c>
    1518:	b	1840 <sfbpf_filter+0x62c>
    151c:	b	17fc <sfbpf_filter+0x5e8>
    1520:	ldr	r3, [ip, #12]
    1524:	cmp	r4, r3
    1528:	bhi	15d8 <sfbpf_filter+0x3c4>
    152c:	mov	r0, #0
    1530:	add	sp, sp, #64	; 0x40
    1534:	pop	{r4, r5, r6, r7, r8, pc}
    1538:	mov	ip, r5
    153c:	mov	r0, r7
    1540:	b	1244 <sfbpf_filter+0x30>
    1544:	lsr	r0, r0, r8
    1548:	mov	ip, r5
    154c:	b	1244 <sfbpf_filter+0x30>
    1550:	ldr	r3, [ip, #12]
    1554:	mov	ip, r5
    1558:	lsr	r0, r0, r3
    155c:	b	1244 <sfbpf_filter+0x30>
    1560:	lsl	r0, r0, r8
    1564:	mov	ip, r5
    1568:	b	1244 <sfbpf_filter+0x30>
    156c:	ldr	r3, [ip, #12]
    1570:	mov	ip, r5
    1574:	lsl	r0, r0, r3
    1578:	b	1244 <sfbpf_filter+0x30>
    157c:	ldr	r3, [ip, #12]
    1580:	add	r2, sp, #64	; 0x40
    1584:	mov	ip, r5
    1588:	add	r3, r2, r3, lsl #2
    158c:	ldr	r8, [r3, #-64]	; 0xffffffc0
    1590:	b	1244 <sfbpf_filter+0x30>
    1594:	ldr	r3, [ip, #12]
    1598:	add	r2, sp, #64	; 0x40
    159c:	mov	ip, r5
    15a0:	add	r3, r2, r3, lsl #2
    15a4:	ldr	r0, [r3, #-64]	; 0xffffffc0
    15a8:	b	1244 <sfbpf_filter+0x30>
    15ac:	and	r0, r0, r8
    15b0:	mov	ip, r5
    15b4:	b	1244 <sfbpf_filter+0x30>
    15b8:	ldr	r3, [ip, #12]
    15bc:	mov	ip, r5
    15c0:	and	r0, r0, r3
    15c4:	b	1244 <sfbpf_filter+0x30>
    15c8:	ldr	r3, [ip, #12]
    15cc:	add	r3, r8, r3
    15d0:	cmp	r4, r3
    15d4:	bls	152c <sfbpf_filter+0x318>
    15d8:	ldrb	r0, [r6, r3]
    15dc:	mov	ip, r5
    15e0:	b	1244 <sfbpf_filter+0x30>
    15e4:	tst	r0, r8
    15e8:	beq	1640 <sfbpf_filter+0x42c>
    15ec:	ldrb	ip, [ip, #10]
    15f0:	lsl	ip, ip, #3
    15f4:	add	ip, r5, ip
    15f8:	b	1244 <sfbpf_filter+0x30>
    15fc:	orr	r0, r0, r8
    1600:	mov	ip, r5
    1604:	b	1244 <sfbpf_filter+0x30>
    1608:	ldr	r3, [ip, #12]
    160c:	add	r3, r8, r3
    1610:	add	r2, r3, #2
    1614:	cmp	r4, r2
    1618:	bcc	152c <sfbpf_filter+0x318>
    161c:	add	r2, r6, r3
    1620:	ldrb	r3, [r6, r3]
    1624:	ldrb	r0, [r2, #1]
    1628:	mov	ip, r5
    162c:	orr	r0, r0, r3, lsl #8
    1630:	b	1244 <sfbpf_filter+0x30>
    1634:	ldr	r3, [ip, #12]
    1638:	tst	r0, r3
    163c:	bne	15ec <sfbpf_filter+0x3d8>
    1640:	ldrb	ip, [ip, #11]
    1644:	lsl	ip, ip, #3
    1648:	b	15f4 <sfbpf_filter+0x3e0>
    164c:	ldr	r3, [ip, #12]
    1650:	mov	ip, r5
    1654:	orr	r0, r0, r3
    1658:	b	1244 <sfbpf_filter+0x30>
    165c:	ldr	r3, [ip, #12]
    1660:	add	r3, r8, r3
    1664:	add	r2, r3, #4
    1668:	cmp	r4, r2
    166c:	bcc	152c <sfbpf_filter+0x318>
    1670:	add	r2, r6, r3
    1674:	ldrb	lr, [r6, r3]
    1678:	ldrb	r0, [r2, #1]
    167c:	ldrb	r1, [r2, #3]
    1680:	ldrb	r3, [r2, #2]
    1684:	mov	ip, r5
    1688:	lsl	r0, r0, #16
    168c:	orr	r0, r0, lr, lsl #24
    1690:	orr	r0, r0, r1
    1694:	orr	r0, r0, r3, lsl #8
    1698:	b	1244 <sfbpf_filter+0x30>
    169c:	cmp	r0, r8
    16a0:	bcc	1640 <sfbpf_filter+0x42c>
    16a4:	b	15ec <sfbpf_filter+0x3d8>
    16a8:	cmp	r8, #0
    16ac:	beq	1844 <sfbpf_filter+0x630>
    16b0:	mov	r1, r8
    16b4:	bl	12780 <__udivsi3>
    16b8:	mov	ip, r5
    16bc:	b	1244 <sfbpf_filter+0x30>
    16c0:	ldr	r3, [ip, #12]
    16c4:	cmp	r0, r3
    16c8:	bcc	1640 <sfbpf_filter+0x42c>
    16cc:	b	15ec <sfbpf_filter+0x3d8>
    16d0:	ldr	r1, [ip, #12]
    16d4:	bl	12780 <__udivsi3>
    16d8:	mov	ip, r5
    16dc:	b	1244 <sfbpf_filter+0x30>
    16e0:	cmp	r0, r8
    16e4:	bls	1640 <sfbpf_filter+0x42c>
    16e8:	b	15ec <sfbpf_filter+0x3d8>
    16ec:	mul	r0, r8, r0
    16f0:	mov	ip, r5
    16f4:	b	1244 <sfbpf_filter+0x30>
    16f8:	ldr	r3, [ip, #12]
    16fc:	add	r2, r3, #2
    1700:	cmp	r2, r4
    1704:	bls	161c <sfbpf_filter+0x408>
    1708:	b	152c <sfbpf_filter+0x318>
    170c:	ldr	r3, [ip, #12]
    1710:	cmp	r0, r3
    1714:	bls	1640 <sfbpf_filter+0x42c>
    1718:	b	15ec <sfbpf_filter+0x3d8>
    171c:	ldr	r3, [ip, #12]
    1720:	mov	ip, r5
    1724:	mul	r0, r3, r0
    1728:	b	1244 <sfbpf_filter+0x30>
    172c:	ldr	r3, [ip, #12]
    1730:	add	r2, r3, #4
    1734:	cmp	r4, r2
    1738:	bcs	1670 <sfbpf_filter+0x45c>
    173c:	b	152c <sfbpf_filter+0x318>
    1740:	cmp	r0, r8
    1744:	bne	1640 <sfbpf_filter+0x42c>
    1748:	b	15ec <sfbpf_filter+0x3d8>
    174c:	sub	r0, r0, r8
    1750:	mov	ip, r5
    1754:	b	1244 <sfbpf_filter+0x30>
    1758:	ldr	r3, [ip, #12]
    175c:	cmp	r0, r3
    1760:	bne	1640 <sfbpf_filter+0x42c>
    1764:	b	15ec <sfbpf_filter+0x3d8>
    1768:	ldr	r3, [ip, #12]
    176c:	mov	ip, r5
    1770:	sub	r0, r0, r3
    1774:	b	1244 <sfbpf_filter+0x30>
    1778:	add	r0, r0, r8
    177c:	mov	ip, r5
    1780:	b	1244 <sfbpf_filter+0x30>
    1784:	mov	ip, r5
    1788:	mov	r8, r0
    178c:	b	1244 <sfbpf_filter+0x30>
    1790:	ldr	r0, [ip, #12]
    1794:	b	1530 <sfbpf_filter+0x31c>
    1798:	ldr	ip, [ip, #12]
    179c:	add	ip, r5, ip, lsl #3
    17a0:	b	1244 <sfbpf_filter+0x30>
    17a4:	ldr	r3, [ip, #12]
    17a8:	mov	ip, r5
    17ac:	add	r0, r0, r3
    17b0:	b	1244 <sfbpf_filter+0x30>
    17b4:	ldr	r3, [ip, #12]
    17b8:	add	r2, sp, #64	; 0x40
    17bc:	mov	ip, r5
    17c0:	add	r3, r2, r3, lsl #2
    17c4:	str	r8, [r3, #-64]	; 0xffffffc0
    17c8:	b	1244 <sfbpf_filter+0x30>
    17cc:	ldr	r3, [ip, #12]
    17d0:	add	r2, sp, #64	; 0x40
    17d4:	mov	ip, r5
    17d8:	add	r3, r2, r3, lsl #2
    17dc:	str	r0, [r3, #-64]	; 0xffffffc0
    17e0:	b	1244 <sfbpf_filter+0x30>
    17e4:	ldr	r8, [ip, #12]
    17e8:	mov	ip, r5
    17ec:	b	1244 <sfbpf_filter+0x30>
    17f0:	ldr	r0, [ip, #12]
    17f4:	mov	ip, r5
    17f8:	b	1244 <sfbpf_filter+0x30>
    17fc:	ldr	r3, [ip, #12]
    1800:	cmp	r4, r3
    1804:	bls	152c <sfbpf_filter+0x318>
    1808:	ldrb	r8, [r6, r3]
    180c:	mov	ip, r5
    1810:	lsl	r8, r8, #2
    1814:	and	r8, r8, #60	; 0x3c
    1818:	b	1244 <sfbpf_filter+0x30>
    181c:	mov	ip, r5
    1820:	mov	r0, r8
    1824:	b	1244 <sfbpf_filter+0x30>
    1828:	rsb	r0, r0, #0
    182c:	mov	ip, r5
    1830:	b	1244 <sfbpf_filter+0x30>
    1834:	mov	ip, r5
    1838:	mov	r8, r7
    183c:	b	1244 <sfbpf_filter+0x30>
    1840:	bl	f18 <abort@plt>
    1844:	mov	r0, r8
    1848:	b	1530 <sfbpf_filter+0x31c>

0000184c <sfbpf_validate>:
    184c:	cmp	r1, #0
    1850:	ble	19b0 <sfbpf_validate+0x164>
    1854:	push	{lr}		; (str lr, [sp, #-4]!)
    1858:	mov	ip, #1
    185c:	mov	lr, r0
    1860:	ldrh	r2, [lr]
    1864:	and	r3, r2, #7
    1868:	sub	r3, r3, #2
    186c:	cmp	r3, #5
    1870:	addls	pc, pc, r3, lsl #2
    1874:	b	18fc <sfbpf_validate+0xb0>
    1878:	b	1924 <sfbpf_validate+0xd8>
    187c:	b	1924 <sfbpf_validate+0xd8>
    1880:	b	1890 <sfbpf_validate+0x44>
    1884:	b	1938 <sfbpf_validate+0xec>
    1888:	b	18d0 <sfbpf_validate+0x84>
    188c:	b	18d0 <sfbpf_validate+0x84>
    1890:	and	r3, r2, #240	; 0xf0
    1894:	cmp	r3, #64	; 0x40
    1898:	beq	18d0 <sfbpf_validate+0x84>
    189c:	bhi	19cc <sfbpf_validate+0x180>
    18a0:	cmp	r3, #16
    18a4:	beq	18d0 <sfbpf_validate+0x84>
    18a8:	bls	1a00 <sfbpf_validate+0x1b4>
    18ac:	cmp	r3, #32
    18b0:	beq	18d0 <sfbpf_validate+0x84>
    18b4:	cmp	r3, #48	; 0x30
    18b8:	bne	1930 <sfbpf_validate+0xe4>
    18bc:	tst	r2, #24
    18c0:	bne	18d0 <sfbpf_validate+0x84>
    18c4:	ldr	r3, [lr, #4]
    18c8:	cmp	r3, #0
    18cc:	beq	1930 <sfbpf_validate+0xe4>
    18d0:	cmp	r1, ip
    18d4:	add	lr, lr, #8
    18d8:	add	ip, ip, #1
    18dc:	bhi	1860 <sfbpf_validate+0x14>
    18e0:	add	r1, r0, r1, lsl #3
    18e4:	ldrh	r0, [r1, #-8]
    18e8:	and	r0, r0, #7
    18ec:	sub	r0, r0, #6
    18f0:	clz	r0, r0
    18f4:	lsr	r0, r0, #5
    18f8:	pop	{pc}		; (ldr pc, [sp], #4)
    18fc:	and	r2, r2, #224	; 0xe0
    1900:	cmp	r2, #64	; 0x40
    1904:	beq	18d0 <sfbpf_validate+0x84>
    1908:	bls	19ec <sfbpf_validate+0x1a0>
    190c:	cmp	r2, #128	; 0x80
    1910:	beq	18d0 <sfbpf_validate+0x84>
    1914:	cmp	r2, #160	; 0xa0
    1918:	beq	18d0 <sfbpf_validate+0x84>
    191c:	cmp	r2, #96	; 0x60
    1920:	bne	1930 <sfbpf_validate+0xe4>
    1924:	ldr	r3, [lr, #4]
    1928:	cmp	r3, #15
    192c:	bls	18d0 <sfbpf_validate+0x84>
    1930:	mov	r0, #0
    1934:	pop	{pc}		; (ldr pc, [sp], #4)
    1938:	and	r2, r2, #240	; 0xf0
    193c:	cmp	r2, #32
    1940:	beq	197c <sfbpf_validate+0x130>
    1944:	bhi	19b8 <sfbpf_validate+0x16c>
    1948:	cmp	r2, #0
    194c:	bne	1974 <sfbpf_validate+0x128>
    1950:	ldr	r3, [lr, #4]
    1954:	add	r3, ip, r3
    1958:	cmp	r3, r1
    195c:	bcs	1930 <sfbpf_validate+0xe4>
    1960:	cmp	r1, ip
    1964:	add	lr, lr, #8
    1968:	add	ip, ip, #1
    196c:	bhi	1860 <sfbpf_validate+0x14>
    1970:	b	18e0 <sfbpf_validate+0x94>
    1974:	cmp	r2, #16
    1978:	bne	1930 <sfbpf_validate+0xe4>
    197c:	ldrb	r3, [lr, #2]
    1980:	add	r3, r3, ip
    1984:	cmp	r3, r1
    1988:	bcs	1930 <sfbpf_validate+0xe4>
    198c:	ldrb	r3, [lr, #3]
    1990:	add	r3, r3, ip
    1994:	cmp	r3, r1
    1998:	bcs	1930 <sfbpf_validate+0xe4>
    199c:	cmp	r1, ip
    19a0:	add	lr, lr, #8
    19a4:	add	ip, ip, #1
    19a8:	bhi	1860 <sfbpf_validate+0x14>
    19ac:	b	18e0 <sfbpf_validate+0x94>
    19b0:	mov	r0, #0
    19b4:	bx	lr
    19b8:	cmp	r2, #48	; 0x30
    19bc:	beq	197c <sfbpf_validate+0x130>
    19c0:	cmp	r2, #64	; 0x40
    19c4:	bne	1930 <sfbpf_validate+0xe4>
    19c8:	b	197c <sfbpf_validate+0x130>
    19cc:	cmp	r3, #96	; 0x60
    19d0:	beq	18d0 <sfbpf_validate+0x84>
    19d4:	bls	1a0c <sfbpf_validate+0x1c0>
    19d8:	cmp	r3, #112	; 0x70
    19dc:	beq	18d0 <sfbpf_validate+0x84>
    19e0:	cmp	r3, #128	; 0x80
    19e4:	bne	1930 <sfbpf_validate+0xe4>
    19e8:	b	18d0 <sfbpf_validate+0x84>
    19ec:	cmp	r2, #0
    19f0:	beq	18d0 <sfbpf_validate+0x84>
    19f4:	cmp	r2, #32
    19f8:	bne	1930 <sfbpf_validate+0xe4>
    19fc:	b	18d0 <sfbpf_validate+0x84>
    1a00:	cmp	r3, #0
    1a04:	bne	1930 <sfbpf_validate+0xe4>
    1a08:	b	18d0 <sfbpf_validate+0x84>
    1a0c:	cmp	r3, #80	; 0x50
    1a10:	bne	1930 <sfbpf_validate+0xe4>
    1a14:	b	18d0 <sfbpf_validate+0x84>

00001a18 <sfbpf_print>:
    1a18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a1c:	mov	r7, r0
    1a20:	ldr	r0, [pc, #2124]	; 2274 <sfbpf_print+0x85c>
    1a24:	sub	sp, sp, #28
    1a28:	add	r0, pc, r0
    1a2c:	mov	r8, r1
    1a30:	bl	e10 <puts@plt>
    1a34:	ldr	r3, [r7]
    1a38:	cmp	r3, #0
    1a3c:	beq	1bb0 <sfbpf_print+0x198>
    1a40:	ldr	r3, [pc, #2096]	; 2278 <sfbpf_print+0x860>
    1a44:	ldr	r9, [pc, #2096]	; 227c <sfbpf_print+0x864>
    1a48:	add	r3, pc, r3
    1a4c:	str	r3, [sp, #4]
    1a50:	ldr	r3, [pc, #2088]	; 2280 <sfbpf_print+0x868>
    1a54:	add	r9, pc, r9
    1a58:	add	r3, pc, r3
    1a5c:	str	r3, [sp, #12]
    1a60:	ldr	r3, [pc, #2076]	; 2284 <sfbpf_print+0x86c>
    1a64:	mov	r5, #1
    1a68:	add	r3, pc, r3
    1a6c:	str	r3, [sp, #16]
    1a70:	ldr	r3, [pc, #2064]	; 2288 <sfbpf_print+0x870>
    1a74:	mov	r4, #0
    1a78:	add	r3, pc, r3
    1a7c:	str	r3, [sp, #20]
    1a80:	ldr	r3, [pc, #2052]	; 228c <sfbpf_print+0x874>
    1a84:	add	r3, pc, r3
    1a88:	str	r3, [sp, #8]
    1a8c:	ldr	fp, [r7, #4]
    1a90:	mov	r1, r4
    1a94:	mov	r0, r9
    1a98:	bl	d68 <printf@plt>
    1a9c:	lsl	sl, r4, #3
    1aa0:	cmp	r8, #0
    1aa4:	add	r6, fp, sl
    1aa8:	beq	1dd4 <sfbpf_print+0x3bc>
    1aac:	ldr	r3, [pc, #2012]	; 2290 <sfbpf_print+0x878>
    1ab0:	ldrh	r0, [fp, sl]
    1ab4:	add	r3, pc, r3
    1ab8:	ldr	r1, [r3, #4]
    1abc:	and	r0, r0, #7
    1ac0:	cmp	r1, #0
    1ac4:	beq	1af0 <sfbpf_print+0xd8>
    1ac8:	ldr	r2, [r3]
    1acc:	cmp	r0, r2
    1ad0:	bne	1ae4 <sfbpf_print+0xcc>
    1ad4:	b	1af0 <sfbpf_print+0xd8>
    1ad8:	ldr	r2, [r3, #8]!
    1adc:	cmp	r0, r2
    1ae0:	beq	1af0 <sfbpf_print+0xd8>
    1ae4:	ldr	r1, [r3, #12]
    1ae8:	cmp	r1, #0
    1aec:	bne	1ad8 <sfbpf_print+0xc0>
    1af0:	ldr	r0, [pc, #1948]	; 2294 <sfbpf_print+0x87c>
    1af4:	add	r0, pc, r0
    1af8:	bl	d68 <printf@plt>
    1afc:	ldrh	r3, [fp, sl]
    1b00:	and	r2, r3, #7
    1b04:	cmp	r2, #7
    1b08:	addls	pc, pc, r2, lsl #2
    1b0c:	b	1b80 <sfbpf_print+0x168>
    1b10:	b	1d3c <sfbpf_print+0x324>
    1b14:	b	1d3c <sfbpf_print+0x324>
    1b18:	b	1b80 <sfbpf_print+0x168>
    1b1c:	b	1b80 <sfbpf_print+0x168>
    1b20:	b	1ca4 <sfbpf_print+0x28c>
    1b24:	b	1c0c <sfbpf_print+0x1f4>
    1b28:	b	1bb8 <sfbpf_print+0x1a0>
    1b2c:	b	1b30 <sfbpf_print+0x118>
    1b30:	ldr	r2, [pc, #1888]	; 2298 <sfbpf_print+0x880>
    1b34:	and	r3, r3, #248	; 0xf8
    1b38:	add	r2, pc, r2
    1b3c:	ldr	r1, [r2, #348]	; 0x15c
    1b40:	cmp	r1, #0
    1b44:	beq	1b74 <sfbpf_print+0x15c>
    1b48:	ldr	r0, [r2, #344]	; 0x158
    1b4c:	cmp	r3, r0
    1b50:	addne	r2, r2, #344	; 0x158
    1b54:	bne	1b68 <sfbpf_print+0x150>
    1b58:	b	1b74 <sfbpf_print+0x15c>
    1b5c:	ldr	r0, [r2, #8]!
    1b60:	cmp	r3, r0
    1b64:	beq	1b74 <sfbpf_print+0x15c>
    1b68:	ldr	r1, [r2, #12]
    1b6c:	cmp	r1, #0
    1b70:	bne	1b5c <sfbpf_print+0x144>
    1b74:	ldr	r0, [pc, #1824]	; 229c <sfbpf_print+0x884>
    1b78:	add	r0, pc, r0
    1b7c:	bl	d68 <printf@plt>
    1b80:	ldr	r0, [pc, #1816]	; 22a0 <sfbpf_print+0x888>
    1b84:	ldrb	r2, [r6, #3]
    1b88:	ldr	r3, [r6, #4]
    1b8c:	ldrb	r1, [r6, #2]
    1b90:	add	r0, pc, r0
    1b94:	bl	d68 <printf@plt>
    1b98:	mov	r2, r5
    1b9c:	ldr	r3, [r7]
    1ba0:	add	r4, r4, #1
    1ba4:	cmp	r3, r2
    1ba8:	add	r5, r5, #1
    1bac:	bhi	1a8c <sfbpf_print+0x74>
    1bb0:	add	sp, sp, #28
    1bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bb8:	ldr	r2, [pc, #1764]	; 22a4 <sfbpf_print+0x88c>
    1bbc:	and	r3, r3, #24
    1bc0:	add	r2, pc, r2
    1bc4:	ldr	r1, [r2, #316]	; 0x13c
    1bc8:	cmp	r1, #0
    1bcc:	beq	1bfc <sfbpf_print+0x1e4>
    1bd0:	ldr	r0, [r2, #312]	; 0x138
    1bd4:	cmp	r3, r0
    1bd8:	addne	r2, r2, #312	; 0x138
    1bdc:	bne	1bf0 <sfbpf_print+0x1d8>
    1be0:	b	1bfc <sfbpf_print+0x1e4>
    1be4:	ldr	r0, [r2, #8]!
    1be8:	cmp	r3, r0
    1bec:	beq	1bfc <sfbpf_print+0x1e4>
    1bf0:	ldr	r1, [r2, #12]
    1bf4:	cmp	r1, #0
    1bf8:	bne	1be4 <sfbpf_print+0x1cc>
    1bfc:	ldr	r0, [pc, #1700]	; 22a8 <sfbpf_print+0x890>
    1c00:	add	r0, pc, r0
    1c04:	bl	d68 <printf@plt>
    1c08:	b	1b80 <sfbpf_print+0x168>
    1c0c:	ldr	r2, [pc, #1688]	; 22ac <sfbpf_print+0x894>
    1c10:	and	ip, r3, #240	; 0xf0
    1c14:	add	r2, pc, r2
    1c18:	ldr	r1, [r2, #268]	; 0x10c
    1c1c:	cmp	r1, #0
    1c20:	beq	1c50 <sfbpf_print+0x238>
    1c24:	ldr	r0, [r2, #264]	; 0x108
    1c28:	cmp	ip, r0
    1c2c:	addne	r2, r2, #264	; 0x108
    1c30:	bne	1c44 <sfbpf_print+0x22c>
    1c34:	b	1c50 <sfbpf_print+0x238>
    1c38:	ldr	r0, [r2, #8]!
    1c3c:	cmp	ip, r0
    1c40:	beq	1c50 <sfbpf_print+0x238>
    1c44:	ldr	r1, [r2, #12]
    1c48:	cmp	r1, #0
    1c4c:	bne	1c38 <sfbpf_print+0x220>
    1c50:	ldr	r0, [pc, #1624]	; 22b0 <sfbpf_print+0x898>
    1c54:	and	r3, r3, #8
    1c58:	add	r0, pc, r0
    1c5c:	ldr	r2, [r0, #244]	; 0xf4
    1c60:	cmp	r2, #0
    1c64:	beq	1c94 <sfbpf_print+0x27c>
    1c68:	ldr	ip, [r0, #240]	; 0xf0
    1c6c:	cmp	r3, ip
    1c70:	addne	r0, r0, #240	; 0xf0
    1c74:	bne	1c88 <sfbpf_print+0x270>
    1c78:	b	1c94 <sfbpf_print+0x27c>
    1c7c:	ldr	ip, [r0, #8]!
    1c80:	cmp	r3, ip
    1c84:	beq	1c94 <sfbpf_print+0x27c>
    1c88:	ldr	r2, [r0, #12]
    1c8c:	cmp	r2, #0
    1c90:	bne	1c7c <sfbpf_print+0x264>
    1c94:	ldr	r0, [pc, #1560]	; 22b4 <sfbpf_print+0x89c>
    1c98:	add	r0, pc, r0
    1c9c:	bl	d68 <printf@plt>
    1ca0:	b	1b80 <sfbpf_print+0x168>
    1ca4:	ldr	r2, [pc, #1548]	; 22b8 <sfbpf_print+0x8a0>
    1ca8:	and	ip, r3, #240	; 0xf0
    1cac:	add	r2, pc, r2
    1cb0:	ldr	r1, [r2, #164]	; 0xa4
    1cb4:	cmp	r1, #0
    1cb8:	beq	1ce8 <sfbpf_print+0x2d0>
    1cbc:	ldr	r0, [r2, #160]	; 0xa0
    1cc0:	cmp	ip, r0
    1cc4:	addne	r2, r2, #160	; 0xa0
    1cc8:	bne	1cdc <sfbpf_print+0x2c4>
    1ccc:	b	1ce8 <sfbpf_print+0x2d0>
    1cd0:	ldr	r0, [r2, #8]!
    1cd4:	cmp	ip, r0
    1cd8:	beq	1ce8 <sfbpf_print+0x2d0>
    1cdc:	ldr	r1, [r2, #12]
    1ce0:	cmp	r1, #0
    1ce4:	bne	1cd0 <sfbpf_print+0x2b8>
    1ce8:	ldr	r0, [pc, #1484]	; 22bc <sfbpf_print+0x8a4>
    1cec:	and	r3, r3, #8
    1cf0:	add	r0, pc, r0
    1cf4:	ldr	r2, [r0, #244]	; 0xf4
    1cf8:	cmp	r2, #0
    1cfc:	beq	1d2c <sfbpf_print+0x314>
    1d00:	ldr	ip, [r0, #240]	; 0xf0
    1d04:	cmp	r3, ip
    1d08:	addne	r0, r0, #240	; 0xf0
    1d0c:	bne	1d20 <sfbpf_print+0x308>
    1d10:	b	1d2c <sfbpf_print+0x314>
    1d14:	ldr	ip, [r0, #8]!
    1d18:	cmp	r3, ip
    1d1c:	beq	1d2c <sfbpf_print+0x314>
    1d20:	ldr	r2, [r0, #12]
    1d24:	cmp	r2, #0
    1d28:	bne	1d14 <sfbpf_print+0x2fc>
    1d2c:	ldr	r0, [pc, #1420]	; 22c0 <sfbpf_print+0x8a8>
    1d30:	add	r0, pc, r0
    1d34:	bl	d68 <printf@plt>
    1d38:	b	1b80 <sfbpf_print+0x168>
    1d3c:	ldr	r2, [pc, #1408]	; 22c4 <sfbpf_print+0x8ac>
    1d40:	and	ip, r3, #24
    1d44:	add	r2, pc, r2
    1d48:	ldr	r1, [r2, #76]	; 0x4c
    1d4c:	cmp	r1, #0
    1d50:	beq	1d80 <sfbpf_print+0x368>
    1d54:	ldr	r0, [r2, #72]	; 0x48
    1d58:	cmp	ip, r0
    1d5c:	addne	r2, r2, #72	; 0x48
    1d60:	bne	1d74 <sfbpf_print+0x35c>
    1d64:	b	1d80 <sfbpf_print+0x368>
    1d68:	ldr	r0, [r2, #8]!
    1d6c:	cmp	ip, r0
    1d70:	beq	1d80 <sfbpf_print+0x368>
    1d74:	ldr	r1, [r2, #12]
    1d78:	cmp	r1, #0
    1d7c:	bne	1d68 <sfbpf_print+0x350>
    1d80:	ldr	r0, [pc, #1344]	; 22c8 <sfbpf_print+0x8b0>
    1d84:	and	r3, r3, #224	; 0xe0
    1d88:	add	r0, pc, r0
    1d8c:	ldr	r2, [r0, #108]	; 0x6c
    1d90:	cmp	r2, #0
    1d94:	beq	1dc4 <sfbpf_print+0x3ac>
    1d98:	ldr	ip, [r0, #104]	; 0x68
    1d9c:	cmp	r3, ip
    1da0:	addne	r0, r0, #104	; 0x68
    1da4:	bne	1db8 <sfbpf_print+0x3a0>
    1da8:	b	1dc4 <sfbpf_print+0x3ac>
    1dac:	ldr	ip, [r0, #8]!
    1db0:	cmp	r3, ip
    1db4:	beq	1dc4 <sfbpf_print+0x3ac>
    1db8:	ldr	r2, [r0, #12]
    1dbc:	cmp	r2, #0
    1dc0:	bne	1dac <sfbpf_print+0x394>
    1dc4:	ldr	r0, [pc, #1280]	; 22cc <sfbpf_print+0x8b4>
    1dc8:	add	r0, pc, r0
    1dcc:	bl	d68 <printf@plt>
    1dd0:	b	1b80 <sfbpf_print+0x168>
    1dd4:	ldrh	r2, [fp, sl]
    1dd8:	and	r3, r2, #7
    1ddc:	sub	r3, r3, #1
    1de0:	cmp	r3, #6
    1de4:	addls	pc, pc, r3, lsl #2
    1de8:	b	1f7c <sfbpf_print+0x564>
    1dec:	b	1f38 <sfbpf_print+0x520>
    1df0:	b	1f20 <sfbpf_print+0x508>
    1df4:	b	1f08 <sfbpf_print+0x4f0>
    1df8:	b	1ec8 <sfbpf_print+0x4b0>
    1dfc:	b	1e50 <sfbpf_print+0x438>
    1e00:	b	1e08 <sfbpf_print+0x3f0>
    1e04:	b	1fe0 <sfbpf_print+0x5c8>
    1e08:	ldr	r0, [sp, #8]
    1e0c:	bl	d68 <printf@plt>
    1e10:	ldrh	r3, [fp, sl]
    1e14:	and	r3, r3, #24
    1e18:	cmp	r3, #8
    1e1c:	beq	20dc <sfbpf_print+0x6c4>
    1e20:	cmp	r3, #16
    1e24:	beq	2228 <sfbpf_print+0x810>
    1e28:	cmp	r3, #0
    1e2c:	beq	210c <sfbpf_print+0x6f4>
    1e30:	ldr	r0, [pc, #1176]	; 22d0 <sfbpf_print+0x8b8>
    1e34:	add	r0, pc, r0
    1e38:	bl	d68 <printf@plt>
    1e3c:	ldr	r0, [pc, #1168]	; 22d4 <sfbpf_print+0x8bc>
    1e40:	add	r0, pc, r0
    1e44:	bl	e10 <puts@plt>
    1e48:	mov	r2, r5
    1e4c:	b	1b9c <sfbpf_print+0x184>
    1e50:	and	r2, r2, #240	; 0xf0
    1e54:	cmp	r2, #32
    1e58:	beq	2134 <sfbpf_print+0x71c>
    1e5c:	bhi	208c <sfbpf_print+0x674>
    1e60:	cmp	r2, #0
    1e64:	beq	2188 <sfbpf_print+0x770>
    1e68:	ldr	r1, [pc, #1128]	; 22d8 <sfbpf_print+0x8c0>
    1e6c:	cmp	r2, #16
    1e70:	add	r1, pc, r1
    1e74:	bne	20ac <sfbpf_print+0x694>
    1e78:	ldr	r0, [pc, #1116]	; 22dc <sfbpf_print+0x8c4>
    1e7c:	add	r0, pc, r0
    1e80:	bl	d68 <printf@plt>
    1e84:	ldrh	r3, [fp, sl]
    1e88:	ands	r3, r3, #8
    1e8c:	beq	2214 <sfbpf_print+0x7fc>
    1e90:	cmp	r3, #8
    1e94:	beq	20d0 <sfbpf_print+0x6b8>
    1e98:	ldr	r0, [pc, #1088]	; 22e0 <sfbpf_print+0x8c8>
    1e9c:	add	r0, pc, r0
    1ea0:	bl	d68 <printf@plt>
    1ea4:	ldrb	r2, [r6, #3]
    1ea8:	ldrb	r1, [r6, #2]
    1eac:	ldr	r0, [pc, #1072]	; 22e4 <sfbpf_print+0x8cc>
    1eb0:	add	r2, r2, r5
    1eb4:	add	r0, pc, r0
    1eb8:	add	r1, r1, r5
    1ebc:	bl	d68 <printf@plt>
    1ec0:	mov	r2, r5
    1ec4:	b	1b9c <sfbpf_print+0x184>
    1ec8:	and	r2, r2, #240	; 0xf0
    1ecc:	cmp	r2, #64	; 0x40
    1ed0:	beq	2244 <sfbpf_print+0x82c>
    1ed4:	bls	2014 <sfbpf_print+0x5fc>
    1ed8:	cmp	r2, #96	; 0x60
    1edc:	beq	2268 <sfbpf_print+0x850>
    1ee0:	bls	21c0 <sfbpf_print+0x7a8>
    1ee4:	cmp	r2, #112	; 0x70
    1ee8:	beq	2250 <sfbpf_print+0x838>
    1eec:	cmp	r2, #128	; 0x80
    1ef0:	bne	21b4 <sfbpf_print+0x79c>
    1ef4:	ldr	r0, [pc, #1004]	; 22e8 <sfbpf_print+0x8d0>
    1ef8:	add	r0, pc, r0
    1efc:	bl	e10 <puts@plt>
    1f00:	mov	r2, r5
    1f04:	b	1b9c <sfbpf_print+0x184>
    1f08:	ldr	r0, [pc, #988]	; 22ec <sfbpf_print+0x8d4>
    1f0c:	ldr	r1, [r6, #4]
    1f10:	add	r0, pc, r0
    1f14:	bl	d68 <printf@plt>
    1f18:	mov	r2, r5
    1f1c:	b	1b9c <sfbpf_print+0x184>
    1f20:	ldr	r0, [pc, #968]	; 22f0 <sfbpf_print+0x8d8>
    1f24:	ldr	r1, [r6, #4]
    1f28:	add	r0, pc, r0
    1f2c:	bl	d68 <printf@plt>
    1f30:	mov	r2, r5
    1f34:	b	1b9c <sfbpf_print+0x184>
    1f38:	ldr	r0, [pc, #948]	; 22f4 <sfbpf_print+0x8dc>
    1f3c:	add	r0, pc, r0
    1f40:	bl	d68 <printf@plt>
    1f44:	ldrh	r3, [fp, sl]
    1f48:	and	r3, r3, #224	; 0xe0
    1f4c:	cmp	r3, #96	; 0x60
    1f50:	beq	20f8 <sfbpf_print+0x6e0>
    1f54:	bls	21d4 <sfbpf_print+0x7bc>
    1f58:	cmp	r3, #128	; 0x80
    1f5c:	beq	20e8 <sfbpf_print+0x6d0>
    1f60:	cmp	r3, #160	; 0xa0
    1f64:	bne	2004 <sfbpf_print+0x5ec>
    1f68:	ldr	r0, [pc, #904]	; 22f8 <sfbpf_print+0x8e0>
    1f6c:	ldr	r1, [r6, #4]
    1f70:	add	r0, pc, r0
    1f74:	bl	d68 <printf@plt>
    1f78:	b	2004 <sfbpf_print+0x5ec>
    1f7c:	ldr	r0, [pc, #888]	; 22fc <sfbpf_print+0x8e4>
    1f80:	add	r0, pc, r0
    1f84:	bl	d68 <printf@plt>
    1f88:	ldrh	r3, [fp, sl]
    1f8c:	and	r2, r3, #224	; 0xe0
    1f90:	cmp	r2, #64	; 0x40
    1f94:	beq	2140 <sfbpf_print+0x728>
    1f98:	bhi	206c <sfbpf_print+0x654>
    1f9c:	cmp	r2, #0
    1fa0:	beq	2174 <sfbpf_print+0x75c>
    1fa4:	cmp	r2, #32
    1fa8:	bne	2234 <sfbpf_print+0x81c>
    1fac:	ands	r3, r3, #24
    1fb0:	ldr	r1, [r6, #4]
    1fb4:	moveq	r2, #4
    1fb8:	beq	1fd0 <sfbpf_print+0x5b8>
    1fbc:	cmp	r3, #8
    1fc0:	subne	r2, r3, #16
    1fc4:	moveq	r2, #2
    1fc8:	clzne	r2, r2
    1fcc:	lsrne	r2, r2, #5
    1fd0:	ldr	r0, [pc, #808]	; 2300 <sfbpf_print+0x8e8>
    1fd4:	add	r0, pc, r0
    1fd8:	bl	d68 <printf@plt>
    1fdc:	b	2004 <sfbpf_print+0x5ec>
    1fe0:	ldr	r0, [sp, #4]
    1fe4:	bl	d68 <printf@plt>
    1fe8:	ldrh	r3, [fp, sl]
    1fec:	ands	r3, r3, #248	; 0xf8
    1ff0:	beq	20c4 <sfbpf_print+0x6ac>
    1ff4:	cmp	r3, #128	; 0x80
    1ff8:	beq	20b8 <sfbpf_print+0x6a0>
    1ffc:	ldr	r0, [sp, #16]
    2000:	bl	d68 <printf@plt>
    2004:	mov	r0, #10
    2008:	bl	e94 <putchar@plt>
    200c:	mov	r2, r5
    2010:	b	1b9c <sfbpf_print+0x184>
    2014:	cmp	r2, #16
    2018:	beq	225c <sfbpf_print+0x844>
    201c:	bls	21a4 <sfbpf_print+0x78c>
    2020:	ldr	r1, [pc, #732]	; 2304 <sfbpf_print+0x8ec>
    2024:	cmp	r2, #32
    2028:	add	r1, pc, r1
    202c:	beq	2040 <sfbpf_print+0x628>
    2030:	ldr	r1, [pc, #720]	; 2308 <sfbpf_print+0x8f0>
    2034:	cmp	r2, #48	; 0x30
    2038:	add	r1, pc, r1
    203c:	bne	21b4 <sfbpf_print+0x79c>
    2040:	ldr	r0, [pc, #708]	; 230c <sfbpf_print+0x8f4>
    2044:	add	r0, pc, r0
    2048:	bl	d68 <printf@plt>
    204c:	ldrh	r3, [fp, sl]
    2050:	ands	r3, r3, #8
    2054:	beq	2200 <sfbpf_print+0x7e8>
    2058:	cmp	r3, #8
    205c:	bne	21f0 <sfbpf_print+0x7d8>
    2060:	mov	r0, #88	; 0x58
    2064:	bl	e94 <putchar@plt>
    2068:	b	2004 <sfbpf_print+0x5ec>
    206c:	cmp	r2, #96	; 0x60
    2070:	beq	2120 <sfbpf_print+0x708>
    2074:	cmp	r2, #128	; 0x80
    2078:	bne	2234 <sfbpf_print+0x81c>
    207c:	ldr	r0, [pc, #652]	; 2310 <sfbpf_print+0x8f8>
    2080:	add	r0, pc, r0
    2084:	bl	d68 <printf@plt>
    2088:	b	2004 <sfbpf_print+0x5ec>
    208c:	ldr	r1, [pc, #640]	; 2314 <sfbpf_print+0x8fc>
    2090:	cmp	r2, #48	; 0x30
    2094:	add	r1, pc, r1
    2098:	beq	1e78 <sfbpf_print+0x460>
    209c:	ldr	r1, [pc, #628]	; 2318 <sfbpf_print+0x900>
    20a0:	cmp	r2, #64	; 0x40
    20a4:	add	r1, pc, r1
    20a8:	beq	1e78 <sfbpf_print+0x460>
    20ac:	ldr	r1, [pc, #616]	; 231c <sfbpf_print+0x904>
    20b0:	add	r1, pc, r1
    20b4:	b	1e78 <sfbpf_print+0x460>
    20b8:	ldr	r0, [sp, #20]
    20bc:	bl	d68 <printf@plt>
    20c0:	b	2004 <sfbpf_print+0x5ec>
    20c4:	ldr	r0, [sp, #12]
    20c8:	bl	d68 <printf@plt>
    20cc:	b	2004 <sfbpf_print+0x5ec>
    20d0:	mov	r0, #88	; 0x58
    20d4:	bl	e94 <putchar@plt>
    20d8:	b	1ea4 <sfbpf_print+0x48c>
    20dc:	mov	r0, #88	; 0x58
    20e0:	bl	e94 <putchar@plt>
    20e4:	b	1e3c <sfbpf_print+0x424>
    20e8:	ldr	r0, [pc, #560]	; 2320 <sfbpf_print+0x908>
    20ec:	add	r0, pc, r0
    20f0:	bl	d68 <printf@plt>
    20f4:	b	2004 <sfbpf_print+0x5ec>
    20f8:	ldr	r0, [pc, #548]	; 2324 <sfbpf_print+0x90c>
    20fc:	ldr	r1, [r6, #4]
    2100:	add	r0, pc, r0
    2104:	bl	d68 <printf@plt>
    2108:	b	2004 <sfbpf_print+0x5ec>
    210c:	ldr	r0, [pc, #532]	; 2328 <sfbpf_print+0x910>
    2110:	ldr	r1, [r6, #4]
    2114:	add	r0, pc, r0
    2118:	bl	d68 <printf@plt>
    211c:	b	1e3c <sfbpf_print+0x424>
    2120:	ldr	r0, [pc, #516]	; 232c <sfbpf_print+0x914>
    2124:	ldr	r1, [r6, #4]
    2128:	add	r0, pc, r0
    212c:	bl	d68 <printf@plt>
    2130:	b	2004 <sfbpf_print+0x5ec>
    2134:	ldr	r1, [pc, #500]	; 2330 <sfbpf_print+0x918>
    2138:	add	r1, pc, r1
    213c:	b	1e78 <sfbpf_print+0x460>
    2140:	ands	r3, r3, #24
    2144:	ldr	r1, [r6, #4]
    2148:	moveq	r2, #4
    214c:	beq	2164 <sfbpf_print+0x74c>
    2150:	cmp	r3, #8
    2154:	subne	r2, r3, #16
    2158:	moveq	r2, #2
    215c:	clzne	r2, r2
    2160:	lsrne	r2, r2, #5
    2164:	ldr	r0, [pc, #456]	; 2334 <sfbpf_print+0x91c>
    2168:	add	r0, pc, r0
    216c:	bl	d68 <printf@plt>
    2170:	b	2004 <sfbpf_print+0x5ec>
    2174:	ldr	r0, [pc, #444]	; 2338 <sfbpf_print+0x920>
    2178:	ldr	r1, [r6, #4]
    217c:	add	r0, pc, r0
    2180:	bl	d68 <printf@plt>
    2184:	b	2004 <sfbpf_print+0x5ec>
    2188:	ldr	r1, [r6, #4]
    218c:	ldr	r0, [pc, #424]	; 233c <sfbpf_print+0x924>
    2190:	add	r1, r5, r1
    2194:	add	r0, pc, r0
    2198:	bl	d68 <printf@plt>
    219c:	mov	r2, r5
    21a0:	b	1b9c <sfbpf_print+0x184>
    21a4:	ldr	r1, [pc, #404]	; 2340 <sfbpf_print+0x928>
    21a8:	cmp	r2, #0
    21ac:	add	r1, pc, r1
    21b0:	beq	2040 <sfbpf_print+0x628>
    21b4:	ldr	r1, [pc, #392]	; 2344 <sfbpf_print+0x92c>
    21b8:	add	r1, pc, r1
    21bc:	b	2040 <sfbpf_print+0x628>
    21c0:	ldr	r1, [pc, #384]	; 2348 <sfbpf_print+0x930>
    21c4:	cmp	r2, #80	; 0x50
    21c8:	add	r1, pc, r1
    21cc:	beq	2040 <sfbpf_print+0x628>
    21d0:	b	21b4 <sfbpf_print+0x79c>
    21d4:	cmp	r3, #0
    21d8:	bne	2004 <sfbpf_print+0x5ec>
    21dc:	ldr	r0, [pc, #360]	; 234c <sfbpf_print+0x934>
    21e0:	ldr	r1, [r6, #4]
    21e4:	add	r0, pc, r0
    21e8:	bl	d68 <printf@plt>
    21ec:	b	2004 <sfbpf_print+0x5ec>
    21f0:	ldr	r0, [pc, #344]	; 2350 <sfbpf_print+0x938>
    21f4:	add	r0, pc, r0
    21f8:	bl	d68 <printf@plt>
    21fc:	b	2004 <sfbpf_print+0x5ec>
    2200:	ldr	r0, [pc, #332]	; 2354 <sfbpf_print+0x93c>
    2204:	ldr	r1, [r6, #4]
    2208:	add	r0, pc, r0
    220c:	bl	d68 <printf@plt>
    2210:	b	2004 <sfbpf_print+0x5ec>
    2214:	ldr	r0, [pc, #316]	; 2358 <sfbpf_print+0x940>
    2218:	ldr	r1, [r6, #4]
    221c:	add	r0, pc, r0
    2220:	bl	d68 <printf@plt>
    2224:	b	1ea4 <sfbpf_print+0x48c>
    2228:	mov	r0, #65	; 0x41
    222c:	bl	e94 <putchar@plt>
    2230:	b	1e3c <sfbpf_print+0x424>
    2234:	ldr	r0, [pc, #288]	; 235c <sfbpf_print+0x944>
    2238:	add	r0, pc, r0
    223c:	bl	d68 <printf@plt>
    2240:	b	2004 <sfbpf_print+0x5ec>
    2244:	ldr	r1, [pc, #276]	; 2360 <sfbpf_print+0x948>
    2248:	add	r1, pc, r1
    224c:	b	2040 <sfbpf_print+0x628>
    2250:	ldr	r1, [pc, #268]	; 2364 <sfbpf_print+0x94c>
    2254:	add	r1, pc, r1
    2258:	b	2040 <sfbpf_print+0x628>
    225c:	ldr	r1, [pc, #260]	; 2368 <sfbpf_print+0x950>
    2260:	add	r1, pc, r1
    2264:	b	2040 <sfbpf_print+0x628>
    2268:	ldr	r1, [pc, #252]	; 236c <sfbpf_print+0x954>
    226c:	add	r1, pc, r1
    2270:	b	2040 <sfbpf_print+0x628>
    2274:	.word	0x00010fa4
    2278:	.word	0x000110c0
    227c:	.word	0x00010f88
    2280:	.word	0x000110b8
    2284:	.word	0x00010f54
    2288:	.word	0x000110a0
    228c:	.word	0x0001106c
    2290:	.word	0x0002e654
    2294:	.word	0x00010fe8
    2298:	.word	0x0002e5d0
    229c:	.word	0x00010e9c
    22a0:	.word	0x00010e8c
    22a4:	.word	0x0002e548
    22a8:	.word	0x00010e08
    22ac:	.word	0x0002e4f4
    22b0:	.word	0x0002e4b0
    22b4:	.word	0x00010d60
    22b8:	.word	0x0002e45c
    22bc:	.word	0x0002e418
    22c0:	.word	0x00010cc8
    22c4:	.word	0x0002e3c4
    22c8:	.word	0x0002e380
    22cc:	.word	0x00010c1c
    22d0:	.word	0x00010b88
    22d4:	.word	0x00010cc0
    22d8:	.word	0x00010b50
    22dc:	.word	0x00010c58
    22e0:	.word	0x00010b20
    22e4:	.word	0x00010c2c
    22e8:	.word	0x00010bb4
    22ec:	.word	0x00010b88
    22f0:	.word	0x00010b5c
    22f4:	.word	0x00010b2c
    22f8:	.word	0x00010b04
    22fc:	.word	0x00010ab4
    2300:	.word	0x00010a6c
    2304:	.word	0x0001097c
    2308:	.word	0x00010970
    230c:	.word	0x00010a70
    2310:	.word	0x000109d8
    2314:	.word	0x00010934
    2318:	.word	0x0001090c
    231c:	.word	0x0001090c
    2320:	.word	0x0001096c
    2324:	.word	0x00010960
    2328:	.word	0x00010948
    232c:	.word	0x00010938
    2330:	.word	0x0001088c
    2334:	.word	0x000108e4
    2338:	.word	0x000108e0
    233c:	.word	0x00010934
    2340:	.word	0x000107f0
    2344:	.word	0x00010804
    2348:	.word	0x000107e8
    234c:	.word	0x00010878
    2350:	.word	0x000107c8
    2354:	.word	0x00010854
    2358:	.word	0x00010840
    235c:	.word	0x00010784
    2360:	.word	0x00010764
    2364:	.word	0x00010764
    2368:	.word	0x00010740
    236c:	.word	0x00010748

00002370 <ethertype_to_ppptype>:
    2370:	cmp	r0, #1536	; 0x600
    2374:	beq	23f8 <ethertype_to_ppptype+0x88>
    2378:	ble	23a8 <ethertype_to_ppptype+0x38>
    237c:	ldr	r3, [pc, #128]	; 2404 <ethertype_to_ppptype+0x94>
    2380:	cmp	r0, r3
    2384:	beq	23f0 <ethertype_to_ppptype+0x80>
    2388:	ble	23d8 <ethertype_to_ppptype+0x68>
    238c:	ldr	r3, [pc, #116]	; 2408 <ethertype_to_ppptype+0x98>
    2390:	cmp	r0, r3
    2394:	beq	23d0 <ethertype_to_ppptype+0x60>
    2398:	ldr	r3, [pc, #108]	; 240c <ethertype_to_ppptype+0x9c>
    239c:	cmp	r0, r3
    23a0:	moveq	r0, #87	; 0x57
    23a4:	bx	lr
    23a8:	cmp	r0, #224	; 0xe0
    23ac:	beq	23e8 <ethertype_to_ppptype+0x78>
    23b0:	cmp	r0, #254	; 0xfe
    23b4:	beq	23c8 <ethertype_to_ppptype+0x58>
    23b8:	cmp	r0, #66	; 0x42
    23bc:	bxne	lr
    23c0:	mov	r0, #49	; 0x31
    23c4:	bx	lr
    23c8:	mov	r0, #35	; 0x23
    23cc:	bx	lr
    23d0:	mov	r0, #41	; 0x29
    23d4:	bx	lr
    23d8:	cmp	r0, #2048	; 0x800
    23dc:	bne	2400 <ethertype_to_ppptype+0x90>
    23e0:	mov	r0, #33	; 0x21
    23e4:	bx	lr
    23e8:	mov	r0, #43	; 0x2b
    23ec:	bx	lr
    23f0:	mov	r0, #39	; 0x27
    23f4:	bx	lr
    23f8:	mov	r0, #37	; 0x25
    23fc:	bx	lr
    2400:	bx	lr
    2404:	.word	0x00006003
    2408:	.word	0x0000809b
    240c:	.word	0x000086dd

00002410 <freechunks>:
    2410:	push	{r4, r5, r6, lr}
    2414:	mov	r3, #0
    2418:	ldr	r4, [pc, #48]	; 2450 <freechunks+0x40>
    241c:	mov	r6, r3
    2420:	add	r4, pc, r4
    2424:	add	r5, r4, #132	; 0x84
    2428:	str	r3, [r4], #4
    242c:	ldr	r0, [r4, #4]
    2430:	cmp	r0, #0
    2434:	beq	2440 <freechunks+0x30>
    2438:	bl	da4 <free@plt>
    243c:	str	r6, [r4, #4]
    2440:	add	r4, r4, #8
    2444:	cmp	r4, r5
    2448:	bne	242c <freechunks+0x1c>
    244c:	pop	{r4, r5, r6, pc}
    2450:	.word	0x0002df48

00002454 <sf_bpf_error>:
    2454:	ldr	r4, [pc, #52]	; 2490 <sf_bpf_error+0x3c>
    2458:	push	{r0, r1, r2, r3}
    245c:	add	r4, pc, r4
    2460:	push	{lr}		; (str lr, [sp, #-4]!)
    2464:	sub	sp, sp, #12
    2468:	add	ip, sp, #20
    246c:	mov	r1, #256	; 0x100
    2470:	add	r0, r4, #132	; 0x84
    2474:	mov	r3, ip
    2478:	ldr	r2, [sp, #16]
    247c:	str	ip, [sp, #4]
    2480:	bl	ed0 <vsnprintf@plt>
    2484:	add	r0, r4, #392	; 0x188
    2488:	mov	r1, #1
    248c:	bl	d8c <longjmp@plt>
    2490:	.word	0x0002df0c

00002494 <newchunk>:
    2494:	ldr	r1, [pc, #152]	; 2534 <newchunk+0xa0>
    2498:	push	{r4, r5, r6, r7, r8, lr}
    249c:	add	r1, pc, r1
    24a0:	mov	r2, r1
    24a4:	add	r0, r0, #3
    24a8:	ldr	r3, [r2], #4
    24ac:	bic	r6, r0, #3
    24b0:	lsl	r5, r3, #3
    24b4:	add	r0, r1, r5
    24b8:	add	r5, r2, r5
    24bc:	ldr	r0, [r0, #4]
    24c0:	cmp	r6, r0
    24c4:	bls	2518 <newchunk+0x84>
    24c8:	add	r3, r3, #1
    24cc:	cmp	r3, #15
    24d0:	str	r3, [r1]
    24d4:	add	r7, r5, #8
    24d8:	bgt	2528 <newchunk+0x94>
    24dc:	mov	r0, #1024	; 0x400
    24e0:	mov	r1, #1
    24e4:	lsl	r4, r0, r3
    24e8:	mov	r0, r4
    24ec:	bl	d38 <calloc@plt>
    24f0:	cmp	r0, #0
    24f4:	str	r0, [r5, #12]
    24f8:	beq	2528 <newchunk+0x94>
    24fc:	cmp	r6, r4
    2500:	str	r4, [r5, #8]
    2504:	bhi	2528 <newchunk+0x94>
    2508:	sub	r4, r4, r6
    250c:	str	r4, [r7]
    2510:	add	r0, r0, r4
    2514:	pop	{r4, r5, r6, r7, r8, pc}
    2518:	ldr	r4, [r2, r3, lsl #3]
    251c:	ldr	r0, [r5, #4]
    2520:	mov	r7, r5
    2524:	b	2508 <newchunk+0x74>
    2528:	ldr	r0, [pc, #8]	; 2538 <newchunk+0xa4>
    252c:	add	r0, pc, r0
    2530:	bl	2454 <sf_bpf_error>
    2534:	.word	0x0002decc
    2538:	.word	0x000106b8

0000253c <gen_uncond>:
    253c:	push	{r4, r5, r6, lr}
    2540:	mov	r4, r0
    2544:	mov	r0, #20
    2548:	bl	2494 <newchunk>
    254c:	mov	r3, #0
    2550:	mov	r5, r0
    2554:	clz	r0, r4
    2558:	lsr	r0, r0, #5
    255c:	str	r0, [r5, #12]
    2560:	str	r3, [r5]
    2564:	mov	r0, #208	; 0xd0
    2568:	bl	2494 <newchunk>
    256c:	mov	r2, #21
    2570:	mov	r3, r0
    2574:	str	r5, [r0, #4]
    2578:	str	r0, [r3, #96]	; 0x60
    257c:	str	r2, [r0, #8]
    2580:	pop	{r4, r5, r6, pc}

00002584 <gen_load_ppi_llprefixlen>:
    2584:	ldr	r3, [pc, #352]	; 26ec <gen_load_ppi_llprefixlen+0x168>
    2588:	push	{r4, r5, r6, lr}
    258c:	add	r3, pc, r3
    2590:	ldr	r5, [r3, #784]	; 0x310
    2594:	cmn	r5, #1
    2598:	beq	26e4 <gen_load_ppi_llprefixlen+0x160>
    259c:	mov	r0, #20
    25a0:	bl	2494 <newchunk>
    25a4:	mov	r2, #48	; 0x30
    25a8:	mov	r3, #3
    25ac:	str	r2, [r0]
    25b0:	str	r3, [r0, #12]
    25b4:	mov	r4, r0
    25b8:	mov	r0, #20
    25bc:	bl	2494 <newchunk>
    25c0:	mov	r3, #100	; 0x64
    25c4:	mov	r2, r4
    25c8:	mov	r1, r0
    25cc:	str	r3, [r0]
    25d0:	b	25d8 <gen_load_ppi_llprefixlen+0x54>
    25d4:	mov	r2, r3
    25d8:	ldr	r3, [r2, #16]
    25dc:	cmp	r3, #0
    25e0:	bne	25d4 <gen_load_ppi_llprefixlen+0x50>
    25e4:	mov	r3, #8
    25e8:	str	r1, [r2, #16]
    25ec:	mov	r0, #20
    25f0:	str	r3, [r1, #12]
    25f4:	bl	2494 <newchunk>
    25f8:	mov	r3, #7
    25fc:	mov	r2, r4
    2600:	str	r3, [r0]
    2604:	b	260c <gen_load_ppi_llprefixlen+0x88>
    2608:	mov	r2, r3
    260c:	ldr	r3, [r2, #16]
    2610:	cmp	r3, #0
    2614:	bne	2608 <gen_load_ppi_llprefixlen+0x84>
    2618:	str	r0, [r2, #16]
    261c:	mov	r0, #20
    2620:	bl	2494 <newchunk>
    2624:	mov	r3, #48	; 0x30
    2628:	mov	r2, r4
    262c:	mov	r1, r0
    2630:	str	r3, [r0]
    2634:	b	263c <gen_load_ppi_llprefixlen+0xb8>
    2638:	mov	r2, r3
    263c:	ldr	r3, [r2, #16]
    2640:	cmp	r3, #0
    2644:	bne	2638 <gen_load_ppi_llprefixlen+0xb4>
    2648:	mov	r3, #2
    264c:	str	r1, [r2, #16]
    2650:	mov	r0, #20
    2654:	str	r3, [r1, #12]
    2658:	bl	2494 <newchunk>
    265c:	mov	r3, #76	; 0x4c
    2660:	mov	r2, r4
    2664:	str	r3, [r0]
    2668:	b	2670 <gen_load_ppi_llprefixlen+0xec>
    266c:	mov	r2, r3
    2670:	ldr	r3, [r2, #16]
    2674:	cmp	r3, #0
    2678:	bne	266c <gen_load_ppi_llprefixlen+0xe8>
    267c:	str	r0, [r2, #16]
    2680:	mov	r0, #20
    2684:	bl	2494 <newchunk>
    2688:	mov	r3, #2
    268c:	mov	r2, r4
    2690:	str	r5, [r0, #12]
    2694:	str	r3, [r0]
    2698:	b	26a0 <gen_load_ppi_llprefixlen+0x11c>
    269c:	mov	r2, r3
    26a0:	ldr	r3, [r2, #16]
    26a4:	cmp	r3, #0
    26a8:	bne	269c <gen_load_ppi_llprefixlen+0x118>
    26ac:	str	r0, [r2, #16]
    26b0:	mov	r0, #20
    26b4:	bl	2494 <newchunk>
    26b8:	mov	r3, #7
    26bc:	mov	r2, r4
    26c0:	str	r3, [r0]
    26c4:	b	26cc <gen_load_ppi_llprefixlen+0x148>
    26c8:	mov	r2, r3
    26cc:	ldr	r3, [r2, #16]
    26d0:	cmp	r3, #0
    26d4:	bne	26c8 <gen_load_ppi_llprefixlen+0x144>
    26d8:	str	r0, [r2, #16]
    26dc:	mov	r0, r4
    26e0:	pop	{r4, r5, r6, pc}
    26e4:	mov	r4, #0
    26e8:	b	26dc <gen_load_ppi_llprefixlen+0x158>
    26ec:	.word	0x0002dddc

000026f0 <alloc_reg>:
    26f0:	ldr	r1, [pc, #180]	; 27ac <alloc_reg+0xbc>
    26f4:	push	{r4, lr}
    26f8:	add	r1, pc, r1
    26fc:	ldr	r3, [r1, #788]	; 0x314
    2700:	lsl	r2, r3, #2
    2704:	add	r0, r1, r2
    2708:	ldr	r0, [r0, #792]	; 0x318
    270c:	cmp	r0, #0
    2710:	beq	2790 <alloc_reg+0xa0>
    2714:	add	r3, r3, #1
    2718:	mov	r4, #15
    271c:	asr	r2, r3, #31
    2720:	mov	lr, r1
    2724:	lsr	r2, r2, #28
    2728:	add	r3, r3, r2
    272c:	and	r3, r3, r4
    2730:	mov	r0, #0
    2734:	mov	ip, #1
    2738:	sub	r3, r3, r2
    273c:	str	r3, [r1, #788]	; 0x314
    2740:	lsl	r2, r3, #2
    2744:	add	r1, lr, r2
    2748:	ldr	r1, [r1, #792]	; 0x318
    274c:	cmp	r1, #0
    2750:	beq	2788 <alloc_reg+0x98>
    2754:	add	r3, r3, #1
    2758:	subs	r4, r4, #1
    275c:	asr	r2, r3, #31
    2760:	mov	r0, ip
    2764:	lsr	r2, r2, #28
    2768:	add	r3, r3, r2
    276c:	and	r3, r3, #15
    2770:	sub	r3, r3, r2
    2774:	bne	2740 <alloc_reg+0x50>
    2778:	ldr	r0, [pc, #48]	; 27b0 <alloc_reg+0xc0>
    277c:	str	r3, [lr, #788]	; 0x314
    2780:	add	r0, pc, r0
    2784:	bl	2454 <sf_bpf_error>
    2788:	cmp	r0, #0
    278c:	strne	r3, [lr, #788]	; 0x314
    2790:	ldr	r1, [pc, #28]	; 27b4 <alloc_reg+0xc4>
    2794:	mov	r0, #1
    2798:	add	r1, pc, r1
    279c:	add	r2, r1, r2
    27a0:	str	r0, [r2, #792]	; 0x318
    27a4:	mov	r0, r3
    27a8:	pop	{r4, pc}
    27ac:	.word	0x0002dc70
    27b0:	.word	0x00010474
    27b4:	.word	0x0002dbd0

000027b8 <gen_avs_llprefixlen>:
    27b8:	push	{r4, r5, r6, lr}
    27bc:	ldr	r5, [pc, #52]	; 27f8 <gen_avs_llprefixlen+0x40>
    27c0:	add	r5, pc, r5
    27c4:	ldr	r4, [r5, #784]	; 0x310
    27c8:	cmn	r4, #1
    27cc:	beq	27e8 <gen_avs_llprefixlen+0x30>
    27d0:	mov	r0, #20
    27d4:	bl	2494 <newchunk>
    27d8:	mov	r2, #97	; 0x61
    27dc:	str	r4, [r0, #12]
    27e0:	str	r2, [r0]
    27e4:	pop	{r4, r5, r6, pc}
    27e8:	bl	26f0 <alloc_reg>
    27ec:	mov	r4, r0
    27f0:	str	r0, [r5, #784]	; 0x310
    27f4:	b	27d0 <gen_avs_llprefixlen+0x18>
    27f8:	.word	0x0002dba8

000027fc <gen_llprefixlen>:
    27fc:	ldr	r3, [pc, #64]	; 2844 <gen_llprefixlen+0x48>
    2800:	add	r3, pc, r3
    2804:	ldr	r3, [r3, #856]	; 0x358
    2808:	cmp	r3, #127	; 0x7f
    280c:	beq	2840 <gen_llprefixlen+0x44>
    2810:	ble	282c <gen_llprefixlen+0x30>
    2814:	cmp	r3, #163	; 0xa3
    2818:	beq	2828 <gen_llprefixlen+0x2c>
    281c:	cmp	r3, #192	; 0xc0
    2820:	bne	2838 <gen_llprefixlen+0x3c>
    2824:	b	27b8 <gen_avs_llprefixlen>
    2828:	b	27b8 <gen_avs_llprefixlen>
    282c:	cmp	r3, #119	; 0x77
    2830:	bne	2838 <gen_llprefixlen+0x3c>
    2834:	b	27b8 <gen_avs_llprefixlen>
    2838:	mov	r0, #0
    283c:	bx	lr
    2840:	b	27b8 <gen_avs_llprefixlen>
    2844:	.word	0x0002db68

00002848 <gen_load_llrel>:
    2848:	push	{r4, r5, r6, lr}
    284c:	mov	r6, r0
    2850:	mov	r4, r1
    2854:	bl	27fc <gen_llprefixlen>
    2858:	subs	r5, r0, #0
    285c:	mov	r0, #20
    2860:	beq	2898 <gen_load_llrel+0x50>
    2864:	bl	2494 <newchunk>
    2868:	orr	r4, r4, #64	; 0x40
    286c:	mov	r2, r5
    2870:	str	r6, [r0, #12]
    2874:	str	r4, [r0]
    2878:	b	2880 <gen_load_llrel+0x38>
    287c:	mov	r2, r3
    2880:	ldr	r3, [r2, #16]
    2884:	cmp	r3, #0
    2888:	bne	287c <gen_load_llrel+0x34>
    288c:	str	r0, [r2, #16]
    2890:	mov	r0, r5
    2894:	pop	{r4, r5, r6, pc}
    2898:	bl	2494 <newchunk>
    289c:	ldr	r3, [pc, #32]	; 28c4 <gen_load_llrel+0x7c>
    28a0:	orr	r4, r4, #32
    28a4:	add	r3, pc, r3
    28a8:	ldr	r3, [r3, #860]	; 0x35c
    28ac:	add	r6, r3, r6
    28b0:	mov	r5, r0
    28b4:	str	r4, [r0]
    28b8:	str	r6, [r0, #12]
    28bc:	mov	r0, r5
    28c0:	pop	{r4, r5, r6, pc}
    28c4:	.word	0x0002dac4

000028c8 <gen_mac_multicast>:
    28c8:	push	{r4, lr}
    28cc:	mov	r1, #16
    28d0:	bl	2848 <gen_load_llrel>
    28d4:	mov	r4, r0
    28d8:	mov	r0, #208	; 0xd0
    28dc:	bl	2494 <newchunk>
    28e0:	mov	r1, #69	; 0x45
    28e4:	mov	r2, #1
    28e8:	mov	r3, r0
    28ec:	str	r4, [r0, #4]
    28f0:	str	r0, [r3, #96]	; 0x60
    28f4:	str	r1, [r0, #8]
    28f8:	str	r2, [r0, #20]
    28fc:	pop	{r4, pc}

00002900 <gen_cmp_gt.constprop.10>:
    2900:	push	{r4, r5, r6, lr}
    2904:	mov	r4, r2
    2908:	bl	2848 <gen_load_llrel>
    290c:	mov	r5, r0
    2910:	mov	r0, #208	; 0xd0
    2914:	bl	2494 <newchunk>
    2918:	mov	r1, #37	; 0x25
    291c:	mov	r3, r0
    2920:	str	r5, [r0, #4]
    2924:	str	r0, [r3, #96]	; 0x60
    2928:	str	r4, [r0, #20]
    292c:	str	r1, [r0, #8]
    2930:	pop	{r4, r5, r6, pc}

00002934 <gen_off_macpl>:
    2934:	push	{r4, r5, r6, lr}
    2938:	ldr	r4, [pc, #64]	; 2980 <gen_off_macpl+0x4c>
    293c:	add	r4, pc, r4
    2940:	ldr	r0, [r4, #864]	; 0x360
    2944:	cmp	r0, #0
    2948:	popeq	{r4, r5, r6, pc}
    294c:	ldr	r5, [r4, #868]	; 0x364
    2950:	cmn	r5, #1
    2954:	beq	2970 <gen_off_macpl+0x3c>
    2958:	mov	r0, #20
    295c:	bl	2494 <newchunk>
    2960:	mov	r3, #97	; 0x61
    2964:	str	r5, [r0, #12]
    2968:	str	r3, [r0]
    296c:	pop	{r4, r5, r6, pc}
    2970:	bl	26f0 <alloc_reg>
    2974:	mov	r5, r0
    2978:	str	r0, [r4, #868]	; 0x364
    297c:	b	2958 <gen_off_macpl+0x24>
    2980:	.word	0x0002da2c

00002984 <gen_loadx_iphdrlen>:
    2984:	push	{r4, lr}
    2988:	bl	2934 <gen_off_macpl>
    298c:	subs	r4, r0, #0
    2990:	mov	r0, #20
    2994:	beq	2a98 <gen_loadx_iphdrlen+0x114>
    2998:	bl	2494 <newchunk>
    299c:	ldr	r3, [pc, #292]	; 2ac8 <gen_loadx_iphdrlen+0x144>
    29a0:	mov	r2, #80	; 0x50
    29a4:	add	r3, pc, r3
    29a8:	ldr	r3, [r3, #872]	; 0x368
    29ac:	str	r2, [r0]
    29b0:	str	r3, [r0, #12]
    29b4:	mov	r2, r4
    29b8:	b	29c0 <gen_loadx_iphdrlen+0x3c>
    29bc:	mov	r2, r3
    29c0:	ldr	r3, [r2, #16]
    29c4:	cmp	r3, #0
    29c8:	bne	29bc <gen_loadx_iphdrlen+0x38>
    29cc:	str	r0, [r2, #16]
    29d0:	mov	r0, #20
    29d4:	bl	2494 <newchunk>
    29d8:	mov	r2, #84	; 0x54
    29dc:	mov	r3, #15
    29e0:	str	r2, [r0]
    29e4:	str	r3, [r0, #12]
    29e8:	mov	r2, r4
    29ec:	b	29f4 <gen_loadx_iphdrlen+0x70>
    29f0:	mov	r2, r3
    29f4:	ldr	r3, [r2, #16]
    29f8:	cmp	r3, #0
    29fc:	bne	29f0 <gen_loadx_iphdrlen+0x6c>
    2a00:	str	r0, [r2, #16]
    2a04:	mov	r0, #20
    2a08:	bl	2494 <newchunk>
    2a0c:	mov	r2, #100	; 0x64
    2a10:	mov	r3, #2
    2a14:	str	r2, [r0]
    2a18:	str	r3, [r0, #12]
    2a1c:	mov	r2, r4
    2a20:	b	2a28 <gen_loadx_iphdrlen+0xa4>
    2a24:	mov	r2, r3
    2a28:	ldr	r3, [r2, #16]
    2a2c:	cmp	r3, #0
    2a30:	bne	2a24 <gen_loadx_iphdrlen+0xa0>
    2a34:	str	r0, [r2, #16]
    2a38:	mov	r0, #20
    2a3c:	bl	2494 <newchunk>
    2a40:	mov	r3, #12
    2a44:	mov	r2, r4
    2a48:	str	r3, [r0]
    2a4c:	b	2a54 <gen_loadx_iphdrlen+0xd0>
    2a50:	mov	r2, r3
    2a54:	ldr	r3, [r2, #16]
    2a58:	cmp	r3, #0
    2a5c:	bne	2a50 <gen_loadx_iphdrlen+0xcc>
    2a60:	str	r0, [r2, #16]
    2a64:	mov	r0, #20
    2a68:	bl	2494 <newchunk>
    2a6c:	mov	r3, #7
    2a70:	mov	r2, r4
    2a74:	str	r3, [r0]
    2a78:	b	2a80 <gen_loadx_iphdrlen+0xfc>
    2a7c:	mov	r2, r3
    2a80:	ldr	r3, [r2, #16]
    2a84:	cmp	r3, #0
    2a88:	bne	2a7c <gen_loadx_iphdrlen+0xf8>
    2a8c:	str	r0, [r2, #16]
    2a90:	mov	r0, r4
    2a94:	pop	{r4, pc}
    2a98:	bl	2494 <newchunk>
    2a9c:	ldr	r3, [pc, #40]	; 2acc <gen_loadx_iphdrlen+0x148>
    2aa0:	mov	r2, #177	; 0xb1
    2aa4:	add	r3, pc, r3
    2aa8:	str	r2, [r0]
    2aac:	ldr	r2, [r3, #876]	; 0x36c
    2ab0:	ldr	r3, [r3, #872]	; 0x368
    2ab4:	mov	r4, r0
    2ab8:	add	r3, r2, r3
    2abc:	str	r3, [r0, #12]
    2ac0:	mov	r0, r4
    2ac4:	pop	{r4, pc}
    2ac8:	.word	0x0002d9c4
    2acc:	.word	0x0002d8c4

00002ad0 <gen_load_macplrel>:
    2ad0:	push	{r4, r5, r6, lr}
    2ad4:	mov	r6, r0
    2ad8:	mov	r4, r1
    2adc:	bl	2934 <gen_off_macpl>
    2ae0:	subs	r5, r0, #0
    2ae4:	mov	r0, #20
    2ae8:	beq	2b20 <gen_load_macplrel+0x50>
    2aec:	bl	2494 <newchunk>
    2af0:	orr	r4, r4, #64	; 0x40
    2af4:	mov	r2, r5
    2af8:	str	r6, [r0, #12]
    2afc:	str	r4, [r0]
    2b00:	b	2b08 <gen_load_macplrel+0x38>
    2b04:	mov	r2, r3
    2b08:	ldr	r3, [r2, #16]
    2b0c:	cmp	r3, #0
    2b10:	bne	2b04 <gen_load_macplrel+0x34>
    2b14:	str	r0, [r2, #16]
    2b18:	mov	r0, r5
    2b1c:	pop	{r4, r5, r6, pc}
    2b20:	bl	2494 <newchunk>
    2b24:	ldr	r3, [pc, #32]	; 2b4c <gen_load_macplrel+0x7c>
    2b28:	orr	r4, r4, #32
    2b2c:	add	r3, pc, r3
    2b30:	ldr	r3, [r3, #876]	; 0x36c
    2b34:	add	r6, r3, r6
    2b38:	mov	r5, r0
    2b3c:	str	r4, [r0]
    2b40:	str	r6, [r0, #12]
    2b44:	mov	r0, r5
    2b48:	pop	{r4, r5, r6, pc}
    2b4c:	.word	0x0002d83c

00002b50 <gen_load_a>:
    2b50:	push	{r4, r5, r6, lr}
    2b54:	mov	r5, r1
    2b58:	mov	r4, r2
    2b5c:	cmp	r0, #6
    2b60:	addls	pc, pc, r0, lsl #2
    2b64:	b	2c74 <gen_load_a+0x124>
    2b68:	b	2ba4 <gen_load_a+0x54>
    2b6c:	b	2bc4 <gen_load_a+0x74>
    2b70:	b	2bd4 <gen_load_a+0x84>
    2b74:	b	2be4 <gen_load_a+0x94>
    2b78:	b	2c00 <gen_load_a+0xb0>
    2b7c:	b	2c1c <gen_load_a+0xcc>
    2b80:	b	2b84 <gen_load_a+0x34>
    2b84:	ldr	r3, [pc, #236]	; 2c78 <gen_load_a+0x128>
    2b88:	mov	r1, r2
    2b8c:	add	r3, pc, r3
    2b90:	ldr	r0, [r3, #872]	; 0x368
    2b94:	add	r0, r0, #40	; 0x28
    2b98:	add	r0, r0, r5
    2b9c:	pop	{r4, r5, r6, lr}
    2ba0:	b	2ad0 <gen_load_macplrel>
    2ba4:	mov	r0, #20
    2ba8:	bl	2494 <newchunk>
    2bac:	orr	r4, r4, #32
    2bb0:	mov	r6, r0
    2bb4:	str	r5, [r0, #12]
    2bb8:	str	r4, [r0]
    2bbc:	mov	r0, r6
    2bc0:	pop	{r4, r5, r6, pc}
    2bc4:	mov	r0, r5
    2bc8:	mov	r1, r2
    2bcc:	pop	{r4, r5, r6, lr}
    2bd0:	b	2848 <gen_load_llrel>
    2bd4:	mov	r0, r5
    2bd8:	mov	r1, r2
    2bdc:	pop	{r4, r5, r6, lr}
    2be0:	b	2ad0 <gen_load_macplrel>
    2be4:	ldr	r3, [pc, #144]	; 2c7c <gen_load_a+0x12c>
    2be8:	mov	r1, r2
    2bec:	add	r3, pc, r3
    2bf0:	ldr	r0, [r3, #872]	; 0x368
    2bf4:	add	r0, r5, r0
    2bf8:	pop	{r4, r5, r6, lr}
    2bfc:	b	2ad0 <gen_load_macplrel>
    2c00:	ldr	r3, [pc, #120]	; 2c80 <gen_load_a+0x130>
    2c04:	mov	r1, r2
    2c08:	add	r3, pc, r3
    2c0c:	ldr	r0, [r3, #880]	; 0x370
    2c10:	add	r0, r5, r0
    2c14:	pop	{r4, r5, r6, lr}
    2c18:	b	2ad0 <gen_load_macplrel>
    2c1c:	bl	2984 <gen_loadx_iphdrlen>
    2c20:	orr	r4, r4, #64	; 0x40
    2c24:	mov	r6, r0
    2c28:	mov	r0, #20
    2c2c:	bl	2494 <newchunk>
    2c30:	ldr	r2, [pc, #76]	; 2c84 <gen_load_a+0x134>
    2c34:	add	r2, pc, r2
    2c38:	ldr	r3, [r2, #876]	; 0x36c
    2c3c:	ldr	r1, [r2, #872]	; 0x368
    2c40:	mov	r2, r6
    2c44:	add	r3, r3, r1
    2c48:	add	r5, r3, r5
    2c4c:	str	r4, [r0]
    2c50:	str	r5, [r0, #12]
    2c54:	b	2c5c <gen_load_a+0x10c>
    2c58:	mov	r2, r3
    2c5c:	ldr	r3, [r2, #16]
    2c60:	cmp	r3, #0
    2c64:	bne	2c58 <gen_load_a+0x108>
    2c68:	str	r0, [r2, #16]
    2c6c:	mov	r0, r6
    2c70:	pop	{r4, r5, r6, pc}
    2c74:	bl	f18 <abort@plt>
    2c78:	.word	0x0002d7dc
    2c7c:	.word	0x0002d77c
    2c80:	.word	0x0002d760
    2c84:	.word	0x0002d734

00002c88 <gen_ncmp>:
    2c88:	push	{r4, r5, r6, r7, r8, lr}
    2c8c:	mov	r6, r3
    2c90:	ldr	r4, [sp, #24]
    2c94:	ldr	r8, [sp, #28]
    2c98:	ldr	r7, [sp, #32]
    2c9c:	bl	2b50 <gen_load_a>
    2ca0:	cmn	r6, #1
    2ca4:	mov	r5, r0
    2ca8:	beq	2cdc <gen_ncmp+0x54>
    2cac:	mov	r0, #20
    2cb0:	bl	2494 <newchunk>
    2cb4:	mov	r3, #84	; 0x54
    2cb8:	mov	r2, r5
    2cbc:	str	r6, [r0, #12]
    2cc0:	str	r3, [r0]
    2cc4:	b	2ccc <gen_ncmp+0x44>
    2cc8:	mov	r2, r3
    2ccc:	ldr	r3, [r2, #16]
    2cd0:	cmp	r3, #0
    2cd4:	bne	2cc8 <gen_ncmp+0x40>
    2cd8:	str	r0, [r2, #16]
    2cdc:	mov	r0, #208	; 0xd0
    2ce0:	bl	2494 <newchunk>
    2ce4:	cmp	r8, #0
    2ce8:	orr	r3, r4, #5
    2cec:	str	r0, [r0, #96]	; 0x60
    2cf0:	str	r5, [r0, #4]
    2cf4:	str	r7, [r0, #20]
    2cf8:	str	r3, [r0, #8]
    2cfc:	popeq	{r4, r5, r6, r7, r8, pc}
    2d00:	bic	r4, r4, #16
    2d04:	cmp	r4, #32
    2d08:	ldreq	r3, [r0, #44]	; 0x2c
    2d0c:	clzeq	r3, r3
    2d10:	lsreq	r3, r3, #5
    2d14:	streq	r3, [r0, #44]	; 0x2c
    2d18:	pop	{r4, r5, r6, r7, r8, pc}

00002d1c <gen_cmp>:
    2d1c:	push	{r4, r5, r6, lr}
    2d20:	mov	r4, r3
    2d24:	bl	2b50 <gen_load_a>
    2d28:	mov	r5, r0
    2d2c:	mov	r0, #208	; 0xd0
    2d30:	bl	2494 <newchunk>
    2d34:	mov	r1, #21
    2d38:	mov	r2, r0
    2d3c:	str	r5, [r0, #4]
    2d40:	str	r0, [r2, #96]	; 0x60
    2d44:	str	r4, [r0, #20]
    2d48:	str	r1, [r0, #8]
    2d4c:	pop	{r4, r5, r6, pc}

00002d50 <gen_cmp_ge>:
    2d50:	push	{r4, r5, r6, lr}
    2d54:	mov	r4, r3
    2d58:	bl	2b50 <gen_load_a>
    2d5c:	mov	r5, r0
    2d60:	mov	r0, #208	; 0xd0
    2d64:	bl	2494 <newchunk>
    2d68:	mov	r1, #53	; 0x35
    2d6c:	mov	r2, r0
    2d70:	str	r5, [r0, #4]
    2d74:	str	r0, [r2, #96]	; 0x60
    2d78:	str	r4, [r0, #20]
    2d7c:	str	r1, [r0, #8]
    2d80:	pop	{r4, r5, r6, pc}

00002d84 <gen_ipfrag>:
    2d84:	push	{r4, lr}
    2d88:	mov	r2, #8
    2d8c:	mov	r1, #6
    2d90:	mov	r0, #3
    2d94:	bl	2b50 <gen_load_a>
    2d98:	mov	r4, r0
    2d9c:	mov	r0, #208	; 0xd0
    2da0:	bl	2494 <newchunk>
    2da4:	ldr	r1, [pc, #40]	; 2dd4 <gen_ipfrag+0x50>
    2da8:	mov	ip, #69	; 0x45
    2dac:	mov	r3, r0
    2db0:	ldr	r2, [r0, #44]	; 0x2c
    2db4:	clz	r2, r2
    2db8:	lsr	r2, r2, #5
    2dbc:	str	r4, [r0, #4]
    2dc0:	str	r0, [r3, #96]	; 0x60
    2dc4:	str	ip, [r0, #8]
    2dc8:	str	r1, [r0, #20]
    2dcc:	str	r2, [r0, #44]	; 0x2c
    2dd0:	pop	{r4, pc}
    2dd4:	.word	0x00001fff

00002dd8 <lookup_proto>:
    2dd8:	push	{r4, lr}
    2ddc:	mov	r4, r0
    2de0:	cmp	r1, #24
    2de4:	addls	pc, pc, r1, lsl #2
    2de8:	b	2eb4 <lookup_proto+0xdc>
    2dec:	b	2e98 <lookup_proto+0xc0>
    2df0:	b	2e6c <lookup_proto+0x94>
    2df4:	b	2e98 <lookup_proto+0xc0>
    2df8:	b	2eb4 <lookup_proto+0xdc>
    2dfc:	b	2eb4 <lookup_proto+0xdc>
    2e00:	b	2eb4 <lookup_proto+0xdc>
    2e04:	b	2eb4 <lookup_proto+0xdc>
    2e08:	b	2eb4 <lookup_proto+0xdc>
    2e0c:	b	2eb4 <lookup_proto+0xdc>
    2e10:	b	2eb4 <lookup_proto+0xdc>
    2e14:	b	2eb4 <lookup_proto+0xdc>
    2e18:	b	2eb4 <lookup_proto+0xdc>
    2e1c:	b	2eb4 <lookup_proto+0xdc>
    2e20:	b	2eb4 <lookup_proto+0xdc>
    2e24:	b	2eb4 <lookup_proto+0xdc>
    2e28:	b	2eb4 <lookup_proto+0xdc>
    2e2c:	b	2eb4 <lookup_proto+0xdc>
    2e30:	b	2e98 <lookup_proto+0xc0>
    2e34:	b	2eb4 <lookup_proto+0xdc>
    2e38:	b	2eb4 <lookup_proto+0xdc>
    2e3c:	b	2eb4 <lookup_proto+0xdc>
    2e40:	b	2eb4 <lookup_proto+0xdc>
    2e44:	b	2eb4 <lookup_proto+0xdc>
    2e48:	b	2eb4 <lookup_proto+0xdc>
    2e4c:	b	2e50 <lookup_proto+0x78>
    2e50:	ldr	r1, [pc, #180]	; 2f0c <lookup_proto+0x134>
    2e54:	add	r1, pc, r1
    2e58:	bl	d50 <strcmp@plt>
    2e5c:	cmp	r0, #0
    2e60:	bne	2ebc <lookup_proto+0xe4>
    2e64:	mov	r0, #130	; 0x82
    2e68:	pop	{r4, pc}
    2e6c:	bl	bbd0 <pcap_nametoeproto>
    2e70:	cmn	r0, #1
    2e74:	popne	{r4, pc}
    2e78:	mov	r0, r4
    2e7c:	bl	bc20 <pcap_nametollc>
    2e80:	cmn	r0, #1
    2e84:	popne	{r4, pc}
    2e88:	ldr	r0, [pc, #128]	; 2f10 <lookup_proto+0x138>
    2e8c:	mov	r1, r4
    2e90:	add	r0, pc, r0
    2e94:	bl	2454 <sf_bpf_error>
    2e98:	bl	bbb8 <pcap_nametoproto>
    2e9c:	cmn	r0, #1
    2ea0:	popne	{r4, pc}
    2ea4:	ldr	r0, [pc, #104]	; 2f14 <lookup_proto+0x13c>
    2ea8:	mov	r1, r4
    2eac:	add	r0, pc, r0
    2eb0:	bl	2454 <sf_bpf_error>
    2eb4:	mvn	r0, #0
    2eb8:	pop	{r4, pc}
    2ebc:	ldr	r1, [pc, #84]	; 2f18 <lookup_proto+0x140>
    2ec0:	mov	r0, r4
    2ec4:	add	r1, pc, r1
    2ec8:	bl	d50 <strcmp@plt>
    2ecc:	cmp	r0, #0
    2ed0:	bne	2edc <lookup_proto+0x104>
    2ed4:	mov	r0, #131	; 0x83
    2ed8:	pop	{r4, pc}
    2edc:	ldr	r1, [pc, #56]	; 2f1c <lookup_proto+0x144>
    2ee0:	mov	r0, r4
    2ee4:	add	r1, pc, r1
    2ee8:	bl	d50 <strcmp@plt>
    2eec:	cmp	r0, #0
    2ef0:	bne	2efc <lookup_proto+0x124>
    2ef4:	mov	r0, #129	; 0x81
    2ef8:	pop	{r4, pc}
    2efc:	ldr	r0, [pc, #28]	; 2f20 <lookup_proto+0x148>
    2f00:	mov	r1, r4
    2f04:	add	r0, pc, r0
    2f08:	bl	2454 <sf_bpf_error>
    2f0c:	.word	0x0000fe08
    2f10:	.word	0x0000fdb0
    2f14:	.word	0x0000fd7c
    2f18:	.word	0x0000fda0
    2f1c:	.word	0x0000fd88
    2f20:	.word	0x0000fd70

00002f24 <sf_sdup>:
    2f24:	push	{r4, r5, r6, r7, r8, lr}
    2f28:	mov	r7, r0
    2f2c:	bl	e4c <strlen@plt>
    2f30:	add	r4, r0, #1
    2f34:	mov	r6, r0
    2f38:	mov	r0, r4
    2f3c:	bl	2494 <newchunk>
    2f40:	mov	r2, r4
    2f44:	mov	r1, r7
    2f48:	mov	r5, r0
    2f4c:	bl	ea0 <strncpy@plt>
    2f50:	cmp	r4, #0
    2f54:	movgt	r3, #0
    2f58:	mov	r0, r5
    2f5c:	strbgt	r3, [r5, r6]
    2f60:	pop	{r4, r5, r6, r7, r8, pc}

00002f64 <sfbpf_compile>:
    2f64:	ldr	ip, [pc, #3036]	; 3b48 <sfbpf_compile+0xbe4>
    2f68:	push	{r4, r5, r6, lr}
    2f6c:	add	ip, pc, ip
    2f70:	ldr	lr, [pc, #3028]	; 3b4c <sfbpf_compile+0xbe8>
    2f74:	sub	sp, sp, #24
    2f78:	mov	r5, ip
    2f7c:	str	ip, [sp]
    2f80:	str	r3, [sp, #16]
    2f84:	ldr	ip, [pc, #3012]	; 3b50 <sfbpf_compile+0xbec>
    2f88:	ldr	lr, [r5, lr]
    2f8c:	mov	r3, #0
    2f90:	ldr	r4, [pc, #3004]	; 3b54 <sfbpf_compile+0xbf0>
    2f94:	str	r3, [lr]
    2f98:	ldr	ip, [r5, ip]
    2f9c:	add	r4, pc, r4
    2fa0:	stmib	sp, {r0, r1, r2}
    2fa4:	mov	r1, r3
    2fa8:	add	r0, r4, #792	; 0x318
    2fac:	mov	r2, #64	; 0x40
    2fb0:	str	r3, [ip]
    2fb4:	str	r3, [r4, #884]	; 0x374
    2fb8:	str	r3, [r4, #788]	; 0x314
    2fbc:	bl	e88 <memset@plt>
    2fc0:	add	r0, r4, #392	; 0x188
    2fc4:	bl	d98 <_setjmp@plt>
    2fc8:	cmp	r0, #0
    2fcc:	beq	3008 <sfbpf_compile+0xa4>
    2fd0:	ldr	r4, [pc, #2944]	; 3b58 <sfbpf_compile+0xbf4>
    2fd4:	add	r4, pc, r4
    2fd8:	ldr	r0, [r4, #888]	; 0x378
    2fdc:	cmp	r0, #0
    2fe0:	beq	2ff0 <sfbpf_compile+0x8c>
    2fe4:	bl	edc <freeaddrinfo@plt>
    2fe8:	mov	r3, #0
    2fec:	str	r3, [r4, #888]	; 0x378
    2ff0:	bl	12740 <sf_lex_cleanup>
    2ff4:	mvn	r4, #0
    2ff8:	bl	2410 <freechunks>
    2ffc:	mov	r0, r4
    3000:	add	sp, sp, #24
    3004:	pop	{r4, r5, r6, pc}
    3008:	ldr	r3, [pc, #2892]	; 3b5c <sfbpf_compile+0xbf8>
    300c:	ldr	r2, [sp, #4]
    3010:	add	r3, pc, r3
    3014:	ldr	r1, [sp, #44]	; 0x2c
    3018:	cmp	r2, #0
    301c:	str	r1, [r3, #892]	; 0x37c
    3020:	str	r2, [r3, #896]	; 0x380
    3024:	beq	345c <sfbpf_compile+0x4f8>
    3028:	ldr	r3, [sp, #16]
    302c:	cmp	r3, #0
    3030:	beq	3450 <sfbpf_compile+0x4ec>
    3034:	ldr	r0, [sp, #16]
    3038:	bl	12714 <sf_lex_init>
    303c:	ldr	r3, [pc, #2844]	; 3b60 <sfbpf_compile+0xbfc>
    3040:	ldr	r0, [pc, #2844]	; 3b64 <sfbpf_compile+0xc00>
    3044:	add	r3, pc, r3
    3048:	add	r0, pc, r0
    304c:	ldr	ip, [sp, #8]
    3050:	mvn	r2, #0
    3054:	mov	r1, #0
    3058:	str	ip, [r3, #856]	; 0x358
    305c:	str	r1, [r3, #900]	; 0x384
    3060:	str	r1, [r3, #904]	; 0x388
    3064:	str	r1, [r3, #908]	; 0x38c
    3068:	str	r1, [r3, #928]	; 0x3a0
    306c:	str	r1, [r3, #860]	; 0x35c
    3070:	str	r1, [r3, #876]	; 0x36c
    3074:	str	r1, [r3, #864]	; 0x360
    3078:	str	r1, [r0, #4]
    307c:	str	r2, [r0]
    3080:	str	r2, [r3, #912]	; 0x390
    3084:	str	r2, [r3, #916]	; 0x394
    3088:	str	r2, [r3, #920]	; 0x398
    308c:	str	r2, [r3, #924]	; 0x39c
    3090:	str	r2, [r3, #932]	; 0x3a4
    3094:	str	r2, [r3, #936]	; 0x3a8
    3098:	str	r2, [r3, #940]	; 0x3ac
    309c:	str	r2, [r3, #944]	; 0x3b0
    30a0:	str	r2, [r3, #948]	; 0x3b4
    30a4:	str	r2, [r3, #784]	; 0x310
    30a8:	str	r2, [r3, #868]	; 0x364
    30ac:	cmp	ip, #229	; 0xe5
    30b0:	addls	pc, pc, ip, lsl #2
    30b4:	b	3ac8 <sfbpf_compile+0xb64>
    30b8:	b	3488 <sfbpf_compile+0x524>
    30bc:	b	3534 <sfbpf_compile+0x5d0>
    30c0:	b	3ac8 <sfbpf_compile+0xb64>
    30c4:	b	3ac8 <sfbpf_compile+0xb64>
    30c8:	b	3ac8 <sfbpf_compile+0xb64>
    30cc:	b	3ac8 <sfbpf_compile+0xb64>
    30d0:	b	3560 <sfbpf_compile+0x5fc>
    30d4:	b	3588 <sfbpf_compile+0x624>
    30d8:	b	35b0 <sfbpf_compile+0x64c>
    30dc:	b	35c4 <sfbpf_compile+0x660>
    30e0:	b	35d8 <sfbpf_compile+0x674>
    30e4:	b	3600 <sfbpf_compile+0x69c>
    30e8:	b	3624 <sfbpf_compile+0x6c0>
    30ec:	b	3ac8 <sfbpf_compile+0xb64>
    30f0:	b	3ac8 <sfbpf_compile+0xb64>
    30f4:	b	3644 <sfbpf_compile+0x6e0>
    30f8:	b	3658 <sfbpf_compile+0x6f4>
    30fc:	b	3ac8 <sfbpf_compile+0xb64>
    3100:	b	3ac8 <sfbpf_compile+0xb64>
    3104:	b	3600 <sfbpf_compile+0x69c>
    3108:	b	3ac8 <sfbpf_compile+0xb64>
    310c:	b	3ac8 <sfbpf_compile+0xb64>
    3110:	b	3ac8 <sfbpf_compile+0xb64>
    3114:	b	3ac8 <sfbpf_compile+0xb64>
    3118:	b	3ac8 <sfbpf_compile+0xb64>
    311c:	b	3ac8 <sfbpf_compile+0xb64>
    3120:	b	3ac8 <sfbpf_compile+0xb64>
    3124:	b	3ac8 <sfbpf_compile+0xb64>
    3128:	b	3ac8 <sfbpf_compile+0xb64>
    312c:	b	3ac8 <sfbpf_compile+0xb64>
    3130:	b	3ac8 <sfbpf_compile+0xb64>
    3134:	b	3ac8 <sfbpf_compile+0xb64>
    3138:	b	3ac8 <sfbpf_compile+0xb64>
    313c:	b	3ac8 <sfbpf_compile+0xb64>
    3140:	b	3ac8 <sfbpf_compile+0xb64>
    3144:	b	3ac8 <sfbpf_compile+0xb64>
    3148:	b	3ac8 <sfbpf_compile+0xb64>
    314c:	b	3ac8 <sfbpf_compile+0xb64>
    3150:	b	3ac8 <sfbpf_compile+0xb64>
    3154:	b	3ac8 <sfbpf_compile+0xb64>
    3158:	b	3ac8 <sfbpf_compile+0xb64>
    315c:	b	3ac8 <sfbpf_compile+0xb64>
    3160:	b	3ac8 <sfbpf_compile+0xb64>
    3164:	b	3ac8 <sfbpf_compile+0xb64>
    3168:	b	3ac8 <sfbpf_compile+0xb64>
    316c:	b	3ac8 <sfbpf_compile+0xb64>
    3170:	b	3ac8 <sfbpf_compile+0xb64>
    3174:	b	3ac8 <sfbpf_compile+0xb64>
    3178:	b	3ac8 <sfbpf_compile+0xb64>
    317c:	b	3ac8 <sfbpf_compile+0xb64>
    3180:	b	35c4 <sfbpf_compile+0x660>
    3184:	b	366c <sfbpf_compile+0x708>
    3188:	b	3ac8 <sfbpf_compile+0xb64>
    318c:	b	3ac8 <sfbpf_compile+0xb64>
    3190:	b	3ac8 <sfbpf_compile+0xb64>
    3194:	b	3ac8 <sfbpf_compile+0xb64>
    3198:	b	3ac8 <sfbpf_compile+0xb64>
    319c:	b	3ac8 <sfbpf_compile+0xb64>
    31a0:	b	3ac8 <sfbpf_compile+0xb64>
    31a4:	b	3ac8 <sfbpf_compile+0xb64>
    31a8:	b	3ac8 <sfbpf_compile+0xb64>
    31ac:	b	3ac8 <sfbpf_compile+0xb64>
    31b0:	b	3ac8 <sfbpf_compile+0xb64>
    31b4:	b	3ac8 <sfbpf_compile+0xb64>
    31b8:	b	3ac8 <sfbpf_compile+0xb64>
    31bc:	b	3ac8 <sfbpf_compile+0xb64>
    31c0:	b	3ac8 <sfbpf_compile+0xb64>
    31c4:	b	3ac8 <sfbpf_compile+0xb64>
    31c8:	b	3ac8 <sfbpf_compile+0xb64>
    31cc:	b	3ac8 <sfbpf_compile+0xb64>
    31d0:	b	3ac8 <sfbpf_compile+0xb64>
    31d4:	b	3ac8 <sfbpf_compile+0xb64>
    31d8:	b	3ac8 <sfbpf_compile+0xb64>
    31dc:	b	3ac8 <sfbpf_compile+0xb64>
    31e0:	b	3ac8 <sfbpf_compile+0xb64>
    31e4:	b	3ac8 <sfbpf_compile+0xb64>
    31e8:	b	3ac8 <sfbpf_compile+0xb64>
    31ec:	b	3ac8 <sfbpf_compile+0xb64>
    31f0:	b	3ac8 <sfbpf_compile+0xb64>
    31f4:	b	3ac8 <sfbpf_compile+0xb64>
    31f8:	b	3ac8 <sfbpf_compile+0xb64>
    31fc:	b	3ac8 <sfbpf_compile+0xb64>
    3200:	b	3ac8 <sfbpf_compile+0xb64>
    3204:	b	3ac8 <sfbpf_compile+0xb64>
    3208:	b	3ac8 <sfbpf_compile+0xb64>
    320c:	b	3ac8 <sfbpf_compile+0xb64>
    3210:	b	3ac8 <sfbpf_compile+0xb64>
    3214:	b	3ac8 <sfbpf_compile+0xb64>
    3218:	b	3ac8 <sfbpf_compile+0xb64>
    321c:	b	3ac8 <sfbpf_compile+0xb64>
    3220:	b	3ac8 <sfbpf_compile+0xb64>
    3224:	b	3ac8 <sfbpf_compile+0xb64>
    3228:	b	3ac8 <sfbpf_compile+0xb64>
    322c:	b	3ac8 <sfbpf_compile+0xb64>
    3230:	b	3ac8 <sfbpf_compile+0xb64>
    3234:	b	3ac8 <sfbpf_compile+0xb64>
    3238:	b	3ac8 <sfbpf_compile+0xb64>
    323c:	b	3ac8 <sfbpf_compile+0xb64>
    3240:	b	3ac8 <sfbpf_compile+0xb64>
    3244:	b	3680 <sfbpf_compile+0x71c>
    3248:	b	3ac8 <sfbpf_compile+0xb64>
    324c:	b	3ac8 <sfbpf_compile+0xb64>
    3250:	b	3ac8 <sfbpf_compile+0xb64>
    3254:	b	3ac8 <sfbpf_compile+0xb64>
    3258:	b	35c4 <sfbpf_compile+0x660>
    325c:	b	3694 <sfbpf_compile+0x730>
    3260:	b	3ac8 <sfbpf_compile+0xb64>
    3264:	b	36c0 <sfbpf_compile+0x75c>
    3268:	b	3488 <sfbpf_compile+0x524>
    326c:	b	36cc <sfbpf_compile+0x768>
    3270:	b	3ac8 <sfbpf_compile+0xb64>
    3274:	b	3ac8 <sfbpf_compile+0xb64>
    3278:	b	3ac8 <sfbpf_compile+0xb64>
    327c:	b	36dc <sfbpf_compile+0x778>
    3280:	b	36f0 <sfbpf_compile+0x78c>
    3284:	b	3ac8 <sfbpf_compile+0xb64>
    3288:	b	3ac8 <sfbpf_compile+0xb64>
    328c:	b	3ac8 <sfbpf_compile+0xb64>
    3290:	b	3ac8 <sfbpf_compile+0xb64>
    3294:	b	3694 <sfbpf_compile+0x730>
    3298:	b	3ac8 <sfbpf_compile+0xb64>
    329c:	b	3ac8 <sfbpf_compile+0xb64>
    32a0:	b	36fc <sfbpf_compile+0x798>
    32a4:	b	3724 <sfbpf_compile+0x7c0>
    32a8:	b	3ac8 <sfbpf_compile+0xb64>
    32ac:	b	3ac8 <sfbpf_compile+0xb64>
    32b0:	b	3ac8 <sfbpf_compile+0xb64>
    32b4:	b	3694 <sfbpf_compile+0x730>
    32b8:	b	3ac8 <sfbpf_compile+0xb64>
    32bc:	b	3774 <sfbpf_compile+0x810>
    32c0:	b	3784 <sfbpf_compile+0x820>
    32c4:	b	3784 <sfbpf_compile+0x820>
    32c8:	b	37ac <sfbpf_compile+0x848>
    32cc:	b	37d0 <sfbpf_compile+0x86c>
    32d0:	b	3784 <sfbpf_compile+0x820>
    32d4:	b	37fc <sfbpf_compile+0x898>
    32d8:	b	3824 <sfbpf_compile+0x8c0>
    32dc:	b	3834 <sfbpf_compile+0x8d0>
    32e0:	b	3848 <sfbpf_compile+0x8e4>
    32e4:	b	385c <sfbpf_compile+0x8f8>
    32e8:	b	38a0 <sfbpf_compile+0x93c>
    32ec:	b	3ac8 <sfbpf_compile+0xb64>
    32f0:	b	3ac8 <sfbpf_compile+0xb64>
    32f4:	b	38bc <sfbpf_compile+0x958>
    32f8:	b	38dc <sfbpf_compile+0x978>
    32fc:	b	3ac8 <sfbpf_compile+0xb64>
    3300:	b	3ac8 <sfbpf_compile+0xb64>
    3304:	b	3ac8 <sfbpf_compile+0xb64>
    3308:	b	3ac8 <sfbpf_compile+0xb64>
    330c:	b	3ac8 <sfbpf_compile+0xb64>
    3310:	b	3ac8 <sfbpf_compile+0xb64>
    3314:	b	3ac8 <sfbpf_compile+0xb64>
    3318:	b	3ac8 <sfbpf_compile+0xb64>
    331c:	b	3ac8 <sfbpf_compile+0xb64>
    3320:	b	3ac8 <sfbpf_compile+0xb64>
    3324:	b	3ac8 <sfbpf_compile+0xb64>
    3328:	b	3ac8 <sfbpf_compile+0xb64>
    332c:	b	3ac8 <sfbpf_compile+0xb64>
    3330:	b	3ac8 <sfbpf_compile+0xb64>
    3334:	b	3ac8 <sfbpf_compile+0xb64>
    3338:	b	3ac8 <sfbpf_compile+0xb64>
    333c:	b	3ac8 <sfbpf_compile+0xb64>
    3340:	b	3ac8 <sfbpf_compile+0xb64>
    3344:	b	3694 <sfbpf_compile+0x730>
    3348:	b	38e8 <sfbpf_compile+0x984>
    334c:	b	3ac8 <sfbpf_compile+0xb64>
    3350:	b	35c4 <sfbpf_compile+0x660>
    3354:	b	3910 <sfbpf_compile+0x9ac>
    3358:	b	393c <sfbpf_compile+0x9d8>
    335c:	b	3ac8 <sfbpf_compile+0xb64>
    3360:	b	3ac8 <sfbpf_compile+0xb64>
    3364:	b	3ac8 <sfbpf_compile+0xb64>
    3368:	b	3ac8 <sfbpf_compile+0xb64>
    336c:	b	3ac8 <sfbpf_compile+0xb64>
    3370:	b	3ac8 <sfbpf_compile+0xb64>
    3374:	b	3ac8 <sfbpf_compile+0xb64>
    3378:	b	3ac8 <sfbpf_compile+0xb64>
    337c:	b	3950 <sfbpf_compile+0x9ec>
    3380:	b	3910 <sfbpf_compile+0x9ac>
    3384:	b	3784 <sfbpf_compile+0x820>
    3388:	b	3784 <sfbpf_compile+0x820>
    338c:	b	3784 <sfbpf_compile+0x820>
    3390:	b	395c <sfbpf_compile+0x9f8>
    3394:	b	3980 <sfbpf_compile+0xa1c>
    3398:	b	3ac8 <sfbpf_compile+0xb64>
    339c:	b	3ac8 <sfbpf_compile+0xb64>
    33a0:	b	3990 <sfbpf_compile+0xa2c>
    33a4:	b	399c <sfbpf_compile+0xa38>
    33a8:	b	3ac8 <sfbpf_compile+0xb64>
    33ac:	b	39a8 <sfbpf_compile+0xa44>
    33b0:	b	39b4 <sfbpf_compile+0xa50>
    33b4:	b	39c0 <sfbpf_compile+0xa5c>
    33b8:	b	39cc <sfbpf_compile+0xa68>
    33bc:	b	39d8 <sfbpf_compile+0xa74>
    33c0:	b	39e4 <sfbpf_compile+0xa80>
    33c4:	b	39f4 <sfbpf_compile+0xa90>
    33c8:	b	3a00 <sfbpf_compile+0xa9c>
    33cc:	b	3a0c <sfbpf_compile+0xaa8>
    33d0:	b	3a28 <sfbpf_compile+0xac4>
    33d4:	b	3a34 <sfbpf_compile+0xad0>
    33d8:	b	3a40 <sfbpf_compile+0xadc>
    33dc:	b	3a50 <sfbpf_compile+0xaec>
    33e0:	b	3a5c <sfbpf_compile+0xaf8>
    33e4:	b	3ac8 <sfbpf_compile+0xb64>
    33e8:	b	3ac8 <sfbpf_compile+0xb64>
    33ec:	b	3ac8 <sfbpf_compile+0xb64>
    33f0:	b	3ac8 <sfbpf_compile+0xb64>
    33f4:	b	3ac8 <sfbpf_compile+0xb64>
    33f8:	b	3ac8 <sfbpf_compile+0xb64>
    33fc:	b	3ac8 <sfbpf_compile+0xb64>
    3400:	b	3ac8 <sfbpf_compile+0xb64>
    3404:	b	3ac8 <sfbpf_compile+0xb64>
    3408:	b	3ac8 <sfbpf_compile+0xb64>
    340c:	b	3ac8 <sfbpf_compile+0xb64>
    3410:	b	3ac8 <sfbpf_compile+0xb64>
    3414:	b	3a84 <sfbpf_compile+0xb20>
    3418:	b	3ac8 <sfbpf_compile+0xb64>
    341c:	b	3ac8 <sfbpf_compile+0xb64>
    3420:	b	3ac8 <sfbpf_compile+0xb64>
    3424:	b	3a90 <sfbpf_compile+0xb2c>
    3428:	b	3a9c <sfbpf_compile+0xb38>
    342c:	b	3ac8 <sfbpf_compile+0xb64>
    3430:	b	3ac8 <sfbpf_compile+0xb64>
    3434:	b	3ac8 <sfbpf_compile+0xb64>
    3438:	b	3ac8 <sfbpf_compile+0xb64>
    343c:	b	3ac8 <sfbpf_compile+0xb64>
    3440:	b	3aa8 <sfbpf_compile+0xb44>
    3444:	b	3abc <sfbpf_compile+0xb58>
    3448:	b	3624 <sfbpf_compile+0x6c0>
    344c:	b	3624 <sfbpf_compile+0x6c0>
    3450:	ldr	r0, [pc, #1808]	; 3b68 <sfbpf_compile+0xc04>
    3454:	add	r0, pc, r0
    3458:	b	3038 <sfbpf_compile+0xd4>
    345c:	ldr	lr, [pc, #1800]	; 3b6c <sfbpf_compile+0xc08>
    3460:	add	ip, r3, #132	; 0x84
    3464:	add	lr, pc, lr
    3468:	mvn	r4, #0
    346c:	ldm	lr!, {r0, r1, r2, r3}
    3470:	stmia	ip!, {r0, r1, r2, r3}
    3474:	ldm	lr!, {r0, r1, r2, r3}
    3478:	ldr	lr, [lr]
    347c:	stmia	ip!, {r0, r1, r2, r3}
    3480:	strb	lr, [ip]
    3484:	b	2ffc <sfbpf_compile+0x98>
    3488:	ldr	r3, [pc, #1760]	; 3b70 <sfbpf_compile+0xc0c>
    348c:	mov	r1, #4
    3490:	add	r3, pc, r3
    3494:	mov	r2, #0
    3498:	str	r1, [r3, #876]	; 0x36c
    349c:	str	r2, [r3, #952]	; 0x3b8
    34a0:	str	r2, [r3, #872]	; 0x368
    34a4:	str	r2, [r3, #880]	; 0x370
    34a8:	bl	f168 <sfbpf_parse>
    34ac:	ldr	r3, [pc, #1692]	; 3b50 <sfbpf_compile+0xbec>
    34b0:	ldr	r2, [sp]
    34b4:	ldr	r3, [r2, r3]
    34b8:	ldr	r4, [r3]
    34bc:	cmp	r4, #0
    34c0:	bne	3b3c <sfbpf_compile+0xbd8>
    34c4:	ldr	r5, [pc, #1704]	; 3b74 <sfbpf_compile+0xc10>
    34c8:	add	r5, pc, r5
    34cc:	ldr	r3, [r5, #884]	; 0x374
    34d0:	cmp	r3, #0
    34d4:	beq	3b18 <sfbpf_compile+0xbb4>
    34d8:	ldr	r3, [sp, #40]	; 0x28
    34dc:	cmp	r3, #0
    34e0:	beq	34fc <sfbpf_compile+0x598>
    34e4:	ldr	r3, [pc, #1632]	; 3b4c <sfbpf_compile+0xbe8>
    34e8:	ldr	r2, [sp]
    34ec:	ldr	r3, [r2, r3]
    34f0:	ldr	r3, [r3]
    34f4:	cmp	r3, #0
    34f8:	beq	3ad8 <sfbpf_compile+0xb74>
    34fc:	ldr	r3, [pc, #1652]	; 3b78 <sfbpf_compile+0xc14>
    3500:	add	r3, pc, r3
    3504:	ldr	r0, [r3, #884]	; 0x374
    3508:	add	r1, sp, #20
    350c:	bl	ee04 <sf_icode_to_fcode>
    3510:	ldr	r2, [sp, #12]
    3514:	ldr	r3, [sp, #20]
    3518:	str	r3, [r2]
    351c:	str	r0, [r2, #4]
    3520:	bl	12740 <sf_lex_cleanup>
    3524:	bl	2410 <freechunks>
    3528:	mov	r0, r4
    352c:	add	sp, sp, #24
    3530:	pop	{r4, r5, r6, pc}
    3534:	ldr	r3, [pc, #1600]	; 3b7c <sfbpf_compile+0xc18>
    3538:	mov	ip, #12
    353c:	add	r3, pc, r3
    3540:	mov	r0, #14
    3544:	mov	r1, #0
    3548:	mov	r2, #3
    354c:	str	ip, [r3, #952]	; 0x3b8
    3550:	str	r0, [r3, #876]	; 0x36c
    3554:	str	r1, [r3, #872]	; 0x368
    3558:	str	r2, [r3, #880]	; 0x370
    355c:	b	34a8 <sfbpf_compile+0x544>
    3560:	ldr	r3, [pc, #1560]	; 3b80 <sfbpf_compile+0xc1c>
    3564:	mov	r2, #14
    3568:	add	r3, pc, r3
    356c:	mov	r0, #8
    3570:	mov	r1, #3
    3574:	str	r0, [r3, #872]	; 0x368
    3578:	str	r1, [r3, #880]	; 0x370
    357c:	str	r2, [r3, #952]	; 0x3b8
    3580:	str	r2, [r3, #876]	; 0x36c
    3584:	b	34a8 <sfbpf_compile+0x544>
    3588:	ldr	r3, [pc, #1524]	; 3b84 <sfbpf_compile+0xc20>
    358c:	mov	r0, #2
    3590:	add	r3, pc, r3
    3594:	mov	r1, #6
    3598:	mov	r2, #0
    359c:	str	r0, [r3, #952]	; 0x3b8
    35a0:	str	r1, [r3, #876]	; 0x36c
    35a4:	str	r2, [r3, #872]	; 0x368
    35a8:	str	r2, [r3, #880]	; 0x370
    35ac:	b	34a8 <sfbpf_compile+0x544>
    35b0:	ldr	r3, [pc, #1488]	; 3b88 <sfbpf_compile+0xc24>
    35b4:	mvn	r0, #0
    35b8:	add	r3, pc, r3
    35bc:	mov	r1, #16
    35c0:	b	3598 <sfbpf_compile+0x634>
    35c4:	ldr	r3, [pc, #1472]	; 3b8c <sfbpf_compile+0xc28>
    35c8:	mov	r0, #2
    35cc:	add	r3, pc, r3
    35d0:	mov	r1, #4
    35d4:	b	3598 <sfbpf_compile+0x634>
    35d8:	ldr	r3, [pc, #1456]	; 3b90 <sfbpf_compile+0xc2c>
    35dc:	mov	r2, #13
    35e0:	add	r3, pc, r3
    35e4:	mov	r0, #8
    35e8:	mov	r1, #3
    35ec:	str	r0, [r3, #872]	; 0x368
    35f0:	str	r1, [r3, #880]	; 0x370
    35f4:	str	r2, [r3, #952]	; 0x3b8
    35f8:	str	r2, [r3, #876]	; 0x36c
    35fc:	b	34a8 <sfbpf_compile+0x544>
    3600:	ldr	r3, [pc, #1420]	; 3b94 <sfbpf_compile+0xc30>
    3604:	mov	r0, #0
    3608:	add	r3, pc, r3
    360c:	mov	r1, #8
    3610:	mov	r2, #3
    3614:	str	r0, [r3, #952]	; 0x3b8
    3618:	str	r1, [r3, #872]	; 0x368
    361c:	str	r2, [r3, #880]	; 0x370
    3620:	b	34a8 <sfbpf_compile+0x544>
    3624:	ldr	r3, [pc, #1388]	; 3b98 <sfbpf_compile+0xc34>
    3628:	add	r3, pc, r3
    362c:	mov	r2, #0
    3630:	mvn	r1, #0
    3634:	str	r1, [r3, #952]	; 0x3b8
    3638:	str	r2, [r3, #872]	; 0x368
    363c:	str	r2, [r3, #880]	; 0x370
    3640:	b	34a8 <sfbpf_compile+0x544>
    3644:	ldr	r3, [pc, #1360]	; 3b9c <sfbpf_compile+0xc38>
    3648:	mvn	r0, #0
    364c:	add	r3, pc, r3
    3650:	mov	r1, #24
    3654:	b	3598 <sfbpf_compile+0x634>
    3658:	ldr	r3, [pc, #1344]	; 3ba0 <sfbpf_compile+0xc3c>
    365c:	mov	r0, #5
    3660:	add	r3, pc, r3
    3664:	mov	r1, #24
    3668:	b	3598 <sfbpf_compile+0x634>
    366c:	ldr	r3, [pc, #1328]	; 3ba4 <sfbpf_compile+0xc40>
    3670:	mov	r0, #6
    3674:	add	r3, pc, r3
    3678:	mov	r1, #8
    367c:	b	3598 <sfbpf_compile+0x634>
    3680:	ldr	r3, [pc, #1312]	; 3ba8 <sfbpf_compile+0xc44>
    3684:	mov	r0, #6
    3688:	add	r3, pc, r3
    368c:	mov	r1, #44	; 0x2c
    3690:	b	3598 <sfbpf_compile+0x634>
    3694:	ldr	r3, [pc, #1296]	; 3bac <sfbpf_compile+0xc48>
    3698:	add	r3, pc, r3
    369c:	mov	ip, #24
    36a0:	mov	r0, #1
    36a4:	mov	r1, #8
    36a8:	mov	r2, #3
    36ac:	str	ip, [r3, #952]	; 0x3b8
    36b0:	str	r0, [r3, #864]	; 0x360
    36b4:	str	r1, [r3, #872]	; 0x368
    36b8:	str	r2, [r3, #880]	; 0x370
    36bc:	b	34a8 <sfbpf_compile+0x544>
    36c0:	ldr	r3, [pc, #1256]	; 3bb0 <sfbpf_compile+0xc4c>
    36c4:	add	r3, pc, r3
    36c8:	b	362c <sfbpf_compile+0x6c8>
    36cc:	ldr	r3, [pc, #1248]	; 3bb4 <sfbpf_compile+0xc50>
    36d0:	mov	r1, #12
    36d4:	add	r3, pc, r3
    36d8:	b	3494 <sfbpf_compile+0x530>
    36dc:	ldr	r3, [pc, #1236]	; 3bb8 <sfbpf_compile+0xc54>
    36e0:	mov	r0, #14
    36e4:	add	r3, pc, r3
    36e8:	mov	r1, #16
    36ec:	b	3598 <sfbpf_compile+0x634>
    36f0:	ldr	r3, [pc, #1220]	; 3bbc <sfbpf_compile+0xc58>
    36f4:	add	r3, pc, r3
    36f8:	b	362c <sfbpf_compile+0x6c8>
    36fc:	ldr	r3, [pc, #1212]	; 3bc0 <sfbpf_compile+0xc5c>
    3700:	mov	r2, #16
    3704:	add	r3, pc, r3
    3708:	mov	r0, #8
    370c:	mov	r1, #3
    3710:	str	r0, [r3, #872]	; 0x368
    3714:	str	r1, [r3, #880]	; 0x370
    3718:	str	r2, [r3, #952]	; 0x3b8
    371c:	str	r2, [r3, #876]	; 0x36c
    3720:	b	34a8 <sfbpf_compile+0x544>
    3724:	ldr	r3, [pc, #1176]	; 3bc4 <sfbpf_compile+0xc60>
    3728:	mov	r1, #2
    372c:	add	r3, pc, r3
    3730:	mov	r2, #0
    3734:	mvn	lr, #0
    3738:	mov	ip, #8
    373c:	mov	r0, #3
    3740:	str	r1, [r3, #916]	; 0x394
    3744:	str	r2, [r3, #920]	; 0x398
    3748:	mov	r1, #1
    374c:	mov	r2, #4
    3750:	str	lr, [r3, #900]	; 0x384
    3754:	str	ip, [r3, #872]	; 0x368
    3758:	str	r0, [r3, #880]	; 0x370
    375c:	str	r1, [r3, #904]	; 0x388
    3760:	str	r1, [r3, #912]	; 0x390
    3764:	str	r2, [r3, #924]	; 0x39c
    3768:	str	r2, [r3, #952]	; 0x3b8
    376c:	str	r2, [r3, #876]	; 0x36c
    3770:	b	34a8 <sfbpf_compile+0x544>
    3774:	ldr	r3, [pc, #1100]	; 3bc8 <sfbpf_compile+0xc64>
    3778:	mov	r0, #4
    377c:	add	r3, pc, r3
    3780:	b	3678 <sfbpf_compile+0x714>
    3784:	ldr	r3, [pc, #1088]	; 3bcc <sfbpf_compile+0xc68>
    3788:	mov	r0, #0
    378c:	add	r3, pc, r3
    3790:	mvn	r1, #0
    3794:	mov	r2, #4
    3798:	str	r0, [r3, #872]	; 0x368
    379c:	str	r1, [r3, #880]	; 0x370
    37a0:	str	r2, [r3, #952]	; 0x3b8
    37a4:	str	r2, [r3, #876]	; 0x36c
    37a8:	b	34a8 <sfbpf_compile+0x544>
    37ac:	ldr	r3, [pc, #1052]	; 3bd0 <sfbpf_compile+0xc6c>
    37b0:	mov	r1, #6
    37b4:	add	r3, pc, r3
    37b8:	mvn	r2, #0
    37bc:	str	r1, [r3, #952]	; 0x3b8
    37c0:	str	r2, [r3, #876]	; 0x36c
    37c4:	str	r2, [r3, #872]	; 0x368
    37c8:	str	r2, [r3, #880]	; 0x370
    37cc:	b	34a8 <sfbpf_compile+0x544>
    37d0:	ldr	r3, [pc, #1020]	; 3bd4 <sfbpf_compile+0xc70>
    37d4:	mov	ip, #6
    37d8:	add	r3, pc, r3
    37dc:	mov	r0, #12
    37e0:	mov	r1, #0
    37e4:	mvn	r2, #0
    37e8:	str	ip, [r3, #952]	; 0x3b8
    37ec:	str	r0, [r3, #876]	; 0x36c
    37f0:	str	r1, [r3, #872]	; 0x368
    37f4:	str	r2, [r3, #880]	; 0x370
    37f8:	b	34a8 <sfbpf_compile+0x544>
    37fc:	ldr	r3, [pc, #980]	; 3bd8 <sfbpf_compile+0xc74>
    3800:	mov	r2, #8
    3804:	add	r3, pc, r3
    3808:	mov	r0, #0
    380c:	mov	r1, #10
    3810:	str	r0, [r3, #872]	; 0x368
    3814:	str	r1, [r3, #880]	; 0x370
    3818:	str	r2, [r3, #952]	; 0x3b8
    381c:	str	r2, [r3, #876]	; 0x36c
    3820:	b	34a8 <sfbpf_compile+0x544>
    3824:	ldr	r3, [pc, #944]	; 3bdc <sfbpf_compile+0xc78>
    3828:	mov	r1, #12
    382c:	add	r3, pc, r3
    3830:	b	37b8 <sfbpf_compile+0x854>
    3834:	ldr	r3, [pc, #932]	; 3be0 <sfbpf_compile+0xc7c>
    3838:	mov	r0, #0
    383c:	add	r3, pc, r3
    3840:	mov	r1, #10
    3844:	b	3794 <sfbpf_compile+0x830>
    3848:	ldr	r3, [pc, #916]	; 3be4 <sfbpf_compile+0xc80>
    384c:	mov	r0, #16
    3850:	add	r3, pc, r3
    3854:	mov	r1, #18
    3858:	b	3598 <sfbpf_compile+0x634>
    385c:	ldr	r3, [pc, #900]	; 3be8 <sfbpf_compile+0xc84>
    3860:	mov	lr, #6
    3864:	add	r3, pc, r3
    3868:	mov	ip, #7
    386c:	mov	r0, #11
    3870:	mov	r1, #8
    3874:	mvn	r2, #0
    3878:	str	lr, [r3, #932]	; 0x3a4
    387c:	str	ip, [r3, #936]	; 0x3a8
    3880:	str	r0, [r3, #948]	; 0x3b4
    3884:	str	r1, [r3, #940]	; 0x3ac
    3888:	str	r1, [r3, #944]	; 0x3b0
    388c:	str	r2, [r3, #952]	; 0x3b8
    3890:	str	r2, [r3, #876]	; 0x36c
    3894:	str	r2, [r3, #872]	; 0x368
    3898:	str	r2, [r3, #880]	; 0x370
    389c:	b	34a8 <sfbpf_compile+0x544>
    38a0:	ldr	r3, [pc, #836]	; 3bec <sfbpf_compile+0xc88>
    38a4:	mov	lr, #2
    38a8:	add	r3, pc, r3
    38ac:	mov	ip, #3
    38b0:	mov	r0, #7
    38b4:	mov	r1, #4
    38b8:	b	3874 <sfbpf_compile+0x910>
    38bc:	ldr	r3, [pc, #812]	; 3bf0 <sfbpf_compile+0xc8c>
    38c0:	add	r3, pc, r3
    38c4:	mvn	r2, #0
    38c8:	str	r2, [r3, #952]	; 0x3b8
    38cc:	str	r2, [r3, #876]	; 0x36c
    38d0:	str	r2, [r3, #872]	; 0x368
    38d4:	str	r2, [r3, #880]	; 0x370
    38d8:	b	34a8 <sfbpf_compile+0x544>
    38dc:	ldr	r3, [pc, #784]	; 3bf4 <sfbpf_compile+0xc90>
    38e0:	add	r3, pc, r3
    38e4:	b	38c4 <sfbpf_compile+0x960>
    38e8:	ldr	r3, [pc, #776]	; 3bf8 <sfbpf_compile+0xc94>
    38ec:	mov	r2, #12
    38f0:	add	r3, pc, r3
    38f4:	mov	r0, #0
    38f8:	mvn	r1, #0
    38fc:	str	r0, [r3, #872]	; 0x368
    3900:	str	r1, [r3, #880]	; 0x370
    3904:	str	r2, [r3, #952]	; 0x3b8
    3908:	str	r2, [r3, #876]	; 0x36c
    390c:	b	34a8 <sfbpf_compile+0x544>
    3910:	ldr	r3, [pc, #740]	; 3bfc <sfbpf_compile+0xc98>
    3914:	mov	ip, #14
    3918:	add	r3, pc, r3
    391c:	mov	r0, #16
    3920:	mov	r1, #18
    3924:	mov	r2, #21
    3928:	str	ip, [r3, #876]	; 0x36c
    392c:	str	r0, [r3, #952]	; 0x3b8
    3930:	str	r1, [r3, #872]	; 0x368
    3934:	str	r2, [r3, #880]	; 0x370
    3938:	b	34a8 <sfbpf_compile+0x544>
    393c:	ldr	r3, [pc, #700]	; 3c00 <sfbpf_compile+0xc9c>
    3940:	mov	ip, #4
    3944:	add	r3, pc, r3
    3948:	mov	r0, #6
    394c:	b	37e0 <sfbpf_compile+0x87c>
    3950:	ldr	r3, [pc, #684]	; 3c04 <sfbpf_compile+0xca0>
    3954:	add	r3, pc, r3
    3958:	b	38c4 <sfbpf_compile+0x960>
    395c:	ldr	r3, [pc, #676]	; 3c08 <sfbpf_compile+0xca4>
    3960:	mvn	r0, #0
    3964:	add	r3, pc, r3
    3968:	mov	r1, #4
    396c:	mov	r2, #0
    3970:	str	r0, [r3, #952]	; 0x3b8
    3974:	str	r1, [r3, #872]	; 0x368
    3978:	str	r2, [r3, #880]	; 0x370
    397c:	b	34a8 <sfbpf_compile+0x544>
    3980:	ldr	r3, [pc, #644]	; 3c0c <sfbpf_compile+0xca8>
    3984:	mov	r1, #18
    3988:	add	r3, pc, r3
    398c:	b	37b8 <sfbpf_compile+0x854>
    3990:	ldr	r3, [pc, #632]	; 3c10 <sfbpf_compile+0xcac>
    3994:	add	r3, pc, r3
    3998:	b	38c4 <sfbpf_compile+0x960>
    399c:	ldr	r3, [pc, #624]	; 3c14 <sfbpf_compile+0xcb0>
    39a0:	add	r3, pc, r3
    39a4:	b	38c4 <sfbpf_compile+0x960>
    39a8:	ldr	r3, [pc, #616]	; 3c18 <sfbpf_compile+0xcb4>
    39ac:	add	r3, pc, r3
    39b0:	b	38c4 <sfbpf_compile+0x960>
    39b4:	ldr	r3, [pc, #608]	; 3c1c <sfbpf_compile+0xcb8>
    39b8:	add	r3, pc, r3
    39bc:	b	38c4 <sfbpf_compile+0x960>
    39c0:	ldr	r3, [pc, #600]	; 3c20 <sfbpf_compile+0xcbc>
    39c4:	add	r3, pc, r3
    39c8:	b	38c4 <sfbpf_compile+0x960>
    39cc:	ldr	r3, [pc, #592]	; 3c24 <sfbpf_compile+0xcc0>
    39d0:	add	r3, pc, r3
    39d4:	b	369c <sfbpf_compile+0x738>
    39d8:	ldr	r3, [pc, #584]	; 3c28 <sfbpf_compile+0xcc4>
    39dc:	add	r3, pc, r3
    39e0:	b	38c4 <sfbpf_compile+0x960>
    39e4:	ldr	r3, [pc, #576]	; 3c2c <sfbpf_compile+0xcc8>
    39e8:	mov	r1, #8
    39ec:	add	r3, pc, r3
    39f0:	b	37b8 <sfbpf_compile+0x854>
    39f4:	ldr	r3, [pc, #564]	; 3c30 <sfbpf_compile+0xccc>
    39f8:	add	r3, pc, r3
    39fc:	b	38c4 <sfbpf_compile+0x960>
    3a00:	ldr	r3, [pc, #556]	; 3c34 <sfbpf_compile+0xcd0>
    3a04:	add	r3, pc, r3
    3a08:	b	38c4 <sfbpf_compile+0x960>
    3a0c:	ldr	r3, [pc, #548]	; 3c38 <sfbpf_compile+0xcd4>
    3a10:	mov	lr, #22
    3a14:	add	r3, pc, r3
    3a18:	mov	ip, #23
    3a1c:	mov	r0, #27
    3a20:	mov	r1, #24
    3a24:	b	3874 <sfbpf_compile+0x910>
    3a28:	ldr	r3, [pc, #524]	; 3c3c <sfbpf_compile+0xcd8>
    3a2c:	add	r3, pc, r3
    3a30:	b	38c4 <sfbpf_compile+0x960>
    3a34:	ldr	r3, [pc, #516]	; 3c40 <sfbpf_compile+0xcdc>
    3a38:	add	r3, pc, r3
    3a3c:	b	38c4 <sfbpf_compile+0x960>
    3a40:	ldr	r3, [pc, #508]	; 3c44 <sfbpf_compile+0xce0>
    3a44:	mov	r1, #18
    3a48:	add	r3, pc, r3
    3a4c:	b	37b8 <sfbpf_compile+0x854>
    3a50:	ldr	r3, [pc, #496]	; 3c48 <sfbpf_compile+0xce4>
    3a54:	add	r3, pc, r3
    3a58:	b	38c4 <sfbpf_compile+0x960>
    3a5c:	ldr	r3, [pc, #488]	; 3c4c <sfbpf_compile+0xce8>
    3a60:	mvn	r2, #0
    3a64:	add	r3, pc, r3
    3a68:	mov	r1, #1
    3a6c:	str	r1, [r3, #900]	; 0x384
    3a70:	str	r2, [r3, #952]	; 0x3b8
    3a74:	str	r2, [r3, #876]	; 0x36c
    3a78:	str	r2, [r3, #872]	; 0x368
    3a7c:	str	r2, [r3, #880]	; 0x370
    3a80:	b	34a8 <sfbpf_compile+0x544>
    3a84:	ldr	r3, [pc, #452]	; 3c50 <sfbpf_compile+0xcec>
    3a88:	add	r3, pc, r3
    3a8c:	b	38c4 <sfbpf_compile+0x960>
    3a90:	ldr	r3, [pc, #444]	; 3c54 <sfbpf_compile+0xcf0>
    3a94:	add	r3, pc, r3
    3a98:	b	38c4 <sfbpf_compile+0x960>
    3a9c:	ldr	r3, [pc, #436]	; 3c58 <sfbpf_compile+0xcf4>
    3aa0:	add	r3, pc, r3
    3aa4:	b	38c4 <sfbpf_compile+0x960>
    3aa8:	ldr	r3, [pc, #428]	; 3c5c <sfbpf_compile+0xcf8>
    3aac:	mov	ip, #1
    3ab0:	add	r3, pc, r3
    3ab4:	mov	r0, #24
    3ab8:	b	37e0 <sfbpf_compile+0x87c>
    3abc:	ldr	r3, [pc, #412]	; 3c60 <sfbpf_compile+0xcfc>
    3ac0:	add	r3, pc, r3
    3ac4:	b	38c4 <sfbpf_compile+0x960>
    3ac8:	ldr	r0, [pc, #404]	; 3c64 <sfbpf_compile+0xd00>
    3acc:	ldr	r1, [sp, #8]
    3ad0:	add	r0, pc, r0
    3ad4:	bl	2454 <sf_bpf_error>
    3ad8:	ldr	r5, [pc, #392]	; 3c68 <sfbpf_compile+0xd04>
    3adc:	add	r5, pc, r5
    3ae0:	add	r0, r5, #884	; 0x374
    3ae4:	bl	e760 <sf_bpf_optimize>
    3ae8:	ldr	r0, [r5, #884]	; 0x374
    3aec:	cmp	r0, #0
    3af0:	beq	3b0c <sfbpf_compile+0xba8>
    3af4:	ldr	r3, [r0, #8]
    3af8:	cmp	r3, #6
    3afc:	bne	3508 <sfbpf_compile+0x5a4>
    3b00:	ldr	r3, [r0, #20]
    3b04:	cmp	r3, #0
    3b08:	bne	3508 <sfbpf_compile+0x5a4>
    3b0c:	ldr	r0, [pc, #344]	; 3c6c <sfbpf_compile+0xd08>
    3b10:	add	r0, pc, r0
    3b14:	bl	2454 <sf_bpf_error>
    3b18:	mov	r0, #208	; 0xd0
    3b1c:	ldr	r6, [r5, #896]	; 0x380
    3b20:	bl	2494 <newchunk>
    3b24:	mov	r3, #6
    3b28:	str	r0, [r0, #96]	; 0x60
    3b2c:	str	r6, [r0, #20]
    3b30:	str	r0, [r5, #884]	; 0x374
    3b34:	str	r3, [r0, #8]
    3b38:	b	34d8 <sfbpf_compile+0x574>
    3b3c:	ldr	r0, [pc, #300]	; 3c70 <sfbpf_compile+0xd0c>
    3b40:	add	r0, pc, r0
    3b44:	bl	2454 <sf_bpf_error>
    3b48:	.word	0x0002d08c
    3b4c:	.word	0x00000104
    3b50:	.word	0x000000d8
    3b54:	.word	0x0002d3cc
    3b58:	.word	0x0002d394
    3b5c:	.word	0x0002d358
    3b60:	.word	0x0002d324
    3b64:	.word	0x0002d230
    3b68:	.word	0x0000f670
    3b6c:	.word	0x0000f828
    3b70:	.word	0x0002ced8
    3b74:	.word	0x0002cea0
    3b78:	.word	0x0002ce68
    3b7c:	.word	0x0002ce2c
    3b80:	.word	0x0002ce00
    3b84:	.word	0x0002cdd8
    3b88:	.word	0x0002cdb0
    3b8c:	.word	0x0002cd9c
    3b90:	.word	0x0002cd88
    3b94:	.word	0x0002cd60
    3b98:	.word	0x0002cd40
    3b9c:	.word	0x0002cd1c
    3ba0:	.word	0x0002cd08
    3ba4:	.word	0x0002ccf4
    3ba8:	.word	0x0002cce0
    3bac:	.word	0x0002ccd0
    3bb0:	.word	0x0002cca4
    3bb4:	.word	0x0002cc94
    3bb8:	.word	0x0002cc84
    3bbc:	.word	0x0002cc74
    3bc0:	.word	0x0002cc64
    3bc4:	.word	0x0002cc3c
    3bc8:	.word	0x0002cbec
    3bcc:	.word	0x0002cbdc
    3bd0:	.word	0x0002cbb4
    3bd4:	.word	0x0002cb90
    3bd8:	.word	0x0002cb64
    3bdc:	.word	0x0002cb3c
    3be0:	.word	0x0002cb2c
    3be4:	.word	0x0002cb18
    3be8:	.word	0x0002cb04
    3bec:	.word	0x0002cac0
    3bf0:	.word	0x0002caa8
    3bf4:	.word	0x0002ca88
    3bf8:	.word	0x0002ca78
    3bfc:	.word	0x0002ca50
    3c00:	.word	0x0002ca24
    3c04:	.word	0x0002ca14
    3c08:	.word	0x0002ca04
    3c0c:	.word	0x0002c9e0
    3c10:	.word	0x0002c9d4
    3c14:	.word	0x0002c9c8
    3c18:	.word	0x0002c9bc
    3c1c:	.word	0x0002c9b0
    3c20:	.word	0x0002c9a4
    3c24:	.word	0x0002c998
    3c28:	.word	0x0002c98c
    3c2c:	.word	0x0002c97c
    3c30:	.word	0x0002c970
    3c34:	.word	0x0002c964
    3c38:	.word	0x0002c954
    3c3c:	.word	0x0002c93c
    3c40:	.word	0x0002c930
    3c44:	.word	0x0002c920
    3c48:	.word	0x0002c914
    3c4c:	.word	0x0002c904
    3c50:	.word	0x0002c8e0
    3c54:	.word	0x0002c8d4
    3c58:	.word	0x0002c8c8
    3c5c:	.word	0x0002c8b8
    3c60:	.word	0x0002c8a8
    3c64:	.word	0x0000f1e0
    3c68:	.word	0x0002c88c
    3c6c:	.word	0x0000f1e0
    3c70:	.word	0x0000f18c

00003c74 <sfbpf_freecode>:
    3c74:	push	{r4, r5, r6, lr}
    3c78:	mov	r5, #0
    3c7c:	ldr	r3, [r0, #4]
    3c80:	str	r5, [r0]
    3c84:	cmp	r3, r5
    3c88:	popeq	{r4, r5, r6, pc}
    3c8c:	mov	r4, r0
    3c90:	mov	r0, r3
    3c94:	bl	da4 <free@plt>
    3c98:	str	r5, [r4, #4]
    3c9c:	pop	{r4, r5, r6, pc}

00003ca0 <sf_gen_and>:
    3ca0:	cmp	r0, #0
    3ca4:	ldr	ip, [r1, #96]	; 0x60
    3ca8:	movne	r3, r0
    3cac:	beq	3cd4 <sf_gen_and+0x34>
    3cb0:	ldr	r2, [r3, #44]	; 0x2c
    3cb4:	cmp	r2, #0
    3cb8:	ldreq	r2, [r3, #60]	; 0x3c
    3cbc:	ldrne	r2, [r3, #84]	; 0x54
    3cc0:	streq	ip, [r3, #60]	; 0x3c
    3cc4:	strne	ip, [r3, #84]	; 0x54
    3cc8:	cmp	r2, #0
    3ccc:	mov	r3, r2
    3cd0:	bne	3cb0 <sf_gen_and+0x10>
    3cd4:	ldr	r3, [r0, #44]	; 0x2c
    3cd8:	clz	r3, r3
    3cdc:	lsr	r3, r3, #5
    3ce0:	str	r3, [r0, #44]	; 0x2c
    3ce4:	ldr	r3, [r1, #44]	; 0x2c
    3ce8:	clz	r3, r3
    3cec:	lsr	r3, r3, #5
    3cf0:	str	r3, [r1, #44]	; 0x2c
    3cf4:	mov	r3, r1
    3cf8:	ldr	ip, [r3, #44]	; 0x2c
    3cfc:	add	r2, r3, #84	; 0x54
    3d00:	cmp	ip, #0
    3d04:	addeq	r2, r3, #60	; 0x3c
    3d08:	ldr	r3, [r2]
    3d0c:	cmp	r3, #0
    3d10:	bne	3cf8 <sf_gen_and+0x58>
    3d14:	str	r0, [r2]
    3d18:	ldr	r3, [r1, #44]	; 0x2c
    3d1c:	clz	r3, r3
    3d20:	lsr	r3, r3, #5
    3d24:	str	r3, [r1, #44]	; 0x2c
    3d28:	ldr	r3, [r0, #96]	; 0x60
    3d2c:	str	r3, [r1, #96]	; 0x60
    3d30:	bx	lr

00003d34 <sf_finish_parse>:
    3d34:	ldr	r3, [pc, #2344]	; 4664 <sf_finish_parse+0x930>
    3d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3d3c:	add	r3, pc, r3
    3d40:	ldr	sl, [pc, #2336]	; 4668 <sf_finish_parse+0x934>
    3d44:	ldr	r7, [r3, #856]	; 0x358
    3d48:	sub	sp, sp, #12
    3d4c:	cmp	r7, #127	; 0x7f
    3d50:	mov	r5, r0
    3d54:	add	sl, pc, sl
    3d58:	ldr	r8, [r0, #96]	; 0x60
    3d5c:	beq	4360 <sf_finish_parse+0x62c>
    3d60:	ble	418c <sf_finish_parse+0x458>
    3d64:	cmp	r7, #163	; 0xa3
    3d68:	beq	40f0 <sf_finish_parse+0x3bc>
    3d6c:	cmp	r7, #192	; 0xc0
    3d70:	bne	436c <sf_finish_parse+0x638>
    3d74:	bl	2584 <gen_load_ppi_llprefixlen>
    3d78:	mov	r4, r0
    3d7c:	ldr	r3, [pc, #2280]	; 466c <sf_finish_parse+0x938>
    3d80:	add	r3, pc, r3
    3d84:	ldr	r9, [r3, #868]	; 0x364
    3d88:	cmn	r9, #1
    3d8c:	beq	4354 <sf_finish_parse+0x620>
    3d90:	ldr	r3, [pc, #2264]	; 4670 <sf_finish_parse+0x93c>
    3d94:	mov	r6, #1
    3d98:	cmp	r4, #0
    3d9c:	ldr	r3, [sl, r3]
    3da0:	ldr	sl, [r8, #4]
    3da4:	str	r6, [r3]
    3da8:	beq	4640 <sf_finish_parse+0x90c>
    3dac:	mov	r0, #20
    3db0:	bl	2494 <newchunk>
    3db4:	mov	r3, #135	; 0x87
    3db8:	mov	r2, r4
    3dbc:	str	r3, [r0]
    3dc0:	b	3dc8 <sf_finish_parse+0x94>
    3dc4:	mov	r2, r3
    3dc8:	ldr	r3, [r2, #16]
    3dcc:	cmp	r3, #0
    3dd0:	bne	3dc4 <sf_finish_parse+0x90>
    3dd4:	str	r0, [r2, #16]
    3dd8:	mov	r0, #20
    3ddc:	bl	2494 <newchunk>
    3de0:	mov	r2, #4
    3de4:	mov	r3, #24
    3de8:	str	r2, [r0]
    3dec:	str	r3, [r0, #12]
    3df0:	mov	r2, r4
    3df4:	b	3dfc <sf_finish_parse+0xc8>
    3df8:	mov	r2, r3
    3dfc:	ldr	r3, [r2, #16]
    3e00:	cmp	r3, #0
    3e04:	bne	3df8 <sf_finish_parse+0xc4>
    3e08:	str	r0, [r2, #16]
    3e0c:	mov	r0, #20
    3e10:	bl	2494 <newchunk>
    3e14:	mov	r3, #2
    3e18:	str	r3, [r0]
    3e1c:	str	r9, [r0, #12]
    3e20:	mov	r3, r4
    3e24:	b	3e2c <sf_finish_parse+0xf8>
    3e28:	mov	r3, r6
    3e2c:	ldr	r6, [r3, #16]
    3e30:	cmp	r6, #0
    3e34:	bne	3e28 <sf_finish_parse+0xf4>
    3e38:	str	r0, [r3, #16]
    3e3c:	mov	r0, #20
    3e40:	bl	2494 <newchunk>
    3e44:	mov	r3, #80	; 0x50
    3e48:	mov	r2, r4
    3e4c:	str	r6, [r0, #12]
    3e50:	str	r3, [r0]
    3e54:	b	3e5c <sf_finish_parse+0x128>
    3e58:	mov	r2, r3
    3e5c:	ldr	r3, [r2, #16]
    3e60:	cmp	r3, #0
    3e64:	bne	3e58 <sf_finish_parse+0x124>
    3e68:	str	r0, [r2, #16]
    3e6c:	mov	r0, #20
    3e70:	bl	2494 <newchunk>
    3e74:	mov	r2, #69	; 0x45
    3e78:	mov	r3, #8
    3e7c:	str	r2, [r0]
    3e80:	mov	r6, r0
    3e84:	str	r3, [r0, #12]
    3e88:	mov	r2, r4
    3e8c:	b	3e94 <sf_finish_parse+0x160>
    3e90:	mov	r2, r3
    3e94:	ldr	r3, [r2, #16]
    3e98:	cmp	r3, #0
    3e9c:	bne	3e90 <sf_finish_parse+0x15c>
    3ea0:	str	r6, [r2, #16]
    3ea4:	mov	r0, #20
    3ea8:	bl	2494 <newchunk>
    3eac:	mov	r2, #69	; 0x45
    3eb0:	mov	r3, #4
    3eb4:	str	r2, [r0]
    3eb8:	mov	fp, r0
    3ebc:	str	r0, [r6, #4]
    3ec0:	mov	r2, r4
    3ec4:	str	r3, [r0, #12]
    3ec8:	b	3ed0 <sf_finish_parse+0x19c>
    3ecc:	mov	r2, r3
    3ed0:	ldr	r3, [r2, #16]
    3ed4:	cmp	r3, #0
    3ed8:	bne	3ecc <sf_finish_parse+0x198>
    3edc:	str	fp, [r2, #16]
    3ee0:	mov	r0, #20
    3ee4:	str	sl, [r6, #8]
    3ee8:	str	sl, [fp, #4]
    3eec:	bl	2494 <newchunk>
    3ef0:	mov	r2, #69	; 0x45
    3ef4:	mov	r3, #128	; 0x80
    3ef8:	str	r2, [r0]
    3efc:	mov	r6, r0
    3f00:	str	r0, [fp, #8]
    3f04:	mov	r2, r4
    3f08:	str	r3, [r0, #12]
    3f0c:	b	3f14 <sf_finish_parse+0x1e0>
    3f10:	mov	r2, r3
    3f14:	ldr	r3, [r2, #16]
    3f18:	cmp	r3, #0
    3f1c:	bne	3f10 <sf_finish_parse+0x1dc>
    3f20:	str	r6, [r2, #16]
    3f24:	mov	r0, #20
    3f28:	bl	2494 <newchunk>
    3f2c:	mov	r3, #96	; 0x60
    3f30:	mov	r2, r4
    3f34:	str	r3, [r0]
    3f38:	str	r0, [r6, #4]
    3f3c:	str	r9, [r0, #12]
    3f40:	b	3f48 <sf_finish_parse+0x214>
    3f44:	mov	r2, r3
    3f48:	ldr	r3, [r2, #16]
    3f4c:	cmp	r3, #0
    3f50:	bne	3f44 <sf_finish_parse+0x210>
    3f54:	str	r0, [r2, #16]
    3f58:	mov	r0, #20
    3f5c:	bl	2494 <newchunk>
    3f60:	mov	r2, #4
    3f64:	mov	r3, #2
    3f68:	str	r2, [r0]
    3f6c:	str	r3, [r0, #12]
    3f70:	mov	r2, r4
    3f74:	b	3f7c <sf_finish_parse+0x248>
    3f78:	mov	r2, r3
    3f7c:	ldr	r3, [r2, #16]
    3f80:	cmp	r3, #0
    3f84:	bne	3f78 <sf_finish_parse+0x244>
    3f88:	str	r0, [r2, #16]
    3f8c:	mov	r0, #20
    3f90:	bl	2494 <newchunk>
    3f94:	mov	r3, #2
    3f98:	mov	r2, r4
    3f9c:	str	r9, [r0, #12]
    3fa0:	str	r3, [r0]
    3fa4:	b	3fac <sf_finish_parse+0x278>
    3fa8:	mov	r2, r3
    3fac:	ldr	r3, [r2, #16]
    3fb0:	cmp	r3, #0
    3fb4:	bne	3fa8 <sf_finish_parse+0x274>
    3fb8:	cmp	r7, #127	; 0x7f
    3fbc:	str	r0, [r2, #16]
    3fc0:	strne	sl, [r6, #8]
    3fc4:	beq	43c0 <sf_finish_parse+0x68c>
    3fc8:	ldr	r1, [r8, #4]
    3fcc:	mov	r2, r4
    3fd0:	b	3fd8 <sf_finish_parse+0x2a4>
    3fd4:	mov	r2, r3
    3fd8:	ldr	r3, [r2, #16]
    3fdc:	cmp	r3, #0
    3fe0:	bne	3fd4 <sf_finish_parse+0x2a0>
    3fe4:	str	r1, [r2, #16]
    3fe8:	str	r4, [r8, #4]
    3fec:	cmp	r7, #192	; 0xc0
    3ff0:	bne	403c <sf_finish_parse+0x308>
    3ff4:	mov	r0, #20
    3ff8:	bl	2494 <newchunk>
    3ffc:	mov	r2, #32
    4000:	mov	r3, #4
    4004:	str	r2, [r0]
    4008:	str	r3, [r0, #12]
    400c:	mov	r4, r0
    4010:	mov	r0, #208	; 0xd0
    4014:	bl	2494 <newchunk>
    4018:	mov	r1, #21
    401c:	mov	r2, #1761607680	; 0x69000000
    4020:	mov	r3, r0
    4024:	str	r4, [r0, #4]
    4028:	str	r0, [r3, #96]	; 0x60
    402c:	str	r1, [r0, #8]
    4030:	str	r2, [r0, #20]
    4034:	mov	r1, r5
    4038:	bl	3ca0 <sf_gen_and>
    403c:	ldr	r3, [pc, #1584]	; 4674 <sf_finish_parse+0x940>
    4040:	mov	r0, #208	; 0xd0
    4044:	add	r3, pc, r3
    4048:	mov	r4, r5
    404c:	ldr	r6, [r3, #896]	; 0x380
    4050:	bl	2494 <newchunk>
    4054:	mov	r3, #6
    4058:	str	r6, [r0, #20]
    405c:	str	r0, [r0, #96]	; 0x60
    4060:	str	r3, [r0, #8]
    4064:	ldr	r3, [r4, #44]	; 0x2c
    4068:	cmp	r3, #0
    406c:	ldreq	r3, [r4, #60]	; 0x3c
    4070:	ldrne	r3, [r4, #84]	; 0x54
    4074:	streq	r0, [r4, #60]	; 0x3c
    4078:	strne	r0, [r4, #84]	; 0x54
    407c:	cmp	r3, #0
    4080:	mov	r4, r3
    4084:	bne	4064 <sf_finish_parse+0x330>
    4088:	ldr	r3, [r5, #44]	; 0x2c
    408c:	clz	r3, r3
    4090:	lsr	r3, r3, #5
    4094:	str	r3, [r5, #44]	; 0x2c
    4098:	mov	r0, #208	; 0xd0
    409c:	bl	2494 <newchunk>
    40a0:	mov	r3, r5
    40a4:	mov	r2, #6
    40a8:	str	r0, [r0, #96]	; 0x60
    40ac:	str	r4, [r0, #20]
    40b0:	str	r2, [r0, #8]
    40b4:	ldr	r2, [r3, #44]	; 0x2c
    40b8:	cmp	r2, #0
    40bc:	ldreq	r2, [r3, #60]	; 0x3c
    40c0:	ldrne	r2, [r3, #84]	; 0x54
    40c4:	streq	r0, [r3, #60]	; 0x3c
    40c8:	strne	r0, [r3, #84]	; 0x54
    40cc:	cmp	r2, #0
    40d0:	mov	r3, r2
    40d4:	bne	40b4 <sf_finish_parse+0x380>
    40d8:	ldr	r3, [pc, #1432]	; 4678 <sf_finish_parse+0x944>
    40dc:	ldr	r2, [r5, #96]	; 0x60
    40e0:	add	r3, pc, r3
    40e4:	str	r2, [r3, #884]	; 0x374
    40e8:	add	sp, sp, #12
    40ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    40f0:	ldr	r6, [r3, #784]	; 0x310
    40f4:	cmn	r6, #1
    40f8:	beq	43b8 <sf_finish_parse+0x684>
    40fc:	mov	r0, #20
    4100:	bl	2494 <newchunk>
    4104:	mov	r2, #32
    4108:	mov	r3, #4
    410c:	str	r2, [r0]
    4110:	str	r3, [r0, #12]
    4114:	mov	r4, r0
    4118:	mov	r0, #20
    411c:	bl	2494 <newchunk>
    4120:	mov	r3, #2
    4124:	mov	r2, r4
    4128:	str	r6, [r0, #12]
    412c:	str	r3, [r0]
    4130:	b	4138 <sf_finish_parse+0x404>
    4134:	mov	r2, r3
    4138:	ldr	r3, [r2, #16]
    413c:	cmp	r3, #0
    4140:	bne	4134 <sf_finish_parse+0x400>
    4144:	str	r0, [r2, #16]
    4148:	mov	r0, #20
    414c:	bl	2494 <newchunk>
    4150:	mov	r3, #7
    4154:	mov	r2, r4
    4158:	str	r3, [r0]
    415c:	b	4164 <sf_finish_parse+0x430>
    4160:	mov	r2, r3
    4164:	ldr	r3, [r2, #16]
    4168:	cmp	r3, #0
    416c:	bne	4160 <sf_finish_parse+0x42c>
    4170:	ldr	r3, [pc, #1284]	; 467c <sf_finish_parse+0x948>
    4174:	str	r0, [r2, #16]
    4178:	add	r3, pc, r3
    417c:	ldr	r9, [r3, #868]	; 0x364
    4180:	cmn	r9, #1
    4184:	bne	3d90 <sf_finish_parse+0x5c>
    4188:	b	3fc8 <sf_finish_parse+0x294>
    418c:	cmp	r7, #119	; 0x77
    4190:	bne	436c <sf_finish_parse+0x638>
    4194:	ldr	r2, [pc, #1236]	; 4670 <sf_finish_parse+0x93c>
    4198:	ldr	r3, [r3, #784]	; 0x310
    419c:	mov	r1, #1
    41a0:	mov	r0, r3
    41a4:	str	r3, [sp, #4]
    41a8:	ldr	r3, [sl, r2]
    41ac:	cmn	r0, #1
    41b0:	str	r1, [r3]
    41b4:	beq	43b8 <sf_finish_parse+0x684>
    41b8:	mov	r0, #20
    41bc:	bl	2494 <newchunk>
    41c0:	mov	r2, #32
    41c4:	mov	r3, #0
    41c8:	str	r2, [r0]
    41cc:	str	r3, [r0, #12]
    41d0:	mov	r4, r0
    41d4:	mov	r0, #20
    41d8:	bl	2494 <newchunk>
    41dc:	ldr	r3, [pc, #1180]	; 4680 <sf_finish_parse+0x94c>
    41e0:	mov	r2, #84	; 0x54
    41e4:	str	r2, [r0]
    41e8:	str	r3, [r0, #12]
    41ec:	mov	r2, r4
    41f0:	b	41f8 <sf_finish_parse+0x4c4>
    41f4:	mov	r2, r3
    41f8:	ldr	r3, [r2, #16]
    41fc:	cmp	r3, #0
    4200:	bne	41f4 <sf_finish_parse+0x4c0>
    4204:	str	r0, [r2, #16]
    4208:	mov	r0, #20
    420c:	bl	2494 <newchunk>
    4210:	ldr	r3, [pc, #1132]	; 4684 <sf_finish_parse+0x950>
    4214:	mov	r2, #21
    4218:	str	r2, [r0]
    421c:	mov	fp, r0
    4220:	str	r3, [r0, #12]
    4224:	mov	r2, r4
    4228:	b	4230 <sf_finish_parse+0x4fc>
    422c:	mov	r2, r3
    4230:	ldr	r3, [r2, #16]
    4234:	cmp	r3, #0
    4238:	bne	422c <sf_finish_parse+0x4f8>
    423c:	str	fp, [r2, #16]
    4240:	mov	r0, #20
    4244:	bl	2494 <newchunk>
    4248:	mov	r2, #32
    424c:	mov	r3, #4
    4250:	str	r2, [r0]
    4254:	mov	r1, r0
    4258:	str	r3, [r0, #12]
    425c:	mov	r2, r4
    4260:	b	4268 <sf_finish_parse+0x534>
    4264:	mov	r2, r3
    4268:	ldr	r3, [r2, #16]
    426c:	cmp	r3, #0
    4270:	bne	4264 <sf_finish_parse+0x530>
    4274:	str	r1, [r2, #16]
    4278:	mov	r0, #20
    427c:	str	r1, [fp, #4]
    4280:	bl	2494 <newchunk>
    4284:	mov	r3, #1
    4288:	mov	r1, #5
    428c:	str	r3, [r0, #12]
    4290:	mov	r9, r0
    4294:	str	r1, [r0]
    4298:	mov	r3, r4
    429c:	b	42a4 <sf_finish_parse+0x570>
    42a0:	mov	r3, r6
    42a4:	ldr	r6, [r3, #16]
    42a8:	cmp	r6, #0
    42ac:	bne	42a0 <sf_finish_parse+0x56c>
    42b0:	str	r9, [r3, #16]
    42b4:	mov	r0, #20
    42b8:	bl	2494 <newchunk>
    42bc:	mov	r3, #144	; 0x90
    42c0:	mov	r1, r4
    42c4:	mov	ip, r0
    42c8:	str	r6, [r0]
    42cc:	str	r3, [r0, #12]
    42d0:	b	42d8 <sf_finish_parse+0x5a4>
    42d4:	mov	r1, r3
    42d8:	ldr	r3, [r1, #16]
    42dc:	cmp	r3, #0
    42e0:	bne	42d4 <sf_finish_parse+0x5a0>
    42e4:	str	ip, [r1, #16]
    42e8:	mov	r0, #20
    42ec:	str	ip, [fp, #8]
    42f0:	bl	2494 <newchunk>
    42f4:	ldr	r2, [sp, #4]
    42f8:	mov	r3, #2
    42fc:	mov	r1, r4
    4300:	mov	ip, r0
    4304:	str	r2, [r0, #12]
    4308:	str	r3, [r0]
    430c:	b	4314 <sf_finish_parse+0x5e0>
    4310:	mov	r1, r3
    4314:	ldr	r3, [r1, #16]
    4318:	cmp	r3, #0
    431c:	bne	4310 <sf_finish_parse+0x5dc>
    4320:	str	ip, [r1, #16]
    4324:	mov	r0, #20
    4328:	str	ip, [r9, #8]
    432c:	bl	2494 <newchunk>
    4330:	mov	r3, #7
    4334:	mov	r2, r4
    4338:	str	r3, [r0]
    433c:	b	4344 <sf_finish_parse+0x610>
    4340:	mov	r2, r3
    4344:	ldr	r3, [r2, #16]
    4348:	cmp	r3, #0
    434c:	bne	4340 <sf_finish_parse+0x60c>
    4350:	b	4170 <sf_finish_parse+0x43c>
    4354:	cmp	r4, #0
    4358:	bne	3fc8 <sf_finish_parse+0x294>
    435c:	b	3fec <sf_finish_parse+0x2b8>
    4360:	bl	2584 <gen_load_ppi_llprefixlen>
    4364:	mov	r4, r0
    4368:	b	3d7c <sf_finish_parse+0x48>
    436c:	cmp	r7, #127	; 0x7f
    4370:	beq	4388 <sf_finish_parse+0x654>
    4374:	ble	43a4 <sf_finish_parse+0x670>
    4378:	cmp	r7, #163	; 0xa3
    437c:	beq	4388 <sf_finish_parse+0x654>
    4380:	cmp	r7, #192	; 0xc0
    4384:	bne	403c <sf_finish_parse+0x308>
    4388:	ldr	r3, [pc, #760]	; 4688 <sf_finish_parse+0x954>
    438c:	add	r3, pc, r3
    4390:	ldr	r9, [r3, #868]	; 0x364
    4394:	cmn	r9, #1
    4398:	movne	r4, #0
    439c:	bne	3d90 <sf_finish_parse+0x5c>
    43a0:	b	3fec <sf_finish_parse+0x2b8>
    43a4:	cmp	r7, #105	; 0x69
    43a8:	beq	4388 <sf_finish_parse+0x654>
    43ac:	cmp	r7, #119	; 0x77
    43b0:	bne	3fec <sf_finish_parse+0x2b8>
    43b4:	b	4388 <sf_finish_parse+0x654>
    43b8:	mov	r4, #0
    43bc:	b	3d7c <sf_finish_parse+0x48>
    43c0:	mov	r0, #20
    43c4:	bl	2494 <newchunk>
    43c8:	mov	r2, #32
    43cc:	mov	r3, #4
    43d0:	str	r2, [r0]
    43d4:	str	r0, [r6, #8]
    43d8:	mov	r2, r4
    43dc:	str	r3, [r0, #12]
    43e0:	b	43e8 <sf_finish_parse+0x6b4>
    43e4:	mov	r2, r3
    43e8:	ldr	r3, [r2, #16]
    43ec:	cmp	r3, #0
    43f0:	bne	43e4 <sf_finish_parse+0x6b0>
    43f4:	str	r0, [r2, #16]
    43f8:	mov	r0, #20
    43fc:	bl	2494 <newchunk>
    4400:	mov	r2, #69	; 0x45
    4404:	mov	r3, #33554432	; 0x2000000
    4408:	str	r2, [r0]
    440c:	mov	fp, r0
    4410:	str	r3, [r0, #12]
    4414:	mov	r2, r4
    4418:	b	4420 <sf_finish_parse+0x6ec>
    441c:	mov	r2, r3
    4420:	ldr	r3, [r2, #16]
    4424:	cmp	r3, #0
    4428:	bne	441c <sf_finish_parse+0x6e8>
    442c:	str	fp, [r2, #16]
    4430:	mov	r0, #20
    4434:	str	sl, [fp, #8]
    4438:	bl	2494 <newchunk>
    443c:	mov	r2, #69	; 0x45
    4440:	mov	r3, #16777216	; 0x1000000
    4444:	str	r2, [r0]
    4448:	mov	r6, r0
    444c:	str	r0, [fp, #4]
    4450:	mov	r2, r4
    4454:	str	r3, [r0, #12]
    4458:	b	4460 <sf_finish_parse+0x72c>
    445c:	mov	r2, r3
    4460:	ldr	r3, [r2, #16]
    4464:	cmp	r3, #0
    4468:	bne	445c <sf_finish_parse+0x728>
    446c:	str	r6, [r2, #16]
    4470:	mov	r0, #20
    4474:	bl	2494 <newchunk>
    4478:	mov	r2, #48	; 0x30
    447c:	mov	r3, #16
    4480:	str	r2, [r0]
    4484:	str	r0, [r6, #4]
    4488:	mov	r2, r4
    448c:	str	r3, [r0, #12]
    4490:	b	4498 <sf_finish_parse+0x764>
    4494:	mov	r2, r3
    4498:	ldr	r3, [r2, #16]
    449c:	cmp	r3, #0
    44a0:	bne	4494 <sf_finish_parse+0x760>
    44a4:	str	r0, [r2, #16]
    44a8:	mov	r0, #20
    44ac:	bl	2494 <newchunk>
    44b0:	mov	r2, #69	; 0x45
    44b4:	mov	r3, #32
    44b8:	str	r2, [r0]
    44bc:	mov	fp, r0
    44c0:	str	r3, [r0, #12]
    44c4:	mov	r2, r4
    44c8:	b	44d0 <sf_finish_parse+0x79c>
    44cc:	mov	r2, r3
    44d0:	ldr	r3, [r2, #16]
    44d4:	cmp	r3, #0
    44d8:	bne	44cc <sf_finish_parse+0x798>
    44dc:	str	fp, [r2, #16]
    44e0:	mov	r0, #20
    44e4:	bl	2494 <newchunk>
    44e8:	mov	r2, #48	; 0x30
    44ec:	mov	r3, #8
    44f0:	str	r2, [r0]
    44f4:	str	r0, [r6, #8]
    44f8:	mov	r2, r4
    44fc:	str	r3, [r0, #12]
    4500:	b	4508 <sf_finish_parse+0x7d4>
    4504:	mov	r2, r3
    4508:	ldr	r3, [r2, #16]
    450c:	cmp	r3, #0
    4510:	bne	4504 <sf_finish_parse+0x7d0>
    4514:	str	r0, [r2, #16]
    4518:	mov	r0, #20
    451c:	bl	2494 <newchunk>
    4520:	mov	r2, #69	; 0x45
    4524:	mov	r3, #32
    4528:	str	r2, [r0]
    452c:	mov	r6, r0
    4530:	str	r3, [r0, #12]
    4534:	mov	r2, r4
    4538:	b	4540 <sf_finish_parse+0x80c>
    453c:	mov	r2, r3
    4540:	ldr	r3, [r2, #16]
    4544:	cmp	r3, #0
    4548:	bne	453c <sf_finish_parse+0x808>
    454c:	str	r6, [r2, #16]
    4550:	mov	r0, #20
    4554:	bl	2494 <newchunk>
    4558:	mov	r3, #96	; 0x60
    455c:	mov	r1, r4
    4560:	mov	r2, r0
    4564:	str	r9, [r0, #12]
    4568:	str	r3, [r0]
    456c:	b	4574 <sf_finish_parse+0x840>
    4570:	mov	r1, r3
    4574:	ldr	r3, [r1, #16]
    4578:	cmp	r3, #0
    457c:	bne	4570 <sf_finish_parse+0x83c>
    4580:	str	r2, [r1, #16]
    4584:	mov	r0, #20
    4588:	str	r2, [sp, #4]
    458c:	bl	2494 <newchunk>
    4590:	mov	r1, #4
    4594:	mov	r3, #3
    4598:	ldr	r2, [sp, #4]
    459c:	str	r1, [r0]
    45a0:	str	r3, [r0, #12]
    45a4:	mov	r1, r4
    45a8:	b	45b0 <sf_finish_parse+0x87c>
    45ac:	mov	r1, r3
    45b0:	ldr	r3, [r1, #16]
    45b4:	cmp	r3, #0
    45b8:	bne	45ac <sf_finish_parse+0x878>
    45bc:	str	r0, [r1, #16]
    45c0:	mov	r0, #20
    45c4:	str	r2, [sp, #4]
    45c8:	bl	2494 <newchunk>
    45cc:	mov	r1, #84	; 0x54
    45d0:	mvn	r3, #3
    45d4:	ldr	r2, [sp, #4]
    45d8:	str	r1, [r0]
    45dc:	str	r3, [r0, #12]
    45e0:	mov	r1, r4
    45e4:	b	45ec <sf_finish_parse+0x8b8>
    45e8:	mov	r1, r3
    45ec:	ldr	r3, [r1, #16]
    45f0:	cmp	r3, #0
    45f4:	bne	45e8 <sf_finish_parse+0x8b4>
    45f8:	str	r0, [r1, #16]
    45fc:	mov	r0, #20
    4600:	str	r2, [sp, #4]
    4604:	bl	2494 <newchunk>
    4608:	mov	r3, #2
    460c:	mov	r1, r4
    4610:	ldr	r2, [sp, #4]
    4614:	str	r9, [r0, #12]
    4618:	str	r3, [r0]
    461c:	b	4624 <sf_finish_parse+0x8f0>
    4620:	mov	r1, r3
    4624:	ldr	r3, [r1, #16]
    4628:	cmp	r3, #0
    462c:	bne	4620 <sf_finish_parse+0x8ec>
    4630:	str	r0, [r1, #16]
    4634:	stmib	fp, {r2, sl}
    4638:	stmib	r6, {r2, sl}
    463c:	b	3fc8 <sf_finish_parse+0x294>
    4640:	mov	r0, #20
    4644:	bl	2494 <newchunk>
    4648:	ldr	r3, [pc, #60]	; 468c <sf_finish_parse+0x958>
    464c:	add	r3, pc, r3
    4650:	ldr	r3, [r3, #860]	; 0x35c
    4654:	mov	r4, r0
    4658:	str	r6, [r0]
    465c:	str	r3, [r0, #12]
    4660:	b	3dac <sf_finish_parse+0x78>
    4664:	.word	0x0002c62c
    4668:	.word	0x0002c2a4
    466c:	.word	0x0002c5e8
    4670:	.word	0x00000104
    4674:	.word	0x0002c324
    4678:	.word	0x0002c288
    467c:	.word	0x0002c1f0
    4680:	.word	0xfffff000
    4684:	.word	0x80211000
    4688:	.word	0x0002bfdc
    468c:	.word	0x0002bd1c

00004690 <gen_bcmp>:
    4690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4694:	sub	sp, sp, #12
    4698:	cmp	r2, #3
    469c:	mov	r8, r2
    46a0:	mov	r9, r0
    46a4:	mov	sl, r1
    46a8:	str	r3, [sp, #4]
    46ac:	bls	47c8 <gen_bcmp+0x138>
    46b0:	mov	r7, #0
    46b4:	mov	fp, r7
    46b8:	add	r5, r3, r2
    46bc:	mov	r4, r2
    46c0:	ldrb	r2, [r5, #-3]
    46c4:	ldrb	r0, [r5, #-4]
    46c8:	ldrb	r1, [r5, #-2]
    46cc:	ldrb	r3, [r5, #-1]
    46d0:	lsl	r2, r2, #16
    46d4:	orr	r2, r2, r0, lsl #24
    46d8:	orr	r3, r2, r3
    46dc:	sub	r4, r4, #4
    46e0:	orr	r3, r3, r1, lsl #8
    46e4:	mov	r2, fp
    46e8:	add	r1, r4, sl
    46ec:	mov	r0, r9
    46f0:	bl	2d1c <gen_cmp>
    46f4:	mov	r6, r0
    46f8:	mov	r1, r0
    46fc:	subs	r0, r7, #0
    4700:	beq	4708 <gen_bcmp+0x78>
    4704:	bl	3ca0 <sf_gen_and>
    4708:	cmp	r4, #3
    470c:	sub	r5, r5, #4
    4710:	mov	r7, r6
    4714:	bhi	46c0 <gen_bcmp+0x30>
    4718:	and	r8, r8, #3
    471c:	cmp	r8, #1
    4720:	bls	47c0 <gen_bcmp+0x130>
    4724:	ldr	r3, [sp, #4]
    4728:	sub	r1, r8, #2
    472c:	add	r2, r3, r8
    4730:	add	r1, r1, sl
    4734:	ldrb	r0, [r2, #-2]
    4738:	ldrb	r3, [r2, #-1]
    473c:	mov	r2, #8
    4740:	orr	r3, r3, r0, lsl r2
    4744:	mov	r0, r9
    4748:	bl	2d1c <gen_cmp>
    474c:	cmp	r6, #0
    4750:	mov	r4, r0
    4754:	beq	4764 <gen_bcmp+0xd4>
    4758:	mov	r0, r6
    475c:	mov	r1, r4
    4760:	bl	3ca0 <sf_gen_and>
    4764:	and	r8, r8, #1
    4768:	cmp	r8, #0
    476c:	bne	477c <gen_bcmp+0xec>
    4770:	mov	r0, r4
    4774:	add	sp, sp, #12
    4778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    477c:	ldr	r3, [sp, #4]
    4780:	mov	r1, sl
    4784:	mov	r0, r9
    4788:	ldrb	r3, [r3]
    478c:	mov	r2, #16
    4790:	bl	2d1c <gen_cmp>
    4794:	cmp	r4, #0
    4798:	mov	r5, r0
    479c:	moveq	r4, r0
    47a0:	beq	4770 <gen_bcmp+0xe0>
    47a4:	mov	r0, r4
    47a8:	mov	r1, r5
    47ac:	bl	3ca0 <sf_gen_and>
    47b0:	mov	r4, r5
    47b4:	mov	r0, r4
    47b8:	add	sp, sp, #12
    47bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    47c0:	mov	r4, r6
    47c4:	b	4768 <gen_bcmp+0xd8>
    47c8:	mov	r6, #0
    47cc:	b	471c <gen_bcmp+0x8c>

000047d0 <gen_snap>:
    47d0:	push	{r4, r5, r6, lr}
    47d4:	sub	sp, sp, #8
    47d8:	mvn	ip, #85	; 0x55
    47dc:	lsr	r5, r0, #16
    47e0:	lsr	r6, r1, #8
    47e4:	lsr	r4, r0, #8
    47e8:	mov	lr, #3
    47ec:	strb	r0, [sp, #5]
    47f0:	strb	r1, [sp, #7]
    47f4:	mov	r3, sp
    47f8:	mov	r2, #8
    47fc:	mov	r1, #0
    4800:	mov	r0, #2
    4804:	strb	r6, [sp, #6]
    4808:	strb	r5, [sp, #3]
    480c:	strb	r4, [sp, #4]
    4810:	strb	ip, [sp]
    4814:	strb	ip, [sp, #1]
    4818:	strb	lr, [sp, #2]
    481c:	bl	4690 <gen_bcmp>
    4820:	add	sp, sp, #8
    4824:	pop	{r4, r5, r6, pc}

00004828 <gen_llc_linktype>:
    4828:	cmp	r0, #240	; 0xf0
    482c:	beq	4878 <gen_llc_linktype+0x50>
    4830:	ble	4854 <gen_llc_linktype+0x2c>
    4834:	cmp	r0, #254	; 0xfe
    4838:	beq	4878 <gen_llc_linktype+0x50>
    483c:	ldr	r3, [pc, #120]	; 48bc <gen_llc_linktype+0x94>
    4840:	cmp	r0, r3
    4844:	bne	488c <gen_llc_linktype+0x64>
    4848:	mov	r1, r0
    484c:	ldr	r0, [pc, #108]	; 48c0 <gen_llc_linktype+0x98>
    4850:	b	47d0 <gen_snap>
    4854:	cmp	r0, #6
    4858:	beq	4878 <gen_llc_linktype+0x50>
    485c:	cmp	r0, #224	; 0xe0
    4860:	bne	488c <gen_llc_linktype+0x64>
    4864:	mov	r3, r0
    4868:	mov	r2, #16
    486c:	mov	r1, #0
    4870:	mov	r0, #2
    4874:	b	2d1c <gen_cmp>
    4878:	orr	r3, r0, r0, lsl #8
    487c:	mov	r2, #8
    4880:	mov	r1, #0
    4884:	mov	r0, #2
    4888:	b	2d1c <gen_cmp>
    488c:	ldr	r3, [pc, #48]	; 48c4 <gen_llc_linktype+0x9c>
    4890:	cmp	r0, r3
    4894:	mov	r3, r0
    4898:	ble	48ac <gen_llc_linktype+0x84>
    489c:	mov	r2, #8
    48a0:	mov	r1, #6
    48a4:	mov	r0, #2
    48a8:	b	2d1c <gen_cmp>
    48ac:	mov	r2, #16
    48b0:	mov	r1, #0
    48b4:	mov	r0, #2
    48b8:	b	2d1c <gen_cmp>
    48bc:	.word	0x0000809b
    48c0:	.word	0x00080007
    48c4:	.word	0x000005dc

000048c8 <gen_portrangeatom>:
    48c8:	cmp	r1, r2
    48cc:	push	{r4, r5, r6, lr}
    48d0:	mov	ip, r2
    48d4:	sub	sp, sp, #16
    48d8:	movle	r3, r1
    48dc:	movgt	r3, r2
    48e0:	mov	r4, r1
    48e4:	mov	r5, r0
    48e8:	mov	r1, r0
    48ec:	mov	r2, #8
    48f0:	mov	r0, #5
    48f4:	movle	r4, ip
    48f8:	bl	2d50 <gen_cmp_ge>
    48fc:	mov	r2, #1
    4900:	mov	r3, #32
    4904:	str	r4, [sp, #8]
    4908:	mov	r1, r5
    490c:	str	r2, [sp, #4]
    4910:	str	r3, [sp]
    4914:	mov	r2, #8
    4918:	mvn	r3, #0
    491c:	mov	r6, r0
    4920:	mov	r0, #5
    4924:	bl	2c88 <gen_ncmp>
    4928:	mov	r4, r0
    492c:	mov	r1, r0
    4930:	mov	r0, r6
    4934:	bl	3ca0 <sf_gen_and>
    4938:	mov	r0, r4
    493c:	add	sp, sp, #16
    4940:	pop	{r4, r5, r6, pc}

00004944 <gen_portrangeatom6>:
    4944:	cmp	r1, r2
    4948:	push	{r4, r5, r6, lr}
    494c:	mov	ip, r2
    4950:	sub	sp, sp, #16
    4954:	movle	r3, r1
    4958:	movgt	r3, r2
    495c:	mov	r4, r1
    4960:	mov	r5, r0
    4964:	mov	r1, r0
    4968:	mov	r2, #8
    496c:	mov	r0, #6
    4970:	movle	r4, ip
    4974:	bl	2d50 <gen_cmp_ge>
    4978:	mov	r2, #1
    497c:	mov	r3, #32
    4980:	str	r4, [sp, #8]
    4984:	mov	r1, r5
    4988:	str	r2, [sp, #4]
    498c:	str	r3, [sp]
    4990:	mov	r2, #8
    4994:	mvn	r3, #0
    4998:	mov	r6, r0
    499c:	mov	r0, #6
    49a0:	bl	2c88 <gen_ncmp>
    49a4:	mov	r4, r0
    49a8:	mov	r1, r0
    49ac:	mov	r0, r6
    49b0:	bl	3ca0 <sf_gen_and>
    49b4:	mov	r0, r4
    49b8:	add	sp, sp, #16
    49bc:	pop	{r4, r5, r6, pc}

000049c0 <sf_gen_or>:
    49c0:	ldr	r2, [r0, #44]	; 0x2c
    49c4:	clz	r2, r2
    49c8:	lsr	r2, r2, #5
    49cc:	str	r2, [r0, #44]	; 0x2c
    49d0:	mov	r3, r0
    49d4:	ldr	ip, [r1, #96]	; 0x60
    49d8:	b	49e0 <sf_gen_or+0x20>
    49dc:	ldr	r2, [r2, #44]	; 0x2c
    49e0:	cmp	r2, #0
    49e4:	ldreq	r2, [r3, #60]	; 0x3c
    49e8:	ldrne	r2, [r3, #84]	; 0x54
    49ec:	streq	ip, [r3, #60]	; 0x3c
    49f0:	strne	ip, [r3, #84]	; 0x54
    49f4:	cmp	r2, #0
    49f8:	mov	r3, r2
    49fc:	bne	49dc <sf_gen_or+0x1c>
    4a00:	mov	r3, r1
    4a04:	ldr	r2, [r0, #44]	; 0x2c
    4a08:	clz	r2, r2
    4a0c:	lsr	r2, r2, #5
    4a10:	str	r2, [r0, #44]	; 0x2c
    4a14:	ldr	ip, [r3, #44]	; 0x2c
    4a18:	add	r2, r3, #84	; 0x54
    4a1c:	cmp	ip, #0
    4a20:	addeq	r2, r3, #60	; 0x3c
    4a24:	ldr	r3, [r2]
    4a28:	cmp	r3, #0
    4a2c:	bne	4a14 <sf_gen_or+0x54>
    4a30:	str	r0, [r2]
    4a34:	ldr	r3, [r0, #96]	; 0x60
    4a38:	str	r3, [r1, #96]	; 0x60
    4a3c:	bx	lr

00004a40 <gen_fhostop>:
    4a40:	push	{r4, r5, r6, lr}
    4a44:	mov	r4, r0
    4a48:	cmp	r1, #4
    4a4c:	addls	pc, pc, r1, lsl #2
    4a50:	b	4af8 <gen_fhostop+0xb8>
    4a54:	b	4ac8 <gen_fhostop+0x88>
    4a58:	b	4ab0 <gen_fhostop+0x70>
    4a5c:	b	4a98 <gen_fhostop+0x58>
    4a60:	b	4ac8 <gen_fhostop+0x88>
    4a64:	b	4a68 <gen_fhostop+0x28>
    4a68:	mov	r1, #1
    4a6c:	bl	4a40 <gen_fhostop>
    4a70:	mov	r1, #2
    4a74:	mov	r5, r0
    4a78:	mov	r0, r4
    4a7c:	bl	4a40 <gen_fhostop>
    4a80:	mov	r4, r0
    4a84:	mov	r1, r0
    4a88:	mov	r0, r5
    4a8c:	bl	3ca0 <sf_gen_and>
    4a90:	mov	r0, r4
    4a94:	pop	{r4, r5, r6, pc}
    4a98:	mov	r1, #1
    4a9c:	mov	r3, r0
    4aa0:	mov	r2, #6
    4aa4:	mov	r0, r1
    4aa8:	pop	{r4, r5, r6, lr}
    4aac:	b	4690 <gen_bcmp>
    4ab0:	mov	r3, r0
    4ab4:	mov	r2, #6
    4ab8:	mov	r1, #7
    4abc:	mov	r0, #1
    4ac0:	pop	{r4, r5, r6, lr}
    4ac4:	b	4690 <gen_bcmp>
    4ac8:	mov	r1, #1
    4acc:	bl	4a40 <gen_fhostop>
    4ad0:	mov	r1, #2
    4ad4:	mov	r5, r0
    4ad8:	mov	r0, r4
    4adc:	bl	4a40 <gen_fhostop>
    4ae0:	mov	r4, r0
    4ae4:	mov	r1, r0
    4ae8:	mov	r0, r5
    4aec:	bl	49c0 <sf_gen_or>
    4af0:	mov	r0, r4
    4af4:	pop	{r4, r5, r6, pc}
    4af8:	bl	f18 <abort@plt>

00004afc <gen_thostop>:
    4afc:	push	{r4, r5, r6, lr}
    4b00:	mov	r4, r0
    4b04:	cmp	r1, #4
    4b08:	addls	pc, pc, r1, lsl #2
    4b0c:	b	4bb4 <gen_thostop+0xb8>
    4b10:	b	4b84 <gen_thostop+0x88>
    4b14:	b	4b6c <gen_thostop+0x70>
    4b18:	b	4b54 <gen_thostop+0x58>
    4b1c:	b	4b84 <gen_thostop+0x88>
    4b20:	b	4b24 <gen_thostop+0x28>
    4b24:	mov	r1, #1
    4b28:	bl	4afc <gen_thostop>
    4b2c:	mov	r1, #2
    4b30:	mov	r5, r0
    4b34:	mov	r0, r4
    4b38:	bl	4afc <gen_thostop>
    4b3c:	mov	r4, r0
    4b40:	mov	r1, r0
    4b44:	mov	r0, r5
    4b48:	bl	3ca0 <sf_gen_and>
    4b4c:	mov	r0, r4
    4b50:	pop	{r4, r5, r6, pc}
    4b54:	mov	r3, r0
    4b58:	mov	r2, #6
    4b5c:	mov	r1, #2
    4b60:	mov	r0, #1
    4b64:	pop	{r4, r5, r6, lr}
    4b68:	b	4690 <gen_bcmp>
    4b6c:	mov	r3, r0
    4b70:	mov	r2, #6
    4b74:	mov	r1, #8
    4b78:	mov	r0, #1
    4b7c:	pop	{r4, r5, r6, lr}
    4b80:	b	4690 <gen_bcmp>
    4b84:	mov	r1, #1
    4b88:	bl	4afc <gen_thostop>
    4b8c:	mov	r1, #2
    4b90:	mov	r5, r0
    4b94:	mov	r0, r4
    4b98:	bl	4afc <gen_thostop>
    4b9c:	mov	r4, r0
    4ba0:	mov	r1, r0
    4ba4:	mov	r0, r5
    4ba8:	bl	49c0 <sf_gen_or>
    4bac:	mov	r0, r4
    4bb0:	pop	{r4, r5, r6, pc}
    4bb4:	bl	f18 <abort@plt>

00004bb8 <gen_ipfchostop>:
    4bb8:	push	{r4, r5, r6, lr}
    4bbc:	mov	r4, r0
    4bc0:	cmp	r1, #4
    4bc4:	addls	pc, pc, r1, lsl #2
    4bc8:	b	4c70 <gen_ipfchostop+0xb8>
    4bcc:	b	4c40 <gen_ipfchostop+0x88>
    4bd0:	b	4c28 <gen_ipfchostop+0x70>
    4bd4:	b	4c10 <gen_ipfchostop+0x58>
    4bd8:	b	4c40 <gen_ipfchostop+0x88>
    4bdc:	b	4be0 <gen_ipfchostop+0x28>
    4be0:	mov	r1, #1
    4be4:	bl	4bb8 <gen_ipfchostop>
    4be8:	mov	r1, #2
    4bec:	mov	r5, r0
    4bf0:	mov	r0, r4
    4bf4:	bl	4bb8 <gen_ipfchostop>
    4bf8:	mov	r4, r0
    4bfc:	mov	r1, r0
    4c00:	mov	r0, r5
    4c04:	bl	3ca0 <sf_gen_and>
    4c08:	mov	r0, r4
    4c0c:	pop	{r4, r5, r6, pc}
    4c10:	mov	r3, r0
    4c14:	mov	r2, #6
    4c18:	mov	r1, #2
    4c1c:	mov	r0, #1
    4c20:	pop	{r4, r5, r6, lr}
    4c24:	b	4690 <gen_bcmp>
    4c28:	mov	r3, r0
    4c2c:	mov	r2, #6
    4c30:	mov	r1, #10
    4c34:	mov	r0, #1
    4c38:	pop	{r4, r5, r6, lr}
    4c3c:	b	4690 <gen_bcmp>
    4c40:	mov	r1, #1
    4c44:	bl	4bb8 <gen_ipfchostop>
    4c48:	mov	r1, #2
    4c4c:	mov	r5, r0
    4c50:	mov	r0, r4
    4c54:	bl	4bb8 <gen_ipfchostop>
    4c58:	mov	r4, r0
    4c5c:	mov	r1, r0
    4c60:	mov	r0, r5
    4c64:	bl	49c0 <sf_gen_or>
    4c68:	mov	r0, r4
    4c6c:	pop	{r4, r5, r6, pc}
    4c70:	bl	f18 <abort@plt>

00004c74 <gen_ehostop>:
    4c74:	push	{r4, r5, r6, lr}
    4c78:	mov	r4, r0
    4c7c:	cmp	r1, #4
    4c80:	addls	pc, pc, r1, lsl #2
    4c84:	b	4d40 <gen_ehostop+0xcc>
    4c88:	b	4d10 <gen_ehostop+0x9c>
    4c8c:	b	4cec <gen_ehostop+0x78>
    4c90:	b	4ccc <gen_ehostop+0x58>
    4c94:	b	4d10 <gen_ehostop+0x9c>
    4c98:	b	4c9c <gen_ehostop+0x28>
    4c9c:	mov	r1, #1
    4ca0:	bl	4c74 <gen_ehostop>
    4ca4:	mov	r1, #2
    4ca8:	mov	r5, r0
    4cac:	mov	r0, r4
    4cb0:	bl	4c74 <gen_ehostop>
    4cb4:	mov	r4, r0
    4cb8:	mov	r1, r0
    4cbc:	mov	r0, r5
    4cc0:	bl	3ca0 <sf_gen_and>
    4cc4:	mov	r0, r4
    4cc8:	pop	{r4, r5, r6, pc}
    4ccc:	ldr	r1, [pc, #112]	; 4d44 <gen_ehostop+0xd0>
    4cd0:	mov	r3, r0
    4cd4:	add	r1, pc, r1
    4cd8:	mov	r2, #6
    4cdc:	ldr	r1, [r1, #900]	; 0x384
    4ce0:	mov	r0, #1
    4ce4:	pop	{r4, r5, r6, lr}
    4ce8:	b	4690 <gen_bcmp>
    4cec:	ldr	r1, [pc, #84]	; 4d48 <gen_ehostop+0xd4>
    4cf0:	mov	r2, #6
    4cf4:	add	r1, pc, r1
    4cf8:	mov	r3, r0
    4cfc:	ldr	r1, [r1, #900]	; 0x384
    4d00:	mov	r0, #1
    4d04:	add	r1, r1, r2
    4d08:	pop	{r4, r5, r6, lr}
    4d0c:	b	4690 <gen_bcmp>
    4d10:	mov	r1, #1
    4d14:	bl	4c74 <gen_ehostop>
    4d18:	mov	r1, #2
    4d1c:	mov	r5, r0
    4d20:	mov	r0, r4
    4d24:	bl	4c74 <gen_ehostop>
    4d28:	mov	r4, r0
    4d2c:	mov	r1, r0
    4d30:	mov	r0, r5
    4d34:	bl	49c0 <sf_gen_or>
    4d38:	mov	r0, r4
    4d3c:	pop	{r4, r5, r6, pc}
    4d40:	bl	f18 <abort@plt>
    4d44:	.word	0x0002b694
    4d48:	.word	0x0002b674

00004d4c <gen_ahostop>:
    4d4c:	push	{r4, r5, r6, lr}
    4d50:	mov	r4, r0
    4d54:	cmp	r1, #4
    4d58:	addls	pc, pc, r1, lsl #2
    4d5c:	b	4e04 <gen_ahostop+0xb8>
    4d60:	b	4dd4 <gen_ahostop+0x88>
    4d64:	b	4dbc <gen_ahostop+0x70>
    4d68:	b	4da4 <gen_ahostop+0x58>
    4d6c:	b	4dd4 <gen_ahostop+0x88>
    4d70:	b	4d74 <gen_ahostop+0x28>
    4d74:	mov	r1, #1
    4d78:	bl	4d4c <gen_ahostop>
    4d7c:	mov	r1, #2
    4d80:	mov	r5, r0
    4d84:	mov	r0, r4
    4d88:	bl	4d4c <gen_ahostop>
    4d8c:	mov	r4, r0
    4d90:	mov	r1, r0
    4d94:	mov	r0, r5
    4d98:	bl	3ca0 <sf_gen_and>
    4d9c:	mov	r0, r4
    4da0:	pop	{r4, r5, r6, pc}
    4da4:	mov	r2, #1
    4da8:	mov	r3, r0
    4dac:	mov	r1, r2
    4db0:	mov	r0, r2
    4db4:	pop	{r4, r5, r6, lr}
    4db8:	b	4690 <gen_bcmp>
    4dbc:	mov	r2, #1
    4dc0:	mov	r3, r0
    4dc4:	mov	r1, #0
    4dc8:	mov	r0, r2
    4dcc:	pop	{r4, r5, r6, lr}
    4dd0:	b	4690 <gen_bcmp>
    4dd4:	mov	r1, #1
    4dd8:	bl	4d4c <gen_ahostop>
    4ddc:	mov	r1, #2
    4de0:	mov	r5, r0
    4de4:	mov	r0, r4
    4de8:	bl	4d4c <gen_ahostop>
    4dec:	mov	r4, r0
    4df0:	mov	r1, r0
    4df4:	mov	r0, r5
    4df8:	bl	49c0 <sf_gen_or>
    4dfc:	mov	r0, r4
    4e00:	pop	{r4, r5, r6, pc}
    4e04:	bl	f18 <abort@plt>

00004e08 <gen_ether_linktype>:
    4e08:	cmp	r0, #240	; 0xf0
    4e0c:	push	{r4, r5, r6, r7, r8, lr}
    4e10:	mov	r4, r0
    4e14:	beq	4f20 <gen_ether_linktype+0x118>
    4e18:	bgt	4ed4 <gen_ether_linktype+0xcc>
    4e1c:	cmp	r0, #6
    4e20:	beq	4f20 <gen_ether_linktype+0x118>
    4e24:	cmp	r0, #224	; 0xe0
    4e28:	bne	4ef4 <gen_ether_linktype+0xec>
    4e2c:	mov	r3, r0
    4e30:	mov	r2, #16
    4e34:	mov	r1, #0
    4e38:	mov	r0, #2
    4e3c:	bl	2d1c <gen_cmp>
    4e40:	ldr	r3, [pc, #472]	; 5020 <gen_ether_linktype+0x218>
    4e44:	mov	r2, #8
    4e48:	mov	r1, #0
    4e4c:	mov	r4, r0
    4e50:	mov	r0, #2
    4e54:	bl	2d1c <gen_cmp>
    4e58:	mov	r5, r0
    4e5c:	mov	r1, r0
    4e60:	mov	r0, r4
    4e64:	bl	49c0 <sf_gen_or>
    4e68:	ldr	r1, [pc, #436]	; 5024 <gen_ether_linktype+0x21c>
    4e6c:	mov	r0, #0
    4e70:	bl	47d0 <gen_snap>
    4e74:	mov	r1, r5
    4e78:	bl	49c0 <sf_gen_or>
    4e7c:	ldr	r3, [pc, #420]	; 5028 <gen_ether_linktype+0x220>
    4e80:	ldr	r2, [pc, #420]	; 502c <gen_ether_linktype+0x224>
    4e84:	add	r3, pc, r3
    4e88:	mov	r1, #8
    4e8c:	ldr	r4, [r3, #952]	; 0x3b8
    4e90:	mov	r0, r4
    4e94:	bl	2900 <gen_cmp_gt.constprop.10>
    4e98:	mov	r1, r5
    4e9c:	ldr	r3, [r0, #44]	; 0x2c
    4ea0:	clz	r3, r3
    4ea4:	lsr	r3, r3, #5
    4ea8:	str	r3, [r0, #44]	; 0x2c
    4eac:	bl	3ca0 <sf_gen_and>
    4eb0:	ldr	r3, [pc, #364]	; 5024 <gen_ether_linktype+0x21c>
    4eb4:	mov	r1, r4
    4eb8:	mov	r2, #8
    4ebc:	mov	r0, #1
    4ec0:	bl	2d1c <gen_cmp>
    4ec4:	mov	r1, r5
    4ec8:	bl	49c0 <sf_gen_or>
    4ecc:	mov	r0, r5
    4ed0:	pop	{r4, r5, r6, r7, r8, pc}
    4ed4:	ldr	r3, [pc, #340]	; 5030 <gen_ether_linktype+0x228>
    4ed8:	cmp	r0, r3
    4edc:	beq	4f78 <gen_ether_linktype+0x170>
    4ee0:	add	r3, r3, #88	; 0x58
    4ee4:	cmp	r0, r3
    4ee8:	beq	4f78 <gen_ether_linktype+0x170>
    4eec:	cmp	r0, #254	; 0xfe
    4ef0:	beq	4f20 <gen_ether_linktype+0x118>
    4ef4:	ldr	r2, [pc, #304]	; 502c <gen_ether_linktype+0x224>
    4ef8:	cmp	r4, r2
    4efc:	ble	4fe0 <gen_ether_linktype+0x1d8>
    4f00:	ldr	r1, [pc, #300]	; 5034 <gen_ether_linktype+0x22c>
    4f04:	mov	r3, r4
    4f08:	add	r1, pc, r1
    4f0c:	mov	r2, #8
    4f10:	ldr	r1, [r1, #952]	; 0x3b8
    4f14:	mov	r0, #1
    4f18:	pop	{r4, r5, r6, r7, r8, lr}
    4f1c:	b	2d1c <gen_cmp>
    4f20:	ldr	r3, [pc, #272]	; 5038 <gen_ether_linktype+0x230>
    4f24:	ldr	r2, [pc, #256]	; 502c <gen_ether_linktype+0x224>
    4f28:	add	r3, pc, r3
    4f2c:	mov	r1, #8
    4f30:	ldr	r0, [r3, #952]	; 0x3b8
    4f34:	bl	2900 <gen_cmp_gt.constprop.10>
    4f38:	orr	r3, r4, r4, lsl #8
    4f3c:	mov	r1, #0
    4f40:	ldr	r2, [r0, #44]	; 0x2c
    4f44:	clz	r2, r2
    4f48:	lsr	r2, r2, #5
    4f4c:	str	r2, [r0, #44]	; 0x2c
    4f50:	mov	r6, r0
    4f54:	mov	r2, #8
    4f58:	mov	r0, #2
    4f5c:	bl	2d1c <gen_cmp>
    4f60:	mov	r5, r0
    4f64:	mov	r1, r0
    4f68:	mov	r0, r6
    4f6c:	bl	3ca0 <sf_gen_and>
    4f70:	mov	r0, r5
    4f74:	pop	{r4, r5, r6, r7, r8, pc}
    4f78:	ldr	r3, [pc, #188]	; 503c <gen_ether_linktype+0x234>
    4f7c:	mov	r1, #8
    4f80:	add	r3, pc, r3
    4f84:	ldr	r2, [pc, #160]	; 502c <gen_ether_linktype+0x224>
    4f88:	ldr	r7, [r3, #952]	; 0x3b8
    4f8c:	mov	r0, r7
    4f90:	bl	2900 <gen_cmp_gt.constprop.10>
    4f94:	ldr	r2, [pc, #148]	; 5030 <gen_ether_linktype+0x228>
    4f98:	cmp	r4, r2
    4f9c:	moveq	r1, r4
    4fa0:	ldrne	r1, [pc, #152]	; 5040 <gen_ether_linktype+0x238>
    4fa4:	ldr	r3, [r0, #44]	; 0x2c
    4fa8:	clz	r3, r3
    4fac:	lsr	r3, r3, #5
    4fb0:	str	r3, [r0, #44]	; 0x2c
    4fb4:	mov	r6, r0
    4fb8:	ldreq	r0, [pc, #132]	; 5044 <gen_ether_linktype+0x23c>
    4fbc:	movne	r0, #0
    4fc0:	bl	47d0 <gen_snap>
    4fc4:	mov	r5, r0
    4fc8:	mov	r1, r5
    4fcc:	mov	r0, r6
    4fd0:	bl	3ca0 <sf_gen_and>
    4fd4:	mov	r3, r4
    4fd8:	mov	r1, r7
    4fdc:	b	4eb8 <gen_ether_linktype+0xb0>
    4fe0:	ldr	r3, [pc, #96]	; 5048 <gen_ether_linktype+0x240>
    4fe4:	mov	r1, #8
    4fe8:	add	r3, pc, r3
    4fec:	ldr	r5, [r3, #952]	; 0x3b8
    4ff0:	mov	r0, r5
    4ff4:	bl	2900 <gen_cmp_gt.constprop.10>
    4ff8:	add	r1, r5, #2
    4ffc:	mov	r3, r4
    5000:	ldr	r2, [r0, #44]	; 0x2c
    5004:	clz	r2, r2
    5008:	lsr	r2, r2, #5
    500c:	str	r2, [r0, #44]	; 0x2c
    5010:	mov	r6, r0
    5014:	mov	r2, #16
    5018:	mov	r0, #1
    501c:	b	4f5c <gen_ether_linktype+0x154>
    5020:	.word	0x0000ffff
    5024:	.word	0x00008137
    5028:	.word	0x0002b4e4
    502c:	.word	0x000005dc
    5030:	.word	0x0000809b
    5034:	.word	0x0002b460
    5038:	.word	0x0002b440
    503c:	.word	0x0002b3e8
    5040:	.word	0x000080f3
    5044:	.word	0x00080007
    5048:	.word	0x0002b380

0000504c <gen_wlanhostop>:
    504c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5050:	mov	r5, r0
    5054:	sub	sp, sp, #16
    5058:	cmp	r1, #8
    505c:	addls	pc, pc, r1, lsl #2
    5060:	b	5630 <gen_wlanhostop+0x5e4>
    5064:	b	50dc <gen_wlanhostop+0x90>
    5068:	b	5110 <gen_wlanhostop+0xc4>
    506c:	b	5368 <gen_wlanhostop+0x31c>
    5070:	b	50dc <gen_wlanhostop+0x90>
    5074:	b	54c0 <gen_wlanhostop+0x474>
    5078:	b	54f4 <gen_wlanhostop+0x4a8>
    507c:	b	5510 <gen_wlanhostop+0x4c4>
    5080:	b	55e8 <gen_wlanhostop+0x59c>
    5084:	b	5088 <gen_wlanhostop+0x3c>
    5088:	mov	r3, #3
    508c:	mov	r0, #0
    5090:	mov	r2, #16
    5094:	mov	r1, #1
    5098:	stmib	sp, {r0, r3}
    509c:	str	r2, [sp]
    50a0:	mov	r0, r1
    50a4:	bl	2c88 <gen_ncmp>
    50a8:	mov	r3, r5
    50ac:	mov	r2, #6
    50b0:	mov	r1, #24
    50b4:	mov	r6, r0
    50b8:	mov	r0, #1
    50bc:	bl	4690 <gen_bcmp>
    50c0:	mov	r4, r0
    50c4:	mov	r1, r0
    50c8:	mov	r0, r6
    50cc:	bl	3ca0 <sf_gen_and>
    50d0:	mov	r0, r4
    50d4:	add	sp, sp, #16
    50d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    50dc:	mov	r1, #1
    50e0:	bl	504c <gen_wlanhostop>
    50e4:	mov	r1, #2
    50e8:	mov	r6, r0
    50ec:	mov	r0, r5
    50f0:	bl	504c <gen_wlanhostop>
    50f4:	mov	r4, r0
    50f8:	mov	r1, r0
    50fc:	mov	r0, r6
    5100:	bl	49c0 <sf_gen_or>
    5104:	mov	r0, r4
    5108:	add	sp, sp, #16
    510c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5110:	mov	r1, #16
    5114:	mov	r0, #1
    5118:	bl	2848 <gen_load_llrel>
    511c:	mov	r6, #1
    5120:	mov	r8, #69	; 0x45
    5124:	mov	r4, r0
    5128:	mov	r0, #208	; 0xd0
    512c:	bl	2494 <newchunk>
    5130:	mov	r3, r5
    5134:	mov	r2, #6
    5138:	mov	r1, #24
    513c:	mov	r7, r0
    5140:	str	r4, [r0, #4]
    5144:	str	r0, [r7, #96]	; 0x60
    5148:	str	r8, [r0, #8]
    514c:	str	r6, [r0, #20]
    5150:	mov	r0, r6
    5154:	bl	4690 <gen_bcmp>
    5158:	mov	r4, r0
    515c:	mov	r1, r0
    5160:	mov	r0, r7
    5164:	bl	3ca0 <sf_gen_and>
    5168:	mov	r1, #16
    516c:	mov	r0, r6
    5170:	bl	2848 <gen_load_llrel>
    5174:	mov	r9, r0
    5178:	mov	r0, #208	; 0xd0
    517c:	bl	2494 <newchunk>
    5180:	mov	r3, r5
    5184:	mov	r1, #16
    5188:	mov	r7, r0
    518c:	ldr	r2, [r0, #44]	; 0x2c
    5190:	clz	r2, r2
    5194:	lsr	r2, r2, #5
    5198:	str	r9, [r0, #4]
    519c:	str	r8, [r0, #8]
    51a0:	str	r0, [r7, #96]	; 0x60
    51a4:	str	r2, [r0, #44]	; 0x2c
    51a8:	str	r6, [r0, #20]
    51ac:	mov	r2, #6
    51b0:	mov	r0, r6
    51b4:	bl	4690 <gen_bcmp>
    51b8:	mov	r9, r0
    51bc:	mov	r1, r0
    51c0:	mov	r0, r7
    51c4:	bl	3ca0 <sf_gen_and>
    51c8:	mov	r0, r9
    51cc:	mov	r1, r4
    51d0:	bl	49c0 <sf_gen_or>
    51d4:	mov	r1, #16
    51d8:	mov	r0, r6
    51dc:	bl	2848 <gen_load_llrel>
    51e0:	mov	r9, #2
    51e4:	mov	r7, r0
    51e8:	mov	r0, #208	; 0xd0
    51ec:	bl	2494 <newchunk>
    51f0:	mov	r1, r4
    51f4:	mov	r3, r0
    51f8:	stmib	r0, {r7, r8}
    51fc:	str	r0, [r3, #96]	; 0x60
    5200:	str	r9, [r0, #20]
    5204:	bl	3ca0 <sf_gen_and>
    5208:	mov	r1, #16
    520c:	mov	r0, r6
    5210:	bl	2848 <gen_load_llrel>
    5214:	mov	sl, r0
    5218:	mov	r0, #208	; 0xd0
    521c:	bl	2494 <newchunk>
    5220:	mov	r3, r5
    5224:	mov	r1, #10
    5228:	mov	r7, r0
    522c:	ldr	r2, [r0, #44]	; 0x2c
    5230:	clz	r2, r2
    5234:	lsr	r2, r2, #5
    5238:	str	r9, [r0, #20]
    523c:	str	r8, [r0, #8]
    5240:	str	r0, [r7, #96]	; 0x60
    5244:	str	sl, [r0, #4]
    5248:	str	r2, [r0, #44]	; 0x2c
    524c:	mov	r2, #6
    5250:	mov	r0, r6
    5254:	bl	4690 <gen_bcmp>
    5258:	mov	r9, r0
    525c:	mov	r1, r0
    5260:	mov	r0, r7
    5264:	bl	3ca0 <sf_gen_and>
    5268:	mov	r0, r9
    526c:	mov	r1, r4
    5270:	bl	49c0 <sf_gen_or>
    5274:	mov	r1, #16
    5278:	mov	r0, #0
    527c:	bl	2848 <gen_load_llrel>
    5280:	mov	r9, #8
    5284:	mov	r7, r0
    5288:	mov	r0, #208	; 0xd0
    528c:	bl	2494 <newchunk>
    5290:	mov	r1, r4
    5294:	mov	r3, r0
    5298:	stmib	r0, {r7, r8}
    529c:	str	r0, [r3, #96]	; 0x60
    52a0:	str	r9, [r0, #20]
    52a4:	bl	3ca0 <sf_gen_and>
    52a8:	mov	r1, #16
    52ac:	mov	r0, #0
    52b0:	bl	2848 <gen_load_llrel>
    52b4:	mov	sl, r0
    52b8:	mov	r0, #208	; 0xd0
    52bc:	bl	2494 <newchunk>
    52c0:	mov	r3, r5
    52c4:	mov	r1, #10
    52c8:	mov	r7, r0
    52cc:	ldr	r2, [r0, #44]	; 0x2c
    52d0:	clz	r2, r2
    52d4:	lsr	r2, r2, #5
    52d8:	str	r9, [r0, #20]
    52dc:	str	r8, [r0, #8]
    52e0:	str	r0, [r7, #96]	; 0x60
    52e4:	str	sl, [r0, #4]
    52e8:	str	r2, [r7, #44]	; 0x2c
    52ec:	mov	r0, r6
    52f0:	mov	r2, #6
    52f4:	bl	4690 <gen_bcmp>
    52f8:	mov	r5, r0
    52fc:	mov	r1, r0
    5300:	mov	r0, r7
    5304:	bl	3ca0 <sf_gen_and>
    5308:	mov	r1, r4
    530c:	mov	r0, r5
    5310:	bl	49c0 <sf_gen_or>
    5314:	mov	r1, #16
    5318:	mov	r0, #0
    531c:	bl	2848 <gen_load_llrel>
    5320:	mov	r5, r0
    5324:	mov	r0, #208	; 0xd0
    5328:	bl	2494 <newchunk>
    532c:	mov	r1, #4
    5330:	mov	r3, r0
    5334:	ldr	r2, [r0, #44]	; 0x2c
    5338:	clz	r2, r2
    533c:	lsr	r2, r2, #5
    5340:	str	r8, [r0, #8]
    5344:	str	r0, [r3, #96]	; 0x60
    5348:	str	r5, [r0, #4]
    534c:	str	r1, [r0, #20]
    5350:	str	r2, [r0, #44]	; 0x2c
    5354:	mov	r1, r4
    5358:	bl	3ca0 <sf_gen_and>
    535c:	mov	r0, r4
    5360:	add	sp, sp, #16
    5364:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5368:	mov	r1, #16
    536c:	mov	r0, #1
    5370:	bl	2848 <gen_load_llrel>
    5374:	mov	r7, #1
    5378:	mov	r8, #69	; 0x45
    537c:	mov	r4, r0
    5380:	mov	r0, #208	; 0xd0
    5384:	bl	2494 <newchunk>
    5388:	mov	r3, r5
    538c:	mov	r2, #6
    5390:	mov	r1, #16
    5394:	mov	r6, r0
    5398:	str	r4, [r0, #4]
    539c:	str	r0, [r6, #96]	; 0x60
    53a0:	str	r8, [r0, #8]
    53a4:	str	r7, [r0, #20]
    53a8:	mov	r0, r7
    53ac:	bl	4690 <gen_bcmp>
    53b0:	mov	r4, r0
    53b4:	mov	r1, r0
    53b8:	mov	r0, r6
    53bc:	bl	3ca0 <sf_gen_and>
    53c0:	mov	r1, #16
    53c4:	mov	r0, r7
    53c8:	bl	2848 <gen_load_llrel>
    53cc:	mov	r9, r0
    53d0:	mov	r0, #208	; 0xd0
    53d4:	bl	2494 <newchunk>
    53d8:	mov	r3, r5
    53dc:	mov	r1, #4
    53e0:	mov	r6, r0
    53e4:	ldr	r2, [r0, #44]	; 0x2c
    53e8:	clz	r2, r2
    53ec:	lsr	r2, r2, #5
    53f0:	str	r9, [r0, #4]
    53f4:	str	r8, [r0, #8]
    53f8:	str	r0, [r6, #96]	; 0x60
    53fc:	str	r2, [r0, #44]	; 0x2c
    5400:	str	r7, [r0, #20]
    5404:	mov	r2, #6
    5408:	mov	r0, r7
    540c:	bl	4690 <gen_bcmp>
    5410:	mov	r9, r0
    5414:	mov	r1, r0
    5418:	mov	r0, r6
    541c:	bl	3ca0 <sf_gen_and>
    5420:	mov	r0, r9
    5424:	mov	r1, r4
    5428:	bl	49c0 <sf_gen_or>
    542c:	mov	r1, #16
    5430:	mov	r0, #0
    5434:	bl	2848 <gen_load_llrel>
    5438:	mov	r9, #8
    543c:	mov	r6, r0
    5440:	mov	r0, #208	; 0xd0
    5444:	bl	2494 <newchunk>
    5448:	mov	r1, r4
    544c:	mov	r3, r0
    5450:	stmib	r0, {r6, r8}
    5454:	str	r0, [r3, #96]	; 0x60
    5458:	str	r9, [r0, #20]
    545c:	bl	3ca0 <sf_gen_and>
    5460:	mov	r1, #16
    5464:	mov	r0, #0
    5468:	bl	2848 <gen_load_llrel>
    546c:	mov	sl, r0
    5470:	mov	r0, #208	; 0xd0
    5474:	bl	2494 <newchunk>
    5478:	mov	r3, r5
    547c:	mov	r1, #4
    5480:	mov	r6, r0
    5484:	ldr	r2, [r0, #44]	; 0x2c
    5488:	clz	r2, r2
    548c:	lsr	r2, r2, #5
    5490:	str	r9, [r0, #20]
    5494:	str	r8, [r0, #8]
    5498:	str	r0, [r6, #96]	; 0x60
    549c:	str	sl, [r0, #4]
    54a0:	str	r2, [r6, #44]	; 0x2c
    54a4:	mov	r0, r7
    54a8:	mov	r2, #6
    54ac:	bl	4690 <gen_bcmp>
    54b0:	mov	r5, r0
    54b4:	mov	r1, r0
    54b8:	mov	r0, r6
    54bc:	b	5304 <gen_wlanhostop+0x2b8>
    54c0:	mov	r1, #1
    54c4:	bl	504c <gen_wlanhostop>
    54c8:	mov	r1, #2
    54cc:	mov	r6, r0
    54d0:	mov	r0, r5
    54d4:	bl	504c <gen_wlanhostop>
    54d8:	mov	r4, r0
    54dc:	mov	r1, r0
    54e0:	mov	r0, r6
    54e4:	bl	3ca0 <sf_gen_and>
    54e8:	mov	r0, r4
    54ec:	add	sp, sp, #16
    54f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    54f4:	mov	r3, r0
    54f8:	mov	r2, #6
    54fc:	mov	r1, #4
    5500:	mov	r0, #1
    5504:	add	sp, sp, #16
    5508:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    550c:	b	4690 <gen_bcmp>
    5510:	mov	r6, #16
    5514:	mov	r4, #0
    5518:	mov	r3, #4
    551c:	mov	r2, r6
    5520:	str	r3, [sp, #8]
    5524:	mov	r1, r4
    5528:	str	r6, [sp]
    552c:	mov	r3, #12
    5530:	str	r4, [sp, #4]
    5534:	mov	r0, #1
    5538:	bl	2c88 <gen_ncmp>
    553c:	mov	r2, r6
    5540:	mov	r1, r4
    5544:	mov	r7, r0
    5548:	mov	r0, #192	; 0xc0
    554c:	ldr	r3, [r7, #44]	; 0x2c
    5550:	clz	r3, r3
    5554:	lsr	r3, r3, #5
    5558:	str	r3, [r7, #44]	; 0x2c
    555c:	str	r6, [sp]
    5560:	str	r0, [sp, #8]
    5564:	mov	r3, #240	; 0xf0
    5568:	str	r4, [sp, #4]
    556c:	mov	r0, #1
    5570:	bl	2c88 <gen_ncmp>
    5574:	mov	r2, r6
    5578:	mov	r1, r4
    557c:	mov	r8, r0
    5580:	mov	r0, #208	; 0xd0
    5584:	ldr	r3, [r8, #44]	; 0x2c
    5588:	clz	r3, r3
    558c:	lsr	r3, r3, #5
    5590:	str	r3, [r8, #44]	; 0x2c
    5594:	str	r6, [sp]
    5598:	str	r0, [sp, #8]
    559c:	mov	r3, #240	; 0xf0
    55a0:	str	r4, [sp, #4]
    55a4:	mov	r0, #1
    55a8:	bl	2c88 <gen_ncmp>
    55ac:	mov	r6, r0
    55b0:	ldr	r3, [r0, #44]	; 0x2c
    55b4:	clz	r3, r3
    55b8:	lsr	r3, r3, #5
    55bc:	mov	r1, r0
    55c0:	str	r3, [r6, #44]	; 0x2c
    55c4:	mov	r0, r8
    55c8:	bl	3ca0 <sf_gen_and>
    55cc:	mov	r1, r6
    55d0:	mov	r0, r7
    55d4:	bl	49c0 <sf_gen_or>
    55d8:	mov	r3, r5
    55dc:	mov	r2, #6
    55e0:	mov	r1, #10
    55e4:	b	50b8 <gen_wlanhostop+0x6c>
    55e8:	mov	r1, #0
    55ec:	mov	r3, #4
    55f0:	mov	r4, #16
    55f4:	stmib	sp, {r1, r3}
    55f8:	mov	r2, r4
    55fc:	mov	r3, #12
    5600:	str	r4, [sp]
    5604:	mov	r0, #1
    5608:	bl	2c88 <gen_ncmp>
    560c:	mov	r1, r4
    5610:	mov	r3, r5
    5614:	ldr	r2, [r0, #44]	; 0x2c
    5618:	clz	r2, r2
    561c:	lsr	r2, r2, #5
    5620:	str	r2, [r0, #44]	; 0x2c
    5624:	mov	r6, r0
    5628:	mov	r2, #6
    562c:	b	50b8 <gen_wlanhostop+0x6c>
    5630:	bl	f18 <abort@plt>

00005634 <sf_gen_not>:
    5634:	ldr	r3, [r0, #44]	; 0x2c
    5638:	clz	r3, r3
    563c:	lsr	r3, r3, #5
    5640:	str	r3, [r0, #44]	; 0x2c
    5644:	bx	lr

00005648 <sf_gen_portop>:
    5648:	push	{r4, r5, r6, r7, r8, lr}
    564c:	mov	r3, r1
    5650:	mov	r4, r2
    5654:	mov	r1, #9
    5658:	mov	r2, #16
    565c:	mov	r6, r0
    5660:	mov	r0, #3
    5664:	bl	2d1c <gen_cmp>
    5668:	mov	r7, r0
    566c:	bl	2d84 <gen_ipfrag>
    5670:	mov	r5, r0
    5674:	mov	r1, r0
    5678:	mov	r0, r7
    567c:	bl	3ca0 <sf_gen_and>
    5680:	cmp	r4, #4
    5684:	addls	pc, pc, r4, lsl #2
    5688:	b	5768 <sf_gen_portop+0x120>
    568c:	b	5728 <sf_gen_portop+0xe0>
    5690:	b	570c <sf_gen_portop+0xc4>
    5694:	b	56f0 <sf_gen_portop+0xa8>
    5698:	b	5728 <sf_gen_portop+0xe0>
    569c:	b	56a0 <sf_gen_portop+0x58>
    56a0:	mov	r3, r6
    56a4:	mov	r2, #8
    56a8:	mov	r1, #0
    56ac:	mov	r0, #5
    56b0:	bl	2d1c <gen_cmp>
    56b4:	mov	r1, #2
    56b8:	mov	r3, r6
    56bc:	mov	r2, #8
    56c0:	mov	r7, r0
    56c4:	mov	r0, #5
    56c8:	bl	2d1c <gen_cmp>
    56cc:	mov	r4, r0
    56d0:	mov	r1, r0
    56d4:	mov	r0, r7
    56d8:	bl	3ca0 <sf_gen_and>
    56dc:	mov	r0, r5
    56e0:	mov	r1, r4
    56e4:	bl	3ca0 <sf_gen_and>
    56e8:	mov	r0, r4
    56ec:	pop	{r4, r5, r6, r7, r8, pc}
    56f0:	mov	r3, r6
    56f4:	mov	r2, #8
    56f8:	mov	r1, #2
    56fc:	mov	r0, #5
    5700:	bl	2d1c <gen_cmp>
    5704:	mov	r4, r0
    5708:	b	56dc <sf_gen_portop+0x94>
    570c:	mov	r3, r6
    5710:	mov	r2, #8
    5714:	mov	r1, #0
    5718:	mov	r0, #5
    571c:	bl	2d1c <gen_cmp>
    5720:	mov	r4, r0
    5724:	b	56dc <sf_gen_portop+0x94>
    5728:	mov	r3, r6
    572c:	mov	r2, #8
    5730:	mov	r1, #0
    5734:	mov	r0, #5
    5738:	bl	2d1c <gen_cmp>
    573c:	mov	r3, r6
    5740:	mov	r2, #8
    5744:	mov	r1, #2
    5748:	mov	r7, r0
    574c:	mov	r0, #5
    5750:	bl	2d1c <gen_cmp>
    5754:	mov	r4, r0
    5758:	mov	r1, r0
    575c:	mov	r0, r7
    5760:	bl	49c0 <sf_gen_or>
    5764:	b	56dc <sf_gen_portop+0x94>
    5768:	bl	f18 <abort@plt>

0000576c <sf_gen_portop6>:
    576c:	push	{r4, r5, r6, r7, r8, lr}
    5770:	mov	r3, r1
    5774:	mov	r5, r0
    5778:	mov	r4, r2
    577c:	mov	r1, #6
    5780:	mov	r2, #16
    5784:	mov	r0, #3
    5788:	bl	2d1c <gen_cmp>
    578c:	mov	r6, r0
    5790:	cmp	r4, #4
    5794:	addls	pc, pc, r4, lsl #2
    5798:	b	5878 <sf_gen_portop6+0x10c>
    579c:	b	5838 <sf_gen_portop6+0xcc>
    57a0:	b	581c <sf_gen_portop6+0xb0>
    57a4:	b	5800 <sf_gen_portop6+0x94>
    57a8:	b	5838 <sf_gen_portop6+0xcc>
    57ac:	b	57b0 <sf_gen_portop6+0x44>
    57b0:	mov	r3, r5
    57b4:	mov	r2, #8
    57b8:	mov	r1, #0
    57bc:	mov	r0, #6
    57c0:	bl	2d1c <gen_cmp>
    57c4:	mov	r1, #2
    57c8:	mov	r3, r5
    57cc:	mov	r2, #8
    57d0:	mov	r7, r0
    57d4:	mov	r0, #6
    57d8:	bl	2d1c <gen_cmp>
    57dc:	mov	r4, r0
    57e0:	mov	r1, r0
    57e4:	mov	r0, r7
    57e8:	bl	3ca0 <sf_gen_and>
    57ec:	mov	r0, r6
    57f0:	mov	r1, r4
    57f4:	bl	3ca0 <sf_gen_and>
    57f8:	mov	r0, r4
    57fc:	pop	{r4, r5, r6, r7, r8, pc}
    5800:	mov	r3, r5
    5804:	mov	r2, #8
    5808:	mov	r1, #2
    580c:	mov	r0, #6
    5810:	bl	2d1c <gen_cmp>
    5814:	mov	r4, r0
    5818:	b	57ec <sf_gen_portop6+0x80>
    581c:	mov	r3, r5
    5820:	mov	r2, #8
    5824:	mov	r1, #0
    5828:	mov	r0, #6
    582c:	bl	2d1c <gen_cmp>
    5830:	mov	r4, r0
    5834:	b	57ec <sf_gen_portop6+0x80>
    5838:	mov	r3, r5
    583c:	mov	r2, #8
    5840:	mov	r1, #0
    5844:	mov	r0, #6
    5848:	bl	2d1c <gen_cmp>
    584c:	mov	r3, r5
    5850:	mov	r2, #8
    5854:	mov	r1, #2
    5858:	mov	r7, r0
    585c:	mov	r0, #6
    5860:	bl	2d1c <gen_cmp>
    5864:	mov	r4, r0
    5868:	mov	r1, r0
    586c:	mov	r0, r7
    5870:	bl	49c0 <sf_gen_or>
    5874:	b	57ec <sf_gen_portop6+0x80>
    5878:	bl	f18 <abort@plt>

0000587c <sf_gen_portrangeop>:
    587c:	push	{r4, r5, r6, r7, r8, lr}
    5880:	mov	r4, r3
    5884:	mov	r6, r0
    5888:	mov	r3, r2
    588c:	mov	r7, r1
    5890:	mov	r2, #16
    5894:	mov	r1, #9
    5898:	mov	r0, #3
    589c:	bl	2d1c <gen_cmp>
    58a0:	mov	r8, r0
    58a4:	bl	2d84 <gen_ipfrag>
    58a8:	mov	r5, r0
    58ac:	mov	r1, r0
    58b0:	mov	r0, r8
    58b4:	bl	3ca0 <sf_gen_and>
    58b8:	cmp	r4, #4
    58bc:	addls	pc, pc, r4, lsl #2
    58c0:	b	5988 <sf_gen_portrangeop+0x10c>
    58c4:	b	5950 <sf_gen_portrangeop+0xd4>
    58c8:	b	5938 <sf_gen_portrangeop+0xbc>
    58cc:	b	5920 <sf_gen_portrangeop+0xa4>
    58d0:	b	5950 <sf_gen_portrangeop+0xd4>
    58d4:	b	58d8 <sf_gen_portrangeop+0x5c>
    58d8:	mov	r2, r7
    58dc:	mov	r1, r6
    58e0:	mov	r0, #0
    58e4:	bl	48c8 <gen_portrangeatom>
    58e8:	mov	r1, r6
    58ec:	mov	r2, r7
    58f0:	mov	r8, r0
    58f4:	mov	r0, #2
    58f8:	bl	48c8 <gen_portrangeatom>
    58fc:	mov	r4, r0
    5900:	mov	r1, r0
    5904:	mov	r0, r8
    5908:	bl	3ca0 <sf_gen_and>
    590c:	mov	r0, r5
    5910:	mov	r1, r4
    5914:	bl	3ca0 <sf_gen_and>
    5918:	mov	r0, r4
    591c:	pop	{r4, r5, r6, r7, r8, pc}
    5920:	mov	r2, r7
    5924:	mov	r1, r6
    5928:	mov	r0, #2
    592c:	bl	48c8 <gen_portrangeatom>
    5930:	mov	r4, r0
    5934:	b	590c <sf_gen_portrangeop+0x90>
    5938:	mov	r2, r7
    593c:	mov	r1, r6
    5940:	mov	r0, #0
    5944:	bl	48c8 <gen_portrangeatom>
    5948:	mov	r4, r0
    594c:	b	590c <sf_gen_portrangeop+0x90>
    5950:	mov	r2, r7
    5954:	mov	r1, r6
    5958:	mov	r0, #0
    595c:	bl	48c8 <gen_portrangeatom>
    5960:	mov	r1, r6
    5964:	mov	r2, r7
    5968:	mov	r8, r0
    596c:	mov	r0, #2
    5970:	bl	48c8 <gen_portrangeatom>
    5974:	mov	r4, r0
    5978:	mov	r1, r0
    597c:	mov	r0, r8
    5980:	bl	49c0 <sf_gen_or>
    5984:	b	590c <sf_gen_portrangeop+0x90>
    5988:	bl	f18 <abort@plt>

0000598c <sf_gen_portrangeop6>:
    598c:	push	{r4, r5, r6, r7, r8, lr}
    5990:	mov	r4, r3
    5994:	mov	r5, r0
    5998:	mov	r3, r2
    599c:	mov	r6, r1
    59a0:	mov	r2, #16
    59a4:	mov	r1, #6
    59a8:	mov	r0, #3
    59ac:	bl	2d1c <gen_cmp>
    59b0:	mov	r7, r0
    59b4:	cmp	r4, #4
    59b8:	addls	pc, pc, r4, lsl #2
    59bc:	b	5a84 <sf_gen_portrangeop6+0xf8>
    59c0:	b	5a4c <sf_gen_portrangeop6+0xc0>
    59c4:	b	5a34 <sf_gen_portrangeop6+0xa8>
    59c8:	b	5a1c <sf_gen_portrangeop6+0x90>
    59cc:	b	5a4c <sf_gen_portrangeop6+0xc0>
    59d0:	b	59d4 <sf_gen_portrangeop6+0x48>
    59d4:	mov	r2, r6
    59d8:	mov	r1, r5
    59dc:	mov	r0, #0
    59e0:	bl	4944 <gen_portrangeatom6>
    59e4:	mov	r1, r5
    59e8:	mov	r2, r6
    59ec:	mov	r8, r0
    59f0:	mov	r0, #2
    59f4:	bl	4944 <gen_portrangeatom6>
    59f8:	mov	r4, r0
    59fc:	mov	r1, r0
    5a00:	mov	r0, r8
    5a04:	bl	3ca0 <sf_gen_and>
    5a08:	mov	r0, r7
    5a0c:	mov	r1, r4
    5a10:	bl	3ca0 <sf_gen_and>
    5a14:	mov	r0, r4
    5a18:	pop	{r4, r5, r6, r7, r8, pc}
    5a1c:	mov	r2, r6
    5a20:	mov	r1, r5
    5a24:	mov	r0, #2
    5a28:	bl	4944 <gen_portrangeatom6>
    5a2c:	mov	r4, r0
    5a30:	b	5a08 <sf_gen_portrangeop6+0x7c>
    5a34:	mov	r2, r6
    5a38:	mov	r1, r5
    5a3c:	mov	r0, #0
    5a40:	bl	4944 <gen_portrangeatom6>
    5a44:	mov	r4, r0
    5a48:	b	5a08 <sf_gen_portrangeop6+0x7c>
    5a4c:	mov	r2, r6
    5a50:	mov	r1, r5
    5a54:	mov	r0, #0
    5a58:	bl	4944 <gen_portrangeatom6>
    5a5c:	mov	r1, r5
    5a60:	mov	r2, r6
    5a64:	mov	r8, r0
    5a68:	mov	r0, #2
    5a6c:	bl	4944 <gen_portrangeatom6>
    5a70:	mov	r4, r0
    5a74:	mov	r1, r0
    5a78:	mov	r0, r8
    5a7c:	bl	49c0 <sf_gen_or>
    5a80:	b	5a08 <sf_gen_portrangeop6+0x7c>
    5a84:	bl	f18 <abort@plt>

00005a88 <sf_gen_ecode>:
    5a88:	push	{r4, r5, r6, lr}
    5a8c:	uxtb	r2, r1
    5a90:	sub	sp, sp, #8
    5a94:	cmp	r2, #1
    5a98:	str	r1, [sp, #4]
    5a9c:	bhi	5bdc <sf_gen_ecode+0x154>
    5aa0:	ldrb	r2, [sp, #5]
    5aa4:	cmp	r2, #1
    5aa8:	bne	5bdc <sf_gen_ecode+0x154>
    5aac:	lsr	r3, r1, #16
    5ab0:	ldr	r1, [pc, #304]	; 5be8 <sf_gen_ecode+0x160>
    5ab4:	uxtb	r4, r3
    5ab8:	add	r1, pc, r1
    5abc:	mov	r5, r0
    5ac0:	ldr	r3, [r1, #856]	; 0x358
    5ac4:	cmp	r3, #119	; 0x77
    5ac8:	beq	5bb0 <sf_gen_ecode+0x128>
    5acc:	bgt	5af4 <sf_gen_ecode+0x6c>
    5ad0:	cmp	r3, #6
    5ad4:	beq	5b7c <sf_gen_ecode+0xf4>
    5ad8:	ble	5bc4 <sf_gen_ecode+0x13c>
    5adc:	cmp	r3, #10
    5ae0:	bne	5b8c <sf_gen_ecode+0x104>
    5ae4:	mov	r1, r4
    5ae8:	add	sp, sp, #8
    5aec:	pop	{r4, r5, r6, lr}
    5af0:	b	4a40 <gen_fhostop>
    5af4:	cmp	r3, #127	; 0x7f
    5af8:	beq	5bb0 <sf_gen_ecode+0x128>
    5afc:	bgt	5ba0 <sf_gen_ecode+0x118>
    5b00:	cmp	r3, #122	; 0x7a
    5b04:	beq	5b6c <sf_gen_ecode+0xe4>
    5b08:	cmp	r3, #123	; 0x7b
    5b0c:	bne	5b94 <sf_gen_ecode+0x10c>
    5b10:	ldr	r3, [r1, #908]	; 0x38c
    5b14:	cmp	r3, #0
    5b18:	beq	5bdc <sf_gen_ecode+0x154>
    5b1c:	mov	r0, r2
    5b20:	mov	r3, #65280	; 0xff00
    5b24:	mov	r2, #8
    5b28:	mov	r1, #4
    5b2c:	bl	2d1c <gen_cmp>
    5b30:	mov	r1, r4
    5b34:	mov	r6, r0
    5b38:	ldr	r3, [r0, #44]	; 0x2c
    5b3c:	clz	r3, r3
    5b40:	lsr	r3, r3, #5
    5b44:	str	r3, [r6, #44]	; 0x2c
    5b48:	mov	r0, r5
    5b4c:	bl	4c74 <gen_ehostop>
    5b50:	mov	r4, r0
    5b54:	mov	r1, r0
    5b58:	mov	r0, r6
    5b5c:	bl	3ca0 <sf_gen_and>
    5b60:	mov	r0, r4
    5b64:	add	sp, sp, #8
    5b68:	pop	{r4, r5, r6, pc}
    5b6c:	mov	r1, r4
    5b70:	add	sp, sp, #8
    5b74:	pop	{r4, r5, r6, lr}
    5b78:	b	4bb8 <gen_ipfchostop>
    5b7c:	mov	r1, r4
    5b80:	add	sp, sp, #8
    5b84:	pop	{r4, r5, r6, lr}
    5b88:	b	4afc <gen_thostop>
    5b8c:	cmp	r3, #105	; 0x69
    5b90:	beq	5bb0 <sf_gen_ecode+0x128>
    5b94:	ldr	r0, [pc, #80]	; 5bec <sf_gen_ecode+0x164>
    5b98:	add	r0, pc, r0
    5b9c:	bl	2454 <sf_bpf_error>
    5ba0:	cmp	r3, #163	; 0xa3
    5ba4:	beq	5bb0 <sf_gen_ecode+0x128>
    5ba8:	cmp	r3, #192	; 0xc0
    5bac:	bne	5b94 <sf_gen_ecode+0x10c>
    5bb0:	mov	r1, r4
    5bb4:	mov	r0, r5
    5bb8:	add	sp, sp, #8
    5bbc:	pop	{r4, r5, r6, lr}
    5bc0:	b	504c <gen_wlanhostop>
    5bc4:	cmp	r3, #1
    5bc8:	bne	5b94 <sf_gen_ecode+0x10c>
    5bcc:	mov	r1, r4
    5bd0:	add	sp, sp, #8
    5bd4:	pop	{r4, r5, r6, lr}
    5bd8:	b	4c74 <gen_ehostop>
    5bdc:	ldr	r0, [pc, #12]	; 5bf0 <sf_gen_ecode+0x168>
    5be0:	add	r0, pc, r0
    5be4:	bl	2454 <sf_bpf_error>
    5be8:	.word	0x0002a8b0
    5bec:	.word	0x0000d178
    5bf0:	.word	0x0000d18c

00005bf4 <sf_append>:
    5bf4:	b	5bfc <sf_append+0x8>
    5bf8:	mov	r0, r3
    5bfc:	ldr	r3, [r0, #16]
    5c00:	cmp	r3, #0
    5c04:	bne	5bf8 <sf_append+0x4>
    5c08:	str	r1, [r0, #16]
    5c0c:	bx	lr

00005c10 <sf_gen_relation>:
    5c10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    5c14:	mov	sl, r0
    5c18:	mov	r0, #20
    5c1c:	mov	r5, r1
    5c20:	mov	r6, r2
    5c24:	mov	r9, r3
    5c28:	bl	2494 <newchunk>
    5c2c:	mov	r3, #97	; 0x61
    5c30:	str	r3, [r0]
    5c34:	mov	r7, r0
    5c38:	ldr	r3, [r6, #8]
    5c3c:	mov	r0, #20
    5c40:	str	r3, [r7, #12]
    5c44:	bl	2494 <newchunk>
    5c48:	mov	r3, #96	; 0x60
    5c4c:	cmp	sl, #16
    5c50:	str	r3, [r0]
    5c54:	ldr	r3, [r5, #8]
    5c58:	mov	r8, r0
    5c5c:	str	r3, [r0, #12]
    5c60:	beq	5d48 <sf_gen_relation+0x138>
    5c64:	mov	r0, #208	; 0xd0
    5c68:	bl	2494 <newchunk>
    5c6c:	orr	sl, sl, #13
    5c70:	mov	r4, r0
    5c74:	str	r0, [r4, #96]	; 0x60
    5c78:	str	sl, [r0, #8]
    5c7c:	cmp	r9, #0
    5c80:	mov	r0, r7
    5c84:	ldrne	r3, [r4, #44]	; 0x2c
    5c88:	clzne	r3, r3
    5c8c:	lsrne	r3, r3, #5
    5c90:	strne	r3, [r4, #44]	; 0x2c
    5c94:	b	5c9c <sf_gen_relation+0x8c>
    5c98:	mov	r0, r3
    5c9c:	ldr	r3, [r0, #16]
    5ca0:	cmp	r3, #0
    5ca4:	bne	5c98 <sf_gen_relation+0x88>
    5ca8:	str	r8, [r0, #16]
    5cac:	ldr	r0, [r6, #4]
    5cb0:	b	5cb8 <sf_gen_relation+0xa8>
    5cb4:	mov	r0, r3
    5cb8:	ldr	r3, [r0, #16]
    5cbc:	cmp	r3, #0
    5cc0:	bne	5cb4 <sf_gen_relation+0xa4>
    5cc4:	str	r7, [r0, #16]
    5cc8:	ldr	r0, [r5, #4]
    5ccc:	ldr	r2, [r6, #4]
    5cd0:	b	5cd8 <sf_gen_relation+0xc8>
    5cd4:	mov	r0, r3
    5cd8:	ldr	r3, [r0, #16]
    5cdc:	cmp	r3, #0
    5ce0:	bne	5cd4 <sf_gen_relation+0xc4>
    5ce4:	str	r2, [r0, #16]
    5ce8:	ldr	r1, [r5, #4]
    5cec:	ldr	r2, [pc, #176]	; 5da4 <sf_gen_relation+0x194>
    5cf0:	str	r1, [r4, #4]
    5cf4:	ldr	r1, [r5, #8]
    5cf8:	add	r2, pc, r2
    5cfc:	add	r1, r2, r1, lsl #2
    5d00:	str	r3, [r1, #792]	; 0x318
    5d04:	ldr	r1, [r6, #8]
    5d08:	add	r2, r2, r1, lsl #2
    5d0c:	str	r3, [r2, #792]	; 0x318
    5d10:	ldr	r0, [r5]
    5d14:	ldr	r5, [r6]
    5d18:	cmp	r0, #0
    5d1c:	beq	5d94 <sf_gen_relation+0x184>
    5d20:	cmp	r5, #0
    5d24:	moveq	r5, r0
    5d28:	beq	5d34 <sf_gen_relation+0x124>
    5d2c:	mov	r1, r5
    5d30:	bl	3ca0 <sf_gen_and>
    5d34:	mov	r0, r5
    5d38:	mov	r1, r4
    5d3c:	bl	3ca0 <sf_gen_and>
    5d40:	mov	r0, r4
    5d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5d48:	mov	r0, #20
    5d4c:	bl	2494 <newchunk>
    5d50:	mov	r3, #28
    5d54:	str	r3, [r0]
    5d58:	mov	sl, r0
    5d5c:	mov	r0, #208	; 0xd0
    5d60:	bl	2494 <newchunk>
    5d64:	mov	r3, #21
    5d68:	mov	r2, r8
    5d6c:	mov	r4, r0
    5d70:	str	r0, [r4, #96]	; 0x60
    5d74:	str	r3, [r0, #8]
    5d78:	b	5d80 <sf_gen_relation+0x170>
    5d7c:	mov	r2, r3
    5d80:	ldr	r3, [r2, #16]
    5d84:	cmp	r3, #0
    5d88:	bne	5d7c <sf_gen_relation+0x16c>
    5d8c:	str	sl, [r2, #16]
    5d90:	b	5c7c <sf_gen_relation+0x6c>
    5d94:	cmp	r5, #0
    5d98:	bne	5d34 <sf_gen_relation+0x124>
    5d9c:	mov	r0, r4
    5da0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    5da4:	.word	0x0002a670

00005da8 <sf_gen_loadlen>:
    5da8:	push	{r4, r5, r6, lr}
    5dac:	bl	26f0 <alloc_reg>
    5db0:	mov	r6, r0
    5db4:	mov	r0, #12
    5db8:	bl	2494 <newchunk>
    5dbc:	mov	r4, r0
    5dc0:	mov	r0, #20
    5dc4:	bl	2494 <newchunk>
    5dc8:	mov	r3, #128	; 0x80
    5dcc:	mov	r5, r0
    5dd0:	str	r3, [r0]
    5dd4:	mov	r0, #20
    5dd8:	bl	2494 <newchunk>
    5ddc:	mov	r2, #2
    5de0:	mov	r3, r0
    5de4:	str	r2, [r0]
    5de8:	str	r3, [r5, #16]
    5dec:	mov	r0, r4
    5df0:	str	r6, [r3, #12]
    5df4:	stmib	r4, {r5, r6}
    5df8:	pop	{r4, r5, r6, pc}

00005dfc <sf_gen_loadi>:
    5dfc:	push	{r4, r5, r6, r7, r8, lr}
    5e00:	mov	r7, r0
    5e04:	mov	r0, #12
    5e08:	bl	2494 <newchunk>
    5e0c:	mov	r5, r0
    5e10:	bl	26f0 <alloc_reg>
    5e14:	mov	r6, r0
    5e18:	mov	r0, #20
    5e1c:	bl	2494 <newchunk>
    5e20:	mov	r3, #0
    5e24:	mov	r4, r0
    5e28:	str	r7, [r0, #12]
    5e2c:	str	r3, [r0]
    5e30:	mov	r0, #20
    5e34:	bl	2494 <newchunk>
    5e38:	mov	r2, #2
    5e3c:	mov	r3, r0
    5e40:	str	r2, [r0]
    5e44:	str	r3, [r4, #16]
    5e48:	mov	r0, r5
    5e4c:	str	r6, [r3, #12]
    5e50:	stmib	r5, {r4, r6}
    5e54:	pop	{r4, r5, r6, r7, r8, pc}

00005e58 <sf_gen_neg>:
    5e58:	push	{r4, r5, r6, lr}
    5e5c:	mov	r5, r0
    5e60:	mov	r0, #20
    5e64:	bl	2494 <newchunk>
    5e68:	mov	r3, #96	; 0x60
    5e6c:	str	r3, [r0]
    5e70:	ldr	r3, [r5, #8]
    5e74:	str	r3, [r0, #12]
    5e78:	ldr	r3, [r5, #4]
    5e7c:	b	5e84 <sf_gen_neg+0x2c>
    5e80:	mov	r3, r4
    5e84:	ldr	r4, [r3, #16]
    5e88:	cmp	r4, #0
    5e8c:	bne	5e80 <sf_gen_neg+0x28>
    5e90:	str	r0, [r3, #16]
    5e94:	mov	r0, #20
    5e98:	bl	2494 <newchunk>
    5e9c:	mov	r3, #132	; 0x84
    5ea0:	str	r4, [r0, #12]
    5ea4:	str	r3, [r0]
    5ea8:	ldr	r2, [r5, #4]
    5eac:	b	5eb4 <sf_gen_neg+0x5c>
    5eb0:	mov	r2, r3
    5eb4:	ldr	r3, [r2, #16]
    5eb8:	cmp	r3, #0
    5ebc:	bne	5eb0 <sf_gen_neg+0x58>
    5ec0:	str	r0, [r2, #16]
    5ec4:	mov	r0, #20
    5ec8:	bl	2494 <newchunk>
    5ecc:	mov	r3, #2
    5ed0:	str	r3, [r0]
    5ed4:	ldr	r3, [r5, #8]
    5ed8:	str	r3, [r0, #12]
    5edc:	ldr	r2, [r5, #4]
    5ee0:	b	5ee8 <sf_gen_neg+0x90>
    5ee4:	mov	r2, r3
    5ee8:	ldr	r3, [r2, #16]
    5eec:	cmp	r3, #0
    5ef0:	bne	5ee4 <sf_gen_neg+0x8c>
    5ef4:	str	r0, [r2, #16]
    5ef8:	mov	r0, r5
    5efc:	pop	{r4, r5, r6, pc}

00005f00 <sf_gen_arth>:
    5f00:	push	{r4, r5, r6, r7, r8, lr}
    5f04:	mov	r8, r0
    5f08:	mov	r0, #20
    5f0c:	mov	r4, r1
    5f10:	mov	r5, r2
    5f14:	bl	2494 <newchunk>
    5f18:	mov	r3, #97	; 0x61
    5f1c:	orr	r8, r8, #12
    5f20:	str	r3, [r0]
    5f24:	mov	r6, r0
    5f28:	ldr	r3, [r5, #8]
    5f2c:	mov	r0, #20
    5f30:	str	r3, [r6, #12]
    5f34:	bl	2494 <newchunk>
    5f38:	mov	r3, #96	; 0x60
    5f3c:	str	r3, [r0]
    5f40:	mov	r7, r0
    5f44:	ldr	r3, [r4, #8]
    5f48:	mov	r0, #20
    5f4c:	str	r3, [r7, #12]
    5f50:	bl	2494 <newchunk>
    5f54:	mov	r1, r7
    5f58:	str	r8, [r0]
    5f5c:	b	5f64 <sf_gen_arth+0x64>
    5f60:	mov	r1, r3
    5f64:	ldr	r3, [r1, #16]
    5f68:	cmp	r3, #0
    5f6c:	bne	5f60 <sf_gen_arth+0x60>
    5f70:	str	r0, [r1, #16]
    5f74:	mov	r0, r6
    5f78:	b	5f80 <sf_gen_arth+0x80>
    5f7c:	mov	r0, r3
    5f80:	ldr	r3, [r0, #16]
    5f84:	cmp	r3, #0
    5f88:	bne	5f7c <sf_gen_arth+0x7c>
    5f8c:	str	r7, [r0, #16]
    5f90:	ldr	r0, [r5, #4]
    5f94:	b	5f9c <sf_gen_arth+0x9c>
    5f98:	mov	r0, r3
    5f9c:	ldr	r3, [r0, #16]
    5fa0:	cmp	r3, #0
    5fa4:	bne	5f98 <sf_gen_arth+0x98>
    5fa8:	str	r6, [r0, #16]
    5fac:	ldr	r0, [r4, #4]
    5fb0:	ldr	r2, [r5, #4]
    5fb4:	b	5fbc <sf_gen_arth+0xbc>
    5fb8:	mov	r0, r3
    5fbc:	ldr	r3, [r0, #16]
    5fc0:	cmp	r3, #0
    5fc4:	bne	5fb8 <sf_gen_arth+0xb8>
    5fc8:	str	r2, [r0, #16]
    5fcc:	ldr	r1, [pc, #92]	; 6030 <sf_gen_arth+0x130>
    5fd0:	ldr	r2, [r4, #8]
    5fd4:	add	r1, pc, r1
    5fd8:	mov	r0, #20
    5fdc:	add	r2, r1, r2, lsl #2
    5fe0:	str	r3, [r2, #792]	; 0x318
    5fe4:	ldr	r2, [r5, #8]
    5fe8:	add	r1, r1, r2, lsl #2
    5fec:	str	r3, [r1, #792]	; 0x318
    5ff0:	bl	2494 <newchunk>
    5ff4:	mov	r3, #2
    5ff8:	str	r3, [r0]
    5ffc:	mov	r5, r0
    6000:	bl	26f0 <alloc_reg>
    6004:	str	r0, [r5, #12]
    6008:	str	r0, [r4, #8]
    600c:	ldr	r2, [r4, #4]
    6010:	b	6018 <sf_gen_arth+0x118>
    6014:	mov	r2, r3
    6018:	ldr	r3, [r2, #16]
    601c:	cmp	r3, #0
    6020:	bne	6014 <sf_gen_arth+0x114>
    6024:	str	r5, [r2, #16]
    6028:	mov	r0, r4
    602c:	pop	{r4, r5, r6, r7, r8, pc}
    6030:	.word	0x0002a394

00006034 <sf_gen_greater>:
    6034:	push	{r4, r5, r6, lr}
    6038:	mov	r5, r0
    603c:	mov	r0, #20
    6040:	bl	2494 <newchunk>
    6044:	mov	r3, #128	; 0x80
    6048:	mov	r4, r0
    604c:	str	r3, [r0]
    6050:	mov	r0, #208	; 0xd0
    6054:	bl	2494 <newchunk>
    6058:	mov	r2, #53	; 0x35
    605c:	mov	r3, r0
    6060:	str	r5, [r0, #20]
    6064:	str	r0, [r3, #96]	; 0x60
    6068:	str	r4, [r0, #4]
    606c:	str	r2, [r0, #8]
    6070:	pop	{r4, r5, r6, pc}

00006074 <sf_gen_less>:
    6074:	push	{r4, r5, r6, lr}
    6078:	mov	r5, r0
    607c:	mov	r0, #20
    6080:	bl	2494 <newchunk>
    6084:	mov	r3, #128	; 0x80
    6088:	mov	r4, r0
    608c:	str	r3, [r0]
    6090:	mov	r0, #208	; 0xd0
    6094:	bl	2494 <newchunk>
    6098:	mov	r1, #37	; 0x25
    609c:	mov	r3, r0
    60a0:	ldr	r2, [r0, #44]	; 0x2c
    60a4:	clz	r2, r2
    60a8:	lsr	r2, r2, #5
    60ac:	str	r5, [r0, #20]
    60b0:	str	r0, [r3, #96]	; 0x60
    60b4:	str	r4, [r0, #4]
    60b8:	str	r1, [r0, #8]
    60bc:	str	r2, [r0, #44]	; 0x2c
    60c0:	pop	{r4, r5, r6, pc}

000060c4 <sf_gen_byteop>:
    60c4:	cmp	r0, #61	; 0x3d
    60c8:	push	{r4, r5, lr}
    60cc:	mov	r4, r2
    60d0:	sub	sp, sp, #20
    60d4:	beq	6198 <sf_gen_byteop+0xd4>
    60d8:	bgt	6110 <sf_gen_byteop+0x4c>
    60dc:	cmp	r0, #38	; 0x26
    60e0:	beq	6180 <sf_gen_byteop+0xbc>
    60e4:	cmp	r0, #60	; 0x3c
    60e8:	bne	6168 <sf_gen_byteop+0xa4>
    60ec:	mov	r0, #1
    60f0:	mov	r3, #48	; 0x30
    60f4:	str	r3, [sp]
    60f8:	stmib	sp, {r0, r4}
    60fc:	mvn	r3, #0
    6100:	mov	r2, #16
    6104:	bl	2c88 <gen_ncmp>
    6108:	add	sp, sp, #20
    610c:	pop	{r4, r5, pc}
    6110:	cmp	r0, #62	; 0x3e
    6114:	beq	616c <sf_gen_byteop+0xa8>
    6118:	cmp	r0, #124	; 0x7c
    611c:	bne	6168 <sf_gen_byteop+0xa4>
    6120:	mov	r0, #20
    6124:	bl	2494 <newchunk>
    6128:	mov	r3, #68	; 0x44
    612c:	mov	r5, r0
    6130:	str	r3, [r0]
    6134:	str	r4, [r5, #12]
    6138:	mov	r0, #208	; 0xd0
    613c:	bl	2494 <newchunk>
    6140:	mov	r2, #21
    6144:	ldr	r3, [r0, #44]	; 0x2c
    6148:	clz	r3, r3
    614c:	lsr	r3, r3, #5
    6150:	str	r0, [r0, #96]	; 0x60
    6154:	str	r5, [r0, #4]
    6158:	str	r2, [r0, #8]
    615c:	str	r3, [r0, #44]	; 0x2c
    6160:	add	sp, sp, #20
    6164:	pop	{r4, r5, pc}
    6168:	bl	f18 <abort@plt>
    616c:	mov	r0, r1
    6170:	mov	r1, #16
    6174:	add	sp, sp, #20
    6178:	pop	{r4, r5, lr}
    617c:	b	2900 <gen_cmp_gt.constprop.10>
    6180:	mov	r0, #20
    6184:	bl	2494 <newchunk>
    6188:	mov	r3, #84	; 0x54
    618c:	mov	r5, r0
    6190:	str	r3, [r0]
    6194:	b	6134 <sf_gen_byteop+0x70>
    6198:	mov	r3, r2
    619c:	mov	r0, #1
    61a0:	mov	r2, #16
    61a4:	add	sp, sp, #20
    61a8:	pop	{r4, r5, lr}
    61ac:	b	2d1c <gen_cmp>

000061b0 <sf_gen_pf_ifname>:
    61b0:	ldr	r0, [pc, #8]	; 61c0 <sf_gen_pf_ifname+0x10>
    61b4:	push	{r4, lr}
    61b8:	add	r0, pc, r0
    61bc:	bl	2454 <sf_bpf_error>
    61c0:	.word	0x0000cbe4

000061c4 <sf_gen_pf_ruleset>:
    61c4:	ldr	r0, [pc, #8]	; 61d4 <sf_gen_pf_ruleset+0x10>
    61c8:	push	{r4, lr}
    61cc:	add	r0, pc, r0
    61d0:	bl	2454 <sf_bpf_error>
    61d4:	.word	0x0000cbf8

000061d8 <sf_gen_pf_rnr>:
    61d8:	ldr	r0, [pc, #8]	; 61e8 <sf_gen_pf_rnr+0x10>
    61dc:	push	{r4, lr}
    61e0:	add	r0, pc, r0
    61e4:	bl	2454 <sf_bpf_error>
    61e8:	.word	0x0000cbe4

000061ec <sf_gen_pf_srnr>:
    61ec:	ldr	r0, [pc, #8]	; 61fc <sf_gen_pf_srnr+0x10>
    61f0:	push	{r4, lr}
    61f4:	add	r0, pc, r0
    61f8:	bl	2454 <sf_bpf_error>
    61fc:	.word	0x0000cbd0

00006200 <sf_gen_pf_reason>:
    6200:	ldr	r0, [pc, #8]	; 6210 <sf_gen_pf_reason+0x10>
    6204:	push	{r4, lr}
    6208:	add	r0, pc, r0
    620c:	bl	2454 <sf_bpf_error>
    6210:	.word	0x0000cbbc

00006214 <sf_gen_pf_action>:
    6214:	ldr	r0, [pc, #8]	; 6224 <sf_gen_pf_action+0x10>
    6218:	push	{r4, lr}
    621c:	add	r0, pc, r0
    6220:	bl	2454 <sf_bpf_error>
    6224:	.word	0x0000cba8

00006228 <sf_gen_p80211_type>:
    6228:	ldr	r2, [pc, #104]	; 6298 <sf_gen_p80211_type+0x70>
    622c:	push	{lr}		; (str lr, [sp, #-4]!)
    6230:	add	r2, pc, r2
    6234:	sub	sp, sp, #20
    6238:	ldr	r2, [r2, #856]	; 0x358
    623c:	cmp	r2, #119	; 0x77
    6240:	beq	6258 <sf_gen_p80211_type+0x30>
    6244:	ble	6284 <sf_gen_p80211_type+0x5c>
    6248:	cmp	r2, #127	; 0x7f
    624c:	beq	6258 <sf_gen_p80211_type+0x30>
    6250:	cmp	r2, #163	; 0xa3
    6254:	bne	628c <sf_gen_p80211_type+0x64>
    6258:	mov	ip, #0
    625c:	mov	r2, #16
    6260:	str	r0, [sp, #8]
    6264:	mov	r3, r1
    6268:	str	ip, [sp, #4]
    626c:	mov	r1, ip
    6270:	str	r2, [sp]
    6274:	mov	r0, #1
    6278:	bl	2c88 <gen_ncmp>
    627c:	add	sp, sp, #20
    6280:	pop	{pc}		; (ldr pc, [sp], #4)
    6284:	cmp	r2, #105	; 0x69
    6288:	beq	6258 <sf_gen_p80211_type+0x30>
    628c:	ldr	r0, [pc, #8]	; 629c <sf_gen_p80211_type+0x74>
    6290:	add	r0, pc, r0
    6294:	bl	2454 <sf_bpf_error>
    6298:	.word	0x0002a138
    629c:	.word	0x0000cb6c

000062a0 <sf_gen_p80211_fcdir>:
    62a0:	ldr	r3, [pc, #100]	; 630c <sf_gen_p80211_fcdir+0x6c>
    62a4:	push	{lr}		; (str lr, [sp, #-4]!)
    62a8:	add	r3, pc, r3
    62ac:	sub	sp, sp, #20
    62b0:	ldr	r3, [r3, #856]	; 0x358
    62b4:	cmp	r3, #119	; 0x77
    62b8:	beq	62d0 <sf_gen_p80211_fcdir+0x30>
    62bc:	ble	62f8 <sf_gen_p80211_fcdir+0x58>
    62c0:	cmp	r3, #127	; 0x7f
    62c4:	beq	62d0 <sf_gen_p80211_fcdir+0x30>
    62c8:	cmp	r3, #163	; 0xa3
    62cc:	bne	6300 <sf_gen_p80211_fcdir+0x60>
    62d0:	mov	r2, #16
    62d4:	mov	r3, #0
    62d8:	mov	r1, #1
    62dc:	str	r0, [sp, #8]
    62e0:	stm	sp, {r2, r3}
    62e4:	mov	r0, r1
    62e8:	mov	r3, #3
    62ec:	bl	2c88 <gen_ncmp>
    62f0:	add	sp, sp, #20
    62f4:	pop	{pc}		; (ldr pc, [sp], #4)
    62f8:	cmp	r3, #105	; 0x69
    62fc:	beq	62d0 <sf_gen_p80211_fcdir+0x30>
    6300:	ldr	r0, [pc, #8]	; 6310 <sf_gen_p80211_fcdir+0x70>
    6304:	add	r0, pc, r0
    6308:	bl	2454 <sf_bpf_error>
    630c:	.word	0x0002a0c0
    6310:	.word	0x0000cb2c

00006314 <sf_gen_acode>:
    6314:	ldr	r3, [pc, #96]	; 637c <sf_gen_acode+0x68>
    6318:	push	{lr}		; (str lr, [sp, #-4]!)
    631c:	add	r3, pc, r3
    6320:	sub	sp, sp, #12
    6324:	str	r1, [sp, #4]
    6328:	ldr	r3, [r3, #856]	; 0x358
    632c:	cmp	r3, #7
    6330:	beq	633c <sf_gen_acode+0x28>
    6334:	cmp	r3, #129	; 0x81
    6338:	bne	6364 <sf_gen_acode+0x50>
    633c:	ldrb	r3, [sp, #4]
    6340:	cmp	r3, #1
    6344:	bhi	6370 <sf_gen_acode+0x5c>
    6348:	ldrb	r3, [sp, #5]
    634c:	cmp	r3, #1
    6350:	bne	6370 <sf_gen_acode+0x5c>
    6354:	ldrb	r1, [sp, #6]
    6358:	add	sp, sp, #12
    635c:	pop	{lr}		; (ldr lr, [sp], #4)
    6360:	b	4d4c <gen_ahostop>
    6364:	ldr	r0, [pc, #20]	; 6380 <sf_gen_acode+0x6c>
    6368:	add	r0, pc, r0
    636c:	bl	2454 <sf_bpf_error>
    6370:	ldr	r0, [pc, #12]	; 6384 <sf_gen_acode+0x70>
    6374:	add	r0, pc, r0
    6378:	bl	2454 <sf_bpf_error>
    637c:	.word	0x0002a04c
    6380:	.word	0x0000cb28
    6384:	.word	0x0000caf0

00006388 <sf_gen_vlan>:
    6388:	ldr	r2, [pc, #204]	; 645c <sf_gen_vlan+0xd4>
    638c:	push	{r4, r5, r6, r7, lr}
    6390:	add	r2, pc, r2
    6394:	sub	sp, sp, #20
    6398:	ldr	r5, [r2, #4]
    639c:	cmp	r5, #0
    63a0:	bne	6440 <sf_gen_vlan+0xb8>
    63a4:	ldr	r3, [pc, #180]	; 6460 <sf_gen_vlan+0xd8>
    63a8:	mov	r7, r0
    63ac:	add	r3, pc, r3
    63b0:	ldr	r0, [r3, #856]	; 0x358
    63b4:	ldr	r1, [r3, #872]	; 0x368
    63b8:	cmp	r0, #1
    63bc:	str	r1, [r2]
    63c0:	bne	644c <sf_gen_vlan+0xc4>
    63c4:	ldr	r4, [r3, #952]	; 0x3b8
    63c8:	mov	r2, #8
    63cc:	mov	r1, r4
    63d0:	mov	r3, #33024	; 0x8100
    63d4:	bl	2d1c <gen_cmp>
    63d8:	cmp	r7, #0
    63dc:	mov	r6, r0
    63e0:	blt	6418 <sf_gen_vlan+0x90>
    63e4:	mov	r3, #16
    63e8:	mov	r1, r5
    63ec:	stmib	sp, {r5, r7}
    63f0:	str	r3, [sp]
    63f4:	mov	r2, #8
    63f8:	ldr	r3, [pc, #100]	; 6464 <sf_gen_vlan+0xdc>
    63fc:	mov	r0, #2
    6400:	bl	2c88 <gen_ncmp>
    6404:	mov	r5, r0
    6408:	mov	r1, r0
    640c:	mov	r0, r6
    6410:	bl	3ca0 <sf_gen_and>
    6414:	mov	r6, r5
    6418:	ldr	r3, [pc, #72]	; 6468 <sf_gen_vlan+0xe0>
    641c:	add	r4, r4, #4
    6420:	add	r3, pc, r3
    6424:	mov	r0, r6
    6428:	ldr	r2, [r3, #876]	; 0x36c
    642c:	str	r4, [r3, #952]	; 0x3b8
    6430:	add	r2, r2, #4
    6434:	str	r2, [r3, #876]	; 0x36c
    6438:	add	sp, sp, #20
    643c:	pop	{r4, r5, r6, r7, pc}
    6440:	ldr	r0, [pc, #36]	; 646c <sf_gen_vlan+0xe4>
    6444:	add	r0, pc, r0
    6448:	bl	2454 <sf_bpf_error>
    644c:	mov	r1, r0
    6450:	ldr	r0, [pc, #24]	; 6470 <sf_gen_vlan+0xe8>
    6454:	add	r0, pc, r0
    6458:	bl	2454 <sf_bpf_error>
    645c:	.word	0x00029ee8
    6460:	.word	0x00029fbc
    6464:	.word	0x00000fff
    6468:	.word	0x00029f48
    646c:	.word	0x0000ca6c
    6470:	.word	0x0000ca78

00006474 <sf_gen_atmfield_code>:
    6474:	sub	r0, r0, #51	; 0x33
    6478:	push	{lr}		; (str lr, [sp, #-4]!)
    647c:	sub	sp, sp, #20
    6480:	cmp	r0, #4
    6484:	addls	pc, pc, r0, lsl #2
    6488:	b	6504 <sf_gen_atmfield_code+0x90>
    648c:	b	64e4 <sf_gen_atmfield_code+0x70>
    6490:	b	6508 <sf_gen_atmfield_code+0x94>
    6494:	b	654c <sf_gen_atmfield_code+0xd8>
    6498:	b	6584 <sf_gen_atmfield_code+0x110>
    649c:	b	64a0 <sf_gen_atmfield_code+0x2c>
    64a0:	ldr	r0, [pc, #312]	; 65e0 <sf_gen_atmfield_code+0x16c>
    64a4:	add	r0, pc, r0
    64a8:	ldr	ip, [r0, #904]	; 0x388
    64ac:	cmp	ip, #0
    64b0:	beq	65bc <sf_gen_atmfield_code+0x148>
    64b4:	ldr	r0, [r0, #920]	; 0x398
    64b8:	cmn	r0, #1
    64bc:	beq	6504 <sf_gen_atmfield_code+0x90>
    64c0:	stm	sp, {r2, r3}
    64c4:	str	r1, [sp, #8]
    64c8:	mvn	r3, #0
    64cc:	mov	r1, r0
    64d0:	mov	r2, #16
    64d4:	mov	r0, #1
    64d8:	bl	2c88 <gen_ncmp>
    64dc:	add	sp, sp, #20
    64e0:	pop	{pc}		; (ldr pc, [sp], #4)
    64e4:	ldr	r0, [pc, #248]	; 65e4 <sf_gen_atmfield_code+0x170>
    64e8:	add	r0, pc, r0
    64ec:	ldr	ip, [r0, #904]	; 0x388
    64f0:	cmp	ip, #0
    64f4:	beq	65d4 <sf_gen_atmfield_code+0x160>
    64f8:	ldr	r0, [r0, #912]	; 0x390
    64fc:	cmn	r0, #1
    6500:	bne	64c0 <sf_gen_atmfield_code+0x4c>
    6504:	bl	f18 <abort@plt>
    6508:	ldr	r0, [pc, #216]	; 65e8 <sf_gen_atmfield_code+0x174>
    650c:	add	r0, pc, r0
    6510:	ldr	ip, [r0, #904]	; 0x388
    6514:	cmp	ip, #0
    6518:	beq	65c8 <sf_gen_atmfield_code+0x154>
    651c:	ldr	r0, [r0, #916]	; 0x394
    6520:	cmn	r0, #1
    6524:	beq	6504 <sf_gen_atmfield_code+0x90>
    6528:	stm	sp, {r2, r3}
    652c:	str	r1, [sp, #8]
    6530:	mvn	r3, #0
    6534:	mov	r1, r0
    6538:	mov	r2, #8
    653c:	mov	r0, #1
    6540:	bl	2c88 <gen_ncmp>
    6544:	add	sp, sp, #20
    6548:	pop	{pc}		; (ldr pc, [sp], #4)
    654c:	ldr	r0, [pc, #152]	; 65ec <sf_gen_atmfield_code+0x178>
    6550:	add	r0, pc, r0
    6554:	ldr	r0, [r0, #920]	; 0x398
    6558:	cmn	r0, #1
    655c:	beq	6504 <sf_gen_atmfield_code+0x90>
    6560:	stm	sp, {r2, r3}
    6564:	str	r1, [sp, #8]
    6568:	mov	r3, #15
    656c:	mov	r1, r0
    6570:	mov	r2, #16
    6574:	mov	r0, #1
    6578:	bl	2c88 <gen_ncmp>
    657c:	add	sp, sp, #20
    6580:	pop	{pc}		; (ldr pc, [sp], #4)
    6584:	ldr	r0, [pc, #100]	; 65f0 <sf_gen_atmfield_code+0x17c>
    6588:	add	r0, pc, r0
    658c:	ldr	r0, [r0, #924]	; 0x39c
    6590:	cmn	r0, #1
    6594:	beq	6504 <sf_gen_atmfield_code+0x90>
    6598:	stm	sp, {r2, r3}
    659c:	str	r1, [sp, #8]
    65a0:	mvn	r3, #0
    65a4:	add	r1, r0, #5
    65a8:	mov	r2, #16
    65ac:	mov	r0, #1
    65b0:	bl	2c88 <gen_ncmp>
    65b4:	add	sp, sp, #20
    65b8:	pop	{pc}		; (ldr pc, [sp], #4)
    65bc:	ldr	r0, [pc, #48]	; 65f4 <sf_gen_atmfield_code+0x180>
    65c0:	add	r0, pc, r0
    65c4:	bl	2454 <sf_bpf_error>
    65c8:	ldr	r0, [pc, #40]	; 65f8 <sf_gen_atmfield_code+0x184>
    65cc:	add	r0, pc, r0
    65d0:	bl	2454 <sf_bpf_error>
    65d4:	ldr	r0, [pc, #32]	; 65fc <sf_gen_atmfield_code+0x188>
    65d8:	add	r0, pc, r0
    65dc:	bl	2454 <sf_bpf_error>
    65e0:	.word	0x00029ec4
    65e4:	.word	0x00029e80
    65e8:	.word	0x00029e5c
    65ec:	.word	0x00029e18
    65f0:	.word	0x00029de0
    65f4:	.word	0x0000c974
    65f8:	.word	0x0000c948
    65fc:	.word	0x0000c91c

00006600 <gen_linktype>:
    6600:	ldr	r3, [pc, #3080]	; 7210 <gen_linktype+0xc10>
    6604:	push	{r4, r5, r6, r7, lr}
    6608:	add	r3, pc, r3
    660c:	sub	sp, sp, #20
    6610:	ldr	r3, [r3, #4]
    6614:	mov	r4, r0
    6618:	cmp	r3, #0
    661c:	beq	66a4 <gen_linktype+0xa4>
    6620:	cmp	r0, #87	; 0x57
    6624:	beq	6640 <gen_linktype+0x40>
    6628:	ble	6ab0 <gen_linktype+0x4b0>
    662c:	cmp	r0, #2048	; 0x800
    6630:	beq	6a80 <gen_linktype+0x480>
    6634:	ldr	r3, [pc, #3032]	; 7214 <gen_linktype+0xc14>
    6638:	cmp	r0, r3
    663c:	bne	6ab8 <gen_linktype+0x4b8>
    6640:	mov	r4, #16
    6644:	mov	r5, #0
    6648:	mov	r3, #1
    664c:	str	r3, [sp, #8]
    6650:	stm	sp, {r4, r5}
    6654:	mov	r2, r4
    6658:	mvn	r1, #1
    665c:	mov	r0, #3
    6660:	bl	2c88 <gen_ncmp>
    6664:	mov	r3, #96	; 0x60
    6668:	mov	r6, r0
    666c:	mov	r1, r5
    6670:	stm	sp, {r4, r5}
    6674:	str	r3, [sp, #8]
    6678:	mov	r2, r4
    667c:	mov	r3, #240	; 0xf0
    6680:	mov	r0, #3
    6684:	bl	2c88 <gen_ncmp>
    6688:	mov	r5, r0
    668c:	mov	r1, r0
    6690:	mov	r0, r6
    6694:	bl	3ca0 <sf_gen_and>
    6698:	mov	r0, r5
    669c:	add	sp, sp, #20
    66a0:	pop	{r4, r5, r6, r7, pc}
    66a4:	ldr	r2, [pc, #2924]	; 7218 <gen_linktype+0xc18>
    66a8:	add	r2, pc, r2
    66ac:	ldr	r3, [r2, #928]	; 0x3a0
    66b0:	cmp	r3, #0
    66b4:	bne	6a60 <gen_linktype+0x460>
    66b8:	ldr	r2, [r2, #856]	; 0x358
    66bc:	cmp	r2, #229	; 0xe5
    66c0:	addls	pc, pc, r2, lsl #2
    66c4:	b	6fc8 <gen_linktype+0x9c8>
    66c8:	b	6bb4 <gen_linktype+0x5b4>
    66cc:	b	6be8 <gen_linktype+0x5e8>
    66d0:	b	6fc8 <gen_linktype+0x9c8>
    66d4:	b	6fc8 <gen_linktype+0x9c8>
    66d8:	b	6fc8 <gen_linktype+0x9c8>
    66dc:	b	6fc8 <gen_linktype+0x9c8>
    66e0:	b	6ac4 <gen_linktype+0x4c4>
    66e4:	b	6c10 <gen_linktype+0x610>
    66e8:	b	6c80 <gen_linktype+0x680>
    66ec:	b	6cbc <gen_linktype+0x6bc>
    66f0:	b	6ac4 <gen_linktype+0x4c4>
    66f4:	b	6ac4 <gen_linktype+0x4c4>
    66f8:	b	6c80 <gen_linktype+0x680>
    66fc:	b	6fc8 <gen_linktype+0x9c8>
    6700:	b	6fc8 <gen_linktype+0x9c8>
    6704:	b	6c80 <gen_linktype+0x680>
    6708:	b	6ee4 <gen_linktype+0x8e4>
    670c:	b	6fc8 <gen_linktype+0x9c8>
    6710:	b	6fc8 <gen_linktype+0x9c8>
    6714:	b	6ac4 <gen_linktype+0x4c4>
    6718:	b	6fc8 <gen_linktype+0x9c8>
    671c:	b	6fc8 <gen_linktype+0x9c8>
    6720:	b	6fc8 <gen_linktype+0x9c8>
    6724:	b	6fc8 <gen_linktype+0x9c8>
    6728:	b	6fc8 <gen_linktype+0x9c8>
    672c:	b	6fc8 <gen_linktype+0x9c8>
    6730:	b	6fc8 <gen_linktype+0x9c8>
    6734:	b	6fc8 <gen_linktype+0x9c8>
    6738:	b	6fc8 <gen_linktype+0x9c8>
    673c:	b	6fc8 <gen_linktype+0x9c8>
    6740:	b	6fc8 <gen_linktype+0x9c8>
    6744:	b	6fc8 <gen_linktype+0x9c8>
    6748:	b	6fc8 <gen_linktype+0x9c8>
    674c:	b	6fc8 <gen_linktype+0x9c8>
    6750:	b	6fc8 <gen_linktype+0x9c8>
    6754:	b	6fc8 <gen_linktype+0x9c8>
    6758:	b	6fc8 <gen_linktype+0x9c8>
    675c:	b	6fc8 <gen_linktype+0x9c8>
    6760:	b	6fc8 <gen_linktype+0x9c8>
    6764:	b	6fc8 <gen_linktype+0x9c8>
    6768:	b	6fc8 <gen_linktype+0x9c8>
    676c:	b	6fc8 <gen_linktype+0x9c8>
    6770:	b	6fc8 <gen_linktype+0x9c8>
    6774:	b	6fc8 <gen_linktype+0x9c8>
    6778:	b	6fc8 <gen_linktype+0x9c8>
    677c:	b	6fc8 <gen_linktype+0x9c8>
    6780:	b	6fc8 <gen_linktype+0x9c8>
    6784:	b	6fc8 <gen_linktype+0x9c8>
    6788:	b	6fc8 <gen_linktype+0x9c8>
    678c:	b	6fc8 <gen_linktype+0x9c8>
    6790:	b	6cbc <gen_linktype+0x6bc>
    6794:	b	6cbc <gen_linktype+0x6bc>
    6798:	b	6fc8 <gen_linktype+0x9c8>
    679c:	b	6fc8 <gen_linktype+0x9c8>
    67a0:	b	6fc8 <gen_linktype+0x9c8>
    67a4:	b	6fc8 <gen_linktype+0x9c8>
    67a8:	b	6fc8 <gen_linktype+0x9c8>
    67ac:	b	6fc8 <gen_linktype+0x9c8>
    67b0:	b	6fc8 <gen_linktype+0x9c8>
    67b4:	b	6fc8 <gen_linktype+0x9c8>
    67b8:	b	6fc8 <gen_linktype+0x9c8>
    67bc:	b	6fc8 <gen_linktype+0x9c8>
    67c0:	b	6fc8 <gen_linktype+0x9c8>
    67c4:	b	6fc8 <gen_linktype+0x9c8>
    67c8:	b	6fc8 <gen_linktype+0x9c8>
    67cc:	b	6fc8 <gen_linktype+0x9c8>
    67d0:	b	6fc8 <gen_linktype+0x9c8>
    67d4:	b	6fc8 <gen_linktype+0x9c8>
    67d8:	b	6fc8 <gen_linktype+0x9c8>
    67dc:	b	6fc8 <gen_linktype+0x9c8>
    67e0:	b	6fc8 <gen_linktype+0x9c8>
    67e4:	b	6fc8 <gen_linktype+0x9c8>
    67e8:	b	6fc8 <gen_linktype+0x9c8>
    67ec:	b	6fc8 <gen_linktype+0x9c8>
    67f0:	b	6fc8 <gen_linktype+0x9c8>
    67f4:	b	6fc8 <gen_linktype+0x9c8>
    67f8:	b	6fc8 <gen_linktype+0x9c8>
    67fc:	b	6fc8 <gen_linktype+0x9c8>
    6800:	b	6fc8 <gen_linktype+0x9c8>
    6804:	b	6fc8 <gen_linktype+0x9c8>
    6808:	b	6fc8 <gen_linktype+0x9c8>
    680c:	b	6fc8 <gen_linktype+0x9c8>
    6810:	b	6fc8 <gen_linktype+0x9c8>
    6814:	b	6fc8 <gen_linktype+0x9c8>
    6818:	b	6fc8 <gen_linktype+0x9c8>
    681c:	b	6fc8 <gen_linktype+0x9c8>
    6820:	b	6fc8 <gen_linktype+0x9c8>
    6824:	b	6fc8 <gen_linktype+0x9c8>
    6828:	b	6fc8 <gen_linktype+0x9c8>
    682c:	b	6fc8 <gen_linktype+0x9c8>
    6830:	b	6fc8 <gen_linktype+0x9c8>
    6834:	b	6fc8 <gen_linktype+0x9c8>
    6838:	b	6fc8 <gen_linktype+0x9c8>
    683c:	b	6fc8 <gen_linktype+0x9c8>
    6840:	b	6fc8 <gen_linktype+0x9c8>
    6844:	b	6fc8 <gen_linktype+0x9c8>
    6848:	b	6fc8 <gen_linktype+0x9c8>
    684c:	b	6fc8 <gen_linktype+0x9c8>
    6850:	b	6fc8 <gen_linktype+0x9c8>
    6854:	b	6fc8 <gen_linktype+0x9c8>
    6858:	b	6fc8 <gen_linktype+0x9c8>
    685c:	b	6fc8 <gen_linktype+0x9c8>
    6860:	b	6fc8 <gen_linktype+0x9c8>
    6864:	b	6fc8 <gen_linktype+0x9c8>
    6868:	b	6e2c <gen_linktype+0x82c>
    686c:	b	6e4c <gen_linktype+0x84c>
    6870:	b	6fc8 <gen_linktype+0x9c8>
    6874:	b	6cd8 <gen_linktype+0x6d8>
    6878:	b	6bb4 <gen_linktype+0x5b4>
    687c:	b	6bb4 <gen_linktype+0x5b4>
    6880:	b	6fc8 <gen_linktype+0x9c8>
    6884:	b	6fc8 <gen_linktype+0x9c8>
    6888:	b	6fc8 <gen_linktype+0x9c8>
    688c:	b	6d58 <gen_linktype+0x758>
    6890:	b	6e0c <gen_linktype+0x80c>
    6894:	b	6fc8 <gen_linktype+0x9c8>
    6898:	b	6fc8 <gen_linktype+0x9c8>
    689c:	b	6fc8 <gen_linktype+0x9c8>
    68a0:	b	6fc8 <gen_linktype+0x9c8>
    68a4:	b	6e4c <gen_linktype+0x84c>
    68a8:	b	6fc8 <gen_linktype+0x9c8>
    68ac:	b	6fc8 <gen_linktype+0x9c8>
    68b0:	b	6ac4 <gen_linktype+0x4c4>
    68b4:	b	6f70 <gen_linktype+0x970>
    68b8:	b	6fc8 <gen_linktype+0x9c8>
    68bc:	b	6fc8 <gen_linktype+0x9c8>
    68c0:	b	6fc8 <gen_linktype+0x9c8>
    68c4:	b	6e4c <gen_linktype+0x84c>
    68c8:	b	6fc8 <gen_linktype+0x9c8>
    68cc:	b	6c10 <gen_linktype+0x610>
    68d0:	b	6ad0 <gen_linktype+0x4d0>
    68d4:	b	6ad0 <gen_linktype+0x4d0>
    68d8:	b	6ad0 <gen_linktype+0x4d0>
    68dc:	b	6ad0 <gen_linktype+0x4d0>
    68e0:	b	6ad0 <gen_linktype+0x4d0>
    68e4:	b	6ad0 <gen_linktype+0x4d0>
    68e8:	b	6ad0 <gen_linktype+0x4d0>
    68ec:	b	6ad0 <gen_linktype+0x4d0>
    68f0:	b	6fc8 <gen_linktype+0x9c8>
    68f4:	b	6b00 <gen_linktype+0x500>
    68f8:	b	6b00 <gen_linktype+0x500>
    68fc:	b	6fc8 <gen_linktype+0x9c8>
    6900:	b	6fc8 <gen_linktype+0x9c8>
    6904:	b	6b0c <gen_linktype+0x50c>
    6908:	b	6b18 <gen_linktype+0x518>
    690c:	b	6fc8 <gen_linktype+0x9c8>
    6910:	b	6fc8 <gen_linktype+0x9c8>
    6914:	b	6fc8 <gen_linktype+0x9c8>
    6918:	b	6fc8 <gen_linktype+0x9c8>
    691c:	b	6fc8 <gen_linktype+0x9c8>
    6920:	b	6fc8 <gen_linktype+0x9c8>
    6924:	b	6fc8 <gen_linktype+0x9c8>
    6928:	b	6fc8 <gen_linktype+0x9c8>
    692c:	b	6fc8 <gen_linktype+0x9c8>
    6930:	b	6fc8 <gen_linktype+0x9c8>
    6934:	b	6fc8 <gen_linktype+0x9c8>
    6938:	b	6fc8 <gen_linktype+0x9c8>
    693c:	b	6fc8 <gen_linktype+0x9c8>
    6940:	b	6fc8 <gen_linktype+0x9c8>
    6944:	b	6fc8 <gen_linktype+0x9c8>
    6948:	b	6fc8 <gen_linktype+0x9c8>
    694c:	b	6fc8 <gen_linktype+0x9c8>
    6950:	b	6fc8 <gen_linktype+0x9c8>
    6954:	b	6e4c <gen_linktype+0x84c>
    6958:	b	6ad0 <gen_linktype+0x4d0>
    695c:	b	6fc8 <gen_linktype+0x9c8>
    6960:	b	6cbc <gen_linktype+0x6bc>
    6964:	b	6ad0 <gen_linktype+0x4d0>
    6968:	b	6ad0 <gen_linktype+0x4d0>
    696c:	b	6fc8 <gen_linktype+0x9c8>
    6970:	b	6fc8 <gen_linktype+0x9c8>
    6974:	b	6fc8 <gen_linktype+0x9c8>
    6978:	b	6fc8 <gen_linktype+0x9c8>
    697c:	b	6fc8 <gen_linktype+0x9c8>
    6980:	b	6fc8 <gen_linktype+0x9c8>
    6984:	b	6fc8 <gen_linktype+0x9c8>
    6988:	b	6fc8 <gen_linktype+0x9c8>
    698c:	b	6b24 <gen_linktype+0x524>
    6990:	b	6ad0 <gen_linktype+0x4d0>
    6994:	b	6ad0 <gen_linktype+0x4d0>
    6998:	b	6ad0 <gen_linktype+0x4d0>
    699c:	b	6ad0 <gen_linktype+0x4d0>
    69a0:	b	6b30 <gen_linktype+0x530>
    69a4:	b	6ad0 <gen_linktype+0x4d0>
    69a8:	b	6fc8 <gen_linktype+0x9c8>
    69ac:	b	6fc8 <gen_linktype+0x9c8>
    69b0:	b	6b3c <gen_linktype+0x53c>
    69b4:	b	6b48 <gen_linktype+0x548>
    69b8:	b	6fc8 <gen_linktype+0x9c8>
    69bc:	b	6b3c <gen_linktype+0x53c>
    69c0:	b	6b54 <gen_linktype+0x554>
    69c4:	b	6b60 <gen_linktype+0x560>
    69c8:	b	6e4c <gen_linktype+0x84c>
    69cc:	b	6b6c <gen_linktype+0x56c>
    69d0:	b	6ad0 <gen_linktype+0x4d0>
    69d4:	b	6b60 <gen_linktype+0x560>
    69d8:	b	6b78 <gen_linktype+0x578>
    69dc:	b	6b84 <gen_linktype+0x584>
    69e0:	b	6b90 <gen_linktype+0x590>
    69e4:	b	6b9c <gen_linktype+0x59c>
    69e8:	b	6ad0 <gen_linktype+0x4d0>
    69ec:	b	6b48 <gen_linktype+0x548>
    69f0:	b	6ba8 <gen_linktype+0x5a8>
    69f4:	b	6fc8 <gen_linktype+0x9c8>
    69f8:	b	6fc8 <gen_linktype+0x9c8>
    69fc:	b	6fc8 <gen_linktype+0x9c8>
    6a00:	b	6fc8 <gen_linktype+0x9c8>
    6a04:	b	6fc8 <gen_linktype+0x9c8>
    6a08:	b	6fc8 <gen_linktype+0x9c8>
    6a0c:	b	6fc8 <gen_linktype+0x9c8>
    6a10:	b	6fc8 <gen_linktype+0x9c8>
    6a14:	b	6fc8 <gen_linktype+0x9c8>
    6a18:	b	6fc8 <gen_linktype+0x9c8>
    6a1c:	b	6fc8 <gen_linktype+0x9c8>
    6a20:	b	6fc8 <gen_linktype+0x9c8>
    6a24:	b	6b60 <gen_linktype+0x560>
    6a28:	b	6fc8 <gen_linktype+0x9c8>
    6a2c:	b	6fc8 <gen_linktype+0x9c8>
    6a30:	b	6fc8 <gen_linktype+0x9c8>
    6a34:	b	6fc8 <gen_linktype+0x9c8>
    6a38:	b	6b3c <gen_linktype+0x53c>
    6a3c:	b	6fc8 <gen_linktype+0x9c8>
    6a40:	b	6fc8 <gen_linktype+0x9c8>
    6a44:	b	6fc8 <gen_linktype+0x9c8>
    6a48:	b	6fc8 <gen_linktype+0x9c8>
    6a4c:	b	6fc8 <gen_linktype+0x9c8>
    6a50:	b	6f44 <gen_linktype+0x944>
    6a54:	b	6b54 <gen_linktype+0x554>
    6a58:	b	6e20 <gen_linktype+0x820>
    6a5c:	b	6bf4 <gen_linktype+0x5f4>
    6a60:	bl	2370 <ethertype_to_ppptype>
    6a64:	mov	r3, r0
    6a68:	ldr	r1, [r2, #952]	; 0x3b8
    6a6c:	mov	r0, #2
    6a70:	mov	r2, #8
    6a74:	add	sp, sp, #20
    6a78:	pop	{r4, r5, r6, r7, lr}
    6a7c:	b	2d1c <gen_cmp>
    6a80:	mov	r4, #16
    6a84:	mov	r5, #0
    6a88:	mov	r3, #1
    6a8c:	str	r3, [sp, #8]
    6a90:	stm	sp, {r4, r5}
    6a94:	mov	r2, r4
    6a98:	mvn	r1, #1
    6a9c:	mov	r0, #3
    6aa0:	bl	2c88 <gen_ncmp>
    6aa4:	mov	r3, #64	; 0x40
    6aa8:	mov	r6, r0
    6aac:	b	666c <gen_linktype+0x6c>
    6ab0:	cmp	r0, #33	; 0x21
    6ab4:	beq	6a80 <gen_linktype+0x480>
    6ab8:	ldr	r0, [pc, #1884]	; 721c <gen_linktype+0xc1c>
    6abc:	add	r0, pc, r0
    6ac0:	bl	2454 <sf_bpf_error>
    6ac4:	add	sp, sp, #20
    6ac8:	pop	{r4, r5, r6, r7, lr}
    6acc:	b	4828 <gen_llc_linktype>
    6ad0:	ldr	r1, [pc, #1864]	; 7220 <gen_linktype+0xc20>
    6ad4:	mov	r2, #0
    6ad8:	mov	r3, #16
    6adc:	str	r1, [sp, #8]
    6ae0:	str	r3, [sp]
    6ae4:	str	r2, [sp, #4]
    6ae8:	mov	r1, r2
    6aec:	mvn	r3, #255	; 0xff
    6af0:	mov	r0, #1
    6af4:	bl	2c88 <gen_ncmp>
    6af8:	mov	r5, r0
    6afc:	b	6698 <gen_linktype+0x98>
    6b00:	ldr	r0, [pc, #1820]	; 7224 <gen_linktype+0xc24>
    6b04:	add	r0, pc, r0
    6b08:	bl	2454 <sf_bpf_error>
    6b0c:	ldr	r0, [pc, #1812]	; 7228 <gen_linktype+0xc28>
    6b10:	add	r0, pc, r0
    6b14:	bl	2454 <sf_bpf_error>
    6b18:	ldr	r0, [pc, #1804]	; 722c <gen_linktype+0xc2c>
    6b1c:	add	r0, pc, r0
    6b20:	bl	2454 <sf_bpf_error>
    6b24:	ldr	r0, [pc, #1796]	; 7230 <gen_linktype+0xc30>
    6b28:	add	r0, pc, r0
    6b2c:	bl	2454 <sf_bpf_error>
    6b30:	ldr	r0, [pc, #1788]	; 7234 <gen_linktype+0xc34>
    6b34:	add	r0, pc, r0
    6b38:	bl	2454 <sf_bpf_error>
    6b3c:	ldr	r0, [pc, #1780]	; 7238 <gen_linktype+0xc38>
    6b40:	add	r0, pc, r0
    6b44:	bl	2454 <sf_bpf_error>
    6b48:	ldr	r0, [pc, #1772]	; 723c <gen_linktype+0xc3c>
    6b4c:	add	r0, pc, r0
    6b50:	bl	2454 <sf_bpf_error>
    6b54:	ldr	r0, [pc, #1764]	; 7240 <gen_linktype+0xc40>
    6b58:	add	r0, pc, r0
    6b5c:	bl	2454 <sf_bpf_error>
    6b60:	ldr	r0, [pc, #1756]	; 7244 <gen_linktype+0xc44>
    6b64:	add	r0, pc, r0
    6b68:	bl	2454 <sf_bpf_error>
    6b6c:	ldr	r0, [pc, #1748]	; 7248 <gen_linktype+0xc48>
    6b70:	add	r0, pc, r0
    6b74:	bl	2454 <sf_bpf_error>
    6b78:	ldr	r0, [pc, #1740]	; 724c <gen_linktype+0xc4c>
    6b7c:	add	r0, pc, r0
    6b80:	bl	2454 <sf_bpf_error>
    6b84:	ldr	r0, [pc, #1732]	; 7250 <gen_linktype+0xc50>
    6b88:	add	r0, pc, r0
    6b8c:	bl	2454 <sf_bpf_error>
    6b90:	ldr	r0, [pc, #1724]	; 7254 <gen_linktype+0xc54>
    6b94:	add	r0, pc, r0
    6b98:	bl	2454 <sf_bpf_error>
    6b9c:	ldr	r0, [pc, #1716]	; 7258 <gen_linktype+0xc58>
    6ba0:	add	r0, pc, r0
    6ba4:	bl	2454 <sf_bpf_error>
    6ba8:	ldr	r0, [pc, #1708]	; 725c <gen_linktype+0xc5c>
    6bac:	add	r0, pc, r0
    6bb0:	bl	2454 <sf_bpf_error>
    6bb4:	cmp	r0, #2048	; 0x800
    6bb8:	beq	70a8 <gen_linktype+0xaa8>
    6bbc:	ldr	r3, [pc, #1616]	; 7214 <gen_linktype+0xc14>
    6bc0:	cmp	r0, r3
    6bc4:	moveq	r3, #10
    6bc8:	bne	6c00 <gen_linktype+0x600>
    6bcc:	cmp	r2, #109	; 0x6d
    6bd0:	cmpne	r2, #0
    6bd4:	mov	r2, #0
    6bd8:	reveq	r3, r3
    6bdc:	mov	r1, r2
    6be0:	mov	r0, #1
    6be4:	b	6a74 <gen_linktype+0x474>
    6be8:	add	sp, sp, #20
    6bec:	pop	{r4, r5, r6, r7, lr}
    6bf0:	b	4e08 <gen_ether_linktype>
    6bf4:	ldr	r3, [pc, #1560]	; 7214 <gen_linktype+0xc14>
    6bf8:	cmp	r0, r3
    6bfc:	beq	6e18 <gen_linktype+0x818>
    6c00:	mov	r0, #0
    6c04:	add	sp, sp, #20
    6c08:	pop	{r4, r5, r6, r7, lr}
    6c0c:	b	253c <gen_uncond>
    6c10:	ldr	r3, [pc, #1608]	; 7260 <gen_linktype+0xc60>
    6c14:	cmp	r0, r3
    6c18:	beq	71c4 <gen_linktype+0xbc4>
    6c1c:	bgt	7060 <gen_linktype+0xa60>
    6c20:	cmp	r0, #2048	; 0x800
    6c24:	beq	7194 <gen_linktype+0xb94>
    6c28:	ldr	r3, [pc, #1588]	; 7264 <gen_linktype+0xc64>
    6c2c:	cmp	r0, r3
    6c30:	bne	6c00 <gen_linktype+0x600>
    6c34:	ldr	r1, [pc, #1580]	; 7268 <gen_linktype+0xc68>
    6c38:	mov	r3, #213	; 0xd5
    6c3c:	add	r1, pc, r1
    6c40:	mov	r2, #16
    6c44:	ldr	r4, [r1, #952]	; 0x3b8
    6c48:	mov	r0, #1
    6c4c:	mov	r1, r4
    6c50:	bl	2d1c <gen_cmp>
    6c54:	mov	r1, r4
    6c58:	mov	r3, #241	; 0xf1
    6c5c:	mov	r6, r0
    6c60:	mov	r2, #16
    6c64:	mov	r0, #1
    6c68:	bl	2d1c <gen_cmp>
    6c6c:	mov	r5, r0
    6c70:	mov	r1, r0
    6c74:	mov	r0, r6
    6c78:	bl	49c0 <sf_gen_or>
    6c7c:	b	6698 <gen_linktype+0x98>
    6c80:	cmp	r0, #2048	; 0x800
    6c84:	beq	70b0 <gen_linktype+0xab0>
    6c88:	ldr	r3, [pc, #1412]	; 7214 <gen_linktype+0xc14>
    6c8c:	cmp	r0, r3
    6c90:	bne	6c00 <gen_linktype+0x600>
    6c94:	mov	r3, #96	; 0x60
    6c98:	mov	r1, #0
    6c9c:	mov	r2, #16
    6ca0:	stmib	sp, {r1, r3}
    6ca4:	str	r2, [sp]
    6ca8:	mov	r3, #240	; 0xf0
    6cac:	mov	r0, #1
    6cb0:	bl	2c88 <gen_ncmp>
    6cb4:	mov	r5, r0
    6cb8:	b	6698 <gen_linktype+0x98>
    6cbc:	bl	2370 <ethertype_to_ppptype>
    6cc0:	ldr	r3, [pc, #1444]	; 726c <gen_linktype+0xc6c>
    6cc4:	mov	r2, #8
    6cc8:	add	r3, pc, r3
    6ccc:	ldr	r1, [r3, #952]	; 0x3b8
    6cd0:	mov	r3, r0
    6cd4:	b	6be0 <gen_linktype+0x5e0>
    6cd8:	cmp	r0, #2048	; 0x800
    6cdc:	beq	70c8 <gen_linktype+0xac8>
    6ce0:	ldr	r3, [pc, #1324]	; 7214 <gen_linktype+0xc14>
    6ce4:	cmp	r0, r3
    6ce8:	beq	70b8 <gen_linktype+0xab8>
    6cec:	cmp	r0, #254	; 0xfe
    6cf0:	bne	6c00 <gen_linktype+0x600>
    6cf4:	ldr	r3, [pc, #1396]	; 7270 <gen_linktype+0xc70>
    6cf8:	mov	r2, #8
    6cfc:	mov	r1, #2
    6d00:	mov	r0, #1
    6d04:	bl	2d1c <gen_cmp>
    6d08:	ldr	r3, [pc, #1380]	; 7274 <gen_linktype+0xc74>
    6d0c:	mov	r2, #8
    6d10:	mov	r1, #2
    6d14:	mov	r4, r0
    6d18:	mov	r0, #1
    6d1c:	bl	2d1c <gen_cmp>
    6d20:	ldr	r3, [pc, #1360]	; 7278 <gen_linktype+0xc78>
    6d24:	mov	r2, #8
    6d28:	mov	r1, #2
    6d2c:	mov	r6, r0
    6d30:	mov	r0, #1
    6d34:	bl	2d1c <gen_cmp>
    6d38:	mov	r5, r0
    6d3c:	mov	r1, r0
    6d40:	mov	r0, r6
    6d44:	bl	49c0 <sf_gen_or>
    6d48:	mov	r1, r5
    6d4c:	mov	r0, r4
    6d50:	bl	49c0 <sf_gen_or>
    6d54:	b	6698 <gen_linktype+0x98>
    6d58:	cmp	r0, #240	; 0xf0
    6d5c:	beq	7134 <gen_linktype+0xb34>
    6d60:	bgt	701c <gen_linktype+0xa1c>
    6d64:	cmp	r0, #6
    6d68:	beq	7134 <gen_linktype+0xb34>
    6d6c:	cmp	r0, #224	; 0xe0
    6d70:	bne	703c <gen_linktype+0xa3c>
    6d74:	mov	r3, r0
    6d78:	mov	r2, #16
    6d7c:	mov	r1, #0
    6d80:	mov	r0, #2
    6d84:	bl	2d1c <gen_cmp>
    6d88:	ldr	r1, [pc, #1260]	; 727c <gen_linktype+0xc7c>
    6d8c:	mov	r4, r0
    6d90:	mov	r0, #0
    6d94:	bl	47d0 <gen_snap>
    6d98:	mov	r5, r0
    6d9c:	mov	r1, r0
    6da0:	mov	r0, r4
    6da4:	bl	49c0 <sf_gen_or>
    6da8:	ldr	r1, [pc, #1232]	; 7280 <gen_linktype+0xc80>
    6dac:	mov	r3, #4
    6db0:	add	r1, pc, r1
    6db4:	mov	r2, #8
    6db8:	ldr	r4, [r1, #952]	; 0x3b8
    6dbc:	mov	r0, #1
    6dc0:	mov	r1, r4
    6dc4:	bl	2d1c <gen_cmp>
    6dc8:	mov	r1, r5
    6dcc:	bl	3ca0 <sf_gen_and>
    6dd0:	mov	r3, #1
    6dd4:	mov	r0, r3
    6dd8:	mov	r1, r4
    6ddc:	mov	r2, #8
    6de0:	bl	2d1c <gen_cmp>
    6de4:	mov	r1, r5
    6de8:	bl	49c0 <sf_gen_or>
    6dec:	ldr	r3, [pc, #1160]	; 727c <gen_linktype+0xc7c>
    6df0:	mov	r1, r4
    6df4:	mov	r2, #8
    6df8:	mov	r0, #1
    6dfc:	bl	2d1c <gen_cmp>
    6e00:	mov	r1, r5
    6e04:	bl	49c0 <sf_gen_or>
    6e08:	b	6698 <gen_linktype+0x98>
    6e0c:	ldr	r3, [pc, #1136]	; 7284 <gen_linktype+0xc84>
    6e10:	cmp	r0, r3
    6e14:	bne	6c00 <gen_linktype+0x600>
    6e18:	mov	r0, #1
    6e1c:	b	6c04 <gen_linktype+0x604>
    6e20:	cmp	r0, #2048	; 0x800
    6e24:	bne	6c00 <gen_linktype+0x600>
    6e28:	b	6e18 <gen_linktype+0x818>
    6e2c:	ldr	r1, [pc, #1108]	; 7288 <gen_linktype+0xc88>
    6e30:	cmp	r0, #254	; 0xfe
    6e34:	add	r1, pc, r1
    6e38:	ldr	r3, [pc, #1100]	; 728c <gen_linktype+0xc8c>
    6e3c:	mov	r2, #8
    6e40:	ldr	r1, [r1, #952]	; 0x3b8
    6e44:	movne	r3, r0
    6e48:	b	6be0 <gen_linktype+0x5e0>
    6e4c:	mov	r1, #16
    6e50:	mov	r0, #0
    6e54:	bl	2848 <gen_load_llrel>
    6e58:	mov	r5, #69	; 0x45
    6e5c:	mov	r7, r0
    6e60:	mov	r0, #208	; 0xd0
    6e64:	bl	2494 <newchunk>
    6e68:	mov	r3, #8
    6e6c:	mov	r1, #16
    6e70:	mov	r6, r0
    6e74:	str	r7, [r0, #4]
    6e78:	str	r0, [r6, #96]	; 0x60
    6e7c:	str	r3, [r0, #20]
    6e80:	str	r5, [r0, #8]
    6e84:	mov	r0, #0
    6e88:	bl	2848 <gen_load_llrel>
    6e8c:	mov	r7, r0
    6e90:	mov	r0, #208	; 0xd0
    6e94:	bl	2494 <newchunk>
    6e98:	mov	r1, #4
    6e9c:	mov	r3, r0
    6ea0:	ldr	r2, [r0, #44]	; 0x2c
    6ea4:	clz	r2, r2
    6ea8:	lsr	r2, r2, #5
    6eac:	str	r5, [r0, #8]
    6eb0:	str	r0, [r3, #96]	; 0x60
    6eb4:	str	r1, [r0, #20]
    6eb8:	str	r7, [r0, #4]
    6ebc:	str	r2, [r0, #44]	; 0x2c
    6ec0:	mov	r1, r6
    6ec4:	bl	3ca0 <sf_gen_and>
    6ec8:	mov	r0, r4
    6ecc:	bl	4828 <gen_llc_linktype>
    6ed0:	mov	r5, r0
    6ed4:	mov	r1, r0
    6ed8:	mov	r0, r6
    6edc:	bl	3ca0 <sf_gen_and>
    6ee0:	b	6698 <gen_linktype+0x98>
    6ee4:	cmp	r0, #2048	; 0x800
    6ee8:	bne	6fe8 <gen_linktype+0x9e8>
    6eec:	ldr	r1, [pc, #924]	; 7290 <gen_linktype+0xc90>
    6ef0:	mov	r3, #33	; 0x21
    6ef4:	add	r1, pc, r1
    6ef8:	mov	r2, #8
    6efc:	ldr	r4, [r1, #952]	; 0x3b8
    6f00:	mov	r0, #1
    6f04:	mov	r1, r4
    6f08:	bl	2d1c <gen_cmp>
    6f0c:	mov	r3, #45	; 0x2d
    6f10:	mov	r2, #8
    6f14:	mov	r1, r4
    6f18:	mov	r5, r0
    6f1c:	mov	r0, #1
    6f20:	bl	2d1c <gen_cmp>
    6f24:	mov	r1, r0
    6f28:	mov	r6, r0
    6f2c:	mov	r0, r5
    6f30:	bl	49c0 <sf_gen_or>
    6f34:	mov	r1, r4
    6f38:	mov	r3, #47	; 0x2f
    6f3c:	mov	r2, #8
    6f40:	b	6c64 <gen_linktype+0x664>
    6f44:	cmp	r0, #2048	; 0x800
    6f48:	beq	7090 <gen_linktype+0xa90>
    6f4c:	ldr	r3, [pc, #704]	; 7214 <gen_linktype+0xc14>
    6f50:	cmp	r0, r3
    6f54:	bne	6c00 <gen_linktype+0x600>
    6f58:	ldr	r1, [pc, #820]	; 7294 <gen_linktype+0xc94>
    6f5c:	mov	r3, #26
    6f60:	add	r1, pc, r1
    6f64:	mov	r2, #16
    6f68:	ldr	r1, [r1, #952]	; 0x3b8
    6f6c:	b	6be0 <gen_linktype+0x5e0>
    6f70:	ldr	r3, [pc, #800]	; 7298 <gen_linktype+0xc98>
    6f74:	add	r3, pc, r3
    6f78:	ldr	r3, [r3, #908]	; 0x38c
    6f7c:	cmp	r3, #0
    6f80:	beq	7004 <gen_linktype+0xa04>
    6f84:	mov	r2, #8
    6f88:	mov	r1, #4
    6f8c:	mov	r3, #65280	; 0xff00
    6f90:	mov	r0, #1
    6f94:	bl	2d1c <gen_cmp>
    6f98:	mov	r6, r0
    6f9c:	mov	r0, r4
    6fa0:	ldr	r3, [r6, #44]	; 0x2c
    6fa4:	clz	r3, r3
    6fa8:	lsr	r3, r3, #5
    6fac:	str	r3, [r6, #44]	; 0x2c
    6fb0:	bl	4e08 <gen_ether_linktype>
    6fb4:	mov	r5, r0
    6fb8:	mov	r1, r0
    6fbc:	mov	r0, r6
    6fc0:	bl	3ca0 <sf_gen_and>
    6fc4:	b	6698 <gen_linktype+0x98>
    6fc8:	ldr	r3, [pc, #716]	; 729c <gen_linktype+0xc9c>
    6fcc:	add	r3, pc, r3
    6fd0:	ldr	r1, [r3, #952]	; 0x3b8
    6fd4:	cmn	r1, #1
    6fd8:	movne	r3, r0
    6fdc:	movne	r2, #8
    6fe0:	bne	6be0 <gen_linktype+0x5e0>
    6fe4:	bl	f18 <abort@plt>
    6fe8:	bl	2370 <ethertype_to_ppptype>
    6fec:	ldr	r3, [pc, #684]	; 72a0 <gen_linktype+0xca0>
    6ff0:	mov	r2, #8
    6ff4:	add	r3, pc, r3
    6ff8:	ldr	r1, [r3, #952]	; 0x3b8
    6ffc:	mov	r3, r0
    7000:	b	6be0 <gen_linktype+0x5e0>
    7004:	mov	r2, #16
    7008:	mov	r1, #2
    700c:	mov	r0, #53	; 0x35
    7010:	bl	6474 <sf_gen_atmfield_code>
    7014:	mov	r6, r0
    7018:	b	6ec8 <gen_linktype+0x8c8>
    701c:	ldr	r3, [pc, #608]	; 7284 <gen_linktype+0xc84>
    7020:	cmp	r0, r3
    7024:	beq	70d8 <gen_linktype+0xad8>
    7028:	add	r3, r3, #88	; 0x58
    702c:	cmp	r0, r3
    7030:	beq	70d8 <gen_linktype+0xad8>
    7034:	cmp	r0, #254	; 0xfe
    7038:	beq	7134 <gen_linktype+0xb34>
    703c:	ldr	r3, [pc, #608]	; 72a4 <gen_linktype+0xca4>
    7040:	cmp	r4, r3
    7044:	ble	71dc <gen_linktype+0xbdc>
    7048:	ldr	r1, [pc, #600]	; 72a8 <gen_linktype+0xca8>
    704c:	mov	r3, r4
    7050:	add	r1, pc, r1
    7054:	mov	r2, #8
    7058:	ldr	r1, [r1, #952]	; 0x3b8
    705c:	b	6be0 <gen_linktype+0x5e0>
    7060:	ldr	r3, [pc, #540]	; 7284 <gen_linktype+0xc84>
    7064:	cmp	r0, r3
    7068:	beq	717c <gen_linktype+0xb7c>
    706c:	ldr	r3, [pc, #416]	; 7214 <gen_linktype+0xc14>
    7070:	cmp	r0, r3
    7074:	bne	6c00 <gen_linktype+0x600>
    7078:	ldr	r1, [pc, #556]	; 72ac <gen_linktype+0xcac>
    707c:	mov	r3, #196	; 0xc4
    7080:	add	r1, pc, r1
    7084:	mov	r2, #16
    7088:	ldr	r1, [r1, #952]	; 0x3b8
    708c:	b	6be0 <gen_linktype+0x5e0>
    7090:	ldr	r1, [pc, #536]	; 72b0 <gen_linktype+0xcb0>
    7094:	mov	r3, #2
    7098:	add	r1, pc, r1
    709c:	mov	r2, #16
    70a0:	ldr	r1, [r1, #952]	; 0x3b8
    70a4:	b	6be0 <gen_linktype+0x5e0>
    70a8:	mov	r3, #2
    70ac:	b	6bcc <gen_linktype+0x5cc>
    70b0:	mov	r3, #64	; 0x40
    70b4:	b	6c98 <gen_linktype+0x698>
    70b8:	ldr	r3, [pc, #500]	; 72b4 <gen_linktype+0xcb4>
    70bc:	mov	r2, #8
    70c0:	mov	r1, #2
    70c4:	b	6be0 <gen_linktype+0x5e0>
    70c8:	mov	r3, #972	; 0x3cc
    70cc:	mov	r2, #8
    70d0:	mov	r1, #2
    70d4:	b	6be0 <gen_linktype+0x5e0>
    70d8:	ldr	r1, [pc, #472]	; 72b8 <gen_linktype+0xcb8>
    70dc:	mov	r2, #8
    70e0:	add	r1, pc, r1
    70e4:	mov	r3, #4
    70e8:	ldr	r6, [r1, #952]	; 0x3b8
    70ec:	mov	r0, #1
    70f0:	mov	r1, r6
    70f4:	bl	2d1c <gen_cmp>
    70f8:	ldr	r3, [pc, #388]	; 7284 <gen_linktype+0xc84>
    70fc:	cmp	r4, r3
    7100:	moveq	r1, r4
    7104:	ldrne	r1, [pc, #432]	; 72bc <gen_linktype+0xcbc>
    7108:	mov	r7, r0
    710c:	ldreq	r0, [pc, #428]	; 72c0 <gen_linktype+0xcc0>
    7110:	movne	r0, #0
    7114:	bl	47d0 <gen_snap>
    7118:	mov	r5, r0
    711c:	mov	r1, r5
    7120:	mov	r0, r7
    7124:	bl	3ca0 <sf_gen_and>
    7128:	mov	r3, r4
    712c:	mov	r1, r6
    7130:	b	6df4 <gen_linktype+0x7f4>
    7134:	ldr	r1, [pc, #392]	; 72c4 <gen_linktype+0xcc4>
    7138:	mov	r3, #4
    713c:	add	r1, pc, r1
    7140:	mov	r2, #8
    7144:	ldr	r1, [r1, #952]	; 0x3b8
    7148:	mov	r0, #1
    714c:	bl	2d1c <gen_cmp>
    7150:	orr	r3, r4, r4, lsl #8
    7154:	mov	r2, #8
    7158:	mov	r1, #0
    715c:	mov	r6, r0
    7160:	mov	r0, #2
    7164:	bl	2d1c <gen_cmp>
    7168:	mov	r5, r0
    716c:	mov	r1, r0
    7170:	mov	r0, r6
    7174:	bl	3ca0 <sf_gen_and>
    7178:	b	6698 <gen_linktype+0x98>
    717c:	ldr	r1, [pc, #324]	; 72c8 <gen_linktype+0xcc8>
    7180:	mov	r3, #221	; 0xdd
    7184:	add	r1, pc, r1
    7188:	mov	r2, #16
    718c:	ldr	r1, [r1, #952]	; 0x3b8
    7190:	b	6be0 <gen_linktype+0x5e0>
    7194:	ldr	r1, [pc, #304]	; 72cc <gen_linktype+0xccc>
    7198:	mov	r3, #212	; 0xd4
    719c:	add	r1, pc, r1
    71a0:	mov	r2, #16
    71a4:	ldr	r4, [r1, #952]	; 0x3b8
    71a8:	mov	r0, #1
    71ac:	mov	r1, r4
    71b0:	bl	2d1c <gen_cmp>
    71b4:	mov	r1, r4
    71b8:	mov	r3, #240	; 0xf0
    71bc:	mov	r6, r0
    71c0:	b	6c60 <gen_linktype+0x660>
    71c4:	ldr	r1, [pc, #260]	; 72d0 <gen_linktype+0xcd0>
    71c8:	mov	r3, #214	; 0xd6
    71cc:	add	r1, pc, r1
    71d0:	mov	r2, #16
    71d4:	ldr	r1, [r1, #952]	; 0x3b8
    71d8:	b	6be0 <gen_linktype+0x5e0>
    71dc:	ldr	r5, [pc, #240]	; 72d4 <gen_linktype+0xcd4>
    71e0:	mov	r3, #4
    71e4:	add	r5, pc, r5
    71e8:	mov	r2, #8
    71ec:	ldr	r1, [r5, #952]	; 0x3b8
    71f0:	mov	r0, #1
    71f4:	bl	2d1c <gen_cmp>
    71f8:	mov	r3, r4
    71fc:	ldr	r1, [r5, #876]	; 0x36c
    7200:	mov	r2, #16
    7204:	mov	r6, r0
    7208:	mov	r0, #1
    720c:	b	7164 <gen_linktype+0xb64>
    7210:	.word	0x00029c70
    7214:	.word	0x000086dd
    7218:	.word	0x00029cc0
    721c:	.word	0x0000c49c
    7220:	.word	0x4d474300
    7224:	.word	0x0000c51c
    7228:	.word	0x0000c4dc
    722c:	.word	0x0000c4a0
    7230:	.word	0x0000c558
    7234:	.word	0x0000c444
    7238:	.word	0x0000c570
    723c:	.word	0x0000c594
    7240:	.word	0x0000c5bc
    7244:	.word	0x0000c5e0
    7248:	.word	0x0000c60c
    724c:	.word	0x0000c638
    7250:	.word	0x0000c4c8
    7254:	.word	0x0000c650
    7258:	.word	0x0000c674
    725c:	.word	0x0000c698
    7260:	.word	0x00008035
    7264:	.word	0x00000806
    7268:	.word	0x0002972c
    726c:	.word	0x000296a0
    7270:	.word	0x00000381
    7274:	.word	0x00000382
    7278:	.word	0x00000383
    727c:	.word	0x00008137
    7280:	.word	0x000295b8
    7284:	.word	0x0000809b
    7288:	.word	0x00029534
    728c:	.word	0x0000fefe
    7290:	.word	0x00029474
    7294:	.word	0x00029408
    7298:	.word	0x000293f4
    729c:	.word	0x0002939c
    72a0:	.word	0x00029374
    72a4:	.word	0x000005dc
    72a8:	.word	0x00029318
    72ac:	.word	0x000292e8
    72b0:	.word	0x000292d0
    72b4:	.word	0x0000038e
    72b8:	.word	0x00029288
    72bc:	.word	0x000080f3
    72c0:	.word	0x00080007
    72c4:	.word	0x0002922c
    72c8:	.word	0x000291e4
    72cc:	.word	0x000291cc
    72d0:	.word	0x0002919c
    72d4:	.word	0x00029184

000072d8 <gen_proto>:
    72d8:	cmp	r2, #0
    72dc:	push	{r4, r5, r6, lr}
    72e0:	bne	75dc <gen_proto+0x304>
    72e4:	mov	r4, r0
    72e8:	cmp	r1, #40	; 0x28
    72ec:	addls	pc, pc, r1, lsl #2
    72f0:	b	7598 <gen_proto+0x2c0>
    72f4:	b	7564 <gen_proto+0x28c>
    72f8:	b	755c <gen_proto+0x284>
    72fc:	b	7540 <gen_proto+0x268>
    7300:	b	7534 <gen_proto+0x25c>
    7304:	b	7528 <gen_proto+0x250>
    7308:	b	751c <gen_proto+0x244>
    730c:	b	7510 <gen_proto+0x238>
    7310:	b	7504 <gen_proto+0x22c>
    7314:	b	74f8 <gen_proto+0x220>
    7318:	b	74ec <gen_proto+0x214>
    731c:	b	74e0 <gen_proto+0x208>
    7320:	b	74d4 <gen_proto+0x1fc>
    7324:	b	74c8 <gen_proto+0x1f0>
    7328:	b	74bc <gen_proto+0x1e4>
    732c:	b	74b0 <gen_proto+0x1d8>
    7330:	b	74a4 <gen_proto+0x1cc>
    7334:	b	7498 <gen_proto+0x1c0>
    7338:	b	7478 <gen_proto+0x1a0>
    733c:	b	746c <gen_proto+0x194>
    7340:	b	7460 <gen_proto+0x188>
    7344:	b	7454 <gen_proto+0x17c>
    7348:	b	7448 <gen_proto+0x170>
    734c:	b	743c <gen_proto+0x164>
    7350:	b	7598 <gen_proto+0x2c0>
    7354:	b	7408 <gen_proto+0x130>
    7358:	b	7598 <gen_proto+0x2c0>
    735c:	b	73c8 <gen_proto+0xf0>
    7360:	b	7598 <gen_proto+0x2c0>
    7364:	b	73bc <gen_proto+0xe4>
    7368:	b	73b0 <gen_proto+0xd8>
    736c:	b	73a4 <gen_proto+0xcc>
    7370:	b	7598 <gen_proto+0x2c0>
    7374:	b	7598 <gen_proto+0x2c0>
    7378:	b	7598 <gen_proto+0x2c0>
    737c:	b	7598 <gen_proto+0x2c0>
    7380:	b	7598 <gen_proto+0x2c0>
    7384:	b	7598 <gen_proto+0x2c0>
    7388:	b	7598 <gen_proto+0x2c0>
    738c:	b	7598 <gen_proto+0x2c0>
    7390:	b	7598 <gen_proto+0x2c0>
    7394:	b	7398 <gen_proto+0xc0>
    7398:	ldr	r0, [pc, #584]	; 75e8 <gen_proto+0x310>
    739c:	add	r0, pc, r0
    73a0:	bl	2454 <sf_bpf_error>
    73a4:	ldr	r0, [pc, #576]	; 75ec <gen_proto+0x314>
    73a8:	add	r0, pc, r0
    73ac:	bl	2454 <sf_bpf_error>
    73b0:	ldr	r0, [pc, #568]	; 75f0 <gen_proto+0x318>
    73b4:	add	r0, pc, r0
    73b8:	bl	2454 <sf_bpf_error>
    73bc:	ldr	r0, [pc, #560]	; 75f4 <gen_proto+0x31c>
    73c0:	add	r0, pc, r0
    73c4:	bl	2454 <sf_bpf_error>
    73c8:	mov	r2, #0
    73cc:	mov	r1, #24
    73d0:	mov	r0, #131	; 0x83
    73d4:	bl	72d8 <gen_proto>
    73d8:	mov	r1, #4
    73dc:	mov	r3, r4
    73e0:	mov	r2, #16
    73e4:	mov	r5, r0
    73e8:	mov	r0, r1
    73ec:	bl	2d1c <gen_cmp>
    73f0:	mov	r4, r0
    73f4:	mov	r1, r0
    73f8:	mov	r0, r5
    73fc:	bl	3ca0 <sf_gen_and>
    7400:	mov	r0, r4
    7404:	pop	{r4, r5, r6, pc}
    7408:	ldr	r3, [pc, #488]	; 75f8 <gen_proto+0x320>
    740c:	add	r3, pc, r3
    7410:	ldr	r3, [r3, #856]	; 0x358
    7414:	cmp	r3, #104	; 0x68
    7418:	beq	75bc <gen_proto+0x2e4>
    741c:	cmp	r3, #107	; 0x6b
    7420:	bne	759c <gen_proto+0x2c4>
    7424:	orr	r3, r0, #768	; 0x300
    7428:	mov	r2, #8
    742c:	mov	r1, #2
    7430:	mov	r0, #1
    7434:	pop	{r4, r5, r6, lr}
    7438:	b	2d1c <gen_cmp>
    743c:	ldr	r0, [pc, #440]	; 75fc <gen_proto+0x324>
    7440:	add	r0, pc, r0
    7444:	bl	2454 <sf_bpf_error>
    7448:	ldr	r0, [pc, #432]	; 7600 <gen_proto+0x328>
    744c:	add	r0, pc, r0
    7450:	bl	2454 <sf_bpf_error>
    7454:	ldr	r0, [pc, #424]	; 7604 <gen_proto+0x32c>
    7458:	add	r0, pc, r0
    745c:	bl	2454 <sf_bpf_error>
    7460:	ldr	r0, [pc, #416]	; 7608 <gen_proto+0x330>
    7464:	add	r0, pc, r0
    7468:	bl	2454 <sf_bpf_error>
    746c:	ldr	r0, [pc, #408]	; 760c <gen_proto+0x334>
    7470:	add	r0, pc, r0
    7474:	bl	2454 <sf_bpf_error>
    7478:	ldr	r0, [pc, #400]	; 7610 <gen_proto+0x338>
    747c:	bl	6600 <gen_linktype>
    7480:	mov	r3, r4
    7484:	mov	r2, #16
    7488:	mov	r1, #6
    748c:	mov	r5, r0
    7490:	mov	r0, #3
    7494:	b	73ec <gen_proto+0x114>
    7498:	ldr	r0, [pc, #372]	; 7614 <gen_proto+0x33c>
    749c:	add	r0, pc, r0
    74a0:	bl	2454 <sf_bpf_error>
    74a4:	ldr	r0, [pc, #364]	; 7618 <gen_proto+0x340>
    74a8:	add	r0, pc, r0
    74ac:	bl	2454 <sf_bpf_error>
    74b0:	ldr	r0, [pc, #356]	; 761c <gen_proto+0x344>
    74b4:	add	r0, pc, r0
    74b8:	bl	2454 <sf_bpf_error>
    74bc:	ldr	r0, [pc, #348]	; 7620 <gen_proto+0x348>
    74c0:	add	r0, pc, r0
    74c4:	bl	2454 <sf_bpf_error>
    74c8:	ldr	r0, [pc, #340]	; 7624 <gen_proto+0x34c>
    74cc:	add	r0, pc, r0
    74d0:	bl	2454 <sf_bpf_error>
    74d4:	ldr	r0, [pc, #332]	; 7628 <gen_proto+0x350>
    74d8:	add	r0, pc, r0
    74dc:	bl	2454 <sf_bpf_error>
    74e0:	ldr	r0, [pc, #324]	; 762c <gen_proto+0x354>
    74e4:	add	r0, pc, r0
    74e8:	bl	2454 <sf_bpf_error>
    74ec:	ldr	r0, [pc, #316]	; 7630 <gen_proto+0x358>
    74f0:	add	r0, pc, r0
    74f4:	bl	2454 <sf_bpf_error>
    74f8:	ldr	r0, [pc, #308]	; 7634 <gen_proto+0x35c>
    74fc:	add	r0, pc, r0
    7500:	bl	2454 <sf_bpf_error>
    7504:	ldr	r0, [pc, #300]	; 7638 <gen_proto+0x360>
    7508:	add	r0, pc, r0
    750c:	bl	2454 <sf_bpf_error>
    7510:	ldr	r0, [pc, #292]	; 763c <gen_proto+0x364>
    7514:	add	r0, pc, r0
    7518:	bl	2454 <sf_bpf_error>
    751c:	ldr	r0, [pc, #284]	; 7640 <gen_proto+0x368>
    7520:	add	r0, pc, r0
    7524:	bl	2454 <sf_bpf_error>
    7528:	ldr	r0, [pc, #276]	; 7644 <gen_proto+0x36c>
    752c:	add	r0, pc, r0
    7530:	bl	2454 <sf_bpf_error>
    7534:	ldr	r0, [pc, #268]	; 7648 <gen_proto+0x370>
    7538:	add	r0, pc, r0
    753c:	bl	2454 <sf_bpf_error>
    7540:	mov	r0, #2048	; 0x800
    7544:	bl	6600 <gen_linktype>
    7548:	mov	r3, r4
    754c:	mov	r2, #16
    7550:	mov	r1, #9
    7554:	mov	r5, r0
    7558:	b	7490 <gen_proto+0x1b8>
    755c:	pop	{r4, r5, r6, lr}
    7560:	b	6600 <gen_linktype>
    7564:	mov	r2, #0
    7568:	mov	r1, #2
    756c:	bl	72d8 <gen_proto>
    7570:	mov	r2, #0
    7574:	mov	r1, #17
    7578:	mov	r5, r0
    757c:	mov	r0, r4
    7580:	bl	72d8 <gen_proto>
    7584:	mov	r4, r0
    7588:	mov	r1, r0
    758c:	mov	r0, r5
    7590:	bl	49c0 <sf_gen_or>
    7594:	b	7400 <gen_proto+0x128>
    7598:	bl	f18 <abort@plt>
    759c:	mov	r0, #254	; 0xfe
    75a0:	bl	6600 <gen_linktype>
    75a4:	mov	r3, r4
    75a8:	mov	r2, #16
    75ac:	mov	r1, #0
    75b0:	mov	r5, r0
    75b4:	mov	r0, #4
    75b8:	b	73ec <gen_proto+0x114>
    75bc:	ldr	r0, [pc, #136]	; 764c <gen_proto+0x374>
    75c0:	bl	6600 <gen_linktype>
    75c4:	mov	r3, r4
    75c8:	mov	r2, #16
    75cc:	mov	r1, #1
    75d0:	mov	r5, r0
    75d4:	mov	r0, #4
    75d8:	b	73ec <gen_proto+0x114>
    75dc:	ldr	r0, [pc, #108]	; 7650 <gen_proto+0x378>
    75e0:	add	r0, pc, r0
    75e4:	bl	2454 <sf_bpf_error>
    75e8:	.word	0x0000c188
    75ec:	.word	0x0000c160
    75f0:	.word	0x0000c13c
    75f4:	.word	0x0000c118
    75f8:	.word	0x00028f5c
    75fc:	.word	0x0000c054
    7600:	.word	0x0000c030
    7604:	.word	0x0000c06c
    7608:	.word	0x0000c060
    760c:	.word	0x0000c03c
    7610:	.word	0x000086dd
    7614:	.word	0x0000bf24
    7618:	.word	0x0000beec
    761c:	.word	0x0000be88
    7620:	.word	0x0000bea8
    7624:	.word	0x0000be48
    7628:	.word	0x0000be14
    762c:	.word	0x0000bf80
    7630:	.word	0x0000bf5c
    7634:	.word	0x0000bf38
    7638:	.word	0x0000bee4
    763c:	.word	0x0000bef0
    7640:	.word	0x0000befc
    7644:	.word	0x0000bd94
    7648:	.word	0x0000bd5c
    764c:	.word	0x0000fefe
    7650:	.word	0x0000bc94

00007654 <sf_gen_proto_abbrev>:
    7654:	sub	r0, r0, #1
    7658:	push	{r4, r5, r6, lr}
    765c:	cmp	r0, #39	; 0x27
    7660:	addls	pc, pc, r0, lsl #2
    7664:	b	7b98 <sf_gen_proto_abbrev+0x544>
    7668:	b	7b8c <sf_gen_proto_abbrev+0x538>
    766c:	b	7b80 <sf_gen_proto_abbrev+0x52c>
    7670:	b	7b74 <sf_gen_proto_abbrev+0x520>
    7674:	b	7b68 <sf_gen_proto_abbrev+0x514>
    7678:	b	7b38 <sf_gen_proto_abbrev+0x4e4>
    767c:	b	7b08 <sf_gen_proto_abbrev+0x4b4>
    7680:	b	7aec <sf_gen_proto_abbrev+0x498>
    7684:	b	7ad8 <sf_gen_proto_abbrev+0x484>
    7688:	b	7ac4 <sf_gen_proto_abbrev+0x470>
    768c:	b	7ab0 <sf_gen_proto_abbrev+0x45c>
    7690:	b	7aa4 <sf_gen_proto_abbrev+0x450>
    7694:	b	7a98 <sf_gen_proto_abbrev+0x444>
    7698:	b	7a8c <sf_gen_proto_abbrev+0x438>
    769c:	b	7a80 <sf_gen_proto_abbrev+0x42c>
    76a0:	b	7a74 <sf_gen_proto_abbrev+0x420>
    76a4:	b	7a68 <sf_gen_proto_abbrev+0x414>
    76a8:	b	7a5c <sf_gen_proto_abbrev+0x408>
    76ac:	b	7a48 <sf_gen_proto_abbrev+0x3f4>
    76b0:	b	7a18 <sf_gen_proto_abbrev+0x3c4>
    76b4:	b	79e8 <sf_gen_proto_abbrev+0x394>
    76b8:	b	79b8 <sf_gen_proto_abbrev+0x364>
    76bc:	b	79a4 <sf_gen_proto_abbrev+0x350>
    76c0:	b	7998 <sf_gen_proto_abbrev+0x344>
    76c4:	b	798c <sf_gen_proto_abbrev+0x338>
    76c8:	b	7978 <sf_gen_proto_abbrev+0x324>
    76cc:	b	7964 <sf_gen_proto_abbrev+0x310>
    76d0:	b	7950 <sf_gen_proto_abbrev+0x2fc>
    76d4:	b	7944 <sf_gen_proto_abbrev+0x2f0>
    76d8:	b	7938 <sf_gen_proto_abbrev+0x2e4>
    76dc:	b	792c <sf_gen_proto_abbrev+0x2d8>
    76e0:	b	78ac <sf_gen_proto_abbrev+0x258>
    76e4:	b	7850 <sf_gen_proto_abbrev+0x1fc>
    76e8:	b	7800 <sf_gen_proto_abbrev+0x1ac>
    76ec:	b	7b98 <sf_gen_proto_abbrev+0x544>
    76f0:	b	7b98 <sf_gen_proto_abbrev+0x544>
    76f4:	b	7798 <sf_gen_proto_abbrev+0x144>
    76f8:	b	7774 <sf_gen_proto_abbrev+0x120>
    76fc:	b	7750 <sf_gen_proto_abbrev+0xfc>
    7700:	b	7714 <sf_gen_proto_abbrev+0xc0>
    7704:	b	7708 <sf_gen_proto_abbrev+0xb4>
    7708:	ldr	r0, [pc, #1164]	; 7b9c <sf_gen_proto_abbrev+0x548>
    770c:	add	r0, pc, r0
    7710:	bl	2454 <sf_bpf_error>
    7714:	mov	r2, #0
    7718:	mov	r1, #26
    771c:	mov	r0, #18
    7720:	bl	72d8 <gen_proto>
    7724:	mov	r2, #0
    7728:	mov	r1, #26
    772c:	mov	r5, r0
    7730:	mov	r0, #20
    7734:	bl	72d8 <gen_proto>
    7738:	mov	r4, r0
    773c:	mov	r1, r0
    7740:	mov	r0, r5
    7744:	bl	49c0 <sf_gen_or>
    7748:	mov	r0, r4
    774c:	pop	{r4, r5, r6, pc}
    7750:	mov	r1, #26
    7754:	mov	r0, r1
    7758:	mov	r2, #0
    775c:	bl	72d8 <gen_proto>
    7760:	mov	r2, #0
    7764:	mov	r1, #26
    7768:	mov	r5, r0
    776c:	mov	r0, #27
    7770:	b	7734 <sf_gen_proto_abbrev+0xe0>
    7774:	mov	r2, #0
    7778:	mov	r1, #26
    777c:	mov	r0, #24
    7780:	bl	72d8 <gen_proto>
    7784:	mov	r2, #0
    7788:	mov	r1, #26
    778c:	mov	r5, r0
    7790:	mov	r0, #25
    7794:	b	7734 <sf_gen_proto_abbrev+0xe0>
    7798:	mov	r2, #0
    779c:	mov	r1, #26
    77a0:	mov	r0, #24
    77a4:	bl	72d8 <gen_proto>
    77a8:	mov	r2, #0
    77ac:	mov	r1, #26
    77b0:	mov	r5, r0
    77b4:	mov	r0, #25
    77b8:	bl	72d8 <gen_proto>
    77bc:	mov	r1, r0
    77c0:	mov	r4, r0
    77c4:	mov	r0, r5
    77c8:	bl	49c0 <sf_gen_or>
    77cc:	mov	r1, #26
    77d0:	mov	r0, r1
    77d4:	mov	r2, #0
    77d8:	bl	72d8 <gen_proto>
    77dc:	mov	r1, r4
    77e0:	bl	49c0 <sf_gen_or>
    77e4:	mov	r2, #0
    77e8:	mov	r1, #26
    77ec:	mov	r0, #27
    77f0:	bl	72d8 <gen_proto>
    77f4:	mov	r1, r4
    77f8:	bl	49c0 <sf_gen_or>
    77fc:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7800:	mov	r2, #0
    7804:	mov	r1, #26
    7808:	mov	r0, #15
    780c:	bl	72d8 <gen_proto>
    7810:	mov	r2, #0
    7814:	mov	r1, #26
    7818:	mov	r5, r0
    781c:	mov	r0, #16
    7820:	bl	72d8 <gen_proto>
    7824:	mov	r4, r0
    7828:	mov	r1, r0
    782c:	mov	r0, r5
    7830:	bl	49c0 <sf_gen_or>
    7834:	mov	r2, #0
    7838:	mov	r1, #26
    783c:	mov	r0, #17
    7840:	bl	72d8 <gen_proto>
    7844:	mov	r1, r4
    7848:	bl	49c0 <sf_gen_or>
    784c:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7850:	mov	r2, #0
    7854:	mov	r1, #26
    7858:	mov	r0, #16
    785c:	bl	72d8 <gen_proto>
    7860:	mov	r2, #0
    7864:	mov	r1, #26
    7868:	mov	r5, r0
    786c:	mov	r0, #17
    7870:	bl	72d8 <gen_proto>
    7874:	mov	r1, r0
    7878:	mov	r4, r0
    787c:	mov	r0, r5
    7880:	bl	49c0 <sf_gen_or>
    7884:	mov	r2, #0
    7888:	mov	r1, #26
    788c:	mov	r0, #20
    7890:	bl	72d8 <gen_proto>
    7894:	mov	r1, r4
    7898:	bl	49c0 <sf_gen_or>
    789c:	mov	r2, #0
    78a0:	mov	r1, #26
    78a4:	mov	r0, #25
    78a8:	b	77d8 <sf_gen_proto_abbrev+0x184>
    78ac:	mov	r2, #0
    78b0:	mov	r1, #26
    78b4:	mov	r0, #15
    78b8:	bl	72d8 <gen_proto>
    78bc:	mov	r2, #0
    78c0:	mov	r1, #26
    78c4:	mov	r5, r0
    78c8:	mov	r0, #17
    78cc:	bl	72d8 <gen_proto>
    78d0:	mov	r4, r0
    78d4:	mov	r1, r0
    78d8:	mov	r0, r5
    78dc:	bl	49c0 <sf_gen_or>
    78e0:	mov	r2, #0
    78e4:	mov	r1, #26
    78e8:	mov	r0, #18
    78ec:	bl	72d8 <gen_proto>
    78f0:	mov	r1, r4
    78f4:	bl	49c0 <sf_gen_or>
    78f8:	mov	r2, #0
    78fc:	mov	r1, #26
    7900:	mov	r0, #24
    7904:	bl	72d8 <gen_proto>
    7908:	mov	r1, r4
    790c:	bl	49c0 <sf_gen_or>
    7910:	mov	r1, #26
    7914:	mov	r0, r1
    7918:	mov	r2, #0
    791c:	bl	72d8 <gen_proto>
    7920:	mov	r1, r4
    7924:	bl	49c0 <sf_gen_or>
    7928:	b	7748 <sf_gen_proto_abbrev+0xf4>
    792c:	mov	r0, #240	; 0xf0
    7930:	pop	{r4, r5, r6, lr}
    7934:	b	6600 <gen_linktype>
    7938:	mov	r0, #224	; 0xe0
    793c:	pop	{r4, r5, r6, lr}
    7940:	b	6600 <gen_linktype>
    7944:	mov	r0, #66	; 0x42
    7948:	pop	{r4, r5, r6, lr}
    794c:	b	6600 <gen_linktype>
    7950:	mov	r2, #0
    7954:	mov	r1, #24
    7958:	mov	r0, #129	; 0x81
    795c:	pop	{r4, r5, r6, lr}
    7960:	b	72d8 <gen_proto>
    7964:	mov	r2, #0
    7968:	mov	r1, #24
    796c:	mov	r0, #131	; 0x83
    7970:	pop	{r4, r5, r6, lr}
    7974:	b	72d8 <gen_proto>
    7978:	mov	r2, #0
    797c:	mov	r1, #24
    7980:	mov	r0, #130	; 0x82
    7984:	pop	{r4, r5, r6, lr}
    7988:	b	72d8 <gen_proto>
    798c:	mov	r0, #254	; 0xfe
    7990:	pop	{r4, r5, r6, lr}
    7994:	b	6600 <gen_linktype>
    7998:	ldr	r0, [pc, #512]	; 7ba0 <sf_gen_proto_abbrev+0x54c>
    799c:	pop	{r4, r5, r6, lr}
    79a0:	b	6600 <gen_linktype>
    79a4:	mov	r2, #0
    79a8:	mov	r1, #2
    79ac:	mov	r0, #112	; 0x70
    79b0:	pop	{r4, r5, r6, lr}
    79b4:	b	72d8 <gen_proto>
    79b8:	mov	r2, #0
    79bc:	mov	r1, #2
    79c0:	mov	r0, #103	; 0x67
    79c4:	bl	72d8 <gen_proto>
    79c8:	mov	r2, #0
    79cc:	mov	r1, #17
    79d0:	mov	r4, r0
    79d4:	mov	r0, #103	; 0x67
    79d8:	bl	72d8 <gen_proto>
    79dc:	mov	r1, r4
    79e0:	bl	49c0 <sf_gen_or>
    79e4:	b	7748 <sf_gen_proto_abbrev+0xf4>
    79e8:	mov	r2, #0
    79ec:	mov	r1, #2
    79f0:	mov	r0, #50	; 0x32
    79f4:	bl	72d8 <gen_proto>
    79f8:	mov	r2, #0
    79fc:	mov	r1, #17
    7a00:	mov	r4, r0
    7a04:	mov	r0, #50	; 0x32
    7a08:	bl	72d8 <gen_proto>
    7a0c:	mov	r1, r4
    7a10:	bl	49c0 <sf_gen_or>
    7a14:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7a18:	mov	r2, #0
    7a1c:	mov	r1, #2
    7a20:	mov	r0, #51	; 0x33
    7a24:	bl	72d8 <gen_proto>
    7a28:	mov	r2, #0
    7a2c:	mov	r1, #17
    7a30:	mov	r4, r0
    7a34:	mov	r0, #51	; 0x33
    7a38:	bl	72d8 <gen_proto>
    7a3c:	mov	r1, r4
    7a40:	bl	49c0 <sf_gen_or>
    7a44:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7a48:	mov	r2, #0
    7a4c:	mov	r1, #17
    7a50:	mov	r0, #58	; 0x3a
    7a54:	pop	{r4, r5, r6, lr}
    7a58:	b	72d8 <gen_proto>
    7a5c:	ldr	r0, [pc, #320]	; 7ba4 <sf_gen_proto_abbrev+0x550>
    7a60:	pop	{r4, r5, r6, lr}
    7a64:	b	6600 <gen_linktype>
    7a68:	ldr	r0, [pc, #312]	; 7ba8 <sf_gen_proto_abbrev+0x554>
    7a6c:	pop	{r4, r5, r6, lr}
    7a70:	b	6600 <gen_linktype>
    7a74:	ldr	r0, [pc, #304]	; 7bac <sf_gen_proto_abbrev+0x558>
    7a78:	pop	{r4, r5, r6, lr}
    7a7c:	b	6600 <gen_linktype>
    7a80:	ldr	r0, [pc, #296]	; 7bb0 <sf_gen_proto_abbrev+0x55c>
    7a84:	pop	{r4, r5, r6, lr}
    7a88:	b	6600 <gen_linktype>
    7a8c:	ldr	r0, [pc, #288]	; 7bb4 <sf_gen_proto_abbrev+0x560>
    7a90:	pop	{r4, r5, r6, lr}
    7a94:	b	6600 <gen_linktype>
    7a98:	ldr	r0, [pc, #280]	; 7bb8 <sf_gen_proto_abbrev+0x564>
    7a9c:	pop	{r4, r5, r6, lr}
    7aa0:	b	6600 <gen_linktype>
    7aa4:	ldr	r0, [pc, #272]	; 7bbc <sf_gen_proto_abbrev+0x568>
    7aa8:	pop	{r4, r5, r6, lr}
    7aac:	b	6600 <gen_linktype>
    7ab0:	mov	r2, #0
    7ab4:	mov	r1, #2
    7ab8:	mov	r0, #9
    7abc:	pop	{r4, r5, r6, lr}
    7ac0:	b	72d8 <gen_proto>
    7ac4:	mov	r1, #2
    7ac8:	mov	r0, r1
    7acc:	mov	r2, #0
    7ad0:	pop	{r4, r5, r6, lr}
    7ad4:	b	72d8 <gen_proto>
    7ad8:	mov	r2, #0
    7adc:	mov	r1, #2
    7ae0:	mov	r0, #1
    7ae4:	pop	{r4, r5, r6, lr}
    7ae8:	b	72d8 <gen_proto>
    7aec:	mov	r1, #2
    7af0:	mov	r2, #0
    7af4:	mov	r0, #17
    7af8:	bl	72d8 <gen_proto>
    7afc:	mov	r1, #17
    7b00:	mov	r4, r0
    7b04:	b	7914 <sf_gen_proto_abbrev+0x2c0>
    7b08:	mov	r2, #0
    7b0c:	mov	r1, #2
    7b10:	mov	r0, #6
    7b14:	bl	72d8 <gen_proto>
    7b18:	mov	r2, #0
    7b1c:	mov	r1, #17
    7b20:	mov	r4, r0
    7b24:	mov	r0, #6
    7b28:	bl	72d8 <gen_proto>
    7b2c:	mov	r1, r4
    7b30:	bl	49c0 <sf_gen_or>
    7b34:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7b38:	mov	r2, #0
    7b3c:	mov	r1, #2
    7b40:	mov	r0, #132	; 0x84
    7b44:	bl	72d8 <gen_proto>
    7b48:	mov	r2, #0
    7b4c:	mov	r1, #17
    7b50:	mov	r4, r0
    7b54:	mov	r0, #132	; 0x84
    7b58:	bl	72d8 <gen_proto>
    7b5c:	mov	r1, r4
    7b60:	bl	49c0 <sf_gen_or>
    7b64:	b	7748 <sf_gen_proto_abbrev+0xf4>
    7b68:	ldr	r0, [pc, #80]	; 7bc0 <sf_gen_proto_abbrev+0x56c>
    7b6c:	pop	{r4, r5, r6, lr}
    7b70:	b	6600 <gen_linktype>
    7b74:	ldr	r0, [pc, #72]	; 7bc4 <sf_gen_proto_abbrev+0x570>
    7b78:	pop	{r4, r5, r6, lr}
    7b7c:	b	6600 <gen_linktype>
    7b80:	mov	r0, #2048	; 0x800
    7b84:	pop	{r4, r5, r6, lr}
    7b88:	b	6600 <gen_linktype>
    7b8c:	ldr	r0, [pc, #52]	; 7bc8 <sf_gen_proto_abbrev+0x574>
    7b90:	add	r0, pc, r0
    7b94:	bl	2454 <sf_bpf_error>
    7b98:	bl	f18 <abort@plt>
    7b9c:	.word	0x0000be54
    7ba0:	.word	0x000080f3
    7ba4:	.word	0x000086dd
    7ba8:	.word	0x00006001
    7bac:	.word	0x00006002
    7bb0:	.word	0x00006007
    7bb4:	.word	0x00006004
    7bb8:	.word	0x00006003
    7bbc:	.word	0x0000809b
    7bc0:	.word	0x00008035
    7bc4:	.word	0x00000806
    7bc8:	.word	0x0000b9ac

00007bcc <sf_gen_load>:
    7bcc:	push	{r4, r5, r6, r7, r8, lr}
    7bd0:	mov	r8, r2
    7bd4:	mov	r4, r1
    7bd8:	mov	r7, r0
    7bdc:	bl	26f0 <alloc_reg>
    7be0:	ldr	r2, [r4, #8]
    7be4:	ldr	r3, [pc, #1368]	; 8144 <sf_gen_load+0x578>
    7be8:	mov	r5, #0
    7bec:	add	r3, pc, r3
    7bf0:	add	r3, r3, r2, lsl #2
    7bf4:	cmp	r8, #2
    7bf8:	str	r5, [r3, #792]	; 0x318
    7bfc:	mov	r6, r0
    7c00:	beq	7cd4 <sf_gen_load+0x108>
    7c04:	cmp	r8, #4
    7c08:	beq	7c24 <sf_gen_load+0x58>
    7c0c:	cmp	r8, #1
    7c10:	beq	7c20 <sf_gen_load+0x54>
    7c14:	ldr	r0, [pc, #1324]	; 8148 <sf_gen_load+0x57c>
    7c18:	add	r0, pc, r0
    7c1c:	bl	2454 <sf_bpf_error>
    7c20:	mov	r5, #16
    7c24:	sub	r3, r7, #1
    7c28:	cmp	r3, #39	; 0x27
    7c2c:	addls	pc, pc, r3, lsl #2
    7c30:	b	80f4 <sf_gen_load+0x528>
    7c34:	b	7d98 <sf_gen_load+0x1cc>
    7c38:	b	7fc8 <sf_gen_load+0x3fc>
    7c3c:	b	7fc8 <sf_gen_load+0x3fc>
    7c40:	b	7fc8 <sf_gen_load+0x3fc>
    7c44:	b	7e88 <sf_gen_load+0x2bc>
    7c48:	b	7e88 <sf_gen_load+0x2bc>
    7c4c:	b	7e88 <sf_gen_load+0x2bc>
    7c50:	b	7e88 <sf_gen_load+0x2bc>
    7c54:	b	7e88 <sf_gen_load+0x2bc>
    7c58:	b	7e88 <sf_gen_load+0x2bc>
    7c5c:	b	7fc8 <sf_gen_load+0x3fc>
    7c60:	b	7fc8 <sf_gen_load+0x3fc>
    7c64:	b	7fc8 <sf_gen_load+0x3fc>
    7c68:	b	7fc8 <sf_gen_load+0x3fc>
    7c6c:	b	7fc8 <sf_gen_load+0x3fc>
    7c70:	b	7fc8 <sf_gen_load+0x3fc>
    7c74:	b	7fc8 <sf_gen_load+0x3fc>
    7c78:	b	80e8 <sf_gen_load+0x51c>
    7c7c:	b	80f4 <sf_gen_load+0x528>
    7c80:	b	80f4 <sf_gen_load+0x528>
    7c84:	b	7e88 <sf_gen_load+0x2bc>
    7c88:	b	7e88 <sf_gen_load+0x2bc>
    7c8c:	b	80f4 <sf_gen_load+0x528>
    7c90:	b	80f4 <sf_gen_load+0x528>
    7c94:	b	80f4 <sf_gen_load+0x528>
    7c98:	b	80f4 <sf_gen_load+0x528>
    7c9c:	b	80f4 <sf_gen_load+0x528>
    7ca0:	b	80f4 <sf_gen_load+0x528>
    7ca4:	b	80f4 <sf_gen_load+0x528>
    7ca8:	b	80f4 <sf_gen_load+0x528>
    7cac:	b	80f4 <sf_gen_load+0x528>
    7cb0:	b	80f4 <sf_gen_load+0x528>
    7cb4:	b	80f4 <sf_gen_load+0x528>
    7cb8:	b	80f4 <sf_gen_load+0x528>
    7cbc:	b	80f4 <sf_gen_load+0x528>
    7cc0:	b	80f4 <sf_gen_load+0x528>
    7cc4:	b	80f4 <sf_gen_load+0x528>
    7cc8:	b	80f4 <sf_gen_load+0x528>
    7ccc:	b	80f4 <sf_gen_load+0x528>
    7cd0:	b	7cdc <sf_gen_load+0x110>
    7cd4:	mov	r5, #8
    7cd8:	b	7c24 <sf_gen_load+0x58>
    7cdc:	ldr	r3, [pc, #1128]	; 814c <sf_gen_load+0x580>
    7ce0:	add	r3, pc, r3
    7ce4:	ldr	r3, [r3, #856]	; 0x358
    7ce8:	bic	r2, r3, #8
    7cec:	cmp	r2, #119	; 0x77
    7cf0:	cmpne	r3, #163	; 0xa3
    7cf4:	bne	8138 <sf_gen_load+0x56c>
    7cf8:	mov	r0, #20
    7cfc:	bl	2494 <newchunk>
    7d00:	mov	r3, #97	; 0x61
    7d04:	orr	r5, r5, #64	; 0x40
    7d08:	str	r3, [r0]
    7d0c:	mov	r7, r0
    7d10:	ldr	r3, [r4, #8]
    7d14:	mov	r0, #20
    7d18:	str	r3, [r7, #12]
    7d1c:	bl	2494 <newchunk>
    7d20:	mov	r2, r7
    7d24:	str	r5, [r0]
    7d28:	b	7d30 <sf_gen_load+0x164>
    7d2c:	mov	r2, r3
    7d30:	ldr	r3, [r2, #16]
    7d34:	cmp	r3, #0
    7d38:	bne	7d2c <sf_gen_load+0x160>
    7d3c:	str	r0, [r2, #16]
    7d40:	ldr	r2, [r4, #4]
    7d44:	b	7d4c <sf_gen_load+0x180>
    7d48:	mov	r2, r3
    7d4c:	ldr	r3, [r2, #16]
    7d50:	cmp	r3, #0
    7d54:	bne	7d48 <sf_gen_load+0x17c>
    7d58:	str	r7, [r2, #16]
    7d5c:	str	r6, [r4, #8]
    7d60:	mov	r0, #20
    7d64:	bl	2494 <newchunk>
    7d68:	mov	r3, #2
    7d6c:	str	r6, [r0, #12]
    7d70:	str	r3, [r0]
    7d74:	ldr	r2, [r4, #4]
    7d78:	b	7d80 <sf_gen_load+0x1b4>
    7d7c:	mov	r2, r3
    7d80:	ldr	r3, [r2, #16]
    7d84:	cmp	r3, #0
    7d88:	bne	7d7c <sf_gen_load+0x1b0>
    7d8c:	str	r0, [r2, #16]
    7d90:	mov	r0, r4
    7d94:	pop	{r4, r5, r6, r7, r8, pc}
    7d98:	bl	27fc <gen_llprefixlen>
    7d9c:	subs	r7, r0, #0
    7da0:	mov	r0, #20
    7da4:	beq	8100 <sf_gen_load+0x534>
    7da8:	bl	2494 <newchunk>
    7dac:	mov	r3, #96	; 0x60
    7db0:	mov	r2, r7
    7db4:	str	r3, [r0]
    7db8:	ldr	r3, [r4, #8]
    7dbc:	str	r3, [r0, #12]
    7dc0:	b	7dc8 <sf_gen_load+0x1fc>
    7dc4:	mov	r2, r3
    7dc8:	ldr	r3, [r2, #16]
    7dcc:	cmp	r3, #0
    7dd0:	bne	7dc4 <sf_gen_load+0x1f8>
    7dd4:	str	r0, [r2, #16]
    7dd8:	mov	r0, #20
    7ddc:	bl	2494 <newchunk>
    7de0:	mov	r3, #12
    7de4:	mov	r2, r7
    7de8:	str	r3, [r0]
    7dec:	b	7df4 <sf_gen_load+0x228>
    7df0:	mov	r2, r3
    7df4:	ldr	r3, [r2, #16]
    7df8:	cmp	r3, #0
    7dfc:	bne	7df0 <sf_gen_load+0x224>
    7e00:	str	r0, [r2, #16]
    7e04:	mov	r0, #20
    7e08:	bl	2494 <newchunk>
    7e0c:	mov	r3, #7
    7e10:	mov	r2, r7
    7e14:	str	r3, [r0]
    7e18:	b	7e20 <sf_gen_load+0x254>
    7e1c:	mov	r2, r3
    7e20:	ldr	r3, [r2, #16]
    7e24:	cmp	r3, #0
    7e28:	bne	7e1c <sf_gen_load+0x250>
    7e2c:	str	r0, [r2, #16]
    7e30:	mov	r0, #20
    7e34:	bl	2494 <newchunk>
    7e38:	ldr	r3, [pc, #784]	; 8150 <sf_gen_load+0x584>
    7e3c:	orr	r5, r5, #64	; 0x40
    7e40:	add	r3, pc, r3
    7e44:	mov	r2, r7
    7e48:	ldr	r3, [r3, #860]	; 0x35c
    7e4c:	str	r5, [r0]
    7e50:	str	r3, [r0, #12]
    7e54:	b	7e5c <sf_gen_load+0x290>
    7e58:	mov	r2, r3
    7e5c:	ldr	r3, [r2, #16]
    7e60:	cmp	r3, #0
    7e64:	bne	7e58 <sf_gen_load+0x28c>
    7e68:	str	r0, [r2, #16]
    7e6c:	ldr	r2, [r4, #4]
    7e70:	b	7e78 <sf_gen_load+0x2ac>
    7e74:	mov	r2, r3
    7e78:	ldr	r3, [r2, #16]
    7e7c:	cmp	r3, #0
    7e80:	bne	7e74 <sf_gen_load+0x2a8>
    7e84:	b	7d58 <sf_gen_load+0x18c>
    7e88:	bl	2984 <gen_loadx_iphdrlen>
    7e8c:	mov	r8, r0
    7e90:	mov	r0, #20
    7e94:	bl	2494 <newchunk>
    7e98:	mov	r3, #96	; 0x60
    7e9c:	mov	r2, r8
    7ea0:	str	r3, [r0]
    7ea4:	ldr	r3, [r4, #8]
    7ea8:	str	r3, [r0, #12]
    7eac:	b	7eb4 <sf_gen_load+0x2e8>
    7eb0:	mov	r2, r3
    7eb4:	ldr	r3, [r2, #16]
    7eb8:	cmp	r3, #0
    7ebc:	bne	7eb0 <sf_gen_load+0x2e4>
    7ec0:	str	r0, [r2, #16]
    7ec4:	mov	r0, #20
    7ec8:	bl	2494 <newchunk>
    7ecc:	mov	r3, #12
    7ed0:	mov	r2, r8
    7ed4:	str	r3, [r0]
    7ed8:	b	7ee0 <sf_gen_load+0x314>
    7edc:	mov	r2, r3
    7ee0:	ldr	r3, [r2, #16]
    7ee4:	cmp	r3, #0
    7ee8:	bne	7edc <sf_gen_load+0x310>
    7eec:	str	r0, [r2, #16]
    7ef0:	mov	r0, #20
    7ef4:	bl	2494 <newchunk>
    7ef8:	mov	r3, #7
    7efc:	mov	r2, r8
    7f00:	str	r3, [r0]
    7f04:	b	7f0c <sf_gen_load+0x340>
    7f08:	mov	r2, r3
    7f0c:	ldr	r3, [r2, #16]
    7f10:	cmp	r3, #0
    7f14:	bne	7f08 <sf_gen_load+0x33c>
    7f18:	str	r0, [r2, #16]
    7f1c:	mov	r0, #20
    7f20:	bl	2494 <newchunk>
    7f24:	orr	r5, r5, #64	; 0x40
    7f28:	mov	r2, r8
    7f2c:	str	r5, [r0]
    7f30:	b	7f38 <sf_gen_load+0x36c>
    7f34:	mov	r2, r3
    7f38:	ldr	r3, [r2, #16]
    7f3c:	cmp	r3, #0
    7f40:	bne	7f34 <sf_gen_load+0x368>
    7f44:	ldr	r3, [pc, #520]	; 8154 <sf_gen_load+0x588>
    7f48:	str	r0, [r2, #16]
    7f4c:	add	r3, pc, r3
    7f50:	ldr	r2, [r3, #876]	; 0x36c
    7f54:	ldr	r3, [r3, #872]	; 0x368
    7f58:	add	r3, r2, r3
    7f5c:	str	r3, [r0, #12]
    7f60:	ldr	r2, [r4, #4]
    7f64:	b	7f6c <sf_gen_load+0x3a0>
    7f68:	mov	r2, r3
    7f6c:	ldr	r3, [r2, #16]
    7f70:	cmp	r3, #0
    7f74:	bne	7f68 <sf_gen_load+0x39c>
    7f78:	str	r8, [r2, #16]
    7f7c:	mov	r0, r7
    7f80:	bl	7654 <sf_gen_proto_abbrev>
    7f84:	mov	r7, r0
    7f88:	bl	2d84 <gen_ipfrag>
    7f8c:	mov	r1, r0
    7f90:	mov	r5, r0
    7f94:	mov	r0, r7
    7f98:	bl	3ca0 <sf_gen_and>
    7f9c:	ldr	r0, [r4]
    7fa0:	cmp	r0, #0
    7fa4:	beq	7fb0 <sf_gen_load+0x3e4>
    7fa8:	mov	r1, r5
    7fac:	bl	3ca0 <sf_gen_and>
    7fb0:	mov	r0, #2
    7fb4:	bl	7654 <sf_gen_proto_abbrev>
    7fb8:	mov	r1, r5
    7fbc:	bl	3ca0 <sf_gen_and>
    7fc0:	str	r5, [r4]
    7fc4:	b	7d5c <sf_gen_load+0x190>
    7fc8:	bl	2934 <gen_off_macpl>
    7fcc:	subs	r8, r0, #0
    7fd0:	mov	r0, #20
    7fd4:	beq	811c <sf_gen_load+0x550>
    7fd8:	bl	2494 <newchunk>
    7fdc:	mov	r3, #96	; 0x60
    7fe0:	mov	r2, r8
    7fe4:	str	r3, [r0]
    7fe8:	ldr	r3, [r4, #8]
    7fec:	str	r3, [r0, #12]
    7ff0:	b	7ff8 <sf_gen_load+0x42c>
    7ff4:	mov	r2, r3
    7ff8:	ldr	r3, [r2, #16]
    7ffc:	cmp	r3, #0
    8000:	bne	7ff4 <sf_gen_load+0x428>
    8004:	str	r0, [r2, #16]
    8008:	mov	r0, #20
    800c:	bl	2494 <newchunk>
    8010:	mov	r3, #12
    8014:	mov	r2, r8
    8018:	str	r3, [r0]
    801c:	b	8024 <sf_gen_load+0x458>
    8020:	mov	r2, r3
    8024:	ldr	r3, [r2, #16]
    8028:	cmp	r3, #0
    802c:	bne	8020 <sf_gen_load+0x454>
    8030:	str	r0, [r2, #16]
    8034:	mov	r0, #20
    8038:	bl	2494 <newchunk>
    803c:	mov	r3, #7
    8040:	mov	r2, r8
    8044:	str	r3, [r0]
    8048:	b	8050 <sf_gen_load+0x484>
    804c:	mov	r2, r3
    8050:	ldr	r3, [r2, #16]
    8054:	cmp	r3, #0
    8058:	bne	804c <sf_gen_load+0x480>
    805c:	str	r0, [r2, #16]
    8060:	mov	r0, #20
    8064:	bl	2494 <newchunk>
    8068:	ldr	r3, [pc, #232]	; 8158 <sf_gen_load+0x58c>
    806c:	orr	r5, r5, #64	; 0x40
    8070:	add	r3, pc, r3
    8074:	mov	r2, r8
    8078:	ldr	r1, [r3, #876]	; 0x36c
    807c:	ldr	r3, [r3, #872]	; 0x368
    8080:	add	r3, r1, r3
    8084:	str	r5, [r0]
    8088:	str	r3, [r0, #12]
    808c:	b	8094 <sf_gen_load+0x4c8>
    8090:	mov	r2, r3
    8094:	ldr	r3, [r2, #16]
    8098:	cmp	r3, #0
    809c:	bne	8090 <sf_gen_load+0x4c4>
    80a0:	str	r0, [r2, #16]
    80a4:	ldr	r2, [r4, #4]
    80a8:	b	80b0 <sf_gen_load+0x4e4>
    80ac:	mov	r2, r3
    80b0:	ldr	r3, [r2, #16]
    80b4:	cmp	r3, #0
    80b8:	bne	80ac <sf_gen_load+0x4e0>
    80bc:	str	r8, [r2, #16]
    80c0:	mov	r0, r7
    80c4:	bl	7654 <sf_gen_proto_abbrev>
    80c8:	mov	r5, r0
    80cc:	ldr	r0, [r4]
    80d0:	cmp	r0, #0
    80d4:	beq	80e0 <sf_gen_load+0x514>
    80d8:	mov	r1, r5
    80dc:	bl	3ca0 <sf_gen_and>
    80e0:	str	r5, [r4]
    80e4:	b	7d5c <sf_gen_load+0x190>
    80e8:	ldr	r0, [pc, #108]	; 815c <sf_gen_load+0x590>
    80ec:	add	r0, pc, r0
    80f0:	bl	2454 <sf_bpf_error>
    80f4:	ldr	r0, [pc, #100]	; 8160 <sf_gen_load+0x594>
    80f8:	add	r0, pc, r0
    80fc:	bl	2454 <sf_bpf_error>
    8100:	bl	2494 <newchunk>
    8104:	mov	r3, #97	; 0x61
    8108:	str	r3, [r0]
    810c:	ldr	r3, [r4, #8]
    8110:	mov	r7, r0
    8114:	str	r3, [r0, #12]
    8118:	b	7e30 <sf_gen_load+0x264>
    811c:	bl	2494 <newchunk>
    8120:	mov	r3, #97	; 0x61
    8124:	str	r3, [r0]
    8128:	ldr	r3, [r4, #8]
    812c:	mov	r8, r0
    8130:	str	r3, [r0, #12]
    8134:	b	8060 <sf_gen_load+0x494>
    8138:	ldr	r0, [pc, #36]	; 8164 <sf_gen_load+0x598>
    813c:	add	r0, pc, r0
    8140:	bl	2454 <sf_bpf_error>
    8144:	.word	0x0002877c
    8148:	.word	0x0000b970
    814c:	.word	0x00028688
    8150:	.word	0x00028528
    8154:	.word	0x0002841c
    8158:	.word	0x000282f8
    815c:	.word	0x0000b504
    8160:	.word	0x0000b4b0
    8164:	.word	0x0000b488

00008168 <sf_gen_inbound>:
    8168:	ldr	r2, [pc, #424]	; 8318 <sf_gen_inbound+0x1b0>
    816c:	push	{r4, r5, lr}
    8170:	add	r2, pc, r2
    8174:	sub	sp, sp, #20
    8178:	ldr	r1, [r2, #856]	; 0x358
    817c:	mov	r4, r0
    8180:	cmp	r1, #168	; 0xa8
    8184:	bgt	8208 <sf_gen_inbound+0xa0>
    8188:	cmp	r1, #167	; 0xa7
    818c:	bge	82a0 <sf_gen_inbound+0x138>
    8190:	cmp	r1, #137	; 0x89
    8194:	bgt	81dc <sf_gen_inbound+0x74>
    8198:	cmp	r1, #130	; 0x82
    819c:	bge	82a0 <sf_gen_inbound+0x138>
    81a0:	cmp	r1, #8
    81a4:	beq	8254 <sf_gen_inbound+0xec>
    81a8:	cmp	r1, #113	; 0x71
    81ac:	bne	8248 <sf_gen_inbound+0xe0>
    81b0:	cmp	r0, #0
    81b4:	moveq	r3, r0
    81b8:	movne	r3, #4
    81bc:	movne	r2, #8
    81c0:	movne	r1, #0
    81c4:	moveq	r1, r3
    81c8:	moveq	r2, #8
    81cc:	mov	r0, #1
    81d0:	add	sp, sp, #20
    81d4:	pop	{r4, r5, lr}
    81d8:	b	2d1c <gen_cmp>
    81dc:	cmp	r1, #164	; 0xa4
    81e0:	beq	82a0 <sf_gen_inbound+0x138>
    81e4:	cmp	r1, #166	; 0xa6
    81e8:	bne	8248 <sf_gen_inbound+0xe0>
    81ec:	cmp	r0, #0
    81f0:	beq	8308 <sf_gen_inbound+0x1a0>
    81f4:	mov	r3, #1
    81f8:	mov	r0, r3
    81fc:	mov	r2, #16
    8200:	mov	r1, #0
    8204:	b	81d0 <sf_gen_inbound+0x68>
    8208:	cmp	r1, #183	; 0xb7
    820c:	beq	82a0 <sf_gen_inbound+0x138>
    8210:	ble	8294 <sf_gen_inbound+0x12c>
    8214:	cmp	r1, #200	; 0xc8
    8218:	beq	82a0 <sf_gen_inbound+0x138>
    821c:	cmp	r1, #226	; 0xe2
    8220:	bne	8240 <sf_gen_inbound+0xd8>
    8224:	cmp	r0, #0
    8228:	beq	82d4 <sf_gen_inbound+0x16c>
    822c:	mov	r3, #1
    8230:	mov	r0, r3
    8234:	mov	r2, #8
    8238:	mov	r1, #2
    823c:	b	81d0 <sf_gen_inbound+0x68>
    8240:	cmp	r1, #194	; 0xc2
    8244:	beq	82a0 <sf_gen_inbound+0x138>
    8248:	ldr	r0, [pc, #204]	; 831c <sf_gen_inbound+0x1b4>
    824c:	add	r0, pc, r0
    8250:	bl	2454 <sf_bpf_error>
    8254:	mov	r0, #0
    8258:	bl	5dfc <sf_gen_loadi>
    825c:	mov	r2, #1
    8260:	mov	r1, r0
    8264:	mov	r0, r2
    8268:	bl	7bcc <sf_gen_load>
    826c:	mov	r5, r0
    8270:	mov	r0, #0
    8274:	bl	5dfc <sf_gen_loadi>
    8278:	mov	r3, r4
    827c:	mov	r1, r5
    8280:	mov	r2, r0
    8284:	mov	r0, #16
    8288:	add	sp, sp, #20
    828c:	pop	{r4, r5, lr}
    8290:	b	5c10 <sf_gen_relation>
    8294:	sub	r3, r1, #178	; 0xb2
    8298:	cmp	r3, #3
    829c:	bhi	8248 <sf_gen_inbound+0xe0>
    82a0:	cmp	r4, #0
    82a4:	beq	82e4 <sf_gen_inbound+0x17c>
    82a8:	mov	r1, #0
    82ac:	mov	r2, #16
    82b0:	mov	r3, #1
    82b4:	str	r1, [sp, #8]
    82b8:	str	r1, [sp, #4]
    82bc:	str	r2, [sp]
    82c0:	mov	r0, r3
    82c4:	mov	r1, #3
    82c8:	bl	2c88 <gen_ncmp>
    82cc:	add	sp, sp, #20
    82d0:	pop	{r4, r5, pc}
    82d4:	mov	r3, #2
    82d8:	mov	r1, r3
    82dc:	mov	r2, #8
    82e0:	b	81cc <sf_gen_inbound+0x64>
    82e4:	mov	r3, #1
    82e8:	mov	r2, #16
    82ec:	str	r4, [sp, #4]
    82f0:	str	r3, [sp, #8]
    82f4:	mov	r0, r3
    82f8:	str	r2, [sp]
    82fc:	mov	r1, #3
    8300:	bl	2c88 <gen_ncmp>
    8304:	b	82cc <sf_gen_inbound+0x164>
    8308:	mov	r3, r0
    830c:	mov	r1, r0
    8310:	mov	r2, #16
    8314:	b	81cc <sf_gen_inbound+0x64>
    8318:	.word	0x000281f8
    831c:	.word	0x0000b3dc

00008320 <gen_hostop>:
    8320:	push	{r4, r5, r6, r7, lr}
    8324:	mov	r5, r0
    8328:	sub	sp, sp, #20
    832c:	mov	r4, r1
    8330:	mov	r6, r3
    8334:	cmp	r2, #4
    8338:	addls	pc, pc, r2, lsl #2
    833c:	b	8464 <gen_hostop+0x144>
    8340:	b	83a4 <gen_hostop+0x84>
    8344:	b	835c <gen_hostop+0x3c>
    8348:	b	8354 <gen_hostop+0x34>
    834c:	b	83a4 <gen_hostop+0x84>
    8350:	b	8404 <gen_hostop+0xe4>
    8354:	ldr	r3, [sp, #44]	; 0x2c
    8358:	str	r3, [sp, #40]	; 0x28
    835c:	mov	r0, r6
    8360:	bl	6600 <gen_linktype>
    8364:	mov	r2, #0
    8368:	mov	r1, #16
    836c:	mov	r3, r4
    8370:	stm	sp, {r1, r2}
    8374:	str	r5, [sp, #8]
    8378:	ldr	r1, [sp, #40]	; 0x28
    837c:	mov	r6, r0
    8380:	mov	r0, #3
    8384:	bl	2c88 <gen_ncmp>
    8388:	mov	r4, r0
    838c:	mov	r1, r0
    8390:	mov	r0, r6
    8394:	bl	3ca0 <sf_gen_and>
    8398:	mov	r0, r4
    839c:	add	sp, sp, #20
    83a0:	pop	{r4, r5, r6, r7, pc}
    83a4:	ldr	r3, [sp, #44]	; 0x2c
    83a8:	mov	r2, #1
    83ac:	str	r3, [sp, #4]
    83b0:	ldr	r3, [sp, #40]	; 0x28
    83b4:	str	r3, [sp]
    83b8:	mov	r3, r6
    83bc:	bl	8320 <gen_hostop>
    83c0:	ldr	r3, [sp, #44]	; 0x2c
    83c4:	mov	r1, r4
    83c8:	str	r3, [sp, #4]
    83cc:	ldr	r3, [sp, #40]	; 0x28
    83d0:	mov	r2, #2
    83d4:	str	r3, [sp]
    83d8:	mov	r3, r6
    83dc:	mov	r7, r0
    83e0:	mov	r0, r5
    83e4:	bl	8320 <gen_hostop>
    83e8:	mov	r4, r0
    83ec:	mov	r1, r0
    83f0:	mov	r0, r7
    83f4:	bl	49c0 <sf_gen_or>
    83f8:	mov	r0, r4
    83fc:	add	sp, sp, #20
    8400:	pop	{r4, r5, r6, r7, pc}
    8404:	ldr	r3, [sp, #44]	; 0x2c
    8408:	mov	r2, #1
    840c:	str	r3, [sp, #4]
    8410:	ldr	r3, [sp, #40]	; 0x28
    8414:	str	r3, [sp]
    8418:	mov	r3, r6
    841c:	bl	8320 <gen_hostop>
    8420:	ldr	r3, [sp, #44]	; 0x2c
    8424:	mov	r1, r4
    8428:	str	r3, [sp, #4]
    842c:	ldr	r3, [sp, #40]	; 0x28
    8430:	mov	r2, #2
    8434:	str	r3, [sp]
    8438:	mov	r3, r6
    843c:	mov	r7, r0
    8440:	mov	r0, r5
    8444:	bl	8320 <gen_hostop>
    8448:	mov	r4, r0
    844c:	mov	r1, r0
    8450:	mov	r0, r7
    8454:	bl	3ca0 <sf_gen_and>
    8458:	mov	r0, r4
    845c:	add	sp, sp, #20
    8460:	pop	{r4, r5, r6, r7, pc}
    8464:	bl	f18 <abort@plt>

00008468 <gen_dnhostop>:
    8468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    846c:	mov	r4, r0
    8470:	sub	sp, sp, #28
    8474:	cmp	r1, #24
    8478:	addls	pc, pc, r1, lsl #2
    847c:	b	86f0 <gen_dnhostop+0x288>
    8480:	b	86bc <gen_dnhostop+0x254>
    8484:	b	84e4 <gen_dnhostop+0x7c>
    8488:	b	8668 <gen_dnhostop+0x200>
    848c:	b	86bc <gen_dnhostop+0x254>
    8490:	b	867c <gen_dnhostop+0x214>
    8494:	b	86f0 <gen_dnhostop+0x288>
    8498:	b	86f0 <gen_dnhostop+0x288>
    849c:	b	86f0 <gen_dnhostop+0x288>
    84a0:	b	86f0 <gen_dnhostop+0x288>
    84a4:	b	86f0 <gen_dnhostop+0x288>
    84a8:	b	86f0 <gen_dnhostop+0x288>
    84ac:	b	86f0 <gen_dnhostop+0x288>
    84b0:	b	86f0 <gen_dnhostop+0x288>
    84b4:	b	86f0 <gen_dnhostop+0x288>
    84b8:	b	86f0 <gen_dnhostop+0x288>
    84bc:	b	86f0 <gen_dnhostop+0x288>
    84c0:	b	86f0 <gen_dnhostop+0x288>
    84c4:	b	86f0 <gen_dnhostop+0x288>
    84c8:	b	86f0 <gen_dnhostop+0x288>
    84cc:	b	86f0 <gen_dnhostop+0x288>
    84d0:	b	86f0 <gen_dnhostop+0x288>
    84d4:	b	86f0 <gen_dnhostop+0x288>
    84d8:	b	86f0 <gen_dnhostop+0x288>
    84dc:	b	86f0 <gen_dnhostop+0x288>
    84e0:	b	86b0 <gen_dnhostop+0x248>
    84e4:	mov	r9, #5
    84e8:	mov	r7, #6
    84ec:	mov	r8, #17
    84f0:	mov	fp, #18
    84f4:	ldr	r0, [pc, #504]	; 86f4 <gen_dnhostop+0x28c>
    84f8:	bl	6600 <gen_linktype>
    84fc:	mov	r5, #16
    8500:	mov	r6, #0
    8504:	ldr	r3, [pc, #492]	; 86f8 <gen_dnhostop+0x290>
    8508:	stm	sp, {r5, r6}
    850c:	str	r3, [sp, #8]
    8510:	mov	r2, #8
    8514:	ldr	r3, [pc, #480]	; 86fc <gen_dnhostop+0x294>
    8518:	mov	r1, #2
    851c:	rev16	r4, r4
    8520:	str	r0, [sp, #20]
    8524:	mov	r0, #3
    8528:	bl	2c88 <gen_ncmp>
    852c:	mov	r1, fp
    8530:	uxth	fp, r4
    8534:	mov	r3, fp
    8538:	mov	r2, #8
    853c:	mov	sl, r0
    8540:	mov	r0, #3
    8544:	bl	2d1c <gen_cmp>
    8548:	mov	r4, r0
    854c:	mov	r1, r0
    8550:	mov	r0, sl
    8554:	bl	3ca0 <sf_gen_and>
    8558:	mov	r3, #6
    855c:	stm	sp, {r5, r6}
    8560:	mov	r2, r5
    8564:	str	r3, [sp, #8]
    8568:	mov	r1, #2
    856c:	mov	r3, #7
    8570:	mov	r0, #3
    8574:	bl	2c88 <gen_ncmp>
    8578:	mov	r3, fp
    857c:	mov	r2, #8
    8580:	mov	r1, r8
    8584:	mov	sl, r0
    8588:	mov	r0, #3
    858c:	bl	2d1c <gen_cmp>
    8590:	mov	r8, r0
    8594:	mov	r1, r0
    8598:	mov	r0, sl
    859c:	bl	3ca0 <sf_gen_and>
    85a0:	mov	r1, r4
    85a4:	mov	r0, r8
    85a8:	bl	49c0 <sf_gen_or>
    85ac:	ldr	r3, [pc, #332]	; 8700 <gen_dnhostop+0x298>
    85b0:	stm	sp, {r5, r6}
    85b4:	str	r3, [sp, #8]
    85b8:	mov	r2, #8
    85bc:	ldr	r3, [pc, #312]	; 86fc <gen_dnhostop+0x294>
    85c0:	mov	r1, #2
    85c4:	mov	r0, #3
    85c8:	bl	2c88 <gen_ncmp>
    85cc:	mov	r3, fp
    85d0:	mov	r2, #8
    85d4:	mov	r1, r7
    85d8:	mov	r8, r0
    85dc:	mov	r0, #3
    85e0:	bl	2d1c <gen_cmp>
    85e4:	mov	r7, r0
    85e8:	mov	r1, r0
    85ec:	mov	r0, r8
    85f0:	bl	3ca0 <sf_gen_and>
    85f4:	mov	r1, r4
    85f8:	mov	r0, r7
    85fc:	bl	49c0 <sf_gen_or>
    8600:	mov	r1, #2
    8604:	stm	sp, {r5, r6}
    8608:	mov	r2, r5
    860c:	str	r1, [sp, #8]
    8610:	mov	r3, #7
    8614:	mov	r0, #3
    8618:	bl	2c88 <gen_ncmp>
    861c:	mov	r3, fp
    8620:	mov	r2, #8
    8624:	mov	r1, r9
    8628:	mov	r6, r0
    862c:	mov	r0, #3
    8630:	bl	2d1c <gen_cmp>
    8634:	mov	r5, r0
    8638:	mov	r1, r0
    863c:	mov	r0, r6
    8640:	bl	3ca0 <sf_gen_and>
    8644:	mov	r1, r4
    8648:	mov	r0, r5
    864c:	bl	49c0 <sf_gen_or>
    8650:	ldr	r0, [sp, #20]
    8654:	mov	r1, r4
    8658:	bl	3ca0 <sf_gen_and>
    865c:	mov	r0, r4
    8660:	add	sp, sp, #28
    8664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8668:	mov	r9, #3
    866c:	mov	r7, #4
    8670:	mov	r8, #9
    8674:	mov	fp, #10
    8678:	b	84f4 <gen_dnhostop+0x8c>
    867c:	mov	r1, #1
    8680:	bl	8468 <gen_dnhostop>
    8684:	mov	r1, #2
    8688:	mov	r5, r0
    868c:	mov	r0, r4
    8690:	bl	8468 <gen_dnhostop>
    8694:	mov	r4, r0
    8698:	mov	r1, r0
    869c:	mov	r0, r5
    86a0:	bl	3ca0 <sf_gen_and>
    86a4:	mov	r0, r4
    86a8:	add	sp, sp, #28
    86ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    86b0:	ldr	r0, [pc, #76]	; 8704 <gen_dnhostop+0x29c>
    86b4:	add	r0, pc, r0
    86b8:	bl	2454 <sf_bpf_error>
    86bc:	mov	r1, #1
    86c0:	bl	8468 <gen_dnhostop>
    86c4:	mov	r1, #2
    86c8:	mov	r5, r0
    86cc:	mov	r0, r4
    86d0:	bl	8468 <gen_dnhostop>
    86d4:	mov	r4, r0
    86d8:	mov	r1, r0
    86dc:	mov	r0, r5
    86e0:	bl	49c0 <sf_gen_or>
    86e4:	mov	r0, r4
    86e8:	add	sp, sp, #28
    86ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    86f0:	bl	f18 <abort@plt>
    86f4:	.word	0x00006003
    86f8:	.word	0x00008106
    86fc:	.word	0x0000ff07
    8700:	.word	0x00008102
    8704:	.word	0x0000afa4

00008708 <gen_host>:
    8708:	push	{r4, r5, r6, r7, r8, r9, lr}
    870c:	sub	sp, sp, #12
    8710:	mov	r5, r0
    8714:	ldr	r4, [sp, #40]	; 0x28
    8718:	mov	r7, r1
    871c:	cmp	r4, #2
    8720:	mov	r6, r3
    8724:	beq	87e0 <gen_host+0xd8>
    8728:	ldr	r1, [pc, #784]	; 8a40 <gen_host+0x338>
    872c:	add	r1, pc, r1
    8730:	cmp	r2, #40	; 0x28
    8734:	addls	pc, pc, r2, lsl #2
    8738:	b	8a3c <gen_host+0x334>
    873c:	b	89b8 <gen_host+0x2b0>
    8740:	b	8a3c <gen_host+0x334>
    8744:	b	8990 <gen_host+0x288>
    8748:	b	8968 <gen_host+0x260>
    874c:	b	8938 <gen_host+0x230>
    8750:	b	892c <gen_host+0x224>
    8754:	b	8920 <gen_host+0x218>
    8758:	b	8914 <gen_host+0x20c>
    875c:	b	8908 <gen_host+0x200>
    8760:	b	88fc <gen_host+0x1f4>
    8764:	b	88f0 <gen_host+0x1e8>
    8768:	b	88e4 <gen_host+0x1dc>
    876c:	b	88d0 <gen_host+0x1c8>
    8770:	b	88c4 <gen_host+0x1bc>
    8774:	b	88b8 <gen_host+0x1b0>
    8778:	b	88ac <gen_host+0x1a4>
    877c:	b	88a0 <gen_host+0x198>
    8780:	b	8894 <gen_host+0x18c>
    8784:	b	8888 <gen_host+0x180>
    8788:	b	887c <gen_host+0x174>
    878c:	b	8870 <gen_host+0x168>
    8790:	b	8864 <gen_host+0x15c>
    8794:	b	8858 <gen_host+0x150>
    8798:	b	884c <gen_host+0x144>
    879c:	b	8840 <gen_host+0x138>
    87a0:	b	8834 <gen_host+0x12c>
    87a4:	b	8828 <gen_host+0x120>
    87a8:	b	881c <gen_host+0x114>
    87ac:	b	8810 <gen_host+0x108>
    87b0:	b	8804 <gen_host+0xfc>
    87b4:	b	87f8 <gen_host+0xf0>
    87b8:	b	8a3c <gen_host+0x334>
    87bc:	b	8a3c <gen_host+0x334>
    87c0:	b	8a3c <gen_host+0x334>
    87c4:	b	8a3c <gen_host+0x334>
    87c8:	b	8a3c <gen_host+0x334>
    87cc:	b	8a3c <gen_host+0x334>
    87d0:	b	8a3c <gen_host+0x334>
    87d4:	b	8a3c <gen_host+0x334>
    87d8:	b	8a3c <gen_host+0x334>
    87dc:	b	87ec <gen_host+0xe4>
    87e0:	ldr	r1, [pc, #604]	; 8a44 <gen_host+0x33c>
    87e4:	add	r1, pc, r1
    87e8:	b	8730 <gen_host+0x28>
    87ec:	ldr	r0, [pc, #596]	; 8a48 <gen_host+0x340>
    87f0:	add	r0, pc, r0
    87f4:	bl	2454 <sf_bpf_error>
    87f8:	ldr	r0, [pc, #588]	; 8a4c <gen_host+0x344>
    87fc:	add	r0, pc, r0
    8800:	bl	2454 <sf_bpf_error>
    8804:	ldr	r0, [pc, #580]	; 8a50 <gen_host+0x348>
    8808:	add	r0, pc, r0
    880c:	bl	2454 <sf_bpf_error>
    8810:	ldr	r0, [pc, #572]	; 8a54 <gen_host+0x34c>
    8814:	add	r0, pc, r0
    8818:	bl	2454 <sf_bpf_error>
    881c:	ldr	r0, [pc, #564]	; 8a58 <gen_host+0x350>
    8820:	add	r0, pc, r0
    8824:	bl	2454 <sf_bpf_error>
    8828:	ldr	r0, [pc, #556]	; 8a5c <gen_host+0x354>
    882c:	add	r0, pc, r0
    8830:	bl	2454 <sf_bpf_error>
    8834:	ldr	r0, [pc, #548]	; 8a60 <gen_host+0x358>
    8838:	add	r0, pc, r0
    883c:	bl	2454 <sf_bpf_error>
    8840:	ldr	r0, [pc, #540]	; 8a64 <gen_host+0x35c>
    8844:	add	r0, pc, r0
    8848:	bl	2454 <sf_bpf_error>
    884c:	ldr	r0, [pc, #532]	; 8a68 <gen_host+0x360>
    8850:	add	r0, pc, r0
    8854:	bl	2454 <sf_bpf_error>
    8858:	ldr	r0, [pc, #524]	; 8a6c <gen_host+0x364>
    885c:	add	r0, pc, r0
    8860:	bl	2454 <sf_bpf_error>
    8864:	ldr	r0, [pc, #516]	; 8a70 <gen_host+0x368>
    8868:	add	r0, pc, r0
    886c:	bl	2454 <sf_bpf_error>
    8870:	ldr	r0, [pc, #508]	; 8a74 <gen_host+0x36c>
    8874:	add	r0, pc, r0
    8878:	bl	2454 <sf_bpf_error>
    887c:	ldr	r0, [pc, #500]	; 8a78 <gen_host+0x370>
    8880:	add	r0, pc, r0
    8884:	bl	2454 <sf_bpf_error>
    8888:	ldr	r0, [pc, #492]	; 8a7c <gen_host+0x374>
    888c:	add	r0, pc, r0
    8890:	bl	2454 <sf_bpf_error>
    8894:	ldr	r0, [pc, #484]	; 8a80 <gen_host+0x378>
    8898:	add	r0, pc, r0
    889c:	bl	2454 <sf_bpf_error>
    88a0:	ldr	r0, [pc, #476]	; 8a84 <gen_host+0x37c>
    88a4:	add	r0, pc, r0
    88a8:	bl	2454 <sf_bpf_error>
    88ac:	ldr	r0, [pc, #468]	; 8a88 <gen_host+0x380>
    88b0:	add	r0, pc, r0
    88b4:	bl	2454 <sf_bpf_error>
    88b8:	ldr	r0, [pc, #460]	; 8a8c <gen_host+0x384>
    88bc:	add	r0, pc, r0
    88c0:	bl	2454 <sf_bpf_error>
    88c4:	ldr	r0, [pc, #452]	; 8a90 <gen_host+0x388>
    88c8:	add	r0, pc, r0
    88cc:	bl	2454 <sf_bpf_error>
    88d0:	mov	r1, r6
    88d4:	mov	r0, r5
    88d8:	add	sp, sp, #12
    88dc:	pop	{r4, r5, r6, r7, r8, r9, lr}
    88e0:	b	8468 <gen_dnhostop>
    88e4:	ldr	r0, [pc, #424]	; 8a94 <gen_host+0x38c>
    88e8:	add	r0, pc, r0
    88ec:	bl	2454 <sf_bpf_error>
    88f0:	ldr	r0, [pc, #416]	; 8a98 <gen_host+0x390>
    88f4:	add	r0, pc, r0
    88f8:	bl	2454 <sf_bpf_error>
    88fc:	ldr	r0, [pc, #408]	; 8a9c <gen_host+0x394>
    8900:	add	r0, pc, r0
    8904:	bl	2454 <sf_bpf_error>
    8908:	ldr	r0, [pc, #400]	; 8aa0 <gen_host+0x398>
    890c:	add	r0, pc, r0
    8910:	bl	2454 <sf_bpf_error>
    8914:	ldr	r0, [pc, #392]	; 8aa4 <gen_host+0x39c>
    8918:	add	r0, pc, r0
    891c:	bl	2454 <sf_bpf_error>
    8920:	ldr	r0, [pc, #384]	; 8aa8 <gen_host+0x3a0>
    8924:	add	r0, pc, r0
    8928:	bl	2454 <sf_bpf_error>
    892c:	ldr	r0, [pc, #376]	; 8aac <gen_host+0x3a4>
    8930:	add	r0, pc, r0
    8934:	bl	2454 <sf_bpf_error>
    8938:	mov	ip, #24
    893c:	mov	r3, #14
    8940:	mov	r2, r6
    8944:	stm	sp, {r3, ip}
    8948:	mov	r1, r7
    894c:	mov	r0, r5
    8950:	ldr	r3, [pc, #344]	; 8ab0 <gen_host+0x3a8>
    8954:	bl	8320 <gen_hostop>
    8958:	mov	r8, r0
    895c:	mov	r0, r8
    8960:	add	sp, sp, #12
    8964:	pop	{r4, r5, r6, r7, r8, r9, pc}
    8968:	mov	ip, #24
    896c:	mov	r3, #14
    8970:	mov	r2, r6
    8974:	stm	sp, {r3, ip}
    8978:	mov	r1, r7
    897c:	mov	r0, r5
    8980:	ldr	r3, [pc, #300]	; 8ab4 <gen_host+0x3ac>
    8984:	bl	8320 <gen_hostop>
    8988:	mov	r8, r0
    898c:	b	895c <gen_host+0x254>
    8990:	mov	ip, #16
    8994:	mov	r3, #12
    8998:	mov	r2, r6
    899c:	stm	sp, {r3, ip}
    89a0:	mov	r1, r7
    89a4:	mov	r0, r5
    89a8:	mov	r3, #2048	; 0x800
    89ac:	bl	8320 <gen_hostop>
    89b0:	mov	r8, r0
    89b4:	b	895c <gen_host+0x254>
    89b8:	mov	r3, r6
    89bc:	str	r4, [sp]
    89c0:	mov	r2, #2
    89c4:	mov	r1, r7
    89c8:	mov	r0, r5
    89cc:	bl	8708 <gen_host>
    89d0:	ldr	r3, [pc, #224]	; 8ab8 <gen_host+0x3b0>
    89d4:	add	r3, pc, r3
    89d8:	ldr	r3, [r3, #4]
    89dc:	cmp	r3, #0
    89e0:	mov	r8, r0
    89e4:	bne	895c <gen_host+0x254>
    89e8:	mov	r3, r6
    89ec:	mov	r2, #3
    89f0:	mov	r1, r7
    89f4:	str	r4, [sp]
    89f8:	mov	r0, r5
    89fc:	bl	8708 <gen_host>
    8a00:	mov	r9, r0
    8a04:	mov	r1, r0
    8a08:	mov	r0, r8
    8a0c:	bl	49c0 <sf_gen_or>
    8a10:	mov	r1, r7
    8a14:	str	r4, [sp]
    8a18:	mov	r3, r6
    8a1c:	mov	r0, r5
    8a20:	mov	r2, #4
    8a24:	bl	8708 <gen_host>
    8a28:	mov	r8, r0
    8a2c:	mov	r1, r0
    8a30:	mov	r0, r9
    8a34:	bl	49c0 <sf_gen_or>
    8a38:	b	895c <gen_host+0x254>
    8a3c:	bl	f18 <abort@plt>
    8a40:	.word	0x0000d078
    8a44:	.word	0x0000ae98
    8a48:	.word	0x0000b1bc
    8a4c:	.word	0x0000b18c
    8a50:	.word	0x0000b15c
    8a54:	.word	0x0000b130
    8a58:	.word	0x0000b104
    8a5c:	.word	0x0000b0d8
    8a60:	.word	0x0000b0ac
    8a64:	.word	0x0000ae14
    8a68:	.word	0x0000af58
    8a6c:	.word	0x0000af04
    8a70:	.word	0x0000aed8
    8a74:	.word	0x0000b050
    8a78:	.word	0x0000b028
    8a7c:	.word	0x0000affc
    8a80:	.word	0x0000afcc
    8a84:	.word	0x0000af70
    8a88:	.word	0x0000af8c
    8a8c:	.word	0x0000af10
    8a90:	.word	0x0000af28
    8a94:	.word	0x0000ae98
    8a98:	.word	0x0000ae2c
    8a9c:	.word	0x0000ae00
    8aa0:	.word	0x0000add4
    8aa4:	.word	0x0000ada8
    8aa8:	.word	0x0000ad5c
    8aac:	.word	0x0000ad70
    8ab0:	.word	0x00008035
    8ab4:	.word	0x00000806
    8ab8:	.word	0x000278a4

00008abc <sf_gen_mcode>:
    8abc:	push	{r4, r5, r6, r7, lr}
    8ac0:	sub	sp, sp, #28
    8ac4:	mov	r5, r1
    8ac8:	add	r1, sp, #16
    8acc:	mov	r7, r2
    8ad0:	str	r3, [sp, #12]
    8ad4:	uxtb	r4, r3
    8ad8:	mov	r6, r0
    8adc:	bl	bc74 <__pcap_atoin>
    8ae0:	ldr	ip, [sp, #16]
    8ae4:	cmp	r5, #0
    8ae8:	rsb	r0, r0, #32
    8aec:	lsl	r0, ip, r0
    8af0:	str	r0, [sp, #16]
    8af4:	beq	8b48 <sf_gen_mcode+0x8c>
    8af8:	add	r1, sp, #20
    8afc:	mov	r0, r5
    8b00:	bl	bc74 <__pcap_atoin>
    8b04:	ldr	r3, [sp, #20]
    8b08:	ldr	ip, [sp, #16]
    8b0c:	rsb	r0, r0, #32
    8b10:	lsl	r0, r3, r0
    8b14:	str	r0, [sp, #20]
    8b18:	bics	r3, ip, r0
    8b1c:	bne	8b9c <sf_gen_mcode+0xe0>
    8b20:	cmp	r4, #2
    8b24:	bne	8b90 <sf_gen_mcode+0xd4>
    8b28:	ldrb	r3, [sp, #14]
    8b2c:	ldrb	r2, [sp, #13]
    8b30:	ldr	r1, [sp, #20]
    8b34:	str	r4, [sp]
    8b38:	mov	r0, ip
    8b3c:	bl	8708 <gen_host>
    8b40:	add	sp, sp, #28
    8b44:	pop	{r4, r5, r6, r7, pc}
    8b48:	cmp	r7, #32
    8b4c:	bgt	8bb0 <sf_gen_mcode+0xf4>
    8b50:	cmp	r7, #0
    8b54:	mvnne	r3, #0
    8b58:	rsbne	r2, r7, #32
    8b5c:	mvneq	r2, #0
    8b60:	lslne	r3, r3, r2
    8b64:	mvnne	r2, r3
    8b68:	streq	r7, [sp, #20]
    8b6c:	strne	r3, [sp, #20]
    8b70:	tst	r0, r2
    8b74:	mov	ip, r0
    8b78:	beq	8b20 <sf_gen_mcode+0x64>
    8b7c:	ldr	r0, [pc, #56]	; 8bbc <sf_gen_mcode+0x100>
    8b80:	mov	r2, r7
    8b84:	mov	r1, r6
    8b88:	add	r0, pc, r0
    8b8c:	bl	2454 <sf_bpf_error>
    8b90:	ldr	r0, [pc, #40]	; 8bc0 <sf_gen_mcode+0x104>
    8b94:	add	r0, pc, r0
    8b98:	bl	2454 <sf_bpf_error>
    8b9c:	ldr	r0, [pc, #32]	; 8bc4 <sf_gen_mcode+0x108>
    8ba0:	mov	r2, r5
    8ba4:	mov	r1, r6
    8ba8:	add	r0, pc, r0
    8bac:	bl	2454 <sf_bpf_error>
    8bb0:	ldr	r0, [pc, #16]	; 8bc8 <sf_gen_mcode+0x10c>
    8bb4:	add	r0, pc, r0
    8bb8:	bl	2454 <sf_bpf_error>
    8bbc:	.word	0x0000ae88
    8bc0:	.word	0x0000ae9c
    8bc4:	.word	0x0000ae24
    8bc8:	.word	0x0000ae40

00008bcc <gen_port>:
    8bcc:	push	{r4, r5, r6, r7, r8, lr}
    8bd0:	mov	r5, r0
    8bd4:	mov	r0, #2048	; 0x800
    8bd8:	mov	r4, r1
    8bdc:	mov	r6, r2
    8be0:	bl	6600 <gen_linktype>
    8be4:	cmp	r4, #6
    8be8:	mov	r7, r0
    8bec:	beq	8c70 <gen_port+0xa4>
    8bf0:	bgt	8c5c <gen_port+0x90>
    8bf4:	cmn	r4, #1
    8bf8:	bne	8c6c <gen_port+0xa0>
    8bfc:	mov	r2, r6
    8c00:	mov	r1, #6
    8c04:	mov	r0, r5
    8c08:	bl	5648 <sf_gen_portop>
    8c0c:	mov	r2, r6
    8c10:	mov	r1, #17
    8c14:	mov	r8, r0
    8c18:	mov	r0, r5
    8c1c:	bl	5648 <sf_gen_portop>
    8c20:	mov	r1, r0
    8c24:	mov	r4, r0
    8c28:	mov	r0, r8
    8c2c:	bl	49c0 <sf_gen_or>
    8c30:	mov	r1, #132	; 0x84
    8c34:	mov	r2, r6
    8c38:	mov	r0, r5
    8c3c:	bl	5648 <sf_gen_portop>
    8c40:	mov	r1, r4
    8c44:	bl	49c0 <sf_gen_or>
    8c48:	mov	r0, r7
    8c4c:	mov	r1, r4
    8c50:	bl	3ca0 <sf_gen_and>
    8c54:	mov	r0, r4
    8c58:	pop	{r4, r5, r6, r7, r8, pc}
    8c5c:	cmp	r4, #17
    8c60:	beq	8c70 <gen_port+0xa4>
    8c64:	cmp	r4, #132	; 0x84
    8c68:	beq	8c70 <gen_port+0xa4>
    8c6c:	bl	f18 <abort@plt>
    8c70:	mov	r1, r4
    8c74:	mov	r2, r6
    8c78:	mov	r0, r5
    8c7c:	bl	5648 <sf_gen_portop>
    8c80:	mov	r4, r0
    8c84:	b	8c48 <gen_port+0x7c>

00008c88 <gen_port6>:
    8c88:	push	{r4, r5, r6, r7, r8, lr}
    8c8c:	mov	r5, r0
    8c90:	ldr	r0, [pc, #172]	; 8d44 <gen_port6+0xbc>
    8c94:	mov	r4, r1
    8c98:	mov	r6, r2
    8c9c:	bl	6600 <gen_linktype>
    8ca0:	cmp	r4, #6
    8ca4:	mov	r7, r0
    8ca8:	beq	8d2c <gen_port6+0xa4>
    8cac:	bgt	8d18 <gen_port6+0x90>
    8cb0:	cmn	r4, #1
    8cb4:	bne	8d28 <gen_port6+0xa0>
    8cb8:	mov	r2, r6
    8cbc:	mov	r1, #6
    8cc0:	mov	r0, r5
    8cc4:	bl	576c <sf_gen_portop6>
    8cc8:	mov	r2, r6
    8ccc:	mov	r1, #17
    8cd0:	mov	r8, r0
    8cd4:	mov	r0, r5
    8cd8:	bl	576c <sf_gen_portop6>
    8cdc:	mov	r1, r0
    8ce0:	mov	r4, r0
    8ce4:	mov	r0, r8
    8ce8:	bl	49c0 <sf_gen_or>
    8cec:	mov	r1, #132	; 0x84
    8cf0:	mov	r2, r6
    8cf4:	mov	r0, r5
    8cf8:	bl	576c <sf_gen_portop6>
    8cfc:	mov	r1, r4
    8d00:	bl	49c0 <sf_gen_or>
    8d04:	mov	r0, r7
    8d08:	mov	r1, r4
    8d0c:	bl	3ca0 <sf_gen_and>
    8d10:	mov	r0, r4
    8d14:	pop	{r4, r5, r6, r7, r8, pc}
    8d18:	cmp	r4, #17
    8d1c:	beq	8d2c <gen_port6+0xa4>
    8d20:	cmp	r4, #132	; 0x84
    8d24:	beq	8d2c <gen_port6+0xa4>
    8d28:	bl	f18 <abort@plt>
    8d2c:	mov	r1, r4
    8d30:	mov	r2, r6
    8d34:	mov	r0, r5
    8d38:	bl	576c <sf_gen_portop6>
    8d3c:	mov	r4, r0
    8d40:	b	8d04 <gen_port6+0x7c>
    8d44:	.word	0x000086dd

00008d48 <gen_portrange>:
    8d48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8d4c:	mov	r5, r0
    8d50:	mov	r0, #2048	; 0x800
    8d54:	mov	r4, r2
    8d58:	mov	r6, r1
    8d5c:	mov	r7, r3
    8d60:	bl	6600 <gen_linktype>
    8d64:	cmp	r4, #6
    8d68:	mov	r8, r0
    8d6c:	beq	8dfc <gen_portrange+0xb4>
    8d70:	bgt	8de8 <gen_portrange+0xa0>
    8d74:	cmn	r4, #1
    8d78:	bne	8df8 <gen_portrange+0xb0>
    8d7c:	mov	r3, r7
    8d80:	mov	r2, #6
    8d84:	mov	r1, r6
    8d88:	mov	r0, r5
    8d8c:	bl	587c <sf_gen_portrangeop>
    8d90:	mov	r3, r7
    8d94:	mov	r2, #17
    8d98:	mov	r1, r6
    8d9c:	mov	r9, r0
    8da0:	mov	r0, r5
    8da4:	bl	587c <sf_gen_portrangeop>
    8da8:	mov	r1, r0
    8dac:	mov	r4, r0
    8db0:	mov	r0, r9
    8db4:	bl	49c0 <sf_gen_or>
    8db8:	mov	r1, r6
    8dbc:	mov	r3, r7
    8dc0:	mov	r0, r5
    8dc4:	mov	r2, #132	; 0x84
    8dc8:	bl	587c <sf_gen_portrangeop>
    8dcc:	mov	r1, r4
    8dd0:	bl	49c0 <sf_gen_or>
    8dd4:	mov	r0, r8
    8dd8:	mov	r1, r4
    8ddc:	bl	3ca0 <sf_gen_and>
    8de0:	mov	r0, r4
    8de4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8de8:	cmp	r4, #17
    8dec:	beq	8dfc <gen_portrange+0xb4>
    8df0:	cmp	r4, #132	; 0x84
    8df4:	beq	8dfc <gen_portrange+0xb4>
    8df8:	bl	f18 <abort@plt>
    8dfc:	mov	r2, r4
    8e00:	mov	r3, r7
    8e04:	mov	r1, r6
    8e08:	mov	r0, r5
    8e0c:	bl	587c <sf_gen_portrangeop>
    8e10:	mov	r4, r0
    8e14:	b	8dd4 <gen_portrange+0x8c>

00008e18 <gen_portrange6>:
    8e18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    8e1c:	mov	r5, r0
    8e20:	ldr	r0, [pc, #192]	; 8ee8 <gen_portrange6+0xd0>
    8e24:	mov	r4, r2
    8e28:	mov	r6, r1
    8e2c:	mov	r7, r3
    8e30:	bl	6600 <gen_linktype>
    8e34:	cmp	r4, #6
    8e38:	mov	r8, r0
    8e3c:	beq	8ecc <gen_portrange6+0xb4>
    8e40:	bgt	8eb8 <gen_portrange6+0xa0>
    8e44:	cmn	r4, #1
    8e48:	bne	8ec8 <gen_portrange6+0xb0>
    8e4c:	mov	r3, r7
    8e50:	mov	r2, #6
    8e54:	mov	r1, r6
    8e58:	mov	r0, r5
    8e5c:	bl	598c <sf_gen_portrangeop6>
    8e60:	mov	r3, r7
    8e64:	mov	r2, #17
    8e68:	mov	r1, r6
    8e6c:	mov	r9, r0
    8e70:	mov	r0, r5
    8e74:	bl	598c <sf_gen_portrangeop6>
    8e78:	mov	r1, r0
    8e7c:	mov	r4, r0
    8e80:	mov	r0, r9
    8e84:	bl	49c0 <sf_gen_or>
    8e88:	mov	r1, r6
    8e8c:	mov	r3, r7
    8e90:	mov	r0, r5
    8e94:	mov	r2, #132	; 0x84
    8e98:	bl	598c <sf_gen_portrangeop6>
    8e9c:	mov	r1, r4
    8ea0:	bl	49c0 <sf_gen_or>
    8ea4:	mov	r0, r8
    8ea8:	mov	r1, r4
    8eac:	bl	3ca0 <sf_gen_and>
    8eb0:	mov	r0, r4
    8eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    8eb8:	cmp	r4, #17
    8ebc:	beq	8ecc <gen_portrange6+0xb4>
    8ec0:	cmp	r4, #132	; 0x84
    8ec4:	beq	8ecc <gen_portrange6+0xb4>
    8ec8:	bl	f18 <abort@plt>
    8ecc:	mov	r2, r4
    8ed0:	mov	r3, r7
    8ed4:	mov	r1, r6
    8ed8:	mov	r0, r5
    8edc:	bl	598c <sf_gen_portrangeop6>
    8ee0:	mov	r4, r0
    8ee4:	b	8ea4 <gen_portrange6+0x8c>
    8ee8:	.word	0x000086dd

00008eec <gen_protochain>:
    8eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8ef0:	sub	sp, sp, #460	; 0x1cc
    8ef4:	mov	r8, r1
    8ef8:	mov	r5, r2
    8efc:	mov	r6, r0
    8f00:	bl	26f0 <alloc_reg>
    8f04:	add	r4, sp, #56	; 0x38
    8f08:	mov	r2, #400	; 0x190
    8f0c:	mov	r1, #0
    8f10:	mov	r7, r0
    8f14:	mov	r0, r4
    8f18:	bl	e88 <memset@plt>
    8f1c:	ldr	r3, [pc, #2092]	; 9750 <gen_protochain+0x864>
    8f20:	cmp	r8, #2
    8f24:	add	r3, pc, r3
    8f28:	beq	8f88 <gen_protochain+0x9c>
    8f2c:	cmp	r8, #17
    8f30:	beq	8f88 <gen_protochain+0x9c>
    8f34:	cmp	r8, #0
    8f38:	beq	8f48 <gen_protochain+0x5c>
    8f3c:	ldr	r0, [pc, #2064]	; 9754 <gen_protochain+0x868>
    8f40:	add	r0, pc, r0
    8f44:	bl	2454 <sf_bpf_error>
    8f48:	mov	r2, r5
    8f4c:	mov	r1, #2
    8f50:	mov	r0, r6
    8f54:	bl	8eec <gen_protochain>
    8f58:	mov	r2, r5
    8f5c:	mov	r1, #17
    8f60:	mov	r7, r0
    8f64:	mov	r0, r6
    8f68:	bl	8eec <gen_protochain>
    8f6c:	mov	r4, r0
    8f70:	mov	r1, r0
    8f74:	mov	r0, r7
    8f78:	bl	49c0 <sf_gen_or>
    8f7c:	mov	r0, r4
    8f80:	add	sp, sp, #460	; 0x1cc
    8f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f88:	ldr	r2, [pc, #1992]	; 9758 <gen_protochain+0x86c>
    8f8c:	add	r2, pc, r2
    8f90:	ldr	r2, [r2, #856]	; 0x358
    8f94:	cmp	r2, #127	; 0x7f
    8f98:	beq	95e8 <gen_protochain+0x6fc>
    8f9c:	bgt	95d8 <gen_protochain+0x6ec>
    8fa0:	cmp	r2, #105	; 0x69
    8fa4:	beq	95e8 <gen_protochain+0x6fc>
    8fa8:	cmp	r2, #119	; 0x77
    8fac:	beq	95e8 <gen_protochain+0x6fc>
    8fb0:	ldr	r2, [pc, #1956]	; 975c <gen_protochain+0x870>
    8fb4:	mov	fp, #1
    8fb8:	mov	r0, #20
    8fbc:	ldr	r3, [r3, r2]
    8fc0:	mov	r5, #0
    8fc4:	str	fp, [r3]
    8fc8:	bl	2494 <newchunk>
    8fcc:	cmp	r8, #2
    8fd0:	str	r0, [sp, #56]	; 0x38
    8fd4:	str	r5, [r0]
    8fd8:	beq	95f4 <gen_protochain+0x708>
    8fdc:	cmp	r8, #17
    8fe0:	bne	9744 <gen_protochain+0x858>
    8fe4:	ldr	r0, [pc, #1908]	; 9760 <gen_protochain+0x874>
    8fe8:	bl	6600 <gen_linktype>
    8fec:	mov	r9, #21
    8ff0:	str	r0, [sp, #8]
    8ff4:	mov	r0, #20
    8ff8:	bl	2494 <newchunk>
    8ffc:	ldr	r3, [pc, #1888]	; 9764 <gen_protochain+0x878>
    9000:	mov	r1, #48	; 0x30
    9004:	add	r3, pc, r3
    9008:	str	r1, [r0]
    900c:	ldr	r1, [r3, #876]	; 0x36c
    9010:	ldr	r3, [r3, #872]	; 0x368
    9014:	mov	r2, r0
    9018:	add	r1, r1, r3
    901c:	add	r3, r1, #6
    9020:	str	r3, [r2, #12]
    9024:	mov	r0, #20
    9028:	str	r1, [sp, #16]
    902c:	str	r2, [sp, #60]	; 0x3c
    9030:	bl	2494 <newchunk>
    9034:	mov	r2, #40	; 0x28
    9038:	mov	r3, r0
    903c:	str	r2, [r0, #12]
    9040:	str	fp, [r0]
    9044:	mov	r0, #20
    9048:	str	r3, [sp, #64]	; 0x40
    904c:	bl	2494 <newchunk>
    9050:	mov	sl, r0
    9054:	str	r5, [r0, #4]
    9058:	str	r5, [r0, #8]
    905c:	str	r9, [r0]
    9060:	str	r6, [r0, #12]
    9064:	mov	r0, #20
    9068:	str	sl, [sp, #68]	; 0x44
    906c:	bl	2494 <newchunk>
    9070:	mov	r3, #59	; 0x3b
    9074:	mov	r8, r0
    9078:	str	r3, [r0, #12]
    907c:	str	r9, [r0]
    9080:	str	r5, [r0, #4]
    9084:	str	r5, [r0, #8]
    9088:	str	r8, [sl, #8]
    908c:	mov	r0, #20
    9090:	str	r8, [sp, #72]	; 0x48
    9094:	bl	2494 <newchunk>
    9098:	mov	r2, r0
    909c:	mov	r0, #20
    90a0:	str	r9, [r2]
    90a4:	str	r5, [r2, #4]
    90a8:	str	r5, [r2, #8]
    90ac:	str	r5, [r2, #12]
    90b0:	str	r2, [r8, #8]
    90b4:	str	r2, [sp, #76]	; 0x4c
    90b8:	str	r2, [sp, #4]
    90bc:	bl	2494 <newchunk>
    90c0:	ldr	r2, [sp, #4]
    90c4:	mov	ip, #60	; 0x3c
    90c8:	str	r2, [sp, #24]
    90cc:	mov	r3, r0
    90d0:	str	r9, [r0]
    90d4:	str	r3, [r2, #8]
    90d8:	mov	r0, #20
    90dc:	str	r5, [r3, #4]
    90e0:	str	r5, [r3, #8]
    90e4:	str	ip, [r3, #12]
    90e8:	str	r3, [sp, #80]	; 0x50
    90ec:	str	r3, [sp, #4]
    90f0:	bl	2494 <newchunk>
    90f4:	ldr	r3, [sp, #4]
    90f8:	mov	ip, #43	; 0x2b
    90fc:	str	r3, [sp, #20]
    9100:	mov	sl, r0
    9104:	str	r9, [r0]
    9108:	str	sl, [r3, #8]
    910c:	mov	r0, #20
    9110:	str	r5, [sl, #4]
    9114:	str	r5, [sl, #8]
    9118:	str	ip, [sl, #12]
    911c:	str	sl, [sp, #84]	; 0x54
    9120:	bl	2494 <newchunk>
    9124:	mov	ip, #44	; 0x2c
    9128:	mov	r8, r0
    912c:	str	r9, [r0]
    9130:	str	r8, [sl, #8]
    9134:	mov	r0, #20
    9138:	str	ip, [r8, #12]
    913c:	str	r5, [r8, #4]
    9140:	str	r5, [r8, #8]
    9144:	str	r8, [sp, #88]	; 0x58
    9148:	bl	2494 <newchunk>
    914c:	mov	r2, #135	; 0x87
    9150:	mov	r3, r0
    9154:	str	r2, [r0]
    9158:	mov	r0, #20
    915c:	str	r3, [sp, #12]
    9160:	str	r3, [sp, #92]	; 0x5c
    9164:	bl	2494 <newchunk>
    9168:	ldr	r1, [sp, #16]
    916c:	str	r1, [sp, #4]
    9170:	mov	ip, r0
    9174:	str	r1, [r0, #12]
    9178:	mov	r0, #80	; 0x50
    917c:	str	r0, [ip]
    9180:	mov	r0, #20
    9184:	str	ip, [sp, #96]	; 0x60
    9188:	bl	2494 <newchunk>
    918c:	mov	r1, r0
    9190:	mov	r0, #2
    9194:	str	r0, [r1]
    9198:	str	r7, [r1, #12]
    919c:	mov	r0, #20
    91a0:	str	r1, [sp, #100]	; 0x64
    91a4:	bl	2494 <newchunk>
    91a8:	mov	ip, #135	; 0x87
    91ac:	mov	r1, r0
    91b0:	mov	r0, #20
    91b4:	str	ip, [r1]
    91b8:	str	r1, [sp, #104]	; 0x68
    91bc:	bl	2494 <newchunk>
    91c0:	mov	r1, #4
    91c4:	str	r1, [sp, #16]
    91c8:	mov	ip, r0
    91cc:	str	r1, [r0]
    91d0:	str	fp, [r0, #12]
    91d4:	mov	r0, #20
    91d8:	str	ip, [sp, #108]	; 0x6c
    91dc:	bl	2494 <newchunk>
    91e0:	mov	ip, r0
    91e4:	mov	r0, #7
    91e8:	str	r0, [ip]
    91ec:	mov	r0, #20
    91f0:	str	ip, [sp, #112]	; 0x70
    91f4:	bl	2494 <newchunk>
    91f8:	ldr	r1, [sp, #4]
    91fc:	mov	lr, #80	; 0x50
    9200:	mov	ip, r0
    9204:	mov	r0, #20
    9208:	str	lr, [ip]
    920c:	str	r1, [ip, #12]
    9210:	str	ip, [sp, #116]	; 0x74
    9214:	bl	2494 <newchunk>
    9218:	ldr	r1, [sp, #16]
    921c:	mov	ip, r0
    9220:	mov	r0, #20
    9224:	str	r1, [ip]
    9228:	str	fp, [ip, #12]
    922c:	str	ip, [sp, #120]	; 0x78
    9230:	bl	2494 <newchunk>
    9234:	mov	ip, #36	; 0x24
    9238:	mov	r1, r0
    923c:	mov	r0, #8
    9240:	str	ip, [r1]
    9244:	str	r0, [r1, #12]
    9248:	mov	r0, #20
    924c:	str	r1, [sp, #124]	; 0x7c
    9250:	bl	2494 <newchunk>
    9254:	mov	ip, #7
    9258:	mov	r1, r0
    925c:	mov	r0, #20
    9260:	str	ip, [r1]
    9264:	str	r1, [sp, #128]	; 0x80
    9268:	bl	2494 <newchunk>
    926c:	mov	r1, #96	; 0x60
    9270:	mov	fp, r0
    9274:	str	r1, [r0]
    9278:	str	r7, [r0, #12]
    927c:	mov	r0, #20
    9280:	str	fp, [sp, #132]	; 0x84
    9284:	bl	2494 <newchunk>
    9288:	ldr	r2, [sp, #24]
    928c:	ldr	r3, [sp, #12]
    9290:	mov	ip, #5
    9294:	mov	r1, r0
    9298:	mvn	r0, #17
    929c:	str	r0, [r1, #12]
    92a0:	str	ip, [r1]
    92a4:	str	r1, [fp, #8]
    92a8:	str	r3, [r2, #4]
    92ac:	mov	r2, r3
    92b0:	ldr	r3, [sp, #20]
    92b4:	mov	r0, #20
    92b8:	str	r1, [sp, #136]	; 0x88
    92bc:	str	r2, [r3, #4]
    92c0:	str	r2, [sl, #4]
    92c4:	str	r2, [r8, #4]
    92c8:	bl	2494 <newchunk>
    92cc:	mov	r3, #51	; 0x33
    92d0:	str	r9, [sp, #40]	; 0x28
    92d4:	mov	r1, #28
    92d8:	mov	r2, #27
    92dc:	mov	fp, #24
    92e0:	str	r3, [r0, #12]
    92e4:	mov	r3, #34	; 0x22
    92e8:	str	r3, [sp, #12]
    92ec:	mvn	r3, #30
    92f0:	str	r3, [sp, #16]
    92f4:	mov	r3, #33	; 0x21
    92f8:	str	r3, [sp, #20]
    92fc:	mov	r3, #32
    9300:	str	r3, [sp, #24]
    9304:	mov	r3, #31
    9308:	str	r3, [sp, #28]
    930c:	mov	r3, #30
    9310:	str	r3, [sp, #32]
    9314:	mov	r3, #29
    9318:	str	r9, [r0]
    931c:	str	r5, [r0, #4]
    9320:	str	r5, [r0, #8]
    9324:	str	r3, [sp, #36]	; 0x24
    9328:	str	r0, [r8, #8]
    932c:	mov	sl, r0
    9330:	mov	r8, #26
    9334:	mov	r9, #25
    9338:	mov	r5, #23
    933c:	mov	r3, #22
    9340:	str	r0, [sp, #140]	; 0x8c
    9344:	mov	r0, #20
    9348:	str	r1, [sp, #48]	; 0x30
    934c:	str	r3, [sp, #44]	; 0x2c
    9350:	str	r2, [sp, #52]	; 0x34
    9354:	bl	2494 <newchunk>
    9358:	ldr	r3, [sp, #44]	; 0x2c
    935c:	add	r2, sp, #456	; 0x1c8
    9360:	add	ip, r2, r3, lsl #2
    9364:	mov	r3, #135	; 0x87
    9368:	str	r3, [sp, #44]	; 0x2c
    936c:	mov	lr, r0
    9370:	str	r3, [r0]
    9374:	str	r0, [sl, #4]
    9378:	mov	r0, #20
    937c:	str	lr, [ip, #-400]	; 0xfffffe70
    9380:	bl	2494 <newchunk>
    9384:	add	r3, sp, #456	; 0x1c8
    9388:	add	r5, r3, r5, lsl #2
    938c:	ldr	r3, [sp, #4]
    9390:	mov	sl, #80	; 0x50
    9394:	mov	ip, r0
    9398:	str	r3, [r0, #12]
    939c:	str	sl, [r0]
    93a0:	mov	r0, #20
    93a4:	str	ip, [r5, #-400]	; 0xfffffe70
    93a8:	bl	2494 <newchunk>
    93ac:	add	r1, sp, #456	; 0x1c8
    93b0:	add	ip, r1, fp, lsl #2
    93b4:	mov	fp, #2
    93b8:	mov	r5, r0
    93bc:	str	r7, [r0, #12]
    93c0:	str	fp, [r0]
    93c4:	mov	r0, #20
    93c8:	str	r5, [ip, #-400]	; 0xfffffe70
    93cc:	bl	2494 <newchunk>
    93d0:	add	r1, sp, #456	; 0x1c8
    93d4:	add	r9, r1, r9, lsl fp
    93d8:	ldr	r3, [sp, #44]	; 0x2c
    93dc:	mov	ip, r0
    93e0:	str	r3, [r0]
    93e4:	str	ip, [r5, #4]
    93e8:	mov	r0, #20
    93ec:	str	ip, [r9, #-400]	; 0xfffffe70
    93f0:	bl	2494 <newchunk>
    93f4:	add	r1, sp, #456	; 0x1c8
    93f8:	add	r8, r1, r8, lsl fp
    93fc:	mov	r5, #4
    9400:	mov	r3, r0
    9404:	mov	r0, #1
    9408:	str	r0, [r3, #12]
    940c:	str	r5, [r3]
    9410:	mov	r0, #20
    9414:	str	r3, [r8, #-400]	; 0xfffffe70
    9418:	bl	2494 <newchunk>
    941c:	ldr	r2, [sp, #52]	; 0x34
    9420:	add	r1, sp, #456	; 0x1c8
    9424:	mov	r8, #7
    9428:	add	r2, r1, r2, lsl fp
    942c:	mov	r3, r0
    9430:	str	r8, [r0]
    9434:	mov	r0, #20
    9438:	str	r3, [r2, #-400]	; 0xfffffe70
    943c:	bl	2494 <newchunk>
    9440:	ldr	r1, [sp, #48]	; 0x30
    9444:	ldr	r2, [sp, #4]
    9448:	mov	r3, r0
    944c:	add	r0, sp, #456	; 0x1c8
    9450:	add	r1, r0, r1, lsl fp
    9454:	str	r2, [r3, #12]
    9458:	str	sl, [r3]
    945c:	mov	r0, #20
    9460:	str	r3, [r1, #-400]	; 0xfffffe70
    9464:	bl	2494 <newchunk>
    9468:	ldr	r1, [sp, #36]	; 0x24
    946c:	add	r3, sp, #456	; 0x1c8
    9470:	add	r3, r3, r1, lsl fp
    9474:	mov	r2, r0
    9478:	str	fp, [r0, #12]
    947c:	str	r5, [r0]
    9480:	mov	r0, #20
    9484:	str	r2, [r3, #-400]	; 0xfffffe70
    9488:	bl	2494 <newchunk>
    948c:	ldr	r1, [sp, #32]
    9490:	add	r2, sp, #456	; 0x1c8
    9494:	add	r2, r2, r1, lsl fp
    9498:	mov	r1, #36	; 0x24
    949c:	mov	r3, r0
    94a0:	str	r1, [r0]
    94a4:	str	r5, [r0, #12]
    94a8:	mov	r0, #20
    94ac:	str	r3, [r2, #-400]	; 0xfffffe70
    94b0:	bl	2494 <newchunk>
    94b4:	ldr	r1, [sp, #28]
    94b8:	add	r3, sp, #456	; 0x1c8
    94bc:	add	r3, r3, r1, lsl fp
    94c0:	mov	r2, r0
    94c4:	str	r8, [r0]
    94c8:	mov	r0, #20
    94cc:	str	r2, [r3, #-400]	; 0xfffffe70
    94d0:	bl	2494 <newchunk>
    94d4:	ldr	r1, [sp, #24]
    94d8:	add	r3, sp, #456	; 0x1c8
    94dc:	mov	r8, #0
    94e0:	add	r3, r3, r1, lsl fp
    94e4:	mov	r1, #96	; 0x60
    94e8:	mov	r2, r0
    94ec:	str	r1, [r0]
    94f0:	str	r7, [r0, #12]
    94f4:	mov	r0, #20
    94f8:	str	r2, [r3, #-400]	; 0xfffffe70
    94fc:	bl	2494 <newchunk>
    9500:	ldr	r1, [sp, #20]
    9504:	add	r3, sp, #456	; 0x1c8
    9508:	add	r3, r3, r1, lsl fp
    950c:	mov	r1, #5
    9510:	mov	r2, r0
    9514:	ldr	r0, [sp, #16]
    9518:	str	r1, [r2]
    951c:	str	r0, [r2, #12]
    9520:	mov	r0, #20
    9524:	str	r2, [r3, #-400]	; 0xfffffe70
    9528:	bl	2494 <newchunk>
    952c:	ldr	r3, [sp, #12]
    9530:	ldr	ip, [sp, #40]	; 0x28
    9534:	add	r2, sp, #456	; 0x1c8
    9538:	lsl	r1, r3, fp
    953c:	add	r3, sp, #456	; 0x1c8
    9540:	add	r3, r3, r1
    9544:	add	r9, r2, ip, lsl fp
    9548:	add	r1, r4, r1
    954c:	str	r0, [r3, #-400]	; 0xfffffe70
    9550:	ldr	lr, [sp, #72]	; 0x48
    9554:	ldr	ip, [r9, #-400]	; 0xfffffe70
    9558:	ldr	r3, [sp, #68]	; 0x44
    955c:	ldr	r2, [sp, #56]	; 0x38
    9560:	str	r5, [r0]
    9564:	str	r8, [r0, #12]
    9568:	str	r0, [lr, #4]
    956c:	str	r0, [ip, #8]
    9570:	str	r0, [r3, #4]
    9574:	ldr	r3, [r4, #4]!
    9578:	cmp	r1, r4
    957c:	str	r3, [r2, #16]
    9580:	mov	r2, r3
    9584:	bne	9574 <gen_protochain+0x688>
    9588:	mov	r5, #0
    958c:	str	r5, [r0, #16]
    9590:	mov	r0, #208	; 0xd0
    9594:	bl	2494 <newchunk>
    9598:	ldr	r3, [pc, #456]	; 9768 <gen_protochain+0x87c>
    959c:	ldr	r2, [sp, #60]	; 0x3c
    95a0:	add	r3, pc, r3
    95a4:	add	r7, r3, r7, lsl #2
    95a8:	mov	r3, #21
    95ac:	mov	r4, r0
    95b0:	str	r6, [r0, #20]
    95b4:	mov	r1, r4
    95b8:	str	r0, [r4, #96]	; 0x60
    95bc:	stmib	r4, {r2, r3}
    95c0:	ldr	r0, [sp, #8]
    95c4:	str	r5, [r7, #792]	; 0x318
    95c8:	bl	3ca0 <sf_gen_and>
    95cc:	mov	r0, r4
    95d0:	add	sp, sp, #460	; 0x1cc
    95d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    95d8:	cmp	r2, #163	; 0xa3
    95dc:	beq	95e8 <gen_protochain+0x6fc>
    95e0:	cmp	r2, #192	; 0xc0
    95e4:	bne	8fb0 <gen_protochain+0xc4>
    95e8:	ldr	r0, [pc, #380]	; 976c <gen_protochain+0x880>
    95ec:	add	r0, pc, r0
    95f0:	bl	2454 <sf_bpf_error>
    95f4:	mov	r0, #2048	; 0x800
    95f8:	bl	6600 <gen_linktype>
    95fc:	mov	fp, #21
    9600:	str	r0, [sp, #8]
    9604:	mov	r0, #20
    9608:	bl	2494 <newchunk>
    960c:	ldr	r3, [pc, #348]	; 9770 <gen_protochain+0x884>
    9610:	mov	r1, #48	; 0x30
    9614:	add	r3, pc, r3
    9618:	ldr	r8, [r3, #876]	; 0x36c
    961c:	ldr	r3, [r3, #872]	; 0x368
    9620:	add	r8, r8, r3
    9624:	add	r3, r8, #9
    9628:	mov	r2, r0
    962c:	str	r1, [r0]
    9630:	str	r3, [r2, #12]
    9634:	mov	r0, #20
    9638:	str	r2, [sp, #60]	; 0x3c
    963c:	bl	2494 <newchunk>
    9640:	mov	r2, #177	; 0xb1
    9644:	str	r8, [sp, #4]
    9648:	mov	r3, r0
    964c:	str	r3, [sp, #64]	; 0x40
    9650:	str	r8, [r3, #12]
    9654:	str	r2, [r0]
    9658:	mov	r0, #20
    965c:	bl	2494 <newchunk>
    9660:	mov	r9, r0
    9664:	str	r5, [r0, #4]
    9668:	str	r5, [r0, #8]
    966c:	str	fp, [r0]
    9670:	str	r6, [r0, #12]
    9674:	mov	r0, #20
    9678:	str	r9, [sp, #68]	; 0x44
    967c:	bl	2494 <newchunk>
    9680:	mov	r3, #59	; 0x3b
    9684:	mov	r8, r0
    9688:	str	fp, [r0]
    968c:	str	r5, [r0, #4]
    9690:	str	r5, [r0, #8]
    9694:	str	r3, [r0, #12]
    9698:	str	r8, [r9, #8]
    969c:	mov	r0, #20
    96a0:	str	r8, [sp, #72]	; 0x48
    96a4:	bl	2494 <newchunk>
    96a8:	mov	r2, #4
    96ac:	mov	r9, #10
    96b0:	mov	r3, r0
    96b4:	str	r5, [r0, #12]
    96b8:	str	r2, [r0]
    96bc:	str	r3, [r8, #8]
    96c0:	mov	r0, #20
    96c4:	str	r3, [sp, #76]	; 0x4c
    96c8:	bl	2494 <newchunk>
    96cc:	mov	r3, #51	; 0x33
    96d0:	mov	r1, #13
    96d4:	mov	r2, #12
    96d8:	mov	r8, #11
    96dc:	str	r3, [r0, #12]
    96e0:	mov	r3, #19
    96e4:	str	r3, [sp, #12]
    96e8:	mvn	r3, #15
    96ec:	str	r3, [sp, #16]
    96f0:	mov	r3, #18
    96f4:	str	r3, [sp, #20]
    96f8:	mov	r3, #17
    96fc:	str	r3, [sp, #24]
    9700:	mov	r3, #16
    9704:	str	r3, [sp, #28]
    9708:	mov	r3, #15
    970c:	str	fp, [r0]
    9710:	str	r5, [r0, #4]
    9714:	str	r5, [r0, #8]
    9718:	mov	sl, r0
    971c:	str	r0, [sp, #80]	; 0x50
    9720:	str	r3, [sp, #32]
    9724:	mov	r0, #6
    9728:	mov	r3, #14
    972c:	str	r3, [sp, #36]	; 0x24
    9730:	mov	fp, #9
    9734:	mov	r5, #8
    9738:	mov	r3, #7
    973c:	str	r0, [sp, #40]	; 0x28
    9740:	b	9344 <gen_protochain+0x458>
    9744:	ldr	r0, [pc, #40]	; 9774 <gen_protochain+0x888>
    9748:	add	r0, pc, r0
    974c:	bl	2454 <sf_bpf_error>
    9750:	.word	0x000270d4
    9754:	.word	0x0000ab10
    9758:	.word	0x000273dc
    975c:	.word	0x00000104
    9760:	.word	0x000086dd
    9764:	.word	0x00027364
    9768:	.word	0x00026dc8
    976c:	.word	0x0000a48c
    9770:	.word	0x00026d54
    9774:	.word	0x0000a358

00009778 <sf_gen_ncode>:
    9778:	push	{r4, r5, r6, r7, lr}
    977c:	lsr	r3, r2, #16
    9780:	sub	sp, sp, #20
    9784:	lsr	r4, r2, #8
    9788:	subs	r7, r0, #0
    978c:	str	r1, [sp, #12]
    9790:	str	r2, [sp, #8]
    9794:	uxtb	r4, r4
    9798:	uxtb	r6, r3
    979c:	uxtb	r5, r2
    97a0:	beq	9948 <sf_gen_ncode+0x1d0>
    97a4:	cmp	r4, #12
    97a8:	add	r1, sp, #12
    97ac:	beq	984c <sf_gen_ncode+0xd4>
    97b0:	bl	bc74 <__pcap_atoin>
    97b4:	cmp	r5, #4
    97b8:	beq	9994 <sf_gen_ncode+0x21c>
    97bc:	bls	97e8 <sf_gen_ncode+0x70>
    97c0:	cmp	r5, #6
    97c4:	beq	9974 <sf_gen_ncode+0x1fc>
    97c8:	bcc	9950 <sf_gen_ncode+0x1d8>
    97cc:	cmp	r5, #7
    97d0:	beq	98d0 <sf_gen_ncode+0x158>
    97d4:	cmp	r5, #255	; 0xff
    97d8:	bne	9970 <sf_gen_ncode+0x1f8>
    97dc:	ldr	r0, [pc, #564]	; 9a18 <sf_gen_ncode+0x2a0>
    97e0:	add	r0, pc, r0
    97e4:	bl	2454 <sf_bpf_error>
    97e8:	cmp	r5, #2
    97ec:	bls	987c <sf_gen_ncode+0x104>
    97f0:	cmp	r4, #7
    97f4:	beq	9a04 <sf_gen_ncode+0x28c>
    97f8:	cmp	r4, #6
    97fc:	beq	9814 <sf_gen_ncode+0x9c>
    9800:	cmp	r4, #5
    9804:	beq	99ec <sf_gen_ncode+0x274>
    9808:	cmp	r4, #0
    980c:	mvneq	r4, #0
    9810:	bne	993c <sf_gen_ncode+0x1c4>
    9814:	mov	r2, r6
    9818:	mov	r1, r4
    981c:	ldr	r0, [sp, #12]
    9820:	bl	8bcc <gen_port>
    9824:	mov	r1, r4
    9828:	mov	r2, r6
    982c:	mov	r5, r0
    9830:	ldr	r0, [sp, #12]
    9834:	bl	8c88 <gen_port6>
    9838:	mov	r1, r5
    983c:	bl	49c0 <sf_gen_or>
    9840:	mov	r0, r5
    9844:	add	sp, sp, #20
    9848:	pop	{r4, r5, r6, r7, pc}
    984c:	bl	bce4 <__pcap_atodn>
    9850:	cmp	r5, #4
    9854:	beq	9994 <sf_gen_ncode+0x21c>
    9858:	bls	9934 <sf_gen_ncode+0x1bc>
    985c:	cmp	r5, #6
    9860:	beq	9974 <sf_gen_ncode+0x1fc>
    9864:	bcc	9950 <sf_gen_ncode+0x1d8>
    9868:	cmp	r5, #7
    986c:	bne	97d4 <sf_gen_ncode+0x5c>
    9870:	ldr	r0, [pc, #420]	; 9a1c <sf_gen_ncode+0x2a4>
    9874:	add	r0, pc, r0
    9878:	bl	2454 <sf_bpf_error>
    987c:	cmp	r4, #12
    9880:	beq	99a0 <sf_gen_ncode+0x228>
    9884:	cmp	r4, #1
    9888:	beq	9a0c <sf_gen_ncode+0x294>
    988c:	cmp	r5, #2
    9890:	cmpeq	r7, #0
    9894:	beq	99c0 <sf_gen_ncode+0x248>
    9898:	ldr	r3, [sp, #12]
    989c:	rsb	r1, r0, #32
    98a0:	mvn	r2, #0
    98a4:	lsl	r0, r3, r1
    98a8:	lsl	r1, r2, r1
    98ac:	str	r0, [sp, #12]
    98b0:	str	r5, [sp]
    98b4:	mov	r3, r6
    98b8:	mov	r2, r4
    98bc:	bl	8708 <gen_host>
    98c0:	mov	r5, r0
    98c4:	mov	r0, r5
    98c8:	add	sp, sp, #20
    98cc:	pop	{r4, r5, r6, r7, pc}
    98d0:	cmp	r4, #7
    98d4:	beq	99fc <sf_gen_ncode+0x284>
    98d8:	cmp	r4, #6
    98dc:	beq	98f4 <sf_gen_ncode+0x17c>
    98e0:	cmp	r4, #5
    98e4:	beq	99f4 <sf_gen_ncode+0x27c>
    98e8:	cmp	r4, #0
    98ec:	mvneq	r4, #0
    98f0:	bne	9870 <sf_gen_ncode+0xf8>
    98f4:	ldr	r1, [sp, #12]
    98f8:	mov	r3, r6
    98fc:	mov	r2, r4
    9900:	mov	r0, r1
    9904:	bl	8d48 <gen_portrange>
    9908:	ldr	r1, [sp, #12]
    990c:	mov	r3, r6
    9910:	mov	r2, r4
    9914:	mov	r5, r0
    9918:	mov	r0, r1
    991c:	bl	8e18 <gen_portrange6>
    9920:	mov	r1, r5
    9924:	bl	49c0 <sf_gen_or>
    9928:	mov	r0, r5
    992c:	add	sp, sp, #20
    9930:	pop	{r4, r5, r6, r7, pc}
    9934:	cmp	r5, #2
    9938:	bls	99a0 <sf_gen_ncode+0x228>
    993c:	ldr	r0, [pc, #220]	; 9a20 <sf_gen_ncode+0x2a8>
    9940:	add	r0, pc, r0
    9944:	bl	2454 <sf_bpf_error>
    9948:	mov	r0, #32
    994c:	b	97b4 <sf_gen_ncode+0x3c>
    9950:	mov	r2, r6
    9954:	mov	r1, r4
    9958:	ldr	r0, [sp, #12]
    995c:	bl	72d8 <gen_proto>
    9960:	mov	r5, r0
    9964:	mov	r0, r5
    9968:	add	sp, sp, #20
    996c:	pop	{r4, r5, r6, r7, pc}
    9970:	bl	f18 <abort@plt>
    9974:	mov	r2, r6
    9978:	mov	r1, r4
    997c:	ldr	r0, [sp, #12]
    9980:	bl	8eec <gen_protochain>
    9984:	mov	r5, r0
    9988:	mov	r0, r5
    998c:	add	sp, sp, #20
    9990:	pop	{r4, r5, r6, r7, pc}
    9994:	ldr	r0, [pc, #136]	; 9a24 <sf_gen_ncode+0x2ac>
    9998:	add	r0, pc, r0
    999c:	bl	2454 <sf_bpf_error>
    99a0:	str	r5, [sp]
    99a4:	ldr	r0, [sp, #12]
    99a8:	mov	r3, r6
    99ac:	mov	r2, #12
    99b0:	mov	r1, #0
    99b4:	bl	8708 <gen_host>
    99b8:	mov	r5, r0
    99bc:	b	9840 <sf_gen_ncode+0xc8>
    99c0:	ldr	r0, [sp, #12]
    99c4:	mvn	r1, #0
    99c8:	cmp	r0, #0
    99cc:	beq	98b0 <sf_gen_ncode+0x138>
    99d0:	tst	r0, #-16777216	; 0xff000000
    99d4:	bne	98b0 <sf_gen_ncode+0x138>
    99d8:	lsl	r0, r0, #8
    99dc:	tst	r0, #-16777216	; 0xff000000
    99e0:	lsl	r1, r1, #8
    99e4:	beq	99d8 <sf_gen_ncode+0x260>
    99e8:	b	98ac <sf_gen_ncode+0x134>
    99ec:	mov	r4, #132	; 0x84
    99f0:	b	9814 <sf_gen_ncode+0x9c>
    99f4:	mov	r4, #132	; 0x84
    99f8:	b	98f4 <sf_gen_ncode+0x17c>
    99fc:	mov	r4, #17
    9a00:	b	98f4 <sf_gen_ncode+0x17c>
    9a04:	mov	r4, #17
    9a08:	b	9814 <sf_gen_ncode+0x9c>
    9a0c:	ldr	r0, [pc, #20]	; 9a28 <sf_gen_ncode+0x2b0>
    9a10:	add	r0, pc, r0
    9a14:	bl	2454 <sf_bpf_error>
    9a18:	.word	0x000094ec
    9a1c:	.word	0x0000a288
    9a20:	.word	0x0000a1a0
    9a24:	.word	0x0000a188
    9a28:	.word	0x0000a0b4

00009a2c <sf_gen_broadcast>:
    9a2c:	cmp	r0, #0
    9a30:	push	{r4, r5, r6, r7, r8, lr}
    9a34:	sub	sp, sp, #16
    9a38:	blt	9ae4 <sf_gen_broadcast+0xb8>
    9a3c:	cmp	r0, #1
    9a40:	ble	9af0 <sf_gen_broadcast+0xc4>
    9a44:	cmp	r0, #2
    9a48:	bne	9ae4 <sf_gen_broadcast+0xb8>
    9a4c:	ldr	r3, [pc, #560]	; 9c84 <sf_gen_broadcast+0x258>
    9a50:	add	r3, pc, r3
    9a54:	ldr	r4, [r3, #892]	; 0x37c
    9a58:	cmn	r4, #1
    9a5c:	beq	9c78 <sf_gen_broadcast+0x24c>
    9a60:	mov	r0, #2048	; 0x800
    9a64:	bl	6600 <gen_linktype>
    9a68:	mov	r5, #0
    9a6c:	mvn	r4, r4
    9a70:	mov	r6, #16
    9a74:	mov	r3, r4
    9a78:	mov	r2, r5
    9a7c:	mov	r1, r6
    9a80:	str	r5, [sp, #8]
    9a84:	str	r5, [sp, #4]
    9a88:	str	r6, [sp]
    9a8c:	mov	r7, r0
    9a90:	mov	r0, #3
    9a94:	bl	2c88 <gen_ncmp>
    9a98:	mov	r3, r4
    9a9c:	str	r4, [sp, #8]
    9aa0:	mov	r2, r5
    9aa4:	mov	r1, r6
    9aa8:	str	r5, [sp, #4]
    9aac:	str	r6, [sp]
    9ab0:	mov	r8, r0
    9ab4:	mov	r0, #3
    9ab8:	bl	2c88 <gen_ncmp>
    9abc:	mov	r1, r0
    9ac0:	mov	r4, r0
    9ac4:	mov	r0, r8
    9ac8:	bl	49c0 <sf_gen_or>
    9acc:	mov	r1, r4
    9ad0:	mov	r0, r7
    9ad4:	bl	3ca0 <sf_gen_and>
    9ad8:	mov	r0, r4
    9adc:	add	sp, sp, #16
    9ae0:	pop	{r4, r5, r6, r7, r8, pc}
    9ae4:	ldr	r0, [pc, #412]	; 9c88 <sf_gen_broadcast+0x25c>
    9ae8:	add	r0, pc, r0
    9aec:	bl	2454 <sf_bpf_error>
    9af0:	ldr	r2, [pc, #404]	; 9c8c <sf_gen_broadcast+0x260>
    9af4:	add	r2, pc, r2
    9af8:	ldr	r3, [r2, #856]	; 0x358
    9afc:	cmp	r3, #119	; 0x77
    9b00:	beq	9c24 <sf_gen_broadcast+0x1f8>
    9b04:	bgt	9b40 <sf_gen_broadcast+0x114>
    9b08:	cmp	r3, #7
    9b0c:	beq	9c08 <sf_gen_broadcast+0x1dc>
    9b10:	bgt	9bb8 <sf_gen_broadcast+0x18c>
    9b14:	cmp	r3, #1
    9b18:	beq	9c5c <sf_gen_broadcast+0x230>
    9b1c:	cmp	r3, #6
    9b20:	bne	9be4 <sf_gen_broadcast+0x1b8>
    9b24:	ldr	r0, [pc, #356]	; 9c90 <sf_gen_broadcast+0x264>
    9b28:	mov	r1, #2
    9b2c:	add	r0, pc, r0
    9b30:	add	r0, r0, #8
    9b34:	add	sp, sp, #16
    9b38:	pop	{r4, r5, r6, r7, r8, lr}
    9b3c:	b	4afc <gen_thostop>
    9b40:	cmp	r3, #127	; 0x7f
    9b44:	beq	9c24 <sf_gen_broadcast+0x1f8>
    9b48:	bgt	9bf0 <sf_gen_broadcast+0x1c4>
    9b4c:	cmp	r3, #122	; 0x7a
    9b50:	beq	9c40 <sf_gen_broadcast+0x214>
    9b54:	cmp	r3, #123	; 0x7b
    9b58:	bne	9be4 <sf_gen_broadcast+0x1b8>
    9b5c:	ldr	r3, [r2, #908]	; 0x38c
    9b60:	cmp	r3, #0
    9b64:	beq	9ae4 <sf_gen_broadcast+0xb8>
    9b68:	mov	r2, #8
    9b6c:	mov	r3, #65280	; 0xff00
    9b70:	mov	r1, #4
    9b74:	mov	r0, #1
    9b78:	bl	2d1c <gen_cmp>
    9b7c:	mov	r1, #2
    9b80:	mov	r5, r0
    9b84:	ldr	r0, [pc, #264]	; 9c94 <sf_gen_broadcast+0x268>
    9b88:	ldr	r3, [r5, #44]	; 0x2c
    9b8c:	add	r0, pc, r0
    9b90:	clz	r3, r3
    9b94:	lsr	r3, r3, #5
    9b98:	str	r3, [r5, #44]	; 0x2c
    9b9c:	add	r0, r0, #8
    9ba0:	bl	4c74 <gen_ehostop>
    9ba4:	mov	r4, r0
    9ba8:	mov	r1, r0
    9bac:	mov	r0, r5
    9bb0:	bl	3ca0 <sf_gen_and>
    9bb4:	b	9ad8 <sf_gen_broadcast+0xac>
    9bb8:	cmp	r3, #10
    9bbc:	bne	9bdc <sf_gen_broadcast+0x1b0>
    9bc0:	ldr	r0, [pc, #208]	; 9c98 <sf_gen_broadcast+0x26c>
    9bc4:	mov	r1, #2
    9bc8:	add	r0, pc, r0
    9bcc:	add	r0, r0, #8
    9bd0:	add	sp, sp, #16
    9bd4:	pop	{r4, r5, r6, r7, r8, lr}
    9bd8:	b	4a40 <gen_fhostop>
    9bdc:	cmp	r3, #105	; 0x69
    9be0:	beq	9c24 <sf_gen_broadcast+0x1f8>
    9be4:	ldr	r0, [pc, #176]	; 9c9c <sf_gen_broadcast+0x270>
    9be8:	add	r0, pc, r0
    9bec:	bl	2454 <sf_bpf_error>
    9bf0:	cmp	r3, #163	; 0xa3
    9bf4:	beq	9c24 <sf_gen_broadcast+0x1f8>
    9bf8:	cmp	r3, #192	; 0xc0
    9bfc:	beq	9c24 <sf_gen_broadcast+0x1f8>
    9c00:	cmp	r3, #129	; 0x81
    9c04:	bne	9be4 <sf_gen_broadcast+0x1b8>
    9c08:	ldr	r0, [pc, #144]	; 9ca0 <sf_gen_broadcast+0x274>
    9c0c:	mov	r1, #2
    9c10:	add	r0, pc, r0
    9c14:	add	r0, r0, #956	; 0x3bc
    9c18:	add	sp, sp, #16
    9c1c:	pop	{r4, r5, r6, r7, r8, lr}
    9c20:	b	4d4c <gen_ahostop>
    9c24:	ldr	r0, [pc, #120]	; 9ca4 <sf_gen_broadcast+0x278>
    9c28:	mov	r1, #2
    9c2c:	add	r0, pc, r0
    9c30:	add	r0, r0, #8
    9c34:	add	sp, sp, #16
    9c38:	pop	{r4, r5, r6, r7, r8, lr}
    9c3c:	b	504c <gen_wlanhostop>
    9c40:	ldr	r0, [pc, #96]	; 9ca8 <sf_gen_broadcast+0x27c>
    9c44:	mov	r1, #2
    9c48:	add	r0, pc, r0
    9c4c:	add	r0, r0, #8
    9c50:	add	sp, sp, #16
    9c54:	pop	{r4, r5, r6, r7, r8, lr}
    9c58:	b	4bb8 <gen_ipfchostop>
    9c5c:	ldr	r0, [pc, #72]	; 9cac <sf_gen_broadcast+0x280>
    9c60:	mov	r1, #2
    9c64:	add	r0, pc, r0
    9c68:	add	r0, r0, #8
    9c6c:	add	sp, sp, #16
    9c70:	pop	{r4, r5, r6, r7, r8, lr}
    9c74:	b	4c74 <gen_ehostop>
    9c78:	ldr	r0, [pc, #48]	; 9cb0 <sf_gen_broadcast+0x284>
    9c7c:	add	r0, pc, r0
    9c80:	bl	2454 <sf_bpf_error>
    9c84:	.word	0x00026918
    9c88:	.word	0x0000a0a0
    9c8c:	.word	0x00026874
    9c90:	.word	0x0002674c
    9c94:	.word	0x000266ec
    9c98:	.word	0x000266b0
    9c9c:	.word	0x00009f54
    9ca0:	.word	0x00026758
    9ca4:	.word	0x0002664c
    9ca8:	.word	0x00026630
    9cac:	.word	0x00026614
    9cb0:	.word	0x00009ed8

00009cb4 <sf_gen_multicast>:
    9cb4:	push	{r4, r5, r6, r7, r8, lr}
    9cb8:	cmp	r0, #17
    9cbc:	addls	pc, pc, r0, lsl #2
    9cc0:	b	9dc4 <sf_gen_multicast+0x110>
    9cc4:	b	9d7c <sf_gen_multicast+0xc8>
    9cc8:	b	9d7c <sf_gen_multicast+0xc8>
    9ccc:	b	9d44 <sf_gen_multicast+0x90>
    9cd0:	b	9dc4 <sf_gen_multicast+0x110>
    9cd4:	b	9dc4 <sf_gen_multicast+0x110>
    9cd8:	b	9dc4 <sf_gen_multicast+0x110>
    9cdc:	b	9dc4 <sf_gen_multicast+0x110>
    9ce0:	b	9dc4 <sf_gen_multicast+0x110>
    9ce4:	b	9dc4 <sf_gen_multicast+0x110>
    9ce8:	b	9dc4 <sf_gen_multicast+0x110>
    9cec:	b	9dc4 <sf_gen_multicast+0x110>
    9cf0:	b	9dc4 <sf_gen_multicast+0x110>
    9cf4:	b	9dc4 <sf_gen_multicast+0x110>
    9cf8:	b	9dc4 <sf_gen_multicast+0x110>
    9cfc:	b	9dc4 <sf_gen_multicast+0x110>
    9d00:	b	9dc4 <sf_gen_multicast+0x110>
    9d04:	b	9dc4 <sf_gen_multicast+0x110>
    9d08:	b	9d0c <sf_gen_multicast+0x58>
    9d0c:	ldr	r0, [pc, #772]	; a018 <sf_gen_multicast+0x364>
    9d10:	bl	6600 <gen_linktype>
    9d14:	mov	r1, #24
    9d18:	mov	r3, #255	; 0xff
    9d1c:	mov	r2, #16
    9d20:	mov	r5, r0
    9d24:	mov	r0, #3
    9d28:	bl	2d1c <gen_cmp>
    9d2c:	mov	r4, r0
    9d30:	mov	r1, r0
    9d34:	mov	r0, r5
    9d38:	bl	3ca0 <sf_gen_and>
    9d3c:	mov	r0, r4
    9d40:	pop	{r4, r5, r6, r7, r8, pc}
    9d44:	mov	r0, #2048	; 0x800
    9d48:	bl	6600 <gen_linktype>
    9d4c:	mov	r2, #16
    9d50:	mov	r1, r2
    9d54:	mov	r3, #224	; 0xe0
    9d58:	mov	r5, r0
    9d5c:	mov	r0, #3
    9d60:	bl	2d50 <gen_cmp_ge>
    9d64:	mov	r4, r0
    9d68:	mov	r1, r0
    9d6c:	mov	r0, r5
    9d70:	bl	3ca0 <sf_gen_and>
    9d74:	mov	r0, r4
    9d78:	pop	{r4, r5, r6, r7, r8, pc}
    9d7c:	ldr	r4, [pc, #664]	; a01c <sf_gen_multicast+0x368>
    9d80:	add	r4, pc, r4
    9d84:	ldr	r3, [r4, #856]	; 0x358
    9d88:	cmp	r3, #119	; 0x77
    9d8c:	beq	9e8c <sf_gen_multicast+0x1d8>
    9d90:	bgt	9dd0 <sf_gen_multicast+0x11c>
    9d94:	cmp	r3, #7
    9d98:	beq	9e74 <sf_gen_multicast+0x1c0>
    9d9c:	bgt	9e48 <sf_gen_multicast+0x194>
    9da0:	cmp	r3, #1
    9da4:	beq	9e3c <sf_gen_multicast+0x188>
    9da8:	cmp	r3, #6
    9dac:	bne	9dc4 <sf_gen_multicast+0x110>
    9db0:	mov	r0, #2
    9db4:	pop	{r4, r5, r6, r7, r8, lr}
    9db8:	b	28c8 <gen_mac_multicast>
    9dbc:	cmp	r3, #105	; 0x69
    9dc0:	beq	9e8c <sf_gen_multicast+0x1d8>
    9dc4:	ldr	r0, [pc, #596]	; a020 <sf_gen_multicast+0x36c>
    9dc8:	add	r0, pc, r0
    9dcc:	bl	2454 <sf_bpf_error>
    9dd0:	cmp	r3, #127	; 0x7f
    9dd4:	beq	9e8c <sf_gen_multicast+0x1d8>
    9dd8:	bgt	9e5c <sf_gen_multicast+0x1a8>
    9ddc:	cmp	r3, #122	; 0x7a
    9de0:	beq	9db0 <sf_gen_multicast+0xfc>
    9de4:	cmp	r3, #123	; 0x7b
    9de8:	bne	9dc4 <sf_gen_multicast+0x110>
    9dec:	ldr	r3, [r4, #908]	; 0x38c
    9df0:	cmp	r3, #0
    9df4:	beq	9dc4 <sf_gen_multicast+0x110>
    9df8:	mov	r2, #8
    9dfc:	mov	r1, #4
    9e00:	mov	r3, #65280	; 0xff00
    9e04:	mov	r0, #1
    9e08:	bl	2d1c <gen_cmp>
    9e0c:	mov	r5, r0
    9e10:	ldr	r0, [r4, #900]	; 0x384
    9e14:	ldr	r3, [r5, #44]	; 0x2c
    9e18:	clz	r3, r3
    9e1c:	lsr	r3, r3, #5
    9e20:	str	r3, [r5, #44]	; 0x2c
    9e24:	bl	28c8 <gen_mac_multicast>
    9e28:	mov	r4, r0
    9e2c:	mov	r1, r0
    9e30:	mov	r0, r5
    9e34:	bl	3ca0 <sf_gen_and>
    9e38:	b	9d3c <sf_gen_multicast+0x88>
    9e3c:	mov	r0, #0
    9e40:	pop	{r4, r5, r6, r7, r8, lr}
    9e44:	b	28c8 <gen_mac_multicast>
    9e48:	cmp	r3, #10
    9e4c:	bne	9dbc <sf_gen_multicast+0x108>
    9e50:	mov	r0, #1
    9e54:	pop	{r4, r5, r6, r7, r8, lr}
    9e58:	b	28c8 <gen_mac_multicast>
    9e5c:	cmp	r3, #163	; 0xa3
    9e60:	beq	9e8c <sf_gen_multicast+0x1d8>
    9e64:	cmp	r3, #192	; 0xc0
    9e68:	beq	9e8c <sf_gen_multicast+0x1d8>
    9e6c:	cmp	r3, #129	; 0x81
    9e70:	bne	9dc4 <sf_gen_multicast+0x110>
    9e74:	ldr	r0, [pc, #424]	; a024 <sf_gen_multicast+0x370>
    9e78:	mov	r1, #2
    9e7c:	add	r0, pc, r0
    9e80:	add	r0, r0, #956	; 0x3bc
    9e84:	pop	{r4, r5, r6, r7, r8, lr}
    9e88:	b	4d4c <gen_ahostop>
    9e8c:	mov	r1, #16
    9e90:	mov	r0, #1
    9e94:	bl	2848 <gen_load_llrel>
    9e98:	mov	r6, #69	; 0x45
    9e9c:	mov	r7, #1
    9ea0:	mov	r4, r0
    9ea4:	mov	r0, #208	; 0xd0
    9ea8:	bl	2494 <newchunk>
    9eac:	mov	r5, r0
    9eb0:	str	r4, [r0, #4]
    9eb4:	str	r0, [r5, #96]	; 0x60
    9eb8:	str	r6, [r0, #8]
    9ebc:	str	r7, [r0, #20]
    9ec0:	mov	r0, #16
    9ec4:	bl	28c8 <gen_mac_multicast>
    9ec8:	mov	r4, r0
    9ecc:	mov	r1, r0
    9ed0:	mov	r0, r5
    9ed4:	bl	3ca0 <sf_gen_and>
    9ed8:	mov	r1, #16
    9edc:	mov	r0, r7
    9ee0:	bl	2848 <gen_load_llrel>
    9ee4:	mov	r8, r0
    9ee8:	mov	r0, #208	; 0xd0
    9eec:	bl	2494 <newchunk>
    9ef0:	mov	r5, r0
    9ef4:	mov	r0, #4
    9ef8:	ldr	r3, [r5, #44]	; 0x2c
    9efc:	clz	r3, r3
    9f00:	lsr	r3, r3, #5
    9f04:	str	r3, [r5, #44]	; 0x2c
    9f08:	str	r7, [r5, #20]
    9f0c:	str	r6, [r5, #8]
    9f10:	str	r8, [r5, #4]
    9f14:	str	r5, [r5, #96]	; 0x60
    9f18:	bl	28c8 <gen_mac_multicast>
    9f1c:	mov	r7, r0
    9f20:	mov	r1, r0
    9f24:	mov	r0, r5
    9f28:	bl	3ca0 <sf_gen_and>
    9f2c:	mov	r1, r4
    9f30:	mov	r0, r7
    9f34:	bl	49c0 <sf_gen_or>
    9f38:	mov	r1, #16
    9f3c:	mov	r0, #0
    9f40:	bl	2848 <gen_load_llrel>
    9f44:	mov	r7, #8
    9f48:	mov	r5, r0
    9f4c:	mov	r0, #208	; 0xd0
    9f50:	bl	2494 <newchunk>
    9f54:	mov	r1, r4
    9f58:	mov	r3, r0
    9f5c:	stmib	r0, {r5, r6}
    9f60:	str	r0, [r3, #96]	; 0x60
    9f64:	str	r7, [r0, #20]
    9f68:	bl	3ca0 <sf_gen_and>
    9f6c:	mov	r1, #16
    9f70:	mov	r0, #0
    9f74:	bl	2848 <gen_load_llrel>
    9f78:	mov	r8, r0
    9f7c:	mov	r0, #208	; 0xd0
    9f80:	bl	2494 <newchunk>
    9f84:	mov	r5, r0
    9f88:	mov	r0, #4
    9f8c:	ldr	r3, [r5, #44]	; 0x2c
    9f90:	clz	r3, r3
    9f94:	lsr	r3, r3, #5
    9f98:	str	r3, [r5, #44]	; 0x2c
    9f9c:	str	r7, [r5, #20]
    9fa0:	str	r6, [r5, #8]
    9fa4:	str	r8, [r5, #4]
    9fa8:	str	r5, [r5, #96]	; 0x60
    9fac:	bl	28c8 <gen_mac_multicast>
    9fb0:	mov	r7, r0
    9fb4:	mov	r1, r0
    9fb8:	mov	r0, r5
    9fbc:	bl	3ca0 <sf_gen_and>
    9fc0:	mov	r1, r4
    9fc4:	mov	r0, r7
    9fc8:	bl	49c0 <sf_gen_or>
    9fcc:	mov	r1, #16
    9fd0:	mov	r0, #0
    9fd4:	bl	2848 <gen_load_llrel>
    9fd8:	mov	r5, r0
    9fdc:	mov	r0, #208	; 0xd0
    9fe0:	bl	2494 <newchunk>
    9fe4:	mov	r1, #4
    9fe8:	mov	r3, r0
    9fec:	ldr	r2, [r0, #44]	; 0x2c
    9ff0:	clz	r2, r2
    9ff4:	lsr	r2, r2, #5
    9ff8:	str	r6, [r0, #8]
    9ffc:	str	r0, [r3, #96]	; 0x60
    a000:	str	r1, [r0, #20]
    a004:	str	r5, [r0, #4]
    a008:	str	r2, [r0, #44]	; 0x2c
    a00c:	mov	r1, r4
    a010:	bl	3ca0 <sf_gen_and>
    a014:	b	9d3c <sf_gen_multicast+0x88>
    a018:	.word	0x000086dd
    a01c:	.word	0x000265e8
    a020:	.word	0x00009df0
    a024:	.word	0x000264ec

0000a028 <sf_gen_mpls>:
    a028:	ldr	r3, [pc, #268]	; a13c <sf_gen_mpls+0x114>
    a02c:	ldr	r2, [pc, #268]	; a140 <sf_gen_mpls+0x118>
    a030:	add	r3, pc, r3
    a034:	add	r2, pc, r2
    a038:	push	{r4, r5, r6, r7, lr}
    a03c:	mov	r6, r0
    a040:	ldr	r5, [r3, #4]
    a044:	ldr	r4, [r2, #872]	; 0x368
    a048:	cmp	r5, #0
    a04c:	sub	sp, sp, #20
    a050:	str	r4, [r3]
    a054:	bne	a104 <sf_gen_mpls+0xdc>
    a058:	ldr	r1, [r2, #856]	; 0x358
    a05c:	cmp	r1, #9
    a060:	beq	a080 <sf_gen_mpls+0x58>
    a064:	cmp	r1, #104	; 0x68
    a068:	beq	a12c <sf_gen_mpls+0x104>
    a06c:	cmp	r1, #1
    a070:	beq	a12c <sf_gen_mpls+0x104>
    a074:	ldr	r0, [pc, #200]	; a144 <sf_gen_mpls+0x11c>
    a078:	add	r0, pc, r0
    a07c:	bl	2454 <sf_bpf_error>
    a080:	ldr	r0, [pc, #192]	; a148 <sf_gen_mpls+0x120>
    a084:	bl	6600 <gen_linktype>
    a088:	mov	r7, r0
    a08c:	cmp	r6, #0
    a090:	blt	a0cc <sf_gen_mpls+0xa4>
    a094:	mov	r2, #0
    a098:	lsl	r6, r6, #12
    a09c:	mov	r3, #16
    a0a0:	stmib	sp, {r2, r6}
    a0a4:	str	r3, [sp]
    a0a8:	mov	r1, r4
    a0ac:	ldr	r3, [pc, #152]	; a14c <sf_gen_mpls+0x124>
    a0b0:	mov	r0, #2
    a0b4:	bl	2c88 <gen_ncmp>
    a0b8:	mov	r6, r0
    a0bc:	mov	r1, r0
    a0c0:	mov	r0, r7
    a0c4:	bl	3ca0 <sf_gen_and>
    a0c8:	mov	r7, r6
    a0cc:	ldr	r2, [pc, #124]	; a150 <sf_gen_mpls+0x128>
    a0d0:	ldr	r3, [pc, #124]	; a154 <sf_gen_mpls+0x12c>
    a0d4:	add	r2, pc, r2
    a0d8:	add	r3, pc, r3
    a0dc:	ldr	r1, [r2, #880]	; 0x370
    a0e0:	add	r4, r4, #4
    a0e4:	add	r5, r5, #1
    a0e8:	add	r1, r1, #4
    a0ec:	mov	r0, r7
    a0f0:	str	r4, [r2, #872]	; 0x368
    a0f4:	str	r1, [r2, #880]	; 0x370
    a0f8:	str	r5, [r3, #4]
    a0fc:	add	sp, sp, #20
    a100:	pop	{r4, r5, r6, r7, pc}
    a104:	mov	r3, #0
    a108:	mov	r2, #16
    a10c:	str	r3, [sp, #8]
    a110:	stm	sp, {r2, r3}
    a114:	sub	r1, r4, #2
    a118:	mov	r3, #1
    a11c:	mov	r0, #2
    a120:	bl	2c88 <gen_ncmp>
    a124:	mov	r7, r0
    a128:	b	a08c <sf_gen_mpls+0x64>
    a12c:	ldr	r0, [pc, #36]	; a158 <sf_gen_mpls+0x130>
    a130:	bl	6600 <gen_linktype>
    a134:	mov	r7, r0
    a138:	b	a08c <sf_gen_mpls+0x64>
    a13c:	.word	0x00026248
    a140:	.word	0x00026334
    a144:	.word	0x00009bb0
    a148:	.word	0x00000281
    a14c:	.word	0xfffff000
    a150:	.word	0x00026294
    a154:	.word	0x000261a0
    a158:	.word	0x00008847

0000a15c <sf_gen_pppoed>:
    a15c:	ldr	r0, [pc]	; a164 <sf_gen_pppoed+0x8>
    a160:	b	6600 <gen_linktype>
    a164:	.word	0x00008863

0000a168 <sf_gen_pppoes>:
    a168:	push	{r4, lr}
    a16c:	mov	r4, #1
    a170:	ldr	r0, [pc, #52]	; a1ac <sf_gen_pppoes+0x44>
    a174:	bl	6600 <gen_linktype>
    a178:	ldr	r3, [pc, #48]	; a1b0 <sf_gen_pppoes+0x48>
    a17c:	ldr	r2, [pc, #48]	; a1b4 <sf_gen_pppoes+0x4c>
    a180:	add	r3, pc, r3
    a184:	add	r2, pc, r2
    a188:	ldr	ip, [r3, #872]	; 0x368
    a18c:	mov	r1, #8
    a190:	add	lr, ip, #6
    a194:	str	r4, [r3, #928]	; 0x3a0
    a198:	str	lr, [r3, #952]	; 0x3b8
    a19c:	str	ip, [r2]
    a1a0:	str	r1, [r3, #872]	; 0x368
    a1a4:	str	r1, [r3, #880]	; 0x370
    a1a8:	pop	{r4, pc}
    a1ac:	.word	0x00008864
    a1b0:	.word	0x000261e8
    a1b4:	.word	0x000260f4

0000a1b8 <gen_hostop6.constprop.8>:
    a1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a1bc:	mov	r7, r0
    a1c0:	sub	sp, sp, #20
    a1c4:	mov	r6, r1
    a1c8:	cmp	r2, #4
    a1cc:	addls	pc, pc, r2, lsl #2
    a1d0:	b	a368 <gen_hostop6.constprop.8+0x1b0>
    a1d4:	b	a2f8 <gen_hostop6.constprop.8+0x140>
    a1d8:	b	a2e4 <gen_hostop6.constprop.8+0x12c>
    a1dc:	b	a1e8 <gen_hostop6.constprop.8+0x30>
    a1e0:	b	a2f8 <gen_hostop6.constprop.8+0x140>
    a1e4:	b	a330 <gen_hostop6.constprop.8+0x178>
    a1e8:	mov	sl, #28
    a1ec:	mov	fp, #32
    a1f0:	mov	r1, #36	; 0x24
    a1f4:	mov	r9, #24
    a1f8:	ldr	r2, [r7, #12]
    a1fc:	ldr	r3, [r6, #12]
    a200:	mov	r5, #0
    a204:	mov	r8, #16
    a208:	rev	r2, r2
    a20c:	str	r2, [sp, #8]
    a210:	rev	r3, r3
    a214:	mov	r2, r5
    a218:	str	r5, [sp, #4]
    a21c:	str	r8, [sp]
    a220:	mov	r0, #3
    a224:	bl	2c88 <gen_ncmp>
    a228:	ldr	r2, [r7, #8]
    a22c:	ldr	r3, [r6, #8]
    a230:	rev	r2, r2
    a234:	mov	r1, fp
    a238:	str	r2, [sp, #8]
    a23c:	rev	r3, r3
    a240:	mov	r2, r5
    a244:	str	r5, [sp, #4]
    a248:	str	r8, [sp]
    a24c:	mov	r4, r0
    a250:	mov	r0, #3
    a254:	bl	2c88 <gen_ncmp>
    a258:	mov	r1, r4
    a25c:	bl	3ca0 <sf_gen_and>
    a260:	ldr	r2, [r7, #4]
    a264:	ldr	r3, [r6, #4]
    a268:	rev	r2, r2
    a26c:	mov	r1, sl
    a270:	str	r2, [sp, #8]
    a274:	rev	r3, r3
    a278:	mov	r2, r5
    a27c:	str	r5, [sp, #4]
    a280:	str	r8, [sp]
    a284:	mov	r0, #3
    a288:	bl	2c88 <gen_ncmp>
    a28c:	mov	r1, r4
    a290:	bl	3ca0 <sf_gen_and>
    a294:	ldr	r2, [r7]
    a298:	ldr	r3, [r6]
    a29c:	rev	r2, r2
    a2a0:	rev	r3, r3
    a2a4:	str	r2, [sp, #8]
    a2a8:	mov	r1, r9
    a2ac:	mov	r2, r5
    a2b0:	str	r5, [sp, #4]
    a2b4:	str	r8, [sp]
    a2b8:	mov	r0, #3
    a2bc:	bl	2c88 <gen_ncmp>
    a2c0:	mov	r1, r4
    a2c4:	bl	3ca0 <sf_gen_and>
    a2c8:	ldr	r0, [pc, #156]	; a36c <gen_hostop6.constprop.8+0x1b4>
    a2cc:	bl	6600 <gen_linktype>
    a2d0:	mov	r1, r4
    a2d4:	bl	3ca0 <sf_gen_and>
    a2d8:	mov	r0, r4
    a2dc:	add	sp, sp, #20
    a2e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a2e4:	mov	sl, #12
    a2e8:	mov	fp, #16
    a2ec:	mov	r1, #20
    a2f0:	mov	r9, #8
    a2f4:	b	a1f8 <gen_hostop6.constprop.8+0x40>
    a2f8:	mov	r2, #1
    a2fc:	bl	a1b8 <gen_hostop6.constprop.8>
    a300:	mov	r1, r6
    a304:	mov	r2, #2
    a308:	mov	r5, r0
    a30c:	mov	r0, r7
    a310:	bl	a1b8 <gen_hostop6.constprop.8>
    a314:	mov	r4, r0
    a318:	mov	r1, r0
    a31c:	mov	r0, r5
    a320:	bl	49c0 <sf_gen_or>
    a324:	mov	r0, r4
    a328:	add	sp, sp, #20
    a32c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a330:	mov	r2, #1
    a334:	bl	a1b8 <gen_hostop6.constprop.8>
    a338:	mov	r1, r6
    a33c:	mov	r2, #2
    a340:	mov	r5, r0
    a344:	mov	r0, r7
    a348:	bl	a1b8 <gen_hostop6.constprop.8>
    a34c:	mov	r4, r0
    a350:	mov	r1, r0
    a354:	mov	r0, r5
    a358:	bl	3ca0 <sf_gen_and>
    a35c:	mov	r0, r4
    a360:	add	sp, sp, #20
    a364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a368:	bl	f18 <abort@plt>
    a36c:	.word	0x000086dd

0000a370 <gen_host6>:
    a370:	push	{r4, lr}
    a374:	ldr	r4, [sp, #8]
    a378:	ldr	lr, [pc, #640]	; a600 <gen_host6+0x290>
    a37c:	ldr	ip, [pc, #640]	; a604 <gen_host6+0x294>
    a380:	add	lr, pc, lr
    a384:	cmp	r4, #2
    a388:	add	ip, pc, ip
    a38c:	movne	ip, lr
    a390:	cmp	r2, #40	; 0x28
    a394:	addls	pc, pc, r2, lsl #2
    a398:	b	a5fc <gen_host6+0x28c>
    a39c:	b	a440 <gen_host6+0xd0>
    a3a0:	b	a5fc <gen_host6+0x28c>
    a3a4:	b	a518 <gen_host6+0x1a8>
    a3a8:	b	a508 <gen_host6+0x198>
    a3ac:	b	a4f8 <gen_host6+0x188>
    a3b0:	b	a4e8 <gen_host6+0x178>
    a3b4:	b	a4d8 <gen_host6+0x168>
    a3b8:	b	a4c8 <gen_host6+0x158>
    a3bc:	b	a4b8 <gen_host6+0x148>
    a3c0:	b	a4a8 <gen_host6+0x138>
    a3c4:	b	a498 <gen_host6+0x128>
    a3c8:	b	a48c <gen_host6+0x11c>
    a3cc:	b	a47c <gen_host6+0x10c>
    a3d0:	b	a470 <gen_host6+0x100>
    a3d4:	b	a464 <gen_host6+0xf4>
    a3d8:	b	a458 <gen_host6+0xe8>
    a3dc:	b	a44c <gen_host6+0xdc>
    a3e0:	b	a440 <gen_host6+0xd0>
    a3e4:	b	a5ec <gen_host6+0x27c>
    a3e8:	b	a5dc <gen_host6+0x26c>
    a3ec:	b	a5cc <gen_host6+0x25c>
    a3f0:	b	a5bc <gen_host6+0x24c>
    a3f4:	b	a5ac <gen_host6+0x23c>
    a3f8:	b	a5a0 <gen_host6+0x230>
    a3fc:	b	a594 <gen_host6+0x224>
    a400:	b	a584 <gen_host6+0x214>
    a404:	b	a574 <gen_host6+0x204>
    a408:	b	a564 <gen_host6+0x1f4>
    a40c:	b	a554 <gen_host6+0x1e4>
    a410:	b	a548 <gen_host6+0x1d8>
    a414:	b	a538 <gen_host6+0x1c8>
    a418:	b	a5fc <gen_host6+0x28c>
    a41c:	b	a5fc <gen_host6+0x28c>
    a420:	b	a5fc <gen_host6+0x28c>
    a424:	b	a5fc <gen_host6+0x28c>
    a428:	b	a5fc <gen_host6+0x28c>
    a42c:	b	a5fc <gen_host6+0x28c>
    a430:	b	a5fc <gen_host6+0x28c>
    a434:	b	a5fc <gen_host6+0x28c>
    a438:	b	a5fc <gen_host6+0x28c>
    a43c:	b	a528 <gen_host6+0x1b8>
    a440:	mov	r2, r3
    a444:	pop	{r4, lr}
    a448:	b	a1b8 <gen_hostop6.constprop.8>
    a44c:	ldr	r0, [pc, #436]	; a608 <gen_host6+0x298>
    a450:	add	r0, pc, r0
    a454:	bl	2454 <sf_bpf_error>
    a458:	ldr	r0, [pc, #428]	; a60c <gen_host6+0x29c>
    a45c:	add	r0, pc, r0
    a460:	bl	2454 <sf_bpf_error>
    a464:	ldr	r0, [pc, #420]	; a610 <gen_host6+0x2a0>
    a468:	add	r0, pc, r0
    a46c:	bl	2454 <sf_bpf_error>
    a470:	ldr	r0, [pc, #412]	; a614 <gen_host6+0x2a4>
    a474:	add	r0, pc, r0
    a478:	bl	2454 <sf_bpf_error>
    a47c:	ldr	r0, [pc, #404]	; a618 <gen_host6+0x2a8>
    a480:	mov	r1, ip
    a484:	add	r0, pc, r0
    a488:	bl	2454 <sf_bpf_error>
    a48c:	ldr	r0, [pc, #392]	; a61c <gen_host6+0x2ac>
    a490:	add	r0, pc, r0
    a494:	bl	2454 <sf_bpf_error>
    a498:	ldr	r0, [pc, #384]	; a620 <gen_host6+0x2b0>
    a49c:	mov	r1, ip
    a4a0:	add	r0, pc, r0
    a4a4:	bl	2454 <sf_bpf_error>
    a4a8:	ldr	r0, [pc, #372]	; a624 <gen_host6+0x2b4>
    a4ac:	mov	r1, ip
    a4b0:	add	r0, pc, r0
    a4b4:	bl	2454 <sf_bpf_error>
    a4b8:	ldr	r0, [pc, #360]	; a628 <gen_host6+0x2b8>
    a4bc:	mov	r1, ip
    a4c0:	add	r0, pc, r0
    a4c4:	bl	2454 <sf_bpf_error>
    a4c8:	ldr	r0, [pc, #348]	; a62c <gen_host6+0x2bc>
    a4cc:	mov	r1, ip
    a4d0:	add	r0, pc, r0
    a4d4:	bl	2454 <sf_bpf_error>
    a4d8:	ldr	r0, [pc, #336]	; a630 <gen_host6+0x2c0>
    a4dc:	mov	r1, ip
    a4e0:	add	r0, pc, r0
    a4e4:	bl	2454 <sf_bpf_error>
    a4e8:	ldr	r0, [pc, #324]	; a634 <gen_host6+0x2c4>
    a4ec:	mov	r1, ip
    a4f0:	add	r0, pc, r0
    a4f4:	bl	2454 <sf_bpf_error>
    a4f8:	ldr	r0, [pc, #312]	; a638 <gen_host6+0x2c8>
    a4fc:	mov	r1, ip
    a500:	add	r0, pc, r0
    a504:	bl	2454 <sf_bpf_error>
    a508:	ldr	r0, [pc, #300]	; a63c <gen_host6+0x2cc>
    a50c:	mov	r1, ip
    a510:	add	r0, pc, r0
    a514:	bl	2454 <sf_bpf_error>
    a518:	ldr	r0, [pc, #288]	; a640 <gen_host6+0x2d0>
    a51c:	mov	r1, ip
    a520:	add	r0, pc, r0
    a524:	bl	2454 <sf_bpf_error>
    a528:	ldr	r0, [pc, #276]	; a644 <gen_host6+0x2d4>
    a52c:	mov	r1, ip
    a530:	add	r0, pc, r0
    a534:	bl	2454 <sf_bpf_error>
    a538:	ldr	r0, [pc, #264]	; a648 <gen_host6+0x2d8>
    a53c:	mov	r1, ip
    a540:	add	r0, pc, r0
    a544:	bl	2454 <sf_bpf_error>
    a548:	ldr	r0, [pc, #252]	; a64c <gen_host6+0x2dc>
    a54c:	add	r0, pc, r0
    a550:	bl	2454 <sf_bpf_error>
    a554:	ldr	r0, [pc, #244]	; a650 <gen_host6+0x2e0>
    a558:	mov	r1, ip
    a55c:	add	r0, pc, r0
    a560:	bl	2454 <sf_bpf_error>
    a564:	ldr	r0, [pc, #232]	; a654 <gen_host6+0x2e4>
    a568:	mov	r1, ip
    a56c:	add	r0, pc, r0
    a570:	bl	2454 <sf_bpf_error>
    a574:	ldr	r0, [pc, #220]	; a658 <gen_host6+0x2e8>
    a578:	mov	r1, ip
    a57c:	add	r0, pc, r0
    a580:	bl	2454 <sf_bpf_error>
    a584:	ldr	r0, [pc, #208]	; a65c <gen_host6+0x2ec>
    a588:	mov	r1, ip
    a58c:	add	r0, pc, r0
    a590:	bl	2454 <sf_bpf_error>
    a594:	ldr	r0, [pc, #196]	; a660 <gen_host6+0x2f0>
    a598:	add	r0, pc, r0
    a59c:	bl	2454 <sf_bpf_error>
    a5a0:	ldr	r0, [pc, #188]	; a664 <gen_host6+0x2f4>
    a5a4:	add	r0, pc, r0
    a5a8:	bl	2454 <sf_bpf_error>
    a5ac:	ldr	r0, [pc, #180]	; a668 <gen_host6+0x2f8>
    a5b0:	mov	r1, ip
    a5b4:	add	r0, pc, r0
    a5b8:	bl	2454 <sf_bpf_error>
    a5bc:	ldr	r0, [pc, #168]	; a66c <gen_host6+0x2fc>
    a5c0:	mov	r1, ip
    a5c4:	add	r0, pc, r0
    a5c8:	bl	2454 <sf_bpf_error>
    a5cc:	ldr	r0, [pc, #156]	; a670 <gen_host6+0x300>
    a5d0:	mov	r1, ip
    a5d4:	add	r0, pc, r0
    a5d8:	bl	2454 <sf_bpf_error>
    a5dc:	ldr	r0, [pc, #144]	; a674 <gen_host6+0x304>
    a5e0:	mov	r1, ip
    a5e4:	add	r0, pc, r0
    a5e8:	bl	2454 <sf_bpf_error>
    a5ec:	ldr	r0, [pc, #132]	; a678 <gen_host6+0x308>
    a5f0:	mov	r1, ip
    a5f4:	add	r0, pc, r0
    a5f8:	bl	2454 <sf_bpf_error>
    a5fc:	bl	f18 <abort@plt>
    a600:	.word	0x0000b424
    a604:	.word	0x000092f4
    a608:	.word	0x000093c4
    a60c:	.word	0x000093e0
    a610:	.word	0x00009364
    a614:	.word	0x0000937c
    a618:	.word	0x00009834
    a61c:	.word	0x000092f0
    a620:	.word	0x00009280
    a624:	.word	0x00009250
    a628:	.word	0x00009220
    a62c:	.word	0x000091f0
    a630:	.word	0x000091a0
    a634:	.word	0x000091b0
    a638:	.word	0x00009770
    a63c:	.word	0x00009784
    a640:	.word	0x00009730
    a644:	.word	0x0000947c
    a648:	.word	0x00009448
    a64c:	.word	0x00009418
    a650:	.word	0x000093e8
    a654:	.word	0x000093b8
    a658:	.word	0x00009388
    a65c:	.word	0x00009358
    a660:	.word	0x000090c0
    a664:	.word	0x00009204
    a668:	.word	0x000091ac
    a66c:	.word	0x0000917c
    a670:	.word	0x000092f0
    a674:	.word	0x000092c4
    a678:	.word	0x00009294

0000a67c <sf_gen_mcode6>:
    a67c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a680:	sub	sp, sp, #32
    a684:	cmp	r1, #0
    a688:	str	r3, [sp, #12]
    a68c:	bne	a7ec <sf_gen_mcode6+0x170>
    a690:	mov	r6, r2
    a694:	uxtb	r8, r3
    a698:	mov	r9, r0
    a69c:	bl	b978 <pcap_nametoaddrinfo>
    a6a0:	subs	r7, r0, #0
    a6a4:	beq	a7dc <sf_gen_mcode6+0x160>
    a6a8:	ldr	r2, [pc, #360]	; a818 <sf_gen_mcode6+0x19c>
    a6ac:	ldr	r3, [r7, #28]
    a6b0:	add	r2, pc, r2
    a6b4:	cmp	r3, #0
    a6b8:	str	r7, [r2, #888]	; 0x378
    a6bc:	bne	a808 <sf_gen_mcode6+0x18c>
    a6c0:	cmp	r6, #128	; 0x80
    a6c4:	ldr	r5, [r7, #20]
    a6c8:	bhi	a7f8 <sf_gen_mcode6+0x17c>
    a6cc:	add	r4, sp, #16
    a6d0:	asr	sl, r6, #3
    a6d4:	str	r3, [sp, #16]
    a6d8:	mov	r0, r4
    a6dc:	str	r3, [r4, #4]
    a6e0:	str	r3, [r4, #8]
    a6e4:	str	r3, [r4, #12]
    a6e8:	mov	r2, sl
    a6ec:	mov	r1, #255	; 0xff
    a6f0:	bl	e88 <memset@plt>
    a6f4:	ands	r3, r6, #7
    a6f8:	bne	a78c <sf_gen_mcode6+0x110>
    a6fc:	ldr	r2, [sp, #16]
    a700:	ldr	r3, [r5, #8]
    a704:	bics	r3, r3, r2
    a708:	bne	a7c8 <sf_gen_mcode6+0x14c>
    a70c:	ldr	r2, [sp, #20]
    a710:	ldr	r3, [r5, #12]
    a714:	bics	r3, r3, r2
    a718:	bne	a7c8 <sf_gen_mcode6+0x14c>
    a71c:	ldr	r2, [sp, #24]
    a720:	ldr	r3, [r5, #16]
    a724:	bics	r3, r3, r2
    a728:	bne	a7c8 <sf_gen_mcode6+0x14c>
    a72c:	ldr	r2, [sp, #28]
    a730:	ldr	r3, [r5, #20]
    a734:	bics	r3, r3, r2
    a738:	bne	a7c8 <sf_gen_mcode6+0x14c>
    a73c:	cmp	r8, #1
    a740:	bls	a7b4 <sf_gen_mcode6+0x138>
    a744:	cmp	r8, #2
    a748:	bne	a7a8 <sf_gen_mcode6+0x12c>
    a74c:	mov	r1, r4
    a750:	ldrb	r3, [sp, #14]
    a754:	ldrb	r2, [sp, #13]
    a758:	str	r8, [sp]
    a75c:	add	r0, r5, #8
    a760:	bl	a370 <gen_host6>
    a764:	ldr	r3, [pc, #176]	; a81c <sf_gen_mcode6+0x1a0>
    a768:	mov	r2, #0
    a76c:	add	r3, pc, r3
    a770:	str	r2, [r3, #888]	; 0x378
    a774:	mov	r4, r0
    a778:	mov	r0, r7
    a77c:	bl	edc <freeaddrinfo@plt>
    a780:	mov	r0, r4
    a784:	add	sp, sp, #32
    a788:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a78c:	rsb	r3, r3, #8
    a790:	mov	r2, #255	; 0xff
    a794:	add	r1, sp, #32
    a798:	add	sl, r1, sl
    a79c:	lsl	r3, r2, r3
    a7a0:	strb	r3, [sl, #-16]
    a7a4:	b	a6fc <sf_gen_mcode6+0x80>
    a7a8:	ldr	r0, [pc, #112]	; a820 <sf_gen_mcode6+0x1a4>
    a7ac:	add	r0, pc, r0
    a7b0:	bl	2454 <sf_bpf_error>
    a7b4:	cmp	r6, #128	; 0x80
    a7b8:	beq	a74c <sf_gen_mcode6+0xd0>
    a7bc:	ldr	r0, [pc, #96]	; a824 <sf_gen_mcode6+0x1a8>
    a7c0:	add	r0, pc, r0
    a7c4:	bl	2454 <sf_bpf_error>
    a7c8:	ldr	r0, [pc, #88]	; a828 <sf_gen_mcode6+0x1ac>
    a7cc:	mov	r2, r6
    a7d0:	mov	r1, r9
    a7d4:	add	r0, pc, r0
    a7d8:	bl	2454 <sf_bpf_error>
    a7dc:	ldr	r0, [pc, #72]	; a82c <sf_gen_mcode6+0x1b0>
    a7e0:	mov	r1, r9
    a7e4:	add	r0, pc, r0
    a7e8:	bl	2454 <sf_bpf_error>
    a7ec:	ldr	r0, [pc, #60]	; a830 <sf_gen_mcode6+0x1b4>
    a7f0:	add	r0, pc, r0
    a7f4:	bl	2454 <sf_bpf_error>
    a7f8:	ldr	r0, [pc, #52]	; a834 <sf_gen_mcode6+0x1b8>
    a7fc:	mov	r1, #128	; 0x80
    a800:	add	r0, pc, r0
    a804:	bl	2454 <sf_bpf_error>
    a808:	ldr	r0, [pc, #40]	; a838 <sf_gen_mcode6+0x1bc>
    a80c:	mov	r1, r9
    a810:	add	r0, pc, r0
    a814:	bl	2454 <sf_bpf_error>
    a818:	.word	0x00025cb8
    a81c:	.word	0x00025bfc
    a820:	.word	0x0000959c
    a824:	.word	0x00009270
    a828:	.word	0x0000923c
    a82c:	.word	0x00009510
    a830:	.word	0x000094ec
    a834:	.word	0x0000952c
    a838:	.word	0x000094fc

0000a83c <sf_gen_scode>:
    a83c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a840:	uxtb	r6, r1
    a844:	sub	sp, sp, #60	; 0x3c
    a848:	cmp	r6, #4
    a84c:	str	r1, [sp, #28]
    a850:	beq	ab4c <sf_gen_scode+0x310>
    a854:	lsr	r4, r1, #8
    a858:	lsr	r5, r1, #16
    a85c:	uxtb	r4, r4
    a860:	uxtb	r5, r5
    a864:	mov	r9, r0
    a868:	bls	a894 <sf_gen_scode+0x58>
    a86c:	cmp	r6, #6
    a870:	beq	ab8c <sf_gen_scode+0x350>
    a874:	bcc	ab5c <sf_gen_scode+0x320>
    a878:	cmp	r6, #7
    a87c:	beq	aa58 <sf_gen_scode+0x21c>
    a880:	cmp	r6, #255	; 0xff
    a884:	bne	ab58 <sf_gen_scode+0x31c>
    a888:	ldr	r0, [pc, #1792]	; af90 <sf_gen_scode+0x754>
    a88c:	add	r0, pc, r0
    a890:	bl	2454 <sf_bpf_error>
    a894:	cmp	r6, #2
    a898:	beq	ab00 <sf_gen_scode+0x2c4>
    a89c:	bhi	a9bc <sf_gen_scode+0x180>
    a8a0:	cmp	r4, #1
    a8a4:	beq	ace0 <sf_gen_scode+0x4a4>
    a8a8:	cmp	r4, #12
    a8ac:	beq	ad30 <sf_gen_scode+0x4f4>
    a8b0:	mvn	r7, #0
    a8b4:	add	r3, sp, #40	; 0x28
    a8b8:	str	r3, [sp, #16]
    a8bc:	str	r7, [sp, #44]	; 0x2c
    a8c0:	str	r7, [sp, #40]	; 0x28
    a8c4:	str	r7, [sp, #48]	; 0x30
    a8c8:	str	r7, [sp, #52]	; 0x34
    a8cc:	bl	b978 <pcap_nametoaddrinfo>
    a8d0:	subs	r3, r0, #0
    a8d4:	str	r3, [sp, #12]
    a8d8:	beq	aee8 <sf_gen_scode+0x6ac>
    a8dc:	ldr	r2, [pc, #1712]	; af94 <sf_gen_scode+0x758>
    a8e0:	mov	r8, #0
    a8e4:	add	r2, pc, r2
    a8e8:	ldr	r1, [sp, #12]
    a8ec:	ldr	r3, [r2, #952]	; 0x3b8
    a8f0:	str	r7, [sp, #20]
    a8f4:	cmp	r4, r8
    a8f8:	cmneq	r3, #1
    a8fc:	moveq	r3, #1
    a900:	movne	r3, #0
    a904:	cmp	r3, r8
    a908:	mov	r7, r1
    a90c:	moveq	fp, r4
    a910:	movne	fp, #17
    a914:	moveq	sl, r4
    a918:	movne	sl, #2
    a91c:	str	r1, [r2, #888]	; 0x378
    a920:	str	r4, [sp, #24]
    a924:	b	a980 <sf_gen_scode+0x144>
    a928:	cmp	r3, #10
    a92c:	bne	a974 <sf_gen_scode+0x138>
    a930:	cmp	fp, #2
    a934:	beq	a974 <sf_gen_scode+0x138>
    a938:	ldr	r0, [r7, #20]
    a93c:	mov	r3, r5
    a940:	add	r0, r0, #8
    a944:	str	r6, [sp]
    a948:	mov	r2, fp
    a94c:	ldr	r1, [sp, #16]
    a950:	bl	a370 <gen_host6>
    a954:	mov	r4, r0
    a958:	cmp	r8, #0
    a95c:	moveq	r8, r4
    a960:	beq	a974 <sf_gen_scode+0x138>
    a964:	mov	r0, r8
    a968:	mov	r1, r4
    a96c:	bl	49c0 <sf_gen_or>
    a970:	mov	r8, r4
    a974:	ldr	r7, [r7, #28]
    a978:	cmp	r7, #0
    a97c:	beq	abbc <sf_gen_scode+0x380>
    a980:	ldr	r3, [r7, #4]
    a984:	cmp	r3, #2
    a988:	bne	a928 <sf_gen_scode+0xec>
    a98c:	cmp	sl, #17
    a990:	beq	a974 <sf_gen_scode+0x138>
    a994:	ldr	r1, [r7, #20]
    a998:	mov	r3, r5
    a99c:	mov	r2, sl
    a9a0:	ldr	r0, [r1, #4]
    a9a4:	ldr	r1, [sp, #20]
    a9a8:	rev	r0, r0
    a9ac:	str	r6, [sp]
    a9b0:	bl	8708 <gen_host>
    a9b4:	mov	r4, r0
    a9b8:	b	a958 <sf_gen_scode+0x11c>
    a9bc:	cmp	r4, #0
    a9c0:	beq	ac3c <sf_gen_scode+0x400>
    a9c4:	sub	r3, r4, #5
    a9c8:	uxtb	r3, r3
    a9cc:	cmp	r3, #2
    a9d0:	bhi	aedc <sf_gen_scode+0x6a0>
    a9d4:	add	r2, sp, #32
    a9d8:	add	r1, sp, #40	; 0x28
    a9dc:	bl	b9e4 <pcap_nametoport>
    a9e0:	cmp	r0, #0
    a9e4:	beq	ac50 <sf_gen_scode+0x414>
    a9e8:	cmp	r4, #7
    a9ec:	beq	ac88 <sf_gen_scode+0x44c>
    a9f0:	cmp	r4, #6
    a9f4:	beq	ac1c <sf_gen_scode+0x3e0>
    a9f8:	cmp	r4, #5
    a9fc:	bne	af44 <sf_gen_scode+0x708>
    aa00:	ldr	r3, [sp, #32]
    aa04:	cmp	r3, #17
    aa08:	beq	af34 <sf_gen_scode+0x6f8>
    aa0c:	cmp	r3, #6
    aa10:	beq	af4c <sf_gen_scode+0x710>
    aa14:	mov	r3, #132	; 0x84
    aa18:	mov	r4, r3
    aa1c:	str	r3, [sp, #32]
    aa20:	mov	r1, r4
    aa24:	mov	r2, r5
    aa28:	ldr	r0, [sp, #40]	; 0x28
    aa2c:	bl	8bcc <gen_port>
    aa30:	mov	r2, r5
    aa34:	ldr	r1, [sp, #32]
    aa38:	mov	r8, r0
    aa3c:	ldr	r0, [sp, #40]	; 0x28
    aa40:	bl	8c88 <gen_port6>
    aa44:	mov	r1, r8
    aa48:	bl	49c0 <sf_gen_or>
    aa4c:	mov	r0, r8
    aa50:	add	sp, sp, #60	; 0x3c
    aa54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa58:	cmp	r4, #0
    aa5c:	beq	ac60 <sf_gen_scode+0x424>
    aa60:	sub	r3, r4, #5
    aa64:	uxtb	r3, r3
    aa68:	cmp	r3, #2
    aa6c:	bhi	af5c <sf_gen_scode+0x720>
    aa70:	add	r3, sp, #32
    aa74:	add	r2, sp, #40	; 0x28
    aa78:	add	r1, sp, #36	; 0x24
    aa7c:	bl	bab0 <pcap_nametoportrange>
    aa80:	cmp	r0, #0
    aa84:	beq	ac78 <sf_gen_scode+0x43c>
    aa88:	cmp	r4, #7
    aa8c:	beq	acb4 <sf_gen_scode+0x478>
    aa90:	cmp	r4, #6
    aa94:	beq	abfc <sf_gen_scode+0x3c0>
    aa98:	cmp	r4, #5
    aa9c:	bne	af88 <sf_gen_scode+0x74c>
    aaa0:	ldr	r3, [sp, #32]
    aaa4:	cmp	r3, #17
    aaa8:	beq	af68 <sf_gen_scode+0x72c>
    aaac:	cmp	r3, #6
    aab0:	beq	af78 <sf_gen_scode+0x73c>
    aab4:	mov	r3, #132	; 0x84
    aab8:	mov	r4, r3
    aabc:	str	r3, [sp, #32]
    aac0:	mov	r2, r4
    aac4:	mov	r3, r5
    aac8:	ldr	r1, [sp, #40]	; 0x28
    aacc:	ldr	r0, [sp, #36]	; 0x24
    aad0:	bl	8d48 <gen_portrange>
    aad4:	mov	r3, r5
    aad8:	ldr	r2, [sp, #32]
    aadc:	ldr	r1, [sp, #40]	; 0x28
    aae0:	mov	r8, r0
    aae4:	ldr	r0, [sp, #36]	; 0x24
    aae8:	bl	8e18 <gen_portrange6>
    aaec:	mov	r1, r8
    aaf0:	bl	49c0 <sf_gen_or>
    aaf4:	mov	r0, r8
    aaf8:	add	sp, sp, #60	; 0x3c
    aafc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab00:	bl	b9d0 <pcap_nametonetaddr>
    ab04:	cmp	r0, #0
    ab08:	beq	af08 <sf_gen_scode+0x6cc>
    ab0c:	tst	r0, #-16777216	; 0xff000000
    ab10:	mvn	r1, #0
    ab14:	bne	ab28 <sf_gen_scode+0x2ec>
    ab18:	lsl	r0, r0, #8
    ab1c:	tst	r0, #-16777216	; 0xff000000
    ab20:	lsl	r1, r1, #8
    ab24:	beq	ab18 <sf_gen_scode+0x2dc>
    ab28:	mov	ip, #2
    ab2c:	mov	r3, r5
    ab30:	mov	r2, r4
    ab34:	str	ip, [sp]
    ab38:	bl	8708 <gen_host>
    ab3c:	mov	r8, r0
    ab40:	mov	r0, r8
    ab44:	add	sp, sp, #60	; 0x3c
    ab48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab4c:	ldr	r0, [pc, #1092]	; af98 <sf_gen_scode+0x75c>
    ab50:	add	r0, pc, r0
    ab54:	bl	2454 <sf_bpf_error>
    ab58:	bl	f18 <abort@plt>
    ab5c:	mov	r1, r4
    ab60:	bl	2dd8 <lookup_proto>
    ab64:	cmp	r0, #0
    ab68:	str	r0, [sp, #32]
    ab6c:	blt	aef8 <sf_gen_scode+0x6bc>
    ab70:	mov	r2, r5
    ab74:	mov	r1, r4
    ab78:	bl	72d8 <gen_proto>
    ab7c:	mov	r8, r0
    ab80:	mov	r0, r8
    ab84:	add	sp, sp, #60	; 0x3c
    ab88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab8c:	mov	r1, r4
    ab90:	bl	2dd8 <lookup_proto>
    ab94:	cmp	r0, #0
    ab98:	str	r0, [sp, #32]
    ab9c:	blt	aef8 <sf_gen_scode+0x6bc>
    aba0:	mov	r2, r5
    aba4:	mov	r1, r4
    aba8:	bl	8eec <gen_protochain>
    abac:	mov	r8, r0
    abb0:	mov	r0, r8
    abb4:	add	sp, sp, #60	; 0x3c
    abb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    abbc:	ldr	r3, [pc, #984]	; af9c <sf_gen_scode+0x760>
    abc0:	ldr	r0, [sp, #12]
    abc4:	add	r3, pc, r3
    abc8:	ldr	r4, [sp, #24]
    abcc:	str	r7, [r3, #888]	; 0x378
    abd0:	bl	edc <freeaddrinfo@plt>
    abd4:	cmp	r8, #0
    abd8:	bne	ab40 <sf_gen_scode+0x304>
    abdc:	cmp	r4, #0
    abe0:	bne	af28 <sf_gen_scode+0x6ec>
    abe4:	ldr	r2, [pc, #948]	; afa0 <sf_gen_scode+0x764>
    abe8:	add	r2, pc, r2
    abec:	ldr	r0, [pc, #944]	; afa4 <sf_gen_scode+0x768>
    abf0:	mov	r1, r9
    abf4:	add	r0, pc, r0
    abf8:	bl	2454 <sf_bpf_error>
    abfc:	ldr	r3, [sp, #32]
    ac00:	cmp	r3, #17
    ac04:	beq	af68 <sf_gen_scode+0x72c>
    ac08:	cmp	r3, #132	; 0x84
    ac0c:	beq	acd0 <sf_gen_scode+0x494>
    ac10:	mov	r3, #6
    ac14:	str	r3, [sp, #32]
    ac18:	b	aac0 <sf_gen_scode+0x284>
    ac1c:	ldr	r3, [sp, #32]
    ac20:	cmp	r3, #17
    ac24:	beq	af34 <sf_gen_scode+0x6f8>
    ac28:	cmp	r3, #132	; 0x84
    ac2c:	beq	aca4 <sf_gen_scode+0x468>
    ac30:	mov	r3, #6
    ac34:	str	r3, [sp, #32]
    ac38:	b	aa20 <sf_gen_scode+0x1e4>
    ac3c:	add	r2, sp, #32
    ac40:	add	r1, sp, #40	; 0x28
    ac44:	bl	b9e4 <pcap_nametoport>
    ac48:	cmp	r0, #0
    ac4c:	bne	af44 <sf_gen_scode+0x708>
    ac50:	ldr	r0, [pc, #848]	; afa8 <sf_gen_scode+0x76c>
    ac54:	mov	r1, r9
    ac58:	add	r0, pc, r0
    ac5c:	bl	2454 <sf_bpf_error>
    ac60:	add	r3, sp, #32
    ac64:	add	r2, sp, #40	; 0x28
    ac68:	add	r1, sp, #36	; 0x24
    ac6c:	bl	bab0 <pcap_nametoportrange>
    ac70:	cmp	r0, #0
    ac74:	bne	af88 <sf_gen_scode+0x74c>
    ac78:	ldr	r0, [pc, #812]	; afac <sf_gen_scode+0x770>
    ac7c:	mov	r1, r9
    ac80:	add	r0, pc, r0
    ac84:	bl	2454 <sf_bpf_error>
    ac88:	ldr	r3, [sp, #32]
    ac8c:	cmp	r3, #6
    ac90:	beq	af4c <sf_gen_scode+0x710>
    ac94:	cmp	r3, #132	; 0x84
    ac98:	movne	r4, #17
    ac9c:	strne	r4, [sp, #32]
    aca0:	bne	aa20 <sf_gen_scode+0x1e4>
    aca4:	ldr	r0, [pc, #772]	; afb0 <sf_gen_scode+0x774>
    aca8:	mov	r1, r9
    acac:	add	r0, pc, r0
    acb0:	bl	2454 <sf_bpf_error>
    acb4:	ldr	r3, [sp, #32]
    acb8:	cmp	r3, #6
    acbc:	beq	af78 <sf_gen_scode+0x73c>
    acc0:	cmp	r3, #132	; 0x84
    acc4:	movne	r4, #17
    acc8:	strne	r4, [sp, #32]
    accc:	bne	aac0 <sf_gen_scode+0x284>
    acd0:	ldr	r0, [pc, #732]	; afb4 <sf_gen_scode+0x778>
    acd4:	mov	r1, r9
    acd8:	add	r0, pc, r0
    acdc:	bl	2454 <sf_bpf_error>
    ace0:	ldr	r3, [pc, #720]	; afb8 <sf_gen_scode+0x77c>
    ace4:	add	r3, pc, r3
    ace8:	ldr	r3, [r3, #856]	; 0x358
    acec:	cmp	r3, #119	; 0x77
    acf0:	beq	ae3c <sf_gen_scode+0x600>
    acf4:	bgt	ad50 <sf_gen_scode+0x514>
    acf8:	cmp	r3, #6
    acfc:	beq	ae08 <sf_gen_scode+0x5cc>
    ad00:	ble	addc <sf_gen_scode+0x5a0>
    ad04:	cmp	r3, #10
    ad08:	bne	ae64 <sf_gen_scode+0x628>
    ad0c:	bl	be18 <pcap_ether_hostton>
    ad10:	subs	r4, r0, #0
    ad14:	beq	aecc <sf_gen_scode+0x690>
    ad18:	mov	r1, r5
    ad1c:	bl	4a40 <gen_fhostop>
    ad20:	mov	r8, r0
    ad24:	mov	r0, r4
    ad28:	bl	da4 <free@plt>
    ad2c:	b	ab40 <sf_gen_scode+0x304>
    ad30:	bl	beec <__pcap_nametodnaddr>
    ad34:	str	r6, [sp]
    ad38:	mov	r3, r5
    ad3c:	mov	r2, r4
    ad40:	mov	r1, #0
    ad44:	bl	8708 <gen_host>
    ad48:	mov	r8, r0
    ad4c:	b	ab40 <sf_gen_scode+0x304>
    ad50:	cmp	r3, #127	; 0x7f
    ad54:	beq	ae3c <sf_gen_scode+0x600>
    ad58:	bgt	ae2c <sf_gen_scode+0x5f0>
    ad5c:	cmp	r3, #122	; 0x7a
    ad60:	beq	ae78 <sf_gen_scode+0x63c>
    ad64:	cmp	r3, #123	; 0x7b
    ad68:	bne	ae6c <sf_gen_scode+0x630>
    ad6c:	ldr	r3, [pc, #584]	; afbc <sf_gen_scode+0x780>
    ad70:	add	r3, pc, r3
    ad74:	ldr	r3, [r3, #908]	; 0x38c
    ad78:	cmp	r3, #0
    ad7c:	beq	ae6c <sf_gen_scode+0x630>
    ad80:	mov	r3, #65280	; 0xff00
    ad84:	mov	r2, #8
    ad88:	mov	r1, #4
    ad8c:	mov	r0, #1
    ad90:	bl	2d1c <gen_cmp>
    ad94:	mov	r4, r0
    ad98:	mov	r0, r9
    ad9c:	ldr	r3, [r4, #44]	; 0x2c
    ada0:	clz	r3, r3
    ada4:	lsr	r3, r3, #5
    ada8:	str	r3, [r4, #44]	; 0x2c
    adac:	bl	be18 <pcap_ether_hostton>
    adb0:	subs	r6, r0, #0
    adb4:	beq	ae9c <sf_gen_scode+0x660>
    adb8:	mov	r1, r5
    adbc:	bl	4c74 <gen_ehostop>
    adc0:	mov	r1, r0
    adc4:	mov	r8, r0
    adc8:	mov	r0, r4
    adcc:	bl	3ca0 <sf_gen_and>
    add0:	mov	r0, r6
    add4:	bl	da4 <free@plt>
    add8:	b	ab40 <sf_gen_scode+0x304>
    addc:	cmp	r3, #1
    ade0:	bne	ae6c <sf_gen_scode+0x630>
    ade4:	bl	be18 <pcap_ether_hostton>
    ade8:	subs	r4, r0, #0
    adec:	beq	ae9c <sf_gen_scode+0x660>
    adf0:	mov	r1, r5
    adf4:	bl	4c74 <gen_ehostop>
    adf8:	mov	r8, r0
    adfc:	mov	r0, r4
    ae00:	bl	da4 <free@plt>
    ae04:	b	ab40 <sf_gen_scode+0x304>
    ae08:	bl	be18 <pcap_ether_hostton>
    ae0c:	subs	r4, r0, #0
    ae10:	beq	af18 <sf_gen_scode+0x6dc>
    ae14:	mov	r1, r5
    ae18:	bl	4afc <gen_thostop>
    ae1c:	mov	r8, r0
    ae20:	mov	r0, r4
    ae24:	bl	da4 <free@plt>
    ae28:	b	ab40 <sf_gen_scode+0x304>
    ae2c:	cmp	r3, #163	; 0xa3
    ae30:	beq	ae3c <sf_gen_scode+0x600>
    ae34:	cmp	r3, #192	; 0xc0
    ae38:	bne	ae6c <sf_gen_scode+0x630>
    ae3c:	mov	r0, r9
    ae40:	bl	be18 <pcap_ether_hostton>
    ae44:	subs	r4, r0, #0
    ae48:	beq	aeac <sf_gen_scode+0x670>
    ae4c:	mov	r1, r5
    ae50:	bl	504c <gen_wlanhostop>
    ae54:	mov	r8, r0
    ae58:	mov	r0, r4
    ae5c:	bl	da4 <free@plt>
    ae60:	b	ab40 <sf_gen_scode+0x304>
    ae64:	cmp	r3, #105	; 0x69
    ae68:	beq	ae3c <sf_gen_scode+0x600>
    ae6c:	ldr	r0, [pc, #332]	; afc0 <sf_gen_scode+0x784>
    ae70:	add	r0, pc, r0
    ae74:	bl	2454 <sf_bpf_error>
    ae78:	bl	be18 <pcap_ether_hostton>
    ae7c:	subs	r4, r0, #0
    ae80:	beq	aebc <sf_gen_scode+0x680>
    ae84:	mov	r1, r5
    ae88:	bl	4bb8 <gen_ipfchostop>
    ae8c:	mov	r8, r0
    ae90:	mov	r0, r4
    ae94:	bl	da4 <free@plt>
    ae98:	b	ab40 <sf_gen_scode+0x304>
    ae9c:	ldr	r0, [pc, #288]	; afc4 <sf_gen_scode+0x788>
    aea0:	mov	r1, r9
    aea4:	add	r0, pc, r0
    aea8:	bl	2454 <sf_bpf_error>
    aeac:	ldr	r0, [pc, #276]	; afc8 <sf_gen_scode+0x78c>
    aeb0:	mov	r1, r9
    aeb4:	add	r0, pc, r0
    aeb8:	bl	2454 <sf_bpf_error>
    aebc:	ldr	r0, [pc, #264]	; afcc <sf_gen_scode+0x790>
    aec0:	mov	r1, r9
    aec4:	add	r0, pc, r0
    aec8:	bl	2454 <sf_bpf_error>
    aecc:	ldr	r0, [pc, #252]	; afd0 <sf_gen_scode+0x794>
    aed0:	mov	r1, r9
    aed4:	add	r0, pc, r0
    aed8:	bl	2454 <sf_bpf_error>
    aedc:	ldr	r0, [pc, #240]	; afd4 <sf_gen_scode+0x798>
    aee0:	add	r0, pc, r0
    aee4:	bl	2454 <sf_bpf_error>
    aee8:	ldr	r0, [pc, #232]	; afd8 <sf_gen_scode+0x79c>
    aeec:	mov	r1, r9
    aef0:	add	r0, pc, r0
    aef4:	bl	2454 <sf_bpf_error>
    aef8:	ldr	r0, [pc, #220]	; afdc <sf_gen_scode+0x7a0>
    aefc:	mov	r1, r9
    af00:	add	r0, pc, r0
    af04:	bl	2454 <sf_bpf_error>
    af08:	ldr	r0, [pc, #208]	; afe0 <sf_gen_scode+0x7a4>
    af0c:	mov	r1, r9
    af10:	add	r0, pc, r0
    af14:	bl	2454 <sf_bpf_error>
    af18:	ldr	r0, [pc, #196]	; afe4 <sf_gen_scode+0x7a8>
    af1c:	mov	r1, r9
    af20:	add	r0, pc, r0
    af24:	bl	2454 <sf_bpf_error>
    af28:	ldr	r2, [pc, #184]	; afe8 <sf_gen_scode+0x7ac>
    af2c:	add	r2, pc, r2
    af30:	b	abec <sf_gen_scode+0x3b0>
    af34:	ldr	r0, [pc, #176]	; afec <sf_gen_scode+0x7b0>
    af38:	mov	r1, r9
    af3c:	add	r0, pc, r0
    af40:	bl	2454 <sf_bpf_error>
    af44:	ldr	r4, [sp, #32]
    af48:	b	aa20 <sf_gen_scode+0x1e4>
    af4c:	ldr	r0, [pc, #156]	; aff0 <sf_gen_scode+0x7b4>
    af50:	mov	r1, r9
    af54:	add	r0, pc, r0
    af58:	bl	2454 <sf_bpf_error>
    af5c:	ldr	r0, [pc, #144]	; aff4 <sf_gen_scode+0x7b8>
    af60:	add	r0, pc, r0
    af64:	bl	2454 <sf_bpf_error>
    af68:	ldr	r0, [pc, #136]	; aff8 <sf_gen_scode+0x7bc>
    af6c:	mov	r1, r9
    af70:	add	r0, pc, r0
    af74:	bl	2454 <sf_bpf_error>
    af78:	ldr	r0, [pc, #124]	; affc <sf_gen_scode+0x7c0>
    af7c:	mov	r1, r9
    af80:	add	r0, pc, r0
    af84:	bl	2454 <sf_bpf_error>
    af88:	ldr	r4, [sp, #32]
    af8c:	b	aac0 <sf_gen_scode+0x284>
    af90:	.word	0x00008440
    af94:	.word	0x00025a84
    af98:	.word	0x00009428
    af9c:	.word	0x000257a4
    afa0:	.word	0x00007edc
    afa4:	.word	0x000092b0
    afa8:	.word	0x00009260
    afac:	.word	0x00009288
    afb0:	.word	0x00009234
    afb4:	.word	0x00009268
    afb8:	.word	0x00025684
    afbc:	.word	0x000255f8
    afc0:	.word	0x00008fc4
    afc4:	.word	0x00008f04
    afc8:	.word	0x00008f44
    afcc:	.word	0x00008f50
    afd0:	.word	0x00008eec
    afd4:	.word	0x00008c00
    afd8:	.word	0x00008fa0
    afdc:	.word	0x000090a8
    afe0:	.word	0x00008e80
    afe4:	.word	0x00008eb8
    afe8:	.word	0x00008e44
    afec:	.word	0x00008fb8
    aff0:	.word	0x00008f78
    aff4:	.word	0x00008b9c
    aff8:	.word	0x00008fec
    affc:	.word	0x00008fa4

0000b000 <sf_gen_atmtype_abbrev>:
    b000:	sub	r0, r0, #22
    b004:	push	{r4, r5, r6, lr}
    b008:	cmp	r0, #9
    b00c:	addls	pc, pc, r0, lsl #2
    b010:	b	b264 <sf_gen_atmtype_abbrev+0x264>
    b014:	b	b078 <sf_gen_atmtype_abbrev+0x78>
    b018:	b	b0d0 <sf_gen_atmtype_abbrev+0xd0>
    b01c:	b	b10c <sf_gen_atmtype_abbrev+0x10c>
    b020:	b	b148 <sf_gen_atmtype_abbrev+0x148>
    b024:	b	b184 <sf_gen_atmtype_abbrev+0x184>
    b028:	b	b1c0 <sf_gen_atmtype_abbrev+0x1c0>
    b02c:	b	b264 <sf_gen_atmtype_abbrev+0x264>
    b030:	b	b264 <sf_gen_atmtype_abbrev+0x264>
    b034:	b	b1fc <sf_gen_atmtype_abbrev+0x1fc>
    b038:	b	b03c <sf_gen_atmtype_abbrev+0x3c>
    b03c:	ldr	r5, [pc, #644]	; b2c8 <sf_gen_atmtype_abbrev+0x2c8>
    b040:	add	r5, pc, r5
    b044:	ldr	r3, [r5, #904]	; 0x388
    b048:	cmp	r3, #0
    b04c:	beq	b268 <sf_gen_atmtype_abbrev+0x268>
    b050:	mov	r3, #0
    b054:	mov	r2, #16
    b058:	mov	r1, #2
    b05c:	mov	r0, #53	; 0x35
    b060:	bl	6474 <sf_gen_atmfield_code>
    b064:	mov	r3, #0
    b068:	str	r3, [r5, #908]	; 0x38c
    b06c:	mov	r4, r0
    b070:	mov	r0, r4
    b074:	pop	{r4, r5, r6, pc}
    b078:	ldr	r3, [pc, #588]	; b2cc <sf_gen_atmtype_abbrev+0x2cc>
    b07c:	add	r3, pc, r3
    b080:	ldr	r3, [r3, #904]	; 0x388
    b084:	cmp	r3, #0
    b088:	beq	b2bc <sf_gen_atmtype_abbrev+0x2bc>
    b08c:	mov	r3, #0
    b090:	mov	r1, r3
    b094:	mov	r2, #16
    b098:	mov	r0, #51	; 0x33
    b09c:	bl	6474 <sf_gen_atmfield_code>
    b0a0:	mov	r3, #0
    b0a4:	mov	r2, #16
    b0a8:	mov	r1, #1
    b0ac:	mov	r5, r0
    b0b0:	mov	r0, #52	; 0x34
    b0b4:	bl	6474 <sf_gen_atmfield_code>
    b0b8:	mov	r4, r0
    b0bc:	mov	r1, r0
    b0c0:	mov	r0, r5
    b0c4:	bl	3ca0 <sf_gen_and>
    b0c8:	mov	r0, r4
    b0cc:	pop	{r4, r5, r6, pc}
    b0d0:	ldr	r3, [pc, #504]	; b2d0 <sf_gen_atmtype_abbrev+0x2d0>
    b0d4:	add	r3, pc, r3
    b0d8:	ldr	r3, [r3, #904]	; 0x388
    b0dc:	cmp	r3, #0
    b0e0:	beq	b2b0 <sf_gen_atmtype_abbrev+0x2b0>
    b0e4:	mov	r3, #0
    b0e8:	mov	r1, r3
    b0ec:	mov	r2, #16
    b0f0:	mov	r0, #51	; 0x33
    b0f4:	bl	6474 <sf_gen_atmfield_code>
    b0f8:	mov	r3, #0
    b0fc:	mov	r2, #16
    b100:	mov	r1, #2
    b104:	mov	r5, r0
    b108:	b	b0b0 <sf_gen_atmtype_abbrev+0xb0>
    b10c:	ldr	r3, [pc, #448]	; b2d4 <sf_gen_atmtype_abbrev+0x2d4>
    b110:	add	r3, pc, r3
    b114:	ldr	r3, [r3, #904]	; 0x388
    b118:	cmp	r3, #0
    b11c:	beq	b2a4 <sf_gen_atmtype_abbrev+0x2a4>
    b120:	mov	r3, #0
    b124:	mov	r1, r3
    b128:	mov	r2, #16
    b12c:	mov	r0, #51	; 0x33
    b130:	bl	6474 <sf_gen_atmfield_code>
    b134:	mov	r3, #0
    b138:	mov	r2, #16
    b13c:	mov	r1, #3
    b140:	mov	r5, r0
    b144:	b	b0b0 <sf_gen_atmtype_abbrev+0xb0>
    b148:	ldr	r3, [pc, #392]	; b2d8 <sf_gen_atmtype_abbrev+0x2d8>
    b14c:	add	r3, pc, r3
    b150:	ldr	r3, [r3, #904]	; 0x388
    b154:	cmp	r3, #0
    b158:	beq	b298 <sf_gen_atmtype_abbrev+0x298>
    b15c:	mov	r3, #0
    b160:	mov	r1, r3
    b164:	mov	r2, #16
    b168:	mov	r0, #51	; 0x33
    b16c:	bl	6474 <sf_gen_atmfield_code>
    b170:	mov	r3, #0
    b174:	mov	r2, #16
    b178:	mov	r1, #4
    b17c:	mov	r5, r0
    b180:	b	b0b0 <sf_gen_atmtype_abbrev+0xb0>
    b184:	ldr	r3, [pc, #336]	; b2dc <sf_gen_atmtype_abbrev+0x2dc>
    b188:	add	r3, pc, r3
    b18c:	ldr	r3, [r3, #904]	; 0x388
    b190:	cmp	r3, #0
    b194:	beq	b28c <sf_gen_atmtype_abbrev+0x28c>
    b198:	mov	r3, #0
    b19c:	mov	r1, r3
    b1a0:	mov	r2, #16
    b1a4:	mov	r0, #51	; 0x33
    b1a8:	bl	6474 <sf_gen_atmfield_code>
    b1ac:	mov	r3, #0
    b1b0:	mov	r2, #16
    b1b4:	mov	r1, #5
    b1b8:	mov	r5, r0
    b1bc:	b	b0b0 <sf_gen_atmtype_abbrev+0xb0>
    b1c0:	ldr	r3, [pc, #280]	; b2e0 <sf_gen_atmtype_abbrev+0x2e0>
    b1c4:	add	r3, pc, r3
    b1c8:	ldr	r3, [r3, #904]	; 0x388
    b1cc:	cmp	r3, #0
    b1d0:	beq	b280 <sf_gen_atmtype_abbrev+0x280>
    b1d4:	mov	r3, #0
    b1d8:	mov	r1, r3
    b1dc:	mov	r2, #16
    b1e0:	mov	r0, #51	; 0x33
    b1e4:	bl	6474 <sf_gen_atmfield_code>
    b1e8:	mov	r2, #16
    b1ec:	mov	r1, r2
    b1f0:	mov	r3, #0
    b1f4:	mov	r5, r0
    b1f8:	b	b0b0 <sf_gen_atmtype_abbrev+0xb0>
    b1fc:	ldr	r5, [pc, #224]	; b2e4 <sf_gen_atmtype_abbrev+0x2e4>
    b200:	add	r5, pc, r5
    b204:	ldr	r3, [r5, #904]	; 0x388
    b208:	cmp	r3, #0
    b20c:	beq	b274 <sf_gen_atmtype_abbrev+0x274>
    b210:	mov	r3, #0
    b214:	mov	r2, #16
    b218:	mov	r1, #1
    b21c:	mov	r0, #53	; 0x35
    b220:	bl	6474 <sf_gen_atmfield_code>
    b224:	ldr	r3, [r5, #924]	; 0x39c
    b228:	mov	r1, #0
    b22c:	add	lr, r3, #2
    b230:	add	ip, r3, #14
    b234:	mov	r2, #3
    b238:	add	r3, r3, #16
    b23c:	str	lr, [r5, #900]	; 0x384
    b240:	str	ip, [r5, #952]	; 0x3b8
    b244:	str	r3, [r5, #876]	; 0x36c
    b248:	str	r1, [r5, #872]	; 0x368
    b24c:	str	r2, [r5, #880]	; 0x370
    b250:	mov	r4, r0
    b254:	mov	r0, #1
    b258:	str	r0, [r5, #908]	; 0x38c
    b25c:	mov	r0, r4
    b260:	pop	{r4, r5, r6, pc}
    b264:	bl	f18 <abort@plt>
    b268:	ldr	r0, [pc, #120]	; b2e8 <sf_gen_atmtype_abbrev+0x2e8>
    b26c:	add	r0, pc, r0
    b270:	bl	2454 <sf_bpf_error>
    b274:	ldr	r0, [pc, #112]	; b2ec <sf_gen_atmtype_abbrev+0x2ec>
    b278:	add	r0, pc, r0
    b27c:	bl	2454 <sf_bpf_error>
    b280:	ldr	r0, [pc, #104]	; b2f0 <sf_gen_atmtype_abbrev+0x2f0>
    b284:	add	r0, pc, r0
    b288:	bl	2454 <sf_bpf_error>
    b28c:	ldr	r0, [pc, #96]	; b2f4 <sf_gen_atmtype_abbrev+0x2f4>
    b290:	add	r0, pc, r0
    b294:	bl	2454 <sf_bpf_error>
    b298:	ldr	r0, [pc, #88]	; b2f8 <sf_gen_atmtype_abbrev+0x2f8>
    b29c:	add	r0, pc, r0
    b2a0:	bl	2454 <sf_bpf_error>
    b2a4:	ldr	r0, [pc, #80]	; b2fc <sf_gen_atmtype_abbrev+0x2fc>
    b2a8:	add	r0, pc, r0
    b2ac:	bl	2454 <sf_bpf_error>
    b2b0:	ldr	r0, [pc, #72]	; b300 <sf_gen_atmtype_abbrev+0x300>
    b2b4:	add	r0, pc, r0
    b2b8:	bl	2454 <sf_bpf_error>
    b2bc:	ldr	r0, [pc, #64]	; b304 <sf_gen_atmtype_abbrev+0x304>
    b2c0:	add	r0, pc, r0
    b2c4:	bl	2454 <sf_bpf_error>
    b2c8:	.word	0x00025328
    b2cc:	.word	0x000252ec
    b2d0:	.word	0x00025294
    b2d4:	.word	0x00025258
    b2d8:	.word	0x0002521c
    b2dc:	.word	0x000251e0
    b2e0:	.word	0x000251a4
    b2e4:	.word	0x00025168
    b2e8:	.word	0x00008e48
    b2ec:	.word	0x00008e18
    b2f0:	.word	0x00008de8
    b2f4:	.word	0x00008dbc
    b2f8:	.word	0x00008d8c
    b2fc:	.word	0x00008d5c
    b300:	.word	0x00008d30
    b304:	.word	0x00008d00

0000b308 <sf_gen_mtp2type_abbrev>:
    b308:	cmp	r0, #23
    b30c:	push	{r4, r5, r6, r7, lr}
    b310:	sub	sp, sp, #20
    b314:	beq	b3d0 <sf_gen_mtp2type_abbrev+0xc8>
    b318:	cmp	r0, #24
    b31c:	beq	b37c <sf_gen_mtp2type_abbrev+0x74>
    b320:	cmp	r0, #22
    b324:	beq	b32c <sf_gen_mtp2type_abbrev+0x24>
    b328:	bl	f18 <abort@plt>
    b32c:	ldr	r2, [pc, #332]	; b480 <sf_gen_mtp2type_abbrev+0x178>
    b330:	add	r2, pc, r2
    b334:	ldr	r3, [r2, #856]	; 0x358
    b338:	sub	r0, r3, #139	; 0x8b
    b33c:	cmp	r3, #197	; 0xc5
    b340:	cmpne	r0, #1
    b344:	movhi	r0, #1
    b348:	movls	r0, #0
    b34c:	bhi	b45c <sf_gen_mtp2type_abbrev+0x154>
    b350:	ldr	r1, [r2, #932]	; 0x3a4
    b354:	mov	r2, #16
    b358:	str	r0, [sp, #8]
    b35c:	str	r0, [sp, #4]
    b360:	str	r2, [sp]
    b364:	mov	r3, #63	; 0x3f
    b368:	bl	2c88 <gen_ncmp>
    b36c:	mov	r5, r0
    b370:	mov	r0, r5
    b374:	add	sp, sp, #20
    b378:	pop	{r4, r5, r6, r7, pc}
    b37c:	ldr	r2, [pc, #256]	; b484 <sf_gen_mtp2type_abbrev+0x17c>
    b380:	add	r2, pc, r2
    b384:	ldr	r3, [r2, #856]	; 0x358
    b388:	sub	r0, r3, #139	; 0x8b
    b38c:	cmp	r3, #197	; 0xc5
    b390:	cmpne	r0, #1
    b394:	movhi	r0, #1
    b398:	movls	r0, #0
    b39c:	bhi	b468 <sf_gen_mtp2type_abbrev+0x160>
    b3a0:	ldr	r1, [r2, #932]	; 0x3a4
    b3a4:	mov	r2, #2
    b3a8:	mov	r3, #32
    b3ac:	stmib	sp, {r0, r2}
    b3b0:	str	r3, [sp]
    b3b4:	mov	r2, #16
    b3b8:	mov	r3, #63	; 0x3f
    b3bc:	bl	2c88 <gen_ncmp>
    b3c0:	mov	r5, r0
    b3c4:	mov	r0, r5
    b3c8:	add	sp, sp, #20
    b3cc:	pop	{r4, r5, r6, r7, pc}
    b3d0:	ldr	r2, [pc, #176]	; b488 <sf_gen_mtp2type_abbrev+0x180>
    b3d4:	add	r2, pc, r2
    b3d8:	ldr	r3, [r2, #856]	; 0x358
    b3dc:	sub	r4, r3, #139	; 0x8b
    b3e0:	cmp	r3, #197	; 0xc5
    b3e4:	cmpne	r4, #1
    b3e8:	movhi	r4, #1
    b3ec:	movls	r4, #0
    b3f0:	bhi	b474 <sf_gen_mtp2type_abbrev+0x16c>
    b3f4:	ldr	r6, [r2, #932]	; 0x3a4
    b3f8:	mov	r7, #32
    b3fc:	mov	r2, #2
    b400:	mov	r3, #1
    b404:	mov	r1, r6
    b408:	str	r2, [sp, #8]
    b40c:	str	r3, [sp, #4]
    b410:	str	r7, [sp]
    b414:	mov	r3, #63	; 0x3f
    b418:	mov	r2, #16
    b41c:	mov	r0, r4
    b420:	bl	2c88 <gen_ncmp>
    b424:	mov	r1, r6
    b428:	mov	r3, #63	; 0x3f
    b42c:	mov	r2, #16
    b430:	str	r7, [sp]
    b434:	str	r4, [sp, #8]
    b438:	str	r4, [sp, #4]
    b43c:	mov	r5, r0
    b440:	mov	r0, r4
    b444:	bl	2c88 <gen_ncmp>
    b448:	mov	r1, r5
    b44c:	bl	3ca0 <sf_gen_and>
    b450:	mov	r0, r5
    b454:	add	sp, sp, #20
    b458:	pop	{r4, r5, r6, r7, pc}
    b45c:	ldr	r0, [pc, #40]	; b48c <sf_gen_mtp2type_abbrev+0x184>
    b460:	add	r0, pc, r0
    b464:	bl	2454 <sf_bpf_error>
    b468:	ldr	r0, [pc, #32]	; b490 <sf_gen_mtp2type_abbrev+0x188>
    b46c:	add	r0, pc, r0
    b470:	bl	2454 <sf_bpf_error>
    b474:	ldr	r0, [pc, #24]	; b494 <sf_gen_mtp2type_abbrev+0x18c>
    b478:	add	r0, pc, r0
    b47c:	bl	2454 <sf_bpf_error>
    b480:	.word	0x00025038
    b484:	.word	0x00024fe8
    b488:	.word	0x00024f94
    b48c:	.word	0x00008c74
    b490:	.word	0x00008ca8
    b494:	.word	0x00008c7c

0000b498 <sf_gen_mtp3field_code>:
    b498:	sub	r0, r0, #1
    b49c:	push	{lr}		; (str lr, [sp, #-4]!)
    b4a0:	mov	ip, r2
    b4a4:	sub	sp, sp, #20
    b4a8:	cmp	r0, #3
    b4ac:	addls	pc, pc, r0, lsl #2
    b4b0:	b	b5fc <sf_gen_mtp3field_code+0x164>
    b4b4:	b	b5b8 <sf_gen_mtp3field_code+0x120>
    b4b8:	b	b55c <sf_gen_mtp3field_code+0xc4>
    b4bc:	b	b50c <sf_gen_mtp3field_code+0x74>
    b4c0:	b	b4c4 <sf_gen_mtp3field_code+0x2c>
    b4c4:	ldr	r2, [pc, #404]	; b660 <sf_gen_mtp3field_code+0x1c8>
    b4c8:	add	r2, pc, r2
    b4cc:	ldr	r0, [r2, #948]	; 0x3b4
    b4d0:	cmn	r0, #1
    b4d4:	beq	b624 <sf_gen_mtp3field_code+0x18c>
    b4d8:	cmp	r1, #15
    b4dc:	bhi	b648 <sf_gen_mtp3field_code+0x1b0>
    b4e0:	lsl	r2, r1, #4
    b4e4:	str	r2, [sp, #8]
    b4e8:	str	r3, [sp, #4]
    b4ec:	mov	r1, r0
    b4f0:	str	ip, [sp]
    b4f4:	mov	r3, #240	; 0xf0
    b4f8:	mov	r2, #16
    b4fc:	mov	r0, #0
    b500:	bl	2c88 <gen_ncmp>
    b504:	add	sp, sp, #20
    b508:	pop	{pc}		; (ldr pc, [sp], #4)
    b50c:	ldr	r2, [pc, #336]	; b664 <sf_gen_mtp3field_code+0x1cc>
    b510:	add	r2, pc, r2
    b514:	ldr	lr, [r2, #944]	; 0x3b0
    b518:	cmn	lr, #1
    b51c:	beq	b600 <sf_gen_mtp3field_code+0x168>
    b520:	cmp	r1, #16384	; 0x4000
    b524:	bcs	b630 <sf_gen_mtp3field_code+0x198>
    b528:	lsl	r0, r1, #8
    b52c:	and	r0, r0, #4128768	; 0x3f0000
    b530:	add	r0, r0, r1, lsl #24
    b534:	mov	r2, #0
    b538:	str	r3, [sp, #4]
    b53c:	str	r0, [sp, #8]
    b540:	str	ip, [sp]
    b544:	mov	r1, lr
    b548:	mov	r0, r2
    b54c:	ldr	r3, [pc, #276]	; b668 <sf_gen_mtp3field_code+0x1d0>
    b550:	bl	2c88 <gen_ncmp>
    b554:	add	sp, sp, #20
    b558:	pop	{pc}		; (ldr pc, [sp], #4)
    b55c:	ldr	r2, [pc, #264]	; b66c <sf_gen_mtp3field_code+0x1d4>
    b560:	add	r2, pc, r2
    b564:	ldr	lr, [r2, #940]	; 0x3ac
    b568:	cmn	lr, #1
    b56c:	beq	b60c <sf_gen_mtp3field_code+0x174>
    b570:	cmp	r1, #16384	; 0x4000
    b574:	bcs	b63c <sf_gen_mtp3field_code+0x1a4>
    b578:	lsl	r2, r1, #6
    b57c:	lsl	r0, r1, #22
    b580:	and	r2, r2, #65280	; 0xff00
    b584:	orr	r2, r2, r1, lsr #10
    b588:	and	r0, r0, #12582912	; 0xc00000
    b58c:	add	r0, r0, r2
    b590:	mov	r2, #0
    b594:	str	r3, [sp, #4]
    b598:	str	r0, [sp, #8]
    b59c:	str	ip, [sp]
    b5a0:	mov	r1, lr
    b5a4:	mov	r0, r2
    b5a8:	ldr	r3, [pc, #192]	; b670 <sf_gen_mtp3field_code+0x1d8>
    b5ac:	bl	2c88 <gen_ncmp>
    b5b0:	add	sp, sp, #20
    b5b4:	pop	{pc}		; (ldr pc, [sp], #4)
    b5b8:	ldr	r2, [pc, #180]	; b674 <sf_gen_mtp3field_code+0x1dc>
    b5bc:	add	r2, pc, r2
    b5c0:	ldr	r2, [r2, #936]	; 0x3a8
    b5c4:	cmn	r2, #1
    b5c8:	beq	b618 <sf_gen_mtp3field_code+0x180>
    b5cc:	cmp	r1, #255	; 0xff
    b5d0:	bhi	b654 <sf_gen_mtp3field_code+0x1bc>
    b5d4:	str	r1, [sp, #8]
    b5d8:	str	r3, [sp, #4]
    b5dc:	mov	r1, r2
    b5e0:	str	ip, [sp]
    b5e4:	mvn	r3, #0
    b5e8:	mov	r2, #16
    b5ec:	mov	r0, #0
    b5f0:	bl	2c88 <gen_ncmp>
    b5f4:	add	sp, sp, #20
    b5f8:	pop	{pc}		; (ldr pc, [sp], #4)
    b5fc:	bl	f18 <abort@plt>
    b600:	ldr	r0, [pc, #112]	; b678 <sf_gen_mtp3field_code+0x1e0>
    b604:	add	r0, pc, r0
    b608:	bl	2454 <sf_bpf_error>
    b60c:	ldr	r0, [pc, #104]	; b67c <sf_gen_mtp3field_code+0x1e4>
    b610:	add	r0, pc, r0
    b614:	bl	2454 <sf_bpf_error>
    b618:	ldr	r0, [pc, #96]	; b680 <sf_gen_mtp3field_code+0x1e8>
    b61c:	add	r0, pc, r0
    b620:	bl	2454 <sf_bpf_error>
    b624:	ldr	r0, [pc, #88]	; b684 <sf_gen_mtp3field_code+0x1ec>
    b628:	add	r0, pc, r0
    b62c:	bl	2454 <sf_bpf_error>
    b630:	ldr	r0, [pc, #80]	; b688 <sf_gen_mtp3field_code+0x1f0>
    b634:	add	r0, pc, r0
    b638:	bl	2454 <sf_bpf_error>
    b63c:	ldr	r0, [pc, #72]	; b68c <sf_gen_mtp3field_code+0x1f4>
    b640:	add	r0, pc, r0
    b644:	bl	2454 <sf_bpf_error>
    b648:	ldr	r0, [pc, #64]	; b690 <sf_gen_mtp3field_code+0x1f8>
    b64c:	add	r0, pc, r0
    b650:	bl	2454 <sf_bpf_error>
    b654:	ldr	r0, [pc, #56]	; b694 <sf_gen_mtp3field_code+0x1fc>
    b658:	add	r0, pc, r0
    b65c:	bl	2454 <sf_bpf_error>
    b660:	.word	0x00024ea0
    b664:	.word	0x00024e58
    b668:	.word	0xff3f0000
    b66c:	.word	0x00024e08
    b670:	.word	0x00c0ff0f
    b674:	.word	0x00024dac
    b678:	.word	0x00008bb8
    b67c:	.word	0x00008b68
    b680:	.word	0x00008b18
    b684:	.word	0x00008bd8
    b688:	.word	0x00008ba4
    b68c:	.word	0x00008b54
    b690:	.word	0x00008bd0
    b694:	.word	0x00008af8

0000b698 <sf_gen_atmmulti_abbrev>:
    b698:	cmp	r0, #29
    b69c:	push	{r4, r5, r6, lr}
    b6a0:	beq	b8f0 <sf_gen_atmmulti_abbrev+0x258>
    b6a4:	ble	b84c <sf_gen_atmmulti_abbrev+0x1b4>
    b6a8:	cmp	r0, #70	; 0x46
    b6ac:	beq	b774 <sf_gen_atmmulti_abbrev+0xdc>
    b6b0:	cmp	r0, #71	; 0x47
    b6b4:	bne	b8c8 <sf_gen_atmmulti_abbrev+0x230>
    b6b8:	ldr	r3, [pc, #592]	; b910 <sf_gen_atmmulti_abbrev+0x278>
    b6bc:	add	r3, pc, r3
    b6c0:	ldr	r3, [r3, #904]	; 0x388
    b6c4:	cmp	r3, #0
    b6c8:	beq	b8cc <sf_gen_atmmulti_abbrev+0x234>
    b6cc:	mov	r3, #0
    b6d0:	mov	r2, #16
    b6d4:	mov	r1, #5
    b6d8:	mov	r0, #54	; 0x36
    b6dc:	bl	6474 <sf_gen_atmfield_code>
    b6e0:	mov	r3, #0
    b6e4:	mov	r2, #16
    b6e8:	mov	r1, #2
    b6ec:	mov	r5, r0
    b6f0:	mov	r0, #54	; 0x36
    b6f4:	bl	6474 <sf_gen_atmfield_code>
    b6f8:	mov	r4, r0
    b6fc:	mov	r1, r0
    b700:	mov	r0, r5
    b704:	bl	49c0 <sf_gen_or>
    b708:	mov	r3, #0
    b70c:	mov	r2, #16
    b710:	mov	r1, #7
    b714:	mov	r0, #54	; 0x36
    b718:	bl	6474 <sf_gen_atmfield_code>
    b71c:	mov	r1, r4
    b720:	bl	49c0 <sf_gen_or>
    b724:	mov	r3, #0
    b728:	mov	r2, #16
    b72c:	mov	r1, #77	; 0x4d
    b730:	mov	r0, #54	; 0x36
    b734:	bl	6474 <sf_gen_atmfield_code>
    b738:	mov	r1, r4
    b73c:	bl	49c0 <sf_gen_or>
    b740:	mov	r3, #0
    b744:	mov	r2, #16
    b748:	mov	r1, #90	; 0x5a
    b74c:	mov	r0, #54	; 0x36
    b750:	bl	6474 <sf_gen_atmfield_code>
    b754:	mov	r1, r4
    b758:	bl	49c0 <sf_gen_or>
    b75c:	mov	r0, #22
    b760:	bl	b000 <sf_gen_atmtype_abbrev>
    b764:	mov	r1, r4
    b768:	bl	3ca0 <sf_gen_and>
    b76c:	mov	r0, r4
    b770:	pop	{r4, r5, r6, pc}
    b774:	ldr	r3, [pc, #408]	; b914 <sf_gen_atmmulti_abbrev+0x27c>
    b778:	add	r3, pc, r3
    b77c:	ldr	r3, [r3, #904]	; 0x388
    b780:	cmp	r3, #0
    b784:	beq	b8d8 <sf_gen_atmmulti_abbrev+0x240>
    b788:	mov	r3, #0
    b78c:	mov	r2, #16
    b790:	mov	r1, #5
    b794:	mov	r0, #54	; 0x36
    b798:	bl	6474 <sf_gen_atmfield_code>
    b79c:	mov	r3, #0
    b7a0:	mov	r2, #16
    b7a4:	mov	r1, #2
    b7a8:	mov	r5, r0
    b7ac:	mov	r0, #54	; 0x36
    b7b0:	bl	6474 <sf_gen_atmfield_code>
    b7b4:	mov	r4, r0
    b7b8:	mov	r1, r0
    b7bc:	mov	r0, r5
    b7c0:	bl	49c0 <sf_gen_or>
    b7c4:	mov	r3, #0
    b7c8:	mov	r2, #16
    b7cc:	mov	r1, #7
    b7d0:	mov	r0, #54	; 0x36
    b7d4:	bl	6474 <sf_gen_atmfield_code>
    b7d8:	mov	r1, r4
    b7dc:	bl	49c0 <sf_gen_or>
    b7e0:	mov	r3, #0
    b7e4:	mov	r2, #16
    b7e8:	mov	r1, #15
    b7ec:	mov	r0, #54	; 0x36
    b7f0:	bl	6474 <sf_gen_atmfield_code>
    b7f4:	mov	r1, r4
    b7f8:	bl	49c0 <sf_gen_or>
    b7fc:	mov	r3, #0
    b800:	mov	r2, #16
    b804:	mov	r1, #77	; 0x4d
    b808:	mov	r0, #54	; 0x36
    b80c:	bl	6474 <sf_gen_atmfield_code>
    b810:	mov	r1, r4
    b814:	bl	49c0 <sf_gen_or>
    b818:	mov	r3, #0
    b81c:	mov	r2, #16
    b820:	mov	r1, #90	; 0x5a
    b824:	mov	r0, #54	; 0x36
    b828:	bl	6474 <sf_gen_atmfield_code>
    b82c:	mov	r1, r4
    b830:	bl	49c0 <sf_gen_or>
    b834:	mov	r0, #26
    b838:	bl	b000 <sf_gen_atmtype_abbrev>
    b83c:	mov	r1, r4
    b840:	bl	3ca0 <sf_gen_and>
    b844:	mov	r0, r4
    b848:	pop	{r4, r5, r6, pc}
    b84c:	cmp	r0, #28
    b850:	bne	b8c8 <sf_gen_atmmulti_abbrev+0x230>
    b854:	ldr	r3, [pc, #188]	; b918 <sf_gen_atmmulti_abbrev+0x280>
    b858:	add	r3, pc, r3
    b85c:	ldr	r3, [r3, #904]	; 0x388
    b860:	cmp	r3, #0
    b864:	beq	b8e4 <sf_gen_atmmulti_abbrev+0x24c>
    b868:	mov	r3, #0
    b86c:	mov	r2, #16
    b870:	mov	r1, #3
    b874:	mov	r0, #52	; 0x34
    b878:	bl	6474 <sf_gen_atmfield_code>
    b87c:	mov	r3, #0
    b880:	mov	r2, #16
    b884:	mov	r1, #4
    b888:	mov	r5, r0
    b88c:	mov	r0, #52	; 0x34
    b890:	bl	6474 <sf_gen_atmfield_code>
    b894:	mov	r4, r0
    b898:	mov	r1, r0
    b89c:	mov	r0, r5
    b8a0:	bl	49c0 <sf_gen_or>
    b8a4:	mov	r3, #0
    b8a8:	mov	r1, r3
    b8ac:	mov	r2, #16
    b8b0:	mov	r0, #51	; 0x33
    b8b4:	bl	6474 <sf_gen_atmfield_code>
    b8b8:	mov	r1, r4
    b8bc:	bl	3ca0 <sf_gen_and>
    b8c0:	mov	r0, r4
    b8c4:	pop	{r4, r5, r6, pc}
    b8c8:	bl	f18 <abort@plt>
    b8cc:	ldr	r0, [pc, #72]	; b91c <sf_gen_atmmulti_abbrev+0x284>
    b8d0:	add	r0, pc, r0
    b8d4:	bl	2454 <sf_bpf_error>
    b8d8:	ldr	r0, [pc, #64]	; b920 <sf_gen_atmmulti_abbrev+0x288>
    b8dc:	add	r0, pc, r0
    b8e0:	bl	2454 <sf_bpf_error>
    b8e4:	ldr	r0, [pc, #56]	; b924 <sf_gen_atmmulti_abbrev+0x28c>
    b8e8:	add	r0, pc, r0
    b8ec:	bl	2454 <sf_bpf_error>
    b8f0:	ldr	r3, [pc, #48]	; b928 <sf_gen_atmmulti_abbrev+0x290>
    b8f4:	add	r3, pc, r3
    b8f8:	ldr	r3, [r3, #904]	; 0x388
    b8fc:	cmp	r3, #0
    b900:	bne	b868 <sf_gen_atmmulti_abbrev+0x1d0>
    b904:	ldr	r0, [pc, #32]	; b92c <sf_gen_atmmulti_abbrev+0x294>
    b908:	add	r0, pc, r0
    b90c:	bl	2454 <sf_bpf_error>
    b910:	.word	0x00024cac
    b914:	.word	0x00024bf0
    b918:	.word	0x00024b10
    b91c:	.word	0x000089e0
    b920:	.word	0x000089ac
    b924:	.word	0x0000895c
    b928:	.word	0x00024a74
    b92c:	.word	0x0000895c

0000b930 <pcap_nametoaddr>:
    b930:	push	{r4, lr}
    b934:	bl	f00 <gethostbyname@plt>
    b938:	cmp	r0, #0
    b93c:	popeq	{r4, pc}
    b940:	ldr	r1, [r0, #16]
    b944:	ldr	r3, [r1]
    b948:	cmp	r3, #0
    b94c:	beq	b970 <pcap_nametoaddr+0x40>
    b950:	ldr	r2, [r3]
    b954:	rev	r2, r2
    b958:	str	r2, [r3]
    b95c:	ldr	r3, [r1, #4]!
    b960:	cmp	r3, #0
    b964:	bne	b950 <pcap_nametoaddr+0x20>
    b968:	ldr	r0, [r0, #16]
    b96c:	pop	{r4, pc}
    b970:	mov	r0, r1
    b974:	pop	{r4, pc}

0000b978 <pcap_nametoaddrinfo>:
    b978:	push	{r4, r5, lr}
    b97c:	sub	sp, sp, #44	; 0x2c
    b980:	add	r4, sp, #8
    b984:	mov	r5, r0
    b988:	mov	r2, #32
    b98c:	mov	r0, r4
    b990:	mov	r1, #0
    b994:	bl	e88 <memset@plt>
    b998:	mov	lr, #1
    b99c:	mov	ip, #6
    b9a0:	mov	r2, r4
    b9a4:	mov	r0, r5
    b9a8:	add	r3, sp, #4
    b9ac:	mov	r1, #0
    b9b0:	str	lr, [sp, #16]
    b9b4:	str	ip, [sp, #20]
    b9b8:	bl	ee8 <getaddrinfo@plt>
    b9bc:	cmp	r0, #0
    b9c0:	movne	r0, #0
    b9c4:	ldreq	r0, [sp, #4]
    b9c8:	add	sp, sp, #44	; 0x2c
    b9cc:	pop	{r4, r5, pc}

0000b9d0 <pcap_nametonetaddr>:
    b9d0:	push	{r4, lr}
    b9d4:	bl	db0 <getnetbyname@plt>
    b9d8:	cmp	r0, #0
    b9dc:	ldrne	r0, [r0, #12]
    b9e0:	pop	{r4, pc}

0000b9e4 <pcap_nametoport>:
    b9e4:	push	{r4, r5, r6, r7, r8, lr}
    b9e8:	mov	r6, r1
    b9ec:	ldr	r1, [pc, #176]	; baa4 <pcap_nametoport+0xc0>
    b9f0:	mov	r5, r2
    b9f4:	add	r1, pc, r1
    b9f8:	mov	r7, r0
    b9fc:	bl	e7c <getservbyname@plt>
    ba00:	cmp	r0, #0
    ba04:	beq	ba54 <pcap_nametoport+0x70>
    ba08:	ldr	r1, [pc, #152]	; baa8 <pcap_nametoport+0xc4>
    ba0c:	ldr	r4, [r0, #8]
    ba10:	add	r1, pc, r1
    ba14:	mov	r0, r7
    ba18:	bl	e7c <getservbyname@plt>
    ba1c:	rev16	r4, r4
    ba20:	uxth	r4, r4
    ba24:	cmp	r0, #0
    ba28:	beq	ba90 <pcap_nametoport+0xac>
    ba2c:	ldr	r3, [r0, #8]
    ba30:	str	r4, [r6]
    ba34:	rev16	r3, r3
    ba38:	mov	r0, #1
    ba3c:	uxth	r3, r3
    ba40:	cmp	r4, r3
    ba44:	movne	r3, #6
    ba48:	mvneq	r3, #0
    ba4c:	str	r3, [r5]
    ba50:	pop	{r4, r5, r6, r7, r8, pc}
    ba54:	ldr	r1, [pc, #80]	; baac <pcap_nametoport+0xc8>
    ba58:	mov	r0, r7
    ba5c:	add	r1, pc, r1
    ba60:	bl	e7c <getservbyname@plt>
    ba64:	cmp	r0, #0
    ba68:	beq	ba8c <pcap_nametoport+0xa8>
    ba6c:	ldr	r3, [r0, #8]
    ba70:	mov	r2, #17
    ba74:	rev16	r3, r3
    ba78:	mov	r0, #1
    ba7c:	uxth	r3, r3
    ba80:	str	r3, [r6]
    ba84:	str	r2, [r5]
    ba88:	pop	{r4, r5, r6, r7, r8, pc}
    ba8c:	pop	{r4, r5, r6, r7, r8, pc}
    ba90:	mov	r3, #6
    ba94:	str	r4, [r6]
    ba98:	mov	r0, #1
    ba9c:	str	r3, [r5]
    baa0:	pop	{r4, r5, r6, r7, r8, pc}
    baa4:	.word	0x000088e4
    baa8:	.word	0x000088cc
    baac:	.word	0x00008880

0000bab0 <pcap_nametoportrange>:
    bab0:	push	{r4, r5, r6, r7, r8, lr}
    bab4:	mov	r5, r1
    bab8:	ldr	r1, [pc, #244]	; bbb4 <pcap_nametoportrange+0x104>
    babc:	sub	sp, sp, #8
    bac0:	mov	r6, r2
    bac4:	mov	r4, r3
    bac8:	mov	r2, sp
    bacc:	add	r3, sp, #4
    bad0:	add	r1, pc, r1
    bad4:	mov	r7, r0
    bad8:	bl	eb8 <sscanf@plt>
    badc:	cmp	r0, #2
    bae0:	beq	bb64 <pcap_nametoportrange+0xb4>
    bae4:	mov	r0, r7
    bae8:	bl	dd4 <strdup@plt>
    baec:	subs	r7, r0, #0
    baf0:	beq	bb9c <pcap_nametoportrange+0xec>
    baf4:	mov	r1, #45	; 0x2d
    baf8:	bl	e58 <strchr@plt>
    bafc:	subs	r8, r0, #0
    bb00:	beq	bba4 <pcap_nametoportrange+0xf4>
    bb04:	mov	r3, #0
    bb08:	mov	r1, r5
    bb0c:	strb	r3, [r8]
    bb10:	mov	r2, r4
    bb14:	mov	r0, r7
    bb18:	bl	b9e4 <pcap_nametoport>
    bb1c:	subs	r5, r0, #0
    bb20:	beq	bb88 <pcap_nametoportrange+0xd8>
    bb24:	mov	r1, r6
    bb28:	add	r0, r8, #1
    bb2c:	mov	r2, r4
    bb30:	ldr	r6, [r4]
    bb34:	bl	b9e4 <pcap_nametoport>
    bb38:	subs	r5, r0, #0
    bb3c:	beq	bb88 <pcap_nametoportrange+0xd8>
    bb40:	ldr	r3, [r4]
    bb44:	cmp	r6, r3
    bb48:	moveq	r5, #1
    bb4c:	movne	r5, #1
    bb50:	mvnne	r3, #0
    bb54:	strne	r3, [r4]
    bb58:	mov	r0, r5
    bb5c:	add	sp, sp, #8
    bb60:	pop	{r4, r5, r6, r7, r8, pc}
    bb64:	ldm	sp, {r1, r2}
    bb68:	mvn	r3, #0
    bb6c:	str	r1, [r5]
    bb70:	mov	r5, #1
    bb74:	str	r2, [r6]
    bb78:	mov	r0, r5
    bb7c:	str	r3, [r4]
    bb80:	add	sp, sp, #8
    bb84:	pop	{r4, r5, r6, r7, r8, pc}
    bb88:	mov	r0, r7
    bb8c:	bl	da4 <free@plt>
    bb90:	mov	r0, r5
    bb94:	add	sp, sp, #8
    bb98:	pop	{r4, r5, r6, r7, r8, pc}
    bb9c:	mov	r5, r7
    bba0:	b	bb58 <pcap_nametoportrange+0xa8>
    bba4:	mov	r0, r7
    bba8:	bl	da4 <free@plt>
    bbac:	mov	r5, r8
    bbb0:	b	bb58 <pcap_nametoportrange+0xa8>
    bbb4:	.word	0x00008810

0000bbb8 <pcap_nametoproto>:
    bbb8:	push	{r4, lr}
    bbbc:	bl	d80 <getprotobyname@plt>
    bbc0:	cmp	r0, #0
    bbc4:	ldrne	r0, [r0, #8]
    bbc8:	mvneq	r0, #0
    bbcc:	pop	{r4, pc}

0000bbd0 <pcap_nametoeproto>:
    bbd0:	push	{r4, r5, r6, lr}
    bbd4:	mov	r5, r0
    bbd8:	ldr	r4, [pc, #60]	; bc1c <pcap_nametoeproto+0x4c>
    bbdc:	add	r4, pc, r4
    bbe0:	ldr	r0, [r4]
    bbe4:	cmp	r0, #0
    bbe8:	bne	bbfc <pcap_nametoeproto+0x2c>
    bbec:	b	bc14 <pcap_nametoeproto+0x44>
    bbf0:	ldr	r0, [r4, #8]!
    bbf4:	cmp	r0, #0
    bbf8:	beq	bc14 <pcap_nametoeproto+0x44>
    bbfc:	mov	r1, r5
    bc00:	bl	d50 <strcmp@plt>
    bc04:	cmp	r0, #0
    bc08:	bne	bbf0 <pcap_nametoeproto+0x20>
    bc0c:	ldrh	r0, [r4, #4]
    bc10:	pop	{r4, r5, r6, pc}
    bc14:	mvn	r0, #0
    bc18:	pop	{r4, r5, r6, pc}
    bc1c:	.word	0x000246ac

0000bc20 <pcap_nametollc>:
    bc20:	push	{r4, r5, r6, lr}
    bc24:	mov	r5, r0
    bc28:	ldr	r4, [pc, #64]	; bc70 <pcap_nametollc+0x50>
    bc2c:	add	r4, pc, r4
    bc30:	ldr	r0, [r4, #168]	; 0xa8
    bc34:	cmp	r0, #0
    bc38:	beq	bc68 <pcap_nametollc+0x48>
    bc3c:	add	r4, r4, #168	; 0xa8
    bc40:	b	bc50 <pcap_nametollc+0x30>
    bc44:	ldr	r0, [r4, #8]!
    bc48:	cmp	r0, #0
    bc4c:	beq	bc68 <pcap_nametollc+0x48>
    bc50:	mov	r1, r5
    bc54:	bl	d50 <strcmp@plt>
    bc58:	cmp	r0, #0
    bc5c:	bne	bc44 <pcap_nametollc+0x24>
    bc60:	ldrh	r0, [r4, #4]
    bc64:	pop	{r4, r5, r6, pc}
    bc68:	mvn	r0, #0
    bc6c:	pop	{r4, r5, r6, pc}
    bc70:	.word	0x0002465c

0000bc74 <__pcap_atoin>:
    bc74:	mov	r3, #0
    bc78:	push	{r4, lr}
    bc7c:	mov	ip, r3
    bc80:	mov	lr, r3
    bc84:	mov	r4, r3
    bc88:	str	r3, [r1]
    bc8c:	ldrb	r2, [r0]
    bc90:	mov	r3, r4
    bc94:	cmp	r2, #46	; 0x2e
    bc98:	cmpne	r2, #0
    bc9c:	beq	bcc0 <__pcap_atoin+0x4c>
    bca0:	add	r3, r3, r3, lsl #2
    bca4:	add	r3, r2, r3, lsl #1
    bca8:	ldrb	r2, [r0, #1]!
    bcac:	sub	r3, r3, #48	; 0x30
    bcb0:	cmp	r2, #0
    bcb4:	cmpne	r2, #46	; 0x2e
    bcb8:	bne	bca0 <__pcap_atoin+0x2c>
    bcbc:	uxtb	r3, r3
    bcc0:	orr	ip, r3, ip, lsl #8
    bcc4:	str	ip, [r1]
    bcc8:	ldrb	r3, [r0]
    bccc:	add	lr, lr, #8
    bcd0:	cmp	r3, #0
    bcd4:	addne	r0, r0, #1
    bcd8:	bne	bc8c <__pcap_atoin+0x18>
    bcdc:	mov	r0, lr
    bce0:	pop	{r4, pc}

0000bce4 <__pcap_atodn>:
    bce4:	push	{r4, r5, lr}
    bce8:	mov	r4, r1
    bcec:	ldr	r1, [pc, #88]	; bd4c <__pcap_atodn+0x68>
    bcf0:	sub	sp, sp, #12
    bcf4:	mov	r3, sp
    bcf8:	add	r2, sp, #4
    bcfc:	add	r1, pc, r1
    bd00:	mov	r5, r0
    bd04:	bl	eb8 <sscanf@plt>
    bd08:	cmp	r0, #2
    bd0c:	bne	bd3c <__pcap_atodn+0x58>
    bd10:	ldr	r2, [sp]
    bd14:	ldr	r1, [sp, #4]
    bd18:	ldr	r3, [pc, #48]	; bd50 <__pcap_atodn+0x6c>
    bd1c:	lsl	r2, r2, #22
    bd20:	and	r3, r3, r1, lsl #10
    bd24:	lsr	r2, r2, #22
    bd28:	orr	r3, r3, r2
    bd2c:	mov	r0, #32
    bd30:	str	r3, [r4]
    bd34:	add	sp, sp, #12
    bd38:	pop	{r4, r5, pc}
    bd3c:	ldr	r0, [pc, #16]	; bd54 <__pcap_atodn+0x70>
    bd40:	mov	r1, r5
    bd44:	add	r0, pc, r0
    bd48:	bl	2454 <sf_bpf_error>
    bd4c:	.word	0x000085ec
    bd50:	.word	0x0000ffff
    bd54:	.word	0x000085ac

0000bd58 <pcap_ether_aton>:
    bd58:	push	{r4, r5, r6, lr}
    bd5c:	mov	r5, r0
    bd60:	mov	r0, #6
    bd64:	bl	e1c <malloc@plt>
    bd68:	subs	r6, r0, #0
    bd6c:	beq	be10 <pcap_ether_aton+0xb8>
    bd70:	ldrb	r4, [r5]
    bd74:	cmp	r4, #0
    bd78:	beq	be10 <pcap_ether_aton+0xb8>
    bd7c:	bl	e34 <__ctype_b_loc@plt>
    bd80:	mov	ip, r6
    bd84:	ldr	r0, [r0]
    bd88:	sub	r3, r4, #45	; 0x2d
    bd8c:	cmp	r4, #58	; 0x3a
    bd90:	cmpne	r3, #1
    bd94:	addls	r5, r5, #1
    bd98:	ldrb	r3, [r5]
    bd9c:	lsl	r2, r3, #1
    bda0:	ldrh	r2, [r0, r2]
    bda4:	tst	r2, #2048	; 0x800
    bda8:	subne	r3, r3, #48	; 0x30
    bdac:	bne	bdbc <pcap_ether_aton+0x64>
    bdb0:	tst	r2, #512	; 0x200
    bdb4:	subne	r3, r3, #87	; 0x57
    bdb8:	subeq	r3, r3, #55	; 0x37
    bdbc:	ldrb	r4, [r5, #1]
    bdc0:	mov	r2, r3
    bdc4:	lsl	r1, r4, #1
    bdc8:	ldrh	r1, [r0, r1]
    bdcc:	tst	r1, #4096	; 0x1000
    bdd0:	addeq	r5, r5, #1
    bdd4:	beq	be04 <pcap_ether_aton+0xac>
    bdd8:	tst	r1, #2048	; 0x800
    bddc:	lsl	r3, r3, #4
    bde0:	add	lr, r5, #2
    bde4:	subne	r2, r4, #48	; 0x30
    bde8:	bne	bdf8 <pcap_ether_aton+0xa0>
    bdec:	tst	r1, #512	; 0x200
    bdf0:	subne	r2, r4, #87	; 0x57
    bdf4:	subeq	r2, r4, #55	; 0x37
    bdf8:	ldrb	r4, [r5, #2]
    bdfc:	orr	r2, r2, r3
    be00:	mov	r5, lr
    be04:	cmp	r4, #0
    be08:	strb	r2, [ip], #1
    be0c:	bne	bd88 <pcap_ether_aton+0x30>
    be10:	mov	r0, r6
    be14:	pop	{r4, r5, r6, pc}

0000be18 <pcap_ether_hostton>:
    be18:	push	{r4, r5, r6, lr}
    be1c:	mov	r5, r0
    be20:	ldr	r4, [pc, #180]	; bedc <pcap_ether_hostton+0xc4>
    be24:	add	r4, pc, r4
    be28:	ldr	r3, [r4]
    be2c:	cmp	r3, #0
    be30:	beq	beac <pcap_ether_hostton+0x94>
    be34:	ldr	r0, [r4, #4]
    be38:	cmp	r0, #0
    be3c:	beq	be78 <pcap_ether_hostton+0x60>
    be40:	bl	de0 <rewind@plt>
    be44:	ldr	r0, [r4, #4]
    be48:	ldr	r6, [pc, #144]	; bee0 <pcap_ether_hostton+0xc8>
    be4c:	add	r6, pc, r6
    be50:	b	be64 <pcap_ether_hostton+0x4c>
    be54:	bl	d50 <strcmp@plt>
    be58:	cmp	r0, #0
    be5c:	beq	be84 <pcap_ether_hostton+0x6c>
    be60:	ldr	r0, [r6, #4]
    be64:	bl	eed8 <pcap_next_etherent>
    be68:	mov	r1, r5
    be6c:	subs	r4, r0, #0
    be70:	add	r0, r4, #6
    be74:	bne	be54 <pcap_ether_hostton+0x3c>
    be78:	mov	r3, #0
    be7c:	mov	r0, r3
    be80:	pop	{r4, r5, r6, pc}
    be84:	mov	r0, #6
    be88:	bl	e1c <malloc@plt>
    be8c:	subs	r3, r0, #0
    be90:	beq	be7c <pcap_ether_hostton+0x64>
    be94:	ldr	r0, [r4]
    be98:	str	r0, [r3]
    be9c:	ldrh	r2, [r4, #4]
    bea0:	mov	r0, r3
    bea4:	strh	r2, [r3, #4]
    bea8:	pop	{r4, r5, r6, pc}
    beac:	ldr	r1, [pc, #48]	; bee4 <pcap_ether_hostton+0xcc>
    beb0:	ldr	r0, [pc, #48]	; bee8 <pcap_ether_hostton+0xd0>
    beb4:	add	r1, pc, r1
    beb8:	add	r0, pc, r0
    bebc:	bl	d74 <fopen@plt>
    bec0:	ldr	r3, [r4]
    bec4:	add	r3, r3, #1
    bec8:	str	r3, [r4]
    becc:	cmp	r0, #0
    bed0:	str	r0, [r4, #4]
    bed4:	bne	be48 <pcap_ether_hostton+0x30>
    bed8:	b	be78 <pcap_ether_hostton+0x60>
    bedc:	.word	0x00024904
    bee0:	.word	0x000248dc
    bee4:	.word	0x0000845c
    bee8:	.word	0x0000845c

0000beec <__pcap_nametodnaddr>:
    beec:	mov	r1, r0
    bef0:	ldr	r0, [pc, #8]	; bf00 <__pcap_nametodnaddr+0x14>
    bef4:	push	{r4, lr}
    bef8:	add	r0, pc, r0
    befc:	bl	2454 <sf_bpf_error>
    bf00:	.word	0x00008428

0000bf04 <find_levels_r>:
    bf04:	ldr	r3, [pc, #136]	; bf94 <find_levels_r+0x90>
    bf08:	push	{r4, r5, r6, lr}
    bf0c:	add	r3, pc, r3
    bf10:	ldr	r2, [r0, #24]
    bf14:	ldr	r3, [r3]
    bf18:	ldr	r5, [pc, #120]	; bf98 <find_levels_r+0x94>
    bf1c:	cmp	r2, r3
    bf20:	add	r5, pc, r5
    bf24:	popeq	{r4, r5, r6, pc}
    bf28:	mov	r4, r0
    bf2c:	ldr	r0, [r0, #60]	; 0x3c
    bf30:	mov	r2, #0
    bf34:	cmp	r0, r2
    bf38:	str	r3, [r4, #24]
    bf3c:	str	r2, [r4, #100]	; 0x64
    bf40:	moveq	r3, r0
    bf44:	beq	bf74 <find_levels_r+0x70>
    bf48:	bl	bf04 <find_levels_r>
    bf4c:	ldr	r0, [r4, #84]	; 0x54
    bf50:	bl	bf04 <find_levels_r>
    bf54:	ldr	r3, [r4, #84]	; 0x54
    bf58:	ldr	r2, [r4, #60]	; 0x3c
    bf5c:	ldr	r3, [r3, #36]	; 0x24
    bf60:	ldr	r2, [r2, #36]	; 0x24
    bf64:	cmp	r3, r2
    bf68:	movlt	r3, r2
    bf6c:	add	r3, r3, #1
    bf70:	lsl	r0, r3, #2
    bf74:	ldr	r2, [pc, #32]	; bf9c <find_levels_r+0x98>
    bf78:	str	r3, [r4, #36]	; 0x24
    bf7c:	ldr	r3, [r5, r2]
    bf80:	ldr	r3, [r3]
    bf84:	ldr	r2, [r3, r0]
    bf88:	str	r2, [r4, #100]	; 0x64
    bf8c:	str	r4, [r3, r0]
    bf90:	pop	{r4, r5, r6, pc}
    bf94:	.word	0x00024824
    bf98:	.word	0x000240d8
    bf9c:	.word	0x000000c8

0000bfa0 <propedom>:
    bfa0:	push	{r4, lr}
    bfa4:	mov	lr, #1
    bfa8:	ldr	r3, [r0]
    bfac:	ldr	r1, [r0, #8]
    bfb0:	and	ip, r3, #31
    bfb4:	lsr	r3, r3, #5
    bfb8:	ldr	r2, [r1, r3, lsl #2]
    bfbc:	orr	r2, r2, lr, lsl ip
    bfc0:	str	r2, [r1, r3, lsl #2]
    bfc4:	ldr	r2, [r0, #12]
    bfc8:	cmp	r2, #0
    bfcc:	popeq	{r4, pc}
    bfd0:	ldr	r3, [pc, #96]	; c038 <propedom+0x98>
    bfd4:	ldr	r1, [r2, #56]	; 0x38
    bfd8:	add	r3, pc, r3
    bfdc:	ldr	lr, [r0, #8]
    bfe0:	ldr	r2, [r3, #4]
    bfe4:	subs	r2, r2, #1
    bfe8:	popmi	{r4, pc}
    bfec:	mov	ip, r2
    bff0:	ldr	r3, [r1], #4
    bff4:	ldr	r4, [lr], #4
    bff8:	sub	ip, ip, #1
    bffc:	and	r3, r3, r4
    c000:	cmn	ip, #1
    c004:	str	r3, [r1, #-4]
    c008:	bne	bff0 <propedom+0x50>
    c00c:	ldr	r3, [r0, #12]
    c010:	ldr	r0, [r0, #8]
    c014:	ldr	r1, [r3, #80]	; 0x50
    c018:	ldr	r3, [r1], #4
    c01c:	ldr	ip, [r0], #4
    c020:	sub	r2, r2, #1
    c024:	and	r3, r3, ip
    c028:	cmn	r2, #1
    c02c:	str	r3, [r1, #-4]
    c030:	bne	c018 <propedom+0x78>
    c034:	pop	{r4, pc}
    c038:	.word	0x00024758

0000c03c <F>:
    c03c:	eor	ip, r0, r2, lsl #8
    c040:	ldr	r3, [pc, #256]	; c148 <F+0x10c>
    c044:	eor	ip, ip, r1, lsl #4
    c048:	push	{r4, r5, r6, lr}
    c04c:	mov	lr, r0
    c050:	umull	r0, r3, r3, ip
    c054:	ldr	r0, [pc, #240]	; c14c <F+0x110>
    c058:	mov	r4, #213	; 0xd5
    c05c:	lsr	r3, r3, #7
    c060:	add	r0, pc, r0
    c064:	mul	r3, r4, r3
    c068:	ldr	r5, [pc, #224]	; c150 <F+0x114>
    c06c:	sub	r3, ip, r3
    c070:	add	r5, pc, r5
    c074:	lsl	r4, r3, #2
    c078:	add	r3, r0, r4
    c07c:	ldr	r3, [r3, #8]
    c080:	cmp	r3, #0
    c084:	bne	c098 <F+0x5c>
    c088:	b	c0c4 <F+0x88>
    c08c:	ldr	r3, [r3, #16]
    c090:	cmp	r3, #0
    c094:	beq	c0c4 <F+0x88>
    c098:	ldr	ip, [r3]
    c09c:	cmp	lr, ip
    c0a0:	bne	c08c <F+0x50>
    c0a4:	ldr	r0, [r3, #4]
    c0a8:	cmp	r1, r0
    c0ac:	bne	c08c <F+0x50>
    c0b0:	ldr	r0, [r3, #8]
    c0b4:	cmp	r2, r0
    c0b8:	bne	c08c <F+0x50>
    c0bc:	ldr	r0, [r3, #12]
    c0c0:	pop	{r4, r5, r6, pc}
    c0c4:	ldr	r3, [pc, #136]	; c154 <F+0x118>
    c0c8:	tst	lr, #224	; 0xe0
    c0cc:	add	r3, pc, r3
    c0d0:	ldr	r0, [r3, #860]	; 0x35c
    c0d4:	add	r0, r0, #1
    c0d8:	str	r0, [r3, #860]	; 0x35c
    c0dc:	bne	c0ec <F+0xb0>
    c0e0:	and	r3, lr, #7
    c0e4:	cmp	r3, #1
    c0e8:	bls	c128 <F+0xec>
    c0ec:	ldr	ip, [pc, #100]	; c158 <F+0x11c>
    c0f0:	ldr	r3, [pc, #100]	; c15c <F+0x120>
    c0f4:	ldr	r5, [r5, ip]
    c0f8:	add	r3, pc, r3
    c0fc:	add	r3, r3, r4
    c100:	ldr	ip, [r5]
    c104:	add	r4, ip, #20
    c108:	str	r0, [ip, #12]
    c10c:	stmib	ip, {r1, r2}
    c110:	str	r4, [r5]
    c114:	str	lr, [ip]
    c118:	ldr	r2, [r3, #8]
    c11c:	str	r2, [ip, #16]
    c120:	str	ip, [r3, #8]
    c124:	pop	{r4, r5, r6, pc}
    c128:	ldr	r3, [pc, #48]	; c160 <F+0x124>
    c12c:	mov	ip, #1
    c130:	ldr	r3, [r5, r3]
    c134:	ldr	r3, [r3]
    c138:	add	r6, r3, r0, lsl #3
    c13c:	str	r1, [r6, #4]
    c140:	str	ip, [r3, r0, lsl #3]
    c144:	b	c0ec <F+0xb0>
    c148:	.word	0x99d722db
    c14c:	.word	0x000246d0
    c150:	.word	0x00023f88
    c154:	.word	0x00024664
    c158:	.word	0x000000f0
    c15c:	.word	0x00024638
    c160:	.word	0x00000108

0000c164 <make_marks>:
    c164:	ldr	r3, [pc, #96]	; c1cc <make_marks+0x68>
    c168:	push	{r4, r5, r6, lr}
    c16c:	ldr	r5, [pc, r3]
    c170:	ldr	r3, [r0, #24]
    c174:	cmp	r3, r5
    c178:	popeq	{r4, r5, r6, pc}
    c17c:	ldr	r3, [r0, #8]
    c180:	mov	r4, r0
    c184:	and	r3, r3, #7
    c188:	cmp	r3, #6
    c18c:	str	r5, [r0, #24]
    c190:	bne	c1ac <make_marks+0x48>
    c194:	b	c1c8 <make_marks+0x64>
    c198:	ldr	r3, [r4, #8]
    c19c:	str	r5, [r4, #24]
    c1a0:	and	r3, r3, #7
    c1a4:	cmp	r3, #6
    c1a8:	popeq	{r4, r5, r6, pc}
    c1ac:	ldr	r0, [r4, #60]	; 0x3c
    c1b0:	bl	c164 <make_marks>
    c1b4:	ldr	r4, [r4, #84]	; 0x54
    c1b8:	ldr	r3, [r4, #24]
    c1bc:	cmp	r3, r5
    c1c0:	bne	c198 <make_marks+0x34>
    c1c4:	pop	{r4, r5, r6, pc}
    c1c8:	pop	{r4, r5, r6, pc}
    c1cc:	.word	0x000245c4

0000c1d0 <count_blocks>:
    c1d0:	push	{r4, r5, r6, lr}
    c1d4:	subs	r4, r0, #0
    c1d8:	beq	c230 <count_blocks+0x60>
    c1dc:	ldr	r3, [pc, #84]	; c238 <count_blocks+0x68>
    c1e0:	ldr	r2, [r4, #24]
    c1e4:	add	r3, pc, r3
    c1e8:	mov	r5, #0
    c1ec:	ldr	r6, [r3]
    c1f0:	cmp	r2, r6
    c1f4:	bne	c208 <count_blocks+0x38>
    c1f8:	b	c228 <count_blocks+0x58>
    c1fc:	ldr	r3, [r4, #24]
    c200:	cmp	r3, r6
    c204:	beq	c228 <count_blocks+0x58>
    c208:	str	r6, [r4, #24]
    c20c:	ldr	r0, [r4, #60]	; 0x3c
    c210:	bl	c1d0 <count_blocks>
    c214:	ldr	r4, [r4, #84]	; 0x54
    c218:	cmp	r4, #0
    c21c:	add	r0, r0, #1
    c220:	add	r5, r5, r0
    c224:	bne	c1fc <count_blocks+0x2c>
    c228:	mov	r0, r5
    c22c:	pop	{r4, r5, r6, pc}
    c230:	mov	r5, r4
    c234:	b	c228 <count_blocks+0x58>
    c238:	.word	0x0002454c

0000c23c <number_blks_r>:
    c23c:	push	{r4, r5, r6, r7, r8, lr}
    c240:	subs	r4, r0, #0
    c244:	ldr	r2, [pc, #112]	; c2bc <number_blks_r+0x80>
    c248:	add	r2, pc, r2
    c24c:	popeq	{r4, r5, r6, r7, r8, pc}
    c250:	ldr	r5, [pc, #104]	; c2c0 <number_blks_r+0x84>
    c254:	ldr	r3, [r4, #24]
    c258:	add	r5, pc, r5
    c25c:	ldr	r6, [r5]
    c260:	cmp	r6, r3
    c264:	beq	c2b8 <number_blks_r+0x7c>
    c268:	ldr	r3, [pc, #84]	; c2c4 <number_blks_r+0x88>
    c26c:	ldr	r7, [r2, r3]
    c270:	b	c280 <number_blks_r+0x44>
    c274:	ldr	r3, [r4, #24]
    c278:	cmp	r3, r6
    c27c:	beq	c2b4 <number_blks_r+0x78>
    c280:	ldr	r3, [r5, #864]	; 0x360
    c284:	str	r6, [r4, #24]
    c288:	str	r3, [r4]
    c28c:	ldr	r2, [r7]
    c290:	add	r1, r3, #1
    c294:	str	r1, [r5, #864]	; 0x360
    c298:	str	r4, [r2, r3, lsl #2]
    c29c:	ldr	r0, [r4, #60]	; 0x3c
    c2a0:	bl	c23c <number_blks_r>
    c2a4:	ldr	r4, [r4, #84]	; 0x54
    c2a8:	cmp	r4, #0
    c2ac:	bne	c274 <number_blks_r+0x38>
    c2b0:	pop	{r4, r5, r6, r7, r8, pc}
    c2b4:	pop	{r4, r5, r6, r7, r8, pc}
    c2b8:	pop	{r4, r5, r6, r7, r8, pc}
    c2bc:	.word	0x00023db0
    c2c0:	.word	0x000244d8
    c2c4:	.word	0x000000d0

0000c2c8 <count_stmts>:
    c2c8:	push	{r4, r5, r6, lr}
    c2cc:	subs	r4, r0, #0
    c2d0:	beq	c34c <count_stmts+0x84>
    c2d4:	ldr	r3, [pc, #128]	; c35c <count_stmts+0x94>
    c2d8:	ldr	r2, [r4, #24]
    c2dc:	add	r3, pc, r3
    c2e0:	ldr	r3, [r3]
    c2e4:	cmp	r2, r3
    c2e8:	beq	c34c <count_stmts+0x84>
    c2ec:	str	r3, [r4, #24]
    c2f0:	ldr	r0, [r4, #60]	; 0x3c
    c2f4:	bl	c2c8 <count_stmts>
    c2f8:	mov	r5, r0
    c2fc:	ldr	r0, [r4, #84]	; 0x54
    c300:	bl	c2c8 <count_stmts>
    c304:	ldr	r3, [r4, #4]
    c308:	cmp	r3, #0
    c30c:	add	r0, r5, r0
    c310:	beq	c354 <count_stmts+0x8c>
    c314:	mov	r1, #0
    c318:	ldr	r2, [r3]
    c31c:	ldr	r3, [r3, #16]
    c320:	cmn	r2, #1
    c324:	addne	r1, r1, #1
    c328:	cmp	r3, #0
    c32c:	bne	c318 <count_stmts+0x50>
    c330:	add	r0, r0, r1
    c334:	ldr	r1, [r4, #28]
    c338:	add	r0, r0, #1
    c33c:	ldr	r4, [r4, #32]
    c340:	add	r0, r0, r1
    c344:	add	r0, r0, r4
    c348:	pop	{r4, r5, r6, pc}
    c34c:	mov	r0, #0
    c350:	pop	{r4, r5, r6, pc}
    c354:	mov	r1, r3
    c358:	b	c330 <count_stmts+0x68>
    c35c:	.word	0x00024454

0000c360 <convert_code_r>:
    c360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c364:	subs	r8, r0, #0
    c368:	sub	sp, sp, #12
    c36c:	beq	c3ac <convert_code_r+0x4c>
    c370:	ldr	r3, [pc, #884]	; c6ec <convert_code_r+0x38c>
    c374:	ldr	r2, [r8, #24]
    c378:	add	r3, pc, r3
    c37c:	ldr	r3, [r3]
    c380:	cmp	r2, r3
    c384:	beq	c3ac <convert_code_r+0x4c>
    c388:	str	r3, [r8, #24]
    c38c:	ldr	r0, [r8, #84]	; 0x54
    c390:	bl	c360 <convert_code_r>
    c394:	cmp	r0, #0
    c398:	bne	c3b8 <convert_code_r+0x58>
    c39c:	mov	r0, #0
    c3a0:	add	sp, sp, #12
    c3a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3a8:	strb	r3, [r7, #3]
    c3ac:	mov	r0, #1
    c3b0:	add	sp, sp, #12
    c3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3b8:	ldr	r0, [r8, #60]	; 0x3c
    c3bc:	bl	c360 <convert_code_r>
    c3c0:	cmp	r0, #0
    c3c4:	beq	c39c <convert_code_r+0x3c>
    c3c8:	ldr	r4, [r8, #4]
    c3cc:	cmp	r4, #0
    c3d0:	beq	c698 <convert_code_r+0x338>
    c3d4:	mov	r3, r4
    c3d8:	mov	r6, #0
    c3dc:	ldr	r2, [r3]
    c3e0:	ldr	r3, [r3, #16]
    c3e4:	cmn	r2, #1
    c3e8:	addne	r6, r6, #1
    c3ec:	cmp	r3, #0
    c3f0:	bne	c3dc <convert_code_r+0x7c>
    c3f4:	add	r2, r6, #1
    c3f8:	ldr	r1, [pc, #752]	; c6f0 <convert_code_r+0x390>
    c3fc:	ldr	r3, [r8, #28]
    c400:	add	r1, pc, r1
    c404:	ldr	r7, [r8, #32]
    c408:	add	r2, r2, r3
    c40c:	add	r2, r2, r7
    c410:	ldr	r7, [r1, #868]	; 0x364
    c414:	ldr	r3, [r1, #872]	; 0x368
    c418:	sub	r7, r7, r2, lsl #3
    c41c:	sub	r3, r7, r3
    c420:	cmp	r6, #0
    c424:	asr	r3, r3, #3
    c428:	str	r7, [r1, #868]	; 0x364
    c42c:	str	r3, [r8, #40]	; 0x28
    c430:	bne	c638 <convert_code_r+0x2d8>
    c434:	cmp	r4, #0
    c438:	strne	r6, [sp]
    c43c:	beq	c568 <convert_code_r+0x208>
    c440:	str	r8, [sp, #4]
    c444:	ldr	r8, [sp]
    c448:	mov	r2, #0
    c44c:	sub	fp, r6, #2
    c450:	mov	sl, #1
    c454:	ldr	r3, [r4]
    c458:	cmn	r3, #1
    c45c:	beq	c548 <convert_code_r+0x1e8>
    c460:	strh	r3, [r7]
    c464:	ldr	r3, [r4, #12]
    c468:	str	r3, [r7, #4]
    c46c:	ldr	r3, [r4]
    c470:	and	r1, r3, #7
    c474:	sub	r5, r3, #5
    c478:	clz	r5, r5
    c47c:	lsr	r5, r5, #5
    c480:	cmp	r1, #5
    c484:	orrne	r5, r5, #1
    c488:	cmp	r5, #0
    c48c:	bne	c540 <convert_code_r+0x1e0>
    c490:	cmp	fp, r2
    c494:	beq	c540 <convert_code_r+0x1e0>
    c498:	ldr	ip, [r4, #4]
    c49c:	cmp	ip, #0
    c4a0:	beq	c6cc <convert_code_r+0x36c>
    c4a4:	ldr	r3, [r4, #8]
    c4a8:	cmp	r3, #0
    c4ac:	beq	c6cc <convert_code_r+0x36c>
    c4b0:	cmp	r6, #0
    c4b4:	beq	c684 <convert_code_r+0x324>
    c4b8:	mvn	r3, r2
    c4bc:	mov	r1, r5
    c4c0:	uxtb	r3, r3
    c4c4:	sub	lr, r8, #4
    c4c8:	mov	r9, #0
    c4cc:	b	c4f4 <convert_code_r+0x194>
    c4d0:	ldr	ip, [r4, #8]
    c4d4:	cmp	r0, ip
    c4d8:	beq	c51c <convert_code_r+0x1bc>
    c4dc:	add	r1, r1, #1
    c4e0:	add	r3, r3, #1
    c4e4:	cmp	r1, r6
    c4e8:	uxtb	r3, r3
    c4ec:	beq	c530 <convert_code_r+0x1d0>
    c4f0:	ldr	ip, [r4, #4]
    c4f4:	ldr	r0, [lr, #4]!
    c4f8:	cmp	r0, ip
    c4fc:	bne	c4d0 <convert_code_r+0x170>
    c500:	cmp	r5, #0
    c504:	bne	c6b8 <convert_code_r+0x358>
    c508:	strb	r3, [r7, #2]
    c50c:	ldr	ip, [r4, #8]
    c510:	mov	r5, sl
    c514:	cmp	r0, ip
    c518:	bne	c4dc <convert_code_r+0x17c>
    c51c:	cmp	r9, #0
    c520:	bne	c6a4 <convert_code_r+0x344>
    c524:	mov	r9, sl
    c528:	strb	r3, [r7, #3]
    c52c:	b	c4dc <convert_code_r+0x17c>
    c530:	eor	r5, r5, #1
    c534:	eor	r9, r9, #1
    c538:	orrs	r3, r5, r9
    c53c:	bne	c684 <convert_code_r+0x324>
    c540:	add	r7, r7, #8
    c544:	add	r2, r2, #1
    c548:	ldr	r4, [r4, #16]
    c54c:	cmp	r4, #0
    c550:	bne	c454 <convert_code_r+0xf4>
    c554:	ldm	sp, {r3, r8}
    c558:	cmp	r3, #0
    c55c:	beq	c568 <convert_code_r+0x208>
    c560:	ldr	r0, [sp]
    c564:	bl	da4 <free@plt>
    c568:	ldr	r3, [r8, #8]
    c56c:	strh	r3, [r7]
    c570:	ldr	r3, [r8, #20]
    c574:	str	r3, [r7, #4]
    c578:	ldr	r3, [r8, #60]	; 0x3c
    c57c:	cmp	r3, #0
    c580:	beq	c3ac <convert_code_r+0x4c>
    c584:	ldr	r2, [r8, #40]	; 0x28
    c588:	ldr	r3, [r3, #40]	; 0x28
    c58c:	add	r2, r6, r2
    c590:	sub	r3, r3, r2
    c594:	sub	r3, r3, #1
    c598:	cmp	r3, #255	; 0xff
    c59c:	bls	c5d4 <convert_code_r+0x274>
    c5a0:	ldr	r0, [r8, #28]
    c5a4:	cmp	r0, #0
    c5a8:	moveq	r3, #1
    c5ac:	streq	r3, [r8, #28]
    c5b0:	beq	c3b0 <convert_code_r+0x50>
    c5b4:	mov	r1, #0
    c5b8:	sub	r3, r3, #1
    c5bc:	mov	r2, #5
    c5c0:	strb	r1, [r7, #2]
    c5c4:	str	r3, [r7, #12]
    c5c8:	strh	r2, [r7, #8]
    c5cc:	mov	r1, #1
    c5d0:	b	c5dc <convert_code_r+0x27c>
    c5d4:	mov	r1, #0
    c5d8:	strb	r3, [r7, #2]
    c5dc:	ldr	r3, [r8, #84]	; 0x54
    c5e0:	ldr	r2, [r8, #40]	; 0x28
    c5e4:	ldr	r3, [r3, #40]	; 0x28
    c5e8:	add	r6, r6, r2
    c5ec:	sub	r3, r3, r6
    c5f0:	sub	r3, r3, #1
    c5f4:	cmp	r3, #255	; 0xff
    c5f8:	bls	c3a8 <convert_code_r+0x48>
    c5fc:	ldr	r0, [r8, #32]
    c600:	cmp	r0, #0
    c604:	moveq	r3, #1
    c608:	streq	r3, [r8, #32]
    c60c:	beq	c3b0 <convert_code_r+0x50>
    c610:	add	r2, r1, #1
    c614:	sub	r3, r3, r2
    c618:	lsl	r2, r2, #3
    c61c:	add	ip, r7, r2
    c620:	mov	lr, #5
    c624:	strb	r1, [r7, #3]
    c628:	mov	r0, #1
    c62c:	strh	lr, [r7, r2]
    c630:	str	r3, [ip, #4]
    c634:	b	c3b0 <convert_code_r+0x50>
    c638:	mov	r1, #4
    c63c:	mov	r0, r6
    c640:	bl	d38 <calloc@plt>
    c644:	subs	r3, r0, #0
    c648:	str	r3, [sp]
    c64c:	beq	c6e0 <convert_code_r+0x380>
    c650:	cmp	r4, #0
    c654:	beq	c560 <convert_code_r+0x200>
    c658:	ldr	r3, [sp]
    c65c:	mov	r2, #0
    c660:	sub	r1, r3, #4
    c664:	mov	r3, r4
    c668:	str	r3, [r1, #4]!
    c66c:	ldr	r3, [r3, #16]
    c670:	add	r2, r2, #1
    c674:	cmp	r3, #0
    c678:	cmpne	r6, r2
    c67c:	bhi	c668 <convert_code_r+0x308>
    c680:	b	c440 <convert_code_r+0xe0>
    c684:	ldr	r1, [pc, #104]	; c6f4 <convert_code_r+0x394>
    c688:	ldr	r0, [pc, #104]	; c6f8 <convert_code_r+0x398>
    c68c:	add	r1, pc, r1
    c690:	add	r0, pc, r0
    c694:	bl	2454 <sf_bpf_error>
    c698:	mov	r2, #1
    c69c:	mov	r6, r4
    c6a0:	b	c3f8 <convert_code_r+0x98>
    c6a4:	ldr	r1, [pc, #80]	; c6fc <convert_code_r+0x39c>
    c6a8:	ldr	r0, [pc, #80]	; c700 <convert_code_r+0x3a0>
    c6ac:	add	r1, pc, r1
    c6b0:	add	r0, pc, r0
    c6b4:	bl	2454 <sf_bpf_error>
    c6b8:	ldr	r1, [pc, #68]	; c704 <convert_code_r+0x3a4>
    c6bc:	ldr	r0, [pc, #68]	; c708 <convert_code_r+0x3a8>
    c6c0:	add	r1, pc, r1
    c6c4:	add	r0, pc, r0
    c6c8:	bl	2454 <sf_bpf_error>
    c6cc:	ldr	r1, [pc, #56]	; c70c <convert_code_r+0x3ac>
    c6d0:	ldr	r0, [pc, #56]	; c710 <convert_code_r+0x3b0>
    c6d4:	add	r1, pc, r1
    c6d8:	add	r0, pc, r0
    c6dc:	bl	2454 <sf_bpf_error>
    c6e0:	ldr	r0, [pc, #44]	; c714 <convert_code_r+0x3b4>
    c6e4:	add	r0, pc, r0
    c6e8:	bl	2454 <sf_bpf_error>
    c6ec:	.word	0x000243b8
    c6f0:	.word	0x00024330
    c6f4:	.word	0x00007d88
    c6f8:	.word	0x00007d9c
    c6fc:	.word	0x00007dc0
    c700:	.word	0x00007d7c
    c704:	.word	0x00007dac
    c708:	.word	0x00007d68
    c70c:	.word	0x00007d84
    c710:	.word	0x00007d54
    c714:	.word	0x00007d20

0000c718 <atomdef.isra.1>:
    c718:	cmn	r0, #1
    c71c:	bxeq	lr
    c720:	and	r3, r0, #7
    c724:	cmp	r3, #7
    c728:	addls	pc, pc, r3, lsl #2
    c72c:	b	c778 <atomdef.isra.1+0x60>
    c730:	b	c750 <atomdef.isra.1+0x38>
    c734:	b	c768 <atomdef.isra.1+0x50>
    c738:	b	c770 <atomdef.isra.1+0x58>
    c73c:	b	c770 <atomdef.isra.1+0x58>
    c740:	b	c750 <atomdef.isra.1+0x38>
    c744:	b	c778 <atomdef.isra.1+0x60>
    c748:	b	c778 <atomdef.isra.1+0x60>
    c74c:	b	c758 <atomdef.isra.1+0x40>
    c750:	mov	r0, #16
    c754:	bx	lr
    c758:	tst	r0, #248	; 0xf8
    c75c:	moveq	r0, #17
    c760:	movne	r0, #16
    c764:	bx	lr
    c768:	mov	r0, #17
    c76c:	bx	lr
    c770:	ldr	r0, [r1]
    c774:	bx	lr
    c778:	mvn	r0, #0
    c77c:	bx	lr

0000c780 <find_inedges.isra.6>:
    c780:	ldr	r3, [pc, #168]	; c830 <find_inedges.isra.6+0xb0>
    c784:	push	{r4, lr}
    c788:	add	r3, pc, r3
    c78c:	ldr	r4, [pc, #160]	; c834 <find_inedges.isra.6+0xb4>
    c790:	ldr	r1, [r3, #864]	; 0x360
    c794:	add	r4, pc, r4
    c798:	cmp	r1, #0
    c79c:	ble	c7c4 <find_inedges.isra.6+0x44>
    c7a0:	ldr	r3, [pc, #144]	; c838 <find_inedges.isra.6+0xb8>
    c7a4:	mov	ip, #0
    c7a8:	ldr	r3, [r4, r3]
    c7ac:	ldr	r3, [r3]
    c7b0:	add	r1, r3, r1, lsl #2
    c7b4:	ldr	r2, [r3], #4
    c7b8:	cmp	r3, r1
    c7bc:	str	ip, [r2, #112]	; 0x70
    c7c0:	bne	c7b4 <find_inedges.isra.6+0x34>
    c7c4:	ldr	lr, [r0]
    c7c8:	cmp	lr, #0
    c7cc:	ble	c82c <find_inedges.isra.6+0xac>
    c7d0:	ldr	r3, [pc, #100]	; c83c <find_inedges.isra.6+0xbc>
    c7d4:	ldr	r3, [r4, r3]
    c7d8:	ldr	r4, [r3]
    c7dc:	add	lr, r4, lr, lsl #2
    c7e0:	ldr	r3, [lr], #-4
    c7e4:	cmp	r3, #0
    c7e8:	beq	c820 <find_inedges.isra.6+0xa0>
    c7ec:	ldr	r2, [r3, #60]	; 0x3c
    c7f0:	add	r0, r3, #48	; 0x30
    c7f4:	add	r1, r3, #72	; 0x48
    c7f8:	ldr	ip, [r2, #112]	; 0x70
    c7fc:	str	ip, [r3, #68]	; 0x44
    c800:	str	r0, [r2, #112]	; 0x70
    c804:	ldr	r2, [r3, #84]	; 0x54
    c808:	ldr	r0, [r2, #112]	; 0x70
    c80c:	str	r0, [r3, #92]	; 0x5c
    c810:	str	r1, [r2, #112]	; 0x70
    c814:	ldr	r3, [r3, #100]	; 0x64
    c818:	cmp	r3, #0
    c81c:	bne	c7ec <find_inedges.isra.6+0x6c>
    c820:	cmp	r4, lr
    c824:	bne	c7e0 <find_inedges.isra.6+0x60>
    c828:	pop	{r4, pc}
    c82c:	pop	{r4, pc}
    c830:	.word	0x00023fa8
    c834:	.word	0x00023864
    c838:	.word	0x000000d0
    c83c:	.word	0x000000c8

0000c840 <atomuse.isra.8>:
    c840:	cmn	r0, #1
    c844:	bxeq	lr
    c848:	and	r3, r0, #7
    c84c:	sub	r3, r3, #2
    c850:	cmp	r3, #5
    c854:	addls	pc, pc, r3, lsl #2
    c858:	b	c8b0 <atomuse.isra.8+0x70>
    c85c:	b	c87c <atomuse.isra.8+0x3c>
    c860:	b	c874 <atomuse.isra.8+0x34>
    c864:	b	c884 <atomuse.isra.8+0x44>
    c868:	b	c884 <atomuse.isra.8+0x44>
    c86c:	b	c894 <atomuse.isra.8+0x54>
    c870:	b	c8cc <atomuse.isra.8+0x8c>
    c874:	mov	r0, #17
    c878:	bx	lr
    c87c:	mov	r0, #16
    c880:	bx	lr
    c884:	tst	r0, #8
    c888:	moveq	r0, #16
    c88c:	movne	r0, #18
    c890:	bx	lr
    c894:	and	r0, r0, #24
    c898:	cmp	r0, #16
    c89c:	bxeq	lr
    c8a0:	cmp	r0, #8
    c8a4:	mvnne	r0, #0
    c8a8:	moveq	r0, #17
    c8ac:	bx	lr
    c8b0:	and	r0, r0, #224	; 0xe0
    c8b4:	cmp	r0, #64	; 0x40
    c8b8:	beq	c874 <atomuse.isra.8+0x34>
    c8bc:	cmp	r0, #96	; 0x60
    c8c0:	bne	c8e0 <atomuse.isra.8+0xa0>
    c8c4:	ldr	r0, [r1]
    c8c8:	bx	lr
    c8cc:	and	r0, r0, #248	; 0xf8
    c8d0:	cmp	r0, #128	; 0x80
    c8d4:	movne	r0, #16
    c8d8:	moveq	r0, #17
    c8dc:	bx	lr
    c8e0:	mvn	r0, #0
    c8e4:	bx	lr

0000c8e8 <deadstmt>:
    c8e8:	mov	r2, r0
    c8ec:	push	{r4, r5, r6, lr}
    c8f0:	mov	r6, r0
    c8f4:	ldr	r4, [r2], #12
    c8f8:	mov	r5, r1
    c8fc:	mov	r0, r4
    c900:	mov	r1, r2
    c904:	bl	c840 <atomuse.isra.8>
    c908:	cmp	r0, #0
    c90c:	blt	c928 <deadstmt+0x40>
    c910:	mov	r3, #0
    c914:	cmp	r0, #18
    c918:	streq	r3, [r5, #68]	; 0x44
    c91c:	streq	r3, [r5, #64]	; 0x40
    c920:	strne	r3, [r5, r0, lsl #2]
    c924:	ldr	r4, [r6]
    c928:	mov	r1, r2
    c92c:	mov	r0, r4
    c930:	bl	c718 <atomdef.isra.1>
    c934:	cmp	r0, #0
    c938:	poplt	{r4, r5, r6, pc}
    c93c:	ldr	r2, [r5, r0, lsl #2]
    c940:	cmp	r2, #0
    c944:	beq	c960 <deadstmt+0x78>
    c948:	ldr	r3, [pc, #24]	; c968 <deadstmt+0x80>
    c94c:	mov	ip, #0
    c950:	add	r3, pc, r3
    c954:	mvn	r1, #0
    c958:	str	ip, [r3, #876]	; 0x36c
    c95c:	str	r1, [r2]
    c960:	str	r6, [r5, r0, lsl #2]
    c964:	pop	{r4, r5, r6, pc}
    c968:	.word	0x00023de0

0000c96c <fold_op.isra.10>:
    c96c:	ldr	ip, [pc, #252]	; ca70 <fold_op.isra.10+0x104>
    c970:	push	{r4, r5, r6, lr}
    c974:	add	ip, pc, ip
    c978:	ldr	lr, [pc, #244]	; ca74 <fold_op.isra.10+0x108>
    c97c:	mov	r4, r0
    c980:	mov	r5, r1
    c984:	ldr	r0, [ip, lr]
    c988:	mov	r1, ip
    c98c:	ldr	ip, [r4]
    c990:	ldr	r1, [r0]
    c994:	and	ip, ip, #240	; 0xf0
    c998:	add	r2, r1, r2, lsl #3
    c99c:	add	r3, r1, r3, lsl #3
    c9a0:	cmp	ip, #64	; 0x40
    c9a4:	ldr	r0, [r2, #4]
    c9a8:	ldr	r1, [r3, #4]
    c9ac:	beq	ca5c <fold_op.isra.10+0xf0>
    c9b0:	ble	c9f0 <fold_op.isra.10+0x84>
    c9b4:	cmp	ip, #96	; 0x60
    c9b8:	beq	ca54 <fold_op.isra.10+0xe8>
    c9bc:	ble	ca3c <fold_op.isra.10+0xd0>
    c9c0:	cmp	ip, #112	; 0x70
    c9c4:	beq	ca24 <fold_op.isra.10+0xb8>
    c9c8:	cmp	ip, #128	; 0x80
    c9cc:	rsbeq	r0, r0, #0
    c9d0:	bne	ca38 <fold_op.isra.10+0xcc>
    c9d4:	ldr	r3, [pc, #156]	; ca78 <fold_op.isra.10+0x10c>
    c9d8:	mov	r2, #0
    c9dc:	add	r3, pc, r3
    c9e0:	str	r0, [r5]
    c9e4:	str	r2, [r3, #876]	; 0x36c
    c9e8:	str	r2, [r4]
    c9ec:	pop	{r4, r5, r6, pc}
    c9f0:	cmp	ip, #16
    c9f4:	beq	ca4c <fold_op.isra.10+0xe0>
    c9f8:	ble	ca2c <fold_op.isra.10+0xc0>
    c9fc:	cmp	ip, #32
    ca00:	beq	ca1c <fold_op.isra.10+0xb0>
    ca04:	cmp	ip, #48	; 0x30
    ca08:	bne	ca38 <fold_op.isra.10+0xcc>
    ca0c:	cmp	r1, #0
    ca10:	beq	ca64 <fold_op.isra.10+0xf8>
    ca14:	bl	12780 <__udivsi3>
    ca18:	b	c9d4 <fold_op.isra.10+0x68>
    ca1c:	mul	r0, r1, r0
    ca20:	b	c9d4 <fold_op.isra.10+0x68>
    ca24:	lsr	r0, r0, r1
    ca28:	b	c9d4 <fold_op.isra.10+0x68>
    ca2c:	cmp	ip, #0
    ca30:	addeq	r0, r0, r1
    ca34:	beq	c9d4 <fold_op.isra.10+0x68>
    ca38:	bl	f18 <abort@plt>
    ca3c:	cmp	ip, #80	; 0x50
    ca40:	andeq	r0, r0, r1
    ca44:	beq	c9d4 <fold_op.isra.10+0x68>
    ca48:	b	ca38 <fold_op.isra.10+0xcc>
    ca4c:	sub	r0, r0, r1
    ca50:	b	c9d4 <fold_op.isra.10+0x68>
    ca54:	lsl	r0, r0, r1
    ca58:	b	c9d4 <fold_op.isra.10+0x68>
    ca5c:	orr	r0, r0, r1
    ca60:	b	c9d4 <fold_op.isra.10+0x68>
    ca64:	ldr	r0, [pc, #16]	; ca7c <fold_op.isra.10+0x110>
    ca68:	add	r0, pc, r0
    ca6c:	bl	2454 <sf_bpf_error>
    ca70:	.word	0x00023684
    ca74:	.word	0x00000108
    ca78:	.word	0x00023d54
    ca7c:	.word	0x00007a18

0000ca80 <opt_j>:
    ca80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca84:	sub	sp, sp, #28
    ca88:	ldr	r2, [r0, #12]
    ca8c:	ldr	lr, [pc, #604]	; ccf0 <opt_j+0x270>
    ca90:	ldr	r3, [r2, #60]	; 0x3c
    ca94:	add	lr, pc, lr
    ca98:	cmp	r3, #0
    ca9c:	beq	cc0c <opt_j+0x18c>
    caa0:	ldr	r2, [r2, #84]	; 0x54
    caa4:	cmp	r3, r2
    caa8:	beq	cc8c <opt_j+0x20c>
    caac:	ldr	r2, [pc, #576]	; ccf4 <opt_j+0x274>
    cab0:	mov	r1, #0
    cab4:	str	r1, [sp, #8]
    cab8:	ldr	r3, [pc, #568]	; ccf8 <opt_j+0x278>
    cabc:	ldr	r2, [lr, r2]
    cac0:	add	r3, pc, r3
    cac4:	mov	r7, r0
    cac8:	ldr	r8, [r2]
    cacc:	ldr	r1, [r3, #4]
    cad0:	mov	r4, #1
    cad4:	ldr	r3, [r3, #876]	; 0x36c
    cad8:	str	r1, [sp, #20]
    cadc:	str	r3, [sp, #4]
    cae0:	ldr	r3, [sp, #20]
    cae4:	cmp	r3, #0
    cae8:	ble	cc68 <opt_j+0x1e8>
    caec:	ldr	r3, [r7, #8]
    caf0:	mov	r2, #0
    caf4:	sub	r3, r3, #4
    caf8:	str	r2, [sp, #16]
    cafc:	str	r3, [sp, #12]
    cb00:	ldr	r3, [sp, #12]
    cb04:	ldr	r9, [r3, #4]!
    cb08:	cmp	r9, #0
    cb0c:	str	r3, [sp, #12]
    cb10:	beq	cc1c <opt_j+0x19c>
    cb14:	ldr	sl, [r7, #12]
    cb18:	ldr	r3, [sp, #16]
    cb1c:	ldr	r5, [sl, #8]
    cb20:	lsl	r6, r3, #5
    cb24:	mov	r0, r9
    cb28:	bl	ef4 <ffs@plt>
    cb2c:	sub	r0, r0, #1
    cb30:	add	r3, r0, r6
    cb34:	bic	r9, r9, r4, lsl r0
    cb38:	ldr	r2, [r8, r3, lsl #2]
    cb3c:	ldr	r3, [r2, #4]
    cb40:	cmp	r3, #0
    cb44:	rsblt	r3, r3, #0
    cb48:	movlt	r1, #0
    cb4c:	movge	r1, r4
    cb50:	cmp	r3, r5
    cb54:	bne	cc14 <opt_j+0x194>
    cb58:	ldr	r3, [r2, #16]
    cb5c:	ldr	r0, [sl, #200]	; 0xc8
    cb60:	ldr	r2, [r3, #200]	; 0xc8
    cb64:	cmp	r0, r2
    cb68:	bne	cc14 <opt_j+0x194>
    cb6c:	ldr	r3, [r3, #132]	; 0x84
    cb70:	ldr	r2, [sl, #132]	; 0x84
    cb74:	cmp	r2, r3
    cb78:	beq	cc58 <opt_j+0x1d8>
    cb7c:	cmp	r5, #21
    cb80:	movne	r1, #0
    cb84:	andeq	r1, r1, #1
    cb88:	cmp	r1, #0
    cb8c:	beq	cc14 <opt_j+0x194>
    cb90:	ldr	fp, [sl, #84]	; 0x54
    cb94:	cmp	fp, #0
    cb98:	beq	cc14 <opt_j+0x194>
    cb9c:	ldr	r0, [fp, #128]	; 0x80
    cba0:	ldr	r2, [r7, #16]
    cba4:	cmp	r0, #0
    cba8:	beq	cbe4 <opt_j+0x164>
    cbac:	add	r2, r2, #136	; 0x88
    cbb0:	add	r1, fp, #136	; 0x88
    cbb4:	mov	r3, #0
    cbb8:	ands	ip, r0, r4, lsl r3
    cbbc:	add	r3, r3, #1
    cbc0:	beq	cbd4 <opt_j+0x154>
    cbc4:	ldr	lr, [r2]
    cbc8:	ldr	ip, [r1]
    cbcc:	cmp	lr, ip
    cbd0:	bne	cc14 <opt_j+0x194>
    cbd4:	cmp	r3, #18
    cbd8:	add	r2, r2, #4
    cbdc:	add	r1, r1, #4
    cbe0:	bne	cbb8 <opt_j+0x138>
    cbe4:	str	fp, [r7, #12]
    cbe8:	ldr	r3, [fp, #60]	; 0x3c
    cbec:	mov	r2, #0
    cbf0:	cmp	r3, r2
    cbf4:	str	r2, [sp, #4]
    cbf8:	str	r4, [sp, #8]
    cbfc:	bne	cae0 <opt_j+0x60>
    cc00:	ldr	r2, [pc, #244]	; ccfc <opt_j+0x27c>
    cc04:	add	r2, pc, r2
    cc08:	str	r3, [r2, #876]	; 0x36c
    cc0c:	add	sp, sp, #28
    cc10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc14:	cmp	r9, #0
    cc18:	bne	cb24 <opt_j+0xa4>
    cc1c:	ldr	r3, [sp, #16]
    cc20:	ldr	r2, [sp, #20]
    cc24:	add	r3, r3, #1
    cc28:	cmp	r3, r2
    cc2c:	str	r3, [sp, #16]
    cc30:	bne	cb00 <opt_j+0x80>
    cc34:	ldr	r3, [sp, #8]
    cc38:	cmp	r3, #0
    cc3c:	beq	cc0c <opt_j+0x18c>
    cc40:	ldr	r3, [pc, #184]	; cd00 <opt_j+0x280>
    cc44:	ldr	r2, [sp, #4]
    cc48:	add	r3, pc, r3
    cc4c:	str	r2, [r3, #876]	; 0x36c
    cc50:	add	sp, sp, #28
    cc54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc58:	cmp	r1, #0
    cc5c:	beq	cb90 <opt_j+0x110>
    cc60:	ldr	fp, [sl, #60]	; 0x3c
    cc64:	b	cb94 <opt_j+0x114>
    cc68:	ldr	r3, [sp, #8]
    cc6c:	cmp	r3, #0
    cc70:	beq	cc0c <opt_j+0x18c>
    cc74:	ldr	r3, [pc, #136]	; cd04 <opt_j+0x284>
    cc78:	ldr	r2, [sp, #4]
    cc7c:	add	r3, pc, r3
    cc80:	str	r2, [r3, #876]	; 0x36c
    cc84:	add	sp, sp, #28
    cc88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc8c:	ldr	r4, [r3, #128]	; 0x80
    cc90:	ldr	r2, [r0, #16]
    cc94:	cmp	r4, #0
    cc98:	beq	ccd8 <opt_j+0x258>
    cc9c:	add	r2, r2, #136	; 0x88
    cca0:	add	ip, r3, #136	; 0x88
    cca4:	mov	r1, #0
    cca8:	mov	r5, #1
    ccac:	ands	r6, r4, r5, lsl r1
    ccb0:	add	r1, r1, #1
    ccb4:	beq	ccc8 <opt_j+0x248>
    ccb8:	ldr	r7, [r2]
    ccbc:	ldr	r6, [ip]
    ccc0:	cmp	r7, r6
    ccc4:	bne	caac <opt_j+0x2c>
    ccc8:	cmp	r1, #18
    cccc:	add	r2, r2, #4
    ccd0:	add	ip, ip, #4
    ccd4:	bne	ccac <opt_j+0x22c>
    ccd8:	ldr	r2, [pc, #40]	; cd08 <opt_j+0x288>
    ccdc:	mov	r1, #0
    cce0:	add	r2, pc, r2
    cce4:	str	r3, [r0, #12]
    cce8:	str	r1, [r2, #876]	; 0x36c
    ccec:	b	caac <opt_j+0x2c>
    ccf0:	.word	0x00023564
    ccf4:	.word	0x000000e8
    ccf8:	.word	0x00023c70
    ccfc:	.word	0x00023b2c
    cd00:	.word	0x00023ae8
    cd04:	.word	0x00023ab4
    cd08:	.word	0x00023a50

0000cd0c <opt_loop>:
    cd0c:	ldr	r3, [pc, #4076]	; dd00 <opt_loop+0xff4>
    cd10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd14:	sub	sp, sp, #180	; 0xb4
    cd18:	add	r3, pc, r3
    cd1c:	mov	r2, r3
    cd20:	str	r3, [sp, #68]	; 0x44
    cd24:	ldr	ip, [pc, #4056]	; dd04 <opt_loop+0xff8>
    cd28:	ldr	r3, [pc, #4056]	; dd08 <opt_loop+0xffc>
    cd2c:	ldr	lr, [pc, #4056]	; dd0c <opt_loop+0x1000>
    cd30:	add	ip, pc, ip
    cd34:	add	lr, pc, lr
    cd38:	str	ip, [sp, #96]	; 0x60
    cd3c:	str	lr, [sp, #64]	; 0x40
    cd40:	ldr	r3, [r2, r3]
    cd44:	mov	fp, #1
    cd48:	str	r3, [sp, #4]
    cd4c:	ldr	r3, [pc, #4028]	; dd10 <opt_loop+0x1004>
    cd50:	str	r0, [sp, #16]
    cd54:	add	r3, pc, r3
    cd58:	str	r3, [sp, #88]	; 0x58
    cd5c:	ldr	r3, [pc, #4016]	; dd14 <opt_loop+0x1008>
    cd60:	str	r1, [sp, #44]	; 0x2c
    cd64:	add	r3, pc, r3
    cd68:	str	r3, [sp, #92]	; 0x5c
    cd6c:	add	r3, ip, #8
    cd70:	str	r3, [sp, #100]	; 0x64
    cd74:	ldr	r4, [sp, #64]	; 0x40
    cd78:	ldr	r2, [sp, #4]
    cd7c:	mov	r1, #0
    cd80:	ldr	r5, [r4, #864]	; 0x360
    cd84:	ldr	r0, [r2]
    cd88:	str	fp, [r4, #876]	; 0x36c
    cd8c:	lsl	r2, r5, #2
    cd90:	bl	e88 <memset@plt>
    cd94:	ldr	r3, [r4]
    cd98:	ldr	r0, [sp, #16]
    cd9c:	add	r3, r3, #1
    cda0:	str	r3, [r4]
    cda4:	bl	bf04 <find_levels_r>
    cda8:	mov	r3, r4
    cdac:	ldr	r4, [r4, #884]	; 0x374
    cdb0:	ldr	r1, [r3, #880]	; 0x370
    cdb4:	mul	r2, r5, r4
    cdb8:	subs	r3, r2, #1
    cdbc:	mvnpl	r0, #0
    cdc0:	bmi	cdd4 <opt_loop+0xc8>
    cdc4:	sub	r3, r3, #1
    cdc8:	cmn	r3, #1
    cdcc:	str	r0, [r1], #4
    cdd0:	bne	cdc4 <opt_loop+0xb8>
    cdd4:	subs	r4, r4, #1
    cdd8:	bmi	ce04 <opt_loop+0xf8>
    cddc:	ldr	lr, [sp, #16]
    cde0:	lsl	r1, r4, #2
    cde4:	mov	r3, r4
    cde8:	mov	ip, #0
    cdec:	ldr	r0, [lr, #104]	; 0x68
    cdf0:	sub	r3, r3, #1
    cdf4:	cmn	r3, #1
    cdf8:	str	ip, [r0, r1]
    cdfc:	sub	r1, r1, #4
    ce00:	bne	cdec <opt_loop+0xe0>
    ce04:	ldr	r3, [sp, #16]
    ce08:	ldr	lr, [r3, #36]	; 0x24
    ce0c:	cmp	lr, #0
    ce10:	lslge	r5, lr, #2
    ce14:	ldrge	r6, [sp, #4]
    ce18:	blt	cecc <opt_loop+0x1c0>
    ce1c:	ldr	r3, [r6]
    ce20:	ldr	ip, [r3, r5]
    ce24:	cmp	ip, #0
    ce28:	beq	cebc <opt_loop+0x1b0>
    ce2c:	ldr	r3, [ip]
    ce30:	ldr	r0, [ip, #104]	; 0x68
    ce34:	and	r7, r3, #31
    ce38:	lsr	r3, r3, #5
    ce3c:	ldr	r1, [r0, r3, lsl #2]
    ce40:	orr	r1, r1, fp, lsl r7
    ce44:	str	r1, [r0, r3, lsl #2]
    ce48:	ldr	r3, [ip, #60]	; 0x3c
    ce4c:	cmp	r3, #0
    ce50:	beq	ceb0 <opt_loop+0x1a4>
    ce54:	cmp	r4, #0
    ce58:	ldr	r0, [r3, #104]	; 0x68
    ce5c:	ldr	r8, [ip, #104]	; 0x68
    ce60:	blt	ceb0 <opt_loop+0x1a4>
    ce64:	mov	r7, r4
    ce68:	ldr	r3, [r0], #4
    ce6c:	ldr	r1, [r8], #4
    ce70:	sub	r7, r7, #1
    ce74:	and	r3, r3, r1
    ce78:	cmn	r7, #1
    ce7c:	str	r3, [r0, #-4]
    ce80:	bne	ce68 <opt_loop+0x15c>
    ce84:	ldr	r3, [ip, #84]	; 0x54
    ce88:	ldr	r8, [ip, #104]	; 0x68
    ce8c:	mov	r7, r4
    ce90:	ldr	r0, [r3, #104]	; 0x68
    ce94:	ldr	r3, [r0], #4
    ce98:	ldr	r1, [r8], #4
    ce9c:	sub	r7, r7, #1
    cea0:	and	r3, r3, r1
    cea4:	cmn	r7, #1
    cea8:	str	r3, [r0, #-4]
    ceac:	bne	ce94 <opt_loop+0x188>
    ceb0:	ldr	ip, [ip, #100]	; 0x64
    ceb4:	cmp	ip, #0
    ceb8:	bne	ce2c <opt_loop+0x120>
    cebc:	sub	lr, lr, #1
    cec0:	cmn	lr, #1
    cec4:	sub	r5, r5, #4
    cec8:	bne	ce1c <opt_loop+0x110>
    cecc:	ldr	r3, [sp, #88]	; 0x58
    ced0:	lsl	r2, r2, #2
    ced4:	mov	r1, #0
    ced8:	ldr	r0, [r3, #888]	; 0x378
    cedc:	bl	e88 <memset@plt>
    cee0:	ldr	r3, [sp, #16]
    cee4:	ldr	ip, [r3, #36]	; 0x24
    cee8:	cmp	ip, #0
    ceec:	lslge	lr, ip, #2
    cef0:	ldrge	r5, [sp, #4]
    cef4:	blt	d160 <opt_loop+0x454>
    cef8:	ldr	r3, [r5]
    cefc:	ldr	r0, [r3, lr]
    cf00:	cmp	r0, #0
    cf04:	beq	cf98 <opt_loop+0x28c>
    cf08:	ldr	r3, [r0]
    cf0c:	ldr	r1, [r0, #108]	; 0x6c
    cf10:	and	r6, r3, #31
    cf14:	lsr	r3, r3, #5
    cf18:	ldr	r2, [r1, r3, lsl #2]
    cf1c:	orr	r2, r2, fp, lsl r6
    cf20:	str	r2, [r1, r3, lsl #2]
    cf24:	ldr	r3, [r0, #60]	; 0x3c
    cf28:	cmp	r3, #0
    cf2c:	beq	cf8c <opt_loop+0x280>
    cf30:	cmp	r4, #0
    cf34:	ldr	r1, [r3, #108]	; 0x6c
    cf38:	ldr	r7, [r0, #108]	; 0x6c
    cf3c:	blt	cf8c <opt_loop+0x280>
    cf40:	mov	r6, r4
    cf44:	ldr	r3, [r1], #4
    cf48:	ldr	r2, [r7], #4
    cf4c:	sub	r6, r6, #1
    cf50:	orr	r3, r3, r2
    cf54:	cmn	r6, #1
    cf58:	str	r3, [r1, #-4]
    cf5c:	bne	cf44 <opt_loop+0x238>
    cf60:	ldr	r3, [r0, #84]	; 0x54
    cf64:	ldr	r7, [r0, #108]	; 0x6c
    cf68:	mov	r6, r4
    cf6c:	ldr	r1, [r3, #108]	; 0x6c
    cf70:	ldr	r3, [r1], #4
    cf74:	ldr	r2, [r7], #4
    cf78:	sub	r6, r6, #1
    cf7c:	orr	r3, r3, r2
    cf80:	cmn	r6, #1
    cf84:	str	r3, [r1, #-4]
    cf88:	bne	cf70 <opt_loop+0x264>
    cf8c:	ldr	r0, [r0, #100]	; 0x64
    cf90:	cmp	r0, #0
    cf94:	bne	cf08 <opt_loop+0x1fc>
    cf98:	sub	ip, ip, #1
    cf9c:	cmn	ip, #1
    cfa0:	sub	lr, lr, #4
    cfa4:	bne	cef8 <opt_loop+0x1ec>
    cfa8:	ldr	r3, [sp, #16]
    cfac:	ldr	r3, [r3, #36]	; 0x24
    cfb0:	cmp	r3, #0
    cfb4:	mov	r2, r3
    cfb8:	str	r3, [sp, #20]
    cfbc:	blt	d160 <opt_loop+0x454>
    cfc0:	ldr	r3, [sp, #4]
    cfc4:	lsl	r1, r2, #2
    cfc8:	mov	r9, #0
    cfcc:	ldr	r3, [r3]
    cfd0:	str	r1, [sp, #24]
    cfd4:	add	r3, r3, r1
    cfd8:	str	r3, [sp, #12]
    cfdc:	str	r2, [sp, #8]
    cfe0:	ldr	r3, [sp, #12]
    cfe4:	ldr	r8, [r3], #-4
    cfe8:	cmp	r8, #0
    cfec:	str	r3, [sp, #12]
    cff0:	beq	d0dc <opt_loop+0x3d0>
    cff4:	ldr	r2, [r8, #4]
    cff8:	cmp	r2, #0
    cffc:	beq	d0a4 <opt_loop+0x398>
    d000:	mov	r7, #0
    d004:	mov	r6, r7
    d008:	mov	r5, r7
    d00c:	str	r2, [sp]
    d010:	b	d060 <opt_loop+0x354>
    d014:	cmp	r0, #17
    d018:	bgt	e544 <opt_loop+0x1838>
    d01c:	lsl	r0, fp, r0
    d020:	tst	r0, r5
    d024:	orreq	r6, r6, r0
    d028:	mov	r1, sl
    d02c:	mov	r0, r4
    d030:	bl	c718 <atomdef.isra.1>
    d034:	cmp	r0, #0
    d038:	blt	d04c <opt_loop+0x340>
    d03c:	lsl	r0, fp, r0
    d040:	tst	r0, r6
    d044:	orreq	r7, r7, r0
    d048:	orr	r5, r5, r0
    d04c:	ldr	r3, [sp]
    d050:	ldr	r3, [r3, #16]
    d054:	cmp	r3, #0
    d058:	str	r3, [sp]
    d05c:	beq	d0b0 <opt_loop+0x3a4>
    d060:	ldr	r3, [sp]
    d064:	ldr	r4, [r3]
    d068:	cmn	r4, #1
    d06c:	beq	d04c <opt_loop+0x340>
    d070:	add	sl, r3, #12
    d074:	mov	r1, sl
    d078:	mov	r0, r4
    d07c:	bl	c840 <atomuse.isra.8>
    d080:	cmp	r0, #0
    d084:	blt	d028 <opt_loop+0x31c>
    d088:	cmp	r0, #18
    d08c:	bne	d014 <opt_loop+0x308>
    d090:	tst	r5, #131072	; 0x20000
    d094:	orreq	r6, r6, #131072	; 0x20000
    d098:	tst	r5, #65536	; 0x10000
    d09c:	orreq	r6, r6, #65536	; 0x10000
    d0a0:	b	d028 <opt_loop+0x31c>
    d0a4:	mov	r7, r2
    d0a8:	mov	r6, r2
    d0ac:	mov	r5, r2
    d0b0:	ldr	r0, [r8, #8]
    d0b4:	and	r3, r0, #7
    d0b8:	cmp	r3, #5
    d0bc:	beq	d698 <opt_loop+0x98c>
    d0c0:	str	r5, [r8, #116]	; 0x74
    d0c4:	str	r7, [r8, #120]	; 0x78
    d0c8:	str	r6, [r8, #124]	; 0x7c
    d0cc:	str	r9, [r8, #128]	; 0x80
    d0d0:	ldr	r8, [r8, #100]	; 0x64
    d0d4:	cmp	r8, #0
    d0d8:	bne	cff4 <opt_loop+0x2e8>
    d0dc:	ldr	r3, [sp, #8]
    d0e0:	sub	r3, r3, #1
    d0e4:	cmn	r3, #1
    d0e8:	str	r3, [sp, #8]
    d0ec:	bne	cfe0 <opt_loop+0x2d4>
    d0f0:	ldr	r3, [sp, #20]
    d0f4:	cmp	r3, #0
    d0f8:	ble	d160 <opt_loop+0x454>
    d0fc:	ldr	r3, [sp, #4]
    d100:	ldr	r0, [r3]
    d104:	ldr	r3, [sp, #24]
    d108:	add	ip, r0, r3
    d10c:	ldr	lr, [r0, #4]!
    d110:	cmp	lr, #0
    d114:	beq	d158 <opt_loop+0x44c>
    d118:	ldr	r3, [lr, #60]	; 0x3c
    d11c:	ldr	r1, [lr, #84]	; 0x54
    d120:	ldr	r2, [lr, #128]	; 0x80
    d124:	ldr	r3, [r3, #124]	; 0x7c
    d128:	ldr	r1, [r1, #124]	; 0x7c
    d12c:	orr	r3, r3, r1
    d130:	ldr	r1, [lr, #120]	; 0x78
    d134:	orr	r3, r3, r2
    d138:	ldr	r2, [lr, #124]	; 0x7c
    d13c:	bic	r1, r3, r1
    d140:	orr	r2, r2, r1
    d144:	str	r3, [lr, #128]	; 0x80
    d148:	str	r2, [lr, #124]	; 0x7c
    d14c:	ldr	lr, [lr, #100]	; 0x64
    d150:	cmp	lr, #0
    d154:	bne	d118 <opt_loop+0x40c>
    d158:	cmp	ip, r0
    d15c:	bne	d10c <opt_loop+0x400>
    d160:	ldr	r2, [sp, #92]	; 0x5c
    d164:	ldr	r4, [r2, #4]
    d168:	ldr	r3, [r2, #896]	; 0x380
    d16c:	ldr	r2, [r2, #892]	; 0x37c
    d170:	mul	r3, r3, r4
    d174:	cmp	r3, #0
    d178:	addgt	r3, r2, r3, lsl #2
    d17c:	mvngt	r1, #0
    d180:	ble	d190 <opt_loop+0x484>
    d184:	str	r1, [r3, #-4]!
    d188:	cmp	r3, r2
    d18c:	bne	d184 <opt_loop+0x478>
    d190:	ldr	r5, [sp, #16]
    d194:	lsl	r4, r4, #2
    d198:	mov	r2, r4
    d19c:	mov	r1, #0
    d1a0:	ldr	r0, [r5, #56]	; 0x38
    d1a4:	bl	e88 <memset@plt>
    d1a8:	mov	r2, r4
    d1ac:	ldr	r0, [r5, #80]	; 0x50
    d1b0:	mov	r1, #0
    d1b4:	bl	e88 <memset@plt>
    d1b8:	ldr	r4, [r5, #36]	; 0x24
    d1bc:	cmp	r4, #0
    d1c0:	lslge	r5, r4, #2
    d1c4:	ldrge	r7, [sp, #4]
    d1c8:	blt	d208 <opt_loop+0x4fc>
    d1cc:	ldr	r3, [r7]
    d1d0:	ldr	r6, [r3, r5]
    d1d4:	cmp	r6, #0
    d1d8:	beq	d1f8 <opt_loop+0x4ec>
    d1dc:	add	r0, r6, #48	; 0x30
    d1e0:	bl	bfa0 <propedom>
    d1e4:	add	r0, r6, #72	; 0x48
    d1e8:	bl	bfa0 <propedom>
    d1ec:	ldr	r6, [r6, #100]	; 0x64
    d1f0:	cmp	r6, #0
    d1f4:	bne	d1dc <opt_loop+0x4d0>
    d1f8:	sub	r4, r4, #1
    d1fc:	cmn	r4, #1
    d200:	sub	r5, r5, #4
    d204:	bne	d1cc <opt_loop+0x4c0>
    d208:	ldr	ip, [sp, #68]	; 0x44
    d20c:	ldr	lr, [sp, #96]	; 0x60
    d210:	ldr	r2, [pc, #2816]	; dd18 <opt_loop+0x100c>
    d214:	mov	r4, #0
    d218:	ldr	r3, [pc, #2812]	; dd1c <opt_loop+0x1010>
    d21c:	str	r4, [lr, #860]	; 0x35c
    d220:	ldr	r2, [ip, r2]
    d224:	ldr	r1, [ip, r3]
    d228:	ldr	r3, [pc, #2800]	; dd20 <opt_loop+0x1014>
    d22c:	ldr	r0, [r2]
    d230:	ldr	r2, [lr, #900]	; 0x384
    d234:	str	r0, [r1]
    d238:	ldr	r9, [ip, r3]
    d23c:	ldr	r3, [sp, #16]
    d240:	mov	r1, r4
    d244:	lsl	r2, r2, #3
    d248:	ldr	r0, [r9]
    d24c:	mov	r5, r3
    d250:	bl	e88 <memset@plt>
    d254:	mov	r1, r4
    d258:	mov	r2, #852	; 0x354
    d25c:	ldr	r0, [sp, #100]	; 0x64
    d260:	bl	e88 <memset@plt>
    d264:	mov	r3, r5
    d268:	ldr	r2, [r3, #36]!	; 0x24
    d26c:	mov	r4, r2
    d270:	mov	r0, r3
    d274:	str	r2, [sp, #32]
    d278:	str	r3, [sp, #56]	; 0x38
    d27c:	bl	c780 <find_inedges.isra.6>
    d280:	cmp	r4, #0
    d284:	blt	e718 <opt_loop+0x1a0c>
    d288:	ldr	r3, [pc, #2708]	; dd24 <opt_loop+0x1018>
    d28c:	ldr	sl, [sp, #44]	; 0x2c
    d290:	add	r3, pc, r3
    d294:	str	r3, [sp, #36]	; 0x24
    d298:	ldr	r3, [pc, #2696]	; dd28 <opt_loop+0x101c>
    d29c:	mov	r8, r9
    d2a0:	add	r3, pc, r3
    d2a4:	str	r3, [sp, #72]	; 0x48
    d2a8:	ldr	r3, [pc, #2684]	; dd2c <opt_loop+0x1020>
    d2ac:	add	r3, pc, r3
    d2b0:	str	r3, [sp, #40]	; 0x28
    d2b4:	ldr	r3, [pc, #2676]	; dd30 <opt_loop+0x1024>
    d2b8:	add	r3, pc, r3
    d2bc:	str	r3, [sp, #76]	; 0x4c
    d2c0:	ldr	r3, [pc, #2668]	; dd34 <opt_loop+0x1028>
    d2c4:	add	r3, pc, r3
    d2c8:	str	r3, [sp, #80]	; 0x50
    d2cc:	ldr	r3, [pc, #2660]	; dd38 <opt_loop+0x102c>
    d2d0:	add	r3, pc, r3
    d2d4:	str	r3, [sp, #84]	; 0x54
    d2d8:	ldr	r3, [sp, #32]
    d2dc:	str	r3, [sp, #60]	; 0x3c
    d2e0:	lsl	r2, r3, #2
    d2e4:	str	r2, [sp, #48]	; 0x30
    d2e8:	ldr	r3, [sp, #4]
    d2ec:	ldr	r2, [sp, #48]	; 0x30
    d2f0:	ldr	r3, [r3]
    d2f4:	ldr	r9, [r3, r2]
    d2f8:	cmp	r9, #0
    d2fc:	beq	d938 <opt_loop+0xc2c>
    d300:	ldr	r4, [r9, #112]	; 0x70
    d304:	cmp	r4, #0
    d308:	beq	e3d4 <opt_loop+0x16c8>
    d30c:	ldr	r1, [r4, #16]
    d310:	add	r5, r9, #136	; 0x88
    d314:	add	r1, r1, #136	; 0x88
    d318:	mov	r0, r5
    d31c:	mov	r2, #72	; 0x48
    d320:	bl	dc8 <memcpy@plt>
    d324:	ldr	r4, [r4, #20]
    d328:	mov	lr, #0
    d32c:	cmp	r4, #0
    d330:	beq	d370 <opt_loop+0x664>
    d334:	mov	r1, r5
    d338:	mov	r3, #0
    d33c:	ldr	ip, [r4, #16]
    d340:	add	r2, r3, #34	; 0x22
    d344:	ldr	r0, [r1]
    d348:	ldr	r2, [ip, r2, lsl #2]
    d34c:	add	r3, r3, #1
    d350:	cmp	r0, r2
    d354:	strne	lr, [r1]
    d358:	cmp	r3, #18
    d35c:	add	r1, r1, #4
    d360:	bne	d33c <opt_loop+0x630>
    d364:	ldr	r4, [r4, #20]
    d368:	cmp	r4, #0
    d36c:	bne	d334 <opt_loop+0x628>
    d370:	ldr	r3, [r9, #200]	; 0xc8
    d374:	ldr	r4, [r9, #4]
    d378:	str	r3, [sp]
    d37c:	ldr	r3, [r9, #204]	; 0xcc
    d380:	cmp	r4, #0
    d384:	str	r3, [sp, #8]
    d388:	beq	e500 <opt_loop+0x17f4>
    d38c:	ldr	r3, [pc, #2472]	; dd3c <opt_loop+0x1030>
    d390:	mvn	r6, #0
    d394:	add	r3, pc, r3
    d398:	str	r3, [sp, #12]
    d39c:	ldr	r3, [pc, #2460]	; dd40 <opt_loop+0x1034>
    d3a0:	add	r3, pc, r3
    d3a4:	str	r3, [sp, #20]
    d3a8:	ldr	r3, [pc, #2452]	; dd44 <opt_loop+0x1038>
    d3ac:	add	r3, pc, r3
    d3b0:	str	r3, [sp, #24]
    d3b4:	ldr	r3, [pc, #2444]	; dd48 <opt_loop+0x103c>
    d3b8:	add	r3, pc, r3
    d3bc:	str	r3, [sp, #28]
    d3c0:	ldr	r3, [r4]
    d3c4:	cmp	r3, #177	; 0xb1
    d3c8:	addls	pc, pc, r3, lsl #2
    d3cc:	b	d6f0 <opt_loop+0x9e4>
    d3d0:	b	df60 <opt_loop+0x1254>
    d3d4:	b	e03c <opt_loop+0x1330>
    d3d8:	b	e024 <opt_loop+0x1318>
    d3dc:	b	dffc <opt_loop+0x12f0>
    d3e0:	b	df7c <opt_loop+0x1270>
    d3e4:	b	d6f0 <opt_loop+0x9e4>
    d3e8:	b	d6f0 <opt_loop+0x9e4>
    d3ec:	b	df50 <opt_loop+0x1244>
    d3f0:	b	d6f0 <opt_loop+0x9e4>
    d3f4:	b	d6f0 <opt_loop+0x9e4>
    d3f8:	b	d6f0 <opt_loop+0x9e4>
    d3fc:	b	d6f0 <opt_loop+0x9e4>
    d400:	b	def8 <opt_loop+0x11ec>
    d404:	b	d6f0 <opt_loop+0x9e4>
    d408:	b	d6f0 <opt_loop+0x9e4>
    d40c:	b	d6f0 <opt_loop+0x9e4>
    d410:	b	d6f0 <opt_loop+0x9e4>
    d414:	b	d6f0 <opt_loop+0x9e4>
    d418:	b	d6f0 <opt_loop+0x9e4>
    d41c:	b	d6f0 <opt_loop+0x9e4>
    d420:	b	df7c <opt_loop+0x1270>
    d424:	b	d6f0 <opt_loop+0x9e4>
    d428:	b	d6f0 <opt_loop+0x9e4>
    d42c:	b	d6f0 <opt_loop+0x9e4>
    d430:	b	d6f0 <opt_loop+0x9e4>
    d434:	b	d6f0 <opt_loop+0x9e4>
    d438:	b	d6f0 <opt_loop+0x9e4>
    d43c:	b	d6f0 <opt_loop+0x9e4>
    d440:	b	def8 <opt_loop+0x11ec>
    d444:	b	d6f0 <opt_loop+0x9e4>
    d448:	b	d6f0 <opt_loop+0x9e4>
    d44c:	b	d6f0 <opt_loop+0x9e4>
    d450:	b	dedc <opt_loop+0x11d0>
    d454:	b	d6f0 <opt_loop+0x9e4>
    d458:	b	d6f0 <opt_loop+0x9e4>
    d45c:	b	d6f0 <opt_loop+0x9e4>
    d460:	b	df7c <opt_loop+0x1270>
    d464:	b	d6f0 <opt_loop+0x9e4>
    d468:	b	d6f0 <opt_loop+0x9e4>
    d46c:	b	d6f0 <opt_loop+0x9e4>
    d470:	b	dedc <opt_loop+0x11d0>
    d474:	b	d6f0 <opt_loop+0x9e4>
    d478:	b	d6f0 <opt_loop+0x9e4>
    d47c:	b	d6f0 <opt_loop+0x9e4>
    d480:	b	def8 <opt_loop+0x11ec>
    d484:	b	d6f0 <opt_loop+0x9e4>
    d488:	b	d6f0 <opt_loop+0x9e4>
    d48c:	b	d6f0 <opt_loop+0x9e4>
    d490:	b	dedc <opt_loop+0x11d0>
    d494:	b	d6f0 <opt_loop+0x9e4>
    d498:	b	d6f0 <opt_loop+0x9e4>
    d49c:	b	d6f0 <opt_loop+0x9e4>
    d4a0:	b	df7c <opt_loop+0x1270>
    d4a4:	b	d6f0 <opt_loop+0x9e4>
    d4a8:	b	d6f0 <opt_loop+0x9e4>
    d4ac:	b	d6f0 <opt_loop+0x9e4>
    d4b0:	b	d6f0 <opt_loop+0x9e4>
    d4b4:	b	d6f0 <opt_loop+0x9e4>
    d4b8:	b	d6f0 <opt_loop+0x9e4>
    d4bc:	b	d6f0 <opt_loop+0x9e4>
    d4c0:	b	def8 <opt_loop+0x11ec>
    d4c4:	b	d6f0 <opt_loop+0x9e4>
    d4c8:	b	d6f0 <opt_loop+0x9e4>
    d4cc:	b	d6f0 <opt_loop+0x9e4>
    d4d0:	b	de9c <opt_loop+0x1190>
    d4d4:	b	d6f0 <opt_loop+0x9e4>
    d4d8:	b	d6f0 <opt_loop+0x9e4>
    d4dc:	b	d6f0 <opt_loop+0x9e4>
    d4e0:	b	df7c <opt_loop+0x1270>
    d4e4:	b	d6f0 <opt_loop+0x9e4>
    d4e8:	b	d6f0 <opt_loop+0x9e4>
    d4ec:	b	d6f0 <opt_loop+0x9e4>
    d4f0:	b	de9c <opt_loop+0x1190>
    d4f4:	b	d6f0 <opt_loop+0x9e4>
    d4f8:	b	d6f0 <opt_loop+0x9e4>
    d4fc:	b	d6f0 <opt_loop+0x9e4>
    d500:	b	def8 <opt_loop+0x11ec>
    d504:	b	d6f0 <opt_loop+0x9e4>
    d508:	b	d6f0 <opt_loop+0x9e4>
    d50c:	b	d6f0 <opt_loop+0x9e4>
    d510:	b	de9c <opt_loop+0x1190>
    d514:	b	d6f0 <opt_loop+0x9e4>
    d518:	b	d6f0 <opt_loop+0x9e4>
    d51c:	b	d6f0 <opt_loop+0x9e4>
    d520:	b	df7c <opt_loop+0x1270>
    d524:	b	d6f0 <opt_loop+0x9e4>
    d528:	b	d6f0 <opt_loop+0x9e4>
    d52c:	b	d6f0 <opt_loop+0x9e4>
    d530:	b	d6f0 <opt_loop+0x9e4>
    d534:	b	d6f0 <opt_loop+0x9e4>
    d538:	b	d6f0 <opt_loop+0x9e4>
    d53c:	b	d6f0 <opt_loop+0x9e4>
    d540:	b	def8 <opt_loop+0x11ec>
    d544:	b	d6f0 <opt_loop+0x9e4>
    d548:	b	d6f0 <opt_loop+0x9e4>
    d54c:	b	d6f0 <opt_loop+0x9e4>
    d550:	b	de18 <opt_loop+0x110c>
    d554:	b	ddc0 <opt_loop+0x10b4>
    d558:	b	d6f0 <opt_loop+0x9e4>
    d55c:	b	d6f0 <opt_loop+0x9e4>
    d560:	b	df7c <opt_loop+0x1270>
    d564:	b	d6f0 <opt_loop+0x9e4>
    d568:	b	d6f0 <opt_loop+0x9e4>
    d56c:	b	d6f0 <opt_loop+0x9e4>
    d570:	b	d6f0 <opt_loop+0x9e4>
    d574:	b	d6f0 <opt_loop+0x9e4>
    d578:	b	d6f0 <opt_loop+0x9e4>
    d57c:	b	d6f0 <opt_loop+0x9e4>
    d580:	b	def8 <opt_loop+0x11ec>
    d584:	b	d6f0 <opt_loop+0x9e4>
    d588:	b	d6f0 <opt_loop+0x9e4>
    d58c:	b	d6f0 <opt_loop+0x9e4>
    d590:	b	d6f0 <opt_loop+0x9e4>
    d594:	b	d6f0 <opt_loop+0x9e4>
    d598:	b	d6f0 <opt_loop+0x9e4>
    d59c:	b	d6f0 <opt_loop+0x9e4>
    d5a0:	b	df7c <opt_loop+0x1270>
    d5a4:	b	d6f0 <opt_loop+0x9e4>
    d5a8:	b	d6f0 <opt_loop+0x9e4>
    d5ac:	b	d6f0 <opt_loop+0x9e4>
    d5b0:	b	d6f0 <opt_loop+0x9e4>
    d5b4:	b	d6f0 <opt_loop+0x9e4>
    d5b8:	b	d6f0 <opt_loop+0x9e4>
    d5bc:	b	d6f0 <opt_loop+0x9e4>
    d5c0:	b	def8 <opt_loop+0x11ec>
    d5c4:	b	d6f0 <opt_loop+0x9e4>
    d5c8:	b	d6f0 <opt_loop+0x9e4>
    d5cc:	b	d6f0 <opt_loop+0x9e4>
    d5d0:	b	de70 <opt_loop+0x1164>
    d5d4:	b	d6f0 <opt_loop+0x9e4>
    d5d8:	b	d6f0 <opt_loop+0x9e4>
    d5dc:	b	d6f0 <opt_loop+0x9e4>
    d5e0:	b	dd90 <opt_loop+0x1084>
    d5e4:	b	d6f0 <opt_loop+0x9e4>
    d5e8:	b	d6f0 <opt_loop+0x9e4>
    d5ec:	b	dd70 <opt_loop+0x1064>
    d5f0:	b	d6f0 <opt_loop+0x9e4>
    d5f4:	b	d6f0 <opt_loop+0x9e4>
    d5f8:	b	d6f0 <opt_loop+0x9e4>
    d5fc:	b	d6f0 <opt_loop+0x9e4>
    d600:	b	d6f0 <opt_loop+0x9e4>
    d604:	b	d6f0 <opt_loop+0x9e4>
    d608:	b	d6f0 <opt_loop+0x9e4>
    d60c:	b	d6f0 <opt_loop+0x9e4>
    d610:	b	d6f0 <opt_loop+0x9e4>
    d614:	b	d6f0 <opt_loop+0x9e4>
    d618:	b	d6f0 <opt_loop+0x9e4>
    d61c:	b	d6f0 <opt_loop+0x9e4>
    d620:	b	d6f0 <opt_loop+0x9e4>
    d624:	b	d6f0 <opt_loop+0x9e4>
    d628:	b	d6f0 <opt_loop+0x9e4>
    d62c:	b	d6f0 <opt_loop+0x9e4>
    d630:	b	d6f0 <opt_loop+0x9e4>
    d634:	b	d6f0 <opt_loop+0x9e4>
    d638:	b	d6f0 <opt_loop+0x9e4>
    d63c:	b	d6f0 <opt_loop+0x9e4>
    d640:	b	d6f0 <opt_loop+0x9e4>
    d644:	b	d6f0 <opt_loop+0x9e4>
    d648:	b	d6f0 <opt_loop+0x9e4>
    d64c:	b	d6f0 <opt_loop+0x9e4>
    d650:	b	d6f0 <opt_loop+0x9e4>
    d654:	b	d6f0 <opt_loop+0x9e4>
    d658:	b	d6f0 <opt_loop+0x9e4>
    d65c:	b	d6f0 <opt_loop+0x9e4>
    d660:	b	d6f0 <opt_loop+0x9e4>
    d664:	b	d6f0 <opt_loop+0x9e4>
    d668:	b	d6f0 <opt_loop+0x9e4>
    d66c:	b	d6f0 <opt_loop+0x9e4>
    d670:	b	d6f0 <opt_loop+0x9e4>
    d674:	b	d6f0 <opt_loop+0x9e4>
    d678:	b	d6f0 <opt_loop+0x9e4>
    d67c:	b	d6f0 <opt_loop+0x9e4>
    d680:	b	d6f0 <opt_loop+0x9e4>
    d684:	b	d6f0 <opt_loop+0x9e4>
    d688:	b	d6f0 <opt_loop+0x9e4>
    d68c:	b	d6f0 <opt_loop+0x9e4>
    d690:	b	d6f0 <opt_loop+0x9e4>
    d694:	b	d6c8 <opt_loop+0x9bc>
    d698:	add	r1, r8, #20
    d69c:	bl	c840 <atomuse.isra.8>
    d6a0:	cmp	r0, #0
    d6a4:	blt	d0c0 <opt_loop+0x3b4>
    d6a8:	cmp	r0, #18
    d6ac:	beq	e3b0 <opt_loop+0x16a4>
    d6b0:	cmp	r0, #17
    d6b4:	bgt	e544 <opt_loop+0x1838>
    d6b8:	lsl	r0, fp, r0
    d6bc:	tst	r0, r5
    d6c0:	orreq	r6, r6, r0
    d6c4:	b	d0c0 <opt_loop+0x3b4>
    d6c8:	mov	r2, #0
    d6cc:	ldr	r1, [r4, #12]
    d6d0:	mov	r0, #177	; 0xb1
    d6d4:	bl	c03c <F>
    d6d8:	cmp	sl, #0
    d6dc:	beq	d6ec <opt_loop+0x9e0>
    d6e0:	ldr	r3, [r9, #204]	; 0xcc
    d6e4:	cmp	r0, r3
    d6e8:	beq	de68 <opt_loop+0x115c>
    d6ec:	str	r0, [r9, #204]	; 0xcc
    d6f0:	ldr	r4, [r4, #16]
    d6f4:	cmp	r4, #0
    d6f8:	bne	d3c0 <opt_loop+0x6b4>
    d6fc:	cmp	sl, #0
    d700:	ldr	r4, [r9, #4]
    d704:	beq	d76c <opt_loop+0xa60>
    d708:	ldr	r2, [sp]
    d70c:	ldr	r1, [r9, #128]	; 0x80
    d710:	cmp	r2, #0
    d714:	clz	r3, r1
    d718:	lsr	r3, r3, #5
    d71c:	moveq	r3, #0
    d720:	cmp	r3, #0
    d724:	beq	d75c <opt_loop+0xa50>
    d728:	ldr	r1, [sp, #8]
    d72c:	ldr	r3, [r9, #200]	; 0xc8
    d730:	cmp	r1, #0
    d734:	sub	r2, r3, r2
    d738:	clz	r2, r2
    d73c:	lsr	r2, r2, #5
    d740:	moveq	r2, #0
    d744:	cmp	r2, #0
    d748:	beq	d75c <opt_loop+0xa50>
    d74c:	ldr	r3, [r9, #204]	; 0xcc
    d750:	cmp	r1, r3
    d754:	ldreq	r3, [r9, #8]
    d758:	beq	e058 <opt_loop+0x134c>
    d75c:	ldr	r3, [r9, #8]
    d760:	and	r2, r3, #7
    d764:	cmp	r2, #6
    d768:	beq	e058 <opt_loop+0x134c>
    d76c:	cmp	r4, #0
    d770:	beq	d870 <opt_loop+0xb64>
    d774:	ldr	r3, [sp, #40]	; 0x28
    d778:	ldr	lr, [r4]
    d77c:	ldr	r0, [r4, #16]
    d780:	ldr	r5, [r3, #876]	; 0x36c
    d784:	mov	ip, #0
    d788:	mov	r7, #135	; 0x87
    d78c:	mov	r3, lr
    d790:	mov	r1, r4
    d794:	b	d7a4 <opt_loop+0xa98>
    d798:	ldr	r3, [r0]
    d79c:	mov	r1, r0
    d7a0:	ldr	r0, [r0, #16]
    d7a4:	cmn	r3, #1
    d7a8:	bne	e094 <opt_loop+0x1388>
    d7ac:	cmp	r0, #0
    d7b0:	bne	d798 <opt_loop+0xa8c>
    d7b4:	cmp	ip, #0
    d7b8:	bne	e708 <opt_loop+0x19fc>
    d7bc:	ldr	r2, [r9, #8]
    d7c0:	cmp	r2, #21
    d7c4:	beq	e120 <opt_loop+0x1414>
    d7c8:	cmp	r2, #69	; 0x45
    d7cc:	beq	e190 <opt_loop+0x1484>
    d7d0:	ldr	r3, [r8]
    d7d4:	ldr	r1, [r9, #204]	; 0xcc
    d7d8:	add	r0, r3, r1, lsl #3
    d7dc:	ldr	r1, [r3, r1, lsl #3]
    d7e0:	cmp	r1, #0
    d7e4:	beq	d800 <opt_loop+0xaf4>
    d7e8:	tst	r2, #8
    d7ec:	beq	e1b8 <opt_loop+0x14ac>
    d7f0:	ldr	r1, [r0, #4]
    d7f4:	bic	r2, r2, #8
    d7f8:	str	r1, [r9, #20]
    d7fc:	str	r2, [r9, #8]
    d800:	ldr	r2, [r9, #200]	; 0xc8
    d804:	ldr	r1, [r3, r2, lsl #3]
    d808:	add	r3, r3, r2, lsl #3
    d80c:	cmp	r1, #0
    d810:	beq	d870 <opt_loop+0xb64>
    d814:	ldr	r2, [r9, #8]
    d818:	tst	r2, #8
    d81c:	bne	d870 <opt_loop+0xb64>
    d820:	and	r2, r2, #240	; 0xf0
    d824:	cmp	r2, #32
    d828:	ldr	r3, [r3, #4]
    d82c:	beq	e1e0 <opt_loop+0x14d4>
    d830:	ble	e4e4 <opt_loop+0x17d8>
    d834:	cmp	r2, #48	; 0x30
    d838:	beq	e548 <opt_loop+0x183c>
    d83c:	cmp	r2, #64	; 0x40
    d840:	bne	e544 <opt_loop+0x1838>
    d844:	ldr	r2, [r9, #20]
    d848:	and	r3, r3, r2
    d84c:	ldr	r2, [r9, #84]	; 0x54
    d850:	ldr	r1, [r9, #60]	; 0x3c
    d854:	cmp	r2, r1
    d858:	movne	r0, #0
    d85c:	ldrne	ip, [sp, #84]	; 0x54
    d860:	strne	r0, [ip, #876]	; 0x36c
    d864:	cmp	r3, #0
    d868:	strne	r1, [r9, #84]	; 0x54
    d86c:	streq	r2, [r9, #60]	; 0x3c
    d870:	add	r5, sp, #104	; 0x68
    d874:	mov	r0, r5
    d878:	mov	r2, #72	; 0x48
    d87c:	mov	r1, #0
    d880:	bl	e88 <memset@plt>
    d884:	ldr	r4, [r9, #4]
    d888:	cmp	r4, #0
    d88c:	beq	d8a8 <opt_loop+0xb9c>
    d890:	mov	r0, r4
    d894:	mov	r1, r5
    d898:	bl	c8e8 <deadstmt>
    d89c:	ldr	r4, [r4, #16]
    d8a0:	cmp	r4, #0
    d8a4:	bne	d890 <opt_loop+0xb84>
    d8a8:	mov	r1, r5
    d8ac:	add	r0, r9, #8
    d8b0:	bl	c8e8 <deadstmt>
    d8b4:	ldr	r3, [sp, #36]	; 0x24
    d8b8:	mov	lr, #0
    d8bc:	mov	r2, lr
    d8c0:	ldr	r4, [r3, #876]	; 0x36c
    d8c4:	mov	r6, lr
    d8c8:	add	r3, sp, #100	; 0x64
    d8cc:	add	ip, sp, #172	; 0xac
    d8d0:	mvn	r5, #0
    d8d4:	ldr	r1, [r3, #4]!
    d8d8:	cmp	r1, #0
    d8dc:	beq	d8f4 <opt_loop+0xbe8>
    d8e0:	ldr	r0, [r9, #128]	; 0x80
    d8e4:	ands	r0, r0, fp, lsl r2
    d8e8:	moveq	lr, fp
    d8ec:	moveq	r4, r6
    d8f0:	streq	r5, [r1]
    d8f4:	cmp	ip, r3
    d8f8:	add	r2, r2, #1
    d8fc:	bne	d8d4 <opt_loop+0xbc8>
    d900:	cmp	lr, #0
    d904:	ldrne	r3, [sp, #72]	; 0x48
    d908:	strne	r4, [r3, #876]	; 0x36c
    d90c:	ldr	r3, [r9, #8]
    d910:	ands	r2, r3, #8
    d914:	beq	e07c <opt_loop+0x1370>
    d918:	ldr	r2, [r9, #204]	; 0xcc
    d91c:	str	r2, [r9, #132]	; 0x84
    d920:	rsb	r2, r3, #0
    d924:	str	r3, [r9, #52]	; 0x34
    d928:	str	r2, [r9, #76]	; 0x4c
    d92c:	ldr	r9, [r9, #100]	; 0x64
    d930:	cmp	r9, #0
    d934:	bne	d300 <opt_loop+0x5f4>
    d938:	ldr	r3, [sp, #60]	; 0x3c
    d93c:	sub	r3, r3, #1
    d940:	str	r3, [sp, #60]	; 0x3c
    d944:	cmn	r3, #1
    d948:	ldr	r3, [sp, #48]	; 0x30
    d94c:	sub	r3, r3, #4
    d950:	str	r3, [sp, #48]	; 0x30
    d954:	bne	d2e8 <opt_loop+0x5dc>
    d958:	ldr	r3, [sp, #44]	; 0x2c
    d95c:	cmp	r3, #0
    d960:	bne	dce4 <opt_loop+0xfd8>
    d964:	ldr	r3, [sp, #32]
    d968:	cmp	r3, #0
    d96c:	ble	e724 <opt_loop+0x1a18>
    d970:	ldr	r6, [sp, #4]
    d974:	mov	r4, #1
    d978:	ldr	r3, [r6]
    d97c:	ldr	r5, [r3, r4, lsl #2]
    d980:	cmp	r5, #0
    d984:	beq	d9a4 <opt_loop+0xc98>
    d988:	add	r0, r5, #48	; 0x30
    d98c:	bl	ca80 <opt_j>
    d990:	add	r0, r5, #72	; 0x48
    d994:	bl	ca80 <opt_j>
    d998:	ldr	r5, [r5, #100]	; 0x64
    d99c:	cmp	r5, #0
    d9a0:	bne	d988 <opt_loop+0xc7c>
    d9a4:	ldr	r3, [sp, #32]
    d9a8:	add	r4, r4, #1
    d9ac:	cmp	r3, r4
    d9b0:	bge	d978 <opt_loop+0xc6c>
    d9b4:	ldr	r0, [sp, #56]	; 0x38
    d9b8:	bl	c780 <find_inedges.isra.6>
    d9bc:	ldr	r3, [pc, #904]	; dd4c <opt_loop+0x1040>
    d9c0:	ldr	r2, [sp, #32]
    d9c4:	add	r3, pc, r3
    d9c8:	ldr	ip, [sp, #44]	; 0x2c
    d9cc:	add	r2, r2, #1
    d9d0:	ldr	sl, [r3, #876]	; 0x36c
    d9d4:	str	r2, [sp, #24]
    d9d8:	mov	r3, #1
    d9dc:	mov	r2, #0
    d9e0:	str	r2, [sp]
    d9e4:	str	r3, [sp, #12]
    d9e8:	str	sl, [sp, #8]
    d9ec:	ldr	r3, [sp, #4]
    d9f0:	ldr	r2, [sp, #12]
    d9f4:	ldr	r3, [r3]
    d9f8:	ldr	sl, [r3, r2, lsl #2]
    d9fc:	cmp	sl, #0
    da00:	beq	dcbc <opt_loop+0xfb0>
    da04:	ldr	r3, [sl, #112]	; 0x70
    da08:	cmp	r3, #0
    da0c:	beq	dcb0 <opt_loop+0xfa4>
    da10:	ldr	r0, [r3, #16]
    da14:	ldr	r3, [r3, #20]
    da18:	cmp	r3, #0
    da1c:	ldr	r1, [r0, #200]	; 0xc8
    da20:	beq	da58 <opt_loop+0xd4c>
    da24:	ldr	r2, [r3, #16]
    da28:	ldr	r2, [r2, #200]	; 0xc8
    da2c:	cmp	r1, r2
    da30:	bne	db74 <opt_loop+0xe68>
    da34:	mov	r2, r3
    da38:	b	da4c <opt_loop+0xd40>
    da3c:	ldr	lr, [r2, #16]
    da40:	ldr	lr, [lr, #200]	; 0xc8
    da44:	cmp	r1, lr
    da48:	bne	db74 <opt_loop+0xe68>
    da4c:	ldr	r2, [r2, #20]
    da50:	cmp	r2, #0
    da54:	bne	da3c <opt_loop+0xd30>
    da58:	ldr	r2, [r0, #60]	; 0x3c
    da5c:	cmp	r2, sl
    da60:	addeq	r6, r0, #60	; 0x3c
    da64:	moveq	r2, sl
    da68:	beq	da7c <opt_loop+0xd70>
    da6c:	ldr	r2, [r0, #84]	; 0x54
    da70:	add	r6, r0, #84	; 0x54
    da74:	cmp	r2, #0
    da78:	beq	db6c <opt_loop+0xe60>
    da7c:	ldr	r4, [r2, #60]	; 0x3c
    da80:	ldr	lr, [sl, #60]	; 0x3c
    da84:	cmp	r4, lr
    da88:	bne	db6c <opt_loop+0xe60>
    da8c:	ldr	r9, [sl]
    da90:	ldr	r5, [r2, #104]	; 0x68
    da94:	and	lr, r9, #31
    da98:	lsr	r9, r9, #5
    da9c:	lsl	lr, fp, lr
    daa0:	ldr	r7, [r5, r9, lsl #2]
    daa4:	lsl	r5, r9, #2
    daa8:	tst	lr, r7
    daac:	beq	db6c <opt_loop+0xe60>
    dab0:	mov	r7, fp
    dab4:	b	dae8 <opt_loop+0xddc>
    dab8:	add	r6, r2, #84	; 0x54
    dabc:	ldr	r2, [r2, #84]	; 0x54
    dac0:	cmp	r2, #0
    dac4:	beq	db6c <opt_loop+0xe60>
    dac8:	ldr	r7, [r2, #60]	; 0x3c
    dacc:	cmp	r7, r4
    dad0:	bne	db6c <opt_loop+0xe60>
    dad4:	ldr	r8, [r2, #104]	; 0x68
    dad8:	mov	r7, ip
    dadc:	ldr	r8, [r8, r5]
    dae0:	tst	lr, r8
    dae4:	beq	db6c <opt_loop+0xe60>
    dae8:	ldr	r8, [r2, #200]	; 0xc8
    daec:	cmp	r1, r8
    daf0:	beq	dab8 <opt_loop+0xdac>
    daf4:	ldr	r8, [r2, #84]	; 0x54
    daf8:	str	r5, [sp, #20]
    dafc:	cmp	r8, #0
    db00:	beq	db6c <opt_loop+0xe60>
    db04:	ldr	r5, [r8, #60]	; 0x3c
    db08:	cmp	r5, r4
    db0c:	bne	db6c <opt_loop+0xe60>
    db10:	ldr	r5, [r8, #104]	; 0x68
    db14:	ldr	r9, [r5, r9, lsl #2]
    db18:	tst	lr, r9
    db1c:	beq	db6c <opt_loop+0xe60>
    db20:	ldr	r9, [r8, #200]	; 0xc8
    db24:	cmp	r1, r9
    db28:	ldrne	r5, [sp, #20]
    db2c:	bne	db60 <opt_loop+0xe54>
    db30:	b	e740 <opt_loop+0x1a34>
    db34:	ldr	r2, [r9, #60]	; 0x3c
    db38:	cmp	r2, r4
    db3c:	bne	db6c <opt_loop+0xe60>
    db40:	ldr	r2, [r9, #104]	; 0x68
    db44:	ldr	r2, [r2, r5]
    db48:	tst	lr, r2
    db4c:	beq	db6c <opt_loop+0xe60>
    db50:	ldr	r2, [r9, #200]	; 0xc8
    db54:	cmp	r1, r2
    db58:	beq	e5dc <opt_loop+0x18d0>
    db5c:	mov	r8, r9
    db60:	ldr	r9, [r8, #84]	; 0x54
    db64:	cmp	r9, #0
    db68:	bne	db34 <opt_loop+0xe28>
    db6c:	cmp	r3, #0
    db70:	beq	dba4 <opt_loop+0xe98>
    db74:	ldr	r2, [r3, #16]
    db78:	ldr	lr, [r2, #200]	; 0xc8
    db7c:	cmp	r1, lr
    db80:	beq	db98 <opt_loop+0xe8c>
    db84:	b	dcb0 <opt_loop+0xfa4>
    db88:	ldr	r2, [r3, #16]
    db8c:	ldr	r2, [r2, #200]	; 0xc8
    db90:	cmp	r2, lr
    db94:	bne	dcb0 <opt_loop+0xfa4>
    db98:	ldr	r3, [r3, #20]
    db9c:	cmp	r3, #0
    dba0:	bne	db88 <opt_loop+0xe7c>
    dba4:	ldr	r3, [r0, #60]	; 0x3c
    dba8:	cmp	r3, sl
    dbac:	addeq	r0, r0, #60	; 0x3c
    dbb0:	moveq	r3, sl
    dbb4:	beq	dbc8 <opt_loop+0xebc>
    dbb8:	ldr	r3, [r0, #84]	; 0x54
    dbbc:	add	r0, r0, #84	; 0x54
    dbc0:	cmp	r3, #0
    dbc4:	beq	dcb0 <opt_loop+0xfa4>
    dbc8:	ldr	r4, [sl, #84]	; 0x54
    dbcc:	ldr	r2, [r3, #84]	; 0x54
    dbd0:	cmp	r4, r2
    dbd4:	bne	dcb0 <opt_loop+0xfa4>
    dbd8:	ldr	r7, [sl]
    dbdc:	ldr	lr, [r3, #104]	; 0x68
    dbe0:	and	r2, r7, #31
    dbe4:	lsr	r7, r7, #5
    dbe8:	lsl	r2, fp, r2
    dbec:	ldr	r5, [lr, r7, lsl #2]
    dbf0:	lsl	lr, r7, #2
    dbf4:	tst	r2, r5
    dbf8:	beq	dcb0 <opt_loop+0xfa4>
    dbfc:	mov	r5, fp
    dc00:	b	dc34 <opt_loop+0xf28>
    dc04:	add	r0, r3, #60	; 0x3c
    dc08:	ldr	r3, [r3, #60]	; 0x3c
    dc0c:	cmp	r3, #0
    dc10:	beq	dcb0 <opt_loop+0xfa4>
    dc14:	ldr	r5, [r3, #84]	; 0x54
    dc18:	cmp	r5, r4
    dc1c:	bne	dcb0 <opt_loop+0xfa4>
    dc20:	ldr	r6, [r3, #104]	; 0x68
    dc24:	mov	r5, ip
    dc28:	ldr	r6, [r6, lr]
    dc2c:	tst	r2, r6
    dc30:	beq	dcb0 <opt_loop+0xfa4>
    dc34:	ldr	r6, [r3, #200]	; 0xc8
    dc38:	cmp	r1, r6
    dc3c:	beq	dc04 <opt_loop+0xef8>
    dc40:	ldr	r6, [r3, #60]	; 0x3c
    dc44:	cmp	r6, #0
    dc48:	beq	dcb0 <opt_loop+0xfa4>
    dc4c:	ldr	r8, [r6, #84]	; 0x54
    dc50:	cmp	r8, r4
    dc54:	bne	dcb0 <opt_loop+0xfa4>
    dc58:	ldr	r4, [r6, #104]	; 0x68
    dc5c:	ldr	r4, [r4, r7, lsl #2]
    dc60:	tst	r2, r4
    dc64:	beq	dcb0 <opt_loop+0xfa4>
    dc68:	ldr	r4, [r6, #200]	; 0xc8
    dc6c:	cmp	r1, r4
    dc70:	bne	dca4 <opt_loop+0xf98>
    dc74:	b	e758 <opt_loop+0x1a4c>
    dc78:	ldr	r3, [r4, #84]	; 0x54
    dc7c:	cmp	r3, r8
    dc80:	bne	dcb0 <opt_loop+0xfa4>
    dc84:	ldr	r3, [r4, #104]	; 0x68
    dc88:	ldr	r3, [r3, lr]
    dc8c:	tst	r2, r3
    dc90:	beq	dcb0 <opt_loop+0xfa4>
    dc94:	ldr	r3, [r4, #200]	; 0xc8
    dc98:	cmp	r1, r3
    dc9c:	beq	e64c <opt_loop+0x1940>
    dca0:	mov	r6, r4
    dca4:	ldr	r4, [r6, #60]	; 0x3c
    dca8:	cmp	r4, #0
    dcac:	bne	dc78 <opt_loop+0xf6c>
    dcb0:	ldr	sl, [sl, #100]	; 0x64
    dcb4:	cmp	sl, #0
    dcb8:	bne	da04 <opt_loop+0xcf8>
    dcbc:	ldr	r3, [sp, #12]
    dcc0:	ldr	r2, [sp, #24]
    dcc4:	add	r3, r3, #1
    dcc8:	cmp	r3, r2
    dccc:	str	r3, [sp, #12]
    dcd0:	bne	d9ec <opt_loop+0xce0>
    dcd4:	ldr	r3, [sp]
    dcd8:	ldr	sl, [sp, #8]
    dcdc:	cmp	r3, #0
    dce0:	bne	e748 <opt_loop+0x1a3c>
    dce4:	ldr	r3, [pc, #100]	; dd50 <opt_loop+0x1044>
    dce8:	add	r3, pc, r3
    dcec:	ldr	r3, [r3, #876]	; 0x36c
    dcf0:	cmp	r3, #0
    dcf4:	beq	cd74 <opt_loop+0x68>
    dcf8:	add	sp, sp, #180	; 0xb4
    dcfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dd00:	.word	0x000232e0
    dd04:	.word	0x00023a00
    dd08:	.word	0x000000c8
    dd0c:	.word	0x000239fc
    dd10:	.word	0x000239dc
    dd14:	.word	0x000239cc
    dd18:	.word	0x000000fc
    dd1c:	.word	0x000000f0
    dd20:	.word	0x00000108
    dd24:	.word	0x000234a0
    dd28:	.word	0x00023490
    dd2c:	.word	0x00023484
    dd30:	.word	0x00023478
    dd34:	.word	0x0002346c
    dd38:	.word	0x00023460
    dd3c:	.word	0x0002339c
    dd40:	.word	0x00023390
    dd44:	.word	0x00023384
    dd48:	.word	0x00023378
    dd4c:	.word	0x00022d6c
    dd50:	.word	0x00022a48
    dd54:	.word	0x000226c8
    dd58:	.word	0x000225b8
    dd5c:	.word	0x0002219c
    dd60:	.word	0x00022174
    dd64:	.word	0x00022060
    dd68:	.word	0x00022024
    dd6c:	.word	0x00021fe4
    dd70:	cmp	sl, #0
    dd74:	ldr	r3, [r9, #204]	; 0xcc
    dd78:	beq	dd88 <opt_loop+0x107c>
    dd7c:	ldr	r2, [r9, #200]	; 0xc8
    dd80:	cmp	r3, r2
    dd84:	beq	de68 <opt_loop+0x115c>
    dd88:	str	r3, [r9, #200]	; 0xc8
    dd8c:	b	d6f0 <opt_loop+0x9e4>
    dd90:	cmp	sl, #0
    dd94:	ldr	r1, [r9, #200]	; 0xc8
    dd98:	mov	r2, #0
    dd9c:	beq	ddb0 <opt_loop+0x10a4>
    dda0:	ldr	r3, [r8]
    dda4:	ldr	r3, [r3, r1, lsl #3]
    dda8:	cmp	r3, #0
    ddac:	bne	e3ec <opt_loop+0x16e0>
    ddb0:	mov	r0, #132	; 0x84
    ddb4:	bl	c03c <F>
    ddb8:	str	r0, [r9, #200]	; 0xc8
    ddbc:	b	d6f0 <opt_loop+0x9e4>
    ddc0:	ldr	r3, [r4, #12]
    ddc4:	cmp	sl, #0
    ddc8:	ldr	r3, [r5, r3, lsl #2]
    ddcc:	beq	de10 <opt_loop+0x1104>
    ddd0:	ldr	r2, [r8]
    ddd4:	lsl	r0, r3, #3
    ddd8:	ldr	r2, [r2, r3, lsl #3]
    dddc:	cmp	r2, #0
    dde0:	beq	de04 <opt_loop+0x10f8>
    dde4:	str	fp, [r4]
    dde8:	ldr	r2, [r8]
    ddec:	mov	r1, #0
    ddf0:	add	r2, r2, r0
    ddf4:	ldr	r0, [sp, #12]
    ddf8:	ldr	r2, [r2, #4]
    ddfc:	str	r1, [r0, #876]	; 0x36c
    de00:	str	r2, [r4, #12]
    de04:	ldr	r2, [r9, #204]	; 0xcc
    de08:	cmp	r3, r2
    de0c:	beq	de68 <opt_loop+0x115c>
    de10:	str	r3, [r9, #204]	; 0xcc
    de14:	b	d6f0 <opt_loop+0x9e4>
    de18:	ldr	r3, [r4, #12]
    de1c:	cmp	sl, #0
    de20:	ldr	r3, [r5, r3, lsl #2]
    de24:	beq	dd88 <opt_loop+0x107c>
    de28:	ldr	r2, [r8]
    de2c:	lsl	r0, r3, #3
    de30:	ldr	r2, [r2, r3, lsl #3]
    de34:	cmp	r2, #0
    de38:	beq	dd7c <opt_loop+0x1070>
    de3c:	mov	r1, #0
    de40:	str	r1, [r4]
    de44:	ldr	r2, [r8]
    de48:	ldr	ip, [sp, #20]
    de4c:	add	r2, r2, r0
    de50:	ldr	r2, [r2, #4]
    de54:	str	r1, [ip, #876]	; 0x36c
    de58:	str	r2, [r4, #12]
    de5c:	ldr	r2, [r9, #200]	; 0xc8
    de60:	cmp	r3, r2
    de64:	bne	dd88 <opt_loop+0x107c>
    de68:	str	r6, [r4]
    de6c:	b	d6f0 <opt_loop+0x9e4>
    de70:	mov	r2, #0
    de74:	mov	r1, r2
    de78:	mov	r0, #128	; 0x80
    de7c:	bl	c03c <F>
    de80:	cmp	sl, #0
    de84:	beq	de94 <opt_loop+0x1188>
    de88:	ldr	r3, [r9, #200]	; 0xc8
    de8c:	cmp	r0, r3
    de90:	beq	de68 <opt_loop+0x115c>
    de94:	str	r0, [r9, #200]	; 0xc8
    de98:	b	d6f0 <opt_loop+0x9e4>
    de9c:	cmp	sl, #0
    dea0:	ldr	r2, [r9, #204]	; 0xcc
    dea4:	beq	e3c4 <opt_loop+0x16b8>
    dea8:	ldr	r0, [r8]
    deac:	lsl	r1, r2, #3
    deb0:	ldr	r0, [r0, r2, lsl #3]
    deb4:	cmp	r0, #0
    deb8:	bne	e420 <opt_loop+0x1714>
    debc:	mov	r0, r3
    dec0:	ldr	r1, [r4, #12]
    dec4:	bl	c03c <F>
    dec8:	ldr	r3, [r9, #200]	; 0xc8
    decc:	cmp	r3, r0
    ded0:	bne	de94 <opt_loop+0x1188>
    ded4:	str	r6, [r4]
    ded8:	b	d6f0 <opt_loop+0x9e4>
    dedc:	mov	r0, r3
    dee0:	mov	r2, #0
    dee4:	ldr	r1, [r4, #12]
    dee8:	bl	c03c <F>
    deec:	cmp	sl, #0
    def0:	bne	de88 <opt_loop+0x117c>
    def4:	b	de94 <opt_loop+0x1188>
    def8:	cmp	sl, #0
    defc:	beq	e39c <opt_loop+0x1690>
    df00:	ldr	r0, [r8]
    df04:	ldr	r2, [r9, #204]	; 0xcc
    df08:	and	ip, r3, #240	; 0xf0
    df0c:	ldr	r1, [r0, r2, lsl #3]
    df10:	cmp	r1, #0
    df14:	ldr	r1, [r9, #200]	; 0xc8
    df18:	beq	e348 <opt_loop+0x163c>
    df1c:	ldr	r3, [r0, r1, lsl #3]
    df20:	cmp	r3, #0
    df24:	beq	e490 <opt_loop+0x1784>
    df28:	mov	r3, r2
    df2c:	mov	r2, r1
    df30:	add	r1, r4, #12
    df34:	mov	r0, r4
    df38:	bl	c96c <fold_op.isra.10>
    df3c:	mov	r2, #0
    df40:	mov	r0, r2
    df44:	ldr	r1, [r4, #12]
    df48:	bl	c03c <F>
    df4c:	b	de94 <opt_loop+0x1188>
    df50:	cmp	sl, #0
    df54:	ldr	r3, [r9, #200]	; 0xc8
    df58:	bne	de04 <opt_loop+0x10f8>
    df5c:	b	de10 <opt_loop+0x1104>
    df60:	mov	r2, #0
    df64:	mov	r0, r2
    df68:	ldr	r1, [r4, #12]
    df6c:	bl	c03c <F>
    df70:	cmp	sl, #0
    df74:	bne	de88 <opt_loop+0x117c>
    df78:	b	de94 <opt_loop+0x1188>
    df7c:	cmp	sl, #0
    df80:	ldr	r1, [r4, #12]
    df84:	beq	e418 <opt_loop+0x170c>
    df88:	cmp	r1, #0
    df8c:	bne	dfbc <opt_loop+0x12b0>
    df90:	and	r2, r3, #224	; 0xe0
    df94:	and	r0, r3, #176	; 0xb0
    df98:	cmp	r0, #0
    df9c:	cmpne	r2, #96	; 0x60
    dfa0:	moveq	r2, #1
    dfa4:	movne	r2, #0
    dfa8:	beq	de68 <opt_loop+0x115c>
    dfac:	and	r0, r3, #240	; 0xf0
    dfb0:	cmp	r0, #80	; 0x50
    dfb4:	cmpne	r0, #32
    dfb8:	beq	e6e8 <opt_loop+0x19dc>
    dfbc:	ldr	r7, [r9, #200]	; 0xc8
    dfc0:	ldr	r2, [r8]
    dfc4:	ldr	r2, [r2, r7, lsl #3]
    dfc8:	cmp	r2, #0
    dfcc:	bne	e478 <opt_loop+0x176c>
    dfd0:	mov	r2, #0
    dfd4:	mov	r0, r2
    dfd8:	str	r3, [sp, #52]	; 0x34
    dfdc:	bl	c03c <F>
    dfe0:	ldr	r3, [sp, #52]	; 0x34
    dfe4:	mov	r1, r7
    dfe8:	mov	r2, r0
    dfec:	mov	r0, r3
    dff0:	bl	c03c <F>
    dff4:	str	r0, [r9, #200]	; 0xc8
    dff8:	b	d6f0 <opt_loop+0x9e4>
    dffc:	ldr	r2, [r4, #12]
    e000:	cmp	sl, #0
    e004:	ldr	r3, [r9, #204]	; 0xcc
    e008:	add	r1, r5, r2, lsl #2
    e00c:	beq	e01c <opt_loop+0x1310>
    e010:	ldr	r2, [r5, r2, lsl #2]
    e014:	cmp	r3, r2
    e018:	beq	de68 <opt_loop+0x115c>
    e01c:	str	r3, [r1]
    e020:	b	d6f0 <opt_loop+0x9e4>
    e024:	ldr	r2, [r4, #12]
    e028:	cmp	sl, #0
    e02c:	ldr	r3, [r9, #200]	; 0xc8
    e030:	add	r1, r5, r2, lsl #2
    e034:	bne	e010 <opt_loop+0x1304>
    e038:	b	e01c <opt_loop+0x1310>
    e03c:	mov	r2, #0
    e040:	mov	r0, r2
    e044:	ldr	r1, [r4, #12]
    e048:	bl	c03c <F>
    e04c:	cmp	sl, #0
    e050:	bne	d6e0 <opt_loop+0x9d4>
    e054:	b	d6ec <opt_loop+0x9e0>
    e058:	cmp	r4, #0
    e05c:	beq	d910 <opt_loop+0xc04>
    e060:	ldr	r2, [pc, #-788]	; dd54 <opt_loop+0x1048>
    e064:	mov	r1, #0
    e068:	add	r2, pc, r2
    e06c:	str	r1, [r9, #4]
    e070:	str	r1, [r2, #876]	; 0x36c
    e074:	ands	r2, r3, #8
    e078:	bne	d918 <opt_loop+0xc0c>
    e07c:	mov	r0, r2
    e080:	ldr	r1, [r9, #20]
    e084:	bl	c03c <F>
    e088:	ldr	r3, [r9, #8]
    e08c:	str	r0, [r9, #132]	; 0x84
    e090:	b	d920 <opt_loop+0xc14>
    e094:	cmp	r0, #0
    e098:	bne	e0ac <opt_loop+0x13a0>
    e09c:	b	e38c <opt_loop+0x1680>
    e0a0:	ldr	r0, [r0, #16]
    e0a4:	cmp	r0, #0
    e0a8:	beq	e104 <opt_loop+0x13f8>
    e0ac:	ldr	r2, [r0]
    e0b0:	cmn	r2, #1
    e0b4:	beq	e0a0 <opt_loop+0x1394>
    e0b8:	cmp	r3, #2
    e0bc:	mov	r4, r0
    e0c0:	beq	e24c <opt_loop+0x1540>
    e0c4:	cmp	r3, #0
    e0c8:	bne	e240 <opt_loop+0x1534>
    e0cc:	cmp	r2, #7
    e0d0:	beq	e218 <opt_loop+0x150c>
    e0d4:	ldr	r3, [r9, #128]	; 0x80
    e0d8:	tst	r3, #131072	; 0x20000
    e0dc:	bne	e240 <opt_loop+0x1534>
    e0e0:	cmp	r2, #177	; 0xb1
    e0e4:	movne	r3, r0
    e0e8:	movne	lr, r2
    e0ec:	beq	e270 <opt_loop+0x1564>
    e0f0:	cmp	lr, #12
    e0f4:	beq	e2b0 <opt_loop+0x15a4>
    e0f8:	mov	lr, r2
    e0fc:	ldr	r0, [r4, #16]
    e100:	b	d78c <opt_loop+0xa80>
    e104:	cmp	ip, #0
    e108:	beq	d7bc <opt_loop+0xab0>
    e10c:	ldr	r3, [sp, #76]	; 0x4c
    e110:	ldr	r2, [r9, #8]
    e114:	cmp	r2, #21
    e118:	str	r5, [r3, #876]	; 0x36c
    e11c:	bne	d7c8 <opt_loop+0xabc>
    e120:	ldr	r1, [r9, #128]	; 0x80
    e124:	ands	r1, r1, #65536	; 0x10000
    e128:	bne	d7d0 <opt_loop+0xac4>
    e12c:	cmp	lr, #28
    e130:	beq	e55c <opt_loop+0x1850>
    e134:	cmp	lr, #20
    e138:	beq	e6bc <opt_loop+0x19b0>
    e13c:	cmp	lr, #84	; 0x54
    e140:	bne	d7d0 <opt_loop+0xac4>
    e144:	ldr	r1, [r9, #20]
    e148:	cmp	r1, #0
    e14c:	bne	d7d0 <opt_loop+0xac4>
    e150:	ldr	r3, [r4, #12]
    e154:	mov	r2, #69	; 0x45
    e158:	str	r3, [r9, #20]
    e15c:	mvn	r3, #0
    e160:	str	r2, [r9, #8]
    e164:	str	r3, [r4]
    e168:	ldr	r3, [pc, #-1048]	; dd58 <opt_loop+0x104c>
    e16c:	ldr	r2, [r9, #8]
    e170:	ldr	ip, [r9, #60]	; 0x3c
    e174:	ldr	r0, [r9, #84]	; 0x54
    e178:	add	r3, pc, r3
    e17c:	cmp	r2, #69	; 0x45
    e180:	str	ip, [r9, #84]	; 0x54
    e184:	str	r0, [r9, #60]	; 0x3c
    e188:	str	r1, [r3, #876]	; 0x36c
    e18c:	bne	d7d0 <opt_loop+0xac4>
    e190:	ldr	r3, [r9, #20]
    e194:	cmp	r3, #0
    e198:	bne	e45c <opt_loop+0x1750>
    e19c:	ldr	r3, [r8]
    e1a0:	ldr	r2, [r9, #204]	; 0xcc
    e1a4:	ldr	r1, [r9, #84]	; 0x54
    e1a8:	str	r1, [r9, #60]	; 0x3c
    e1ac:	ldr	r2, [r3, r2, lsl #3]
    e1b0:	cmp	r2, #0
    e1b4:	beq	d800 <opt_loop+0xaf4>
    e1b8:	ldr	r2, [r9, #200]	; 0xc8
    e1bc:	ldr	r1, [r3, r2, lsl #3]
    e1c0:	add	r3, r3, r2, lsl #3
    e1c4:	cmp	r1, #0
    e1c8:	beq	d870 <opt_loop+0xb64>
    e1cc:	ldr	r2, [r9, #8]
    e1d0:	ldr	r3, [r3, #4]
    e1d4:	and	r2, r2, #240	; 0xf0
    e1d8:	cmp	r2, #32
    e1dc:	bne	d830 <opt_loop+0xb24>
    e1e0:	ldr	r2, [r9, #20]
    e1e4:	cmp	r2, r3
    e1e8:	movcs	r3, #0
    e1ec:	movcc	r3, #1
    e1f0:	b	d84c <opt_loop+0xb40>
    e1f4:	ldr	lr, [r1, #12]
    e1f8:	ldr	r3, [r0, #12]
    e1fc:	cmp	lr, r3
    e200:	bne	e254 <opt_loop+0x1548>
    e204:	mov	r3, #7
    e208:	str	r3, [r0]
    e20c:	ldr	r3, [r1]
    e210:	cmp	r3, #0
    e214:	bne	e260 <opt_loop+0x1554>
    e218:	str	fp, [r1]
    e21c:	str	r7, [r0]
    e220:	ldr	r5, [r1]
    e224:	cmp	r5, #0
    e228:	bne	e730 <opt_loop+0x1a24>
    e22c:	ldr	r3, [r9, #128]	; 0x80
    e230:	mov	r2, r7
    e234:	tst	r3, #131072	; 0x20000
    e238:	mov	ip, fp
    e23c:	beq	e0f8 <opt_loop+0x13ec>
    e240:	ldr	r0, [r0, #16]
    e244:	mov	lr, r2
    e248:	b	d78c <opt_loop+0xa80>
    e24c:	cmp	r2, #97	; 0x61
    e250:	beq	e1f4 <opt_loop+0x14e8>
    e254:	mov	lr, r2
    e258:	ldr	r0, [r0, #16]
    e25c:	b	d78c <opt_loop+0xa80>
    e260:	mov	ip, fp
    e264:	mov	r5, #0
    e268:	mov	r2, #7
    e26c:	b	e254 <opt_loop+0x1548>
    e270:	ldr	r0, [r0, #16]
    e274:	cmp	r0, #0
    e278:	beq	e700 <opt_loop+0x19f4>
    e27c:	ldr	lr, [r0]
    e280:	mov	r3, r0
    e284:	cmn	lr, #1
    e288:	beq	e29c <opt_loop+0x1590>
    e28c:	b	e0f0 <opt_loop+0x13e4>
    e290:	ldr	lr, [r3]
    e294:	cmn	lr, #1
    e298:	bne	e0f0 <opt_loop+0x13e4>
    e29c:	ldr	r3, [r3, #16]
    e2a0:	cmp	r3, #0
    e2a4:	bne	e290 <opt_loop+0x1584>
    e2a8:	mov	lr, r2
    e2ac:	b	d78c <opt_loop+0xa80>
    e2b0:	ldr	r0, [r3, #16]
    e2b4:	cmp	r0, #0
    e2b8:	bne	e2cc <opt_loop+0x15c0>
    e2bc:	b	e0f8 <opt_loop+0x13ec>
    e2c0:	ldr	r0, [r0, #16]
    e2c4:	cmp	r0, #0
    e2c8:	beq	e0f8 <opt_loop+0x13ec>
    e2cc:	ldr	lr, [r0]
    e2d0:	cmn	lr, #1
    e2d4:	beq	e2c0 <opt_loop+0x15b4>
    e2d8:	cmp	lr, #7
    e2dc:	bne	e0f8 <opt_loop+0x13ec>
    e2e0:	ldr	lr, [r0, #16]
    e2e4:	cmp	lr, #0
    e2e8:	bne	e2fc <opt_loop+0x15f0>
    e2ec:	b	e0f8 <opt_loop+0x13ec>
    e2f0:	ldr	lr, [lr, #16]
    e2f4:	cmp	lr, #0
    e2f8:	beq	e0f8 <opt_loop+0x13ec>
    e2fc:	ldr	r6, [lr]
    e300:	cmn	r6, #1
    e304:	beq	e2f0 <opt_loop+0x15e4>
    e308:	and	r6, r6, #231	; 0xe7
    e30c:	cmp	r6, #64	; 0x40
    e310:	bne	e0f8 <opt_loop+0x13ec>
    e314:	ldr	r2, [lr, #12]
    e318:	ldr	r5, [r1, #12]
    e31c:	mov	ip, fp
    e320:	add	r2, r2, r5
    e324:	str	r2, [lr, #12]
    e328:	mvn	r2, #0
    e32c:	str	r2, [r1]
    e330:	mov	r5, #0
    e334:	str	r2, [r3]
    e338:	str	r2, [r0]
    e33c:	ldr	lr, [r4]
    e340:	ldr	r0, [r4, #16]
    e344:	b	d78c <opt_loop+0xa80>
    e348:	ldr	lr, [r0, r1, lsl #3]
    e34c:	add	r0, r0, r1, lsl #3
    e350:	cmp	lr, #0
    e354:	beq	e3a4 <opt_loop+0x1698>
    e358:	ldr	r0, [r0, #4]
    e35c:	cmp	r0, #0
    e360:	bne	e3a4 <opt_loop+0x1698>
    e364:	tst	r3, #176	; 0xb0
    e368:	bne	e50c <opt_loop+0x1800>
    e36c:	mov	r3, #135	; 0x87
    e370:	str	r3, [r4]
    e374:	ldr	r3, [r9, #204]	; 0xcc
    e378:	ldr	r2, [r9, #200]	; 0xc8
    e37c:	cmp	r3, r2
    e380:	bne	dd88 <opt_loop+0x107c>
    e384:	str	r6, [r4]
    e388:	b	d6f0 <opt_loop+0x9e4>
    e38c:	cmp	ip, #0
    e390:	ldrne	r3, [sp, #80]	; 0x50
    e394:	strne	r5, [r3, #876]	; 0x36c
    e398:	b	d7bc <opt_loop+0xab0>
    e39c:	ldr	r1, [r9, #200]	; 0xc8
    e3a0:	ldr	r2, [r9, #204]	; 0xcc
    e3a4:	mov	r0, r3
    e3a8:	bl	c03c <F>
    e3ac:	b	de94 <opt_loop+0x1188>
    e3b0:	tst	r5, #131072	; 0x20000
    e3b4:	orreq	r6, r6, #131072	; 0x20000
    e3b8:	tst	r5, #65536	; 0x10000
    e3bc:	orreq	r6, r6, #65536	; 0x10000
    e3c0:	b	d0c0 <opt_loop+0x3b4>
    e3c4:	mov	r0, r3
    e3c8:	ldr	r1, [r4, #12]
    e3cc:	bl	c03c <F>
    e3d0:	b	de94 <opt_loop+0x1188>
    e3d4:	add	r5, r9, #136	; 0x88
    e3d8:	mov	r1, r4
    e3dc:	mov	r0, r5
    e3e0:	mov	r2, #72	; 0x48
    e3e4:	bl	e88 <memset@plt>
    e3e8:	b	d370 <opt_loop+0x664>
    e3ec:	str	r2, [r4]
    e3f0:	ldr	r1, [r9, #200]	; 0xc8
    e3f4:	ldr	r3, [r8]
    e3f8:	mov	r0, r2
    e3fc:	add	r3, r3, r1, lsl #3
    e400:	ldr	r1, [r3, #4]
    e404:	rsb	r1, r1, #0
    e408:	str	r1, [r4, #12]
    e40c:	bl	c03c <F>
    e410:	str	r0, [r9, #200]	; 0xc8
    e414:	b	d6f0 <opt_loop+0x9e4>
    e418:	ldr	r7, [r9, #200]	; 0xc8
    e41c:	b	dfd0 <opt_loop+0x12c4>
    e420:	and	r3, r3, #24
    e424:	orr	r0, r3, #32
    e428:	str	r0, [r4]
    e42c:	ldr	r3, [r8]
    e430:	ldr	ip, [r4, #12]
    e434:	add	r3, r3, r1
    e438:	mov	r2, #0
    e43c:	ldr	r1, [r3, #4]
    e440:	add	r1, r1, ip
    e444:	str	r1, [r4, #12]
    e448:	bl	c03c <F>
    e44c:	ldr	r2, [sp, #28]
    e450:	mov	r3, #0
    e454:	str	r3, [r2, #876]	; 0x36c
    e458:	b	dec8 <opt_loop+0x11bc>
    e45c:	cmn	r3, #1
    e460:	ldr	r2, [r9, #204]	; 0xcc
    e464:	ldr	r3, [r8]
    e468:	ldreq	r1, [r9, #60]	; 0x3c
    e46c:	streq	r1, [r9, #84]	; 0x54
    e470:	ldr	r2, [r3, r2, lsl #3]
    e474:	b	e1b0 <opt_loop+0x14a4>
    e478:	mov	r2, #0
    e47c:	mov	r0, r2
    e480:	bl	c03c <F>
    e484:	mov	r2, r7
    e488:	mov	r3, r0
    e48c:	b	df30 <opt_loop+0x1224>
    e490:	orr	r7, ip, #4
    e494:	str	r7, [r4]
    e498:	ldr	r0, [r9, #204]	; 0xcc
    e49c:	ldr	r1, [r8]
    e4a0:	ldr	ip, [sp, #24]
    e4a4:	add	r1, r1, r0, lsl #3
    e4a8:	mov	r2, r3
    e4ac:	ldr	r1, [r1, #4]
    e4b0:	str	r3, [ip, #876]	; 0x36c
    e4b4:	str	r1, [r4, #12]
    e4b8:	mov	r0, r3
    e4bc:	ldr	r3, [r9, #200]	; 0xc8
    e4c0:	str	r3, [sp, #52]	; 0x34
    e4c4:	bl	c03c <F>
    e4c8:	ldr	r3, [sp, #52]	; 0x34
    e4cc:	mov	r1, r3
    e4d0:	mov	r2, r0
    e4d4:	mov	r0, r7
    e4d8:	bl	c03c <F>
    e4dc:	str	r0, [r9, #200]	; 0xc8
    e4e0:	b	d6f0 <opt_loop+0x9e4>
    e4e4:	cmp	r2, #16
    e4e8:	bne	e544 <opt_loop+0x1838>
    e4ec:	ldr	r2, [r9, #20]
    e4f0:	sub	r3, r2, r3
    e4f4:	clz	r3, r3
    e4f8:	lsr	r3, r3, #5
    e4fc:	b	d84c <opt_loop+0xb40>
    e500:	cmp	sl, #0
    e504:	bne	d708 <opt_loop+0x9fc>
    e508:	b	d870 <opt_loop+0xb64>
    e50c:	and	r0, r3, #224	; 0xe0
    e510:	cmp	r0, #32
    e514:	beq	e528 <opt_loop+0x181c>
    e518:	and	r0, r3, #208	; 0xd0
    e51c:	cmp	ip, #96	; 0x60
    e520:	cmpne	r0, #80	; 0x50
    e524:	bne	e3a4 <opt_loop+0x1698>
    e528:	mov	r2, #0
    e52c:	str	r2, [r4]
    e530:	str	r2, [r4, #12]
    e534:	mov	r1, r2
    e538:	mov	r0, r2
    e53c:	bl	c03c <F>
    e540:	b	de88 <opt_loop+0x117c>
    e544:	bl	f18 <abort@plt>
    e548:	ldr	r2, [r9, #20]
    e54c:	cmp	r2, r3
    e550:	movhi	r3, #0
    e554:	movls	r3, #1
    e558:	b	d84c <opt_loop+0xb40>
    e55c:	ldr	r3, [r8]
    e560:	ldr	r2, [r9, #204]	; 0xcc
    e564:	ldr	r0, [r3, r2, lsl #3]
    e568:	add	r2, r3, r2, lsl #3
    e56c:	cmp	r0, #0
    e570:	bne	e5b0 <opt_loop+0x18a4>
    e574:	ldr	lr, [r9, #20]
    e578:	cmp	lr, #0
    e57c:	bne	d800 <opt_loop+0xaf4>
    e580:	mvn	r3, #0
    e584:	ldr	ip, [pc, #-2096]	; dd5c <opt_loop+0x1050>
    e588:	str	r3, [r4]
    e58c:	ldr	r3, [r8]
    e590:	ldr	r1, [r9, #204]	; 0xcc
    e594:	add	ip, pc, ip
    e598:	mov	r2, #29
    e59c:	str	r2, [r9, #8]
    e5a0:	add	r0, r3, r1, lsl #3
    e5a4:	str	lr, [ip, #876]	; 0x36c
    e5a8:	ldr	r1, [r3, r1, lsl #3]
    e5ac:	b	d7e0 <opt_loop+0xad4>
    e5b0:	ldr	r3, [pc, #-2136]	; dd60 <opt_loop+0x1054>
    e5b4:	ldr	r0, [r2, #4]
    e5b8:	ldr	r2, [r9, #20]
    e5bc:	add	r3, pc, r3
    e5c0:	add	r2, r2, r0
    e5c4:	mvn	r0, #0
    e5c8:	str	r2, [r9, #20]
    e5cc:	str	r1, [r3, #876]	; 0x36c
    e5d0:	str	r0, [r4]
    e5d4:	ldr	r2, [r9, #8]
    e5d8:	b	d7c8 <opt_loop+0xabc>
    e5dc:	add	r2, r8, #84	; 0x54
    e5e0:	mov	r8, r9
    e5e4:	ldr	r3, [r8, #84]	; 0x54
    e5e8:	cmp	r7, #0
    e5ec:	str	r3, [r2]
    e5f0:	ldr	r3, [r6]
    e5f4:	str	r3, [r8, #84]	; 0x54
    e5f8:	beq	e6b4 <opt_loop+0x19a8>
    e5fc:	ldr	r3, [sl, #112]	; 0x70
    e600:	cmp	r3, #0
    e604:	beq	e69c <opt_loop+0x1990>
    e608:	ldr	r2, [r3, #16]
    e60c:	ldr	r1, [r2, #60]	; 0x3c
    e610:	cmp	r1, sl
    e614:	streq	r8, [r2, #60]	; 0x3c
    e618:	strne	r8, [r2, #84]	; 0x54
    e61c:	ldr	r3, [r3, #20]
    e620:	cmp	r3, #0
    e624:	bne	e608 <opt_loop+0x18fc>
    e628:	ldr	r3, [sl, #112]	; 0x70
    e62c:	cmp	r3, #0
    e630:	beq	e69c <opt_loop+0x1990>
    e634:	ldr	r0, [r3, #16]
    e638:	str	ip, [sp, #8]
    e63c:	ldr	r3, [r3, #20]
    e640:	ldr	r1, [r0, #200]	; 0xc8
    e644:	str	fp, [sp]
    e648:	b	db6c <opt_loop+0xe60>
    e64c:	add	r3, r6, #60	; 0x3c
    e650:	mov	r6, r4
    e654:	ldr	r2, [r6, #60]	; 0x3c
    e658:	cmp	r5, #0
    e65c:	str	r2, [r3]
    e660:	ldr	r3, [r0]
    e664:	str	r3, [r6, #60]	; 0x3c
    e668:	streq	r6, [r0]
    e66c:	beq	e69c <opt_loop+0x1990>
    e670:	ldr	r3, [sl, #112]	; 0x70
    e674:	cmp	r3, #0
    e678:	beq	e69c <opt_loop+0x1990>
    e67c:	ldr	r2, [r3, #16]
    e680:	ldr	r1, [r2, #60]	; 0x3c
    e684:	cmp	r1, sl
    e688:	streq	r6, [r2, #60]	; 0x3c
    e68c:	strne	r6, [r2, #84]	; 0x54
    e690:	ldr	r3, [r3, #20]
    e694:	cmp	r3, #0
    e698:	bne	e67c <opt_loop+0x1970>
    e69c:	ldr	sl, [sl, #100]	; 0x64
    e6a0:	str	ip, [sp, #8]
    e6a4:	cmp	sl, #0
    e6a8:	str	fp, [sp]
    e6ac:	bne	da04 <opt_loop+0xcf8>
    e6b0:	b	dcbc <opt_loop+0xfb0>
    e6b4:	str	r8, [r6]
    e6b8:	b	e628 <opt_loop+0x191c>
    e6bc:	mvn	r3, #0
    e6c0:	str	r3, [r4]
    e6c4:	ldr	r3, [pc, #-2408]	; dd64 <opt_loop+0x1058>
    e6c8:	ldr	r0, [r4, #12]
    e6cc:	ldr	r2, [r9, #20]
    e6d0:	add	r3, pc, r3
    e6d4:	add	r2, r2, r0
    e6d8:	str	r2, [r9, #20]
    e6dc:	str	r1, [r3, #876]	; 0x36c
    e6e0:	ldr	r2, [r9, #8]
    e6e4:	b	d7c8 <opt_loop+0xabc>
    e6e8:	str	r2, [r4]
    e6ec:	mov	r1, r2
    e6f0:	mov	r0, r2
    e6f4:	bl	c03c <F>
    e6f8:	str	r0, [r9, #200]	; 0xc8
    e6fc:	b	d6f0 <opt_loop+0x9e4>
    e700:	mov	lr, #177	; 0xb1
    e704:	b	d78c <opt_loop+0xa80>
    e708:	ldr	r3, [pc, #-2472]	; dd68 <opt_loop+0x105c>
    e70c:	add	r3, pc, r3
    e710:	str	r5, [r3, #876]	; 0x36c
    e714:	b	d7bc <opt_loop+0xab0>
    e718:	ldr	r3, [sp, #44]	; 0x2c
    e71c:	cmp	r3, #0
    e720:	bne	dcf8 <opt_loop+0xfec>
    e724:	ldr	r0, [sp, #56]	; 0x38
    e728:	bl	c780 <find_inedges.isra.6>
    e72c:	b	dce4 <opt_loop+0xfd8>
    e730:	mov	lr, r7
    e734:	mov	r5, #0
    e738:	mov	ip, fp
    e73c:	b	e258 <opt_loop+0x154c>
    e740:	add	r2, r2, #84	; 0x54
    e744:	b	e5e4 <opt_loop+0x18d8>
    e748:	ldr	r3, [pc, #-2532]	; dd6c <opt_loop+0x1060>
    e74c:	add	r3, pc, r3
    e750:	str	sl, [r3, #876]	; 0x36c
    e754:	b	dce4 <opt_loop+0xfd8>
    e758:	add	r3, r3, #60	; 0x3c
    e75c:	b	e654 <opt_loop+0x1948>

0000e760 <sf_bpf_optimize>:
    e760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e764:	sub	sp, sp, #52	; 0x34
    e768:	ldr	r8, [pc, #1636]	; edd4 <sf_bpf_optimize+0x674>
    e76c:	ldr	r3, [pc, #1636]	; edd8 <sf_bpf_optimize+0x678>
    e770:	add	r8, pc, r8
    e774:	add	r3, pc, r3
    e778:	mov	r6, r3
    e77c:	ldr	r5, [r8]
    e780:	str	r3, [sp, #4]
    e784:	ldr	r3, [r0]
    e788:	str	r0, [sp, #24]
    e78c:	str	r3, [sp]
    e790:	mov	r0, r3
    e794:	add	r3, r5, #1
    e798:	str	r3, [r8]
    e79c:	bl	c1d0 <count_blocks>
    e7a0:	mov	r1, #4
    e7a4:	mov	r4, r0
    e7a8:	bl	d38 <calloc@plt>
    e7ac:	ldr	r3, [pc, #1576]	; eddc <sf_bpf_optimize+0x67c>
    e7b0:	ldr	fp, [r6, r3]
    e7b4:	cmp	r0, #0
    e7b8:	str	r0, [fp]
    e7bc:	beq	edb8 <sf_bpf_optimize+0x658>
    e7c0:	add	r5, r5, #2
    e7c4:	mov	r7, #0
    e7c8:	ldr	r0, [sp]
    e7cc:	str	r5, [r8]
    e7d0:	str	r7, [r8, #864]	; 0x360
    e7d4:	bl	c23c <number_blks_r>
    e7d8:	ldr	r5, [r8, #864]	; 0x360
    e7dc:	mov	r1, #4
    e7e0:	lsl	r9, r5, #1
    e7e4:	mov	r0, r9
    e7e8:	str	r9, [r8, #896]	; 0x380
    e7ec:	bl	d38 <calloc@plt>
    e7f0:	ldr	r3, [pc, #1512]	; ede0 <sf_bpf_optimize+0x680>
    e7f4:	ldr	r6, [sp, #4]
    e7f8:	str	r0, [sp, #8]
    e7fc:	ldr	sl, [r6, r3]
    e800:	cmp	r0, r7
    e804:	str	r0, [sl]
    e808:	beq	edb8 <sf_bpf_optimize+0x658>
    e80c:	mov	r1, #4
    e810:	mov	r0, r5
    e814:	bl	d38 <calloc@plt>
    e818:	ldr	r3, [pc, #1476]	; ede4 <sf_bpf_optimize+0x684>
    e81c:	str	r6, [sp, #4]
    e820:	ldr	r3, [r6, r3]
    e824:	str	r3, [sp, #44]	; 0x2c
    e828:	cmp	r0, r7
    e82c:	str	r0, [r3]
    e830:	beq	edb8 <sf_bpf_optimize+0x658>
    e834:	lsr	r6, r9, #5
    e838:	add	r3, r6, #1
    e83c:	lsr	ip, r5, #5
    e840:	mul	r0, r3, r9
    e844:	add	r6, ip, #1
    e848:	str	r3, [sp, #12]
    e84c:	mla	r0, r6, r9, r0
    e850:	str	r3, [r8, #4]
    e854:	str	r6, [r8, #884]	; 0x374
    e858:	lsl	r0, r0, #2
    e85c:	bl	e1c <malloc@plt>
    e860:	ldr	r3, [pc, #1408]	; ede8 <sf_bpf_optimize+0x688>
    e864:	ldr	r1, [sp, #4]
    e868:	ldr	r3, [r1, r3]
    e86c:	str	r3, [sp, #40]	; 0x28
    e870:	cmp	r0, r7
    e874:	str	r0, [r3]
    e878:	beq	edb8 <sf_bpf_optimize+0x658>
    e87c:	cmp	r4, r7
    e880:	str	r0, [r8, #880]	; 0x370
    e884:	ble	eda8 <sf_bpf_optimize+0x648>
    e888:	ldr	r8, [fp]
    e88c:	lsl	r9, r4, #2
    e890:	lsl	ip, r6, #2
    e894:	mov	r2, r8
    e898:	add	r6, r8, r9
    e89c:	mov	r3, r8
    e8a0:	mov	r1, r0
    e8a4:	ldr	lr, [r3], #4
    e8a8:	cmp	r3, r6
    e8ac:	str	r1, [lr, #104]	; 0x68
    e8b0:	add	r1, r1, ip
    e8b4:	bne	e8a4 <sf_bpf_optimize+0x144>
    e8b8:	mul	r7, ip, r4
    e8bc:	ldr	r6, [pc, #1320]	; edec <sf_bpf_optimize+0x68c>
    e8c0:	add	r1, r0, r7
    e8c4:	add	r6, pc, r6
    e8c8:	mov	lr, r1
    e8cc:	str	r1, [r6, #888]	; 0x378
    e8d0:	ldr	r0, [r2], #4
    e8d4:	cmp	r2, r3
    e8d8:	str	lr, [r0, #108]	; 0x6c
    e8dc:	add	lr, lr, ip
    e8e0:	bne	e8d0 <sf_bpf_optimize+0x170>
    e8e4:	ldr	r3, [pc, #1284]	; edf0 <sf_bpf_optimize+0x690>
    e8e8:	add	r1, r1, r7
    e8ec:	add	r3, pc, r3
    e8f0:	ldr	lr, [sp, #8]
    e8f4:	str	r1, [r3, #892]	; 0x37c
    e8f8:	ldr	r3, [sp, #12]
    e8fc:	lsl	ip, r5, #2
    e900:	mov	r2, #0
    e904:	lsl	r7, r3, #2
    e908:	lsl	r6, r3, #3
    e90c:	b	e918 <sf_bpf_optimize+0x1b8>
    e910:	ldr	r8, [fp]
    e914:	ldr	lr, [sl]
    e918:	ldr	r3, [r8, r2, lsl #2]
    e91c:	add	r8, r1, r7
    e920:	mov	r0, r3
    e924:	str	r1, [r3, #56]	; 0x38
    e928:	str	r8, [r3, #80]	; 0x50
    e92c:	str	r2, [r0, #48]!	; 0x30
    e930:	str	r0, [lr, r2, lsl #2]
    e934:	ldr	lr, [sl]
    e938:	mov	r0, r3
    e93c:	add	r8, r5, r2
    e940:	add	r2, r2, #1
    e944:	cmp	r4, r2
    e948:	str	r8, [r0, #72]!	; 0x48
    e94c:	add	r1, r1, r6
    e950:	str	r0, [lr, ip]
    e954:	str	r3, [r3, #64]	; 0x40
    e958:	str	r3, [r3, #88]	; 0x58
    e95c:	add	ip, ip, #4
    e960:	bne	e910 <sf_bpf_optimize+0x1b0>
    e964:	ldr	r0, [fp]
    e968:	mov	ip, #0
    e96c:	add	r9, r0, r9
    e970:	mov	lr, #1
    e974:	ldr	r3, [r0], #4
    e978:	ldr	r3, [r3, #4]
    e97c:	cmp	r3, #0
    e980:	beq	ed34 <sf_bpf_optimize+0x5d4>
    e984:	mov	r1, #0
    e988:	ldr	r2, [r3]
    e98c:	ldr	r3, [r3, #16]
    e990:	cmn	r2, #1
    e994:	addne	r1, r1, #1
    e998:	cmp	r3, #0
    e99c:	bne	e988 <sf_bpf_optimize+0x228>
    e9a0:	add	r1, r1, #1
    e9a4:	cmp	r9, r0
    e9a8:	add	ip, ip, r1
    e9ac:	bne	e974 <sf_bpf_optimize+0x214>
    e9b0:	add	ip, ip, ip, lsl #1
    e9b4:	mov	r7, ip
    e9b8:	ldr	r8, [pc, #1076]	; edf4 <sf_bpf_optimize+0x694>
    e9bc:	mov	r1, #8
    e9c0:	add	r8, pc, r8
    e9c4:	mov	r0, r7
    e9c8:	str	ip, [r8, #900]	; 0x384
    e9cc:	bl	d38 <calloc@plt>
    e9d0:	ldr	r4, [sp, #4]
    e9d4:	ldr	r3, [pc, #1052]	; edf8 <sf_bpf_optimize+0x698>
    e9d8:	mov	r1, #20
    e9dc:	ldr	r3, [r4, r3]
    e9e0:	str	r3, [sp, #32]
    e9e4:	mov	r6, r0
    e9e8:	mov	r0, r7
    e9ec:	str	r6, [r3]
    e9f0:	bl	d38 <calloc@plt>
    e9f4:	ldr	r3, [pc, #1024]	; edfc <sf_bpf_optimize+0x69c>
    e9f8:	ldr	r3, [r4, r3]
    e9fc:	str	r3, [sp, #36]	; 0x24
    ea00:	cmp	r6, #0
    ea04:	cmpne	r0, #0
    ea08:	moveq	r6, #1
    ea0c:	movne	r6, #0
    ea10:	str	r0, [r3]
    ea14:	beq	edb8 <sf_bpf_optimize+0x658>
    ea18:	ldr	r4, [sp]
    ea1c:	mov	r1, r6
    ea20:	mov	r0, r4
    ea24:	bl	cd0c <opt_loop>
    ea28:	mov	r0, r4
    ea2c:	mov	r1, #1
    ea30:	bl	cd0c <opt_loop>
    ea34:	ldr	r4, [r8]
    ea38:	lsl	r3, r5, #2
    ea3c:	sub	r2, r3, #4
    ea40:	str	sl, [sp, #28]
    ea44:	add	r4, r4, #1
    ea48:	mov	sl, fp
    ea4c:	mov	fp, r3
    ea50:	str	r2, [sp, #4]
    ea54:	sub	r2, r5, #1
    ea58:	str	r8, [sp, #12]
    ea5c:	str	r2, [sp, #8]
    ea60:	cmp	r5, #0
    ea64:	ldrgt	r3, [sl]
    ea68:	addgt	r1, r3, fp
    ea6c:	ble	ea80 <sf_bpf_optimize+0x320>
    ea70:	ldr	r2, [r3], #4
    ea74:	cmp	r1, r3
    ea78:	str	r6, [r2, #100]	; 0x64
    ea7c:	bne	ea70 <sf_bpf_optimize+0x310>
    ea80:	ldr	r3, [sp, #12]
    ea84:	ldr	r0, [sp]
    ea88:	str	r4, [r3]
    ea8c:	bl	c164 <make_marks>
    ea90:	ldmib	sp, {r2, r3}
    ea94:	ldr	r0, [sl]
    ea98:	add	r2, r0, r2
    ea9c:	mov	r9, r0
    eaa0:	b	eaac <sf_bpf_optimize+0x34c>
    eaa4:	mov	r3, ip
    eaa8:	mov	r2, lr
    eaac:	subs	ip, r3, #1
    eab0:	bmi	ebe8 <sf_bpf_optimize+0x488>
    eab4:	ldr	r0, [r2, #-4]
    eab8:	sub	lr, r2, #4
    eabc:	ldr	r1, [r0, #24]
    eac0:	cmp	r4, r1
    eac4:	bne	eaa4 <sf_bpf_optimize+0x344>
    eac8:	cmp	r5, r3
    eacc:	ble	eaa4 <sf_bpf_optimize+0x344>
    ead0:	mov	r8, r9
    ead4:	mov	r9, ip
    ead8:	b	eae8 <sf_bpf_optimize+0x388>
    eadc:	add	r3, r3, #1
    eae0:	cmp	r3, r5
    eae4:	beq	ebdc <sf_bpf_optimize+0x47c>
    eae8:	ldr	r1, [r2], #4
    eaec:	ldr	ip, [r1, #24]
    eaf0:	cmp	r4, ip
    eaf4:	bne	eadc <sf_bpf_optimize+0x37c>
    eaf8:	ldr	r7, [r0, #8]
    eafc:	ldr	ip, [r1, #8]
    eb00:	cmp	r7, ip
    eb04:	bne	eadc <sf_bpf_optimize+0x37c>
    eb08:	ldr	r7, [r0, #20]
    eb0c:	ldr	ip, [r1, #20]
    eb10:	cmp	r7, ip
    eb14:	bne	eadc <sf_bpf_optimize+0x37c>
    eb18:	ldr	r7, [r0, #60]	; 0x3c
    eb1c:	ldr	ip, [r1, #60]	; 0x3c
    eb20:	cmp	r7, ip
    eb24:	bne	eadc <sf_bpf_optimize+0x37c>
    eb28:	ldr	r7, [r0, #84]	; 0x54
    eb2c:	ldr	ip, [r1, #84]	; 0x54
    eb30:	cmp	r7, ip
    eb34:	bne	eadc <sf_bpf_optimize+0x37c>
    eb38:	ldr	ip, [r0, #4]
    eb3c:	ldr	r7, [r1, #4]
    eb40:	cmp	ip, #0
    eb44:	str	r1, [sp, #16]
    eb48:	str	r3, [sp, #20]
    eb4c:	beq	ed78 <sf_bpf_optimize+0x618>
    eb50:	ldr	r1, [ip]
    eb54:	cmn	r1, #1
    eb58:	bne	eb80 <sf_bpf_optimize+0x420>
    eb5c:	ldr	r1, [sp, #16]
    eb60:	b	eb70 <sf_bpf_optimize+0x410>
    eb64:	ldr	r3, [ip]
    eb68:	cmn	r3, #1
    eb6c:	bne	eb7c <sf_bpf_optimize+0x41c>
    eb70:	ldr	ip, [ip, #16]
    eb74:	cmp	ip, #0
    eb78:	bne	eb64 <sf_bpf_optimize+0x404>
    eb7c:	str	r1, [sp, #16]
    eb80:	cmp	r7, #0
    eb84:	beq	ed9c <sf_bpf_optimize+0x63c>
    eb88:	ldr	r1, [r7]
    eb8c:	cmn	r1, #1
    eb90:	bne	ed40 <sf_bpf_optimize+0x5e0>
    eb94:	ldr	r1, [sp, #16]
    eb98:	b	eba8 <sf_bpf_optimize+0x448>
    eb9c:	ldr	r3, [r7]
    eba0:	cmn	r3, #1
    eba4:	bne	ed3c <sf_bpf_optimize+0x5dc>
    eba8:	ldr	r7, [r7, #16]
    ebac:	cmp	r7, #0
    ebb0:	bne	eb9c <sf_bpf_optimize+0x43c>
    ebb4:	ldr	r3, [sp, #20]
    ebb8:	cmp	ip, #0
    ebbc:	bne	eadc <sf_bpf_optimize+0x37c>
    ebc0:	mov	ip, r9
    ebc4:	mov	r9, r8
    ebc8:	ldr	r3, [r1, #100]	; 0x64
    ebcc:	cmp	r3, #0
    ebd0:	moveq	r3, r1
    ebd4:	str	r3, [r0, #100]	; 0x64
    ebd8:	b	eaa4 <sf_bpf_optimize+0x344>
    ebdc:	mov	ip, r9
    ebe0:	mov	r9, r8
    ebe4:	b	eaa4 <sf_bpf_optimize+0x344>
    ebe8:	cmp	r5, #0
    ebec:	mov	r0, r9
    ebf0:	ble	ec44 <sf_bpf_optimize+0x4e4>
    ebf4:	add	ip, r9, fp
    ebf8:	mov	r1, #1
    ebfc:	ldr	r3, [r0], #4
    ec00:	ldr	r2, [r3, #60]	; 0x3c
    ec04:	cmp	r2, #0
    ec08:	beq	ec30 <sf_bpf_optimize+0x4d0>
    ec0c:	ldr	r2, [r2, #100]	; 0x64
    ec10:	cmp	r2, #0
    ec14:	strne	r2, [r3, #60]	; 0x3c
    ec18:	ldr	r2, [r3, #84]	; 0x54
    ec1c:	movne	r1, r6
    ec20:	ldr	r2, [r2, #100]	; 0x64
    ec24:	cmp	r2, #0
    ec28:	movne	r1, r6
    ec2c:	strne	r2, [r3, #84]	; 0x54
    ec30:	cmp	ip, r0
    ec34:	bne	ebfc <sf_bpf_optimize+0x49c>
    ec38:	cmp	r1, #0
    ec3c:	add	r4, r4, #1
    ec40:	beq	ea60 <sf_bpf_optimize+0x300>
    ec44:	ldr	r1, [sp, #24]
    ec48:	mov	r2, #0
    ec4c:	mov	fp, sl
    ec50:	ldr	r3, [r1]
    ec54:	ldr	sl, [sp, #28]
    ec58:	ldr	r4, [r3, #4]
    ec5c:	str	r2, [r3, #4]
    ec60:	ldr	r2, [r1]
    ec64:	ldr	r3, [r2, #8]
    ec68:	and	r3, r3, #7
    ec6c:	cmp	r3, #5
    ec70:	bne	ed94 <sf_bpf_optimize+0x634>
    ec74:	ldr	r3, [r2, #60]	; 0x3c
    ec78:	ldr	r1, [r2, #84]	; 0x54
    ec7c:	cmp	r3, r1
    ec80:	ldreq	r0, [sp, #24]
    ec84:	beq	eca0 <sf_bpf_optimize+0x540>
    ec88:	b	ed94 <sf_bpf_optimize+0x634>
    ec8c:	ldr	r2, [r3, #60]	; 0x3c
    ec90:	ldr	r1, [r3, #84]	; 0x54
    ec94:	cmp	r2, r1
    ec98:	bne	ecb4 <sf_bpf_optimize+0x554>
    ec9c:	mov	r3, r2
    eca0:	str	r3, [r0]
    eca4:	ldr	r2, [r3, #8]
    eca8:	and	r2, r2, #7
    ecac:	cmp	r2, #5
    ecb0:	beq	ec8c <sf_bpf_optimize+0x52c>
    ecb4:	ldr	r1, [r3, #4]
    ecb8:	cmp	r1, #0
    ecbc:	beq	ecc8 <sf_bpf_optimize+0x568>
    ecc0:	mov	r0, r4
    ecc4:	bl	5bf4 <sf_append>
    ecc8:	ldr	r2, [sp, #24]
    eccc:	ldr	r3, [r2]
    ecd0:	str	r4, [r3, #4]
    ecd4:	ldr	r2, [r2]
    ecd8:	ldr	r3, [r2, #8]
    ecdc:	and	r3, r3, #7
    ece0:	cmp	r3, #6
    ece4:	moveq	r3, #0
    ece8:	streq	r3, [r2, #4]
    ecec:	ldr	r3, [sp, #36]	; 0x24
    ecf0:	ldr	r0, [r3]
    ecf4:	bl	da4 <free@plt>
    ecf8:	ldr	r3, [sp, #32]
    ecfc:	ldr	r0, [r3]
    ed00:	bl	da4 <free@plt>
    ed04:	ldr	r0, [sl]
    ed08:	bl	da4 <free@plt>
    ed0c:	ldr	r3, [sp, #40]	; 0x28
    ed10:	ldr	r0, [r3]
    ed14:	bl	da4 <free@plt>
    ed18:	ldr	r3, [sp, #44]	; 0x2c
    ed1c:	ldr	r0, [r3]
    ed20:	bl	da4 <free@plt>
    ed24:	ldr	r0, [fp]
    ed28:	add	sp, sp, #52	; 0x34
    ed2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed30:	b	da4 <free@plt>
    ed34:	mov	r1, lr
    ed38:	b	e9a4 <sf_bpf_optimize+0x244>
    ed3c:	str	r1, [sp, #16]
    ed40:	cmp	ip, #0
    ed44:	beq	ed8c <sf_bpf_optimize+0x62c>
    ed48:	ldr	r1, [ip]
    ed4c:	ldr	r3, [r7]
    ed50:	cmp	r1, r3
    ed54:	bne	ed8c <sf_bpf_optimize+0x62c>
    ed58:	ldr	r3, [ip, #12]
    ed5c:	ldr	r1, [r7, #12]
    ed60:	cmp	r3, r1
    ed64:	bne	ed8c <sf_bpf_optimize+0x62c>
    ed68:	ldr	ip, [ip, #16]
    ed6c:	ldr	r7, [r7, #16]
    ed70:	cmp	ip, #0
    ed74:	bne	eb50 <sf_bpf_optimize+0x3f0>
    ed78:	cmp	r7, #0
    ed7c:	beq	edc4 <sf_bpf_optimize+0x664>
    ed80:	ldr	r3, [r7]
    ed84:	cmn	r3, #1
    ed88:	beq	eb94 <sf_bpf_optimize+0x434>
    ed8c:	ldr	r3, [sp, #20]
    ed90:	b	eadc <sf_bpf_optimize+0x37c>
    ed94:	mov	r3, r2
    ed98:	b	ecb4 <sf_bpf_optimize+0x554>
    ed9c:	ldr	r1, [sp, #16]
    eda0:	ldr	r3, [sp, #20]
    eda4:	b	ebb8 <sf_bpf_optimize+0x458>
    eda8:	str	r0, [r8, #888]	; 0x378
    edac:	str	r0, [r8, #892]	; 0x37c
    edb0:	mov	ip, r7
    edb4:	b	e9b8 <sf_bpf_optimize+0x258>
    edb8:	ldr	r0, [pc, #64]	; ee00 <sf_bpf_optimize+0x6a0>
    edbc:	add	r0, pc, r0
    edc0:	bl	2454 <sf_bpf_error>
    edc4:	mov	ip, r9
    edc8:	ldr	r1, [sp, #16]
    edcc:	mov	r9, r8
    edd0:	b	ebc8 <sf_bpf_optimize+0x468>
    edd4:	.word	0x00021fc0
    edd8:	.word	0x00021884
    eddc:	.word	0x000000d0
    ede0:	.word	0x000000e8
    ede4:	.word	0x000000c8
    ede8:	.word	0x000000b8
    edec:	.word	0x00021e6c
    edf0:	.word	0x00021e44
    edf4:	.word	0x00021d70
    edf8:	.word	0x00000108
    edfc:	.word	0x000000fc
    ee00:	.word	0x000056d8

0000ee04 <sf_icode_to_fcode>:
    ee04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    ee08:	mov	r7, r0
    ee0c:	ldr	r5, [pc, #124]	; ee90 <sf_icode_to_fcode+0x8c>
    ee10:	mov	r9, r1
    ee14:	add	r5, pc, r5
    ee18:	mov	r8, #1
    ee1c:	ldr	r6, [r5]
    ee20:	add	r6, r6, #2
    ee24:	b	ee2c <sf_icode_to_fcode+0x28>
    ee28:	bl	da4 <free@plt>
    ee2c:	sub	r3, r6, #1
    ee30:	mov	r0, r7
    ee34:	str	r3, [r5]
    ee38:	bl	c2c8 <count_stmts>
    ee3c:	mov	r1, r8
    ee40:	lsl	r4, r0, #3
    ee44:	str	r0, [r9]
    ee48:	mov	r0, r4
    ee4c:	bl	d38 <calloc@plt>
    ee50:	subs	sl, r0, #0
    ee54:	beq	ee84 <sf_icode_to_fcode+0x80>
    ee58:	add	r4, sl, r4
    ee5c:	mov	r0, r7
    ee60:	str	r6, [r5]
    ee64:	str	r4, [r5, #868]	; 0x364
    ee68:	str	sl, [r5, #872]	; 0x368
    ee6c:	bl	c360 <convert_code_r>
    ee70:	add	r6, r6, #2
    ee74:	cmp	r0, #0
    ee78:	mov	r0, sl
    ee7c:	beq	ee28 <sf_icode_to_fcode+0x24>
    ee80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    ee84:	ldr	r0, [pc, #8]	; ee94 <sf_icode_to_fcode+0x90>
    ee88:	add	r0, pc, r0
    ee8c:	bl	2454 <sf_bpf_error>
    ee90:	.word	0x0002191c
    ee94:	.word	0x0000560c

0000ee98 <sfbpf_strcasecmp>:
    ee98:	ldr	r3, [pc, #52]	; eed4 <sfbpf_strcasecmp+0x3c>
    ee9c:	push	{lr}		; (str lr, [sp, #-4]!)
    eea0:	sub	r2, r0, #1
    eea4:	add	r3, pc, r3
    eea8:	b	eeb4 <sfbpf_strcasecmp+0x1c>
    eeac:	cmp	r0, #0
    eeb0:	popeq	{pc}		; (ldreq pc, [sp], #4)
    eeb4:	ldrb	r0, [r2, #1]!
    eeb8:	ldrb	ip, [r1], #1
    eebc:	ldrb	lr, [r3, r0]
    eec0:	ldrb	ip, [r3, ip]
    eec4:	cmp	lr, ip
    eec8:	beq	eeac <sfbpf_strcasecmp+0x14>
    eecc:	sub	r0, lr, ip
    eed0:	pop	{pc}		; (ldr pc, [sp], #4)
    eed4:	.word	0x000055f8

0000eed8 <pcap_next_etherent>:
    eed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    eedc:	mov	r4, r0
    eee0:	ldr	r0, [pc, #544]	; f108 <pcap_next_etherent+0x230>
    eee4:	mov	r2, #128	; 0x80
    eee8:	mov	r1, #0
    eeec:	add	r0, pc, r0
    eef0:	bl	e88 <memset@plt>
    eef4:	bl	e34 <__ctype_b_loc@plt>
    eef8:	ldr	r7, [pc, #524]	; f10c <pcap_next_etherent+0x234>
    eefc:	add	r7, pc, r7
    ef00:	add	r6, r7, #5
    ef04:	mov	r5, r0
    ef08:	mov	r0, r4
    ef0c:	bl	f24 <getc@plt>
    ef10:	ldr	r2, [r5]
    ef14:	lsl	r3, r0, #1
    ef18:	ldrh	r3, [r2, r3]
    ef1c:	tst	r3, #8192	; 0x2000
    ef20:	bne	ef08 <pcap_next_etherent+0x30>
    ef24:	cmp	r0, #10
    ef28:	beq	ef08 <pcap_next_etherent+0x30>
    ef2c:	tst	r3, #4096	; 0x1000
    ef30:	subne	r8, r7, #1
    ef34:	beq	efa4 <pcap_next_etherent+0xcc>
    ef38:	tst	r3, #2048	; 0x800
    ef3c:	subne	r9, r0, #48	; 0x30
    ef40:	bne	ef50 <pcap_next_etherent+0x78>
    ef44:	tst	r3, #512	; 0x200
    ef48:	subne	r9, r0, #87	; 0x57
    ef4c:	subeq	r9, r0, #55	; 0x37
    ef50:	mov	r0, r4
    ef54:	bl	f24 <getc@plt>
    ef58:	ldr	r2, [r5]
    ef5c:	lsl	r3, r0, #1
    ef60:	ldrh	r3, [r2, r3]
    ef64:	tst	r3, #4096	; 0x1000
    ef68:	bne	efc8 <pcap_next_etherent+0xf0>
    ef6c:	cmp	r0, #58	; 0x3a
    ef70:	strb	r9, [r8, #1]!
    ef74:	bne	effc <pcap_next_etherent+0x124>
    ef78:	mov	r0, r4
    ef7c:	bl	f24 <getc@plt>
    ef80:	cmp	r8, r6
    ef84:	beq	effc <pcap_next_etherent+0x124>
    ef88:	ldr	r2, [r5]
    ef8c:	lsl	r3, r0, #1
    ef90:	ldrh	r3, [r2, r3]
    ef94:	tst	r3, #2048	; 0x800
    ef98:	subne	r9, r0, #48	; 0x30
    ef9c:	beq	ef44 <pcap_next_etherent+0x6c>
    efa0:	b	ef50 <pcap_next_etherent+0x78>
    efa4:	mov	r0, r4
    efa8:	bl	f24 <getc@plt>
    efac:	cmp	r0, #10
    efb0:	cmnne	r0, #1
    efb4:	bne	efa4 <pcap_next_etherent+0xcc>
    efb8:	cmn	r0, #1
    efbc:	bne	ef08 <pcap_next_etherent+0x30>
    efc0:	mov	r0, #0
    efc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    efc8:	tst	r3, #2048	; 0x800
    efcc:	lsl	r9, r9, #4
    efd0:	subne	r3, r0, #48	; 0x30
    efd4:	bne	efe4 <pcap_next_etherent+0x10c>
    efd8:	tst	r3, #512	; 0x200
    efdc:	subne	r3, r0, #87	; 0x57
    efe0:	subeq	r3, r0, #55	; 0x37
    efe4:	mov	r0, r4
    efe8:	orr	r9, r9, r3
    efec:	bl	f24 <getc@plt>
    eff0:	strb	r9, [r8, #1]!
    eff4:	cmp	r0, #58	; 0x3a
    eff8:	beq	ef78 <pcap_next_etherent+0xa0>
    effc:	cmn	r0, #1
    f000:	beq	efc0 <pcap_next_etherent+0xe8>
    f004:	ldr	r3, [r5]
    f008:	lsl	r0, r0, #1
    f00c:	ldrh	r3, [r3, r0]
    f010:	tst	r3, #8192	; 0x2000
    f014:	bne	f040 <pcap_next_etherent+0x168>
    f018:	mov	r0, r4
    f01c:	bl	f24 <getc@plt>
    f020:	cmp	r0, #10
    f024:	cmnne	r0, #1
    f028:	bne	f018 <pcap_next_etherent+0x140>
    f02c:	cmn	r0, #1
    f030:	bne	ef08 <pcap_next_etherent+0x30>
    f034:	b	efc0 <pcap_next_etherent+0xe8>
    f038:	cmp	r0, #10
    f03c:	beq	ef08 <pcap_next_etherent+0x30>
    f040:	mov	r0, r4
    f044:	bl	f24 <getc@plt>
    f048:	ldr	r2, [r5]
    f04c:	lsl	r3, r0, #1
    f050:	ldrh	r3, [r2, r3]
    f054:	tst	r3, #8192	; 0x2000
    f058:	bne	f038 <pcap_next_etherent+0x160>
    f05c:	cmp	r0, #10
    f060:	beq	ef08 <pcap_next_etherent+0x30>
    f064:	cmp	r0, #35	; 0x23
    f068:	beq	f0e8 <pcap_next_etherent+0x210>
    f06c:	ldr	r6, [pc, #156]	; f110 <pcap_next_etherent+0x238>
    f070:	ldr	r7, [pc, #156]	; f114 <pcap_next_etherent+0x23c>
    f074:	add	r6, pc, r6
    f078:	add	r7, pc, r7
    f07c:	add	r6, r6, #6
    f080:	add	r7, r7, #127	; 0x7f
    f084:	b	f098 <pcap_next_etherent+0x1c0>
    f088:	cmn	r0, #1
    f08c:	beq	f100 <pcap_next_etherent+0x228>
    f090:	cmp	r6, r7
    f094:	beq	f0b8 <pcap_next_etherent+0x1e0>
    f098:	strb	r0, [r6], #1
    f09c:	mov	r0, r4
    f0a0:	bl	f24 <getc@plt>
    f0a4:	ldr	r2, [r5]
    f0a8:	lsl	r3, r0, #1
    f0ac:	ldrh	r3, [r2, r3]
    f0b0:	ands	r3, r3, #8192	; 0x2000
    f0b4:	beq	f088 <pcap_next_etherent+0x1b0>
    f0b8:	mov	r3, #0
    f0bc:	cmp	r0, #10
    f0c0:	strb	r3, [r6]
    f0c4:	beq	f0dc <pcap_next_etherent+0x204>
    f0c8:	mov	r0, r4
    f0cc:	bl	f24 <getc@plt>
    f0d0:	cmp	r0, #10
    f0d4:	cmnne	r0, #1
    f0d8:	bne	f0c8 <pcap_next_etherent+0x1f0>
    f0dc:	ldr	r0, [pc, #52]	; f118 <pcap_next_etherent+0x240>
    f0e0:	add	r0, pc, r0
    f0e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    f0e8:	mov	r0, r4
    f0ec:	bl	f24 <getc@plt>
    f0f0:	cmp	r0, #10
    f0f4:	cmnne	r0, #1
    f0f8:	bne	f0e8 <pcap_next_etherent+0x210>
    f0fc:	b	efb8 <pcap_next_etherent+0xe0>
    f100:	strb	r3, [r6]
    f104:	b	f0c8 <pcap_next_etherent+0x1f0>
    f108:	.word	0x00021bcc
    f10c:	.word	0x00021bbc
    f110:	.word	0x00021a44
    f114:	.word	0x00021a40
    f118:	.word	0x000219d8

0000f11c <str2tok>:
    f11c:	push	{r4, r5, r6, lr}
    f120:	mov	r5, r0
    f124:	ldr	r0, [r1, #4]
    f128:	cmp	r0, #0
    f12c:	movne	r4, r1
    f130:	bne	f148 <str2tok+0x2c>
    f134:	b	f160 <str2tok+0x44>
    f138:	add	r4, r4, #8
    f13c:	ldr	r0, [r4, #4]
    f140:	cmp	r0, #0
    f144:	beq	f160 <str2tok+0x44>
    f148:	mov	r1, r5
    f14c:	bl	ee98 <sfbpf_strcasecmp>
    f150:	cmp	r0, #0
    f154:	bne	f138 <str2tok+0x1c>
    f158:	ldr	r0, [r4]
    f15c:	pop	{r4, r5, r6, pc}
    f160:	mvn	r0, #0
    f164:	pop	{r4, r5, r6, pc}

0000f168 <sfbpf_parse>:
    f168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f16c:	sub	sp, sp, #3664	; 0xe50
    f170:	ldr	r3, [pc, #4072]	; 10160 <sfbpf_parse+0xff8>
    f174:	sub	sp, sp, #4
    f178:	add	r3, pc, r3
    f17c:	mov	r1, r3
    f180:	str	r3, [sp, #32]
    f184:	ldr	r3, [pc, #4056]	; 10164 <sfbpf_parse+0xffc>
    f188:	ldr	r2, [pc, #4056]	; 10168 <sfbpf_parse+0x1000>
    f18c:	mov	r5, #0
    f190:	ldr	r3, [r1, r3]
    f194:	add	r0, sp, #64	; 0x40
    f198:	mov	ip, r3
    f19c:	str	r3, [sp, #36]	; 0x24
    f1a0:	str	r5, [ip]
    f1a4:	str	r0, [sp, #28]
    f1a8:	ldr	r3, [pc, #4028]	; 1016c <sfbpf_parse+0x1004>
    f1ac:	ldr	r2, [r1, r2]
    f1b0:	add	r3, pc, r3
    f1b4:	mov	ip, r2
    f1b8:	str	r2, [sp, #8]
    f1bc:	ldr	r2, [pc, #4012]	; 10170 <sfbpf_parse+0x1008>
    f1c0:	sub	r3, r3, #3888	; 0xf30
    f1c4:	sub	r3, r3, #12
    f1c8:	add	r2, pc, r2
    f1cc:	str	r3, [sp, #20]
    f1d0:	sub	r3, r2, #3808	; 0xee0
    f1d4:	mov	fp, r0
    f1d8:	str	r3, [sp, #24]
    f1dc:	ldr	r3, [pc, #3984]	; 10174 <sfbpf_parse+0x100c>
    f1e0:	mov	r7, r5
    f1e4:	mov	r8, fp
    f1e8:	mov	sl, #200	; 0xc8
    f1ec:	mov	r0, r1
    f1f0:	add	r4, sp, #464	; 0x1d0
    f1f4:	mvn	r1, #1
    f1f8:	add	r3, pc, r3
    f1fc:	str	r1, [ip]
    f200:	strh	r5, [fp]
    f204:	str	r4, [sp, #12]
    f208:	str	r3, [sp, #16]
    f20c:	ldr	r2, [sp, #16]
    f210:	lsl	r3, r7, #1
    f214:	ldrsh	r5, [r2, r3]
    f218:	cmn	r5, #198	; 0xc6
    f21c:	beq	f280 <sfbpf_parse+0x118>
    f220:	ldr	r3, [sp, #8]
    f224:	ldr	r0, [r3]
    f228:	cmn	r0, #2
    f22c:	beq	f810 <sfbpf_parse+0x6a8>
    f230:	cmp	r0, #0
    f234:	ble	f7b0 <sfbpf_parse+0x648>
    f238:	ldr	r3, [pc, #3896]	; 10178 <sfbpf_parse+0x1010>
    f23c:	cmp	r0, r3
    f240:	movgt	r2, #2
    f244:	ldrle	r3, [pc, #3888]	; 1017c <sfbpf_parse+0x1014>
    f248:	addle	r3, pc, r3
    f24c:	addle	r0, r3, r0
    f250:	ldrble	r2, [r0, #548]	; 0x224
    f254:	ldr	r1, [pc, #3876]	; 10180 <sfbpf_parse+0x1018>
    f258:	add	r3, r2, r5
    f25c:	cmp	r3, r1
    f260:	bhi	f280 <sfbpf_parse+0x118>
    f264:	ldr	r1, [pc, #3864]	; 10184 <sfbpf_parse+0x101c>
    f268:	lsl	r3, r3, #1
    f26c:	add	r1, pc, r1
    f270:	add	r0, r1, #916	; 0x394
    f274:	ldrsh	r0, [r0, r3]
    f278:	cmp	r2, r0
    f27c:	beq	f7cc <sfbpf_parse+0x664>
    f280:	ldr	r5, [pc, #3840]	; 10188 <sfbpf_parse+0x1020>
    f284:	add	r5, pc, r5
    f288:	add	r5, r5, r7
    f28c:	ldrb	r5, [r5, #3596]	; 0xe0c
    f290:	cmp	r5, #0
    f294:	beq	10794 <sfbpf_parse+0x162c>
    f298:	ldr	r3, [pc, #3820]	; 1018c <sfbpf_parse+0x1024>
    f29c:	add	r7, sp, #48	; 0x30
    f2a0:	add	r3, pc, r3
    f2a4:	add	r3, r3, r5
    f2a8:	sub	ip, r5, #2
    f2ac:	ldrb	r6, [r3, #3872]	; 0xf20
    f2b0:	rsb	r3, r6, #1
    f2b4:	add	r3, r4, r3, lsl #4
    f2b8:	ldm	r3, {r0, r1, r2, r3}
    f2bc:	stm	r7, {r0, r1, r2, r3}
    f2c0:	mov	r9, r3
    f2c4:	str	r1, [sp, #4]
    f2c8:	str	r2, [sp]
    f2cc:	cmp	ip, #200	; 0xc8
    f2d0:	addls	pc, pc, ip, lsl #2
    f2d4:	b	f638 <sfbpf_parse+0x4d0>
    f2d8:	b	f850 <sfbpf_parse+0x6e8>
    f2dc:	b	f638 <sfbpf_parse+0x4d0>
    f2e0:	b	f85c <sfbpf_parse+0x6f4>
    f2e4:	b	f638 <sfbpf_parse+0x4d0>
    f2e8:	b	f870 <sfbpf_parse+0x708>
    f2ec:	b	f894 <sfbpf_parse+0x72c>
    f2f0:	b	f8b8 <sfbpf_parse+0x750>
    f2f4:	b	f8dc <sfbpf_parse+0x774>
    f2f8:	b	f900 <sfbpf_parse+0x798>
    f2fc:	b	f918 <sfbpf_parse+0x7b0>
    f300:	b	f638 <sfbpf_parse+0x4d0>
    f304:	b	f930 <sfbpf_parse+0x7c8>
    f308:	b	f950 <sfbpf_parse+0x7e8>
    f30c:	b	f968 <sfbpf_parse+0x800>
    f310:	b	f984 <sfbpf_parse+0x81c>
    f314:	b	f9a8 <sfbpf_parse+0x840>
    f318:	b	f5fc <sfbpf_parse+0x494>
    f31c:	b	f9cc <sfbpf_parse+0x864>
    f320:	b	f9f0 <sfbpf_parse+0x888>
    f324:	b	fa14 <sfbpf_parse+0x8ac>
    f328:	b	fa44 <sfbpf_parse+0x8dc>
    f32c:	b	fa74 <sfbpf_parse+0x90c>
    f330:	b	fa94 <sfbpf_parse+0x92c>
    f334:	b	faac <sfbpf_parse+0x944>
    f338:	b	f638 <sfbpf_parse+0x4d0>
    f33c:	b	fac4 <sfbpf_parse+0x95c>
    f340:	b	fae8 <sfbpf_parse+0x980>
    f344:	b	fb0c <sfbpf_parse+0x9a4>
    f348:	b	f638 <sfbpf_parse+0x4d0>
    f34c:	b	f638 <sfbpf_parse+0x4d0>
    f350:	b	fb2c <sfbpf_parse+0x9c4>
    f354:	b	fb4c <sfbpf_parse+0x9e4>
    f358:	b	fb68 <sfbpf_parse+0xa00>
    f35c:	b	fb84 <sfbpf_parse+0xa1c>
    f360:	b	fba0 <sfbpf_parse+0xa38>
    f364:	b	fbbc <sfbpf_parse+0xa54>
    f368:	b	fbd8 <sfbpf_parse+0xa70>
    f36c:	b	fbf4 <sfbpf_parse+0xa8c>
    f370:	b	fc0c <sfbpf_parse+0xaa4>
    f374:	b	fc1c <sfbpf_parse+0xab4>
    f378:	b	fc3c <sfbpf_parse+0xad4>
    f37c:	b	fc68 <sfbpf_parse+0xb00>
    f380:	b	fc94 <sfbpf_parse+0xb2c>
    f384:	b	fcac <sfbpf_parse+0xb44>
    f388:	b	fccc <sfbpf_parse+0xb64>
    f38c:	b	fcec <sfbpf_parse+0xb84>
    f390:	b	fd04 <sfbpf_parse+0xb9c>
    f394:	b	fd24 <sfbpf_parse+0xbbc>
    f398:	b	f638 <sfbpf_parse+0x4d0>
    f39c:	b	fd3c <sfbpf_parse+0xbd4>
    f3a0:	b	fd48 <sfbpf_parse+0xbe0>
    f3a4:	b	fd54 <sfbpf_parse+0xbec>
    f3a8:	b	fd60 <sfbpf_parse+0xbf8>
    f3ac:	b	fd6c <sfbpf_parse+0xc04>
    f3b0:	b	fd78 <sfbpf_parse+0xc10>
    f3b4:	b	fd84 <sfbpf_parse+0xc1c>
    f3b8:	b	fd90 <sfbpf_parse+0xc28>
    f3bc:	b	fd9c <sfbpf_parse+0xc34>
    f3c0:	b	fda8 <sfbpf_parse+0xc40>
    f3c4:	b	fdb4 <sfbpf_parse+0xc4c>
    f3c8:	b	fdc0 <sfbpf_parse+0xc58>
    f3cc:	b	fdcc <sfbpf_parse+0xc64>
    f3d0:	b	fdd8 <sfbpf_parse+0xc70>
    f3d4:	b	fde4 <sfbpf_parse+0xc7c>
    f3d8:	b	fdf0 <sfbpf_parse+0xc88>
    f3dc:	b	fdfc <sfbpf_parse+0xc94>
    f3e0:	b	fe08 <sfbpf_parse+0xca0>
    f3e4:	b	fe14 <sfbpf_parse+0xcac>
    f3e8:	b	fe20 <sfbpf_parse+0xcb8>
    f3ec:	b	fe2c <sfbpf_parse+0xcc4>
    f3f0:	b	fe38 <sfbpf_parse+0xcd0>
    f3f4:	b	fe44 <sfbpf_parse+0xcdc>
    f3f8:	b	fe50 <sfbpf_parse+0xce8>
    f3fc:	b	fe5c <sfbpf_parse+0xcf4>
    f400:	b	fe68 <sfbpf_parse+0xd00>
    f404:	b	fe74 <sfbpf_parse+0xd0c>
    f408:	b	fe80 <sfbpf_parse+0xd18>
    f40c:	b	fe8c <sfbpf_parse+0xd24>
    f410:	b	fe98 <sfbpf_parse+0xd30>
    f414:	b	fea4 <sfbpf_parse+0xd3c>
    f418:	b	feb0 <sfbpf_parse+0xd48>
    f41c:	b	febc <sfbpf_parse+0xd54>
    f420:	b	fec8 <sfbpf_parse+0xd60>
    f424:	b	fed4 <sfbpf_parse+0xd6c>
    f428:	b	fee0 <sfbpf_parse+0xd78>
    f42c:	b	feec <sfbpf_parse+0xd84>
    f430:	b	fef8 <sfbpf_parse+0xd90>
    f434:	b	ff04 <sfbpf_parse+0xd9c>
    f438:	b	ff10 <sfbpf_parse+0xda8>
    f43c:	b	ff1c <sfbpf_parse+0xdb4>
    f440:	b	ff28 <sfbpf_parse+0xdc0>
    f444:	b	ff34 <sfbpf_parse+0xdcc>
    f448:	b	ff40 <sfbpf_parse+0xdd8>
    f44c:	b	ff4c <sfbpf_parse+0xde4>
    f450:	b	ff58 <sfbpf_parse+0xdf0>
    f454:	b	ff64 <sfbpf_parse+0xdfc>
    f458:	b	ff70 <sfbpf_parse+0xe08>
    f45c:	b	ff7c <sfbpf_parse+0xe14>
    f460:	b	ff88 <sfbpf_parse+0xe20>
    f464:	b	ff94 <sfbpf_parse+0xe2c>
    f468:	b	ffa0 <sfbpf_parse+0xe38>
    f46c:	b	ffac <sfbpf_parse+0xe44>
    f470:	b	ffb8 <sfbpf_parse+0xe50>
    f474:	b	ffc4 <sfbpf_parse+0xe5c>
    f478:	b	ffd4 <sfbpf_parse+0xe6c>
    f47c:	b	ffe4 <sfbpf_parse+0xe7c>
    f480:	b	fff4 <sfbpf_parse+0xe8c>
    f484:	b	10004 <sfbpf_parse+0xe9c>
    f488:	b	1001c <sfbpf_parse+0xeb4>
    f48c:	b	1002c <sfbpf_parse+0xec4>
    f490:	b	1003c <sfbpf_parse+0xed4>
    f494:	b	1004c <sfbpf_parse+0xee4>
    f498:	b	1005c <sfbpf_parse+0xef4>
    f49c:	b	1006c <sfbpf_parse+0xf04>
    f4a0:	b	1007c <sfbpf_parse+0xf14>
    f4a4:	b	10088 <sfbpf_parse+0xf20>
    f4a8:	b	10094 <sfbpf_parse+0xf2c>
    f4ac:	b	100a0 <sfbpf_parse+0xf38>
    f4b0:	b	100ac <sfbpf_parse+0xf44>
    f4b4:	b	100bc <sfbpf_parse+0xf54>
    f4b8:	b	100cc <sfbpf_parse+0xf64>
    f4bc:	b	100dc <sfbpf_parse+0xf74>
    f4c0:	b	100ec <sfbpf_parse+0xf84>
    f4c4:	b	100fc <sfbpf_parse+0xf94>
    f4c8:	b	1010c <sfbpf_parse+0xfa4>
    f4cc:	b	10128 <sfbpf_parse+0xfc0>
    f4d0:	b	1013c <sfbpf_parse+0xfd4>
    f4d4:	b	10150 <sfbpf_parse+0xfe8>
    f4d8:	b	f638 <sfbpf_parse+0x4d0>
    f4dc:	b	10238 <sfbpf_parse+0x10d0>
    f4e0:	b	f638 <sfbpf_parse+0x4d0>
    f4e4:	b	10264 <sfbpf_parse+0x10fc>
    f4e8:	b	1028c <sfbpf_parse+0x1124>
    f4ec:	b	f638 <sfbpf_parse+0x4d0>
    f4f0:	b	10304 <sfbpf_parse+0x119c>
    f4f4:	b	1034c <sfbpf_parse+0x11e4>
    f4f8:	b	10358 <sfbpf_parse+0x11f0>
    f4fc:	b	10364 <sfbpf_parse+0x11fc>
    f500:	b	10370 <sfbpf_parse+0x1208>
    f504:	b	1037c <sfbpf_parse+0x1214>
    f508:	b	10388 <sfbpf_parse+0x1220>
    f50c:	b	10394 <sfbpf_parse+0x122c>
    f510:	b	103a0 <sfbpf_parse+0x1238>
    f514:	b	103ac <sfbpf_parse+0x1244>
    f518:	b	103b8 <sfbpf_parse+0x1250>
    f51c:	b	f638 <sfbpf_parse+0x4d0>
    f520:	b	103c8 <sfbpf_parse+0x1260>
    f524:	b	103e0 <sfbpf_parse+0x1278>
    f528:	b	103f8 <sfbpf_parse+0x1290>
    f52c:	b	10410 <sfbpf_parse+0x12a8>
    f530:	b	10428 <sfbpf_parse+0x12c0>
    f534:	b	10440 <sfbpf_parse+0x12d8>
    f538:	b	10458 <sfbpf_parse+0x12f0>
    f53c:	b	10470 <sfbpf_parse+0x1308>
    f540:	b	10488 <sfbpf_parse+0x1320>
    f544:	b	104a0 <sfbpf_parse+0x1338>
    f548:	b	104b8 <sfbpf_parse+0x1350>
    f54c:	b	104c8 <sfbpf_parse+0x1360>
    f550:	b	104d4 <sfbpf_parse+0x136c>
    f554:	b	104e0 <sfbpf_parse+0x1378>
    f558:	b	104ec <sfbpf_parse+0x1384>
    f55c:	b	104f8 <sfbpf_parse+0x1390>
    f560:	b	10504 <sfbpf_parse+0x139c>
    f564:	b	10510 <sfbpf_parse+0x13a8>
    f568:	b	f638 <sfbpf_parse+0x4d0>
    f56c:	b	1051c <sfbpf_parse+0x13b4>
    f570:	b	10528 <sfbpf_parse+0x13c0>
    f574:	b	10534 <sfbpf_parse+0x13cc>
    f578:	b	10540 <sfbpf_parse+0x13d8>
    f57c:	b	1054c <sfbpf_parse+0x13e4>
    f580:	b	10558 <sfbpf_parse+0x13f0>
    f584:	b	10564 <sfbpf_parse+0x13fc>
    f588:	b	10570 <sfbpf_parse+0x1408>
    f58c:	b	1057c <sfbpf_parse+0x1414>
    f590:	b	10588 <sfbpf_parse+0x1420>
    f594:	b	10594 <sfbpf_parse+0x142c>
    f598:	b	105a0 <sfbpf_parse+0x1438>
    f59c:	b	105ac <sfbpf_parse+0x1444>
    f5a0:	b	105b8 <sfbpf_parse+0x1450>
    f5a4:	b	105c4 <sfbpf_parse+0x145c>
    f5a8:	b	f638 <sfbpf_parse+0x4d0>
    f5ac:	b	105d0 <sfbpf_parse+0x1468>
    f5b0:	b	105ec <sfbpf_parse+0x1484>
    f5b4:	b	10608 <sfbpf_parse+0x14a0>
    f5b8:	b	10620 <sfbpf_parse+0x14b8>
    f5bc:	b	f638 <sfbpf_parse+0x4d0>
    f5c0:	b	10650 <sfbpf_parse+0x14e8>
    f5c4:	b	10674 <sfbpf_parse+0x150c>
    f5c8:	b	10680 <sfbpf_parse+0x1518>
    f5cc:	b	1068c <sfbpf_parse+0x1524>
    f5d0:	b	10698 <sfbpf_parse+0x1530>
    f5d4:	b	106a4 <sfbpf_parse+0x153c>
    f5d8:	b	106b0 <sfbpf_parse+0x1548>
    f5dc:	b	106bc <sfbpf_parse+0x1554>
    f5e0:	b	f638 <sfbpf_parse+0x4d0>
    f5e4:	b	106c8 <sfbpf_parse+0x1560>
    f5e8:	b	106e4 <sfbpf_parse+0x157c>
    f5ec:	b	10700 <sfbpf_parse+0x1598>
    f5f0:	b	10718 <sfbpf_parse+0x15b0>
    f5f4:	b	f638 <sfbpf_parse+0x4d0>
    f5f8:	b	f82c <sfbpf_parse+0x6c4>
    f5fc:	ldr	r2, [r4, #-16]
    f600:	str	r2, [sp, #48]	; 0x30
    f604:	uxtb	r3, r2
    f608:	cmp	r3, #3
    f60c:	beq	1084c <sfbpf_parse+0x16e4>
    f610:	cmp	r3, #7
    f614:	beq	10840 <sfbpf_parse+0x16d8>
    f618:	cmp	r3, #5
    f61c:	beq	10864 <sfbpf_parse+0x16fc>
    f620:	cmp	r3, #6
    f624:	beq	10858 <sfbpf_parse+0x16f0>
    f628:	mov	r1, #0
    f62c:	ldr	r0, [r4]
    f630:	bl	9778 <sf_gen_ncode>
    f634:	mov	r9, r0
    f638:	ldr	ip, [pc, #2896]	; 10190 <sfbpf_parse+0x1028>
    f63c:	ldr	r3, [sp, #4]
    f640:	add	ip, pc, ip
    f644:	str	r3, [sp, #52]	; 0x34
    f648:	add	r5, ip, r5
    f64c:	ldr	r3, [sp]
    f650:	sxth	r6, r6
    f654:	ldrb	lr, [r5, #4080]	; 0xff0
    f658:	str	r3, [sp, #56]	; 0x38
    f65c:	str	r9, [sp, #60]	; 0x3c
    f660:	ldm	r7, {r0, r1, r2, r3}
    f664:	sub	r4, r4, r6, lsl #4
    f668:	add	r4, r4, #16
    f66c:	sub	lr, lr, #126	; 0x7e
    f670:	stm	r4, {r0, r1, r2, r3}
    f674:	sub	r6, r8, r6, lsl #1
    f678:	ldr	r3, [sp, #20]
    f67c:	lsl	lr, lr, #1
    f680:	ldrsh	r2, [r6]
    f684:	ldrsh	r3, [r3, lr]
    f688:	ldr	r1, [pc, #2800]	; 10180 <sfbpf_parse+0x1018>
    f68c:	add	r3, r3, r2
    f690:	cmp	r3, r1
    f694:	bhi	f6ac <sfbpf_parse+0x544>
    f698:	lsl	r3, r3, #1
    f69c:	add	r1, ip, #916	; 0x394
    f6a0:	ldrsh	r1, [r1, r3]
    f6a4:	cmp	r1, r2
    f6a8:	beq	f7c0 <sfbpf_parse+0x658>
    f6ac:	ldr	r3, [sp, #24]
    f6b0:	ldrsh	r7, [r3, lr]
    f6b4:	sub	r3, sl, #-2147483647	; 0x80000001
    f6b8:	add	r8, r6, #2
    f6bc:	lsl	r3, r3, #1
    f6c0:	add	r2, fp, r3
    f6c4:	cmp	r8, r2
    f6c8:	strh	r7, [r6, #2]
    f6cc:	bcc	f780 <sfbpf_parse+0x618>
    f6d0:	sub	r4, r8, fp
    f6d4:	ldr	r2, [pc, #2744]	; 10194 <sfbpf_parse+0x102c>
    f6d8:	asr	r4, r4, #1
    f6dc:	cmp	sl, r2
    f6e0:	add	r4, r4, #1
    f6e4:	bhi	1076c <sfbpf_parse+0x1604>
    f6e8:	ldr	sl, [pc, #2728]	; 10198 <sfbpf_parse+0x1030>
    f6ec:	add	r3, r3, #2
    f6f0:	cmp	r3, sl
    f6f4:	movcc	sl, r3
    f6f8:	add	r0, sl, sl, lsl #3
    f6fc:	lsl	r0, r0, #1
    f700:	add	r0, r0, #15
    f704:	bl	e1c <malloc@plt>
    f708:	subs	r5, r0, #0
    f70c:	beq	1076c <sfbpf_parse+0x1604>
    f710:	lsl	r6, sl, #1
    f714:	add	r9, r6, #15
    f718:	lsl	r8, r4, #1
    f71c:	bic	r9, r9, #15
    f720:	mov	r2, r8
    f724:	mov	r1, fp
    f728:	lsl	r4, r4, #4
    f72c:	add	r9, r5, r9
    f730:	bl	dc8 <memcpy@plt>
    f734:	ldr	r1, [sp, #12]
    f738:	mov	r0, r9
    f73c:	mov	r2, r4
    f740:	bl	dc8 <memcpy@plt>
    f744:	ldr	r3, [sp, #28]
    f748:	cmp	fp, r3
    f74c:	beq	f758 <sfbpf_parse+0x5f0>
    f750:	mov	r0, fp
    f754:	bl	da4 <free@plt>
    f758:	sub	r8, r8, #2
    f75c:	sub	r6, r6, #2
    f760:	add	r8, r5, r8
    f764:	add	r6, r5, r6
    f768:	sub	r4, r4, #16
    f76c:	cmp	r8, r6
    f770:	add	r4, r9, r4
    f774:	bcs	f820 <sfbpf_parse+0x6b8>
    f778:	mov	fp, r5
    f77c:	str	r9, [sp, #12]
    f780:	cmp	r7, #3
    f784:	bne	f20c <sfbpf_parse+0xa4>
    f788:	mov	r4, #0
    f78c:	ldr	r3, [sp, #28]
    f790:	cmp	fp, r3
    f794:	beq	f7a0 <sfbpf_parse+0x638>
    f798:	mov	r0, fp
    f79c:	bl	da4 <free@plt>
    f7a0:	mov	r0, r4
    f7a4:	add	sp, sp, #3664	; 0xe50
    f7a8:	add	sp, sp, #4
    f7ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f7b0:	ldr	r3, [sp, #8]
    f7b4:	mov	r2, #0
    f7b8:	str	r2, [r3]
    f7bc:	b	f254 <sfbpf_parse+0xec>
    f7c0:	add	ip, ip, #2256	; 0x8d0
    f7c4:	ldrsh	r7, [ip, r3]
    f7c8:	b	f6b4 <sfbpf_parse+0x54c>
    f7cc:	add	r1, r1, #2256	; 0x8d0
    f7d0:	ldrsh	r7, [r1, r3]
    f7d4:	cmp	r7, #0
    f7d8:	rsble	r5, r7, #0
    f7dc:	ble	f298 <sfbpf_parse+0x130>
    f7e0:	ldr	r1, [sp, #8]
    f7e4:	mvn	r2, #1
    f7e8:	ldr	r3, [pc, #2476]	; 1019c <sfbpf_parse+0x1034>
    f7ec:	str	r2, [r1]
    f7f0:	ldr	r2, [sp, #32]
    f7f4:	add	ip, r4, #16
    f7f8:	mov	r6, r8
    f7fc:	ldr	r3, [r2, r3]
    f800:	mov	r4, ip
    f804:	ldm	r3, {r0, r1, r2, r3}
    f808:	stm	ip, {r0, r1, r2, r3}
    f80c:	b	f6b4 <sfbpf_parse+0x54c>
    f810:	bl	10cd4 <sfbpf_lex>
    f814:	ldr	r3, [sp, #8]
    f818:	str	r0, [r3]
    f81c:	b	f230 <sfbpf_parse+0xc8>
    f820:	mov	fp, r5
    f824:	mov	r4, #1
    f828:	b	f78c <sfbpf_parse+0x624>
    f82c:	ldr	r9, [r4, #12]
    f830:	ldr	r0, [r4, #-20]	; 0xffffffec
    f834:	mov	r1, r9
    f838:	bl	49c0 <sf_gen_or>
    f83c:	ldm	r4, {r0, r1, r2, r3}
    f840:	stm	r7, {r0, r1, r2, r3}
    f844:	str	r1, [sp, #4]
    f848:	str	r2, [sp]
    f84c:	b	f638 <sfbpf_parse+0x4d0>
    f850:	ldr	r0, [r4, #12]
    f854:	bl	3d34 <sf_finish_parse>
    f858:	b	f638 <sfbpf_parse+0x4d0>
    f85c:	ldr	r3, [pc, #2364]	; 101a0 <sfbpf_parse+0x1038>
    f860:	add	r3, pc, r3
    f864:	ldr	r3, [r3, #4076]	; 0xfec
    f868:	str	r3, [sp, #48]	; 0x30
    f86c:	b	f638 <sfbpf_parse+0x4d0>
    f870:	ldr	r9, [r4, #12]
    f874:	ldr	r0, [r4, #-20]	; 0xffffffec
    f878:	mov	r1, r9
    f87c:	bl	3ca0 <sf_gen_and>
    f880:	ldm	r4, {r0, r1, r2, r3}
    f884:	stm	r7, {r0, r1, r2, r3}
    f888:	str	r1, [sp, #4]
    f88c:	str	r2, [sp]
    f890:	b	f638 <sfbpf_parse+0x4d0>
    f894:	ldr	r9, [r4, #12]
    f898:	ldr	r0, [r4, #-20]	; 0xffffffec
    f89c:	mov	r1, r9
    f8a0:	bl	3ca0 <sf_gen_and>
    f8a4:	ldm	r4, {r0, r1, r2, r3}
    f8a8:	stm	r7, {r0, r1, r2, r3}
    f8ac:	str	r1, [sp, #4]
    f8b0:	str	r2, [sp]
    f8b4:	b	f638 <sfbpf_parse+0x4d0>
    f8b8:	ldr	r9, [r4, #12]
    f8bc:	ldr	r0, [r4, #-20]	; 0xffffffec
    f8c0:	mov	r1, r9
    f8c4:	bl	49c0 <sf_gen_or>
    f8c8:	ldm	r4, {r0, r1, r2, r3}
    f8cc:	stm	r7, {r0, r1, r2, r3}
    f8d0:	str	r1, [sp, #4]
    f8d4:	str	r2, [sp]
    f8d8:	b	f638 <sfbpf_parse+0x4d0>
    f8dc:	ldr	r9, [r4, #12]
    f8e0:	ldr	r0, [r4, #-20]	; 0xffffffec
    f8e4:	mov	r1, r9
    f8e8:	bl	49c0 <sf_gen_or>
    f8ec:	ldm	r4, {r0, r1, r2, r3}
    f8f0:	stm	r7, {r0, r1, r2, r3}
    f8f4:	str	r1, [sp, #4]
    f8f8:	str	r2, [sp]
    f8fc:	b	f638 <sfbpf_parse+0x4d0>
    f900:	ldmdb	r4, {r0, r1, r2, r3}
    f904:	ldr	r9, [r4, #-4]
    f908:	str	r1, [sp, #4]
    f90c:	stm	r7, {r0, r1, r2, r3}
    f910:	str	r2, [sp]
    f914:	b	f638 <sfbpf_parse+0x4d0>
    f918:	ldmdb	r4, {r0, r1, r2, r3}
    f91c:	ldr	r9, [r4, #-4]
    f920:	str	r1, [sp, #4]
    f924:	stm	r7, {r0, r1, r2, r3}
    f928:	str	r2, [sp]
    f92c:	b	f638 <sfbpf_parse+0x4d0>
    f930:	ldr	r3, [r4, #-16]
    f934:	ldr	r1, [r4]
    f938:	mov	r2, r3
    f93c:	mov	r0, #0
    f940:	str	r3, [sp, #48]	; 0x30
    f944:	bl	9778 <sf_gen_ncode>
    f948:	mov	r9, r0
    f94c:	b	f638 <sfbpf_parse+0x4d0>
    f950:	ldmdb	r4, {r0, r1, r2, r3}
    f954:	ldr	r9, [r4, #-4]
    f958:	str	r1, [sp, #4]
    f95c:	stm	r7, {r0, r1, r2, r3}
    f960:	str	r2, [sp]
    f964:	b	f638 <sfbpf_parse+0x4d0>
    f968:	ldr	r3, [r4, #-16]
    f96c:	ldr	r0, [r4]
    f970:	mov	r1, r3
    f974:	str	r3, [sp, #48]	; 0x30
    f978:	bl	a83c <sf_gen_scode>
    f97c:	mov	r9, r0
    f980:	b	f638 <sfbpf_parse+0x4d0>
    f984:	ldr	ip, [r4, #-48]	; 0xffffffd0
    f988:	ldr	r0, [r4, #-32]	; 0xffffffe0
    f98c:	ldr	r2, [r4]
    f990:	mov	r3, ip
    f994:	mov	r1, #0
    f998:	str	ip, [sp, #48]	; 0x30
    f99c:	bl	8abc <sf_gen_mcode>
    f9a0:	mov	r9, r0
    f9a4:	b	f638 <sfbpf_parse+0x4d0>
    f9a8:	ldr	ip, [r4, #-48]	; 0xffffffd0
    f9ac:	ldr	r0, [r4, #-32]	; 0xffffffe0
    f9b0:	ldr	r1, [r4]
    f9b4:	mov	r3, ip
    f9b8:	mov	r2, #0
    f9bc:	str	ip, [sp, #48]	; 0x30
    f9c0:	bl	8abc <sf_gen_mcode>
    f9c4:	mov	r9, r0
    f9c8:	b	f638 <sfbpf_parse+0x4d0>
    f9cc:	ldr	ip, [r4, #-48]	; 0xffffffd0
    f9d0:	ldr	r0, [r4, #-32]	; 0xffffffe0
    f9d4:	ldr	r2, [r4]
    f9d8:	mov	r3, ip
    f9dc:	mov	r1, #0
    f9e0:	str	ip, [sp, #48]	; 0x30
    f9e4:	bl	a67c <sf_gen_mcode6>
    f9e8:	mov	r9, r0
    f9ec:	b	f638 <sfbpf_parse+0x4d0>
    f9f0:	ldr	ip, [r4, #-16]
    f9f4:	ldr	r0, [r4]
    f9f8:	mov	r3, ip
    f9fc:	mov	r2, #128	; 0x80
    fa00:	mov	r1, #0
    fa04:	str	ip, [sp, #48]	; 0x30
    fa08:	bl	a67c <sf_gen_mcode6>
    fa0c:	mov	r9, r0
    fa10:	b	f638 <sfbpf_parse+0x4d0>
    fa14:	ldr	r3, [r4]
    fa18:	ldr	r2, [r4, #-16]
    fa1c:	mov	r0, r3
    fa20:	mov	r1, r2
    fa24:	str	r3, [sp, #40]	; 0x28
    fa28:	str	r2, [sp, #48]	; 0x30
    fa2c:	bl	5a88 <sf_gen_ecode>
    fa30:	ldr	r3, [sp, #40]	; 0x28
    fa34:	mov	r9, r0
    fa38:	mov	r0, r3
    fa3c:	bl	da4 <free@plt>
    fa40:	b	f638 <sfbpf_parse+0x4d0>
    fa44:	ldr	r3, [r4]
    fa48:	ldr	r2, [r4, #-16]
    fa4c:	mov	r0, r3
    fa50:	mov	r1, r2
    fa54:	str	r3, [sp, #40]	; 0x28
    fa58:	str	r2, [sp, #48]	; 0x30
    fa5c:	bl	6314 <sf_gen_acode>
    fa60:	ldr	r3, [sp, #40]	; 0x28
    fa64:	mov	r9, r0
    fa68:	mov	r0, r3
    fa6c:	bl	da4 <free@plt>
    fa70:	b	f638 <sfbpf_parse+0x4d0>
    fa74:	ldr	r9, [r4, #12]
    fa78:	mov	r0, r9
    fa7c:	bl	5634 <sf_gen_not>
    fa80:	ldm	r4, {r0, r1, r2, r3}
    fa84:	stm	r7, {r0, r1, r2, r3}
    fa88:	str	r1, [sp, #4]
    fa8c:	str	r2, [sp]
    fa90:	b	f638 <sfbpf_parse+0x4d0>
    fa94:	ldmdb	r4, {r0, r1, r2, r3}
    fa98:	ldr	r9, [r4, #-4]
    fa9c:	str	r1, [sp, #4]
    faa0:	stm	r7, {r0, r1, r2, r3}
    faa4:	str	r2, [sp]
    faa8:	b	f638 <sfbpf_parse+0x4d0>
    faac:	ldmdb	r4, {r0, r1, r2, r3}
    fab0:	ldr	r9, [r4, #-4]
    fab4:	str	r1, [sp, #4]
    fab8:	stm	r7, {r0, r1, r2, r3}
    fabc:	str	r2, [sp]
    fac0:	b	f638 <sfbpf_parse+0x4d0>
    fac4:	ldr	r9, [r4, #12]
    fac8:	ldr	r0, [r4, #-20]	; 0xffffffec
    facc:	mov	r1, r9
    fad0:	bl	3ca0 <sf_gen_and>
    fad4:	ldm	r4, {r0, r1, r2, r3}
    fad8:	stm	r7, {r0, r1, r2, r3}
    fadc:	str	r1, [sp, #4]
    fae0:	str	r2, [sp]
    fae4:	b	f638 <sfbpf_parse+0x4d0>
    fae8:	ldr	r9, [r4, #12]
    faec:	ldr	r0, [r4, #-20]	; 0xffffffec
    faf0:	mov	r1, r9
    faf4:	bl	49c0 <sf_gen_or>
    faf8:	ldm	r4, {r0, r1, r2, r3}
    fafc:	stm	r7, {r0, r1, r2, r3}
    fb00:	str	r1, [sp, #4]
    fb04:	str	r2, [sp]
    fb08:	b	f638 <sfbpf_parse+0x4d0>
    fb0c:	ldr	r3, [r4, #-16]
    fb10:	ldr	r1, [r4]
    fb14:	mov	r2, r3
    fb18:	mov	r0, #0
    fb1c:	str	r3, [sp, #48]	; 0x30
    fb20:	bl	9778 <sf_gen_ncode>
    fb24:	mov	r9, r0
    fb28:	b	f638 <sfbpf_parse+0x4d0>
    fb2c:	ldr	r9, [r4, #12]
    fb30:	mov	r0, r9
    fb34:	bl	5634 <sf_gen_not>
    fb38:	ldm	r4, {r0, r1, r2, r3}
    fb3c:	stm	r7, {r0, r1, r2, r3}
    fb40:	str	r1, [sp, #4]
    fb44:	str	r2, [sp]
    fb48:	b	f638 <sfbpf_parse+0x4d0>
    fb4c:	ldr	r3, [r4, #-32]	; 0xffffffe0
    fb50:	ldr	r2, [r4, #-16]
    fb54:	strb	r3, [sp, #49]	; 0x31
    fb58:	ldr	r3, [r4]
    fb5c:	strb	r2, [sp, #50]	; 0x32
    fb60:	strb	r3, [sp, #48]	; 0x30
    fb64:	b	f638 <sfbpf_parse+0x4d0>
    fb68:	ldr	r3, [r4, #-16]
    fb6c:	ldr	r2, [r4]
    fb70:	strb	r3, [sp, #49]	; 0x31
    fb74:	mov	r3, #0
    fb78:	strb	r2, [sp, #50]	; 0x32
    fb7c:	strb	r3, [sp, #48]	; 0x30
    fb80:	b	f638 <sfbpf_parse+0x4d0>
    fb84:	ldr	r3, [r4, #-16]
    fb88:	ldr	r2, [r4]
    fb8c:	strb	r3, [sp, #49]	; 0x31
    fb90:	mov	r3, #0
    fb94:	strb	r2, [sp, #48]	; 0x30
    fb98:	strb	r3, [sp, #50]	; 0x32
    fb9c:	b	f638 <sfbpf_parse+0x4d0>
    fba0:	ldr	r3, [r4, #-16]
    fba4:	mov	r2, #0
    fba8:	strb	r3, [sp, #49]	; 0x31
    fbac:	mov	r3, #5
    fbb0:	strb	r2, [sp, #50]	; 0x32
    fbb4:	strb	r3, [sp, #48]	; 0x30
    fbb8:	b	f638 <sfbpf_parse+0x4d0>
    fbbc:	ldr	r3, [r4, #-16]
    fbc0:	mov	r2, #0
    fbc4:	strb	r3, [sp, #49]	; 0x31
    fbc8:	mov	r3, #6
    fbcc:	strb	r2, [sp, #50]	; 0x32
    fbd0:	strb	r3, [sp, #48]	; 0x30
    fbd4:	b	f638 <sfbpf_parse+0x4d0>
    fbd8:	ldr	r3, [r4, #-16]
    fbdc:	ldr	r2, [r4]
    fbe0:	strb	r3, [sp, #49]	; 0x31
    fbe4:	mov	r3, #0
    fbe8:	strb	r2, [sp, #48]	; 0x30
    fbec:	strb	r3, [sp, #50]	; 0x32
    fbf0:	b	f638 <sfbpf_parse+0x4d0>
    fbf4:	ldm	r4, {r0, r1, r2, r3}
    fbf8:	stm	r7, {r0, r1, r2, r3}
    fbfc:	mov	r9, r3
    fc00:	str	r1, [sp, #4]
    fc04:	str	r2, [sp]
    fc08:	b	f638 <sfbpf_parse+0x4d0>
    fc0c:	ldr	r3, [r4, #-32]	; 0xffffffe0
    fc10:	ldr	r9, [r4, #-4]
    fc14:	str	r3, [sp, #48]	; 0x30
    fc18:	b	f638 <sfbpf_parse+0x4d0>
    fc1c:	ldr	r0, [r4]
    fc20:	bl	7654 <sf_gen_proto_abbrev>
    fc24:	ldr	r3, [pc, #1400]	; 101a4 <sfbpf_parse+0x103c>
    fc28:	add	r3, pc, r3
    fc2c:	ldr	r3, [r3, #4076]	; 0xfec
    fc30:	str	r3, [sp, #48]	; 0x30
    fc34:	mov	r9, r0
    fc38:	b	f638 <sfbpf_parse+0x4d0>
    fc3c:	mov	r3, #0
    fc40:	ldr	r2, [r4]
    fc44:	ldr	r1, [r4, #-32]	; 0xffffffe0
    fc48:	ldr	r0, [r4, #-16]
    fc4c:	bl	5c10 <sf_gen_relation>
    fc50:	ldr	r3, [pc, #1360]	; 101a8 <sfbpf_parse+0x1040>
    fc54:	add	r3, pc, r3
    fc58:	ldr	r3, [r3, #4076]	; 0xfec
    fc5c:	str	r3, [sp, #48]	; 0x30
    fc60:	mov	r9, r0
    fc64:	b	f638 <sfbpf_parse+0x4d0>
    fc68:	mov	r3, #1
    fc6c:	ldr	r2, [r4]
    fc70:	ldr	r1, [r4, #-32]	; 0xffffffe0
    fc74:	ldr	r0, [r4, #-16]
    fc78:	bl	5c10 <sf_gen_relation>
    fc7c:	ldr	r3, [pc, #1320]	; 101ac <sfbpf_parse+0x1044>
    fc80:	add	r3, pc, r3
    fc84:	ldr	r3, [r3, #4076]	; 0xfec
    fc88:	str	r3, [sp, #48]	; 0x30
    fc8c:	mov	r9, r0
    fc90:	b	f638 <sfbpf_parse+0x4d0>
    fc94:	ldr	r3, [pc, #1300]	; 101b0 <sfbpf_parse+0x1048>
    fc98:	ldr	r9, [r4]
    fc9c:	add	r3, pc, r3
    fca0:	ldr	r3, [r3, #4076]	; 0xfec
    fca4:	str	r3, [sp, #48]	; 0x30
    fca8:	b	f638 <sfbpf_parse+0x4d0>
    fcac:	ldr	r0, [r4]
    fcb0:	bl	b000 <sf_gen_atmtype_abbrev>
    fcb4:	ldr	r3, [pc, #1272]	; 101b4 <sfbpf_parse+0x104c>
    fcb8:	add	r3, pc, r3
    fcbc:	ldr	r3, [r3, #4076]	; 0xfec
    fcc0:	str	r3, [sp, #48]	; 0x30
    fcc4:	mov	r9, r0
    fcc8:	b	f638 <sfbpf_parse+0x4d0>
    fccc:	ldr	r0, [r4]
    fcd0:	bl	b698 <sf_gen_atmmulti_abbrev>
    fcd4:	ldr	r3, [pc, #1244]	; 101b8 <sfbpf_parse+0x1050>
    fcd8:	add	r3, pc, r3
    fcdc:	ldr	r3, [r3, #4076]	; 0xfec
    fce0:	str	r3, [sp, #48]	; 0x30
    fce4:	mov	r9, r0
    fce8:	b	f638 <sfbpf_parse+0x4d0>
    fcec:	ldr	r3, [pc, #1224]	; 101bc <sfbpf_parse+0x1054>
    fcf0:	ldr	r9, [r4, #12]
    fcf4:	add	r3, pc, r3
    fcf8:	ldr	r3, [r3, #4076]	; 0xfec
    fcfc:	str	r3, [sp, #48]	; 0x30
    fd00:	b	f638 <sfbpf_parse+0x4d0>
    fd04:	ldr	r0, [r4]
    fd08:	bl	b308 <sf_gen_mtp2type_abbrev>
    fd0c:	ldr	r3, [pc, #1196]	; 101c0 <sfbpf_parse+0x1058>
    fd10:	add	r3, pc, r3
    fd14:	ldr	r3, [r3, #4076]	; 0xfec
    fd18:	str	r3, [sp, #48]	; 0x30
    fd1c:	mov	r9, r0
    fd20:	b	f638 <sfbpf_parse+0x4d0>
    fd24:	ldr	r3, [pc, #1176]	; 101c4 <sfbpf_parse+0x105c>
    fd28:	ldr	r9, [r4, #12]
    fd2c:	add	r3, pc, r3
    fd30:	ldr	r3, [r3, #4076]	; 0xfec
    fd34:	str	r3, [sp, #48]	; 0x30
    fd38:	b	f638 <sfbpf_parse+0x4d0>
    fd3c:	mov	r3, #0
    fd40:	str	r3, [sp, #48]	; 0x30
    fd44:	b	f638 <sfbpf_parse+0x4d0>
    fd48:	mov	r3, #1
    fd4c:	str	r3, [sp, #48]	; 0x30
    fd50:	b	f638 <sfbpf_parse+0x4d0>
    fd54:	mov	r3, #2
    fd58:	str	r3, [sp, #48]	; 0x30
    fd5c:	b	f638 <sfbpf_parse+0x4d0>
    fd60:	mov	r3, #3
    fd64:	str	r3, [sp, #48]	; 0x30
    fd68:	b	f638 <sfbpf_parse+0x4d0>
    fd6c:	mov	r3, #3
    fd70:	str	r3, [sp, #48]	; 0x30
    fd74:	b	f638 <sfbpf_parse+0x4d0>
    fd78:	mov	r3, #4
    fd7c:	str	r3, [sp, #48]	; 0x30
    fd80:	b	f638 <sfbpf_parse+0x4d0>
    fd84:	mov	r3, #4
    fd88:	str	r3, [sp, #48]	; 0x30
    fd8c:	b	f638 <sfbpf_parse+0x4d0>
    fd90:	mov	r3, #5
    fd94:	str	r3, [sp, #48]	; 0x30
    fd98:	b	f638 <sfbpf_parse+0x4d0>
    fd9c:	mov	r3, #6
    fda0:	str	r3, [sp, #48]	; 0x30
    fda4:	b	f638 <sfbpf_parse+0x4d0>
    fda8:	mov	r3, #7
    fdac:	str	r3, [sp, #48]	; 0x30
    fdb0:	b	f638 <sfbpf_parse+0x4d0>
    fdb4:	mov	r3, #8
    fdb8:	str	r3, [sp, #48]	; 0x30
    fdbc:	b	f638 <sfbpf_parse+0x4d0>
    fdc0:	mov	r3, #1
    fdc4:	str	r3, [sp, #48]	; 0x30
    fdc8:	b	f638 <sfbpf_parse+0x4d0>
    fdcc:	mov	r3, #2
    fdd0:	str	r3, [sp, #48]	; 0x30
    fdd4:	b	f638 <sfbpf_parse+0x4d0>
    fdd8:	mov	r3, #3
    fddc:	str	r3, [sp, #48]	; 0x30
    fde0:	b	f638 <sfbpf_parse+0x4d0>
    fde4:	mov	r3, #7
    fde8:	str	r3, [sp, #48]	; 0x30
    fdec:	b	f638 <sfbpf_parse+0x4d0>
    fdf0:	mov	r3, #4
    fdf4:	str	r3, [sp, #48]	; 0x30
    fdf8:	b	f638 <sfbpf_parse+0x4d0>
    fdfc:	mov	r3, #1
    fe00:	str	r3, [sp, #48]	; 0x30
    fe04:	b	f638 <sfbpf_parse+0x4d0>
    fe08:	mov	r3, #2
    fe0c:	str	r3, [sp, #48]	; 0x30
    fe10:	b	f638 <sfbpf_parse+0x4d0>
    fe14:	mov	r3, #3
    fe18:	str	r3, [sp, #48]	; 0x30
    fe1c:	b	f638 <sfbpf_parse+0x4d0>
    fe20:	mov	r3, #4
    fe24:	str	r3, [sp, #48]	; 0x30
    fe28:	b	f638 <sfbpf_parse+0x4d0>
    fe2c:	mov	r3, #5
    fe30:	str	r3, [sp, #48]	; 0x30
    fe34:	b	f638 <sfbpf_parse+0x4d0>
    fe38:	mov	r3, #6
    fe3c:	str	r3, [sp, #48]	; 0x30
    fe40:	b	f638 <sfbpf_parse+0x4d0>
    fe44:	mov	r3, #7
    fe48:	str	r3, [sp, #48]	; 0x30
    fe4c:	b	f638 <sfbpf_parse+0x4d0>
    fe50:	mov	r3, #8
    fe54:	str	r3, [sp, #48]	; 0x30
    fe58:	b	f638 <sfbpf_parse+0x4d0>
    fe5c:	mov	r3, #9
    fe60:	str	r3, [sp, #48]	; 0x30
    fe64:	b	f638 <sfbpf_parse+0x4d0>
    fe68:	mov	r3, #10
    fe6c:	str	r3, [sp, #48]	; 0x30
    fe70:	b	f638 <sfbpf_parse+0x4d0>
    fe74:	mov	r3, #21
    fe78:	str	r3, [sp, #48]	; 0x30
    fe7c:	b	f638 <sfbpf_parse+0x4d0>
    fe80:	mov	r3, #22
    fe84:	str	r3, [sp, #48]	; 0x30
    fe88:	b	f638 <sfbpf_parse+0x4d0>
    fe8c:	mov	r3, #11
    fe90:	str	r3, [sp, #48]	; 0x30
    fe94:	b	f638 <sfbpf_parse+0x4d0>
    fe98:	mov	r3, #23
    fe9c:	str	r3, [sp, #48]	; 0x30
    fea0:	b	f638 <sfbpf_parse+0x4d0>
    fea4:	mov	r3, #12
    fea8:	str	r3, [sp, #48]	; 0x30
    feac:	b	f638 <sfbpf_parse+0x4d0>
    feb0:	mov	r3, #13
    feb4:	str	r3, [sp, #48]	; 0x30
    feb8:	b	f638 <sfbpf_parse+0x4d0>
    febc:	mov	r3, #14
    fec0:	str	r3, [sp, #48]	; 0x30
    fec4:	b	f638 <sfbpf_parse+0x4d0>
    fec8:	mov	r3, #16
    fecc:	str	r3, [sp, #48]	; 0x30
    fed0:	b	f638 <sfbpf_parse+0x4d0>
    fed4:	mov	r3, #15
    fed8:	str	r3, [sp, #48]	; 0x30
    fedc:	b	f638 <sfbpf_parse+0x4d0>
    fee0:	mov	r3, #17
    fee4:	str	r3, [sp, #48]	; 0x30
    fee8:	b	f638 <sfbpf_parse+0x4d0>
    feec:	mov	r3, #18
    fef0:	str	r3, [sp, #48]	; 0x30
    fef4:	b	f638 <sfbpf_parse+0x4d0>
    fef8:	mov	r3, #19
    fefc:	str	r3, [sp, #48]	; 0x30
    ff00:	b	f638 <sfbpf_parse+0x4d0>
    ff04:	mov	r3, #20
    ff08:	str	r3, [sp, #48]	; 0x30
    ff0c:	b	f638 <sfbpf_parse+0x4d0>
    ff10:	mov	r3, #24
    ff14:	str	r3, [sp, #48]	; 0x30
    ff18:	b	f638 <sfbpf_parse+0x4d0>
    ff1c:	mov	r3, #25
    ff20:	str	r3, [sp, #48]	; 0x30
    ff24:	b	f638 <sfbpf_parse+0x4d0>
    ff28:	mov	r3, #26
    ff2c:	str	r3, [sp, #48]	; 0x30
    ff30:	b	f638 <sfbpf_parse+0x4d0>
    ff34:	mov	r3, #31
    ff38:	str	r3, [sp, #48]	; 0x30
    ff3c:	b	f638 <sfbpf_parse+0x4d0>
    ff40:	mov	r3, #32
    ff44:	str	r3, [sp, #48]	; 0x30
    ff48:	b	f638 <sfbpf_parse+0x4d0>
    ff4c:	mov	r3, #33	; 0x21
    ff50:	str	r3, [sp, #48]	; 0x30
    ff54:	b	f638 <sfbpf_parse+0x4d0>
    ff58:	mov	r3, #39	; 0x27
    ff5c:	str	r3, [sp, #48]	; 0x30
    ff60:	b	f638 <sfbpf_parse+0x4d0>
    ff64:	mov	r3, #36	; 0x24
    ff68:	str	r3, [sp, #48]	; 0x30
    ff6c:	b	f638 <sfbpf_parse+0x4d0>
    ff70:	mov	r3, #38	; 0x26
    ff74:	str	r3, [sp, #48]	; 0x30
    ff78:	b	f638 <sfbpf_parse+0x4d0>
    ff7c:	mov	r3, #37	; 0x25
    ff80:	str	r3, [sp, #48]	; 0x30
    ff84:	b	f638 <sfbpf_parse+0x4d0>
    ff88:	mov	r3, #27
    ff8c:	str	r3, [sp, #48]	; 0x30
    ff90:	b	f638 <sfbpf_parse+0x4d0>
    ff94:	mov	r3, #28
    ff98:	str	r3, [sp, #48]	; 0x30
    ff9c:	b	f638 <sfbpf_parse+0x4d0>
    ffa0:	mov	r3, #29
    ffa4:	str	r3, [sp, #48]	; 0x30
    ffa8:	b	f638 <sfbpf_parse+0x4d0>
    ffac:	mov	r3, #30
    ffb0:	str	r3, [sp, #48]	; 0x30
    ffb4:	b	f638 <sfbpf_parse+0x4d0>
    ffb8:	mov	r3, #40	; 0x28
    ffbc:	str	r3, [sp, #48]	; 0x30
    ffc0:	b	f638 <sfbpf_parse+0x4d0>
    ffc4:	ldr	r0, [r4, #-16]
    ffc8:	bl	9a2c <sf_gen_broadcast>
    ffcc:	str	r0, [sp, #48]	; 0x30
    ffd0:	b	f638 <sfbpf_parse+0x4d0>
    ffd4:	ldr	r0, [r4, #-16]
    ffd8:	bl	9cb4 <sf_gen_multicast>
    ffdc:	str	r0, [sp, #48]	; 0x30
    ffe0:	b	f638 <sfbpf_parse+0x4d0>
    ffe4:	ldr	r0, [r4]
    ffe8:	bl	6074 <sf_gen_less>
    ffec:	str	r0, [sp, #48]	; 0x30
    fff0:	b	f638 <sfbpf_parse+0x4d0>
    fff4:	ldr	r0, [r4]
    fff8:	bl	6034 <sf_gen_greater>
    fffc:	str	r0, [sp, #48]	; 0x30
   10000:	b	f638 <sfbpf_parse+0x4d0>
   10004:	ldr	r2, [r4]
   10008:	ldr	r1, [r4, #-32]	; 0xffffffe0
   1000c:	ldr	r0, [r4, #-16]
   10010:	bl	60c4 <sf_gen_byteop>
   10014:	str	r0, [sp, #48]	; 0x30
   10018:	b	f638 <sfbpf_parse+0x4d0>
   1001c:	mov	r0, #0
   10020:	bl	8168 <sf_gen_inbound>
   10024:	str	r0, [sp, #48]	; 0x30
   10028:	b	f638 <sfbpf_parse+0x4d0>
   1002c:	mov	r0, #1
   10030:	bl	8168 <sf_gen_inbound>
   10034:	str	r0, [sp, #48]	; 0x30
   10038:	b	f638 <sfbpf_parse+0x4d0>
   1003c:	ldr	r0, [r4]
   10040:	bl	6388 <sf_gen_vlan>
   10044:	str	r0, [sp, #48]	; 0x30
   10048:	b	f638 <sfbpf_parse+0x4d0>
   1004c:	mvn	r0, #0
   10050:	bl	6388 <sf_gen_vlan>
   10054:	str	r0, [sp, #48]	; 0x30
   10058:	b	f638 <sfbpf_parse+0x4d0>
   1005c:	ldr	r0, [r4]
   10060:	bl	a028 <sf_gen_mpls>
   10064:	str	r0, [sp, #48]	; 0x30
   10068:	b	f638 <sfbpf_parse+0x4d0>
   1006c:	mvn	r0, #0
   10070:	bl	a028 <sf_gen_mpls>
   10074:	str	r0, [sp, #48]	; 0x30
   10078:	b	f638 <sfbpf_parse+0x4d0>
   1007c:	bl	a15c <sf_gen_pppoed>
   10080:	str	r0, [sp, #48]	; 0x30
   10084:	b	f638 <sfbpf_parse+0x4d0>
   10088:	bl	a168 <sf_gen_pppoes>
   1008c:	str	r0, [sp, #48]	; 0x30
   10090:	b	f638 <sfbpf_parse+0x4d0>
   10094:	ldr	r3, [r4]
   10098:	str	r3, [sp, #48]	; 0x30
   1009c:	b	f638 <sfbpf_parse+0x4d0>
   100a0:	ldr	r3, [r4]
   100a4:	str	r3, [sp, #48]	; 0x30
   100a8:	b	f638 <sfbpf_parse+0x4d0>
   100ac:	ldr	r0, [r4]
   100b0:	bl	61b0 <sf_gen_pf_ifname>
   100b4:	str	r0, [sp, #48]	; 0x30
   100b8:	b	f638 <sfbpf_parse+0x4d0>
   100bc:	ldr	r0, [r4]
   100c0:	bl	61c4 <sf_gen_pf_ruleset>
   100c4:	str	r0, [sp, #48]	; 0x30
   100c8:	b	f638 <sfbpf_parse+0x4d0>
   100cc:	ldr	r0, [r4]
   100d0:	bl	61d8 <sf_gen_pf_rnr>
   100d4:	str	r0, [sp, #48]	; 0x30
   100d8:	b	f638 <sfbpf_parse+0x4d0>
   100dc:	ldr	r0, [r4]
   100e0:	bl	61ec <sf_gen_pf_srnr>
   100e4:	str	r0, [sp, #48]	; 0x30
   100e8:	b	f638 <sfbpf_parse+0x4d0>
   100ec:	ldr	r0, [r4]
   100f0:	bl	6200 <sf_gen_pf_reason>
   100f4:	str	r0, [sp, #48]	; 0x30
   100f8:	b	f638 <sfbpf_parse+0x4d0>
   100fc:	ldr	r0, [r4]
   10100:	bl	6214 <sf_gen_pf_action>
   10104:	str	r0, [sp, #48]	; 0x30
   10108:	b	f638 <sfbpf_parse+0x4d0>
   1010c:	ldr	r0, [r4, #-32]	; 0xffffffe0
   10110:	ldr	r3, [r4]
   10114:	mov	r1, #252	; 0xfc
   10118:	orr	r0, r0, r3
   1011c:	bl	6228 <sf_gen_p80211_type>
   10120:	str	r0, [sp, #48]	; 0x30
   10124:	b	f638 <sfbpf_parse+0x4d0>
   10128:	mov	r1, #12
   1012c:	ldr	r0, [r4]
   10130:	bl	6228 <sf_gen_p80211_type>
   10134:	str	r0, [sp, #48]	; 0x30
   10138:	b	f638 <sfbpf_parse+0x4d0>
   1013c:	mov	r1, #252	; 0xfc
   10140:	ldr	r0, [r4]
   10144:	bl	6228 <sf_gen_p80211_type>
   10148:	str	r0, [sp, #48]	; 0x30
   1014c:	b	f638 <sfbpf_parse+0x4d0>
   10150:	ldr	r0, [r4]
   10154:	bl	62a0 <sf_gen_p80211_fcdir>
   10158:	str	r0, [sp, #48]	; 0x30
   1015c:	b	f638 <sfbpf_parse+0x4d0>
   10160:	.word	0x00020e80
   10164:	.word	0x000000cc
   10168:	.word	0x000000b4
   1016c:	.word	0x000073e4
   10170:	.word	0x000073cc
   10174:	.word	0x000053a4
   10178:	.word	0x0000016d
   1017c:	.word	0x00005354
   10180:	.word	0x0000029d
   10184:	.word	0x00005330
   10188:	.word	0x00005318
   1018c:	.word	0x000052fc
   10190:	.word	0x00004f5c
   10194:	.word	0x0000270f
   10198:	.word	0x00002710
   1019c:	.word	0x000000f4
   101a0:	.word	0x00004d3c
   101a4:	.word	0x00004974
   101a8:	.word	0x00004948
   101ac:	.word	0x0000491c
   101b0:	.word	0x00004900
   101b4:	.word	0x000048e4
   101b8:	.word	0x000048c4
   101bc:	.word	0x000048a8
   101c0:	.word	0x0000488c
   101c4:	.word	0x00004870
   101c8:	.word	0x0001fb20
   101cc:	.word	0x00005550
   101d0:	.word	0x00005544
   101d4:	.word	0x0001facc
   101d8:	.word	0x0001fa7c
   101dc:	.word	0x000054e8
   101e0:	.word	0x000054d0
   101e4:	.word	0x00002a68
   101e8:	.word	0x00002a5c
   101ec:	.word	0x00003f8c
   101f0:	.word	0x00003e94
   101f4:	.word	0x000050b8
   101f8:	.word	0x000203c4
   101fc:	.word	0x000050c4
   10200:	.word	0x0000311c
   10204:	.word	0x0002039c
   10208:	.word	0x00005078
   1020c:	.word	0x000030e4
   10210:	.word	0x0001f590
   10214:	.word	0x00004ff0
   10218:	.word	0x0001f568
   1021c:	.word	0x0001f558
   10220:	.word	0x00004ff4
   10224:	.word	0x00004fe0
   10228:	.word	0x00004ef0
   1022c:	.word	0x00004ec0
   10230:	.word	0x00004f24
   10234:	.word	0x00004ef4
   10238:	ldr	r1, [pc, #-120]	; 101c8 <sfbpf_parse+0x1060>
   1023c:	ldr	r0, [r4]
   10240:	add	r1, pc, r1
   10244:	add	r1, r1, #352	; 0x160
   10248:	bl	f11c <str2tok>
   1024c:	cmn	r0, #1
   10250:	str	r0, [sp, #48]	; 0x30
   10254:	bne	f638 <sfbpf_parse+0x4d0>
   10258:	ldr	r0, [pc, #-148]	; 101cc <sfbpf_parse+0x1064>
   1025c:	add	r0, pc, r0
   10260:	bl	2454 <sf_bpf_error>
   10264:	ldr	r3, [r4, #-32]	; 0xffffffe0
   10268:	cmp	r3, #0
   1026c:	beq	10804 <sfbpf_parse+0x169c>
   10270:	cmp	r3, #4
   10274:	beq	107f4 <sfbpf_parse+0x168c>
   10278:	cmp	r3, #8
   1027c:	beq	107cc <sfbpf_parse+0x1664>
   10280:	ldr	r0, [pc, #-184]	; 101d0 <sfbpf_parse+0x1068>
   10284:	add	r0, pc, r0
   10288:	bl	2454 <sf_bpf_error>
   1028c:	ldr	r1, [pc, #-192]	; 101d4 <sfbpf_parse+0x106c>
   10290:	mov	r2, #0
   10294:	add	r1, pc, r1
   10298:	add	r3, r1, #400	; 0x190
   1029c:	str	r5, [sp, #40]	; 0x28
   102a0:	str	r6, [sp, #44]	; 0x2c
   102a4:	add	r1, r1, #184	; 0xb8
   102a8:	mov	r5, r3
   102ac:	mov	r6, r2
   102b0:	b	102c8 <sfbpf_parse+0x1160>
   102b4:	add	r5, r5, #8
   102b8:	ldr	r1, [r5, #4]
   102bc:	add	r6, r6, #1
   102c0:	cmp	r1, #0
   102c4:	beq	10258 <sfbpf_parse+0x10f0>
   102c8:	ldr	r0, [r4]
   102cc:	bl	f11c <str2tok>
   102d0:	cmn	r0, #1
   102d4:	str	r0, [sp, #48]	; 0x30
   102d8:	beq	102b4 <sfbpf_parse+0x114c>
   102dc:	ldr	r3, [pc, #-268]	; 101d8 <sfbpf_parse+0x1070>
   102e0:	mov	r2, r6
   102e4:	add	r3, pc, r3
   102e8:	add	r2, r3, r2, lsl #3
   102ec:	ldr	r5, [sp, #40]	; 0x28
   102f0:	ldr	r3, [r2, #400]	; 0x190
   102f4:	ldr	r6, [sp, #44]	; 0x2c
   102f8:	orr	r0, r3, r0
   102fc:	str	r0, [sp, #48]	; 0x30
   10300:	b	f638 <sfbpf_parse+0x4d0>
   10304:	ldr	r3, [r4]
   10308:	ldr	r1, [pc, #-308]	; 101dc <sfbpf_parse+0x1074>
   1030c:	mov	r0, r3
   10310:	add	r1, pc, r1
   10314:	str	r3, [sp, #40]	; 0x28
   10318:	bl	ee98 <sfbpf_strcasecmp>
   1031c:	cmp	r0, #0
   10320:	streq	r0, [sp, #48]	; 0x30
   10324:	beq	f638 <sfbpf_parse+0x4d0>
   10328:	ldr	r1, [pc, #-336]	; 101e0 <sfbpf_parse+0x1078>
   1032c:	ldr	r0, [sp, #40]	; 0x28
   10330:	add	r1, pc, r1
   10334:	bl	ee98 <sfbpf_strcasecmp>
   10338:	cmp	r0, #0
   1033c:	bne	10748 <sfbpf_parse+0x15e0>
   10340:	mov	r3, #1
   10344:	str	r3, [sp, #48]	; 0x30
   10348:	b	f638 <sfbpf_parse+0x4d0>
   1034c:	ldr	r3, [r4]
   10350:	str	r3, [sp, #48]	; 0x30
   10354:	b	f638 <sfbpf_parse+0x4d0>
   10358:	ldr	r0, [pc, #-380]	; 101e4 <sfbpf_parse+0x107c>
   1035c:	add	r0, pc, r0
   10360:	bl	2454 <sf_bpf_error>
   10364:	ldr	r0, [pc, #-388]	; 101e8 <sfbpf_parse+0x1080>
   10368:	add	r0, pc, r0
   1036c:	bl	2454 <sf_bpf_error>
   10370:	mov	r3, #32
   10374:	str	r3, [sp, #48]	; 0x30
   10378:	b	f638 <sfbpf_parse+0x4d0>
   1037c:	mov	r3, #48	; 0x30
   10380:	str	r3, [sp, #48]	; 0x30
   10384:	b	f638 <sfbpf_parse+0x4d0>
   10388:	mov	r3, #16
   1038c:	str	r3, [sp, #48]	; 0x30
   10390:	b	f638 <sfbpf_parse+0x4d0>
   10394:	mov	r3, #32
   10398:	str	r3, [sp, #48]	; 0x30
   1039c:	b	f638 <sfbpf_parse+0x4d0>
   103a0:	mov	r3, #48	; 0x30
   103a4:	str	r3, [sp, #48]	; 0x30
   103a8:	b	f638 <sfbpf_parse+0x4d0>
   103ac:	mov	r3, #16
   103b0:	str	r3, [sp, #48]	; 0x30
   103b4:	b	f638 <sfbpf_parse+0x4d0>
   103b8:	ldr	r0, [r4]
   103bc:	bl	5dfc <sf_gen_loadi>
   103c0:	str	r0, [sp, #48]	; 0x30
   103c4:	b	f638 <sfbpf_parse+0x4d0>
   103c8:	mov	r2, #1
   103cc:	ldr	r1, [r4, #-16]
   103d0:	ldr	r0, [r4, #-48]	; 0xffffffd0
   103d4:	bl	7bcc <sf_gen_load>
   103d8:	str	r0, [sp, #48]	; 0x30
   103dc:	b	f638 <sfbpf_parse+0x4d0>
   103e0:	ldr	r2, [r4, #-16]
   103e4:	ldr	r1, [r4, #-48]	; 0xffffffd0
   103e8:	ldr	r0, [r4, #-80]	; 0xffffffb0
   103ec:	bl	7bcc <sf_gen_load>
   103f0:	str	r0, [sp, #48]	; 0x30
   103f4:	b	f638 <sfbpf_parse+0x4d0>
   103f8:	ldr	r2, [r4]
   103fc:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10400:	mov	r0, #0
   10404:	bl	5f00 <sf_gen_arth>
   10408:	str	r0, [sp, #48]	; 0x30
   1040c:	b	f638 <sfbpf_parse+0x4d0>
   10410:	ldr	r2, [r4]
   10414:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10418:	mov	r0, #16
   1041c:	bl	5f00 <sf_gen_arth>
   10420:	str	r0, [sp, #48]	; 0x30
   10424:	b	f638 <sfbpf_parse+0x4d0>
   10428:	ldr	r2, [r4]
   1042c:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10430:	mov	r0, #32
   10434:	bl	5f00 <sf_gen_arth>
   10438:	str	r0, [sp, #48]	; 0x30
   1043c:	b	f638 <sfbpf_parse+0x4d0>
   10440:	ldr	r2, [r4]
   10444:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10448:	mov	r0, #48	; 0x30
   1044c:	bl	5f00 <sf_gen_arth>
   10450:	str	r0, [sp, #48]	; 0x30
   10454:	b	f638 <sfbpf_parse+0x4d0>
   10458:	ldr	r2, [r4]
   1045c:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10460:	mov	r0, #80	; 0x50
   10464:	bl	5f00 <sf_gen_arth>
   10468:	str	r0, [sp, #48]	; 0x30
   1046c:	b	f638 <sfbpf_parse+0x4d0>
   10470:	ldr	r2, [r4]
   10474:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10478:	mov	r0, #64	; 0x40
   1047c:	bl	5f00 <sf_gen_arth>
   10480:	str	r0, [sp, #48]	; 0x30
   10484:	b	f638 <sfbpf_parse+0x4d0>
   10488:	ldr	r2, [r4]
   1048c:	ldr	r1, [r4, #-32]	; 0xffffffe0
   10490:	mov	r0, #96	; 0x60
   10494:	bl	5f00 <sf_gen_arth>
   10498:	str	r0, [sp, #48]	; 0x30
   1049c:	b	f638 <sfbpf_parse+0x4d0>
   104a0:	ldr	r2, [r4]
   104a4:	ldr	r1, [r4, #-32]	; 0xffffffe0
   104a8:	mov	r0, #112	; 0x70
   104ac:	bl	5f00 <sf_gen_arth>
   104b0:	str	r0, [sp, #48]	; 0x30
   104b4:	b	f638 <sfbpf_parse+0x4d0>
   104b8:	ldr	r0, [r4]
   104bc:	bl	5e58 <sf_gen_neg>
   104c0:	str	r0, [sp, #48]	; 0x30
   104c4:	b	f638 <sfbpf_parse+0x4d0>
   104c8:	ldr	r3, [r4, #-16]
   104cc:	str	r3, [sp, #48]	; 0x30
   104d0:	b	f638 <sfbpf_parse+0x4d0>
   104d4:	bl	5da8 <sf_gen_loadlen>
   104d8:	str	r0, [sp, #48]	; 0x30
   104dc:	b	f638 <sfbpf_parse+0x4d0>
   104e0:	mov	r3, #38	; 0x26
   104e4:	str	r3, [sp, #48]	; 0x30
   104e8:	b	f638 <sfbpf_parse+0x4d0>
   104ec:	mov	r3, #124	; 0x7c
   104f0:	str	r3, [sp, #48]	; 0x30
   104f4:	b	f638 <sfbpf_parse+0x4d0>
   104f8:	mov	r3, #60	; 0x3c
   104fc:	str	r3, [sp, #48]	; 0x30
   10500:	b	f638 <sfbpf_parse+0x4d0>
   10504:	mov	r3, #62	; 0x3e
   10508:	str	r3, [sp, #48]	; 0x30
   1050c:	b	f638 <sfbpf_parse+0x4d0>
   10510:	mov	r3, #61	; 0x3d
   10514:	str	r3, [sp, #48]	; 0x30
   10518:	b	f638 <sfbpf_parse+0x4d0>
   1051c:	ldr	r3, [r4, #-16]
   10520:	str	r3, [sp, #48]	; 0x30
   10524:	b	f638 <sfbpf_parse+0x4d0>
   10528:	mov	r3, #30
   1052c:	str	r3, [sp, #48]	; 0x30
   10530:	b	f638 <sfbpf_parse+0x4d0>
   10534:	mov	r3, #31
   10538:	str	r3, [sp, #48]	; 0x30
   1053c:	b	f638 <sfbpf_parse+0x4d0>
   10540:	mov	r3, #22
   10544:	str	r3, [sp, #48]	; 0x30
   10548:	b	f638 <sfbpf_parse+0x4d0>
   1054c:	mov	r3, #23
   10550:	str	r3, [sp, #48]	; 0x30
   10554:	b	f638 <sfbpf_parse+0x4d0>
   10558:	mov	r3, #25
   1055c:	str	r3, [sp, #48]	; 0x30
   10560:	b	f638 <sfbpf_parse+0x4d0>
   10564:	mov	r3, #24
   10568:	str	r3, [sp, #48]	; 0x30
   1056c:	b	f638 <sfbpf_parse+0x4d0>
   10570:	mov	r3, #26
   10574:	str	r3, [sp, #48]	; 0x30
   10578:	b	f638 <sfbpf_parse+0x4d0>
   1057c:	mov	r3, #27
   10580:	str	r3, [sp, #48]	; 0x30
   10584:	b	f638 <sfbpf_parse+0x4d0>
   10588:	mov	r3, #28
   1058c:	str	r3, [sp, #48]	; 0x30
   10590:	b	f638 <sfbpf_parse+0x4d0>
   10594:	mov	r3, #29
   10598:	str	r3, [sp, #48]	; 0x30
   1059c:	b	f638 <sfbpf_parse+0x4d0>
   105a0:	mov	r3, #70	; 0x46
   105a4:	str	r3, [sp, #48]	; 0x30
   105a8:	b	f638 <sfbpf_parse+0x4d0>
   105ac:	mov	r3, #71	; 0x47
   105b0:	str	r3, [sp, #48]	; 0x30
   105b4:	b	f638 <sfbpf_parse+0x4d0>
   105b8:	mov	r3, #51	; 0x33
   105bc:	str	r3, [sp, #4]
   105c0:	b	f638 <sfbpf_parse+0x4d0>
   105c4:	mov	r3, #52	; 0x34
   105c8:	str	r3, [sp, #4]
   105cc:	b	f638 <sfbpf_parse+0x4d0>
   105d0:	mov	r3, #0
   105d4:	ldr	r2, [r4, #-16]
   105d8:	ldr	r1, [r4]
   105dc:	ldr	r0, [r4, #-28]	; 0xffffffe4
   105e0:	bl	6474 <sf_gen_atmfield_code>
   105e4:	mov	r9, r0
   105e8:	b	f638 <sfbpf_parse+0x4d0>
   105ec:	mov	r3, #1
   105f0:	ldr	r2, [r4, #-16]
   105f4:	ldr	r1, [r4]
   105f8:	ldr	r0, [r4, #-28]	; 0xffffffe4
   105fc:	bl	6474 <sf_gen_atmfield_code>
   10600:	mov	r9, r0
   10604:	b	f638 <sfbpf_parse+0x4d0>
   10608:	ldr	r3, [pc, #-1060]	; 101ec <sfbpf_parse+0x1084>
   1060c:	ldr	r9, [r4, #-4]
   10610:	add	r3, pc, r3
   10614:	ldr	r3, [r3, #4076]	; 0xfec
   10618:	str	r3, [sp, #48]	; 0x30
   1061c:	b	f638 <sfbpf_parse+0x4d0>
   10620:	ldr	r3, [r4, #-12]
   10624:	str	r3, [sp, #4]
   10628:	sub	r3, r3, #51	; 0x33
   1062c:	cmp	r3, #1
   10630:	bhi	f638 <sfbpf_parse+0x4d0>
   10634:	mov	r3, #0
   10638:	mov	r2, #16
   1063c:	ldr	r1, [r4]
   10640:	ldr	r0, [sp, #4]
   10644:	bl	6474 <sf_gen_atmfield_code>
   10648:	mov	r9, r0
   1064c:	b	f638 <sfbpf_parse+0x4d0>
   10650:	ldr	r9, [r4, #12]
   10654:	ldr	r0, [r4, #-20]	; 0xffffffec
   10658:	mov	r1, r9
   1065c:	bl	49c0 <sf_gen_or>
   10660:	ldm	r4, {r0, r1, r2, r3}
   10664:	stm	r7, {r0, r1, r2, r3}
   10668:	str	r1, [sp, #4]
   1066c:	str	r2, [sp]
   10670:	b	f638 <sfbpf_parse+0x4d0>
   10674:	mov	r3, #22
   10678:	str	r3, [sp, #48]	; 0x30
   1067c:	b	f638 <sfbpf_parse+0x4d0>
   10680:	mov	r3, #23
   10684:	str	r3, [sp, #48]	; 0x30
   10688:	b	f638 <sfbpf_parse+0x4d0>
   1068c:	mov	r3, #24
   10690:	str	r3, [sp, #48]	; 0x30
   10694:	b	f638 <sfbpf_parse+0x4d0>
   10698:	mov	r3, #1
   1069c:	str	r3, [sp]
   106a0:	b	f638 <sfbpf_parse+0x4d0>
   106a4:	mov	r3, #2
   106a8:	str	r3, [sp]
   106ac:	b	f638 <sfbpf_parse+0x4d0>
   106b0:	mov	r3, #3
   106b4:	str	r3, [sp]
   106b8:	b	f638 <sfbpf_parse+0x4d0>
   106bc:	mov	r3, #4
   106c0:	str	r3, [sp]
   106c4:	b	f638 <sfbpf_parse+0x4d0>
   106c8:	mov	r3, #0
   106cc:	ldr	r2, [r4, #-16]
   106d0:	ldr	r1, [r4]
   106d4:	ldr	r0, [r4, #-24]	; 0xffffffe8
   106d8:	bl	b498 <sf_gen_mtp3field_code>
   106dc:	mov	r9, r0
   106e0:	b	f638 <sfbpf_parse+0x4d0>
   106e4:	mov	r3, #1
   106e8:	ldr	r2, [r4, #-16]
   106ec:	ldr	r1, [r4]
   106f0:	ldr	r0, [r4, #-24]	; 0xffffffe8
   106f4:	bl	b498 <sf_gen_mtp3field_code>
   106f8:	mov	r9, r0
   106fc:	b	f638 <sfbpf_parse+0x4d0>
   10700:	ldr	r3, [pc, #-1304]	; 101f0 <sfbpf_parse+0x1088>
   10704:	ldr	r9, [r4, #-4]
   10708:	add	r3, pc, r3
   1070c:	ldr	r3, [r3, #4076]	; 0xfec
   10710:	str	r3, [sp, #48]	; 0x30
   10714:	b	f638 <sfbpf_parse+0x4d0>
   10718:	ldr	r3, [r4, #-8]
   1071c:	str	r3, [sp]
   10720:	sub	r3, r3, #1
   10724:	cmp	r3, #3
   10728:	bhi	f638 <sfbpf_parse+0x4d0>
   1072c:	mov	r3, #0
   10730:	mov	r2, #16
   10734:	ldr	r1, [r4]
   10738:	ldr	r0, [sp]
   1073c:	bl	b498 <sf_gen_mtp3field_code>
   10740:	mov	r9, r0
   10744:	b	f638 <sfbpf_parse+0x4d0>
   10748:	ldr	r1, [pc, #-1372]	; 101f4 <sfbpf_parse+0x108c>
   1074c:	ldr	r0, [sp, #40]	; 0x28
   10750:	add	r1, pc, r1
   10754:	bl	ee98 <sfbpf_strcasecmp>
   10758:	cmp	r0, #0
   1075c:	bne	10814 <sfbpf_parse+0x16ac>
   10760:	mov	r3, #2
   10764:	str	r3, [sp, #48]	; 0x30
   10768:	b	f638 <sfbpf_parse+0x4d0>
   1076c:	ldr	r2, [pc, #-1404]	; 101f8 <sfbpf_parse+0x1090>
   10770:	ldr	r1, [pc, #-1404]	; 101fc <sfbpf_parse+0x1094>
   10774:	add	r2, pc, r2
   10778:	ldr	r0, [pc, #-1408]	; 10200 <sfbpf_parse+0x1098>
   1077c:	ldr	r3, [r2]
   10780:	add	r1, pc, r1
   10784:	add	r3, r3, #1
   10788:	add	r0, pc, r0
   1078c:	str	r3, [r2]
   10790:	bl	2454 <sf_bpf_error>
   10794:	ldr	ip, [pc, #-1432]	; 10204 <sfbpf_parse+0x109c>
   10798:	ldr	lr, [sp, #36]	; 0x24
   1079c:	add	ip, pc, ip
   107a0:	ldr	r1, [pc, #-1440]	; 10208 <sfbpf_parse+0x10a0>
   107a4:	ldr	r2, [ip]
   107a8:	ldr	r3, [lr]
   107ac:	ldr	r0, [pc, #-1448]	; 1020c <sfbpf_parse+0x10a4>
   107b0:	add	r3, r3, #1
   107b4:	add	r2, r2, #1
   107b8:	str	r2, [ip]
   107bc:	add	r1, pc, r1
   107c0:	add	r0, pc, r0
   107c4:	str	r3, [lr]
   107c8:	bl	2454 <sf_bpf_error>
   107cc:	ldr	r1, [pc, #-1476]	; 10210 <sfbpf_parse+0x10a8>
   107d0:	add	r1, pc, r1
   107d4:	ldr	r0, [r4]
   107d8:	bl	f11c <str2tok>
   107dc:	cmn	r0, #1
   107e0:	str	r0, [sp, #48]	; 0x30
   107e4:	bne	f638 <sfbpf_parse+0x4d0>
   107e8:	ldr	r0, [pc, #-1500]	; 10214 <sfbpf_parse+0x10ac>
   107ec:	add	r0, pc, r0
   107f0:	bl	2454 <sf_bpf_error>
   107f4:	ldr	r1, [pc, #-1508]	; 10218 <sfbpf_parse+0x10b0>
   107f8:	add	r1, pc, r1
   107fc:	add	r1, r1, #128	; 0x80
   10800:	b	107d4 <sfbpf_parse+0x166c>
   10804:	ldr	r1, [pc, #-1520]	; 1021c <sfbpf_parse+0x10b4>
   10808:	add	r1, pc, r1
   1080c:	add	r1, r1, #184	; 0xb8
   10810:	b	107d4 <sfbpf_parse+0x166c>
   10814:	ldr	r1, [pc, #-1532]	; 10220 <sfbpf_parse+0x10b8>
   10818:	ldr	r0, [sp, #40]	; 0x28
   1081c:	add	r1, pc, r1
   10820:	bl	ee98 <sfbpf_strcasecmp>
   10824:	cmp	r0, #0
   10828:	moveq	r3, #3
   1082c:	streq	r3, [sp, #48]	; 0x30
   10830:	beq	f638 <sfbpf_parse+0x4d0>
   10834:	ldr	r0, [pc, #-1560]	; 10224 <sfbpf_parse+0x10bc>
   10838:	add	r0, pc, r0
   1083c:	bl	2454 <sf_bpf_error>
   10840:	ldr	r0, [pc, #-1568]	; 10228 <sfbpf_parse+0x10c0>
   10844:	add	r0, pc, r0
   10848:	bl	2454 <sf_bpf_error>
   1084c:	ldr	r0, [pc, #-1576]	; 1022c <sfbpf_parse+0x10c4>
   10850:	add	r0, pc, r0
   10854:	bl	2454 <sf_bpf_error>
   10858:	ldr	r0, [pc, #-1584]	; 10230 <sfbpf_parse+0x10c8>
   1085c:	add	r0, pc, r0
   10860:	bl	2454 <sf_bpf_error>
   10864:	ldr	r0, [pc, #-1592]	; 10234 <sfbpf_parse+0x10cc>
   10868:	add	r0, pc, r0
   1086c:	bl	2454 <sf_bpf_error>

00010870 <yy_fatal_error>:
   10870:	ldr	r3, [pc, #40]	; 108a0 <yy_fatal_error+0x30>
   10874:	ldr	ip, [pc, #40]	; 108a4 <yy_fatal_error+0x34>
   10878:	add	r3, pc, r3
   1087c:	push	{r4, lr}
   10880:	mov	r2, r0
   10884:	ldr	r0, [r3, ip]
   10888:	ldr	r1, [pc, #24]	; 108a8 <yy_fatal_error+0x38>
   1088c:	add	r1, pc, r1
   10890:	ldr	r0, [r0]
   10894:	bl	e64 <fprintf@plt>
   10898:	mov	r0, #2
   1089c:	bl	e40 <exit@plt>
   108a0:	.word	0x0001f780
   108a4:	.word	0x000000d4
   108a8:	.word	0x0000effc

000108ac <sfbpf_ensure_buffer_stack>:
   108ac:	push	{r4, r5, r6, lr}
   108b0:	ldr	r4, [pc, #144]	; 10948 <sfbpf_ensure_buffer_stack+0x9c>
   108b4:	add	r4, pc, r4
   108b8:	ldr	r6, [r4, #16]
   108bc:	cmp	r6, #0
   108c0:	beq	10914 <sfbpf_ensure_buffer_stack+0x68>
   108c4:	ldr	r3, [r4, #20]
   108c8:	ldr	r2, [r4, #24]
   108cc:	sub	r1, r3, #1
   108d0:	cmp	r1, r2
   108d4:	pophi	{r4, r5, r6, pc}
   108d8:	add	r5, r3, #8
   108dc:	mov	r0, r6
   108e0:	lsl	r6, r5, #2
   108e4:	mov	r1, r6
   108e8:	bl	dec <realloc@plt>
   108ec:	cmp	r0, #0
   108f0:	str	r0, [r4, #16]
   108f4:	beq	1093c <sfbpf_ensure_buffer_stack+0x90>
   108f8:	sub	r6, r6, #32
   108fc:	add	r0, r0, r6
   10900:	mov	r2, #32
   10904:	mov	r1, #0
   10908:	bl	e88 <memset@plt>
   1090c:	str	r5, [r4, #20]
   10910:	pop	{r4, r5, r6, pc}
   10914:	mov	r1, #1
   10918:	mov	r0, #4
   1091c:	bl	d38 <calloc@plt>
   10920:	cmp	r0, #0
   10924:	str	r0, [r4, #16]
   10928:	beq	1093c <sfbpf_ensure_buffer_stack+0x90>
   1092c:	mov	r3, #1
   10930:	str	r6, [r4, #24]
   10934:	str	r3, [r4, #20]
   10938:	pop	{r4, r5, r6, pc}
   1093c:	ldr	r0, [pc, #8]	; 1094c <sfbpf_ensure_buffer_stack+0xa0>
   10940:	add	r0, pc, r0
   10944:	bl	10870 <yy_fatal_error>
   10948:	.word	0x00020288
   1094c:	.word	0x0000ef4c

00010950 <sfbpf__switch_to_buffer>:
   10950:	push	{r4, r5, r6, lr}
   10954:	mov	r4, r0
   10958:	bl	108ac <sfbpf_ensure_buffer_stack>
   1095c:	ldr	r2, [pc, #164]	; 10a08 <sfbpf__switch_to_buffer+0xb8>
   10960:	ldr	ip, [pc, #164]	; 10a0c <sfbpf__switch_to_buffer+0xbc>
   10964:	add	r2, pc, r2
   10968:	add	ip, pc, ip
   1096c:	ldr	r3, [r2, #16]
   10970:	cmp	r3, #0
   10974:	beq	109f4 <sfbpf__switch_to_buffer+0xa4>
   10978:	ldr	r1, [r2, #24]
   1097c:	ldr	lr, [r3, r1, lsl #2]
   10980:	add	r0, r3, r1, lsl #2
   10984:	cmp	lr, r4
   10988:	popeq	{r4, r5, r6, pc}
   1098c:	cmp	lr, #0
   10990:	beq	109b4 <sfbpf__switch_to_buffer+0x64>
   10994:	ldr	lr, [r2, #4]
   10998:	ldrb	r5, [r2, #28]
   1099c:	ldr	r2, [r2, #32]
   109a0:	strb	r5, [lr]
   109a4:	ldr	r5, [r3, r1, lsl #2]
   109a8:	str	lr, [r5, #8]
   109ac:	ldr	r3, [r3, r1, lsl #2]
   109b0:	str	r2, [r3, #16]
   109b4:	ldr	r3, [pc, #84]	; 10a10 <sfbpf__switch_to_buffer+0xc0>
   109b8:	ldr	r1, [pc, #84]	; 10a14 <sfbpf__switch_to_buffer+0xc4>
   109bc:	str	r4, [r0]
   109c0:	add	r3, pc, r3
   109c4:	ldr	r2, [r4, #8]
   109c8:	ldr	lr, [r4, #16]
   109cc:	str	r2, [r3, #4]
   109d0:	str	lr, [r3, #32]
   109d4:	ldr	r1, [ip, r1]
   109d8:	str	r2, [r1]
   109dc:	ldr	r1, [r0]
   109e0:	ldr	r1, [r1]
   109e4:	str	r1, [r3, #36]	; 0x24
   109e8:	ldrb	r2, [r2]
   109ec:	strb	r2, [r3, #28]
   109f0:	pop	{r4, r5, r6, pc}
   109f4:	cmp	r4, #0
   109f8:	popeq	{r4, r5, r6, pc}
   109fc:	ldr	r0, [r2, #24]
   10a00:	lsl	r0, r0, #2
   10a04:	b	109b4 <sfbpf__switch_to_buffer+0x64>
   10a08:	.word	0x000201d8
   10a0c:	.word	0x0001f690
   10a10:	.word	0x0002017c
   10a14:	.word	0x000000dc

00010a18 <sfbpf__delete_buffer>:
   10a18:	push	{r4, lr}
   10a1c:	subs	r4, r0, #0
   10a20:	popeq	{r4, pc}
   10a24:	ldr	r2, [pc, #76]	; 10a78 <sfbpf__delete_buffer+0x60>
   10a28:	add	r2, pc, r2
   10a2c:	ldr	r3, [r2, #16]
   10a30:	cmp	r3, #0
   10a34:	beq	10a4c <sfbpf__delete_buffer+0x34>
   10a38:	ldr	r2, [r2, #24]
   10a3c:	ldr	r1, [r3, r2, lsl #2]
   10a40:	cmp	r4, r1
   10a44:	moveq	r1, #0
   10a48:	streq	r1, [r3, r2, lsl #2]
   10a4c:	ldr	r3, [r4, #20]
   10a50:	cmp	r3, #0
   10a54:	bne	10a64 <sfbpf__delete_buffer+0x4c>
   10a58:	mov	r0, r4
   10a5c:	pop	{r4, lr}
   10a60:	b	da4 <free@plt>
   10a64:	ldr	r0, [r4, #4]
   10a68:	bl	da4 <free@plt>
   10a6c:	mov	r0, r4
   10a70:	pop	{r4, lr}
   10a74:	b	da4 <free@plt>
   10a78:	.word	0x00020114

00010a7c <sfbpf__flush_buffer>:
   10a7c:	push	{r4, lr}
   10a80:	cmp	r0, #0
   10a84:	ldr	lr, [pc, #132]	; 10b10 <sfbpf__flush_buffer+0x94>
   10a88:	add	lr, pc, lr
   10a8c:	popeq	{r4, pc}
   10a90:	ldr	r1, [r0, #4]
   10a94:	ldr	r2, [pc, #120]	; 10b14 <sfbpf__flush_buffer+0x98>
   10a98:	mov	r3, #0
   10a9c:	add	r2, pc, r2
   10aa0:	str	r3, [r0, #16]
   10aa4:	strb	r3, [r1]
   10aa8:	ldr	ip, [r0, #4]
   10aac:	ldr	r1, [r2, #16]
   10ab0:	mov	r4, #1
   10ab4:	strb	r3, [ip, #1]
   10ab8:	cmp	r1, r3
   10abc:	ldr	ip, [r0, #4]
   10ac0:	str	r3, [r0, #44]	; 0x2c
   10ac4:	str	ip, [r0, #8]
   10ac8:	str	r4, [r0, #28]
   10acc:	popeq	{r4, pc}
   10ad0:	ldr	r3, [r2, #24]
   10ad4:	ldr	r4, [r1, r3, lsl #2]
   10ad8:	cmp	r0, r4
   10adc:	popne	{r4, pc}
   10ae0:	ldr	r4, [pc, #48]	; 10b18 <sfbpf__flush_buffer+0x9c>
   10ae4:	ldr	r0, [r0, #16]
   10ae8:	str	ip, [r2, #4]
   10aec:	str	r0, [r2, #32]
   10af0:	ldr	r0, [lr, r4]
   10af4:	str	ip, [r0]
   10af8:	ldr	r3, [r1, r3, lsl #2]
   10afc:	ldr	r3, [r3]
   10b00:	str	r3, [r2, #36]	; 0x24
   10b04:	ldrb	r3, [ip]
   10b08:	strb	r3, [r2, #28]
   10b0c:	pop	{r4, pc}
   10b10:	.word	0x0001f570
   10b14:	.word	0x000200a0
   10b18:	.word	0x000000dc

00010b1c <sfbpf__init_buffer>:
   10b1c:	push	{r4, r5, r6, r7, r8, lr}
   10b20:	mov	r4, r0
   10b24:	mov	r5, r1
   10b28:	bl	e70 <__errno_location@plt>
   10b2c:	mov	r6, r0
   10b30:	mov	r0, r4
   10b34:	ldr	r7, [r6]
   10b38:	bl	10a7c <sfbpf__flush_buffer>
   10b3c:	ldr	r2, [pc, #100]	; 10ba8 <sfbpf__init_buffer+0x8c>
   10b40:	mov	r1, #1
   10b44:	add	r2, pc, r2
   10b48:	str	r5, [r4]
   10b4c:	ldr	r3, [r2, #16]
   10b50:	str	r1, [r4, #40]	; 0x28
   10b54:	cmp	r3, #0
   10b58:	beq	10b6c <sfbpf__init_buffer+0x50>
   10b5c:	ldr	r2, [r2, #24]
   10b60:	ldr	r3, [r3, r2, lsl #2]
   10b64:	cmp	r4, r3
   10b68:	beq	10b7c <sfbpf__init_buffer+0x60>
   10b6c:	mov	r2, #1
   10b70:	mov	r3, #0
   10b74:	str	r2, [r4, #32]
   10b78:	str	r3, [r4, #36]	; 0x24
   10b7c:	cmp	r5, #0
   10b80:	beq	10b9c <sfbpf__init_buffer+0x80>
   10b84:	mov	r0, r5
   10b88:	bl	eac <fileno@plt>
   10b8c:	bl	f0c <isatty@plt>
   10b90:	cmp	r0, #0
   10b94:	movle	r5, #0
   10b98:	movgt	r5, #1
   10b9c:	str	r5, [r4, #24]
   10ba0:	str	r7, [r6]
   10ba4:	pop	{r4, r5, r6, r7, r8, pc}
   10ba8:	.word	0x0001fff8

00010bac <sfbpf__create_buffer>:
   10bac:	push	{r4, r5, r6, lr}
   10bb0:	mov	r6, r0
   10bb4:	mov	r0, #48	; 0x30
   10bb8:	mov	r5, r1
   10bbc:	bl	e1c <malloc@plt>
   10bc0:	subs	r4, r0, #0
   10bc4:	beq	10bfc <sfbpf__create_buffer+0x50>
   10bc8:	str	r5, [r4, #12]
   10bcc:	add	r0, r5, #2
   10bd0:	bl	e1c <malloc@plt>
   10bd4:	cmp	r0, #0
   10bd8:	str	r0, [r4, #4]
   10bdc:	beq	10bfc <sfbpf__create_buffer+0x50>
   10be0:	mov	r3, #1
   10be4:	mov	r0, r4
   10be8:	mov	r1, r6
   10bec:	str	r3, [r4, #20]
   10bf0:	bl	10b1c <sfbpf__init_buffer>
   10bf4:	mov	r0, r4
   10bf8:	pop	{r4, r5, r6, pc}
   10bfc:	ldr	r0, [pc, #4]	; 10c08 <sfbpf__create_buffer+0x5c>
   10c00:	add	r0, pc, r0
   10c04:	bl	10870 <yy_fatal_error>
   10c08:	.word	0x0000ecc0

00010c0c <sfbpf_restart>:
   10c0c:	ldr	r2, [pc, #172]	; 10cc0 <sfbpf_restart+0xb4>
   10c10:	push	{r4, r5, r6, r7, r8, lr}
   10c14:	add	r2, pc, r2
   10c18:	ldr	r5, [pc, #164]	; 10cc4 <sfbpf_restart+0xb8>
   10c1c:	ldr	r3, [r2, #16]
   10c20:	add	r5, pc, r5
   10c24:	cmp	r3, #0
   10c28:	mov	r6, r0
   10c2c:	beq	10c8c <sfbpf_restart+0x80>
   10c30:	ldr	r4, [r2, #24]
   10c34:	ldr	r0, [r3, r4, lsl #2]
   10c38:	add	r4, r3, r4, lsl #2
   10c3c:	cmp	r0, #0
   10c40:	beq	10c8c <sfbpf_restart+0x80>
   10c44:	mov	r1, r6
   10c48:	bl	10b1c <sfbpf__init_buffer>
   10c4c:	ldr	r2, [r4]
   10c50:	ldr	r3, [pc, #112]	; 10cc8 <sfbpf_restart+0xbc>
   10c54:	ldr	r1, [pc, #112]	; 10ccc <sfbpf_restart+0xc0>
   10c58:	add	r3, pc, r3
   10c5c:	ldr	r0, [r2, #16]
   10c60:	ldr	r2, [r2, #8]
   10c64:	str	r0, [r3, #32]
   10c68:	str	r2, [r3, #4]
   10c6c:	ldr	r1, [r5, r1]
   10c70:	str	r2, [r1]
   10c74:	ldr	r1, [r4]
   10c78:	ldr	r1, [r1]
   10c7c:	str	r1, [r3, #36]	; 0x24
   10c80:	ldrb	r2, [r2]
   10c84:	strb	r2, [r3, #28]
   10c88:	pop	{r4, r5, r6, r7, r8, pc}
   10c8c:	bl	108ac <sfbpf_ensure_buffer_stack>
   10c90:	ldr	r2, [pc, #56]	; 10cd0 <sfbpf_restart+0xc4>
   10c94:	mov	r1, #16384	; 0x4000
   10c98:	add	r2, pc, r2
   10c9c:	ldr	r0, [r2, #36]	; 0x24
   10ca0:	ldr	r7, [r2, #16]
   10ca4:	ldr	r4, [r2, #24]
   10ca8:	bl	10bac <sfbpf__create_buffer>
   10cac:	cmp	r7, #0
   10cb0:	str	r0, [r7, r4, lsl #2]
   10cb4:	add	r4, r7, r4, lsl #2
   10cb8:	moveq	r0, #0
   10cbc:	b	10c44 <sfbpf_restart+0x38>
   10cc0:	.word	0x0001ff28
   10cc4:	.word	0x0001f3d8
   10cc8:	.word	0x0001fee4
   10ccc:	.word	0x000000dc
   10cd0:	.word	0x0001fea4

00010cd4 <sfbpf_lex>:
   10cd4:	ldr	r3, [pc, #4036]	; 11ca0 <sfbpf_lex+0xfcc>
   10cd8:	ldr	r2, [pc, #4036]	; 11ca4 <sfbpf_lex+0xfd0>
   10cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ce0:	add	r3, pc, r3
   10ce4:	sub	sp, sp, #124	; 0x7c
   10ce8:	add	r2, pc, r2
   10cec:	mov	r0, r2
   10cf0:	str	r2, [sp, #20]
   10cf4:	ldr	r2, [r3, #40]	; 0x28
   10cf8:	cmp	r2, #0
   10cfc:	beq	111a4 <sfbpf_lex+0x4d0>
   10d00:	ldr	r2, [pc, #4000]	; 11ca8 <sfbpf_lex+0xfd4>
   10d04:	ldr	r7, [r3, #4]
   10d08:	ldrb	r1, [r3, #28]
   10d0c:	mov	r3, r2
   10d10:	ldr	r3, [r0, r3]
   10d14:	str	r3, [sp, #24]
   10d18:	ldr	r2, [pc, #3980]	; 11cac <sfbpf_lex+0xfd8>
   10d1c:	ldr	r3, [pc, #3980]	; 11cb0 <sfbpf_lex+0xfdc>
   10d20:	ldr	r9, [pc, #3980]	; 11cb4 <sfbpf_lex+0xfe0>
   10d24:	ldr	r0, [pc, #3980]	; 11cb8 <sfbpf_lex+0xfe4>
   10d28:	add	r2, pc, r2
   10d2c:	add	r3, pc, r3
   10d30:	ldr	lr, [sp, #20]
   10d34:	add	r9, pc, r9
   10d38:	add	r2, r2, #3120	; 0xc30
   10d3c:	add	r3, r3, #1104	; 0x450
   10d40:	add	r8, r2, #4
   10d44:	add	r3, r3, #12
   10d48:	add	ip, r9, #2560	; 0xa00
   10d4c:	ldr	r0, [lr, r0]
   10d50:	add	sl, ip, #12
   10d54:	str	r3, [sp, #4]
   10d58:	mov	r3, r8
   10d5c:	mov	r8, sl
   10d60:	mov	sl, r7
   10d64:	mov	r7, r3
   10d68:	str	r0, [sp, #32]
   10d6c:	ldr	r3, [pc, #3912]	; 11cbc <sfbpf_lex+0xfe8>
   10d70:	strb	r1, [sl]
   10d74:	add	r3, pc, r3
   10d78:	str	sl, [sp, #28]
   10d7c:	ldr	r0, [r3]
   10d80:	mov	fp, sl
   10d84:	mov	sl, r8
   10d88:	mov	r8, r9
   10d8c:	ldr	r3, [pc, #3884]	; 11cc0 <sfbpf_lex+0xfec>
   10d90:	ldr	lr, [pc, #3884]	; 11cc4 <sfbpf_lex+0xff0>
   10d94:	add	r3, pc, r3
   10d98:	add	lr, pc, lr
   10d9c:	lsl	r2, r0, #1
   10da0:	sub	r3, r3, #1216	; 0x4c0
   10da4:	ldr	r4, [lr, #8]
   10da8:	ldr	r5, [pc, #3864]	; 11cc8 <sfbpf_lex+0xff4>
   10dac:	ldr	lr, [lr, #12]
   10db0:	ldr	ip, [pc, #3860]	; 11ccc <sfbpf_lex+0xff8>
   10db4:	ldrsh	r3, [r3, r2]
   10db8:	add	r5, pc, r5
   10dbc:	add	ip, pc, ip
   10dc0:	str	lr, [sp, #16]
   10dc4:	ldr	lr, [pc, #3844]	; 11cd0 <sfbpf_lex+0xffc>
   10dc8:	add	r6, r5, #256	; 0x100
   10dcc:	sub	ip, ip, #1216	; 0x4c0
   10dd0:	str	r4, [sp, #12]
   10dd4:	mov	r4, #0
   10dd8:	str	r4, [sp, #8]
   10ddc:	ldrsh	r9, [r6, r2]
   10de0:	ldrb	r1, [r5, r1]
   10de4:	cmp	r9, #0
   10de8:	movne	r4, #1
   10dec:	strne	r4, [sp, #8]
   10df0:	strne	r0, [sp, #12]
   10df4:	strne	fp, [sp, #16]
   10df8:	b	10e14 <sfbpf_lex+0x140>
   10dfc:	ldrsh	r0, [r7, r2]
   10e00:	cmp	r0, lr
   10e04:	addgt	r1, r8, r1
   10e08:	lsl	r2, r0, #1
   10e0c:	ldrbgt	r1, [r1, #-1272]	; 0xfffffb08
   10e10:	ldrsh	r3, [ip, r2]
   10e14:	add	r3, r3, r1
   10e18:	lsl	r3, r3, #1
   10e1c:	ldrsh	r9, [sl, r3]
   10e20:	cmp	r0, r9
   10e24:	bne	10dfc <sfbpf_lex+0x128>
   10e28:	ldr	r2, [sp, #4]
   10e2c:	ldr	r1, [pc, #3744]	; 11cd4 <sfbpf_lex+0x1000>
   10e30:	add	fp, fp, #1
   10e34:	ldrsh	r0, [r2, r3]
   10e38:	sub	r3, r8, #1216	; 0x4c0
   10e3c:	lsl	r2, r0, #1
   10e40:	ldrsh	r3, [r3, r2]
   10e44:	cmp	r3, r1
   10e48:	ldrbne	r1, [fp]
   10e4c:	bne	10ddc <sfbpf_lex+0x108>
   10e50:	ldr	r3, [sp, #8]
   10e54:	cmp	r3, #0
   10e58:	bne	11c60 <sfbpf_lex+0xf8c>
   10e5c:	cmp	r4, #0
   10e60:	bne	11c4c <sfbpf_lex+0xf78>
   10e64:	ldr	r3, [pc, #3692]	; 11cd8 <sfbpf_lex+0x1004>
   10e68:	ldr	r9, [pc, #3692]	; 11cdc <sfbpf_lex+0x1008>
   10e6c:	add	r3, pc, r3
   10e70:	ldr	r1, [pc, #3688]	; 11ce0 <sfbpf_lex+0x100c>
   10e74:	add	r9, pc, r9
   10e78:	add	r3, r3, #256	; 0x100
   10e7c:	add	r1, pc, r1
   10e80:	add	r0, r9, #2560	; 0xa00
   10e84:	add	r1, r1, #1104	; 0x450
   10e88:	ldrsh	r3, [r3, r2]
   10e8c:	add	r2, r0, #12
   10e90:	str	r2, [sp, #52]	; 0x34
   10e94:	add	r2, r1, #12
   10e98:	str	r2, [sp, #56]	; 0x38
   10e9c:	str	r8, [sp, #8]
   10ea0:	str	sl, [sp, #12]
   10ea4:	str	r9, [sp, #60]	; 0x3c
   10ea8:	str	r7, [sp, #16]
   10eac:	subs	r2, r3, #0
   10eb0:	bne	10ed8 <sfbpf_lex+0x204>
   10eb4:	ldr	r2, [pc, #3624]	; 11ce4 <sfbpf_lex+0x1010>
   10eb8:	ldr	r3, [pc, #3624]	; 11ce8 <sfbpf_lex+0x1014>
   10ebc:	add	r2, pc, r2
   10ec0:	add	r3, pc, r3
   10ec4:	ldr	r1, [r2, #8]
   10ec8:	add	r3, r3, #256	; 0x100
   10ecc:	ldr	fp, [r2, #12]
   10ed0:	lsl	r2, r1, #1
   10ed4:	ldrsh	r2, [r3, r2]
   10ed8:	ldr	r0, [sp, #24]
   10edc:	ldr	r1, [sp, #28]
   10ee0:	ldr	r9, [pc, #3588]	; 11cec <sfbpf_lex+0x1018>
   10ee4:	str	r1, [r0]
   10ee8:	ldr	r0, [pc, #3584]	; 11cf0 <sfbpf_lex+0x101c>
   10eec:	sub	r3, fp, r1
   10ef0:	add	r0, pc, r0
   10ef4:	str	r0, [sp, #36]	; 0x24
   10ef8:	ldr	r0, [pc, #3572]	; 11cf4 <sfbpf_lex+0x1020>
   10efc:	ldr	r1, [sp, #32]
   10f00:	add	r0, pc, r0
   10f04:	str	r0, [sp, #40]	; 0x28
   10f08:	ldr	r0, [pc, #3560]	; 11cf8 <sfbpf_lex+0x1024>
   10f0c:	str	r3, [r1]
   10f10:	ldr	r3, [pc, #3556]	; 11cfc <sfbpf_lex+0x1028>
   10f14:	ldrb	r1, [fp]
   10f18:	add	r0, pc, r0
   10f1c:	ldr	r7, [pc, #3548]	; 11d00 <sfbpf_lex+0x102c>
   10f20:	add	r3, pc, r3
   10f24:	str	r0, [sp, #44]	; 0x2c
   10f28:	ldr	r0, [pc, #3540]	; 11d04 <sfbpf_lex+0x1030>
   10f2c:	add	r9, pc, r9
   10f30:	add	r7, pc, r7
   10f34:	add	r0, pc, r0
   10f38:	strb	r1, [r3, #28]
   10f3c:	str	fp, [r3, #4]
   10f40:	mov	r3, #0
   10f44:	str	r0, [sp, #48]	; 0x30
   10f48:	strb	r3, [fp]
   10f4c:	cmp	r2, #146	; 0x92
   10f50:	addls	pc, pc, r2, lsl #2
   10f54:	b	11c00 <sfbpf_lex+0xf2c>
   10f58:	b	112a8 <sfbpf_lex+0x5d4>
   10f5c:	b	11bf8 <sfbpf_lex+0xf24>
   10f60:	b	11bf0 <sfbpf_lex+0xf1c>
   10f64:	b	11be8 <sfbpf_lex+0xf14>
   10f68:	b	11be8 <sfbpf_lex+0xf14>
   10f6c:	b	11bd8 <sfbpf_lex+0xf04>
   10f70:	b	11bd0 <sfbpf_lex+0xefc>
   10f74:	b	11bc8 <sfbpf_lex+0xef4>
   10f78:	b	11bc0 <sfbpf_lex+0xeec>
   10f7c:	b	11bb8 <sfbpf_lex+0xee4>
   10f80:	b	11bb0 <sfbpf_lex+0xedc>
   10f84:	b	11ba8 <sfbpf_lex+0xed4>
   10f88:	b	11ba0 <sfbpf_lex+0xecc>
   10f8c:	b	11b98 <sfbpf_lex+0xec4>
   10f90:	b	11b90 <sfbpf_lex+0xebc>
   10f94:	b	11b88 <sfbpf_lex+0xeb4>
   10f98:	b	11b80 <sfbpf_lex+0xeac>
   10f9c:	b	11b78 <sfbpf_lex+0xea4>
   10fa0:	b	11b70 <sfbpf_lex+0xe9c>
   10fa4:	b	11b68 <sfbpf_lex+0xe94>
   10fa8:	b	114dc <sfbpf_lex+0x808>
   10fac:	b	114d4 <sfbpf_lex+0x800>
   10fb0:	b	114cc <sfbpf_lex+0x7f8>
   10fb4:	b	114c4 <sfbpf_lex+0x7f0>
   10fb8:	b	114bc <sfbpf_lex+0x7e8>
   10fbc:	b	114b4 <sfbpf_lex+0x7e0>
   10fc0:	b	114ac <sfbpf_lex+0x7d8>
   10fc4:	b	114a4 <sfbpf_lex+0x7d0>
   10fc8:	b	1149c <sfbpf_lex+0x7c8>
   10fcc:	b	11494 <sfbpf_lex+0x7c0>
   10fd0:	b	1148c <sfbpf_lex+0x7b8>
   10fd4:	b	11484 <sfbpf_lex+0x7b0>
   10fd8:	b	1147c <sfbpf_lex+0x7a8>
   10fdc:	b	11474 <sfbpf_lex+0x7a0>
   10fe0:	b	1146c <sfbpf_lex+0x798>
   10fe4:	b	11464 <sfbpf_lex+0x790>
   10fe8:	b	1145c <sfbpf_lex+0x788>
   10fec:	b	11454 <sfbpf_lex+0x780>
   10ff0:	b	1144c <sfbpf_lex+0x778>
   10ff4:	b	11444 <sfbpf_lex+0x770>
   10ff8:	b	1143c <sfbpf_lex+0x768>
   10ffc:	b	11434 <sfbpf_lex+0x760>
   11000:	b	1142c <sfbpf_lex+0x758>
   11004:	b	11424 <sfbpf_lex+0x750>
   11008:	b	1141c <sfbpf_lex+0x748>
   1100c:	b	11414 <sfbpf_lex+0x740>
   11010:	b	1140c <sfbpf_lex+0x738>
   11014:	b	11404 <sfbpf_lex+0x730>
   11018:	b	113fc <sfbpf_lex+0x728>
   1101c:	b	113f4 <sfbpf_lex+0x720>
   11020:	b	113ec <sfbpf_lex+0x718>
   11024:	b	113e4 <sfbpf_lex+0x710>
   11028:	b	113dc <sfbpf_lex+0x708>
   1102c:	b	113d4 <sfbpf_lex+0x700>
   11030:	b	113cc <sfbpf_lex+0x6f8>
   11034:	b	113c4 <sfbpf_lex+0x6f0>
   11038:	b	113bc <sfbpf_lex+0x6e8>
   1103c:	b	113b4 <sfbpf_lex+0x6e0>
   11040:	b	113ac <sfbpf_lex+0x6d8>
   11044:	b	113a4 <sfbpf_lex+0x6d0>
   11048:	b	1139c <sfbpf_lex+0x6c8>
   1104c:	b	11394 <sfbpf_lex+0x6c0>
   11050:	b	1138c <sfbpf_lex+0x6b8>
   11054:	b	11384 <sfbpf_lex+0x6b0>
   11058:	b	1137c <sfbpf_lex+0x6a8>
   1105c:	b	11374 <sfbpf_lex+0x6a0>
   11060:	b	1136c <sfbpf_lex+0x698>
   11064:	b	11364 <sfbpf_lex+0x690>
   11068:	b	1135c <sfbpf_lex+0x688>
   1106c:	b	11354 <sfbpf_lex+0x680>
   11070:	b	1134c <sfbpf_lex+0x678>
   11074:	b	11344 <sfbpf_lex+0x670>
   11078:	b	1133c <sfbpf_lex+0x668>
   1107c:	b	11334 <sfbpf_lex+0x660>
   11080:	b	1132c <sfbpf_lex+0x658>
   11084:	b	11324 <sfbpf_lex+0x650>
   11088:	b	1131c <sfbpf_lex+0x648>
   1108c:	b	11314 <sfbpf_lex+0x640>
   11090:	b	1130c <sfbpf_lex+0x638>
   11094:	b	11304 <sfbpf_lex+0x630>
   11098:	b	112fc <sfbpf_lex+0x628>
   1109c:	b	112f4 <sfbpf_lex+0x620>
   110a0:	b	112ec <sfbpf_lex+0x618>
   110a4:	b	112dc <sfbpf_lex+0x608>
   110a8:	b	11738 <sfbpf_lex+0xa64>
   110ac:	b	11730 <sfbpf_lex+0xa5c>
   110b0:	b	11728 <sfbpf_lex+0xa54>
   110b4:	b	11720 <sfbpf_lex+0xa4c>
   110b8:	b	11718 <sfbpf_lex+0xa44>
   110bc:	b	11710 <sfbpf_lex+0xa3c>
   110c0:	b	11708 <sfbpf_lex+0xa34>
   110c4:	b	11700 <sfbpf_lex+0xa2c>
   110c8:	b	116f8 <sfbpf_lex+0xa24>
   110cc:	b	116f0 <sfbpf_lex+0xa1c>
   110d0:	b	116e8 <sfbpf_lex+0xa14>
   110d4:	b	116e0 <sfbpf_lex+0xa0c>
   110d8:	b	116d8 <sfbpf_lex+0xa04>
   110dc:	b	116d0 <sfbpf_lex+0x9fc>
   110e0:	b	116c8 <sfbpf_lex+0x9f4>
   110e4:	b	115e4 <sfbpf_lex+0x910>
   110e8:	b	115dc <sfbpf_lex+0x908>
   110ec:	b	115d4 <sfbpf_lex+0x900>
   110f0:	b	115b4 <sfbpf_lex+0x8e0>
   110f4:	b	115a4 <sfbpf_lex+0x8d0>
   110f8:	b	1159c <sfbpf_lex+0x8c8>
   110fc:	b	11594 <sfbpf_lex+0x8c0>
   11100:	b	1158c <sfbpf_lex+0x8b8>
   11104:	b	11624 <sfbpf_lex+0x950>
   11108:	b	1161c <sfbpf_lex+0x948>
   1110c:	b	11614 <sfbpf_lex+0x940>
   11110:	b	115ec <sfbpf_lex+0x918>
   11114:	b	116a4 <sfbpf_lex+0x9d0>
   11118:	b	1162c <sfbpf_lex+0x958>
   1111c:	b	11568 <sfbpf_lex+0x894>
   11120:	b	114f8 <sfbpf_lex+0x824>
   11124:	b	114e4 <sfbpf_lex+0x810>
   11128:	b	118e4 <sfbpf_lex+0xc10>
   1112c:	b	118c8 <sfbpf_lex+0xbf4>
   11130:	b	118ac <sfbpf_lex+0xbd8>
   11134:	b	11890 <sfbpf_lex+0xbbc>
   11138:	b	11874 <sfbpf_lex+0xba0>
   1113c:	b	11858 <sfbpf_lex+0xb84>
   11140:	b	1183c <sfbpf_lex+0xb68>
   11144:	b	11820 <sfbpf_lex+0xb4c>
   11148:	b	11804 <sfbpf_lex+0xb30>
   1114c:	b	117e8 <sfbpf_lex+0xb14>
   11150:	b	117cc <sfbpf_lex+0xaf8>
   11154:	b	117b0 <sfbpf_lex+0xadc>
   11158:	b	11794 <sfbpf_lex+0xac0>
   1115c:	b	11778 <sfbpf_lex+0xaa4>
   11160:	b	1175c <sfbpf_lex+0xa88>
   11164:	b	11740 <sfbpf_lex+0xa6c>
   11168:	b	119c4 <sfbpf_lex+0xcf0>
   1116c:	b	119a8 <sfbpf_lex+0xcd4>
   11170:	b	1198c <sfbpf_lex+0xcb8>
   11174:	b	11970 <sfbpf_lex+0xc9c>
   11178:	b	11954 <sfbpf_lex+0xc80>
   1117c:	b	11938 <sfbpf_lex+0xc64>
   11180:	b	1191c <sfbpf_lex+0xc48>
   11184:	b	11900 <sfbpf_lex+0xc2c>
   11188:	b	11a34 <sfbpf_lex+0xd60>
   1118c:	b	11a0c <sfbpf_lex+0xd38>
   11190:	b	119f8 <sfbpf_lex+0xd24>
   11194:	b	119e0 <sfbpf_lex+0xd0c>
   11198:	b	11b2c <sfbpf_lex+0xe58>
   1119c:	b	11a58 <sfbpf_lex+0xd84>
   111a0:	b	11be0 <sfbpf_lex+0xf0c>
   111a4:	ldr	r1, [r3]
   111a8:	mov	r2, #1
   111ac:	cmp	r1, #0
   111b0:	streq	r2, [r3]
   111b4:	str	r2, [r3, #40]	; 0x28
   111b8:	ldr	r3, [pc, #2888]	; 11d08 <sfbpf_lex+0x1034>
   111bc:	add	r3, pc, r3
   111c0:	ldr	r2, [r3, #36]	; 0x24
   111c4:	cmp	r2, #0
   111c8:	beq	11264 <sfbpf_lex+0x590>
   111cc:	ldr	r3, [pc, #2872]	; 11d0c <sfbpf_lex+0x1038>
   111d0:	add	r3, pc, r3
   111d4:	ldr	r2, [r3, #44]	; 0x2c
   111d8:	cmp	r2, #0
   111dc:	beq	1124c <sfbpf_lex+0x578>
   111e0:	ldr	r2, [pc, #2856]	; 11d10 <sfbpf_lex+0x103c>
   111e4:	add	r2, pc, r2
   111e8:	ldr	r3, [r2, #16]
   111ec:	cmp	r3, #0
   111f0:	beq	1127c <sfbpf_lex+0x5a8>
   111f4:	ldr	r4, [r2, #24]
   111f8:	ldr	r0, [r3, r4, lsl #2]
   111fc:	add	r4, r3, r4, lsl #2
   11200:	cmp	r0, #0
   11204:	beq	1127c <sfbpf_lex+0x5a8>
   11208:	ldr	r3, [pc, #2820]	; 11d14 <sfbpf_lex+0x1040>
   1120c:	ldr	r1, [r0, #16]
   11210:	add	r3, pc, r3
   11214:	ldr	r2, [pc, #2700]	; 11ca8 <sfbpf_lex+0xfd4>
   11218:	str	r1, [r3, #32]
   1121c:	ldr	r1, [sp, #20]
   11220:	ldr	r7, [r0, #8]
   11224:	str	r7, [r3, #4]
   11228:	ldr	r2, [r1, r2]
   1122c:	str	r2, [sp, #24]
   11230:	str	r7, [r2]
   11234:	ldr	r2, [r4]
   11238:	ldr	r2, [r2]
   1123c:	str	r2, [r3, #36]	; 0x24
   11240:	ldrb	r1, [r7]
   11244:	strb	r1, [r3, #28]
   11248:	b	10d18 <sfbpf_lex+0x44>
   1124c:	ldr	r2, [pc, #2756]	; 11d18 <sfbpf_lex+0x1044>
   11250:	ldr	r1, [sp, #20]
   11254:	ldr	r2, [r1, r2]
   11258:	ldr	r2, [r2]
   1125c:	str	r2, [r3, #44]	; 0x2c
   11260:	b	111e0 <sfbpf_lex+0x50c>
   11264:	ldr	r2, [pc, #2736]	; 11d1c <sfbpf_lex+0x1048>
   11268:	ldr	r1, [sp, #20]
   1126c:	ldr	r2, [r1, r2]
   11270:	ldr	r2, [r2]
   11274:	str	r2, [r3, #36]	; 0x24
   11278:	b	111cc <sfbpf_lex+0x4f8>
   1127c:	bl	108ac <sfbpf_ensure_buffer_stack>
   11280:	ldr	r3, [pc, #2712]	; 11d20 <sfbpf_lex+0x104c>
   11284:	mov	r1, #16384	; 0x4000
   11288:	add	r3, pc, r3
   1128c:	ldr	r0, [r3, #36]	; 0x24
   11290:	ldr	r6, [r3, #24]
   11294:	ldr	r5, [r3, #16]
   11298:	bl	10bac <sfbpf__create_buffer>
   1129c:	add	r4, r5, r6, lsl #2
   112a0:	str	r0, [r5, r6, lsl #2]
   112a4:	b	11208 <sfbpf_lex+0x534>
   112a8:	ldr	r2, [pc, #2676]	; 11d24 <sfbpf_lex+0x1050>
   112ac:	ldr	r3, [pc, #2676]	; 11d28 <sfbpf_lex+0x1054>
   112b0:	add	r2, pc, r2
   112b4:	add	r3, pc, r3
   112b8:	ldr	r1, [r2, #8]
   112bc:	add	r3, r3, #256	; 0x100
   112c0:	ldrb	r0, [r2, #28]
   112c4:	lsl	r1, r1, #1
   112c8:	ldr	r5, [r2, #12]
   112cc:	ldrsh	r3, [r3, r1]
   112d0:	strb	r0, [fp]
   112d4:	mov	fp, r5
   112d8:	b	10eac <sfbpf_lex+0x1d8>
   112dc:	ldr	r3, [pc, #2632]	; 11d2c <sfbpf_lex+0x1058>
   112e0:	mov	r0, r3
   112e4:	add	sp, sp, #124	; 0x7c
   112e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112ec:	ldr	r3, [pc, #2620]	; 11d30 <sfbpf_lex+0x105c>
   112f0:	b	112e0 <sfbpf_lex+0x60c>
   112f4:	mov	r3, #348	; 0x15c
   112f8:	b	112e0 <sfbpf_lex+0x60c>
   112fc:	ldr	r3, [pc, #2608]	; 11d34 <sfbpf_lex+0x1060>
   11300:	b	112e0 <sfbpf_lex+0x60c>
   11304:	ldr	r3, [pc, #2604]	; 11d38 <sfbpf_lex+0x1064>
   11308:	b	112e0 <sfbpf_lex+0x60c>
   1130c:	ldr	r3, [pc, #2600]	; 11d3c <sfbpf_lex+0x1068>
   11310:	b	112e0 <sfbpf_lex+0x60c>
   11314:	mov	r3, #344	; 0x158
   11318:	b	112e0 <sfbpf_lex+0x60c>
   1131c:	ldr	r3, [pc, #2588]	; 11d40 <sfbpf_lex+0x106c>
   11320:	b	112e0 <sfbpf_lex+0x60c>
   11324:	ldr	r3, [pc, #2584]	; 11d44 <sfbpf_lex+0x1070>
   11328:	b	112e0 <sfbpf_lex+0x60c>
   1132c:	ldr	r3, [pc, #2580]	; 11d48 <sfbpf_lex+0x1074>
   11330:	b	112e0 <sfbpf_lex+0x60c>
   11334:	ldr	r3, [pc, #2576]	; 11d4c <sfbpf_lex+0x1078>
   11338:	b	112e0 <sfbpf_lex+0x60c>
   1133c:	ldr	r3, [pc, #2572]	; 11d50 <sfbpf_lex+0x107c>
   11340:	b	112e0 <sfbpf_lex+0x60c>
   11344:	mov	r3, #324	; 0x144
   11348:	b	112e0 <sfbpf_lex+0x60c>
   1134c:	ldr	r3, [pc, #2560]	; 11d54 <sfbpf_lex+0x1080>
   11350:	b	112e0 <sfbpf_lex+0x60c>
   11354:	ldr	r3, [pc, #2556]	; 11d58 <sfbpf_lex+0x1084>
   11358:	b	112e0 <sfbpf_lex+0x60c>
   1135c:	mov	r3, #292	; 0x124
   11360:	b	112e0 <sfbpf_lex+0x60c>
   11364:	ldr	r3, [pc, #2544]	; 11d5c <sfbpf_lex+0x1088>
   11368:	b	112e0 <sfbpf_lex+0x60c>
   1136c:	mov	r3, #33	; 0x21
   11370:	b	112e0 <sfbpf_lex+0x60c>
   11374:	ldr	r3, [pc, #2532]	; 11d60 <sfbpf_lex+0x108c>
   11378:	b	112e0 <sfbpf_lex+0x60c>
   1137c:	mov	r3, #364	; 0x16c
   11380:	b	112e0 <sfbpf_lex+0x60c>
   11384:	ldr	r3, [pc, #2520]	; 11d64 <sfbpf_lex+0x1090>
   11388:	b	112e0 <sfbpf_lex+0x60c>
   1138c:	ldr	r3, [pc, #2516]	; 11d68 <sfbpf_lex+0x1094>
   11390:	b	112e0 <sfbpf_lex+0x60c>
   11394:	ldr	r3, [pc, #2512]	; 11d6c <sfbpf_lex+0x1098>
   11398:	b	112e0 <sfbpf_lex+0x60c>
   1139c:	ldr	r3, [pc, #2508]	; 11d70 <sfbpf_lex+0x109c>
   113a0:	b	112e0 <sfbpf_lex+0x60c>
   113a4:	ldr	r3, [pc, #2504]	; 11d74 <sfbpf_lex+0x10a0>
   113a8:	b	112e0 <sfbpf_lex+0x60c>
   113ac:	ldr	r3, [pc, #2500]	; 11d78 <sfbpf_lex+0x10a4>
   113b0:	b	112e0 <sfbpf_lex+0x60c>
   113b4:	ldr	r3, [pc, #2496]	; 11d7c <sfbpf_lex+0x10a8>
   113b8:	b	112e0 <sfbpf_lex+0x60c>
   113bc:	mov	r3, #304	; 0x130
   113c0:	b	112e0 <sfbpf_lex+0x60c>
   113c4:	ldr	r3, [pc, #2484]	; 11d80 <sfbpf_lex+0x10ac>
   113c8:	b	112e0 <sfbpf_lex+0x60c>
   113cc:	ldr	r3, [pc, #2480]	; 11d84 <sfbpf_lex+0x10b0>
   113d0:	b	112e0 <sfbpf_lex+0x60c>
   113d4:	ldr	r3, [pc, #2476]	; 11d88 <sfbpf_lex+0x10b4>
   113d8:	b	112e0 <sfbpf_lex+0x60c>
   113dc:	mov	r3, #300	; 0x12c
   113e0:	b	112e0 <sfbpf_lex+0x60c>
   113e4:	ldr	r3, [pc, #2464]	; 11d8c <sfbpf_lex+0x10b8>
   113e8:	b	112e0 <sfbpf_lex+0x60c>
   113ec:	ldr	r3, [pc, #2460]	; 11d90 <sfbpf_lex+0x10bc>
   113f0:	b	112e0 <sfbpf_lex+0x60c>
   113f4:	mov	r3, #268	; 0x10c
   113f8:	b	112e0 <sfbpf_lex+0x60c>
   113fc:	ldr	r3, [pc, #2448]	; 11d94 <sfbpf_lex+0x10c0>
   11400:	b	112e0 <sfbpf_lex+0x60c>
   11404:	mov	r3, #264	; 0x108
   11408:	b	112e0 <sfbpf_lex+0x60c>
   1140c:	ldr	r3, [pc, #2436]	; 11d98 <sfbpf_lex+0x10c4>
   11410:	b	112e0 <sfbpf_lex+0x60c>
   11414:	ldr	r3, [pc, #2432]	; 11d9c <sfbpf_lex+0x10c8>
   11418:	b	112e0 <sfbpf_lex+0x60c>
   1141c:	mov	r3, #260	; 0x104
   11420:	b	112e0 <sfbpf_lex+0x60c>
   11424:	mov	r3, #340	; 0x154
   11428:	b	112e0 <sfbpf_lex+0x60c>
   1142c:	ldr	r3, [pc, #2412]	; 11da0 <sfbpf_lex+0x10cc>
   11430:	b	112e0 <sfbpf_lex+0x60c>
   11434:	ldr	r3, [pc, #2408]	; 11da4 <sfbpf_lex+0x10d0>
   11438:	b	112e0 <sfbpf_lex+0x60c>
   1143c:	ldr	r3, [pc, #2404]	; 11da8 <sfbpf_lex+0x10d4>
   11440:	b	112e0 <sfbpf_lex+0x60c>
   11444:	ldr	r3, [pc, #2400]	; 11dac <sfbpf_lex+0x10d8>
   11448:	b	112e0 <sfbpf_lex+0x60c>
   1144c:	mov	r3, #336	; 0x150
   11450:	b	112e0 <sfbpf_lex+0x60c>
   11454:	ldr	r3, [pc, #2388]	; 11db0 <sfbpf_lex+0x10dc>
   11458:	b	112e0 <sfbpf_lex+0x60c>
   1145c:	ldr	r3, [pc, #2384]	; 11db4 <sfbpf_lex+0x10e0>
   11460:	b	112e0 <sfbpf_lex+0x60c>
   11464:	ldr	r3, [pc, #2380]	; 11db8 <sfbpf_lex+0x10e4>
   11468:	b	112e0 <sfbpf_lex+0x60c>
   1146c:	mov	r3, #332	; 0x14c
   11470:	b	112e0 <sfbpf_lex+0x60c>
   11474:	ldr	r3, [pc, #2368]	; 11dbc <sfbpf_lex+0x10e8>
   11478:	b	112e0 <sfbpf_lex+0x60c>
   1147c:	ldr	r3, [pc, #2364]	; 11dc0 <sfbpf_lex+0x10ec>
   11480:	b	112e0 <sfbpf_lex+0x60c>
   11484:	ldr	r3, [pc, #2356]	; 11dc0 <sfbpf_lex+0x10ec>
   11488:	b	112e0 <sfbpf_lex+0x60c>
   1148c:	mov	r3, #328	; 0x148
   11490:	b	112e0 <sfbpf_lex+0x60c>
   11494:	mov	r3, #328	; 0x148
   11498:	b	112e0 <sfbpf_lex+0x60c>
   1149c:	ldr	r3, [pc, #2336]	; 11dc4 <sfbpf_lex+0x10f0>
   114a0:	b	112e0 <sfbpf_lex+0x60c>
   114a4:	mov	r3, #288	; 0x120
   114a8:	b	112e0 <sfbpf_lex+0x60c>
   114ac:	ldr	r3, [pc, #2324]	; 11dc8 <sfbpf_lex+0x10f4>
   114b0:	b	112e0 <sfbpf_lex+0x60c>
   114b4:	ldr	r3, [pc, #2320]	; 11dcc <sfbpf_lex+0x10f8>
   114b8:	b	112e0 <sfbpf_lex+0x60c>
   114bc:	ldr	r3, [pc, #2316]	; 11dd0 <sfbpf_lex+0x10fc>
   114c0:	b	112e0 <sfbpf_lex+0x60c>
   114c4:	mov	r3, #284	; 0x11c
   114c8:	b	112e0 <sfbpf_lex+0x60c>
   114cc:	ldr	r3, [pc, #2304]	; 11dd4 <sfbpf_lex+0x1100>
   114d0:	b	112e0 <sfbpf_lex+0x60c>
   114d4:	ldr	r3, [pc, #2300]	; 11dd8 <sfbpf_lex+0x1104>
   114d8:	b	112e0 <sfbpf_lex+0x60c>
   114dc:	ldr	r3, [pc, #2296]	; 11ddc <sfbpf_lex+0x1108>
   114e0:	b	112e0 <sfbpf_lex+0x60c>
   114e4:	ldr	r3, [sp, #24]
   114e8:	ldr	r0, [pc, #2288]	; 11de0 <sfbpf_lex+0x110c>
   114ec:	ldr	r1, [r3]
   114f0:	add	r0, pc, r0
   114f4:	bl	2454 <sf_bpf_error>
   114f8:	add	r4, sp, #88	; 0x58
   114fc:	mov	r2, #32
   11500:	mov	r1, #0
   11504:	mov	r0, r4
   11508:	bl	e88 <memset@plt>
   1150c:	ldr	r0, [sp, #24]
   11510:	mov	lr, #10
   11514:	mov	ip, #4
   11518:	mov	r2, r4
   1151c:	add	r3, sp, #84	; 0x54
   11520:	mov	r1, #0
   11524:	ldr	r0, [r0]
   11528:	str	lr, [sp, #92]	; 0x5c
   1152c:	str	ip, [sp, #88]	; 0x58
   11530:	bl	ee8 <getaddrinfo@plt>
   11534:	cmp	r0, #0
   11538:	bne	11c0c <sfbpf_lex+0xf38>
   1153c:	ldr	r0, [sp, #84]	; 0x54
   11540:	bl	edc <freeaddrinfo@plt>
   11544:	ldr	r3, [sp, #24]
   11548:	ldr	r0, [r3]
   1154c:	bl	2f24 <sf_sdup>
   11550:	ldr	r2, [pc, #2188]	; 11de4 <sfbpf_lex+0x1110>
   11554:	ldr	r1, [sp, #20]
   11558:	ldr	r3, [pc, #2184]	; 11de8 <sfbpf_lex+0x1114>
   1155c:	ldr	r2, [r1, r2]
   11560:	str	r0, [r2]
   11564:	b	112e0 <sfbpf_lex+0x60c>
   11568:	ldr	r3, [sp, #24]
   1156c:	ldr	r0, [r3]
   11570:	bl	2f24 <sf_sdup>
   11574:	ldr	r2, [pc, #2152]	; 11de4 <sfbpf_lex+0x1110>
   11578:	ldr	r1, [sp, #20]
   1157c:	ldr	r3, [pc, #2152]	; 11dec <sfbpf_lex+0x1118>
   11580:	ldr	r2, [r1, r2]
   11584:	str	r0, [r2]
   11588:	b	112e0 <sfbpf_lex+0x60c>
   1158c:	ldr	r3, [pc, #2140]	; 11df0 <sfbpf_lex+0x111c>
   11590:	b	112e0 <sfbpf_lex+0x60c>
   11594:	ldr	r3, [pc, #2136]	; 11df4 <sfbpf_lex+0x1120>
   11598:	b	112e0 <sfbpf_lex+0x60c>
   1159c:	mov	r3, #308	; 0x134
   115a0:	b	112e0 <sfbpf_lex+0x60c>
   115a4:	ldr	r3, [sp, #24]
   115a8:	ldr	r3, [r3]
   115ac:	ldrb	r3, [r3]
   115b0:	b	112e0 <sfbpf_lex+0x60c>
   115b4:	ldr	r3, [pc, #2108]	; 11df8 <sfbpf_lex+0x1124>
   115b8:	ldr	r9, [sp, #8]
   115bc:	add	r3, pc, r3
   115c0:	ldr	r8, [sp, #12]
   115c4:	ldr	r7, [sp, #16]
   115c8:	ldr	sl, [r3, #4]
   115cc:	ldrb	r1, [r3, #28]
   115d0:	b	10d6c <sfbpf_lex+0x98>
   115d4:	ldr	r3, [pc, #2080]	; 11dfc <sfbpf_lex+0x1128>
   115d8:	b	112e0 <sfbpf_lex+0x60c>
   115dc:	ldr	r3, [pc, #2076]	; 11e00 <sfbpf_lex+0x112c>
   115e0:	b	112e0 <sfbpf_lex+0x60c>
   115e4:	mov	r3, #360	; 0x168
   115e8:	b	112e0 <sfbpf_lex+0x60c>
   115ec:	ldr	r3, [sp, #24]
   115f0:	ldr	r0, [r3]
   115f4:	add	r0, r0, #1
   115f8:	bl	bd58 <pcap_ether_aton>
   115fc:	ldr	r2, [pc, #2016]	; 11de4 <sfbpf_lex+0x1110>
   11600:	ldr	r1, [sp, #20]
   11604:	ldr	r3, [pc, #2040]	; 11e04 <sfbpf_lex+0x1130>
   11608:	ldr	r2, [r1, r2]
   1160c:	str	r0, [r2]
   11610:	b	112e0 <sfbpf_lex+0x60c>
   11614:	ldr	r3, [pc, #2028]	; 11e08 <sfbpf_lex+0x1134>
   11618:	b	112e0 <sfbpf_lex+0x60c>
   1161c:	mov	r3, #316	; 0x13c
   11620:	b	112e0 <sfbpf_lex+0x60c>
   11624:	mov	r3, #61	; 0x3d
   11628:	b	112e0 <sfbpf_lex+0x60c>
   1162c:	ldr	r3, [sp, #24]
   11630:	ldr	r5, [r3]
   11634:	ldrb	r4, [r5]
   11638:	cmp	r4, #48	; 0x30
   1163c:	movne	r6, #10
   11640:	beq	11c28 <sfbpf_lex+0xf54>
   11644:	cmp	r4, #0
   11648:	beq	11c20 <sfbpf_lex+0xf4c>
   1164c:	bl	e34 <__ctype_b_loc@plt>
   11650:	mov	r2, #0
   11654:	ldr	r1, [r0]
   11658:	lsl	r3, r4, #1
   1165c:	mul	r2, r2, r6
   11660:	ldrh	r3, [r1, r3]
   11664:	tst	r3, #2048	; 0x800
   11668:	subne	r3, r4, #48	; 0x30
   1166c:	bne	1167c <sfbpf_lex+0x9a8>
   11670:	tst	r3, #512	; 0x200
   11674:	subne	r3, r4, #87	; 0x57
   11678:	subeq	r3, r4, #55	; 0x37
   1167c:	ldrb	r4, [r5, #1]!
   11680:	add	r2, r2, r3
   11684:	cmp	r4, #0
   11688:	bne	11658 <sfbpf_lex+0x984>
   1168c:	ldr	r1, [pc, #1872]	; 11de4 <sfbpf_lex+0x1110>
   11690:	ldr	r0, [sp, #20]
   11694:	ldr	r3, [pc, #1904]	; 11e0c <sfbpf_lex+0x1138>
   11698:	ldr	r1, [r0, r1]
   1169c:	str	r2, [r1]
   116a0:	b	112e0 <sfbpf_lex+0x60c>
   116a4:	ldr	r3, [sp, #24]
   116a8:	ldr	r0, [r3]
   116ac:	bl	bd58 <pcap_ether_aton>
   116b0:	ldr	r2, [pc, #1836]	; 11de4 <sfbpf_lex+0x1110>
   116b4:	ldr	r1, [sp, #20]
   116b8:	mov	r3, #312	; 0x138
   116bc:	ldr	r2, [r1, r2]
   116c0:	str	r0, [r2]
   116c4:	b	112e0 <sfbpf_lex+0x60c>
   116c8:	ldr	r3, [pc, #1856]	; 11e10 <sfbpf_lex+0x113c>
   116cc:	b	112e0 <sfbpf_lex+0x60c>
   116d0:	ldr	r3, [pc, #1852]	; 11e14 <sfbpf_lex+0x1140>
   116d4:	b	112e0 <sfbpf_lex+0x60c>
   116d8:	ldr	r3, [pc, #1848]	; 11e18 <sfbpf_lex+0x1144>
   116dc:	b	112e0 <sfbpf_lex+0x60c>
   116e0:	ldr	r3, [pc, #1840]	; 11e18 <sfbpf_lex+0x1144>
   116e4:	b	112e0 <sfbpf_lex+0x60c>
   116e8:	mov	r3, #356	; 0x164
   116ec:	b	112e0 <sfbpf_lex+0x60c>
   116f0:	ldr	r3, [pc, #1828]	; 11e1c <sfbpf_lex+0x1148>
   116f4:	b	112e0 <sfbpf_lex+0x60c>
   116f8:	ldr	r3, [pc, #1824]	; 11e20 <sfbpf_lex+0x114c>
   116fc:	b	112e0 <sfbpf_lex+0x60c>
   11700:	ldr	r3, [pc, #1820]	; 11e24 <sfbpf_lex+0x1150>
   11704:	b	112e0 <sfbpf_lex+0x60c>
   11708:	mov	r3, #296	; 0x128
   1170c:	b	112e0 <sfbpf_lex+0x60c>
   11710:	ldr	r3, [pc, #1808]	; 11e28 <sfbpf_lex+0x1154>
   11714:	b	112e0 <sfbpf_lex+0x60c>
   11718:	ldr	r3, [pc, #1804]	; 11e2c <sfbpf_lex+0x1158>
   1171c:	b	112e0 <sfbpf_lex+0x60c>
   11720:	mov	r3, #352	; 0x160
   11724:	b	112e0 <sfbpf_lex+0x60c>
   11728:	ldr	r3, [pc, #1792]	; 11e30 <sfbpf_lex+0x115c>
   1172c:	b	112e0 <sfbpf_lex+0x60c>
   11730:	ldr	r3, [pc, #1788]	; 11e34 <sfbpf_lex+0x1160>
   11734:	b	112e0 <sfbpf_lex+0x60c>
   11738:	ldr	r3, [pc, #1784]	; 11e38 <sfbpf_lex+0x1164>
   1173c:	b	112e0 <sfbpf_lex+0x60c>
   11740:	ldr	r2, [pc, #1692]	; 11de4 <sfbpf_lex+0x1110>
   11744:	ldr	r0, [sp, #20]
   11748:	mov	r1, #17
   1174c:	ldr	r3, [pc, #1720]	; 11e0c <sfbpf_lex+0x1138>
   11750:	ldr	r2, [r0, r2]
   11754:	str	r1, [r2]
   11758:	b	112e0 <sfbpf_lex+0x60c>
   1175c:	ldr	r2, [pc, #1664]	; 11de4 <sfbpf_lex+0x1110>
   11760:	ldr	r0, [sp, #20]
   11764:	mov	r1, #16
   11768:	ldr	r3, [pc, #1692]	; 11e0c <sfbpf_lex+0x1138>
   1176c:	ldr	r2, [r0, r2]
   11770:	str	r1, [r2]
   11774:	b	112e0 <sfbpf_lex+0x60c>
   11778:	ldr	r2, [pc, #1636]	; 11de4 <sfbpf_lex+0x1110>
   1177c:	ldr	r0, [sp, #20]
   11780:	mov	r1, #15
   11784:	ldr	r3, [pc, #1664]	; 11e0c <sfbpf_lex+0x1138>
   11788:	ldr	r2, [r0, r2]
   1178c:	str	r1, [r2]
   11790:	b	112e0 <sfbpf_lex+0x60c>
   11794:	ldr	r2, [pc, #1608]	; 11de4 <sfbpf_lex+0x1110>
   11798:	ldr	r0, [sp, #20]
   1179c:	mov	r1, #14
   117a0:	ldr	r3, [pc, #1636]	; 11e0c <sfbpf_lex+0x1138>
   117a4:	ldr	r2, [r0, r2]
   117a8:	str	r1, [r2]
   117ac:	b	112e0 <sfbpf_lex+0x60c>
   117b0:	ldr	r2, [pc, #1580]	; 11de4 <sfbpf_lex+0x1110>
   117b4:	ldr	r0, [sp, #20]
   117b8:	mov	r1, #13
   117bc:	ldr	r3, [pc, #1608]	; 11e0c <sfbpf_lex+0x1138>
   117c0:	ldr	r2, [r0, r2]
   117c4:	str	r1, [r2]
   117c8:	b	112e0 <sfbpf_lex+0x60c>
   117cc:	ldr	r2, [pc, #1552]	; 11de4 <sfbpf_lex+0x1110>
   117d0:	ldr	r0, [sp, #20]
   117d4:	mov	r1, #12
   117d8:	ldr	r3, [pc, #1580]	; 11e0c <sfbpf_lex+0x1138>
   117dc:	ldr	r2, [r0, r2]
   117e0:	str	r1, [r2]
   117e4:	b	112e0 <sfbpf_lex+0x60c>
   117e8:	ldr	r2, [pc, #1524]	; 11de4 <sfbpf_lex+0x1110>
   117ec:	ldr	r0, [sp, #20]
   117f0:	mov	r1, #11
   117f4:	ldr	r3, [pc, #1552]	; 11e0c <sfbpf_lex+0x1138>
   117f8:	ldr	r2, [r0, r2]
   117fc:	str	r1, [r2]
   11800:	b	112e0 <sfbpf_lex+0x60c>
   11804:	ldr	r2, [pc, #1496]	; 11de4 <sfbpf_lex+0x1110>
   11808:	ldr	r0, [sp, #20]
   1180c:	mov	r1, #10
   11810:	ldr	r3, [pc, #1524]	; 11e0c <sfbpf_lex+0x1138>
   11814:	ldr	r2, [r0, r2]
   11818:	str	r1, [r2]
   1181c:	b	112e0 <sfbpf_lex+0x60c>
   11820:	ldr	r2, [pc, #1468]	; 11de4 <sfbpf_lex+0x1110>
   11824:	ldr	r0, [sp, #20]
   11828:	mov	r1, #9
   1182c:	ldr	r3, [pc, #1496]	; 11e0c <sfbpf_lex+0x1138>
   11830:	ldr	r2, [r0, r2]
   11834:	str	r1, [r2]
   11838:	b	112e0 <sfbpf_lex+0x60c>
   1183c:	ldr	r2, [pc, #1440]	; 11de4 <sfbpf_lex+0x1110>
   11840:	ldr	r0, [sp, #20]
   11844:	mov	r1, #8
   11848:	ldr	r3, [pc, #1468]	; 11e0c <sfbpf_lex+0x1138>
   1184c:	ldr	r2, [r0, r2]
   11850:	str	r1, [r2]
   11854:	b	112e0 <sfbpf_lex+0x60c>
   11858:	ldr	r2, [pc, #1412]	; 11de4 <sfbpf_lex+0x1110>
   1185c:	ldr	r0, [sp, #20]
   11860:	mov	r1, #5
   11864:	ldr	r3, [pc, #1440]	; 11e0c <sfbpf_lex+0x1138>
   11868:	ldr	r2, [r0, r2]
   1186c:	str	r1, [r2]
   11870:	b	112e0 <sfbpf_lex+0x60c>
   11874:	ldr	r2, [pc, #1384]	; 11de4 <sfbpf_lex+0x1110>
   11878:	ldr	r0, [sp, #20]
   1187c:	mov	r1, #4
   11880:	ldr	r3, [pc, #1412]	; 11e0c <sfbpf_lex+0x1138>
   11884:	ldr	r2, [r0, r2]
   11888:	str	r1, [r2]
   1188c:	b	112e0 <sfbpf_lex+0x60c>
   11890:	ldr	r2, [pc, #1356]	; 11de4 <sfbpf_lex+0x1110>
   11894:	ldr	r0, [sp, #20]
   11898:	mov	r1, #3
   1189c:	ldr	r3, [pc, #1384]	; 11e0c <sfbpf_lex+0x1138>
   118a0:	ldr	r2, [r0, r2]
   118a4:	str	r1, [r2]
   118a8:	b	112e0 <sfbpf_lex+0x60c>
   118ac:	ldr	r2, [pc, #1328]	; 11de4 <sfbpf_lex+0x1110>
   118b0:	ldr	r0, [sp, #20]
   118b4:	mov	r1, #0
   118b8:	ldr	r3, [pc, #1356]	; 11e0c <sfbpf_lex+0x1138>
   118bc:	ldr	r2, [r0, r2]
   118c0:	str	r1, [r2]
   118c4:	b	112e0 <sfbpf_lex+0x60c>
   118c8:	ldr	r2, [pc, #1300]	; 11de4 <sfbpf_lex+0x1110>
   118cc:	ldr	r0, [sp, #20]
   118d0:	mov	r1, #1
   118d4:	ldr	r3, [pc, #1328]	; 11e0c <sfbpf_lex+0x1138>
   118d8:	ldr	r2, [r0, r2]
   118dc:	str	r1, [r2]
   118e0:	b	112e0 <sfbpf_lex+0x60c>
   118e4:	ldr	r2, [pc, #1272]	; 11de4 <sfbpf_lex+0x1110>
   118e8:	ldr	r0, [sp, #20]
   118ec:	mov	r1, #0
   118f0:	ldr	r3, [pc, #1300]	; 11e0c <sfbpf_lex+0x1138>
   118f4:	ldr	r2, [r0, r2]
   118f8:	str	r1, [r2]
   118fc:	b	112e0 <sfbpf_lex+0x60c>
   11900:	ldr	r2, [pc, #1244]	; 11de4 <sfbpf_lex+0x1110>
   11904:	ldr	r0, [sp, #20]
   11908:	mov	r1, #32
   1190c:	ldr	r3, [pc, #1272]	; 11e0c <sfbpf_lex+0x1138>
   11910:	ldr	r2, [r0, r2]
   11914:	str	r1, [r2]
   11918:	b	112e0 <sfbpf_lex+0x60c>
   1191c:	ldr	r2, [pc, #1216]	; 11de4 <sfbpf_lex+0x1110>
   11920:	ldr	r0, [sp, #20]
   11924:	mov	r1, #16
   11928:	ldr	r3, [pc, #1244]	; 11e0c <sfbpf_lex+0x1138>
   1192c:	ldr	r2, [r0, r2]
   11930:	str	r1, [r2]
   11934:	b	112e0 <sfbpf_lex+0x60c>
   11938:	ldr	r2, [pc, #1188]	; 11de4 <sfbpf_lex+0x1110>
   1193c:	ldr	r0, [sp, #20]
   11940:	mov	r1, #8
   11944:	ldr	r3, [pc, #1216]	; 11e0c <sfbpf_lex+0x1138>
   11948:	ldr	r2, [r0, r2]
   1194c:	str	r1, [r2]
   11950:	b	112e0 <sfbpf_lex+0x60c>
   11954:	ldr	r2, [pc, #1160]	; 11de4 <sfbpf_lex+0x1110>
   11958:	ldr	r0, [sp, #20]
   1195c:	mov	r1, #4
   11960:	ldr	r3, [pc, #1188]	; 11e0c <sfbpf_lex+0x1138>
   11964:	ldr	r2, [r0, r2]
   11968:	str	r1, [r2]
   1196c:	b	112e0 <sfbpf_lex+0x60c>
   11970:	ldr	r2, [pc, #1132]	; 11de4 <sfbpf_lex+0x1110>
   11974:	ldr	r0, [sp, #20]
   11978:	mov	r1, #2
   1197c:	ldr	r3, [pc, #1160]	; 11e0c <sfbpf_lex+0x1138>
   11980:	ldr	r2, [r0, r2]
   11984:	str	r1, [r2]
   11988:	b	112e0 <sfbpf_lex+0x60c>
   1198c:	ldr	r2, [pc, #1104]	; 11de4 <sfbpf_lex+0x1110>
   11990:	ldr	r0, [sp, #20]
   11994:	mov	r1, #1
   11998:	ldr	r3, [pc, #1132]	; 11e0c <sfbpf_lex+0x1138>
   1199c:	ldr	r2, [r0, r2]
   119a0:	str	r1, [r2]
   119a4:	b	112e0 <sfbpf_lex+0x60c>
   119a8:	ldr	r2, [pc, #1076]	; 11de4 <sfbpf_lex+0x1110>
   119ac:	ldr	r0, [sp, #20]
   119b0:	mov	r1, #13
   119b4:	ldr	r3, [pc, #1104]	; 11e0c <sfbpf_lex+0x1138>
   119b8:	ldr	r2, [r0, r2]
   119bc:	str	r1, [r2]
   119c0:	b	112e0 <sfbpf_lex+0x60c>
   119c4:	ldr	r2, [pc, #1048]	; 11de4 <sfbpf_lex+0x1110>
   119c8:	ldr	r0, [sp, #20]
   119cc:	mov	r1, #18
   119d0:	ldr	r3, [pc, #1076]	; 11e0c <sfbpf_lex+0x1138>
   119d4:	ldr	r2, [r0, r2]
   119d8:	str	r1, [r2]
   119dc:	b	112e0 <sfbpf_lex+0x60c>
   119e0:	ldr	r3, [sp, #24]
   119e4:	ldr	r0, [pc, #1104]	; 11e3c <sfbpf_lex+0x1168>
   119e8:	ldr	r3, [r3]
   119ec:	add	r0, pc, r0
   119f0:	ldrb	r1, [r3]
   119f4:	bl	2454 <sf_bpf_error>
   119f8:	ldr	r3, [sp, #24]
   119fc:	ldr	r0, [pc, #1084]	; 11e40 <sfbpf_lex+0x116c>
   11a00:	ldr	r1, [r3]
   11a04:	add	r0, pc, r0
   11a08:	bl	2454 <sf_bpf_error>
   11a0c:	ldr	r3, [sp, #24]
   11a10:	ldr	r0, [r3]
   11a14:	add	r0, r0, #1
   11a18:	bl	2f24 <sf_sdup>
   11a1c:	ldr	r2, [pc, #960]	; 11de4 <sfbpf_lex+0x1110>
   11a20:	ldr	r1, [sp, #20]
   11a24:	ldr	r3, [pc, #1048]	; 11e44 <sfbpf_lex+0x1170>
   11a28:	ldr	r2, [r1, r2]
   11a2c:	str	r0, [r2]
   11a30:	b	112e0 <sfbpf_lex+0x60c>
   11a34:	ldr	r3, [sp, #24]
   11a38:	ldr	r0, [r3]
   11a3c:	bl	2f24 <sf_sdup>
   11a40:	ldr	r2, [pc, #924]	; 11de4 <sfbpf_lex+0x1110>
   11a44:	ldr	r1, [sp, #20]
   11a48:	ldr	r3, [pc, #1012]	; 11e44 <sfbpf_lex+0x1170>
   11a4c:	ldr	r2, [r1, r2]
   11a50:	str	r0, [r2]
   11a54:	b	112e0 <sfbpf_lex+0x60c>
   11a58:	ldr	sl, [r9, #16]
   11a5c:	ldr	r3, [r9, #24]
   11a60:	ldrb	r1, [r9, #28]
   11a64:	ldr	r2, [sp, #24]
   11a68:	ldr	r2, [r2]
   11a6c:	strb	r1, [fp]
   11a70:	ldr	r8, [sl, r3, lsl #2]
   11a74:	sub	r2, fp, r2
   11a78:	sub	r2, r2, #1
   11a7c:	ldr	r1, [r8, #44]	; 0x2c
   11a80:	str	r2, [sp, #64]	; 0x40
   11a84:	cmp	r1, #0
   11a88:	moveq	ip, #1
   11a8c:	ldreq	r1, [r9, #36]	; 0x24
   11a90:	ldrne	r1, [r9, #32]
   11a94:	streq	r1, [r8]
   11a98:	ldreq	r0, [sl, r3, lsl #2]
   11a9c:	ldreq	r1, [r8, #16]
   11aa0:	add	r2, sl, r3, lsl #2
   11aa4:	streq	ip, [r0, #44]	; 0x2c
   11aa8:	ldreq	r8, [sl, r3, lsl #2]
   11aac:	ldr	ip, [sp, #36]	; 0x24
   11ab0:	streq	r1, [r9, #32]
   11ab4:	ldr	r0, [r8, #4]
   11ab8:	ldr	r4, [ip, #4]
   11abc:	add	r5, r0, r1
   11ac0:	cmp	r5, r4
   11ac4:	bcs	11fd0 <sfbpf_lex+0x12fc>
   11ac8:	add	r1, r1, #1
   11acc:	add	r1, r0, r1
   11ad0:	cmp	r4, r1
   11ad4:	ldr	r1, [sp, #24]
   11ad8:	ldr	r1, [r1]
   11adc:	bhi	11fc4 <sfbpf_lex+0x12f0>
   11ae0:	ldr	ip, [r8, #40]	; 0x28
   11ae4:	cmp	ip, #0
   11ae8:	bne	11ed0 <sfbpf_lex+0x11fc>
   11aec:	sub	r4, r4, r1
   11af0:	cmp	r4, #1
   11af4:	beq	11c74 <sfbpf_lex+0xfa0>
   11af8:	ldr	r3, [pc, #840]	; 11e48 <sfbpf_lex+0x1174>
   11afc:	add	r3, pc, r3
   11b00:	str	r5, [r3, #4]
   11b04:	bl	f30 <yy_get_previous_state>
   11b08:	ldr	r3, [pc, #828]	; 11e4c <sfbpf_lex+0x1178>
   11b0c:	ldr	r2, [sp, #24]
   11b10:	add	r3, pc, r3
   11b14:	add	r3, r3, #256	; 0x100
   11b18:	ldr	r2, [r2]
   11b1c:	str	r2, [sp, #28]
   11b20:	lsl	r0, r0, #1
   11b24:	ldrsh	r3, [r3, r0]
   11b28:	b	112d4 <sfbpf_lex+0x600>
   11b2c:	ldr	r4, [pc, #796]	; 11e50 <sfbpf_lex+0x117c>
   11b30:	ldr	r3, [sp, #32]
   11b34:	ldr	r0, [sp, #24]
   11b38:	add	r4, pc, r4
   11b3c:	ldr	r1, [r3]
   11b40:	mov	r2, #1
   11b44:	ldr	r3, [r4, #44]	; 0x2c
   11b48:	ldr	r0, [r0]
   11b4c:	ldr	r9, [sp, #8]
   11b50:	ldr	r8, [sp, #12]
   11b54:	ldr	r7, [sp, #16]
   11b58:	bl	df8 <fwrite@plt>
   11b5c:	ldr	sl, [r4, #4]
   11b60:	ldrb	r1, [r4, #28]
   11b64:	b	10d6c <sfbpf_lex+0x98>
   11b68:	ldr	r3, [pc, #740]	; 11e54 <sfbpf_lex+0x1180>
   11b6c:	b	112e0 <sfbpf_lex+0x60c>
   11b70:	mov	r3, #320	; 0x140
   11b74:	b	112e0 <sfbpf_lex+0x60c>
   11b78:	ldr	r3, [pc, #728]	; 11e58 <sfbpf_lex+0x1184>
   11b7c:	b	112e0 <sfbpf_lex+0x60c>
   11b80:	ldr	r3, [pc, #724]	; 11e5c <sfbpf_lex+0x1188>
   11b84:	b	112e0 <sfbpf_lex+0x60c>
   11b88:	ldr	r3, [pc, #720]	; 11e60 <sfbpf_lex+0x118c>
   11b8c:	b	112e0 <sfbpf_lex+0x60c>
   11b90:	mov	r3, #280	; 0x118
   11b94:	b	112e0 <sfbpf_lex+0x60c>
   11b98:	ldr	r3, [pc, #708]	; 11e64 <sfbpf_lex+0x1190>
   11b9c:	b	112e0 <sfbpf_lex+0x60c>
   11ba0:	ldr	r3, [pc, #704]	; 11e68 <sfbpf_lex+0x1194>
   11ba4:	b	112e0 <sfbpf_lex+0x60c>
   11ba8:	ldr	r3, [pc, #700]	; 11e6c <sfbpf_lex+0x1198>
   11bac:	b	112e0 <sfbpf_lex+0x60c>
   11bb0:	mov	r3, #276	; 0x114
   11bb4:	b	112e0 <sfbpf_lex+0x60c>
   11bb8:	ldr	r3, [pc, #688]	; 11e70 <sfbpf_lex+0x119c>
   11bbc:	b	112e0 <sfbpf_lex+0x60c>
   11bc0:	ldr	r3, [pc, #684]	; 11e74 <sfbpf_lex+0x11a0>
   11bc4:	b	112e0 <sfbpf_lex+0x60c>
   11bc8:	ldr	r3, [pc, #680]	; 11e78 <sfbpf_lex+0x11a4>
   11bcc:	b	112e0 <sfbpf_lex+0x60c>
   11bd0:	mov	r3, #272	; 0x110
   11bd4:	b	112e0 <sfbpf_lex+0x60c>
   11bd8:	ldr	r3, [pc, #668]	; 11e7c <sfbpf_lex+0x11a8>
   11bdc:	b	112e0 <sfbpf_lex+0x60c>
   11be0:	mov	r3, #0
   11be4:	b	112e0 <sfbpf_lex+0x60c>
   11be8:	ldr	r3, [pc, #656]	; 11e80 <sfbpf_lex+0x11ac>
   11bec:	b	112e0 <sfbpf_lex+0x60c>
   11bf0:	ldr	r3, [pc, #652]	; 11e84 <sfbpf_lex+0x11b0>
   11bf4:	b	112e0 <sfbpf_lex+0x60c>
   11bf8:	ldr	r3, [pc, #648]	; 11e88 <sfbpf_lex+0x11b4>
   11bfc:	b	112e0 <sfbpf_lex+0x60c>
   11c00:	ldr	r0, [pc, #644]	; 11e8c <sfbpf_lex+0x11b8>
   11c04:	add	r0, pc, r0
   11c08:	bl	10870 <yy_fatal_error>
   11c0c:	ldr	r3, [sp, #24]
   11c10:	ldr	r0, [pc, #632]	; 11e90 <sfbpf_lex+0x11bc>
   11c14:	ldr	r1, [r3]
   11c18:	add	r0, pc, r0
   11c1c:	bl	2454 <sf_bpf_error>
   11c20:	mov	r2, r4
   11c24:	b	1168c <sfbpf_lex+0x9b8>
   11c28:	ldrb	r4, [r5, #1]
   11c2c:	and	r3, r4, #223	; 0xdf
   11c30:	cmp	r3, #88	; 0x58
   11c34:	moveq	r6, #16
   11c38:	ldrbeq	r4, [r5, #2]
   11c3c:	addne	r5, r5, #1
   11c40:	addeq	r5, r5, #2
   11c44:	movne	r6, #8
   11c48:	b	11644 <sfbpf_lex+0x970>
   11c4c:	ldr	r3, [pc, #576]	; 11e94 <sfbpf_lex+0x11c0>
   11c50:	ldr	r1, [sp, #12]
   11c54:	add	r3, pc, r3
   11c58:	str	r1, [r3, #8]
   11c5c:	b	10e64 <sfbpf_lex+0x190>
   11c60:	ldr	r3, [pc, #560]	; 11e98 <sfbpf_lex+0x11c4>
   11c64:	ldr	r1, [sp, #16]
   11c68:	add	r3, pc, r3
   11c6c:	str	r1, [r3, #12]
   11c70:	b	10e5c <sfbpf_lex+0x188>
   11c74:	ldr	r2, [pc, #544]	; 11e9c <sfbpf_lex+0x11c8>
   11c78:	ldr	r3, [sp, #24]
   11c7c:	add	r2, pc, r2
   11c80:	ldr	r1, [r3]
   11c84:	ldr	r3, [r2]
   11c88:	str	r1, [r2, #4]
   11c8c:	sub	r3, r3, #1
   11c90:	add	r3, r3, r3, lsr #31
   11c94:	asr	r2, r3, #1
   11c98:	add	r2, r2, #146	; 0x92
   11c9c:	b	10f4c <sfbpf_lex+0x278>
   11ca0:	.word	0x0001fe5c
   11ca4:	.word	0x0001f310
   11ca8:	.word	0x000000dc
   11cac:	.word	0x00004cdc
   11cb0:	.word	0x0000acc0
   11cb4:	.word	0x00006cc8
   11cb8:	.word	0x000000c4
   11cbc:	.word	0x0001fdc8
   11cc0:	.word	0x00006c68
   11cc4:	.word	0x0001fda4
   11cc8:	.word	0x00004c4c
   11ccc:	.word	0x00006c40
   11cd0:	.word	0x00000599
   11cd4:	.word	0x00001ce9
   11cd8:	.word	0x00004b98
   11cdc:	.word	0x00006b88
   11ce0:	.word	0x0000ab70
   11ce4:	.word	0x0001fc80
   11ce8:	.word	0x00004b44
   11cec:	.word	0x0001fc10
   11cf0:	.word	0x0001fc4c
   11cf4:	.word	0x0001fc3c
   11cf8:	.word	0x0001fc24
   11cfc:	.word	0x0001fc1c
   11d00:	.word	0x0001fc0c
   11d04:	.word	0x0001fc08
   11d08:	.word	0x0001f980
   11d0c:	.word	0x0001f96c
   11d10:	.word	0x0001f958
   11d14:	.word	0x0001f92c
   11d18:	.word	0x000000ec
   11d1c:	.word	0x000000e4
   11d20:	.word	0x0001f8b4
   11d24:	.word	0x0001f88c
   11d28:	.word	0x00004750
   11d2c:	.word	0x0000015a
   11d30:	.word	0x00000159
   11d34:	.word	0x0000015b
   11d38:	.word	0x0000015e
   11d3c:	.word	0x0000015d
   11d40:	.word	0x00000157
   11d44:	.word	0x00000156
   11d48:	.word	0x00000155
   11d4c:	.word	0x00000146
   11d50:	.word	0x00000145
   11d54:	.word	0x00000143
   11d58:	.word	0x00000125
   11d5c:	.word	0x0000013e
   11d60:	.word	0x0000016b
   11d64:	.word	0x00000122
   11d68:	.word	0x00000121
   11d6c:	.word	0x0000010e
   11d70:	.word	0x0000010b
   11d74:	.word	0x0000010a
   11d78:	.word	0x00000132
   11d7c:	.word	0x00000131
   11d80:	.word	0x0000012f
   11d84:	.word	0x0000012e
   11d88:	.word	0x0000012d
   11d8c:	.word	0x00000105
   11d90:	.word	0x0000010d
   11d94:	.word	0x00000109
   11d98:	.word	0x00000107
   11d9c:	.word	0x00000106
   11da0:	.word	0x00000153
   11da4:	.word	0x00000152
   11da8:	.word	0x00000149
   11dac:	.word	0x00000151
   11db0:	.word	0x0000014f
   11db4:	.word	0x0000014e
   11db8:	.word	0x0000014d
   11dbc:	.word	0x0000014b
   11dc0:	.word	0x0000014a
   11dc4:	.word	0x00000147
   11dc8:	.word	0x0000011f
   11dcc:	.word	0x0000011e
   11dd0:	.word	0x0000011d
   11dd4:	.word	0x0000011b
   11dd8:	.word	0x0000011a
   11ddc:	.word	0x00000142
   11de0:	.word	0x0000e414
   11de4:	.word	0x000000f4
   11de8:	.word	0x0000013a
   11dec:	.word	0x00000139
   11df0:	.word	0x00000136
   11df4:	.word	0x00000135
   11df8:	.word	0x0001f580
   11dfc:	.word	0x0000016a
   11e00:	.word	0x00000169
   11e04:	.word	0x0000013b
   11e08:	.word	0x0000013d
   11e0c:	.word	0x00000123
   11e10:	.word	0x00000167
   11e14:	.word	0x00000166
   11e18:	.word	0x00000165
   11e1c:	.word	0x0000012b
   11e20:	.word	0x0000012a
   11e24:	.word	0x00000129
   11e28:	.word	0x00000127
   11e2c:	.word	0x00000126
   11e30:	.word	0x0000015f
   11e34:	.word	0x00000162
   11e38:	.word	0x00000161
   11e3c:	.word	0x0000df48
   11e40:	.word	0x0000df1c
   11e44:	.word	0x00000137
   11e48:	.word	0x0001f040
   11e4c:	.word	0x00003ef4
   11e50:	.word	0x0001f004
   11e54:	.word	0x00000141
   11e58:	.word	0x0000013f
   11e5c:	.word	0x00000163
   11e60:	.word	0x00000119
   11e64:	.word	0x00000117
   11e68:	.word	0x00000116
   11e6c:	.word	0x00000115
   11e70:	.word	0x00000113
   11e74:	.word	0x00000112
   11e78:	.word	0x00000111
   11e7c:	.word	0x0000010f
   11e80:	.word	0x00000133
   11e84:	.word	0x00000103
   11e88:	.word	0x00000102
   11e8c:	.word	0x0000ddf8
   11e90:	.word	0x0000dcd4
   11e94:	.word	0x0001eee8
   11e98:	.word	0x0001eed4
   11e9c:	.word	0x0001eec0
   11ea0:	.word	0x0001ec18
   11ea4:	.word	0x0000d9c4
   11ea8:	.word	0x0000d980
   11eac:	.word	0x00003a10
   11eb0:	.word	0x000039c8
   11eb4:	.word	0x00000599
   11eb8:	.word	0x0001ea94
   11ebc:	.word	0x0001ea4c
   11ec0:	.word	0x0001e9dc
   11ec4:	.word	0x0001e9b8
   11ec8:	.word	0x0000d704
   11ecc:	.word	0x0000d63c
   11ed0:	sub	r6, r4, r1
   11ed4:	sub	r5, r6, #1
   11ed8:	cmp	r5, #0
   11edc:	ble	11efc <sfbpf_lex+0x1228>
   11ee0:	sub	r0, r0, #1
   11ee4:	add	ip, r1, r5
   11ee8:	ldrb	lr, [r1], #1
   11eec:	cmp	ip, r1
   11ef0:	strb	lr, [r0, #1]!
   11ef4:	bne	11ee8 <sfbpf_lex+0x1214>
   11ef8:	ldr	r8, [r2]
   11efc:	ldr	r1, [r8, #44]	; 0x2c
   11f00:	cmp	r1, #2
   11f04:	beq	1217c <sfbpf_lex+0x14a8>
   11f08:	ldr	r1, [r8, #12]
   11f0c:	sub	r1, r1, r5
   11f10:	sub	r1, r1, #1
   11f14:	cmp	r1, #0
   11f18:	bgt	120d0 <sfbpf_lex+0x13fc>
   11f1c:	ldr	r1, [pc, #-132]	; 11ea0 <sfbpf_lex+0x11cc>
   11f20:	str	r9, [sp, #72]	; 0x48
   11f24:	add	r1, pc, r1
   11f28:	str	r7, [sp, #76]	; 0x4c
   11f2c:	str	r1, [sp, #68]	; 0x44
   11f30:	mov	r7, r6
   11f34:	mov	r9, r3
   11f38:	mov	r6, r5
   11f3c:	mov	r5, r2
   11f40:	b	11fa0 <sfbpf_lex+0x12cc>
   11f44:	ldr	ip, [r8, #12]
   11f48:	cmp	ip, #0
   11f4c:	lsl	r1, ip, #1
   11f50:	strgt	r1, [r8, #12]
   11f54:	bgt	11f68 <sfbpf_lex+0x1294>
   11f58:	add	r1, ip, #7
   11f5c:	movge	r1, ip
   11f60:	add	r1, ip, r1, asr #3
   11f64:	str	r1, [r8, #12]
   11f68:	add	r1, r1, #2
   11f6c:	bl	dec <realloc@plt>
   11f70:	cmp	r0, #0
   11f74:	str	r0, [r8, #4]
   11f78:	beq	11fb8 <sfbpf_lex+0x12e4>
   11f7c:	ldr	r8, [r5]
   11f80:	ldr	r3, [sp, #68]	; 0x44
   11f84:	add	r4, r0, r4
   11f88:	ldr	r1, [r8, #12]
   11f8c:	str	r4, [r3, #4]
   11f90:	sub	r1, r1, r6
   11f94:	sub	r1, r1, #1
   11f98:	cmp	r1, #0
   11f9c:	bgt	120bc <sfbpf_lex+0x13e8>
   11fa0:	ldr	ip, [r8, #20]
   11fa4:	ldr	r0, [r8, #4]
   11fa8:	cmp	ip, #0
   11fac:	sub	r4, r4, r0
   11fb0:	bne	11f44 <sfbpf_lex+0x1270>
   11fb4:	str	ip, [r8, #4]
   11fb8:	ldr	r0, [pc, #-284]	; 11ea4 <sfbpf_lex+0x11d0>
   11fbc:	add	r0, pc, r0
   11fc0:	bl	10870 <yy_fatal_error>
   11fc4:	ldr	r0, [pc, #-292]	; 11ea8 <sfbpf_lex+0x11d4>
   11fc8:	add	r0, pc, r0
   11fcc:	bl	10870 <yy_fatal_error>
   11fd0:	ldr	r3, [sp, #24]
   11fd4:	mov	r4, ip
   11fd8:	ldr	r5, [r3]
   11fdc:	ldr	r3, [sp, #64]	; 0x40
   11fe0:	add	r5, r5, r3
   11fe4:	str	r5, [ip, #4]
   11fe8:	bl	f30 <yy_get_previous_state>
   11fec:	ldr	r3, [pc, #-328]	; 11eac <sfbpf_lex+0x11d8>
   11ff0:	ldr	lr, [sp, #52]	; 0x34
   11ff4:	add	r3, pc, r3
   11ff8:	add	r3, r3, #256	; 0x100
   11ffc:	lsl	r1, r0, #1
   12000:	ldrsh	r3, [r3, r1]
   12004:	cmp	r3, #0
   12008:	movne	r2, r4
   1200c:	strne	r0, [r2, #8]
   12010:	strne	r5, [r2, #12]
   12014:	ldr	r2, [sp, #60]	; 0x3c
   12018:	sub	ip, r2, #1216	; 0x4c0
   1201c:	ldrsh	r2, [ip, r1]
   12020:	add	r2, r2, #1
   12024:	lsl	r2, r2, #1
   12028:	ldrsh	lr, [lr, r2]
   1202c:	cmp	r0, lr
   12030:	beq	12070 <sfbpf_lex+0x139c>
   12034:	ldr	r2, [pc, #-396]	; 11eb0 <sfbpf_lex+0x11dc>
   12038:	add	lr, ip, #3776	; 0xec0
   1203c:	add	r2, pc, r2
   12040:	add	r2, r2, #3120	; 0xc30
   12044:	mov	r0, ip
   12048:	add	lr, lr, #12
   1204c:	add	ip, r2, #4
   12050:	ldrsh	r4, [ip, r1]
   12054:	lsl	r1, r4, #1
   12058:	ldrsh	r2, [r0, r1]
   1205c:	add	r2, r2, #1
   12060:	lsl	r2, r2, #1
   12064:	ldrsh	r6, [lr, r2]
   12068:	cmp	r4, r6
   1206c:	bne	12050 <sfbpf_lex+0x137c>
   12070:	ldr	r1, [sp, #56]	; 0x38
   12074:	ldrsh	r0, [r1, r2]
   12078:	ldr	r2, [pc, #-460]	; 11eb4 <sfbpf_lex+0x11e0>
   1207c:	cmp	r0, r2
   12080:	beq	12254 <sfbpf_lex+0x1580>
   12084:	ldr	r2, [sp, #24]
   12088:	cmp	r0, #0
   1208c:	ldr	r2, [r2]
   12090:	str	r2, [sp, #28]
   12094:	beq	112d4 <sfbpf_lex+0x600>
   12098:	ldr	r3, [pc, #-488]	; 11eb8 <sfbpf_lex+0x11e4>
   1209c:	ldr	r8, [sp, #8]
   120a0:	ldr	sl, [sp, #12]
   120a4:	ldr	r7, [sp, #16]
   120a8:	add	r3, pc, r3
   120ac:	add	fp, r5, #1
   120b0:	str	fp, [r3, #4]
   120b4:	ldrb	r1, [fp]
   120b8:	b	10d8c <sfbpf_lex+0xb8>
   120bc:	mov	r5, r6
   120c0:	mov	r3, r9
   120c4:	mov	r6, r7
   120c8:	ldr	r9, [sp, #72]	; 0x48
   120cc:	ldr	r7, [sp, #76]	; 0x4c
   120d0:	ldr	r8, [r8, #24]
   120d4:	cmp	r1, #8192	; 0x2000
   120d8:	movlt	r4, r1
   120dc:	movge	r4, #8192	; 0x2000
   120e0:	cmp	r8, #0
   120e4:	beq	122e0 <sfbpf_lex+0x160c>
   120e8:	ldr	r8, [pc, #-564]	; 11ebc <sfbpf_lex+0x11e8>
   120ec:	mov	sl, #0
   120f0:	add	r8, pc, r8
   120f4:	b	1212c <sfbpf_lex+0x1458>
   120f8:	ldr	r1, [r8, #24]
   120fc:	ldr	r2, [r8, #16]
   12100:	cmp	r0, #10
   12104:	add	r3, r2, r1, lsl #2
   12108:	ldr	r2, [r2, r1, lsl #2]
   1210c:	ldr	r2, [r2, #4]
   12110:	beq	122d0 <sfbpf_lex+0x15fc>
   12114:	add	r2, r2, r6
   12118:	add	r2, r2, sl
   1211c:	add	sl, sl, #1
   12120:	cmp	r4, sl
   12124:	strb	r0, [r2, #-1]
   12128:	ble	12158 <sfbpf_lex+0x1484>
   1212c:	ldr	r0, [r8, #36]	; 0x24
   12130:	bl	f24 <getc@plt>
   12134:	cmn	r0, #1
   12138:	bne	120f8 <sfbpf_lex+0x1424>
   1213c:	ldr	r0, [r8, #36]	; 0x24
   12140:	bl	dbc <ferror@plt>
   12144:	cmp	r0, #0
   12148:	bne	1236c <sfbpf_lex+0x1698>
   1214c:	ldr	r2, [r8, #24]
   12150:	ldr	r3, [r8, #16]
   12154:	add	r3, r3, r2, lsl #2
   12158:	ldr	r2, [pc, #-672]	; 11ec0 <sfbpf_lex+0x11ec>
   1215c:	ldr	r1, [r3]
   12160:	add	r2, pc, r2
   12164:	cmp	sl, #0
   12168:	str	sl, [r2, #32]
   1216c:	str	sl, [r1, #16]
   12170:	movne	r8, #0
   12174:	bne	121bc <sfbpf_lex+0x14e8>
   12178:	b	12190 <sfbpf_lex+0x14bc>
   1217c:	ldr	r3, [pc, #-704]	; 11ec4 <sfbpf_lex+0x11f0>
   12180:	mov	r2, #0
   12184:	add	r3, pc, r3
   12188:	str	r2, [r8, #16]
   1218c:	str	r2, [r3, #32]
   12190:	cmp	r5, #0
   12194:	beq	122a0 <sfbpf_lex+0x15cc>
   12198:	ldr	ip, [sp, #44]	; 0x2c
   1219c:	mov	r2, #2
   121a0:	mov	r8, r2
   121a4:	ldr	r0, [ip, #24]
   121a8:	ldr	r1, [ip, #16]
   121ac:	ldr	sl, [ip, #32]
   121b0:	add	r3, r1, r0, lsl r2
   121b4:	ldr	r1, [r1, r0, lsl #2]
   121b8:	str	r2, [r1, #44]	; 0x2c
   121bc:	ldr	r4, [r3]
   121c0:	add	r5, r5, sl
   121c4:	ldr	r2, [r4, #12]
   121c8:	cmp	r5, r2
   121cc:	bgt	12264 <sfbpf_lex+0x1590>
   121d0:	ldr	r2, [r4, #4]
   121d4:	mov	r1, #0
   121d8:	ldr	r0, [sp, #40]	; 0x28
   121dc:	strb	r1, [r2, r5]
   121e0:	ldr	r2, [r3]
   121e4:	cmp	r8, #1
   121e8:	str	r5, [r0, #32]
   121ec:	ldr	r2, [r2, #4]
   121f0:	add	r2, r2, r5
   121f4:	strb	r1, [r2, #1]
   121f8:	ldr	r2, [r3]
   121fc:	ldr	r1, [sp, #24]
   12200:	ldr	r2, [r2, #4]
   12204:	str	r2, [r1]
   12208:	beq	11c74 <sfbpf_lex+0xfa0>
   1220c:	cmp	r8, #2
   12210:	mov	r6, r3
   12214:	ldreq	r3, [r6]
   12218:	ldreq	r3, [r3, #4]
   1221c:	addeq	r5, r3, r5
   12220:	beq	11af8 <sfbpf_lex+0xe24>
   12224:	ldr	r3, [sp, #64]	; 0x40
   12228:	ldr	r8, [sp, #8]
   1222c:	add	fp, r2, r3
   12230:	ldr	r3, [sp, #40]	; 0x28
   12234:	ldr	sl, [sp, #12]
   12238:	ldr	r7, [sp, #16]
   1223c:	str	fp, [r3, #4]
   12240:	bl	f30 <yy_get_previous_state>
   12244:	ldr	r3, [sp, #24]
   12248:	ldr	r3, [r3]
   1224c:	str	r3, [sp, #28]
   12250:	b	120b4 <sfbpf_lex+0x13e0>
   12254:	ldr	r2, [sp, #24]
   12258:	ldr	r2, [r2]
   1225c:	str	r2, [sp, #28]
   12260:	b	112d4 <sfbpf_lex+0x600>
   12264:	add	sl, r5, sl, asr #1
   12268:	mov	r1, sl
   1226c:	ldr	r0, [r4, #4]
   12270:	str	r3, [sp, #68]	; 0x44
   12274:	bl	dec <realloc@plt>
   12278:	ldr	r3, [sp, #68]	; 0x44
   1227c:	str	r0, [r4, #4]
   12280:	ldr	r2, [r3]
   12284:	ldr	r1, [r2, #4]
   12288:	cmp	r1, #0
   1228c:	beq	122c4 <sfbpf_lex+0x15f0>
   12290:	sub	sl, sl, #2
   12294:	str	sl, [r2, #12]
   12298:	ldr	r4, [r3]
   1229c:	b	121d0 <sfbpf_lex+0x14fc>
   122a0:	ldr	r4, [sp, #48]	; 0x30
   122a4:	mov	r8, #1
   122a8:	ldr	r0, [r4, #36]	; 0x24
   122ac:	bl	10c0c <sfbpf_restart>
   122b0:	ldr	r2, [r4, #24]
   122b4:	ldr	r3, [r4, #16]
   122b8:	ldr	sl, [r4, #32]
   122bc:	add	r3, r3, r2, lsl #2
   122c0:	b	121bc <sfbpf_lex+0x14e8>
   122c4:	ldr	r0, [pc, #-1028]	; 11ec8 <sfbpf_lex+0x11f4>
   122c8:	add	r0, pc, r0
   122cc:	bl	10870 <yy_fatal_error>
   122d0:	add	r2, r2, r5
   122d4:	strb	r0, [r2, sl]
   122d8:	add	sl, sl, #1
   122dc:	b	12158 <sfbpf_lex+0x1484>
   122e0:	str	r3, [sp, #68]	; 0x44
   122e4:	bl	e70 <__errno_location@plt>
   122e8:	ldr	r3, [sp, #68]	; 0x44
   122ec:	mov	r6, r0
   122f0:	str	r8, [r0]
   122f4:	b	12328 <sfbpf_lex+0x1654>
   122f8:	ldr	r0, [r7, #36]	; 0x24
   122fc:	bl	dbc <ferror@plt>
   12300:	cmp	r0, #0
   12304:	beq	12378 <sfbpf_lex+0x16a4>
   12308:	ldr	r3, [r6]
   1230c:	cmp	r3, #4
   12310:	bne	1236c <sfbpf_lex+0x1698>
   12314:	str	sl, [r6]
   12318:	ldr	r0, [r7, #36]	; 0x24
   1231c:	bl	ec4 <clearerr@plt>
   12320:	ldr	sl, [r7, #16]
   12324:	ldr	r3, [r7, #24]
   12328:	ldr	r1, [sl, r3, lsl #2]
   1232c:	mov	r2, r4
   12330:	ldr	r3, [r7, #36]	; 0x24
   12334:	ldr	r0, [r1, #4]
   12338:	mov	r1, #1
   1233c:	add	r0, r0, r5
   12340:	bl	e04 <fread@plt>
   12344:	cmp	r0, #0
   12348:	mov	sl, r0
   1234c:	str	r0, [r7, #32]
   12350:	beq	122f8 <sfbpf_lex+0x1624>
   12354:	ldr	r1, [r7, #24]
   12358:	ldr	r2, [r7, #16]
   1235c:	add	r3, r2, r1, lsl #2
   12360:	ldr	r2, [r2, r1, lsl #2]
   12364:	str	r0, [r2, #16]
   12368:	b	121bc <sfbpf_lex+0x14e8>
   1236c:	ldr	r0, [pc, #-1192]	; 11ecc <sfbpf_lex+0x11f8>
   12370:	add	r0, pc, r0
   12374:	bl	10870 <yy_fatal_error>
   12378:	ldr	r2, [r7, #24]
   1237c:	ldr	r3, [r7, #16]
   12380:	ldr	r3, [r3, r2, lsl #2]
   12384:	str	r0, [r3, #16]
   12388:	b	12190 <sfbpf_lex+0x14bc>

0001238c <sfbpf_push_buffer_state>:
   1238c:	push	{r4, r5, r6, r7, r8, lr}
   12390:	subs	r4, r0, #0
   12394:	ldr	r5, [pc, #184]	; 12454 <sfbpf_push_buffer_state+0xc8>
   12398:	add	r5, pc, r5
   1239c:	popeq	{r4, r5, r6, r7, r8, pc}
   123a0:	bl	108ac <sfbpf_ensure_buffer_stack>
   123a4:	ldr	r1, [pc, #172]	; 12458 <sfbpf_push_buffer_state+0xcc>
   123a8:	add	r1, pc, r1
   123ac:	ldr	r2, [r1, #16]
   123b0:	cmp	r2, #0
   123b4:	beq	12448 <sfbpf_push_buffer_state+0xbc>
   123b8:	ldr	r3, [r1, #24]
   123bc:	ldr	r0, [r2, r3, lsl #2]
   123c0:	lsl	ip, r3, #2
   123c4:	cmp	r0, #0
   123c8:	add	r0, r2, ip
   123cc:	beq	12408 <sfbpf_push_buffer_state+0x7c>
   123d0:	ldr	lr, [r1, #4]
   123d4:	ldrb	r7, [r1, #28]
   123d8:	ldr	r6, [r1, #32]
   123dc:	strb	r7, [lr]
   123e0:	ldr	r7, [r2, r3, lsl #2]
   123e4:	str	lr, [r7, #8]
   123e8:	ldr	lr, [r2, r3, lsl #2]
   123ec:	str	r6, [lr, #16]
   123f0:	ldr	lr, [r2, r3, lsl #2]
   123f4:	cmp	lr, #0
   123f8:	addne	r0, ip, #4
   123fc:	addne	r0, r2, r0
   12400:	addne	r3, r3, #1
   12404:	strne	r3, [r1, #24]
   12408:	ldr	r3, [pc, #76]	; 1245c <sfbpf_push_buffer_state+0xd0>
   1240c:	ldr	r1, [pc, #76]	; 12460 <sfbpf_push_buffer_state+0xd4>
   12410:	str	r4, [r0]
   12414:	add	r3, pc, r3
   12418:	ldr	r2, [r4, #8]
   1241c:	ldr	ip, [r4, #16]
   12420:	str	r2, [r3, #4]
   12424:	str	ip, [r3, #32]
   12428:	ldr	r1, [r5, r1]
   1242c:	str	r2, [r1]
   12430:	ldr	r1, [r0]
   12434:	ldr	r1, [r1]
   12438:	str	r1, [r3, #36]	; 0x24
   1243c:	ldrb	r2, [r2]
   12440:	strb	r2, [r3, #28]
   12444:	pop	{r4, r5, r6, r7, r8, pc}
   12448:	ldr	r0, [r1, #24]
   1244c:	lsl	r0, r0, #2
   12450:	b	12408 <sfbpf_push_buffer_state+0x7c>
   12454:	.word	0x0001dc60
   12458:	.word	0x0001e794
   1245c:	.word	0x0001e728
   12460:	.word	0x000000dc

00012464 <sfbpf_pop_buffer_state>:
   12464:	push	{r4, r5, r6, r7, r8, lr}
   12468:	ldr	r4, [pc, #128]	; 124f0 <sfbpf_pop_buffer_state+0x8c>
   1246c:	ldr	r7, [pc, #128]	; 124f4 <sfbpf_pop_buffer_state+0x90>
   12470:	add	r4, pc, r4
   12474:	add	r7, pc, r7
   12478:	ldr	r6, [r4, #16]
   1247c:	cmp	r6, #0
   12480:	popeq	{r4, r5, r6, r7, r8, pc}
   12484:	ldr	r5, [r4, #24]
   12488:	ldr	r0, [r6, r5, lsl #2]
   1248c:	cmp	r0, #0
   12490:	popeq	{r4, r5, r6, r7, r8, pc}
   12494:	bl	10a18 <sfbpf__delete_buffer>
   12498:	cmp	r5, #0
   1249c:	mov	r3, #0
   124a0:	str	r3, [r6, r5, lsl #2]
   124a4:	popeq	{r4, r5, r6, r7, r8, pc}
   124a8:	sub	r5, r5, #1
   124ac:	str	r5, [r4, #24]
   124b0:	ldr	r3, [r6, r5, lsl #2]
   124b4:	cmp	r3, #0
   124b8:	popeq	{r4, r5, r6, r7, r8, pc}
   124bc:	ldr	r2, [pc, #52]	; 124f8 <sfbpf_pop_buffer_state+0x94>
   124c0:	ldr	r1, [r3, #16]
   124c4:	ldr	r3, [r3, #8]
   124c8:	str	r1, [r4, #32]
   124cc:	str	r3, [r4, #4]
   124d0:	ldr	r2, [r7, r2]
   124d4:	str	r3, [r2]
   124d8:	ldr	r2, [r6, r5, lsl #2]
   124dc:	ldr	r2, [r2]
   124e0:	str	r2, [r4, #36]	; 0x24
   124e4:	ldrb	r3, [r3]
   124e8:	strb	r3, [r4, #28]
   124ec:	pop	{r4, r5, r6, r7, r8, pc}
   124f0:	.word	0x0001e6cc
   124f4:	.word	0x0001db84
   124f8:	.word	0x000000dc

000124fc <sfbpf__scan_buffer>:
   124fc:	cmp	r1, #1
   12500:	bls	12584 <sfbpf__scan_buffer+0x88>
   12504:	push	{r4, r5, r6, r7, r8, lr}
   12508:	sub	r7, r1, #2
   1250c:	ldrb	r4, [r0, r7]
   12510:	cmp	r4, #0
   12514:	bne	1257c <sfbpf__scan_buffer+0x80>
   12518:	add	r1, r0, r1
   1251c:	ldrb	r6, [r1, #-1]
   12520:	cmp	r6, #0
   12524:	bne	12574 <sfbpf__scan_buffer+0x78>
   12528:	mov	r5, r0
   1252c:	mov	r0, #48	; 0x30
   12530:	bl	e1c <malloc@plt>
   12534:	subs	r4, r0, #0
   12538:	beq	1258c <sfbpf__scan_buffer+0x90>
   1253c:	mov	r3, #1
   12540:	str	r7, [r4, #12]
   12544:	str	r5, [r4, #4]
   12548:	str	r5, [r4, #8]
   1254c:	str	r6, [r4, #20]
   12550:	str	r6, [r4]
   12554:	str	r7, [r4, #16]
   12558:	str	r6, [r4, #24]
   1255c:	str	r6, [r4, #40]	; 0x28
   12560:	str	r6, [r4, #44]	; 0x2c
   12564:	str	r3, [r4, #28]
   12568:	bl	10950 <sfbpf__switch_to_buffer>
   1256c:	mov	r0, r4
   12570:	pop	{r4, r5, r6, r7, r8, pc}
   12574:	mov	r0, r4
   12578:	pop	{r4, r5, r6, r7, r8, pc}
   1257c:	mov	r0, #0
   12580:	pop	{r4, r5, r6, r7, r8, pc}
   12584:	mov	r0, #0
   12588:	bx	lr
   1258c:	ldr	r0, [pc, #4]	; 12598 <sfbpf__scan_buffer+0x9c>
   12590:	add	r0, pc, r0
   12594:	bl	10870 <yy_fatal_error>
   12598:	.word	0x0000d4a0

0001259c <sfbpf__scan_bytes>:
   1259c:	push	{r4, r5, r6, lr}
   125a0:	add	r6, r1, #2
   125a4:	mov	r4, r0
   125a8:	mov	r0, r6
   125ac:	mov	r5, r1
   125b0:	bl	e1c <malloc@plt>
   125b4:	subs	lr, r0, #0
   125b8:	beq	12610 <sfbpf__scan_bytes+0x74>
   125bc:	cmp	r5, #0
   125c0:	movgt	r0, r4
   125c4:	addgt	ip, r0, r5
   125c8:	subgt	r3, lr, #1
   125cc:	ble	125e0 <sfbpf__scan_bytes+0x44>
   125d0:	ldrb	r2, [r0], #1
   125d4:	cmp	r0, ip
   125d8:	strb	r2, [r3, #1]!
   125dc:	bne	125d0 <sfbpf__scan_bytes+0x34>
   125e0:	add	r2, lr, r5
   125e4:	mov	r3, #0
   125e8:	strb	r3, [r2, #1]
   125ec:	mov	r1, r6
   125f0:	strb	r3, [lr, r5]
   125f4:	mov	r0, lr
   125f8:	bl	124fc <sfbpf__scan_buffer>
   125fc:	subs	r3, r0, #0
   12600:	beq	1261c <sfbpf__scan_bytes+0x80>
   12604:	mov	r2, #1
   12608:	str	r2, [r3, #20]
   1260c:	pop	{r4, r5, r6, pc}
   12610:	ldr	r0, [pc, #16]	; 12628 <sfbpf__scan_bytes+0x8c>
   12614:	add	r0, pc, r0
   12618:	bl	10870 <yy_fatal_error>
   1261c:	ldr	r0, [pc, #8]	; 1262c <sfbpf__scan_bytes+0x90>
   12620:	add	r0, pc, r0
   12624:	bl	10870 <yy_fatal_error>
   12628:	.word	0x0000d448
   1262c:	.word	0x0000d468

00012630 <sfbpf__scan_string>:
   12630:	push	{r4, lr}
   12634:	mov	r4, r0
   12638:	bl	e4c <strlen@plt>
   1263c:	mov	r1, r0
   12640:	mov	r0, r4
   12644:	pop	{r4, lr}
   12648:	b	1259c <sfbpf__scan_bytes>

0001264c <sfbpf_get_debug>:
   1264c:	ldr	r3, [pc, #8]	; 1265c <sfbpf_get_debug+0x10>
   12650:	add	r3, pc, r3
   12654:	ldr	r0, [r3, #48]	; 0x30
   12658:	bx	lr
   1265c:	.word	0x0001e4ec

00012660 <sfbpf_set_debug>:
   12660:	ldr	r3, [pc, #8]	; 12670 <sfbpf_set_debug+0x10>
   12664:	add	r3, pc, r3
   12668:	str	r0, [r3, #48]	; 0x30
   1266c:	bx	lr
   12670:	.word	0x0001e4d8

00012674 <sfbpf_lex_destroy>:
   12674:	push	{r4, r5, r6, r7, r8, lr}
   12678:	ldr	r6, [pc, #128]	; 12700 <sfbpf_lex_destroy+0x8c>
   1267c:	add	r6, pc, r6
   12680:	ldr	r5, [r6, #16]
   12684:	cmp	r5, #0
   12688:	beq	126c4 <sfbpf_lex_destroy+0x50>
   1268c:	ldr	r3, [r6, #24]
   12690:	ldr	r0, [r5, r3, lsl #2]
   12694:	add	r4, r5, r3, lsl #2
   12698:	cmp	r0, #0
   1269c:	beq	126c4 <sfbpf_lex_destroy+0x50>
   126a0:	mov	r7, #0
   126a4:	bl	10a18 <sfbpf__delete_buffer>
   126a8:	str	r7, [r4]
   126ac:	bl	12464 <sfbpf_pop_buffer_state>
   126b0:	ldr	r3, [r6, #24]
   126b4:	ldr	r0, [r5, r3, lsl #2]
   126b8:	add	r4, r5, r3, lsl #2
   126bc:	cmp	r0, #0
   126c0:	bne	126a4 <sfbpf_lex_destroy+0x30>
   126c4:	mov	r0, r5
   126c8:	bl	da4 <free@plt>
   126cc:	ldr	r3, [pc, #48]	; 12704 <sfbpf_lex_destroy+0x90>
   126d0:	mov	r2, #0
   126d4:	add	r3, pc, r3
   126d8:	mov	r0, r2
   126dc:	str	r2, [r3, #16]
   126e0:	str	r2, [r3, #24]
   126e4:	str	r2, [r3, #20]
   126e8:	str	r2, [r3, #4]
   126ec:	str	r2, [r3, #40]	; 0x28
   126f0:	str	r2, [r3]
   126f4:	str	r2, [r3, #36]	; 0x24
   126f8:	str	r2, [r3, #44]	; 0x2c
   126fc:	pop	{r4, r5, r6, r7, r8, pc}
   12700:	.word	0x0001e4c0
   12704:	.word	0x0001e468

00012708 <sfbpf_alloc>:
   12708:	b	e1c <malloc@plt>

0001270c <sfbpf_realloc>:
   1270c:	b	dec <realloc@plt>

00012710 <sfbpf_free>:
   12710:	b	da4 <free@plt>

00012714 <sf_lex_init>:
   12714:	push	{r4, lr}
   12718:	mov	r4, r0
   1271c:	bl	e4c <strlen@plt>
   12720:	mov	r1, r0
   12724:	mov	r0, r4
   12728:	bl	1259c <sfbpf__scan_bytes>
   1272c:	ldr	r3, [pc, #8]	; 1273c <sf_lex_init+0x28>
   12730:	add	r3, pc, r3
   12734:	str	r0, [r3, #52]	; 0x34
   12738:	pop	{r4, pc}
   1273c:	.word	0x0001e40c

00012740 <sf_lex_cleanup>:
   12740:	ldr	r3, [pc, #40]	; 12770 <sf_lex_cleanup+0x30>
   12744:	push	{r4, lr}
   12748:	add	r3, pc, r3
   1274c:	ldr	r0, [r3, #52]	; 0x34
   12750:	cmp	r0, #0
   12754:	beq	1275c <sf_lex_cleanup+0x1c>
   12758:	bl	10a18 <sfbpf__delete_buffer>
   1275c:	ldr	r3, [pc, #16]	; 12774 <sf_lex_cleanup+0x34>
   12760:	mov	r2, #0
   12764:	add	r3, pc, r3
   12768:	str	r2, [r3, #52]	; 0x34
   1276c:	pop	{r4, pc}
   12770:	.word	0x0001e3f4
   12774:	.word	0x0001e3d8

00012778 <sfbpf_wrap>:
   12778:	mov	r0, #1
   1277c:	bx	lr

00012780 <__udivsi3>:
   12780:	subs	r2, r1, #1
   12784:	bxeq	lr
   12788:	bcc	12960 <__udivsi3+0x1e0>
   1278c:	cmp	r0, r1
   12790:	bls	12944 <__udivsi3+0x1c4>
   12794:	tst	r1, r2
   12798:	beq	12950 <__udivsi3+0x1d0>
   1279c:	clz	r3, r0
   127a0:	clz	r2, r1
   127a4:	sub	r3, r2, r3
   127a8:	rsbs	r3, r3, #31
   127ac:	addne	r3, r3, r3, lsl #1
   127b0:	mov	r2, #0
   127b4:	addne	pc, pc, r3, lsl #2
   127b8:	nop			; (mov r0, r0)
   127bc:	cmp	r0, r1, lsl #31
   127c0:	adc	r2, r2, r2
   127c4:	subcs	r0, r0, r1, lsl #31
   127c8:	cmp	r0, r1, lsl #30
   127cc:	adc	r2, r2, r2
   127d0:	subcs	r0, r0, r1, lsl #30
   127d4:	cmp	r0, r1, lsl #29
   127d8:	adc	r2, r2, r2
   127dc:	subcs	r0, r0, r1, lsl #29
   127e0:	cmp	r0, r1, lsl #28
   127e4:	adc	r2, r2, r2
   127e8:	subcs	r0, r0, r1, lsl #28
   127ec:	cmp	r0, r1, lsl #27
   127f0:	adc	r2, r2, r2
   127f4:	subcs	r0, r0, r1, lsl #27
   127f8:	cmp	r0, r1, lsl #26
   127fc:	adc	r2, r2, r2
   12800:	subcs	r0, r0, r1, lsl #26
   12804:	cmp	r0, r1, lsl #25
   12808:	adc	r2, r2, r2
   1280c:	subcs	r0, r0, r1, lsl #25
   12810:	cmp	r0, r1, lsl #24
   12814:	adc	r2, r2, r2
   12818:	subcs	r0, r0, r1, lsl #24
   1281c:	cmp	r0, r1, lsl #23
   12820:	adc	r2, r2, r2
   12824:	subcs	r0, r0, r1, lsl #23
   12828:	cmp	r0, r1, lsl #22
   1282c:	adc	r2, r2, r2
   12830:	subcs	r0, r0, r1, lsl #22
   12834:	cmp	r0, r1, lsl #21
   12838:	adc	r2, r2, r2
   1283c:	subcs	r0, r0, r1, lsl #21
   12840:	cmp	r0, r1, lsl #20
   12844:	adc	r2, r2, r2
   12848:	subcs	r0, r0, r1, lsl #20
   1284c:	cmp	r0, r1, lsl #19
   12850:	adc	r2, r2, r2
   12854:	subcs	r0, r0, r1, lsl #19
   12858:	cmp	r0, r1, lsl #18
   1285c:	adc	r2, r2, r2
   12860:	subcs	r0, r0, r1, lsl #18
   12864:	cmp	r0, r1, lsl #17
   12868:	adc	r2, r2, r2
   1286c:	subcs	r0, r0, r1, lsl #17
   12870:	cmp	r0, r1, lsl #16
   12874:	adc	r2, r2, r2
   12878:	subcs	r0, r0, r1, lsl #16
   1287c:	cmp	r0, r1, lsl #15
   12880:	adc	r2, r2, r2
   12884:	subcs	r0, r0, r1, lsl #15
   12888:	cmp	r0, r1, lsl #14
   1288c:	adc	r2, r2, r2
   12890:	subcs	r0, r0, r1, lsl #14
   12894:	cmp	r0, r1, lsl #13
   12898:	adc	r2, r2, r2
   1289c:	subcs	r0, r0, r1, lsl #13
   128a0:	cmp	r0, r1, lsl #12
   128a4:	adc	r2, r2, r2
   128a8:	subcs	r0, r0, r1, lsl #12
   128ac:	cmp	r0, r1, lsl #11
   128b0:	adc	r2, r2, r2
   128b4:	subcs	r0, r0, r1, lsl #11
   128b8:	cmp	r0, r1, lsl #10
   128bc:	adc	r2, r2, r2
   128c0:	subcs	r0, r0, r1, lsl #10
   128c4:	cmp	r0, r1, lsl #9
   128c8:	adc	r2, r2, r2
   128cc:	subcs	r0, r0, r1, lsl #9
   128d0:	cmp	r0, r1, lsl #8
   128d4:	adc	r2, r2, r2
   128d8:	subcs	r0, r0, r1, lsl #8
   128dc:	cmp	r0, r1, lsl #7
   128e0:	adc	r2, r2, r2
   128e4:	subcs	r0, r0, r1, lsl #7
   128e8:	cmp	r0, r1, lsl #6
   128ec:	adc	r2, r2, r2
   128f0:	subcs	r0, r0, r1, lsl #6
   128f4:	cmp	r0, r1, lsl #5
   128f8:	adc	r2, r2, r2
   128fc:	subcs	r0, r0, r1, lsl #5
   12900:	cmp	r0, r1, lsl #4
   12904:	adc	r2, r2, r2
   12908:	subcs	r0, r0, r1, lsl #4
   1290c:	cmp	r0, r1, lsl #3
   12910:	adc	r2, r2, r2
   12914:	subcs	r0, r0, r1, lsl #3
   12918:	cmp	r0, r1, lsl #2
   1291c:	adc	r2, r2, r2
   12920:	subcs	r0, r0, r1, lsl #2
   12924:	cmp	r0, r1, lsl #1
   12928:	adc	r2, r2, r2
   1292c:	subcs	r0, r0, r1, lsl #1
   12930:	cmp	r0, r1
   12934:	adc	r2, r2, r2
   12938:	subcs	r0, r0, r1
   1293c:	mov	r0, r2
   12940:	bx	lr
   12944:	moveq	r0, #1
   12948:	movne	r0, #0
   1294c:	bx	lr
   12950:	clz	r2, r1
   12954:	rsb	r2, r2, #31
   12958:	lsr	r0, r0, r2
   1295c:	bx	lr
   12960:	cmp	r0, #0
   12964:	mvnne	r0, #0
   12968:	b	1298c <__aeabi_idiv0>

0001296c <__aeabi_uidivmod>:
   1296c:	cmp	r1, #0
   12970:	beq	12960 <__udivsi3+0x1e0>
   12974:	push	{r0, r1, lr}
   12978:	bl	12780 <__udivsi3>
   1297c:	pop	{r1, r2, lr}
   12980:	mul	r3, r2, r0
   12984:	sub	r1, r1, r3
   12988:	bx	lr

0001298c <__aeabi_idiv0>:
   1298c:	push	{r1, lr}
   12990:	mov	r0, #8
   12994:	bl	d44 <raise@plt>
   12998:	pop	{r1, pc}

Disassembly of section .fini:

0001299c <_fini>:
   1299c:	push	{r3, lr}
   129a0:	pop	{r3, pc}
