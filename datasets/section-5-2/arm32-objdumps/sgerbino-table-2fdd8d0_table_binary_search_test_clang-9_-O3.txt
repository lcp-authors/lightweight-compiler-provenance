
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r6, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #90112	; 0x16000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #90112	; 0x16000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #90112	; 0x16000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #90112	; 0x16000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #90112	; 0x16000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #90112	; 0x16000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #90112	; 0x16000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #90112	; 0x16000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #90112	; 0x16000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #90112	; 0x16000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #90112	; 0x16000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #90112	; 0x16000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r8, r1, r8, asr sp
   1303c:	strdeq	r3, [r1], -r8
   13040:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r5, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r9, r2, r8, asr #32
   1308c:	andeq	r9, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r9, r2, r8, asr #32
   130c4:	andeq	r9, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r9, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	13350 <table_init@@Base>
   13118:	movw	r1, #36200	; 0x8d68
   1311c:	mov	r0, r5
   13120:	mov	r2, #0
   13124:	mov	r7, #0
   13128:	movt	r1, #1
   1312c:	bl	13f14 <table_add_column@@Base>
   13130:	movw	r1, #36202	; 0x8d6a
   13134:	mov	r6, r0
   13138:	mov	r0, r5
   1313c:	mov	r2, #16
   13140:	movt	r1, #1
   13144:	bl	13f14 <table_add_column@@Base>
   13148:	vldr	s18, [pc, #428]	; 132fc <main@@Base+0x204>
   1314c:	movw	sl, #39322	; 0x999a
   13150:	vmov.f32	s20, #80	; 0x3e800000  0.250
   13154:	mov	r8, r0
   13158:	mov	r4, #0
   1315c:	movt	sl, #6553	; 0x1999
   13160:	vmov.f32	s16, s18
   13164:	mov	r0, r5
   13168:	bl	17140 <table_add_row@@Base>
   1316c:	movw	r1, #52429	; 0xcccd
   13170:	uxtb	r0, r4
   13174:	mov	r2, r6
   13178:	movt	r1, #52428	; 0xcccc
   1317c:	mul	r0, r0, r1
   13180:	mov	r1, r4
   13184:	ror	r0, r0, #1
   13188:	cmp	r0, sl
   1318c:	mov	r0, #0
   13190:	movwcc	r0, #1
   13194:	cmp	r4, #0
   13198:	movwne	r1, #1
   1319c:	and	r9, r1, r0
   131a0:	mov	r0, r5
   131a4:	mov	r1, r4
   131a8:	add	r7, r7, r9
   131ac:	mov	r3, r7
   131b0:	bl	176ec <table_set_int@@Base>
   131b4:	cmp	r9, #0
   131b8:	mov	r0, r5
   131bc:	mov	r1, r4
   131c0:	mov	r2, r8
   131c4:	vseleq.f32	s0, s16, s18
   131c8:	tst	r4, #1
   131cc:	vadd.f32	s2, s0, s20
   131d0:	vseleq.f32	s2, s2, s0
   131d4:	cmp	r4, #0
   131d8:	vseleq.f32	s16, s0, s2
   131dc:	vmov.f32	s0, s16
   131e0:	bl	17f0c <table_set_float@@Base>
   131e4:	add	r4, r4, #1
   131e8:	cmp	r4, #100	; 0x64
   131ec:	bne	13164 <main@@Base+0x6c>
   131f0:	add	r4, sp, #8
   131f4:	mov	r1, r6
   131f8:	mov	r2, #4
   131fc:	mov	r3, #0
   13200:	mov	r9, #0
   13204:	mov	r0, r4
   13208:	bl	16368 <table_sorted_find_int@@Base>
   1320c:	mov	r7, r0
   13210:	mov	r0, r4
   13214:	mov	r1, r6
   13218:	mov	r2, #4
   1321c:	mov	r3, #1
   13220:	bl	16368 <table_sorted_find_int@@Base>
   13224:	mov	r6, r0
   13228:	cmp	r7, #40	; 0x28
   1322c:	beq	13244 <main@@Base+0x14c>
   13230:	movw	r0, #36204	; 0x8d6c
   13234:	mov	r1, r7
   13238:	movt	r0, #1
   1323c:	bl	12f84 <printf@plt>
   13240:	mvn	r9, #0
   13244:	cmp	r6, #49	; 0x31
   13248:	beq	13260 <main@@Base+0x168>
   1324c:	movw	r0, #36260	; 0x8da4
   13250:	mov	r1, r6
   13254:	movt	r0, #1
   13258:	bl	12f84 <printf@plt>
   1325c:	mvn	r9, #0
   13260:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13264:	add	r4, sp, #8
   13268:	mov	r1, r8
   1326c:	mov	r2, #0
   13270:	mov	r3, r7
   13274:	str	r6, [sp]
   13278:	mov	r0, r4
   1327c:	vmov.f32	s0, s16
   13280:	bl	16d5c <table_sorted_subset_find_float@@Base>
   13284:	vmov.f32	s0, s16
   13288:	mov	r5, r0
   1328c:	mov	r0, r4
   13290:	mov	r1, r8
   13294:	mov	r2, #1
   13298:	mov	r3, r7
   1329c:	str	r6, [sp]
   132a0:	bl	16d5c <table_sorted_subset_find_float@@Base>
   132a4:	mov	r4, r0
   132a8:	cmp	r5, #42	; 0x2a
   132ac:	beq	132c4 <main@@Base+0x1cc>
   132b0:	movw	r0, #36315	; 0x8ddb
   132b4:	mov	r1, r5
   132b8:	movt	r0, #1
   132bc:	bl	12f84 <printf@plt>
   132c0:	mvn	r9, #0
   132c4:	cmp	r4, #43	; 0x2b
   132c8:	beq	132e0 <main@@Base+0x1e8>
   132cc:	movw	r0, #36377	; 0x8e19
   132d0:	mov	r1, r4
   132d4:	movt	r0, #1
   132d8:	bl	12f84 <printf@plt>
   132dc:	mvn	r9, #0
   132e0:	add	r0, sp, #8
   132e4:	bl	133ac <table_destroy@@Base>
   132e8:	mov	r0, r9
   132ec:	sub	sp, fp, #56	; 0x38
   132f0:	vpop	{d8-d10}
   132f4:	add	sp, sp, #4
   132f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132fc:	andeq	r0, r0, r0

00013300 <table_new@@Base>:
   13300:	push	{fp, lr}
   13304:	mov	fp, sp
   13308:	mov	r0, #56	; 0x38
   1330c:	bl	12fb4 <malloc@plt>
   13310:	vmov.i32	q8, #0	; 0x00000000
   13314:	mov	r1, #0
   13318:	mov	r2, #10
   1331c:	mov	r3, #20
   13320:	str	r1, [r0]
   13324:	stmib	r0, {r1, r2}
   13328:	str	r1, [r0, #12]
   1332c:	str	r1, [r0, #16]
   13330:	str	r1, [r0, #20]
   13334:	str	r3, [r0, #24]
   13338:	str	r1, [r0, #28]
   1333c:	str	r2, [r0, #48]	; 0x30
   13340:	str	r1, [r0, #52]	; 0x34
   13344:	add	r1, r0, #32
   13348:	vst1.32	{d16-d17}, [r1]
   1334c:	pop	{fp, pc}

00013350 <table_init@@Base>:
   13350:	vmov.i32	q8, #0	; 0x00000000
   13354:	mov	r1, #0
   13358:	mov	r2, #10
   1335c:	mov	r3, #20
   13360:	str	r1, [r0]
   13364:	stmib	r0, {r1, r2}
   13368:	str	r1, [r0, #12]
   1336c:	str	r1, [r0, #16]
   13370:	str	r1, [r0, #20]
   13374:	str	r3, [r0, #24]
   13378:	str	r1, [r0, #28]
   1337c:	str	r2, [r0, #48]	; 0x30
   13380:	str	r1, [r0, #52]	; 0x34
   13384:	add	r0, r0, #32
   13388:	vst1.32	{d16-d17}, [r0]
   1338c:	bx	lr

00013390 <table_delete@@Base>:
   13390:	push	{r4, sl, fp, lr}
   13394:	add	fp, sp, #8
   13398:	mov	r4, r0
   1339c:	bl	133ac <table_destroy@@Base>
   133a0:	mov	r0, r4
   133a4:	pop	{r4, sl, fp, lr}
   133a8:	b	12f90 <free@plt>

000133ac <table_destroy@@Base>:
   133ac:	cmp	r0, #0
   133b0:	bxeq	lr
   133b4:	push	{r4, r5, r6, sl, fp, lr}
   133b8:	add	fp, sp, #16
   133bc:	mvn	r1, #0
   133c0:	mvn	r2, #0
   133c4:	mov	r3, #64	; 0x40
   133c8:	mov	r4, r0
   133cc:	bl	13d6c <table_notify@@Base>
   133d0:	mov	r0, r4
   133d4:	bl	17138 <table_get_row_length@@Base>
   133d8:	cmp	r0, #1
   133dc:	blt	13400 <table_destroy@@Base+0x54>
   133e0:	mov	r5, r0
   133e4:	mov	r6, #0
   133e8:	mov	r0, r4
   133ec:	mov	r1, r6
   133f0:	bl	170dc <table_row_destroy@@Base>
   133f4:	add	r6, r6, #1
   133f8:	cmp	r5, r6
   133fc:	bne	133e8 <table_destroy@@Base+0x3c>
   13400:	ldr	r0, [r4, #16]
   13404:	cmp	r0, #0
   13408:	beq	13410 <table_destroy@@Base+0x64>
   1340c:	bl	12f90 <free@plt>
   13410:	mov	r0, r4
   13414:	bl	13e7c <table_get_column_length@@Base>
   13418:	cmp	r0, #1
   1341c:	blt	13440 <table_destroy@@Base+0x94>
   13420:	mov	r5, r0
   13424:	mov	r6, #0
   13428:	mov	r0, r4
   1342c:	mov	r1, r6
   13430:	bl	13e64 <table_column_destroy@@Base>
   13434:	add	r6, r6, #1
   13438:	cmp	r5, r6
   1343c:	bne	13428 <table_destroy@@Base+0x7c>
   13440:	ldr	r0, [r4]
   13444:	cmp	r0, #0
   13448:	beq	13450 <table_destroy@@Base+0xa4>
   1344c:	bl	12f90 <free@plt>
   13450:	ldr	r0, [r4, #36]	; 0x24
   13454:	cmp	r0, #0
   13458:	beq	13460 <table_destroy@@Base+0xb4>
   1345c:	bl	12f90 <free@plt>
   13460:	ldr	r0, [r4, #40]	; 0x28
   13464:	cmp	r0, #0
   13468:	beq	13470 <table_destroy@@Base+0xc4>
   1346c:	bl	12f90 <free@plt>
   13470:	ldr	r0, [r4, #44]	; 0x2c
   13474:	cmp	r0, #0
   13478:	pop	{r4, r5, r6, sl, fp, lr}
   1347c:	beq	13484 <table_destroy@@Base+0xd8>
   13480:	b	12f90 <free@plt>
   13484:	bx	lr

00013488 <table_dupe@@Base>:
   13488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1348c:	add	fp, sp, #28
   13490:	sub	sp, sp, #12
   13494:	mov	r4, r0
   13498:	bl	17138 <table_get_row_length@@Base>
   1349c:	mov	r8, r0
   134a0:	mov	r0, r4
   134a4:	bl	13e7c <table_get_column_length@@Base>
   134a8:	mov	r6, r0
   134ac:	mov	r0, #56	; 0x38
   134b0:	bl	12fb4 <malloc@plt>
   134b4:	vmov.i32	q8, #0	; 0x00000000
   134b8:	mov	sl, r0
   134bc:	mov	r5, #0
   134c0:	mov	r0, #10
   134c4:	mov	r1, #20
   134c8:	cmp	r6, #1
   134cc:	str	r5, [sl]
   134d0:	str	r5, [sl, #4]
   134d4:	str	r0, [sl, #8]
   134d8:	str	r5, [sl, #12]
   134dc:	str	r5, [sl, #16]
   134e0:	str	r5, [sl, #20]
   134e4:	str	r1, [sl, #24]
   134e8:	str	r5, [sl, #28]
   134ec:	str	r0, [sl, #48]	; 0x30
   134f0:	add	r0, sl, #32
   134f4:	str	r5, [sl, #52]	; 0x34
   134f8:	vst1.32	{d16-d17}, [r0]
   134fc:	blt	13538 <table_dupe@@Base+0xb0>
   13500:	mov	r0, r4
   13504:	mov	r1, r5
   13508:	bl	13ef0 <table_get_column_name@@Base>
   1350c:	mov	r7, r0
   13510:	mov	r0, r4
   13514:	mov	r1, r5
   13518:	bl	13f00 <table_get_column_data_type@@Base>
   1351c:	mov	r2, r0
   13520:	mov	r0, sl
   13524:	mov	r1, r7
   13528:	bl	13f14 <table_add_column@@Base>
   1352c:	add	r5, r5, #1
   13530:	cmp	r6, r5
   13534:	bne	13500 <table_dupe@@Base+0x78>
   13538:	cmp	r8, #1
   1353c:	blt	13acc <table_dupe@@Base+0x644>
   13540:	mov	r5, #0
   13544:	add	r9, sp, #8
   13548:	mov	r0, sl
   1354c:	bl	17140 <table_add_row@@Base>
   13550:	cmp	r6, #1
   13554:	bge	13574 <table_dupe@@Base+0xec>
   13558:	add	r5, r5, #1
   1355c:	cmp	r5, r8
   13560:	beq	13acc <table_dupe@@Base+0x644>
   13564:	mov	r0, sl
   13568:	bl	17140 <table_add_row@@Base>
   1356c:	cmp	r6, #1
   13570:	blt	13558 <table_dupe@@Base+0xd0>
   13574:	mov	r7, #0
   13578:	b	135b0 <table_dupe@@Base+0x128>
   1357c:	mov	r0, r4
   13580:	mov	r1, r5
   13584:	mov	r2, r7
   13588:	bl	17098 <table_get_ptr@@Base>
   1358c:	str	r0, [sp, #8]
   13590:	mov	r0, sl
   13594:	mov	r1, r5
   13598:	mov	r2, r7
   1359c:	mov	r3, r9
   135a0:	bl	18230 <table_set_ptr@@Base>
   135a4:	add	r7, r7, #1
   135a8:	cmp	r6, r7
   135ac:	beq	13558 <table_dupe@@Base+0xd0>
   135b0:	mov	r0, r4
   135b4:	mov	r1, r7
   135b8:	bl	13f00 <table_get_column_data_type@@Base>
   135bc:	cmp	r0, #23
   135c0:	bhi	135a4 <table_dupe@@Base+0x11c>
   135c4:	add	r1, pc, #0
   135c8:	ldr	pc, [r1, r0, lsl #2]
   135cc:	andeq	r3, r1, ip, lsr #12
   135d0:	andeq	r3, r1, r0, ror #12
   135d4:	muleq	r1, r4, r6
   135d8:	andeq	r3, r1, r8, asr #13
   135dc:	strdeq	r3, [r1], -ip
   135e0:	andeq	r3, r1, r0, lsr r7
   135e4:	andeq	r3, r1, r4, ror #14
   135e8:	muleq	r1, r8, r7
   135ec:	andeq	r3, r1, ip, asr #15
   135f0:	andeq	r3, r1, r0, lsl #16
   135f4:	andeq	r3, r1, r4, lsr r8
   135f8:	andeq	r3, r1, r8, ror #16
   135fc:	muleq	r1, ip, r8
   13600:	ldrdeq	r3, [r1], -r0
   13604:	andeq	r3, r1, r4, lsl #18
   13608:	andeq	r3, r1, r8, lsr r9
   1360c:	andeq	r3, r1, ip, ror #18
   13610:	muleq	r1, ip, r9
   13614:	andeq	r3, r1, ip, asr #19
   13618:	strdeq	r3, [r1], -ip
   1361c:	andeq	r3, r1, r0, lsr sl
   13620:	andeq	r3, r1, r4, ror #20
   13624:	muleq	r1, r8, sl
   13628:	andeq	r3, r1, ip, ror r5
   1362c:	mov	r0, r4
   13630:	mov	r1, r5
   13634:	mov	r2, r7
   13638:	bl	16e8c <table_get_int@@Base>
   1363c:	mov	r3, r0
   13640:	mov	r0, sl
   13644:	mov	r1, r5
   13648:	mov	r2, r7
   1364c:	bl	176ec <table_set_int@@Base>
   13650:	add	r7, r7, #1
   13654:	cmp	r6, r7
   13658:	bne	135b0 <table_dupe@@Base+0x128>
   1365c:	b	13558 <table_dupe@@Base+0xd0>
   13660:	mov	r0, r4
   13664:	mov	r1, r5
   13668:	mov	r2, r7
   1366c:	bl	16ea4 <table_get_uint@@Base>
   13670:	mov	r3, r0
   13674:	mov	r0, sl
   13678:	mov	r1, r5
   1367c:	mov	r2, r7
   13680:	bl	1776c <table_set_uint@@Base>
   13684:	add	r7, r7, #1
   13688:	cmp	r6, r7
   1368c:	bne	135b0 <table_dupe@@Base+0x128>
   13690:	b	13558 <table_dupe@@Base+0xd0>
   13694:	mov	r0, r4
   13698:	mov	r1, r5
   1369c:	mov	r2, r7
   136a0:	bl	16ebc <table_get_int8@@Base>
   136a4:	mov	r3, r0
   136a8:	mov	r0, sl
   136ac:	mov	r1, r5
   136b0:	mov	r2, r7
   136b4:	bl	177ec <table_set_int8@@Base>
   136b8:	add	r7, r7, #1
   136bc:	cmp	r6, r7
   136c0:	bne	135b0 <table_dupe@@Base+0x128>
   136c4:	b	13558 <table_dupe@@Base+0xd0>
   136c8:	mov	r0, r4
   136cc:	mov	r1, r5
   136d0:	mov	r2, r7
   136d4:	bl	16ed4 <table_get_uint8@@Base>
   136d8:	mov	r3, r0
   136dc:	mov	r0, sl
   136e0:	mov	r1, r5
   136e4:	mov	r2, r7
   136e8:	bl	1786c <table_set_uint8@@Base>
   136ec:	add	r7, r7, #1
   136f0:	cmp	r6, r7
   136f4:	bne	135b0 <table_dupe@@Base+0x128>
   136f8:	b	13558 <table_dupe@@Base+0xd0>
   136fc:	mov	r0, r4
   13700:	mov	r1, r5
   13704:	mov	r2, r7
   13708:	bl	16eec <table_get_int16@@Base>
   1370c:	mov	r3, r0
   13710:	mov	r0, sl
   13714:	mov	r1, r5
   13718:	mov	r2, r7
   1371c:	bl	178ec <table_set_int16@@Base>
   13720:	add	r7, r7, #1
   13724:	cmp	r6, r7
   13728:	bne	135b0 <table_dupe@@Base+0x128>
   1372c:	b	13558 <table_dupe@@Base+0xd0>
   13730:	mov	r0, r4
   13734:	mov	r1, r5
   13738:	mov	r2, r7
   1373c:	bl	16f04 <table_get_uint16@@Base>
   13740:	mov	r3, r0
   13744:	mov	r0, sl
   13748:	mov	r1, r5
   1374c:	mov	r2, r7
   13750:	bl	1796c <table_set_uint16@@Base>
   13754:	add	r7, r7, #1
   13758:	cmp	r6, r7
   1375c:	bne	135b0 <table_dupe@@Base+0x128>
   13760:	b	13558 <table_dupe@@Base+0xd0>
   13764:	mov	r0, r4
   13768:	mov	r1, r5
   1376c:	mov	r2, r7
   13770:	bl	16f1c <table_get_int32@@Base>
   13774:	mov	r3, r0
   13778:	mov	r0, sl
   1377c:	mov	r1, r5
   13780:	mov	r2, r7
   13784:	bl	179ec <table_set_int32@@Base>
   13788:	add	r7, r7, #1
   1378c:	cmp	r6, r7
   13790:	bne	135b0 <table_dupe@@Base+0x128>
   13794:	b	13558 <table_dupe@@Base+0xd0>
   13798:	mov	r0, r4
   1379c:	mov	r1, r5
   137a0:	mov	r2, r7
   137a4:	bl	16f34 <table_get_uint32@@Base>
   137a8:	mov	r3, r0
   137ac:	mov	r0, sl
   137b0:	mov	r1, r5
   137b4:	mov	r2, r7
   137b8:	bl	17a6c <table_set_uint32@@Base>
   137bc:	add	r7, r7, #1
   137c0:	cmp	r6, r7
   137c4:	bne	135b0 <table_dupe@@Base+0x128>
   137c8:	b	13558 <table_dupe@@Base+0xd0>
   137cc:	mov	r0, r4
   137d0:	mov	r1, r5
   137d4:	mov	r2, r7
   137d8:	bl	16f4c <table_get_int64@@Base>
   137dc:	stm	sp, {r0, r1}
   137e0:	mov	r0, sl
   137e4:	mov	r1, r5
   137e8:	mov	r2, r7
   137ec:	bl	17aec <table_set_int64@@Base>
   137f0:	add	r7, r7, #1
   137f4:	cmp	r6, r7
   137f8:	bne	135b0 <table_dupe@@Base+0x128>
   137fc:	b	13558 <table_dupe@@Base+0xd0>
   13800:	mov	r0, r4
   13804:	mov	r1, r5
   13808:	mov	r2, r7
   1380c:	bl	16f64 <table_get_uint64@@Base>
   13810:	stm	sp, {r0, r1}
   13814:	mov	r0, sl
   13818:	mov	r1, r5
   1381c:	mov	r2, r7
   13820:	bl	17b74 <table_set_uint64@@Base>
   13824:	add	r7, r7, #1
   13828:	cmp	r6, r7
   1382c:	bne	135b0 <table_dupe@@Base+0x128>
   13830:	b	13558 <table_dupe@@Base+0xd0>
   13834:	mov	r0, r4
   13838:	mov	r1, r5
   1383c:	mov	r2, r7
   13840:	bl	16f7c <table_get_short@@Base>
   13844:	mov	r3, r0
   13848:	mov	r0, sl
   1384c:	mov	r1, r5
   13850:	mov	r2, r7
   13854:	bl	17bfc <table_set_short@@Base>
   13858:	add	r7, r7, #1
   1385c:	cmp	r6, r7
   13860:	bne	135b0 <table_dupe@@Base+0x128>
   13864:	b	13558 <table_dupe@@Base+0xd0>
   13868:	mov	r0, r4
   1386c:	mov	r1, r5
   13870:	mov	r2, r7
   13874:	bl	16f94 <table_get_ushort@@Base>
   13878:	mov	r3, r0
   1387c:	mov	r0, sl
   13880:	mov	r1, r5
   13884:	mov	r2, r7
   13888:	bl	17c7c <table_set_ushort@@Base>
   1388c:	add	r7, r7, #1
   13890:	cmp	r6, r7
   13894:	bne	135b0 <table_dupe@@Base+0x128>
   13898:	b	13558 <table_dupe@@Base+0xd0>
   1389c:	mov	r0, r4
   138a0:	mov	r1, r5
   138a4:	mov	r2, r7
   138a8:	bl	16fac <table_get_long@@Base>
   138ac:	mov	r3, r0
   138b0:	mov	r0, sl
   138b4:	mov	r1, r5
   138b8:	mov	r2, r7
   138bc:	bl	17cfc <table_set_long@@Base>
   138c0:	add	r7, r7, #1
   138c4:	cmp	r6, r7
   138c8:	bne	135b0 <table_dupe@@Base+0x128>
   138cc:	b	13558 <table_dupe@@Base+0xd0>
   138d0:	mov	r0, r4
   138d4:	mov	r1, r5
   138d8:	mov	r2, r7
   138dc:	bl	16fc4 <table_get_ulong@@Base>
   138e0:	mov	r3, r0
   138e4:	mov	r0, sl
   138e8:	mov	r1, r5
   138ec:	mov	r2, r7
   138f0:	bl	17d7c <table_set_ulong@@Base>
   138f4:	add	r7, r7, #1
   138f8:	cmp	r6, r7
   138fc:	bne	135b0 <table_dupe@@Base+0x128>
   13900:	b	13558 <table_dupe@@Base+0xd0>
   13904:	mov	r0, r4
   13908:	mov	r1, r5
   1390c:	mov	r2, r7
   13910:	bl	16fdc <table_get_llong@@Base>
   13914:	stm	sp, {r0, r1}
   13918:	mov	r0, sl
   1391c:	mov	r1, r5
   13920:	mov	r2, r7
   13924:	bl	17dfc <table_set_llong@@Base>
   13928:	add	r7, r7, #1
   1392c:	cmp	r6, r7
   13930:	bne	135b0 <table_dupe@@Base+0x128>
   13934:	b	13558 <table_dupe@@Base+0xd0>
   13938:	mov	r0, r4
   1393c:	mov	r1, r5
   13940:	mov	r2, r7
   13944:	bl	16ff4 <table_get_ullong@@Base>
   13948:	stm	sp, {r0, r1}
   1394c:	mov	r0, sl
   13950:	mov	r1, r5
   13954:	mov	r2, r7
   13958:	bl	17e84 <table_set_ullong@@Base>
   1395c:	add	r7, r7, #1
   13960:	cmp	r6, r7
   13964:	bne	135b0 <table_dupe@@Base+0x128>
   13968:	b	13558 <table_dupe@@Base+0xd0>
   1396c:	mov	r0, r4
   13970:	mov	r1, r5
   13974:	mov	r2, r7
   13978:	bl	1700c <table_get_float@@Base>
   1397c:	mov	r0, sl
   13980:	mov	r1, r5
   13984:	mov	r2, r7
   13988:	bl	17f0c <table_set_float@@Base>
   1398c:	add	r7, r7, #1
   13990:	cmp	r6, r7
   13994:	bne	135b0 <table_dupe@@Base+0x128>
   13998:	b	13558 <table_dupe@@Base+0xd0>
   1399c:	mov	r0, r4
   139a0:	mov	r1, r5
   139a4:	mov	r2, r7
   139a8:	bl	17024 <table_get_double@@Base>
   139ac:	mov	r0, sl
   139b0:	mov	r1, r5
   139b4:	mov	r2, r7
   139b8:	bl	17f98 <table_set_double@@Base>
   139bc:	add	r7, r7, #1
   139c0:	cmp	r6, r7
   139c4:	bne	135b0 <table_dupe@@Base+0x128>
   139c8:	b	13558 <table_dupe@@Base+0xd0>
   139cc:	mov	r0, r4
   139d0:	mov	r1, r5
   139d4:	mov	r2, r7
   139d8:	bl	1703c <table_get_ldouble@@Base>
   139dc:	mov	r0, sl
   139e0:	mov	r1, r5
   139e4:	mov	r2, r7
   139e8:	bl	18020 <table_set_ldouble@@Base>
   139ec:	add	r7, r7, #1
   139f0:	cmp	r6, r7
   139f4:	bne	135b0 <table_dupe@@Base+0x128>
   139f8:	b	13558 <table_dupe@@Base+0xd0>
   139fc:	mov	r0, r4
   13a00:	mov	r1, r5
   13a04:	mov	r2, r7
   13a08:	bl	17054 <table_get_char@@Base>
   13a0c:	mov	r3, r0
   13a10:	mov	r0, sl
   13a14:	mov	r1, r5
   13a18:	mov	r2, r7
   13a1c:	bl	18130 <table_set_char@@Base>
   13a20:	add	r7, r7, #1
   13a24:	cmp	r6, r7
   13a28:	bne	135b0 <table_dupe@@Base+0x128>
   13a2c:	b	13558 <table_dupe@@Base+0xd0>
   13a30:	mov	r0, r4
   13a34:	mov	r1, r5
   13a38:	mov	r2, r7
   13a3c:	bl	1706c <table_get_uchar@@Base>
   13a40:	mov	r3, r0
   13a44:	mov	r0, sl
   13a48:	mov	r1, r5
   13a4c:	mov	r2, r7
   13a50:	bl	181b0 <table_set_uchar@@Base>
   13a54:	add	r7, r7, #1
   13a58:	cmp	r6, r7
   13a5c:	bne	135b0 <table_dupe@@Base+0x128>
   13a60:	b	13558 <table_dupe@@Base+0xd0>
   13a64:	mov	r0, r4
   13a68:	mov	r1, r5
   13a6c:	mov	r2, r7
   13a70:	bl	17084 <table_get_string@@Base>
   13a74:	mov	r3, r0
   13a78:	mov	r0, sl
   13a7c:	mov	r1, r5
   13a80:	mov	r2, r7
   13a84:	bl	180a8 <table_set_string@@Base>
   13a88:	add	r7, r7, #1
   13a8c:	cmp	r6, r7
   13a90:	bne	135b0 <table_dupe@@Base+0x128>
   13a94:	b	13558 <table_dupe@@Base+0xd0>
   13a98:	mov	r0, r4
   13a9c:	mov	r1, r5
   13aa0:	mov	r2, r7
   13aa4:	bl	16e74 <table_get_bool@@Base>
   13aa8:	mov	r3, r0
   13aac:	mov	r0, sl
   13ab0:	mov	r1, r5
   13ab4:	mov	r2, r7
   13ab8:	bl	1766c <table_set_bool@@Base>
   13abc:	add	r7, r7, #1
   13ac0:	cmp	r6, r7
   13ac4:	bne	135b0 <table_dupe@@Base+0x128>
   13ac8:	b	13558 <table_dupe@@Base+0xd0>
   13acc:	mov	r0, sl
   13ad0:	sub	sp, fp, #28
   13ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013ad8 <table_get_major_version@@Base>:
   13ad8:	mov	r0, #0
   13adc:	bx	lr

00013ae0 <table_get_minor_version@@Base>:
   13ae0:	mov	r0, #0
   13ae4:	bx	lr

00013ae8 <table_get_patch_version@@Base>:
   13ae8:	mov	r0, #0
   13aec:	bx	lr

00013af0 <table_get_version@@Base>:
   13af0:	movw	r0, #36201	; 0x8d69
   13af4:	movt	r0, #1
   13af8:	bx	lr

00013afc <table_get_callback_length@@Base>:
   13afc:	ldr	r0, [r0, #32]
   13b00:	bx	lr

00013b04 <table_register_callback@@Base>:
   13b04:	push	{r4, r5, r6, r7, fp, lr}
   13b08:	add	fp, sp, #16
   13b0c:	mov	r5, r0
   13b10:	ldr	r0, [r0, #32]
   13b14:	mov	r4, r3
   13b18:	mov	r6, r2
   13b1c:	mov	r7, r1
   13b20:	cmp	r0, #1
   13b24:	blt	13b80 <table_register_callback@@Base+0x7c>
   13b28:	ldr	r2, [r5, #36]	; 0x24
   13b2c:	mov	r1, #0
   13b30:	ldr	r3, [r2, r1, lsl #2]
   13b34:	cmp	r3, r7
   13b38:	beq	13b54 <table_register_callback@@Base+0x50>
   13b3c:	add	r1, r1, #1
   13b40:	cmp	r0, r1
   13b44:	beq	13b80 <table_register_callback@@Base+0x7c>
   13b48:	ldr	r3, [r2, r1, lsl #2]
   13b4c:	cmp	r3, r7
   13b50:	bne	13b3c <table_register_callback@@Base+0x38>
   13b54:	ldr	r3, [r5, #40]	; 0x28
   13b58:	ldr	r3, [r3, r1, lsl #2]
   13b5c:	cmp	r3, r6
   13b60:	bne	13b3c <table_register_callback@@Base+0x38>
   13b64:	cmp	r1, #0
   13b68:	beq	13b80 <table_register_callback@@Base+0x7c>
   13b6c:	ldr	r0, [r5, #44]	; 0x2c
   13b70:	ldr	r2, [r0, r1, lsl #2]
   13b74:	orr	r2, r2, r4
   13b78:	str	r2, [r0, r1, lsl #2]
   13b7c:	pop	{r4, r5, r6, r7, fp, pc}
   13b80:	ldr	r1, [r5, #48]	; 0x30
   13b84:	udiv	r2, r0, r1
   13b88:	mls	r2, r2, r1, r0
   13b8c:	cmp	r2, #0
   13b90:	bne	13bdc <table_register_callback@@Base+0xd8>
   13b94:	ldr	r2, [r5, #52]	; 0x34
   13b98:	ldr	r0, [r5, #36]	; 0x24
   13b9c:	add	r1, r2, r1
   13ba0:	str	r1, [r5, #52]	; 0x34
   13ba4:	lsl	r1, r1, #2
   13ba8:	bl	12f9c <realloc@plt>
   13bac:	str	r0, [r5, #36]	; 0x24
   13bb0:	ldr	r1, [r5, #52]	; 0x34
   13bb4:	ldr	r0, [r5, #40]	; 0x28
   13bb8:	lsl	r1, r1, #2
   13bbc:	bl	12f9c <realloc@plt>
   13bc0:	str	r0, [r5, #40]	; 0x28
   13bc4:	ldr	r1, [r5, #52]	; 0x34
   13bc8:	ldr	r0, [r5, #44]	; 0x2c
   13bcc:	lsl	r1, r1, #2
   13bd0:	bl	12f9c <realloc@plt>
   13bd4:	str	r0, [r5, #44]	; 0x2c
   13bd8:	ldr	r0, [r5, #32]
   13bdc:	ldr	r1, [r5, #36]	; 0x24
   13be0:	str	r7, [r1, r0, lsl #2]
   13be4:	ldr	r1, [r5, #40]	; 0x28
   13be8:	str	r6, [r1, r0, lsl #2]
   13bec:	ldr	r1, [r5, #44]	; 0x2c
   13bf0:	str	r4, [r1, r0, lsl #2]
   13bf4:	ldr	r0, [r5, #32]
   13bf8:	add	r0, r0, #1
   13bfc:	str	r0, [r5, #32]
   13c00:	pop	{r4, r5, r6, r7, fp, pc}

00013c04 <table_unregister_callback@@Base>:
   13c04:	push	{r4, r5, r6, sl, fp, lr}
   13c08:	add	fp, sp, #16
   13c0c:	ldr	r4, [r0, #32]
   13c10:	cmp	r4, #1
   13c14:	blt	13d68 <table_unregister_callback@@Base+0x164>
   13c18:	ldr	r3, [r0, #36]	; 0x24
   13c1c:	mov	r6, r0
   13c20:	mov	r0, #0
   13c24:	ldr	r5, [r3, r0, lsl #2]
   13c28:	cmp	r5, r1
   13c2c:	beq	13c48 <table_unregister_callback@@Base+0x44>
   13c30:	add	r0, r0, #1
   13c34:	cmp	r0, r4
   13c38:	beq	13d68 <table_unregister_callback@@Base+0x164>
   13c3c:	ldr	r5, [r3, r0, lsl #2]
   13c40:	cmp	r5, r1
   13c44:	bne	13c30 <table_unregister_callback@@Base+0x2c>
   13c48:	ldr	r5, [r6, #40]	; 0x28
   13c4c:	ldr	r5, [r5, r0, lsl #2]
   13c50:	cmp	r5, r2
   13c54:	bne	13c30 <table_unregister_callback@@Base+0x2c>
   13c58:	sub	r1, r4, #1
   13c5c:	cmp	r0, r1
   13c60:	bge	13ce4 <table_unregister_callback@@Base+0xe0>
   13c64:	add	r2, r0, #1
   13c68:	ldr	r1, [r3, r2, lsl #2]
   13c6c:	str	r1, [r3, r0, lsl #2]
   13c70:	ldr	r1, [r6, #40]	; 0x28
   13c74:	ldr	r3, [r1, r2, lsl #2]
   13c78:	str	r3, [r1, r0, lsl #2]
   13c7c:	ldr	r1, [r6, #44]	; 0x2c
   13c80:	ldr	r3, [r1, r2, lsl #2]
   13c84:	str	r3, [r1, r0, lsl #2]
   13c88:	ldr	r1, [r6, #32]
   13c8c:	sub	r1, r1, #1
   13c90:	cmp	r2, r1
   13c94:	bge	13ce4 <table_unregister_callback@@Base+0xe0>
   13c98:	ldr	r1, [r6, #36]	; 0x24
   13c9c:	add	r1, r1, r0, lsl #2
   13ca0:	ldr	r2, [r1, #8]
   13ca4:	str	r2, [r1, #4]
   13ca8:	ldr	r1, [r6, #40]	; 0x28
   13cac:	add	r1, r1, r0, lsl #2
   13cb0:	ldr	r2, [r1, #8]
   13cb4:	str	r2, [r1, #4]
   13cb8:	ldr	r1, [r6, #44]	; 0x2c
   13cbc:	add	r1, r1, r0, lsl #2
   13cc0:	ldr	r2, [r1, #8]
   13cc4:	str	r2, [r1, #4]
   13cc8:	add	r2, r0, #1
   13ccc:	add	r0, r0, #2
   13cd0:	ldr	r1, [r6, #32]
   13cd4:	sub	r1, r1, #1
   13cd8:	cmp	r0, r1
   13cdc:	mov	r0, r2
   13ce0:	blt	13c98 <table_unregister_callback@@Base+0x94>
   13ce4:	str	r1, [r6, #32]
   13ce8:	ldr	r2, [r6, #48]	; 0x30
   13cec:	udiv	r0, r1, r2
   13cf0:	mls	r0, r0, r2, r1
   13cf4:	cmp	r0, #0
   13cf8:	popne	{r4, r5, r6, sl, fp, pc}
   13cfc:	ldr	r1, [r6, #52]	; 0x34
   13d00:	ldr	r0, [r6, #36]	; 0x24
   13d04:	subs	r1, r1, r2
   13d08:	str	r1, [r6, #52]	; 0x34
   13d0c:	beq	13d44 <table_unregister_callback@@Base+0x140>
   13d10:	lsl	r1, r1, #2
   13d14:	bl	12f9c <realloc@plt>
   13d18:	str	r0, [r6, #36]	; 0x24
   13d1c:	ldr	r1, [r6, #52]	; 0x34
   13d20:	ldr	r0, [r6, #40]	; 0x28
   13d24:	lsl	r1, r1, #2
   13d28:	bl	12f9c <realloc@plt>
   13d2c:	str	r0, [r6, #40]	; 0x28
   13d30:	ldr	r1, [r6, #52]	; 0x34
   13d34:	ldr	r0, [r6, #44]	; 0x2c
   13d38:	lsl	r1, r1, #2
   13d3c:	bl	12f9c <realloc@plt>
   13d40:	b	13d64 <table_unregister_callback@@Base+0x160>
   13d44:	bl	12f90 <free@plt>
   13d48:	ldr	r0, [r6, #40]	; 0x28
   13d4c:	bl	12f90 <free@plt>
   13d50:	ldr	r0, [r6, #44]	; 0x2c
   13d54:	bl	12f90 <free@plt>
   13d58:	mov	r0, #0
   13d5c:	str	r0, [r6, #36]	; 0x24
   13d60:	str	r0, [r6, #40]	; 0x28
   13d64:	str	r0, [r6, #44]	; 0x2c
   13d68:	pop	{r4, r5, r6, sl, fp, pc}

00013d6c <table_notify@@Base>:
   13d6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d70:	add	fp, sp, #24
   13d74:	sub	sp, sp, #8
   13d78:	mov	r7, r0
   13d7c:	ldr	r0, [r0, #32]
   13d80:	cmp	r0, #1
   13d84:	blt	13dfc <table_notify@@Base+0x90>
   13d88:	mov	r4, r3
   13d8c:	mov	r8, r2
   13d90:	mov	r9, r1
   13d94:	mov	r5, #0
   13d98:	ldr	r1, [r7, #44]	; 0x2c
   13d9c:	ldr	r1, [r1, r5, lsl #2]
   13da0:	tst	r1, r4
   13da4:	bne	13dc4 <table_notify@@Base+0x58>
   13da8:	add	r5, r5, #1
   13dac:	cmp	r5, r0
   13db0:	bge	13dfc <table_notify@@Base+0x90>
   13db4:	ldr	r1, [r7, #44]	; 0x2c
   13db8:	ldr	r1, [r1, r5, lsl #2]
   13dbc:	tst	r1, r4
   13dc0:	beq	13da8 <table_notify@@Base+0x3c>
   13dc4:	ldr	r0, [r7, #36]	; 0x24
   13dc8:	ldr	r1, [r7, #40]	; 0x28
   13dcc:	mov	r2, r8
   13dd0:	mov	r3, r4
   13dd4:	ldr	r6, [r0, r5, lsl #2]
   13dd8:	ldr	r0, [r1, r5, lsl #2]
   13ddc:	mov	r1, r9
   13de0:	str	r0, [sp]
   13de4:	mov	r0, r7
   13de8:	blx	r6
   13dec:	ldr	r0, [r7, #32]
   13df0:	add	r5, r5, #1
   13df4:	cmp	r5, r0
   13df8:	blt	13db4 <table_notify@@Base+0x48>
   13dfc:	sub	sp, fp, #24
   13e00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e04 <table_column_init@@Base>:
   13e04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e08:	add	fp, sp, #24
   13e0c:	ldr	r7, [r0]
   13e10:	mov	r0, r2
   13e14:	mov	r4, r3
   13e18:	mov	r5, r2
   13e1c:	mov	r6, r1
   13e20:	bl	12fd8 <strlen@plt>
   13e24:	add	r0, r0, #1
   13e28:	bl	12fb4 <malloc@plt>
   13e2c:	ldr	r8, [fp, #8]
   13e30:	add	r6, r6, r6, lsl #1
   13e34:	cmp	r0, #0
   13e38:	str	r0, [r7, r6, lsl #2]
   13e3c:	beq	13e48 <table_column_init@@Base+0x44>
   13e40:	mov	r1, r5
   13e44:	bl	12fa8 <strcpy@plt>
   13e48:	add	r0, r7, r6, lsl #2
   13e4c:	stmib	r0, {r4, r8}
   13e50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013e54 <table_get_col_ptr@@Base>:
   13e54:	ldr	r0, [r0]
   13e58:	add	r1, r1, r1, lsl #1
   13e5c:	add	r0, r0, r1, lsl #2
   13e60:	bx	lr

00013e64 <table_column_destroy@@Base>:
   13e64:	ldr	r0, [r0]
   13e68:	add	r1, r1, r1, lsl #1
   13e6c:	ldr	r0, [r0, r1, lsl #2]
   13e70:	cmp	r0, #0
   13e74:	bxeq	lr
   13e78:	b	12f90 <free@plt>

00013e7c <table_get_column_length@@Base>:
   13e7c:	ldr	r0, [r0, #4]
   13e80:	bx	lr

00013e84 <table_get_column@@Base>:
   13e84:	push	{r4, r5, r6, r7, fp, lr}
   13e88:	add	fp, sp, #16
   13e8c:	ldr	r6, [r0, #4]
   13e90:	cmp	r6, #1
   13e94:	blt	13edc <table_get_column@@Base+0x58>
   13e98:	ldr	r7, [r0]
   13e9c:	mov	r5, r1
   13ea0:	mov	r4, #0
   13ea4:	ldr	r0, [r7]
   13ea8:	mov	r1, r5
   13eac:	bl	12f78 <strcmp@plt>
   13eb0:	cmp	r0, #0
   13eb4:	beq	13ecc <table_get_column@@Base+0x48>
   13eb8:	add	r4, r4, #1
   13ebc:	add	r7, r7, #12
   13ec0:	cmp	r6, r4
   13ec4:	bne	13ea4 <table_get_column@@Base+0x20>
   13ec8:	mov	r4, r6
   13ecc:	cmp	r4, r6
   13ed0:	mvneq	r4, #0
   13ed4:	mov	r0, r4
   13ed8:	pop	{r4, r5, r6, r7, fp, pc}
   13edc:	mov	r4, #0
   13ee0:	cmp	r4, r6
   13ee4:	mvneq	r4, #0
   13ee8:	mov	r0, r4
   13eec:	pop	{r4, r5, r6, r7, fp, pc}

00013ef0 <table_get_column_name@@Base>:
   13ef0:	ldr	r0, [r0]
   13ef4:	add	r1, r1, r1, lsl #1
   13ef8:	ldr	r0, [r0, r1, lsl #2]
   13efc:	bx	lr

00013f00 <table_get_column_data_type@@Base>:
   13f00:	ldr	r0, [r0]
   13f04:	add	r1, r1, r1, lsl #1
   13f08:	add	r0, r0, r1, lsl #2
   13f0c:	ldr	r0, [r0, #4]
   13f10:	bx	lr

00013f14 <table_add_column@@Base>:
   13f14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f18:	add	fp, sp, #28
   13f1c:	sub	sp, sp, #4
   13f20:	mov	r4, r0
   13f24:	mov	r8, r1
   13f28:	ldr	r0, [r0, #4]
   13f2c:	mov	r9, r2
   13f30:	ldr	r1, [r4, #8]
   13f34:	udiv	r2, r0, r1
   13f38:	mls	r0, r2, r1, r0
   13f3c:	cmp	r0, #0
   13f40:	bne	13fac <table_add_column@@Base+0x98>
   13f44:	ldr	r2, [r4, #12]
   13f48:	ldr	r0, [r4]
   13f4c:	add	r1, r2, r1
   13f50:	str	r1, [r4, #12]
   13f54:	add	r1, r1, r1, lsl #1
   13f58:	lsl	r1, r1, #2
   13f5c:	bl	12f9c <realloc@plt>
   13f60:	str	r0, [r4]
   13f64:	mov	r0, r4
   13f68:	bl	17138 <table_get_row_length@@Base>
   13f6c:	cmp	r0, #1
   13f70:	blt	13fac <table_add_column@@Base+0x98>
   13f74:	mov	r6, r0
   13f78:	mov	r5, #0
   13f7c:	mov	r0, r4
   13f80:	mov	r1, r5
   13f84:	bl	170d0 <table_get_row_ptr@@Base>
   13f88:	ldr	r1, [r4, #12]
   13f8c:	mov	r7, r0
   13f90:	ldr	r0, [r0]
   13f94:	lsl	r1, r1, #2
   13f98:	bl	12f9c <realloc@plt>
   13f9c:	add	r5, r5, #1
   13fa0:	str	r0, [r7]
   13fa4:	cmp	r6, r5
   13fa8:	bne	13f7c <table_add_column@@Base+0x68>
   13fac:	mov	r0, r4
   13fb0:	bl	17138 <table_get_row_length@@Base>
   13fb4:	ldr	r6, [r4, #4]
   13fb8:	mov	r7, r0
   13fbc:	mov	r0, r9
   13fc0:	bl	14960 <table_get_default_compare_function_for_data_type@@Base>
   13fc4:	ldr	r5, [r4]
   13fc8:	mov	sl, r0
   13fcc:	mov	r0, r8
   13fd0:	bl	12fd8 <strlen@plt>
   13fd4:	add	r0, r0, #1
   13fd8:	bl	12fb4 <malloc@plt>
   13fdc:	mov	r1, r8
   13fe0:	add	r8, r6, r6, lsl #1
   13fe4:	cmp	r0, #0
   13fe8:	str	r0, [r5, r8, lsl #2]
   13fec:	beq	13ff4 <table_add_column@@Base+0xe0>
   13ff0:	bl	12fa8 <strcpy@plt>
   13ff4:	add	r0, r5, r8, lsl #2
   13ff8:	cmp	r7, #1
   13ffc:	stmib	r0, {r9, sl}
   14000:	blt	14024 <table_add_column@@Base+0x110>
   14004:	mov	r5, #0
   14008:	mov	r0, r4
   1400c:	mov	r1, r5
   14010:	mov	r2, r6
   14014:	bl	1828c <table_cell_init@@Base>
   14018:	add	r5, r5, #1
   1401c:	cmp	r7, r5
   14020:	bne	14008 <table_add_column@@Base+0xf4>
   14024:	ldr	r2, [r4, #4]
   14028:	mov	r0, r4
   1402c:	mvn	r1, #0
   14030:	mov	r3, #8
   14034:	bl	13d6c <table_notify@@Base>
   14038:	ldr	r0, [r4, #4]
   1403c:	add	r1, r0, #1
   14040:	str	r1, [r4, #4]
   14044:	sub	sp, fp, #28
   14048:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001404c <table_remove_column@@Base>:
   1404c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14050:	add	fp, sp, #28
   14054:	sub	sp, sp, #12
   14058:	mov	r5, r0
   1405c:	ldr	r0, [r0]
   14060:	add	r6, r1, r1, lsl #1
   14064:	mov	r4, r1
   14068:	ldr	r0, [r0, r6, lsl #2]
   1406c:	cmp	r0, #0
   14070:	beq	14078 <table_remove_column@@Base+0x2c>
   14074:	bl	12f90 <free@plt>
   14078:	ldr	r7, [r5, #4]
   1407c:	sub	r0, r7, #1
   14080:	cmp	r0, r4
   14084:	str	r0, [sp, #8]
   14088:	ble	140bc <table_remove_column@@Base+0x70>
   1408c:	mvn	r0, r4
   14090:	lsl	r1, r6, #2
   14094:	add	r0, r0, r7
   14098:	ldr	r2, [r5]
   1409c:	subs	r0, r0, #1
   140a0:	add	r2, r2, r1
   140a4:	add	r1, r1, #12
   140a8:	vldr	d16, [r2, #12]
   140ac:	ldr	r3, [r2, #20]
   140b0:	str	r3, [r2, #8]
   140b4:	vstr	d16, [r2]
   140b8:	bne	14098 <table_remove_column@@Base+0x4c>
   140bc:	mov	r0, r5
   140c0:	bl	17138 <table_get_row_length@@Base>
   140c4:	cmp	r0, #1
   140c8:	blt	141b4 <table_remove_column@@Base+0x168>
   140cc:	mov	sl, r0
   140d0:	ldr	r0, [sp, #8]
   140d4:	cmp	r0, r4
   140d8:	ble	14188 <table_remove_column@@Base+0x13c>
   140dc:	mvn	r0, r4
   140e0:	sub	r8, r7, #2
   140e4:	add	r0, r7, r0
   140e8:	mov	r7, #0
   140ec:	and	r9, r0, #1
   140f0:	add	r0, r4, #1
   140f4:	str	r0, [sp, #4]
   140f8:	b	14108 <table_remove_column@@Base+0xbc>
   140fc:	add	r7, r7, #1
   14100:	cmp	r7, sl
   14104:	beq	141b4 <table_remove_column@@Base+0x168>
   14108:	mov	r0, r5
   1410c:	mov	r1, r7
   14110:	mov	r2, r4
   14114:	bl	182c8 <table_cell_destroy@@Base>
   14118:	mov	r0, r5
   1411c:	mov	r1, r7
   14120:	bl	170d0 <table_get_row_ptr@@Base>
   14124:	cmp	r9, #0
   14128:	mov	r2, r4
   1412c:	beq	14144 <table_remove_column@@Base+0xf8>
   14130:	ldr	r1, [r0]
   14134:	add	r2, r1, r4, lsl #2
   14138:	ldr	r2, [r2, #4]
   1413c:	str	r2, [r1, r4, lsl #2]
   14140:	ldr	r2, [sp, #4]
   14144:	cmp	r8, r4
   14148:	beq	140fc <table_remove_column@@Base+0xb0>
   1414c:	ldr	r1, [sp, #8]
   14150:	sub	r1, r1, r2
   14154:	lsl	r2, r2, #2
   14158:	ldr	r3, [r0]
   1415c:	subs	r1, r1, #2
   14160:	add	r6, r3, r2
   14164:	ldr	r6, [r6, #4]
   14168:	str	r6, [r3, r2]
   1416c:	ldr	r3, [r0]
   14170:	add	r3, r3, r2
   14174:	add	r2, r2, #8
   14178:	ldr	r6, [r3, #8]
   1417c:	str	r6, [r3, #4]
   14180:	bne	14158 <table_remove_column@@Base+0x10c>
   14184:	b	140fc <table_remove_column@@Base+0xb0>
   14188:	mov	r7, #0
   1418c:	mov	r0, r5
   14190:	mov	r1, r7
   14194:	mov	r2, r4
   14198:	bl	182c8 <table_cell_destroy@@Base>
   1419c:	mov	r0, r5
   141a0:	mov	r1, r7
   141a4:	bl	170d0 <table_get_row_ptr@@Base>
   141a8:	add	r7, r7, #1
   141ac:	cmp	sl, r7
   141b0:	bne	1418c <table_remove_column@@Base+0x140>
   141b4:	ldmib	r5, {r0, r1}
   141b8:	sub	r0, r0, #1
   141bc:	udiv	r2, r0, r1
   141c0:	str	r0, [r5, #4]
   141c4:	mls	r0, r2, r1, r0
   141c8:	cmp	r0, #0
   141cc:	bne	14238 <table_remove_column@@Base+0x1ec>
   141d0:	ldr	r2, [r5, #12]
   141d4:	ldr	r0, [r5]
   141d8:	sub	r1, r2, r1
   141dc:	str	r1, [r5, #12]
   141e0:	add	r1, r1, r1, lsl #1
   141e4:	lsl	r1, r1, #2
   141e8:	bl	12f9c <realloc@plt>
   141ec:	str	r0, [r5]
   141f0:	mov	r0, r5
   141f4:	bl	17138 <table_get_row_length@@Base>
   141f8:	cmp	r0, #1
   141fc:	blt	14238 <table_remove_column@@Base+0x1ec>
   14200:	mov	r8, r0
   14204:	mov	r7, #0
   14208:	mov	r0, r5
   1420c:	mov	r1, r7
   14210:	bl	170d0 <table_get_row_ptr@@Base>
   14214:	ldr	r1, [r5, #12]
   14218:	mov	r6, r0
   1421c:	ldr	r0, [r0]
   14220:	lsl	r1, r1, #2
   14224:	bl	12f9c <realloc@plt>
   14228:	add	r7, r7, #1
   1422c:	str	r0, [r6]
   14230:	cmp	r8, r7
   14234:	bne	14208 <table_remove_column@@Base+0x1bc>
   14238:	mov	r0, r5
   1423c:	mvn	r1, #0
   14240:	mov	r2, r4
   14244:	mov	r3, #16
   14248:	bl	13d6c <table_notify@@Base>
   1424c:	mov	r0, #0
   14250:	sub	sp, fp, #28
   14254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014258 <table_get_column_compare_function@@Base>:
   14258:	ldr	r0, [r0]
   1425c:	add	r1, r1, r1, lsl #1
   14260:	add	r0, r0, r1, lsl #2
   14264:	ldr	r0, [r0, #8]
   14268:	bx	lr

0001426c <table_set_column_compare_function@@Base>:
   1426c:	ldr	r0, [r0]
   14270:	add	r1, r1, r1, lsl #1
   14274:	add	r0, r0, r1, lsl #2
   14278:	str	r2, [r0, #8]
   1427c:	bx	lr

00014280 <table_compare_bool@@Base>:
   14280:	cmp	r0, #0
   14284:	beq	142b8 <table_compare_bool@@Base+0x38>
   14288:	cmp	r1, #0
   1428c:	moveq	r1, #1
   14290:	moveq	r0, r1
   14294:	bxeq	lr
   14298:	ldrb	r2, [r1]
   1429c:	ldrb	r0, [r0]
   142a0:	mov	r1, #0
   142a4:	cmp	r0, r2
   142a8:	mvncc	r1, #0
   142ac:	movwhi	r1, #1
   142b0:	mov	r0, r1
   142b4:	bx	lr
   142b8:	cmp	r1, #0
   142bc:	mvnne	r1, #0
   142c0:	mov	r0, r1
   142c4:	bx	lr

000142c8 <table_compare_int@@Base>:
   142c8:	cmp	r0, #0
   142cc:	beq	14300 <table_compare_int@@Base+0x38>
   142d0:	cmp	r1, #0
   142d4:	moveq	r1, #1
   142d8:	moveq	r0, r1
   142dc:	bxeq	lr
   142e0:	ldr	r2, [r1]
   142e4:	ldr	r0, [r0]
   142e8:	mov	r1, #0
   142ec:	cmp	r0, r2
   142f0:	mvnlt	r1, #0
   142f4:	movwgt	r1, #1
   142f8:	mov	r0, r1
   142fc:	bx	lr
   14300:	cmp	r1, #0
   14304:	mvnne	r1, #0
   14308:	mov	r0, r1
   1430c:	bx	lr

00014310 <table_compare_uint@@Base>:
   14310:	cmp	r0, #0
   14314:	beq	14348 <table_compare_uint@@Base+0x38>
   14318:	cmp	r1, #0
   1431c:	moveq	r1, #1
   14320:	moveq	r0, r1
   14324:	bxeq	lr
   14328:	ldr	r2, [r1]
   1432c:	ldr	r0, [r0]
   14330:	mov	r1, #0
   14334:	cmp	r0, r2
   14338:	mvncc	r1, #0
   1433c:	movwhi	r1, #1
   14340:	mov	r0, r1
   14344:	bx	lr
   14348:	cmp	r1, #0
   1434c:	mvnne	r1, #0
   14350:	mov	r0, r1
   14354:	bx	lr

00014358 <table_compare_int8@@Base>:
   14358:	cmp	r0, #0
   1435c:	beq	14390 <table_compare_int8@@Base+0x38>
   14360:	cmp	r1, #0
   14364:	moveq	r1, #1
   14368:	moveq	r0, r1
   1436c:	bxeq	lr
   14370:	ldrsb	r2, [r1]
   14374:	ldrsb	r0, [r0]
   14378:	mov	r1, #0
   1437c:	cmp	r0, r2
   14380:	mvnlt	r1, #0
   14384:	movwgt	r1, #1
   14388:	mov	r0, r1
   1438c:	bx	lr
   14390:	cmp	r1, #0
   14394:	mvnne	r1, #0
   14398:	mov	r0, r1
   1439c:	bx	lr

000143a0 <table_compare_uint8@@Base>:
   143a0:	cmp	r0, #0
   143a4:	beq	143d8 <table_compare_uint8@@Base+0x38>
   143a8:	cmp	r1, #0
   143ac:	moveq	r1, #1
   143b0:	moveq	r0, r1
   143b4:	bxeq	lr
   143b8:	ldrb	r2, [r1]
   143bc:	ldrb	r0, [r0]
   143c0:	mov	r1, #0
   143c4:	cmp	r0, r2
   143c8:	mvncc	r1, #0
   143cc:	movwhi	r1, #1
   143d0:	mov	r0, r1
   143d4:	bx	lr
   143d8:	cmp	r1, #0
   143dc:	mvnne	r1, #0
   143e0:	mov	r0, r1
   143e4:	bx	lr

000143e8 <table_compare_int16@@Base>:
   143e8:	cmp	r0, #0
   143ec:	beq	14420 <table_compare_int16@@Base+0x38>
   143f0:	cmp	r1, #0
   143f4:	moveq	r1, #1
   143f8:	moveq	r0, r1
   143fc:	bxeq	lr
   14400:	ldrsh	r2, [r1]
   14404:	ldrsh	r0, [r0]
   14408:	mov	r1, #0
   1440c:	cmp	r0, r2
   14410:	mvnlt	r1, #0
   14414:	movwgt	r1, #1
   14418:	mov	r0, r1
   1441c:	bx	lr
   14420:	cmp	r1, #0
   14424:	mvnne	r1, #0
   14428:	mov	r0, r1
   1442c:	bx	lr

00014430 <table_compare_uint16@@Base>:
   14430:	cmp	r0, #0
   14434:	beq	14468 <table_compare_uint16@@Base+0x38>
   14438:	cmp	r1, #0
   1443c:	moveq	r1, #1
   14440:	moveq	r0, r1
   14444:	bxeq	lr
   14448:	ldrh	r2, [r1]
   1444c:	ldrh	r0, [r0]
   14450:	mov	r1, #0
   14454:	cmp	r0, r2
   14458:	mvncc	r1, #0
   1445c:	movwhi	r1, #1
   14460:	mov	r0, r1
   14464:	bx	lr
   14468:	cmp	r1, #0
   1446c:	mvnne	r1, #0
   14470:	mov	r0, r1
   14474:	bx	lr

00014478 <table_compare_int32@@Base>:
   14478:	cmp	r0, #0
   1447c:	beq	144b0 <table_compare_int32@@Base+0x38>
   14480:	cmp	r1, #0
   14484:	moveq	r1, #1
   14488:	moveq	r0, r1
   1448c:	bxeq	lr
   14490:	ldr	r2, [r1]
   14494:	ldr	r0, [r0]
   14498:	mov	r1, #0
   1449c:	cmp	r0, r2
   144a0:	mvnlt	r1, #0
   144a4:	movwgt	r1, #1
   144a8:	mov	r0, r1
   144ac:	bx	lr
   144b0:	cmp	r1, #0
   144b4:	mvnne	r1, #0
   144b8:	mov	r0, r1
   144bc:	bx	lr

000144c0 <table_compare_uint32@@Base>:
   144c0:	cmp	r0, #0
   144c4:	beq	144f8 <table_compare_uint32@@Base+0x38>
   144c8:	cmp	r1, #0
   144cc:	moveq	r1, #1
   144d0:	moveq	r0, r1
   144d4:	bxeq	lr
   144d8:	ldr	r2, [r1]
   144dc:	ldr	r0, [r0]
   144e0:	mov	r1, #0
   144e4:	cmp	r0, r2
   144e8:	mvncc	r1, #0
   144ec:	movwhi	r1, #1
   144f0:	mov	r0, r1
   144f4:	bx	lr
   144f8:	cmp	r1, #0
   144fc:	mvnne	r1, #0
   14500:	mov	r0, r1
   14504:	bx	lr

00014508 <table_compare_int64@@Base>:
   14508:	cmp	r0, #0
   1450c:	beq	14560 <table_compare_int64@@Base+0x58>
   14510:	cmp	r1, #0
   14514:	moveq	r1, #1
   14518:	moveq	r0, r1
   1451c:	bxeq	lr
   14520:	push	{r5, r7, fp, lr}
   14524:	add	fp, sp, #8
   14528:	ldm	r0, {r0, r5}
   1452c:	ldm	r1, {r2, r7}
   14530:	mov	r1, #0
   14534:	subs	r3, r0, r2
   14538:	sbcs	r3, r5, r7
   1453c:	movwlt	r1, #1
   14540:	cmp	r1, #0
   14544:	mvnne	r1, #0
   14548:	subs	r0, r2, r0
   1454c:	sbcs	r0, r7, r5
   14550:	movwlt	r1, #1
   14554:	pop	{r5, r7, fp, lr}
   14558:	mov	r0, r1
   1455c:	bx	lr
   14560:	cmp	r1, #0
   14564:	mvnne	r1, #0
   14568:	mov	r0, r1
   1456c:	bx	lr

00014570 <table_compare_uint64@@Base>:
   14570:	cmp	r0, #0
   14574:	beq	145c8 <table_compare_uint64@@Base+0x58>
   14578:	cmp	r1, #0
   1457c:	moveq	r1, #1
   14580:	moveq	r0, r1
   14584:	bxeq	lr
   14588:	push	{r5, r7, fp, lr}
   1458c:	add	fp, sp, #8
   14590:	ldm	r0, {r0, r5}
   14594:	ldm	r1, {r2, r7}
   14598:	mov	r1, #0
   1459c:	subs	r3, r0, r2
   145a0:	sbcs	r3, r5, r7
   145a4:	movwcc	r1, #1
   145a8:	cmp	r1, #0
   145ac:	mvnne	r1, #0
   145b0:	subs	r0, r2, r0
   145b4:	sbcs	r0, r7, r5
   145b8:	movwcc	r1, #1
   145bc:	pop	{r5, r7, fp, lr}
   145c0:	mov	r0, r1
   145c4:	bx	lr
   145c8:	cmp	r1, #0
   145cc:	mvnne	r1, #0
   145d0:	mov	r0, r1
   145d4:	bx	lr

000145d8 <table_compare_short@@Base>:
   145d8:	cmp	r0, #0
   145dc:	beq	14610 <table_compare_short@@Base+0x38>
   145e0:	cmp	r1, #0
   145e4:	moveq	r1, #1
   145e8:	moveq	r0, r1
   145ec:	bxeq	lr
   145f0:	ldrsh	r2, [r1]
   145f4:	ldrsh	r0, [r0]
   145f8:	mov	r1, #0
   145fc:	cmp	r0, r2
   14600:	mvnlt	r1, #0
   14604:	movwgt	r1, #1
   14608:	mov	r0, r1
   1460c:	bx	lr
   14610:	cmp	r1, #0
   14614:	mvnne	r1, #0
   14618:	mov	r0, r1
   1461c:	bx	lr

00014620 <table_compare_ushort@@Base>:
   14620:	cmp	r0, #0
   14624:	beq	14658 <table_compare_ushort@@Base+0x38>
   14628:	cmp	r1, #0
   1462c:	moveq	r1, #1
   14630:	moveq	r0, r1
   14634:	bxeq	lr
   14638:	ldrh	r2, [r1]
   1463c:	ldrh	r0, [r0]
   14640:	mov	r1, #0
   14644:	cmp	r0, r2
   14648:	mvncc	r1, #0
   1464c:	movwhi	r1, #1
   14650:	mov	r0, r1
   14654:	bx	lr
   14658:	cmp	r1, #0
   1465c:	mvnne	r1, #0
   14660:	mov	r0, r1
   14664:	bx	lr

00014668 <table_compare_long@@Base>:
   14668:	cmp	r0, #0
   1466c:	beq	146a0 <table_compare_long@@Base+0x38>
   14670:	cmp	r1, #0
   14674:	moveq	r1, #1
   14678:	moveq	r0, r1
   1467c:	bxeq	lr
   14680:	ldr	r2, [r1]
   14684:	ldr	r0, [r0]
   14688:	mov	r1, #0
   1468c:	cmp	r0, r2
   14690:	mvnlt	r1, #0
   14694:	movwgt	r1, #1
   14698:	mov	r0, r1
   1469c:	bx	lr
   146a0:	cmp	r1, #0
   146a4:	mvnne	r1, #0
   146a8:	mov	r0, r1
   146ac:	bx	lr

000146b0 <table_compare_ulong@@Base>:
   146b0:	cmp	r0, #0
   146b4:	beq	146e8 <table_compare_ulong@@Base+0x38>
   146b8:	cmp	r1, #0
   146bc:	moveq	r1, #1
   146c0:	moveq	r0, r1
   146c4:	bxeq	lr
   146c8:	ldr	r2, [r1]
   146cc:	ldr	r0, [r0]
   146d0:	mov	r1, #0
   146d4:	cmp	r0, r2
   146d8:	mvncc	r1, #0
   146dc:	movwhi	r1, #1
   146e0:	mov	r0, r1
   146e4:	bx	lr
   146e8:	cmp	r1, #0
   146ec:	mvnne	r1, #0
   146f0:	mov	r0, r1
   146f4:	bx	lr

000146f8 <table_compare_llong@@Base>:
   146f8:	cmp	r0, #0
   146fc:	beq	14750 <table_compare_llong@@Base+0x58>
   14700:	cmp	r1, #0
   14704:	moveq	r1, #1
   14708:	moveq	r0, r1
   1470c:	bxeq	lr
   14710:	push	{r5, r7, fp, lr}
   14714:	add	fp, sp, #8
   14718:	ldm	r0, {r0, r5}
   1471c:	ldm	r1, {r2, r7}
   14720:	mov	r1, #0
   14724:	subs	r3, r0, r2
   14728:	sbcs	r3, r5, r7
   1472c:	movwlt	r1, #1
   14730:	cmp	r1, #0
   14734:	mvnne	r1, #0
   14738:	subs	r0, r2, r0
   1473c:	sbcs	r0, r7, r5
   14740:	movwlt	r1, #1
   14744:	pop	{r5, r7, fp, lr}
   14748:	mov	r0, r1
   1474c:	bx	lr
   14750:	cmp	r1, #0
   14754:	mvnne	r1, #0
   14758:	mov	r0, r1
   1475c:	bx	lr

00014760 <table_compare_ullong@@Base>:
   14760:	cmp	r0, #0
   14764:	beq	14798 <table_compare_ullong@@Base+0x38>
   14768:	cmp	r1, #0
   1476c:	moveq	r1, #1
   14770:	moveq	r0, r1
   14774:	bxeq	lr
   14778:	ldr	r2, [r1]
   1477c:	ldr	r0, [r0]
   14780:	mov	r1, #0
   14784:	cmp	r0, r2
   14788:	mvncc	r1, #0
   1478c:	movwhi	r1, #1
   14790:	mov	r0, r1
   14794:	bx	lr
   14798:	cmp	r1, #0
   1479c:	mvnne	r1, #0
   147a0:	mov	r0, r1
   147a4:	bx	lr

000147a8 <table_compare_float@@Base>:
   147a8:	cmp	r0, #0
   147ac:	beq	147e4 <table_compare_float@@Base+0x3c>
   147b0:	cmp	r1, #0
   147b4:	moveq	r1, #1
   147b8:	moveq	r0, r1
   147bc:	bxeq	lr
   147c0:	vldr	s0, [r1]
   147c4:	vldr	s2, [r0]
   147c8:	mov	r1, #0
   147cc:	vcmpe.f32	s2, s0
   147d0:	vmrs	APSR_nzcv, fpscr
   147d4:	mvnmi	r1, #0
   147d8:	movwgt	r1, #1
   147dc:	mov	r0, r1
   147e0:	bx	lr
   147e4:	cmp	r1, #0
   147e8:	mvnne	r1, #0
   147ec:	mov	r0, r1
   147f0:	bx	lr

000147f4 <table_compare_double@@Base>:
   147f4:	cmp	r0, #0
   147f8:	beq	14830 <table_compare_double@@Base+0x3c>
   147fc:	cmp	r1, #0
   14800:	moveq	r1, #1
   14804:	moveq	r0, r1
   14808:	bxeq	lr
   1480c:	vldr	d16, [r1]
   14810:	vldr	d17, [r0]
   14814:	mov	r1, #0
   14818:	vcmpe.f64	d17, d16
   1481c:	vmrs	APSR_nzcv, fpscr
   14820:	mvnmi	r1, #0
   14824:	movwgt	r1, #1
   14828:	mov	r0, r1
   1482c:	bx	lr
   14830:	cmp	r1, #0
   14834:	mvnne	r1, #0
   14838:	mov	r0, r1
   1483c:	bx	lr

00014840 <table_compare_ldouble@@Base>:
   14840:	cmp	r0, #0
   14844:	beq	1487c <table_compare_ldouble@@Base+0x3c>
   14848:	cmp	r1, #0
   1484c:	moveq	r1, #1
   14850:	moveq	r0, r1
   14854:	bxeq	lr
   14858:	vldr	d16, [r1]
   1485c:	vldr	d17, [r0]
   14860:	mov	r1, #0
   14864:	vcmpe.f64	d17, d16
   14868:	vmrs	APSR_nzcv, fpscr
   1486c:	mvnmi	r1, #0
   14870:	movwgt	r1, #1
   14874:	mov	r0, r1
   14878:	bx	lr
   1487c:	cmp	r1, #0
   14880:	mvnne	r1, #0
   14884:	mov	r0, r1
   14888:	bx	lr

0001488c <table_compare_char@@Base>:
   1488c:	cmp	r0, #0
   14890:	beq	148c4 <table_compare_char@@Base+0x38>
   14894:	cmp	r1, #0
   14898:	moveq	r1, #1
   1489c:	moveq	r0, r1
   148a0:	bxeq	lr
   148a4:	ldrb	r2, [r1]
   148a8:	ldrb	r0, [r0]
   148ac:	mov	r1, #0
   148b0:	cmp	r0, r2
   148b4:	mvncc	r1, #0
   148b8:	movwhi	r1, #1
   148bc:	mov	r0, r1
   148c0:	bx	lr
   148c4:	cmp	r1, #0
   148c8:	mvnne	r1, #0
   148cc:	mov	r0, r1
   148d0:	bx	lr

000148d4 <table_compare_uchar@@Base>:
   148d4:	cmp	r0, #0
   148d8:	beq	1490c <table_compare_uchar@@Base+0x38>
   148dc:	cmp	r1, #0
   148e0:	moveq	r1, #1
   148e4:	moveq	r0, r1
   148e8:	bxeq	lr
   148ec:	ldrb	r2, [r1]
   148f0:	ldrb	r0, [r0]
   148f4:	mov	r1, #0
   148f8:	cmp	r0, r2
   148fc:	mvncc	r1, #0
   14900:	movwhi	r1, #1
   14904:	mov	r0, r1
   14908:	bx	lr
   1490c:	cmp	r1, #0
   14910:	mvnne	r1, #0
   14914:	mov	r0, r1
   14918:	bx	lr

0001491c <table_compare_string@@Base>:
   1491c:	cmp	r0, #0
   14920:	beq	14938 <table_compare_string@@Base+0x1c>
   14924:	cmp	r1, #0
   14928:	moveq	r1, #1
   1492c:	moveq	r0, r1
   14930:	bxeq	lr
   14934:	b	12f78 <strcmp@plt>
   14938:	cmp	r1, #0
   1493c:	mvnne	r1, #0
   14940:	mov	r0, r1
   14944:	bx	lr

00014948 <table_compare_ptr@@Base>:
   14948:	cmp	r0, r1
   1494c:	mov	r2, #0
   14950:	mvncc	r2, #0
   14954:	movwhi	r2, #1
   14958:	mov	r0, r2
   1495c:	bx	lr

00014960 <table_get_default_compare_function_for_data_type@@Base>:
   14960:	cmp	r0, #23
   14964:	movhi	r0, #0
   14968:	bxhi	lr
   1496c:	movw	r1, #36440	; 0x8e58
   14970:	movt	r1, #1
   14974:	ldr	r0, [r1, r0, lsl #2]
   14978:	bx	lr

0001497c <table_subset_find@@Base>:
   1497c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14980:	add	fp, sp, #28
   14984:	sub	sp, sp, #4
   14988:	mov	r8, r3
   1498c:	mov	r9, r2
   14990:	mov	r6, r1
   14994:	mov	r7, r0
   14998:	bl	14258 <table_get_column_compare_function@@Base>
   1499c:	ldr	r4, [fp, #12]
   149a0:	ldr	r5, [fp, #8]
   149a4:	mov	sl, r0
   149a8:	cmp	r8, #0
   149ac:	beq	149f4 <table_subset_find@@Base+0x78>
   149b0:	mvn	r8, #0
   149b4:	cmp	r4, r5
   149b8:	blt	14a34 <table_subset_find@@Base+0xb8>
   149bc:	mov	r0, r7
   149c0:	mov	r1, r4
   149c4:	mov	r2, r6
   149c8:	bl	16e60 <table_get@@Base>
   149cc:	mov	r1, r0
   149d0:	mov	r0, r9
   149d4:	blx	sl
   149d8:	cmp	r0, #0
   149dc:	beq	14a40 <table_subset_find@@Base+0xc4>
   149e0:	sub	r0, r4, #1
   149e4:	cmp	r4, r5
   149e8:	mov	r4, r0
   149ec:	bgt	149bc <table_subset_find@@Base+0x40>
   149f0:	b	14a34 <table_subset_find@@Base+0xb8>
   149f4:	mvn	r8, #0
   149f8:	cmp	r5, r4
   149fc:	bgt	14a34 <table_subset_find@@Base+0xb8>
   14a00:	mov	r0, r7
   14a04:	mov	r1, r5
   14a08:	mov	r2, r6
   14a0c:	bl	16e60 <table_get@@Base>
   14a10:	mov	r1, r0
   14a14:	mov	r0, r9
   14a18:	blx	sl
   14a1c:	cmp	r0, #0
   14a20:	beq	14a50 <table_subset_find@@Base+0xd4>
   14a24:	add	r0, r5, #1
   14a28:	cmp	r5, r4
   14a2c:	mov	r5, r0
   14a30:	blt	14a00 <table_subset_find@@Base+0x84>
   14a34:	mov	r0, r8
   14a38:	sub	sp, fp, #28
   14a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a40:	mov	r8, r4
   14a44:	mov	r0, r8
   14a48:	sub	sp, fp, #28
   14a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a50:	mov	r8, r5
   14a54:	mov	r0, r8
   14a58:	sub	sp, fp, #28
   14a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014a60 <table_find@@Base>:
   14a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a64:	add	fp, sp, #28
   14a68:	sub	sp, sp, #4
   14a6c:	mov	r5, r3
   14a70:	mov	r9, r2
   14a74:	mov	sl, r1
   14a78:	mov	r6, r0
   14a7c:	bl	17138 <table_get_row_length@@Base>
   14a80:	mov	r7, r0
   14a84:	mov	r0, r6
   14a88:	mov	r1, sl
   14a8c:	bl	14258 <table_get_column_compare_function@@Base>
   14a90:	mov	r4, r0
   14a94:	mvn	r8, #0
   14a98:	cmp	r5, #0
   14a9c:	beq	14ae0 <table_find@@Base+0x80>
   14aa0:	cmp	r7, #1
   14aa4:	blt	14b1c <table_find@@Base+0xbc>
   14aa8:	sub	r5, r7, #1
   14aac:	mov	r0, r6
   14ab0:	mov	r2, sl
   14ab4:	mov	r1, r5
   14ab8:	bl	16e60 <table_get@@Base>
   14abc:	mov	r1, r0
   14ac0:	mov	r0, r9
   14ac4:	blx	r4
   14ac8:	cmp	r0, #0
   14acc:	beq	14b28 <table_find@@Base+0xc8>
   14ad0:	cmp	r5, #0
   14ad4:	mov	r7, r5
   14ad8:	bgt	14aa8 <table_find@@Base+0x48>
   14adc:	b	14b1c <table_find@@Base+0xbc>
   14ae0:	cmp	r7, #1
   14ae4:	blt	14b1c <table_find@@Base+0xbc>
   14ae8:	mov	r5, #0
   14aec:	mov	r0, r6
   14af0:	mov	r1, r5
   14af4:	mov	r2, sl
   14af8:	bl	16e60 <table_get@@Base>
   14afc:	mov	r1, r0
   14b00:	mov	r0, r9
   14b04:	blx	r4
   14b08:	cmp	r0, #0
   14b0c:	beq	14b38 <table_find@@Base+0xd8>
   14b10:	add	r5, r5, #1
   14b14:	cmp	r7, r5
   14b18:	bne	14aec <table_find@@Base+0x8c>
   14b1c:	mov	r0, r8
   14b20:	sub	sp, fp, #28
   14b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b28:	sub	r8, r7, #1
   14b2c:	mov	r0, r8
   14b30:	sub	sp, fp, #28
   14b34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b38:	mov	r8, r5
   14b3c:	mov	r0, r8
   14b40:	sub	sp, fp, #28
   14b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014b48 <table_find_bool@@Base>:
   14b48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b4c:	add	fp, sp, #28
   14b50:	sub	sp, sp, #4
   14b54:	mov	r4, r3
   14b58:	mov	r9, r1
   14b5c:	mov	r5, r0
   14b60:	strb	r2, [sp, #3]
   14b64:	bl	17138 <table_get_row_length@@Base>
   14b68:	mov	r8, r0
   14b6c:	mov	r0, r5
   14b70:	mov	r1, r9
   14b74:	bl	14258 <table_get_column_compare_function@@Base>
   14b78:	mov	r6, r0
   14b7c:	mvn	sl, #0
   14b80:	cmp	r4, #0
   14b84:	beq	14bcc <table_find_bool@@Base+0x84>
   14b88:	cmp	r8, #1
   14b8c:	blt	14c10 <table_find_bool@@Base+0xc8>
   14b90:	add	r4, sp, #3
   14b94:	sub	r7, r8, #1
   14b98:	mov	r0, r5
   14b9c:	mov	r2, r9
   14ba0:	mov	r1, r7
   14ba4:	bl	16e60 <table_get@@Base>
   14ba8:	mov	r1, r0
   14bac:	mov	r0, r4
   14bb0:	blx	r6
   14bb4:	cmp	r0, #0
   14bb8:	beq	14c1c <table_find_bool@@Base+0xd4>
   14bbc:	cmp	r7, #0
   14bc0:	mov	r8, r7
   14bc4:	bgt	14b94 <table_find_bool@@Base+0x4c>
   14bc8:	b	14c10 <table_find_bool@@Base+0xc8>
   14bcc:	cmp	r8, #1
   14bd0:	blt	14c10 <table_find_bool@@Base+0xc8>
   14bd4:	mov	r4, #0
   14bd8:	add	sl, sp, #3
   14bdc:	mov	r0, r5
   14be0:	mov	r1, r4
   14be4:	mov	r2, r9
   14be8:	bl	16e60 <table_get@@Base>
   14bec:	mov	r1, r0
   14bf0:	mov	r0, sl
   14bf4:	blx	r6
   14bf8:	cmp	r0, #0
   14bfc:	beq	14c2c <table_find_bool@@Base+0xe4>
   14c00:	add	r4, r4, #1
   14c04:	cmp	r8, r4
   14c08:	bne	14bdc <table_find_bool@@Base+0x94>
   14c0c:	mvn	sl, #0
   14c10:	mov	r0, sl
   14c14:	sub	sp, fp, #28
   14c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c1c:	sub	sl, r8, #1
   14c20:	mov	r0, sl
   14c24:	sub	sp, fp, #28
   14c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c2c:	mov	sl, r4
   14c30:	mov	r0, sl
   14c34:	sub	sp, fp, #28
   14c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014c3c <table_find_int@@Base>:
   14c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c40:	add	fp, sp, #28
   14c44:	sub	sp, sp, #4
   14c48:	mov	r4, r3
   14c4c:	mov	r9, r1
   14c50:	mov	r5, r0
   14c54:	str	r2, [sp]
   14c58:	bl	17138 <table_get_row_length@@Base>
   14c5c:	mov	r8, r0
   14c60:	mov	r0, r5
   14c64:	mov	r1, r9
   14c68:	bl	14258 <table_get_column_compare_function@@Base>
   14c6c:	mov	r6, r0
   14c70:	mvn	sl, #0
   14c74:	cmp	r4, #0
   14c78:	beq	14cc0 <table_find_int@@Base+0x84>
   14c7c:	cmp	r8, #1
   14c80:	blt	14d04 <table_find_int@@Base+0xc8>
   14c84:	mov	r4, sp
   14c88:	sub	r7, r8, #1
   14c8c:	mov	r0, r5
   14c90:	mov	r2, r9
   14c94:	mov	r1, r7
   14c98:	bl	16e60 <table_get@@Base>
   14c9c:	mov	r1, r0
   14ca0:	mov	r0, r4
   14ca4:	blx	r6
   14ca8:	cmp	r0, #0
   14cac:	beq	14d10 <table_find_int@@Base+0xd4>
   14cb0:	cmp	r7, #0
   14cb4:	mov	r8, r7
   14cb8:	bgt	14c88 <table_find_int@@Base+0x4c>
   14cbc:	b	14d04 <table_find_int@@Base+0xc8>
   14cc0:	cmp	r8, #1
   14cc4:	blt	14d04 <table_find_int@@Base+0xc8>
   14cc8:	mov	r4, #0
   14ccc:	mov	sl, sp
   14cd0:	mov	r0, r5
   14cd4:	mov	r1, r4
   14cd8:	mov	r2, r9
   14cdc:	bl	16e60 <table_get@@Base>
   14ce0:	mov	r1, r0
   14ce4:	mov	r0, sl
   14ce8:	blx	r6
   14cec:	cmp	r0, #0
   14cf0:	beq	14d20 <table_find_int@@Base+0xe4>
   14cf4:	add	r4, r4, #1
   14cf8:	cmp	r8, r4
   14cfc:	bne	14cd0 <table_find_int@@Base+0x94>
   14d00:	mvn	sl, #0
   14d04:	mov	r0, sl
   14d08:	sub	sp, fp, #28
   14d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d10:	sub	sl, r8, #1
   14d14:	mov	r0, sl
   14d18:	sub	sp, fp, #28
   14d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d20:	mov	sl, r4
   14d24:	mov	r0, sl
   14d28:	sub	sp, fp, #28
   14d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d30 <table_find_uint@@Base>:
   14d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d34:	add	fp, sp, #28
   14d38:	sub	sp, sp, #4
   14d3c:	mov	r4, r3
   14d40:	mov	r9, r1
   14d44:	mov	r5, r0
   14d48:	str	r2, [sp]
   14d4c:	bl	17138 <table_get_row_length@@Base>
   14d50:	mov	r8, r0
   14d54:	mov	r0, r5
   14d58:	mov	r1, r9
   14d5c:	bl	14258 <table_get_column_compare_function@@Base>
   14d60:	mov	r6, r0
   14d64:	mvn	sl, #0
   14d68:	cmp	r4, #0
   14d6c:	beq	14db4 <table_find_uint@@Base+0x84>
   14d70:	cmp	r8, #1
   14d74:	blt	14df8 <table_find_uint@@Base+0xc8>
   14d78:	mov	r4, sp
   14d7c:	sub	r7, r8, #1
   14d80:	mov	r0, r5
   14d84:	mov	r2, r9
   14d88:	mov	r1, r7
   14d8c:	bl	16e60 <table_get@@Base>
   14d90:	mov	r1, r0
   14d94:	mov	r0, r4
   14d98:	blx	r6
   14d9c:	cmp	r0, #0
   14da0:	beq	14e04 <table_find_uint@@Base+0xd4>
   14da4:	cmp	r7, #0
   14da8:	mov	r8, r7
   14dac:	bgt	14d7c <table_find_uint@@Base+0x4c>
   14db0:	b	14df8 <table_find_uint@@Base+0xc8>
   14db4:	cmp	r8, #1
   14db8:	blt	14df8 <table_find_uint@@Base+0xc8>
   14dbc:	mov	r4, #0
   14dc0:	mov	sl, sp
   14dc4:	mov	r0, r5
   14dc8:	mov	r1, r4
   14dcc:	mov	r2, r9
   14dd0:	bl	16e60 <table_get@@Base>
   14dd4:	mov	r1, r0
   14dd8:	mov	r0, sl
   14ddc:	blx	r6
   14de0:	cmp	r0, #0
   14de4:	beq	14e14 <table_find_uint@@Base+0xe4>
   14de8:	add	r4, r4, #1
   14dec:	cmp	r8, r4
   14df0:	bne	14dc4 <table_find_uint@@Base+0x94>
   14df4:	mvn	sl, #0
   14df8:	mov	r0, sl
   14dfc:	sub	sp, fp, #28
   14e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e04:	sub	sl, r8, #1
   14e08:	mov	r0, sl
   14e0c:	sub	sp, fp, #28
   14e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e14:	mov	sl, r4
   14e18:	mov	r0, sl
   14e1c:	sub	sp, fp, #28
   14e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014e24 <table_find_int8@@Base>:
   14e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e28:	add	fp, sp, #28
   14e2c:	sub	sp, sp, #4
   14e30:	mov	r4, r3
   14e34:	mov	r9, r1
   14e38:	mov	r5, r0
   14e3c:	strb	r2, [sp, #3]
   14e40:	bl	17138 <table_get_row_length@@Base>
   14e44:	mov	r8, r0
   14e48:	mov	r0, r5
   14e4c:	mov	r1, r9
   14e50:	bl	14258 <table_get_column_compare_function@@Base>
   14e54:	mov	r6, r0
   14e58:	mvn	sl, #0
   14e5c:	cmp	r4, #0
   14e60:	beq	14ea8 <table_find_int8@@Base+0x84>
   14e64:	cmp	r8, #1
   14e68:	blt	14eec <table_find_int8@@Base+0xc8>
   14e6c:	add	r4, sp, #3
   14e70:	sub	r7, r8, #1
   14e74:	mov	r0, r5
   14e78:	mov	r2, r9
   14e7c:	mov	r1, r7
   14e80:	bl	16e60 <table_get@@Base>
   14e84:	mov	r1, r0
   14e88:	mov	r0, r4
   14e8c:	blx	r6
   14e90:	cmp	r0, #0
   14e94:	beq	14ef8 <table_find_int8@@Base+0xd4>
   14e98:	cmp	r7, #0
   14e9c:	mov	r8, r7
   14ea0:	bgt	14e70 <table_find_int8@@Base+0x4c>
   14ea4:	b	14eec <table_find_int8@@Base+0xc8>
   14ea8:	cmp	r8, #1
   14eac:	blt	14eec <table_find_int8@@Base+0xc8>
   14eb0:	mov	r4, #0
   14eb4:	add	sl, sp, #3
   14eb8:	mov	r0, r5
   14ebc:	mov	r1, r4
   14ec0:	mov	r2, r9
   14ec4:	bl	16e60 <table_get@@Base>
   14ec8:	mov	r1, r0
   14ecc:	mov	r0, sl
   14ed0:	blx	r6
   14ed4:	cmp	r0, #0
   14ed8:	beq	14f08 <table_find_int8@@Base+0xe4>
   14edc:	add	r4, r4, #1
   14ee0:	cmp	r8, r4
   14ee4:	bne	14eb8 <table_find_int8@@Base+0x94>
   14ee8:	mvn	sl, #0
   14eec:	mov	r0, sl
   14ef0:	sub	sp, fp, #28
   14ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ef8:	sub	sl, r8, #1
   14efc:	mov	r0, sl
   14f00:	sub	sp, fp, #28
   14f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f08:	mov	sl, r4
   14f0c:	mov	r0, sl
   14f10:	sub	sp, fp, #28
   14f14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014f18 <table_find_uint8@@Base>:
   14f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f1c:	add	fp, sp, #28
   14f20:	sub	sp, sp, #4
   14f24:	mov	r4, r3
   14f28:	mov	r9, r1
   14f2c:	mov	r5, r0
   14f30:	strb	r2, [sp, #3]
   14f34:	bl	17138 <table_get_row_length@@Base>
   14f38:	mov	r8, r0
   14f3c:	mov	r0, r5
   14f40:	mov	r1, r9
   14f44:	bl	14258 <table_get_column_compare_function@@Base>
   14f48:	mov	r6, r0
   14f4c:	mvn	sl, #0
   14f50:	cmp	r4, #0
   14f54:	beq	14f9c <table_find_uint8@@Base+0x84>
   14f58:	cmp	r8, #1
   14f5c:	blt	14fe0 <table_find_uint8@@Base+0xc8>
   14f60:	add	r4, sp, #3
   14f64:	sub	r7, r8, #1
   14f68:	mov	r0, r5
   14f6c:	mov	r2, r9
   14f70:	mov	r1, r7
   14f74:	bl	16e60 <table_get@@Base>
   14f78:	mov	r1, r0
   14f7c:	mov	r0, r4
   14f80:	blx	r6
   14f84:	cmp	r0, #0
   14f88:	beq	14fec <table_find_uint8@@Base+0xd4>
   14f8c:	cmp	r7, #0
   14f90:	mov	r8, r7
   14f94:	bgt	14f64 <table_find_uint8@@Base+0x4c>
   14f98:	b	14fe0 <table_find_uint8@@Base+0xc8>
   14f9c:	cmp	r8, #1
   14fa0:	blt	14fe0 <table_find_uint8@@Base+0xc8>
   14fa4:	mov	r4, #0
   14fa8:	add	sl, sp, #3
   14fac:	mov	r0, r5
   14fb0:	mov	r1, r4
   14fb4:	mov	r2, r9
   14fb8:	bl	16e60 <table_get@@Base>
   14fbc:	mov	r1, r0
   14fc0:	mov	r0, sl
   14fc4:	blx	r6
   14fc8:	cmp	r0, #0
   14fcc:	beq	14ffc <table_find_uint8@@Base+0xe4>
   14fd0:	add	r4, r4, #1
   14fd4:	cmp	r8, r4
   14fd8:	bne	14fac <table_find_uint8@@Base+0x94>
   14fdc:	mvn	sl, #0
   14fe0:	mov	r0, sl
   14fe4:	sub	sp, fp, #28
   14fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fec:	sub	sl, r8, #1
   14ff0:	mov	r0, sl
   14ff4:	sub	sp, fp, #28
   14ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ffc:	mov	sl, r4
   15000:	mov	r0, sl
   15004:	sub	sp, fp, #28
   15008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001500c <table_find_int16@@Base>:
   1500c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15010:	add	fp, sp, #28
   15014:	sub	sp, sp, #4
   15018:	mov	r4, r3
   1501c:	mov	r9, r1
   15020:	mov	r5, r0
   15024:	strh	r2, [sp, #2]
   15028:	bl	17138 <table_get_row_length@@Base>
   1502c:	mov	r8, r0
   15030:	mov	r0, r5
   15034:	mov	r1, r9
   15038:	bl	14258 <table_get_column_compare_function@@Base>
   1503c:	mov	r6, r0
   15040:	mvn	sl, #0
   15044:	cmp	r4, #0
   15048:	beq	15090 <table_find_int16@@Base+0x84>
   1504c:	cmp	r8, #1
   15050:	blt	150d4 <table_find_int16@@Base+0xc8>
   15054:	add	r4, sp, #2
   15058:	sub	r7, r8, #1
   1505c:	mov	r0, r5
   15060:	mov	r2, r9
   15064:	mov	r1, r7
   15068:	bl	16e60 <table_get@@Base>
   1506c:	mov	r1, r0
   15070:	mov	r0, r4
   15074:	blx	r6
   15078:	cmp	r0, #0
   1507c:	beq	150e0 <table_find_int16@@Base+0xd4>
   15080:	cmp	r7, #0
   15084:	mov	r8, r7
   15088:	bgt	15058 <table_find_int16@@Base+0x4c>
   1508c:	b	150d4 <table_find_int16@@Base+0xc8>
   15090:	cmp	r8, #1
   15094:	blt	150d4 <table_find_int16@@Base+0xc8>
   15098:	mov	r4, #0
   1509c:	add	sl, sp, #2
   150a0:	mov	r0, r5
   150a4:	mov	r1, r4
   150a8:	mov	r2, r9
   150ac:	bl	16e60 <table_get@@Base>
   150b0:	mov	r1, r0
   150b4:	mov	r0, sl
   150b8:	blx	r6
   150bc:	cmp	r0, #0
   150c0:	beq	150f0 <table_find_int16@@Base+0xe4>
   150c4:	add	r4, r4, #1
   150c8:	cmp	r8, r4
   150cc:	bne	150a0 <table_find_int16@@Base+0x94>
   150d0:	mvn	sl, #0
   150d4:	mov	r0, sl
   150d8:	sub	sp, fp, #28
   150dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150e0:	sub	sl, r8, #1
   150e4:	mov	r0, sl
   150e8:	sub	sp, fp, #28
   150ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   150f0:	mov	sl, r4
   150f4:	mov	r0, sl
   150f8:	sub	sp, fp, #28
   150fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015100 <table_find_uint16@@Base>:
   15100:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15104:	add	fp, sp, #28
   15108:	sub	sp, sp, #4
   1510c:	mov	r4, r3
   15110:	mov	r9, r1
   15114:	mov	r5, r0
   15118:	strh	r2, [sp, #2]
   1511c:	bl	17138 <table_get_row_length@@Base>
   15120:	mov	r8, r0
   15124:	mov	r0, r5
   15128:	mov	r1, r9
   1512c:	bl	14258 <table_get_column_compare_function@@Base>
   15130:	mov	r6, r0
   15134:	mvn	sl, #0
   15138:	cmp	r4, #0
   1513c:	beq	15184 <table_find_uint16@@Base+0x84>
   15140:	cmp	r8, #1
   15144:	blt	151c8 <table_find_uint16@@Base+0xc8>
   15148:	add	r4, sp, #2
   1514c:	sub	r7, r8, #1
   15150:	mov	r0, r5
   15154:	mov	r2, r9
   15158:	mov	r1, r7
   1515c:	bl	16e60 <table_get@@Base>
   15160:	mov	r1, r0
   15164:	mov	r0, r4
   15168:	blx	r6
   1516c:	cmp	r0, #0
   15170:	beq	151d4 <table_find_uint16@@Base+0xd4>
   15174:	cmp	r7, #0
   15178:	mov	r8, r7
   1517c:	bgt	1514c <table_find_uint16@@Base+0x4c>
   15180:	b	151c8 <table_find_uint16@@Base+0xc8>
   15184:	cmp	r8, #1
   15188:	blt	151c8 <table_find_uint16@@Base+0xc8>
   1518c:	mov	r4, #0
   15190:	add	sl, sp, #2
   15194:	mov	r0, r5
   15198:	mov	r1, r4
   1519c:	mov	r2, r9
   151a0:	bl	16e60 <table_get@@Base>
   151a4:	mov	r1, r0
   151a8:	mov	r0, sl
   151ac:	blx	r6
   151b0:	cmp	r0, #0
   151b4:	beq	151e4 <table_find_uint16@@Base+0xe4>
   151b8:	add	r4, r4, #1
   151bc:	cmp	r8, r4
   151c0:	bne	15194 <table_find_uint16@@Base+0x94>
   151c4:	mvn	sl, #0
   151c8:	mov	r0, sl
   151cc:	sub	sp, fp, #28
   151d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151d4:	sub	sl, r8, #1
   151d8:	mov	r0, sl
   151dc:	sub	sp, fp, #28
   151e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   151e4:	mov	sl, r4
   151e8:	mov	r0, sl
   151ec:	sub	sp, fp, #28
   151f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000151f4 <table_find_int32@@Base>:
   151f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151f8:	add	fp, sp, #28
   151fc:	sub	sp, sp, #4
   15200:	mov	r4, r3
   15204:	mov	r9, r1
   15208:	mov	r5, r0
   1520c:	str	r2, [sp]
   15210:	bl	17138 <table_get_row_length@@Base>
   15214:	mov	r8, r0
   15218:	mov	r0, r5
   1521c:	mov	r1, r9
   15220:	bl	14258 <table_get_column_compare_function@@Base>
   15224:	mov	r6, r0
   15228:	mvn	sl, #0
   1522c:	cmp	r4, #0
   15230:	beq	15278 <table_find_int32@@Base+0x84>
   15234:	cmp	r8, #1
   15238:	blt	152bc <table_find_int32@@Base+0xc8>
   1523c:	mov	r4, sp
   15240:	sub	r7, r8, #1
   15244:	mov	r0, r5
   15248:	mov	r2, r9
   1524c:	mov	r1, r7
   15250:	bl	16e60 <table_get@@Base>
   15254:	mov	r1, r0
   15258:	mov	r0, r4
   1525c:	blx	r6
   15260:	cmp	r0, #0
   15264:	beq	152c8 <table_find_int32@@Base+0xd4>
   15268:	cmp	r7, #0
   1526c:	mov	r8, r7
   15270:	bgt	15240 <table_find_int32@@Base+0x4c>
   15274:	b	152bc <table_find_int32@@Base+0xc8>
   15278:	cmp	r8, #1
   1527c:	blt	152bc <table_find_int32@@Base+0xc8>
   15280:	mov	r4, #0
   15284:	mov	sl, sp
   15288:	mov	r0, r5
   1528c:	mov	r1, r4
   15290:	mov	r2, r9
   15294:	bl	16e60 <table_get@@Base>
   15298:	mov	r1, r0
   1529c:	mov	r0, sl
   152a0:	blx	r6
   152a4:	cmp	r0, #0
   152a8:	beq	152d8 <table_find_int32@@Base+0xe4>
   152ac:	add	r4, r4, #1
   152b0:	cmp	r8, r4
   152b4:	bne	15288 <table_find_int32@@Base+0x94>
   152b8:	mvn	sl, #0
   152bc:	mov	r0, sl
   152c0:	sub	sp, fp, #28
   152c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152c8:	sub	sl, r8, #1
   152cc:	mov	r0, sl
   152d0:	sub	sp, fp, #28
   152d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152d8:	mov	sl, r4
   152dc:	mov	r0, sl
   152e0:	sub	sp, fp, #28
   152e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000152e8 <table_find_uint32@@Base>:
   152e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152ec:	add	fp, sp, #28
   152f0:	sub	sp, sp, #4
   152f4:	mov	r4, r3
   152f8:	mov	r9, r1
   152fc:	mov	r5, r0
   15300:	str	r2, [sp]
   15304:	bl	17138 <table_get_row_length@@Base>
   15308:	mov	r8, r0
   1530c:	mov	r0, r5
   15310:	mov	r1, r9
   15314:	bl	14258 <table_get_column_compare_function@@Base>
   15318:	mov	r6, r0
   1531c:	mvn	sl, #0
   15320:	cmp	r4, #0
   15324:	beq	1536c <table_find_uint32@@Base+0x84>
   15328:	cmp	r8, #1
   1532c:	blt	153b0 <table_find_uint32@@Base+0xc8>
   15330:	mov	r4, sp
   15334:	sub	r7, r8, #1
   15338:	mov	r0, r5
   1533c:	mov	r2, r9
   15340:	mov	r1, r7
   15344:	bl	16e60 <table_get@@Base>
   15348:	mov	r1, r0
   1534c:	mov	r0, r4
   15350:	blx	r6
   15354:	cmp	r0, #0
   15358:	beq	153bc <table_find_uint32@@Base+0xd4>
   1535c:	cmp	r7, #0
   15360:	mov	r8, r7
   15364:	bgt	15334 <table_find_uint32@@Base+0x4c>
   15368:	b	153b0 <table_find_uint32@@Base+0xc8>
   1536c:	cmp	r8, #1
   15370:	blt	153b0 <table_find_uint32@@Base+0xc8>
   15374:	mov	r4, #0
   15378:	mov	sl, sp
   1537c:	mov	r0, r5
   15380:	mov	r1, r4
   15384:	mov	r2, r9
   15388:	bl	16e60 <table_get@@Base>
   1538c:	mov	r1, r0
   15390:	mov	r0, sl
   15394:	blx	r6
   15398:	cmp	r0, #0
   1539c:	beq	153cc <table_find_uint32@@Base+0xe4>
   153a0:	add	r4, r4, #1
   153a4:	cmp	r8, r4
   153a8:	bne	1537c <table_find_uint32@@Base+0x94>
   153ac:	mvn	sl, #0
   153b0:	mov	r0, sl
   153b4:	sub	sp, fp, #28
   153b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153bc:	sub	sl, r8, #1
   153c0:	mov	r0, sl
   153c4:	sub	sp, fp, #28
   153c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   153cc:	mov	sl, r4
   153d0:	mov	r0, sl
   153d4:	sub	sp, fp, #28
   153d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000153dc <table_find_int64@@Base>:
   153dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153e0:	add	fp, sp, #28
   153e4:	sub	sp, sp, #12
   153e8:	mov	r9, r1
   153ec:	mov	r5, r0
   153f0:	stm	sp, {r2, r3}
   153f4:	bl	17138 <table_get_row_length@@Base>
   153f8:	mov	r8, r0
   153fc:	mov	r0, r5
   15400:	mov	r1, r9
   15404:	bl	14258 <table_get_column_compare_function@@Base>
   15408:	mov	r6, r0
   1540c:	ldr	r0, [fp, #8]
   15410:	mvn	sl, #0
   15414:	cmp	r0, #0
   15418:	beq	15460 <table_find_int64@@Base+0x84>
   1541c:	cmp	r8, #1
   15420:	blt	154a4 <table_find_int64@@Base+0xc8>
   15424:	mov	r4, sp
   15428:	sub	r7, r8, #1
   1542c:	mov	r0, r5
   15430:	mov	r2, r9
   15434:	mov	r1, r7
   15438:	bl	16e60 <table_get@@Base>
   1543c:	mov	r1, r0
   15440:	mov	r0, r4
   15444:	blx	r6
   15448:	cmp	r0, #0
   1544c:	beq	154b0 <table_find_int64@@Base+0xd4>
   15450:	cmp	r7, #0
   15454:	mov	r8, r7
   15458:	bgt	15428 <table_find_int64@@Base+0x4c>
   1545c:	b	154a4 <table_find_int64@@Base+0xc8>
   15460:	cmp	r8, #1
   15464:	blt	154a4 <table_find_int64@@Base+0xc8>
   15468:	mov	r4, #0
   1546c:	mov	sl, sp
   15470:	mov	r0, r5
   15474:	mov	r1, r4
   15478:	mov	r2, r9
   1547c:	bl	16e60 <table_get@@Base>
   15480:	mov	r1, r0
   15484:	mov	r0, sl
   15488:	blx	r6
   1548c:	cmp	r0, #0
   15490:	beq	154c0 <table_find_int64@@Base+0xe4>
   15494:	add	r4, r4, #1
   15498:	cmp	r8, r4
   1549c:	bne	15470 <table_find_int64@@Base+0x94>
   154a0:	mvn	sl, #0
   154a4:	mov	r0, sl
   154a8:	sub	sp, fp, #28
   154ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154b0:	sub	sl, r8, #1
   154b4:	mov	r0, sl
   154b8:	sub	sp, fp, #28
   154bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c0:	mov	sl, r4
   154c4:	mov	r0, sl
   154c8:	sub	sp, fp, #28
   154cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000154d0 <table_find_uint64@@Base>:
   154d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154d4:	add	fp, sp, #28
   154d8:	sub	sp, sp, #12
   154dc:	mov	r9, r1
   154e0:	mov	r5, r0
   154e4:	stm	sp, {r2, r3}
   154e8:	bl	17138 <table_get_row_length@@Base>
   154ec:	mov	r8, r0
   154f0:	mov	r0, r5
   154f4:	mov	r1, r9
   154f8:	bl	14258 <table_get_column_compare_function@@Base>
   154fc:	mov	r6, r0
   15500:	ldr	r0, [fp, #8]
   15504:	mvn	sl, #0
   15508:	cmp	r0, #0
   1550c:	beq	15554 <table_find_uint64@@Base+0x84>
   15510:	cmp	r8, #1
   15514:	blt	15598 <table_find_uint64@@Base+0xc8>
   15518:	mov	r4, sp
   1551c:	sub	r7, r8, #1
   15520:	mov	r0, r5
   15524:	mov	r2, r9
   15528:	mov	r1, r7
   1552c:	bl	16e60 <table_get@@Base>
   15530:	mov	r1, r0
   15534:	mov	r0, r4
   15538:	blx	r6
   1553c:	cmp	r0, #0
   15540:	beq	155a4 <table_find_uint64@@Base+0xd4>
   15544:	cmp	r7, #0
   15548:	mov	r8, r7
   1554c:	bgt	1551c <table_find_uint64@@Base+0x4c>
   15550:	b	15598 <table_find_uint64@@Base+0xc8>
   15554:	cmp	r8, #1
   15558:	blt	15598 <table_find_uint64@@Base+0xc8>
   1555c:	mov	r4, #0
   15560:	mov	sl, sp
   15564:	mov	r0, r5
   15568:	mov	r1, r4
   1556c:	mov	r2, r9
   15570:	bl	16e60 <table_get@@Base>
   15574:	mov	r1, r0
   15578:	mov	r0, sl
   1557c:	blx	r6
   15580:	cmp	r0, #0
   15584:	beq	155b4 <table_find_uint64@@Base+0xe4>
   15588:	add	r4, r4, #1
   1558c:	cmp	r8, r4
   15590:	bne	15564 <table_find_uint64@@Base+0x94>
   15594:	mvn	sl, #0
   15598:	mov	r0, sl
   1559c:	sub	sp, fp, #28
   155a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155a4:	sub	sl, r8, #1
   155a8:	mov	r0, sl
   155ac:	sub	sp, fp, #28
   155b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b4:	mov	sl, r4
   155b8:	mov	r0, sl
   155bc:	sub	sp, fp, #28
   155c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000155c4 <table_find_short@@Base>:
   155c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155c8:	add	fp, sp, #28
   155cc:	sub	sp, sp, #4
   155d0:	mov	r4, r3
   155d4:	mov	r9, r1
   155d8:	mov	r5, r0
   155dc:	strh	r2, [sp, #2]
   155e0:	bl	17138 <table_get_row_length@@Base>
   155e4:	mov	r8, r0
   155e8:	mov	r0, r5
   155ec:	mov	r1, r9
   155f0:	bl	14258 <table_get_column_compare_function@@Base>
   155f4:	mov	r6, r0
   155f8:	mvn	sl, #0
   155fc:	cmp	r4, #0
   15600:	beq	15648 <table_find_short@@Base+0x84>
   15604:	cmp	r8, #1
   15608:	blt	1568c <table_find_short@@Base+0xc8>
   1560c:	add	r4, sp, #2
   15610:	sub	r7, r8, #1
   15614:	mov	r0, r5
   15618:	mov	r2, r9
   1561c:	mov	r1, r7
   15620:	bl	16e60 <table_get@@Base>
   15624:	mov	r1, r0
   15628:	mov	r0, r4
   1562c:	blx	r6
   15630:	cmp	r0, #0
   15634:	beq	15698 <table_find_short@@Base+0xd4>
   15638:	cmp	r7, #0
   1563c:	mov	r8, r7
   15640:	bgt	15610 <table_find_short@@Base+0x4c>
   15644:	b	1568c <table_find_short@@Base+0xc8>
   15648:	cmp	r8, #1
   1564c:	blt	1568c <table_find_short@@Base+0xc8>
   15650:	mov	r4, #0
   15654:	add	sl, sp, #2
   15658:	mov	r0, r5
   1565c:	mov	r1, r4
   15660:	mov	r2, r9
   15664:	bl	16e60 <table_get@@Base>
   15668:	mov	r1, r0
   1566c:	mov	r0, sl
   15670:	blx	r6
   15674:	cmp	r0, #0
   15678:	beq	156a8 <table_find_short@@Base+0xe4>
   1567c:	add	r4, r4, #1
   15680:	cmp	r8, r4
   15684:	bne	15658 <table_find_short@@Base+0x94>
   15688:	mvn	sl, #0
   1568c:	mov	r0, sl
   15690:	sub	sp, fp, #28
   15694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15698:	sub	sl, r8, #1
   1569c:	mov	r0, sl
   156a0:	sub	sp, fp, #28
   156a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156a8:	mov	sl, r4
   156ac:	mov	r0, sl
   156b0:	sub	sp, fp, #28
   156b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000156b8 <table_find_ushort@@Base>:
   156b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156bc:	add	fp, sp, #28
   156c0:	sub	sp, sp, #4
   156c4:	mov	r4, r3
   156c8:	mov	r9, r1
   156cc:	mov	r5, r0
   156d0:	strh	r2, [sp, #2]
   156d4:	bl	17138 <table_get_row_length@@Base>
   156d8:	mov	r8, r0
   156dc:	mov	r0, r5
   156e0:	mov	r1, r9
   156e4:	bl	14258 <table_get_column_compare_function@@Base>
   156e8:	mov	r6, r0
   156ec:	mvn	sl, #0
   156f0:	cmp	r4, #0
   156f4:	beq	1573c <table_find_ushort@@Base+0x84>
   156f8:	cmp	r8, #1
   156fc:	blt	15780 <table_find_ushort@@Base+0xc8>
   15700:	add	r4, sp, #2
   15704:	sub	r7, r8, #1
   15708:	mov	r0, r5
   1570c:	mov	r2, r9
   15710:	mov	r1, r7
   15714:	bl	16e60 <table_get@@Base>
   15718:	mov	r1, r0
   1571c:	mov	r0, r4
   15720:	blx	r6
   15724:	cmp	r0, #0
   15728:	beq	1578c <table_find_ushort@@Base+0xd4>
   1572c:	cmp	r7, #0
   15730:	mov	r8, r7
   15734:	bgt	15704 <table_find_ushort@@Base+0x4c>
   15738:	b	15780 <table_find_ushort@@Base+0xc8>
   1573c:	cmp	r8, #1
   15740:	blt	15780 <table_find_ushort@@Base+0xc8>
   15744:	mov	r4, #0
   15748:	add	sl, sp, #2
   1574c:	mov	r0, r5
   15750:	mov	r1, r4
   15754:	mov	r2, r9
   15758:	bl	16e60 <table_get@@Base>
   1575c:	mov	r1, r0
   15760:	mov	r0, sl
   15764:	blx	r6
   15768:	cmp	r0, #0
   1576c:	beq	1579c <table_find_ushort@@Base+0xe4>
   15770:	add	r4, r4, #1
   15774:	cmp	r8, r4
   15778:	bne	1574c <table_find_ushort@@Base+0x94>
   1577c:	mvn	sl, #0
   15780:	mov	r0, sl
   15784:	sub	sp, fp, #28
   15788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1578c:	sub	sl, r8, #1
   15790:	mov	r0, sl
   15794:	sub	sp, fp, #28
   15798:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1579c:	mov	sl, r4
   157a0:	mov	r0, sl
   157a4:	sub	sp, fp, #28
   157a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000157ac <table_find_long@@Base>:
   157ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157b0:	add	fp, sp, #28
   157b4:	sub	sp, sp, #4
   157b8:	mov	r4, r3
   157bc:	mov	r9, r1
   157c0:	mov	r5, r0
   157c4:	str	r2, [sp]
   157c8:	bl	17138 <table_get_row_length@@Base>
   157cc:	mov	r8, r0
   157d0:	mov	r0, r5
   157d4:	mov	r1, r9
   157d8:	bl	14258 <table_get_column_compare_function@@Base>
   157dc:	mov	r6, r0
   157e0:	mvn	sl, #0
   157e4:	cmp	r4, #0
   157e8:	beq	15830 <table_find_long@@Base+0x84>
   157ec:	cmp	r8, #1
   157f0:	blt	15874 <table_find_long@@Base+0xc8>
   157f4:	mov	r4, sp
   157f8:	sub	r7, r8, #1
   157fc:	mov	r0, r5
   15800:	mov	r2, r9
   15804:	mov	r1, r7
   15808:	bl	16e60 <table_get@@Base>
   1580c:	mov	r1, r0
   15810:	mov	r0, r4
   15814:	blx	r6
   15818:	cmp	r0, #0
   1581c:	beq	15880 <table_find_long@@Base+0xd4>
   15820:	cmp	r7, #0
   15824:	mov	r8, r7
   15828:	bgt	157f8 <table_find_long@@Base+0x4c>
   1582c:	b	15874 <table_find_long@@Base+0xc8>
   15830:	cmp	r8, #1
   15834:	blt	15874 <table_find_long@@Base+0xc8>
   15838:	mov	r4, #0
   1583c:	mov	sl, sp
   15840:	mov	r0, r5
   15844:	mov	r1, r4
   15848:	mov	r2, r9
   1584c:	bl	16e60 <table_get@@Base>
   15850:	mov	r1, r0
   15854:	mov	r0, sl
   15858:	blx	r6
   1585c:	cmp	r0, #0
   15860:	beq	15890 <table_find_long@@Base+0xe4>
   15864:	add	r4, r4, #1
   15868:	cmp	r8, r4
   1586c:	bne	15840 <table_find_long@@Base+0x94>
   15870:	mvn	sl, #0
   15874:	mov	r0, sl
   15878:	sub	sp, fp, #28
   1587c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15880:	sub	sl, r8, #1
   15884:	mov	r0, sl
   15888:	sub	sp, fp, #28
   1588c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15890:	mov	sl, r4
   15894:	mov	r0, sl
   15898:	sub	sp, fp, #28
   1589c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158a0 <table_find_ulong@@Base>:
   158a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a4:	add	fp, sp, #28
   158a8:	sub	sp, sp, #4
   158ac:	mov	r4, r3
   158b0:	mov	r9, r1
   158b4:	mov	r5, r0
   158b8:	str	r2, [sp]
   158bc:	bl	17138 <table_get_row_length@@Base>
   158c0:	mov	r8, r0
   158c4:	mov	r0, r5
   158c8:	mov	r1, r9
   158cc:	bl	14258 <table_get_column_compare_function@@Base>
   158d0:	mov	r6, r0
   158d4:	mvn	sl, #0
   158d8:	cmp	r4, #0
   158dc:	beq	15924 <table_find_ulong@@Base+0x84>
   158e0:	cmp	r8, #1
   158e4:	blt	15968 <table_find_ulong@@Base+0xc8>
   158e8:	mov	r4, sp
   158ec:	sub	r7, r8, #1
   158f0:	mov	r0, r5
   158f4:	mov	r2, r9
   158f8:	mov	r1, r7
   158fc:	bl	16e60 <table_get@@Base>
   15900:	mov	r1, r0
   15904:	mov	r0, r4
   15908:	blx	r6
   1590c:	cmp	r0, #0
   15910:	beq	15974 <table_find_ulong@@Base+0xd4>
   15914:	cmp	r7, #0
   15918:	mov	r8, r7
   1591c:	bgt	158ec <table_find_ulong@@Base+0x4c>
   15920:	b	15968 <table_find_ulong@@Base+0xc8>
   15924:	cmp	r8, #1
   15928:	blt	15968 <table_find_ulong@@Base+0xc8>
   1592c:	mov	r4, #0
   15930:	mov	sl, sp
   15934:	mov	r0, r5
   15938:	mov	r1, r4
   1593c:	mov	r2, r9
   15940:	bl	16e60 <table_get@@Base>
   15944:	mov	r1, r0
   15948:	mov	r0, sl
   1594c:	blx	r6
   15950:	cmp	r0, #0
   15954:	beq	15984 <table_find_ulong@@Base+0xe4>
   15958:	add	r4, r4, #1
   1595c:	cmp	r8, r4
   15960:	bne	15934 <table_find_ulong@@Base+0x94>
   15964:	mvn	sl, #0
   15968:	mov	r0, sl
   1596c:	sub	sp, fp, #28
   15970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15974:	sub	sl, r8, #1
   15978:	mov	r0, sl
   1597c:	sub	sp, fp, #28
   15980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15984:	mov	sl, r4
   15988:	mov	r0, sl
   1598c:	sub	sp, fp, #28
   15990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015994 <table_find_llong@@Base>:
   15994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15998:	add	fp, sp, #28
   1599c:	sub	sp, sp, #12
   159a0:	mov	r9, r1
   159a4:	mov	r5, r0
   159a8:	stm	sp, {r2, r3}
   159ac:	bl	17138 <table_get_row_length@@Base>
   159b0:	mov	r8, r0
   159b4:	mov	r0, r5
   159b8:	mov	r1, r9
   159bc:	bl	14258 <table_get_column_compare_function@@Base>
   159c0:	mov	r6, r0
   159c4:	ldr	r0, [fp, #8]
   159c8:	mvn	sl, #0
   159cc:	cmp	r0, #0
   159d0:	beq	15a18 <table_find_llong@@Base+0x84>
   159d4:	cmp	r8, #1
   159d8:	blt	15a5c <table_find_llong@@Base+0xc8>
   159dc:	mov	r4, sp
   159e0:	sub	r7, r8, #1
   159e4:	mov	r0, r5
   159e8:	mov	r2, r9
   159ec:	mov	r1, r7
   159f0:	bl	16e60 <table_get@@Base>
   159f4:	mov	r1, r0
   159f8:	mov	r0, r4
   159fc:	blx	r6
   15a00:	cmp	r0, #0
   15a04:	beq	15a68 <table_find_llong@@Base+0xd4>
   15a08:	cmp	r7, #0
   15a0c:	mov	r8, r7
   15a10:	bgt	159e0 <table_find_llong@@Base+0x4c>
   15a14:	b	15a5c <table_find_llong@@Base+0xc8>
   15a18:	cmp	r8, #1
   15a1c:	blt	15a5c <table_find_llong@@Base+0xc8>
   15a20:	mov	r4, #0
   15a24:	mov	sl, sp
   15a28:	mov	r0, r5
   15a2c:	mov	r1, r4
   15a30:	mov	r2, r9
   15a34:	bl	16e60 <table_get@@Base>
   15a38:	mov	r1, r0
   15a3c:	mov	r0, sl
   15a40:	blx	r6
   15a44:	cmp	r0, #0
   15a48:	beq	15a78 <table_find_llong@@Base+0xe4>
   15a4c:	add	r4, r4, #1
   15a50:	cmp	r8, r4
   15a54:	bne	15a28 <table_find_llong@@Base+0x94>
   15a58:	mvn	sl, #0
   15a5c:	mov	r0, sl
   15a60:	sub	sp, fp, #28
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a68:	sub	sl, r8, #1
   15a6c:	mov	r0, sl
   15a70:	sub	sp, fp, #28
   15a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a78:	mov	sl, r4
   15a7c:	mov	r0, sl
   15a80:	sub	sp, fp, #28
   15a84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a88 <table_find_ullong@@Base>:
   15a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a8c:	add	fp, sp, #28
   15a90:	sub	sp, sp, #12
   15a94:	mov	r9, r1
   15a98:	mov	r5, r0
   15a9c:	stm	sp, {r2, r3}
   15aa0:	bl	17138 <table_get_row_length@@Base>
   15aa4:	mov	r8, r0
   15aa8:	mov	r0, r5
   15aac:	mov	r1, r9
   15ab0:	bl	14258 <table_get_column_compare_function@@Base>
   15ab4:	mov	r6, r0
   15ab8:	ldr	r0, [fp, #8]
   15abc:	mvn	sl, #0
   15ac0:	cmp	r0, #0
   15ac4:	beq	15b0c <table_find_ullong@@Base+0x84>
   15ac8:	cmp	r8, #1
   15acc:	blt	15b50 <table_find_ullong@@Base+0xc8>
   15ad0:	mov	r4, sp
   15ad4:	sub	r7, r8, #1
   15ad8:	mov	r0, r5
   15adc:	mov	r2, r9
   15ae0:	mov	r1, r7
   15ae4:	bl	16e60 <table_get@@Base>
   15ae8:	mov	r1, r0
   15aec:	mov	r0, r4
   15af0:	blx	r6
   15af4:	cmp	r0, #0
   15af8:	beq	15b5c <table_find_ullong@@Base+0xd4>
   15afc:	cmp	r7, #0
   15b00:	mov	r8, r7
   15b04:	bgt	15ad4 <table_find_ullong@@Base+0x4c>
   15b08:	b	15b50 <table_find_ullong@@Base+0xc8>
   15b0c:	cmp	r8, #1
   15b10:	blt	15b50 <table_find_ullong@@Base+0xc8>
   15b14:	mov	r4, #0
   15b18:	mov	sl, sp
   15b1c:	mov	r0, r5
   15b20:	mov	r1, r4
   15b24:	mov	r2, r9
   15b28:	bl	16e60 <table_get@@Base>
   15b2c:	mov	r1, r0
   15b30:	mov	r0, sl
   15b34:	blx	r6
   15b38:	cmp	r0, #0
   15b3c:	beq	15b6c <table_find_ullong@@Base+0xe4>
   15b40:	add	r4, r4, #1
   15b44:	cmp	r8, r4
   15b48:	bne	15b1c <table_find_ullong@@Base+0x94>
   15b4c:	mvn	sl, #0
   15b50:	mov	r0, sl
   15b54:	sub	sp, fp, #28
   15b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b5c:	sub	sl, r8, #1
   15b60:	mov	r0, sl
   15b64:	sub	sp, fp, #28
   15b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b6c:	mov	sl, r4
   15b70:	mov	r0, sl
   15b74:	sub	sp, fp, #28
   15b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015b7c <table_find_float@@Base>:
   15b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b80:	add	fp, sp, #28
   15b84:	sub	sp, sp, #4
   15b88:	mov	r4, r2
   15b8c:	mov	r9, r1
   15b90:	mov	r5, r0
   15b94:	vstr	s0, [sp]
   15b98:	bl	17138 <table_get_row_length@@Base>
   15b9c:	mov	r8, r0
   15ba0:	mov	r0, r5
   15ba4:	mov	r1, r9
   15ba8:	bl	14258 <table_get_column_compare_function@@Base>
   15bac:	mov	r6, r0
   15bb0:	mvn	sl, #0
   15bb4:	cmp	r4, #0
   15bb8:	beq	15c00 <table_find_float@@Base+0x84>
   15bbc:	cmp	r8, #1
   15bc0:	blt	15c44 <table_find_float@@Base+0xc8>
   15bc4:	mov	r4, sp
   15bc8:	sub	r7, r8, #1
   15bcc:	mov	r0, r5
   15bd0:	mov	r2, r9
   15bd4:	mov	r1, r7
   15bd8:	bl	16e60 <table_get@@Base>
   15bdc:	mov	r1, r0
   15be0:	mov	r0, r4
   15be4:	blx	r6
   15be8:	cmp	r0, #0
   15bec:	beq	15c50 <table_find_float@@Base+0xd4>
   15bf0:	cmp	r7, #0
   15bf4:	mov	r8, r7
   15bf8:	bgt	15bc8 <table_find_float@@Base+0x4c>
   15bfc:	b	15c44 <table_find_float@@Base+0xc8>
   15c00:	cmp	r8, #1
   15c04:	blt	15c44 <table_find_float@@Base+0xc8>
   15c08:	mov	r4, #0
   15c0c:	mov	sl, sp
   15c10:	mov	r0, r5
   15c14:	mov	r1, r4
   15c18:	mov	r2, r9
   15c1c:	bl	16e60 <table_get@@Base>
   15c20:	mov	r1, r0
   15c24:	mov	r0, sl
   15c28:	blx	r6
   15c2c:	cmp	r0, #0
   15c30:	beq	15c60 <table_find_float@@Base+0xe4>
   15c34:	add	r4, r4, #1
   15c38:	cmp	r8, r4
   15c3c:	bne	15c10 <table_find_float@@Base+0x94>
   15c40:	mvn	sl, #0
   15c44:	mov	r0, sl
   15c48:	sub	sp, fp, #28
   15c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c50:	sub	sl, r8, #1
   15c54:	mov	r0, sl
   15c58:	sub	sp, fp, #28
   15c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c60:	mov	sl, r4
   15c64:	mov	r0, sl
   15c68:	sub	sp, fp, #28
   15c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015c70 <table_find_double@@Base>:
   15c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c74:	add	fp, sp, #28
   15c78:	sub	sp, sp, #12
   15c7c:	mov	r4, r2
   15c80:	mov	r9, r1
   15c84:	mov	r5, r0
   15c88:	vstr	d0, [sp]
   15c8c:	bl	17138 <table_get_row_length@@Base>
   15c90:	mov	r8, r0
   15c94:	mov	r0, r5
   15c98:	mov	r1, r9
   15c9c:	bl	14258 <table_get_column_compare_function@@Base>
   15ca0:	mov	r6, r0
   15ca4:	mvn	sl, #0
   15ca8:	cmp	r4, #0
   15cac:	beq	15cf4 <table_find_double@@Base+0x84>
   15cb0:	cmp	r8, #1
   15cb4:	blt	15d38 <table_find_double@@Base+0xc8>
   15cb8:	mov	r4, sp
   15cbc:	sub	r7, r8, #1
   15cc0:	mov	r0, r5
   15cc4:	mov	r2, r9
   15cc8:	mov	r1, r7
   15ccc:	bl	16e60 <table_get@@Base>
   15cd0:	mov	r1, r0
   15cd4:	mov	r0, r4
   15cd8:	blx	r6
   15cdc:	cmp	r0, #0
   15ce0:	beq	15d44 <table_find_double@@Base+0xd4>
   15ce4:	cmp	r7, #0
   15ce8:	mov	r8, r7
   15cec:	bgt	15cbc <table_find_double@@Base+0x4c>
   15cf0:	b	15d38 <table_find_double@@Base+0xc8>
   15cf4:	cmp	r8, #1
   15cf8:	blt	15d38 <table_find_double@@Base+0xc8>
   15cfc:	mov	r4, #0
   15d00:	mov	sl, sp
   15d04:	mov	r0, r5
   15d08:	mov	r1, r4
   15d0c:	mov	r2, r9
   15d10:	bl	16e60 <table_get@@Base>
   15d14:	mov	r1, r0
   15d18:	mov	r0, sl
   15d1c:	blx	r6
   15d20:	cmp	r0, #0
   15d24:	beq	15d54 <table_find_double@@Base+0xe4>
   15d28:	add	r4, r4, #1
   15d2c:	cmp	r8, r4
   15d30:	bne	15d04 <table_find_double@@Base+0x94>
   15d34:	mvn	sl, #0
   15d38:	mov	r0, sl
   15d3c:	sub	sp, fp, #28
   15d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d44:	sub	sl, r8, #1
   15d48:	mov	r0, sl
   15d4c:	sub	sp, fp, #28
   15d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d54:	mov	sl, r4
   15d58:	mov	r0, sl
   15d5c:	sub	sp, fp, #28
   15d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d64 <table_find_ldouble@@Base>:
   15d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d68:	add	fp, sp, #28
   15d6c:	sub	sp, sp, #12
   15d70:	mov	r4, r2
   15d74:	mov	r9, r1
   15d78:	mov	r5, r0
   15d7c:	vstr	d0, [sp]
   15d80:	bl	17138 <table_get_row_length@@Base>
   15d84:	mov	r8, r0
   15d88:	mov	r0, r5
   15d8c:	mov	r1, r9
   15d90:	bl	14258 <table_get_column_compare_function@@Base>
   15d94:	mov	r6, r0
   15d98:	mvn	sl, #0
   15d9c:	cmp	r4, #0
   15da0:	beq	15de8 <table_find_ldouble@@Base+0x84>
   15da4:	cmp	r8, #1
   15da8:	blt	15e2c <table_find_ldouble@@Base+0xc8>
   15dac:	mov	r4, sp
   15db0:	sub	r7, r8, #1
   15db4:	mov	r0, r5
   15db8:	mov	r2, r9
   15dbc:	mov	r1, r7
   15dc0:	bl	16e60 <table_get@@Base>
   15dc4:	mov	r1, r0
   15dc8:	mov	r0, r4
   15dcc:	blx	r6
   15dd0:	cmp	r0, #0
   15dd4:	beq	15e38 <table_find_ldouble@@Base+0xd4>
   15dd8:	cmp	r7, #0
   15ddc:	mov	r8, r7
   15de0:	bgt	15db0 <table_find_ldouble@@Base+0x4c>
   15de4:	b	15e2c <table_find_ldouble@@Base+0xc8>
   15de8:	cmp	r8, #1
   15dec:	blt	15e2c <table_find_ldouble@@Base+0xc8>
   15df0:	mov	r4, #0
   15df4:	mov	sl, sp
   15df8:	mov	r0, r5
   15dfc:	mov	r1, r4
   15e00:	mov	r2, r9
   15e04:	bl	16e60 <table_get@@Base>
   15e08:	mov	r1, r0
   15e0c:	mov	r0, sl
   15e10:	blx	r6
   15e14:	cmp	r0, #0
   15e18:	beq	15e48 <table_find_ldouble@@Base+0xe4>
   15e1c:	add	r4, r4, #1
   15e20:	cmp	r8, r4
   15e24:	bne	15df8 <table_find_ldouble@@Base+0x94>
   15e28:	mvn	sl, #0
   15e2c:	mov	r0, sl
   15e30:	sub	sp, fp, #28
   15e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e38:	sub	sl, r8, #1
   15e3c:	mov	r0, sl
   15e40:	sub	sp, fp, #28
   15e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e48:	mov	sl, r4
   15e4c:	mov	r0, sl
   15e50:	sub	sp, fp, #28
   15e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015e58 <table_find_char@@Base>:
   15e58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e5c:	add	fp, sp, #28
   15e60:	sub	sp, sp, #4
   15e64:	mov	r4, r3
   15e68:	mov	r9, r1
   15e6c:	mov	r5, r0
   15e70:	strb	r2, [sp, #3]
   15e74:	bl	17138 <table_get_row_length@@Base>
   15e78:	mov	r8, r0
   15e7c:	mov	r0, r5
   15e80:	mov	r1, r9
   15e84:	bl	14258 <table_get_column_compare_function@@Base>
   15e88:	mov	r6, r0
   15e8c:	mvn	sl, #0
   15e90:	cmp	r4, #0
   15e94:	beq	15edc <table_find_char@@Base+0x84>
   15e98:	cmp	r8, #1
   15e9c:	blt	15f20 <table_find_char@@Base+0xc8>
   15ea0:	add	r4, sp, #3
   15ea4:	sub	r7, r8, #1
   15ea8:	mov	r0, r5
   15eac:	mov	r2, r9
   15eb0:	mov	r1, r7
   15eb4:	bl	16e60 <table_get@@Base>
   15eb8:	mov	r1, r0
   15ebc:	mov	r0, r4
   15ec0:	blx	r6
   15ec4:	cmp	r0, #0
   15ec8:	beq	15f2c <table_find_char@@Base+0xd4>
   15ecc:	cmp	r7, #0
   15ed0:	mov	r8, r7
   15ed4:	bgt	15ea4 <table_find_char@@Base+0x4c>
   15ed8:	b	15f20 <table_find_char@@Base+0xc8>
   15edc:	cmp	r8, #1
   15ee0:	blt	15f20 <table_find_char@@Base+0xc8>
   15ee4:	mov	r4, #0
   15ee8:	add	sl, sp, #3
   15eec:	mov	r0, r5
   15ef0:	mov	r1, r4
   15ef4:	mov	r2, r9
   15ef8:	bl	16e60 <table_get@@Base>
   15efc:	mov	r1, r0
   15f00:	mov	r0, sl
   15f04:	blx	r6
   15f08:	cmp	r0, #0
   15f0c:	beq	15f3c <table_find_char@@Base+0xe4>
   15f10:	add	r4, r4, #1
   15f14:	cmp	r8, r4
   15f18:	bne	15eec <table_find_char@@Base+0x94>
   15f1c:	mvn	sl, #0
   15f20:	mov	r0, sl
   15f24:	sub	sp, fp, #28
   15f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f2c:	sub	sl, r8, #1
   15f30:	mov	r0, sl
   15f34:	sub	sp, fp, #28
   15f38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f3c:	mov	sl, r4
   15f40:	mov	r0, sl
   15f44:	sub	sp, fp, #28
   15f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f4c <table_find_uchar@@Base>:
   15f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f50:	add	fp, sp, #28
   15f54:	sub	sp, sp, #4
   15f58:	mov	r4, r3
   15f5c:	mov	r9, r1
   15f60:	mov	r5, r0
   15f64:	strb	r2, [sp, #3]
   15f68:	bl	17138 <table_get_row_length@@Base>
   15f6c:	mov	r8, r0
   15f70:	mov	r0, r5
   15f74:	mov	r1, r9
   15f78:	bl	14258 <table_get_column_compare_function@@Base>
   15f7c:	mov	r6, r0
   15f80:	mvn	sl, #0
   15f84:	cmp	r4, #0
   15f88:	beq	15fd0 <table_find_uchar@@Base+0x84>
   15f8c:	cmp	r8, #1
   15f90:	blt	16014 <table_find_uchar@@Base+0xc8>
   15f94:	add	r4, sp, #3
   15f98:	sub	r7, r8, #1
   15f9c:	mov	r0, r5
   15fa0:	mov	r2, r9
   15fa4:	mov	r1, r7
   15fa8:	bl	16e60 <table_get@@Base>
   15fac:	mov	r1, r0
   15fb0:	mov	r0, r4
   15fb4:	blx	r6
   15fb8:	cmp	r0, #0
   15fbc:	beq	16020 <table_find_uchar@@Base+0xd4>
   15fc0:	cmp	r7, #0
   15fc4:	mov	r8, r7
   15fc8:	bgt	15f98 <table_find_uchar@@Base+0x4c>
   15fcc:	b	16014 <table_find_uchar@@Base+0xc8>
   15fd0:	cmp	r8, #1
   15fd4:	blt	16014 <table_find_uchar@@Base+0xc8>
   15fd8:	mov	r4, #0
   15fdc:	add	sl, sp, #3
   15fe0:	mov	r0, r5
   15fe4:	mov	r1, r4
   15fe8:	mov	r2, r9
   15fec:	bl	16e60 <table_get@@Base>
   15ff0:	mov	r1, r0
   15ff4:	mov	r0, sl
   15ff8:	blx	r6
   15ffc:	cmp	r0, #0
   16000:	beq	16030 <table_find_uchar@@Base+0xe4>
   16004:	add	r4, r4, #1
   16008:	cmp	r8, r4
   1600c:	bne	15fe0 <table_find_uchar@@Base+0x94>
   16010:	mvn	sl, #0
   16014:	mov	r0, sl
   16018:	sub	sp, fp, #28
   1601c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16020:	sub	sl, r8, #1
   16024:	mov	r0, sl
   16028:	sub	sp, fp, #28
   1602c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16030:	mov	sl, r4
   16034:	mov	r0, sl
   16038:	sub	sp, fp, #28
   1603c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016040 <table_find_string@@Base>:
   16040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16044:	add	fp, sp, #28
   16048:	sub	sp, sp, #4
   1604c:	mov	r4, r3
   16050:	mov	r9, r1
   16054:	mov	r5, r0
   16058:	str	r2, [sp]
   1605c:	bl	17138 <table_get_row_length@@Base>
   16060:	mov	r8, r0
   16064:	mov	r0, r5
   16068:	mov	r1, r9
   1606c:	bl	14258 <table_get_column_compare_function@@Base>
   16070:	mov	r6, r0
   16074:	mvn	sl, #0
   16078:	cmp	r4, #0
   1607c:	beq	160c4 <table_find_string@@Base+0x84>
   16080:	cmp	r8, #1
   16084:	blt	16108 <table_find_string@@Base+0xc8>
   16088:	mov	r4, sp
   1608c:	sub	r7, r8, #1
   16090:	mov	r0, r5
   16094:	mov	r2, r9
   16098:	mov	r1, r7
   1609c:	bl	16e60 <table_get@@Base>
   160a0:	mov	r1, r0
   160a4:	mov	r0, r4
   160a8:	blx	r6
   160ac:	cmp	r0, #0
   160b0:	beq	16114 <table_find_string@@Base+0xd4>
   160b4:	cmp	r7, #0
   160b8:	mov	r8, r7
   160bc:	bgt	1608c <table_find_string@@Base+0x4c>
   160c0:	b	16108 <table_find_string@@Base+0xc8>
   160c4:	cmp	r8, #1
   160c8:	blt	16108 <table_find_string@@Base+0xc8>
   160cc:	mov	r4, #0
   160d0:	mov	sl, sp
   160d4:	mov	r0, r5
   160d8:	mov	r1, r4
   160dc:	mov	r2, r9
   160e0:	bl	16e60 <table_get@@Base>
   160e4:	mov	r1, r0
   160e8:	mov	r0, sl
   160ec:	blx	r6
   160f0:	cmp	r0, #0
   160f4:	beq	16124 <table_find_string@@Base+0xe4>
   160f8:	add	r4, r4, #1
   160fc:	cmp	r8, r4
   16100:	bne	160d4 <table_find_string@@Base+0x94>
   16104:	mvn	sl, #0
   16108:	mov	r0, sl
   1610c:	sub	sp, fp, #28
   16110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16114:	sub	sl, r8, #1
   16118:	mov	r0, sl
   1611c:	sub	sp, fp, #28
   16120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16124:	mov	sl, r4
   16128:	mov	r0, sl
   1612c:	sub	sp, fp, #28
   16130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016134 <table_find_ptr@@Base>:
   16134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16138:	add	fp, sp, #28
   1613c:	sub	sp, sp, #4
   16140:	mov	r5, r3
   16144:	mov	r9, r2
   16148:	mov	sl, r1
   1614c:	mov	r6, r0
   16150:	bl	17138 <table_get_row_length@@Base>
   16154:	mov	r7, r0
   16158:	mov	r0, r6
   1615c:	mov	r1, sl
   16160:	bl	14258 <table_get_column_compare_function@@Base>
   16164:	mov	r4, r0
   16168:	mvn	r8, #0
   1616c:	cmp	r5, #0
   16170:	beq	161b4 <table_find_ptr@@Base+0x80>
   16174:	cmp	r7, #1
   16178:	blt	161f0 <table_find_ptr@@Base+0xbc>
   1617c:	sub	r5, r7, #1
   16180:	mov	r0, r6
   16184:	mov	r2, sl
   16188:	mov	r1, r5
   1618c:	bl	16e60 <table_get@@Base>
   16190:	mov	r1, r0
   16194:	mov	r0, r9
   16198:	blx	r4
   1619c:	cmp	r0, #0
   161a0:	beq	161fc <table_find_ptr@@Base+0xc8>
   161a4:	cmp	r5, #0
   161a8:	mov	r7, r5
   161ac:	bgt	1617c <table_find_ptr@@Base+0x48>
   161b0:	b	161f0 <table_find_ptr@@Base+0xbc>
   161b4:	cmp	r7, #1
   161b8:	blt	161f0 <table_find_ptr@@Base+0xbc>
   161bc:	mov	r5, #0
   161c0:	mov	r0, r6
   161c4:	mov	r1, r5
   161c8:	mov	r2, sl
   161cc:	bl	16e60 <table_get@@Base>
   161d0:	mov	r1, r0
   161d4:	mov	r0, r9
   161d8:	blx	r4
   161dc:	cmp	r0, #0
   161e0:	beq	1620c <table_find_ptr@@Base+0xd8>
   161e4:	add	r5, r5, #1
   161e8:	cmp	r7, r5
   161ec:	bne	161c0 <table_find_ptr@@Base+0x8c>
   161f0:	mov	r0, r8
   161f4:	sub	sp, fp, #28
   161f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161fc:	sub	r8, r7, #1
   16200:	mov	r0, r8
   16204:	sub	sp, fp, #28
   16208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1620c:	mov	r8, r5
   16210:	mov	r0, r8
   16214:	sub	sp, fp, #28
   16218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001621c <table_sorted_find@@Base>:
   1621c:	push	{r4, r5, r6, r7, fp, lr}
   16220:	add	fp, sp, #16
   16224:	sub	sp, sp, #8
   16228:	mov	r4, r3
   1622c:	mov	r5, r2
   16230:	mov	r6, r1
   16234:	mov	r7, r0
   16238:	bl	17138 <table_get_row_length@@Base>
   1623c:	sub	r0, r0, #1
   16240:	mov	r1, #0
   16244:	mov	r2, r5
   16248:	mov	r3, r4
   1624c:	str	r1, [sp]
   16250:	str	r0, [sp, #4]
   16254:	mov	r0, r7
   16258:	mov	r1, r6
   1625c:	bl	16268 <table_sorted_subset_find@@Base>
   16260:	sub	sp, fp, #16
   16264:	pop	{r4, r5, r6, r7, fp, pc}

00016268 <table_sorted_subset_find@@Base>:
   16268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1626c:	add	fp, sp, #28
   16270:	push	{r3}		; (str r3, [sp, #-4]!)
   16274:	ldr	r6, [fp, #12]
   16278:	ldr	r8, [fp, #8]
   1627c:	mov	r9, r2
   16280:	mov	sl, r1
   16284:	mov	r7, r0
   16288:	mov	r0, r7
   1628c:	mov	r1, sl
   16290:	bl	14258 <table_get_column_compare_function@@Base>
   16294:	mov	r5, r0
   16298:	sub	r0, r6, r8
   1629c:	mov	r2, sl
   162a0:	add	r0, r0, r0, lsr #31
   162a4:	add	r4, r8, r0, asr #1
   162a8:	mov	r0, r7
   162ac:	mov	r1, r4
   162b0:	bl	16e60 <table_get@@Base>
   162b4:	mov	r1, r0
   162b8:	mov	r0, r9
   162bc:	blx	r5
   162c0:	cmp	r6, r8
   162c4:	blt	1635c <table_sorted_subset_find@@Base+0xf4>
   162c8:	cmn	r0, #1
   162cc:	bne	162d8 <table_sorted_subset_find@@Base+0x70>
   162d0:	sub	r6, r4, #1
   162d4:	b	16288 <table_sorted_subset_find@@Base+0x20>
   162d8:	cmp	r0, #1
   162dc:	bne	162e8 <table_sorted_subset_find@@Base+0x80>
   162e0:	mov	r8, r4
   162e4:	b	16288 <table_sorted_subset_find@@Base+0x20>
   162e8:	cmp	r0, #0
   162ec:	bne	1635c <table_sorted_subset_find@@Base+0xf4>
   162f0:	ldr	r6, [sp]
   162f4:	cmp	r6, #0
   162f8:	beq	16324 <table_sorted_subset_find@@Base+0xbc>
   162fc:	add	r4, r4, #1
   16300:	mov	r0, r7
   16304:	mov	r2, sl
   16308:	mov	r1, r4
   1630c:	bl	16e60 <table_get@@Base>
   16310:	mov	r1, r9
   16314:	blx	r5
   16318:	cmp	r0, #0
   1631c:	beq	162fc <table_sorted_subset_find@@Base+0x94>
   16320:	b	16348 <table_sorted_subset_find@@Base+0xe0>
   16324:	sub	r4, r4, #1
   16328:	mov	r0, r7
   1632c:	mov	r2, sl
   16330:	mov	r1, r4
   16334:	bl	16e60 <table_get@@Base>
   16338:	mov	r1, r9
   1633c:	blx	r5
   16340:	cmp	r0, #0
   16344:	beq	16324 <table_sorted_subset_find@@Base+0xbc>
   16348:	cmp	r6, #0
   1634c:	addeq	r0, r4, #1
   16350:	subne	r0, r4, #1
   16354:	sub	sp, fp, #28
   16358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1635c:	rsb	r0, r4, #0
   16360:	sub	sp, fp, #28
   16364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016368 <table_sorted_find_int@@Base>:
   16368:	push	{r4, r5, r6, sl, fp, lr}
   1636c:	add	fp, sp, #16
   16370:	sub	sp, sp, #16
   16374:	mov	r4, r3
   16378:	mov	r5, r1
   1637c:	mov	r6, r0
   16380:	str	r2, [sp, #12]
   16384:	bl	17138 <table_get_row_length@@Base>
   16388:	sub	r0, r0, #1
   1638c:	mov	r1, #0
   16390:	add	r2, sp, #12
   16394:	mov	r3, r4
   16398:	str	r1, [sp]
   1639c:	str	r0, [sp, #4]
   163a0:	mov	r0, r6
   163a4:	mov	r1, r5
   163a8:	bl	16268 <table_sorted_subset_find@@Base>
   163ac:	sub	sp, fp, #16
   163b0:	pop	{r4, r5, r6, sl, fp, pc}

000163b4 <table_sorted_find_uint@@Base>:
   163b4:	push	{r4, r5, r6, sl, fp, lr}
   163b8:	add	fp, sp, #16
   163bc:	sub	sp, sp, #16
   163c0:	mov	r4, r3
   163c4:	mov	r5, r1
   163c8:	mov	r6, r0
   163cc:	str	r2, [sp, #12]
   163d0:	bl	17138 <table_get_row_length@@Base>
   163d4:	sub	r0, r0, #1
   163d8:	mov	r1, #0
   163dc:	add	r2, sp, #12
   163e0:	mov	r3, r4
   163e4:	str	r1, [sp]
   163e8:	str	r0, [sp, #4]
   163ec:	mov	r0, r6
   163f0:	mov	r1, r5
   163f4:	bl	16268 <table_sorted_subset_find@@Base>
   163f8:	sub	sp, fp, #16
   163fc:	pop	{r4, r5, r6, sl, fp, pc}

00016400 <table_sorted_find_int8@@Base>:
   16400:	push	{r4, r5, r6, sl, fp, lr}
   16404:	add	fp, sp, #16
   16408:	sub	sp, sp, #16
   1640c:	mov	r4, r3
   16410:	mov	r5, r1
   16414:	mov	r6, r0
   16418:	strb	r2, [sp, #15]
   1641c:	bl	17138 <table_get_row_length@@Base>
   16420:	sub	r0, r0, #1
   16424:	mov	r1, #0
   16428:	add	r2, sp, #15
   1642c:	mov	r3, r4
   16430:	str	r1, [sp]
   16434:	str	r0, [sp, #4]
   16438:	mov	r0, r6
   1643c:	mov	r1, r5
   16440:	bl	16268 <table_sorted_subset_find@@Base>
   16444:	sub	sp, fp, #16
   16448:	pop	{r4, r5, r6, sl, fp, pc}

0001644c <table_sorted_find_uint8@@Base>:
   1644c:	push	{r4, r5, r6, sl, fp, lr}
   16450:	add	fp, sp, #16
   16454:	sub	sp, sp, #16
   16458:	mov	r4, r3
   1645c:	mov	r5, r1
   16460:	mov	r6, r0
   16464:	strb	r2, [sp, #15]
   16468:	bl	17138 <table_get_row_length@@Base>
   1646c:	sub	r0, r0, #1
   16470:	mov	r1, #0
   16474:	add	r2, sp, #15
   16478:	mov	r3, r4
   1647c:	str	r1, [sp]
   16480:	str	r0, [sp, #4]
   16484:	mov	r0, r6
   16488:	mov	r1, r5
   1648c:	bl	16268 <table_sorted_subset_find@@Base>
   16490:	sub	sp, fp, #16
   16494:	pop	{r4, r5, r6, sl, fp, pc}

00016498 <table_sorted_find_int16@@Base>:
   16498:	push	{r4, r5, r6, sl, fp, lr}
   1649c:	add	fp, sp, #16
   164a0:	sub	sp, sp, #16
   164a4:	mov	r4, r3
   164a8:	mov	r5, r1
   164ac:	mov	r6, r0
   164b0:	strh	r2, [sp, #14]
   164b4:	bl	17138 <table_get_row_length@@Base>
   164b8:	sub	r0, r0, #1
   164bc:	mov	r1, #0
   164c0:	add	r2, sp, #14
   164c4:	mov	r3, r4
   164c8:	str	r1, [sp]
   164cc:	str	r0, [sp, #4]
   164d0:	mov	r0, r6
   164d4:	mov	r1, r5
   164d8:	bl	16268 <table_sorted_subset_find@@Base>
   164dc:	sub	sp, fp, #16
   164e0:	pop	{r4, r5, r6, sl, fp, pc}

000164e4 <table_sorted_find_uint16@@Base>:
   164e4:	push	{r4, r5, r6, sl, fp, lr}
   164e8:	add	fp, sp, #16
   164ec:	sub	sp, sp, #16
   164f0:	mov	r4, r3
   164f4:	mov	r5, r1
   164f8:	mov	r6, r0
   164fc:	strh	r2, [sp, #14]
   16500:	bl	17138 <table_get_row_length@@Base>
   16504:	sub	r0, r0, #1
   16508:	mov	r1, #0
   1650c:	add	r2, sp, #14
   16510:	mov	r3, r4
   16514:	str	r1, [sp]
   16518:	str	r0, [sp, #4]
   1651c:	mov	r0, r6
   16520:	mov	r1, r5
   16524:	bl	16268 <table_sorted_subset_find@@Base>
   16528:	sub	sp, fp, #16
   1652c:	pop	{r4, r5, r6, sl, fp, pc}

00016530 <table_sorted_find_int32@@Base>:
   16530:	push	{r4, r5, r6, sl, fp, lr}
   16534:	add	fp, sp, #16
   16538:	sub	sp, sp, #16
   1653c:	mov	r4, r3
   16540:	mov	r5, r1
   16544:	mov	r6, r0
   16548:	str	r2, [sp, #12]
   1654c:	bl	17138 <table_get_row_length@@Base>
   16550:	sub	r0, r0, #1
   16554:	mov	r1, #0
   16558:	add	r2, sp, #12
   1655c:	mov	r3, r4
   16560:	str	r1, [sp]
   16564:	str	r0, [sp, #4]
   16568:	mov	r0, r6
   1656c:	mov	r1, r5
   16570:	bl	16268 <table_sorted_subset_find@@Base>
   16574:	sub	sp, fp, #16
   16578:	pop	{r4, r5, r6, sl, fp, pc}

0001657c <table_sorted_find_uint32@@Base>:
   1657c:	push	{r4, r5, r6, sl, fp, lr}
   16580:	add	fp, sp, #16
   16584:	sub	sp, sp, #16
   16588:	mov	r4, r3
   1658c:	mov	r5, r1
   16590:	mov	r6, r0
   16594:	str	r2, [sp, #12]
   16598:	bl	17138 <table_get_row_length@@Base>
   1659c:	sub	r0, r0, #1
   165a0:	mov	r1, #0
   165a4:	add	r2, sp, #12
   165a8:	mov	r3, r4
   165ac:	str	r1, [sp]
   165b0:	str	r0, [sp, #4]
   165b4:	mov	r0, r6
   165b8:	mov	r1, r5
   165bc:	bl	16268 <table_sorted_subset_find@@Base>
   165c0:	sub	sp, fp, #16
   165c4:	pop	{r4, r5, r6, sl, fp, pc}

000165c8 <table_sorted_find_int64@@Base>:
   165c8:	push	{r4, r5, fp, lr}
   165cc:	add	fp, sp, #8
   165d0:	sub	sp, sp, #16
   165d4:	mov	r4, r1
   165d8:	mov	r5, r0
   165dc:	str	r3, [sp, #12]
   165e0:	str	r2, [sp, #8]
   165e4:	bl	17138 <table_get_row_length@@Base>
   165e8:	ldr	r3, [fp, #8]
   165ec:	sub	r0, r0, #1
   165f0:	mov	r1, #0
   165f4:	add	r2, sp, #8
   165f8:	str	r1, [sp]
   165fc:	str	r0, [sp, #4]
   16600:	mov	r0, r5
   16604:	mov	r1, r4
   16608:	bl	16268 <table_sorted_subset_find@@Base>
   1660c:	sub	sp, fp, #8
   16610:	pop	{r4, r5, fp, pc}

00016614 <table_sorted_find_uint64@@Base>:
   16614:	push	{r4, r5, fp, lr}
   16618:	add	fp, sp, #8
   1661c:	sub	sp, sp, #16
   16620:	mov	r4, r1
   16624:	mov	r5, r0
   16628:	str	r3, [sp, #12]
   1662c:	str	r2, [sp, #8]
   16630:	bl	17138 <table_get_row_length@@Base>
   16634:	ldr	r3, [fp, #8]
   16638:	sub	r0, r0, #1
   1663c:	mov	r1, #0
   16640:	add	r2, sp, #8
   16644:	str	r1, [sp]
   16648:	str	r0, [sp, #4]
   1664c:	mov	r0, r5
   16650:	mov	r1, r4
   16654:	bl	16268 <table_sorted_subset_find@@Base>
   16658:	sub	sp, fp, #8
   1665c:	pop	{r4, r5, fp, pc}

00016660 <table_sorted_find_short@@Base>:
   16660:	push	{r4, r5, r6, sl, fp, lr}
   16664:	add	fp, sp, #16
   16668:	sub	sp, sp, #16
   1666c:	mov	r4, r3
   16670:	mov	r5, r1
   16674:	mov	r6, r0
   16678:	strh	r2, [sp, #14]
   1667c:	bl	17138 <table_get_row_length@@Base>
   16680:	sub	r0, r0, #1
   16684:	mov	r1, #0
   16688:	add	r2, sp, #14
   1668c:	mov	r3, r4
   16690:	str	r1, [sp]
   16694:	str	r0, [sp, #4]
   16698:	mov	r0, r6
   1669c:	mov	r1, r5
   166a0:	bl	16268 <table_sorted_subset_find@@Base>
   166a4:	sub	sp, fp, #16
   166a8:	pop	{r4, r5, r6, sl, fp, pc}

000166ac <table_sorted_find_ushort@@Base>:
   166ac:	push	{r4, r5, r6, sl, fp, lr}
   166b0:	add	fp, sp, #16
   166b4:	sub	sp, sp, #16
   166b8:	mov	r4, r3
   166bc:	mov	r5, r1
   166c0:	mov	r6, r0
   166c4:	strh	r2, [sp, #14]
   166c8:	bl	17138 <table_get_row_length@@Base>
   166cc:	sub	r0, r0, #1
   166d0:	mov	r1, #0
   166d4:	add	r2, sp, #14
   166d8:	mov	r3, r4
   166dc:	str	r1, [sp]
   166e0:	str	r0, [sp, #4]
   166e4:	mov	r0, r6
   166e8:	mov	r1, r5
   166ec:	bl	16268 <table_sorted_subset_find@@Base>
   166f0:	sub	sp, fp, #16
   166f4:	pop	{r4, r5, r6, sl, fp, pc}

000166f8 <table_sorted_find_long@@Base>:
   166f8:	push	{r4, r5, r6, sl, fp, lr}
   166fc:	add	fp, sp, #16
   16700:	sub	sp, sp, #16
   16704:	mov	r4, r3
   16708:	mov	r5, r1
   1670c:	mov	r6, r0
   16710:	str	r2, [sp, #12]
   16714:	bl	17138 <table_get_row_length@@Base>
   16718:	sub	r0, r0, #1
   1671c:	mov	r1, #0
   16720:	add	r2, sp, #12
   16724:	mov	r3, r4
   16728:	str	r1, [sp]
   1672c:	str	r0, [sp, #4]
   16730:	mov	r0, r6
   16734:	mov	r1, r5
   16738:	bl	16268 <table_sorted_subset_find@@Base>
   1673c:	sub	sp, fp, #16
   16740:	pop	{r4, r5, r6, sl, fp, pc}

00016744 <table_sorted_find_ulong@@Base>:
   16744:	push	{r4, r5, r6, sl, fp, lr}
   16748:	add	fp, sp, #16
   1674c:	sub	sp, sp, #16
   16750:	mov	r4, r3
   16754:	mov	r5, r1
   16758:	mov	r6, r0
   1675c:	str	r2, [sp, #12]
   16760:	bl	17138 <table_get_row_length@@Base>
   16764:	sub	r0, r0, #1
   16768:	mov	r1, #0
   1676c:	add	r2, sp, #12
   16770:	mov	r3, r4
   16774:	str	r1, [sp]
   16778:	str	r0, [sp, #4]
   1677c:	mov	r0, r6
   16780:	mov	r1, r5
   16784:	bl	16268 <table_sorted_subset_find@@Base>
   16788:	sub	sp, fp, #16
   1678c:	pop	{r4, r5, r6, sl, fp, pc}

00016790 <table_sorted_find_llong@@Base>:
   16790:	push	{r4, r5, fp, lr}
   16794:	add	fp, sp, #8
   16798:	sub	sp, sp, #16
   1679c:	mov	r4, r1
   167a0:	mov	r5, r0
   167a4:	str	r3, [sp, #12]
   167a8:	str	r2, [sp, #8]
   167ac:	bl	17138 <table_get_row_length@@Base>
   167b0:	ldr	r3, [fp, #8]
   167b4:	sub	r0, r0, #1
   167b8:	mov	r1, #0
   167bc:	add	r2, sp, #8
   167c0:	str	r1, [sp]
   167c4:	str	r0, [sp, #4]
   167c8:	mov	r0, r5
   167cc:	mov	r1, r4
   167d0:	bl	16268 <table_sorted_subset_find@@Base>
   167d4:	sub	sp, fp, #8
   167d8:	pop	{r4, r5, fp, pc}

000167dc <table_sorted_find_ullong@@Base>:
   167dc:	push	{r4, r5, fp, lr}
   167e0:	add	fp, sp, #8
   167e4:	sub	sp, sp, #16
   167e8:	mov	r4, r1
   167ec:	mov	r5, r0
   167f0:	str	r3, [sp, #12]
   167f4:	str	r2, [sp, #8]
   167f8:	bl	17138 <table_get_row_length@@Base>
   167fc:	ldr	r3, [fp, #8]
   16800:	sub	r0, r0, #1
   16804:	mov	r1, #0
   16808:	add	r2, sp, #8
   1680c:	str	r1, [sp]
   16810:	str	r0, [sp, #4]
   16814:	mov	r0, r5
   16818:	mov	r1, r4
   1681c:	bl	16268 <table_sorted_subset_find@@Base>
   16820:	sub	sp, fp, #8
   16824:	pop	{r4, r5, fp, pc}

00016828 <table_sorted_find_float@@Base>:
   16828:	push	{r4, r5, r6, sl, fp, lr}
   1682c:	add	fp, sp, #16
   16830:	sub	sp, sp, #16
   16834:	mov	r4, r2
   16838:	mov	r5, r1
   1683c:	mov	r6, r0
   16840:	vstr	s0, [sp, #12]
   16844:	bl	17138 <table_get_row_length@@Base>
   16848:	sub	r0, r0, #1
   1684c:	mov	r1, #0
   16850:	add	r2, sp, #12
   16854:	mov	r3, r4
   16858:	str	r1, [sp]
   1685c:	str	r0, [sp, #4]
   16860:	mov	r0, r6
   16864:	mov	r1, r5
   16868:	bl	16268 <table_sorted_subset_find@@Base>
   1686c:	sub	sp, fp, #16
   16870:	pop	{r4, r5, r6, sl, fp, pc}

00016874 <table_sorted_find_double@@Base>:
   16874:	push	{r4, r5, r6, sl, fp, lr}
   16878:	add	fp, sp, #16
   1687c:	sub	sp, sp, #16
   16880:	mov	r4, r2
   16884:	mov	r5, r1
   16888:	mov	r6, r0
   1688c:	vstr	d0, [sp, #8]
   16890:	bl	17138 <table_get_row_length@@Base>
   16894:	sub	r0, r0, #1
   16898:	mov	r1, #0
   1689c:	add	r2, sp, #8
   168a0:	mov	r3, r4
   168a4:	str	r1, [sp]
   168a8:	str	r0, [sp, #4]
   168ac:	mov	r0, r6
   168b0:	mov	r1, r5
   168b4:	bl	16268 <table_sorted_subset_find@@Base>
   168b8:	sub	sp, fp, #16
   168bc:	pop	{r4, r5, r6, sl, fp, pc}

000168c0 <table_sorted_find_ldouble@@Base>:
   168c0:	push	{r4, r5, r6, sl, fp, lr}
   168c4:	add	fp, sp, #16
   168c8:	sub	sp, sp, #16
   168cc:	mov	r4, r2
   168d0:	mov	r5, r1
   168d4:	mov	r6, r0
   168d8:	vstr	d0, [sp, #8]
   168dc:	bl	17138 <table_get_row_length@@Base>
   168e0:	sub	r0, r0, #1
   168e4:	mov	r1, #0
   168e8:	add	r2, sp, #8
   168ec:	mov	r3, r4
   168f0:	str	r1, [sp]
   168f4:	str	r0, [sp, #4]
   168f8:	mov	r0, r6
   168fc:	mov	r1, r5
   16900:	bl	16268 <table_sorted_subset_find@@Base>
   16904:	sub	sp, fp, #16
   16908:	pop	{r4, r5, r6, sl, fp, pc}

0001690c <table_sorted_find_char@@Base>:
   1690c:	push	{r4, r5, r6, sl, fp, lr}
   16910:	add	fp, sp, #16
   16914:	sub	sp, sp, #16
   16918:	mov	r4, r3
   1691c:	mov	r5, r1
   16920:	mov	r6, r0
   16924:	strb	r2, [sp, #15]
   16928:	bl	17138 <table_get_row_length@@Base>
   1692c:	sub	r0, r0, #1
   16930:	mov	r1, #0
   16934:	add	r2, sp, #15
   16938:	mov	r3, r4
   1693c:	str	r1, [sp]
   16940:	str	r0, [sp, #4]
   16944:	mov	r0, r6
   16948:	mov	r1, r5
   1694c:	bl	16268 <table_sorted_subset_find@@Base>
   16950:	sub	sp, fp, #16
   16954:	pop	{r4, r5, r6, sl, fp, pc}

00016958 <table_sorted_find_uchar@@Base>:
   16958:	push	{r4, r5, r6, sl, fp, lr}
   1695c:	add	fp, sp, #16
   16960:	sub	sp, sp, #16
   16964:	mov	r4, r3
   16968:	mov	r5, r1
   1696c:	mov	r6, r0
   16970:	strb	r2, [sp, #15]
   16974:	bl	17138 <table_get_row_length@@Base>
   16978:	sub	r0, r0, #1
   1697c:	mov	r1, #0
   16980:	add	r2, sp, #15
   16984:	mov	r3, r4
   16988:	str	r1, [sp]
   1698c:	str	r0, [sp, #4]
   16990:	mov	r0, r6
   16994:	mov	r1, r5
   16998:	bl	16268 <table_sorted_subset_find@@Base>
   1699c:	sub	sp, fp, #16
   169a0:	pop	{r4, r5, r6, sl, fp, pc}

000169a4 <table_sorted_find_string@@Base>:
   169a4:	push	{r4, r5, r6, r7, fp, lr}
   169a8:	add	fp, sp, #16
   169ac:	sub	sp, sp, #8
   169b0:	mov	r4, r3
   169b4:	mov	r5, r2
   169b8:	mov	r6, r1
   169bc:	mov	r7, r0
   169c0:	bl	17138 <table_get_row_length@@Base>
   169c4:	sub	r0, r0, #1
   169c8:	mov	r1, #0
   169cc:	mov	r2, r5
   169d0:	mov	r3, r4
   169d4:	str	r1, [sp]
   169d8:	str	r0, [sp, #4]
   169dc:	mov	r0, r7
   169e0:	mov	r1, r6
   169e4:	bl	16268 <table_sorted_subset_find@@Base>
   169e8:	sub	sp, fp, #16
   169ec:	pop	{r4, r5, r6, r7, fp, pc}

000169f0 <table_sorted_find_ptr@@Base>:
   169f0:	push	{r4, r5, r6, r7, fp, lr}
   169f4:	add	fp, sp, #16
   169f8:	sub	sp, sp, #8
   169fc:	mov	r4, r3
   16a00:	mov	r5, r2
   16a04:	mov	r6, r1
   16a08:	mov	r7, r0
   16a0c:	bl	17138 <table_get_row_length@@Base>
   16a10:	sub	r0, r0, #1
   16a14:	mov	r1, #0
   16a18:	mov	r2, r5
   16a1c:	mov	r3, r4
   16a20:	str	r1, [sp]
   16a24:	str	r0, [sp, #4]
   16a28:	mov	r0, r7
   16a2c:	mov	r1, r6
   16a30:	bl	16268 <table_sorted_subset_find@@Base>
   16a34:	sub	sp, fp, #16
   16a38:	pop	{r4, r5, r6, r7, fp, pc}

00016a3c <table_sorted_subset_find_int@@Base>:
   16a3c:	push	{fp, lr}
   16a40:	mov	fp, sp
   16a44:	sub	sp, sp, #16
   16a48:	str	r2, [fp, #-4]
   16a4c:	ldr	r2, [fp, #12]
   16a50:	str	r2, [sp, #4]
   16a54:	ldr	r2, [fp, #8]
   16a58:	str	r2, [sp]
   16a5c:	sub	r2, fp, #4
   16a60:	bl	16268 <table_sorted_subset_find@@Base>
   16a64:	mov	sp, fp
   16a68:	pop	{fp, pc}

00016a6c <table_sorted_subset_find_uint@@Base>:
   16a6c:	push	{fp, lr}
   16a70:	mov	fp, sp
   16a74:	sub	sp, sp, #16
   16a78:	str	r2, [fp, #-4]
   16a7c:	ldr	r2, [fp, #12]
   16a80:	str	r2, [sp, #4]
   16a84:	ldr	r2, [fp, #8]
   16a88:	str	r2, [sp]
   16a8c:	sub	r2, fp, #4
   16a90:	bl	16268 <table_sorted_subset_find@@Base>
   16a94:	mov	sp, fp
   16a98:	pop	{fp, pc}

00016a9c <table_sorted_subset_find_int8@@Base>:
   16a9c:	push	{fp, lr}
   16aa0:	mov	fp, sp
   16aa4:	sub	sp, sp, #16
   16aa8:	strb	r2, [fp, #-1]
   16aac:	ldr	r2, [fp, #12]
   16ab0:	str	r2, [sp, #4]
   16ab4:	ldr	r2, [fp, #8]
   16ab8:	str	r2, [sp]
   16abc:	sub	r2, fp, #1
   16ac0:	bl	16268 <table_sorted_subset_find@@Base>
   16ac4:	mov	sp, fp
   16ac8:	pop	{fp, pc}

00016acc <table_sorted_subset_find_uint8@@Base>:
   16acc:	push	{fp, lr}
   16ad0:	mov	fp, sp
   16ad4:	sub	sp, sp, #16
   16ad8:	strb	r2, [fp, #-1]
   16adc:	ldr	r2, [fp, #12]
   16ae0:	str	r2, [sp, #4]
   16ae4:	ldr	r2, [fp, #8]
   16ae8:	str	r2, [sp]
   16aec:	sub	r2, fp, #1
   16af0:	bl	16268 <table_sorted_subset_find@@Base>
   16af4:	mov	sp, fp
   16af8:	pop	{fp, pc}

00016afc <table_sorted_subset_find_int16@@Base>:
   16afc:	push	{fp, lr}
   16b00:	mov	fp, sp
   16b04:	sub	sp, sp, #16
   16b08:	strh	r2, [fp, #-2]
   16b0c:	ldr	r2, [fp, #12]
   16b10:	str	r2, [sp, #4]
   16b14:	ldr	r2, [fp, #8]
   16b18:	str	r2, [sp]
   16b1c:	sub	r2, fp, #2
   16b20:	bl	16268 <table_sorted_subset_find@@Base>
   16b24:	mov	sp, fp
   16b28:	pop	{fp, pc}

00016b2c <table_sorted_subset_find_uint16@@Base>:
   16b2c:	push	{fp, lr}
   16b30:	mov	fp, sp
   16b34:	sub	sp, sp, #16
   16b38:	strh	r2, [fp, #-2]
   16b3c:	ldr	r2, [fp, #12]
   16b40:	str	r2, [sp, #4]
   16b44:	ldr	r2, [fp, #8]
   16b48:	str	r2, [sp]
   16b4c:	sub	r2, fp, #2
   16b50:	bl	16268 <table_sorted_subset_find@@Base>
   16b54:	mov	sp, fp
   16b58:	pop	{fp, pc}

00016b5c <table_sorted_subset_find_int32@@Base>:
   16b5c:	push	{fp, lr}
   16b60:	mov	fp, sp
   16b64:	sub	sp, sp, #16
   16b68:	str	r2, [fp, #-4]
   16b6c:	ldr	r2, [fp, #12]
   16b70:	str	r2, [sp, #4]
   16b74:	ldr	r2, [fp, #8]
   16b78:	str	r2, [sp]
   16b7c:	sub	r2, fp, #4
   16b80:	bl	16268 <table_sorted_subset_find@@Base>
   16b84:	mov	sp, fp
   16b88:	pop	{fp, pc}

00016b8c <table_sorted_subset_find_uint32@@Base>:
   16b8c:	push	{fp, lr}
   16b90:	mov	fp, sp
   16b94:	sub	sp, sp, #16
   16b98:	str	r2, [fp, #-4]
   16b9c:	ldr	r2, [fp, #12]
   16ba0:	str	r2, [sp, #4]
   16ba4:	ldr	r2, [fp, #8]
   16ba8:	str	r2, [sp]
   16bac:	sub	r2, fp, #4
   16bb0:	bl	16268 <table_sorted_subset_find@@Base>
   16bb4:	mov	sp, fp
   16bb8:	pop	{fp, pc}

00016bbc <table_sorted_subset_find_int64@@Base>:
   16bbc:	push	{fp, lr}
   16bc0:	mov	fp, sp
   16bc4:	sub	sp, sp, #16
   16bc8:	str	r2, [sp, #8]
   16bcc:	ldr	r2, [fp, #16]
   16bd0:	str	r3, [sp, #12]
   16bd4:	ldr	r3, [fp, #8]
   16bd8:	str	r2, [sp, #4]
   16bdc:	ldr	r2, [fp, #12]
   16be0:	str	r2, [sp]
   16be4:	add	r2, sp, #8
   16be8:	bl	16268 <table_sorted_subset_find@@Base>
   16bec:	mov	sp, fp
   16bf0:	pop	{fp, pc}

00016bf4 <table_sorted_subset_find_uint64@@Base>:
   16bf4:	push	{fp, lr}
   16bf8:	mov	fp, sp
   16bfc:	sub	sp, sp, #16
   16c00:	str	r2, [sp, #8]
   16c04:	ldr	r2, [fp, #16]
   16c08:	str	r3, [sp, #12]
   16c0c:	ldr	r3, [fp, #8]
   16c10:	str	r2, [sp, #4]
   16c14:	ldr	r2, [fp, #12]
   16c18:	str	r2, [sp]
   16c1c:	add	r2, sp, #8
   16c20:	bl	16268 <table_sorted_subset_find@@Base>
   16c24:	mov	sp, fp
   16c28:	pop	{fp, pc}

00016c2c <table_sorted_subset_find_short@@Base>:
   16c2c:	push	{fp, lr}
   16c30:	mov	fp, sp
   16c34:	sub	sp, sp, #16
   16c38:	strh	r2, [fp, #-2]
   16c3c:	ldr	r2, [fp, #12]
   16c40:	str	r2, [sp, #4]
   16c44:	ldr	r2, [fp, #8]
   16c48:	str	r2, [sp]
   16c4c:	sub	r2, fp, #2
   16c50:	bl	16268 <table_sorted_subset_find@@Base>
   16c54:	mov	sp, fp
   16c58:	pop	{fp, pc}

00016c5c <table_sorted_subset_find_ushort@@Base>:
   16c5c:	push	{fp, lr}
   16c60:	mov	fp, sp
   16c64:	sub	sp, sp, #16
   16c68:	strh	r2, [fp, #-2]
   16c6c:	ldr	r2, [fp, #12]
   16c70:	str	r2, [sp, #4]
   16c74:	ldr	r2, [fp, #8]
   16c78:	str	r2, [sp]
   16c7c:	sub	r2, fp, #2
   16c80:	bl	16268 <table_sorted_subset_find@@Base>
   16c84:	mov	sp, fp
   16c88:	pop	{fp, pc}

00016c8c <table_sorted_subset_find_long@@Base>:
   16c8c:	push	{fp, lr}
   16c90:	mov	fp, sp
   16c94:	sub	sp, sp, #16
   16c98:	str	r2, [fp, #-4]
   16c9c:	ldr	r2, [fp, #12]
   16ca0:	str	r2, [sp, #4]
   16ca4:	ldr	r2, [fp, #8]
   16ca8:	str	r2, [sp]
   16cac:	sub	r2, fp, #4
   16cb0:	bl	16268 <table_sorted_subset_find@@Base>
   16cb4:	mov	sp, fp
   16cb8:	pop	{fp, pc}

00016cbc <table_sorted_subset_find_ulong@@Base>:
   16cbc:	push	{fp, lr}
   16cc0:	mov	fp, sp
   16cc4:	sub	sp, sp, #16
   16cc8:	str	r2, [fp, #-4]
   16ccc:	ldr	r2, [fp, #12]
   16cd0:	str	r2, [sp, #4]
   16cd4:	ldr	r2, [fp, #8]
   16cd8:	str	r2, [sp]
   16cdc:	sub	r2, fp, #4
   16ce0:	bl	16268 <table_sorted_subset_find@@Base>
   16ce4:	mov	sp, fp
   16ce8:	pop	{fp, pc}

00016cec <table_sorted_subset_find_llong@@Base>:
   16cec:	push	{fp, lr}
   16cf0:	mov	fp, sp
   16cf4:	sub	sp, sp, #16
   16cf8:	str	r2, [sp, #8]
   16cfc:	ldr	r2, [fp, #16]
   16d00:	str	r3, [sp, #12]
   16d04:	ldr	r3, [fp, #8]
   16d08:	str	r2, [sp, #4]
   16d0c:	ldr	r2, [fp, #12]
   16d10:	str	r2, [sp]
   16d14:	add	r2, sp, #8
   16d18:	bl	16268 <table_sorted_subset_find@@Base>
   16d1c:	mov	sp, fp
   16d20:	pop	{fp, pc}

00016d24 <table_sorted_subset_find_ullong@@Base>:
   16d24:	push	{fp, lr}
   16d28:	mov	fp, sp
   16d2c:	sub	sp, sp, #16
   16d30:	str	r2, [sp, #8]
   16d34:	ldr	r2, [fp, #16]
   16d38:	str	r3, [sp, #12]
   16d3c:	ldr	r3, [fp, #8]
   16d40:	str	r2, [sp, #4]
   16d44:	ldr	r2, [fp, #12]
   16d48:	str	r2, [sp]
   16d4c:	add	r2, sp, #8
   16d50:	bl	16268 <table_sorted_subset_find@@Base>
   16d54:	mov	sp, fp
   16d58:	pop	{fp, pc}

00016d5c <table_sorted_subset_find_float@@Base>:
   16d5c:	push	{fp, lr}
   16d60:	mov	fp, sp
   16d64:	sub	sp, sp, #16
   16d68:	mov	ip, r2
   16d6c:	ldr	r2, [fp, #8]
   16d70:	str	r3, [sp]
   16d74:	vstr	s0, [fp, #-4]
   16d78:	mov	r3, ip
   16d7c:	str	r2, [sp, #4]
   16d80:	sub	r2, fp, #4
   16d84:	bl	16268 <table_sorted_subset_find@@Base>
   16d88:	mov	sp, fp
   16d8c:	pop	{fp, pc}

00016d90 <table_sorted_subset_find_double@@Base>:
   16d90:	push	{fp, lr}
   16d94:	mov	fp, sp
   16d98:	sub	sp, sp, #16
   16d9c:	mov	ip, r2
   16da0:	ldr	r2, [fp, #8]
   16da4:	str	r3, [sp]
   16da8:	vstr	d0, [sp, #8]
   16dac:	mov	r3, ip
   16db0:	str	r2, [sp, #4]
   16db4:	add	r2, sp, #8
   16db8:	bl	16268 <table_sorted_subset_find@@Base>
   16dbc:	mov	sp, fp
   16dc0:	pop	{fp, pc}

00016dc4 <table_sorted_subset_find_ldouble@@Base>:
   16dc4:	push	{fp, lr}
   16dc8:	mov	fp, sp
   16dcc:	sub	sp, sp, #16
   16dd0:	mov	ip, r2
   16dd4:	ldr	r2, [fp, #8]
   16dd8:	str	r3, [sp]
   16ddc:	vstr	d0, [sp, #8]
   16de0:	mov	r3, ip
   16de4:	str	r2, [sp, #4]
   16de8:	add	r2, sp, #8
   16dec:	bl	16268 <table_sorted_subset_find@@Base>
   16df0:	mov	sp, fp
   16df4:	pop	{fp, pc}

00016df8 <table_sorted_subset_find_char@@Base>:
   16df8:	push	{fp, lr}
   16dfc:	mov	fp, sp
   16e00:	sub	sp, sp, #16
   16e04:	strb	r2, [fp, #-1]
   16e08:	ldr	r2, [fp, #12]
   16e0c:	str	r2, [sp, #4]
   16e10:	ldr	r2, [fp, #8]
   16e14:	str	r2, [sp]
   16e18:	sub	r2, fp, #1
   16e1c:	bl	16268 <table_sorted_subset_find@@Base>
   16e20:	mov	sp, fp
   16e24:	pop	{fp, pc}

00016e28 <table_sorted_subset_find_uchar@@Base>:
   16e28:	push	{fp, lr}
   16e2c:	mov	fp, sp
   16e30:	sub	sp, sp, #16
   16e34:	strb	r2, [fp, #-1]
   16e38:	ldr	r2, [fp, #12]
   16e3c:	str	r2, [sp, #4]
   16e40:	ldr	r2, [fp, #8]
   16e44:	str	r2, [sp]
   16e48:	sub	r2, fp, #1
   16e4c:	bl	16268 <table_sorted_subset_find@@Base>
   16e50:	mov	sp, fp
   16e54:	pop	{fp, pc}

00016e58 <table_sorted_subset_find_string@@Base>:
   16e58:	b	16268 <table_sorted_subset_find@@Base>

00016e5c <table_sorted_subset_find_ptr@@Base>:
   16e5c:	b	16268 <table_sorted_subset_find@@Base>

00016e60 <table_get@@Base>:
   16e60:	push	{fp, lr}
   16e64:	mov	fp, sp
   16e68:	bl	182ac <table_get_cell_ptr@@Base>
   16e6c:	ldr	r0, [r0]
   16e70:	pop	{fp, pc}

00016e74 <table_get_bool@@Base>:
   16e74:	push	{fp, lr}
   16e78:	mov	fp, sp
   16e7c:	bl	182ac <table_get_cell_ptr@@Base>
   16e80:	ldr	r0, [r0]
   16e84:	ldrb	r0, [r0]
   16e88:	pop	{fp, pc}

00016e8c <table_get_int@@Base>:
   16e8c:	push	{fp, lr}
   16e90:	mov	fp, sp
   16e94:	bl	182ac <table_get_cell_ptr@@Base>
   16e98:	ldr	r0, [r0]
   16e9c:	ldr	r0, [r0]
   16ea0:	pop	{fp, pc}

00016ea4 <table_get_uint@@Base>:
   16ea4:	push	{fp, lr}
   16ea8:	mov	fp, sp
   16eac:	bl	182ac <table_get_cell_ptr@@Base>
   16eb0:	ldr	r0, [r0]
   16eb4:	ldr	r0, [r0]
   16eb8:	pop	{fp, pc}

00016ebc <table_get_int8@@Base>:
   16ebc:	push	{fp, lr}
   16ec0:	mov	fp, sp
   16ec4:	bl	182ac <table_get_cell_ptr@@Base>
   16ec8:	ldr	r0, [r0]
   16ecc:	ldrsb	r0, [r0]
   16ed0:	pop	{fp, pc}

00016ed4 <table_get_uint8@@Base>:
   16ed4:	push	{fp, lr}
   16ed8:	mov	fp, sp
   16edc:	bl	182ac <table_get_cell_ptr@@Base>
   16ee0:	ldr	r0, [r0]
   16ee4:	ldrb	r0, [r0]
   16ee8:	pop	{fp, pc}

00016eec <table_get_int16@@Base>:
   16eec:	push	{fp, lr}
   16ef0:	mov	fp, sp
   16ef4:	bl	182ac <table_get_cell_ptr@@Base>
   16ef8:	ldr	r0, [r0]
   16efc:	ldrsh	r0, [r0]
   16f00:	pop	{fp, pc}

00016f04 <table_get_uint16@@Base>:
   16f04:	push	{fp, lr}
   16f08:	mov	fp, sp
   16f0c:	bl	182ac <table_get_cell_ptr@@Base>
   16f10:	ldr	r0, [r0]
   16f14:	ldrh	r0, [r0]
   16f18:	pop	{fp, pc}

00016f1c <table_get_int32@@Base>:
   16f1c:	push	{fp, lr}
   16f20:	mov	fp, sp
   16f24:	bl	182ac <table_get_cell_ptr@@Base>
   16f28:	ldr	r0, [r0]
   16f2c:	ldr	r0, [r0]
   16f30:	pop	{fp, pc}

00016f34 <table_get_uint32@@Base>:
   16f34:	push	{fp, lr}
   16f38:	mov	fp, sp
   16f3c:	bl	182ac <table_get_cell_ptr@@Base>
   16f40:	ldr	r0, [r0]
   16f44:	ldr	r0, [r0]
   16f48:	pop	{fp, pc}

00016f4c <table_get_int64@@Base>:
   16f4c:	push	{fp, lr}
   16f50:	mov	fp, sp
   16f54:	bl	182ac <table_get_cell_ptr@@Base>
   16f58:	ldr	r0, [r0]
   16f5c:	ldrd	r0, [r0]
   16f60:	pop	{fp, pc}

00016f64 <table_get_uint64@@Base>:
   16f64:	push	{fp, lr}
   16f68:	mov	fp, sp
   16f6c:	bl	182ac <table_get_cell_ptr@@Base>
   16f70:	ldr	r0, [r0]
   16f74:	ldrd	r0, [r0]
   16f78:	pop	{fp, pc}

00016f7c <table_get_short@@Base>:
   16f7c:	push	{fp, lr}
   16f80:	mov	fp, sp
   16f84:	bl	182ac <table_get_cell_ptr@@Base>
   16f88:	ldr	r0, [r0]
   16f8c:	ldrsh	r0, [r0]
   16f90:	pop	{fp, pc}

00016f94 <table_get_ushort@@Base>:
   16f94:	push	{fp, lr}
   16f98:	mov	fp, sp
   16f9c:	bl	182ac <table_get_cell_ptr@@Base>
   16fa0:	ldr	r0, [r0]
   16fa4:	ldrh	r0, [r0]
   16fa8:	pop	{fp, pc}

00016fac <table_get_long@@Base>:
   16fac:	push	{fp, lr}
   16fb0:	mov	fp, sp
   16fb4:	bl	182ac <table_get_cell_ptr@@Base>
   16fb8:	ldr	r0, [r0]
   16fbc:	ldr	r0, [r0]
   16fc0:	pop	{fp, pc}

00016fc4 <table_get_ulong@@Base>:
   16fc4:	push	{fp, lr}
   16fc8:	mov	fp, sp
   16fcc:	bl	182ac <table_get_cell_ptr@@Base>
   16fd0:	ldr	r0, [r0]
   16fd4:	ldr	r0, [r0]
   16fd8:	pop	{fp, pc}

00016fdc <table_get_llong@@Base>:
   16fdc:	push	{fp, lr}
   16fe0:	mov	fp, sp
   16fe4:	bl	182ac <table_get_cell_ptr@@Base>
   16fe8:	ldr	r0, [r0]
   16fec:	ldrd	r0, [r0]
   16ff0:	pop	{fp, pc}

00016ff4 <table_get_ullong@@Base>:
   16ff4:	push	{fp, lr}
   16ff8:	mov	fp, sp
   16ffc:	bl	182ac <table_get_cell_ptr@@Base>
   17000:	ldr	r0, [r0]
   17004:	ldrd	r0, [r0]
   17008:	pop	{fp, pc}

0001700c <table_get_float@@Base>:
   1700c:	push	{fp, lr}
   17010:	mov	fp, sp
   17014:	bl	182ac <table_get_cell_ptr@@Base>
   17018:	ldr	r0, [r0]
   1701c:	vldr	s0, [r0]
   17020:	pop	{fp, pc}

00017024 <table_get_double@@Base>:
   17024:	push	{fp, lr}
   17028:	mov	fp, sp
   1702c:	bl	182ac <table_get_cell_ptr@@Base>
   17030:	ldr	r0, [r0]
   17034:	vldr	d0, [r0]
   17038:	pop	{fp, pc}

0001703c <table_get_ldouble@@Base>:
   1703c:	push	{fp, lr}
   17040:	mov	fp, sp
   17044:	bl	182ac <table_get_cell_ptr@@Base>
   17048:	ldr	r0, [r0]
   1704c:	vldr	d0, [r0]
   17050:	pop	{fp, pc}

00017054 <table_get_char@@Base>:
   17054:	push	{fp, lr}
   17058:	mov	fp, sp
   1705c:	bl	182ac <table_get_cell_ptr@@Base>
   17060:	ldr	r0, [r0]
   17064:	ldrb	r0, [r0]
   17068:	pop	{fp, pc}

0001706c <table_get_uchar@@Base>:
   1706c:	push	{fp, lr}
   17070:	mov	fp, sp
   17074:	bl	182ac <table_get_cell_ptr@@Base>
   17078:	ldr	r0, [r0]
   1707c:	ldrb	r0, [r0]
   17080:	pop	{fp, pc}

00017084 <table_get_string@@Base>:
   17084:	push	{fp, lr}
   17088:	mov	fp, sp
   1708c:	bl	182ac <table_get_cell_ptr@@Base>
   17090:	ldr	r0, [r0]
   17094:	pop	{fp, pc}

00017098 <table_get_ptr@@Base>:
   17098:	push	{fp, lr}
   1709c:	mov	fp, sp
   170a0:	bl	182ac <table_get_cell_ptr@@Base>
   170a4:	ldr	r0, [r0]
   170a8:	pop	{fp, pc}

000170ac <table_row_init@@Base>:
   170ac:	push	{r4, r5, fp, lr}
   170b0:	add	fp, sp, #8
   170b4:	mov	r4, r1
   170b8:	ldr	r1, [r0, #12]
   170bc:	ldr	r5, [r0, #16]
   170c0:	lsl	r0, r1, #2
   170c4:	bl	12fb4 <malloc@plt>
   170c8:	str	r0, [r5, r4, lsl #2]
   170cc:	pop	{r4, r5, fp, pc}

000170d0 <table_get_row_ptr@@Base>:
   170d0:	ldr	r0, [r0, #16]
   170d4:	add	r0, r0, r1, lsl #2
   170d8:	bx	lr

000170dc <table_row_destroy@@Base>:
   170dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   170e0:	add	fp, sp, #24
   170e4:	mov	r4, r1
   170e8:	mov	r5, r0
   170ec:	bl	13e7c <table_get_column_length@@Base>
   170f0:	ldr	r8, [r5, #16]
   170f4:	cmp	r0, #1
   170f8:	blt	17120 <table_row_destroy@@Base+0x44>
   170fc:	mov	r6, r0
   17100:	mov	r7, #0
   17104:	mov	r0, r5
   17108:	mov	r1, r4
   1710c:	mov	r2, r7
   17110:	bl	182c8 <table_cell_destroy@@Base>
   17114:	add	r7, r7, #1
   17118:	cmp	r6, r7
   1711c:	bne	17104 <table_row_destroy@@Base+0x28>
   17120:	ldr	r0, [r8, r4, lsl #2]
   17124:	cmp	r0, #0
   17128:	beq	17134 <table_row_destroy@@Base+0x58>
   1712c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17130:	b	12f90 <free@plt>
   17134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017138 <table_get_row_length@@Base>:
   17138:	ldr	r0, [r0, #20]
   1713c:	bx	lr

00017140 <table_add_row@@Base>:
   17140:	push	{r4, r5, r6, r7, fp, lr}
   17144:	add	fp, sp, #16
   17148:	ldr	r5, [r0, #20]
   1714c:	ldr	r1, [r0, #24]
   17150:	mov	r4, r0
   17154:	udiv	r0, r5, r1
   17158:	mls	r0, r0, r1, r5
   1715c:	cmp	r0, #0
   17160:	bne	17184 <table_add_row@@Base+0x44>
   17164:	ldr	r2, [r4, #28]
   17168:	ldr	r0, [r4, #16]
   1716c:	add	r1, r2, r1
   17170:	str	r1, [r4, #28]
   17174:	lsl	r1, r1, #2
   17178:	bl	12f9c <realloc@plt>
   1717c:	str	r0, [r4, #16]
   17180:	ldr	r5, [r4, #20]
   17184:	mov	r0, r4
   17188:	bl	13e7c <table_get_column_length@@Base>
   1718c:	mov	r6, r0
   17190:	ldr	r0, [r4, #12]
   17194:	ldr	r7, [r4, #16]
   17198:	lsl	r0, r0, #2
   1719c:	bl	12fb4 <malloc@plt>
   171a0:	cmp	r6, #1
   171a4:	str	r0, [r7, r5, lsl #2]
   171a8:	blt	171cc <table_add_row@@Base+0x8c>
   171ac:	mov	r7, #0
   171b0:	mov	r0, r4
   171b4:	mov	r1, r5
   171b8:	mov	r2, r7
   171bc:	bl	1828c <table_cell_init@@Base>
   171c0:	add	r7, r7, #1
   171c4:	cmp	r6, r7
   171c8:	bne	171b0 <table_add_row@@Base+0x70>
   171cc:	ldr	r1, [r4, #20]
   171d0:	mov	r0, r4
   171d4:	mvn	r2, #0
   171d8:	mov	r3, #2
   171dc:	bl	13d6c <table_notify@@Base>
   171e0:	ldr	r0, [r4, #20]
   171e4:	add	r1, r0, #1
   171e8:	str	r1, [r4, #20]
   171ec:	pop	{r4, r5, r6, r7, fp, pc}

000171f0 <table_remove_row@@Base>:
   171f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   171f4:	add	fp, sp, #24
   171f8:	ldr	r8, [r0, #20]
   171fc:	mov	r4, r1
   17200:	mov	r5, r0
   17204:	bl	13e7c <table_get_column_length@@Base>
   17208:	cmp	r0, #1
   1720c:	blt	17260 <table_remove_row@@Base+0x70>
   17210:	mov	r6, r0
   17214:	mov	r7, #0
   17218:	b	17228 <table_remove_row@@Base+0x38>
   1721c:	add	r7, r7, #1
   17220:	cmp	r6, r7
   17224:	beq	17260 <table_remove_row@@Base+0x70>
   17228:	mov	r0, r5
   1722c:	mov	r1, r7
   17230:	bl	13f00 <table_get_column_data_type@@Base>
   17234:	cmp	r0, #23
   17238:	beq	1721c <table_remove_row@@Base+0x2c>
   1723c:	mov	r0, r5
   17240:	mov	r1, r4
   17244:	mov	r2, r7
   17248:	bl	182ac <table_get_cell_ptr@@Base>
   1724c:	ldr	r0, [r0]
   17250:	cmp	r0, #0
   17254:	beq	1721c <table_remove_row@@Base+0x2c>
   17258:	bl	12f90 <free@plt>
   1725c:	b	1721c <table_remove_row@@Base+0x2c>
   17260:	ldr	r0, [r5, #16]
   17264:	ldr	r0, [r0, r4, lsl #2]
   17268:	cmp	r0, #0
   1726c:	beq	17274 <table_remove_row@@Base+0x84>
   17270:	bl	12f90 <free@plt>
   17274:	sub	r0, r8, #1
   17278:	cmp	r0, r4
   1727c:	ble	172ec <table_remove_row@@Base+0xfc>
   17280:	mvn	r0, r4
   17284:	add	r1, r8, r0
   17288:	sub	r0, r8, #2
   1728c:	tst	r1, #1
   17290:	mov	r1, r4
   17294:	beq	172ac <table_remove_row@@Base+0xbc>
   17298:	ldr	r1, [r5, #16]
   1729c:	add	r2, r1, r4, lsl #2
   172a0:	ldr	r2, [r2, #4]
   172a4:	str	r2, [r1, r4, lsl #2]
   172a8:	add	r1, r4, #1
   172ac:	cmp	r0, r4
   172b0:	beq	172ec <table_remove_row@@Base+0xfc>
   172b4:	mvn	r0, r1
   172b8:	lsl	r1, r1, #2
   172bc:	add	r0, r0, r8
   172c0:	ldr	r2, [r5, #16]
   172c4:	subs	r0, r0, #2
   172c8:	add	r3, r2, r1
   172cc:	ldr	r3, [r3, #4]
   172d0:	str	r3, [r2, r1]
   172d4:	ldr	r2, [r5, #16]
   172d8:	add	r2, r2, r1
   172dc:	add	r1, r1, #8
   172e0:	ldr	r3, [r2, #8]
   172e4:	str	r3, [r2, #4]
   172e8:	bne	172c0 <table_remove_row@@Base+0xd0>
   172ec:	ldr	r0, [r5, #20]
   172f0:	ldr	r1, [r5, #24]
   172f4:	sub	r0, r0, #1
   172f8:	udiv	r2, r0, r1
   172fc:	str	r0, [r5, #20]
   17300:	mls	r0, r2, r1, r0
   17304:	cmp	r0, #0
   17308:	bne	17328 <table_remove_row@@Base+0x138>
   1730c:	ldr	r2, [r5, #28]
   17310:	ldr	r0, [r5, #16]
   17314:	sub	r1, r2, r1
   17318:	str	r1, [r5, #28]
   1731c:	lsl	r1, r1, #2
   17320:	bl	12f9c <realloc@plt>
   17324:	str	r0, [r5, #16]
   17328:	mov	r0, r5
   1732c:	mov	r1, r4
   17330:	mvn	r2, #0
   17334:	mov	r3, #4
   17338:	bl	13d6c <table_notify@@Base>
   1733c:	mov	r0, #0
   17340:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017344 <table_set_row_ptr@@Base>:
   17344:	ldr	r2, [r2]
   17348:	ldr	r0, [r0, #16]
   1734c:	str	r2, [r0, r1, lsl #2]
   17350:	bx	lr

00017354 <table_set@@Base>:
   17354:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17358:	add	fp, sp, #24
   1735c:	mov	r8, r3
   17360:	mov	r4, r2
   17364:	mov	r9, r1
   17368:	mov	r6, r0
   1736c:	bl	182ac <table_get_cell_ptr@@Base>
   17370:	mov	r5, r0
   17374:	mov	r0, r6
   17378:	mov	r1, r4
   1737c:	bl	13e54 <table_get_col_ptr@@Base>
   17380:	ldr	r1, [fp, #8]
   17384:	mvn	r7, #0
   17388:	cmp	r1, #23
   1738c:	bhi	17650 <table_set@@Base+0x2fc>
   17390:	add	r2, pc, #0
   17394:	ldr	pc, [r2, r1, lsl #2]
   17398:	strdeq	r7, [r1], -r8
   1739c:	andeq	r7, r1, r8, lsl #8
   173a0:	andeq	r7, r1, r8, lsl r4
   173a4:	andeq	r7, r1, r8, lsr #8
   173a8:	andeq	r7, r1, r8, lsr r4
   173ac:	andeq	r7, r1, r8, asr #8
   173b0:	andeq	r7, r1, r8, asr r4
   173b4:	andeq	r7, r1, r8, ror #8
   173b8:	andeq	r7, r1, r8, ror r4
   173bc:	andeq	r7, r1, r8, lsl #9
   173c0:	muleq	r1, r8, r4
   173c4:	andeq	r7, r1, r8, lsr #9
   173c8:	andeq	r7, r1, r0, ror #9
   173cc:	strdeq	r7, [r1], -r0
   173d0:	andeq	r7, r1, r0, lsl #10
   173d4:	andeq	r7, r1, r0, lsl r5
   173d8:	andeq	r7, r1, r0, lsr #10
   173dc:	andeq	r7, r1, r8, asr r5
   173e0:	andeq	r7, r1, r8, ror #10
   173e4:	andeq	r7, r1, r8, lsr #11
   173e8:			; <UNDEFINED> instruction: 0x000175b8
   173ec:	andeq	r7, r1, r8, asr #11
   173f0:	andeq	r7, r1, r4, lsl #12
   173f4:	andeq	r7, r1, r8, asr r6
   173f8:	ldr	r0, [r0, #4]
   173fc:	cmp	r0, #0
   17400:	bne	17650 <table_set@@Base+0x2fc>
   17404:	b	1752c <table_set@@Base+0x1d8>
   17408:	ldr	r0, [r0, #4]
   1740c:	cmp	r0, #1
   17410:	beq	1752c <table_set@@Base+0x1d8>
   17414:	b	17650 <table_set@@Base+0x2fc>
   17418:	ldr	r0, [r0, #4]
   1741c:	cmp	r0, #2
   17420:	beq	17610 <table_set@@Base+0x2bc>
   17424:	b	17650 <table_set@@Base+0x2fc>
   17428:	ldr	r0, [r0, #4]
   1742c:	cmp	r0, #3
   17430:	beq	17610 <table_set@@Base+0x2bc>
   17434:	b	17650 <table_set@@Base+0x2fc>
   17438:	ldr	r0, [r0, #4]
   1743c:	cmp	r0, #4
   17440:	beq	174b4 <table_set@@Base+0x160>
   17444:	b	17650 <table_set@@Base+0x2fc>
   17448:	ldr	r0, [r0, #4]
   1744c:	cmp	r0, #5
   17450:	beq	174b4 <table_set@@Base+0x160>
   17454:	b	17650 <table_set@@Base+0x2fc>
   17458:	ldr	r0, [r0, #4]
   1745c:	cmp	r0, #6
   17460:	beq	1752c <table_set@@Base+0x1d8>
   17464:	b	17650 <table_set@@Base+0x2fc>
   17468:	ldr	r0, [r0, #4]
   1746c:	cmp	r0, #7
   17470:	beq	1752c <table_set@@Base+0x1d8>
   17474:	b	17650 <table_set@@Base+0x2fc>
   17478:	ldr	r0, [r0, #4]
   1747c:	cmp	r0, #8
   17480:	beq	17574 <table_set@@Base+0x220>
   17484:	b	17650 <table_set@@Base+0x2fc>
   17488:	ldr	r0, [r0, #4]
   1748c:	cmp	r0, #9
   17490:	beq	17574 <table_set@@Base+0x220>
   17494:	b	17650 <table_set@@Base+0x2fc>
   17498:	ldr	r0, [r0, #4]
   1749c:	cmp	r0, #10
   174a0:	beq	174b4 <table_set@@Base+0x160>
   174a4:	b	17650 <table_set@@Base+0x2fc>
   174a8:	ldr	r0, [r0, #4]
   174ac:	cmp	r0, #11
   174b0:	bne	17650 <table_set@@Base+0x2fc>
   174b4:	ldr	r0, [r5]
   174b8:	cmp	r0, #0
   174bc:	bne	174d4 <table_set@@Base+0x180>
   174c0:	mov	r0, #2
   174c4:	bl	12fb4 <malloc@plt>
   174c8:	cmp	r0, #0
   174cc:	str	r0, [r5]
   174d0:	beq	17650 <table_set@@Base+0x2fc>
   174d4:	ldrh	r1, [r8]
   174d8:	strh	r1, [r0]
   174dc:	b	17638 <table_set@@Base+0x2e4>
   174e0:	ldr	r0, [r0, #4]
   174e4:	cmp	r0, #12
   174e8:	beq	1752c <table_set@@Base+0x1d8>
   174ec:	b	17650 <table_set@@Base+0x2fc>
   174f0:	ldr	r0, [r0, #4]
   174f4:	cmp	r0, #13
   174f8:	beq	1752c <table_set@@Base+0x1d8>
   174fc:	b	17650 <table_set@@Base+0x2fc>
   17500:	ldr	r0, [r0, #4]
   17504:	cmp	r0, #14
   17508:	beq	17574 <table_set@@Base+0x220>
   1750c:	b	17650 <table_set@@Base+0x2fc>
   17510:	ldr	r0, [r0, #4]
   17514:	cmp	r0, #15
   17518:	beq	17574 <table_set@@Base+0x220>
   1751c:	b	17650 <table_set@@Base+0x2fc>
   17520:	ldr	r0, [r0, #4]
   17524:	cmp	r0, #16
   17528:	bne	17650 <table_set@@Base+0x2fc>
   1752c:	ldr	r0, [r5]
   17530:	cmp	r0, #0
   17534:	bne	1754c <table_set@@Base+0x1f8>
   17538:	mov	r0, #4
   1753c:	bl	12fb4 <malloc@plt>
   17540:	cmp	r0, #0
   17544:	str	r0, [r5]
   17548:	beq	17650 <table_set@@Base+0x2fc>
   1754c:	ldr	r1, [r8]
   17550:	str	r1, [r0]
   17554:	b	17638 <table_set@@Base+0x2e4>
   17558:	ldr	r0, [r0, #4]
   1755c:	cmp	r0, #17
   17560:	beq	17574 <table_set@@Base+0x220>
   17564:	b	17650 <table_set@@Base+0x2fc>
   17568:	ldr	r0, [r0, #4]
   1756c:	cmp	r0, #18
   17570:	bne	17650 <table_set@@Base+0x2fc>
   17574:	ldr	r0, [r5]
   17578:	cmp	r0, #0
   1757c:	bne	17594 <table_set@@Base+0x240>
   17580:	mov	r0, #8
   17584:	bl	12fb4 <malloc@plt>
   17588:	cmp	r0, #0
   1758c:	str	r0, [r5]
   17590:	beq	17650 <table_set@@Base+0x2fc>
   17594:	ldr	r1, [r8]
   17598:	ldr	r2, [r8, #4]
   1759c:	str	r2, [r0, #4]
   175a0:	str	r1, [r0]
   175a4:	b	17638 <table_set@@Base+0x2e4>
   175a8:	ldr	r0, [r0, #4]
   175ac:	cmp	r0, #19
   175b0:	beq	17610 <table_set@@Base+0x2bc>
   175b4:	b	17650 <table_set@@Base+0x2fc>
   175b8:	ldr	r0, [r0, #4]
   175bc:	cmp	r0, #20
   175c0:	beq	17610 <table_set@@Base+0x2bc>
   175c4:	b	17650 <table_set@@Base+0x2fc>
   175c8:	ldr	r0, [r0, #4]
   175cc:	cmp	r0, #21
   175d0:	bne	17650 <table_set@@Base+0x2fc>
   175d4:	mov	r0, r8
   175d8:	bl	12fd8 <strlen@plt>
   175dc:	ldr	r2, [r5]
   175e0:	add	r1, r0, #1
   175e4:	mov	r0, r2
   175e8:	bl	12f9c <realloc@plt>
   175ec:	cmp	r0, #0
   175f0:	str	r0, [r5]
   175f4:	beq	17650 <table_set@@Base+0x2fc>
   175f8:	mov	r1, r8
   175fc:	bl	12fa8 <strcpy@plt>
   17600:	b	17638 <table_set@@Base+0x2e4>
   17604:	ldr	r0, [r0, #4]
   17608:	cmp	r0, #22
   1760c:	bne	17650 <table_set@@Base+0x2fc>
   17610:	ldr	r0, [r5]
   17614:	cmp	r0, #0
   17618:	bne	17630 <table_set@@Base+0x2dc>
   1761c:	mov	r0, #1
   17620:	bl	12fb4 <malloc@plt>
   17624:	cmp	r0, #0
   17628:	str	r0, [r5]
   1762c:	beq	17650 <table_set@@Base+0x2fc>
   17630:	ldrb	r1, [r8]
   17634:	strb	r1, [r0]
   17638:	mov	r0, r6
   1763c:	mov	r1, r9
   17640:	mov	r2, r4
   17644:	mov	r3, #1
   17648:	bl	13d6c <table_notify@@Base>
   1764c:	mov	r7, #0
   17650:	mov	r0, r7
   17654:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17658:	ldr	r0, [r0, #4]
   1765c:	cmp	r0, #23
   17660:	bne	17650 <table_set@@Base+0x2fc>
   17664:	str	r8, [r5]
   17668:	b	17638 <table_set@@Base+0x2e4>

0001766c <table_set_bool@@Base>:
   1766c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17670:	add	fp, sp, #24
   17674:	mov	r8, r3
   17678:	mov	r4, r2
   1767c:	mov	r9, r1
   17680:	mov	r6, r0
   17684:	bl	182ac <table_get_cell_ptr@@Base>
   17688:	mov	r5, r0
   1768c:	mov	r0, r6
   17690:	mov	r1, r4
   17694:	bl	13e54 <table_get_col_ptr@@Base>
   17698:	ldr	r0, [r0, #4]
   1769c:	mvn	r7, #0
   176a0:	cmp	r0, #22
   176a4:	bne	176e4 <table_set_bool@@Base+0x78>
   176a8:	ldr	r0, [r5]
   176ac:	cmp	r0, #0
   176b0:	bne	176c8 <table_set_bool@@Base+0x5c>
   176b4:	mov	r0, #1
   176b8:	bl	12fb4 <malloc@plt>
   176bc:	cmp	r0, #0
   176c0:	str	r0, [r5]
   176c4:	beq	176e4 <table_set_bool@@Base+0x78>
   176c8:	strb	r8, [r0]
   176cc:	mov	r0, r6
   176d0:	mov	r1, r9
   176d4:	mov	r2, r4
   176d8:	mov	r3, #1
   176dc:	bl	13d6c <table_notify@@Base>
   176e0:	mov	r7, #0
   176e4:	mov	r0, r7
   176e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000176ec <table_set_int@@Base>:
   176ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   176f0:	add	fp, sp, #24
   176f4:	mov	r8, r3
   176f8:	mov	r4, r2
   176fc:	mov	r5, r1
   17700:	mov	r6, r0
   17704:	bl	182ac <table_get_cell_ptr@@Base>
   17708:	mov	r9, r0
   1770c:	mov	r0, r6
   17710:	mov	r1, r4
   17714:	bl	13e54 <table_get_col_ptr@@Base>
   17718:	ldr	r0, [r0, #4]
   1771c:	mvn	r7, #0
   17720:	cmp	r0, #0
   17724:	bne	17764 <table_set_int@@Base+0x78>
   17728:	ldr	r0, [r9]
   1772c:	cmp	r0, #0
   17730:	bne	17748 <table_set_int@@Base+0x5c>
   17734:	mov	r0, #4
   17738:	bl	12fb4 <malloc@plt>
   1773c:	cmp	r0, #0
   17740:	str	r0, [r9]
   17744:	beq	17764 <table_set_int@@Base+0x78>
   17748:	str	r8, [r0]
   1774c:	mov	r0, r6
   17750:	mov	r1, r5
   17754:	mov	r2, r4
   17758:	mov	r3, #1
   1775c:	bl	13d6c <table_notify@@Base>
   17760:	mov	r7, #0
   17764:	mov	r0, r7
   17768:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001776c <table_set_uint@@Base>:
   1776c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17770:	add	fp, sp, #24
   17774:	mov	r8, r3
   17778:	mov	r4, r2
   1777c:	mov	r5, r1
   17780:	mov	r6, r0
   17784:	bl	182ac <table_get_cell_ptr@@Base>
   17788:	mov	r9, r0
   1778c:	mov	r0, r6
   17790:	mov	r1, r4
   17794:	bl	13e54 <table_get_col_ptr@@Base>
   17798:	ldr	r0, [r0, #4]
   1779c:	mvn	r7, #0
   177a0:	cmp	r0, #1
   177a4:	bne	177e4 <table_set_uint@@Base+0x78>
   177a8:	ldr	r0, [r9]
   177ac:	cmp	r0, #0
   177b0:	bne	177c8 <table_set_uint@@Base+0x5c>
   177b4:	mov	r0, #4
   177b8:	bl	12fb4 <malloc@plt>
   177bc:	cmp	r0, #0
   177c0:	str	r0, [r9]
   177c4:	beq	177e4 <table_set_uint@@Base+0x78>
   177c8:	str	r8, [r0]
   177cc:	mov	r0, r6
   177d0:	mov	r1, r5
   177d4:	mov	r2, r4
   177d8:	mov	r3, #1
   177dc:	bl	13d6c <table_notify@@Base>
   177e0:	mov	r7, #0
   177e4:	mov	r0, r7
   177e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000177ec <table_set_int8@@Base>:
   177ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   177f0:	add	fp, sp, #24
   177f4:	mov	r8, r3
   177f8:	mov	r4, r2
   177fc:	mov	r9, r1
   17800:	mov	r6, r0
   17804:	bl	182ac <table_get_cell_ptr@@Base>
   17808:	mov	r5, r0
   1780c:	mov	r0, r6
   17810:	mov	r1, r4
   17814:	bl	13e54 <table_get_col_ptr@@Base>
   17818:	ldr	r0, [r0, #4]
   1781c:	mvn	r7, #0
   17820:	cmp	r0, #2
   17824:	bne	17864 <table_set_int8@@Base+0x78>
   17828:	ldr	r0, [r5]
   1782c:	cmp	r0, #0
   17830:	bne	17848 <table_set_int8@@Base+0x5c>
   17834:	mov	r0, #1
   17838:	bl	12fb4 <malloc@plt>
   1783c:	cmp	r0, #0
   17840:	str	r0, [r5]
   17844:	beq	17864 <table_set_int8@@Base+0x78>
   17848:	strb	r8, [r0]
   1784c:	mov	r0, r6
   17850:	mov	r1, r9
   17854:	mov	r2, r4
   17858:	mov	r3, #1
   1785c:	bl	13d6c <table_notify@@Base>
   17860:	mov	r7, #0
   17864:	mov	r0, r7
   17868:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001786c <table_set_uint8@@Base>:
   1786c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17870:	add	fp, sp, #24
   17874:	mov	r8, r3
   17878:	mov	r4, r2
   1787c:	mov	r9, r1
   17880:	mov	r6, r0
   17884:	bl	182ac <table_get_cell_ptr@@Base>
   17888:	mov	r5, r0
   1788c:	mov	r0, r6
   17890:	mov	r1, r4
   17894:	bl	13e54 <table_get_col_ptr@@Base>
   17898:	ldr	r0, [r0, #4]
   1789c:	mvn	r7, #0
   178a0:	cmp	r0, #3
   178a4:	bne	178e4 <table_set_uint8@@Base+0x78>
   178a8:	ldr	r0, [r5]
   178ac:	cmp	r0, #0
   178b0:	bne	178c8 <table_set_uint8@@Base+0x5c>
   178b4:	mov	r0, #1
   178b8:	bl	12fb4 <malloc@plt>
   178bc:	cmp	r0, #0
   178c0:	str	r0, [r5]
   178c4:	beq	178e4 <table_set_uint8@@Base+0x78>
   178c8:	strb	r8, [r0]
   178cc:	mov	r0, r6
   178d0:	mov	r1, r9
   178d4:	mov	r2, r4
   178d8:	mov	r3, #1
   178dc:	bl	13d6c <table_notify@@Base>
   178e0:	mov	r7, #0
   178e4:	mov	r0, r7
   178e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000178ec <table_set_int16@@Base>:
   178ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   178f0:	add	fp, sp, #24
   178f4:	mov	r8, r3
   178f8:	mov	r4, r2
   178fc:	mov	r9, r1
   17900:	mov	r6, r0
   17904:	bl	182ac <table_get_cell_ptr@@Base>
   17908:	mov	r5, r0
   1790c:	mov	r0, r6
   17910:	mov	r1, r4
   17914:	bl	13e54 <table_get_col_ptr@@Base>
   17918:	ldr	r0, [r0, #4]
   1791c:	mvn	r7, #0
   17920:	cmp	r0, #4
   17924:	bne	17964 <table_set_int16@@Base+0x78>
   17928:	ldr	r0, [r5]
   1792c:	cmp	r0, #0
   17930:	bne	17948 <table_set_int16@@Base+0x5c>
   17934:	mov	r0, #2
   17938:	bl	12fb4 <malloc@plt>
   1793c:	cmp	r0, #0
   17940:	str	r0, [r5]
   17944:	beq	17964 <table_set_int16@@Base+0x78>
   17948:	strh	r8, [r0]
   1794c:	mov	r0, r6
   17950:	mov	r1, r9
   17954:	mov	r2, r4
   17958:	mov	r3, #1
   1795c:	bl	13d6c <table_notify@@Base>
   17960:	mov	r7, #0
   17964:	mov	r0, r7
   17968:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001796c <table_set_uint16@@Base>:
   1796c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17970:	add	fp, sp, #24
   17974:	mov	r8, r3
   17978:	mov	r4, r2
   1797c:	mov	r9, r1
   17980:	mov	r6, r0
   17984:	bl	182ac <table_get_cell_ptr@@Base>
   17988:	mov	r5, r0
   1798c:	mov	r0, r6
   17990:	mov	r1, r4
   17994:	bl	13e54 <table_get_col_ptr@@Base>
   17998:	ldr	r0, [r0, #4]
   1799c:	mvn	r7, #0
   179a0:	cmp	r0, #5
   179a4:	bne	179e4 <table_set_uint16@@Base+0x78>
   179a8:	ldr	r0, [r5]
   179ac:	cmp	r0, #0
   179b0:	bne	179c8 <table_set_uint16@@Base+0x5c>
   179b4:	mov	r0, #2
   179b8:	bl	12fb4 <malloc@plt>
   179bc:	cmp	r0, #0
   179c0:	str	r0, [r5]
   179c4:	beq	179e4 <table_set_uint16@@Base+0x78>
   179c8:	strh	r8, [r0]
   179cc:	mov	r0, r6
   179d0:	mov	r1, r9
   179d4:	mov	r2, r4
   179d8:	mov	r3, #1
   179dc:	bl	13d6c <table_notify@@Base>
   179e0:	mov	r7, #0
   179e4:	mov	r0, r7
   179e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000179ec <table_set_int32@@Base>:
   179ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179f0:	add	fp, sp, #24
   179f4:	mov	r8, r3
   179f8:	mov	r4, r2
   179fc:	mov	r5, r1
   17a00:	mov	r6, r0
   17a04:	bl	182ac <table_get_cell_ptr@@Base>
   17a08:	mov	r9, r0
   17a0c:	mov	r0, r6
   17a10:	mov	r1, r4
   17a14:	bl	13e54 <table_get_col_ptr@@Base>
   17a18:	ldr	r0, [r0, #4]
   17a1c:	mvn	r7, #0
   17a20:	cmp	r0, #6
   17a24:	bne	17a64 <table_set_int32@@Base+0x78>
   17a28:	ldr	r0, [r9]
   17a2c:	cmp	r0, #0
   17a30:	bne	17a48 <table_set_int32@@Base+0x5c>
   17a34:	mov	r0, #4
   17a38:	bl	12fb4 <malloc@plt>
   17a3c:	cmp	r0, #0
   17a40:	str	r0, [r9]
   17a44:	beq	17a64 <table_set_int32@@Base+0x78>
   17a48:	str	r8, [r0]
   17a4c:	mov	r0, r6
   17a50:	mov	r1, r5
   17a54:	mov	r2, r4
   17a58:	mov	r3, #1
   17a5c:	bl	13d6c <table_notify@@Base>
   17a60:	mov	r7, #0
   17a64:	mov	r0, r7
   17a68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017a6c <table_set_uint32@@Base>:
   17a6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a70:	add	fp, sp, #24
   17a74:	mov	r8, r3
   17a78:	mov	r4, r2
   17a7c:	mov	r5, r1
   17a80:	mov	r6, r0
   17a84:	bl	182ac <table_get_cell_ptr@@Base>
   17a88:	mov	r9, r0
   17a8c:	mov	r0, r6
   17a90:	mov	r1, r4
   17a94:	bl	13e54 <table_get_col_ptr@@Base>
   17a98:	ldr	r0, [r0, #4]
   17a9c:	mvn	r7, #0
   17aa0:	cmp	r0, #7
   17aa4:	bne	17ae4 <table_set_uint32@@Base+0x78>
   17aa8:	ldr	r0, [r9]
   17aac:	cmp	r0, #0
   17ab0:	bne	17ac8 <table_set_uint32@@Base+0x5c>
   17ab4:	mov	r0, #4
   17ab8:	bl	12fb4 <malloc@plt>
   17abc:	cmp	r0, #0
   17ac0:	str	r0, [r9]
   17ac4:	beq	17ae4 <table_set_uint32@@Base+0x78>
   17ac8:	str	r8, [r0]
   17acc:	mov	r0, r6
   17ad0:	mov	r1, r5
   17ad4:	mov	r2, r4
   17ad8:	mov	r3, #1
   17adc:	bl	13d6c <table_notify@@Base>
   17ae0:	mov	r7, #0
   17ae4:	mov	r0, r7
   17ae8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017aec <table_set_int64@@Base>:
   17aec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17af0:	add	fp, sp, #24
   17af4:	mov	r4, r2
   17af8:	mov	r8, r1
   17afc:	mov	r6, r0
   17b00:	bl	182ac <table_get_cell_ptr@@Base>
   17b04:	mov	r5, r0
   17b08:	mov	r0, r6
   17b0c:	mov	r1, r4
   17b10:	bl	13e54 <table_get_col_ptr@@Base>
   17b14:	ldr	r0, [r0, #4]
   17b18:	mvn	r7, #0
   17b1c:	cmp	r0, #8
   17b20:	bne	17b6c <table_set_int64@@Base+0x80>
   17b24:	ldr	r0, [r5]
   17b28:	cmp	r0, #0
   17b2c:	bne	17b44 <table_set_int64@@Base+0x58>
   17b30:	mov	r0, #8
   17b34:	bl	12fb4 <malloc@plt>
   17b38:	cmp	r0, #0
   17b3c:	str	r0, [r5]
   17b40:	beq	17b6c <table_set_int64@@Base+0x80>
   17b44:	ldr	r1, [fp, #12]
   17b48:	ldr	r2, [fp, #8]
   17b4c:	mov	r3, #1
   17b50:	str	r2, [r0]
   17b54:	str	r1, [r0, #4]
   17b58:	mov	r0, r6
   17b5c:	mov	r1, r8
   17b60:	mov	r2, r4
   17b64:	bl	13d6c <table_notify@@Base>
   17b68:	mov	r7, #0
   17b6c:	mov	r0, r7
   17b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017b74 <table_set_uint64@@Base>:
   17b74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17b78:	add	fp, sp, #24
   17b7c:	mov	r4, r2
   17b80:	mov	r8, r1
   17b84:	mov	r6, r0
   17b88:	bl	182ac <table_get_cell_ptr@@Base>
   17b8c:	mov	r5, r0
   17b90:	mov	r0, r6
   17b94:	mov	r1, r4
   17b98:	bl	13e54 <table_get_col_ptr@@Base>
   17b9c:	ldr	r0, [r0, #4]
   17ba0:	mvn	r7, #0
   17ba4:	cmp	r0, #9
   17ba8:	bne	17bf4 <table_set_uint64@@Base+0x80>
   17bac:	ldr	r0, [r5]
   17bb0:	cmp	r0, #0
   17bb4:	bne	17bcc <table_set_uint64@@Base+0x58>
   17bb8:	mov	r0, #8
   17bbc:	bl	12fb4 <malloc@plt>
   17bc0:	cmp	r0, #0
   17bc4:	str	r0, [r5]
   17bc8:	beq	17bf4 <table_set_uint64@@Base+0x80>
   17bcc:	ldr	r1, [fp, #12]
   17bd0:	ldr	r2, [fp, #8]
   17bd4:	mov	r3, #1
   17bd8:	str	r2, [r0]
   17bdc:	str	r1, [r0, #4]
   17be0:	mov	r0, r6
   17be4:	mov	r1, r8
   17be8:	mov	r2, r4
   17bec:	bl	13d6c <table_notify@@Base>
   17bf0:	mov	r7, #0
   17bf4:	mov	r0, r7
   17bf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017bfc <table_set_short@@Base>:
   17bfc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c00:	add	fp, sp, #24
   17c04:	mov	r8, r3
   17c08:	mov	r4, r2
   17c0c:	mov	r9, r1
   17c10:	mov	r6, r0
   17c14:	bl	182ac <table_get_cell_ptr@@Base>
   17c18:	mov	r5, r0
   17c1c:	mov	r0, r6
   17c20:	mov	r1, r4
   17c24:	bl	13e54 <table_get_col_ptr@@Base>
   17c28:	ldr	r0, [r0, #4]
   17c2c:	mvn	r7, #0
   17c30:	cmp	r0, #10
   17c34:	bne	17c74 <table_set_short@@Base+0x78>
   17c38:	ldr	r0, [r5]
   17c3c:	cmp	r0, #0
   17c40:	bne	17c58 <table_set_short@@Base+0x5c>
   17c44:	mov	r0, #2
   17c48:	bl	12fb4 <malloc@plt>
   17c4c:	cmp	r0, #0
   17c50:	str	r0, [r5]
   17c54:	beq	17c74 <table_set_short@@Base+0x78>
   17c58:	strh	r8, [r0]
   17c5c:	mov	r0, r6
   17c60:	mov	r1, r9
   17c64:	mov	r2, r4
   17c68:	mov	r3, #1
   17c6c:	bl	13d6c <table_notify@@Base>
   17c70:	mov	r7, #0
   17c74:	mov	r0, r7
   17c78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017c7c <table_set_ushort@@Base>:
   17c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17c80:	add	fp, sp, #24
   17c84:	mov	r8, r3
   17c88:	mov	r4, r2
   17c8c:	mov	r9, r1
   17c90:	mov	r6, r0
   17c94:	bl	182ac <table_get_cell_ptr@@Base>
   17c98:	mov	r5, r0
   17c9c:	mov	r0, r6
   17ca0:	mov	r1, r4
   17ca4:	bl	13e54 <table_get_col_ptr@@Base>
   17ca8:	ldr	r0, [r0, #4]
   17cac:	mvn	r7, #0
   17cb0:	cmp	r0, #11
   17cb4:	bne	17cf4 <table_set_ushort@@Base+0x78>
   17cb8:	ldr	r0, [r5]
   17cbc:	cmp	r0, #0
   17cc0:	bne	17cd8 <table_set_ushort@@Base+0x5c>
   17cc4:	mov	r0, #2
   17cc8:	bl	12fb4 <malloc@plt>
   17ccc:	cmp	r0, #0
   17cd0:	str	r0, [r5]
   17cd4:	beq	17cf4 <table_set_ushort@@Base+0x78>
   17cd8:	strh	r8, [r0]
   17cdc:	mov	r0, r6
   17ce0:	mov	r1, r9
   17ce4:	mov	r2, r4
   17ce8:	mov	r3, #1
   17cec:	bl	13d6c <table_notify@@Base>
   17cf0:	mov	r7, #0
   17cf4:	mov	r0, r7
   17cf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017cfc <table_set_long@@Base>:
   17cfc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d00:	add	fp, sp, #24
   17d04:	mov	r8, r3
   17d08:	mov	r4, r2
   17d0c:	mov	r5, r1
   17d10:	mov	r6, r0
   17d14:	bl	182ac <table_get_cell_ptr@@Base>
   17d18:	mov	r9, r0
   17d1c:	mov	r0, r6
   17d20:	mov	r1, r4
   17d24:	bl	13e54 <table_get_col_ptr@@Base>
   17d28:	ldr	r0, [r0, #4]
   17d2c:	mvn	r7, #0
   17d30:	cmp	r0, #12
   17d34:	bne	17d74 <table_set_long@@Base+0x78>
   17d38:	ldr	r0, [r9]
   17d3c:	cmp	r0, #0
   17d40:	bne	17d58 <table_set_long@@Base+0x5c>
   17d44:	mov	r0, #4
   17d48:	bl	12fb4 <malloc@plt>
   17d4c:	cmp	r0, #0
   17d50:	str	r0, [r9]
   17d54:	beq	17d74 <table_set_long@@Base+0x78>
   17d58:	str	r8, [r0]
   17d5c:	mov	r0, r6
   17d60:	mov	r1, r5
   17d64:	mov	r2, r4
   17d68:	mov	r3, #1
   17d6c:	bl	13d6c <table_notify@@Base>
   17d70:	mov	r7, #0
   17d74:	mov	r0, r7
   17d78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017d7c <table_set_ulong@@Base>:
   17d7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17d80:	add	fp, sp, #24
   17d84:	mov	r8, r3
   17d88:	mov	r4, r2
   17d8c:	mov	r5, r1
   17d90:	mov	r6, r0
   17d94:	bl	182ac <table_get_cell_ptr@@Base>
   17d98:	mov	r9, r0
   17d9c:	mov	r0, r6
   17da0:	mov	r1, r4
   17da4:	bl	13e54 <table_get_col_ptr@@Base>
   17da8:	ldr	r0, [r0, #4]
   17dac:	mvn	r7, #0
   17db0:	cmp	r0, #13
   17db4:	bne	17df4 <table_set_ulong@@Base+0x78>
   17db8:	ldr	r0, [r9]
   17dbc:	cmp	r0, #0
   17dc0:	bne	17dd8 <table_set_ulong@@Base+0x5c>
   17dc4:	mov	r0, #4
   17dc8:	bl	12fb4 <malloc@plt>
   17dcc:	cmp	r0, #0
   17dd0:	str	r0, [r9]
   17dd4:	beq	17df4 <table_set_ulong@@Base+0x78>
   17dd8:	str	r8, [r0]
   17ddc:	mov	r0, r6
   17de0:	mov	r1, r5
   17de4:	mov	r2, r4
   17de8:	mov	r3, #1
   17dec:	bl	13d6c <table_notify@@Base>
   17df0:	mov	r7, #0
   17df4:	mov	r0, r7
   17df8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017dfc <table_set_llong@@Base>:
   17dfc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e00:	add	fp, sp, #24
   17e04:	mov	r4, r2
   17e08:	mov	r8, r1
   17e0c:	mov	r6, r0
   17e10:	bl	182ac <table_get_cell_ptr@@Base>
   17e14:	mov	r5, r0
   17e18:	mov	r0, r6
   17e1c:	mov	r1, r4
   17e20:	bl	13e54 <table_get_col_ptr@@Base>
   17e24:	ldr	r0, [r0, #4]
   17e28:	mvn	r7, #0
   17e2c:	cmp	r0, #14
   17e30:	bne	17e7c <table_set_llong@@Base+0x80>
   17e34:	ldr	r0, [r5]
   17e38:	cmp	r0, #0
   17e3c:	bne	17e54 <table_set_llong@@Base+0x58>
   17e40:	mov	r0, #8
   17e44:	bl	12fb4 <malloc@plt>
   17e48:	cmp	r0, #0
   17e4c:	str	r0, [r5]
   17e50:	beq	17e7c <table_set_llong@@Base+0x80>
   17e54:	ldr	r1, [fp, #12]
   17e58:	ldr	r2, [fp, #8]
   17e5c:	mov	r3, #1
   17e60:	str	r2, [r0]
   17e64:	str	r1, [r0, #4]
   17e68:	mov	r0, r6
   17e6c:	mov	r1, r8
   17e70:	mov	r2, r4
   17e74:	bl	13d6c <table_notify@@Base>
   17e78:	mov	r7, #0
   17e7c:	mov	r0, r7
   17e80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017e84 <table_set_ullong@@Base>:
   17e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e88:	add	fp, sp, #24
   17e8c:	mov	r4, r2
   17e90:	mov	r8, r1
   17e94:	mov	r6, r0
   17e98:	bl	182ac <table_get_cell_ptr@@Base>
   17e9c:	mov	r5, r0
   17ea0:	mov	r0, r6
   17ea4:	mov	r1, r4
   17ea8:	bl	13e54 <table_get_col_ptr@@Base>
   17eac:	ldr	r0, [r0, #4]
   17eb0:	mvn	r7, #0
   17eb4:	cmp	r0, #15
   17eb8:	bne	17f04 <table_set_ullong@@Base+0x80>
   17ebc:	ldr	r0, [r5]
   17ec0:	cmp	r0, #0
   17ec4:	bne	17edc <table_set_ullong@@Base+0x58>
   17ec8:	mov	r0, #8
   17ecc:	bl	12fb4 <malloc@plt>
   17ed0:	cmp	r0, #0
   17ed4:	str	r0, [r5]
   17ed8:	beq	17f04 <table_set_ullong@@Base+0x80>
   17edc:	ldr	r1, [fp, #12]
   17ee0:	ldr	r2, [fp, #8]
   17ee4:	mov	r3, #1
   17ee8:	str	r2, [r0]
   17eec:	str	r1, [r0, #4]
   17ef0:	mov	r0, r6
   17ef4:	mov	r1, r8
   17ef8:	mov	r2, r4
   17efc:	bl	13d6c <table_notify@@Base>
   17f00:	mov	r7, #0
   17f04:	mov	r0, r7
   17f08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f0c <table_set_float@@Base>:
   17f0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f10:	add	fp, sp, #24
   17f14:	vpush	{d8}
   17f18:	vmov.f32	s16, s0
   17f1c:	mov	r4, r2
   17f20:	mov	r8, r1
   17f24:	mov	r6, r0
   17f28:	bl	182ac <table_get_cell_ptr@@Base>
   17f2c:	mov	r5, r0
   17f30:	mov	r0, r6
   17f34:	mov	r1, r4
   17f38:	bl	13e54 <table_get_col_ptr@@Base>
   17f3c:	ldr	r0, [r0, #4]
   17f40:	mvn	r7, #0
   17f44:	cmp	r0, #16
   17f48:	bne	17f8c <table_set_float@@Base+0x80>
   17f4c:	ldr	r0, [r5]
   17f50:	cmp	r0, #0
   17f54:	bne	17f6c <table_set_float@@Base+0x60>
   17f58:	mov	r0, #4
   17f5c:	bl	12fb4 <malloc@plt>
   17f60:	cmp	r0, #0
   17f64:	str	r0, [r5]
   17f68:	beq	17f8c <table_set_float@@Base+0x80>
   17f6c:	vmov	r1, s16
   17f70:	mov	r2, r4
   17f74:	mov	r3, #1
   17f78:	str	r1, [r0]
   17f7c:	mov	r0, r6
   17f80:	mov	r1, r8
   17f84:	bl	13d6c <table_notify@@Base>
   17f88:	mov	r7, #0
   17f8c:	mov	r0, r7
   17f90:	vpop	{d8}
   17f94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f98 <table_set_double@@Base>:
   17f98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f9c:	add	fp, sp, #24
   17fa0:	vpush	{d8}
   17fa4:	vorr	d8, d0, d0
   17fa8:	mov	r4, r2
   17fac:	mov	r5, r1
   17fb0:	mov	r6, r0
   17fb4:	bl	182ac <table_get_cell_ptr@@Base>
   17fb8:	mov	r8, r0
   17fbc:	mov	r0, r6
   17fc0:	mov	r1, r4
   17fc4:	bl	13e54 <table_get_col_ptr@@Base>
   17fc8:	ldr	r0, [r0, #4]
   17fcc:	mvn	r7, #0
   17fd0:	cmp	r0, #17
   17fd4:	bne	18014 <table_set_double@@Base+0x7c>
   17fd8:	ldr	r0, [r8]
   17fdc:	cmp	r0, #0
   17fe0:	bne	17ff8 <table_set_double@@Base+0x60>
   17fe4:	mov	r0, #8
   17fe8:	bl	12fb4 <malloc@plt>
   17fec:	cmp	r0, #0
   17ff0:	str	r0, [r8]
   17ff4:	beq	18014 <table_set_double@@Base+0x7c>
   17ff8:	vst1.8	{d8}, [r0]
   17ffc:	mov	r0, r6
   18000:	mov	r1, r5
   18004:	mov	r2, r4
   18008:	mov	r3, #1
   1800c:	bl	13d6c <table_notify@@Base>
   18010:	mov	r7, #0
   18014:	mov	r0, r7
   18018:	vpop	{d8}
   1801c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00018020 <table_set_ldouble@@Base>:
   18020:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18024:	add	fp, sp, #24
   18028:	vpush	{d8}
   1802c:	vorr	d8, d0, d0
   18030:	mov	r4, r2
   18034:	mov	r5, r1
   18038:	mov	r6, r0
   1803c:	bl	182ac <table_get_cell_ptr@@Base>
   18040:	mov	r8, r0
   18044:	mov	r0, r6
   18048:	mov	r1, r4
   1804c:	bl	13e54 <table_get_col_ptr@@Base>
   18050:	ldr	r0, [r0, #4]
   18054:	mvn	r7, #0
   18058:	cmp	r0, #18
   1805c:	bne	1809c <table_set_ldouble@@Base+0x7c>
   18060:	ldr	r0, [r8]
   18064:	cmp	r0, #0
   18068:	bne	18080 <table_set_ldouble@@Base+0x60>
   1806c:	mov	r0, #8
   18070:	bl	12fb4 <malloc@plt>
   18074:	cmp	r0, #0
   18078:	str	r0, [r8]
   1807c:	beq	1809c <table_set_ldouble@@Base+0x7c>
   18080:	vst1.8	{d8}, [r0]
   18084:	mov	r0, r6
   18088:	mov	r1, r5
   1808c:	mov	r2, r4
   18090:	mov	r3, #1
   18094:	bl	13d6c <table_notify@@Base>
   18098:	mov	r7, #0
   1809c:	mov	r0, r7
   180a0:	vpop	{d8}
   180a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000180a8 <table_set_string@@Base>:
   180a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   180ac:	add	fp, sp, #24
   180b0:	mov	r8, r3
   180b4:	mov	r4, r2
   180b8:	mov	r9, r1
   180bc:	mov	r6, r0
   180c0:	bl	182ac <table_get_cell_ptr@@Base>
   180c4:	mov	r5, r0
   180c8:	mov	r0, r6
   180cc:	mov	r1, r4
   180d0:	bl	13e54 <table_get_col_ptr@@Base>
   180d4:	ldr	r0, [r0, #4]
   180d8:	mvn	r7, #0
   180dc:	cmp	r0, #21
   180e0:	bne	18128 <table_set_string@@Base+0x80>
   180e4:	mov	r0, r8
   180e8:	bl	12fd8 <strlen@plt>
   180ec:	ldr	r2, [r5]
   180f0:	add	r1, r0, #1
   180f4:	mov	r0, r2
   180f8:	bl	12f9c <realloc@plt>
   180fc:	cmp	r0, #0
   18100:	str	r0, [r5]
   18104:	beq	18128 <table_set_string@@Base+0x80>
   18108:	mov	r1, r8
   1810c:	bl	12fa8 <strcpy@plt>
   18110:	mov	r0, r6
   18114:	mov	r1, r9
   18118:	mov	r2, r4
   1811c:	mov	r3, #1
   18120:	bl	13d6c <table_notify@@Base>
   18124:	mov	r7, #0
   18128:	mov	r0, r7
   1812c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018130 <table_set_char@@Base>:
   18130:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18134:	add	fp, sp, #24
   18138:	mov	r8, r3
   1813c:	mov	r4, r2
   18140:	mov	r9, r1
   18144:	mov	r6, r0
   18148:	bl	182ac <table_get_cell_ptr@@Base>
   1814c:	mov	r5, r0
   18150:	mov	r0, r6
   18154:	mov	r1, r4
   18158:	bl	13e54 <table_get_col_ptr@@Base>
   1815c:	ldr	r0, [r0, #4]
   18160:	mvn	r7, #0
   18164:	cmp	r0, #19
   18168:	bne	181a8 <table_set_char@@Base+0x78>
   1816c:	ldr	r0, [r5]
   18170:	cmp	r0, #0
   18174:	bne	1818c <table_set_char@@Base+0x5c>
   18178:	mov	r0, #1
   1817c:	bl	12fb4 <malloc@plt>
   18180:	cmp	r0, #0
   18184:	str	r0, [r5]
   18188:	beq	181a8 <table_set_char@@Base+0x78>
   1818c:	strb	r8, [r0]
   18190:	mov	r0, r6
   18194:	mov	r1, r9
   18198:	mov	r2, r4
   1819c:	mov	r3, #1
   181a0:	bl	13d6c <table_notify@@Base>
   181a4:	mov	r7, #0
   181a8:	mov	r0, r7
   181ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000181b0 <table_set_uchar@@Base>:
   181b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   181b4:	add	fp, sp, #24
   181b8:	mov	r8, r3
   181bc:	mov	r4, r2
   181c0:	mov	r9, r1
   181c4:	mov	r6, r0
   181c8:	bl	182ac <table_get_cell_ptr@@Base>
   181cc:	mov	r5, r0
   181d0:	mov	r0, r6
   181d4:	mov	r1, r4
   181d8:	bl	13e54 <table_get_col_ptr@@Base>
   181dc:	ldr	r0, [r0, #4]
   181e0:	mvn	r7, #0
   181e4:	cmp	r0, #20
   181e8:	bne	18228 <table_set_uchar@@Base+0x78>
   181ec:	ldr	r0, [r5]
   181f0:	cmp	r0, #0
   181f4:	bne	1820c <table_set_uchar@@Base+0x5c>
   181f8:	mov	r0, #1
   181fc:	bl	12fb4 <malloc@plt>
   18200:	cmp	r0, #0
   18204:	str	r0, [r5]
   18208:	beq	18228 <table_set_uchar@@Base+0x78>
   1820c:	strb	r8, [r0]
   18210:	mov	r0, r6
   18214:	mov	r1, r9
   18218:	mov	r2, r4
   1821c:	mov	r3, #1
   18220:	bl	13d6c <table_notify@@Base>
   18224:	mov	r7, #0
   18228:	mov	r0, r7
   1822c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018230 <table_set_ptr@@Base>:
   18230:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18234:	add	fp, sp, #24
   18238:	mov	r8, r3
   1823c:	mov	r4, r2
   18240:	mov	r5, r1
   18244:	mov	r6, r0
   18248:	bl	182ac <table_get_cell_ptr@@Base>
   1824c:	mov	r7, r0
   18250:	mov	r0, r6
   18254:	mov	r1, r4
   18258:	bl	13e54 <table_get_col_ptr@@Base>
   1825c:	ldr	r1, [r0, #4]
   18260:	mvn	r0, #0
   18264:	cmp	r1, #23
   18268:	bne	18288 <table_set_ptr@@Base+0x58>
   1826c:	mov	r0, r6
   18270:	mov	r1, r5
   18274:	mov	r2, r4
   18278:	mov	r3, #1
   1827c:	str	r8, [r7]
   18280:	bl	13d6c <table_notify@@Base>
   18284:	mov	r0, #0
   18288:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001828c <table_cell_init@@Base>:
   1828c:	push	{r4, sl, fp, lr}
   18290:	add	fp, sp, #8
   18294:	mov	r4, r2
   18298:	bl	170d0 <table_get_row_ptr@@Base>
   1829c:	ldr	r0, [r0]
   182a0:	mov	r1, #0
   182a4:	str	r1, [r0, r4, lsl #2]
   182a8:	pop	{r4, sl, fp, pc}

000182ac <table_get_cell_ptr@@Base>:
   182ac:	push	{r4, sl, fp, lr}
   182b0:	add	fp, sp, #8
   182b4:	mov	r4, r2
   182b8:	bl	170d0 <table_get_row_ptr@@Base>
   182bc:	ldr	r0, [r0]
   182c0:	add	r0, r0, r4, lsl #2
   182c4:	pop	{r4, sl, fp, pc}

000182c8 <table_cell_destroy@@Base>:
   182c8:	push	{r4, r5, r6, sl, fp, lr}
   182cc:	add	fp, sp, #16
   182d0:	mov	r5, r1
   182d4:	mov	r1, r2
   182d8:	mov	r4, r2
   182dc:	mov	r6, r0
   182e0:	bl	13f00 <table_get_column_data_type@@Base>
   182e4:	cmp	r0, #23
   182e8:	popeq	{r4, r5, r6, sl, fp, pc}
   182ec:	mov	r0, r6
   182f0:	mov	r1, r5
   182f4:	bl	170d0 <table_get_row_ptr@@Base>
   182f8:	ldr	r0, [r0]
   182fc:	ldr	r0, [r0, r4, lsl #2]
   18300:	cmp	r0, #0
   18304:	beq	18310 <table_cell_destroy@@Base+0x48>
   18308:	pop	{r4, r5, r6, sl, fp, lr}
   1830c:	b	12f90 <free@plt>
   18310:	pop	{r4, r5, r6, sl, fp, pc}

00018314 <table_cell_to_buffer@@Base>:
   18314:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18318:	add	fp, sp, #24
   1831c:	sub	sp, sp, #8
   18320:	mov	r7, r1
   18324:	mov	r1, r2
   18328:	mov	r5, r3
   1832c:	mov	r6, r2
   18330:	mov	r4, r0
   18334:	bl	13f00 <table_get_column_data_type@@Base>
   18338:	cmp	r0, #23
   1833c:	bhi	185ac <table_cell_to_buffer@@Base+0x298>
   18340:	ldr	r8, [fp, #8]
   18344:	add	r1, pc, #0
   18348:	ldr	pc, [r1, r0, lsl #2]
   1834c:	andeq	r8, r1, ip, lsr #7
   18350:	andeq	r8, r1, r0, asr #7
   18354:	ldrdeq	r8, [r1], -r4
   18358:	andeq	r8, r1, r8, ror #7
   1835c:	strdeq	r8, [r1], -ip
   18360:	andeq	r8, r1, r0, lsl r4
   18364:	andeq	r8, r1, r4, lsr #8
   18368:	andeq	r8, r1, r8, lsr r4
   1836c:	andeq	r8, r1, r8, asr r4
   18370:	andeq	r8, r1, ip, ror #8
   18374:	andeq	r8, r1, r0, lsl #9
   18378:	andeq	r8, r1, r0, lsr #9
   1837c:	andeq	r8, r1, r0, asr #9
   18380:	andeq	r8, r1, r0, ror #9
   18384:	andeq	r8, r1, r0, lsl #10
   18388:	andeq	r8, r1, r0, lsr #10
   1838c:	andeq	r8, r1, r0, asr #10
   18390:	andeq	r8, r1, r4, ror #10
   18394:	andeq	r8, r1, r4, lsl #11
   18398:			; <UNDEFINED> instruction: 0x000185b8
   1839c:	andeq	r8, r1, ip, asr #11
   183a0:	andeq	r8, r1, ip, ror #11
   183a4:	andeq	r8, r1, ip, lsl #12
   183a8:	andeq	r8, r1, r0, asr #12
   183ac:	mov	r0, r4
   183b0:	mov	r1, r7
   183b4:	mov	r2, r6
   183b8:	bl	16e8c <table_get_int@@Base>
   183bc:	b	1861c <table_cell_to_buffer@@Base+0x308>
   183c0:	mov	r0, r4
   183c4:	mov	r1, r7
   183c8:	mov	r2, r6
   183cc:	bl	16ea4 <table_get_uint@@Base>
   183d0:	b	18448 <table_cell_to_buffer@@Base+0x134>
   183d4:	mov	r0, r4
   183d8:	mov	r1, r7
   183dc:	mov	r2, r6
   183e0:	bl	16ebc <table_get_int8@@Base>
   183e4:	b	1861c <table_cell_to_buffer@@Base+0x308>
   183e8:	mov	r0, r4
   183ec:	mov	r1, r7
   183f0:	mov	r2, r6
   183f4:	bl	16ed4 <table_get_uint8@@Base>
   183f8:	b	18448 <table_cell_to_buffer@@Base+0x134>
   183fc:	mov	r0, r4
   18400:	mov	r1, r7
   18404:	mov	r2, r6
   18408:	bl	16eec <table_get_int16@@Base>
   1840c:	b	1861c <table_cell_to_buffer@@Base+0x308>
   18410:	mov	r0, r4
   18414:	mov	r1, r7
   18418:	mov	r2, r6
   1841c:	bl	16f04 <table_get_uint16@@Base>
   18420:	b	18448 <table_cell_to_buffer@@Base+0x134>
   18424:	mov	r0, r4
   18428:	mov	r1, r7
   1842c:	mov	r2, r6
   18430:	bl	16f1c <table_get_int32@@Base>
   18434:	b	1861c <table_cell_to_buffer@@Base+0x308>
   18438:	mov	r0, r4
   1843c:	mov	r1, r7
   18440:	mov	r2, r6
   18444:	bl	16f34 <table_get_uint32@@Base>
   18448:	movw	r2, #36536	; 0x8eb8
   1844c:	mov	r3, r0
   18450:	movt	r2, #1
   18454:	b	18628 <table_cell_to_buffer@@Base+0x314>
   18458:	mov	r0, r4
   1845c:	mov	r1, r7
   18460:	mov	r2, r6
   18464:	bl	16f4c <table_get_int64@@Base>
   18468:	b	18510 <table_cell_to_buffer@@Base+0x1fc>
   1846c:	mov	r0, r4
   18470:	mov	r1, r7
   18474:	mov	r2, r6
   18478:	bl	16f64 <table_get_uint64@@Base>
   1847c:	b	18530 <table_cell_to_buffer@@Base+0x21c>
   18480:	mov	r0, r4
   18484:	mov	r1, r7
   18488:	mov	r2, r6
   1848c:	bl	16f7c <table_get_short@@Base>
   18490:	movw	r2, #36549	; 0x8ec5
   18494:	mov	r3, r0
   18498:	movt	r2, #1
   1849c:	b	18628 <table_cell_to_buffer@@Base+0x314>
   184a0:	mov	r0, r4
   184a4:	mov	r1, r7
   184a8:	mov	r2, r6
   184ac:	bl	16f94 <table_get_ushort@@Base>
   184b0:	movw	r2, #36553	; 0x8ec9
   184b4:	mov	r3, r0
   184b8:	movt	r2, #1
   184bc:	b	18628 <table_cell_to_buffer@@Base+0x314>
   184c0:	mov	r0, r4
   184c4:	mov	r1, r7
   184c8:	mov	r2, r6
   184cc:	bl	16fac <table_get_long@@Base>
   184d0:	movw	r2, #36557	; 0x8ecd
   184d4:	mov	r3, r0
   184d8:	movt	r2, #1
   184dc:	b	18628 <table_cell_to_buffer@@Base+0x314>
   184e0:	mov	r0, r4
   184e4:	mov	r1, r7
   184e8:	mov	r2, r6
   184ec:	bl	16fc4 <table_get_ulong@@Base>
   184f0:	movw	r2, #36561	; 0x8ed1
   184f4:	mov	r3, r0
   184f8:	movt	r2, #1
   184fc:	b	18628 <table_cell_to_buffer@@Base+0x314>
   18500:	mov	r0, r4
   18504:	mov	r1, r7
   18508:	mov	r2, r6
   1850c:	bl	16fdc <table_get_llong@@Base>
   18510:	movw	r2, #36539	; 0x8ebb
   18514:	stm	sp, {r0, r1}
   18518:	movt	r2, #1
   1851c:	b	185a0 <table_cell_to_buffer@@Base+0x28c>
   18520:	mov	r0, r4
   18524:	mov	r1, r7
   18528:	mov	r2, r6
   1852c:	bl	16ff4 <table_get_ullong@@Base>
   18530:	movw	r2, #36544	; 0x8ec0
   18534:	stm	sp, {r0, r1}
   18538:	movt	r2, #1
   1853c:	b	185a0 <table_cell_to_buffer@@Base+0x28c>
   18540:	mov	r0, r4
   18544:	mov	r1, r7
   18548:	mov	r2, r6
   1854c:	bl	1700c <table_get_float@@Base>
   18550:	vcvt.f64.f32	d16, s0
   18554:	movw	r2, #36568	; 0x8ed8
   18558:	movt	r2, #1
   1855c:	vstr	d16, [sp]
   18560:	b	185a0 <table_cell_to_buffer@@Base+0x28c>
   18564:	mov	r0, r4
   18568:	mov	r1, r7
   1856c:	mov	r2, r6
   18570:	bl	17024 <table_get_double@@Base>
   18574:	movw	r2, #36571	; 0x8edb
   18578:	vstr	d0, [sp]
   1857c:	movt	r2, #1
   18580:	b	185a0 <table_cell_to_buffer@@Base+0x28c>
   18584:	mov	r0, r4
   18588:	mov	r1, r7
   1858c:	mov	r2, r6
   18590:	bl	1703c <table_get_ldouble@@Base>
   18594:	movw	r2, #36575	; 0x8edf
   18598:	vstr	d0, [sp]
   1859c:	movt	r2, #1
   185a0:	mov	r0, r5
   185a4:	mov	r1, r8
   185a8:	bl	12fe4 <snprintf@plt>
   185ac:	mov	r0, #0
   185b0:	sub	sp, fp, #24
   185b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   185b8:	mov	r0, r4
   185bc:	mov	r1, r7
   185c0:	mov	r2, r6
   185c4:	bl	17054 <table_get_char@@Base>
   185c8:	b	185dc <table_cell_to_buffer@@Base+0x2c8>
   185cc:	mov	r0, r4
   185d0:	mov	r1, r7
   185d4:	mov	r2, r6
   185d8:	bl	1706c <table_get_uchar@@Base>
   185dc:	movw	r2, #36579	; 0x8ee3
   185e0:	mov	r3, r0
   185e4:	movt	r2, #1
   185e8:	b	18628 <table_cell_to_buffer@@Base+0x314>
   185ec:	mov	r0, r4
   185f0:	mov	r1, r7
   185f4:	mov	r2, r6
   185f8:	bl	17084 <table_get_string@@Base>
   185fc:	movw	r2, #36565	; 0x8ed5
   18600:	mov	r3, r0
   18604:	movt	r2, #1
   18608:	b	18628 <table_cell_to_buffer@@Base+0x314>
   1860c:	mov	r0, r4
   18610:	mov	r1, r7
   18614:	mov	r2, r6
   18618:	bl	16e74 <table_get_bool@@Base>
   1861c:	movw	r2, #36257	; 0x8da1
   18620:	mov	r3, r0
   18624:	movt	r2, #1
   18628:	mov	r0, r5
   1862c:	mov	r1, r8
   18630:	bl	12fe4 <snprintf@plt>
   18634:	mov	r0, #0
   18638:	sub	sp, fp, #24
   1863c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18640:	mov	r0, r4
   18644:	mov	r1, r7
   18648:	mov	r2, r6
   1864c:	bl	17098 <table_get_ptr@@Base>
   18650:	movw	r2, #36582	; 0x8ee6
   18654:	mov	r3, r0
   18658:	movt	r2, #1
   1865c:	b	18628 <table_cell_to_buffer@@Base+0x314>

00018660 <table_cell_from_buffer@@Base>:
   18660:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18664:	add	fp, sp, #24
   18668:	sub	sp, sp, #264	; 0x108
   1866c:	mov	r5, r1
   18670:	mov	r1, r2
   18674:	mov	r7, r3
   18678:	mov	r4, r2
   1867c:	mov	r6, r0
   18680:	bl	13f00 <table_get_column_data_type@@Base>
   18684:	cmp	r0, #23
   18688:	bhi	18cb8 <table_cell_from_buffer@@Base+0x658>
   1868c:	add	r1, pc, #0
   18690:	ldr	pc, [r1, r0, lsl #2]
   18694:	strdeq	r8, [r1], -r4
   18698:	andeq	r8, r1, r0, lsr r7
   1869c:	andeq	r8, r1, ip, ror #14
   186a0:	andeq	r8, r1, r8, lsr #15
   186a4:	andeq	r8, r1, r4, ror #15
   186a8:	andeq	r8, r1, r0, lsr #16
   186ac:	andeq	r8, r1, ip, asr r8
   186b0:	muleq	r1, r8, r8
   186b4:	ldrdeq	r8, [r1], -r4
   186b8:	andeq	r8, r1, r8, lsl r9
   186bc:	andeq	r8, r1, ip, asr r9
   186c0:	muleq	r1, r8, r9
   186c4:	ldrdeq	r8, [r1], -r4
   186c8:	andeq	r8, r1, r0, lsl sl
   186cc:	andeq	r8, r1, ip, asr #20
   186d0:	muleq	r1, r0, sl
   186d4:	ldrdeq	r8, [r1], -r4
   186d8:	andeq	r8, r1, r0, lsl fp
   186dc:	andeq	r8, r1, ip, asr #22
   186e0:	andeq	r8, r1, r8, lsl #23
   186e4:	andeq	r8, r1, r4, asr #23
   186e8:	andeq	r8, r1, r0, lsl #24
   186ec:	andeq	r8, r1, ip, lsr ip
   186f0:	andeq	r8, r1, r0, lsl #25
   186f4:	movw	r1, #36257	; 0x8da1
   186f8:	add	r2, sp, #8
   186fc:	mov	r0, r7
   18700:	movt	r1, #1
   18704:	bl	12ff0 <__isoc99_sscanf@plt>
   18708:	mov	r1, r0
   1870c:	mvn	r0, #0
   18710:	cmp	r1, #1
   18714:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18718:	ldr	r3, [sp, #8]
   1871c:	mov	r0, r6
   18720:	mov	r1, r5
   18724:	mov	r2, r4
   18728:	bl	176ec <table_set_int@@Base>
   1872c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18730:	movw	r1, #36536	; 0x8eb8
   18734:	add	r2, sp, #8
   18738:	mov	r0, r7
   1873c:	movt	r1, #1
   18740:	bl	12ff0 <__isoc99_sscanf@plt>
   18744:	mov	r1, r0
   18748:	mvn	r0, #0
   1874c:	cmp	r1, #1
   18750:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18754:	ldr	r3, [sp, #8]
   18758:	mov	r0, r6
   1875c:	mov	r1, r5
   18760:	mov	r2, r4
   18764:	bl	1776c <table_set_uint@@Base>
   18768:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   1876c:	movw	r1, #36585	; 0x8ee9
   18770:	add	r2, sp, #8
   18774:	mov	r0, r7
   18778:	movt	r1, #1
   1877c:	bl	12ff0 <__isoc99_sscanf@plt>
   18780:	mov	r1, r0
   18784:	mvn	r0, #0
   18788:	cmp	r1, #1
   1878c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18790:	ldrsb	r3, [sp, #8]
   18794:	mov	r0, r6
   18798:	mov	r1, r5
   1879c:	mov	r2, r4
   187a0:	bl	177ec <table_set_int8@@Base>
   187a4:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   187a8:	movw	r1, #36590	; 0x8eee
   187ac:	add	r2, sp, #8
   187b0:	mov	r0, r7
   187b4:	movt	r1, #1
   187b8:	bl	12ff0 <__isoc99_sscanf@plt>
   187bc:	mov	r1, r0
   187c0:	mvn	r0, #0
   187c4:	cmp	r1, #1
   187c8:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   187cc:	ldrb	r3, [sp, #8]
   187d0:	mov	r0, r6
   187d4:	mov	r1, r5
   187d8:	mov	r2, r4
   187dc:	bl	1786c <table_set_uint8@@Base>
   187e0:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   187e4:	movw	r1, #36549	; 0x8ec5
   187e8:	add	r2, sp, #8
   187ec:	mov	r0, r7
   187f0:	movt	r1, #1
   187f4:	bl	12ff0 <__isoc99_sscanf@plt>
   187f8:	mov	r1, r0
   187fc:	mvn	r0, #0
   18800:	cmp	r1, #1
   18804:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18808:	ldrsh	r3, [sp, #8]
   1880c:	mov	r0, r6
   18810:	mov	r1, r5
   18814:	mov	r2, r4
   18818:	bl	178ec <table_set_int16@@Base>
   1881c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18820:	movw	r1, #36553	; 0x8ec9
   18824:	add	r2, sp, #8
   18828:	mov	r0, r7
   1882c:	movt	r1, #1
   18830:	bl	12ff0 <__isoc99_sscanf@plt>
   18834:	mov	r1, r0
   18838:	mvn	r0, #0
   1883c:	cmp	r1, #1
   18840:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18844:	ldrh	r3, [sp, #8]
   18848:	mov	r0, r6
   1884c:	mov	r1, r5
   18850:	mov	r2, r4
   18854:	bl	1796c <table_set_uint16@@Base>
   18858:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   1885c:	movw	r1, #36257	; 0x8da1
   18860:	add	r2, sp, #8
   18864:	mov	r0, r7
   18868:	movt	r1, #1
   1886c:	bl	12ff0 <__isoc99_sscanf@plt>
   18870:	mov	r1, r0
   18874:	mvn	r0, #0
   18878:	cmp	r1, #1
   1887c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18880:	ldr	r3, [sp, #8]
   18884:	mov	r0, r6
   18888:	mov	r1, r5
   1888c:	mov	r2, r4
   18890:	bl	179ec <table_set_int32@@Base>
   18894:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18898:	movw	r1, #36536	; 0x8eb8
   1889c:	add	r2, sp, #8
   188a0:	mov	r0, r7
   188a4:	movt	r1, #1
   188a8:	bl	12ff0 <__isoc99_sscanf@plt>
   188ac:	mov	r1, r0
   188b0:	mvn	r0, #0
   188b4:	cmp	r1, #1
   188b8:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   188bc:	ldr	r3, [sp, #8]
   188c0:	mov	r0, r6
   188c4:	mov	r1, r5
   188c8:	mov	r2, r4
   188cc:	bl	17a6c <table_set_uint32@@Base>
   188d0:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   188d4:	movw	r1, #36539	; 0x8ebb
   188d8:	add	r2, sp, #8
   188dc:	mov	r0, r7
   188e0:	movt	r1, #1
   188e4:	bl	12ff0 <__isoc99_sscanf@plt>
   188e8:	mov	r1, r0
   188ec:	mvn	r0, #0
   188f0:	cmp	r1, #1
   188f4:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   188f8:	ldr	r0, [sp, #8]
   188fc:	ldr	r1, [sp, #12]
   18900:	mov	r2, r4
   18904:	stm	sp, {r0, r1}
   18908:	mov	r0, r6
   1890c:	mov	r1, r5
   18910:	bl	17aec <table_set_int64@@Base>
   18914:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18918:	movw	r1, #36544	; 0x8ec0
   1891c:	add	r2, sp, #8
   18920:	mov	r0, r7
   18924:	movt	r1, #1
   18928:	bl	12ff0 <__isoc99_sscanf@plt>
   1892c:	mov	r1, r0
   18930:	mvn	r0, #0
   18934:	cmp	r1, #1
   18938:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   1893c:	ldr	r0, [sp, #8]
   18940:	ldr	r1, [sp, #12]
   18944:	mov	r2, r4
   18948:	stm	sp, {r0, r1}
   1894c:	mov	r0, r6
   18950:	mov	r1, r5
   18954:	bl	17b74 <table_set_uint64@@Base>
   18958:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   1895c:	movw	r1, #36549	; 0x8ec5
   18960:	add	r2, sp, #8
   18964:	mov	r0, r7
   18968:	movt	r1, #1
   1896c:	bl	12ff0 <__isoc99_sscanf@plt>
   18970:	mov	r1, r0
   18974:	mvn	r0, #0
   18978:	cmp	r1, #1
   1897c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18980:	ldrsh	r3, [sp, #8]
   18984:	mov	r0, r6
   18988:	mov	r1, r5
   1898c:	mov	r2, r4
   18990:	bl	17bfc <table_set_short@@Base>
   18994:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18998:	movw	r1, #36553	; 0x8ec9
   1899c:	add	r2, sp, #8
   189a0:	mov	r0, r7
   189a4:	movt	r1, #1
   189a8:	bl	12ff0 <__isoc99_sscanf@plt>
   189ac:	mov	r1, r0
   189b0:	mvn	r0, #0
   189b4:	cmp	r1, #1
   189b8:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   189bc:	ldrh	r3, [sp, #8]
   189c0:	mov	r0, r6
   189c4:	mov	r1, r5
   189c8:	mov	r2, r4
   189cc:	bl	17c7c <table_set_ushort@@Base>
   189d0:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   189d4:	movw	r1, #36557	; 0x8ecd
   189d8:	add	r2, sp, #8
   189dc:	mov	r0, r7
   189e0:	movt	r1, #1
   189e4:	bl	12ff0 <__isoc99_sscanf@plt>
   189e8:	mov	r1, r0
   189ec:	mvn	r0, #0
   189f0:	cmp	r1, #1
   189f4:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   189f8:	ldr	r3, [sp, #8]
   189fc:	mov	r0, r6
   18a00:	mov	r1, r5
   18a04:	mov	r2, r4
   18a08:	bl	17cfc <table_set_long@@Base>
   18a0c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18a10:	movw	r1, #36561	; 0x8ed1
   18a14:	add	r2, sp, #8
   18a18:	mov	r0, r7
   18a1c:	movt	r1, #1
   18a20:	bl	12ff0 <__isoc99_sscanf@plt>
   18a24:	mov	r1, r0
   18a28:	mvn	r0, #0
   18a2c:	cmp	r1, #1
   18a30:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18a34:	ldr	r3, [sp, #8]
   18a38:	mov	r0, r6
   18a3c:	mov	r1, r5
   18a40:	mov	r2, r4
   18a44:	bl	17d7c <table_set_ulong@@Base>
   18a48:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18a4c:	movw	r1, #36539	; 0x8ebb
   18a50:	add	r2, sp, #8
   18a54:	mov	r0, r7
   18a58:	movt	r1, #1
   18a5c:	bl	12ff0 <__isoc99_sscanf@plt>
   18a60:	mov	r1, r0
   18a64:	mvn	r0, #0
   18a68:	cmp	r1, #1
   18a6c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18a70:	ldr	r0, [sp, #8]
   18a74:	ldr	r1, [sp, #12]
   18a78:	mov	r2, r4
   18a7c:	stm	sp, {r0, r1}
   18a80:	mov	r0, r6
   18a84:	mov	r1, r5
   18a88:	bl	17dfc <table_set_llong@@Base>
   18a8c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18a90:	movw	r1, #36544	; 0x8ec0
   18a94:	add	r2, sp, #8
   18a98:	mov	r0, r7
   18a9c:	movt	r1, #1
   18aa0:	bl	12ff0 <__isoc99_sscanf@plt>
   18aa4:	mov	r1, r0
   18aa8:	mvn	r0, #0
   18aac:	cmp	r1, #1
   18ab0:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18ab4:	ldr	r0, [sp, #8]
   18ab8:	ldr	r1, [sp, #12]
   18abc:	mov	r2, r4
   18ac0:	stm	sp, {r0, r1}
   18ac4:	mov	r0, r6
   18ac8:	mov	r1, r5
   18acc:	bl	17e84 <table_set_ullong@@Base>
   18ad0:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18ad4:	movw	r1, #36568	; 0x8ed8
   18ad8:	add	r2, sp, #8
   18adc:	mov	r0, r7
   18ae0:	movt	r1, #1
   18ae4:	bl	12ff0 <__isoc99_sscanf@plt>
   18ae8:	mov	r1, r0
   18aec:	mvn	r0, #0
   18af0:	cmp	r1, #1
   18af4:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18af8:	vldr	s0, [sp, #8]
   18afc:	mov	r0, r6
   18b00:	mov	r1, r5
   18b04:	mov	r2, r4
   18b08:	bl	17f0c <table_set_float@@Base>
   18b0c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18b10:	movw	r1, #36571	; 0x8edb
   18b14:	add	r2, sp, #8
   18b18:	mov	r0, r7
   18b1c:	movt	r1, #1
   18b20:	bl	12ff0 <__isoc99_sscanf@plt>
   18b24:	mov	r1, r0
   18b28:	mvn	r0, #0
   18b2c:	cmp	r1, #1
   18b30:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18b34:	vldr	d0, [sp, #8]
   18b38:	mov	r0, r6
   18b3c:	mov	r1, r5
   18b40:	mov	r2, r4
   18b44:	bl	17f98 <table_set_double@@Base>
   18b48:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18b4c:	movw	r1, #36575	; 0x8edf
   18b50:	add	r2, sp, #8
   18b54:	mov	r0, r7
   18b58:	movt	r1, #1
   18b5c:	bl	12ff0 <__isoc99_sscanf@plt>
   18b60:	mov	r1, r0
   18b64:	mvn	r0, #0
   18b68:	cmp	r1, #1
   18b6c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18b70:	vldr	d0, [sp, #8]
   18b74:	mov	r0, r6
   18b78:	mov	r1, r5
   18b7c:	mov	r2, r4
   18b80:	bl	18020 <table_set_ldouble@@Base>
   18b84:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18b88:	movw	r1, #36579	; 0x8ee3
   18b8c:	add	r2, sp, #8
   18b90:	mov	r0, r7
   18b94:	movt	r1, #1
   18b98:	bl	12ff0 <__isoc99_sscanf@plt>
   18b9c:	mov	r1, r0
   18ba0:	mvn	r0, #0
   18ba4:	cmp	r1, #1
   18ba8:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18bac:	ldrb	r3, [sp, #8]
   18bb0:	mov	r0, r6
   18bb4:	mov	r1, r5
   18bb8:	mov	r2, r4
   18bbc:	bl	18130 <table_set_char@@Base>
   18bc0:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18bc4:	movw	r1, #36579	; 0x8ee3
   18bc8:	add	r2, sp, #8
   18bcc:	mov	r0, r7
   18bd0:	movt	r1, #1
   18bd4:	bl	12ff0 <__isoc99_sscanf@plt>
   18bd8:	mov	r1, r0
   18bdc:	mvn	r0, #0
   18be0:	cmp	r1, #1
   18be4:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18be8:	ldrb	r3, [sp, #8]
   18bec:	mov	r0, r6
   18bf0:	mov	r1, r5
   18bf4:	mov	r2, r4
   18bf8:	bl	181b0 <table_set_uchar@@Base>
   18bfc:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18c00:	movw	r1, #36565	; 0x8ed5
   18c04:	add	r2, sp, #8
   18c08:	mov	r0, r7
   18c0c:	movt	r1, #1
   18c10:	bl	12ff0 <__isoc99_sscanf@plt>
   18c14:	mov	r1, r0
   18c18:	mvn	r0, #0
   18c1c:	cmp	r1, #1
   18c20:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18c24:	add	r3, sp, #8
   18c28:	mov	r0, r6
   18c2c:	mov	r1, r5
   18c30:	mov	r2, r4
   18c34:	bl	180a8 <table_set_string@@Base>
   18c38:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18c3c:	movw	r1, #36257	; 0x8da1
   18c40:	add	r2, sp, #8
   18c44:	mov	r0, r7
   18c48:	movt	r1, #1
   18c4c:	bl	12ff0 <__isoc99_sscanf@plt>
   18c50:	mov	r1, r0
   18c54:	mvn	r0, #0
   18c58:	cmp	r1, #1
   18c5c:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18c60:	ldr	r3, [sp, #8]
   18c64:	mov	r0, r6
   18c68:	mov	r1, r5
   18c6c:	mov	r2, r4
   18c70:	cmp	r3, #0
   18c74:	movwne	r3, #1
   18c78:	bl	1766c <table_set_bool@@Base>
   18c7c:	b	18cb8 <table_cell_from_buffer@@Base+0x658>
   18c80:	movw	r1, #36582	; 0x8ee6
   18c84:	add	r2, sp, #8
   18c88:	mov	r0, r7
   18c8c:	movt	r1, #1
   18c90:	bl	12ff0 <__isoc99_sscanf@plt>
   18c94:	mov	r1, r0
   18c98:	mvn	r0, #0
   18c9c:	cmp	r1, #1
   18ca0:	bne	18cbc <table_cell_from_buffer@@Base+0x65c>
   18ca4:	ldr	r3, [sp, #8]
   18ca8:	mov	r0, r6
   18cac:	mov	r1, r5
   18cb0:	mov	r2, r4
   18cb4:	bl	18230 <table_set_ptr@@Base>
   18cb8:	mov	r0, #0
   18cbc:	sub	sp, fp, #24
   18cc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00018cc4 <table_cell_nullify@@Base>:
   18cc4:	push	{r4, r5, fp, lr}
   18cc8:	add	fp, sp, #8
   18ccc:	mov	r4, r2
   18cd0:	bl	170d0 <table_get_row_ptr@@Base>
   18cd4:	ldr	r5, [r0]
   18cd8:	ldr	r0, [r5, r4, lsl #2]
   18cdc:	cmp	r0, #0
   18ce0:	beq	18cf0 <table_cell_nullify@@Base+0x2c>
   18ce4:	bl	12f90 <free@plt>
   18ce8:	mov	r0, #0
   18cec:	str	r0, [r5, r4, lsl #2]
   18cf0:	mov	r0, #0
   18cf4:	pop	{r4, r5, fp, pc}

00018cf8 <__libc_csu_init@@Base>:
   18cf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18cfc:	mov	r7, r0
   18d00:	ldr	r6, [pc, #72]	; 18d50 <__libc_csu_init@@Base+0x58>
   18d04:	ldr	r5, [pc, #72]	; 18d54 <__libc_csu_init@@Base+0x5c>
   18d08:	add	r6, pc, r6
   18d0c:	add	r5, pc, r5
   18d10:	sub	r6, r6, r5
   18d14:	mov	r8, r1
   18d18:	mov	r9, r2
   18d1c:	bl	12f58 <strcmp@plt-0x20>
   18d20:	asrs	r6, r6, #2
   18d24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d28:	mov	r4, #0
   18d2c:	add	r4, r4, #1
   18d30:	ldr	r3, [r5], #4
   18d34:	mov	r2, r9
   18d38:	mov	r1, r8
   18d3c:	mov	r0, r7
   18d40:	blx	r3
   18d44:	cmp	r6, r4
   18d48:	bne	18d2c <__libc_csu_init@@Base+0x34>
   18d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18d50:	strdeq	r0, [r1], -ip
   18d54:	strdeq	r0, [r1], -r4

00018d58 <__libc_csu_fini@@Base>:
   18d58:	bx	lr

Disassembly of section .fini:

00018d5c <.fini>:
   18d5c:	push	{r3, lr}
   18d60:	pop	{r3, pc}
