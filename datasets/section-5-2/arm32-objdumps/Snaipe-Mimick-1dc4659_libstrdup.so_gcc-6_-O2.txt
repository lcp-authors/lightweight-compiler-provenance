
../repos/Snaipe-Mimick-1dc4659/sample/strdup/libstrdup.so:     file format elf32-littlearm


Disassembly of section .init:

00000344 <.init>:
 344:	push	{r3, lr}
 348:	bl	3a0 <strlen@plt+0xc>
 34c:	pop	{r3, pc}

Disassembly of section .plt:

00000350 <__cxa_finalize@plt-0x14>:
 350:	push	{lr}		; (str lr, [sp, #-4]!)
 354:	ldr	lr, [pc, #4]	; 360 <__cxa_finalize@plt-0x4>
 358:	add	lr, pc, lr
 35c:	ldr	pc, [lr, #8]!
 360:	andeq	r0, r1, r0, lsr #25

00000364 <__cxa_finalize@plt>:
 364:	add	ip, pc, #0, 12
 368:	add	ip, ip, #16, 20	; 0x10000
 36c:	ldr	pc, [ip, #3232]!	; 0xca0

00000370 <memcpy@plt>:
 370:	add	ip, pc, #0, 12
 374:	add	ip, ip, #16, 20	; 0x10000
 378:	ldr	pc, [ip, #3224]!	; 0xc98

0000037c <malloc@plt>:
 37c:	add	ip, pc, #0, 12
 380:	add	ip, ip, #16, 20	; 0x10000
 384:	ldr	pc, [ip, #3216]!	; 0xc90

00000388 <__gmon_start__@plt>:
 388:	add	ip, pc, #0, 12
 38c:	add	ip, ip, #16, 20	; 0x10000
 390:	ldr	pc, [ip, #3208]!	; 0xc88

00000394 <strlen@plt>:
 394:	add	ip, pc, #0, 12
 398:	add	ip, ip, #16, 20	; 0x10000
 39c:	ldr	pc, [ip, #3200]!	; 0xc80

Disassembly of section .text:

000003a0 <my_strdup@@Base-0x174>:
 3a0:	ldr	r3, [pc, #20]	; 3bc <strlen@plt+0x28>
 3a4:	ldr	r2, [pc, #20]	; 3c0 <strlen@plt+0x2c>
 3a8:	add	r3, pc, r3
 3ac:	ldr	r2, [r3, r2]
 3b0:	cmp	r2, #0
 3b4:	bxeq	lr
 3b8:	b	388 <__gmon_start__@plt>
 3bc:	andeq	r0, r1, r0, asr ip
 3c0:	andeq	r0, r0, r8, lsr #32
 3c4:	ldr	r3, [pc, #52]	; 400 <strlen@plt+0x6c>
 3c8:	ldr	r0, [pc, #52]	; 404 <strlen@plt+0x70>
 3cc:	add	r3, pc, r3
 3d0:	add	r0, pc, r0
 3d4:	add	r3, r3, #3
 3d8:	sub	r3, r3, r0
 3dc:	cmp	r3, #6
 3e0:	ldr	r3, [pc, #32]	; 408 <strlen@plt+0x74>
 3e4:	add	r3, pc, r3
 3e8:	bxls	lr
 3ec:	ldr	r2, [pc, #24]	; 40c <strlen@plt+0x78>
 3f0:	ldr	r3, [r3, r2]
 3f4:	cmp	r3, #0
 3f8:	bxeq	lr
 3fc:	bx	r3
 400:	andeq	r0, r1, r4, ror #24
 404:	andeq	r0, r1, r0, ror #24
 408:	andeq	r0, r1, r4, lsl ip
 40c:	andeq	r0, r0, r4, lsr #32
 410:	ldr	r1, [pc, #56]	; 450 <strlen@plt+0xbc>
 414:	ldr	r0, [pc, #56]	; 454 <strlen@plt+0xc0>
 418:	add	r1, pc, r1
 41c:	add	r0, pc, r0
 420:	sub	r1, r1, r0
 424:	ldr	r3, [pc, #44]	; 458 <strlen@plt+0xc4>
 428:	asr	r1, r1, #2
 42c:	add	r3, pc, r3
 430:	add	r1, r1, r1, lsr #31
 434:	asrs	r1, r1, #1
 438:	bxeq	lr
 43c:	ldr	r2, [pc, #24]	; 45c <strlen@plt+0xc8>
 440:	ldr	r3, [r3, r2]
 444:	cmp	r3, #0
 448:	bxeq	lr
 44c:	bx	r3
 450:	andeq	r0, r1, r8, lsl ip
 454:	andeq	r0, r1, r4, lsl ip
 458:	andeq	r0, r1, ip, asr #23
 45c:	andeq	r0, r0, r0, lsr r0
 460:	ldr	r3, [pc, #76]	; 4b4 <strlen@plt+0x120>
 464:	ldr	r2, [pc, #76]	; 4b8 <strlen@plt+0x124>
 468:	add	r3, pc, r3
 46c:	add	r2, pc, r2
 470:	ldrb	r3, [r3]
 474:	cmp	r3, #0
 478:	bxne	lr
 47c:	ldr	r3, [pc, #56]	; 4bc <strlen@plt+0x128>
 480:	push	{r4, lr}
 484:	ldr	r3, [r2, r3]
 488:	cmp	r3, #0
 48c:	beq	49c <strlen@plt+0x108>
 490:	ldr	r3, [pc, #40]	; 4c0 <strlen@plt+0x12c>
 494:	ldr	r0, [pc, r3]
 498:	bl	364 <__cxa_finalize@plt>
 49c:	bl	3c4 <strlen@plt+0x30>
 4a0:	ldr	r3, [pc, #28]	; 4c4 <strlen@plt+0x130>
 4a4:	mov	r2, #1
 4a8:	add	r3, pc, r3
 4ac:	strb	r2, [r3]
 4b0:	pop	{r4, pc}
 4b4:	andeq	r0, r1, r8, asr #23
 4b8:	andeq	r0, r1, ip, lsl #23
 4bc:	andeq	r0, r0, r0, lsr #32
 4c0:	muleq	r1, r8, fp
 4c4:	andeq	r0, r1, r8, lsl #23
 4c8:	ldr	r0, [pc, #56]	; 508 <strlen@plt+0x174>
 4cc:	ldr	r3, [pc, #56]	; 50c <strlen@plt+0x178>
 4d0:	add	r0, pc, r0
 4d4:	ldr	r2, [r0]
 4d8:	add	r3, pc, r3
 4dc:	cmp	r2, #0
 4e0:	bne	4e8 <strlen@plt+0x154>
 4e4:	b	410 <strlen@plt+0x7c>
 4e8:	ldr	r2, [pc, #32]	; 510 <strlen@plt+0x17c>
 4ec:	ldr	r3, [r3, r2]
 4f0:	cmp	r3, #0
 4f4:	beq	4e4 <strlen@plt+0x150>
 4f8:	push	{r4, lr}
 4fc:	blx	r3
 500:	pop	{r4, lr}
 504:	b	410 <strlen@plt+0x7c>
 508:	andeq	r0, r1, ip, lsr sl
 50c:	andeq	r0, r1, r0, lsr #22
 510:	andeq	r0, r0, ip, lsr #32

00000514 <my_strdup@@Base>:
 514:	push	{r4, r5, r6, lr}
 518:	mov	r6, r0
 51c:	bl	394 <strlen@plt>
 520:	add	r4, r0, #1
 524:	mov	r0, r4
 528:	bl	37c <malloc@plt>
 52c:	subs	r5, r0, #0
 530:	beq	540 <my_strdup@@Base+0x2c>
 534:	mov	r2, r4
 538:	mov	r1, r6
 53c:	bl	370 <memcpy@plt>
 540:	mov	r0, r5
 544:	pop	{r4, r5, r6, pc}

Disassembly of section .fini:

00000548 <.fini>:
 548:	push	{r3, lr}
 54c:	pop	{r3, pc}
