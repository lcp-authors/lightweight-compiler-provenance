
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012928 <.init>:
   12928:	push	{r3, lr}
   1292c:	bl	12a20 <_start@@Base+0x3c>
   12930:	pop	{r3, pc}

Disassembly of section .plt:

00012934 <raise@plt-0x14>:
   12934:	push	{lr}		; (str lr, [sp, #-4]!)
   12938:	ldr	lr, [pc, #4]	; 12944 <raise@plt-0x4>
   1293c:	add	lr, pc, lr
   12940:	ldr	pc, [lr, #8]!
   12944:			; <UNDEFINED> instruction: 0x000146bc

00012948 <raise@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #20, 20	; 0x14000
   12950:	ldr	pc, [ip, #1724]!	; 0x6bc

00012954 <strcmp@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #20, 20	; 0x14000
   1295c:	ldr	pc, [ip, #1716]!	; 0x6b4

00012960 <printf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #20, 20	; 0x14000
   12968:	ldr	pc, [ip, #1708]!	; 0x6ac

0001296c <free@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #20, 20	; 0x14000
   12974:	ldr	pc, [ip, #1700]!	; 0x6a4

00012978 <realloc@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #20, 20	; 0x14000
   12980:	ldr	pc, [ip, #1692]!	; 0x69c

00012984 <strcpy@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #20, 20	; 0x14000
   1298c:	ldr	pc, [ip, #1684]!	; 0x694

00012990 <malloc@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #20, 20	; 0x14000
   12998:	ldr	pc, [ip, #1676]!	; 0x68c

0001299c <__libc_start_main@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #20, 20	; 0x14000
   129a4:	ldr	pc, [ip, #1668]!	; 0x684

000129a8 <__gmon_start__@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #20, 20	; 0x14000
   129b0:	ldr	pc, [ip, #1660]!	; 0x67c

000129b4 <strlen@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #20, 20	; 0x14000
   129bc:	ldr	pc, [ip, #1652]!	; 0x674

000129c0 <snprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #20, 20	; 0x14000
   129c8:	ldr	pc, [ip, #1644]!	; 0x66c

000129cc <__isoc99_sscanf@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #20, 20	; 0x14000
   129d4:	ldr	pc, [ip, #1636]!	; 0x664

000129d8 <abort@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #20, 20	; 0x14000
   129e0:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

000129e4 <_start@@Base>:
   129e4:	mov	fp, #0
   129e8:	mov	lr, #0
   129ec:	pop	{r1}		; (ldr r1, [sp], #4)
   129f0:	mov	r2, sp
   129f4:	push	{r2}		; (str r2, [sp, #-4]!)
   129f8:	push	{r0}		; (str r0, [sp, #-4]!)
   129fc:	ldr	ip, [pc, #16]	; 12a14 <_start@@Base+0x30>
   12a00:	push	{ip}		; (str ip, [sp, #-4]!)
   12a04:	ldr	r0, [pc, #12]	; 12a18 <_start@@Base+0x34>
   12a08:	ldr	r3, [pc, #12]	; 12a1c <_start@@Base+0x38>
   12a0c:	bl	1299c <__libc_start_main@plt>
   12a10:	bl	129d8 <abort@plt>
   12a14:			; <UNDEFINED> instruction: 0x00016ab4
   12a18:	andeq	r2, r1, ip, lsl #22
   12a1c:	andeq	r6, r1, r4, asr sl
   12a20:	ldr	r3, [pc, #20]	; 12a3c <_start@@Base+0x58>
   12a24:	ldr	r2, [pc, #20]	; 12a40 <_start@@Base+0x5c>
   12a28:	add	r3, pc, r3
   12a2c:	ldr	r2, [r3, r2]
   12a30:	cmp	r2, #0
   12a34:	bxeq	lr
   12a38:	b	129a8 <__gmon_start__@plt>
   12a3c:	ldrdeq	r4, [r1], -r0
   12a40:	andeq	r0, r0, r0, asr #32
   12a44:	ldr	r3, [pc, #28]	; 12a68 <_start@@Base+0x84>
   12a48:	ldr	r0, [pc, #28]	; 12a6c <_start@@Base+0x88>
   12a4c:	sub	r3, r3, r0
   12a50:	cmp	r3, #6
   12a54:	bxls	lr
   12a58:	ldr	r3, [pc, #16]	; 12a70 <_start@@Base+0x8c>
   12a5c:	cmp	r3, #0
   12a60:	bxeq	lr
   12a64:	bx	r3
   12a68:	andeq	r7, r2, pc, asr #32
   12a6c:	andeq	r7, r2, ip, asr #32
   12a70:	andeq	r0, r0, r0
   12a74:	ldr	r1, [pc, #36]	; 12aa0 <_start@@Base+0xbc>
   12a78:	ldr	r0, [pc, #36]	; 12aa4 <_start@@Base+0xc0>
   12a7c:	sub	r1, r1, r0
   12a80:	asr	r1, r1, #2
   12a84:	add	r1, r1, r1, lsr #31
   12a88:	asrs	r1, r1, #1
   12a8c:	bxeq	lr
   12a90:	ldr	r3, [pc, #16]	; 12aa8 <_start@@Base+0xc4>
   12a94:	cmp	r3, #0
   12a98:	bxeq	lr
   12a9c:	bx	r3
   12aa0:	andeq	r7, r2, ip, asr #32
   12aa4:	andeq	r7, r2, ip, asr #32
   12aa8:	andeq	r0, r0, r0
   12aac:	push	{r4, lr}
   12ab0:	ldr	r4, [pc, #24]	; 12ad0 <_start@@Base+0xec>
   12ab4:	ldrb	r3, [r4]
   12ab8:	cmp	r3, #0
   12abc:	popne	{r4, pc}
   12ac0:	bl	12a44 <_start@@Base+0x60>
   12ac4:	mov	r3, #1
   12ac8:	strb	r3, [r4]
   12acc:	pop	{r4, pc}
   12ad0:	andeq	r7, r2, ip, asr #32
   12ad4:	ldr	r0, [pc, #40]	; 12b04 <_start@@Base+0x120>
   12ad8:	ldr	r3, [r0]
   12adc:	cmp	r3, #0
   12ae0:	bne	12ae8 <_start@@Base+0x104>
   12ae4:	b	12a74 <_start@@Base+0x90>
   12ae8:	ldr	r3, [pc, #24]	; 12b08 <_start@@Base+0x124>
   12aec:	cmp	r3, #0
   12af0:	beq	12ae4 <_start@@Base+0x100>
   12af4:	push	{r4, lr}
   12af8:	blx	r3
   12afc:	pop	{r4, lr}
   12b00:	b	12a74 <_start@@Base+0x90>
   12b04:	andeq	r6, r2, r4, lsl pc
   12b08:	andeq	r0, r0, r0

00012b0c <main@@Base>:
   12b0c:	push	{r4, r5, r6, r7, r8, lr}
   12b10:	vpush	{d8}
   12b14:	sub	sp, sp, #64	; 0x40
   12b18:	add	r0, sp, #8
   12b1c:	bl	12d20 <table_init@@Base>
   12b20:	mov	r2, #0
   12b24:	ldr	r1, [pc, #472]	; 12d04 <main@@Base+0x1f8>
   12b28:	add	r0, sp, #8
   12b2c:	bl	13728 <table_add_column@@Base>
   12b30:	mov	r7, r0
   12b34:	mov	r2, #16
   12b38:	ldr	r1, [pc, #456]	; 12d08 <main@@Base+0x1fc>
   12b3c:	add	r0, sp, #8
   12b40:	bl	13728 <table_add_column@@Base>
   12b44:	mov	r6, r0
   12b48:	mov	r4, #0
   12b4c:	vldr	s16, [pc, #420]	; 12cf8 <main@@Base+0x1ec>
   12b50:	mov	r5, r4
   12b54:	ldr	r8, [pc, #432]	; 12d0c <main@@Base+0x200>
   12b58:	vldr	s17, [pc, #412]	; 12cfc <main@@Base+0x1f0>
   12b5c:	b	12c98 <main@@Base+0x18c>
   12b60:	mov	r3, #0
   12b64:	mov	r2, #4
   12b68:	mov	r1, r7
   12b6c:	add	r0, sp, #8
   12b70:	bl	147ec <table_sorted_find_int@@Base>
   12b74:	mov	r4, r0
   12b78:	mov	r3, #1
   12b7c:	mov	r2, #4
   12b80:	mov	r1, r7
   12b84:	add	r0, sp, #8
   12b88:	bl	147ec <table_sorted_find_int@@Base>
   12b8c:	mov	r5, r0
   12b90:	cmp	r4, #40	; 0x28
   12b94:	moveq	r7, #0
   12b98:	beq	12bac <main@@Base+0xa0>
   12b9c:	mov	r1, r4
   12ba0:	ldr	r0, [pc, #360]	; 12d10 <main@@Base+0x204>
   12ba4:	bl	12960 <printf@plt>
   12ba8:	mvn	r7, #0
   12bac:	cmp	r5, #49	; 0x31
   12bb0:	beq	12bc4 <main@@Base+0xb8>
   12bb4:	mov	r1, r5
   12bb8:	ldr	r0, [pc, #340]	; 12d14 <main@@Base+0x208>
   12bbc:	bl	12960 <printf@plt>
   12bc0:	mvn	r7, #0
   12bc4:	vldr	s16, [pc, #308]	; 12d00 <main@@Base+0x1f4>
   12bc8:	str	r5, [sp]
   12bcc:	mov	r3, r4
   12bd0:	mov	r2, #0
   12bd4:	vmov.f32	s0, s16
   12bd8:	mov	r1, r6
   12bdc:	add	r0, sp, #8
   12be0:	bl	14dd0 <table_sorted_subset_find_float@@Base>
   12be4:	mov	r8, r0
   12be8:	str	r5, [sp]
   12bec:	mov	r3, r4
   12bf0:	mov	r2, #1
   12bf4:	vmov.f32	s0, s16
   12bf8:	mov	r1, r6
   12bfc:	add	r0, sp, #8
   12c00:	bl	14dd0 <table_sorted_subset_find_float@@Base>
   12c04:	mov	r4, r0
   12c08:	cmp	r8, #42	; 0x2a
   12c0c:	beq	12c20 <main@@Base+0x114>
   12c10:	mov	r1, r8
   12c14:	ldr	r0, [pc, #252]	; 12d18 <main@@Base+0x20c>
   12c18:	bl	12960 <printf@plt>
   12c1c:	mvn	r7, #0
   12c20:	cmp	r4, #43	; 0x2b
   12c24:	bne	12c40 <main@@Base+0x134>
   12c28:	add	r0, sp, #8
   12c2c:	bl	12d84 <table_destroy@@Base>
   12c30:	mov	r0, r7
   12c34:	add	sp, sp, #64	; 0x40
   12c38:	vpop	{d8}
   12c3c:	pop	{r4, r5, r6, r7, r8, pc}
   12c40:	mov	r1, r4
   12c44:	ldr	r0, [pc, #208]	; 12d1c <main@@Base+0x210>
   12c48:	bl	12960 <printf@plt>
   12c4c:	mvn	r7, #0
   12c50:	b	12c28 <main@@Base+0x11c>
   12c54:	tst	r4, #1
   12c58:	vaddeq.f32	s16, s16, s17
   12c5c:	add	r0, sp, #8
   12c60:	bl	15108 <table_add_row@@Base>
   12c64:	mov	r3, r5
   12c68:	mov	r2, r7
   12c6c:	mov	r1, r4
   12c70:	add	r0, sp, #8
   12c74:	bl	15964 <table_set_int@@Base>
   12c78:	vmov.f32	s0, s16
   12c7c:	mov	r2, r6
   12c80:	mov	r1, r4
   12c84:	add	r0, sp, #8
   12c88:	bl	15bc4 <table_set_float@@Base>
   12c8c:	add	r4, r4, #1
   12c90:	cmp	r4, #100	; 0x64
   12c94:	beq	12b60 <main@@Base+0x54>
   12c98:	cmp	r4, #0
   12c9c:	beq	12cc0 <main@@Base+0x1b4>
   12ca0:	smull	r2, r3, r8, r4
   12ca4:	asr	r2, r4, #31
   12ca8:	rsb	r3, r2, r3, asr #2
   12cac:	add	r3, r3, r3, lsl #2
   12cb0:	cmp	r4, r3, lsl #1
   12cb4:	addeq	r5, r5, #1
   12cb8:	vldreq	s16, [pc, #56]	; 12cf8 <main@@Base+0x1ec>
   12cbc:	b	12c54 <main@@Base+0x148>
   12cc0:	add	r0, sp, #8
   12cc4:	bl	15108 <table_add_row@@Base>
   12cc8:	mov	r3, r5
   12ccc:	mov	r2, r7
   12cd0:	mov	r1, r4
   12cd4:	add	r0, sp, #8
   12cd8:	bl	15964 <table_set_int@@Base>
   12cdc:	vmov.f32	s0, s16
   12ce0:	mov	r2, r6
   12ce4:	mov	r1, r4
   12ce8:	add	r0, sp, #8
   12cec:	bl	15bc4 <table_set_float@@Base>
   12cf0:	add	r4, r4, #1
   12cf4:	b	12c98 <main@@Base+0x18c>
   12cf8:	andeq	r0, r0, r0
   12cfc:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12d00:	svccc	0x00000000
   12d04:	andeq	r6, r1, r4, asr #21
   12d08:	andeq	r6, r1, r8, asr #21
   12d0c:	strbtvs	r6, [r6], -r7, ror #12
   12d10:	andeq	r6, r1, ip, asr #21
   12d14:	andeq	r6, r1, r4, lsl #22
   12d18:	andeq	r6, r1, ip, lsr fp
   12d1c:	andeq	r6, r1, ip, ror fp

00012d20 <table_init@@Base>:
   12d20:	mov	r3, #0
   12d24:	str	r3, [r0]
   12d28:	str	r3, [r0, #4]
   12d2c:	str	r3, [r0, #12]
   12d30:	mov	r2, #10
   12d34:	str	r2, [r0, #8]
   12d38:	str	r3, [r0, #16]
   12d3c:	str	r3, [r0, #20]
   12d40:	str	r3, [r0, #28]
   12d44:	mov	r1, #20
   12d48:	str	r1, [r0, #24]
   12d4c:	str	r3, [r0, #36]	; 0x24
   12d50:	str	r3, [r0, #40]	; 0x28
   12d54:	str	r3, [r0, #44]	; 0x2c
   12d58:	str	r3, [r0, #32]
   12d5c:	str	r3, [r0, #52]	; 0x34
   12d60:	str	r2, [r0, #48]	; 0x30
   12d64:	bx	lr

00012d68 <table_new@@Base>:
   12d68:	push	{r4, lr}
   12d6c:	mov	r0, #56	; 0x38
   12d70:	bl	12990 <malloc@plt>
   12d74:	mov	r4, r0
   12d78:	bl	12d20 <table_init@@Base>
   12d7c:	mov	r0, r4
   12d80:	pop	{r4, pc}

00012d84 <table_destroy@@Base>:
   12d84:	push	{r4, r5, r6, lr}
   12d88:	subs	r5, r0, #0
   12d8c:	popeq	{r4, r5, r6, pc}
   12d90:	mov	r3, #64	; 0x40
   12d94:	mvn	r2, #0
   12d98:	mov	r1, r2
   12d9c:	mov	r0, r5
   12da0:	bl	135bc <table_notify@@Base>
   12da4:	mov	r0, r5
   12da8:	bl	15100 <table_get_row_length@@Base>
   12dac:	subs	r6, r0, #0
   12db0:	ble	12dd0 <table_destroy@@Base+0x4c>
   12db4:	mov	r4, #0
   12db8:	mov	r1, r4
   12dbc:	mov	r0, r5
   12dc0:	bl	150b0 <table_row_destroy@@Base>
   12dc4:	add	r4, r4, #1
   12dc8:	cmp	r6, r4
   12dcc:	bne	12db8 <table_destroy@@Base+0x34>
   12dd0:	ldr	r0, [r5, #16]
   12dd4:	cmp	r0, #0
   12dd8:	beq	12de0 <table_destroy@@Base+0x5c>
   12ddc:	bl	1296c <free@plt>
   12de0:	mov	r0, r5
   12de4:	bl	136ac <table_get_column_length@@Base>
   12de8:	subs	r6, r0, #0
   12dec:	ble	12e0c <table_destroy@@Base+0x88>
   12df0:	mov	r4, #0
   12df4:	mov	r1, r4
   12df8:	mov	r0, r5
   12dfc:	bl	1368c <table_column_destroy@@Base>
   12e00:	add	r4, r4, #1
   12e04:	cmp	r6, r4
   12e08:	bne	12df4 <table_destroy@@Base+0x70>
   12e0c:	ldr	r0, [r5]
   12e10:	cmp	r0, #0
   12e14:	beq	12e1c <table_destroy@@Base+0x98>
   12e18:	bl	1296c <free@plt>
   12e1c:	ldr	r0, [r5, #36]	; 0x24
   12e20:	cmp	r0, #0
   12e24:	beq	12e2c <table_destroy@@Base+0xa8>
   12e28:	bl	1296c <free@plt>
   12e2c:	ldr	r0, [r5, #40]	; 0x28
   12e30:	cmp	r0, #0
   12e34:	beq	12e3c <table_destroy@@Base+0xb8>
   12e38:	bl	1296c <free@plt>
   12e3c:	ldr	r0, [r5, #44]	; 0x2c
   12e40:	cmp	r0, #0
   12e44:	popeq	{r4, r5, r6, pc}
   12e48:	bl	1296c <free@plt>
   12e4c:	pop	{r4, r5, r6, pc}

00012e50 <table_delete@@Base>:
   12e50:	push	{r4, lr}
   12e54:	mov	r4, r0
   12e58:	bl	12d84 <table_destroy@@Base>
   12e5c:	mov	r0, r4
   12e60:	bl	1296c <free@plt>
   12e64:	pop	{r4, pc}

00012e68 <table_dupe@@Base>:
   12e68:	push	{r4, r5, r6, r7, r8, r9, lr}
   12e6c:	sub	sp, sp, #20
   12e70:	mov	r6, r0
   12e74:	bl	15100 <table_get_row_length@@Base>
   12e78:	mov	r9, r0
   12e7c:	mov	r0, r6
   12e80:	bl	136ac <table_get_column_length@@Base>
   12e84:	mov	r7, r0
   12e88:	bl	12d68 <table_new@@Base>
   12e8c:	mov	r8, r0
   12e90:	cmp	r7, #0
   12e94:	ble	12ed4 <table_dupe@@Base+0x6c>
   12e98:	mov	r4, #0
   12e9c:	mov	r1, r4
   12ea0:	mov	r0, r6
   12ea4:	bl	139b8 <table_get_column_name@@Base>
   12ea8:	mov	r5, r0
   12eac:	mov	r1, r4
   12eb0:	mov	r0, r6
   12eb4:	bl	13714 <table_get_column_data_type@@Base>
   12eb8:	mov	r2, r0
   12ebc:	mov	r1, r5
   12ec0:	mov	r0, r8
   12ec4:	bl	13728 <table_add_column@@Base>
   12ec8:	add	r4, r4, #1
   12ecc:	cmp	r7, r4
   12ed0:	bne	12e9c <table_dupe@@Base+0x34>
   12ed4:	cmp	r9, #0
   12ed8:	ble	13340 <table_dupe@@Base+0x4d8>
   12edc:	mov	r5, #0
   12ee0:	b	13328 <table_dupe@@Base+0x4c0>
   12ee4:	mov	r2, r4
   12ee8:	mov	r1, r5
   12eec:	mov	r0, r6
   12ef0:	bl	14f28 <table_get_int@@Base>
   12ef4:	mov	r3, r0
   12ef8:	mov	r2, r4
   12efc:	mov	r1, r5
   12f00:	mov	r0, r8
   12f04:	bl	15964 <table_set_int@@Base>
   12f08:	add	r4, r4, #1
   12f0c:	cmp	r7, r4
   12f10:	beq	1331c <table_dupe@@Base+0x4b4>
   12f14:	mov	r1, r4
   12f18:	mov	r0, r6
   12f1c:	bl	13714 <table_get_column_data_type@@Base>
   12f20:	cmp	r0, #23
   12f24:	ldrls	pc, [pc, r0, lsl #2]
   12f28:	b	12f08 <table_dupe@@Base+0xa0>
   12f2c:	andeq	r2, r1, r4, ror #29
   12f30:	andeq	r2, r1, ip, lsl #31
   12f34:			; <UNDEFINED> instruction: 0x00012fb4
   12f38:	ldrdeq	r2, [r1], -ip
   12f3c:	andeq	r3, r1, r4
   12f40:	andeq	r3, r1, ip, lsr #32
   12f44:	andeq	r3, r1, r4, asr r0
   12f48:	andeq	r3, r1, ip, ror r0
   12f4c:	andeq	r3, r1, r4, lsr #1
   12f50:	andeq	r3, r1, ip, asr #1
   12f54:	strdeq	r3, [r1], -r4
   12f58:	andeq	r3, r1, ip, lsl r1
   12f5c:	andeq	r3, r1, r4, asr #2
   12f60:	andeq	r3, r1, ip, ror #2
   12f64:	muleq	r1, r4, r1
   12f68:			; <UNDEFINED> instruction: 0x000131bc
   12f6c:	andeq	r3, r1, ip, lsl #4
   12f70:	andeq	r3, r1, r0, lsr r2
   12f74:	andeq	r3, r1, r4, asr r2
   12f78:	andeq	r3, r1, r0, lsr #5
   12f7c:	andeq	r3, r1, r8, asr #5
   12f80:	andeq	r3, r1, r4, ror #3
   12f84:	andeq	r3, r1, r8, ror r2
   12f88:	strdeq	r3, [r1], -r0
   12f8c:	mov	r2, r4
   12f90:	mov	r1, r5
   12f94:	mov	r0, r6
   12f98:	bl	14f38 <table_get_uint@@Base>
   12f9c:	mov	r3, r0
   12fa0:	mov	r2, r4
   12fa4:	mov	r1, r5
   12fa8:	mov	r0, r8
   12fac:	bl	1598c <table_set_uint@@Base>
   12fb0:	b	12f08 <table_dupe@@Base+0xa0>
   12fb4:	mov	r2, r4
   12fb8:	mov	r1, r5
   12fbc:	mov	r0, r6
   12fc0:	bl	14f48 <table_get_int8@@Base>
   12fc4:	mov	r3, r0
   12fc8:	mov	r2, r4
   12fcc:	mov	r1, r5
   12fd0:	mov	r0, r8
   12fd4:	bl	159b4 <table_set_int8@@Base>
   12fd8:	b	12f08 <table_dupe@@Base+0xa0>
   12fdc:	mov	r2, r4
   12fe0:	mov	r1, r5
   12fe4:	mov	r0, r6
   12fe8:	bl	14f58 <table_get_uint8@@Base>
   12fec:	mov	r3, r0
   12ff0:	mov	r2, r4
   12ff4:	mov	r1, r5
   12ff8:	mov	r0, r8
   12ffc:	bl	159dc <table_set_uint8@@Base>
   13000:	b	12f08 <table_dupe@@Base+0xa0>
   13004:	mov	r2, r4
   13008:	mov	r1, r5
   1300c:	mov	r0, r6
   13010:	bl	14f68 <table_get_int16@@Base>
   13014:	mov	r3, r0
   13018:	mov	r2, r4
   1301c:	mov	r1, r5
   13020:	mov	r0, r8
   13024:	bl	15a04 <table_set_int16@@Base>
   13028:	b	12f08 <table_dupe@@Base+0xa0>
   1302c:	mov	r2, r4
   13030:	mov	r1, r5
   13034:	mov	r0, r6
   13038:	bl	14f78 <table_get_uint16@@Base>
   1303c:	mov	r3, r0
   13040:	mov	r2, r4
   13044:	mov	r1, r5
   13048:	mov	r0, r8
   1304c:	bl	15a2c <table_set_uint16@@Base>
   13050:	b	12f08 <table_dupe@@Base+0xa0>
   13054:	mov	r2, r4
   13058:	mov	r1, r5
   1305c:	mov	r0, r6
   13060:	bl	14f88 <table_get_int32@@Base>
   13064:	mov	r3, r0
   13068:	mov	r2, r4
   1306c:	mov	r1, r5
   13070:	mov	r0, r8
   13074:	bl	15a54 <table_set_int32@@Base>
   13078:	b	12f08 <table_dupe@@Base+0xa0>
   1307c:	mov	r2, r4
   13080:	mov	r1, r5
   13084:	mov	r0, r6
   13088:	bl	14f98 <table_get_uint32@@Base>
   1308c:	mov	r3, r0
   13090:	mov	r2, r4
   13094:	mov	r1, r5
   13098:	mov	r0, r8
   1309c:	bl	15a7c <table_set_uint32@@Base>
   130a0:	b	12f08 <table_dupe@@Base+0xa0>
   130a4:	mov	r2, r4
   130a8:	mov	r1, r5
   130ac:	mov	r0, r6
   130b0:	bl	14fa8 <table_get_int64@@Base>
   130b4:	strd	r0, [sp]
   130b8:	mov	r2, r4
   130bc:	mov	r1, r5
   130c0:	mov	r0, r8
   130c4:	bl	15aa4 <table_set_int64@@Base>
   130c8:	b	12f08 <table_dupe@@Base+0xa0>
   130cc:	mov	r2, r4
   130d0:	mov	r1, r5
   130d4:	mov	r0, r6
   130d8:	bl	14fb8 <table_get_uint64@@Base>
   130dc:	strd	r0, [sp]
   130e0:	mov	r2, r4
   130e4:	mov	r1, r5
   130e8:	mov	r0, r8
   130ec:	bl	15ac4 <table_set_uint64@@Base>
   130f0:	b	12f08 <table_dupe@@Base+0xa0>
   130f4:	mov	r2, r4
   130f8:	mov	r1, r5
   130fc:	mov	r0, r6
   13100:	bl	14fc8 <table_get_short@@Base>
   13104:	mov	r3, r0
   13108:	mov	r2, r4
   1310c:	mov	r1, r5
   13110:	mov	r0, r8
   13114:	bl	15ae4 <table_set_short@@Base>
   13118:	b	12f08 <table_dupe@@Base+0xa0>
   1311c:	mov	r2, r4
   13120:	mov	r1, r5
   13124:	mov	r0, r6
   13128:	bl	14fd8 <table_get_ushort@@Base>
   1312c:	mov	r3, r0
   13130:	mov	r2, r4
   13134:	mov	r1, r5
   13138:	mov	r0, r8
   1313c:	bl	15b0c <table_set_ushort@@Base>
   13140:	b	12f08 <table_dupe@@Base+0xa0>
   13144:	mov	r2, r4
   13148:	mov	r1, r5
   1314c:	mov	r0, r6
   13150:	bl	14fe8 <table_get_long@@Base>
   13154:	mov	r3, r0
   13158:	mov	r2, r4
   1315c:	mov	r1, r5
   13160:	mov	r0, r8
   13164:	bl	15b34 <table_set_long@@Base>
   13168:	b	12f08 <table_dupe@@Base+0xa0>
   1316c:	mov	r2, r4
   13170:	mov	r1, r5
   13174:	mov	r0, r6
   13178:	bl	14ff8 <table_get_ulong@@Base>
   1317c:	mov	r3, r0
   13180:	mov	r2, r4
   13184:	mov	r1, r5
   13188:	mov	r0, r8
   1318c:	bl	15b5c <table_set_ulong@@Base>
   13190:	b	12f08 <table_dupe@@Base+0xa0>
   13194:	mov	r2, r4
   13198:	mov	r1, r5
   1319c:	mov	r0, r6
   131a0:	bl	15008 <table_get_llong@@Base>
   131a4:	strd	r0, [sp]
   131a8:	mov	r2, r4
   131ac:	mov	r1, r5
   131b0:	mov	r0, r8
   131b4:	bl	15b84 <table_set_llong@@Base>
   131b8:	b	12f08 <table_dupe@@Base+0xa0>
   131bc:	mov	r2, r4
   131c0:	mov	r1, r5
   131c4:	mov	r0, r6
   131c8:	bl	15018 <table_get_ullong@@Base>
   131cc:	strd	r0, [sp]
   131d0:	mov	r2, r4
   131d4:	mov	r1, r5
   131d8:	mov	r0, r8
   131dc:	bl	15ba4 <table_set_ullong@@Base>
   131e0:	b	12f08 <table_dupe@@Base+0xa0>
   131e4:	mov	r2, r4
   131e8:	mov	r1, r5
   131ec:	mov	r0, r6
   131f0:	bl	15078 <table_get_string@@Base>
   131f4:	mov	r3, r0
   131f8:	mov	r2, r4
   131fc:	mov	r1, r5
   13200:	mov	r0, r8
   13204:	bl	15c30 <table_set_string@@Base>
   13208:	b	12f08 <table_dupe@@Base+0xa0>
   1320c:	mov	r2, r4
   13210:	mov	r1, r5
   13214:	mov	r0, r6
   13218:	bl	15028 <table_get_float@@Base>
   1321c:	mov	r2, r4
   13220:	mov	r1, r5
   13224:	mov	r0, r8
   13228:	bl	15bc4 <table_set_float@@Base>
   1322c:	b	12f08 <table_dupe@@Base+0xa0>
   13230:	mov	r2, r4
   13234:	mov	r1, r5
   13238:	mov	r0, r6
   1323c:	bl	15038 <table_get_double@@Base>
   13240:	mov	r2, r4
   13244:	mov	r1, r5
   13248:	mov	r0, r8
   1324c:	bl	15be8 <table_set_double@@Base>
   13250:	b	12f08 <table_dupe@@Base+0xa0>
   13254:	mov	r2, r4
   13258:	mov	r1, r5
   1325c:	mov	r0, r6
   13260:	bl	15048 <table_get_ldouble@@Base>
   13264:	mov	r2, r4
   13268:	mov	r1, r5
   1326c:	mov	r0, r8
   13270:	bl	15c0c <table_set_ldouble@@Base>
   13274:	b	12f08 <table_dupe@@Base+0xa0>
   13278:	mov	r2, r4
   1327c:	mov	r1, r5
   13280:	mov	r0, r6
   13284:	bl	14f18 <table_get_bool@@Base>
   13288:	mov	r3, r0
   1328c:	mov	r2, r4
   13290:	mov	r1, r5
   13294:	mov	r0, r8
   13298:	bl	1593c <table_set_bool@@Base>
   1329c:	b	12f08 <table_dupe@@Base+0xa0>
   132a0:	mov	r2, r4
   132a4:	mov	r1, r5
   132a8:	mov	r0, r6
   132ac:	bl	15058 <table_get_char@@Base>
   132b0:	mov	r3, r0
   132b4:	mov	r2, r4
   132b8:	mov	r1, r5
   132bc:	mov	r0, r8
   132c0:	bl	15c4c <table_set_char@@Base>
   132c4:	b	12f08 <table_dupe@@Base+0xa0>
   132c8:	mov	r2, r4
   132cc:	mov	r1, r5
   132d0:	mov	r0, r6
   132d4:	bl	15068 <table_get_uchar@@Base>
   132d8:	mov	r3, r0
   132dc:	mov	r2, r4
   132e0:	mov	r1, r5
   132e4:	mov	r0, r8
   132e8:	bl	15c74 <table_set_uchar@@Base>
   132ec:	b	12f08 <table_dupe@@Base+0xa0>
   132f0:	mov	r2, r4
   132f4:	mov	r1, r5
   132f8:	mov	r0, r6
   132fc:	bl	15084 <table_get_ptr@@Base>
   13300:	str	r0, [sp, #12]
   13304:	add	r3, sp, #12
   13308:	mov	r2, r4
   1330c:	mov	r1, r5
   13310:	mov	r0, r8
   13314:	bl	15c9c <table_set_ptr@@Base>
   13318:	b	12f08 <table_dupe@@Base+0xa0>
   1331c:	add	r5, r5, #1
   13320:	cmp	r9, r5
   13324:	beq	13340 <table_dupe@@Base+0x4d8>
   13328:	mov	r0, r8
   1332c:	bl	15108 <table_add_row@@Base>
   13330:	cmp	r7, #0
   13334:	ble	1331c <table_dupe@@Base+0x4b4>
   13338:	mov	r4, #0
   1333c:	b	12f14 <table_dupe@@Base+0xac>
   13340:	mov	r0, r8
   13344:	add	sp, sp, #20
   13348:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001334c <table_get_major_version@@Base>:
   1334c:	mov	r0, #0
   13350:	bx	lr

00013354 <table_get_minor_version@@Base>:
   13354:	mov	r0, #0
   13358:	bx	lr

0001335c <table_get_patch_version@@Base>:
   1335c:	mov	r0, #0
   13360:	bx	lr

00013364 <table_get_version@@Base>:
   13364:	ldr	r0, [pc]	; 1336c <table_get_version@@Base+0x8>
   13368:	bx	lr
   1336c:			; <UNDEFINED> instruction: 0x00016bb8

00013370 <table_get_callback_length@@Base>:
   13370:	ldr	r0, [r0, #32]
   13374:	bx	lr

00013378 <table_register_callback@@Base>:
   13378:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1337c:	ldr	r5, [r0, #32]
   13380:	cmp	r5, #0
   13384:	ble	133e0 <table_register_callback@@Base+0x68>
   13388:	ldr	lr, [r0, #36]	; 0x24
   1338c:	sub	lr, lr, #4
   13390:	mov	ip, #0
   13394:	b	133a4 <table_register_callback@@Base+0x2c>
   13398:	add	ip, ip, #1
   1339c:	cmp	ip, r5
   133a0:	beq	133e0 <table_register_callback@@Base+0x68>
   133a4:	lsl	r6, ip, #2
   133a8:	ldr	r4, [lr, #4]!
   133ac:	cmp	r1, r4
   133b0:	bne	13398 <table_register_callback@@Base+0x20>
   133b4:	ldr	r4, [r0, #40]	; 0x28
   133b8:	ldr	r4, [r4, ip, lsl #2]
   133bc:	cmp	r2, r4
   133c0:	bne	13398 <table_register_callback@@Base+0x20>
   133c4:	cmp	ip, #0
   133c8:	ble	133e0 <table_register_callback@@Base+0x68>
   133cc:	ldr	r1, [r0, #44]	; 0x2c
   133d0:	ldr	r2, [r1, r6]
   133d4:	orr	r3, r2, r3
   133d8:	str	r3, [r1, r6]
   133dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133e0:	mov	r7, r3
   133e4:	mov	r4, r2
   133e8:	mov	r9, r1
   133ec:	mov	r6, r0
   133f0:	ldr	r8, [r0, #48]	; 0x30
   133f4:	mov	r1, r8
   133f8:	mov	r0, r5
   133fc:	bl	16a24 <table_cell_nullify@@Base+0x218>
   13400:	cmp	r1, #0
   13404:	beq	13434 <table_register_callback@@Base+0xbc>
   13408:	ldr	r3, [r6, #32]
   1340c:	ldr	r2, [r6, #36]	; 0x24
   13410:	str	r9, [r2, r3, lsl #2]
   13414:	ldr	r2, [r6, #40]	; 0x28
   13418:	str	r4, [r2, r3, lsl #2]
   1341c:	ldr	r2, [r6, #44]	; 0x2c
   13420:	str	r7, [r2, r3, lsl #2]
   13424:	ldr	r3, [r6, #32]
   13428:	add	r3, r3, #1
   1342c:	str	r3, [r6, #32]
   13430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13434:	ldr	r1, [r6, #52]	; 0x34
   13438:	add	r1, r8, r1
   1343c:	str	r1, [r6, #52]	; 0x34
   13440:	lsl	r1, r1, #2
   13444:	ldr	r0, [r6, #36]	; 0x24
   13448:	bl	12978 <realloc@plt>
   1344c:	str	r0, [r6, #36]	; 0x24
   13450:	ldr	r1, [r6, #52]	; 0x34
   13454:	lsl	r1, r1, #2
   13458:	ldr	r0, [r6, #40]	; 0x28
   1345c:	bl	12978 <realloc@plt>
   13460:	str	r0, [r6, #40]	; 0x28
   13464:	ldr	r1, [r6, #52]	; 0x34
   13468:	lsl	r1, r1, #2
   1346c:	ldr	r0, [r6, #44]	; 0x2c
   13470:	bl	12978 <realloc@plt>
   13474:	str	r0, [r6, #44]	; 0x2c
   13478:	b	13408 <table_register_callback@@Base+0x90>

0001347c <table_unregister_callback@@Base>:
   1347c:	push	{r4, r5, r6, lr}
   13480:	ldr	lr, [r0, #32]
   13484:	cmp	lr, #0
   13488:	pople	{r4, r5, r6, pc}
   1348c:	ldr	r4, [r0, #36]	; 0x24
   13490:	sub	r4, r4, #4
   13494:	mov	r3, #0
   13498:	b	134a8 <table_unregister_callback@@Base+0x2c>
   1349c:	add	r3, r3, #1
   134a0:	cmp	r3, lr
   134a4:	beq	1357c <table_unregister_callback@@Base+0x100>
   134a8:	lsl	ip, r3, #2
   134ac:	ldr	r5, [r4, #4]!
   134b0:	cmp	r1, r5
   134b4:	bne	1349c <table_unregister_callback@@Base+0x20>
   134b8:	ldr	r5, [r0, #40]	; 0x28
   134bc:	ldr	r5, [r5, r3, lsl #2]
   134c0:	cmp	r2, r5
   134c4:	bne	1349c <table_unregister_callback@@Base+0x20>
   134c8:	cmn	r3, #1
   134cc:	popeq	{r4, r5, r6, pc}
   134d0:	sub	lr, lr, #1
   134d4:	cmp	lr, r3
   134d8:	ble	1351c <table_unregister_callback@@Base+0xa0>
   134dc:	ldr	r1, [r0, #36]	; 0x24
   134e0:	add	r2, ip, #4
   134e4:	ldr	lr, [r1, r2]
   134e8:	str	lr, [r1, ip]
   134ec:	ldr	r1, [r0, #40]	; 0x28
   134f0:	ldr	lr, [r1, r2]
   134f4:	str	lr, [r1, ip]
   134f8:	ldr	r1, [r0, #44]	; 0x2c
   134fc:	ldr	lr, [r1, r2]
   13500:	str	lr, [r1, ip]
   13504:	add	r3, r3, #1
   13508:	ldr	lr, [r0, #32]
   1350c:	sub	lr, lr, #1
   13510:	mov	ip, r2
   13514:	cmp	lr, r3
   13518:	bgt	134dc <table_unregister_callback@@Base+0x60>
   1351c:	mov	r4, r0
   13520:	str	lr, [r0, #32]
   13524:	ldr	r5, [r0, #48]	; 0x30
   13528:	mov	r1, r5
   1352c:	mov	r0, lr
   13530:	bl	16a24 <table_cell_nullify@@Base+0x218>
   13534:	cmp	r1, #0
   13538:	popne	{r4, r5, r6, pc}
   1353c:	ldr	r1, [r4, #52]	; 0x34
   13540:	sub	r1, r1, r5
   13544:	str	r1, [r4, #52]	; 0x34
   13548:	cmp	r1, #0
   1354c:	bne	13580 <table_unregister_callback@@Base+0x104>
   13550:	ldr	r0, [r4, #36]	; 0x24
   13554:	bl	1296c <free@plt>
   13558:	ldr	r0, [r4, #40]	; 0x28
   1355c:	bl	1296c <free@plt>
   13560:	ldr	r0, [r4, #44]	; 0x2c
   13564:	bl	1296c <free@plt>
   13568:	mov	r3, #0
   1356c:	str	r3, [r4, #36]	; 0x24
   13570:	str	r3, [r4, #40]	; 0x28
   13574:	str	r3, [r4, #44]	; 0x2c
   13578:	pop	{r4, r5, r6, pc}
   1357c:	pop	{r4, r5, r6, pc}
   13580:	lsl	r1, r1, #2
   13584:	ldr	r0, [r4, #36]	; 0x24
   13588:	bl	12978 <realloc@plt>
   1358c:	str	r0, [r4, #36]	; 0x24
   13590:	ldr	r1, [r4, #52]	; 0x34
   13594:	lsl	r1, r1, #2
   13598:	ldr	r0, [r4, #40]	; 0x28
   1359c:	bl	12978 <realloc@plt>
   135a0:	str	r0, [r4, #40]	; 0x28
   135a4:	ldr	r1, [r4, #52]	; 0x34
   135a8:	lsl	r1, r1, #2
   135ac:	ldr	r0, [r4, #44]	; 0x2c
   135b0:	bl	12978 <realloc@plt>
   135b4:	str	r0, [r4, #44]	; 0x2c
   135b8:	pop	{r4, r5, r6, pc}

000135bc <table_notify@@Base>:
   135bc:	ldr	ip, [r0, #32]
   135c0:	cmp	ip, #0
   135c4:	bxle	lr
   135c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   135cc:	sub	sp, sp, #12
   135d0:	mov	r6, r3
   135d4:	mov	r8, r2
   135d8:	mov	r7, r1
   135dc:	mov	r5, r0
   135e0:	mov	r4, #0
   135e4:	b	135f8 <table_notify@@Base+0x3c>
   135e8:	add	r4, r4, #1
   135ec:	ldr	r0, [r5, #32]
   135f0:	cmp	r0, r4
   135f4:	ble	13634 <table_notify@@Base+0x78>
   135f8:	ldr	r0, [r5, #44]	; 0x2c
   135fc:	ldr	r0, [r0, r4, lsl #2]
   13600:	tst	r6, r0
   13604:	beq	135e8 <table_notify@@Base+0x2c>
   13608:	ldr	r3, [r5, #36]	; 0x24
   1360c:	ldr	r2, [r5, #40]	; 0x28
   13610:	ldr	r2, [r2, r4, lsl #2]
   13614:	str	r2, [sp]
   13618:	ldr	r9, [r3, r4, lsl #2]
   1361c:	mov	r3, r6
   13620:	mov	r2, r8
   13624:	mov	r1, r7
   13628:	mov	r0, r5
   1362c:	blx	r9
   13630:	b	135e8 <table_notify@@Base+0x2c>
   13634:	add	sp, sp, #12
   13638:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001363c <table_column_init@@Base>:
   1363c:	push	{r4, r5, r6, r7, r8, lr}
   13640:	mov	r7, r2
   13644:	mov	r8, r3
   13648:	add	r1, r1, r1, lsl #1
   1364c:	lsl	r4, r1, #2
   13650:	ldr	r6, [r0]
   13654:	add	r5, r6, r4
   13658:	mov	r0, r2
   1365c:	bl	129b4 <strlen@plt>
   13660:	add	r0, r0, #1
   13664:	bl	12990 <malloc@plt>
   13668:	str	r0, [r6, r4]
   1366c:	cmp	r0, #0
   13670:	beq	1367c <table_column_init@@Base+0x40>
   13674:	mov	r1, r7
   13678:	bl	12984 <strcpy@plt>
   1367c:	str	r8, [r5, #4]
   13680:	ldr	r3, [sp, #24]
   13684:	str	r3, [r5, #8]
   13688:	pop	{r4, r5, r6, r7, r8, pc}

0001368c <table_column_destroy@@Base>:
   1368c:	ldr	r3, [r0]
   13690:	add	r1, r1, r1, lsl #1
   13694:	ldr	r0, [r3, r1, lsl #2]
   13698:	cmp	r0, #0
   1369c:	bxeq	lr
   136a0:	push	{r4, lr}
   136a4:	bl	1296c <free@plt>
   136a8:	pop	{r4, pc}

000136ac <table_get_column_length@@Base>:
   136ac:	ldr	r0, [r0, #4]
   136b0:	bx	lr

000136b4 <table_get_column@@Base>:
   136b4:	push	{r4, r5, r6, r7, r8, lr}
   136b8:	ldr	r7, [r0, #4]
   136bc:	cmp	r7, #0
   136c0:	ble	13700 <table_get_column@@Base+0x4c>
   136c4:	mov	r6, r1
   136c8:	ldr	r8, [r0]
   136cc:	mov	r5, #0
   136d0:	mov	r4, r5
   136d4:	mov	r1, r6
   136d8:	ldr	r0, [r8, r5]
   136dc:	bl	12954 <strcmp@plt>
   136e0:	cmp	r0, #0
   136e4:	beq	13704 <table_get_column@@Base+0x50>
   136e8:	add	r4, r4, #1
   136ec:	add	r5, r5, #12
   136f0:	cmp	r4, r7
   136f4:	bne	136d4 <table_get_column@@Base+0x20>
   136f8:	mvn	r4, #0
   136fc:	b	1370c <table_get_column@@Base+0x58>
   13700:	mov	r4, #0
   13704:	cmp	r7, r4
   13708:	mvneq	r4, #0
   1370c:	mov	r0, r4
   13710:	pop	{r4, r5, r6, r7, r8, pc}

00013714 <table_get_column_data_type@@Base>:
   13714:	ldr	r3, [r0]
   13718:	add	r1, r1, r1, lsl #1
   1371c:	add	r3, r3, r1, lsl #2
   13720:	ldr	r0, [r3, #4]
   13724:	bx	lr

00013728 <table_add_column@@Base>:
   13728:	push	{r4, r5, r6, r7, r8, r9, lr}
   1372c:	sub	sp, sp, #12
   13730:	mov	r5, r0
   13734:	mov	r9, r1
   13738:	mov	r8, r2
   1373c:	ldr	r4, [r0, #8]
   13740:	mov	r1, r4
   13744:	ldr	r0, [r0, #4]
   13748:	bl	16a24 <table_cell_nullify@@Base+0x218>
   1374c:	cmp	r1, #0
   13750:	beq	137d4 <table_add_column@@Base+0xac>
   13754:	mov	r0, r5
   13758:	bl	15100 <table_get_row_length@@Base>
   1375c:	mov	r6, r0
   13760:	ldr	r7, [r5, #4]
   13764:	mov	r0, r8
   13768:	bl	140f4 <table_get_default_compare_function_for_data_type@@Base>
   1376c:	str	r0, [sp]
   13770:	mov	r3, r8
   13774:	mov	r2, r9
   13778:	mov	r1, r7
   1377c:	mov	r0, r5
   13780:	bl	1363c <table_column_init@@Base>
   13784:	cmp	r6, #0
   13788:	ble	137ac <table_add_column@@Base+0x84>
   1378c:	mov	r4, #0
   13790:	mov	r2, r7
   13794:	mov	r1, r4
   13798:	mov	r0, r5
   1379c:	bl	167b4 <table_cell_init@@Base>
   137a0:	add	r4, r4, #1
   137a4:	cmp	r6, r4
   137a8:	bne	13790 <table_add_column@@Base+0x68>
   137ac:	mov	r3, #8
   137b0:	ldr	r2, [r5, #4]
   137b4:	mvn	r1, #0
   137b8:	mov	r0, r5
   137bc:	bl	135bc <table_notify@@Base>
   137c0:	ldr	r0, [r5, #4]
   137c4:	add	r3, r0, #1
   137c8:	str	r3, [r5, #4]
   137cc:	add	sp, sp, #12
   137d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   137d4:	ldr	r1, [r5, #12]
   137d8:	add	r4, r4, r1
   137dc:	str	r4, [r5, #12]
   137e0:	add	r4, r4, r4, lsl #1
   137e4:	lsl	r1, r4, #2
   137e8:	ldr	r0, [r5]
   137ec:	bl	12978 <realloc@plt>
   137f0:	str	r0, [r5]
   137f4:	mov	r0, r5
   137f8:	bl	15100 <table_get_row_length@@Base>
   137fc:	subs	r7, r0, #0
   13800:	ble	13754 <table_add_column@@Base+0x2c>
   13804:	mov	r4, #0
   13808:	mov	r1, r4
   1380c:	mov	r0, r5
   13810:	bl	152c0 <table_get_row_ptr@@Base>
   13814:	mov	r6, r0
   13818:	ldr	r1, [r5, #12]
   1381c:	lsl	r1, r1, #2
   13820:	ldr	r0, [r0]
   13824:	bl	12978 <realloc@plt>
   13828:	str	r0, [r6]
   1382c:	add	r4, r4, #1
   13830:	cmp	r7, r4
   13834:	bne	13808 <table_add_column@@Base+0xe0>
   13838:	b	13754 <table_add_column@@Base+0x2c>

0001383c <table_remove_column@@Base>:
   1383c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13840:	mov	r6, r0
   13844:	mov	r7, r1
   13848:	bl	1368c <table_column_destroy@@Base>
   1384c:	ldr	r4, [r6, #4]
   13850:	sub	r8, r4, #1
   13854:	cmp	r7, r8
   13858:	bge	138a0 <table_remove_column@@Base+0x64>
   1385c:	add	r3, r7, r7, lsl #1
   13860:	lsl	r3, r3, #2
   13864:	mov	r0, r7
   13868:	ldr	r2, [r6]
   1386c:	add	ip, r3, #12
   13870:	add	lr, r2, r3
   13874:	add	r1, r2, ip
   13878:	ldr	r9, [r1]
   1387c:	ldr	r5, [r1, #4]
   13880:	ldr	r1, [r1, #8]
   13884:	str	r9, [r2, r3]
   13888:	str	r5, [lr, #4]
   1388c:	str	r1, [lr, #8]
   13890:	add	r0, r0, #1
   13894:	mov	r3, ip
   13898:	cmp	r8, r0
   1389c:	bgt	13868 <table_remove_column@@Base+0x2c>
   138a0:	mov	r0, r6
   138a4:	bl	15100 <table_get_row_length@@Base>
   138a8:	subs	r9, r0, #0
   138ac:	ble	13914 <table_remove_column@@Base+0xd8>
   138b0:	lsl	sl, r7, #2
   138b4:	mov	r5, #0
   138b8:	sub	r4, r4, #1
   138bc:	mov	r2, r7
   138c0:	mov	r1, r5
   138c4:	mov	r0, r6
   138c8:	bl	167c8 <table_cell_destroy@@Base>
   138cc:	mov	r1, r5
   138d0:	mov	r0, r6
   138d4:	bl	152c0 <table_get_row_ptr@@Base>
   138d8:	cmp	r7, r8
   138dc:	bge	13908 <table_remove_column@@Base+0xcc>
   138e0:	mov	r2, sl
   138e4:	mov	r3, r7
   138e8:	ldr	ip, [r0]
   138ec:	add	r1, r2, #4
   138f0:	ldr	lr, [ip, r1]
   138f4:	str	lr, [ip, r2]
   138f8:	add	r3, r3, #1
   138fc:	mov	r2, r1
   13900:	cmp	r3, r4
   13904:	bne	138e8 <table_remove_column@@Base+0xac>
   13908:	add	r5, r5, #1
   1390c:	cmp	r9, r5
   13910:	bne	138bc <table_remove_column@@Base+0x80>
   13914:	ldr	r0, [r6, #4]
   13918:	sub	r0, r0, #1
   1391c:	str	r0, [r6, #4]
   13920:	ldr	r4, [r6, #8]
   13924:	mov	r1, r4
   13928:	bl	16a24 <table_cell_nullify@@Base+0x218>
   1392c:	cmp	r1, #0
   13930:	beq	13950 <table_remove_column@@Base+0x114>
   13934:	mov	r3, #16
   13938:	mov	r2, r7
   1393c:	mvn	r1, #0
   13940:	mov	r0, r6
   13944:	bl	135bc <table_notify@@Base>
   13948:	mov	r0, #0
   1394c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13950:	ldr	r1, [r6, #12]
   13954:	sub	r1, r1, r4
   13958:	str	r1, [r6, #12]
   1395c:	add	r1, r1, r1, lsl #1
   13960:	lsl	r1, r1, #2
   13964:	ldr	r0, [r6]
   13968:	bl	12978 <realloc@plt>
   1396c:	str	r0, [r6]
   13970:	mov	r0, r6
   13974:	bl	15100 <table_get_row_length@@Base>
   13978:	subs	r8, r0, #0
   1397c:	ble	13934 <table_remove_column@@Base+0xf8>
   13980:	mov	r4, #0
   13984:	mov	r1, r4
   13988:	mov	r0, r6
   1398c:	bl	152c0 <table_get_row_ptr@@Base>
   13990:	mov	r5, r0
   13994:	ldr	r1, [r6, #12]
   13998:	lsl	r1, r1, #2
   1399c:	ldr	r0, [r0]
   139a0:	bl	12978 <realloc@plt>
   139a4:	str	r0, [r5]
   139a8:	add	r4, r4, #1
   139ac:	cmp	r8, r4
   139b0:	bne	13984 <table_remove_column@@Base+0x148>
   139b4:	b	13934 <table_remove_column@@Base+0xf8>

000139b8 <table_get_column_name@@Base>:
   139b8:	ldr	r3, [r0]
   139bc:	add	r1, r1, r1, lsl #1
   139c0:	ldr	r0, [r3, r1, lsl #2]
   139c4:	bx	lr

000139c8 <table_get_col_ptr@@Base>:
   139c8:	add	r1, r1, r1, lsl #1
   139cc:	ldr	r0, [r0]
   139d0:	add	r0, r0, r1, lsl #2
   139d4:	bx	lr

000139d8 <table_get_column_compare_function@@Base>:
   139d8:	ldr	r3, [r0]
   139dc:	add	r1, r1, r1, lsl #1
   139e0:	add	r3, r3, r1, lsl #2
   139e4:	ldr	r0, [r3, #8]
   139e8:	bx	lr

000139ec <table_set_column_compare_function@@Base>:
   139ec:	ldr	r3, [r0]
   139f0:	add	r1, r1, r1, lsl #1
   139f4:	add	r3, r3, r1, lsl #2
   139f8:	str	r2, [r3, #8]
   139fc:	bx	lr

00013a00 <table_compare_bool@@Base>:
   13a00:	cmp	r0, #0
   13a04:	beq	13a30 <table_compare_bool@@Base+0x30>
   13a08:	cmp	r1, #0
   13a0c:	beq	13a3c <table_compare_bool@@Base+0x3c>
   13a10:	ldrb	r0, [r0]
   13a14:	ldrb	r1, [r1]
   13a18:	cmp	r0, r1
   13a1c:	bgt	13a44 <table_compare_bool@@Base+0x44>
   13a20:	cmp	r0, r1
   13a24:	movge	r0, #0
   13a28:	mvnlt	r0, #0
   13a2c:	bx	lr
   13a30:	adds	r0, r1, #0
   13a34:	mvnne	r0, #0
   13a38:	bx	lr
   13a3c:	mov	r0, #1
   13a40:	bx	lr
   13a44:	mov	r0, #1
   13a48:	bx	lr

00013a4c <table_compare_int@@Base>:
   13a4c:	cmp	r0, #0
   13a50:	beq	13a7c <table_compare_int@@Base+0x30>
   13a54:	cmp	r1, #0
   13a58:	beq	13a88 <table_compare_int@@Base+0x3c>
   13a5c:	ldr	r0, [r0]
   13a60:	ldr	r1, [r1]
   13a64:	cmp	r0, r1
   13a68:	bgt	13a90 <table_compare_int@@Base+0x44>
   13a6c:	cmp	r0, r1
   13a70:	movge	r0, #0
   13a74:	mvnlt	r0, #0
   13a78:	bx	lr
   13a7c:	adds	r0, r1, #0
   13a80:	mvnne	r0, #0
   13a84:	bx	lr
   13a88:	mov	r0, #1
   13a8c:	bx	lr
   13a90:	mov	r0, #1
   13a94:	bx	lr

00013a98 <table_compare_uint@@Base>:
   13a98:	cmp	r0, #0
   13a9c:	beq	13ac8 <table_compare_uint@@Base+0x30>
   13aa0:	cmp	r1, #0
   13aa4:	beq	13ad4 <table_compare_uint@@Base+0x3c>
   13aa8:	ldr	r0, [r0]
   13aac:	ldr	r1, [r1]
   13ab0:	cmp	r0, r1
   13ab4:	bhi	13adc <table_compare_uint@@Base+0x44>
   13ab8:	cmp	r0, r1
   13abc:	movcs	r0, #0
   13ac0:	mvncc	r0, #0
   13ac4:	bx	lr
   13ac8:	adds	r0, r1, #0
   13acc:	mvnne	r0, #0
   13ad0:	bx	lr
   13ad4:	mov	r0, #1
   13ad8:	bx	lr
   13adc:	mov	r0, #1
   13ae0:	bx	lr

00013ae4 <table_compare_int8@@Base>:
   13ae4:	cmp	r0, #0
   13ae8:	beq	13b14 <table_compare_int8@@Base+0x30>
   13aec:	cmp	r1, #0
   13af0:	beq	13b20 <table_compare_int8@@Base+0x3c>
   13af4:	ldrsb	r0, [r0]
   13af8:	ldrsb	r1, [r1]
   13afc:	cmp	r0, r1
   13b00:	bgt	13b28 <table_compare_int8@@Base+0x44>
   13b04:	cmp	r0, r1
   13b08:	movge	r0, #0
   13b0c:	mvnlt	r0, #0
   13b10:	bx	lr
   13b14:	adds	r0, r1, #0
   13b18:	mvnne	r0, #0
   13b1c:	bx	lr
   13b20:	mov	r0, #1
   13b24:	bx	lr
   13b28:	mov	r0, #1
   13b2c:	bx	lr

00013b30 <table_compare_uint8@@Base>:
   13b30:	cmp	r0, #0
   13b34:	beq	13b60 <table_compare_uint8@@Base+0x30>
   13b38:	cmp	r1, #0
   13b3c:	beq	13b6c <table_compare_uint8@@Base+0x3c>
   13b40:	ldrb	r0, [r0]
   13b44:	ldrb	r1, [r1]
   13b48:	cmp	r0, r1
   13b4c:	bhi	13b74 <table_compare_uint8@@Base+0x44>
   13b50:	cmp	r0, r1
   13b54:	movcs	r0, #0
   13b58:	mvncc	r0, #0
   13b5c:	bx	lr
   13b60:	adds	r0, r1, #0
   13b64:	mvnne	r0, #0
   13b68:	bx	lr
   13b6c:	mov	r0, #1
   13b70:	bx	lr
   13b74:	mov	r0, #1
   13b78:	bx	lr

00013b7c <table_compare_int16@@Base>:
   13b7c:	cmp	r0, #0
   13b80:	beq	13bac <table_compare_int16@@Base+0x30>
   13b84:	cmp	r1, #0
   13b88:	beq	13bb8 <table_compare_int16@@Base+0x3c>
   13b8c:	ldrsh	r0, [r0]
   13b90:	ldrsh	r1, [r1]
   13b94:	cmp	r0, r1
   13b98:	bgt	13bc0 <table_compare_int16@@Base+0x44>
   13b9c:	cmp	r0, r1
   13ba0:	movge	r0, #0
   13ba4:	mvnlt	r0, #0
   13ba8:	bx	lr
   13bac:	adds	r0, r1, #0
   13bb0:	mvnne	r0, #0
   13bb4:	bx	lr
   13bb8:	mov	r0, #1
   13bbc:	bx	lr
   13bc0:	mov	r0, #1
   13bc4:	bx	lr

00013bc8 <table_compare_uint16@@Base>:
   13bc8:	cmp	r0, #0
   13bcc:	beq	13bf8 <table_compare_uint16@@Base+0x30>
   13bd0:	cmp	r1, #0
   13bd4:	beq	13c04 <table_compare_uint16@@Base+0x3c>
   13bd8:	ldrh	r0, [r0]
   13bdc:	ldrh	r1, [r1]
   13be0:	cmp	r0, r1
   13be4:	bhi	13c0c <table_compare_uint16@@Base+0x44>
   13be8:	cmp	r0, r1
   13bec:	movcs	r0, #0
   13bf0:	mvncc	r0, #0
   13bf4:	bx	lr
   13bf8:	adds	r0, r1, #0
   13bfc:	mvnne	r0, #0
   13c00:	bx	lr
   13c04:	mov	r0, #1
   13c08:	bx	lr
   13c0c:	mov	r0, #1
   13c10:	bx	lr

00013c14 <table_compare_int32@@Base>:
   13c14:	cmp	r0, #0
   13c18:	beq	13c44 <table_compare_int32@@Base+0x30>
   13c1c:	cmp	r1, #0
   13c20:	beq	13c50 <table_compare_int32@@Base+0x3c>
   13c24:	ldr	r0, [r0]
   13c28:	ldr	r1, [r1]
   13c2c:	cmp	r0, r1
   13c30:	bgt	13c58 <table_compare_int32@@Base+0x44>
   13c34:	cmp	r0, r1
   13c38:	movge	r0, #0
   13c3c:	mvnlt	r0, #0
   13c40:	bx	lr
   13c44:	adds	r0, r1, #0
   13c48:	mvnne	r0, #0
   13c4c:	bx	lr
   13c50:	mov	r0, #1
   13c54:	bx	lr
   13c58:	mov	r0, #1
   13c5c:	bx	lr

00013c60 <table_compare_uint32@@Base>:
   13c60:	cmp	r0, #0
   13c64:	beq	13c90 <table_compare_uint32@@Base+0x30>
   13c68:	cmp	r1, #0
   13c6c:	beq	13c9c <table_compare_uint32@@Base+0x3c>
   13c70:	ldr	r0, [r0]
   13c74:	ldr	r1, [r1]
   13c78:	cmp	r0, r1
   13c7c:	bhi	13ca4 <table_compare_uint32@@Base+0x44>
   13c80:	cmp	r0, r1
   13c84:	movcs	r0, #0
   13c88:	mvncc	r0, #0
   13c8c:	bx	lr
   13c90:	adds	r0, r1, #0
   13c94:	mvnne	r0, #0
   13c98:	bx	lr
   13c9c:	mov	r0, #1
   13ca0:	bx	lr
   13ca4:	mov	r0, #1
   13ca8:	bx	lr

00013cac <table_compare_int64@@Base>:
   13cac:	cmp	r0, #0
   13cb0:	beq	13cf0 <table_compare_int64@@Base+0x44>
   13cb4:	cmp	r1, #0
   13cb8:	beq	13cfc <table_compare_int64@@Base+0x50>
   13cbc:	push	{r4, r5}
   13cc0:	ldrd	r4, [r0]
   13cc4:	ldrd	r2, [r1]
   13cc8:	cmp	r2, r4
   13ccc:	sbcs	r1, r3, r5
   13cd0:	movlt	r0, #1
   13cd4:	blt	13ce8 <table_compare_int64@@Base+0x3c>
   13cd8:	cmp	r4, r2
   13cdc:	sbcs	r3, r5, r3
   13ce0:	mvnlt	r0, #0
   13ce4:	movge	r0, #0
   13ce8:	pop	{r4, r5}
   13cec:	bx	lr
   13cf0:	adds	r0, r1, #0
   13cf4:	mvnne	r0, #0
   13cf8:	bx	lr
   13cfc:	mov	r0, #1
   13d00:	bx	lr

00013d04 <table_compare_uint64@@Base>:
   13d04:	cmp	r0, #0
   13d08:	beq	13d40 <table_compare_uint64@@Base+0x3c>
   13d0c:	cmp	r1, #0
   13d10:	beq	13d4c <table_compare_uint64@@Base+0x48>
   13d14:	push	{r4, r5}
   13d18:	ldrd	r4, [r0]
   13d1c:	ldrd	r2, [r1]
   13d20:	cmp	r5, r3
   13d24:	cmpeq	r4, r2
   13d28:	movhi	r0, #1
   13d2c:	bhi	13d38 <table_compare_uint64@@Base+0x34>
   13d30:	mvncc	r0, #0
   13d34:	movcs	r0, #0
   13d38:	pop	{r4, r5}
   13d3c:	bx	lr
   13d40:	adds	r0, r1, #0
   13d44:	mvnne	r0, #0
   13d48:	bx	lr
   13d4c:	mov	r0, #1
   13d50:	bx	lr

00013d54 <table_compare_short@@Base>:
   13d54:	cmp	r0, #0
   13d58:	beq	13d84 <table_compare_short@@Base+0x30>
   13d5c:	cmp	r1, #0
   13d60:	beq	13d90 <table_compare_short@@Base+0x3c>
   13d64:	ldrsh	r0, [r0]
   13d68:	ldrsh	r1, [r1]
   13d6c:	cmp	r0, r1
   13d70:	bgt	13d98 <table_compare_short@@Base+0x44>
   13d74:	cmp	r0, r1
   13d78:	movge	r0, #0
   13d7c:	mvnlt	r0, #0
   13d80:	bx	lr
   13d84:	adds	r0, r1, #0
   13d88:	mvnne	r0, #0
   13d8c:	bx	lr
   13d90:	mov	r0, #1
   13d94:	bx	lr
   13d98:	mov	r0, #1
   13d9c:	bx	lr

00013da0 <table_compare_ushort@@Base>:
   13da0:	cmp	r0, #0
   13da4:	beq	13dd0 <table_compare_ushort@@Base+0x30>
   13da8:	cmp	r1, #0
   13dac:	beq	13ddc <table_compare_ushort@@Base+0x3c>
   13db0:	ldrh	r0, [r0]
   13db4:	ldrh	r1, [r1]
   13db8:	cmp	r0, r1
   13dbc:	bhi	13de4 <table_compare_ushort@@Base+0x44>
   13dc0:	cmp	r0, r1
   13dc4:	movcs	r0, #0
   13dc8:	mvncc	r0, #0
   13dcc:	bx	lr
   13dd0:	adds	r0, r1, #0
   13dd4:	mvnne	r0, #0
   13dd8:	bx	lr
   13ddc:	mov	r0, #1
   13de0:	bx	lr
   13de4:	mov	r0, #1
   13de8:	bx	lr

00013dec <table_compare_long@@Base>:
   13dec:	cmp	r0, #0
   13df0:	beq	13e1c <table_compare_long@@Base+0x30>
   13df4:	cmp	r1, #0
   13df8:	beq	13e28 <table_compare_long@@Base+0x3c>
   13dfc:	ldr	r0, [r0]
   13e00:	ldr	r1, [r1]
   13e04:	cmp	r0, r1
   13e08:	bgt	13e30 <table_compare_long@@Base+0x44>
   13e0c:	cmp	r0, r1
   13e10:	movge	r0, #0
   13e14:	mvnlt	r0, #0
   13e18:	bx	lr
   13e1c:	adds	r0, r1, #0
   13e20:	mvnne	r0, #0
   13e24:	bx	lr
   13e28:	mov	r0, #1
   13e2c:	bx	lr
   13e30:	mov	r0, #1
   13e34:	bx	lr

00013e38 <table_compare_ulong@@Base>:
   13e38:	cmp	r0, #0
   13e3c:	beq	13e68 <table_compare_ulong@@Base+0x30>
   13e40:	cmp	r1, #0
   13e44:	beq	13e74 <table_compare_ulong@@Base+0x3c>
   13e48:	ldr	r0, [r0]
   13e4c:	ldr	r1, [r1]
   13e50:	cmp	r0, r1
   13e54:	bhi	13e7c <table_compare_ulong@@Base+0x44>
   13e58:	cmp	r0, r1
   13e5c:	movcs	r0, #0
   13e60:	mvncc	r0, #0
   13e64:	bx	lr
   13e68:	adds	r0, r1, #0
   13e6c:	mvnne	r0, #0
   13e70:	bx	lr
   13e74:	mov	r0, #1
   13e78:	bx	lr
   13e7c:	mov	r0, #1
   13e80:	bx	lr

00013e84 <table_compare_llong@@Base>:
   13e84:	cmp	r0, #0
   13e88:	beq	13ec8 <table_compare_llong@@Base+0x44>
   13e8c:	cmp	r1, #0
   13e90:	beq	13ed4 <table_compare_llong@@Base+0x50>
   13e94:	push	{r4, r5}
   13e98:	ldrd	r4, [r0]
   13e9c:	ldrd	r2, [r1]
   13ea0:	cmp	r2, r4
   13ea4:	sbcs	r1, r3, r5
   13ea8:	movlt	r0, #1
   13eac:	blt	13ec0 <table_compare_llong@@Base+0x3c>
   13eb0:	cmp	r4, r2
   13eb4:	sbcs	r3, r5, r3
   13eb8:	mvnlt	r0, #0
   13ebc:	movge	r0, #0
   13ec0:	pop	{r4, r5}
   13ec4:	bx	lr
   13ec8:	adds	r0, r1, #0
   13ecc:	mvnne	r0, #0
   13ed0:	bx	lr
   13ed4:	mov	r0, #1
   13ed8:	bx	lr

00013edc <table_compare_ullong@@Base>:
   13edc:	cmp	r0, #0
   13ee0:	beq	13f0c <table_compare_ullong@@Base+0x30>
   13ee4:	cmp	r1, #0
   13ee8:	beq	13f18 <table_compare_ullong@@Base+0x3c>
   13eec:	ldr	r0, [r0]
   13ef0:	ldr	r1, [r1]
   13ef4:	cmp	r0, r1
   13ef8:	bhi	13f20 <table_compare_ullong@@Base+0x44>
   13efc:	cmp	r0, r1
   13f00:	movcs	r0, #0
   13f04:	mvncc	r0, #0
   13f08:	bx	lr
   13f0c:	adds	r0, r1, #0
   13f10:	mvnne	r0, #0
   13f14:	bx	lr
   13f18:	mov	r0, #1
   13f1c:	bx	lr
   13f20:	mov	r0, #1
   13f24:	bx	lr

00013f28 <table_compare_float@@Base>:
   13f28:	cmp	r0, #0
   13f2c:	beq	13f58 <table_compare_float@@Base+0x30>
   13f30:	cmp	r1, #0
   13f34:	beq	13f64 <table_compare_float@@Base+0x3c>
   13f38:	vldr	s14, [r0]
   13f3c:	vldr	s15, [r1]
   13f40:	vcmpe.f32	s14, s15
   13f44:	vmrs	APSR_nzcv, fpscr
   13f48:	bgt	13f6c <table_compare_float@@Base+0x44>
   13f4c:	mvnmi	r0, #0
   13f50:	movpl	r0, #0
   13f54:	bx	lr
   13f58:	adds	r0, r1, #0
   13f5c:	mvnne	r0, #0
   13f60:	bx	lr
   13f64:	mov	r0, #1
   13f68:	bx	lr
   13f6c:	mov	r0, #1
   13f70:	bx	lr

00013f74 <table_compare_double@@Base>:
   13f74:	cmp	r0, #0
   13f78:	beq	13fa4 <table_compare_double@@Base+0x30>
   13f7c:	cmp	r1, #0
   13f80:	beq	13fb0 <table_compare_double@@Base+0x3c>
   13f84:	vldr	d6, [r0]
   13f88:	vldr	d7, [r1]
   13f8c:	vcmpe.f64	d6, d7
   13f90:	vmrs	APSR_nzcv, fpscr
   13f94:	bgt	13fb8 <table_compare_double@@Base+0x44>
   13f98:	mvnmi	r0, #0
   13f9c:	movpl	r0, #0
   13fa0:	bx	lr
   13fa4:	adds	r0, r1, #0
   13fa8:	mvnne	r0, #0
   13fac:	bx	lr
   13fb0:	mov	r0, #1
   13fb4:	bx	lr
   13fb8:	mov	r0, #1
   13fbc:	bx	lr

00013fc0 <table_compare_ldouble@@Base>:
   13fc0:	cmp	r0, #0
   13fc4:	beq	13ff0 <table_compare_ldouble@@Base+0x30>
   13fc8:	cmp	r1, #0
   13fcc:	beq	13ffc <table_compare_ldouble@@Base+0x3c>
   13fd0:	vldr	d6, [r0]
   13fd4:	vldr	d7, [r1]
   13fd8:	vcmpe.f64	d6, d7
   13fdc:	vmrs	APSR_nzcv, fpscr
   13fe0:	bgt	14004 <table_compare_ldouble@@Base+0x44>
   13fe4:	mvnmi	r0, #0
   13fe8:	movpl	r0, #0
   13fec:	bx	lr
   13ff0:	adds	r0, r1, #0
   13ff4:	mvnne	r0, #0
   13ff8:	bx	lr
   13ffc:	mov	r0, #1
   14000:	bx	lr
   14004:	mov	r0, #1
   14008:	bx	lr

0001400c <table_compare_char@@Base>:
   1400c:	cmp	r0, #0
   14010:	beq	1403c <table_compare_char@@Base+0x30>
   14014:	cmp	r1, #0
   14018:	beq	14048 <table_compare_char@@Base+0x3c>
   1401c:	ldrb	r0, [r0]
   14020:	ldrb	r1, [r1]
   14024:	cmp	r0, r1
   14028:	bhi	14050 <table_compare_char@@Base+0x44>
   1402c:	cmp	r0, r1
   14030:	movcs	r0, #0
   14034:	mvncc	r0, #0
   14038:	bx	lr
   1403c:	adds	r0, r1, #0
   14040:	mvnne	r0, #0
   14044:	bx	lr
   14048:	mov	r0, #1
   1404c:	bx	lr
   14050:	mov	r0, #1
   14054:	bx	lr

00014058 <table_compare_uchar@@Base>:
   14058:	cmp	r0, #0
   1405c:	beq	14088 <table_compare_uchar@@Base+0x30>
   14060:	cmp	r1, #0
   14064:	beq	14094 <table_compare_uchar@@Base+0x3c>
   14068:	ldrb	r0, [r0]
   1406c:	ldrb	r1, [r1]
   14070:	cmp	r0, r1
   14074:	bhi	1409c <table_compare_uchar@@Base+0x44>
   14078:	cmp	r0, r1
   1407c:	movcs	r0, #0
   14080:	mvncc	r0, #0
   14084:	bx	lr
   14088:	adds	r0, r1, #0
   1408c:	mvnne	r0, #0
   14090:	bx	lr
   14094:	mov	r0, #1
   14098:	bx	lr
   1409c:	mov	r0, #1
   140a0:	bx	lr

000140a4 <table_compare_ptr@@Base>:
   140a4:	cmp	r0, r1
   140a8:	bhi	140bc <table_compare_ptr@@Base+0x18>
   140ac:	cmp	r0, r1
   140b0:	movcs	r0, #0
   140b4:	mvncc	r0, #0
   140b8:	bx	lr
   140bc:	mov	r0, #1
   140c0:	bx	lr

000140c4 <table_compare_string@@Base>:
   140c4:	cmp	r0, #0
   140c8:	beq	140e0 <table_compare_string@@Base+0x1c>
   140cc:	cmp	r1, #0
   140d0:	beq	140ec <table_compare_string@@Base+0x28>
   140d4:	push	{r4, lr}
   140d8:	bl	12954 <strcmp@plt>
   140dc:	pop	{r4, pc}
   140e0:	adds	r0, r1, #0
   140e4:	mvnne	r0, #0
   140e8:	bx	lr
   140ec:	mov	r0, #1
   140f0:	bx	lr

000140f4 <table_get_default_compare_function_for_data_type@@Base>:
   140f4:	cmp	r0, #23
   140f8:	ldrls	pc, [pc, r0, lsl #2]
   140fc:	b	14220 <table_get_default_compare_function_for_data_type@@Base+0x12c>
   14100:	andeq	r4, r1, r0, ror #2
   14104:	andeq	r4, r1, r8, ror #2
   14108:	andeq	r4, r1, r0, ror r1
   1410c:	andeq	r4, r1, r8, ror r1
   14110:	andeq	r4, r1, r0, lsl #3
   14114:	andeq	r4, r1, r8, lsl #3
   14118:	muleq	r1, r0, r1
   1411c:	muleq	r1, r8, r1
   14120:	andeq	r4, r1, r0, lsr #3
   14124:	andeq	r4, r1, r8, lsr #3
   14128:			; <UNDEFINED> instruction: 0x000141b0
   1412c:			; <UNDEFINED> instruction: 0x000141b8
   14130:	andeq	r4, r1, r0, asr #3
   14134:	andeq	r4, r1, r8, asr #3
   14138:	ldrdeq	r4, [r1], -r0
   1413c:	ldrdeq	r4, [r1], -r8
   14140:	andeq	r4, r1, r8, ror #3
   14144:	strdeq	r4, [r1], -r0
   14148:	strdeq	r4, [r1], -r8
   1414c:	andeq	r4, r1, r8, lsl #4
   14150:	andeq	r4, r1, r0, lsl r2
   14154:	andeq	r4, r1, r0, ror #3
   14158:	andeq	r4, r1, r0, lsl #4
   1415c:	andeq	r4, r1, r8, lsl r2
   14160:	ldr	r0, [pc, #192]	; 14228 <table_get_default_compare_function_for_data_type@@Base+0x134>
   14164:	bx	lr
   14168:	ldr	r0, [pc, #188]	; 1422c <table_get_default_compare_function_for_data_type@@Base+0x138>
   1416c:	bx	lr
   14170:	ldr	r0, [pc, #184]	; 14230 <table_get_default_compare_function_for_data_type@@Base+0x13c>
   14174:	bx	lr
   14178:	ldr	r0, [pc, #180]	; 14234 <table_get_default_compare_function_for_data_type@@Base+0x140>
   1417c:	bx	lr
   14180:	ldr	r0, [pc, #176]	; 14238 <table_get_default_compare_function_for_data_type@@Base+0x144>
   14184:	bx	lr
   14188:	ldr	r0, [pc, #172]	; 1423c <table_get_default_compare_function_for_data_type@@Base+0x148>
   1418c:	bx	lr
   14190:	ldr	r0, [pc, #168]	; 14240 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   14194:	bx	lr
   14198:	ldr	r0, [pc, #164]	; 14244 <table_get_default_compare_function_for_data_type@@Base+0x150>
   1419c:	bx	lr
   141a0:	ldr	r0, [pc, #160]	; 14248 <table_get_default_compare_function_for_data_type@@Base+0x154>
   141a4:	bx	lr
   141a8:	ldr	r0, [pc, #156]	; 1424c <table_get_default_compare_function_for_data_type@@Base+0x158>
   141ac:	bx	lr
   141b0:	ldr	r0, [pc, #152]	; 14250 <table_get_default_compare_function_for_data_type@@Base+0x15c>
   141b4:	bx	lr
   141b8:	ldr	r0, [pc, #148]	; 14254 <table_get_default_compare_function_for_data_type@@Base+0x160>
   141bc:	bx	lr
   141c0:	ldr	r0, [pc, #144]	; 14258 <table_get_default_compare_function_for_data_type@@Base+0x164>
   141c4:	bx	lr
   141c8:	ldr	r0, [pc, #140]	; 1425c <table_get_default_compare_function_for_data_type@@Base+0x168>
   141cc:	bx	lr
   141d0:	ldr	r0, [pc, #136]	; 14260 <table_get_default_compare_function_for_data_type@@Base+0x16c>
   141d4:	bx	lr
   141d8:	ldr	r0, [pc, #132]	; 14264 <table_get_default_compare_function_for_data_type@@Base+0x170>
   141dc:	bx	lr
   141e0:	ldr	r0, [pc, #128]	; 14268 <table_get_default_compare_function_for_data_type@@Base+0x174>
   141e4:	bx	lr
   141e8:	ldr	r0, [pc, #124]	; 1426c <table_get_default_compare_function_for_data_type@@Base+0x178>
   141ec:	bx	lr
   141f0:	ldr	r0, [pc, #120]	; 14270 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   141f4:	bx	lr
   141f8:	ldr	r0, [pc, #116]	; 14274 <table_get_default_compare_function_for_data_type@@Base+0x180>
   141fc:	bx	lr
   14200:	ldr	r0, [pc, #112]	; 14278 <table_get_default_compare_function_for_data_type@@Base+0x184>
   14204:	bx	lr
   14208:	ldr	r0, [pc, #108]	; 1427c <table_get_default_compare_function_for_data_type@@Base+0x188>
   1420c:	bx	lr
   14210:	ldr	r0, [pc, #104]	; 14280 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   14214:	bx	lr
   14218:	ldr	r0, [pc, #100]	; 14284 <table_get_default_compare_function_for_data_type@@Base+0x190>
   1421c:	bx	lr
   14220:	mov	r0, #0
   14224:	bx	lr
   14228:	andeq	r3, r1, ip, asr #20
   1422c:	muleq	r1, r8, sl
   14230:	andeq	r3, r1, r4, ror #21
   14234:	andeq	r3, r1, r0, lsr fp
   14238:	andeq	r3, r1, ip, ror fp
   1423c:	andeq	r3, r1, r8, asr #23
   14240:	andeq	r3, r1, r4, lsl ip
   14244:	andeq	r3, r1, r0, ror #24
   14248:	andeq	r3, r1, ip, lsr #25
   1424c:	andeq	r3, r1, r4, lsl #26
   14250:	andeq	r3, r1, r4, asr sp
   14254:	andeq	r3, r1, r0, lsr #27
   14258:	andeq	r3, r1, ip, ror #27
   1425c:	andeq	r3, r1, r8, lsr lr
   14260:	andeq	r3, r1, r4, lsl #29
   14264:	ldrdeq	r3, [r1], -ip
   14268:	andeq	r4, r1, r4, asr #1
   1426c:	andeq	r3, r1, r8, lsr #30
   14270:	andeq	r3, r1, r4, ror pc
   14274:	andeq	r3, r1, r0, asr #31
   14278:	andeq	r3, r1, r0, lsl #20
   1427c:	andeq	r4, r1, ip
   14280:	andeq	r4, r1, r8, asr r0
   14284:	andeq	r4, r1, r4, lsr #1

00014288 <table_subset_find@@Base>:
   14288:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1428c:	mov	r7, r0
   14290:	mov	r8, r1
   14294:	mov	r9, r2
   14298:	mov	sl, r3
   1429c:	ldr	r5, [sp, #32]
   142a0:	ldr	r4, [sp, #36]	; 0x24
   142a4:	bl	139d8 <table_get_column_compare_function@@Base>
   142a8:	mov	r6, r0
   142ac:	cmp	sl, #0
   142b0:	beq	142fc <table_subset_find@@Base+0x74>
   142b4:	cmp	r5, r4
   142b8:	bgt	142f4 <table_subset_find@@Base+0x6c>
   142bc:	mov	r2, r8
   142c0:	mov	r1, r4
   142c4:	mov	r0, r7
   142c8:	bl	14f08 <table_get@@Base>
   142cc:	mov	r1, r0
   142d0:	mov	r0, r9
   142d4:	blx	r6
   142d8:	cmp	r0, #0
   142dc:	beq	1434c <table_subset_find@@Base+0xc4>
   142e0:	sub	r4, r4, #1
   142e4:	cmp	r5, r4
   142e8:	ble	142bc <table_subset_find@@Base+0x34>
   142ec:	mvn	r0, #0
   142f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142f4:	mvn	r0, #0
   142f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142fc:	cmp	r5, r4
   14300:	bgt	1433c <table_subset_find@@Base+0xb4>
   14304:	mov	r2, r8
   14308:	mov	r1, r5
   1430c:	mov	r0, r7
   14310:	bl	14f08 <table_get@@Base>
   14314:	mov	r1, r0
   14318:	mov	r0, r9
   1431c:	blx	r6
   14320:	cmp	r0, #0
   14324:	beq	14344 <table_subset_find@@Base+0xbc>
   14328:	add	r5, r5, #1
   1432c:	cmp	r4, r5
   14330:	bge	14304 <table_subset_find@@Base+0x7c>
   14334:	mvn	r0, #0
   14338:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1433c:	mvn	r0, #0
   14340:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14344:	mov	r0, r5
   14348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1434c:	mov	r0, r4
   14350:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00014354 <table_find@@Base>:
   14354:	push	{r4, r5, r6, r7, lr}
   14358:	sub	sp, sp, #12
   1435c:	mov	r4, r0
   14360:	mov	r5, r1
   14364:	mov	r6, r2
   14368:	mov	r7, r3
   1436c:	bl	15100 <table_get_row_length@@Base>
   14370:	sub	r0, r0, #1
   14374:	str	r0, [sp, #4]
   14378:	mov	r3, #0
   1437c:	str	r3, [sp]
   14380:	mov	r3, r7
   14384:	mov	r2, r6
   14388:	mov	r1, r5
   1438c:	mov	r0, r4
   14390:	bl	14288 <table_subset_find@@Base>
   14394:	add	sp, sp, #12
   14398:	pop	{r4, r5, r6, r7, pc}

0001439c <table_find_bool@@Base>:
   1439c:	push	{lr}		; (str lr, [sp, #-4]!)
   143a0:	sub	sp, sp, #12
   143a4:	add	ip, sp, #8
   143a8:	strb	r2, [ip, #-1]!
   143ac:	mov	r2, ip
   143b0:	bl	14354 <table_find@@Base>
   143b4:	add	sp, sp, #12
   143b8:	pop	{pc}		; (ldr pc, [sp], #4)

000143bc <table_find_int@@Base>:
   143bc:	push	{lr}		; (str lr, [sp, #-4]!)
   143c0:	sub	sp, sp, #12
   143c4:	add	ip, sp, #8
   143c8:	str	r2, [ip, #-4]!
   143cc:	mov	r2, ip
   143d0:	bl	14354 <table_find@@Base>
   143d4:	add	sp, sp, #12
   143d8:	pop	{pc}		; (ldr pc, [sp], #4)

000143dc <table_find_uint@@Base>:
   143dc:	push	{lr}		; (str lr, [sp, #-4]!)
   143e0:	sub	sp, sp, #12
   143e4:	add	ip, sp, #8
   143e8:	str	r2, [ip, #-4]!
   143ec:	mov	r2, ip
   143f0:	bl	14354 <table_find@@Base>
   143f4:	add	sp, sp, #12
   143f8:	pop	{pc}		; (ldr pc, [sp], #4)

000143fc <table_find_int8@@Base>:
   143fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14400:	sub	sp, sp, #12
   14404:	add	ip, sp, #8
   14408:	strb	r2, [ip, #-1]!
   1440c:	mov	r2, ip
   14410:	bl	14354 <table_find@@Base>
   14414:	add	sp, sp, #12
   14418:	pop	{pc}		; (ldr pc, [sp], #4)

0001441c <table_find_uint8@@Base>:
   1441c:	push	{lr}		; (str lr, [sp, #-4]!)
   14420:	sub	sp, sp, #12
   14424:	add	ip, sp, #8
   14428:	strb	r2, [ip, #-1]!
   1442c:	mov	r2, ip
   14430:	bl	14354 <table_find@@Base>
   14434:	add	sp, sp, #12
   14438:	pop	{pc}		; (ldr pc, [sp], #4)

0001443c <table_find_int16@@Base>:
   1443c:	push	{lr}		; (str lr, [sp, #-4]!)
   14440:	sub	sp, sp, #12
   14444:	add	ip, sp, #8
   14448:	strh	r2, [ip, #-2]!
   1444c:	mov	r2, ip
   14450:	bl	14354 <table_find@@Base>
   14454:	add	sp, sp, #12
   14458:	pop	{pc}		; (ldr pc, [sp], #4)

0001445c <table_find_uint16@@Base>:
   1445c:	push	{lr}		; (str lr, [sp, #-4]!)
   14460:	sub	sp, sp, #12
   14464:	add	ip, sp, #8
   14468:	strh	r2, [ip, #-2]!
   1446c:	mov	r2, ip
   14470:	bl	14354 <table_find@@Base>
   14474:	add	sp, sp, #12
   14478:	pop	{pc}		; (ldr pc, [sp], #4)

0001447c <table_find_int32@@Base>:
   1447c:	push	{lr}		; (str lr, [sp, #-4]!)
   14480:	sub	sp, sp, #12
   14484:	add	ip, sp, #8
   14488:	str	r2, [ip, #-4]!
   1448c:	mov	r2, ip
   14490:	bl	14354 <table_find@@Base>
   14494:	add	sp, sp, #12
   14498:	pop	{pc}		; (ldr pc, [sp], #4)

0001449c <table_find_uint32@@Base>:
   1449c:	push	{lr}		; (str lr, [sp, #-4]!)
   144a0:	sub	sp, sp, #12
   144a4:	add	ip, sp, #8
   144a8:	str	r2, [ip, #-4]!
   144ac:	mov	r2, ip
   144b0:	bl	14354 <table_find@@Base>
   144b4:	add	sp, sp, #12
   144b8:	pop	{pc}		; (ldr pc, [sp], #4)

000144bc <table_find_int64@@Base>:
   144bc:	push	{lr}		; (str lr, [sp, #-4]!)
   144c0:	sub	sp, sp, #12
   144c4:	add	ip, sp, #8
   144c8:	strd	r2, [ip, #-8]!
   144cc:	ldr	r3, [sp, #16]
   144d0:	mov	r2, ip
   144d4:	bl	14354 <table_find@@Base>
   144d8:	add	sp, sp, #12
   144dc:	pop	{pc}		; (ldr pc, [sp], #4)

000144e0 <table_find_uint64@@Base>:
   144e0:	push	{lr}		; (str lr, [sp, #-4]!)
   144e4:	sub	sp, sp, #12
   144e8:	add	ip, sp, #8
   144ec:	strd	r2, [ip, #-8]!
   144f0:	ldr	r3, [sp, #16]
   144f4:	mov	r2, ip
   144f8:	bl	14354 <table_find@@Base>
   144fc:	add	sp, sp, #12
   14500:	pop	{pc}		; (ldr pc, [sp], #4)

00014504 <table_find_short@@Base>:
   14504:	push	{lr}		; (str lr, [sp, #-4]!)
   14508:	sub	sp, sp, #12
   1450c:	add	ip, sp, #8
   14510:	strh	r2, [ip, #-2]!
   14514:	mov	r2, ip
   14518:	bl	14354 <table_find@@Base>
   1451c:	add	sp, sp, #12
   14520:	pop	{pc}		; (ldr pc, [sp], #4)

00014524 <table_find_ushort@@Base>:
   14524:	push	{lr}		; (str lr, [sp, #-4]!)
   14528:	sub	sp, sp, #12
   1452c:	add	ip, sp, #8
   14530:	strh	r2, [ip, #-2]!
   14534:	mov	r2, ip
   14538:	bl	14354 <table_find@@Base>
   1453c:	add	sp, sp, #12
   14540:	pop	{pc}		; (ldr pc, [sp], #4)

00014544 <table_find_long@@Base>:
   14544:	push	{lr}		; (str lr, [sp, #-4]!)
   14548:	sub	sp, sp, #12
   1454c:	add	ip, sp, #8
   14550:	str	r2, [ip, #-4]!
   14554:	mov	r2, ip
   14558:	bl	14354 <table_find@@Base>
   1455c:	add	sp, sp, #12
   14560:	pop	{pc}		; (ldr pc, [sp], #4)

00014564 <table_find_ulong@@Base>:
   14564:	push	{lr}		; (str lr, [sp, #-4]!)
   14568:	sub	sp, sp, #12
   1456c:	add	ip, sp, #8
   14570:	str	r2, [ip, #-4]!
   14574:	mov	r2, ip
   14578:	bl	14354 <table_find@@Base>
   1457c:	add	sp, sp, #12
   14580:	pop	{pc}		; (ldr pc, [sp], #4)

00014584 <table_find_llong@@Base>:
   14584:	push	{lr}		; (str lr, [sp, #-4]!)
   14588:	sub	sp, sp, #12
   1458c:	add	ip, sp, #8
   14590:	strd	r2, [ip, #-8]!
   14594:	ldr	r3, [sp, #16]
   14598:	mov	r2, ip
   1459c:	bl	14354 <table_find@@Base>
   145a0:	add	sp, sp, #12
   145a4:	pop	{pc}		; (ldr pc, [sp], #4)

000145a8 <table_find_ullong@@Base>:
   145a8:	push	{lr}		; (str lr, [sp, #-4]!)
   145ac:	sub	sp, sp, #12
   145b0:	add	ip, sp, #8
   145b4:	strd	r2, [ip, #-8]!
   145b8:	ldr	r3, [sp, #16]
   145bc:	mov	r2, ip
   145c0:	bl	14354 <table_find@@Base>
   145c4:	add	sp, sp, #12
   145c8:	pop	{pc}		; (ldr pc, [sp], #4)

000145cc <table_find_float@@Base>:
   145cc:	push	{lr}		; (str lr, [sp, #-4]!)
   145d0:	sub	sp, sp, #12
   145d4:	add	ip, sp, #8
   145d8:	vstmdb	ip!, {s0}
   145dc:	mov	r3, r2
   145e0:	mov	r2, ip
   145e4:	bl	14354 <table_find@@Base>
   145e8:	add	sp, sp, #12
   145ec:	pop	{pc}		; (ldr pc, [sp], #4)

000145f0 <table_find_double@@Base>:
   145f0:	push	{lr}		; (str lr, [sp, #-4]!)
   145f4:	sub	sp, sp, #12
   145f8:	add	ip, sp, #8
   145fc:	vstmdb	ip!, {d0}
   14600:	mov	r3, r2
   14604:	mov	r2, ip
   14608:	bl	14354 <table_find@@Base>
   1460c:	add	sp, sp, #12
   14610:	pop	{pc}		; (ldr pc, [sp], #4)

00014614 <table_find_ldouble@@Base>:
   14614:	push	{lr}		; (str lr, [sp, #-4]!)
   14618:	sub	sp, sp, #12
   1461c:	add	ip, sp, #8
   14620:	vstmdb	ip!, {d0}
   14624:	mov	r3, r2
   14628:	mov	r2, ip
   1462c:	bl	14354 <table_find@@Base>
   14630:	add	sp, sp, #12
   14634:	pop	{pc}		; (ldr pc, [sp], #4)

00014638 <table_find_char@@Base>:
   14638:	push	{lr}		; (str lr, [sp, #-4]!)
   1463c:	sub	sp, sp, #12
   14640:	add	ip, sp, #8
   14644:	strb	r2, [ip, #-1]!
   14648:	mov	r2, ip
   1464c:	bl	14354 <table_find@@Base>
   14650:	add	sp, sp, #12
   14654:	pop	{pc}		; (ldr pc, [sp], #4)

00014658 <table_find_uchar@@Base>:
   14658:	push	{lr}		; (str lr, [sp, #-4]!)
   1465c:	sub	sp, sp, #12
   14660:	add	ip, sp, #8
   14664:	strb	r2, [ip, #-1]!
   14668:	mov	r2, ip
   1466c:	bl	14354 <table_find@@Base>
   14670:	add	sp, sp, #12
   14674:	pop	{pc}		; (ldr pc, [sp], #4)

00014678 <table_find_string@@Base>:
   14678:	push	{lr}		; (str lr, [sp, #-4]!)
   1467c:	sub	sp, sp, #12
   14680:	add	ip, sp, #8
   14684:	str	r2, [ip, #-4]!
   14688:	mov	r2, ip
   1468c:	bl	14354 <table_find@@Base>
   14690:	add	sp, sp, #12
   14694:	pop	{pc}		; (ldr pc, [sp], #4)

00014698 <table_find_ptr@@Base>:
   14698:	push	{r4, lr}
   1469c:	bl	14354 <table_find@@Base>
   146a0:	pop	{r4, pc}

000146a4 <table_sorted_subset_find@@Base>:
   146a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   146a8:	sub	sp, sp, #12
   146ac:	mov	r6, r0
   146b0:	mov	r7, r1
   146b4:	mov	r8, r2
   146b8:	mov	sl, r3
   146bc:	ldr	r5, [sp, #48]	; 0x30
   146c0:	ldr	fp, [sp, #52]	; 0x34
   146c4:	bl	139d8 <table_get_column_compare_function@@Base>
   146c8:	mov	r9, r0
   146cc:	sub	r4, fp, r5
   146d0:	add	r4, r4, r4, lsr #31
   146d4:	add	r4, r5, r4, asr #1
   146d8:	mov	r2, r7
   146dc:	mov	r1, r4
   146e0:	mov	r0, r6
   146e4:	bl	14f08 <table_get@@Base>
   146e8:	mov	r1, r0
   146ec:	mov	r0, r8
   146f0:	blx	r9
   146f4:	cmp	fp, r5
   146f8:	rsblt	r0, r4, #0
   146fc:	blt	1471c <table_sorted_subset_find@@Base+0x78>
   14700:	cmp	r0, #0
   14704:	beq	14724 <table_sorted_subset_find@@Base+0x80>
   14708:	cmp	r0, #1
   1470c:	beq	14760 <table_sorted_subset_find@@Base+0xbc>
   14710:	cmn	r0, #1
   14714:	rsbne	r0, r4, #0
   14718:	beq	14780 <table_sorted_subset_find@@Base+0xdc>
   1471c:	add	sp, sp, #12
   14720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14724:	cmp	sl, #0
   14728:	subeq	r4, r4, #1
   1472c:	addne	r4, r4, #1
   14730:	mov	r2, r7
   14734:	mov	r1, r4
   14738:	mov	r0, r6
   1473c:	bl	14f08 <table_get@@Base>
   14740:	mov	r1, r8
   14744:	blx	r9
   14748:	cmp	r0, #0
   1474c:	beq	14724 <table_sorted_subset_find@@Base+0x80>
   14750:	cmp	sl, #0
   14754:	addeq	r0, r4, #1
   14758:	subne	r0, r4, #1
   1475c:	b	1471c <table_sorted_subset_find@@Base+0x78>
   14760:	str	fp, [sp, #4]
   14764:	str	r4, [sp]
   14768:	mov	r3, sl
   1476c:	mov	r2, r8
   14770:	mov	r1, r7
   14774:	mov	r0, r6
   14778:	bl	146a4 <table_sorted_subset_find@@Base>
   1477c:	b	1471c <table_sorted_subset_find@@Base+0x78>
   14780:	sub	r4, r4, #1
   14784:	str	r4, [sp, #4]
   14788:	str	r5, [sp]
   1478c:	mov	r3, sl
   14790:	mov	r2, r8
   14794:	mov	r1, r7
   14798:	mov	r0, r6
   1479c:	bl	146a4 <table_sorted_subset_find@@Base>
   147a0:	b	1471c <table_sorted_subset_find@@Base+0x78>

000147a4 <table_sorted_find@@Base>:
   147a4:	push	{r4, r5, r6, r7, lr}
   147a8:	sub	sp, sp, #12
   147ac:	mov	r4, r0
   147b0:	mov	r5, r1
   147b4:	mov	r6, r2
   147b8:	mov	r7, r3
   147bc:	bl	15100 <table_get_row_length@@Base>
   147c0:	sub	r0, r0, #1
   147c4:	str	r0, [sp, #4]
   147c8:	mov	r3, #0
   147cc:	str	r3, [sp]
   147d0:	mov	r3, r7
   147d4:	mov	r2, r6
   147d8:	mov	r1, r5
   147dc:	mov	r0, r4
   147e0:	bl	146a4 <table_sorted_subset_find@@Base>
   147e4:	add	sp, sp, #12
   147e8:	pop	{r4, r5, r6, r7, pc}

000147ec <table_sorted_find_int@@Base>:
   147ec:	push	{lr}		; (str lr, [sp, #-4]!)
   147f0:	sub	sp, sp, #12
   147f4:	add	ip, sp, #8
   147f8:	str	r2, [ip, #-4]!
   147fc:	mov	r2, ip
   14800:	bl	147a4 <table_sorted_find@@Base>
   14804:	add	sp, sp, #12
   14808:	pop	{pc}		; (ldr pc, [sp], #4)

0001480c <table_sorted_find_uint@@Base>:
   1480c:	push	{lr}		; (str lr, [sp, #-4]!)
   14810:	sub	sp, sp, #12
   14814:	add	ip, sp, #8
   14818:	str	r2, [ip, #-4]!
   1481c:	mov	r2, ip
   14820:	bl	147a4 <table_sorted_find@@Base>
   14824:	add	sp, sp, #12
   14828:	pop	{pc}		; (ldr pc, [sp], #4)

0001482c <table_sorted_find_int8@@Base>:
   1482c:	push	{lr}		; (str lr, [sp, #-4]!)
   14830:	sub	sp, sp, #12
   14834:	add	ip, sp, #8
   14838:	strb	r2, [ip, #-1]!
   1483c:	mov	r2, ip
   14840:	bl	147a4 <table_sorted_find@@Base>
   14844:	add	sp, sp, #12
   14848:	pop	{pc}		; (ldr pc, [sp], #4)

0001484c <table_sorted_find_uint8@@Base>:
   1484c:	push	{lr}		; (str lr, [sp, #-4]!)
   14850:	sub	sp, sp, #12
   14854:	add	ip, sp, #8
   14858:	strb	r2, [ip, #-1]!
   1485c:	mov	r2, ip
   14860:	bl	147a4 <table_sorted_find@@Base>
   14864:	add	sp, sp, #12
   14868:	pop	{pc}		; (ldr pc, [sp], #4)

0001486c <table_sorted_find_int16@@Base>:
   1486c:	push	{lr}		; (str lr, [sp, #-4]!)
   14870:	sub	sp, sp, #12
   14874:	add	ip, sp, #8
   14878:	strh	r2, [ip, #-2]!
   1487c:	mov	r2, ip
   14880:	bl	147a4 <table_sorted_find@@Base>
   14884:	add	sp, sp, #12
   14888:	pop	{pc}		; (ldr pc, [sp], #4)

0001488c <table_sorted_find_uint16@@Base>:
   1488c:	push	{lr}		; (str lr, [sp, #-4]!)
   14890:	sub	sp, sp, #12
   14894:	add	ip, sp, #8
   14898:	strh	r2, [ip, #-2]!
   1489c:	mov	r2, ip
   148a0:	bl	147a4 <table_sorted_find@@Base>
   148a4:	add	sp, sp, #12
   148a8:	pop	{pc}		; (ldr pc, [sp], #4)

000148ac <table_sorted_find_int32@@Base>:
   148ac:	push	{lr}		; (str lr, [sp, #-4]!)
   148b0:	sub	sp, sp, #12
   148b4:	add	ip, sp, #8
   148b8:	str	r2, [ip, #-4]!
   148bc:	mov	r2, ip
   148c0:	bl	147a4 <table_sorted_find@@Base>
   148c4:	add	sp, sp, #12
   148c8:	pop	{pc}		; (ldr pc, [sp], #4)

000148cc <table_sorted_find_uint32@@Base>:
   148cc:	push	{lr}		; (str lr, [sp, #-4]!)
   148d0:	sub	sp, sp, #12
   148d4:	add	ip, sp, #8
   148d8:	str	r2, [ip, #-4]!
   148dc:	mov	r2, ip
   148e0:	bl	147a4 <table_sorted_find@@Base>
   148e4:	add	sp, sp, #12
   148e8:	pop	{pc}		; (ldr pc, [sp], #4)

000148ec <table_sorted_find_int64@@Base>:
   148ec:	push	{lr}		; (str lr, [sp, #-4]!)
   148f0:	sub	sp, sp, #12
   148f4:	add	ip, sp, #8
   148f8:	strd	r2, [ip, #-8]!
   148fc:	ldr	r3, [sp, #16]
   14900:	mov	r2, ip
   14904:	bl	147a4 <table_sorted_find@@Base>
   14908:	add	sp, sp, #12
   1490c:	pop	{pc}		; (ldr pc, [sp], #4)

00014910 <table_sorted_find_uint64@@Base>:
   14910:	push	{lr}		; (str lr, [sp, #-4]!)
   14914:	sub	sp, sp, #12
   14918:	add	ip, sp, #8
   1491c:	strd	r2, [ip, #-8]!
   14920:	ldr	r3, [sp, #16]
   14924:	mov	r2, ip
   14928:	bl	147a4 <table_sorted_find@@Base>
   1492c:	add	sp, sp, #12
   14930:	pop	{pc}		; (ldr pc, [sp], #4)

00014934 <table_sorted_find_short@@Base>:
   14934:	push	{lr}		; (str lr, [sp, #-4]!)
   14938:	sub	sp, sp, #12
   1493c:	add	ip, sp, #8
   14940:	strh	r2, [ip, #-2]!
   14944:	mov	r2, ip
   14948:	bl	147a4 <table_sorted_find@@Base>
   1494c:	add	sp, sp, #12
   14950:	pop	{pc}		; (ldr pc, [sp], #4)

00014954 <table_sorted_find_ushort@@Base>:
   14954:	push	{lr}		; (str lr, [sp, #-4]!)
   14958:	sub	sp, sp, #12
   1495c:	add	ip, sp, #8
   14960:	strh	r2, [ip, #-2]!
   14964:	mov	r2, ip
   14968:	bl	147a4 <table_sorted_find@@Base>
   1496c:	add	sp, sp, #12
   14970:	pop	{pc}		; (ldr pc, [sp], #4)

00014974 <table_sorted_find_long@@Base>:
   14974:	push	{lr}		; (str lr, [sp, #-4]!)
   14978:	sub	sp, sp, #12
   1497c:	add	ip, sp, #8
   14980:	str	r2, [ip, #-4]!
   14984:	mov	r2, ip
   14988:	bl	147a4 <table_sorted_find@@Base>
   1498c:	add	sp, sp, #12
   14990:	pop	{pc}		; (ldr pc, [sp], #4)

00014994 <table_sorted_find_ulong@@Base>:
   14994:	push	{lr}		; (str lr, [sp, #-4]!)
   14998:	sub	sp, sp, #12
   1499c:	add	ip, sp, #8
   149a0:	str	r2, [ip, #-4]!
   149a4:	mov	r2, ip
   149a8:	bl	147a4 <table_sorted_find@@Base>
   149ac:	add	sp, sp, #12
   149b0:	pop	{pc}		; (ldr pc, [sp], #4)

000149b4 <table_sorted_find_llong@@Base>:
   149b4:	push	{lr}		; (str lr, [sp, #-4]!)
   149b8:	sub	sp, sp, #12
   149bc:	add	ip, sp, #8
   149c0:	strd	r2, [ip, #-8]!
   149c4:	ldr	r3, [sp, #16]
   149c8:	mov	r2, ip
   149cc:	bl	147a4 <table_sorted_find@@Base>
   149d0:	add	sp, sp, #12
   149d4:	pop	{pc}		; (ldr pc, [sp], #4)

000149d8 <table_sorted_find_ullong@@Base>:
   149d8:	push	{lr}		; (str lr, [sp, #-4]!)
   149dc:	sub	sp, sp, #12
   149e0:	add	ip, sp, #8
   149e4:	strd	r2, [ip, #-8]!
   149e8:	ldr	r3, [sp, #16]
   149ec:	mov	r2, ip
   149f0:	bl	147a4 <table_sorted_find@@Base>
   149f4:	add	sp, sp, #12
   149f8:	pop	{pc}		; (ldr pc, [sp], #4)

000149fc <table_sorted_find_float@@Base>:
   149fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14a00:	sub	sp, sp, #12
   14a04:	add	ip, sp, #8
   14a08:	vstmdb	ip!, {s0}
   14a0c:	mov	r3, r2
   14a10:	mov	r2, ip
   14a14:	bl	147a4 <table_sorted_find@@Base>
   14a18:	add	sp, sp, #12
   14a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a20 <table_sorted_find_double@@Base>:
   14a20:	push	{lr}		; (str lr, [sp, #-4]!)
   14a24:	sub	sp, sp, #12
   14a28:	add	ip, sp, #8
   14a2c:	vstmdb	ip!, {d0}
   14a30:	mov	r3, r2
   14a34:	mov	r2, ip
   14a38:	bl	147a4 <table_sorted_find@@Base>
   14a3c:	add	sp, sp, #12
   14a40:	pop	{pc}		; (ldr pc, [sp], #4)

00014a44 <table_sorted_find_ldouble@@Base>:
   14a44:	push	{lr}		; (str lr, [sp, #-4]!)
   14a48:	sub	sp, sp, #12
   14a4c:	add	ip, sp, #8
   14a50:	vstmdb	ip!, {d0}
   14a54:	mov	r3, r2
   14a58:	mov	r2, ip
   14a5c:	bl	147a4 <table_sorted_find@@Base>
   14a60:	add	sp, sp, #12
   14a64:	pop	{pc}		; (ldr pc, [sp], #4)

00014a68 <table_sorted_find_char@@Base>:
   14a68:	push	{lr}		; (str lr, [sp, #-4]!)
   14a6c:	sub	sp, sp, #12
   14a70:	add	ip, sp, #8
   14a74:	strb	r2, [ip, #-1]!
   14a78:	mov	r2, ip
   14a7c:	bl	147a4 <table_sorted_find@@Base>
   14a80:	add	sp, sp, #12
   14a84:	pop	{pc}		; (ldr pc, [sp], #4)

00014a88 <table_sorted_find_uchar@@Base>:
   14a88:	push	{lr}		; (str lr, [sp, #-4]!)
   14a8c:	sub	sp, sp, #12
   14a90:	add	ip, sp, #8
   14a94:	strb	r2, [ip, #-1]!
   14a98:	mov	r2, ip
   14a9c:	bl	147a4 <table_sorted_find@@Base>
   14aa0:	add	sp, sp, #12
   14aa4:	pop	{pc}		; (ldr pc, [sp], #4)

00014aa8 <table_sorted_find_string@@Base>:
   14aa8:	push	{r4, lr}
   14aac:	bl	147a4 <table_sorted_find@@Base>
   14ab0:	pop	{r4, pc}

00014ab4 <table_sorted_find_ptr@@Base>:
   14ab4:	push	{r4, lr}
   14ab8:	bl	147a4 <table_sorted_find@@Base>
   14abc:	pop	{r4, pc}

00014ac0 <table_sorted_subset_find_int@@Base>:
   14ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ac4:	sub	sp, sp, #20
   14ac8:	add	ip, sp, #16
   14acc:	str	r2, [ip, #-4]!
   14ad0:	ldr	r2, [sp, #28]
   14ad4:	str	r2, [sp, #4]
   14ad8:	ldr	r2, [sp, #24]
   14adc:	str	r2, [sp]
   14ae0:	mov	r2, ip
   14ae4:	bl	146a4 <table_sorted_subset_find@@Base>
   14ae8:	add	sp, sp, #20
   14aec:	pop	{pc}		; (ldr pc, [sp], #4)

00014af0 <table_sorted_subset_find_uint@@Base>:
   14af0:	push	{lr}		; (str lr, [sp, #-4]!)
   14af4:	sub	sp, sp, #20
   14af8:	add	ip, sp, #16
   14afc:	str	r2, [ip, #-4]!
   14b00:	ldr	r2, [sp, #28]
   14b04:	str	r2, [sp, #4]
   14b08:	ldr	r2, [sp, #24]
   14b0c:	str	r2, [sp]
   14b10:	mov	r2, ip
   14b14:	bl	146a4 <table_sorted_subset_find@@Base>
   14b18:	add	sp, sp, #20
   14b1c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b20 <table_sorted_subset_find_int8@@Base>:
   14b20:	push	{lr}		; (str lr, [sp, #-4]!)
   14b24:	sub	sp, sp, #20
   14b28:	add	ip, sp, #16
   14b2c:	strb	r2, [ip, #-1]!
   14b30:	ldr	r2, [sp, #28]
   14b34:	str	r2, [sp, #4]
   14b38:	ldr	r2, [sp, #24]
   14b3c:	str	r2, [sp]
   14b40:	mov	r2, ip
   14b44:	bl	146a4 <table_sorted_subset_find@@Base>
   14b48:	add	sp, sp, #20
   14b4c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b50 <table_sorted_subset_find_uint8@@Base>:
   14b50:	push	{lr}		; (str lr, [sp, #-4]!)
   14b54:	sub	sp, sp, #20
   14b58:	add	ip, sp, #16
   14b5c:	strb	r2, [ip, #-1]!
   14b60:	ldr	r2, [sp, #28]
   14b64:	str	r2, [sp, #4]
   14b68:	ldr	r2, [sp, #24]
   14b6c:	str	r2, [sp]
   14b70:	mov	r2, ip
   14b74:	bl	146a4 <table_sorted_subset_find@@Base>
   14b78:	add	sp, sp, #20
   14b7c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b80 <table_sorted_subset_find_int16@@Base>:
   14b80:	push	{lr}		; (str lr, [sp, #-4]!)
   14b84:	sub	sp, sp, #20
   14b88:	add	ip, sp, #16
   14b8c:	strh	r2, [ip, #-2]!
   14b90:	ldr	r2, [sp, #28]
   14b94:	str	r2, [sp, #4]
   14b98:	ldr	r2, [sp, #24]
   14b9c:	str	r2, [sp]
   14ba0:	mov	r2, ip
   14ba4:	bl	146a4 <table_sorted_subset_find@@Base>
   14ba8:	add	sp, sp, #20
   14bac:	pop	{pc}		; (ldr pc, [sp], #4)

00014bb0 <table_sorted_subset_find_uint16@@Base>:
   14bb0:	push	{lr}		; (str lr, [sp, #-4]!)
   14bb4:	sub	sp, sp, #20
   14bb8:	add	ip, sp, #16
   14bbc:	strh	r2, [ip, #-2]!
   14bc0:	ldr	r2, [sp, #28]
   14bc4:	str	r2, [sp, #4]
   14bc8:	ldr	r2, [sp, #24]
   14bcc:	str	r2, [sp]
   14bd0:	mov	r2, ip
   14bd4:	bl	146a4 <table_sorted_subset_find@@Base>
   14bd8:	add	sp, sp, #20
   14bdc:	pop	{pc}		; (ldr pc, [sp], #4)

00014be0 <table_sorted_subset_find_int32@@Base>:
   14be0:	push	{lr}		; (str lr, [sp, #-4]!)
   14be4:	sub	sp, sp, #20
   14be8:	add	ip, sp, #16
   14bec:	str	r2, [ip, #-4]!
   14bf0:	ldr	r2, [sp, #28]
   14bf4:	str	r2, [sp, #4]
   14bf8:	ldr	r2, [sp, #24]
   14bfc:	str	r2, [sp]
   14c00:	mov	r2, ip
   14c04:	bl	146a4 <table_sorted_subset_find@@Base>
   14c08:	add	sp, sp, #20
   14c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c10 <table_sorted_subset_find_uint32@@Base>:
   14c10:	push	{lr}		; (str lr, [sp, #-4]!)
   14c14:	sub	sp, sp, #20
   14c18:	add	ip, sp, #16
   14c1c:	str	r2, [ip, #-4]!
   14c20:	ldr	r2, [sp, #28]
   14c24:	str	r2, [sp, #4]
   14c28:	ldr	r2, [sp, #24]
   14c2c:	str	r2, [sp]
   14c30:	mov	r2, ip
   14c34:	bl	146a4 <table_sorted_subset_find@@Base>
   14c38:	add	sp, sp, #20
   14c3c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c40 <table_sorted_subset_find_int64@@Base>:
   14c40:	push	{lr}		; (str lr, [sp, #-4]!)
   14c44:	sub	sp, sp, #20
   14c48:	add	ip, sp, #16
   14c4c:	strd	r2, [ip, #-8]!
   14c50:	ldr	r3, [sp, #32]
   14c54:	str	r3, [sp, #4]
   14c58:	ldr	r3, [sp, #28]
   14c5c:	str	r3, [sp]
   14c60:	ldr	r3, [sp, #24]
   14c64:	mov	r2, ip
   14c68:	bl	146a4 <table_sorted_subset_find@@Base>
   14c6c:	add	sp, sp, #20
   14c70:	pop	{pc}		; (ldr pc, [sp], #4)

00014c74 <table_sorted_subset_find_uint64@@Base>:
   14c74:	push	{lr}		; (str lr, [sp, #-4]!)
   14c78:	sub	sp, sp, #20
   14c7c:	add	ip, sp, #16
   14c80:	strd	r2, [ip, #-8]!
   14c84:	ldr	r3, [sp, #32]
   14c88:	str	r3, [sp, #4]
   14c8c:	ldr	r3, [sp, #28]
   14c90:	str	r3, [sp]
   14c94:	ldr	r3, [sp, #24]
   14c98:	mov	r2, ip
   14c9c:	bl	146a4 <table_sorted_subset_find@@Base>
   14ca0:	add	sp, sp, #20
   14ca4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ca8 <table_sorted_subset_find_short@@Base>:
   14ca8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cac:	sub	sp, sp, #20
   14cb0:	add	ip, sp, #16
   14cb4:	strh	r2, [ip, #-2]!
   14cb8:	ldr	r2, [sp, #28]
   14cbc:	str	r2, [sp, #4]
   14cc0:	ldr	r2, [sp, #24]
   14cc4:	str	r2, [sp]
   14cc8:	mov	r2, ip
   14ccc:	bl	146a4 <table_sorted_subset_find@@Base>
   14cd0:	add	sp, sp, #20
   14cd4:	pop	{pc}		; (ldr pc, [sp], #4)

00014cd8 <table_sorted_subset_find_ushort@@Base>:
   14cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cdc:	sub	sp, sp, #20
   14ce0:	add	ip, sp, #16
   14ce4:	strh	r2, [ip, #-2]!
   14ce8:	ldr	r2, [sp, #28]
   14cec:	str	r2, [sp, #4]
   14cf0:	ldr	r2, [sp, #24]
   14cf4:	str	r2, [sp]
   14cf8:	mov	r2, ip
   14cfc:	bl	146a4 <table_sorted_subset_find@@Base>
   14d00:	add	sp, sp, #20
   14d04:	pop	{pc}		; (ldr pc, [sp], #4)

00014d08 <table_sorted_subset_find_long@@Base>:
   14d08:	push	{lr}		; (str lr, [sp, #-4]!)
   14d0c:	sub	sp, sp, #20
   14d10:	add	ip, sp, #16
   14d14:	str	r2, [ip, #-4]!
   14d18:	ldr	r2, [sp, #28]
   14d1c:	str	r2, [sp, #4]
   14d20:	ldr	r2, [sp, #24]
   14d24:	str	r2, [sp]
   14d28:	mov	r2, ip
   14d2c:	bl	146a4 <table_sorted_subset_find@@Base>
   14d30:	add	sp, sp, #20
   14d34:	pop	{pc}		; (ldr pc, [sp], #4)

00014d38 <table_sorted_subset_find_ulong@@Base>:
   14d38:	push	{lr}		; (str lr, [sp, #-4]!)
   14d3c:	sub	sp, sp, #20
   14d40:	add	ip, sp, #16
   14d44:	str	r2, [ip, #-4]!
   14d48:	ldr	r2, [sp, #28]
   14d4c:	str	r2, [sp, #4]
   14d50:	ldr	r2, [sp, #24]
   14d54:	str	r2, [sp]
   14d58:	mov	r2, ip
   14d5c:	bl	146a4 <table_sorted_subset_find@@Base>
   14d60:	add	sp, sp, #20
   14d64:	pop	{pc}		; (ldr pc, [sp], #4)

00014d68 <table_sorted_subset_find_llong@@Base>:
   14d68:	push	{lr}		; (str lr, [sp, #-4]!)
   14d6c:	sub	sp, sp, #20
   14d70:	add	ip, sp, #16
   14d74:	strd	r2, [ip, #-8]!
   14d78:	ldr	r3, [sp, #32]
   14d7c:	str	r3, [sp, #4]
   14d80:	ldr	r3, [sp, #28]
   14d84:	str	r3, [sp]
   14d88:	ldr	r3, [sp, #24]
   14d8c:	mov	r2, ip
   14d90:	bl	146a4 <table_sorted_subset_find@@Base>
   14d94:	add	sp, sp, #20
   14d98:	pop	{pc}		; (ldr pc, [sp], #4)

00014d9c <table_sorted_subset_find_ullong@@Base>:
   14d9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14da0:	sub	sp, sp, #20
   14da4:	add	ip, sp, #16
   14da8:	strd	r2, [ip, #-8]!
   14dac:	ldr	r3, [sp, #32]
   14db0:	str	r3, [sp, #4]
   14db4:	ldr	r3, [sp, #28]
   14db8:	str	r3, [sp]
   14dbc:	ldr	r3, [sp, #24]
   14dc0:	mov	r2, ip
   14dc4:	bl	146a4 <table_sorted_subset_find@@Base>
   14dc8:	add	sp, sp, #20
   14dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00014dd0 <table_sorted_subset_find_float@@Base>:
   14dd0:	push	{lr}		; (str lr, [sp, #-4]!)
   14dd4:	sub	sp, sp, #20
   14dd8:	add	ip, sp, #16
   14ddc:	vstmdb	ip!, {s0}
   14de0:	ldr	lr, [sp, #24]
   14de4:	str	lr, [sp, #4]
   14de8:	str	r3, [sp]
   14dec:	mov	r3, r2
   14df0:	mov	r2, ip
   14df4:	bl	146a4 <table_sorted_subset_find@@Base>
   14df8:	add	sp, sp, #20
   14dfc:	pop	{pc}		; (ldr pc, [sp], #4)

00014e00 <table_sorted_subset_find_double@@Base>:
   14e00:	push	{lr}		; (str lr, [sp, #-4]!)
   14e04:	sub	sp, sp, #20
   14e08:	add	ip, sp, #16
   14e0c:	vstmdb	ip!, {d0}
   14e10:	ldr	lr, [sp, #24]
   14e14:	str	lr, [sp, #4]
   14e18:	str	r3, [sp]
   14e1c:	mov	r3, r2
   14e20:	mov	r2, ip
   14e24:	bl	146a4 <table_sorted_subset_find@@Base>
   14e28:	add	sp, sp, #20
   14e2c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e30 <table_sorted_subset_find_ldouble@@Base>:
   14e30:	push	{lr}		; (str lr, [sp, #-4]!)
   14e34:	sub	sp, sp, #20
   14e38:	add	ip, sp, #16
   14e3c:	vstmdb	ip!, {d0}
   14e40:	ldr	lr, [sp, #24]
   14e44:	str	lr, [sp, #4]
   14e48:	str	r3, [sp]
   14e4c:	mov	r3, r2
   14e50:	mov	r2, ip
   14e54:	bl	146a4 <table_sorted_subset_find@@Base>
   14e58:	add	sp, sp, #20
   14e5c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e60 <table_sorted_subset_find_char@@Base>:
   14e60:	push	{lr}		; (str lr, [sp, #-4]!)
   14e64:	sub	sp, sp, #20
   14e68:	add	ip, sp, #16
   14e6c:	strb	r2, [ip, #-1]!
   14e70:	ldr	r2, [sp, #28]
   14e74:	str	r2, [sp, #4]
   14e78:	ldr	r2, [sp, #24]
   14e7c:	str	r2, [sp]
   14e80:	mov	r2, ip
   14e84:	bl	146a4 <table_sorted_subset_find@@Base>
   14e88:	add	sp, sp, #20
   14e8c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e90 <table_sorted_subset_find_uchar@@Base>:
   14e90:	push	{lr}		; (str lr, [sp, #-4]!)
   14e94:	sub	sp, sp, #20
   14e98:	add	ip, sp, #16
   14e9c:	strb	r2, [ip, #-1]!
   14ea0:	ldr	r2, [sp, #28]
   14ea4:	str	r2, [sp, #4]
   14ea8:	ldr	r2, [sp, #24]
   14eac:	str	r2, [sp]
   14eb0:	mov	r2, ip
   14eb4:	bl	146a4 <table_sorted_subset_find@@Base>
   14eb8:	add	sp, sp, #20
   14ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec0 <table_sorted_subset_find_string@@Base>:
   14ec0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ec4:	sub	sp, sp, #12
   14ec8:	ldr	ip, [sp, #20]
   14ecc:	str	ip, [sp, #4]
   14ed0:	ldr	ip, [sp, #16]
   14ed4:	str	ip, [sp]
   14ed8:	bl	146a4 <table_sorted_subset_find@@Base>
   14edc:	add	sp, sp, #12
   14ee0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ee4 <table_sorted_subset_find_ptr@@Base>:
   14ee4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ee8:	sub	sp, sp, #12
   14eec:	ldr	ip, [sp, #20]
   14ef0:	str	ip, [sp, #4]
   14ef4:	ldr	ip, [sp, #16]
   14ef8:	str	ip, [sp]
   14efc:	bl	146a4 <table_sorted_subset_find@@Base>
   14f00:	add	sp, sp, #12
   14f04:	pop	{pc}		; (ldr pc, [sp], #4)

00014f08 <table_get@@Base>:
   14f08:	push	{r4, lr}
   14f0c:	bl	1679c <table_get_cell_ptr@@Base>
   14f10:	ldr	r0, [r0]
   14f14:	pop	{r4, pc}

00014f18 <table_get_bool@@Base>:
   14f18:	push	{r4, lr}
   14f1c:	bl	14f08 <table_get@@Base>
   14f20:	ldrb	r0, [r0]
   14f24:	pop	{r4, pc}

00014f28 <table_get_int@@Base>:
   14f28:	push	{r4, lr}
   14f2c:	bl	14f08 <table_get@@Base>
   14f30:	ldr	r0, [r0]
   14f34:	pop	{r4, pc}

00014f38 <table_get_uint@@Base>:
   14f38:	push	{r4, lr}
   14f3c:	bl	14f08 <table_get@@Base>
   14f40:	ldr	r0, [r0]
   14f44:	pop	{r4, pc}

00014f48 <table_get_int8@@Base>:
   14f48:	push	{r4, lr}
   14f4c:	bl	14f08 <table_get@@Base>
   14f50:	ldrsb	r0, [r0]
   14f54:	pop	{r4, pc}

00014f58 <table_get_uint8@@Base>:
   14f58:	push	{r4, lr}
   14f5c:	bl	14f08 <table_get@@Base>
   14f60:	ldrb	r0, [r0]
   14f64:	pop	{r4, pc}

00014f68 <table_get_int16@@Base>:
   14f68:	push	{r4, lr}
   14f6c:	bl	14f08 <table_get@@Base>
   14f70:	ldrsh	r0, [r0]
   14f74:	pop	{r4, pc}

00014f78 <table_get_uint16@@Base>:
   14f78:	push	{r4, lr}
   14f7c:	bl	14f08 <table_get@@Base>
   14f80:	ldrh	r0, [r0]
   14f84:	pop	{r4, pc}

00014f88 <table_get_int32@@Base>:
   14f88:	push	{r4, lr}
   14f8c:	bl	14f08 <table_get@@Base>
   14f90:	ldr	r0, [r0]
   14f94:	pop	{r4, pc}

00014f98 <table_get_uint32@@Base>:
   14f98:	push	{r4, lr}
   14f9c:	bl	14f08 <table_get@@Base>
   14fa0:	ldr	r0, [r0]
   14fa4:	pop	{r4, pc}

00014fa8 <table_get_int64@@Base>:
   14fa8:	push	{r4, lr}
   14fac:	bl	14f08 <table_get@@Base>
   14fb0:	ldrd	r0, [r0]
   14fb4:	pop	{r4, pc}

00014fb8 <table_get_uint64@@Base>:
   14fb8:	push	{r4, lr}
   14fbc:	bl	14f08 <table_get@@Base>
   14fc0:	ldrd	r0, [r0]
   14fc4:	pop	{r4, pc}

00014fc8 <table_get_short@@Base>:
   14fc8:	push	{r4, lr}
   14fcc:	bl	14f08 <table_get@@Base>
   14fd0:	ldrsh	r0, [r0]
   14fd4:	pop	{r4, pc}

00014fd8 <table_get_ushort@@Base>:
   14fd8:	push	{r4, lr}
   14fdc:	bl	14f08 <table_get@@Base>
   14fe0:	ldrh	r0, [r0]
   14fe4:	pop	{r4, pc}

00014fe8 <table_get_long@@Base>:
   14fe8:	push	{r4, lr}
   14fec:	bl	14f08 <table_get@@Base>
   14ff0:	ldr	r0, [r0]
   14ff4:	pop	{r4, pc}

00014ff8 <table_get_ulong@@Base>:
   14ff8:	push	{r4, lr}
   14ffc:	bl	14f08 <table_get@@Base>
   15000:	ldr	r0, [r0]
   15004:	pop	{r4, pc}

00015008 <table_get_llong@@Base>:
   15008:	push	{r4, lr}
   1500c:	bl	14f08 <table_get@@Base>
   15010:	ldrd	r0, [r0]
   15014:	pop	{r4, pc}

00015018 <table_get_ullong@@Base>:
   15018:	push	{r4, lr}
   1501c:	bl	14f08 <table_get@@Base>
   15020:	ldrd	r0, [r0]
   15024:	pop	{r4, pc}

00015028 <table_get_float@@Base>:
   15028:	push	{r4, lr}
   1502c:	bl	14f08 <table_get@@Base>
   15030:	vldr	s0, [r0]
   15034:	pop	{r4, pc}

00015038 <table_get_double@@Base>:
   15038:	push	{r4, lr}
   1503c:	bl	14f08 <table_get@@Base>
   15040:	vldr	d0, [r0]
   15044:	pop	{r4, pc}

00015048 <table_get_ldouble@@Base>:
   15048:	push	{r4, lr}
   1504c:	bl	14f08 <table_get@@Base>
   15050:	vldr	d0, [r0]
   15054:	pop	{r4, pc}

00015058 <table_get_char@@Base>:
   15058:	push	{r4, lr}
   1505c:	bl	14f08 <table_get@@Base>
   15060:	ldrb	r0, [r0]
   15064:	pop	{r4, pc}

00015068 <table_get_uchar@@Base>:
   15068:	push	{r4, lr}
   1506c:	bl	14f08 <table_get@@Base>
   15070:	ldrb	r0, [r0]
   15074:	pop	{r4, pc}

00015078 <table_get_string@@Base>:
   15078:	push	{r4, lr}
   1507c:	bl	14f08 <table_get@@Base>
   15080:	pop	{r4, pc}

00015084 <table_get_ptr@@Base>:
   15084:	push	{r4, lr}
   15088:	bl	14f08 <table_get@@Base>
   1508c:	pop	{r4, pc}

00015090 <table_row_init@@Base>:
   15090:	push	{r4, r5, r6, lr}
   15094:	mov	r5, r1
   15098:	ldr	r4, [r0, #16]
   1509c:	ldr	r0, [r0, #12]
   150a0:	lsl	r0, r0, #2
   150a4:	bl	12990 <malloc@plt>
   150a8:	str	r0, [r4, r5, lsl #2]
   150ac:	pop	{r4, r5, r6, pc}

000150b0 <table_row_destroy@@Base>:
   150b0:	push	{r4, r5, r6, r7, r8, lr}
   150b4:	mov	r6, r0
   150b8:	mov	r5, r1
   150bc:	bl	136ac <table_get_column_length@@Base>
   150c0:	ldr	r8, [r6, #16]
   150c4:	subs	r7, r0, #0
   150c8:	ble	150ec <table_row_destroy@@Base+0x3c>
   150cc:	mov	r4, #0
   150d0:	mov	r2, r4
   150d4:	mov	r1, r5
   150d8:	mov	r0, r6
   150dc:	bl	167c8 <table_cell_destroy@@Base>
   150e0:	add	r4, r4, #1
   150e4:	cmp	r7, r4
   150e8:	bne	150d0 <table_row_destroy@@Base+0x20>
   150ec:	ldr	r0, [r8, r5, lsl #2]
   150f0:	cmp	r0, #0
   150f4:	popeq	{r4, r5, r6, r7, r8, pc}
   150f8:	bl	1296c <free@plt>
   150fc:	pop	{r4, r5, r6, r7, r8, pc}

00015100 <table_get_row_length@@Base>:
   15100:	ldr	r0, [r0, #20]
   15104:	bx	lr

00015108 <table_add_row@@Base>:
   15108:	push	{r4, r5, r6, r7, r8, lr}
   1510c:	mov	r5, r0
   15110:	ldr	r4, [r0, #24]
   15114:	mov	r1, r4
   15118:	ldr	r0, [r0, #20]
   1511c:	bl	16a24 <table_cell_nullify@@Base+0x218>
   15120:	cmp	r1, #0
   15124:	beq	15190 <table_add_row@@Base+0x88>
   15128:	ldr	r7, [r5, #20]
   1512c:	mov	r0, r5
   15130:	bl	136ac <table_get_column_length@@Base>
   15134:	mov	r6, r0
   15138:	mov	r1, r7
   1513c:	mov	r0, r5
   15140:	bl	15090 <table_row_init@@Base>
   15144:	cmp	r6, #0
   15148:	ble	1516c <table_add_row@@Base+0x64>
   1514c:	mov	r4, #0
   15150:	mov	r2, r4
   15154:	mov	r1, r7
   15158:	mov	r0, r5
   1515c:	bl	167b4 <table_cell_init@@Base>
   15160:	add	r4, r4, #1
   15164:	cmp	r6, r4
   15168:	bne	15150 <table_add_row@@Base+0x48>
   1516c:	mov	r3, #2
   15170:	mvn	r2, #0
   15174:	ldr	r1, [r5, #20]
   15178:	mov	r0, r5
   1517c:	bl	135bc <table_notify@@Base>
   15180:	ldr	r0, [r5, #20]
   15184:	add	r3, r0, #1
   15188:	str	r3, [r5, #20]
   1518c:	pop	{r4, r5, r6, r7, r8, pc}
   15190:	ldr	r1, [r5, #28]
   15194:	add	r1, r4, r1
   15198:	str	r1, [r5, #28]
   1519c:	lsl	r1, r1, #2
   151a0:	ldr	r0, [r5, #16]
   151a4:	bl	12978 <realloc@plt>
   151a8:	str	r0, [r5, #16]
   151ac:	b	15128 <table_add_row@@Base+0x20>

000151b0 <table_remove_row@@Base>:
   151b0:	push	{r4, r5, r6, r7, r8, lr}
   151b4:	mov	r5, r0
   151b8:	mov	r6, r1
   151bc:	ldr	r7, [r0, #20]
   151c0:	bl	136ac <table_get_column_length@@Base>
   151c4:	subs	r8, r0, #0
   151c8:	ble	15218 <table_remove_row@@Base+0x68>
   151cc:	mov	r4, #0
   151d0:	b	151e0 <table_remove_row@@Base+0x30>
   151d4:	add	r4, r4, #1
   151d8:	cmp	r8, r4
   151dc:	beq	15218 <table_remove_row@@Base+0x68>
   151e0:	mov	r1, r4
   151e4:	mov	r0, r5
   151e8:	bl	13714 <table_get_column_data_type@@Base>
   151ec:	cmp	r0, #23
   151f0:	beq	151d4 <table_remove_row@@Base+0x24>
   151f4:	mov	r2, r4
   151f8:	mov	r1, r6
   151fc:	mov	r0, r5
   15200:	bl	1679c <table_get_cell_ptr@@Base>
   15204:	ldr	r0, [r0]
   15208:	cmp	r0, #0
   1520c:	beq	151d4 <table_remove_row@@Base+0x24>
   15210:	bl	1296c <free@plt>
   15214:	b	151d4 <table_remove_row@@Base+0x24>
   15218:	lsl	r4, r6, #2
   1521c:	ldr	r3, [r5, #16]
   15220:	ldr	r0, [r3, r6, lsl #2]
   15224:	cmp	r0, #0
   15228:	beq	15230 <table_remove_row@@Base+0x80>
   1522c:	bl	1296c <free@plt>
   15230:	sub	r3, r7, #1
   15234:	cmp	r6, r3
   15238:	bge	15264 <table_remove_row@@Base+0xb4>
   1523c:	mov	ip, r3
   15240:	mov	r3, r6
   15244:	ldr	r1, [r5, #16]
   15248:	add	r2, r4, #4
   1524c:	ldr	r0, [r1, r2]
   15250:	str	r0, [r1, r4]
   15254:	add	r3, r3, #1
   15258:	mov	r4, r2
   1525c:	cmp	ip, r3
   15260:	bne	15244 <table_remove_row@@Base+0x94>
   15264:	ldr	r0, [r5, #20]
   15268:	sub	r0, r0, #1
   1526c:	str	r0, [r5, #20]
   15270:	ldr	r4, [r5, #24]
   15274:	mov	r1, r4
   15278:	bl	16a24 <table_cell_nullify@@Base+0x218>
   1527c:	cmp	r1, #0
   15280:	beq	152a0 <table_remove_row@@Base+0xf0>
   15284:	mov	r3, #4
   15288:	mvn	r2, #0
   1528c:	mov	r1, r6
   15290:	mov	r0, r5
   15294:	bl	135bc <table_notify@@Base>
   15298:	mov	r0, #0
   1529c:	pop	{r4, r5, r6, r7, r8, pc}
   152a0:	ldr	r1, [r5, #28]
   152a4:	sub	r1, r1, r4
   152a8:	str	r1, [r5, #28]
   152ac:	lsl	r1, r1, #2
   152b0:	ldr	r0, [r5, #16]
   152b4:	bl	12978 <realloc@plt>
   152b8:	str	r0, [r5, #16]
   152bc:	b	15284 <table_remove_row@@Base+0xd4>

000152c0 <table_get_row_ptr@@Base>:
   152c0:	ldr	r0, [r0, #16]
   152c4:	add	r0, r0, r1, lsl #2
   152c8:	bx	lr

000152cc <table_set_row_ptr@@Base>:
   152cc:	ldr	r3, [r0, #16]
   152d0:	ldr	r2, [r2]
   152d4:	str	r2, [r3, r1, lsl #2]
   152d8:	bx	lr

000152dc <table_set@@Base>:
   152dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152e0:	mov	r5, r0
   152e4:	mov	r9, r1
   152e8:	mov	r6, r2
   152ec:	mov	r7, r3
   152f0:	ldr	r4, [sp, #32]
   152f4:	bl	1679c <table_get_cell_ptr@@Base>
   152f8:	mov	r8, r0
   152fc:	mov	r1, r6
   15300:	mov	r0, r5
   15304:	bl	139c8 <table_get_col_ptr@@Base>
   15308:	cmp	r4, #23
   1530c:	ldrls	pc, [pc, r4, lsl #2]
   15310:	b	15934 <table_set@@Base+0x658>
   15314:			; <UNDEFINED> instruction: 0x000153b0
   15318:	andeq	r5, r1, ip, ror #7
   1531c:	andeq	r5, r1, r8, lsr #8
   15320:	andeq	r5, r1, r4, ror #8
   15324:	andeq	r5, r1, r0, lsr #9
   15328:	ldrdeq	r5, [r1], -ip
   1532c:	andeq	r5, r1, r8, lsl r5
   15330:	andeq	r5, r1, r4, asr r5
   15334:	muleq	r1, r0, r5
   15338:	ldrdeq	r5, [r1], -r8
   1533c:	andeq	r5, r1, ip, lsl r6
   15340:	andeq	r5, r1, r8, asr r6
   15344:	muleq	r1, r4, r6
   15348:	ldrdeq	r5, [r1], -r0
   1534c:	andeq	r5, r1, ip, lsl #14
   15350:	andeq	r5, r1, r0, asr r7
   15354:	muleq	r1, r4, r7
   15358:	ldrdeq	r5, [r1], -r0
   1535c:	andeq	r5, r1, r4, lsl r8
   15360:	muleq	r1, r0, r8
   15364:	andeq	r5, r1, ip, asr #17
   15368:	andeq	r5, r1, r8, asr r8
   1536c:	andeq	r5, r1, r4, ror r3
   15370:	andeq	r5, r1, r8, lsl #18
   15374:	ldr	r3, [r0, #4]
   15378:	cmp	r3, #22
   1537c:	bne	155d0 <table_set@@Base+0x2f4>
   15380:	ldr	r0, [r8]
   15384:	cmp	r0, #0
   15388:	beq	15398 <table_set@@Base+0xbc>
   1538c:	ldrb	r3, [r7]
   15390:	strb	r3, [r0]
   15394:	b	15918 <table_set@@Base+0x63c>
   15398:	mov	r0, #1
   1539c:	bl	12990 <malloc@plt>
   153a0:	str	r0, [r8]
   153a4:	cmp	r0, #0
   153a8:	bne	1538c <table_set@@Base+0xb0>
   153ac:	b	155d0 <table_set@@Base+0x2f4>
   153b0:	ldr	r3, [r0, #4]
   153b4:	cmp	r3, #0
   153b8:	bne	155d0 <table_set@@Base+0x2f4>
   153bc:	ldr	r0, [r8]
   153c0:	cmp	r0, #0
   153c4:	beq	153d4 <table_set@@Base+0xf8>
   153c8:	ldr	r3, [r7]
   153cc:	str	r3, [r0]
   153d0:	b	15918 <table_set@@Base+0x63c>
   153d4:	mov	r0, #4
   153d8:	bl	12990 <malloc@plt>
   153dc:	str	r0, [r8]
   153e0:	cmp	r0, #0
   153e4:	bne	153c8 <table_set@@Base+0xec>
   153e8:	b	155d0 <table_set@@Base+0x2f4>
   153ec:	ldr	r3, [r0, #4]
   153f0:	cmp	r3, #1
   153f4:	bne	155d0 <table_set@@Base+0x2f4>
   153f8:	ldr	r0, [r8]
   153fc:	cmp	r0, #0
   15400:	beq	15410 <table_set@@Base+0x134>
   15404:	ldr	r3, [r7]
   15408:	str	r3, [r0]
   1540c:	b	15918 <table_set@@Base+0x63c>
   15410:	mov	r0, #4
   15414:	bl	12990 <malloc@plt>
   15418:	str	r0, [r8]
   1541c:	cmp	r0, #0
   15420:	bne	15404 <table_set@@Base+0x128>
   15424:	b	155d0 <table_set@@Base+0x2f4>
   15428:	ldr	r3, [r0, #4]
   1542c:	cmp	r3, #2
   15430:	bne	155d0 <table_set@@Base+0x2f4>
   15434:	ldr	r0, [r8]
   15438:	cmp	r0, #0
   1543c:	beq	1544c <table_set@@Base+0x170>
   15440:	ldrb	r3, [r7]
   15444:	strb	r3, [r0]
   15448:	b	15918 <table_set@@Base+0x63c>
   1544c:	mov	r0, #1
   15450:	bl	12990 <malloc@plt>
   15454:	str	r0, [r8]
   15458:	cmp	r0, #0
   1545c:	bne	15440 <table_set@@Base+0x164>
   15460:	b	155d0 <table_set@@Base+0x2f4>
   15464:	ldr	r3, [r0, #4]
   15468:	cmp	r3, #3
   1546c:	bne	155d0 <table_set@@Base+0x2f4>
   15470:	ldr	r0, [r8]
   15474:	cmp	r0, #0
   15478:	beq	15488 <table_set@@Base+0x1ac>
   1547c:	ldrb	r3, [r7]
   15480:	strb	r3, [r0]
   15484:	b	15918 <table_set@@Base+0x63c>
   15488:	mov	r0, #1
   1548c:	bl	12990 <malloc@plt>
   15490:	str	r0, [r8]
   15494:	cmp	r0, #0
   15498:	bne	1547c <table_set@@Base+0x1a0>
   1549c:	b	155d0 <table_set@@Base+0x2f4>
   154a0:	ldr	r3, [r0, #4]
   154a4:	cmp	r3, #4
   154a8:	bne	155d0 <table_set@@Base+0x2f4>
   154ac:	ldr	r0, [r8]
   154b0:	cmp	r0, #0
   154b4:	beq	154c4 <table_set@@Base+0x1e8>
   154b8:	ldrh	r3, [r7]
   154bc:	strh	r3, [r0]
   154c0:	b	15918 <table_set@@Base+0x63c>
   154c4:	mov	r0, #2
   154c8:	bl	12990 <malloc@plt>
   154cc:	str	r0, [r8]
   154d0:	cmp	r0, #0
   154d4:	bne	154b8 <table_set@@Base+0x1dc>
   154d8:	b	155d0 <table_set@@Base+0x2f4>
   154dc:	ldr	r3, [r0, #4]
   154e0:	cmp	r3, #5
   154e4:	bne	155d0 <table_set@@Base+0x2f4>
   154e8:	ldr	r0, [r8]
   154ec:	cmp	r0, #0
   154f0:	beq	15500 <table_set@@Base+0x224>
   154f4:	ldrh	r3, [r7]
   154f8:	strh	r3, [r0]
   154fc:	b	15918 <table_set@@Base+0x63c>
   15500:	mov	r0, #2
   15504:	bl	12990 <malloc@plt>
   15508:	str	r0, [r8]
   1550c:	cmp	r0, #0
   15510:	bne	154f4 <table_set@@Base+0x218>
   15514:	b	155d0 <table_set@@Base+0x2f4>
   15518:	ldr	r3, [r0, #4]
   1551c:	cmp	r3, #6
   15520:	bne	155d0 <table_set@@Base+0x2f4>
   15524:	ldr	r0, [r8]
   15528:	cmp	r0, #0
   1552c:	beq	1553c <table_set@@Base+0x260>
   15530:	ldr	r3, [r7]
   15534:	str	r3, [r0]
   15538:	b	15918 <table_set@@Base+0x63c>
   1553c:	mov	r0, #4
   15540:	bl	12990 <malloc@plt>
   15544:	str	r0, [r8]
   15548:	cmp	r0, #0
   1554c:	bne	15530 <table_set@@Base+0x254>
   15550:	b	155d0 <table_set@@Base+0x2f4>
   15554:	ldr	r3, [r0, #4]
   15558:	cmp	r3, #7
   1555c:	bne	155d0 <table_set@@Base+0x2f4>
   15560:	ldr	r0, [r8]
   15564:	cmp	r0, #0
   15568:	beq	15578 <table_set@@Base+0x29c>
   1556c:	ldr	r3, [r7]
   15570:	str	r3, [r0]
   15574:	b	15918 <table_set@@Base+0x63c>
   15578:	mov	r0, #4
   1557c:	bl	12990 <malloc@plt>
   15580:	str	r0, [r8]
   15584:	cmp	r0, #0
   15588:	bne	1556c <table_set@@Base+0x290>
   1558c:	b	155d0 <table_set@@Base+0x2f4>
   15590:	ldr	r3, [r0, #4]
   15594:	cmp	r3, #8
   15598:	bne	155d0 <table_set@@Base+0x2f4>
   1559c:	ldr	r0, [r8]
   155a0:	cmp	r0, #0
   155a4:	beq	155bc <table_set@@Base+0x2e0>
   155a8:	ldr	r2, [r7]
   155ac:	ldr	r3, [r7, #4]
   155b0:	str	r2, [r0]
   155b4:	str	r3, [r0, #4]
   155b8:	b	15918 <table_set@@Base+0x63c>
   155bc:	mov	r0, #8
   155c0:	bl	12990 <malloc@plt>
   155c4:	str	r0, [r8]
   155c8:	cmp	r0, #0
   155cc:	bne	155a8 <table_set@@Base+0x2cc>
   155d0:	mvn	r0, #0
   155d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155d8:	ldr	r3, [r0, #4]
   155dc:	cmp	r3, #9
   155e0:	bne	155d0 <table_set@@Base+0x2f4>
   155e4:	ldr	r0, [r8]
   155e8:	cmp	r0, #0
   155ec:	beq	15604 <table_set@@Base+0x328>
   155f0:	ldr	r2, [r7]
   155f4:	ldr	r3, [r7, #4]
   155f8:	str	r2, [r0]
   155fc:	str	r3, [r0, #4]
   15600:	b	15918 <table_set@@Base+0x63c>
   15604:	mov	r0, #8
   15608:	bl	12990 <malloc@plt>
   1560c:	str	r0, [r8]
   15610:	cmp	r0, #0
   15614:	bne	155f0 <table_set@@Base+0x314>
   15618:	b	155d0 <table_set@@Base+0x2f4>
   1561c:	ldr	r3, [r0, #4]
   15620:	cmp	r3, #10
   15624:	bne	155d0 <table_set@@Base+0x2f4>
   15628:	ldr	r0, [r8]
   1562c:	cmp	r0, #0
   15630:	beq	15640 <table_set@@Base+0x364>
   15634:	ldrh	r3, [r7]
   15638:	strh	r3, [r0]
   1563c:	b	15918 <table_set@@Base+0x63c>
   15640:	mov	r0, #2
   15644:	bl	12990 <malloc@plt>
   15648:	str	r0, [r8]
   1564c:	cmp	r0, #0
   15650:	bne	15634 <table_set@@Base+0x358>
   15654:	b	155d0 <table_set@@Base+0x2f4>
   15658:	ldr	r3, [r0, #4]
   1565c:	cmp	r3, #11
   15660:	bne	155d0 <table_set@@Base+0x2f4>
   15664:	ldr	r0, [r8]
   15668:	cmp	r0, #0
   1566c:	beq	1567c <table_set@@Base+0x3a0>
   15670:	ldrh	r3, [r7]
   15674:	strh	r3, [r0]
   15678:	b	15918 <table_set@@Base+0x63c>
   1567c:	mov	r0, #2
   15680:	bl	12990 <malloc@plt>
   15684:	str	r0, [r8]
   15688:	cmp	r0, #0
   1568c:	bne	15670 <table_set@@Base+0x394>
   15690:	b	155d0 <table_set@@Base+0x2f4>
   15694:	ldr	r3, [r0, #4]
   15698:	cmp	r3, #12
   1569c:	bne	155d0 <table_set@@Base+0x2f4>
   156a0:	ldr	r0, [r8]
   156a4:	cmp	r0, #0
   156a8:	beq	156b8 <table_set@@Base+0x3dc>
   156ac:	ldr	r3, [r7]
   156b0:	str	r3, [r0]
   156b4:	b	15918 <table_set@@Base+0x63c>
   156b8:	mov	r0, #4
   156bc:	bl	12990 <malloc@plt>
   156c0:	str	r0, [r8]
   156c4:	cmp	r0, #0
   156c8:	bne	156ac <table_set@@Base+0x3d0>
   156cc:	b	155d0 <table_set@@Base+0x2f4>
   156d0:	ldr	r3, [r0, #4]
   156d4:	cmp	r3, #13
   156d8:	bne	155d0 <table_set@@Base+0x2f4>
   156dc:	ldr	r0, [r8]
   156e0:	cmp	r0, #0
   156e4:	beq	156f4 <table_set@@Base+0x418>
   156e8:	ldr	r3, [r7]
   156ec:	str	r3, [r0]
   156f0:	b	15918 <table_set@@Base+0x63c>
   156f4:	mov	r0, #4
   156f8:	bl	12990 <malloc@plt>
   156fc:	str	r0, [r8]
   15700:	cmp	r0, #0
   15704:	bne	156e8 <table_set@@Base+0x40c>
   15708:	b	155d0 <table_set@@Base+0x2f4>
   1570c:	ldr	r3, [r0, #4]
   15710:	cmp	r3, #14
   15714:	bne	155d0 <table_set@@Base+0x2f4>
   15718:	ldr	r0, [r8]
   1571c:	cmp	r0, #0
   15720:	beq	15738 <table_set@@Base+0x45c>
   15724:	ldr	r2, [r7]
   15728:	ldr	r3, [r7, #4]
   1572c:	str	r2, [r0]
   15730:	str	r3, [r0, #4]
   15734:	b	15918 <table_set@@Base+0x63c>
   15738:	mov	r0, #8
   1573c:	bl	12990 <malloc@plt>
   15740:	str	r0, [r8]
   15744:	cmp	r0, #0
   15748:	bne	15724 <table_set@@Base+0x448>
   1574c:	b	155d0 <table_set@@Base+0x2f4>
   15750:	ldr	r3, [r0, #4]
   15754:	cmp	r3, #15
   15758:	bne	155d0 <table_set@@Base+0x2f4>
   1575c:	ldr	r0, [r8]
   15760:	cmp	r0, #0
   15764:	beq	1577c <table_set@@Base+0x4a0>
   15768:	ldr	r2, [r7]
   1576c:	ldr	r3, [r7, #4]
   15770:	str	r2, [r0]
   15774:	str	r3, [r0, #4]
   15778:	b	15918 <table_set@@Base+0x63c>
   1577c:	mov	r0, #8
   15780:	bl	12990 <malloc@plt>
   15784:	str	r0, [r8]
   15788:	cmp	r0, #0
   1578c:	bne	15768 <table_set@@Base+0x48c>
   15790:	b	155d0 <table_set@@Base+0x2f4>
   15794:	ldr	r3, [r0, #4]
   15798:	cmp	r3, #16
   1579c:	bne	155d0 <table_set@@Base+0x2f4>
   157a0:	ldr	r0, [r8]
   157a4:	cmp	r0, #0
   157a8:	beq	157b8 <table_set@@Base+0x4dc>
   157ac:	ldr	r3, [r7]
   157b0:	str	r3, [r0]
   157b4:	b	15918 <table_set@@Base+0x63c>
   157b8:	mov	r0, #4
   157bc:	bl	12990 <malloc@plt>
   157c0:	str	r0, [r8]
   157c4:	cmp	r0, #0
   157c8:	bne	157ac <table_set@@Base+0x4d0>
   157cc:	b	155d0 <table_set@@Base+0x2f4>
   157d0:	ldr	r3, [r0, #4]
   157d4:	cmp	r3, #17
   157d8:	bne	155d0 <table_set@@Base+0x2f4>
   157dc:	ldr	r0, [r8]
   157e0:	cmp	r0, #0
   157e4:	beq	157fc <table_set@@Base+0x520>
   157e8:	ldr	r2, [r7]
   157ec:	ldr	r3, [r7, #4]
   157f0:	str	r2, [r0]
   157f4:	str	r3, [r0, #4]
   157f8:	b	15918 <table_set@@Base+0x63c>
   157fc:	mov	r0, #8
   15800:	bl	12990 <malloc@plt>
   15804:	str	r0, [r8]
   15808:	cmp	r0, #0
   1580c:	bne	157e8 <table_set@@Base+0x50c>
   15810:	b	155d0 <table_set@@Base+0x2f4>
   15814:	ldr	r3, [r0, #4]
   15818:	cmp	r3, #18
   1581c:	bne	155d0 <table_set@@Base+0x2f4>
   15820:	ldr	r0, [r8]
   15824:	cmp	r0, #0
   15828:	beq	15840 <table_set@@Base+0x564>
   1582c:	ldr	r2, [r7]
   15830:	ldr	r3, [r7, #4]
   15834:	str	r2, [r0]
   15838:	str	r3, [r0, #4]
   1583c:	b	15918 <table_set@@Base+0x63c>
   15840:	mov	r0, #8
   15844:	bl	12990 <malloc@plt>
   15848:	str	r0, [r8]
   1584c:	cmp	r0, #0
   15850:	bne	1582c <table_set@@Base+0x550>
   15854:	b	155d0 <table_set@@Base+0x2f4>
   15858:	ldr	r3, [r0, #4]
   1585c:	cmp	r3, #21
   15860:	bne	155d0 <table_set@@Base+0x2f4>
   15864:	mov	r0, r7
   15868:	bl	129b4 <strlen@plt>
   1586c:	add	r1, r0, #1
   15870:	ldr	r0, [r8]
   15874:	bl	12978 <realloc@plt>
   15878:	str	r0, [r8]
   1587c:	cmp	r0, #0
   15880:	beq	155d0 <table_set@@Base+0x2f4>
   15884:	mov	r1, r7
   15888:	bl	12984 <strcpy@plt>
   1588c:	b	15918 <table_set@@Base+0x63c>
   15890:	ldr	r3, [r0, #4]
   15894:	cmp	r3, #19
   15898:	bne	155d0 <table_set@@Base+0x2f4>
   1589c:	ldr	r0, [r8]
   158a0:	cmp	r0, #0
   158a4:	beq	158b4 <table_set@@Base+0x5d8>
   158a8:	ldrb	r3, [r7]
   158ac:	strb	r3, [r0]
   158b0:	b	15918 <table_set@@Base+0x63c>
   158b4:	mov	r0, #1
   158b8:	bl	12990 <malloc@plt>
   158bc:	str	r0, [r8]
   158c0:	cmp	r0, #0
   158c4:	bne	158a8 <table_set@@Base+0x5cc>
   158c8:	b	155d0 <table_set@@Base+0x2f4>
   158cc:	ldr	r3, [r0, #4]
   158d0:	cmp	r3, #20
   158d4:	bne	155d0 <table_set@@Base+0x2f4>
   158d8:	ldr	r0, [r8]
   158dc:	cmp	r0, #0
   158e0:	beq	158f0 <table_set@@Base+0x614>
   158e4:	ldrb	r3, [r7]
   158e8:	strb	r3, [r0]
   158ec:	b	15918 <table_set@@Base+0x63c>
   158f0:	mov	r0, #1
   158f4:	bl	12990 <malloc@plt>
   158f8:	str	r0, [r8]
   158fc:	cmp	r0, #0
   15900:	bne	158e4 <table_set@@Base+0x608>
   15904:	b	155d0 <table_set@@Base+0x2f4>
   15908:	ldr	r3, [r0, #4]
   1590c:	cmp	r3, #23
   15910:	bne	155d0 <table_set@@Base+0x2f4>
   15914:	str	r7, [r8]
   15918:	mov	r3, #1
   1591c:	mov	r2, r6
   15920:	mov	r1, r9
   15924:	mov	r0, r5
   15928:	bl	135bc <table_notify@@Base>
   1592c:	mov	r0, #0
   15930:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15934:	mvn	r0, #0
   15938:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001593c <table_set_bool@@Base>:
   1593c:	push	{lr}		; (str lr, [sp, #-4]!)
   15940:	sub	sp, sp, #20
   15944:	add	ip, sp, #16
   15948:	strb	r3, [ip, #-1]!
   1594c:	mov	r3, #22
   15950:	str	r3, [sp]
   15954:	mov	r3, ip
   15958:	bl	152dc <table_set@@Base>
   1595c:	add	sp, sp, #20
   15960:	pop	{pc}		; (ldr pc, [sp], #4)

00015964 <table_set_int@@Base>:
   15964:	push	{lr}		; (str lr, [sp, #-4]!)
   15968:	sub	sp, sp, #20
   1596c:	add	ip, sp, #16
   15970:	str	r3, [ip, #-4]!
   15974:	mov	r3, #0
   15978:	str	r3, [sp]
   1597c:	mov	r3, ip
   15980:	bl	152dc <table_set@@Base>
   15984:	add	sp, sp, #20
   15988:	pop	{pc}		; (ldr pc, [sp], #4)

0001598c <table_set_uint@@Base>:
   1598c:	push	{lr}		; (str lr, [sp, #-4]!)
   15990:	sub	sp, sp, #20
   15994:	add	ip, sp, #16
   15998:	str	r3, [ip, #-4]!
   1599c:	mov	r3, #1
   159a0:	str	r3, [sp]
   159a4:	mov	r3, ip
   159a8:	bl	152dc <table_set@@Base>
   159ac:	add	sp, sp, #20
   159b0:	pop	{pc}		; (ldr pc, [sp], #4)

000159b4 <table_set_int8@@Base>:
   159b4:	push	{lr}		; (str lr, [sp, #-4]!)
   159b8:	sub	sp, sp, #20
   159bc:	add	ip, sp, #16
   159c0:	strb	r3, [ip, #-1]!
   159c4:	mov	r3, #2
   159c8:	str	r3, [sp]
   159cc:	mov	r3, ip
   159d0:	bl	152dc <table_set@@Base>
   159d4:	add	sp, sp, #20
   159d8:	pop	{pc}		; (ldr pc, [sp], #4)

000159dc <table_set_uint8@@Base>:
   159dc:	push	{lr}		; (str lr, [sp, #-4]!)
   159e0:	sub	sp, sp, #20
   159e4:	add	ip, sp, #16
   159e8:	strb	r3, [ip, #-1]!
   159ec:	mov	r3, #3
   159f0:	str	r3, [sp]
   159f4:	mov	r3, ip
   159f8:	bl	152dc <table_set@@Base>
   159fc:	add	sp, sp, #20
   15a00:	pop	{pc}		; (ldr pc, [sp], #4)

00015a04 <table_set_int16@@Base>:
   15a04:	push	{lr}		; (str lr, [sp, #-4]!)
   15a08:	sub	sp, sp, #20
   15a0c:	add	ip, sp, #16
   15a10:	strh	r3, [ip, #-2]!
   15a14:	mov	r3, #4
   15a18:	str	r3, [sp]
   15a1c:	mov	r3, ip
   15a20:	bl	152dc <table_set@@Base>
   15a24:	add	sp, sp, #20
   15a28:	pop	{pc}		; (ldr pc, [sp], #4)

00015a2c <table_set_uint16@@Base>:
   15a2c:	push	{lr}		; (str lr, [sp, #-4]!)
   15a30:	sub	sp, sp, #20
   15a34:	add	ip, sp, #16
   15a38:	strh	r3, [ip, #-2]!
   15a3c:	mov	r3, #5
   15a40:	str	r3, [sp]
   15a44:	mov	r3, ip
   15a48:	bl	152dc <table_set@@Base>
   15a4c:	add	sp, sp, #20
   15a50:	pop	{pc}		; (ldr pc, [sp], #4)

00015a54 <table_set_int32@@Base>:
   15a54:	push	{lr}		; (str lr, [sp, #-4]!)
   15a58:	sub	sp, sp, #20
   15a5c:	add	ip, sp, #16
   15a60:	str	r3, [ip, #-4]!
   15a64:	mov	r3, #6
   15a68:	str	r3, [sp]
   15a6c:	mov	r3, ip
   15a70:	bl	152dc <table_set@@Base>
   15a74:	add	sp, sp, #20
   15a78:	pop	{pc}		; (ldr pc, [sp], #4)

00015a7c <table_set_uint32@@Base>:
   15a7c:	push	{lr}		; (str lr, [sp, #-4]!)
   15a80:	sub	sp, sp, #20
   15a84:	add	ip, sp, #16
   15a88:	str	r3, [ip, #-4]!
   15a8c:	mov	r3, #7
   15a90:	str	r3, [sp]
   15a94:	mov	r3, ip
   15a98:	bl	152dc <table_set@@Base>
   15a9c:	add	sp, sp, #20
   15aa0:	pop	{pc}		; (ldr pc, [sp], #4)

00015aa4 <table_set_int64@@Base>:
   15aa4:	push	{lr}		; (str lr, [sp, #-4]!)
   15aa8:	sub	sp, sp, #12
   15aac:	mov	r3, #8
   15ab0:	str	r3, [sp]
   15ab4:	add	r3, sp, #16
   15ab8:	bl	152dc <table_set@@Base>
   15abc:	add	sp, sp, #12
   15ac0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ac4 <table_set_uint64@@Base>:
   15ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   15ac8:	sub	sp, sp, #12
   15acc:	mov	r3, #9
   15ad0:	str	r3, [sp]
   15ad4:	add	r3, sp, #16
   15ad8:	bl	152dc <table_set@@Base>
   15adc:	add	sp, sp, #12
   15ae0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ae4 <table_set_short@@Base>:
   15ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   15ae8:	sub	sp, sp, #20
   15aec:	add	ip, sp, #16
   15af0:	strh	r3, [ip, #-2]!
   15af4:	mov	r3, #10
   15af8:	str	r3, [sp]
   15afc:	mov	r3, ip
   15b00:	bl	152dc <table_set@@Base>
   15b04:	add	sp, sp, #20
   15b08:	pop	{pc}		; (ldr pc, [sp], #4)

00015b0c <table_set_ushort@@Base>:
   15b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   15b10:	sub	sp, sp, #20
   15b14:	add	ip, sp, #16
   15b18:	strh	r3, [ip, #-2]!
   15b1c:	mov	r3, #11
   15b20:	str	r3, [sp]
   15b24:	mov	r3, ip
   15b28:	bl	152dc <table_set@@Base>
   15b2c:	add	sp, sp, #20
   15b30:	pop	{pc}		; (ldr pc, [sp], #4)

00015b34 <table_set_long@@Base>:
   15b34:	push	{lr}		; (str lr, [sp, #-4]!)
   15b38:	sub	sp, sp, #20
   15b3c:	add	ip, sp, #16
   15b40:	str	r3, [ip, #-4]!
   15b44:	mov	r3, #12
   15b48:	str	r3, [sp]
   15b4c:	mov	r3, ip
   15b50:	bl	152dc <table_set@@Base>
   15b54:	add	sp, sp, #20
   15b58:	pop	{pc}		; (ldr pc, [sp], #4)

00015b5c <table_set_ulong@@Base>:
   15b5c:	push	{lr}		; (str lr, [sp, #-4]!)
   15b60:	sub	sp, sp, #20
   15b64:	add	ip, sp, #16
   15b68:	str	r3, [ip, #-4]!
   15b6c:	mov	r3, #13
   15b70:	str	r3, [sp]
   15b74:	mov	r3, ip
   15b78:	bl	152dc <table_set@@Base>
   15b7c:	add	sp, sp, #20
   15b80:	pop	{pc}		; (ldr pc, [sp], #4)

00015b84 <table_set_llong@@Base>:
   15b84:	push	{lr}		; (str lr, [sp, #-4]!)
   15b88:	sub	sp, sp, #12
   15b8c:	mov	r3, #14
   15b90:	str	r3, [sp]
   15b94:	add	r3, sp, #16
   15b98:	bl	152dc <table_set@@Base>
   15b9c:	add	sp, sp, #12
   15ba0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ba4 <table_set_ullong@@Base>:
   15ba4:	push	{lr}		; (str lr, [sp, #-4]!)
   15ba8:	sub	sp, sp, #12
   15bac:	mov	r3, #15
   15bb0:	str	r3, [sp]
   15bb4:	add	r3, sp, #16
   15bb8:	bl	152dc <table_set@@Base>
   15bbc:	add	sp, sp, #12
   15bc0:	pop	{pc}		; (ldr pc, [sp], #4)

00015bc4 <table_set_float@@Base>:
   15bc4:	push	{lr}		; (str lr, [sp, #-4]!)
   15bc8:	sub	sp, sp, #20
   15bcc:	add	r3, sp, #16
   15bd0:	vstmdb	r3!, {s0}
   15bd4:	mov	ip, #16
   15bd8:	str	ip, [sp]
   15bdc:	bl	152dc <table_set@@Base>
   15be0:	add	sp, sp, #20
   15be4:	pop	{pc}		; (ldr pc, [sp], #4)

00015be8 <table_set_double@@Base>:
   15be8:	push	{lr}		; (str lr, [sp, #-4]!)
   15bec:	sub	sp, sp, #20
   15bf0:	add	r3, sp, #16
   15bf4:	vstmdb	r3!, {d0}
   15bf8:	mov	ip, #17
   15bfc:	str	ip, [sp]
   15c00:	bl	152dc <table_set@@Base>
   15c04:	add	sp, sp, #20
   15c08:	pop	{pc}		; (ldr pc, [sp], #4)

00015c0c <table_set_ldouble@@Base>:
   15c0c:	push	{lr}		; (str lr, [sp, #-4]!)
   15c10:	sub	sp, sp, #20
   15c14:	add	r3, sp, #16
   15c18:	vstmdb	r3!, {d0}
   15c1c:	mov	ip, #18
   15c20:	str	ip, [sp]
   15c24:	bl	152dc <table_set@@Base>
   15c28:	add	sp, sp, #20
   15c2c:	pop	{pc}		; (ldr pc, [sp], #4)

00015c30 <table_set_string@@Base>:
   15c30:	push	{lr}		; (str lr, [sp, #-4]!)
   15c34:	sub	sp, sp, #12
   15c38:	mov	ip, #21
   15c3c:	str	ip, [sp]
   15c40:	bl	152dc <table_set@@Base>
   15c44:	add	sp, sp, #12
   15c48:	pop	{pc}		; (ldr pc, [sp], #4)

00015c4c <table_set_char@@Base>:
   15c4c:	push	{lr}		; (str lr, [sp, #-4]!)
   15c50:	sub	sp, sp, #20
   15c54:	add	ip, sp, #16
   15c58:	strb	r3, [ip, #-1]!
   15c5c:	mov	r3, #19
   15c60:	str	r3, [sp]
   15c64:	mov	r3, ip
   15c68:	bl	152dc <table_set@@Base>
   15c6c:	add	sp, sp, #20
   15c70:	pop	{pc}		; (ldr pc, [sp], #4)

00015c74 <table_set_uchar@@Base>:
   15c74:	push	{lr}		; (str lr, [sp, #-4]!)
   15c78:	sub	sp, sp, #20
   15c7c:	add	ip, sp, #16
   15c80:	strb	r3, [ip, #-1]!
   15c84:	mov	r3, #20
   15c88:	str	r3, [sp]
   15c8c:	mov	r3, ip
   15c90:	bl	152dc <table_set@@Base>
   15c94:	add	sp, sp, #20
   15c98:	pop	{pc}		; (ldr pc, [sp], #4)

00015c9c <table_set_ptr@@Base>:
   15c9c:	push	{lr}		; (str lr, [sp, #-4]!)
   15ca0:	sub	sp, sp, #12
   15ca4:	mov	ip, #23
   15ca8:	str	ip, [sp]
   15cac:	bl	152dc <table_set@@Base>
   15cb0:	add	sp, sp, #12
   15cb4:	pop	{pc}		; (ldr pc, [sp], #4)

00015cb8 <table_cell_to_buffer@@Base>:
   15cb8:	push	{r4, r5, r6, r7, lr}
   15cbc:	sub	sp, sp, #12
   15cc0:	mov	r6, r0
   15cc4:	mov	r7, r1
   15cc8:	mov	r4, r2
   15ccc:	mov	r5, r3
   15cd0:	mov	r1, r2
   15cd4:	bl	13714 <table_get_column_data_type@@Base>
   15cd8:	cmp	r0, #23
   15cdc:	ldrls	pc, [pc, r0, lsl #2]
   15ce0:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15ce4:	andeq	r5, r1, r4, asr #26
   15ce8:	andeq	r5, r1, r4, ror sp
   15cec:	muleq	r1, ip, sp
   15cf0:	andeq	r5, r1, r4, asr #27
   15cf4:	andeq	r5, r1, ip, ror #27
   15cf8:	andeq	r5, r1, r4, lsl lr
   15cfc:	andeq	r5, r1, ip, lsr lr
   15d00:	andeq	r5, r1, r4, ror #28
   15d04:	andeq	r5, r1, ip, lsl #29
   15d08:			; <UNDEFINED> instruction: 0x00015eb4
   15d0c:	ldrdeq	r5, [r1], -ip
   15d10:	andeq	r5, r1, r4, lsl #30
   15d14:	andeq	r5, r1, ip, lsr #30
   15d18:	andeq	r5, r1, r4, asr pc
   15d1c:	andeq	r5, r1, ip, ror pc
   15d20:	andeq	r5, r1, r4, lsr #31
   15d24:	strdeq	r5, [r1], -r4
   15d28:	andeq	r6, r1, r0, lsr #32
   15d2c:	andeq	r6, r1, r8, asr #32
   15d30:	muleq	r1, r8, r0
   15d34:	andeq	r6, r1, r0, asr #1
   15d38:	andeq	r5, r1, ip, asr #31
   15d3c:	andeq	r6, r1, r0, ror r0
   15d40:	andeq	r6, r1, r8, ror #1
   15d44:	mov	r2, r4
   15d48:	mov	r1, r7
   15d4c:	mov	r0, r6
   15d50:	bl	14f28 <table_get_int@@Base>
   15d54:	mov	r3, r0
   15d58:	ldr	r2, [pc, #944]	; 16110 <table_cell_to_buffer@@Base+0x458>
   15d5c:	ldr	r1, [sp, #32]
   15d60:	mov	r0, r5
   15d64:	bl	129c0 <snprintf@plt>
   15d68:	mov	r0, #0
   15d6c:	add	sp, sp, #12
   15d70:	pop	{r4, r5, r6, r7, pc}
   15d74:	mov	r2, r4
   15d78:	mov	r1, r7
   15d7c:	mov	r0, r6
   15d80:	bl	14f38 <table_get_uint@@Base>
   15d84:	mov	r3, r0
   15d88:	ldr	r2, [pc, #900]	; 16114 <table_cell_to_buffer@@Base+0x45c>
   15d8c:	ldr	r1, [sp, #32]
   15d90:	mov	r0, r5
   15d94:	bl	129c0 <snprintf@plt>
   15d98:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15d9c:	mov	r2, r4
   15da0:	mov	r1, r7
   15da4:	mov	r0, r6
   15da8:	bl	14f48 <table_get_int8@@Base>
   15dac:	mov	r3, r0
   15db0:	ldr	r2, [pc, #856]	; 16110 <table_cell_to_buffer@@Base+0x458>
   15db4:	ldr	r1, [sp, #32]
   15db8:	mov	r0, r5
   15dbc:	bl	129c0 <snprintf@plt>
   15dc0:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15dc4:	mov	r2, r4
   15dc8:	mov	r1, r7
   15dcc:	mov	r0, r6
   15dd0:	bl	14f58 <table_get_uint8@@Base>
   15dd4:	mov	r3, r0
   15dd8:	ldr	r2, [pc, #820]	; 16114 <table_cell_to_buffer@@Base+0x45c>
   15ddc:	ldr	r1, [sp, #32]
   15de0:	mov	r0, r5
   15de4:	bl	129c0 <snprintf@plt>
   15de8:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15dec:	mov	r2, r4
   15df0:	mov	r1, r7
   15df4:	mov	r0, r6
   15df8:	bl	14f68 <table_get_int16@@Base>
   15dfc:	mov	r3, r0
   15e00:	ldr	r2, [pc, #776]	; 16110 <table_cell_to_buffer@@Base+0x458>
   15e04:	ldr	r1, [sp, #32]
   15e08:	mov	r0, r5
   15e0c:	bl	129c0 <snprintf@plt>
   15e10:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15e14:	mov	r2, r4
   15e18:	mov	r1, r7
   15e1c:	mov	r0, r6
   15e20:	bl	14f78 <table_get_uint16@@Base>
   15e24:	mov	r3, r0
   15e28:	ldr	r2, [pc, #740]	; 16114 <table_cell_to_buffer@@Base+0x45c>
   15e2c:	ldr	r1, [sp, #32]
   15e30:	mov	r0, r5
   15e34:	bl	129c0 <snprintf@plt>
   15e38:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15e3c:	mov	r2, r4
   15e40:	mov	r1, r7
   15e44:	mov	r0, r6
   15e48:	bl	14f88 <table_get_int32@@Base>
   15e4c:	mov	r3, r0
   15e50:	ldr	r2, [pc, #696]	; 16110 <table_cell_to_buffer@@Base+0x458>
   15e54:	ldr	r1, [sp, #32]
   15e58:	mov	r0, r5
   15e5c:	bl	129c0 <snprintf@plt>
   15e60:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15e64:	mov	r2, r4
   15e68:	mov	r1, r7
   15e6c:	mov	r0, r6
   15e70:	bl	14f98 <table_get_uint32@@Base>
   15e74:	mov	r3, r0
   15e78:	ldr	r2, [pc, #660]	; 16114 <table_cell_to_buffer@@Base+0x45c>
   15e7c:	ldr	r1, [sp, #32]
   15e80:	mov	r0, r5
   15e84:	bl	129c0 <snprintf@plt>
   15e88:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15e8c:	mov	r2, r4
   15e90:	mov	r1, r7
   15e94:	mov	r0, r6
   15e98:	bl	14fa8 <table_get_int64@@Base>
   15e9c:	strd	r0, [sp]
   15ea0:	ldr	r2, [pc, #624]	; 16118 <table_cell_to_buffer@@Base+0x460>
   15ea4:	ldr	r1, [sp, #32]
   15ea8:	mov	r0, r5
   15eac:	bl	129c0 <snprintf@plt>
   15eb0:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15eb4:	mov	r2, r4
   15eb8:	mov	r1, r7
   15ebc:	mov	r0, r6
   15ec0:	bl	14fb8 <table_get_uint64@@Base>
   15ec4:	strd	r0, [sp]
   15ec8:	ldr	r2, [pc, #588]	; 1611c <table_cell_to_buffer@@Base+0x464>
   15ecc:	ldr	r1, [sp, #32]
   15ed0:	mov	r0, r5
   15ed4:	bl	129c0 <snprintf@plt>
   15ed8:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15edc:	mov	r2, r4
   15ee0:	mov	r1, r7
   15ee4:	mov	r0, r6
   15ee8:	bl	14fc8 <table_get_short@@Base>
   15eec:	mov	r3, r0
   15ef0:	ldr	r2, [pc, #552]	; 16120 <table_cell_to_buffer@@Base+0x468>
   15ef4:	ldr	r1, [sp, #32]
   15ef8:	mov	r0, r5
   15efc:	bl	129c0 <snprintf@plt>
   15f00:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15f04:	mov	r2, r4
   15f08:	mov	r1, r7
   15f0c:	mov	r0, r6
   15f10:	bl	14fd8 <table_get_ushort@@Base>
   15f14:	mov	r3, r0
   15f18:	ldr	r2, [pc, #516]	; 16124 <table_cell_to_buffer@@Base+0x46c>
   15f1c:	ldr	r1, [sp, #32]
   15f20:	mov	r0, r5
   15f24:	bl	129c0 <snprintf@plt>
   15f28:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15f2c:	mov	r2, r4
   15f30:	mov	r1, r7
   15f34:	mov	r0, r6
   15f38:	bl	14fe8 <table_get_long@@Base>
   15f3c:	mov	r3, r0
   15f40:	ldr	r2, [pc, #480]	; 16128 <table_cell_to_buffer@@Base+0x470>
   15f44:	ldr	r1, [sp, #32]
   15f48:	mov	r0, r5
   15f4c:	bl	129c0 <snprintf@plt>
   15f50:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15f54:	mov	r2, r4
   15f58:	mov	r1, r7
   15f5c:	mov	r0, r6
   15f60:	bl	14ff8 <table_get_ulong@@Base>
   15f64:	mov	r3, r0
   15f68:	ldr	r2, [pc, #444]	; 1612c <table_cell_to_buffer@@Base+0x474>
   15f6c:	ldr	r1, [sp, #32]
   15f70:	mov	r0, r5
   15f74:	bl	129c0 <snprintf@plt>
   15f78:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15f7c:	mov	r2, r4
   15f80:	mov	r1, r7
   15f84:	mov	r0, r6
   15f88:	bl	15008 <table_get_llong@@Base>
   15f8c:	strd	r0, [sp]
   15f90:	ldr	r2, [pc, #384]	; 16118 <table_cell_to_buffer@@Base+0x460>
   15f94:	ldr	r1, [sp, #32]
   15f98:	mov	r0, r5
   15f9c:	bl	129c0 <snprintf@plt>
   15fa0:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15fa4:	mov	r2, r4
   15fa8:	mov	r1, r7
   15fac:	mov	r0, r6
   15fb0:	bl	15018 <table_get_ullong@@Base>
   15fb4:	strd	r0, [sp]
   15fb8:	ldr	r2, [pc, #348]	; 1611c <table_cell_to_buffer@@Base+0x464>
   15fbc:	ldr	r1, [sp, #32]
   15fc0:	mov	r0, r5
   15fc4:	bl	129c0 <snprintf@plt>
   15fc8:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15fcc:	mov	r2, r4
   15fd0:	mov	r1, r7
   15fd4:	mov	r0, r6
   15fd8:	bl	15078 <table_get_string@@Base>
   15fdc:	mov	r3, r0
   15fe0:	ldr	r2, [pc, #328]	; 16130 <table_cell_to_buffer@@Base+0x478>
   15fe4:	ldr	r1, [sp, #32]
   15fe8:	mov	r0, r5
   15fec:	bl	129c0 <snprintf@plt>
   15ff0:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   15ff4:	mov	r2, r4
   15ff8:	mov	r1, r7
   15ffc:	mov	r0, r6
   16000:	bl	15028 <table_get_float@@Base>
   16004:	vcvt.f64.f32	d0, s0
   16008:	vstr	d0, [sp]
   1600c:	ldr	r2, [pc, #288]	; 16134 <table_cell_to_buffer@@Base+0x47c>
   16010:	ldr	r1, [sp, #32]
   16014:	mov	r0, r5
   16018:	bl	129c0 <snprintf@plt>
   1601c:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   16020:	mov	r2, r4
   16024:	mov	r1, r7
   16028:	mov	r0, r6
   1602c:	bl	15038 <table_get_double@@Base>
   16030:	vstr	d0, [sp]
   16034:	ldr	r2, [pc, #252]	; 16138 <table_cell_to_buffer@@Base+0x480>
   16038:	ldr	r1, [sp, #32]
   1603c:	mov	r0, r5
   16040:	bl	129c0 <snprintf@plt>
   16044:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   16048:	mov	r2, r4
   1604c:	mov	r1, r7
   16050:	mov	r0, r6
   16054:	bl	15048 <table_get_ldouble@@Base>
   16058:	vstr	d0, [sp]
   1605c:	ldr	r2, [pc, #216]	; 1613c <table_cell_to_buffer@@Base+0x484>
   16060:	ldr	r1, [sp, #32]
   16064:	mov	r0, r5
   16068:	bl	129c0 <snprintf@plt>
   1606c:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   16070:	mov	r2, r4
   16074:	mov	r1, r7
   16078:	mov	r0, r6
   1607c:	bl	14f18 <table_get_bool@@Base>
   16080:	mov	r3, r0
   16084:	ldr	r2, [pc, #132]	; 16110 <table_cell_to_buffer@@Base+0x458>
   16088:	ldr	r1, [sp, #32]
   1608c:	mov	r0, r5
   16090:	bl	129c0 <snprintf@plt>
   16094:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   16098:	mov	r2, r4
   1609c:	mov	r1, r7
   160a0:	mov	r0, r6
   160a4:	bl	15058 <table_get_char@@Base>
   160a8:	mov	r3, r0
   160ac:	ldr	r2, [pc, #140]	; 16140 <table_cell_to_buffer@@Base+0x488>
   160b0:	ldr	r1, [sp, #32]
   160b4:	mov	r0, r5
   160b8:	bl	129c0 <snprintf@plt>
   160bc:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   160c0:	mov	r2, r4
   160c4:	mov	r1, r7
   160c8:	mov	r0, r6
   160cc:	bl	15068 <table_get_uchar@@Base>
   160d0:	mov	r3, r0
   160d4:	ldr	r2, [pc, #100]	; 16140 <table_cell_to_buffer@@Base+0x488>
   160d8:	ldr	r1, [sp, #32]
   160dc:	mov	r0, r5
   160e0:	bl	129c0 <snprintf@plt>
   160e4:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   160e8:	mov	r2, r4
   160ec:	mov	r1, r7
   160f0:	mov	r0, r6
   160f4:	bl	15084 <table_get_ptr@@Base>
   160f8:	mov	r3, r0
   160fc:	ldr	r2, [pc, #64]	; 16144 <table_cell_to_buffer@@Base+0x48c>
   16100:	ldr	r1, [sp, #32]
   16104:	mov	r0, r5
   16108:	bl	129c0 <snprintf@plt>
   1610c:	b	15d68 <table_cell_to_buffer@@Base+0xb0>
   16110:	andeq	r6, r1, r8, lsr fp
   16114:			; <UNDEFINED> instruction: 0x00016bbc
   16118:	andeq	r6, r1, r0, asr #23
   1611c:	andeq	r6, r1, r8, asr #23
   16120:	ldrdeq	r6, [r1], -r0
   16124:	ldrdeq	r6, [r1], -r4
   16128:	ldrdeq	r6, [r1], -r8
   1612c:	ldrdeq	r6, [r1], -ip
   16130:	andeq	r6, r1, r0, ror #23
   16134:	andeq	r6, r1, r4, ror #23
   16138:	andeq	r6, r1, r8, ror #23
   1613c:	andeq	r6, r1, ip, ror #23
   16140:	strdeq	r6, [r1], -r0
   16144:	strdeq	r6, [r1], -r4

00016148 <table_cell_from_buffer@@Base>:
   16148:	push	{r4, r5, r6, r7, lr}
   1614c:	sub	sp, sp, #268	; 0x10c
   16150:	mov	r6, r0
   16154:	mov	r7, r1
   16158:	mov	r4, r2
   1615c:	mov	r5, r3
   16160:	mov	r1, r2
   16164:	bl	13714 <table_get_column_data_type@@Base>
   16168:	cmp	r0, #23
   1616c:	ldrls	pc, [pc, r0, lsl #2]
   16170:	b	16754 <table_cell_from_buffer@@Base+0x60c>
   16174:	ldrdeq	r6, [r1], -r4
   16178:	andeq	r6, r1, ip, lsl #4
   1617c:	andeq	r6, r1, r4, asr #4
   16180:	andeq	r6, r1, ip, ror r2
   16184:			; <UNDEFINED> instruction: 0x000162b4
   16188:	andeq	r6, r1, ip, ror #5
   1618c:	andeq	r6, r1, r4, lsr #6
   16190:	andeq	r6, r1, ip, asr r3
   16194:	muleq	r1, r4, r3
   16198:	ldrdeq	r6, [r1], -r0
   1619c:	andeq	r6, r1, ip, lsl #8
   161a0:	andeq	r6, r1, r4, asr #8
   161a4:	andeq	r6, r1, ip, ror r4
   161a8:			; <UNDEFINED> instruction: 0x000164b4
   161ac:	andeq	r6, r1, ip, ror #9
   161b0:	andeq	r6, r1, r8, lsr #10
   161b4:	muleq	r1, ip, r5
   161b8:	ldrdeq	r6, [r1], -r4
   161bc:	andeq	r6, r1, ip, lsl #12
   161c0:	andeq	r6, r1, r0, lsr #13
   161c4:	ldrdeq	r6, [r1], -r8
   161c8:	andeq	r6, r1, r4, ror #10
   161cc:	andeq	r6, r1, r4, asr #12
   161d0:	andeq	r6, r1, r0, lsl r7
   161d4:	add	r2, sp, #8
   161d8:	ldr	r1, [pc, #1404]	; 1675c <table_cell_from_buffer@@Base+0x614>
   161dc:	mov	r0, r5
   161e0:	bl	129cc <__isoc99_sscanf@plt>
   161e4:	cmp	r0, #1
   161e8:	mvnne	r5, #0
   161ec:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   161f0:	ldr	r3, [sp, #8]
   161f4:	mov	r2, r4
   161f8:	mov	r1, r7
   161fc:	mov	r0, r6
   16200:	bl	15964 <table_set_int@@Base>
   16204:	mov	r5, #0
   16208:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1620c:	add	r2, sp, #8
   16210:	ldr	r1, [pc, #1352]	; 16760 <table_cell_from_buffer@@Base+0x618>
   16214:	mov	r0, r5
   16218:	bl	129cc <__isoc99_sscanf@plt>
   1621c:	cmp	r0, #1
   16220:	mvnne	r5, #0
   16224:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16228:	ldr	r3, [sp, #8]
   1622c:	mov	r2, r4
   16230:	mov	r1, r7
   16234:	mov	r0, r6
   16238:	bl	1598c <table_set_uint@@Base>
   1623c:	mov	r5, #0
   16240:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16244:	add	r2, sp, #8
   16248:	ldr	r1, [pc, #1300]	; 16764 <table_cell_from_buffer@@Base+0x61c>
   1624c:	mov	r0, r5
   16250:	bl	129cc <__isoc99_sscanf@plt>
   16254:	cmp	r0, #1
   16258:	mvnne	r5, #0
   1625c:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16260:	ldrsb	r3, [sp, #8]
   16264:	mov	r2, r4
   16268:	mov	r1, r7
   1626c:	mov	r0, r6
   16270:	bl	159b4 <table_set_int8@@Base>
   16274:	mov	r5, #0
   16278:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1627c:	add	r2, sp, #8
   16280:	ldr	r1, [pc, #1248]	; 16768 <table_cell_from_buffer@@Base+0x620>
   16284:	mov	r0, r5
   16288:	bl	129cc <__isoc99_sscanf@plt>
   1628c:	cmp	r0, #1
   16290:	mvnne	r5, #0
   16294:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16298:	ldrb	r3, [sp, #8]
   1629c:	mov	r2, r4
   162a0:	mov	r1, r7
   162a4:	mov	r0, r6
   162a8:	bl	159dc <table_set_uint8@@Base>
   162ac:	mov	r5, #0
   162b0:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   162b4:	add	r2, sp, #8
   162b8:	ldr	r1, [pc, #1196]	; 1676c <table_cell_from_buffer@@Base+0x624>
   162bc:	mov	r0, r5
   162c0:	bl	129cc <__isoc99_sscanf@plt>
   162c4:	cmp	r0, #1
   162c8:	mvnne	r5, #0
   162cc:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   162d0:	ldrsh	r3, [sp, #8]
   162d4:	mov	r2, r4
   162d8:	mov	r1, r7
   162dc:	mov	r0, r6
   162e0:	bl	15a04 <table_set_int16@@Base>
   162e4:	mov	r5, #0
   162e8:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   162ec:	add	r2, sp, #8
   162f0:	ldr	r1, [pc, #1144]	; 16770 <table_cell_from_buffer@@Base+0x628>
   162f4:	mov	r0, r5
   162f8:	bl	129cc <__isoc99_sscanf@plt>
   162fc:	cmp	r0, #1
   16300:	mvnne	r5, #0
   16304:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16308:	ldrh	r3, [sp, #8]
   1630c:	mov	r2, r4
   16310:	mov	r1, r7
   16314:	mov	r0, r6
   16318:	bl	15a2c <table_set_uint16@@Base>
   1631c:	mov	r5, #0
   16320:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16324:	add	r2, sp, #8
   16328:	ldr	r1, [pc, #1068]	; 1675c <table_cell_from_buffer@@Base+0x614>
   1632c:	mov	r0, r5
   16330:	bl	129cc <__isoc99_sscanf@plt>
   16334:	cmp	r0, #1
   16338:	mvnne	r5, #0
   1633c:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16340:	ldr	r3, [sp, #8]
   16344:	mov	r2, r4
   16348:	mov	r1, r7
   1634c:	mov	r0, r6
   16350:	bl	15a54 <table_set_int32@@Base>
   16354:	mov	r5, #0
   16358:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1635c:	add	r2, sp, #8
   16360:	ldr	r1, [pc, #1016]	; 16760 <table_cell_from_buffer@@Base+0x618>
   16364:	mov	r0, r5
   16368:	bl	129cc <__isoc99_sscanf@plt>
   1636c:	cmp	r0, #1
   16370:	mvnne	r5, #0
   16374:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16378:	ldr	r3, [sp, #8]
   1637c:	mov	r2, r4
   16380:	mov	r1, r7
   16384:	mov	r0, r6
   16388:	bl	15a7c <table_set_uint32@@Base>
   1638c:	mov	r5, #0
   16390:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16394:	add	r2, sp, #8
   16398:	ldr	r1, [pc, #980]	; 16774 <table_cell_from_buffer@@Base+0x62c>
   1639c:	mov	r0, r5
   163a0:	bl	129cc <__isoc99_sscanf@plt>
   163a4:	cmp	r0, #1
   163a8:	mvnne	r5, #0
   163ac:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   163b0:	ldrd	r2, [sp, #8]
   163b4:	strd	r2, [sp]
   163b8:	mov	r2, r4
   163bc:	mov	r1, r7
   163c0:	mov	r0, r6
   163c4:	bl	15aa4 <table_set_int64@@Base>
   163c8:	mov	r5, #0
   163cc:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   163d0:	add	r2, sp, #8
   163d4:	ldr	r1, [pc, #924]	; 16778 <table_cell_from_buffer@@Base+0x630>
   163d8:	mov	r0, r5
   163dc:	bl	129cc <__isoc99_sscanf@plt>
   163e0:	cmp	r0, #1
   163e4:	mvnne	r5, #0
   163e8:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   163ec:	ldrd	r2, [sp, #8]
   163f0:	strd	r2, [sp]
   163f4:	mov	r2, r4
   163f8:	mov	r1, r7
   163fc:	mov	r0, r6
   16400:	bl	15ac4 <table_set_uint64@@Base>
   16404:	mov	r5, #0
   16408:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1640c:	add	r2, sp, #8
   16410:	ldr	r1, [pc, #852]	; 1676c <table_cell_from_buffer@@Base+0x624>
   16414:	mov	r0, r5
   16418:	bl	129cc <__isoc99_sscanf@plt>
   1641c:	cmp	r0, #1
   16420:	mvnne	r5, #0
   16424:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16428:	ldrsh	r3, [sp, #8]
   1642c:	mov	r2, r4
   16430:	mov	r1, r7
   16434:	mov	r0, r6
   16438:	bl	15ae4 <table_set_short@@Base>
   1643c:	mov	r5, #0
   16440:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16444:	add	r2, sp, #8
   16448:	ldr	r1, [pc, #800]	; 16770 <table_cell_from_buffer@@Base+0x628>
   1644c:	mov	r0, r5
   16450:	bl	129cc <__isoc99_sscanf@plt>
   16454:	cmp	r0, #1
   16458:	mvnne	r5, #0
   1645c:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16460:	ldrh	r3, [sp, #8]
   16464:	mov	r2, r4
   16468:	mov	r1, r7
   1646c:	mov	r0, r6
   16470:	bl	15b0c <table_set_ushort@@Base>
   16474:	mov	r5, #0
   16478:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1647c:	add	r2, sp, #8
   16480:	ldr	r1, [pc, #756]	; 1677c <table_cell_from_buffer@@Base+0x634>
   16484:	mov	r0, r5
   16488:	bl	129cc <__isoc99_sscanf@plt>
   1648c:	cmp	r0, #1
   16490:	mvnne	r5, #0
   16494:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16498:	ldr	r3, [sp, #8]
   1649c:	mov	r2, r4
   164a0:	mov	r1, r7
   164a4:	mov	r0, r6
   164a8:	bl	15b34 <table_set_long@@Base>
   164ac:	mov	r5, #0
   164b0:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   164b4:	add	r2, sp, #8
   164b8:	ldr	r1, [pc, #704]	; 16780 <table_cell_from_buffer@@Base+0x638>
   164bc:	mov	r0, r5
   164c0:	bl	129cc <__isoc99_sscanf@plt>
   164c4:	cmp	r0, #1
   164c8:	mvnne	r5, #0
   164cc:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   164d0:	ldr	r3, [sp, #8]
   164d4:	mov	r2, r4
   164d8:	mov	r1, r7
   164dc:	mov	r0, r6
   164e0:	bl	15b5c <table_set_ulong@@Base>
   164e4:	mov	r5, #0
   164e8:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   164ec:	add	r2, sp, #8
   164f0:	ldr	r1, [pc, #636]	; 16774 <table_cell_from_buffer@@Base+0x62c>
   164f4:	mov	r0, r5
   164f8:	bl	129cc <__isoc99_sscanf@plt>
   164fc:	cmp	r0, #1
   16500:	mvnne	r5, #0
   16504:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16508:	ldrd	r2, [sp, #8]
   1650c:	strd	r2, [sp]
   16510:	mov	r2, r4
   16514:	mov	r1, r7
   16518:	mov	r0, r6
   1651c:	bl	15b84 <table_set_llong@@Base>
   16520:	mov	r5, #0
   16524:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16528:	add	r2, sp, #8
   1652c:	ldr	r1, [pc, #580]	; 16778 <table_cell_from_buffer@@Base+0x630>
   16530:	mov	r0, r5
   16534:	bl	129cc <__isoc99_sscanf@plt>
   16538:	cmp	r0, #1
   1653c:	mvnne	r5, #0
   16540:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16544:	ldrd	r2, [sp, #8]
   16548:	strd	r2, [sp]
   1654c:	mov	r2, r4
   16550:	mov	r1, r7
   16554:	mov	r0, r6
   16558:	bl	15ba4 <table_set_ullong@@Base>
   1655c:	mov	r5, #0
   16560:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16564:	add	r2, sp, #8
   16568:	ldr	r1, [pc, #532]	; 16784 <table_cell_from_buffer@@Base+0x63c>
   1656c:	mov	r0, r5
   16570:	bl	129cc <__isoc99_sscanf@plt>
   16574:	cmp	r0, #1
   16578:	mvnne	r5, #0
   1657c:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16580:	add	r3, sp, #8
   16584:	mov	r2, r4
   16588:	mov	r1, r7
   1658c:	mov	r0, r6
   16590:	bl	15c30 <table_set_string@@Base>
   16594:	mov	r5, #0
   16598:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1659c:	add	r2, sp, #8
   165a0:	ldr	r1, [pc, #480]	; 16788 <table_cell_from_buffer@@Base+0x640>
   165a4:	mov	r0, r5
   165a8:	bl	129cc <__isoc99_sscanf@plt>
   165ac:	cmp	r0, #1
   165b0:	mvnne	r5, #0
   165b4:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   165b8:	vldr	s0, [sp, #8]
   165bc:	mov	r2, r4
   165c0:	mov	r1, r7
   165c4:	mov	r0, r6
   165c8:	bl	15bc4 <table_set_float@@Base>
   165cc:	mov	r5, #0
   165d0:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   165d4:	add	r2, sp, #8
   165d8:	ldr	r1, [pc, #428]	; 1678c <table_cell_from_buffer@@Base+0x644>
   165dc:	mov	r0, r5
   165e0:	bl	129cc <__isoc99_sscanf@plt>
   165e4:	cmp	r0, #1
   165e8:	mvnne	r5, #0
   165ec:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   165f0:	vldr	d0, [sp, #8]
   165f4:	mov	r2, r4
   165f8:	mov	r1, r7
   165fc:	mov	r0, r6
   16600:	bl	15be8 <table_set_double@@Base>
   16604:	mov	r5, #0
   16608:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1660c:	add	r2, sp, #8
   16610:	ldr	r1, [pc, #376]	; 16790 <table_cell_from_buffer@@Base+0x648>
   16614:	mov	r0, r5
   16618:	bl	129cc <__isoc99_sscanf@plt>
   1661c:	cmp	r0, #1
   16620:	mvnne	r5, #0
   16624:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16628:	vldr	d0, [sp, #8]
   1662c:	mov	r2, r4
   16630:	mov	r1, r7
   16634:	mov	r0, r6
   16638:	bl	15c0c <table_set_ldouble@@Base>
   1663c:	mov	r5, #0
   16640:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16644:	add	r2, sp, #8
   16648:	ldr	r1, [pc, #268]	; 1675c <table_cell_from_buffer@@Base+0x614>
   1664c:	mov	r0, r5
   16650:	bl	129cc <__isoc99_sscanf@plt>
   16654:	cmp	r0, #1
   16658:	mvnne	r5, #0
   1665c:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   16660:	ldr	r5, [sp, #8]
   16664:	cmp	r5, #0
   16668:	beq	16688 <table_cell_from_buffer@@Base+0x540>
   1666c:	mov	r3, #1
   16670:	mov	r2, r4
   16674:	mov	r1, r7
   16678:	mov	r0, r6
   1667c:	bl	1593c <table_set_bool@@Base>
   16680:	mov	r5, #0
   16684:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16688:	mov	r3, #0
   1668c:	mov	r2, r4
   16690:	mov	r1, r7
   16694:	mov	r0, r6
   16698:	bl	1593c <table_set_bool@@Base>
   1669c:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   166a0:	add	r2, sp, #8
   166a4:	ldr	r1, [pc, #232]	; 16794 <table_cell_from_buffer@@Base+0x64c>
   166a8:	mov	r0, r5
   166ac:	bl	129cc <__isoc99_sscanf@plt>
   166b0:	cmp	r0, #1
   166b4:	mvnne	r5, #0
   166b8:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   166bc:	ldrb	r3, [sp, #8]
   166c0:	mov	r2, r4
   166c4:	mov	r1, r7
   166c8:	mov	r0, r6
   166cc:	bl	15c4c <table_set_char@@Base>
   166d0:	mov	r5, #0
   166d4:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   166d8:	add	r2, sp, #8
   166dc:	ldr	r1, [pc, #176]	; 16794 <table_cell_from_buffer@@Base+0x64c>
   166e0:	mov	r0, r5
   166e4:	bl	129cc <__isoc99_sscanf@plt>
   166e8:	cmp	r0, #1
   166ec:	mvnne	r5, #0
   166f0:	bne	1672c <table_cell_from_buffer@@Base+0x5e4>
   166f4:	ldrb	r3, [sp, #8]
   166f8:	mov	r2, r4
   166fc:	mov	r1, r7
   16700:	mov	r0, r6
   16704:	bl	15c74 <table_set_uchar@@Base>
   16708:	mov	r5, #0
   1670c:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16710:	add	r2, sp, #8
   16714:	ldr	r1, [pc, #124]	; 16798 <table_cell_from_buffer@@Base+0x650>
   16718:	mov	r0, r5
   1671c:	bl	129cc <__isoc99_sscanf@plt>
   16720:	cmp	r0, #1
   16724:	mvnne	r5, #0
   16728:	beq	16738 <table_cell_from_buffer@@Base+0x5f0>
   1672c:	mov	r0, r5
   16730:	add	sp, sp, #268	; 0x10c
   16734:	pop	{r4, r5, r6, r7, pc}
   16738:	ldr	r3, [sp, #8]
   1673c:	mov	r2, r4
   16740:	mov	r1, r7
   16744:	mov	r0, r6
   16748:	bl	15c9c <table_set_ptr@@Base>
   1674c:	mov	r5, #0
   16750:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   16754:	mov	r5, #0
   16758:	b	1672c <table_cell_from_buffer@@Base+0x5e4>
   1675c:	andeq	r6, r1, r8, lsr fp
   16760:			; <UNDEFINED> instruction: 0x00016bbc
   16764:	strdeq	r6, [r1], -r8
   16768:	andeq	r6, r1, r0, lsl #24
   1676c:	ldrdeq	r6, [r1], -r0
   16770:	ldrdeq	r6, [r1], -r4
   16774:	andeq	r6, r1, r0, asr #23
   16778:	andeq	r6, r1, r8, asr #23
   1677c:	ldrdeq	r6, [r1], -r8
   16780:	ldrdeq	r6, [r1], -ip
   16784:	andeq	r6, r1, r0, ror #23
   16788:	andeq	r6, r1, r4, ror #23
   1678c:	andeq	r6, r1, r8, ror #23
   16790:	andeq	r6, r1, ip, ror #23
   16794:	strdeq	r6, [r1], -r0
   16798:	strdeq	r6, [r1], -r4

0001679c <table_get_cell_ptr@@Base>:
   1679c:	push	{r4, lr}
   167a0:	mov	r4, r2
   167a4:	bl	152c0 <table_get_row_ptr@@Base>
   167a8:	ldr	r0, [r0]
   167ac:	add	r0, r0, r4, lsl #2
   167b0:	pop	{r4, pc}

000167b4 <table_cell_init@@Base>:
   167b4:	push	{r4, lr}
   167b8:	bl	1679c <table_get_cell_ptr@@Base>
   167bc:	mov	r3, #0
   167c0:	str	r3, [r0]
   167c4:	pop	{r4, pc}

000167c8 <table_cell_destroy@@Base>:
   167c8:	push	{r4, r5, r6, lr}
   167cc:	mov	r5, r0
   167d0:	mov	r6, r1
   167d4:	mov	r4, r2
   167d8:	mov	r1, r2
   167dc:	bl	13714 <table_get_column_data_type@@Base>
   167e0:	cmp	r0, #23
   167e4:	popeq	{r4, r5, r6, pc}
   167e8:	mov	r2, r4
   167ec:	mov	r1, r6
   167f0:	mov	r0, r5
   167f4:	bl	1679c <table_get_cell_ptr@@Base>
   167f8:	ldr	r0, [r0]
   167fc:	cmp	r0, #0
   16800:	popeq	{r4, r5, r6, pc}
   16804:	bl	1296c <free@plt>
   16808:	pop	{r4, r5, r6, pc}

0001680c <table_cell_nullify@@Base>:
   1680c:	push	{r4, lr}
   16810:	bl	1679c <table_get_cell_ptr@@Base>
   16814:	mov	r4, r0
   16818:	ldr	r0, [r0]
   1681c:	cmp	r0, #0
   16820:	beq	16830 <table_cell_nullify@@Base+0x24>
   16824:	bl	1296c <free@plt>
   16828:	mov	r3, #0
   1682c:	str	r3, [r4]
   16830:	mov	r0, #0
   16834:	pop	{r4, pc}
   16838:	subs	r2, r1, #1
   1683c:	bxeq	lr
   16840:	bcc	16a18 <table_cell_nullify@@Base+0x20c>
   16844:	cmp	r0, r1
   16848:	bls	169fc <table_cell_nullify@@Base+0x1f0>
   1684c:	tst	r1, r2
   16850:	beq	16a08 <table_cell_nullify@@Base+0x1fc>
   16854:	clz	r3, r0
   16858:	clz	r2, r1
   1685c:	sub	r3, r2, r3
   16860:	rsbs	r3, r3, #31
   16864:	addne	r3, r3, r3, lsl #1
   16868:	mov	r2, #0
   1686c:	addne	pc, pc, r3, lsl #2
   16870:	nop			; (mov r0, r0)
   16874:	cmp	r0, r1, lsl #31
   16878:	adc	r2, r2, r2
   1687c:	subcs	r0, r0, r1, lsl #31
   16880:	cmp	r0, r1, lsl #30
   16884:	adc	r2, r2, r2
   16888:	subcs	r0, r0, r1, lsl #30
   1688c:	cmp	r0, r1, lsl #29
   16890:	adc	r2, r2, r2
   16894:	subcs	r0, r0, r1, lsl #29
   16898:	cmp	r0, r1, lsl #28
   1689c:	adc	r2, r2, r2
   168a0:	subcs	r0, r0, r1, lsl #28
   168a4:	cmp	r0, r1, lsl #27
   168a8:	adc	r2, r2, r2
   168ac:	subcs	r0, r0, r1, lsl #27
   168b0:	cmp	r0, r1, lsl #26
   168b4:	adc	r2, r2, r2
   168b8:	subcs	r0, r0, r1, lsl #26
   168bc:	cmp	r0, r1, lsl #25
   168c0:	adc	r2, r2, r2
   168c4:	subcs	r0, r0, r1, lsl #25
   168c8:	cmp	r0, r1, lsl #24
   168cc:	adc	r2, r2, r2
   168d0:	subcs	r0, r0, r1, lsl #24
   168d4:	cmp	r0, r1, lsl #23
   168d8:	adc	r2, r2, r2
   168dc:	subcs	r0, r0, r1, lsl #23
   168e0:	cmp	r0, r1, lsl #22
   168e4:	adc	r2, r2, r2
   168e8:	subcs	r0, r0, r1, lsl #22
   168ec:	cmp	r0, r1, lsl #21
   168f0:	adc	r2, r2, r2
   168f4:	subcs	r0, r0, r1, lsl #21
   168f8:	cmp	r0, r1, lsl #20
   168fc:	adc	r2, r2, r2
   16900:	subcs	r0, r0, r1, lsl #20
   16904:	cmp	r0, r1, lsl #19
   16908:	adc	r2, r2, r2
   1690c:	subcs	r0, r0, r1, lsl #19
   16910:	cmp	r0, r1, lsl #18
   16914:	adc	r2, r2, r2
   16918:	subcs	r0, r0, r1, lsl #18
   1691c:	cmp	r0, r1, lsl #17
   16920:	adc	r2, r2, r2
   16924:	subcs	r0, r0, r1, lsl #17
   16928:	cmp	r0, r1, lsl #16
   1692c:	adc	r2, r2, r2
   16930:	subcs	r0, r0, r1, lsl #16
   16934:	cmp	r0, r1, lsl #15
   16938:	adc	r2, r2, r2
   1693c:	subcs	r0, r0, r1, lsl #15
   16940:	cmp	r0, r1, lsl #14
   16944:	adc	r2, r2, r2
   16948:	subcs	r0, r0, r1, lsl #14
   1694c:	cmp	r0, r1, lsl #13
   16950:	adc	r2, r2, r2
   16954:	subcs	r0, r0, r1, lsl #13
   16958:	cmp	r0, r1, lsl #12
   1695c:	adc	r2, r2, r2
   16960:	subcs	r0, r0, r1, lsl #12
   16964:	cmp	r0, r1, lsl #11
   16968:	adc	r2, r2, r2
   1696c:	subcs	r0, r0, r1, lsl #11
   16970:	cmp	r0, r1, lsl #10
   16974:	adc	r2, r2, r2
   16978:	subcs	r0, r0, r1, lsl #10
   1697c:	cmp	r0, r1, lsl #9
   16980:	adc	r2, r2, r2
   16984:	subcs	r0, r0, r1, lsl #9
   16988:	cmp	r0, r1, lsl #8
   1698c:	adc	r2, r2, r2
   16990:	subcs	r0, r0, r1, lsl #8
   16994:	cmp	r0, r1, lsl #7
   16998:	adc	r2, r2, r2
   1699c:	subcs	r0, r0, r1, lsl #7
   169a0:	cmp	r0, r1, lsl #6
   169a4:	adc	r2, r2, r2
   169a8:	subcs	r0, r0, r1, lsl #6
   169ac:	cmp	r0, r1, lsl #5
   169b0:	adc	r2, r2, r2
   169b4:	subcs	r0, r0, r1, lsl #5
   169b8:	cmp	r0, r1, lsl #4
   169bc:	adc	r2, r2, r2
   169c0:	subcs	r0, r0, r1, lsl #4
   169c4:	cmp	r0, r1, lsl #3
   169c8:	adc	r2, r2, r2
   169cc:	subcs	r0, r0, r1, lsl #3
   169d0:	cmp	r0, r1, lsl #2
   169d4:	adc	r2, r2, r2
   169d8:	subcs	r0, r0, r1, lsl #2
   169dc:	cmp	r0, r1, lsl #1
   169e0:	adc	r2, r2, r2
   169e4:	subcs	r0, r0, r1, lsl #1
   169e8:	cmp	r0, r1
   169ec:	adc	r2, r2, r2
   169f0:	subcs	r0, r0, r1
   169f4:	mov	r0, r2
   169f8:	bx	lr
   169fc:	moveq	r0, #1
   16a00:	movne	r0, #0
   16a04:	bx	lr
   16a08:	clz	r2, r1
   16a0c:	rsb	r2, r2, #31
   16a10:	lsr	r0, r0, r2
   16a14:	bx	lr
   16a18:	cmp	r0, #0
   16a1c:	mvnne	r0, #0
   16a20:	b	16a44 <table_cell_nullify@@Base+0x238>
   16a24:	cmp	r1, #0
   16a28:	beq	16a18 <table_cell_nullify@@Base+0x20c>
   16a2c:	push	{r0, r1, lr}
   16a30:	bl	16838 <table_cell_nullify@@Base+0x2c>
   16a34:	pop	{r1, r2, lr}
   16a38:	mul	r3, r2, r0
   16a3c:	sub	r1, r1, r3
   16a40:	bx	lr
   16a44:	push	{r1, lr}
   16a48:	mov	r0, #8
   16a4c:	bl	12948 <raise@plt>
   16a50:	pop	{r1, pc}

00016a54 <__libc_csu_init@@Base>:
   16a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a58:	mov	r7, r0
   16a5c:	ldr	r6, [pc, #72]	; 16aac <__libc_csu_init@@Base+0x58>
   16a60:	ldr	r5, [pc, #72]	; 16ab0 <__libc_csu_init@@Base+0x5c>
   16a64:	add	r6, pc, r6
   16a68:	add	r5, pc, r5
   16a6c:	sub	r6, r6, r5
   16a70:	mov	r8, r1
   16a74:	mov	r9, r2
   16a78:	bl	12928 <raise@plt-0x20>
   16a7c:	asrs	r6, r6, #2
   16a80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a84:	mov	r4, #0
   16a88:	add	r4, r4, #1
   16a8c:	ldr	r3, [r5], #4
   16a90:	mov	r2, r9
   16a94:	mov	r1, r8
   16a98:	mov	r0, r7
   16a9c:	blx	r3
   16aa0:	cmp	r6, r4
   16aa4:	bne	16a88 <__libc_csu_init@@Base+0x34>
   16aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16aac:	andeq	r0, r1, r4, lsr #9
   16ab0:	muleq	r1, ip, r4

00016ab4 <__libc_csu_fini@@Base>:
   16ab4:	bx	lr

Disassembly of section .fini:

00016ab8 <.fini>:
   16ab8:	push	{r3, lr}
   16abc:	pop	{r3, pc}
