
../repos/charybdis/modules/.libs/m_dline.so:     file format elf32-littlearm


Disassembly of section .init:

00000b18 <_init>:
 b18:	push	{r3, lr}
 b1c:	bl	cdc <call_weak_fn>
 b20:	pop	{r3, pc}

Disassembly of section .plt:

00000b24 <.plt>:
 b24:	push	{lr}		; (str lr, [sp, #-4]!)
 b28:	ldr	lr, [pc, #4]	; b34 <.plt+0x10>
 b2c:	add	lr, pc, lr
 b30:	ldr	pc, [lr, #8]!
 b34:	.word	0x000124cc

00000b38 <make_conf@plt>:
 b38:	add	ip, pc, #0, 12
 b3c:	add	ip, ip, #73728	; 0x12000
 b40:	ldr	pc, [ip, #1228]!	; 0x4cc

00000b44 <parse_netmask_strict@plt>:
 b44:	add	ip, pc, #0, 12
 b48:	add	ip, ip, #73728	; 0x12000
 b4c:	ldr	pc, [ip, #1220]!	; 0x4c4

00000b50 <rb_current_time@plt>:
 b50:	add	ip, pc, #0, 12
 b54:	add	ip, ip, #73728	; 0x12000
 b58:	ldr	pc, [ip, #1212]!	; 0x4bc

00000b5c <sendto_match_servs@plt>:
 b5c:	add	ip, pc, #0, 12
 b60:	add	ip, ip, #73728	; 0x12000
 b64:	ldr	pc, [ip, #1204]!	; 0x4b4

00000b68 <__cxa_finalize@plt>:
 b68:	add	ip, pc, #0, 12
 b6c:	add	ip, ip, #73728	; 0x12000
 b70:	ldr	pc, [ip, #1196]!	; 0x4ac

00000b74 <strtol@plt>:
 b74:	add	ip, pc, #0, 12
 b78:	add	ip, ip, #73728	; 0x12000
 b7c:	ldr	pc, [ip, #1188]!	; 0x4a4

00000b80 <sendto_one@plt>:
 b80:	add	ip, pc, #0, 12
 b84:	add	ip, ip, #73728	; 0x12000
 b88:	ldr	pc, [ip, #1180]!	; 0x49c

00000b8c <rb_outofmemory@plt>:
 b8c:	add	ip, pc, #0, 12
 b90:	add	ip, ip, #73728	; 0x12000
 b94:	ldr	pc, [ip, #1172]!	; 0x494

00000b98 <parse_netmask@plt>:
 b98:	add	ip, pc, #0, 12
 b9c:	add	ip, ip, #73728	; 0x12000
 ba0:	ldr	pc, [ip, #1164]!	; 0x48c

00000ba4 <sendto_realops_snomask@plt>:
 ba4:	add	ip, pc, #0, 12
 ba8:	add	ip, ip, #73728	; 0x12000
 bac:	ldr	pc, [ip, #1156]!	; 0x484

00000bb0 <bandb_add@plt>:
 bb0:	add	ip, pc, #0, 12
 bb4:	add	ip, ip, #73728	; 0x12000
 bb8:	ldr	pc, [ip, #1148]!	; 0x47c

00000bbc <get_oper_name@plt>:
 bbc:	add	ip, pc, #0, 12
 bc0:	add	ip, ip, #73728	; 0x12000
 bc4:	ldr	pc, [ip, #1140]!	; 0x474

00000bc8 <rb_free_rb_dlink_node@plt>:
 bc8:	add	ip, pc, #0, 12
 bcc:	add	ip, ip, #73728	; 0x12000
 bd0:	ldr	pc, [ip, #1132]!	; 0x46c

00000bd4 <operhash_add@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1124]!	; 0x464

00000be0 <strcpy@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1116]!	; 0x45c

00000bec <add_temp_dline@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1108]!	; 0x454

00000bf8 <rb_set_time@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #1100]!	; 0x44c

00000c04 <malloc@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #73728	; 0x12000
 c0c:	ldr	pc, [ip, #1092]!	; 0x444

00000c10 <add_conf_by_address@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #73728	; 0x12000
 c18:	ldr	pc, [ip, #1084]!	; 0x43c

00000c1c <__gmon_start__@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #73728	; 0x12000
 c24:	ldr	pc, [ip, #1076]!	; 0x434

00000c28 <strlen@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #73728	; 0x12000
 c30:	ldr	pc, [ip, #1068]!	; 0x42c

00000c34 <strchr@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #73728	; 0x12000
 c3c:	ldr	pc, [ip, #1060]!	; 0x424

00000c40 <delete_one_address_conf@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #73728	; 0x12000
 c48:	ldr	pc, [ip, #1052]!	; 0x41c

00000c4c <ilog@plt>:
 c4c:	add	ip, pc, #0, 12
 c50:	add	ip, ip, #73728	; 0x12000
 c54:	ldr	pc, [ip, #1044]!	; 0x414

00000c58 <match@plt>:
 c58:	add	ip, pc, #0, 12
 c5c:	add	ip, ip, #73728	; 0x12000
 c60:	ldr	pc, [ip, #1036]!	; 0x40c

00000c64 <valid_temp_time@plt>:
 c64:	add	ip, pc, #0, 12
 c68:	add	ip, ip, #73728	; 0x12000
 c6c:	ldr	pc, [ip, #1028]!	; 0x404

00000c70 <check_dlines@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #73728	; 0x12000
 c78:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c7c <sendto_one_notice@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #73728	; 0x12000
 c84:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c88 <bandb_del@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #73728	; 0x12000
 c90:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c94 <find_exact_conf_by_address@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #73728	; 0x12000
 c9c:	ldr	pc, [ip, #996]!	; 0x3e4

00000ca0 <rb_strlcpy@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #73728	; 0x12000
 ca8:	ldr	pc, [ip, #988]!	; 0x3dc

00000cac <find_shared_conf@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #73728	; 0x12000
 cb4:	ldr	pc, [ip, #980]!	; 0x3d4

00000cb8 <privilegeset_in_set@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #73728	; 0x12000
 cc0:	ldr	pc, [ip, #972]!	; 0x3cc

00000cc4 <irccmp@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #964]!	; 0x3c4

00000cd0 <find_dline@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #73728	; 0x12000
 cd8:	ldr	pc, [ip, #956]!	; 0x3bc

Disassembly of section .text:

00000cdc <call_weak_fn>:
     cdc:	ldr	r3, [pc, #20]	; cf8 <call_weak_fn+0x1c>
     ce0:	ldr	r2, [pc, #20]	; cfc <call_weak_fn+0x20>
     ce4:	add	r3, pc, r3
     ce8:	ldr	r2, [r3, r2]
     cec:	cmp	r2, #0
     cf0:	bxeq	lr
     cf4:	b	c1c <__gmon_start__@plt>
     cf8:	.word	0x00012314
     cfc:	.word	0x000000a0

00000d00 <deregister_tm_clones>:
     d00:	ldr	r0, [pc, #44]	; d34 <deregister_tm_clones+0x34>
     d04:	ldr	r3, [pc, #44]	; d38 <deregister_tm_clones+0x38>
     d08:	add	r0, pc, r0
     d0c:	add	r3, pc, r3
     d10:	cmp	r3, r0
     d14:	ldr	r3, [pc, #32]	; d3c <deregister_tm_clones+0x3c>
     d18:	add	r3, pc, r3
     d1c:	bxeq	lr
     d20:	ldr	r2, [pc, #24]	; d40 <deregister_tm_clones+0x40>
     d24:	ldr	r3, [r3, r2]
     d28:	cmp	r3, #0
     d2c:	bxeq	lr
     d30:	bx	r3
     d34:	.word	0x00012468
     d38:	.word	0x00012464
     d3c:	.word	0x000122e0
     d40:	.word	0x0000009c

00000d44 <register_tm_clones>:
     d44:	ldr	r0, [pc, #56]	; d84 <register_tm_clones+0x40>
     d48:	ldr	r3, [pc, #56]	; d88 <register_tm_clones+0x44>
     d4c:	add	r0, pc, r0
     d50:	add	r3, pc, r3
     d54:	sub	r1, r3, r0
     d58:	ldr	r3, [pc, #44]	; d8c <register_tm_clones+0x48>
     d5c:	asr	r1, r1, #2
     d60:	add	r3, pc, r3
     d64:	add	r1, r1, r1, lsr #31
     d68:	asrs	r1, r1, #1
     d6c:	bxeq	lr
     d70:	ldr	r2, [pc, #24]	; d90 <register_tm_clones+0x4c>
     d74:	ldr	r3, [r3, r2]
     d78:	cmp	r3, #0
     d7c:	bxeq	lr
     d80:	bx	r3
     d84:	.word	0x00012424
     d88:	.word	0x00012420
     d8c:	.word	0x00012298
     d90:	.word	0x000000a8

00000d94 <__do_global_dtors_aux>:
     d94:	ldr	r3, [pc, #76]	; de8 <__do_global_dtors_aux+0x54>
     d98:	ldr	r2, [pc, #76]	; dec <__do_global_dtors_aux+0x58>
     d9c:	add	r3, pc, r3
     da0:	add	r2, pc, r2
     da4:	ldrb	r3, [r3]
     da8:	cmp	r3, #0
     dac:	bxne	lr
     db0:	ldr	r3, [pc, #56]	; df0 <__do_global_dtors_aux+0x5c>
     db4:	push	{r4, lr}
     db8:	ldr	r3, [r2, r3]
     dbc:	cmp	r3, #0
     dc0:	beq	dd0 <__do_global_dtors_aux+0x3c>
     dc4:	ldr	r3, [pc, #40]	; df4 <__do_global_dtors_aux+0x60>
     dc8:	ldr	r0, [pc, r3]
     dcc:	bl	b68 <__cxa_finalize@plt>
     dd0:	bl	d00 <deregister_tm_clones>
     dd4:	ldr	r3, [pc, #28]	; df8 <__do_global_dtors_aux+0x64>
     dd8:	mov	r2, #1
     ddc:	add	r3, pc, r3
     de0:	strb	r2, [r3]
     de4:	pop	{r4, pc}
     de8:	.word	0x000123d4
     dec:	.word	0x00012258
     df0:	.word	0x00000098
     df4:	.word	0x000122e8
     df8:	.word	0x00012394

00000dfc <frame_dummy>:
     dfc:	b	d44 <register_tm_clones>

00000e00 <me_dline>:
     e00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
     e04:	add	fp, sp, #24
     e08:	ldr	r6, [fp, #8]
     e0c:	mov	r4, r2
     e10:	mov	r1, #0
     e14:	mov	r2, #10
     e18:	ldr	r0, [r6, #4]
     e1c:	bl	b74 <strtol@plt>
     e20:	mov	r5, r0
     e24:	ldrh	r0, [r4, #80]	; 0x50
     e28:	cmp	r0, #64	; 0x40
     e2c:	bne	ea8 <me_dline+0xa8>
     e30:	ldr	r0, [r4, #24]
     e34:	cmp	r0, #0
     e38:	beq	ea8 <me_dline+0xa8>
     e3c:	ldr	r2, [r4, #32]
     e40:	cmp	r5, #0
     e44:	mov	r3, #4096	; 0x1000
     e48:	add	r0, r4, #152	; 0x98
     e4c:	add	r1, r4, #163	; 0xa3
     e50:	movwgt	r3, #2048	; 0x800
     e54:	add	r2, r2, #88	; 0x58
     e58:	bl	cac <find_shared_conf@plt>
     e5c:	cmp	r0, #0
     e60:	beq	ea8 <me_dline+0xa8>
     e64:	ldr	r7, [r6, #12]
     e68:	ldr	r8, [r6, #8]
     e6c:	mov	r0, r7
     e70:	bl	c28 <strlen@plt>
     e74:	add	r0, r0, #8
     e78:	bic	r0, r0, #7
     e7c:	sub	r6, sp, r0
     e80:	mov	sp, r6
     e84:	mov	r0, r6
     e88:	mov	r1, r7
     e8c:	bl	be0 <strcpy@plt>
     e90:	mov	r0, r4
     e94:	mov	r1, r8
     e98:	mov	r2, r5
     e9c:	mov	r3, r6
     ea0:	bl	1324 <apply_dline>
     ea4:	bl	c70 <check_dlines@plt>
     ea8:	sub	sp, fp, #24
     eac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00000eb0 <mo_dline>:
     eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     eb4:	add	fp, sp, #28
     eb8:	sub	sp, sp, #92	; 0x5c
     ebc:	ldr	r0, [pc, #620]	; 1130 <mo_dline+0x280>
     ec0:	mov	r4, r2
     ec4:	add	r0, pc, r0
     ec8:	vldr	d16, [r0]
     ecc:	mov	r0, #110	; 0x6e
     ed0:	strh	r0, [fp, #-40]	; 0xffffffd8
     ed4:	vstr	d16, [fp, #-48]	; 0xffffffd0
     ed8:	ldr	r0, [r2, #24]
     edc:	cmp	r0, #0
     ee0:	beq	f50 <mo_dline+0xa0>
     ee4:	ldr	r0, [r0, #36]	; 0x24
     ee8:	cmp	r0, #0
     eec:	beq	f50 <mo_dline+0xa0>
     ef0:	ldr	r1, [pc, #572]	; 1134 <mo_dline+0x284>
     ef4:	mov	r7, r3
     ef8:	add	r1, pc, r1
     efc:	bl	cb8 <privilegeset_in_set@plt>
     f00:	cmp	r0, #0
     f04:	beq	f50 <mo_dline+0xa0>
     f08:	ldr	r9, [fp, #8]
     f0c:	ldr	r0, [r9, #4]
     f10:	bl	c64 <valid_temp_time@plt>
     f14:	cmn	r0, #1
     f18:	mov	r6, #1
     f1c:	mov	sl, r0
     f20:	sub	r0, fp, #112	; 0x70
     f24:	mov	r2, #64	; 0x40
     f28:	movwgt	r6, #2
     f2c:	ldr	r5, [r9, r6, lsl #2]
     f30:	mov	r1, r5
     f34:	bl	ca0 <rb_strlcpy@plt>
     f38:	ldrb	r0, [r5]
     f3c:	cmp	r0, #58	; 0x3a
     f40:	bne	f8c <mo_dline+0xdc>
     f44:	ldr	r1, [pc, #504]	; 1144 <mo_dline+0x294>
     f48:	add	r1, pc, r1
     f4c:	b	1040 <mo_dline+0x190>
     f50:	sub	sp, sp, #8
     f54:	ldr	r0, [pc, #476]	; 1138 <mo_dline+0x288>
     f58:	add	r0, pc, r0
     f5c:	str	r0, [sp]
     f60:	add	r3, r4, #88	; 0x58
     f64:	ldr	r0, [pc, #464]	; 113c <mo_dline+0x28c>
     f68:	ldr	r0, [pc, r0]
     f6c:	ldr	r1, [pc, #460]	; 1140 <mo_dline+0x290>
     f70:	add	r2, r0, #88	; 0x58
     f74:	add	r1, pc, r1
     f78:	mov	r0, r4
     f7c:	bl	b80 <sendto_one@plt>
     f80:	add	sp, sp, #8
     f84:	sub	sp, fp, #28
     f88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     f8c:	mov	r0, r5
     f90:	mov	r1, #0
     f94:	mov	r2, #0
     f98:	bl	b44 <parse_netmask_strict@plt>
     f9c:	orr	r0, r0, #1
     fa0:	cmp	r0, #3
     fa4:	bne	1038 <mo_dline+0x188>
     fa8:	mov	r0, #0
     fac:	add	r8, r6, #1
     fb0:	str	r0, [fp, #-116]	; 0xffffff8c
     fb4:	add	r0, r6, #3
     fb8:	cmp	r0, r7
     fbc:	bgt	fdc <mo_dline+0x12c>
     fc0:	str	r0, [fp, #-120]	; 0xffffff88
     fc4:	ldr	r0, [r9, r8, lsl #2]
     fc8:	ldr	r1, [pc, #380]	; 114c <mo_dline+0x29c>
     fcc:	add	r1, pc, r1
     fd0:	bl	cc4 <irccmp@plt>
     fd4:	cmp	r0, #0
     fd8:	beq	1054 <mo_dline+0x1a4>
     fdc:	sub	r1, fp, #48	; 0x30
     fe0:	cmp	r8, r7
     fe4:	bge	109c <mo_dline+0x1ec>
     fe8:	ldr	r8, [r9, r8, lsl #2]
     fec:	cmp	r8, #0
     ff0:	beq	109c <mo_dline+0x1ec>
     ff4:	ldrb	r0, [r8]
     ff8:	ldr	r6, [fp, #-116]	; 0xffffff8c
     ffc:	mov	r7, r1
    1000:	cmp	r0, #0
    1004:	beq	10a4 <mo_dline+0x1f4>
    1008:	mov	r0, r8
    100c:	bl	c28 <strlen@plt>
    1010:	add	r0, r0, #8
    1014:	bic	r0, r0, #7
    1018:	sub	r7, sp, r0
    101c:	mov	sp, r7
    1020:	mov	r0, r7
    1024:	mov	r1, r8
    1028:	bl	be0 <strcpy@plt>
    102c:	cmp	r6, #0
    1030:	bne	10ac <mo_dline+0x1fc>
    1034:	b	1100 <mo_dline+0x250>
    1038:	ldr	r1, [pc, #264]	; 1148 <mo_dline+0x298>
    103c:	add	r1, pc, r1
    1040:	mov	r0, r4
    1044:	mov	r2, r5
    1048:	bl	c7c <sendto_one_notice@plt>
    104c:	sub	sp, fp, #28
    1050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1054:	ldr	r0, [r4, #24]
    1058:	cmp	r0, #0
    105c:	beq	1120 <mo_dline+0x270>
    1060:	ldr	r0, [r0, #36]	; 0x24
    1064:	cmp	r0, #0
    1068:	beq	1120 <mo_dline+0x270>
    106c:	ldr	r1, [pc, #220]	; 1150 <mo_dline+0x2a0>
    1070:	add	r1, pc, r1
    1074:	bl	cb8 <privilegeset_in_set@plt>
    1078:	cmp	r0, #0
    107c:	beq	1120 <mo_dline+0x270>
    1080:	add	r0, r9, r6, lsl #2
    1084:	ldr	r8, [fp, #-120]	; 0xffffff88
    1088:	ldr	r0, [r0, #8]
    108c:	str	r0, [fp, #-116]	; 0xffffff8c
    1090:	sub	r1, fp, #48	; 0x30
    1094:	cmp	r8, r7
    1098:	blt	fe8 <mo_dline+0x138>
    109c:	ldr	r6, [fp, #-116]	; 0xffffff8c
    10a0:	mov	r7, r1
    10a4:	cmp	r6, #0
    10a8:	beq	1100 <mo_dline+0x250>
    10ac:	ldr	r0, [pc, #164]	; 1158 <mo_dline+0x2a8>
    10b0:	ldr	r0, [pc, r0]
    10b4:	ldr	r2, [r0]
    10b8:	sub	sp, sp, #24
    10bc:	ldr	r0, [pc, #152]	; 115c <mo_dline+0x2ac>
    10c0:	mov	r1, r6
    10c4:	mov	r3, #0
    10c8:	add	r0, pc, r0
    10cc:	stm	sp, {r0, r6, sl}
    10d0:	mov	r0, r4
    10d4:	str	r5, [sp, #12]
    10d8:	str	r7, [sp, #16]
    10dc:	bl	b5c <sendto_match_servs@plt>
    10e0:	add	sp, sp, #24
    10e4:	ldr	r0, [pc, #116]	; 1160 <mo_dline+0x2b0>
    10e8:	ldr	r0, [pc, r0]
    10ec:	add	r1, r0, #88	; 0x58
    10f0:	mov	r0, r6
    10f4:	bl	c58 <match@plt>
    10f8:	cmp	r0, #0
    10fc:	beq	1118 <mo_dline+0x268>
    1100:	mov	r0, r4
    1104:	mov	r1, r5
    1108:	mov	r2, sl
    110c:	mov	r3, r7
    1110:	bl	1324 <apply_dline>
    1114:	bl	c70 <check_dlines@plt>
    1118:	sub	sp, fp, #28
    111c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1120:	sub	sp, sp, #8
    1124:	ldr	r0, [pc, #40]	; 1154 <mo_dline+0x2a4>
    1128:	add	r0, pc, r0
    112c:	b	f5c <mo_dline+0xac>
    1130:	.word	0x000010fc
    1134:	.word	0x00000cc0
    1138:	.word	0x00000c65
    113c:	.word	0x0001213c
    1140:	.word	0x00000c4f
    1144:	.word	0x00000ca2
    1148:	.word	0x00000bdc
    114c:	.word	0x00000c7f
    1150:	.word	0x00000bde
    1154:	.word	0x00000b2b
    1158:	.word	0x00011ff8
    115c:	.word	0x00000b95
    1160:	.word	0x00011fbc

00001164 <me_undline>:
    1164:	push	{r4, r5, fp, lr}
    1168:	add	fp, sp, #8
    116c:	ldrh	r0, [r2, #80]	; 0x50
    1170:	cmp	r0, #64	; 0x40
    1174:	bne	11bc <me_undline+0x58>
    1178:	ldr	r0, [r2, #24]
    117c:	mov	r4, r2
    1180:	cmp	r0, #0
    1184:	popeq	{r4, r5, fp, pc}
    1188:	ldr	r2, [r4, #32]
    118c:	ldr	r5, [fp, #8]
    1190:	add	r0, r4, #152	; 0x98
    1194:	add	r1, r4, #163	; 0xa3
    1198:	mov	r3, #8192	; 0x2000
    119c:	add	r2, r2, #88	; 0x58
    11a0:	bl	cac <find_shared_conf@plt>
    11a4:	cmp	r0, #0
    11a8:	beq	11bc <me_undline+0x58>
    11ac:	ldr	r1, [r5, #4]
    11b0:	mov	r0, r4
    11b4:	pop	{r4, r5, fp, lr}
    11b8:	b	1894 <apply_undline>
    11bc:	pop	{r4, r5, fp, pc}

000011c0 <mo_undline>:
    11c0:	push	{r4, r5, r6, r7, fp, lr}
    11c4:	add	fp, sp, #16
    11c8:	sub	sp, sp, #16
    11cc:	ldr	r0, [r2, #24]
    11d0:	mov	r4, r2
    11d4:	cmp	r0, #0
    11d8:	beq	123c <mo_undline+0x7c>
    11dc:	ldr	r0, [r0, #36]	; 0x24
    11e0:	cmp	r0, #0
    11e4:	beq	123c <mo_undline+0x7c>
    11e8:	ldr	r7, [fp, #8]
    11ec:	ldr	r1, [pc, #264]	; 12fc <mo_undline+0x13c>
    11f0:	mov	r6, r3
    11f4:	add	r1, pc, r1
    11f8:	bl	cb8 <privilegeset_in_set@plt>
    11fc:	cmp	r0, #0
    1200:	beq	123c <mo_undline+0x7c>
    1204:	ldr	r5, [r7, #4]
    1208:	cmp	r6, #4
    120c:	blt	1228 <mo_undline+0x68>
    1210:	ldr	r0, [r7, #8]
    1214:	ldr	r1, [pc, #240]	; 130c <mo_undline+0x14c>
    1218:	add	r1, pc, r1
    121c:	bl	cc4 <irccmp@plt>
    1220:	cmp	r0, #0
    1224:	beq	1270 <mo_undline+0xb0>
    1228:	mov	r0, r4
    122c:	mov	r1, r5
    1230:	sub	sp, fp, #16
    1234:	pop	{r4, r5, r6, r7, fp, lr}
    1238:	b	1894 <apply_undline>
    123c:	ldr	r0, [pc, #188]	; 1300 <mo_undline+0x140>
    1240:	add	r0, pc, r0
    1244:	str	r0, [sp]
    1248:	add	r3, r4, #88	; 0x58
    124c:	ldr	r0, [pc, #176]	; 1304 <mo_undline+0x144>
    1250:	ldr	r0, [pc, r0]
    1254:	ldr	r1, [pc, #172]	; 1308 <mo_undline+0x148>
    1258:	add	r2, r0, #88	; 0x58
    125c:	add	r1, pc, r1
    1260:	mov	r0, r4
    1264:	bl	b80 <sendto_one@plt>
    1268:	sub	sp, fp, #16
    126c:	pop	{r4, r5, r6, r7, fp, pc}
    1270:	ldr	r0, [r4, #24]
    1274:	cmp	r0, #0
    1278:	beq	12f0 <mo_undline+0x130>
    127c:	ldr	r0, [r0, #36]	; 0x24
    1280:	cmp	r0, #0
    1284:	beq	12f0 <mo_undline+0x130>
    1288:	ldr	r1, [pc, #128]	; 1310 <mo_undline+0x150>
    128c:	add	r1, pc, r1
    1290:	bl	cb8 <privilegeset_in_set@plt>
    1294:	cmp	r0, #0
    1298:	beq	12f0 <mo_undline+0x130>
    129c:	ldr	r0, [pc, #116]	; 1318 <mo_undline+0x158>
    12a0:	mov	r3, #0
    12a4:	ldr	r0, [pc, r0]
    12a8:	ldr	r6, [r7, #12]
    12ac:	ldr	r2, [r0]
    12b0:	ldr	r0, [pc, #100]	; 131c <mo_undline+0x15c>
    12b4:	mov	r1, r6
    12b8:	add	r0, pc, r0
    12bc:	stm	sp, {r0, r6}
    12c0:	mov	r0, r4
    12c4:	str	r5, [sp, #8]
    12c8:	bl	b5c <sendto_match_servs@plt>
    12cc:	ldr	r0, [pc, #76]	; 1320 <mo_undline+0x160>
    12d0:	ldr	r0, [pc, r0]
    12d4:	add	r1, r0, #88	; 0x58
    12d8:	mov	r0, r6
    12dc:	bl	c58 <match@plt>
    12e0:	cmp	r0, #0
    12e4:	bne	1228 <mo_undline+0x68>
    12e8:	sub	sp, fp, #16
    12ec:	pop	{r4, r5, r6, r7, fp, pc}
    12f0:	ldr	r0, [pc, #28]	; 1314 <mo_undline+0x154>
    12f4:	add	r0, pc, r0
    12f8:	b	1244 <mo_undline+0x84>
    12fc:	.word	0x000009c4
    1300:	.word	0x00000c5b
    1304:	.word	0x00011e54
    1308:	.word	0x00000967
    130c:	.word	0x00000a33
    1310:	.word	0x000009c2
    1314:	.word	0x0000095f
    1318:	.word	0x00011e04
    131c:	.word	0x00000beb
    1320:	.word	0x00011dd4

00001324 <apply_dline>:
    1324:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1328:	add	fp, sp, #24
    132c:	sub	sp, sp, #152	; 0x98
    1330:	mov	r7, r1
    1334:	mov	r8, r2
    1338:	mov	r4, r0
    133c:	add	r1, sp, #24
    1340:	add	r2, sp, #20
    1344:	mov	r9, r3
    1348:	mov	r0, r7
    134c:	bl	b44 <parse_netmask_strict@plt>
    1350:	orr	r1, r0, #1
    1354:	cmp	r1, #3
    1358:	bne	13e4 <apply_dline+0xc0>
    135c:	ldr	r1, [r4, #24]
    1360:	cmp	r0, #3
    1364:	mov	r5, #2
    1368:	movweq	r5, #10
    136c:	cmp	r1, #0
    1370:	beq	140c <apply_dline+0xe8>
    1374:	ldr	r0, [r1, #36]	; 0x24
    1378:	cmp	r0, #0
    137c:	beq	13a0 <apply_dline+0x7c>
    1380:	ldr	r1, [pc, #1212]	; 1844 <apply_dline+0x520>
    1384:	add	r1, pc, r1
    1388:	bl	cb8 <privilegeset_in_set@plt>
    138c:	cmp	r0, #0
    1390:	bne	13c0 <apply_dline+0x9c>
    1394:	ldr	r1, [r4, #24]
    1398:	cmp	r1, #0
    139c:	beq	140c <apply_dline+0xe8>
    13a0:	ldr	r0, [r1, #36]	; 0x24
    13a4:	cmp	r0, #0
    13a8:	beq	140c <apply_dline+0xe8>
    13ac:	ldr	r1, [pc, #1172]	; 1848 <apply_dline+0x524>
    13b0:	add	r1, pc, r1
    13b4:	bl	cb8 <privilegeset_in_set@plt>
    13b8:	cmp	r0, #0
    13bc:	beq	140c <apply_dline+0xe8>
    13c0:	ldr	r0, [sp, #20]
    13c4:	cmp	r0, #7
    13c8:	bgt	1430 <apply_dline+0x10c>
    13cc:	ldr	r1, [pc, #1144]	; 184c <apply_dline+0x528>
    13d0:	add	r1, pc, r1
    13d4:	mov	r0, r4
    13d8:	bl	c7c <sendto_one_notice@plt>
    13dc:	sub	sp, fp, #24
    13e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    13e4:	ldr	r0, [pc, #1104]	; 183c <apply_dline+0x518>
    13e8:	add	r3, r4, #88	; 0x58
    13ec:	ldr	r0, [pc, r0]
    13f0:	ldr	r1, [pc, #1096]	; 1840 <apply_dline+0x51c>
    13f4:	add	r2, r0, #88	; 0x58
    13f8:	add	r1, pc, r1
    13fc:	mov	r0, r4
    1400:	bl	b80 <sendto_one@plt>
    1404:	sub	sp, fp, #24
    1408:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    140c:	ldr	r0, [sp, #20]
    1410:	cmp	r0, #15
    1414:	bgt	1430 <apply_dline+0x10c>
    1418:	ldr	r1, [pc, #1072]	; 1850 <apply_dline+0x52c>
    141c:	add	r1, pc, r1
    1420:	mov	r0, r4
    1424:	bl	c7c <sendto_one_notice@plt>
    1428:	sub	sp, fp, #24
    142c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1430:	ldr	r0, [pc, #1052]	; 1854 <apply_dline+0x530>
    1434:	ldr	r0, [pc, r0]
    1438:	ldr	r0, [r0, #140]	; 0x8c
    143c:	cmp	r0, #0
    1440:	beq	1484 <apply_dline+0x160>
    1444:	add	r0, sp, #24
    1448:	mov	r1, r5
    144c:	bl	cd0 <find_dline@plt>
    1450:	cmp	r0, #0
    1454:	beq	1484 <apply_dline+0x160>
    1458:	mov	r5, r0
    145c:	ldr	r0, [r0, #16]
    1460:	add	r2, sp, #16
    1464:	mov	r1, #0
    1468:	bl	b44 <parse_netmask_strict@plt>
    146c:	cmp	r0, #0
    1470:	beq	1484 <apply_dline+0x160>
    1474:	ldr	r0, [sp, #16]
    1478:	ldr	r1, [sp, #20]
    147c:	cmp	r1, r0
    1480:	bge	17b0 <apply_dline+0x48c>
    1484:	bl	bf8 <rb_set_time@plt>
    1488:	bl	b38 <make_conf@plt>
    148c:	mov	r6, r0
    1490:	mov	r0, #131072	; 0x20000
    1494:	str	r0, [r6]
    1498:	bl	b50 <rb_current_time@plt>
    149c:	str	r0, [r6, #40]	; 0x28
    14a0:	mov	r0, r7
    14a4:	bl	c28 <strlen@plt>
    14a8:	add	r0, r0, #1
    14ac:	bl	c04 <malloc@plt>
    14b0:	cmp	r0, #0
    14b4:	beq	1838 <apply_dline+0x514>
    14b8:	mov	r1, r7
    14bc:	bl	be0 <strcpy@plt>
    14c0:	str	r0, [r6, #16]
    14c4:	mov	r0, r9
    14c8:	bl	c28 <strlen@plt>
    14cc:	add	r0, r0, #1
    14d0:	bl	c04 <malloc@plt>
    14d4:	cmp	r0, #0
    14d8:	beq	1838 <apply_dline+0x514>
    14dc:	mov	r1, r9
    14e0:	bl	be0 <strcpy@plt>
    14e4:	str	r0, [r6, #20]
    14e8:	mov	r0, r4
    14ec:	bl	bbc <get_oper_name@plt>
    14f0:	bl	bd4 <operhash_add@plt>
    14f4:	str	r0, [r6, #12]
    14f8:	mov	r0, r9
    14fc:	bl	c28 <strlen@plt>
    1500:	movw	r1, #391	; 0x187
    1504:	cmp	r0, r1
    1508:	mov	r1, #124	; 0x7c
    150c:	movcs	r0, #0
    1510:	strbcs	r0, [r9, #390]	; 0x186
    1514:	mov	r0, r9
    1518:	bl	c34 <strchr@plt>
    151c:	cmp	r0, #0
    1520:	beq	168c <apply_dline+0x368>
    1524:	mov	r7, r0
    1528:	mov	r0, #0
    152c:	strb	r0, [r7]
    1530:	ldrb	r0, [r7, #1]!
    1534:	cmp	r0, #0
    1538:	beq	1560 <apply_dline+0x23c>
    153c:	mov	r0, r7
    1540:	bl	c28 <strlen@plt>
    1544:	add	r0, r0, #1
    1548:	bl	c04 <malloc@plt>
    154c:	cmp	r0, #0
    1550:	beq	1838 <apply_dline+0x514>
    1554:	mov	r1, r7
    1558:	bl	be0 <strcpy@plt>
    155c:	str	r0, [r6, #24]
    1560:	cmp	r8, #1
    1564:	blt	1698 <apply_dline+0x374>
    1568:	bl	b50 <rb_current_time@plt>
    156c:	add	r0, r0, r8
    1570:	str	r0, [r6, #36]	; 0x24
    1574:	mov	r0, r6
    1578:	bl	bec <add_temp_dline@plt>
    157c:	cmp	r7, #0
    1580:	beq	15f4 <apply_dline+0x2d0>
    1584:	ldrb	r0, [r7]
    1588:	cmp	r0, #0
    158c:	beq	15f4 <apply_dline+0x2d0>
    1590:	mov	r0, r4
    1594:	bl	bbc <get_oper_name@plt>
    1598:	movw	r1, #34953	; 0x8889
    159c:	mov	r3, r0
    15a0:	ldr	r0, [r6, #16]
    15a4:	movt	r1, #34952	; 0x8888
    15a8:	umull	r1, r2, r8, r1
    15ac:	mov	r1, #0
    15b0:	lsr	r5, r2, #5
    15b4:	str	r5, [sp]
    15b8:	stmib	sp, {r0, r9}
    15bc:	str	r7, [sp, #12]
    15c0:	mov	r0, #256	; 0x100
    15c4:	ldr	r2, [pc, #680]	; 1874 <apply_dline+0x550>
    15c8:	add	r2, pc, r2
    15cc:	bl	ba4 <sendto_realops_snomask@plt>
    15d0:	mov	r0, r4
    15d4:	bl	bbc <get_oper_name@plt>
    15d8:	mov	r2, r0
    15dc:	ldr	r0, [r6, #16]
    15e0:	stm	sp, {r0, r9}
    15e4:	str	r7, [sp, #8]
    15e8:	ldr	r1, [pc, #648]	; 1878 <apply_dline+0x554>
    15ec:	add	r1, pc, r1
    15f0:	b	164c <apply_dline+0x328>
    15f4:	mov	r0, r4
    15f8:	bl	bbc <get_oper_name@plt>
    15fc:	movw	r1, #34953	; 0x8889
    1600:	mov	r3, r0
    1604:	ldr	r0, [r6, #16]
    1608:	movt	r1, #34952	; 0x8888
    160c:	umull	r1, r2, r8, r1
    1610:	mov	r1, #0
    1614:	lsr	r5, r2, #5
    1618:	str	r5, [sp]
    161c:	stmib	sp, {r0, r9}
    1620:	mov	r0, #256	; 0x100
    1624:	ldr	r2, [pc, #576]	; 186c <apply_dline+0x548>
    1628:	add	r2, pc, r2
    162c:	bl	ba4 <sendto_realops_snomask@plt>
    1630:	mov	r0, r4
    1634:	bl	bbc <get_oper_name@plt>
    1638:	mov	r2, r0
    163c:	ldr	r0, [r6, #16]
    1640:	stm	sp, {r0, r9}
    1644:	ldr	r1, [pc, #548]	; 1870 <apply_dline+0x54c>
    1648:	add	r1, pc, r1
    164c:	mov	r0, #7
    1650:	mov	r3, r5
    1654:	bl	c4c <ilog@plt>
    1658:	ldr	r0, [r6, #16]
    165c:	str	r5, [sp]
    1660:	add	r3, r4, #88	; 0x58
    1664:	str	r0, [sp, #4]
    1668:	ldr	r0, [pc, #524]	; 187c <apply_dline+0x558>
    166c:	ldr	r0, [pc, r0]
    1670:	ldr	r1, [pc, #520]	; 1880 <apply_dline+0x55c>
    1674:	add	r2, r0, #88	; 0x58
    1678:	add	r1, pc, r1
    167c:	mov	r0, r4
    1680:	bl	b80 <sendto_one@plt>
    1684:	sub	sp, fp, #24
    1688:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    168c:	mov	r7, #0
    1690:	cmp	r8, #1
    1694:	bge	1568 <apply_dline+0x244>
    1698:	ldr	r0, [r6, #16]
    169c:	mov	r1, #131072	; 0x20000
    16a0:	mov	r2, #0
    16a4:	mov	r3, #0
    16a8:	str	r6, [sp]
    16ac:	mov	r5, #0
    16b0:	bl	c10 <add_conf_by_address@plt>
    16b4:	ldr	r1, [r6, #24]
    16b8:	ldr	r2, [r6, #16]
    16bc:	mov	r0, #0
    16c0:	cmp	r1, #0
    16c4:	beq	16d4 <apply_dline+0x3b0>
    16c8:	ldrb	r0, [r1]
    16cc:	cmp	r0, #0
    16d0:	movne	r0, r1
    16d4:	str	r9, [sp]
    16d8:	stmib	sp, {r0, r5}
    16dc:	mov	r0, #1
    16e0:	mov	r1, r4
    16e4:	mov	r3, #0
    16e8:	bl	bb0 <bandb_add@plt>
    16ec:	cmp	r7, #0
    16f0:	beq	175c <apply_dline+0x438>
    16f4:	ldrb	r0, [r7]
    16f8:	cmp	r0, #0
    16fc:	beq	175c <apply_dline+0x438>
    1700:	mov	r0, r4
    1704:	bl	bbc <get_oper_name@plt>
    1708:	mov	r3, r0
    170c:	ldr	r0, [r6, #16]
    1710:	mov	r1, #0
    1714:	stm	sp, {r0, r9}
    1718:	str	r7, [sp, #8]
    171c:	mov	r0, #256	; 0x100
    1720:	ldr	r2, [pc, #356]	; 188c <apply_dline+0x568>
    1724:	add	r2, pc, r2
    1728:	bl	ba4 <sendto_realops_snomask@plt>
    172c:	mov	r0, r4
    1730:	bl	bbc <get_oper_name@plt>
    1734:	ldr	r3, [r6, #16]
    1738:	str	r9, [sp]
    173c:	str	r7, [sp, #4]
    1740:	mov	r2, r0
    1744:	ldr	r1, [pc, #324]	; 1890 <apply_dline+0x56c>
    1748:	add	r1, pc, r1
    174c:	mov	r0, #7
    1750:	bl	c4c <ilog@plt>
    1754:	sub	sp, fp, #24
    1758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    175c:	mov	r0, r4
    1760:	bl	bbc <get_oper_name@plt>
    1764:	mov	r3, r0
    1768:	ldr	r0, [r6, #16]
    176c:	mov	r1, #0
    1770:	stm	sp, {r0, r9}
    1774:	mov	r0, #256	; 0x100
    1778:	ldr	r2, [pc, #260]	; 1884 <apply_dline+0x560>
    177c:	add	r2, pc, r2
    1780:	bl	ba4 <sendto_realops_snomask@plt>
    1784:	mov	r0, r4
    1788:	bl	bbc <get_oper_name@plt>
    178c:	ldr	r3, [r6, #16]
    1790:	str	r9, [sp]
    1794:	mov	r2, r0
    1798:	ldr	r1, [pc, #232]	; 1888 <apply_dline+0x564>
    179c:	add	r1, pc, r1
    17a0:	mov	r0, #7
    17a4:	bl	c4c <ilog@plt>
    17a8:	sub	sp, fp, #24
    17ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    17b0:	ldr	r2, [r5, #20]
    17b4:	ldr	r1, [r5, #16]
    17b8:	ldr	r0, [pc, #152]	; 1858 <apply_dline+0x534>
    17bc:	add	r3, r4, #88	; 0x58
    17c0:	cmp	r2, #0
    17c4:	add	r0, pc, r0
    17c8:	movne	r0, r2
    17cc:	ldrb	r2, [r5, #4]
    17d0:	tst	r2, #64	; 0x40
    17d4:	bne	1808 <apply_dline+0x4e4>
    17d8:	str	r7, [sp]
    17dc:	str	r1, [sp, #4]
    17e0:	str	r0, [sp, #8]
    17e4:	ldr	r0, [pc, #120]	; 1864 <apply_dline+0x540>
    17e8:	ldr	r0, [pc, r0]
    17ec:	ldr	r1, [pc, #116]	; 1868 <apply_dline+0x544>
    17f0:	add	r2, r0, #88	; 0x58
    17f4:	add	r1, pc, r1
    17f8:	mov	r0, r4
    17fc:	bl	b80 <sendto_one@plt>
    1800:	sub	sp, fp, #24
    1804:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1808:	str	r7, [sp]
    180c:	str	r1, [sp, #4]
    1810:	str	r0, [sp, #8]
    1814:	ldr	r0, [pc, #64]	; 185c <apply_dline+0x538>
    1818:	ldr	r0, [pc, r0]
    181c:	ldr	r1, [pc, #60]	; 1860 <apply_dline+0x53c>
    1820:	add	r2, r0, #88	; 0x58
    1824:	add	r1, pc, r1
    1828:	mov	r0, r4
    182c:	bl	b80 <sendto_one@plt>
    1830:	sub	sp, fp, #24
    1834:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1838:	bl	b8c <rb_outofmemory@plt>
    183c:	.word	0x00011cb8
    1840:	.word	0x0000087e
    1844:	.word	0x00000910
    1848:	.word	0x000008ef
    184c:	.word	0x000008e1
    1850:	.word	0x000008cc
    1854:	.word	0x00011c78
    1858:	.word	0x00000556
    185c:	.word	0x0001188c
    1860:	.word	0x00000502
    1864:	.word	0x000118bc
    1868:	.word	0x00000561
    186c:	.word	0x0000075e
    1870:	.word	0x0000076e
    1874:	.word	0x000007fc
    1878:	.word	0x0000080b
    187c:	.word	0x00011a38
    1880:	.word	0x00000790
    1884:	.word	0x000006c3
    1888:	.word	0x000006c1
    188c:	.word	0x00000746
    1890:	.word	0x00000743

00001894 <apply_undline>:
    1894:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1898:	add	fp, sp, #24
    189c:	sub	sp, sp, #520	; 0x208
    18a0:	mov	r4, r0
    18a4:	mov	r6, r1
    18a8:	mov	r0, r1
    18ac:	mov	r1, #0
    18b0:	mov	r2, #0
    18b4:	bl	b98 <parse_netmask@plt>
    18b8:	orr	r0, r0, #1
    18bc:	cmp	r0, #3
    18c0:	bne	193c <apply_undline+0xa8>
    18c4:	mov	r0, r6
    18c8:	mov	r1, #131072	; 0x20000
    18cc:	mov	r2, #0
    18d0:	bl	c94 <find_exact_conf_by_address@plt>
    18d4:	cmp	r0, #0
    18d8:	beq	1948 <apply_undline+0xb4>
    18dc:	ldr	r1, [r0, #16]
    18e0:	add	r8, sp, #8
    18e4:	mov	r5, r0
    18e8:	mov	r2, #512	; 0x200
    18ec:	mov	r0, r8
    18f0:	bl	ca0 <rb_strlcpy@plt>
    18f4:	ldr	r1, [pc, #644]	; 1b80 <apply_undline+0x2ec>
    18f8:	ldr	r1, [pc, r1]
    18fc:	mov	r2, r1
    1900:	ldr	r0, [r2]
    1904:	cmp	r0, #0
    1908:	beq	1964 <apply_undline+0xd0>
    190c:	mov	r2, r0
    1910:	ldr	r3, [r2], #8
    1914:	cmp	r3, r5
    1918:	bne	1900 <apply_undline+0x6c>
    191c:	mov	lr, #0
    1920:	ldr	r6, [r0, #8]
    1924:	ldr	r7, [r0, #4]
    1928:	cmp	r6, #0
    192c:	beq	19a4 <apply_undline+0x110>
    1930:	str	r7, [r6, #4]
    1934:	ldr	r7, [r0, #4]
    1938:	b	19b8 <apply_undline+0x124>
    193c:	ldr	r1, [pc, #564]	; 1b78 <apply_undline+0x2e4>
    1940:	add	r1, pc, r1
    1944:	b	1950 <apply_undline+0xbc>
    1948:	ldr	r1, [pc, #556]	; 1b7c <apply_undline+0x2e8>
    194c:	add	r1, pc, r1
    1950:	mov	r0, r4
    1954:	mov	r2, r6
    1958:	bl	c7c <sendto_one_notice@plt>
    195c:	sub	sp, fp, #24
    1960:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1964:	ldr	r3, [pc, #536]	; 1b84 <apply_undline+0x2f0>
    1968:	ldr	r3, [pc, r3]
    196c:	add	r1, r3, #12
    1970:	mov	r2, r1
    1974:	ldr	r0, [r2]
    1978:	cmp	r0, #0
    197c:	beq	1a6c <apply_undline+0x1d8>
    1980:	mov	r2, r0
    1984:	ldr	r7, [r2], #8
    1988:	cmp	r7, r5
    198c:	bne	1974 <apply_undline+0xe0>
    1990:	mov	lr, #1
    1994:	ldr	r6, [r0, #8]
    1998:	ldr	r7, [r0, #4]
    199c:	cmp	r6, #0
    19a0:	bne	1930 <apply_undline+0x9c>
    19a4:	ldr	r3, [pc, #476]	; 1b88 <apply_undline+0x2f4>
    19a8:	add	ip, lr, lr, lsl #1
    19ac:	ldr	r3, [pc, r3]
    19b0:	add	r3, r3, ip, lsl #2
    19b4:	str	r7, [r3, #4]
    19b8:	cmp	r7, #0
    19bc:	addne	r1, r7, #8
    19c0:	str	r6, [r1]
    19c4:	mov	r1, #0
    19c8:	str	r1, [r0, #4]
    19cc:	str	r1, [r2]
    19d0:	add	r1, lr, lr, lsl #1
    19d4:	ldr	r2, [pc, #432]	; 1b8c <apply_undline+0x2f8>
    19d8:	ldr	r2, [pc, r2]
    19dc:	add	r1, r2, r1, lsl #2
    19e0:	ldr	r2, [r1, #8]
    19e4:	sub	r2, r2, #1
    19e8:	str	r2, [r1, #8]
    19ec:	bl	bc8 <rb_free_rb_dlink_node@plt>
    19f0:	ldr	r0, [r5, #16]
    19f4:	mov	r1, r5
    19f8:	bl	c40 <delete_one_address_conf@plt>
    19fc:	str	r8, [sp]
    1a00:	add	r3, r4, #88	; 0x58
    1a04:	ldr	r0, [pc, #388]	; 1b90 <apply_undline+0x2fc>
    1a08:	ldr	r0, [pc, r0]
    1a0c:	ldr	r1, [pc, #384]	; 1b94 <apply_undline+0x300>
    1a10:	add	r2, r0, #88	; 0x58
    1a14:	add	r1, pc, r1
    1a18:	mov	r0, r4
    1a1c:	bl	b80 <sendto_one@plt>
    1a20:	mov	r0, r4
    1a24:	bl	bbc <get_oper_name@plt>
    1a28:	str	r8, [sp]
    1a2c:	mov	r3, r0
    1a30:	mov	r0, #256	; 0x100
    1a34:	mov	r1, #0
    1a38:	ldr	r2, [pc, #344]	; 1b98 <apply_undline+0x304>
    1a3c:	add	r2, pc, r2
    1a40:	bl	ba4 <sendto_realops_snomask@plt>
    1a44:	mov	r0, r4
    1a48:	bl	bbc <get_oper_name@plt>
    1a4c:	ldr	r1, [pc, #328]	; 1b9c <apply_undline+0x308>
    1a50:	mov	r2, r0
    1a54:	mov	r0, #7
    1a58:	mov	r3, r8
    1a5c:	add	r1, pc, r1
    1a60:	bl	c4c <ilog@plt>
    1a64:	sub	sp, fp, #24
    1a68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1a6c:	add	r1, r3, #24
    1a70:	mov	r2, r1
    1a74:	ldr	r0, [r2]
    1a78:	cmp	r0, #0
    1a7c:	beq	1aa8 <apply_undline+0x214>
    1a80:	mov	r2, r0
    1a84:	ldr	r7, [r2], #8
    1a88:	cmp	r7, r5
    1a8c:	bne	1a74 <apply_undline+0x1e0>
    1a90:	mov	lr, #2
    1a94:	ldr	r6, [r0, #8]
    1a98:	ldr	r7, [r0, #4]
    1a9c:	cmp	r6, #0
    1aa0:	bne	1930 <apply_undline+0x9c>
    1aa4:	b	19a4 <apply_undline+0x110>
    1aa8:	add	r1, r3, #36	; 0x24
    1aac:	mov	r2, r1
    1ab0:	ldr	r0, [r2]
    1ab4:	cmp	r0, #0
    1ab8:	beq	1ae4 <apply_undline+0x250>
    1abc:	mov	r2, r0
    1ac0:	ldr	r3, [r2], #8
    1ac4:	cmp	r3, r5
    1ac8:	bne	1ab0 <apply_undline+0x21c>
    1acc:	mov	lr, #3
    1ad0:	ldr	r6, [r0, #8]
    1ad4:	ldr	r7, [r0, #4]
    1ad8:	cmp	r6, #0
    1adc:	bne	1930 <apply_undline+0x9c>
    1ae0:	b	19a4 <apply_undline+0x110>
    1ae4:	ldr	r1, [r5, #16]
    1ae8:	mov	r0, #1
    1aec:	mov	r2, #0
    1af0:	bl	c88 <bandb_del@plt>
    1af4:	ldr	r0, [r5, #16]
    1af8:	add	r3, r4, #88	; 0x58
    1afc:	str	r0, [sp]
    1b00:	ldr	r0, [pc, #152]	; 1ba0 <apply_undline+0x30c>
    1b04:	ldr	r0, [pc, r0]
    1b08:	ldr	r1, [pc, #148]	; 1ba4 <apply_undline+0x310>
    1b0c:	add	r2, r0, #88	; 0x58
    1b10:	add	r1, pc, r1
    1b14:	mov	r0, r4
    1b18:	bl	b80 <sendto_one@plt>
    1b1c:	mov	r0, r4
    1b20:	bl	bbc <get_oper_name@plt>
    1b24:	mov	r3, r0
    1b28:	ldr	r0, [r5, #16]
    1b2c:	mov	r1, #0
    1b30:	str	r0, [sp]
    1b34:	mov	r0, #256	; 0x100
    1b38:	ldr	r2, [pc, #104]	; 1ba8 <apply_undline+0x314>
    1b3c:	add	r2, pc, r2
    1b40:	bl	ba4 <sendto_realops_snomask@plt>
    1b44:	mov	r0, r4
    1b48:	bl	bbc <get_oper_name@plt>
    1b4c:	ldr	r3, [r5, #16]
    1b50:	ldr	r1, [pc, #84]	; 1bac <apply_undline+0x318>
    1b54:	mov	r2, r0
    1b58:	mov	r0, #7
    1b5c:	add	r1, pc, r1
    1b60:	bl	c4c <ilog@plt>
    1b64:	ldr	r0, [r5, #16]
    1b68:	mov	r1, r5
    1b6c:	bl	c40 <delete_one_address_conf@plt>
    1b70:	sub	sp, fp, #24
    1b74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1b78:	.word	0x000002d8
    1b7c:	.word	0x0000056b
    1b80:	.word	0x000117a4
    1b84:	.word	0x00011734
    1b88:	.word	0x000116f0
    1b8c:	.word	0x000116c4
    1b90:	.word	0x0001169c
    1b94:	.word	0x000004b5
    1b98:	.word	0x000004c2
    1b9c:	.word	0x000004d0
    1ba0:	.word	0x000115a0
    1ba4:	.word	0x00000425
    1ba8:	.word	0x00000423
    1bac:	.word	0x000003d0

Disassembly of section .fini:

00001bb0 <_fini>:
    1bb0:	push	{r3, lr}
    1bb4:	pop	{r3, pc}
