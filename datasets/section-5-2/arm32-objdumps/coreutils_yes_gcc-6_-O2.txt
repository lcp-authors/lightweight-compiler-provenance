
../repos/coreutils/src/yes:     file format elf32-littlearm


Disassembly of section .init:

00010af4 <.init>:
   10af4:	push	{r3, lr}
   10af8:	bl	10fa4 <abort@plt+0x28c>
   10afc:	pop	{r3, pc}

Disassembly of section .plt:

00010b00 <calloc@plt-0x14>:
   10b00:	push	{lr}		; (str lr, [sp, #-4]!)
   10b04:	ldr	lr, [pc, #4]	; 10b10 <calloc@plt-0x4>
   10b08:	add	lr, pc, lr
   10b0c:	ldr	pc, [lr, #8]!
   10b10:	strdeq	r5, [r1], -r0

00010b14 <calloc@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #86016	; 0x15000
   10b1c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b20 <fputs_unlocked@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #86016	; 0x15000
   10b28:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b2c <raise@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #86016	; 0x15000
   10b34:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b38 <strcmp@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #86016	; 0x15000
   10b40:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b44 <fflush@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #86016	; 0x15000
   10b4c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b50 <free@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #86016	; 0x15000
   10b58:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b5c <_exit@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #86016	; 0x15000
   10b64:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b68 <memcpy@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #86016	; 0x15000
   10b70:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b74 <mbsinit@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #86016	; 0x15000
   10b7c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b80 <memcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #86016	; 0x15000
   10b88:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b8c <fputc_unlocked@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #86016	; 0x15000
   10b94:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b98 <dcgettext@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #86016	; 0x15000
   10ba0:	ldr	pc, [ip, #1176]!	; 0x498

00010ba4 <realloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #86016	; 0x15000
   10bac:	ldr	pc, [ip, #1168]!	; 0x490

00010bb0 <textdomain@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #86016	; 0x15000
   10bb8:	ldr	pc, [ip, #1160]!	; 0x488

00010bbc <iswprint@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #86016	; 0x15000
   10bc4:	ldr	pc, [ip, #1152]!	; 0x480

00010bc8 <fwrite@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #86016	; 0x15000
   10bd0:	ldr	pc, [ip, #1144]!	; 0x478

00010bd4 <lseek64@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #86016	; 0x15000
   10bdc:	ldr	pc, [ip, #1136]!	; 0x470

00010be0 <__ctype_get_mb_cur_max@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #86016	; 0x15000
   10be8:	ldr	pc, [ip, #1128]!	; 0x468

00010bec <__fpending@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #86016	; 0x15000
   10bf4:	ldr	pc, [ip, #1120]!	; 0x460

00010bf8 <mbrtowc@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #86016	; 0x15000
   10c00:	ldr	pc, [ip, #1112]!	; 0x458

00010c04 <error@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #86016	; 0x15000
   10c0c:	ldr	pc, [ip, #1104]!	; 0x450

00010c10 <malloc@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #86016	; 0x15000
   10c18:	ldr	pc, [ip, #1096]!	; 0x448

00010c1c <__libc_start_main@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #86016	; 0x15000
   10c24:	ldr	pc, [ip, #1088]!	; 0x440

00010c28 <__freading@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #86016	; 0x15000
   10c30:	ldr	pc, [ip, #1080]!	; 0x438

00010c34 <__gmon_start__@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #86016	; 0x15000
   10c3c:	ldr	pc, [ip, #1072]!	; 0x430

00010c40 <getopt_long@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #86016	; 0x15000
   10c48:	ldr	pc, [ip, #1064]!	; 0x428

00010c4c <__ctype_b_loc@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #86016	; 0x15000
   10c54:	ldr	pc, [ip, #1056]!	; 0x420

00010c58 <exit@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #86016	; 0x15000
   10c60:	ldr	pc, [ip, #1048]!	; 0x418

00010c64 <strlen@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #86016	; 0x15000
   10c6c:	ldr	pc, [ip, #1040]!	; 0x410

00010c70 <__errno_location@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #86016	; 0x15000
   10c78:	ldr	pc, [ip, #1032]!	; 0x408

00010c7c <__cxa_atexit@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #86016	; 0x15000
   10c84:	ldr	pc, [ip, #1024]!	; 0x400

00010c88 <memset@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #86016	; 0x15000
   10c90:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c94 <__printf_chk@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #86016	; 0x15000
   10c9c:	ldr	pc, [ip, #1008]!	; 0x3f0

00010ca0 <write@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #86016	; 0x15000
   10ca8:	ldr	pc, [ip, #1000]!	; 0x3e8

00010cac <fileno@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #992]!	; 0x3e0

00010cb8 <__fprintf_chk@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #984]!	; 0x3d8

00010cc4 <fclose@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #976]!	; 0x3d0

00010cd0 <fseeko64@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #968]!	; 0x3c8

00010cdc <setlocale@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #960]!	; 0x3c0

00010ce8 <strrchr@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #952]!	; 0x3b8

00010cf4 <nl_langinfo@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #944]!	; 0x3b0

00010d00 <bindtextdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #936]!	; 0x3a8

00010d0c <strncmp@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #928]!	; 0x3a0

00010d18 <abort@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #920]!	; 0x398

Disassembly of section .text:

00010d24 <.text>:
   10d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10d28:	mov	r5, r0
   10d2c:	sub	sp, sp, #36	; 0x24
   10d30:	ldr	r0, [r1]
   10d34:	mov	r4, r1
   10d38:	bl	11660 <abort@plt+0x948>
   10d3c:	ldr	r1, [pc, #500]	; 10f38 <abort@plt+0x220>
   10d40:	mov	r0, #6
   10d44:	bl	10cdc <setlocale@plt>
   10d48:	ldr	r1, [pc, #492]	; 10f3c <abort@plt+0x224>
   10d4c:	ldr	r0, [pc, #492]	; 10f40 <abort@plt+0x228>
   10d50:	bl	10d00 <bindtextdomain@plt>
   10d54:	ldr	r0, [pc, #484]	; 10f40 <abort@plt+0x228>
   10d58:	bl	10bb0 <textdomain@plt>
   10d5c:	ldr	r0, [pc, #480]	; 10f44 <abort@plt+0x22c>
   10d60:	bl	14a14 <abort@plt+0x3cfc>
   10d64:	ldr	r3, [pc, #476]	; 10f48 <abort@plt+0x230>
   10d68:	ldr	lr, [pc, #476]	; 10f4c <abort@plt+0x234>
   10d6c:	ldr	ip, [pc, #476]	; 10f50 <abort@plt+0x238>
   10d70:	ldr	r1, [r3]
   10d74:	mov	r2, #0
   10d78:	mov	r3, #1
   10d7c:	str	r1, [sp]
   10d80:	mov	r0, r5
   10d84:	str	r2, [sp, #16]
   10d88:	str	r3, [sp, #4]
   10d8c:	ldr	r2, [pc, #448]	; 10f54 <abort@plt+0x23c>
   10d90:	ldr	r3, [pc, #448]	; 10f58 <abort@plt+0x240>
   10d94:	mov	r1, r4
   10d98:	str	lr, [sp, #12]
   10d9c:	str	ip, [sp, #8]
   10da0:	bl	11588 <abort@plt+0x870>
   10da4:	ldr	r3, [pc, #432]	; 10f5c <abort@plt+0x244>
   10da8:	add	r9, r4, r5, lsl #2
   10dac:	mov	r7, #1
   10db0:	ldr	r3, [r3]
   10db4:	mov	r8, #0
   10db8:	cmp	r5, r3
   10dbc:	str	r3, [sp, #28]
   10dc0:	ldreq	r2, [sp, #28]
   10dc4:	add	r6, r4, r3, lsl #2
   10dc8:	ldreq	r3, [pc, #400]	; 10f60 <abort@plt+0x248>
   10dcc:	add	r6, r6, #4
   10dd0:	addeq	r9, r9, #4
   10dd4:	mov	sl, r6
   10dd8:	streq	r3, [r4, r2, lsl #2]
   10ddc:	ldr	r3, [sp, #28]
   10de0:	ldr	fp, [r4, r3, lsl #2]
   10de4:	mov	r5, fp
   10de8:	b	10dfc <abort@plt+0xe4>
   10dec:	add	r0, r5, r0
   10df0:	ldr	r5, [sl], #4
   10df4:	cmp	r0, r5
   10df8:	movne	r7, #0
   10dfc:	mov	r0, r5
   10e00:	bl	10c64 <strlen@plt>
   10e04:	cmp	r9, sl
   10e08:	add	r0, r0, #1
   10e0c:	add	r8, r8, r0
   10e10:	bhi	10dec <abort@plt+0xd4>
   10e14:	cmp	r8, #4096	; 0x1000
   10e18:	bhi	10f28 <abort@plt+0x210>
   10e1c:	mov	r8, #8192	; 0x2000
   10e20:	mov	r0, r8
   10e24:	bl	13ac0 <abort@plt+0x2da8>
   10e28:	ldr	r3, [sp, #28]
   10e2c:	mov	r7, #0
   10e30:	ldr	fp, [r4, r3, lsl #2]
   10e34:	mov	r5, r0
   10e38:	mov	r4, #0
   10e3c:	mov	sl, #32
   10e40:	b	10e60 <abort@plt+0x148>
   10e44:	add	r0, r4, r3
   10e48:	cmp	r9, r6
   10e4c:	strb	sl, [r5, r0]
   10e50:	add	r4, r0, #1
   10e54:	add	r3, r5, r0
   10e58:	bls	10e90 <abort@plt+0x178>
   10e5c:	ldr	fp, [r6], #4
   10e60:	mov	r0, fp
   10e64:	bl	10c64 <strlen@plt>
   10e68:	cmp	r7, #0
   10e6c:	mov	r3, r0
   10e70:	bne	10e44 <abort@plt+0x12c>
   10e74:	mov	r2, r0
   10e78:	str	r0, [sp, #28]
   10e7c:	mov	r1, fp
   10e80:	add	r0, r5, r4
   10e84:	bl	10b68 <memcpy@plt>
   10e88:	ldr	r3, [sp, #28]
   10e8c:	b	10e44 <abort@plt+0x12c>
   10e90:	mov	r2, #10
   10e94:	mov	r0, r8
   10e98:	strb	r2, [r3]
   10e9c:	mov	r1, r4
   10ea0:	bl	14554 <abort@plt+0x383c>
   10ea4:	subs	r6, r0, #1
   10ea8:	mov	r7, r0
   10eac:	beq	10edc <abort@plt+0x1c4>
   10eb0:	add	r3, r5, r4
   10eb4:	mov	r0, r3
   10eb8:	mov	r2, r4
   10ebc:	mov	r1, r5
   10ec0:	bl	10b68 <memcpy@plt>
   10ec4:	subs	r6, r6, #1
   10ec8:	add	r3, r0, r4
   10ecc:	bne	10eb4 <abort@plt+0x19c>
   10ed0:	sub	r7, r7, #2
   10ed4:	mul	r7, r4, r7
   10ed8:	add	r4, r7, r4, lsl #1
   10edc:	mov	r6, #1
   10ee0:	mov	r2, r4
   10ee4:	mov	r1, r5
   10ee8:	mov	r0, r6
   10eec:	bl	11460 <abort@plt+0x748>
   10ef0:	cmp	r0, r4
   10ef4:	beq	10ee0 <abort@plt+0x1c8>
   10ef8:	bl	10c70 <__errno_location@plt>
   10efc:	mov	r2, #5
   10f00:	ldr	r1, [pc, #92]	; 10f64 <abort@plt+0x24c>
   10f04:	ldr	r4, [r0]
   10f08:	mov	r0, #0
   10f0c:	bl	10b98 <dcgettext@plt>
   10f10:	mov	r1, r4
   10f14:	mov	r2, r0
   10f18:	mov	r0, #0
   10f1c:	bl	10c04 <error@plt>
   10f20:	mov	r0, #1
   10f24:	bl	10c58 <exit@plt>
   10f28:	cmp	r7, #0
   10f2c:	movne	r5, fp
   10f30:	bne	10e38 <abort@plt+0x120>
   10f34:	b	10e20 <abort@plt+0x108>
   10f38:	andeq	r4, r1, r4, lsl #22
   10f3c:	andeq	r4, r1, ip, asr ip
   10f40:			; <UNDEFINED> instruction: 0x00014bb4
   10f44:	andeq	r1, r1, ip, ror r3
   10f48:	andeq	r6, r2, r8, asr #1
   10f4c:	andeq	r4, r1, r4, ror ip
   10f50:	muleq	r1, r0, r0
   10f54:	andeq	r4, r1, r0, ror sl
   10f58:			; <UNDEFINED> instruction: 0x00014bb0
   10f5c:	andeq	r6, r2, r8, lsl r1
   10f60:	andeq	r4, r1, r4, lsl #25
   10f64:	andeq	r4, r1, r8, lsl #25
   10f68:	mov	fp, #0
   10f6c:	mov	lr, #0
   10f70:	pop	{r1}		; (ldr r1, [sp], #4)
   10f74:	mov	r2, sp
   10f78:	push	{r2}		; (str r2, [sp, #-4]!)
   10f7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f80:	ldr	ip, [pc, #16]	; 10f98 <abort@plt+0x280>
   10f84:	push	{ip}		; (str ip, [sp, #-4]!)
   10f88:	ldr	r0, [pc, #12]	; 10f9c <abort@plt+0x284>
   10f8c:	ldr	r3, [pc, #12]	; 10fa0 <abort@plt+0x288>
   10f90:	bl	10c1c <__libc_start_main@plt>
   10f94:	bl	10d18 <abort@plt>
   10f98:	andeq	r4, r1, r0, lsl sl
   10f9c:	andeq	r0, r1, r4, lsr #26
   10fa0:			; <UNDEFINED> instruction: 0x000149b0
   10fa4:	ldr	r3, [pc, #20]	; 10fc0 <abort@plt+0x2a8>
   10fa8:	ldr	r2, [pc, #20]	; 10fc4 <abort@plt+0x2ac>
   10fac:	add	r3, pc, r3
   10fb0:	ldr	r2, [r3, r2]
   10fb4:	cmp	r2, #0
   10fb8:	bxeq	lr
   10fbc:	b	10c34 <__gmon_start__@plt>
   10fc0:	andeq	r5, r1, ip, asr #32
   10fc4:	strheq	r0, [r0], -ip
   10fc8:	ldr	r3, [pc, #28]	; 10fec <abort@plt+0x2d4>
   10fcc:	ldr	r0, [pc, #28]	; 10ff0 <abort@plt+0x2d8>
   10fd0:	sub	r3, r3, r0
   10fd4:	cmp	r3, #6
   10fd8:	bxls	lr
   10fdc:	ldr	r3, [pc, #16]	; 10ff4 <abort@plt+0x2dc>
   10fe0:	cmp	r3, #0
   10fe4:	bxeq	lr
   10fe8:	bx	r3
   10fec:	andeq	r6, r2, r3, lsl r1
   10ff0:	andeq	r6, r2, r0, lsl r1
   10ff4:	andeq	r0, r0, r0
   10ff8:	ldr	r1, [pc, #36]	; 11024 <abort@plt+0x30c>
   10ffc:	ldr	r0, [pc, #36]	; 11028 <abort@plt+0x310>
   11000:	sub	r1, r1, r0
   11004:	asr	r1, r1, #2
   11008:	add	r1, r1, r1, lsr #31
   1100c:	asrs	r1, r1, #1
   11010:	bxeq	lr
   11014:	ldr	r3, [pc, #16]	; 1102c <abort@plt+0x314>
   11018:	cmp	r3, #0
   1101c:	bxeq	lr
   11020:	bx	r3
   11024:	andeq	r6, r2, r0, lsl r1
   11028:	andeq	r6, r2, r0, lsl r1
   1102c:	andeq	r0, r0, r0
   11030:	push	{r4, lr}
   11034:	ldr	r4, [pc, #24]	; 11054 <abort@plt+0x33c>
   11038:	ldrb	r3, [r4]
   1103c:	cmp	r3, #0
   11040:	popne	{r4, pc}
   11044:	bl	10fc8 <abort@plt+0x2b0>
   11048:	mov	r3, #1
   1104c:	strb	r3, [r4]
   11050:	pop	{r4, pc}
   11054:	andeq	r6, r2, ip, lsr #2
   11058:	ldr	r0, [pc, #40]	; 11088 <abort@plt+0x370>
   1105c:	ldr	r3, [r0]
   11060:	cmp	r3, #0
   11064:	bne	1106c <abort@plt+0x354>
   11068:	b	10ff8 <abort@plt+0x2e0>
   1106c:	ldr	r3, [pc, #24]	; 1108c <abort@plt+0x374>
   11070:	cmp	r3, #0
   11074:	beq	11068 <abort@plt+0x350>
   11078:	push	{r4, lr}
   1107c:	blx	r3
   11080:	pop	{r4, lr}
   11084:	b	10ff8 <abort@plt+0x2e0>
   11088:	andeq	r5, r2, r4, lsl pc
   1108c:	andeq	r0, r0, r0
   11090:	subs	r6, r0, #0
   11094:	push	{r7, lr}
   11098:	sub	sp, sp, #56	; 0x38
   1109c:	beq	110d8 <abort@plt+0x3c0>
   110a0:	ldr	r3, [pc, #616]	; 11310 <abort@plt+0x5f8>
   110a4:	mov	r2, #5
   110a8:	ldr	r1, [pc, #612]	; 11314 <abort@plt+0x5fc>
   110ac:	mov	r0, #0
   110b0:	ldr	r4, [r3]
   110b4:	bl	10b98 <dcgettext@plt>
   110b8:	ldr	r3, [pc, #600]	; 11318 <abort@plt+0x600>
   110bc:	mov	r1, #1
   110c0:	ldr	r3, [r3]
   110c4:	mov	r2, r0
   110c8:	mov	r0, r4
   110cc:	bl	10cb8 <__fprintf_chk@plt>
   110d0:	mov	r0, r6
   110d4:	bl	10c58 <exit@plt>
   110d8:	mov	r2, #5
   110dc:	ldr	r1, [pc, #568]	; 1131c <abort@plt+0x604>
   110e0:	bl	10b98 <dcgettext@plt>
   110e4:	ldr	r3, [pc, #556]	; 11318 <abort@plt+0x600>
   110e8:	ldr	r7, [pc, #560]	; 11320 <abort@plt+0x608>
   110ec:	ldr	r4, [pc, #560]	; 11324 <abort@plt+0x60c>
   110f0:	ldr	r3, [r3]
   110f4:	mov	r2, r3
   110f8:	mov	r1, r0
   110fc:	mov	r0, #1
   11100:	bl	10c94 <__printf_chk@plt>
   11104:	mov	r2, #5
   11108:	ldr	r1, [pc, #536]	; 11328 <abort@plt+0x610>
   1110c:	mov	r0, r6
   11110:	bl	10b98 <dcgettext@plt>
   11114:	ldr	r1, [r7]
   11118:	bl	10b20 <fputs_unlocked@plt>
   1111c:	mov	r2, #5
   11120:	ldr	r1, [pc, #516]	; 1132c <abort@plt+0x614>
   11124:	mov	r0, r6
   11128:	bl	10b98 <dcgettext@plt>
   1112c:	ldr	r1, [r7]
   11130:	bl	10b20 <fputs_unlocked@plt>
   11134:	mov	r2, #5
   11138:	ldr	r1, [pc, #496]	; 11330 <abort@plt+0x618>
   1113c:	mov	r0, r6
   11140:	bl	10b98 <dcgettext@plt>
   11144:	ldr	r1, [r7]
   11148:	bl	10b20 <fputs_unlocked@plt>
   1114c:	ldm	r4!, {r0, r1, r2, r3}
   11150:	mov	lr, sp
   11154:	stmia	lr!, {r0, r1, r2, r3}
   11158:	ldm	r4!, {r0, r1, r2, r3}
   1115c:	ldr	ip, [sp]
   11160:	stmia	lr!, {r0, r1, r2, r3}
   11164:	cmp	ip, #0
   11168:	ldm	r4!, {r0, r1, r2, r3}
   1116c:	stmia	lr!, {r0, r1, r2, r3}
   11170:	ldm	r4, {r0, r1}
   11174:	moveq	r4, sp
   11178:	stm	lr, {r0, r1}
   1117c:	beq	111ac <abort@plt+0x494>
   11180:	ldr	r5, [pc, #428]	; 11334 <abort@plt+0x61c>
   11184:	mov	r4, sp
   11188:	b	11198 <abort@plt+0x480>
   1118c:	ldr	ip, [r4, #8]!
   11190:	cmp	ip, #0
   11194:	beq	111ac <abort@plt+0x494>
   11198:	mov	r1, ip
   1119c:	mov	r0, r5
   111a0:	bl	10b38 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	bne	1118c <abort@plt+0x474>
   111ac:	ldr	r4, [r4, #4]
   111b0:	mov	r2, #5
   111b4:	cmp	r4, #0
   111b8:	ldr	r1, [pc, #376]	; 11338 <abort@plt+0x620>
   111bc:	beq	11264 <abort@plt+0x54c>
   111c0:	mov	r0, #0
   111c4:	bl	10b98 <dcgettext@plt>
   111c8:	ldr	r3, [pc, #364]	; 1133c <abort@plt+0x624>
   111cc:	ldr	r2, [pc, #364]	; 11340 <abort@plt+0x628>
   111d0:	mov	r1, r0
   111d4:	mov	r0, #1
   111d8:	bl	10c94 <__printf_chk@plt>
   111dc:	mov	r1, #0
   111e0:	mov	r0, #5
   111e4:	bl	10cdc <setlocale@plt>
   111e8:	cmp	r0, #0
   111ec:	ldreq	r5, [pc, #320]	; 11334 <abort@plt+0x61c>
   111f0:	beq	1120c <abort@plt+0x4f4>
   111f4:	mov	r2, #3
   111f8:	ldr	r1, [pc, #324]	; 11344 <abort@plt+0x62c>
   111fc:	bl	10d0c <strncmp@plt>
   11200:	ldr	r5, [pc, #300]	; 11334 <abort@plt+0x61c>
   11204:	cmp	r0, #0
   11208:	bne	112f4 <abort@plt+0x5dc>
   1120c:	mov	r2, #5
   11210:	ldr	r1, [pc, #304]	; 11348 <abort@plt+0x630>
   11214:	mov	r0, #0
   11218:	bl	10b98 <dcgettext@plt>
   1121c:	ldr	r3, [pc, #272]	; 11334 <abort@plt+0x61c>
   11220:	ldr	r2, [pc, #276]	; 1133c <abort@plt+0x624>
   11224:	mov	r1, r0
   11228:	mov	r0, #1
   1122c:	bl	10c94 <__printf_chk@plt>
   11230:	mov	r2, #5
   11234:	ldr	r1, [pc, #272]	; 1134c <abort@plt+0x634>
   11238:	mov	r0, #0
   1123c:	bl	10b98 <dcgettext@plt>
   11240:	ldr	r2, [pc, #264]	; 11350 <abort@plt+0x638>
   11244:	cmp	r4, r5
   11248:	ldr	r3, [pc, #260]	; 11354 <abort@plt+0x63c>
   1124c:	movne	r3, r2
   11250:	mov	r1, r0
   11254:	mov	r2, r4
   11258:	mov	r0, #1
   1125c:	bl	10c94 <__printf_chk@plt>
   11260:	b	110d0 <abort@plt+0x3b8>
   11264:	mov	r0, r4
   11268:	bl	10b98 <dcgettext@plt>
   1126c:	ldr	r3, [pc, #200]	; 1133c <abort@plt+0x624>
   11270:	ldr	r2, [pc, #200]	; 11340 <abort@plt+0x628>
   11274:	mov	r1, r0
   11278:	mov	r0, #1
   1127c:	bl	10c94 <__printf_chk@plt>
   11280:	mov	r1, r4
   11284:	mov	r0, #5
   11288:	bl	10cdc <setlocale@plt>
   1128c:	cmp	r0, #0
   11290:	beq	112a8 <abort@plt+0x590>
   11294:	mov	r2, #3
   11298:	ldr	r1, [pc, #164]	; 11344 <abort@plt+0x62c>
   1129c:	bl	10d0c <strncmp@plt>
   112a0:	cmp	r0, #0
   112a4:	bne	112ec <abort@plt+0x5d4>
   112a8:	mov	r2, #5
   112ac:	ldr	r1, [pc, #148]	; 11348 <abort@plt+0x630>
   112b0:	mov	r0, #0
   112b4:	bl	10b98 <dcgettext@plt>
   112b8:	ldr	r3, [pc, #116]	; 11334 <abort@plt+0x61c>
   112bc:	ldr	r2, [pc, #120]	; 1133c <abort@plt+0x624>
   112c0:	mov	r4, r3
   112c4:	mov	r1, r0
   112c8:	mov	r0, #1
   112cc:	bl	10c94 <__printf_chk@plt>
   112d0:	ldr	r1, [pc, #116]	; 1134c <abort@plt+0x634>
   112d4:	mov	r2, #5
   112d8:	mov	r0, #0
   112dc:	bl	10b98 <dcgettext@plt>
   112e0:	ldr	r3, [pc, #108]	; 11354 <abort@plt+0x63c>
   112e4:	mov	r1, r0
   112e8:	b	11254 <abort@plt+0x53c>
   112ec:	ldr	r5, [pc, #64]	; 11334 <abort@plt+0x61c>
   112f0:	mov	r4, r5
   112f4:	mov	r2, #5
   112f8:	ldr	r1, [pc, #88]	; 11358 <abort@plt+0x640>
   112fc:	mov	r0, #0
   11300:	bl	10b98 <dcgettext@plt>
   11304:	ldr	r1, [r7]
   11308:	bl	10b20 <fputs_unlocked@plt>
   1130c:	b	1120c <abort@plt+0x4f4>
   11310:	andeq	r6, r2, r0, lsr #2
   11314:	andeq	r4, r1, r4, ror sl
   11318:	andeq	r6, r2, r8, lsr r1
   1131c:	muleq	r1, ip, sl
   11320:	andeq	r6, r2, r4, lsr #2
   11324:	andeq	r4, r1, r8, lsr sl
   11328:	andeq	r4, r1, r4, asr #21
   1132c:	andeq	r4, r1, r8, lsl #22
   11330:	andeq	r4, r1, r8, lsr fp
   11334:	andeq	r4, r1, r0, ror sl
   11338:	andeq	r4, r1, r0, ror fp
   1133c:	andeq	r4, r1, r8, lsl #23
   11340:			; <UNDEFINED> instruction: 0x00014bb0
   11344:	andeq	r4, r1, r0, asr #23
   11348:	andeq	r4, r1, ip, lsl #24
   1134c:	andeq	r4, r1, r8, lsr #24
   11350:	andeq	r4, r1, r4, lsl #22
   11354:	andeq	r4, r1, r0, lsr #25
   11358:	andeq	r4, r1, r4, asr #23
   1135c:	ldr	r3, [pc, #4]	; 11368 <abort@plt+0x650>
   11360:	str	r0, [r3]
   11364:	bx	lr
   11368:	andeq	r6, r2, r0, lsr r1
   1136c:	ldr	r3, [pc, #4]	; 11378 <abort@plt+0x660>
   11370:	strb	r0, [r3, #4]
   11374:	bx	lr
   11378:	andeq	r6, r2, r0, lsr r1
   1137c:	ldr	r3, [pc, #192]	; 11444 <abort@plt+0x72c>
   11380:	push	{r4, r5, r6, lr}
   11384:	sub	sp, sp, #8
   11388:	ldr	r0, [r3]
   1138c:	bl	14118 <abort@plt+0x3400>
   11390:	cmp	r0, #0
   11394:	beq	113b8 <abort@plt+0x6a0>
   11398:	ldr	r4, [pc, #168]	; 11448 <abort@plt+0x730>
   1139c:	ldrb	r3, [r4, #4]
   113a0:	cmp	r3, #0
   113a4:	beq	113d4 <abort@plt+0x6bc>
   113a8:	bl	10c70 <__errno_location@plt>
   113ac:	ldr	r3, [r0]
   113b0:	cmp	r3, #32
   113b4:	bne	113d4 <abort@plt+0x6bc>
   113b8:	ldr	r3, [pc, #140]	; 1144c <abort@plt+0x734>
   113bc:	ldr	r0, [r3]
   113c0:	bl	14118 <abort@plt+0x3400>
   113c4:	cmp	r0, #0
   113c8:	bne	1141c <abort@plt+0x704>
   113cc:	add	sp, sp, #8
   113d0:	pop	{r4, r5, r6, pc}
   113d4:	mov	r2, #5
   113d8:	ldr	r1, [pc, #112]	; 11450 <abort@plt+0x738>
   113dc:	mov	r0, #0
   113e0:	bl	10b98 <dcgettext@plt>
   113e4:	ldr	r4, [r4]
   113e8:	cmp	r4, #0
   113ec:	mov	r5, r0
   113f0:	beq	11428 <abort@plt+0x710>
   113f4:	bl	10c70 <__errno_location@plt>
   113f8:	ldr	r6, [r0]
   113fc:	mov	r0, r4
   11400:	bl	13388 <abort@plt+0x2670>
   11404:	mov	r1, r6
   11408:	str	r5, [sp]
   1140c:	ldr	r2, [pc, #64]	; 11454 <abort@plt+0x73c>
   11410:	mov	r3, r0
   11414:	mov	r0, #0
   11418:	bl	10c04 <error@plt>
   1141c:	ldr	r3, [pc, #52]	; 11458 <abort@plt+0x740>
   11420:	ldr	r0, [r3]
   11424:	bl	10b5c <_exit@plt>
   11428:	bl	10c70 <__errno_location@plt>
   1142c:	mov	r3, r5
   11430:	ldr	r2, [pc, #36]	; 1145c <abort@plt+0x744>
   11434:	ldr	r1, [r0]
   11438:	mov	r0, r4
   1143c:	bl	10c04 <error@plt>
   11440:	b	1141c <abort@plt+0x704>
   11444:	andeq	r6, r2, r4, lsr #2
   11448:	andeq	r6, r2, r0, lsr r1
   1144c:	andeq	r6, r2, r0, lsr #2
   11450:	andeq	r4, r1, r4, lsl sp
   11454:	andeq	r4, r1, r0, lsr #26
   11458:	andeq	r6, r2, ip, asr #1
   1145c:	andeq	r4, r1, r4, lsr #26
   11460:	push	{r4, r5, r6, r7, r8, lr}
   11464:	subs	r4, r2, #0
   11468:	beq	114c8 <abort@plt+0x7b0>
   1146c:	mov	r7, r0
   11470:	mov	r5, r1
   11474:	mov	r6, #0
   11478:	b	11494 <abort@plt+0x77c>
   1147c:	cmp	r0, #0
   11480:	beq	114b4 <abort@plt+0x79c>
   11484:	subs	r4, r4, r0
   11488:	add	r6, r6, r0
   1148c:	add	r5, r5, r0
   11490:	beq	114ac <abort@plt+0x794>
   11494:	mov	r2, r4
   11498:	mov	r1, r5
   1149c:	mov	r0, r7
   114a0:	bl	13538 <abort@plt+0x2820>
   114a4:	cmn	r0, #1
   114a8:	bne	1147c <abort@plt+0x764>
   114ac:	mov	r0, r6
   114b0:	pop	{r4, r5, r6, r7, r8, pc}
   114b4:	bl	10c70 <__errno_location@plt>
   114b8:	mov	r3, #28
   114bc:	str	r3, [r0]
   114c0:	mov	r0, r6
   114c4:	pop	{r4, r5, r6, r7, r8, pc}
   114c8:	mov	r6, r4
   114cc:	b	114ac <abort@plt+0x794>
   114d0:	push	{r4, r5, r6, r7, r8, lr}
   114d4:	cmp	r0, #2
   114d8:	ldr	r4, [pc, #148]	; 11574 <abort@plt+0x85c>
   114dc:	mov	r5, #0
   114e0:	sub	sp, sp, #16
   114e4:	ldr	r6, [r4]
   114e8:	str	r5, [r4]
   114ec:	beq	11508 <abort@plt+0x7f0>
   114f0:	ldr	r3, [pc, #128]	; 11578 <abort@plt+0x860>
   114f4:	mov	r2, #0
   114f8:	str	r6, [r4]
   114fc:	str	r2, [r3]
   11500:	add	sp, sp, #16
   11504:	pop	{r4, r5, r6, r7, r8, pc}
   11508:	mov	r8, r3
   1150c:	mov	r7, r2
   11510:	str	r5, [sp]
   11514:	ldr	r3, [pc, #96]	; 1157c <abort@plt+0x864>
   11518:	ldr	r2, [pc, #96]	; 11580 <abort@plt+0x868>
   1151c:	bl	10c40 <getopt_long@plt>
   11520:	cmn	r0, #1
   11524:	beq	114f0 <abort@plt+0x7d8>
   11528:	cmp	r0, #104	; 0x68
   1152c:	beq	11564 <abort@plt+0x84c>
   11530:	cmp	r0, #118	; 0x76
   11534:	bne	114f0 <abort@plt+0x7d8>
   11538:	ldr	r3, [pc, #68]	; 11584 <abort@plt+0x86c>
   1153c:	add	ip, sp, #48	; 0x30
   11540:	mov	r2, r8
   11544:	ldr	r0, [r3]
   11548:	mov	r1, r7
   1154c:	str	ip, [sp]
   11550:	ldr	r3, [sp, #40]	; 0x28
   11554:	str	ip, [sp, #12]
   11558:	bl	13978 <abort@plt+0x2c60>
   1155c:	mov	r0, r5
   11560:	bl	10c58 <exit@plt>
   11564:	mov	r0, r5
   11568:	ldr	r3, [sp, #44]	; 0x2c
   1156c:	blx	r3
   11570:	b	114f0 <abort@plt+0x7d8>
   11574:	andeq	r6, r2, r8, lsr #2
   11578:	andeq	r6, r2, r8, lsl r1
   1157c:	andeq	r4, r1, r8, lsr #26
   11580:	andeq	r4, r1, r8, asr sp
   11584:	andeq	r6, r2, r4, lsr #2
   11588:	push	{r4, r5, r6, r7, r8, lr}
   1158c:	sub	sp, sp, #16
   11590:	ldr	r5, [pc, #176]	; 11648 <abort@plt+0x930>
   11594:	ldrb	r8, [sp, #44]	; 0x2c
   11598:	ldr	r4, [pc, #172]	; 1164c <abort@plt+0x934>
   1159c:	ldr	lr, [pc, #172]	; 11650 <abort@plt+0x938>
   115a0:	cmp	r8, #0
   115a4:	mov	r6, r2
   115a8:	movne	r2, r5
   115ac:	mov	r5, #0
   115b0:	mov	ip, #1
   115b4:	moveq	r2, lr
   115b8:	mov	r7, r3
   115bc:	str	r5, [sp]
   115c0:	ldr	r3, [pc, #140]	; 11654 <abort@plt+0x93c>
   115c4:	ldr	r8, [r4]
   115c8:	str	ip, [r4]
   115cc:	bl	10c40 <getopt_long@plt>
   115d0:	cmn	r0, #1
   115d4:	beq	11624 <abort@plt+0x90c>
   115d8:	cmp	r0, #104	; 0x68
   115dc:	beq	11630 <abort@plt+0x918>
   115e0:	cmp	r0, #118	; 0x76
   115e4:	bne	11614 <abort@plt+0x8fc>
   115e8:	ldr	r3, [pc, #104]	; 11658 <abort@plt+0x940>
   115ec:	add	ip, sp, #52	; 0x34
   115f0:	mov	r2, r7
   115f4:	ldr	r0, [r3]
   115f8:	mov	r1, r6
   115fc:	str	ip, [sp]
   11600:	ldr	r3, [sp, #40]	; 0x28
   11604:	str	ip, [sp, #12]
   11608:	bl	13978 <abort@plt+0x2c60>
   1160c:	mov	r0, r5
   11610:	bl	10c58 <exit@plt>
   11614:	ldr	r3, [pc, #64]	; 1165c <abort@plt+0x944>
   11618:	ldr	r0, [r3]
   1161c:	ldr	r3, [sp, #48]	; 0x30
   11620:	blx	r3
   11624:	str	r8, [r4]
   11628:	add	sp, sp, #16
   1162c:	pop	{r4, r5, r6, r7, r8, pc}
   11630:	mov	r0, r5
   11634:	ldr	r3, [sp, #48]	; 0x30
   11638:	blx	r3
   1163c:	str	r8, [r4]
   11640:	add	sp, sp, #16
   11644:	pop	{r4, r5, r6, r7, r8, pc}
   11648:	andeq	r4, r1, r4, lsl #22
   1164c:	andeq	r6, r2, r8, lsr #2
   11650:	andeq	r4, r1, r8, asr sp
   11654:	andeq	r4, r1, r8, lsr #26
   11658:	andeq	r6, r2, r4, lsr #2
   1165c:	andeq	r6, r2, ip, asr #1
   11660:	push	{r4, r5, r6, lr}
   11664:	subs	r4, r0, #0
   11668:	beq	116dc <abort@plt+0x9c4>
   1166c:	mov	r1, #47	; 0x2f
   11670:	bl	10ce8 <strrchr@plt>
   11674:	subs	r5, r0, #0
   11678:	beq	116c8 <abort@plt+0x9b0>
   1167c:	add	r6, r5, #1
   11680:	sub	r3, r6, r4
   11684:	cmp	r3, #6
   11688:	ble	116c8 <abort@plt+0x9b0>
   1168c:	mov	r2, #7
   11690:	ldr	r1, [pc, #96]	; 116f8 <abort@plt+0x9e0>
   11694:	sub	r0, r5, #6
   11698:	bl	10d0c <strncmp@plt>
   1169c:	cmp	r0, #0
   116a0:	bne	116c8 <abort@plt+0x9b0>
   116a4:	mov	r2, #3
   116a8:	ldr	r1, [pc, #76]	; 116fc <abort@plt+0x9e4>
   116ac:	mov	r0, r6
   116b0:	bl	10d0c <strncmp@plt>
   116b4:	cmp	r0, #0
   116b8:	movne	r4, r6
   116bc:	ldreq	r3, [pc, #60]	; 11700 <abort@plt+0x9e8>
   116c0:	addeq	r4, r5, #4
   116c4:	streq	r4, [r3]
   116c8:	ldr	r2, [pc, #52]	; 11704 <abort@plt+0x9ec>
   116cc:	ldr	r3, [pc, #52]	; 11708 <abort@plt+0x9f0>
   116d0:	str	r4, [r2]
   116d4:	str	r4, [r3]
   116d8:	pop	{r4, r5, r6, pc}
   116dc:	ldr	r3, [pc, #40]	; 1170c <abort@plt+0x9f4>
   116e0:	mov	r2, #55	; 0x37
   116e4:	mov	r1, #1
   116e8:	ldr	r3, [r3]
   116ec:	ldr	r0, [pc, #28]	; 11710 <abort@plt+0x9f8>
   116f0:	bl	10bc8 <fwrite@plt>
   116f4:	bl	10d18 <abort@plt>
   116f8:	andeq	r4, r1, r4, lsr #27
   116fc:	andeq	r4, r1, ip, lsr #27
   11700:	andeq	r6, r2, r0, lsl r1
   11704:	andeq	r6, r2, r8, lsr r1
   11708:	andeq	r6, r2, r4, lsl r1
   1170c:	andeq	r6, r2, r0, lsr #2
   11710:	andeq	r4, r1, ip, ror #26
   11714:	push	{r4, r5, r6, lr}
   11718:	mov	r2, #48	; 0x30
   1171c:	mov	r4, r1
   11720:	mov	r1, #0
   11724:	mov	r5, r0
   11728:	bl	10c88 <memset@plt>
   1172c:	cmp	r4, #10
   11730:	beq	11740 <abort@plt+0xa28>
   11734:	str	r4, [r5]
   11738:	mov	r0, r5
   1173c:	pop	{r4, r5, r6, pc}
   11740:	bl	10d18 <abort@plt>
   11744:	push	{r4, r5, r6, lr}
   11748:	mov	r4, r0
   1174c:	mov	r5, r1
   11750:	bl	1438c <abort@plt+0x3674>
   11754:	ldrb	r3, [r0]
   11758:	bic	r3, r3, #32
   1175c:	cmp	r3, #85	; 0x55
   11760:	bne	117c0 <abort@plt+0xaa8>
   11764:	ldrb	r3, [r0, #1]
   11768:	bic	r3, r3, #32
   1176c:	cmp	r3, #84	; 0x54
   11770:	bne	117fc <abort@plt+0xae4>
   11774:	ldrb	r3, [r0, #2]
   11778:	bic	r3, r3, #32
   1177c:	cmp	r3, #70	; 0x46
   11780:	bne	117fc <abort@plt+0xae4>
   11784:	ldrb	r3, [r0, #3]
   11788:	cmp	r3, #45	; 0x2d
   1178c:	bne	117fc <abort@plt+0xae4>
   11790:	ldrb	r3, [r0, #4]
   11794:	cmp	r3, #56	; 0x38
   11798:	bne	117fc <abort@plt+0xae4>
   1179c:	ldrb	r3, [r0, #5]
   117a0:	cmp	r3, #0
   117a4:	bne	117fc <abort@plt+0xae4>
   117a8:	ldrb	r2, [r4]
   117ac:	ldr	r3, [pc, #152]	; 1184c <abort@plt+0xb34>
   117b0:	ldr	r0, [pc, #152]	; 11850 <abort@plt+0xb38>
   117b4:	cmp	r2, #96	; 0x60
   117b8:	movne	r0, r3
   117bc:	pop	{r4, r5, r6, pc}
   117c0:	cmp	r3, #71	; 0x47
   117c4:	bne	117fc <abort@plt+0xae4>
   117c8:	ldrb	r3, [r0, #1]
   117cc:	bic	r3, r3, #32
   117d0:	cmp	r3, #66	; 0x42
   117d4:	bne	117fc <abort@plt+0xae4>
   117d8:	ldrb	r3, [r0, #2]
   117dc:	cmp	r3, #49	; 0x31
   117e0:	bne	117fc <abort@plt+0xae4>
   117e4:	ldrb	r3, [r0, #3]
   117e8:	cmp	r3, #56	; 0x38
   117ec:	bne	117fc <abort@plt+0xae4>
   117f0:	ldrb	r3, [r0, #4]
   117f4:	cmp	r3, #48	; 0x30
   117f8:	beq	11810 <abort@plt+0xaf8>
   117fc:	ldr	r3, [pc, #80]	; 11854 <abort@plt+0xb3c>
   11800:	cmp	r5, #9
   11804:	ldr	r0, [pc, #76]	; 11858 <abort@plt+0xb40>
   11808:	movne	r0, r3
   1180c:	pop	{r4, r5, r6, pc}
   11810:	ldrb	r3, [r0, #5]
   11814:	cmp	r3, #51	; 0x33
   11818:	bne	117fc <abort@plt+0xae4>
   1181c:	ldrb	r3, [r0, #6]
   11820:	cmp	r3, #48	; 0x30
   11824:	bne	117fc <abort@plt+0xae4>
   11828:	ldrb	r3, [r0, #7]
   1182c:	cmp	r3, #0
   11830:	bne	117fc <abort@plt+0xae4>
   11834:	ldrb	r2, [r4]
   11838:	ldr	r3, [pc, #28]	; 1185c <abort@plt+0xb44>
   1183c:	ldr	r0, [pc, #28]	; 11860 <abort@plt+0xb48>
   11840:	cmp	r2, #96	; 0x60
   11844:	movne	r0, r3
   11848:	pop	{r4, r5, r6, pc}
   1184c:	andeq	r4, r1, r8, lsl #28
   11850:	andeq	r4, r1, r4, lsl #28
   11854:	andeq	r4, r1, r8, lsl lr
   11858:	andeq	r4, r1, r4, lsl lr
   1185c:	andeq	r4, r1, r0, lsl lr
   11860:	andeq	r4, r1, ip, lsl #28
   11864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11868:	sub	sp, sp, #116	; 0x74
   1186c:	mov	sl, r0
   11870:	str	r3, [sp, #24]
   11874:	mov	r3, #1
   11878:	mov	r8, r1
   1187c:	str	r2, [sp, #56]	; 0x38
   11880:	str	r3, [sp, #36]	; 0x24
   11884:	bl	10be0 <__ctype_get_mb_cur_max@plt>
   11888:	ldr	r3, [sp, #156]	; 0x9c
   1188c:	mov	fp, r8
   11890:	mov	r2, #0
   11894:	lsr	r3, r3, #1
   11898:	and	r3, r3, #1
   1189c:	str	r2, [sp, #68]	; 0x44
   118a0:	str	r3, [sp, #28]
   118a4:	str	r2, [sp, #40]	; 0x28
   118a8:	str	r2, [sp, #44]	; 0x2c
   118ac:	str	r2, [sp, #52]	; 0x34
   118b0:	str	r2, [sp, #64]	; 0x40
   118b4:	str	r2, [sp, #72]	; 0x48
   118b8:	str	sl, [sp, #32]
   118bc:	str	r0, [sp, #76]	; 0x4c
   118c0:	ldr	r3, [sp, #152]	; 0x98
   118c4:	cmp	r3, #10
   118c8:	ldrls	pc, [pc, r3, lsl #2]
   118cc:	b	12a8c <abort@plt+0x1d74>
   118d0:	strdeq	r1, [r1], -ip
   118d4:	andeq	r1, r1, r4, ror #23
   118d8:	andeq	r1, r1, r8, lsl #24
   118dc:	andeq	r1, r1, ip, lsr #24
   118e0:	andeq	r1, r1, r8, asr sp
   118e4:	andeq	r1, r1, ip, lsr #26
   118e8:	andeq	r1, r1, r4, lsl #26
   118ec:	andeq	r1, r1, r0, asr #24
   118f0:	andeq	r1, r1, r8, asr ip
   118f4:	andeq	r1, r1, r8, asr ip
   118f8:	andeq	r1, r1, r8, asr ip
   118fc:	mov	r3, #0
   11900:	mov	r7, r3
   11904:	str	r3, [sp, #28]
   11908:	ldr	r3, [sp, #44]	; 0x2c
   1190c:	mov	sl, #0
   11910:	eor	r3, r3, #1
   11914:	str	r3, [sp, #60]	; 0x3c
   11918:	ldr	r3, [sp, #24]
   1191c:	cmn	r3, #1
   11920:	beq	11e84 <abort@plt+0x116c>
   11924:	ldr	r3, [sp, #24]
   11928:	subs	r5, r3, sl
   1192c:	movne	r5, #1
   11930:	cmp	r5, #0
   11934:	beq	11e9c <abort@plt+0x1184>
   11938:	ldr	r3, [sp, #152]	; 0x98
   1193c:	ldr	r8, [sp, #44]	; 0x2c
   11940:	cmp	r3, #2
   11944:	moveq	r8, #0
   11948:	andne	r8, r8, #1
   1194c:	ldr	r3, [sp, #52]	; 0x34
   11950:	adds	r9, r3, #0
   11954:	movne	r9, #1
   11958:	ands	r6, r9, r8
   1195c:	beq	12304 <abort@plt+0x15ec>
   11960:	ldr	r2, [sp, #52]	; 0x34
   11964:	ldr	r1, [sp, #24]
   11968:	cmp	r2, #1
   1196c:	mov	r3, r2
   11970:	movls	r3, #0
   11974:	movhi	r3, #1
   11978:	cmn	r1, #1
   1197c:	movne	r3, #0
   11980:	cmp	r3, #0
   11984:	add	r4, sl, r2
   11988:	beq	11998 <abort@plt+0xc80>
   1198c:	ldr	r0, [sp, #56]	; 0x38
   11990:	bl	10c64 <strlen@plt>
   11994:	str	r0, [sp, #24]
   11998:	ldr	r3, [sp, #24]
   1199c:	cmp	r3, r4
   119a0:	ldr	r3, [sp, #56]	; 0x38
   119a4:	add	r3, r3, sl
   119a8:	str	r3, [sp, #48]	; 0x30
   119ac:	bcc	12310 <abort@plt+0x15f8>
   119b0:	mov	r0, r3
   119b4:	ldr	r2, [sp, #52]	; 0x34
   119b8:	ldr	r1, [sp, #64]	; 0x40
   119bc:	bl	10b80 <memcmp@plt>
   119c0:	cmp	r0, #0
   119c4:	bne	12310 <abort@plt+0x15f8>
   119c8:	ldr	r3, [sp, #28]
   119cc:	cmp	r3, #0
   119d0:	bne	12b8c <abort@plt+0x1e74>
   119d4:	ldr	r3, [sp, #48]	; 0x30
   119d8:	ldrb	r4, [r3]
   119dc:	cmp	r4, #126	; 0x7e
   119e0:	ldrls	pc, [pc, r4, lsl #2]
   119e4:	b	122a4 <abort@plt+0x158c>
   119e8:	andeq	r2, r1, r8, asr #1
   119ec:	andeq	r2, r1, r4, lsr #5
   119f0:	andeq	r2, r1, r4, lsr #5
   119f4:	andeq	r2, r1, r4, lsr #5
   119f8:	andeq	r2, r1, r4, lsr #5
   119fc:	andeq	r2, r1, r4, lsr #5
   11a00:	andeq	r2, r1, r4, lsr #5
   11a04:	andeq	r2, r1, ip, lsr #1
   11a08:	muleq	r1, r0, r0
   11a0c:	andeq	r2, r1, ip, lsl #5
   11a10:	strdeq	r1, [r1], -r0
   11a14:	ldrdeq	r1, [r1], -r4
   11a18:	andeq	r2, r1, r8, ror #4
   11a1c:	andeq	r2, r1, r4, asr #4
   11a20:	andeq	r2, r1, r4, lsr #5
   11a24:	andeq	r2, r1, r4, lsr #5
   11a28:	andeq	r2, r1, r4, lsr #5
   11a2c:	andeq	r2, r1, r4, lsr #5
   11a30:	andeq	r2, r1, r4, lsr #5
   11a34:	andeq	r2, r1, r4, lsr #5
   11a38:	andeq	r2, r1, r4, lsr #5
   11a3c:	andeq	r2, r1, r4, lsr #5
   11a40:	andeq	r2, r1, r4, lsr #5
   11a44:	andeq	r2, r1, r4, lsr #5
   11a48:	andeq	r2, r1, r4, lsr #5
   11a4c:	andeq	r2, r1, r4, lsr #5
   11a50:	andeq	r2, r1, r4, lsr #5
   11a54:	andeq	r2, r1, r4, lsr #5
   11a58:	andeq	r2, r1, r4, lsr #5
   11a5c:	andeq	r2, r1, r4, lsr #5
   11a60:	andeq	r2, r1, r4, lsr #5
   11a64:	andeq	r2, r1, r4, lsr #5
   11a68:	andeq	r2, r1, r4, lsl #5
   11a6c:			; <UNDEFINED> instruction: 0x000121b8
   11a70:			; <UNDEFINED> instruction: 0x000121b8
   11a74:	andeq	r1, r1, r8, asr #27
   11a78:			; <UNDEFINED> instruction: 0x000121b8
   11a7c:	andeq	r2, r1, r0, asr r2
   11a80:			; <UNDEFINED> instruction: 0x000121b8
   11a84:	andeq	r2, r1, r4, lsr #4
   11a88:			; <UNDEFINED> instruction: 0x000121b8
   11a8c:			; <UNDEFINED> instruction: 0x000121b8
   11a90:			; <UNDEFINED> instruction: 0x000121b8
   11a94:	andeq	r2, r1, r0, asr r2
   11a98:	andeq	r2, r1, r0, asr r2
   11a9c:	andeq	r2, r1, r0, asr r2
   11aa0:	andeq	r2, r1, r0, asr r2
   11aa4:	andeq	r2, r1, r0, asr r2
   11aa8:	andeq	r2, r1, r0, asr r2
   11aac:	andeq	r2, r1, r0, asr r2
   11ab0:	andeq	r2, r1, r0, asr r2
   11ab4:	andeq	r2, r1, r0, asr r2
   11ab8:	andeq	r2, r1, r0, asr r2
   11abc:	andeq	r2, r1, r0, asr r2
   11ac0:	andeq	r2, r1, r0, asr r2
   11ac4:	andeq	r2, r1, r0, asr r2
   11ac8:	andeq	r2, r1, r0, asr r2
   11acc:	andeq	r2, r1, r0, asr r2
   11ad0:	andeq	r2, r1, r0, asr r2
   11ad4:			; <UNDEFINED> instruction: 0x000121b8
   11ad8:			; <UNDEFINED> instruction: 0x000121b8
   11adc:			; <UNDEFINED> instruction: 0x000121b8
   11ae0:			; <UNDEFINED> instruction: 0x000121b8
   11ae4:	strdeq	r2, [r1], -r4
   11ae8:	andeq	r2, r1, r4, lsr #5
   11aec:	andeq	r2, r1, r0, asr r2
   11af0:	andeq	r2, r1, r0, asr r2
   11af4:	andeq	r2, r1, r0, asr r2
   11af8:	andeq	r2, r1, r0, asr r2
   11afc:	andeq	r2, r1, r0, asr r2
   11b00:	andeq	r2, r1, r0, asr r2
   11b04:	andeq	r2, r1, r0, asr r2
   11b08:	andeq	r2, r1, r0, asr r2
   11b0c:	andeq	r2, r1, r0, asr r2
   11b10:	andeq	r2, r1, r0, asr r2
   11b14:	andeq	r2, r1, r0, asr r2
   11b18:	andeq	r2, r1, r0, asr r2
   11b1c:	andeq	r2, r1, r0, asr r2
   11b20:	andeq	r2, r1, r0, asr r2
   11b24:	andeq	r2, r1, r0, asr r2
   11b28:	andeq	r2, r1, r0, asr r2
   11b2c:	andeq	r2, r1, r0, asr r2
   11b30:	andeq	r2, r1, r0, asr r2
   11b34:	andeq	r2, r1, r0, asr r2
   11b38:	andeq	r2, r1, r0, asr r2
   11b3c:	andeq	r2, r1, r0, asr r2
   11b40:	andeq	r2, r1, r0, asr r2
   11b44:	andeq	r2, r1, r0, asr r2
   11b48:	andeq	r2, r1, r0, asr r2
   11b4c:	andeq	r2, r1, r0, asr r2
   11b50:	andeq	r2, r1, r0, asr r2
   11b54:			; <UNDEFINED> instruction: 0x000121b8
   11b58:	andeq	r1, r1, r4, lsl pc
   11b5c:	andeq	r2, r1, r0, asr r2
   11b60:			; <UNDEFINED> instruction: 0x000121b8
   11b64:	andeq	r2, r1, r0, asr r2
   11b68:			; <UNDEFINED> instruction: 0x000121b8
   11b6c:	andeq	r2, r1, r0, asr r2
   11b70:	andeq	r2, r1, r0, asr r2
   11b74:	andeq	r2, r1, r0, asr r2
   11b78:	andeq	r2, r1, r0, asr r2
   11b7c:	andeq	r2, r1, r0, asr r2
   11b80:	andeq	r2, r1, r0, asr r2
   11b84:	andeq	r2, r1, r0, asr r2
   11b88:	andeq	r2, r1, r0, asr r2
   11b8c:	andeq	r2, r1, r0, asr r2
   11b90:	andeq	r2, r1, r0, asr r2
   11b94:	andeq	r2, r1, r0, asr r2
   11b98:	andeq	r2, r1, r0, asr r2
   11b9c:	andeq	r2, r1, r0, asr r2
   11ba0:	andeq	r2, r1, r0, asr r2
   11ba4:	andeq	r2, r1, r0, asr r2
   11ba8:	andeq	r2, r1, r0, asr r2
   11bac:	andeq	r2, r1, r0, asr r2
   11bb0:	andeq	r2, r1, r0, asr r2
   11bb4:	andeq	r2, r1, r0, asr r2
   11bb8:	andeq	r2, r1, r0, asr r2
   11bbc:	andeq	r2, r1, r0, asr r2
   11bc0:	andeq	r2, r1, r0, asr r2
   11bc4:	andeq	r2, r1, r0, asr r2
   11bc8:	andeq	r2, r1, r0, asr r2
   11bcc:	andeq	r2, r1, r0, asr r2
   11bd0:	andeq	r2, r1, r0, asr r2
   11bd4:	andeq	r1, r1, r8, lsr #27
   11bd8:			; <UNDEFINED> instruction: 0x000121b8
   11bdc:	andeq	r1, r1, r8, lsr #27
   11be0:	andeq	r1, r1, r8, asr #27
   11be4:	mov	r3, #1
   11be8:	str	r3, [sp, #28]
   11bec:	str	r3, [sp, #52]	; 0x34
   11bf0:	ldr	r3, [pc, #4000]	; 12b98 <abort@plt+0x1e80>
   11bf4:	mov	r7, #0
   11bf8:	str	r3, [sp, #64]	; 0x40
   11bfc:	mov	r3, #2
   11c00:	str	r3, [sp, #152]	; 0x98
   11c04:	b	11908 <abort@plt+0xbf0>
   11c08:	ldr	r3, [sp, #28]
   11c0c:	cmp	r3, #0
   11c10:	beq	11d6c <abort@plt+0x1054>
   11c14:	mov	r3, #1
   11c18:	str	r3, [sp, #52]	; 0x34
   11c1c:	ldr	r3, [pc, #3956]	; 12b98 <abort@plt+0x1e80>
   11c20:	mov	r7, #0
   11c24:	str	r3, [sp, #64]	; 0x40
   11c28:	b	11908 <abort@plt+0xbf0>
   11c2c:	mov	r3, #1
   11c30:	str	r3, [sp, #44]	; 0x2c
   11c34:	str	r3, [sp, #52]	; 0x34
   11c38:	str	r3, [sp, #28]
   11c3c:	b	11bf0 <abort@plt+0xed8>
   11c40:	mov	r3, #0
   11c44:	str	r3, [sp, #28]
   11c48:	mov	r3, #1
   11c4c:	str	r3, [sp, #44]	; 0x2c
   11c50:	mov	r7, #0
   11c54:	b	11908 <abort@plt+0xbf0>
   11c58:	ldr	r3, [sp, #152]	; 0x98
   11c5c:	cmp	r3, #10
   11c60:	beq	11ca4 <abort@plt+0xf8c>
   11c64:	mov	r2, #5
   11c68:	ldr	r1, [pc, #3884]	; 12b9c <abort@plt+0x1e84>
   11c6c:	mov	r0, #0
   11c70:	bl	10b98 <dcgettext@plt>
   11c74:	ldr	r2, [pc, #3872]	; 12b9c <abort@plt+0x1e84>
   11c78:	cmp	r0, r2
   11c7c:	str	r0, [sp, #164]	; 0xa4
   11c80:	beq	12c88 <abort@plt+0x1f70>
   11c84:	mov	r2, #5
   11c88:	ldr	r1, [pc, #3848]	; 12b98 <abort@plt+0x1e80>
   11c8c:	mov	r0, #0
   11c90:	bl	10b98 <dcgettext@plt>
   11c94:	ldr	r2, [pc, #3836]	; 12b98 <abort@plt+0x1e80>
   11c98:	cmp	r0, r2
   11c9c:	str	r0, [sp, #168]	; 0xa8
   11ca0:	beq	12c78 <abort@plt+0x1f60>
   11ca4:	ldr	r7, [sp, #28]
   11ca8:	cmp	r7, #0
   11cac:	movne	r7, #0
   11cb0:	bne	11ce4 <abort@plt+0xfcc>
   11cb4:	ldr	r3, [sp, #164]	; 0xa4
   11cb8:	ldrb	r3, [r3]
   11cbc:	cmp	r3, #0
   11cc0:	beq	12c98 <abort@plt+0x1f80>
   11cc4:	ldr	r2, [sp, #164]	; 0xa4
   11cc8:	ldr	r1, [sp, #32]
   11ccc:	cmp	fp, r7
   11cd0:	strbhi	r3, [r1, r7]
   11cd4:	ldrb	r3, [r2, #1]!
   11cd8:	add	r7, r7, #1
   11cdc:	cmp	r3, #0
   11ce0:	bne	11ccc <abort@plt+0xfb4>
   11ce4:	ldr	r0, [sp, #168]	; 0xa8
   11ce8:	bl	10c64 <strlen@plt>
   11cec:	ldr	r3, [sp, #168]	; 0xa8
   11cf0:	str	r3, [sp, #64]	; 0x40
   11cf4:	mov	r3, #1
   11cf8:	str	r3, [sp, #44]	; 0x2c
   11cfc:	str	r0, [sp, #52]	; 0x34
   11d00:	b	11908 <abort@plt+0xbf0>
   11d04:	mov	r3, #1
   11d08:	str	r3, [sp, #44]	; 0x2c
   11d0c:	str	r3, [sp, #52]	; 0x34
   11d10:	str	r3, [sp, #28]
   11d14:	ldr	r3, [pc, #3716]	; 12ba0 <abort@plt+0x1e88>
   11d18:	mov	r7, #0
   11d1c:	str	r3, [sp, #64]	; 0x40
   11d20:	mov	r3, #5
   11d24:	str	r3, [sp, #152]	; 0x98
   11d28:	b	11908 <abort@plt+0xbf0>
   11d2c:	ldr	r3, [sp, #28]
   11d30:	cmp	r3, #0
   11d34:	beq	12a34 <abort@plt+0x1d1c>
   11d38:	ldr	r3, [sp, #28]
   11d3c:	mov	r7, #0
   11d40:	str	r3, [sp, #44]	; 0x2c
   11d44:	mov	r3, #1
   11d48:	str	r3, [sp, #52]	; 0x34
   11d4c:	ldr	r3, [pc, #3660]	; 12ba0 <abort@plt+0x1e88>
   11d50:	str	r3, [sp, #64]	; 0x40
   11d54:	b	11908 <abort@plt+0xbf0>
   11d58:	ldr	r3, [sp, #28]
   11d5c:	cmp	r3, #0
   11d60:	mov	r3, #1
   11d64:	streq	r3, [sp, #44]	; 0x2c
   11d68:	bne	11bec <abort@plt+0xed4>
   11d6c:	cmp	fp, #0
   11d70:	beq	12a64 <abort@plt+0x1d4c>
   11d74:	ldr	r3, [sp, #32]
   11d78:	mov	r2, #39	; 0x27
   11d7c:	mov	r7, #1
   11d80:	strb	r2, [r3]
   11d84:	mov	r3, #0
   11d88:	str	r3, [sp, #28]
   11d8c:	mov	r3, #1
   11d90:	str	r3, [sp, #52]	; 0x34
   11d94:	ldr	r3, [pc, #3580]	; 12b98 <abort@plt+0x1e80>
   11d98:	str	r3, [sp, #64]	; 0x40
   11d9c:	mov	r3, #2
   11da0:	str	r3, [sp, #152]	; 0x98
   11da4:	b	11908 <abort@plt+0xbf0>
   11da8:	ldr	r3, [sp, #24]
   11dac:	cmn	r3, #1
   11db0:	beq	129c8 <abort@plt+0x1cb0>
   11db4:	ldr	r3, [sp, #24]
   11db8:	subs	r3, r3, #1
   11dbc:	movne	r3, #1
   11dc0:	cmp	r3, #0
   11dc4:	bne	11dd0 <abort@plt+0x10b8>
   11dc8:	cmp	sl, #0
   11dcc:	beq	121bc <abort@plt+0x14a4>
   11dd0:	ldr	r3, [sp, #152]	; 0x98
   11dd4:	mov	r5, #0
   11dd8:	sub	r2, r3, #2
   11ddc:	mov	r8, r5
   11de0:	clz	r2, r2
   11de4:	lsr	r2, r2, #5
   11de8:	ldr	r3, [sp, #60]	; 0x3c
   11dec:	ldr	r1, [sp, #28]
   11df0:	orr	r3, r2, r3
   11df4:	eor	r3, r3, #1
   11df8:	orr	r3, r1, r3
   11dfc:	tst	r3, #255	; 0xff
   11e00:	bne	1252c <abort@plt+0x1814>
   11e04:	cmp	r6, #0
   11e08:	bne	11f58 <abort@plt+0x1240>
   11e0c:	ldr	r3, [sp, #40]	; 0x28
   11e10:	eor	r8, r8, #1
   11e14:	and	r8, r8, r3
   11e18:	add	sl, sl, #1
   11e1c:	uxtb	r6, r8
   11e20:	cmp	r6, #0
   11e24:	beq	11e58 <abort@plt+0x1140>
   11e28:	cmp	fp, r7
   11e2c:	movhi	r2, #39	; 0x27
   11e30:	ldrhi	r3, [sp, #32]
   11e34:	strbhi	r2, [r3, r7]
   11e38:	add	r3, r7, #1
   11e3c:	cmp	fp, r3
   11e40:	movhi	r1, #39	; 0x27
   11e44:	ldrhi	r2, [sp, #32]
   11e48:	add	r7, r7, #2
   11e4c:	strbhi	r1, [r2, r3]
   11e50:	mov	r3, #0
   11e54:	str	r3, [sp, #40]	; 0x28
   11e58:	cmp	r7, fp
   11e5c:	ldrcc	r3, [sp, #32]
   11e60:	strbcc	r4, [r3, r7]
   11e64:	ldr	r3, [sp, #36]	; 0x24
   11e68:	cmp	r5, #0
   11e6c:	moveq	r3, #0
   11e70:	str	r3, [sp, #36]	; 0x24
   11e74:	ldr	r3, [sp, #24]
   11e78:	add	r7, r7, #1
   11e7c:	cmn	r3, #1
   11e80:	bne	11924 <abort@plt+0xc0c>
   11e84:	ldr	r3, [sp, #56]	; 0x38
   11e88:	ldrb	r5, [r3, sl]
   11e8c:	adds	r5, r5, #0
   11e90:	movne	r5, #1
   11e94:	cmp	r5, #0
   11e98:	bne	11938 <abort@plt+0xc20>
   11e9c:	ldr	r3, [sp, #152]	; 0x98
   11ea0:	ldr	r1, [sp, #28]
   11ea4:	sub	r3, r3, #2
   11ea8:	clz	r3, r3
   11eac:	lsr	r3, r3, #5
   11eb0:	and	r9, r1, r3
   11eb4:	cmp	r7, #0
   11eb8:	movne	r2, #0
   11ebc:	andeq	r2, r9, #1
   11ec0:	cmp	r2, #0
   11ec4:	bne	128a0 <abort@plt+0x1b88>
   11ec8:	eor	r2, r1, #1
   11ecc:	ands	r3, r3, r2
   11ed0:	beq	12d5c <abort@plt+0x2044>
   11ed4:	ldr	r2, [sp, #68]	; 0x44
   11ed8:	cmp	r2, #0
   11edc:	beq	12d48 <abort@plt+0x2030>
   11ee0:	ldr	r3, [sp, #36]	; 0x24
   11ee4:	cmp	r3, #0
   11ee8:	bne	12d00 <abort@plt+0x1fe8>
   11eec:	ldr	r2, [sp, #72]	; 0x48
   11ef0:	clz	r3, fp
   11ef4:	cmp	r2, #0
   11ef8:	lsr	r3, r3, #5
   11efc:	moveq	r3, #0
   11f00:	cmp	r3, #0
   11f04:	beq	12ca0 <abort@plt+0x1f88>
   11f08:	str	r3, [sp, #68]	; 0x44
   11f0c:	ldr	fp, [sp, #72]	; 0x48
   11f10:	b	118c0 <abort@plt+0xba8>
   11f14:	ldr	r3, [sp, #152]	; 0x98
   11f18:	cmp	r3, #2
   11f1c:	beq	12570 <abort@plt+0x1858>
   11f20:	ldr	r3, [sp, #44]	; 0x2c
   11f24:	ldr	r2, [sp, #28]
   11f28:	and	r2, r3, r2
   11f2c:	ands	r2, r9, r2
   11f30:	bne	1257c <abort@plt+0x1864>
   11f34:	mov	r4, #92	; 0x5c
   11f38:	mov	r3, r4
   11f3c:	ldr	r1, [sp, #44]	; 0x2c
   11f40:	cmp	r1, #0
   11f44:	moveq	r5, #0
   11f48:	moveq	r8, r1
   11f4c:	beq	11de8 <abort@plt+0x10d0>
   11f50:	mov	r4, r3
   11f54:	mov	r5, #0
   11f58:	ldr	r3, [sp, #28]
   11f5c:	cmp	r3, #0
   11f60:	bne	12564 <abort@plt+0x184c>
   11f64:	ldr	r3, [sp, #40]	; 0x28
   11f68:	eor	r9, r3, #1
   11f6c:	and	r9, r9, r2
   11f70:	ands	r9, r9, #255	; 0xff
   11f74:	beq	11fb8 <abort@plt+0x12a0>
   11f78:	cmp	fp, r7
   11f7c:	movhi	r2, #39	; 0x27
   11f80:	ldrhi	r3, [sp, #32]
   11f84:	str	r9, [sp, #40]	; 0x28
   11f88:	strbhi	r2, [r3, r7]
   11f8c:	add	r3, r7, #1
   11f90:	cmp	fp, r3
   11f94:	movhi	r1, #36	; 0x24
   11f98:	ldrhi	r2, [sp, #32]
   11f9c:	strbhi	r1, [r2, r3]
   11fa0:	add	r3, r7, #2
   11fa4:	cmp	fp, r3
   11fa8:	add	r7, r7, #3
   11fac:	ldrhi	r2, [sp, #32]
   11fb0:	movhi	r1, #39	; 0x27
   11fb4:	strbhi	r1, [r2, r3]
   11fb8:	cmp	fp, r7
   11fbc:	movhi	r2, #92	; 0x5c
   11fc0:	ldrhi	r3, [sp, #32]
   11fc4:	add	sl, sl, #1
   11fc8:	strbhi	r2, [r3, r7]
   11fcc:	add	r7, r7, #1
   11fd0:	b	11e58 <abort@plt+0x1140>
   11fd4:	ldr	r3, [sp, #152]	; 0x98
   11fd8:	mov	r4, #11
   11fdc:	sub	r2, r3, #2
   11fe0:	mov	r3, #118	; 0x76
   11fe4:	clz	r2, r2
   11fe8:	lsr	r2, r2, #5
   11fec:	b	11f3c <abort@plt+0x1224>
   11ff0:	mov	r4, #10
   11ff4:	mov	r3, #110	; 0x6e
   11ff8:	ldr	r2, [sp, #152]	; 0x98
   11ffc:	ldr	r1, [sp, #28]
   12000:	sub	r2, r2, #2
   12004:	clz	r2, r2
   12008:	lsr	r2, r2, #5
   1200c:	ands	r1, r1, r2
   12010:	beq	11f3c <abort@plt+0x1224>
   12014:	ldr	sl, [sp, #32]
   12018:	mov	r8, fp
   1201c:	mov	r2, r1
   12020:	mov	r3, #2
   12024:	str	r3, [sp, #152]	; 0x98
   12028:	ldr	r9, [sp, #44]	; 0x2c
   1202c:	ldr	r3, [sp, #152]	; 0x98
   12030:	and	r9, r9, r2
   12034:	tst	r9, #255	; 0xff
   12038:	movne	r3, #4
   1203c:	str	r3, [sp, #152]	; 0x98
   12040:	ldr	r3, [sp, #156]	; 0x9c
   12044:	mov	ip, #0
   12048:	bic	r3, r3, #2
   1204c:	str	r3, [sp, #4]
   12050:	ldr	r3, [sp, #168]	; 0xa8
   12054:	ldr	r2, [sp, #56]	; 0x38
   12058:	str	r3, [sp, #16]
   1205c:	ldr	r3, [sp, #164]	; 0xa4
   12060:	mov	r1, r8
   12064:	str	r3, [sp, #12]
   12068:	ldr	r3, [sp, #152]	; 0x98
   1206c:	mov	r0, sl
   12070:	str	r3, [sp]
   12074:	str	ip, [sp, #8]
   12078:	ldr	r3, [sp, #24]
   1207c:	bl	11864 <abort@plt+0xb4c>
   12080:	mov	fp, r0
   12084:	mov	r0, fp
   12088:	add	sp, sp, #116	; 0x74
   1208c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12090:	ldr	r3, [sp, #152]	; 0x98
   12094:	mov	r4, #8
   12098:	sub	r2, r3, #2
   1209c:	mov	r3, #98	; 0x62
   120a0:	clz	r2, r2
   120a4:	lsr	r2, r2, #5
   120a8:	b	11f3c <abort@plt+0x1224>
   120ac:	ldr	r3, [sp, #152]	; 0x98
   120b0:	mov	r4, #7
   120b4:	sub	r2, r3, #2
   120b8:	mov	r3, #97	; 0x61
   120bc:	clz	r2, r2
   120c0:	lsr	r2, r2, #5
   120c4:	b	11f3c <abort@plt+0x1224>
   120c8:	ldr	r3, [sp, #44]	; 0x2c
   120cc:	cmp	r3, #0
   120d0:	beq	128b4 <abort@plt+0x1b9c>
   120d4:	ldr	r3, [sp, #28]
   120d8:	cmp	r3, #0
   120dc:	bne	12b8c <abort@plt+0x1e74>
   120e0:	ldr	r3, [sp, #152]	; 0x98
   120e4:	sub	r2, r3, #2
   120e8:	ldr	r3, [sp, #40]	; 0x28
   120ec:	clz	r2, r2
   120f0:	eor	r3, r3, #1
   120f4:	lsr	r2, r2, #5
   120f8:	ands	r3, r2, r3
   120fc:	moveq	r1, r7
   12100:	beq	12144 <abort@plt+0x142c>
   12104:	cmp	fp, r7
   12108:	movhi	r0, #39	; 0x27
   1210c:	ldrhi	r1, [sp, #32]
   12110:	str	r3, [sp, #40]	; 0x28
   12114:	strbhi	r0, [r1, r7]
   12118:	add	r1, r7, #1
   1211c:	cmp	fp, r1
   12120:	movhi	ip, #36	; 0x24
   12124:	ldrhi	r0, [sp, #32]
   12128:	strbhi	ip, [r0, r1]
   1212c:	add	r1, r7, #2
   12130:	cmp	fp, r1
   12134:	movhi	ip, #39	; 0x27
   12138:	ldrhi	r0, [sp, #32]
   1213c:	strbhi	ip, [r0, r1]
   12140:	add	r1, r7, #3
   12144:	cmp	fp, r1
   12148:	movhi	r0, #92	; 0x5c
   1214c:	ldrhi	r3, [sp, #32]
   12150:	add	r7, r1, #1
   12154:	strbhi	r0, [r3, r1]
   12158:	cmp	r8, #0
   1215c:	beq	12aa0 <abort@plt+0x1d88>
   12160:	ldr	r0, [sp, #24]
   12164:	add	r3, sl, #1
   12168:	cmp	r3, r0
   1216c:	bcs	129dc <abort@plt+0x1cc4>
   12170:	ldr	r0, [sp, #56]	; 0x38
   12174:	ldrb	r3, [r0, r3]
   12178:	sub	r3, r3, #48	; 0x30
   1217c:	cmp	r3, #9
   12180:	bhi	129dc <abort@plt+0x1cc4>
   12184:	cmp	fp, r7
   12188:	movhi	r3, #48	; 0x30
   1218c:	ldrhi	r0, [sp, #32]
   12190:	ldr	r5, [sp, #28]
   12194:	mov	r4, #48	; 0x30
   12198:	strbhi	r3, [r0, r7]
   1219c:	add	r3, r1, #2
   121a0:	cmp	fp, r3
   121a4:	movhi	r0, #48	; 0x30
   121a8:	ldrhi	ip, [sp, #32]
   121ac:	add	r7, r1, #3
   121b0:	strbhi	r0, [ip, r3]
   121b4:	b	11de8 <abort@plt+0x10d0>
   121b8:	mov	r5, #0
   121bc:	ldr	r3, [sp, #152]	; 0x98
   121c0:	sub	r2, r3, #2
   121c4:	ldr	r3, [sp, #28]
   121c8:	clz	r2, r2
   121cc:	lsr	r2, r2, #5
   121d0:	ands	r8, r3, r2
   121d4:	beq	11de8 <abort@plt+0x10d0>
   121d8:	mov	r3, r8
   121dc:	mov	r2, r3
   121e0:	mov	r3, #2
   121e4:	ldr	sl, [sp, #32]
   121e8:	mov	r8, fp
   121ec:	str	r3, [sp, #152]	; 0x98
   121f0:	b	12028 <abort@plt+0x1310>
   121f4:	ldr	r3, [sp, #152]	; 0x98
   121f8:	cmp	r3, #2
   121fc:	beq	12920 <abort@plt+0x1c08>
   12200:	cmp	r3, #5
   12204:	beq	128e0 <abort@plt+0x1bc8>
   12208:	mov	r5, #0
   1220c:	sub	r2, r3, #2
   12210:	mov	r8, r5
   12214:	clz	r2, r2
   12218:	mov	r4, #63	; 0x3f
   1221c:	lsr	r2, r2, #5
   12220:	b	11de8 <abort@plt+0x10d0>
   12224:	ldr	r3, [sp, #152]	; 0x98
   12228:	cmp	r3, #2
   1222c:	beq	12940 <abort@plt+0x1c28>
   12230:	mov	r2, #0
   12234:	str	r5, [sp, #68]	; 0x44
   12238:	mov	r8, r2
   1223c:	mov	r4, #39	; 0x27
   12240:	b	11de8 <abort@plt+0x10d0>
   12244:	mov	r4, #13
   12248:	mov	r3, #114	; 0x72
   1224c:	b	11ff8 <abort@plt+0x12e0>
   12250:	ldr	r3, [sp, #152]	; 0x98
   12254:	mov	r8, #0
   12258:	sub	r2, r3, #2
   1225c:	clz	r2, r2
   12260:	lsr	r2, r2, #5
   12264:	b	11de8 <abort@plt+0x10d0>
   12268:	ldr	r3, [sp, #152]	; 0x98
   1226c:	mov	r4, #12
   12270:	sub	r2, r3, #2
   12274:	mov	r3, #102	; 0x66
   12278:	clz	r2, r2
   1227c:	lsr	r2, r2, #5
   12280:	b	11f3c <abort@plt+0x1224>
   12284:	mov	r5, r6
   12288:	b	121bc <abort@plt+0x14a4>
   1228c:	ldr	r3, [sp, #152]	; 0x98
   12290:	sub	r2, r3, #2
   12294:	mov	r3, #116	; 0x74
   12298:	clz	r2, r2
   1229c:	lsr	r2, r2, #5
   122a0:	b	11f3c <abort@plt+0x1224>
   122a4:	ldr	r8, [sp, #76]	; 0x4c
   122a8:	cmp	r8, #1
   122ac:	bne	1275c <abort@plt+0x1a44>
   122b0:	bl	10c4c <__ctype_b_loc@plt>
   122b4:	sxth	r3, r4
   122b8:	mov	ip, r8
   122bc:	lsl	r3, r3, #1
   122c0:	ldr	r2, [r0]
   122c4:	ldrh	r3, [r2, r3]
   122c8:	and	r3, r3, #16384	; 0x4000
   122cc:	cmp	r3, #0
   122d0:	movne	r5, #1
   122d4:	moveq	r5, #0
   122d8:	moveq	r3, #1
   122dc:	movne	r3, #0
   122e0:	ldr	r2, [sp, #44]	; 0x2c
   122e4:	and	r3, r3, r2
   122e8:	ands	r8, r3, #255	; 0xff
   122ec:	bne	125f0 <abort@plt+0x18d8>
   122f0:	ldr	r3, [sp, #152]	; 0x98
   122f4:	sub	r2, r3, #2
   122f8:	clz	r2, r2
   122fc:	lsr	r2, r2, #5
   12300:	b	11de8 <abort@plt+0x10d0>
   12304:	ldr	r3, [sp, #56]	; 0x38
   12308:	add	r3, r3, sl
   1230c:	str	r3, [sp, #48]	; 0x30
   12310:	ldr	r3, [sp, #48]	; 0x30
   12314:	mov	r6, #0
   12318:	ldrb	r4, [r3]
   1231c:	cmp	r4, #126	; 0x7e
   12320:	ldrls	pc, [pc, r4, lsl #2]
   12324:	b	122a4 <abort@plt+0x158c>
   12328:	andeq	r2, r1, r8, asr #1
   1232c:	andeq	r2, r1, r4, lsr #5
   12330:	andeq	r2, r1, r4, lsr #5
   12334:	andeq	r2, r1, r4, lsr #5
   12338:	andeq	r2, r1, r4, lsr #5
   1233c:	andeq	r2, r1, r4, lsr #5
   12340:	andeq	r2, r1, r4, lsr #5
   12344:	andeq	r2, r1, ip, lsr #1
   12348:	muleq	r1, r0, r0
   1234c:	andeq	r2, r1, r4, lsr #10
   12350:	strdeq	r1, [r1], -r0
   12354:	ldrdeq	r1, [r1], -r4
   12358:	andeq	r2, r1, r8, ror #4
   1235c:	andeq	r2, r1, r4, asr #4
   12360:	andeq	r2, r1, r4, lsr #5
   12364:	andeq	r2, r1, r4, lsr #5
   12368:	andeq	r2, r1, r4, lsr #5
   1236c:	andeq	r2, r1, r4, lsr #5
   12370:	andeq	r2, r1, r4, lsr #5
   12374:	andeq	r2, r1, r4, lsr #5
   12378:	andeq	r2, r1, r4, lsr #5
   1237c:	andeq	r2, r1, r4, lsr #5
   12380:	andeq	r2, r1, r4, lsr #5
   12384:	andeq	r2, r1, r4, lsr #5
   12388:	andeq	r2, r1, r4, lsr #5
   1238c:	andeq	r2, r1, r4, lsr #5
   12390:	andeq	r2, r1, r4, lsr #5
   12394:	andeq	r2, r1, r4, lsr #5
   12398:	andeq	r2, r1, r4, lsr #5
   1239c:	andeq	r2, r1, r4, lsr #5
   123a0:	andeq	r2, r1, r4, lsr #5
   123a4:	andeq	r2, r1, r4, lsr #5
   123a8:			; <UNDEFINED> instruction: 0x000121bc
   123ac:			; <UNDEFINED> instruction: 0x000121b8
   123b0:			; <UNDEFINED> instruction: 0x000121b8
   123b4:	andeq	r1, r1, r8, asr #27
   123b8:			; <UNDEFINED> instruction: 0x000121b8
   123bc:	andeq	r2, r1, r0, asr r2
   123c0:			; <UNDEFINED> instruction: 0x000121b8
   123c4:	andeq	r2, r1, r4, lsr #4
   123c8:			; <UNDEFINED> instruction: 0x000121b8
   123cc:			; <UNDEFINED> instruction: 0x000121b8
   123d0:			; <UNDEFINED> instruction: 0x000121b8
   123d4:	andeq	r2, r1, r0, asr r2
   123d8:	andeq	r2, r1, r0, asr r2
   123dc:	andeq	r2, r1, r0, asr r2
   123e0:	andeq	r2, r1, r0, asr r2
   123e4:	andeq	r2, r1, r0, asr r2
   123e8:	andeq	r2, r1, r0, asr r2
   123ec:	andeq	r2, r1, r0, asr r2
   123f0:	andeq	r2, r1, r0, asr r2
   123f4:	andeq	r2, r1, r0, asr r2
   123f8:	andeq	r2, r1, r0, asr r2
   123fc:	andeq	r2, r1, r0, asr r2
   12400:	andeq	r2, r1, r0, asr r2
   12404:	andeq	r2, r1, r0, asr r2
   12408:	andeq	r2, r1, r0, asr r2
   1240c:	andeq	r2, r1, r0, asr r2
   12410:	andeq	r2, r1, r0, asr r2
   12414:			; <UNDEFINED> instruction: 0x000121b8
   12418:			; <UNDEFINED> instruction: 0x000121b8
   1241c:			; <UNDEFINED> instruction: 0x000121b8
   12420:			; <UNDEFINED> instruction: 0x000121b8
   12424:	strdeq	r2, [r1], -r4
   12428:	andeq	r2, r1, r4, lsr #5
   1242c:	andeq	r2, r1, r0, asr r2
   12430:	andeq	r2, r1, r0, asr r2
   12434:	andeq	r2, r1, r0, asr r2
   12438:	andeq	r2, r1, r0, asr r2
   1243c:	andeq	r2, r1, r0, asr r2
   12440:	andeq	r2, r1, r0, asr r2
   12444:	andeq	r2, r1, r0, asr r2
   12448:	andeq	r2, r1, r0, asr r2
   1244c:	andeq	r2, r1, r0, asr r2
   12450:	andeq	r2, r1, r0, asr r2
   12454:	andeq	r2, r1, r0, asr r2
   12458:	andeq	r2, r1, r0, asr r2
   1245c:	andeq	r2, r1, r0, asr r2
   12460:	andeq	r2, r1, r0, asr r2
   12464:	andeq	r2, r1, r0, asr r2
   12468:	andeq	r2, r1, r0, asr r2
   1246c:	andeq	r2, r1, r0, asr r2
   12470:	andeq	r2, r1, r0, asr r2
   12474:	andeq	r2, r1, r0, asr r2
   12478:	andeq	r2, r1, r0, asr r2
   1247c:	andeq	r2, r1, r0, asr r2
   12480:	andeq	r2, r1, r0, asr r2
   12484:	andeq	r2, r1, r0, asr r2
   12488:	andeq	r2, r1, r0, asr r2
   1248c:	andeq	r2, r1, r0, asr r2
   12490:	andeq	r2, r1, r0, asr r2
   12494:			; <UNDEFINED> instruction: 0x000121b8
   12498:	andeq	r1, r1, r4, lsl pc
   1249c:	andeq	r2, r1, r0, asr r2
   124a0:			; <UNDEFINED> instruction: 0x000121b8
   124a4:	andeq	r2, r1, r0, asr r2
   124a8:			; <UNDEFINED> instruction: 0x000121b8
   124ac:	andeq	r2, r1, r0, asr r2
   124b0:	andeq	r2, r1, r0, asr r2
   124b4:	andeq	r2, r1, r0, asr r2
   124b8:	andeq	r2, r1, r0, asr r2
   124bc:	andeq	r2, r1, r0, asr r2
   124c0:	andeq	r2, r1, r0, asr r2
   124c4:	andeq	r2, r1, r0, asr r2
   124c8:	andeq	r2, r1, r0, asr r2
   124cc:	andeq	r2, r1, r0, asr r2
   124d0:	andeq	r2, r1, r0, asr r2
   124d4:	andeq	r2, r1, r0, asr r2
   124d8:	andeq	r2, r1, r0, asr r2
   124dc:	andeq	r2, r1, r0, asr r2
   124e0:	andeq	r2, r1, r0, asr r2
   124e4:	andeq	r2, r1, r0, asr r2
   124e8:	andeq	r2, r1, r0, asr r2
   124ec:	andeq	r2, r1, r0, asr r2
   124f0:	andeq	r2, r1, r0, asr r2
   124f4:	andeq	r2, r1, r0, asr r2
   124f8:	andeq	r2, r1, r0, asr r2
   124fc:	andeq	r2, r1, r0, asr r2
   12500:	andeq	r2, r1, r0, asr r2
   12504:	andeq	r2, r1, r0, asr r2
   12508:	andeq	r2, r1, r0, asr r2
   1250c:	andeq	r2, r1, r0, asr r2
   12510:	andeq	r2, r1, r0, asr r2
   12514:	andeq	r1, r1, r8, lsr #27
   12518:			; <UNDEFINED> instruction: 0x000121b8
   1251c:	andeq	r1, r1, r8, lsr #27
   12520:	andeq	r1, r1, r8, asr #27
   12524:	mov	r3, #116	; 0x74
   12528:	b	11ff8 <abort@plt+0x12e0>
   1252c:	ldr	r3, [sp, #160]	; 0xa0
   12530:	cmp	r3, #0
   12534:	beq	11e04 <abort@plt+0x10ec>
   12538:	lsr	r3, r4, #5
   1253c:	ldr	r0, [sp, #160]	; 0xa0
   12540:	uxtb	r3, r3
   12544:	and	r1, r4, #31
   12548:	ldr	r0, [r0, r3, lsl #2]
   1254c:	lsr	r3, r0, r1
   12550:	tst	r3, #1
   12554:	beq	11e04 <abort@plt+0x10ec>
   12558:	ldr	r3, [sp, #28]
   1255c:	cmp	r3, #0
   12560:	beq	11f64 <abort@plt+0x124c>
   12564:	ldr	sl, [sp, #32]
   12568:	mov	r8, fp
   1256c:	b	12028 <abort@plt+0x1310>
   12570:	ldr	r3, [sp, #28]
   12574:	cmp	r3, #0
   12578:	bne	12acc <abort@plt+0x1db4>
   1257c:	add	sl, sl, #1
   12580:	ldr	r6, [sp, #40]	; 0x28
   12584:	mov	r5, #0
   12588:	mov	r4, #92	; 0x5c
   1258c:	b	11e20 <abort@plt+0x1108>
   12590:	cmp	r9, r8
   12594:	bne	12804 <abort@plt+0x1aec>
   12598:	ldr	r0, [sp, #100]	; 0x64
   1259c:	bl	10bbc <iswprint@plt>
   125a0:	add	r5, r5, r4
   125a4:	cmp	r0, #0
   125a8:	add	r0, sp, #104	; 0x68
   125ac:	moveq	r6, #0
   125b0:	bl	10b74 <mbsinit@plt>
   125b4:	cmp	r0, #0
   125b8:	beq	12798 <abort@plt+0x1a80>
   125bc:	mov	r2, r6
   125c0:	mov	ip, r5
   125c4:	eor	r5, r2, #1
   125c8:	ldr	r4, [sp, #80]	; 0x50
   125cc:	ldr	r6, [sp, #84]	; 0x54
   125d0:	ldr	r7, [sp, #88]	; 0x58
   125d4:	uxtb	r5, r5
   125d8:	cmp	ip, #1
   125dc:	bls	12adc <abort@plt+0x1dc4>
   125e0:	ldr	r3, [sp, #44]	; 0x2c
   125e4:	and	r8, r3, r5
   125e8:	mov	r5, r2
   125ec:	uxtb	r8, r8
   125f0:	add	r2, sl, ip
   125f4:	ldr	r0, [sp, #48]	; 0x30
   125f8:	mov	r1, #0
   125fc:	str	r5, [sp, #48]	; 0x30
   12600:	ldr	r9, [sp, #28]
   12604:	ldr	ip, [sp, #40]	; 0x28
   12608:	ldr	r3, [sp, #32]
   1260c:	ldr	r5, [sp, #152]	; 0x98
   12610:	b	126cc <abort@plt+0x19b4>
   12614:	cmp	r9, #0
   12618:	bne	129f0 <abort@plt+0x1cd8>
   1261c:	eor	r1, ip, #1
   12620:	cmp	r5, #2
   12624:	movne	r1, #0
   12628:	andeq	r1, r1, #1
   1262c:	cmp	r1, #0
   12630:	beq	12668 <abort@plt+0x1950>
   12634:	cmp	fp, r7
   12638:	movhi	ip, #39	; 0x27
   1263c:	strbhi	ip, [r3, r7]
   12640:	add	ip, r7, #1
   12644:	cmp	fp, ip
   12648:	movhi	lr, #36	; 0x24
   1264c:	strbhi	lr, [r3, ip]
   12650:	add	ip, r7, #2
   12654:	cmp	fp, ip
   12658:	movhi	lr, #39	; 0x27
   1265c:	strbhi	lr, [r3, ip]
   12660:	add	r7, r7, #3
   12664:	mov	ip, r1
   12668:	cmp	fp, r7
   1266c:	movhi	r1, #92	; 0x5c
   12670:	strbhi	r1, [r3, r7]
   12674:	add	r1, r7, #1
   12678:	cmp	fp, r1
   1267c:	lsrhi	lr, r4, #6
   12680:	addhi	lr, lr, #48	; 0x30
   12684:	strbhi	lr, [r3, r1]
   12688:	add	lr, r7, #2
   1268c:	cmp	fp, lr
   12690:	lsrhi	r1, r4, #3
   12694:	andhi	r1, r1, #7
   12698:	addhi	r1, r1, #48	; 0x30
   1269c:	add	sl, sl, #1
   126a0:	strbhi	r1, [r3, lr]
   126a4:	and	r4, r4, #7
   126a8:	cmp	r2, sl
   126ac:	add	r4, r4, #48	; 0x30
   126b0:	add	r7, r7, #3
   126b4:	bls	12a14 <abort@plt+0x1cfc>
   126b8:	mov	r1, r8
   126bc:	cmp	fp, r7
   126c0:	strbhi	r4, [r3, r7]
   126c4:	ldrb	r4, [r0, #1]!
   126c8:	add	r7, r7, #1
   126cc:	cmp	r8, #0
   126d0:	bne	12614 <abort@plt+0x18fc>
   126d4:	cmp	r6, #0
   126d8:	bne	12728 <abort@plt+0x1a10>
   126dc:	eor	r6, r1, #1
   126e0:	and	r6, r6, ip
   126e4:	add	sl, sl, #1
   126e8:	cmp	r2, sl
   126ec:	uxtb	r6, r6
   126f0:	bls	12750 <abort@plt+0x1a38>
   126f4:	cmp	r6, #0
   126f8:	beq	126bc <abort@plt+0x19a4>
   126fc:	cmp	fp, r7
   12700:	movhi	ip, #39	; 0x27
   12704:	strbhi	ip, [r3, r7]
   12708:	add	ip, r7, #1
   1270c:	cmp	fp, ip
   12710:	movhi	lr, #39	; 0x27
   12714:	strbhi	lr, [r3, ip]
   12718:	add	r7, r7, #2
   1271c:	mov	r6, r8
   12720:	mov	ip, r8
   12724:	b	126bc <abort@plt+0x19a4>
   12728:	cmp	fp, r7
   1272c:	eor	r6, r1, #1
   12730:	movhi	lr, #92	; 0x5c
   12734:	and	r6, r6, ip
   12738:	add	sl, sl, #1
   1273c:	strbhi	lr, [r3, r7]
   12740:	cmp	r2, sl
   12744:	add	r7, r7, #1
   12748:	uxtb	r6, r6
   1274c:	bhi	126f4 <abort@plt+0x19dc>
   12750:	str	ip, [sp, #40]	; 0x28
   12754:	ldr	r5, [sp, #48]	; 0x30
   12758:	b	11e20 <abort@plt+0x1108>
   1275c:	ldr	r3, [sp, #24]
   12760:	cmn	r3, #1
   12764:	mov	r3, #0
   12768:	str	r3, [sp, #104]	; 0x68
   1276c:	str	r3, [sp, #108]	; 0x6c
   12770:	beq	12a90 <abort@plt+0x1d78>
   12774:	mov	r2, r5
   12778:	mov	r3, #0
   1277c:	str	r7, [sp, #88]	; 0x58
   12780:	ldr	r7, [sp, #152]	; 0x98
   12784:	str	r5, [sp, #92]	; 0x5c
   12788:	str	r6, [sp, #84]	; 0x54
   1278c:	mov	r5, r3
   12790:	mov	r6, r2
   12794:	str	r4, [sp, #80]	; 0x50
   12798:	ldr	r3, [sp, #56]	; 0x38
   1279c:	add	r9, sl, r5
   127a0:	add	r8, r3, r9
   127a4:	ldr	r3, [sp, #24]
   127a8:	mov	r1, r8
   127ac:	sub	r2, r3, r9
   127b0:	add	r0, sp, #100	; 0x64
   127b4:	add	r3, sp, #104	; 0x68
   127b8:	bl	143c0 <abort@plt+0x36a8>
   127bc:	subs	r4, r0, #0
   127c0:	beq	12b68 <abort@plt+0x1e50>
   127c4:	cmn	r4, #1
   127c8:	beq	12b48 <abort@plt+0x1e30>
   127cc:	cmn	r4, #2
   127d0:	beq	12ae8 <abort@plt+0x1dd0>
   127d4:	ldr	r2, [sp, #28]
   127d8:	cmp	r7, #2
   127dc:	movne	r2, #0
   127e0:	andeq	r2, r2, #1
   127e4:	cmp	r2, #0
   127e8:	beq	12598 <abort@plt+0x1880>
   127ec:	cmp	r4, #1
   127f0:	beq	12598 <abort@plt+0x1880>
   127f4:	sub	r3, r4, #1
   127f8:	add	r9, r3, r9
   127fc:	ldr	r3, [sp, #56]	; 0x38
   12800:	add	r9, r3, r9
   12804:	ldrb	r3, [r8, #1]!
   12808:	sub	r3, r3, #91	; 0x5b
   1280c:	cmp	r3, #33	; 0x21
   12810:	ldrls	pc, [pc, r3, lsl #2]
   12814:	b	12590 <abort@plt+0x1878>
   12818:	andeq	r2, r1, r0, lsr #17
   1281c:	andeq	r2, r1, r0, lsr #17
   12820:	muleq	r1, r0, r5
   12824:	andeq	r2, r1, r0, lsr #17
   12828:	muleq	r1, r0, r5
   1282c:	andeq	r2, r1, r0, lsr #17
   12830:	muleq	r1, r0, r5
   12834:	muleq	r1, r0, r5
   12838:	muleq	r1, r0, r5
   1283c:	muleq	r1, r0, r5
   12840:	muleq	r1, r0, r5
   12844:	muleq	r1, r0, r5
   12848:	muleq	r1, r0, r5
   1284c:	muleq	r1, r0, r5
   12850:	muleq	r1, r0, r5
   12854:	muleq	r1, r0, r5
   12858:	muleq	r1, r0, r5
   1285c:	muleq	r1, r0, r5
   12860:	muleq	r1, r0, r5
   12864:	muleq	r1, r0, r5
   12868:	muleq	r1, r0, r5
   1286c:	muleq	r1, r0, r5
   12870:	muleq	r1, r0, r5
   12874:	muleq	r1, r0, r5
   12878:	muleq	r1, r0, r5
   1287c:	muleq	r1, r0, r5
   12880:	muleq	r1, r0, r5
   12884:	muleq	r1, r0, r5
   12888:	muleq	r1, r0, r5
   1288c:	muleq	r1, r0, r5
   12890:	muleq	r1, r0, r5
   12894:	muleq	r1, r0, r5
   12898:	muleq	r1, r0, r5
   1289c:	andeq	r2, r1, r0, lsr #17
   128a0:	mov	r3, #2
   128a4:	ldr	sl, [sp, #32]
   128a8:	mov	r8, fp
   128ac:	str	r3, [sp, #152]	; 0x98
   128b0:	b	12028 <abort@plt+0x1310>
   128b4:	ldr	r3, [sp, #156]	; 0x9c
   128b8:	tst	r3, #1
   128bc:	bne	129e8 <abort@plt+0x1cd0>
   128c0:	ldr	r3, [sp, #152]	; 0x98
   128c4:	ldr	r4, [sp, #44]	; 0x2c
   128c8:	sub	r2, r3, #2
   128cc:	mov	r5, #0
   128d0:	clz	r2, r2
   128d4:	mov	r8, r4
   128d8:	lsr	r2, r2, #5
   128dc:	b	11de8 <abort@plt+0x10d0>
   128e0:	ldr	r3, [sp, #156]	; 0x9c
   128e4:	ands	r9, r3, #4
   128e8:	beq	12a20 <abort@plt+0x1d08>
   128ec:	ldr	r2, [sp, #24]
   128f0:	add	r3, sl, #2
   128f4:	cmp	r3, r2
   128f8:	bcs	1290c <abort@plt+0x1bf4>
   128fc:	ldr	r2, [sp, #48]	; 0x30
   12900:	ldrb	r4, [r2, #1]
   12904:	cmp	r4, #63	; 0x3f
   12908:	beq	12ba8 <abort@plt+0x1e90>
   1290c:	mov	r2, #0
   12910:	mov	r8, r2
   12914:	mov	r5, r2
   12918:	mov	r4, #63	; 0x3f
   1291c:	b	11de8 <abort@plt+0x10d0>
   12920:	ldr	r3, [sp, #28]
   12924:	cmp	r3, #0
   12928:	bne	12c4c <abort@plt+0x1f34>
   1292c:	mov	r2, r5
   12930:	mov	r8, r3
   12934:	mov	r5, #0
   12938:	mov	r4, #63	; 0x3f
   1293c:	b	11de8 <abort@plt+0x10d0>
   12940:	ldr	r3, [sp, #28]
   12944:	cmp	r3, #0
   12948:	bne	12c4c <abort@plt+0x1f34>
   1294c:	ldr	r2, [sp, #72]	; 0x48
   12950:	adds	r3, fp, #0
   12954:	movne	r3, #1
   12958:	cmp	r2, #0
   1295c:	movne	r3, #0
   12960:	cmp	r3, #0
   12964:	strne	fp, [sp, #72]	; 0x48
   12968:	movne	fp, #0
   1296c:	bne	129a8 <abort@plt+0x1c90>
   12970:	cmp	fp, r7
   12974:	movhi	r2, #39	; 0x27
   12978:	ldrhi	r3, [sp, #32]
   1297c:	strbhi	r2, [r3, r7]
   12980:	add	r3, r7, #1
   12984:	cmp	fp, r3
   12988:	movhi	r1, #92	; 0x5c
   1298c:	ldrhi	r2, [sp, #32]
   12990:	strbhi	r1, [r2, r3]
   12994:	add	r3, r7, #2
   12998:	cmp	fp, r3
   1299c:	movhi	r1, #39	; 0x27
   129a0:	ldrhi	r2, [sp, #32]
   129a4:	strbhi	r1, [r2, r3]
   129a8:	ldr	r3, [sp, #28]
   129ac:	add	r7, r7, #3
   129b0:	mov	r2, r5
   129b4:	mov	r8, r3
   129b8:	str	r5, [sp, #68]	; 0x44
   129bc:	str	r3, [sp, #40]	; 0x28
   129c0:	mov	r4, #39	; 0x27
   129c4:	b	11de8 <abort@plt+0x10d0>
   129c8:	ldr	r3, [sp, #56]	; 0x38
   129cc:	ldrb	r3, [r3, #1]
   129d0:	adds	r3, r3, #0
   129d4:	movne	r3, #1
   129d8:	b	11dc0 <abort@plt+0x10a8>
   129dc:	ldr	r5, [sp, #28]
   129e0:	mov	r4, #48	; 0x30
   129e4:	b	11de8 <abort@plt+0x10d0>
   129e8:	add	sl, sl, #1
   129ec:	b	11918 <abort@plt+0xc00>
   129f0:	mov	sl, r3
   129f4:	ldr	r3, [sp, #28]
   129f8:	mov	r8, fp
   129fc:	str	r3, [sp, #44]	; 0x2c
   12a00:	ldr	r3, [sp, #152]	; 0x98
   12a04:	sub	r2, r3, #2
   12a08:	clz	r2, r2
   12a0c:	lsr	r2, r2, #5
   12a10:	b	12028 <abort@plt+0x1310>
   12a14:	str	ip, [sp, #40]	; 0x28
   12a18:	ldr	r5, [sp, #48]	; 0x30
   12a1c:	b	11e58 <abort@plt+0x1140>
   12a20:	mov	r2, r9
   12a24:	mov	r8, r9
   12a28:	mov	r5, #0
   12a2c:	mov	r4, #63	; 0x3f
   12a30:	b	11de8 <abort@plt+0x10d0>
   12a34:	cmp	fp, #0
   12a38:	beq	12ab0 <abort@plt+0x1d98>
   12a3c:	ldr	r1, [sp, #32]
   12a40:	mov	r3, #34	; 0x22
   12a44:	mov	r2, #1
   12a48:	strb	r3, [r1]
   12a4c:	ldr	r3, [pc, #332]	; 12ba0 <abort@plt+0x1e88>
   12a50:	str	r2, [sp, #52]	; 0x34
   12a54:	mov	r7, r2
   12a58:	str	r2, [sp, #44]	; 0x2c
   12a5c:	str	r3, [sp, #64]	; 0x40
   12a60:	b	11908 <abort@plt+0xbf0>
   12a64:	ldr	r3, [pc, #300]	; 12b98 <abort@plt+0x1e80>
   12a68:	str	r3, [sp, #64]	; 0x40
   12a6c:	mov	r3, #0
   12a70:	str	r3, [sp, #28]
   12a74:	mov	r3, #1
   12a78:	str	r3, [sp, #52]	; 0x34
   12a7c:	mov	r7, r3
   12a80:	mov	r3, #2
   12a84:	str	r3, [sp, #152]	; 0x98
   12a88:	b	11908 <abort@plt+0xbf0>
   12a8c:	bl	10d18 <abort@plt>
   12a90:	ldr	r0, [sp, #56]	; 0x38
   12a94:	bl	10c64 <strlen@plt>
   12a98:	str	r0, [sp, #24]
   12a9c:	b	12774 <abort@plt+0x1a5c>
   12aa0:	mov	r5, r8
   12aa4:	mov	r4, #48	; 0x30
   12aa8:	ldr	r8, [sp, #44]	; 0x2c
   12aac:	b	11de8 <abort@plt+0x10d0>
   12ab0:	mov	r3, #1
   12ab4:	str	r3, [sp, #52]	; 0x34
   12ab8:	mov	r7, r3
   12abc:	str	r3, [sp, #44]	; 0x2c
   12ac0:	ldr	r3, [pc, #216]	; 12ba0 <abort@plt+0x1e88>
   12ac4:	str	r3, [sp, #64]	; 0x40
   12ac8:	b	11908 <abort@plt+0xbf0>
   12acc:	ldr	sl, [sp, #32]
   12ad0:	mov	r8, fp
   12ad4:	mov	r2, r3
   12ad8:	b	12028 <abort@plt+0x1310>
   12adc:	mov	r3, r5
   12ae0:	mov	r5, r2
   12ae4:	b	122e0 <abort@plt+0x15c8>
   12ae8:	ldr	r1, [sp, #24]
   12aec:	mov	r2, r5
   12af0:	cmp	r1, r9
   12af4:	mov	ip, r5
   12af8:	ldr	r4, [sp, #80]	; 0x50
   12afc:	ldr	r5, [sp, #92]	; 0x5c
   12b00:	ldr	r6, [sp, #84]	; 0x54
   12b04:	ldr	r7, [sp, #88]	; 0x58
   12b08:	bls	12b3c <abort@plt+0x1e24>
   12b0c:	ldrb	r3, [r8]
   12b10:	cmp	r3, #0
   12b14:	bne	12b28 <abort@plt+0x1e10>
   12b18:	b	12b40 <abort@plt+0x1e28>
   12b1c:	ldrb	r3, [r8, #1]!
   12b20:	cmp	r3, #0
   12b24:	beq	12c40 <abort@plt+0x1f28>
   12b28:	add	r2, r2, #1
   12b2c:	add	r3, sl, r2
   12b30:	cmp	r1, r3
   12b34:	bhi	12b1c <abort@plt+0x1e04>
   12b38:	mov	ip, r2
   12b3c:	mov	r3, #0
   12b40:	mov	r2, r3
   12b44:	b	125d8 <abort@plt+0x18c0>
   12b48:	mov	r3, #0
   12b4c:	mov	ip, r5
   12b50:	ldr	r4, [sp, #80]	; 0x50
   12b54:	ldr	r5, [sp, #92]	; 0x5c
   12b58:	ldr	r6, [sp, #84]	; 0x54
   12b5c:	ldr	r7, [sp, #88]	; 0x58
   12b60:	mov	r2, r3
   12b64:	b	125d8 <abort@plt+0x18c0>
   12b68:	mov	r3, r6
   12b6c:	mov	ip, r5
   12b70:	eor	r5, r3, #1
   12b74:	mov	r2, r6
   12b78:	ldr	r4, [sp, #80]	; 0x50
   12b7c:	ldr	r6, [sp, #84]	; 0x54
   12b80:	ldr	r7, [sp, #88]	; 0x58
   12b84:	uxtb	r5, r5
   12b88:	b	125d8 <abort@plt+0x18c0>
   12b8c:	ldr	sl, [sp, #32]
   12b90:	mov	r8, fp
   12b94:	b	129fc <abort@plt+0x1ce4>
   12b98:	andeq	r4, r1, r8, lsl lr
   12b9c:	andeq	r4, r1, ip, lsl lr
   12ba0:	andeq	r4, r1, r4, lsl lr
   12ba4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   12ba8:	ldr	r2, [sp, #56]	; 0x38
   12bac:	ldrb	r1, [r2, r3]
   12bb0:	sub	r2, r1, #33	; 0x21
   12bb4:	uxtb	r2, r2
   12bb8:	cmp	r2, #29
   12bbc:	bhi	12c5c <abort@plt+0x1f44>
   12bc0:	ldr	r0, [pc, #-36]	; 12ba4 <abort@plt+0x1e8c>
   12bc4:	mov	ip, #1
   12bc8:	ands	r2, r0, ip, lsl r2
   12bcc:	beq	12c6c <abort@plt+0x1f54>
   12bd0:	ldr	r2, [sp, #28]
   12bd4:	cmp	r2, #0
   12bd8:	bne	12d6c <abort@plt+0x2054>
   12bdc:	cmp	fp, r7
   12be0:	ldr	r8, [sp, #28]
   12be4:	ldrhi	r2, [sp, #32]
   12be8:	mov	sl, r3
   12bec:	mov	r5, r8
   12bf0:	strbhi	r4, [r2, r7]
   12bf4:	add	r2, r7, #1
   12bf8:	cmp	fp, r2
   12bfc:	movhi	r0, #34	; 0x22
   12c00:	ldrhi	ip, [sp, #32]
   12c04:	mov	r4, r1
   12c08:	strbhi	r0, [ip, r2]
   12c0c:	add	r2, r7, #2
   12c10:	cmp	fp, r2
   12c14:	movhi	r0, #34	; 0x22
   12c18:	ldrhi	ip, [sp, #32]
   12c1c:	strbhi	r0, [ip, r2]
   12c20:	add	r2, r7, #3
   12c24:	cmp	fp, r2
   12c28:	movhi	r0, #63	; 0x3f
   12c2c:	ldrhi	ip, [sp, #32]
   12c30:	add	r7, r7, #4
   12c34:	strbhi	r0, [ip, r2]
   12c38:	mov	r2, r8
   12c3c:	b	11de8 <abort@plt+0x10d0>
   12c40:	mov	ip, r2
   12c44:	mov	r2, r3
   12c48:	b	125d8 <abort@plt+0x18c0>
   12c4c:	ldr	sl, [sp, #32]
   12c50:	mov	r8, fp
   12c54:	ldr	r2, [sp, #28]
   12c58:	b	12028 <abort@plt+0x1310>
   12c5c:	mov	r2, #0
   12c60:	mov	r8, r2
   12c64:	mov	r5, r2
   12c68:	b	11de8 <abort@plt+0x10d0>
   12c6c:	mov	r8, r2
   12c70:	mov	r5, #0
   12c74:	b	11de8 <abort@plt+0x10d0>
   12c78:	ldr	r1, [sp, #152]	; 0x98
   12c7c:	bl	11744 <abort@plt+0xa2c>
   12c80:	str	r0, [sp, #168]	; 0xa8
   12c84:	b	11ca4 <abort@plt+0xf8c>
   12c88:	ldr	r1, [sp, #152]	; 0x98
   12c8c:	bl	11744 <abort@plt+0xa2c>
   12c90:	str	r0, [sp, #164]	; 0xa4
   12c94:	b	11c84 <abort@plt+0xf6c>
   12c98:	ldr	r7, [sp, #28]
   12c9c:	b	11ce4 <abort@plt+0xfcc>
   12ca0:	ldr	sl, [sp, #32]
   12ca4:	ldr	r2, [sp, #68]	; 0x44
   12ca8:	mov	r8, fp
   12cac:	mov	fp, r7
   12cb0:	ldr	r3, [sp, #64]	; 0x40
   12cb4:	cmp	r3, #0
   12cb8:	moveq	r2, #0
   12cbc:	andne	r2, r2, #1
   12cc0:	cmp	r2, #0
   12cc4:	beq	12cf0 <abort@plt+0x1fd8>
   12cc8:	mov	r2, r3
   12ccc:	ldrb	r3, [r3]
   12cd0:	cmp	r3, #0
   12cd4:	beq	12cf0 <abort@plt+0x1fd8>
   12cd8:	cmp	r8, fp
   12cdc:	strbhi	r3, [sl, fp]
   12ce0:	ldrb	r3, [r2, #1]!
   12ce4:	add	fp, fp, #1
   12ce8:	cmp	r3, #0
   12cec:	bne	12cd8 <abort@plt+0x1fc0>
   12cf0:	cmp	r8, fp
   12cf4:	movhi	r3, #0
   12cf8:	strbhi	r3, [sl, fp]
   12cfc:	b	12084 <abort@plt+0x136c>
   12d00:	ldr	r3, [sp, #168]	; 0xa8
   12d04:	ldr	sl, [sp, #32]
   12d08:	str	r3, [sp, #16]
   12d0c:	ldr	r3, [sp, #164]	; 0xa4
   12d10:	mov	ip, #5
   12d14:	str	r3, [sp, #12]
   12d18:	ldr	r3, [sp, #160]	; 0xa0
   12d1c:	ldr	r2, [sp, #56]	; 0x38
   12d20:	str	r3, [sp, #8]
   12d24:	ldr	r3, [sp, #156]	; 0x9c
   12d28:	ldr	r1, [sp, #72]	; 0x48
   12d2c:	str	r3, [sp, #4]
   12d30:	mov	r0, sl
   12d34:	ldr	r3, [sp, #24]
   12d38:	str	ip, [sp]
   12d3c:	bl	11864 <abort@plt+0xb4c>
   12d40:	mov	fp, r0
   12d44:	b	12084 <abort@plt+0x136c>
   12d48:	mov	r8, fp
   12d4c:	ldr	sl, [sp, #32]
   12d50:	mov	fp, r7
   12d54:	mov	r2, r3
   12d58:	b	12cb0 <abort@plt+0x1f98>
   12d5c:	mov	r8, fp
   12d60:	ldr	sl, [sp, #32]
   12d64:	mov	fp, r7
   12d68:	b	12cb0 <abort@plt+0x1f98>
   12d6c:	ldr	sl, [sp, #32]
   12d70:	mov	r8, fp
   12d74:	b	12040 <abort@plt+0x1328>
   12d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d7c:	sub	sp, sp, #52	; 0x34
   12d80:	mov	r4, r0
   12d84:	mov	r5, r3
   12d88:	mov	sl, r1
   12d8c:	mov	fp, r2
   12d90:	bl	10c70 <__errno_location@plt>
   12d94:	ldr	r7, [pc, #412]	; 12f38 <abort@plt+0x2220>
   12d98:	cmn	r4, #-2147483647	; 0x80000001
   12d9c:	ldr	r6, [r7]
   12da0:	mov	r8, r0
   12da4:	movne	r0, #0
   12da8:	moveq	r0, #1
   12dac:	ldr	r3, [r8]
   12db0:	orrs	r0, r0, r4, lsr #31
   12db4:	str	r3, [sp, #24]
   12db8:	bne	12f34 <abort@plt+0x221c>
   12dbc:	ldr	r2, [r7, #4]
   12dc0:	cmp	r4, r2
   12dc4:	blt	12e24 <abort@plt+0x210c>
   12dc8:	add	r9, r7, #8
   12dcc:	cmp	r6, r9
   12dd0:	str	r2, [sp, #44]	; 0x2c
   12dd4:	beq	12f04 <abort@plt+0x21ec>
   12dd8:	mov	r3, #8
   12ddc:	sub	r2, r4, r2
   12de0:	mov	r0, r6
   12de4:	str	r3, [sp]
   12de8:	add	r2, r2, #1
   12dec:	mvn	r3, #-2147483648	; 0x80000000
   12df0:	add	r1, sp, #44	; 0x2c
   12df4:	bl	13c4c <abort@plt+0x2f34>
   12df8:	mov	r6, r0
   12dfc:	str	r0, [r7]
   12e00:	ldr	r0, [r7, #4]
   12e04:	ldr	r2, [sp, #44]	; 0x2c
   12e08:	mov	r1, #0
   12e0c:	sub	r2, r2, r0
   12e10:	add	r0, r6, r0, lsl #3
   12e14:	lsl	r2, r2, #3
   12e18:	bl	10c88 <memset@plt>
   12e1c:	ldr	r3, [sp, #44]	; 0x2c
   12e20:	str	r3, [r7, #4]
   12e24:	add	r3, r6, r4, lsl #3
   12e28:	ldr	r1, [r5, #4]
   12e2c:	ldr	r7, [r3, #4]
   12e30:	ldr	r9, [r6, r4, lsl #3]
   12e34:	ldr	r2, [r5, #40]	; 0x28
   12e38:	ldr	ip, [r5, #44]	; 0x2c
   12e3c:	add	r0, r5, #8
   12e40:	str	r3, [sp, #28]
   12e44:	ldr	r3, [r5]
   12e48:	orr	r1, r1, #1
   12e4c:	mov	lr, r0
   12e50:	str	r1, [sp, #32]
   12e54:	str	r0, [sp, #36]	; 0x24
   12e58:	str	r1, [sp, #4]
   12e5c:	str	r2, [sp, #12]
   12e60:	str	r3, [sp]
   12e64:	mov	r0, r7
   12e68:	mov	r1, r9
   12e6c:	str	ip, [sp, #16]
   12e70:	str	lr, [sp, #8]
   12e74:	mov	r3, fp
   12e78:	mov	r2, sl
   12e7c:	bl	11864 <abort@plt+0xb4c>
   12e80:	cmp	r9, r0
   12e84:	bhi	12ef0 <abort@plt+0x21d8>
   12e88:	ldr	r3, [pc, #172]	; 12f3c <abort@plt+0x2224>
   12e8c:	add	r9, r0, #1
   12e90:	cmp	r7, r3
   12e94:	str	r9, [r6, r4, lsl #3]
   12e98:	beq	12ea4 <abort@plt+0x218c>
   12e9c:	mov	r0, r7
   12ea0:	bl	14294 <abort@plt+0x357c>
   12ea4:	mov	r0, r9
   12ea8:	bl	13ae8 <abort@plt+0x2dd0>
   12eac:	ldr	lr, [sp, #28]
   12eb0:	ldr	ip, [r5, #44]	; 0x2c
   12eb4:	ldr	r4, [r5, #40]	; 0x28
   12eb8:	mov	r3, fp
   12ebc:	mov	r2, sl
   12ec0:	mov	r1, r9
   12ec4:	str	r0, [lr, #4]
   12ec8:	ldr	lr, [r5]
   12ecc:	ldr	r5, [sp, #36]	; 0x24
   12ed0:	str	ip, [sp, #16]
   12ed4:	str	r5, [sp, #8]
   12ed8:	ldr	r5, [sp, #32]
   12edc:	str	r4, [sp, #12]
   12ee0:	str	r5, [sp, #4]
   12ee4:	str	lr, [sp]
   12ee8:	mov	r7, r0
   12eec:	bl	11864 <abort@plt+0xb4c>
   12ef0:	ldr	r3, [sp, #24]
   12ef4:	mov	r0, r7
   12ef8:	str	r3, [r8]
   12efc:	add	sp, sp, #52	; 0x34
   12f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f04:	mov	r3, #8
   12f08:	sub	r2, r4, r2
   12f0c:	str	r3, [sp]
   12f10:	add	r1, sp, #44	; 0x2c
   12f14:	add	r2, r2, #1
   12f18:	mvn	r3, #-2147483648	; 0x80000000
   12f1c:	bl	13c4c <abort@plt+0x2f34>
   12f20:	mov	r6, r0
   12f24:	ldm	r9, {r0, r1}
   12f28:	str	r6, [r7]
   12f2c:	stm	r6, {r0, r1}
   12f30:	b	12e00 <abort@plt+0x20e8>
   12f34:	bl	10d18 <abort@plt>
   12f38:	ldrdeq	r6, [r2], -r0
   12f3c:	andeq	r6, r2, ip, lsr r1
   12f40:	push	{r4, r5, r6, lr}
   12f44:	mov	r5, r0
   12f48:	bl	10c70 <__errno_location@plt>
   12f4c:	cmp	r5, #0
   12f50:	mov	r1, #48	; 0x30
   12f54:	mov	r4, r0
   12f58:	ldr	r0, [pc, #16]	; 12f70 <abort@plt+0x2258>
   12f5c:	ldr	r6, [r4]
   12f60:	movne	r0, r5
   12f64:	bl	13f48 <abort@plt+0x3230>
   12f68:	str	r6, [r4]
   12f6c:	pop	{r4, r5, r6, pc}
   12f70:	andeq	r6, r2, ip, lsr r2
   12f74:	ldr	r3, [pc, #12]	; 12f88 <abort@plt+0x2270>
   12f78:	cmp	r0, #0
   12f7c:	moveq	r0, r3
   12f80:	ldr	r0, [r0]
   12f84:	bx	lr
   12f88:	andeq	r6, r2, ip, lsr r2
   12f8c:	ldr	r3, [pc, #12]	; 12fa0 <abort@plt+0x2288>
   12f90:	cmp	r0, #0
   12f94:	moveq	r0, r3
   12f98:	str	r1, [r0]
   12f9c:	bx	lr
   12fa0:	andeq	r6, r2, ip, lsr r2
   12fa4:	ldr	r3, [pc, #52]	; 12fe0 <abort@plt+0x22c8>
   12fa8:	cmp	r0, #0
   12fac:	moveq	r0, r3
   12fb0:	add	r3, r0, #8
   12fb4:	push	{lr}		; (str lr, [sp, #-4]!)
   12fb8:	lsr	lr, r1, #5
   12fbc:	and	r1, r1, #31
   12fc0:	ldr	ip, [r3, lr, lsl #2]
   12fc4:	lsr	r0, ip, r1
   12fc8:	eor	r2, r2, r0
   12fcc:	and	r2, r2, #1
   12fd0:	and	r0, r0, #1
   12fd4:	eor	r1, ip, r2, lsl r1
   12fd8:	str	r1, [r3, lr, lsl #2]
   12fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fe0:	andeq	r6, r2, ip, lsr r2
   12fe4:	ldr	r3, [pc, #16]	; 12ffc <abort@plt+0x22e4>
   12fe8:	cmp	r0, #0
   12fec:	movne	r3, r0
   12ff0:	ldr	r0, [r3, #4]
   12ff4:	str	r1, [r3, #4]
   12ff8:	bx	lr
   12ffc:	andeq	r6, r2, ip, lsr r2
   13000:	ldr	r3, [pc, #44]	; 13034 <abort@plt+0x231c>
   13004:	cmp	r0, #0
   13008:	moveq	r0, r3
   1300c:	mov	ip, #10
   13010:	cmp	r2, #0
   13014:	cmpne	r1, #0
   13018:	str	ip, [r0]
   1301c:	beq	1302c <abort@plt+0x2314>
   13020:	str	r1, [r0, #40]	; 0x28
   13024:	str	r2, [r0, #44]	; 0x2c
   13028:	bx	lr
   1302c:	push	{r4, lr}
   13030:	bl	10d18 <abort@plt>
   13034:	andeq	r6, r2, ip, lsr r2
   13038:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1303c:	sub	sp, sp, #24
   13040:	ldr	ip, [pc, #108]	; 130b4 <abort@plt+0x239c>
   13044:	ldr	r4, [sp, #56]	; 0x38
   13048:	mov	r9, r2
   1304c:	cmp	r4, #0
   13050:	moveq	r4, ip
   13054:	mov	sl, r3
   13058:	mov	r7, r0
   1305c:	mov	r8, r1
   13060:	bl	10c70 <__errno_location@plt>
   13064:	ldr	r3, [r4, #44]	; 0x2c
   13068:	mov	r1, r8
   1306c:	ldr	r6, [r0]
   13070:	str	r3, [sp, #16]
   13074:	ldr	r2, [r4, #40]	; 0x28
   13078:	add	r3, r4, #8
   1307c:	str	r3, [sp, #8]
   13080:	str	r2, [sp, #12]
   13084:	ldr	r2, [r4, #4]
   13088:	mov	r5, r0
   1308c:	str	r2, [sp, #4]
   13090:	ldr	ip, [r4]
   13094:	mov	r3, sl
   13098:	mov	r2, r9
   1309c:	mov	r0, r7
   130a0:	str	ip, [sp]
   130a4:	bl	11864 <abort@plt+0xb4c>
   130a8:	str	r6, [r5]
   130ac:	add	sp, sp, #24
   130b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130b4:	andeq	r6, r2, ip, lsr r2
   130b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130bc:	cmp	r3, #0
   130c0:	sub	sp, sp, #44	; 0x2c
   130c4:	ldr	r4, [pc, #192]	; 1318c <abort@plt+0x2474>
   130c8:	mov	r6, r2
   130cc:	movne	r4, r3
   130d0:	mov	r9, r1
   130d4:	mov	r8, r0
   130d8:	bl	10c70 <__errno_location@plt>
   130dc:	ldr	r3, [r4, #44]	; 0x2c
   130e0:	ldr	r5, [r4, #4]
   130e4:	add	sl, r4, #8
   130e8:	cmp	r6, #0
   130ec:	orreq	r5, r5, #1
   130f0:	mov	r1, #0
   130f4:	ldr	r2, [r0]
   130f8:	str	r3, [sp, #16]
   130fc:	ldr	r3, [r4, #40]	; 0x28
   13100:	stmib	sp, {r5, sl}
   13104:	str	r3, [sp, #12]
   13108:	ldr	r3, [r4]
   1310c:	mov	r7, r0
   13110:	str	r2, [sp, #28]
   13114:	str	r3, [sp]
   13118:	mov	r2, r8
   1311c:	mov	r3, r9
   13120:	mov	r0, r1
   13124:	bl	11864 <abort@plt+0xb4c>
   13128:	add	r1, r0, #1
   1312c:	mov	fp, r0
   13130:	mov	r0, r1
   13134:	str	r1, [sp, #36]	; 0x24
   13138:	bl	13ae8 <abort@plt+0x2dd0>
   1313c:	ldr	r3, [r4, #44]	; 0x2c
   13140:	mov	r2, r8
   13144:	str	r3, [sp, #16]
   13148:	ldr	r3, [r4, #40]	; 0x28
   1314c:	str	r5, [sp, #4]
   13150:	str	r3, [sp, #12]
   13154:	str	sl, [sp, #8]
   13158:	ldr	ip, [r4]
   1315c:	ldr	r1, [sp, #36]	; 0x24
   13160:	mov	r3, r9
   13164:	str	ip, [sp]
   13168:	str	r0, [sp, #32]
   1316c:	bl	11864 <abort@plt+0xb4c>
   13170:	ldr	r2, [sp, #28]
   13174:	cmp	r6, #0
   13178:	str	r2, [r7]
   1317c:	ldr	r0, [sp, #32]
   13180:	strne	fp, [r6]
   13184:	add	sp, sp, #44	; 0x2c
   13188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1318c:	andeq	r6, r2, ip, lsr r2
   13190:	mov	r3, r2
   13194:	mov	r2, #0
   13198:	b	130b8 <abort@plt+0x23a0>
   1319c:	push	{r4, r5, r6, r7, r8, lr}
   131a0:	ldr	r6, [pc, #116]	; 1321c <abort@plt+0x2504>
   131a4:	ldr	r3, [r6, #4]
   131a8:	ldr	r7, [r6]
   131ac:	cmp	r3, #1
   131b0:	movgt	r5, r7
   131b4:	movgt	r4, #1
   131b8:	ble	131d8 <abort@plt+0x24c0>
   131bc:	ldr	r0, [r5, #12]
   131c0:	bl	14294 <abort@plt+0x357c>
   131c4:	ldr	r3, [r6, #4]
   131c8:	add	r4, r4, #1
   131cc:	cmp	r3, r4
   131d0:	add	r5, r5, #8
   131d4:	bgt	131bc <abort@plt+0x24a4>
   131d8:	ldr	r0, [r7, #4]
   131dc:	ldr	r4, [pc, #60]	; 13220 <abort@plt+0x2508>
   131e0:	cmp	r0, r4
   131e4:	beq	131f8 <abort@plt+0x24e0>
   131e8:	bl	14294 <abort@plt+0x357c>
   131ec:	mov	r3, #256	; 0x100
   131f0:	str	r4, [r6, #12]
   131f4:	str	r3, [r6, #8]
   131f8:	ldr	r4, [pc, #36]	; 13224 <abort@plt+0x250c>
   131fc:	cmp	r7, r4
   13200:	beq	13210 <abort@plt+0x24f8>
   13204:	mov	r0, r7
   13208:	bl	14294 <abort@plt+0x357c>
   1320c:	str	r4, [r6]
   13210:	mov	r3, #1
   13214:	str	r3, [r6, #4]
   13218:	pop	{r4, r5, r6, r7, r8, pc}
   1321c:	ldrdeq	r6, [r2], -r0
   13220:	andeq	r6, r2, ip, lsr r1
   13224:	ldrdeq	r6, [r2], -r8
   13228:	ldr	r3, [pc, #4]	; 13234 <abort@plt+0x251c>
   1322c:	mvn	r2, #0
   13230:	b	12d78 <abort@plt+0x2060>
   13234:	andeq	r6, r2, ip, lsr r2
   13238:	ldr	r3, [pc]	; 13240 <abort@plt+0x2528>
   1323c:	b	12d78 <abort@plt+0x2060>
   13240:	andeq	r6, r2, ip, lsr r2
   13244:	mov	r1, r0
   13248:	ldr	r3, [pc, #8]	; 13258 <abort@plt+0x2540>
   1324c:	mvn	r2, #0
   13250:	mov	r0, #0
   13254:	b	12d78 <abort@plt+0x2060>
   13258:	andeq	r6, r2, ip, lsr r2
   1325c:	mov	r2, r1
   13260:	ldr	r3, [pc, #8]	; 13270 <abort@plt+0x2558>
   13264:	mov	r1, r0
   13268:	mov	r0, #0
   1326c:	b	12d78 <abort@plt+0x2060>
   13270:	andeq	r6, r2, ip, lsr r2
   13274:	push	{r4, r5, lr}
   13278:	sub	sp, sp, #52	; 0x34
   1327c:	mov	r5, r2
   13280:	mov	r4, r0
   13284:	mov	r0, sp
   13288:	bl	11714 <abort@plt+0x9fc>
   1328c:	mov	r3, sp
   13290:	mov	r1, r5
   13294:	mov	r0, r4
   13298:	mvn	r2, #0
   1329c:	bl	12d78 <abort@plt+0x2060>
   132a0:	add	sp, sp, #52	; 0x34
   132a4:	pop	{r4, r5, pc}
   132a8:	push	{r4, r5, r6, lr}
   132ac:	sub	sp, sp, #48	; 0x30
   132b0:	mov	r5, r2
   132b4:	mov	r6, r3
   132b8:	mov	r4, r0
   132bc:	mov	r0, sp
   132c0:	bl	11714 <abort@plt+0x9fc>
   132c4:	mov	r3, sp
   132c8:	mov	r2, r6
   132cc:	mov	r1, r5
   132d0:	mov	r0, r4
   132d4:	bl	12d78 <abort@plt+0x2060>
   132d8:	add	sp, sp, #48	; 0x30
   132dc:	pop	{r4, r5, r6, pc}
   132e0:	mov	r2, r1
   132e4:	mov	r1, r0
   132e8:	mov	r0, #0
   132ec:	b	13274 <abort@plt+0x255c>
   132f0:	mov	r3, r2
   132f4:	mov	r2, r1
   132f8:	mov	r1, r0
   132fc:	mov	r0, #0
   13300:	b	132a8 <abort@plt+0x2590>
   13304:	push	{r4, r5, r6, r7, r8, lr}
   13308:	mov	r7, r0
   1330c:	ldr	lr, [pc, #100]	; 13378 <abort@plt+0x2660>
   13310:	mov	r8, r1
   13314:	mov	r4, r2
   13318:	ldm	lr!, {r0, r1, r2, r3}
   1331c:	sub	sp, sp, #48	; 0x30
   13320:	mov	ip, sp
   13324:	lsr	r5, r4, #5
   13328:	stmia	ip!, {r0, r1, r2, r3}
   1332c:	add	r6, sp, #8
   13330:	ldm	lr!, {r0, r1, r2, r3}
   13334:	and	r4, r4, #31
   13338:	stmia	ip!, {r0, r1, r2, r3}
   1333c:	ldm	lr, {r0, r1, r2, r3}
   13340:	stm	ip, {r0, r1, r2, r3}
   13344:	mov	r2, r8
   13348:	ldr	lr, [r6, r5, lsl #2]
   1334c:	mov	r1, r7
   13350:	mov	r3, sp
   13354:	lsr	ip, lr, r4
   13358:	eor	ip, ip, #1
   1335c:	and	ip, ip, #1
   13360:	mov	r0, #0
   13364:	eor	r4, lr, ip, lsl r4
   13368:	str	r4, [r6, r5, lsl #2]
   1336c:	bl	12d78 <abort@plt+0x2060>
   13370:	add	sp, sp, #48	; 0x30
   13374:	pop	{r4, r5, r6, r7, r8, pc}
   13378:	andeq	r6, r2, ip, lsr r2
   1337c:	mov	r2, r1
   13380:	mvn	r1, #0
   13384:	b	13304 <abort@plt+0x25ec>
   13388:	mov	r2, #58	; 0x3a
   1338c:	mvn	r1, #0
   13390:	b	13304 <abort@plt+0x25ec>
   13394:	mov	r2, #58	; 0x3a
   13398:	b	13304 <abort@plt+0x25ec>
   1339c:	push	{r4, r5, r6, r7, lr}
   133a0:	sub	sp, sp, #100	; 0x64
   133a4:	mov	r6, r0
   133a8:	mov	r0, sp
   133ac:	mov	r7, r2
   133b0:	bl	11714 <abort@plt+0x9fc>
   133b4:	mov	ip, sp
   133b8:	add	lr, sp, #48	; 0x30
   133bc:	ldm	ip!, {r0, r1, r2, r3}
   133c0:	stmia	lr!, {r0, r1, r2, r3}
   133c4:	ldm	ip!, {r0, r1, r2, r3}
   133c8:	ldr	r5, [sp, #60]	; 0x3c
   133cc:	stmia	lr!, {r0, r1, r2, r3}
   133d0:	mvn	r4, r5
   133d4:	ldm	ip, {r0, r1, r2, r3}
   133d8:	and	ip, r4, #67108864	; 0x4000000
   133dc:	eor	ip, ip, r5
   133e0:	str	ip, [sp, #60]	; 0x3c
   133e4:	stm	lr, {r0, r1, r2, r3}
   133e8:	mov	r1, r7
   133ec:	mov	r0, r6
   133f0:	add	r3, sp, #48	; 0x30
   133f4:	mvn	r2, #0
   133f8:	bl	12d78 <abort@plt+0x2060>
   133fc:	add	sp, sp, #100	; 0x64
   13400:	pop	{r4, r5, r6, r7, pc}
   13404:	push	{r4, r5, r6, r7, r8, lr}
   13408:	mov	r5, r1
   1340c:	ldr	lr, [pc, #100]	; 13478 <abort@plt+0x2760>
   13410:	mov	r4, r2
   13414:	mov	r7, r0
   13418:	mov	r8, r3
   1341c:	ldm	lr!, {r0, r1, r2, r3}
   13420:	sub	sp, sp, #48	; 0x30
   13424:	mov	ip, sp
   13428:	mov	r6, #10
   1342c:	stmia	ip!, {r0, r1, r2, r3}
   13430:	cmp	r4, #0
   13434:	cmpne	r5, #0
   13438:	ldm	lr!, {r0, r1, r2, r3}
   1343c:	str	r6, [sp]
   13440:	stmia	ip!, {r0, r1, r2, r3}
   13444:	ldm	lr, {r0, r1, r2, r3}
   13448:	stm	ip, {r0, r1, r2, r3}
   1344c:	beq	13474 <abort@plt+0x275c>
   13450:	mov	r3, sp
   13454:	mov	r1, r8
   13458:	mov	r0, r7
   1345c:	ldr	r2, [sp, #72]	; 0x48
   13460:	str	r5, [sp, #40]	; 0x28
   13464:	str	r4, [sp, #44]	; 0x2c
   13468:	bl	12d78 <abort@plt+0x2060>
   1346c:	add	sp, sp, #48	; 0x30
   13470:	pop	{r4, r5, r6, r7, r8, pc}
   13474:	bl	10d18 <abort@plt>
   13478:	andeq	r6, r2, ip, lsr r2
   1347c:	push	{lr}		; (str lr, [sp, #-4]!)
   13480:	sub	sp, sp, #12
   13484:	mvn	ip, #0
   13488:	str	ip, [sp]
   1348c:	bl	13404 <abort@plt+0x26ec>
   13490:	add	sp, sp, #12
   13494:	pop	{pc}		; (ldr pc, [sp], #4)
   13498:	push	{lr}		; (str lr, [sp, #-4]!)
   1349c:	sub	sp, sp, #12
   134a0:	mvn	ip, #0
   134a4:	mov	r3, r2
   134a8:	str	ip, [sp]
   134ac:	mov	r2, r1
   134b0:	mov	r1, r0
   134b4:	mov	r0, #0
   134b8:	bl	13404 <abort@plt+0x26ec>
   134bc:	add	sp, sp, #12
   134c0:	pop	{pc}		; (ldr pc, [sp], #4)
   134c4:	push	{lr}		; (str lr, [sp, #-4]!)
   134c8:	sub	sp, sp, #12
   134cc:	str	r3, [sp]
   134d0:	mov	r3, r2
   134d4:	mov	r2, r1
   134d8:	mov	r1, r0
   134dc:	mov	r0, #0
   134e0:	bl	13404 <abort@plt+0x26ec>
   134e4:	add	sp, sp, #12
   134e8:	pop	{pc}		; (ldr pc, [sp], #4)
   134ec:	ldr	r3, [pc]	; 134f4 <abort@plt+0x27dc>
   134f0:	b	12d78 <abort@plt+0x2060>
   134f4:	andeq	r6, r2, r0, ror #1
   134f8:	mov	r2, r1
   134fc:	ldr	r3, [pc, #8]	; 1350c <abort@plt+0x27f4>
   13500:	mov	r1, r0
   13504:	mov	r0, #0
   13508:	b	12d78 <abort@plt+0x2060>
   1350c:	andeq	r6, r2, r0, ror #1
   13510:	ldr	r3, [pc, #4]	; 1351c <abort@plt+0x2804>
   13514:	mvn	r2, #0
   13518:	b	12d78 <abort@plt+0x2060>
   1351c:	andeq	r6, r2, r0, ror #1
   13520:	mov	r1, r0
   13524:	ldr	r3, [pc, #8]	; 13534 <abort@plt+0x281c>
   13528:	mvn	r2, #0
   1352c:	mov	r0, #0
   13530:	b	12d78 <abort@plt+0x2060>
   13534:	andeq	r6, r2, r0, ror #1
   13538:	push	{r4, r5, r6, r7, r8, lr}
   1353c:	mov	r8, r0
   13540:	ldr	r5, [pc, #84]	; 1359c <abort@plt+0x2884>
   13544:	mov	r7, r1
   13548:	mov	r4, r2
   1354c:	mov	r2, r4
   13550:	mov	r1, r7
   13554:	mov	r0, r8
   13558:	bl	10ca0 <write@plt>
   1355c:	subs	r6, r0, #0
   13560:	bge	13594 <abort@plt+0x287c>
   13564:	bl	10c70 <__errno_location@plt>
   13568:	ldr	r3, [r0]
   1356c:	cmp	r3, #4
   13570:	beq	1354c <abort@plt+0x2834>
   13574:	cmp	r4, r5
   13578:	sub	r3, r3, #22
   1357c:	clz	r3, r3
   13580:	lsr	r3, r3, #5
   13584:	movls	r3, #0
   13588:	cmp	r3, #0
   1358c:	mov	r4, r5
   13590:	bne	1354c <abort@plt+0x2834>
   13594:	mov	r0, r6
   13598:	pop	{r4, r5, r6, r7, r8, pc}
   1359c:	svcvc	0x00f00000	; IMB
   135a0:	push	{r4, r5, r6, lr}
   135a4:	sub	sp, sp, #32
   135a8:	cmp	r1, #0
   135ac:	mov	r4, r0
   135b0:	ldr	r5, [sp, #48]	; 0x30
   135b4:	ldr	r6, [sp, #52]	; 0x34
   135b8:	beq	138d0 <abort@plt+0x2bb8>
   135bc:	stm	sp, {r2, r3}
   135c0:	mov	r3, r1
   135c4:	ldr	r2, [pc, #808]	; 138f4 <abort@plt+0x2bdc>
   135c8:	mov	r1, #1
   135cc:	bl	10cb8 <__fprintf_chk@plt>
   135d0:	mov	r2, #5
   135d4:	ldr	r1, [pc, #796]	; 138f8 <abort@plt+0x2be0>
   135d8:	mov	r0, #0
   135dc:	bl	10b98 <dcgettext@plt>
   135e0:	ldr	r3, [pc, #788]	; 138fc <abort@plt+0x2be4>
   135e4:	ldr	r2, [pc, #788]	; 13900 <abort@plt+0x2be8>
   135e8:	str	r3, [sp]
   135ec:	mov	r1, #1
   135f0:	mov	r3, r0
   135f4:	mov	r0, r4
   135f8:	bl	10cb8 <__fprintf_chk@plt>
   135fc:	mov	r1, r4
   13600:	mov	r0, #10
   13604:	bl	10b8c <fputc_unlocked@plt>
   13608:	mov	r2, #5
   1360c:	ldr	r1, [pc, #752]	; 13904 <abort@plt+0x2bec>
   13610:	mov	r0, #0
   13614:	bl	10b98 <dcgettext@plt>
   13618:	mov	r1, #1
   1361c:	ldr	r3, [pc, #740]	; 13908 <abort@plt+0x2bf0>
   13620:	mov	r2, r0
   13624:	mov	r0, r4
   13628:	bl	10cb8 <__fprintf_chk@plt>
   1362c:	mov	r1, r4
   13630:	mov	r0, #10
   13634:	bl	10b8c <fputc_unlocked@plt>
   13638:	cmp	r6, #9
   1363c:	ldrls	pc, [pc, r6, lsl #2]
   13640:	b	138e8 <abort@plt+0x2bd0>
   13644:	andeq	r3, r1, r8, asr #13
   13648:	ldrdeq	r3, [r1], -r0
   1364c:	strdeq	r3, [r1], -ip
   13650:	andeq	r3, r1, r0, lsr r7
   13654:	andeq	r3, r1, ip, ror #14
   13658:	andeq	r3, r1, r8, lsr #15
   1365c:	andeq	r3, r1, r4, ror #15
   13660:	andeq	r3, r1, r8, lsr #16
   13664:	andeq	r3, r1, r8, ror r8
   13668:	andeq	r3, r1, ip, ror #12
   1366c:	ldr	r1, [pc, #664]	; 1390c <abort@plt+0x2bf4>
   13670:	mov	r2, #5
   13674:	mov	r0, #0
   13678:	bl	10b98 <dcgettext@plt>
   1367c:	ldr	ip, [r5, #32]
   13680:	ldr	r1, [r5, #28]
   13684:	ldr	r2, [r5, #24]
   13688:	ldr	r3, [r5]
   1368c:	ldr	r6, [r5, #20]
   13690:	str	ip, [sp, #28]
   13694:	ldr	lr, [r5, #16]
   13698:	str	r1, [sp, #24]
   1369c:	ldr	ip, [r5, #12]
   136a0:	str	r2, [sp, #20]
   136a4:	ldr	r1, [r5, #8]
   136a8:	ldr	r2, [r5, #4]
   136ac:	str	r6, [sp, #16]
   136b0:	stmib	sp, {r1, ip, lr}
   136b4:	mov	r1, #1
   136b8:	str	r2, [sp]
   136bc:	mov	r2, r0
   136c0:	mov	r0, r4
   136c4:	bl	10cb8 <__fprintf_chk@plt>
   136c8:	add	sp, sp, #32
   136cc:	pop	{r4, r5, r6, pc}
   136d0:	mov	r2, #5
   136d4:	ldr	r1, [pc, #564]	; 13910 <abort@plt+0x2bf8>
   136d8:	mov	r0, #0
   136dc:	bl	10b98 <dcgettext@plt>
   136e0:	ldr	r3, [r5]
   136e4:	mov	r1, #1
   136e8:	mov	r2, r0
   136ec:	mov	r0, r4
   136f0:	add	sp, sp, #32
   136f4:	pop	{r4, r5, r6, lr}
   136f8:	b	10cb8 <__fprintf_chk@plt>
   136fc:	mov	r2, #5
   13700:	ldr	r1, [pc, #524]	; 13914 <abort@plt+0x2bfc>
   13704:	mov	r0, #0
   13708:	bl	10b98 <dcgettext@plt>
   1370c:	ldr	r2, [r5, #4]
   13710:	ldr	r3, [r5]
   13714:	mov	r1, #1
   13718:	str	r2, [sp, #48]	; 0x30
   1371c:	mov	r2, r0
   13720:	mov	r0, r4
   13724:	add	sp, sp, #32
   13728:	pop	{r4, r5, r6, lr}
   1372c:	b	10cb8 <__fprintf_chk@plt>
   13730:	mov	r2, #5
   13734:	ldr	r1, [pc, #476]	; 13918 <abort@plt+0x2c00>
   13738:	mov	r0, #0
   1373c:	bl	10b98 <dcgettext@plt>
   13740:	ldr	r1, [r5, #8]
   13744:	ldr	r2, [r5, #4]
   13748:	ldr	r3, [r5]
   1374c:	str	r1, [sp, #52]	; 0x34
   13750:	str	r2, [sp, #48]	; 0x30
   13754:	mov	r1, #1
   13758:	mov	r2, r0
   1375c:	mov	r0, r4
   13760:	add	sp, sp, #32
   13764:	pop	{r4, r5, r6, lr}
   13768:	b	10cb8 <__fprintf_chk@plt>
   1376c:	mov	r2, #5
   13770:	ldr	r1, [pc, #420]	; 1391c <abort@plt+0x2c04>
   13774:	mov	r0, #0
   13778:	bl	10b98 <dcgettext@plt>
   1377c:	ldr	r1, [r5, #8]
   13780:	ldr	ip, [r5, #12]
   13784:	ldr	r2, [r5, #4]
   13788:	ldr	r3, [r5]
   1378c:	stmib	sp, {r1, ip}
   13790:	str	r2, [sp]
   13794:	mov	r1, #1
   13798:	mov	r2, r0
   1379c:	mov	r0, r4
   137a0:	bl	10cb8 <__fprintf_chk@plt>
   137a4:	b	136c8 <abort@plt+0x29b0>
   137a8:	mov	r2, #5
   137ac:	ldr	r1, [pc, #364]	; 13920 <abort@plt+0x2c08>
   137b0:	mov	r0, #0
   137b4:	bl	10b98 <dcgettext@plt>
   137b8:	add	r1, r5, #8
   137bc:	ldr	r2, [r5, #4]
   137c0:	ldm	r1, {r1, ip, lr}
   137c4:	ldr	r3, [r5]
   137c8:	str	r2, [sp]
   137cc:	stmib	sp, {r1, ip, lr}
   137d0:	mov	r1, #1
   137d4:	mov	r2, r0
   137d8:	mov	r0, r4
   137dc:	bl	10cb8 <__fprintf_chk@plt>
   137e0:	b	136c8 <abort@plt+0x29b0>
   137e4:	mov	r2, #5
   137e8:	ldr	r1, [pc, #308]	; 13924 <abort@plt+0x2c0c>
   137ec:	mov	r0, #0
   137f0:	bl	10b98 <dcgettext@plt>
   137f4:	add	r1, r5, #8
   137f8:	ldr	r2, [r5, #4]
   137fc:	ldm	r1, {r1, ip, lr}
   13800:	ldr	r6, [r5, #20]
   13804:	ldr	r3, [r5]
   13808:	stmib	sp, {r1, ip, lr}
   1380c:	mov	r1, #1
   13810:	str	r2, [sp]
   13814:	str	r6, [sp, #16]
   13818:	mov	r2, r0
   1381c:	mov	r0, r4
   13820:	bl	10cb8 <__fprintf_chk@plt>
   13824:	b	136c8 <abort@plt+0x29b0>
   13828:	mov	r2, #5
   1382c:	ldr	r1, [pc, #244]	; 13928 <abort@plt+0x2c10>
   13830:	mov	r0, #0
   13834:	bl	10b98 <dcgettext@plt>
   13838:	ldr	r2, [r5, #24]
   1383c:	ldr	r3, [r5]
   13840:	ldr	r6, [r5, #20]
   13844:	ldr	lr, [r5, #16]
   13848:	ldr	ip, [r5, #12]
   1384c:	str	r2, [sp, #20]
   13850:	ldr	r1, [r5, #8]
   13854:	ldr	r2, [r5, #4]
   13858:	str	r6, [sp, #16]
   1385c:	stmib	sp, {r1, ip, lr}
   13860:	mov	r1, #1
   13864:	str	r2, [sp]
   13868:	mov	r2, r0
   1386c:	mov	r0, r4
   13870:	bl	10cb8 <__fprintf_chk@plt>
   13874:	b	136c8 <abort@plt+0x29b0>
   13878:	mov	r2, #5
   1387c:	ldr	r1, [pc, #168]	; 1392c <abort@plt+0x2c14>
   13880:	mov	r0, #0
   13884:	bl	10b98 <dcgettext@plt>
   13888:	ldr	r1, [r5, #28]
   1388c:	ldr	r2, [r5, #24]
   13890:	ldr	r3, [r5]
   13894:	ldr	r6, [r5, #20]
   13898:	ldr	lr, [r5, #16]
   1389c:	str	r1, [sp, #24]
   138a0:	ldr	ip, [r5, #12]
   138a4:	str	r2, [sp, #20]
   138a8:	ldr	r1, [r5, #8]
   138ac:	ldr	r2, [r5, #4]
   138b0:	str	r6, [sp, #16]
   138b4:	stmib	sp, {r1, ip, lr}
   138b8:	mov	r1, #1
   138bc:	str	r2, [sp]
   138c0:	mov	r2, r0
   138c4:	mov	r0, r4
   138c8:	bl	10cb8 <__fprintf_chk@plt>
   138cc:	b	136c8 <abort@plt+0x29b0>
   138d0:	str	r3, [sp]
   138d4:	mov	r1, #1
   138d8:	mov	r3, r2
   138dc:	ldr	r2, [pc, #76]	; 13930 <abort@plt+0x2c18>
   138e0:	bl	10cb8 <__fprintf_chk@plt>
   138e4:	b	135d0 <abort@plt+0x28b8>
   138e8:	mov	r2, #5
   138ec:	ldr	r1, [pc, #64]	; 13934 <abort@plt+0x2c1c>
   138f0:	b	13674 <abort@plt+0x295c>
   138f4:	andeq	r4, r1, r8, lsl #29
   138f8:	muleq	r1, ip, lr
   138fc:	andeq	r0, r0, r6, ror #15
   13900:	andeq	r5, r1, r4, ror r1
   13904:	andeq	r4, r1, r0, lsr #29
   13908:	andeq	r4, r1, ip, asr #30
   1390c:	andeq	r5, r1, ip, ror r0
   13910:	andeq	r4, r1, r0, ror pc
   13914:	andeq	r4, r1, r0, lsl #31
   13918:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1391c:			; <UNDEFINED> instruction: 0x00014fb4
   13920:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13924:	strdeq	r4, [r1], -r8
   13928:	andeq	r5, r1, r0, lsr #32
   1392c:	andeq	r5, r1, ip, asr #32
   13930:	muleq	r1, r4, lr
   13934:	strheq	r5, [r1], -r0
   13938:	push	{r4, r5, lr}
   1393c:	sub	sp, sp, #12
   13940:	ldr	r5, [sp, #24]
   13944:	ldr	ip, [r5]
   13948:	cmp	ip, #0
   1394c:	beq	13968 <abort@plt+0x2c50>
   13950:	mov	lr, r5
   13954:	mov	ip, #0
   13958:	ldr	r4, [lr, #4]!
   1395c:	add	ip, ip, #1
   13960:	cmp	r4, #0
   13964:	bne	13958 <abort@plt+0x2c40>
   13968:	stm	sp, {r5, ip}
   1396c:	bl	135a0 <abort@plt+0x2888>
   13970:	add	sp, sp, #12
   13974:	pop	{r4, r5, pc}
   13978:	push	{r4, r5, lr}
   1397c:	sub	sp, sp, #52	; 0x34
   13980:	add	r5, sp, #4
   13984:	ldr	r4, [sp, #64]	; 0x40
   13988:	mov	ip, #0
   1398c:	sub	r4, r4, #4
   13990:	ldr	lr, [r4, #4]!
   13994:	cmp	lr, #0
   13998:	str	lr, [r5, #4]!
   1399c:	beq	139ac <abort@plt+0x2c94>
   139a0:	add	ip, ip, #1
   139a4:	cmp	ip, #10
   139a8:	bne	13990 <abort@plt+0x2c78>
   139ac:	add	lr, sp, #8
   139b0:	str	ip, [sp, #4]
   139b4:	str	lr, [sp]
   139b8:	bl	135a0 <abort@plt+0x2888>
   139bc:	add	sp, sp, #52	; 0x34
   139c0:	pop	{r4, r5, pc}
   139c4:	push	{r3}		; (str r3, [sp, #-4]!)
   139c8:	push	{r4, lr}
   139cc:	sub	sp, sp, #60	; 0x3c
   139d0:	add	lr, sp, #56	; 0x38
   139d4:	add	r3, sp, #72	; 0x48
   139d8:	str	r3, [lr, #-44]!	; 0xffffffd4
   139dc:	add	r4, sp, #68	; 0x44
   139e0:	mov	r3, #0
   139e4:	ldr	ip, [r4, #4]!
   139e8:	cmp	ip, #0
   139ec:	str	ip, [lr, #4]!
   139f0:	beq	13a00 <abort@plt+0x2ce8>
   139f4:	add	r3, r3, #1
   139f8:	cmp	r3, #10
   139fc:	bne	139e4 <abort@plt+0x2ccc>
   13a00:	add	ip, sp, #16
   13a04:	str	r3, [sp, #4]
   13a08:	str	ip, [sp]
   13a0c:	ldr	r3, [sp, #68]	; 0x44
   13a10:	bl	135a0 <abort@plt+0x2888>
   13a14:	add	sp, sp, #60	; 0x3c
   13a18:	pop	{r4, lr}
   13a1c:	add	sp, sp, #4
   13a20:	bx	lr
   13a24:	ldr	r3, [pc, #116]	; 13aa0 <abort@plt+0x2d88>
   13a28:	push	{r4, lr}
   13a2c:	mov	r0, #10
   13a30:	ldr	r1, [r3]
   13a34:	bl	10b8c <fputc_unlocked@plt>
   13a38:	mov	r2, #5
   13a3c:	ldr	r1, [pc, #96]	; 13aa4 <abort@plt+0x2d8c>
   13a40:	mov	r0, #0
   13a44:	bl	10b98 <dcgettext@plt>
   13a48:	ldr	r2, [pc, #88]	; 13aa8 <abort@plt+0x2d90>
   13a4c:	mov	r1, r0
   13a50:	mov	r0, #1
   13a54:	bl	10c94 <__printf_chk@plt>
   13a58:	mov	r2, #5
   13a5c:	ldr	r1, [pc, #72]	; 13aac <abort@plt+0x2d94>
   13a60:	mov	r0, #0
   13a64:	bl	10b98 <dcgettext@plt>
   13a68:	ldr	r3, [pc, #64]	; 13ab0 <abort@plt+0x2d98>
   13a6c:	ldr	r2, [pc, #64]	; 13ab4 <abort@plt+0x2d9c>
   13a70:	mov	r1, r0
   13a74:	mov	r0, #1
   13a78:	bl	10c94 <__printf_chk@plt>
   13a7c:	mov	r2, #5
   13a80:	ldr	r1, [pc, #48]	; 13ab8 <abort@plt+0x2da0>
   13a84:	mov	r0, #0
   13a88:	bl	10b98 <dcgettext@plt>
   13a8c:	ldr	r2, [pc, #40]	; 13abc <abort@plt+0x2da4>
   13a90:	pop	{r4, lr}
   13a94:	mov	r1, r0
   13a98:	mov	r0, #1
   13a9c:	b	10c94 <__printf_chk@plt>
   13aa0:	andeq	r6, r2, r4, lsr #2
   13aa4:	andeq	r5, r1, ip, ror #1
   13aa8:	andeq	r5, r1, r0, lsl #2
   13aac:	andeq	r5, r1, r8, lsl r1
   13ab0:	andeq	r4, r1, r8, lsl #23
   13ab4:			; <UNDEFINED> instruction: 0x00014bb0
   13ab8:	andeq	r5, r1, ip, lsr #2
   13abc:	andeq	r5, r1, r4, asr r1
   13ac0:	push	{r4, lr}
   13ac4:	bl	14090 <abort@plt+0x3378>
   13ac8:	cmp	r0, #0
   13acc:	popne	{r4, pc}
   13ad0:	bl	14008 <abort@plt+0x32f0>
   13ad4:	push	{r4, lr}
   13ad8:	bl	14090 <abort@plt+0x3378>
   13adc:	cmp	r0, #0
   13ae0:	popne	{r4, pc}
   13ae4:	bl	14008 <abort@plt+0x32f0>
   13ae8:	push	{r4, lr}
   13aec:	bl	14090 <abort@plt+0x3378>
   13af0:	cmp	r0, #0
   13af4:	popne	{r4, pc}
   13af8:	bl	14008 <abort@plt+0x32f0>
   13afc:	push	{r4, r5, r6, lr}
   13b00:	mov	r5, r0
   13b04:	mov	r4, r1
   13b08:	bl	140bc <abort@plt+0x33a4>
   13b0c:	cmp	r0, #0
   13b10:	popne	{r4, r5, r6, pc}
   13b14:	adds	r4, r4, #0
   13b18:	movne	r4, #1
   13b1c:	cmp	r5, #0
   13b20:	orreq	r4, r4, #1
   13b24:	cmp	r4, #0
   13b28:	popeq	{r4, r5, r6, pc}
   13b2c:	bl	14008 <abort@plt+0x32f0>
   13b30:	push	{r4, lr}
   13b34:	cmp	r1, #0
   13b38:	orreq	r1, r1, #1
   13b3c:	bl	140bc <abort@plt+0x33a4>
   13b40:	cmp	r0, #0
   13b44:	popne	{r4, pc}
   13b48:	bl	14008 <abort@plt+0x32f0>
   13b4c:	push	{r4, r5, r6, lr}
   13b50:	mov	r6, r0
   13b54:	mov	r5, r1
   13b58:	mov	r4, r2
   13b5c:	bl	14414 <abort@plt+0x36fc>
   13b60:	cmp	r0, #0
   13b64:	popne	{r4, r5, r6, pc}
   13b68:	cmp	r6, #0
   13b6c:	beq	13b7c <abort@plt+0x2e64>
   13b70:	cmp	r5, #0
   13b74:	cmpne	r4, #0
   13b78:	popeq	{r4, r5, r6, pc}
   13b7c:	bl	14008 <abort@plt+0x32f0>
   13b80:	b	13b4c <abort@plt+0x2e34>
   13b84:	cmp	r2, #0
   13b88:	cmpne	r1, #0
   13b8c:	moveq	r2, #1
   13b90:	moveq	r1, r2
   13b94:	push	{r4, lr}
   13b98:	bl	14414 <abort@plt+0x36fc>
   13b9c:	cmp	r0, #0
   13ba0:	popne	{r4, pc}
   13ba4:	bl	14008 <abort@plt+0x32f0>
   13ba8:	mov	r2, r1
   13bac:	mov	r1, r0
   13bb0:	mov	r0, #0
   13bb4:	b	13b4c <abort@plt+0x2e34>
   13bb8:	mov	r2, r1
   13bbc:	mov	r1, r0
   13bc0:	mov	r0, #0
   13bc4:	b	13b84 <abort@plt+0x2e6c>
   13bc8:	push	{r4, r5, r6, lr}
   13bcc:	subs	r6, r0, #0
   13bd0:	sub	sp, sp, #8
   13bd4:	mov	r5, r1
   13bd8:	ldr	r4, [r1]
   13bdc:	beq	13c18 <abort@plt+0x2f00>
   13be0:	lsr	r1, r4, #1
   13be4:	add	r3, r1, #1
   13be8:	mvn	r3, r3
   13bec:	cmp	r4, r3
   13bf0:	bhi	13c14 <abort@plt+0x2efc>
   13bf4:	add	r4, r4, #1
   13bf8:	add	r4, r4, r1
   13bfc:	mov	r0, r6
   13c00:	mov	r1, r4
   13c04:	bl	13b4c <abort@plt+0x2e34>
   13c08:	str	r4, [r5]
   13c0c:	add	sp, sp, #8
   13c10:	pop	{r4, r5, r6, pc}
   13c14:	bl	14008 <abort@plt+0x32f0>
   13c18:	cmp	r4, #0
   13c1c:	bne	13bfc <abort@plt+0x2ee4>
   13c20:	mov	r1, r2
   13c24:	mov	r0, #64	; 0x40
   13c28:	str	r2, [sp, #4]
   13c2c:	bl	14554 <abort@plt+0x383c>
   13c30:	ldr	r2, [sp, #4]
   13c34:	cmp	r0, #0
   13c38:	movne	r4, r0
   13c3c:	addeq	r4, r0, #1
   13c40:	b	13bfc <abort@plt+0x2ee4>
   13c44:	mov	r2, #1
   13c48:	b	13bc8 <abort@plt+0x2eb0>
   13c4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c50:	sub	sp, sp, #12
   13c54:	ldr	r6, [r1]
   13c58:	mov	sl, r1
   13c5c:	mov	r9, r0
   13c60:	asrs	r4, r6, #1
   13c64:	mov	r5, r2
   13c68:	mov	fp, r3
   13c6c:	ldr	r7, [sp, #48]	; 0x30
   13c70:	bmi	13ddc <abort@plt+0x30c4>
   13c74:	mvn	r3, #-2147483648	; 0x80000000
   13c78:	sub	r3, r3, r4
   13c7c:	cmp	r6, r3
   13c80:	movle	r3, #0
   13c84:	movgt	r3, #1
   13c88:	mvn	r8, fp
   13c8c:	cmp	r3, #0
   13c90:	addeq	r4, r4, r6
   13c94:	mvnne	r4, #-2147483648	; 0x80000000
   13c98:	lsr	r8, r8, #31
   13c9c:	cmp	fp, r4
   13ca0:	movge	r3, #0
   13ca4:	andlt	r3, r8, #1
   13ca8:	cmp	r3, #0
   13cac:	beq	13d94 <abort@plt+0x307c>
   13cb0:	cmp	r7, #0
   13cb4:	blt	13e64 <abort@plt+0x314c>
   13cb8:	bne	13e5c <abort@plt+0x3144>
   13cbc:	mov	r2, #64	; 0x40
   13cc0:	mov	r1, r7
   13cc4:	mov	r0, r2
   13cc8:	str	r2, [sp, #4]
   13ccc:	bl	14760 <abort@plt+0x3a48>
   13cd0:	ldr	r2, [sp, #4]
   13cd4:	mov	r1, r7
   13cd8:	mov	r4, r0
   13cdc:	mov	r0, r2
   13ce0:	bl	14980 <abort@plt+0x3c68>
   13ce4:	ldr	r2, [sp, #4]
   13ce8:	sub	r1, r2, r1
   13cec:	cmp	r9, #0
   13cf0:	sub	r3, r4, r6
   13cf4:	streq	r9, [sl]
   13cf8:	cmp	r3, r5
   13cfc:	bge	13d80 <abort@plt+0x3068>
   13d00:	cmp	r5, #0
   13d04:	blt	13df0 <abort@plt+0x30d8>
   13d08:	cmp	r6, #0
   13d0c:	blt	13d2c <abort@plt+0x3014>
   13d10:	mvn	r3, #-2147483648	; 0x80000000
   13d14:	sub	r3, r3, r5
   13d18:	cmp	r6, r3
   13d1c:	movle	r3, #0
   13d20:	movgt	r3, #1
   13d24:	cmp	r3, #0
   13d28:	bne	13eec <abort@plt+0x31d4>
   13d2c:	add	r5, r6, r5
   13d30:	cmp	fp, r5
   13d34:	movge	r8, #0
   13d38:	andlt	r8, r8, #1
   13d3c:	cmp	r8, #0
   13d40:	mov	r4, r5
   13d44:	bne	13eec <abort@plt+0x31d4>
   13d48:	cmp	r7, #0
   13d4c:	blt	13e04 <abort@plt+0x30ec>
   13d50:	beq	13d7c <abort@plt+0x3064>
   13d54:	cmp	r5, #0
   13d58:	blt	13eac <abort@plt+0x3194>
   13d5c:	mov	r1, r7
   13d60:	mvn	r0, #-2147483648	; 0x80000000
   13d64:	bl	14760 <abort@plt+0x3a48>
   13d68:	cmp	r5, r0
   13d6c:	movle	r0, #0
   13d70:	movgt	r0, #1
   13d74:	cmp	r0, #0
   13d78:	bne	13eec <abort@plt+0x31d4>
   13d7c:	mul	r1, r5, r7
   13d80:	mov	r0, r9
   13d84:	bl	13afc <abort@plt+0x2de4>
   13d88:	str	r4, [sl]
   13d8c:	add	sp, sp, #12
   13d90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d94:	cmp	r7, #0
   13d98:	blt	13e30 <abort@plt+0x3118>
   13d9c:	beq	13cbc <abort@plt+0x2fa4>
   13da0:	cmp	r4, #0
   13da4:	blt	13e6c <abort@plt+0x3154>
   13da8:	mov	r1, r7
   13dac:	mvn	r0, #-2147483648	; 0x80000000
   13db0:	bl	14760 <abort@plt+0x3a48>
   13db4:	cmp	r0, r4
   13db8:	movge	r0, #0
   13dbc:	movlt	r0, #1
   13dc0:	cmp	r0, #0
   13dc4:	mvnne	r2, #-2147483648	; 0x80000000
   13dc8:	bne	13cc0 <abort@plt+0x2fa8>
   13dcc:	mul	r1, r7, r4
   13dd0:	cmp	r1, #63	; 0x3f
   13dd4:	bgt	13cec <abort@plt+0x2fd4>
   13dd8:	b	13cbc <abort@plt+0x2fa4>
   13ddc:	rsb	r3, r4, #-2147483648	; 0x80000000
   13de0:	cmp	r6, r3
   13de4:	movge	r3, #0
   13de8:	movlt	r3, #1
   13dec:	b	13c88 <abort@plt+0x2f70>
   13df0:	rsb	r3, r5, #-2147483648	; 0x80000000
   13df4:	cmp	r6, r3
   13df8:	movge	r3, #0
   13dfc:	movlt	r3, #1
   13e00:	b	13d24 <abort@plt+0x300c>
   13e04:	cmp	r5, #0
   13e08:	blt	13e90 <abort@plt+0x3178>
   13e0c:	cmn	r7, #1
   13e10:	beq	13d7c <abort@plt+0x3064>
   13e14:	mov	r1, r7
   13e18:	mov	r0, #-2147483648	; 0x80000000
   13e1c:	bl	14760 <abort@plt+0x3a48>
   13e20:	cmp	r5, r0
   13e24:	movle	r0, #0
   13e28:	movgt	r0, #1
   13e2c:	b	13d74 <abort@plt+0x305c>
   13e30:	cmp	r4, #0
   13e34:	blt	13ed0 <abort@plt+0x31b8>
   13e38:	cmn	r7, #1
   13e3c:	beq	13dcc <abort@plt+0x30b4>
   13e40:	mov	r1, r7
   13e44:	mov	r0, #-2147483648	; 0x80000000
   13e48:	bl	14760 <abort@plt+0x3a48>
   13e4c:	cmp	r0, r4
   13e50:	movge	r0, #0
   13e54:	movlt	r0, #1
   13e58:	b	13dc0 <abort@plt+0x30a8>
   13e5c:	mov	r4, fp
   13e60:	b	13da8 <abort@plt+0x3090>
   13e64:	mov	r4, fp
   13e68:	b	13e38 <abort@plt+0x3120>
   13e6c:	cmn	r4, #1
   13e70:	beq	13dcc <abort@plt+0x30b4>
   13e74:	mov	r1, r4
   13e78:	mov	r0, #-2147483648	; 0x80000000
   13e7c:	bl	14760 <abort@plt+0x3a48>
   13e80:	cmp	r7, r0
   13e84:	movle	r0, #0
   13e88:	movgt	r0, #1
   13e8c:	b	13dc0 <abort@plt+0x30a8>
   13e90:	mov	r1, r7
   13e94:	mvn	r0, #-2147483648	; 0x80000000
   13e98:	bl	14760 <abort@plt+0x3a48>
   13e9c:	cmp	r5, r0
   13ea0:	movge	r0, #0
   13ea4:	movlt	r0, #1
   13ea8:	b	13d74 <abort@plt+0x305c>
   13eac:	cmn	r5, #1
   13eb0:	beq	13d7c <abort@plt+0x3064>
   13eb4:	mov	r1, r5
   13eb8:	mov	r0, #-2147483648	; 0x80000000
   13ebc:	bl	14760 <abort@plt+0x3a48>
   13ec0:	cmp	r7, r0
   13ec4:	movle	r0, #0
   13ec8:	movgt	r0, #1
   13ecc:	b	13d74 <abort@plt+0x305c>
   13ed0:	mov	r1, r7
   13ed4:	mvn	r0, #-2147483648	; 0x80000000
   13ed8:	bl	14760 <abort@plt+0x3a48>
   13edc:	cmp	r0, r4
   13ee0:	movle	r0, #0
   13ee4:	movgt	r0, #1
   13ee8:	b	13dc0 <abort@plt+0x30a8>
   13eec:	bl	14008 <abort@plt+0x32f0>
   13ef0:	push	{r4, lr}
   13ef4:	mov	r1, #1
   13ef8:	bl	14048 <abort@plt+0x3330>
   13efc:	cmp	r0, #0
   13f00:	popne	{r4, pc}
   13f04:	bl	14008 <abort@plt+0x32f0>
   13f08:	push	{r4, lr}
   13f0c:	mov	r1, #1
   13f10:	bl	14048 <abort@plt+0x3330>
   13f14:	cmp	r0, #0
   13f18:	popne	{r4, pc}
   13f1c:	bl	14008 <abort@plt+0x32f0>
   13f20:	push	{r4, lr}
   13f24:	bl	14048 <abort@plt+0x3330>
   13f28:	cmp	r0, #0
   13f2c:	popne	{r4, pc}
   13f30:	bl	14008 <abort@plt+0x32f0>
   13f34:	push	{r4, lr}
   13f38:	bl	14048 <abort@plt+0x3330>
   13f3c:	cmp	r0, #0
   13f40:	popne	{r4, pc}
   13f44:	bl	14008 <abort@plt+0x32f0>
   13f48:	push	{r4, r5, r6, lr}
   13f4c:	mov	r6, r0
   13f50:	mov	r0, r1
   13f54:	mov	r4, r1
   13f58:	bl	14090 <abort@plt+0x3378>
   13f5c:	subs	r5, r0, #0
   13f60:	beq	13f78 <abort@plt+0x3260>
   13f64:	mov	r2, r4
   13f68:	mov	r1, r6
   13f6c:	bl	10b68 <memcpy@plt>
   13f70:	mov	r0, r5
   13f74:	pop	{r4, r5, r6, pc}
   13f78:	bl	14008 <abort@plt+0x32f0>
   13f7c:	push	{r4, r5, r6, lr}
   13f80:	mov	r6, r0
   13f84:	mov	r0, r1
   13f88:	mov	r4, r1
   13f8c:	bl	14090 <abort@plt+0x3378>
   13f90:	subs	r5, r0, #0
   13f94:	beq	13fac <abort@plt+0x3294>
   13f98:	mov	r2, r4
   13f9c:	mov	r1, r6
   13fa0:	bl	10b68 <memcpy@plt>
   13fa4:	mov	r0, r5
   13fa8:	pop	{r4, r5, r6, pc}
   13fac:	bl	14008 <abort@plt+0x32f0>
   13fb0:	push	{r4, r5, r6, lr}
   13fb4:	mov	r6, r0
   13fb8:	add	r0, r1, #1
   13fbc:	mov	r4, r1
   13fc0:	bl	14090 <abort@plt+0x3378>
   13fc4:	subs	r5, r0, #0
   13fc8:	beq	13fe8 <abort@plt+0x32d0>
   13fcc:	mov	r3, #0
   13fd0:	mov	r1, r6
   13fd4:	strb	r3, [r5, r4]
   13fd8:	mov	r2, r4
   13fdc:	bl	10b68 <memcpy@plt>
   13fe0:	mov	r0, r5
   13fe4:	pop	{r4, r5, r6, pc}
   13fe8:	bl	14008 <abort@plt+0x32f0>
   13fec:	push	{r4, lr}
   13ff0:	mov	r4, r0
   13ff4:	bl	10c64 <strlen@plt>
   13ff8:	add	r1, r0, #1
   13ffc:	mov	r0, r4
   14000:	pop	{r4, lr}
   14004:	b	13f48 <abort@plt+0x3230>
   14008:	ldr	r3, [pc, #44]	; 1403c <abort@plt+0x3324>
   1400c:	push	{r4, lr}
   14010:	mov	r2, #5
   14014:	ldr	r1, [pc, #36]	; 14040 <abort@plt+0x3328>
   14018:	mov	r0, #0
   1401c:	ldr	r4, [r3]
   14020:	bl	10b98 <dcgettext@plt>
   14024:	ldr	r2, [pc, #24]	; 14044 <abort@plt+0x332c>
   14028:	mov	r1, #0
   1402c:	mov	r3, r0
   14030:	mov	r0, r4
   14034:	bl	10c04 <error@plt>
   14038:	bl	10d18 <abort@plt>
   1403c:	andeq	r6, r2, ip, asr #1
   14040:	andeq	r5, r1, r4, lsr #3
   14044:	andeq	r4, r1, r4, lsr #26
   14048:	cmp	r1, #0
   1404c:	cmpne	r0, #0
   14050:	moveq	r1, #1
   14054:	moveq	r0, r1
   14058:	umull	r2, r3, r0, r1
   1405c:	adds	r3, r3, #0
   14060:	movne	r3, #1
   14064:	cmp	r2, #0
   14068:	blt	14078 <abort@plt+0x3360>
   1406c:	cmp	r3, #0
   14070:	bne	14078 <abort@plt+0x3360>
   14074:	b	10b14 <calloc@plt>
   14078:	push	{r4, lr}
   1407c:	bl	10c70 <__errno_location@plt>
   14080:	mov	r3, #12
   14084:	str	r3, [r0]
   14088:	mov	r0, #0
   1408c:	pop	{r4, pc}
   14090:	cmp	r0, #0
   14094:	moveq	r0, #1
   14098:	cmp	r0, #0
   1409c:	blt	140a4 <abort@plt+0x338c>
   140a0:	b	10c10 <malloc@plt>
   140a4:	push	{r4, lr}
   140a8:	bl	10c70 <__errno_location@plt>
   140ac:	mov	r3, #12
   140b0:	str	r3, [r0]
   140b4:	mov	r0, #0
   140b8:	pop	{r4, pc}
   140bc:	cmp	r0, #0
   140c0:	beq	140e4 <abort@plt+0x33cc>
   140c4:	cmp	r1, #0
   140c8:	push	{lr}		; (str lr, [sp, #-4]!)
   140cc:	sub	sp, sp, #12
   140d0:	beq	140ec <abort@plt+0x33d4>
   140d4:	blt	14104 <abort@plt+0x33ec>
   140d8:	add	sp, sp, #12
   140dc:	pop	{lr}		; (ldr lr, [sp], #4)
   140e0:	b	10ba4 <realloc@plt>
   140e4:	mov	r0, r1
   140e8:	b	14090 <abort@plt+0x3378>
   140ec:	str	r1, [sp, #4]
   140f0:	bl	14294 <abort@plt+0x357c>
   140f4:	ldr	r3, [sp, #4]
   140f8:	mov	r0, r3
   140fc:	add	sp, sp, #12
   14100:	pop	{pc}		; (ldr pc, [sp], #4)
   14104:	bl	10c70 <__errno_location@plt>
   14108:	mov	r2, #12
   1410c:	mov	r3, #0
   14110:	str	r2, [r0]
   14114:	b	140f8 <abort@plt+0x33e0>
   14118:	push	{r4, r5, r6, lr}
   1411c:	mov	r4, r0
   14120:	bl	10bec <__fpending@plt>
   14124:	ldr	r5, [r4]
   14128:	and	r5, r5, #32
   1412c:	mov	r6, r0
   14130:	mov	r0, r4
   14134:	bl	14194 <abort@plt+0x347c>
   14138:	cmp	r5, #0
   1413c:	mov	r4, r0
   14140:	bne	14160 <abort@plt+0x3448>
   14144:	cmp	r0, #0
   14148:	beq	14158 <abort@plt+0x3440>
   1414c:	cmp	r6, #0
   14150:	beq	1417c <abort@plt+0x3464>
   14154:	mvn	r4, #0
   14158:	mov	r0, r4
   1415c:	pop	{r4, r5, r6, pc}
   14160:	cmp	r0, #0
   14164:	bne	14154 <abort@plt+0x343c>
   14168:	bl	10c70 <__errno_location@plt>
   1416c:	str	r4, [r0]
   14170:	mvn	r4, #0
   14174:	mov	r0, r4
   14178:	pop	{r4, r5, r6, pc}
   1417c:	bl	10c70 <__errno_location@plt>
   14180:	ldr	r4, [r0]
   14184:	subs	r4, r4, #9
   14188:	mvnne	r4, #0
   1418c:	mov	r0, r4
   14190:	pop	{r4, r5, r6, pc}
   14194:	push	{r4, r5, lr}
   14198:	sub	sp, sp, #12
   1419c:	mov	r4, r0
   141a0:	bl	10cac <fileno@plt>
   141a4:	cmp	r0, #0
   141a8:	mov	r0, r4
   141ac:	blt	14228 <abort@plt+0x3510>
   141b0:	bl	10c28 <__freading@plt>
   141b4:	cmp	r0, #0
   141b8:	bne	141f4 <abort@plt+0x34dc>
   141bc:	mov	r0, r4
   141c0:	bl	14234 <abort@plt+0x351c>
   141c4:	cmp	r0, #0
   141c8:	beq	14224 <abort@plt+0x350c>
   141cc:	bl	10c70 <__errno_location@plt>
   141d0:	mov	r5, r0
   141d4:	mov	r0, r4
   141d8:	ldr	r4, [r5]
   141dc:	bl	10cc4 <fclose@plt>
   141e0:	cmp	r4, #0
   141e4:	mvnne	r0, #0
   141e8:	strne	r4, [r5]
   141ec:	add	sp, sp, #12
   141f0:	pop	{r4, r5, pc}
   141f4:	mov	r0, r4
   141f8:	bl	10cac <fileno@plt>
   141fc:	mov	r3, #1
   14200:	str	r3, [sp]
   14204:	mov	r2, #0
   14208:	mov	r3, #0
   1420c:	bl	10bd4 <lseek64@plt>
   14210:	mvn	r3, #0
   14214:	mvn	r2, #0
   14218:	cmp	r1, r3
   1421c:	cmpeq	r0, r2
   14220:	bne	141bc <abort@plt+0x34a4>
   14224:	mov	r0, r4
   14228:	add	sp, sp, #12
   1422c:	pop	{r4, r5, lr}
   14230:	b	10cc4 <fclose@plt>
   14234:	push	{r4, lr}
   14238:	subs	r4, r0, #0
   1423c:	sub	sp, sp, #8
   14240:	beq	1425c <abort@plt+0x3544>
   14244:	bl	10c28 <__freading@plt>
   14248:	cmp	r0, #0
   1424c:	beq	1425c <abort@plt+0x3544>
   14250:	ldr	r3, [r4]
   14254:	tst	r3, #256	; 0x100
   14258:	bne	1426c <abort@plt+0x3554>
   1425c:	mov	r0, r4
   14260:	add	sp, sp, #8
   14264:	pop	{r4, lr}
   14268:	b	10b44 <fflush@plt>
   1426c:	mov	r3, #1
   14270:	str	r3, [sp]
   14274:	mov	r2, #0
   14278:	mov	r3, #0
   1427c:	mov	r0, r4
   14280:	bl	142ec <abort@plt+0x35d4>
   14284:	mov	r0, r4
   14288:	add	sp, sp, #8
   1428c:	pop	{r4, lr}
   14290:	b	10b44 <fflush@plt>
   14294:	push	{r4, r5, lr}
   14298:	sub	sp, sp, #12
   1429c:	mov	r5, r0
   142a0:	bl	10c70 <__errno_location@plt>
   142a4:	mov	r2, #0
   142a8:	mov	r4, r0
   142ac:	ldr	r3, [r0]
   142b0:	str	r2, [r4]
   142b4:	mov	r0, r5
   142b8:	str	r3, [sp]
   142bc:	str	r3, [sp, #4]
   142c0:	bl	10b50 <free@plt>
   142c4:	ldr	r3, [r4]
   142c8:	add	r2, sp, #8
   142cc:	cmp	r3, #0
   142d0:	moveq	r3, #4
   142d4:	movne	r3, #0
   142d8:	add	r3, r2, r3
   142dc:	ldr	r3, [r3, #-8]
   142e0:	str	r3, [r4]
   142e4:	add	sp, sp, #12
   142e8:	pop	{r4, r5, pc}
   142ec:	push	{r4, r5, r6, r7, r8, lr}
   142f0:	sub	sp, sp, #8
   142f4:	ldmib	r0, {ip, lr}
   142f8:	mov	r4, r0
   142fc:	ldr	r5, [sp, #32]
   14300:	cmp	lr, ip
   14304:	beq	1431c <abort@plt+0x3604>
   14308:	str	r5, [sp, #32]
   1430c:	mov	r0, r4
   14310:	add	sp, sp, #8
   14314:	pop	{r4, r5, r6, r7, r8, lr}
   14318:	b	10cd0 <fseeko64@plt>
   1431c:	ldr	lr, [r0, #20]
   14320:	ldr	ip, [r0, #16]
   14324:	cmp	lr, ip
   14328:	bne	14308 <abort@plt+0x35f0>
   1432c:	ldr	r8, [r0, #36]	; 0x24
   14330:	cmp	r8, #0
   14334:	bne	14308 <abort@plt+0x35f0>
   14338:	mov	r6, r2
   1433c:	mov	r7, r3
   14340:	bl	10cac <fileno@plt>
   14344:	mov	r2, r6
   14348:	mov	r3, r7
   1434c:	str	r5, [sp]
   14350:	bl	10bd4 <lseek64@plt>
   14354:	mvn	r3, #0
   14358:	mvn	r2, #0
   1435c:	cmp	r1, r3
   14360:	cmpeq	r0, r2
   14364:	beq	14384 <abort@plt+0x366c>
   14368:	ldr	r3, [r4]
   1436c:	strd	r0, [r4, #80]	; 0x50
   14370:	mov	r0, r8
   14374:	bic	r3, r3, #16
   14378:	str	r3, [r4]
   1437c:	add	sp, sp, #8
   14380:	pop	{r4, r5, r6, r7, r8, pc}
   14384:	mvn	r0, #0
   14388:	b	1437c <abort@plt+0x3664>
   1438c:	push	{r4, lr}
   14390:	mov	r0, #14
   14394:	bl	10cf4 <nl_langinfo@plt>
   14398:	cmp	r0, #0
   1439c:	beq	143b4 <abort@plt+0x369c>
   143a0:	ldrb	r2, [r0]
   143a4:	ldr	r3, [pc, #16]	; 143bc <abort@plt+0x36a4>
   143a8:	cmp	r2, #0
   143ac:	moveq	r0, r3
   143b0:	pop	{r4, pc}
   143b4:	ldr	r0, [pc]	; 143bc <abort@plt+0x36a4>
   143b8:	pop	{r4, pc}
   143bc:			; <UNDEFINED> instruction: 0x000151b8
   143c0:	push	{r4, r5, r6, r7, lr}
   143c4:	subs	r6, r0, #0
   143c8:	sub	sp, sp, #12
   143cc:	addeq	r6, sp, #4
   143d0:	mov	r0, r6
   143d4:	mov	r5, r2
   143d8:	mov	r7, r1
   143dc:	bl	10bf8 <mbrtowc@plt>
   143e0:	cmp	r5, #0
   143e4:	cmnne	r0, #3
   143e8:	mov	r4, r0
   143ec:	bls	14408 <abort@plt+0x36f0>
   143f0:	mov	r0, #0
   143f4:	bl	14460 <abort@plt+0x3748>
   143f8:	cmp	r0, #0
   143fc:	moveq	r4, #1
   14400:	ldrbeq	r3, [r7]
   14404:	streq	r3, [r6]
   14408:	mov	r0, r4
   1440c:	add	sp, sp, #12
   14410:	pop	{r4, r5, r6, r7, pc}
   14414:	push	{r4, r5, r6, lr}
   14418:	subs	r4, r2, #0
   1441c:	mov	r6, r0
   14420:	mov	r5, r1
   14424:	beq	14450 <abort@plt+0x3738>
   14428:	mov	r1, r4
   1442c:	mvn	r0, #0
   14430:	bl	14554 <abort@plt+0x383c>
   14434:	cmp	r0, r5
   14438:	bcs	14450 <abort@plt+0x3738>
   1443c:	bl	10c70 <__errno_location@plt>
   14440:	mov	r3, #12
   14444:	str	r3, [r0]
   14448:	mov	r0, #0
   1444c:	pop	{r4, r5, r6, pc}
   14450:	mul	r1, r5, r4
   14454:	mov	r0, r6
   14458:	pop	{r4, r5, r6, lr}
   1445c:	b	140bc <abort@plt+0x33a4>
   14460:	push	{lr}		; (str lr, [sp, #-4]!)
   14464:	sub	sp, sp, #268	; 0x10c
   14468:	add	r1, sp, #4
   1446c:	ldr	r2, [pc, #60]	; 144b0 <abort@plt+0x3798>
   14470:	bl	144bc <abort@plt+0x37a4>
   14474:	cmp	r0, #0
   14478:	movne	r0, #0
   1447c:	bne	144a8 <abort@plt+0x3790>
   14480:	ldr	r1, [pc, #44]	; 144b4 <abort@plt+0x379c>
   14484:	add	r0, sp, #4
   14488:	bl	10b38 <strcmp@plt>
   1448c:	cmp	r0, #0
   14490:	beq	144a8 <abort@plt+0x3790>
   14494:	add	r0, sp, #4
   14498:	ldr	r1, [pc, #24]	; 144b8 <abort@plt+0x37a0>
   1449c:	bl	10b38 <strcmp@plt>
   144a0:	adds	r0, r0, #0
   144a4:	movne	r0, #1
   144a8:	add	sp, sp, #268	; 0x10c
   144ac:	pop	{pc}		; (ldr pc, [sp], #4)
   144b0:	andeq	r0, r0, r1, lsl #2
   144b4:	andeq	r5, r1, r0, asr #3
   144b8:	andeq	r5, r1, r4, asr #3
   144bc:	push	{r4, r5, r6, lr}
   144c0:	mov	r5, r1
   144c4:	mov	r1, #0
   144c8:	mov	r4, r2
   144cc:	bl	10cdc <setlocale@plt>
   144d0:	subs	r6, r0, #0
   144d4:	beq	14530 <abort@plt+0x3818>
   144d8:	bl	10c64 <strlen@plt>
   144dc:	cmp	r4, r0
   144e0:	bhi	14518 <abort@plt+0x3800>
   144e4:	cmp	r4, #0
   144e8:	bne	144f4 <abort@plt+0x37dc>
   144ec:	mov	r0, #34	; 0x22
   144f0:	pop	{r4, r5, r6, pc}
   144f4:	sub	r4, r4, #1
   144f8:	mov	r1, r6
   144fc:	mov	r2, r4
   14500:	mov	r0, r5
   14504:	bl	10b68 <memcpy@plt>
   14508:	mov	r3, #0
   1450c:	strb	r3, [r5, r4]
   14510:	mov	r0, #34	; 0x22
   14514:	pop	{r4, r5, r6, pc}
   14518:	add	r2, r0, #1
   1451c:	mov	r1, r6
   14520:	mov	r0, r5
   14524:	bl	10b68 <memcpy@plt>
   14528:	mov	r0, #0
   1452c:	pop	{r4, r5, r6, pc}
   14530:	cmp	r4, #0
   14534:	beq	14544 <abort@plt+0x382c>
   14538:	strb	r6, [r5]
   1453c:	mov	r0, #22
   14540:	pop	{r4, r5, r6, pc}
   14544:	mov	r0, #22
   14548:	pop	{r4, r5, r6, pc}
   1454c:	mov	r1, #0
   14550:	b	10cdc <setlocale@plt>
   14554:	subs	r2, r1, #1
   14558:	bxeq	lr
   1455c:	bcc	14734 <abort@plt+0x3a1c>
   14560:	cmp	r0, r1
   14564:	bls	14718 <abort@plt+0x3a00>
   14568:	tst	r1, r2
   1456c:	beq	14724 <abort@plt+0x3a0c>
   14570:	clz	r3, r0
   14574:	clz	r2, r1
   14578:	sub	r3, r2, r3
   1457c:	rsbs	r3, r3, #31
   14580:	addne	r3, r3, r3, lsl #1
   14584:	mov	r2, #0
   14588:	addne	pc, pc, r3, lsl #2
   1458c:	nop			; (mov r0, r0)
   14590:	cmp	r0, r1, lsl #31
   14594:	adc	r2, r2, r2
   14598:	subcs	r0, r0, r1, lsl #31
   1459c:	cmp	r0, r1, lsl #30
   145a0:	adc	r2, r2, r2
   145a4:	subcs	r0, r0, r1, lsl #30
   145a8:	cmp	r0, r1, lsl #29
   145ac:	adc	r2, r2, r2
   145b0:	subcs	r0, r0, r1, lsl #29
   145b4:	cmp	r0, r1, lsl #28
   145b8:	adc	r2, r2, r2
   145bc:	subcs	r0, r0, r1, lsl #28
   145c0:	cmp	r0, r1, lsl #27
   145c4:	adc	r2, r2, r2
   145c8:	subcs	r0, r0, r1, lsl #27
   145cc:	cmp	r0, r1, lsl #26
   145d0:	adc	r2, r2, r2
   145d4:	subcs	r0, r0, r1, lsl #26
   145d8:	cmp	r0, r1, lsl #25
   145dc:	adc	r2, r2, r2
   145e0:	subcs	r0, r0, r1, lsl #25
   145e4:	cmp	r0, r1, lsl #24
   145e8:	adc	r2, r2, r2
   145ec:	subcs	r0, r0, r1, lsl #24
   145f0:	cmp	r0, r1, lsl #23
   145f4:	adc	r2, r2, r2
   145f8:	subcs	r0, r0, r1, lsl #23
   145fc:	cmp	r0, r1, lsl #22
   14600:	adc	r2, r2, r2
   14604:	subcs	r0, r0, r1, lsl #22
   14608:	cmp	r0, r1, lsl #21
   1460c:	adc	r2, r2, r2
   14610:	subcs	r0, r0, r1, lsl #21
   14614:	cmp	r0, r1, lsl #20
   14618:	adc	r2, r2, r2
   1461c:	subcs	r0, r0, r1, lsl #20
   14620:	cmp	r0, r1, lsl #19
   14624:	adc	r2, r2, r2
   14628:	subcs	r0, r0, r1, lsl #19
   1462c:	cmp	r0, r1, lsl #18
   14630:	adc	r2, r2, r2
   14634:	subcs	r0, r0, r1, lsl #18
   14638:	cmp	r0, r1, lsl #17
   1463c:	adc	r2, r2, r2
   14640:	subcs	r0, r0, r1, lsl #17
   14644:	cmp	r0, r1, lsl #16
   14648:	adc	r2, r2, r2
   1464c:	subcs	r0, r0, r1, lsl #16
   14650:	cmp	r0, r1, lsl #15
   14654:	adc	r2, r2, r2
   14658:	subcs	r0, r0, r1, lsl #15
   1465c:	cmp	r0, r1, lsl #14
   14660:	adc	r2, r2, r2
   14664:	subcs	r0, r0, r1, lsl #14
   14668:	cmp	r0, r1, lsl #13
   1466c:	adc	r2, r2, r2
   14670:	subcs	r0, r0, r1, lsl #13
   14674:	cmp	r0, r1, lsl #12
   14678:	adc	r2, r2, r2
   1467c:	subcs	r0, r0, r1, lsl #12
   14680:	cmp	r0, r1, lsl #11
   14684:	adc	r2, r2, r2
   14688:	subcs	r0, r0, r1, lsl #11
   1468c:	cmp	r0, r1, lsl #10
   14690:	adc	r2, r2, r2
   14694:	subcs	r0, r0, r1, lsl #10
   14698:	cmp	r0, r1, lsl #9
   1469c:	adc	r2, r2, r2
   146a0:	subcs	r0, r0, r1, lsl #9
   146a4:	cmp	r0, r1, lsl #8
   146a8:	adc	r2, r2, r2
   146ac:	subcs	r0, r0, r1, lsl #8
   146b0:	cmp	r0, r1, lsl #7
   146b4:	adc	r2, r2, r2
   146b8:	subcs	r0, r0, r1, lsl #7
   146bc:	cmp	r0, r1, lsl #6
   146c0:	adc	r2, r2, r2
   146c4:	subcs	r0, r0, r1, lsl #6
   146c8:	cmp	r0, r1, lsl #5
   146cc:	adc	r2, r2, r2
   146d0:	subcs	r0, r0, r1, lsl #5
   146d4:	cmp	r0, r1, lsl #4
   146d8:	adc	r2, r2, r2
   146dc:	subcs	r0, r0, r1, lsl #4
   146e0:	cmp	r0, r1, lsl #3
   146e4:	adc	r2, r2, r2
   146e8:	subcs	r0, r0, r1, lsl #3
   146ec:	cmp	r0, r1, lsl #2
   146f0:	adc	r2, r2, r2
   146f4:	subcs	r0, r0, r1, lsl #2
   146f8:	cmp	r0, r1, lsl #1
   146fc:	adc	r2, r2, r2
   14700:	subcs	r0, r0, r1, lsl #1
   14704:	cmp	r0, r1
   14708:	adc	r2, r2, r2
   1470c:	subcs	r0, r0, r1
   14710:	mov	r0, r2
   14714:	bx	lr
   14718:	moveq	r0, #1
   1471c:	movne	r0, #0
   14720:	bx	lr
   14724:	clz	r2, r1
   14728:	rsb	r2, r2, #31
   1472c:	lsr	r0, r0, r2
   14730:	bx	lr
   14734:	cmp	r0, #0
   14738:	mvnne	r0, #0
   1473c:	b	149a0 <abort@plt+0x3c88>
   14740:	cmp	r1, #0
   14744:	beq	14734 <abort@plt+0x3a1c>
   14748:	push	{r0, r1, lr}
   1474c:	bl	14554 <abort@plt+0x383c>
   14750:	pop	{r1, r2, lr}
   14754:	mul	r3, r2, r0
   14758:	sub	r1, r1, r3
   1475c:	bx	lr
   14760:	cmp	r1, #0
   14764:	beq	14970 <abort@plt+0x3c58>
   14768:	eor	ip, r0, r1
   1476c:	rsbmi	r1, r1, #0
   14770:	subs	r2, r1, #1
   14774:	beq	1493c <abort@plt+0x3c24>
   14778:	movs	r3, r0
   1477c:	rsbmi	r3, r0, #0
   14780:	cmp	r3, r1
   14784:	bls	14948 <abort@plt+0x3c30>
   14788:	tst	r1, r2
   1478c:	beq	14958 <abort@plt+0x3c40>
   14790:	clz	r2, r3
   14794:	clz	r0, r1
   14798:	sub	r2, r0, r2
   1479c:	rsbs	r2, r2, #31
   147a0:	addne	r2, r2, r2, lsl #1
   147a4:	mov	r0, #0
   147a8:	addne	pc, pc, r2, lsl #2
   147ac:	nop			; (mov r0, r0)
   147b0:	cmp	r3, r1, lsl #31
   147b4:	adc	r0, r0, r0
   147b8:	subcs	r3, r3, r1, lsl #31
   147bc:	cmp	r3, r1, lsl #30
   147c0:	adc	r0, r0, r0
   147c4:	subcs	r3, r3, r1, lsl #30
   147c8:	cmp	r3, r1, lsl #29
   147cc:	adc	r0, r0, r0
   147d0:	subcs	r3, r3, r1, lsl #29
   147d4:	cmp	r3, r1, lsl #28
   147d8:	adc	r0, r0, r0
   147dc:	subcs	r3, r3, r1, lsl #28
   147e0:	cmp	r3, r1, lsl #27
   147e4:	adc	r0, r0, r0
   147e8:	subcs	r3, r3, r1, lsl #27
   147ec:	cmp	r3, r1, lsl #26
   147f0:	adc	r0, r0, r0
   147f4:	subcs	r3, r3, r1, lsl #26
   147f8:	cmp	r3, r1, lsl #25
   147fc:	adc	r0, r0, r0
   14800:	subcs	r3, r3, r1, lsl #25
   14804:	cmp	r3, r1, lsl #24
   14808:	adc	r0, r0, r0
   1480c:	subcs	r3, r3, r1, lsl #24
   14810:	cmp	r3, r1, lsl #23
   14814:	adc	r0, r0, r0
   14818:	subcs	r3, r3, r1, lsl #23
   1481c:	cmp	r3, r1, lsl #22
   14820:	adc	r0, r0, r0
   14824:	subcs	r3, r3, r1, lsl #22
   14828:	cmp	r3, r1, lsl #21
   1482c:	adc	r0, r0, r0
   14830:	subcs	r3, r3, r1, lsl #21
   14834:	cmp	r3, r1, lsl #20
   14838:	adc	r0, r0, r0
   1483c:	subcs	r3, r3, r1, lsl #20
   14840:	cmp	r3, r1, lsl #19
   14844:	adc	r0, r0, r0
   14848:	subcs	r3, r3, r1, lsl #19
   1484c:	cmp	r3, r1, lsl #18
   14850:	adc	r0, r0, r0
   14854:	subcs	r3, r3, r1, lsl #18
   14858:	cmp	r3, r1, lsl #17
   1485c:	adc	r0, r0, r0
   14860:	subcs	r3, r3, r1, lsl #17
   14864:	cmp	r3, r1, lsl #16
   14868:	adc	r0, r0, r0
   1486c:	subcs	r3, r3, r1, lsl #16
   14870:	cmp	r3, r1, lsl #15
   14874:	adc	r0, r0, r0
   14878:	subcs	r3, r3, r1, lsl #15
   1487c:	cmp	r3, r1, lsl #14
   14880:	adc	r0, r0, r0
   14884:	subcs	r3, r3, r1, lsl #14
   14888:	cmp	r3, r1, lsl #13
   1488c:	adc	r0, r0, r0
   14890:	subcs	r3, r3, r1, lsl #13
   14894:	cmp	r3, r1, lsl #12
   14898:	adc	r0, r0, r0
   1489c:	subcs	r3, r3, r1, lsl #12
   148a0:	cmp	r3, r1, lsl #11
   148a4:	adc	r0, r0, r0
   148a8:	subcs	r3, r3, r1, lsl #11
   148ac:	cmp	r3, r1, lsl #10
   148b0:	adc	r0, r0, r0
   148b4:	subcs	r3, r3, r1, lsl #10
   148b8:	cmp	r3, r1, lsl #9
   148bc:	adc	r0, r0, r0
   148c0:	subcs	r3, r3, r1, lsl #9
   148c4:	cmp	r3, r1, lsl #8
   148c8:	adc	r0, r0, r0
   148cc:	subcs	r3, r3, r1, lsl #8
   148d0:	cmp	r3, r1, lsl #7
   148d4:	adc	r0, r0, r0
   148d8:	subcs	r3, r3, r1, lsl #7
   148dc:	cmp	r3, r1, lsl #6
   148e0:	adc	r0, r0, r0
   148e4:	subcs	r3, r3, r1, lsl #6
   148e8:	cmp	r3, r1, lsl #5
   148ec:	adc	r0, r0, r0
   148f0:	subcs	r3, r3, r1, lsl #5
   148f4:	cmp	r3, r1, lsl #4
   148f8:	adc	r0, r0, r0
   148fc:	subcs	r3, r3, r1, lsl #4
   14900:	cmp	r3, r1, lsl #3
   14904:	adc	r0, r0, r0
   14908:	subcs	r3, r3, r1, lsl #3
   1490c:	cmp	r3, r1, lsl #2
   14910:	adc	r0, r0, r0
   14914:	subcs	r3, r3, r1, lsl #2
   14918:	cmp	r3, r1, lsl #1
   1491c:	adc	r0, r0, r0
   14920:	subcs	r3, r3, r1, lsl #1
   14924:	cmp	r3, r1
   14928:	adc	r0, r0, r0
   1492c:	subcs	r3, r3, r1
   14930:	cmp	ip, #0
   14934:	rsbmi	r0, r0, #0
   14938:	bx	lr
   1493c:	teq	ip, r0
   14940:	rsbmi	r0, r0, #0
   14944:	bx	lr
   14948:	movcc	r0, #0
   1494c:	asreq	r0, ip, #31
   14950:	orreq	r0, r0, #1
   14954:	bx	lr
   14958:	clz	r2, r1
   1495c:	rsb	r2, r2, #31
   14960:	cmp	ip, #0
   14964:	lsr	r0, r3, r2
   14968:	rsbmi	r0, r0, #0
   1496c:	bx	lr
   14970:	cmp	r0, #0
   14974:	mvngt	r0, #-2147483648	; 0x80000000
   14978:	movlt	r0, #-2147483648	; 0x80000000
   1497c:	b	149a0 <abort@plt+0x3c88>
   14980:	cmp	r1, #0
   14984:	beq	14970 <abort@plt+0x3c58>
   14988:	push	{r0, r1, lr}
   1498c:	bl	14768 <abort@plt+0x3a50>
   14990:	pop	{r1, r2, lr}
   14994:	mul	r3, r2, r0
   14998:	sub	r1, r1, r3
   1499c:	bx	lr
   149a0:	push	{r1, lr}
   149a4:	mov	r0, #8
   149a8:	bl	10b2c <raise@plt>
   149ac:	pop	{r1, pc}
   149b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149b4:	mov	r7, r0
   149b8:	ldr	r6, [pc, #72]	; 14a08 <abort@plt+0x3cf0>
   149bc:	ldr	r5, [pc, #72]	; 14a0c <abort@plt+0x3cf4>
   149c0:	add	r6, pc, r6
   149c4:	add	r5, pc, r5
   149c8:	sub	r6, r6, r5
   149cc:	mov	r8, r1
   149d0:	mov	r9, r2
   149d4:	bl	10af4 <calloc@plt-0x20>
   149d8:	asrs	r6, r6, #2
   149dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   149e0:	mov	r4, #0
   149e4:	add	r4, r4, #1
   149e8:	ldr	r3, [r5], #4
   149ec:	mov	r2, r9
   149f0:	mov	r1, r8
   149f4:	mov	r0, r7
   149f8:	blx	r3
   149fc:	cmp	r6, r4
   14a00:	bne	149e4 <abort@plt+0x3ccc>
   14a04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a08:	andeq	r1, r1, r8, asr #10
   14a0c:	andeq	r1, r1, r0, asr #10
   14a10:	bx	lr
   14a14:	ldr	r3, [pc, #12]	; 14a28 <abort@plt+0x3d10>
   14a18:	mov	r1, #0
   14a1c:	add	r3, pc, r3
   14a20:	ldr	r2, [r3]
   14a24:	b	10c7c <__cxa_atexit@plt>
   14a28:	andeq	r1, r1, r0, lsr #13

Disassembly of section .fini:

00014a2c <.fini>:
   14a2c:	push	{r3, lr}
   14a30:	pop	{r3, pc}
