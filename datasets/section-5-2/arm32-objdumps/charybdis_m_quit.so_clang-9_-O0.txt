
../repos/charybdis/modules/core/.libs/m_quit.so:     file format elf32-littlearm


Disassembly of section .init:

00000558 <_init>:
 558:	push	{r3, lr}
 55c:	bl	5e4 <call_weak_fn>
 560:	pop	{r3, pc}

Disassembly of section .plt:

00000564 <.plt>:
 564:	push	{lr}		; (str lr, [sp, #-4]!)
 568:	ldr	lr, [pc, #4]	; 574 <.plt+0x10>
 56c:	add	lr, pc, lr
 570:	ldr	pc, [lr, #8]!
 574:	.word	0x00010a8c

00000578 <rb_current_time@plt>:
 578:	add	ip, pc, #0, 12
 57c:	add	ip, ip, #16, 20	; 0x10000
 580:	ldr	pc, [ip, #2700]!	; 0xa8c

00000584 <__cxa_finalize@plt>:
 584:	add	ip, pc, #0, 12
 588:	add	ip, ip, #16, 20	; 0x10000
 58c:	ldr	pc, [ip, #2692]!	; 0xa84

00000590 <strcpy@plt>:
 590:	add	ip, pc, #0, 12
 594:	add	ip, ip, #16, 20	; 0x10000
 598:	ldr	pc, [ip, #2684]!	; 0xa7c

0000059c <__gmon_start__@plt>:
 59c:	add	ip, pc, #0, 12
 5a0:	add	ip, ip, #16, 20	; 0x10000
 5a4:	ldr	pc, [ip, #2676]!	; 0xa74

000005a8 <strlen@plt>:
 5a8:	add	ip, pc, #0, 12
 5ac:	add	ip, ip, #16, 20	; 0x10000
 5b0:	ldr	pc, [ip, #2668]!	; 0xa6c

000005b4 <snprintf@plt>:
 5b4:	add	ip, pc, #0, 12
 5b8:	add	ip, ip, #16, 20	; 0x10000
 5bc:	ldr	pc, [ip, #2660]!	; 0xa64

000005c0 <exit_client@plt>:
 5c0:	add	ip, pc, #0, 12
 5c4:	add	ip, ip, #16, 20	; 0x10000
 5c8:	ldr	pc, [ip, #2652]!	; 0xa5c

000005cc <privilegeset_in_set@plt>:
 5cc:	add	ip, pc, #0, 12
 5d0:	add	ip, ip, #16, 20	; 0x10000
 5d4:	ldr	pc, [ip, #2644]!	; 0xa54

000005d8 <call_hook@plt>:
 5d8:	add	ip, pc, #0, 12
 5dc:	add	ip, ip, #16, 20	; 0x10000
 5e0:	ldr	pc, [ip, #2636]!	; 0xa4c

Disassembly of section .text:

000005e4 <call_weak_fn>:
 5e4:	ldr	r3, [pc, #20]	; 600 <call_weak_fn+0x1c>
 5e8:	ldr	r2, [pc, #20]	; 604 <call_weak_fn+0x20>
 5ec:	add	r3, pc, r3
 5f0:	ldr	r2, [r3, r2]
 5f4:	cmp	r2, #0
 5f8:	bxeq	lr
 5fc:	b	59c <__gmon_start__@plt>
 600:	.word	0x00010a0c
 604:	.word	0x00000038

00000608 <deregister_tm_clones>:
 608:	ldr	r0, [pc, #44]	; 63c <deregister_tm_clones+0x34>
 60c:	ldr	r3, [pc, #44]	; 640 <deregister_tm_clones+0x38>
 610:	add	r0, pc, r0
 614:	add	r3, pc, r3
 618:	cmp	r3, r0
 61c:	ldr	r3, [pc, #32]	; 644 <deregister_tm_clones+0x3c>
 620:	add	r3, pc, r3
 624:	bxeq	lr
 628:	ldr	r2, [pc, #24]	; 648 <deregister_tm_clones+0x40>
 62c:	ldr	r3, [r3, r2]
 630:	cmp	r3, #0
 634:	bxeq	lr
 638:	bx	r3
 63c:	.word	0x00010ab8
 640:	.word	0x00010ab4
 644:	.word	0x000109d8
 648:	.word	0x00000034

0000064c <register_tm_clones>:
 64c:	ldr	r0, [pc, #56]	; 68c <register_tm_clones+0x40>
 650:	ldr	r3, [pc, #56]	; 690 <register_tm_clones+0x44>
 654:	add	r0, pc, r0
 658:	add	r3, pc, r3
 65c:	sub	r1, r3, r0
 660:	ldr	r3, [pc, #44]	; 694 <register_tm_clones+0x48>
 664:	asr	r1, r1, #2
 668:	add	r3, pc, r3
 66c:	add	r1, r1, r1, lsr #31
 670:	asrs	r1, r1, #1
 674:	bxeq	lr
 678:	ldr	r2, [pc, #24]	; 698 <register_tm_clones+0x4c>
 67c:	ldr	r3, [r3, r2]
 680:	cmp	r3, #0
 684:	bxeq	lr
 688:	bx	r3
 68c:	.word	0x00010a74
 690:	.word	0x00010a70
 694:	.word	0x00010990
 698:	.word	0x00000040

0000069c <__do_global_dtors_aux>:
 69c:	ldr	r3, [pc, #76]	; 6f0 <__do_global_dtors_aux+0x54>
 6a0:	ldr	r2, [pc, #76]	; 6f4 <__do_global_dtors_aux+0x58>
 6a4:	add	r3, pc, r3
 6a8:	add	r2, pc, r2
 6ac:	ldrb	r3, [r3]
 6b0:	cmp	r3, #0
 6b4:	bxne	lr
 6b8:	ldr	r3, [pc, #56]	; 6f8 <__do_global_dtors_aux+0x5c>
 6bc:	push	{r4, lr}
 6c0:	ldr	r3, [r2, r3]
 6c4:	cmp	r3, #0
 6c8:	beq	6d8 <__do_global_dtors_aux+0x3c>
 6cc:	ldr	r3, [pc, #40]	; 6fc <__do_global_dtors_aux+0x60>
 6d0:	ldr	r0, [pc, r3]
 6d4:	bl	584 <__cxa_finalize@plt>
 6d8:	bl	608 <deregister_tm_clones>
 6dc:	ldr	r3, [pc, #28]	; 700 <__do_global_dtors_aux+0x64>
 6e0:	mov	r2, #1
 6e4:	add	r3, pc, r3
 6e8:	strb	r2, [r3]
 6ec:	pop	{r4, pc}
 6f0:	.word	0x00010a24
 6f4:	.word	0x00010950
 6f8:	.word	0x00000030
 6fc:	.word	0x00010970
 700:	.word	0x000109e4

00000704 <frame_dummy>:
 704:	b	64c <register_tm_clones>

00000708 <m_quit>:
 708:	push	{r4, r5, fp, lr}
 70c:	add	fp, sp, #8
 710:	sub	sp, sp, #336	; 0x150
 714:	ldr	ip, [fp, #8]
 718:	str	r0, [fp, #-12]
 71c:	str	r1, [fp, #-16]
 720:	str	r2, [fp, #-20]	; 0xffffffec
 724:	str	r3, [fp, #-24]	; 0xffffffe8
 728:	ldr	r0, [fp, #-24]	; 0xffffffe8
 72c:	cmp	r0, #1
 730:	ble	758 <m_quit+0x50>
 734:	ldr	r0, [fp, #8]
 738:	ldr	r0, [r0, #4]
 73c:	movw	r1, #0
 740:	cmp	r0, r1
 744:	beq	758 <m_quit+0x50>
 748:	ldr	r0, [fp, #8]
 74c:	ldr	r0, [r0, #4]
 750:	str	r0, [fp, #-320]	; 0xfffffec0
 754:	b	764 <m_quit+0x5c>
 758:	ldr	r0, [fp, #-16]
 75c:	add	r0, r0, #88	; 0x58
 760:	str	r0, [fp, #-320]	; 0xfffffec0
 764:	ldr	r0, [fp, #-320]	; 0xfffffec0
 768:	bl	5a8 <strlen@plt>
 76c:	add	r0, r0, #8
 770:	bic	r0, r0, #7
 774:	mov	r1, sp
 778:	sub	r0, r1, r0
 77c:	mov	sp, r0
 780:	str	r0, [fp, #-32]	; 0xffffffe0
 784:	ldr	r0, [fp, #-32]	; 0xffffffe0
 788:	ldr	r1, [fp, #-24]	; 0xffffffe8
 78c:	cmp	r1, #1
 790:	str	r0, [fp, #-324]	; 0xfffffebc
 794:	ble	7bc <m_quit+0xb4>
 798:	ldr	r0, [fp, #8]
 79c:	ldr	r0, [r0, #4]
 7a0:	movw	r1, #0
 7a4:	cmp	r0, r1
 7a8:	beq	7bc <m_quit+0xb4>
 7ac:	ldr	r0, [fp, #8]
 7b0:	ldr	r0, [r0, #4]
 7b4:	str	r0, [fp, #-328]	; 0xfffffeb8
 7b8:	b	7c8 <m_quit+0xc0>
 7bc:	ldr	r0, [fp, #-16]
 7c0:	add	r0, r0, #88	; 0x58
 7c4:	str	r0, [fp, #-328]	; 0xfffffeb8
 7c8:	ldr	r0, [fp, #-328]	; 0xfffffeb8
 7cc:	ldr	r1, [fp, #-324]	; 0xfffffebc
 7d0:	str	r0, [fp, #-332]	; 0xfffffeb4
 7d4:	mov	r0, r1
 7d8:	ldr	r1, [fp, #-332]	; 0xfffffeb4
 7dc:	bl	590 <strcpy@plt>
 7e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
 7e4:	str	r1, [fp, #-36]	; 0xffffffdc
 7e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
 7ec:	str	r1, [fp, #-28]	; 0xffffffe4
 7f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
 7f4:	str	r1, [fp, #-40]	; 0xffffffd8
 7f8:	ldr	r1, [fp, #-20]	; 0xffffffec
 7fc:	ldr	r2, [r1, #64]	; 0x40
 800:	ldr	r3, [r1, #68]	; 0x44
 804:	orr	r2, r2, #512	; 0x200
 808:	str	r3, [r1, #68]	; 0x44
 80c:	str	r2, [r1, #64]	; 0x40
 810:	ldr	r1, [fp, #-28]	; 0xffffffe4
 814:	str	r0, [fp, #-336]	; 0xfffffeb0
 818:	mov	r0, r1
 81c:	bl	5a8 <strlen@plt>
 820:	cmp	r0, #260	; 0x104
 824:	bls	834 <m_quit+0x12c>
 828:	ldr	r0, [fp, #-28]	; 0xffffffe4
 82c:	movw	r1, #0
 830:	strb	r1, [r0, #260]	; 0x104
 834:	ldr	r0, [fp, #-28]	; 0xffffffe4
 838:	bl	b40 <strip_colour>
 83c:	ldr	r1, [pc, #424]	; 9ec <m_quit+0x2e4>
 840:	add	r1, pc, r1
 844:	ldr	r2, [fp, #-16]
 848:	str	r2, [fp, #-316]	; 0xfffffec4
 84c:	ldr	r2, [fp, #-40]	; 0xffffffd8
 850:	str	r2, [fp, #-308]	; 0xfffffecc
 854:	str	r2, [fp, #-312]	; 0xfffffec8
 858:	ldr	r1, [r1]
 85c:	sub	r2, fp, #316	; 0x13c
 860:	str	r0, [fp, #-340]	; 0xfffffeac
 864:	mov	r0, r1
 868:	mov	r1, r2
 86c:	bl	5d8 <call_hook@plt>
 870:	ldr	r0, [pc, #368]	; 9e8 <m_quit+0x2e0>
 874:	ldr	r0, [pc, r0]
 878:	ldr	r1, [fp, #-312]	; 0xfffffec8
 87c:	str	r1, [fp, #-40]	; 0xffffffd8
 880:	ldr	r0, [r0, #212]	; 0xd4
 884:	cmp	r0, #0
 888:	beq	8d4 <m_quit+0x1cc>
 88c:	ldr	r0, [fp, #-312]	; 0xfffffec8
 890:	ldr	r1, [fp, #-308]	; 0xfffffecc
 894:	cmp	r0, r1
 898:	bne	8d4 <m_quit+0x1cc>
 89c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 8a0:	ldrb	r0, [r0]
 8a4:	cmp	r0, #0
 8a8:	beq	8d4 <m_quit+0x1cc>
 8ac:	ldr	r0, [pc, #316]	; 9f0 <m_quit+0x2e8>
 8b0:	add	r2, pc, r0
 8b4:	sub	lr, fp, #256	; 0x100
 8b8:	sub	r0, lr, #45	; 0x2d
 8bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8c0:	movw	r1, #261	; 0x105
 8c4:	bl	5b4 <snprintf@plt>
 8c8:	sub	lr, fp, #256	; 0x100
 8cc:	sub	r1, lr, #45	; 0x2d
 8d0:	str	r1, [fp, #-40]	; 0xffffffd8
 8d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
 8d8:	movw	r1, #0
 8dc:	cmp	r0, r1
 8e0:	beq	9b0 <m_quit+0x2a8>
 8e4:	ldr	r0, [fp, #-20]	; 0xffffffec
 8e8:	ldr	r0, [r0, #24]
 8ec:	movw	r1, #0
 8f0:	cmp	r0, r1
 8f4:	beq	930 <m_quit+0x228>
 8f8:	ldr	r0, [fp, #-20]	; 0xffffffec
 8fc:	ldr	r0, [r0, #24]
 900:	ldr	r0, [r0, #36]	; 0x24
 904:	movw	r1, #0
 908:	cmp	r0, r1
 90c:	beq	930 <m_quit+0x228>
 910:	ldr	r0, [pc, #220]	; 9f4 <m_quit+0x2ec>
 914:	add	r1, pc, r0
 918:	ldr	r0, [fp, #-20]	; 0xffffffec
 91c:	ldr	r0, [r0, #24]
 920:	ldr	r0, [r0, #36]	; 0x24
 924:	bl	5cc <privilegeset_in_set@plt>
 928:	cmp	r0, #0
 92c:	bne	9cc <m_quit+0x2c4>
 930:	ldr	r0, [fp, #-20]	; 0xffffffec
 934:	ldr	r0, [r0, #56]	; 0x38
 938:	and	r0, r0, #4096	; 0x1000
 93c:	cmp	r0, #0
 940:	beq	970 <m_quit+0x268>
 944:	ldr	r0, [fp, #-20]	; 0xffffffec
 948:	ldr	r0, [r0, #24]
 94c:	movw	r1, #0
 950:	cmp	r0, r1
 954:	beq	970 <m_quit+0x268>
 958:	ldr	r0, [fp, #-20]	; 0xffffffec
 95c:	ldr	r0, [r0, #24]
 960:	ldr	r0, [r0, #36]	; 0x24
 964:	movw	r1, #0
 968:	cmp	r0, r1
 96c:	beq	9cc <m_quit+0x2c4>
 970:	ldr	r0, [fp, #-312]	; 0xfffffec8
 974:	ldr	r1, [fp, #-308]	; 0xfffffecc
 978:	cmp	r0, r1
 97c:	bne	9cc <m_quit+0x2c4>
 980:	ldr	r0, [pc, #112]	; 9f8 <m_quit+0x2f0>
 984:	ldr	r0, [pc, r0]
 988:	ldr	r1, [fp, #-20]	; 0xffffffec
 98c:	ldr	r1, [r1, #432]	; 0x1b0
 990:	ldr	r1, [r1, #48]	; 0x30
 994:	ldr	r0, [r0, #92]	; 0x5c
 998:	add	r0, r1, r0
 99c:	str	r0, [fp, #-344]	; 0xfffffea8
 9a0:	bl	578 <rb_current_time@plt>
 9a4:	ldr	r1, [fp, #-344]	; 0xfffffea8
 9a8:	cmp	r1, r0
 9ac:	ble	9cc <m_quit+0x2c4>
 9b0:	ldr	r0, [pc, #68]	; 9fc <m_quit+0x2f4>
 9b4:	add	r3, pc, r0
 9b8:	ldr	r0, [fp, #-16]
 9bc:	ldr	r1, [fp, #-20]	; 0xffffffec
 9c0:	ldr	r2, [fp, #-20]	; 0xffffffec
 9c4:	bl	5c0 <exit_client@plt>
 9c8:	b	9e0 <m_quit+0x2d8>
 9cc:	ldr	r0, [fp, #-16]
 9d0:	ldr	r1, [fp, #-20]	; 0xffffffec
 9d4:	ldr	r2, [fp, #-20]	; 0xffffffec
 9d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 9dc:	bl	5c0 <exit_client@plt>
 9e0:	sub	sp, fp, #8
 9e4:	pop	{r4, r5, fp, pc}
 9e8:	.word	0x000107c8
 9ec:	.word	0x0001088c
 9f0:	.word	0x00000565
 9f4:	.word	0x0000050a
 9f8:	.word	0x000106b8
 9fc:	.word	0x00000477

00000a00 <ms_quit>:
 a00:	push	{r4, r5, fp, lr}
 a04:	add	fp, sp, #8
 a08:	sub	sp, sp, #48	; 0x30
 a0c:	ldr	ip, [fp, #8]
 a10:	str	r0, [fp, #-12]
 a14:	str	r1, [fp, #-16]
 a18:	str	r2, [fp, #-20]	; 0xffffffec
 a1c:	str	r3, [fp, #-24]	; 0xffffffe8
 a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
 a24:	cmp	r0, #1
 a28:	ble	a50 <ms_quit+0x50>
 a2c:	ldr	r0, [fp, #8]
 a30:	ldr	r0, [r0, #4]
 a34:	movw	r1, #0
 a38:	cmp	r0, r1
 a3c:	beq	a50 <ms_quit+0x50>
 a40:	ldr	r0, [fp, #8]
 a44:	ldr	r0, [r0, #4]
 a48:	str	r0, [fp, #-40]	; 0xffffffd8
 a4c:	b	a5c <ms_quit+0x5c>
 a50:	ldr	r0, [fp, #-16]
 a54:	add	r0, r0, #88	; 0x58
 a58:	str	r0, [fp, #-40]	; 0xffffffd8
 a5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
 a60:	bl	5a8 <strlen@plt>
 a64:	add	r0, r0, #8
 a68:	bic	r0, r0, #7
 a6c:	mov	r1, sp
 a70:	sub	r0, r1, r0
 a74:	mov	sp, r0
 a78:	str	r0, [fp, #-32]	; 0xffffffe0
 a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
 a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
 a84:	cmp	r1, #1
 a88:	str	r0, [fp, #-44]	; 0xffffffd4
 a8c:	ble	ab4 <ms_quit+0xb4>
 a90:	ldr	r0, [fp, #8]
 a94:	ldr	r0, [r0, #4]
 a98:	movw	r1, #0
 a9c:	cmp	r0, r1
 aa0:	beq	ab4 <ms_quit+0xb4>
 aa4:	ldr	r0, [fp, #8]
 aa8:	ldr	r0, [r0, #4]
 aac:	str	r0, [fp, #-48]	; 0xffffffd0
 ab0:	b	ac0 <ms_quit+0xc0>
 ab4:	ldr	r0, [fp, #-16]
 ab8:	add	r0, r0, #88	; 0x58
 abc:	str	r0, [fp, #-48]	; 0xffffffd0
 ac0:	ldr	r0, [fp, #-48]	; 0xffffffd0
 ac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
 ac8:	str	r0, [fp, #-52]	; 0xffffffcc
 acc:	mov	r0, r1
 ad0:	ldr	r1, [fp, #-52]	; 0xffffffcc
 ad4:	bl	590 <strcpy@plt>
 ad8:	ldr	r1, [fp, #-32]	; 0xffffffe0
 adc:	str	r1, [fp, #-36]	; 0xffffffdc
 ae0:	ldr	r1, [fp, #-36]	; 0xffffffdc
 ae4:	str	r1, [fp, #-28]	; 0xffffffe4
 ae8:	ldr	r1, [fp, #-20]	; 0xffffffec
 aec:	ldr	r2, [r1, #64]	; 0x40
 af0:	ldr	r3, [r1, #68]	; 0x44
 af4:	orr	r2, r2, #512	; 0x200
 af8:	str	r3, [r1, #68]	; 0x44
 afc:	str	r2, [r1, #64]	; 0x40
 b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
 b04:	str	r0, [fp, #-56]	; 0xffffffc8
 b08:	mov	r0, r1
 b0c:	bl	5a8 <strlen@plt>
 b10:	cmp	r0, #260	; 0x104
 b14:	bls	b24 <ms_quit+0x124>
 b18:	ldr	r0, [fp, #-28]	; 0xffffffe4
 b1c:	movw	r1, #0
 b20:	strb	r1, [r0, #260]	; 0x104
 b24:	ldr	r0, [fp, #-16]
 b28:	ldr	r1, [fp, #-20]	; 0xffffffec
 b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
 b30:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b34:	bl	5c0 <exit_client@plt>
 b38:	sub	sp, fp, #8
 b3c:	pop	{r4, r5, fp, pc}

00000b40 <strip_colour>:
 b40:	sub	sp, sp, #24
 b44:	str	r0, [sp, #20]
 b48:	ldr	r0, [sp, #20]
 b4c:	str	r0, [sp, #16]
 b50:	ldr	r0, [sp, #20]
 b54:	str	r0, [sp, #12]
 b58:	movw	r0, #0
 b5c:	str	r0, [sp, #8]
 b60:	ldr	r0, [sp, #16]
 b64:	movw	r1, #0
 b68:	cmp	r0, r1
 b6c:	movw	r0, #0
 b70:	str	r0, [sp, #4]
 b74:	beq	b90 <strip_colour+0x50>
 b78:	ldr	r0, [sp, #16]
 b7c:	ldrb	r0, [r0]
 b80:	cmp	r0, #0
 b84:	movw	r0, #0
 b88:	movne	r0, #1
 b8c:	str	r0, [sp, #4]
 b90:	ldr	r0, [sp, #4]
 b94:	tst	r0, #1
 b98:	beq	db0 <strip_colour+0x270>
 b9c:	ldr	r0, [sp, #16]
 ba0:	ldrb	r0, [r0]
 ba4:	mov	r1, r0
 ba8:	cmp	r0, #2
 bac:	str	r1, [sp]
 bb0:	beq	d5c <strip_colour+0x21c>
 bb4:	b	bb8 <strip_colour+0x78>
 bb8:	ldr	r0, [sp]
 bbc:	cmp	r0, #3
 bc0:	beq	c50 <strip_colour+0x110>
 bc4:	b	bc8 <strip_colour+0x88>
 bc8:	ldr	r0, [sp]
 bcc:	cmp	r0, #4
 bd0:	beq	d5c <strip_colour+0x21c>
 bd4:	b	bd8 <strip_colour+0x98>
 bd8:	ldr	r0, [sp]
 bdc:	sub	r1, r0, #6
 be0:	cmp	r1, #2
 be4:	bcc	d5c <strip_colour+0x21c>
 be8:	b	bec <strip_colour+0xac>
 bec:	ldr	r0, [sp]
 bf0:	cmp	r0, #15
 bf4:	beq	d5c <strip_colour+0x21c>
 bf8:	b	bfc <strip_colour+0xbc>
 bfc:	ldr	r0, [sp]
 c00:	sub	r1, r0, #22
 c04:	cmp	r1, #2
 c08:	bcc	d5c <strip_colour+0x21c>
 c0c:	b	c10 <strip_colour+0xd0>
 c10:	ldr	r0, [sp]
 c14:	cmp	r0, #27
 c18:	beq	d5c <strip_colour+0x21c>
 c1c:	b	c20 <strip_colour+0xe0>
 c20:	ldr	r0, [sp]
 c24:	cmp	r0, #29
 c28:	beq	d5c <strip_colour+0x21c>
 c2c:	b	c30 <strip_colour+0xf0>
 c30:	ldr	r0, [sp]
 c34:	cmp	r0, #31
 c38:	beq	d5c <strip_colour+0x21c>
 c3c:	b	c40 <strip_colour+0x100>
 c40:	ldr	r0, [sp]
 c44:	cmp	r0, #32
 c48:	beq	d60 <strip_colour+0x220>
 c4c:	b	d7c <strip_colour+0x23c>
 c50:	ldr	r0, [pc, #396]	; de4 <strip_colour+0x2a4>
 c54:	ldr	r0, [pc, r0]
 c58:	ldr	r1, [sp, #16]
 c5c:	ldrb	r1, [r1, #1]
 c60:	mov	r2, r1
 c64:	ldr	r3, [pc, #392]	; df4 <strip_colour+0x2b4>
 c68:	ldr	r3, [pc, r3]
 c6c:	add	r1, r3, r1, lsl #2
 c70:	ldr	r1, [r1]
 c74:	and	r1, r1, #16
 c78:	cmp	r1, #0
 c7c:	beq	d58 <strip_colour+0x218>
 c80:	ldr	r0, [pc, #352]	; de8 <strip_colour+0x2a8>
 c84:	ldr	r0, [pc, r0]
 c88:	ldr	r1, [sp, #16]
 c8c:	add	r1, r1, #1
 c90:	str	r1, [sp, #16]
 c94:	ldr	r1, [sp, #16]
 c98:	ldrb	r1, [r1, #1]
 c9c:	mov	r2, r1
 ca0:	ldr	r3, [pc, #336]	; df8 <strip_colour+0x2b8>
 ca4:	ldr	r3, [pc, r3]
 ca8:	add	r1, r3, r1, lsl #2
 cac:	ldr	r1, [r1]
 cb0:	and	r1, r1, #16
 cb4:	cmp	r1, #0
 cb8:	beq	cc8 <strip_colour+0x188>
 cbc:	ldr	r0, [sp, #16]
 cc0:	add	r0, r0, #1
 cc4:	str	r0, [sp, #16]
 cc8:	ldr	r0, [sp, #16]
 ccc:	ldrb	r0, [r0, #1]
 cd0:	cmp	r0, #44	; 0x2c
 cd4:	bne	d54 <strip_colour+0x214>
 cd8:	ldr	r0, [pc, #268]	; dec <strip_colour+0x2ac>
 cdc:	ldr	r0, [pc, r0]
 ce0:	ldr	r1, [sp, #16]
 ce4:	ldrb	r1, [r1, #2]
 ce8:	mov	r2, r1
 cec:	ldr	r3, [pc, #264]	; dfc <strip_colour+0x2bc>
 cf0:	ldr	r3, [pc, r3]
 cf4:	add	r1, r3, r1, lsl #2
 cf8:	ldr	r1, [r1]
 cfc:	and	r1, r1, #16
 d00:	cmp	r1, #0
 d04:	beq	d54 <strip_colour+0x214>
 d08:	ldr	r0, [pc, #224]	; df0 <strip_colour+0x2b0>
 d0c:	ldr	r0, [pc, r0]
 d10:	ldr	r1, [sp, #16]
 d14:	add	r1, r1, #2
 d18:	str	r1, [sp, #16]
 d1c:	ldr	r1, [sp, #16]
 d20:	ldrb	r1, [r1, #1]
 d24:	mov	r2, r1
 d28:	ldr	r3, [pc, #208]	; e00 <strip_colour+0x2c0>
 d2c:	ldr	r3, [pc, r3]
 d30:	add	r1, r3, r1, lsl #2
 d34:	ldr	r1, [r1]
 d38:	and	r1, r1, #16
 d3c:	cmp	r1, #0
 d40:	beq	d50 <strip_colour+0x210>
 d44:	ldr	r0, [sp, #16]
 d48:	add	r0, r0, #1
 d4c:	str	r0, [sp, #16]
 d50:	b	d54 <strip_colour+0x214>
 d54:	b	d58 <strip_colour+0x218>
 d58:	b	d9c <strip_colour+0x25c>
 d5c:	b	d9c <strip_colour+0x25c>
 d60:	ldr	r0, [sp, #16]
 d64:	ldrb	r0, [r0]
 d68:	ldr	r1, [sp, #12]
 d6c:	add	r2, r1, #1
 d70:	str	r2, [sp, #12]
 d74:	strb	r0, [r1]
 d78:	b	d9c <strip_colour+0x25c>
 d7c:	ldr	r0, [sp, #16]
 d80:	ldrb	r0, [r0]
 d84:	ldr	r1, [sp, #12]
 d88:	add	r2, r1, #1
 d8c:	str	r2, [sp, #12]
 d90:	strb	r0, [r1]
 d94:	ldr	r0, [sp, #12]
 d98:	str	r0, [sp, #8]
 d9c:	b	da0 <strip_colour+0x260>
 da0:	ldr	r0, [sp, #16]
 da4:	add	r0, r0, #1
 da8:	str	r0, [sp, #16]
 dac:	b	b60 <strip_colour+0x20>
 db0:	ldr	r0, [sp, #12]
 db4:	movw	r1, #0
 db8:	strb	r1, [r0]
 dbc:	ldr	r0, [sp, #8]
 dc0:	movw	r1, #0
 dc4:	cmp	r0, r1
 dc8:	beq	dd8 <strip_colour+0x298>
 dcc:	ldr	r0, [sp, #8]
 dd0:	movw	r1, #0
 dd4:	strb	r1, [r0]
 dd8:	ldr	r0, [sp, #20]
 ddc:	add	sp, sp, #24
 de0:	bx	lr
 de4:	.word	0x000103e0
 de8:	.word	0x000103b0
 dec:	.word	0x00010358
 df0:	.word	0x00010328
 df4:	.word	0x000103cc
 df8:	.word	0x00010390
 dfc:	.word	0x00010344
 e00:	.word	0x00010308

Disassembly of section .fini:

00000e04 <_fini>:
 e04:	push	{r3, lr}
 e08:	pop	{r3, pc}
