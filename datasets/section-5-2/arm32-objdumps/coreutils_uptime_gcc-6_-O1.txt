
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010f70 <.init>:
   10f70:	push	{r3, lr}
   10f74:	bl	11314 <dcngettext@plt+0x48>
   10f78:	pop	{r3, pc}

Disassembly of section .plt:

00010f7c <calloc@plt-0x14>:
   10f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f80:	ldr	lr, [pc, #4]	; 10f8c <calloc@plt-0x4>
   10f84:	add	lr, pc, lr
   10f88:	ldr	pc, [lr, #8]!
   10f8c:	andeq	r7, r1, r4, ror r0

00010f90 <calloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #116]!	; 0x74

00010f9c <fputs_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #108]!	; 0x6c

00010fa8 <raise@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #100]!	; 0x64

00010fb4 <gmtime_r@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #92]!	; 0x5c

00010fc0 <strcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #84]!	; 0x54

00010fcc <mktime@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #76]!	; 0x4c

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #68]!	; 0x44

00010fe4 <utmpxname@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #60]!	; 0x3c

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #52]!	; 0x34

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #44]!	; 0x2c

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #36]!	; 0x24

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #28]!

00011020 <time@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #20]!

0001102c <memcmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #12]!

00011038 <fputc_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #94208	; 0x17000
   11040:	ldr	pc, [ip, #4]!

00011044 <dcgettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #4092]!	; 0xffc

00011050 <setutxent@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #4084]!	; 0xff4

0001105c <realloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #90112	; 0x16000
   11064:	ldr	pc, [ip, #4076]!	; 0xfec

00011068 <localtime_r@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #90112	; 0x16000
   11070:	ldr	pc, [ip, #4068]!	; 0xfe4

00011074 <textdomain@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #90112	; 0x16000
   1107c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011080 <iswprint@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #90112	; 0x16000
   11088:	ldr	pc, [ip, #4052]!	; 0xfd4

0001108c <tzset@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #90112	; 0x16000
   11094:	ldr	pc, [ip, #4044]!	; 0xfcc

00011098 <fwrite@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #90112	; 0x16000
   110a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a4 <lseek64@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #90112	; 0x16000
   110ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000110b0 <__ctype_get_mb_cur_max@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #90112	; 0x16000
   110b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000110bc <__fpending@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #4012]!	; 0xfac

000110c8 <mbrtowc@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d4 <error@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #90112	; 0x16000
   110f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #90112	; 0x16000
   11100:	ldr	pc, [ip, #3972]!	; 0xf84

00011104 <strftime@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #90112	; 0x16000
   1110c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011110 <__freading@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #90112	; 0x16000
   11118:	ldr	pc, [ip, #3956]!	; 0xf74

0001111c <localtime@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #90112	; 0x16000
   11124:	ldr	pc, [ip, #3948]!	; 0xf6c

00011128 <__ctype_tolower_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #90112	; 0x16000
   11130:	ldr	pc, [ip, #3940]!	; 0xf64

00011134 <__ctype_toupper_loc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #90112	; 0x16000
   1113c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #90112	; 0x16000
   11148:	ldr	pc, [ip, #3924]!	; 0xf54

0001114c <getopt_long@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #90112	; 0x16000
   11154:	ldr	pc, [ip, #3916]!	; 0xf4c

00011158 <kill@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #90112	; 0x16000
   11160:	ldr	pc, [ip, #3908]!	; 0xf44

00011164 <__ctype_b_loc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #90112	; 0x16000
   1116c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011170 <exit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3892]!	; 0xf34

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3884]!	; 0xf2c

00011188 <setenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3876]!	; 0xf24

00011194 <__errno_location@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3868]!	; 0xf1c

000111a0 <__cxa_atexit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3860]!	; 0xf14

000111ac <memset@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b8 <strncpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3844]!	; 0xf04

000111c4 <__printf_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3836]!	; 0xefc

000111d0 <fileno@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3828]!	; 0xef4

000111dc <__fprintf_chk@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3820]!	; 0xeec

000111e8 <fclose@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3812]!	; 0xee4

000111f4 <fseeko64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011200 <getloadavg@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3796]!	; 0xed4

0001120c <strtod_l@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3788]!	; 0xecc

00011218 <endutxent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3780]!	; 0xec4

00011224 <__overflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3772]!	; 0xebc

00011230 <setlocale@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3764]!	; 0xeb4

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3756]!	; 0xeac

00011248 <nl_langinfo@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3748]!	; 0xea4

00011254 <fputc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011260 <newlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3732]!	; 0xe94

0001126c <timegm@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3724]!	; 0xe8c

00011278 <fopen64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3716]!	; 0xe84

00011284 <fgets_unlocked@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011290 <bindtextdomain@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3700]!	; 0xe74

0001129c <unsetenv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a8 <strncmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3684]!	; 0xe64

000112b4 <abort@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000112c0 <getutxent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3668]!	; 0xe54

000112cc <dcngettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3660]!	; 0xe4c

Disassembly of section .text:

000112d8 <.text>:
   112d8:	mov	fp, #0
   112dc:	mov	lr, #0
   112e0:	pop	{r1}		; (ldr r1, [sp], #4)
   112e4:	mov	r2, sp
   112e8:	push	{r2}		; (str r2, [sp, #-4]!)
   112ec:	push	{r0}		; (str r0, [sp, #-4]!)
   112f0:	ldr	ip, [pc, #16]	; 11308 <dcngettext@plt+0x3c>
   112f4:	push	{ip}		; (str ip, [sp, #-4]!)
   112f8:	ldr	r0, [pc, #12]	; 1130c <dcngettext@plt+0x40>
   112fc:	ldr	r3, [pc, #12]	; 11310 <dcngettext@plt+0x44>
   11300:	bl	110f8 <__libc_start_main@plt>
   11304:	bl	112b4 <abort@plt>
   11308:	ldrdeq	r7, [r1], -r8
   1130c:	andeq	r1, r1, r8, asr ip
   11310:	andeq	r7, r1, r8, ror r4
   11314:	ldr	r3, [pc, #20]	; 11330 <dcngettext@plt+0x64>
   11318:	ldr	r2, [pc, #20]	; 11334 <dcngettext@plt+0x68>
   1131c:	add	r3, pc, r3
   11320:	ldr	r2, [r3, r2]
   11324:	cmp	r2, #0
   11328:	bxeq	lr
   1132c:	b	11140 <__gmon_start__@plt>
   11330:	ldrdeq	r6, [r1], -ip
   11334:	andeq	r0, r0, r4, lsr #2
   11338:	ldr	r3, [pc, #28]	; 1135c <dcngettext@plt+0x90>
   1133c:	ldr	r0, [pc, #28]	; 11360 <dcngettext@plt+0x94>
   11340:	sub	r3, r3, r0
   11344:	cmp	r3, #6
   11348:	bxls	lr
   1134c:	ldr	r3, [pc, #16]	; 11364 <dcngettext@plt+0x98>
   11350:	cmp	r3, #0
   11354:	bxeq	lr
   11358:	bx	r3
   1135c:	andeq	r8, r2, fp, ror r1
   11360:	andeq	r8, r2, r8, ror r1
   11364:	andeq	r0, r0, r0
   11368:	ldr	r1, [pc, #36]	; 11394 <dcngettext@plt+0xc8>
   1136c:	ldr	r0, [pc, #36]	; 11398 <dcngettext@plt+0xcc>
   11370:	sub	r1, r1, r0
   11374:	asr	r1, r1, #2
   11378:	add	r1, r1, r1, lsr #31
   1137c:	asrs	r1, r1, #1
   11380:	bxeq	lr
   11384:	ldr	r3, [pc, #16]	; 1139c <dcngettext@plt+0xd0>
   11388:	cmp	r3, #0
   1138c:	bxeq	lr
   11390:	bx	r3
   11394:	andeq	r8, r2, r8, ror r1
   11398:	andeq	r8, r2, r8, ror r1
   1139c:	andeq	r0, r0, r0
   113a0:	push	{r4, lr}
   113a4:	ldr	r4, [pc, #24]	; 113c4 <dcngettext@plt+0xf8>
   113a8:	ldrb	r3, [r4]
   113ac:	cmp	r3, #0
   113b0:	popne	{r4, pc}
   113b4:	bl	11338 <dcngettext@plt+0x6c>
   113b8:	mov	r3, #1
   113bc:	strb	r3, [r4]
   113c0:	pop	{r4, pc}
   113c4:	muleq	r2, r4, r1
   113c8:	ldr	r0, [pc, #40]	; 113f8 <dcngettext@plt+0x12c>
   113cc:	ldr	r3, [r0]
   113d0:	cmp	r3, #0
   113d4:	bne	113dc <dcngettext@plt+0x110>
   113d8:	b	11368 <dcngettext@plt+0x9c>
   113dc:	ldr	r3, [pc, #24]	; 113fc <dcngettext@plt+0x130>
   113e0:	cmp	r3, #0
   113e4:	beq	113d8 <dcngettext@plt+0x10c>
   113e8:	push	{r4, lr}
   113ec:	blx	r3
   113f0:	pop	{r4, lr}
   113f4:	b	11368 <dcngettext@plt+0x9c>
   113f8:	andeq	r7, r2, r4, lsl pc
   113fc:	andeq	r0, r0, r0
   11400:	push	{lr}		; (str lr, [sp, #-4]!)
   11404:	sub	sp, sp, #60	; 0x3c
   11408:	subs	r6, r0, #0
   1140c:	beq	11448 <dcngettext@plt+0x17c>
   11410:	ldr	r3, [pc, #748]	; 11704 <dcngettext@plt+0x438>
   11414:	ldr	r4, [r3]
   11418:	mov	r2, #5
   1141c:	ldr	r1, [pc, #740]	; 11708 <dcngettext@plt+0x43c>
   11420:	mov	r0, #0
   11424:	bl	11044 <dcgettext@plt>
   11428:	ldr	r3, [pc, #732]	; 1170c <dcngettext@plt+0x440>
   1142c:	ldr	r3, [r3]
   11430:	mov	r2, r0
   11434:	mov	r1, #1
   11438:	mov	r0, r4
   1143c:	bl	111dc <__fprintf_chk@plt>
   11440:	mov	r0, r6
   11444:	bl	11170 <exit@plt>
   11448:	mov	r2, #5
   1144c:	ldr	r1, [pc, #700]	; 11710 <dcngettext@plt+0x444>
   11450:	mov	r0, #0
   11454:	bl	11044 <dcgettext@plt>
   11458:	ldr	r3, [pc, #684]	; 1170c <dcngettext@plt+0x440>
   1145c:	ldr	r2, [r3]
   11460:	mov	r1, r0
   11464:	mov	r0, #1
   11468:	bl	111c4 <__printf_chk@plt>
   1146c:	mov	r2, #5
   11470:	ldr	r1, [pc, #668]	; 11714 <dcngettext@plt+0x448>
   11474:	mov	r0, #0
   11478:	bl	11044 <dcgettext@plt>
   1147c:	mov	r1, r0
   11480:	mov	r0, #1
   11484:	bl	111c4 <__printf_chk@plt>
   11488:	mov	r2, #5
   1148c:	ldr	r1, [pc, #644]	; 11718 <dcngettext@plt+0x44c>
   11490:	mov	r0, #0
   11494:	bl	11044 <dcgettext@plt>
   11498:	mov	r1, r0
   1149c:	mov	r0, #1
   114a0:	bl	111c4 <__printf_chk@plt>
   114a4:	mov	r2, #5
   114a8:	ldr	r1, [pc, #620]	; 1171c <dcngettext@plt+0x450>
   114ac:	mov	r0, #0
   114b0:	bl	11044 <dcgettext@plt>
   114b4:	ldr	r3, [pc, #612]	; 11720 <dcngettext@plt+0x454>
   114b8:	ldr	r2, [pc, #612]	; 11724 <dcngettext@plt+0x458>
   114bc:	mov	r1, r0
   114c0:	mov	r0, #1
   114c4:	bl	111c4 <__printf_chk@plt>
   114c8:	mov	r2, #5
   114cc:	ldr	r1, [pc, #596]	; 11728 <dcngettext@plt+0x45c>
   114d0:	mov	r0, #0
   114d4:	bl	11044 <dcgettext@plt>
   114d8:	ldr	r4, [pc, #588]	; 1172c <dcngettext@plt+0x460>
   114dc:	ldr	r1, [r4]
   114e0:	bl	10f9c <fputs_unlocked@plt>
   114e4:	mov	r2, #5
   114e8:	ldr	r1, [pc, #576]	; 11730 <dcngettext@plt+0x464>
   114ec:	mov	r0, #0
   114f0:	bl	11044 <dcgettext@plt>
   114f4:	ldr	r1, [r4]
   114f8:	bl	10f9c <fputs_unlocked@plt>
   114fc:	mov	ip, sp
   11500:	ldr	lr, [pc, #556]	; 11734 <dcngettext@plt+0x468>
   11504:	ldm	lr!, {r0, r1, r2, r3}
   11508:	stmia	ip!, {r0, r1, r2, r3}
   1150c:	ldm	lr!, {r0, r1, r2, r3}
   11510:	stmia	ip!, {r0, r1, r2, r3}
   11514:	ldm	lr!, {r0, r1, r2, r3}
   11518:	stmia	ip!, {r0, r1, r2, r3}
   1151c:	ldm	lr, {r0, r1}
   11520:	stm	ip, {r0, r1}
   11524:	ldr	r1, [sp]
   11528:	cmp	r1, #0
   1152c:	moveq	r4, sp
   11530:	beq	11558 <dcngettext@plt+0x28c>
   11534:	mov	r4, sp
   11538:	ldr	r5, [pc, #504]	; 11738 <dcngettext@plt+0x46c>
   1153c:	mov	r0, r5
   11540:	bl	10fc0 <strcmp@plt>
   11544:	cmp	r0, #0
   11548:	beq	11558 <dcngettext@plt+0x28c>
   1154c:	ldr	r1, [r4, #8]!
   11550:	cmp	r1, #0
   11554:	bne	1153c <dcngettext@plt+0x270>
   11558:	ldr	r4, [r4, #4]
   1155c:	cmp	r4, #0
   11560:	beq	11674 <dcngettext@plt+0x3a8>
   11564:	mov	r2, #5
   11568:	ldr	r1, [pc, #460]	; 1173c <dcngettext@plt+0x470>
   1156c:	mov	r0, #0
   11570:	bl	11044 <dcgettext@plt>
   11574:	ldr	r3, [pc, #452]	; 11740 <dcngettext@plt+0x474>
   11578:	ldr	r2, [pc, #452]	; 11744 <dcngettext@plt+0x478>
   1157c:	mov	r1, r0
   11580:	mov	r0, #1
   11584:	bl	111c4 <__printf_chk@plt>
   11588:	mov	r1, #0
   1158c:	mov	r0, #5
   11590:	bl	11230 <setlocale@plt>
   11594:	cmp	r0, #0
   11598:	beq	115b0 <dcngettext@plt+0x2e4>
   1159c:	mov	r2, #3
   115a0:	ldr	r1, [pc, #416]	; 11748 <dcngettext@plt+0x47c>
   115a4:	bl	112a8 <strncmp@plt>
   115a8:	cmp	r0, #0
   115ac:	bne	11610 <dcngettext@plt+0x344>
   115b0:	mov	r2, #5
   115b4:	ldr	r1, [pc, #400]	; 1174c <dcngettext@plt+0x480>
   115b8:	mov	r0, #0
   115bc:	bl	11044 <dcgettext@plt>
   115c0:	ldr	r5, [pc, #368]	; 11738 <dcngettext@plt+0x46c>
   115c4:	mov	r3, r5
   115c8:	ldr	r2, [pc, #368]	; 11740 <dcngettext@plt+0x474>
   115cc:	mov	r1, r0
   115d0:	mov	r0, #1
   115d4:	bl	111c4 <__printf_chk@plt>
   115d8:	mov	r2, #5
   115dc:	ldr	r1, [pc, #364]	; 11750 <dcngettext@plt+0x484>
   115e0:	mov	r0, #0
   115e4:	bl	11044 <dcgettext@plt>
   115e8:	mov	r1, r0
   115ec:	ldr	r2, [pc, #352]	; 11754 <dcngettext@plt+0x488>
   115f0:	ldr	r3, [pc, #352]	; 11758 <dcngettext@plt+0x48c>
   115f4:	cmp	r4, r5
   115f8:	movne	r3, r2
   115fc:	mov	r2, r4
   11600:	mov	r0, #1
   11604:	bl	111c4 <__printf_chk@plt>
   11608:	b	11440 <dcngettext@plt+0x174>
   1160c:	ldr	r4, [pc, #292]	; 11738 <dcngettext@plt+0x46c>
   11610:	mov	r2, #5
   11614:	ldr	r1, [pc, #320]	; 1175c <dcngettext@plt+0x490>
   11618:	mov	r0, #0
   1161c:	bl	11044 <dcgettext@plt>
   11620:	ldr	r3, [pc, #260]	; 1172c <dcngettext@plt+0x460>
   11624:	ldr	r1, [r3]
   11628:	bl	10f9c <fputs_unlocked@plt>
   1162c:	b	115b0 <dcngettext@plt+0x2e4>
   11630:	mov	r2, #5
   11634:	ldr	r1, [pc, #272]	; 1174c <dcngettext@plt+0x480>
   11638:	mov	r0, #0
   1163c:	bl	11044 <dcgettext@plt>
   11640:	ldr	r4, [pc, #240]	; 11738 <dcngettext@plt+0x46c>
   11644:	mov	r3, r4
   11648:	ldr	r2, [pc, #240]	; 11740 <dcngettext@plt+0x474>
   1164c:	mov	r1, r0
   11650:	mov	r0, #1
   11654:	bl	111c4 <__printf_chk@plt>
   11658:	mov	r2, #5
   1165c:	ldr	r1, [pc, #236]	; 11750 <dcngettext@plt+0x484>
   11660:	mov	r0, #0
   11664:	bl	11044 <dcgettext@plt>
   11668:	mov	r1, r0
   1166c:	ldr	r3, [pc, #228]	; 11758 <dcngettext@plt+0x48c>
   11670:	b	115fc <dcngettext@plt+0x330>
   11674:	mov	r2, #5
   11678:	ldr	r1, [pc, #188]	; 1173c <dcngettext@plt+0x470>
   1167c:	mov	r0, #0
   11680:	bl	11044 <dcgettext@plt>
   11684:	ldr	r3, [pc, #180]	; 11740 <dcngettext@plt+0x474>
   11688:	ldr	r2, [pc, #180]	; 11744 <dcngettext@plt+0x478>
   1168c:	mov	r1, r0
   11690:	mov	r0, #1
   11694:	bl	111c4 <__printf_chk@plt>
   11698:	mov	r1, #0
   1169c:	mov	r0, #5
   116a0:	bl	11230 <setlocale@plt>
   116a4:	cmp	r0, #0
   116a8:	beq	11630 <dcngettext@plt+0x364>
   116ac:	mov	r2, #3
   116b0:	ldr	r1, [pc, #144]	; 11748 <dcngettext@plt+0x47c>
   116b4:	bl	112a8 <strncmp@plt>
   116b8:	cmp	r0, #0
   116bc:	bne	1160c <dcngettext@plt+0x340>
   116c0:	mov	r2, #5
   116c4:	ldr	r1, [pc, #128]	; 1174c <dcngettext@plt+0x480>
   116c8:	mov	r0, #0
   116cc:	bl	11044 <dcgettext@plt>
   116d0:	ldr	r4, [pc, #96]	; 11738 <dcngettext@plt+0x46c>
   116d4:	mov	r3, r4
   116d8:	ldr	r2, [pc, #96]	; 11740 <dcngettext@plt+0x474>
   116dc:	mov	r1, r0
   116e0:	mov	r0, #1
   116e4:	bl	111c4 <__printf_chk@plt>
   116e8:	mov	r2, #5
   116ec:	ldr	r1, [pc, #92]	; 11750 <dcngettext@plt+0x484>
   116f0:	mov	r0, #0
   116f4:	bl	11044 <dcgettext@plt>
   116f8:	mov	r1, r0
   116fc:	ldr	r3, [pc, #84]	; 11758 <dcngettext@plt+0x48c>
   11700:	b	115fc <dcngettext@plt+0x330>
   11704:	andeq	r8, r2, r8, lsl #3
   11708:	andeq	r7, r1, r0, asr #10
   1170c:	andeq	r8, r2, r4, lsr #3
   11710:	andeq	r7, r1, r8, ror #10
   11714:	andeq	r7, r1, r8, lsl #11
   11718:	andeq	r7, r1, r4, asr #12
   1171c:	muleq	r1, r8, r6
   11720:	ldrdeq	r7, [r1], -r4
   11724:	andeq	r7, r1, r4, ror #13
   11728:	strdeq	r7, [r1], -r4
   1172c:	andeq	r8, r2, ip, lsl #3
   11730:	andeq	r7, r1, r4, lsr #14
   11734:	andeq	r7, r1, r0, lsl #10
   11738:	andeq	r7, r1, r8, lsr r5
   1173c:	andeq	r7, r1, ip, asr r7
   11740:	andeq	r7, r1, r4, ror r7
   11744:	muleq	r1, ip, r7
   11748:	andeq	r7, r1, ip, lsr #15
   1174c:	strdeq	r7, [r1], -r8
   11750:	andeq	r7, r1, r4, lsl r8
   11754:	andeq	r7, r1, r0, lsr #14
   11758:	andeq	r7, r1, r0, lsl #19
   1175c:			; <UNDEFINED> instruction: 0x000177b0
   11760:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11764:	sub	sp, sp, #8192	; 0x2000
   11768:	sub	sp, sp, #48	; 0x30
   1176c:	mov	r5, r0
   11770:	mov	r4, r1
   11774:	ldr	r1, [pc, #1052]	; 11b98 <dcngettext@plt+0x8cc>
   11778:	ldr	r0, [pc, #1052]	; 11b9c <dcngettext@plt+0x8d0>
   1177c:	bl	11278 <fopen64@plt>
   11780:	subs	r7, r0, #0
   11784:	beq	11b64 <dcngettext@plt+0x898>
   11788:	add	r6, sp, #16
   1178c:	mov	r2, r7
   11790:	mov	r1, #8192	; 0x2000
   11794:	mov	r0, r6
   11798:	bl	11284 <fgets_unlocked@plt>
   1179c:	cmp	r6, r0
   117a0:	movne	r6, #0
   117a4:	beq	117c8 <dcngettext@plt+0x4fc>
   117a8:	mov	r0, r7
   117ac:	bl	11f38 <dcngettext@plt+0xc6c>
   117b0:	sub	r3, r5, #1
   117b4:	cmp	r5, #0
   117b8:	beq	11b20 <dcngettext@plt+0x854>
   117bc:	mov	r7, #0
   117c0:	mov	r5, r7
   117c4:	b	11834 <dcngettext@plt+0x568>
   117c8:	add	r3, sp, #48	; 0x30
   117cc:	add	r6, sp, #16
   117d0:	sub	r1, r3, #36	; 0x24
   117d4:	mov	r0, r6
   117d8:	bl	11d98 <dcngettext@plt+0xacc>
   117dc:	ldr	r3, [sp, #12]
   117e0:	cmp	r3, r6
   117e4:	moveq	r6, #0
   117e8:	beq	117a8 <dcngettext@plt+0x4dc>
   117ec:	vcmpe.f64	d0, #0.0
   117f0:	vmrs	APSR_nzcv, fpscr
   117f4:	mvnlt	r6, #0
   117f8:	blt	117a8 <dcngettext@plt+0x4dc>
   117fc:	vldr	d7, [pc, #908]	; 11b90 <dcngettext@plt+0x8c4>
   11800:	vcmpe.f64	d0, d7
   11804:	vmrs	APSR_nzcv, fpscr
   11808:	vcvtmi.s32.f64	s15, d0
   1180c:	vmovmi	r6, s15
   11810:	mvnpl	r6, #0
   11814:	b	117a8 <dcngettext@plt+0x4dc>
   11818:	ldrsh	r2, [r4]
   1181c:	cmp	r2, #2
   11820:	ldreq	r7, [r4, #340]	; 0x154
   11824:	add	r4, r4, #384	; 0x180
   11828:	sub	r3, r3, #1
   1182c:	cmn	r3, #1
   11830:	beq	11854 <dcngettext@plt+0x588>
   11834:	ldrb	r2, [r4, #44]	; 0x2c
   11838:	cmp	r2, #0
   1183c:	beq	11818 <dcngettext@plt+0x54c>
   11840:	ldrsh	r2, [r4]
   11844:	cmp	r2, #7
   11848:	addeq	r5, r5, #1
   1184c:	bne	11818 <dcngettext@plt+0x54c>
   11850:	b	11824 <dcngettext@plt+0x558>
   11854:	mov	r0, #0
   11858:	bl	11020 <time@plt>
   1185c:	add	r3, sp, #8192	; 0x2000
   11860:	add	r3, r3, #44	; 0x2c
   11864:	str	r0, [r3]
   11868:	cmp	r6, #0
   1186c:	bne	1187c <dcngettext@plt+0x5b0>
   11870:	cmp	r7, #0
   11874:	subne	r6, r0, r7
   11878:	beq	11b3c <dcngettext@plt+0x870>
   1187c:	ldr	r7, [pc, #796]	; 11ba0 <dcngettext@plt+0x8d4>
   11880:	smull	r3, r7, r7, r6
   11884:	add	r3, r7, r6
   11888:	asr	r7, r6, #31
   1188c:	rsb	r7, r7, r3, asr #16
   11890:	ldr	r3, [pc, #780]	; 11ba4 <dcngettext@plt+0x8d8>
   11894:	mla	r2, r3, r7, r6
   11898:	ldr	r8, [pc, #776]	; 11ba8 <dcngettext@plt+0x8dc>
   1189c:	smull	r3, r8, r8, r2
   118a0:	add	r3, r8, r2
   118a4:	asr	r8, r2, #31
   118a8:	rsb	r8, r8, r3, asr #11
   118ac:	ldr	r3, [pc, #760]	; 11bac <dcngettext@plt+0x8e0>
   118b0:	mla	r3, r3, r8, r2
   118b4:	ldr	r4, [pc, #756]	; 11bb0 <dcngettext@plt+0x8e4>
   118b8:	smull	r2, r4, r4, r3
   118bc:	add	r4, r4, r3
   118c0:	asr	r3, r3, #31
   118c4:	rsb	r4, r3, r4, asr #5
   118c8:	add	r0, sp, #8192	; 0x2000
   118cc:	add	r0, r0, #44	; 0x2c
   118d0:	bl	1111c <localtime@plt>
   118d4:	subs	r9, r0, #0
   118d8:	beq	11a5c <dcngettext@plt+0x790>
   118dc:	ldr	r3, [pc, #720]	; 11bb4 <dcngettext@plt+0x8e8>
   118e0:	ldr	sl, [r3]
   118e4:	mov	r2, #5
   118e8:	ldr	r1, [pc, #712]	; 11bb8 <dcngettext@plt+0x8ec>
   118ec:	mov	r0, #0
   118f0:	bl	11044 <dcgettext@plt>
   118f4:	mov	r3, #0
   118f8:	str	r3, [sp]
   118fc:	mov	r2, r9
   11900:	mov	r1, r0
   11904:	mov	r0, sl
   11908:	bl	13ba8 <dcngettext@plt+0x28dc>
   1190c:	cmn	r6, #1
   11910:	beq	11a7c <dcngettext@plt+0x7b0>
   11914:	cmp	r7, #0
   11918:	ble	11a9c <dcngettext@plt+0x7d0>
   1191c:	mov	r0, r7
   11920:	asr	r1, r7, #31
   11924:	mvn	r2, #0
   11928:	mov	r3, #0
   1192c:	cmp	r1, r3
   11930:	cmpeq	r7, r2
   11934:	movls	r3, r7
   11938:	bls	11950 <dcngettext@plt+0x684>
   1193c:	ldr	r2, [pc, #632]	; 11bbc <dcngettext@plt+0x8f0>
   11940:	mov	r3, #0
   11944:	bl	17304 <dcngettext@plt+0x6038>
   11948:	add	r3, r2, #999424	; 0xf4000
   1194c:	add	r3, r3, #576	; 0x240
   11950:	mov	r2, #5
   11954:	str	r2, [sp]
   11958:	ldr	r2, [pc, #608]	; 11bc0 <dcngettext@plt+0x8f4>
   1195c:	ldr	r1, [pc, #608]	; 11bc4 <dcngettext@plt+0x8f8>
   11960:	mov	r0, #0
   11964:	bl	112cc <dcngettext@plt>
   11968:	str	r4, [sp]
   1196c:	mov	r3, r8
   11970:	mov	r2, r7
   11974:	mov	r1, r0
   11978:	mov	r0, #1
   1197c:	bl	111c4 <__printf_chk@plt>
   11980:	mov	r3, #5
   11984:	str	r3, [sp]
   11988:	mov	r3, r5
   1198c:	ldr	r2, [pc, #564]	; 11bc8 <dcngettext@plt+0x8fc>
   11990:	ldr	r1, [pc, #564]	; 11bcc <dcngettext@plt+0x900>
   11994:	mov	r0, #0
   11998:	bl	112cc <dcngettext@plt>
   1199c:	mov	r2, r5
   119a0:	mov	r1, r0
   119a4:	mov	r0, #1
   119a8:	bl	111c4 <__printf_chk@plt>
   119ac:	mov	r1, #3
   119b0:	add	r0, sp, #8192	; 0x2000
   119b4:	add	r0, r0, #16
   119b8:	bl	11200 <getloadavg@plt>
   119bc:	mov	r4, r0
   119c0:	cmn	r0, #1
   119c4:	beq	11ac4 <dcngettext@plt+0x7f8>
   119c8:	cmp	r0, #0
   119cc:	ble	119f8 <dcngettext@plt+0x72c>
   119d0:	mov	r2, #5
   119d4:	ldr	r1, [pc, #500]	; 11bd0 <dcngettext@plt+0x904>
   119d8:	mov	r0, #0
   119dc:	bl	11044 <dcgettext@plt>
   119e0:	add	r3, sp, #8192	; 0x2000
   119e4:	add	r3, r3, #16
   119e8:	ldrd	r2, [r3]
   119ec:	mov	r1, r0
   119f0:	mov	r0, #1
   119f4:	bl	111c4 <__printf_chk@plt>
   119f8:	cmp	r4, #1
   119fc:	ble	11a18 <dcngettext@plt+0x74c>
   11a00:	add	r3, sp, #8192	; 0x2000
   11a04:	add	r3, r3, #24
   11a08:	ldrd	r2, [r3]
   11a0c:	ldr	r1, [pc, #448]	; 11bd4 <dcngettext@plt+0x908>
   11a10:	mov	r0, #1
   11a14:	bl	111c4 <__printf_chk@plt>
   11a18:	cmp	r4, #2
   11a1c:	bgt	11af8 <dcngettext@plt+0x82c>
   11a20:	cmp	r4, #0
   11a24:	ble	11a50 <dcngettext@plt+0x784>
   11a28:	ldr	r3, [pc, #388]	; 11bb4 <dcngettext@plt+0x8e8>
   11a2c:	ldr	r0, [r3]
   11a30:	ldr	r3, [r0, #20]
   11a34:	ldr	r2, [r0, #24]
   11a38:	cmp	r3, r2
   11a3c:	addcc	r2, r3, #1
   11a40:	strcc	r2, [r0, #20]
   11a44:	movcc	r2, #10
   11a48:	strbcc	r2, [r3]
   11a4c:	bcs	11b14 <dcngettext@plt+0x848>
   11a50:	add	sp, sp, #8192	; 0x2000
   11a54:	add	sp, sp, #48	; 0x30
   11a58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a5c:	mov	r2, #5
   11a60:	ldr	r1, [pc, #368]	; 11bd8 <dcngettext@plt+0x90c>
   11a64:	mov	r0, #0
   11a68:	bl	11044 <dcgettext@plt>
   11a6c:	mov	r1, r0
   11a70:	mov	r0, #1
   11a74:	bl	111c4 <__printf_chk@plt>
   11a78:	b	1190c <dcngettext@plt+0x640>
   11a7c:	mov	r2, #5
   11a80:	ldr	r1, [pc, #340]	; 11bdc <dcngettext@plt+0x910>
   11a84:	mov	r0, #0
   11a88:	bl	11044 <dcgettext@plt>
   11a8c:	mov	r1, r0
   11a90:	mov	r0, #1
   11a94:	bl	111c4 <__printf_chk@plt>
   11a98:	b	11980 <dcngettext@plt+0x6b4>
   11a9c:	mov	r2, #5
   11aa0:	ldr	r1, [pc, #312]	; 11be0 <dcngettext@plt+0x914>
   11aa4:	mov	r0, #0
   11aa8:	bl	11044 <dcgettext@plt>
   11aac:	mov	r3, r4
   11ab0:	mov	r2, r8
   11ab4:	mov	r1, r0
   11ab8:	mov	r0, #1
   11abc:	bl	111c4 <__printf_chk@plt>
   11ac0:	b	11980 <dcngettext@plt+0x6b4>
   11ac4:	ldr	r3, [pc, #232]	; 11bb4 <dcngettext@plt+0x8e8>
   11ac8:	ldr	r0, [r3]
   11acc:	ldr	r3, [r0, #20]
   11ad0:	ldr	r2, [r0, #24]
   11ad4:	cmp	r3, r2
   11ad8:	addcc	r2, r3, #1
   11adc:	strcc	r2, [r0, #20]
   11ae0:	movcc	r2, #10
   11ae4:	strbcc	r2, [r3]
   11ae8:	bcc	11a50 <dcngettext@plt+0x784>
   11aec:	mov	r1, #10
   11af0:	bl	11224 <__overflow@plt>
   11af4:	b	11a50 <dcngettext@plt+0x784>
   11af8:	add	r3, sp, #8192	; 0x2000
   11afc:	add	r3, r3, #32
   11b00:	ldrd	r2, [r3]
   11b04:	ldr	r1, [pc, #200]	; 11bd4 <dcngettext@plt+0x908>
   11b08:	mov	r0, #1
   11b0c:	bl	111c4 <__printf_chk@plt>
   11b10:	b	11a20 <dcngettext@plt+0x754>
   11b14:	mov	r1, #10
   11b18:	bl	11224 <__overflow@plt>
   11b1c:	b	11a50 <dcngettext@plt+0x784>
   11b20:	mov	r0, #0
   11b24:	bl	11020 <time@plt>
   11b28:	add	r3, sp, #8192	; 0x2000
   11b2c:	add	r3, r3, #44	; 0x2c
   11b30:	str	r0, [r3]
   11b34:	cmp	r6, #0
   11b38:	bne	1187c <dcngettext@plt+0x5b0>
   11b3c:	bl	11194 <__errno_location@plt>
   11b40:	ldr	r4, [r0]
   11b44:	mov	r2, #5
   11b48:	ldr	r1, [pc, #148]	; 11be4 <dcngettext@plt+0x918>
   11b4c:	mov	r0, #0
   11b50:	bl	11044 <dcgettext@plt>
   11b54:	mov	r2, r0
   11b58:	mov	r1, r4
   11b5c:	mov	r0, #1
   11b60:	bl	110d4 <error@plt>
   11b64:	sub	r3, r5, #1
   11b68:	cmp	r5, #0
   11b6c:	movne	r6, #0
   11b70:	bne	117bc <dcngettext@plt+0x4f0>
   11b74:	mov	r0, #0
   11b78:	bl	11020 <time@plt>
   11b7c:	add	r3, sp, #8192	; 0x2000
   11b80:	add	r3, r3, #44	; 0x2c
   11b84:	str	r0, [r3]
   11b88:	b	11b3c <dcngettext@plt+0x870>
   11b8c:	nop			; (mov r0, r0)
   11b90:			; <UNDEFINED> instruction: 0xffc00000
   11b94:	ldrshmi	pc, [pc, #255]	; 11c9b <dcngettext@plt+0x9cf>	; <UNPREDICTABLE>
   11b98:	andeq	r7, r1, r8, asr #16
   11b9c:	andeq	r7, r1, ip, asr #16
   11ba0:	eorgt	r4, lr, #29360128	; 0x1c00000
   11ba4:			; <UNDEFINED> instruction: 0xfffeae80
   11ba8:			; <UNDEFINED> instruction: 0x91a2b3c5
   11bac:			; <UNDEFINED> instruction: 0xfffff1f0
   11bb0:	stmhi	r8, {r0, r3, r7, fp, pc}
   11bb4:	andeq	r8, r2, ip, lsl #3
   11bb8:	andeq	r7, r1, r4, ror r8
   11bbc:	andeq	r4, pc, r0, asr #4
   11bc0:	andeq	r7, r1, r4, lsr #17
   11bc4:			; <UNDEFINED> instruction: 0x000178bc
   11bc8:	andeq	r7, r1, r4, ror #17
   11bcc:	strdeq	r7, [r1], -r0
   11bd0:	strdeq	r7, [r1], -ip
   11bd4:	andeq	r7, r1, r4, lsl r9
   11bd8:	andeq	r7, r1, r0, lsl #17
   11bdc:	andeq	r7, r1, ip, lsl #17
   11be0:	ldrdeq	r7, [r1], -r4
   11be4:	andeq	r7, r1, ip, asr r8
   11be8:	push	{lr}		; (str lr, [sp, #-4]!)
   11bec:	sub	sp, sp, #12
   11bf0:	mov	r4, r0
   11bf4:	add	r2, sp, #8
   11bf8:	mov	r3, #0
   11bfc:	str	r3, [r2, #-8]!
   11c00:	mov	r3, r1
   11c04:	add	r1, sp, #4
   11c08:	bl	159f8 <dcngettext@plt+0x472c>
   11c0c:	cmp	r0, #0
   11c10:	beq	11c40 <dcngettext@plt+0x974>
   11c14:	bl	11194 <__errno_location@plt>
   11c18:	ldr	r5, [r0]
   11c1c:	mov	r2, r4
   11c20:	mov	r1, #3
   11c24:	mov	r0, #0
   11c28:	bl	15804 <dcngettext@plt+0x4538>
   11c2c:	mov	r3, r0
   11c30:	ldr	r2, [pc, #28]	; 11c54 <dcngettext@plt+0x988>
   11c34:	mov	r1, r5
   11c38:	mov	r0, #1
   11c3c:	bl	110d4 <error@plt>
   11c40:	ldr	r1, [sp]
   11c44:	ldr	r0, [sp, #4]
   11c48:	bl	11760 <dcngettext@plt+0x494>
   11c4c:	mov	r0, #0
   11c50:	bl	11170 <exit@plt>
   11c54:	andeq	r7, r1, r8, lsl #20
   11c58:	push	{lr}		; (str lr, [sp, #-4]!)
   11c5c:	sub	sp, sp, #36	; 0x24
   11c60:	mov	r4, r0
   11c64:	mov	r5, r1
   11c68:	ldr	r0, [r1]
   11c6c:	bl	13e1c <dcngettext@plt+0x2b50>
   11c70:	ldr	r1, [pc, #232]	; 11d60 <dcngettext@plt+0xa94>
   11c74:	mov	r0, #6
   11c78:	bl	11230 <setlocale@plt>
   11c7c:	ldr	r6, [pc, #224]	; 11d64 <dcngettext@plt+0xa98>
   11c80:	ldr	r1, [pc, #224]	; 11d68 <dcngettext@plt+0xa9c>
   11c84:	mov	r0, r6
   11c88:	bl	11290 <bindtextdomain@plt>
   11c8c:	mov	r0, r6
   11c90:	bl	11074 <textdomain@plt>
   11c94:	ldr	r0, [pc, #208]	; 11d6c <dcngettext@plt+0xaa0>
   11c98:	bl	174dc <dcngettext@plt+0x6210>
   11c9c:	mov	r3, #0
   11ca0:	str	r3, [sp, #24]
   11ca4:	ldr	r3, [pc, #196]	; 11d70 <dcngettext@plt+0xaa4>
   11ca8:	str	r3, [sp, #20]
   11cac:	ldr	r3, [pc, #192]	; 11d74 <dcngettext@plt+0xaa8>
   11cb0:	str	r3, [sp, #16]
   11cb4:	ldr	r3, [pc, #188]	; 11d78 <dcngettext@plt+0xaac>
   11cb8:	str	r3, [sp, #12]
   11cbc:	ldr	r3, [pc, #184]	; 11d7c <dcngettext@plt+0xab0>
   11cc0:	str	r3, [sp, #8]
   11cc4:	mov	r3, #1
   11cc8:	str	r3, [sp, #4]
   11ccc:	ldr	r3, [pc, #172]	; 11d80 <dcngettext@plt+0xab4>
   11cd0:	ldr	r3, [r3]
   11cd4:	str	r3, [sp]
   11cd8:	ldr	r3, [pc, #164]	; 11d84 <dcngettext@plt+0xab8>
   11cdc:	ldr	r2, [pc, #164]	; 11d88 <dcngettext@plt+0xabc>
   11ce0:	mov	r1, r5
   11ce4:	mov	r0, r4
   11ce8:	bl	13d4c <dcngettext@plt+0x2a80>
   11cec:	ldr	r3, [pc, #152]	; 11d8c <dcngettext@plt+0xac0>
   11cf0:	ldr	r3, [r3]
   11cf4:	subs	r4, r4, r3
   11cf8:	beq	11d48 <dcngettext@plt+0xa7c>
   11cfc:	cmp	r4, #1
   11d00:	beq	11d54 <dcngettext@plt+0xa88>
   11d04:	mov	r2, #5
   11d08:	ldr	r1, [pc, #128]	; 11d90 <dcngettext@plt+0xac4>
   11d0c:	mov	r0, #0
   11d10:	bl	11044 <dcgettext@plt>
   11d14:	mov	r4, r0
   11d18:	ldr	r3, [pc, #108]	; 11d8c <dcngettext@plt+0xac0>
   11d1c:	ldr	r3, [r3]
   11d20:	add	r3, r3, #1
   11d24:	ldr	r0, [r5, r3, lsl #2]
   11d28:	bl	1596c <dcngettext@plt+0x46a0>
   11d2c:	mov	r3, r0
   11d30:	mov	r2, r4
   11d34:	mov	r1, #0
   11d38:	mov	r0, r1
   11d3c:	bl	110d4 <error@plt>
   11d40:	mov	r0, #1
   11d44:	bl	11400 <dcngettext@plt+0x134>
   11d48:	mov	r1, #1
   11d4c:	ldr	r0, [pc, #64]	; 11d94 <dcngettext@plt+0xac8>
   11d50:	bl	11be8 <dcngettext@plt+0x91c>
   11d54:	mov	r1, #0
   11d58:	ldr	r0, [r5, r3, lsl #2]
   11d5c:	bl	11be8 <dcngettext@plt+0x91c>
   11d60:	andeq	r7, r1, r0, lsr #14
   11d64:	andeq	r7, r1, r0, lsr #15
   11d68:	andeq	r7, r1, ip, lsl r9
   11d6c:	andeq	r1, r1, r4, asr #28
   11d70:	andeq	r7, r1, r4, lsr r9
   11d74:	andeq	r7, r1, r0, asr #18
   11d78:	andeq	r7, r1, r0, asr r9
   11d7c:	andeq	r1, r1, r0, lsl #8
   11d80:	andeq	r8, r2, r0, lsr r1
   11d84:	muleq	r1, ip, r7
   11d88:	andeq	r7, r1, r8, lsr r5
   11d8c:	andeq	r8, r2, r0, lsl #3
   11d90:	andeq	r7, r1, r4, ror #18
   11d94:	andeq	r7, r1, r4, ror #13
   11d98:	push	{r4, r5, r6, lr}
   11d9c:	mov	r5, r0
   11da0:	mov	r4, r1
   11da4:	ldr	r3, [pc, #108]	; 11e18 <dcngettext@plt+0xb4c>
   11da8:	ldr	r3, [r3]
   11dac:	cmp	r3, #0
   11db0:	beq	11dd4 <dcngettext@plt+0xb08>
   11db4:	ldr	r3, [pc, #92]	; 11e18 <dcngettext@plt+0xb4c>
   11db8:	ldr	r2, [r3]
   11dbc:	cmp	r2, #0
   11dc0:	beq	11df0 <dcngettext@plt+0xb24>
   11dc4:	mov	r1, r4
   11dc8:	mov	r0, r5
   11dcc:	bl	1120c <strtod_l@plt>
   11dd0:	pop	{r4, r5, r6, pc}
   11dd4:	mov	r2, #0
   11dd8:	ldr	r1, [pc, #60]	; 11e1c <dcngettext@plt+0xb50>
   11ddc:	ldr	r0, [pc, #60]	; 11e20 <dcngettext@plt+0xb54>
   11de0:	bl	11260 <newlocale@plt>
   11de4:	ldr	r3, [pc, #44]	; 11e18 <dcngettext@plt+0xb4c>
   11de8:	str	r0, [r3]
   11dec:	b	11db4 <dcngettext@plt+0xae8>
   11df0:	cmp	r4, #0
   11df4:	beq	11e04 <dcngettext@plt+0xb38>
   11df8:	str	r5, [r4]
   11dfc:	vldr	d0, [pc, #12]	; 11e10 <dcngettext@plt+0xb44>
   11e00:	pop	{r4, r5, r6, pc}
   11e04:	vldr	d0, [pc, #4]	; 11e10 <dcngettext@plt+0xb44>
   11e08:	pop	{r4, r5, r6, pc}
   11e0c:	nop			; (mov r0, r0)
	...
   11e18:	muleq	r2, r8, r1
   11e1c:	strdeq	r7, [r1], -r4
   11e20:			; <UNDEFINED> instruction: 0x00001fbf
   11e24:	ldr	r3, [pc, #4]	; 11e30 <dcngettext@plt+0xb64>
   11e28:	str	r0, [r3]
   11e2c:	bx	lr
   11e30:	muleq	r2, ip, r1
   11e34:	ldr	r3, [pc, #4]	; 11e40 <dcngettext@plt+0xb74>
   11e38:	strb	r0, [r3, #4]
   11e3c:	bx	lr
   11e40:	muleq	r2, ip, r1
   11e44:	push	{r4, r5, r6, lr}
   11e48:	sub	sp, sp, #8
   11e4c:	ldr	r3, [pc, #200]	; 11f1c <dcngettext@plt+0xc50>
   11e50:	ldr	r0, [r3]
   11e54:	bl	16c08 <dcngettext@plt+0x593c>
   11e58:	cmp	r0, #0
   11e5c:	beq	11e80 <dcngettext@plt+0xbb4>
   11e60:	ldr	r3, [pc, #184]	; 11f20 <dcngettext@plt+0xc54>
   11e64:	ldrb	r3, [r3, #4]
   11e68:	cmp	r3, #0
   11e6c:	beq	11e9c <dcngettext@plt+0xbd0>
   11e70:	bl	11194 <__errno_location@plt>
   11e74:	ldr	r3, [r0]
   11e78:	cmp	r3, #32
   11e7c:	bne	11e9c <dcngettext@plt+0xbd0>
   11e80:	ldr	r3, [pc, #156]	; 11f24 <dcngettext@plt+0xc58>
   11e84:	ldr	r0, [r3]
   11e88:	bl	16c08 <dcngettext@plt+0x593c>
   11e8c:	cmp	r0, #0
   11e90:	bne	11f10 <dcngettext@plt+0xc44>
   11e94:	add	sp, sp, #8
   11e98:	pop	{r4, r5, r6, pc}
   11e9c:	mov	r2, #5
   11ea0:	ldr	r1, [pc, #128]	; 11f28 <dcngettext@plt+0xc5c>
   11ea4:	mov	r0, #0
   11ea8:	bl	11044 <dcgettext@plt>
   11eac:	mov	r4, r0
   11eb0:	ldr	r3, [pc, #104]	; 11f20 <dcngettext@plt+0xc54>
   11eb4:	ldr	r5, [r3]
   11eb8:	cmp	r5, #0
   11ebc:	beq	11ef4 <dcngettext@plt+0xc28>
   11ec0:	bl	11194 <__errno_location@plt>
   11ec4:	ldr	r6, [r0]
   11ec8:	mov	r0, r5
   11ecc:	bl	157e4 <dcngettext@plt+0x4518>
   11ed0:	str	r4, [sp]
   11ed4:	mov	r3, r0
   11ed8:	ldr	r2, [pc, #76]	; 11f2c <dcngettext@plt+0xc60>
   11edc:	mov	r1, r6
   11ee0:	mov	r0, #0
   11ee4:	bl	110d4 <error@plt>
   11ee8:	ldr	r3, [pc, #64]	; 11f30 <dcngettext@plt+0xc64>
   11eec:	ldr	r0, [r3]
   11ef0:	bl	10ffc <_exit@plt>
   11ef4:	bl	11194 <__errno_location@plt>
   11ef8:	mov	r3, r4
   11efc:	ldr	r2, [pc, #48]	; 11f34 <dcngettext@plt+0xc68>
   11f00:	ldr	r1, [r0]
   11f04:	mov	r0, #0
   11f08:	bl	110d4 <error@plt>
   11f0c:	b	11ee8 <dcngettext@plt+0xc1c>
   11f10:	ldr	r3, [pc, #24]	; 11f30 <dcngettext@plt+0xc64>
   11f14:	ldr	r0, [r3]
   11f18:	bl	10ffc <_exit@plt>
   11f1c:	andeq	r8, r2, ip, lsl #3
   11f20:	muleq	r2, ip, r1
   11f24:	andeq	r8, r2, r8, lsl #3
   11f28:	strdeq	r7, [r1], -r8
   11f2c:	andeq	r7, r1, r4, lsl #20
   11f30:	andeq	r8, r2, r4, lsr r1
   11f34:	andeq	r7, r1, r8, lsl #20
   11f38:	push	{r4, r5, r6, lr}
   11f3c:	sub	sp, sp, #8
   11f40:	mov	r4, r0
   11f44:	bl	111d0 <fileno@plt>
   11f48:	cmp	r0, #0
   11f4c:	blt	11fc4 <dcngettext@plt+0xcf8>
   11f50:	mov	r0, r4
   11f54:	bl	11110 <__freading@plt>
   11f58:	cmp	r0, #0
   11f5c:	beq	11f90 <dcngettext@plt+0xcc4>
   11f60:	mov	r0, r4
   11f64:	bl	111d0 <fileno@plt>
   11f68:	mov	r3, #1
   11f6c:	str	r3, [sp]
   11f70:	mov	r2, #0
   11f74:	mov	r3, #0
   11f78:	bl	110a4 <lseek64@plt>
   11f7c:	mvn	r2, #0
   11f80:	mvn	r3, #0
   11f84:	cmp	r1, r3
   11f88:	cmpeq	r0, r2
   11f8c:	beq	11fd0 <dcngettext@plt+0xd04>
   11f90:	mov	r0, r4
   11f94:	bl	11fe0 <dcngettext@plt+0xd14>
   11f98:	cmp	r0, #0
   11f9c:	beq	11fd0 <dcngettext@plt+0xd04>
   11fa0:	bl	11194 <__errno_location@plt>
   11fa4:	mov	r5, r0
   11fa8:	ldr	r6, [r0]
   11fac:	mov	r0, r4
   11fb0:	bl	111e8 <fclose@plt>
   11fb4:	cmp	r6, #0
   11fb8:	strne	r6, [r5]
   11fbc:	mvnne	r0, #0
   11fc0:	b	11fd8 <dcngettext@plt+0xd0c>
   11fc4:	mov	r0, r4
   11fc8:	bl	111e8 <fclose@plt>
   11fcc:	b	11fd8 <dcngettext@plt+0xd0c>
   11fd0:	mov	r0, r4
   11fd4:	bl	111e8 <fclose@plt>
   11fd8:	add	sp, sp, #8
   11fdc:	pop	{r4, r5, r6, pc}
   11fe0:	push	{r4, lr}
   11fe4:	sub	sp, sp, #8
   11fe8:	subs	r4, r0, #0
   11fec:	beq	12000 <dcngettext@plt+0xd34>
   11ff0:	mov	r0, r4
   11ff4:	bl	11110 <__freading@plt>
   11ff8:	cmp	r0, #0
   11ffc:	bne	12010 <dcngettext@plt+0xd44>
   12000:	mov	r0, r4
   12004:	bl	10fd8 <fflush@plt>
   12008:	add	sp, sp, #8
   1200c:	pop	{r4, pc}
   12010:	ldr	r3, [r4]
   12014:	tst	r3, #256	; 0x100
   12018:	bne	12028 <dcngettext@plt+0xd5c>
   1201c:	mov	r0, r4
   12020:	bl	10fd8 <fflush@plt>
   12024:	b	12008 <dcngettext@plt+0xd3c>
   12028:	mov	r3, #1
   1202c:	str	r3, [sp]
   12030:	mov	r2, #0
   12034:	mov	r3, #0
   12038:	mov	r0, r4
   1203c:	bl	13be8 <dcngettext@plt+0x291c>
   12040:	b	1201c <dcngettext@plt+0xd50>
   12044:	push	{r4, r5, r6, r7, r8, lr}
   12048:	subs	r5, r2, #0
   1204c:	popeq	{r4, r5, r6, r7, r8, pc}
   12050:	mov	r6, r0
   12054:	mov	r4, r1
   12058:	bl	11128 <__ctype_tolower_loc@plt>
   1205c:	mov	r7, r0
   12060:	add	r5, r4, r5
   12064:	ldrb	r2, [r4], #1
   12068:	ldr	r3, [r7]
   1206c:	mov	r1, r6
   12070:	ldr	r0, [r3, r2, lsl #2]
   12074:	bl	11254 <fputc@plt>
   12078:	cmp	r5, r4
   1207c:	bne	12064 <dcngettext@plt+0xd98>
   12080:	pop	{r4, r5, r6, r7, r8, pc}
   12084:	push	{r4, r5, r6, r7, r8, lr}
   12088:	subs	r5, r2, #0
   1208c:	popeq	{r4, r5, r6, r7, r8, pc}
   12090:	mov	r6, r0
   12094:	mov	r4, r1
   12098:	bl	11134 <__ctype_toupper_loc@plt>
   1209c:	mov	r7, r0
   120a0:	add	r5, r4, r5
   120a4:	ldrb	r2, [r4], #1
   120a8:	ldr	r3, [r7]
   120ac:	mov	r1, r6
   120b0:	ldr	r0, [r3, r2, lsl #2]
   120b4:	bl	11254 <fputc@plt>
   120b8:	cmp	r5, r4
   120bc:	bne	120a4 <dcngettext@plt+0xdd8>
   120c0:	pop	{r4, r5, r6, r7, r8, pc}
   120c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120c8:	sub	sp, sp, #1104	; 0x450
   120cc:	sub	sp, sp, #12
   120d0:	str	r0, [sp, #24]
   120d4:	mov	r9, r1
   120d8:	mov	r4, r2
   120dc:	str	r2, [sp, #28]
   120e0:	str	r3, [sp, #48]	; 0x30
   120e4:	ldr	r7, [sp, #1156]	; 0x484
   120e8:	bl	11194 <__errno_location@plt>
   120ec:	str	r0, [sp, #36]	; 0x24
   120f0:	ldr	r3, [r0]
   120f4:	str	r3, [sp, #56]	; 0x38
   120f8:	ldr	r2, [r4, #8]
   120fc:	mov	r0, r2
   12100:	str	r2, [sp, #40]	; 0x28
   12104:	ldr	r3, [r4, #40]	; 0x28
   12108:	mov	r1, r3
   1210c:	ldr	r3, [pc, #3964]	; 13090 <dcngettext@plt+0x1dc4>
   12110:	mov	r2, r1
   12114:	cmp	r1, #0
   12118:	moveq	r2, r3
   1211c:	str	r2, [sp, #52]	; 0x34
   12120:	cmp	r0, #12
   12124:	ble	12148 <dcngettext@plt+0xe7c>
   12128:	sub	r3, r0, #12
   1212c:	str	r3, [sp, #40]	; 0x28
   12130:	ldrb	r3, [r9]
   12134:	cmp	r3, #0
   12138:	beq	13a68 <dcngettext@plt+0x279c>
   1213c:	mov	fp, #0
   12140:	ldr	sl, [pc, #3916]	; 13094 <dcngettext@plt+0x1dc8>
   12144:	b	121c0 <dcngettext@plt+0xef4>
   12148:	ldr	r2, [sp, #40]	; 0x28
   1214c:	mov	r3, r2
   12150:	cmp	r2, #0
   12154:	moveq	r3, #12
   12158:	str	r3, [sp, #40]	; 0x28
   1215c:	b	12130 <dcngettext@plt+0xe64>
   12160:	ldr	r3, [sp, #24]
   12164:	cmp	r3, #0
   12168:	beq	121a4 <dcngettext@plt+0xed8>
   1216c:	cmp	r5, #1
   12170:	bls	12198 <dcngettext@plt+0xecc>
   12174:	sub	r5, r5, #1
   12178:	mov	r4, #0
   1217c:	mov	r6, #32
   12180:	ldr	r1, [sp, #24]
   12184:	mov	r0, r6
   12188:	bl	11254 <fputc@plt>
   1218c:	add	r4, r4, #1
   12190:	cmp	r5, r4
   12194:	bne	12180 <dcngettext@plt+0xeb4>
   12198:	ldr	r1, [sp, #24]
   1219c:	ldrb	r0, [r9]
   121a0:	bl	11254 <fputc@plt>
   121a4:	add	fp, fp, r8
   121a8:	mov	r4, r9
   121ac:	add	r9, r4, #1
   121b0:	ldrb	r3, [r4, #1]
   121b4:	mvn	r7, #0
   121b8:	cmp	r3, #0
   121bc:	beq	13a6c <dcngettext@plt+0x27a0>
   121c0:	cmp	r3, #37	; 0x25
   121c4:	beq	12318 <dcngettext@plt+0x104c>
   121c8:	bic	r5, r7, r7, asr #31
   121cc:	cmp	r5, #1
   121d0:	movcs	r8, r5
   121d4:	movcc	r8, #1
   121d8:	mvn	r3, fp
   121dc:	cmp	r8, r3
   121e0:	bcc	12160 <dcngettext@plt+0xe94>
   121e4:	mov	r3, #34	; 0x22
   121e8:	ldr	r2, [sp, #36]	; 0x24
   121ec:	str	r3, [r2]
   121f0:	mov	fp, #0
   121f4:	mov	r0, fp
   121f8:	add	sp, sp, #1104	; 0x450
   121fc:	add	sp, sp, #12
   12200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12204:	mov	r5, r3
   12208:	b	12210 <dcngettext@plt+0xf44>
   1220c:	mov	r6, r1
   12210:	ldrb	r3, [r4, #1]!
   12214:	sub	r2, r3, #35	; 0x23
   12218:	cmp	r2, #60	; 0x3c
   1221c:	ldrls	pc, [pc, r2, lsl #2]
   12220:	b	12340 <dcngettext@plt+0x1074>
   12224:	andeq	r2, r1, ip, lsl #4
   12228:	andeq	r2, r1, r0, asr #6
   1222c:	andeq	r2, r1, r0, asr #6
   12230:	andeq	r2, r1, r0, asr #6
   12234:	andeq	r2, r1, r0, asr #6
   12238:	andeq	r2, r1, r0, asr #6
   1223c:	andeq	r2, r1, r0, asr #6
   12240:	andeq	r2, r1, r0, asr #6
   12244:	andeq	r2, r1, r4, lsl #4
   12248:	andeq	r2, r1, r0, asr #6
   1224c:	andeq	r2, r1, r4, lsl #4
   12250:	andeq	r2, r1, r0, asr #6
   12254:	andeq	r2, r1, r0, asr #6
   12258:	andeq	r2, r1, r4, lsl #4
   1225c:	andeq	r2, r1, r0, asr #6
   12260:	andeq	r2, r1, r0, asr #6
   12264:	andeq	r2, r1, r0, asr #6
   12268:	andeq	r2, r1, r0, asr #6
   1226c:	andeq	r2, r1, r0, asr #6
   12270:	andeq	r2, r1, r0, asr #6
   12274:	andeq	r2, r1, r0, asr #6
   12278:	andeq	r2, r1, r0, asr #6
   1227c:	andeq	r2, r1, r0, asr #6
   12280:	andeq	r2, r1, r0, asr #6
   12284:	andeq	r2, r1, r0, asr #6
   12288:	andeq	r2, r1, r0, asr #6
   1228c:	andeq	r2, r1, r0, asr #6
   12290:	andeq	r2, r1, r0, asr #6
   12294:	andeq	r2, r1, r0, asr #6
   12298:	andeq	r2, r1, r0, asr #6
   1229c:	andeq	r2, r1, r0, asr #6
   122a0:	andeq	r2, r1, r0, asr #6
   122a4:	andeq	r2, r1, r0, asr #6
   122a8:	andeq	r2, r1, r0, asr #6
   122ac:	andeq	r2, r1, r0, asr #6
   122b0:	andeq	r2, r1, r0, asr #6
   122b4:	andeq	r2, r1, r0, asr #6
   122b8:	andeq	r2, r1, r0, asr #6
   122bc:	andeq	r2, r1, r0, asr #6
   122c0:	andeq	r2, r1, r0, asr #6
   122c4:	andeq	r2, r1, r0, asr #6
   122c8:	andeq	r2, r1, r0, asr #6
   122cc:	andeq	r2, r1, r0, asr #6
   122d0:	andeq	r2, r1, r0, asr #6
   122d4:	andeq	r2, r1, r0, asr #6
   122d8:	andeq	r2, r1, r0, asr #6
   122dc:	andeq	r2, r1, r0, asr #6
   122e0:	andeq	r2, r1, r0, asr #6
   122e4:	andeq	r2, r1, r0, asr #6
   122e8:	andeq	r2, r1, r0, asr #6
   122ec:	andeq	r2, r1, r0, asr #6
   122f0:	andeq	r2, r1, r0, asr #6
   122f4:	andeq	r2, r1, r0, asr #6
   122f8:	andeq	r2, r1, r0, asr #6
   122fc:	andeq	r2, r1, r0, asr #6
   12300:	andeq	r2, r1, r0, asr #6
   12304:	andeq	r2, r1, r0, asr #6
   12308:	andeq	r2, r1, r0, asr #6
   1230c:	andeq	r2, r1, r0, asr #6
   12310:	andeq	r2, r1, r4, lsr r3
   12314:	andeq	r2, r1, r4, lsl #4
   12318:	ldr	r3, [sp, #48]	; 0x30
   1231c:	str	r3, [sp, #32]
   12320:	mov	r4, r9
   12324:	mov	r6, #0
   12328:	mov	r5, r6
   1232c:	mov	r1, #1
   12330:	b	12210 <dcngettext@plt+0xf44>
   12334:	mov	r3, #1
   12338:	str	r3, [sp, #32]
   1233c:	b	12210 <dcngettext@plt+0xf44>
   12340:	sub	r3, r3, #48	; 0x30
   12344:	cmp	r3, #9
   12348:	bhi	12420 <dcngettext@plt+0x1154>
   1234c:	mov	r7, #0
   12350:	ldr	r8, [pc, #3392]	; 13098 <dcngettext@plt+0x1dcc>
   12354:	b	123b0 <dcngettext@plt+0x10e4>
   12358:	cmn	r7, #1
   1235c:	moveq	r0, #0
   12360:	beq	123c4 <dcngettext@plt+0x10f8>
   12364:	mov	r1, r7
   12368:	mov	r0, #-2147483648	; 0x80000000
   1236c:	bl	170c4 <dcngettext@plt+0x5df8>
   12370:	cmp	r0, #9
   12374:	movgt	r0, #0
   12378:	movle	r0, #1
   1237c:	b	123c4 <dcngettext@plt+0x10f8>
   12380:	rsb	r3, r2, #-2147483600	; 0x80000030
   12384:	cmp	r7, r3
   12388:	movge	r3, #0
   1238c:	movlt	r3, #1
   12390:	cmp	r3, #0
   12394:	addeq	r7, r2, r7
   12398:	subeq	r7, r7, #48	; 0x30
   1239c:	mvnne	r7, #-2147483648	; 0x80000000
   123a0:	ldrb	r3, [r4, #1]!
   123a4:	sub	r3, r3, #48	; 0x30
   123a8:	cmp	r3, #9
   123ac:	bhi	12420 <dcngettext@plt+0x1154>
   123b0:	cmp	r7, #0
   123b4:	blt	12358 <dcngettext@plt+0x108c>
   123b8:	cmp	r7, r8
   123bc:	movle	r0, #0
   123c0:	movgt	r0, #1
   123c4:	cmp	r0, #0
   123c8:	mvnne	r7, #-2147483648	; 0x80000000
   123cc:	bne	123a0 <dcngettext@plt+0x10d4>
   123d0:	add	r7, r7, r7, lsl #2
   123d4:	lsl	r7, r7, #1
   123d8:	ldrb	r2, [r4]
   123dc:	subs	r3, r2, #48	; 0x30
   123e0:	bmi	12380 <dcngettext@plt+0x10b4>
   123e4:	cmp	r7, #0
   123e8:	blt	1240c <dcngettext@plt+0x1140>
   123ec:	rsb	r3, r3, #2130706432	; 0x7f000000
   123f0:	add	r3, r3, #16711680	; 0xff0000
   123f4:	add	r3, r3, #65280	; 0xff00
   123f8:	add	r3, r3, #255	; 0xff
   123fc:	cmp	r7, r3
   12400:	movle	r3, #0
   12404:	movgt	r3, #1
   12408:	b	12390 <dcngettext@plt+0x10c4>
   1240c:	rsb	r1, r7, #-2147483648	; 0x80000000
   12410:	cmp	r3, r1
   12414:	movge	r3, #0
   12418:	movlt	r3, #1
   1241c:	b	12390 <dcngettext@plt+0x10c4>
   12420:	ldrb	r2, [r4]
   12424:	cmp	r2, #69	; 0x45
   12428:	beq	12638 <dcngettext@plt+0x136c>
   1242c:	cmp	r2, #79	; 0x4f
   12430:	movne	r2, #0
   12434:	beq	12638 <dcngettext@plt+0x136c>
   12438:	ldrb	r1, [r4]
   1243c:	mov	r8, r1
   12440:	cmp	r1, #122	; 0x7a
   12444:	ldrls	pc, [pc, r1, lsl #2]
   12448:	b	12730 <dcngettext@plt+0x1464>
   1244c:	andeq	r2, r1, ip, lsr #14
   12450:	andeq	r2, r1, r0, lsr r7
   12454:	andeq	r2, r1, r0, lsr r7
   12458:	andeq	r2, r1, r0, lsr r7
   1245c:	andeq	r2, r1, r0, lsr r7
   12460:	andeq	r2, r1, r0, lsr r7
   12464:	andeq	r2, r1, r0, lsr r7
   12468:	andeq	r2, r1, r0, lsr r7
   1246c:	andeq	r2, r1, r0, lsr r7
   12470:	andeq	r2, r1, r0, lsr r7
   12474:	andeq	r2, r1, r0, lsr r7
   12478:	andeq	r2, r1, r0, lsr r7
   1247c:	andeq	r2, r1, r0, lsr r7
   12480:	andeq	r2, r1, r0, lsr r7
   12484:	andeq	r2, r1, r0, lsr r7
   12488:	andeq	r2, r1, r0, lsr r7
   1248c:	andeq	r2, r1, r0, lsr r7
   12490:	andeq	r2, r1, r0, lsr r7
   12494:	andeq	r2, r1, r0, lsr r7
   12498:	andeq	r2, r1, r0, lsr r7
   1249c:	andeq	r2, r1, r0, lsr r7
   124a0:	andeq	r2, r1, r0, lsr r7
   124a4:	andeq	r2, r1, r0, lsr r7
   124a8:	andeq	r2, r1, r0, lsr r7
   124ac:	andeq	r2, r1, r0, lsr r7
   124b0:	andeq	r2, r1, r0, lsr r7
   124b4:	andeq	r2, r1, r0, lsr r7
   124b8:	andeq	r2, r1, r0, lsr r7
   124bc:	andeq	r2, r1, r0, lsr r7
   124c0:	andeq	r2, r1, r0, lsr r7
   124c4:	andeq	r2, r1, r0, lsr r7
   124c8:	andeq	r2, r1, r0, lsr r7
   124cc:	andeq	r2, r1, r0, lsr r7
   124d0:	andeq	r2, r1, r0, lsr r7
   124d4:	andeq	r2, r1, r0, lsr r7
   124d8:	andeq	r2, r1, r0, lsr r7
   124dc:	andeq	r2, r1, r0, lsr r7
   124e0:	andeq	r2, r1, r0, lsr #14
   124e4:	andeq	r2, r1, r0, lsr r7
   124e8:	andeq	r2, r1, r0, lsr r7
   124ec:	andeq	r2, r1, r0, lsr r7
   124f0:	andeq	r2, r1, r0, lsr r7
   124f4:	andeq	r2, r1, r0, lsr r7
   124f8:	andeq	r2, r1, r0, lsr r7
   124fc:	andeq	r2, r1, r0, lsr r7
   12500:	andeq	r2, r1, r0, lsr r7
   12504:	andeq	r2, r1, r0, lsr r7
   12508:	andeq	r2, r1, r0, lsr r7
   1250c:	andeq	r2, r1, r0, lsr r7
   12510:	andeq	r2, r1, r0, lsr r7
   12514:	andeq	r2, r1, r0, lsr r7
   12518:	andeq	r2, r1, r0, lsr r7
   1251c:	andeq	r2, r1, r0, lsr r7
   12520:	andeq	r2, r1, r0, lsr r7
   12524:	andeq	r2, r1, r0, lsr r7
   12528:	andeq	r2, r1, r0, lsr r7
   1252c:	andeq	r2, r1, r0, lsr r7
   12530:	andeq	r2, r1, r0, lsr r7
   12534:	strdeq	r2, [r1], -ip
   12538:	andeq	r2, r1, r0, lsr r7
   1253c:	andeq	r2, r1, r0, lsr r7
   12540:	andeq	r2, r1, r0, lsr r7
   12544:	andeq	r2, r1, r0, lsr r7
   12548:	andeq	r2, r1, r0, lsr r7
   1254c:	andeq	r2, r1, r0, lsr r7
   12550:			; <UNDEFINED> instruction: 0x000128b8
   12554:	strdeq	r2, [r1], -r8
   12558:	andeq	r2, r1, ip, lsr #22
   1255c:	andeq	r2, r1, r0, asr #23
   12560:	andeq	r2, r1, r0, lsr r7
   12564:	ldrdeq	r2, [r1], -r4
   12568:	andeq	r3, r1, r4, lsr #8
   1256c:	andeq	r2, r1, r8, lsl #28
   12570:	andeq	r2, r1, r0, lsr #28
   12574:	andeq	r2, r1, r0, lsr r7
   12578:	andeq	r2, r1, r0, lsr r7
   1257c:	andeq	r2, r1, r0, lsr r7
   12580:	andeq	r2, r1, ip, lsl #29
   12584:	ldrdeq	r2, [r1], -r8
   12588:	andeq	r2, r1, r0, lsr r7
   1258c:	muleq	r1, ip, r1
   12590:	andeq	r2, r1, r0, lsr r7
   12594:	andeq	r2, r1, ip, lsr #18
   12598:	andeq	r3, r1, r4, lsl r2
   1259c:	andeq	r2, r1, r0, asr #12
   125a0:	andeq	r3, r1, ip, ror #7
   125a4:	andeq	r3, r1, r4, lsr #8
   125a8:	muleq	r1, r4, r6
   125ac:	ldrdeq	r3, [r1], -r8
   125b0:	andeq	r3, r1, r4, lsl #14
   125b4:	muleq	r1, r4, r7
   125b8:	andeq	r2, r1, r0, lsr r7
   125bc:	andeq	r2, r1, r0, lsr r7
   125c0:	andeq	r2, r1, r0, lsr r7
   125c4:	andeq	r2, r1, r0, lsr r7
   125c8:	andeq	r2, r1, r0, lsr r7
   125cc:	andeq	r2, r1, r0, lsr r7
   125d0:	andeq	r2, r1, r0, lsl #17
   125d4:	ldrdeq	r2, [r1], -r8
   125d8:	andeq	r2, r1, r8, lsl r9
   125dc:	ldrdeq	r2, [r1], -r8
   125e0:	strdeq	r2, [r1], -r0
   125e4:	andeq	r2, r1, r0, lsr r7
   125e8:	andeq	r3, r1, r4, lsr #8
   125ec:	ldrdeq	r2, [r1], -r8
   125f0:	andeq	r2, r1, r0, lsr r7
   125f4:	andeq	r2, r1, r8, asr lr
   125f8:	andeq	r2, r1, r4, lsr lr
   125fc:	andeq	r2, r1, r8, asr #28
   12600:	andeq	r2, r1, r4, lsr #29
   12604:	ldrdeq	r3, [r1], -r0
   12608:	andeq	r2, r1, r0, lsr r7
   1260c:			; <UNDEFINED> instruction: 0x000131bc
   12610:	andeq	r3, r1, r4, asr #3
   12614:	andeq	r2, r1, r0, asr #19
   12618:	andeq	r3, r1, ip, lsr #4
   1261c:	andeq	r3, r1, ip, ror #5
   12620:			; <UNDEFINED> instruction: 0x000133b8
   12624:	andeq	r2, r1, r0, lsr r7
   12628:	andeq	r3, r1, ip, ror #13
   1262c:	andeq	r2, r1, ip, lsr #23
   12630:	andeq	r3, r1, r0, asr #14
   12634:	ldrdeq	r3, [r1], -r8
   12638:	add	r4, r4, #1
   1263c:	b	12438 <dcngettext@plt+0x116c>
   12640:	mvn	r8, #0
   12644:	ldr	r3, [pc, #2640]	; 1309c <dcngettext@plt+0x1dd0>
   12648:	str	r3, [sp, #44]	; 0x2c
   1264c:	ldr	r3, [sp, #1168]	; 0x490
   12650:	str	r3, [sp, #16]
   12654:	ldr	r3, [sp, #1164]	; 0x48c
   12658:	str	r3, [sp, #12]
   1265c:	ldr	r3, [sp, #1160]	; 0x488
   12660:	str	r3, [sp, #8]
   12664:	str	r8, [sp, #4]
   12668:	str	r5, [sp]
   1266c:	ldr	r3, [sp, #32]
   12670:	ldr	r2, [sp, #28]
   12674:	ldr	r1, [sp, #44]	; 0x2c
   12678:	mov	r0, #0
   1267c:	bl	120c4 <dcngettext@plt+0xdf8>
   12680:	mvn	r3, r7
   12684:	lsr	r3, r3, #31
   12688:	cmp	r5, #45	; 0x2d
   1268c:	moveq	r3, #0
   12690:	cmp	r3, #0
   12694:	moveq	r7, #0
   12698:	cmp	r7, r0
   1269c:	movcs	r9, r7
   126a0:	movcc	r9, r0
   126a4:	mvn	r2, fp
   126a8:	cmp	r9, r2
   126ac:	bcs	12950 <dcngettext@plt+0x1684>
   126b0:	ldr	r2, [sp, #24]
   126b4:	cmp	r2, #0
   126b8:	beq	129b8 <dcngettext@plt+0x16ec>
   126bc:	cmp	r7, r0
   126c0:	bls	12984 <dcngettext@plt+0x16b8>
   126c4:	sub	r7, r7, r0
   126c8:	cmp	r5, #43	; 0x2b
   126cc:	cmpne	r5, #48	; 0x30
   126d0:	beq	12960 <dcngettext@plt+0x1694>
   126d4:	cmp	r7, #0
   126d8:	movne	r6, #0
   126dc:	beq	12984 <dcngettext@plt+0x16b8>
   126e0:	ldr	r1, [sp, #24]
   126e4:	mov	r0, #32
   126e8:	bl	11254 <fputc@plt>
   126ec:	add	r6, r6, #1
   126f0:	cmp	r7, r6
   126f4:	bne	126e0 <dcngettext@plt+0x1414>
   126f8:	b	12984 <dcngettext@plt+0x16b8>
   126fc:	add	r0, r4, #1
   12700:	ldrb	r3, [r4, #1]
   12704:	cmp	r3, #58	; 0x3a
   12708:	movne	lr, #1
   1270c:	beq	138b8 <dcngettext@plt+0x25ec>
   12710:	cmp	r3, #122	; 0x7a
   12714:	moveq	r4, r0
   12718:	bne	12730 <dcngettext@plt+0x1464>
   1271c:	b	138dc <dcngettext@plt+0x2610>
   12720:	sub	r3, r4, #1
   12724:	cmp	r9, r3
   12728:	beq	127b4 <dcngettext@plt+0x14e8>
   1272c:	sub	r4, r4, #1
   12730:	sub	r8, r4, r9
   12734:	add	r8, r8, #1
   12738:	subs	r3, r5, #45	; 0x2d
   1273c:	movne	r3, #1
   12740:	cmp	r7, #0
   12744:	movlt	r3, #0
   12748:	cmp	r3, #0
   1274c:	moveq	r7, #0
   12750:	mov	r6, r7
   12754:	cmp	r7, r8
   12758:	movcc	r7, r8
   1275c:	mvn	r3, fp
   12760:	cmp	r7, r3
   12764:	bcs	139f8 <dcngettext@plt+0x272c>
   12768:	ldr	r3, [sp, #24]
   1276c:	cmp	r3, #0
   12770:	beq	13a48 <dcngettext@plt+0x277c>
   12774:	cmp	r6, r8
   12778:	bls	13a2c <dcngettext@plt+0x2760>
   1277c:	sub	r6, r6, r8
   12780:	cmp	r5, #43	; 0x2b
   12784:	cmpne	r5, #48	; 0x30
   12788:	beq	13a08 <dcngettext@plt+0x273c>
   1278c:	cmp	r6, #0
   12790:	movne	r5, #0
   12794:	beq	13a2c <dcngettext@plt+0x2760>
   12798:	ldr	r1, [sp, #24]
   1279c:	mov	r0, #32
   127a0:	bl	11254 <fputc@plt>
   127a4:	add	r5, r5, #1
   127a8:	cmp	r6, r5
   127ac:	bne	12798 <dcngettext@plt+0x14cc>
   127b0:	b	13a2c <dcngettext@plt+0x2760>
   127b4:	subs	r3, r5, #45	; 0x2d
   127b8:	movne	r3, #1
   127bc:	cmp	r7, #0
   127c0:	movlt	r3, #0
   127c4:	cmp	r3, #0
   127c8:	moveq	r7, #0
   127cc:	mov	r6, r7
   127d0:	cmp	r7, #1
   127d4:	movcc	r7, #1
   127d8:	mvn	r3, fp
   127dc:	cmp	r7, r3
   127e0:	movcs	r3, #34	; 0x22
   127e4:	ldrcs	r2, [sp, #36]	; 0x24
   127e8:	strcs	r3, [r2]
   127ec:	bcs	121f0 <dcngettext@plt+0xf24>
   127f0:	ldr	r3, [sp, #24]
   127f4:	cmp	r3, #0
   127f8:	beq	12830 <dcngettext@plt+0x1564>
   127fc:	cmp	r6, #1
   12800:	bls	12824 <dcngettext@plt+0x1558>
   12804:	sub	r6, r6, #1
   12808:	cmp	r5, #43	; 0x2b
   1280c:	cmpne	r5, #48	; 0x30
   12810:	beq	12838 <dcngettext@plt+0x156c>
   12814:	cmp	r6, #0
   12818:	movne	r5, #0
   1281c:	movne	r8, #32
   12820:	bne	12864 <dcngettext@plt+0x1598>
   12824:	ldr	r1, [sp, #24]
   12828:	ldrb	r0, [r4]
   1282c:	bl	11254 <fputc@plt>
   12830:	add	fp, fp, r7
   12834:	b	121ac <dcngettext@plt+0xee0>
   12838:	cmp	r6, #0
   1283c:	beq	12824 <dcngettext@plt+0x1558>
   12840:	mov	r5, #0
   12844:	mov	r8, #48	; 0x30
   12848:	ldr	r1, [sp, #24]
   1284c:	mov	r0, r8
   12850:	bl	11254 <fputc@plt>
   12854:	add	r5, r5, #1
   12858:	cmp	r6, r5
   1285c:	bne	12848 <dcngettext@plt+0x157c>
   12860:	b	12824 <dcngettext@plt+0x1558>
   12864:	ldr	r1, [sp, #24]
   12868:	mov	r0, r8
   1286c:	bl	11254 <fputc@plt>
   12870:	add	r5, r5, #1
   12874:	cmp	r6, r5
   12878:	bne	12864 <dcngettext@plt+0x1598>
   1287c:	b	12824 <dcngettext@plt+0x1558>
   12880:	cmp	r2, #0
   12884:	bne	12730 <dcngettext@plt+0x1464>
   12888:	ldr	r3, [sp, #32]
   1288c:	cmp	r6, #0
   12890:	movne	r3, r6
   12894:	str	r3, [sp, #32]
   12898:	mov	r8, #97	; 0x61
   1289c:	mov	r3, #32
   128a0:	strb	r3, [sp, #72]	; 0x48
   128a4:	mov	r3, #37	; 0x25
   128a8:	strb	r3, [sp, #73]	; 0x49
   128ac:	mov	r6, #0
   128b0:	add	r3, sp, #74	; 0x4a
   128b4:	b	129f4 <dcngettext@plt+0x1728>
   128b8:	cmp	r2, #0
   128bc:	bne	12730 <dcngettext@plt+0x1464>
   128c0:	ldr	r3, [sp, #32]
   128c4:	cmp	r6, #0
   128c8:	movne	r3, r6
   128cc:	str	r3, [sp, #32]
   128d0:	mov	r8, #65	; 0x41
   128d4:	b	1289c <dcngettext@plt+0x15d0>
   128d8:	ldr	r3, [sp, #32]
   128dc:	cmp	r6, #0
   128e0:	movne	r3, r6
   128e4:	str	r3, [sp, #32]
   128e8:	cmp	r2, #69	; 0x45
   128ec:	movne	r6, #0
   128f0:	bne	129cc <dcngettext@plt+0x1700>
   128f4:	b	12730 <dcngettext@plt+0x1464>
   128f8:	cmp	r2, #69	; 0x45
   128fc:	beq	12730 <dcngettext@plt+0x1464>
   12900:	cmp	r6, #0
   12904:	moveq	r8, #66	; 0x42
   12908:	strne	r6, [sp, #32]
   1290c:	movne	r8, #66	; 0x42
   12910:	movne	r6, #0
   12914:	b	129cc <dcngettext@plt+0x1700>
   12918:	cmp	r2, #79	; 0x4f
   1291c:	beq	12730 <dcngettext@plt+0x1464>
   12920:	mov	r8, #99	; 0x63
   12924:	mov	r6, #0
   12928:	b	129cc <dcngettext@plt+0x1700>
   1292c:	mvn	r8, #0
   12930:	ldr	r3, [pc, #1896]	; 130a0 <dcngettext@plt+0x1dd4>
   12934:	str	r3, [sp, #44]	; 0x2c
   12938:	b	1264c <dcngettext@plt+0x1380>
   1293c:	mov	r8, #4
   12940:	ldr	r3, [pc, #1884]	; 130a4 <dcngettext@plt+0x1dd8>
   12944:	str	r3, [sp, #44]	; 0x2c
   12948:	mov	r5, #43	; 0x2b
   1294c:	b	1264c <dcngettext@plt+0x1380>
   12950:	mov	r3, #34	; 0x22
   12954:	ldr	r2, [sp, #36]	; 0x24
   12958:	str	r3, [r2]
   1295c:	b	121f0 <dcngettext@plt+0xf24>
   12960:	cmp	r7, #0
   12964:	beq	12984 <dcngettext@plt+0x16b8>
   12968:	mov	r6, #0
   1296c:	ldr	r1, [sp, #24]
   12970:	mov	r0, #48	; 0x30
   12974:	bl	11254 <fputc@plt>
   12978:	add	r6, r6, #1
   1297c:	cmp	r7, r6
   12980:	bne	1296c <dcngettext@plt+0x16a0>
   12984:	ldr	r3, [sp, #1168]	; 0x490
   12988:	str	r3, [sp, #16]
   1298c:	ldr	r3, [sp, #1164]	; 0x48c
   12990:	str	r3, [sp, #12]
   12994:	ldr	r3, [sp, #1160]	; 0x488
   12998:	str	r3, [sp, #8]
   1299c:	str	r8, [sp, #4]
   129a0:	str	r5, [sp]
   129a4:	ldr	r3, [sp, #32]
   129a8:	ldr	r2, [sp, #28]
   129ac:	ldr	r1, [sp, #44]	; 0x2c
   129b0:	ldr	r0, [sp, #24]
   129b4:	bl	120c4 <dcngettext@plt+0xdf8>
   129b8:	add	fp, fp, r9
   129bc:	b	121ac <dcngettext@plt+0xee0>
   129c0:	mov	r6, #0
   129c4:	b	129cc <dcngettext@plt+0x1700>
   129c8:	mov	r6, #0
   129cc:	mov	r3, #32
   129d0:	strb	r3, [sp, #72]	; 0x48
   129d4:	mov	r3, #37	; 0x25
   129d8:	strb	r3, [sp, #73]	; 0x49
   129dc:	cmp	r2, #0
   129e0:	addeq	r3, sp, #72	; 0x48
   129e4:	addeq	r3, sp, #74	; 0x4a
   129e8:	beq	129f4 <dcngettext@plt+0x1728>
   129ec:	strb	r2, [sp, #74]	; 0x4a
   129f0:	add	r3, sp, #75	; 0x4b
   129f4:	strb	r8, [r3]
   129f8:	mov	r2, #0
   129fc:	strb	r2, [r3, #1]
   12a00:	ldr	r3, [sp, #28]
   12a04:	add	r2, sp, #72	; 0x48
   12a08:	mov	r1, #1024	; 0x400
   12a0c:	add	r0, sp, #88	; 0x58
   12a10:	bl	11104 <strftime@plt>
   12a14:	cmp	r0, #0
   12a18:	beq	121ac <dcngettext@plt+0xee0>
   12a1c:	sub	r8, r0, #1
   12a20:	mvn	r3, r7
   12a24:	lsr	r3, r3, #31
   12a28:	cmp	r5, #45	; 0x2d
   12a2c:	moveq	r3, #0
   12a30:	cmp	r3, #0
   12a34:	moveq	r7, #0
   12a38:	cmp	r7, r8
   12a3c:	movcs	r9, r7
   12a40:	movcc	r9, r8
   12a44:	mvn	r2, fp
   12a48:	cmp	r9, r2
   12a4c:	bcs	12a9c <dcngettext@plt+0x17d0>
   12a50:	ldr	r2, [sp, #24]
   12a54:	cmp	r2, #0
   12a58:	beq	12b08 <dcngettext@plt+0x183c>
   12a5c:	cmp	r7, r8
   12a60:	bls	12ad0 <dcngettext@plt+0x1804>
   12a64:	sub	r7, r7, r8
   12a68:	cmp	r5, #43	; 0x2b
   12a6c:	cmpne	r5, #48	; 0x30
   12a70:	beq	12aac <dcngettext@plt+0x17e0>
   12a74:	cmp	r7, #0
   12a78:	movne	r5, #0
   12a7c:	beq	12ad0 <dcngettext@plt+0x1804>
   12a80:	ldr	r1, [sp, #24]
   12a84:	mov	r0, #32
   12a88:	bl	11254 <fputc@plt>
   12a8c:	add	r5, r5, #1
   12a90:	cmp	r7, r5
   12a94:	bne	12a80 <dcngettext@plt+0x17b4>
   12a98:	b	12ad0 <dcngettext@plt+0x1804>
   12a9c:	mov	r3, #34	; 0x22
   12aa0:	ldr	r2, [sp, #36]	; 0x24
   12aa4:	str	r3, [r2]
   12aa8:	b	121f0 <dcngettext@plt+0xf24>
   12aac:	cmp	r7, #0
   12ab0:	beq	12ad0 <dcngettext@plt+0x1804>
   12ab4:	mov	r5, #0
   12ab8:	ldr	r1, [sp, #24]
   12abc:	mov	r0, #48	; 0x30
   12ac0:	bl	11254 <fputc@plt>
   12ac4:	add	r5, r5, #1
   12ac8:	cmp	r7, r5
   12acc:	bne	12ab8 <dcngettext@plt+0x17ec>
   12ad0:	cmp	r6, #0
   12ad4:	bne	12af8 <dcngettext@plt+0x182c>
   12ad8:	ldr	r3, [sp, #32]
   12adc:	cmp	r3, #0
   12ae0:	beq	12b10 <dcngettext@plt+0x1844>
   12ae4:	mov	r2, r8
   12ae8:	add	r1, sp, #89	; 0x59
   12aec:	ldr	r0, [sp, #24]
   12af0:	bl	12084 <dcngettext@plt+0xdb8>
   12af4:	b	12b08 <dcngettext@plt+0x183c>
   12af8:	mov	r2, r8
   12afc:	add	r1, sp, #89	; 0x59
   12b00:	ldr	r0, [sp, #24]
   12b04:	bl	12044 <dcngettext@plt+0xd78>
   12b08:	add	fp, fp, r9
   12b0c:	b	121ac <dcngettext@plt+0xee0>
   12b10:	ldr	r3, [sp, #24]
   12b14:	mov	r2, #1
   12b18:	mov	r1, r8
   12b1c:	add	r0, sp, #88	; 0x58
   12b20:	add	r0, r0, r2
   12b24:	bl	11098 <fwrite@plt>
   12b28:	b	12b08 <dcngettext@plt+0x183c>
   12b2c:	cmp	r2, #69	; 0x45
   12b30:	beq	13a7c <dcngettext@plt+0x27b0>
   12b34:	ldr	r3, [sp, #28]
   12b38:	ldr	r1, [r3, #20]
   12b3c:	ldr	r3, [pc, #1400]	; 130bc <dcngettext@plt+0x1df0>
   12b40:	cmp	r1, r3
   12b44:	movge	r3, #0
   12b48:	movlt	r3, #1
   12b4c:	str	r3, [sp, #44]	; 0x2c
   12b50:	add	r3, r1, #1888	; 0x760
   12b54:	add	r3, r3, #12
   12b58:	ldr	r0, [pc, #1352]	; 130a8 <dcngettext@plt+0x1ddc>
   12b5c:	cmp	r3, r0
   12b60:	movhi	r3, #0
   12b64:	movls	r3, #1
   12b68:	mvn	r0, #98	; 0x62
   12b6c:	mla	r3, r0, r3, r1
   12b70:	ldr	r1, [pc, #1352]	; 130c0 <dcngettext@plt+0x1df4>
   12b74:	smull	r0, r1, r1, r3
   12b78:	asr	r3, r3, #31
   12b7c:	rsb	r3, r3, r1, asr #5
   12b80:	add	r3, r3, #19
   12b84:	mov	lr, #2
   12b88:	ldr	r1, [sp, #1152]	; 0x480
   12b8c:	cmp	r5, #0
   12b90:	moveq	r5, r1
   12b94:	cmp	r5, #43	; 0x2b
   12b98:	movne	r1, #0
   12b9c:	beq	12ce0 <dcngettext@plt+0x1a14>
   12ba0:	mov	r9, r1
   12ba4:	mov	r0, #0
   12ba8:	b	12c1c <dcngettext@plt+0x1950>
   12bac:	cmp	r2, #79	; 0x4f
   12bb0:	beq	12730 <dcngettext@plt+0x1464>
   12bb4:	mov	r8, #120	; 0x78
   12bb8:	mov	r6, #0
   12bbc:	b	129cc <dcngettext@plt+0x1700>
   12bc0:	cmp	r2, #0
   12bc4:	bne	12730 <dcngettext@plt+0x1464>
   12bc8:	mvn	r8, #0
   12bcc:	ldr	r3, [pc, #1240]	; 130ac <dcngettext@plt+0x1de0>
   12bd0:	str	r3, [sp, #44]	; 0x2c
   12bd4:	b	1264c <dcngettext@plt+0x1380>
   12bd8:	cmp	r2, #69	; 0x45
   12bdc:	beq	12730 <dcngettext@plt+0x1464>
   12be0:	ldr	r3, [sp, #28]
   12be4:	ldr	r3, [r3, #12]
   12be8:	mov	lr, #2
   12bec:	b	12c0c <dcngettext@plt+0x1940>
   12bf0:	cmp	r2, #69	; 0x45
   12bf4:	beq	12730 <dcngettext@plt+0x1464>
   12bf8:	ldr	r3, [sp, #28]
   12bfc:	ldr	r3, [r3, #12]
   12c00:	cmp	r5, #0
   12c04:	mov	lr, #2
   12c08:	moveq	r5, #95	; 0x5f
   12c0c:	lsr	r1, r3, #31
   12c10:	str	r1, [sp, #44]	; 0x2c
   12c14:	mov	r0, #0
   12c18:	mov	r9, r0
   12c1c:	ldr	ip, [sp, #44]	; 0x2c
   12c20:	eor	r1, ip, #1
   12c24:	cmp	r2, #79	; 0x4f
   12c28:	movne	r1, #0
   12c2c:	andeq	r1, r1, #1
   12c30:	cmp	r1, #0
   12c34:	bne	129c8 <dcngettext@plt+0x16fc>
   12c38:	mov	r1, ip
   12c3c:	cmp	ip, #0
   12c40:	rsbne	r3, r3, #0
   12c44:	add	r6, sp, #86	; 0x56
   12c48:	mov	r8, #58	; 0x3a
   12c4c:	mov	ip, r3
   12c50:	tst	r0, #1
   12c54:	subne	r1, r6, #1
   12c58:	strbne	r8, [r6, #-1]
   12c5c:	moveq	r1, r6
   12c60:	sub	r6, r1, #1
   12c64:	ldr	r3, [pc, #1092]	; 130b0 <dcngettext@plt+0x1de4>
   12c68:	umull	r3, r2, r3, ip
   12c6c:	lsr	r2, r2, #3
   12c70:	add	r3, r2, r2, lsl #2
   12c74:	sub	r3, ip, r3, lsl #1
   12c78:	add	r3, r3, #48	; 0x30
   12c7c:	strb	r3, [r1, #-1]
   12c80:	mov	ip, r2
   12c84:	asrs	r0, r0, #1
   12c88:	movne	r3, #1
   12c8c:	moveq	r3, #0
   12c90:	cmp	r2, #0
   12c94:	moveq	r2, r3
   12c98:	orrne	r2, r3, #1
   12c9c:	cmp	r2, #0
   12ca0:	bne	12c50 <dcngettext@plt+0x1984>
   12ca4:	cmp	r5, #0
   12ca8:	moveq	r5, #48	; 0x30
   12cac:	cmp	r7, #0
   12cb0:	movlt	r7, lr
   12cb4:	ldr	r3, [sp, #44]	; 0x2c
   12cb8:	cmp	r3, #0
   12cbc:	bne	13aa8 <dcngettext@plt+0x27dc>
   12cc0:	cmp	r9, #0
   12cc4:	bne	13b8c <dcngettext@plt+0x28c0>
   12cc8:	add	r8, sp, #86	; 0x56
   12ccc:	sub	r3, r8, r6
   12cd0:	str	r3, [sp, #44]	; 0x2c
   12cd4:	subs	r9, r5, #45	; 0x2d
   12cd8:	movne	r9, #1
   12cdc:	b	13b10 <dcngettext@plt+0x2844>
   12ce0:	ldr	r0, [pc, #972]	; 130b4 <dcngettext@plt+0x1de8>
   12ce4:	cmp	lr, #2
   12ce8:	moveq	r0, #99	; 0x63
   12cec:	cmp	lr, r7
   12cf0:	movge	r1, #0
   12cf4:	movlt	r1, #1
   12cf8:	cmp	r3, r0
   12cfc:	orrhi	r1, r1, #1
   12d00:	b	12ba0 <dcngettext@plt+0x18d4>
   12d04:	ldr	r3, [sp, #24]
   12d08:	cmp	r3, #0
   12d0c:	beq	12d48 <dcngettext@plt+0x1a7c>
   12d10:	str	r8, [sp, #68]	; 0x44
   12d14:	cmp	r8, #0
   12d18:	beq	12d48 <dcngettext@plt+0x1a7c>
   12d1c:	mov	r3, #0
   12d20:	str	r3, [sp, #60]	; 0x3c
   12d24:	ldr	r1, [sp, #24]
   12d28:	mov	r0, #32
   12d2c:	bl	11254 <fputc@plt>
   12d30:	ldr	r3, [sp, #60]	; 0x3c
   12d34:	add	r3, r3, #1
   12d38:	str	r3, [sp, #60]	; 0x3c
   12d3c:	ldr	r2, [sp, #68]	; 0x44
   12d40:	cmp	r3, r2
   12d44:	bne	12d24 <dcngettext@plt+0x1a58>
   12d48:	add	fp, fp, r8
   12d4c:	sub	r7, r7, r8
   12d50:	b	13ae8 <dcngettext@plt+0x281c>
   12d54:	mov	r3, #34	; 0x22
   12d58:	ldr	r2, [sp, #36]	; 0x24
   12d5c:	str	r3, [r2]
   12d60:	b	121f0 <dcngettext@plt+0xf24>
   12d64:	mov	r3, #34	; 0x22
   12d68:	ldr	r2, [sp, #36]	; 0x24
   12d6c:	str	r3, [r2]
   12d70:	b	121f0 <dcngettext@plt+0xf24>
   12d74:	cmp	r7, #0
   12d78:	beq	12d98 <dcngettext@plt+0x1acc>
   12d7c:	mov	r5, #0
   12d80:	ldr	r1, [sp, #24]
   12d84:	mov	r0, #48	; 0x30
   12d88:	bl	11254 <fputc@plt>
   12d8c:	add	r5, r5, #1
   12d90:	cmp	r7, r5
   12d94:	bne	12d80 <dcngettext@plt+0x1ab4>
   12d98:	ldr	r3, [sp, #32]
   12d9c:	cmp	r3, #0
   12da0:	beq	12dbc <dcngettext@plt+0x1af0>
   12da4:	mov	r2, r8
   12da8:	mov	r1, r6
   12dac:	ldr	r0, [sp, #24]
   12db0:	bl	12084 <dcngettext@plt+0xdb8>
   12db4:	add	fp, fp, r9
   12db8:	b	121ac <dcngettext@plt+0xee0>
   12dbc:	ldr	r3, [sp, #24]
   12dc0:	mov	r2, #1
   12dc4:	mov	r1, r8
   12dc8:	mov	r0, r6
   12dcc:	bl	11098 <fwrite@plt>
   12dd0:	b	12db4 <dcngettext@plt+0x1ae8>
   12dd4:	cmp	r2, #0
   12dd8:	bne	12730 <dcngettext@plt+0x1464>
   12ddc:	lsr	r3, r7, #31
   12de0:	cmp	r5, #0
   12de4:	movne	r3, #0
   12de8:	andeq	r3, r3, #1
   12dec:	cmp	r3, #0
   12df0:	bne	1293c <dcngettext@plt+0x1670>
   12df4:	sub	r8, r7, #6
   12df8:	bic	r8, r8, r8, asr #31
   12dfc:	ldr	r3, [pc, #672]	; 130a4 <dcngettext@plt+0x1dd8>
   12e00:	str	r3, [sp, #44]	; 0x2c
   12e04:	b	1264c <dcngettext@plt+0x1380>
   12e08:	cmp	r2, #69	; 0x45
   12e0c:	beq	12730 <dcngettext@plt+0x1464>
   12e10:	ldr	r3, [sp, #28]
   12e14:	ldr	r3, [r3, #8]
   12e18:	mov	lr, #2
   12e1c:	b	12c0c <dcngettext@plt+0x1940>
   12e20:	cmp	r2, #69	; 0x45
   12e24:	beq	12730 <dcngettext@plt+0x1464>
   12e28:	ldr	r3, [sp, #40]	; 0x28
   12e2c:	mov	lr, #2
   12e30:	b	12c0c <dcngettext@plt+0x1940>
   12e34:	cmp	r2, #69	; 0x45
   12e38:	beq	12730 <dcngettext@plt+0x1464>
   12e3c:	ldr	r3, [sp, #28]
   12e40:	ldr	r3, [r3, #8]
   12e44:	b	12c00 <dcngettext@plt+0x1934>
   12e48:	cmp	r2, #69	; 0x45
   12e4c:	beq	12730 <dcngettext@plt+0x1464>
   12e50:	ldr	r3, [sp, #40]	; 0x28
   12e54:	b	12c00 <dcngettext@plt+0x1934>
   12e58:	cmp	r2, #69	; 0x45
   12e5c:	beq	12730 <dcngettext@plt+0x1464>
   12e60:	ldr	r3, [sp, #28]
   12e64:	ldr	r3, [r3, #28]
   12e68:	cmn	r3, #1
   12e6c:	movge	r1, #0
   12e70:	movlt	r1, #1
   12e74:	str	r1, [sp, #44]	; 0x2c
   12e78:	add	r3, r3, #1
   12e7c:	mov	r0, #0
   12e80:	mov	r9, r0
   12e84:	mov	lr, #3
   12e88:	b	12c1c <dcngettext@plt+0x1950>
   12e8c:	cmp	r2, #69	; 0x45
   12e90:	beq	12730 <dcngettext@plt+0x1464>
   12e94:	ldr	r3, [sp, #28]
   12e98:	ldr	r3, [r3, #4]
   12e9c:	mov	lr, #2
   12ea0:	b	12c0c <dcngettext@plt+0x1940>
   12ea4:	cmp	r2, #69	; 0x45
   12ea8:	beq	12730 <dcngettext@plt+0x1464>
   12eac:	ldr	r3, [sp, #28]
   12eb0:	ldr	r3, [r3, #16]
   12eb4:	cmn	r3, #1
   12eb8:	movge	r1, #0
   12ebc:	movlt	r1, #1
   12ec0:	str	r1, [sp, #44]	; 0x2c
   12ec4:	add	r3, r3, #1
   12ec8:	mov	r0, #0
   12ecc:	mov	r9, r0
   12ed0:	mov	lr, #2
   12ed4:	b	12c1c <dcngettext@plt+0x1950>
   12ed8:	cmp	r2, #69	; 0x45
   12edc:	beq	12730 <dcngettext@plt+0x1464>
   12ee0:	cmp	r7, #0
   12ee4:	movle	r7, #9
   12ee8:	ldr	r3, [sp, #1168]	; 0x490
   12eec:	mov	r6, #9
   12ef0:	b	12f04 <dcngettext@plt+0x1c38>
   12ef4:	sub	r6, r6, #1
   12ef8:	smull	r1, r2, sl, r3
   12efc:	asr	r3, r3, #31
   12f00:	rsb	r3, r3, r2, asr #2
   12f04:	cmp	r6, r7
   12f08:	bgt	12ef4 <dcngettext@plt+0x1c28>
   12f0c:	cmp	r6, #1
   12f10:	ble	12f2c <dcngettext@plt+0x1c60>
   12f14:	smull	r2, r1, sl, r3
   12f18:	asr	r2, r3, #31
   12f1c:	rsb	r2, r2, r1, asr #2
   12f20:	add	r2, r2, r2, lsl #2
   12f24:	cmp	r3, r2, lsl #1
   12f28:	beq	12ef4 <dcngettext@plt+0x1c28>
   12f2c:	cmp	r6, #0
   12f30:	ble	12f64 <dcngettext@plt+0x1c98>
   12f34:	add	r1, sp, #72	; 0x48
   12f38:	add	r0, r1, r6
   12f3c:	smull	r2, ip, sl, r3
   12f40:	asr	r2, r3, #31
   12f44:	rsb	r2, r2, ip, asr #2
   12f48:	add	ip, r2, r2, lsl #2
   12f4c:	sub	r3, r3, ip, lsl #1
   12f50:	add	r3, r3, #48	; 0x30
   12f54:	strb	r3, [r0, #-1]!
   12f58:	mov	r3, r2
   12f5c:	cmp	r0, r1
   12f60:	bne	12f3c <dcngettext@plt+0x1c70>
   12f64:	cmp	r5, #0
   12f68:	moveq	r5, #48	; 0x30
   12f6c:	mov	r1, r6
   12f70:	cmp	r6, #0
   12f74:	movcs	r8, r6
   12f78:	movcc	r8, #0
   12f7c:	mvn	r3, fp
   12f80:	cmp	r8, r3
   12f84:	bcs	13014 <dcngettext@plt+0x1d48>
   12f88:	ldr	r3, [sp, #24]
   12f8c:	cmp	r3, #0
   12f90:	beq	12fb0 <dcngettext@plt+0x1ce4>
   12f94:	ldr	r2, [sp, #32]
   12f98:	cmp	r2, #0
   12f9c:	beq	13024 <dcngettext@plt+0x1d58>
   12fa0:	mov	r2, r6
   12fa4:	add	r1, sp, #72	; 0x48
   12fa8:	mov	r0, r3
   12fac:	bl	12084 <dcngettext@plt+0xdb8>
   12fb0:	add	r8, r8, fp
   12fb4:	cmp	r5, #45	; 0x2d
   12fb8:	beq	13b98 <dcngettext@plt+0x28cc>
   12fbc:	subs	r6, r7, r6
   12fc0:	bmi	13b98 <dcngettext@plt+0x28cc>
   12fc4:	mov	r7, r6
   12fc8:	cmp	r6, #0
   12fcc:	movcs	fp, r6
   12fd0:	movcc	fp, #0
   12fd4:	mvn	r3, r8
   12fd8:	cmp	fp, r3
   12fdc:	bcs	13038 <dcngettext@plt+0x1d6c>
   12fe0:	ldr	r3, [sp, #24]
   12fe4:	cmp	r6, #0
   12fe8:	cmpne	r3, #0
   12fec:	beq	1300c <dcngettext@plt+0x1d40>
   12ff0:	cmp	r5, #43	; 0x2b
   12ff4:	cmpne	r5, #48	; 0x30
   12ff8:	beq	13048 <dcngettext@plt+0x1d7c>
   12ffc:	cmp	r6, #0
   13000:	movne	r5, #0
   13004:	movne	r6, #32
   13008:	bne	13074 <dcngettext@plt+0x1da8>
   1300c:	add	fp, r8, fp
   13010:	b	121ac <dcngettext@plt+0xee0>
   13014:	mov	r3, #34	; 0x22
   13018:	ldr	r2, [sp, #36]	; 0x24
   1301c:	str	r3, [r2]
   13020:	b	121f0 <dcngettext@plt+0xf24>
   13024:	ldr	r3, [sp, #24]
   13028:	mov	r2, #1
   1302c:	add	r0, sp, #72	; 0x48
   13030:	bl	11098 <fwrite@plt>
   13034:	b	12fb0 <dcngettext@plt+0x1ce4>
   13038:	mov	r3, #34	; 0x22
   1303c:	ldr	r2, [sp, #36]	; 0x24
   13040:	str	r3, [r2]
   13044:	b	121f0 <dcngettext@plt+0xf24>
   13048:	cmp	r6, #0
   1304c:	beq	1300c <dcngettext@plt+0x1d40>
   13050:	mov	r5, #0
   13054:	mov	r6, #48	; 0x30
   13058:	ldr	r1, [sp, #24]
   1305c:	mov	r0, r6
   13060:	bl	11254 <fputc@plt>
   13064:	add	r5, r5, #1
   13068:	cmp	r7, r5
   1306c:	bne	13058 <dcngettext@plt+0x1d8c>
   13070:	b	1300c <dcngettext@plt+0x1d40>
   13074:	ldr	r1, [sp, #24]
   13078:	mov	r0, r6
   1307c:	bl	11254 <fputc@plt>
   13080:	add	r5, r5, #1
   13084:	cmp	r7, r5
   13088:	bne	13074 <dcngettext@plt+0x1da8>
   1308c:	b	1300c <dcngettext@plt+0x1d40>
   13090:	andeq	r7, r1, r0, lsr #14
   13094:	strbtvs	r6, [r6], -r7, ror #12
   13098:	stcleq	12, cr12, [ip], {204}	; 0xcc
   1309c:	andeq	r7, r1, r0, lsr #20
   130a0:	andeq	r7, r1, ip, lsl #20
   130a4:	andeq	r7, r1, r4, lsl sl
   130a8:	andeq	r0, r0, fp, ror #14
   130ac:	andeq	r7, r1, ip, lsr #20
   130b0:	stclgt	12, cr12, [ip], {205}	; 0xcd
   130b4:	andeq	r2, r0, pc, lsl #14
   130b8:	subls	r2, r9, #-1828716544	; 0x93000000
   130bc:			; <UNDEFINED> instruction: 0xfffff894
   130c0:	mvnpl	r8, pc, lsl r5
   130c4:			; <UNDEFINED> instruction: 0x91a2b3c5
   130c8:	stmhi	r8, {r0, r3, r7, fp, pc}
   130cc:	andeq	r2, r0, r0, lsl r7
   130d0:	mvn	r3, r7
   130d4:	lsr	r3, r3, #31
   130d8:	cmp	r5, #45	; 0x2d
   130dc:	moveq	r3, #0
   130e0:	cmp	r3, #0
   130e4:	moveq	r7, #0
   130e8:	mov	r6, r7
   130ec:	cmp	r7, #1
   130f0:	movcc	r7, #1
   130f4:	mvn	r3, fp
   130f8:	cmp	r7, r3
   130fc:	bcs	13150 <dcngettext@plt+0x1e84>
   13100:	ldr	r3, [sp, #24]
   13104:	cmp	r3, #0
   13108:	beq	13194 <dcngettext@plt+0x1ec8>
   1310c:	cmp	r6, #1
   13110:	bls	13188 <dcngettext@plt+0x1ebc>
   13114:	sub	r6, r6, #1
   13118:	cmp	r5, #43	; 0x2b
   1311c:	cmpne	r5, #48	; 0x30
   13120:	beq	13160 <dcngettext@plt+0x1e94>
   13124:	cmp	r6, #0
   13128:	movne	r5, #0
   1312c:	movne	r8, #32
   13130:	beq	13188 <dcngettext@plt+0x1ebc>
   13134:	ldr	r1, [sp, #24]
   13138:	mov	r0, r8
   1313c:	bl	11254 <fputc@plt>
   13140:	add	r5, r5, #1
   13144:	cmp	r6, r5
   13148:	bne	13134 <dcngettext@plt+0x1e68>
   1314c:	b	13188 <dcngettext@plt+0x1ebc>
   13150:	mov	r3, #34	; 0x22
   13154:	ldr	r2, [sp, #36]	; 0x24
   13158:	str	r3, [r2]
   1315c:	b	121f0 <dcngettext@plt+0xf24>
   13160:	cmp	r6, #0
   13164:	beq	13188 <dcngettext@plt+0x1ebc>
   13168:	mov	r5, #0
   1316c:	mov	r8, #48	; 0x30
   13170:	ldr	r1, [sp, #24]
   13174:	mov	r0, r8
   13178:	bl	11254 <fputc@plt>
   1317c:	add	r5, r5, #1
   13180:	cmp	r6, r5
   13184:	bne	13170 <dcngettext@plt+0x1ea4>
   13188:	ldr	r1, [sp, #24]
   1318c:	mov	r0, #10
   13190:	bl	11254 <fputc@plt>
   13194:	add	fp, fp, r7
   13198:	b	121ac <dcngettext@plt+0xee0>
   1319c:	mov	r3, #1
   131a0:	cmp	r6, #0
   131a4:	moveq	r6, r3
   131a8:	moveq	r8, #112	; 0x70
   131ac:	movne	r8, #112	; 0x70
   131b0:	movne	r3, #0
   131b4:	strne	r3, [sp, #32]
   131b8:	b	129cc <dcngettext@plt+0x1700>
   131bc:	mov	r3, #0
   131c0:	b	131a0 <dcngettext@plt+0x1ed4>
   131c4:	ldr	r3, [sp, #28]
   131c8:	ldr	r3, [r3, #16]
   131cc:	cmp	r2, #79	; 0x4f
   131d0:	bne	131f0 <dcngettext@plt+0x1f24>
   131d4:	mov	r3, #32
   131d8:	strb	r3, [sp, #72]	; 0x48
   131dc:	mov	r3, #37	; 0x25
   131e0:	strb	r3, [sp, #73]	; 0x49
   131e4:	mov	r8, #113	; 0x71
   131e8:	mov	r6, #0
   131ec:	b	129ec <dcngettext@plt+0x1720>
   131f0:	add	r2, r3, r3, lsl #2
   131f4:	add	r3, r3, r2, lsl #1
   131f8:	asr	r3, r3, #5
   131fc:	add	r3, r3, #1
   13200:	mov	r0, #0
   13204:	mov	r9, r0
   13208:	str	r0, [sp, #44]	; 0x2c
   1320c:	mov	lr, #1
   13210:	b	12c44 <dcngettext@plt+0x1978>
   13214:	cmp	r2, #69	; 0x45
   13218:	beq	12730 <dcngettext@plt+0x1464>
   1321c:	ldr	r3, [sp, #28]
   13220:	ldr	r3, [r3]
   13224:	mov	lr, #2
   13228:	b	12c0c <dcngettext@plt+0x1940>
   1322c:	add	ip, sp, #88	; 0x58
   13230:	ldr	lr, [sp, #28]
   13234:	ldm	lr!, {r0, r1, r2, r3}
   13238:	stmia	ip!, {r0, r1, r2, r3}
   1323c:	ldm	lr!, {r0, r1, r2, r3}
   13240:	stmia	ip!, {r0, r1, r2, r3}
   13244:	ldm	lr, {r0, r1, r2}
   13248:	stm	ip, {r0, r1, r2}
   1324c:	mvn	r3, #0
   13250:	str	r3, [sp, #116]	; 0x74
   13254:	add	r1, sp, #88	; 0x58
   13258:	ldr	r0, [sp, #1164]	; 0x48c
   1325c:	bl	15edc <dcngettext@plt+0x4c10>
   13260:	ldr	r3, [sp, #116]	; 0x74
   13264:	cmp	r3, #0
   13268:	blt	132c8 <dcngettext@plt+0x1ffc>
   1326c:	lsr	r3, r0, #31
   13270:	str	r3, [sp, #44]	; 0x2c
   13274:	add	r2, sp, #85	; 0x55
   13278:	mov	r1, r0
   1327c:	smull	r3, ip, sl, r1
   13280:	asr	r3, r1, #31
   13284:	rsb	r3, r3, ip, asr #2
   13288:	mov	ip, r3
   1328c:	add	r3, r3, r3, lsl #2
   13290:	sub	r3, r1, r3, lsl #1
   13294:	mov	r1, ip
   13298:	mov	r6, r2
   1329c:	cmp	r0, #0
   132a0:	rsblt	r3, r3, #48	; 0x30
   132a4:	addge	r3, r3, #48	; 0x30
   132a8:	uxtb	r3, r3
   132ac:	strb	r3, [r2]
   132b0:	sub	r2, r2, #1
   132b4:	cmp	ip, #0
   132b8:	bne	1327c <dcngettext@plt+0x1fb0>
   132bc:	mov	r9, #0
   132c0:	mov	lr, #1
   132c4:	b	12ca4 <dcngettext@plt+0x19d8>
   132c8:	mov	r3, #75	; 0x4b
   132cc:	ldr	r2, [sp, #36]	; 0x24
   132d0:	str	r3, [r2]
   132d4:	b	121f0 <dcngettext@plt+0xf24>
   132d8:	cmp	r2, #79	; 0x4f
   132dc:	beq	12730 <dcngettext@plt+0x1464>
   132e0:	mov	r8, #88	; 0x58
   132e4:	mov	r6, #0
   132e8:	b	129cc <dcngettext@plt+0x1700>
   132ec:	subs	r3, r5, #45	; 0x2d
   132f0:	movne	r3, #1
   132f4:	cmp	r7, #0
   132f8:	movlt	r3, #0
   132fc:	cmp	r3, #0
   13300:	moveq	r7, #0
   13304:	mov	r6, r7
   13308:	cmp	r7, #1
   1330c:	movcc	r7, #1
   13310:	mvn	r3, fp
   13314:	cmp	r7, r3
   13318:	bcs	1336c <dcngettext@plt+0x20a0>
   1331c:	ldr	r3, [sp, #24]
   13320:	cmp	r3, #0
   13324:	beq	133b0 <dcngettext@plt+0x20e4>
   13328:	cmp	r6, #1
   1332c:	bls	133a4 <dcngettext@plt+0x20d8>
   13330:	sub	r6, r6, #1
   13334:	cmp	r5, #43	; 0x2b
   13338:	cmpne	r5, #48	; 0x30
   1333c:	beq	1337c <dcngettext@plt+0x20b0>
   13340:	cmp	r6, #0
   13344:	movne	r5, #0
   13348:	movne	r8, #32
   1334c:	beq	133a4 <dcngettext@plt+0x20d8>
   13350:	ldr	r1, [sp, #24]
   13354:	mov	r0, r8
   13358:	bl	11254 <fputc@plt>
   1335c:	add	r5, r5, #1
   13360:	cmp	r6, r5
   13364:	bne	13350 <dcngettext@plt+0x2084>
   13368:	b	133a4 <dcngettext@plt+0x20d8>
   1336c:	mov	r3, #34	; 0x22
   13370:	ldr	r2, [sp, #36]	; 0x24
   13374:	str	r3, [r2]
   13378:	b	121f0 <dcngettext@plt+0xf24>
   1337c:	cmp	r6, #0
   13380:	beq	133a4 <dcngettext@plt+0x20d8>
   13384:	mov	r5, #0
   13388:	mov	r8, #48	; 0x30
   1338c:	ldr	r1, [sp, #24]
   13390:	mov	r0, r8
   13394:	bl	11254 <fputc@plt>
   13398:	add	r5, r5, #1
   1339c:	cmp	r6, r5
   133a0:	bne	1338c <dcngettext@plt+0x20c0>
   133a4:	ldr	r1, [sp, #24]
   133a8:	mov	r0, #9
   133ac:	bl	11254 <fputc@plt>
   133b0:	add	fp, fp, r7
   133b4:	b	121ac <dcngettext@plt+0xee0>
   133b8:	ldr	r3, [sp, #28]
   133bc:	ldr	r3, [r3, #24]
   133c0:	add	r3, r3, #6
   133c4:	ldr	r1, [pc, #-788]	; 130b8 <dcngettext@plt+0x1dec>
   133c8:	smull	r0, r1, r1, r3
   133cc:	add	r0, r1, r3
   133d0:	asr	r1, r3, #31
   133d4:	rsb	r1, r1, r0, asr #2
   133d8:	rsb	r1, r1, r1, lsl #3
   133dc:	sub	r3, r3, r1
   133e0:	add	r3, r3, #1
   133e4:	mov	lr, #1
   133e8:	b	12c0c <dcngettext@plt+0x1940>
   133ec:	cmp	r2, #69	; 0x45
   133f0:	beq	12730 <dcngettext@plt+0x1464>
   133f4:	ldr	r1, [sp, #28]
   133f8:	ldr	r3, [r1, #28]
   133fc:	ldr	r1, [r1, #24]
   13400:	sub	r3, r3, r1
   13404:	add	r3, r3, #7
   13408:	ldr	r1, [pc, #-856]	; 130b8 <dcngettext@plt+0x1dec>
   1340c:	smull	r0, r1, r1, r3
   13410:	add	r1, r1, r3
   13414:	asr	r3, r3, #31
   13418:	rsb	r3, r3, r1, asr #2
   1341c:	mov	lr, #2
   13420:	b	12c0c <dcngettext@plt+0x1940>
   13424:	cmp	r2, #69	; 0x45
   13428:	beq	12730 <dcngettext@plt+0x1464>
   1342c:	ldr	r0, [sp, #28]
   13430:	mov	r3, r0
   13434:	ldr	r6, [r0, #20]
   13438:	cmp	r6, #0
   1343c:	movlt	r3, #300	; 0x12c
   13440:	mvnge	r3, #99	; 0x63
   13444:	add	r3, r3, r6
   13448:	ldr	lr, [r0, #28]
   1344c:	ldr	r0, [r0, #24]
   13450:	str	r0, [sp, #44]	; 0x2c
   13454:	sub	r0, lr, r0
   13458:	add	r0, r0, #380	; 0x17c
   1345c:	add	r0, r0, #2
   13460:	ldr	ip, [pc, #-944]	; 130b8 <dcngettext@plt+0x1dec>
   13464:	smull	r9, ip, ip, r0
   13468:	add	r9, ip, r0
   1346c:	asr	ip, r0, #31
   13470:	rsb	ip, ip, r9, asr #2
   13474:	rsb	ip, ip, ip, lsl #3
   13478:	sub	ip, r0, ip
   1347c:	sub	r9, lr, ip
   13480:	adds	r9, r9, #3
   13484:	bmi	135a8 <dcngettext@plt+0x22dc>
   13488:	tst	r3, #3
   1348c:	movne	r0, #0
   13490:	bne	134dc <dcngettext@plt+0x2210>
   13494:	ldr	r0, [pc, #-988]	; 130c0 <dcngettext@plt+0x1df4>
   13498:	smull	ip, r0, r0, r3
   1349c:	asr	ip, r3, #31
   134a0:	rsb	r0, ip, r0, asr #5
   134a4:	mov	ip, #100	; 0x64
   134a8:	mul	r0, ip, r0
   134ac:	cmp	r3, r0
   134b0:	movne	r0, #1
   134b4:	bne	134dc <dcngettext@plt+0x2210>
   134b8:	ldr	r0, [pc, #-1024]	; 130c0 <dcngettext@plt+0x1df4>
   134bc:	smull	ip, r0, r0, r3
   134c0:	asr	ip, r3, #31
   134c4:	rsb	ip, ip, r0, asr #7
   134c8:	mov	r0, #400	; 0x190
   134cc:	mul	r0, r0, ip
   134d0:	cmp	r3, r0
   134d4:	movne	r0, #0
   134d8:	moveq	r0, #1
   134dc:	add	r3, r0, #364	; 0x16c
   134e0:	add	r3, r3, #1
   134e4:	sub	r3, lr, r3
   134e8:	ldr	r0, [sp, #44]	; 0x2c
   134ec:	sub	r0, r3, r0
   134f0:	add	r0, r0, #380	; 0x17c
   134f4:	add	r0, r0, #2
   134f8:	ldr	ip, [pc, #-1096]	; 130b8 <dcngettext@plt+0x1dec>
   134fc:	smull	ip, lr, ip, r0
   13500:	add	lr, lr, r0
   13504:	asr	ip, r0, #31
   13508:	rsb	ip, ip, lr, asr #2
   1350c:	rsb	ip, ip, ip, lsl #3
   13510:	sub	ip, r0, ip
   13514:	sub	r3, r3, ip
   13518:	add	r3, r3, #3
   1351c:	cmp	r3, #0
   13520:	movge	r9, r3
   13524:	mvn	lr, r3
   13528:	lsr	lr, lr, #31
   1352c:	cmp	r1, #71	; 0x47
   13530:	beq	13648 <dcngettext@plt+0x237c>
   13534:	cmp	r1, #103	; 0x67
   13538:	bne	13674 <dcngettext@plt+0x23a8>
   1353c:	ldr	r3, [pc, #-1156]	; 130c0 <dcngettext@plt+0x1df4>
   13540:	smull	r1, r3, r3, r6
   13544:	asr	r1, r6, #31
   13548:	rsb	r1, r1, r3, asr #5
   1354c:	mov	r0, #100	; 0x64
   13550:	mul	r1, r0, r1
   13554:	sub	r1, r6, r1
   13558:	add	r1, r1, lr
   1355c:	ldr	r3, [pc, #-1188]	; 130c0 <dcngettext@plt+0x1df4>
   13560:	smull	r3, ip, r3, r1
   13564:	asr	r3, r1, #31
   13568:	rsb	r3, r3, ip, asr #5
   1356c:	mul	r3, r0, r3
   13570:	subs	r3, r1, r3
   13574:	movpl	r1, #0
   13578:	strpl	r1, [sp, #44]	; 0x2c
   1357c:	movpl	lr, #2
   13580:	bpl	12b88 <dcngettext@plt+0x18bc>
   13584:	ldr	r1, [pc, #-1232]	; 130bc <dcngettext@plt+0x1df0>
   13588:	sub	r1, r1, lr
   1358c:	cmp	r6, r1
   13590:	rsblt	r3, r3, #0
   13594:	addge	r3, r3, #100	; 0x64
   13598:	mov	r1, #0
   1359c:	str	r1, [sp, #44]	; 0x2c
   135a0:	mov	lr, #2
   135a4:	b	12b88 <dcngettext@plt+0x18bc>
   135a8:	sub	r3, r3, #1
   135ac:	tst	r3, #3
   135b0:	movne	r3, #0
   135b4:	bne	13600 <dcngettext@plt+0x2334>
   135b8:	ldr	r0, [pc, #-1280]	; 130c0 <dcngettext@plt+0x1df4>
   135bc:	smull	ip, r0, r0, r3
   135c0:	asr	ip, r3, #31
   135c4:	rsb	r0, ip, r0, asr #5
   135c8:	mov	ip, #100	; 0x64
   135cc:	mul	r0, ip, r0
   135d0:	cmp	r3, r0
   135d4:	movne	r3, #1
   135d8:	bne	13600 <dcngettext@plt+0x2334>
   135dc:	ldr	r0, [pc, #-1316]	; 130c0 <dcngettext@plt+0x1df4>
   135e0:	smull	ip, r0, r0, r3
   135e4:	asr	ip, r3, #31
   135e8:	rsb	ip, ip, r0, asr #7
   135ec:	mov	r0, #400	; 0x190
   135f0:	mul	r0, r0, ip
   135f4:	cmp	r3, r0
   135f8:	movne	r3, #0
   135fc:	moveq	r3, #1
   13600:	add	r3, r3, #364	; 0x16c
   13604:	add	r3, r3, #1
   13608:	add	r3, r3, lr
   1360c:	ldr	r0, [sp, #44]	; 0x2c
   13610:	sub	r0, r3, r0
   13614:	add	r0, r0, #380	; 0x17c
   13618:	add	r0, r0, #2
   1361c:	ldr	ip, [pc, #-1388]	; 130b8 <dcngettext@plt+0x1dec>
   13620:	smull	ip, lr, ip, r0
   13624:	add	lr, lr, r0
   13628:	asr	ip, r0, #31
   1362c:	rsb	ip, ip, lr, asr #2
   13630:	rsb	ip, ip, ip, lsl #3
   13634:	sub	ip, r0, ip
   13638:	sub	ip, r3, ip
   1363c:	add	r9, ip, #3
   13640:	mvn	lr, #0
   13644:	b	1352c <dcngettext@plt+0x2260>
   13648:	ldr	r3, [pc, #-1428]	; 130bc <dcngettext@plt+0x1df0>
   1364c:	sub	r3, r3, lr
   13650:	cmp	r6, r3
   13654:	movge	r3, #0
   13658:	movlt	r3, #1
   1365c:	str	r3, [sp, #44]	; 0x2c
   13660:	add	r3, r6, #1888	; 0x760
   13664:	add	r3, r3, #12
   13668:	add	r3, r3, lr
   1366c:	mov	lr, #4
   13670:	b	12b88 <dcngettext@plt+0x18bc>
   13674:	ldr	r3, [pc, #-1476]	; 130b8 <dcngettext@plt+0x1dec>
   13678:	smull	r1, r3, r3, r9
   1367c:	add	r1, r3, r9
   13680:	asr	r3, r9, #31
   13684:	rsb	r3, r3, r1, asr #2
   13688:	add	r3, r3, #1
   1368c:	mov	lr, #2
   13690:	b	12c0c <dcngettext@plt+0x1940>
   13694:	cmp	r2, #69	; 0x45
   13698:	beq	12730 <dcngettext@plt+0x1464>
   1369c:	ldr	ip, [sp, #28]
   136a0:	ldr	r3, [ip, #24]
   136a4:	add	r3, r3, #6
   136a8:	ldr	r1, [pc, #-1528]	; 130b8 <dcngettext@plt+0x1dec>
   136ac:	smull	r0, r1, r1, r3
   136b0:	add	r0, r1, r3
   136b4:	asr	r1, r3, #31
   136b8:	rsb	r1, r1, r0, asr #2
   136bc:	rsb	r1, r1, r1, lsl #3
   136c0:	sub	r1, r3, r1
   136c4:	ldr	r3, [ip, #28]
   136c8:	sub	r3, r3, r1
   136cc:	add	r3, r3, #7
   136d0:	ldr	r1, [pc, #-1568]	; 130b8 <dcngettext@plt+0x1dec>
   136d4:	smull	r0, r1, r1, r3
   136d8:	add	r1, r1, r3
   136dc:	asr	r3, r3, #31
   136e0:	rsb	r3, r3, r1, asr #2
   136e4:	mov	lr, #2
   136e8:	b	12c0c <dcngettext@plt+0x1940>
   136ec:	cmp	r2, #69	; 0x45
   136f0:	beq	12730 <dcngettext@plt+0x1464>
   136f4:	ldr	r3, [sp, #28]
   136f8:	ldr	r3, [r3, #24]
   136fc:	mov	lr, #1
   13700:	b	12c0c <dcngettext@plt+0x1940>
   13704:	cmp	r2, #69	; 0x45
   13708:	beq	13a98 <dcngettext@plt+0x27cc>
   1370c:	cmp	r2, #79	; 0x4f
   13710:	beq	12730 <dcngettext@plt+0x1464>
   13714:	ldr	r3, [sp, #28]
   13718:	ldr	r3, [r3, #20]
   1371c:	ldr	r1, [pc, #-1640]	; 130bc <dcngettext@plt+0x1df0>
   13720:	cmp	r3, r1
   13724:	movge	r1, #0
   13728:	movlt	r1, #1
   1372c:	str	r1, [sp, #44]	; 0x2c
   13730:	add	r3, r3, #1888	; 0x760
   13734:	add	r3, r3, #12
   13738:	mov	lr, #4
   1373c:	b	12b88 <dcngettext@plt+0x18bc>
   13740:	cmp	r2, #69	; 0x45
   13744:	beq	13aa0 <dcngettext@plt+0x27d4>
   13748:	ldr	r3, [sp, #28]
   1374c:	ldr	r1, [r3, #20]
   13750:	ldr	r3, [pc, #-1688]	; 130c0 <dcngettext@plt+0x1df4>
   13754:	smull	r3, r0, r3, r1
   13758:	asr	r3, r1, #31
   1375c:	rsb	r3, r3, r0, asr #5
   13760:	mov	r0, #100	; 0x64
   13764:	mul	r3, r0, r3
   13768:	subs	r3, r1, r3
   1376c:	bmi	13780 <dcngettext@plt+0x24b4>
   13770:	mov	r1, #0
   13774:	str	r1, [sp, #44]	; 0x2c
   13778:	mov	lr, #2
   1377c:	b	12b88 <dcngettext@plt+0x18bc>
   13780:	sub	r0, r0, #2000	; 0x7d0
   13784:	cmp	r1, r0
   13788:	rsblt	r3, r3, #0
   1378c:	addge	r3, r3, #100	; 0x64
   13790:	b	13770 <dcngettext@plt+0x24a4>
   13794:	ldr	r3, [sp, #32]
   13798:	cmp	r6, #0
   1379c:	movne	r3, #0
   137a0:	str	r3, [sp, #32]
   137a4:	ldr	r0, [sp, #52]	; 0x34
   137a8:	bl	1117c <strlen@plt>
   137ac:	mov	r8, r0
   137b0:	subs	r3, r5, #45	; 0x2d
   137b4:	movne	r3, #1
   137b8:	cmp	r7, #0
   137bc:	movlt	r3, #0
   137c0:	cmp	r3, #0
   137c4:	moveq	r7, #0
   137c8:	cmp	r7, r0
   137cc:	movcs	r9, r7
   137d0:	movcc	r9, r0
   137d4:	mvn	r2, fp
   137d8:	cmp	r9, r2
   137dc:	bcs	1382c <dcngettext@plt+0x2560>
   137e0:	ldr	r2, [sp, #24]
   137e4:	cmp	r2, #0
   137e8:	beq	13898 <dcngettext@plt+0x25cc>
   137ec:	cmp	r7, r0
   137f0:	bls	13860 <dcngettext@plt+0x2594>
   137f4:	sub	r7, r7, r0
   137f8:	cmp	r5, #43	; 0x2b
   137fc:	cmpne	r5, #48	; 0x30
   13800:	beq	1383c <dcngettext@plt+0x2570>
   13804:	cmp	r7, #0
   13808:	movne	r5, #0
   1380c:	beq	13860 <dcngettext@plt+0x2594>
   13810:	ldr	r1, [sp, #24]
   13814:	mov	r0, #32
   13818:	bl	11254 <fputc@plt>
   1381c:	add	r5, r5, #1
   13820:	cmp	r7, r5
   13824:	bne	13810 <dcngettext@plt+0x2544>
   13828:	b	13860 <dcngettext@plt+0x2594>
   1382c:	mov	r3, #34	; 0x22
   13830:	ldr	r2, [sp, #36]	; 0x24
   13834:	str	r3, [r2]
   13838:	b	121f0 <dcngettext@plt+0xf24>
   1383c:	cmp	r7, #0
   13840:	beq	13860 <dcngettext@plt+0x2594>
   13844:	mov	r5, #0
   13848:	ldr	r1, [sp, #24]
   1384c:	mov	r0, #48	; 0x30
   13850:	bl	11254 <fputc@plt>
   13854:	add	r5, r5, #1
   13858:	cmp	r7, r5
   1385c:	bne	13848 <dcngettext@plt+0x257c>
   13860:	cmp	r6, #0
   13864:	bne	13888 <dcngettext@plt+0x25bc>
   13868:	ldr	r3, [sp, #32]
   1386c:	cmp	r3, #0
   13870:	beq	138a0 <dcngettext@plt+0x25d4>
   13874:	mov	r2, r8
   13878:	ldr	r1, [sp, #52]	; 0x34
   1387c:	ldr	r0, [sp, #24]
   13880:	bl	12084 <dcngettext@plt+0xdb8>
   13884:	b	13898 <dcngettext@plt+0x25cc>
   13888:	mov	r2, r8
   1388c:	ldr	r1, [sp, #52]	; 0x34
   13890:	ldr	r0, [sp, #24]
   13894:	bl	12044 <dcngettext@plt+0xd78>
   13898:	add	fp, fp, r9
   1389c:	b	121ac <dcngettext@plt+0xee0>
   138a0:	ldr	r3, [sp, #24]
   138a4:	mov	r2, #1
   138a8:	mov	r1, r8
   138ac:	ldr	r0, [sp, #52]	; 0x34
   138b0:	bl	11098 <fwrite@plt>
   138b4:	b	13898 <dcngettext@plt+0x25cc>
   138b8:	add	r1, r4, #2
   138bc:	mov	lr, #1
   138c0:	add	lr, lr, #1
   138c4:	mov	r0, r1
   138c8:	ldrb	r3, [r1], #1
   138cc:	cmp	r3, #58	; 0x3a
   138d0:	bne	12710 <dcngettext@plt+0x1444>
   138d4:	b	138c0 <dcngettext@plt+0x25f4>
   138d8:	mov	lr, #0
   138dc:	ldr	r1, [sp, #28]
   138e0:	ldr	r3, [r1, #32]
   138e4:	cmp	r3, #0
   138e8:	blt	121ac <dcngettext@plt+0xee0>
   138ec:	mov	r3, r1
   138f0:	ldr	r1, [r1, #36]	; 0x24
   138f4:	cmp	r1, #0
   138f8:	movlt	r3, #1
   138fc:	blt	1391c <dcngettext@plt+0x2650>
   13900:	movne	r3, #0
   13904:	bne	1391c <dcngettext@plt+0x2650>
   13908:	ldr	r3, [sp, #52]	; 0x34
   1390c:	ldrb	r3, [r3]
   13910:	cmp	r3, #45	; 0x2d
   13914:	movne	r3, #0
   13918:	moveq	r3, #1
   1391c:	str	r3, [sp, #44]	; 0x2c
   13920:	ldr	r3, [pc, #-2148]	; 130c4 <dcngettext@plt+0x1df8>
   13924:	smull	r0, r3, r3, r1
   13928:	add	r3, r3, r1
   1392c:	asr	r0, r1, #31
   13930:	rsb	r6, r0, r3, asr #11
   13934:	ldr	r3, [pc, #-2164]	; 130c8 <dcngettext@plt+0x1dfc>
   13938:	smull	ip, r3, r3, r1
   1393c:	add	r3, r3, r1
   13940:	rsb	r3, r0, r3, asr #5
   13944:	ldr	r0, [pc, #-2180]	; 130c8 <dcngettext@plt+0x1dfc>
   13948:	smull	ip, r0, r0, r3
   1394c:	add	r0, r0, r3
   13950:	asr	ip, r3, #31
   13954:	rsb	r0, ip, r0, asr #5
   13958:	rsb	r0, r0, r0, lsl #4
   1395c:	sub	r0, r3, r0, lsl #2
   13960:	rsb	r3, r3, r3, lsl #4
   13964:	sub	r3, r1, r3, lsl #2
   13968:	cmp	lr, #3
   1396c:	ldrls	pc, [pc, lr, lsl #2]
   13970:	b	12730 <dcngettext@plt+0x1464>
   13974:	andeq	r3, r1, r4, lsl #19
   13978:	muleq	r1, ip, r9
   1397c:			; <UNDEFINED> instruction: 0x000139b4
   13980:	ldrdeq	r3, [r1], -r8
   13984:	mov	r3, #100	; 0x64
   13988:	mla	r3, r3, r6, r0
   1398c:	mov	r0, #0
   13990:	mov	r9, #1
   13994:	mov	lr, #5
   13998:	b	12c1c <dcngettext@plt+0x1950>
   1399c:	mov	r3, #100	; 0x64
   139a0:	mla	r3, r3, r6, r0
   139a4:	mov	r0, #4
   139a8:	mov	r9, #1
   139ac:	mov	lr, #6
   139b0:	b	12c1c <dcngettext@plt+0x1950>
   139b4:	mov	r1, #100	; 0x64
   139b8:	mul	r0, r1, r0
   139bc:	ldr	r1, [pc, #-2296]	; 130cc <dcngettext@plt+0x1e00>
   139c0:	mla	r0, r1, r6, r0
   139c4:	add	r3, r0, r3
   139c8:	mov	r0, #20
   139cc:	mov	r9, #1
   139d0:	mov	lr, #9
   139d4:	b	12c1c <dcngettext@plt+0x1950>
   139d8:	cmp	r3, #0
   139dc:	bne	139b4 <dcngettext@plt+0x26e8>
   139e0:	cmp	r0, #0
   139e4:	bne	1399c <dcngettext@plt+0x26d0>
   139e8:	mov	r3, r6
   139ec:	mov	r9, #1
   139f0:	mov	lr, #3
   139f4:	b	12c1c <dcngettext@plt+0x1950>
   139f8:	mov	r3, #34	; 0x22
   139fc:	ldr	r2, [sp, #36]	; 0x24
   13a00:	str	r3, [r2]
   13a04:	b	121f0 <dcngettext@plt+0xf24>
   13a08:	cmp	r6, #0
   13a0c:	beq	13a2c <dcngettext@plt+0x2760>
   13a10:	mov	r5, #0
   13a14:	ldr	r1, [sp, #24]
   13a18:	mov	r0, #48	; 0x30
   13a1c:	bl	11254 <fputc@plt>
   13a20:	add	r5, r5, #1
   13a24:	cmp	r6, r5
   13a28:	bne	13a14 <dcngettext@plt+0x2748>
   13a2c:	ldr	r3, [sp, #32]
   13a30:	cmp	r3, #0
   13a34:	beq	13a50 <dcngettext@plt+0x2784>
   13a38:	mov	r2, r8
   13a3c:	mov	r1, r9
   13a40:	ldr	r0, [sp, #24]
   13a44:	bl	12084 <dcngettext@plt+0xdb8>
   13a48:	add	fp, fp, r7
   13a4c:	b	121ac <dcngettext@plt+0xee0>
   13a50:	ldr	r3, [sp, #24]
   13a54:	mov	r2, #1
   13a58:	mov	r1, r8
   13a5c:	mov	r0, r9
   13a60:	bl	11098 <fwrite@plt>
   13a64:	b	13a48 <dcngettext@plt+0x277c>
   13a68:	mov	fp, #0
   13a6c:	ldr	r3, [sp, #36]	; 0x24
   13a70:	ldr	r2, [sp, #56]	; 0x38
   13a74:	str	r2, [r3]
   13a78:	b	121f4 <dcngettext@plt+0xf28>
   13a7c:	mov	r8, #67	; 0x43
   13a80:	mov	r3, #32
   13a84:	strb	r3, [sp, #72]	; 0x48
   13a88:	mov	r3, #37	; 0x25
   13a8c:	strb	r3, [sp, #73]	; 0x49
   13a90:	mov	r6, #0
   13a94:	b	129ec <dcngettext@plt+0x1720>
   13a98:	mov	r8, #89	; 0x59
   13a9c:	b	13a80 <dcngettext@plt+0x27b4>
   13aa0:	mov	r8, #121	; 0x79
   13aa4:	b	13a80 <dcngettext@plt+0x27b4>
   13aa8:	mov	r3, #45	; 0x2d
   13aac:	str	r3, [sp, #64]	; 0x40
   13ab0:	add	r8, sp, #86	; 0x56
   13ab4:	sub	r3, r8, r6
   13ab8:	str	r3, [sp, #44]	; 0x2c
   13abc:	sub	r8, r7, #1
   13ac0:	sub	r8, r8, r3
   13ac4:	subs	r9, r5, #45	; 0x2d
   13ac8:	movne	r9, #1
   13acc:	cmp	r8, #0
   13ad0:	movle	r3, #0
   13ad4:	andgt	r3, r9, #1
   13ad8:	cmp	r3, #0
   13adc:	moveq	r8, #0
   13ae0:	cmp	r5, #95	; 0x5f
   13ae4:	beq	12d04 <dcngettext@plt+0x1a38>
   13ae8:	cmn	fp, #3
   13aec:	bhi	12d54 <dcngettext@plt+0x1a88>
   13af0:	ldr	r3, [sp, #24]
   13af4:	cmp	r3, #0
   13af8:	beq	13b08 <dcngettext@plt+0x283c>
   13afc:	mov	r1, r3
   13b00:	ldr	r0, [sp, #64]	; 0x40
   13b04:	bl	11254 <fputc@plt>
   13b08:	add	fp, fp, #1
   13b0c:	sub	r7, r7, #1
   13b10:	ldr	r8, [sp, #44]	; 0x2c
   13b14:	cmp	r7, #0
   13b18:	movlt	r3, #0
   13b1c:	andge	r3, r9, #1
   13b20:	cmp	r3, #0
   13b24:	moveq	r7, #0
   13b28:	cmp	r7, r8
   13b2c:	movcs	r9, r7
   13b30:	movcc	r9, r8
   13b34:	mvn	r2, fp
   13b38:	cmp	r9, r2
   13b3c:	bcs	12d64 <dcngettext@plt+0x1a98>
   13b40:	ldr	r2, [sp, #24]
   13b44:	cmp	r2, #0
   13b48:	beq	12db4 <dcngettext@plt+0x1ae8>
   13b4c:	cmp	r7, r8
   13b50:	bls	12d98 <dcngettext@plt+0x1acc>
   13b54:	sub	r7, r7, r8
   13b58:	cmp	r5, #43	; 0x2b
   13b5c:	cmpne	r5, #48	; 0x30
   13b60:	beq	12d74 <dcngettext@plt+0x1aa8>
   13b64:	cmp	r7, #0
   13b68:	movne	r5, #0
   13b6c:	beq	12d98 <dcngettext@plt+0x1acc>
   13b70:	ldr	r1, [sp, #24]
   13b74:	mov	r0, #32
   13b78:	bl	11254 <fputc@plt>
   13b7c:	add	r5, r5, #1
   13b80:	cmp	r7, r5
   13b84:	bne	13b70 <dcngettext@plt+0x28a4>
   13b88:	b	12d98 <dcngettext@plt+0x1acc>
   13b8c:	mov	r3, #43	; 0x2b
   13b90:	str	r3, [sp, #64]	; 0x40
   13b94:	b	13ab0 <dcngettext@plt+0x27e4>
   13b98:	cmn	r8, #1
   13b9c:	beq	13038 <dcngettext@plt+0x1d6c>
   13ba0:	mov	fp, #0
   13ba4:	b	1300c <dcngettext@plt+0x1d40>
   13ba8:	push	{r4, lr}
   13bac:	sub	sp, sp, #32
   13bb0:	mov	ip, #0
   13bb4:	add	lr, sp, #32
   13bb8:	strb	ip, [lr, #-1]!
   13bbc:	ldr	r4, [sp, #40]	; 0x28
   13bc0:	str	r4, [sp, #16]
   13bc4:	str	r3, [sp, #12]
   13bc8:	str	lr, [sp, #8]
   13bcc:	mvn	r3, #0
   13bd0:	str	r3, [sp, #4]
   13bd4:	str	ip, [sp]
   13bd8:	mov	r3, ip
   13bdc:	bl	120c4 <dcngettext@plt+0xdf8>
   13be0:	add	sp, sp, #32
   13be4:	pop	{r4, pc}
   13be8:	push	{r4, r5, r6, r7, lr}
   13bec:	sub	sp, sp, #12
   13bf0:	mov	r4, r0
   13bf4:	mov	r6, r2
   13bf8:	mov	r7, r3
   13bfc:	ldr	r5, [sp, #32]
   13c00:	ldr	r2, [r0, #8]
   13c04:	ldr	r3, [r0, #4]
   13c08:	cmp	r2, r3
   13c0c:	beq	13c2c <dcngettext@plt+0x2960>
   13c10:	str	r5, [sp]
   13c14:	mov	r2, r6
   13c18:	mov	r3, r7
   13c1c:	mov	r0, r4
   13c20:	bl	111f4 <fseeko64@plt>
   13c24:	add	sp, sp, #12
   13c28:	pop	{r4, r5, r6, r7, pc}
   13c2c:	ldr	r2, [r0, #20]
   13c30:	ldr	r3, [r0, #16]
   13c34:	cmp	r2, r3
   13c38:	bne	13c10 <dcngettext@plt+0x2944>
   13c3c:	ldr	r3, [r0, #36]	; 0x24
   13c40:	cmp	r3, #0
   13c44:	bne	13c10 <dcngettext@plt+0x2944>
   13c48:	bl	111d0 <fileno@plt>
   13c4c:	str	r5, [sp]
   13c50:	mov	r2, r6
   13c54:	mov	r3, r7
   13c58:	bl	110a4 <lseek64@plt>
   13c5c:	mvn	r2, #0
   13c60:	mvn	r3, #0
   13c64:	cmp	r1, r3
   13c68:	cmpeq	r0, r2
   13c6c:	beq	13c88 <dcngettext@plt+0x29bc>
   13c70:	ldr	r3, [r4]
   13c74:	bic	r3, r3, #16
   13c78:	str	r3, [r4]
   13c7c:	strd	r0, [r4, #80]	; 0x50
   13c80:	mov	r0, #0
   13c84:	b	13c24 <dcngettext@plt+0x2958>
   13c88:	mvn	r0, #0
   13c8c:	b	13c24 <dcngettext@plt+0x2958>
   13c90:	push	{r4, r5, r6, lr}
   13c94:	sub	sp, sp, #16
   13c98:	ldr	ip, [pc, #152]	; 13d38 <dcngettext@plt+0x2a6c>
   13c9c:	ldr	r4, [ip]
   13ca0:	mov	lr, #0
   13ca4:	str	lr, [ip]
   13ca8:	cmp	r0, #2
   13cac:	beq	13ccc <dcngettext@plt+0x2a00>
   13cb0:	ldr	r3, [pc, #128]	; 13d38 <dcngettext@plt+0x2a6c>
   13cb4:	str	r4, [r3]
   13cb8:	mov	r2, #0
   13cbc:	ldr	r3, [pc, #120]	; 13d3c <dcngettext@plt+0x2a70>
   13cc0:	str	r2, [r3]
   13cc4:	add	sp, sp, #16
   13cc8:	pop	{r4, r5, r6, pc}
   13ccc:	mov	r6, r3
   13cd0:	mov	r5, r2
   13cd4:	str	lr, [sp]
   13cd8:	ldr	r3, [pc, #96]	; 13d40 <dcngettext@plt+0x2a74>
   13cdc:	ldr	r2, [pc, #96]	; 13d44 <dcngettext@plt+0x2a78>
   13ce0:	bl	1114c <getopt_long@plt>
   13ce4:	cmn	r0, #1
   13ce8:	beq	13cb0 <dcngettext@plt+0x29e4>
   13cec:	cmp	r0, #104	; 0x68
   13cf0:	beq	13d28 <dcngettext@plt+0x2a5c>
   13cf4:	cmp	r0, #118	; 0x76
   13cf8:	bne	13cb0 <dcngettext@plt+0x29e4>
   13cfc:	add	r3, sp, #40	; 0x28
   13d00:	str	r3, [sp, #12]
   13d04:	ldr	r2, [pc, #60]	; 13d48 <dcngettext@plt+0x2a7c>
   13d08:	ldr	r0, [r2]
   13d0c:	str	r3, [sp]
   13d10:	ldr	r3, [sp, #32]
   13d14:	mov	r2, r6
   13d18:	mov	r1, r5
   13d1c:	bl	1643c <dcngettext@plt+0x5170>
   13d20:	mov	r0, #0
   13d24:	bl	11170 <exit@plt>
   13d28:	mov	r0, #0
   13d2c:	ldr	r3, [sp, #36]	; 0x24
   13d30:	blx	r3
   13d34:	b	13cb0 <dcngettext@plt+0x29e4>
   13d38:	muleq	r2, r0, r1
   13d3c:	andeq	r8, r2, r0, lsl #3
   13d40:	andeq	r7, r1, r8, lsr sl
   13d44:	andeq	r7, r1, r8, ror #20
   13d48:	andeq	r8, r2, ip, lsl #3
   13d4c:	push	{r4, r5, r6, lr}
   13d50:	sub	sp, sp, #16
   13d54:	mov	r5, r2
   13d58:	mov	r6, r3
   13d5c:	ldr	r3, [pc, #160]	; 13e04 <dcngettext@plt+0x2b38>
   13d60:	ldr	r4, [r3]
   13d64:	mov	r2, #1
   13d68:	str	r2, [r3]
   13d6c:	mov	r3, #0
   13d70:	str	r3, [sp]
   13d74:	ldr	r3, [pc, #140]	; 13e08 <dcngettext@plt+0x2b3c>
   13d78:	ldr	ip, [pc, #140]	; 13e0c <dcngettext@plt+0x2b40>
   13d7c:	ldr	r2, [pc, #140]	; 13e10 <dcngettext@plt+0x2b44>
   13d80:	ldrb	lr, [sp, #36]	; 0x24
   13d84:	cmp	lr, #0
   13d88:	moveq	r2, ip
   13d8c:	bl	1114c <getopt_long@plt>
   13d90:	cmn	r0, #1
   13d94:	beq	13dc8 <dcngettext@plt+0x2afc>
   13d98:	cmp	r0, #104	; 0x68
   13d9c:	beq	13dbc <dcngettext@plt+0x2af0>
   13da0:	cmp	r0, #118	; 0x76
   13da4:	beq	13dd8 <dcngettext@plt+0x2b0c>
   13da8:	ldr	r3, [pc, #100]	; 13e14 <dcngettext@plt+0x2b48>
   13dac:	ldr	r0, [r3]
   13db0:	ldr	r3, [sp, #40]	; 0x28
   13db4:	blx	r3
   13db8:	b	13dc8 <dcngettext@plt+0x2afc>
   13dbc:	mov	r0, #0
   13dc0:	ldr	r3, [sp, #40]	; 0x28
   13dc4:	blx	r3
   13dc8:	ldr	r3, [pc, #52]	; 13e04 <dcngettext@plt+0x2b38>
   13dcc:	str	r4, [r3]
   13dd0:	add	sp, sp, #16
   13dd4:	pop	{r4, r5, r6, pc}
   13dd8:	add	r3, sp, #44	; 0x2c
   13ddc:	str	r3, [sp, #12]
   13de0:	ldr	r2, [pc, #48]	; 13e18 <dcngettext@plt+0x2b4c>
   13de4:	ldr	r0, [r2]
   13de8:	str	r3, [sp]
   13dec:	ldr	r3, [sp, #32]
   13df0:	mov	r2, r6
   13df4:	mov	r1, r5
   13df8:	bl	1643c <dcngettext@plt+0x5170>
   13dfc:	mov	r0, #0
   13e00:	bl	11170 <exit@plt>
   13e04:	muleq	r2, r0, r1
   13e08:	andeq	r7, r1, r8, lsr sl
   13e0c:	andeq	r7, r1, r8, ror #20
   13e10:	andeq	r7, r1, r0, lsr #14
   13e14:	andeq	r8, r2, r4, lsr r1
   13e18:	andeq	r8, r2, ip, lsl #3
   13e1c:	push	{r4, r5, r6, lr}
   13e20:	subs	r4, r0, #0
   13e24:	beq	13e9c <dcngettext@plt+0x2bd0>
   13e28:	mov	r1, #47	; 0x2f
   13e2c:	mov	r0, r4
   13e30:	bl	1123c <strrchr@plt>
   13e34:	cmp	r0, #0
   13e38:	addne	r5, r0, #1
   13e3c:	moveq	r5, r4
   13e40:	sub	r3, r5, r4
   13e44:	cmp	r3, #6
   13e48:	ble	13e88 <dcngettext@plt+0x2bbc>
   13e4c:	mov	r2, #7
   13e50:	ldr	r1, [pc, #96]	; 13eb8 <dcngettext@plt+0x2bec>
   13e54:	sub	r0, r5, #7
   13e58:	bl	112a8 <strncmp@plt>
   13e5c:	cmp	r0, #0
   13e60:	bne	13e88 <dcngettext@plt+0x2bbc>
   13e64:	mov	r2, #3
   13e68:	ldr	r1, [pc, #76]	; 13ebc <dcngettext@plt+0x2bf0>
   13e6c:	mov	r0, r5
   13e70:	bl	112a8 <strncmp@plt>
   13e74:	cmp	r0, #0
   13e78:	addeq	r4, r5, #3
   13e7c:	ldreq	r3, [pc, #60]	; 13ec0 <dcngettext@plt+0x2bf4>
   13e80:	streq	r4, [r3]
   13e84:	movne	r4, r5
   13e88:	ldr	r3, [pc, #52]	; 13ec4 <dcngettext@plt+0x2bf8>
   13e8c:	str	r4, [r3]
   13e90:	ldr	r3, [pc, #48]	; 13ec8 <dcngettext@plt+0x2bfc>
   13e94:	str	r4, [r3]
   13e98:	pop	{r4, r5, r6, pc}
   13e9c:	ldr	r3, [pc, #40]	; 13ecc <dcngettext@plt+0x2c00>
   13ea0:	ldr	r3, [r3]
   13ea4:	mov	r2, #55	; 0x37
   13ea8:	mov	r1, #1
   13eac:	ldr	r0, [pc, #28]	; 13ed0 <dcngettext@plt+0x2c04>
   13eb0:	bl	11098 <fwrite@plt>
   13eb4:	bl	112b4 <abort@plt>
   13eb8:			; <UNDEFINED> instruction: 0x00017ab4
   13ebc:			; <UNDEFINED> instruction: 0x00017abc
   13ec0:	andeq	r8, r2, r8, ror r1
   13ec4:	andeq	r8, r2, r4, lsr #3
   13ec8:	andeq	r8, r2, ip, ror r1
   13ecc:	andeq	r8, r2, r8, lsl #3
   13ed0:	andeq	r7, r1, ip, ror sl
   13ed4:	push	{r4, r5, r6, lr}
   13ed8:	mov	r5, r0
   13edc:	mov	r4, r1
   13ee0:	mov	r2, #48	; 0x30
   13ee4:	mov	r1, #0
   13ee8:	bl	111ac <memset@plt>
   13eec:	cmp	r4, #10
   13ef0:	beq	13f00 <dcngettext@plt+0x2c34>
   13ef4:	str	r4, [r5]
   13ef8:	mov	r0, r5
   13efc:	pop	{r4, r5, r6, pc}
   13f00:	bl	112b4 <abort@plt>
   13f04:	push	{r4, r5, r6, lr}
   13f08:	mov	r4, r0
   13f0c:	mov	r5, r1
   13f10:	mov	r2, #5
   13f14:	mov	r1, r0
   13f18:	mov	r0, #0
   13f1c:	bl	11044 <dcgettext@plt>
   13f20:	cmp	r4, r0
   13f24:	popne	{r4, r5, r6, pc}
   13f28:	bl	16cd8 <dcngettext@plt+0x5a0c>
   13f2c:	ldrb	r3, [r0]
   13f30:	bic	r3, r3, #32
   13f34:	cmp	r3, #85	; 0x55
   13f38:	beq	13fb4 <dcngettext@plt+0x2ce8>
   13f3c:	cmp	r3, #71	; 0x47
   13f40:	bne	14010 <dcngettext@plt+0x2d44>
   13f44:	ldrb	r3, [r0, #1]
   13f48:	bic	r3, r3, #32
   13f4c:	cmp	r3, #66	; 0x42
   13f50:	bne	14010 <dcngettext@plt+0x2d44>
   13f54:	ldrb	r3, [r0, #2]
   13f58:	cmp	r3, #49	; 0x31
   13f5c:	bne	14010 <dcngettext@plt+0x2d44>
   13f60:	ldrb	r3, [r0, #3]
   13f64:	cmp	r3, #56	; 0x38
   13f68:	bne	14010 <dcngettext@plt+0x2d44>
   13f6c:	ldrb	r3, [r0, #4]
   13f70:	cmp	r3, #48	; 0x30
   13f74:	bne	14010 <dcngettext@plt+0x2d44>
   13f78:	ldrb	r3, [r0, #5]
   13f7c:	cmp	r3, #51	; 0x33
   13f80:	bne	14010 <dcngettext@plt+0x2d44>
   13f84:	ldrb	r3, [r0, #6]
   13f88:	cmp	r3, #48	; 0x30
   13f8c:	bne	14010 <dcngettext@plt+0x2d44>
   13f90:	ldrb	r3, [r0, #7]
   13f94:	cmp	r3, #0
   13f98:	bne	14010 <dcngettext@plt+0x2d44>
   13f9c:	ldrb	r2, [r4]
   13fa0:	ldr	r3, [pc, #124]	; 14024 <dcngettext@plt+0x2d58>
   13fa4:	ldr	r0, [pc, #124]	; 14028 <dcngettext@plt+0x2d5c>
   13fa8:	cmp	r2, #96	; 0x60
   13fac:	movne	r0, r3
   13fb0:	pop	{r4, r5, r6, pc}
   13fb4:	ldrb	r3, [r0, #1]
   13fb8:	bic	r3, r3, #32
   13fbc:	cmp	r3, #84	; 0x54
   13fc0:	bne	14010 <dcngettext@plt+0x2d44>
   13fc4:	ldrb	r3, [r0, #2]
   13fc8:	bic	r3, r3, #32
   13fcc:	cmp	r3, #70	; 0x46
   13fd0:	bne	14010 <dcngettext@plt+0x2d44>
   13fd4:	ldrb	r3, [r0, #3]
   13fd8:	cmp	r3, #45	; 0x2d
   13fdc:	bne	14010 <dcngettext@plt+0x2d44>
   13fe0:	ldrb	r3, [r0, #4]
   13fe4:	cmp	r3, #56	; 0x38
   13fe8:	bne	14010 <dcngettext@plt+0x2d44>
   13fec:	ldrb	r3, [r0, #5]
   13ff0:	cmp	r3, #0
   13ff4:	bne	14010 <dcngettext@plt+0x2d44>
   13ff8:	ldrb	r2, [r4]
   13ffc:	ldr	r3, [pc, #40]	; 1402c <dcngettext@plt+0x2d60>
   14000:	ldr	r0, [pc, #40]	; 14030 <dcngettext@plt+0x2d64>
   14004:	cmp	r2, #96	; 0x60
   14008:	movne	r0, r3
   1400c:	pop	{r4, r5, r6, pc}
   14010:	ldr	r3, [pc, #28]	; 14034 <dcngettext@plt+0x2d68>
   14014:	ldr	r0, [pc, #28]	; 14038 <dcngettext@plt+0x2d6c>
   14018:	cmp	r5, #9
   1401c:	movne	r0, r3
   14020:	pop	{r4, r5, r6, pc}
   14024:	andeq	r7, r1, r8, lsl fp
   14028:	andeq	r7, r1, r4, lsr #22
   1402c:	andeq	r7, r1, r4, lsl fp
   14030:	andeq	r7, r1, r8, lsr #22
   14034:	andeq	r7, r1, ip, lsl fp
   14038:	andeq	r7, r1, r0, lsr #22
   1403c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14040:	sub	sp, sp, #116	; 0x74
   14044:	str	r0, [sp, #36]	; 0x24
   14048:	mov	sl, r1
   1404c:	str	r2, [sp, #52]	; 0x34
   14050:	str	r3, [sp, #28]
   14054:	ldr	r8, [sp, #152]	; 0x98
   14058:	bl	110b0 <__ctype_get_mb_cur_max@plt>
   1405c:	str	r0, [sp, #84]	; 0x54
   14060:	ldr	r3, [sp, #156]	; 0x9c
   14064:	lsr	r3, r3, #1
   14068:	and	r3, r3, #1
   1406c:	str	r3, [sp, #32]
   14070:	mov	r3, #1
   14074:	str	r3, [sp, #40]	; 0x28
   14078:	mov	r3, #0
   1407c:	str	r3, [sp, #80]	; 0x50
   14080:	str	r3, [sp, #44]	; 0x2c
   14084:	str	r3, [sp, #48]	; 0x30
   14088:	str	r3, [sp, #60]	; 0x3c
   1408c:	str	r3, [sp, #72]	; 0x48
   14090:	str	r3, [sp, #76]	; 0x4c
   14094:	mov	r7, sl
   14098:	mov	sl, r8
   1409c:	cmp	sl, #10
   140a0:	ldrls	pc, [pc, sl, lsl #2]
   140a4:	b	1425c <dcngettext@plt+0x2f90>
   140a8:	andeq	r4, r1, ip, lsl #2
   140ac:	ldrdeq	r4, [r1], -ip
   140b0:	andeq	r4, r1, r8, lsr r2
   140b4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140b8:	andeq	r4, r1, ip, ror #3
   140bc:	andeq	r4, r1, ip, lsl r1
   140c0:	andeq	r5, r1, r8, lsl #3
   140c4:	andeq	r4, r1, r0, ror #4
   140c8:	andeq	r4, r1, r8, asr r1
   140cc:	andeq	r4, r1, r8, asr r1
   140d0:	andeq	r4, r1, r8, asr r1
   140d4:	mov	r3, #1
   140d8:	str	r3, [sp, #48]	; 0x30
   140dc:	mov	r3, #1
   140e0:	str	r3, [sp, #32]
   140e4:	str	r3, [sp, #60]	; 0x3c
   140e8:	ldr	r3, [pc, #4068]	; 150d4 <dcngettext@plt+0x3e08>
   140ec:	str	r3, [sp, #72]	; 0x48
   140f0:	mov	fp, #0
   140f4:	mov	sl, #2
   140f8:	mov	r6, #0
   140fc:	ldr	r3, [sp, #48]	; 0x30
   14100:	eor	r3, r3, #1
   14104:	str	r3, [sp, #68]	; 0x44
   14108:	b	149f0 <dcngettext@plt+0x3724>
   1410c:	mov	r3, #0
   14110:	str	r3, [sp, #32]
   14114:	mov	fp, r3
   14118:	b	140f8 <dcngettext@plt+0x2e2c>
   1411c:	ldr	r3, [sp, #32]
   14120:	cmp	r3, #0
   14124:	bne	14278 <dcngettext@plt+0x2fac>
   14128:	cmp	r7, #0
   1412c:	beq	14298 <dcngettext@plt+0x2fcc>
   14130:	ldr	r3, [sp, #36]	; 0x24
   14134:	mov	r2, #34	; 0x22
   14138:	strb	r2, [r3]
   1413c:	mov	r3, #1
   14140:	str	r3, [sp, #48]	; 0x30
   14144:	str	r3, [sp, #60]	; 0x3c
   14148:	ldr	r3, [pc, #3980]	; 150dc <dcngettext@plt+0x3e10>
   1414c:	str	r3, [sp, #72]	; 0x48
   14150:	mov	fp, #1
   14154:	b	140f8 <dcngettext@plt+0x2e2c>
   14158:	cmp	sl, #10
   1415c:	beq	14180 <dcngettext@plt+0x2eb4>
   14160:	mov	r1, sl
   14164:	ldr	r0, [pc, #3948]	; 150d8 <dcngettext@plt+0x3e0c>
   14168:	bl	13f04 <dcngettext@plt+0x2c38>
   1416c:	str	r0, [sp, #164]	; 0xa4
   14170:	mov	r1, sl
   14174:	ldr	r0, [pc, #3928]	; 150d4 <dcngettext@plt+0x3e08>
   14178:	bl	13f04 <dcngettext@plt+0x2c38>
   1417c:	str	r0, [sp, #168]	; 0xa8
   14180:	ldr	r3, [sp, #32]
   14184:	cmp	r3, #0
   14188:	movne	fp, #0
   1418c:	bne	141c4 <dcngettext@plt+0x2ef8>
   14190:	ldr	r3, [sp, #164]	; 0xa4
   14194:	ldrb	r3, [r3]
   14198:	cmp	r3, #0
   1419c:	beq	141e4 <dcngettext@plt+0x2f18>
   141a0:	ldr	r2, [sp, #164]	; 0xa4
   141a4:	mov	fp, #0
   141a8:	ldr	r1, [sp, #36]	; 0x24
   141ac:	cmp	r7, fp
   141b0:	strbhi	r3, [r1, fp]
   141b4:	add	fp, fp, #1
   141b8:	ldrb	r3, [r2, #1]!
   141bc:	cmp	r3, #0
   141c0:	bne	141ac <dcngettext@plt+0x2ee0>
   141c4:	ldr	r0, [sp, #168]	; 0xa8
   141c8:	bl	1117c <strlen@plt>
   141cc:	str	r0, [sp, #60]	; 0x3c
   141d0:	ldr	r3, [sp, #168]	; 0xa8
   141d4:	str	r3, [sp, #72]	; 0x48
   141d8:	mov	r3, #1
   141dc:	str	r3, [sp, #48]	; 0x30
   141e0:	b	140f8 <dcngettext@plt+0x2e2c>
   141e4:	mov	fp, #0
   141e8:	b	141c4 <dcngettext@plt+0x2ef8>
   141ec:	ldr	r3, [sp, #32]
   141f0:	cmp	r3, #0
   141f4:	bne	142b4 <dcngettext@plt+0x2fe8>
   141f8:	mov	r3, #1
   141fc:	str	r3, [sp, #48]	; 0x30
   14200:	cmp	r7, #0
   14204:	beq	142d0 <dcngettext@plt+0x3004>
   14208:	ldr	r3, [sp, #36]	; 0x24
   1420c:	mov	r2, #39	; 0x27
   14210:	strb	r2, [r3]
   14214:	mov	r3, #0
   14218:	str	r3, [sp, #32]
   1421c:	mov	r3, #1
   14220:	str	r3, [sp, #60]	; 0x3c
   14224:	ldr	r3, [pc, #3752]	; 150d4 <dcngettext@plt+0x3e08>
   14228:	str	r3, [sp, #72]	; 0x48
   1422c:	mov	fp, #1
   14230:	mov	sl, #2
   14234:	b	140f8 <dcngettext@plt+0x2e2c>
   14238:	ldr	r3, [sp, #32]
   1423c:	cmp	r3, #0
   14240:	beq	14200 <dcngettext@plt+0x2f34>
   14244:	mov	r3, #1
   14248:	str	r3, [sp, #60]	; 0x3c
   1424c:	ldr	r3, [pc, #3712]	; 150d4 <dcngettext@plt+0x3e08>
   14250:	str	r3, [sp, #72]	; 0x48
   14254:	mov	fp, #0
   14258:	b	140f8 <dcngettext@plt+0x2e2c>
   1425c:	bl	112b4 <abort@plt>
   14260:	mov	r3, #0
   14264:	str	r3, [sp, #32]
   14268:	mov	r3, #1
   1426c:	str	r3, [sp, #48]	; 0x30
   14270:	mov	fp, #0
   14274:	b	140f8 <dcngettext@plt+0x2e2c>
   14278:	ldr	r3, [sp, #32]
   1427c:	str	r3, [sp, #48]	; 0x30
   14280:	mov	r3, #1
   14284:	str	r3, [sp, #60]	; 0x3c
   14288:	ldr	r3, [pc, #3660]	; 150dc <dcngettext@plt+0x3e10>
   1428c:	str	r3, [sp, #72]	; 0x48
   14290:	mov	fp, #0
   14294:	b	140f8 <dcngettext@plt+0x2e2c>
   14298:	mov	r3, #1
   1429c:	str	r3, [sp, #48]	; 0x30
   142a0:	str	r3, [sp, #60]	; 0x3c
   142a4:	ldr	r3, [pc, #3632]	; 150dc <dcngettext@plt+0x3e10>
   142a8:	str	r3, [sp, #72]	; 0x48
   142ac:	mov	fp, #1
   142b0:	b	140f8 <dcngettext@plt+0x2e2c>
   142b4:	mov	r3, #1
   142b8:	str	r3, [sp, #60]	; 0x3c
   142bc:	ldr	r3, [pc, #3600]	; 150d4 <dcngettext@plt+0x3e08>
   142c0:	str	r3, [sp, #72]	; 0x48
   142c4:	mov	fp, #0
   142c8:	mov	sl, #2
   142cc:	b	140f8 <dcngettext@plt+0x2e2c>
   142d0:	mov	r3, #0
   142d4:	str	r3, [sp, #32]
   142d8:	mov	r3, #1
   142dc:	str	r3, [sp, #60]	; 0x3c
   142e0:	ldr	r3, [pc, #3564]	; 150d4 <dcngettext@plt+0x3e08>
   142e4:	str	r3, [sp, #72]	; 0x48
   142e8:	mov	fp, #1
   142ec:	mov	sl, #2
   142f0:	b	140f8 <dcngettext@plt+0x2e2c>
   142f4:	mov	r3, #0
   142f8:	str	r3, [sp, #56]	; 0x38
   142fc:	ldr	r3, [sp, #52]	; 0x34
   14300:	add	r2, r3, r6
   14304:	str	r2, [sp, #64]	; 0x40
   14308:	ldrb	r4, [r3, r6]
   1430c:	cmp	r4, #126	; 0x7e
   14310:	ldrls	pc, [pc, r4, lsl #2]
   14314:	b	14b50 <dcngettext@plt+0x3884>
   14318:	andeq	r4, r1, r0, lsr r5
   1431c:	andeq	r4, r1, r0, asr fp
   14320:	andeq	r4, r1, r0, asr fp
   14324:	andeq	r4, r1, r0, asr fp
   14328:	andeq	r4, r1, r0, asr fp
   1432c:	andeq	r4, r1, r0, asr fp
   14330:	andeq	r4, r1, r0, asr fp
   14334:	andeq	r4, r1, ip, lsl #17
   14338:	andeq	r4, r1, r8, lsr #10
   1433c:	andeq	r4, r1, r4, asr #16
   14340:	andeq	r4, r1, ip, lsr r8
   14344:	andeq	r4, r1, ip, lsr #15
   14348:	andeq	r4, r1, r4, lsr #15
   1434c:	andeq	r4, r1, r0, lsr #10
   14350:	andeq	r4, r1, r0, asr fp
   14354:	andeq	r4, r1, r0, asr fp
   14358:	andeq	r4, r1, r0, asr fp
   1435c:	andeq	r4, r1, r0, asr fp
   14360:	andeq	r4, r1, r0, asr fp
   14364:	andeq	r4, r1, r0, asr fp
   14368:	andeq	r4, r1, r0, asr fp
   1436c:	andeq	r4, r1, r0, asr fp
   14370:	andeq	r4, r1, r0, asr fp
   14374:	andeq	r4, r1, r0, asr fp
   14378:	andeq	r4, r1, r0, asr fp
   1437c:	andeq	r4, r1, r0, asr fp
   14380:	andeq	r4, r1, r0, asr fp
   14384:	andeq	r4, r1, r0, asr fp
   14388:	andeq	r4, r1, r0, asr fp
   1438c:	andeq	r4, r1, r0, asr fp
   14390:	andeq	r4, r1, r0, asr fp
   14394:	andeq	r4, r1, r0, asr fp
   14398:	andeq	r4, r1, r0, ror #17
   1439c:	ldrdeq	r4, [r1], -ip
   143a0:	ldrdeq	r4, [r1], -ip
   143a4:			; <UNDEFINED> instruction: 0x000148b4
   143a8:	ldrdeq	r4, [r1], -ip
   143ac:	andeq	r4, r1, r4, lsr #30
   143b0:	ldrdeq	r4, [r1], -ip
   143b4:			; <UNDEFINED> instruction: 0x00014ab4
   143b8:	ldrdeq	r4, [r1], -ip
   143bc:	ldrdeq	r4, [r1], -ip
   143c0:	ldrdeq	r4, [r1], -ip
   143c4:	andeq	r4, r1, r4, lsr #30
   143c8:	andeq	r4, r1, r4, lsr #30
   143cc:	andeq	r4, r1, r4, lsr #30
   143d0:	andeq	r4, r1, r4, lsr #30
   143d4:	andeq	r4, r1, r4, lsr #30
   143d8:	andeq	r4, r1, r4, lsr #30
   143dc:	andeq	r4, r1, r4, lsr #30
   143e0:	andeq	r4, r1, r4, lsr #30
   143e4:	andeq	r4, r1, r4, lsr #30
   143e8:	andeq	r4, r1, r4, lsr #30
   143ec:	andeq	r4, r1, r4, lsr #30
   143f0:	andeq	r4, r1, r4, lsr #30
   143f4:	andeq	r4, r1, r4, lsr #30
   143f8:	andeq	r4, r1, r4, lsr #30
   143fc:	andeq	r4, r1, r4, lsr #30
   14400:	andeq	r4, r1, r4, lsr #30
   14404:	ldrdeq	r4, [r1], -ip
   14408:	ldrdeq	r4, [r1], -ip
   1440c:	ldrdeq	r4, [r1], -ip
   14410:	ldrdeq	r4, [r1], -ip
   14414:	andeq	r4, r1, r8, lsr r6
   14418:	andeq	r4, r1, r0, asr fp
   1441c:	andeq	r4, r1, r4, lsr #30
   14420:	andeq	r4, r1, r4, lsr #30
   14424:	andeq	r4, r1, r4, lsr #30
   14428:	andeq	r4, r1, r4, lsr #30
   1442c:	andeq	r4, r1, r4, lsr #30
   14430:	andeq	r4, r1, r4, lsr #30
   14434:	andeq	r4, r1, r4, lsr #30
   14438:	andeq	r4, r1, r4, lsr #30
   1443c:	andeq	r4, r1, r4, lsr #30
   14440:	andeq	r4, r1, r4, lsr #30
   14444:	andeq	r4, r1, r4, lsr #30
   14448:	andeq	r4, r1, r4, lsr #30
   1444c:	andeq	r4, r1, r4, lsr #30
   14450:	andeq	r4, r1, r4, lsr #30
   14454:	andeq	r4, r1, r4, lsr #30
   14458:	andeq	r4, r1, r4, lsr #30
   1445c:	andeq	r4, r1, r4, lsr #30
   14460:	andeq	r4, r1, r4, lsr #30
   14464:	andeq	r4, r1, r4, lsr #30
   14468:	andeq	r4, r1, r4, lsr #30
   1446c:	andeq	r4, r1, r4, lsr #30
   14470:	andeq	r4, r1, r4, lsr #30
   14474:	andeq	r4, r1, r4, lsr #30
   14478:	andeq	r4, r1, r4, lsr #30
   1447c:	andeq	r4, r1, r4, lsr #30
   14480:	andeq	r4, r1, r4, lsr #30
   14484:	ldrdeq	r4, [r1], -ip
   14488:			; <UNDEFINED> instruction: 0x000147b4
   1448c:	andeq	r4, r1, r4, lsr #30
   14490:	ldrdeq	r4, [r1], -ip
   14494:	andeq	r4, r1, r4, lsr #30
   14498:	ldrdeq	r4, [r1], -ip
   1449c:	andeq	r4, r1, r4, lsr #30
   144a0:	andeq	r4, r1, r4, lsr #30
   144a4:	andeq	r4, r1, r4, lsr #30
   144a8:	andeq	r4, r1, r4, lsr #30
   144ac:	andeq	r4, r1, r4, lsr #30
   144b0:	andeq	r4, r1, r4, lsr #30
   144b4:	andeq	r4, r1, r4, lsr #30
   144b8:	andeq	r4, r1, r4, lsr #30
   144bc:	andeq	r4, r1, r4, lsr #30
   144c0:	andeq	r4, r1, r4, lsr #30
   144c4:	andeq	r4, r1, r4, lsr #30
   144c8:	andeq	r4, r1, r4, lsr #30
   144cc:	andeq	r4, r1, r4, lsr #30
   144d0:	andeq	r4, r1, r4, lsr #30
   144d4:	andeq	r4, r1, r4, lsr #30
   144d8:	andeq	r4, r1, r4, lsr #30
   144dc:	andeq	r4, r1, r4, lsr #30
   144e0:	andeq	r4, r1, r4, lsr #30
   144e4:	andeq	r4, r1, r4, lsr #30
   144e8:	andeq	r4, r1, r4, lsr #30
   144ec:	andeq	r4, r1, r4, lsr #30
   144f0:	andeq	r4, r1, r4, lsr #30
   144f4:	andeq	r4, r1, r4, lsr #30
   144f8:	andeq	r4, r1, r4, lsr #30
   144fc:	andeq	r4, r1, r4, lsr #30
   14500:	andeq	r4, r1, r4, lsr #30
   14504:	muleq	r1, r4, r8
   14508:	ldrdeq	r4, [r1], -ip
   1450c:	muleq	r1, r4, r8
   14510:			; <UNDEFINED> instruction: 0x000148b4
   14514:	mov	r3, #0
   14518:	str	r3, [sp, #56]	; 0x38
   1451c:	b	142fc <dcngettext@plt+0x3030>
   14520:	mov	r3, #114	; 0x72
   14524:	b	14848 <dcngettext@plt+0x357c>
   14528:	mov	r3, #98	; 0x62
   1452c:	b	14860 <dcngettext@plt+0x3594>
   14530:	ldr	r3, [sp, #48]	; 0x30
   14534:	cmp	r3, #0
   14538:	beq	14620 <dcngettext@plt+0x3354>
   1453c:	ldr	r3, [sp, #32]
   14540:	cmp	r3, #0
   14544:	bne	150a8 <dcngettext@plt+0x3ddc>
   14548:	ldr	r3, [sp, #44]	; 0x2c
   1454c:	eor	r3, r3, #1
   14550:	cmp	sl, #2
   14554:	movne	r3, #0
   14558:	andeq	r3, r3, #1
   1455c:	cmp	r3, #0
   14560:	moveq	r2, fp
   14564:	beq	145a8 <dcngettext@plt+0x32dc>
   14568:	cmp	r7, fp
   1456c:	ldrhi	r2, [sp, #36]	; 0x24
   14570:	movhi	r1, #39	; 0x27
   14574:	strbhi	r1, [r2, fp]
   14578:	add	r2, fp, #1
   1457c:	cmp	r7, r2
   14580:	ldrhi	r1, [sp, #36]	; 0x24
   14584:	movhi	r0, #36	; 0x24
   14588:	strbhi	r0, [r1, r2]
   1458c:	add	r2, fp, #2
   14590:	cmp	r7, r2
   14594:	ldrhi	r1, [sp, #36]	; 0x24
   14598:	movhi	r0, #39	; 0x27
   1459c:	strbhi	r0, [r1, r2]
   145a0:	add	r2, fp, #3
   145a4:	str	r3, [sp, #44]	; 0x2c
   145a8:	cmp	r7, r2
   145ac:	ldrhi	r3, [sp, #36]	; 0x24
   145b0:	movhi	r1, #92	; 0x5c
   145b4:	strbhi	r1, [r3, r2]
   145b8:	add	fp, r2, #1
   145bc:	cmp	r5, #0
   145c0:	beq	14f2c <dcngettext@plt+0x3c60>
   145c4:	add	r3, r6, #1
   145c8:	ldr	r1, [sp, #28]
   145cc:	cmp	r1, r3
   145d0:	bls	14f3c <dcngettext@plt+0x3c70>
   145d4:	ldr	r1, [sp, #52]	; 0x34
   145d8:	ldrb	r3, [r1, r3]
   145dc:	sub	r3, r3, #48	; 0x30
   145e0:	uxtb	r3, r3
   145e4:	cmp	r3, #9
   145e8:	bhi	14f48 <dcngettext@plt+0x3c7c>
   145ec:	cmp	r7, fp
   145f0:	movhi	r3, #48	; 0x30
   145f4:	ldrhi	r1, [sp, #36]	; 0x24
   145f8:	strbhi	r3, [r1, fp]
   145fc:	add	r3, r2, #2
   14600:	cmp	r7, r3
   14604:	movhi	r1, #48	; 0x30
   14608:	ldrhi	r0, [sp, #36]	; 0x24
   1460c:	strbhi	r1, [r0, r3]
   14610:	add	fp, r2, #3
   14614:	ldr	r8, [sp, #32]
   14618:	mov	r4, #48	; 0x30
   1461c:	b	148f8 <dcngettext@plt+0x362c>
   14620:	ldr	r3, [sp, #156]	; 0x9c
   14624:	tst	r3, #1
   14628:	bne	149ec <dcngettext@plt+0x3720>
   1462c:	ldr	r5, [sp, #48]	; 0x30
   14630:	mov	r8, r5
   14634:	b	148f8 <dcngettext@plt+0x362c>
   14638:	cmp	sl, #2
   1463c:	beq	14654 <dcngettext@plt+0x3388>
   14640:	cmp	sl, #5
   14644:	beq	1466c <dcngettext@plt+0x33a0>
   14648:	mov	r8, #0
   1464c:	mov	r5, r8
   14650:	b	148f8 <dcngettext@plt+0x362c>
   14654:	ldr	r3, [sp, #32]
   14658:	cmp	r3, #0
   1465c:	bne	150bc <dcngettext@plt+0x3df0>
   14660:	mov	r8, r3
   14664:	mov	r5, r3
   14668:	b	148f8 <dcngettext@plt+0x362c>
   1466c:	ldr	r3, [sp, #156]	; 0x9c
   14670:	tst	r3, #4
   14674:	beq	14f54 <dcngettext@plt+0x3c88>
   14678:	add	r3, r6, #2
   1467c:	ldr	r2, [sp, #28]
   14680:	cmp	r2, r3
   14684:	bls	14f60 <dcngettext@plt+0x3c94>
   14688:	ldr	r2, [sp, #52]	; 0x34
   1468c:	add	r2, r2, r6
   14690:	ldrb	r2, [r2, #1]
   14694:	cmp	r2, #63	; 0x3f
   14698:	movne	r8, #0
   1469c:	movne	r5, r8
   146a0:	bne	148f8 <dcngettext@plt+0x362c>
   146a4:	ldr	r2, [sp, #52]	; 0x34
   146a8:	ldrb	r2, [r2, r3]
   146ac:	sub	r1, r2, #33	; 0x21
   146b0:	cmp	r1, #29
   146b4:	ldrls	pc, [pc, r1, lsl #2]
   146b8:	b	14f6c <dcngettext@plt+0x3ca0>
   146bc:	andeq	r4, r1, r4, lsr r7
   146c0:	andeq	r4, r1, ip, ror #30
   146c4:	andeq	r4, r1, ip, ror #30
   146c8:	andeq	r4, r1, ip, ror #30
   146cc:	andeq	r4, r1, ip, ror #30
   146d0:	andeq	r4, r1, ip, ror #30
   146d4:	andeq	r4, r1, r4, lsr r7
   146d8:	andeq	r4, r1, r4, lsr r7
   146dc:	andeq	r4, r1, r4, lsr r7
   146e0:	andeq	r4, r1, ip, ror #30
   146e4:	andeq	r4, r1, ip, ror #30
   146e8:	andeq	r4, r1, ip, ror #30
   146ec:	andeq	r4, r1, r4, lsr r7
   146f0:	andeq	r4, r1, ip, ror #30
   146f4:	andeq	r4, r1, r4, lsr r7
   146f8:	andeq	r4, r1, ip, ror #30
   146fc:	andeq	r4, r1, ip, ror #30
   14700:	andeq	r4, r1, ip, ror #30
   14704:	andeq	r4, r1, ip, ror #30
   14708:	andeq	r4, r1, ip, ror #30
   1470c:	andeq	r4, r1, ip, ror #30
   14710:	andeq	r4, r1, ip, ror #30
   14714:	andeq	r4, r1, ip, ror #30
   14718:	andeq	r4, r1, ip, ror #30
   1471c:	andeq	r4, r1, ip, ror #30
   14720:	andeq	r4, r1, ip, ror #30
   14724:	andeq	r4, r1, ip, ror #30
   14728:	andeq	r4, r1, r4, lsr r7
   1472c:	andeq	r4, r1, r4, lsr r7
   14730:	andeq	r4, r1, r4, lsr r7
   14734:	ldr	r1, [sp, #32]
   14738:	cmp	r1, #0
   1473c:	bne	1517c <dcngettext@plt+0x3eb0>
   14740:	cmp	r7, fp
   14744:	movhi	r1, #63	; 0x3f
   14748:	ldrhi	r0, [sp, #36]	; 0x24
   1474c:	strbhi	r1, [r0, fp]
   14750:	add	r1, fp, #1
   14754:	cmp	r7, r1
   14758:	ldrhi	r0, [sp, #36]	; 0x24
   1475c:	movhi	ip, #34	; 0x22
   14760:	strbhi	ip, [r0, r1]
   14764:	add	r1, fp, #2
   14768:	cmp	r7, r1
   1476c:	ldrhi	r0, [sp, #36]	; 0x24
   14770:	movhi	ip, #34	; 0x22
   14774:	strbhi	ip, [r0, r1]
   14778:	add	r1, fp, #3
   1477c:	cmp	r7, r1
   14780:	movhi	r0, #63	; 0x3f
   14784:	ldrhi	ip, [sp, #36]	; 0x24
   14788:	strbhi	r0, [ip, r1]
   1478c:	add	fp, fp, #4
   14790:	ldr	r5, [sp, #32]
   14794:	mov	r8, r5
   14798:	mov	r4, r2
   1479c:	mov	r6, r3
   147a0:	b	148f8 <dcngettext@plt+0x362c>
   147a4:	mov	r3, #102	; 0x66
   147a8:	b	14860 <dcngettext@plt+0x3594>
   147ac:	mov	r3, #118	; 0x76
   147b0:	b	14860 <dcngettext@plt+0x3594>
   147b4:	cmp	sl, #2
   147b8:	beq	14824 <dcngettext@plt+0x3558>
   147bc:	ldr	r3, [sp, #48]	; 0x30
   147c0:	ldr	r2, [sp, #32]
   147c4:	and	r3, r3, r2
   147c8:	tst	r9, r3
   147cc:	moveq	r3, r4
   147d0:	beq	14860 <dcngettext@plt+0x3594>
   147d4:	mov	r8, #0
   147d8:	mov	r5, r8
   147dc:	eor	r5, r5, #1
   147e0:	ldr	r3, [sp, #44]	; 0x2c
   147e4:	and	r5, r5, r3
   147e8:	tst	r5, #255	; 0xff
   147ec:	beq	149cc <dcngettext@plt+0x3700>
   147f0:	cmp	r7, fp
   147f4:	ldrhi	r3, [sp, #36]	; 0x24
   147f8:	movhi	r2, #39	; 0x27
   147fc:	strbhi	r2, [r3, fp]
   14800:	add	r3, fp, #1
   14804:	cmp	r7, r3
   14808:	ldrhi	r2, [sp, #36]	; 0x24
   1480c:	movhi	r1, #39	; 0x27
   14810:	strbhi	r1, [r2, r3]
   14814:	add	fp, fp, #2
   14818:	mov	r3, #0
   1481c:	str	r3, [sp, #44]	; 0x2c
   14820:	b	149cc <dcngettext@plt+0x3700>
   14824:	ldr	r3, [sp, #32]
   14828:	cmp	r3, #0
   1482c:	bne	150c8 <dcngettext@plt+0x3dfc>
   14830:	mov	r8, r3
   14834:	mov	r5, r3
   14838:	b	147dc <dcngettext@plt+0x3510>
   1483c:	mov	r3, #110	; 0x6e
   14840:	b	14848 <dcngettext@plt+0x357c>
   14844:	mov	r3, #116	; 0x74
   14848:	ldr	r2, [sp, #32]
   1484c:	cmp	sl, #2
   14850:	movne	r2, #0
   14854:	andeq	r2, r2, #1
   14858:	cmp	r2, #0
   1485c:	bne	14880 <dcngettext@plt+0x35b4>
   14860:	ldr	r2, [sp, #48]	; 0x30
   14864:	cmp	r2, #0
   14868:	moveq	r8, r2
   1486c:	moveq	r5, r2
   14870:	beq	148f8 <dcngettext@plt+0x362c>
   14874:	mov	r4, r3
   14878:	mov	r8, #0
   1487c:	b	14950 <dcngettext@plt+0x3684>
   14880:	mov	r8, sl
   14884:	mov	sl, r7
   14888:	b	150f4 <dcngettext@plt+0x3e28>
   1488c:	mov	r3, #97	; 0x61
   14890:	b	14860 <dcngettext@plt+0x3594>
   14894:	ldr	r3, [sp, #28]
   14898:	cmn	r3, #1
   1489c:	beq	148c8 <dcngettext@plt+0x35fc>
   148a0:	ldr	r3, [sp, #28]
   148a4:	subs	r3, r3, #1
   148a8:	movne	r3, #1
   148ac:	cmp	r3, #0
   148b0:	bne	14f78 <dcngettext@plt+0x3cac>
   148b4:	cmp	r6, #0
   148b8:	beq	148e0 <dcngettext@plt+0x3614>
   148bc:	mov	r8, #0
   148c0:	mov	r5, r8
   148c4:	b	148f8 <dcngettext@plt+0x362c>
   148c8:	ldr	r3, [sp, #52]	; 0x34
   148cc:	ldrb	r3, [r3, #1]
   148d0:	adds	r3, r3, #0
   148d4:	movne	r3, #1
   148d8:	b	148ac <dcngettext@plt+0x35e0>
   148dc:	mov	r8, #0
   148e0:	ldr	r5, [sp, #32]
   148e4:	cmp	sl, #2
   148e8:	movne	r5, #0
   148ec:	andeq	r5, r5, #1
   148f0:	cmp	r5, #0
   148f4:	bne	14aa8 <dcngettext@plt+0x37dc>
   148f8:	ldr	r3, [sp, #68]	; 0x44
   148fc:	cmp	sl, #2
   14900:	orreq	r3, r3, #1
   14904:	eor	r3, r3, #1
   14908:	ldr	r2, [sp, #32]
   1490c:	orr	r3, r2, r3
   14910:	tst	r3, #255	; 0xff
   14914:	beq	14944 <dcngettext@plt+0x3678>
   14918:	ldr	r3, [sp, #160]	; 0xa0
   1491c:	cmp	r3, #0
   14920:	beq	14944 <dcngettext@plt+0x3678>
   14924:	lsr	r2, r4, #5
   14928:	uxtb	r2, r2
   1492c:	and	r3, r4, #31
   14930:	ldr	r1, [sp, #160]	; 0xa0
   14934:	ldr	r2, [r1, r2, lsl #2]
   14938:	lsr	r3, r2, r3
   1493c:	tst	r3, #1
   14940:	bne	14950 <dcngettext@plt+0x3684>
   14944:	ldr	r3, [sp, #56]	; 0x38
   14948:	cmp	r3, #0
   1494c:	beq	147dc <dcngettext@plt+0x3510>
   14950:	ldr	r3, [sp, #32]
   14954:	cmp	r3, #0
   14958:	bne	15164 <dcngettext@plt+0x3e98>
   1495c:	ldr	r3, [sp, #44]	; 0x2c
   14960:	eor	r3, r3, #1
   14964:	cmp	sl, #2
   14968:	movne	r3, #0
   1496c:	andeq	r3, r3, #1
   14970:	cmp	r3, #0
   14974:	beq	149b8 <dcngettext@plt+0x36ec>
   14978:	cmp	r7, fp
   1497c:	ldrhi	r2, [sp, #36]	; 0x24
   14980:	movhi	r1, #39	; 0x27
   14984:	strbhi	r1, [r2, fp]
   14988:	add	r2, fp, #1
   1498c:	cmp	r7, r2
   14990:	ldrhi	r1, [sp, #36]	; 0x24
   14994:	movhi	r0, #36	; 0x24
   14998:	strbhi	r0, [r1, r2]
   1499c:	add	r2, fp, #2
   149a0:	cmp	r7, r2
   149a4:	ldrhi	r1, [sp, #36]	; 0x24
   149a8:	movhi	r0, #39	; 0x27
   149ac:	strbhi	r0, [r1, r2]
   149b0:	add	fp, fp, #3
   149b4:	str	r3, [sp, #44]	; 0x2c
   149b8:	cmp	r7, fp
   149bc:	ldrhi	r3, [sp, #36]	; 0x24
   149c0:	movhi	r2, #92	; 0x5c
   149c4:	strbhi	r2, [r3, fp]
   149c8:	add	fp, fp, #1
   149cc:	cmp	fp, r7
   149d0:	ldrcc	r3, [sp, #36]	; 0x24
   149d4:	strbcc	r4, [r3, fp]
   149d8:	add	fp, fp, #1
   149dc:	ldr	r3, [sp, #40]	; 0x28
   149e0:	cmp	r8, #0
   149e4:	moveq	r3, #0
   149e8:	str	r3, [sp, #40]	; 0x28
   149ec:	add	r6, r6, #1
   149f0:	ldr	r3, [sp, #28]
   149f4:	cmn	r3, #1
   149f8:	beq	14f84 <dcngettext@plt+0x3cb8>
   149fc:	ldr	r3, [sp, #28]
   14a00:	subs	r8, r3, r6
   14a04:	movne	r8, #1
   14a08:	cmp	r8, #0
   14a0c:	beq	14f98 <dcngettext@plt+0x3ccc>
   14a10:	ldr	r5, [sp, #48]	; 0x30
   14a14:	cmp	sl, #2
   14a18:	moveq	r5, #0
   14a1c:	andne	r5, r5, #1
   14a20:	ldr	r3, [sp, #60]	; 0x3c
   14a24:	adds	r9, r3, #0
   14a28:	movne	r9, #1
   14a2c:	ands	r2, r5, r9
   14a30:	str	r2, [sp, #56]	; 0x38
   14a34:	beq	142fc <dcngettext@plt+0x3030>
   14a38:	add	r4, r6, r3
   14a3c:	ldr	r2, [sp, #28]
   14a40:	cmp	r3, #1
   14a44:	movls	r3, #0
   14a48:	movhi	r3, #1
   14a4c:	cmn	r2, #1
   14a50:	movne	r3, #0
   14a54:	cmp	r3, #0
   14a58:	beq	14a68 <dcngettext@plt+0x379c>
   14a5c:	ldr	r0, [sp, #52]	; 0x34
   14a60:	bl	1117c <strlen@plt>
   14a64:	str	r0, [sp, #28]
   14a68:	ldr	r3, [sp, #28]
   14a6c:	cmp	r3, r4
   14a70:	bcc	142f4 <dcngettext@plt+0x3028>
   14a74:	ldr	r2, [sp, #60]	; 0x3c
   14a78:	ldr	r1, [sp, #72]	; 0x48
   14a7c:	ldr	r3, [sp, #52]	; 0x34
   14a80:	add	r0, r3, r6
   14a84:	bl	1102c <memcmp@plt>
   14a88:	cmp	r0, #0
   14a8c:	bne	14514 <dcngettext@plt+0x3248>
   14a90:	ldr	r3, [sp, #32]
   14a94:	cmp	r3, #0
   14a98:	beq	142fc <dcngettext@plt+0x3030>
   14a9c:	mov	r8, sl
   14aa0:	mov	sl, r7
   14aa4:	b	150f4 <dcngettext@plt+0x3e28>
   14aa8:	mov	r8, sl
   14aac:	mov	sl, r7
   14ab0:	b	150f4 <dcngettext@plt+0x3e28>
   14ab4:	cmp	sl, #2
   14ab8:	strne	r8, [sp, #80]	; 0x50
   14abc:	movne	r5, #0
   14ac0:	bne	148f8 <dcngettext@plt+0x362c>
   14ac4:	ldr	r3, [sp, #32]
   14ac8:	cmp	r3, #0
   14acc:	bne	150e0 <dcngettext@plt+0x3e14>
   14ad0:	ldr	r2, [sp, #76]	; 0x4c
   14ad4:	adds	r3, r7, #0
   14ad8:	movne	r3, #1
   14adc:	cmp	r2, #0
   14ae0:	movne	r3, #0
   14ae4:	cmp	r3, #0
   14ae8:	movne	r3, #0
   14aec:	bne	14b1c <dcngettext@plt+0x3850>
   14af0:	cmp	r7, fp
   14af4:	ldrhi	r3, [sp, #36]	; 0x24
   14af8:	movhi	r2, #39	; 0x27
   14afc:	strbhi	r2, [r3, fp]
   14b00:	add	r3, fp, #1
   14b04:	cmp	r7, r3
   14b08:	ldrhi	r2, [sp, #36]	; 0x24
   14b0c:	movhi	r1, #92	; 0x5c
   14b10:	strbhi	r1, [r2, r3]
   14b14:	mov	r3, r7
   14b18:	ldr	r7, [sp, #76]	; 0x4c
   14b1c:	add	r2, fp, #2
   14b20:	cmp	r2, r3
   14b24:	ldrcc	r1, [sp, #36]	; 0x24
   14b28:	movcc	r0, #39	; 0x27
   14b2c:	strbcc	r0, [r1, r2]
   14b30:	add	fp, fp, #3
   14b34:	ldr	r2, [sp, #32]
   14b38:	mov	r5, r2
   14b3c:	str	r8, [sp, #80]	; 0x50
   14b40:	str	r2, [sp, #44]	; 0x2c
   14b44:	str	r7, [sp, #76]	; 0x4c
   14b48:	mov	r7, r3
   14b4c:	b	148f8 <dcngettext@plt+0x362c>
   14b50:	ldr	r5, [sp, #84]	; 0x54
   14b54:	cmp	r5, #1
   14b58:	beq	14b88 <dcngettext@plt+0x38bc>
   14b5c:	mov	r3, #0
   14b60:	str	r3, [sp, #104]	; 0x68
   14b64:	str	r3, [sp, #108]	; 0x6c
   14b68:	ldr	r3, [sp, #28]
   14b6c:	cmn	r3, #1
   14b70:	beq	14bbc <dcngettext@plt+0x38f0>
   14b74:	mov	r3, #0
   14b78:	str	r4, [sp, #88]	; 0x58
   14b7c:	str	fp, [sp, #92]	; 0x5c
   14b80:	mov	fp, r3
   14b84:	b	14ce4 <dcngettext@plt+0x3a18>
   14b88:	bl	11164 <__ctype_b_loc@plt>
   14b8c:	ldr	r2, [r0]
   14b90:	lsl	r3, r4, #1
   14b94:	ldrh	r8, [r2, r3]
   14b98:	lsr	r8, r8, #14
   14b9c:	and	r8, r8, #1
   14ba0:	mov	r2, r5
   14ba4:	eor	r5, r8, #1
   14ba8:	ldr	r3, [sp, #48]	; 0x30
   14bac:	and	r5, r5, r3
   14bb0:	ands	r5, r5, #255	; 0xff
   14bb4:	beq	148f8 <dcngettext@plt+0x362c>
   14bb8:	b	14d7c <dcngettext@plt+0x3ab0>
   14bbc:	ldr	r0, [sp, #52]	; 0x34
   14bc0:	bl	1117c <strlen@plt>
   14bc4:	str	r0, [sp, #28]
   14bc8:	b	14b74 <dcngettext@plt+0x38a8>
   14bcc:	mov	r2, fp
   14bd0:	mov	r1, r4
   14bd4:	ldr	r4, [sp, #88]	; 0x58
   14bd8:	ldr	fp, [sp, #92]	; 0x5c
   14bdc:	ldr	r0, [sp, #28]
   14be0:	cmp	r0, r5
   14be4:	bls	14db0 <dcngettext@plt+0x3ae4>
   14be8:	ldrb	r3, [r1]
   14bec:	cmp	r3, #0
   14bf0:	beq	14db8 <dcngettext@plt+0x3aec>
   14bf4:	mov	r3, r1
   14bf8:	add	r2, r2, #1
   14bfc:	add	r1, r6, r2
   14c00:	cmp	r0, r1
   14c04:	bls	14dc0 <dcngettext@plt+0x3af4>
   14c08:	ldrb	r1, [r3, #1]!
   14c0c:	cmp	r1, #0
   14c10:	bne	14bf8 <dcngettext@plt+0x392c>
   14c14:	mov	r8, #0
   14c18:	b	14d74 <dcngettext@plt+0x3aa8>
   14c1c:	cmp	r4, r5
   14c20:	beq	14cc0 <dcngettext@plt+0x39f4>
   14c24:	ldrb	r3, [r4, #1]!
   14c28:	sub	r3, r3, #91	; 0x5b
   14c2c:	cmp	r3, #33	; 0x21
   14c30:	ldrls	pc, [pc, r3, lsl #2]
   14c34:	b	14c1c <dcngettext@plt+0x3950>
   14c38:	andeq	r5, r1, ip, ror #1
   14c3c:	andeq	r5, r1, ip, ror #1
   14c40:	andeq	r4, r1, ip, lsl ip
   14c44:	andeq	r5, r1, ip, ror #1
   14c48:	andeq	r4, r1, ip, lsl ip
   14c4c:	andeq	r5, r1, ip, ror #1
   14c50:	andeq	r4, r1, ip, lsl ip
   14c54:	andeq	r4, r1, ip, lsl ip
   14c58:	andeq	r4, r1, ip, lsl ip
   14c5c:	andeq	r4, r1, ip, lsl ip
   14c60:	andeq	r4, r1, ip, lsl ip
   14c64:	andeq	r4, r1, ip, lsl ip
   14c68:	andeq	r4, r1, ip, lsl ip
   14c6c:	andeq	r4, r1, ip, lsl ip
   14c70:	andeq	r4, r1, ip, lsl ip
   14c74:	andeq	r4, r1, ip, lsl ip
   14c78:	andeq	r4, r1, ip, lsl ip
   14c7c:	andeq	r4, r1, ip, lsl ip
   14c80:	andeq	r4, r1, ip, lsl ip
   14c84:	andeq	r4, r1, ip, lsl ip
   14c88:	andeq	r4, r1, ip, lsl ip
   14c8c:	andeq	r4, r1, ip, lsl ip
   14c90:	andeq	r4, r1, ip, lsl ip
   14c94:	andeq	r4, r1, ip, lsl ip
   14c98:	andeq	r4, r1, ip, lsl ip
   14c9c:	andeq	r4, r1, ip, lsl ip
   14ca0:	andeq	r4, r1, ip, lsl ip
   14ca4:	andeq	r4, r1, ip, lsl ip
   14ca8:	andeq	r4, r1, ip, lsl ip
   14cac:	andeq	r4, r1, ip, lsl ip
   14cb0:	andeq	r4, r1, ip, lsl ip
   14cb4:	andeq	r4, r1, ip, lsl ip
   14cb8:	andeq	r4, r1, ip, lsl ip
   14cbc:	andeq	r5, r1, ip, ror #1
   14cc0:	ldr	r0, [sp, #100]	; 0x64
   14cc4:	bl	11080 <iswprint@plt>
   14cc8:	cmp	r0, #0
   14ccc:	moveq	r8, #0
   14cd0:	add	fp, fp, r9
   14cd4:	add	r0, sp, #104	; 0x68
   14cd8:	bl	11014 <mbsinit@plt>
   14cdc:	cmp	r0, #0
   14ce0:	bne	14d54 <dcngettext@plt+0x3a88>
   14ce4:	add	r5, r6, fp
   14ce8:	ldr	r3, [sp, #52]	; 0x34
   14cec:	add	r4, r3, r5
   14cf0:	add	r3, sp, #104	; 0x68
   14cf4:	ldr	r2, [sp, #28]
   14cf8:	sub	r2, r2, r5
   14cfc:	mov	r1, r4
   14d00:	add	r0, sp, #100	; 0x64
   14d04:	bl	16d0c <dcngettext@plt+0x5a40>
   14d08:	subs	r9, r0, #0
   14d0c:	beq	14dc8 <dcngettext@plt+0x3afc>
   14d10:	cmn	r9, #1
   14d14:	beq	14d64 <dcngettext@plt+0x3a98>
   14d18:	cmn	r9, #2
   14d1c:	beq	14bcc <dcngettext@plt+0x3900>
   14d20:	ldr	r3, [sp, #32]
   14d24:	cmp	sl, #2
   14d28:	movne	r3, #0
   14d2c:	andeq	r3, r3, #1
   14d30:	cmp	r3, #0
   14d34:	beq	14cc0 <dcngettext@plt+0x39f4>
   14d38:	cmp	r9, #1
   14d3c:	bls	14cc0 <dcngettext@plt+0x39f4>
   14d40:	sub	r3, r9, #1
   14d44:	add	r5, r3, r5
   14d48:	ldr	r3, [sp, #52]	; 0x34
   14d4c:	add	r5, r3, r5
   14d50:	b	14c24 <dcngettext@plt+0x3958>
   14d54:	ldr	r4, [sp, #88]	; 0x58
   14d58:	mov	r2, fp
   14d5c:	ldr	fp, [sp, #92]	; 0x5c
   14d60:	b	14d74 <dcngettext@plt+0x3aa8>
   14d64:	ldr	r4, [sp, #88]	; 0x58
   14d68:	mov	r2, fp
   14d6c:	ldr	fp, [sp, #92]	; 0x5c
   14d70:	mov	r8, #0
   14d74:	cmp	r2, #1
   14d78:	bls	14ba4 <dcngettext@plt+0x38d8>
   14d7c:	add	r1, r6, r2
   14d80:	ldr	ip, [sp, #64]	; 0x40
   14d84:	mov	r5, #0
   14d88:	eor	r3, r8, #1
   14d8c:	ldr	r2, [sp, #48]	; 0x30
   14d90:	and	r3, r3, r2
   14d94:	uxtb	r3, r3
   14d98:	ldr	r9, [sp, #32]
   14d9c:	ldr	lr, [sp, #44]	; 0x2c
   14da0:	ldr	r2, [sp, #56]	; 0x38
   14da4:	str	r8, [sp, #56]	; 0x38
   14da8:	ldr	r0, [sp, #36]	; 0x24
   14dac:	b	14e48 <dcngettext@plt+0x3b7c>
   14db0:	mov	r8, #0
   14db4:	b	14d74 <dcngettext@plt+0x3aa8>
   14db8:	mov	r8, #0
   14dbc:	b	14d74 <dcngettext@plt+0x3aa8>
   14dc0:	mov	r8, #0
   14dc4:	b	14d74 <dcngettext@plt+0x3aa8>
   14dc8:	ldr	r4, [sp, #88]	; 0x58
   14dcc:	mov	r2, fp
   14dd0:	ldr	fp, [sp, #92]	; 0x5c
   14dd4:	b	14d74 <dcngettext@plt+0x3aa8>
   14dd8:	cmp	r2, #0
   14ddc:	beq	14df0 <dcngettext@plt+0x3b24>
   14de0:	cmp	r7, fp
   14de4:	movhi	r2, #92	; 0x5c
   14de8:	strbhi	r2, [r0, fp]
   14dec:	add	fp, fp, #1
   14df0:	add	r8, r6, #1
   14df4:	cmp	r1, r8
   14df8:	bls	14f00 <dcngettext@plt+0x3c34>
   14dfc:	eor	r2, r5, #1
   14e00:	and	r2, r2, lr
   14e04:	ands	r2, r2, #255	; 0xff
   14e08:	beq	14f1c <dcngettext@plt+0x3c50>
   14e0c:	cmp	r7, fp
   14e10:	movhi	r2, #39	; 0x27
   14e14:	strbhi	r2, [r0, fp]
   14e18:	add	r2, fp, #1
   14e1c:	cmp	r7, r2
   14e20:	movhi	lr, #39	; 0x27
   14e24:	strbhi	lr, [r0, r2]
   14e28:	add	fp, fp, #2
   14e2c:	mov	r6, r8
   14e30:	mov	r2, r3
   14e34:	mov	lr, r3
   14e38:	cmp	r7, fp
   14e3c:	strbhi	r4, [r0, fp]
   14e40:	add	fp, fp, #1
   14e44:	ldrb	r4, [ip, #1]!
   14e48:	cmp	r3, #0
   14e4c:	beq	14dd8 <dcngettext@plt+0x3b0c>
   14e50:	cmp	r9, #0
   14e54:	bne	15158 <dcngettext@plt+0x3e8c>
   14e58:	eor	r5, lr, #1
   14e5c:	cmp	sl, #2
   14e60:	movne	r5, #0
   14e64:	andeq	r5, r5, #1
   14e68:	cmp	r5, #0
   14e6c:	beq	14ea4 <dcngettext@plt+0x3bd8>
   14e70:	cmp	r7, fp
   14e74:	movhi	lr, #39	; 0x27
   14e78:	strbhi	lr, [r0, fp]
   14e7c:	add	lr, fp, #1
   14e80:	cmp	r7, lr
   14e84:	movhi	r8, #36	; 0x24
   14e88:	strbhi	r8, [r0, lr]
   14e8c:	add	lr, fp, #2
   14e90:	cmp	r7, lr
   14e94:	movhi	r8, #39	; 0x27
   14e98:	strbhi	r8, [r0, lr]
   14e9c:	add	fp, fp, #3
   14ea0:	mov	lr, r5
   14ea4:	cmp	r7, fp
   14ea8:	movhi	r5, #92	; 0x5c
   14eac:	strbhi	r5, [r0, fp]
   14eb0:	add	r5, fp, #1
   14eb4:	cmp	r7, r5
   14eb8:	lsrhi	r8, r4, #6
   14ebc:	addhi	r8, r8, #48	; 0x30
   14ec0:	strbhi	r8, [r0, r5]
   14ec4:	add	r8, fp, #2
   14ec8:	cmp	r7, r8
   14ecc:	lsrhi	r5, r4, #3
   14ed0:	andhi	r5, r5, #7
   14ed4:	addhi	r5, r5, #48	; 0x30
   14ed8:	strbhi	r5, [r0, r8]
   14edc:	add	fp, fp, #3
   14ee0:	and	r4, r4, #7
   14ee4:	add	r4, r4, #48	; 0x30
   14ee8:	add	r5, r6, #1
   14eec:	cmp	r1, r5
   14ef0:	bls	14f0c <dcngettext@plt+0x3c40>
   14ef4:	mov	r6, r5
   14ef8:	mov	r5, r3
   14efc:	b	14e38 <dcngettext@plt+0x3b6c>
   14f00:	str	lr, [sp, #44]	; 0x2c
   14f04:	ldr	r8, [sp, #56]	; 0x38
   14f08:	b	147dc <dcngettext@plt+0x3510>
   14f0c:	str	lr, [sp, #44]	; 0x2c
   14f10:	ldr	r8, [sp, #56]	; 0x38
   14f14:	mov	r5, r3
   14f18:	b	147dc <dcngettext@plt+0x3510>
   14f1c:	mov	r6, r8
   14f20:	b	14e38 <dcngettext@plt+0x3b6c>
   14f24:	mov	r5, #0
   14f28:	b	148f8 <dcngettext@plt+0x362c>
   14f2c:	mov	r8, r5
   14f30:	ldr	r5, [sp, #48]	; 0x30
   14f34:	mov	r4, #48	; 0x30
   14f38:	b	148f8 <dcngettext@plt+0x362c>
   14f3c:	ldr	r8, [sp, #32]
   14f40:	mov	r4, #48	; 0x30
   14f44:	b	148f8 <dcngettext@plt+0x362c>
   14f48:	ldr	r8, [sp, #32]
   14f4c:	mov	r4, #48	; 0x30
   14f50:	b	148f8 <dcngettext@plt+0x362c>
   14f54:	mov	r8, #0
   14f58:	mov	r5, r8
   14f5c:	b	148f8 <dcngettext@plt+0x362c>
   14f60:	mov	r8, #0
   14f64:	mov	r5, r8
   14f68:	b	148f8 <dcngettext@plt+0x362c>
   14f6c:	mov	r8, #0
   14f70:	mov	r5, r8
   14f74:	b	148f8 <dcngettext@plt+0x362c>
   14f78:	mov	r8, #0
   14f7c:	mov	r5, r8
   14f80:	b	148f8 <dcngettext@plt+0x362c>
   14f84:	ldr	r3, [sp, #52]	; 0x34
   14f88:	ldrb	r8, [r3, r6]
   14f8c:	adds	r8, r8, #0
   14f90:	movne	r8, #1
   14f94:	b	14a08 <dcngettext@plt+0x373c>
   14f98:	cmp	sl, #2
   14f9c:	movne	r3, #0
   14fa0:	moveq	r3, #1
   14fa4:	ldr	r1, [sp, #32]
   14fa8:	mov	r2, r1
   14fac:	and	r2, r2, r3
   14fb0:	cmp	fp, #0
   14fb4:	movne	r2, #0
   14fb8:	andeq	r2, r2, #1
   14fbc:	cmp	r2, #0
   14fc0:	bne	15170 <dcngettext@plt+0x3ea4>
   14fc4:	eor	r2, r1, #1
   14fc8:	and	r3, r3, r2
   14fcc:	ldr	r1, [sp, #80]	; 0x50
   14fd0:	tst	r1, r3
   14fd4:	beq	1504c <dcngettext@plt+0x3d80>
   14fd8:	ldr	r3, [sp, #40]	; 0x28
   14fdc:	cmp	r3, #0
   14fe0:	bne	15008 <dcngettext@plt+0x3d3c>
   14fe4:	ldr	r1, [sp, #76]	; 0x4c
   14fe8:	clz	r3, r7
   14fec:	lsr	r3, r3, #5
   14ff0:	cmp	r1, #0
   14ff4:	moveq	r3, #0
   14ff8:	cmp	r3, #0
   14ffc:	beq	1504c <dcngettext@plt+0x3d80>
   15000:	ldr	r7, [sp, #76]	; 0x4c
   15004:	b	1409c <dcngettext@plt+0x2dd0>
   15008:	ldr	r3, [sp, #168]	; 0xa8
   1500c:	str	r3, [sp, #16]
   15010:	ldr	r3, [sp, #164]	; 0xa4
   15014:	str	r3, [sp, #12]
   15018:	ldr	r3, [sp, #160]	; 0xa0
   1501c:	str	r3, [sp, #8]
   15020:	ldr	r3, [sp, #156]	; 0x9c
   15024:	str	r3, [sp, #4]
   15028:	mov	r3, #5
   1502c:	str	r3, [sp]
   15030:	ldr	r3, [sp, #28]
   15034:	ldr	r2, [sp, #52]	; 0x34
   15038:	ldr	r1, [sp, #76]	; 0x4c
   1503c:	ldr	r0, [sp, #36]	; 0x24
   15040:	bl	1403c <dcngettext@plt+0x2d70>
   15044:	mov	fp, r0
   15048:	b	1514c <dcngettext@plt+0x3e80>
   1504c:	mov	sl, r7
   15050:	ldr	r3, [sp, #72]	; 0x48
   15054:	cmp	r3, #0
   15058:	moveq	r2, #0
   1505c:	andne	r2, r2, #1
   15060:	cmp	r2, #0
   15064:	beq	15094 <dcngettext@plt+0x3dc8>
   15068:	mov	r2, r3
   1506c:	ldrb	r3, [r3]
   15070:	cmp	r3, #0
   15074:	beq	15094 <dcngettext@plt+0x3dc8>
   15078:	ldr	r1, [sp, #36]	; 0x24
   1507c:	cmp	sl, fp
   15080:	strbhi	r3, [r1, fp]
   15084:	add	fp, fp, #1
   15088:	ldrb	r3, [r2, #1]!
   1508c:	cmp	r3, #0
   15090:	bne	1507c <dcngettext@plt+0x3db0>
   15094:	cmp	sl, fp
   15098:	movhi	r3, #0
   1509c:	ldrhi	r2, [sp, #36]	; 0x24
   150a0:	strbhi	r3, [r2, fp]
   150a4:	b	1514c <dcngettext@plt+0x3e80>
   150a8:	mov	r8, sl
   150ac:	mov	sl, r7
   150b0:	ldr	r3, [sp, #32]
   150b4:	str	r3, [sp, #48]	; 0x30
   150b8:	b	150f4 <dcngettext@plt+0x3e28>
   150bc:	mov	r8, sl
   150c0:	mov	sl, r7
   150c4:	b	150f4 <dcngettext@plt+0x3e28>
   150c8:	mov	r8, sl
   150cc:	mov	sl, r7
   150d0:	b	150f4 <dcngettext@plt+0x3e28>
   150d4:	andeq	r7, r1, ip, lsl fp
   150d8:	andeq	r7, r1, ip, lsr #22
   150dc:	andeq	r7, r1, r0, lsr #22
   150e0:	mov	r8, sl
   150e4:	mov	sl, r7
   150e8:	b	150f4 <dcngettext@plt+0x3e28>
   150ec:	mov	r8, sl
   150f0:	mov	sl, r7
   150f4:	ldr	r3, [sp, #48]	; 0x30
   150f8:	cmp	r8, #2
   150fc:	movne	r3, #0
   15100:	andeq	r3, r3, #1
   15104:	cmp	r3, #0
   15108:	movne	r8, #4
   1510c:	ldr	r3, [sp, #168]	; 0xa8
   15110:	str	r3, [sp, #16]
   15114:	ldr	r3, [sp, #164]	; 0xa4
   15118:	str	r3, [sp, #12]
   1511c:	mov	r3, #0
   15120:	str	r3, [sp, #8]
   15124:	ldr	r3, [sp, #156]	; 0x9c
   15128:	bic	r3, r3, #2
   1512c:	str	r3, [sp, #4]
   15130:	str	r8, [sp]
   15134:	ldr	r3, [sp, #28]
   15138:	ldr	r2, [sp, #52]	; 0x34
   1513c:	mov	r1, sl
   15140:	ldr	r0, [sp, #36]	; 0x24
   15144:	bl	1403c <dcngettext@plt+0x2d70>
   15148:	mov	fp, r0
   1514c:	mov	r0, fp
   15150:	add	sp, sp, #116	; 0x74
   15154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15158:	mov	r8, sl
   1515c:	mov	sl, r7
   15160:	b	150f4 <dcngettext@plt+0x3e28>
   15164:	mov	r8, sl
   15168:	mov	sl, r7
   1516c:	b	150f4 <dcngettext@plt+0x3e28>
   15170:	mov	r8, sl
   15174:	mov	sl, r7
   15178:	b	150f4 <dcngettext@plt+0x3e28>
   1517c:	mov	r8, sl
   15180:	mov	sl, r7
   15184:	b	1510c <dcngettext@plt+0x3e40>
   15188:	mov	r3, #1
   1518c:	str	r3, [sp, #32]
   15190:	str	r3, [sp, #48]	; 0x30
   15194:	str	r3, [sp, #60]	; 0x3c
   15198:	ldr	r3, [pc, #-196]	; 150dc <dcngettext@plt+0x3e10>
   1519c:	str	r3, [sp, #72]	; 0x48
   151a0:	mov	fp, #0
   151a4:	mov	sl, #5
   151a8:	b	140f8 <dcngettext@plt+0x2e2c>
   151ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151b0:	sub	sp, sp, #52	; 0x34
   151b4:	mov	r5, r0
   151b8:	str	r1, [sp, #24]
   151bc:	str	r2, [sp, #28]
   151c0:	mov	r4, r3
   151c4:	bl	11194 <__errno_location@plt>
   151c8:	str	r0, [sp, #32]
   151cc:	ldr	r3, [r0]
   151d0:	str	r3, [sp, #36]	; 0x24
   151d4:	ldr	r3, [pc, #396]	; 15368 <dcngettext@plt+0x409c>
   151d8:	ldr	r6, [r3]
   151dc:	cmn	r5, #-2147483647	; 0x80000001
   151e0:	movne	r3, #0
   151e4:	moveq	r3, #1
   151e8:	orrs	r3, r3, r5, lsr #31
   151ec:	bne	1532c <dcngettext@plt+0x4060>
   151f0:	ldr	r3, [pc, #368]	; 15368 <dcngettext@plt+0x409c>
   151f4:	ldr	r2, [r3, #4]
   151f8:	cmp	r5, r2
   151fc:	blt	15264 <dcngettext@plt+0x3f98>
   15200:	str	r2, [sp, #44]	; 0x2c
   15204:	add	r3, r3, #8
   15208:	cmp	r6, r3
   1520c:	beq	15330 <dcngettext@plt+0x4064>
   15210:	sub	r2, r5, r2
   15214:	mov	r3, #8
   15218:	str	r3, [sp]
   1521c:	mvn	r3, #-2147483648	; 0x80000000
   15220:	add	r2, r2, #1
   15224:	add	r1, sp, #44	; 0x2c
   15228:	mov	r0, r6
   1522c:	bl	16700 <dcngettext@plt+0x5434>
   15230:	mov	r6, r0
   15234:	ldr	r3, [pc, #300]	; 15368 <dcngettext@plt+0x409c>
   15238:	str	r0, [r3]
   1523c:	ldr	r7, [pc, #292]	; 15368 <dcngettext@plt+0x409c>
   15240:	ldr	r0, [r7, #4]
   15244:	ldr	r2, [sp, #44]	; 0x2c
   15248:	sub	r2, r2, r0
   1524c:	lsl	r2, r2, #3
   15250:	mov	r1, #0
   15254:	add	r0, r6, r0, lsl #3
   15258:	bl	111ac <memset@plt>
   1525c:	ldr	r3, [sp, #44]	; 0x2c
   15260:	str	r3, [r7, #4]
   15264:	add	fp, r6, r5, lsl #3
   15268:	ldr	r8, [r6, r5, lsl #3]
   1526c:	ldr	r7, [fp, #4]
   15270:	ldr	r9, [r4, #4]
   15274:	orr	r9, r9, #1
   15278:	add	sl, r4, #8
   1527c:	ldr	r3, [r4, #44]	; 0x2c
   15280:	str	r3, [sp, #16]
   15284:	ldr	r3, [r4, #40]	; 0x28
   15288:	str	r3, [sp, #12]
   1528c:	str	sl, [sp, #8]
   15290:	str	r9, [sp, #4]
   15294:	ldr	r3, [r4]
   15298:	str	r3, [sp]
   1529c:	ldr	r3, [sp, #28]
   152a0:	ldr	r2, [sp, #24]
   152a4:	mov	r1, r8
   152a8:	mov	r0, r7
   152ac:	bl	1403c <dcngettext@plt+0x2d70>
   152b0:	cmp	r8, r0
   152b4:	bhi	15314 <dcngettext@plt+0x4048>
   152b8:	add	r8, r0, #1
   152bc:	str	r8, [r6, r5, lsl #3]
   152c0:	ldr	r3, [pc, #164]	; 1536c <dcngettext@plt+0x40a0>
   152c4:	cmp	r7, r3
   152c8:	beq	152d4 <dcngettext@plt+0x4008>
   152cc:	mov	r0, r7
   152d0:	bl	16c80 <dcngettext@plt+0x59b4>
   152d4:	mov	r0, r8
   152d8:	bl	1657c <dcngettext@plt+0x52b0>
   152dc:	mov	r7, r0
   152e0:	str	r0, [fp, #4]
   152e4:	ldr	r3, [r4, #44]	; 0x2c
   152e8:	str	r3, [sp, #16]
   152ec:	ldr	r3, [r4, #40]	; 0x28
   152f0:	str	r3, [sp, #12]
   152f4:	str	sl, [sp, #8]
   152f8:	str	r9, [sp, #4]
   152fc:	ldr	r3, [r4]
   15300:	str	r3, [sp]
   15304:	ldr	r3, [sp, #28]
   15308:	ldr	r2, [sp, #24]
   1530c:	mov	r1, r8
   15310:	bl	1403c <dcngettext@plt+0x2d70>
   15314:	ldr	r3, [sp, #32]
   15318:	ldr	r2, [sp, #36]	; 0x24
   1531c:	str	r2, [r3]
   15320:	mov	r0, r7
   15324:	add	sp, sp, #52	; 0x34
   15328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1532c:	bl	112b4 <abort@plt>
   15330:	sub	r2, r5, r2
   15334:	mov	r3, #8
   15338:	str	r3, [sp]
   1533c:	mvn	r3, #-2147483648	; 0x80000000
   15340:	add	r2, r2, #1
   15344:	add	r1, sp, #44	; 0x2c
   15348:	mov	r0, #0
   1534c:	bl	16700 <dcngettext@plt+0x5434>
   15350:	mov	r6, r0
   15354:	ldr	r3, [pc, #12]	; 15368 <dcngettext@plt+0x409c>
   15358:	str	r0, [r3], #8
   1535c:	ldm	r3, {r0, r1}
   15360:	stm	r6, {r0, r1}
   15364:	b	1523c <dcngettext@plt+0x3f70>
   15368:	andeq	r8, r2, r8, lsr r1
   1536c:	andeq	r8, r2, r8, lsr #3
   15370:	push	{r4, r5, r6, lr}
   15374:	mov	r4, r0
   15378:	bl	11194 <__errno_location@plt>
   1537c:	mov	r5, r0
   15380:	ldr	r6, [r0]
   15384:	cmp	r4, #0
   15388:	ldr	r3, [pc, #20]	; 153a4 <dcngettext@plt+0x40d8>
   1538c:	moveq	r4, r3
   15390:	mov	r1, #48	; 0x30
   15394:	mov	r0, r4
   15398:	bl	16a68 <dcngettext@plt+0x579c>
   1539c:	str	r6, [r5]
   153a0:	pop	{r4, r5, r6, pc}
   153a4:	andeq	r8, r2, r8, lsr #5
   153a8:	subs	r3, r0, #0
   153ac:	ldr	r2, [pc, #8]	; 153bc <dcngettext@plt+0x40f0>
   153b0:	moveq	r3, r2
   153b4:	ldr	r0, [r3]
   153b8:	bx	lr
   153bc:	andeq	r8, r2, r8, lsr #5
   153c0:	subs	r3, r0, #0
   153c4:	ldr	r2, [pc, #8]	; 153d4 <dcngettext@plt+0x4108>
   153c8:	moveq	r3, r2
   153cc:	str	r1, [r3]
   153d0:	bx	lr
   153d4:	andeq	r8, r2, r8, lsr #5
   153d8:	push	{lr}		; (str lr, [sp, #-4]!)
   153dc:	subs	r3, r0, #0
   153e0:	ldr	r0, [pc, #44]	; 15414 <dcngettext@plt+0x4148>
   153e4:	moveq	r3, r0
   153e8:	add	r3, r3, #8
   153ec:	lsr	lr, r1, #5
   153f0:	and	r1, r1, #31
   153f4:	ldr	ip, [r3, lr, lsl #2]
   153f8:	lsr	r0, ip, r1
   153fc:	eor	r2, r2, r0
   15400:	and	r2, r2, #1
   15404:	eor	r1, ip, r2, lsl r1
   15408:	str	r1, [r3, lr, lsl #2]
   1540c:	and	r0, r0, #1
   15410:	pop	{pc}		; (ldr pc, [sp], #4)
   15414:	andeq	r8, r2, r8, lsr #5
   15418:	subs	r3, r0, #0
   1541c:	ldr	r2, [pc, #12]	; 15430 <dcngettext@plt+0x4164>
   15420:	moveq	r3, r2
   15424:	ldr	r0, [r3, #4]
   15428:	str	r1, [r3, #4]
   1542c:	bx	lr
   15430:	andeq	r8, r2, r8, lsr #5
   15434:	subs	r3, r0, #0
   15438:	ldr	r0, [pc, #40]	; 15468 <dcngettext@plt+0x419c>
   1543c:	moveq	r3, r0
   15440:	mov	r0, #10
   15444:	str	r0, [r3]
   15448:	cmp	r2, #0
   1544c:	cmpne	r1, #0
   15450:	beq	15460 <dcngettext@plt+0x4194>
   15454:	str	r1, [r3, #40]	; 0x28
   15458:	str	r2, [r3, #44]	; 0x2c
   1545c:	bx	lr
   15460:	push	{r4, lr}
   15464:	bl	112b4 <abort@plt>
   15468:	andeq	r8, r2, r8, lsr #5
   1546c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15470:	sub	sp, sp, #24
   15474:	mov	r7, r0
   15478:	mov	r8, r1
   1547c:	mov	r9, r2
   15480:	mov	sl, r3
   15484:	ldr	r4, [sp, #56]	; 0x38
   15488:	cmp	r4, #0
   1548c:	ldr	r3, [pc, #84]	; 154e8 <dcngettext@plt+0x421c>
   15490:	moveq	r4, r3
   15494:	bl	11194 <__errno_location@plt>
   15498:	mov	r5, r0
   1549c:	ldr	r6, [r0]
   154a0:	ldr	r3, [r4, #44]	; 0x2c
   154a4:	str	r3, [sp, #16]
   154a8:	ldr	r3, [r4, #40]	; 0x28
   154ac:	str	r3, [sp, #12]
   154b0:	add	r3, r4, #8
   154b4:	str	r3, [sp, #8]
   154b8:	ldr	r3, [r4, #4]
   154bc:	str	r3, [sp, #4]
   154c0:	ldr	r3, [r4]
   154c4:	str	r3, [sp]
   154c8:	mov	r3, sl
   154cc:	mov	r2, r9
   154d0:	mov	r1, r8
   154d4:	mov	r0, r7
   154d8:	bl	1403c <dcngettext@plt+0x2d70>
   154dc:	str	r6, [r5]
   154e0:	add	sp, sp, #24
   154e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154e8:	andeq	r8, r2, r8, lsr #5
   154ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154f0:	sub	sp, sp, #44	; 0x2c
   154f4:	str	r0, [sp, #28]
   154f8:	str	r1, [sp, #32]
   154fc:	mov	r6, r2
   15500:	subs	r4, r3, #0
   15504:	ldr	r3, [pc, #172]	; 155b8 <dcngettext@plt+0x42ec>
   15508:	moveq	r4, r3
   1550c:	bl	11194 <__errno_location@plt>
   15510:	mov	r7, r0
   15514:	ldr	fp, [r0]
   15518:	ldr	r5, [r4, #4]
   1551c:	cmp	r6, #0
   15520:	orreq	r5, r5, #1
   15524:	add	r9, r4, #8
   15528:	ldr	r3, [r4, #44]	; 0x2c
   1552c:	str	r3, [sp, #16]
   15530:	ldr	r3, [r4, #40]	; 0x28
   15534:	str	r3, [sp, #12]
   15538:	str	r9, [sp, #8]
   1553c:	str	r5, [sp, #4]
   15540:	ldr	r3, [r4]
   15544:	str	r3, [sp]
   15548:	ldr	r3, [sp, #32]
   1554c:	ldr	r2, [sp, #28]
   15550:	mov	r1, #0
   15554:	mov	r0, r1
   15558:	bl	1403c <dcngettext@plt+0x2d70>
   1555c:	mov	sl, r0
   15560:	add	r8, r0, #1
   15564:	mov	r0, r8
   15568:	bl	1657c <dcngettext@plt+0x52b0>
   1556c:	str	r0, [sp, #36]	; 0x24
   15570:	ldr	r3, [r4, #44]	; 0x2c
   15574:	str	r3, [sp, #16]
   15578:	ldr	r3, [r4, #40]	; 0x28
   1557c:	str	r3, [sp, #12]
   15580:	str	r9, [sp, #8]
   15584:	str	r5, [sp, #4]
   15588:	ldr	r3, [r4]
   1558c:	str	r3, [sp]
   15590:	ldr	r3, [sp, #32]
   15594:	ldr	r2, [sp, #28]
   15598:	mov	r1, r8
   1559c:	bl	1403c <dcngettext@plt+0x2d70>
   155a0:	str	fp, [r7]
   155a4:	cmp	r6, #0
   155a8:	strne	sl, [r6]
   155ac:	ldr	r0, [sp, #36]	; 0x24
   155b0:	add	sp, sp, #44	; 0x2c
   155b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155b8:	andeq	r8, r2, r8, lsr #5
   155bc:	push	{r4, lr}
   155c0:	mov	r3, r2
   155c4:	mov	r2, #0
   155c8:	bl	154ec <dcngettext@plt+0x4220>
   155cc:	pop	{r4, pc}
   155d0:	push	{r4, r5, r6, r7, r8, lr}
   155d4:	ldr	r3, [pc, #140]	; 15668 <dcngettext@plt+0x439c>
   155d8:	ldr	r7, [r3]
   155dc:	ldr	r3, [r3, #4]
   155e0:	cmp	r3, #1
   155e4:	ble	15610 <dcngettext@plt+0x4344>
   155e8:	mov	r5, r7
   155ec:	mov	r4, #1
   155f0:	ldr	r6, [pc, #112]	; 15668 <dcngettext@plt+0x439c>
   155f4:	ldr	r0, [r5, #12]
   155f8:	bl	16c80 <dcngettext@plt+0x59b4>
   155fc:	add	r4, r4, #1
   15600:	add	r5, r5, #8
   15604:	ldr	r3, [r6, #4]
   15608:	cmp	r3, r4
   1560c:	bgt	155f4 <dcngettext@plt+0x4328>
   15610:	ldr	r0, [r7, #4]
   15614:	ldr	r3, [pc, #80]	; 1566c <dcngettext@plt+0x43a0>
   15618:	cmp	r0, r3
   1561c:	beq	15638 <dcngettext@plt+0x436c>
   15620:	bl	16c80 <dcngettext@plt+0x59b4>
   15624:	ldr	r3, [pc, #60]	; 15668 <dcngettext@plt+0x439c>
   15628:	mov	r2, #256	; 0x100
   1562c:	str	r2, [r3, #8]
   15630:	ldr	r2, [pc, #52]	; 1566c <dcngettext@plt+0x43a0>
   15634:	str	r2, [r3, #12]
   15638:	ldr	r3, [pc, #48]	; 15670 <dcngettext@plt+0x43a4>
   1563c:	cmp	r7, r3
   15640:	beq	15658 <dcngettext@plt+0x438c>
   15644:	mov	r0, r7
   15648:	bl	16c80 <dcngettext@plt+0x59b4>
   1564c:	ldr	r3, [pc, #20]	; 15668 <dcngettext@plt+0x439c>
   15650:	add	r2, r3, #8
   15654:	str	r2, [r3]
   15658:	mov	r2, #1
   1565c:	ldr	r3, [pc, #4]	; 15668 <dcngettext@plt+0x439c>
   15660:	str	r2, [r3, #4]
   15664:	pop	{r4, r5, r6, r7, r8, pc}
   15668:	andeq	r8, r2, r8, lsr r1
   1566c:	andeq	r8, r2, r8, lsr #3
   15670:	andeq	r8, r2, r0, asr #2
   15674:	push	{r4, lr}
   15678:	ldr	r3, [pc, #8]	; 15688 <dcngettext@plt+0x43bc>
   1567c:	mvn	r2, #0
   15680:	bl	151ac <dcngettext@plt+0x3ee0>
   15684:	pop	{r4, pc}
   15688:	andeq	r8, r2, r8, lsr #5
   1568c:	push	{r4, lr}
   15690:	ldr	r3, [pc, #4]	; 1569c <dcngettext@plt+0x43d0>
   15694:	bl	151ac <dcngettext@plt+0x3ee0>
   15698:	pop	{r4, pc}
   1569c:	andeq	r8, r2, r8, lsr #5
   156a0:	push	{r4, lr}
   156a4:	mov	r1, r0
   156a8:	mov	r0, #0
   156ac:	bl	15674 <dcngettext@plt+0x43a8>
   156b0:	pop	{r4, pc}
   156b4:	push	{r4, lr}
   156b8:	mov	r2, r1
   156bc:	mov	r1, r0
   156c0:	mov	r0, #0
   156c4:	bl	1568c <dcngettext@plt+0x43c0>
   156c8:	pop	{r4, pc}
   156cc:	push	{r4, r5, lr}
   156d0:	sub	sp, sp, #52	; 0x34
   156d4:	mov	r4, r0
   156d8:	mov	r5, r2
   156dc:	mov	r0, sp
   156e0:	bl	13ed4 <dcngettext@plt+0x2c08>
   156e4:	mov	r3, sp
   156e8:	mvn	r2, #0
   156ec:	mov	r1, r5
   156f0:	mov	r0, r4
   156f4:	bl	151ac <dcngettext@plt+0x3ee0>
   156f8:	add	sp, sp, #52	; 0x34
   156fc:	pop	{r4, r5, pc}
   15700:	push	{r4, r5, r6, lr}
   15704:	sub	sp, sp, #48	; 0x30
   15708:	mov	r4, r0
   1570c:	mov	r5, r2
   15710:	mov	r6, r3
   15714:	mov	r0, sp
   15718:	bl	13ed4 <dcngettext@plt+0x2c08>
   1571c:	mov	r3, sp
   15720:	mov	r2, r6
   15724:	mov	r1, r5
   15728:	mov	r0, r4
   1572c:	bl	151ac <dcngettext@plt+0x3ee0>
   15730:	add	sp, sp, #48	; 0x30
   15734:	pop	{r4, r5, r6, pc}
   15738:	push	{r4, lr}
   1573c:	mov	r2, r1
   15740:	mov	r1, r0
   15744:	mov	r0, #0
   15748:	bl	156cc <dcngettext@plt+0x4400>
   1574c:	pop	{r4, pc}
   15750:	push	{r4, lr}
   15754:	mov	r3, r2
   15758:	mov	r2, r1
   1575c:	mov	r1, r0
   15760:	mov	r0, #0
   15764:	bl	15700 <dcngettext@plt+0x4434>
   15768:	pop	{r4, pc}
   1576c:	push	{r4, r5, r6, lr}
   15770:	sub	sp, sp, #48	; 0x30
   15774:	mov	r4, r0
   15778:	mov	r5, r1
   1577c:	mov	r6, r2
   15780:	mov	ip, sp
   15784:	ldr	lr, [pc, #64]	; 157cc <dcngettext@plt+0x4500>
   15788:	ldm	lr!, {r0, r1, r2, r3}
   1578c:	stmia	ip!, {r0, r1, r2, r3}
   15790:	ldm	lr!, {r0, r1, r2, r3}
   15794:	stmia	ip!, {r0, r1, r2, r3}
   15798:	ldm	lr, {r0, r1, r2, r3}
   1579c:	stm	ip, {r0, r1, r2, r3}
   157a0:	mov	r2, #1
   157a4:	mov	r1, r6
   157a8:	mov	r0, sp
   157ac:	bl	153d8 <dcngettext@plt+0x410c>
   157b0:	mov	r3, sp
   157b4:	mov	r2, r5
   157b8:	mov	r1, r4
   157bc:	mov	r0, #0
   157c0:	bl	151ac <dcngettext@plt+0x3ee0>
   157c4:	add	sp, sp, #48	; 0x30
   157c8:	pop	{r4, r5, r6, pc}
   157cc:	andeq	r8, r2, r8, lsr #5
   157d0:	push	{r4, lr}
   157d4:	mov	r2, r1
   157d8:	mvn	r1, #0
   157dc:	bl	1576c <dcngettext@plt+0x44a0>
   157e0:	pop	{r4, pc}
   157e4:	push	{r4, lr}
   157e8:	mov	r1, #58	; 0x3a
   157ec:	bl	157d0 <dcngettext@plt+0x4504>
   157f0:	pop	{r4, pc}
   157f4:	push	{r4, lr}
   157f8:	mov	r2, #58	; 0x3a
   157fc:	bl	1576c <dcngettext@plt+0x44a0>
   15800:	pop	{r4, pc}
   15804:	push	{r4, r5, lr}
   15808:	sub	sp, sp, #100	; 0x64
   1580c:	mov	r4, r0
   15810:	mov	r5, r2
   15814:	mov	r0, sp
   15818:	bl	13ed4 <dcngettext@plt+0x2c08>
   1581c:	add	lr, sp, #48	; 0x30
   15820:	mov	ip, sp
   15824:	ldm	ip!, {r0, r1, r2, r3}
   15828:	stmia	lr!, {r0, r1, r2, r3}
   1582c:	ldm	ip!, {r0, r1, r2, r3}
   15830:	stmia	lr!, {r0, r1, r2, r3}
   15834:	ldm	ip, {r0, r1, r2, r3}
   15838:	stm	lr, {r0, r1, r2, r3}
   1583c:	mov	r2, #1
   15840:	mov	r1, #58	; 0x3a
   15844:	add	r0, sp, #48	; 0x30
   15848:	bl	153d8 <dcngettext@plt+0x410c>
   1584c:	add	r3, sp, #48	; 0x30
   15850:	mvn	r2, #0
   15854:	mov	r1, r5
   15858:	mov	r0, r4
   1585c:	bl	151ac <dcngettext@plt+0x3ee0>
   15860:	add	sp, sp, #100	; 0x64
   15864:	pop	{r4, r5, pc}
   15868:	push	{r4, r5, r6, r7, lr}
   1586c:	sub	sp, sp, #52	; 0x34
   15870:	mov	r4, r0
   15874:	mov	r6, r1
   15878:	mov	r7, r2
   1587c:	mov	r5, r3
   15880:	mov	ip, sp
   15884:	ldr	lr, [pc, #64]	; 158cc <dcngettext@plt+0x4600>
   15888:	ldm	lr!, {r0, r1, r2, r3}
   1588c:	stmia	ip!, {r0, r1, r2, r3}
   15890:	ldm	lr!, {r0, r1, r2, r3}
   15894:	stmia	ip!, {r0, r1, r2, r3}
   15898:	ldm	lr, {r0, r1, r2, r3}
   1589c:	stm	ip, {r0, r1, r2, r3}
   158a0:	mov	r2, r7
   158a4:	mov	r1, r6
   158a8:	mov	r0, sp
   158ac:	bl	15434 <dcngettext@plt+0x4168>
   158b0:	mov	r3, sp
   158b4:	ldr	r2, [sp, #72]	; 0x48
   158b8:	mov	r1, r5
   158bc:	mov	r0, r4
   158c0:	bl	151ac <dcngettext@plt+0x3ee0>
   158c4:	add	sp, sp, #52	; 0x34
   158c8:	pop	{r4, r5, r6, r7, pc}
   158cc:	andeq	r8, r2, r8, lsr #5
   158d0:	push	{lr}		; (str lr, [sp, #-4]!)
   158d4:	sub	sp, sp, #12
   158d8:	mvn	ip, #0
   158dc:	str	ip, [sp]
   158e0:	bl	15868 <dcngettext@plt+0x459c>
   158e4:	add	sp, sp, #12
   158e8:	pop	{pc}		; (ldr pc, [sp], #4)
   158ec:	push	{r4, lr}
   158f0:	mov	r3, r2
   158f4:	mov	r2, r1
   158f8:	mov	r1, r0
   158fc:	mov	r0, #0
   15900:	bl	158d0 <dcngettext@plt+0x4604>
   15904:	pop	{r4, pc}
   15908:	push	{lr}		; (str lr, [sp, #-4]!)
   1590c:	sub	sp, sp, #12
   15910:	str	r3, [sp]
   15914:	mov	r3, r2
   15918:	mov	r2, r1
   1591c:	mov	r1, r0
   15920:	mov	r0, #0
   15924:	bl	15868 <dcngettext@plt+0x459c>
   15928:	add	sp, sp, #12
   1592c:	pop	{pc}		; (ldr pc, [sp], #4)
   15930:	push	{r4, lr}
   15934:	ldr	r3, [pc, #4]	; 15940 <dcngettext@plt+0x4674>
   15938:	bl	151ac <dcngettext@plt+0x3ee0>
   1593c:	pop	{r4, pc}
   15940:	andeq	r8, r2, r8, asr #2
   15944:	push	{r4, lr}
   15948:	mov	r2, r1
   1594c:	mov	r1, r0
   15950:	mov	r0, #0
   15954:	bl	15930 <dcngettext@plt+0x4664>
   15958:	pop	{r4, pc}
   1595c:	push	{r4, lr}
   15960:	mvn	r2, #0
   15964:	bl	15930 <dcngettext@plt+0x4664>
   15968:	pop	{r4, pc}
   1596c:	push	{r4, lr}
   15970:	mov	r1, r0
   15974:	mov	r0, #0
   15978:	bl	1595c <dcngettext@plt+0x4690>
   1597c:	pop	{r4, pc}
   15980:	push	{r4, r5, r6, lr}
   15984:	mov	r5, r0
   15988:	mov	r0, #33	; 0x21
   1598c:	bl	16554 <dcngettext@plt+0x5288>
   15990:	mov	r4, r0
   15994:	mov	r2, #32
   15998:	add	r1, r5, #44	; 0x2c
   1599c:	bl	111b8 <strncpy@plt>
   159a0:	mov	r3, #0
   159a4:	strb	r3, [r4, #32]
   159a8:	mov	r0, r4
   159ac:	bl	1117c <strlen@plt>
   159b0:	add	r0, r4, r0
   159b4:	cmp	r4, r0
   159b8:	bcs	159c8 <dcngettext@plt+0x46fc>
   159bc:	ldrb	r3, [r0, #-1]
   159c0:	cmp	r3, #32
   159c4:	beq	159d0 <dcngettext@plt+0x4704>
   159c8:	mov	r0, r4
   159cc:	pop	{r4, r5, r6, pc}
   159d0:	sub	r0, r0, #1
   159d4:	mov	r1, r4
   159d8:	mov	r2, #0
   159dc:	strb	r2, [r0]
   159e0:	cmp	r0, r1
   159e4:	beq	159c8 <dcngettext@plt+0x46fc>
   159e8:	ldrb	r3, [r0, #-1]!
   159ec:	cmp	r3, #32
   159f0:	bne	159c8 <dcngettext@plt+0x46fc>
   159f4:	b	159dc <dcngettext@plt+0x4710>
   159f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159fc:	sub	sp, sp, #28
   15a00:	mov	fp, r1
   15a04:	str	r2, [sp, #12]
   15a08:	mov	r6, r3
   15a0c:	mov	r7, #0
   15a10:	add	sl, sp, #24
   15a14:	str	r7, [sl, #-4]!
   15a18:	bl	10fe4 <utmpxname@plt>
   15a1c:	bl	11050 <setutxent@plt>
   15a20:	mov	r8, r7
   15a24:	mov	r9, r7
   15a28:	and	r5, r6, #2
   15a2c:	and	r6, r6, #1
   15a30:	b	15a68 <dcngettext@plt+0x479c>
   15a34:	cmp	r6, #0
   15a38:	beq	15a94 <dcngettext@plt+0x47c8>
   15a3c:	ldr	r0, [r4, #4]
   15a40:	cmp	r0, #0
   15a44:	ble	15a94 <dcngettext@plt+0x47c8>
   15a48:	mov	r1, #0
   15a4c:	bl	11158 <kill@plt>
   15a50:	cmp	r0, #0
   15a54:	bge	15a94 <dcngettext@plt+0x47c8>
   15a58:	bl	11194 <__errno_location@plt>
   15a5c:	ldr	r3, [r0]
   15a60:	cmp	r3, #3
   15a64:	bne	15a94 <dcngettext@plt+0x47c8>
   15a68:	bl	112c0 <getutxent@plt>
   15a6c:	subs	r4, r0, #0
   15a70:	beq	15ae0 <dcngettext@plt+0x4814>
   15a74:	ldrb	r3, [r4, #44]	; 0x2c
   15a78:	cmp	r3, #0
   15a7c:	beq	15a8c <dcngettext@plt+0x47c0>
   15a80:	ldrsh	r3, [r4]
   15a84:	cmp	r3, #7
   15a88:	beq	15a34 <dcngettext@plt+0x4768>
   15a8c:	cmp	r5, #0
   15a90:	bne	15a68 <dcngettext@plt+0x479c>
   15a94:	ldr	r3, [sp, #20]
   15a98:	cmp	r7, r3
   15a9c:	beq	15abc <dcngettext@plt+0x47f0>
   15aa0:	add	r7, r7, #1
   15aa4:	mov	r2, #384	; 0x180
   15aa8:	mov	r1, r4
   15aac:	add	r0, r9, r8
   15ab0:	bl	11008 <memcpy@plt>
   15ab4:	add	r8, r8, #384	; 0x180
   15ab8:	b	15a68 <dcngettext@plt+0x479c>
   15abc:	mov	r3, #384	; 0x180
   15ac0:	str	r3, [sp]
   15ac4:	mvn	r3, #0
   15ac8:	mov	r2, #1
   15acc:	mov	r1, sl
   15ad0:	mov	r0, r9
   15ad4:	bl	16700 <dcngettext@plt+0x5434>
   15ad8:	mov	r9, r0
   15adc:	b	15aa0 <dcngettext@plt+0x47d4>
   15ae0:	bl	11218 <endutxent@plt>
   15ae4:	str	r7, [fp]
   15ae8:	ldr	r3, [sp, #12]
   15aec:	str	r9, [r3]
   15af0:	mov	r0, #0
   15af4:	add	sp, sp, #28
   15af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15afc:	push	{r4, lr}
   15b00:	subs	r1, r0, #0
   15b04:	beq	15b18 <dcngettext@plt+0x484c>
   15b08:	mov	r2, #1
   15b0c:	ldr	r0, [pc, #16]	; 15b24 <dcngettext@plt+0x4858>
   15b10:	bl	11188 <setenv@plt>
   15b14:	pop	{r4, pc}
   15b18:	ldr	r0, [pc, #4]	; 15b24 <dcngettext@plt+0x4858>
   15b1c:	bl	1129c <unsetenv@plt>
   15b20:	pop	{r4, pc}
   15b24:	muleq	r1, r8, fp
   15b28:	push	{r4, r5, r6, r7, r8, lr}
   15b2c:	subs	r6, r0, #0
   15b30:	beq	15b9c <dcngettext@plt+0x48d0>
   15b34:	mov	r0, r6
   15b38:	bl	1117c <strlen@plt>
   15b3c:	add	r7, r0, #1
   15b40:	cmp	r7, #58	; 0x3a
   15b44:	addhi	r0, r0, #2
   15b48:	bls	15bd4 <dcngettext@plt+0x4908>
   15b4c:	add	r0, r0, #8
   15b50:	bic	r0, r0, #3
   15b54:	bl	16b88 <dcngettext@plt+0x58bc>
   15b58:	subs	r4, r0, #0
   15b5c:	beq	15b94 <dcngettext@plt+0x48c8>
   15b60:	mov	r3, #0
   15b64:	str	r3, [r4]
   15b68:	subs	r2, r6, r3
   15b6c:	movne	r2, #1
   15b70:	strb	r2, [r4, #4]
   15b74:	strb	r3, [r4, #5]
   15b78:	add	r5, r4, #5
   15b7c:	mov	r2, r7
   15b80:	mov	r1, r6
   15b84:	mov	r0, r5
   15b88:	bl	11008 <memcpy@plt>
   15b8c:	mov	r3, #0
   15b90:	strb	r3, [r5, r7]
   15b94:	mov	r0, r4
   15b98:	pop	{r4, r5, r6, r7, r8, pc}
   15b9c:	mov	r0, #64	; 0x40
   15ba0:	bl	16b88 <dcngettext@plt+0x58bc>
   15ba4:	subs	r4, r0, #0
   15ba8:	beq	15b94 <dcngettext@plt+0x48c8>
   15bac:	mov	r3, #0
   15bb0:	str	r3, [r4]
   15bb4:	cmp	r6, r3
   15bb8:	movne	r2, #1
   15bbc:	moveq	r2, r3
   15bc0:	strb	r2, [r4, #4]
   15bc4:	strb	r3, [r4, #5]
   15bc8:	beq	15b94 <dcngettext@plt+0x48c8>
   15bcc:	mov	r7, r3
   15bd0:	b	15b78 <dcngettext@plt+0x48ac>
   15bd4:	mov	r0, #59	; 0x3b
   15bd8:	b	15b4c <dcngettext@plt+0x4880>
   15bdc:	push	{r4, r5, r6, r7, r8, lr}
   15be0:	ldr	r6, [r1, #40]	; 0x28
   15be4:	cmp	r6, #0
   15be8:	beq	15ce4 <dcngettext@plt+0x4a18>
   15bec:	mov	r5, r0
   15bf0:	mov	r7, r1
   15bf4:	cmp	r1, r6
   15bf8:	bhi	15c08 <dcngettext@plt+0x493c>
   15bfc:	add	r3, r1, #44	; 0x2c
   15c00:	cmp	r6, r3
   15c04:	bcc	15cec <dcngettext@plt+0x4a20>
   15c08:	ldrb	r3, [r6]
   15c0c:	cmp	r3, #0
   15c10:	addne	r4, r5, #5
   15c14:	bne	15c74 <dcngettext@plt+0x49a8>
   15c18:	ldr	r4, [pc, #220]	; 15cfc <dcngettext@plt+0x4a30>
   15c1c:	str	r4, [r7, #40]	; 0x28
   15c20:	mov	r0, #1
   15c24:	pop	{r4, r5, r6, r7, r8, pc}
   15c28:	mov	r0, r6
   15c2c:	bl	15b28 <dcngettext@plt+0x485c>
   15c30:	str	r0, [r5]
   15c34:	cmp	r0, #0
   15c38:	beq	15cf4 <dcngettext@plt+0x4a28>
   15c3c:	mov	r3, #0
   15c40:	strb	r3, [r0, #4]
   15c44:	add	r4, r0, #5
   15c48:	b	15c1c <dcngettext@plt+0x4950>
   15c4c:	mov	r0, r4
   15c50:	bl	1117c <strlen@plt>
   15c54:	add	r0, r0, #1
   15c58:	ldrb	r3, [r4, r0]!
   15c5c:	cmp	r3, #0
   15c60:	bne	15c74 <dcngettext@plt+0x49a8>
   15c64:	ldr	r3, [r5]
   15c68:	cmp	r3, #0
   15c6c:	addne	r4, r3, #5
   15c70:	movne	r5, r3
   15c74:	mov	r1, r6
   15c78:	mov	r0, r4
   15c7c:	bl	10fc0 <strcmp@plt>
   15c80:	cmp	r0, #0
   15c84:	beq	15c1c <dcngettext@plt+0x4950>
   15c88:	ldrb	r3, [r4]
   15c8c:	cmp	r3, #0
   15c90:	bne	15c4c <dcngettext@plt+0x4980>
   15c94:	add	r3, r5, #5
   15c98:	cmp	r4, r3
   15c9c:	bne	15cac <dcngettext@plt+0x49e0>
   15ca0:	ldrb	r3, [r5, #4]
   15ca4:	cmp	r3, #0
   15ca8:	bne	15c4c <dcngettext@plt+0x4980>
   15cac:	mov	r0, r6
   15cb0:	bl	1117c <strlen@plt>
   15cb4:	add	r8, r0, #1
   15cb8:	add	r3, r5, #64	; 0x40
   15cbc:	sub	r3, r3, r4
   15cc0:	cmp	r8, r3
   15cc4:	bge	15c28 <dcngettext@plt+0x495c>
   15cc8:	mov	r2, r8
   15ccc:	mov	r1, r6
   15cd0:	mov	r0, r4
   15cd4:	bl	11008 <memcpy@plt>
   15cd8:	mov	r3, #0
   15cdc:	strb	r3, [r4, r8]
   15ce0:	b	15c1c <dcngettext@plt+0x4950>
   15ce4:	mov	r0, #1
   15ce8:	pop	{r4, r5, r6, r7, r8, pc}
   15cec:	mov	r0, #1
   15cf0:	pop	{r4, r5, r6, r7, r8, pc}
   15cf4:	mov	r0, #0
   15cf8:	pop	{r4, r5, r6, r7, r8, pc}
   15cfc:	andeq	r7, r1, r0, lsr #14
   15d00:	cmp	r0, #1
   15d04:	bxeq	lr
   15d08:	cmp	r0, #0
   15d0c:	bxeq	lr
   15d10:	push	{r4, lr}
   15d14:	ldr	r4, [r0]
   15d18:	bl	16c80 <dcngettext@plt+0x59b4>
   15d1c:	mov	r0, r4
   15d20:	cmp	r4, #0
   15d24:	bne	15d14 <dcngettext@plt+0x4a48>
   15d28:	pop	{r4, pc}
   15d2c:	push	{r4, r5, r6, lr}
   15d30:	mov	r4, r0
   15d34:	ldr	r0, [pc, #164]	; 15de0 <dcngettext@plt+0x4b14>
   15d38:	bl	110e0 <getenv@plt>
   15d3c:	subs	r5, r0, #0
   15d40:	beq	15d7c <dcngettext@plt+0x4ab0>
   15d44:	ldrb	r3, [r4, #4]
   15d48:	cmp	r3, #0
   15d4c:	moveq	r0, #0
   15d50:	beq	15d68 <dcngettext@plt+0x4a9c>
   15d54:	mov	r1, r5
   15d58:	add	r0, r4, #5
   15d5c:	bl	10fc0 <strcmp@plt>
   15d60:	clz	r0, r0
   15d64:	lsr	r0, r0, #5
   15d68:	cmp	r0, #0
   15d6c:	movne	r5, #1
   15d70:	beq	15d8c <dcngettext@plt+0x4ac0>
   15d74:	mov	r0, r5
   15d78:	pop	{r4, r5, r6, pc}
   15d7c:	ldrb	r0, [r4, #4]
   15d80:	clz	r0, r0
   15d84:	lsr	r0, r0, #5
   15d88:	b	15d68 <dcngettext@plt+0x4a9c>
   15d8c:	mov	r0, r5
   15d90:	bl	15b28 <dcngettext@plt+0x485c>
   15d94:	subs	r5, r0, #0
   15d98:	beq	15d74 <dcngettext@plt+0x4aa8>
   15d9c:	ldrb	r3, [r4, #4]
   15da0:	cmp	r3, #0
   15da4:	addne	r0, r4, #5
   15da8:	moveq	r0, #0
   15dac:	bl	15afc <dcngettext@plt+0x4830>
   15db0:	cmp	r0, #0
   15db4:	beq	15dd8 <dcngettext@plt+0x4b0c>
   15db8:	bl	11194 <__errno_location@plt>
   15dbc:	mov	r4, r0
   15dc0:	ldr	r6, [r0]
   15dc4:	mov	r0, r5
   15dc8:	bl	15d00 <dcngettext@plt+0x4a34>
   15dcc:	str	r6, [r4]
   15dd0:	mov	r5, #0
   15dd4:	b	15d74 <dcngettext@plt+0x4aa8>
   15dd8:	bl	1108c <tzset@plt>
   15ddc:	b	15d74 <dcngettext@plt+0x4aa8>
   15de0:	muleq	r1, r8, fp
   15de4:	push	{r4, r5, r6, r7, r8, lr}
   15de8:	cmp	r0, #1
   15dec:	moveq	r7, #1
   15df0:	beq	15e34 <dcngettext@plt+0x4b68>
   15df4:	mov	r4, r0
   15df8:	bl	11194 <__errno_location@plt>
   15dfc:	mov	r5, r0
   15e00:	ldr	r6, [r0]
   15e04:	ldrb	r3, [r4, #4]
   15e08:	cmp	r3, #0
   15e0c:	addne	r0, r4, #5
   15e10:	moveq	r0, #0
   15e14:	bl	15afc <dcngettext@plt+0x4830>
   15e18:	cmp	r0, #0
   15e1c:	beq	15e3c <dcngettext@plt+0x4b70>
   15e20:	ldr	r6, [r5]
   15e24:	mov	r7, #0
   15e28:	mov	r0, r4
   15e2c:	bl	15d00 <dcngettext@plt+0x4a34>
   15e30:	str	r6, [r5]
   15e34:	mov	r0, r7
   15e38:	pop	{r4, r5, r6, r7, r8, pc}
   15e3c:	bl	1108c <tzset@plt>
   15e40:	mov	r7, #1
   15e44:	b	15e28 <dcngettext@plt+0x4b5c>
   15e48:	push	{r4, r5, r6, r7, r8, lr}
   15e4c:	mov	r6, r1
   15e50:	mov	r4, r2
   15e54:	subs	r5, r0, #0
   15e58:	beq	15eb0 <dcngettext@plt+0x4be4>
   15e5c:	mov	r0, r5
   15e60:	bl	15d2c <dcngettext@plt+0x4a60>
   15e64:	subs	r7, r0, #0
   15e68:	beq	15ec4 <dcngettext@plt+0x4bf8>
   15e6c:	mov	r1, r4
   15e70:	mov	r0, r6
   15e74:	bl	11068 <localtime_r@plt>
   15e78:	subs	r6, r0, #0
   15e7c:	beq	15ecc <dcngettext@plt+0x4c00>
   15e80:	mov	r1, r4
   15e84:	mov	r0, r5
   15e88:	bl	15bdc <dcngettext@plt+0x4910>
   15e8c:	mov	r5, r0
   15e90:	mov	r0, r7
   15e94:	bl	15de4 <dcngettext@plt+0x4b18>
   15e98:	and	r0, r0, r5
   15e9c:	uxtb	r0, r0
   15ea0:	cmp	r0, #0
   15ea4:	moveq	r4, #0
   15ea8:	mov	r0, r4
   15eac:	pop	{r4, r5, r6, r7, r8, pc}
   15eb0:	mov	r1, r2
   15eb4:	mov	r0, r6
   15eb8:	bl	10fb4 <gmtime_r@plt>
   15ebc:	mov	r4, r0
   15ec0:	b	15ea8 <dcngettext@plt+0x4bdc>
   15ec4:	mov	r4, #0
   15ec8:	b	15ea8 <dcngettext@plt+0x4bdc>
   15ecc:	mov	r0, r7
   15ed0:	bl	15de4 <dcngettext@plt+0x4b18>
   15ed4:	mov	r4, r6
   15ed8:	b	15ea8 <dcngettext@plt+0x4bdc>
   15edc:	push	{r4, r5, r6, r7, lr}
   15ee0:	sub	sp, sp, #52	; 0x34
   15ee4:	mov	r4, r1
   15ee8:	subs	r5, r0, #0
   15eec:	beq	15fa8 <dcngettext@plt+0x4cdc>
   15ef0:	mov	r0, r5
   15ef4:	bl	15d2c <dcngettext@plt+0x4a60>
   15ef8:	subs	r7, r0, #0
   15efc:	beq	15fb8 <dcngettext@plt+0x4cec>
   15f00:	ldr	r3, [r4]
   15f04:	str	r3, [sp, #4]
   15f08:	ldr	r3, [r4, #4]
   15f0c:	str	r3, [sp, #8]
   15f10:	ldr	r3, [r4, #8]
   15f14:	str	r3, [sp, #12]
   15f18:	ldr	r3, [r4, #12]
   15f1c:	str	r3, [sp, #16]
   15f20:	ldr	r3, [r4, #16]
   15f24:	str	r3, [sp, #20]
   15f28:	ldr	r3, [r4, #20]
   15f2c:	str	r3, [sp, #24]
   15f30:	mvn	r3, #0
   15f34:	str	r3, [sp, #32]
   15f38:	ldr	r3, [r4, #32]
   15f3c:	str	r3, [sp, #36]	; 0x24
   15f40:	add	r0, sp, #4
   15f44:	bl	10fcc <mktime@plt>
   15f48:	mov	r6, r0
   15f4c:	ldr	r3, [sp, #32]
   15f50:	cmp	r3, #0
   15f54:	blt	15fc0 <dcngettext@plt+0x4cf4>
   15f58:	add	r1, sp, #4
   15f5c:	mov	r0, r5
   15f60:	bl	15bdc <dcngettext@plt+0x4910>
   15f64:	mov	r5, r0
   15f68:	mov	r0, r7
   15f6c:	bl	15de4 <dcngettext@plt+0x4b18>
   15f70:	and	r0, r0, r5
   15f74:	tst	r0, #255	; 0xff
   15f78:	beq	15fc8 <dcngettext@plt+0x4cfc>
   15f7c:	mov	ip, r4
   15f80:	add	lr, sp, #4
   15f84:	ldm	lr!, {r0, r1, r2, r3}
   15f88:	stmia	ip!, {r0, r1, r2, r3}
   15f8c:	ldm	lr!, {r0, r1, r2, r3}
   15f90:	stmia	ip!, {r0, r1, r2, r3}
   15f94:	ldm	lr, {r0, r1, r2}
   15f98:	stm	ip, {r0, r1, r2}
   15f9c:	mov	r0, r6
   15fa0:	add	sp, sp, #52	; 0x34
   15fa4:	pop	{r4, r5, r6, r7, pc}
   15fa8:	mov	r0, r1
   15fac:	bl	1126c <timegm@plt>
   15fb0:	mov	r6, r0
   15fb4:	b	15f9c <dcngettext@plt+0x4cd0>
   15fb8:	mvn	r6, #0
   15fbc:	b	15f9c <dcngettext@plt+0x4cd0>
   15fc0:	mov	r0, r7
   15fc4:	bl	15de4 <dcngettext@plt+0x4b18>
   15fc8:	mvn	r6, #0
   15fcc:	b	15f9c <dcngettext@plt+0x4cd0>
   15fd0:	push	{r4, r5, r6, lr}
   15fd4:	sub	sp, sp, #32
   15fd8:	mov	r4, r0
   15fdc:	ldr	r5, [sp, #48]	; 0x30
   15fe0:	ldr	r6, [sp, #52]	; 0x34
   15fe4:	cmp	r1, #0
   15fe8:	beq	160a0 <dcngettext@plt+0x4dd4>
   15fec:	str	r3, [sp, #4]
   15ff0:	str	r2, [sp]
   15ff4:	mov	r3, r1
   15ff8:	ldr	r2, [pc, #940]	; 163ac <dcngettext@plt+0x50e0>
   15ffc:	mov	r1, #1
   16000:	bl	111dc <__fprintf_chk@plt>
   16004:	mov	r2, #5
   16008:	ldr	r1, [pc, #928]	; 163b0 <dcngettext@plt+0x50e4>
   1600c:	mov	r0, #0
   16010:	bl	11044 <dcgettext@plt>
   16014:	ldr	r3, [pc, #920]	; 163b4 <dcngettext@plt+0x50e8>
   16018:	str	r3, [sp]
   1601c:	mov	r3, r0
   16020:	ldr	r2, [pc, #912]	; 163b8 <dcngettext@plt+0x50ec>
   16024:	mov	r1, #1
   16028:	mov	r0, r4
   1602c:	bl	111dc <__fprintf_chk@plt>
   16030:	mov	r1, r4
   16034:	mov	r0, #10
   16038:	bl	11038 <fputc_unlocked@plt>
   1603c:	mov	r2, #5
   16040:	ldr	r1, [pc, #884]	; 163bc <dcngettext@plt+0x50f0>
   16044:	mov	r0, #0
   16048:	bl	11044 <dcgettext@plt>
   1604c:	ldr	r3, [pc, #876]	; 163c0 <dcngettext@plt+0x50f4>
   16050:	mov	r2, r0
   16054:	mov	r1, #1
   16058:	mov	r0, r4
   1605c:	bl	111dc <__fprintf_chk@plt>
   16060:	mov	r1, r4
   16064:	mov	r0, #10
   16068:	bl	11038 <fputc_unlocked@plt>
   1606c:	cmp	r6, #9
   16070:	ldrls	pc, [pc, r6, lsl #2]
   16074:	b	16344 <dcngettext@plt+0x5078>
   16078:	ldrdeq	r6, [r1], -ip
   1607c:	strheq	r6, [r1], -r8
   16080:	andeq	r6, r1, r4, ror #1
   16084:	andeq	r6, r1, r4, lsl r1
   16088:	andeq	r6, r1, ip, asr #2
   1608c:	andeq	r6, r1, ip, lsl #3
   16090:	ldrdeq	r6, [r1], -r4
   16094:	andeq	r6, r1, r4, lsr #4
   16098:	andeq	r6, r1, ip, ror r2
   1609c:	ldrdeq	r6, [r1], -ip
   160a0:	str	r3, [sp]
   160a4:	mov	r3, r2
   160a8:	ldr	r2, [pc, #788]	; 163c4 <dcngettext@plt+0x50f8>
   160ac:	mov	r1, #1
   160b0:	bl	111dc <__fprintf_chk@plt>
   160b4:	b	16004 <dcngettext@plt+0x4d38>
   160b8:	mov	r2, #5
   160bc:	ldr	r1, [pc, #772]	; 163c8 <dcngettext@plt+0x50fc>
   160c0:	mov	r0, #0
   160c4:	bl	11044 <dcgettext@plt>
   160c8:	ldr	r3, [r5]
   160cc:	mov	r2, r0
   160d0:	mov	r1, #1
   160d4:	mov	r0, r4
   160d8:	bl	111dc <__fprintf_chk@plt>
   160dc:	add	sp, sp, #32
   160e0:	pop	{r4, r5, r6, pc}
   160e4:	mov	r2, #5
   160e8:	ldr	r1, [pc, #732]	; 163cc <dcngettext@plt+0x5100>
   160ec:	mov	r0, #0
   160f0:	bl	11044 <dcgettext@plt>
   160f4:	ldr	r3, [r5]
   160f8:	ldr	r2, [r5, #4]
   160fc:	str	r2, [sp]
   16100:	mov	r2, r0
   16104:	mov	r1, #1
   16108:	mov	r0, r4
   1610c:	bl	111dc <__fprintf_chk@plt>
   16110:	b	160dc <dcngettext@plt+0x4e10>
   16114:	mov	r2, #5
   16118:	ldr	r1, [pc, #688]	; 163d0 <dcngettext@plt+0x5104>
   1611c:	mov	r0, #0
   16120:	bl	11044 <dcgettext@plt>
   16124:	ldr	r3, [r5]
   16128:	ldr	r2, [r5, #8]
   1612c:	str	r2, [sp, #4]
   16130:	ldr	r2, [r5, #4]
   16134:	str	r2, [sp]
   16138:	mov	r2, r0
   1613c:	mov	r1, #1
   16140:	mov	r0, r4
   16144:	bl	111dc <__fprintf_chk@plt>
   16148:	b	160dc <dcngettext@plt+0x4e10>
   1614c:	mov	r2, #5
   16150:	ldr	r1, [pc, #636]	; 163d4 <dcngettext@plt+0x5108>
   16154:	mov	r0, #0
   16158:	bl	11044 <dcgettext@plt>
   1615c:	ldr	r3, [r5]
   16160:	ldr	r2, [r5, #12]
   16164:	str	r2, [sp, #8]
   16168:	ldr	r2, [r5, #8]
   1616c:	str	r2, [sp, #4]
   16170:	ldr	r2, [r5, #4]
   16174:	str	r2, [sp]
   16178:	mov	r2, r0
   1617c:	mov	r1, #1
   16180:	mov	r0, r4
   16184:	bl	111dc <__fprintf_chk@plt>
   16188:	b	160dc <dcngettext@plt+0x4e10>
   1618c:	mov	r2, #5
   16190:	ldr	r1, [pc, #576]	; 163d8 <dcngettext@plt+0x510c>
   16194:	mov	r0, #0
   16198:	bl	11044 <dcgettext@plt>
   1619c:	ldr	r3, [r5]
   161a0:	ldr	r2, [r5, #16]
   161a4:	str	r2, [sp, #12]
   161a8:	ldr	r2, [r5, #12]
   161ac:	str	r2, [sp, #8]
   161b0:	ldr	r2, [r5, #8]
   161b4:	str	r2, [sp, #4]
   161b8:	ldr	r2, [r5, #4]
   161bc:	str	r2, [sp]
   161c0:	mov	r2, r0
   161c4:	mov	r1, #1
   161c8:	mov	r0, r4
   161cc:	bl	111dc <__fprintf_chk@plt>
   161d0:	b	160dc <dcngettext@plt+0x4e10>
   161d4:	mov	r2, #5
   161d8:	ldr	r1, [pc, #508]	; 163dc <dcngettext@plt+0x5110>
   161dc:	mov	r0, #0
   161e0:	bl	11044 <dcgettext@plt>
   161e4:	ldr	r3, [r5]
   161e8:	ldr	r2, [r5, #20]
   161ec:	str	r2, [sp, #16]
   161f0:	ldr	r2, [r5, #16]
   161f4:	str	r2, [sp, #12]
   161f8:	ldr	r2, [r5, #12]
   161fc:	str	r2, [sp, #8]
   16200:	ldr	r2, [r5, #8]
   16204:	str	r2, [sp, #4]
   16208:	ldr	r2, [r5, #4]
   1620c:	str	r2, [sp]
   16210:	mov	r2, r0
   16214:	mov	r1, #1
   16218:	mov	r0, r4
   1621c:	bl	111dc <__fprintf_chk@plt>
   16220:	b	160dc <dcngettext@plt+0x4e10>
   16224:	mov	r2, #5
   16228:	ldr	r1, [pc, #432]	; 163e0 <dcngettext@plt+0x5114>
   1622c:	mov	r0, #0
   16230:	bl	11044 <dcgettext@plt>
   16234:	ldr	r3, [r5]
   16238:	ldr	r2, [r5, #24]
   1623c:	str	r2, [sp, #20]
   16240:	ldr	r2, [r5, #20]
   16244:	str	r2, [sp, #16]
   16248:	ldr	r2, [r5, #16]
   1624c:	str	r2, [sp, #12]
   16250:	ldr	r2, [r5, #12]
   16254:	str	r2, [sp, #8]
   16258:	ldr	r2, [r5, #8]
   1625c:	str	r2, [sp, #4]
   16260:	ldr	r2, [r5, #4]
   16264:	str	r2, [sp]
   16268:	mov	r2, r0
   1626c:	mov	r1, #1
   16270:	mov	r0, r4
   16274:	bl	111dc <__fprintf_chk@plt>
   16278:	b	160dc <dcngettext@plt+0x4e10>
   1627c:	mov	r2, #5
   16280:	ldr	r1, [pc, #348]	; 163e4 <dcngettext@plt+0x5118>
   16284:	mov	r0, #0
   16288:	bl	11044 <dcgettext@plt>
   1628c:	ldr	r3, [r5]
   16290:	ldr	r2, [r5, #28]
   16294:	str	r2, [sp, #24]
   16298:	ldr	r2, [r5, #24]
   1629c:	str	r2, [sp, #20]
   162a0:	ldr	r2, [r5, #20]
   162a4:	str	r2, [sp, #16]
   162a8:	ldr	r2, [r5, #16]
   162ac:	str	r2, [sp, #12]
   162b0:	ldr	r2, [r5, #12]
   162b4:	str	r2, [sp, #8]
   162b8:	ldr	r2, [r5, #8]
   162bc:	str	r2, [sp, #4]
   162c0:	ldr	r2, [r5, #4]
   162c4:	str	r2, [sp]
   162c8:	mov	r2, r0
   162cc:	mov	r1, #1
   162d0:	mov	r0, r4
   162d4:	bl	111dc <__fprintf_chk@plt>
   162d8:	b	160dc <dcngettext@plt+0x4e10>
   162dc:	mov	r2, #5
   162e0:	ldr	r1, [pc, #256]	; 163e8 <dcngettext@plt+0x511c>
   162e4:	mov	r0, #0
   162e8:	bl	11044 <dcgettext@plt>
   162ec:	ldr	r3, [r5]
   162f0:	ldr	r2, [r5, #32]
   162f4:	str	r2, [sp, #28]
   162f8:	ldr	r2, [r5, #28]
   162fc:	str	r2, [sp, #24]
   16300:	ldr	r2, [r5, #24]
   16304:	str	r2, [sp, #20]
   16308:	ldr	r2, [r5, #20]
   1630c:	str	r2, [sp, #16]
   16310:	ldr	r2, [r5, #16]
   16314:	str	r2, [sp, #12]
   16318:	ldr	r2, [r5, #12]
   1631c:	str	r2, [sp, #8]
   16320:	ldr	r2, [r5, #8]
   16324:	str	r2, [sp, #4]
   16328:	ldr	r2, [r5, #4]
   1632c:	str	r2, [sp]
   16330:	mov	r2, r0
   16334:	mov	r1, #1
   16338:	mov	r0, r4
   1633c:	bl	111dc <__fprintf_chk@plt>
   16340:	b	160dc <dcngettext@plt+0x4e10>
   16344:	mov	r2, #5
   16348:	ldr	r1, [pc, #156]	; 163ec <dcngettext@plt+0x5120>
   1634c:	mov	r0, #0
   16350:	bl	11044 <dcgettext@plt>
   16354:	ldr	r3, [r5]
   16358:	ldr	r2, [r5, #32]
   1635c:	str	r2, [sp, #28]
   16360:	ldr	r2, [r5, #28]
   16364:	str	r2, [sp, #24]
   16368:	ldr	r2, [r5, #24]
   1636c:	str	r2, [sp, #20]
   16370:	ldr	r2, [r5, #20]
   16374:	str	r2, [sp, #16]
   16378:	ldr	r2, [r5, #16]
   1637c:	str	r2, [sp, #12]
   16380:	ldr	r2, [r5, #12]
   16384:	str	r2, [sp, #8]
   16388:	ldr	r2, [r5, #8]
   1638c:	str	r2, [sp, #4]
   16390:	ldr	r2, [r5, #4]
   16394:	str	r2, [sp]
   16398:	mov	r2, r0
   1639c:	mov	r1, #1
   163a0:	mov	r0, r4
   163a4:	bl	111dc <__fprintf_chk@plt>
   163a8:	b	160dc <dcngettext@plt+0x4e10>
   163ac:	muleq	r1, ip, fp
   163b0:			; <UNDEFINED> instruction: 0x00017bb0
   163b4:	andeq	r0, r0, r6, ror #15
   163b8:	andeq	r7, r1, r8, lsl #29
   163bc:			; <UNDEFINED> instruction: 0x00017bb4
   163c0:	andeq	r7, r1, r0, ror #24
   163c4:	andeq	r7, r1, r8, lsr #23
   163c8:	andeq	r7, r1, r4, lsl #25
   163cc:	muleq	r1, r4, ip
   163d0:	andeq	r7, r1, ip, lsr #25
   163d4:	andeq	r7, r1, r8, asr #25
   163d8:	andeq	r7, r1, r8, ror #25
   163dc:	andeq	r7, r1, ip, lsl #26
   163e0:	andeq	r7, r1, r4, lsr sp
   163e4:	andeq	r7, r1, r0, ror #26
   163e8:	muleq	r1, r0, sp
   163ec:	andeq	r7, r1, r4, asr #27
   163f0:	push	{r4, r5, lr}
   163f4:	sub	sp, sp, #12
   163f8:	ldr	r5, [sp, #24]
   163fc:	ldr	ip, [r5]
   16400:	cmp	ip, #0
   16404:	beq	16434 <dcngettext@plt+0x5168>
   16408:	mov	lr, r5
   1640c:	mov	ip, #0
   16410:	add	ip, ip, #1
   16414:	ldr	r4, [lr, #4]!
   16418:	cmp	r4, #0
   1641c:	bne	16410 <dcngettext@plt+0x5144>
   16420:	str	ip, [sp, #4]
   16424:	str	r5, [sp]
   16428:	bl	15fd0 <dcngettext@plt+0x4d04>
   1642c:	add	sp, sp, #12
   16430:	pop	{r4, r5, pc}
   16434:	mov	ip, #0
   16438:	b	16420 <dcngettext@plt+0x5154>
   1643c:	push	{r4, r5, lr}
   16440:	sub	sp, sp, #52	; 0x34
   16444:	ldr	r4, [sp, #64]	; 0x40
   16448:	sub	r4, r4, #4
   1644c:	add	r5, sp, #4
   16450:	mov	ip, #0
   16454:	ldr	lr, [r4, #4]!
   16458:	str	lr, [r5, #4]!
   1645c:	cmp	lr, #0
   16460:	beq	16470 <dcngettext@plt+0x51a4>
   16464:	add	ip, ip, #1
   16468:	cmp	ip, #10
   1646c:	bne	16454 <dcngettext@plt+0x5188>
   16470:	str	ip, [sp, #4]
   16474:	add	ip, sp, #8
   16478:	str	ip, [sp]
   1647c:	bl	15fd0 <dcngettext@plt+0x4d04>
   16480:	add	sp, sp, #52	; 0x34
   16484:	pop	{r4, r5, pc}
   16488:	push	{r3}		; (str r3, [sp, #-4]!)
   1648c:	push	{lr}		; (str lr, [sp, #-4]!)
   16490:	sub	sp, sp, #16
   16494:	add	r3, sp, #24
   16498:	str	r3, [sp, #12]
   1649c:	str	r3, [sp]
   164a0:	ldr	r3, [sp, #20]
   164a4:	bl	1643c <dcngettext@plt+0x5170>
   164a8:	add	sp, sp, #16
   164ac:	pop	{lr}		; (ldr lr, [sp], #4)
   164b0:	add	sp, sp, #4
   164b4:	bx	lr
   164b8:	push	{r4, lr}
   164bc:	ldr	r3, [pc, #112]	; 16534 <dcngettext@plt+0x5268>
   164c0:	ldr	r1, [r3]
   164c4:	mov	r0, #10
   164c8:	bl	11038 <fputc_unlocked@plt>
   164cc:	mov	r2, #5
   164d0:	ldr	r1, [pc, #96]	; 16538 <dcngettext@plt+0x526c>
   164d4:	mov	r0, #0
   164d8:	bl	11044 <dcgettext@plt>
   164dc:	ldr	r2, [pc, #88]	; 1653c <dcngettext@plt+0x5270>
   164e0:	mov	r1, r0
   164e4:	mov	r0, #1
   164e8:	bl	111c4 <__printf_chk@plt>
   164ec:	mov	r2, #5
   164f0:	ldr	r1, [pc, #72]	; 16540 <dcngettext@plt+0x5274>
   164f4:	mov	r0, #0
   164f8:	bl	11044 <dcgettext@plt>
   164fc:	ldr	r3, [pc, #64]	; 16544 <dcngettext@plt+0x5278>
   16500:	ldr	r2, [pc, #64]	; 16548 <dcngettext@plt+0x527c>
   16504:	mov	r1, r0
   16508:	mov	r0, #1
   1650c:	bl	111c4 <__printf_chk@plt>
   16510:	mov	r2, #5
   16514:	ldr	r1, [pc, #48]	; 1654c <dcngettext@plt+0x5280>
   16518:	mov	r0, #0
   1651c:	bl	11044 <dcgettext@plt>
   16520:	ldr	r2, [pc, #40]	; 16550 <dcngettext@plt+0x5284>
   16524:	mov	r1, r0
   16528:	mov	r0, #1
   1652c:	bl	111c4 <__printf_chk@plt>
   16530:	pop	{r4, pc}
   16534:	andeq	r8, r2, ip, lsl #3
   16538:	andeq	r7, r1, r0, lsl #28
   1653c:	andeq	r7, r1, r4, lsl lr
   16540:	andeq	r7, r1, ip, lsr #28
   16544:	andeq	r7, r1, r4, ror r7
   16548:	muleq	r1, ip, r7
   1654c:	andeq	r7, r1, r0, asr #28
   16550:	andeq	r7, r1, r8, ror #28
   16554:	push	{r4, lr}
   16558:	bl	16b88 <dcngettext@plt+0x58bc>
   1655c:	cmp	r0, #0
   16560:	popne	{r4, pc}
   16564:	bl	16af8 <dcngettext@plt+0x582c>
   16568:	push	{r4, lr}
   1656c:	bl	16b88 <dcngettext@plt+0x58bc>
   16570:	cmp	r0, #0
   16574:	popne	{r4, pc}
   16578:	bl	16af8 <dcngettext@plt+0x582c>
   1657c:	push	{r4, lr}
   16580:	bl	16554 <dcngettext@plt+0x5288>
   16584:	pop	{r4, pc}
   16588:	push	{r4, r5, r6, lr}
   1658c:	mov	r5, r0
   16590:	mov	r4, r1
   16594:	bl	16bb8 <dcngettext@plt+0x58ec>
   16598:	cmp	r0, #0
   1659c:	popne	{r4, r5, r6, pc}
   165a0:	adds	r4, r4, #0
   165a4:	movne	r4, #1
   165a8:	cmp	r5, #0
   165ac:	orreq	r4, r4, #1
   165b0:	cmp	r4, #0
   165b4:	popeq	{r4, r5, r6, pc}
   165b8:	bl	16af8 <dcngettext@plt+0x582c>
   165bc:	push	{r4, lr}
   165c0:	cmp	r1, #0
   165c4:	orreq	r1, r1, #1
   165c8:	bl	16bb8 <dcngettext@plt+0x58ec>
   165cc:	cmp	r0, #0
   165d0:	popne	{r4, pc}
   165d4:	bl	16af8 <dcngettext@plt+0x582c>
   165d8:	push	{r4, r5, r6, lr}
   165dc:	mov	r6, r0
   165e0:	mov	r5, r1
   165e4:	mov	r4, r2
   165e8:	bl	16d64 <dcngettext@plt+0x5a98>
   165ec:	cmp	r0, #0
   165f0:	popne	{r4, r5, r6, pc}
   165f4:	cmp	r6, #0
   165f8:	beq	16608 <dcngettext@plt+0x533c>
   165fc:	cmp	r5, #0
   16600:	cmpne	r4, #0
   16604:	popeq	{r4, r5, r6, pc}
   16608:	bl	16af8 <dcngettext@plt+0x582c>
   1660c:	push	{r4, lr}
   16610:	bl	165d8 <dcngettext@plt+0x530c>
   16614:	pop	{r4, pc}
   16618:	push	{r4, lr}
   1661c:	mov	ip, r1
   16620:	mov	r3, r2
   16624:	cmp	r2, #0
   16628:	cmpne	r1, #0
   1662c:	moveq	r3, #1
   16630:	moveq	ip, r3
   16634:	mov	r2, r3
   16638:	mov	r1, ip
   1663c:	bl	16d64 <dcngettext@plt+0x5a98>
   16640:	cmp	r0, #0
   16644:	popne	{r4, pc}
   16648:	bl	16af8 <dcngettext@plt+0x582c>
   1664c:	push	{r4, lr}
   16650:	mov	r2, r1
   16654:	mov	r1, r0
   16658:	mov	r0, #0
   1665c:	bl	165d8 <dcngettext@plt+0x530c>
   16660:	pop	{r4, pc}
   16664:	push	{r4, lr}
   16668:	mov	r2, r1
   1666c:	mov	r1, r0
   16670:	mov	r0, #0
   16674:	bl	16618 <dcngettext@plt+0x534c>
   16678:	pop	{r4, pc}
   1667c:	push	{r4, r5, r6, r7, r8, lr}
   16680:	mov	r5, r1
   16684:	mov	r6, r2
   16688:	ldr	r4, [r1]
   1668c:	subs	r7, r0, #0
   16690:	beq	166ac <dcngettext@plt+0x53e0>
   16694:	lsr	r2, r4, #1
   16698:	add	r3, r2, #1
   1669c:	mvn	r3, r3
   166a0:	cmp	r4, r3
   166a4:	bls	166d0 <dcngettext@plt+0x5404>
   166a8:	bl	16af8 <dcngettext@plt+0x582c>
   166ac:	cmp	r4, #0
   166b0:	bne	166d8 <dcngettext@plt+0x540c>
   166b4:	mov	r1, r2
   166b8:	mov	r0, #64	; 0x40
   166bc:	bl	16eb8 <dcngettext@plt+0x5bec>
   166c0:	cmp	r0, #0
   166c4:	movne	r4, r0
   166c8:	addeq	r4, r0, #1
   166cc:	b	166d8 <dcngettext@plt+0x540c>
   166d0:	add	r4, r4, #1
   166d4:	add	r4, r4, r2
   166d8:	mov	r2, r6
   166dc:	mov	r1, r4
   166e0:	mov	r0, r7
   166e4:	bl	165d8 <dcngettext@plt+0x530c>
   166e8:	str	r4, [r5]
   166ec:	pop	{r4, r5, r6, r7, r8, pc}
   166f0:	push	{r4, lr}
   166f4:	mov	r2, #1
   166f8:	bl	1667c <dcngettext@plt+0x53b0>
   166fc:	pop	{r4, pc}
   16700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16704:	sub	sp, sp, #12
   16708:	mov	fp, r0
   1670c:	mov	sl, r1
   16710:	mov	r9, r2
   16714:	mov	r7, r3
   16718:	ldr	r6, [sp, #48]	; 0x30
   1671c:	ldr	r5, [r1]
   16720:	asrs	r4, r5, #1
   16724:	bmi	16880 <dcngettext@plt+0x55b4>
   16728:	cmp	r5, #0
   1672c:	blt	16894 <dcngettext@plt+0x55c8>
   16730:	mvn	r3, #-2147483648	; 0x80000000
   16734:	sub	r3, r3, r4
   16738:	cmp	r5, r3
   1673c:	movle	r3, #0
   16740:	movgt	r3, #1
   16744:	cmp	r3, #0
   16748:	addeq	r4, r4, r5
   1674c:	mvnne	r4, #-2147483648	; 0x80000000
   16750:	mvn	r8, r7
   16754:	lsr	r8, r8, #31
   16758:	cmp	r7, r4
   1675c:	movge	r3, #0
   16760:	andlt	r3, r8, #1
   16764:	cmp	r3, #0
   16768:	movne	r4, r7
   1676c:	cmp	r6, #0
   16770:	blt	168a8 <dcngettext@plt+0x55dc>
   16774:	cmp	r6, #0
   16778:	beq	16954 <dcngettext@plt+0x5688>
   1677c:	cmp	r4, #0
   16780:	blt	16904 <dcngettext@plt+0x5638>
   16784:	mov	r1, r6
   16788:	mvn	r0, #-2147483648	; 0x80000000
   1678c:	bl	170c4 <dcngettext@plt+0x5df8>
   16790:	cmp	r0, r4
   16794:	movge	r0, #0
   16798:	movlt	r0, #1
   1679c:	cmp	r0, #0
   167a0:	mvnne	r3, #-2147483648	; 0x80000000
   167a4:	strne	r3, [sp, #4]
   167a8:	beq	1693c <dcngettext@plt+0x5670>
   167ac:	mov	r1, r6
   167b0:	ldr	r0, [sp, #4]
   167b4:	bl	170c4 <dcngettext@plt+0x5df8>
   167b8:	mov	r4, r0
   167bc:	mov	r1, r6
   167c0:	ldr	r0, [sp, #4]
   167c4:	bl	172e4 <dcngettext@plt+0x6018>
   167c8:	ldr	r3, [sp, #4]
   167cc:	sub	r1, r3, r1
   167d0:	cmp	fp, #0
   167d4:	moveq	r3, #0
   167d8:	streq	r3, [sl]
   167dc:	sub	r3, r4, r5
   167e0:	cmp	r3, r9
   167e4:	bge	1686c <dcngettext@plt+0x55a0>
   167e8:	cmp	r9, #0
   167ec:	blt	16960 <dcngettext@plt+0x5694>
   167f0:	cmp	r5, #0
   167f4:	blt	16974 <dcngettext@plt+0x56a8>
   167f8:	mvn	r3, #-2147483648	; 0x80000000
   167fc:	sub	r3, r3, r9
   16800:	cmp	r5, r3
   16804:	movle	r3, #0
   16808:	movgt	r3, #1
   1680c:	cmp	r3, #0
   16810:	bne	16a1c <dcngettext@plt+0x5750>
   16814:	add	r5, r5, r9
   16818:	mov	r4, r5
   1681c:	cmp	r7, r5
   16820:	movge	r7, #0
   16824:	andlt	r7, r8, #1
   16828:	cmp	r7, #0
   1682c:	bne	16a1c <dcngettext@plt+0x5750>
   16830:	cmp	r6, #0
   16834:	blt	16988 <dcngettext@plt+0x56bc>
   16838:	cmp	r6, #0
   1683c:	beq	16868 <dcngettext@plt+0x559c>
   16840:	cmp	r5, #0
   16844:	blt	169e4 <dcngettext@plt+0x5718>
   16848:	mov	r1, r6
   1684c:	mvn	r0, #-2147483648	; 0x80000000
   16850:	bl	170c4 <dcngettext@plt+0x5df8>
   16854:	cmp	r5, r0
   16858:	movle	r0, #0
   1685c:	movgt	r0, #1
   16860:	cmp	r0, #0
   16864:	bne	16a1c <dcngettext@plt+0x5750>
   16868:	mul	r1, r5, r6
   1686c:	mov	r0, fp
   16870:	bl	16588 <dcngettext@plt+0x52bc>
   16874:	str	r4, [sl]
   16878:	add	sp, sp, #12
   1687c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16880:	rsb	r3, r4, #-2147483648	; 0x80000000
   16884:	cmp	r5, r3
   16888:	movge	r3, #0
   1688c:	movlt	r3, #1
   16890:	b	16744 <dcngettext@plt+0x5478>
   16894:	rsb	r3, r5, #-2147483648	; 0x80000000
   16898:	cmp	r4, r3
   1689c:	movge	r3, #0
   168a0:	movlt	r3, #1
   168a4:	b	16744 <dcngettext@plt+0x5478>
   168a8:	cmp	r4, #0
   168ac:	blt	168d4 <dcngettext@plt+0x5608>
   168b0:	cmn	r6, #1
   168b4:	beq	168f0 <dcngettext@plt+0x5624>
   168b8:	mov	r1, r6
   168bc:	mov	r0, #-2147483648	; 0x80000000
   168c0:	bl	170c4 <dcngettext@plt+0x5df8>
   168c4:	cmp	r0, r4
   168c8:	movge	r0, #0
   168cc:	movlt	r0, #1
   168d0:	b	1679c <dcngettext@plt+0x54d0>
   168d4:	mov	r1, r6
   168d8:	mvn	r0, #-2147483648	; 0x80000000
   168dc:	bl	170c4 <dcngettext@plt+0x5df8>
   168e0:	cmp	r0, r4
   168e4:	movle	r0, #0
   168e8:	movgt	r0, #1
   168ec:	b	1679c <dcngettext@plt+0x54d0>
   168f0:	add	r0, r4, #-2147483648	; 0x80000000
   168f4:	cmp	r0, #0
   168f8:	movle	r0, #0
   168fc:	movgt	r0, #1
   16900:	b	1679c <dcngettext@plt+0x54d0>
   16904:	cmn	r4, #1
   16908:	beq	16928 <dcngettext@plt+0x565c>
   1690c:	mov	r1, r4
   16910:	mov	r0, #-2147483648	; 0x80000000
   16914:	bl	170c4 <dcngettext@plt+0x5df8>
   16918:	cmp	r6, r0
   1691c:	movle	r0, #0
   16920:	movgt	r0, #1
   16924:	b	1679c <dcngettext@plt+0x54d0>
   16928:	add	r0, r6, #-2147483648	; 0x80000000
   1692c:	cmp	r0, #0
   16930:	movle	r0, #0
   16934:	movgt	r0, #1
   16938:	b	1679c <dcngettext@plt+0x54d0>
   1693c:	mul	r1, r6, r4
   16940:	cmp	r1, #63	; 0x3f
   16944:	movle	r3, #64	; 0x40
   16948:	strle	r3, [sp, #4]
   1694c:	bgt	167d0 <dcngettext@plt+0x5504>
   16950:	b	167ac <dcngettext@plt+0x54e0>
   16954:	mov	r3, #64	; 0x40
   16958:	str	r3, [sp, #4]
   1695c:	b	167ac <dcngettext@plt+0x54e0>
   16960:	rsb	r3, r9, #-2147483648	; 0x80000000
   16964:	cmp	r5, r3
   16968:	movge	r3, #0
   1696c:	movlt	r3, #1
   16970:	b	1680c <dcngettext@plt+0x5540>
   16974:	rsb	r3, r5, #-2147483648	; 0x80000000
   16978:	cmp	r9, r3
   1697c:	movge	r3, #0
   16980:	movlt	r3, #1
   16984:	b	1680c <dcngettext@plt+0x5540>
   16988:	cmp	r5, #0
   1698c:	blt	169b4 <dcngettext@plt+0x56e8>
   16990:	cmn	r6, #1
   16994:	beq	169d0 <dcngettext@plt+0x5704>
   16998:	mov	r1, r6
   1699c:	mov	r0, #-2147483648	; 0x80000000
   169a0:	bl	170c4 <dcngettext@plt+0x5df8>
   169a4:	cmp	r5, r0
   169a8:	movle	r0, #0
   169ac:	movgt	r0, #1
   169b0:	b	16860 <dcngettext@plt+0x5594>
   169b4:	mov	r1, r6
   169b8:	mvn	r0, #-2147483648	; 0x80000000
   169bc:	bl	170c4 <dcngettext@plt+0x5df8>
   169c0:	cmp	r5, r0
   169c4:	movge	r0, #0
   169c8:	movlt	r0, #1
   169cc:	b	16860 <dcngettext@plt+0x5594>
   169d0:	add	r0, r5, #-2147483648	; 0x80000000
   169d4:	cmp	r0, #0
   169d8:	movle	r0, #0
   169dc:	movgt	r0, #1
   169e0:	b	16860 <dcngettext@plt+0x5594>
   169e4:	cmn	r5, #1
   169e8:	beq	16a08 <dcngettext@plt+0x573c>
   169ec:	mov	r1, r5
   169f0:	mov	r0, #-2147483648	; 0x80000000
   169f4:	bl	170c4 <dcngettext@plt+0x5df8>
   169f8:	cmp	r6, r0
   169fc:	movle	r0, #0
   16a00:	movgt	r0, #1
   16a04:	b	16860 <dcngettext@plt+0x5594>
   16a08:	add	r0, r6, #-2147483648	; 0x80000000
   16a0c:	cmp	r0, #0
   16a10:	movle	r0, #0
   16a14:	movgt	r0, #1
   16a18:	b	16860 <dcngettext@plt+0x5594>
   16a1c:	bl	16af8 <dcngettext@plt+0x582c>
   16a20:	push	{r4, lr}
   16a24:	bl	16b38 <dcngettext@plt+0x586c>
   16a28:	cmp	r0, #0
   16a2c:	popne	{r4, pc}
   16a30:	bl	16af8 <dcngettext@plt+0x582c>
   16a34:	push	{r4, lr}
   16a38:	mov	r1, #1
   16a3c:	bl	16a20 <dcngettext@plt+0x5754>
   16a40:	pop	{r4, pc}
   16a44:	push	{r4, lr}
   16a48:	bl	16b38 <dcngettext@plt+0x586c>
   16a4c:	cmp	r0, #0
   16a50:	popne	{r4, pc}
   16a54:	bl	16af8 <dcngettext@plt+0x582c>
   16a58:	push	{r4, lr}
   16a5c:	mov	r1, #1
   16a60:	bl	16a44 <dcngettext@plt+0x5778>
   16a64:	pop	{r4, pc}
   16a68:	push	{r4, r5, r6, lr}
   16a6c:	mov	r5, r0
   16a70:	mov	r4, r1
   16a74:	mov	r0, r1
   16a78:	bl	16554 <dcngettext@plt+0x5288>
   16a7c:	mov	r2, r4
   16a80:	mov	r1, r5
   16a84:	bl	11008 <memcpy@plt>
   16a88:	pop	{r4, r5, r6, pc}
   16a8c:	push	{r4, r5, r6, lr}
   16a90:	mov	r5, r0
   16a94:	mov	r4, r1
   16a98:	mov	r0, r1
   16a9c:	bl	16568 <dcngettext@plt+0x529c>
   16aa0:	mov	r2, r4
   16aa4:	mov	r1, r5
   16aa8:	bl	11008 <memcpy@plt>
   16aac:	pop	{r4, r5, r6, pc}
   16ab0:	push	{r4, r5, r6, lr}
   16ab4:	mov	r5, r0
   16ab8:	mov	r4, r1
   16abc:	add	r0, r1, #1
   16ac0:	bl	16568 <dcngettext@plt+0x529c>
   16ac4:	mov	r2, #0
   16ac8:	strb	r2, [r0, r4]
   16acc:	mov	r2, r4
   16ad0:	mov	r1, r5
   16ad4:	bl	11008 <memcpy@plt>
   16ad8:	pop	{r4, r5, r6, pc}
   16adc:	push	{r4, lr}
   16ae0:	mov	r4, r0
   16ae4:	bl	1117c <strlen@plt>
   16ae8:	add	r1, r0, #1
   16aec:	mov	r0, r4
   16af0:	bl	16a68 <dcngettext@plt+0x579c>
   16af4:	pop	{r4, pc}
   16af8:	push	{r4, lr}
   16afc:	ldr	r3, [pc, #40]	; 16b2c <dcngettext@plt+0x5860>
   16b00:	ldr	r4, [r3]
   16b04:	mov	r2, #5
   16b08:	ldr	r1, [pc, #32]	; 16b30 <dcngettext@plt+0x5864>
   16b0c:	mov	r0, #0
   16b10:	bl	11044 <dcgettext@plt>
   16b14:	mov	r3, r0
   16b18:	ldr	r2, [pc, #20]	; 16b34 <dcngettext@plt+0x5868>
   16b1c:	mov	r1, #0
   16b20:	mov	r0, r4
   16b24:	bl	110d4 <error@plt>
   16b28:	bl	112b4 <abort@plt>
   16b2c:	andeq	r8, r2, r4, lsr r1
   16b30:			; <UNDEFINED> instruction: 0x00017eb8
   16b34:	andeq	r7, r1, r8, lsl #20
   16b38:	push	{r4, lr}
   16b3c:	mov	r2, r0
   16b40:	mov	r3, r1
   16b44:	cmp	r1, #0
   16b48:	cmpne	r0, #0
   16b4c:	moveq	r3, #1
   16b50:	moveq	r2, r3
   16b54:	umull	r0, r1, r2, r3
   16b58:	cmp	r0, #0
   16b5c:	cmpge	r1, #0
   16b60:	bne	16b74 <dcngettext@plt+0x58a8>
   16b64:	mov	r1, r3
   16b68:	mov	r0, r2
   16b6c:	bl	10f90 <calloc@plt>
   16b70:	pop	{r4, pc}
   16b74:	bl	11194 <__errno_location@plt>
   16b78:	mov	r3, #12
   16b7c:	str	r3, [r0]
   16b80:	mov	r0, #0
   16b84:	pop	{r4, pc}
   16b88:	push	{r4, lr}
   16b8c:	cmp	r0, #0
   16b90:	moveq	r0, #1
   16b94:	cmp	r0, #0
   16b98:	blt	16ba4 <dcngettext@plt+0x58d8>
   16b9c:	bl	110ec <malloc@plt>
   16ba0:	pop	{r4, pc}
   16ba4:	bl	11194 <__errno_location@plt>
   16ba8:	mov	r3, #12
   16bac:	str	r3, [r0]
   16bb0:	mov	r0, #0
   16bb4:	pop	{r4, pc}
   16bb8:	push	{r4, lr}
   16bbc:	cmp	r0, #0
   16bc0:	beq	16bdc <dcngettext@plt+0x5910>
   16bc4:	cmp	r1, #0
   16bc8:	beq	16be8 <dcngettext@plt+0x591c>
   16bcc:	cmp	r1, #0
   16bd0:	blt	16bf4 <dcngettext@plt+0x5928>
   16bd4:	bl	1105c <realloc@plt>
   16bd8:	pop	{r4, pc}
   16bdc:	mov	r0, r1
   16be0:	bl	16b88 <dcngettext@plt+0x58bc>
   16be4:	pop	{r4, pc}
   16be8:	bl	16c80 <dcngettext@plt+0x59b4>
   16bec:	mov	r0, #0
   16bf0:	pop	{r4, pc}
   16bf4:	bl	11194 <__errno_location@plt>
   16bf8:	mov	r3, #12
   16bfc:	str	r3, [r0]
   16c00:	mov	r0, #0
   16c04:	pop	{r4, pc}
   16c08:	push	{r4, r5, r6, lr}
   16c0c:	mov	r5, r0
   16c10:	bl	110bc <__fpending@plt>
   16c14:	mov	r6, r0
   16c18:	ldr	r4, [r5]
   16c1c:	and	r4, r4, #32
   16c20:	mov	r0, r5
   16c24:	bl	11f38 <dcngettext@plt+0xc6c>
   16c28:	cmp	r4, #0
   16c2c:	bne	16c54 <dcngettext@plt+0x5988>
   16c30:	cmp	r0, #0
   16c34:	popeq	{r4, r5, r6, pc}
   16c38:	cmp	r6, #0
   16c3c:	bne	16c70 <dcngettext@plt+0x59a4>
   16c40:	bl	11194 <__errno_location@plt>
   16c44:	ldr	r0, [r0]
   16c48:	subs	r0, r0, #9
   16c4c:	mvnne	r0, #0
   16c50:	pop	{r4, r5, r6, pc}
   16c54:	cmp	r0, #0
   16c58:	bne	16c78 <dcngettext@plt+0x59ac>
   16c5c:	bl	11194 <__errno_location@plt>
   16c60:	mov	r3, #0
   16c64:	str	r3, [r0]
   16c68:	mvn	r0, #0
   16c6c:	pop	{r4, r5, r6, pc}
   16c70:	mvn	r0, #0
   16c74:	pop	{r4, r5, r6, pc}
   16c78:	mvn	r0, #0
   16c7c:	pop	{r4, r5, r6, pc}
   16c80:	push	{r4, r5, lr}
   16c84:	sub	sp, sp, #12
   16c88:	mov	r5, r0
   16c8c:	bl	11194 <__errno_location@plt>
   16c90:	mov	r4, r0
   16c94:	ldr	r3, [r0]
   16c98:	str	r3, [sp]
   16c9c:	str	r3, [sp, #4]
   16ca0:	mov	r3, #0
   16ca4:	str	r3, [r0]
   16ca8:	mov	r0, r5
   16cac:	bl	10ff0 <free@plt>
   16cb0:	ldr	r3, [r4]
   16cb4:	cmp	r3, #0
   16cb8:	moveq	r3, #4
   16cbc:	movne	r3, #0
   16cc0:	add	r2, sp, #8
   16cc4:	add	r3, r2, r3
   16cc8:	ldr	r3, [r3, #-8]
   16ccc:	str	r3, [r4]
   16cd0:	add	sp, sp, #12
   16cd4:	pop	{r4, r5, pc}
   16cd8:	push	{r4, lr}
   16cdc:	mov	r0, #14
   16ce0:	bl	11248 <nl_langinfo@plt>
   16ce4:	cmp	r0, #0
   16ce8:	beq	16d00 <dcngettext@plt+0x5a34>
   16cec:	ldrb	r2, [r0]
   16cf0:	ldr	r3, [pc, #16]	; 16d08 <dcngettext@plt+0x5a3c>
   16cf4:	cmp	r2, #0
   16cf8:	moveq	r0, r3
   16cfc:	pop	{r4, pc}
   16d00:	ldr	r0, [pc]	; 16d08 <dcngettext@plt+0x5a3c>
   16d04:	pop	{r4, pc}
   16d08:	andeq	r7, r1, ip, asr #29
   16d0c:	push	{r4, r5, r6, r7, lr}
   16d10:	sub	sp, sp, #12
   16d14:	mov	r7, r1
   16d18:	mov	r5, r2
   16d1c:	subs	r6, r0, #0
   16d20:	addeq	r6, sp, #4
   16d24:	mov	r0, r6
   16d28:	bl	110c8 <mbrtowc@plt>
   16d2c:	mov	r4, r0
   16d30:	cmp	r5, #0
   16d34:	cmnne	r0, #3
   16d38:	bhi	16d48 <dcngettext@plt+0x5a7c>
   16d3c:	mov	r0, r4
   16d40:	add	sp, sp, #12
   16d44:	pop	{r4, r5, r6, r7, pc}
   16d48:	mov	r0, #0
   16d4c:	bl	16db0 <dcngettext@plt+0x5ae4>
   16d50:	cmp	r0, #0
   16d54:	ldrbeq	r3, [r7]
   16d58:	streq	r3, [r6]
   16d5c:	moveq	r4, #1
   16d60:	b	16d3c <dcngettext@plt+0x5a70>
   16d64:	push	{r4, r5, r6, lr}
   16d68:	mov	r6, r0
   16d6c:	mov	r5, r1
   16d70:	subs	r4, r2, #0
   16d74:	beq	16da0 <dcngettext@plt+0x5ad4>
   16d78:	mov	r1, r4
   16d7c:	mvn	r0, #0
   16d80:	bl	16eb8 <dcngettext@plt+0x5bec>
   16d84:	cmp	r0, r5
   16d88:	bcs	16da0 <dcngettext@plt+0x5ad4>
   16d8c:	bl	11194 <__errno_location@plt>
   16d90:	mov	r3, #12
   16d94:	str	r3, [r0]
   16d98:	mov	r0, #0
   16d9c:	pop	{r4, r5, r6, pc}
   16da0:	mul	r1, r5, r4
   16da4:	mov	r0, r6
   16da8:	bl	16bb8 <dcngettext@plt+0x58ec>
   16dac:	pop	{r4, r5, r6, pc}
   16db0:	push	{lr}		; (str lr, [sp, #-4]!)
   16db4:	sub	sp, sp, #268	; 0x10c
   16db8:	ldr	r2, [pc, #68]	; 16e04 <dcngettext@plt+0x5b38>
   16dbc:	add	r1, sp, #4
   16dc0:	bl	16e10 <dcngettext@plt+0x5b44>
   16dc4:	cmp	r0, #0
   16dc8:	movne	r0, #0
   16dcc:	bne	16dfc <dcngettext@plt+0x5b30>
   16dd0:	ldr	r1, [pc, #48]	; 16e08 <dcngettext@plt+0x5b3c>
   16dd4:	add	r0, sp, #4
   16dd8:	bl	10fc0 <strcmp@plt>
   16ddc:	cmp	r0, #0
   16de0:	moveq	r0, #0
   16de4:	beq	16dfc <dcngettext@plt+0x5b30>
   16de8:	ldr	r1, [pc, #28]	; 16e0c <dcngettext@plt+0x5b40>
   16dec:	add	r0, sp, #4
   16df0:	bl	10fc0 <strcmp@plt>
   16df4:	adds	r0, r0, #0
   16df8:	movne	r0, #1
   16dfc:	add	sp, sp, #268	; 0x10c
   16e00:	pop	{pc}		; (ldr pc, [sp], #4)
   16e04:	andeq	r0, r0, r1, lsl #2
   16e08:	strdeq	r7, [r1], -r4
   16e0c:	ldrdeq	r7, [r1], -r4
   16e10:	push	{r4, r5, r6, lr}
   16e14:	mov	r6, r1
   16e18:	mov	r4, r2
   16e1c:	mov	r1, #0
   16e20:	bl	11230 <setlocale@plt>
   16e24:	subs	r5, r0, #0
   16e28:	beq	16e4c <dcngettext@plt+0x5b80>
   16e2c:	mov	r0, r5
   16e30:	bl	1117c <strlen@plt>
   16e34:	cmp	r4, r0
   16e38:	bhi	16e64 <dcngettext@plt+0x5b98>
   16e3c:	cmp	r4, #0
   16e40:	bne	16e7c <dcngettext@plt+0x5bb0>
   16e44:	mov	r0, #34	; 0x22
   16e48:	pop	{r4, r5, r6, pc}
   16e4c:	cmp	r4, #0
   16e50:	beq	16ea0 <dcngettext@plt+0x5bd4>
   16e54:	mov	r3, #0
   16e58:	strb	r3, [r6]
   16e5c:	mov	r0, #22
   16e60:	pop	{r4, r5, r6, pc}
   16e64:	add	r2, r0, #1
   16e68:	mov	r1, r5
   16e6c:	mov	r0, r6
   16e70:	bl	11008 <memcpy@plt>
   16e74:	mov	r0, #0
   16e78:	pop	{r4, r5, r6, pc}
   16e7c:	sub	r4, r4, #1
   16e80:	mov	r2, r4
   16e84:	mov	r1, r5
   16e88:	mov	r0, r6
   16e8c:	bl	11008 <memcpy@plt>
   16e90:	mov	r3, #0
   16e94:	strb	r3, [r6, r4]
   16e98:	mov	r0, #34	; 0x22
   16e9c:	pop	{r4, r5, r6, pc}
   16ea0:	mov	r0, #22
   16ea4:	pop	{r4, r5, r6, pc}
   16ea8:	push	{r4, lr}
   16eac:	mov	r1, #0
   16eb0:	bl	11230 <setlocale@plt>
   16eb4:	pop	{r4, pc}
   16eb8:	subs	r2, r1, #1
   16ebc:	bxeq	lr
   16ec0:	bcc	17098 <dcngettext@plt+0x5dcc>
   16ec4:	cmp	r0, r1
   16ec8:	bls	1707c <dcngettext@plt+0x5db0>
   16ecc:	tst	r1, r2
   16ed0:	beq	17088 <dcngettext@plt+0x5dbc>
   16ed4:	clz	r3, r0
   16ed8:	clz	r2, r1
   16edc:	sub	r3, r2, r3
   16ee0:	rsbs	r3, r3, #31
   16ee4:	addne	r3, r3, r3, lsl #1
   16ee8:	mov	r2, #0
   16eec:	addne	pc, pc, r3, lsl #2
   16ef0:	nop			; (mov r0, r0)
   16ef4:	cmp	r0, r1, lsl #31
   16ef8:	adc	r2, r2, r2
   16efc:	subcs	r0, r0, r1, lsl #31
   16f00:	cmp	r0, r1, lsl #30
   16f04:	adc	r2, r2, r2
   16f08:	subcs	r0, r0, r1, lsl #30
   16f0c:	cmp	r0, r1, lsl #29
   16f10:	adc	r2, r2, r2
   16f14:	subcs	r0, r0, r1, lsl #29
   16f18:	cmp	r0, r1, lsl #28
   16f1c:	adc	r2, r2, r2
   16f20:	subcs	r0, r0, r1, lsl #28
   16f24:	cmp	r0, r1, lsl #27
   16f28:	adc	r2, r2, r2
   16f2c:	subcs	r0, r0, r1, lsl #27
   16f30:	cmp	r0, r1, lsl #26
   16f34:	adc	r2, r2, r2
   16f38:	subcs	r0, r0, r1, lsl #26
   16f3c:	cmp	r0, r1, lsl #25
   16f40:	adc	r2, r2, r2
   16f44:	subcs	r0, r0, r1, lsl #25
   16f48:	cmp	r0, r1, lsl #24
   16f4c:	adc	r2, r2, r2
   16f50:	subcs	r0, r0, r1, lsl #24
   16f54:	cmp	r0, r1, lsl #23
   16f58:	adc	r2, r2, r2
   16f5c:	subcs	r0, r0, r1, lsl #23
   16f60:	cmp	r0, r1, lsl #22
   16f64:	adc	r2, r2, r2
   16f68:	subcs	r0, r0, r1, lsl #22
   16f6c:	cmp	r0, r1, lsl #21
   16f70:	adc	r2, r2, r2
   16f74:	subcs	r0, r0, r1, lsl #21
   16f78:	cmp	r0, r1, lsl #20
   16f7c:	adc	r2, r2, r2
   16f80:	subcs	r0, r0, r1, lsl #20
   16f84:	cmp	r0, r1, lsl #19
   16f88:	adc	r2, r2, r2
   16f8c:	subcs	r0, r0, r1, lsl #19
   16f90:	cmp	r0, r1, lsl #18
   16f94:	adc	r2, r2, r2
   16f98:	subcs	r0, r0, r1, lsl #18
   16f9c:	cmp	r0, r1, lsl #17
   16fa0:	adc	r2, r2, r2
   16fa4:	subcs	r0, r0, r1, lsl #17
   16fa8:	cmp	r0, r1, lsl #16
   16fac:	adc	r2, r2, r2
   16fb0:	subcs	r0, r0, r1, lsl #16
   16fb4:	cmp	r0, r1, lsl #15
   16fb8:	adc	r2, r2, r2
   16fbc:	subcs	r0, r0, r1, lsl #15
   16fc0:	cmp	r0, r1, lsl #14
   16fc4:	adc	r2, r2, r2
   16fc8:	subcs	r0, r0, r1, lsl #14
   16fcc:	cmp	r0, r1, lsl #13
   16fd0:	adc	r2, r2, r2
   16fd4:	subcs	r0, r0, r1, lsl #13
   16fd8:	cmp	r0, r1, lsl #12
   16fdc:	adc	r2, r2, r2
   16fe0:	subcs	r0, r0, r1, lsl #12
   16fe4:	cmp	r0, r1, lsl #11
   16fe8:	adc	r2, r2, r2
   16fec:	subcs	r0, r0, r1, lsl #11
   16ff0:	cmp	r0, r1, lsl #10
   16ff4:	adc	r2, r2, r2
   16ff8:	subcs	r0, r0, r1, lsl #10
   16ffc:	cmp	r0, r1, lsl #9
   17000:	adc	r2, r2, r2
   17004:	subcs	r0, r0, r1, lsl #9
   17008:	cmp	r0, r1, lsl #8
   1700c:	adc	r2, r2, r2
   17010:	subcs	r0, r0, r1, lsl #8
   17014:	cmp	r0, r1, lsl #7
   17018:	adc	r2, r2, r2
   1701c:	subcs	r0, r0, r1, lsl #7
   17020:	cmp	r0, r1, lsl #6
   17024:	adc	r2, r2, r2
   17028:	subcs	r0, r0, r1, lsl #6
   1702c:	cmp	r0, r1, lsl #5
   17030:	adc	r2, r2, r2
   17034:	subcs	r0, r0, r1, lsl #5
   17038:	cmp	r0, r1, lsl #4
   1703c:	adc	r2, r2, r2
   17040:	subcs	r0, r0, r1, lsl #4
   17044:	cmp	r0, r1, lsl #3
   17048:	adc	r2, r2, r2
   1704c:	subcs	r0, r0, r1, lsl #3
   17050:	cmp	r0, r1, lsl #2
   17054:	adc	r2, r2, r2
   17058:	subcs	r0, r0, r1, lsl #2
   1705c:	cmp	r0, r1, lsl #1
   17060:	adc	r2, r2, r2
   17064:	subcs	r0, r0, r1, lsl #1
   17068:	cmp	r0, r1
   1706c:	adc	r2, r2, r2
   17070:	subcs	r0, r0, r1
   17074:	mov	r0, r2
   17078:	bx	lr
   1707c:	moveq	r0, #1
   17080:	movne	r0, #0
   17084:	bx	lr
   17088:	clz	r2, r1
   1708c:	rsb	r2, r2, #31
   17090:	lsr	r0, r0, r2
   17094:	bx	lr
   17098:	cmp	r0, #0
   1709c:	mvnne	r0, #0
   170a0:	b	17340 <dcngettext@plt+0x6074>
   170a4:	cmp	r1, #0
   170a8:	beq	17098 <dcngettext@plt+0x5dcc>
   170ac:	push	{r0, r1, lr}
   170b0:	bl	16eb8 <dcngettext@plt+0x5bec>
   170b4:	pop	{r1, r2, lr}
   170b8:	mul	r3, r2, r0
   170bc:	sub	r1, r1, r3
   170c0:	bx	lr
   170c4:	cmp	r1, #0
   170c8:	beq	172d4 <dcngettext@plt+0x6008>
   170cc:	eor	ip, r0, r1
   170d0:	rsbmi	r1, r1, #0
   170d4:	subs	r2, r1, #1
   170d8:	beq	172a0 <dcngettext@plt+0x5fd4>
   170dc:	movs	r3, r0
   170e0:	rsbmi	r3, r0, #0
   170e4:	cmp	r3, r1
   170e8:	bls	172ac <dcngettext@plt+0x5fe0>
   170ec:	tst	r1, r2
   170f0:	beq	172bc <dcngettext@plt+0x5ff0>
   170f4:	clz	r2, r3
   170f8:	clz	r0, r1
   170fc:	sub	r2, r0, r2
   17100:	rsbs	r2, r2, #31
   17104:	addne	r2, r2, r2, lsl #1
   17108:	mov	r0, #0
   1710c:	addne	pc, pc, r2, lsl #2
   17110:	nop			; (mov r0, r0)
   17114:	cmp	r3, r1, lsl #31
   17118:	adc	r0, r0, r0
   1711c:	subcs	r3, r3, r1, lsl #31
   17120:	cmp	r3, r1, lsl #30
   17124:	adc	r0, r0, r0
   17128:	subcs	r3, r3, r1, lsl #30
   1712c:	cmp	r3, r1, lsl #29
   17130:	adc	r0, r0, r0
   17134:	subcs	r3, r3, r1, lsl #29
   17138:	cmp	r3, r1, lsl #28
   1713c:	adc	r0, r0, r0
   17140:	subcs	r3, r3, r1, lsl #28
   17144:	cmp	r3, r1, lsl #27
   17148:	adc	r0, r0, r0
   1714c:	subcs	r3, r3, r1, lsl #27
   17150:	cmp	r3, r1, lsl #26
   17154:	adc	r0, r0, r0
   17158:	subcs	r3, r3, r1, lsl #26
   1715c:	cmp	r3, r1, lsl #25
   17160:	adc	r0, r0, r0
   17164:	subcs	r3, r3, r1, lsl #25
   17168:	cmp	r3, r1, lsl #24
   1716c:	adc	r0, r0, r0
   17170:	subcs	r3, r3, r1, lsl #24
   17174:	cmp	r3, r1, lsl #23
   17178:	adc	r0, r0, r0
   1717c:	subcs	r3, r3, r1, lsl #23
   17180:	cmp	r3, r1, lsl #22
   17184:	adc	r0, r0, r0
   17188:	subcs	r3, r3, r1, lsl #22
   1718c:	cmp	r3, r1, lsl #21
   17190:	adc	r0, r0, r0
   17194:	subcs	r3, r3, r1, lsl #21
   17198:	cmp	r3, r1, lsl #20
   1719c:	adc	r0, r0, r0
   171a0:	subcs	r3, r3, r1, lsl #20
   171a4:	cmp	r3, r1, lsl #19
   171a8:	adc	r0, r0, r0
   171ac:	subcs	r3, r3, r1, lsl #19
   171b0:	cmp	r3, r1, lsl #18
   171b4:	adc	r0, r0, r0
   171b8:	subcs	r3, r3, r1, lsl #18
   171bc:	cmp	r3, r1, lsl #17
   171c0:	adc	r0, r0, r0
   171c4:	subcs	r3, r3, r1, lsl #17
   171c8:	cmp	r3, r1, lsl #16
   171cc:	adc	r0, r0, r0
   171d0:	subcs	r3, r3, r1, lsl #16
   171d4:	cmp	r3, r1, lsl #15
   171d8:	adc	r0, r0, r0
   171dc:	subcs	r3, r3, r1, lsl #15
   171e0:	cmp	r3, r1, lsl #14
   171e4:	adc	r0, r0, r0
   171e8:	subcs	r3, r3, r1, lsl #14
   171ec:	cmp	r3, r1, lsl #13
   171f0:	adc	r0, r0, r0
   171f4:	subcs	r3, r3, r1, lsl #13
   171f8:	cmp	r3, r1, lsl #12
   171fc:	adc	r0, r0, r0
   17200:	subcs	r3, r3, r1, lsl #12
   17204:	cmp	r3, r1, lsl #11
   17208:	adc	r0, r0, r0
   1720c:	subcs	r3, r3, r1, lsl #11
   17210:	cmp	r3, r1, lsl #10
   17214:	adc	r0, r0, r0
   17218:	subcs	r3, r3, r1, lsl #10
   1721c:	cmp	r3, r1, lsl #9
   17220:	adc	r0, r0, r0
   17224:	subcs	r3, r3, r1, lsl #9
   17228:	cmp	r3, r1, lsl #8
   1722c:	adc	r0, r0, r0
   17230:	subcs	r3, r3, r1, lsl #8
   17234:	cmp	r3, r1, lsl #7
   17238:	adc	r0, r0, r0
   1723c:	subcs	r3, r3, r1, lsl #7
   17240:	cmp	r3, r1, lsl #6
   17244:	adc	r0, r0, r0
   17248:	subcs	r3, r3, r1, lsl #6
   1724c:	cmp	r3, r1, lsl #5
   17250:	adc	r0, r0, r0
   17254:	subcs	r3, r3, r1, lsl #5
   17258:	cmp	r3, r1, lsl #4
   1725c:	adc	r0, r0, r0
   17260:	subcs	r3, r3, r1, lsl #4
   17264:	cmp	r3, r1, lsl #3
   17268:	adc	r0, r0, r0
   1726c:	subcs	r3, r3, r1, lsl #3
   17270:	cmp	r3, r1, lsl #2
   17274:	adc	r0, r0, r0
   17278:	subcs	r3, r3, r1, lsl #2
   1727c:	cmp	r3, r1, lsl #1
   17280:	adc	r0, r0, r0
   17284:	subcs	r3, r3, r1, lsl #1
   17288:	cmp	r3, r1
   1728c:	adc	r0, r0, r0
   17290:	subcs	r3, r3, r1
   17294:	cmp	ip, #0
   17298:	rsbmi	r0, r0, #0
   1729c:	bx	lr
   172a0:	teq	ip, r0
   172a4:	rsbmi	r0, r0, #0
   172a8:	bx	lr
   172ac:	movcc	r0, #0
   172b0:	asreq	r0, ip, #31
   172b4:	orreq	r0, r0, #1
   172b8:	bx	lr
   172bc:	clz	r2, r1
   172c0:	rsb	r2, r2, #31
   172c4:	cmp	ip, #0
   172c8:	lsr	r0, r3, r2
   172cc:	rsbmi	r0, r0, #0
   172d0:	bx	lr
   172d4:	cmp	r0, #0
   172d8:	mvngt	r0, #-2147483648	; 0x80000000
   172dc:	movlt	r0, #-2147483648	; 0x80000000
   172e0:	b	17340 <dcngettext@plt+0x6074>
   172e4:	cmp	r1, #0
   172e8:	beq	172d4 <dcngettext@plt+0x6008>
   172ec:	push	{r0, r1, lr}
   172f0:	bl	170cc <dcngettext@plt+0x5e00>
   172f4:	pop	{r1, r2, lr}
   172f8:	mul	r3, r2, r0
   172fc:	sub	r1, r1, r3
   17300:	bx	lr
   17304:	cmp	r3, #0
   17308:	cmpeq	r2, #0
   1730c:	bne	17324 <dcngettext@plt+0x6058>
   17310:	cmp	r1, #0
   17314:	cmpeq	r0, #0
   17318:	mvnne	r1, #0
   1731c:	mvnne	r0, #0
   17320:	b	17340 <dcngettext@plt+0x6074>
   17324:	sub	sp, sp, #8
   17328:	push	{sp, lr}
   1732c:	bl	17350 <dcngettext@plt+0x6084>
   17330:	ldr	lr, [sp, #4]
   17334:	add	sp, sp, #8
   17338:	pop	{r2, r3}
   1733c:	bx	lr
   17340:	push	{r1, lr}
   17344:	mov	r0, #8
   17348:	bl	10fa8 <raise@plt>
   1734c:	pop	{r1, pc}
   17350:	cmp	r1, r3
   17354:	push	{r4, r5, r6, r7, r8, r9, lr}
   17358:	cmpeq	r0, r2
   1735c:	mov	r4, r0
   17360:	mov	r5, r1
   17364:	ldr	r9, [sp, #28]
   17368:	movcc	r0, #0
   1736c:	movcc	r1, #0
   17370:	bcc	17468 <dcngettext@plt+0x619c>
   17374:	cmp	r3, #0
   17378:	clzeq	ip, r2
   1737c:	clzne	ip, r3
   17380:	addeq	ip, ip, #32
   17384:	cmp	r5, #0
   17388:	clzeq	r1, r4
   1738c:	addeq	r1, r1, #32
   17390:	clzne	r1, r5
   17394:	sub	ip, ip, r1
   17398:	sub	lr, ip, #32
   1739c:	lsl	r7, r3, ip
   173a0:	rsb	r8, ip, #32
   173a4:	orr	r7, r7, r2, lsl lr
   173a8:	orr	r7, r7, r2, lsr r8
   173ac:	lsl	r6, r2, ip
   173b0:	cmp	r5, r7
   173b4:	cmpeq	r4, r6
   173b8:	movcc	r0, #0
   173bc:	movcc	r1, #0
   173c0:	bcc	173dc <dcngettext@plt+0x6110>
   173c4:	mov	r3, #1
   173c8:	subs	r4, r4, r6
   173cc:	lsl	r1, r3, lr
   173d0:	lsl	r0, r3, ip
   173d4:	orr	r1, r1, r3, lsr r8
   173d8:	sbc	r5, r5, r7
   173dc:	cmp	ip, #0
   173e0:	beq	17468 <dcngettext@plt+0x619c>
   173e4:	lsrs	r3, r7, #1
   173e8:	rrx	r2, r6
   173ec:	mov	r6, ip
   173f0:	b	17414 <dcngettext@plt+0x6148>
   173f4:	subs	r4, r4, r2
   173f8:	sbc	r5, r5, r3
   173fc:	adds	r4, r4, r4
   17400:	adc	r5, r5, r5
   17404:	adds	r4, r4, #1
   17408:	adc	r5, r5, #0
   1740c:	subs	r6, r6, #1
   17410:	beq	17430 <dcngettext@plt+0x6164>
   17414:	cmp	r5, r3
   17418:	cmpeq	r4, r2
   1741c:	bcs	173f4 <dcngettext@plt+0x6128>
   17420:	adds	r4, r4, r4
   17424:	adc	r5, r5, r5
   17428:	subs	r6, r6, #1
   1742c:	bne	17414 <dcngettext@plt+0x6148>
   17430:	lsr	r6, r4, ip
   17434:	lsr	r7, r5, ip
   17438:	orr	r6, r6, r5, lsl r8
   1743c:	adds	r2, r0, r4
   17440:	orr	r6, r6, r5, lsr lr
   17444:	adc	r3, r1, r5
   17448:	lsl	r1, r7, ip
   1744c:	orr	r1, r1, r6, lsl lr
   17450:	lsl	r0, r6, ip
   17454:	orr	r1, r1, r6, lsr r8
   17458:	subs	r0, r2, r0
   1745c:	mov	r4, r6
   17460:	mov	r5, r7
   17464:	sbc	r1, r3, r1
   17468:	cmp	r9, #0
   1746c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   17470:	strd	r4, [r9]
   17474:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17478:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1747c:	mov	r7, r0
   17480:	ldr	r6, [pc, #72]	; 174d0 <dcngettext@plt+0x6204>
   17484:	ldr	r5, [pc, #72]	; 174d4 <dcngettext@plt+0x6208>
   17488:	add	r6, pc, r6
   1748c:	add	r5, pc, r5
   17490:	sub	r6, r6, r5
   17494:	mov	r8, r1
   17498:	mov	r9, r2
   1749c:	bl	10f70 <calloc@plt-0x20>
   174a0:	asrs	r6, r6, #2
   174a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   174a8:	mov	r4, #0
   174ac:	add	r4, r4, #1
   174b0:	ldr	r3, [r5], #4
   174b4:	mov	r2, r9
   174b8:	mov	r1, r8
   174bc:	mov	r0, r7
   174c0:	blx	r3
   174c4:	cmp	r6, r4
   174c8:	bne	174ac <dcngettext@plt+0x61e0>
   174cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174d0:	andeq	r0, r1, r0, lsl #21
   174d4:	andeq	r0, r1, r8, ror sl
   174d8:	bx	lr
   174dc:	ldr	r3, [pc, #12]	; 174f0 <dcngettext@plt+0x6224>
   174e0:	mov	r1, #0
   174e4:	add	r3, pc, r3
   174e8:	ldr	r2, [r3]
   174ec:	b	111a0 <__cxa_atexit@plt>
   174f0:	andeq	r0, r1, r0, asr #24

Disassembly of section .fini:

000174f4 <.fini>:
   174f4:	push	{r3, lr}
   174f8:	pop	{r3, pc}
