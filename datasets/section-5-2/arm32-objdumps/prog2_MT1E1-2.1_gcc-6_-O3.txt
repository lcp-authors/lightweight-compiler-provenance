
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b54 <.init>:
   10b54:	push	{r3, lr}
   10b58:	bl	110e0 <_start@@Base+0x3c>
   10b5c:	pop	{r3, pc}

Disassembly of section .plt:

00010b60 <calloc@plt-0x14>:
   10b60:	push	{lr}		; (str lr, [sp, #-4]!)
   10b64:	ldr	lr, [pc, #4]	; 10b70 <calloc@plt-0x4>
   10b68:	add	lr, pc, lr
   10b6c:	ldr	pc, [lr, #8]!
   10b70:	muleq	r1, r0, r4

00010b74 <calloc@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1168]!	; 0x490

00010b80 <strcmp@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1160]!	; 0x488

00010b8c <memmove@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1152]!	; 0x480

00010b98 <free@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1144]!	; 0x478

00010ba4 <memcpy@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1136]!	; 0x470

00010bb0 <realloc@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1128]!	; 0x468

00010bbc <fwrite@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1120]!	; 0x460

00010bc8 <strcpy@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1112]!	; 0x458

00010bd4 <puts@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #1104]!	; 0x450

00010be0 <malloc@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #1096]!	; 0x448

00010bec <__libc_start_main@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #1088]!	; 0x440

00010bf8 <__gmon_start__@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #1080]!	; 0x438

00010c04 <strlen@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #1072]!	; 0x430

00010c10 <fprintf@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #1064]!	; 0x428

00010c1c <sprintf@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #1056]!	; 0x420

00010c28 <abort@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00010c34 <main@@Base>:
   10c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c38:	sub	sp, sp, #36	; 0x24
   10c3c:	bl	11424 <vetor_novo@@Base>
   10c40:	ldr	r5, [pc, #1056]	; 11068 <main@@Base+0x434>
   10c44:	mov	r4, #0
   10c48:	mov	r6, r0
   10c4c:	str	r0, [sp, #4]
   10c50:	mov	r2, r4
   10c54:	ldr	r1, [r5, r4, lsl #2]
   10c58:	mov	r0, r6
   10c5c:	add	r4, r4, #1
   10c60:	bl	1156c <vetor_insere@@Base>
   10c64:	cmp	r4, #4
   10c68:	bne	10c50 <main@@Base+0x1c>
   10c6c:	bl	11824 <lista_nova@@Base>
   10c70:	ldr	sl, [pc, #1012]	; 1106c <main@@Base+0x438>
   10c74:	ldr	r6, [pc, #1012]	; 11070 <main@@Base+0x43c>
   10c78:	add	r9, r5, #12
   10c7c:	add	r4, r5, #220	; 0xdc
   10c80:	mov	r7, #65	; 0x41
   10c84:	mov	fp, #74	; 0x4a
   10c88:	mov	r8, r0
   10c8c:	b	10ce4 <main@@Base+0xb0>
   10c90:	cmp	r2, #8
   10c94:	beq	10d04 <main@@Base+0xd0>
   10c98:	cmp	r2, #9
   10c9c:	strheq	fp, [sp, #28]
   10ca0:	beq	10ccc <main@@Base+0x98>
   10ca4:	cmp	r2, #10
   10ca8:	moveq	r3, #81	; 0x51
   10cac:	strheq	r3, [sp, #28]
   10cb0:	beq	10ccc <main@@Base+0x98>
   10cb4:	cmp	r2, #11
   10cb8:	moveq	r3, #75	; 0x4b
   10cbc:	strheq	r3, [sp, #28]
   10cc0:	beq	10ccc <main@@Base+0x98>
   10cc4:	cmp	r2, #12
   10cc8:	strheq	r7, [sp, #28]
   10ccc:	ldr	r2, [r8]
   10cd0:	add	r1, sp, #28
   10cd4:	mov	r0, r8
   10cd8:	bl	118b0 <lista_insere@@Base>
   10cdc:	cmp	r9, r4
   10ce0:	beq	10d18 <main@@Base+0xe4>
   10ce4:	ldr	r2, [r9, #4]!
   10ce8:	cmp	r2, #7
   10cec:	bgt	10c90 <main@@Base+0x5c>
   10cf0:	add	r2, r2, #50	; 0x32
   10cf4:	mov	r1, r6
   10cf8:	add	r0, sp, #28
   10cfc:	bl	10c1c <sprintf@plt>
   10d00:	b	10ccc <main@@Base+0x98>
   10d04:	ldr	r3, [sl]
   10d08:	strh	r3, [sp, #28]
   10d0c:	lsr	r3, r3, #16
   10d10:	strb	r3, [sp, #30]
   10d14:	b	10ccc <main@@Base+0x98>
   10d18:	bl	11824 <lista_nova@@Base>
   10d1c:	ldr	r4, [pc, #848]	; 11074 <main@@Base+0x440>
   10d20:	mov	r6, #0
   10d24:	add	r7, r4, #52	; 0x34
   10d28:	mov	fp, r0
   10d2c:	ldr	r1, [r4, #4]!
   10d30:	mov	r2, r6
   10d34:	mov	r0, fp
   10d38:	bl	118b0 <lista_insere@@Base>
   10d3c:	cmp	r7, r4
   10d40:	bne	10d2c <main@@Base+0xf8>
   10d44:	ldr	r3, [pc, #812]	; 11078 <main@@Base+0x444>
   10d48:	mov	r1, fp
   10d4c:	mov	r0, r8
   10d50:	ldr	r4, [r3]
   10d54:	bl	111cc <tira_carta@@Base>
   10d58:	ldr	r1, [pc, #796]	; 1107c <main@@Base+0x448>
   10d5c:	mov	r2, r0
   10d60:	mov	r0, r4
   10d64:	bl	10c10 <fprintf@plt>
   10d68:	ldr	r3, [pc, #776]	; 11078 <main@@Base+0x444>
   10d6c:	mov	r1, fp
   10d70:	mov	r0, r8
   10d74:	ldr	r4, [r3]
   10d78:	bl	111cc <tira_carta@@Base>
   10d7c:	ldr	r1, [pc, #764]	; 11080 <main@@Base+0x44c>
   10d80:	mov	r2, r0
   10d84:	mov	r0, r4
   10d88:	bl	10c10 <fprintf@plt>
   10d8c:	ldr	r3, [pc, #740]	; 11078 <main@@Base+0x444>
   10d90:	mov	r1, fp
   10d94:	mov	r0, r8
   10d98:	ldr	r4, [r3]
   10d9c:	bl	111cc <tira_carta@@Base>
   10da0:	ldr	r1, [pc, #732]	; 11084 <main@@Base+0x450>
   10da4:	mov	r2, r0
   10da8:	mov	r0, r4
   10dac:	bl	10c10 <fprintf@plt>
   10db0:	ldr	r1, [r5, #212]	; 0xd4
   10db4:	mov	r0, r8
   10db8:	bl	11364 <insere_carta@@Base>
   10dbc:	ldr	r1, [r5, #216]	; 0xd8
   10dc0:	mov	r0, r8
   10dc4:	bl	11364 <insere_carta@@Base>
   10dc8:	ldr	r1, [r5, #220]	; 0xdc
   10dcc:	mov	r0, r8
   10dd0:	bl	11364 <insere_carta@@Base>
   10dd4:	mov	r3, #0
   10dd8:	str	r3, [sp, #12]
   10ddc:	bl	11424 <vetor_novo@@Base>
   10de0:	str	r8, [sp]
   10de4:	str	r0, [sp, #20]
   10de8:	ldr	r3, [sp, #4]
   10dec:	ldr	r4, [r3]
   10df0:	lsl	r0, r4, #2
   10df4:	bl	10be0 <malloc@plt>
   10df8:	cmp	r4, #0
   10dfc:	str	r0, [sp, #8]
   10e00:	ble	11058 <main@@Base+0x424>
   10e04:	sub	r9, r0, #4
   10e08:	mov	sl, r9
   10e0c:	mov	r6, #0
   10e10:	str	r9, [sp, #16]
   10e14:	ldr	r2, [sp]
   10e18:	ldr	r3, [fp]
   10e1c:	mov	r4, #0
   10e20:	ldr	r7, [r2]
   10e24:	ldm	r3, {r0, r8}
   10e28:	ldr	r5, [r7]
   10e2c:	b	10e38 <main@@Base+0x204>
   10e30:	ldm	r8, {r0, r8}
   10e34:	add	r4, r4, #1
   10e38:	mov	r1, r5
   10e3c:	bl	10b80 <strcmp@plt>
   10e40:	cmp	r0, #0
   10e44:	bne	10e30 <main@@Base+0x1fc>
   10e48:	mov	r9, r0
   10e4c:	mov	r1, r7
   10e50:	ldr	r0, [sp]
   10e54:	bl	119a0 <lista_remove@@Base>
   10e58:	ldr	r3, [sp, #4]
   10e5c:	add	r6, r6, #1
   10e60:	str	r4, [sl, #4]!
   10e64:	ldr	r0, [r3]
   10e68:	cmp	r6, r0
   10e6c:	blt	10e14 <main@@Base+0x1e0>
   10e70:	cmp	r0, #0
   10e74:	mov	r2, r9
   10e78:	ldr	r9, [sp, #16]
   10e7c:	ble	11058 <main@@Base+0x424>
   10e80:	mvn	ip, #0
   10e84:	mov	r3, ip
   10e88:	ldr	r1, [r9, #4]!
   10e8c:	cmp	r3, r1
   10e90:	movlt	ip, r2
   10e94:	cmp	r3, r1
   10e98:	add	r2, r2, #1
   10e9c:	movlt	r3, r1
   10ea0:	cmp	r0, r2
   10ea4:	bne	10e88 <main@@Base+0x254>
   10ea8:	lsl	r4, ip, #2
   10eac:	ldr	r0, [sp, #8]
   10eb0:	bl	10b98 <free@plt>
   10eb4:	ldr	r3, [sp, #4]
   10eb8:	ldr	r3, [r3, #8]
   10ebc:	ldr	r1, [r3, r4]
   10ec0:	cmp	r1, #0
   10ec4:	beq	10ed4 <main@@Base+0x2a0>
   10ec8:	ldr	r2, [sp, #12]
   10ecc:	ldr	r0, [sp, #20]
   10ed0:	bl	1156c <vetor_insere@@Base>
   10ed4:	ldr	r0, [sp, #4]
   10ed8:	bl	11528 <vetor_tamanho@@Base>
   10edc:	cmp	r0, #4
   10ee0:	beq	10efc <main@@Base+0x2c8>
   10ee4:	ldr	r3, [pc, #396]	; 11078 <main@@Base+0x444>
   10ee8:	mov	r2, #44	; 0x2c
   10eec:	mov	r1, #1
   10ef0:	ldr	r3, [r3]
   10ef4:	ldr	r0, [pc, #396]	; 11088 <main@@Base+0x454>
   10ef8:	bl	10bbc <fwrite@plt>
   10efc:	ldr	r3, [sp, #12]
   10f00:	add	r3, r3, #1
   10f04:	cmp	r3, #13
   10f08:	str	r3, [sp, #12]
   10f0c:	bne	10de8 <main@@Base+0x1b4>
   10f10:	ldr	r0, [pc, #372]	; 1108c <main@@Base+0x458>
   10f14:	ldr	r8, [sp]
   10f18:	bl	10bd4 <puts@plt>
   10f1c:	ldr	r3, [sp, #20]
   10f20:	ldr	r3, [r3]
   10f24:	cmp	r3, #0
   10f28:	ble	10f84 <main@@Base+0x350>
   10f2c:	ldr	r5, [pc, #348]	; 11090 <main@@Base+0x45c>
   10f30:	ldr	r6, [sp, #20]
   10f34:	mov	r1, #0
   10f38:	ldr	r3, [pc, #312]	; 11078 <main@@Base+0x444>
   10f3c:	mov	r0, r6
   10f40:	add	r4, r1, #1
   10f44:	ldr	r7, [r3]
   10f48:	bl	11538 <vetor_elemento@@Base>
   10f4c:	mov	r1, r5
   10f50:	mov	r2, r4
   10f54:	mov	r3, r0
   10f58:	mov	r0, r7
   10f5c:	bl	10c10 <fprintf@plt>
   10f60:	ldr	r3, [r6]
   10f64:	mov	r1, r4
   10f68:	cmp	r3, r4
   10f6c:	movgt	r3, #1
   10f70:	movle	r3, #0
   10f74:	cmp	r4, #2
   10f78:	movgt	r3, #0
   10f7c:	cmp	r3, #0
   10f80:	bne	10f38 <main@@Base+0x304>
   10f84:	ldr	r0, [sp, #20]
   10f88:	bl	11448 <vetor_apaga@@Base>
   10f8c:	bl	11424 <vetor_novo@@Base>
   10f90:	ldr	r5, [pc, #252]	; 11094 <main@@Base+0x460>
   10f94:	mov	r4, #0
   10f98:	mov	r7, r0
   10f9c:	mov	r2, r4
   10fa0:	ldr	r1, [r5, #4]!
   10fa4:	add	r4, r4, #1
   10fa8:	mov	r0, r7
   10fac:	bl	1156c <vetor_insere@@Base>
   10fb0:	cmp	r4, #13
   10fb4:	bne	10f9c <main@@Base+0x368>
   10fb8:	ldr	r9, [pc, #168]	; 11068 <main@@Base+0x434>
   10fbc:	ldr	r0, [pc, #212]	; 11098 <main@@Base+0x464>
   10fc0:	bl	10bd4 <puts@plt>
   10fc4:	str	r8, [sp]
   10fc8:	ldr	r4, [r7]
   10fcc:	ldr	r3, [pc, #164]	; 11078 <main@@Base+0x444>
   10fd0:	cmp	r4, #0
   10fd4:	ldr	r5, [r9], #4
   10fd8:	ldr	sl, [r3]
   10fdc:	ble	11060 <main@@Base+0x42c>
   10fe0:	ldr	r8, [r7, #8]
   10fe4:	mov	r6, #0
   10fe8:	add	r4, r8, r4, lsl #2
   10fec:	ldr	r1, [r8], #4
   10ff0:	mov	r0, r5
   10ff4:	bl	10b80 <strcmp@plt>
   10ff8:	cmp	r0, #0
   10ffc:	addeq	r6, r6, #1
   11000:	cmp	r4, r8
   11004:	bne	10fec <main@@Base+0x3b8>
   11008:	mov	r3, r6
   1100c:	mov	r2, r5
   11010:	mov	r0, sl
   11014:	ldr	r1, [pc, #128]	; 1109c <main@@Base+0x468>
   11018:	bl	10c10 <fprintf@plt>
   1101c:	ldr	r3, [pc, #124]	; 110a0 <main@@Base+0x46c>
   11020:	cmp	r3, r9
   11024:	bne	10fc8 <main@@Base+0x394>
   11028:	ldr	r8, [sp]
   1102c:	ldr	r0, [sp, #4]
   11030:	bl	11448 <vetor_apaga@@Base>
   11034:	mov	r0, r8
   11038:	bl	11848 <lista_apaga@@Base>
   1103c:	mov	r0, fp
   11040:	bl	11848 <lista_apaga@@Base>
   11044:	mov	r0, r7
   11048:	bl	11448 <vetor_apaga@@Base>
   1104c:	mov	r0, #0
   11050:	add	sp, sp, #36	; 0x24
   11054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11058:	mvn	r4, #3
   1105c:	b	10eac <main@@Base+0x278>
   11060:	mov	r6, #0
   11064:	b	11008 <main@@Base+0x3d4>
   11068:	andeq	r2, r2, r8, asr r0
   1106c:	andeq	r1, r1, r0, asr ip
   11070:	andeq	r1, r1, ip, asr #24
   11074:	andeq	r2, r2, r4, lsr r1
   11078:	andeq	r2, r2, r0, lsr #3
   1107c:	andeq	r1, r1, r4, asr ip
   11080:	andeq	r1, r1, r4, ror ip
   11084:	muleq	r1, r0, ip
   11088:			; <UNDEFINED> instruction: 0x00011cb0
   1108c:	andeq	r1, r1, r0, ror #25
   11090:	andeq	r1, r1, r8, lsl #26
   11094:	andeq	r2, r2, r8, ror #2
   11098:	ldrdeq	r1, [r1], -ip
   1109c:	andeq	r1, r1, r8, lsl sp
   110a0:	andeq	r2, r2, r8, rrx

000110a4 <_start@@Base>:
   110a4:	mov	fp, #0
   110a8:	mov	lr, #0
   110ac:	pop	{r1}		; (ldr r1, [sp], #4)
   110b0:	mov	r2, sp
   110b4:	push	{r2}		; (str r2, [sp, #-4]!)
   110b8:	push	{r0}		; (str r0, [sp, #-4]!)
   110bc:	ldr	ip, [pc, #16]	; 110d4 <_start@@Base+0x30>
   110c0:	push	{ip}		; (str ip, [sp, #-4]!)
   110c4:	ldr	r0, [pc, #12]	; 110d8 <_start@@Base+0x34>
   110c8:	ldr	r3, [pc, #12]	; 110dc <_start@@Base+0x38>
   110cc:	bl	10bec <__libc_start_main@plt>
   110d0:	bl	10c28 <abort@plt>
   110d4:	andeq	r1, r1, ip, lsr ip
   110d8:	andeq	r0, r1, r4, lsr ip
   110dc:	ldrdeq	r1, [r1], -ip
   110e0:	ldr	r3, [pc, #20]	; 110fc <_start@@Base+0x58>
   110e4:	ldr	r2, [pc, #20]	; 11100 <_start@@Base+0x5c>
   110e8:	add	r3, pc, r3
   110ec:	ldr	r2, [r3, r2]
   110f0:	cmp	r2, #0
   110f4:	bxeq	lr
   110f8:	b	10bf8 <__gmon_start__@plt>
   110fc:	andeq	r0, r1, r0, lsl pc
   11100:	andeq	r0, r0, ip, asr #32
   11104:	ldr	r3, [pc, #28]	; 11128 <_start@@Base+0x84>
   11108:	ldr	r0, [pc, #28]	; 1112c <_start@@Base+0x88>
   1110c:	sub	r3, r3, r0
   11110:	cmp	r3, #6
   11114:	bxls	lr
   11118:	ldr	r3, [pc, #16]	; 11130 <_start@@Base+0x8c>
   1111c:	cmp	r3, #0
   11120:	bxeq	lr
   11124:	bx	r3
   11128:	andeq	r2, r2, r3, lsr #3
   1112c:	andeq	r2, r2, r0, lsr #3
   11130:	andeq	r0, r0, r0
   11134:	ldr	r1, [pc, #36]	; 11160 <_start@@Base+0xbc>
   11138:	ldr	r0, [pc, #36]	; 11164 <_start@@Base+0xc0>
   1113c:	sub	r1, r1, r0
   11140:	asr	r1, r1, #2
   11144:	add	r1, r1, r1, lsr #31
   11148:	asrs	r1, r1, #1
   1114c:	bxeq	lr
   11150:	ldr	r3, [pc, #16]	; 11168 <_start@@Base+0xc4>
   11154:	cmp	r3, #0
   11158:	bxeq	lr
   1115c:	bx	r3
   11160:	andeq	r2, r2, r0, lsr #3
   11164:	andeq	r2, r2, r0, lsr #3
   11168:	andeq	r0, r0, r0
   1116c:	push	{r4, lr}
   11170:	ldr	r4, [pc, #24]	; 11190 <_start@@Base+0xec>
   11174:	ldrb	r3, [r4]
   11178:	cmp	r3, #0
   1117c:	popne	{r4, pc}
   11180:	bl	11104 <_start@@Base+0x60>
   11184:	mov	r3, #1
   11188:	strb	r3, [r4]
   1118c:	pop	{r4, pc}
   11190:	andeq	r2, r2, r4, lsr #3
   11194:	ldr	r0, [pc, #40]	; 111c4 <_start@@Base+0x120>
   11198:	ldr	r3, [r0]
   1119c:	cmp	r3, #0
   111a0:	bne	111a8 <_start@@Base+0x104>
   111a4:	b	11134 <_start@@Base+0x90>
   111a8:	ldr	r3, [pc, #24]	; 111c8 <_start@@Base+0x124>
   111ac:	cmp	r3, #0
   111b0:	beq	111a4 <_start@@Base+0x100>
   111b4:	push	{r4, lr}
   111b8:	blx	r3
   111bc:	pop	{r4, lr}
   111c0:	b	11134 <_start@@Base+0x90>
   111c4:	andeq	r1, r2, r4, lsl pc
   111c8:	andeq	r0, r0, r0

000111cc <tira_carta@@Base>:
   111cc:	push	{r4, r5, r6, r7, r8, lr}
   111d0:	mov	r7, r0
   111d4:	ldr	r3, [r1]
   111d8:	ldr	r8, [r0]
   111dc:	mov	r5, #0
   111e0:	ldr	r0, [r3]
   111e4:	ldr	r6, [r8]
   111e8:	ldr	r4, [r3, #4]
   111ec:	b	111f8 <tira_carta@@Base+0x2c>
   111f0:	ldm	r4, {r0, r4}
   111f4:	add	r5, r5, #1
   111f8:	mov	r1, r6
   111fc:	bl	10b80 <strcmp@plt>
   11200:	cmp	r0, #0
   11204:	bne	111f0 <tira_carta@@Base+0x24>
   11208:	mov	r1, r8
   1120c:	mov	r0, r7
   11210:	bl	119a0 <lista_remove@@Base>
   11214:	mov	r0, r5
   11218:	pop	{r4, r5, r6, r7, r8, pc}

0001121c <faz_jogada@@Base>:
   1121c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11220:	sub	sp, sp, #20
   11224:	ldr	r4, [r0]
   11228:	str	r0, [sp, #4]
   1122c:	mov	sl, r1
   11230:	lsl	r0, r4, #2
   11234:	mov	fp, r2
   11238:	bl	10be0 <malloc@plt>
   1123c:	cmp	r4, #0
   11240:	str	r0, [sp, #8]
   11244:	ble	11310 <faz_jogada@@Base+0xf4>
   11248:	mov	r6, #0
   1124c:	sub	r8, r0, #4
   11250:	str	r8, [sp]
   11254:	str	r8, [sp, #12]
   11258:	ldr	r3, [fp]
   1125c:	ldr	r7, [sl]
   11260:	mov	r4, #0
   11264:	ldm	r3, {r0, r8}
   11268:	ldr	r5, [r7]
   1126c:	b	11278 <faz_jogada@@Base+0x5c>
   11270:	ldm	r8, {r0, r8}
   11274:	add	r4, r4, #1
   11278:	mov	r1, r5
   1127c:	bl	10b80 <strcmp@plt>
   11280:	cmp	r0, #0
   11284:	bne	11270 <faz_jogada@@Base+0x54>
   11288:	mov	r9, r0
   1128c:	mov	r1, r7
   11290:	mov	r0, sl
   11294:	bl	119a0 <lista_remove@@Base>
   11298:	ldr	r3, [sp, #4]
   1129c:	add	r6, r6, #1
   112a0:	ldr	r0, [r3]
   112a4:	ldr	r3, [sp]
   112a8:	cmp	r0, r6
   112ac:	str	r4, [r3, #4]!
   112b0:	str	r3, [sp]
   112b4:	bgt	11258 <faz_jogada@@Base+0x3c>
   112b8:	cmp	r0, #0
   112bc:	mov	r2, r9
   112c0:	ldr	r8, [sp, #12]
   112c4:	ble	11310 <faz_jogada@@Base+0xf4>
   112c8:	mvn	ip, #0
   112cc:	mov	r3, ip
   112d0:	ldr	r1, [r8, #4]!
   112d4:	cmp	r1, r3
   112d8:	movgt	ip, r2
   112dc:	cmp	r1, r3
   112e0:	add	r2, r2, #1
   112e4:	movge	r3, r1
   112e8:	cmp	r0, r2
   112ec:	bne	112d0 <faz_jogada@@Base+0xb4>
   112f0:	lsl	r4, ip, #2
   112f4:	ldr	r0, [sp, #8]
   112f8:	bl	10b98 <free@plt>
   112fc:	ldr	r3, [sp, #4]
   11300:	ldr	r3, [r3, #8]
   11304:	ldr	r0, [r3, r4]
   11308:	add	sp, sp, #20
   1130c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11310:	mvn	r4, #3
   11314:	b	112f4 <faz_jogada@@Base+0xd8>

00011318 <numero_vitorias@@Base>:
   11318:	push	{r4, r5, r6, r7, r8, lr}
   1131c:	ldr	r5, [r0]
   11320:	cmp	r5, #0
   11324:	ble	1135c <numero_vitorias@@Base+0x44>
   11328:	ldr	r4, [r0, #8]
   1132c:	mov	r6, r1
   11330:	mov	r7, #0
   11334:	add	r5, r4, r5, lsl #2
   11338:	ldr	r1, [r4], #4
   1133c:	mov	r0, r6
   11340:	bl	10b80 <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	addeq	r7, r7, #1
   1134c:	cmp	r4, r5
   11350:	bne	11338 <numero_vitorias@@Base+0x20>
   11354:	mov	r0, r7
   11358:	pop	{r4, r5, r6, r7, r8, pc}
   1135c:	mov	r7, #0
   11360:	b	11354 <numero_vitorias@@Base+0x3c>

00011364 <insere_carta@@Base>:
   11364:	cmp	r1, #7
   11368:	push	{r4, r5, lr}
   1136c:	mov	r4, r0
   11370:	sub	sp, sp, #12
   11374:	ble	113e8 <insere_carta@@Base+0x84>
   11378:	cmp	r1, #8
   1137c:	beq	11400 <insere_carta@@Base+0x9c>
   11380:	cmp	r1, #9
   11384:	addeq	r5, sp, #8
   11388:	moveq	r3, #74	; 0x4a
   1138c:	strheq	r3, [r5, #-4]!
   11390:	beq	113d0 <insere_carta@@Base+0x6c>
   11394:	cmp	r1, #10
   11398:	addeq	r5, sp, #8
   1139c:	moveq	r3, #81	; 0x51
   113a0:	strheq	r3, [r5, #-4]!
   113a4:	beq	113d0 <insere_carta@@Base+0x6c>
   113a8:	cmp	r1, #11
   113ac:	addeq	r5, sp, #8
   113b0:	moveq	r3, #75	; 0x4b
   113b4:	strheq	r3, [r5, #-4]!
   113b8:	beq	113d0 <insere_carta@@Base+0x6c>
   113bc:	cmp	r1, #12
   113c0:	addeq	r5, sp, #8
   113c4:	addne	r5, sp, #4
   113c8:	moveq	r3, #65	; 0x41
   113cc:	strheq	r3, [r5, #-4]!
   113d0:	mov	r1, r5
   113d4:	ldr	r2, [r4]
   113d8:	mov	r0, r4
   113dc:	bl	118b0 <lista_insere@@Base>
   113e0:	add	sp, sp, #12
   113e4:	pop	{r4, r5, pc}
   113e8:	add	r5, sp, #4
   113ec:	add	r2, r1, #50	; 0x32
   113f0:	mov	r0, r5
   113f4:	ldr	r1, [pc, #32]	; 1141c <insere_carta@@Base+0xb8>
   113f8:	bl	10c1c <sprintf@plt>
   113fc:	b	113d0 <insere_carta@@Base+0x6c>
   11400:	ldr	r3, [pc, #24]	; 11420 <insere_carta@@Base+0xbc>
   11404:	add	r5, sp, #4
   11408:	ldr	r3, [r3]
   1140c:	strh	r3, [sp, #4]
   11410:	lsr	r3, r3, #16
   11414:	strb	r3, [sp, #6]
   11418:	b	113d0 <insere_carta@@Base+0x6c>
   1141c:	andeq	r1, r1, ip, asr #24
   11420:	andeq	r1, r1, r0, asr ip

00011424 <vetor_novo@@Base>:
   11424:	push	{r4, lr}
   11428:	mov	r0, #12
   1142c:	bl	10be0 <malloc@plt>
   11430:	cmp	r0, #0
   11434:	movne	r3, #0
   11438:	strne	r3, [r0]
   1143c:	strne	r3, [r0, #4]
   11440:	strne	r3, [r0, #8]
   11444:	pop	{r4, pc}

00011448 <vetor_apaga@@Base>:
   11448:	push	{r4, r5, r6, lr}
   1144c:	subs	r5, r0, #0
   11450:	popeq	{r4, r5, r6, pc}
   11454:	ldr	r3, [r5]
   11458:	cmp	r3, #0
   1145c:	movgt	r4, #0
   11460:	ble	11480 <vetor_apaga@@Base+0x38>
   11464:	ldr	r3, [r5, #8]
   11468:	ldr	r0, [r3, r4, lsl #2]
   1146c:	bl	10b98 <free@plt>
   11470:	ldr	r3, [r5]
   11474:	add	r4, r4, #1
   11478:	cmp	r3, r4
   1147c:	bgt	11464 <vetor_apaga@@Base+0x1c>
   11480:	ldr	r0, [r5, #8]
   11484:	bl	10b98 <free@plt>
   11488:	mov	r0, r5
   1148c:	pop	{r4, r5, r6, lr}
   11490:	b	10b98 <free@plt>

00011494 <vetor_atribui@@Base>:
   11494:	clz	r3, r0
   11498:	lsr	r3, r3, #5
   1149c:	orrs	r3, r3, r1, lsr #31
   114a0:	bne	11520 <vetor_atribui@@Base+0x8c>
   114a4:	ldr	r3, [r0]
   114a8:	cmp	r1, r3
   114ac:	bge	11520 <vetor_atribui@@Base+0x8c>
   114b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114b4:	mov	r5, r0
   114b8:	mov	r0, r2
   114bc:	mov	r4, r1
   114c0:	mov	r6, r2
   114c4:	bl	10c04 <strlen@plt>
   114c8:	ldr	r8, [r5, #8]
   114cc:	ldr	r7, [r8, r4, lsl #2]
   114d0:	mov	r9, r0
   114d4:	mov	r0, r7
   114d8:	bl	10c04 <strlen@plt>
   114dc:	cmp	r9, r0
   114e0:	bls	11504 <vetor_atribui@@Base+0x70>
   114e4:	mov	r0, r7
   114e8:	add	r1, r9, #1
   114ec:	bl	10bb0 <realloc@plt>
   114f0:	ldr	r3, [r5, #8]
   114f4:	str	r0, [r8, r4, lsl #2]
   114f8:	ldr	r7, [r3, r4, lsl #2]
   114fc:	cmp	r7, #0
   11500:	beq	11518 <vetor_atribui@@Base+0x84>
   11504:	mov	r1, r6
   11508:	mov	r0, r7
   1150c:	bl	10bc8 <strcpy@plt>
   11510:	mov	r0, r4
   11514:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11518:	mvn	r0, #0
   1151c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11520:	mvn	r0, #0
   11524:	bx	lr

00011528 <vetor_tamanho@@Base>:
   11528:	cmp	r0, #0
   1152c:	ldrne	r0, [r0]
   11530:	mvneq	r0, #0
   11534:	bx	lr

00011538 <vetor_elemento@@Base>:
   11538:	lsr	r3, r1, #31
   1153c:	cmp	r0, #0
   11540:	orreq	r3, r3, #1
   11544:	cmp	r3, #0
   11548:	bne	11564 <vetor_elemento@@Base+0x2c>
   1154c:	ldr	r2, [r0]
   11550:	cmp	r1, r2
   11554:	bge	11564 <vetor_elemento@@Base+0x2c>
   11558:	ldr	r3, [r0, #8]
   1155c:	ldr	r0, [r3, r1, lsl #2]
   11560:	bx	lr
   11564:	mov	r0, #0
   11568:	bx	lr

0001156c <vetor_insere@@Base>:
   1156c:	clz	r3, r0
   11570:	lsr	r3, r3, #5
   11574:	orrs	r3, r3, r2, lsr #31
   11578:	bne	11648 <vetor_insere@@Base+0xdc>
   1157c:	push	{r4, r5, r6, r7, r8, lr}
   11580:	ldr	r5, [r0]
   11584:	cmp	r2, r5
   11588:	bgt	11640 <vetor_insere@@Base+0xd4>
   1158c:	ldr	r3, [r0, #4]
   11590:	mov	r6, r0
   11594:	cmp	r5, r3
   11598:	mov	r7, r1
   1159c:	mov	r4, r2
   115a0:	beq	1160c <vetor_insere@@Base+0xa0>
   115a4:	ldr	r8, [r0, #8]
   115a8:	cmp	r4, r5
   115ac:	bge	115d4 <vetor_insere@@Base+0x68>
   115b0:	sub	r2, r5, r4
   115b4:	lsl	r1, r5, #2
   115b8:	lsl	r2, r2, #2
   115bc:	add	r0, r1, #4
   115c0:	sub	r0, r0, r2
   115c4:	sub	r1, r1, r2
   115c8:	add	r1, r8, r1
   115cc:	add	r0, r8, r0
   115d0:	bl	10b8c <memmove@plt>
   115d4:	mov	r0, r7
   115d8:	bl	10c04 <strlen@plt>
   115dc:	mov	r1, #1
   115e0:	add	r0, r0, r1
   115e4:	bl	10b74 <calloc@plt>
   115e8:	cmp	r0, #0
   115ec:	str	r0, [r8, r4, lsl #2]
   115f0:	beq	11640 <vetor_insere@@Base+0xd4>
   115f4:	mov	r1, r7
   115f8:	add	r5, r5, #1
   115fc:	bl	10bc8 <strcpy@plt>
   11600:	mov	r0, r4
   11604:	str	r5, [r6]
   11608:	pop	{r4, r5, r6, r7, r8, pc}
   1160c:	cmp	r5, #0
   11610:	lslne	r3, r5, #1
   11614:	moveq	r3, #1
   11618:	lslne	r1, r5, #3
   1161c:	moveq	r1, #4
   11620:	str	r3, [r0, #4]
   11624:	ldr	r0, [r0, #8]
   11628:	bl	10bb0 <realloc@plt>
   1162c:	cmp	r0, #0
   11630:	str	r0, [r6, #8]
   11634:	ldrne	r5, [r6]
   11638:	movne	r8, r0
   1163c:	bne	115a8 <vetor_insere@@Base+0x3c>
   11640:	mvn	r0, #0
   11644:	pop	{r4, r5, r6, r7, r8, pc}
   11648:	mvn	r0, #0
   1164c:	bx	lr

00011650 <vetor_remove@@Base>:
   11650:	clz	r3, r0
   11654:	lsr	r3, r3, #5
   11658:	orrs	r3, r3, r1, lsr #31
   1165c:	bne	116cc <vetor_remove@@Base+0x7c>
   11660:	ldr	r3, [r0]
   11664:	cmp	r1, r3
   11668:	bge	116cc <vetor_remove@@Base+0x7c>
   1166c:	ldr	r3, [r0, #8]
   11670:	push	{r4, r5, r6, r7, r8, lr}
   11674:	mov	r5, r0
   11678:	ldr	r0, [r3, r1, lsl #2]
   1167c:	mov	r4, r1
   11680:	lsl	r7, r1, #2
   11684:	bl	10b98 <free@plt>
   11688:	ldr	r6, [r5]
   1168c:	add	r3, r4, #1
   11690:	cmp	r3, r6
   11694:	bge	116bc <vetor_remove@@Base+0x6c>
   11698:	mvn	r2, #-1073741824	; 0xc0000000
   1169c:	sub	r2, r2, r4
   116a0:	ldr	r0, [r5, #8]
   116a4:	add	r2, r2, r6
   116a8:	add	r1, r7, #4
   116ac:	add	r1, r0, r1
   116b0:	lsl	r2, r2, #2
   116b4:	add	r0, r0, r7
   116b8:	bl	10b8c <memmove@plt>
   116bc:	sub	r6, r6, #1
   116c0:	str	r6, [r5]
   116c4:	mov	r0, #0
   116c8:	pop	{r4, r5, r6, r7, r8, pc}
   116cc:	mvn	r0, #0
   116d0:	bx	lr

000116d4 <vetor_pesquisa@@Base>:
   116d4:	cmp	r0, #0
   116d8:	push	{r4, r5, r6, r7, r8, lr}
   116dc:	beq	11728 <vetor_pesquisa@@Base+0x54>
   116e0:	ldr	r7, [r0]
   116e4:	cmp	r7, #0
   116e8:	ble	11728 <vetor_pesquisa@@Base+0x54>
   116ec:	ldr	r5, [r0, #8]
   116f0:	mov	r6, r1
   116f4:	mov	r4, #0
   116f8:	sub	r5, r5, #4
   116fc:	b	1170c <vetor_pesquisa@@Base+0x38>
   11700:	add	r4, r4, #1
   11704:	cmp	r4, r7
   11708:	beq	11728 <vetor_pesquisa@@Base+0x54>
   1170c:	mov	r1, r6
   11710:	ldr	r0, [r5, #4]!
   11714:	bl	10b80 <strcmp@plt>
   11718:	cmp	r0, #0
   1171c:	bne	11700 <vetor_pesquisa@@Base+0x2c>
   11720:	mov	r0, r4
   11724:	pop	{r4, r5, r6, r7, r8, pc}
   11728:	mvn	r4, #0
   1172c:	mov	r0, r4
   11730:	pop	{r4, r5, r6, r7, r8, pc}

00011734 <vetor_ordena@@Base>:
   11734:	cmp	r0, #0
   11738:	beq	117b0 <vetor_ordena@@Base+0x7c>
   1173c:	ldr	r3, [r0]
   11740:	cmp	r3, #1
   11744:	ble	117a8 <vetor_ordena@@Base+0x74>
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1174c:	sub	r3, r3, #-1073741823	; 0xc0000001
   11750:	ldr	sl, [r0, #8]
   11754:	mov	r8, #1
   11758:	mov	r7, sl
   1175c:	add	r9, sl, r3, lsl #2
   11760:	ldr	r6, [r7, #4]!
   11764:	mov	r5, r8
   11768:	mov	r4, r7
   1176c:	ldr	r1, [r4, #-4]
   11770:	mov	r0, r6
   11774:	bl	10b80 <strcmp@plt>
   11778:	cmp	r0, #0
   1177c:	bge	11790 <vetor_ordena@@Base+0x5c>
   11780:	ldr	r3, [r4, #-4]!
   11784:	subs	r5, r5, #1
   11788:	str	r3, [r4, #4]
   1178c:	bne	1176c <vetor_ordena@@Base+0x38>
   11790:	cmp	r9, r7
   11794:	str	r6, [sl, r5, lsl #2]
   11798:	add	r8, r8, #1
   1179c:	bne	11760 <vetor_ordena@@Base+0x2c>
   117a0:	mov	r0, #0
   117a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117a8:	mov	r0, #0
   117ac:	bx	lr
   117b0:	mvn	r0, #0
   117b4:	bx	lr

000117b8 <novo_str@@Base>:
   117b8:	push	{r4, r5, r6, r7, r8, lr}
   117bc:	mov	r5, r0
   117c0:	mov	r0, #12
   117c4:	bl	10be0 <malloc@plt>
   117c8:	subs	r4, r0, #0
   117cc:	beq	1180c <novo_str@@Base+0x54>
   117d0:	mov	r0, r5
   117d4:	bl	10c04 <strlen@plt>
   117d8:	add	r7, r0, #1
   117dc:	mov	r0, r7
   117e0:	bl	10be0 <malloc@plt>
   117e4:	cmp	r0, #0
   117e8:	mov	r6, r0
   117ec:	str	r0, [r4]
   117f0:	beq	11814 <novo_str@@Base+0x5c>
   117f4:	mov	r2, r7
   117f8:	mov	r1, r5
   117fc:	bl	10ba4 <memcpy@plt>
   11800:	mov	r3, #0
   11804:	str	r3, [r4, #4]
   11808:	str	r3, [r4, #8]
   1180c:	mov	r0, r4
   11810:	pop	{r4, r5, r6, r7, r8, pc}
   11814:	mov	r0, r4
   11818:	bl	10b98 <free@plt>
   1181c:	mov	r4, r6
   11820:	b	1180c <novo_str@@Base+0x54>

00011824 <lista_nova@@Base>:
   11824:	push	{r4, lr}
   11828:	mov	r0, #12
   1182c:	bl	10be0 <malloc@plt>
   11830:	cmp	r0, #0
   11834:	movne	r3, #0
   11838:	strne	r3, [r0]
   1183c:	strne	r3, [r0, #4]
   11840:	strne	r3, [r0, #8]
   11844:	pop	{r4, pc}

00011848 <lista_apaga@@Base>:
   11848:	push	{r4, r5, r6, lr}
   1184c:	subs	r5, r0, #0
   11850:	bne	1186c <lista_apaga@@Base+0x24>
   11854:	b	11884 <lista_apaga@@Base+0x3c>
   11858:	ldm	r4, {r0, r3}
   1185c:	str	r3, [r5]
   11860:	bl	10b98 <free@plt>
   11864:	mov	r0, r4
   11868:	bl	10b98 <free@plt>
   1186c:	ldr	r4, [r5]
   11870:	cmp	r4, #0
   11874:	bne	11858 <lista_apaga@@Base+0x10>
   11878:	mov	r0, r5
   1187c:	pop	{r4, r5, r6, lr}
   11880:	b	10b98 <free@plt>
   11884:	pop	{r4, r5, r6, pc}

00011888 <lista_tamanho@@Base>:
   11888:	cmp	r0, #0
   1188c:	ldrne	r0, [r0, #8]
   11890:	mvneq	r0, #0
   11894:	bx	lr

00011898 <lista_inicio@@Base>:
   11898:	cmp	r0, #0
   1189c:	ldrne	r0, [r0]
   118a0:	bx	lr

000118a4 <lista_fim@@Base>:
   118a4:	cmp	r0, #0
   118a8:	ldrne	r0, [r0, #4]
   118ac:	bx	lr

000118b0 <lista_insere@@Base>:
   118b0:	cmp	r1, #0
   118b4:	cmpne	r0, #0
   118b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118bc:	moveq	r8, #1
   118c0:	movne	r8, #0
   118c4:	beq	11960 <lista_insere@@Base+0xb0>
   118c8:	mov	r9, r0
   118cc:	mov	r0, #12
   118d0:	mov	sl, r1
   118d4:	mov	r5, r2
   118d8:	bl	10be0 <malloc@plt>
   118dc:	subs	r4, r0, #0
   118e0:	beq	11960 <lista_insere@@Base+0xb0>
   118e4:	mov	r0, sl
   118e8:	bl	10c04 <strlen@plt>
   118ec:	add	r6, r0, #1
   118f0:	mov	r0, r6
   118f4:	bl	10be0 <malloc@plt>
   118f8:	cmp	r0, #0
   118fc:	mov	r7, r0
   11900:	str	r0, [r4]
   11904:	beq	11990 <lista_insere@@Base+0xe0>
   11908:	mov	r2, r6
   1190c:	mov	r1, sl
   11910:	bl	10ba4 <memcpy@plt>
   11914:	ldr	r3, [r9, #8]
   11918:	cmp	r5, #0
   1191c:	add	r3, r3, #1
   11920:	str	r3, [r9, #8]
   11924:	str	r8, [r4, #4]
   11928:	str	r8, [r4, #8]
   1192c:	ldr	r3, [r9]
   11930:	beq	1196c <lista_insere@@Base+0xbc>
   11934:	cmp	r5, r3
   11938:	streq	r4, [r5, #8]
   1193c:	ldrne	r3, [r5, #8]
   11940:	strne	r5, [r4, #4]
   11944:	strne	r3, [r4, #8]
   11948:	streq	r5, [r4, #4]
   1194c:	strne	r4, [r3, #4]
   11950:	streq	r4, [r9]
   11954:	strne	r4, [r5, #8]
   11958:	mov	r0, r4
   1195c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11960:	mov	r4, #0
   11964:	mov	r0, r4
   11968:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1196c:	cmp	r3, #0
   11970:	streq	r4, [r9, #4]
   11974:	ldrne	r3, [r9, #4]
   11978:	streq	r4, [r9]
   1197c:	strne	r3, [r4, #8]
   11980:	mov	r0, r4
   11984:	strne	r4, [r3, #4]
   11988:	strne	r4, [r9, #4]
   1198c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11990:	mov	r0, r4
   11994:	bl	10b98 <free@plt>
   11998:	mov	r4, r7
   1199c:	b	11958 <lista_insere@@Base+0xa8>

000119a0 <lista_remove@@Base>:
   119a0:	cmp	r1, #0
   119a4:	cmpne	r0, #0
   119a8:	push	{r4, r5, r6, lr}
   119ac:	beq	11a00 <lista_remove@@Base+0x60>
   119b0:	ldr	r2, [r1, #8]
   119b4:	ldr	r3, [r0, #8]
   119b8:	cmp	r2, #0
   119bc:	sub	r3, r3, #1
   119c0:	str	r3, [r0, #8]
   119c4:	ldrne	r3, [r1, #4]
   119c8:	ldreq	r5, [r1, #4]
   119cc:	strne	r3, [r2, #4]
   119d0:	ldrne	r5, [r1, #4]
   119d4:	streq	r5, [r0]
   119d8:	cmp	r5, #0
   119dc:	streq	r2, [r0, #4]
   119e0:	mov	r4, r1
   119e4:	ldr	r0, [r1]
   119e8:	strne	r2, [r5, #8]
   119ec:	bl	10b98 <free@plt>
   119f0:	mov	r0, r4
   119f4:	bl	10b98 <free@plt>
   119f8:	mov	r0, r5
   119fc:	pop	{r4, r5, r6, pc}
   11a00:	mov	r5, #0
   11a04:	mov	r0, r5
   11a08:	pop	{r4, r5, r6, pc}

00011a0c <lista_pesquisa@@Base>:
   11a0c:	cmp	r1, #0
   11a10:	cmpne	r0, #0
   11a14:	push	{r4, r5, r6, lr}
   11a18:	moveq	r4, #1
   11a1c:	movne	r4, #0
   11a20:	beq	11aa8 <lista_pesquisa@@Base+0x9c>
   11a24:	cmp	r2, #1
   11a28:	bhi	11a68 <lista_pesquisa@@Base+0x5c>
   11a2c:	cmp	r2, #0
   11a30:	mov	r5, r1
   11a34:	bne	11a70 <lista_pesquisa@@Base+0x64>
   11a38:	ldr	r4, [r0]
   11a3c:	cmp	r4, #0
   11a40:	bne	11a54 <lista_pesquisa@@Base+0x48>
   11a44:	b	11a68 <lista_pesquisa@@Base+0x5c>
   11a48:	ldr	r4, [r4, #4]
   11a4c:	cmp	r4, #0
   11a50:	beq	11a68 <lista_pesquisa@@Base+0x5c>
   11a54:	mov	r1, r5
   11a58:	ldr	r0, [r4]
   11a5c:	bl	10b80 <strcmp@plt>
   11a60:	cmp	r0, #0
   11a64:	bne	11a48 <lista_pesquisa@@Base+0x3c>
   11a68:	mov	r0, r4
   11a6c:	pop	{r4, r5, r6, pc}
   11a70:	ldr	r4, [r0, #4]
   11a74:	cmp	r4, #0
   11a78:	bne	11a8c <lista_pesquisa@@Base+0x80>
   11a7c:	b	11a68 <lista_pesquisa@@Base+0x5c>
   11a80:	ldr	r4, [r4, #8]
   11a84:	cmp	r4, #0
   11a88:	beq	11a68 <lista_pesquisa@@Base+0x5c>
   11a8c:	mov	r1, r5
   11a90:	ldr	r0, [r4]
   11a94:	bl	10b80 <strcmp@plt>
   11a98:	cmp	r0, #0
   11a9c:	bne	11a80 <lista_pesquisa@@Base+0x74>
   11aa0:	mov	r0, r4
   11aa4:	pop	{r4, r5, r6, pc}
   11aa8:	mov	r4, #0
   11aac:	mov	r0, r4
   11ab0:	pop	{r4, r5, r6, pc}

00011ab4 <lista_ordena@@Base>:
   11ab4:	cmp	r0, #0
   11ab8:	beq	11b2c <lista_ordena@@Base+0x78>
   11abc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ac0:	ldr	r8, [r0]
   11ac4:	ldr	r9, [r8, #4]
   11ac8:	cmp	r9, #0
   11acc:	beq	11b24 <lista_ordena@@Base+0x70>
   11ad0:	ldr	sl, [r8]
   11ad4:	mov	r7, r8
   11ad8:	mov	r5, sl
   11adc:	mov	r4, r9
   11ae0:	ldr	r6, [r4]
   11ae4:	mov	r1, r5
   11ae8:	mov	r0, r6
   11aec:	bl	10b80 <strcmp@plt>
   11af0:	cmp	r0, #0
   11af4:	movlt	r7, r4
   11af8:	ldr	r4, [r4, #4]
   11afc:	movlt	r5, r6
   11b00:	cmp	r4, #0
   11b04:	bne	11ae0 <lista_ordena@@Base+0x2c>
   11b08:	cmp	r8, r7
   11b0c:	strne	r5, [r8]
   11b10:	mov	r8, r9
   11b14:	strne	sl, [r7]
   11b18:	ldr	r9, [r8, #4]
   11b1c:	cmp	r9, #0
   11b20:	bne	11ad0 <lista_ordena@@Base+0x1c>
   11b24:	mov	r0, r9
   11b28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b2c:	mvn	r0, #0
   11b30:	bx	lr

00011b34 <lista_inverte@@Base>:
   11b34:	push	{r4, r5, lr}
   11b38:	subs	r5, r0, #0
   11b3c:	beq	11bd4 <lista_inverte@@Base+0xa0>
   11b40:	ldr	r4, [r5, #8]
   11b44:	cmp	r4, #1
   11b48:	ble	11bc4 <lista_inverte@@Base+0x90>
   11b4c:	ldr	r2, [r5]
   11b50:	cmp	r4, #2
   11b54:	ldr	r3, [r2, #4]
   11b58:	beq	11bcc <lista_inverte@@Base+0x98>
   11b5c:	sub	r4, r4, #2
   11b60:	mov	r1, #0
   11b64:	b	11b6c <lista_inverte@@Base+0x38>
   11b68:	mov	r3, lr
   11b6c:	ldr	ip, [r3, #8]
   11b70:	ldr	lr, [r3, #4]
   11b74:	add	r1, r1, #1
   11b78:	str	lr, [ip, #4]
   11b7c:	ldr	lr, [r3, #4]
   11b80:	cmp	r1, r4
   11b84:	str	ip, [lr, #8]
   11b88:	str	r2, [r3, #4]
   11b8c:	str	r3, [r2, #8]
   11b90:	mov	r2, r3
   11b94:	bne	11b68 <lista_inverte@@Base+0x34>
   11b98:	ldr	r2, [r5, #4]
   11b9c:	mov	r1, #0
   11ba0:	mov	r0, r1
   11ba4:	ldr	ip, [r2, #8]
   11ba8:	str	ip, [r5, #4]
   11bac:	str	r1, [ip, #4]
   11bb0:	str	r1, [r2, #8]
   11bb4:	str	r3, [r2, #4]
   11bb8:	str	r2, [r3, #8]
   11bbc:	str	r2, [r5]
   11bc0:	pop	{r4, r5, pc}
   11bc4:	mov	r0, #0
   11bc8:	pop	{r4, r5, pc}
   11bcc:	mov	r3, r2
   11bd0:	b	11b98 <lista_inverte@@Base+0x64>
   11bd4:	mvn	r0, #0
   11bd8:	pop	{r4, r5, pc}

00011bdc <__libc_csu_init@@Base>:
   11bdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11be0:	mov	r7, r0
   11be4:	ldr	r6, [pc, #72]	; 11c34 <__libc_csu_init@@Base+0x58>
   11be8:	ldr	r5, [pc, #72]	; 11c38 <__libc_csu_init@@Base+0x5c>
   11bec:	add	r6, pc, r6
   11bf0:	add	r5, pc, r5
   11bf4:	sub	r6, r6, r5
   11bf8:	mov	r8, r1
   11bfc:	mov	r9, r2
   11c00:	bl	10b54 <calloc@plt-0x20>
   11c04:	asrs	r6, r6, #2
   11c08:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c0c:	mov	r4, #0
   11c10:	add	r4, r4, #1
   11c14:	ldr	r3, [r5], #4
   11c18:	mov	r2, r9
   11c1c:	mov	r1, r8
   11c20:	mov	r0, r7
   11c24:	blx	r3
   11c28:	cmp	r6, r4
   11c2c:	bne	11c10 <__libc_csu_init@@Base+0x34>
   11c30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c34:	andeq	r0, r1, ip, lsl r3
   11c38:	andeq	r0, r1, r4, lsl r3

00011c3c <__libc_csu_fini@@Base>:
   11c3c:	bx	lr

Disassembly of section .fini:

00011c40 <.fini>:
   11c40:	push	{r3, lr}
   11c44:	pop	{r3, pc}
