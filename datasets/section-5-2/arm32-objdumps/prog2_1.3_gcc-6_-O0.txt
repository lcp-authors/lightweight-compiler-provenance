
../repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

0001060c <.init>:
   1060c:	push	{r3, lr}
   10610:	bl	106d4 <_start@@Base+0x3c>
   10614:	pop	{r3, pc}

Disassembly of section .plt:

00010618 <printf@plt-0x14>:
   10618:	push	{lr}		; (str lr, [sp, #-4]!)
   1061c:	ldr	lr, [pc, #4]	; 10628 <printf@plt-0x4>
   10620:	add	lr, pc, lr
   10624:	ldr	pc, [lr, #8]!
   10628:	ldrdeq	r0, [r1], -r8

0001062c <printf@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2520]!	; 0x9d8

00010638 <fopen@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2512]!	; 0x9d0

00010644 <strcpy@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2504]!	; 0x9c8

00010650 <__libc_start_main@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2496]!	; 0x9c0

0001065c <__gmon_start__@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2488]!	; 0x9b8

00010668 <fclose@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2480]!	; 0x9b0

00010674 <fseek@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2472]!	; 0x9a8

00010680 <abort@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2464]!	; 0x9a0

0001068c <getc@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2456]!	; 0x998

Disassembly of section .text:

00010698 <_start@@Base>:
   10698:	mov	fp, #0
   1069c:	mov	lr, #0
   106a0:	pop	{r1}		; (ldr r1, [sp], #4)
   106a4:	mov	r2, sp
   106a8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ac:	push	{r0}		; (str r0, [sp, #-4]!)
   106b0:	ldr	ip, [pc, #16]	; 106c8 <_start@@Base+0x30>
   106b4:	push	{ip}		; (str ip, [sp, #-4]!)
   106b8:	ldr	r0, [pc, #12]	; 106cc <_start@@Base+0x34>
   106bc:	ldr	r3, [pc, #12]	; 106d0 <_start@@Base+0x38>
   106c0:	bl	10650 <__libc_start_main@plt>
   106c4:	bl	10680 <abort@plt>
   106c8:	andeq	r0, r1, ip, asr fp
   106cc:	andeq	r0, r1, r8, lsr #16
   106d0:	strdeq	r0, [r1], -ip
   106d4:	ldr	r3, [pc, #20]	; 106f0 <_start@@Base+0x58>
   106d8:	ldr	r2, [pc, #20]	; 106f4 <_start@@Base+0x5c>
   106dc:	add	r3, pc, r3
   106e0:	ldr	r2, [r3, r2]
   106e4:	cmp	r2, #0
   106e8:	bxeq	lr
   106ec:	b	1065c <__gmon_start__@plt>
   106f0:	andeq	r0, r1, ip, lsl r9
   106f4:	andeq	r0, r0, r0, lsr r0
   106f8:	ldr	r3, [pc, #28]	; 1071c <_start@@Base+0x84>
   106fc:	ldr	r0, [pc, #28]	; 10720 <_start@@Base+0x88>
   10700:	sub	r3, r3, r0
   10704:	cmp	r3, #6
   10708:	bxls	lr
   1070c:	ldr	r3, [pc, #16]	; 10724 <_start@@Base+0x8c>
   10710:	cmp	r3, #0
   10714:	bxeq	lr
   10718:	bx	r3
   1071c:	andeq	r1, r2, pc, lsr r0
   10720:	andeq	r1, r2, ip, lsr r0
   10724:	andeq	r0, r0, r0
   10728:	ldr	r1, [pc, #36]	; 10754 <_start@@Base+0xbc>
   1072c:	ldr	r0, [pc, #36]	; 10758 <_start@@Base+0xc0>
   10730:	sub	r1, r1, r0
   10734:	asr	r1, r1, #2
   10738:	add	r1, r1, r1, lsr #31
   1073c:	asrs	r1, r1, #1
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <_start@@Base+0xc4>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r1, r2, ip, lsr r0
   10758:	andeq	r1, r2, ip, lsr r0
   1075c:	andeq	r0, r0, r0
   10760:	push	{r4, lr}
   10764:	ldr	r4, [pc, #24]	; 10784 <_start@@Base+0xec>
   10768:	ldrb	r3, [r4]
   1076c:	cmp	r3, #0
   10770:	popne	{r4, pc}
   10774:	bl	106f8 <_start@@Base+0x60>
   10778:	mov	r3, #1
   1077c:	strb	r3, [r4]
   10780:	pop	{r4, pc}
   10784:	andeq	r1, r2, ip, lsr r0
   10788:	ldr	r0, [pc, #40]	; 107b8 <_start@@Base+0x120>
   1078c:	ldr	r3, [r0]
   10790:	cmp	r3, #0
   10794:	bne	1079c <_start@@Base+0x104>
   10798:	b	10728 <_start@@Base+0x90>
   1079c:	ldr	r3, [pc, #24]	; 107bc <_start@@Base+0x124>
   107a0:	cmp	r3, #0
   107a4:	beq	10798 <_start@@Base+0x100>
   107a8:	push	{r4, lr}
   107ac:	blx	r3
   107b0:	pop	{r4, lr}
   107b4:	b	10728 <_start@@Base+0x90>
   107b8:	andeq	r0, r2, r4, lsl pc
   107bc:	andeq	r0, r0, r0

000107c0 <esvaziastring@@Base>:
   107c0:	push	{fp}		; (str fp, [sp, #-4]!)
   107c4:	add	fp, sp, #0
   107c8:	sub	sp, sp, #20
   107cc:	str	r0, [fp, #-16]
   107d0:	str	r1, [fp, #-20]	; 0xffffffec
   107d4:	mov	r3, #0
   107d8:	str	r3, [fp, #-8]
   107dc:	mov	r3, #0
   107e0:	str	r3, [fp, #-8]
   107e4:	b	10808 <esvaziastring@@Base+0x48>
   107e8:	ldr	r3, [fp, #-8]
   107ec:	ldr	r2, [fp, #-16]
   107f0:	add	r3, r2, r3
   107f4:	mov	r2, #0
   107f8:	strb	r2, [r3]
   107fc:	ldr	r3, [fp, #-8]
   10800:	add	r3, r3, #1
   10804:	str	r3, [fp, #-8]
   10808:	ldr	r2, [fp, #-8]
   1080c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10810:	cmp	r2, r3
   10814:	blt	107e8 <esvaziastring@@Base+0x28>
   10818:	nop			; (mov r0, r0)
   1081c:	add	sp, fp, #0
   10820:	pop	{fp}		; (ldr fp, [sp], #4)
   10824:	bx	lr

00010828 <main@@Base>:
   10828:	push	{fp, lr}
   1082c:	add	fp, sp, #4
   10830:	sub	sp, sp, #2272	; 0x8e0
   10834:	ldr	r3, [pc, #688]	; 10aec <main@@Base+0x2c4>
   10838:	add	r3, pc, r3
   1083c:	mov	r1, r3
   10840:	ldr	r3, [pc, #680]	; 10af0 <main@@Base+0x2c8>
   10844:	add	r3, pc, r3
   10848:	mov	r0, r3
   1084c:	bl	10638 <fopen@plt>
   10850:	str	r0, [fp, #-16]
   10854:	mov	r3, #0
   10858:	str	r3, [fp, #-8]
   1085c:	mov	r3, #0
   10860:	str	r3, [fp, #-12]
   10864:	mov	r3, #0
   10868:	str	r3, [fp, #-12]
   1086c:	ldr	r0, [fp, #-16]
   10870:	bl	1068c <getc@plt>
   10874:	str	r0, [fp, #-20]	; 0xffffffec
   10878:	ldr	r3, [fp, #-20]	; 0xffffffec
   1087c:	cmn	r3, #1
   10880:	bne	10890 <main@@Base+0x68>
   10884:	ldr	r0, [fp, #-16]
   10888:	bl	10668 <fclose@plt>
   1088c:	b	10adc <main@@Base+0x2b4>
   10890:	ldr	r3, [fp, #-20]	; 0xffffffec
   10894:	cmp	r3, #60	; 0x3c
   10898:	bne	1086c <main@@Base+0x44>
   1089c:	ldr	r0, [fp, #-16]
   108a0:	bl	1068c <getc@plt>
   108a4:	mov	r3, r0
   108a8:	cmp	r3, #97	; 0x61
   108ac:	bne	10ad4 <main@@Base+0x2ac>
   108b0:	sub	r3, fp, #220	; 0xdc
   108b4:	mov	r1, #200	; 0xc8
   108b8:	mov	r0, r3
   108bc:	bl	107c0 <esvaziastring@@Base>
   108c0:	mov	r2, #1
   108c4:	mov	r1, #7
   108c8:	ldr	r0, [fp, #-16]
   108cc:	bl	10674 <fseek@plt>
   108d0:	mov	r3, #0
   108d4:	str	r3, [fp, #-8]
   108d8:	ldr	r0, [fp, #-16]
   108dc:	bl	1068c <getc@plt>
   108e0:	str	r0, [fp, #-20]	; 0xffffffec
   108e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   108e8:	cmp	r3, #34	; 0x22
   108ec:	beq	1091c <main@@Base+0xf4>
   108f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   108f4:	uxtb	r1, r3
   108f8:	sub	r2, fp, #220	; 0xdc
   108fc:	ldr	r3, [fp, #-8]
   10900:	add	r3, r2, r3
   10904:	mov	r2, r1
   10908:	strb	r2, [r3]
   1090c:	ldr	r3, [fp, #-8]
   10910:	add	r3, r3, #1
   10914:	str	r3, [fp, #-8]
   10918:	b	108d8 <main@@Base+0xb0>
   1091c:	nop			; (mov r0, r0)
   10920:	sub	r2, fp, #220	; 0xdc
   10924:	ldr	r3, [fp, #-8]
   10928:	add	r3, r2, r3
   1092c:	mov	r2, #0
   10930:	strb	r2, [r3]
   10934:	sub	r3, fp, #2256	; 0x8d0
   10938:	sub	r3, r3, #4
   1093c:	sub	r3, r3, #12
   10940:	ldr	r2, [fp, #-12]
   10944:	ldr	r1, [pc, #424]	; 10af4 <main@@Base+0x2cc>
   10948:	mul	r2, r1, r2
   1094c:	add	r3, r3, r2
   10950:	sub	r2, fp, #220	; 0xdc
   10954:	mov	r1, r2
   10958:	mov	r0, r3
   1095c:	bl	10644 <strcpy@plt>
   10960:	sub	r3, fp, #220	; 0xdc
   10964:	mov	r1, #200	; 0xc8
   10968:	mov	r0, r3
   1096c:	bl	107c0 <esvaziastring@@Base>
   10970:	mov	r2, #1
   10974:	mov	r1, #1
   10978:	ldr	r0, [fp, #-16]
   1097c:	bl	10674 <fseek@plt>
   10980:	mov	r3, #0
   10984:	str	r3, [fp, #-8]
   10988:	ldr	r0, [fp, #-16]
   1098c:	bl	1068c <getc@plt>
   10990:	str	r0, [fp, #-20]	; 0xffffffec
   10994:	ldr	r3, [fp, #-20]	; 0xffffffec
   10998:	cmp	r3, #60	; 0x3c
   1099c:	beq	10a10 <main@@Base+0x1e8>
   109a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   109a4:	cmp	r3, #225	; 0xe1
   109a8:	bne	109e4 <main@@Base+0x1bc>
   109ac:	sub	r2, fp, #220	; 0xdc
   109b0:	ldr	r3, [fp, #-8]
   109b4:	add	r3, r2, r3
   109b8:	mvn	r2, #60	; 0x3c
   109bc:	strb	r2, [r3]
   109c0:	ldr	r3, [fp, #-8]
   109c4:	add	r3, r3, #1
   109c8:	str	r3, [fp, #-8]
   109cc:	sub	r2, fp, #220	; 0xdc
   109d0:	ldr	r3, [fp, #-8]
   109d4:	add	r3, r2, r3
   109d8:	mvn	r2, #94	; 0x5e
   109dc:	strb	r2, [r3]
   109e0:	b	10a00 <main@@Base+0x1d8>
   109e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   109e8:	uxtb	r1, r3
   109ec:	sub	r2, fp, #220	; 0xdc
   109f0:	ldr	r3, [fp, #-8]
   109f4:	add	r3, r2, r3
   109f8:	mov	r2, r1
   109fc:	strb	r2, [r3]
   10a00:	ldr	r3, [fp, #-8]
   10a04:	add	r3, r3, #1
   10a08:	str	r3, [fp, #-8]
   10a0c:	b	10988 <main@@Base+0x160>
   10a10:	nop			; (mov r0, r0)
   10a14:	sub	r2, fp, #220	; 0xdc
   10a18:	ldr	r3, [fp, #-8]
   10a1c:	add	r3, r2, r3
   10a20:	mov	r2, #0
   10a24:	strb	r2, [r3]
   10a28:	sub	r3, fp, #2256	; 0x8d0
   10a2c:	sub	r3, r3, #4
   10a30:	sub	r3, r3, #12
   10a34:	ldr	r2, [fp, #-12]
   10a38:	ldr	r1, [pc, #180]	; 10af4 <main@@Base+0x2cc>
   10a3c:	mul	r2, r1, r2
   10a40:	add	r2, r2, #200	; 0xc8
   10a44:	add	r3, r3, r2
   10a48:	add	r3, r3, #5
   10a4c:	sub	r2, fp, #220	; 0xdc
   10a50:	mov	r1, r2
   10a54:	mov	r0, r3
   10a58:	bl	10644 <strcpy@plt>
   10a5c:	sub	r3, fp, #220	; 0xdc
   10a60:	mov	r1, #80	; 0x50
   10a64:	mov	r0, r3
   10a68:	bl	107c0 <esvaziastring@@Base>
   10a6c:	sub	r3, fp, #2256	; 0x8d0
   10a70:	sub	r3, r3, #4
   10a74:	sub	r3, r3, #12
   10a78:	ldr	r2, [fp, #-12]
   10a7c:	ldr	r1, [pc, #112]	; 10af4 <main@@Base+0x2cc>
   10a80:	mul	r2, r1, r2
   10a84:	add	r2, r2, #200	; 0xc8
   10a88:	add	r3, r3, r2
   10a8c:	add	r0, r3, #5
   10a90:	sub	r3, fp, #2256	; 0x8d0
   10a94:	sub	r3, r3, #4
   10a98:	sub	r3, r3, #12
   10a9c:	ldr	r2, [fp, #-12]
   10aa0:	ldr	r1, [pc, #76]	; 10af4 <main@@Base+0x2cc>
   10aa4:	mul	r2, r1, r2
   10aa8:	add	r3, r3, r2
   10aac:	mov	r2, r3
   10ab0:	mov	r1, r0
   10ab4:	ldr	r3, [pc, #60]	; 10af8 <main@@Base+0x2d0>
   10ab8:	add	r3, pc, r3
   10abc:	mov	r0, r3
   10ac0:	bl	1062c <printf@plt>
   10ac4:	ldr	r3, [fp, #-12]
   10ac8:	add	r3, r3, #1
   10acc:	str	r3, [fp, #-12]
   10ad0:	b	1086c <main@@Base+0x44>
   10ad4:	nop			; (mov r0, r0)
   10ad8:	b	1086c <main@@Base+0x44>
   10adc:	mov	r3, #0
   10ae0:	mov	r0, r3
   10ae4:	sub	sp, fp, #4
   10ae8:	pop	{fp, pc}
   10aec:	andeq	r0, r0, ip, lsr #6
   10af0:	andeq	r0, r0, r4, lsr #6
   10af4:	muleq	r0, sl, r1
   10af8:	andeq	r0, r0, r8, asr #1

00010afc <__libc_csu_init@@Base>:
   10afc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b00:	mov	r7, r0
   10b04:	ldr	r6, [pc, #72]	; 10b54 <__libc_csu_init@@Base+0x58>
   10b08:	ldr	r5, [pc, #72]	; 10b58 <__libc_csu_init@@Base+0x5c>
   10b0c:	add	r6, pc, r6
   10b10:	add	r5, pc, r5
   10b14:	sub	r6, r6, r5
   10b18:	mov	r8, r1
   10b1c:	mov	r9, r2
   10b20:	bl	1060c <printf@plt-0x20>
   10b24:	asrs	r6, r6, #2
   10b28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b2c:	mov	r4, #0
   10b30:	add	r4, r4, #1
   10b34:	ldr	r3, [r5], #4
   10b38:	mov	r2, r9
   10b3c:	mov	r1, r8
   10b40:	mov	r0, r7
   10b44:	blx	r3
   10b48:	cmp	r6, r4
   10b4c:	bne	10b30 <__libc_csu_init@@Base+0x34>
   10b50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b54:	strdeq	r0, [r1], -ip
   10b58:	strdeq	r0, [r1], -r4

00010b5c <__libc_csu_fini@@Base>:
   10b5c:	bx	lr

Disassembly of section .fini:

00010b60 <.fini>:
   10b60:	push	{r3, lr}
   10b64:	pop	{r3, pc}
