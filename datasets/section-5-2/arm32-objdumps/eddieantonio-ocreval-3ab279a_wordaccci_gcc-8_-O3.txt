
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010760 <.init>:
   10760:	push	{r3, lr}
   10764:	bl	10994 <abort@plt+0xf4>
   10768:	pop	{r3, pc}

Disassembly of section .plt:

0001076c <calloc@plt-0x14>:
   1076c:	push	{lr}		; (str lr, [sp, #-4]!)
   10770:	ldr	lr, [pc, #4]	; 1077c <calloc@plt-0x4>
   10774:	add	lr, pc, lr
   10778:	ldr	pc, [lr, #8]!
   1077c:	andeq	r2, r1, r4, lsl #17

00010780 <calloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #73728	; 0x12000
   10788:	ldr	pc, [ip, #2180]!	; 0x884

0001078c <strcmp@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #73728	; 0x12000
   10794:	ldr	pc, [ip, #2172]!	; 0x87c

00010798 <strtol@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #73728	; 0x12000
   107a0:	ldr	pc, [ip, #2164]!	; 0x874

000107a4 <printf@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2156]!	; 0x86c

000107b0 <fopen@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2148]!	; 0x864

000107bc <free@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2140]!	; 0x85c

000107c8 <fgets@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2132]!	; 0x854

000107d4 <strdup@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2124]!	; 0x84c

000107e0 <unlink@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2116]!	; 0x844

000107ec <__xstat@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2108]!	; 0x83c

000107f8 <fwrite@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2100]!	; 0x834

00010804 <__libc_start_main@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2092]!	; 0x82c

00010810 <__sysv_signal@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2084]!	; 0x824

0001081c <__gmon_start__@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2076]!	; 0x81c

00010828 <getpid@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2068]!	; 0x814

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2060]!	; 0x80c

00010840 <strlen@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2052]!	; 0x804

0001084c <fprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2044]!	; 0x7fc

00010858 <sqrt@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2036]!	; 0x7f4

00010864 <__isoc99_sscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010870 <fclose@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2020]!	; 0x7e4

0001087c <fputc@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #2012]!	; 0x7dc

00010888 <sprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #2004]!	; 0x7d4

00010894 <strncmp@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1996]!	; 0x7cc

000108a0 <abort@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1988]!	; 0x7c4

Disassembly of section .text:

000108b0 <error@@Base-0x159c>:
   108b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   108b4:	mov	r3, #0
   108b8:	movw	r2, #10356	; 0x2874
   108bc:	movt	r2, #1
   108c0:	strd	r6, [sp, #8]
   108c4:	mov	r6, r1
   108c8:	strd	r8, [sp, #16]
   108cc:	str	sl, [sp, #24]
   108d0:	str	lr, [sp, #28]
   108d4:	sub	sp, sp, #8
   108d8:	str	r0, [sp, #4]
   108dc:	add	r0, sp, #4
   108e0:	bl	11fb8 <error@@Base+0x16c>
   108e4:	ldr	r3, [sp, #4]
   108e8:	cmp	r3, #1
   108ec:	ble	1094c <abort@plt+0xac>
   108f0:	movw	r4, #12560	; 0x3110
   108f4:	movt	r4, #2
   108f8:	movw	r8, #29664	; 0x73e0
   108fc:	movt	r8, #2
   10900:	sub	r6, r6, #4
   10904:	mov	r9, r4
   10908:	mov	r5, #0
   1090c:	mov	r0, r9
   10910:	ldr	r1, [r6, #4]!
   10914:	add	r5, r5, #1
   10918:	ldr	sl, [r4]
   1091c:	ldr	r7, [r4, #4]
   10920:	bl	114c0 <abort@plt+0xc20>
   10924:	ldm	r4, {r1, r2}
   10928:	mov	r0, r8
   1092c:	sub	r1, r1, sl
   10930:	sub	r2, r2, r7
   10934:	bl	10b68 <abort@plt+0x2c8>
   10938:	ldr	r3, [sp, #4]
   1093c:	cmp	r3, r5
   10940:	bgt	1090c <abort@plt+0x6c>
   10944:	bl	10a98 <abort@plt+0x1f8>
   10948:	bl	11dec <abort@plt+0x154c>
   1094c:	movw	r0, #10404	; 0x28a4
   10950:	movt	r0, #1
   10954:	bl	11e4c <error@@Base>
   10958:	mov	fp, #0
   1095c:	mov	lr, #0
   10960:	pop	{r1}		; (ldr r1, [sp], #4)
   10964:	mov	r2, sp
   10968:	push	{r2}		; (str r2, [sp, #-4]!)
   1096c:	push	{r0}		; (str r0, [sp, #-4]!)
   10970:	ldr	ip, [pc, #16]	; 10988 <abort@plt+0xe8>
   10974:	push	{ip}		; (str ip, [sp, #-4]!)
   10978:	ldr	r0, [pc, #12]	; 1098c <abort@plt+0xec>
   1097c:	ldr	r3, [pc, #12]	; 10990 <abort@plt+0xf0>
   10980:	bl	10804 <__libc_start_main@plt>
   10984:	bl	108a0 <abort@plt>
   10988:	andeq	r2, r1, r4, asr #15
   1098c:			; <UNDEFINED> instruction: 0x000108b0
   10990:	andeq	r2, r1, r4, ror #14
   10994:	ldr	r3, [pc, #20]	; 109b0 <abort@plt+0x110>
   10998:	ldr	r2, [pc, #20]	; 109b4 <abort@plt+0x114>
   1099c:	add	r3, pc, r3
   109a0:	ldr	r2, [r3, r2]
   109a4:	cmp	r2, #0
   109a8:	bxeq	lr
   109ac:	b	1081c <__gmon_start__@plt>
   109b0:	andeq	r2, r1, ip, asr r6
   109b4:	andeq	r0, r0, r0, ror r0
   109b8:	ldr	r0, [pc, #24]	; 109d8 <abort@plt+0x138>
   109bc:	ldr	r3, [pc, #24]	; 109dc <abort@plt+0x13c>
   109c0:	cmp	r3, r0
   109c4:	bxeq	lr
   109c8:	ldr	r3, [pc, #16]	; 109e0 <abort@plt+0x140>
   109cc:	cmp	r3, #0
   109d0:	bxeq	lr
   109d4:	bx	r3
   109d8:	andeq	r3, r2, r4, lsl #1
   109dc:	andeq	r3, r2, r4, lsl #1
   109e0:	andeq	r0, r0, r0
   109e4:	ldr	r0, [pc, #36]	; 10a10 <abort@plt+0x170>
   109e8:	ldr	r1, [pc, #36]	; 10a14 <abort@plt+0x174>
   109ec:	sub	r1, r1, r0
   109f0:	asr	r1, r1, #2
   109f4:	add	r1, r1, r1, lsr #31
   109f8:	asrs	r1, r1, #1
   109fc:	bxeq	lr
   10a00:	ldr	r3, [pc, #16]	; 10a18 <abort@plt+0x178>
   10a04:	cmp	r3, #0
   10a08:	bxeq	lr
   10a0c:	bx	r3
   10a10:	andeq	r3, r2, r4, lsl #1
   10a14:	andeq	r3, r2, r4, lsl #1
   10a18:	andeq	r0, r0, r0
   10a1c:	push	{r4, lr}
   10a20:	ldr	r4, [pc, #24]	; 10a40 <abort@plt+0x1a0>
   10a24:	ldrb	r3, [r4]
   10a28:	cmp	r3, #0
   10a2c:	popne	{r4, pc}
   10a30:	bl	109b8 <abort@plt+0x118>
   10a34:	mov	r3, #1
   10a38:	strb	r3, [r4]
   10a3c:	pop	{r4, pc}
   10a40:	muleq	r2, r8, r0
   10a44:	b	109e4 <abort@plt+0x144>
   10a48:	strd	r4, [sp, #-16]!
   10a4c:	movw	r4, #12560	; 0x3110
   10a50:	movt	r4, #2
   10a54:	mov	r1, r0
   10a58:	mov	r0, r4
   10a5c:	str	r6, [sp, #8]
   10a60:	str	lr, [sp, #12]
   10a64:	ldr	r6, [r4]
   10a68:	ldr	r5, [r4, #4]
   10a6c:	bl	114c0 <abort@plt+0xc20>
   10a70:	ldm	r4, {r1, r2}
   10a74:	movw	r0, #29664	; 0x73e0
   10a78:	movt	r0, #2
   10a7c:	ldr	lr, [sp, #12]
   10a80:	sub	r1, r1, r6
   10a84:	sub	r2, r2, r5
   10a88:	ldrd	r4, [sp]
   10a8c:	ldr	r6, [sp, #8]
   10a90:	add	sp, sp, #16
   10a94:	b	10b68 <abort@plt+0x2c8>
   10a98:	strd	r4, [sp, #-12]!
   10a9c:	movw	r5, #29664	; 0x73e0
   10aa0:	movt	r5, #2
   10aa4:	str	lr, [sp, #8]
   10aa8:	sub	sp, sp, #36	; 0x24
   10aac:	mov	r0, r5
   10ab0:	add	r2, sp, #24
   10ab4:	add	r1, sp, #16
   10ab8:	bl	10bcc <abort@plt+0x32c>
   10abc:	movw	r4, #12560	; 0x3110
   10ac0:	movt	r4, #2
   10ac4:	ldr	r1, [r5, #12]
   10ac8:	movw	r0, #10196	; 0x27d4
   10acc:	movt	r0, #1
   10ad0:	bl	107a4 <printf@plt>
   10ad4:	movw	r0, #10220	; 0x27ec
   10ad8:	movt	r0, #1
   10adc:	ldr	r1, [r4]
   10ae0:	bl	107a4 <printf@plt>
   10ae4:	movw	r0, #10236	; 0x27fc
   10ae8:	movt	r0, #1
   10aec:	ldr	r1, [r4, #4]
   10af0:	bl	107a4 <printf@plt>
   10af4:	ldr	r3, [r4]
   10af8:	movw	r0, #10260	; 0x2814
   10afc:	movt	r0, #1
   10b00:	ldr	r2, [r4, #4]
   10b04:	vldr	d5, [pc, #84]	; 10b60 <abort@plt+0x2c0>
   10b08:	vmov	s15, r3
   10b0c:	sub	r3, r3, r2
   10b10:	vmov	s14, r3
   10b14:	vcvt.f64.s32	d6, s15
   10b18:	vcvt.f64.s32	d7, s14
   10b1c:	vmul.f64	d7, d7, d5
   10b20:	vdiv.f64	d7, d7, d6
   10b24:	vmov	r2, r3, d7
   10b28:	bl	107a4 <printf@plt>
   10b2c:	movw	r3, #10304	; 0x2840
   10b30:	movt	r3, #1
   10b34:	ldrd	r4, [sp, #24]
   10b38:	movw	r0, #10280	; 0x2828
   10b3c:	movt	r0, #1
   10b40:	str	r3, [sp, #8]
   10b44:	ldrd	r2, [sp, #16]
   10b48:	strd	r4, [sp]
   10b4c:	bl	107a4 <printf@plt>
   10b50:	add	sp, sp, #36	; 0x24
   10b54:	ldrd	r4, [sp]
   10b58:	add	sp, sp, #8
   10b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b60:	andeq	r0, r0, r0
   10b64:	subsmi	r0, r9, r0
   10b68:	strd	r4, [sp, #-16]!
   10b6c:	mov	r4, r0
   10b70:	mov	r0, #1
   10b74:	str	r6, [sp, #8]
   10b78:	mov	r6, r1
   10b7c:	mov	r1, #32
   10b80:	mov	r5, r2
   10b84:	str	lr, [sp, #12]
   10b88:	bl	11e8c <error@@Base+0x40>
   10b8c:	mov	ip, r0
   10b90:	ldr	lr, [sp, #12]
   10b94:	mov	r0, r4
   10b98:	mov	r1, ip
   10b9c:	str	r6, [ip, #8]
   10ba0:	str	r5, [ip, #12]
   10ba4:	ldr	ip, [r4, #24]
   10ba8:	ldr	r3, [r4, #28]
   10bac:	add	ip, ip, r6
   10bb0:	ldr	r6, [sp, #8]
   10bb4:	add	r3, r3, r5
   10bb8:	str	ip, [r4, #24]
   10bbc:	str	r3, [r4, #28]
   10bc0:	ldrd	r4, [sp]
   10bc4:	add	sp, sp, #16
   10bc8:	b	1233c <error@@Base+0x4f0>
   10bcc:	strd	r4, [sp, #-16]!
   10bd0:	str	r6, [sp, #8]
   10bd4:	str	lr, [sp, #12]
   10bd8:	sub	sp, sp, #24
   10bdc:	ldr	lr, [r0]
   10be0:	cmp	lr, #0
   10be4:	beq	10d98 <abort@plt+0x4f8>
   10be8:	mov	r3, lr
   10bec:	mov	r4, #0
   10bf0:	ldr	ip, [r3, #8]
   10bf4:	ldr	r3, [r3, #4]
   10bf8:	cmp	ip, #0
   10bfc:	addgt	r4, r4, #1
   10c00:	cmp	r3, #0
   10c04:	bne	10bf0 <abort@plt+0x350>
   10c08:	cmp	r4, #1
   10c0c:	ble	10d98 <abort@plt+0x4f8>
   10c10:	vldr	d6, [pc, #400]	; 10da8 <abort@plt+0x508>
   10c14:	mov	ip, lr
   10c18:	ldr	r5, [r0, #24]
   10c1c:	ldr	r6, [r0, #28]
   10c20:	vldr	s9, [r0, #12]
   10c24:	vmov.f64	d1, d6
   10c28:	vmov	s15, r5
   10c2c:	vldr	d5, [pc, #380]	; 10db0 <abort@plt+0x510>
   10c30:	sub	r3, r5, r6
   10c34:	vmov	s14, r3
   10c38:	vmov	r3, s9
   10c3c:	vcvt.f64.s32	d3, s9
   10c40:	vcvt.f64.s32	d2, s15
   10c44:	sub	r3, r3, #1
   10c48:	vcvt.f64.s32	d7, s14
   10c4c:	vmov	s8, r3
   10c50:	vmul.f64	d7, d7, d6
   10c54:	vcvt.f64.s32	d4, s8
   10c58:	vdiv.f64	d6, d7, d2
   10c5c:	vmul.f64	d2, d3, d6
   10c60:	vstr	d6, [r0, #32]
   10c64:	ldr	r3, [ip, #8]
   10c68:	ldr	r4, [ip, #12]
   10c6c:	sub	r3, r5, r3
   10c70:	sub	r4, r6, r4
   10c74:	vmov	s15, r3
   10c78:	sub	r3, r3, r4
   10c7c:	vmov	s14, r3
   10c80:	vcvt.f64.s32	d0, s15
   10c84:	vcvt.f64.s32	d7, s14
   10c88:	vmul.f64	d7, d7, d1
   10c8c:	vdiv.f64	d6, d7, d0
   10c90:	vmov.f64	d7, d2
   10c94:	vmls.f64	d7, d6, d4
   10c98:	vstr	d6, [ip, #16]
   10c9c:	vadd.f64	d5, d5, d6
   10ca0:	vstr	d7, [ip, #24]
   10ca4:	ldr	ip, [ip, #4]
   10ca8:	cmp	ip, #0
   10cac:	bne	10c64 <abort@plt+0x3c4>
   10cb0:	vmul.f64	d5, d5, d4
   10cb4:	vldr	d6, [pc, #244]	; 10db0 <abort@plt+0x510>
   10cb8:	vdiv.f64	d7, d5, d3
   10cbc:	vsub.f64	d5, d2, d7
   10cc0:	vstr	d5, [r0, #40]	; 0x28
   10cc4:	vldr	d7, [lr, #24]
   10cc8:	ldr	lr, [lr, #4]
   10ccc:	vsub.f64	d7, d7, d5
   10cd0:	cmp	lr, #0
   10cd4:	vmla.f64	d6, d7, d7
   10cd8:	bne	10cc4 <abort@plt+0x424>
   10cdc:	vdiv.f64	d7, d6, d4
   10ce0:	vdiv.f64	d0, d7, d3
   10ce4:	vcmp.f64	d0, #0.0
   10ce8:	vsqrt.f64	d7, d0
   10cec:	vmrs	APSR_nzcv, fpscr
   10cf0:	bmi	10d74 <abort@plt+0x4d4>
   10cf4:	vldr	d4, [pc, #188]	; 10db8 <abort@plt+0x518>
   10cf8:	vldr	d6, [pc, #168]	; 10da8 <abort@plt+0x508>
   10cfc:	vmul.f64	d7, d7, d4
   10d00:	vsub.f64	d5, d5, d7
   10d04:	vcmpe.f64	d5, d6
   10d08:	vmrs	APSR_nzcv, fpscr
   10d0c:	vmovgt.f64	d5, d6
   10d10:	ble	10d60 <abort@plt+0x4c0>
   10d14:	vstr	d5, [r1]
   10d18:	vldr	d5, [r0, #40]	; 0x28
   10d1c:	vldr	d6, [pc, #132]	; 10da8 <abort@plt+0x508>
   10d20:	vadd.f64	d7, d7, d5
   10d24:	vcmpe.f64	d7, d6
   10d28:	vmrs	APSR_nzcv, fpscr
   10d2c:	vmovgt.f64	d7, d6
   10d30:	ble	10d4c <abort@plt+0x4ac>
   10d34:	vstr	d7, [r2]
   10d38:	add	sp, sp, #24
   10d3c:	ldrd	r4, [sp]
   10d40:	ldr	r6, [sp, #8]
   10d44:	add	sp, sp, #12
   10d48:	pop	{pc}		; (ldr pc, [sp], #4)
   10d4c:	vcmp.f64	d7, #0.0
   10d50:	vldr	d6, [pc, #88]	; 10db0 <abort@plt+0x510>
   10d54:	vmrs	APSR_nzcv, fpscr
   10d58:	vmovmi.f64	d7, d6
   10d5c:	b	10d34 <abort@plt+0x494>
   10d60:	vcmp.f64	d5, #0.0
   10d64:	vldr	d6, [pc, #68]	; 10db0 <abort@plt+0x510>
   10d68:	vmrs	APSR_nzcv, fpscr
   10d6c:	vmovmi.f64	d5, d6
   10d70:	b	10d14 <abort@plt+0x474>
   10d74:	vstr	d7, [sp]
   10d78:	strd	r0, [sp, #12]
   10d7c:	str	r2, [sp, #20]
   10d80:	bl	10858 <sqrt@plt>
   10d84:	vldr	d7, [sp]
   10d88:	ldrd	r0, [sp, #12]
   10d8c:	ldr	r2, [sp, #20]
   10d90:	vldr	d5, [r0, #40]	; 0x28
   10d94:	b	10cf4 <abort@plt+0x454>
   10d98:	movw	r0, #10428	; 0x28bc
   10d9c:	movt	r0, #1
   10da0:	bl	11e4c <error@@Base>
   10da4:	nop	{0}
   10da8:	andeq	r0, r0, r0
   10dac:	subsmi	r0, r9, r0
	...
   10db8:			; <UNDEFINED> instruction: 0xf5c28f5c
   10dbc:	svccc	0x00ff5c28
   10dc0:	ldr	r0, [r0, #8]
   10dc4:	ldr	r1, [r1, #8]
   10dc8:	b	11c54 <abort@plt+0x13b4>
   10dcc:	mov	r2, r0
   10dd0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10dd4:	strd	r6, [sp, #8]
   10dd8:	mov	r6, r0
   10ddc:	mov	r7, r1
   10de0:	movw	r0, #12444	; 0x309c
   10de4:	movt	r0, #2
   10de8:	strd	r8, [sp, #16]
   10dec:	mov	r1, #99	; 0x63
   10df0:	str	lr, [sp, #24]
   10df4:	sub	sp, sp, #12
   10df8:	bl	107c8 <fgets@plt>
   10dfc:	cmp	r0, #0
   10e00:	beq	10ecc <abort@plt+0x62c>
   10e04:	movw	r0, #12444	; 0x309c
   10e08:	movt	r0, #2
   10e0c:	mov	r2, r6
   10e10:	mov	r1, #99	; 0x63
   10e14:	bl	107c8 <fgets@plt>
   10e18:	cmp	r0, #0
   10e1c:	beq	10ecc <abort@plt+0x62c>
   10e20:	movw	r4, #12444	; 0x309c
   10e24:	movt	r4, #2
   10e28:	movw	r8, #10460	; 0x28dc
   10e2c:	movt	r8, #1
   10e30:	add	r5, r4, #29
   10e34:	mov	r9, #0
   10e38:	b	10e58 <abort@plt+0x5b8>
   10e3c:	ldr	r0, [sp]
   10e40:	add	r3, r7, r3, lsl #3
   10e44:	ldm	r3, {r1, r2}
   10e48:	ldr	ip, [sp, #4]
   10e4c:	add	r1, r1, r0
   10e50:	add	r2, r2, ip
   10e54:	stm	r3, {r1, r2}
   10e58:	mov	r2, r6
   10e5c:	mov	r1, #99	; 0x63
   10e60:	mov	r0, r4
   10e64:	bl	107c8 <fgets@plt>
   10e68:	cmp	r0, #0
   10e6c:	add	r3, sp, #4
   10e70:	mov	r2, sp
   10e74:	mov	r1, r8
   10e78:	mov	r0, r4
   10e7c:	beq	10ed0 <abort@plt+0x630>
   10e80:	bl	10864 <__isoc99_sscanf@plt>
   10e84:	cmp	r0, #2
   10e88:	bne	10ed0 <abort@plt+0x630>
   10e8c:	mov	r1, #0
   10e90:	mov	r2, #10
   10e94:	mov	r0, r5
   10e98:	bl	10798 <strtol@plt>
   10e9c:	subs	r3, r0, #0
   10ea0:	movw	r1, #10452	; 0x28d4
   10ea4:	movt	r1, #1
   10ea8:	mov	r0, r5
   10eac:	bne	10e3c <abort@plt+0x59c>
   10eb0:	bl	1078c <strcmp@plt>
   10eb4:	cmp	r0, #0
   10eb8:	ldr	r0, [sp]
   10ebc:	mov	r3, r7
   10ec0:	addne	r3, r7, #88	; 0x58
   10ec4:	moveq	r9, r0
   10ec8:	b	10e44 <abort@plt+0x5a4>
   10ecc:	mov	r9, #0
   10ed0:	mov	r0, r9
   10ed4:	add	sp, sp, #12
   10ed8:	ldrd	r4, [sp]
   10edc:	ldrd	r6, [sp, #8]
   10ee0:	ldrd	r8, [sp, #16]
   10ee4:	add	sp, sp, #24
   10ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   10eec:	strd	r4, [sp, #-16]!
   10ef0:	subs	r4, r1, #0
   10ef4:	mov	r5, r0
   10ef8:	str	r6, [sp, #8]
   10efc:	str	lr, [sp, #12]
   10f00:	beq	10f9c <abort@plt+0x6fc>
   10f04:	movw	r1, #10468	; 0x28e4
   10f08:	movt	r1, #1
   10f0c:	ldrd	r2, [r4]
   10f10:	bl	1084c <fprintf@plt>
   10f14:	ldr	r3, [r4]
   10f18:	cmp	r3, #0
   10f1c:	beq	10f80 <abort@plt+0x6e0>
   10f20:	ldr	r2, [r4, #4]
   10f24:	movw	r1, #10492	; 0x28fc
   10f28:	movt	r1, #1
   10f2c:	vmov	s15, r3
   10f30:	mov	r0, r5
   10f34:	vldr	d5, [pc, #124]	; 10fb8 <abort@plt+0x718>
   10f38:	sub	r3, r3, r2
   10f3c:	vmov	s14, r3
   10f40:	vcvt.f64.s32	d6, s15
   10f44:	vcvt.f64.s32	d7, s14
   10f48:	vmul.f64	d7, d7, d5
   10f4c:	vdiv.f64	d7, d7, d6
   10f50:	vmov	r2, r3, d7
   10f54:	bl	1084c <fprintf@plt>
   10f58:	mov	r3, r5
   10f5c:	movw	r0, #10528	; 0x2920
   10f60:	movt	r0, #1
   10f64:	mov	r2, #3
   10f68:	ldrd	r4, [sp]
   10f6c:	mov	r1, #1
   10f70:	ldr	r6, [sp, #8]
   10f74:	ldr	lr, [sp, #12]
   10f78:	add	sp, sp, #16
   10f7c:	b	107f8 <fwrite@plt>
   10f80:	movw	r0, #10480	; 0x28f0
   10f84:	movt	r0, #1
   10f88:	mov	r3, r5
   10f8c:	mov	r2, #8
   10f90:	mov	r1, #1
   10f94:	bl	107f8 <fwrite@plt>
   10f98:	b	10f58 <abort@plt+0x6b8>
   10f9c:	movw	r0, #10500	; 0x2904
   10fa0:	movt	r0, #1
   10fa4:	mov	r3, r5
   10fa8:	mov	r2, #26
   10fac:	mov	r1, #1
   10fb0:	bl	107f8 <fwrite@plt>
   10fb4:	b	10f58 <abort@plt+0x6b8>
   10fb8:	andeq	r0, r0, r0
   10fbc:	subsmi	r0, r9, r0
   10fc0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10fc4:	movw	r5, #12444	; 0x309c
   10fc8:	movt	r5, #2
   10fcc:	mov	r2, r0
   10fd0:	strd	r6, [sp, #8]
   10fd4:	strd	r8, [sp, #16]
   10fd8:	mov	r8, r0
   10fdc:	mov	r9, r1
   10fe0:	mov	r0, r5
   10fe4:	mov	r1, #99	; 0x63
   10fe8:	strd	sl, [sp, #24]
   10fec:	str	lr, [sp, #32]
   10ff0:	sub	sp, sp, #20
   10ff4:	bl	107c8 <fgets@plt>
   10ff8:	cmp	r0, #0
   10ffc:	beq	110a0 <abort@plt+0x800>
   11000:	mov	r2, r8
   11004:	mov	r1, #99	; 0x63
   11008:	mov	r0, r5
   1100c:	bl	107c8 <fgets@plt>
   11010:	cmp	r0, #0
   11014:	beq	110a0 <abort@plt+0x800>
   11018:	movw	sl, #10460	; 0x28dc
   1101c:	movt	sl, #1
   11020:	mov	r4, r5
   11024:	add	fp, r5, #29
   11028:	b	11078 <abort@plt+0x7d8>
   1102c:	bl	10864 <__isoc99_sscanf@plt>
   11030:	cmp	r0, #2
   11034:	bne	110a0 <abort@plt+0x800>
   11038:	mov	r0, r4
   1103c:	bl	10840 <strlen@plt>
   11040:	add	r3, r5, r0
   11044:	mov	r2, #0
   11048:	ldrd	r6, [sp, #8]
   1104c:	mov	r1, fp
   11050:	mov	r0, r9
   11054:	strb	r2, [r3, #-1]
   11058:	bl	11910 <abort@plt+0x1070>
   1105c:	subs	r3, r0, #0
   11060:	beq	110bc <abort@plt+0x81c>
   11064:	ldr	r1, [r3, #12]
   11068:	ldr	r2, [r3, #16]
   1106c:	add	r6, r1, r6
   11070:	add	r7, r2, r7
   11074:	strd	r6, [r3, #12]
   11078:	mov	r2, r8
   1107c:	mov	r1, #99	; 0x63
   11080:	mov	r0, r4
   11084:	bl	107c8 <fgets@plt>
   11088:	cmp	r0, #0
   1108c:	add	r3, sp, #12
   11090:	add	r2, sp, #8
   11094:	mov	r1, sl
   11098:	mov	r0, r4
   1109c:	bne	1102c <abort@plt+0x78c>
   110a0:	add	sp, sp, #20
   110a4:	ldrd	r4, [sp]
   110a8:	ldrd	r6, [sp, #8]
   110ac:	ldrd	r8, [sp, #16]
   110b0:	ldrd	sl, [sp, #24]
   110b4:	add	sp, sp, #32
   110b8:	pop	{pc}		; (ldr pc, [sp], #4)
   110bc:	mov	r1, #20
   110c0:	mov	r0, #1
   110c4:	bl	11e8c <error@@Base+0x40>
   110c8:	mov	r3, r0
   110cc:	mov	r0, fp
   110d0:	str	r3, [sp, #4]
   110d4:	bl	107d4 <strdup@plt>
   110d8:	ldr	r3, [sp, #4]
   110dc:	mov	r1, r3
   110e0:	str	r0, [r3, #8]
   110e4:	mov	r0, r9
   110e8:	bl	1199c <abort@plt+0x10fc>
   110ec:	ldr	r3, [sp, #4]
   110f0:	b	11064 <abort@plt+0x7c4>
   110f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   110f8:	mov	r5, r0
   110fc:	mov	r0, r1
   11100:	strd	r6, [sp, #8]
   11104:	add	r7, r1, #4096	; 0x1000
   11108:	mov	r4, r2
   1110c:	strd	r8, [sp, #16]
   11110:	str	sl, [sp, #24]
   11114:	str	lr, [sp, #28]
   11118:	vpush	{d8}
   1111c:	bl	11aa4 <abort@plt+0x1204>
   11120:	movw	r2, #3520	; 0xdc0
   11124:	movt	r2, #1
   11128:	ldr	r1, [r7, #3952]	; 0xf70
   1112c:	ldr	r0, [r7, #3956]	; 0xf74
   11130:	bl	12738 <error@@Base+0x8ec>
   11134:	mov	r2, r4
   11138:	mov	r0, r5
   1113c:	movw	r1, #10532	; 0x2924
   11140:	movt	r1, #1
   11144:	bl	1084c <fprintf@plt>
   11148:	mov	r3, r5
   1114c:	mov	r2, #26
   11150:	mov	r1, #1
   11154:	movw	r0, #10500	; 0x2904
   11158:	movt	r0, #1
   1115c:	bl	107f8 <fwrite@plt>
   11160:	mov	r3, r5
   11164:	mov	r2, #3
   11168:	mov	r1, #1
   1116c:	movw	r0, #10528	; 0x2920
   11170:	movt	r0, #1
   11174:	bl	107f8 <fwrite@plt>
   11178:	mov	r1, r5
   1117c:	mov	r0, #10
   11180:	bl	1087c <fputc@plt>
   11184:	ldr	r3, [r7, #3956]	; 0xf74
   11188:	cmp	r3, #0
   1118c:	ble	11284 <abort@plt+0x9e4>
   11190:	movw	r8, #10500	; 0x2904
   11194:	movt	r8, #1
   11198:	vldr	d8, [pc, #256]	; 112a0 <abort@plt+0xa00>
   1119c:	mov	r4, #0
   111a0:	b	1121c <abort@plt+0x97c>
   111a4:	ldr	r3, [r6, #16]
   111a8:	movw	r1, #10492	; 0x28fc
   111ac:	movt	r1, #1
   111b0:	vmov	s15, ip
   111b4:	mov	r0, r5
   111b8:	sub	r3, ip, r3
   111bc:	vmov	s14, r3
   111c0:	vcvt.f64.s32	d6, s15
   111c4:	vcvt.f64.s32	d7, s14
   111c8:	vmul.f64	d7, d7, d8
   111cc:	vdiv.f64	d7, d7, d6
   111d0:	vmov	r2, r3, d7
   111d4:	bl	1084c <fprintf@plt>
   111d8:	mov	r1, #1
   111dc:	mov	r3, r5
   111e0:	mov	r2, #3
   111e4:	movw	r0, #10528	; 0x2920
   111e8:	movt	r0, #1
   111ec:	add	r4, r4, r1
   111f0:	bl	107f8 <fwrite@plt>
   111f4:	ldr	r3, [r7, #3952]	; 0xf70
   111f8:	movw	r1, #10872	; 0x2a78
   111fc:	movt	r1, #1
   11200:	mov	r0, r5
   11204:	ldr	r3, [r3, r9]
   11208:	ldr	r2, [r3, #8]
   1120c:	bl	1084c <fprintf@plt>
   11210:	ldr	r3, [r7, #3956]	; 0xf74
   11214:	cmp	r3, r4
   11218:	ble	11284 <abort@plt+0x9e4>
   1121c:	ldr	r3, [r7, #3952]	; 0xf70
   11220:	movw	r1, #10468	; 0x28e4
   11224:	movt	r1, #1
   11228:	mov	r0, r5
   1122c:	lsl	r9, r4, #2
   11230:	ldr	r6, [r3, r4, lsl #2]
   11234:	cmn	r6, #12
   11238:	beq	1126c <abort@plt+0x9cc>
   1123c:	ldrd	r2, [r6, #12]
   11240:	bl	1084c <fprintf@plt>
   11244:	ldr	ip, [r6, #12]
   11248:	movw	r0, #10480	; 0x28f0
   1124c:	movt	r0, #1
   11250:	mov	r3, r5
   11254:	mov	r2, #8
   11258:	mov	r1, #1
   1125c:	cmp	ip, #0
   11260:	bne	111a4 <abort@plt+0x904>
   11264:	bl	107f8 <fwrite@plt>
   11268:	b	111d8 <abort@plt+0x938>
   1126c:	mov	r3, r5
   11270:	mov	r2, #26
   11274:	mov	r1, #1
   11278:	mov	r0, r8
   1127c:	bl	107f8 <fwrite@plt>
   11280:	b	111d8 <abort@plt+0x938>
   11284:	vpop	{d8}
   11288:	ldrd	r4, [sp]
   1128c:	ldrd	r6, [sp, #8]
   11290:	ldrd	r8, [sp, #16]
   11294:	ldr	sl, [sp, #24]
   11298:	add	sp, sp, #28
   1129c:	pop	{pc}		; (ldr pc, [sp], #4)
   112a0:	andeq	r0, r0, r0
   112a4:	subsmi	r0, r9, r0
   112a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112ac:	mov	r5, r1
   112b0:	movw	r1, #10532	; 0x2924
   112b4:	movt	r1, #1
   112b8:	strd	r6, [sp, #8]
   112bc:	mov	r6, r0
   112c0:	strd	r8, [sp, #16]
   112c4:	mov	r9, r2
   112c8:	mov	r2, r3
   112cc:	strd	sl, [sp, #24]
   112d0:	sub	fp, r9, #1
   112d4:	movw	r7, #10556	; 0x293c
   112d8:	movt	r7, #1
   112dc:	str	lr, [sp, #32]
   112e0:	sub	sp, sp, #4
   112e4:	ldrb	r8, [sp, #40]	; 0x28
   112e8:	uxth	fp, fp
   112ec:	mov	r4, #1
   112f0:	add	fp, fp, #2
   112f4:	ldrb	sl, [sp, #44]	; 0x2c
   112f8:	bl	1084c <fprintf@plt>
   112fc:	mov	r3, r6
   11300:	mov	r2, #26
   11304:	mov	r1, #1
   11308:	movw	r0, #10500	; 0x2904
   1130c:	movt	r0, #1
   11310:	bl	107f8 <fwrite@plt>
   11314:	mov	r3, r6
   11318:	mov	r2, #3
   1131c:	mov	r1, #1
   11320:	movw	r0, #10528	; 0x2920
   11324:	movt	r0, #1
   11328:	bl	107f8 <fwrite@plt>
   1132c:	cmp	r8, #0
   11330:	movw	r3, #10548	; 0x2934
   11334:	movt	r3, #1
   11338:	movw	r2, #10540	; 0x292c
   1133c:	movt	r2, #1
   11340:	mov	r0, r6
   11344:	moveq	r2, r3
   11348:	movw	r1, #10872	; 0x2a78
   1134c:	movt	r1, #1
   11350:	bl	1084c <fprintf@plt>
   11354:	ldr	r3, [r5, r4, lsl #3]
   11358:	mov	r0, r6
   1135c:	add	r1, r5, r4, lsl #3
   11360:	cmp	r3, #0
   11364:	ble	1137c <abort@plt+0xadc>
   11368:	bl	10eec <abort@plt+0x64c>
   1136c:	mov	r2, r4
   11370:	mov	r1, r7
   11374:	mov	r0, r6
   11378:	bl	1084c <fprintf@plt>
   1137c:	add	r4, r4, #1
   11380:	cmp	fp, r4
   11384:	bne	11354 <abort@plt+0xab4>
   11388:	cmp	r8, #0
   1138c:	beq	113a4 <abort@plt+0xb04>
   11390:	add	r1, r9, #1
   11394:	ldr	r3, [r5, r1, lsl #3]
   11398:	add	r1, r5, r1, lsl #3
   1139c:	cmp	r3, #0
   113a0:	bgt	113c8 <abort@plt+0xb28>
   113a4:	cmp	sl, #0
   113a8:	bne	113ec <abort@plt+0xb4c>
   113ac:	add	sp, sp, #4
   113b0:	ldrd	r4, [sp]
   113b4:	ldrd	r6, [sp, #8]
   113b8:	ldrd	r8, [sp, #16]
   113bc:	ldrd	sl, [sp, #24]
   113c0:	add	sp, sp, #32
   113c4:	pop	{pc}		; (ldr pc, [sp], #4)
   113c8:	mov	r0, r6
   113cc:	bl	10eec <abort@plt+0x64c>
   113d0:	mov	r2, r9
   113d4:	movw	r1, #10568	; 0x2948
   113d8:	movt	r1, #1
   113dc:	mov	r0, r6
   113e0:	bl	1084c <fprintf@plt>
   113e4:	cmp	sl, #0
   113e8:	beq	113ac <abort@plt+0xb0c>
   113ec:	mov	r1, r5
   113f0:	mov	r0, r6
   113f4:	bl	10eec <abort@plt+0x64c>
   113f8:	mov	r3, r6
   113fc:	movw	r0, #10452	; 0x28d4
   11400:	movt	r0, #1
   11404:	mov	r2, #7
   11408:	mov	r1, #1
   1140c:	add	sp, sp, #4
   11410:	ldrd	r4, [sp]
   11414:	ldrd	r6, [sp, #8]
   11418:	ldrd	r8, [sp, #16]
   1141c:	ldrd	sl, [sp, #24]
   11420:	ldr	lr, [sp, #32]
   11424:	add	sp, sp, #36	; 0x24
   11428:	b	107f8 <fwrite@plt>
   1142c:	ldr	ip, [r0]
   11430:	ldr	r3, [r0, #4]
   11434:	add	r1, ip, r1
   11438:	add	r2, r3, r2
   1143c:	stm	r0, {r1, r2}
   11440:	bx	lr
   11444:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11448:	mov	r5, r3
   1144c:	strd	r6, [sp, #8]
   11450:	mov	r6, r2
   11454:	mov	r7, r0
   11458:	str	r8, [sp, #16]
   1145c:	mov	r8, r1
   11460:	str	lr, [sp, #20]
   11464:	bl	11910 <abort@plt+0x1070>
   11468:	subs	r4, r0, #0
   1146c:	beq	11494 <abort@plt+0xbf4>
   11470:	ldrd	r0, [r4, #12]
   11474:	ldr	r8, [sp, #16]
   11478:	add	r0, r0, r6
   1147c:	add	r1, r1, r5
   11480:	ldrd	r6, [sp, #8]
   11484:	strd	r0, [r4, #12]
   11488:	ldrd	r4, [sp]
   1148c:	add	sp, sp, #20
   11490:	pop	{pc}		; (ldr pc, [sp], #4)
   11494:	mov	r1, #20
   11498:	mov	r0, #1
   1149c:	bl	11e8c <error@@Base+0x40>
   114a0:	mov	r4, r0
   114a4:	mov	r0, r8
   114a8:	bl	107d4 <strdup@plt>
   114ac:	mov	r1, r4
   114b0:	str	r0, [r4, #8]
   114b4:	mov	r0, r7
   114b8:	bl	1199c <abort@plt+0x10fc>
   114bc:	b	11470 <abort@plt+0xbd0>
   114c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   114c4:	mov	r5, r0
   114c8:	strd	r6, [sp, #8]
   114cc:	mov	r6, r1
   114d0:	movw	r1, #10588	; 0x295c
   114d4:	movt	r1, #1
   114d8:	mov	r0, r6
   114dc:	str	lr, [sp, #16]
   114e0:	sub	sp, sp, #12
   114e4:	bl	11f2c <error@@Base+0xe0>
   114e8:	mov	r2, r0
   114ec:	mov	r4, r0
   114f0:	mov	r1, #99	; 0x63
   114f4:	movw	r0, #12444	; 0x309c
   114f8:	movt	r0, #2
   114fc:	bl	107c8 <fgets@plt>
   11500:	cmp	r0, #0
   11504:	beq	1159c <abort@plt+0xcfc>
   11508:	movw	r1, #10592	; 0x2960
   1150c:	movt	r1, #1
   11510:	movw	r0, #12444	; 0x309c
   11514:	movt	r0, #2
   11518:	mov	r2, #45	; 0x2d
   1151c:	bl	10894 <strncmp@plt>
   11520:	cmp	r0, #0
   11524:	bne	1159c <abort@plt+0xcfc>
   11528:	movw	r0, #12444	; 0x309c
   1152c:	movt	r0, #2
   11530:	mov	r2, r4
   11534:	mov	r1, #99	; 0x63
   11538:	bl	107c8 <fgets@plt>
   1153c:	cmp	r0, #0
   11540:	beq	1159c <abort@plt+0xcfc>
   11544:	movw	r1, #10640	; 0x2990
   11548:	movt	r1, #1
   1154c:	movw	r0, #12444	; 0x309c
   11550:	movt	r0, #2
   11554:	bl	1078c <strcmp@plt>
   11558:	cmp	r0, #0
   1155c:	bne	1159c <abort@plt+0xcfc>
   11560:	movw	r0, #12444	; 0x309c
   11564:	movt	r0, #2
   11568:	mov	r2, r4
   1156c:	mov	r1, #99	; 0x63
   11570:	bl	107c8 <fgets@plt>
   11574:	cmp	r0, #0
   11578:	beq	1159c <abort@plt+0xcfc>
   1157c:	movw	r1, #10464	; 0x28e0
   11580:	movt	r1, #1
   11584:	movw	r0, #12444	; 0x309c
   11588:	movt	r0, #2
   1158c:	mov	r2, sp
   11590:	bl	10864 <__isoc99_sscanf@plt>
   11594:	cmp	r0, #1
   11598:	beq	115b8 <abort@plt+0xd18>
   1159c:	cmp	r6, #0
   115a0:	movw	r1, #10580	; 0x2954
   115a4:	movt	r1, #1
   115a8:	movw	r0, #10688	; 0x29c0
   115ac:	movt	r0, #1
   115b0:	movne	r1, r6
   115b4:	bl	11ee8 <error@@Base+0x9c>
   115b8:	movw	r0, #12444	; 0x309c
   115bc:	movt	r0, #2
   115c0:	mov	r2, r4
   115c4:	mov	r1, #99	; 0x63
   115c8:	bl	107c8 <fgets@plt>
   115cc:	cmp	r0, #0
   115d0:	beq	1159c <abort@plt+0xcfc>
   115d4:	movw	r1, #10464	; 0x28e0
   115d8:	movt	r1, #1
   115dc:	movw	r0, #12444	; 0x309c
   115e0:	movt	r0, #2
   115e4:	add	r2, sp, #4
   115e8:	bl	10864 <__isoc99_sscanf@plt>
   115ec:	cmp	r0, #1
   115f0:	bne	1159c <abort@plt+0xcfc>
   115f4:	movw	r0, #12444	; 0x309c
   115f8:	movt	r0, #2
   115fc:	mov	r2, r4
   11600:	mov	r1, #99	; 0x63
   11604:	bl	107c8 <fgets@plt>
   11608:	cmp	r0, #0
   1160c:	beq	1159c <abort@plt+0xcfc>
   11610:	movw	r0, #12444	; 0x309c
   11614:	movt	r0, #2
   11618:	mov	r2, r4
   1161c:	mov	r1, #99	; 0x63
   11620:	bl	107c8 <fgets@plt>
   11624:	cmp	r0, #0
   11628:	beq	1159c <abort@plt+0xcfc>
   1162c:	ldm	sp, {ip, lr}
   11630:	add	r1, r5, #8
   11634:	mov	r0, r4
   11638:	ldr	r3, [r5]
   1163c:	ldr	r2, [r5, #4]
   11640:	add	r3, r3, ip
   11644:	add	r2, r2, lr
   11648:	str	r3, [r5]
   1164c:	str	r2, [r5, #4]
   11650:	bl	10dcc <abort@plt+0x52c>
   11654:	mov	r7, r0
   11658:	add	r1, r5, #416	; 0x1a0
   1165c:	mov	r0, r4
   11660:	bl	10dcc <abort@plt+0x52c>
   11664:	mov	r6, r0
   11668:	add	r1, r5, #824	; 0x338
   1166c:	mov	r0, r4
   11670:	bl	10dcc <abort@plt+0x52c>
   11674:	ldr	r3, [sp]
   11678:	cmp	r3, #0
   1167c:	bgt	1169c <abort@plt+0xdfc>
   11680:	mov	r0, r4
   11684:	bl	11cac <abort@plt+0x140c>
   11688:	add	sp, sp, #12
   1168c:	ldrd	r4, [sp]
   11690:	ldrd	r6, [sp, #8]
   11694:	add	sp, sp, #16
   11698:	pop	{pc}		; (ldr pc, [sp], #4)
   1169c:	add	r1, r5, #920	; 0x398
   116a0:	mov	r0, r4
   116a4:	bl	10dcc <abort@plt+0x52c>
   116a8:	cmp	r7, #0
   116ac:	ble	116bc <abort@plt+0xe1c>
   116b0:	add	r1, r5, #992	; 0x3e0
   116b4:	mov	r0, r4
   116b8:	bl	10fc0 <abort@plt+0x720>
   116bc:	cmp	r6, #0
   116c0:	ble	11680 <abort@plt+0xde0>
   116c4:	add	r1, r5, #9024	; 0x2340
   116c8:	mov	r0, r4
   116cc:	add	r1, r1, #24
   116d0:	bl	10fc0 <abort@plt+0x720>
   116d4:	b	11680 <abort@plt+0xde0>
   116d8:	mov	r3, r1
   116dc:	movw	r1, #10708	; 0x29d4
   116e0:	movt	r1, #1
   116e4:	strd	r4, [sp, #-20]!	; 0xffffffec
   116e8:	mov	r4, r0
   116ec:	mov	r0, r3
   116f0:	strd	r6, [sp, #8]
   116f4:	str	lr, [sp, #16]
   116f8:	sub	sp, sp, #12
   116fc:	bl	11f2c <error@@Base+0xe0>
   11700:	mov	r5, r0
   11704:	movw	r3, #10640	; 0x2990
   11708:	movt	r3, #1
   1170c:	movw	r2, #10592	; 0x2960
   11710:	movt	r2, #1
   11714:	movw	r1, #10712	; 0x29d8
   11718:	movt	r1, #1
   1171c:	bl	1084c <fprintf@plt>
   11720:	mov	r0, r5
   11724:	movw	r1, #10720	; 0x29e0
   11728:	movt	r1, #1
   1172c:	ldr	r2, [r4]
   11730:	bl	1084c <fprintf@plt>
   11734:	mov	r0, r5
   11738:	movw	r1, #10736	; 0x29f0
   1173c:	movt	r1, #1
   11740:	ldr	r2, [r4, #4]
   11744:	bl	1084c <fprintf@plt>
   11748:	ldr	r3, [r4]
   1174c:	cmp	r3, #0
   11750:	bne	11814 <abort@plt+0xf74>
   11754:	movw	r0, #10480	; 0x28f0
   11758:	movt	r0, #1
   1175c:	mov	r3, r5
   11760:	mov	r2, #8
   11764:	mov	r1, #1
   11768:	bl	107f8 <fwrite@plt>
   1176c:	mov	r6, #1
   11770:	mov	r7, #0
   11774:	mov	r3, r5
   11778:	mov	r2, #12
   1177c:	mov	r1, r6
   11780:	movw	r0, #10760	; 0x2a08
   11784:	movt	r0, #1
   11788:	bl	107f8 <fwrite@plt>
   1178c:	mov	r2, #50	; 0x32
   11790:	add	r1, r4, #8
   11794:	str	r7, [sp]
   11798:	mov	r0, r5
   1179c:	movw	r3, #10776	; 0x2a18
   117a0:	movt	r3, #1
   117a4:	str	r6, [sp, #4]
   117a8:	bl	112a8 <abort@plt+0xa08>
   117ac:	mov	r2, #50	; 0x32
   117b0:	add	r1, r4, #416	; 0x1a0
   117b4:	str	r7, [sp]
   117b8:	mov	r0, r5
   117bc:	movw	r3, #10788	; 0x2a24
   117c0:	movt	r3, #1
   117c4:	str	r6, [sp, #4]
   117c8:	bl	112a8 <abort@plt+0xa08>
   117cc:	movw	r3, #10804	; 0x2a34
   117d0:	movt	r3, #1
   117d4:	str	r6, [sp]
   117d8:	mov	r2, #10
   117dc:	add	r1, r4, #824	; 0x338
   117e0:	str	r6, [sp, #4]
   117e4:	mov	r0, r5
   117e8:	bl	112a8 <abort@plt+0xa08>
   117ec:	ldr	r3, [r4]
   117f0:	cmp	r3, r7
   117f4:	bgt	11850 <abort@plt+0xfb0>
   117f8:	mov	r0, r5
   117fc:	add	sp, sp, #12
   11800:	ldrd	r4, [sp]
   11804:	ldrd	r6, [sp, #8]
   11808:	ldr	lr, [sp, #16]
   1180c:	add	sp, sp, #20
   11810:	b	11cac <abort@plt+0x140c>
   11814:	ldr	r2, [r4, #4]
   11818:	movw	r1, #10492	; 0x28fc
   1181c:	movt	r1, #1
   11820:	vmov	s15, r3
   11824:	mov	r0, r5
   11828:	vldr	d5, [pc, #136]	; 118b8 <abort@plt+0x1018>
   1182c:	sub	r3, r3, r2
   11830:	vmov	s14, r3
   11834:	vcvt.f64.s32	d6, s15
   11838:	vcvt.f64.s32	d7, s14
   1183c:	vmul.f64	d7, d7, d5
   11840:	vdiv.f64	d7, d7, d6
   11844:	vmov	r2, r3, d7
   11848:	bl	1084c <fprintf@plt>
   1184c:	b	1176c <abort@plt+0xecc>
   11850:	movw	r3, #10828	; 0x2a4c
   11854:	movt	r3, #1
   11858:	str	r7, [sp]
   1185c:	mov	r2, #8
   11860:	add	r1, r4, #920	; 0x398
   11864:	str	r7, [sp, #4]
   11868:	mov	r0, r5
   1186c:	bl	112a8 <abort@plt+0xa08>
   11870:	ldr	r3, [r4, #8]
   11874:	cmp	r3, r7
   11878:	ble	11890 <abort@plt+0xff0>
   1187c:	movw	r2, #10776	; 0x2a18
   11880:	movt	r2, #1
   11884:	add	r1, r4, #992	; 0x3e0
   11888:	mov	r0, r5
   1188c:	bl	110f4 <abort@plt+0x854>
   11890:	ldr	r3, [r4, #416]	; 0x1a0
   11894:	cmp	r3, #0
   11898:	ble	117f8 <abort@plt+0xf58>
   1189c:	add	r1, r4, #9024	; 0x2340
   118a0:	movw	r2, #10788	; 0x2a24
   118a4:	movt	r2, #1
   118a8:	add	r1, r1, #24
   118ac:	mov	r0, r5
   118b0:	bl	110f4 <abort@plt+0x854>
   118b4:	b	117f8 <abort@plt+0xf58>
   118b8:	andeq	r0, r0, r0
   118bc:	subsmi	r0, r9, r0
   118c0:	strd	r4, [sp, #-16]!
   118c4:	add	r5, r0, #8000	; 0x1f40
   118c8:	mov	r4, r0
   118cc:	add	r5, r5, #48	; 0x30
   118d0:	str	r6, [sp, #8]
   118d4:	mov	r6, r0
   118d8:	str	lr, [sp, #12]
   118dc:	mov	r0, r4
   118e0:	add	r4, r4, #16
   118e4:	bl	122cc <error@@Base+0x480>
   118e8:	cmp	r5, r4
   118ec:	bne	118dc <abort@plt+0x103c>
   118f0:	add	r6, r6, #4096	; 0x1000
   118f4:	mov	r3, #0
   118f8:	ldrd	r4, [sp]
   118fc:	str	r3, [r6, #3952]	; 0xf70
   11900:	str	r3, [r6, #3956]	; 0xf74
   11904:	ldr	r6, [sp, #8]
   11908:	add	sp, sp, #12
   1190c:	pop	{pc}		; (ldr pc, [sp], #4)
   11910:	strd	r4, [sp, #-16]!
   11914:	mov	r5, r1
   11918:	str	r6, [sp, #8]
   1191c:	str	lr, [sp, #12]
   11920:	ldrb	r3, [r1]
   11924:	cmp	r3, #0
   11928:	beq	11958 <abort@plt+0x10b8>
   1192c:	mov	r2, #0
   11930:	add	r2, r2, r3
   11934:	ldrb	r3, [r1, #1]!
   11938:	cmp	r3, #0
   1193c:	bne	11930 <abort@plt+0x1090>
   11940:	movw	r3, #20065	; 0x4e61
   11944:	movt	r3, #33354	; 0x824a
   11948:	movw	r1, #503	; 0x1f7
   1194c:	umull	ip, r3, r3, r2
   11950:	lsr	r3, r3, #8
   11954:	mls	r3, r1, r3, r2
   11958:	ldr	r4, [r0, r3, lsl #4]
   1195c:	cmp	r4, #0
   11960:	bne	11974 <abort@plt+0x10d4>
   11964:	b	11988 <abort@plt+0x10e8>
   11968:	ldr	r4, [r4, #4]
   1196c:	cmp	r4, #0
   11970:	beq	11988 <abort@plt+0x10e8>
   11974:	mov	r0, r5
   11978:	ldr	r1, [r4, #8]
   1197c:	bl	1078c <strcmp@plt>
   11980:	cmp	r0, #0
   11984:	bne	11968 <abort@plt+0x10c8>
   11988:	mov	r0, r4
   1198c:	ldrd	r4, [sp]
   11990:	ldr	r6, [sp, #8]
   11994:	add	sp, sp, #12
   11998:	pop	{pc}		; (ldr pc, [sp], #4)
   1199c:	ldr	r2, [r1, #8]
   119a0:	str	r4, [sp, #-8]!
   119a4:	mov	r4, r0
   119a8:	str	lr, [sp, #4]
   119ac:	ldrb	r3, [r2]
   119b0:	cmp	r3, #0
   119b4:	beq	119e8 <abort@plt+0x1148>
   119b8:	mov	r0, #0
   119bc:	add	r0, r0, r3
   119c0:	ldrb	r3, [r2, #1]!
   119c4:	cmp	r3, #0
   119c8:	bne	119bc <abort@plt+0x111c>
   119cc:	movw	r3, #20065	; 0x4e61
   119d0:	movt	r3, #33354	; 0x824a
   119d4:	movw	r2, #503	; 0x1f7
   119d8:	umull	ip, r3, r3, r0
   119dc:	lsr	r3, r3, #8
   119e0:	mls	r0, r2, r3, r0
   119e4:	add	r0, r4, r0, lsl #4
   119e8:	add	r4, r4, #4096	; 0x1000
   119ec:	bl	122e4 <error@@Base+0x498>
   119f0:	ldr	r0, [r4, #3952]	; 0xf70
   119f4:	cmp	r0, #0
   119f8:	beq	11a08 <abort@plt+0x1168>
   119fc:	bl	107bc <free@plt>
   11a00:	mov	r3, #0
   11a04:	str	r3, [r4, #3952]	; 0xf70
   11a08:	ldr	r3, [r4, #3956]	; 0xf74
   11a0c:	add	r3, r3, #1
   11a10:	str	r3, [r4, #3956]	; 0xf74
   11a14:	ldr	r4, [sp]
   11a18:	add	sp, sp, #4
   11a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   11a20:	ldr	r2, [r1, #8]
   11a24:	str	r4, [sp, #-8]!
   11a28:	mov	r4, r0
   11a2c:	str	lr, [sp, #4]
   11a30:	ldrb	r3, [r2]
   11a34:	cmp	r3, #0
   11a38:	beq	11a6c <abort@plt+0x11cc>
   11a3c:	mov	r0, #0
   11a40:	add	r0, r0, r3
   11a44:	ldrb	r3, [r2, #1]!
   11a48:	cmp	r3, #0
   11a4c:	bne	11a40 <abort@plt+0x11a0>
   11a50:	movw	r3, #20065	; 0x4e61
   11a54:	movt	r3, #33354	; 0x824a
   11a58:	movw	r2, #503	; 0x1f7
   11a5c:	umull	ip, r3, r3, r0
   11a60:	lsr	r3, r3, #8
   11a64:	mls	r0, r2, r3, r0
   11a68:	add	r0, r4, r0, lsl #4
   11a6c:	add	r4, r4, #4096	; 0x1000
   11a70:	bl	12444 <error@@Base+0x5f8>
   11a74:	ldr	r0, [r4, #3952]	; 0xf70
   11a78:	cmp	r0, #0
   11a7c:	beq	11a8c <abort@plt+0x11ec>
   11a80:	bl	107bc <free@plt>
   11a84:	mov	r3, #0
   11a88:	str	r3, [r4, #3952]	; 0xf70
   11a8c:	ldr	r3, [r4, #3956]	; 0xf74
   11a90:	sub	r3, r3, #1
   11a94:	str	r3, [r4, #3956]	; 0xf74
   11a98:	ldr	r4, [sp]
   11a9c:	add	sp, sp, #4
   11aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa4:	strd	r4, [sp, #-16]!
   11aa8:	str	r6, [sp, #8]
   11aac:	add	r6, r0, #4096	; 0x1000
   11ab0:	ldr	r4, [r6, #3952]	; 0xf70
   11ab4:	str	lr, [sp, #12]
   11ab8:	cmp	r4, #0
   11abc:	beq	11ad0 <abort@plt+0x1230>
   11ac0:	ldrd	r4, [sp]
   11ac4:	ldr	r6, [sp, #8]
   11ac8:	add	sp, sp, #12
   11acc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ad0:	ldr	r3, [r6, #3956]	; 0xf74
   11ad4:	cmp	r3, #0
   11ad8:	beq	11ac0 <abort@plt+0x1220>
   11adc:	mov	r5, r0
   11ae0:	mov	r1, #4
   11ae4:	mov	r0, r3
   11ae8:	bl	11e8c <error@@Base+0x40>
   11aec:	mov	r2, r4
   11af0:	mov	ip, r4
   11af4:	str	r0, [r6, #3952]	; 0xf70
   11af8:	movw	lr, #503	; 0x1f7
   11afc:	ldr	r3, [r5, ip, lsl #4]
   11b00:	cmp	r3, #0
   11b04:	beq	11b20 <abort@plt+0x1280>
   11b08:	add	r1, r0, r2, lsl #2
   11b0c:	str	r3, [r1], #4
   11b10:	add	r2, r2, #1
   11b14:	ldr	r3, [r3, #4]
   11b18:	cmp	r3, #0
   11b1c:	bne	11b0c <abort@plt+0x126c>
   11b20:	add	ip, ip, #1
   11b24:	cmp	ip, lr
   11b28:	bne	11afc <abort@plt+0x125c>
   11b2c:	ldrd	r4, [sp]
   11b30:	ldr	r6, [sp, #8]
   11b34:	add	sp, sp, #12
   11b38:	pop	{pc}		; (ldr pc, [sp], #4)
   11b3c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b40:	add	r5, r0, #8000	; 0x1f40
   11b44:	mov	r4, r0
   11b48:	add	r5, r5, #48	; 0x30
   11b4c:	strd	r6, [sp, #8]
   11b50:	mov	r7, r0
   11b54:	mov	r6, r1
   11b58:	str	r8, [sp, #16]
   11b5c:	str	lr, [sp, #20]
   11b60:	mov	r0, r4
   11b64:	mov	r1, r6
   11b68:	add	r4, r4, #16
   11b6c:	bl	12510 <error@@Base+0x6c4>
   11b70:	cmp	r5, r4
   11b74:	bne	11b60 <abort@plt+0x12c0>
   11b78:	add	r7, r7, #4096	; 0x1000
   11b7c:	ldr	r0, [r7, #3952]	; 0xf70
   11b80:	cmp	r0, #0
   11b84:	beq	11b94 <abort@plt+0x12f4>
   11b88:	bl	107bc <free@plt>
   11b8c:	mov	r3, #0
   11b90:	str	r3, [r7, #3952]	; 0xf70
   11b94:	mov	r3, #0
   11b98:	ldrd	r4, [sp]
   11b9c:	ldr	r8, [sp, #16]
   11ba0:	str	r3, [r7, #3956]	; 0xf74
   11ba4:	ldrd	r6, [sp, #8]
   11ba8:	add	sp, sp, #20
   11bac:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb0:	movw	r3, #29720	; 0x7418
   11bb4:	movt	r3, #2
   11bb8:	str	r7, [sp, #-8]!
   11bbc:	ldr	r3, [r3]
   11bc0:	mov	r8, r0
   11bc4:	str	lr, [sp, #4]
   11bc8:	sub	sp, sp, #112	; 0x70
   11bcc:	cmp	r3, #0
   11bd0:	beq	11bd8 <abort@plt+0x1338>
   11bd4:	blx	r3
   11bd8:	movw	r5, #12544	; 0x3100
   11bdc:	movt	r5, #2
   11be0:	ldrsh	r3, [r5]
   11be4:	cmp	r3, #0
   11be8:	ble	11c4c <abort@plt+0x13ac>
   11bec:	movw	r7, #29716	; 0x7414
   11bf0:	movt	r7, #2
   11bf4:	movw	r6, #10836	; 0x2a54
   11bf8:	movt	r6, #1
   11bfc:	mov	r4, #1
   11c00:	ldr	r9, [r7]
   11c04:	bl	10828 <getpid@plt>
   11c08:	mov	r3, r0
   11c0c:	mov	r1, r6
   11c10:	str	r4, [sp]
   11c14:	add	r0, sp, #12
   11c18:	add	r4, r4, #1
   11c1c:	sxth	r4, r4
   11c20:	mov	r2, r9
   11c24:	bl	10888 <sprintf@plt>
   11c28:	add	r0, sp, #12
   11c2c:	bl	107d4 <strdup@plt>
   11c30:	mov	r9, r0
   11c34:	bl	107e0 <unlink@plt>
   11c38:	mov	r0, r9
   11c3c:	bl	107bc <free@plt>
   11c40:	ldrsh	r3, [r5]
   11c44:	cmp	r3, r4
   11c48:	bge	11c00 <abort@plt+0x1360>
   11c4c:	mov	r0, r8
   11c50:	bl	10834 <exit@plt>
   11c54:	ldrb	r3, [r0]
   11c58:	ldrb	r2, [r1]
   11c5c:	cmp	r3, #0
   11c60:	beq	11c88 <abort@plt+0x13e8>
   11c64:	cmp	r2, r3
   11c68:	beq	11c78 <abort@plt+0x13d8>
   11c6c:	b	11c94 <abort@plt+0x13f4>
   11c70:	cmp	r3, r2
   11c74:	bne	11c94 <abort@plt+0x13f4>
   11c78:	ldrb	r3, [r0, #1]!
   11c7c:	ldrb	r2, [r1, #1]!
   11c80:	cmp	r3, #0
   11c84:	bne	11c70 <abort@plt+0x13d0>
   11c88:	cmp	r2, #0
   11c8c:	beq	11ca4 <abort@plt+0x1404>
   11c90:	mov	r3, #0
   11c94:	cmp	r3, r2
   11c98:	mvncc	r0, #0
   11c9c:	movcs	r0, #1
   11ca0:	bx	lr
   11ca4:	mov	r0, r2
   11ca8:	bx	lr
   11cac:	movw	r3, #12432	; 0x3090
   11cb0:	movt	r3, #2
   11cb4:	ldr	r3, [r3]
   11cb8:	cmp	r3, r0
   11cbc:	beq	11cd8 <abort@plt+0x1438>
   11cc0:	movw	r3, #12436	; 0x3094
   11cc4:	movt	r3, #2
   11cc8:	ldr	r3, [r3]
   11ccc:	cmp	r3, r0
   11cd0:	beq	11cd8 <abort@plt+0x1438>
   11cd4:	b	10870 <fclose@plt>
   11cd8:	bx	lr
   11cdc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ce0:	sub	sp, sp, #92	; 0x5c
   11ce4:	mov	r1, r0
   11ce8:	mov	r2, sp
   11cec:	mov	r0, #3
   11cf0:	bl	107ec <__xstat@plt>
   11cf4:	clz	r0, r0
   11cf8:	lsr	r0, r0, #5
   11cfc:	add	sp, sp, #92	; 0x5c
   11d00:	pop	{pc}		; (ldr pc, [sp], #4)
   11d04:	movw	r3, #12544	; 0x3100
   11d08:	movt	r3, #2
   11d0c:	strd	r4, [sp, #-12]!
   11d10:	ldrh	r4, [r3]
   11d14:	movw	r2, #29716	; 0x7414
   11d18:	movt	r2, #2
   11d1c:	ldr	r5, [r2]
   11d20:	str	lr, [sp, #8]
   11d24:	sub	sp, sp, #116	; 0x74
   11d28:	add	r4, r4, #1
   11d2c:	sxth	r4, r4
   11d30:	strh	r4, [r3]
   11d34:	bl	10828 <getpid@plt>
   11d38:	mov	r3, r0
   11d3c:	mov	r2, r5
   11d40:	str	r4, [sp]
   11d44:	add	r0, sp, #12
   11d48:	movw	r1, #10836	; 0x2a54
   11d4c:	movt	r1, #1
   11d50:	bl	10888 <sprintf@plt>
   11d54:	add	r0, sp, #12
   11d58:	bl	107d4 <strdup@plt>
   11d5c:	mov	r4, r0
   11d60:	bl	107e0 <unlink@plt>
   11d64:	mov	r0, r4
   11d68:	add	sp, sp, #116	; 0x74
   11d6c:	ldrd	r4, [sp]
   11d70:	add	sp, sp, #8
   11d74:	pop	{pc}		; (ldr pc, [sp], #4)
   11d78:	str	r4, [sp, #-8]!
   11d7c:	mov	r4, r0
   11d80:	str	lr, [sp, #4]
   11d84:	bl	10840 <strlen@plt>
   11d88:	uxth	r0, r0
   11d8c:	sub	r3, r0, #1
   11d90:	sxth	r3, r3
   11d94:	cmp	r3, #0
   11d98:	blt	11dd8 <abort@plt+0x1538>
   11d9c:	ldrb	r2, [r4, r3]
   11da0:	cmp	r2, #47	; 0x2f
   11da4:	beq	11dd8 <abort@plt+0x1538>
   11da8:	sub	r0, r0, #2
   11dac:	sxth	r3, r0
   11db0:	add	r2, r3, #1
   11db4:	add	r2, r4, r2
   11db8:	b	11dcc <abort@plt+0x152c>
   11dbc:	ldrb	r0, [r2, #-1]!
   11dc0:	cmp	r0, #47	; 0x2f
   11dc4:	beq	11dd8 <abort@plt+0x1538>
   11dc8:	mov	r3, r1
   11dcc:	tst	r3, #32768	; 0x8000
   11dd0:	sub	r1, r3, #1
   11dd4:	beq	11dbc <abort@plt+0x151c>
   11dd8:	add	r0, r3, #1
   11ddc:	add	r0, r4, r0
   11de0:	ldr	r4, [sp]
   11de4:	add	sp, sp, #4
   11de8:	pop	{pc}		; (ldr pc, [sp], #4)
   11dec:	mov	r0, #0
   11df0:	str	r4, [sp, #-8]!
   11df4:	str	lr, [sp, #4]
   11df8:	bl	11bb0 <abort@plt+0x1310>
   11dfc:	movw	r3, #29712	; 0x7410
   11e00:	movt	r3, #2
   11e04:	str	r4, [sp, #-8]!
   11e08:	ldr	r2, [r3]
   11e0c:	str	lr, [sp, #4]
   11e10:	cmp	r2, #0
   11e14:	beq	11e20 <abort@plt+0x1580>
   11e18:	blx	r2
   11e1c:	bl	11dec <abort@plt+0x154c>
   11e20:	movw	r3, #29716	; 0x7414
   11e24:	movt	r3, #2
   11e28:	movw	ip, #12424	; 0x3088
   11e2c:	movt	ip, #2
   11e30:	ldr	r2, [r3]
   11e34:	movw	r1, #10852	; 0x2a64
   11e38:	movt	r1, #1
   11e3c:	mov	r3, r0
   11e40:	ldr	r0, [ip]
   11e44:	bl	1084c <fprintf@plt>
   11e48:	b	11e1c <abort@plt+0x157c>

00011e4c <error@@Base>:
   11e4c:	movw	r3, #29716	; 0x7414
   11e50:	movt	r3, #2
   11e54:	str	r4, [sp, #-8]!
   11e58:	movw	ip, #12424	; 0x3088
   11e5c:	movt	ip, #2
   11e60:	ldr	r2, [r3]
   11e64:	movw	r1, #10868	; 0x2a74
   11e68:	movt	r1, #1
   11e6c:	str	lr, [sp, #4]
   11e70:	mov	r3, r0
   11e74:	ldr	r0, [ip]
   11e78:	bl	1084c <fprintf@plt>
   11e7c:	movw	r3, #12412	; 0x307c
   11e80:	movt	r3, #2
   11e84:	ldr	r0, [r3]
   11e88:	bl	11bb0 <abort@plt+0x1310>
   11e8c:	str	r4, [sp, #-8]!
   11e90:	str	lr, [sp, #4]
   11e94:	bl	10780 <calloc@plt>
   11e98:	cmp	r0, #0
   11e9c:	beq	11eac <error@@Base+0x60>
   11ea0:	ldr	r4, [sp]
   11ea4:	add	sp, sp, #4
   11ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   11eac:	movw	r0, #10876	; 0x2a7c
   11eb0:	movt	r0, #1
   11eb4:	bl	11e4c <error@@Base>
   11eb8:	movw	r3, #12544	; 0x3100
   11ebc:	movt	r3, #2
   11ec0:	ldrb	r2, [r3, #2]
   11ec4:	cmp	r2, #0
   11ec8:	bxne	lr
   11ecc:	mov	r2, #1
   11ed0:	movw	r0, #10904	; 0x2a98
   11ed4:	movt	r0, #1
   11ed8:	str	r4, [sp, #-8]!
   11edc:	str	lr, [sp, #4]
   11ee0:	strb	r2, [r3, #2]
   11ee4:	bl	11e4c <error@@Base>
   11ee8:	push	{lr}		; (str lr, [sp, #-4]!)
   11eec:	sub	sp, sp, #12
   11ef0:	movw	r3, #29716	; 0x7414
   11ef4:	movt	r3, #2
   11ef8:	movw	ip, #12424	; 0x3088
   11efc:	movt	ip, #2
   11f00:	str	r1, [sp]
   11f04:	movw	r1, #10920	; 0x2aa8
   11f08:	movt	r1, #1
   11f0c:	ldr	r2, [r3]
   11f10:	mov	r3, r0
   11f14:	ldr	r0, [ip]
   11f18:	bl	1084c <fprintf@plt>
   11f1c:	movw	r3, #12412	; 0x307c
   11f20:	movt	r3, #2
   11f24:	ldr	r0, [r3]
   11f28:	bl	11bb0 <abort@plt+0x1310>
   11f2c:	subs	r2, r0, #0
   11f30:	strd	r4, [sp, #-16]!
   11f34:	mov	r4, r1
   11f38:	str	r6, [sp, #8]
   11f3c:	str	lr, [sp, #12]
   11f40:	beq	11f80 <error@@Base+0x134>
   11f44:	mov	r5, r2
   11f48:	bl	107b0 <fopen@plt>
   11f4c:	cmp	r0, #0
   11f50:	beq	11f64 <error@@Base+0x118>
   11f54:	ldrd	r4, [sp]
   11f58:	ldr	r6, [sp, #8]
   11f5c:	add	sp, sp, #12
   11f60:	pop	{pc}		; (ldr pc, [sp], #4)
   11f64:	ldrb	r3, [r4]
   11f68:	mov	r1, r5
   11f6c:	cmp	r3, #119	; 0x77
   11f70:	beq	11fac <error@@Base+0x160>
   11f74:	movw	r0, #10960	; 0x2ad0
   11f78:	movt	r0, #1
   11f7c:	bl	11ee8 <error@@Base+0x9c>
   11f80:	ldrb	r3, [r1]
   11f84:	ldrd	r4, [sp]
   11f88:	ldr	r6, [sp, #8]
   11f8c:	add	sp, sp, #12
   11f90:	cmp	r3, #114	; 0x72
   11f94:	movweq	r3, #12432	; 0x3090
   11f98:	movwne	r3, #12436	; 0x3094
   11f9c:	movteq	r3, #2
   11fa0:	movtne	r3, #2
   11fa4:	ldr	r0, [r3]
   11fa8:	pop	{pc}		; (ldr pc, [sp], #4)
   11fac:	movw	r0, #10936	; 0x2ab8
   11fb0:	movt	r0, #1
   11fb4:	bl	11ee8 <error@@Base+0x9c>
   11fb8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11fbc:	ldr	r4, [r1]
   11fc0:	strd	r6, [sp, #8]
   11fc4:	strd	r8, [sp, #16]
   11fc8:	mov	r8, r3
   11fcc:	strd	sl, [sp, #24]
   11fd0:	mov	sl, r1
   11fd4:	str	lr, [sp, #32]
   11fd8:	sub	sp, sp, #20
   11fdc:	str	r0, [sp]
   11fe0:	mov	r0, r4
   11fe4:	str	r2, [sp, #12]
   11fe8:	bl	10840 <strlen@plt>
   11fec:	uxth	r0, r0
   11ff0:	sub	r3, r0, #1
   11ff4:	sxth	r3, r3
   11ff8:	cmp	r3, #0
   11ffc:	blt	1203c <error@@Base+0x1f0>
   12000:	ldrb	r2, [r4, r3]
   12004:	cmp	r2, #47	; 0x2f
   12008:	beq	1203c <error@@Base+0x1f0>
   1200c:	sub	r0, r0, #2
   12010:	sxth	r3, r0
   12014:	add	r2, r3, #1
   12018:	add	r2, r4, r2
   1201c:	b	12034 <error@@Base+0x1e8>
   12020:	ldrb	r1, [r2, #-1]!
   12024:	sub	r0, r3, #1
   12028:	cmp	r1, #47	; 0x2f
   1202c:	beq	1203c <error@@Base+0x1f0>
   12030:	mov	r3, r0
   12034:	tst	r3, #32768	; 0x8000
   12038:	beq	12020 <error@@Base+0x1d4>
   1203c:	add	r3, r3, #1
   12040:	movw	r2, #29716	; 0x7414
   12044:	movt	r2, #2
   12048:	add	r3, r4, r3
   1204c:	movw	r1, #7864	; 0x1eb8
   12050:	movt	r1, #1
   12054:	mov	r0, #2
   12058:	str	r3, [r2]
   1205c:	bl	10810 <__sysv_signal@plt>
   12060:	movw	r1, #7864	; 0x1eb8
   12064:	movt	r1, #1
   12068:	mov	r0, #15
   1206c:	bl	10810 <__sysv_signal@plt>
   12070:	ldr	r3, [sp]
   12074:	ldr	r9, [r3]
   12078:	cmp	r9, #1
   1207c:	beq	12254 <error@@Base+0x408>
   12080:	movle	r6, #0
   12084:	ble	121dc <error@@Base+0x390>
   12088:	movw	r3, #10980	; 0x2ae4
   1208c:	movt	r3, #1
   12090:	mov	r7, #1
   12094:	mov	r6, #0
   12098:	mov	r4, r7
   1209c:	str	r3, [sp, #8]
   120a0:	mov	r3, sl
   120a4:	mov	sl, r9
   120a8:	b	120cc <error@@Base+0x280>
   120ac:	add	r4, r4, #1
   120b0:	add	r2, r6, #1
   120b4:	str	r5, [r3, r6, lsl #2]
   120b8:	sxth	r4, r4
   120bc:	sxth	r6, r2
   120c0:	cmp	r4, sl
   120c4:	mov	r7, r4
   120c8:	bge	121dc <error@@Base+0x390>
   120cc:	ldr	r5, [r3, r4, lsl #2]
   120d0:	lsl	r9, r4, #2
   120d4:	ldrb	r2, [r5]
   120d8:	cmp	r2, #45	; 0x2d
   120dc:	bne	120ac <error@@Base+0x260>
   120e0:	ldrb	fp, [r5, #1]
   120e4:	cmp	fp, #0
   120e8:	beq	120ac <error@@Base+0x260>
   120ec:	mov	r0, r5
   120f0:	str	r3, [sp, #4]
   120f4:	bl	10840 <strlen@plt>
   120f8:	mov	r2, r0
   120fc:	mov	r1, r5
   12100:	ldr	r0, [sp, #8]
   12104:	bl	10894 <strncmp@plt>
   12108:	cmp	r0, #0
   1210c:	beq	12268 <error@@Base+0x41c>
   12110:	ldr	r3, [sp, #4]
   12114:	add	r7, r7, #1
   12118:	cmp	r7, sl
   1211c:	movge	r0, #0
   12120:	addlt	r9, r3, r9
   12124:	ldrlt	r0, [r9, #4]
   12128:	cmp	r8, #0
   1212c:	beq	12170 <error@@Base+0x324>
   12130:	ldrb	r2, [r8]
   12134:	cmp	r2, #0
   12138:	beq	12170 <error@@Base+0x324>
   1213c:	cmp	fp, r2
   12140:	beq	12180 <error@@Base+0x334>
   12144:	mov	r2, #0
   12148:	b	12154 <error@@Base+0x308>
   1214c:	cmp	fp, ip
   12150:	beq	12184 <error@@Base+0x338>
   12154:	add	r2, r2, #1
   12158:	sxth	r2, r2
   1215c:	add	r1, r2, r2, lsl #1
   12160:	ldrb	ip, [r8, r1, lsl #2]
   12164:	add	r1, r8, r1, lsl #2
   12168:	cmp	ip, #0
   1216c:	bne	1214c <error@@Base+0x300>
   12170:	movw	r0, #10988	; 0x2aec
   12174:	movt	r0, #1
   12178:	mov	r1, r5
   1217c:	bl	11ee8 <error@@Base+0x9c>
   12180:	mov	r1, r8
   12184:	ldr	r2, [r1, #4]
   12188:	cmp	r2, #0
   1218c:	beq	12214 <error@@Base+0x3c8>
   12190:	ldrb	ip, [r5, #2]
   12194:	cmp	ip, #0
   12198:	bne	12200 <error@@Base+0x3b4>
   1219c:	cmp	r0, #0
   121a0:	beq	12270 <error@@Base+0x424>
   121a4:	ldr	r1, [r2]
   121a8:	cmp	r1, #0
   121ac:	bne	12280 <error@@Base+0x434>
   121b0:	str	r0, [r2]
   121b4:	uxth	r2, r4
   121b8:	ldrb	r1, [r5, #2]
   121bc:	add	r4, r2, #1
   121c0:	sxth	r4, r4
   121c4:	cmp	r1, #0
   121c8:	addeq	r4, r2, #2
   121cc:	sxtheq	r4, r4
   121d0:	cmp	r4, sl
   121d4:	mov	r7, r4
   121d8:	blt	120cc <error@@Base+0x280>
   121dc:	ldr	r3, [sp]
   121e0:	str	r6, [r3]
   121e4:	add	sp, sp, #20
   121e8:	ldrd	r4, [sp]
   121ec:	ldrd	r6, [sp, #8]
   121f0:	ldrd	r8, [sp, #16]
   121f4:	ldrd	sl, [sp, #24]
   121f8:	add	sp, sp, #32
   121fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12200:	ldr	r1, [r2]
   12204:	cmp	r1, #0
   12208:	bne	12280 <error@@Base+0x434>
   1220c:	add	r0, r5, #2
   12210:	b	121b0 <error@@Base+0x364>
   12214:	ldr	r2, [r1, #8]
   12218:	cmp	r2, #0
   1221c:	beq	12170 <error@@Base+0x324>
   12220:	ldrb	r1, [r5, #2]
   12224:	cmp	r1, #0
   12228:	bne	12170 <error@@Base+0x324>
   1222c:	ldrb	r1, [r2]
   12230:	cmp	r1, #0
   12234:	bne	12280 <error@@Base+0x434>
   12238:	mov	r1, #1
   1223c:	add	r4, r4, #1
   12240:	sxth	r4, r4
   12244:	strb	r1, [r2]
   12248:	ldr	r2, [sp]
   1224c:	ldr	sl, [r2]
   12250:	b	120c0 <error@@Base+0x274>
   12254:	movw	r3, #12412	; 0x307c
   12258:	movt	r3, #2
   1225c:	ldrb	r6, [r3, #4]
   12260:	cmp	r6, #0
   12264:	beq	121dc <error@@Base+0x390>
   12268:	ldr	r0, [sp, #12]
   1226c:	bl	11dfc <abort@plt+0x155c>
   12270:	ldr	r2, [r1, #8]
   12274:	cmp	r2, #0
   12278:	bne	1222c <error@@Base+0x3e0>
   1227c:	b	12170 <error@@Base+0x324>
   12280:	movw	r0, #11004	; 0x2afc
   12284:	movt	r0, #1
   12288:	mov	r1, r5
   1228c:	bl	11ee8 <error@@Base+0x9c>
   12290:	push	{lr}		; (str lr, [sp, #-4]!)
   12294:	sub	sp, sp, #12
   12298:	movw	r3, #29716	; 0x7414
   1229c:	movt	r3, #2
   122a0:	movw	ip, #12424	; 0x3088
   122a4:	movt	ip, #2
   122a8:	str	r1, [sp]
   122ac:	movw	r1, #10920	; 0x2aa8
   122b0:	movt	r1, #1
   122b4:	ldr	r2, [r3]
   122b8:	mov	r3, r0
   122bc:	ldr	r0, [ip]
   122c0:	bl	1084c <fprintf@plt>
   122c4:	add	sp, sp, #12
   122c8:	pop	{pc}		; (ldr pc, [sp], #4)
   122cc:	mov	r3, #0
   122d0:	str	r3, [r0]
   122d4:	str	r3, [r0, #4]
   122d8:	str	r3, [r0, #8]
   122dc:	str	r3, [r0, #12]
   122e0:	bx	lr
   122e4:	ldr	r3, [r0]
   122e8:	mov	r2, #0
   122ec:	str	r4, [sp, #-8]!
   122f0:	mov	r4, r0
   122f4:	str	lr, [sp, #4]
   122f8:	cmp	r3, r2
   122fc:	strd	r2, [r1]
   12300:	str	r1, [r0]
   12304:	streq	r1, [r0, #4]
   12308:	ldr	r0, [r0, #8]
   1230c:	strne	r1, [r3]
   12310:	cmp	r0, #0
   12314:	beq	12324 <error@@Base+0x4d8>
   12318:	bl	107bc <free@plt>
   1231c:	mov	r3, #0
   12320:	str	r3, [r4, #8]
   12324:	ldr	r3, [r4, #12]
   12328:	add	r3, r3, #1
   1232c:	str	r3, [r4, #12]
   12330:	ldr	r4, [sp]
   12334:	add	sp, sp, #4
   12338:	pop	{pc}		; (ldr pc, [sp], #4)
   1233c:	ldr	r3, [r0, #4]
   12340:	mov	r2, #0
   12344:	str	r4, [sp, #-8]!
   12348:	mov	r4, r0
   1234c:	str	lr, [sp, #4]
   12350:	cmp	r3, r2
   12354:	str	r3, [r1]
   12358:	str	r2, [r1, #4]
   1235c:	streq	r1, [r0]
   12360:	ldr	r0, [r0, #8]
   12364:	strne	r1, [r3, #4]
   12368:	str	r1, [r4, #4]
   1236c:	cmp	r0, #0
   12370:	beq	12380 <error@@Base+0x534>
   12374:	bl	107bc <free@plt>
   12378:	mov	r3, #0
   1237c:	str	r3, [r4, #8]
   12380:	ldr	r3, [r4, #12]
   12384:	add	r3, r3, #1
   12388:	str	r3, [r4, #12]
   1238c:	ldr	r4, [sp]
   12390:	add	sp, sp, #4
   12394:	pop	{pc}		; (ldr pc, [sp], #4)
   12398:	ldr	r3, [r2]
   1239c:	str	r4, [sp, #-8]!
   123a0:	mov	r4, r0
   123a4:	str	lr, [sp, #4]
   123a8:	cmp	r3, #0
   123ac:	str	r3, [r1]
   123b0:	str	r2, [r1, #4]
   123b4:	streq	r1, [r0]
   123b8:	ldr	r0, [r0, #8]
   123bc:	strne	r1, [r3, #4]
   123c0:	str	r1, [r2]
   123c4:	cmp	r0, #0
   123c8:	beq	123d8 <error@@Base+0x58c>
   123cc:	bl	107bc <free@plt>
   123d0:	mov	r3, #0
   123d4:	str	r3, [r4, #8]
   123d8:	ldr	r3, [r4, #12]
   123dc:	add	r3, r3, #1
   123e0:	str	r3, [r4, #12]
   123e4:	ldr	r4, [sp]
   123e8:	add	sp, sp, #4
   123ec:	pop	{pc}		; (ldr pc, [sp], #4)
   123f0:	ldr	r3, [r1, #4]
   123f4:	str	r4, [sp, #-8]!
   123f8:	mov	r4, r0
   123fc:	str	lr, [sp, #4]
   12400:	cmp	r3, #0
   12404:	stm	r2, {r1, r3}
   12408:	str	r2, [r1, #4]
   1240c:	streq	r2, [r0, #4]
   12410:	ldr	r0, [r0, #8]
   12414:	strne	r2, [r3]
   12418:	cmp	r0, #0
   1241c:	beq	1242c <error@@Base+0x5e0>
   12420:	bl	107bc <free@plt>
   12424:	mov	r3, #0
   12428:	str	r3, [r4, #8]
   1242c:	ldr	r3, [r4, #12]
   12430:	add	r3, r3, #1
   12434:	str	r3, [r4, #12]
   12438:	ldr	r4, [sp]
   1243c:	add	sp, sp, #4
   12440:	pop	{pc}		; (ldr pc, [sp], #4)
   12444:	ldrd	r2, [r1]
   12448:	strd	r4, [sp, #-16]!
   1244c:	mov	r4, r0
   12450:	mov	r5, #0
   12454:	str	r6, [sp, #8]
   12458:	str	lr, [sp, #12]
   1245c:	cmp	r2, #0
   12460:	strne	r3, [r2, #4]
   12464:	ldrne	r3, [r1, #4]
   12468:	streq	r3, [r0]
   1246c:	cmp	r3, #0
   12470:	streq	r2, [r0, #4]
   12474:	ldr	r0, [r0, #8]
   12478:	strne	r2, [r3]
   1247c:	str	r5, [r1]
   12480:	str	r5, [r1, #4]
   12484:	cmp	r0, r5
   12488:	beq	12494 <error@@Base+0x648>
   1248c:	bl	107bc <free@plt>
   12490:	str	r5, [r4, #8]
   12494:	ldr	r3, [r4, #12]
   12498:	ldr	r6, [sp, #8]
   1249c:	sub	r3, r3, #1
   124a0:	str	r3, [r4, #12]
   124a4:	ldrd	r4, [sp]
   124a8:	add	sp, sp, #12
   124ac:	pop	{pc}		; (ldr pc, [sp], #4)
   124b0:	ldr	r3, [r0, #8]
   124b4:	cmp	r3, #0
   124b8:	bxne	lr
   124bc:	ldr	r3, [r0, #12]
   124c0:	cmp	r3, #0
   124c4:	bxeq	lr
   124c8:	mov	r1, #4
   124cc:	str	r4, [sp, #-8]!
   124d0:	mov	r4, r0
   124d4:	mov	r0, r3
   124d8:	str	lr, [sp, #4]
   124dc:	bl	11e8c <error@@Base+0x40>
   124e0:	ldr	r3, [r4]
   124e4:	str	r0, [r4, #8]
   124e8:	cmp	r3, #0
   124ec:	beq	12504 <error@@Base+0x6b8>
   124f0:	sub	r0, r0, #4
   124f4:	str	r3, [r0, #4]!
   124f8:	ldr	r3, [r3, #4]
   124fc:	cmp	r3, #0
   12500:	bne	124f4 <error@@Base+0x6a8>
   12504:	ldr	r4, [sp]
   12508:	add	sp, sp, #4
   1250c:	pop	{pc}		; (ldr pc, [sp], #4)
   12510:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12514:	ldr	r4, [r0]
   12518:	strd	r6, [sp, #8]
   1251c:	str	r8, [sp, #16]
   12520:	str	lr, [sp, #20]
   12524:	cmp	r4, #0
   12528:	beq	125a8 <error@@Base+0x75c>
   1252c:	mov	r7, r1
   12530:	mov	r5, r0
   12534:	mov	r6, #0
   12538:	b	12568 <error@@Base+0x71c>
   1253c:	mov	r0, r3
   12540:	bl	107bc <free@plt>
   12544:	ldr	r3, [r5, #12]
   12548:	mov	r0, r4
   1254c:	str	r6, [r5, #8]
   12550:	sub	r3, r3, #1
   12554:	str	r3, [r5, #12]
   12558:	blx	r7
   1255c:	ldr	r4, [r5]
   12560:	cmp	r4, #0
   12564:	beq	125a8 <error@@Base+0x75c>
   12568:	ldrd	r2, [r4]
   1256c:	mov	r0, r4
   12570:	cmp	r2, #0
   12574:	strne	r3, [r2, #4]
   12578:	ldrne	r3, [r4, #4]
   1257c:	streq	r3, [r5]
   12580:	cmp	r3, #0
   12584:	strne	r2, [r3]
   12588:	ldr	r3, [r5, #8]
   1258c:	streq	r2, [r5, #4]
   12590:	str	r6, [r4]
   12594:	str	r6, [r4, #4]
   12598:	cmp	r3, #0
   1259c:	bne	1253c <error@@Base+0x6f0>
   125a0:	ldr	r3, [r5, #12]
   125a4:	b	12550 <error@@Base+0x704>
   125a8:	ldrd	r4, [sp]
   125ac:	ldrd	r6, [sp, #8]
   125b0:	ldr	r8, [sp, #16]
   125b4:	add	sp, sp, #20
   125b8:	pop	{pc}		; (ldr pc, [sp], #4)
   125bc:	lsl	r3, r1, #2
   125c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   125c4:	strd	r6, [sp, #8]
   125c8:	strd	r8, [sp, #16]
   125cc:	mov	r8, r0
   125d0:	strd	sl, [sp, #24]
   125d4:	movw	sl, #12548	; 0x3104
   125d8:	movt	sl, #2
   125dc:	str	lr, [sp, #32]
   125e0:	sub	sp, sp, #12
   125e4:	str	r1, [sp]
   125e8:	str	r3, [sp, #4]
   125ec:	ldr	r3, [sp]
   125f0:	ldr	r1, [sl]
   125f4:	cmp	r8, r3
   125f8:	movlt	r4, r3
   125fc:	movlt	r7, r8
   12600:	ldr	r5, [r1, r8, lsl #2]
   12604:	bge	12724 <error@@Base+0x8d8>
   12608:	mov	r0, r5
   1260c:	lsl	fp, r4, #2
   12610:	ldr	r1, [r1, r4, lsl #2]
   12614:	ldr	r2, [sl, #4]
   12618:	blx	r2
   1261c:	cmp	r0, #0
   12620:	bge	126b4 <error@@Base+0x868>
   12624:	sub	r4, r4, #1
   12628:	ldr	r1, [sl]
   1262c:	cmp	r7, r4
   12630:	lslge	fp, r4, #2
   12634:	blt	12608 <error@@Base+0x7bc>
   12638:	cmp	r4, r7
   1263c:	add	r6, r1, fp
   12640:	beq	126c4 <error@@Base+0x878>
   12644:	ldr	r0, [r1, fp]
   12648:	add	r9, r7, #1
   1264c:	lsl	r6, r7, #2
   12650:	cmp	r4, r9
   12654:	str	r0, [r1, r7, lsl #2]
   12658:	bgt	12670 <error@@Base+0x824>
   1265c:	b	12704 <error@@Base+0x8b8>
   12660:	add	r9, r9, #1
   12664:	ldr	r1, [sl]
   12668:	cmp	r4, r9
   1266c:	beq	126bc <error@@Base+0x870>
   12670:	mov	r0, r5
   12674:	ldr	r1, [r1, r9, lsl #2]
   12678:	lsl	r6, r9, #2
   1267c:	ldr	r7, [sl, #4]
   12680:	blx	r7
   12684:	cmp	r0, #0
   12688:	bgt	12660 <error@@Base+0x814>
   1268c:	ldr	r1, [sl]
   12690:	mov	r7, r9
   12694:	add	r6, r1, r6
   12698:	ldr	r0, [r6]
   1269c:	sub	r4, r4, #1
   126a0:	cmp	r4, r9
   126a4:	str	r0, [r1, fp]
   126a8:	bgt	12608 <error@@Base+0x7bc>
   126ac:	add	r6, r1, r4, lsl #2
   126b0:	b	126c8 <error@@Base+0x87c>
   126b4:	ldr	r1, [sl]
   126b8:	b	12638 <error@@Base+0x7ec>
   126bc:	add	r6, r1, fp
   126c0:	mov	r7, r4
   126c4:	mov	r4, r7
   126c8:	sub	r1, r4, #1
   126cc:	str	r5, [r6]
   126d0:	cmp	r8, r1
   126d4:	blt	12718 <error@@Base+0x8cc>
   126d8:	ldr	r3, [sp]
   126dc:	add	r8, r7, #1
   126e0:	cmp	r8, r3
   126e4:	blt	125ec <error@@Base+0x7a0>
   126e8:	add	sp, sp, #12
   126ec:	ldrd	r4, [sp]
   126f0:	ldrd	r6, [sp, #8]
   126f4:	ldrd	r8, [sp, #16]
   126f8:	ldrd	sl, [sp, #24]
   126fc:	add	sp, sp, #32
   12700:	pop	{pc}		; (ldr pc, [sp], #4)
   12704:	add	r6, r6, #4
   12708:	add	r6, r1, r6
   1270c:	beq	126c0 <error@@Base+0x874>
   12710:	mov	r7, r9
   12714:	b	12698 <error@@Base+0x84c>
   12718:	mov	r0, r8
   1271c:	bl	125bc <error@@Base+0x770>
   12720:	b	126d8 <error@@Base+0x88c>
   12724:	mov	r4, r3
   12728:	ldr	r3, [sp, #4]
   1272c:	mov	r7, r8
   12730:	add	r6, r1, r3
   12734:	b	126c8 <error@@Base+0x87c>
   12738:	cmp	r0, #1
   1273c:	mov	ip, r1
   12740:	ble	12760 <error@@Base+0x914>
   12744:	movw	r3, #12548	; 0x3104
   12748:	movt	r3, #2
   1274c:	sub	r1, r0, #1
   12750:	mov	r0, #0
   12754:	str	ip, [r3]
   12758:	str	r2, [r3, #4]
   1275c:	b	125bc <error@@Base+0x770>
   12760:	bx	lr
   12764:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12768:	mov	r7, r0
   1276c:	ldr	r6, [pc, #72]	; 127bc <error@@Base+0x970>
   12770:	ldr	r5, [pc, #72]	; 127c0 <error@@Base+0x974>
   12774:	add	r6, pc, r6
   12778:	add	r5, pc, r5
   1277c:	sub	r6, r6, r5
   12780:	mov	r8, r1
   12784:	mov	r9, r2
   12788:	bl	10760 <calloc@plt-0x20>
   1278c:	asrs	r6, r6, #2
   12790:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12794:	mov	r4, #0
   12798:	add	r4, r4, #1
   1279c:	ldr	r3, [r5], #4
   127a0:	mov	r2, r9
   127a4:	mov	r1, r8
   127a8:	mov	r0, r7
   127ac:	blx	r3
   127b0:	cmp	r6, r4
   127b4:	bne	12798 <error@@Base+0x94c>
   127b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127bc:	andeq	r0, r1, r8, lsl #15
   127c0:	andeq	r0, r1, r0, lsl #15
   127c4:	bx	lr

Disassembly of section .fini:

000127c8 <.fini>:
   127c8:	push	{r3, lr}
   127cc:	pop	{r3, pc}
