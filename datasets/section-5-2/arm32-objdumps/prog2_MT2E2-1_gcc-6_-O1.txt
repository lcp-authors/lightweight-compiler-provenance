
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	10fe4 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <raise@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <__isoc99_fscanf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <fopen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <memcpy@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <realloc@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <strcpy@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <puts@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <strlen@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <_start@@Base>:
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <_start@@Base+0x30>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <_start@@Base+0x34>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <_start@@Base+0x38>
   10fd0:	bl	10f60 <__libc_start_main@plt>
   10fd4:	bl	10f9c <abort@plt>
   10fd8:	muleq	r1, ip, r6
   10fdc:	andeq	r1, r1, r0, asr #4
   10fe0:	andeq	r2, r1, ip, lsr r6
   10fe4:	ldr	r3, [pc, #20]	; 11000 <_start@@Base+0x58>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <_start@@Base+0x5c>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	10f6c <__gmon_start__@plt>
   11000:	andeq	r2, r1, ip
   11004:	andeq	r0, r0, r4, asr r0
   11008:	ldr	r3, [pc, #28]	; 1102c <_start@@Base+0x84>
   1100c:	ldr	r0, [pc, #28]	; 11030 <_start@@Base+0x88>
   11010:	sub	r3, r3, r0
   11014:	cmp	r3, #6
   11018:	bxls	lr
   1101c:	ldr	r3, [pc, #16]	; 11034 <_start@@Base+0x8c>
   11020:	cmp	r3, #0
   11024:	bxeq	lr
   11028:	bx	r3
   1102c:	andeq	r3, r2, r3, rrx
   11030:	andeq	r3, r2, r0, rrx
   11034:	andeq	r0, r0, r0
   11038:	ldr	r1, [pc, #36]	; 11064 <_start@@Base+0xbc>
   1103c:	ldr	r0, [pc, #36]	; 11068 <_start@@Base+0xc0>
   11040:	sub	r1, r1, r0
   11044:	asr	r1, r1, #2
   11048:	add	r1, r1, r1, lsr #31
   1104c:	asrs	r1, r1, #1
   11050:	bxeq	lr
   11054:	ldr	r3, [pc, #16]	; 1106c <_start@@Base+0xc4>
   11058:	cmp	r3, #0
   1105c:	bxeq	lr
   11060:	bx	r3
   11064:	andeq	r3, r2, r0, rrx
   11068:	andeq	r3, r2, r0, rrx
   1106c:	andeq	r0, r0, r0
   11070:	push	{r4, lr}
   11074:	ldr	r4, [pc, #24]	; 11094 <_start@@Base+0xec>
   11078:	ldrb	r3, [r4]
   1107c:	cmp	r3, #0
   11080:	popne	{r4, pc}
   11084:	bl	11008 <_start@@Base+0x60>
   11088:	mov	r3, #1
   1108c:	strb	r3, [r4]
   11090:	pop	{r4, pc}
   11094:	andeq	r3, r2, r0, rrx
   11098:	ldr	r0, [pc, #40]	; 110c8 <_start@@Base+0x120>
   1109c:	ldr	r3, [r0]
   110a0:	cmp	r3, #0
   110a4:	bne	110ac <_start@@Base+0x104>
   110a8:	b	11038 <_start@@Base+0x90>
   110ac:	ldr	r3, [pc, #24]	; 110cc <_start@@Base+0x124>
   110b0:	cmp	r3, #0
   110b4:	beq	110a8 <_start@@Base+0x100>
   110b8:	push	{r4, lr}
   110bc:	blx	r3
   110c0:	pop	{r4, lr}
   110c4:	b	11038 <_start@@Base+0x90>
   110c8:	andeq	r2, r2, r4, lsl pc
   110cc:	andeq	r0, r0, r0

000110d0 <crescente@@Base>:
   110d0:	push	{r4, lr}
   110d4:	subs	r4, r0, #0
   110d8:	popeq	{r4, pc}
   110dc:	ldr	r0, [r4, #4]
   110e0:	bl	110d0 <crescente@@Base>
   110e4:	ldr	r1, [r4]
   110e8:	ldr	r0, [pc, #12]	; 110fc <crescente@@Base+0x2c>
   110ec:	bl	10ef4 <printf@plt>
   110f0:	ldr	r0, [r4, #8]
   110f4:	bl	110d0 <crescente@@Base>
   110f8:	pop	{r4, pc}
   110fc:	andeq	r2, r1, r8, asr r8

00011100 <decrescente@@Base>:
   11100:	push	{r4, lr}
   11104:	subs	r4, r0, #0
   11108:	popeq	{r4, pc}
   1110c:	ldr	r0, [r4, #8]
   11110:	bl	11100 <decrescente@@Base>
   11114:	ldr	r1, [r4]
   11118:	ldr	r0, [pc, #12]	; 1112c <decrescente@@Base+0x2c>
   1111c:	bl	10ef4 <printf@plt>
   11120:	ldr	r0, [r4, #4]
   11124:	bl	11100 <decrescente@@Base>
   11128:	pop	{r4, pc}
   1112c:	andeq	r2, r1, r8, asr r8

00011130 <avl_imprime_ord@@Base>:
   11130:	push	{r4, lr}
   11134:	cmp	r1, #0
   11138:	blt	11148 <avl_imprime_ord@@Base+0x18>
   1113c:	ldr	r0, [r0]
   11140:	bl	110d0 <crescente@@Base>
   11144:	pop	{r4, pc}
   11148:	ldr	r0, [r0]
   1114c:	bl	11100 <decrescente@@Base>
   11150:	pop	{r4, pc}

00011154 <valida_passwds@@Base>:
   11154:	push	{r4, r5, r6, r7, r8, r9, lr}
   11158:	sub	sp, sp, #60	; 0x3c
   1115c:	mov	r5, r0
   11160:	mov	r8, r1
   11164:	mov	r7, r2
   11168:	ldr	r1, [pc, #188]	; 1122c <valida_passwds@@Base+0xd8>
   1116c:	mov	r0, #10
   11170:	bl	11e54 <tabela_nova@@Base>
   11174:	mov	r6, r0
   11178:	ldr	r4, [pc, #176]	; 11230 <valida_passwds@@Base+0xdc>
   1117c:	b	11190 <valida_passwds@@Base+0x3c>
   11180:	mov	r2, sp
   11184:	add	r1, sp, #28
   11188:	mov	r0, r6
   1118c:	bl	11f28 <tabela_adiciona@@Base>
   11190:	mov	r3, sp
   11194:	add	r2, sp, #28
   11198:	mov	r1, r4
   1119c:	mov	r0, r5
   111a0:	bl	10f00 <__isoc99_fscanf@plt>
   111a4:	cmp	r0, #2
   111a8:	beq	11180 <valida_passwds@@Base+0x2c>
   111ac:	ldr	r4, [r8]
   111b0:	ldr	r5, [r7]
   111b4:	cmp	r4, #0
   111b8:	cmpne	r5, #0
   111bc:	beq	11214 <valida_passwds@@Base+0xc0>
   111c0:	ldr	r7, [pc, #108]	; 11234 <valida_passwds@@Base+0xe0>
   111c4:	ldr	r9, [pc, #108]	; 11238 <valida_passwds@@Base+0xe4>
   111c8:	ldr	r8, [pc, #108]	; 1123c <valida_passwds@@Base+0xe8>
   111cc:	ldr	r2, [r5]
   111d0:	ldr	r1, [r4]
   111d4:	mov	r0, r7
   111d8:	bl	10ef4 <printf@plt>
   111dc:	ldr	r1, [r4]
   111e0:	mov	r0, r6
   111e4:	bl	120c8 <tabela_valor@@Base>
   111e8:	ldr	r1, [r5]
   111ec:	bl	10ee8 <strcmp@plt>
   111f0:	cmp	r0, #0
   111f4:	moveq	r0, r9
   111f8:	movne	r0, r8
   111fc:	bl	10f48 <puts@plt>
   11200:	ldr	r4, [r4, #4]
   11204:	ldr	r5, [r5, #4]
   11208:	cmp	r4, #0
   1120c:	cmpne	r5, #0
   11210:	bne	111cc <valida_passwds@@Base+0x78>
   11214:	mov	r0, r6
   11218:	bl	12168 <tabela_esvazia@@Base>
   1121c:	mov	r0, r6
   11220:	bl	10f18 <free@plt>
   11224:	add	sp, sp, #60	; 0x3c
   11228:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1122c:	andeq	r2, r1, r8, lsr #6
   11230:	andeq	r2, r1, ip, asr r8
   11234:	andeq	r2, r1, r4, ror #16
   11238:	andeq	r2, r1, ip, ror r8
   1123c:	muleq	r1, r8, r8

00011240 <main@@Base>:
   11240:	push	{r4, r5, r6, lr}
   11244:	sub	sp, sp, #376	; 0x178
   11248:	add	ip, sp, #76	; 0x4c
   1124c:	ldr	lr, [pc, #352]	; 113b4 <main@@Base+0x174>
   11250:	ldm	lr!, {r0, r1, r2, r3}
   11254:	stmia	ip!, {r0, r1, r2, r3}
   11258:	ldm	lr!, {r0, r1, r2, r3}
   1125c:	stmia	ip!, {r0, r1, r2, r3}
   11260:	ldm	lr!, {r0, r1, r2, r3}
   11264:	stmia	ip!, {r0, r1, r2, r3}
   11268:	ldr	r3, [lr]
   1126c:	str	r3, [ip]
   11270:	ldr	r0, [pc, #320]	; 113b8 <main@@Base+0x178>
   11274:	bl	10f48 <puts@plt>
   11278:	bl	113d8 <avl_nova@@Base>
   1127c:	mov	r5, r0
   11280:	add	r4, sp, #76	; 0x4c
   11284:	add	r6, sp, #128	; 0x80
   11288:	mov	r1, r4
   1128c:	mov	r0, r5
   11290:	bl	11764 <avl_insere@@Base>
   11294:	add	r4, r4, #4
   11298:	cmp	r4, r6
   1129c:	bne	11288 <main@@Base+0x48>
   112a0:	ldr	r0, [pc, #276]	; 113bc <main@@Base+0x17c>
   112a4:	bl	10ef4 <printf@plt>
   112a8:	ldr	r0, [r5]
   112ac:	bl	11a48 <avl_imprime@@Base>
   112b0:	ldr	r0, [pc, #264]	; 113c0 <main@@Base+0x180>
   112b4:	bl	10ef4 <printf@plt>
   112b8:	ldr	r0, [r5]
   112bc:	bl	110d0 <crescente@@Base>
   112c0:	ldr	r0, [pc, #252]	; 113c4 <main@@Base+0x184>
   112c4:	bl	10f48 <puts@plt>
   112c8:	ldr	r4, [pc, #228]	; 113b4 <main@@Base+0x174>
   112cc:	mov	r2, #300	; 0x12c
   112d0:	add	r1, r4, #52	; 0x34
   112d4:	add	r0, sp, #76	; 0x4c
   112d8:	bl	10f24 <memcpy@plt>
   112dc:	mov	r2, #75	; 0x4b
   112e0:	add	r1, r4, #352	; 0x160
   112e4:	mov	r0, sp
   112e8:	bl	10f24 <memcpy@plt>
   112ec:	ldr	r0, [pc, #212]	; 113c8 <main@@Base+0x188>
   112f0:	bl	10f48 <puts@plt>
   112f4:	ldr	r1, [pc, #208]	; 113cc <main@@Base+0x18c>
   112f8:	ldr	r0, [pc, #208]	; 113d0 <main@@Base+0x190>
   112fc:	bl	10f0c <fopen@plt>
   11300:	subs	r6, r0, #0
   11304:	beq	113a4 <main@@Base+0x164>
   11308:	bl	11ac4 <lista_nova@@Base>
   1130c:	mov	r5, r0
   11310:	mov	r2, #0
   11314:	add	r1, sp, #76	; 0x4c
   11318:	bl	11b60 <lista_insere@@Base>
   1131c:	mov	r2, #0
   11320:	add	r1, sp, #176	; 0xb0
   11324:	mov	r0, r5
   11328:	bl	11b60 <lista_insere@@Base>
   1132c:	mov	r2, #0
   11330:	add	r1, sp, #276	; 0x114
   11334:	mov	r0, r5
   11338:	bl	11b60 <lista_insere@@Base>
   1133c:	bl	11ac4 <lista_nova@@Base>
   11340:	mov	r4, r0
   11344:	mov	r2, #0
   11348:	mov	r1, sp
   1134c:	bl	11b60 <lista_insere@@Base>
   11350:	mov	r2, #0
   11354:	add	r1, sp, #25
   11358:	mov	r0, r4
   1135c:	bl	11b60 <lista_insere@@Base>
   11360:	mov	r2, #0
   11364:	add	r1, sp, #50	; 0x32
   11368:	mov	r0, r4
   1136c:	bl	11b60 <lista_insere@@Base>
   11370:	mov	r2, r4
   11374:	mov	r1, r5
   11378:	mov	r0, r6
   1137c:	bl	11154 <valida_passwds@@Base>
   11380:	mov	r0, r5
   11384:	bl	11ae8 <lista_apaga@@Base>
   11388:	mov	r0, r4
   1138c:	bl	11ae8 <lista_apaga@@Base>
   11390:	mov	r0, r6
   11394:	bl	10f90 <fclose@plt>
   11398:	mov	r0, #0
   1139c:	add	sp, sp, #376	; 0x178
   113a0:	pop	{r4, r5, r6, pc}
   113a4:	ldr	r0, [pc, #40]	; 113d4 <main@@Base+0x194>
   113a8:	bl	10f48 <puts@plt>
   113ac:	mvn	r0, #0
   113b0:	b	1139c <main@@Base+0x15c>
   113b4:	andeq	r2, r1, ip, lsr #13
   113b8:			; <UNDEFINED> instruction: 0x000128b0
   113bc:	andeq	r2, r1, r4, asr #17
   113c0:	ldrdeq	r2, [r1], -r8
   113c4:	strdeq	r2, [r1], -r8
   113c8:	strdeq	r2, [r1], -ip
   113cc:	andeq	r2, r1, r0, lsl r9
   113d0:	andeq	r2, r1, r4, lsl r9
   113d4:	andeq	r2, r1, r4, lsr #18

000113d8 <avl_nova@@Base>:
   113d8:	push	{r4, lr}
   113dc:	mov	r0, #4
   113e0:	bl	10f54 <malloc@plt>
   113e4:	cmp	r0, #0
   113e8:	movne	r3, #0
   113ec:	strne	r3, [r0]
   113f0:	pop	{r4, pc}

000113f4 <avl_min@@Base>:
   113f4:	cmp	r0, #0
   113f8:	bne	11408 <avl_min@@Base+0x14>
   113fc:	mov	r0, #0
   11400:	bx	lr
   11404:	mov	r0, r3
   11408:	ldr	r3, [r0, #4]
   1140c:	cmp	r3, #0
   11410:	bne	11404 <avl_min@@Base+0x10>
   11414:	ldr	r0, [r0]
   11418:	bx	lr

0001141c <avl_max@@Base>:
   1141c:	cmp	r0, #0
   11420:	bne	11430 <avl_max@@Base+0x14>
   11424:	mov	r0, #0
   11428:	bx	lr
   1142c:	mov	r0, r3
   11430:	ldr	r3, [r0, #8]
   11434:	cmp	r3, #0
   11438:	bne	1142c <avl_max@@Base+0x10>
   1143c:	ldr	r0, [r0]
   11440:	bx	lr

00011444 <avl_altura@@Base>:
   11444:	cmp	r0, #0
   11448:	ldrne	r0, [r0, #12]
   1144c:	mvneq	r0, #0
   11450:	bx	lr

00011454 <max@@Base>:
   11454:	cmp	r1, r0
   11458:	movge	r0, r1
   1145c:	bx	lr

00011460 <avl_novo_no@@Base>:
   11460:	push	{r4, r5, r6, lr}
   11464:	mov	r5, r0
   11468:	mov	r0, #16
   1146c:	bl	10f54 <malloc@plt>
   11470:	mov	r4, r0
   11474:	mov	r0, r5
   11478:	bl	10f78 <strlen@plt>
   1147c:	add	r0, r0, #1
   11480:	bl	10f54 <malloc@plt>
   11484:	str	r0, [r4]
   11488:	mov	r1, r5
   1148c:	bl	10f3c <strcpy@plt>
   11490:	mov	r3, #0
   11494:	str	r3, [r4, #4]
   11498:	str	r3, [r4, #8]
   1149c:	str	r3, [r4, #12]
   114a0:	mov	r0, r4
   114a4:	pop	{r4, r5, r6, pc}

000114a8 <roda_direita@@Base>:
   114a8:	ldr	r3, [r0, #4]
   114ac:	ldr	r2, [r3, #8]
   114b0:	str	r0, [r3, #8]
   114b4:	str	r2, [r0, #4]
   114b8:	cmp	r2, #0
   114bc:	ldrne	r1, [r2, #12]
   114c0:	mvneq	r1, #0
   114c4:	ldr	r2, [r0, #8]
   114c8:	cmp	r2, #0
   114cc:	ldrne	r2, [r2, #12]
   114d0:	mvneq	r2, #0
   114d4:	cmp	r2, r1
   114d8:	movlt	r2, r1
   114dc:	add	r2, r2, #1
   114e0:	str	r2, [r0, #12]
   114e4:	ldr	r2, [r3, #4]
   114e8:	cmp	r2, #0
   114ec:	ldrne	r1, [r2, #12]
   114f0:	mvneq	r1, #0
   114f4:	ldr	r2, [r3, #8]
   114f8:	cmp	r2, #0
   114fc:	ldrne	r2, [r2, #12]
   11500:	mvneq	r2, #0
   11504:	cmp	r2, r1
   11508:	movlt	r2, r1
   1150c:	add	r2, r2, #1
   11510:	str	r2, [r3, #12]
   11514:	mov	r0, r3
   11518:	bx	lr

0001151c <roda_esquerda@@Base>:
   1151c:	ldr	r3, [r0, #8]
   11520:	ldr	r1, [r3, #4]
   11524:	str	r0, [r3, #4]
   11528:	str	r1, [r0, #8]
   1152c:	ldr	r2, [r0, #4]
   11530:	cmp	r2, #0
   11534:	ldrne	ip, [r2, #12]
   11538:	mvneq	ip, #0
   1153c:	cmp	r1, #0
   11540:	ldrne	r2, [r1, #12]
   11544:	mvneq	r2, #0
   11548:	cmp	r2, ip
   1154c:	movlt	r2, ip
   11550:	add	r2, r2, #1
   11554:	str	r2, [r0, #12]
   11558:	ldr	r2, [r3, #4]
   1155c:	cmp	r2, #0
   11560:	ldrne	r1, [r2, #12]
   11564:	mvneq	r1, #0
   11568:	ldr	r2, [r3, #8]
   1156c:	cmp	r2, #0
   11570:	ldrne	r2, [r2, #12]
   11574:	mvneq	r2, #0
   11578:	cmp	r2, r1
   1157c:	movlt	r2, r1
   11580:	add	r2, r2, #1
   11584:	str	r2, [r3, #12]
   11588:	mov	r0, r3
   1158c:	bx	lr

00011590 <calc_balanceamento@@Base>:
   11590:	cmp	r0, #0
   11594:	beq	115c0 <calc_balanceamento@@Base+0x30>
   11598:	ldr	r3, [r0, #8]
   1159c:	cmp	r3, #0
   115a0:	ldrne	r3, [r3, #12]
   115a4:	mvneq	r3, #0
   115a8:	ldr	r2, [r0, #4]
   115ac:	cmp	r2, #0
   115b0:	ldrne	r0, [r2, #12]
   115b4:	mvneq	r0, #0
   115b8:	sub	r0, r3, r0
   115bc:	bx	lr
   115c0:	mov	r0, #0
   115c4:	bx	lr

000115c8 <avl_pesquisa_impl@@Base>:
   115c8:	push	{r4, r5, r6, lr}
   115cc:	subs	r4, r0, #0
   115d0:	beq	11614 <avl_pesquisa_impl@@Base+0x4c>
   115d4:	mov	r5, r1
   115d8:	ldr	r1, [r4]
   115dc:	mov	r0, r5
   115e0:	bl	10ee8 <strcmp@plt>
   115e4:	cmp	r0, #0
   115e8:	blt	11604 <avl_pesquisa_impl@@Base+0x3c>
   115ec:	cmp	r0, #0
   115f0:	ble	1161c <avl_pesquisa_impl@@Base+0x54>
   115f4:	mov	r1, r5
   115f8:	ldr	r0, [r4, #8]
   115fc:	bl	115c8 <avl_pesquisa_impl@@Base>
   11600:	pop	{r4, r5, r6, pc}
   11604:	mov	r1, r5
   11608:	ldr	r0, [r4, #4]
   1160c:	bl	115c8 <avl_pesquisa_impl@@Base>
   11610:	pop	{r4, r5, r6, pc}
   11614:	mov	r0, r4
   11618:	pop	{r4, r5, r6, pc}
   1161c:	mov	r0, r4
   11620:	pop	{r4, r5, r6, pc}

00011624 <avl_pesquisa@@Base>:
   11624:	cmp	r1, #0
   11628:	cmpne	r0, #0
   1162c:	beq	11640 <avl_pesquisa@@Base+0x1c>
   11630:	push	{r4, lr}
   11634:	ldr	r0, [r0]
   11638:	bl	115c8 <avl_pesquisa_impl@@Base>
   1163c:	pop	{r4, pc}
   11640:	mov	r0, #0
   11644:	bx	lr

00011648 <avl_insere_impl@@Base>:
   11648:	push	{r4, r5, r6, lr}
   1164c:	mov	r5, r1
   11650:	subs	r4, r0, #0
   11654:	beq	116e0 <avl_insere_impl@@Base+0x98>
   11658:	ldr	r1, [r4]
   1165c:	mov	r0, r5
   11660:	bl	10ee8 <strcmp@plt>
   11664:	cmp	r0, #0
   11668:	blt	116ec <avl_insere_impl@@Base+0xa4>
   1166c:	cmp	r0, #0
   11670:	ble	1175c <avl_insere_impl@@Base+0x114>
   11674:	mov	r1, r5
   11678:	ldr	r0, [r4, #8]
   1167c:	bl	11648 <avl_insere_impl@@Base>
   11680:	str	r0, [r4, #8]
   11684:	ldr	r6, [r4, #4]
   11688:	cmp	r6, #0
   1168c:	ldrne	r2, [r6, #12]
   11690:	mvneq	r2, #0
   11694:	ldr	r5, [r4, #8]
   11698:	cmp	r5, #0
   1169c:	ldrne	r3, [r5, #12]
   116a0:	mvneq	r3, #0
   116a4:	cmp	r3, r2
   116a8:	movlt	r3, r2
   116ac:	add	r3, r3, #1
   116b0:	str	r3, [r4, #12]
   116b4:	mov	r0, r4
   116b8:	bl	11590 <calc_balanceamento@@Base>
   116bc:	cmp	r0, #1
   116c0:	ble	11718 <avl_insere_impl@@Base+0xd0>
   116c4:	mov	r0, r5
   116c8:	bl	11590 <calc_balanceamento@@Base>
   116cc:	cmp	r0, #0
   116d0:	blt	11700 <avl_insere_impl@@Base+0xb8>
   116d4:	mov	r0, r4
   116d8:	bl	1151c <roda_esquerda@@Base>
   116dc:	pop	{r4, r5, r6, pc}
   116e0:	mov	r0, r1
   116e4:	bl	11460 <avl_novo_no@@Base>
   116e8:	pop	{r4, r5, r6, pc}
   116ec:	mov	r1, r5
   116f0:	ldr	r0, [r4, #4]
   116f4:	bl	11648 <avl_insere_impl@@Base>
   116f8:	str	r0, [r4, #4]
   116fc:	b	11684 <avl_insere_impl@@Base+0x3c>
   11700:	mov	r0, r5
   11704:	bl	114a8 <roda_direita@@Base>
   11708:	str	r0, [r4, #8]
   1170c:	mov	r0, r4
   11710:	bl	1151c <roda_esquerda@@Base>
   11714:	pop	{r4, r5, r6, pc}
   11718:	cmn	r0, #1
   1171c:	blt	11728 <avl_insere_impl@@Base+0xe0>
   11720:	mov	r0, r4
   11724:	pop	{r4, r5, r6, pc}
   11728:	mov	r0, r6
   1172c:	bl	11590 <calc_balanceamento@@Base>
   11730:	cmp	r0, #0
   11734:	ble	11750 <avl_insere_impl@@Base+0x108>
   11738:	mov	r0, r6
   1173c:	bl	1151c <roda_esquerda@@Base>
   11740:	str	r0, [r4, #4]
   11744:	mov	r0, r4
   11748:	bl	114a8 <roda_direita@@Base>
   1174c:	pop	{r4, r5, r6, pc}
   11750:	mov	r0, r4
   11754:	bl	114a8 <roda_direita@@Base>
   11758:	pop	{r4, r5, r6, pc}
   1175c:	mov	r0, r4
   11760:	pop	{r4, r5, r6, pc}

00011764 <avl_insere@@Base>:
   11764:	cmp	r1, #0
   11768:	cmpne	r0, #0
   1176c:	beq	1178c <avl_insere@@Base+0x28>
   11770:	push	{r4, lr}
   11774:	mov	r4, r0
   11778:	ldr	r0, [r0]
   1177c:	bl	11648 <avl_insere_impl@@Base>
   11780:	str	r0, [r4]
   11784:	mov	r0, #0
   11788:	pop	{r4, pc}
   1178c:	mvn	r0, #0
   11790:	bx	lr

00011794 <avl_no_valormin@@Base>:
   11794:	b	1179c <avl_no_valormin@@Base+0x8>
   11798:	mov	r0, r3
   1179c:	ldr	r3, [r0, #4]
   117a0:	cmp	r3, #0
   117a4:	bne	11798 <avl_no_valormin@@Base+0x4>
   117a8:	bx	lr

000117ac <avl_no_valormax@@Base>:
   117ac:	b	117b4 <avl_no_valormax@@Base+0x8>
   117b0:	mov	r0, r3
   117b4:	ldr	r3, [r0, #8]
   117b8:	cmp	r3, #0
   117bc:	bne	117b0 <avl_no_valormax@@Base+0x4>
   117c0:	bx	lr

000117c4 <avl_remove_impl@@Base>:
   117c4:	push	{r4, r5, r6, r7, r8, lr}
   117c8:	subs	r4, r0, #0
   117cc:	beq	119a8 <avl_remove_impl@@Base+0x1e4>
   117d0:	mov	r5, r1
   117d4:	ldr	r7, [r4]
   117d8:	mov	r1, r7
   117dc:	mov	r0, r5
   117e0:	bl	10ee8 <strcmp@plt>
   117e4:	cmp	r0, #0
   117e8:	blt	11868 <avl_remove_impl@@Base+0xa4>
   117ec:	cmp	r0, #0
   117f0:	ble	1187c <avl_remove_impl@@Base+0xb8>
   117f4:	mov	r1, r5
   117f8:	ldr	r0, [r4, #8]
   117fc:	bl	117c4 <avl_remove_impl@@Base>
   11800:	str	r0, [r4, #8]
   11804:	ldr	r6, [r4, #4]
   11808:	cmp	r6, #0
   1180c:	ldrne	r2, [r6, #12]
   11810:	mvneq	r2, #0
   11814:	ldr	r5, [r4, #8]
   11818:	cmp	r5, #0
   1181c:	ldrne	r3, [r5, #12]
   11820:	mvneq	r3, #0
   11824:	cmp	r3, r2
   11828:	movlt	r3, r2
   1182c:	add	r3, r3, #1
   11830:	str	r3, [r4, #12]
   11834:	mov	r0, r4
   11838:	bl	11590 <calc_balanceamento@@Base>
   1183c:	cmp	r0, #1
   11840:	ble	11960 <avl_remove_impl@@Base+0x19c>
   11844:	mov	r0, r5
   11848:	bl	11590 <calc_balanceamento@@Base>
   1184c:	cmp	r0, #0
   11850:	blt	11944 <avl_remove_impl@@Base+0x180>
   11854:	mov	r0, r4
   11858:	bl	1151c <roda_esquerda@@Base>
   1185c:	mov	r6, r0
   11860:	mov	r0, r6
   11864:	pop	{r4, r5, r6, r7, r8, pc}
   11868:	mov	r1, r5
   1186c:	ldr	r0, [r4, #4]
   11870:	bl	117c4 <avl_remove_impl@@Base>
   11874:	str	r0, [r4, #4]
   11878:	b	11804 <avl_remove_impl@@Base+0x40>
   1187c:	ldr	r6, [r4, #4]
   11880:	cmp	r6, #0
   11884:	beq	118e0 <avl_remove_impl@@Base+0x11c>
   11888:	ldr	r5, [r4, #8]
   1188c:	cmp	r5, #0
   11890:	bne	11904 <avl_remove_impl@@Base+0x140>
   11894:	ldr	r0, [r6]
   11898:	bl	10f78 <strlen@plt>
   1189c:	add	r1, r0, #1
   118a0:	mov	r0, r7
   118a4:	bl	10f30 <realloc@plt>
   118a8:	str	r0, [r4]
   118ac:	ldr	r1, [r6]
   118b0:	bl	10f3c <strcpy@plt>
   118b4:	ldr	r3, [r6, #4]
   118b8:	str	r3, [r4, #4]
   118bc:	ldr	r3, [r6, #8]
   118c0:	str	r3, [r4, #8]
   118c4:	ldr	r3, [r6, #12]
   118c8:	str	r3, [r4, #12]
   118cc:	ldr	r0, [r6]
   118d0:	bl	10f18 <free@plt>
   118d4:	mov	r0, r6
   118d8:	bl	10f18 <free@plt>
   118dc:	b	11804 <avl_remove_impl@@Base+0x40>
   118e0:	ldr	r6, [r4, #8]
   118e4:	cmp	r6, #0
   118e8:	bne	11894 <avl_remove_impl@@Base+0xd0>
   118ec:	ldr	r0, [r4]
   118f0:	bl	10f18 <free@plt>
   118f4:	mov	r0, r4
   118f8:	bl	10f18 <free@plt>
   118fc:	b	11860 <avl_remove_impl@@Base+0x9c>
   11900:	mov	r5, r3
   11904:	ldr	r3, [r5, #4]
   11908:	cmp	r3, #0
   1190c:	bne	11900 <avl_remove_impl@@Base+0x13c>
   11910:	ldr	r0, [r5]
   11914:	bl	10f78 <strlen@plt>
   11918:	add	r1, r0, #1
   1191c:	mov	r0, r7
   11920:	bl	10f30 <realloc@plt>
   11924:	str	r0, [r4]
   11928:	ldr	r1, [r5]
   1192c:	bl	10f3c <strcpy@plt>
   11930:	ldr	r1, [r5]
   11934:	ldr	r0, [r4, #8]
   11938:	bl	117c4 <avl_remove_impl@@Base>
   1193c:	str	r0, [r4, #8]
   11940:	b	11804 <avl_remove_impl@@Base+0x40>
   11944:	mov	r0, r5
   11948:	bl	114a8 <roda_direita@@Base>
   1194c:	str	r0, [r4, #8]
   11950:	mov	r0, r4
   11954:	bl	1151c <roda_esquerda@@Base>
   11958:	mov	r6, r0
   1195c:	b	11860 <avl_remove_impl@@Base+0x9c>
   11960:	cmn	r0, #1
   11964:	movge	r6, r4
   11968:	bge	11860 <avl_remove_impl@@Base+0x9c>
   1196c:	mov	r0, r6
   11970:	bl	11590 <calc_balanceamento@@Base>
   11974:	cmp	r0, #0
   11978:	ble	11998 <avl_remove_impl@@Base+0x1d4>
   1197c:	mov	r0, r6
   11980:	bl	1151c <roda_esquerda@@Base>
   11984:	str	r0, [r4, #4]
   11988:	mov	r0, r4
   1198c:	bl	114a8 <roda_direita@@Base>
   11990:	mov	r6, r0
   11994:	b	11860 <avl_remove_impl@@Base+0x9c>
   11998:	mov	r0, r4
   1199c:	bl	114a8 <roda_direita@@Base>
   119a0:	mov	r6, r0
   119a4:	b	11860 <avl_remove_impl@@Base+0x9c>
   119a8:	mov	r6, r4
   119ac:	b	11860 <avl_remove_impl@@Base+0x9c>

000119b0 <avl_apaga@@Base>:
   119b0:	push	{r4, lr}
   119b4:	subs	r4, r0, #0
   119b8:	popeq	{r4, pc}
   119bc:	ldr	r0, [r4]
   119c0:	cmp	r0, #0
   119c4:	beq	119dc <avl_apaga@@Base+0x2c>
   119c8:	ldr	r1, [r0]
   119cc:	bl	117c4 <avl_remove_impl@@Base>
   119d0:	str	r0, [r4]
   119d4:	cmp	r0, #0
   119d8:	bne	119c8 <avl_apaga@@Base+0x18>
   119dc:	mov	r0, r4
   119e0:	bl	10f18 <free@plt>
   119e4:	pop	{r4, pc}

000119e8 <avl_remove@@Base>:
   119e8:	cmp	r1, #0
   119ec:	cmpne	r0, #0
   119f0:	beq	11a10 <avl_remove@@Base+0x28>
   119f4:	push	{r4, lr}
   119f8:	mov	r4, r0
   119fc:	ldr	r0, [r0]
   11a00:	bl	117c4 <avl_remove_impl@@Base>
   11a04:	str	r0, [r4]
   11a08:	mov	r0, #0
   11a0c:	pop	{r4, pc}
   11a10:	mvn	r0, #0
   11a14:	bx	lr

00011a18 <avl_preordem_impl@@Base>:
   11a18:	push	{r4, lr}
   11a1c:	subs	r4, r0, #0
   11a20:	popeq	{r4, pc}
   11a24:	ldr	r1, [r4]
   11a28:	ldr	r0, [pc, #20]	; 11a44 <avl_preordem_impl@@Base+0x2c>
   11a2c:	bl	10ef4 <printf@plt>
   11a30:	ldr	r0, [r4, #4]
   11a34:	bl	11a18 <avl_preordem_impl@@Base>
   11a38:	ldr	r0, [r4, #8]
   11a3c:	bl	11a18 <avl_preordem_impl@@Base>
   11a40:	pop	{r4, pc}
   11a44:	andeq	r2, r1, r8, asr r8

00011a48 <avl_imprime@@Base>:
   11a48:	cmp	r0, #0
   11a4c:	bxeq	lr
   11a50:	push	{r4, lr}
   11a54:	bl	11a18 <avl_preordem_impl@@Base>
   11a58:	mov	r0, #10
   11a5c:	bl	10f84 <putchar@plt>
   11a60:	pop	{r4, pc}

00011a64 <novo_str@@Base>:
   11a64:	push	{r4, r5, r6, lr}
   11a68:	mov	r5, r0
   11a6c:	mov	r0, #12
   11a70:	bl	10f54 <malloc@plt>
   11a74:	subs	r4, r0, #0
   11a78:	beq	11aac <novo_str@@Base+0x48>
   11a7c:	mov	r0, r5
   11a80:	bl	10f78 <strlen@plt>
   11a84:	add	r0, r0, #1
   11a88:	bl	10f54 <malloc@plt>
   11a8c:	str	r0, [r4]
   11a90:	cmp	r0, #0
   11a94:	beq	11ab4 <novo_str@@Base+0x50>
   11a98:	mov	r1, r5
   11a9c:	bl	10f3c <strcpy@plt>
   11aa0:	mov	r3, #0
   11aa4:	str	r3, [r4, #4]
   11aa8:	str	r3, [r4, #8]
   11aac:	mov	r0, r4
   11ab0:	pop	{r4, r5, r6, pc}
   11ab4:	mov	r0, r4
   11ab8:	bl	10f18 <free@plt>
   11abc:	mov	r4, #0
   11ac0:	b	11aac <novo_str@@Base+0x48>

00011ac4 <lista_nova@@Base>:
   11ac4:	push	{r4, lr}
   11ac8:	mov	r0, #12
   11acc:	bl	10f54 <malloc@plt>
   11ad0:	cmp	r0, #0
   11ad4:	movne	r3, #0
   11ad8:	strne	r3, [r0]
   11adc:	strne	r3, [r0, #4]
   11ae0:	strne	r3, [r0, #8]
   11ae4:	pop	{r4, pc}

00011ae8 <lista_apaga@@Base>:
   11ae8:	push	{r4, r5, r6, lr}
   11aec:	subs	r5, r0, #0
   11af0:	popeq	{r4, r5, r6, pc}
   11af4:	ldr	r4, [r5]
   11af8:	cmp	r4, #0
   11afc:	beq	11b24 <lista_apaga@@Base+0x3c>
   11b00:	ldr	r3, [r4, #4]
   11b04:	str	r3, [r5]
   11b08:	ldr	r0, [r4]
   11b0c:	bl	10f18 <free@plt>
   11b10:	mov	r0, r4
   11b14:	bl	10f18 <free@plt>
   11b18:	ldr	r4, [r5]
   11b1c:	cmp	r4, #0
   11b20:	bne	11b00 <lista_apaga@@Base+0x18>
   11b24:	mov	r0, r5
   11b28:	bl	10f18 <free@plt>
   11b2c:	pop	{r4, r5, r6, pc}

00011b30 <lista_tamanho@@Base>:
   11b30:	cmp	r0, #0
   11b34:	ldrne	r0, [r0, #8]
   11b38:	mvneq	r0, #0
   11b3c:	bx	lr

00011b40 <lista_inicio@@Base>:
   11b40:	cmp	r0, #0
   11b44:	ldrne	r0, [r0]
   11b48:	moveq	r0, #0
   11b4c:	bx	lr

00011b50 <lista_fim@@Base>:
   11b50:	cmp	r0, #0
   11b54:	ldrne	r0, [r0, #4]
   11b58:	moveq	r0, #0
   11b5c:	bx	lr

00011b60 <lista_insere@@Base>:
   11b60:	cmp	r1, #0
   11b64:	cmpne	r0, #0
   11b68:	beq	11bf8 <lista_insere@@Base+0x98>
   11b6c:	push	{r4, r5, r6, lr}
   11b70:	mov	r5, r0
   11b74:	mov	r0, r1
   11b78:	mov	r4, r2
   11b7c:	bl	11a64 <novo_str@@Base>
   11b80:	cmp	r0, #0
   11b84:	popeq	{r4, r5, r6, pc}
   11b88:	ldr	r3, [r5, #8]
   11b8c:	add	r3, r3, #1
   11b90:	str	r3, [r5, #8]
   11b94:	cmp	r4, #0
   11b98:	beq	11bd0 <lista_insere@@Base+0x70>
   11b9c:	ldr	r3, [r5]
   11ba0:	cmp	r4, r3
   11ba4:	streq	r4, [r0, #4]
   11ba8:	ldreq	r3, [r5]
   11bac:	streq	r0, [r3, #8]
   11bb0:	streq	r0, [r5]
   11bb4:	ldrne	r3, [r4, #8]
   11bb8:	strne	r3, [r0, #8]
   11bbc:	strne	r4, [r0, #4]
   11bc0:	ldrne	r3, [r4, #8]
   11bc4:	strne	r0, [r3, #4]
   11bc8:	strne	r0, [r4, #8]
   11bcc:	pop	{r4, r5, r6, pc}
   11bd0:	ldr	r3, [r5]
   11bd4:	cmp	r3, #0
   11bd8:	streq	r0, [r5, #4]
   11bdc:	streq	r0, [r5]
   11be0:	ldrne	r3, [r5, #4]
   11be4:	strne	r3, [r0, #8]
   11be8:	ldrne	r3, [r5, #4]
   11bec:	strne	r0, [r3, #4]
   11bf0:	strne	r0, [r5, #4]
   11bf4:	pop	{r4, r5, r6, pc}
   11bf8:	mov	r0, #0
   11bfc:	bx	lr

00011c00 <lista_remove@@Base>:
   11c00:	push	{r4, r5, r6, lr}
   11c04:	cmp	r1, #0
   11c08:	cmpne	r0, #0
   11c0c:	beq	11c6c <lista_remove@@Base+0x6c>
   11c10:	mov	r4, r1
   11c14:	ldr	r2, [r0, #8]
   11c18:	sub	r2, r2, #1
   11c1c:	str	r2, [r0, #8]
   11c20:	ldr	r2, [r1, #8]
   11c24:	cmp	r2, #0
   11c28:	ldrne	r1, [r1, #4]
   11c2c:	strne	r1, [r2, #4]
   11c30:	ldreq	r2, [r4, #4]
   11c34:	streq	r2, [r0]
   11c38:	ldr	r2, [r4, #4]
   11c3c:	cmp	r2, #0
   11c40:	ldrne	r1, [r4, #8]
   11c44:	strne	r1, [r2, #8]
   11c48:	ldreq	r2, [r4, #8]
   11c4c:	streq	r2, [r0, #4]
   11c50:	ldr	r5, [r4, #4]
   11c54:	ldr	r0, [r4]
   11c58:	bl	10f18 <free@plt>
   11c5c:	mov	r0, r4
   11c60:	bl	10f18 <free@plt>
   11c64:	mov	r0, r5
   11c68:	pop	{r4, r5, r6, pc}
   11c6c:	mov	r5, #0
   11c70:	b	11c64 <lista_remove@@Base+0x64>

00011c74 <lista_pesquisa@@Base>:
   11c74:	push	{r4, r5, r6, lr}
   11c78:	cmp	r1, #0
   11c7c:	cmpne	r0, #0
   11c80:	beq	11d00 <lista_pesquisa@@Base+0x8c>
   11c84:	mov	r5, r1
   11c88:	cmp	r2, #1
   11c8c:	movhi	r4, #0
   11c90:	bhi	11cc8 <lista_pesquisa@@Base+0x54>
   11c94:	cmp	r2, #0
   11c98:	bne	11cd0 <lista_pesquisa@@Base+0x5c>
   11c9c:	ldr	r4, [r0]
   11ca0:	cmp	r4, #0
   11ca4:	beq	11cc8 <lista_pesquisa@@Base+0x54>
   11ca8:	mov	r1, r5
   11cac:	ldr	r0, [r4]
   11cb0:	bl	10ee8 <strcmp@plt>
   11cb4:	cmp	r0, #0
   11cb8:	beq	11cc8 <lista_pesquisa@@Base+0x54>
   11cbc:	ldr	r4, [r4, #4]
   11cc0:	cmp	r4, #0
   11cc4:	bne	11ca8 <lista_pesquisa@@Base+0x34>
   11cc8:	mov	r0, r4
   11ccc:	pop	{r4, r5, r6, pc}
   11cd0:	ldr	r4, [r0, #4]
   11cd4:	cmp	r4, #0
   11cd8:	beq	11cc8 <lista_pesquisa@@Base+0x54>
   11cdc:	mov	r1, r5
   11ce0:	ldr	r0, [r4]
   11ce4:	bl	10ee8 <strcmp@plt>
   11ce8:	cmp	r0, #0
   11cec:	beq	11cc8 <lista_pesquisa@@Base+0x54>
   11cf0:	ldr	r4, [r4, #8]
   11cf4:	cmp	r4, #0
   11cf8:	bne	11cdc <lista_pesquisa@@Base+0x68>
   11cfc:	b	11cc8 <lista_pesquisa@@Base+0x54>
   11d00:	mov	r4, #0
   11d04:	b	11cc8 <lista_pesquisa@@Base+0x54>

00011d08 <lista_ordena@@Base>:
   11d08:	subs	r3, r0, #0
   11d0c:	beq	11d90 <lista_ordena@@Base+0x88>
   11d10:	ldr	r0, [r3, #8]
   11d14:	cmp	r0, #0
   11d18:	bxeq	lr
   11d1c:	push	{r4, r5, r6, lr}
   11d20:	ldr	r5, [r3]
   11d24:	ldr	r4, [r5, #4]
   11d28:	cmp	r4, #0
   11d2c:	movne	r6, r5
   11d30:	bne	11d84 <lista_ordena@@Base+0x7c>
   11d34:	mov	r0, #0
   11d38:	pop	{r4, r5, r6, pc}
   11d3c:	ldr	r1, [r5]
   11d40:	ldr	r0, [r4]
   11d44:	bl	10ee8 <strcmp@plt>
   11d48:	cmp	r0, #0
   11d4c:	movlt	r5, r4
   11d50:	ldr	r4, [r4, #4]
   11d54:	cmp	r4, #0
   11d58:	bne	11d3c <lista_ordena@@Base+0x34>
   11d5c:	cmp	r5, r6
   11d60:	ldrne	r3, [r6]
   11d64:	ldrne	r2, [r5]
   11d68:	strne	r2, [r6]
   11d6c:	strne	r3, [r5]
   11d70:	ldr	r6, [r6, #4]
   11d74:	ldr	r4, [r6, #4]
   11d78:	mov	r5, r6
   11d7c:	cmp	r4, #0
   11d80:	beq	11d98 <lista_ordena@@Base+0x90>
   11d84:	cmp	r4, #0
   11d88:	bne	11d3c <lista_ordena@@Base+0x34>
   11d8c:	b	11d70 <lista_ordena@@Base+0x68>
   11d90:	mvn	r0, #0
   11d94:	bx	lr
   11d98:	mov	r0, #0
   11d9c:	pop	{r4, r5, r6, pc}

00011da0 <lista_inverte@@Base>:
   11da0:	subs	r2, r0, #0
   11da4:	beq	11e44 <lista_inverte@@Base+0xa4>
   11da8:	ldr	r1, [r2, #8]
   11dac:	cmp	r1, #1
   11db0:	ble	11e4c <lista_inverte@@Base+0xac>
   11db4:	ldr	r3, [r2]
   11db8:	ldr	r3, [r3, #4]
   11dbc:	sub	r1, r1, #2
   11dc0:	cmp	r1, #0
   11dc4:	ble	11e14 <lista_inverte@@Base+0x74>
   11dc8:	mov	r0, #0
   11dcc:	ldr	r1, [r3, #8]
   11dd0:	ldr	ip, [r3, #4]
   11dd4:	str	ip, [r1, #4]
   11dd8:	ldr	r1, [r3, #4]
   11ddc:	ldr	ip, [r3, #8]
   11de0:	str	ip, [r1, #8]
   11de4:	ldr	r1, [r3, #4]
   11de8:	ldr	ip, [r2]
   11dec:	str	ip, [r3, #4]
   11df0:	ldr	ip, [r2]
   11df4:	str	r3, [ip, #8]
   11df8:	str	r3, [r2]
   11dfc:	add	r0, r0, #1
   11e00:	mov	r3, r1
   11e04:	ldr	r1, [r2, #8]
   11e08:	sub	r1, r1, #2
   11e0c:	cmp	r1, r0
   11e10:	bgt	11dcc <lista_inverte@@Base+0x2c>
   11e14:	ldr	r3, [r2, #4]
   11e18:	ldr	r1, [r3, #8]
   11e1c:	str	r1, [r2, #4]
   11e20:	mov	r0, #0
   11e24:	str	r0, [r1, #4]
   11e28:	str	r0, [r3, #8]
   11e2c:	ldr	r1, [r2]
   11e30:	str	r1, [r3, #4]
   11e34:	ldr	r1, [r2]
   11e38:	str	r3, [r1, #8]
   11e3c:	str	r3, [r2]
   11e40:	bx	lr
   11e44:	mvn	r0, #0
   11e48:	bx	lr
   11e4c:	mov	r0, #0
   11e50:	bx	lr

00011e54 <tabela_nova@@Base>:
   11e54:	push	{r4, r5, r6, lr}
   11e58:	cmp	r1, #0
   11e5c:	cmpne	r0, #0
   11e60:	movle	r4, #0
   11e64:	ble	11ea0 <tabela_nova@@Base+0x4c>
   11e68:	mov	r5, r0
   11e6c:	mov	r6, r1
   11e70:	mov	r0, #12
   11e74:	bl	10f54 <malloc@plt>
   11e78:	subs	r4, r0, #0
   11e7c:	beq	11ea0 <tabela_nova@@Base+0x4c>
   11e80:	mov	r1, #4
   11e84:	mov	r0, r5
   11e88:	bl	10ed0 <calloc@plt>
   11e8c:	str	r0, [r4, #4]
   11e90:	cmp	r0, #0
   11e94:	strne	r5, [r4, #8]
   11e98:	strne	r6, [r4]
   11e9c:	beq	11ea8 <tabela_nova@@Base+0x54>
   11ea0:	mov	r0, r4
   11ea4:	pop	{r4, r5, r6, pc}
   11ea8:	mov	r0, r4
   11eac:	bl	10f18 <free@plt>
   11eb0:	mov	r4, #0
   11eb4:	b	11ea0 <tabela_nova@@Base+0x4c>

00011eb8 <tabela_apaga@@Base>:
   11eb8:	push	{r4, r5, r6, r7, r8, lr}
   11ebc:	subs	r7, r0, #0
   11ec0:	popeq	{r4, r5, r6, r7, r8, pc}
   11ec4:	ldr	r3, [r7, #8]
   11ec8:	cmp	r3, #0
   11ecc:	ble	11f14 <tabela_apaga@@Base+0x5c>
   11ed0:	mov	r6, #0
   11ed4:	ldr	r3, [r7, #4]
   11ed8:	ldr	r4, [r3, r6, lsl #2]
   11edc:	cmp	r4, #0
   11ee0:	beq	11f04 <tabela_apaga@@Base+0x4c>
   11ee4:	ldr	r5, [r4, #4]
   11ee8:	ldr	r0, [r4]
   11eec:	bl	10f18 <free@plt>
   11ef0:	mov	r0, r4
   11ef4:	bl	10f18 <free@plt>
   11ef8:	mov	r4, r5
   11efc:	cmp	r5, #0
   11f00:	bne	11ee4 <tabela_apaga@@Base+0x2c>
   11f04:	add	r6, r6, #1
   11f08:	ldr	r3, [r7, #8]
   11f0c:	cmp	r3, r6
   11f10:	bgt	11ed4 <tabela_apaga@@Base+0x1c>
   11f14:	ldr	r0, [r7, #4]
   11f18:	bl	10f18 <free@plt>
   11f1c:	mov	r0, r7
   11f20:	bl	10f18 <free@plt>
   11f24:	pop	{r4, r5, r6, r7, r8, pc}

00011f28 <tabela_adiciona@@Base>:
   11f28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f2c:	mov	r8, r2
   11f30:	cmp	r2, #0
   11f34:	cmpne	r1, #0
   11f38:	moveq	r2, #1
   11f3c:	movne	r2, #0
   11f40:	cmp	r0, #0
   11f44:	orreq	r2, r2, #1
   11f48:	cmp	r2, #0
   11f4c:	bne	1200c <tabela_adiciona@@Base+0xe4>
   11f50:	mov	r6, r1
   11f54:	mov	r4, r0
   11f58:	ldr	r3, [r0]
   11f5c:	ldr	r1, [r0, #8]
   11f60:	mov	r0, r6
   11f64:	blx	r3
   11f68:	mov	sl, r0
   11f6c:	ldr	r9, [r4, #4]
   11f70:	ldr	r4, [r9, r0, lsl #2]
   11f74:	cmp	r4, #0
   11f78:	beq	11fa0 <tabela_adiciona@@Base+0x78>
   11f7c:	ldr	r5, [r4]
   11f80:	mov	r1, r6
   11f84:	mov	r0, r5
   11f88:	bl	10ee8 <strcmp@plt>
   11f8c:	subs	r7, r0, #0
   11f90:	beq	11ff0 <tabela_adiciona@@Base+0xc8>
   11f94:	ldr	r4, [r4, #4]
   11f98:	cmp	r4, #0
   11f9c:	bne	11f7c <tabela_adiciona@@Base+0x54>
   11fa0:	mov	r0, #8
   11fa4:	bl	10f54 <malloc@plt>
   11fa8:	subs	r5, r0, #0
   11fac:	beq	12014 <tabela_adiciona@@Base+0xec>
   11fb0:	mov	r0, #125	; 0x7d
   11fb4:	bl	10f54 <malloc@plt>
   11fb8:	mov	r4, r0
   11fbc:	str	r0, [r5]
   11fc0:	cmp	r0, #0
   11fc4:	beq	1201c <tabela_adiciona@@Base+0xf4>
   11fc8:	mov	r1, r6
   11fcc:	bl	10f3c <strcpy@plt>
   11fd0:	mov	r1, r8
   11fd4:	add	r0, r4, #25
   11fd8:	bl	10f3c <strcpy@plt>
   11fdc:	ldr	r3, [r9, sl, lsl #2]
   11fe0:	str	r3, [r5, #4]
   11fe4:	str	r5, [r9, sl, lsl #2]
   11fe8:	mov	r7, #0
   11fec:	b	12004 <tabela_adiciona@@Base+0xdc>
   11ff0:	cmp	r4, #0
   11ff4:	beq	11fa0 <tabela_adiciona@@Base+0x78>
   11ff8:	mov	r1, r8
   11ffc:	add	r0, r5, #25
   12000:	bl	10f3c <strcpy@plt>
   12004:	mov	r0, r7
   12008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1200c:	mvn	r7, #1
   12010:	b	12004 <tabela_adiciona@@Base+0xdc>
   12014:	mvn	r7, #1
   12018:	b	12004 <tabela_adiciona@@Base+0xdc>
   1201c:	mvn	r7, #1
   12020:	b	12004 <tabela_adiciona@@Base+0xdc>

00012024 <tabela_remove@@Base>:
   12024:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12028:	subs	r4, r0, #0
   1202c:	beq	120b8 <tabela_remove@@Base+0x94>
   12030:	mov	r5, r1
   12034:	ldr	r3, [r4]
   12038:	ldr	r1, [r4, #8]
   1203c:	mov	r0, r5
   12040:	blx	r3
   12044:	mov	r9, r0
   12048:	ldr	r8, [r4, #4]
   1204c:	ldr	r4, [r8, r0, lsl #2]
   12050:	cmp	r4, #0
   12054:	beq	120c0 <tabela_remove@@Base+0x9c>
   12058:	mov	r7, #0
   1205c:	b	12064 <tabela_remove@@Base+0x40>
   12060:	mov	r4, r3
   12064:	mov	r1, r5
   12068:	ldr	r0, [r4]
   1206c:	bl	10ee8 <strcmp@plt>
   12070:	subs	r6, r0, #0
   12074:	beq	12090 <tabela_remove@@Base+0x6c>
   12078:	ldr	r3, [r4, #4]
   1207c:	mov	r7, r4
   12080:	cmp	r3, #0
   12084:	bne	12060 <tabela_remove@@Base+0x3c>
   12088:	mvn	r6, #2
   1208c:	b	120b0 <tabela_remove@@Base+0x8c>
   12090:	cmp	r7, #0
   12094:	ldr	r3, [r4, #4]
   12098:	strne	r3, [r7, #4]
   1209c:	streq	r3, [r8, r9, lsl #2]
   120a0:	ldr	r0, [r4]
   120a4:	bl	10f18 <free@plt>
   120a8:	mov	r0, r4
   120ac:	bl	10f18 <free@plt>
   120b0:	mov	r0, r6
   120b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120b8:	mvn	r6, #1
   120bc:	b	120b0 <tabela_remove@@Base+0x8c>
   120c0:	mvn	r6, #2
   120c4:	b	120b0 <tabela_remove@@Base+0x8c>

000120c8 <tabela_valor@@Base>:
   120c8:	push	{r4, r5, r6, lr}
   120cc:	subs	r4, r0, #0
   120d0:	beq	1212c <tabela_valor@@Base+0x64>
   120d4:	mov	r6, r1
   120d8:	ldr	r3, [r4]
   120dc:	ldr	r1, [r4, #8]
   120e0:	mov	r0, r6
   120e4:	blx	r3
   120e8:	ldr	r3, [r4, #4]
   120ec:	ldr	r4, [r3, r0, lsl #2]
   120f0:	cmp	r4, #0
   120f4:	beq	12134 <tabela_valor@@Base+0x6c>
   120f8:	ldr	r5, [r4]
   120fc:	mov	r1, r6
   12100:	mov	r0, r5
   12104:	bl	10ee8 <strcmp@plt>
   12108:	cmp	r0, #0
   1210c:	beq	12124 <tabela_valor@@Base+0x5c>
   12110:	ldr	r4, [r4, #4]
   12114:	cmp	r4, #0
   12118:	bne	120f8 <tabela_valor@@Base+0x30>
   1211c:	mov	r0, #0
   12120:	pop	{r4, r5, r6, pc}
   12124:	add	r0, r5, #25
   12128:	pop	{r4, r5, r6, pc}
   1212c:	mov	r0, #0
   12130:	pop	{r4, r5, r6, pc}
   12134:	mov	r0, #0
   12138:	pop	{r4, r5, r6, pc}

0001213c <tabela_existe@@Base>:
   1213c:	cmp	r0, #0
   12140:	cmpne	r1, #0
   12144:	beq	12160 <tabela_existe@@Base+0x24>
   12148:	push	{r4, lr}
   1214c:	bl	120c8 <tabela_valor@@Base>
   12150:	cmp	r0, #0
   12154:	mvneq	r0, #2
   12158:	movne	r0, #1
   1215c:	pop	{r4, pc}
   12160:	mvn	r0, #1
   12164:	bx	lr

00012168 <tabela_esvazia@@Base>:
   12168:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1216c:	subs	r7, r0, #0
   12170:	beq	121dc <tabela_esvazia@@Base+0x74>
   12174:	ldr	r3, [r7, #8]
   12178:	cmp	r3, #0
   1217c:	ble	121e4 <tabela_esvazia@@Base+0x7c>
   12180:	mov	r6, #0
   12184:	mov	r9, r6
   12188:	lsl	r8, r6, #2
   1218c:	ldr	r3, [r7, #4]
   12190:	ldr	r4, [r3, r6, lsl #2]
   12194:	cmp	r4, #0
   12198:	beq	121bc <tabela_esvazia@@Base+0x54>
   1219c:	ldr	r5, [r4, #4]
   121a0:	ldr	r0, [r4]
   121a4:	bl	10f18 <free@plt>
   121a8:	mov	r0, r4
   121ac:	bl	10f18 <free@plt>
   121b0:	mov	r4, r5
   121b4:	cmp	r5, #0
   121b8:	bne	1219c <tabela_esvazia@@Base+0x34>
   121bc:	ldr	r3, [r7, #4]
   121c0:	str	r9, [r3, r8]
   121c4:	add	r6, r6, #1
   121c8:	ldr	r3, [r7, #8]
   121cc:	cmp	r3, r6
   121d0:	bgt	12188 <tabela_esvazia@@Base+0x20>
   121d4:	mov	r0, #0
   121d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121dc:	mvn	r0, #1
   121e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121e4:	mov	r0, #0
   121e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000121ec <tabela_numelementos@@Base>:
   121ec:	cmp	r0, #0
   121f0:	beq	12234 <tabela_numelementos@@Base+0x48>
   121f4:	ldr	r1, [r0, #8]
   121f8:	cmp	r1, #0
   121fc:	ble	1223c <tabela_numelementos@@Base+0x50>
   12200:	ldr	r2, [r0, #4]
   12204:	add	r1, r2, r1, lsl #2
   12208:	mov	r0, #0
   1220c:	ldr	r3, [r2], #4
   12210:	cmp	r3, #0
   12214:	beq	12228 <tabela_numelementos@@Base+0x3c>
   12218:	ldr	r3, [r3, #4]
   1221c:	add	r0, r0, #1
   12220:	cmp	r3, #0
   12224:	bne	12218 <tabela_numelementos@@Base+0x2c>
   12228:	cmp	r2, r1
   1222c:	bne	1220c <tabela_numelementos@@Base+0x20>
   12230:	bx	lr
   12234:	mvn	r0, #1
   12238:	bx	lr
   1223c:	mov	r0, #0
   12240:	bx	lr

00012244 <tabela_elementos@@Base>:
   12244:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12248:	mov	r9, r0
   1224c:	mov	r4, r1
   12250:	bl	121ec <tabela_numelementos@@Base>
   12254:	str	r0, [r4]
   12258:	cmp	r0, #0
   1225c:	ble	122e0 <tabela_elementos@@Base+0x9c>
   12260:	rsb	r3, r0, r0, lsl #5
   12264:	add	r0, r0, r3, lsl #2
   12268:	bl	10f54 <malloc@plt>
   1226c:	subs	fp, r0, #0
   12270:	beq	122e4 <tabela_elementos@@Base+0xa0>
   12274:	ldr	sl, [r9, #8]
   12278:	cmp	sl, #0
   1227c:	ble	122e4 <tabela_elementos@@Base+0xa0>
   12280:	mov	r6, #0
   12284:	mov	r8, r6
   12288:	mov	r7, #125	; 0x7d
   1228c:	b	1229c <tabela_elementos@@Base+0x58>
   12290:	add	r8, r8, #1
   12294:	cmp	r8, sl
   12298:	beq	122e4 <tabela_elementos@@Base+0xa0>
   1229c:	ldr	r3, [r9, #4]
   122a0:	ldr	r4, [r3, r8, lsl #2]
   122a4:	cmp	r4, #0
   122a8:	beq	12290 <tabela_elementos@@Base+0x4c>
   122ac:	rsb	r5, r6, r6, lsl #5
   122b0:	add	r5, r6, r5, lsl #2
   122b4:	add	r5, fp, r5
   122b8:	add	r6, r6, #1
   122bc:	mov	r2, r7
   122c0:	ldr	r1, [r4]
   122c4:	mov	r0, r5
   122c8:	bl	10f24 <memcpy@plt>
   122cc:	ldr	r4, [r4, #4]
   122d0:	add	r5, r5, #125	; 0x7d
   122d4:	cmp	r4, #0
   122d8:	bne	122b8 <tabela_elementos@@Base+0x74>
   122dc:	b	12290 <tabela_elementos@@Base+0x4c>
   122e0:	mov	fp, #0
   122e4:	mov	r0, fp
   122e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000122ec <hash_krm@@Base>:
   122ec:	push	{r4, lr}
   122f0:	ldrb	r3, [r0]
   122f4:	cmp	r3, #0
   122f8:	beq	12320 <hash_krm@@Base+0x34>
   122fc:	mov	r2, r0
   12300:	mov	r0, #7
   12304:	add	r0, r0, r3
   12308:	ldrb	r3, [r2, #1]!
   1230c:	cmp	r3, #0
   12310:	bne	12304 <hash_krm@@Base+0x18>
   12314:	bl	1260c <mostraTabela@@Base+0x2a0>
   12318:	mov	r0, r1
   1231c:	pop	{r4, pc}
   12320:	mov	r0, #7
   12324:	b	12314 <hash_krm@@Base+0x28>

00012328 <hash_djbm@@Base>:
   12328:	push	{r4, lr}
   1232c:	ldrb	r3, [r0]
   12330:	cmp	r3, #0
   12334:	beq	12360 <hash_djbm@@Base+0x38>
   12338:	mov	r2, r0
   1233c:	ldr	r0, [pc, #36]	; 12368 <hash_djbm@@Base+0x40>
   12340:	rsb	r0, r0, r0, lsl #5
   12344:	eor	r0, r0, r3
   12348:	ldrb	r3, [r2, #1]!
   1234c:	cmp	r3, #0
   12350:	bne	12340 <hash_djbm@@Base+0x18>
   12354:	bl	1260c <mostraTabela@@Base+0x2a0>
   12358:	mov	r0, r1
   1235c:	pop	{r4, pc}
   12360:	ldr	r0, [pc]	; 12368 <hash_djbm@@Base+0x40>
   12364:	b	12354 <hash_djbm@@Base+0x2c>
   12368:	andeq	r1, r0, r3, ror #9

0001236c <mostraTabela@@Base>:
   1236c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12370:	mov	r7, r0
   12374:	bl	121ec <tabela_numelementos@@Base>
   12378:	mov	r1, r0
   1237c:	ldr	r0, [pc, #144]	; 12414 <mostraTabela@@Base+0xa8>
   12380:	bl	10ef4 <printf@plt>
   12384:	ldr	r3, [r7, #8]
   12388:	cmp	r3, #0
   1238c:	ble	12408 <mostraTabela@@Base+0x9c>
   12390:	mov	r6, #0
   12394:	ldr	r9, [pc, #124]	; 12418 <mostraTabela@@Base+0xac>
   12398:	ldr	r5, [pc, #124]	; 1241c <mostraTabela@@Base+0xb0>
   1239c:	mov	r8, #10
   123a0:	b	123bc <mostraTabela@@Base+0x50>
   123a4:	mov	r0, r8
   123a8:	bl	10f84 <putchar@plt>
   123ac:	add	r6, r6, #1
   123b0:	ldr	r3, [r7, #8]
   123b4:	cmp	r3, r6
   123b8:	ble	12408 <mostraTabela@@Base+0x9c>
   123bc:	ldr	r3, [r7, #4]
   123c0:	ldr	r3, [r3, r6, lsl #2]
   123c4:	cmp	r3, #0
   123c8:	beq	123ac <mostraTabela@@Base+0x40>
   123cc:	mov	r1, r6
   123d0:	mov	r0, r9
   123d4:	bl	10ef4 <printf@plt>
   123d8:	ldr	r3, [r7, #4]
   123dc:	ldr	r4, [r3, r6, lsl #2]
   123e0:	cmp	r4, #0
   123e4:	beq	123a4 <mostraTabela@@Base+0x38>
   123e8:	ldr	r1, [r4]
   123ec:	add	r2, r1, #25
   123f0:	mov	r0, r5
   123f4:	bl	10ef4 <printf@plt>
   123f8:	ldr	r4, [r4, #4]
   123fc:	cmp	r4, #0
   12400:	bne	123e8 <mostraTabela@@Base+0x7c>
   12404:	b	123a4 <mostraTabela@@Base+0x38>
   12408:	mov	r0, #10
   1240c:	bl	10f84 <putchar@plt>
   12410:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12414:	andeq	r2, r1, r8, asr #18
   12418:	andeq	r2, r1, ip, ror #18
   1241c:	andeq	r2, r1, r4, ror r9
   12420:	subs	r2, r1, #1
   12424:	bxeq	lr
   12428:	bcc	12600 <mostraTabela@@Base+0x294>
   1242c:	cmp	r0, r1
   12430:	bls	125e4 <mostraTabela@@Base+0x278>
   12434:	tst	r1, r2
   12438:	beq	125f0 <mostraTabela@@Base+0x284>
   1243c:	clz	r3, r0
   12440:	clz	r2, r1
   12444:	sub	r3, r2, r3
   12448:	rsbs	r3, r3, #31
   1244c:	addne	r3, r3, r3, lsl #1
   12450:	mov	r2, #0
   12454:	addne	pc, pc, r3, lsl #2
   12458:	nop			; (mov r0, r0)
   1245c:	cmp	r0, r1, lsl #31
   12460:	adc	r2, r2, r2
   12464:	subcs	r0, r0, r1, lsl #31
   12468:	cmp	r0, r1, lsl #30
   1246c:	adc	r2, r2, r2
   12470:	subcs	r0, r0, r1, lsl #30
   12474:	cmp	r0, r1, lsl #29
   12478:	adc	r2, r2, r2
   1247c:	subcs	r0, r0, r1, lsl #29
   12480:	cmp	r0, r1, lsl #28
   12484:	adc	r2, r2, r2
   12488:	subcs	r0, r0, r1, lsl #28
   1248c:	cmp	r0, r1, lsl #27
   12490:	adc	r2, r2, r2
   12494:	subcs	r0, r0, r1, lsl #27
   12498:	cmp	r0, r1, lsl #26
   1249c:	adc	r2, r2, r2
   124a0:	subcs	r0, r0, r1, lsl #26
   124a4:	cmp	r0, r1, lsl #25
   124a8:	adc	r2, r2, r2
   124ac:	subcs	r0, r0, r1, lsl #25
   124b0:	cmp	r0, r1, lsl #24
   124b4:	adc	r2, r2, r2
   124b8:	subcs	r0, r0, r1, lsl #24
   124bc:	cmp	r0, r1, lsl #23
   124c0:	adc	r2, r2, r2
   124c4:	subcs	r0, r0, r1, lsl #23
   124c8:	cmp	r0, r1, lsl #22
   124cc:	adc	r2, r2, r2
   124d0:	subcs	r0, r0, r1, lsl #22
   124d4:	cmp	r0, r1, lsl #21
   124d8:	adc	r2, r2, r2
   124dc:	subcs	r0, r0, r1, lsl #21
   124e0:	cmp	r0, r1, lsl #20
   124e4:	adc	r2, r2, r2
   124e8:	subcs	r0, r0, r1, lsl #20
   124ec:	cmp	r0, r1, lsl #19
   124f0:	adc	r2, r2, r2
   124f4:	subcs	r0, r0, r1, lsl #19
   124f8:	cmp	r0, r1, lsl #18
   124fc:	adc	r2, r2, r2
   12500:	subcs	r0, r0, r1, lsl #18
   12504:	cmp	r0, r1, lsl #17
   12508:	adc	r2, r2, r2
   1250c:	subcs	r0, r0, r1, lsl #17
   12510:	cmp	r0, r1, lsl #16
   12514:	adc	r2, r2, r2
   12518:	subcs	r0, r0, r1, lsl #16
   1251c:	cmp	r0, r1, lsl #15
   12520:	adc	r2, r2, r2
   12524:	subcs	r0, r0, r1, lsl #15
   12528:	cmp	r0, r1, lsl #14
   1252c:	adc	r2, r2, r2
   12530:	subcs	r0, r0, r1, lsl #14
   12534:	cmp	r0, r1, lsl #13
   12538:	adc	r2, r2, r2
   1253c:	subcs	r0, r0, r1, lsl #13
   12540:	cmp	r0, r1, lsl #12
   12544:	adc	r2, r2, r2
   12548:	subcs	r0, r0, r1, lsl #12
   1254c:	cmp	r0, r1, lsl #11
   12550:	adc	r2, r2, r2
   12554:	subcs	r0, r0, r1, lsl #11
   12558:	cmp	r0, r1, lsl #10
   1255c:	adc	r2, r2, r2
   12560:	subcs	r0, r0, r1, lsl #10
   12564:	cmp	r0, r1, lsl #9
   12568:	adc	r2, r2, r2
   1256c:	subcs	r0, r0, r1, lsl #9
   12570:	cmp	r0, r1, lsl #8
   12574:	adc	r2, r2, r2
   12578:	subcs	r0, r0, r1, lsl #8
   1257c:	cmp	r0, r1, lsl #7
   12580:	adc	r2, r2, r2
   12584:	subcs	r0, r0, r1, lsl #7
   12588:	cmp	r0, r1, lsl #6
   1258c:	adc	r2, r2, r2
   12590:	subcs	r0, r0, r1, lsl #6
   12594:	cmp	r0, r1, lsl #5
   12598:	adc	r2, r2, r2
   1259c:	subcs	r0, r0, r1, lsl #5
   125a0:	cmp	r0, r1, lsl #4
   125a4:	adc	r2, r2, r2
   125a8:	subcs	r0, r0, r1, lsl #4
   125ac:	cmp	r0, r1, lsl #3
   125b0:	adc	r2, r2, r2
   125b4:	subcs	r0, r0, r1, lsl #3
   125b8:	cmp	r0, r1, lsl #2
   125bc:	adc	r2, r2, r2
   125c0:	subcs	r0, r0, r1, lsl #2
   125c4:	cmp	r0, r1, lsl #1
   125c8:	adc	r2, r2, r2
   125cc:	subcs	r0, r0, r1, lsl #1
   125d0:	cmp	r0, r1
   125d4:	adc	r2, r2, r2
   125d8:	subcs	r0, r0, r1
   125dc:	mov	r0, r2
   125e0:	bx	lr
   125e4:	moveq	r0, #1
   125e8:	movne	r0, #0
   125ec:	bx	lr
   125f0:	clz	r2, r1
   125f4:	rsb	r2, r2, #31
   125f8:	lsr	r0, r0, r2
   125fc:	bx	lr
   12600:	cmp	r0, #0
   12604:	mvnne	r0, #0
   12608:	b	1262c <mostraTabela@@Base+0x2c0>
   1260c:	cmp	r1, #0
   12610:	beq	12600 <mostraTabela@@Base+0x294>
   12614:	push	{r0, r1, lr}
   12618:	bl	12420 <mostraTabela@@Base+0xb4>
   1261c:	pop	{r1, r2, lr}
   12620:	mul	r3, r2, r0
   12624:	sub	r1, r1, r3
   12628:	bx	lr
   1262c:	push	{r1, lr}
   12630:	mov	r0, #8
   12634:	bl	10edc <raise@plt>
   12638:	pop	{r1, pc}

0001263c <__libc_csu_init@@Base>:
   1263c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12640:	mov	r7, r0
   12644:	ldr	r6, [pc, #72]	; 12694 <__libc_csu_init@@Base+0x58>
   12648:	ldr	r5, [pc, #72]	; 12698 <__libc_csu_init@@Base+0x5c>
   1264c:	add	r6, pc, r6
   12650:	add	r5, pc, r5
   12654:	sub	r6, r6, r5
   12658:	mov	r8, r1
   1265c:	mov	r9, r2
   12660:	bl	10eb0 <calloc@plt-0x20>
   12664:	asrs	r6, r6, #2
   12668:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1266c:	mov	r4, #0
   12670:	add	r4, r4, #1
   12674:	ldr	r3, [r5], #4
   12678:	mov	r2, r9
   1267c:	mov	r1, r8
   12680:	mov	r0, r7
   12684:	blx	r3
   12688:	cmp	r6, r4
   1268c:	bne	12670 <__libc_csu_init@@Base+0x34>
   12690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12694:			; <UNDEFINED> instruction: 0x000108bc
   12698:			; <UNDEFINED> instruction: 0x000108b4

0001269c <__libc_csu_fini@@Base>:
   1269c:	bx	lr

Disassembly of section .fini:

000126a0 <.fini>:
   126a0:	push	{r3, lr}
   126a4:	pop	{r3, pc}
