
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00011168 <.init>:
   11168:	push	{r3, lr}
   1116c:	bl	114f4 <dcngettext@plt+0x48>
   11170:	pop	{r3, pc}

Disassembly of section .plt:

00011174 <calloc@plt-0x14>:
   11174:	push	{lr}		; (str lr, [sp, #-4]!)
   11178:	ldr	lr, [pc, #4]	; 11184 <calloc@plt-0x4>
   1117c:	add	lr, pc, lr
   11180:	ldr	pc, [lr, #8]!
   11184:	andeq	r6, r1, ip, ror lr

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3708]!	; 0xe7c

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #90112	; 0x16000
   1119c:	ldr	pc, [ip, #3700]!	; 0xe74

000111a0 <gmtime_r@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #90112	; 0x16000
   111a8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111ac <strcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #90112	; 0x16000
   111b4:	ldr	pc, [ip, #3684]!	; 0xe64

000111b8 <mktime@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #90112	; 0x16000
   111c0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111c4 <fflush@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #90112	; 0x16000
   111cc:	ldr	pc, [ip, #3668]!	; 0xe54

000111d0 <utmpxname@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #90112	; 0x16000
   111d8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111dc <free@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #90112	; 0x16000
   111e4:	ldr	pc, [ip, #3652]!	; 0xe44

000111e8 <_exit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #90112	; 0x16000
   111f0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111f4 <memcpy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #90112	; 0x16000
   111fc:	ldr	pc, [ip, #3636]!	; 0xe34

00011200 <mbsinit@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #90112	; 0x16000
   11208:	ldr	pc, [ip, #3628]!	; 0xe2c

0001120c <time@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #90112	; 0x16000
   11214:	ldr	pc, [ip, #3620]!	; 0xe24

00011218 <dcgettext@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #90112	; 0x16000
   11220:	ldr	pc, [ip, #3612]!	; 0xe1c

00011224 <setutxent@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #90112	; 0x16000
   1122c:	ldr	pc, [ip, #3604]!	; 0xe14

00011230 <realloc@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #90112	; 0x16000
   11238:	ldr	pc, [ip, #3596]!	; 0xe0c

0001123c <localtime_r@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #90112	; 0x16000
   11244:	ldr	pc, [ip, #3588]!	; 0xe04

00011248 <textdomain@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #90112	; 0x16000
   11250:	ldr	pc, [ip, #3580]!	; 0xdfc

00011254 <iswprint@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #90112	; 0x16000
   1125c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011260 <tzset@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #90112	; 0x16000
   11268:	ldr	pc, [ip, #3564]!	; 0xdec

0001126c <fwrite@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #90112	; 0x16000
   11274:	ldr	pc, [ip, #3556]!	; 0xde4

00011278 <lseek64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #90112	; 0x16000
   11280:	ldr	pc, [ip, #3548]!	; 0xddc

00011284 <__ctype_get_mb_cur_max@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #90112	; 0x16000
   1128c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011290 <__fpending@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #90112	; 0x16000
   11298:	ldr	pc, [ip, #3532]!	; 0xdcc

0001129c <mbrtowc@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #90112	; 0x16000
   112a4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112a8 <error@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #90112	; 0x16000
   112b0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112b4 <getenv@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #90112	; 0x16000
   112bc:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c0 <malloc@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #90112	; 0x16000
   112c8:	ldr	pc, [ip, #3500]!	; 0xdac

000112cc <__libc_start_main@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #90112	; 0x16000
   112d4:	ldr	pc, [ip, #3492]!	; 0xda4

000112d8 <strftime@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #90112	; 0x16000
   112e0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112e4 <__freading@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #90112	; 0x16000
   112ec:	ldr	pc, [ip, #3476]!	; 0xd94

000112f0 <localtime@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #90112	; 0x16000
   112f8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112fc <__ctype_tolower_loc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #90112	; 0x16000
   11304:	ldr	pc, [ip, #3460]!	; 0xd84

00011308 <__ctype_toupper_loc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #90112	; 0x16000
   11310:	ldr	pc, [ip, #3452]!	; 0xd7c

00011314 <__gmon_start__@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #90112	; 0x16000
   1131c:	ldr	pc, [ip, #3444]!	; 0xd74

00011320 <getopt_long@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #90112	; 0x16000
   11328:	ldr	pc, [ip, #3436]!	; 0xd6c

0001132c <kill@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #90112	; 0x16000
   11334:	ldr	pc, [ip, #3428]!	; 0xd64

00011338 <__ctype_b_loc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #90112	; 0x16000
   11340:	ldr	pc, [ip, #3420]!	; 0xd5c

00011344 <exit@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #90112	; 0x16000
   1134c:	ldr	pc, [ip, #3412]!	; 0xd54

00011350 <bcmp@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #90112	; 0x16000
   11358:	ldr	pc, [ip, #3404]!	; 0xd4c

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #90112	; 0x16000
   11364:	ldr	pc, [ip, #3396]!	; 0xd44

00011368 <setenv@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #90112	; 0x16000
   11370:	ldr	pc, [ip, #3388]!	; 0xd3c

00011374 <__errno_location@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #90112	; 0x16000
   1137c:	ldr	pc, [ip, #3380]!	; 0xd34

00011380 <__cxa_atexit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #90112	; 0x16000
   11388:	ldr	pc, [ip, #3372]!	; 0xd2c

0001138c <memset@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #90112	; 0x16000
   11394:	ldr	pc, [ip, #3364]!	; 0xd24

00011398 <strncpy@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #90112	; 0x16000
   113a0:	ldr	pc, [ip, #3356]!	; 0xd1c

000113a4 <__printf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #90112	; 0x16000
   113ac:	ldr	pc, [ip, #3348]!	; 0xd14

000113b0 <fileno@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #90112	; 0x16000
   113b8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113bc <__fprintf_chk@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #90112	; 0x16000
   113c4:	ldr	pc, [ip, #3332]!	; 0xd04

000113c8 <fclose@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #90112	; 0x16000
   113d0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113d4 <fseeko64@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #90112	; 0x16000
   113dc:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e0 <getloadavg@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #90112	; 0x16000
   113e8:	ldr	pc, [ip, #3308]!	; 0xcec

000113ec <strtod_l@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #90112	; 0x16000
   113f4:	ldr	pc, [ip, #3300]!	; 0xce4

000113f8 <endutxent@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #90112	; 0x16000
   11400:	ldr	pc, [ip, #3292]!	; 0xcdc

00011404 <__overflow@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #90112	; 0x16000
   1140c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011410 <setlocale@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #90112	; 0x16000
   11418:	ldr	pc, [ip, #3276]!	; 0xccc

0001141c <strrchr@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #90112	; 0x16000
   11424:	ldr	pc, [ip, #3268]!	; 0xcc4

00011428 <nl_langinfo@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #90112	; 0x16000
   11430:	ldr	pc, [ip, #3260]!	; 0xcbc

00011434 <fputc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #90112	; 0x16000
   1143c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011440 <newlocale@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #90112	; 0x16000
   11448:	ldr	pc, [ip, #3244]!	; 0xcac

0001144c <timegm@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #90112	; 0x16000
   11454:	ldr	pc, [ip, #3236]!	; 0xca4

00011458 <fopen64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #90112	; 0x16000
   11460:	ldr	pc, [ip, #3228]!	; 0xc9c

00011464 <fgets_unlocked@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #90112	; 0x16000
   1146c:	ldr	pc, [ip, #3220]!	; 0xc94

00011470 <bindtextdomain@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #90112	; 0x16000
   11478:	ldr	pc, [ip, #3212]!	; 0xc8c

0001147c <unsetenv@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #90112	; 0x16000
   11484:	ldr	pc, [ip, #3204]!	; 0xc84

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #90112	; 0x16000
   11490:	ldr	pc, [ip, #3196]!	; 0xc7c

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #90112	; 0x16000
   1149c:	ldr	pc, [ip, #3188]!	; 0xc74

000114a0 <getutxent@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #90112	; 0x16000
   114a8:	ldr	pc, [ip, #3180]!	; 0xc6c

000114ac <dcngettext@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #90112	; 0x16000
   114b4:	ldr	pc, [ip, #3172]!	; 0xc64

Disassembly of section .text:

000114b8 <.text>:
   114b8:	mov	fp, #0
   114bc:	mov	lr, #0
   114c0:	pop	{r1}		; (ldr r1, [sp], #4)
   114c4:	mov	r2, sp
   114c8:	push	{r2}		; (str r2, [sp, #-4]!)
   114cc:	push	{r0}		; (str r0, [sp, #-4]!)
   114d0:	ldr	ip, [pc, #16]	; 114e8 <dcngettext@plt+0x3c>
   114d4:	push	{ip}		; (str ip, [sp, #-4]!)
   114d8:	ldr	r0, [pc, #12]	; 114ec <dcngettext@plt+0x40>
   114dc:	ldr	r3, [pc, #12]	; 114f0 <dcngettext@plt+0x44>
   114e0:	bl	112cc <__libc_start_main@plt>
   114e4:	bl	11494 <abort@plt>
   114e8:	andeq	r7, r1, r4, lsl r0
   114ec:	andeq	r1, r1, r0, asr #16
   114f0:			; <UNDEFINED> instruction: 0x00016fb4
   114f4:	ldr	r3, [pc, #20]	; 11510 <dcngettext@plt+0x64>
   114f8:	ldr	r2, [pc, #20]	; 11514 <dcngettext@plt+0x68>
   114fc:	add	r3, pc, r3
   11500:	ldr	r2, [r3, r2]
   11504:	cmp	r2, #0
   11508:	bxeq	lr
   1150c:	b	11314 <__gmon_start__@plt>
   11510:	strdeq	r6, [r1], -ip
   11514:	andeq	r0, r0, ip, lsl r1
   11518:	ldr	r0, [pc, #24]	; 11538 <dcngettext@plt+0x8c>
   1151c:	ldr	r3, [pc, #24]	; 1153c <dcngettext@plt+0x90>
   11520:	cmp	r3, r0
   11524:	bxeq	lr
   11528:	ldr	r3, [pc, #16]	; 11540 <dcngettext@plt+0x94>
   1152c:	cmp	r3, #0
   11530:	bxeq	lr
   11534:	bx	r3
   11538:	andeq	r8, r2, r0, ror r1
   1153c:	andeq	r8, r2, r0, ror r1
   11540:	andeq	r0, r0, r0
   11544:	ldr	r0, [pc, #36]	; 11570 <dcngettext@plt+0xc4>
   11548:	ldr	r1, [pc, #36]	; 11574 <dcngettext@plt+0xc8>
   1154c:	sub	r1, r1, r0
   11550:	asr	r1, r1, #2
   11554:	add	r1, r1, r1, lsr #31
   11558:	asrs	r1, r1, #1
   1155c:	bxeq	lr
   11560:	ldr	r3, [pc, #16]	; 11578 <dcngettext@plt+0xcc>
   11564:	cmp	r3, #0
   11568:	bxeq	lr
   1156c:	bx	r3
   11570:	andeq	r8, r2, r0, ror r1
   11574:	andeq	r8, r2, r0, ror r1
   11578:	andeq	r0, r0, r0
   1157c:	push	{r4, lr}
   11580:	ldr	r4, [pc, #24]	; 115a0 <dcngettext@plt+0xf4>
   11584:	ldrb	r3, [r4]
   11588:	cmp	r3, #0
   1158c:	popne	{r4, pc}
   11590:	bl	11518 <dcngettext@plt+0x6c>
   11594:	mov	r3, #1
   11598:	strb	r3, [r4]
   1159c:	pop	{r4, pc}
   115a0:	andeq	r8, r2, ip, lsl #3
   115a4:	b	11544 <dcngettext@plt+0x98>
   115a8:	push	{fp, lr}
   115ac:	mov	fp, sp
   115b0:	sub	sp, sp, #56	; 0x38
   115b4:	mov	r4, r0
   115b8:	cmp	r0, #0
   115bc:	bne	117fc <dcngettext@plt+0x350>
   115c0:	movw	r1, #28771	; 0x7063
   115c4:	mov	r0, #0
   115c8:	mov	r2, #5
   115cc:	movt	r1, #1
   115d0:	bl	11218 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r0, #33180	; 0x819c
   115dc:	movt	r0, #2
   115e0:	ldr	r2, [r0]
   115e4:	mov	r0, #1
   115e8:	bl	113a4 <__printf_chk@plt>
   115ec:	movw	r1, #28801	; 0x7081
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11218 <dcgettext@plt>
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	113a4 <__printf_chk@plt>
   1160c:	movw	r1, #28986	; 0x713a
   11610:	mov	r0, #0
   11614:	mov	r2, #5
   11618:	movt	r1, #1
   1161c:	bl	11218 <dcgettext@plt>
   11620:	mov	r1, r0
   11624:	mov	r0, #1
   11628:	bl	113a4 <__printf_chk@plt>
   1162c:	movw	r1, #29070	; 0x718e
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	movt	r1, #1
   1163c:	bl	11218 <dcgettext@plt>
   11640:	movw	r2, #29129	; 0x71c9
   11644:	movw	r3, #29143	; 0x71d7
   11648:	mov	r1, r0
   1164c:	mov	r0, #1
   11650:	movt	r2, #1
   11654:	movt	r3, #1
   11658:	bl	113a4 <__printf_chk@plt>
   1165c:	movw	r1, #29157	; 0x71e5
   11660:	mov	r0, #0
   11664:	mov	r2, #5
   11668:	movt	r1, #1
   1166c:	bl	11218 <dcgettext@plt>
   11670:	movw	r7, #33156	; 0x8184
   11674:	movt	r7, #2
   11678:	ldr	r1, [r7]
   1167c:	bl	11194 <fputs_unlocked@plt>
   11680:	movw	r1, #29202	; 0x7212
   11684:	mov	r0, #0
   11688:	mov	r2, #5
   1168c:	movt	r1, #1
   11690:	bl	11218 <dcgettext@plt>
   11694:	ldr	r1, [r7]
   11698:	bl	11194 <fputs_unlocked@plt>
   1169c:	movw	r0, #29864	; 0x74a8
   116a0:	mov	r2, #48	; 0x30
   116a4:	mov	r6, sp
   116a8:	movw	r5, #29673	; 0x73e9
   116ac:	movt	r0, #1
   116b0:	movt	r5, #1
   116b4:	add	r1, r0, #32
   116b8:	add	r3, r0, #16
   116bc:	vld1.64	{d18-d19}, [r0], r2
   116c0:	vld1.64	{d16-d17}, [r1]
   116c4:	vld1.64	{d20-d21}, [r3]
   116c8:	vldr	d22, [r0]
   116cc:	add	r1, r6, #32
   116d0:	add	r0, r6, #16
   116d4:	vst1.64	{d16-d17}, [r1]
   116d8:	movw	r1, #29356	; 0x72ac
   116dc:	vst1.64	{d20-d21}, [r0]
   116e0:	mov	r0, r6
   116e4:	movt	r1, #1
   116e8:	vst1.64	{d18-d19}, [r0], r2
   116ec:	vstr	d22, [r0]
   116f0:	mov	r0, r5
   116f4:	bl	111ac <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	ldrne	r1, [r6, #8]!
   11700:	cmpne	r1, #0
   11704:	bne	116f0 <dcngettext@plt+0x244>
   11708:	movw	r1, #29451	; 0x730b
   1170c:	ldr	r6, [r6, #4]
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	11218 <dcgettext@plt>
   11720:	movw	r2, #29280	; 0x7260
   11724:	movw	r3, #29474	; 0x7322
   11728:	mov	r1, r0
   1172c:	mov	r0, #1
   11730:	movt	r2, #1
   11734:	movt	r3, #1
   11738:	bl	113a4 <__printf_chk@plt>
   1173c:	cmp	r6, #0
   11740:	mov	r0, #5
   11744:	mov	r1, #0
   11748:	moveq	r6, r5
   1174c:	bl	11410 <setlocale@plt>
   11750:	cmp	r0, #0
   11754:	beq	1178c <dcngettext@plt+0x2e0>
   11758:	movw	r1, #29514	; 0x734a
   1175c:	mov	r2, #3
   11760:	movt	r1, #1
   11764:	bl	11488 <strncmp@plt>
   11768:	cmp	r0, #0
   1176c:	beq	1178c <dcngettext@plt+0x2e0>
   11770:	movw	r1, #29518	; 0x734e
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	11218 <dcgettext@plt>
   11784:	ldr	r1, [r7]
   11788:	bl	11194 <fputs_unlocked@plt>
   1178c:	movw	r1, #29589	; 0x7395
   11790:	mov	r0, #0
   11794:	mov	r2, #5
   11798:	movt	r1, #1
   1179c:	bl	11218 <dcgettext@plt>
   117a0:	movw	r2, #29474	; 0x7322
   117a4:	mov	r1, r0
   117a8:	mov	r0, #1
   117ac:	mov	r3, r5
   117b0:	movt	r2, #1
   117b4:	bl	113a4 <__printf_chk@plt>
   117b8:	movw	r1, #29616	; 0x73b0
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #1
   117c8:	bl	11218 <dcgettext@plt>
   117cc:	mov	r1, r0
   117d0:	movw	r0, #29384	; 0x72c8
   117d4:	movw	r3, #29128	; 0x71c8
   117d8:	cmp	r6, r5
   117dc:	mov	r2, r6
   117e0:	movt	r0, #1
   117e4:	movt	r3, #1
   117e8:	moveq	r3, r0
   117ec:	mov	r0, #1
   117f0:	bl	113a4 <__printf_chk@plt>
   117f4:	mov	r0, r4
   117f8:	bl	11344 <exit@plt>
   117fc:	movw	r0, #33152	; 0x8180
   11800:	movw	r1, #28732	; 0x703c
   11804:	mov	r2, #5
   11808:	movt	r0, #2
   1180c:	movt	r1, #1
   11810:	ldr	r5, [r0]
   11814:	mov	r0, #0
   11818:	bl	11218 <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #33180	; 0x819c
   11824:	mov	r1, #1
   11828:	movt	r0, #2
   1182c:	ldr	r3, [r0]
   11830:	mov	r0, r5
   11834:	bl	113bc <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11344 <exit@plt>
   11840:	push	{r4, r5, r6, sl, fp, lr}
   11844:	add	fp, sp, #16
   11848:	sub	sp, sp, #32
   1184c:	mov	r5, r0
   11850:	ldr	r0, [r1]
   11854:	mov	r4, r1
   11858:	bl	13ac4 <dcngettext@plt+0x2618>
   1185c:	movw	r1, #29128	; 0x71c8
   11860:	mov	r0, #6
   11864:	movt	r1, #1
   11868:	bl	11410 <setlocale@plt>
   1186c:	movw	r6, #29284	; 0x7264
   11870:	movw	r1, #29256	; 0x7248
   11874:	movt	r6, #1
   11878:	movt	r1, #1
   1187c:	mov	r0, r6
   11880:	bl	11470 <bindtextdomain@plt>
   11884:	mov	r0, r6
   11888:	bl	11248 <textdomain@plt>
   1188c:	movw	r0, #7736	; 0x1e38
   11890:	movt	r0, #1
   11894:	bl	17018 <dcngettext@plt+0x5b6c>
   11898:	movw	r0, #33064	; 0x8128
   1189c:	movw	r3, #29311	; 0x727f
   118a0:	movw	r1, #5544	; 0x15a8
   118a4:	movw	lr, #29327	; 0x728f
   118a8:	movw	r6, #29294	; 0x726e
   118ac:	mov	r2, #1
   118b0:	mov	ip, #0
   118b4:	movt	r0, #2
   118b8:	movt	r3, #1
   118bc:	movt	r1, #1
   118c0:	movt	lr, #1
   118c4:	movt	r6, #1
   118c8:	ldr	r0, [r0]
   118cc:	stm	sp, {r0, r2}
   118d0:	movw	r2, #29673	; 0x73e9
   118d4:	str	r3, [sp, #16]
   118d8:	movw	r3, #29280	; 0x7260
   118dc:	str	r1, [sp, #8]
   118e0:	mov	r0, r5
   118e4:	mov	r1, r4
   118e8:	str	r6, [sp, #12]
   118ec:	str	lr, [sp, #20]
   118f0:	str	ip, [sp, #24]
   118f4:	movt	r2, #1
   118f8:	movt	r3, #1
   118fc:	bl	13a00 <dcngettext@plt+0x2554>
   11900:	movw	r6, #33144	; 0x8178
   11904:	movt	r6, #2
   11908:	ldr	r0, [r6]
   1190c:	sub	r1, r5, r0
   11910:	cmp	r1, #1
   11914:	beq	11930 <dcngettext@plt+0x484>
   11918:	cmp	r1, #0
   1191c:	bne	1193c <dcngettext@plt+0x490>
   11920:	movw	r0, #29129	; 0x71c9
   11924:	mov	r1, #1
   11928:	movt	r0, #1
   1192c:	bl	11980 <dcngettext@plt+0x4d4>
   11930:	ldr	r0, [r4, r0, lsl #2]
   11934:	mov	r1, #0
   11938:	bl	11980 <dcngettext@plt+0x4d4>
   1193c:	movw	r1, #29339	; 0x729b
   11940:	mov	r0, #0
   11944:	mov	r2, #5
   11948:	movt	r1, #1
   1194c:	bl	11218 <dcgettext@plt>
   11950:	mov	r5, r0
   11954:	ldr	r0, [r6]
   11958:	add	r0, r4, r0, lsl #2
   1195c:	ldr	r0, [r0, #4]
   11960:	bl	15718 <dcngettext@plt+0x426c>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	mov	r1, #0
   11970:	mov	r2, r5
   11974:	bl	112a8 <error@plt>
   11978:	mov	r0, #1
   1197c:	bl	115a8 <dcngettext@plt+0xfc>
   11980:	push	{fp, lr}
   11984:	mov	fp, sp
   11988:	sub	sp, sp, #8
   1198c:	mov	r4, r0
   11990:	mov	r0, #0
   11994:	mov	r3, r1
   11998:	add	r1, sp, #4
   1199c:	mov	r2, sp
   119a0:	str	r0, [sp]
   119a4:	mov	r0, r4
   119a8:	bl	158c8 <dcngettext@plt+0x441c>
   119ac:	cmp	r0, #0
   119b0:	bne	119c8 <dcngettext@plt+0x51c>
   119b4:	ldr	r1, [sp]
   119b8:	ldr	r0, [sp, #4]
   119bc:	bl	119f8 <dcngettext@plt+0x54c>
   119c0:	mov	r0, #0
   119c4:	bl	11344 <exit@plt>
   119c8:	bl	11374 <__errno_location@plt>
   119cc:	ldr	r5, [r0]
   119d0:	mov	r0, #0
   119d4:	mov	r1, #3
   119d8:	mov	r2, r4
   119dc:	bl	1546c <dcngettext@plt+0x3fc0>
   119e0:	movw	r2, #29953	; 0x7501
   119e4:	mov	r3, r0
   119e8:	mov	r0, #1
   119ec:	mov	r1, r5
   119f0:	movt	r2, #1
   119f4:	bl	112a8 <error@plt>
   119f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119fc:	add	fp, sp, #28
   11a00:	sub	sp, sp, #20
   11a04:	sub	sp, sp, #8192	; 0x2000
   11a08:	mov	r5, r1
   11a0c:	movw	r1, #29818	; 0x747a
   11a10:	mov	r6, r0
   11a14:	movw	r0, #29667	; 0x73e3
   11a18:	movt	r0, #1
   11a1c:	movt	r1, #1
   11a20:	bl	11458 <fopen64@plt>
   11a24:	mov	r7, #0
   11a28:	cmp	r0, #0
   11a2c:	mov	sl, #0
   11a30:	beq	11aa8 <dcngettext@plt+0x5fc>
   11a34:	mov	r4, r0
   11a38:	add	r8, sp, #8
   11a3c:	mov	r1, #8192	; 0x2000
   11a40:	mov	r0, r8
   11a44:	mov	r2, r4
   11a48:	bl	11464 <fgets_unlocked@plt>
   11a4c:	mov	sl, #0
   11a50:	cmp	r0, r8
   11a54:	bne	11aa0 <dcngettext@plt+0x5f4>
   11a58:	sub	r1, fp, #36	; 0x24
   11a5c:	mov	r0, r8
   11a60:	bl	11db0 <dcngettext@plt+0x904>
   11a64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a68:	cmp	r8, r0
   11a6c:	beq	11a9c <dcngettext@plt+0x5f0>
   11a70:	vldr	d16, [pc, #816]	; 11da8 <dcngettext@plt+0x8fc>
   11a74:	vcvt.s32.f64	s2, d0
   11a78:	mvn	r0, #0
   11a7c:	vcmpe.f64	d0, d16
   11a80:	vmov	sl, s2
   11a84:	vmrs	APSR_nzcv, fpscr
   11a88:	vcmpe.f64	d0, #0.0
   11a8c:	movpl	sl, r0
   11a90:	vmrs	APSR_nzcv, fpscr
   11a94:	movlt	sl, r0
   11a98:	b	11aa0 <dcngettext@plt+0x5f4>
   11a9c:	mov	sl, #0
   11aa0:	mov	r0, r4
   11aa4:	bl	11f20 <dcngettext@plt+0xa74>
   11aa8:	cmp	r6, #0
   11aac:	mov	r4, #0
   11ab0:	beq	11af8 <dcngettext@plt+0x64c>
   11ab4:	mov	r4, #0
   11ab8:	mov	r7, #0
   11abc:	ldrb	r0, [r5, #44]	; 0x2c
   11ac0:	ldrh	r1, [r5]
   11ac4:	sub	r6, r6, #1
   11ac8:	cmp	r0, #0
   11acc:	sub	r2, r1, #7
   11ad0:	movwne	r0, #1
   11ad4:	cmp	r1, #2
   11ad8:	clz	r2, r2
   11adc:	ldreq	r7, [r5, #340]	; 0x154
   11ae0:	lsr	r2, r2, #5
   11ae4:	add	r5, r5, #384	; 0x180
   11ae8:	cmp	r6, #0
   11aec:	and	r0, r2, r0
   11af0:	add	r4, r4, r0
   11af4:	bne	11abc <dcngettext@plt+0x610>
   11af8:	mov	r0, #0
   11afc:	bl	1120c <time@plt>
   11b00:	cmp	sl, #0
   11b04:	str	r0, [fp, #-36]	; 0xffffffdc
   11b08:	bne	11b18 <dcngettext@plt+0x66c>
   11b0c:	cmp	r7, #0
   11b10:	beq	11d7c <dcngettext@plt+0x8d0>
   11b14:	sub	sl, r0, r7
   11b18:	sub	r0, fp, #36	; 0x24
   11b1c:	bl	112f0 <localtime@plt>
   11b20:	movw	r8, #33156	; 0x8184
   11b24:	cmp	r0, #0
   11b28:	movt	r8, #2
   11b2c:	beq	11c10 <dcngettext@plt+0x764>
   11b30:	movw	r1, #29703	; 0x7407
   11b34:	ldr	r6, [r8]
   11b38:	mov	r5, r0
   11b3c:	mov	r0, #0
   11b40:	mov	r2, #5
   11b44:	mov	r7, #0
   11b48:	movt	r1, #1
   11b4c:	bl	11218 <dcgettext@plt>
   11b50:	mov	r1, r0
   11b54:	mov	r0, r6
   11b58:	mov	r2, r5
   11b5c:	mov	r3, #0
   11b60:	str	r7, [sp]
   11b64:	bl	12018 <dcngettext@plt+0xb6c>
   11b68:	cmn	sl, #1
   11b6c:	beq	11c38 <dcngettext@plt+0x78c>
   11b70:	movw	r0, #17671	; 0x4507
   11b74:	movt	r0, #49710	; 0xc22e
   11b78:	smmla	r0, sl, r0, sl
   11b7c:	asr	r1, r0, #16
   11b80:	add	r6, r1, r0, lsr #31
   11b84:	movw	r0, #44672	; 0xae80
   11b88:	movw	r1, #46021	; 0xb3c5
   11b8c:	movt	r0, #65534	; 0xfffe
   11b90:	movt	r1, #37282	; 0x91a2
   11b94:	mla	r0, r6, r0, sl
   11b98:	smmla	r1, r0, r1, r0
   11b9c:	asr	r2, r1, #11
   11ba0:	add	r5, r2, r1, lsr #31
   11ba4:	movw	r1, #61936	; 0xf1f0
   11ba8:	movt	r1, #65535	; 0xffff
   11bac:	mla	r0, r5, r1, r0
   11bb0:	movw	r1, #34953	; 0x8889
   11bb4:	movt	r1, #34952	; 0x8888
   11bb8:	smmla	r0, r0, r1, r0
   11bbc:	asr	r1, r0, #5
   11bc0:	add	r9, r1, r0, lsr #31
   11bc4:	movw	r0, #20864	; 0x5180
   11bc8:	movt	r0, #1
   11bcc:	cmp	sl, r0
   11bd0:	blt	11c5c <dcngettext@plt+0x7b0>
   11bd4:	movw	r1, #29748	; 0x7434
   11bd8:	movw	r2, #29771	; 0x744b
   11bdc:	mov	r0, #5
   11be0:	mov	r3, r6
   11be4:	movt	r1, #1
   11be8:	movt	r2, #1
   11bec:	str	r0, [sp]
   11bf0:	mov	r0, #0
   11bf4:	bl	114ac <dcngettext@plt>
   11bf8:	mov	r1, r0
   11bfc:	str	r9, [sp]
   11c00:	mov	r0, #1
   11c04:	mov	r2, r6
   11c08:	mov	r3, r5
   11c0c:	b	11c80 <dcngettext@plt+0x7d4>
   11c10:	movw	r1, #29715	; 0x7413
   11c14:	mov	r0, #0
   11c18:	mov	r2, #5
   11c1c:	movt	r1, #1
   11c20:	bl	11218 <dcgettext@plt>
   11c24:	mov	r1, r0
   11c28:	mov	r0, #1
   11c2c:	bl	113a4 <__printf_chk@plt>
   11c30:	cmn	sl, #1
   11c34:	bne	11b70 <dcngettext@plt+0x6c4>
   11c38:	movw	r1, #29726	; 0x741e
   11c3c:	mov	r0, #0
   11c40:	mov	r2, #5
   11c44:	movt	r1, #1
   11c48:	bl	11218 <dcgettext@plt>
   11c4c:	mov	r1, r0
   11c50:	mov	r0, #1
   11c54:	bl	113a4 <__printf_chk@plt>
   11c58:	b	11c84 <dcngettext@plt+0x7d8>
   11c5c:	movw	r1, #29795	; 0x7463
   11c60:	mov	r0, #0
   11c64:	mov	r2, #5
   11c68:	movt	r1, #1
   11c6c:	bl	11218 <dcgettext@plt>
   11c70:	mov	r1, r0
   11c74:	mov	r0, #1
   11c78:	mov	r2, r5
   11c7c:	mov	r3, r9
   11c80:	bl	113a4 <__printf_chk@plt>
   11c84:	movw	r1, #29811	; 0x7473
   11c88:	movw	r2, #29820	; 0x747c
   11c8c:	mov	r0, #5
   11c90:	mov	r3, r4
   11c94:	movt	r1, #1
   11c98:	movt	r2, #1
   11c9c:	str	r0, [sp]
   11ca0:	mov	r0, #0
   11ca4:	bl	114ac <dcngettext@plt>
   11ca8:	mov	r1, r0
   11cac:	mov	r0, #1
   11cb0:	mov	r2, r4
   11cb4:	bl	113a4 <__printf_chk@plt>
   11cb8:	add	r0, sp, #8
   11cbc:	mov	r1, #3
   11cc0:	bl	113e0 <getloadavg@plt>
   11cc4:	cmn	r0, #1
   11cc8:	beq	11d40 <dcngettext@plt+0x894>
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #1
   11cd4:	blt	11d64 <dcngettext@plt+0x8b8>
   11cd8:	movw	r1, #29830	; 0x7486
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11218 <dcgettext@plt>
   11cec:	vldr	d16, [sp, #8]
   11cf0:	mov	r1, r0
   11cf4:	mov	r0, #1
   11cf8:	vmov	r2, r3, d16
   11cfc:	bl	113a4 <__printf_chk@plt>
   11d00:	cmp	r4, #1
   11d04:	beq	11d40 <dcngettext@plt+0x894>
   11d08:	vldr	d16, [sp, #16]
   11d0c:	movw	r1, #29852	; 0x749c
   11d10:	mov	r0, #1
   11d14:	movt	r1, #1
   11d18:	vmov	r2, r3, d16
   11d1c:	bl	113a4 <__printf_chk@plt>
   11d20:	cmp	r4, #3
   11d24:	blt	11d40 <dcngettext@plt+0x894>
   11d28:	vldr	d16, [sp, #24]
   11d2c:	movw	r1, #29852	; 0x749c
   11d30:	mov	r0, #1
   11d34:	movt	r1, #1
   11d38:	vmov	r2, r3, d16
   11d3c:	bl	113a4 <__printf_chk@plt>
   11d40:	ldr	r0, [r8]
   11d44:	ldr	r1, [r0, #20]
   11d48:	ldr	r2, [r0, #24]
   11d4c:	cmp	r1, r2
   11d50:	bcs	11d6c <dcngettext@plt+0x8c0>
   11d54:	add	r2, r1, #1
   11d58:	str	r2, [r0, #20]
   11d5c:	mov	r0, #10
   11d60:	strb	r0, [r1]
   11d64:	sub	sp, fp, #28
   11d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d6c:	mov	r1, #10
   11d70:	bl	11404 <__overflow@plt>
   11d74:	sub	sp, fp, #28
   11d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d7c:	bl	11374 <__errno_location@plt>
   11d80:	movw	r1, #29680	; 0x73f0
   11d84:	ldr	r4, [r0]
   11d88:	mov	r0, #0
   11d8c:	mov	r2, #5
   11d90:	movt	r1, #1
   11d94:	bl	11218 <dcgettext@plt>
   11d98:	mov	r2, r0
   11d9c:	mov	r0, #1
   11da0:	mov	r1, r4
   11da4:	bl	112a8 <error@plt>
   11da8:			; <UNDEFINED> instruction: 0xffc00000
   11dac:	ldrshmi	pc, [pc, #255]	; 11eb3 <dcngettext@plt+0xa07>	; <UNPREDICTABLE>
   11db0:	push	{r4, r5, r6, sl, fp, lr}
   11db4:	add	fp, sp, #16
   11db8:	movw	r6, #33168	; 0x8190
   11dbc:	mov	r5, r0
   11dc0:	mov	r4, r1
   11dc4:	movt	r6, #2
   11dc8:	ldr	r0, [r6]
   11dcc:	cmp	r0, #0
   11dd0:	bne	11dec <dcngettext@plt+0x940>
   11dd4:	movw	r1, #29935	; 0x74ef
   11dd8:	movw	r0, #8127	; 0x1fbf
   11ddc:	mov	r2, #0
   11de0:	movt	r1, #1
   11de4:	bl	11440 <newlocale@plt>
   11de8:	str	r0, [r6]
   11dec:	ldr	r2, [r6]
   11df0:	cmp	r2, #0
   11df4:	beq	11e08 <dcngettext@plt+0x95c>
   11df8:	mov	r0, r5
   11dfc:	mov	r1, r4
   11e00:	pop	{r4, r5, r6, sl, fp, lr}
   11e04:	b	113ec <strtod_l@plt>
   11e08:	vmov.i32	d0, #0	; 0x00000000
   11e0c:	cmp	r4, #0
   11e10:	strne	r5, [r4]
   11e14:	pop	{r4, r5, r6, sl, fp, pc}
   11e18:	movw	r1, #33172	; 0x8194
   11e1c:	movt	r1, #2
   11e20:	str	r0, [r1]
   11e24:	bx	lr
   11e28:	movw	r1, #33176	; 0x8198
   11e2c:	movt	r1, #2
   11e30:	strb	r0, [r1]
   11e34:	bx	lr
   11e38:	push	{r4, r5, r6, sl, fp, lr}
   11e3c:	add	fp, sp, #16
   11e40:	sub	sp, sp, #8
   11e44:	movw	r0, #33156	; 0x8184
   11e48:	movt	r0, #2
   11e4c:	ldr	r0, [r0]
   11e50:	bl	16d24 <dcngettext@plt+0x5878>
   11e54:	cmp	r0, #0
   11e58:	beq	11e80 <dcngettext@plt+0x9d4>
   11e5c:	movw	r0, #33176	; 0x8198
   11e60:	movt	r0, #2
   11e64:	ldrb	r0, [r0]
   11e68:	cmp	r0, #0
   11e6c:	beq	11ea0 <dcngettext@plt+0x9f4>
   11e70:	bl	11374 <__errno_location@plt>
   11e74:	ldr	r0, [r0]
   11e78:	cmp	r0, #32
   11e7c:	bne	11ea0 <dcngettext@plt+0x9f4>
   11e80:	movw	r0, #33152	; 0x8180
   11e84:	movt	r0, #2
   11e88:	ldr	r0, [r0]
   11e8c:	bl	16d24 <dcngettext@plt+0x5878>
   11e90:	cmp	r0, #0
   11e94:	subeq	sp, fp, #16
   11e98:	popeq	{r4, r5, r6, sl, fp, pc}
   11e9c:	b	11f10 <dcngettext@plt+0xa64>
   11ea0:	movw	r1, #29937	; 0x74f1
   11ea4:	mov	r0, #0
   11ea8:	mov	r2, #5
   11eac:	movt	r1, #1
   11eb0:	bl	11218 <dcgettext@plt>
   11eb4:	mov	r4, r0
   11eb8:	movw	r0, #33172	; 0x8194
   11ebc:	movt	r0, #2
   11ec0:	ldr	r6, [r0]
   11ec4:	bl	11374 <__errno_location@plt>
   11ec8:	ldr	r5, [r0]
   11ecc:	cmp	r6, #0
   11ed0:	bne	11eec <dcngettext@plt+0xa40>
   11ed4:	movw	r2, #29953	; 0x7501
   11ed8:	mov	r0, #0
   11edc:	mov	r1, r5
   11ee0:	mov	r3, r4
   11ee4:	movt	r2, #1
   11ee8:	b	11f0c <dcngettext@plt+0xa60>
   11eec:	mov	r0, r6
   11ef0:	bl	15390 <dcngettext@plt+0x3ee4>
   11ef4:	movw	r2, #29949	; 0x74fd
   11ef8:	mov	r3, r0
   11efc:	str	r4, [sp]
   11f00:	mov	r0, #0
   11f04:	mov	r1, r5
   11f08:	movt	r2, #1
   11f0c:	bl	112a8 <error@plt>
   11f10:	movw	r0, #33068	; 0x812c
   11f14:	movt	r0, #2
   11f18:	ldr	r0, [r0]
   11f1c:	bl	111e8 <_exit@plt>
   11f20:	push	{r4, r5, r6, sl, fp, lr}
   11f24:	add	fp, sp, #16
   11f28:	sub	sp, sp, #8
   11f2c:	mov	r4, r0
   11f30:	bl	113b0 <fileno@plt>
   11f34:	cmn	r0, #1
   11f38:	ble	11fac <dcngettext@plt+0xb00>
   11f3c:	mov	r0, r4
   11f40:	bl	112e4 <__freading@plt>
   11f44:	cmp	r0, #0
   11f48:	beq	11f74 <dcngettext@plt+0xac8>
   11f4c:	mov	r0, r4
   11f50:	bl	113b0 <fileno@plt>
   11f54:	mov	r1, #1
   11f58:	mov	r2, #0
   11f5c:	mov	r3, #0
   11f60:	str	r1, [sp]
   11f64:	bl	11278 <lseek64@plt>
   11f68:	and	r0, r0, r1
   11f6c:	cmn	r0, #1
   11f70:	beq	11fac <dcngettext@plt+0xb00>
   11f74:	mov	r0, r4
   11f78:	bl	11fbc <dcngettext@plt+0xb10>
   11f7c:	cmp	r0, #0
   11f80:	beq	11fac <dcngettext@plt+0xb00>
   11f84:	bl	11374 <__errno_location@plt>
   11f88:	ldr	r6, [r0]
   11f8c:	mov	r5, r0
   11f90:	mov	r0, r4
   11f94:	bl	113c8 <fclose@plt>
   11f98:	cmp	r6, #0
   11f9c:	strne	r6, [r5]
   11fa0:	mvnne	r0, #0
   11fa4:	sub	sp, fp, #16
   11fa8:	pop	{r4, r5, r6, sl, fp, pc}
   11fac:	mov	r0, r4
   11fb0:	sub	sp, fp, #16
   11fb4:	pop	{r4, r5, r6, sl, fp, lr}
   11fb8:	b	113c8 <fclose@plt>
   11fbc:	push	{r4, sl, fp, lr}
   11fc0:	add	fp, sp, #8
   11fc4:	sub	sp, sp, #8
   11fc8:	mov	r4, r0
   11fcc:	cmp	r0, #0
   11fd0:	beq	12008 <dcngettext@plt+0xb5c>
   11fd4:	mov	r0, r4
   11fd8:	bl	112e4 <__freading@plt>
   11fdc:	cmp	r0, #0
   11fe0:	beq	12008 <dcngettext@plt+0xb5c>
   11fe4:	ldrb	r0, [r4, #1]
   11fe8:	tst	r0, #1
   11fec:	beq	12008 <dcngettext@plt+0xb5c>
   11ff0:	mov	r0, #1
   11ff4:	mov	r2, #0
   11ff8:	mov	r3, #0
   11ffc:	str	r0, [sp]
   12000:	mov	r0, r4
   12004:	bl	138a8 <dcngettext@plt+0x23fc>
   12008:	mov	r0, r4
   1200c:	sub	sp, fp, #8
   12010:	pop	{r4, sl, fp, lr}
   12014:	b	111c4 <fflush@plt>
   12018:	push	{fp, lr}
   1201c:	mov	fp, sp
   12020:	sub	sp, sp, #16
   12024:	str	r3, [sp, #8]
   12028:	mvn	r3, #0
   1202c:	str	r3, [sp, #4]
   12030:	mov	r3, #0
   12034:	str	r3, [sp]
   12038:	ldr	r3, [fp, #8]
   1203c:	str	r3, [sp, #12]
   12040:	mov	r3, #0
   12044:	bl	12050 <dcngettext@plt+0xba4>
   12048:	mov	sp, fp
   1204c:	pop	{fp, pc}
   12050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12054:	add	fp, sp, #28
   12058:	sub	sp, sp, #124	; 0x7c
   1205c:	sub	sp, sp, #1024	; 0x400
   12060:	str	r3, [sp, #80]	; 0x50
   12064:	mov	r4, r2
   12068:	mov	sl, r1
   1206c:	mov	r7, r0
   12070:	bl	11374 <__errno_location@plt>
   12074:	mov	r2, r4
   12078:	movw	r5, #29128	; 0x71c8
   1207c:	ldrb	r3, [sl]
   12080:	str	r0, [sp, #60]	; 0x3c
   12084:	ldr	r1, [r2, #8]!
   12088:	movt	r5, #1
   1208c:	cmp	r1, #0
   12090:	mov	r6, r1
   12094:	movweq	r6, #12
   12098:	cmp	r1, #12
   1209c:	subgt	r6, r1, #12
   120a0:	ldr	r1, [r2, #32]
   120a4:	cmp	r1, #0
   120a8:	movne	r5, r1
   120ac:	ldr	r1, [r0]
   120b0:	cmp	r3, #0
   120b4:	str	r1, [sp, #56]	; 0x38
   120b8:	beq	13870 <dcngettext@plt+0x23c4>
   120bc:	sub	r0, fp, #46	; 0x2e
   120c0:	mvn	r1, #13
   120c4:	str	r6, [sp, #36]	; 0x24
   120c8:	ldr	r6, [fp, #12]
   120cc:	str	r2, [sp, #40]	; 0x28
   120d0:	mov	ip, #0
   120d4:	str	r5, [sp, #44]	; 0x2c
   120d8:	str	r4, [sp, #72]	; 0x48
   120dc:	str	r7, [sp, #88]	; 0x58
   120e0:	sub	r1, r1, r0
   120e4:	str	r1, [sp, #28]
   120e8:	add	r1, r0, #13
   120ec:	add	r0, r0, #14
   120f0:	str	r1, [sp, #24]
   120f4:	add	r1, sp, #96	; 0x60
   120f8:	str	r0, [sp, #64]	; 0x40
   120fc:	add	r1, r1, #1
   12100:	str	r1, [sp, #48]	; 0x30
   12104:	sub	r1, fp, #51	; 0x33
   12108:	add	r2, r1, #3
   1210c:	add	r1, r1, #2
   12110:	str	r1, [sp, #68]	; 0x44
   12114:	add	r1, r4, #12
   12118:	str	r2, [sp, #52]	; 0x34
   1211c:	str	r1, [sp, #32]
   12120:	b	1214c <dcngettext@plt+0xca0>
   12124:	uxtb	r0, r3
   12128:	mov	r1, r7
   1212c:	bl	11434 <fputc@plt>
   12130:	mov	ip, r9
   12134:	add	ip, r4, ip
   12138:	mov	sl, r8
   1213c:	ldrb	r3, [sl, #1]!
   12140:	mvn	r6, #0
   12144:	cmp	r3, #0
   12148:	beq	13874 <dcngettext@plt+0x23c8>
   1214c:	uxtb	r1, r3
   12150:	mov	r8, sl
   12154:	cmp	r1, #37	; 0x25
   12158:	bne	121f4 <dcngettext@plt+0xd48>
   1215c:	ldr	lr, [sp, #80]	; 0x50
   12160:	mov	r4, #0
   12164:	mov	r9, #0
   12168:	mov	sl, r8
   1216c:	add	r1, sl, #2
   12170:	add	sl, sl, #1
   12174:	b	1218c <dcngettext@plt+0xce0>
   12178:	cmp	r0, #95	; 0x5f
   1217c:	bne	121e4 <dcngettext@plt+0xd38>
   12180:	add	r1, r1, #1
   12184:	add	sl, sl, #1
   12188:	mov	r9, r0
   1218c:	ldrb	r0, [sl]
   12190:	sub	r2, r0, #35	; 0x23
   12194:	cmp	r2, #13
   12198:	bhi	12178 <dcngettext@plt+0xccc>
   1219c:	add	r3, pc, #0
   121a0:	ldr	pc, [r3, r2, lsl #2]
   121a4:	ldrdeq	r2, [r1], -ip
   121a8:	andeq	r2, r1, ip, asr #4
   121ac:	andeq	r2, r1, ip, asr #4
   121b0:	andeq	r2, r1, ip, asr #4
   121b4:	andeq	r2, r1, ip, asr #4
   121b8:	andeq	r2, r1, ip, asr #4
   121bc:	andeq	r2, r1, ip, asr #4
   121c0:	andeq	r2, r1, ip, asr #4
   121c4:	andeq	r2, r1, r0, lsl #3
   121c8:	andeq	r2, r1, ip, asr #4
   121cc:	andeq	r2, r1, r0, lsl #3
   121d0:	andeq	r2, r1, ip, asr #4
   121d4:	andeq	r2, r1, ip, asr #4
   121d8:	andeq	r2, r1, r0, lsl #3
   121dc:	mov	r4, #1
   121e0:	b	1216c <dcngettext@plt+0xcc0>
   121e4:	cmp	r0, #94	; 0x5e
   121e8:	bne	1224c <dcngettext@plt+0xda0>
   121ec:	mov	lr, #1
   121f0:	b	1216c <dcngettext@plt+0xcc0>
   121f4:	bic	r1, r6, r6, asr #31
   121f8:	mov	r4, #1
   121fc:	mvn	r2, ip
   12200:	cmp	r1, #1
   12204:	movhi	r4, r1
   12208:	cmp	r4, r2
   1220c:	bcs	13884 <dcngettext@plt+0x23d8>
   12210:	cmp	r7, #0
   12214:	beq	12134 <dcngettext@plt+0xc88>
   12218:	mov	r9, ip
   1221c:	cmp	r1, #2
   12220:	bcc	12124 <dcngettext@plt+0xc78>
   12224:	sub	r5, r1, #1
   12228:	mov	r6, #0
   1222c:	mov	r0, #32
   12230:	mov	r1, r7
   12234:	bl	11434 <fputc@plt>
   12238:	add	r6, r6, #1
   1223c:	cmp	r6, r5
   12240:	bcc	1222c <dcngettext@plt+0xd80>
   12244:	ldrb	r3, [r8]
   12248:	b	12124 <dcngettext@plt+0xc78>
   1224c:	sub	r2, r0, #48	; 0x30
   12250:	cmp	r2, #9
   12254:	bhi	122cc <dcngettext@plt+0xe20>
   12258:	movw	r5, #52428	; 0xcccc
   1225c:	mov	r6, #0
   12260:	mov	r7, #-2147483648	; 0x80000000
   12264:	movt	r5, #3276	; 0xccc
   12268:	cmn	r6, #1
   1226c:	bgt	122a4 <dcngettext@plt+0xdf8>
   12270:	b	122b0 <dcngettext@plt+0xe04>
   12274:	add	r2, r6, r6, lsl #2
   12278:	lsl	r3, r2, #1
   1227c:	uxtab	r0, r3, r0
   12280:	sub	r6, r0, #48	; 0x30
   12284:	cmp	r6, r2, lsl #1
   12288:	mvnvs	r6, #-2147483648	; 0x80000000
   1228c:	ldrb	r0, [r1], #1
   12290:	sub	r2, r0, #48	; 0x30
   12294:	cmp	r2, #10
   12298:	bcs	122c8 <dcngettext@plt+0xe1c>
   1229c:	cmn	r6, #1
   122a0:	ble	122b0 <dcngettext@plt+0xe04>
   122a4:	cmp	r6, r5
   122a8:	ble	12274 <dcngettext@plt+0xdc8>
   122ac:	b	122c0 <dcngettext@plt+0xe14>
   122b0:	beq	12274 <dcngettext@plt+0xdc8>
   122b4:	sdiv	r2, r7, r6
   122b8:	cmp	r2, #10
   122bc:	bge	12274 <dcngettext@plt+0xdc8>
   122c0:	mvn	r6, #-2147483648	; 0x80000000
   122c4:	b	1228c <dcngettext@plt+0xde0>
   122c8:	sub	sl, r1, #1
   122cc:	cmp	r0, #79	; 0x4f
   122d0:	cmpne	r0, #69	; 0x45
   122d4:	bne	122e0 <dcngettext@plt+0xe34>
   122d8:	ldrb	r1, [sl, #1]!
   122dc:	b	122e8 <dcngettext@plt+0xe3c>
   122e0:	mov	r1, r0
   122e4:	mov	r0, #0
   122e8:	cmp	r1, #122	; 0x7a
   122ec:	str	ip, [sp, #92]	; 0x5c
   122f0:	bhi	12fac <dcngettext@plt+0x1b00>
   122f4:	str	r4, [sp, #76]	; 0x4c
   122f8:	movw	r5, #26215	; 0x6667
   122fc:	movw	r3, #29974	; 0x7516
   12300:	add	r2, pc, #16
   12304:	mov	r7, #0
   12308:	mvn	r4, #0
   1230c:	movt	r5, #26214	; 0x6666
   12310:	movt	r3, #1
   12314:	ldr	pc, [r2, r1, lsl #2]
   12318:	andeq	r2, r1, r8, ror r6
   1231c:	andeq	r2, r1, r8, lsr #31
   12320:	andeq	r2, r1, r8, lsr #31
   12324:	andeq	r2, r1, r8, lsr #31
   12328:	andeq	r2, r1, r8, lsr #31
   1232c:	andeq	r2, r1, r8, lsr #31
   12330:	andeq	r2, r1, r8, lsr #31
   12334:	andeq	r2, r1, r8, lsr #31
   12338:	andeq	r2, r1, r8, lsr #31
   1233c:	andeq	r2, r1, r8, lsr #31
   12340:	andeq	r2, r1, r8, lsr #31
   12344:	andeq	r2, r1, r8, lsr #31
   12348:	andeq	r2, r1, r8, lsr #31
   1234c:	andeq	r2, r1, r8, lsr #31
   12350:	andeq	r2, r1, r8, lsr #31
   12354:	andeq	r2, r1, r8, lsr #31
   12358:	andeq	r2, r1, r8, lsr #31
   1235c:	andeq	r2, r1, r8, lsr #31
   12360:	andeq	r2, r1, r8, lsr #31
   12364:	andeq	r2, r1, r8, lsr #31
   12368:	andeq	r2, r1, r8, lsr #31
   1236c:	andeq	r2, r1, r8, lsr #31
   12370:	andeq	r2, r1, r8, lsr #31
   12374:	andeq	r2, r1, r8, lsr #31
   12378:	andeq	r2, r1, r8, lsr #31
   1237c:	andeq	r2, r1, r8, lsr #31
   12380:	andeq	r2, r1, r8, lsr #31
   12384:	andeq	r2, r1, r8, lsr #31
   12388:	andeq	r2, r1, r8, lsr #31
   1238c:	andeq	r2, r1, r8, lsr #31
   12390:	andeq	r2, r1, r8, lsr #31
   12394:	andeq	r2, r1, r8, lsr #31
   12398:	andeq	r2, r1, r8, lsr #31
   1239c:	andeq	r2, r1, r8, lsr #31
   123a0:	andeq	r2, r1, r8, lsr #31
   123a4:	andeq	r2, r1, r8, lsr #31
   123a8:	andeq	r2, r1, r8, lsr #31
   123ac:	andeq	r2, r1, ip, ror #12
   123b0:	andeq	r2, r1, r8, lsr #31
   123b4:	andeq	r2, r1, r8, lsr #31
   123b8:	andeq	r2, r1, r8, lsr #31
   123bc:	andeq	r2, r1, r8, lsr #31
   123c0:	andeq	r2, r1, r8, lsr #31
   123c4:	andeq	r2, r1, r8, lsr #31
   123c8:	andeq	r2, r1, r8, lsr #31
   123cc:	andeq	r2, r1, r8, lsr #31
   123d0:	andeq	r2, r1, r8, lsr #31
   123d4:	andeq	r2, r1, r8, lsr #31
   123d8:	andeq	r2, r1, r8, lsr #31
   123dc:	andeq	r2, r1, r8, lsr #31
   123e0:	andeq	r2, r1, r8, lsr #31
   123e4:	andeq	r2, r1, r8, lsr #31
   123e8:	andeq	r2, r1, r8, lsr #31
   123ec:	andeq	r2, r1, r8, lsr #31
   123f0:	andeq	r2, r1, r8, lsr #31
   123f4:	andeq	r2, r1, r8, lsr #31
   123f8:	andeq	r2, r1, r8, lsr #31
   123fc:	andeq	r2, r1, r8, lsr #31
   12400:	andeq	r2, r1, r0, lsl #13
   12404:	andeq	r2, r1, r8, lsr #31
   12408:	andeq	r2, r1, r8, lsr #31
   1240c:	andeq	r2, r1, r8, lsr #31
   12410:	andeq	r2, r1, r8, lsr #31
   12414:	andeq	r2, r1, r8, lsr #31
   12418:	andeq	r2, r1, r8, lsr #31
   1241c:	muleq	r1, r8, r6
   12420:			; <UNDEFINED> instruction: 0x000126b4
   12424:	ldrdeq	r2, [r1], -r0
   12428:	andeq	r2, r1, r4, ror #13
   1242c:	andeq	r2, r1, r8, lsr #31
   12430:	strdeq	r2, [r1], -r8
   12434:	andeq	r2, r1, r4, lsl #10
   12438:	andeq	r2, r1, r4, lsr #14
   1243c:	andeq	r2, r1, r8, lsr r7
   12440:	andeq	r2, r1, r8, lsr #31
   12444:	andeq	r2, r1, r8, lsr #31
   12448:	andeq	r2, r1, r8, lsr #31
   1244c:	andeq	r2, r1, ip, asr #14
   12450:	andeq	r2, r1, r0, ror #14
   12454:	andeq	r2, r1, r8, lsr #31
   12458:	andeq	r2, r1, r8, ror r8
   1245c:	andeq	r2, r1, r8, lsr #31
   12460:			; <UNDEFINED> instruction: 0x000128b0
   12464:	muleq	r1, r4, r8
   12468:	andeq	r2, r1, r8, lsr #17
   1246c:	andeq	r2, r1, ip, asr r9
   12470:	andeq	r2, r1, r4, lsl #10
   12474:	andeq	r2, r1, r8, lsl #19
   12478:	ldrdeq	r2, [r1], -r4
   1247c:	andeq	r2, r1, r8, ror #19
   12480:	andeq	r2, r1, r8, lsl sl
   12484:	andeq	r2, r1, r8, lsr #31
   12488:	andeq	r2, r1, r8, lsr #31
   1248c:	andeq	r2, r1, r8, lsr #31
   12490:	andeq	r2, r1, r8, lsr #31
   12494:	andeq	r2, r1, r8, lsr #31
   12498:	andeq	r2, r1, r8, lsr #31
   1249c:	muleq	r1, r8, sl
   124a0:	andeq	r2, r1, r4, asr r6
   124a4:			; <UNDEFINED> instruction: 0x00012ab4
   124a8:	andeq	r2, r1, r8, asr #21
   124ac:	ldrdeq	r2, [r1], -ip
   124b0:	andeq	r2, r1, r8, lsr #31
   124b4:	andeq	r2, r1, r4, lsl #10
   124b8:	andeq	r2, r1, r4, asr r6
   124bc:	andeq	r2, r1, r8, lsr #31
   124c0:	andeq	r2, r1, ip, ror #21
   124c4:	andeq	r2, r1, r8, lsl #22
   124c8:	andeq	r2, r1, ip, lsl fp
   124cc:	strdeq	r2, [r1], -r4
   124d0:	andeq	r2, r1, ip, lsl sp
   124d4:	andeq	r2, r1, r8, lsr #31
   124d8:	andeq	r2, r1, ip, ror r8
   124dc:	andeq	r2, r1, ip, lsl #27
   124e0:	muleq	r1, r4, r3
   124e4:	andeq	r2, r1, ip, lsr #27
   124e8:	andeq	r2, r1, r8, ror #28
   124ec:	ldrdeq	r2, [r1], -r8
   124f0:	andeq	r2, r1, r8, lsr #31
   124f4:	andeq	r2, r1, ip, lsl #30
   124f8:	andeq	r2, r1, r4, lsr #30
   124fc:	andeq	r2, r1, r8, lsr pc
   12500:	andeq	r2, r1, r8, asr pc
   12504:	cmp	r0, #69	; 0x45
   12508:	beq	12fa8 <dcngettext@plt+0x1afc>
   1250c:	ldr	r2, [sp, #72]	; 0x48
   12510:	movw	ip, #9363	; 0x2493
   12514:	str	lr, [sp, #84]	; 0x54
   12518:	movw	r7, #382	; 0x17e
   1251c:	movt	ip, #37449	; 0x9249
   12520:	ldr	r8, [r2, #24]
   12524:	ldr	r5, [r2, #28]
   12528:	ldr	lr, [r2, #20]
   1252c:	sub	r2, r5, r8
   12530:	cmp	lr, #0
   12534:	add	r2, r2, r7
   12538:	smmla	r4, r2, ip, r2
   1253c:	asr	r7, r4, #2
   12540:	add	r4, r7, r4, lsr #31
   12544:	rsb	r4, r4, r4, lsl #3
   12548:	sub	r2, r4, r2
   1254c:	add	r2, r5, r2
   12550:	add	r4, r2, #3
   12554:	mvn	r2, #99	; 0x63
   12558:	movwmi	r2, #300	; 0x12c
   1255c:	add	r2, r2, lr
   12560:	cmn	r4, #1
   12564:	ble	130ac <dcngettext@plt+0x1c00>
   12568:	movw	r7, #365	; 0x16d
   1256c:	tst	r2, #3
   12570:	bne	125bc <dcngettext@plt+0x1110>
   12574:	movw	r7, #34079	; 0x851f
   12578:	mov	ip, #100	; 0x64
   1257c:	movt	r7, #20971	; 0x51eb
   12580:	smmul	r7, r2, r7
   12584:	asr	r3, r7, #5
   12588:	add	r3, r3, r7, lsr #31
   1258c:	mls	ip, r3, ip, r2
   12590:	asr	r3, r7, #7
   12594:	add	r3, r3, r7, lsr #31
   12598:	mov	r7, #400	; 0x190
   1259c:	mls	r2, r3, r7, r2
   125a0:	movw	r7, #365	; 0x16d
   125a4:	cmp	r2, #0
   125a8:	movweq	r7, #366	; 0x16e
   125ac:	cmp	ip, #0
   125b0:	movw	ip, #9363	; 0x2493
   125b4:	movt	ip, #37449	; 0x9249
   125b8:	movwne	r7, #366	; 0x16e
   125bc:	add	r2, r8, r7
   125c0:	movw	r3, #382	; 0x17e
   125c4:	sub	r2, r5, r2
   125c8:	add	r2, r2, r3
   125cc:	smmla	r2, r2, ip, r2
   125d0:	asr	r3, r2, #2
   125d4:	add	r2, r3, r2, lsr #31
   125d8:	movw	r3, #379	; 0x17b
   125dc:	rsb	r2, r2, r2, lsl #3
   125e0:	add	r2, r8, r2
   125e4:	sub	r2, r2, r3
   125e8:	cmn	r2, #1
   125ec:	movgt	r4, r2
   125f0:	mvn	r2, r2
   125f4:	lsr	r3, r2, #31
   125f8:	cmp	r1, #71	; 0x47
   125fc:	beq	13130 <dcngettext@plt+0x1c84>
   12600:	cmp	r1, #103	; 0x67
   12604:	bne	131ec <dcngettext@plt+0x1d40>
   12608:	movw	r2, #34079	; 0x851f
   1260c:	mov	ip, #0
   12610:	movt	r2, #20971	; 0x51eb
   12614:	smmul	r7, lr, r2
   12618:	asr	r5, r7, #5
   1261c:	add	r7, r5, r7, lsr #31
   12620:	mov	r5, #100	; 0x64
   12624:	mls	r7, r7, r5, lr
   12628:	add	r7, r3, r7
   1262c:	smmul	r2, r7, r2
   12630:	asr	r4, r2, #5
   12634:	add	r2, r4, r2, lsr #31
   12638:	mov	r4, #2
   1263c:	mls	r2, r2, r5, r7
   12640:	cmn	r2, #1
   12644:	ble	13584 <dcngettext@plt+0x20d8>
   12648:	ldr	lr, [sp, #84]	; 0x54
   1264c:	mov	r3, r2
   12650:	b	135d0 <dcngettext@plt+0x2124>
   12654:	ldr	r2, [sp, #76]	; 0x4c
   12658:	mov	r7, #0
   1265c:	cmp	r0, #69	; 0x45
   12660:	orr	lr, r2, lr
   12664:	bne	13394 <dcngettext@plt+0x1ee8>
   12668:	b	12fa8 <dcngettext@plt+0x1afc>
   1266c:	sub	r0, sl, #1
   12670:	cmp	r0, r8
   12674:	beq	13298 <dcngettext@plt+0x1dec>
   12678:	sub	sl, sl, #1
   1267c:	b	12fa8 <dcngettext@plt+0x1afc>
   12680:	mov	r7, #1
   12684:	ldrb	r2, [sl, r7]
   12688:	cmp	r2, #58	; 0x3a
   1268c:	bne	12f4c <dcngettext@plt+0x1aa0>
   12690:	add	r7, r7, #1
   12694:	b	12684 <dcngettext@plt+0x11d8>
   12698:	cmp	r0, #0
   1269c:	bne	12fa8 <dcngettext@plt+0x1afc>
   126a0:	ldr	r1, [sp, #76]	; 0x4c
   126a4:	mov	r7, #0
   126a8:	orr	lr, r1, lr
   126ac:	mov	r1, #65	; 0x41
   126b0:	b	13394 <dcngettext@plt+0x1ee8>
   126b4:	cmp	r0, #69	; 0x45
   126b8:	beq	12fa8 <dcngettext@plt+0x1afc>
   126bc:	ldr	r1, [sp, #76]	; 0x4c
   126c0:	mov	r7, #0
   126c4:	orr	lr, r1, lr
   126c8:	mov	r1, #66	; 0x42
   126cc:	b	13394 <dcngettext@plt+0x1ee8>
   126d0:	cmp	r0, #69	; 0x45
   126d4:	bne	13208 <dcngettext@plt+0x1d5c>
   126d8:	mov	r7, #0
   126dc:	mov	r1, #67	; 0x43
   126e0:	b	13394 <dcngettext@plt+0x1ee8>
   126e4:	cmp	r0, #0
   126e8:	bne	12fa8 <dcngettext@plt+0x1afc>
   126ec:	movw	r3, #29956	; 0x7504
   126f0:	movt	r3, #1
   126f4:	b	128b0 <dcngettext@plt+0x1404>
   126f8:	cmp	r0, #0
   126fc:	bne	12fa8 <dcngettext@plt+0x1afc>
   12700:	movw	r3, #29965	; 0x750d
   12704:	cmp	r9, #0
   12708:	movt	r3, #1
   1270c:	bne	135a8 <dcngettext@plt+0x20fc>
   12710:	cmp	r6, #0
   12714:	bpl	135a8 <dcngettext@plt+0x20fc>
   12718:	mov	r9, #43	; 0x2b
   1271c:	mov	r4, #4
   12720:	b	128b0 <dcngettext@plt+0x1404>
   12724:	cmp	r0, #69	; 0x45
   12728:	beq	12fa8 <dcngettext@plt+0x1afc>
   1272c:	ldr	r2, [sp, #40]	; 0x28
   12730:	ldr	r3, [r2]
   12734:	b	12b30 <dcngettext@plt+0x1684>
   12738:	mov	r4, #2
   1273c:	cmp	r0, #69	; 0x45
   12740:	beq	12fa8 <dcngettext@plt+0x1afc>
   12744:	ldr	r3, [sp, #36]	; 0x24
   12748:	b	12b34 <dcngettext@plt+0x1688>
   1274c:	cmp	r0, #69	; 0x45
   12750:	beq	12fa8 <dcngettext@plt+0x1afc>
   12754:	ldr	r2, [sp, #72]	; 0x48
   12758:	ldr	r3, [r2, #4]
   1275c:	b	12b30 <dcngettext@plt+0x1684>
   12760:	cmp	r0, #69	; 0x45
   12764:	beq	12fa8 <dcngettext@plt+0x1afc>
   12768:	ldr	r2, [fp, #20]
   1276c:	cmp	r6, #1
   12770:	mov	r7, #0
   12774:	mov	r0, #8
   12778:	movwlt	r6, #9
   1277c:	b	12794 <dcngettext@plt+0x12e8>
   12780:	smmul	r1, r2, r5
   12784:	sub	r0, r0, #1
   12788:	sub	r7, r7, #1
   1278c:	asr	r2, r1, #2
   12790:	add	r2, r2, r1, lsr #31
   12794:	add	r1, r7, #9
   12798:	cmp	r6, r1
   1279c:	blt	12780 <dcngettext@plt+0x12d4>
   127a0:	cmp	r1, #2
   127a4:	blt	127c4 <dcngettext@plt+0x1318>
   127a8:	smmul	r3, r2, r5
   127ac:	asr	r4, r3, #2
   127b0:	add	r3, r4, r3, lsr #31
   127b4:	add	r3, r3, r3, lsl #2
   127b8:	sub	r3, r2, r3, lsl #1
   127bc:	cmp	r3, #0
   127c0:	beq	12780 <dcngettext@plt+0x12d4>
   127c4:	cmp	r1, #1
   127c8:	sub	ip, fp, #46	; 0x2e
   127cc:	blt	12800 <dcngettext@plt+0x1354>
   127d0:	smmul	r3, r2, r5
   127d4:	cmp	r0, #0
   127d8:	asr	r4, r3, #2
   127dc:	add	r3, r4, r3, lsr #31
   127e0:	add	r4, r3, r3, lsl #2
   127e4:	sub	r2, r2, r4, lsl #1
   127e8:	add	r2, r2, #48	; 0x30
   127ec:	strb	r2, [ip, r0]
   127f0:	sub	r2, r0, #1
   127f4:	mov	r0, r2
   127f8:	mov	r2, r3
   127fc:	bgt	127d0 <dcngettext@plt+0x1324>
   12800:	ldr	r0, [sp, #92]	; 0x5c
   12804:	cmp	r9, #0
   12808:	movweq	r9, #48	; 0x30
   1280c:	mvn	r0, r0
   12810:	cmp	r1, r0
   12814:	bcs	13884 <dcngettext@plt+0x23d8>
   12818:	ldr	r0, [sp, #88]	; 0x58
   1281c:	cmp	r0, #0
   12820:	beq	1365c <dcngettext@plt+0x21b0>
   12824:	tst	lr, #1
   12828:	beq	1364c <dcngettext@plt+0x21a0>
   1282c:	ldr	r8, [sp, #88]	; 0x58
   12830:	cmn	r7, #9
   12834:	beq	1365c <dcngettext@plt+0x21b0>
   12838:	mov	r4, #0
   1283c:	bl	11308 <__ctype_toupper_loc@plt>
   12840:	sub	r2, fp, #46	; 0x2e
   12844:	mov	r1, r8
   12848:	mov	r5, r0
   1284c:	ldrb	r0, [r2, -r4]
   12850:	ldr	r2, [r5]
   12854:	ldr	r0, [r2, r0, lsl #2]
   12858:	bl	11434 <fputc@plt>
   1285c:	sub	r4, r4, #1
   12860:	sub	r2, fp, #46	; 0x2e
   12864:	mov	r1, r8
   12868:	add	r0, r7, r4
   1286c:	cmn	r0, #9
   12870:	bne	1284c <dcngettext@plt+0x13a0>
   12874:	b	1365c <dcngettext@plt+0x21b0>
   12878:	mov	r7, #1
   1287c:	ldr	r1, [sp, #76]	; 0x4c
   12880:	orr	r7, r1, r7
   12884:	eor	r1, r1, #1
   12888:	and	lr, lr, r1
   1288c:	mov	r1, #112	; 0x70
   12890:	b	13394 <dcngettext@plt+0x1ee8>
   12894:	cmp	r0, #69	; 0x45
   12898:	beq	12fa8 <dcngettext@plt+0x1afc>
   1289c:	ldr	r2, [sp, #72]	; 0x48
   128a0:	ldr	r3, [r2]
   128a4:	b	12b30 <dcngettext@plt+0x1684>
   128a8:	movw	r3, #29980	; 0x751c
   128ac:	movt	r3, #1
   128b0:	ldr	r0, [fp, #16]
   128b4:	ldr	r2, [sp, #72]	; 0x48
   128b8:	and	r8, lr, #1
   128bc:	str	r3, [sp, #84]	; 0x54
   128c0:	mov	r1, r3
   128c4:	str	r9, [sp]
   128c8:	str	r4, [sp, #4]
   128cc:	mov	r3, r8
   128d0:	str	r0, [sp, #8]
   128d4:	ldr	r0, [fp, #20]
   128d8:	str	r0, [sp, #12]
   128dc:	mov	r0, #0
   128e0:	bl	12050 <dcngettext@plt+0xba4>
   128e4:	subs	r1, r9, #45	; 0x2d
   128e8:	ldr	r2, [sp, #92]	; 0x5c
   128ec:	mov	r5, r0
   128f0:	movne	r1, r6
   128f4:	cmp	r6, #0
   128f8:	movwmi	r1, #0
   128fc:	cmp	r1, r0
   12900:	movhi	r5, r1
   12904:	mvn	r2, r2
   12908:	cmp	r5, r2
   1290c:	bcs	13884 <dcngettext@plt+0x23d8>
   12910:	ldr	r2, [sp, #88]	; 0x58
   12914:	cmp	r2, #0
   12918:	beq	13574 <dcngettext@plt+0x20c8>
   1291c:	ldr	r7, [sp, #88]	; 0x58
   12920:	cmp	r1, r0
   12924:	bls	13548 <dcngettext@plt+0x209c>
   12928:	cmp	r9, #43	; 0x2b
   1292c:	sub	r6, r1, r0
   12930:	cmpne	r9, #48	; 0x30
   12934:	bne	13528 <dcngettext@plt+0x207c>
   12938:	ldr	r7, [sp, #88]	; 0x58
   1293c:	cmp	r6, #0
   12940:	beq	13548 <dcngettext@plt+0x209c>
   12944:	mov	r0, #48	; 0x30
   12948:	mov	r1, r7
   1294c:	bl	11434 <fputc@plt>
   12950:	subs	r6, r6, #1
   12954:	bne	12944 <dcngettext@plt+0x1498>
   12958:	b	13548 <dcngettext@plt+0x209c>
   1295c:	cmp	r0, #69	; 0x45
   12960:	beq	12fa8 <dcngettext@plt+0x1afc>
   12964:	ldr	r3, [sp, #72]	; 0x48
   12968:	ldr	r2, [r3, #24]
   1296c:	ldr	r3, [r3, #28]
   12970:	sub	r2, r3, r2
   12974:	movw	r3, #9363	; 0x2493
   12978:	movt	r3, #37449	; 0x9249
   1297c:	add	r2, r2, #7
   12980:	smmla	r2, r2, r3, r2
   12984:	b	129c8 <dcngettext@plt+0x151c>
   12988:	cmp	r0, #69	; 0x45
   1298c:	beq	12fa8 <dcngettext@plt+0x1afc>
   12990:	ldr	r3, [sp, #72]	; 0x48
   12994:	movw	r7, #9363	; 0x2493
   12998:	movt	r7, #37449	; 0x9249
   1299c:	ldr	r2, [r3, #24]
   129a0:	ldr	r3, [r3, #28]
   129a4:	add	r2, r2, #6
   129a8:	smmla	r5, r2, r7, r2
   129ac:	asr	r4, r5, #2
   129b0:	add	r5, r4, r5, lsr #31
   129b4:	rsb	r5, r5, r5, lsl #3
   129b8:	sub	r2, r5, r2
   129bc:	add	r2, r3, r2
   129c0:	add	r2, r2, #7
   129c4:	smmla	r2, r2, r7, r2
   129c8:	asr	r3, r2, #2
   129cc:	add	r3, r3, r2, lsr #31
   129d0:	b	12b30 <dcngettext@plt+0x1684>
   129d4:	cmp	r0, #79	; 0x4f
   129d8:	beq	12fa8 <dcngettext@plt+0x1afc>
   129dc:	mov	r7, #0
   129e0:	mov	r1, #88	; 0x58
   129e4:	b	13394 <dcngettext@plt+0x1ee8>
   129e8:	cmp	r0, #69	; 0x45
   129ec:	beq	1338c <dcngettext@plt+0x1ee0>
   129f0:	cmp	r0, #79	; 0x4f
   129f4:	beq	12fa8 <dcngettext@plt+0x1afc>
   129f8:	ldr	r2, [sp, #72]	; 0x48
   129fc:	movw	r3, #63636	; 0xf894
   12a00:	mov	ip, #0
   12a04:	mov	r4, #4
   12a08:	movt	r3, #65535	; 0xffff
   12a0c:	ldr	r2, [r2, #20]
   12a10:	cmp	r2, r3
   12a14:	b	13150 <dcngettext@plt+0x1ca4>
   12a18:	ldr	r0, [sp, #44]	; 0x2c
   12a1c:	subs	r4, r9, #45	; 0x2d
   12a20:	str	lr, [sp, #84]	; 0x54
   12a24:	bicne	r4, r6, r6, asr #31
   12a28:	bl	1135c <strlen@plt>
   12a2c:	mov	r5, r0
   12a30:	cmp	r4, r0
   12a34:	mov	r8, r0
   12a38:	ldr	r0, [sp, #92]	; 0x5c
   12a3c:	movhi	r8, r4
   12a40:	mvn	r0, r0
   12a44:	cmp	r8, r0
   12a48:	bcs	13884 <dcngettext@plt+0x23d8>
   12a4c:	ldr	r7, [sp, #88]	; 0x58
   12a50:	cmp	r7, #0
   12a54:	beq	137c4 <dcngettext@plt+0x2318>
   12a58:	cmp	r4, r5
   12a5c:	bls	1371c <dcngettext@plt+0x2270>
   12a60:	uxtb	r0, r9
   12a64:	sub	r4, r4, r5
   12a68:	cmp	r0, #43	; 0x2b
   12a6c:	cmpne	r0, #48	; 0x30
   12a70:	bne	136fc <dcngettext@plt+0x2250>
   12a74:	ldr	r6, [sp, #88]	; 0x58
   12a78:	cmp	r4, #0
   12a7c:	beq	1371c <dcngettext@plt+0x2270>
   12a80:	mov	r0, #48	; 0x30
   12a84:	mov	r1, r6
   12a88:	bl	11434 <fputc@plt>
   12a8c:	subs	r4, r4, #1
   12a90:	bne	12a80 <dcngettext@plt+0x15d4>
   12a94:	b	1371c <dcngettext@plt+0x2270>
   12a98:	cmp	r0, #0
   12a9c:	bne	12fa8 <dcngettext@plt+0x1afc>
   12aa0:	ldr	r1, [sp, #76]	; 0x4c
   12aa4:	mov	r7, #0
   12aa8:	orr	lr, r1, lr
   12aac:	mov	r1, #97	; 0x61
   12ab0:	b	13394 <dcngettext@plt+0x1ee8>
   12ab4:	cmp	r0, #79	; 0x4f
   12ab8:	beq	12fa8 <dcngettext@plt+0x1afc>
   12abc:	mov	r7, #0
   12ac0:	mov	r1, #99	; 0x63
   12ac4:	b	13394 <dcngettext@plt+0x1ee8>
   12ac8:	cmp	r0, #69	; 0x45
   12acc:	beq	12fa8 <dcngettext@plt+0x1afc>
   12ad0:	ldr	r2, [sp, #32]
   12ad4:	ldr	r3, [r2]
   12ad8:	b	12b30 <dcngettext@plt+0x1684>
   12adc:	ldr	r2, [sp, #32]
   12ae0:	cmp	r0, #69	; 0x45
   12ae4:	bne	12b14 <dcngettext@plt+0x1668>
   12ae8:	b	12fa8 <dcngettext@plt+0x1afc>
   12aec:	cmp	r0, #69	; 0x45
   12af0:	beq	12fa8 <dcngettext@plt+0x1afc>
   12af4:	ldr	r2, [sp, #72]	; 0x48
   12af8:	mov	ip, #0
   12afc:	mov	r4, #3
   12b00:	ldr	r2, [r2, #28]
   12b04:	b	12d0c <dcngettext@plt+0x1860>
   12b08:	ldr	r2, [sp, #40]	; 0x28
   12b0c:	cmp	r0, #69	; 0x45
   12b10:	beq	12fa8 <dcngettext@plt+0x1afc>
   12b14:	ldr	r3, [r2]
   12b18:	b	12b28 <dcngettext@plt+0x167c>
   12b1c:	ldr	r3, [sp, #36]	; 0x24
   12b20:	cmp	r0, #69	; 0x45
   12b24:	beq	12fa8 <dcngettext@plt+0x1afc>
   12b28:	cmp	r9, #0
   12b2c:	movweq	r9, #95	; 0x5f
   12b30:	mov	r4, #2
   12b34:	lsr	ip, r3, #31
   12b38:	cmp	ip, #0
   12b3c:	mov	r2, #0
   12b40:	mov	r8, #0
   12b44:	movwne	ip, #1
   12b48:	cmp	r0, #79	; 0x4f
   12b4c:	moveq	r7, #0
   12b50:	cmpeq	ip, #0
   12b54:	beq	13394 <dcngettext@plt+0x1ee8>
   12b58:	ldr	r5, [sp, #64]	; 0x40
   12b5c:	ldr	r7, [sp, #92]	; 0x5c
   12b60:	cmp	ip, #0
   12b64:	rsbne	r3, r3, #0
   12b68:	tst	r2, #1
   12b6c:	asr	r2, r2, #1
   12b70:	movne	r0, #58	; 0x3a
   12b74:	strbne	r0, [r5, #-1]!
   12b78:	movw	r0, #52429	; 0xcccd
   12b7c:	cmp	r3, #9
   12b80:	movt	r0, #52428	; 0xcccc
   12b84:	umull	r0, r1, r3, r0
   12b88:	lsr	r0, r1, #3
   12b8c:	add	r1, r0, r0, lsl #2
   12b90:	sub	r1, r3, r1, lsl #1
   12b94:	mov	r3, r0
   12b98:	orr	r1, r1, #48	; 0x30
   12b9c:	strb	r1, [r5, #-1]!
   12ba0:	bhi	12b68 <dcngettext@plt+0x16bc>
   12ba4:	cmp	r2, #0
   12ba8:	mov	r3, r0
   12bac:	bne	12b68 <dcngettext@plt+0x16bc>
   12bb0:	cmp	r6, #0
   12bb4:	movpl	r4, r6
   12bb8:	cmp	r8, #0
   12bbc:	movwne	r8, #43	; 0x2b
   12bc0:	cmp	r9, #0
   12bc4:	movweq	r9, #48	; 0x30
   12bc8:	ldr	r1, [sp, #64]	; 0x40
   12bcc:	cmp	ip, #0
   12bd0:	mov	r0, r4
   12bd4:	str	r4, [sp, #76]	; 0x4c
   12bd8:	str	lr, [sp, #84]	; 0x54
   12bdc:	movwne	r8, #45	; 0x2d
   12be0:	cmp	r8, #0
   12be4:	subne	r0, r0, #1
   12be8:	sub	r6, r1, r5
   12bec:	sub	r0, r0, r6
   12bf0:	cmp	r0, #1
   12bf4:	movwlt	r0, #0
   12bf8:	subs	r4, r9, #45	; 0x2d
   12bfc:	movne	r4, r0
   12c00:	cmp	r8, #0
   12c04:	beq	12c80 <dcngettext@plt+0x17d4>
   12c08:	cmp	r9, #95	; 0x5f
   12c0c:	bne	12c54 <dcngettext@plt+0x17a8>
   12c10:	str	r6, [sp, #20]
   12c14:	ldr	r6, [sp, #88]	; 0x58
   12c18:	cmp	r6, #0
   12c1c:	cmpne	r4, #0
   12c20:	beq	12c3c <dcngettext@plt+0x1790>
   12c24:	mov	r7, r4
   12c28:	mov	r0, #32
   12c2c:	mov	r1, r6
   12c30:	bl	11434 <fputc@plt>
   12c34:	subs	r7, r7, #1
   12c38:	bne	12c28 <dcngettext@plt+0x177c>
   12c3c:	ldr	r0, [sp, #76]	; 0x4c
   12c40:	ldr	r7, [sp, #92]	; 0x5c
   12c44:	ldr	r6, [sp, #20]
   12c48:	sub	r0, r0, r4
   12c4c:	add	r7, r4, r7
   12c50:	str	r0, [sp, #76]	; 0x4c
   12c54:	cmn	r7, #3
   12c58:	bhi	13884 <dcngettext@plt+0x23d8>
   12c5c:	ldr	r1, [sp, #88]	; 0x58
   12c60:	cmp	r1, #0
   12c64:	beq	12c70 <dcngettext@plt+0x17c4>
   12c68:	mov	r0, r8
   12c6c:	bl	11434 <fputc@plt>
   12c70:	ldr	r1, [sp, #76]	; 0x4c
   12c74:	add	r7, r7, #1
   12c78:	sub	r1, r1, #1
   12c7c:	b	12c84 <dcngettext@plt+0x17d8>
   12c80:	ldr	r1, [sp, #76]	; 0x4c
   12c84:	subs	r0, r9, #45	; 0x2d
   12c88:	mov	r4, r6
   12c8c:	bicne	r0, r1, r1, asr #31
   12c90:	mvn	r1, r7
   12c94:	cmp	r0, r6
   12c98:	movhi	r4, r0
   12c9c:	cmp	r4, r1
   12ca0:	bcs	13884 <dcngettext@plt+0x23d8>
   12ca4:	ldr	r8, [sp, #88]	; 0x58
   12ca8:	str	r7, [sp, #92]	; 0x5c
   12cac:	cmp	r8, #0
   12cb0:	beq	131e0 <dcngettext@plt+0x1d34>
   12cb4:	mov	r8, r6
   12cb8:	cmp	r0, r6
   12cbc:	bls	13180 <dcngettext@plt+0x1cd4>
   12cc0:	cmp	r9, #43	; 0x2b
   12cc4:	sub	r7, r0, r8
   12cc8:	cmpne	r9, #48	; 0x30
   12ccc:	bne	13160 <dcngettext@plt+0x1cb4>
   12cd0:	ldr	r6, [sp, #88]	; 0x58
   12cd4:	cmp	r7, #0
   12cd8:	beq	13180 <dcngettext@plt+0x1cd4>
   12cdc:	mov	r0, #48	; 0x30
   12ce0:	mov	r1, r6
   12ce4:	bl	11434 <fputc@plt>
   12ce8:	subs	r7, r7, #1
   12cec:	bne	12cdc <dcngettext@plt+0x1830>
   12cf0:	b	13180 <dcngettext@plt+0x1cd4>
   12cf4:	cmp	r0, #69	; 0x45
   12cf8:	beq	12fa8 <dcngettext@plt+0x1afc>
   12cfc:	ldr	r2, [sp, #72]	; 0x48
   12d00:	mov	ip, #0
   12d04:	mov	r4, #2
   12d08:	ldr	r2, [r2, #16]
   12d0c:	cmn	r2, #1
   12d10:	add	r3, r2, #1
   12d14:	movwlt	ip, #1
   12d18:	b	12b38 <dcngettext@plt+0x168c>
   12d1c:	subs	r0, r9, #45	; 0x2d
   12d20:	ldr	ip, [sp, #92]	; 0x5c
   12d24:	bicne	r0, r6, r6, asr #31
   12d28:	cmp	r0, #1
   12d2c:	mov	r4, r0
   12d30:	movls	r4, #1
   12d34:	mvn	r1, ip
   12d38:	cmp	r4, r1
   12d3c:	bcs	13884 <dcngettext@plt+0x23d8>
   12d40:	ldr	r1, [sp, #88]	; 0x58
   12d44:	cmp	r1, #0
   12d48:	beq	1385c <dcngettext@plt+0x23b0>
   12d4c:	ldr	r6, [sp, #88]	; 0x58
   12d50:	mov	r7, ip
   12d54:	cmp	r0, #2
   12d58:	bcc	137e8 <dcngettext@plt+0x233c>
   12d5c:	uxtb	r1, r9
   12d60:	sub	r5, r0, #1
   12d64:	cmp	r1, #43	; 0x2b
   12d68:	cmpne	r1, #48	; 0x30
   12d6c:	bne	137d0 <dcngettext@plt+0x2324>
   12d70:	ldr	r6, [sp, #88]	; 0x58
   12d74:	mov	r0, #48	; 0x30
   12d78:	mov	r1, r6
   12d7c:	bl	11434 <fputc@plt>
   12d80:	subs	r5, r5, #1
   12d84:	bne	12d74 <dcngettext@plt+0x18c8>
   12d88:	b	137e8 <dcngettext@plt+0x233c>
   12d8c:	ldr	r2, [sp, #72]	; 0x48
   12d90:	mov	r3, #11
   12d94:	mov	r4, #1
   12d98:	mov	ip, #0
   12d9c:	ldr	r2, [r2, #16]
   12da0:	mul	r2, r2, r3
   12da4:	add	r3, r4, r2, asr #5
   12da8:	b	12b38 <dcngettext@plt+0x168c>
   12dac:	ldr	r2, [sp, #72]	; 0x48
   12db0:	mov	r0, #28
   12db4:	add	r1, sp, #96	; 0x60
   12db8:	str	lr, [sp, #84]	; 0x54
   12dbc:	mov	r4, r1
   12dc0:	mov	r3, r2
   12dc4:	add	r2, r2, #16
   12dc8:	vld1.32	{d16-d17}, [r3], r0
   12dcc:	vld1.32	{d18-d19}, [r2]
   12dd0:	add	r2, r1, #16
   12dd4:	vld1.32	{d20-d21}, [r3]
   12dd8:	vst1.64	{d16-d17}, [r4], r0
   12ddc:	mvn	r0, #0
   12de0:	vst1.64	{d18-d19}, [r2]
   12de4:	vst1.32	{d20-d21}, [r4]
   12de8:	str	r0, [r4]
   12dec:	ldr	r0, [fp, #16]
   12df0:	bl	15e88 <dcngettext@plt+0x49dc>
   12df4:	ldr	r1, [r4]
   12df8:	cmp	r1, #0
   12dfc:	bmi	138a0 <dcngettext@plt+0x23f4>
   12e00:	ldr	r1, [sp, #24]
   12e04:	lsr	ip, r0, #31
   12e08:	mov	r2, r0
   12e0c:	smmul	r3, r2, r5
   12e10:	cmp	r0, #0
   12e14:	asr	r7, r3, #2
   12e18:	add	r3, r7, r3, lsr #31
   12e1c:	add	r7, r3, r3, lsl #2
   12e20:	sub	r7, r2, r7, lsl #1
   12e24:	add	r2, r2, #9
   12e28:	rsbmi	r7, r7, #0
   12e2c:	cmp	r2, #18
   12e30:	mov	r2, r3
   12e34:	add	r7, r7, #48	; 0x30
   12e38:	strb	r7, [r1], #-1
   12e3c:	bhi	12e0c <dcngettext@plt+0x1960>
   12e40:	ldr	r7, [sp, #92]	; 0x5c
   12e44:	ldr	lr, [sp, #84]	; 0x54
   12e48:	cmp	r6, #0
   12e4c:	add	r5, r1, #1
   12e50:	mov	r8, #0
   12e54:	movwmi	r6, #1
   12e58:	cmp	r9, #0
   12e5c:	movweq	r9, #48	; 0x30
   12e60:	mov	r4, r6
   12e64:	b	12bc8 <dcngettext@plt+0x171c>
   12e68:	subs	r0, r9, #45	; 0x2d
   12e6c:	ldr	ip, [sp, #92]	; 0x5c
   12e70:	bicne	r0, r6, r6, asr #31
   12e74:	cmp	r0, #1
   12e78:	mov	r4, r0
   12e7c:	movls	r4, #1
   12e80:	mvn	r1, ip
   12e84:	cmp	r4, r1
   12e88:	bcs	13884 <dcngettext@plt+0x23d8>
   12e8c:	ldr	r1, [sp, #88]	; 0x58
   12e90:	cmp	r1, #0
   12e94:	beq	1385c <dcngettext@plt+0x23b0>
   12e98:	ldr	r6, [sp, #88]	; 0x58
   12e9c:	mov	r7, ip
   12ea0:	cmp	r0, #2
   12ea4:	bcc	13808 <dcngettext@plt+0x235c>
   12ea8:	uxtb	r1, r9
   12eac:	sub	r5, r0, #1
   12eb0:	cmp	r1, #43	; 0x2b
   12eb4:	cmpne	r1, #48	; 0x30
   12eb8:	bne	137f0 <dcngettext@plt+0x2344>
   12ebc:	ldr	r6, [sp, #88]	; 0x58
   12ec0:	mov	r0, #48	; 0x30
   12ec4:	mov	r1, r6
   12ec8:	bl	11434 <fputc@plt>
   12ecc:	subs	r5, r5, #1
   12ed0:	bne	12ec0 <dcngettext@plt+0x1a14>
   12ed4:	b	13808 <dcngettext@plt+0x235c>
   12ed8:	ldr	r2, [sp, #72]	; 0x48
   12edc:	movw	r3, #9363	; 0x2493
   12ee0:	mov	r4, #1
   12ee4:	movt	r3, #37449	; 0x9249
   12ee8:	ldr	r2, [r2, #24]
   12eec:	add	r2, r2, #6
   12ef0:	smmla	r3, r2, r3, r2
   12ef4:	asr	r7, r3, #2
   12ef8:	add	r3, r7, r3, lsr #31
   12efc:	rsb	r3, r3, r3, lsl #3
   12f00:	sub	r2, r2, r3
   12f04:	add	r3, r2, #1
   12f08:	b	12b34 <dcngettext@plt+0x1688>
   12f0c:	cmp	r0, #69	; 0x45
   12f10:	beq	12fa8 <dcngettext@plt+0x1afc>
   12f14:	ldr	r2, [sp, #72]	; 0x48
   12f18:	mov	r4, #1
   12f1c:	ldr	r3, [r2, #24]
   12f20:	b	12b34 <dcngettext@plt+0x1688>
   12f24:	cmp	r0, #79	; 0x4f
   12f28:	beq	12fa8 <dcngettext@plt+0x1afc>
   12f2c:	mov	r7, #0
   12f30:	mov	r1, #120	; 0x78
   12f34:	b	13394 <dcngettext@plt+0x1ee8>
   12f38:	cmp	r0, #69	; 0x45
   12f3c:	bne	1325c <dcngettext@plt+0x1db0>
   12f40:	mov	r7, #0
   12f44:	mov	r1, #121	; 0x79
   12f48:	b	13394 <dcngettext@plt+0x1ee8>
   12f4c:	cmp	r2, #122	; 0x7a
   12f50:	bne	12fa8 <dcngettext@plt+0x1afc>
   12f54:	add	sl, sl, r7
   12f58:	ldr	r3, [sp, #72]	; 0x48
   12f5c:	ldr	r2, [r3, #32]
   12f60:	cmp	r2, #0
   12f64:	bmi	13450 <dcngettext@plt+0x1fa4>
   12f68:	ldr	r2, [r3, #36]	; 0x24
   12f6c:	str	lr, [sp, #84]	; 0x54
   12f70:	cmp	r2, #0
   12f74:	bmi	13308 <dcngettext@plt+0x1e5c>
   12f78:	mov	ip, #0
   12f7c:	bne	1330c <dcngettext@plt+0x1e60>
   12f80:	ldr	r3, [sp, #44]	; 0x2c
   12f84:	ldrb	r3, [r3]
   12f88:	sub	r3, r3, #45	; 0x2d
   12f8c:	clz	r3, r3
   12f90:	lsr	ip, r3, #5
   12f94:	cmp	r7, #3
   12f98:	bls	13314 <dcngettext@plt+0x1e68>
   12f9c:	ldr	ip, [sp, #92]	; 0x5c
   12fa0:	ldr	lr, [sp, #84]	; 0x54
   12fa4:	b	12fac <dcngettext@plt+0x1b00>
   12fa8:	ldr	ip, [sp, #92]	; 0x5c
   12fac:	subs	r0, r9, #45	; 0x2d
   12fb0:	sub	r1, sl, r8
   12fb4:	bicne	r0, r6, r6, asr #31
   12fb8:	add	r5, r1, #1
   12fbc:	mvn	r1, ip
   12fc0:	mov	r4, r5
   12fc4:	cmp	r0, r5
   12fc8:	movhi	r4, r0
   12fcc:	cmp	r4, r1
   12fd0:	bcs	13884 <dcngettext@plt+0x23d8>
   12fd4:	ldr	r7, [sp, #88]	; 0x58
   12fd8:	cmp	r7, #0
   12fdc:	beq	130a4 <dcngettext@plt+0x1bf8>
   12fe0:	cmp	r0, r5
   12fe4:	str	lr, [sp, #84]	; 0x54
   12fe8:	bls	13044 <dcngettext@plt+0x1b98>
   12fec:	sub	r6, r0, r5
   12ff0:	uxtb	r0, r9
   12ff4:	cmp	r0, #43	; 0x2b
   12ff8:	cmpne	r0, #48	; 0x30
   12ffc:	bne	13024 <dcngettext@plt+0x1b78>
   13000:	ldr	r7, [sp, #88]	; 0x58
   13004:	cmp	r6, #0
   13008:	beq	13044 <dcngettext@plt+0x1b98>
   1300c:	mov	r0, #48	; 0x30
   13010:	mov	r1, r7
   13014:	bl	11434 <fputc@plt>
   13018:	subs	r6, r6, #1
   1301c:	bne	1300c <dcngettext@plt+0x1b60>
   13020:	b	13044 <dcngettext@plt+0x1b98>
   13024:	ldr	r7, [sp, #88]	; 0x58
   13028:	cmp	r6, #0
   1302c:	beq	13044 <dcngettext@plt+0x1b98>
   13030:	mov	r0, #32
   13034:	mov	r1, r7
   13038:	bl	11434 <fputc@plt>
   1303c:	subs	r6, r6, #1
   13040:	bne	13030 <dcngettext@plt+0x1b84>
   13044:	ldr	r0, [sp, #84]	; 0x54
   13048:	tst	r0, #1
   1304c:	beq	1308c <dcngettext@plt+0x1be0>
   13050:	ldr	r7, [sp, #88]	; 0x58
   13054:	cmp	r5, #0
   13058:	beq	130a4 <dcngettext@plt+0x1bf8>
   1305c:	mvn	r0, sl
   13060:	add	r6, r0, r8
   13064:	bl	11308 <__ctype_toupper_loc@plt>
   13068:	mov	r5, r0
   1306c:	ldrb	r0, [r8], #1
   13070:	ldr	r1, [r5]
   13074:	ldr	r0, [r1, r0, lsl #2]
   13078:	mov	r1, r7
   1307c:	bl	11434 <fputc@plt>
   13080:	adds	r6, r6, #1
   13084:	bcc	1306c <dcngettext@plt+0x1bc0>
   13088:	b	130a4 <dcngettext@plt+0x1bf8>
   1308c:	ldr	r7, [sp, #88]	; 0x58
   13090:	mov	r0, r8
   13094:	mov	r1, r5
   13098:	mov	r2, #1
   1309c:	mov	r3, r7
   130a0:	bl	1126c <fwrite@plt>
   130a4:	ldr	ip, [sp, #92]	; 0x5c
   130a8:	b	13860 <dcngettext@plt+0x23b4>
   130ac:	sub	r2, r2, #1
   130b0:	movw	r4, #365	; 0x16d
   130b4:	tst	r2, #3
   130b8:	bne	130fc <dcngettext@plt+0x1c50>
   130bc:	movw	r4, #34079	; 0x851f
   130c0:	movt	r4, #20971	; 0x51eb
   130c4:	smmul	r4, r2, r4
   130c8:	asr	r7, r4, #5
   130cc:	add	r3, r7, r4, lsr #31
   130d0:	mov	r7, #100	; 0x64
   130d4:	mls	r3, r3, r7, r2
   130d8:	asr	r7, r4, #7
   130dc:	add	r4, r7, r4, lsr #31
   130e0:	mov	r7, #400	; 0x190
   130e4:	mls	r2, r4, r7, r2
   130e8:	movw	r4, #365	; 0x16d
   130ec:	cmp	r2, #0
   130f0:	movweq	r4, #366	; 0x16e
   130f4:	cmp	r3, #0
   130f8:	movwne	r4, #366	; 0x16e
   130fc:	add	r2, r4, r5
   13100:	movw	r4, #382	; 0x17e
   13104:	sub	r3, r4, r8
   13108:	add	r2, r3, r2
   1310c:	smmla	r2, r2, ip, r2
   13110:	asr	r4, r2, #2
   13114:	add	r2, r4, r2, lsr #31
   13118:	rsb	r2, r2, r2, lsl #3
   1311c:	sub	r2, r2, r3
   13120:	mvn	r3, #0
   13124:	add	r4, r2, #3
   13128:	cmp	r1, #71	; 0x47
   1312c:	bne	12600 <dcngettext@plt+0x1154>
   13130:	movw	r2, #63636	; 0xf894
   13134:	mov	ip, #0
   13138:	mov	r4, #4
   1313c:	movt	r2, #65535	; 0xffff
   13140:	sub	r2, r2, r3
   13144:	cmp	lr, r2
   13148:	add	r2, lr, r3
   1314c:	ldr	lr, [sp, #84]	; 0x54
   13150:	movw	r3, #1900	; 0x76c
   13154:	movwlt	ip, #1
   13158:	add	r3, r2, r3
   1315c:	b	135d0 <dcngettext@plt+0x2124>
   13160:	ldr	r6, [sp, #88]	; 0x58
   13164:	cmp	r7, #0
   13168:	beq	13180 <dcngettext@plt+0x1cd4>
   1316c:	mov	r0, #32
   13170:	mov	r1, r6
   13174:	bl	11434 <fputc@plt>
   13178:	subs	r7, r7, #1
   1317c:	bne	1316c <dcngettext@plt+0x1cc0>
   13180:	ldr	r0, [sp, #84]	; 0x54
   13184:	tst	r0, #1
   13188:	beq	131c8 <dcngettext@plt+0x1d1c>
   1318c:	cmp	r8, #0
   13190:	ldr	r8, [sp, #88]	; 0x58
   13194:	beq	131e0 <dcngettext@plt+0x1d34>
   13198:	ldr	r0, [sp, #28]
   1319c:	add	r7, r0, r5
   131a0:	bl	11308 <__ctype_toupper_loc@plt>
   131a4:	mov	r6, r0
   131a8:	ldrb	r0, [r5], #1
   131ac:	ldr	r1, [r6]
   131b0:	ldr	r0, [r1, r0, lsl #2]
   131b4:	mov	r1, r8
   131b8:	bl	11434 <fputc@plt>
   131bc:	adds	r7, r7, #1
   131c0:	bcc	131a8 <dcngettext@plt+0x1cfc>
   131c4:	b	131e0 <dcngettext@plt+0x1d34>
   131c8:	mov	r1, r8
   131cc:	ldr	r8, [sp, #88]	; 0x58
   131d0:	mov	r0, r5
   131d4:	mov	r2, #1
   131d8:	mov	r3, r8
   131dc:	bl	1126c <fwrite@plt>
   131e0:	ldr	ip, [sp, #92]	; 0x5c
   131e4:	mov	r7, r8
   131e8:	b	13860 <dcngettext@plt+0x23b4>
   131ec:	smmla	r2, r4, ip, r4
   131f0:	ldr	lr, [sp, #84]	; 0x54
   131f4:	mov	r4, #2
   131f8:	asr	r3, r2, #2
   131fc:	add	r2, r3, r2, lsr #31
   13200:	add	r3, r2, #1
   13204:	b	12b34 <dcngettext@plt+0x1688>
   13208:	ldr	r2, [sp, #72]	; 0x48
   1320c:	movw	r7, #63636	; 0xf894
   13210:	mov	r3, #0
   13214:	mvn	r5, #98	; 0x62
   13218:	mov	ip, #0
   1321c:	mov	r4, #2
   13220:	movt	r7, #65535	; 0xffff
   13224:	ldr	r2, [r2, #20]
   13228:	cmp	r2, r7
   1322c:	movwge	r3, #1
   13230:	cmp	r2, r7
   13234:	and	r3, r3, r2, lsr #31
   13238:	movwlt	ip, #1
   1323c:	smlabb	r3, r3, r5, r2
   13240:	movw	r5, #34079	; 0x851f
   13244:	movt	r5, #20971	; 0x51eb
   13248:	smmul	r3, r3, r5
   1324c:	asr	r5, r3, #5
   13250:	add	r3, r5, r3, lsr #31
   13254:	add	r3, r3, #19
   13258:	b	135d0 <dcngettext@plt+0x2124>
   1325c:	ldr	r2, [sp, #72]	; 0x48
   13260:	movw	r3, #34079	; 0x851f
   13264:	mov	r4, #2
   13268:	mov	ip, #0
   1326c:	movt	r3, #20971	; 0x51eb
   13270:	ldr	r2, [r2, #20]
   13274:	smmul	r3, r2, r3
   13278:	asr	r7, r3, #5
   1327c:	add	r3, r7, r3, lsr #31
   13280:	mov	r7, #100	; 0x64
   13284:	mls	r7, r3, r7, r2
   13288:	cmn	r7, #1
   1328c:	ble	135bc <dcngettext@plt+0x2110>
   13290:	mov	r3, r7
   13294:	b	135d0 <dcngettext@plt+0x2124>
   13298:	subs	r0, r9, #45	; 0x2d
   1329c:	ldr	ip, [sp, #92]	; 0x5c
   132a0:	bicne	r0, r6, r6, asr #31
   132a4:	cmp	r0, #1
   132a8:	mov	r4, r0
   132ac:	movls	r4, #1
   132b0:	mvn	r1, ip
   132b4:	cmp	r4, r1
   132b8:	bcs	13884 <dcngettext@plt+0x23d8>
   132bc:	ldr	r1, [sp, #88]	; 0x58
   132c0:	cmp	r1, #0
   132c4:	beq	1385c <dcngettext@plt+0x23b0>
   132c8:	ldr	r6, [sp, #88]	; 0x58
   132cc:	mov	r7, ip
   132d0:	cmp	r0, #2
   132d4:	bcc	1384c <dcngettext@plt+0x23a0>
   132d8:	uxtb	r1, r9
   132dc:	sub	r5, r0, #1
   132e0:	cmp	r1, #43	; 0x2b
   132e4:	cmpne	r1, #48	; 0x30
   132e8:	bne	13834 <dcngettext@plt+0x2388>
   132ec:	ldr	r6, [sp, #88]	; 0x58
   132f0:	mov	r0, #48	; 0x30
   132f4:	mov	r1, r6
   132f8:	bl	11434 <fputc@plt>
   132fc:	subs	r5, r5, #1
   13300:	bne	132f0 <dcngettext@plt+0x1e44>
   13304:	b	1384c <dcngettext@plt+0x23a0>
   13308:	mov	ip, #1
   1330c:	cmp	r7, #3
   13310:	bhi	12f9c <dcngettext@plt+0x1af0>
   13314:	movw	r3, #34953	; 0x8889
   13318:	movt	r3, #34952	; 0x8888
   1331c:	smmla	r5, r2, r3, r2
   13320:	asr	r4, r5, #5
   13324:	add	r4, r4, r5, lsr #31
   13328:	smmla	r3, r4, r3, r4
   1332c:	asr	r5, r3, #5
   13330:	add	r3, r5, r3, lsr #31
   13334:	rsb	r3, r3, r3, lsl #4
   13338:	sub	lr, r4, r3, lsl #2
   1333c:	movw	r3, #46021	; 0xb3c5
   13340:	rsb	r4, r4, r4, lsl #4
   13344:	movt	r3, #37282	; 0x91a2
   13348:	smmla	r3, r2, r3, r2
   1334c:	sub	r2, r2, r4, lsl #2
   13350:	add	r4, pc, #8
   13354:	asr	r5, r3, #11
   13358:	add	r3, r5, r3, lsr #31
   1335c:	ldr	pc, [r4, r7, lsl #2]
   13360:	andeq	r3, r1, r0, ror r3
   13364:	andeq	r3, r1, r8, lsl r8
   13368:	andeq	r3, r1, r8, lsr #12
   1336c:	andeq	r3, r1, r0, lsr #12
   13370:	mov	r2, #100	; 0x64
   13374:	mov	r4, #5
   13378:	mla	r3, r3, r2, lr
   1337c:	ldr	lr, [sp, #84]	; 0x54
   13380:	mov	r8, #1
   13384:	mov	r2, #0
   13388:	b	12b48 <dcngettext@plt+0x169c>
   1338c:	mov	r7, #0
   13390:	mov	r1, #89	; 0x59
   13394:	movw	r2, #9504	; 0x2520
   13398:	cmp	r0, #0
   1339c:	ldr	r3, [sp, #72]	; 0x48
   133a0:	str	lr, [sp, #84]	; 0x54
   133a4:	strh	r2, [fp, #-51]	; 0xffffffcd
   133a8:	ldr	r2, [sp, #68]	; 0x44
   133ac:	ldrne	r2, [sp, #52]	; 0x34
   133b0:	strbne	r0, [fp, #-49]	; 0xffffffcf
   133b4:	mov	r0, #0
   133b8:	strb	r0, [r2, #1]
   133bc:	strb	r1, [r2]
   133c0:	add	r0, sp, #96	; 0x60
   133c4:	sub	r2, fp, #51	; 0x33
   133c8:	mov	r1, #1024	; 0x400
   133cc:	bl	112d8 <strftime@plt>
   133d0:	cmp	r0, #0
   133d4:	beq	13450 <dcngettext@plt+0x1fa4>
   133d8:	subs	r1, r9, #45	; 0x2d
   133dc:	sub	r5, r0, #1
   133e0:	ldr	r0, [sp, #92]	; 0x5c
   133e4:	movne	r1, r6
   133e8:	cmp	r6, #0
   133ec:	mov	r8, r5
   133f0:	movwmi	r1, #0
   133f4:	cmp	r1, r5
   133f8:	movhi	r8, r1
   133fc:	mvn	r0, r0
   13400:	cmp	r8, r0
   13404:	bcs	13884 <dcngettext@plt+0x23d8>
   13408:	ldr	r4, [sp, #88]	; 0x58
   1340c:	cmp	r4, #0
   13410:	beq	13518 <dcngettext@plt+0x206c>
   13414:	cmp	r1, r5
   13418:	bls	1347c <dcngettext@plt+0x1fd0>
   1341c:	cmp	r9, #43	; 0x2b
   13420:	sub	r6, r1, r5
   13424:	cmpne	r9, #48	; 0x30
   13428:	bne	1345c <dcngettext@plt+0x1fb0>
   1342c:	ldr	r4, [sp, #88]	; 0x58
   13430:	cmp	r6, #0
   13434:	beq	1347c <dcngettext@plt+0x1fd0>
   13438:	mov	r0, #48	; 0x30
   1343c:	mov	r1, r4
   13440:	bl	11434 <fputc@plt>
   13444:	subs	r6, r6, #1
   13448:	bne	13438 <dcngettext@plt+0x1f8c>
   1344c:	b	1347c <dcngettext@plt+0x1fd0>
   13450:	ldr	ip, [sp, #92]	; 0x5c
   13454:	ldr	r7, [sp, #88]	; 0x58
   13458:	b	1213c <dcngettext@plt+0xc90>
   1345c:	ldr	r4, [sp, #88]	; 0x58
   13460:	cmp	r6, #0
   13464:	beq	1347c <dcngettext@plt+0x1fd0>
   13468:	mov	r0, #32
   1346c:	mov	r1, r4
   13470:	bl	11434 <fputc@plt>
   13474:	subs	r6, r6, #1
   13478:	bne	13468 <dcngettext@plt+0x1fbc>
   1347c:	tst	r7, #1
   13480:	beq	134bc <dcngettext@plt+0x2010>
   13484:	ldr	r4, [sp, #88]	; 0x58
   13488:	cmp	r5, #0
   1348c:	beq	13518 <dcngettext@plt+0x206c>
   13490:	bl	112fc <__ctype_tolower_loc@plt>
   13494:	ldr	r7, [sp, #48]	; 0x30
   13498:	mov	r6, r0
   1349c:	ldrb	r0, [r7], #1
   134a0:	ldr	r1, [r6]
   134a4:	ldr	r0, [r1, r0, lsl #2]
   134a8:	mov	r1, r4
   134ac:	bl	11434 <fputc@plt>
   134b0:	subs	r5, r5, #1
   134b4:	bne	1349c <dcngettext@plt+0x1ff0>
   134b8:	b	13518 <dcngettext@plt+0x206c>
   134bc:	ldr	r0, [sp, #84]	; 0x54
   134c0:	tst	r0, #1
   134c4:	beq	13500 <dcngettext@plt+0x2054>
   134c8:	ldr	r4, [sp, #88]	; 0x58
   134cc:	cmp	r5, #0
   134d0:	beq	13518 <dcngettext@plt+0x206c>
   134d4:	bl	11308 <__ctype_toupper_loc@plt>
   134d8:	ldr	r7, [sp, #48]	; 0x30
   134dc:	mov	r6, r0
   134e0:	ldrb	r0, [r7], #1
   134e4:	ldr	r1, [r6]
   134e8:	ldr	r0, [r1, r0, lsl #2]
   134ec:	mov	r1, r4
   134f0:	bl	11434 <fputc@plt>
   134f4:	subs	r5, r5, #1
   134f8:	bne	134e0 <dcngettext@plt+0x2034>
   134fc:	b	13518 <dcngettext@plt+0x206c>
   13500:	ldr	r4, [sp, #88]	; 0x58
   13504:	ldr	r0, [sp, #48]	; 0x30
   13508:	mov	r1, r5
   1350c:	mov	r2, #1
   13510:	mov	r3, r4
   13514:	bl	1126c <fwrite@plt>
   13518:	ldr	ip, [sp, #92]	; 0x5c
   1351c:	mov	r7, r4
   13520:	add	ip, r8, ip
   13524:	b	1213c <dcngettext@plt+0xc90>
   13528:	ldr	r7, [sp, #88]	; 0x58
   1352c:	cmp	r6, #0
   13530:	beq	13548 <dcngettext@plt+0x209c>
   13534:	mov	r0, #32
   13538:	mov	r1, r7
   1353c:	bl	11434 <fputc@plt>
   13540:	subs	r6, r6, #1
   13544:	bne	13534 <dcngettext@plt+0x2088>
   13548:	ldr	r0, [fp, #16]
   1354c:	ldr	r1, [sp, #84]	; 0x54
   13550:	ldr	r2, [sp, #72]	; 0x48
   13554:	mov	r3, r8
   13558:	str	r9, [sp]
   1355c:	str	r4, [sp, #4]
   13560:	str	r0, [sp, #8]
   13564:	ldr	r0, [fp, #20]
   13568:	str	r0, [sp, #12]
   1356c:	mov	r0, r7
   13570:	bl	12050 <dcngettext@plt+0xba4>
   13574:	ldr	ip, [sp, #92]	; 0x5c
   13578:	ldr	r7, [sp, #88]	; 0x58
   1357c:	add	ip, r5, ip
   13580:	b	1213c <dcngettext@plt+0xc90>
   13584:	movw	r4, #63636	; 0xf894
   13588:	movt	r4, #65535	; 0xffff
   1358c:	sub	r4, r4, r3
   13590:	add	r3, r2, #100	; 0x64
   13594:	cmp	lr, r4
   13598:	ldr	lr, [sp, #84]	; 0x54
   1359c:	mov	r4, #2
   135a0:	rsblt	r3, r2, #0
   135a4:	b	135d0 <dcngettext@plt+0x2124>
   135a8:	cmp	r6, #6
   135ac:	mov	r0, r6
   135b0:	movle	r0, #6
   135b4:	sub	r4, r0, #6
   135b8:	b	128b0 <dcngettext@plt+0x1404>
   135bc:	movw	r5, #63636	; 0xf894
   135c0:	add	r3, r7, #100	; 0x64
   135c4:	movt	r5, #65535	; 0xffff
   135c8:	cmp	r2, r5
   135cc:	rsblt	r3, r7, #0
   135d0:	ldr	r2, [fp, #8]
   135d4:	cmp	r9, #0
   135d8:	mov	r8, #0
   135dc:	moveq	r9, r2
   135e0:	mov	r2, #0
   135e4:	cmp	r9, #43	; 0x2b
   135e8:	bne	12b48 <dcngettext@plt+0x169c>
   135ec:	cmp	r4, r6
   135f0:	mov	r8, r4
   135f4:	mov	r5, #0
   135f8:	movw	r4, #9999	; 0x270f
   135fc:	mov	r7, #0
   13600:	movwlt	r5, #1
   13604:	cmp	r8, #2
   13608:	movweq	r4, #99	; 0x63
   1360c:	cmp	r4, r3
   13610:	mov	r4, r8
   13614:	movwcc	r7, #1
   13618:	orr	r8, r5, r7
   1361c:	b	12b48 <dcngettext@plt+0x169c>
   13620:	cmp	r2, #0
   13624:	beq	13810 <dcngettext@plt+0x2364>
   13628:	movw	r4, #10000	; 0x2710
   1362c:	mov	r8, #1
   13630:	mla	r2, r3, r4, r2
   13634:	mov	r3, #100	; 0x64
   13638:	mov	r4, #9
   1363c:	mla	r3, lr, r3, r2
   13640:	ldr	lr, [sp, #84]	; 0x54
   13644:	mov	r2, #20
   13648:	b	12b48 <dcngettext@plt+0x169c>
   1364c:	ldr	r3, [sp, #88]	; 0x58
   13650:	sub	r0, fp, #46	; 0x2e
   13654:	mov	r2, #1
   13658:	bl	1126c <fwrite@plt>
   1365c:	cmp	r9, #45	; 0x2d
   13660:	mov	r4, #0
   13664:	mvn	r1, #9
   13668:	subne	r0, r6, r7
   1366c:	subne	r0, r0, #9
   13670:	bicne	r4, r0, r0, asr #31
   13674:	ldr	r0, [sp, #92]	; 0x5c
   13678:	add	r0, r0, r7
   1367c:	sub	r0, r1, r0
   13680:	cmp	r4, r0
   13684:	bcs	13884 <dcngettext@plt+0x23d8>
   13688:	ldr	r6, [sp, #88]	; 0x58
   1368c:	cmp	r6, #0
   13690:	cmpne	r4, #0
   13694:	bne	136b0 <dcngettext@plt+0x2204>
   13698:	ldr	r0, [sp, #92]	; 0x5c
   1369c:	add	r0, r0, r4
   136a0:	add	r0, r0, r7
   136a4:	mov	r7, r6
   136a8:	add	ip, r0, #9
   136ac:	b	1213c <dcngettext@plt+0xc90>
   136b0:	uxtb	r0, r9
   136b4:	cmp	r0, #43	; 0x2b
   136b8:	beq	136c8 <dcngettext@plt+0x221c>
   136bc:	cmp	r0, #48	; 0x30
   136c0:	mov	r5, r4
   136c4:	bne	136e4 <dcngettext@plt+0x2238>
   136c8:	mov	r5, r4
   136cc:	mov	r0, #48	; 0x30
   136d0:	mov	r1, r6
   136d4:	bl	11434 <fputc@plt>
   136d8:	subs	r5, r5, #1
   136dc:	bne	136cc <dcngettext@plt+0x2220>
   136e0:	b	13698 <dcngettext@plt+0x21ec>
   136e4:	mov	r0, #32
   136e8:	mov	r1, r6
   136ec:	bl	11434 <fputc@plt>
   136f0:	subs	r5, r5, #1
   136f4:	bne	136e4 <dcngettext@plt+0x2238>
   136f8:	b	13698 <dcngettext@plt+0x21ec>
   136fc:	ldr	r6, [sp, #88]	; 0x58
   13700:	cmp	r4, #0
   13704:	beq	1371c <dcngettext@plt+0x2270>
   13708:	mov	r0, #32
   1370c:	mov	r1, r6
   13710:	bl	11434 <fputc@plt>
   13714:	subs	r4, r4, #1
   13718:	bne	13708 <dcngettext@plt+0x225c>
   1371c:	ldr	r0, [sp, #76]	; 0x4c
   13720:	tst	r0, #1
   13724:	beq	13760 <dcngettext@plt+0x22b4>
   13728:	ldr	r7, [sp, #88]	; 0x58
   1372c:	cmp	r5, #0
   13730:	beq	137c4 <dcngettext@plt+0x2318>
   13734:	bl	112fc <__ctype_tolower_loc@plt>
   13738:	ldr	r4, [sp, #44]	; 0x2c
   1373c:	mov	r6, r0
   13740:	ldrb	r0, [r4], #1
   13744:	ldr	r1, [r6]
   13748:	ldr	r0, [r1, r0, lsl #2]
   1374c:	mov	r1, r7
   13750:	bl	11434 <fputc@plt>
   13754:	subs	r5, r5, #1
   13758:	bne	13740 <dcngettext@plt+0x2294>
   1375c:	b	137c4 <dcngettext@plt+0x2318>
   13760:	ldr	r1, [sp, #84]	; 0x54
   13764:	eor	r0, r0, #1
   13768:	and	r0, r1, r0
   1376c:	tst	r0, #1
   13770:	beq	137ac <dcngettext@plt+0x2300>
   13774:	ldr	r7, [sp, #88]	; 0x58
   13778:	cmp	r5, #0
   1377c:	beq	137c4 <dcngettext@plt+0x2318>
   13780:	bl	11308 <__ctype_toupper_loc@plt>
   13784:	ldr	r4, [sp, #44]	; 0x2c
   13788:	mov	r6, r0
   1378c:	ldrb	r0, [r4], #1
   13790:	ldr	r1, [r6]
   13794:	ldr	r0, [r1, r0, lsl #2]
   13798:	mov	r1, r7
   1379c:	bl	11434 <fputc@plt>
   137a0:	subs	r5, r5, #1
   137a4:	bne	1378c <dcngettext@plt+0x22e0>
   137a8:	b	137c4 <dcngettext@plt+0x2318>
   137ac:	ldr	r7, [sp, #88]	; 0x58
   137b0:	ldr	r0, [sp, #44]	; 0x2c
   137b4:	mov	r1, r5
   137b8:	mov	r2, #1
   137bc:	mov	r3, r7
   137c0:	bl	1126c <fwrite@plt>
   137c4:	ldr	ip, [sp, #92]	; 0x5c
   137c8:	add	ip, r8, ip
   137cc:	b	1213c <dcngettext@plt+0xc90>
   137d0:	ldr	r6, [sp, #88]	; 0x58
   137d4:	mov	r0, #32
   137d8:	mov	r1, r6
   137dc:	bl	11434 <fputc@plt>
   137e0:	subs	r5, r5, #1
   137e4:	bne	137d4 <dcngettext@plt+0x2328>
   137e8:	mov	r0, #10
   137ec:	b	13850 <dcngettext@plt+0x23a4>
   137f0:	ldr	r6, [sp, #88]	; 0x58
   137f4:	mov	r0, #32
   137f8:	mov	r1, r6
   137fc:	bl	11434 <fputc@plt>
   13800:	subs	r5, r5, #1
   13804:	bne	137f4 <dcngettext@plt+0x2348>
   13808:	mov	r0, #9
   1380c:	b	13850 <dcngettext@plt+0x23a4>
   13810:	cmp	lr, #0
   13814:	beq	13868 <dcngettext@plt+0x23bc>
   13818:	mov	r2, #100	; 0x64
   1381c:	mov	r4, #6
   13820:	mov	r8, #1
   13824:	mla	r3, r3, r2, lr
   13828:	ldr	lr, [sp, #84]	; 0x54
   1382c:	mov	r2, #4
   13830:	b	12b48 <dcngettext@plt+0x169c>
   13834:	ldr	r6, [sp, #88]	; 0x58
   13838:	mov	r0, #32
   1383c:	mov	r1, r6
   13840:	bl	11434 <fputc@plt>
   13844:	subs	r5, r5, #1
   13848:	bne	13838 <dcngettext@plt+0x238c>
   1384c:	ldrb	r0, [sl]
   13850:	mov	r1, r6
   13854:	bl	11434 <fputc@plt>
   13858:	mov	ip, r7
   1385c:	ldr	r7, [sp, #88]	; 0x58
   13860:	add	ip, r4, ip
   13864:	b	1213c <dcngettext@plt+0xc90>
   13868:	mov	r4, #3
   1386c:	b	1337c <dcngettext@plt+0x1ed0>
   13870:	mov	ip, #0
   13874:	ldr	r0, [sp, #60]	; 0x3c
   13878:	ldr	r1, [sp, #56]	; 0x38
   1387c:	str	r1, [r0]
   13880:	b	13894 <dcngettext@plt+0x23e8>
   13884:	mov	r0, #34	; 0x22
   13888:	ldr	r1, [sp, #60]	; 0x3c
   1388c:	mov	ip, #0
   13890:	str	r0, [r1]
   13894:	mov	r0, ip
   13898:	sub	sp, fp, #28
   1389c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138a0:	mov	r0, #75	; 0x4b
   138a4:	b	13888 <dcngettext@plt+0x23dc>
   138a8:	push	{r4, r5, r6, r7, fp, lr}
   138ac:	add	fp, sp, #16
   138b0:	sub	sp, sp, #8
   138b4:	mov	r4, r0
   138b8:	ldr	r0, [r0, #4]
   138bc:	mov	r5, r3
   138c0:	mov	r6, r2
   138c4:	ldr	r1, [r4, #8]
   138c8:	cmp	r1, r0
   138cc:	bne	138e8 <dcngettext@plt+0x243c>
   138d0:	ldrd	r0, [r4, #16]
   138d4:	cmp	r1, r0
   138d8:	bne	138e8 <dcngettext@plt+0x243c>
   138dc:	ldr	r0, [r4, #36]	; 0x24
   138e0:	cmp	r0, #0
   138e4:	beq	13900 <dcngettext@plt+0x2454>
   138e8:	mov	r0, r4
   138ec:	mov	r2, r6
   138f0:	mov	r3, r5
   138f4:	sub	sp, fp, #16
   138f8:	pop	{r4, r5, r6, r7, fp, lr}
   138fc:	b	113d4 <fseeko64@plt>
   13900:	ldr	r7, [fp, #8]
   13904:	mov	r0, r4
   13908:	bl	113b0 <fileno@plt>
   1390c:	mov	r2, r6
   13910:	mov	r3, r5
   13914:	str	r7, [sp]
   13918:	bl	11278 <lseek64@plt>
   1391c:	and	r2, r0, r1
   13920:	cmn	r2, #1
   13924:	beq	13944 <dcngettext@plt+0x2498>
   13928:	strd	r0, [r4, #80]	; 0x50
   1392c:	ldr	r0, [r4]
   13930:	bic	r0, r0, #16
   13934:	str	r0, [r4]
   13938:	mov	r0, #0
   1393c:	sub	sp, fp, #16
   13940:	pop	{r4, r5, r6, r7, fp, pc}
   13944:	mvn	r0, #0
   13948:	sub	sp, fp, #16
   1394c:	pop	{r4, r5, r6, r7, fp, pc}
   13950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13954:	add	fp, sp, #24
   13958:	sub	sp, sp, #8
   1395c:	movw	r6, #33160	; 0x8188
   13960:	mov	r4, #0
   13964:	cmp	r0, #2
   13968:	movt	r6, #2
   1396c:	ldr	r7, [r6]
   13970:	str	r4, [r6]
   13974:	bne	139e8 <dcngettext@plt+0x253c>
   13978:	mov	r8, r3
   1397c:	movw	r3, #30004	; 0x7534
   13980:	mov	r5, r2
   13984:	movw	r2, #29989	; 0x7525
   13988:	mov	r0, #2
   1398c:	str	r4, [sp]
   13990:	movt	r2, #1
   13994:	movt	r3, #1
   13998:	bl	11320 <getopt_long@plt>
   1399c:	cmp	r0, #104	; 0x68
   139a0:	beq	139dc <dcngettext@plt+0x2530>
   139a4:	cmp	r0, #118	; 0x76
   139a8:	bne	139e8 <dcngettext@plt+0x253c>
   139ac:	movw	r0, #33156	; 0x8184
   139b0:	ldr	r3, [fp, #8]
   139b4:	add	r1, fp, #16
   139b8:	mov	r2, r8
   139bc:	movt	r0, #2
   139c0:	str	r1, [sp, #4]
   139c4:	str	r1, [sp]
   139c8:	mov	r1, r5
   139cc:	ldr	r0, [r0]
   139d0:	bl	16384 <dcngettext@plt+0x4ed8>
   139d4:	mov	r0, #0
   139d8:	bl	11344 <exit@plt>
   139dc:	ldr	r1, [fp, #12]
   139e0:	mov	r0, #0
   139e4:	blx	r1
   139e8:	movw	r0, #33144	; 0x8178
   139ec:	str	r7, [r6]
   139f0:	movt	r0, #2
   139f4:	str	r4, [r0]
   139f8:	sub	sp, fp, #24
   139fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a04:	add	fp, sp, #24
   13a08:	sub	sp, sp, #8
   13a0c:	mov	r8, r3
   13a10:	ldr	r3, [fp, #12]
   13a14:	movw	r7, #33160	; 0x8188
   13a18:	movw	r5, #29128	; 0x71c8
   13a1c:	mov	r9, r2
   13a20:	mov	r2, #1
   13a24:	mov	r6, #0
   13a28:	movt	r7, #2
   13a2c:	movt	r5, #1
   13a30:	str	r6, [sp]
   13a34:	ldr	r4, [r7]
   13a38:	str	r2, [r7]
   13a3c:	movw	r2, #29989	; 0x7525
   13a40:	cmp	r3, #0
   13a44:	movw	r3, #30004	; 0x7534
   13a48:	movt	r2, #1
   13a4c:	movt	r3, #1
   13a50:	movne	r2, r5
   13a54:	bl	11320 <getopt_long@plt>
   13a58:	cmn	r0, #1
   13a5c:	beq	13a88 <dcngettext@plt+0x25dc>
   13a60:	cmp	r0, #104	; 0x68
   13a64:	beq	13a7c <dcngettext@plt+0x25d0>
   13a68:	cmp	r0, #118	; 0x76
   13a6c:	beq	13a94 <dcngettext@plt+0x25e8>
   13a70:	movw	r0, #33068	; 0x812c
   13a74:	movt	r0, #2
   13a78:	ldr	r6, [r0]
   13a7c:	ldr	r1, [fp, #16]
   13a80:	mov	r0, r6
   13a84:	blx	r1
   13a88:	str	r4, [r7]
   13a8c:	sub	sp, fp, #24
   13a90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13a94:	movw	r0, #33156	; 0x8184
   13a98:	ldr	r3, [fp, #8]
   13a9c:	add	r1, fp, #20
   13aa0:	mov	r2, r8
   13aa4:	movt	r0, #2
   13aa8:	str	r1, [sp, #4]
   13aac:	str	r1, [sp]
   13ab0:	mov	r1, r9
   13ab4:	ldr	r0, [r0]
   13ab8:	bl	16384 <dcngettext@plt+0x4ed8>
   13abc:	mov	r0, #0
   13ac0:	bl	11344 <exit@plt>
   13ac4:	push	{r4, r5, fp, lr}
   13ac8:	add	fp, sp, #8
   13acc:	cmp	r0, #0
   13ad0:	beq	13b64 <dcngettext@plt+0x26b8>
   13ad4:	mov	r1, #47	; 0x2f
   13ad8:	mov	r4, r0
   13adc:	bl	1141c <strrchr@plt>
   13ae0:	cmp	r0, #0
   13ae4:	mov	r5, r4
   13ae8:	addne	r5, r0, #1
   13aec:	sub	r0, r5, r4
   13af0:	cmp	r0, #7
   13af4:	blt	13b48 <dcngettext@plt+0x269c>
   13af8:	movw	r1, #30108	; 0x759c
   13afc:	sub	r0, r5, #7
   13b00:	mov	r2, #7
   13b04:	movt	r1, #1
   13b08:	bl	11488 <strncmp@plt>
   13b0c:	cmp	r0, #0
   13b10:	bne	13b48 <dcngettext@plt+0x269c>
   13b14:	movw	r1, #30116	; 0x75a4
   13b18:	mov	r0, r5
   13b1c:	mov	r2, #3
   13b20:	movt	r1, #1
   13b24:	bl	11488 <strncmp@plt>
   13b28:	cmp	r0, #0
   13b2c:	beq	13b38 <dcngettext@plt+0x268c>
   13b30:	mov	r4, r5
   13b34:	b	13b48 <dcngettext@plt+0x269c>
   13b38:	movw	r0, #33136	; 0x8170
   13b3c:	add	r4, r5, #3
   13b40:	movt	r0, #2
   13b44:	str	r4, [r0]
   13b48:	movw	r0, #33140	; 0x8174
   13b4c:	movt	r0, #2
   13b50:	str	r4, [r0]
   13b54:	movw	r0, #33180	; 0x819c
   13b58:	movt	r0, #2
   13b5c:	str	r4, [r0]
   13b60:	pop	{r4, r5, fp, pc}
   13b64:	movw	r0, #33152	; 0x8180
   13b68:	mov	r1, #55	; 0x37
   13b6c:	mov	r2, #1
   13b70:	movt	r0, #2
   13b74:	ldr	r3, [r0]
   13b78:	movw	r0, #30052	; 0x7564
   13b7c:	movt	r0, #1
   13b80:	bl	1126c <fwrite@plt>
   13b84:	bl	11494 <abort@plt>
   13b88:	push	{r4, r5, r6, sl, fp, lr}
   13b8c:	add	fp, sp, #16
   13b90:	mov	r4, r0
   13b94:	movw	r0, #33184	; 0x81a0
   13b98:	movt	r0, #2
   13b9c:	cmp	r4, #0
   13ba0:	moveq	r4, r0
   13ba4:	bl	11374 <__errno_location@plt>
   13ba8:	ldr	r6, [r0]
   13bac:	mov	r5, r0
   13bb0:	mov	r0, r4
   13bb4:	mov	r1, #48	; 0x30
   13bb8:	bl	16b2c <dcngettext@plt+0x5680>
   13bbc:	str	r6, [r5]
   13bc0:	pop	{r4, r5, r6, sl, fp, pc}
   13bc4:	movw	r1, #33184	; 0x81a0
   13bc8:	cmp	r0, #0
   13bcc:	movt	r1, #2
   13bd0:	movne	r1, r0
   13bd4:	ldr	r0, [r1]
   13bd8:	bx	lr
   13bdc:	movw	r2, #33184	; 0x81a0
   13be0:	cmp	r0, #0
   13be4:	movt	r2, #2
   13be8:	movne	r2, r0
   13bec:	str	r1, [r2]
   13bf0:	bx	lr
   13bf4:	movw	r3, #33184	; 0x81a0
   13bf8:	cmp	r0, #0
   13bfc:	and	r2, r2, #1
   13c00:	movt	r3, #2
   13c04:	movne	r3, r0
   13c08:	ubfx	r0, r1, #5, #3
   13c0c:	and	r1, r1, #31
   13c10:	add	ip, r3, r0, lsl #2
   13c14:	mov	r0, #1
   13c18:	ldr	r3, [ip, #8]
   13c1c:	and	r0, r0, r3, lsr r1
   13c20:	eor	r2, r0, r2
   13c24:	eor	r1, r3, r2, lsl r1
   13c28:	str	r1, [ip, #8]
   13c2c:	bx	lr
   13c30:	movw	r2, #33184	; 0x81a0
   13c34:	cmp	r0, #0
   13c38:	movt	r2, #2
   13c3c:	movne	r2, r0
   13c40:	ldr	r0, [r2, #4]
   13c44:	str	r1, [r2, #4]
   13c48:	bx	lr
   13c4c:	push	{fp, lr}
   13c50:	mov	fp, sp
   13c54:	movw	r3, #33184	; 0x81a0
   13c58:	cmp	r0, #0
   13c5c:	movt	r3, #2
   13c60:	movne	r3, r0
   13c64:	cmp	r1, #0
   13c68:	mov	r0, #10
   13c6c:	cmpne	r2, #0
   13c70:	str	r0, [r3]
   13c74:	bne	13c7c <dcngettext@plt+0x27d0>
   13c78:	bl	11494 <abort@plt>
   13c7c:	str	r1, [r3, #40]	; 0x28
   13c80:	str	r2, [r3, #44]	; 0x2c
   13c84:	pop	{fp, pc}
   13c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c8c:	add	fp, sp, #28
   13c90:	sub	sp, sp, #20
   13c94:	mov	r7, r0
   13c98:	ldr	r0, [fp, #8]
   13c9c:	movw	r5, #33184	; 0x81a0
   13ca0:	mov	r8, r3
   13ca4:	mov	r9, r2
   13ca8:	mov	sl, r1
   13cac:	movt	r5, #2
   13cb0:	cmp	r0, #0
   13cb4:	movne	r5, r0
   13cb8:	bl	11374 <__errno_location@plt>
   13cbc:	ldr	r2, [r5, #40]	; 0x28
   13cc0:	ldr	r3, [r5, #44]	; 0x2c
   13cc4:	mov	r4, r0
   13cc8:	ldm	r5, {r0, r1}
   13ccc:	add	r5, r5, #8
   13cd0:	ldr	r6, [r4]
   13cd4:	stm	sp, {r0, r1, r5}
   13cd8:	mov	r0, r7
   13cdc:	mov	r1, sl
   13ce0:	str	r2, [sp, #12]
   13ce4:	str	r3, [sp, #16]
   13ce8:	mov	r2, r9
   13cec:	mov	r3, r8
   13cf0:	bl	13d00 <dcngettext@plt+0x2854>
   13cf4:	str	r6, [r4]
   13cf8:	sub	sp, fp, #28
   13cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d04:	add	fp, sp, #28
   13d08:	sub	sp, sp, #156	; 0x9c
   13d0c:	mov	r5, r0
   13d10:	add	r0, r2, #1
   13d14:	mov	r6, r1
   13d18:	mov	sl, r3
   13d1c:	str	r2, [fp, #-80]	; 0xffffffb0
   13d20:	str	r0, [sp, #72]	; 0x48
   13d24:	ldr	r0, [fp, #12]
   13d28:	and	r1, r0, #1
   13d2c:	str	r1, [sp, #36]	; 0x24
   13d30:	and	r1, r0, #4
   13d34:	str	r1, [sp, #32]
   13d38:	ubfx	r9, r0, #1, #1
   13d3c:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13d40:	str	r0, [sp, #40]	; 0x28
   13d44:	ldr	r0, [fp, #24]
   13d48:	ldr	r7, [fp, #8]
   13d4c:	mov	r1, #0
   13d50:	str	r5, [fp, #-84]	; 0xffffffac
   13d54:	str	r1, [fp, #-56]	; 0xffffffc8
   13d58:	mov	r1, #0
   13d5c:	str	r1, [sp, #60]	; 0x3c
   13d60:	mov	r1, #1
   13d64:	str	r1, [fp, #-48]	; 0xffffffd0
   13d68:	str	r0, [sp, #80]	; 0x50
   13d6c:	ldr	r0, [fp, #20]
   13d70:	str	r0, [sp, #76]	; 0x4c
   13d74:	mov	r0, #0
   13d78:	str	r0, [sp, #56]	; 0x38
   13d7c:	mov	r0, #0
   13d80:	str	r0, [fp, #-88]	; 0xffffffa8
   13d84:	mov	r0, #0
   13d88:	str	r0, [fp, #-72]	; 0xffffffb8
   13d8c:	mov	r0, #0
   13d90:	cmp	r7, #10
   13d94:	bhi	14d28 <dcngettext@plt+0x387c>
   13d98:	add	r1, pc, #24
   13d9c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13da0:	mov	r4, r6
   13da4:	mov	r8, #0
   13da8:	mov	r2, #1
   13dac:	mov	r3, #0
   13db0:	mov	lr, sl
   13db4:	ldr	pc, [r1, r7, lsl #2]
   13db8:	andeq	r3, r1, ip, ror lr
   13dbc:	ldrdeq	r3, [r1], -r0
   13dc0:	muleq	r1, r0, lr
   13dc4:	andeq	r3, r1, r4, ror lr
   13dc8:	andeq	r3, r1, r4, asr #29
   13dcc:	strdeq	r3, [r1], -r8
   13dd0:	andeq	r3, r1, r0, lsr #29
   13dd4:	andeq	r3, r1, ip, ror pc
   13dd8:	andeq	r3, r1, r4, ror #27
   13ddc:	andeq	r3, r1, r4, ror #27
   13de0:	andeq	r3, r1, ip, lsl #28
   13de4:	movw	r0, #30200	; 0x75f8
   13de8:	mov	r1, r7
   13dec:	movt	r0, #1
   13df0:	bl	15730 <dcngettext@plt+0x4284>
   13df4:	str	r0, [sp, #76]	; 0x4c
   13df8:	movw	r0, #30202	; 0x75fa
   13dfc:	mov	r1, r7
   13e00:	movt	r0, #1
   13e04:	bl	15730 <dcngettext@plt+0x4284>
   13e08:	str	r0, [sp, #80]	; 0x50
   13e0c:	mov	r8, #0
   13e10:	tst	r9, #1
   13e14:	bne	13e4c <dcngettext@plt+0x29a0>
   13e18:	ldr	r0, [sp, #76]	; 0x4c
   13e1c:	ldrb	r0, [r0]
   13e20:	cmp	r0, #0
   13e24:	beq	13e4c <dcngettext@plt+0x29a0>
   13e28:	ldr	r1, [sp, #76]	; 0x4c
   13e2c:	mov	r8, #0
   13e30:	add	r1, r1, #1
   13e34:	cmp	r8, r4
   13e38:	strbcc	r0, [r5, r8]
   13e3c:	ldrb	r0, [r1, r8]
   13e40:	add	r8, r8, #1
   13e44:	cmp	r0, #0
   13e48:	bne	13e34 <dcngettext@plt+0x2988>
   13e4c:	ldr	r6, [sp, #80]	; 0x50
   13e50:	mov	r0, r6
   13e54:	bl	1135c <strlen@plt>
   13e58:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13e5c:	str	r0, [fp, #-72]	; 0xffffffb8
   13e60:	str	r6, [fp, #-88]	; 0xffffffa8
   13e64:	mov	r2, #1
   13e68:	mov	r3, r9
   13e6c:	mov	lr, sl
   13e70:	b	13f7c <dcngettext@plt+0x2ad0>
   13e74:	mov	r0, #1
   13e78:	b	13ed0 <dcngettext@plt+0x2a24>
   13e7c:	mov	r7, #0
   13e80:	mov	r8, #0
   13e84:	mov	r2, r0
   13e88:	mov	r3, #0
   13e8c:	b	13f7c <dcngettext@plt+0x2ad0>
   13e90:	tst	r9, #1
   13e94:	bne	13ed0 <dcngettext@plt+0x2a24>
   13e98:	mov	r2, r0
   13e9c:	b	13f28 <dcngettext@plt+0x2a7c>
   13ea0:	mov	r0, #1
   13ea4:	mov	r8, #0
   13ea8:	mov	r7, #5
   13eac:	mov	r2, #1
   13eb0:	str	r0, [fp, #-72]	; 0xffffffb8
   13eb4:	movw	r0, #30198	; 0x75f6
   13eb8:	movt	r0, #1
   13ebc:	str	r0, [fp, #-88]	; 0xffffffa8
   13ec0:	b	13ef0 <dcngettext@plt+0x2a44>
   13ec4:	mov	r2, #1
   13ec8:	tst	r9, #1
   13ecc:	beq	13f28 <dcngettext@plt+0x2a7c>
   13ed0:	mov	r1, #1
   13ed4:	mov	r8, #0
   13ed8:	mov	r7, #2
   13edc:	mov	r2, r0
   13ee0:	str	r1, [fp, #-72]	; 0xffffffb8
   13ee4:	movw	r1, #30202	; 0x75fa
   13ee8:	movt	r1, #1
   13eec:	str	r1, [fp, #-88]	; 0xffffffa8
   13ef0:	mov	r3, #1
   13ef4:	b	13f7c <dcngettext@plt+0x2ad0>
   13ef8:	tst	r9, #1
   13efc:	beq	13f4c <dcngettext@plt+0x2aa0>
   13f00:	mov	r0, #1
   13f04:	mov	r8, #0
   13f08:	mov	r2, #1
   13f0c:	mov	r3, #1
   13f10:	mov	r7, #5
   13f14:	str	r0, [fp, #-72]	; 0xffffffb8
   13f18:	movw	r0, #30198	; 0x75f6
   13f1c:	movt	r0, #1
   13f20:	str	r0, [fp, #-88]	; 0xffffffa8
   13f24:	b	13f7c <dcngettext@plt+0x2ad0>
   13f28:	cmp	r4, #0
   13f2c:	mov	r8, #1
   13f30:	mov	r3, #0
   13f34:	mov	r7, #2
   13f38:	movne	r0, #39	; 0x27
   13f3c:	strbne	r0, [r5]
   13f40:	movw	r0, #30202	; 0x75fa
   13f44:	movt	r0, #1
   13f48:	b	13f70 <dcngettext@plt+0x2ac4>
   13f4c:	cmp	r4, #0
   13f50:	mov	r8, #1
   13f54:	mov	r2, #1
   13f58:	mov	r7, #5
   13f5c:	mov	r3, #0
   13f60:	movne	r0, #34	; 0x22
   13f64:	strbne	r0, [r5]
   13f68:	movw	r0, #30198	; 0x75f6
   13f6c:	movt	r0, #1
   13f70:	str	r0, [fp, #-88]	; 0xffffffa8
   13f74:	mov	r0, #1
   13f78:	str	r0, [fp, #-72]	; 0xffffffb8
   13f7c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13f80:	eor	r6, r3, #1
   13f84:	str	r7, [fp, #-68]	; 0xffffffbc
   13f88:	str	r3, [fp, #-76]	; 0xffffffb4
   13f8c:	str	r2, [sp, #84]	; 0x54
   13f90:	str	r6, [sp, #92]	; 0x5c
   13f94:	cmp	r0, #0
   13f98:	movwne	r0, #1
   13f9c:	and	r1, r0, r3
   13fa0:	and	r1, r2, r1
   13fa4:	str	r1, [sp, #48]	; 0x30
   13fa8:	sub	r1, r7, #2
   13fac:	clz	r1, r1
   13fb0:	lsr	r1, r1, #5
   13fb4:	and	r1, r1, r3
   13fb8:	str	r1, [sp, #64]	; 0x40
   13fbc:	subs	r1, r7, #2
   13fc0:	mov	r7, #0
   13fc4:	movwne	r1, #1
   13fc8:	orr	r6, r1, r6
   13fcc:	and	r1, r1, r2
   13fd0:	and	r0, r0, r1
   13fd4:	str	r6, [sp, #68]	; 0x44
   13fd8:	str	r0, [fp, #-60]	; 0xffffffc4
   13fdc:	orr	r0, r1, r3
   13fe0:	ldr	r1, [fp, #16]
   13fe4:	eor	r0, r0, #1
   13fe8:	clz	r1, r1
   13fec:	lsr	r1, r1, #5
   13ff0:	orr	r0, r1, r0
   13ff4:	str	r0, [fp, #-64]	; 0xffffffc0
   13ff8:	eor	r0, r2, #1
   13ffc:	str	r0, [sp, #52]	; 0x34
   14000:	cmn	lr, #1
   14004:	beq	14014 <dcngettext@plt+0x2b68>
   14008:	cmp	r7, lr
   1400c:	bne	14020 <dcngettext@plt+0x2b74>
   14010:	b	14b68 <dcngettext@plt+0x36bc>
   14014:	ldrb	r0, [ip, r7]
   14018:	cmp	r0, #0
   1401c:	beq	14b70 <dcngettext@plt+0x36c4>
   14020:	ldr	r0, [fp, #-60]	; 0xffffffc4
   14024:	mov	sl, #0
   14028:	cmp	r0, #0
   1402c:	beq	14064 <dcngettext@plt+0x2bb8>
   14030:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14034:	add	r5, r7, r0
   14038:	cmp	r0, #2
   1403c:	bcc	14058 <dcngettext@plt+0x2bac>
   14040:	cmn	lr, #1
   14044:	bne	14058 <dcngettext@plt+0x2bac>
   14048:	mov	r0, ip
   1404c:	bl	1135c <strlen@plt>
   14050:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14054:	mov	lr, r0
   14058:	cmp	r5, lr
   1405c:	bls	1406c <dcngettext@plt+0x2bc0>
   14060:	ldr	r5, [fp, #-84]	; 0xffffffac
   14064:	mov	r0, #0
   14068:	b	140b8 <dcngettext@plt+0x2c0c>
   1406c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14070:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14074:	add	r0, ip, r7
   14078:	mov	r6, r4
   1407c:	mov	r4, lr
   14080:	bl	11350 <bcmp@plt>
   14084:	ldr	r2, [sp, #92]	; 0x5c
   14088:	cmp	r0, #0
   1408c:	ldr	r5, [fp, #-84]	; 0xffffffac
   14090:	mov	r1, r0
   14094:	movwne	r1, #1
   14098:	orr	r1, r1, r2
   1409c:	tst	r1, #1
   140a0:	beq	14bf8 <dcngettext@plt+0x374c>
   140a4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   140a8:	clz	r0, r0
   140ac:	mov	lr, r4
   140b0:	mov	r4, r6
   140b4:	lsr	r0, r0, #5
   140b8:	str	r0, [fp, #-52]	; 0xffffffcc
   140bc:	ldrb	r6, [ip, r7]
   140c0:	cmp	r6, #126	; 0x7e
   140c4:	bhi	145f4 <dcngettext@plt+0x3148>
   140c8:	add	r3, pc, #16
   140cc:	mov	r9, #1
   140d0:	mov	r2, #110	; 0x6e
   140d4:	mov	r0, #97	; 0x61
   140d8:	mov	r1, #0
   140dc:	ldr	pc, [r3, r6, lsl #2]
   140e0:	andeq	r4, r1, r4, asr r4
   140e4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140e8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140ec:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140f0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140f4:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140f8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   140fc:	ldrdeq	r4, [r1], -r0
   14100:	andeq	r4, r1, r4, lsr r4
   14104:	andeq	r4, r1, ip, lsr #8
   14108:	andeq	r4, r1, r0, asr #8
   1410c:	andeq	r4, r1, ip, asr r5
   14110:	andeq	r4, r1, r4, lsr #8
   14114:	andeq	r4, r1, ip, lsr r4
   14118:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1411c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14120:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14124:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14128:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1412c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14130:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14134:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14138:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1413c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14140:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14144:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14148:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1414c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14150:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14154:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14158:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1415c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14160:	ldrdeq	r4, [r1], -r8
   14164:	ldrdeq	r4, [r1], -ip
   14168:	ldrdeq	r4, [r1], -ip
   1416c:	andeq	r4, r1, r4, asr #7
   14170:	ldrdeq	r4, [r1], -ip
   14174:	ldrdeq	r4, [r1], -ip
   14178:	ldrdeq	r4, [r1], -ip
   1417c:	andeq	r4, r1, r4, ror #10
   14180:	ldrdeq	r4, [r1], -ip
   14184:	ldrdeq	r4, [r1], -ip
   14188:	ldrdeq	r4, [r1], -ip
   1418c:	ldrdeq	r4, [r1], -ip
   14190:	ldrdeq	r4, [r1], -ip
   14194:	ldrdeq	r4, [r1], -ip
   14198:	ldrdeq	r4, [r1], -ip
   1419c:	ldrdeq	r4, [r1], -ip
   141a0:	ldrdeq	r4, [r1], -ip
   141a4:	ldrdeq	r4, [r1], -ip
   141a8:	ldrdeq	r4, [r1], -ip
   141ac:	ldrdeq	r4, [r1], -ip
   141b0:	ldrdeq	r4, [r1], -ip
   141b4:	ldrdeq	r4, [r1], -ip
   141b8:	ldrdeq	r4, [r1], -ip
   141bc:	ldrdeq	r4, [r1], -ip
   141c0:	ldrdeq	r4, [r1], -ip
   141c4:	ldrdeq	r4, [r1], -ip
   141c8:	ldrdeq	r4, [r1], -ip
   141cc:	ldrdeq	r4, [r1], -ip
   141d0:	ldrdeq	r4, [r1], -ip
   141d4:	ldrdeq	r4, [r1], -ip
   141d8:	ldrdeq	r4, [r1], -ip
   141dc:	andeq	r4, r1, ip, lsr #10
   141e0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141e4:	ldrdeq	r4, [r1], -ip
   141e8:	ldrdeq	r4, [r1], -ip
   141ec:	ldrdeq	r4, [r1], -ip
   141f0:	ldrdeq	r4, [r1], -ip
   141f4:	ldrdeq	r4, [r1], -ip
   141f8:	ldrdeq	r4, [r1], -ip
   141fc:	ldrdeq	r4, [r1], -ip
   14200:	ldrdeq	r4, [r1], -ip
   14204:	ldrdeq	r4, [r1], -ip
   14208:	ldrdeq	r4, [r1], -ip
   1420c:	ldrdeq	r4, [r1], -ip
   14210:	ldrdeq	r4, [r1], -ip
   14214:	ldrdeq	r4, [r1], -ip
   14218:	ldrdeq	r4, [r1], -ip
   1421c:	ldrdeq	r4, [r1], -ip
   14220:	ldrdeq	r4, [r1], -ip
   14224:	ldrdeq	r4, [r1], -ip
   14228:	ldrdeq	r4, [r1], -ip
   1422c:	ldrdeq	r4, [r1], -ip
   14230:	ldrdeq	r4, [r1], -ip
   14234:	ldrdeq	r4, [r1], -ip
   14238:	ldrdeq	r4, [r1], -ip
   1423c:	ldrdeq	r4, [r1], -ip
   14240:	ldrdeq	r4, [r1], -ip
   14244:	ldrdeq	r4, [r1], -ip
   14248:	ldrdeq	r4, [r1], -ip
   1424c:	ldrdeq	r4, [r1], -ip
   14250:	andeq	r4, r1, r4, lsl #8
   14254:	ldrdeq	r4, [r1], -ip
   14258:	ldrdeq	r4, [r1], -ip
   1425c:	ldrdeq	r4, [r1], -ip
   14260:	ldrdeq	r4, [r1], -ip
   14264:	ldrdeq	r4, [r1], -ip
   14268:	ldrdeq	r4, [r1], -ip
   1426c:	ldrdeq	r4, [r1], -ip
   14270:	ldrdeq	r4, [r1], -ip
   14274:	ldrdeq	r4, [r1], -ip
   14278:	ldrdeq	r4, [r1], -ip
   1427c:	ldrdeq	r4, [r1], -ip
   14280:	ldrdeq	r4, [r1], -ip
   14284:	ldrdeq	r4, [r1], -ip
   14288:	ldrdeq	r4, [r1], -ip
   1428c:	ldrdeq	r4, [r1], -ip
   14290:	ldrdeq	r4, [r1], -ip
   14294:	ldrdeq	r4, [r1], -ip
   14298:	ldrdeq	r4, [r1], -ip
   1429c:	ldrdeq	r4, [r1], -ip
   142a0:	ldrdeq	r4, [r1], -ip
   142a4:	ldrdeq	r4, [r1], -ip
   142a8:	ldrdeq	r4, [r1], -ip
   142ac:	ldrdeq	r4, [r1], -ip
   142b0:	ldrdeq	r4, [r1], -ip
   142b4:	ldrdeq	r4, [r1], -ip
   142b8:	ldrdeq	r4, [r1], -ip
   142bc:	ldrdeq	r4, [r1], -ip
   142c0:	ldrdeq	r4, [r1], -ip
   142c4:	ldrdeq	r4, [r1], -ip
   142c8:	ldrdeq	r4, [r1], -ip
   142cc:	muleq	r1, r8, r3
   142d0:	ldrdeq	r4, [r1], -ip
   142d4:	muleq	r1, r8, r3
   142d8:	andeq	r4, r1, r4, asr #7
   142dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   142e0:	tst	r0, #1
   142e4:	bne	14310 <dcngettext@plt+0x2e64>
   142e8:	ldr	r1, [fp, #16]
   142ec:	ubfx	r0, r6, #5, #3
   142f0:	mov	r2, #1
   142f4:	ldr	r0, [r1, r0, lsl #2]
   142f8:	and	r1, r6, #31
   142fc:	tst	r0, r2, lsl r1
   14300:	beq	14310 <dcngettext@plt+0x2e64>
   14304:	mov	r0, r6
   14308:	mov	r1, r9
   1430c:	b	14324 <dcngettext@plt+0x2e78>
   14310:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14314:	mov	r1, r9
   14318:	cmp	r0, #0
   1431c:	mov	r0, r6
   14320:	beq	14664 <dcngettext@plt+0x31b8>
   14324:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14328:	tst	r2, #1
   1432c:	bne	14c34 <dcngettext@plt+0x3788>
   14330:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14334:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14338:	subs	r2, r2, #2
   1433c:	movwne	r2, #1
   14340:	orr	r2, r2, r3
   14344:	tst	r2, #1
   14348:	bne	14384 <dcngettext@plt+0x2ed8>
   1434c:	cmp	r8, r4
   14350:	movcc	r2, #39	; 0x27
   14354:	strbcc	r2, [r5, r8]
   14358:	add	r2, r8, #1
   1435c:	cmp	r2, r4
   14360:	movcc	r3, #36	; 0x24
   14364:	strbcc	r3, [r5, r2]
   14368:	add	r2, r8, #2
   1436c:	add	r8, r8, #3
   14370:	cmp	r2, r4
   14374:	movcc	r3, #39	; 0x27
   14378:	strbcc	r3, [r5, r2]
   1437c:	mov	r2, #1
   14380:	str	r2, [fp, #-56]	; 0xffffffc8
   14384:	cmp	r8, r4
   14388:	movcc	r2, #92	; 0x5c
   1438c:	strbcc	r2, [r5, r8]
   14390:	add	r8, r8, #1
   14394:	b	146a8 <dcngettext@plt+0x31fc>
   14398:	cmp	lr, #1
   1439c:	beq	143c4 <dcngettext@plt+0x2f18>
   143a0:	mov	r9, #0
   143a4:	cmn	lr, #1
   143a8:	bne	143d0 <dcngettext@plt+0x2f24>
   143ac:	ldrb	r0, [ip, #1]
   143b0:	cmp	r0, #0
   143b4:	beq	143c4 <dcngettext@plt+0x2f18>
   143b8:	mvn	lr, #0
   143bc:	mov	sl, #0
   143c0:	b	142dc <dcngettext@plt+0x2e30>
   143c4:	mov	r9, #0
   143c8:	cmp	r7, #0
   143cc:	beq	143d8 <dcngettext@plt+0x2f2c>
   143d0:	mov	sl, #0
   143d4:	b	142dc <dcngettext@plt+0x2e30>
   143d8:	mov	r1, #1
   143dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   143e0:	cmp	r0, #2
   143e4:	bne	143fc <dcngettext@plt+0x2f50>
   143e8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   143ec:	mov	r9, r1
   143f0:	tst	r0, #1
   143f4:	beq	142dc <dcngettext@plt+0x2e30>
   143f8:	b	14c34 <dcngettext@plt+0x3788>
   143fc:	mov	r9, r1
   14400:	b	142dc <dcngettext@plt+0x2e30>
   14404:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14408:	cmp	r0, #2
   1440c:	bne	14648 <dcngettext@plt+0x319c>
   14410:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14414:	tst	r0, #1
   14418:	bne	14c34 <dcngettext@plt+0x3788>
   1441c:	mov	sl, #0
   14420:	b	1465c <dcngettext@plt+0x31b0>
   14424:	mov	r0, #102	; 0x66
   14428:	b	146d0 <dcngettext@plt+0x3224>
   1442c:	mov	r2, #116	; 0x74
   14430:	b	14440 <dcngettext@plt+0x2f94>
   14434:	mov	r0, #98	; 0x62
   14438:	b	146d0 <dcngettext@plt+0x3224>
   1443c:	mov	r2, #114	; 0x72
   14440:	ldr	r0, [sp, #68]	; 0x44
   14444:	tst	r0, #1
   14448:	mov	r0, r2
   1444c:	bne	146d0 <dcngettext@plt+0x3224>
   14450:	b	14c34 <dcngettext@plt+0x3788>
   14454:	ldr	r0, [sp, #84]	; 0x54
   14458:	tst	r0, #1
   1445c:	beq	146ec <dcngettext@plt+0x3240>
   14460:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14464:	tst	r0, #1
   14468:	bne	14d20 <dcngettext@plt+0x3874>
   1446c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14470:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14474:	subs	r0, r0, #2
   14478:	movwne	r0, #1
   1447c:	orr	r0, r0, r1
   14480:	tst	r0, #1
   14484:	bne	144c0 <dcngettext@plt+0x3014>
   14488:	cmp	r8, r4
   1448c:	movcc	r0, #39	; 0x27
   14490:	strbcc	r0, [r5, r8]
   14494:	add	r0, r8, #1
   14498:	cmp	r0, r4
   1449c:	movcc	r1, #36	; 0x24
   144a0:	strbcc	r1, [r5, r0]
   144a4:	add	r0, r8, #2
   144a8:	add	r8, r8, #3
   144ac:	cmp	r0, r4
   144b0:	movcc	r1, #39	; 0x27
   144b4:	strbcc	r1, [r5, r0]
   144b8:	mov	r0, #1
   144bc:	str	r0, [fp, #-56]	; 0xffffffc8
   144c0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   144c4:	cmp	r8, r4
   144c8:	mov	r9, #0
   144cc:	mov	sl, #1
   144d0:	mov	r6, #48	; 0x30
   144d4:	movcc	r0, #92	; 0x5c
   144d8:	strbcc	r0, [r5, r8]
   144dc:	add	r0, r8, #1
   144e0:	cmp	r1, #2
   144e4:	beq	148b4 <dcngettext@plt+0x3408>
   144e8:	add	r1, r7, #1
   144ec:	cmp	r1, lr
   144f0:	bcs	148b4 <dcngettext@plt+0x3408>
   144f4:	ldrb	r1, [ip, r1]
   144f8:	sub	r1, r1, #48	; 0x30
   144fc:	uxtb	r1, r1
   14500:	cmp	r1, #9
   14504:	bhi	148b4 <dcngettext@plt+0x3408>
   14508:	cmp	r0, r4
   1450c:	movcc	r1, #48	; 0x30
   14510:	strbcc	r1, [r5, r0]
   14514:	add	r0, r8, #2
   14518:	add	r8, r8, #3
   1451c:	cmp	r0, r4
   14520:	movcc	r1, #48	; 0x30
   14524:	strbcc	r1, [r5, r0]
   14528:	b	142dc <dcngettext@plt+0x2e30>
   1452c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14530:	mov	sl, #0
   14534:	mov	r6, #63	; 0x3f
   14538:	cmp	r0, #5
   1453c:	beq	148bc <dcngettext@plt+0x3410>
   14540:	cmp	r0, #2
   14544:	bne	14964 <dcngettext@plt+0x34b8>
   14548:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1454c:	mov	r9, #0
   14550:	tst	r0, #1
   14554:	beq	142dc <dcngettext@plt+0x2e30>
   14558:	b	14c34 <dcngettext@plt+0x3788>
   1455c:	mov	r0, #118	; 0x76
   14560:	b	146d0 <dcngettext@plt+0x3224>
   14564:	mov	r0, #1
   14568:	mov	r6, #39	; 0x27
   1456c:	str	r0, [sp, #60]	; 0x3c
   14570:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14574:	cmp	r0, #2
   14578:	bne	14708 <dcngettext@plt+0x325c>
   1457c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14580:	tst	r0, #1
   14584:	bne	14c34 <dcngettext@plt+0x3788>
   14588:	ldr	r2, [sp, #56]	; 0x38
   1458c:	clz	r1, r4
   14590:	mov	sl, #0
   14594:	mov	r9, #1
   14598:	lsr	r1, r1, #5
   1459c:	cmp	r2, #0
   145a0:	mov	r0, r2
   145a4:	movwne	r0, #1
   145a8:	orrs	r0, r0, r1
   145ac:	moveq	r2, r4
   145b0:	moveq	r4, r0
   145b4:	cmp	r8, r4
   145b8:	str	r2, [sp, #56]	; 0x38
   145bc:	movcc	r0, #39	; 0x27
   145c0:	strbcc	r0, [r5, r8]
   145c4:	add	r0, r8, #1
   145c8:	cmp	r0, r4
   145cc:	movcc	r1, #92	; 0x5c
   145d0:	strbcc	r1, [r5, r0]
   145d4:	add	r0, r8, #2
   145d8:	add	r8, r8, #3
   145dc:	cmp	r0, r4
   145e0:	movcc	r1, #39	; 0x27
   145e4:	strbcc	r1, [r5, r0]
   145e8:	mov	r0, #0
   145ec:	str	r0, [fp, #-56]	; 0xffffffc8
   145f0:	b	142dc <dcngettext@plt+0x2e30>
   145f4:	ldr	r0, [sp, #40]	; 0x28
   145f8:	str	r4, [sp, #88]	; 0x58
   145fc:	cmp	r0, #1
   14600:	bne	14710 <dcngettext@plt+0x3264>
   14604:	str	lr, [sp, #28]
   14608:	bl	11338 <__ctype_b_loc@plt>
   1460c:	ldr	r0, [r0]
   14610:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14614:	mov	r2, #1
   14618:	add	r0, r0, r6, lsl #1
   1461c:	ldrb	r0, [r0, #1]
   14620:	ubfx	r9, r0, #6, #1
   14624:	ldr	r0, [sp, #52]	; 0x34
   14628:	cmp	r2, #1
   1462c:	orr	r0, r9, r0
   14630:	bhi	1496c <dcngettext@plt+0x34c0>
   14634:	tst	r0, #1
   14638:	beq	1496c <dcngettext@plt+0x34c0>
   1463c:	ldr	lr, [sp, #28]
   14640:	ldr	r4, [sp, #88]	; 0x58
   14644:	b	142dc <dcngettext@plt+0x2e30>
   14648:	ldr	r1, [sp, #48]	; 0x30
   1464c:	mov	sl, #0
   14650:	mov	r0, #92	; 0x5c
   14654:	cmp	r1, #0
   14658:	beq	146d0 <dcngettext@plt+0x3224>
   1465c:	mov	r6, #92	; 0x5c
   14660:	mov	r9, #0
   14664:	cmp	sl, #0
   14668:	bne	146a0 <dcngettext@plt+0x31f4>
   1466c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14670:	tst	r0, #1
   14674:	beq	146a0 <dcngettext@plt+0x31f4>
   14678:	cmp	r8, r4
   1467c:	movcc	r0, #39	; 0x27
   14680:	strbcc	r0, [r5, r8]
   14684:	add	r0, r8, #1
   14688:	add	r8, r8, #2
   1468c:	cmp	r0, r4
   14690:	movcc	r1, #39	; 0x27
   14694:	strbcc	r1, [r5, r0]
   14698:	mov	r0, #0
   1469c:	str	r0, [fp, #-56]	; 0xffffffc8
   146a0:	mov	r1, r9
   146a4:	mov	r0, r6
   146a8:	cmp	r8, r4
   146ac:	strbcc	r0, [r5, r8]
   146b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146b4:	add	r8, r8, #1
   146b8:	and	r0, r0, r1
   146bc:	str	r0, [fp, #-48]	; 0xffffffd0
   146c0:	add	r7, r7, #1
   146c4:	cmn	lr, #1
   146c8:	bne	14008 <dcngettext@plt+0x2b5c>
   146cc:	b	14014 <dcngettext@plt+0x2b68>
   146d0:	ldr	r1, [sp, #84]	; 0x54
   146d4:	mov	sl, #0
   146d8:	mov	r9, #0
   146dc:	tst	r1, #1
   146e0:	mov	r1, #0
   146e4:	beq	142dc <dcngettext@plt+0x2e30>
   146e8:	b	14324 <dcngettext@plt+0x2e78>
   146ec:	ldr	r0, [sp, #36]	; 0x24
   146f0:	mov	r6, #0
   146f4:	mov	sl, #0
   146f8:	mov	r9, #0
   146fc:	cmp	r0, #0
   14700:	beq	142dc <dcngettext@plt+0x2e30>
   14704:	b	146c0 <dcngettext@plt+0x3214>
   14708:	mov	r9, #1
   1470c:	b	142dc <dcngettext@plt+0x2e30>
   14710:	mov	r0, #0
   14714:	cmn	lr, #1
   14718:	sub	r4, fp, #40	; 0x28
   1471c:	str	r0, [fp, #-36]	; 0xffffffdc
   14720:	str	r0, [fp, #-40]	; 0xffffffd8
   14724:	bne	14738 <dcngettext@plt+0x328c>
   14728:	mov	r0, ip
   1472c:	bl	1135c <strlen@plt>
   14730:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14734:	mov	lr, r0
   14738:	ldr	r0, [sp, #72]	; 0x48
   1473c:	mov	r9, #1
   14740:	mov	r2, #0
   14744:	str	lr, [sp, #28]
   14748:	add	r0, r0, r7
   1474c:	str	r0, [sp, #20]
   14750:	b	14794 <dcngettext@plt+0x32e8>
   14754:	ldr	r5, [sp, #44]	; 0x2c
   14758:	add	r5, r0, r5
   1475c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14760:	bl	11254 <iswprint@plt>
   14764:	cmp	r0, #0
   14768:	sub	r4, fp, #40	; 0x28
   1476c:	movwne	r0, #1
   14770:	and	r9, r9, r0
   14774:	mov	r0, r4
   14778:	bl	11200 <mbsinit@plt>
   1477c:	mov	r2, r5
   14780:	ldr	lr, [sp, #28]
   14784:	ldr	r5, [fp, #-84]	; 0xffffffac
   14788:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1478c:	cmp	r0, #0
   14790:	bne	14624 <dcngettext@plt+0x3178>
   14794:	add	r0, r2, r7
   14798:	str	r2, [sp, #44]	; 0x2c
   1479c:	mov	r3, r4
   147a0:	add	r1, ip, r0
   147a4:	str	r0, [sp, #24]
   147a8:	sub	r2, lr, r0
   147ac:	sub	r0, fp, #44	; 0x2c
   147b0:	bl	16e08 <dcngettext@plt+0x595c>
   147b4:	cmp	r0, #0
   147b8:	beq	14b5c <dcngettext@plt+0x36b0>
   147bc:	cmn	r0, #1
   147c0:	beq	14b18 <dcngettext@plt+0x366c>
   147c4:	ldr	lr, [sp, #28]
   147c8:	cmn	r0, #2
   147cc:	beq	14b20 <dcngettext@plt+0x3674>
   147d0:	ldr	r2, [sp, #64]	; 0x40
   147d4:	ldr	r4, [sp, #88]	; 0x58
   147d8:	ldr	ip, [sp, #84]	; 0x54
   147dc:	cmp	r0, #2
   147e0:	mov	r1, #0
   147e4:	movwcc	r1, #1
   147e8:	eor	r2, r2, #1
   147ec:	orrs	r1, r2, r1
   147f0:	bne	14754 <dcngettext@plt+0x32a8>
   147f4:	ldr	r1, [sp, #44]	; 0x2c
   147f8:	ldr	r2, [sp, #20]
   147fc:	add	r1, r2, r1
   14800:	sub	r2, r0, #1
   14804:	b	14814 <dcngettext@plt+0x3368>
   14808:	add	r1, r1, #1
   1480c:	subs	r2, r2, #1
   14810:	beq	14754 <dcngettext@plt+0x32a8>
   14814:	ldrb	r3, [r1]
   14818:	sub	r3, r3, #91	; 0x5b
   1481c:	cmp	r3, #33	; 0x21
   14820:	bhi	14808 <dcngettext@plt+0x335c>
   14824:	add	r5, pc, #0
   14828:	ldr	pc, [r5, r3, lsl #2]
   1482c:	andeq	r4, r1, r0, lsl ip
   14830:	andeq	r4, r1, r0, lsl ip
   14834:	andeq	r4, r1, r8, lsl #16
   14838:	andeq	r4, r1, r0, lsl ip
   1483c:	andeq	r4, r1, r8, lsl #16
   14840:	andeq	r4, r1, r0, lsl ip
   14844:	andeq	r4, r1, r8, lsl #16
   14848:	andeq	r4, r1, r8, lsl #16
   1484c:	andeq	r4, r1, r8, lsl #16
   14850:	andeq	r4, r1, r8, lsl #16
   14854:	andeq	r4, r1, r8, lsl #16
   14858:	andeq	r4, r1, r8, lsl #16
   1485c:	andeq	r4, r1, r8, lsl #16
   14860:	andeq	r4, r1, r8, lsl #16
   14864:	andeq	r4, r1, r8, lsl #16
   14868:	andeq	r4, r1, r8, lsl #16
   1486c:	andeq	r4, r1, r8, lsl #16
   14870:	andeq	r4, r1, r8, lsl #16
   14874:	andeq	r4, r1, r8, lsl #16
   14878:	andeq	r4, r1, r8, lsl #16
   1487c:	andeq	r4, r1, r8, lsl #16
   14880:	andeq	r4, r1, r8, lsl #16
   14884:	andeq	r4, r1, r8, lsl #16
   14888:	andeq	r4, r1, r8, lsl #16
   1488c:	andeq	r4, r1, r8, lsl #16
   14890:	andeq	r4, r1, r8, lsl #16
   14894:	andeq	r4, r1, r8, lsl #16
   14898:	andeq	r4, r1, r8, lsl #16
   1489c:	andeq	r4, r1, r8, lsl #16
   148a0:	andeq	r4, r1, r8, lsl #16
   148a4:	andeq	r4, r1, r8, lsl #16
   148a8:	andeq	r4, r1, r8, lsl #16
   148ac:	andeq	r4, r1, r8, lsl #16
   148b0:	andeq	r4, r1, r0, lsl ip
   148b4:	mov	r8, r0
   148b8:	b	142dc <dcngettext@plt+0x2e30>
   148bc:	ldr	r0, [sp, #32]
   148c0:	cmp	r0, #0
   148c4:	beq	14964 <dcngettext@plt+0x34b8>
   148c8:	add	r0, r7, #2
   148cc:	cmp	r0, lr
   148d0:	bcs	14964 <dcngettext@plt+0x34b8>
   148d4:	add	r1, r7, ip
   148d8:	ldrb	r1, [r1, #1]
   148dc:	cmp	r1, #63	; 0x3f
   148e0:	bne	14964 <dcngettext@plt+0x34b8>
   148e4:	ldrb	r9, [ip, r0]
   148e8:	sub	r2, r9, #33	; 0x21
   148ec:	cmp	r2, #29
   148f0:	bhi	14964 <dcngettext@plt+0x34b8>
   148f4:	movw	r1, #20929	; 0x51c1
   148f8:	mov	r3, #1
   148fc:	movt	r1, #14336	; 0x3800
   14900:	tst	r1, r3, lsl r2
   14904:	beq	14964 <dcngettext@plt+0x34b8>
   14908:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1490c:	tst	r1, #1
   14910:	bne	14c34 <dcngettext@plt+0x3788>
   14914:	cmp	r8, r4
   14918:	add	r2, r8, #1
   1491c:	mov	r6, r9
   14920:	mov	r7, r0
   14924:	mov	r9, #0
   14928:	movcc	r1, #63	; 0x3f
   1492c:	strbcc	r1, [r5, r8]
   14930:	cmp	r2, r4
   14934:	movcc	r1, #34	; 0x22
   14938:	strbcc	r1, [r5, r2]
   1493c:	add	r2, r8, #2
   14940:	cmp	r2, r4
   14944:	movcc	r1, #34	; 0x22
   14948:	strbcc	r1, [r5, r2]
   1494c:	add	r2, r8, #3
   14950:	add	r8, r8, #4
   14954:	cmp	r2, r4
   14958:	movcc	r1, #63	; 0x3f
   1495c:	strbcc	r1, [r5, r2]
   14960:	b	142dc <dcngettext@plt+0x2e30>
   14964:	mov	r9, #0
   14968:	b	142dc <dcngettext@plt+0x2e30>
   1496c:	ldr	lr, [sp, #28]
   14970:	ldr	r4, [fp, #-56]	; 0xffffffc8
   14974:	add	r1, r2, r7
   14978:	mov	r2, #0
   1497c:	str	r1, [sp, #44]	; 0x2c
   14980:	tst	r0, #1
   14984:	bne	14aa0 <dcngettext@plt+0x35f4>
   14988:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1498c:	tst	r1, #1
   14990:	bne	14c30 <dcngettext@plt+0x3784>
   14994:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14998:	subs	r2, r1, #2
   1499c:	movwne	r2, #1
   149a0:	orr	r2, r2, r4
   149a4:	tst	r2, #1
   149a8:	bne	149ec <dcngettext@plt+0x3540>
   149ac:	ldr	r1, [sp, #88]	; 0x58
   149b0:	add	r2, r8, #1
   149b4:	mov	r4, #1
   149b8:	cmp	r8, r1
   149bc:	movcc	r1, #39	; 0x27
   149c0:	strbcc	r1, [r5, r8]
   149c4:	ldr	r1, [sp, #88]	; 0x58
   149c8:	cmp	r2, r1
   149cc:	movcc	r1, #36	; 0x24
   149d0:	strbcc	r1, [r5, r2]
   149d4:	ldr	r1, [sp, #88]	; 0x58
   149d8:	add	r2, r8, #2
   149dc:	add	r8, r8, #3
   149e0:	cmp	r2, r1
   149e4:	movcc	r1, #39	; 0x27
   149e8:	strbcc	r1, [r5, r2]
   149ec:	ldr	r1, [sp, #88]	; 0x58
   149f0:	add	r2, r8, #1
   149f4:	cmp	r8, r1
   149f8:	movcc	r1, #92	; 0x5c
   149fc:	strbcc	r1, [r5, r8]
   14a00:	ldr	r1, [sp, #88]	; 0x58
   14a04:	cmp	r2, r1
   14a08:	bcs	14a1c <dcngettext@plt+0x3570>
   14a0c:	uxtb	r3, r6
   14a10:	mov	r1, #48	; 0x30
   14a14:	orr	r3, r1, r3, lsr #6
   14a18:	strb	r3, [r5, r2]
   14a1c:	ldr	r1, [sp, #88]	; 0x58
   14a20:	add	r2, r8, #2
   14a24:	add	r8, r8, #3
   14a28:	cmp	r2, r1
   14a2c:	lsrcc	r3, r6, #3
   14a30:	movcc	r1, #6
   14a34:	bficc	r3, r1, #3, #29
   14a38:	mov	r1, #6
   14a3c:	bfi	r6, r1, #3, #29
   14a40:	strbcc	r3, [r5, r2]
   14a44:	mov	r2, #1
   14a48:	b	14ac8 <dcngettext@plt+0x361c>
   14a4c:	ldr	r1, [sp, #88]	; 0x58
   14a50:	ldr	r5, [fp, #-84]	; 0xffffffac
   14a54:	ldr	r4, [sp, #88]	; 0x58
   14a58:	cmp	r8, r1
   14a5c:	movcc	r1, #39	; 0x27
   14a60:	strbcc	r1, [r5, r8]
   14a64:	add	r1, r8, #1
   14a68:	add	r8, r8, #2
   14a6c:	cmp	r1, r4
   14a70:	movcc	r4, #39	; 0x27
   14a74:	strbcc	r4, [r5, r1]
   14a78:	mov	r4, #0
   14a7c:	ldr	r1, [sp, #88]	; 0x58
   14a80:	cmp	r8, r1
   14a84:	ldr	r1, [sp, #72]	; 0x48
   14a88:	strbcc	r6, [r5, r8]
   14a8c:	add	r8, r8, #1
   14a90:	ldrb	r6, [r1, r7]
   14a94:	mov	r7, r3
   14a98:	tst	r0, #1
   14a9c:	beq	14988 <dcngettext@plt+0x34dc>
   14aa0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14aa4:	tst	r1, #1
   14aa8:	beq	14ac0 <dcngettext@plt+0x3614>
   14aac:	ldr	r1, [sp, #88]	; 0x58
   14ab0:	cmp	r8, r1
   14ab4:	movcc	r1, #92	; 0x5c
   14ab8:	strbcc	r1, [r5, r8]
   14abc:	add	r8, r8, #1
   14ac0:	mov	r1, #0
   14ac4:	str	r1, [fp, #-52]	; 0xffffffcc
   14ac8:	ldr	r1, [sp, #44]	; 0x2c
   14acc:	add	r3, r7, #1
   14ad0:	and	sl, r2, #1
   14ad4:	cmp	r1, r3
   14ad8:	bls	14afc <dcngettext@plt+0x3650>
   14adc:	cmp	sl, #0
   14ae0:	mvn	r5, r4
   14ae4:	movwne	sl, #1
   14ae8:	orr	r5, r5, sl
   14aec:	tst	r5, #1
   14af0:	beq	14a4c <dcngettext@plt+0x35a0>
   14af4:	ldr	r5, [fp, #-84]	; 0xffffffac
   14af8:	b	14a7c <dcngettext@plt+0x35d0>
   14afc:	str	r4, [fp, #-56]	; 0xffffffc8
   14b00:	ldr	r4, [sp, #88]	; 0x58
   14b04:	cmp	sl, #0
   14b08:	movwne	sl, #1
   14b0c:	cmp	sl, #0
   14b10:	beq	1466c <dcngettext@plt+0x31c0>
   14b14:	b	146a0 <dcngettext@plt+0x31f4>
   14b18:	mov	r9, #0
   14b1c:	b	14b5c <dcngettext@plt+0x36b0>
   14b20:	ldr	r0, [sp, #24]
   14b24:	mov	r9, #0
   14b28:	cmp	lr, r0
   14b2c:	bls	14b5c <dcngettext@plt+0x36b0>
   14b30:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14b34:	ldr	r2, [sp, #44]	; 0x2c
   14b38:	add	r0, ip, r7
   14b3c:	ldrb	r1, [r0, r2]
   14b40:	cmp	r1, #0
   14b44:	beq	14624 <dcngettext@plt+0x3178>
   14b48:	add	r2, r2, #1
   14b4c:	add	r1, r7, r2
   14b50:	cmp	r1, lr
   14b54:	bcc	14b3c <dcngettext@plt+0x3690>
   14b58:	b	14624 <dcngettext@plt+0x3178>
   14b5c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14b60:	ldr	r2, [sp, #44]	; 0x2c
   14b64:	b	14624 <dcngettext@plt+0x3178>
   14b68:	mov	lr, r7
   14b6c:	b	14b74 <dcngettext@plt+0x36c8>
   14b70:	mvn	lr, #0
   14b74:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14b78:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14b7c:	eor	r0, r1, #2
   14b80:	orr	r0, r0, r8
   14b84:	clz	r0, r0
   14b88:	lsr	r0, r0, #5
   14b8c:	tst	r2, r0
   14b90:	bne	14c34 <dcngettext@plt+0x3788>
   14b94:	subs	r0, r1, #2
   14b98:	movwne	r0, #1
   14b9c:	orr	r0, r2, r0
   14ba0:	tst	r0, #1
   14ba4:	ldreq	r0, [sp, #60]	; 0x3c
   14ba8:	eoreq	r0, r0, #1
   14bac:	tsteq	r0, #1
   14bb0:	bne	14cc8 <dcngettext@plt+0x381c>
   14bb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14bb8:	mov	sl, lr
   14bbc:	tst	r0, #1
   14bc0:	bne	14c94 <dcngettext@plt+0x37e8>
   14bc4:	ldr	r6, [sp, #56]	; 0x38
   14bc8:	mov	r9, #0
   14bcc:	cmp	r6, #0
   14bd0:	beq	14cc0 <dcngettext@plt+0x3814>
   14bd4:	ldr	r0, [sp, #84]	; 0x54
   14bd8:	mov	r1, #0
   14bdc:	mov	r7, #2
   14be0:	cmp	r4, #0
   14be4:	str	r1, [fp, #-48]	; 0xffffffd0
   14be8:	mov	r1, #0
   14bec:	str	r1, [fp, #-76]	; 0xffffffb4
   14bf0:	beq	13d90 <dcngettext@plt+0x28e4>
   14bf4:	b	14cc8 <dcngettext@plt+0x381c>
   14bf8:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14bfc:	ldr	r1, [fp, #12]
   14c00:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14c04:	mov	lr, r4
   14c08:	mov	r4, r6
   14c0c:	b	14c54 <dcngettext@plt+0x37a8>
   14c10:	tst	ip, #1
   14c14:	ldr	r5, [fp, #-84]	; 0xffffffac
   14c18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14c1c:	ldr	r1, [fp, #12]
   14c20:	mov	r0, #2
   14c24:	movwne	r0, #4
   14c28:	mov	r2, r0
   14c2c:	b	14c54 <dcngettext@plt+0x37a8>
   14c30:	ldr	r4, [sp, #88]	; 0x58
   14c34:	ldr	r1, [sp, #84]	; 0x54
   14c38:	mov	r0, #2
   14c3c:	tst	r1, #1
   14c40:	movwne	r0, #4
   14c44:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14c48:	ldr	r1, [fp, #12]
   14c4c:	cmp	r2, #2
   14c50:	moveq	r2, r0
   14c54:	mov	r0, #0
   14c58:	bic	r1, r1, #2
   14c5c:	str	r2, [sp]
   14c60:	mov	r2, ip
   14c64:	mov	r3, lr
   14c68:	str	r0, [sp, #8]
   14c6c:	ldr	r0, [sp, #76]	; 0x4c
   14c70:	str	r1, [sp, #4]
   14c74:	mov	r1, r4
   14c78:	str	r0, [sp, #12]
   14c7c:	ldr	r0, [sp, #80]	; 0x50
   14c80:	str	r0, [sp, #16]
   14c84:	mov	r0, r5
   14c88:	bl	13d00 <dcngettext@plt+0x2854>
   14c8c:	mov	r8, r0
   14c90:	b	14d14 <dcngettext@plt+0x3868>
   14c94:	mov	r0, #5
   14c98:	ldr	r1, [sp, #56]	; 0x38
   14c9c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14ca0:	mov	r3, sl
   14ca4:	str	r0, [sp]
   14ca8:	ldr	r0, [fp, #12]
   14cac:	str	r0, [sp, #4]
   14cb0:	ldr	r0, [fp, #16]
   14cb4:	str	r0, [sp, #8]
   14cb8:	ldr	r0, [sp, #76]	; 0x4c
   14cbc:	b	14c78 <dcngettext@plt+0x37cc>
   14cc0:	mov	r0, #0
   14cc4:	str	r0, [fp, #-76]	; 0xffffffb4
   14cc8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14ccc:	cmp	r1, #0
   14cd0:	beq	14d08 <dcngettext@plt+0x385c>
   14cd4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14cd8:	tst	r0, #1
   14cdc:	bne	14d08 <dcngettext@plt+0x385c>
   14ce0:	ldrb	r0, [r1]
   14ce4:	cmp	r0, #0
   14ce8:	beq	14d08 <dcngettext@plt+0x385c>
   14cec:	add	r1, r1, #1
   14cf0:	cmp	r8, r4
   14cf4:	strbcc	r0, [r5, r8]
   14cf8:	add	r8, r8, #1
   14cfc:	ldrb	r0, [r1], #1
   14d00:	cmp	r0, #0
   14d04:	bne	14cf0 <dcngettext@plt+0x3844>
   14d08:	cmp	r8, r4
   14d0c:	movcc	r0, #0
   14d10:	strbcc	r0, [r5, r8]
   14d14:	mov	r0, r8
   14d18:	sub	sp, fp, #28
   14d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d20:	mov	r0, #4
   14d24:	b	14c44 <dcngettext@plt+0x3798>
   14d28:	bl	11494 <abort@plt>
   14d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d30:	add	fp, sp, #28
   14d34:	sub	sp, sp, #28
   14d38:	movw	r5, #33184	; 0x81a0
   14d3c:	cmp	r2, #0
   14d40:	mov	r4, r1
   14d44:	mov	r7, r0
   14d48:	str	r0, [sp, #20]
   14d4c:	movt	r5, #2
   14d50:	movne	r5, r2
   14d54:	bl	11374 <__errno_location@plt>
   14d58:	mov	sl, r0
   14d5c:	ldr	r2, [r5, #40]	; 0x28
   14d60:	ldr	r3, [r5, #44]	; 0x2c
   14d64:	ldm	r5, {r0, r1}
   14d68:	orr	r8, r1, #1
   14d6c:	add	r9, r5, #8
   14d70:	mov	r1, #0
   14d74:	ldr	r6, [sl]
   14d78:	stm	sp, {r0, r8, r9}
   14d7c:	mov	r0, #0
   14d80:	str	r2, [sp, #12]
   14d84:	str	r3, [sp, #16]
   14d88:	mov	r2, r7
   14d8c:	mov	r3, r4
   14d90:	str	r6, [sp, #24]
   14d94:	mov	r6, r4
   14d98:	bl	13d00 <dcngettext@plt+0x2854>
   14d9c:	add	r7, r0, #1
   14da0:	mov	r0, r7
   14da4:	bl	166fc <dcngettext@plt+0x5250>
   14da8:	mov	r4, r0
   14dac:	ldr	r0, [r5]
   14db0:	ldr	r2, [r5, #44]	; 0x2c
   14db4:	ldr	r1, [r5, #40]	; 0x28
   14db8:	mov	r3, r6
   14dbc:	stm	sp, {r0, r8, r9}
   14dc0:	str	r2, [sp, #16]
   14dc4:	ldr	r2, [sp, #20]
   14dc8:	str	r1, [sp, #12]
   14dcc:	mov	r0, r4
   14dd0:	mov	r1, r7
   14dd4:	bl	13d00 <dcngettext@plt+0x2854>
   14dd8:	ldr	r0, [sp, #24]
   14ddc:	str	r0, [sl]
   14de0:	mov	r0, r4
   14de4:	sub	sp, fp, #28
   14de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14df0:	add	fp, sp, #28
   14df4:	sub	sp, sp, #36	; 0x24
   14df8:	movw	r8, #33184	; 0x81a0
   14dfc:	cmp	r3, #0
   14e00:	mov	r4, r2
   14e04:	str	r2, [sp, #24]
   14e08:	mov	r5, r1
   14e0c:	mov	r6, r0
   14e10:	str	r0, [sp, #20]
   14e14:	movt	r8, #2
   14e18:	movne	r8, r3
   14e1c:	bl	11374 <__errno_location@plt>
   14e20:	str	r0, [sp, #28]
   14e24:	ldr	r1, [r8, #40]	; 0x28
   14e28:	ldr	r2, [r8, #44]	; 0x2c
   14e2c:	ldr	r7, [r0]
   14e30:	cmp	r4, #0
   14e34:	add	sl, r8, #8
   14e38:	mov	r0, #0
   14e3c:	ldm	r8, {r3, r9}
   14e40:	orreq	r9, r9, #1
   14e44:	stm	sp, {r3, r9, sl}
   14e48:	str	r1, [sp, #12]
   14e4c:	str	r2, [sp, #16]
   14e50:	mov	r1, #0
   14e54:	mov	r2, r6
   14e58:	mov	r3, r5
   14e5c:	str	r7, [sp, #32]
   14e60:	mov	r7, r5
   14e64:	bl	13d00 <dcngettext@plt+0x2854>
   14e68:	add	r4, r0, #1
   14e6c:	mov	r5, r0
   14e70:	mov	r0, r4
   14e74:	bl	166fc <dcngettext@plt+0x5250>
   14e78:	mov	r6, r0
   14e7c:	ldr	r0, [r8]
   14e80:	ldr	r2, [r8, #44]	; 0x2c
   14e84:	ldr	r1, [r8, #40]	; 0x28
   14e88:	mov	r3, r7
   14e8c:	stm	sp, {r0, r9, sl}
   14e90:	str	r2, [sp, #16]
   14e94:	ldr	r2, [sp, #20]
   14e98:	str	r1, [sp, #12]
   14e9c:	mov	r0, r6
   14ea0:	mov	r1, r4
   14ea4:	bl	13d00 <dcngettext@plt+0x2854>
   14ea8:	ldr	r0, [sp, #24]
   14eac:	ldr	r1, [sp, #32]
   14eb0:	ldr	r2, [sp, #28]
   14eb4:	cmp	r0, #0
   14eb8:	str	r1, [r2]
   14ebc:	strne	r5, [r0]
   14ec0:	mov	r0, r6
   14ec4:	sub	sp, fp, #28
   14ec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ecc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14ed0:	add	fp, sp, #24
   14ed4:	movw	r5, #33076	; 0x8134
   14ed8:	movw	r8, #33072	; 0x8130
   14edc:	movt	r5, #2
   14ee0:	movt	r8, #2
   14ee4:	ldr	r0, [r5]
   14ee8:	ldr	r4, [r8]
   14eec:	cmp	r0, #2
   14ef0:	blt	14f1c <dcngettext@plt+0x3a70>
   14ef4:	add	r7, r4, #12
   14ef8:	mov	r6, #0
   14efc:	ldr	r0, [r7, r6, lsl #3]
   14f00:	bl	16da8 <dcngettext@plt+0x58fc>
   14f04:	ldr	r1, [r5]
   14f08:	add	r2, r6, #2
   14f0c:	add	r0, r6, #1
   14f10:	mov	r6, r0
   14f14:	cmp	r2, r1
   14f18:	blt	14efc <dcngettext@plt+0x3a50>
   14f1c:	ldr	r0, [r4, #4]
   14f20:	movw	r9, #33232	; 0x81d0
   14f24:	movw	r7, #33080	; 0x8138
   14f28:	movt	r9, #2
   14f2c:	movt	r7, #2
   14f30:	cmp	r0, r9
   14f34:	beq	14f44 <dcngettext@plt+0x3a98>
   14f38:	bl	16da8 <dcngettext@plt+0x58fc>
   14f3c:	mov	r0, #256	; 0x100
   14f40:	stm	r7, {r0, r9}
   14f44:	cmp	r4, r7
   14f48:	beq	14f58 <dcngettext@plt+0x3aac>
   14f4c:	mov	r0, r4
   14f50:	bl	16da8 <dcngettext@plt+0x58fc>
   14f54:	str	r7, [r8]
   14f58:	mov	r0, #1
   14f5c:	str	r0, [r5]
   14f60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14f64:	movw	r3, #33184	; 0x81a0
   14f68:	mvn	r2, #0
   14f6c:	movt	r3, #2
   14f70:	b	14f74 <dcngettext@plt+0x3ac8>
   14f74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f78:	add	fp, sp, #28
   14f7c:	sub	sp, sp, #44	; 0x2c
   14f80:	mov	r7, r3
   14f84:	str	r2, [sp, #36]	; 0x24
   14f88:	str	r1, [sp, #32]
   14f8c:	mov	r5, r0
   14f90:	bl	11374 <__errno_location@plt>
   14f94:	cmp	r5, #0
   14f98:	bmi	15108 <dcngettext@plt+0x3c5c>
   14f9c:	cmn	r5, #-2147483647	; 0x80000001
   14fa0:	beq	15108 <dcngettext@plt+0x3c5c>
   14fa4:	movw	r8, #33076	; 0x8134
   14fa8:	movw	r4, #33072	; 0x8130
   14fac:	str	r0, [sp, #28]
   14fb0:	ldr	r0, [r0]
   14fb4:	movt	r8, #2
   14fb8:	movt	r4, #2
   14fbc:	ldr	r1, [r8]
   14fc0:	ldr	r6, [r4]
   14fc4:	str	r0, [sp, #24]
   14fc8:	cmp	r1, r5
   14fcc:	ble	14fd8 <dcngettext@plt+0x3b2c>
   14fd0:	mov	sl, r6
   14fd4:	b	15044 <dcngettext@plt+0x3b98>
   14fd8:	movw	r9, #33080	; 0x8138
   14fdc:	mov	r0, #8
   14fe0:	str	r1, [fp, #-32]	; 0xffffffe0
   14fe4:	sub	r1, r5, r1
   14fe8:	mvn	r3, #-2147483648	; 0x80000000
   14fec:	movt	r9, #2
   14ff0:	str	r0, [sp]
   14ff4:	add	r2, r1, #1
   14ff8:	sub	r1, fp, #32
   14ffc:	subs	r0, r6, r9
   15000:	movne	r0, r6
   15004:	bl	168fc <dcngettext@plt+0x5450>
   15008:	mov	sl, r0
   1500c:	cmp	r6, r9
   15010:	str	r0, [r4]
   15014:	bne	15020 <dcngettext@plt+0x3b74>
   15018:	ldrd	r0, [r9]
   1501c:	stm	sl, {r0, r1}
   15020:	ldr	r1, [r8]
   15024:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15028:	add	r0, sl, r1, lsl #3
   1502c:	sub	r1, r2, r1
   15030:	lsl	r2, r1, #3
   15034:	mov	r1, #0
   15038:	bl	1138c <memset@plt>
   1503c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15040:	str	r0, [r8]
   15044:	mov	r9, sl
   15048:	ldm	r7, {r0, r1}
   1504c:	orr	r8, r1, #1
   15050:	add	r1, r7, #8
   15054:	ldr	r2, [r7, #40]	; 0x28
   15058:	ldr	r3, [r7, #44]	; 0x2c
   1505c:	ldr	r6, [r9, r5, lsl #3]!
   15060:	str	r1, [sp, #20]
   15064:	ldr	r4, [r9, #4]!
   15068:	stm	sp, {r0, r8}
   1506c:	add	r0, sp, #8
   15070:	stm	r0, {r1, r2, r3}
   15074:	ldr	r2, [sp, #32]
   15078:	ldr	r3, [sp, #36]	; 0x24
   1507c:	mov	r1, r6
   15080:	mov	r0, r4
   15084:	bl	13d00 <dcngettext@plt+0x2854>
   15088:	cmp	r6, r0
   1508c:	bhi	150f0 <dcngettext@plt+0x3c44>
   15090:	add	r6, r0, #1
   15094:	movw	r0, #33232	; 0x81d0
   15098:	movt	r0, #2
   1509c:	str	r6, [sl, r5, lsl #3]
   150a0:	cmp	r4, r0
   150a4:	beq	150b0 <dcngettext@plt+0x3c04>
   150a8:	mov	r0, r4
   150ac:	bl	16da8 <dcngettext@plt+0x58fc>
   150b0:	mov	r0, r6
   150b4:	bl	166fc <dcngettext@plt+0x5250>
   150b8:	str	r0, [r9]
   150bc:	mov	r4, r0
   150c0:	add	r3, sp, #8
   150c4:	ldr	r0, [r7]
   150c8:	ldr	r1, [r7, #40]	; 0x28
   150cc:	ldr	r2, [r7, #44]	; 0x2c
   150d0:	stm	sp, {r0, r8}
   150d4:	ldr	r0, [sp, #20]
   150d8:	stm	r3, {r0, r1, r2}
   150dc:	ldr	r2, [sp, #32]
   150e0:	ldr	r3, [sp, #36]	; 0x24
   150e4:	mov	r0, r4
   150e8:	mov	r1, r6
   150ec:	bl	13d00 <dcngettext@plt+0x2854>
   150f0:	ldr	r0, [sp, #28]
   150f4:	ldr	r1, [sp, #24]
   150f8:	str	r1, [r0]
   150fc:	mov	r0, r4
   15100:	sub	sp, fp, #28
   15104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15108:	bl	11494 <abort@plt>
   1510c:	movw	r3, #33184	; 0x81a0
   15110:	movt	r3, #2
   15114:	b	14f74 <dcngettext@plt+0x3ac8>
   15118:	movw	r3, #33184	; 0x81a0
   1511c:	mov	r1, r0
   15120:	mov	r0, #0
   15124:	mvn	r2, #0
   15128:	movt	r3, #2
   1512c:	b	14f74 <dcngettext@plt+0x3ac8>
   15130:	movw	r3, #33184	; 0x81a0
   15134:	mov	r2, r1
   15138:	mov	r1, r0
   1513c:	mov	r0, #0
   15140:	movt	r3, #2
   15144:	b	14f74 <dcngettext@plt+0x3ac8>
   15148:	push	{fp, lr}
   1514c:	mov	fp, sp
   15150:	sub	sp, sp, #48	; 0x30
   15154:	vmov.i32	q8, #0	; 0x00000000
   15158:	mov	ip, #32
   1515c:	mov	r3, sp
   15160:	mov	lr, r2
   15164:	cmp	r1, #10
   15168:	add	r2, r3, #16
   1516c:	vst1.64	{d16-d17}, [r3], ip
   15170:	vst1.64	{d16-d17}, [r2]
   15174:	vst1.64	{d16-d17}, [r3]
   15178:	beq	15198 <dcngettext@plt+0x3cec>
   1517c:	str	r1, [sp]
   15180:	mov	r3, sp
   15184:	mov	r1, lr
   15188:	mvn	r2, #0
   1518c:	bl	14f74 <dcngettext@plt+0x3ac8>
   15190:	mov	sp, fp
   15194:	pop	{fp, pc}
   15198:	bl	11494 <abort@plt>
   1519c:	push	{r4, sl, fp, lr}
   151a0:	add	fp, sp, #8
   151a4:	sub	sp, sp, #48	; 0x30
   151a8:	vmov.i32	q8, #0	; 0x00000000
   151ac:	mov	ip, r3
   151b0:	mov	r3, sp
   151b4:	mov	lr, #32
   151b8:	cmp	r1, #10
   151bc:	add	r4, r3, #16
   151c0:	vst1.64	{d16-d17}, [r3], lr
   151c4:	vst1.64	{d16-d17}, [r4]
   151c8:	vst1.64	{d16-d17}, [r3]
   151cc:	beq	151ec <dcngettext@plt+0x3d40>
   151d0:	str	r1, [sp]
   151d4:	mov	r1, r2
   151d8:	mov	r3, sp
   151dc:	mov	r2, ip
   151e0:	bl	14f74 <dcngettext@plt+0x3ac8>
   151e4:	sub	sp, fp, #8
   151e8:	pop	{r4, sl, fp, pc}
   151ec:	bl	11494 <abort@plt>
   151f0:	push	{fp, lr}
   151f4:	mov	fp, sp
   151f8:	sub	sp, sp, #48	; 0x30
   151fc:	vmov.i32	q8, #0	; 0x00000000
   15200:	mov	r3, sp
   15204:	mov	ip, #32
   15208:	cmp	r0, #10
   1520c:	add	r2, r3, #16
   15210:	vst1.64	{d16-d17}, [r3], ip
   15214:	vst1.64	{d16-d17}, [r2]
   15218:	vst1.64	{d16-d17}, [r3]
   1521c:	beq	1523c <dcngettext@plt+0x3d90>
   15220:	str	r0, [sp]
   15224:	mov	r3, sp
   15228:	mov	r0, #0
   1522c:	mvn	r2, #0
   15230:	bl	14f74 <dcngettext@plt+0x3ac8>
   15234:	mov	sp, fp
   15238:	pop	{fp, pc}
   1523c:	bl	11494 <abort@plt>
   15240:	push	{fp, lr}
   15244:	mov	fp, sp
   15248:	sub	sp, sp, #48	; 0x30
   1524c:	vmov.i32	q8, #0	; 0x00000000
   15250:	mov	r3, sp
   15254:	mov	ip, #32
   15258:	cmp	r0, #10
   1525c:	add	lr, r3, #16
   15260:	vst1.64	{d16-d17}, [r3], ip
   15264:	vst1.64	{d16-d17}, [lr]
   15268:	vst1.64	{d16-d17}, [r3]
   1526c:	beq	15288 <dcngettext@plt+0x3ddc>
   15270:	str	r0, [sp]
   15274:	mov	r3, sp
   15278:	mov	r0, #0
   1527c:	bl	14f74 <dcngettext@plt+0x3ac8>
   15280:	mov	sp, fp
   15284:	pop	{fp, pc}
   15288:	bl	11494 <abort@plt>
   1528c:	push	{r4, sl, fp, lr}
   15290:	add	fp, sp, #8
   15294:	sub	sp, sp, #48	; 0x30
   15298:	mov	lr, r0
   1529c:	movw	r0, #33184	; 0x81a0
   152a0:	mov	ip, r1
   152a4:	mov	r1, #32
   152a8:	mov	r4, #1
   152ac:	movt	r0, #2
   152b0:	add	r3, r0, #16
   152b4:	vld1.64	{d16-d17}, [r0], r1
   152b8:	vld1.64	{d20-d21}, [r0]
   152bc:	vld1.64	{d18-d19}, [r3]
   152c0:	mov	r3, sp
   152c4:	add	r0, r3, #32
   152c8:	add	r1, r3, #16
   152cc:	vst1.64	{d20-d21}, [r0]
   152d0:	mov	r0, #28
   152d4:	vst1.64	{d18-d19}, [r1]
   152d8:	mov	r1, r3
   152dc:	and	r0, r0, r2, lsr #3
   152e0:	and	r2, r2, #31
   152e4:	vst1.64	{d16-d17}, [r1], r0
   152e8:	ldr	r0, [r1, #8]
   152ec:	bic	r4, r4, r0, lsr r2
   152f0:	eor	r0, r0, r4, lsl r2
   152f4:	mov	r2, ip
   152f8:	str	r0, [r1, #8]
   152fc:	mov	r0, #0
   15300:	mov	r1, lr
   15304:	bl	14f74 <dcngettext@plt+0x3ac8>
   15308:	sub	sp, fp, #8
   1530c:	pop	{r4, sl, fp, pc}
   15310:	push	{fp, lr}
   15314:	mov	fp, sp
   15318:	sub	sp, sp, #48	; 0x30
   1531c:	mov	ip, r0
   15320:	movw	r0, #33184	; 0x81a0
   15324:	mov	r2, #32
   15328:	movt	r0, #2
   1532c:	add	r3, r0, #16
   15330:	vld1.64	{d16-d17}, [r0], r2
   15334:	vld1.64	{d20-d21}, [r0]
   15338:	vld1.64	{d18-d19}, [r3]
   1533c:	mov	r3, sp
   15340:	add	r0, r3, #32
   15344:	add	r2, r3, #16
   15348:	vst1.64	{d20-d21}, [r0]
   1534c:	mov	r0, #28
   15350:	vst1.64	{d18-d19}, [r2]
   15354:	mov	r2, r3
   15358:	and	r0, r0, r1, lsr #3
   1535c:	and	r1, r1, #31
   15360:	vst1.64	{d16-d17}, [r2], r0
   15364:	mov	r0, #1
   15368:	ldr	lr, [r2, #8]
   1536c:	bic	r0, r0, lr, lsr r1
   15370:	eor	r0, lr, r0, lsl r1
   15374:	mov	r1, ip
   15378:	str	r0, [r2, #8]
   1537c:	mov	r0, #0
   15380:	mvn	r2, #0
   15384:	bl	14f74 <dcngettext@plt+0x3ac8>
   15388:	mov	sp, fp
   1538c:	pop	{fp, pc}
   15390:	push	{fp, lr}
   15394:	mov	fp, sp
   15398:	sub	sp, sp, #48	; 0x30
   1539c:	mov	r1, r0
   153a0:	movw	r0, #33184	; 0x81a0
   153a4:	mov	r3, #32
   153a8:	movt	r0, #2
   153ac:	add	r2, r0, #16
   153b0:	vld1.64	{d16-d17}, [r0], r3
   153b4:	mov	r3, sp
   153b8:	vld1.64	{d18-d19}, [r2]
   153bc:	vld1.64	{d20-d21}, [r0]
   153c0:	add	r2, r3, #16
   153c4:	add	r0, r3, #32
   153c8:	vst1.64	{d18-d19}, [r2]
   153cc:	vst1.64	{d20-d21}, [r0]
   153d0:	mov	r0, #12
   153d4:	mov	r2, r3
   153d8:	vst1.64	{d16-d17}, [r2], r0
   153dc:	ldr	r0, [r2]
   153e0:	orr	r0, r0, #67108864	; 0x4000000
   153e4:	str	r0, [r2]
   153e8:	mov	r0, #0
   153ec:	mvn	r2, #0
   153f0:	bl	14f74 <dcngettext@plt+0x3ac8>
   153f4:	mov	sp, fp
   153f8:	pop	{fp, pc}
   153fc:	push	{fp, lr}
   15400:	mov	fp, sp
   15404:	sub	sp, sp, #48	; 0x30
   15408:	mov	ip, r1
   1540c:	mov	r1, r0
   15410:	movw	r0, #33184	; 0x81a0
   15414:	mov	r2, #32
   15418:	movt	r0, #2
   1541c:	add	r3, r0, #16
   15420:	vld1.64	{d16-d17}, [r0], r2
   15424:	vld1.64	{d18-d19}, [r3]
   15428:	vld1.64	{d20-d21}, [r0]
   1542c:	mov	r3, sp
   15430:	add	r2, r3, #16
   15434:	add	r0, r3, #32
   15438:	vst1.64	{d18-d19}, [r2]
   1543c:	vst1.64	{d20-d21}, [r0]
   15440:	mov	r0, #12
   15444:	mov	r2, r3
   15448:	vst1.64	{d16-d17}, [r2], r0
   1544c:	ldr	r0, [r2]
   15450:	orr	r0, r0, #67108864	; 0x4000000
   15454:	str	r0, [r2]
   15458:	mov	r0, #0
   1545c:	mov	r2, ip
   15460:	bl	14f74 <dcngettext@plt+0x3ac8>
   15464:	mov	sp, fp
   15468:	pop	{fp, pc}
   1546c:	push	{r4, sl, fp, lr}
   15470:	add	fp, sp, #8
   15474:	sub	sp, sp, #96	; 0x60
   15478:	vmov.i32	q8, #0	; 0x00000000
   1547c:	mov	ip, r2
   15480:	mov	r2, sp
   15484:	mov	r4, #28
   15488:	cmp	r1, #10
   1548c:	mov	r3, r2
   15490:	add	lr, r2, #16
   15494:	vst1.64	{d16-d17}, [r3], r4
   15498:	vst1.64	{d16-d17}, [lr]
   1549c:	vst1.32	{d16-d17}, [r3]
   154a0:	beq	154f0 <dcngettext@plt+0x4044>
   154a4:	vld1.64	{d16-d17}, [r2], r4
   154a8:	vld1.64	{d18-d19}, [lr]
   154ac:	add	r3, sp, #48	; 0x30
   154b0:	vld1.32	{d20-d21}, [r2]
   154b4:	add	r2, r3, #20
   154b8:	add	r4, r3, #4
   154bc:	vst1.32	{d18-d19}, [r2]
   154c0:	add	r2, r3, #32
   154c4:	vst1.32	{d16-d17}, [r4]
   154c8:	vst1.32	{d20-d21}, [r2]
   154cc:	str	r1, [sp, #48]	; 0x30
   154d0:	mvn	r2, #0
   154d4:	ldr	r1, [sp, #60]	; 0x3c
   154d8:	orr	r1, r1, #67108864	; 0x4000000
   154dc:	str	r1, [sp, #60]	; 0x3c
   154e0:	mov	r1, ip
   154e4:	bl	14f74 <dcngettext@plt+0x3ac8>
   154e8:	sub	sp, fp, #8
   154ec:	pop	{r4, sl, fp, pc}
   154f0:	bl	11494 <abort@plt>
   154f4:	push	{r4, r5, r6, sl, fp, lr}
   154f8:	add	fp, sp, #16
   154fc:	sub	sp, sp, #48	; 0x30
   15500:	mov	ip, r3
   15504:	movw	r3, #33184	; 0x81a0
   15508:	mov	r6, #32
   1550c:	cmp	r1, #0
   15510:	mov	r4, sp
   15514:	movt	r3, #2
   15518:	cmpne	r2, #0
   1551c:	add	r5, r4, #16
   15520:	add	lr, r3, #16
   15524:	vld1.64	{d16-d17}, [r3], r6
   15528:	vld1.64	{d18-d19}, [lr]
   1552c:	vld1.64	{d20-d21}, [r3]
   15530:	mov	r3, #10
   15534:	vst1.64	{d16-d17}, [r4], r6
   15538:	vst1.64	{d18-d19}, [r5]
   1553c:	vst1.64	{d20-d21}, [r4]
   15540:	str	r3, [sp]
   15544:	bne	1554c <dcngettext@plt+0x40a0>
   15548:	bl	11494 <abort@plt>
   1554c:	str	r2, [sp, #44]	; 0x2c
   15550:	str	r1, [sp, #40]	; 0x28
   15554:	mov	r3, sp
   15558:	mov	r1, ip
   1555c:	mvn	r2, #0
   15560:	bl	14f74 <dcngettext@plt+0x3ac8>
   15564:	sub	sp, fp, #16
   15568:	pop	{r4, r5, r6, sl, fp, pc}
   1556c:	push	{r4, r5, r6, sl, fp, lr}
   15570:	add	fp, sp, #16
   15574:	sub	sp, sp, #48	; 0x30
   15578:	mov	lr, r3
   1557c:	movw	r3, #33184	; 0x81a0
   15580:	mov	r6, #32
   15584:	cmp	r1, #0
   15588:	mov	r4, sp
   1558c:	movt	r3, #2
   15590:	cmpne	r2, #0
   15594:	add	r5, r4, #16
   15598:	add	ip, r3, #16
   1559c:	vld1.64	{d16-d17}, [r3], r6
   155a0:	vld1.64	{d18-d19}, [ip]
   155a4:	vld1.64	{d20-d21}, [r3]
   155a8:	mov	r3, #10
   155ac:	vst1.64	{d16-d17}, [r4], r6
   155b0:	vst1.64	{d18-d19}, [r5]
   155b4:	vst1.64	{d20-d21}, [r4]
   155b8:	str	r3, [sp]
   155bc:	bne	155c4 <dcngettext@plt+0x4118>
   155c0:	bl	11494 <abort@plt>
   155c4:	ldr	ip, [fp, #8]
   155c8:	str	r2, [sp, #44]	; 0x2c
   155cc:	str	r1, [sp, #40]	; 0x28
   155d0:	mov	r3, sp
   155d4:	mov	r1, lr
   155d8:	mov	r2, ip
   155dc:	bl	14f74 <dcngettext@plt+0x3ac8>
   155e0:	sub	sp, fp, #16
   155e4:	pop	{r4, r5, r6, sl, fp, pc}
   155e8:	push	{r4, sl, fp, lr}
   155ec:	add	fp, sp, #8
   155f0:	sub	sp, sp, #48	; 0x30
   155f4:	movw	r3, #33184	; 0x81a0
   155f8:	mov	lr, #32
   155fc:	mov	ip, r2
   15600:	cmp	r0, #0
   15604:	movt	r3, #2
   15608:	cmpne	r1, #0
   1560c:	add	r2, r3, #16
   15610:	vld1.64	{d16-d17}, [r3], lr
   15614:	vld1.64	{d20-d21}, [r3]
   15618:	vld1.64	{d18-d19}, [r2]
   1561c:	mov	r2, sp
   15620:	add	r4, r2, #16
   15624:	vst1.64	{d16-d17}, [r2], lr
   15628:	vst1.64	{d20-d21}, [r2]
   1562c:	mov	r2, #10
   15630:	vst1.64	{d18-d19}, [r4]
   15634:	str	r2, [sp]
   15638:	bne	15640 <dcngettext@plt+0x4194>
   1563c:	bl	11494 <abort@plt>
   15640:	str	r1, [sp, #44]	; 0x2c
   15644:	str	r0, [sp, #40]	; 0x28
   15648:	mov	r3, sp
   1564c:	mov	r0, #0
   15650:	mov	r1, ip
   15654:	mvn	r2, #0
   15658:	bl	14f74 <dcngettext@plt+0x3ac8>
   1565c:	sub	sp, fp, #8
   15660:	pop	{r4, sl, fp, pc}
   15664:	push	{r4, r5, fp, lr}
   15668:	add	fp, sp, #8
   1566c:	sub	sp, sp, #48	; 0x30
   15670:	mov	ip, r3
   15674:	movw	r3, #33184	; 0x81a0
   15678:	mov	r4, #32
   1567c:	mov	lr, r2
   15680:	cmp	r0, #0
   15684:	movt	r3, #2
   15688:	cmpne	r1, #0
   1568c:	add	r2, r3, #16
   15690:	vld1.64	{d16-d17}, [r3], r4
   15694:	vld1.64	{d20-d21}, [r3]
   15698:	vld1.64	{d18-d19}, [r2]
   1569c:	mov	r2, sp
   156a0:	add	r5, r2, #16
   156a4:	vst1.64	{d16-d17}, [r2], r4
   156a8:	vst1.64	{d20-d21}, [r2]
   156ac:	mov	r2, #10
   156b0:	vst1.64	{d18-d19}, [r5]
   156b4:	str	r2, [sp]
   156b8:	bne	156c0 <dcngettext@plt+0x4214>
   156bc:	bl	11494 <abort@plt>
   156c0:	str	r1, [sp, #44]	; 0x2c
   156c4:	str	r0, [sp, #40]	; 0x28
   156c8:	mov	r3, sp
   156cc:	mov	r0, #0
   156d0:	mov	r1, lr
   156d4:	mov	r2, ip
   156d8:	bl	14f74 <dcngettext@plt+0x3ac8>
   156dc:	sub	sp, fp, #8
   156e0:	pop	{r4, r5, fp, pc}
   156e4:	movw	r3, #33088	; 0x8140
   156e8:	movt	r3, #2
   156ec:	b	14f74 <dcngettext@plt+0x3ac8>
   156f0:	movw	r3, #33088	; 0x8140
   156f4:	mov	r2, r1
   156f8:	mov	r1, r0
   156fc:	mov	r0, #0
   15700:	movt	r3, #2
   15704:	b	14f74 <dcngettext@plt+0x3ac8>
   15708:	movw	r3, #33088	; 0x8140
   1570c:	mvn	r2, #0
   15710:	movt	r3, #2
   15714:	b	14f74 <dcngettext@plt+0x3ac8>
   15718:	movw	r3, #33088	; 0x8140
   1571c:	mov	r1, r0
   15720:	mov	r0, #0
   15724:	mvn	r2, #0
   15728:	movt	r3, #2
   1572c:	b	14f74 <dcngettext@plt+0x3ac8>
   15730:	push	{r4, r5, fp, lr}
   15734:	add	fp, sp, #8
   15738:	mov	r5, r0
   1573c:	mov	r4, r1
   15740:	mov	r0, #0
   15744:	mov	r2, #5
   15748:	mov	r1, r5
   1574c:	bl	11218 <dcgettext@plt>
   15750:	cmp	r0, r5
   15754:	popne	{r4, r5, fp, pc}
   15758:	bl	16dd0 <dcngettext@plt+0x5924>
   1575c:	ldrb	r1, [r0]
   15760:	and	r1, r1, #223	; 0xdf
   15764:	cmp	r1, #71	; 0x47
   15768:	beq	157d0 <dcngettext@plt+0x4324>
   1576c:	cmp	r1, #85	; 0x55
   15770:	bne	15828 <dcngettext@plt+0x437c>
   15774:	ldrb	r1, [r0, #1]
   15778:	and	r1, r1, #223	; 0xdf
   1577c:	cmp	r1, #84	; 0x54
   15780:	bne	15828 <dcngettext@plt+0x437c>
   15784:	ldrb	r1, [r0, #2]
   15788:	and	r1, r1, #223	; 0xdf
   1578c:	cmp	r1, #70	; 0x46
   15790:	bne	15828 <dcngettext@plt+0x437c>
   15794:	ldrb	r1, [r0, #3]
   15798:	cmp	r1, #45	; 0x2d
   1579c:	bne	15828 <dcngettext@plt+0x437c>
   157a0:	ldrb	r1, [r0, #4]
   157a4:	cmp	r1, #56	; 0x38
   157a8:	bne	15828 <dcngettext@plt+0x437c>
   157ac:	ldrb	r0, [r0, #5]
   157b0:	cmp	r0, #0
   157b4:	bne	15828 <dcngettext@plt+0x437c>
   157b8:	ldrb	r1, [r5]
   157bc:	movw	r2, #30204	; 0x75fc
   157c0:	movw	r0, #30208	; 0x7600
   157c4:	movt	r2, #1
   157c8:	movt	r0, #1
   157cc:	b	15858 <dcngettext@plt+0x43ac>
   157d0:	ldrb	r1, [r0, #1]
   157d4:	and	r1, r1, #223	; 0xdf
   157d8:	cmp	r1, #66	; 0x42
   157dc:	bne	15828 <dcngettext@plt+0x437c>
   157e0:	ldrb	r1, [r0, #2]
   157e4:	cmp	r1, #49	; 0x31
   157e8:	bne	15828 <dcngettext@plt+0x437c>
   157ec:	ldrb	r1, [r0, #3]
   157f0:	cmp	r1, #56	; 0x38
   157f4:	bne	15828 <dcngettext@plt+0x437c>
   157f8:	ldrb	r1, [r0, #4]
   157fc:	cmp	r1, #48	; 0x30
   15800:	bne	15828 <dcngettext@plt+0x437c>
   15804:	ldrb	r1, [r0, #5]
   15808:	cmp	r1, #51	; 0x33
   1580c:	bne	15828 <dcngettext@plt+0x437c>
   15810:	ldrb	r1, [r0, #6]
   15814:	cmp	r1, #48	; 0x30
   15818:	bne	15828 <dcngettext@plt+0x437c>
   1581c:	ldrb	r0, [r0, #7]
   15820:	cmp	r0, #0
   15824:	beq	15844 <dcngettext@plt+0x4398>
   15828:	movw	r1, #30198	; 0x75f6
   1582c:	movw	r0, #30202	; 0x75fa
   15830:	cmp	r4, #9
   15834:	movt	r1, #1
   15838:	movt	r0, #1
   1583c:	moveq	r0, r1
   15840:	pop	{r4, r5, fp, pc}
   15844:	ldrb	r1, [r5]
   15848:	movw	r2, #30212	; 0x7604
   1584c:	movw	r0, #30216	; 0x7608
   15850:	movt	r2, #1
   15854:	movt	r0, #1
   15858:	cmp	r1, #96	; 0x60
   1585c:	moveq	r0, r2
   15860:	pop	{r4, r5, fp, pc}
   15864:	push	{r4, r5, fp, lr}
   15868:	add	fp, sp, #8
   1586c:	mov	r5, r0
   15870:	mov	r0, #33	; 0x21
   15874:	bl	166cc <dcngettext@plt+0x5220>
   15878:	add	r1, r5, #44	; 0x2c
   1587c:	mov	r2, #32
   15880:	mov	r4, r0
   15884:	bl	11398 <strncpy@plt>
   15888:	mov	r5, #0
   1588c:	strb	r5, [r0, #32]
   15890:	bl	1135c <strlen@plt>
   15894:	cmp	r0, #1
   15898:	blt	158c0 <dcngettext@plt+0x4414>
   1589c:	add	r1, r4, r0
   158a0:	mov	r0, r1
   158a4:	ldrb	r2, [r0, #-1]!
   158a8:	cmp	r2, #32
   158ac:	bne	158c0 <dcngettext@plt+0x4414>
   158b0:	strb	r5, [r1, #-1]
   158b4:	cmp	r4, r0
   158b8:	mov	r1, r0
   158bc:	bcc	158a4 <dcngettext@plt+0x43f8>
   158c0:	mov	r0, r4
   158c4:	pop	{r4, r5, fp, pc}
   158c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158cc:	add	fp, sp, #28
   158d0:	sub	sp, sp, #20
   158d4:	mov	r6, #0
   158d8:	mov	r5, r3
   158dc:	str	r2, [sp, #12]
   158e0:	str	r1, [sp, #8]
   158e4:	str	r6, [sp, #16]
   158e8:	bl	111d0 <utmpxname@plt>
   158ec:	bl	11224 <setutxent@plt>
   158f0:	bl	114a0 <getutxent@plt>
   158f4:	cmp	r0, #0
   158f8:	beq	159dc <dcngettext@plt+0x4530>
   158fc:	mov	r4, r0
   15900:	and	r7, r5, #1
   15904:	and	r8, r5, #2
   15908:	mov	r5, #0
   1590c:	mov	r9, #384	; 0x180
   15910:	add	sl, sp, #16
   15914:	mov	r6, #0
   15918:	b	15944 <dcngettext@plt+0x4498>
   1591c:	add	r0, r5, r5, lsl #1
   15920:	mov	r1, r4
   15924:	mov	r2, #384	; 0x180
   15928:	add	r0, r6, r0, lsl #7
   1592c:	bl	111f4 <memcpy@plt>
   15930:	add	r5, r5, #1
   15934:	bl	114a0 <getutxent@plt>
   15938:	mov	r4, r0
   1593c:	cmp	r0, #0
   15940:	beq	159e0 <dcngettext@plt+0x4534>
   15944:	ldrb	r0, [r4, #44]	; 0x2c
   15948:	cmp	r0, #0
   1594c:	mov	r0, #0
   15950:	beq	15964 <dcngettext@plt+0x44b8>
   15954:	ldrh	r0, [r4]
   15958:	sub	r0, r0, #7
   1595c:	clz	r0, r0
   15960:	lsr	r0, r0, #5
   15964:	cmp	r8, #0
   15968:	beq	15974 <dcngettext@plt+0x44c8>
   1596c:	cmp	r0, #0
   15970:	beq	15934 <dcngettext@plt+0x4488>
   15974:	cmp	r7, #0
   15978:	beq	159b0 <dcngettext@plt+0x4504>
   1597c:	eors	r0, r0, #1
   15980:	bne	159b0 <dcngettext@plt+0x4504>
   15984:	ldr	r0, [r4, #4]
   15988:	cmp	r0, #1
   1598c:	blt	159b0 <dcngettext@plt+0x4504>
   15990:	mov	r1, #0
   15994:	bl	1132c <kill@plt>
   15998:	cmn	r0, #1
   1599c:	bgt	159b0 <dcngettext@plt+0x4504>
   159a0:	bl	11374 <__errno_location@plt>
   159a4:	ldr	r0, [r0]
   159a8:	cmp	r0, #3
   159ac:	beq	15934 <dcngettext@plt+0x4488>
   159b0:	ldr	r0, [sp, #16]
   159b4:	cmp	r5, r0
   159b8:	bne	1591c <dcngettext@plt+0x4470>
   159bc:	mov	r0, r6
   159c0:	mov	r1, sl
   159c4:	mov	r2, #1
   159c8:	mvn	r3, #0
   159cc:	str	r9, [sp]
   159d0:	bl	168fc <dcngettext@plt+0x5450>
   159d4:	mov	r6, r0
   159d8:	b	1591c <dcngettext@plt+0x4470>
   159dc:	mov	r5, #0
   159e0:	bl	113f8 <endutxent@plt>
   159e4:	ldr	r0, [sp, #8]
   159e8:	str	r5, [r0]
   159ec:	ldr	r0, [sp, #12]
   159f0:	str	r6, [r0]
   159f4:	mov	r0, #0
   159f8:	sub	sp, fp, #28
   159fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15a04:	add	fp, sp, #24
   15a08:	mov	r4, r0
   15a0c:	cmp	r0, #0
   15a10:	beq	15a34 <dcngettext@plt+0x4588>
   15a14:	mov	r0, r4
   15a18:	bl	1135c <strlen@plt>
   15a1c:	add	r5, r0, #1
   15a20:	cmp	r5, #58	; 0x3a
   15a24:	bls	15a38 <dcngettext@plt+0x458c>
   15a28:	add	r0, r0, #10
   15a2c:	bic	r0, r0, #3
   15a30:	b	15a3c <dcngettext@plt+0x4590>
   15a34:	mov	r5, #0
   15a38:	mov	r0, #64	; 0x40
   15a3c:	bl	16ca0 <dcngettext@plt+0x57f4>
   15a40:	mov	r6, r0
   15a44:	cmp	r0, #0
   15a48:	beq	15a84 <dcngettext@plt+0x45d8>
   15a4c:	cmp	r4, #0
   15a50:	mov	r0, r4
   15a54:	mov	r8, #0
   15a58:	mov	r7, r6
   15a5c:	movwne	r0, #1
   15a60:	str	r8, [r6]
   15a64:	strb	r0, [r6, #4]
   15a68:	strb	r8, [r7, #5]!
   15a6c:	beq	15a84 <dcngettext@plt+0x45d8>
   15a70:	mov	r0, r7
   15a74:	mov	r1, r4
   15a78:	mov	r2, r5
   15a7c:	bl	111f4 <memcpy@plt>
   15a80:	strb	r8, [r7, r5]
   15a84:	mov	r0, r6
   15a88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15a8c:	push	{r4, sl, fp, lr}
   15a90:	add	fp, sp, #8
   15a94:	cmp	r0, #2
   15a98:	popcc	{r4, sl, fp, pc}
   15a9c:	ldr	r4, [r0]
   15aa0:	bl	16da8 <dcngettext@plt+0x58fc>
   15aa4:	cmp	r4, #0
   15aa8:	mov	r0, r4
   15aac:	bne	15a9c <dcngettext@plt+0x45f0>
   15ab0:	pop	{r4, sl, fp, pc}
   15ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ab8:	add	fp, sp, #28
   15abc:	sub	sp, sp, #4
   15ac0:	mov	sl, r2
   15ac4:	mov	r7, r1
   15ac8:	cmp	r0, #0
   15acc:	beq	15b94 <dcngettext@plt+0x46e8>
   15ad0:	mov	r6, r0
   15ad4:	bl	15bdc <dcngettext@plt+0x4730>
   15ad8:	cmp	r0, #0
   15adc:	beq	15ba8 <dcngettext@plt+0x46fc>
   15ae0:	mov	r4, r0
   15ae4:	mov	r0, r7
   15ae8:	mov	r1, sl
   15aec:	bl	1123c <localtime_r@plt>
   15af0:	mov	r7, #1
   15af4:	cmp	r0, #0
   15af8:	mov	r9, #1
   15afc:	beq	15b10 <dcngettext@plt+0x4664>
   15b00:	mov	r0, r6
   15b04:	mov	r1, sl
   15b08:	bl	15d28 <dcngettext@plt+0x487c>
   15b0c:	eor	r9, r0, #1
   15b10:	cmp	r4, #1
   15b14:	beq	15b78 <dcngettext@plt+0x46cc>
   15b18:	bl	11374 <__errno_location@plt>
   15b1c:	mov	r6, r0
   15b20:	ldr	r8, [r0]
   15b24:	ldrb	r0, [r4, #4]
   15b28:	cmp	r0, #0
   15b2c:	beq	15bb4 <dcngettext@plt+0x4708>
   15b30:	movw	r0, #30304	; 0x7660
   15b34:	add	r1, r4, #5
   15b38:	mov	r2, #1
   15b3c:	movt	r0, #1
   15b40:	bl	11368 <setenv@plt>
   15b44:	cmp	r0, #0
   15b48:	beq	15bc8 <dcngettext@plt+0x471c>
   15b4c:	ldr	r8, [r6]
   15b50:	mov	r7, #0
   15b54:	cmp	r4, #2
   15b58:	bcc	15b74 <dcngettext@plt+0x46c8>
   15b5c:	ldr	r5, [r4]
   15b60:	mov	r0, r4
   15b64:	bl	16da8 <dcngettext@plt+0x58fc>
   15b68:	cmp	r5, #0
   15b6c:	mov	r4, r5
   15b70:	bne	15b5c <dcngettext@plt+0x46b0>
   15b74:	str	r8, [r6]
   15b78:	cmp	r7, #0
   15b7c:	moveq	sl, r7
   15b80:	cmp	r9, #0
   15b84:	movwne	sl, #0
   15b88:	mov	r0, sl
   15b8c:	sub	sp, fp, #28
   15b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b94:	mov	r0, r7
   15b98:	mov	r1, sl
   15b9c:	sub	sp, fp, #28
   15ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba4:	b	111a0 <gmtime_r@plt>
   15ba8:	mov	r0, #0
   15bac:	sub	sp, fp, #28
   15bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15bb4:	movw	r0, #30304	; 0x7660
   15bb8:	movt	r0, #1
   15bbc:	bl	1147c <unsetenv@plt>
   15bc0:	cmp	r0, #0
   15bc4:	bne	15b4c <dcngettext@plt+0x46a0>
   15bc8:	bl	11260 <tzset@plt>
   15bcc:	mov	r7, #1
   15bd0:	cmp	r4, #2
   15bd4:	bcs	15b5c <dcngettext@plt+0x46b0>
   15bd8:	b	15b74 <dcngettext@plt+0x46c8>
   15bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15be0:	add	fp, sp, #28
   15be4:	sub	sp, sp, #4
   15be8:	mov	r4, r0
   15bec:	movw	r0, #30304	; 0x7660
   15bf0:	movt	r0, #1
   15bf4:	bl	112b4 <getenv@plt>
   15bf8:	mov	r6, r0
   15bfc:	ldrb	r0, [r4, #4]
   15c00:	cmp	r6, #0
   15c04:	beq	15c48 <dcngettext@plt+0x479c>
   15c08:	cmp	r0, #0
   15c0c:	beq	15c24 <dcngettext@plt+0x4778>
   15c10:	add	r0, r4, #5
   15c14:	mov	r1, r6
   15c18:	bl	111ac <strcmp@plt>
   15c1c:	cmp	r0, #0
   15c20:	beq	15cfc <dcngettext@plt+0x4850>
   15c24:	mov	r0, r6
   15c28:	bl	1135c <strlen@plt>
   15c2c:	add	r8, r0, #1
   15c30:	mov	r9, #1
   15c34:	cmp	r8, #58	; 0x3a
   15c38:	bls	15c58 <dcngettext@plt+0x47ac>
   15c3c:	add	r0, r0, #10
   15c40:	bic	r0, r0, #3
   15c44:	b	15c5c <dcngettext@plt+0x47b0>
   15c48:	mov	r9, #0
   15c4c:	cmp	r0, #0
   15c50:	mov	r8, #0
   15c54:	beq	15cfc <dcngettext@plt+0x4850>
   15c58:	mov	r0, #64	; 0x40
   15c5c:	bl	16ca0 <dcngettext@plt+0x57f4>
   15c60:	cmp	r0, #0
   15c64:	beq	15cf4 <dcngettext@plt+0x4848>
   15c68:	mov	sl, #0
   15c6c:	mov	r7, r0
   15c70:	strb	r9, [r0, #4]
   15c74:	mov	r5, r0
   15c78:	cmp	r9, #0
   15c7c:	str	sl, [r0]
   15c80:	strb	sl, [r7, #5]!
   15c84:	beq	15c9c <dcngettext@plt+0x47f0>
   15c88:	mov	r0, r7
   15c8c:	mov	r1, r6
   15c90:	mov	r2, r8
   15c94:	bl	111f4 <memcpy@plt>
   15c98:	strb	sl, [r7, r8]
   15c9c:	ldrb	r0, [r4, #4]
   15ca0:	cmp	r0, #0
   15ca4:	beq	15d04 <dcngettext@plt+0x4858>
   15ca8:	movw	r0, #30304	; 0x7660
   15cac:	add	r1, r4, #5
   15cb0:	mov	r2, #1
   15cb4:	movt	r0, #1
   15cb8:	bl	11368 <setenv@plt>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15d18 <dcngettext@plt+0x486c>
   15cc4:	bl	11374 <__errno_location@plt>
   15cc8:	ldr	r6, [r0]
   15ccc:	mov	r4, r0
   15cd0:	cmp	r5, #2
   15cd4:	bcc	15cf0 <dcngettext@plt+0x4844>
   15cd8:	ldr	r7, [r5]
   15cdc:	mov	r0, r5
   15ce0:	bl	16da8 <dcngettext@plt+0x58fc>
   15ce4:	cmp	r7, #0
   15ce8:	mov	r5, r7
   15cec:	bne	15cd8 <dcngettext@plt+0x482c>
   15cf0:	str	r6, [r4]
   15cf4:	mov	r5, #0
   15cf8:	b	15d1c <dcngettext@plt+0x4870>
   15cfc:	mov	r5, #1
   15d00:	b	15d1c <dcngettext@plt+0x4870>
   15d04:	movw	r0, #30304	; 0x7660
   15d08:	movt	r0, #1
   15d0c:	bl	1147c <unsetenv@plt>
   15d10:	cmp	r0, #0
   15d14:	bne	15cc4 <dcngettext@plt+0x4818>
   15d18:	bl	11260 <tzset@plt>
   15d1c:	mov	r0, r5
   15d20:	sub	sp, fp, #28
   15d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d2c:	add	fp, sp, #28
   15d30:	sub	sp, sp, #4
   15d34:	ldr	r7, [r1, #40]	; 0x28
   15d38:	mov	r8, #1
   15d3c:	cmp	r7, #0
   15d40:	beq	15de0 <dcngettext@plt+0x4934>
   15d44:	mov	r5, r1
   15d48:	mov	r6, r0
   15d4c:	cmp	r7, r1
   15d50:	bcc	15d60 <dcngettext@plt+0x48b4>
   15d54:	add	r0, r5, #44	; 0x2c
   15d58:	cmp	r7, r0
   15d5c:	bcc	15de0 <dcngettext@plt+0x4934>
   15d60:	ldrb	r0, [r7]
   15d64:	cmp	r0, #0
   15d68:	beq	15dd4 <dcngettext@plt+0x4928>
   15d6c:	add	r4, r6, #5
   15d70:	mov	r0, r4
   15d74:	mov	r1, r7
   15d78:	bl	111ac <strcmp@plt>
   15d7c:	cmp	r0, #0
   15d80:	beq	15ddc <dcngettext@plt+0x4930>
   15d84:	ldrb	r0, [r4]
   15d88:	cmp	r0, #0
   15d8c:	bne	15da8 <dcngettext@plt+0x48fc>
   15d90:	add	r0, r6, #5
   15d94:	cmp	r4, r0
   15d98:	bne	15dec <dcngettext@plt+0x4940>
   15d9c:	ldrb	r0, [r6, #4]
   15da0:	cmp	r0, #0
   15da4:	beq	15dec <dcngettext@plt+0x4940>
   15da8:	mov	r0, r4
   15dac:	bl	1135c <strlen@plt>
   15db0:	add	r4, r0, r4
   15db4:	ldrb	r0, [r4, #1]!
   15db8:	cmp	r0, #0
   15dbc:	bne	15d70 <dcngettext@plt+0x48c4>
   15dc0:	ldr	r0, [r6]
   15dc4:	cmp	r0, #0
   15dc8:	addne	r4, r0, #5
   15dcc:	movne	r6, r0
   15dd0:	b	15d70 <dcngettext@plt+0x48c4>
   15dd4:	movw	r4, #29128	; 0x71c8
   15dd8:	movt	r4, #1
   15ddc:	str	r4, [r5, #40]	; 0x28
   15de0:	mov	r0, r8
   15de4:	sub	sp, fp, #28
   15de8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15dec:	sub	r0, r6, r4
   15df0:	add	sl, r0, #64	; 0x40
   15df4:	mov	r0, r7
   15df8:	bl	1135c <strlen@plt>
   15dfc:	add	r9, r0, #1
   15e00:	cmp	r9, sl
   15e04:	bge	15e24 <dcngettext@plt+0x4978>
   15e08:	mov	r0, r4
   15e0c:	mov	r1, r7
   15e10:	mov	r2, r9
   15e14:	bl	111f4 <memcpy@plt>
   15e18:	mov	r0, #0
   15e1c:	strb	r0, [r4, r9]
   15e20:	b	15ddc <dcngettext@plt+0x4930>
   15e24:	add	r0, r0, #10
   15e28:	cmp	r9, #59	; 0x3b
   15e2c:	bic	r0, r0, #3
   15e30:	movwcc	r0, #64	; 0x40
   15e34:	bl	16ca0 <dcngettext@plt+0x57f4>
   15e38:	cmp	r0, #0
   15e3c:	beq	15e7c <dcngettext@plt+0x49d0>
   15e40:	mov	sl, r0
   15e44:	mov	r0, #1
   15e48:	mov	r1, r7
   15e4c:	mov	r2, r9
   15e50:	strh	r0, [sl, #4]
   15e54:	mov	r0, #0
   15e58:	add	r4, sl, #5
   15e5c:	str	r0, [sl]
   15e60:	mov	r0, r4
   15e64:	bl	111f4 <memcpy@plt>
   15e68:	mov	r0, #0
   15e6c:	strb	r0, [r4, r9]
   15e70:	str	sl, [r6]
   15e74:	strb	r0, [sl, #4]
   15e78:	b	15ddc <dcngettext@plt+0x4930>
   15e7c:	mov	r8, #0
   15e80:	str	r8, [r6]
   15e84:	b	15de0 <dcngettext@plt+0x4934>
   15e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e8c:	add	fp, sp, #28
   15e90:	sub	sp, sp, #52	; 0x34
   15e94:	mov	r4, r1
   15e98:	cmp	r0, #0
   15e9c:	beq	15fa8 <dcngettext@plt+0x4afc>
   15ea0:	mov	r6, r0
   15ea4:	bl	15bdc <dcngettext@plt+0x4730>
   15ea8:	cmp	r0, #0
   15eac:	beq	15fa0 <dcngettext@plt+0x4af4>
   15eb0:	mov	r8, r0
   15eb4:	mov	r0, #32
   15eb8:	mov	r1, r4
   15ebc:	add	r5, sp, #8
   15ec0:	vld1.32	{d16-d17}, [r1], r0
   15ec4:	mov	r2, r5
   15ec8:	vst1.32	{d16-d17}, [r2], r0
   15ecc:	ldr	r0, [r4, #16]
   15ed0:	ldr	r3, [r4, #20]
   15ed4:	str	r0, [sp, #24]
   15ed8:	mvn	r0, #0
   15edc:	str	r0, [sp, #36]	; 0x24
   15ee0:	str	r3, [sp, #28]
   15ee4:	ldr	r0, [r1]
   15ee8:	str	r0, [r2]
   15eec:	mov	r0, r5
   15ef0:	bl	111b8 <mktime@plt>
   15ef4:	mov	r9, r0
   15ef8:	ldr	r0, [sp, #36]	; 0x24
   15efc:	mov	sl, #1
   15f00:	mov	r1, #1
   15f04:	cmp	r0, #0
   15f08:	bmi	15f1c <dcngettext@plt+0x4a70>
   15f0c:	add	r1, sp, #8
   15f10:	mov	r0, r6
   15f14:	bl	15d28 <dcngettext@plt+0x487c>
   15f18:	eor	r1, r0, #1
   15f1c:	cmp	r8, #1
   15f20:	beq	15f94 <dcngettext@plt+0x4ae8>
   15f24:	str	r1, [sp, #4]
   15f28:	bl	11374 <__errno_location@plt>
   15f2c:	mov	r6, r0
   15f30:	ldr	r7, [r0]
   15f34:	ldrb	r0, [r8, #4]
   15f38:	cmp	r0, #0
   15f3c:	beq	15fe8 <dcngettext@plt+0x4b3c>
   15f40:	movw	r0, #30304	; 0x7660
   15f44:	add	r1, r8, #5
   15f48:	mov	r2, #1
   15f4c:	movt	r0, #1
   15f50:	bl	11368 <setenv@plt>
   15f54:	cmp	r0, #0
   15f58:	beq	15ffc <dcngettext@plt+0x4b50>
   15f5c:	ldr	r0, [r6]
   15f60:	mov	sl, #0
   15f64:	str	r0, [sp]
   15f68:	cmp	r8, #2
   15f6c:	bcc	15f88 <dcngettext@plt+0x4adc>
   15f70:	ldr	r7, [r8]
   15f74:	mov	r0, r8
   15f78:	bl	16da8 <dcngettext@plt+0x58fc>
   15f7c:	cmp	r7, #0
   15f80:	mov	r8, r7
   15f84:	bne	15f70 <dcngettext@plt+0x4ac4>
   15f88:	ldr	r0, [sp]
   15f8c:	ldr	r1, [sp, #4]
   15f90:	str	r0, [r6]
   15f94:	eor	r0, sl, #1
   15f98:	orrs	r0, r1, r0
   15f9c:	beq	15fb8 <dcngettext@plt+0x4b0c>
   15fa0:	mvn	r9, #0
   15fa4:	b	15fdc <dcngettext@plt+0x4b30>
   15fa8:	mov	r0, r4
   15fac:	sub	sp, fp, #28
   15fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fb4:	b	1144c <timegm@plt>
   15fb8:	mov	r0, #28
   15fbc:	add	r1, r5, #16
   15fc0:	vld1.32	{d16-d17}, [r5], r0
   15fc4:	vld1.64	{d18-d19}, [r1]
   15fc8:	add	r1, r4, #16
   15fcc:	vld1.32	{d20-d21}, [r5]
   15fd0:	vst1.32	{d16-d17}, [r4], r0
   15fd4:	vst1.32	{d18-d19}, [r1]
   15fd8:	vst1.32	{d20-d21}, [r4]
   15fdc:	mov	r0, r9
   15fe0:	sub	sp, fp, #28
   15fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fe8:	movw	r0, #30304	; 0x7660
   15fec:	movt	r0, #1
   15ff0:	bl	1147c <unsetenv@plt>
   15ff4:	cmp	r0, #0
   15ff8:	bne	15f5c <dcngettext@plt+0x4ab0>
   15ffc:	str	r7, [sp]
   16000:	bl	11260 <tzset@plt>
   16004:	mov	sl, #1
   16008:	cmp	r8, #2
   1600c:	bcs	15f70 <dcngettext@plt+0x4ac4>
   16010:	b	15f88 <dcngettext@plt+0x4adc>
   16014:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16018:	add	fp, sp, #24
   1601c:	sub	sp, sp, #32
   16020:	ldr	r6, [fp, #12]
   16024:	ldr	r7, [fp, #8]
   16028:	mov	r4, r2
   1602c:	mov	r8, r0
   16030:	cmp	r1, #0
   16034:	beq	1605c <dcngettext@plt+0x4bb0>
   16038:	movw	r2, #30307	; 0x7663
   1603c:	mov	r5, r1
   16040:	str	r3, [sp, #4]
   16044:	str	r4, [sp]
   16048:	mov	r0, r8
   1604c:	mov	r1, #1
   16050:	movt	r2, #1
   16054:	mov	r3, r5
   16058:	b	16074 <dcngettext@plt+0x4bc8>
   1605c:	movw	r2, #30319	; 0x766f
   16060:	str	r3, [sp]
   16064:	mov	r0, r8
   16068:	mov	r1, #1
   1606c:	mov	r3, r4
   16070:	movt	r2, #1
   16074:	bl	113bc <__fprintf_chk@plt>
   16078:	movw	r1, #30326	; 0x7676
   1607c:	mov	r0, #0
   16080:	mov	r2, #5
   16084:	movt	r1, #1
   16088:	bl	11218 <dcgettext@plt>
   1608c:	movw	r2, #31044	; 0x7944
   16090:	mov	r3, r0
   16094:	movw	r0, #2022	; 0x7e6
   16098:	mov	r1, #1
   1609c:	movt	r2, #1
   160a0:	str	r0, [sp]
   160a4:	mov	r0, r8
   160a8:	bl	113bc <__fprintf_chk@plt>
   160ac:	movw	r4, #29127	; 0x71c7
   160b0:	mov	r1, r8
   160b4:	movt	r4, #1
   160b8:	mov	r0, r4
   160bc:	bl	11194 <fputs_unlocked@plt>
   160c0:	movw	r1, #30330	; 0x767a
   160c4:	mov	r0, #0
   160c8:	mov	r2, #5
   160cc:	movt	r1, #1
   160d0:	bl	11218 <dcgettext@plt>
   160d4:	movw	r3, #30501	; 0x7725
   160d8:	mov	r2, r0
   160dc:	mov	r0, r8
   160e0:	mov	r1, #1
   160e4:	movt	r3, #1
   160e8:	bl	113bc <__fprintf_chk@plt>
   160ec:	mov	r0, r4
   160f0:	mov	r1, r8
   160f4:	bl	11194 <fputs_unlocked@plt>
   160f8:	cmp	r6, #9
   160fc:	bhi	16138 <dcngettext@plt+0x4c8c>
   16100:	add	r0, pc, #0
   16104:	ldr	pc, [r0, r6, lsl #2]
   16108:	andeq	r6, r1, r0, lsr r1
   1610c:	andeq	r6, r1, r4, asr #2
   16110:	andeq	r6, r1, r4, ror r1
   16114:	muleq	r1, ip, r1
   16118:	andeq	r6, r1, r4, asr #3
   1611c:	andeq	r6, r1, ip, ror #3
   16120:	andeq	r6, r1, r4, lsl r2
   16124:	andeq	r6, r1, ip, asr #4
   16128:	andeq	r6, r1, ip, ror #5
   1612c:	muleq	r1, r4, r2
   16130:	sub	sp, fp, #24
   16134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16138:	movw	r1, #30854	; 0x7886
   1613c:	movt	r1, #1
   16140:	b	1629c <dcngettext@plt+0x4df0>
   16144:	movw	r1, #30535	; 0x7747
   16148:	mov	r0, #0
   1614c:	mov	r2, #5
   16150:	movt	r1, #1
   16154:	bl	11218 <dcgettext@plt>
   16158:	ldr	r3, [r7]
   1615c:	mov	r2, r0
   16160:	mov	r0, r8
   16164:	mov	r1, #1
   16168:	sub	sp, fp, #24
   1616c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16170:	b	113bc <__fprintf_chk@plt>
   16174:	movw	r1, #30551	; 0x7757
   16178:	mov	r0, #0
   1617c:	mov	r2, #5
   16180:	movt	r1, #1
   16184:	bl	11218 <dcgettext@plt>
   16188:	mov	r2, r0
   1618c:	ldr	r3, [r7]
   16190:	ldr	r0, [r7, #4]
   16194:	str	r0, [sp]
   16198:	b	16288 <dcngettext@plt+0x4ddc>
   1619c:	movw	r1, #30574	; 0x776e
   161a0:	mov	r0, #0
   161a4:	mov	r2, #5
   161a8:	movt	r1, #1
   161ac:	bl	11218 <dcgettext@plt>
   161b0:	mov	r2, r0
   161b4:	ldr	r3, [r7]
   161b8:	ldmib	r7, {r0, r1}
   161bc:	stm	sp, {r0, r1}
   161c0:	b	16288 <dcngettext@plt+0x4ddc>
   161c4:	movw	r1, #30602	; 0x778a
   161c8:	mov	r0, #0
   161cc:	mov	r2, #5
   161d0:	movt	r1, #1
   161d4:	bl	11218 <dcgettext@plt>
   161d8:	ldr	r3, [r7]
   161dc:	mov	r2, r0
   161e0:	ldmib	r7, {r0, r1, r7}
   161e4:	stm	sp, {r0, r1, r7}
   161e8:	b	16288 <dcngettext@plt+0x4ddc>
   161ec:	movw	r1, #30634	; 0x77aa
   161f0:	mov	r0, #0
   161f4:	mov	r2, #5
   161f8:	movt	r1, #1
   161fc:	bl	11218 <dcgettext@plt>
   16200:	ldr	r3, [r7]
   16204:	mov	r2, r0
   16208:	ldmib	r7, {r0, r1, r6, r7}
   1620c:	stm	sp, {r0, r1, r6, r7}
   16210:	b	16288 <dcngettext@plt+0x4ddc>
   16214:	movw	r1, #30670	; 0x77ce
   16218:	mov	r0, #0
   1621c:	mov	r2, #5
   16220:	movt	r1, #1
   16224:	bl	11218 <dcgettext@plt>
   16228:	mov	r2, r0
   1622c:	ldr	r3, [r7]
   16230:	ldmib	r7, {r0, r1, r6}
   16234:	ldr	r5, [r7, #16]
   16238:	ldr	r7, [r7, #20]
   1623c:	stm	sp, {r0, r1, r6}
   16240:	str	r5, [sp, #12]
   16244:	str	r7, [sp, #16]
   16248:	b	16288 <dcngettext@plt+0x4ddc>
   1624c:	movw	r1, #30710	; 0x77f6
   16250:	mov	r0, #0
   16254:	mov	r2, #5
   16258:	movt	r1, #1
   1625c:	bl	11218 <dcgettext@plt>
   16260:	mov	r2, r0
   16264:	ldr	r3, [r7]
   16268:	ldmib	r7, {r0, r1, r6}
   1626c:	ldr	r5, [r7, #16]
   16270:	ldr	r4, [r7, #20]
   16274:	ldr	r7, [r7, #24]
   16278:	stm	sp, {r0, r1, r6}
   1627c:	str	r5, [sp, #12]
   16280:	str	r4, [sp, #16]
   16284:	str	r7, [sp, #20]
   16288:	mov	r0, r8
   1628c:	mov	r1, #1
   16290:	b	1633c <dcngettext@plt+0x4e90>
   16294:	movw	r1, #30802	; 0x7852
   16298:	movt	r1, #1
   1629c:	mov	r0, #0
   162a0:	mov	r2, #5
   162a4:	bl	11218 <dcgettext@plt>
   162a8:	mov	ip, r0
   162ac:	ldr	r3, [r7]
   162b0:	ldr	r0, [r7, #4]
   162b4:	ldr	r1, [r7, #8]
   162b8:	ldr	r6, [r7, #12]
   162bc:	ldr	r5, [r7, #16]
   162c0:	ldr	r4, [r7, #20]
   162c4:	ldr	r2, [r7, #24]
   162c8:	ldr	lr, [r7, #28]
   162cc:	ldr	r7, [r7, #32]
   162d0:	stm	sp, {r0, r1, r6}
   162d4:	str	r5, [sp, #12]
   162d8:	str	r4, [sp, #16]
   162dc:	str	r2, [sp, #20]
   162e0:	str	lr, [sp, #24]
   162e4:	str	r7, [sp, #28]
   162e8:	b	16330 <dcngettext@plt+0x4e84>
   162ec:	movw	r1, #30754	; 0x7822
   162f0:	mov	r0, #0
   162f4:	mov	r2, #5
   162f8:	movt	r1, #1
   162fc:	bl	11218 <dcgettext@plt>
   16300:	mov	ip, r0
   16304:	ldr	r3, [r7]
   16308:	ldmib	r7, {r0, r1, r6}
   1630c:	ldr	r5, [r7, #16]
   16310:	ldr	r4, [r7, #20]
   16314:	ldr	r2, [r7, #24]
   16318:	ldr	r7, [r7, #28]
   1631c:	stm	sp, {r0, r1, r6}
   16320:	str	r5, [sp, #12]
   16324:	str	r4, [sp, #16]
   16328:	str	r2, [sp, #20]
   1632c:	str	r7, [sp, #24]
   16330:	mov	r0, r8
   16334:	mov	r1, #1
   16338:	mov	r2, ip
   1633c:	bl	113bc <__fprintf_chk@plt>
   16340:	sub	sp, fp, #24
   16344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16348:	push	{r4, sl, fp, lr}
   1634c:	add	fp, sp, #8
   16350:	sub	sp, sp, #8
   16354:	ldr	ip, [fp, #8]
   16358:	mov	lr, #0
   1635c:	ldr	r4, [ip, lr, lsl #2]
   16360:	add	lr, lr, #1
   16364:	cmp	r4, #0
   16368:	bne	1635c <dcngettext@plt+0x4eb0>
   1636c:	sub	r4, lr, #1
   16370:	str	ip, [sp]
   16374:	str	r4, [sp, #4]
   16378:	bl	16014 <dcngettext@plt+0x4b68>
   1637c:	sub	sp, fp, #8
   16380:	pop	{r4, sl, fp, pc}
   16384:	push	{fp, lr}
   16388:	mov	fp, sp
   1638c:	sub	sp, sp, #48	; 0x30
   16390:	ldr	ip, [fp, #8]
   16394:	ldr	lr, [ip]
   16398:	cmp	lr, #0
   1639c:	str	lr, [sp, #8]
   163a0:	beq	1643c <dcngettext@plt+0x4f90>
   163a4:	ldr	lr, [ip, #4]
   163a8:	cmp	lr, #0
   163ac:	str	lr, [sp, #12]
   163b0:	beq	16444 <dcngettext@plt+0x4f98>
   163b4:	ldr	lr, [ip, #8]
   163b8:	cmp	lr, #0
   163bc:	str	lr, [sp, #16]
   163c0:	beq	1644c <dcngettext@plt+0x4fa0>
   163c4:	ldr	lr, [ip, #12]
   163c8:	cmp	lr, #0
   163cc:	str	lr, [sp, #20]
   163d0:	beq	16454 <dcngettext@plt+0x4fa8>
   163d4:	ldr	lr, [ip, #16]
   163d8:	cmp	lr, #0
   163dc:	str	lr, [sp, #24]
   163e0:	beq	1645c <dcngettext@plt+0x4fb0>
   163e4:	ldr	lr, [ip, #20]
   163e8:	cmp	lr, #0
   163ec:	str	lr, [sp, #28]
   163f0:	beq	16464 <dcngettext@plt+0x4fb8>
   163f4:	ldr	lr, [ip, #24]
   163f8:	cmp	lr, #0
   163fc:	str	lr, [sp, #32]
   16400:	beq	1646c <dcngettext@plt+0x4fc0>
   16404:	ldr	lr, [ip, #28]
   16408:	cmp	lr, #0
   1640c:	str	lr, [sp, #36]	; 0x24
   16410:	beq	16474 <dcngettext@plt+0x4fc8>
   16414:	ldr	lr, [ip, #32]
   16418:	cmp	lr, #0
   1641c:	str	lr, [sp, #40]	; 0x28
   16420:	beq	1647c <dcngettext@plt+0x4fd0>
   16424:	ldr	lr, [ip, #36]	; 0x24
   16428:	mov	ip, #10
   1642c:	cmp	lr, #0
   16430:	str	lr, [sp, #44]	; 0x2c
   16434:	movweq	ip, #9
   16438:	b	16480 <dcngettext@plt+0x4fd4>
   1643c:	mov	ip, #0
   16440:	b	16480 <dcngettext@plt+0x4fd4>
   16444:	mov	ip, #1
   16448:	b	16480 <dcngettext@plt+0x4fd4>
   1644c:	mov	ip, #2
   16450:	b	16480 <dcngettext@plt+0x4fd4>
   16454:	mov	ip, #3
   16458:	b	16480 <dcngettext@plt+0x4fd4>
   1645c:	mov	ip, #4
   16460:	b	16480 <dcngettext@plt+0x4fd4>
   16464:	mov	ip, #5
   16468:	b	16480 <dcngettext@plt+0x4fd4>
   1646c:	mov	ip, #6
   16470:	b	16480 <dcngettext@plt+0x4fd4>
   16474:	mov	ip, #7
   16478:	b	16480 <dcngettext@plt+0x4fd4>
   1647c:	mov	ip, #8
   16480:	add	lr, sp, #8
   16484:	str	ip, [sp, #4]
   16488:	str	lr, [sp]
   1648c:	bl	16014 <dcngettext@plt+0x4b68>
   16490:	mov	sp, fp
   16494:	pop	{fp, pc}
   16498:	push	{fp, lr}
   1649c:	mov	fp, sp
   164a0:	sub	sp, sp, #56	; 0x38
   164a4:	add	ip, fp, #8
   164a8:	str	ip, [sp, #12]
   164ac:	ldr	lr, [fp, #8]
   164b0:	cmp	lr, #0
   164b4:	str	lr, [sp, #16]
   164b8:	beq	16554 <dcngettext@plt+0x50a8>
   164bc:	ldr	lr, [ip, #4]
   164c0:	cmp	lr, #0
   164c4:	str	lr, [sp, #20]
   164c8:	beq	1655c <dcngettext@plt+0x50b0>
   164cc:	ldr	lr, [ip, #8]
   164d0:	cmp	lr, #0
   164d4:	str	lr, [sp, #24]
   164d8:	beq	16564 <dcngettext@plt+0x50b8>
   164dc:	ldr	lr, [ip, #12]
   164e0:	cmp	lr, #0
   164e4:	str	lr, [sp, #28]
   164e8:	beq	1656c <dcngettext@plt+0x50c0>
   164ec:	ldr	lr, [ip, #16]
   164f0:	cmp	lr, #0
   164f4:	str	lr, [sp, #32]
   164f8:	beq	16574 <dcngettext@plt+0x50c8>
   164fc:	ldr	lr, [ip, #20]
   16500:	cmp	lr, #0
   16504:	str	lr, [sp, #36]	; 0x24
   16508:	beq	1657c <dcngettext@plt+0x50d0>
   1650c:	ldr	lr, [ip, #24]
   16510:	cmp	lr, #0
   16514:	str	lr, [sp, #40]	; 0x28
   16518:	beq	16584 <dcngettext@plt+0x50d8>
   1651c:	ldr	lr, [ip, #28]
   16520:	cmp	lr, #0
   16524:	str	lr, [sp, #44]	; 0x2c
   16528:	beq	1658c <dcngettext@plt+0x50e0>
   1652c:	ldr	lr, [ip, #32]
   16530:	cmp	lr, #0
   16534:	str	lr, [sp, #48]	; 0x30
   16538:	beq	16594 <dcngettext@plt+0x50e8>
   1653c:	ldr	lr, [ip, #36]	; 0x24
   16540:	mov	ip, #10
   16544:	cmp	lr, #0
   16548:	str	lr, [sp, #52]	; 0x34
   1654c:	movweq	ip, #9
   16550:	b	16598 <dcngettext@plt+0x50ec>
   16554:	mov	ip, #0
   16558:	b	16598 <dcngettext@plt+0x50ec>
   1655c:	mov	ip, #1
   16560:	b	16598 <dcngettext@plt+0x50ec>
   16564:	mov	ip, #2
   16568:	b	16598 <dcngettext@plt+0x50ec>
   1656c:	mov	ip, #3
   16570:	b	16598 <dcngettext@plt+0x50ec>
   16574:	mov	ip, #4
   16578:	b	16598 <dcngettext@plt+0x50ec>
   1657c:	mov	ip, #5
   16580:	b	16598 <dcngettext@plt+0x50ec>
   16584:	mov	ip, #6
   16588:	b	16598 <dcngettext@plt+0x50ec>
   1658c:	mov	ip, #7
   16590:	b	16598 <dcngettext@plt+0x50ec>
   16594:	mov	ip, #8
   16598:	add	lr, sp, #16
   1659c:	str	ip, [sp, #4]
   165a0:	str	lr, [sp]
   165a4:	bl	16014 <dcngettext@plt+0x4b68>
   165a8:	mov	sp, fp
   165ac:	pop	{fp, pc}
   165b0:	push	{fp, lr}
   165b4:	mov	fp, sp
   165b8:	movw	r0, #33156	; 0x8184
   165bc:	movt	r0, #2
   165c0:	ldr	r1, [r0]
   165c4:	movw	r0, #29127	; 0x71c7
   165c8:	movt	r0, #1
   165cc:	bl	11194 <fputs_unlocked@plt>
   165d0:	movw	r1, #30914	; 0x78c2
   165d4:	mov	r0, #0
   165d8:	mov	r2, #5
   165dc:	movt	r1, #1
   165e0:	bl	11218 <dcgettext@plt>
   165e4:	movw	r2, #30934	; 0x78d6
   165e8:	mov	r1, r0
   165ec:	mov	r0, #1
   165f0:	movt	r2, #1
   165f4:	bl	113a4 <__printf_chk@plt>
   165f8:	movw	r1, #30956	; 0x78ec
   165fc:	mov	r0, #0
   16600:	mov	r2, #5
   16604:	movt	r1, #1
   16608:	bl	11218 <dcgettext@plt>
   1660c:	movw	r2, #29280	; 0x7260
   16610:	movw	r3, #29474	; 0x7322
   16614:	mov	r1, r0
   16618:	mov	r0, #1
   1661c:	movt	r2, #1
   16620:	movt	r3, #1
   16624:	bl	113a4 <__printf_chk@plt>
   16628:	movw	r1, #30976	; 0x7900
   1662c:	mov	r0, #0
   16630:	mov	r2, #5
   16634:	movt	r1, #1
   16638:	bl	11218 <dcgettext@plt>
   1663c:	movw	r2, #31015	; 0x7927
   16640:	mov	r1, r0
   16644:	mov	r0, #1
   16648:	movt	r2, #1
   1664c:	pop	{fp, lr}
   16650:	b	113a4 <__printf_chk@plt>
   16654:	push	{r4, r5, r6, sl, fp, lr}
   16658:	add	fp, sp, #16
   1665c:	mov	r4, r2
   16660:	mov	r5, r1
   16664:	mov	r6, r0
   16668:	bl	16e6c <dcngettext@plt+0x59c0>
   1666c:	cmp	r0, #0
   16670:	popne	{r4, r5, r6, sl, fp, pc}
   16674:	cmp	r6, #0
   16678:	beq	1668c <dcngettext@plt+0x51e0>
   1667c:	cmp	r5, #0
   16680:	cmpne	r4, #0
   16684:	bne	1668c <dcngettext@plt+0x51e0>
   16688:	pop	{r4, r5, r6, sl, fp, pc}
   1668c:	bl	16c08 <dcngettext@plt+0x575c>
   16690:	push	{r4, r5, r6, sl, fp, lr}
   16694:	add	fp, sp, #16
   16698:	mov	r4, r2
   1669c:	mov	r5, r1
   166a0:	mov	r6, r0
   166a4:	bl	16e6c <dcngettext@plt+0x59c0>
   166a8:	cmp	r0, #0
   166ac:	popne	{r4, r5, r6, sl, fp, pc}
   166b0:	cmp	r6, #0
   166b4:	beq	166c8 <dcngettext@plt+0x521c>
   166b8:	cmp	r5, #0
   166bc:	cmpne	r4, #0
   166c0:	bne	166c8 <dcngettext@plt+0x521c>
   166c4:	pop	{r4, r5, r6, sl, fp, pc}
   166c8:	bl	16c08 <dcngettext@plt+0x575c>
   166cc:	push	{fp, lr}
   166d0:	mov	fp, sp
   166d4:	bl	16ca0 <dcngettext@plt+0x57f4>
   166d8:	cmp	r0, #0
   166dc:	popne	{fp, pc}
   166e0:	bl	16c08 <dcngettext@plt+0x575c>
   166e4:	push	{fp, lr}
   166e8:	mov	fp, sp
   166ec:	bl	16ca0 <dcngettext@plt+0x57f4>
   166f0:	cmp	r0, #0
   166f4:	popne	{fp, pc}
   166f8:	bl	16c08 <dcngettext@plt+0x575c>
   166fc:	push	{fp, lr}
   16700:	mov	fp, sp
   16704:	bl	16ca0 <dcngettext@plt+0x57f4>
   16708:	cmp	r0, #0
   1670c:	popne	{fp, pc}
   16710:	bl	16c08 <dcngettext@plt+0x575c>
   16714:	push	{r4, r5, fp, lr}
   16718:	add	fp, sp, #8
   1671c:	mov	r4, r1
   16720:	mov	r5, r0
   16724:	bl	16cd0 <dcngettext@plt+0x5824>
   16728:	cmp	r0, #0
   1672c:	popne	{r4, r5, fp, pc}
   16730:	cmp	r5, #0
   16734:	beq	16744 <dcngettext@plt+0x5298>
   16738:	cmp	r4, #0
   1673c:	bne	16744 <dcngettext@plt+0x5298>
   16740:	pop	{r4, r5, fp, pc}
   16744:	bl	16c08 <dcngettext@plt+0x575c>
   16748:	push	{fp, lr}
   1674c:	mov	fp, sp
   16750:	cmp	r1, #0
   16754:	orreq	r1, r1, #1
   16758:	bl	16cd0 <dcngettext@plt+0x5824>
   1675c:	cmp	r0, #0
   16760:	popne	{fp, pc}
   16764:	bl	16c08 <dcngettext@plt+0x575c>
   16768:	push	{fp, lr}
   1676c:	mov	fp, sp
   16770:	clz	r3, r2
   16774:	lsr	ip, r3, #5
   16778:	clz	r3, r1
   1677c:	lsr	r3, r3, #5
   16780:	orrs	r3, r3, ip
   16784:	movwne	r1, #1
   16788:	movwne	r2, #1
   1678c:	bl	16e6c <dcngettext@plt+0x59c0>
   16790:	cmp	r0, #0
   16794:	popne	{fp, pc}
   16798:	bl	16c08 <dcngettext@plt+0x575c>
   1679c:	push	{fp, lr}
   167a0:	mov	fp, sp
   167a4:	mov	r2, r1
   167a8:	mov	r1, r0
   167ac:	mov	r0, #0
   167b0:	bl	16e6c <dcngettext@plt+0x59c0>
   167b4:	cmp	r0, #0
   167b8:	popne	{fp, pc}
   167bc:	bl	16c08 <dcngettext@plt+0x575c>
   167c0:	push	{fp, lr}
   167c4:	mov	fp, sp
   167c8:	mov	r2, r1
   167cc:	mov	r1, r0
   167d0:	clz	r0, r2
   167d4:	clz	r3, r1
   167d8:	lsr	r0, r0, #5
   167dc:	lsr	r3, r3, #5
   167e0:	orrs	r0, r3, r0
   167e4:	mov	r0, #0
   167e8:	movwne	r1, #1
   167ec:	movwne	r2, #1
   167f0:	bl	16e6c <dcngettext@plt+0x59c0>
   167f4:	cmp	r0, #0
   167f8:	popne	{fp, pc}
   167fc:	bl	16c08 <dcngettext@plt+0x575c>
   16800:	push	{r4, r5, r6, sl, fp, lr}
   16804:	add	fp, sp, #16
   16808:	ldr	r5, [r1]
   1680c:	mov	r4, r1
   16810:	mov	r6, r0
   16814:	cmp	r0, #0
   16818:	beq	16830 <dcngettext@plt+0x5384>
   1681c:	mov	r0, #1
   16820:	add	r0, r0, r5, lsr #1
   16824:	adds	r5, r5, r0
   16828:	bcc	16838 <dcngettext@plt+0x538c>
   1682c:	b	16874 <dcngettext@plt+0x53c8>
   16830:	cmp	r5, #0
   16834:	movweq	r5, #64	; 0x40
   16838:	mov	r0, r6
   1683c:	mov	r1, r5
   16840:	mov	r2, #1
   16844:	bl	16e6c <dcngettext@plt+0x59c0>
   16848:	cmp	r5, #0
   1684c:	mov	r1, r5
   16850:	movwne	r1, #1
   16854:	cmp	r0, #0
   16858:	bne	1686c <dcngettext@plt+0x53c0>
   1685c:	clz	r2, r6
   16860:	lsr	r2, r2, #5
   16864:	orrs	r1, r2, r1
   16868:	bne	16874 <dcngettext@plt+0x53c8>
   1686c:	str	r5, [r4]
   16870:	pop	{r4, r5, r6, sl, fp, pc}
   16874:	bl	16c08 <dcngettext@plt+0x575c>
   16878:	push	{r4, r5, r6, r7, fp, lr}
   1687c:	add	fp, sp, #16
   16880:	ldr	r5, [r1]
   16884:	mov	r6, r2
   16888:	mov	r4, r1
   1688c:	mov	r7, r0
   16890:	cmp	r0, #0
   16894:	beq	168ac <dcngettext@plt+0x5400>
   16898:	mov	r0, #1
   1689c:	add	r0, r0, r5, lsr #1
   168a0:	adds	r5, r5, r0
   168a4:	bcc	168c4 <dcngettext@plt+0x5418>
   168a8:	b	168f8 <dcngettext@plt+0x544c>
   168ac:	cmp	r5, #0
   168b0:	bne	168c4 <dcngettext@plt+0x5418>
   168b4:	mov	r0, #64	; 0x40
   168b8:	cmp	r6, #64	; 0x40
   168bc:	udiv	r5, r0, r6
   168c0:	addhi	r5, r5, #1
   168c4:	mov	r0, r7
   168c8:	mov	r1, r5
   168cc:	mov	r2, r6
   168d0:	bl	16e6c <dcngettext@plt+0x59c0>
   168d4:	cmp	r0, #0
   168d8:	bne	168f0 <dcngettext@plt+0x5444>
   168dc:	cmp	r7, #0
   168e0:	beq	168f8 <dcngettext@plt+0x544c>
   168e4:	cmp	r6, #0
   168e8:	cmpne	r5, #0
   168ec:	bne	168f8 <dcngettext@plt+0x544c>
   168f0:	str	r5, [r4]
   168f4:	pop	{r4, r5, r6, r7, fp, pc}
   168f8:	bl	16c08 <dcngettext@plt+0x575c>
   168fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16900:	add	fp, sp, #24
   16904:	mov	r8, r1
   16908:	ldr	r1, [r1]
   1690c:	mov	r5, r0
   16910:	add	r0, r1, r1, asr #1
   16914:	cmp	r0, r1
   16918:	mvnvs	r0, #-2147483648	; 0x80000000
   1691c:	cmp	r0, r3
   16920:	mov	r7, r0
   16924:	movgt	r7, r3
   16928:	cmn	r3, #1
   1692c:	movle	r7, r0
   16930:	ldr	r0, [fp, #8]
   16934:	cmn	r0, #1
   16938:	ble	16960 <dcngettext@plt+0x54b4>
   1693c:	cmp	r0, #0
   16940:	beq	169b4 <dcngettext@plt+0x5508>
   16944:	cmn	r7, #1
   16948:	ble	16988 <dcngettext@plt+0x54dc>
   1694c:	mvn	r4, #-2147483648	; 0x80000000
   16950:	udiv	r6, r4, r0
   16954:	cmp	r6, r7
   16958:	bge	169b4 <dcngettext@plt+0x5508>
   1695c:	b	169c4 <dcngettext@plt+0x5518>
   16960:	cmn	r7, #1
   16964:	ble	169a4 <dcngettext@plt+0x54f8>
   16968:	cmn	r0, #1
   1696c:	beq	169b4 <dcngettext@plt+0x5508>
   16970:	mov	r6, #-2147483648	; 0x80000000
   16974:	mvn	r4, #-2147483648	; 0x80000000
   16978:	sdiv	r6, r6, r0
   1697c:	cmp	r6, r7
   16980:	bge	169b4 <dcngettext@plt+0x5508>
   16984:	b	169c4 <dcngettext@plt+0x5518>
   16988:	beq	169b4 <dcngettext@plt+0x5508>
   1698c:	mov	r6, #-2147483648	; 0x80000000
   16990:	mvn	r4, #-2147483648	; 0x80000000
   16994:	sdiv	r6, r6, r7
   16998:	cmp	r6, r0
   1699c:	bge	169b4 <dcngettext@plt+0x5508>
   169a0:	b	169c4 <dcngettext@plt+0x5518>
   169a4:	mvn	r4, #-2147483648	; 0x80000000
   169a8:	sdiv	r6, r4, r0
   169ac:	cmp	r7, r6
   169b0:	blt	169c4 <dcngettext@plt+0x5518>
   169b4:	mul	r6, r7, r0
   169b8:	mov	r4, #64	; 0x40
   169bc:	cmp	r6, #63	; 0x3f
   169c0:	bgt	169cc <dcngettext@plt+0x5520>
   169c4:	sdiv	r7, r4, r0
   169c8:	mul	r6, r7, r0
   169cc:	cmp	r5, #0
   169d0:	moveq	r4, #0
   169d4:	streq	r4, [r8]
   169d8:	sub	r4, r7, r1
   169dc:	cmp	r4, r2
   169e0:	bge	16a8c <dcngettext@plt+0x55e0>
   169e4:	add	r7, r1, r2
   169e8:	mov	r6, #0
   169ec:	mov	r2, #0
   169f0:	cmp	r7, r3
   169f4:	movwgt	r6, #1
   169f8:	cmn	r3, #1
   169fc:	movwgt	r2, #1
   16a00:	cmp	r7, r1
   16a04:	bvs	16ac0 <dcngettext@plt+0x5614>
   16a08:	ands	r1, r2, r6
   16a0c:	bne	16ac0 <dcngettext@plt+0x5614>
   16a10:	cmn	r0, #1
   16a14:	ble	16a3c <dcngettext@plt+0x5590>
   16a18:	cmp	r0, #0
   16a1c:	beq	16a88 <dcngettext@plt+0x55dc>
   16a20:	cmn	r7, #1
   16a24:	ble	16a60 <dcngettext@plt+0x55b4>
   16a28:	mvn	r1, #-2147483648	; 0x80000000
   16a2c:	udiv	r1, r1, r0
   16a30:	cmp	r1, r7
   16a34:	bge	16a88 <dcngettext@plt+0x55dc>
   16a38:	b	16ac0 <dcngettext@plt+0x5614>
   16a3c:	cmn	r7, #1
   16a40:	ble	16a78 <dcngettext@plt+0x55cc>
   16a44:	cmn	r0, #1
   16a48:	beq	16a88 <dcngettext@plt+0x55dc>
   16a4c:	mov	r1, #-2147483648	; 0x80000000
   16a50:	sdiv	r1, r1, r0
   16a54:	cmp	r1, r7
   16a58:	bge	16a88 <dcngettext@plt+0x55dc>
   16a5c:	b	16ac0 <dcngettext@plt+0x5614>
   16a60:	beq	16a88 <dcngettext@plt+0x55dc>
   16a64:	mov	r1, #-2147483648	; 0x80000000
   16a68:	sdiv	r1, r1, r7
   16a6c:	cmp	r1, r0
   16a70:	bge	16a88 <dcngettext@plt+0x55dc>
   16a74:	b	16ac0 <dcngettext@plt+0x5614>
   16a78:	mvn	r1, #-2147483648	; 0x80000000
   16a7c:	sdiv	r1, r1, r0
   16a80:	cmp	r7, r1
   16a84:	blt	16ac0 <dcngettext@plt+0x5614>
   16a88:	mul	r6, r7, r0
   16a8c:	mov	r0, r5
   16a90:	mov	r1, r6
   16a94:	bl	16cd0 <dcngettext@plt+0x5824>
   16a98:	cmp	r6, #0
   16a9c:	movwne	r6, #1
   16aa0:	cmp	r0, #0
   16aa4:	bne	16ab8 <dcngettext@plt+0x560c>
   16aa8:	clz	r1, r5
   16aac:	lsr	r1, r1, #5
   16ab0:	orrs	r1, r1, r6
   16ab4:	bne	16ac0 <dcngettext@plt+0x5614>
   16ab8:	str	r7, [r8]
   16abc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ac0:	bl	16c08 <dcngettext@plt+0x575c>
   16ac4:	push	{fp, lr}
   16ac8:	mov	fp, sp
   16acc:	mov	r1, #1
   16ad0:	bl	16c4c <dcngettext@plt+0x57a0>
   16ad4:	cmp	r0, #0
   16ad8:	popne	{fp, pc}
   16adc:	bl	16c08 <dcngettext@plt+0x575c>
   16ae0:	push	{fp, lr}
   16ae4:	mov	fp, sp
   16ae8:	bl	16c4c <dcngettext@plt+0x57a0>
   16aec:	cmp	r0, #0
   16af0:	popne	{fp, pc}
   16af4:	bl	16c08 <dcngettext@plt+0x575c>
   16af8:	push	{fp, lr}
   16afc:	mov	fp, sp
   16b00:	mov	r1, #1
   16b04:	bl	16c4c <dcngettext@plt+0x57a0>
   16b08:	cmp	r0, #0
   16b0c:	popne	{fp, pc}
   16b10:	bl	16c08 <dcngettext@plt+0x575c>
   16b14:	push	{fp, lr}
   16b18:	mov	fp, sp
   16b1c:	bl	16c4c <dcngettext@plt+0x57a0>
   16b20:	cmp	r0, #0
   16b24:	popne	{fp, pc}
   16b28:	bl	16c08 <dcngettext@plt+0x575c>
   16b2c:	push	{r4, r5, fp, lr}
   16b30:	add	fp, sp, #8
   16b34:	mov	r5, r0
   16b38:	mov	r0, r1
   16b3c:	mov	r4, r1
   16b40:	bl	16ca0 <dcngettext@plt+0x57f4>
   16b44:	cmp	r0, #0
   16b48:	beq	16b5c <dcngettext@plt+0x56b0>
   16b4c:	mov	r1, r5
   16b50:	mov	r2, r4
   16b54:	pop	{r4, r5, fp, lr}
   16b58:	b	111f4 <memcpy@plt>
   16b5c:	bl	16c08 <dcngettext@plt+0x575c>
   16b60:	push	{r4, r5, fp, lr}
   16b64:	add	fp, sp, #8
   16b68:	mov	r5, r0
   16b6c:	mov	r0, r1
   16b70:	mov	r4, r1
   16b74:	bl	16ca0 <dcngettext@plt+0x57f4>
   16b78:	cmp	r0, #0
   16b7c:	beq	16b90 <dcngettext@plt+0x56e4>
   16b80:	mov	r1, r5
   16b84:	mov	r2, r4
   16b88:	pop	{r4, r5, fp, lr}
   16b8c:	b	111f4 <memcpy@plt>
   16b90:	bl	16c08 <dcngettext@plt+0x575c>
   16b94:	push	{r4, r5, fp, lr}
   16b98:	add	fp, sp, #8
   16b9c:	mov	r5, r0
   16ba0:	add	r0, r1, #1
   16ba4:	mov	r4, r1
   16ba8:	bl	16ca0 <dcngettext@plt+0x57f4>
   16bac:	cmp	r0, #0
   16bb0:	beq	16bcc <dcngettext@plt+0x5720>
   16bb4:	mov	r1, #0
   16bb8:	mov	r2, r4
   16bbc:	strb	r1, [r0, r4]
   16bc0:	mov	r1, r5
   16bc4:	pop	{r4, r5, fp, lr}
   16bc8:	b	111f4 <memcpy@plt>
   16bcc:	bl	16c08 <dcngettext@plt+0x575c>
   16bd0:	push	{r4, r5, fp, lr}
   16bd4:	add	fp, sp, #8
   16bd8:	mov	r4, r0
   16bdc:	bl	1135c <strlen@plt>
   16be0:	add	r5, r0, #1
   16be4:	mov	r0, r5
   16be8:	bl	16ca0 <dcngettext@plt+0x57f4>
   16bec:	cmp	r0, #0
   16bf0:	beq	16c04 <dcngettext@plt+0x5758>
   16bf4:	mov	r1, r4
   16bf8:	mov	r2, r5
   16bfc:	pop	{r4, r5, fp, lr}
   16c00:	b	111f4 <memcpy@plt>
   16c04:	bl	16c08 <dcngettext@plt+0x575c>
   16c08:	push	{fp, lr}
   16c0c:	mov	fp, sp
   16c10:	movw	r0, #33068	; 0x812c
   16c14:	movw	r1, #31091	; 0x7973
   16c18:	mov	r2, #5
   16c1c:	movt	r0, #2
   16c20:	movt	r1, #1
   16c24:	ldr	r4, [r0]
   16c28:	mov	r0, #0
   16c2c:	bl	11218 <dcgettext@plt>
   16c30:	movw	r2, #29953	; 0x7501
   16c34:	mov	r3, r0
   16c38:	mov	r0, r4
   16c3c:	mov	r1, #0
   16c40:	movt	r2, #1
   16c44:	bl	112a8 <error@plt>
   16c48:	bl	11494 <abort@plt>
   16c4c:	clz	r2, r1
   16c50:	clz	r3, r0
   16c54:	lsr	r2, r2, #5
   16c58:	lsr	r3, r3, #5
   16c5c:	orrs	r2, r3, r2
   16c60:	movwne	r1, #1
   16c64:	movwne	r0, #1
   16c68:	cmp	r1, #0
   16c6c:	beq	16c9c <dcngettext@plt+0x57f0>
   16c70:	mvn	r2, #-2147483648	; 0x80000000
   16c74:	udiv	r2, r2, r1
   16c78:	cmp	r2, r0
   16c7c:	bcs	16c9c <dcngettext@plt+0x57f0>
   16c80:	push	{fp, lr}
   16c84:	mov	fp, sp
   16c88:	bl	11374 <__errno_location@plt>
   16c8c:	mov	r1, #12
   16c90:	str	r1, [r0]
   16c94:	mov	r0, #0
   16c98:	pop	{fp, pc}
   16c9c:	b	11188 <calloc@plt>
   16ca0:	cmp	r0, #0
   16ca4:	movweq	r0, #1
   16ca8:	cmn	r0, #1
   16cac:	ble	16cb4 <dcngettext@plt+0x5808>
   16cb0:	b	112c0 <malloc@plt>
   16cb4:	push	{fp, lr}
   16cb8:	mov	fp, sp
   16cbc:	bl	11374 <__errno_location@plt>
   16cc0:	mov	r1, #12
   16cc4:	str	r1, [r0]
   16cc8:	mov	r0, #0
   16ccc:	pop	{fp, pc}
   16cd0:	push	{fp, lr}
   16cd4:	mov	fp, sp
   16cd8:	cmp	r0, #0
   16cdc:	beq	16cf8 <dcngettext@plt+0x584c>
   16ce0:	cmp	r1, #0
   16ce4:	beq	16d04 <dcngettext@plt+0x5858>
   16ce8:	cmn	r1, #1
   16cec:	ble	16d10 <dcngettext@plt+0x5864>
   16cf0:	pop	{fp, lr}
   16cf4:	b	11230 <realloc@plt>
   16cf8:	mov	r0, r1
   16cfc:	pop	{fp, lr}
   16d00:	b	16ca0 <dcngettext@plt+0x57f4>
   16d04:	bl	16da8 <dcngettext@plt+0x58fc>
   16d08:	mov	r0, #0
   16d0c:	pop	{fp, pc}
   16d10:	bl	11374 <__errno_location@plt>
   16d14:	mov	r1, #12
   16d18:	str	r1, [r0]
   16d1c:	mov	r0, #0
   16d20:	pop	{fp, pc}
   16d24:	push	{r4, r5, r6, sl, fp, lr}
   16d28:	add	fp, sp, #16
   16d2c:	mov	r4, r0
   16d30:	bl	11290 <__fpending@plt>
   16d34:	ldr	r6, [r4]
   16d38:	mov	r5, r0
   16d3c:	mov	r0, r4
   16d40:	bl	11f20 <dcngettext@plt+0xa74>
   16d44:	tst	r6, #32
   16d48:	bne	16d80 <dcngettext@plt+0x58d4>
   16d4c:	cmp	r0, #0
   16d50:	mov	r4, r0
   16d54:	mvnne	r4, #0
   16d58:	cmp	r5, #0
   16d5c:	bne	16d8c <dcngettext@plt+0x58e0>
   16d60:	cmp	r0, #0
   16d64:	beq	16d8c <dcngettext@plt+0x58e0>
   16d68:	bl	11374 <__errno_location@plt>
   16d6c:	ldr	r0, [r0]
   16d70:	subs	r4, r0, #9
   16d74:	mvnne	r4, #0
   16d78:	mov	r0, r4
   16d7c:	pop	{r4, r5, r6, sl, fp, pc}
   16d80:	mvn	r4, #0
   16d84:	cmp	r0, #0
   16d88:	beq	16d94 <dcngettext@plt+0x58e8>
   16d8c:	mov	r0, r4
   16d90:	pop	{r4, r5, r6, sl, fp, pc}
   16d94:	bl	11374 <__errno_location@plt>
   16d98:	mov	r1, #0
   16d9c:	str	r1, [r0]
   16da0:	mov	r0, r4
   16da4:	pop	{r4, r5, r6, sl, fp, pc}
   16da8:	push	{r4, r5, r6, sl, fp, lr}
   16dac:	add	fp, sp, #16
   16db0:	mov	r4, r0
   16db4:	bl	11374 <__errno_location@plt>
   16db8:	ldr	r6, [r0]
   16dbc:	mov	r5, r0
   16dc0:	mov	r0, r4
   16dc4:	bl	111dc <free@plt>
   16dc8:	str	r6, [r5]
   16dcc:	pop	{r4, r5, r6, sl, fp, pc}
   16dd0:	push	{fp, lr}
   16dd4:	mov	fp, sp
   16dd8:	mov	r0, #14
   16ddc:	bl	11428 <nl_langinfo@plt>
   16de0:	movw	r1, #29128	; 0x71c8
   16de4:	cmp	r0, #0
   16de8:	movt	r1, #1
   16dec:	movne	r1, r0
   16df0:	movw	r0, #31108	; 0x7984
   16df4:	ldrb	r2, [r1]
   16df8:	movt	r0, #1
   16dfc:	cmp	r2, #0
   16e00:	movne	r0, r1
   16e04:	pop	{fp, pc}
   16e08:	push	{r4, r5, r6, r7, fp, lr}
   16e0c:	add	fp, sp, #16
   16e10:	sub	sp, sp, #8
   16e14:	cmp	r0, #0
   16e18:	add	r5, sp, #4
   16e1c:	mov	r7, r2
   16e20:	mov	r4, r1
   16e24:	movne	r5, r0
   16e28:	mov	r0, r5
   16e2c:	bl	1129c <mbrtowc@plt>
   16e30:	mov	r6, r0
   16e34:	cmp	r7, #0
   16e38:	beq	16e60 <dcngettext@plt+0x59b4>
   16e3c:	cmn	r6, #2
   16e40:	bcc	16e60 <dcngettext@plt+0x59b4>
   16e44:	mov	r0, #0
   16e48:	bl	16ea8 <dcngettext@plt+0x59fc>
   16e4c:	cmp	r0, #0
   16e50:	bne	16e60 <dcngettext@plt+0x59b4>
   16e54:	ldrb	r0, [r4]
   16e58:	mov	r6, #1
   16e5c:	str	r0, [r5]
   16e60:	mov	r0, r6
   16e64:	sub	sp, fp, #16
   16e68:	pop	{r4, r5, r6, r7, fp, pc}
   16e6c:	cmp	r2, #0
   16e70:	beq	16ea0 <dcngettext@plt+0x59f4>
   16e74:	mvn	r3, #0
   16e78:	udiv	r3, r3, r2
   16e7c:	cmp	r3, r1
   16e80:	bcs	16ea0 <dcngettext@plt+0x59f4>
   16e84:	push	{fp, lr}
   16e88:	mov	fp, sp
   16e8c:	bl	11374 <__errno_location@plt>
   16e90:	mov	r1, #12
   16e94:	str	r1, [r0]
   16e98:	mov	r0, #0
   16e9c:	pop	{fp, pc}
   16ea0:	mul	r1, r2, r1
   16ea4:	b	16cd0 <dcngettext@plt+0x5824>
   16ea8:	push	{r4, sl, fp, lr}
   16eac:	add	fp, sp, #8
   16eb0:	sub	sp, sp, #264	; 0x108
   16eb4:	add	r1, sp, #7
   16eb8:	movw	r2, #257	; 0x101
   16ebc:	bl	16f14 <dcngettext@plt+0x5a68>
   16ec0:	mov	r4, #0
   16ec4:	cmp	r0, #0
   16ec8:	bne	16f08 <dcngettext@plt+0x5a5c>
   16ecc:	movw	r1, #29935	; 0x74ef
   16ed0:	add	r0, sp, #7
   16ed4:	mov	r2, #2
   16ed8:	movt	r1, #1
   16edc:	bl	11350 <bcmp@plt>
   16ee0:	cmp	r0, #0
   16ee4:	beq	16f08 <dcngettext@plt+0x5a5c>
   16ee8:	movw	r1, #31114	; 0x798a
   16eec:	add	r0, sp, #7
   16ef0:	mov	r2, #6
   16ef4:	movt	r1, #1
   16ef8:	bl	11350 <bcmp@plt>
   16efc:	cmp	r0, #0
   16f00:	mov	r4, r0
   16f04:	movwne	r4, #1
   16f08:	mov	r0, r4
   16f0c:	sub	sp, fp, #8
   16f10:	pop	{r4, sl, fp, pc}
   16f14:	push	{r4, r5, r6, r7, fp, lr}
   16f18:	add	fp, sp, #16
   16f1c:	mov	r4, r1
   16f20:	mov	r1, #0
   16f24:	mov	r6, r2
   16f28:	bl	11410 <setlocale@plt>
   16f2c:	cmp	r0, #0
   16f30:	beq	16f60 <dcngettext@plt+0x5ab4>
   16f34:	mov	r7, r0
   16f38:	bl	1135c <strlen@plt>
   16f3c:	cmp	r0, r6
   16f40:	bcs	16f7c <dcngettext@plt+0x5ad0>
   16f44:	add	r2, r0, #1
   16f48:	mov	r0, r4
   16f4c:	mov	r1, r7
   16f50:	bl	111f4 <memcpy@plt>
   16f54:	mov	r5, #0
   16f58:	mov	r0, r5
   16f5c:	pop	{r4, r5, r6, r7, fp, pc}
   16f60:	mov	r5, #22
   16f64:	cmp	r6, #0
   16f68:	beq	16fa4 <dcngettext@plt+0x5af8>
   16f6c:	mov	r0, #0
   16f70:	strb	r0, [r4]
   16f74:	mov	r0, r5
   16f78:	pop	{r4, r5, r6, r7, fp, pc}
   16f7c:	mov	r5, #34	; 0x22
   16f80:	cmp	r6, #0
   16f84:	beq	16fa4 <dcngettext@plt+0x5af8>
   16f88:	sub	r6, r6, #1
   16f8c:	mov	r0, r4
   16f90:	mov	r1, r7
   16f94:	mov	r2, r6
   16f98:	bl	111f4 <memcpy@plt>
   16f9c:	mov	r0, #0
   16fa0:	strb	r0, [r4, r6]
   16fa4:	mov	r0, r5
   16fa8:	pop	{r4, r5, r6, r7, fp, pc}
   16fac:	mov	r1, #0
   16fb0:	b	11410 <setlocale@plt>
   16fb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16fb8:	mov	r7, r0
   16fbc:	ldr	r6, [pc, #72]	; 1700c <dcngettext@plt+0x5b60>
   16fc0:	ldr	r5, [pc, #72]	; 17010 <dcngettext@plt+0x5b64>
   16fc4:	add	r6, pc, r6
   16fc8:	add	r5, pc, r5
   16fcc:	sub	r6, r6, r5
   16fd0:	mov	r8, r1
   16fd4:	mov	r9, r2
   16fd8:	bl	11168 <calloc@plt-0x20>
   16fdc:	asrs	r6, r6, #2
   16fe0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16fe4:	mov	r4, #0
   16fe8:	add	r4, r4, #1
   16fec:	ldr	r3, [r5], #4
   16ff0:	mov	r2, r9
   16ff4:	mov	r1, r8
   16ff8:	mov	r0, r7
   16ffc:	blx	r3
   17000:	cmp	r6, r4
   17004:	bne	16fe8 <dcngettext@plt+0x5b3c>
   17008:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1700c:	andeq	r0, r1, r0, asr #30
   17010:	andeq	r0, r1, r8, lsr pc
   17014:	bx	lr
   17018:	ldr	r3, [pc, #12]	; 1702c <dcngettext@plt+0x5b80>
   1701c:	mov	r1, #0
   17020:	add	r3, pc, r3
   17024:	ldr	r2, [r3]
   17028:	b	11380 <__cxa_atexit@plt>
   1702c:	strdeq	r1, [r1], -ip

Disassembly of section .fini:

00017030 <.fini>:
   17030:	push	{r3, lr}
   17034:	pop	{r3, pc}
