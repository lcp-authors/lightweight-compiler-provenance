
../repos/inetutils/ifconfig/ifconfig:     file format elf32-littlearm


Disassembly of section .init:

00011290 <.init>:
   11290:	push	{r3, lr}
   11294:	bl	11670 <ftello64@plt+0x48>
   11298:	pop	{r3, pc}

Disassembly of section .plt:

0001129c <calloc@plt-0x14>:
   1129c:	push	{lr}		; (str lr, [sp, #-4]!)
   112a0:	ldr	lr, [pc, #4]	; 112ac <calloc@plt-0x4>
   112a4:	add	lr, pc, lr
   112a8:	ldr	pc, [lr, #8]!
   112ac:	andeq	r0, r2, r4, asr sp

000112b0 <calloc@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #32, 20	; 0x20000
   112b8:	ldr	pc, [ip, #3412]!	; 0xd54

000112bc <fputs_unlocked@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #32, 20	; 0x20000
   112c4:	ldr	pc, [ip, #3404]!	; 0xd4c

000112c8 <strstr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #32, 20	; 0x20000
   112d0:	ldr	pc, [ip, #3396]!	; 0xd44

000112d4 <ether_hostton@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #32, 20	; 0x20000
   112dc:	ldr	pc, [ip, #3388]!	; 0xd3c

000112e0 <__getdelim@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #32, 20	; 0x20000
   112e8:	ldr	pc, [ip, #3380]!	; 0xd34

000112ec <inet_aton@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #32, 20	; 0x20000
   112f4:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f8 <strcmp@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #32, 20	; 0x20000
   11300:	ldr	pc, [ip, #3364]!	; 0xd24

00011304 <strtol@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #32, 20	; 0x20000
   1130c:	ldr	pc, [ip, #3356]!	; 0xd1c

00011310 <printf@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #32, 20	; 0x20000
   11318:	ldr	pc, [ip, #3348]!	; 0xd14

0001131c <memmove@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #32, 20	; 0x20000
   11324:	ldr	pc, [ip, #3340]!	; 0xd0c

00011328 <strchrnul@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #32, 20	; 0x20000
   11330:	ldr	pc, [ip, #3332]!	; 0xd04

00011334 <free@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #32, 20	; 0x20000
   1133c:	ldr	pc, [ip, #3324]!	; 0xcfc

00011340 <gai_strerror@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #32, 20	; 0x20000
   11348:	ldr	pc, [ip, #3316]!	; 0xcf4

0001134c <ferror@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #32, 20	; 0x20000
   11354:	ldr	pc, [ip, #3308]!	; 0xcec

00011358 <strndup@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #32, 20	; 0x20000
   11360:	ldr	pc, [ip, #3300]!	; 0xce4

00011364 <memcpy@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #32, 20	; 0x20000
   1136c:	ldr	pc, [ip, #3292]!	; 0xcdc

00011370 <fwrite_unlocked@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #32, 20	; 0x20000
   11378:	ldr	pc, [ip, #3284]!	; 0xcd4

0001137c <inet_ntoa@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #32, 20	; 0x20000
   11384:	ldr	pc, [ip, #3276]!	; 0xccc

00011388 <sleep@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #32, 20	; 0x20000
   11390:	ldr	pc, [ip, #3268]!	; 0xcc4

00011394 <strdup@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #32, 20	; 0x20000
   1139c:	ldr	pc, [ip, #3260]!	; 0xcbc

000113a0 <realloc@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #32, 20	; 0x20000
   113a8:	ldr	pc, [ip, #3252]!	; 0xcb4

000113ac <strcasecmp@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #32, 20	; 0x20000
   113b4:	ldr	pc, [ip, #3244]!	; 0xcac

000113b8 <funlockfile@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #32, 20	; 0x20000
   113c0:	ldr	pc, [ip, #3236]!	; 0xca4

000113c4 <__fxstat64@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #32, 20	; 0x20000
   113cc:	ldr	pc, [ip, #3228]!	; 0xc9c

000113d0 <fwrite@plt>:
   113d0:	add	ip, pc, #0, 12
   113d4:	add	ip, ip, #32, 20	; 0x20000
   113d8:	ldr	pc, [ip, #3220]!	; 0xc94

000113dc <ioctl@plt>:
   113dc:	add	ip, pc, #0, 12
   113e0:	add	ip, ip, #32, 20	; 0x20000
   113e4:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e8 <strcpy@plt>:
   113e8:	add	ip, pc, #0, 12
   113ec:	add	ip, ip, #32, 20	; 0x20000
   113f0:	ldr	pc, [ip, #3204]!	; 0xc84

000113f4 <fread@plt>:
   113f4:	add	ip, pc, #0, 12
   113f8:	add	ip, ip, #32, 20	; 0x20000
   113fc:	ldr	pc, [ip, #3196]!	; 0xc7c

00011400 <error@plt>:
   11400:	add	ip, pc, #0, 12
   11404:	add	ip, ip, #32, 20	; 0x20000
   11408:	ldr	pc, [ip, #3188]!	; 0xc74

0001140c <getenv@plt>:
   1140c:	add	ip, pc, #0, 12
   11410:	add	ip, ip, #32, 20	; 0x20000
   11414:	ldr	pc, [ip, #3180]!	; 0xc6c

00011418 <puts@plt>:
   11418:	add	ip, pc, #0, 12
   1141c:	add	ip, ip, #32, 20	; 0x20000
   11420:	ldr	pc, [ip, #3172]!	; 0xc64

00011424 <malloc@plt>:
   11424:	add	ip, pc, #0, 12
   11428:	add	ip, ip, #32, 20	; 0x20000
   1142c:	ldr	pc, [ip, #3164]!	; 0xc5c

00011430 <__libc_start_main@plt>:
   11430:	add	ip, pc, #0, 12
   11434:	add	ip, ip, #32, 20	; 0x20000
   11438:	ldr	pc, [ip, #3156]!	; 0xc54

0001143c <strerror@plt>:
   1143c:	add	ip, pc, #0, 12
   11440:	add	ip, ip, #32, 20	; 0x20000
   11444:	ldr	pc, [ip, #3148]!	; 0xc4c

00011448 <__ctype_tolower_loc@plt>:
   11448:	add	ip, pc, #0, 12
   1144c:	add	ip, ip, #32, 20	; 0x20000
   11450:	ldr	pc, [ip, #3140]!	; 0xc44

00011454 <ether_aton@plt>:
   11454:	add	ip, pc, #0, 12
   11458:	add	ip, ip, #32, 20	; 0x20000
   1145c:	ldr	pc, [ip, #3132]!	; 0xc3c

00011460 <__gmon_start__@plt>:
   11460:	add	ip, pc, #0, 12
   11464:	add	ip, ip, #32, 20	; 0x20000
   11468:	ldr	pc, [ip, #3124]!	; 0xc34

0001146c <mempcpy@plt>:
   1146c:	add	ip, pc, #0, 12
   11470:	add	ip, ip, #32, 20	; 0x20000
   11474:	ldr	pc, [ip, #3116]!	; 0xc2c

00011478 <__ctype_b_loc@plt>:
   11478:	add	ip, pc, #0, 12
   1147c:	add	ip, ip, #32, 20	; 0x20000
   11480:	ldr	pc, [ip, #3108]!	; 0xc24

00011484 <exit@plt>:
   11484:	add	ip, pc, #0, 12
   11488:	add	ip, ip, #32, 20	; 0x20000
   1148c:	ldr	pc, [ip, #3100]!	; 0xc1c

00011490 <strtoul@plt>:
   11490:	add	ip, pc, #0, 12
   11494:	add	ip, ip, #32, 20	; 0x20000
   11498:	ldr	pc, [ip, #3092]!	; 0xc14

0001149c <strlen@plt>:
   1149c:	add	ip, pc, #0, 12
   114a0:	add	ip, ip, #32, 20	; 0x20000
   114a4:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a8 <strchr@plt>:
   114a8:	add	ip, pc, #0, 12
   114ac:	add	ip, ip, #32, 20	; 0x20000
   114b0:	ldr	pc, [ip, #3076]!	; 0xc04

000114b4 <fprintf@plt>:
   114b4:	add	ip, pc, #0, 12
   114b8:	add	ip, ip, #32, 20	; 0x20000
   114bc:	ldr	pc, [ip, #3068]!	; 0xbfc

000114c0 <__errno_location@plt>:
   114c0:	add	ip, pc, #0, 12
   114c4:	add	ip, ip, #32, 20	; 0x20000
   114c8:	ldr	pc, [ip, #3060]!	; 0xbf4

000114cc <strncasecmp@plt>:
   114cc:	add	ip, pc, #0, 12
   114d0:	add	ip, ip, #32, 20	; 0x20000
   114d4:	ldr	pc, [ip, #3052]!	; 0xbec

000114d8 <strerror_r@plt>:
   114d8:	add	ip, pc, #0, 12
   114dc:	add	ip, ip, #32, 20	; 0x20000
   114e0:	ldr	pc, [ip, #3044]!	; 0xbe4

000114e4 <setvbuf@plt>:
   114e4:	add	ip, pc, #0, 12
   114e8:	add	ip, ip, #32, 20	; 0x20000
   114ec:	ldr	pc, [ip, #3036]!	; 0xbdc

000114f0 <memset@plt>:
   114f0:	add	ip, pc, #0, 12
   114f4:	add	ip, ip, #32, 20	; 0x20000
   114f8:	ldr	pc, [ip, #3028]!	; 0xbd4

000114fc <strncpy@plt>:
   114fc:	add	ip, pc, #0, 12
   11500:	add	ip, ip, #32, 20	; 0x20000
   11504:	ldr	pc, [ip, #3020]!	; 0xbcc

00011508 <fileno@plt>:
   11508:	add	ip, pc, #0, 12
   1150c:	add	ip, ip, #32, 20	; 0x20000
   11510:	ldr	pc, [ip, #3012]!	; 0xbc4

00011514 <memchr@plt>:
   11514:	add	ip, pc, #0, 12
   11518:	add	ip, ip, #32, 20	; 0x20000
   1151c:	ldr	pc, [ip, #3004]!	; 0xbbc

00011520 <fclose@plt>:
   11520:	add	ip, pc, #0, 12
   11524:	add	ip, ip, #32, 20	; 0x20000
   11528:	ldr	pc, [ip, #2996]!	; 0xbb4

0001152c <ether_ntoa@plt>:
   1152c:	add	ip, pc, #0, 12
   11530:	add	ip, ip, #32, 20	; 0x20000
   11534:	ldr	pc, [ip, #2988]!	; 0xbac

00011538 <__overflow@plt>:
   11538:	add	ip, pc, #0, 12
   1153c:	add	ip, ip, #32, 20	; 0x20000
   11540:	ldr	pc, [ip, #2980]!	; 0xba4

00011544 <getnameinfo@plt>:
   11544:	add	ip, pc, #0, 12
   11548:	add	ip, ip, #32, 20	; 0x20000
   1154c:	ldr	pc, [ip, #2972]!	; 0xb9c

00011550 <strrchr@plt>:
   11550:	add	ip, pc, #0, 12
   11554:	add	ip, ip, #32, 20	; 0x20000
   11558:	ldr	pc, [ip, #2964]!	; 0xb94

0001155c <vfprintf@plt>:
   1155c:	add	ip, pc, #0, 12
   11560:	add	ip, ip, #32, 20	; 0x20000
   11564:	ldr	pc, [ip, #2956]!	; 0xb8c

00011568 <fputc@plt>:
   11568:	add	ip, pc, #0, 12
   1156c:	add	ip, ip, #32, 20	; 0x20000
   11570:	ldr	pc, [ip, #2948]!	; 0xb84

00011574 <sscanf@plt>:
   11574:	add	ip, pc, #0, 12
   11578:	add	ip, ip, #32, 20	; 0x20000
   1157c:	ldr	pc, [ip, #2940]!	; 0xb7c

00011580 <putc@plt>:
   11580:	add	ip, pc, #0, 12
   11584:	add	ip, ip, #32, 20	; 0x20000
   11588:	ldr	pc, [ip, #2932]!	; 0xb74

0001158c <flockfile@plt>:
   1158c:	add	ip, pc, #0, 12
   11590:	add	ip, ip, #32, 20	; 0x20000
   11594:	ldr	pc, [ip, #2924]!	; 0xb6c

00011598 <vsnprintf@plt>:
   11598:	add	ip, pc, #0, 12
   1159c:	add	ip, ip, #32, 20	; 0x20000
   115a0:	ldr	pc, [ip, #2916]!	; 0xb64

000115a4 <fopen64@plt>:
   115a4:	add	ip, pc, #0, 12
   115a8:	add	ip, ip, #32, 20	; 0x20000
   115ac:	ldr	pc, [ip, #2908]!	; 0xb5c

000115b0 <qsort@plt>:
   115b0:	add	ip, pc, #0, 12
   115b4:	add	ip, ip, #32, 20	; 0x20000
   115b8:	ldr	pc, [ip, #2900]!	; 0xb54

000115bc <explicit_bzero@plt>:
   115bc:	add	ip, pc, #0, 12
   115c0:	add	ip, ip, #32, 20	; 0x20000
   115c4:	ldr	pc, [ip, #2892]!	; 0xb4c

000115c8 <freeaddrinfo@plt>:
   115c8:	add	ip, pc, #0, 12
   115cc:	add	ip, ip, #32, 20	; 0x20000
   115d0:	ldr	pc, [ip, #2884]!	; 0xb44

000115d4 <getaddrinfo@plt>:
   115d4:	add	ip, pc, #0, 12
   115d8:	add	ip, ip, #32, 20	; 0x20000
   115dc:	ldr	pc, [ip, #2876]!	; 0xb3c

000115e0 <socket@plt>:
   115e0:	add	ip, pc, #0, 12
   115e4:	add	ip, ip, #32, 20	; 0x20000
   115e8:	ldr	pc, [ip, #2868]!	; 0xb34

000115ec <if_nametoindex@plt>:
   115ec:	add	ip, pc, #0, 12
   115f0:	add	ip, ip, #32, 20	; 0x20000
   115f4:	ldr	pc, [ip, #2860]!	; 0xb2c

000115f8 <strncmp@plt>:
   115f8:	add	ip, pc, #0, 12
   115fc:	add	ip, ip, #32, 20	; 0x20000
   11600:	ldr	pc, [ip, #2852]!	; 0xb24

00011604 <abort@plt>:
   11604:	add	ip, pc, #0, 12
   11608:	add	ip, ip, #32, 20	; 0x20000
   1160c:	ldr	pc, [ip, #2844]!	; 0xb1c

00011610 <close@plt>:
   11610:	add	ip, pc, #0, 12
   11614:	add	ip, ip, #32, 20	; 0x20000
   11618:	ldr	pc, [ip, #2836]!	; 0xb14

0001161c <__assert_fail@plt>:
   1161c:	add	ip, pc, #0, 12
   11620:	add	ip, ip, #32, 20	; 0x20000
   11624:	ldr	pc, [ip, #2828]!	; 0xb0c

00011628 <ftello64@plt>:
   11628:	add	ip, pc, #0, 12
   1162c:	add	ip, ip, #32, 20	; 0x20000
   11630:	ldr	pc, [ip, #2820]!	; 0xb04

Disassembly of section .text:

00011634 <argp_parse@@Base-0x65f4>:
   11634:	mov	fp, #0
   11638:	mov	lr, #0
   1163c:	pop	{r1}		; (ldr r1, [sp], #4)
   11640:	mov	r2, sp
   11644:	push	{r2}		; (str r2, [sp, #-4]!)
   11648:	push	{r0}		; (str r0, [sp, #-4]!)
   1164c:	ldr	ip, [pc, #16]	; 11664 <ftello64@plt+0x3c>
   11650:	push	{ip}		; (str ip, [sp, #-4]!)
   11654:	ldr	r0, [pc, #12]	; 11668 <ftello64@plt+0x40>
   11658:	ldr	r3, [pc, #12]	; 1166c <ftello64@plt+0x44>
   1165c:	bl	11430 <__libc_start_main@plt>
   11660:	bl	11604 <abort@plt>
   11664:	muleq	r1, ip, r5
   11668:	andeq	r1, r1, r4, lsr #14
   1166c:	andeq	lr, r1, ip, lsr r5
   11670:	ldr	r3, [pc, #20]	; 1168c <ftello64@plt+0x64>
   11674:	ldr	r2, [pc, #20]	; 11690 <ftello64@plt+0x68>
   11678:	add	r3, pc, r3
   1167c:	ldr	r2, [r3, r2]
   11680:	cmp	r2, #0
   11684:	bxeq	lr
   11688:	b	11460 <__gmon_start__@plt>
   1168c:	andeq	r0, r2, r0, lsl #19
   11690:	andeq	r0, r0, r8, lsr r1
   11694:	ldr	r0, [pc, #24]	; 116b4 <ftello64@plt+0x8c>
   11698:	ldr	r3, [pc, #24]	; 116b8 <ftello64@plt+0x90>
   1169c:	cmp	r3, r0
   116a0:	bxeq	lr
   116a4:	ldr	r3, [pc, #16]	; 116bc <ftello64@plt+0x94>
   116a8:	cmp	r3, #0
   116ac:	bxeq	lr
   116b0:	bx	r3
   116b4:	andeq	r2, r3, r8, lsr fp
   116b8:	andeq	r2, r3, r8, lsr fp
   116bc:	andeq	r0, r0, r0
   116c0:	ldr	r0, [pc, #36]	; 116ec <ftello64@plt+0xc4>
   116c4:	ldr	r1, [pc, #36]	; 116f0 <ftello64@plt+0xc8>
   116c8:	sub	r1, r1, r0
   116cc:	asr	r1, r1, #2
   116d0:	add	r1, r1, r1, lsr #31
   116d4:	asrs	r1, r1, #1
   116d8:	bxeq	lr
   116dc:	ldr	r3, [pc, #16]	; 116f4 <ftello64@plt+0xcc>
   116e0:	cmp	r3, #0
   116e4:	bxeq	lr
   116e8:	bx	r3
   116ec:	andeq	r2, r3, r8, lsr fp
   116f0:	andeq	r2, r3, r8, lsr fp
   116f4:	andeq	r0, r0, r0
   116f8:	push	{r4, lr}
   116fc:	ldr	r4, [pc, #24]	; 1171c <ftello64@plt+0xf4>
   11700:	ldrb	r3, [r4]
   11704:	cmp	r3, #0
   11708:	popne	{r4, pc}
   1170c:	bl	11694 <ftello64@plt+0x6c>
   11710:	mov	r3, #1
   11714:	strb	r3, [r4]
   11718:	pop	{r4, pc}
   1171c:	andeq	r2, r3, r8, asr #22
   11720:	b	116c0 <ftello64@plt+0x98>
   11724:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11728:	strd	r6, [sp, #8]
   1172c:	strd	r8, [sp, #16]
   11730:	str	sl, [sp, #24]
   11734:	str	lr, [sp, #28]
   11738:	mov	r5, r0
   1173c:	mov	r4, r1
   11740:	ldr	r0, [r1]
   11744:	bl	18e14 <_obstack_memory_used@@Base+0x34>
   11748:	mov	r1, r4
   1174c:	mov	r0, r5
   11750:	bl	13920 <ftello64@plt+0x22f8>
   11754:	mov	r2, #0
   11758:	mov	r1, #1
   1175c:	mov	r0, #2
   11760:	bl	115e0 <socket@plt>
   11764:	subs	r7, r0, #0
   11768:	blt	117b4 <ftello64@plt+0x18c>
   1176c:	movw	r3, #11236	; 0x2be4
   11770:	movt	r3, #3
   11774:	ldr	r4, [r3]
   11778:	movw	r3, #11240	; 0x2be8
   1177c:	movt	r3, #3
   11780:	ldr	r3, [r3]
   11784:	rsb	r3, r3, r3, lsl #3
   11788:	add	r3, r4, r3, lsl #3
   1178c:	cmp	r4, r3
   11790:	bcs	118b4 <ftello64@plt+0x28c>
   11794:	mov	r5, #0
   11798:	movw	r6, #11260	; 0x2bfc
   1179c:	movt	r6, #3
   117a0:	movw	r8, #60272	; 0xeb70
   117a4:	movt	r8, #1
   117a8:	movw	r9, #11076	; 0x2b44
   117ac:	movt	r9, #3
   117b0:	b	11824 <ftello64@plt+0x1fc>
   117b4:	bl	114c0 <__errno_location@plt>
   117b8:	movw	r2, #58796	; 0xe5ac
   117bc:	movt	r2, #1
   117c0:	ldr	r1, [r0]
   117c4:	mov	r0, #0
   117c8:	bl	11400 <error@plt>
   117cc:	mov	r0, #1
   117d0:	bl	11484 <exit@plt>
   117d4:	ldr	r1, [r9]
   117d8:	mov	r0, #32
   117dc:	bl	11580 <putc@plt>
   117e0:	b	1184c <ftello64@plt+0x224>
   117e4:	mov	r1, r4
   117e8:	mov	r0, r7
   117ec:	bl	12874 <ftello64@plt+0x124c>
   117f0:	subs	r5, r0, #0
   117f4:	bne	11860 <ftello64@plt+0x238>
   117f8:	add	r4, r4, #56	; 0x38
   117fc:	movw	r2, #11236	; 0x2be4
   11800:	movt	r2, #3
   11804:	movw	r3, #11240	; 0x2be8
   11808:	movt	r3, #3
   1180c:	ldr	r3, [r3]
   11810:	rsb	r3, r3, r3, lsl #3
   11814:	ldr	r2, [r2]
   11818:	add	r3, r2, r3, lsl #3
   1181c:	cmp	r4, r3
   11820:	bcs	11860 <ftello64@plt+0x238>
   11824:	ldr	r3, [r6]
   11828:	cmp	r3, #0
   1182c:	beq	117e4 <ftello64@plt+0x1bc>
   11830:	ldr	r0, [r4]
   11834:	bl	115ec <if_nametoindex@plt>
   11838:	cmp	r0, #0
   1183c:	beq	117f8 <ftello64@plt+0x1d0>
   11840:	add	sl, r5, #1
   11844:	cmp	r5, #0
   11848:	bne	117d4 <ftello64@plt+0x1ac>
   1184c:	ldr	r1, [r4]
   11850:	mov	r0, r8
   11854:	bl	11310 <printf@plt>
   11858:	mov	r5, sl
   1185c:	b	117f8 <ftello64@plt+0x1d0>
   11860:	movw	r3, #11260	; 0x2bfc
   11864:	movt	r3, #3
   11868:	ldr	r3, [r3]
   1186c:	cmp	r3, #0
   11870:	cmpne	r5, #0
   11874:	bne	1189c <ftello64@plt+0x274>
   11878:	mov	r0, r7
   1187c:	bl	11610 <close@plt>
   11880:	mov	r0, r5
   11884:	ldrd	r4, [sp]
   11888:	ldrd	r6, [sp, #8]
   1188c:	ldrd	r8, [sp, #16]
   11890:	ldr	sl, [sp, #24]
   11894:	add	sp, sp, #28
   11898:	pop	{pc}		; (ldr pc, [sp], #4)
   1189c:	movw	r3, #11076	; 0x2b44
   118a0:	movt	r3, #3
   118a4:	ldr	r1, [r3]
   118a8:	mov	r0, #10
   118ac:	bl	11580 <putc@plt>
   118b0:	b	11878 <ftello64@plt+0x250>
   118b4:	mov	r5, #0
   118b8:	b	11878 <ftello64@plt+0x250>
   118bc:	str	r4, [sp, #-8]!
   118c0:	str	lr, [sp, #4]
   118c4:	ldr	r1, [r1]
   118c8:	ldr	r0, [r0]
   118cc:	bl	112f8 <strcmp@plt>
   118d0:	ldr	r4, [sp]
   118d4:	add	sp, sp, #4
   118d8:	pop	{pc}		; (ldr pc, [sp], #4)
   118dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118e0:	strd	r6, [sp, #8]
   118e4:	strd	r8, [sp, #16]
   118e8:	strd	sl, [sp, #24]
   118ec:	str	lr, [sp, #32]
   118f0:	sub	sp, sp, #12
   118f4:	str	r0, [sp, #4]
   118f8:	movw	r3, #8516	; 0x2144
   118fc:	movt	r3, #3
   11900:	ldr	r0, [r3]
   11904:	cmp	r0, #0
   11908:	beq	11940 <ftello64@plt+0x318>
   1190c:	mov	r4, r3
   11910:	mov	r8, #0
   11914:	b	11924 <ftello64@plt+0x2fc>
   11918:	ldr	r0, [r4, #12]!
   1191c:	cmp	r0, #0
   11920:	beq	11944 <ftello64@plt+0x31c>
   11924:	ldr	r3, [r4, #8]
   11928:	cmp	r3, #0
   1192c:	bne	11918 <ftello64@plt+0x2f0>
   11930:	bl	1149c <strlen@plt>
   11934:	add	r8, r8, #1
   11938:	add	r8, r0, r8
   1193c:	b	11918 <ftello64@plt+0x2f0>
   11940:	mov	r8, #0
   11944:	add	r0, r8, #80	; 0x50
   11948:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   1194c:	mov	r9, r0
   11950:	add	r5, r0, #80	; 0x50
   11954:	movw	r3, #8516	; 0x2144
   11958:	movt	r3, #3
   1195c:	ldr	r4, [r3]
   11960:	cmp	r4, #0
   11964:	beq	119fc <ftello64@plt+0x3d4>
   11968:	mov	r6, r3
   1196c:	mov	r7, #0
   11970:	movw	sl, #58812	; 0xe5bc
   11974:	movt	sl, #1
   11978:	mov	fp, r7
   1197c:	str	sl, [sp]
   11980:	b	11998 <ftello64@plt+0x370>
   11984:	strb	fp, [r5], #1
   11988:	mov	r7, sl
   1198c:	ldr	r4, [r6, #12]!
   11990:	cmp	r4, #0
   11994:	beq	11a00 <ftello64@plt+0x3d8>
   11998:	ldr	r3, [r6, #8]
   1199c:	cmp	r3, #0
   119a0:	bne	1198c <ftello64@plt+0x364>
   119a4:	ldr	r3, [r6, #4]
   119a8:	tst	r3, #72	; 0x48
   119ac:	bne	1198c <ftello64@plt+0x364>
   119b0:	add	sl, r7, #1
   119b4:	str	r5, [r9, r7, lsl #2]
   119b8:	mov	r2, #2
   119bc:	ldr	r1, [sp]
   119c0:	mov	r0, r4
   119c4:	bl	115f8 <strncmp@plt>
   119c8:	cmp	r0, #0
   119cc:	addeq	r4, r4, #2
   119d0:	ldrb	r7, [r4]
   119d4:	cmp	r7, #0
   119d8:	beq	11984 <ftello64@plt+0x35c>
   119dc:	bl	11448 <__ctype_tolower_loc@plt>
   119e0:	ldr	r2, [r0]
   119e4:	ldr	r3, [r2, r7, lsl #2]
   119e8:	strb	r3, [r5], #1
   119ec:	ldrb	r7, [r4, #1]!
   119f0:	cmp	r7, #0
   119f4:	bne	119e4 <ftello64@plt+0x3bc>
   119f8:	b	11984 <ftello64@plt+0x35c>
   119fc:	mov	r7, #0
   11a00:	movw	r3, #6332	; 0x18bc
   11a04:	movt	r3, #1
   11a08:	mov	r2, #4
   11a0c:	mov	r1, r7
   11a10:	mov	r0, r9
   11a14:	bl	115b0 <qsort@plt>
   11a18:	add	r8, r8, r7, lsl #1
   11a1c:	ldr	r4, [sp, #4]
   11a20:	cmp	r4, #0
   11a24:	beq	11af4 <ftello64@plt+0x4cc>
   11a28:	mov	r0, r4
   11a2c:	bl	1149c <strlen@plt>
   11a30:	add	r8, r8, #36	; 0x24
   11a34:	add	r0, r8, r0
   11a38:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   11a3c:	mov	r5, r0
   11a40:	str	r0, [sp]
   11a44:	mov	r1, r4
   11a48:	bl	113e8 <strcpy@plt>
   11a4c:	mov	r0, r4
   11a50:	bl	1149c <strlen@plt>
   11a54:	add	r4, r5, r0
   11a58:	cmp	r7, #0
   11a5c:	beq	11b08 <ftello64@plt+0x4e0>
   11a60:	sub	r5, r9, #4
   11a64:	mov	r6, #0
   11a68:	mov	fp, #44	; 0x2c
   11a6c:	mov	sl, #32
   11a70:	b	11a84 <ftello64@plt+0x45c>
   11a74:	add	r6, r6, #1
   11a78:	add	r5, r5, #4
   11a7c:	cmp	r6, r7
   11a80:	beq	11b08 <ftello64@plt+0x4e0>
   11a84:	cmp	r6, #0
   11a88:	beq	11ab0 <ftello64@plt+0x488>
   11a8c:	ldr	r8, [r5]
   11a90:	mov	r0, r8
   11a94:	bl	1149c <strlen@plt>
   11a98:	mov	r2, r0
   11a9c:	ldr	r1, [r5, #4]
   11aa0:	mov	r0, r8
   11aa4:	bl	115f8 <strncmp@plt>
   11aa8:	cmp	r0, #0
   11aac:	beq	11a74 <ftello64@plt+0x44c>
   11ab0:	ldr	r8, [r5, #4]
   11ab4:	mov	r1, r8
   11ab8:	mov	r0, r4
   11abc:	bl	113e8 <strcpy@plt>
   11ac0:	mov	r0, r8
   11ac4:	bl	1149c <strlen@plt>
   11ac8:	add	r4, r4, r0
   11acc:	add	r3, r6, #1
   11ad0:	cmp	r3, r7
   11ad4:	bcs	11a74 <ftello64@plt+0x44c>
   11ad8:	mov	r3, r4
   11adc:	strb	fp, [r3], #2
   11ae0:	strb	sl, [r4, #1]
   11ae4:	add	r6, r6, #1
   11ae8:	add	r5, r5, #4
   11aec:	mov	r4, r3
   11af0:	b	11a84 <ftello64@plt+0x45c>
   11af4:	add	r0, r8, #36	; 0x24
   11af8:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   11afc:	mov	r4, r0
   11b00:	str	r0, [sp]
   11b04:	b	11a58 <ftello64@plt+0x430>
   11b08:	movw	r3, #58816	; 0xe5c0
   11b0c:	movt	r3, #1
   11b10:	ldr	r1, [r3]
   11b14:	ldr	r2, [r3, #4]
   11b18:	str	r1, [r4]
   11b1c:	str	r2, [r4, #4]
   11b20:	ldr	r1, [r3, #8]
   11b24:	ldr	r2, [r3, #12]
   11b28:	str	r1, [r4, #8]
   11b2c:	str	r2, [r4, #12]
   11b30:	ldr	r1, [r3, #16]
   11b34:	ldr	r2, [r3, #20]
   11b38:	str	r1, [r4, #16]
   11b3c:	str	r2, [r4, #20]
   11b40:	ldr	r1, [r3, #24]
   11b44:	ldr	r2, [r3, #28]
   11b48:	str	r1, [r4, #24]
   11b4c:	str	r2, [r4, #28]
   11b50:	ldr	r3, [r3, #32]
   11b54:	str	r3, [r4, #32]
   11b58:	mov	r0, r9
   11b5c:	bl	18900 <argp_parse@@Base+0xcd8>
   11b60:	ldr	r0, [sp]
   11b64:	add	sp, sp, #12
   11b68:	ldrd	r4, [sp]
   11b6c:	ldrd	r6, [sp, #8]
   11b70:	ldrd	r8, [sp, #16]
   11b74:	ldrd	sl, [sp, #24]
   11b78:	add	sp, sp, #32
   11b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b80:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b84:	strd	r6, [sp, #8]
   11b88:	strd	r8, [sp, #16]
   11b8c:	str	sl, [sp, #24]
   11b90:	str	lr, [sp, #28]
   11b94:	movw	r3, #8516	; 0x2144
   11b98:	movt	r3, #3
   11b9c:	ldr	r5, [r3]
   11ba0:	cmp	r5, #0
   11ba4:	beq	11c40 <ftello64@plt+0x618>
   11ba8:	mov	r4, r3
   11bac:	b	11bbc <ftello64@plt+0x594>
   11bb0:	ldr	r5, [r4, #12]!
   11bb4:	cmp	r5, #0
   11bb8:	beq	11c40 <ftello64@plt+0x618>
   11bbc:	ldr	r3, [r4, #4]
   11bc0:	cmp	r3, r0
   11bc4:	bne	11bb0 <ftello64@plt+0x588>
   11bc8:	ldr	r3, [r4, #8]
   11bcc:	cmp	r3, #0
   11bd0:	bne	11bb0 <ftello64@plt+0x588>
   11bd4:	mov	r8, r1
   11bd8:	cmp	r1, #0
   11bdc:	beq	11c2c <ftello64@plt+0x604>
   11be0:	mov	r9, r4
   11be4:	ldr	r6, [r4]
   11be8:	mov	r1, r6
   11bec:	mov	r0, r8
   11bf0:	bl	112c8 <strstr@plt>
   11bf4:	subs	r7, r0, #0
   11bf8:	beq	11c3c <ftello64@plt+0x614>
   11bfc:	ldrb	r3, [r7, #-1]
   11c00:	cmp	r3, #58	; 0x3a
   11c04:	bne	11c3c <ftello64@plt+0x614>
   11c08:	mov	r0, r6
   11c0c:	bl	1149c <strlen@plt>
   11c10:	ldrb	r3, [r7, r0]
   11c14:	cmp	r3, #58	; 0x3a
   11c18:	bne	11c3c <ftello64@plt+0x614>
   11c1c:	ldr	r3, [r4, #12]!
   11c20:	cmp	r3, #0
   11c24:	bne	11be0 <ftello64@plt+0x5b8>
   11c28:	b	11c40 <ftello64@plt+0x618>
   11c2c:	ldr	r3, [r4]
   11c30:	cmp	r3, #0
   11c34:	movne	r5, r3
   11c38:	b	11c40 <ftello64@plt+0x618>
   11c3c:	ldr	r5, [r9]
   11c40:	mov	r0, r5
   11c44:	ldrd	r4, [sp]
   11c48:	ldrd	r6, [sp, #8]
   11c4c:	ldrd	r8, [sp, #16]
   11c50:	ldr	sl, [sp, #24]
   11c54:	add	sp, sp, #28
   11c58:	pop	{pc}		; (ldr pc, [sp], #4)
   11c5c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11c60:	strd	r6, [sp, #8]
   11c64:	strd	r8, [sp, #16]
   11c68:	str	sl, [sp, #24]
   11c6c:	str	lr, [sp, #28]
   11c70:	mov	r6, r0
   11c74:	mov	r5, r1
   11c78:	mov	r8, r2
   11c7c:	cmp	r1, #1
   11c80:	bls	11c9c <ftello64@plt+0x674>
   11c84:	ldrb	r3, [r0]
   11c88:	cmp	r3, #45	; 0x2d
   11c8c:	addeq	r6, r0, #1
   11c90:	subeq	r5, r1, #1
   11c94:	moveq	r9, #1
   11c98:	beq	11cd4 <ftello64@plt+0x6ac>
   11c9c:	cmp	r5, #2
   11ca0:	movls	r9, #0
   11ca4:	bls	11cd4 <ftello64@plt+0x6ac>
   11ca8:	mov	r2, #2
   11cac:	movw	r1, #58812	; 0xe5bc
   11cb0:	movt	r1, #1
   11cb4:	mov	r0, r6
   11cb8:	bl	114cc <strncasecmp@plt>
   11cbc:	cmp	r0, #0
   11cc0:	movne	r9, #0
   11cc4:	bne	11cd4 <ftello64@plt+0x6ac>
   11cc8:	add	r6, r6, #2
   11ccc:	sub	r5, r5, #2
   11cd0:	mov	r9, #1
   11cd4:	movw	r3, #8516	; 0x2144
   11cd8:	movt	r3, #3
   11cdc:	ldr	r0, [r3]
   11ce0:	cmp	r0, #0
   11ce4:	beq	11d38 <ftello64@plt+0x710>
   11ce8:	mov	r4, r3
   11cec:	mov	r2, r5
   11cf0:	mov	r1, r6
   11cf4:	bl	114cc <strncasecmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	beq	11d10 <ftello64@plt+0x6e8>
   11d00:	ldr	r0, [r4, #12]!
   11d04:	cmp	r0, #0
   11d08:	bne	11cec <ftello64@plt+0x6c4>
   11d0c:	b	11d20 <ftello64@plt+0x6f8>
   11d10:	ldr	r3, [r4, #8]
   11d14:	eor	r3, r3, r9
   11d18:	str	r3, [r8]
   11d1c:	ldr	r0, [r4, #4]
   11d20:	ldrd	r4, [sp]
   11d24:	ldrd	r6, [sp, #8]
   11d28:	ldrd	r8, [sp, #16]
   11d2c:	ldr	sl, [sp, #24]
   11d30:	add	sp, sp, #28
   11d34:	pop	{pc}		; (ldr pc, [sp], #4)
   11d38:	mov	r0, #0
   11d3c:	b	11d20 <ftello64@plt+0x6f8>
   11d40:	strd	r4, [sp, #-16]!
   11d44:	str	r6, [sp, #8]
   11d48:	str	lr, [sp, #12]
   11d4c:	mov	r4, r0
   11d50:	mov	r5, r1
   11d54:	bl	1149c <strlen@plt>
   11d58:	mov	r2, r5
   11d5c:	mov	r1, r0
   11d60:	mov	r0, r4
   11d64:	bl	11c5c <ftello64@plt+0x634>
   11d68:	ldrd	r4, [sp]
   11d6c:	ldr	r6, [sp, #8]
   11d70:	add	sp, sp, #12
   11d74:	pop	{pc}		; (ldr pc, [sp], #4)
   11d78:	subs	r2, r2, #1
   11d7c:	beq	11dc8 <ftello64@plt+0x7a0>
   11d80:	movw	r3, #8516	; 0x2144
   11d84:	movt	r3, #3
   11d88:	ldr	r3, [r3, #252]	; 0xfc
   11d8c:	cmp	r3, #0
   11d90:	beq	11dc8 <ftello64@plt+0x7a0>
   11d94:	ldr	ip, [pc, #56]	; 11dd4 <ftello64@plt+0x7ac>
   11d98:	b	11db0 <ftello64@plt+0x788>
   11d9c:	cmp	r2, #0
   11da0:	beq	11dc8 <ftello64@plt+0x7a0>
   11da4:	ldr	r3, [ip, #8]!
   11da8:	cmp	r3, #0
   11dac:	beq	11dc8 <ftello64@plt+0x7a0>
   11db0:	tst	r0, r3
   11db4:	beq	11d9c <ftello64@plt+0x774>
   11db8:	ldr	r3, [ip, #4]
   11dbc:	strb	r3, [r1], #1
   11dc0:	sub	r2, r2, #1
   11dc4:	b	11d9c <ftello64@plt+0x774>
   11dc8:	mov	r3, #0
   11dcc:	strb	r3, [r1]
   11dd0:	bx	lr
   11dd4:	andeq	r2, r3, r0, asr #4
   11dd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11ddc:	strd	r6, [sp, #8]
   11de0:	strd	r8, [sp, #16]
   11de4:	strd	sl, [sp, #24]
   11de8:	str	lr, [sp, #32]
   11dec:	sub	sp, sp, #12
   11df0:	str	r1, [sp]
   11df4:	str	r2, [sp, #4]
   11df8:	subs	r5, r0, #0
   11dfc:	beq	11ef0 <ftello64@plt+0x8c8>
   11e00:	mov	r6, #0
   11e04:	mov	r7, #1
   11e08:	mov	r4, r7
   11e0c:	movw	r9, #60272	; 0xeb70
   11e10:	movt	r9, #1
   11e14:	mov	sl, r6
   11e18:	movw	fp, #11076	; 0x2b44
   11e1c:	movt	fp, #3
   11e20:	b	11e68 <ftello64@plt+0x840>
   11e24:	ldr	r1, [fp]
   11e28:	ldr	r0, [sp, #4]
   11e2c:	bl	11580 <putc@plt>
   11e30:	add	r6, r6, #1
   11e34:	mov	r1, r8
   11e38:	mov	r0, r9
   11e3c:	bl	11310 <printf@plt>
   11e40:	add	r6, r6, r0
   11e44:	bic	r5, r5, r4
   11e48:	mov	r7, sl
   11e4c:	lsls	r4, r4, #1
   11e50:	movne	r3, #1
   11e54:	moveq	r3, #0
   11e58:	cmp	r5, #0
   11e5c:	moveq	r3, #0
   11e60:	cmp	r3, #0
   11e64:	beq	11e90 <ftello64@plt+0x868>
   11e68:	tst	r5, r4
   11e6c:	beq	11e4c <ftello64@plt+0x824>
   11e70:	ldr	r1, [sp]
   11e74:	mov	r0, r4
   11e78:	bl	11b80 <ftello64@plt+0x558>
   11e7c:	subs	r8, r0, #0
   11e80:	beq	11e4c <ftello64@plt+0x824>
   11e84:	cmp	r7, #0
   11e88:	bne	11e34 <ftello64@plt+0x80c>
   11e8c:	b	11e24 <ftello64@plt+0x7fc>
   11e90:	cmp	r5, #0
   11e94:	beq	11eb4 <ftello64@plt+0x88c>
   11e98:	cmp	r7, #0
   11e9c:	beq	11ed4 <ftello64@plt+0x8ac>
   11ea0:	mov	r1, r5
   11ea4:	movw	r0, #58852	; 0xe5e4
   11ea8:	movt	r0, #1
   11eac:	bl	11310 <printf@plt>
   11eb0:	add	r6, r6, r0
   11eb4:	mov	r0, r6
   11eb8:	add	sp, sp, #12
   11ebc:	ldrd	r4, [sp]
   11ec0:	ldrd	r6, [sp, #8]
   11ec4:	ldrd	r8, [sp, #16]
   11ec8:	ldrd	sl, [sp, #24]
   11ecc:	add	sp, sp, #32
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed4:	movw	r3, #11076	; 0x2b44
   11ed8:	movt	r3, #3
   11edc:	ldr	r1, [r3]
   11ee0:	ldr	r0, [sp, #4]
   11ee4:	bl	11580 <putc@plt>
   11ee8:	add	r6, r6, #1
   11eec:	b	11ea0 <ftello64@plt+0x878>
   11ef0:	mov	r6, r5
   11ef4:	b	11eb4 <ftello64@plt+0x88c>
   11ef8:	strd	r4, [sp, #-20]!	; 0xffffffec
   11efc:	strd	r6, [sp, #8]
   11f00:	str	lr, [sp, #16]
   11f04:	sub	sp, sp, #76	; 0x4c
   11f08:	mov	r6, r0
   11f0c:	mov	r4, r1
   11f10:	mov	r5, r2
   11f14:	mov	r2, #0
   11f18:	mov	r3, #0
   11f1c:	strd	r2, [sp, #24]
   11f20:	strd	r2, [sp, #32]
   11f24:	strd	r2, [sp, #40]	; 0x28
   11f28:	strd	r2, [sp, #48]	; 0x30
   11f2c:	mov	r3, #2
   11f30:	str	r3, [sp, #28]
   11f34:	add	r3, sp, #20
   11f38:	add	r2, sp, #24
   11f3c:	mov	r1, #0
   11f40:	mov	r0, r5
   11f44:	bl	115d4 <getaddrinfo@plt>
   11f48:	cmp	r0, #0
   11f4c:	bne	12018 <ftello64@plt+0x9f0>
   11f50:	ldr	r3, [sp, #20]
   11f54:	cmp	r3, #0
   11f58:	beq	120d8 <ftello64@plt+0xab0>
   11f5c:	ldr	r2, [r3, #4]
   11f60:	cmp	r2, #2
   11f64:	beq	11f80 <ftello64@plt+0x958>
   11f68:	ldr	r3, [r3, #28]
   11f6c:	cmp	r3, #0
   11f70:	beq	120d8 <ftello64@plt+0xab0>
   11f74:	ldr	r2, [r3, #4]
   11f78:	cmp	r2, #2
   11f7c:	bne	11f68 <ftello64@plt+0x940>
   11f80:	ldr	r1, [r3, #16]
   11f84:	ldr	r0, [r3, #20]
   11f88:	mov	r3, #1
   11f8c:	str	r3, [sp, #8]
   11f90:	mov	r3, #0
   11f94:	str	r3, [sp, #4]
   11f98:	str	r3, [sp]
   11f9c:	mov	r3, #16
   11fa0:	add	r2, sp, #56	; 0x38
   11fa4:	bl	11544 <getnameinfo@plt>
   11fa8:	mov	r7, r0
   11fac:	ldr	r0, [sp, #20]
   11fb0:	bl	115c8 <freeaddrinfo@plt>
   11fb4:	cmp	r7, #0
   11fb8:	bne	12040 <ftello64@plt+0xa18>
   11fbc:	mov	r3, #2
   11fc0:	strh	r3, [r4, #16]
   11fc4:	add	r1, r4, #20
   11fc8:	add	r0, sp, #56	; 0x38
   11fcc:	bl	112ec <inet_aton@plt>
   11fd0:	cmp	r0, #0
   11fd4:	beq	1206c <ftello64@plt+0xa44>
   11fd8:	mov	r2, r4
   11fdc:	movw	r1, #35094	; 0x8916
   11fe0:	mov	r0, r6
   11fe4:	bl	18a18 <argp_parse@@Base+0xdf0>
   11fe8:	cmp	r0, #0
   11fec:	blt	1208c <ftello64@plt+0xa64>
   11ff0:	movw	r3, #11256	; 0x2bf8
   11ff4:	movt	r3, #3
   11ff8:	ldr	r0, [r3]
   11ffc:	cmp	r0, #0
   12000:	bne	120b4 <ftello64@plt+0xa8c>
   12004:	add	sp, sp, #76	; 0x4c
   12008:	ldrd	r4, [sp]
   1200c:	ldrd	r6, [sp, #8]
   12010:	add	sp, sp, #16
   12014:	pop	{pc}		; (ldr pc, [sp], #4)
   12018:	bl	11340 <gai_strerror@plt>
   1201c:	str	r0, [sp]
   12020:	mov	r3, r5
   12024:	movw	r2, #59024	; 0xe690
   12028:	movt	r2, #1
   1202c:	mov	r1, #0
   12030:	mov	r0, r1
   12034:	bl	11400 <error@plt>
   12038:	mvn	r0, #0
   1203c:	b	12004 <ftello64@plt+0x9dc>
   12040:	mov	r0, r7
   12044:	bl	11340 <gai_strerror@plt>
   12048:	str	r0, [sp]
   1204c:	mov	r3, r5
   12050:	movw	r2, #59024	; 0xe690
   12054:	movt	r2, #1
   12058:	mov	r1, #0
   1205c:	mov	r0, r1
   12060:	bl	11400 <error@plt>
   12064:	mvn	r0, #0
   12068:	b	12004 <ftello64@plt+0x9dc>
   1206c:	add	r3, sp, #56	; 0x38
   12070:	movw	r2, #59048	; 0xe6a8
   12074:	movt	r2, #1
   12078:	mov	r1, #0
   1207c:	mov	r0, r1
   12080:	bl	11400 <error@plt>
   12084:	mvn	r0, #0
   12088:	b	12004 <ftello64@plt+0x9dc>
   1208c:	bl	114c0 <__errno_location@plt>
   12090:	movw	r3, #59076	; 0xe6c4
   12094:	movt	r3, #1
   12098:	movw	r2, #59088	; 0xe6d0
   1209c:	movt	r2, #1
   120a0:	ldr	r1, [r0]
   120a4:	mov	r0, #0
   120a8:	bl	11400 <error@plt>
   120ac:	mvn	r0, #0
   120b0:	b	12004 <ftello64@plt+0x9dc>
   120b4:	ldr	r0, [r4, #20]
   120b8:	bl	1137c <inet_ntoa@plt>
   120bc:	mov	r2, r0
   120c0:	mov	r1, r4
   120c4:	movw	r0, #59100	; 0xe6dc
   120c8:	movt	r0, #1
   120cc:	bl	11310 <printf@plt>
   120d0:	mov	r0, r7
   120d4:	b	12004 <ftello64@plt+0x9dc>
   120d8:	mov	r3, r5
   120dc:	movw	r2, #59140	; 0xe704
   120e0:	movt	r2, #1
   120e4:	mov	r1, #0
   120e8:	mov	r0, r1
   120ec:	bl	11400 <error@plt>
   120f0:	ldr	r0, [sp, #20]
   120f4:	bl	115c8 <freeaddrinfo@plt>
   120f8:	mvn	r0, #0
   120fc:	b	12004 <ftello64@plt+0x9dc>
   12100:	strd	r4, [sp, #-16]!
   12104:	str	r6, [sp, #8]
   12108:	str	lr, [sp, #12]
   1210c:	mov	r6, r0
   12110:	mov	r4, r1
   12114:	mov	r5, r2
   12118:	mov	r3, #2
   1211c:	strh	r3, [r1, #16]
   12120:	add	r1, r1, #20
   12124:	mov	r0, r2
   12128:	bl	112ec <inet_aton@plt>
   1212c:	cmp	r0, #0
   12130:	beq	12170 <ftello64@plt+0xb48>
   12134:	mov	r2, r4
   12138:	movw	r1, #35100	; 0x891c
   1213c:	mov	r0, r6
   12140:	bl	18a18 <argp_parse@@Base+0xdf0>
   12144:	cmp	r0, #0
   12148:	blt	12190 <ftello64@plt+0xb68>
   1214c:	movw	r3, #11256	; 0x2bf8
   12150:	movt	r3, #3
   12154:	ldr	r0, [r3]
   12158:	cmp	r0, #0
   1215c:	bne	121b8 <ftello64@plt+0xb90>
   12160:	ldrd	r4, [sp]
   12164:	ldr	r6, [sp, #8]
   12168:	add	sp, sp, #12
   1216c:	pop	{pc}		; (ldr pc, [sp], #4)
   12170:	mov	r3, r5
   12174:	movw	r2, #59048	; 0xe6a8
   12178:	movt	r2, #1
   1217c:	mov	r1, #0
   12180:	mov	r0, r1
   12184:	bl	11400 <error@plt>
   12188:	mvn	r0, #0
   1218c:	b	12160 <ftello64@plt+0xb38>
   12190:	bl	114c0 <__errno_location@plt>
   12194:	movw	r3, #59180	; 0xe72c
   12198:	movt	r3, #1
   1219c:	movw	r2, #59088	; 0xe6d0
   121a0:	movt	r2, #1
   121a4:	ldr	r1, [r0]
   121a8:	mov	r0, #0
   121ac:	bl	11400 <error@plt>
   121b0:	mvn	r0, #0
   121b4:	b	12160 <ftello64@plt+0xb38>
   121b8:	ldr	r0, [r4, #20]
   121bc:	bl	1137c <inet_ntoa@plt>
   121c0:	mov	r2, r0
   121c4:	mov	r1, r4
   121c8:	movw	r0, #59196	; 0xe73c
   121cc:	movt	r0, #1
   121d0:	bl	11310 <printf@plt>
   121d4:	mov	r0, #0
   121d8:	b	12160 <ftello64@plt+0xb38>
   121dc:	strd	r4, [sp, #-20]!	; 0xffffffec
   121e0:	strd	r6, [sp, #8]
   121e4:	str	lr, [sp, #16]
   121e8:	sub	sp, sp, #76	; 0x4c
   121ec:	mov	r6, r0
   121f0:	mov	r4, r1
   121f4:	mov	r5, r2
   121f8:	mov	r2, #0
   121fc:	mov	r3, #0
   12200:	strd	r2, [sp, #24]
   12204:	strd	r2, [sp, #32]
   12208:	strd	r2, [sp, #40]	; 0x28
   1220c:	strd	r2, [sp, #48]	; 0x30
   12210:	mov	r3, #2
   12214:	str	r3, [sp, #28]
   12218:	add	r3, sp, #20
   1221c:	add	r2, sp, #24
   12220:	mov	r1, #0
   12224:	mov	r0, r5
   12228:	bl	115d4 <getaddrinfo@plt>
   1222c:	cmp	r0, #0
   12230:	bne	122fc <ftello64@plt+0xcd4>
   12234:	ldr	r3, [sp, #20]
   12238:	cmp	r3, #0
   1223c:	beq	123bc <ftello64@plt+0xd94>
   12240:	ldr	r2, [r3, #4]
   12244:	cmp	r2, #2
   12248:	beq	12264 <ftello64@plt+0xc3c>
   1224c:	ldr	r3, [r3, #28]
   12250:	cmp	r3, #0
   12254:	beq	123bc <ftello64@plt+0xd94>
   12258:	ldr	r2, [r3, #4]
   1225c:	cmp	r2, #2
   12260:	bne	1224c <ftello64@plt+0xc24>
   12264:	ldr	r1, [r3, #16]
   12268:	ldr	r0, [r3, #20]
   1226c:	mov	r3, #1
   12270:	str	r3, [sp, #8]
   12274:	mov	r3, #0
   12278:	str	r3, [sp, #4]
   1227c:	str	r3, [sp]
   12280:	mov	r3, #16
   12284:	add	r2, sp, #56	; 0x38
   12288:	bl	11544 <getnameinfo@plt>
   1228c:	mov	r7, r0
   12290:	ldr	r0, [sp, #20]
   12294:	bl	115c8 <freeaddrinfo@plt>
   12298:	cmp	r7, #0
   1229c:	bne	12324 <ftello64@plt+0xcfc>
   122a0:	mov	r3, #2
   122a4:	strh	r3, [r4, #16]
   122a8:	add	r1, r4, #20
   122ac:	add	r0, sp, #56	; 0x38
   122b0:	bl	112ec <inet_aton@plt>
   122b4:	cmp	r0, #0
   122b8:	beq	12350 <ftello64@plt+0xd28>
   122bc:	mov	r2, r4
   122c0:	movw	r1, #35096	; 0x8918
   122c4:	mov	r0, r6
   122c8:	bl	18a18 <argp_parse@@Base+0xdf0>
   122cc:	cmp	r0, #0
   122d0:	blt	12370 <ftello64@plt+0xd48>
   122d4:	movw	r3, #11256	; 0x2bf8
   122d8:	movt	r3, #3
   122dc:	ldr	r0, [r3]
   122e0:	cmp	r0, #0
   122e4:	bne	12398 <ftello64@plt+0xd70>
   122e8:	add	sp, sp, #76	; 0x4c
   122ec:	ldrd	r4, [sp]
   122f0:	ldrd	r6, [sp, #8]
   122f4:	add	sp, sp, #16
   122f8:	pop	{pc}		; (ldr pc, [sp], #4)
   122fc:	bl	11340 <gai_strerror@plt>
   12300:	str	r0, [sp]
   12304:	mov	r3, r5
   12308:	movw	r2, #59024	; 0xe690
   1230c:	movt	r2, #1
   12310:	mov	r1, #0
   12314:	mov	r0, r1
   12318:	bl	11400 <error@plt>
   1231c:	mvn	r0, #0
   12320:	b	122e8 <ftello64@plt+0xcc0>
   12324:	mov	r0, r7
   12328:	bl	11340 <gai_strerror@plt>
   1232c:	str	r0, [sp]
   12330:	mov	r3, r5
   12334:	movw	r2, #59024	; 0xe690
   12338:	movt	r2, #1
   1233c:	mov	r1, #0
   12340:	mov	r0, r1
   12344:	bl	11400 <error@plt>
   12348:	mvn	r0, #0
   1234c:	b	122e8 <ftello64@plt+0xcc0>
   12350:	add	r3, sp, #56	; 0x38
   12354:	movw	r2, #59048	; 0xe6a8
   12358:	movt	r2, #1
   1235c:	mov	r1, #0
   12360:	mov	r0, r1
   12364:	bl	11400 <error@plt>
   12368:	mvn	r0, #0
   1236c:	b	122e8 <ftello64@plt+0xcc0>
   12370:	bl	114c0 <__errno_location@plt>
   12374:	movw	r3, #59236	; 0xe764
   12378:	movt	r3, #1
   1237c:	movw	r2, #59088	; 0xe6d0
   12380:	movt	r2, #1
   12384:	ldr	r1, [r0]
   12388:	mov	r0, #0
   1238c:	bl	11400 <error@plt>
   12390:	mvn	r0, #0
   12394:	b	122e8 <ftello64@plt+0xcc0>
   12398:	ldr	r0, [r4, #20]
   1239c:	bl	1137c <inet_ntoa@plt>
   123a0:	mov	r2, r0
   123a4:	mov	r1, r4
   123a8:	movw	r0, #59252	; 0xe774
   123ac:	movt	r0, #1
   123b0:	bl	11310 <printf@plt>
   123b4:	mov	r0, r7
   123b8:	b	122e8 <ftello64@plt+0xcc0>
   123bc:	mov	r3, r5
   123c0:	movw	r2, #59140	; 0xe704
   123c4:	movt	r2, #1
   123c8:	mov	r1, #0
   123cc:	mov	r0, r1
   123d0:	bl	11400 <error@plt>
   123d4:	ldr	r0, [sp, #20]
   123d8:	bl	115c8 <freeaddrinfo@plt>
   123dc:	mvn	r0, #0
   123e0:	b	122e8 <ftello64@plt+0xcc0>
   123e4:	strd	r4, [sp, #-16]!
   123e8:	str	r6, [sp, #8]
   123ec:	str	lr, [sp, #12]
   123f0:	mov	r6, r0
   123f4:	mov	r4, r1
   123f8:	mov	r5, r2
   123fc:	mov	r3, #2
   12400:	strh	r3, [r1, #16]
   12404:	add	r1, r1, #20
   12408:	mov	r0, r2
   1240c:	bl	112ec <inet_aton@plt>
   12410:	cmp	r0, #0
   12414:	beq	12454 <ftello64@plt+0xe2c>
   12418:	mov	r2, r4
   1241c:	movw	r1, #35098	; 0x891a
   12420:	mov	r0, r6
   12424:	bl	18a18 <argp_parse@@Base+0xdf0>
   12428:	cmp	r0, #0
   1242c:	blt	12474 <ftello64@plt+0xe4c>
   12430:	movw	r3, #11256	; 0x2bf8
   12434:	movt	r3, #3
   12438:	ldr	r0, [r3]
   1243c:	cmp	r0, #0
   12440:	bne	1249c <ftello64@plt+0xe74>
   12444:	ldrd	r4, [sp]
   12448:	ldr	r6, [sp, #8]
   1244c:	add	sp, sp, #12
   12450:	pop	{pc}		; (ldr pc, [sp], #4)
   12454:	mov	r3, r5
   12458:	movw	r2, #59048	; 0xe6a8
   1245c:	movt	r2, #1
   12460:	mov	r1, #0
   12464:	mov	r0, r1
   12468:	bl	11400 <error@plt>
   1246c:	mvn	r0, #0
   12470:	b	12444 <ftello64@plt+0xe1c>
   12474:	bl	114c0 <__errno_location@plt>
   12478:	movw	r3, #59296	; 0xe7a0
   1247c:	movt	r3, #1
   12480:	movw	r2, #59088	; 0xe6d0
   12484:	movt	r2, #1
   12488:	ldr	r1, [r0]
   1248c:	mov	r0, #0
   12490:	bl	11400 <error@plt>
   12494:	mvn	r0, #0
   12498:	b	12444 <ftello64@plt+0xe1c>
   1249c:	ldr	r0, [r4, #20]
   124a0:	bl	1137c <inet_ntoa@plt>
   124a4:	mov	r2, r0
   124a8:	mov	r1, r4
   124ac:	movw	r0, #59312	; 0xe7b0
   124b0:	movt	r0, #1
   124b4:	bl	11310 <printf@plt>
   124b8:	mov	r0, #0
   124bc:	b	12444 <ftello64@plt+0xe1c>
   124c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   124c4:	strd	r6, [sp, #8]
   124c8:	str	lr, [sp, #16]
   124cc:	sub	sp, sp, #12
   124d0:	mov	r6, r0
   124d4:	mov	r4, r1
   124d8:	mov	r7, r2
   124dc:	mov	r0, r2
   124e0:	bl	11454 <ether_aton@plt>
   124e4:	subs	r5, r0, #0
   124e8:	beq	1254c <ftello64@plt+0xf24>
   124ec:	mov	r2, r4
   124f0:	movw	r1, #35111	; 0x8927
   124f4:	mov	r0, r6
   124f8:	bl	18a18 <argp_parse@@Base+0xdf0>
   124fc:	ldr	r3, [r5]
   12500:	str	r3, [r4, #18]
   12504:	ldrh	r3, [r5, #4]
   12508:	strh	r3, [r4, #22]
   1250c:	mov	r2, r4
   12510:	movw	r1, #35108	; 0x8924
   12514:	mov	r0, r6
   12518:	bl	18a18 <argp_parse@@Base+0xdf0>
   1251c:	cmp	r0, #0
   12520:	blt	12584 <ftello64@plt+0xf5c>
   12524:	movw	r3, #11256	; 0x2bf8
   12528:	movt	r3, #3
   1252c:	ldr	r0, [r3]
   12530:	cmp	r0, #0
   12534:	bne	125ac <ftello64@plt+0xf84>
   12538:	add	sp, sp, #12
   1253c:	ldrd	r4, [sp]
   12540:	ldrd	r6, [sp, #8]
   12544:	add	sp, sp, #16
   12548:	pop	{pc}		; (ldr pc, [sp], #4)
   1254c:	mov	r1, sp
   12550:	mov	r0, r7
   12554:	bl	112d4 <ether_hostton@plt>
   12558:	cmp	r0, #0
   1255c:	moveq	r5, sp
   12560:	beq	124ec <ftello64@plt+0xec4>
   12564:	mov	r3, r7
   12568:	movw	r2, #59360	; 0xe7e0
   1256c:	movt	r2, #1
   12570:	mov	r1, #0
   12574:	mov	r0, r1
   12578:	bl	11400 <error@plt>
   1257c:	mvn	r0, #0
   12580:	b	12538 <ftello64@plt+0xf10>
   12584:	bl	114c0 <__errno_location@plt>
   12588:	movw	r3, #59400	; 0xe808
   1258c:	movt	r3, #1
   12590:	movw	r2, #59088	; 0xe6d0
   12594:	movt	r2, #1
   12598:	ldr	r1, [r0]
   1259c:	mov	r0, #0
   125a0:	bl	11400 <error@plt>
   125a4:	mvn	r0, #0
   125a8:	b	12538 <ftello64@plt+0xf10>
   125ac:	mov	r0, r5
   125b0:	bl	1152c <ether_ntoa@plt>
   125b4:	mov	r2, r0
   125b8:	mov	r1, r4
   125bc:	movw	r0, #59416	; 0xe818
   125c0:	movt	r0, #1
   125c4:	bl	11310 <printf@plt>
   125c8:	mov	r0, #0
   125cc:	b	12538 <ftello64@plt+0xf10>
   125d0:	str	r4, [sp, #-8]!
   125d4:	str	lr, [sp, #4]
   125d8:	mov	r4, r1
   125dc:	str	r2, [r1, #16]
   125e0:	mov	r2, r1
   125e4:	movw	r1, #35106	; 0x8922
   125e8:	bl	18a18 <argp_parse@@Base+0xdf0>
   125ec:	cmp	r0, #0
   125f0:	blt	12614 <ftello64@plt+0xfec>
   125f4:	movw	r3, #11256	; 0x2bf8
   125f8:	movt	r3, #3
   125fc:	ldr	r0, [r3]
   12600:	cmp	r0, #0
   12604:	bne	12634 <ftello64@plt+0x100c>
   12608:	ldr	r4, [sp]
   1260c:	add	sp, sp, #4
   12610:	pop	{pc}		; (ldr pc, [sp], #4)
   12614:	bl	114c0 <__errno_location@plt>
   12618:	movw	r2, #59464	; 0xe848
   1261c:	movt	r2, #1
   12620:	ldr	r1, [r0]
   12624:	mov	r0, #0
   12628:	bl	11400 <error@plt>
   1262c:	mvn	r0, #0
   12630:	b	12608 <ftello64@plt+0xfe0>
   12634:	ldr	r2, [r4, #16]
   12638:	mov	r1, r4
   1263c:	movw	r0, #59484	; 0xe85c
   12640:	movt	r0, #1
   12644:	bl	11310 <printf@plt>
   12648:	mov	r0, #0
   1264c:	b	12608 <ftello64@plt+0xfe0>
   12650:	str	r4, [sp, #-8]!
   12654:	str	lr, [sp, #4]
   12658:	mov	r4, r1
   1265c:	str	r2, [r1, #16]
   12660:	mov	r2, r1
   12664:	movw	r1, #35102	; 0x891e
   12668:	bl	18a18 <argp_parse@@Base+0xdf0>
   1266c:	cmp	r0, #0
   12670:	blt	12694 <ftello64@plt+0x106c>
   12674:	movw	r3, #11256	; 0x2bf8
   12678:	movt	r3, #3
   1267c:	ldr	r0, [r3]
   12680:	cmp	r0, #0
   12684:	bne	126b4 <ftello64@plt+0x108c>
   12688:	ldr	r4, [sp]
   1268c:	add	sp, sp, #4
   12690:	pop	{pc}		; (ldr pc, [sp], #4)
   12694:	bl	114c0 <__errno_location@plt>
   12698:	movw	r2, #59516	; 0xe87c
   1269c:	movt	r2, #1
   126a0:	ldr	r1, [r0]
   126a4:	mov	r0, #0
   126a8:	bl	11400 <error@plt>
   126ac:	mvn	r0, #0
   126b0:	b	12688 <ftello64@plt+0x1060>
   126b4:	ldr	r2, [r4, #16]
   126b8:	mov	r1, r4
   126bc:	movw	r0, #59540	; 0xe894
   126c0:	movt	r0, #1
   126c4:	bl	11310 <printf@plt>
   126c8:	mov	r0, #0
   126cc:	b	12688 <ftello64@plt+0x1060>
   126d0:	strd	r4, [sp, #-20]!	; 0xffffffec
   126d4:	strd	r6, [sp, #8]
   126d8:	str	lr, [sp, #16]
   126dc:	sub	sp, sp, #36	; 0x24
   126e0:	mov	r7, r0
   126e4:	mov	r4, r1
   126e8:	mov	r6, r2
   126ec:	mov	r5, r3
   126f0:	ldrd	r2, [r1]
   126f4:	strd	r2, [sp]
   126f8:	ldrd	r2, [r1, #8]
   126fc:	strd	r2, [sp, #8]
   12700:	ldrd	r2, [r1, #16]
   12704:	strd	r2, [sp, #16]
   12708:	ldrd	r2, [r1, #24]
   1270c:	strd	r2, [sp, #24]
   12710:	mov	r2, sp
   12714:	movw	r1, #35091	; 0x8913
   12718:	bl	18a18 <argp_parse@@Base+0xdf0>
   1271c:	cmp	r0, #0
   12720:	blt	127b8 <ftello64@plt+0x1190>
   12724:	ldrh	r3, [sp, #16]
   12728:	orr	r3, r3, r6
   1272c:	bic	r3, r3, r5
   12730:	strh	r3, [r4, #16]
   12734:	mov	r2, r4
   12738:	movw	r1, #35092	; 0x8914
   1273c:	mov	r0, r7
   12740:	bl	18a18 <argp_parse@@Base+0xdf0>
   12744:	cmp	r0, #0
   12748:	blt	127d8 <ftello64@plt+0x11b0>
   1274c:	movw	r3, #11256	; 0x2bf8
   12750:	movt	r3, #3
   12754:	ldr	r0, [r3]
   12758:	cmp	r0, #0
   1275c:	beq	127a4 <ftello64@plt+0x117c>
   12760:	cmp	r6, #0
   12764:	bne	1282c <ftello64@plt+0x1204>
   12768:	movw	r1, #59664	; 0xe910
   1276c:	movt	r1, #1
   12770:	movw	r0, #59644	; 0xe8fc
   12774:	movt	r0, #1
   12778:	bl	11310 <printf@plt>
   1277c:	mov	r1, r4
   12780:	movw	r0, #59616	; 0xe8e0
   12784:	movt	r0, #1
   12788:	bl	11310 <printf@plt>
   1278c:	cmp	r5, #0
   12790:	bne	127f8 <ftello64@plt+0x11d0>
   12794:	movw	r0, #61080	; 0xee98
   12798:	movt	r0, #1
   1279c:	bl	11418 <puts@plt>
   127a0:	mov	r0, #0
   127a4:	add	sp, sp, #36	; 0x24
   127a8:	ldrd	r4, [sp]
   127ac:	ldrd	r6, [sp, #8]
   127b0:	add	sp, sp, #16
   127b4:	pop	{pc}		; (ldr pc, [sp], #4)
   127b8:	bl	114c0 <__errno_location@plt>
   127bc:	movw	r2, #59576	; 0xe8b8
   127c0:	movt	r2, #1
   127c4:	ldr	r1, [r0]
   127c8:	mov	r0, #0
   127cc:	bl	11400 <error@plt>
   127d0:	mvn	r0, #0
   127d4:	b	127a4 <ftello64@plt+0x117c>
   127d8:	bl	114c0 <__errno_location@plt>
   127dc:	movw	r2, #59596	; 0xe8cc
   127e0:	movt	r2, #1
   127e4:	ldr	r1, [r0]
   127e8:	mov	r0, #0
   127ec:	bl	11400 <error@plt>
   127f0:	mvn	r0, #0
   127f4:	b	127a4 <ftello64@plt+0x117c>
   127f8:	movw	r0, #59628	; 0xe8ec
   127fc:	movt	r0, #1
   12800:	bl	11310 <printf@plt>
   12804:	mov	r2, #44	; 0x2c
   12808:	mov	r1, #0
   1280c:	mov	r0, r5
   12810:	bl	11dd8 <ftello64@plt+0x7b0>
   12814:	movw	r3, #11076	; 0x2b44
   12818:	movt	r3, #3
   1281c:	ldr	r1, [r3]
   12820:	mov	r0, #39	; 0x27
   12824:	bl	11580 <putc@plt>
   12828:	b	12794 <ftello64@plt+0x116c>
   1282c:	movw	r1, #6636	; 0x19ec
   12830:	movt	r1, #2
   12834:	movw	r0, #59644	; 0xe8fc
   12838:	movt	r0, #1
   1283c:	bl	11310 <printf@plt>
   12840:	movw	r0, #59660	; 0xe90c
   12844:	movt	r0, #1
   12848:	bl	11310 <printf@plt>
   1284c:	mov	r2, #44	; 0x2c
   12850:	mov	r1, #0
   12854:	mov	r0, r6
   12858:	bl	11dd8 <ftello64@plt+0x7b0>
   1285c:	movw	r3, #11076	; 0x2b44
   12860:	movt	r3, #3
   12864:	ldr	r1, [r3]
   12868:	mov	r0, #39	; 0x27
   1286c:	bl	11580 <putc@plt>
   12870:	b	1277c <ftello64@plt+0x1154>
   12874:	strd	r4, [sp, #-12]!
   12878:	str	lr, [sp, #8]
   1287c:	sub	sp, sp, #36	; 0x24
   12880:	mov	r5, r0
   12884:	mov	r4, r1
   12888:	mov	r2, #0
   1288c:	mov	r3, #0
   12890:	strd	r2, [sp]
   12894:	strd	r2, [sp, #8]
   12898:	strd	r2, [sp, #16]
   1289c:	strd	r2, [sp, #24]
   128a0:	mov	r2, #16
   128a4:	ldr	r1, [r1]
   128a8:	mov	r0, sp
   128ac:	bl	114fc <strncpy@plt>
   128b0:	mov	r3, #0
   128b4:	strb	r3, [sp, #15]
   128b8:	ldr	r3, [r4, #4]
   128bc:	tst	r3, #8
   128c0:	bne	12964 <ftello64@plt+0x133c>
   128c4:	ldr	r3, [r4, #4]
   128c8:	tst	r3, #16
   128cc:	bne	12980 <ftello64@plt+0x1358>
   128d0:	ldr	r3, [r4, #4]
   128d4:	tst	r3, #32
   128d8:	bne	1299c <ftello64@plt+0x1374>
   128dc:	ldr	r3, [r4, #4]
   128e0:	tst	r3, #64	; 0x40
   128e4:	bne	129b8 <ftello64@plt+0x1390>
   128e8:	ldr	r3, [r4, #4]
   128ec:	tst	r3, #1024	; 0x400
   128f0:	bne	129d4 <ftello64@plt+0x13ac>
   128f4:	ldr	r3, [r4, #4]
   128f8:	tst	r3, #128	; 0x80
   128fc:	bne	129f0 <ftello64@plt+0x13c8>
   12900:	ldr	r3, [r4, #4]
   12904:	tst	r3, #256	; 0x100
   12908:	bne	12a0c <ftello64@plt+0x13e4>
   1290c:	ldr	r3, [r4, #4]
   12910:	tst	r3, #1
   12914:	bne	12a28 <ftello64@plt+0x1400>
   12918:	ldr	r2, [r4, #44]	; 0x2c
   1291c:	cmp	r2, #0
   12920:	bne	12930 <ftello64@plt+0x1308>
   12924:	ldr	r3, [r4, #48]	; 0x30
   12928:	cmp	r3, #0
   1292c:	beq	12948 <ftello64@plt+0x1320>
   12930:	ldr	r3, [r4, #48]	; 0x30
   12934:	mov	r1, sp
   12938:	mov	r0, r5
   1293c:	bl	126d0 <ftello64@plt+0x10a8>
   12940:	cmp	r0, #0
   12944:	bne	12954 <ftello64@plt+0x132c>
   12948:	ldr	r0, [r4, #4]
   1294c:	ands	r0, r0, #2
   12950:	bne	12a44 <ftello64@plt+0x141c>
   12954:	add	sp, sp, #36	; 0x24
   12958:	ldrd	r4, [sp]
   1295c:	add	sp, sp, #8
   12960:	pop	{pc}		; (ldr pc, [sp], #4)
   12964:	ldr	r2, [r4, #20]
   12968:	mov	r1, sp
   1296c:	mov	r0, r5
   12970:	bl	11ef8 <ftello64@plt+0x8d0>
   12974:	cmp	r0, #0
   12978:	bne	12954 <ftello64@plt+0x132c>
   1297c:	b	128c4 <ftello64@plt+0x129c>
   12980:	ldr	r2, [r4, #24]
   12984:	mov	r1, sp
   12988:	mov	r0, r5
   1298c:	bl	12100 <ftello64@plt+0xad8>
   12990:	cmp	r0, #0
   12994:	bne	12954 <ftello64@plt+0x132c>
   12998:	b	128d0 <ftello64@plt+0x12a8>
   1299c:	ldr	r2, [r4, #28]
   129a0:	mov	r1, sp
   129a4:	mov	r0, r5
   129a8:	bl	121dc <ftello64@plt+0xbb4>
   129ac:	cmp	r0, #0
   129b0:	beq	128dc <ftello64@plt+0x12b4>
   129b4:	b	12954 <ftello64@plt+0x132c>
   129b8:	ldr	r2, [r4, #32]
   129bc:	mov	r1, sp
   129c0:	mov	r0, r5
   129c4:	bl	123e4 <ftello64@plt+0xdbc>
   129c8:	cmp	r0, #0
   129cc:	beq	128e8 <ftello64@plt+0x12c0>
   129d0:	b	12954 <ftello64@plt+0x132c>
   129d4:	ldr	r2, [r4, #52]	; 0x34
   129d8:	mov	r1, sp
   129dc:	mov	r0, r5
   129e0:	bl	124c0 <ftello64@plt+0xe98>
   129e4:	cmp	r0, #0
   129e8:	beq	128f4 <ftello64@plt+0x12cc>
   129ec:	b	12954 <ftello64@plt+0x132c>
   129f0:	ldr	r2, [r4, #36]	; 0x24
   129f4:	mov	r1, sp
   129f8:	mov	r0, r5
   129fc:	bl	125d0 <ftello64@plt+0xfa8>
   12a00:	cmp	r0, #0
   12a04:	beq	12900 <ftello64@plt+0x12d8>
   12a08:	b	12954 <ftello64@plt+0x132c>
   12a0c:	ldr	r2, [r4, #40]	; 0x28
   12a10:	mov	r1, sp
   12a14:	mov	r0, r5
   12a18:	bl	12650 <ftello64@plt+0x1028>
   12a1c:	cmp	r0, #0
   12a20:	beq	1290c <ftello64@plt+0x12e4>
   12a24:	b	12954 <ftello64@plt+0x132c>
   12a28:	ldr	r2, [r4, #8]
   12a2c:	mov	r1, sp
   12a30:	mov	r0, r5
   12a34:	bl	17550 <ftello64@plt+0x5f28>
   12a38:	cmp	r0, #0
   12a3c:	beq	12918 <ftello64@plt+0x12f0>
   12a40:	b	12954 <ftello64@plt+0x132c>
   12a44:	ldr	r3, [r4, #12]
   12a48:	mov	r2, sp
   12a4c:	ldr	r1, [r4]
   12a50:	mov	r0, r5
   12a54:	bl	158c0 <ftello64@plt+0x4298>
   12a58:	mov	r0, #0
   12a5c:	b	12954 <ftello64@plt+0x132c>
   12a60:	str	r4, [sp, #-8]!
   12a64:	str	lr, [sp, #4]
   12a68:	ldr	r1, [r1]
   12a6c:	ldr	r0, [r0]
   12a70:	bl	112f8 <strcmp@plt>
   12a74:	ldr	r4, [sp]
   12a78:	add	sp, sp, #4
   12a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a80:	mov	r3, #4
   12a84:	movt	r3, #512	; 0x200
   12a88:	cmp	r0, r3
   12a8c:	beq	12a98 <ftello64@plt+0x1470>
   12a90:	mov	r0, r1
   12a94:	bx	lr
   12a98:	str	r4, [sp, #-8]!
   12a9c:	str	lr, [sp, #4]
   12aa0:	movw	r0, #59756	; 0xe96c
   12aa4:	movt	r0, #1
   12aa8:	bl	118dc <ftello64@plt+0x2b4>
   12aac:	ldr	r4, [sp]
   12ab0:	add	sp, sp, #4
   12ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ab8:	strd	r4, [sp, #-16]!
   12abc:	str	r6, [sp, #8]
   12ac0:	str	lr, [sp, #12]
   12ac4:	mov	r5, r0
   12ac8:	movw	r3, #8880	; 0x22b0
   12acc:	movt	r3, #3
   12ad0:	ldr	r0, [r3]
   12ad4:	cmp	r0, #0
   12ad8:	beq	12b18 <ftello64@plt+0x14f0>
   12adc:	mov	r4, r3
   12ae0:	mov	r6, r4
   12ae4:	mov	r1, r5
   12ae8:	bl	112f8 <strcmp@plt>
   12aec:	cmp	r0, #0
   12af0:	beq	12b04 <ftello64@plt+0x14dc>
   12af4:	ldr	r0, [r4, #12]!
   12af8:	cmp	r0, #0
   12afc:	bne	12ae0 <ftello64@plt+0x14b8>
   12b00:	mov	r6, r0
   12b04:	mov	r0, r6
   12b08:	ldrd	r4, [sp]
   12b0c:	ldr	r6, [sp, #8]
   12b10:	add	sp, sp, #12
   12b14:	pop	{pc}		; (ldr pc, [sp], #4)
   12b18:	mov	r6, r0
   12b1c:	b	12b04 <ftello64@plt+0x14dc>
   12b20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12b24:	strd	r6, [sp, #8]
   12b28:	str	r8, [sp, #16]
   12b2c:	str	lr, [sp, #20]
   12b30:	mov	r4, r0
   12b34:	movw	r3, #11252	; 0x2bf4
   12b38:	movt	r3, #3
   12b3c:	mov	r2, #1
   12b40:	str	r2, [r3]
   12b44:	movw	r5, #11236	; 0x2be4
   12b48:	movt	r5, #3
   12b4c:	movw	r3, #11240	; 0x2be8
   12b50:	movt	r3, #3
   12b54:	ldr	r1, [r3]
   12b58:	add	r1, r1, r2
   12b5c:	str	r1, [r3]
   12b60:	rsb	r1, r1, r1, lsl #3
   12b64:	lsl	r1, r1, #3
   12b68:	ldr	r0, [r5]
   12b6c:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   12b70:	str	r0, [r5]
   12b74:	cmp	r0, #0
   12b78:	beq	12bfc <ftello64@plt+0x15d4>
   12b7c:	movw	r2, #11236	; 0x2be4
   12b80:	movt	r2, #3
   12b84:	movw	r3, #11240	; 0x2be8
   12b88:	movt	r3, #3
   12b8c:	ldr	r3, [r3]
   12b90:	rsb	r3, r3, r3, lsl #3
   12b94:	lsl	r3, r3, #3
   12b98:	sub	r3, r3, #56	; 0x38
   12b9c:	ldr	r1, [r2]
   12ba0:	add	r0, r1, r3
   12ba4:	movw	r2, #59668	; 0xe914
   12ba8:	movt	r2, #1
   12bac:	ldrd	r6, [r2]
   12bb0:	strd	r6, [r1, r3]
   12bb4:	ldrd	r6, [r2, #8]
   12bb8:	strd	r6, [r0, #8]
   12bbc:	ldrd	r6, [r2, #16]
   12bc0:	strd	r6, [r0, #16]
   12bc4:	ldrd	r6, [r2, #24]
   12bc8:	strd	r6, [r0, #24]
   12bcc:	ldrd	r6, [r2, #32]
   12bd0:	strd	r6, [r0, #32]
   12bd4:	ldrd	r6, [r2, #40]	; 0x28
   12bd8:	strd	r6, [r0, #40]	; 0x28
   12bdc:	ldrd	r6, [r2, #48]	; 0x30
   12be0:	strd	r6, [r0, #48]	; 0x30
   12be4:	str	r4, [r1, r3]
   12be8:	ldrd	r4, [sp]
   12bec:	ldrd	r6, [sp, #8]
   12bf0:	ldr	r8, [sp, #16]
   12bf4:	add	sp, sp, #20
   12bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bfc:	bl	114c0 <__errno_location@plt>
   12c00:	movw	r2, #59776	; 0xe980
   12c04:	movt	r2, #1
   12c08:	ldr	r1, [r0]
   12c0c:	mov	r0, #1
   12c10:	bl	11400 <error@plt>
   12c14:	b	12b7c <ftello64@plt+0x1554>
   12c18:	strd	r4, [sp, #-12]!
   12c1c:	str	lr, [sp, #8]
   12c20:	sub	sp, sp, #12
   12c24:	mov	r5, r1
   12c28:	subs	r4, r0, #0
   12c2c:	beq	12c5c <ftello64@plt+0x1634>
   12c30:	ldr	r3, [r4, #4]
   12c34:	tst	r3, #8
   12c38:	bne	12c80 <ftello64@plt+0x1658>
   12c3c:	str	r5, [r4, #20]
   12c40:	ldr	r3, [r4, #4]
   12c44:	orr	r3, r3, #8
   12c48:	str	r3, [r4, #4]
   12c4c:	add	sp, sp, #12
   12c50:	ldrd	r4, [sp]
   12c54:	add	sp, sp, #8
   12c58:	pop	{pc}		; (ldr pc, [sp], #4)
   12c5c:	str	r1, [sp]
   12c60:	movw	r3, #59068	; 0xe6bc
   12c64:	movt	r3, #1
   12c68:	movw	r2, #59824	; 0xe9b0
   12c6c:	movt	r2, #1
   12c70:	mov	r1, #0
   12c74:	mov	r0, #1
   12c78:	bl	11400 <error@plt>
   12c7c:	b	12c30 <ftello64@plt+0x1608>
   12c80:	ldr	r3, [r4]
   12c84:	str	r3, [sp]
   12c88:	movw	r3, #59068	; 0xe6bc
   12c8c:	movt	r3, #1
   12c90:	movw	r2, #59860	; 0xe9d4
   12c94:	movt	r2, #1
   12c98:	mov	r1, #0
   12c9c:	mov	r0, #1
   12ca0:	bl	11400 <error@plt>
   12ca4:	b	12c3c <ftello64@plt+0x1614>
   12ca8:	strd	r4, [sp, #-12]!
   12cac:	str	lr, [sp, #8]
   12cb0:	sub	sp, sp, #12
   12cb4:	mov	r5, r1
   12cb8:	subs	r4, r0, #0
   12cbc:	beq	12cec <ftello64@plt+0x16c4>
   12cc0:	ldr	r3, [r4, #4]
   12cc4:	tst	r3, #16
   12cc8:	bne	12d10 <ftello64@plt+0x16e8>
   12ccc:	str	r5, [r4, #24]
   12cd0:	ldr	r3, [r4, #4]
   12cd4:	orr	r3, r3, #16
   12cd8:	str	r3, [r4, #4]
   12cdc:	add	sp, sp, #12
   12ce0:	ldrd	r4, [sp]
   12ce4:	add	sp, sp, #8
   12ce8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cec:	str	r1, [sp]
   12cf0:	movw	r3, #59900	; 0xe9fc
   12cf4:	movt	r3, #1
   12cf8:	movw	r2, #59824	; 0xe9b0
   12cfc:	movt	r2, #1
   12d00:	mov	r1, #0
   12d04:	mov	r0, #1
   12d08:	bl	11400 <error@plt>
   12d0c:	b	12cc0 <ftello64@plt+0x1698>
   12d10:	ldr	r3, [r4]
   12d14:	str	r3, [sp]
   12d18:	movw	r3, #59900	; 0xe9fc
   12d1c:	movt	r3, #1
   12d20:	movw	r2, #59860	; 0xe9d4
   12d24:	movt	r2, #1
   12d28:	mov	r1, #0
   12d2c:	mov	r0, #1
   12d30:	bl	11400 <error@plt>
   12d34:	b	12ccc <ftello64@plt+0x16a4>
   12d38:	strd	r4, [sp, #-12]!
   12d3c:	str	lr, [sp, #8]
   12d40:	sub	sp, sp, #12
   12d44:	mov	r5, r1
   12d48:	subs	r4, r0, #0
   12d4c:	beq	12d7c <ftello64@plt+0x1754>
   12d50:	ldr	r3, [r4, #4]
   12d54:	tst	r3, #32
   12d58:	bne	12da0 <ftello64@plt+0x1778>
   12d5c:	str	r5, [r4, #28]
   12d60:	ldr	r3, [r4, #4]
   12d64:	orr	r3, r3, #32
   12d68:	str	r3, [r4, #4]
   12d6c:	add	sp, sp, #12
   12d70:	ldrd	r4, [sp]
   12d74:	add	sp, sp, #8
   12d78:	pop	{pc}		; (ldr pc, [sp], #4)
   12d7c:	str	r1, [sp]
   12d80:	movw	r3, #59908	; 0xea04
   12d84:	movt	r3, #1
   12d88:	movw	r2, #59824	; 0xe9b0
   12d8c:	movt	r2, #1
   12d90:	mov	r1, #0
   12d94:	mov	r0, #1
   12d98:	bl	11400 <error@plt>
   12d9c:	b	12d50 <ftello64@plt+0x1728>
   12da0:	ldr	r3, [r4]
   12da4:	str	r3, [sp]
   12da8:	movw	r3, #59908	; 0xea04
   12dac:	movt	r3, #1
   12db0:	movw	r2, #59860	; 0xe9d4
   12db4:	movt	r2, #1
   12db8:	mov	r1, #0
   12dbc:	mov	r0, #1
   12dc0:	bl	11400 <error@plt>
   12dc4:	b	12d5c <ftello64@plt+0x1734>
   12dc8:	strd	r4, [sp, #-12]!
   12dcc:	str	lr, [sp, #8]
   12dd0:	sub	sp, sp, #12
   12dd4:	mov	r5, r1
   12dd8:	subs	r4, r0, #0
   12ddc:	beq	12e0c <ftello64@plt+0x17e4>
   12de0:	ldr	r3, [r4, #4]
   12de4:	tst	r3, #64	; 0x40
   12de8:	bne	12e30 <ftello64@plt+0x1808>
   12dec:	str	r5, [r4, #32]
   12df0:	ldr	r3, [r4, #4]
   12df4:	orr	r3, r3, #64	; 0x40
   12df8:	str	r3, [r4, #4]
   12dfc:	add	sp, sp, #12
   12e00:	ldrd	r4, [sp]
   12e04:	add	sp, sp, #8
   12e08:	pop	{pc}		; (ldr pc, [sp], #4)
   12e0c:	str	r1, [sp]
   12e10:	movw	r3, #59936	; 0xea20
   12e14:	movt	r3, #1
   12e18:	movw	r2, #59824	; 0xe9b0
   12e1c:	movt	r2, #1
   12e20:	mov	r1, #0
   12e24:	mov	r0, #1
   12e28:	bl	11400 <error@plt>
   12e2c:	b	12de0 <ftello64@plt+0x17b8>
   12e30:	ldr	r3, [r4]
   12e34:	str	r3, [sp]
   12e38:	movw	r3, #59936	; 0xea20
   12e3c:	movt	r3, #1
   12e40:	movw	r2, #59860	; 0xe9d4
   12e44:	movt	r2, #1
   12e48:	mov	r1, #0
   12e4c:	mov	r0, #1
   12e50:	bl	11400 <error@plt>
   12e54:	b	12dec <ftello64@plt+0x17c4>
   12e58:	strd	r4, [sp, #-12]!
   12e5c:	str	lr, [sp, #8]
   12e60:	sub	sp, sp, #12
   12e64:	mov	r5, r1
   12e68:	subs	r4, r0, #0
   12e6c:	beq	12e9c <ftello64@plt+0x1874>
   12e70:	ldr	r3, [r4, #4]
   12e74:	tst	r3, #1024	; 0x400
   12e78:	bne	12ec0 <ftello64@plt+0x1898>
   12e7c:	str	r5, [r4, #52]	; 0x34
   12e80:	ldr	r3, [r4, #4]
   12e84:	orr	r3, r3, #1024	; 0x400
   12e88:	str	r3, [r4, #4]
   12e8c:	add	sp, sp, #12
   12e90:	ldrd	r4, [sp]
   12e94:	add	sp, sp, #8
   12e98:	pop	{pc}		; (ldr pc, [sp], #4)
   12e9c:	str	r1, [sp]
   12ea0:	movw	r3, #59380	; 0xe7f4
   12ea4:	movt	r3, #1
   12ea8:	movw	r2, #59824	; 0xe9b0
   12eac:	movt	r2, #1
   12eb0:	mov	r1, #0
   12eb4:	mov	r0, #1
   12eb8:	bl	11400 <error@plt>
   12ebc:	b	12e70 <ftello64@plt+0x1848>
   12ec0:	ldr	r3, [r4]
   12ec4:	str	r3, [sp]
   12ec8:	movw	r3, #59380	; 0xe7f4
   12ecc:	movt	r3, #1
   12ed0:	movw	r2, #59860	; 0xe9d4
   12ed4:	movt	r2, #1
   12ed8:	mov	r1, #0
   12edc:	mov	r0, #1
   12ee0:	bl	11400 <error@plt>
   12ee4:	b	12e7c <ftello64@plt+0x1854>
   12ee8:	strd	r4, [sp, #-12]!
   12eec:	str	lr, [sp, #8]
   12ef0:	sub	sp, sp, #20
   12ef4:	mov	r5, r1
   12ef8:	subs	r4, r0, #0
   12efc:	beq	12f78 <ftello64@plt+0x1950>
   12f00:	ldr	r3, [r4, #4]
   12f04:	tst	r3, #128	; 0x80
   12f08:	bne	12f9c <ftello64@plt+0x1974>
   12f0c:	mov	r2, #0
   12f10:	add	r1, sp, #12
   12f14:	mov	r0, r5
   12f18:	bl	11304 <strtol@plt>
   12f1c:	str	r0, [r4, #36]	; 0x24
   12f20:	ldrb	r3, [r5]
   12f24:	cmp	r3, #0
   12f28:	beq	12f3c <ftello64@plt+0x1914>
   12f2c:	ldr	r3, [sp, #12]
   12f30:	ldrb	r3, [r3]
   12f34:	cmp	r3, #0
   12f38:	beq	12f5c <ftello64@plt+0x1934>
   12f3c:	ldr	r3, [r4]
   12f40:	str	r3, [sp]
   12f44:	mov	r3, r5
   12f48:	movw	r2, #60004	; 0xea64
   12f4c:	movt	r2, #1
   12f50:	mov	r1, #0
   12f54:	mov	r0, #1
   12f58:	bl	11400 <error@plt>
   12f5c:	ldr	r3, [r4, #4]
   12f60:	orr	r3, r3, #128	; 0x80
   12f64:	str	r3, [r4, #4]
   12f68:	add	sp, sp, #20
   12f6c:	ldrd	r4, [sp]
   12f70:	add	sp, sp, #8
   12f74:	pop	{pc}		; (ldr pc, [sp], #4)
   12f78:	str	r1, [sp]
   12f7c:	movw	r3, #59956	; 0xea34
   12f80:	movt	r3, #1
   12f84:	movw	r2, #59968	; 0xea40
   12f88:	movt	r2, #1
   12f8c:	mov	r1, #0
   12f90:	mov	r0, #1
   12f94:	bl	11400 <error@plt>
   12f98:	b	12f00 <ftello64@plt+0x18d8>
   12f9c:	ldr	r3, [r4]
   12fa0:	str	r3, [sp]
   12fa4:	movw	r3, #59956	; 0xea34
   12fa8:	movt	r3, #1
   12fac:	movw	r2, #59860	; 0xe9d4
   12fb0:	movt	r2, #1
   12fb4:	mov	r1, #0
   12fb8:	mov	r0, #1
   12fbc:	bl	11400 <error@plt>
   12fc0:	b	12f0c <ftello64@plt+0x18e4>
   12fc4:	strd	r4, [sp, #-12]!
   12fc8:	str	lr, [sp, #8]
   12fcc:	sub	sp, sp, #20
   12fd0:	mov	r5, r1
   12fd4:	subs	r4, r0, #0
   12fd8:	beq	13054 <ftello64@plt+0x1a2c>
   12fdc:	ldr	r3, [r4, #4]
   12fe0:	tst	r3, #256	; 0x100
   12fe4:	bne	13078 <ftello64@plt+0x1a50>
   12fe8:	mov	r2, #0
   12fec:	add	r1, sp, #12
   12ff0:	mov	r0, r5
   12ff4:	bl	11304 <strtol@plt>
   12ff8:	str	r0, [r4, #40]	; 0x28
   12ffc:	ldrb	r3, [r5]
   13000:	cmp	r3, #0
   13004:	beq	13018 <ftello64@plt+0x19f0>
   13008:	ldr	r3, [sp, #12]
   1300c:	ldrb	r3, [r3]
   13010:	cmp	r3, #0
   13014:	beq	13038 <ftello64@plt+0x1a10>
   13018:	ldr	r3, [r4]
   1301c:	str	r3, [sp]
   13020:	mov	r3, r5
   13024:	movw	r2, #60004	; 0xea64
   13028:	movt	r2, #1
   1302c:	mov	r1, #0
   13030:	mov	r0, #1
   13034:	bl	11400 <error@plt>
   13038:	ldr	r3, [r4, #4]
   1303c:	orr	r3, r3, #256	; 0x100
   13040:	str	r3, [r4, #4]
   13044:	add	sp, sp, #20
   13048:	ldrd	r4, [sp]
   1304c:	add	sp, sp, #8
   13050:	pop	{pc}		; (ldr pc, [sp], #4)
   13054:	str	r1, [sp]
   13058:	movw	r3, #60056	; 0xea98
   1305c:	movt	r3, #1
   13060:	movw	r2, #59968	; 0xea40
   13064:	movt	r2, #1
   13068:	mov	r1, #0
   1306c:	mov	r0, #1
   13070:	bl	11400 <error@plt>
   13074:	b	12fdc <ftello64@plt+0x19b4>
   13078:	ldr	r3, [r4]
   1307c:	str	r3, [sp]
   13080:	movw	r3, #60056	; 0xea98
   13084:	movt	r3, #1
   13088:	movw	r2, #59860	; 0xe9d4
   1308c:	movt	r2, #1
   13090:	mov	r1, #0
   13094:	mov	r0, #1
   13098:	bl	11400 <error@plt>
   1309c:	b	12fe8 <ftello64@plt+0x19c0>
   130a0:	strd	r4, [sp, #-12]!
   130a4:	str	lr, [sp, #8]
   130a8:	sub	sp, sp, #12
   130ac:	mov	r5, r1
   130b0:	subs	r4, r0, #0
   130b4:	beq	130f4 <ftello64@plt+0x1acc>
   130b8:	movw	r1, #60120	; 0xead8
   130bc:	movt	r1, #1
   130c0:	mov	r0, r5
   130c4:	bl	113ac <strcasecmp@plt>
   130c8:	cmp	r0, #0
   130cc:	bne	13110 <ftello64@plt+0x1ae8>
   130d0:	mov	r3, #2
   130d4:	strh	r3, [r4, #16]
   130d8:	ldr	r3, [r4, #4]
   130dc:	orr	r3, r3, #4
   130e0:	str	r3, [r4, #4]
   130e4:	add	sp, sp, #12
   130e8:	ldrd	r4, [sp]
   130ec:	add	sp, sp, #8
   130f0:	pop	{pc}		; (ldr pc, [sp], #4)
   130f4:	mov	r3, r1
   130f8:	movw	r2, #60072	; 0xeaa8
   130fc:	movt	r2, #1
   13100:	mov	r1, #0
   13104:	mov	r0, #1
   13108:	bl	11400 <error@plt>
   1310c:	b	130b8 <ftello64@plt+0x1a90>
   13110:	ldr	r3, [r4]
   13114:	str	r3, [sp]
   13118:	mov	r3, r5
   1311c:	movw	r2, #60128	; 0xeae0
   13120:	movt	r2, #1
   13124:	mov	r1, #0
   13128:	mov	r0, #1
   1312c:	bl	11400 <error@plt>
   13130:	b	130d8 <ftello64@plt+0x1ab0>
   13134:	cmp	r0, #0
   13138:	beq	13174 <ftello64@plt+0x1b4c>
   1313c:	ldr	r3, [r0, #4]
   13140:	orr	r3, r3, #512	; 0x200
   13144:	str	r3, [r0, #4]
   13148:	cmp	r2, #0
   1314c:	beq	1318c <ftello64@plt+0x1b64>
   13150:	movw	r3, #11084	; 0x2b4c
   13154:	movt	r3, #3
   13158:	ldr	r2, [r3, #4]
   1315c:	orr	r2, r2, r1
   13160:	str	r2, [r3, #4]
   13164:	ldr	r2, [r3, #8]
   13168:	bic	r1, r2, r1
   1316c:	str	r1, [r3, #8]
   13170:	bx	lr
   13174:	movw	r3, #11084	; 0x2b4c
   13178:	movt	r3, #3
   1317c:	ldr	r0, [r3]
   13180:	orr	r0, r0, #512	; 0x200
   13184:	str	r0, [r3]
   13188:	b	13148 <ftello64@plt+0x1b20>
   1318c:	movw	r3, #11084	; 0x2b4c
   13190:	movt	r3, #3
   13194:	ldr	r2, [r3, #8]
   13198:	orr	r2, r2, r1
   1319c:	str	r2, [r3, #8]
   131a0:	ldr	r2, [r3, #4]
   131a4:	bic	r1, r2, r1
   131a8:	str	r1, [r3, #4]
   131ac:	bx	lr
   131b0:	ldrb	r3, [r1]
   131b4:	cmp	r3, #0
   131b8:	bxeq	lr
   131bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   131c0:	strd	r6, [sp, #8]
   131c4:	strd	r8, [sp, #16]
   131c8:	str	lr, [sp, #24]
   131cc:	sub	sp, sp, #20
   131d0:	mov	r7, r0
   131d4:	mov	r4, r1
   131d8:	mov	r8, #44	; 0x2c
   131dc:	movw	r9, #60192	; 0xeb20
   131e0:	movt	r9, #1
   131e4:	b	1325c <ftello64@plt+0x1c34>
   131e8:	mov	r0, r4
   131ec:	bl	1149c <strlen@plt>
   131f0:	mov	r5, r0
   131f4:	add	r2, sp, #12
   131f8:	mov	r1, r0
   131fc:	mov	r0, r4
   13200:	bl	11c5c <ftello64@plt+0x634>
   13204:	subs	r1, r0, #0
   13208:	beq	1329c <ftello64@plt+0x1c74>
   1320c:	ldr	r2, [sp, #12]
   13210:	mov	r0, r7
   13214:	bl	13134 <ftello64@plt+0x1b0c>
   13218:	add	r4, r4, r5
   1321c:	b	13250 <ftello64@plt+0x1c28>
   13220:	str	r4, [sp, #4]
   13224:	str	r6, [sp]
   13228:	mov	r3, r6
   1322c:	mov	r2, r9
   13230:	mov	r1, #0
   13234:	mov	r0, #1
   13238:	bl	11400 <error@plt>
   1323c:	ldr	r2, [sp, #12]
   13240:	mov	r1, #0
   13244:	mov	r0, r7
   13248:	bl	13134 <ftello64@plt+0x1b0c>
   1324c:	add	r4, r5, #1
   13250:	ldrb	r3, [r4]
   13254:	cmp	r3, #0
   13258:	beq	132d0 <ftello64@plt+0x1ca8>
   1325c:	mov	r1, r8
   13260:	mov	r0, r4
   13264:	bl	114a8 <strchr@plt>
   13268:	subs	r5, r0, #0
   1326c:	beq	131e8 <ftello64@plt+0x1bc0>
   13270:	sub	r6, r5, r4
   13274:	add	r2, sp, #12
   13278:	mov	r1, r6
   1327c:	mov	r0, r4
   13280:	bl	11c5c <ftello64@plt+0x634>
   13284:	subs	r1, r0, #0
   13288:	beq	13220 <ftello64@plt+0x1bf8>
   1328c:	ldr	r2, [sp, #12]
   13290:	mov	r0, r7
   13294:	bl	13134 <ftello64@plt+0x1b0c>
   13298:	b	1324c <ftello64@plt+0x1c24>
   1329c:	str	r4, [sp, #4]
   132a0:	str	r5, [sp]
   132a4:	mov	r3, r5
   132a8:	mov	r2, r9
   132ac:	mov	r1, #0
   132b0:	mov	r0, #1
   132b4:	bl	11400 <error@plt>
   132b8:	ldr	r2, [sp, #12]
   132bc:	mov	r1, #0
   132c0:	mov	r0, r7
   132c4:	bl	13134 <ftello64@plt+0x1b0c>
   132c8:	add	r4, r4, r5
   132cc:	b	13250 <ftello64@plt+0x1c28>
   132d0:	add	sp, sp, #20
   132d4:	ldrd	r4, [sp]
   132d8:	ldrd	r6, [sp, #8]
   132dc:	ldrd	r8, [sp, #16]
   132e0:	add	sp, sp, #24
   132e4:	pop	{pc}		; (ldr pc, [sp], #4)
   132e8:	str	r4, [sp, #-8]!
   132ec:	str	lr, [sp, #4]
   132f0:	mov	r4, r0
   132f4:	bl	12d38 <ftello64@plt+0x1710>
   132f8:	mov	r2, #0
   132fc:	mov	r1, #16
   13300:	mov	r0, r4
   13304:	bl	13134 <ftello64@plt+0x1b0c>
   13308:	ldr	r4, [sp]
   1330c:	add	sp, sp, #4
   13310:	pop	{pc}		; (ldr pc, [sp], #4)
   13314:	strd	r4, [sp, #-16]!
   13318:	str	r6, [sp, #8]
   1331c:	str	lr, [sp, #12]
   13320:	subs	r5, r0, #0
   13324:	beq	13388 <ftello64@plt+0x1d60>
   13328:	movw	r3, #8880	; 0x22b0
   1332c:	movt	r3, #3
   13330:	ldr	r1, [r3]
   13334:	cmp	r1, #0
   13338:	beq	133cc <ftello64@plt+0x1da4>
   1333c:	mov	r4, r3
   13340:	mov	r0, r5
   13344:	bl	112f8 <strcmp@plt>
   13348:	cmp	r0, #0
   1334c:	beq	133a8 <ftello64@plt+0x1d80>
   13350:	ldr	r1, [r4, #12]!
   13354:	cmp	r1, #0
   13358:	bne	13340 <ftello64@plt+0x1d18>
   1335c:	ldr	r3, [r4, #8]
   13360:	cmp	r3, #0
   13364:	beq	133b0 <ftello64@plt+0x1d88>
   13368:	movw	r3, #11244	; 0x2bec
   1336c:	movt	r3, #3
   13370:	ldr	r2, [r4, #8]
   13374:	str	r2, [r3]
   13378:	ldrd	r4, [sp]
   1337c:	ldr	r6, [sp, #8]
   13380:	add	sp, sp, #12
   13384:	pop	{pc}		; (ldr pc, [sp], #4)
   13388:	movw	r3, #10996	; 0x2af4
   1338c:	movt	r3, #3
   13390:	ldr	r5, [r3]
   13394:	movw	r3, #60212	; 0xeb34
   13398:	movt	r3, #1
   1339c:	cmp	r5, #0
   133a0:	moveq	r5, r3
   133a4:	b	13328 <ftello64@plt+0x1d00>
   133a8:	cmp	r4, #0
   133ac:	bne	1335c <ftello64@plt+0x1d34>
   133b0:	mov	r3, r5
   133b4:	movw	r2, #60220	; 0xeb3c
   133b8:	movt	r2, #1
   133bc:	mov	r1, #0
   133c0:	mov	r0, #1
   133c4:	bl	11400 <error@plt>
   133c8:	b	13368 <ftello64@plt+0x1d40>
   133cc:	movw	r4, #8880	; 0x22b0
   133d0:	movt	r4, #3
   133d4:	b	1335c <ftello64@plt+0x1d34>
   133d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   133dc:	strd	r6, [sp, #8]
   133e0:	str	r8, [sp, #16]
   133e4:	str	lr, [sp, #20]
   133e8:	sub	sp, sp, #16
   133ec:	mov	r4, r0
   133f0:	mov	r3, #0
   133f4:	str	r3, [sp, #12]
   133f8:	str	r3, [sp, #8]
   133fc:	movw	r1, #60052	; 0xea94
   13400:	movt	r1, #1
   13404:	bl	115a4 <fopen64@plt>
   13408:	subs	r7, r0, #0
   1340c:	beq	13444 <ftello64@plt+0x1e1c>
   13410:	movw	r3, #35072	; 0x8900
   13414:	movt	r3, #1
   13418:	str	r3, [sp]
   1341c:	movw	r3, #39896	; 0x9bd8
   13420:	movt	r3, #1
   13424:	mov	r2, #0
   13428:	mov	r1, r2
   1342c:	ldr	r0, [pc, #468]	; 13608 <ftello64@plt+0x1fe0>
   13430:	bl	18b9c <_obstack_begin@@Base>
   13434:	movw	r6, #11084	; 0x2b4c
   13438:	movt	r6, #3
   1343c:	add	r8, r6, #12
   13440:	b	134c4 <ftello64@plt+0x1e9c>
   13444:	bl	114c0 <__errno_location@plt>
   13448:	mov	r3, r4
   1344c:	movw	r2, #60248	; 0xeb58
   13450:	movt	r2, #1
   13454:	ldr	r1, [r0]
   13458:	mov	r0, #1
   1345c:	bl	11400 <error@plt>
   13460:	b	13410 <ftello64@plt+0x1de8>
   13464:	cmp	r5, #0
   13468:	beq	134c4 <ftello64@plt+0x1e9c>
   1346c:	add	r2, r4, r5
   13470:	cmp	r4, r2
   13474:	beq	13494 <ftello64@plt+0x1e6c>
   13478:	ldrb	r3, [r4], #1
   1347c:	cmp	r3, #32
   13480:	beq	13470 <ftello64@plt+0x1e48>
   13484:	cmp	r3, #35	; 0x23
   13488:	beq	134c4 <ftello64@plt+0x1e9c>
   1348c:	cmp	r3, #9
   13490:	beq	13470 <ftello64@plt+0x1e48>
   13494:	ldr	r3, [r6, #28]
   13498:	ldr	r2, [r6, #24]
   1349c:	sub	r3, r3, r2
   134a0:	cmp	r3, r5
   134a4:	bcc	1350c <ftello64@plt+0x1ee4>
   134a8:	mov	r2, r5
   134ac:	ldr	r1, [sp, #12]
   134b0:	ldr	r0, [r6, #24]
   134b4:	bl	11364 <memcpy@plt>
   134b8:	ldr	r3, [r6, #24]
   134bc:	add	r5, r3, r5
   134c0:	str	r5, [r6, #24]
   134c4:	mov	r3, r7
   134c8:	mov	r2, #10
   134cc:	add	r1, sp, #8
   134d0:	add	r0, sp, #12
   134d4:	bl	112e0 <__getdelim@plt>
   134d8:	cmp	r0, #0
   134dc:	ble	1351c <ftello64@plt+0x1ef4>
   134e0:	ldr	r4, [sp, #12]
   134e4:	mov	r0, r4
   134e8:	bl	1149c <strlen@plt>
   134ec:	cmp	r0, #0
   134f0:	beq	134c4 <ftello64@plt+0x1e9c>
   134f4:	sub	r5, r0, #1
   134f8:	ldrb	r3, [r4, r5]
   134fc:	cmp	r3, #10
   13500:	movne	r5, r0
   13504:	bne	1346c <ftello64@plt+0x1e44>
   13508:	b	13464 <ftello64@plt+0x1e3c>
   1350c:	mov	r1, r5
   13510:	mov	r0, r8
   13514:	bl	18c04 <_obstack_newchunk@@Base>
   13518:	b	134a8 <ftello64@plt+0x1e80>
   1351c:	ldr	r0, [sp, #12]
   13520:	bl	18900 <argp_parse@@Base+0xcd8>
   13524:	mov	r0, r7
   13528:	bl	11520 <fclose@plt>
   1352c:	movw	r3, #11084	; 0x2b4c
   13530:	movt	r3, #3
   13534:	ldr	r2, [r3, #28]
   13538:	ldr	r3, [r3, #24]
   1353c:	cmp	r2, r3
   13540:	beq	135e0 <ftello64@plt+0x1fb8>
   13544:	movw	r3, #11084	; 0x2b4c
   13548:	movt	r3, #3
   1354c:	ldr	r2, [r3, #24]
   13550:	add	r1, r2, #1
   13554:	str	r1, [r3, #24]
   13558:	mov	r1, #0
   1355c:	strb	r1, [r2]
   13560:	ldr	r0, [r3, #20]
   13564:	ldr	r3, [r3, #24]
   13568:	cmp	r3, r0
   1356c:	beq	135f0 <ftello64@plt+0x1fc8>
   13570:	movw	r2, #11084	; 0x2b4c
   13574:	movt	r2, #3
   13578:	ldr	r1, [r2, #36]	; 0x24
   1357c:	add	r3, r3, r1
   13580:	bic	r3, r3, r1
   13584:	str	r3, [r2, #24]
   13588:	ldr	r1, [r2, #16]
   1358c:	ldr	r2, [r2, #28]
   13590:	sub	r3, r3, r1
   13594:	sub	r1, r2, r1
   13598:	cmp	r3, r1
   1359c:	bls	135ac <ftello64@plt+0x1f84>
   135a0:	movw	r3, #11084	; 0x2b4c
   135a4:	movt	r3, #3
   135a8:	str	r2, [r3, #24]
   135ac:	movw	r3, #11084	; 0x2b4c
   135b0:	movt	r3, #3
   135b4:	ldr	r2, [r3, #24]
   135b8:	str	r2, [r3, #20]
   135bc:	movw	r3, #11244	; 0x2bec
   135c0:	movt	r3, #3
   135c4:	str	r0, [r3]
   135c8:	add	sp, sp, #16
   135cc:	ldrd	r4, [sp]
   135d0:	ldrd	r6, [sp, #8]
   135d4:	ldr	r8, [sp, #16]
   135d8:	add	sp, sp, #20
   135dc:	pop	{pc}		; (ldr pc, [sp], #4)
   135e0:	mov	r1, #1
   135e4:	ldr	r0, [pc, #28]	; 13608 <ftello64@plt+0x1fe0>
   135e8:	bl	18c04 <_obstack_newchunk@@Base>
   135ec:	b	13544 <ftello64@plt+0x1f1c>
   135f0:	movw	r2, #11084	; 0x2b4c
   135f4:	movt	r2, #3
   135f8:	ldrb	r1, [r2, #52]	; 0x34
   135fc:	orr	r1, r1, #2
   13600:	strb	r1, [r2, #52]	; 0x34
   13604:	b	13570 <ftello64@plt+0x1f48>
   13608:	andeq	r2, r3, r8, asr fp
   1360c:	cmp	r0, #0
   13610:	beq	136b8 <ftello64@plt+0x2090>
   13614:	movw	r3, #11084	; 0x2b4c
   13618:	movt	r3, #3
   1361c:	ldr	r3, [r3]
   13620:	cmp	r3, #0
   13624:	beq	13690 <ftello64@plt+0x2068>
   13628:	ldr	r2, [r0, #4]
   1362c:	orr	r3, r2, r3
   13630:	str	r3, [r0, #4]
   13634:	movw	r3, #11084	; 0x2b4c
   13638:	movt	r3, #3
   1363c:	mov	r2, #0
   13640:	str	r2, [r3]
   13644:	movw	r3, #11084	; 0x2b4c
   13648:	movt	r3, #3
   1364c:	ldr	r2, [r3, #8]
   13650:	ldr	r3, [r3, #4]
   13654:	orrs	r1, r2, r3
   13658:	bne	13660 <ftello64@plt+0x2038>
   1365c:	bx	lr
   13660:	ldr	r1, [r0, #44]	; 0x2c
   13664:	orr	r2, r1, r2
   13668:	str	r2, [r0, #44]	; 0x2c
   1366c:	ldr	r2, [r0, #48]	; 0x30
   13670:	orr	r3, r2, r3
   13674:	str	r3, [r0, #48]	; 0x30
   13678:	movw	r3, #11084	; 0x2b4c
   1367c:	movt	r3, #3
   13680:	mov	r2, #0
   13684:	str	r2, [r3, #4]
   13688:	str	r2, [r3, #8]
   1368c:	bx	lr
   13690:	ldr	r3, [r0, #4]
   13694:	cmp	r3, #0
   13698:	bne	13644 <ftello64@plt+0x201c>
   1369c:	mov	r3, #2
   136a0:	str	r3, [r0, #4]
   136a4:	movw	r3, #11244	; 0x2bec
   136a8:	movt	r3, #3
   136ac:	ldr	r3, [r3]
   136b0:	str	r3, [r0, #12]
   136b4:	b	13644 <ftello64@plt+0x201c>
   136b8:	bx	lr
   136bc:	strd	r4, [sp, #-16]!
   136c0:	str	r6, [sp, #8]
   136c4:	str	lr, [sp, #12]
   136c8:	ldr	ip, [r2, #28]
   136cc:	ldr	lr, [ip]
   136d0:	cmp	r0, #108	; 0x6c
   136d4:	beq	13890 <ftello64@plt+0x2268>
   136d8:	mov	r4, r2
   136dc:	mov	r5, r1
   136e0:	ble	13730 <ftello64@plt+0x2108>
   136e4:	cmp	r0, #256	; 0x100
   136e8:	beq	138ac <ftello64@plt+0x2284>
   136ec:	ble	137cc <ftello64@plt+0x21a4>
   136f0:	movw	r2, #258	; 0x102
   136f4:	cmp	r0, r2
   136f8:	beq	138f0 <ftello64@plt+0x22c8>
   136fc:	blt	138bc <ftello64@plt+0x2294>
   13700:	movw	r2, #259	; 0x103
   13704:	cmp	r0, r2
   13708:	beq	13908 <ftello64@plt+0x22e0>
   1370c:	mov	r1, #3
   13710:	movt	r1, #256	; 0x100
   13714:	cmp	r0, r1
   13718:	movne	r0, #7
   1371c:	bne	13798 <ftello64@plt+0x2170>
   13720:	ldr	r3, [r4, #32]
   13724:	str	ip, [r3]
   13728:	mov	r0, #0
   1372c:	b	13798 <ftello64@plt+0x2170>
   13730:	cmp	r0, #77	; 0x4d
   13734:	beq	1386c <ftello64@plt+0x2244>
   13738:	ble	1377c <ftello64@plt+0x2154>
   1373c:	cmp	r0, #98	; 0x62
   13740:	beq	13848 <ftello64@plt+0x2220>
   13744:	ble	137a8 <ftello64@plt+0x2180>
   13748:	cmp	r0, #100	; 0x64
   1374c:	beq	13834 <ftello64@plt+0x220c>
   13750:	cmp	r0, #105	; 0x69
   13754:	movne	r0, #7
   13758:	bne	13798 <ftello64@plt+0x2170>
   1375c:	mov	r0, lr
   13760:	bl	1360c <ftello64@plt+0x1fe4>
   13764:	mov	r0, r5
   13768:	bl	12b20 <ftello64@plt+0x14f8>
   1376c:	ldr	r3, [r4, #28]
   13770:	str	r0, [r3]
   13774:	mov	r0, #0
   13778:	b	13798 <ftello64@plt+0x2170>
   1377c:	cmp	r0, #66	; 0x42
   13780:	beq	13848 <ftello64@plt+0x2220>
   13784:	cmp	r0, #70	; 0x46
   13788:	beq	1385c <ftello64@plt+0x2234>
   1378c:	cmp	r0, #65	; 0x41
   13790:	movne	r0, #7
   13794:	beq	13824 <ftello64@plt+0x21fc>
   13798:	ldrd	r4, [sp]
   1379c:	ldr	r6, [sp, #8]
   137a0:	add	sp, sp, #12
   137a4:	pop	{pc}		; (ldr pc, [sp], #4)
   137a8:	cmp	r0, #97	; 0x61
   137ac:	movne	r0, #7
   137b0:	bne	13798 <ftello64@plt+0x2170>
   137b4:	movw	r3, #11248	; 0x2bf0
   137b8:	movt	r3, #3
   137bc:	mov	r2, #1
   137c0:	str	r2, [r3]
   137c4:	mov	r0, #0
   137c8:	b	13798 <ftello64@plt+0x2170>
   137cc:	cmp	r0, #112	; 0x70
   137d0:	beq	13834 <ftello64@plt+0x220c>
   137d4:	ble	13808 <ftello64@plt+0x21e0>
   137d8:	cmp	r0, #115	; 0x73
   137dc:	beq	1387c <ftello64@plt+0x2254>
   137e0:	cmp	r0, #118	; 0x76
   137e4:	movne	r0, #7
   137e8:	bne	13798 <ftello64@plt+0x2170>
   137ec:	movw	r3, #11256	; 0x2bf8
   137f0:	movt	r3, #3
   137f4:	ldr	r2, [r3]
   137f8:	add	r2, r2, #1
   137fc:	str	r2, [r3]
   13800:	mov	r0, #0
   13804:	b	13798 <ftello64@plt+0x2170>
   13808:	cmp	r0, #109	; 0x6d
   1380c:	movne	r0, #7
   13810:	bne	13798 <ftello64@plt+0x2170>
   13814:	mov	r0, lr
   13818:	bl	12ca8 <ftello64@plt+0x1680>
   1381c:	mov	r0, #0
   13820:	b	13798 <ftello64@plt+0x2170>
   13824:	mov	r0, lr
   13828:	bl	12c18 <ftello64@plt+0x15f0>
   1382c:	mov	r0, #0
   13830:	b	13798 <ftello64@plt+0x2170>
   13834:	mov	r1, r5
   13838:	mov	r0, lr
   1383c:	bl	132e8 <ftello64@plt+0x1cc0>
   13840:	mov	r0, #0
   13844:	b	13798 <ftello64@plt+0x2170>
   13848:	mov	r1, r5
   1384c:	mov	r0, lr
   13850:	bl	12dc8 <ftello64@plt+0x17a0>
   13854:	mov	r0, #0
   13858:	b	13798 <ftello64@plt+0x2170>
   1385c:	mov	r0, lr
   13860:	bl	131b0 <ftello64@plt+0x1b88>
   13864:	mov	r0, #0
   13868:	b	13798 <ftello64@plt+0x2170>
   1386c:	mov	r0, lr
   13870:	bl	12ee8 <ftello64@plt+0x18c0>
   13874:	mov	r0, #0
   13878:	b	13798 <ftello64@plt+0x2170>
   1387c:	movw	r0, #60276	; 0xeb74
   13880:	movt	r0, #1
   13884:	bl	13314 <ftello64@plt+0x1cec>
   13888:	mov	r0, #0
   1388c:	b	13798 <ftello64@plt+0x2170>
   13890:	movw	r3, #11260	; 0x2bfc
   13894:	movt	r3, #3
   13898:	ldr	r2, [r3]
   1389c:	add	r2, r2, #1
   138a0:	str	r2, [r3]
   138a4:	mov	r0, #0
   138a8:	b	13798 <ftello64@plt+0x2170>
   138ac:	mov	r0, lr
   138b0:	bl	12fc4 <ftello64@plt+0x199c>
   138b4:	mov	r0, #0
   138b8:	b	13798 <ftello64@plt+0x2170>
   138bc:	cmp	r1, #0
   138c0:	beq	138d0 <ftello64@plt+0x22a8>
   138c4:	ldrb	r3, [r1]
   138c8:	cmp	r3, #64	; 0x40
   138cc:	beq	138e0 <ftello64@plt+0x22b8>
   138d0:	mov	r0, r5
   138d4:	bl	13314 <ftello64@plt+0x1cec>
   138d8:	mov	r0, #0
   138dc:	b	13798 <ftello64@plt+0x2170>
   138e0:	add	r0, r1, #1
   138e4:	bl	133d8 <ftello64@plt+0x1db0>
   138e8:	mov	r0, #0
   138ec:	b	13798 <ftello64@plt+0x2170>
   138f0:	mov	r2, #0
   138f4:	mov	r1, #65	; 0x41
   138f8:	mov	r0, lr
   138fc:	bl	13134 <ftello64@plt+0x1b0c>
   13900:	mov	r0, #0
   13904:	b	13798 <ftello64@plt+0x2170>
   13908:	mov	r2, #1
   1390c:	mov	r1, r2
   13910:	mov	r0, lr
   13914:	bl	13134 <ftello64@plt+0x1b0c>
   13918:	mov	r0, #0
   1391c:	b	13798 <ftello64@plt+0x2170>
   13920:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13924:	strd	r6, [sp, #8]
   13928:	str	r8, [sp, #16]
   1392c:	str	lr, [sp, #20]
   13930:	sub	sp, sp, #16
   13934:	mov	r5, r0
   13938:	mov	r6, r1
   1393c:	movw	r3, #11236	; 0x2be4
   13940:	movt	r3, #3
   13944:	ldr	r3, [r3]
   13948:	str	r3, [sp, #8]
   1394c:	mov	r0, #0
   13950:	bl	13314 <ftello64@plt+0x1cec>
   13954:	movw	r3, #11288	; 0x2c18
   13958:	movt	r3, #3
   1395c:	movw	r2, #60284	; 0xeb7c
   13960:	movt	r2, #1
   13964:	str	r2, [r3]
   13968:	movw	r4, #8880	; 0x22b0
   1396c:	movt	r4, #3
   13970:	add	r1, r4, #144	; 0x90
   13974:	movw	r0, #60308	; 0xeb94
   13978:	movt	r0, #1
   1397c:	bl	18814 <argp_parse@@Base+0xbec>
   13980:	movw	r2, #11084	; 0x2b4c
   13984:	movt	r2, #3
   13988:	movw	r3, #10900	; 0x2a94
   1398c:	movt	r3, #3
   13990:	add	ip, r2, #56	; 0x38
   13994:	ldrd	r0, [r3]
   13998:	strd	r0, [r2, #56]	; 0x38
   1399c:	ldrd	r2, [r3, #8]
   139a0:	strd	r2, [ip, #8]
   139a4:	str	ip, [r4, #168]	; 0xa8
   139a8:	movw	r3, #10992	; 0x2af0
   139ac:	movt	r3, #3
   139b0:	ldr	r3, [r3]
   139b4:	str	r3, [r4, #160]	; 0xa0
   139b8:	add	r3, sp, #8
   139bc:	str	r3, [sp, #4]
   139c0:	add	r3, sp, #12
   139c4:	str	r3, [sp]
   139c8:	mov	r3, #8
   139cc:	mov	r2, r6
   139d0:	mov	r1, r5
   139d4:	add	r0, r4, #152	; 0x98
   139d8:	bl	17c28 <argp_parse@@Base>
   139dc:	ldr	r0, [sp, #8]
   139e0:	bl	1360c <ftello64@plt+0x1fe4>
   139e4:	ldr	r1, [sp, #12]
   139e8:	cmp	r1, r5
   139ec:	blt	13a1c <ftello64@plt+0x23f4>
   139f0:	movw	r3, #11236	; 0x2be4
   139f4:	movt	r3, #3
   139f8:	ldr	r3, [r3]
   139fc:	cmp	r3, #0
   13a00:	beq	13a58 <ftello64@plt+0x2430>
   13a04:	add	sp, sp, #16
   13a08:	ldrd	r4, [sp]
   13a0c:	ldrd	r6, [sp, #8]
   13a10:	ldr	r8, [sp, #16]
   13a14:	add	sp, sp, #20
   13a18:	pop	{pc}		; (ldr pc, [sp], #4)
   13a1c:	add	r2, r6, r1, lsl #2
   13a20:	sub	r1, r5, r1
   13a24:	add	r0, sp, #8
   13a28:	bl	170e8 <ftello64@plt+0x5ac0>
   13a2c:	cmp	r0, #0
   13a30:	beq	13a40 <ftello64@plt+0x2418>
   13a34:	ldr	r0, [sp, #8]
   13a38:	bl	1360c <ftello64@plt+0x1fe4>
   13a3c:	b	139f0 <ftello64@plt+0x23c8>
   13a40:	movw	r2, #60320	; 0xeba0
   13a44:	movt	r2, #1
   13a48:	mov	r1, #0
   13a4c:	mov	r0, #1
   13a50:	bl	11400 <error@plt>
   13a54:	b	13a34 <ftello64@plt+0x240c>
   13a58:	movw	r3, #10896	; 0x2a90
   13a5c:	movt	r3, #3
   13a60:	ldr	r3, [r3]
   13a64:	blx	r3
   13a68:	subs	r4, r0, #0
   13a6c:	beq	13a90 <ftello64@plt+0x2468>
   13a70:	add	r4, r4, #8
   13a74:	movw	r6, #11236	; 0x2be4
   13a78:	movt	r6, #3
   13a7c:	movw	r5, #11240	; 0x2be8
   13a80:	movt	r5, #3
   13a84:	movw	r8, #59776	; 0xe980
   13a88:	movt	r8, #1
   13a8c:	b	13b4c <ftello64@plt+0x2524>
   13a90:	movw	r2, #60340	; 0xebb4
   13a94:	movt	r2, #1
   13a98:	mov	r1, #0
   13a9c:	mov	r0, #1
   13aa0:	bl	11400 <error@plt>
   13aa4:	b	13a70 <ftello64@plt+0x2448>
   13aa8:	ldr	r1, [r5]
   13aac:	add	r1, r1, #1
   13ab0:	str	r1, [r5]
   13ab4:	rsb	r1, r1, r1, lsl #3
   13ab8:	lsl	r1, r1, #3
   13abc:	ldr	r0, [r6]
   13ac0:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   13ac4:	str	r0, [r6]
   13ac8:	cmp	r0, #0
   13acc:	beq	13b94 <ftello64@plt+0x256c>
   13ad0:	ldr	r1, [r5]
   13ad4:	rsb	r1, r1, r1, lsl #3
   13ad8:	lsl	r1, r1, #3
   13adc:	sub	r1, r1, #56	; 0x38
   13ae0:	ldr	lr, [r6]
   13ae4:	add	ip, lr, r1
   13ae8:	movw	r0, #59668	; 0xe914
   13aec:	movt	r0, #1
   13af0:	ldrd	r2, [r0]
   13af4:	strd	r2, [lr, r1]
   13af8:	ldrd	r2, [r0, #8]
   13afc:	strd	r2, [ip, #8]
   13b00:	ldrd	r2, [r0, #16]
   13b04:	strd	r2, [ip, #16]
   13b08:	ldrd	r2, [r0, #24]
   13b0c:	strd	r2, [ip, #24]
   13b10:	ldrd	r2, [r0, #32]
   13b14:	strd	r2, [ip, #32]
   13b18:	ldrd	r2, [r0, #40]	; 0x28
   13b1c:	strd	r2, [ip, #40]	; 0x28
   13b20:	ldrd	r2, [r0, #48]	; 0x30
   13b24:	strd	r2, [ip, #48]	; 0x30
   13b28:	ldr	r3, [r7, #-4]
   13b2c:	str	r3, [lr, r1]
   13b30:	mov	r3, #2
   13b34:	str	r3, [ip, #4]
   13b38:	movw	r3, #11244	; 0x2bec
   13b3c:	movt	r3, #3
   13b40:	ldr	r3, [r3]
   13b44:	str	r3, [ip, #12]
   13b48:	add	r4, r4, #8
   13b4c:	mov	r7, r4
   13b50:	ldr	r3, [r4, #-8]
   13b54:	cmp	r3, #0
   13b58:	bne	13aa8 <ftello64@plt+0x2480>
   13b5c:	ldr	r3, [r4, #-4]
   13b60:	cmp	r3, #0
   13b64:	bne	13aa8 <ftello64@plt+0x2480>
   13b68:	movw	r1, #11240	; 0x2be8
   13b6c:	movt	r1, #3
   13b70:	movw	r0, #11236	; 0x2be4
   13b74:	movt	r0, #3
   13b78:	movw	r3, #10848	; 0x2a60
   13b7c:	movt	r3, #1
   13b80:	mov	r2, #56	; 0x38
   13b84:	ldr	r1, [r1]
   13b88:	ldr	r0, [r0]
   13b8c:	bl	115b0 <qsort@plt>
   13b90:	b	13a04 <ftello64@plt+0x23dc>
   13b94:	bl	114c0 <__errno_location@plt>
   13b98:	mov	r2, r8
   13b9c:	ldr	r1, [r0]
   13ba0:	mov	r0, #1
   13ba4:	bl	11400 <error@plt>
   13ba8:	b	13ad0 <ftello64@plt+0x24a8>
   13bac:	bx	lr
   13bb0:	str	r4, [sp, #-8]!
   13bb4:	str	lr, [sp, #4]
   13bb8:	cmp	r1, #0
   13bbc:	movle	r0, #0
   13bc0:	bgt	13bc8 <ftello64@plt+0x25a0>
   13bc4:	bl	11484 <exit@plt>
   13bc8:	mov	r3, r2
   13bcc:	mov	r2, #0
   13bd0:	mov	r1, r2
   13bd4:	ldr	r0, [r3]
   13bd8:	bl	11490 <strtoul@plt>
   13bdc:	b	13bc4 <ftello64@plt+0x259c>
   13be0:	strd	r4, [sp, #-16]!
   13be4:	str	r6, [sp, #8]
   13be8:	str	lr, [sp, #12]
   13bec:	mov	r4, r0
   13bf0:	ldr	r0, [r0]
   13bf4:	bl	115ec <if_nametoindex@plt>
   13bf8:	subs	r5, r0, #0
   13bfc:	beq	13c48 <ftello64@plt+0x2620>
   13c00:	mov	r1, r5
   13c04:	movw	r0, #65500	; 0xffdc
   13c08:	movt	r0, #1
   13c0c:	bl	11310 <printf@plt>
   13c10:	movw	r3, #9492	; 0x2514
   13c14:	movt	r3, #3
   13c18:	ldr	r2, [r3]
   13c1c:	ldr	r3, [r2]
   13c20:	add	r0, r3, r0
   13c24:	str	r0, [r2]
   13c28:	movw	r3, #11264	; 0x2c00
   13c2c:	movt	r3, #3
   13c30:	mov	r2, #1
   13c34:	str	r2, [r3]
   13c38:	ldrd	r4, [sp]
   13c3c:	ldr	r6, [sp, #8]
   13c40:	add	sp, sp, #12
   13c44:	pop	{pc}		; (ldr pc, [sp], #4)
   13c48:	bl	114c0 <__errno_location@plt>
   13c4c:	ldr	r3, [r4]
   13c50:	movw	r2, #65456	; 0xffb0
   13c54:	movt	r2, #1
   13c58:	ldr	r1, [r0]
   13c5c:	mov	r0, #1
   13c60:	bl	11400 <error@plt>
   13c64:	b	13c00 <ftello64@plt+0x25d8>
   13c68:	str	r4, [sp, #-8]!
   13c6c:	str	lr, [sp, #4]
   13c70:	mov	r0, r1
   13c74:	cmp	r1, #9
   13c78:	beq	13cc4 <ftello64@plt+0x269c>
   13c7c:	cmp	r1, #10
   13c80:	bne	13cf0 <ftello64@plt+0x26c8>
   13c84:	movw	r3, #9492	; 0x2514
   13c88:	movt	r3, #3
   13c8c:	ldr	r3, [r3]
   13c90:	mov	r2, #0
   13c94:	str	r2, [r3]
   13c98:	movw	r3, #11276	; 0x2c0c
   13c9c:	movt	r3, #3
   13ca0:	ldr	r1, [r3]
   13ca4:	bl	11580 <putc@plt>
   13ca8:	movw	r3, #11264	; 0x2c00
   13cac:	movt	r3, #3
   13cb0:	mov	r2, #1
   13cb4:	str	r2, [r3]
   13cb8:	ldr	r4, [sp]
   13cbc:	add	sp, sp, #4
   13cc0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cc4:	movw	r3, #9492	; 0x2514
   13cc8:	movt	r3, #3
   13ccc:	ldr	r2, [r3]
   13cd0:	ldr	r3, [r2]
   13cd4:	add	r1, r3, #7
   13cd8:	cmp	r3, #0
   13cdc:	movlt	r3, r1
   13ce0:	bic	r3, r3, #7
   13ce4:	add	r3, r3, #8
   13ce8:	str	r3, [r2]
   13cec:	b	13c98 <ftello64@plt+0x2670>
   13cf0:	movw	r3, #9492	; 0x2514
   13cf4:	movt	r3, #3
   13cf8:	ldr	r2, [r3]
   13cfc:	ldr	r3, [r2]
   13d00:	add	r3, r3, #1
   13d04:	str	r3, [r2]
   13d08:	b	13c98 <ftello64@plt+0x2670>
   13d0c:	str	r4, [sp, #-8]!
   13d10:	str	lr, [sp, #4]
   13d14:	mov	r1, #10
   13d18:	bl	13c68 <ftello64@plt+0x2640>
   13d1c:	ldr	r4, [sp]
   13d20:	add	sp, sp, #4
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)
   13d28:	str	r4, [sp, #-8]!
   13d2c:	str	lr, [sp, #4]
   13d30:	mov	r1, #9
   13d34:	bl	13c68 <ftello64@plt+0x2640>
   13d38:	ldr	r4, [sp]
   13d3c:	add	sp, sp, #4
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)
   13d44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13d48:	strd	r6, [sp, #8]
   13d4c:	str	r8, [sp, #16]
   13d50:	str	lr, [sp, #20]
   13d54:	mov	r7, r0
   13d58:	mov	r4, r1
   13d5c:	mov	r5, r2
   13d60:	bl	114c0 <__errno_location@plt>
   13d64:	mov	r3, #0
   13d68:	str	r3, [r0]
   13d6c:	cmp	r4, r3
   13d70:	bgt	13dec <ftello64@plt+0x27c4>
   13d74:	movw	r3, #9492	; 0x2514
   13d78:	movt	r3, #3
   13d7c:	ldr	r3, [r3]
   13d80:	ldr	r4, [r3]
   13d84:	add	r3, r4, #7
   13d88:	cmp	r4, #0
   13d8c:	movlt	r4, r3
   13d90:	bic	r4, r4, #7
   13d94:	add	r4, r4, #8
   13d98:	movw	r3, #9492	; 0x2514
   13d9c:	movt	r3, #3
   13da0:	ldr	r3, [r3]
   13da4:	ldr	r3, [r3]
   13da8:	cmp	r4, r3
   13dac:	ble	13dd8 <ftello64@plt+0x27b0>
   13db0:	mov	r6, #32
   13db4:	movw	r5, #9492	; 0x2514
   13db8:	movt	r5, #3
   13dbc:	mov	r1, r6
   13dc0:	mov	r0, r7
   13dc4:	bl	13c68 <ftello64@plt+0x2640>
   13dc8:	ldr	r3, [r5]
   13dcc:	ldr	r3, [r3]
   13dd0:	cmp	r3, r4
   13dd4:	blt	13dbc <ftello64@plt+0x2794>
   13dd8:	ldrd	r4, [sp]
   13ddc:	ldrd	r6, [sp, #8]
   13de0:	ldr	r8, [sp, #16]
   13de4:	add	sp, sp, #20
   13de8:	pop	{pc}		; (ldr pc, [sp], #4)
   13dec:	mov	r2, r3
   13df0:	mov	r1, r3
   13df4:	ldr	r0, [r5]
   13df8:	bl	11304 <strtol@plt>
   13dfc:	subs	r4, r0, #0
   13e00:	bgt	13d98 <ftello64@plt+0x2770>
   13e04:	b	13d74 <ftello64@plt+0x274c>
   13e08:	strd	r4, [sp, #-16]!
   13e0c:	str	r6, [sp, #8]
   13e10:	str	lr, [sp, #12]
   13e14:	mov	r5, r0
   13e18:	mov	r4, r1
   13e1c:	ldrb	r1, [r1]
   13e20:	cmp	r1, #0
   13e24:	beq	13e3c <ftello64@plt+0x2814>
   13e28:	mov	r0, r5
   13e2c:	bl	13c68 <ftello64@plt+0x2640>
   13e30:	ldrb	r1, [r4, #1]!
   13e34:	cmp	r1, #0
   13e38:	bne	13e28 <ftello64@plt+0x2800>
   13e3c:	ldrd	r4, [sp]
   13e40:	ldr	r6, [sp, #8]
   13e44:	add	sp, sp, #12
   13e48:	pop	{pc}		; (ldr pc, [sp], #4)
   13e4c:	strd	r4, [sp, #-16]!
   13e50:	str	r6, [sp, #8]
   13e54:	str	lr, [sp, #12]
   13e58:	mov	r4, r0
   13e5c:	cmp	r1, #0
   13e60:	ldreq	r5, [r0]
   13e64:	ldrne	r5, [r2]
   13e68:	mov	r0, r5
   13e6c:	bl	12ab8 <ftello64@plt+0x1490>
   13e70:	subs	r6, r0, #0
   13e74:	beq	13e94 <ftello64@plt+0x286c>
   13e78:	ldr	r1, [r6, #4]
   13e7c:	mov	r0, r4
   13e80:	bl	13e08 <ftello64@plt+0x27e0>
   13e84:	ldrd	r4, [sp]
   13e88:	ldr	r6, [sp, #8]
   13e8c:	add	sp, sp, #12
   13e90:	pop	{pc}		; (ldr pc, [sp], #4)
   13e94:	bl	114c0 <__errno_location@plt>
   13e98:	mov	r3, r5
   13e9c:	movw	r2, #65504	; 0xffe0
   13ea0:	movt	r2, #1
   13ea4:	ldr	r1, [r0]
   13ea8:	mov	r0, #1
   13eac:	bl	11400 <error@plt>
   13eb0:	b	13e78 <ftello64@plt+0x2850>
   13eb4:	strd	r4, [sp, #-16]!
   13eb8:	str	r6, [sp, #8]
   13ebc:	str	lr, [sp, #12]
   13ec0:	mov	r4, r0
   13ec4:	cmp	r1, #0
   13ec8:	ldreq	r5, [r0]
   13ecc:	ldrne	r5, [r2]
   13ed0:	mov	r0, r5
   13ed4:	bl	12ab8 <ftello64@plt+0x1490>
   13ed8:	subs	r6, r0, #0
   13edc:	beq	13efc <ftello64@plt+0x28d4>
   13ee0:	ldr	r1, [r6, #8]
   13ee4:	mov	r0, r4
   13ee8:	bl	13e08 <ftello64@plt+0x27e0>
   13eec:	ldrd	r4, [sp]
   13ef0:	ldr	r6, [sp, #8]
   13ef4:	add	sp, sp, #12
   13ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   13efc:	bl	114c0 <__errno_location@plt>
   13f00:	mov	r3, r5
   13f04:	movw	r2, #65504	; 0xffe0
   13f08:	movt	r2, #1
   13f0c:	ldr	r1, [r0]
   13f10:	mov	r0, #1
   13f14:	bl	11400 <error@plt>
   13f18:	b	13ee0 <ftello64@plt+0x28b8>
   13f1c:	str	r4, [sp, #-8]!
   13f20:	str	lr, [sp, #4]
   13f24:	movw	r3, #11196	; 0x2bbc
   13f28:	movt	r3, #3
   13f2c:	ldr	r1, [r3]
   13f30:	bl	13e08 <ftello64@plt+0x27e0>
   13f34:	ldr	r4, [sp]
   13f38:	add	sp, sp, #4
   13f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   13f40:	str	r4, [sp, #-8]!
   13f44:	str	lr, [sp, #4]
   13f48:	ldr	r1, [r0]
   13f4c:	bl	13e08 <ftello64@plt+0x27e0>
   13f50:	ldr	r4, [sp]
   13f54:	add	sp, sp, #4
   13f58:	pop	{pc}		; (ldr pc, [sp], #4)
   13f5c:	str	r4, [sp, #-8]!
   13f60:	str	lr, [sp, #4]
   13f64:	movw	r1, #65528	; 0xfff8
   13f68:	movt	r1, #1
   13f6c:	bl	13e08 <ftello64@plt+0x27e0>
   13f70:	ldr	r4, [sp]
   13f74:	add	sp, sp, #4
   13f78:	pop	{pc}		; (ldr pc, [sp], #4)
   13f7c:	str	r4, [sp, #-8]!
   13f80:	str	lr, [sp, #4]
   13f84:	movw	r1, #65528	; 0xfff8
   13f88:	movt	r1, #1
   13f8c:	bl	13e08 <ftello64@plt+0x27e0>
   13f90:	ldr	r4, [sp]
   13f94:	add	sp, sp, #4
   13f98:	pop	{pc}		; (ldr pc, [sp], #4)
   13f9c:	strd	r4, [sp, #-16]!
   13fa0:	str	r6, [sp, #8]
   13fa4:	str	lr, [sp, #12]
   13fa8:	mov	r5, r3
   13fac:	cmp	r1, #0
   13fb0:	movwle	r0, #65500	; 0xffdc
   13fb4:	movtle	r0, #1
   13fb8:	ble	13fd8 <ftello64@plt+0x29b0>
   13fbc:	mov	r6, r2
   13fc0:	ldr	r3, [r2]
   13fc4:	ldrb	r2, [r3]
   13fc8:	cmp	r2, #37	; 0x25
   13fcc:	movwne	r0, #65500	; 0xffdc
   13fd0:	movtne	r0, #1
   13fd4:	beq	14018 <ftello64@plt+0x29f0>
   13fd8:	mov	r1, r5
   13fdc:	bl	11310 <printf@plt>
   13fe0:	movw	r3, #9492	; 0x2514
   13fe4:	movt	r3, #3
   13fe8:	ldr	r2, [r3]
   13fec:	ldr	r3, [r2]
   13ff0:	add	r0, r3, r0
   13ff4:	str	r0, [r2]
   13ff8:	movw	r3, #11264	; 0x2c00
   13ffc:	movt	r3, #3
   14000:	mov	r2, #1
   14004:	str	r2, [r3]
   14008:	ldrd	r4, [sp]
   1400c:	ldr	r6, [sp, #8]
   14010:	add	sp, sp, #12
   14014:	pop	{pc}		; (ldr pc, [sp], #4)
   14018:	ldrb	r2, [r3, #1]
   1401c:	cmp	r2, #35	; 0x23
   14020:	addne	r4, r3, #1
   14024:	addeq	r4, r3, #2
   14028:	bl	11478 <__ctype_b_loc@plt>
   1402c:	ldr	ip, [r0]
   14030:	mov	r3, r4
   14034:	mov	r0, r3
   14038:	ldrb	r2, [r3], #1
   1403c:	lsl	r1, r2, #1
   14040:	ldrh	r1, [ip, r1]
   14044:	tst	r1, #2048	; 0x800
   14048:	bne	14034 <ftello64@plt+0x2a0c>
   1404c:	and	r2, r2, #223	; 0xdf
   14050:	cmp	r2, #72	; 0x48
   14054:	bne	14064 <ftello64@plt+0x2a3c>
   14058:	ldrb	r3, [r0, #1]
   1405c:	cmp	r3, #0
   14060:	addne	r0, r0, #1
   14064:	ldrb	r3, [r0]
   14068:	sub	r3, r3, #72	; 0x48
   1406c:	cmp	r3, #48	; 0x30
   14070:	ldrls	pc, [pc, r3, lsl #2]
   14074:	b	1413c <ftello64@plt+0x2b14>
   14078:	andeq	r4, r1, r0, ror #2
   1407c:	andeq	r4, r1, ip, lsr r1
   14080:	andeq	r4, r1, ip, lsr r1
   14084:	andeq	r4, r1, ip, lsr r1
   14088:	andeq	r4, r1, ip, lsr r1
   1408c:	andeq	r4, r1, ip, lsr r1
   14090:	andeq	r4, r1, ip, lsr r1
   14094:	andeq	r4, r1, ip, ror #2
   14098:	andeq	r4, r1, ip, lsr r1
   1409c:	andeq	r4, r1, ip, lsr r1
   140a0:	andeq	r4, r1, ip, lsr r1
   140a4:	andeq	r4, r1, ip, lsr r1
   140a8:	andeq	r4, r1, ip, lsr r1
   140ac:	andeq	r4, r1, ip, lsr r1
   140b0:	andeq	r4, r1, ip, lsr r1
   140b4:	andeq	r4, r1, ip, lsr r1
   140b8:	andeq	r4, r1, r0, ror #2
   140bc:	andeq	r4, r1, ip, lsr r1
   140c0:	andeq	r4, r1, ip, lsr r1
   140c4:	andeq	r4, r1, ip, lsr r1
   140c8:	andeq	r4, r1, ip, lsr r1
   140cc:	andeq	r4, r1, ip, lsr r1
   140d0:	andeq	r4, r1, ip, lsr r1
   140d4:	andeq	r4, r1, ip, lsr r1
   140d8:	andeq	r4, r1, ip, lsr r1
   140dc:	andeq	r4, r1, ip, lsr r1
   140e0:	andeq	r4, r1, ip, lsr r1
   140e4:	andeq	r4, r1, ip, lsr r1
   140e8:	andeq	r4, r1, ip, lsr r1
   140ec:	andeq	r4, r1, ip, lsr r1
   140f0:	andeq	r4, r1, ip, lsr r1
   140f4:	andeq	r4, r1, ip, lsr r1
   140f8:	andeq	r4, r1, r4, asr r1
   140fc:	andeq	r4, r1, ip, lsr r1
   14100:	andeq	r4, r1, ip, lsr r1
   14104:	andeq	r4, r1, ip, lsr r1
   14108:	andeq	r4, r1, ip, lsr r1
   1410c:	andeq	r4, r1, ip, lsr r1
   14110:	andeq	r4, r1, ip, lsr r1
   14114:	andeq	r4, r1, ip, ror #2
   14118:	andeq	r4, r1, ip, lsr r1
   1411c:	andeq	r4, r1, ip, lsr r1
   14120:	andeq	r4, r1, ip, lsr r1
   14124:	andeq	r4, r1, ip, lsr r1
   14128:	andeq	r4, r1, ip, lsr r1
   1412c:	andeq	r4, r1, ip, lsr r1
   14130:	andeq	r4, r1, ip, lsr r1
   14134:	andeq	r4, r1, ip, lsr r1
   14138:	andeq	r4, r1, r4, asr r1
   1413c:	mov	r3, #105	; 0x69
   14140:	strb	r3, [r0]
   14144:	mov	r3, #0
   14148:	strb	r3, [r0, #1]
   1414c:	ldr	r0, [r6]
   14150:	b	13fd8 <ftello64@plt+0x29b0>
   14154:	mov	r3, #120	; 0x78
   14158:	strb	r3, [r0]
   1415c:	b	14144 <ftello64@plt+0x2b1c>
   14160:	mov	r3, #88	; 0x58
   14164:	strb	r3, [r0]
   14168:	b	14144 <ftello64@plt+0x2b1c>
   1416c:	mov	r3, #111	; 0x6f
   14170:	strb	r3, [r0]
   14174:	b	14144 <ftello64@plt+0x2b1c>
   14178:	strd	r4, [sp, #-16]!
   1417c:	str	r6, [sp, #8]
   14180:	str	lr, [sp, #12]
   14184:	mov	r4, r0
   14188:	mov	r5, r1
   1418c:	mov	r6, r2
   14190:	ldr	r2, [r0, #4]
   14194:	movw	r1, #35105	; 0x8921
   14198:	ldr	r0, [r0, #8]
   1419c:	bl	18a18 <argp_parse@@Base+0xdf0>
   141a0:	cmp	r0, #0
   141a4:	blt	141d0 <ftello64@plt+0x2ba8>
   141a8:	ldr	r3, [r4, #4]
   141ac:	ldr	r3, [r3, #16]
   141b0:	mov	r2, r6
   141b4:	mov	r1, r5
   141b8:	mov	r0, r4
   141bc:	bl	13f9c <ftello64@plt+0x2974>
   141c0:	ldrd	r4, [sp]
   141c4:	ldr	r6, [sp, #8]
   141c8:	add	sp, sp, #12
   141cc:	pop	{pc}		; (ldr pc, [sp], #4)
   141d0:	bl	114c0 <__errno_location@plt>
   141d4:	ldr	r3, [r4, #4]
   141d8:	movw	r2, #4
   141dc:	movt	r2, #2
   141e0:	ldr	r1, [r0]
   141e4:	mov	r0, #1
   141e8:	bl	11400 <error@plt>
   141ec:	b	141c0 <ftello64@plt+0x2b98>
   141f0:	strd	r4, [sp, #-16]!
   141f4:	str	r6, [sp, #8]
   141f8:	str	lr, [sp, #12]
   141fc:	mov	r4, r0
   14200:	mov	r5, r1
   14204:	mov	r6, r2
   14208:	ldr	r2, [r0, #4]
   1420c:	movw	r1, #35101	; 0x891d
   14210:	ldr	r0, [r0, #8]
   14214:	bl	18a18 <argp_parse@@Base+0xdf0>
   14218:	cmp	r0, #0
   1421c:	blt	14248 <ftello64@plt+0x2c20>
   14220:	ldr	r3, [r4, #4]
   14224:	ldr	r3, [r3, #16]
   14228:	mov	r2, r6
   1422c:	mov	r1, r5
   14230:	mov	r0, r4
   14234:	bl	13f9c <ftello64@plt+0x2974>
   14238:	ldrd	r4, [sp]
   1423c:	ldr	r6, [sp, #8]
   14240:	add	sp, sp, #12
   14244:	pop	{pc}		; (ldr pc, [sp], #4)
   14248:	bl	114c0 <__errno_location@plt>
   1424c:	ldr	r3, [r4, #4]
   14250:	movw	r2, #44	; 0x2c
   14254:	movt	r2, #2
   14258:	ldr	r1, [r0]
   1425c:	mov	r0, #1
   14260:	bl	11400 <error@plt>
   14264:	b	14238 <ftello64@plt+0x2c10>
   14268:	str	r4, [sp, #-8]!
   1426c:	str	lr, [sp, #4]
   14270:	ldr	r3, [r0, #4]
   14274:	ldrb	r3, [r3, #26]
   14278:	bl	13f9c <ftello64@plt+0x2974>
   1427c:	ldr	r4, [sp]
   14280:	add	sp, sp, #4
   14284:	pop	{pc}		; (ldr pc, [sp], #4)
   14288:	str	r4, [sp, #-8]!
   1428c:	str	lr, [sp, #4]
   14290:	ldr	r3, [r0, #4]
   14294:	ldrh	r3, [r3, #24]
   14298:	cmp	r3, #255	; 0xff
   1429c:	bls	142b0 <ftello64@plt+0x2c88>
   142a0:	bl	13f9c <ftello64@plt+0x2974>
   142a4:	ldr	r4, [sp]
   142a8:	add	sp, sp, #4
   142ac:	pop	{pc}		; (ldr pc, [sp], #4)
   142b0:	movw	r1, #84	; 0x54
   142b4:	movt	r1, #2
   142b8:	bl	13e08 <ftello64@plt+0x27e0>
   142bc:	b	142a4 <ftello64@plt+0x2c7c>
   142c0:	str	r4, [sp, #-8]!
   142c4:	str	lr, [sp, #4]
   142c8:	ldr	r3, [r0, #4]
   142cc:	ldrb	r3, [r3, #27]
   142d0:	cmp	r3, #0
   142d4:	beq	142e8 <ftello64@plt+0x2cc0>
   142d8:	bl	13f9c <ftello64@plt+0x2974>
   142dc:	ldr	r4, [sp]
   142e0:	add	sp, sp, #4
   142e4:	pop	{pc}		; (ldr pc, [sp], #4)
   142e8:	movw	r1, #84	; 0x54
   142ec:	movt	r1, #2
   142f0:	bl	13e08 <ftello64@plt+0x27e0>
   142f4:	b	142dc <ftello64@plt+0x2cb4>
   142f8:	strd	r4, [sp, #-16]!
   142fc:	str	r6, [sp, #8]
   14300:	str	lr, [sp, #12]
   14304:	mov	r5, r3
   14308:	cmp	r1, #0
   1430c:	movwle	r0, #1192	; 0x4a8
   14310:	movtle	r0, #2
   14314:	ble	14334 <ftello64@plt+0x2d0c>
   14318:	mov	r6, r2
   1431c:	ldr	r4, [r2]
   14320:	ldrb	r3, [r4]
   14324:	cmp	r3, #37	; 0x25
   14328:	movwne	r0, #1192	; 0x4a8
   1432c:	movtne	r0, #2
   14330:	beq	14374 <ftello64@plt+0x2d4c>
   14334:	mov	r1, r5
   14338:	bl	11310 <printf@plt>
   1433c:	movw	r3, #9492	; 0x2514
   14340:	movt	r3, #3
   14344:	ldr	r2, [r3]
   14348:	ldr	r3, [r2]
   1434c:	add	r0, r3, r0
   14350:	str	r0, [r2]
   14354:	movw	r3, #11264	; 0x2c00
   14358:	movt	r3, #3
   1435c:	mov	r2, #1
   14360:	str	r2, [r3]
   14364:	ldrd	r4, [sp]
   14368:	ldr	r6, [sp, #8]
   1436c:	add	sp, sp, #12
   14370:	pop	{pc}		; (ldr pc, [sp], #4)
   14374:	bl	11478 <__ctype_b_loc@plt>
   14378:	ldr	ip, [r0]
   1437c:	add	r3, r4, #1
   14380:	mov	r0, r3
   14384:	ldrb	r2, [r3], #1
   14388:	lsl	r1, r2, #1
   1438c:	ldrh	r1, [ip, r1]
   14390:	tst	r1, #2048	; 0x800
   14394:	bne	14380 <ftello64@plt+0x2d58>
   14398:	cmp	r2, #35	; 0x23
   1439c:	moveq	r0, r3
   143a0:	ldrb	r3, [r0]
   143a4:	cmp	r3, #108	; 0x6c
   143a8:	addeq	r0, r0, #1
   143ac:	ldrb	r3, [r0]
   143b0:	sub	r3, r3, #72	; 0x48
   143b4:	cmp	r3, #48	; 0x30
   143b8:	ldrls	pc, [pc, r3, lsl #2]
   143bc:	b	14484 <ftello64@plt+0x2e5c>
   143c0:	andeq	r4, r1, r8, lsr #9
   143c4:	andeq	r4, r1, r4, lsl #9
   143c8:	andeq	r4, r1, r4, lsl #9
   143cc:	andeq	r4, r1, r4, lsl #9
   143d0:	andeq	r4, r1, r4, lsl #9
   143d4:	andeq	r4, r1, r4, lsl #9
   143d8:	andeq	r4, r1, r4, lsl #9
   143dc:			; <UNDEFINED> instruction: 0x000144b4
   143e0:	andeq	r4, r1, r4, lsl #9
   143e4:	andeq	r4, r1, r4, lsl #9
   143e8:	andeq	r4, r1, r4, lsl #9
   143ec:	andeq	r4, r1, r4, lsl #9
   143f0:	andeq	r4, r1, r4, lsl #9
   143f4:	andeq	r4, r1, r4, lsl #9
   143f8:	andeq	r4, r1, r4, lsl #9
   143fc:	andeq	r4, r1, r4, lsl #9
   14400:	andeq	r4, r1, r8, lsr #9
   14404:	andeq	r4, r1, r4, lsl #9
   14408:	andeq	r4, r1, r4, lsl #9
   1440c:	andeq	r4, r1, r4, lsl #9
   14410:	andeq	r4, r1, r4, lsl #9
   14414:	andeq	r4, r1, r4, lsl #9
   14418:	andeq	r4, r1, r4, lsl #9
   1441c:	andeq	r4, r1, r4, lsl #9
   14420:	andeq	r4, r1, r4, lsl #9
   14424:	andeq	r4, r1, r4, lsl #9
   14428:	andeq	r4, r1, r4, lsl #9
   1442c:	andeq	r4, r1, r4, lsl #9
   14430:	andeq	r4, r1, r4, lsl #9
   14434:	andeq	r4, r1, r4, lsl #9
   14438:	andeq	r4, r1, r4, lsl #9
   1443c:	andeq	r4, r1, r4, lsl #9
   14440:	muleq	r1, ip, r4
   14444:	andeq	r4, r1, r4, lsl #9
   14448:	andeq	r4, r1, r4, lsl #9
   1444c:	andeq	r4, r1, r4, lsl #9
   14450:	andeq	r4, r1, r4, lsl #9
   14454:	andeq	r4, r1, r4, lsl #9
   14458:	andeq	r4, r1, r4, lsl #9
   1445c:			; <UNDEFINED> instruction: 0x000144b4
   14460:	andeq	r4, r1, r4, lsl #9
   14464:	andeq	r4, r1, r4, lsl #9
   14468:	andeq	r4, r1, r4, lsl #9
   1446c:	andeq	r4, r1, r4, lsl #9
   14470:	andeq	r4, r1, r4, lsl #9
   14474:	andeq	r4, r1, r4, lsl #9
   14478:	andeq	r4, r1, r4, lsl #9
   1447c:	andeq	r4, r1, r4, lsl #9
   14480:	muleq	r1, ip, r4
   14484:	mov	r3, #105	; 0x69
   14488:	strb	r3, [r0]
   1448c:	mov	r3, #0
   14490:	strb	r3, [r0, #1]
   14494:	ldr	r0, [r6]
   14498:	b	14334 <ftello64@plt+0x2d0c>
   1449c:	mov	r3, #120	; 0x78
   144a0:	strb	r3, [r0]
   144a4:	b	1448c <ftello64@plt+0x2e64>
   144a8:	mov	r3, #88	; 0x58
   144ac:	strb	r3, [r0]
   144b0:	b	1448c <ftello64@plt+0x2e64>
   144b4:	mov	r3, #111	; 0x6f
   144b8:	strb	r3, [r0]
   144bc:	b	1448c <ftello64@plt+0x2e64>
   144c0:	str	r4, [sp, #-8]!
   144c4:	str	lr, [sp, #4]
   144c8:	ldr	r3, [r0, #4]
   144cc:	ldr	r3, [r3, #16]
   144d0:	cmp	r3, #0
   144d4:	beq	144e8 <ftello64@plt+0x2ec0>
   144d8:	bl	142f8 <ftello64@plt+0x2cd0>
   144dc:	ldr	r4, [sp]
   144e0:	add	sp, sp, #4
   144e4:	pop	{pc}		; (ldr pc, [sp], #4)
   144e8:	movw	r1, #84	; 0x54
   144ec:	movt	r1, #2
   144f0:	bl	13e08 <ftello64@plt+0x27e0>
   144f4:	b	144dc <ftello64@plt+0x2eb4>
   144f8:	str	r4, [sp, #-8]!
   144fc:	str	lr, [sp, #4]
   14500:	ldr	r3, [r0, #4]
   14504:	ldr	r3, [r3, #20]
   14508:	cmp	r3, #0
   1450c:	beq	14520 <ftello64@plt+0x2ef8>
   14510:	bl	142f8 <ftello64@plt+0x2cd0>
   14514:	ldr	r4, [sp]
   14518:	add	sp, sp, #4
   1451c:	pop	{pc}		; (ldr pc, [sp], #4)
   14520:	movw	r1, #84	; 0x54
   14524:	movt	r1, #2
   14528:	bl	13e08 <ftello64@plt+0x27e0>
   1452c:	b	14514 <ftello64@plt+0x2eec>
   14530:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14534:	strd	r6, [sp, #8]
   14538:	strd	r8, [sp, #16]
   1453c:	str	sl, [sp, #24]
   14540:	str	lr, [sp, #28]
   14544:	sub	sp, sp, #16
   14548:	mov	sl, r0
   1454c:	mov	r8, r1
   14550:	mov	r9, r2
   14554:	mov	r7, r3
   14558:	ldr	r0, [r3, #4]
   1455c:	bl	1137c <inet_ntoa@plt>
   14560:	mov	r5, r0
   14564:	mov	r1, #46	; 0x2e
   14568:	bl	114a8 <strchr@plt>
   1456c:	mov	r4, #0
   14570:	mov	r6, r0
   14574:	strb	r4, [r6], #1
   14578:	mov	r2, r4
   1457c:	mov	r1, r4
   14580:	mov	r0, r5
   14584:	bl	11304 <strtol@plt>
   14588:	str	r0, [sp]
   1458c:	mov	r1, #46	; 0x2e
   14590:	mov	r0, r6
   14594:	bl	114a8 <strchr@plt>
   14598:	mov	r5, r0
   1459c:	strb	r4, [r5], #1
   145a0:	mov	r2, r4
   145a4:	mov	r1, r4
   145a8:	mov	r0, r6
   145ac:	bl	11304 <strtol@plt>
   145b0:	str	r0, [sp, #4]
   145b4:	mov	r1, #46	; 0x2e
   145b8:	mov	r0, r5
   145bc:	bl	114a8 <strchr@plt>
   145c0:	mov	r6, r0
   145c4:	strb	r4, [r6], #1
   145c8:	mov	r2, r4
   145cc:	mov	r1, r4
   145d0:	mov	r0, r5
   145d4:	bl	11304 <strtol@plt>
   145d8:	str	r0, [sp, #8]
   145dc:	mov	r2, r4
   145e0:	mov	r1, r4
   145e4:	mov	r0, r6
   145e8:	bl	11304 <strtol@plt>
   145ec:	str	r0, [sp, #12]
   145f0:	ldr	r0, [r7, #4]
   145f4:	bl	1137c <inet_ntoa@plt>
   145f8:	cmp	r8, r4
   145fc:	ble	14638 <ftello64@plt+0x3010>
   14600:	mov	r2, r4
   14604:	mov	r1, r4
   14608:	ldr	r0, [r9]
   1460c:	bl	11304 <strtol@plt>
   14610:	cmp	r0, #3
   14614:	bhi	14644 <ftello64@plt+0x301c>
   14618:	add	r3, sp, #16
   1461c:	add	r0, r3, r0, lsl #2
   14620:	ldr	r3, [r0, #-16]
   14624:	add	r2, r9, #4
   14628:	sub	r1, r8, #1
   1462c:	mov	r0, sl
   14630:	bl	13f9c <ftello64@plt+0x2974>
   14634:	b	14644 <ftello64@plt+0x301c>
   14638:	mov	r1, r0
   1463c:	mov	r0, sl
   14640:	bl	13e08 <ftello64@plt+0x27e0>
   14644:	add	sp, sp, #16
   14648:	ldrd	r4, [sp]
   1464c:	ldrd	r6, [sp, #8]
   14650:	ldrd	r8, [sp, #16]
   14654:	ldr	sl, [sp, #24]
   14658:	add	sp, sp, #28
   1465c:	pop	{pc}		; (ldr pc, [sp], #4)
   14660:	strd	r4, [sp, #-16]!
   14664:	str	r6, [sp, #8]
   14668:	str	lr, [sp, #12]
   1466c:	mov	r4, r0
   14670:	mov	r5, r1
   14674:	mov	r6, r2
   14678:	ldr	r2, [r0, #4]
   1467c:	movw	r1, #35093	; 0x8915
   14680:	ldr	r0, [r0, #8]
   14684:	bl	18a18 <argp_parse@@Base+0xdf0>
   14688:	cmp	r0, #0
   1468c:	blt	146b8 <ftello64@plt+0x3090>
   14690:	ldr	r3, [r4, #4]
   14694:	add	r3, r3, #16
   14698:	mov	r2, r6
   1469c:	mov	r1, r5
   146a0:	mov	r0, r4
   146a4:	bl	14530 <ftello64@plt+0x2f08>
   146a8:	ldrd	r4, [sp]
   146ac:	ldr	r6, [sp, #8]
   146b0:	add	sp, sp, #12
   146b4:	pop	{pc}		; (ldr pc, [sp], #4)
   146b8:	bl	114c0 <__errno_location@plt>
   146bc:	ldr	r3, [r4, #4]
   146c0:	movw	r2, #100	; 0x64
   146c4:	movt	r2, #2
   146c8:	ldr	r1, [r0]
   146cc:	mov	r0, #1
   146d0:	bl	11400 <error@plt>
   146d4:	b	146a8 <ftello64@plt+0x3080>
   146d8:	strd	r4, [sp, #-16]!
   146dc:	str	r6, [sp, #8]
   146e0:	str	lr, [sp, #12]
   146e4:	mov	r4, r0
   146e8:	mov	r5, r1
   146ec:	mov	r6, r2
   146f0:	ldr	r2, [r0, #4]
   146f4:	movw	r1, #35099	; 0x891b
   146f8:	ldr	r0, [r0, #8]
   146fc:	bl	18a18 <argp_parse@@Base+0xdf0>
   14700:	cmp	r0, #0
   14704:	blt	14730 <ftello64@plt+0x3108>
   14708:	ldr	r3, [r4, #4]
   1470c:	add	r3, r3, #16
   14710:	mov	r2, r6
   14714:	mov	r1, r5
   14718:	mov	r0, r4
   1471c:	bl	14530 <ftello64@plt+0x2f08>
   14720:	ldrd	r4, [sp]
   14724:	ldr	r6, [sp, #8]
   14728:	add	sp, sp, #12
   1472c:	pop	{pc}		; (ldr pc, [sp], #4)
   14730:	bl	114c0 <__errno_location@plt>
   14734:	ldr	r3, [r4, #4]
   14738:	movw	r2, #140	; 0x8c
   1473c:	movt	r2, #2
   14740:	ldr	r1, [r0]
   14744:	mov	r0, #1
   14748:	bl	11400 <error@plt>
   1474c:	b	14720 <ftello64@plt+0x30f8>
   14750:	strd	r4, [sp, #-16]!
   14754:	str	r6, [sp, #8]
   14758:	str	lr, [sp, #12]
   1475c:	mov	r4, r0
   14760:	mov	r5, r1
   14764:	mov	r6, r2
   14768:	ldr	r2, [r0, #4]
   1476c:	movw	r1, #35097	; 0x8919
   14770:	ldr	r0, [r0, #8]
   14774:	bl	18a18 <argp_parse@@Base+0xdf0>
   14778:	cmp	r0, #0
   1477c:	blt	147a8 <ftello64@plt+0x3180>
   14780:	ldr	r3, [r4, #4]
   14784:	add	r3, r3, #16
   14788:	mov	r2, r6
   1478c:	mov	r1, r5
   14790:	mov	r0, r4
   14794:	bl	14530 <ftello64@plt+0x2f08>
   14798:	ldrd	r4, [sp]
   1479c:	ldr	r6, [sp, #8]
   147a0:	add	sp, sp, #12
   147a4:	pop	{pc}		; (ldr pc, [sp], #4)
   147a8:	bl	114c0 <__errno_location@plt>
   147ac:	ldr	r3, [r4, #4]
   147b0:	movw	r2, #184	; 0xb8
   147b4:	movt	r2, #2
   147b8:	ldr	r1, [r0]
   147bc:	mov	r0, #1
   147c0:	bl	11400 <error@plt>
   147c4:	b	14798 <ftello64@plt+0x3170>
   147c8:	strd	r4, [sp, #-16]!
   147cc:	str	r6, [sp, #8]
   147d0:	str	lr, [sp, #12]
   147d4:	mov	r4, r0
   147d8:	mov	r5, r1
   147dc:	mov	r6, r2
   147e0:	ldr	r2, [r0, #4]
   147e4:	movw	r1, #35095	; 0x8917
   147e8:	ldr	r0, [r0, #8]
   147ec:	bl	18a18 <argp_parse@@Base+0xdf0>
   147f0:	cmp	r0, #0
   147f4:	blt	14820 <ftello64@plt+0x31f8>
   147f8:	ldr	r3, [r4, #4]
   147fc:	add	r3, r3, #16
   14800:	mov	r2, r6
   14804:	mov	r1, r5
   14808:	mov	r0, r4
   1480c:	bl	14530 <ftello64@plt+0x2f08>
   14810:	ldrd	r4, [sp]
   14814:	ldr	r6, [sp, #8]
   14818:	add	sp, sp, #12
   1481c:	pop	{pc}		; (ldr pc, [sp], #4)
   14820:	bl	114c0 <__errno_location@plt>
   14824:	ldr	r3, [r4, #4]
   14828:	movw	r2, #228	; 0xe4
   1482c:	movt	r2, #2
   14830:	ldr	r1, [r0]
   14834:	mov	r0, #1
   14838:	bl	11400 <error@plt>
   1483c:	b	14810 <ftello64@plt+0x31e8>
   14840:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14844:	strd	r6, [sp, #8]
   14848:	strd	r8, [sp, #16]
   1484c:	strd	sl, [sp, #24]
   14850:	str	lr, [sp, #32]
   14854:	sub	sp, sp, #12
   14858:	str	r0, [sp, #4]
   1485c:	subs	r5, r3, #0
   14860:	beq	14930 <ftello64@plt+0x3308>
   14864:	mov	sl, r1
   14868:	mov	fp, r2
   1486c:	mov	r6, #1
   14870:	mov	r4, r6
   14874:	mov	r7, #0
   14878:	mov	r8, #32
   1487c:	b	148bc <ftello64@plt+0x3294>
   14880:	mov	r1, r8
   14884:	ldr	r0, [sp, #4]
   14888:	bl	13c68 <ftello64@plt+0x2640>
   1488c:	mov	r1, r9
   14890:	ldr	r0, [sp, #4]
   14894:	bl	13e08 <ftello64@plt+0x27e0>
   14898:	bic	r5, r5, r4
   1489c:	mov	r6, r7
   148a0:	lsls	r4, r4, #1
   148a4:	movne	r3, #1
   148a8:	moveq	r3, #0
   148ac:	cmp	r5, #0
   148b0:	moveq	r3, #0
   148b4:	cmp	r3, #0
   148b8:	beq	148f8 <ftello64@plt+0x32d0>
   148bc:	tst	r4, r5
   148c0:	beq	148a0 <ftello64@plt+0x3278>
   148c4:	mov	r1, r7
   148c8:	mov	r0, r4
   148cc:	bl	11b80 <ftello64@plt+0x558>
   148d0:	subs	r9, r0, #0
   148d4:	beq	148a0 <ftello64@plt+0x3278>
   148d8:	cmp	r6, #0
   148dc:	bne	1488c <ftello64@plt+0x3264>
   148e0:	cmp	sl, #0
   148e4:	ble	14880 <ftello64@plt+0x3258>
   148e8:	ldr	r1, [fp]
   148ec:	ldr	r0, [sp, #4]
   148f0:	bl	13e08 <ftello64@plt+0x27e0>
   148f4:	b	1488c <ftello64@plt+0x3264>
   148f8:	cmp	r5, #0
   148fc:	beq	14930 <ftello64@plt+0x3308>
   14900:	cmp	r6, #0
   14904:	bne	1491c <ftello64@plt+0x32f4>
   14908:	cmp	sl, #0
   1490c:	ble	1494c <ftello64@plt+0x3324>
   14910:	ldr	r1, [fp]
   14914:	ldr	r0, [sp, #4]
   14918:	bl	13e08 <ftello64@plt+0x27e0>
   1491c:	mov	r3, r5
   14920:	add	r2, fp, #4
   14924:	sub	r1, sl, #1
   14928:	ldr	r0, [sp, #4]
   1492c:	bl	13f9c <ftello64@plt+0x2974>
   14930:	add	sp, sp, #12
   14934:	ldrd	r4, [sp]
   14938:	ldrd	r6, [sp, #8]
   1493c:	ldrd	r8, [sp, #16]
   14940:	ldrd	sl, [sp, #24]
   14944:	add	sp, sp, #32
   14948:	pop	{pc}		; (ldr pc, [sp], #4)
   1494c:	mov	r1, #32
   14950:	ldr	r0, [sp, #4]
   14954:	bl	13c68 <ftello64@plt+0x2640>
   14958:	b	1491c <ftello64@plt+0x32f4>
   1495c:	str	r4, [sp, #-8]!
   14960:	str	lr, [sp, #4]
   14964:	sub	sp, sp, #16
   14968:	mov	r4, r0
   1496c:	mov	r2, #15
   14970:	mov	r1, sp
   14974:	mov	r0, r3
   14978:	bl	11d78 <ftello64@plt+0x750>
   1497c:	mov	r1, sp
   14980:	mov	r0, r4
   14984:	bl	13e08 <ftello64@plt+0x27e0>
   14988:	add	sp, sp, #16
   1498c:	ldr	r4, [sp]
   14990:	add	sp, sp, #4
   14994:	pop	{pc}		; (ldr pc, [sp], #4)
   14998:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1499c:	strd	r6, [sp, #8]
   149a0:	str	r8, [sp, #16]
   149a4:	str	lr, [sp, #20]
   149a8:	mov	r4, r0
   149ac:	mov	r5, r1
   149b0:	mov	r6, r2
   149b4:	ldr	r2, [r0, #4]
   149b8:	movw	r1, #35091	; 0x8913
   149bc:	ldr	r0, [r0, #8]
   149c0:	bl	18a18 <argp_parse@@Base+0xdf0>
   149c4:	cmp	r0, #0
   149c8:	blt	14a40 <ftello64@plt+0x3418>
   149cc:	ldr	r3, [r4, #4]
   149d0:	ldrh	r8, [r3, #16]
   149d4:	cmp	r5, #0
   149d8:	ble	14aa0 <ftello64@plt+0x3478>
   149dc:	ldr	r7, [r6]
   149e0:	movw	r1, #312	; 0x138
   149e4:	movt	r1, #2
   149e8:	mov	r0, r7
   149ec:	bl	112f8 <strcmp@plt>
   149f0:	cmp	r0, #0
   149f4:	beq	14a70 <ftello64@plt+0x3448>
   149f8:	movw	r1, #61016	; 0xee58
   149fc:	movt	r1, #1
   14a00:	mov	r0, r7
   14a04:	bl	112f8 <strcmp@plt>
   14a08:	cmp	r0, #0
   14a0c:	beq	14a88 <ftello64@plt+0x3460>
   14a10:	movw	r1, #320	; 0x140
   14a14:	movt	r1, #2
   14a18:	mov	r0, r7
   14a1c:	bl	112f8 <strcmp@plt>
   14a20:	cmp	r0, #0
   14a24:	bne	14a5c <ftello64@plt+0x3434>
   14a28:	mov	r3, r8
   14a2c:	add	r2, r6, #4
   14a30:	sub	r1, r5, #1
   14a34:	mov	r0, r4
   14a38:	bl	14840 <ftello64@plt+0x3218>
   14a3c:	b	14a5c <ftello64@plt+0x3434>
   14a40:	bl	114c0 <__errno_location@plt>
   14a44:	ldr	r3, [r4, #4]
   14a48:	movw	r2, #272	; 0x110
   14a4c:	movt	r2, #2
   14a50:	ldr	r1, [r0]
   14a54:	mov	r0, #1
   14a58:	bl	11400 <error@plt>
   14a5c:	ldrd	r4, [sp]
   14a60:	ldrd	r6, [sp, #8]
   14a64:	ldr	r8, [sp, #16]
   14a68:	add	sp, sp, #20
   14a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a70:	mov	r3, r8
   14a74:	add	r2, r6, #4
   14a78:	sub	r1, r5, #1
   14a7c:	mov	r0, r4
   14a80:	bl	13f9c <ftello64@plt+0x2974>
   14a84:	b	14a5c <ftello64@plt+0x3434>
   14a88:	mov	r3, r8
   14a8c:	add	r2, r6, #4
   14a90:	sub	r1, r5, #1
   14a94:	mov	r0, r4
   14a98:	bl	1495c <ftello64@plt+0x3334>
   14a9c:	b	14a5c <ftello64@plt+0x3434>
   14aa0:	mov	r3, r8
   14aa4:	mov	r2, r6
   14aa8:	mov	r1, r5
   14aac:	mov	r0, r4
   14ab0:	bl	14840 <ftello64@plt+0x3218>
   14ab4:	b	14a5c <ftello64@plt+0x3434>
   14ab8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14abc:	strd	r6, [sp, #8]
   14ac0:	strd	r8, [sp, #16]
   14ac4:	str	sl, [sp, #24]
   14ac8:	str	lr, [sp, #28]
   14acc:	mov	r5, r0
   14ad0:	mov	r7, r1
   14ad4:	mov	r9, r3
   14ad8:	movw	r3, #9492	; 0x2514
   14adc:	movt	r3, #3
   14ae0:	ldr	r0, [r3, #4]
   14ae4:	cmp	r0, #0
   14ae8:	beq	14b10 <ftello64@plt+0x34e8>
   14aec:	mov	r8, r2
   14af0:	add	r4, r3, #4
   14af4:	mov	r1, r5
   14af8:	bl	112f8 <strcmp@plt>
   14afc:	cmp	r0, #0
   14b00:	beq	14b84 <ftello64@plt+0x355c>
   14b04:	ldr	r0, [r4, #8]!
   14b08:	cmp	r0, #0
   14b0c:	bne	14af4 <ftello64@plt+0x34cc>
   14b10:	movw	r0, #328	; 0x148
   14b14:	movt	r0, #2
   14b18:	bl	11310 <printf@plt>
   14b1c:	movw	r4, #9492	; 0x2514
   14b20:	movt	r4, #3
   14b24:	ldr	r2, [r4]
   14b28:	ldr	r3, [r2]
   14b2c:	add	r0, r3, r0
   14b30:	str	r0, [r2]
   14b34:	mov	r1, r5
   14b38:	mov	r0, r7
   14b3c:	bl	13e08 <ftello64@plt+0x27e0>
   14b40:	movw	r0, #1736	; 0x6c8
   14b44:	movt	r0, #2
   14b48:	bl	11310 <printf@plt>
   14b4c:	ldr	r2, [r4]
   14b50:	ldr	r3, [r2]
   14b54:	add	r0, r3, r0
   14b58:	str	r0, [r2]
   14b5c:	movw	r3, #11264	; 0x2c00
   14b60:	movt	r3, #3
   14b64:	mov	r2, #1
   14b68:	str	r2, [r3]
   14b6c:	ldrd	r4, [sp]
   14b70:	ldrd	r6, [sp, #8]
   14b74:	ldrd	r8, [sp, #16]
   14b78:	ldr	sl, [sp, #24]
   14b7c:	add	sp, sp, #28
   14b80:	pop	{pc}		; (ldr pc, [sp], #4)
   14b84:	ldr	r3, [r4, #4]
   14b88:	cmp	r3, #0
   14b8c:	beq	14b6c <ftello64@plt+0x3544>
   14b90:	mov	r2, r9
   14b94:	mov	r1, r8
   14b98:	mov	r0, r7
   14b9c:	blx	r3
   14ba0:	b	14b6c <ftello64@plt+0x3544>
   14ba4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14ba8:	strd	r6, [sp, #8]
   14bac:	strd	r8, [sp, #16]
   14bb0:	strd	sl, [sp, #24]
   14bb4:	str	lr, [sp, #32]
   14bb8:	add	fp, sp, #32
   14bbc:	sub	sp, sp, #28
   14bc0:	mov	r5, r0
   14bc4:	mov	r6, r1
   14bc8:	ldr	r4, [r0, #16]
   14bcc:	ldr	r3, [r0, #20]
   14bd0:	add	r3, r3, #1
   14bd4:	str	r3, [r0, #20]
   14bd8:	mov	sl, #0
   14bdc:	str	r1, [fp, #-48]	; 0xffffffd0
   14be0:	b	14c54 <ftello64@plt+0x362c>
   14be4:	mov	r0, r5
   14be8:	bl	13c68 <ftello64@plt+0x2640>
   14bec:	ldrb	r1, [r4, #1]!
   14bf0:	cmp	r1, #36	; 0x24
   14bf4:	cmpne	r1, #0
   14bf8:	beq	14c24 <ftello64@plt+0x35fc>
   14bfc:	ldr	r2, [r5, #20]
   14c00:	subs	r3, r1, #125	; 0x7d
   14c04:	movne	r3, #1
   14c08:	cmp	r2, #1
   14c0c:	orrle	r3, r3, #1
   14c10:	cmp	r3, #0
   14c14:	beq	14e58 <ftello64@plt+0x3830>
   14c18:	cmp	r6, #0
   14c1c:	bne	14bec <ftello64@plt+0x35c4>
   14c20:	b	14be4 <ftello64@plt+0x35bc>
   14c24:	cmp	r1, #36	; 0x24
   14c28:	bne	14e58 <ftello64@plt+0x3830>
   14c2c:	ldrb	r3, [r4, #1]
   14c30:	cmp	r3, #123	; 0x7b
   14c34:	beq	14cb0 <ftello64@plt+0x3688>
   14c38:	cmp	r3, #125	; 0x7d
   14c3c:	beq	14ca4 <ftello64@plt+0x367c>
   14c40:	cmp	r3, #36	; 0x24
   14c44:	beq	14ca4 <ftello64@plt+0x367c>
   14c48:	cmp	r6, #0
   14c4c:	beq	14c88 <ftello64@plt+0x3660>
   14c50:	add	r4, r4, #2
   14c54:	ldrb	r1, [r4]
   14c58:	cmp	r1, #0
   14c5c:	beq	14e58 <ftello64@plt+0x3830>
   14c60:	ldr	r2, [r5, #20]
   14c64:	subs	r3, r1, #125	; 0x7d
   14c68:	movne	r3, #1
   14c6c:	cmp	r2, #1
   14c70:	orrle	r3, r3, #1
   14c74:	cmp	r3, #0
   14c78:	beq	14e58 <ftello64@plt+0x3830>
   14c7c:	cmp	r1, #36	; 0x24
   14c80:	bne	14c18 <ftello64@plt+0x35f0>
   14c84:	b	14c2c <ftello64@plt+0x3604>
   14c88:	mov	r1, #36	; 0x24
   14c8c:	mov	r0, r5
   14c90:	bl	13c68 <ftello64@plt+0x2640>
   14c94:	ldrb	r1, [r4, #1]
   14c98:	mov	r0, r5
   14c9c:	bl	13c68 <ftello64@plt+0x2640>
   14ca0:	b	14c50 <ftello64@plt+0x3628>
   14ca4:	cmp	r6, #0
   14ca8:	bne	14c50 <ftello64@plt+0x3628>
   14cac:	b	14c94 <ftello64@plt+0x366c>
   14cb0:	add	r7, r4, #2
   14cb4:	mov	r1, #125	; 0x7d
   14cb8:	mov	r0, r7
   14cbc:	bl	114a8 <strchr@plt>
   14cc0:	subs	r8, r0, #0
   14cc4:	beq	14d14 <ftello64@plt+0x36ec>
   14cc8:	sub	r4, r8, r7
   14ccc:	add	r3, r4, #8
   14cd0:	bic	r3, r3, #7
   14cd4:	sub	sp, sp, r3
   14cd8:	mov	r3, sp
   14cdc:	lsr	r9, r3, #3
   14ce0:	lsl	r3, r9, #3
   14ce4:	str	r3, [fp, #-44]	; 0xffffffd4
   14ce8:	mov	r2, r4
   14cec:	mov	r1, r7
   14cf0:	mov	r0, r3
   14cf4:	bl	11364 <memcpy@plt>
   14cf8:	strb	sl, [r4, r9, lsl #3]
   14cfc:	add	r4, r8, #1
   14d00:	cmp	r6, #0
   14d04:	beq	14d6c <ftello64@plt+0x3744>
   14d08:	str	r4, [r5, #16]
   14d0c:	mov	r7, #1
   14d10:	b	14d58 <ftello64@plt+0x3730>
   14d14:	mov	r1, r4
   14d18:	mov	r0, r5
   14d1c:	bl	13e08 <ftello64@plt+0x27e0>
   14d20:	mov	r0, r4
   14d24:	bl	1149c <strlen@plt>
   14d28:	add	r4, r4, r0
   14d2c:	b	14c54 <ftello64@plt+0x362c>
   14d30:	add	r4, r4, #1
   14d34:	str	r4, [r5, #16]
   14d38:	mov	r1, r7
   14d3c:	mov	r0, r5
   14d40:	bl	14ba4 <ftello64@plt+0x357c>
   14d44:	ldr	r3, [r5, #16]
   14d48:	ldrb	r2, [r3]
   14d4c:	cmp	r2, #125	; 0x7d
   14d50:	addeq	r3, r3, #1
   14d54:	streq	r3, [r5, #16]
   14d58:	ldr	r4, [r5, #16]
   14d5c:	ldrb	r3, [r4]
   14d60:	cmp	r3, #123	; 0x7b
   14d64:	beq	14d30 <ftello64@plt+0x3708>
   14d68:	b	14c54 <ftello64@plt+0x362c>
   14d6c:	mov	r0, r8
   14d70:	bl	1149c <strlen@plt>
   14d74:	lsr	r3, r0, #1
   14d78:	add	r3, r3, #7
   14d7c:	bic	r3, r3, #7
   14d80:	sub	sp, sp, r3
   14d84:	mov	r2, sp
   14d88:	str	r2, [fp, #-52]	; 0xffffffcc
   14d8c:	ldrb	r3, [r8, #1]
   14d90:	cmp	r3, #123	; 0x7b
   14d94:	bne	14e84 <ftello64@plt+0x385c>
   14d98:	sub	r9, r2, #4
   14d9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14da0:	str	r3, [fp, #-40]	; 0xffffffd8
   14da4:	str	r6, [fp, #-56]	; 0xffffffc8
   14da8:	b	14db0 <ftello64@plt+0x3788>
   14dac:	str	r2, [fp, #-40]	; 0xffffffd8
   14db0:	add	r7, r4, #1
   14db4:	str	r7, [r5, #16]
   14db8:	mov	r1, #1
   14dbc:	mov	r0, r5
   14dc0:	bl	14ba4 <ftello64@plt+0x357c>
   14dc4:	ldr	r4, [r5, #16]
   14dc8:	sub	r6, r4, r7
   14dcc:	add	r0, r6, #1
   14dd0:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   14dd4:	mov	r8, r0
   14dd8:	str	r0, [r9, #4]!
   14ddc:	mov	r2, r6
   14de0:	mov	r1, r7
   14de4:	bl	11364 <memcpy@plt>
   14de8:	strb	sl, [r8, r6]
   14dec:	ldrb	r3, [r4]
   14df0:	cmp	r3, #125	; 0x7d
   14df4:	addeq	r4, r4, #1
   14df8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14dfc:	add	r2, r3, #1
   14e00:	ldrb	r3, [r4]
   14e04:	cmp	r3, #123	; 0x7b
   14e08:	beq	14dac <ftello64@plt+0x3784>
   14e0c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   14e10:	ldr	r9, [fp, #-52]	; 0xffffffcc
   14e14:	mov	r3, r9
   14e18:	mov	r1, r5
   14e1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e20:	bl	14ab8 <ftello64@plt+0x3490>
   14e24:	str	r4, [r5, #16]
   14e28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14e2c:	cmp	r3, #0
   14e30:	blt	14c54 <ftello64@plt+0x362c>
   14e34:	add	r8, r9, r3, lsl #2
   14e38:	b	14e40 <ftello64@plt+0x3818>
   14e3c:	mov	r8, r7
   14e40:	mov	r7, r8
   14e44:	ldr	r0, [r7], #-4
   14e48:	bl	18900 <argp_parse@@Base+0xcd8>
   14e4c:	cmp	r8, r9
   14e50:	bne	14e3c <ftello64@plt+0x3814>
   14e54:	b	14c54 <ftello64@plt+0x362c>
   14e58:	str	r4, [r5, #16]
   14e5c:	ldr	r3, [r5, #20]
   14e60:	sub	r3, r3, #1
   14e64:	str	r3, [r5, #20]
   14e68:	sub	sp, fp, #32
   14e6c:	ldrd	r4, [sp]
   14e70:	ldrd	r6, [sp, #8]
   14e74:	ldrd	r8, [sp, #16]
   14e78:	ldrd	sl, [sp, #24]
   14e7c:	add	sp, sp, #32
   14e80:	pop	{pc}		; (ldr pc, [sp], #4)
   14e84:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14e88:	mov	r2, sl
   14e8c:	mov	r1, r5
   14e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e94:	bl	14ab8 <ftello64@plt+0x3490>
   14e98:	str	r4, [r5, #16]
   14e9c:	b	14c54 <ftello64@plt+0x362c>
   14ea0:	cmp	r3, r1
   14ea4:	bxge	lr
   14ea8:	str	r4, [sp, #-8]!
   14eac:	str	lr, [sp, #4]
   14eb0:	ldr	r3, [r2, r3, lsl #2]
   14eb4:	str	r3, [r0, #16]
   14eb8:	mov	r1, #0
   14ebc:	bl	14ba4 <ftello64@plt+0x357c>
   14ec0:	ldr	r4, [sp]
   14ec4:	add	sp, sp, #4
   14ec8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ecc:	strd	r4, [sp, #-16]!
   14ed0:	str	r6, [sp, #8]
   14ed4:	str	lr, [sp, #12]
   14ed8:	subs	r6, r1, #0
   14edc:	ble	14f0c <ftello64@plt+0x38e4>
   14ee0:	mov	r4, r2
   14ee4:	mov	r5, r0
   14ee8:	ldr	r0, [r2]
   14eec:	bl	12ab8 <ftello64@plt+0x1490>
   14ef0:	cmp	r0, #0
   14ef4:	movne	r3, #1
   14ef8:	moveq	r3, #2
   14efc:	mov	r2, r4
   14f00:	mov	r1, r6
   14f04:	mov	r0, r5
   14f08:	bl	14ea0 <ftello64@plt+0x3878>
   14f0c:	ldrd	r4, [sp]
   14f10:	ldr	r6, [sp, #8]
   14f14:	add	sp, sp, #12
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)
   14f1c:	str	r4, [sp, #-8]!
   14f20:	str	lr, [sp, #4]
   14f24:	ldr	r3, [r0, #12]
   14f28:	clz	r3, r3
   14f2c:	lsr	r3, r3, #5
   14f30:	bl	14ea0 <ftello64@plt+0x3878>
   14f34:	ldr	r4, [sp]
   14f38:	add	sp, sp, #4
   14f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14f44:	strd	r6, [sp, #8]
   14f48:	str	r8, [sp, #16]
   14f4c:	str	lr, [sp, #20]
   14f50:	sub	sp, sp, #8
   14f54:	mov	r5, r0
   14f58:	mov	r6, r1
   14f5c:	mov	r7, r2
   14f60:	movw	r3, #11248	; 0x2bf0
   14f64:	movt	r3, #3
   14f68:	movw	r2, #11252	; 0x2bf4
   14f6c:	movt	r2, #3
   14f70:	ldr	r3, [r3]
   14f74:	ldr	r4, [r2]
   14f78:	orrs	r4, r3, r4
   14f7c:	movne	r8, #1
   14f80:	beq	14fb4 <ftello64@plt+0x398c>
   14f84:	clz	r3, r8
   14f88:	lsr	r3, r3, #5
   14f8c:	mov	r2, r7
   14f90:	mov	r1, r6
   14f94:	mov	r0, r5
   14f98:	bl	14ea0 <ftello64@plt+0x3878>
   14f9c:	add	sp, sp, #8
   14fa0:	ldrd	r4, [sp]
   14fa4:	ldrd	r6, [sp, #8]
   14fa8:	ldr	r8, [sp, #16]
   14fac:	add	sp, sp, #20
   14fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   14fb4:	mov	r3, #0
   14fb8:	str	r3, [sp, #4]
   14fbc:	add	r1, sp, #4
   14fc0:	movw	r0, #58856	; 0xe5e8
   14fc4:	movt	r0, #1
   14fc8:	bl	11d40 <ftello64@plt+0x718>
   14fcc:	subs	r8, r0, #0
   14fd0:	beq	14f84 <ftello64@plt+0x395c>
   14fd4:	ldr	r2, [r5, #4]
   14fd8:	movw	r1, #35091	; 0x8913
   14fdc:	ldr	r0, [r5, #8]
   14fe0:	bl	18a18 <argp_parse@@Base+0xdf0>
   14fe4:	cmp	r0, #0
   14fe8:	movne	r8, r4
   14fec:	bne	14f84 <ftello64@plt+0x395c>
   14ff0:	ldr	r3, [r5, #4]
   14ff4:	ldrh	r3, [r3, #16]
   14ff8:	tst	r3, r8
   14ffc:	movne	r8, #1
   15000:	moveq	r8, #0
   15004:	b	14f84 <ftello64@plt+0x395c>
   15008:	str	r4, [sp, #-8]!
   1500c:	str	lr, [sp, #4]
   15010:	movw	r3, #11256	; 0x2bf8
   15014:	movt	r3, #3
   15018:	ldr	r3, [r3]
   1501c:	clz	r3, r3
   15020:	lsr	r3, r3, #5
   15024:	bl	14ea0 <ftello64@plt+0x3878>
   15028:	ldr	r4, [sp]
   1502c:	add	sp, sp, #4
   15030:	pop	{pc}		; (ldr pc, [sp], #4)
   15034:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15038:	strd	r6, [sp, #8]
   1503c:	str	r8, [sp, #16]
   15040:	str	lr, [sp, #20]
   15044:	subs	r8, r1, #0
   15048:	ble	150b0 <ftello64@plt+0x3a88>
   1504c:	mov	r6, r2
   15050:	mov	r7, r0
   15054:	movw	r3, #9492	; 0x2514
   15058:	movt	r3, #3
   1505c:	ldr	r0, [r3, #4]
   15060:	cmp	r0, #0
   15064:	beq	15094 <ftello64@plt+0x3a6c>
   15068:	ldr	r5, [r2]
   1506c:	add	r4, r3, #4
   15070:	mov	r1, r5
   15074:	bl	112f8 <strcmp@plt>
   15078:	cmp	r0, #0
   1507c:	beq	1509c <ftello64@plt+0x3a74>
   15080:	ldr	r0, [r4, #8]!
   15084:	cmp	r0, #0
   15088:	bne	15070 <ftello64@plt+0x3a48>
   1508c:	mov	r3, #2
   15090:	b	150a0 <ftello64@plt+0x3a78>
   15094:	mov	r3, #2
   15098:	b	150a0 <ftello64@plt+0x3a78>
   1509c:	mov	r3, #1
   150a0:	mov	r2, r6
   150a4:	mov	r1, r8
   150a8:	mov	r0, r7
   150ac:	bl	14ea0 <ftello64@plt+0x3878>
   150b0:	ldrd	r4, [sp]
   150b4:	ldrd	r6, [sp, #8]
   150b8:	ldr	r8, [sp, #16]
   150bc:	add	sp, sp, #20
   150c0:	pop	{pc}		; (ldr pc, [sp], #4)
   150c4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   150c8:	strd	r6, [sp, #8]
   150cc:	strd	r8, [sp, #16]
   150d0:	str	sl, [sp, #24]
   150d4:	str	lr, [sp, #28]
   150d8:	movw	ip, #11276	; 0x2c0c
   150dc:	movt	ip, #3
   150e0:	ldr	r9, [ip]
   150e4:	movw	r3, #9492	; 0x2514
   150e8:	movt	r3, #3
   150ec:	ldr	r8, [r3]
   150f0:	movw	lr, #11072	; 0x2b40
   150f4:	movt	lr, #3
   150f8:	ldr	lr, [lr]
   150fc:	str	lr, [ip]
   15100:	movw	ip, #11268	; 0x2c04
   15104:	movt	ip, #3
   15108:	str	ip, [r3]
   1510c:	subs	r5, r1, #0
   15110:	ble	15140 <ftello64@plt+0x3b18>
   15114:	mov	r7, r2
   15118:	mov	r6, r0
   1511c:	mov	r4, #0
   15120:	mov	r3, r4
   15124:	mov	r2, r7
   15128:	mov	r1, r5
   1512c:	mov	r0, r6
   15130:	bl	14ea0 <ftello64@plt+0x3878>
   15134:	add	r4, r4, #1
   15138:	cmp	r5, r4
   1513c:	bne	15120 <ftello64@plt+0x3af8>
   15140:	movw	r3, #11276	; 0x2c0c
   15144:	movt	r3, #3
   15148:	str	r9, [r3]
   1514c:	movw	r3, #9492	; 0x2514
   15150:	movt	r3, #3
   15154:	str	r8, [r3]
   15158:	ldrd	r4, [sp]
   1515c:	ldrd	r6, [sp, #8]
   15160:	ldrd	r8, [sp, #16]
   15164:	ldr	sl, [sp, #24]
   15168:	add	sp, sp, #28
   1516c:	pop	{pc}		; (ldr pc, [sp], #4)
   15170:	strd	r4, [sp, #-16]!
   15174:	str	r6, [sp, #8]
   15178:	str	lr, [sp, #12]
   1517c:	mov	r4, r0
   15180:	mov	r5, r1
   15184:	mov	r6, r2
   15188:	ldr	r0, [r0]
   1518c:	bl	115ec <if_nametoindex@plt>
   15190:	clz	r3, r0
   15194:	lsr	r3, r3, #5
   15198:	mov	r2, r6
   1519c:	mov	r1, r5
   151a0:	mov	r0, r4
   151a4:	bl	14ea0 <ftello64@plt+0x3878>
   151a8:	ldrd	r4, [sp]
   151ac:	ldr	r6, [sp, #8]
   151b0:	add	sp, sp, #12
   151b4:	pop	{pc}		; (ldr pc, [sp], #4)
   151b8:	strd	r4, [sp, #-16]!
   151bc:	str	r6, [sp, #8]
   151c0:	str	lr, [sp, #12]
   151c4:	mov	r4, r0
   151c8:	mov	r5, r1
   151cc:	mov	r6, r2
   151d0:	ldr	r2, [r0, #4]
   151d4:	movw	r1, #35093	; 0x8915
   151d8:	ldr	r0, [r0, #8]
   151dc:	bl	18a18 <argp_parse@@Base+0xdf0>
   151e0:	cmp	r0, #0
   151e4:	movge	r3, #0
   151e8:	movlt	r3, #1
   151ec:	mov	r2, r6
   151f0:	mov	r1, r5
   151f4:	mov	r0, r4
   151f8:	bl	14ea0 <ftello64@plt+0x3878>
   151fc:	ldrd	r4, [sp]
   15200:	ldr	r6, [sp, #8]
   15204:	add	sp, sp, #12
   15208:	pop	{pc}		; (ldr pc, [sp], #4)
   1520c:	strd	r4, [sp, #-16]!
   15210:	str	r6, [sp, #8]
   15214:	str	lr, [sp, #12]
   15218:	mov	r4, r0
   1521c:	mov	r5, r1
   15220:	mov	r6, r2
   15224:	ldr	r2, [r0, #4]
   15228:	movw	r1, #35099	; 0x891b
   1522c:	ldr	r0, [r0, #8]
   15230:	bl	18a18 <argp_parse@@Base+0xdf0>
   15234:	cmp	r0, #0
   15238:	movge	r3, #0
   1523c:	movlt	r3, #1
   15240:	mov	r2, r6
   15244:	mov	r1, r5
   15248:	mov	r0, r4
   1524c:	bl	14ea0 <ftello64@plt+0x3878>
   15250:	ldrd	r4, [sp]
   15254:	ldr	r6, [sp, #8]
   15258:	add	sp, sp, #12
   1525c:	pop	{pc}		; (ldr pc, [sp], #4)
   15260:	strd	r4, [sp, #-20]!	; 0xffffffec
   15264:	strd	r6, [sp, #8]
   15268:	str	lr, [sp, #16]
   1526c:	sub	sp, sp, #12
   15270:	mov	r4, r0
   15274:	mov	r5, r1
   15278:	mov	r6, r2
   1527c:	add	r1, sp, #4
   15280:	movw	r0, #58860	; 0xe5ec
   15284:	movt	r0, #1
   15288:	bl	11d40 <ftello64@plt+0x718>
   1528c:	subs	r7, r0, #0
   15290:	beq	152e8 <ftello64@plt+0x3cc0>
   15294:	ldr	r2, [r4, #4]
   15298:	movw	r1, #35091	; 0x8913
   1529c:	ldr	r0, [r4, #8]
   152a0:	bl	18a18 <argp_parse@@Base+0xdf0>
   152a4:	cmp	r0, #0
   152a8:	blt	152e8 <ftello64@plt+0x3cc0>
   152ac:	ldr	r2, [r4, #4]
   152b0:	ldrh	r3, [r2, #16]
   152b4:	tst	r3, r7
   152b8:	beq	15310 <ftello64@plt+0x3ce8>
   152bc:	movw	r1, #35097	; 0x8919
   152c0:	ldr	r0, [r4, #8]
   152c4:	bl	18a18 <argp_parse@@Base+0xdf0>
   152c8:	cmp	r0, #0
   152cc:	movge	r3, #0
   152d0:	movlt	r3, #1
   152d4:	mov	r2, r6
   152d8:	mov	r1, r5
   152dc:	mov	r0, r4
   152e0:	bl	14ea0 <ftello64@plt+0x3878>
   152e4:	b	152fc <ftello64@plt+0x3cd4>
   152e8:	mov	r3, #1
   152ec:	mov	r2, r6
   152f0:	mov	r1, r5
   152f4:	mov	r0, r4
   152f8:	bl	14ea0 <ftello64@plt+0x3878>
   152fc:	add	sp, sp, #12
   15300:	ldrd	r4, [sp]
   15304:	ldrd	r6, [sp, #8]
   15308:	add	sp, sp, #16
   1530c:	pop	{pc}		; (ldr pc, [sp], #4)
   15310:	mov	r3, #1
   15314:	mov	r2, r6
   15318:	mov	r1, r5
   1531c:	mov	r0, r4
   15320:	bl	14ea0 <ftello64@plt+0x3878>
   15324:	b	152fc <ftello64@plt+0x3cd4>
   15328:	strd	r4, [sp, #-20]!	; 0xffffffec
   1532c:	strd	r6, [sp, #8]
   15330:	str	lr, [sp, #16]
   15334:	sub	sp, sp, #12
   15338:	mov	r4, r0
   1533c:	mov	r5, r1
   15340:	mov	r6, r2
   15344:	add	r1, sp, #4
   15348:	movw	r0, #58892	; 0xe60c
   1534c:	movt	r0, #1
   15350:	bl	11d40 <ftello64@plt+0x718>
   15354:	subs	r7, r0, #0
   15358:	beq	153b0 <ftello64@plt+0x3d88>
   1535c:	ldr	r2, [r4, #4]
   15360:	movw	r1, #35091	; 0x8913
   15364:	ldr	r0, [r4, #8]
   15368:	bl	18a18 <argp_parse@@Base+0xdf0>
   1536c:	cmp	r0, #0
   15370:	blt	153b0 <ftello64@plt+0x3d88>
   15374:	ldr	r2, [r4, #4]
   15378:	ldrh	r3, [r2, #16]
   1537c:	tst	r3, r7
   15380:	beq	153d8 <ftello64@plt+0x3db0>
   15384:	movw	r1, #35095	; 0x8917
   15388:	ldr	r0, [r4, #8]
   1538c:	bl	18a18 <argp_parse@@Base+0xdf0>
   15390:	cmp	r0, #0
   15394:	movge	r3, #0
   15398:	movlt	r3, #1
   1539c:	mov	r2, r6
   153a0:	mov	r1, r5
   153a4:	mov	r0, r4
   153a8:	bl	14ea0 <ftello64@plt+0x3878>
   153ac:	b	153c4 <ftello64@plt+0x3d9c>
   153b0:	mov	r3, #1
   153b4:	mov	r2, r6
   153b8:	mov	r1, r5
   153bc:	mov	r0, r4
   153c0:	bl	14ea0 <ftello64@plt+0x3878>
   153c4:	add	sp, sp, #12
   153c8:	ldrd	r4, [sp]
   153cc:	ldrd	r6, [sp, #8]
   153d0:	add	sp, sp, #16
   153d4:	pop	{pc}		; (ldr pc, [sp], #4)
   153d8:	mov	r3, #1
   153dc:	mov	r2, r6
   153e0:	mov	r1, r5
   153e4:	mov	r0, r4
   153e8:	bl	14ea0 <ftello64@plt+0x3878>
   153ec:	b	153c4 <ftello64@plt+0x3d9c>
   153f0:	strd	r4, [sp, #-16]!
   153f4:	str	r6, [sp, #8]
   153f8:	str	lr, [sp, #12]
   153fc:	mov	r4, r0
   15400:	mov	r5, r1
   15404:	mov	r6, r2
   15408:	ldr	r2, [r0, #4]
   1540c:	movw	r1, #35105	; 0x8921
   15410:	ldr	r0, [r0, #8]
   15414:	bl	18a18 <argp_parse@@Base+0xdf0>
   15418:	cmp	r0, #0
   1541c:	movge	r3, #0
   15420:	movlt	r3, #1
   15424:	mov	r2, r6
   15428:	mov	r1, r5
   1542c:	mov	r0, r4
   15430:	bl	14ea0 <ftello64@plt+0x3878>
   15434:	ldrd	r4, [sp]
   15438:	ldr	r6, [sp, #8]
   1543c:	add	sp, sp, #12
   15440:	pop	{pc}		; (ldr pc, [sp], #4)
   15444:	strd	r4, [sp, #-16]!
   15448:	str	r6, [sp, #8]
   1544c:	str	lr, [sp, #12]
   15450:	mov	r4, r0
   15454:	mov	r5, r1
   15458:	mov	r6, r2
   1545c:	ldr	r2, [r0, #4]
   15460:	movw	r1, #35101	; 0x891d
   15464:	ldr	r0, [r0, #8]
   15468:	bl	18a18 <argp_parse@@Base+0xdf0>
   1546c:	cmp	r0, #0
   15470:	blt	15484 <ftello64@plt+0x3e5c>
   15474:	ldr	r3, [r4, #4]
   15478:	ldr	r3, [r3, #16]
   1547c:	cmp	r3, #0
   15480:	bgt	154a8 <ftello64@plt+0x3e80>
   15484:	mov	r3, #1
   15488:	mov	r2, r6
   1548c:	mov	r1, r5
   15490:	mov	r0, r4
   15494:	bl	14ea0 <ftello64@plt+0x3878>
   15498:	ldrd	r4, [sp]
   1549c:	ldr	r6, [sp, #8]
   154a0:	add	sp, sp, #12
   154a4:	pop	{pc}		; (ldr pc, [sp], #4)
   154a8:	mov	r3, #0
   154ac:	mov	r2, r6
   154b0:	mov	r1, r5
   154b4:	mov	r0, r4
   154b8:	bl	14ea0 <ftello64@plt+0x3878>
   154bc:	b	15498 <ftello64@plt+0x3e70>
   154c0:	strd	r4, [sp, #-16]!
   154c4:	str	r6, [sp, #8]
   154c8:	str	lr, [sp, #12]
   154cc:	mov	r4, r0
   154d0:	mov	r5, r1
   154d4:	mov	r6, r2
   154d8:	ldr	r2, [r0, #4]
   154dc:	movw	r1, #35091	; 0x8913
   154e0:	ldr	r0, [r0, #8]
   154e4:	bl	18a18 <argp_parse@@Base+0xdf0>
   154e8:	cmp	r0, #0
   154ec:	movge	r3, #0
   154f0:	movlt	r3, #1
   154f4:	mov	r2, r6
   154f8:	mov	r1, r5
   154fc:	mov	r0, r4
   15500:	bl	14ea0 <ftello64@plt+0x3878>
   15504:	ldrd	r4, [sp]
   15508:	ldr	r6, [sp, #8]
   1550c:	add	sp, sp, #12
   15510:	pop	{pc}		; (ldr pc, [sp], #4)
   15514:	str	r4, [sp, #-8]!
   15518:	str	lr, [sp, #4]
   1551c:	mov	r3, #1
   15520:	bl	14ea0 <ftello64@plt+0x3878>
   15524:	ldr	r4, [sp]
   15528:	add	sp, sp, #4
   1552c:	pop	{pc}		; (ldr pc, [sp], #4)
   15530:	str	r4, [sp, #-8]!
   15534:	str	lr, [sp, #4]
   15538:	mov	r3, #1
   1553c:	bl	14ea0 <ftello64@plt+0x3878>
   15540:	ldr	r4, [sp]
   15544:	add	sp, sp, #4
   15548:	pop	{pc}		; (ldr pc, [sp], #4)
   1554c:	strd	r4, [sp, #-16]!
   15550:	str	r6, [sp, #8]
   15554:	str	lr, [sp, #12]
   15558:	mov	r4, r0
   1555c:	mov	r5, r1
   15560:	mov	r6, r2
   15564:	ldr	r2, [r0, #4]
   15568:	movw	r1, #35184	; 0x8970
   1556c:	ldr	r0, [r0, #8]
   15570:	bl	18a18 <argp_parse@@Base+0xdf0>
   15574:	cmp	r0, #0
   15578:	movge	r3, #0
   1557c:	movlt	r3, #1
   15580:	mov	r2, r6
   15584:	mov	r1, r5
   15588:	mov	r0, r4
   1558c:	bl	14ea0 <ftello64@plt+0x3878>
   15590:	ldrd	r4, [sp]
   15594:	ldr	r6, [sp, #8]
   15598:	add	sp, sp, #12
   1559c:	pop	{pc}		; (ldr pc, [sp], #4)
   155a0:	str	r4, [sp, #-8]!
   155a4:	str	lr, [sp, #4]
   155a8:	ldr	r3, [r0, #4]
   155ac:	ldrb	r3, [r3, #26]
   155b0:	cmp	r3, #0
   155b4:	movne	r3, #0
   155b8:	moveq	r3, #1
   155bc:	bl	14ea0 <ftello64@plt+0x3878>
   155c0:	ldr	r4, [sp]
   155c4:	add	sp, sp, #4
   155c8:	pop	{pc}		; (ldr pc, [sp], #4)
   155cc:	str	r4, [sp, #-8]!
   155d0:	str	lr, [sp, #4]
   155d4:	ldr	r3, [r0, #4]
   155d8:	ldrh	r3, [r3, #24]
   155dc:	cmp	r3, #255	; 0xff
   155e0:	movhi	r3, #0
   155e4:	movls	r3, #1
   155e8:	bl	14ea0 <ftello64@plt+0x3878>
   155ec:	ldr	r4, [sp]
   155f0:	add	sp, sp, #4
   155f4:	pop	{pc}		; (ldr pc, [sp], #4)
   155f8:	str	r4, [sp, #-8]!
   155fc:	str	lr, [sp, #4]
   15600:	ldr	r3, [r0, #4]
   15604:	ldr	r3, [r3, #16]
   15608:	cmp	r3, #0
   1560c:	movne	r3, #0
   15610:	moveq	r3, #1
   15614:	bl	14ea0 <ftello64@plt+0x3878>
   15618:	ldr	r4, [sp]
   1561c:	add	sp, sp, #4
   15620:	pop	{pc}		; (ldr pc, [sp], #4)
   15624:	str	r4, [sp, #-8]!
   15628:	str	lr, [sp, #4]
   1562c:	ldr	r3, [r0, #4]
   15630:	ldr	r3, [r3, #20]
   15634:	cmp	r3, #0
   15638:	movne	r3, #0
   1563c:	moveq	r3, #1
   15640:	bl	14ea0 <ftello64@plt+0x3878>
   15644:	ldr	r4, [sp]
   15648:	add	sp, sp, #4
   1564c:	pop	{pc}		; (ldr pc, [sp], #4)
   15650:	str	r4, [sp, #-8]!
   15654:	str	lr, [sp, #4]
   15658:	ldr	r3, [r0, #4]
   1565c:	ldrb	r3, [r3, #27]
   15660:	cmp	r3, #0
   15664:	movne	r3, #0
   15668:	moveq	r3, #1
   1566c:	bl	14ea0 <ftello64@plt+0x3878>
   15670:	ldr	r4, [sp]
   15674:	add	sp, sp, #4
   15678:	pop	{pc}		; (ldr pc, [sp], #4)
   1567c:	cmp	r1, #0
   15680:	bxeq	lr
   15684:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15688:	strd	r6, [sp, #8]
   1568c:	str	r8, [sp, #16]
   15690:	str	lr, [sp, #20]
   15694:	mov	r6, r2
   15698:	mov	r4, r0
   1569c:	ldr	r8, [r0]
   156a0:	movw	r3, #8880	; 0x22b0
   156a4:	movt	r3, #3
   156a8:	ldr	r3, [r3]
   156ac:	cmp	r3, #0
   156b0:	beq	156e4 <ftello64@plt+0x40bc>
   156b4:	movw	r5, #8880	; 0x22b0
   156b8:	movt	r5, #3
   156bc:	mov	r7, #0
   156c0:	str	r3, [r4]
   156c4:	ldr	r3, [r6]
   156c8:	str	r3, [r4, #16]
   156cc:	mov	r1, r7
   156d0:	mov	r0, r4
   156d4:	bl	14ba4 <ftello64@plt+0x357c>
   156d8:	ldr	r3, [r5, #12]!
   156dc:	cmp	r3, #0
   156e0:	bne	156c0 <ftello64@plt+0x4098>
   156e4:	str	r8, [r4]
   156e8:	ldrd	r4, [sp]
   156ec:	ldrd	r6, [sp, #8]
   156f0:	ldr	r8, [sp, #16]
   156f4:	add	sp, sp, #20
   156f8:	pop	{pc}		; (ldr pc, [sp], #4)
   156fc:	cmp	r1, #1
   15700:	bxle	lr
   15704:	strd	r4, [sp, #-20]!	; 0xffffffec
   15708:	strd	r6, [sp, #8]
   1570c:	str	lr, [sp, #16]
   15710:	sub	sp, sp, #12
   15714:	mov	r6, r2
   15718:	mov	r5, r0
   1571c:	mov	r2, #10
   15720:	add	r1, sp, #4
   15724:	ldr	r0, [r6]
   15728:	bl	11490 <strtoul@plt>
   1572c:	mov	r7, r0
   15730:	ldr	r3, [sp, #4]
   15734:	ldrb	r3, [r3]
   15738:	cmp	r3, #0
   1573c:	bne	15784 <ftello64@plt+0x415c>
   15740:	sub	r4, r7, #1
   15744:	cmp	r7, #0
   15748:	beq	15770 <ftello64@plt+0x4148>
   1574c:	mov	r7, #0
   15750:	ldr	r3, [r6, #4]
   15754:	str	r3, [r5, #16]
   15758:	mov	r1, r7
   1575c:	mov	r0, r5
   15760:	bl	14ba4 <ftello64@plt+0x357c>
   15764:	sub	r4, r4, #1
   15768:	cmn	r4, #1
   1576c:	bne	15750 <ftello64@plt+0x4128>
   15770:	add	sp, sp, #12
   15774:	ldrd	r4, [sp]
   15778:	ldrd	r6, [sp, #8]
   1577c:	add	sp, sp, #16
   15780:	pop	{pc}		; (ldr pc, [sp], #4)
   15784:	movw	r2, #332	; 0x14c
   15788:	movt	r2, #2
   1578c:	mov	r1, #0
   15790:	mov	r0, #1
   15794:	bl	11400 <error@plt>
   15798:	b	15740 <ftello64@plt+0x4118>
   1579c:	cmp	r1, #1
   157a0:	bxle	lr
   157a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   157a8:	strd	r6, [sp, #8]
   157ac:	strd	r8, [sp, #16]
   157b0:	strd	sl, [sp, #24]
   157b4:	str	lr, [sp, #32]
   157b8:	sub	sp, sp, #4
   157bc:	mov	r9, r2
   157c0:	mov	r5, r0
   157c4:	movw	r3, #11264	; 0x2c00
   157c8:	movt	r3, #3
   157cc:	ldr	sl, [r3]
   157d0:	mov	r2, #0
   157d4:	str	r2, [r3]
   157d8:	add	r4, r9, #4
   157dc:	add	r6, r9, r1, lsl #2
   157e0:	mov	r8, r2
   157e4:	mov	r7, r3
   157e8:	mov	fp, #1
   157ec:	ldr	r3, [r4], #4
   157f0:	str	r3, [r5, #16]
   157f4:	mov	r1, r8
   157f8:	mov	r0, r5
   157fc:	bl	14ba4 <ftello64@plt+0x357c>
   15800:	cmp	r6, r4
   15804:	beq	1582c <ftello64@plt+0x4204>
   15808:	ldr	r3, [r7]
   1580c:	cmp	r3, #0
   15810:	beq	157ec <ftello64@plt+0x41c4>
   15814:	ldr	r1, [r9]
   15818:	mov	r0, r5
   1581c:	bl	13e08 <ftello64@plt+0x27e0>
   15820:	str	r8, [r7]
   15824:	mov	sl, fp
   15828:	b	157ec <ftello64@plt+0x41c4>
   1582c:	movw	r3, #11264	; 0x2c00
   15830:	movt	r3, #3
   15834:	str	sl, [r3]
   15838:	add	sp, sp, #4
   1583c:	ldrd	r4, [sp]
   15840:	ldrd	r6, [sp, #8]
   15844:	ldrd	r8, [sp, #16]
   15848:	ldrd	sl, [sp, #24]
   1584c:	add	sp, sp, #32
   15850:	pop	{pc}		; (ldr pc, [sp], #4)
   15854:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15858:	strd	r6, [sp, #8]
   1585c:	str	r8, [sp, #16]
   15860:	str	lr, [sp, #20]
   15864:	subs	r6, r1, #0
   15868:	ble	158ac <ftello64@plt+0x4284>
   1586c:	mov	r7, r0
   15870:	sub	r5, r2, #4
   15874:	mov	r4, #0
   15878:	ldr	r0, [r5, #4]!
   1587c:	bl	12ab8 <ftello64@plt+0x1490>
   15880:	cmp	r0, #0
   15884:	bne	15898 <ftello64@plt+0x4270>
   15888:	add	r4, r4, #1
   1588c:	cmp	r6, r4
   15890:	bne	15878 <ftello64@plt+0x4250>
   15894:	b	158ac <ftello64@plt+0x4284>
   15898:	ldr	r3, [r0, #8]
   1589c:	str	r3, [r7, #16]
   158a0:	mov	r1, #0
   158a4:	mov	r0, r7
   158a8:	bl	14ba4 <ftello64@plt+0x357c>
   158ac:	ldrd	r4, [sp]
   158b0:	ldrd	r6, [sp, #8]
   158b4:	ldr	r8, [sp, #16]
   158b8:	add	sp, sp, #20
   158bc:	pop	{pc}		; (ldr pc, [sp], #4)
   158c0:	push	{lr}		; (str lr, [sp, #-4]!)
   158c4:	sub	sp, sp, #28
   158c8:	movw	ip, #11276	; 0x2c0c
   158cc:	movt	ip, #3
   158d0:	ldr	ip, [ip]
   158d4:	cmp	ip, #0
   158d8:	beq	15934 <ftello64@plt+0x430c>
   158dc:	movw	ip, #11172	; 0x2ba4
   158e0:	movt	ip, #3
   158e4:	ldr	ip, [ip]
   158e8:	cmp	ip, #0
   158ec:	movne	ip, #0
   158f0:	strne	ip, [sp, #12]
   158f4:	bne	1590c <ftello64@plt+0x42e4>
   158f8:	mov	lr, #1
   158fc:	str	lr, [sp, #12]
   15900:	movw	ip, #11172	; 0x2ba4
   15904:	movt	ip, #3
   15908:	str	lr, [ip]
   1590c:	str	r1, [sp]
   15910:	str	r2, [sp, #4]
   15914:	str	r3, [sp, #16]
   15918:	str	r0, [sp, #8]
   1591c:	mov	r1, #0
   15920:	str	r1, [sp, #20]
   15924:	mov	r0, sp
   15928:	bl	14ba4 <ftello64@plt+0x357c>
   1592c:	add	sp, sp, #28
   15930:	pop	{pc}		; (ldr pc, [sp], #4)
   15934:	movw	ip, #11276	; 0x2c0c
   15938:	movt	ip, #3
   1593c:	movw	lr, #11076	; 0x2b44
   15940:	movt	lr, #3
   15944:	ldr	lr, [lr]
   15948:	str	lr, [ip]
   1594c:	b	158dc <ftello64@plt+0x42b4>
   15950:	push	{lr}		; (str lr, [sp, #-4]!)
   15954:	sub	sp, sp, #12
   15958:	ldrb	r3, [r1]
   1595c:	str	r3, [sp]
   15960:	ldrb	r3, [r1, #1]
   15964:	ldrb	r2, [r1, #2]
   15968:	ldrb	r1, [r1, #3]
   1596c:	movw	r0, #1048	; 0x418
   15970:	movt	r0, #2
   15974:	bl	11310 <printf@plt>
   15978:	movw	r3, #9492	; 0x2514
   1597c:	movt	r3, #3
   15980:	ldr	r2, [r3]
   15984:	ldr	r3, [r2]
   15988:	add	r0, r3, r0
   1598c:	str	r0, [r2]
   15990:	movw	r3, #11264	; 0x2c00
   15994:	movt	r3, #3
   15998:	mov	r2, #1
   1599c:	str	r2, [r3]
   159a0:	add	sp, sp, #12
   159a4:	pop	{pc}		; (ldr pc, [sp], #4)
   159a8:	push	{lr}		; (str lr, [sp, #-4]!)
   159ac:	sub	sp, sp, #12
   159b0:	ldrb	r3, [r1, #4]
   159b4:	str	r3, [sp, #4]
   159b8:	ldrb	r3, [r1, #3]
   159bc:	str	r3, [sp]
   159c0:	ldrb	r3, [r1, #2]
   159c4:	ldrb	r2, [r1, #1]
   159c8:	ldrb	r1, [r1]
   159cc:	movw	r0, #1068	; 0x42c
   159d0:	movt	r0, #2
   159d4:	bl	11310 <printf@plt>
   159d8:	movw	r3, #9492	; 0x2514
   159dc:	movt	r3, #3
   159e0:	ldr	r2, [r3]
   159e4:	ldr	r3, [r2]
   159e8:	add	r0, r3, r0
   159ec:	str	r0, [r2]
   159f0:	movw	r3, #11264	; 0x2c00
   159f4:	movt	r3, #3
   159f8:	mov	r2, #1
   159fc:	str	r2, [r3]
   15a00:	add	sp, sp, #12
   15a04:	pop	{pc}		; (ldr pc, [sp], #4)
   15a08:	str	r4, [sp, #-8]!
   15a0c:	str	lr, [sp, #4]
   15a10:	ldrsh	r1, [r1]
   15a14:	movw	r0, #65500	; 0xffdc
   15a18:	movt	r0, #1
   15a1c:	bl	11310 <printf@plt>
   15a20:	movw	r3, #9492	; 0x2514
   15a24:	movt	r3, #3
   15a28:	ldr	r2, [r3]
   15a2c:	ldr	r3, [r2]
   15a30:	add	r0, r3, r0
   15a34:	str	r0, [r2]
   15a38:	movw	r3, #11264	; 0x2c00
   15a3c:	movt	r3, #3
   15a40:	mov	r2, #1
   15a44:	str	r2, [r3]
   15a48:	ldr	r4, [sp]
   15a4c:	add	sp, sp, #4
   15a50:	pop	{pc}		; (ldr pc, [sp], #4)
   15a54:	str	r4, [sp, #-8]!
   15a58:	str	lr, [sp, #4]
   15a5c:	ldrb	r1, [r1]
   15a60:	movw	r0, #1084	; 0x43c
   15a64:	movt	r0, #2
   15a68:	bl	11310 <printf@plt>
   15a6c:	movw	r3, #9492	; 0x2514
   15a70:	movt	r3, #3
   15a74:	ldr	r2, [r3]
   15a78:	ldr	r3, [r2]
   15a7c:	add	r0, r3, r0
   15a80:	str	r0, [r2]
   15a84:	movw	r3, #11264	; 0x2c00
   15a88:	movt	r3, #3
   15a8c:	mov	r2, #1
   15a90:	str	r2, [r3]
   15a94:	ldr	r4, [sp]
   15a98:	add	sp, sp, #4
   15a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   15aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   15aa4:	sub	sp, sp, #20
   15aa8:	ldrb	r3, [r1, #5]
   15aac:	str	r3, [sp, #8]
   15ab0:	ldrb	r3, [r1, #4]
   15ab4:	str	r3, [sp, #4]
   15ab8:	ldrb	r3, [r1, #3]
   15abc:	str	r3, [sp]
   15ac0:	ldrb	r3, [r1, #2]
   15ac4:	ldrb	r2, [r1, #1]
   15ac8:	ldrb	r1, [r1]
   15acc:	movw	r0, #1092	; 0x444
   15ad0:	movt	r0, #2
   15ad4:	bl	11310 <printf@plt>
   15ad8:	movw	r3, #9492	; 0x2514
   15adc:	movt	r3, #3
   15ae0:	ldr	r2, [r3]
   15ae4:	ldr	r3, [r2]
   15ae8:	add	r0, r3, r0
   15aec:	str	r0, [r2]
   15af0:	movw	r3, #11264	; 0x2c00
   15af4:	movt	r3, #3
   15af8:	mov	r2, #1
   15afc:	str	r2, [r3]
   15b00:	add	sp, sp, #20
   15b04:	pop	{pc}		; (ldr pc, [sp], #4)
   15b08:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b0c:	strd	r6, [sp, #8]
   15b10:	str	r8, [sp, #16]
   15b14:	str	lr, [sp, #20]
   15b18:	mov	r6, r1
   15b1c:	ldrb	r1, [r1]
   15b20:	lsr	r1, r1, #1
   15b24:	cmp	r1, #32
   15b28:	beq	15b5c <ftello64@plt+0x4534>
   15b2c:	mov	r5, r0
   15b30:	bl	13c68 <ftello64@plt+0x2640>
   15b34:	mov	r4, r6
   15b38:	add	r7, r6, #5
   15b3c:	ldrb	r1, [r4, #1]!
   15b40:	lsr	r1, r1, #1
   15b44:	cmp	r1, #32
   15b48:	beq	15b5c <ftello64@plt+0x4534>
   15b4c:	mov	r0, r5
   15b50:	bl	13c68 <ftello64@plt+0x2640>
   15b54:	cmp	r7, r4
   15b58:	bne	15b3c <ftello64@plt+0x4514>
   15b5c:	ldrb	r1, [r6, #6]
   15b60:	ubfx	r1, r1, #1, #4
   15b64:	cmp	r1, #0
   15b68:	bne	15b80 <ftello64@plt+0x4558>
   15b6c:	ldrd	r4, [sp]
   15b70:	ldrd	r6, [sp, #8]
   15b74:	ldr	r8, [sp, #16]
   15b78:	add	sp, sp, #20
   15b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15b80:	movw	r0, #1124	; 0x464
   15b84:	movt	r0, #2
   15b88:	bl	11310 <printf@plt>
   15b8c:	movw	r3, #9492	; 0x2514
   15b90:	movt	r3, #3
   15b94:	ldr	r2, [r3]
   15b98:	ldr	r3, [r2]
   15b9c:	add	r0, r3, r0
   15ba0:	str	r0, [r2]
   15ba4:	movw	r3, #11264	; 0x2c00
   15ba8:	movt	r3, #3
   15bac:	mov	r2, #1
   15bb0:	str	r2, [r3]
   15bb4:	b	15b6c <ftello64@plt+0x4544>
   15bb8:	push	{lr}		; (str lr, [sp, #-4]!)
   15bbc:	sub	sp, sp, #60	; 0x3c
   15bc0:	add	r3, r1, #64	; 0x40
   15bc4:	str	r3, [sp, #52]	; 0x34
   15bc8:	add	r3, r1, #100	; 0x64
   15bcc:	str	r3, [sp, #48]	; 0x30
   15bd0:	add	r3, r1, #68	; 0x44
   15bd4:	str	r3, [sp, #44]	; 0x2c
   15bd8:	add	r3, r1, #104	; 0x68
   15bdc:	str	r3, [sp, #40]	; 0x28
   15be0:	add	r3, r1, #52	; 0x34
   15be4:	str	r3, [sp, #36]	; 0x24
   15be8:	add	r3, r1, #44	; 0x2c
   15bec:	str	r3, [sp, #32]
   15bf0:	add	r3, r1, #16
   15bf4:	str	r3, [sp, #28]
   15bf8:	add	r3, r1, #32
   15bfc:	str	r3, [sp, #24]
   15c00:	add	r3, r1, #56	; 0x38
   15c04:	str	r3, [sp, #20]
   15c08:	add	r3, r1, #60	; 0x3c
   15c0c:	str	r3, [sp, #16]
   15c10:	add	r3, r1, #84	; 0x54
   15c14:	str	r3, [sp, #12]
   15c18:	add	r3, r1, #88	; 0x58
   15c1c:	str	r3, [sp, #8]
   15c20:	add	r3, r1, #48	; 0x30
   15c24:	str	r3, [sp, #4]
   15c28:	add	r3, r1, #40	; 0x28
   15c2c:	str	r3, [sp]
   15c30:	add	r3, r1, #8
   15c34:	add	r2, r1, #24
   15c38:	movw	r1, #1128	; 0x468
   15c3c:	movt	r1, #2
   15c40:	bl	11574 <sscanf@plt>
   15c44:	cmp	r0, #16
   15c48:	movne	r0, #0
   15c4c:	moveq	r0, #1
   15c50:	add	sp, sp, #60	; 0x3c
   15c54:	pop	{pc}		; (ldr pc, [sp], #4)
   15c58:	str	r4, [sp, #-8]!
   15c5c:	str	lr, [sp, #4]
   15c60:	sub	sp, sp, #48	; 0x30
   15c64:	mov	r4, r1
   15c68:	add	r3, r1, #100	; 0x64
   15c6c:	str	r3, [sp, #40]	; 0x28
   15c70:	add	r3, r1, #68	; 0x44
   15c74:	str	r3, [sp, #36]	; 0x24
   15c78:	add	r3, r1, #104	; 0x68
   15c7c:	str	r3, [sp, #32]
   15c80:	add	r3, r1, #52	; 0x34
   15c84:	str	r3, [sp, #28]
   15c88:	add	r3, r1, #44	; 0x2c
   15c8c:	str	r3, [sp, #24]
   15c90:	add	r3, r1, #16
   15c94:	str	r3, [sp, #20]
   15c98:	add	r3, r1, #32
   15c9c:	str	r3, [sp, #16]
   15ca0:	add	r3, r1, #84	; 0x54
   15ca4:	str	r3, [sp, #12]
   15ca8:	add	r3, r1, #88	; 0x58
   15cac:	str	r3, [sp, #8]
   15cb0:	add	r3, r1, #48	; 0x30
   15cb4:	str	r3, [sp, #4]
   15cb8:	add	r3, r1, #40	; 0x28
   15cbc:	str	r3, [sp]
   15cc0:	add	r3, r1, #8
   15cc4:	add	r2, r1, #24
   15cc8:	movw	r1, #1196	; 0x4ac
   15ccc:	movt	r1, #2
   15cd0:	bl	11574 <sscanf@plt>
   15cd4:	mov	r3, #0
   15cd8:	str	r3, [r4, #56]	; 0x38
   15cdc:	cmp	r0, #13
   15ce0:	movne	r0, #0
   15ce4:	moveq	r0, #1
   15ce8:	add	sp, sp, #48	; 0x30
   15cec:	ldr	r4, [sp]
   15cf0:	add	sp, sp, #4
   15cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   15cf8:	str	r4, [sp, #-8]!
   15cfc:	str	lr, [sp, #4]
   15d00:	sub	sp, sp, #40	; 0x28
   15d04:	mov	r4, r1
   15d08:	add	r3, r1, #100	; 0x64
   15d0c:	str	r3, [sp, #32]
   15d10:	add	r3, r1, #68	; 0x44
   15d14:	str	r3, [sp, #28]
   15d18:	add	r3, r1, #104	; 0x68
   15d1c:	str	r3, [sp, #24]
   15d20:	add	r3, r1, #52	; 0x34
   15d24:	str	r3, [sp, #20]
   15d28:	add	r3, r1, #44	; 0x2c
   15d2c:	str	r3, [sp, #16]
   15d30:	add	r3, r1, #16
   15d34:	str	r3, [sp, #12]
   15d38:	add	r3, r1, #84	; 0x54
   15d3c:	str	r3, [sp, #8]
   15d40:	add	r3, r1, #88	; 0x58
   15d44:	str	r3, [sp, #4]
   15d48:	add	r3, r1, #48	; 0x30
   15d4c:	str	r3, [sp]
   15d50:	add	r3, r1, #40	; 0x28
   15d54:	add	r2, r1, #8
   15d58:	movw	r1, #1252	; 0x4e4
   15d5c:	movt	r1, #2
   15d60:	bl	11574 <sscanf@plt>
   15d64:	mov	r2, #0
   15d68:	mov	r3, #0
   15d6c:	strd	r2, [r4, #24]
   15d70:	strd	r2, [r4, #32]
   15d74:	mov	r3, #0
   15d78:	str	r3, [r4, #56]	; 0x38
   15d7c:	cmp	r0, #11
   15d80:	movne	r0, #0
   15d84:	moveq	r0, #1
   15d88:	add	sp, sp, #40	; 0x28
   15d8c:	ldr	r4, [sp]
   15d90:	add	sp, sp, #4
   15d94:	pop	{pc}		; (ldr pc, [sp], #4)
   15d98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15d9c:	strd	r6, [sp, #8]
   15da0:	strd	r8, [sp, #16]
   15da4:	strd	sl, [sp, #24]
   15da8:	str	lr, [sp, #32]
   15dac:	sub	sp, sp, #52	; 0x34
   15db0:	mov	r2, #0
   15db4:	mov	r1, #2
   15db8:	mov	r0, r1
   15dbc:	bl	115e0 <socket@plt>
   15dc0:	subs	r3, r0, #0
   15dc4:	str	r3, [sp, #4]
   15dc8:	movlt	r9, #0
   15dcc:	blt	15f5c <ftello64@plt+0x4934>
   15dd0:	add	r2, sp, #44	; 0x2c
   15dd4:	mov	r1, #0
   15dd8:	movw	r0, #1300	; 0x514
   15ddc:	movt	r0, #2
   15de0:	bl	19178 <_obstack_memory_used@@Base+0x398>
   15de4:	subs	r7, r0, #0
   15de8:	beq	15f7c <ftello64@plt+0x4954>
   15dec:	ldr	r6, [sp, #44]	; 0x2c
   15df0:	mov	r0, r7
   15df4:	mov	r4, #0
   15df8:	mov	r5, #58	; 0x3a
   15dfc:	sub	r2, r0, r7
   15e00:	sub	r2, r6, r2
   15e04:	mov	r1, r5
   15e08:	add	r0, r0, #1
   15e0c:	bl	11514 <memchr@plt>
   15e10:	add	r4, r4, #1
   15e14:	cmp	r0, #0
   15e18:	bne	15dfc <ftello64@plt+0x47d4>
   15e1c:	lsl	r0, r4, #3
   15e20:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   15e24:	subs	r9, r0, #0
   15e28:	beq	15e58 <ftello64@plt+0x4830>
   15e2c:	ldr	r2, [sp, #44]	; 0x2c
   15e30:	mov	r1, #58	; 0x3a
   15e34:	mov	r0, r7
   15e38:	bl	11514 <memchr@plt>
   15e3c:	subs	r5, r0, #0
   15e40:	beq	15f40 <ftello64@plt+0x4918>
   15e44:	mov	r4, r9
   15e48:	mov	r6, #0
   15e4c:	mov	fp, r6
   15e50:	mvn	sl, #0
   15e54:	b	15eec <ftello64@plt+0x48c4>
   15e58:	bl	114c0 <__errno_location@plt>
   15e5c:	mov	r4, r0
   15e60:	ldr	r5, [r0]
   15e64:	ldr	r0, [sp, #4]
   15e68:	bl	11610 <close@plt>
   15e6c:	mov	r0, r7
   15e70:	bl	18900 <argp_parse@@Base+0xcd8>
   15e74:	str	r5, [r4]
   15e78:	b	15f5c <ftello64@plt+0x4934>
   15e7c:	add	r0, r0, #1
   15e80:	bl	11394 <strdup@plt>
   15e84:	mov	r1, r0
   15e88:	str	r0, [r4, #4]
   15e8c:	add	r6, r6, #1
   15e90:	str	r6, [r4]
   15e94:	add	r0, sp, #12
   15e98:	bl	113e8 <strcpy@plt>
   15e9c:	str	sl, [sp, #28]
   15ea0:	add	r2, sp, #12
   15ea4:	movw	r1, #35123	; 0x8933
   15ea8:	ldr	r0, [sp, #4]
   15eac:	bl	18a18 <argp_parse@@Base+0xdf0>
   15eb0:	cmp	r0, #0
   15eb4:	ldrge	r3, [sp, #28]
   15eb8:	strge	r3, [r4]
   15ebc:	ldr	r8, [r4, #4]
   15ec0:	cmp	r8, #0
   15ec4:	beq	15f18 <ftello64@plt+0x48f0>
   15ec8:	sub	r3, r5, r7
   15ecc:	ldr	r2, [sp, #44]	; 0x2c
   15ed0:	sub	r2, r2, r3
   15ed4:	mov	r1, #58	; 0x3a
   15ed8:	mov	r0, r5
   15edc:	bl	11514 <memchr@plt>
   15ee0:	add	r4, r4, #8
   15ee4:	subs	r5, r0, #0
   15ee8:	beq	15f44 <ftello64@plt+0x491c>
   15eec:	mov	r0, r5
   15ef0:	strb	fp, [r0], #-1
   15ef4:	ldrb	r3, [r5, #-1]
   15ef8:	cmp	r3, #32
   15efc:	cmpne	r3, #10
   15f00:	beq	15e7c <ftello64@plt+0x4854>
   15f04:	ldrb	r3, [r0, #-1]!
   15f08:	cmp	r3, #32
   15f0c:	cmpne	r3, #10
   15f10:	bne	15f04 <ftello64@plt+0x48dc>
   15f14:	b	15e7c <ftello64@plt+0x4854>
   15f18:	bl	114c0 <__errno_location@plt>
   15f1c:	mov	r4, r0
   15f20:	ldr	r5, [r0]
   15f24:	ldr	r0, [sp, #4]
   15f28:	bl	11610 <close@plt>
   15f2c:	mov	r0, r7
   15f30:	bl	18900 <argp_parse@@Base+0xcd8>
   15f34:	str	r5, [r4]
   15f38:	mov	r9, r8
   15f3c:	b	15f5c <ftello64@plt+0x4934>
   15f40:	mov	r6, #0
   15f44:	add	r2, r9, r6, lsl #3
   15f48:	mov	r3, #0
   15f4c:	str	r3, [r9, r6, lsl #3]
   15f50:	str	r3, [r2, #4]
   15f54:	mov	r0, r7
   15f58:	bl	18900 <argp_parse@@Base+0xcd8>
   15f5c:	mov	r0, r9
   15f60:	add	sp, sp, #52	; 0x34
   15f64:	ldrd	r4, [sp]
   15f68:	ldrd	r6, [sp, #8]
   15f6c:	ldrd	r8, [sp, #16]
   15f70:	ldrd	sl, [sp, #24]
   15f74:	add	sp, sp, #32
   15f78:	pop	{pc}		; (ldr pc, [sp], #4)
   15f7c:	mov	r9, r7
   15f80:	b	15f5c <ftello64@plt+0x4934>
   15f84:	movw	r3, #10176	; 0x27c0
   15f88:	movt	r3, #3
   15f8c:	ldr	r2, [r3]
   15f90:	cmp	r2, #0
   15f94:	beq	15fd0 <ftello64@plt+0x49a8>
   15f98:	movw	r3, #10176	; 0x27c0
   15f9c:	movt	r3, #3
   15fa0:	ldr	r3, [r3, #8]
   15fa4:	cmp	r0, r3
   15fa8:	beq	15fd8 <ftello64@plt+0x49b0>
   15fac:	movw	r3, #10176	; 0x27c0
   15fb0:	movt	r3, #3
   15fb4:	ldr	r2, [r3, #16]!
   15fb8:	cmp	r2, #0
   15fbc:	beq	15fd0 <ftello64@plt+0x49a8>
   15fc0:	ldr	r2, [r3, #8]
   15fc4:	cmp	r2, r0
   15fc8:	bne	15fb4 <ftello64@plt+0x498c>
   15fcc:	mov	r2, r3
   15fd0:	mov	r0, r2
   15fd4:	bx	lr
   15fd8:	movw	r3, #10176	; 0x27c0
   15fdc:	movt	r3, #3
   15fe0:	b	15fcc <ftello64@plt+0x49a4>
   15fe4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15fe8:	strd	r6, [sp, #8]
   15fec:	strd	r8, [sp, #16]
   15ff0:	strd	sl, [sp, #24]
   15ff4:	str	lr, [sp, #32]
   15ff8:	sub	sp, sp, #28
   15ffc:	str	r0, [sp, #4]
   16000:	movw	r3, #11176	; 0x2ba8
   16004:	movt	r3, #3
   16008:	ldr	r3, [r3]
   1600c:	cmp	r3, #0
   16010:	beq	16068 <ftello64@plt+0x4a40>
   16014:	movw	r3, #11284	; 0x2c14
   16018:	movt	r3, #3
   1601c:	ldr	r4, [r3]
   16020:	cmp	r4, #0
   16024:	beq	16048 <ftello64@plt+0x4a20>
   16028:	ldr	r1, [sp, #4]
   1602c:	ldr	r0, [r4, #4]
   16030:	bl	112f8 <strcmp@plt>
   16034:	cmp	r0, #0
   16038:	beq	16048 <ftello64@plt+0x4a20>
   1603c:	ldr	r4, [r4]
   16040:	cmp	r4, #0
   16044:	bne	16028 <ftello64@plt+0x4a00>
   16048:	mov	r0, r4
   1604c:	add	sp, sp, #28
   16050:	ldrd	r4, [sp]
   16054:	ldrd	r6, [sp, #8]
   16058:	ldrd	r8, [sp, #16]
   1605c:	ldrd	sl, [sp, #24]
   16060:	add	sp, sp, #32
   16064:	pop	{pc}		; (ldr pc, [sp], #4)
   16068:	str	r3, [sp, #16]
   1606c:	str	r3, [sp, #20]
   16070:	movw	r1, #60052	; 0xea94
   16074:	movt	r1, #1
   16078:	movw	r0, #1300	; 0x514
   1607c:	movt	r0, #2
   16080:	bl	115a4 <fopen64@plt>
   16084:	subs	r3, r0, #0
   16088:	str	r3, [sp, #8]
   1608c:	beq	16124 <ftello64@plt+0x4afc>
   16090:	ldr	r4, [sp, #8]
   16094:	mov	r3, r4
   16098:	mov	r2, #10
   1609c:	add	r1, sp, #20
   160a0:	add	r0, sp, #16
   160a4:	bl	112e0 <__getdelim@plt>
   160a8:	cmp	r0, #0
   160ac:	blt	16148 <ftello64@plt+0x4b20>
   160b0:	mov	r3, r4
   160b4:	mov	r2, #10
   160b8:	add	r1, sp, #20
   160bc:	add	r0, sp, #16
   160c0:	bl	112e0 <__getdelim@plt>
   160c4:	cmp	r0, #0
   160c8:	blt	16148 <ftello64@plt+0x4b20>
   160cc:	ldr	r4, [sp, #16]
   160d0:	movw	r1, #1348	; 0x544
   160d4:	movt	r1, #2
   160d8:	mov	r0, r4
   160dc:	bl	112c8 <strstr@plt>
   160e0:	cmp	r0, #0
   160e4:	movne	fp, #2
   160e8:	bne	16104 <ftello64@plt+0x4adc>
   160ec:	movw	r1, #1360	; 0x550
   160f0:	movt	r1, #2
   160f4:	mov	r0, r4
   160f8:	bl	112c8 <strstr@plt>
   160fc:	adds	fp, r0, #0
   16100:	movne	fp, #1
   16104:	movw	sl, #1036	; 0x40c
   16108:	movt	sl, #2
   1610c:	movw	r9, #11280	; 0x2c10
   16110:	movt	r9, #3
   16114:	movw	r3, #11284	; 0x2c14
   16118:	movt	r3, #3
   1611c:	str	r3, [sp, #12]
   16120:	b	161ec <ftello64@plt+0x4bc4>
   16124:	bl	114c0 <__errno_location@plt>
   16128:	movw	r3, #1300	; 0x514
   1612c:	movt	r3, #2
   16130:	movw	r2, #1316	; 0x524
   16134:	movt	r2, #2
   16138:	ldr	r1, [r0]
   1613c:	mov	r0, #0
   16140:	bl	11400 <error@plt>
   16144:	b	16294 <ftello64@plt+0x4c6c>
   16148:	bl	114c0 <__errno_location@plt>
   1614c:	movw	r3, #1300	; 0x514
   16150:	movt	r3, #2
   16154:	movw	r2, #1332	; 0x534
   16158:	movt	r2, #2
   1615c:	ldr	r1, [r0]
   16160:	mov	r0, #0
   16164:	bl	11400 <error@plt>
   16168:	ldr	r0, [sp, #8]
   1616c:	bl	11520 <fclose@plt>
   16170:	ldr	r0, [sp, #16]
   16174:	bl	18900 <argp_parse@@Base+0xcd8>
   16178:	b	16294 <ftello64@plt+0x4c6c>
   1617c:	mov	r1, #58	; 0x3a
   16180:	mov	r0, r4
   16184:	bl	114a8 <strchr@plt>
   16188:	subs	r7, r0, #0
   1618c:	beq	1625c <ftello64@plt+0x4c34>
   16190:	sub	r6, r7, r4
   16194:	add	r0, r6, #1
   16198:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   1619c:	mov	r8, r0
   161a0:	str	r0, [r5, #4]
   161a4:	mov	r2, r6
   161a8:	mov	r1, r4
   161ac:	bl	11364 <memcpy@plt>
   161b0:	mov	r3, #0
   161b4:	strb	r3, [r8, r6]
   161b8:	ldr	r3, [sl, fp, lsl #2]
   161bc:	mov	r1, r5
   161c0:	add	r0, r7, #1
   161c4:	blx	r3
   161c8:	cmp	r0, #0
   161cc:	beq	162a8 <ftello64@plt+0x4c80>
   161d0:	mov	r3, #0
   161d4:	str	r3, [r5]
   161d8:	ldr	r3, [r9]
   161dc:	cmp	r3, #0
   161e0:	ldreq	r3, [sp, #12]
   161e4:	str	r5, [r3]
   161e8:	str	r5, [r9]
   161ec:	ldr	r3, [sp, #8]
   161f0:	mov	r2, #10
   161f4:	add	r1, sp, #20
   161f8:	add	r0, sp, #16
   161fc:	bl	112e0 <__getdelim@plt>
   16200:	cmp	r0, #0
   16204:	ble	16284 <ftello64@plt+0x4c5c>
   16208:	mov	r0, #120	; 0x78
   1620c:	bl	19a00 <_obstack_memory_used@@Base+0xc20>
   16210:	mov	r5, r0
   16214:	ldr	r4, [sp, #16]
   16218:	ldrb	r6, [r4]
   1621c:	cmp	r6, #0
   16220:	beq	1617c <ftello64@plt+0x4b54>
   16224:	bics	r3, r6, #127	; 0x7f
   16228:	bne	1617c <ftello64@plt+0x4b54>
   1622c:	bl	11478 <__ctype_b_loc@plt>
   16230:	ldr	r2, [r0]
   16234:	lsl	r6, r6, #1
   16238:	ldrh	r3, [r2, r6]
   1623c:	tst	r3, #8192	; 0x2000
   16240:	beq	1617c <ftello64@plt+0x4b54>
   16244:	ldrb	r6, [r4, #1]!
   16248:	cmp	r6, #0
   1624c:	beq	1617c <ftello64@plt+0x4b54>
   16250:	bics	r3, r6, #127	; 0x7f
   16254:	beq	16234 <ftello64@plt+0x4c0c>
   16258:	b	1617c <ftello64@plt+0x4b54>
   1625c:	bl	114c0 <__errno_location@plt>
   16260:	movw	r3, #1300	; 0x514
   16264:	movt	r3, #2
   16268:	movw	r2, #1332	; 0x534
   1626c:	movt	r2, #2
   16270:	ldr	r1, [r0]
   16274:	mov	r0, #0
   16278:	bl	11400 <error@plt>
   1627c:	mov	r0, r5
   16280:	bl	18900 <argp_parse@@Base+0xcd8>
   16284:	ldr	r0, [sp, #8]
   16288:	bl	11520 <fclose@plt>
   1628c:	ldr	r0, [sp, #16]
   16290:	bl	18900 <argp_parse@@Base+0xcd8>
   16294:	movw	r3, #11176	; 0x2ba8
   16298:	movt	r3, #3
   1629c:	mov	r2, #1
   162a0:	str	r2, [r3]
   162a4:	b	16014 <ftello64@plt+0x49ec>
   162a8:	bl	114c0 <__errno_location@plt>
   162ac:	movw	r3, #1300	; 0x514
   162b0:	movt	r3, #2
   162b4:	movw	r2, #1332	; 0x534
   162b8:	movt	r2, #2
   162bc:	ldr	r1, [r0]
   162c0:	mov	r0, #0
   162c4:	bl	11400 <error@plt>
   162c8:	mov	r0, r5
   162cc:	bl	18900 <argp_parse@@Base+0xcd8>
   162d0:	b	16284 <ftello64@plt+0x4c5c>
   162d4:	strd	r4, [sp, #-16]!
   162d8:	str	r6, [sp, #8]
   162dc:	str	lr, [sp, #12]
   162e0:	mov	r4, r0
   162e4:	mov	r5, r1
   162e8:	mov	r6, r2
   162ec:	ldr	r0, [r0, #4]
   162f0:	bl	15fe4 <ftello64@plt+0x49bc>
   162f4:	clz	r3, r0
   162f8:	lsr	r3, r3, #5
   162fc:	mov	r2, r6
   16300:	mov	r1, r5
   16304:	mov	r0, r4
   16308:	bl	14ea0 <ftello64@plt+0x3878>
   1630c:	ldrd	r4, [sp]
   16310:	ldr	r6, [sp, #8]
   16314:	add	sp, sp, #12
   16318:	pop	{pc}		; (ldr pc, [sp], #4)
   1631c:	strd	r4, [sp, #-16]!
   16320:	str	r6, [sp, #8]
   16324:	str	lr, [sp, #12]
   16328:	mov	r4, r0
   1632c:	mov	r5, r1
   16330:	mov	r6, r2
   16334:	ldr	r0, [r0, #4]
   16338:	bl	15fe4 <ftello64@plt+0x49bc>
   1633c:	cmp	r0, #0
   16340:	beq	16368 <ftello64@plt+0x4d40>
   16344:	ldr	r3, [r0, #8]
   16348:	mov	r2, r6
   1634c:	mov	r1, r5
   16350:	mov	r0, r4
   16354:	bl	142f8 <ftello64@plt+0x2cd0>
   16358:	ldrd	r4, [sp]
   1635c:	ldr	r6, [sp, #8]
   16360:	add	sp, sp, #12
   16364:	pop	{pc}		; (ldr pc, [sp], #4)
   16368:	movw	r1, #1368	; 0x558
   1636c:	movt	r1, #2
   16370:	mov	r0, r4
   16374:	bl	13e08 <ftello64@plt+0x27e0>
   16378:	b	16358 <ftello64@plt+0x4d30>
   1637c:	strd	r4, [sp, #-16]!
   16380:	str	r6, [sp, #8]
   16384:	str	lr, [sp, #12]
   16388:	mov	r4, r0
   1638c:	mov	r5, r1
   16390:	mov	r6, r2
   16394:	ldr	r0, [r0, #4]
   16398:	bl	15fe4 <ftello64@plt+0x49bc>
   1639c:	cmp	r0, #0
   163a0:	beq	163c8 <ftello64@plt+0x4da0>
   163a4:	ldr	r3, [r0, #16]
   163a8:	mov	r2, r6
   163ac:	mov	r1, r5
   163b0:	mov	r0, r4
   163b4:	bl	142f8 <ftello64@plt+0x2cd0>
   163b8:	ldrd	r4, [sp]
   163bc:	ldr	r6, [sp, #8]
   163c0:	add	sp, sp, #12
   163c4:	pop	{pc}		; (ldr pc, [sp], #4)
   163c8:	movw	r1, #1392	; 0x570
   163cc:	movt	r1, #2
   163d0:	mov	r0, r4
   163d4:	bl	13e08 <ftello64@plt+0x27e0>
   163d8:	b	163b8 <ftello64@plt+0x4d90>
   163dc:	strd	r4, [sp, #-16]!
   163e0:	str	r6, [sp, #8]
   163e4:	str	lr, [sp, #12]
   163e8:	mov	r4, r0
   163ec:	mov	r5, r1
   163f0:	mov	r6, r2
   163f4:	ldr	r0, [r0, #4]
   163f8:	bl	15fe4 <ftello64@plt+0x49bc>
   163fc:	cmp	r0, #0
   16400:	beq	16428 <ftello64@plt+0x4e00>
   16404:	ldr	r3, [r0, #24]
   16408:	mov	r2, r6
   1640c:	mov	r1, r5
   16410:	mov	r0, r4
   16414:	bl	142f8 <ftello64@plt+0x2cd0>
   16418:	ldrd	r4, [sp]
   1641c:	ldr	r6, [sp, #8]
   16420:	add	sp, sp, #12
   16424:	pop	{pc}		; (ldr pc, [sp], #4)
   16428:	movw	r1, #1416	; 0x588
   1642c:	movt	r1, #2
   16430:	mov	r0, r4
   16434:	bl	13e08 <ftello64@plt+0x27e0>
   16438:	b	16418 <ftello64@plt+0x4df0>
   1643c:	strd	r4, [sp, #-16]!
   16440:	str	r6, [sp, #8]
   16444:	str	lr, [sp, #12]
   16448:	mov	r4, r0
   1644c:	mov	r5, r1
   16450:	mov	r6, r2
   16454:	ldr	r0, [r0, #4]
   16458:	bl	15fe4 <ftello64@plt+0x49bc>
   1645c:	cmp	r0, #0
   16460:	beq	16488 <ftello64@plt+0x4e60>
   16464:	ldr	r3, [r0, #32]
   16468:	mov	r2, r6
   1646c:	mov	r1, r5
   16470:	mov	r0, r4
   16474:	bl	142f8 <ftello64@plt+0x2cd0>
   16478:	ldrd	r4, [sp]
   1647c:	ldr	r6, [sp, #8]
   16480:	add	sp, sp, #12
   16484:	pop	{pc}		; (ldr pc, [sp], #4)
   16488:	movw	r1, #1436	; 0x59c
   1648c:	movt	r1, #2
   16490:	mov	r0, r4
   16494:	bl	13e08 <ftello64@plt+0x27e0>
   16498:	b	16478 <ftello64@plt+0x4e50>
   1649c:	strd	r4, [sp, #-16]!
   164a0:	str	r6, [sp, #8]
   164a4:	str	lr, [sp, #12]
   164a8:	mov	r4, r0
   164ac:	mov	r5, r1
   164b0:	mov	r6, r2
   164b4:	ldr	r0, [r0, #4]
   164b8:	bl	15fe4 <ftello64@plt+0x49bc>
   164bc:	cmp	r0, #0
   164c0:	beq	164e8 <ftello64@plt+0x4ec0>
   164c4:	ldr	r3, [r0, #40]	; 0x28
   164c8:	mov	r2, r6
   164cc:	mov	r1, r5
   164d0:	mov	r0, r4
   164d4:	bl	142f8 <ftello64@plt+0x2cd0>
   164d8:	ldrd	r4, [sp]
   164dc:	ldr	r6, [sp, #8]
   164e0:	add	sp, sp, #12
   164e4:	pop	{pc}		; (ldr pc, [sp], #4)
   164e8:	movw	r1, #1456	; 0x5b0
   164ec:	movt	r1, #2
   164f0:	mov	r0, r4
   164f4:	bl	13e08 <ftello64@plt+0x27e0>
   164f8:	b	164d8 <ftello64@plt+0x4eb0>
   164fc:	strd	r4, [sp, #-16]!
   16500:	str	r6, [sp, #8]
   16504:	str	lr, [sp, #12]
   16508:	mov	r4, r0
   1650c:	mov	r5, r1
   16510:	mov	r6, r2
   16514:	ldr	r0, [r0, #4]
   16518:	bl	15fe4 <ftello64@plt+0x49bc>
   1651c:	cmp	r0, #0
   16520:	beq	16548 <ftello64@plt+0x4f20>
   16524:	ldr	r3, [r0, #44]	; 0x2c
   16528:	mov	r2, r6
   1652c:	mov	r1, r5
   16530:	mov	r0, r4
   16534:	bl	142f8 <ftello64@plt+0x2cd0>
   16538:	ldrd	r4, [sp]
   1653c:	ldr	r6, [sp, #8]
   16540:	add	sp, sp, #12
   16544:	pop	{pc}		; (ldr pc, [sp], #4)
   16548:	movw	r1, #1476	; 0x5c4
   1654c:	movt	r1, #2
   16550:	mov	r0, r4
   16554:	bl	13e08 <ftello64@plt+0x27e0>
   16558:	b	16538 <ftello64@plt+0x4f10>
   1655c:	strd	r4, [sp, #-16]!
   16560:	str	r6, [sp, #8]
   16564:	str	lr, [sp, #12]
   16568:	mov	r4, r0
   1656c:	mov	r5, r1
   16570:	mov	r6, r2
   16574:	ldr	r0, [r0, #4]
   16578:	bl	15fe4 <ftello64@plt+0x49bc>
   1657c:	cmp	r0, #0
   16580:	beq	165a8 <ftello64@plt+0x4f80>
   16584:	ldr	r3, [r0, #48]	; 0x30
   16588:	mov	r2, r6
   1658c:	mov	r1, r5
   16590:	mov	r0, r4
   16594:	bl	142f8 <ftello64@plt+0x2cd0>
   16598:	ldrd	r4, [sp]
   1659c:	ldr	r6, [sp, #8]
   165a0:	add	sp, sp, #12
   165a4:	pop	{pc}		; (ldr pc, [sp], #4)
   165a8:	movw	r1, #1496	; 0x5d8
   165ac:	movt	r1, #2
   165b0:	mov	r0, r4
   165b4:	bl	13e08 <ftello64@plt+0x27e0>
   165b8:	b	16598 <ftello64@plt+0x4f70>
   165bc:	strd	r4, [sp, #-16]!
   165c0:	str	r6, [sp, #8]
   165c4:	str	lr, [sp, #12]
   165c8:	mov	r4, r0
   165cc:	mov	r5, r1
   165d0:	mov	r6, r2
   165d4:	ldr	r0, [r0, #4]
   165d8:	bl	15fe4 <ftello64@plt+0x49bc>
   165dc:	cmp	r0, #0
   165e0:	beq	16608 <ftello64@plt+0x4fe0>
   165e4:	ldr	r3, [r0, #52]	; 0x34
   165e8:	mov	r2, r6
   165ec:	mov	r1, r5
   165f0:	mov	r0, r4
   165f4:	bl	142f8 <ftello64@plt+0x2cd0>
   165f8:	ldrd	r4, [sp]
   165fc:	ldr	r6, [sp, #8]
   16600:	add	sp, sp, #12
   16604:	pop	{pc}		; (ldr pc, [sp], #4)
   16608:	movw	r1, #1520	; 0x5f0
   1660c:	movt	r1, #2
   16610:	mov	r0, r4
   16614:	bl	13e08 <ftello64@plt+0x27e0>
   16618:	b	165f8 <ftello64@plt+0x4fd0>
   1661c:	strd	r4, [sp, #-16]!
   16620:	str	r6, [sp, #8]
   16624:	str	lr, [sp, #12]
   16628:	mov	r4, r0
   1662c:	mov	r5, r1
   16630:	mov	r6, r2
   16634:	ldr	r0, [r0, #4]
   16638:	bl	15fe4 <ftello64@plt+0x49bc>
   1663c:	cmp	r0, #0
   16640:	beq	16668 <ftello64@plt+0x5040>
   16644:	ldr	r3, [r0, #56]	; 0x38
   16648:	mov	r2, r6
   1664c:	mov	r1, r5
   16650:	mov	r0, r4
   16654:	bl	142f8 <ftello64@plt+0x2cd0>
   16658:	ldrd	r4, [sp]
   1665c:	ldr	r6, [sp, #8]
   16660:	add	sp, sp, #12
   16664:	pop	{pc}		; (ldr pc, [sp], #4)
   16668:	movw	r1, #1544	; 0x608
   1666c:	movt	r1, #2
   16670:	mov	r0, r4
   16674:	bl	13e08 <ftello64@plt+0x27e0>
   16678:	b	16658 <ftello64@plt+0x5030>
   1667c:	strd	r4, [sp, #-16]!
   16680:	str	r6, [sp, #8]
   16684:	str	lr, [sp, #12]
   16688:	mov	r4, r0
   1668c:	mov	r5, r1
   16690:	mov	r6, r2
   16694:	ldr	r0, [r0, #4]
   16698:	bl	15fe4 <ftello64@plt+0x49bc>
   1669c:	cmp	r0, #0
   166a0:	beq	166c8 <ftello64@plt+0x50a0>
   166a4:	ldr	r3, [r0, #60]	; 0x3c
   166a8:	mov	r2, r6
   166ac:	mov	r1, r5
   166b0:	mov	r0, r4
   166b4:	bl	142f8 <ftello64@plt+0x2cd0>
   166b8:	ldrd	r4, [sp]
   166bc:	ldr	r6, [sp, #8]
   166c0:	add	sp, sp, #12
   166c4:	pop	{pc}		; (ldr pc, [sp], #4)
   166c8:	movw	r1, #1568	; 0x620
   166cc:	movt	r1, #2
   166d0:	mov	r0, r4
   166d4:	bl	13e08 <ftello64@plt+0x27e0>
   166d8:	b	166b8 <ftello64@plt+0x5090>
   166dc:	strd	r4, [sp, #-16]!
   166e0:	str	r6, [sp, #8]
   166e4:	str	lr, [sp, #12]
   166e8:	mov	r4, r0
   166ec:	mov	r5, r1
   166f0:	mov	r6, r2
   166f4:	ldr	r0, [r0, #4]
   166f8:	bl	15fe4 <ftello64@plt+0x49bc>
   166fc:	cmp	r0, #0
   16700:	beq	16728 <ftello64@plt+0x5100>
   16704:	ldr	r3, [r0, #64]	; 0x40
   16708:	mov	r2, r6
   1670c:	mov	r1, r5
   16710:	mov	r0, r4
   16714:	bl	142f8 <ftello64@plt+0x2cd0>
   16718:	ldrd	r4, [sp]
   1671c:	ldr	r6, [sp, #8]
   16720:	add	sp, sp, #12
   16724:	pop	{pc}		; (ldr pc, [sp], #4)
   16728:	movw	r1, #1592	; 0x638
   1672c:	movt	r1, #2
   16730:	mov	r0, r4
   16734:	bl	13e08 <ftello64@plt+0x27e0>
   16738:	b	16718 <ftello64@plt+0x50f0>
   1673c:	strd	r4, [sp, #-16]!
   16740:	str	r6, [sp, #8]
   16744:	str	lr, [sp, #12]
   16748:	mov	r4, r0
   1674c:	mov	r5, r1
   16750:	mov	r6, r2
   16754:	ldr	r0, [r0, #4]
   16758:	bl	15fe4 <ftello64@plt+0x49bc>
   1675c:	cmp	r0, #0
   16760:	beq	16788 <ftello64@plt+0x5160>
   16764:	ldr	r3, [r0, #68]	; 0x44
   16768:	mov	r2, r6
   1676c:	mov	r1, r5
   16770:	mov	r0, r4
   16774:	bl	142f8 <ftello64@plt+0x2cd0>
   16778:	ldrd	r4, [sp]
   1677c:	ldr	r6, [sp, #8]
   16780:	add	sp, sp, #12
   16784:	pop	{pc}		; (ldr pc, [sp], #4)
   16788:	movw	r1, #1616	; 0x650
   1678c:	movt	r1, #2
   16790:	mov	r0, r4
   16794:	bl	13e08 <ftello64@plt+0x27e0>
   16798:	b	16778 <ftello64@plt+0x5150>
   1679c:	strd	r4, [sp, #-16]!
   167a0:	str	r6, [sp, #8]
   167a4:	str	lr, [sp, #12]
   167a8:	mov	r4, r0
   167ac:	mov	r5, r1
   167b0:	mov	r6, r2
   167b4:	ldr	r0, [r0, #4]
   167b8:	bl	15fe4 <ftello64@plt+0x49bc>
   167bc:	cmp	r0, #0
   167c0:	beq	167e8 <ftello64@plt+0x51c0>
   167c4:	ldr	r3, [r0, #72]	; 0x48
   167c8:	mov	r2, r6
   167cc:	mov	r1, r5
   167d0:	mov	r0, r4
   167d4:	bl	142f8 <ftello64@plt+0x2cd0>
   167d8:	ldrd	r4, [sp]
   167dc:	ldr	r6, [sp, #8]
   167e0:	add	sp, sp, #12
   167e4:	pop	{pc}		; (ldr pc, [sp], #4)
   167e8:	movw	r1, #1640	; 0x668
   167ec:	movt	r1, #2
   167f0:	mov	r0, r4
   167f4:	bl	13e08 <ftello64@plt+0x27e0>
   167f8:	b	167d8 <ftello64@plt+0x51b0>
   167fc:	strd	r4, [sp, #-16]!
   16800:	str	r6, [sp, #8]
   16804:	str	lr, [sp, #12]
   16808:	mov	r4, r0
   1680c:	mov	r5, r1
   16810:	mov	r6, r2
   16814:	ldr	r0, [r0, #4]
   16818:	bl	15fe4 <ftello64@plt+0x49bc>
   1681c:	cmp	r0, #0
   16820:	beq	16848 <ftello64@plt+0x5220>
   16824:	ldr	r3, [r0, #76]	; 0x4c
   16828:	mov	r2, r6
   1682c:	mov	r1, r5
   16830:	mov	r0, r4
   16834:	bl	142f8 <ftello64@plt+0x2cd0>
   16838:	ldrd	r4, [sp]
   1683c:	ldr	r6, [sp, #8]
   16840:	add	sp, sp, #12
   16844:	pop	{pc}		; (ldr pc, [sp], #4)
   16848:	movw	r1, #1668	; 0x684
   1684c:	movt	r1, #2
   16850:	mov	r0, r4
   16854:	bl	13e08 <ftello64@plt+0x27e0>
   16858:	b	16838 <ftello64@plt+0x5210>
   1685c:	strd	r4, [sp, #-16]!
   16860:	str	r6, [sp, #8]
   16864:	str	lr, [sp, #12]
   16868:	mov	r4, r0
   1686c:	mov	r5, r1
   16870:	mov	r6, r2
   16874:	ldr	r0, [r0, #4]
   16878:	bl	15fe4 <ftello64@plt+0x49bc>
   1687c:	cmp	r0, #0
   16880:	beq	168a8 <ftello64@plt+0x5280>
   16884:	ldr	r3, [r0, #80]	; 0x50
   16888:	mov	r2, r6
   1688c:	mov	r1, r5
   16890:	mov	r0, r4
   16894:	bl	142f8 <ftello64@plt+0x2cd0>
   16898:	ldrd	r4, [sp]
   1689c:	ldr	r6, [sp, #8]
   168a0:	add	sp, sp, #12
   168a4:	pop	{pc}		; (ldr pc, [sp], #4)
   168a8:	movw	r1, #1696	; 0x6a0
   168ac:	movt	r1, #2
   168b0:	mov	r0, r4
   168b4:	bl	13e08 <ftello64@plt+0x27e0>
   168b8:	b	16898 <ftello64@plt+0x5270>
   168bc:	strd	r4, [sp, #-16]!
   168c0:	str	r6, [sp, #8]
   168c4:	str	lr, [sp, #12]
   168c8:	mov	r4, r0
   168cc:	mov	r5, r1
   168d0:	mov	r6, r2
   168d4:	ldr	r0, [r0, #4]
   168d8:	bl	15fe4 <ftello64@plt+0x49bc>
   168dc:	cmp	r0, #0
   168e0:	beq	16908 <ftello64@plt+0x52e0>
   168e4:	ldr	r3, [r0, #84]	; 0x54
   168e8:	mov	r2, r6
   168ec:	mov	r1, r5
   168f0:	mov	r0, r4
   168f4:	bl	142f8 <ftello64@plt+0x2cd0>
   168f8:	ldrd	r4, [sp]
   168fc:	ldr	r6, [sp, #8]
   16900:	add	sp, sp, #12
   16904:	pop	{pc}		; (ldr pc, [sp], #4)
   16908:	movw	r1, #1720	; 0x6b8
   1690c:	movt	r1, #2
   16910:	mov	r0, r4
   16914:	bl	13e08 <ftello64@plt+0x27e0>
   16918:	b	168f8 <ftello64@plt+0x52d0>
   1691c:	strd	r4, [sp, #-16]!
   16920:	str	r6, [sp, #8]
   16924:	str	lr, [sp, #12]
   16928:	mov	r4, r0
   1692c:	mov	r5, r1
   16930:	mov	r6, r2
   16934:	ldr	r0, [r0, #4]
   16938:	bl	15fe4 <ftello64@plt+0x49bc>
   1693c:	cmp	r0, #0
   16940:	beq	16968 <ftello64@plt+0x5340>
   16944:	ldr	r3, [r0, #88]	; 0x58
   16948:	mov	r2, r6
   1694c:	mov	r1, r5
   16950:	mov	r0, r4
   16954:	bl	142f8 <ftello64@plt+0x2cd0>
   16958:	ldrd	r4, [sp]
   1695c:	ldr	r6, [sp, #8]
   16960:	add	sp, sp, #12
   16964:	pop	{pc}		; (ldr pc, [sp], #4)
   16968:	movw	r1, #1748	; 0x6d4
   1696c:	movt	r1, #2
   16970:	mov	r0, r4
   16974:	bl	13e08 <ftello64@plt+0x27e0>
   16978:	b	16958 <ftello64@plt+0x5330>
   1697c:	strd	r4, [sp, #-16]!
   16980:	str	r6, [sp, #8]
   16984:	str	lr, [sp, #12]
   16988:	mov	r4, r0
   1698c:	mov	r5, r1
   16990:	mov	r6, r2
   16994:	ldr	r0, [r0, #4]
   16998:	bl	15fe4 <ftello64@plt+0x49bc>
   1699c:	cmp	r0, #0
   169a0:	beq	169c8 <ftello64@plt+0x53a0>
   169a4:	ldr	r3, [r0, #92]	; 0x5c
   169a8:	mov	r2, r6
   169ac:	mov	r1, r5
   169b0:	mov	r0, r4
   169b4:	bl	142f8 <ftello64@plt+0x2cd0>
   169b8:	ldrd	r4, [sp]
   169bc:	ldr	r6, [sp, #8]
   169c0:	add	sp, sp, #12
   169c4:	pop	{pc}		; (ldr pc, [sp], #4)
   169c8:	movw	r1, #1776	; 0x6f0
   169cc:	movt	r1, #2
   169d0:	mov	r0, r4
   169d4:	bl	13e08 <ftello64@plt+0x27e0>
   169d8:	b	169b8 <ftello64@plt+0x5390>
   169dc:	strd	r4, [sp, #-16]!
   169e0:	str	r6, [sp, #8]
   169e4:	str	lr, [sp, #12]
   169e8:	mov	r4, r0
   169ec:	mov	r5, r1
   169f0:	mov	r6, r2
   169f4:	ldr	r0, [r0, #4]
   169f8:	bl	15fe4 <ftello64@plt+0x49bc>
   169fc:	cmp	r0, #0
   16a00:	beq	16a28 <ftello64@plt+0x5400>
   16a04:	ldr	r3, [r0, #96]	; 0x60
   16a08:	mov	r2, r6
   16a0c:	mov	r1, r5
   16a10:	mov	r0, r4
   16a14:	bl	142f8 <ftello64@plt+0x2cd0>
   16a18:	ldrd	r4, [sp]
   16a1c:	ldr	r6, [sp, #8]
   16a20:	add	sp, sp, #12
   16a24:	pop	{pc}		; (ldr pc, [sp], #4)
   16a28:	movw	r1, #1804	; 0x70c
   16a2c:	movt	r1, #2
   16a30:	mov	r0, r4
   16a34:	bl	13e08 <ftello64@plt+0x27e0>
   16a38:	b	16a18 <ftello64@plt+0x53f0>
   16a3c:	strd	r4, [sp, #-16]!
   16a40:	str	r6, [sp, #8]
   16a44:	str	lr, [sp, #12]
   16a48:	mov	r4, r0
   16a4c:	mov	r5, r1
   16a50:	mov	r6, r2
   16a54:	ldr	r0, [r0, #4]
   16a58:	bl	15fe4 <ftello64@plt+0x49bc>
   16a5c:	cmp	r0, #0
   16a60:	beq	16a88 <ftello64@plt+0x5460>
   16a64:	ldr	r3, [r0, #100]	; 0x64
   16a68:	mov	r2, r6
   16a6c:	mov	r1, r5
   16a70:	mov	r0, r4
   16a74:	bl	142f8 <ftello64@plt+0x2cd0>
   16a78:	ldrd	r4, [sp]
   16a7c:	ldr	r6, [sp, #8]
   16a80:	add	sp, sp, #12
   16a84:	pop	{pc}		; (ldr pc, [sp], #4)
   16a88:	movw	r1, #1832	; 0x728
   16a8c:	movt	r1, #2
   16a90:	mov	r0, r4
   16a94:	bl	13e08 <ftello64@plt+0x27e0>
   16a98:	b	16a78 <ftello64@plt+0x5450>
   16a9c:	strd	r4, [sp, #-16]!
   16aa0:	str	r6, [sp, #8]
   16aa4:	str	lr, [sp, #12]
   16aa8:	mov	r4, r0
   16aac:	mov	r5, r1
   16ab0:	mov	r6, r2
   16ab4:	ldr	r0, [r0, #4]
   16ab8:	bl	15fe4 <ftello64@plt+0x49bc>
   16abc:	cmp	r0, #0
   16ac0:	beq	16ae8 <ftello64@plt+0x54c0>
   16ac4:	ldr	r3, [r0, #104]	; 0x68
   16ac8:	mov	r2, r6
   16acc:	mov	r1, r5
   16ad0:	mov	r0, r4
   16ad4:	bl	142f8 <ftello64@plt+0x2cd0>
   16ad8:	ldrd	r4, [sp]
   16adc:	ldr	r6, [sp, #8]
   16ae0:	add	sp, sp, #12
   16ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ae8:	movw	r1, #1860	; 0x744
   16aec:	movt	r1, #2
   16af0:	mov	r0, r4
   16af4:	bl	13e08 <ftello64@plt+0x27e0>
   16af8:	b	16ad8 <ftello64@plt+0x54b0>
   16afc:	strd	r4, [sp, #-16]!
   16b00:	str	r6, [sp, #8]
   16b04:	str	lr, [sp, #12]
   16b08:	mov	r4, r0
   16b0c:	mov	r5, r1
   16b10:	mov	r6, r2
   16b14:	ldr	r0, [r0, #4]
   16b18:	bl	15fe4 <ftello64@plt+0x49bc>
   16b1c:	cmp	r0, #0
   16b20:	beq	16b48 <ftello64@plt+0x5520>
   16b24:	ldr	r3, [r0, #108]	; 0x6c
   16b28:	mov	r2, r6
   16b2c:	mov	r1, r5
   16b30:	mov	r0, r4
   16b34:	bl	142f8 <ftello64@plt+0x2cd0>
   16b38:	ldrd	r4, [sp]
   16b3c:	ldr	r6, [sp, #8]
   16b40:	add	sp, sp, #12
   16b44:	pop	{pc}		; (ldr pc, [sp], #4)
   16b48:	movw	r1, #1888	; 0x760
   16b4c:	movt	r1, #2
   16b50:	mov	r0, r4
   16b54:	bl	13e08 <ftello64@plt+0x27e0>
   16b58:	b	16b38 <ftello64@plt+0x5510>
   16b5c:	strd	r4, [sp, #-16]!
   16b60:	str	r6, [sp, #8]
   16b64:	str	lr, [sp, #12]
   16b68:	mov	r4, r0
   16b6c:	mov	r5, r1
   16b70:	mov	r6, r2
   16b74:	ldr	r0, [r0, #4]
   16b78:	bl	15fe4 <ftello64@plt+0x49bc>
   16b7c:	cmp	r0, #0
   16b80:	beq	16ba8 <ftello64@plt+0x5580>
   16b84:	ldr	r3, [r0, #112]	; 0x70
   16b88:	mov	r2, r6
   16b8c:	mov	r1, r5
   16b90:	mov	r0, r4
   16b94:	bl	142f8 <ftello64@plt+0x2cd0>
   16b98:	ldrd	r4, [sp]
   16b9c:	ldr	r6, [sp, #8]
   16ba0:	add	sp, sp, #12
   16ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ba8:	movw	r1, #1920	; 0x780
   16bac:	movt	r1, #2
   16bb0:	mov	r0, r4
   16bb4:	bl	13e08 <ftello64@plt+0x27e0>
   16bb8:	b	16b98 <ftello64@plt+0x5570>
   16bbc:	strd	r4, [sp, #-16]!
   16bc0:	str	r6, [sp, #8]
   16bc4:	str	lr, [sp, #12]
   16bc8:	mov	r4, r0
   16bcc:	mov	r5, r1
   16bd0:	mov	r6, r2
   16bd4:	ldr	r2, [r0, #4]
   16bd8:	movw	r1, #35111	; 0x8927
   16bdc:	ldr	r0, [r0, #8]
   16be0:	bl	18a18 <argp_parse@@Base+0xdf0>
   16be4:	cmp	r0, #0
   16be8:	blt	16c2c <ftello64@plt+0x5604>
   16bec:	ldr	r3, [r4, #4]
   16bf0:	ldrh	r0, [r3, #16]
   16bf4:	bl	15f84 <ftello64@plt+0x495c>
   16bf8:	cmp	r0, #0
   16bfc:	ldrne	r3, [r0, #12]
   16c00:	clzne	r3, r3
   16c04:	lsrne	r3, r3, #5
   16c08:	moveq	r3, #1
   16c0c:	mov	r2, r6
   16c10:	mov	r1, r5
   16c14:	mov	r0, r4
   16c18:	bl	14ea0 <ftello64@plt+0x3878>
   16c1c:	ldrd	r4, [sp]
   16c20:	ldr	r6, [sp, #8]
   16c24:	add	sp, sp, #12
   16c28:	pop	{pc}		; (ldr pc, [sp], #4)
   16c2c:	mov	r3, #1
   16c30:	mov	r2, r6
   16c34:	mov	r1, r5
   16c38:	mov	r0, r4
   16c3c:	bl	14ea0 <ftello64@plt+0x3878>
   16c40:	b	16bec <ftello64@plt+0x55c4>
   16c44:	strd	r4, [sp, #-16]!
   16c48:	str	r6, [sp, #8]
   16c4c:	str	lr, [sp, #12]
   16c50:	mov	r4, r0
   16c54:	ldr	r2, [r0, #4]
   16c58:	movw	r1, #35111	; 0x8927
   16c5c:	ldr	r0, [r0, #8]
   16c60:	bl	18a18 <argp_parse@@Base+0xdf0>
   16c64:	cmp	r0, #0
   16c68:	blt	16c9c <ftello64@plt+0x5674>
   16c6c:	ldr	r5, [r4, #4]
   16c70:	ldrh	r0, [r5, #16]
   16c74:	bl	15f84 <ftello64@plt+0x495c>
   16c78:	cmp	r0, #0
   16c7c:	beq	16cc8 <ftello64@plt+0x56a0>
   16c80:	ldr	r3, [r0, #12]
   16c84:	cmp	r3, #0
   16c88:	beq	16cc8 <ftello64@plt+0x56a0>
   16c8c:	add	r1, r5, #18
   16c90:	mov	r0, r4
   16c94:	blx	r3
   16c98:	b	16cb8 <ftello64@plt+0x5690>
   16c9c:	bl	114c0 <__errno_location@plt>
   16ca0:	ldr	r3, [r4, #4]
   16ca4:	movw	r2, #1948	; 0x79c
   16ca8:	movt	r2, #2
   16cac:	ldr	r1, [r0]
   16cb0:	mov	r0, #1
   16cb4:	bl	11400 <error@plt>
   16cb8:	ldrd	r4, [sp]
   16cbc:	ldr	r6, [sp, #8]
   16cc0:	add	sp, sp, #12
   16cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   16cc8:	movw	r1, #1988	; 0x7c4
   16ccc:	movt	r1, #2
   16cd0:	mov	r0, r4
   16cd4:	bl	13e08 <ftello64@plt+0x27e0>
   16cd8:	b	16cb8 <ftello64@plt+0x5690>
   16cdc:	strd	r4, [sp, #-16]!
   16ce0:	str	r6, [sp, #8]
   16ce4:	str	lr, [sp, #12]
   16ce8:	mov	r4, r0
   16cec:	mov	r5, r1
   16cf0:	mov	r6, r2
   16cf4:	ldr	r2, [r0, #4]
   16cf8:	movw	r1, #35111	; 0x8927
   16cfc:	ldr	r0, [r0, #8]
   16d00:	bl	18a18 <argp_parse@@Base+0xdf0>
   16d04:	cmp	r0, #0
   16d08:	movge	r3, #0
   16d0c:	movlt	r3, #1
   16d10:	mov	r2, r6
   16d14:	mov	r1, r5
   16d18:	mov	r0, r4
   16d1c:	bl	14ea0 <ftello64@plt+0x3878>
   16d20:	ldrd	r4, [sp]
   16d24:	ldr	r6, [sp, #8]
   16d28:	add	sp, sp, #12
   16d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d30:	str	r4, [sp, #-8]!
   16d34:	str	lr, [sp, #4]
   16d38:	mov	r4, r0
   16d3c:	ldr	r2, [r0, #4]
   16d40:	movw	r1, #35111	; 0x8927
   16d44:	ldr	r0, [r0, #8]
   16d48:	bl	18a18 <argp_parse@@Base+0xdf0>
   16d4c:	cmp	r0, #0
   16d50:	blt	16d84 <ftello64@plt+0x575c>
   16d54:	ldr	r3, [r4, #4]
   16d58:	ldrh	r0, [r3, #16]
   16d5c:	bl	15f84 <ftello64@plt+0x495c>
   16d60:	cmp	r0, #0
   16d64:	ldrne	r1, [r0, #4]
   16d68:	movweq	r1, #2008	; 0x7d8
   16d6c:	movteq	r1, #2
   16d70:	mov	r0, r4
   16d74:	bl	13e08 <ftello64@plt+0x27e0>
   16d78:	ldr	r4, [sp]
   16d7c:	add	sp, sp, #4
   16d80:	pop	{pc}		; (ldr pc, [sp], #4)
   16d84:	bl	114c0 <__errno_location@plt>
   16d88:	ldr	r3, [r4, #4]
   16d8c:	movw	r2, #1948	; 0x79c
   16d90:	movt	r2, #2
   16d94:	ldr	r1, [r0]
   16d98:	mov	r0, #1
   16d9c:	bl	11400 <error@plt>
   16da0:	b	16d78 <ftello64@plt+0x5750>
   16da4:	strd	r4, [sp, #-16]!
   16da8:	str	r6, [sp, #8]
   16dac:	str	lr, [sp, #12]
   16db0:	mov	r4, r0
   16db4:	mov	r5, r1
   16db8:	mov	r6, r2
   16dbc:	ldr	r2, [r0, #4]
   16dc0:	movw	r1, #35101	; 0x891d
   16dc4:	ldr	r0, [r0, #8]
   16dc8:	bl	18a18 <argp_parse@@Base+0xdf0>
   16dcc:	cmp	r0, #0
   16dd0:	movge	r3, #0
   16dd4:	movlt	r3, #1
   16dd8:	mov	r2, r6
   16ddc:	mov	r1, r5
   16de0:	mov	r0, r4
   16de4:	bl	14ea0 <ftello64@plt+0x3878>
   16de8:	ldrd	r4, [sp]
   16dec:	ldr	r6, [sp, #8]
   16df0:	add	sp, sp, #12
   16df4:	pop	{pc}		; (ldr pc, [sp], #4)
   16df8:	strd	r4, [sp, #-16]!
   16dfc:	str	r6, [sp, #8]
   16e00:	str	lr, [sp, #12]
   16e04:	mov	r4, r0
   16e08:	mov	r5, r1
   16e0c:	mov	r6, r2
   16e10:	ldr	r2, [r0, #4]
   16e14:	movw	r1, #35101	; 0x891d
   16e18:	ldr	r0, [r0, #8]
   16e1c:	bl	18a18 <argp_parse@@Base+0xdf0>
   16e20:	cmp	r0, #0
   16e24:	blt	16e58 <ftello64@plt+0x5830>
   16e28:	ldr	r3, [r4, #4]
   16e2c:	ldr	r3, [r3, #16]
   16e30:	cmp	r3, #0
   16e34:	moveq	r3, #1
   16e38:	mov	r2, r6
   16e3c:	mov	r1, r5
   16e40:	mov	r0, r4
   16e44:	bl	13f9c <ftello64@plt+0x2974>
   16e48:	ldrd	r4, [sp]
   16e4c:	ldr	r6, [sp, #8]
   16e50:	add	sp, sp, #12
   16e54:	pop	{pc}		; (ldr pc, [sp], #4)
   16e58:	bl	114c0 <__errno_location@plt>
   16e5c:	ldr	r3, [r4, #4]
   16e60:	movw	r2, #44	; 0x2c
   16e64:	movt	r2, #2
   16e68:	ldr	r1, [r0]
   16e6c:	mov	r0, #1
   16e70:	bl	11400 <error@plt>
   16e74:	b	16e48 <ftello64@plt+0x5820>
   16e78:	strd	r4, [sp, #-16]!
   16e7c:	str	r6, [sp, #8]
   16e80:	str	lr, [sp, #12]
   16e84:	mov	r4, r0
   16e88:	mov	r5, r1
   16e8c:	mov	r6, r2
   16e90:	ldr	r2, [r0, #4]
   16e94:	movw	r1, #35138	; 0x8942
   16e98:	ldr	r0, [r0, #8]
   16e9c:	bl	18a18 <argp_parse@@Base+0xdf0>
   16ea0:	cmp	r0, #0
   16ea4:	ldrge	r3, [r4, #4]
   16ea8:	ldrge	r3, [r3, #16]
   16eac:	lsrge	r3, r3, #31
   16eb0:	movlt	r3, #1
   16eb4:	mov	r2, r6
   16eb8:	mov	r1, r5
   16ebc:	mov	r0, r4
   16ec0:	bl	14ea0 <ftello64@plt+0x3878>
   16ec4:	ldrd	r4, [sp]
   16ec8:	ldr	r6, [sp, #8]
   16ecc:	add	sp, sp, #12
   16ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ed4:	strd	r4, [sp, #-16]!
   16ed8:	str	r6, [sp, #8]
   16edc:	str	lr, [sp, #12]
   16ee0:	mov	r4, r0
   16ee4:	mov	r5, r1
   16ee8:	mov	r6, r2
   16eec:	ldr	r2, [r0, #4]
   16ef0:	movw	r1, #35138	; 0x8942
   16ef4:	ldr	r0, [r0, #8]
   16ef8:	bl	18a18 <argp_parse@@Base+0xdf0>
   16efc:	cmp	r0, #0
   16f00:	blt	16f2c <ftello64@plt+0x5904>
   16f04:	ldr	r3, [r4, #4]
   16f08:	ldr	r3, [r3, #16]
   16f0c:	mov	r2, r6
   16f10:	mov	r1, r5
   16f14:	mov	r0, r4
   16f18:	bl	13f9c <ftello64@plt+0x2974>
   16f1c:	ldrd	r4, [sp]
   16f20:	ldr	r6, [sp, #8]
   16f24:	add	sp, sp, #12
   16f28:	pop	{pc}		; (ldr pc, [sp], #4)
   16f2c:	bl	114c0 <__errno_location@plt>
   16f30:	ldr	r3, [r4, #4]
   16f34:	movw	r2, #2028	; 0x7ec
   16f38:	movt	r2, #2
   16f3c:	ldr	r1, [r0]
   16f40:	mov	r0, #1
   16f44:	bl	11400 <error@plt>
   16f48:	b	16f1c <ftello64@plt+0x58f4>
   16f4c:	strd	r4, [sp, #-16]!
   16f50:	str	r6, [sp, #8]
   16f54:	str	lr, [sp, #12]
   16f58:	sub	sp, sp, #16
   16f5c:	mov	r5, r1
   16f60:	subs	r4, r0, #0
   16f64:	beq	16ffc <ftello64@plt+0x59d4>
   16f68:	ldr	r3, [r4, #4]
   16f6c:	tst	r3, #1
   16f70:	beq	17018 <ftello64@plt+0x59f0>
   16f74:	ldr	r3, [r4, #8]
   16f78:	ldr	r3, [r3]
   16f7c:	tst	r3, #1
   16f80:	bne	17064 <ftello64@plt+0x5a3c>
   16f84:	ldr	r6, [r4, #8]
   16f88:	mov	r2, #0
   16f8c:	add	r1, sp, #12
   16f90:	mov	r0, r5
   16f94:	bl	11304 <strtol@plt>
   16f98:	str	r0, [r6, #4]
   16f9c:	ldrb	r3, [r5]
   16fa0:	cmp	r3, #0
   16fa4:	beq	16fb8 <ftello64@plt+0x5990>
   16fa8:	ldr	r3, [sp, #12]
   16fac:	ldrb	r3, [r3]
   16fb0:	cmp	r3, #0
   16fb4:	beq	16fd8 <ftello64@plt+0x59b0>
   16fb8:	ldr	r3, [r4]
   16fbc:	str	r3, [sp]
   16fc0:	mov	r3, r5
   16fc4:	movw	r2, #2204	; 0x89c
   16fc8:	movt	r2, #2
   16fcc:	mov	r1, #0
   16fd0:	mov	r0, #1
   16fd4:	bl	11400 <error@plt>
   16fd8:	ldr	r2, [r4, #8]
   16fdc:	ldr	r3, [r2]
   16fe0:	orr	r3, r3, #1
   16fe4:	str	r3, [r2]
   16fe8:	add	sp, sp, #16
   16fec:	ldrd	r4, [sp]
   16ff0:	ldr	r6, [sp, #8]
   16ff4:	add	sp, sp, #12
   16ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   16ffc:	mov	r3, r1
   17000:	movw	r2, #2068	; 0x814
   17004:	movt	r2, #2
   17008:	mov	r1, #0
   1700c:	mov	r0, #1
   17010:	bl	11400 <error@plt>
   17014:	b	16f68 <ftello64@plt+0x5940>
   17018:	mov	r0, #8
   1701c:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   17020:	str	r0, [r4, #8]
   17024:	cmp	r0, #0
   17028:	beq	17048 <ftello64@plt+0x5a20>
   1702c:	ldr	r3, [r4, #8]
   17030:	mov	r2, #0
   17034:	str	r2, [r3]
   17038:	ldr	r3, [r4, #4]
   1703c:	orr	r3, r3, #1
   17040:	str	r3, [r4, #4]
   17044:	b	16f74 <ftello64@plt+0x594c>
   17048:	bl	114c0 <__errno_location@plt>
   1704c:	movw	r2, #2108	; 0x83c
   17050:	movt	r2, #2
   17054:	ldr	r1, [r0]
   17058:	mov	r0, #1
   1705c:	bl	11400 <error@plt>
   17060:	b	1702c <ftello64@plt+0x5a04>
   17064:	ldr	r3, [r4]
   17068:	movw	r2, #2160	; 0x870
   1706c:	movt	r2, #2
   17070:	mov	r1, #0
   17074:	mov	r0, #1
   17078:	bl	11400 <error@plt>
   1707c:	b	16f84 <ftello64@plt+0x595c>
   17080:	cmp	r0, #84	; 0x54
   17084:	beq	17090 <ftello64@plt+0x5a68>
   17088:	mov	r0, #7
   1708c:	bx	lr
   17090:	str	r4, [sp, #-8]!
   17094:	str	lr, [sp, #4]
   17098:	ldr	r3, [r2, #28]
   1709c:	ldr	r0, [r3]
   170a0:	bl	16f4c <ftello64@plt+0x5924>
   170a4:	mov	r0, #0
   170a8:	ldr	r4, [sp]
   170ac:	add	sp, sp, #4
   170b0:	pop	{pc}		; (ldr pc, [sp], #4)
   170b4:	cmp	r1, #84	; 0x54
   170b8:	beq	170c4 <ftello64@plt+0x5a9c>
   170bc:	mov	r0, #0
   170c0:	bx	lr
   170c4:	str	r4, [sp, #-8]!
   170c8:	str	lr, [sp, #4]
   170cc:	mov	r1, r2
   170d0:	ldr	r0, [r0]
   170d4:	bl	16f4c <ftello64@plt+0x5924>
   170d8:	mov	r0, #1
   170dc:	ldr	r4, [sp]
   170e0:	add	sp, sp, #4
   170e4:	pop	{pc}		; (ldr pc, [sp], #4)
   170e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   170ec:	strd	r6, [sp, #8]
   170f0:	strd	r8, [sp, #16]
   170f4:	strd	sl, [sp, #24]
   170f8:	str	lr, [sp, #32]
   170fc:	sub	sp, sp, #20
   17100:	mov	r7, r0
   17104:	mov	r6, r1
   17108:	mov	r5, r2
   1710c:	ldr	r0, [r2]
   17110:	bl	12b20 <ftello64@plt+0x14f8>
   17114:	str	r0, [r7]
   17118:	mov	r3, #0
   1711c:	mov	r4, r3
   17120:	movw	r8, #60716	; 0xed2c
   17124:	movt	r8, #1
   17128:	movw	r9, #60656	; 0xecf0
   1712c:	movt	r9, #1
   17130:	movw	sl, #2308	; 0x904
   17134:	movt	sl, #2
   17138:	b	1714c <ftello64@plt+0x5b24>
   1713c:	ldr	r1, [r5, r4, lsl #2]
   17140:	ldr	r0, [r7]
   17144:	bl	12dc8 <ftello64@plt+0x17a0>
   17148:	mov	r3, #1
   1714c:	add	r4, r4, #1
   17150:	cmp	r4, r6
   17154:	bge	1740c <ftello64@plt+0x5de4>
   17158:	cmp	r3, #8
   1715c:	ldrls	pc, [pc, r3, lsl #2]
   17160:	b	1723c <ftello64@plt+0x5c14>
   17164:	andeq	r7, r1, r8, ror #3
   17168:	andeq	r7, r1, ip, lsr r2
   1716c:	andeq	r7, r1, ip, lsr r1
   17170:	andeq	r7, r1, r8, lsl #3
   17174:	muleq	r1, r8, r1
   17178:	andeq	r7, r1, r8, lsr #3
   1717c:			; <UNDEFINED> instruction: 0x000171b8
   17180:	andeq	r7, r1, r8, asr #3
   17184:	ldrdeq	r7, [r1], -r8
   17188:	ldr	r1, [r5, r4, lsl #2]
   1718c:	ldr	r0, [r7]
   17190:	bl	132e8 <ftello64@plt+0x1cc0>
   17194:	b	17148 <ftello64@plt+0x5b20>
   17198:	ldr	r1, [r5, r4, lsl #2]
   1719c:	ldr	r0, [r7]
   171a0:	bl	12ca8 <ftello64@plt+0x1680>
   171a4:	b	17148 <ftello64@plt+0x5b20>
   171a8:	ldr	r1, [r5, r4, lsl #2]
   171ac:	ldr	r0, [r7]
   171b0:	bl	12e58 <ftello64@plt+0x1830>
   171b4:	b	17148 <ftello64@plt+0x5b20>
   171b8:	ldr	r1, [r5, r4, lsl #2]
   171bc:	ldr	r0, [r7]
   171c0:	bl	12ee8 <ftello64@plt+0x18c0>
   171c4:	b	17148 <ftello64@plt+0x5b20>
   171c8:	ldr	r1, [r5, r4, lsl #2]
   171cc:	ldr	r0, [r7]
   171d0:	bl	12fc4 <ftello64@plt+0x199c>
   171d4:	b	17148 <ftello64@plt+0x5b20>
   171d8:	ldr	r1, [r5, r4, lsl #2]
   171dc:	ldr	r0, [r7]
   171e0:	bl	16f4c <ftello64@plt+0x5924>
   171e4:	b	17148 <ftello64@plt+0x5b20>
   171e8:	ldr	fp, [r5, r4, lsl #2]
   171ec:	movw	r1, #60120	; 0xead8
   171f0:	movt	r1, #1
   171f4:	mov	r0, fp
   171f8:	bl	112f8 <strcmp@plt>
   171fc:	cmp	r0, #0
   17200:	beq	173fc <ftello64@plt+0x5dd4>
   17204:	movw	r1, #2260	; 0x8d4
   17208:	movt	r1, #2
   1720c:	mov	r0, fp
   17210:	bl	112f8 <strcmp@plt>
   17214:	subs	r3, r0, #0
   17218:	str	r3, [sp, #4]
   1721c:	bne	17244 <ftello64@plt+0x5c1c>
   17220:	mov	r3, fp
   17224:	movw	r2, #2268	; 0x8dc
   17228:	movt	r2, #2
   1722c:	mov	r1, #0
   17230:	mov	r0, r1
   17234:	bl	11400 <error@plt>
   17238:	b	17530 <ftello64@plt+0x5f08>
   1723c:	cmp	r3, #1
   17240:	bne	17404 <ftello64@plt+0x5ddc>
   17244:	str	r4, [sp, #4]
   17248:	ldr	fp, [r5, r4, lsl #2]
   1724c:	mov	r1, r8
   17250:	mov	r0, fp
   17254:	bl	112f8 <strcmp@plt>
   17258:	cmp	r0, #0
   1725c:	moveq	r3, #2
   17260:	beq	1714c <ftello64@plt+0x5b24>
   17264:	mov	r1, r9
   17268:	mov	r0, fp
   1726c:	bl	112f8 <strcmp@plt>
   17270:	cmp	r0, #0
   17274:	moveq	r3, #3
   17278:	beq	1714c <ftello64@plt+0x5b24>
   1727c:	mov	r1, sl
   17280:	mov	r0, fp
   17284:	bl	112f8 <strcmp@plt>
   17288:	cmp	r0, #0
   1728c:	moveq	r3, #3
   17290:	beq	1714c <ftello64@plt+0x5b24>
   17294:	movw	r1, #59900	; 0xe9fc
   17298:	movt	r1, #1
   1729c:	mov	r0, fp
   172a0:	bl	112f8 <strcmp@plt>
   172a4:	cmp	r0, #0
   172a8:	moveq	r3, #4
   172ac:	beq	1714c <ftello64@plt+0x5b24>
   172b0:	movw	r1, #2320	; 0x910
   172b4:	movt	r1, #2
   172b8:	mov	r0, fp
   172bc:	bl	112f8 <strcmp@plt>
   172c0:	cmp	r0, #0
   172c4:	moveq	r3, #5
   172c8:	beq	1714c <ftello64@plt+0x5b24>
   172cc:	movw	r1, #372	; 0x174
   172d0:	movt	r1, #2
   172d4:	mov	r0, fp
   172d8:	bl	112f8 <strcmp@plt>
   172dc:	cmp	r0, #0
   172e0:	moveq	r3, #5
   172e4:	beq	1714c <ftello64@plt+0x5b24>
   172e8:	movw	r1, #2328	; 0x918
   172ec:	movt	r1, #2
   172f0:	mov	r0, fp
   172f4:	bl	112f8 <strcmp@plt>
   172f8:	cmp	r0, #0
   172fc:	moveq	r3, #5
   17300:	beq	1714c <ftello64@plt+0x5b24>
   17304:	movw	r1, #60760	; 0xed58
   17308:	movt	r1, #1
   1730c:	mov	r0, fp
   17310:	bl	112f8 <strcmp@plt>
   17314:	cmp	r0, #0
   17318:	moveq	r3, #7
   1731c:	beq	1714c <ftello64@plt+0x5b24>
   17320:	movw	r1, #60728	; 0xed38
   17324:	movt	r1, #1
   17328:	mov	r0, fp
   1732c:	bl	112f8 <strcmp@plt>
   17330:	cmp	r0, #0
   17334:	moveq	r3, #6
   17338:	beq	1714c <ftello64@plt+0x5b24>
   1733c:	movw	r1, #2336	; 0x920
   17340:	movt	r1, #2
   17344:	mov	r0, fp
   17348:	bl	112f8 <strcmp@plt>
   1734c:	cmp	r0, #0
   17350:	moveq	r3, #8
   17354:	beq	1714c <ftello64@plt+0x5b24>
   17358:	movw	r1, #60864	; 0xedc0
   1735c:	movt	r1, #1
   17360:	mov	r0, fp
   17364:	bl	112f8 <strcmp@plt>
   17368:	cmp	r0, #0
   1736c:	beq	173a0 <ftello64@plt+0x5d78>
   17370:	movw	r1, #60892	; 0xeddc
   17374:	movt	r1, #1
   17378:	mov	r0, fp
   1737c:	bl	112f8 <strcmp@plt>
   17380:	cmp	r0, #0
   17384:	bne	173b8 <ftello64@plt+0x5d90>
   17388:	mov	r2, #1
   1738c:	mov	r1, r2
   17390:	ldr	r0, [r7]
   17394:	bl	13134 <ftello64@plt+0x1b0c>
   17398:	mov	r3, #1
   1739c:	b	1714c <ftello64@plt+0x5b24>
   173a0:	mov	r2, #0
   173a4:	mov	r1, #65	; 0x41
   173a8:	ldr	r0, [r7]
   173ac:	bl	13134 <ftello64@plt+0x1b0c>
   173b0:	mov	r3, #1
   173b4:	b	1714c <ftello64@plt+0x5b24>
   173b8:	add	r1, sp, #12
   173bc:	mov	r0, fp
   173c0:	bl	11d40 <ftello64@plt+0x718>
   173c4:	mov	r1, r0
   173c8:	bics	r3, r0, #72	; 0x48
   173cc:	beq	173e4 <ftello64@plt+0x5dbc>
   173d0:	ldr	r2, [sp, #12]
   173d4:	ldr	r0, [r7]
   173d8:	bl	13134 <ftello64@plt+0x1b0c>
   173dc:	mov	r3, #1
   173e0:	b	1714c <ftello64@plt+0x5b24>
   173e4:	ldr	r3, [sp, #4]
   173e8:	ldr	r1, [r5, r3, lsl #2]
   173ec:	ldr	r0, [r7]
   173f0:	bl	12c18 <ftello64@plt+0x15f0>
   173f4:	mov	r3, #1
   173f8:	b	1714c <ftello64@plt+0x5b24>
   173fc:	mov	r3, #1
   17400:	b	1714c <ftello64@plt+0x5b24>
   17404:	mov	r3, #1
   17408:	b	1714c <ftello64@plt+0x5b24>
   1740c:	cmp	r3, #8
   17410:	ldrls	pc, [pc, r3, lsl #2]
   17414:	b	1743c <ftello64@plt+0x5e14>
   17418:	andeq	r7, r1, r8, lsr #10
   1741c:	andeq	r7, r1, r8, lsr #10
   17420:	andeq	r7, r1, r8, asr #8
   17424:	andeq	r7, r1, r8, ror #8
   17428:	andeq	r7, r1, r8, lsl #9
   1742c:	andeq	r7, r1, r8, lsr #9
   17430:	andeq	r7, r1, r8, ror #9
   17434:	andeq	r7, r1, r8, asr #9
   17438:	andeq	r7, r1, r8, lsl #10
   1743c:	mov	r3, #0
   17440:	str	r3, [sp, #4]
   17444:	b	17530 <ftello64@plt+0x5f08>
   17448:	movw	r2, #2348	; 0x92c
   1744c:	movt	r2, #2
   17450:	mov	r1, #0
   17454:	mov	r0, r1
   17458:	bl	11400 <error@plt>
   1745c:	mov	r3, #0
   17460:	str	r3, [sp, #4]
   17464:	b	17530 <ftello64@plt+0x5f08>
   17468:	movw	r2, #2388	; 0x954
   1746c:	movt	r2, #2
   17470:	mov	r1, #0
   17474:	mov	r0, r1
   17478:	bl	11400 <error@plt>
   1747c:	mov	r3, #0
   17480:	str	r3, [sp, #4]
   17484:	b	17530 <ftello64@plt+0x5f08>
   17488:	movw	r2, #2444	; 0x98c
   1748c:	movt	r2, #2
   17490:	mov	r1, #0
   17494:	mov	r0, r1
   17498:	bl	11400 <error@plt>
   1749c:	mov	r3, #0
   174a0:	str	r3, [sp, #4]
   174a4:	b	17530 <ftello64@plt+0x5f08>
   174a8:	movw	r2, #2484	; 0x9b4
   174ac:	movt	r2, #2
   174b0:	mov	r1, #0
   174b4:	mov	r0, r1
   174b8:	bl	11400 <error@plt>
   174bc:	mov	r3, #0
   174c0:	str	r3, [sp, #4]
   174c4:	b	17530 <ftello64@plt+0x5f08>
   174c8:	movw	r2, #2524	; 0x9dc
   174cc:	movt	r2, #2
   174d0:	mov	r1, #0
   174d4:	mov	r0, r1
   174d8:	bl	11400 <error@plt>
   174dc:	mov	r3, #0
   174e0:	str	r3, [sp, #4]
   174e4:	b	17530 <ftello64@plt+0x5f08>
   174e8:	movw	r2, #2564	; 0xa04
   174ec:	movt	r2, #2
   174f0:	mov	r1, #0
   174f4:	mov	r0, r1
   174f8:	bl	11400 <error@plt>
   174fc:	mov	r3, #0
   17500:	str	r3, [sp, #4]
   17504:	b	17530 <ftello64@plt+0x5f08>
   17508:	movw	r2, #2600	; 0xa28
   1750c:	movt	r2, #2
   17510:	mov	r1, #0
   17514:	mov	r0, r1
   17518:	bl	11400 <error@plt>
   1751c:	mov	r3, #0
   17520:	str	r3, [sp, #4]
   17524:	b	17530 <ftello64@plt+0x5f08>
   17528:	mov	r3, #1
   1752c:	str	r3, [sp, #4]
   17530:	ldr	r0, [sp, #4]
   17534:	add	sp, sp, #20
   17538:	ldrd	r4, [sp]
   1753c:	ldrd	r6, [sp, #8]
   17540:	ldrd	r8, [sp, #16]
   17544:	ldrd	sl, [sp, #24]
   17548:	add	sp, sp, #32
   1754c:	pop	{pc}		; (ldr pc, [sp], #4)
   17550:	ldr	r3, [r2]
   17554:	tst	r3, #1
   17558:	bne	17564 <ftello64@plt+0x5f3c>
   1755c:	mov	r0, #0
   17560:	bx	lr
   17564:	str	r4, [sp, #-8]!
   17568:	str	lr, [sp, #4]
   1756c:	mov	r4, r1
   17570:	ldr	r3, [r2, #4]
   17574:	str	r3, [r1, #16]
   17578:	mov	r2, r1
   1757c:	movw	r1, #35139	; 0x8943
   17580:	bl	18a18 <argp_parse@@Base+0xdf0>
   17584:	cmp	r0, #0
   17588:	blt	175b0 <ftello64@plt+0x5f88>
   1758c:	movw	r3, #11256	; 0x2bf8
   17590:	movt	r3, #3
   17594:	ldr	r3, [r3]
   17598:	cmp	r3, #0
   1759c:	bne	175cc <ftello64@plt+0x5fa4>
   175a0:	mov	r0, #0
   175a4:	ldr	r4, [sp]
   175a8:	add	sp, sp, #4
   175ac:	pop	{pc}		; (ldr pc, [sp], #4)
   175b0:	bl	114c0 <__errno_location@plt>
   175b4:	movw	r2, #2644	; 0xa54
   175b8:	movt	r2, #2
   175bc:	ldr	r1, [r0]
   175c0:	mov	r0, #0
   175c4:	bl	11400 <error@plt>
   175c8:	b	1758c <ftello64@plt+0x5f64>
   175cc:	ldr	r2, [r4, #16]
   175d0:	mov	r1, r4
   175d4:	movw	r0, #2668	; 0xa6c
   175d8:	movt	r0, #2
   175dc:	bl	11310 <printf@plt>
   175e0:	b	175a0 <ftello64@plt+0x5f78>
   175e4:	ldr	ip, [r0]
   175e8:	cmp	ip, #0
   175ec:	beq	17654 <ftello64@plt+0x602c>
   175f0:	strd	r4, [sp, #-16]!
   175f4:	str	r6, [sp, #8]
   175f8:	str	lr, [sp, #12]
   175fc:	mov	ip, r2
   17600:	mov	r5, r1
   17604:	mov	r4, r0
   17608:	ldr	r2, [r0, #32]
   1760c:	str	r2, [r1, #36]	; 0x24
   17610:	ldr	r2, [r0, #24]
   17614:	str	r2, [r1, #28]
   17618:	ldr	r2, [r0, #28]
   1761c:	str	r2, [r1, #32]
   17620:	ldr	r2, [r0, #12]
   17624:	str	r2, [r1, #20]
   17628:	ldr	r6, [r0]
   1762c:	mov	r2, r1
   17630:	mov	r1, r3
   17634:	mov	r0, ip
   17638:	blx	r6
   1763c:	ldr	r3, [r5, #36]	; 0x24
   17640:	str	r3, [r4, #32]
   17644:	ldrd	r4, [sp]
   17648:	ldr	r6, [sp, #8]
   1764c:	add	sp, sp, #12
   17650:	pop	{pc}		; (ldr pc, [sp], #4)
   17654:	mov	r0, #7
   17658:	bx	lr
   1765c:	strd	r4, [sp, #-16]!
   17660:	str	r6, [sp, #8]
   17664:	str	lr, [sp, #12]
   17668:	ldr	r5, [r0, #16]
   1766c:	ldr	r3, [r0]
   17670:	cmp	r3, #0
   17674:	beq	1768c <ftello64@plt+0x6064>
   17678:	ldr	r2, [r1, #8]
   1767c:	add	r2, r2, #1
   17680:	str	r2, [r1, #8]
   17684:	mov	r2, #0
   17688:	b	176ac <ftello64@plt+0x6084>
   1768c:	ldr	r3, [r0, #4]
   17690:	cmp	r3, #0
   17694:	beq	176fc <ftello64@plt+0x60d4>
   17698:	ldr	r3, [r1, #8]
   1769c:	add	r3, r3, #1
   176a0:	str	r3, [r1, #8]
   176a4:	b	176fc <ftello64@plt+0x60d4>
   176a8:	add	r2, r2, #1
   176ac:	add	r3, r3, #24
   176b0:	ldr	r0, [r3, #-20]	; 0xffffffec
   176b4:	cmp	r0, #0
   176b8:	bne	176a8 <ftello64@plt+0x6080>
   176bc:	ldr	r0, [r3, #-24]	; 0xffffffe8
   176c0:	cmp	r0, #0
   176c4:	bne	176a8 <ftello64@plt+0x6080>
   176c8:	ldr	r0, [r3, #-8]
   176cc:	cmp	r0, #0
   176d0:	bne	176a8 <ftello64@plt+0x6080>
   176d4:	ldr	r0, [r3, #-4]
   176d8:	cmp	r0, #0
   176dc:	bne	176a8 <ftello64@plt+0x6080>
   176e0:	add	r0, r2, r2, lsl #1
   176e4:	ldr	r3, [r1]
   176e8:	add	r3, r3, r0
   176ec:	str	r3, [r1]
   176f0:	ldr	r3, [r1, #4]
   176f4:	add	r2, r3, r2
   176f8:	str	r2, [r1, #4]
   176fc:	cmp	r5, #0
   17700:	beq	17734 <ftello64@plt+0x610c>
   17704:	ldr	r0, [r5]
   17708:	cmp	r0, #0
   1770c:	beq	17734 <ftello64@plt+0x610c>
   17710:	mov	r4, r1
   17714:	mov	r1, r4
   17718:	bl	1765c <ftello64@plt+0x6034>
   1771c:	ldr	r3, [r4, #12]
   17720:	add	r3, r3, #1
   17724:	str	r3, [r4, #12]
   17728:	ldr	r0, [r5, #16]!
   1772c:	cmp	r0, #0
   17730:	bne	17714 <ftello64@plt+0x60ec>
   17734:	ldrd	r4, [sp]
   17738:	ldr	r6, [sp, #8]
   1773c:	add	sp, sp, #12
   17740:	pop	{pc}		; (ldr pc, [sp], #4)
   17744:	cmp	r0, #86	; 0x56
   17748:	beq	17754 <ftello64@plt+0x612c>
   1774c:	mov	r0, #7
   17750:	bx	lr
   17754:	str	r4, [sp, #-8]!
   17758:	str	lr, [sp, #4]
   1775c:	mov	r4, r2
   17760:	movw	r3, #11184	; 0x2bb0
   17764:	movt	r3, #3
   17768:	ldr	r3, [r3]
   1776c:	cmp	r3, #0
   17770:	beq	1779c <ftello64@plt+0x6174>
   17774:	mov	r1, r2
   17778:	ldr	r0, [r2, #48]	; 0x30
   1777c:	blx	r3
   17780:	ldr	r3, [r4, #16]
   17784:	tst	r3, #32
   17788:	beq	177e0 <ftello64@plt+0x61b8>
   1778c:	mov	r0, #0
   17790:	ldr	r4, [sp]
   17794:	add	sp, sp, #4
   17798:	pop	{pc}		; (ldr pc, [sp], #4)
   1779c:	movw	r3, #11292	; 0x2c1c
   177a0:	movt	r3, #3
   177a4:	ldr	r2, [r3]
   177a8:	cmp	r2, #0
   177ac:	beq	177c4 <ftello64@plt+0x619c>
   177b0:	movw	r1, #4580	; 0x11e4
   177b4:	movt	r1, #2
   177b8:	ldr	r0, [r4, #48]	; 0x30
   177bc:	bl	114b4 <fprintf@plt>
   177c0:	b	17780 <ftello64@plt+0x6158>
   177c4:	movw	r2, #4160	; 0x1040
   177c8:	movt	r2, #2
   177cc:	movw	r1, #60272	; 0xeb70
   177d0:	movt	r1, #1
   177d4:	mov	r0, r4
   177d8:	bl	1cf5c <argp_error@@Base>
   177dc:	b	17780 <ftello64@plt+0x6158>
   177e0:	mov	r0, #0
   177e4:	bl	11484 <exit@plt>
   177e8:	strd	r4, [sp, #-16]!
   177ec:	str	r6, [sp, #8]
   177f0:	str	lr, [sp, #12]
   177f4:	mov	r4, r2
   177f8:	cmn	r0, #3
   177fc:	beq	178b4 <ftello64@plt+0x628c>
   17800:	mov	r5, r1
   17804:	ble	17840 <ftello64@plt+0x6218>
   17808:	cmn	r0, #2
   1780c:	beq	178cc <ftello64@plt+0x62a4>
   17810:	cmp	r0, #63	; 0x3f
   17814:	movne	r0, #7
   17818:	bne	17830 <ftello64@plt+0x6208>
   1781c:	movw	r2, #634	; 0x27a
   17820:	ldr	r1, [r4, #48]	; 0x30
   17824:	mov	r0, r4
   17828:	bl	1ce94 <argp_state_help@@Base>
   1782c:	mov	r0, #0
   17830:	ldrd	r4, [sp]
   17834:	ldr	r6, [sp, #8]
   17838:	add	sp, sp, #12
   1783c:	pop	{pc}		; (ldr pc, [sp], #4)
   17840:	cmn	r0, #4
   17844:	movne	r0, #7
   17848:	bne	17830 <ftello64@plt+0x6208>
   1784c:	movw	r0, #4196	; 0x1064
   17850:	movt	r0, #2
   17854:	mov	r2, #10
   17858:	mov	r1, #0
   1785c:	cmp	r5, r1
   17860:	movne	r0, r5
   17864:	bl	11304 <strtol@plt>
   17868:	movw	r3, #11180	; 0x2bac
   1786c:	movt	r3, #3
   17870:	str	r0, [r3]
   17874:	ldr	r2, [r3]
   17878:	sub	r1, r2, #1
   1787c:	str	r1, [r3]
   17880:	cmp	r2, #0
   17884:	ble	17914 <ftello64@plt+0x62ec>
   17888:	mov	r5, #1
   1788c:	mov	r4, r3
   17890:	mov	r0, r5
   17894:	bl	11388 <sleep@plt>
   17898:	ldr	r3, [r4]
   1789c:	sub	r2, r3, #1
   178a0:	str	r2, [r4]
   178a4:	cmp	r3, #0
   178a8:	bgt	17890 <ftello64@plt+0x6268>
   178ac:	mov	r0, #0
   178b0:	b	17830 <ftello64@plt+0x6208>
   178b4:	movw	r2, #513	; 0x201
   178b8:	ldr	r1, [r4, #48]	; 0x30
   178bc:	mov	r0, r4
   178c0:	bl	1ce94 <argp_state_help@@Base>
   178c4:	mov	r0, #0
   178c8:	b	17830 <ftello64@plt+0x6208>
   178cc:	movw	r3, #11068	; 0x2b3c
   178d0:	movt	r3, #3
   178d4:	str	r1, [r3]
   178d8:	mov	r0, r1
   178dc:	bl	1883c <argp_parse@@Base+0xc14>
   178e0:	str	r0, [r4, #40]	; 0x28
   178e4:	movw	r3, #11064	; 0x2b38
   178e8:	movt	r3, #3
   178ec:	str	r0, [r3]
   178f0:	ldr	r3, [r4, #16]
   178f4:	and	r3, r3, #3
   178f8:	cmp	r3, #1
   178fc:	movne	r0, #0
   17900:	bne	17830 <ftello64@plt+0x6208>
   17904:	ldr	r3, [r4, #8]
   17908:	str	r5, [r3]
   1790c:	mov	r0, #0
   17910:	b	17830 <ftello64@plt+0x6208>
   17914:	mov	r0, #0
   17918:	b	17830 <ftello64@plt+0x6208>
   1791c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17920:	strd	r6, [sp, #8]
   17924:	strd	r8, [sp, #16]
   17928:	strd	sl, [sp, #24]
   1792c:	str	lr, [sp, #32]
   17930:	sub	sp, sp, #36	; 0x24
   17934:	str	r0, [sp, #16]
   17938:	str	r1, [sp, #20]
   1793c:	str	r2, [sp, #24]
   17940:	str	r3, [sp, #8]
   17944:	ldr	r8, [sp, #72]	; 0x48
   17948:	ldr	r6, [r0]
   1794c:	ldr	sl, [r0, #16]
   17950:	cmp	r6, #0
   17954:	beq	17970 <ftello64@plt+0x6348>
   17958:	mov	r4, r6
   1795c:	movw	r3, #36409	; 0x8e39
   17960:	movt	r3, #14563	; 0x38e3
   17964:	str	r3, [sp, #12]
   17968:	str	sl, [sp, #28]
   1796c:	b	179b4 <ftello64@plt+0x638c>
   17970:	ldr	r3, [r0, #4]
   17974:	cmp	r3, #0
   17978:	bne	17b40 <ftello64@plt+0x6518>
   1797c:	ldr	r0, [sp, #8]
   17980:	str	r6, [sp, #8]
   17984:	b	17bc4 <ftello64@plt+0x659c>
   17988:	ldr	r0, [r7, #16]!
   1798c:	cmp	r0, #0
   17990:	beq	17a94 <ftello64@plt+0x646c>
   17994:	mov	r1, r9
   17998:	bl	112f8 <strcmp@plt>
   1799c:	cmp	r0, #0
   179a0:	bne	17988 <ftello64@plt+0x6360>
   179a4:	sub	sl, r7, fp
   179a8:	cmp	sl, #0
   179ac:	blt	17a94 <ftello64@plt+0x646c>
   179b0:	add	r4, r4, #24
   179b4:	ldr	r7, [r4, #4]
   179b8:	cmp	r7, #0
   179bc:	bne	179cc <ftello64@plt+0x63a4>
   179c0:	ldr	r3, [r4]
   179c4:	cmp	r3, #0
   179c8:	beq	17b24 <ftello64@plt+0x64fc>
   179cc:	ldr	r3, [r4, #12]
   179d0:	and	r2, r3, #4
   179d4:	cmp	r2, #0
   179d8:	moveq	r6, r4
   179dc:	ldr	r5, [r6, #12]
   179e0:	ands	r5, r5, #8
   179e4:	bne	179b0 <ftello64@plt+0x6388>
   179e8:	tst	r3, #8
   179ec:	bne	17a6c <ftello64@plt+0x6444>
   179f0:	sub	r3, r7, #1
   179f4:	cmp	r3, #254	; 0xfe
   179f8:	bhi	17a6c <ftello64@plt+0x6444>
   179fc:	bl	11478 <__ctype_b_loc@plt>
   17a00:	ldr	r2, [r0]
   17a04:	lsl	r3, r7, #1
   17a08:	ldrh	r3, [r2, r3]
   17a0c:	tst	r3, #16384	; 0x4000
   17a10:	beq	17a6c <ftello64@plt+0x6444>
   17a14:	ldr	r3, [r8, #4]
   17a18:	add	r2, r3, #1
   17a1c:	str	r2, [r8, #4]
   17a20:	strb	r7, [r3]
   17a24:	ldr	r3, [r6, #8]
   17a28:	cmp	r3, #0
   17a2c:	beq	17a60 <ftello64@plt+0x6438>
   17a30:	ldr	r3, [r8, #4]
   17a34:	add	r2, r3, #1
   17a38:	str	r2, [r8, #4]
   17a3c:	mov	r1, #58	; 0x3a
   17a40:	strb	r1, [r3]
   17a44:	ldr	r3, [r6, #12]
   17a48:	tst	r3, #1
   17a4c:	beq	17a60 <ftello64@plt+0x6438>
   17a50:	ldr	r3, [r8, #4]
   17a54:	add	r2, r3, #1
   17a58:	str	r2, [r8, #4]
   17a5c:	strb	r1, [r3]
   17a60:	ldr	r3, [r8, #4]
   17a64:	mov	r2, #0
   17a68:	strb	r2, [r3]
   17a6c:	ldr	r9, [r4]
   17a70:	cmp	r9, #0
   17a74:	beq	179b0 <ftello64@plt+0x6388>
   17a78:	ldr	r3, [r8]
   17a7c:	ldr	fp, [r3, #8]
   17a80:	ldr	r0, [fp]
   17a84:	cmp	r0, #0
   17a88:	beq	17a94 <ftello64@plt+0x646c>
   17a8c:	mov	r7, fp
   17a90:	b	17994 <ftello64@plt+0x636c>
   17a94:	ldr	r3, [r8, #8]
   17a98:	str	r9, [r3]
   17a9c:	ldr	r3, [r6, #8]
   17aa0:	cmp	r3, #0
   17aa4:	beq	17abc <ftello64@plt+0x6494>
   17aa8:	ldr	r3, [r6, #12]
   17aac:	and	r3, r3, #1
   17ab0:	cmp	r3, #0
   17ab4:	movne	r5, #2
   17ab8:	moveq	r5, #1
   17abc:	ldr	r3, [r8, #8]
   17ac0:	str	r5, [r3, #4]
   17ac4:	ldr	r3, [r8, #8]
   17ac8:	mov	r2, #0
   17acc:	str	r2, [r3, #8]
   17ad0:	ldr	r3, [r4, #4]
   17ad4:	cmp	r3, r2
   17ad8:	ldreq	r3, [r6, #4]
   17adc:	bic	r2, r3, #-16777216	; 0xff000000
   17ae0:	ldr	r1, [r8, #8]
   17ae4:	ldr	r3, [r8]
   17ae8:	ldr	r3, [r3, #48]	; 0x30
   17aec:	ldr	r0, [sp, #8]
   17af0:	sub	r3, r0, r3
   17af4:	asr	r3, r3, #2
   17af8:	ldr	r0, [sp, #12]
   17afc:	mul	r3, r0, r3
   17b00:	add	r3, r3, #1
   17b04:	add	r3, r2, r3, lsl #24
   17b08:	str	r3, [r1, #12]
   17b0c:	ldr	r3, [r8, #8]
   17b10:	add	r2, r3, #16
   17b14:	str	r2, [r8, #8]
   17b18:	mov	r2, #0
   17b1c:	str	r2, [r3, #16]
   17b20:	b	179b0 <ftello64@plt+0x6388>
   17b24:	ldr	r3, [r4, #16]
   17b28:	cmp	r3, #0
   17b2c:	bne	179cc <ftello64@plt+0x63a4>
   17b30:	ldr	r3, [r4, #20]
   17b34:	cmp	r3, #0
   17b38:	bne	179cc <ftello64@plt+0x63a4>
   17b3c:	ldr	sl, [sp, #28]
   17b40:	ldr	r1, [sp, #16]
   17b44:	ldr	r3, [r1, #4]
   17b48:	ldr	r2, [sp, #8]
   17b4c:	str	r3, [r2]
   17b50:	str	r1, [r2, #4]
   17b54:	ldr	r3, [r8, #4]
   17b58:	str	r3, [r2, #8]
   17b5c:	mov	r3, #0
   17b60:	str	r3, [r2, #12]
   17b64:	ldr	r1, [sp, #20]
   17b68:	str	r1, [r2, #16]
   17b6c:	ldr	r1, [sp, #24]
   17b70:	str	r1, [r2, #20]
   17b74:	str	r3, [r2, #24]
   17b78:	str	r3, [r2, #32]
   17b7c:	str	r3, [r2, #28]
   17b80:	cmp	sl, r3
   17b84:	beq	17bbc <ftello64@plt+0x6594>
   17b88:	ldr	r3, [sl]
   17b8c:	cmp	r3, #0
   17b90:	beq	17c20 <ftello64@plt+0x65f8>
   17b94:	mov	r3, #0
   17b98:	add	r3, r3, #1
   17b9c:	ldr	r2, [sl, r3, lsl #4]
   17ba0:	cmp	r2, #0
   17ba4:	bne	17b98 <ftello64@plt+0x6570>
   17ba8:	ldr	r2, [r8, #12]
   17bac:	ldr	r1, [sp, #8]
   17bb0:	str	r2, [r1, #28]
   17bb4:	add	r3, r2, r3, lsl #2
   17bb8:	str	r3, [r8, #12]
   17bbc:	ldr	r3, [sp, #8]
   17bc0:	add	r0, r3, #36	; 0x24
   17bc4:	cmp	sl, #0
   17bc8:	beq	17c04 <ftello64@plt+0x65dc>
   17bcc:	ldr	ip, [sl]
   17bd0:	cmp	ip, #0
   17bd4:	beq	17c04 <ftello64@plt+0x65dc>
   17bd8:	mov	r2, #0
   17bdc:	add	r4, r2, #1
   17be0:	str	r8, [sp]
   17be4:	mov	r3, r0
   17be8:	ldr	r1, [sp, #8]
   17bec:	mov	r0, ip
   17bf0:	bl	1791c <ftello64@plt+0x62f4>
   17bf4:	ldr	ip, [sl, r4, lsl #4]
   17bf8:	mov	r2, r4
   17bfc:	cmp	ip, #0
   17c00:	bne	17bdc <ftello64@plt+0x65b4>
   17c04:	add	sp, sp, #36	; 0x24
   17c08:	ldrd	r4, [sp]
   17c0c:	ldrd	r6, [sp, #8]
   17c10:	ldrd	r8, [sp, #16]
   17c14:	ldrd	sl, [sp, #24]
   17c18:	add	sp, sp, #32
   17c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   17c20:	mov	r3, #0
   17c24:	b	17ba8 <ftello64@plt+0x6580>

00017c28 <argp_parse@@Base>:
   17c28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17c2c:	strd	r6, [sp, #8]
   17c30:	strd	r8, [sp, #16]
   17c34:	strd	sl, [sp, #24]
   17c38:	str	lr, [sp, #32]
   17c3c:	add	fp, sp, #32
   17c40:	sub	sp, sp, #228	; 0xe4
   17c44:	mov	r8, r0
   17c48:	str	r1, [fp, #-240]	; 0xffffff10
   17c4c:	str	r2, [fp, #-232]	; 0xffffff18
   17c50:	mov	r7, r3
   17c54:	tst	r3, #1
   17c58:	bne	17c84 <argp_parse@@Base+0x5c>
   17c5c:	movw	r3, #11068	; 0x2b3c
   17c60:	movt	r3, #3
   17c64:	ldr	r3, [r3]
   17c68:	cmp	r3, #0
   17c6c:	beq	17cdc <argp_parse@@Base+0xb4>
   17c70:	movw	r3, #11064	; 0x2b38
   17c74:	movt	r3, #3
   17c78:	ldr	r3, [r3]
   17c7c:	cmp	r3, #0
   17c80:	beq	17cf0 <argp_parse@@Base+0xc8>
   17c84:	tst	r7, #16
   17c88:	beq	17d0c <argp_parse@@Base+0xe4>
   17c8c:	str	r7, [fp, #-244]	; 0xffffff0c
   17c90:	mov	r3, #0
   17c94:	str	r3, [fp, #-188]	; 0xffffff44
   17c98:	str	r3, [fp, #-184]	; 0xffffff48
   17c9c:	str	r3, [fp, #-180]	; 0xffffff4c
   17ca0:	str	r3, [fp, #-176]	; 0xffffff50
   17ca4:	str	r3, [fp, #-172]	; 0xffffff54
   17ca8:	str	r3, [fp, #-168]	; 0xffffff58
   17cac:	str	r3, [fp, #-164]	; 0xffffff5c
   17cb0:	ands	r2, r7, #4
   17cb4:	str	r2, [fp, #-248]	; 0xffffff08
   17cb8:	moveq	r2, #1
   17cbc:	movne	r2, r3
   17cc0:	str	r2, [fp, #-228]	; 0xffffff1c
   17cc4:	str	r3, [fp, #-224]	; 0xffffff20
   17cc8:	str	r3, [fp, #-220]	; 0xffffff24
   17ccc:	str	r3, [fp, #-216]	; 0xffffff28
   17cd0:	cmp	r8, r3
   17cd4:	beq	17dd8 <argp_parse@@Base+0x1b0>
   17cd8:	b	17dcc <argp_parse@@Base+0x1a4>
   17cdc:	ldr	r2, [r2]
   17ce0:	movw	r3, #11068	; 0x2b3c
   17ce4:	movt	r3, #3
   17ce8:	str	r2, [r3]
   17cec:	b	17c70 <argp_parse@@Base+0x48>
   17cf0:	ldr	r3, [fp, #-232]	; 0xffffff18
   17cf4:	ldr	r0, [r3]
   17cf8:	bl	1883c <argp_parse@@Base+0xc14>
   17cfc:	movw	r3, #11064	; 0x2b38
   17d00:	movt	r3, #3
   17d04:	str	r0, [r3]
   17d08:	b	17c84 <argp_parse@@Base+0x5c>
   17d0c:	sub	sp, sp, #64	; 0x40
   17d10:	add	r5, sp, #8
   17d14:	sub	sp, sp, #32
   17d18:	add	r4, sp, #8
   17d1c:	mov	r1, #0
   17d20:	str	r1, [r4]
   17d24:	str	r1, [r4, #4]
   17d28:	str	r1, [r4, #8]
   17d2c:	str	r1, [r4, #12]
   17d30:	str	r1, [r4, #20]
   17d34:	str	r1, [r4, #24]
   17d38:	str	r5, [r4, #16]
   17d3c:	mov	r2, #64	; 0x40
   17d40:	mov	r0, r5
   17d44:	bl	114f0 <memset@plt>
   17d48:	cmp	r8, #0
   17d4c:	mov	r0, r5
   17d50:	strne	r8, [r0], #16
   17d54:	movw	r3, #3880	; 0xf28
   17d58:	movt	r3, #2
   17d5c:	str	r3, [r0]
   17d60:	movw	r3, #11292	; 0x2c1c
   17d64:	movt	r3, #3
   17d68:	ldr	r3, [r3]
   17d6c:	cmp	r3, #0
   17d70:	beq	17f98 <argp_parse@@Base+0x370>
   17d74:	add	r2, r0, #32
   17d78:	ldr	r3, [pc, #2548]	; 18774 <argp_parse@@Base+0xb4c>
   17d7c:	str	r3, [r0, #16]
   17d80:	mov	r3, #0
   17d84:	str	r3, [r2]
   17d88:	str	r7, [fp, #-244]	; 0xffffff0c
   17d8c:	str	r3, [fp, #-188]	; 0xffffff44
   17d90:	str	r3, [fp, #-184]	; 0xffffff48
   17d94:	str	r3, [fp, #-180]	; 0xffffff4c
   17d98:	str	r3, [fp, #-176]	; 0xffffff50
   17d9c:	str	r3, [fp, #-172]	; 0xffffff54
   17da0:	str	r3, [fp, #-168]	; 0xffffff58
   17da4:	str	r3, [fp, #-164]	; 0xffffff5c
   17da8:	ands	r2, r7, #4
   17dac:	str	r2, [fp, #-248]	; 0xffffff08
   17db0:	moveq	r2, #1
   17db4:	movne	r2, r3
   17db8:	str	r2, [fp, #-228]	; 0xffffff1c
   17dbc:	str	r3, [fp, #-224]	; 0xffffff20
   17dc0:	str	r3, [fp, #-220]	; 0xffffff24
   17dc4:	str	r3, [fp, #-216]	; 0xffffff28
   17dc8:	mov	r8, r4
   17dcc:	sub	r1, fp, #228	; 0xe4
   17dd0:	mov	r0, r8
   17dd4:	bl	1765c <ftello64@plt+0x6034>
   17dd8:	ldr	r4, [fp, #-220]	; 0xffffff24
   17ddc:	add	r4, r4, #1
   17de0:	add	r4, r4, r4, lsl #3
   17de4:	lsl	r4, r4, #2
   17de8:	ldr	r3, [fp, #-216]	; 0xffffff28
   17dec:	lsl	r3, r3, #2
   17df0:	str	r3, [fp, #-236]	; 0xffffff14
   17df4:	add	r9, r3, r4
   17df8:	ldr	r5, [fp, #-224]	; 0xffffff20
   17dfc:	add	r5, r5, #1
   17e00:	add	r5, r9, r5, lsl #4
   17e04:	ldr	r0, [fp, #-228]	; 0xffffff1c
   17e08:	add	r0, r0, #1
   17e0c:	add	r0, r0, r5
   17e10:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   17e14:	mov	r6, r0
   17e18:	str	r0, [fp, #-40]	; 0xffffffd8
   17e1c:	cmp	r0, #0
   17e20:	moveq	r4, #12
   17e24:	beq	18594 <argp_parse@@Base+0x96c>
   17e28:	str	r0, [fp, #-112]	; 0xffffff90
   17e2c:	add	r4, r0, r4
   17e30:	str	r4, [fp, #-104]	; 0xffffff98
   17e34:	add	r9, r0, r9
   17e38:	str	r9, [fp, #-152]	; 0xffffff68
   17e3c:	add	sl, r0, r5
   17e40:	str	sl, [fp, #-156]	; 0xffffff64
   17e44:	mov	r3, #1
   17e48:	str	r3, [fp, #-196]	; 0xffffff3c
   17e4c:	str	r3, [fp, #-192]	; 0xffffff40
   17e50:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   17e54:	strd	r2, [fp, #-148]	; 0xffffff6c
   17e58:	ldrd	r2, [fp, #-188]	; 0xffffff44
   17e5c:	strd	r2, [fp, #-140]	; 0xffffff74
   17e60:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17e64:	strd	r2, [fp, #-132]	; 0xffffff7c
   17e68:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17e6c:	strd	r2, [fp, #-124]	; 0xffffff84
   17e70:	ldr	r3, [fp, #-164]	; 0xffffff5c
   17e74:	str	r3, [fp, #-116]	; 0xffffff8c
   17e78:	ldr	r2, [fp, #-236]	; 0xffffff14
   17e7c:	mov	r1, #0
   17e80:	mov	r0, r4
   17e84:	bl	114f0 <memset@plt>
   17e88:	sub	r3, fp, #160	; 0xa0
   17e8c:	str	r3, [fp, #-212]	; 0xffffff2c
   17e90:	str	sl, [fp, #-208]	; 0xffffff30
   17e94:	str	r9, [fp, #-204]	; 0xffffff34
   17e98:	str	r4, [fp, #-200]	; 0xffffff38
   17e9c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   17ea0:	tst	r3, #8
   17ea4:	beq	17fb4 <argp_parse@@Base+0x38c>
   17ea8:	add	sl, sl, #1
   17eac:	str	sl, [fp, #-208]	; 0xffffff30
   17eb0:	mov	r3, #45	; 0x2d
   17eb4:	strb	r3, [r6, r5]
   17eb8:	mov	r3, #0
   17ebc:	ldr	r2, [fp, #-208]	; 0xffffff30
   17ec0:	strb	r3, [r2]
   17ec4:	ldr	r2, [fp, #-204]	; 0xffffff34
   17ec8:	str	r3, [r2]
   17ecc:	str	r8, [fp, #-160]	; 0xffffff60
   17ed0:	cmp	r8, r3
   17ed4:	beq	17fd4 <argp_parse@@Base+0x3ac>
   17ed8:	sub	r3, fp, #212	; 0xd4
   17edc:	str	r3, [sp]
   17ee0:	ldr	r3, [fp, #-112]	; 0xffffff90
   17ee4:	mov	r2, #0
   17ee8:	mov	r1, r2
   17eec:	mov	r0, r8
   17ef0:	bl	1791c <ftello64@plt+0x62f4>
   17ef4:	str	r0, [fp, #-108]	; 0xffffff94
   17ef8:	mov	r2, #0
   17efc:	mov	r3, #0
   17f00:	strd	r2, [fp, #-76]	; 0xffffffb4
   17f04:	strd	r2, [fp, #-68]	; 0xffffffbc
   17f08:	strd	r2, [fp, #-60]	; 0xffffffc4
   17f0c:	ldr	r3, [fp, #-160]	; 0xffffff60
   17f10:	str	r3, [fp, #-96]	; 0xffffffa0
   17f14:	ldr	r3, [fp, #-240]	; 0xffffff10
   17f18:	str	r3, [fp, #-92]	; 0xffffffa4
   17f1c:	ldr	r3, [fp, #-232]	; 0xffffff18
   17f20:	str	r3, [fp, #-88]	; 0xffffffa8
   17f24:	str	r7, [fp, #-80]	; 0xffffffb0
   17f28:	movw	r3, #11072	; 0x2b40
   17f2c:	movt	r3, #3
   17f30:	ldr	r3, [r3]
   17f34:	str	r3, [fp, #-52]	; 0xffffffcc
   17f38:	movw	r3, #11076	; 0x2b44
   17f3c:	movt	r3, #3
   17f40:	ldr	r3, [r3]
   17f44:	str	r3, [fp, #-48]	; 0xffffffd0
   17f48:	mov	r3, #0
   17f4c:	str	r3, [fp, #-84]	; 0xffffffac
   17f50:	sub	r3, fp, #160	; 0xa0
   17f54:	str	r3, [fp, #-44]	; 0xffffffd4
   17f58:	mov	r3, #1
   17f5c:	str	r3, [fp, #-100]	; 0xffffff9c
   17f60:	ldr	r3, [fp, #-112]	; 0xffffff90
   17f64:	ldr	r2, [fp, #-108]	; 0xffffff94
   17f68:	cmp	r3, r2
   17f6c:	bcs	18080 <argp_parse@@Base+0x458>
   17f70:	ldr	r2, [fp, #8]
   17f74:	str	r2, [r3, #24]
   17f78:	ldr	r5, [fp, #-112]	; 0xffffff90
   17f7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   17f80:	cmp	r5, r3
   17f84:	bcs	18080 <argp_parse@@Base+0x458>
   17f88:	mov	r6, #3
   17f8c:	movt	r6, #256	; 0x100
   17f90:	mov	r7, #0
   17f94:	b	1801c <argp_parse@@Base+0x3f4>
   17f98:	movw	r3, #11184	; 0x2bb0
   17f9c:	movt	r3, #3
   17fa0:	ldr	r3, [r3]
   17fa4:	cmp	r3, #0
   17fa8:	addeq	r2, r0, #16
   17fac:	bne	17d74 <argp_parse@@Base+0x14c>
   17fb0:	b	17d80 <argp_parse@@Base+0x158>
   17fb4:	ldr	r3, [fp, #-248]	; 0xffffff08
   17fb8:	cmp	r3, #0
   17fbc:	beq	17eb8 <argp_parse@@Base+0x290>
   17fc0:	add	sl, sl, #1
   17fc4:	str	sl, [fp, #-208]	; 0xffffff30
   17fc8:	mov	r3, #43	; 0x2b
   17fcc:	strb	r3, [r6, r5]
   17fd0:	b	17eb8 <argp_parse@@Base+0x290>
   17fd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   17fd8:	str	r3, [fp, #-108]	; 0xffffff94
   17fdc:	b	17ef8 <argp_parse@@Base+0x2d0>
   17fe0:	ldr	r3, [r5]
   17fe4:	cmp	r3, #0
   17fe8:	beq	1803c <argp_parse@@Base+0x414>
   17fec:	mov	r3, r7
   17ff0:	mov	r2, r6
   17ff4:	sub	r1, fp, #96	; 0x60
   17ff8:	mov	r0, r5
   17ffc:	bl	175e4 <ftello64@plt+0x5fbc>
   18000:	add	r5, r5, #36	; 0x24
   18004:	ldr	r3, [fp, #-108]	; 0xffffff94
   18008:	cmp	r5, r3
   1800c:	bcs	18070 <argp_parse@@Base+0x448>
   18010:	cmp	r0, #7
   18014:	cmpne	r0, #0
   18018:	bne	18068 <argp_parse@@Base+0x440>
   1801c:	ldr	r3, [r5, #16]
   18020:	cmp	r3, #0
   18024:	beq	17fe0 <argp_parse@@Base+0x3b8>
   18028:	ldr	r2, [r5, #20]
   1802c:	ldr	r3, [r3, #28]
   18030:	ldr	r3, [r3, r2, lsl #2]
   18034:	str	r3, [r5, #24]
   18038:	b	17fe0 <argp_parse@@Base+0x3b8>
   1803c:	ldr	r3, [r5, #4]
   18040:	ldr	r3, [r3, #16]
   18044:	cmp	r3, #0
   18048:	beq	17fec <argp_parse@@Base+0x3c4>
   1804c:	ldr	r3, [r3]
   18050:	cmp	r3, #0
   18054:	beq	17fec <argp_parse@@Base+0x3c4>
   18058:	ldr	r3, [r5, #28]
   1805c:	ldr	r2, [r5, #24]
   18060:	str	r2, [r3]
   18064:	b	17fec <argp_parse@@Base+0x3c4>
   18068:	mov	r4, r0
   1806c:	b	18594 <argp_parse@@Base+0x96c>
   18070:	mov	r4, r0
   18074:	cmp	r0, #7
   18078:	cmpne	r0, #0
   1807c:	bne	18594 <argp_parse@@Base+0x96c>
   18080:	ldr	r3, [fp, #-80]	; 0xffffffb0
   18084:	tst	r3, #2
   18088:	moveq	r3, #1
   1808c:	streq	r3, [fp, #-144]	; 0xffffff70
   18090:	beq	180bc <argp_parse@@Base+0x494>
   18094:	mov	r2, #0
   18098:	str	r2, [fp, #-144]	; 0xffffff70
   1809c:	tst	r3, #1
   180a0:	beq	180bc <argp_parse@@Base+0x494>
   180a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   180a8:	sub	r3, r3, #4
   180ac:	str	r3, [fp, #-88]	; 0xffffffa8
   180b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   180b4:	add	r3, r3, #1
   180b8:	str	r3, [fp, #-92]	; 0xffffffa4
   180bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   180c0:	ldr	r2, [fp, #-232]	; 0xffffff18
   180c4:	cmp	r2, r3
   180c8:	beq	180f0 <argp_parse@@Base+0x4c8>
   180cc:	movw	r3, #11064	; 0x2b38
   180d0:	movt	r3, #3
   180d4:	ldr	r3, [r3]
   180d8:	str	r3, [fp, #-56]	; 0xffffffc8
   180dc:	movw	sl, #4208	; 0x1070
   180e0:	movt	sl, #2
   180e4:	mov	r9, #6
   180e8:	movt	r9, #256	; 0x100
   180ec:	b	181b8 <argp_parse@@Base+0x590>
   180f0:	ldr	r0, [r2]
   180f4:	cmp	r0, #0
   180f8:	beq	180cc <argp_parse@@Base+0x4a4>
   180fc:	bl	1883c <argp_parse@@Base+0xc14>
   18100:	str	r0, [fp, #-56]	; 0xffffffc8
   18104:	b	180dc <argp_parse@@Base+0x4b4>
   18108:	ldr	r3, [fp, #-84]	; 0xffffffac
   1810c:	str	r3, [fp, #-148]	; 0xffffff6c
   18110:	mvn	r3, #0
   18114:	str	r3, [fp, #-140]	; 0xffffff74
   18118:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1811c:	tst	r3, #64	; 0x40
   18120:	beq	1823c <argp_parse@@Base+0x614>
   18124:	sub	r3, fp, #148	; 0x94
   18128:	str	r3, [sp, #4]
   1812c:	mov	r3, #0
   18130:	str	r3, [sp]
   18134:	ldr	r3, [fp, #-152]	; 0xffffff68
   18138:	ldr	r2, [fp, #-156]	; 0xffffff64
   1813c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18140:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18144:	bl	189e4 <argp_parse@@Base+0xdbc>
   18148:	mov	r5, r0
   1814c:	ldr	r4, [fp, #-148]	; 0xffffff6c
   18150:	str	r4, [fp, #-84]	; 0xffffffac
   18154:	cmn	r5, #1
   18158:	beq	18268 <argp_parse@@Base+0x640>
   1815c:	cmp	r5, #63	; 0x3f
   18160:	beq	18298 <argp_parse@@Base+0x670>
   18164:	cmp	r5, #1
   18168:	beq	18214 <argp_parse@@Base+0x5ec>
   1816c:	ldr	r4, [fp, #-136]	; 0xffffff78
   18170:	asrs	r3, r5, #24
   18174:	beq	182a8 <argp_parse@@Base+0x680>
   18178:	ands	r1, r5, #8388608	; 0x800000
   1817c:	movne	r1, #-16777216	; 0xff000000
   18180:	bic	r2, r5, #-16777216	; 0xff000000
   18184:	add	r0, r3, r3, lsl #3
   18188:	lsl	r0, r0, #2
   1818c:	sub	r0, r0, #36	; 0x24
   18190:	mov	r3, r4
   18194:	orr	r2, r2, r1
   18198:	sub	r1, fp, #96	; 0x60
   1819c:	ldr	ip, [fp, #-112]	; 0xffffff90
   181a0:	add	r0, ip, r0
   181a4:	bl	175e4 <ftello64@plt+0x5fbc>
   181a8:	cmp	r0, #7
   181ac:	beq	18470 <argp_parse@@Base+0x848>
   181b0:	cmp	r0, #0
   181b4:	bne	184f4 <argp_parse@@Base+0x8cc>
   181b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   181bc:	cmp	r3, #0
   181c0:	beq	181d8 <argp_parse@@Base+0x5b0>
   181c4:	ldr	r2, [fp, #-84]	; 0xffffffac
   181c8:	cmp	r3, r2
   181cc:	movgt	r3, #0
   181d0:	strgt	r3, [fp, #-72]	; 0xffffffb8
   181d4:	ble	181e4 <argp_parse@@Base+0x5bc>
   181d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   181dc:	cmp	r3, #0
   181e0:	bne	18108 <argp_parse@@Base+0x4e0>
   181e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   181e8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   181ec:	cmp	r3, r2
   181f0:	bge	18764 <argp_parse@@Base+0xb3c>
   181f4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   181f8:	tst	r2, #4
   181fc:	bne	1876c <argp_parse@@Base+0xb44>
   18200:	add	r2, r3, #1
   18204:	str	r2, [fp, #-84]	; 0xffffffac
   18208:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1820c:	ldr	r3, [r2, r3, lsl #2]
   18210:	str	r3, [fp, #-136]	; 0xffffff78
   18214:	ldr	r7, [fp, #-136]	; 0xffffff78
   18218:	ldr	r4, [fp, #-84]	; 0xffffffac
   1821c:	sub	r4, r4, #1
   18220:	str	r4, [fp, #-84]	; 0xffffffac
   18224:	ldr	r5, [fp, #-112]	; 0xffffff90
   18228:	ldr	r3, [fp, #-108]	; 0xffffff94
   1822c:	cmp	r3, r5
   18230:	bls	184ec <argp_parse@@Base+0x8c4>
   18234:	mov	r6, #0
   18238:	b	18368 <argp_parse@@Base+0x740>
   1823c:	sub	r3, fp, #148	; 0x94
   18240:	str	r3, [sp, #4]
   18244:	mov	r3, #0
   18248:	str	r3, [sp]
   1824c:	ldr	r3, [fp, #-152]	; 0xffffff68
   18250:	ldr	r2, [fp, #-156]	; 0xffffff64
   18254:	ldr	r1, [fp, #-88]	; 0xffffffa8
   18258:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1825c:	bl	18988 <argp_parse@@Base+0xd60>
   18260:	mov	r5, r0
   18264:	b	1814c <argp_parse@@Base+0x524>
   18268:	mov	r3, #0
   1826c:	str	r3, [fp, #-100]	; 0xffffff9c
   18270:	cmp	r4, #1
   18274:	ble	181e4 <argp_parse@@Base+0x5bc>
   18278:	sub	r3, r4, #-1073741823	; 0xc0000001
   1827c:	mov	r1, sl
   18280:	ldr	r2, [fp, #-88]	; 0xffffffa8
   18284:	ldr	r0, [r2, r3, lsl #2]
   18288:	bl	112f8 <strcmp@plt>
   1828c:	cmp	r0, #0
   18290:	streq	r4, [fp, #-72]	; 0xffffffb8
   18294:	b	181e4 <argp_parse@@Base+0x5bc>
   18298:	ldr	r3, [fp, #-140]	; 0xffffff74
   1829c:	cmn	r3, #1
   182a0:	bne	1875c <argp_parse@@Base+0xb34>
   182a4:	ldr	r4, [fp, #-136]	; 0xffffff78
   182a8:	mov	r1, r5
   182ac:	ldr	r0, [fp, #-156]	; 0xffffff64
   182b0:	bl	114a8 <strchr@plt>
   182b4:	subs	r1, r0, #0
   182b8:	beq	18308 <argp_parse@@Base+0x6e0>
   182bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   182c0:	ldr	r2, [fp, #-108]	; 0xffffff94
   182c4:	cmp	r2, r0
   182c8:	bls	18308 <argp_parse@@Base+0x6e0>
   182cc:	ldr	r3, [r0, #8]
   182d0:	cmp	r1, r3
   182d4:	bcc	182f0 <argp_parse@@Base+0x6c8>
   182d8:	add	r0, r0, #36	; 0x24
   182dc:	cmp	r2, r0
   182e0:	bls	18308 <argp_parse@@Base+0x6e0>
   182e4:	ldr	r3, [r0, #8]
   182e8:	cmp	r1, r3
   182ec:	bcs	182d8 <argp_parse@@Base+0x6b0>
   182f0:	mov	r3, r4
   182f4:	mov	r2, r5
   182f8:	sub	r1, fp, #96	; 0x60
   182fc:	bl	175e4 <ftello64@plt+0x5fbc>
   18300:	cmp	r0, #7
   18304:	bne	181b0 <argp_parse@@Base+0x588>
   18308:	ldr	r3, [pc, #1128]	; 18778 <argp_parse@@Base+0xb50>
   1830c:	mov	r2, r5
   18310:	movw	r1, #4212	; 0x1074
   18314:	movt	r1, #2
   18318:	sub	r0, fp, #96	; 0x60
   1831c:	bl	1cf5c <argp_error@@Base>
   18320:	b	183a8 <argp_parse@@Base+0x780>
   18324:	ldr	r3, [fp, #-84]	; 0xffffffac
   18328:	sub	r3, r3, #1
   1832c:	str	r3, [fp, #-84]	; 0xffffffac
   18330:	mov	r3, r6
   18334:	mov	r2, r9
   18338:	sub	r1, fp, #96	; 0x60
   1833c:	mov	r0, r5
   18340:	bl	175e4 <ftello64@plt+0x5fbc>
   18344:	add	r5, r5, #36	; 0x24
   18348:	ldr	r2, [fp, #-108]	; 0xffffff94
   1834c:	cmp	r5, r2
   18350:	movcs	r3, #0
   18354:	movcc	r3, #1
   18358:	cmp	r0, #7
   1835c:	movne	r3, #0
   18360:	cmp	r3, #0
   18364:	beq	18438 <argp_parse@@Base+0x810>
   18368:	ldr	r3, [fp, #-84]	; 0xffffffac
   1836c:	add	r3, r3, #1
   18370:	str	r3, [fp, #-84]	; 0xffffffac
   18374:	mov	r3, r7
   18378:	mov	r2, r6
   1837c:	sub	r1, fp, #96	; 0x60
   18380:	mov	r0, r5
   18384:	bl	175e4 <ftello64@plt+0x5fbc>
   18388:	cmp	r0, #7
   1838c:	beq	18324 <argp_parse@@Base+0x6fc>
   18390:	add	r5, r5, #36	; 0x24
   18394:	cmp	r0, #0
   18398:	beq	18448 <argp_parse@@Base+0x820>
   1839c:	cmp	r0, #7
   183a0:	bne	181b0 <argp_parse@@Base+0x588>
   183a4:	mov	r5, #1
   183a8:	add	r5, r5, #1
   183ac:	bics	r3, r5, #2
   183b0:	moveq	r3, #1
   183b4:	movne	r3, #0
   183b8:	cmp	r3, #0
   183bc:	beq	18700 <argp_parse@@Base+0xad8>
   183c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   183c4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   183c8:	cmp	r3, r2
   183cc:	beq	185b4 <argp_parse@@Base+0x98c>
   183d0:	ldr	r2, [fp, #4]
   183d4:	cmp	r2, #0
   183d8:	strne	r3, [r2]
   183dc:	beq	186d8 <argp_parse@@Base+0xab0>
   183e0:	ldr	r5, [fp, #-108]	; 0xffffff94
   183e4:	sub	r5, r5, #36	; 0x24
   183e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   183ec:	cmp	r5, r3
   183f0:	bcc	18740 <argp_parse@@Base+0xb18>
   183f4:	mov	r6, #4
   183f8:	movt	r6, #256	; 0x100
   183fc:	mov	r7, #0
   18400:	mov	r3, r7
   18404:	mov	r2, r6
   18408:	sub	r1, fp, #96	; 0x60
   1840c:	mov	r0, r5
   18410:	bl	175e4 <ftello64@plt+0x5fbc>
   18414:	sub	r5, r5, #36	; 0x24
   18418:	ldr	r3, [fp, #-112]	; 0xffffff90
   1841c:	cmp	r5, r3
   18420:	bcc	18718 <argp_parse@@Base+0xaf0>
   18424:	cmp	r0, #7
   18428:	cmpne	r0, #0
   1842c:	beq	18400 <argp_parse@@Base+0x7d8>
   18430:	mov	r4, r0
   18434:	b	18728 <argp_parse@@Base+0xb00>
   18438:	cmp	r0, #0
   1843c:	bne	1839c <argp_parse@@Base+0x774>
   18440:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18444:	str	r3, [fp, #-84]	; 0xffffffac
   18448:	ldr	r3, [fp, #-84]	; 0xffffffac
   1844c:	cmp	r4, r3
   18450:	movge	r3, #1
   18454:	strge	r3, [fp, #-100]	; 0xffffff9c
   18458:	bge	181b8 <argp_parse@@Base+0x590>
   1845c:	sub	r4, r3, r4
   18460:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18464:	add	r4, r3, r4
   18468:	str	r4, [r5, #-24]	; 0xffffffe8
   1846c:	b	181b8 <argp_parse@@Base+0x590>
   18470:	ldr	r3, [fp, #-152]	; 0xffffff68
   18474:	ldr	r2, [r3, #12]
   18478:	cmp	r2, r5
   1847c:	beq	184b4 <argp_parse@@Base+0x88c>
   18480:	ldr	r2, [r3]
   18484:	cmp	r2, #0
   18488:	beq	184e0 <argp_parse@@Base+0x8b8>
   1848c:	add	r3, r3, #16
   18490:	ldr	r2, [r3, #12]
   18494:	cmp	r5, r2
   18498:	beq	184b4 <argp_parse@@Base+0x88c>
   1849c:	ldr	r2, [r3]
   184a0:	cmp	r2, #0
   184a4:	bne	1848c <argp_parse@@Base+0x864>
   184a8:	movw	r2, #4204	; 0x106c
   184ac:	movt	r2, #2
   184b0:	b	184c8 <argp_parse@@Base+0x8a0>
   184b4:	ldr	r2, [r3]
   184b8:	movw	r3, #4204	; 0x106c
   184bc:	movt	r3, #2
   184c0:	cmp	r2, #0
   184c4:	moveq	r2, r3
   184c8:	ldr	r3, [pc, #680]	; 18778 <argp_parse@@Base+0xb50>
   184cc:	movw	r1, #4220	; 0x107c
   184d0:	movt	r1, #2
   184d4:	sub	r0, fp, #96	; 0x60
   184d8:	bl	1cf5c <argp_error@@Base>
   184dc:	b	183a8 <argp_parse@@Base+0x780>
   184e0:	movw	r2, #4204	; 0x106c
   184e4:	movt	r2, #2
   184e8:	b	184c8 <argp_parse@@Base+0x8a0>
   184ec:	mov	r5, #1
   184f0:	b	183a8 <argp_parse@@Base+0x780>
   184f4:	mov	r4, r0
   184f8:	cmp	r4, #7
   184fc:	beq	18700 <argp_parse@@Base+0xad8>
   18500:	ldr	r5, [fp, #-112]	; 0xffffff90
   18504:	ldr	r3, [fp, #-108]	; 0xffffff94
   18508:	cmp	r5, r3
   1850c:	bcs	18540 <argp_parse@@Base+0x918>
   18510:	mov	r6, #5
   18514:	movt	r6, #256	; 0x100
   18518:	mov	r7, #0
   1851c:	mov	r3, r7
   18520:	mov	r2, r6
   18524:	sub	r1, fp, #96	; 0x60
   18528:	mov	r0, r5
   1852c:	bl	175e4 <ftello64@plt+0x5fbc>
   18530:	add	r5, r5, #36	; 0x24
   18534:	ldr	r3, [fp, #-108]	; 0xffffff94
   18538:	cmp	r5, r3
   1853c:	bcc	1851c <argp_parse@@Base+0x8f4>
   18540:	ldr	r5, [fp, #-108]	; 0xffffff94
   18544:	sub	r5, r5, #36	; 0x24
   18548:	ldr	r3, [fp, #-112]	; 0xffffff90
   1854c:	cmp	r3, r5
   18550:	bhi	18584 <argp_parse@@Base+0x95c>
   18554:	mov	r6, #7
   18558:	movt	r6, #256	; 0x100
   1855c:	mov	r7, #0
   18560:	mov	r3, r7
   18564:	mov	r2, r6
   18568:	sub	r1, fp, #96	; 0x60
   1856c:	mov	r0, r5
   18570:	bl	175e4 <ftello64@plt+0x5fbc>
   18574:	sub	r5, r5, #36	; 0x24
   18578:	ldr	r3, [fp, #-112]	; 0xffffff90
   1857c:	cmp	r5, r3
   18580:	bcs	18560 <argp_parse@@Base+0x938>
   18584:	cmp	r4, #7
   18588:	moveq	r4, #22
   1858c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18590:	bl	18900 <argp_parse@@Base+0xcd8>
   18594:	mov	r0, r4
   18598:	sub	sp, fp, #32
   1859c:	ldrd	r4, [sp]
   185a0:	ldrd	r6, [sp, #8]
   185a4:	ldrd	r8, [sp, #16]
   185a8:	ldrd	sl, [sp, #24]
   185ac:	add	sp, sp, #32
   185b0:	pop	{pc}		; (ldr pc, [sp], #4)
   185b4:	ldr	r6, [fp, #-112]	; 0xffffff90
   185b8:	ldr	r5, [fp, #-108]	; 0xffffff94
   185bc:	cmp	r5, r6
   185c0:	bls	18748 <argp_parse@@Base+0xb20>
   185c4:	mov	r4, #0
   185c8:	mov	r7, #2
   185cc:	movt	r7, #256	; 0x100
   185d0:	mov	r8, r4
   185d4:	mov	r0, r4
   185d8:	b	185f8 <argp_parse@@Base+0x9d0>
   185dc:	add	r6, r6, #36	; 0x24
   185e0:	ldr	r5, [fp, #-108]	; 0xffffff94
   185e4:	cmp	r6, r5
   185e8:	bcs	18634 <argp_parse@@Base+0xa0c>
   185ec:	cmp	r0, #7
   185f0:	cmpne	r0, #0
   185f4:	bne	1861c <argp_parse@@Base+0x9f4>
   185f8:	ldr	r3, [r6, #12]
   185fc:	cmp	r3, #0
   18600:	bne	185dc <argp_parse@@Base+0x9b4>
   18604:	mov	r3, r8
   18608:	mov	r2, r7
   1860c:	sub	r1, fp, #96	; 0x60
   18610:	mov	r0, r6
   18614:	bl	175e4 <ftello64@plt+0x5fbc>
   18618:	b	185dc <argp_parse@@Base+0x9b4>
   1861c:	mov	r4, r0
   18620:	sub	r5, r5, #36	; 0x24
   18624:	ldr	r3, [fp, #-112]	; 0xffffff90
   18628:	cmp	r3, r5
   1862c:	bls	18648 <argp_parse@@Base+0xa20>
   18630:	b	18694 <argp_parse@@Base+0xa6c>
   18634:	mov	r4, r0
   18638:	sub	r5, r5, #36	; 0x24
   1863c:	ldr	r3, [fp, #-112]	; 0xffffff90
   18640:	cmp	r3, r5
   18644:	bhi	186bc <argp_parse@@Base+0xa94>
   18648:	cmp	r4, #7
   1864c:	cmpne	r4, #0
   18650:	bne	18694 <argp_parse@@Base+0xa6c>
   18654:	mov	r6, #1
   18658:	movt	r6, #256	; 0x100
   1865c:	mov	r7, #0
   18660:	mov	r3, r7
   18664:	mov	r2, r6
   18668:	sub	r1, fp, #96	; 0x60
   1866c:	mov	r0, r5
   18670:	bl	175e4 <ftello64@plt+0x5fbc>
   18674:	sub	r5, r5, #36	; 0x24
   18678:	ldr	r3, [fp, #-112]	; 0xffffff90
   1867c:	cmp	r5, r3
   18680:	bcc	186b8 <argp_parse@@Base+0xa90>
   18684:	cmp	r0, #7
   18688:	cmpne	r0, #0
   1868c:	beq	18660 <argp_parse@@Base+0xa38>
   18690:	mov	r4, r0
   18694:	ldr	r3, [fp, #4]
   18698:	cmp	r3, #0
   1869c:	beq	186ac <argp_parse@@Base+0xa84>
   186a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   186a4:	ldr	r2, [fp, #4]
   186a8:	str	r3, [r2]
   186ac:	cmp	r4, #0
   186b0:	beq	183e0 <argp_parse@@Base+0x7b8>
   186b4:	b	184f8 <argp_parse@@Base+0x8d0>
   186b8:	mov	r4, r0
   186bc:	cmp	r4, #7
   186c0:	bne	18694 <argp_parse@@Base+0xa6c>
   186c4:	ldr	r3, [fp, #4]
   186c8:	cmp	r3, #0
   186cc:	movne	r4, #0
   186d0:	bne	186a0 <argp_parse@@Base+0xa78>
   186d4:	b	183e0 <argp_parse@@Base+0x7b8>
   186d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   186dc:	tst	r3, #2
   186e0:	bne	18700 <argp_parse@@Base+0xad8>
   186e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   186e8:	cmp	r0, #0
   186ec:	beq	18700 <argp_parse@@Base+0xad8>
   186f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   186f4:	movw	r1, #4232	; 0x1088
   186f8:	movt	r1, #2
   186fc:	bl	114b4 <fprintf@plt>
   18700:	mov	r2, #260	; 0x104
   18704:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18708:	sub	r0, fp, #96	; 0x60
   1870c:	bl	1ce94 <argp_state_help@@Base>
   18710:	mov	r4, #7
   18714:	b	18500 <argp_parse@@Base+0x8d8>
   18718:	mov	r4, r0
   1871c:	cmp	r0, #7
   18720:	movne	r4, r0
   18724:	moveq	r4, #0
   18728:	ldr	r5, [fp, #-108]	; 0xffffff94
   1872c:	sub	r5, r5, #36	; 0x24
   18730:	ldr	r3, [fp, #-112]	; 0xffffff90
   18734:	cmp	r3, r5
   18738:	bls	18554 <argp_parse@@Base+0x92c>
   1873c:	b	1858c <argp_parse@@Base+0x964>
   18740:	mov	r4, #0
   18744:	b	1858c <argp_parse@@Base+0x964>
   18748:	sub	r5, r5, #36	; 0x24
   1874c:	cmp	r5, r6
   18750:	movcc	r4, #0
   18754:	bcs	18654 <argp_parse@@Base+0xa2c>
   18758:	b	18694 <argp_parse@@Base+0xa6c>
   1875c:	mov	r3, #0
   18760:	b	183b8 <argp_parse@@Base+0x790>
   18764:	mov	r3, #1
   18768:	b	183b8 <argp_parse@@Base+0x790>
   1876c:	mov	r3, #1
   18770:	b	183b8 <argp_parse@@Base+0x790>
   18774:	andeq	r0, r2, r4, asr #30
   18778:	andeq	r0, r2, r0, ror #30
   1877c:	cmp	r1, #0
   18780:	beq	187cc <argp_parse@@Base+0xba4>
   18784:	ldr	r2, [r1, #52]	; 0x34
   18788:	ldr	r3, [r2, #48]	; 0x30
   1878c:	ldr	r1, [r2, #52]	; 0x34
   18790:	cmp	r3, r1
   18794:	bcs	187d4 <argp_parse@@Base+0xbac>
   18798:	ldr	r2, [r3, #4]
   1879c:	cmp	r0, r2
   187a0:	beq	187bc <argp_parse@@Base+0xb94>
   187a4:	add	r3, r3, #36	; 0x24
   187a8:	cmp	r3, r1
   187ac:	bcs	187c4 <argp_parse@@Base+0xb9c>
   187b0:	ldr	r2, [r3, #4]
   187b4:	cmp	r2, r0
   187b8:	bne	187a4 <argp_parse@@Base+0xb7c>
   187bc:	ldr	r0, [r3, #24]
   187c0:	bx	lr
   187c4:	mov	r0, #0
   187c8:	bx	lr
   187cc:	mov	r0, r1
   187d0:	bx	lr
   187d4:	mov	r0, #0
   187d8:	bx	lr
   187dc:	push	{lr}		; (str lr, [sp, #-4]!)
   187e0:	sub	sp, sp, #12
   187e4:	movw	r1, #11188	; 0x2bb4
   187e8:	movt	r1, #3
   187ec:	ldr	r3, [r1, #4]
   187f0:	str	r3, [sp]
   187f4:	movw	r3, #4448	; 0x1160
   187f8:	movt	r3, #2
   187fc:	movw	r2, #4464	; 0x1170
   18800:	movt	r2, #2
   18804:	ldr	r1, [r1]
   18808:	bl	19558 <_obstack_memory_used@@Base+0x778>
   1880c:	add	sp, sp, #12
   18810:	pop	{pc}		; (ldr pc, [sp], #4)
   18814:	movw	r3, #11184	; 0x2bb0
   18818:	movt	r3, #3
   1881c:	movw	r2, #34780	; 0x87dc
   18820:	movt	r2, #1
   18824:	str	r2, [r3]
   18828:	movw	r3, #11188	; 0x2bb4
   1882c:	movt	r3, #3
   18830:	str	r0, [r3]
   18834:	str	r1, [r3, #4]
   18838:	bx	lr
   1883c:	ldrb	r3, [r0]
   18840:	cmp	r3, #47	; 0x2f
   18844:	bne	18854 <argp_parse@@Base+0xc2c>
   18848:	ldrb	r3, [r0, #1]!
   1884c:	cmp	r3, #47	; 0x2f
   18850:	beq	18848 <argp_parse@@Base+0xc20>
   18854:	ldrb	r2, [r0]
   18858:	cmp	r2, #0
   1885c:	bxeq	lr
   18860:	push	{lr}		; (str lr, [sp, #-4]!)
   18864:	mov	r1, r0
   18868:	mov	r3, #0
   1886c:	mov	lr, #1
   18870:	mov	ip, r3
   18874:	b	18890 <argp_parse@@Base+0xc68>
   18878:	cmp	r3, #0
   1887c:	movne	r0, r1
   18880:	movne	r3, ip
   18884:	ldrb	r2, [r1, #1]!
   18888:	cmp	r2, #0
   1888c:	beq	188a0 <argp_parse@@Base+0xc78>
   18890:	cmp	r2, #47	; 0x2f
   18894:	moveq	r3, lr
   18898:	bne	18878 <argp_parse@@Base+0xc50>
   1889c:	b	18884 <argp_parse@@Base+0xc5c>
   188a0:	pop	{pc}		; (ldr pc, [sp], #4)
   188a4:	str	r4, [sp, #-8]!
   188a8:	str	lr, [sp, #4]
   188ac:	mov	r4, r0
   188b0:	bl	1149c <strlen@plt>
   188b4:	cmp	r0, #1
   188b8:	bls	188d8 <argp_parse@@Base+0xcb0>
   188bc:	add	r3, r4, r0
   188c0:	ldrb	r3, [r3, #-1]
   188c4:	cmp	r3, #47	; 0x2f
   188c8:	subeq	r0, r0, #2
   188cc:	addeq	r3, r4, r0
   188d0:	rsbeq	r1, r4, #1
   188d4:	beq	188e4 <argp_parse@@Base+0xcbc>
   188d8:	ldr	r4, [sp]
   188dc:	add	sp, sp, #4
   188e0:	pop	{pc}		; (ldr pc, [sp], #4)
   188e4:	add	r0, r1, r3
   188e8:	cmp	r3, r4
   188ec:	beq	188d8 <argp_parse@@Base+0xcb0>
   188f0:	ldrb	r2, [r3], #-1
   188f4:	cmp	r2, #47	; 0x2f
   188f8:	bne	188d8 <argp_parse@@Base+0xcb0>
   188fc:	b	188e4 <argp_parse@@Base+0xcbc>
   18900:	strd	r4, [sp, #-12]!
   18904:	str	lr, [sp, #8]
   18908:	sub	sp, sp, #12
   1890c:	mov	r5, r0
   18910:	bl	114c0 <__errno_location@plt>
   18914:	mov	r4, r0
   18918:	ldr	r3, [r0]
   1891c:	str	r3, [sp]
   18920:	str	r3, [sp, #4]
   18924:	mov	r3, #0
   18928:	str	r3, [r0]
   1892c:	mov	r0, r5
   18930:	bl	11334 <free@plt>
   18934:	ldr	r3, [r4]
   18938:	clz	r3, r3
   1893c:	lsr	r3, r3, #5
   18940:	add	r2, sp, #8
   18944:	add	r3, r2, r3, lsl #2
   18948:	ldr	r3, [r3, #-8]
   1894c:	str	r3, [r4]
   18950:	add	sp, sp, #12
   18954:	ldrd	r4, [sp]
   18958:	add	sp, sp, #8
   1895c:	pop	{pc}		; (ldr pc, [sp], #4)
   18960:	push	{lr}		; (str lr, [sp, #-4]!)
   18964:	sub	sp, sp, #20
   18968:	mov	ip, #0
   1896c:	str	ip, [sp, #8]
   18970:	str	ip, [sp, #4]
   18974:	ldr	ip, [sp, #24]
   18978:	str	ip, [sp]
   1897c:	bl	1dcbc <argp_error@@Base+0xd60>
   18980:	add	sp, sp, #20
   18984:	pop	{pc}		; (ldr pc, [sp], #4)
   18988:	push	{lr}		; (str lr, [sp, #-4]!)
   1898c:	sub	sp, sp, #20
   18990:	mov	ip, #0
   18994:	str	ip, [sp, #12]
   18998:	ldr	lr, [sp, #28]
   1899c:	str	lr, [sp, #8]
   189a0:	str	ip, [sp, #4]
   189a4:	ldr	ip, [sp, #24]
   189a8:	str	ip, [sp]
   189ac:	bl	1d700 <argp_error@@Base+0x7a4>
   189b0:	add	sp, sp, #20
   189b4:	pop	{pc}		; (ldr pc, [sp], #4)
   189b8:	push	{lr}		; (str lr, [sp, #-4]!)
   189bc:	sub	sp, sp, #20
   189c0:	mov	ip, #0
   189c4:	str	ip, [sp, #8]
   189c8:	mov	ip, #1
   189cc:	str	ip, [sp, #4]
   189d0:	ldr	ip, [sp, #24]
   189d4:	str	ip, [sp]
   189d8:	bl	1dcbc <argp_error@@Base+0xd60>
   189dc:	add	sp, sp, #20
   189e0:	pop	{pc}		; (ldr pc, [sp], #4)
   189e4:	push	{lr}		; (str lr, [sp, #-4]!)
   189e8:	sub	sp, sp, #20
   189ec:	mov	ip, #0
   189f0:	str	ip, [sp, #12]
   189f4:	ldr	ip, [sp, #28]
   189f8:	str	ip, [sp, #8]
   189fc:	mov	ip, #1
   18a00:	str	ip, [sp, #4]
   18a04:	ldr	ip, [sp, #24]
   18a08:	str	ip, [sp]
   18a0c:	bl	1d700 <argp_error@@Base+0x7a4>
   18a10:	add	sp, sp, #20
   18a14:	pop	{pc}		; (ldr pc, [sp], #4)
   18a18:	push	{r1, r2, r3}
   18a1c:	push	{lr}		; (str lr, [sp, #-4]!)
   18a20:	sub	sp, sp, #8
   18a24:	add	r3, sp, #20
   18a28:	str	r3, [sp, #4]
   18a2c:	ldr	r2, [sp, #16]
   18a30:	ldr	r1, [sp, #12]
   18a34:	bl	113dc <ioctl@plt>
   18a38:	add	sp, sp, #8
   18a3c:	pop	{lr}		; (ldr lr, [sp], #4)
   18a40:	add	sp, sp, #12
   18a44:	bx	lr
   18a48:	str	r4, [sp, #-8]!
   18a4c:	str	lr, [sp, #4]
   18a50:	ldrb	r3, [r0, #40]	; 0x28
   18a54:	tst	r3, #1
   18a58:	beq	18a74 <argp_parse@@Base+0xe4c>
   18a5c:	ldr	r3, [r0, #28]
   18a60:	ldr	r0, [r0, #36]	; 0x24
   18a64:	blx	r3
   18a68:	ldr	r4, [sp]
   18a6c:	add	sp, sp, #4
   18a70:	pop	{pc}		; (ldr pc, [sp], #4)
   18a74:	ldr	r3, [r0, #28]
   18a78:	mov	r0, r1
   18a7c:	blx	r3
   18a80:	b	18a68 <argp_parse@@Base+0xe40>
   18a84:	str	r4, [sp, #-8]!
   18a88:	str	lr, [sp, #4]
   18a8c:	ldrb	r3, [r0, #40]	; 0x28
   18a90:	tst	r3, #1
   18a94:	beq	18ab0 <argp_parse@@Base+0xe88>
   18a98:	ldr	r3, [r0, #32]
   18a9c:	ldr	r0, [r0, #36]	; 0x24
   18aa0:	blx	r3
   18aa4:	ldr	r4, [sp]
   18aa8:	add	sp, sp, #4
   18aac:	pop	{pc}		; (ldr pc, [sp], #4)
   18ab0:	ldr	r3, [r0, #32]
   18ab4:	mov	r0, r1
   18ab8:	blx	r3
   18abc:	b	18aa4 <argp_parse@@Base+0xe7c>
   18ac0:	strd	r4, [sp, #-16]!
   18ac4:	str	r6, [sp, #8]
   18ac8:	str	lr, [sp, #12]
   18acc:	mov	r4, r0
   18ad0:	subs	r5, r2, #0
   18ad4:	moveq	r5, #8
   18ad8:	movw	r3, #4072	; 0xfe8
   18adc:	cmp	r1, #0
   18ae0:	moveq	r1, r3
   18ae4:	str	r1, [r0]
   18ae8:	sub	r6, r5, #1
   18aec:	str	r6, [r0, #24]
   18af0:	bl	18a48 <argp_parse@@Base+0xe20>
   18af4:	str	r0, [r4, #4]
   18af8:	cmp	r0, #0
   18afc:	beq	18b54 <argp_parse@@Base+0xf2c>
   18b00:	add	r3, r0, #8
   18b04:	add	r3, r3, r6
   18b08:	rsb	r5, r5, #0
   18b0c:	and	r5, r5, r3
   18b10:	str	r5, [r4, #8]
   18b14:	str	r5, [r4, #12]
   18b18:	ldr	r3, [r4]
   18b1c:	add	r3, r0, r3
   18b20:	str	r3, [r0]
   18b24:	str	r3, [r4, #16]
   18b28:	mov	r2, #0
   18b2c:	str	r2, [r0, #4]
   18b30:	ldrb	r3, [r4, #40]	; 0x28
   18b34:	and	r3, r3, #253	; 0xfd
   18b38:	bfi	r3, r2, #2, #1
   18b3c:	strb	r3, [r4, #40]	; 0x28
   18b40:	mov	r0, #1
   18b44:	ldrd	r4, [sp]
   18b48:	ldr	r6, [sp, #8]
   18b4c:	add	sp, sp, #12
   18b50:	pop	{pc}		; (ldr pc, [sp], #4)
   18b54:	movw	r3, #11000	; 0x2af8
   18b58:	movt	r3, #3
   18b5c:	ldr	r3, [r3]
   18b60:	blx	r3
   18b64:	str	r4, [sp, #-8]!
   18b68:	str	lr, [sp, #4]
   18b6c:	movw	r3, #11072	; 0x2b40
   18b70:	movt	r3, #3
   18b74:	movw	r2, #4480	; 0x1180
   18b78:	movt	r2, #2
   18b7c:	movw	r1, #4580	; 0x11e4
   18b80:	movt	r1, #2
   18b84:	ldr	r0, [r3]
   18b88:	bl	114b4 <fprintf@plt>
   18b8c:	movw	r3, #11044	; 0x2b24
   18b90:	movt	r3, #3
   18b94:	ldr	r0, [r3]
   18b98:	bl	11484 <exit@plt>

00018b9c <_obstack_begin@@Base>:
   18b9c:	str	r4, [sp, #-8]!
   18ba0:	str	lr, [sp, #4]
   18ba4:	str	r3, [r0, #28]
   18ba8:	ldr	r3, [sp, #8]
   18bac:	str	r3, [r0, #32]
   18bb0:	ldrb	r3, [r0, #40]	; 0x28
   18bb4:	bfc	r3, #0, #1
   18bb8:	strb	r3, [r0, #40]	; 0x28
   18bbc:	bl	18ac0 <argp_parse@@Base+0xe98>
   18bc0:	ldr	r4, [sp]
   18bc4:	add	sp, sp, #4
   18bc8:	pop	{pc}		; (ldr pc, [sp], #4)

00018bcc <_obstack_begin_1@@Base>:
   18bcc:	str	r4, [sp, #-8]!
   18bd0:	str	lr, [sp, #4]
   18bd4:	str	r3, [r0, #28]
   18bd8:	ldr	r3, [sp, #8]
   18bdc:	str	r3, [r0, #32]
   18be0:	ldr	r3, [sp, #12]
   18be4:	str	r3, [r0, #36]	; 0x24
   18be8:	ldrb	r3, [r0, #40]	; 0x28
   18bec:	orr	r3, r3, #1
   18bf0:	strb	r3, [r0, #40]	; 0x28
   18bf4:	bl	18ac0 <argp_parse@@Base+0xe98>
   18bf8:	ldr	r4, [sp]
   18bfc:	add	sp, sp, #4
   18c00:	pop	{pc}		; (ldr pc, [sp], #4)

00018c04 <_obstack_newchunk@@Base>:
   18c04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18c08:	strd	r6, [sp, #8]
   18c0c:	str	r8, [sp, #16]
   18c10:	str	lr, [sp, #20]
   18c14:	ldr	r7, [r0, #4]
   18c18:	ldr	r6, [r0, #12]
   18c1c:	ldr	r3, [r0, #8]
   18c20:	sub	r6, r6, r3
   18c24:	add	r1, r6, r1
   18c28:	ldr	r2, [r0, #24]
   18c2c:	add	r2, r1, r2
   18c30:	add	r5, r2, r6, lsr #3
   18c34:	add	r5, r5, #100	; 0x64
   18c38:	ldr	r3, [r0]
   18c3c:	cmp	r2, r3
   18c40:	movcs	r3, r2
   18c44:	cmp	r3, r5
   18c48:	movcs	r5, r3
   18c4c:	cmp	r6, r1
   18c50:	cmpls	r1, r2
   18c54:	bhi	18cf4 <_obstack_newchunk@@Base+0xf0>
   18c58:	mov	r4, r0
   18c5c:	mov	r1, r5
   18c60:	bl	18a48 <argp_parse@@Base+0xe20>
   18c64:	subs	r8, r0, #0
   18c68:	beq	18cf4 <_obstack_newchunk@@Base+0xf0>
   18c6c:	str	r8, [r4, #4]
   18c70:	str	r7, [r8, #4]
   18c74:	add	r3, r8, r5
   18c78:	str	r3, [r4, #16]
   18c7c:	mov	r5, r8
   18c80:	str	r3, [r5], #8
   18c84:	ldr	r3, [r4, #24]
   18c88:	add	r5, r5, r3
   18c8c:	bic	r5, r5, r3
   18c90:	mov	r2, r6
   18c94:	ldr	r1, [r4, #8]
   18c98:	mov	r0, r5
   18c9c:	bl	11364 <memcpy@plt>
   18ca0:	ldrb	r3, [r4, #40]	; 0x28
   18ca4:	tst	r3, #2
   18ca8:	bne	18cc8 <_obstack_newchunk@@Base+0xc4>
   18cac:	ldr	r2, [r4, #24]
   18cb0:	add	r3, r7, #8
   18cb4:	add	r3, r3, r2
   18cb8:	bic	r3, r3, r2
   18cbc:	ldr	r2, [r4, #8]
   18cc0:	cmp	r2, r3
   18cc4:	beq	18d04 <_obstack_newchunk@@Base+0x100>
   18cc8:	str	r5, [r4, #8]
   18ccc:	add	r5, r5, r6
   18cd0:	str	r5, [r4, #12]
   18cd4:	ldrb	r3, [r4, #40]	; 0x28
   18cd8:	bfc	r3, #1, #1
   18cdc:	strb	r3, [r4, #40]	; 0x28
   18ce0:	ldrd	r4, [sp]
   18ce4:	ldrd	r6, [sp, #8]
   18ce8:	ldr	r8, [sp, #16]
   18cec:	add	sp, sp, #20
   18cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   18cf4:	movw	r3, #11000	; 0x2af8
   18cf8:	movt	r3, #3
   18cfc:	ldr	r3, [r3]
   18d00:	blx	r3
   18d04:	ldr	r3, [r7, #4]
   18d08:	str	r3, [r8, #4]
   18d0c:	mov	r1, r7
   18d10:	mov	r0, r4
   18d14:	bl	18a84 <argp_parse@@Base+0xe5c>
   18d18:	b	18cc8 <_obstack_newchunk@@Base+0xc4>

00018d1c <_obstack_allocated_p@@Base>:
   18d1c:	ldr	r0, [r0, #4]
   18d20:	cmp	r0, #0
   18d24:	bne	18d38 <_obstack_allocated_p@@Base+0x1c>
   18d28:	b	18d4c <_obstack_allocated_p@@Base+0x30>
   18d2c:	ldr	r0, [r0, #4]
   18d30:	cmp	r0, #0
   18d34:	beq	18d4c <_obstack_allocated_p@@Base+0x30>
   18d38:	cmp	r1, r0
   18d3c:	bls	18d2c <_obstack_allocated_p@@Base+0x10>
   18d40:	ldr	r3, [r0]
   18d44:	cmp	r3, r1
   18d48:	bcc	18d2c <_obstack_allocated_p@@Base+0x10>
   18d4c:	adds	r0, r0, #0
   18d50:	movne	r0, #1
   18d54:	bx	lr

00018d58 <_obstack_free@@Base>:
   18d58:	strd	r4, [sp, #-16]!
   18d5c:	str	r6, [sp, #8]
   18d60:	str	lr, [sp, #12]
   18d64:	mov	r4, r0
   18d68:	mov	r6, r1
   18d6c:	ldr	r1, [r0, #4]
   18d70:	cmp	r1, #0
   18d74:	bne	18da8 <_obstack_free@@Base+0x50>
   18d78:	cmp	r6, #0
   18d7c:	beq	18dd0 <_obstack_free@@Base+0x78>
   18d80:	bl	11604 <abort@plt>
   18d84:	ldr	r5, [r1, #4]
   18d88:	mov	r0, r4
   18d8c:	bl	18a84 <argp_parse@@Base+0xe5c>
   18d90:	ldrb	r3, [r4, #40]	; 0x28
   18d94:	orr	r3, r3, #2
   18d98:	strb	r3, [r4, #40]	; 0x28
   18d9c:	mov	r1, r5
   18da0:	cmp	r5, #0
   18da4:	beq	18d78 <_obstack_free@@Base+0x20>
   18da8:	cmp	r6, r1
   18dac:	bls	18d84 <_obstack_free@@Base+0x2c>
   18db0:	ldr	r3, [r1]
   18db4:	cmp	r3, r6
   18db8:	bcc	18d84 <_obstack_free@@Base+0x2c>
   18dbc:	str	r6, [r4, #12]
   18dc0:	str	r6, [r4, #8]
   18dc4:	ldr	r3, [r1]
   18dc8:	str	r3, [r4, #16]
   18dcc:	str	r1, [r4, #4]
   18dd0:	ldrd	r4, [sp]
   18dd4:	ldr	r6, [sp, #8]
   18dd8:	add	sp, sp, #12
   18ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00018de0 <_obstack_memory_used@@Base>:
   18de0:	ldr	r3, [r0, #4]
   18de4:	cmp	r3, #0
   18de8:	beq	18e0c <_obstack_memory_used@@Base+0x2c>
   18dec:	mov	r0, #0
   18df0:	ldr	r2, [r3]
   18df4:	sub	r2, r2, r3
   18df8:	add	r0, r0, r2
   18dfc:	ldr	r3, [r3, #4]
   18e00:	cmp	r3, #0
   18e04:	bne	18df0 <_obstack_memory_used@@Base+0x10>
   18e08:	bx	lr
   18e0c:	mov	r0, #0
   18e10:	bx	lr
   18e14:	strd	r4, [sp, #-16]!
   18e18:	str	r6, [sp, #8]
   18e1c:	str	lr, [sp, #12]
   18e20:	subs	r4, r0, #0
   18e24:	beq	18ec0 <_obstack_memory_used@@Base+0xe0>
   18e28:	mov	r1, #47	; 0x2f
   18e2c:	mov	r0, r4
   18e30:	bl	11550 <strrchr@plt>
   18e34:	subs	r5, r0, #0
   18e38:	beq	18e98 <_obstack_memory_used@@Base+0xb8>
   18e3c:	add	r6, r5, #1
   18e40:	sub	r3, r6, r4
   18e44:	cmp	r3, #6
   18e48:	ble	18e98 <_obstack_memory_used@@Base+0xb8>
   18e4c:	mov	r2, #7
   18e50:	movw	r1, #4556	; 0x11cc
   18e54:	movt	r1, #2
   18e58:	sub	r0, r5, #6
   18e5c:	bl	115f8 <strncmp@plt>
   18e60:	cmp	r0, #0
   18e64:	bne	18e98 <_obstack_memory_used@@Base+0xb8>
   18e68:	mov	r2, #3
   18e6c:	movw	r1, #4564	; 0x11d4
   18e70:	movt	r1, #2
   18e74:	mov	r0, r6
   18e78:	bl	115f8 <strncmp@plt>
   18e7c:	cmp	r0, #0
   18e80:	movne	r4, r6
   18e84:	bne	18e98 <_obstack_memory_used@@Base+0xb8>
   18e88:	add	r4, r5, #4
   18e8c:	movw	r3, #11064	; 0x2b38
   18e90:	movt	r3, #3
   18e94:	str	r4, [r3]
   18e98:	movw	r3, #11196	; 0x2bbc
   18e9c:	movt	r3, #3
   18ea0:	str	r4, [r3]
   18ea4:	movw	r3, #11068	; 0x2b3c
   18ea8:	movt	r3, #3
   18eac:	str	r4, [r3]
   18eb0:	ldrd	r4, [sp]
   18eb4:	ldr	r6, [sp, #8]
   18eb8:	add	sp, sp, #12
   18ebc:	pop	{pc}		; (ldr pc, [sp], #4)
   18ec0:	movw	r3, #11072	; 0x2b40
   18ec4:	movt	r3, #3
   18ec8:	ldr	r3, [r3]
   18ecc:	mov	r2, #55	; 0x37
   18ed0:	mov	r1, #1
   18ed4:	movw	r0, #4500	; 0x1194
   18ed8:	movt	r0, #2
   18edc:	bl	113d0 <fwrite@plt>
   18ee0:	bl	11604 <abort@plt>
   18ee4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18ee8:	strd	r6, [sp, #8]
   18eec:	strd	r8, [sp, #16]
   18ef0:	strd	sl, [sp, #24]
   18ef4:	str	lr, [sp, #32]
   18ef8:	sub	sp, sp, #124	; 0x7c
   18efc:	str	r0, [sp, #4]
   18f00:	str	r1, [sp, #8]
   18f04:	str	r2, [sp, #12]
   18f08:	bl	11508 <fileno@plt>
   18f0c:	add	r2, sp, #16
   18f10:	mov	r1, r0
   18f14:	mov	r0, #3
   18f18:	bl	113c4 <__fxstat64@plt>
   18f1c:	cmp	r0, #0
   18f20:	blt	18fb8 <_obstack_memory_used@@Base+0x1d8>
   18f24:	ldr	r3, [sp, #32]
   18f28:	and	r3, r3, #61440	; 0xf000
   18f2c:	cmp	r3, #32768	; 0x8000
   18f30:	movne	r4, #8192	; 0x2000
   18f34:	beq	18f60 <_obstack_memory_used@@Base+0x180>
   18f38:	mov	r0, r4
   18f3c:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   18f40:	subs	r7, r0, #0
   18f44:	beq	19158 <_obstack_memory_used@@Base+0x378>
   18f48:	mov	r6, #0
   18f4c:	mov	fp, #1
   18f50:	mvn	r9, #-2147483648	; 0x80000000
   18f54:	ldr	r3, [sp, #8]
   18f58:	and	sl, r3, #2
   18f5c:	b	190a0 <_obstack_memory_used@@Base+0x2c0>
   18f60:	ldr	r0, [sp, #4]
   18f64:	bl	11628 <ftello64@plt>
   18f68:	cmp	r0, #0
   18f6c:	sbcs	r3, r1, #0
   18f70:	blt	18fc0 <_obstack_memory_used@@Base+0x1e0>
   18f74:	ldrd	r2, [sp, #64]	; 0x40
   18f78:	cmp	r0, r2
   18f7c:	sbcs	ip, r1, r3
   18f80:	bge	18fc8 <_obstack_memory_used@@Base+0x1e8>
   18f84:	subs	r4, r2, r0
   18f88:	sbc	r5, r3, r1
   18f8c:	mvn	r2, #-2147483647	; 0x80000001
   18f90:	mov	r3, #0
   18f94:	cmp	r2, r4
   18f98:	sbcs	r3, r3, r5
   18f9c:	addge	r4, r4, #1
   18fa0:	bge	18f38 <_obstack_memory_used@@Base+0x158>
   18fa4:	bl	114c0 <__errno_location@plt>
   18fa8:	mov	r3, #12
   18fac:	str	r3, [r0]
   18fb0:	mov	r7, #0
   18fb4:	b	19158 <_obstack_memory_used@@Base+0x378>
   18fb8:	mov	r4, #8192	; 0x2000
   18fbc:	b	18f38 <_obstack_memory_used@@Base+0x158>
   18fc0:	mov	r4, #8192	; 0x2000
   18fc4:	b	18f38 <_obstack_memory_used@@Base+0x158>
   18fc8:	mov	r4, #8192	; 0x2000
   18fcc:	b	18f38 <_obstack_memory_used@@Base+0x158>
   18fd0:	bl	114c0 <__errno_location@plt>
   18fd4:	ldr	r8, [r0]
   18fd8:	ldr	r0, [sp, #4]
   18fdc:	bl	1134c <ferror@plt>
   18fe0:	cmp	r0, #0
   18fe4:	bne	19138 <_obstack_memory_used@@Base+0x358>
   18fe8:	sub	r3, r4, #1
   18fec:	cmp	r3, r6
   18ff0:	bls	19060 <_obstack_memory_used@@Base+0x280>
   18ff4:	ldr	r3, [sp, #8]
   18ff8:	tst	r3, #2
   18ffc:	beq	1904c <_obstack_memory_used@@Base+0x26c>
   19000:	add	r0, r6, #1
   19004:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   19008:	subs	r5, r0, #0
   1900c:	beq	1903c <_obstack_memory_used@@Base+0x25c>
   19010:	mov	r2, r6
   19014:	mov	r1, r7
   19018:	mov	r0, r5
   1901c:	bl	11364 <memcpy@plt>
   19020:	mov	r1, r4
   19024:	mov	r0, r7
   19028:	bl	115bc <explicit_bzero@plt>
   1902c:	mov	r0, r7
   19030:	bl	18900 <argp_parse@@Base+0xcd8>
   19034:	mov	r7, r5
   19038:	b	19060 <_obstack_memory_used@@Base+0x280>
   1903c:	sub	r1, r4, r6
   19040:	add	r0, r7, r6
   19044:	bl	115bc <explicit_bzero@plt>
   19048:	b	19060 <_obstack_memory_used@@Base+0x280>
   1904c:	add	r1, r6, #1
   19050:	mov	r0, r7
   19054:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   19058:	cmp	r0, #0
   1905c:	movne	r7, r0
   19060:	mov	r3, #0
   19064:	strb	r3, [r7, r6]
   19068:	ldr	r3, [sp, #12]
   1906c:	str	r6, [r3]
   19070:	b	19158 <_obstack_memory_used@@Base+0x378>
   19074:	mov	r2, r4
   19078:	mov	r1, r7
   1907c:	mov	r0, r8
   19080:	bl	11364 <memcpy@plt>
   19084:	mov	r1, r4
   19088:	mov	r0, r7
   1908c:	bl	115bc <explicit_bzero@plt>
   19090:	mov	r0, r7
   19094:	bl	18900 <argp_parse@@Base+0xcd8>
   19098:	mov	r4, r5
   1909c:	mov	r7, r8
   190a0:	sub	r5, r4, r6
   190a4:	ldr	r3, [sp, #4]
   190a8:	mov	r2, r5
   190ac:	mov	r1, fp
   190b0:	add	r0, r7, r6
   190b4:	bl	113f4 <fread@plt>
   190b8:	add	r6, r6, r0
   190bc:	cmp	r5, r0
   190c0:	bne	18fd0 <_obstack_memory_used@@Base+0x1f0>
   190c4:	cmn	r4, #-2147483647	; 0x80000001
   190c8:	beq	19134 <_obstack_memory_used@@Base+0x354>
   190cc:	lsr	r5, r4, #1
   190d0:	sub	r3, r9, r5
   190d4:	cmp	r3, r4
   190d8:	addhi	r5, r5, r4
   190dc:	movls	r5, r9
   190e0:	cmp	sl, #0
   190e4:	beq	19114 <_obstack_memory_used@@Base+0x334>
   190e8:	mov	r0, r5
   190ec:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   190f0:	subs	r8, r0, #0
   190f4:	bne	19074 <_obstack_memory_used@@Base+0x294>
   190f8:	bl	114c0 <__errno_location@plt>
   190fc:	ldr	r8, [r0]
   19100:	mov	r4, r5
   19104:	mov	r1, r4
   19108:	mov	r0, r7
   1910c:	bl	115bc <explicit_bzero@plt>
   19110:	b	19144 <_obstack_memory_used@@Base+0x364>
   19114:	mov	r1, r5
   19118:	mov	r0, r7
   1911c:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   19120:	subs	r8, r0, #0
   19124:	bne	19098 <_obstack_memory_used@@Base+0x2b8>
   19128:	bl	114c0 <__errno_location@plt>
   1912c:	ldr	r8, [r0]
   19130:	b	19144 <_obstack_memory_used@@Base+0x364>
   19134:	mov	r8, #12
   19138:	ldr	r3, [sp, #8]
   1913c:	tst	r3, #2
   19140:	bne	19104 <_obstack_memory_used@@Base+0x324>
   19144:	mov	r0, r7
   19148:	bl	18900 <argp_parse@@Base+0xcd8>
   1914c:	bl	114c0 <__errno_location@plt>
   19150:	str	r8, [r0]
   19154:	mov	r7, #0
   19158:	mov	r0, r7
   1915c:	add	sp, sp, #124	; 0x7c
   19160:	ldrd	r4, [sp]
   19164:	ldrd	r6, [sp, #8]
   19168:	ldrd	r8, [sp, #16]
   1916c:	ldrd	sl, [sp, #24]
   19170:	add	sp, sp, #32
   19174:	pop	{pc}		; (ldr pc, [sp], #4)
   19178:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1917c:	strd	r6, [sp, #8]
   19180:	str	r8, [sp, #16]
   19184:	str	lr, [sp, #20]
   19188:	mov	r4, r1
   1918c:	mov	r6, r2
   19190:	and	r1, r1, #1
   19194:	movw	r2, #4568	; 0x11d8
   19198:	movt	r2, #2
   1919c:	movw	r3, #3420	; 0xd5c
   191a0:	movt	r3, #2
   191a4:	cmp	r1, #0
   191a8:	movne	r1, r2
   191ac:	moveq	r1, r3
   191b0:	bl	115a4 <fopen64@plt>
   191b4:	subs	r5, r0, #0
   191b8:	beq	19248 <_obstack_memory_used@@Base+0x468>
   191bc:	ands	r7, r4, #2
   191c0:	bne	19200 <_obstack_memory_used@@Base+0x420>
   191c4:	mov	r2, r6
   191c8:	mov	r1, r4
   191cc:	mov	r0, r5
   191d0:	bl	18ee4 <_obstack_memory_used@@Base+0x104>
   191d4:	mov	r4, r0
   191d8:	mov	r0, r5
   191dc:	bl	11520 <fclose@plt>
   191e0:	cmp	r0, #0
   191e4:	bne	19218 <_obstack_memory_used@@Base+0x438>
   191e8:	mov	r0, r4
   191ec:	ldrd	r4, [sp]
   191f0:	ldrd	r6, [sp, #8]
   191f4:	ldr	r8, [sp, #16]
   191f8:	add	sp, sp, #20
   191fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19200:	mov	r3, #0
   19204:	mov	r2, #2
   19208:	mov	r1, r3
   1920c:	mov	r0, r5
   19210:	bl	114e4 <setvbuf@plt>
   19214:	b	191c4 <_obstack_memory_used@@Base+0x3e4>
   19218:	cmp	r4, #0
   1921c:	beq	191e8 <_obstack_memory_used@@Base+0x408>
   19220:	cmp	r7, #0
   19224:	bne	19238 <_obstack_memory_used@@Base+0x458>
   19228:	mov	r0, r4
   1922c:	bl	18900 <argp_parse@@Base+0xcd8>
   19230:	mov	r4, #0
   19234:	b	191e8 <_obstack_memory_used@@Base+0x408>
   19238:	ldr	r1, [r6]
   1923c:	mov	r0, r4
   19240:	bl	115bc <explicit_bzero@plt>
   19244:	b	19228 <_obstack_memory_used@@Base+0x448>
   19248:	mov	r4, r5
   1924c:	b	191e8 <_obstack_memory_used@@Base+0x408>
   19250:	strd	r4, [sp, #-16]!
   19254:	str	r6, [sp, #8]
   19258:	str	lr, [sp, #12]
   1925c:	sub	sp, sp, #32
   19260:	mov	r4, r0
   19264:	ldr	r5, [sp, #48]	; 0x30
   19268:	ldr	r6, [sp, #52]	; 0x34
   1926c:	cmp	r1, #0
   19270:	beq	1930c <_obstack_memory_used@@Base+0x52c>
   19274:	str	r3, [sp]
   19278:	mov	r3, r2
   1927c:	mov	r2, r1
   19280:	movw	r1, #4572	; 0x11dc
   19284:	movt	r1, #2
   19288:	bl	114b4 <fprintf@plt>
   1928c:	movw	r3, #2022	; 0x7e6
   19290:	movw	r2, #4592	; 0x11f0
   19294:	movt	r2, #2
   19298:	movw	r1, #5360	; 0x14f0
   1929c:	movt	r1, #2
   192a0:	mov	r0, r4
   192a4:	bl	114b4 <fprintf@plt>
   192a8:	mov	r1, r4
   192ac:	mov	r0, #10
   192b0:	bl	11568 <fputc@plt>
   192b4:	movw	r2, #4596	; 0x11f4
   192b8:	movt	r2, #2
   192bc:	movw	r1, #4632	; 0x1218
   192c0:	movt	r1, #2
   192c4:	mov	r0, r4
   192c8:	bl	114b4 <fprintf@plt>
   192cc:	mov	r1, r4
   192d0:	mov	r0, #10
   192d4:	bl	11568 <fputc@plt>
   192d8:	cmp	r6, #9
   192dc:	ldrls	pc, [pc, r6, lsl #2]
   192e0:	b	19504 <_obstack_memory_used@@Base+0x724>
   192e4:	andeq	r9, r1, r0, lsr r3
   192e8:	andeq	r9, r1, ip, lsl r3
   192ec:	andeq	r9, r1, r4, asr #6
   192f0:	andeq	r9, r1, r0, ror #6
   192f4:	andeq	r9, r1, r4, lsl #7
   192f8:			; <UNDEFINED> instruction: 0x000193b0
   192fc:	andeq	r9, r1, r4, ror #7
   19300:	andeq	r9, r1, r0, lsr #8
   19304:	andeq	r9, r1, r4, ror #8
   19308:			; <UNDEFINED> instruction: 0x000194b0
   1930c:	movw	r1, #4584	; 0x11e8
   19310:	movt	r1, #2
   19314:	bl	114b4 <fprintf@plt>
   19318:	b	1928c <_obstack_memory_used@@Base+0x4ac>
   1931c:	ldr	r2, [r5]
   19320:	movw	r1, #4804	; 0x12c4
   19324:	movt	r1, #2
   19328:	mov	r0, r4
   1932c:	bl	114b4 <fprintf@plt>
   19330:	add	sp, sp, #32
   19334:	ldrd	r4, [sp]
   19338:	ldr	r6, [sp, #8]
   1933c:	add	sp, sp, #12
   19340:	pop	{pc}		; (ldr pc, [sp], #4)
   19344:	ldr	r3, [r5, #4]
   19348:	ldr	r2, [r5]
   1934c:	movw	r1, #4820	; 0x12d4
   19350:	movt	r1, #2
   19354:	mov	r0, r4
   19358:	bl	114b4 <fprintf@plt>
   1935c:	b	19330 <_obstack_memory_used@@Base+0x550>
   19360:	ldr	r3, [r5, #8]
   19364:	str	r3, [sp]
   19368:	ldr	r3, [r5, #4]
   1936c:	ldr	r2, [r5]
   19370:	movw	r1, #4844	; 0x12ec
   19374:	movt	r1, #2
   19378:	mov	r0, r4
   1937c:	bl	114b4 <fprintf@plt>
   19380:	b	19330 <_obstack_memory_used@@Base+0x550>
   19384:	ldr	r3, [r5, #12]
   19388:	str	r3, [sp, #4]
   1938c:	ldr	r3, [r5, #8]
   19390:	str	r3, [sp]
   19394:	ldr	r3, [r5, #4]
   19398:	ldr	r2, [r5]
   1939c:	movw	r1, #4872	; 0x1308
   193a0:	movt	r1, #2
   193a4:	mov	r0, r4
   193a8:	bl	114b4 <fprintf@plt>
   193ac:	b	19330 <_obstack_memory_used@@Base+0x550>
   193b0:	ldr	r3, [r5, #16]
   193b4:	str	r3, [sp, #8]
   193b8:	ldr	r3, [r5, #12]
   193bc:	str	r3, [sp, #4]
   193c0:	ldr	r3, [r5, #8]
   193c4:	str	r3, [sp]
   193c8:	ldr	r3, [r5, #4]
   193cc:	ldr	r2, [r5]
   193d0:	movw	r1, #4904	; 0x1328
   193d4:	movt	r1, #2
   193d8:	mov	r0, r4
   193dc:	bl	114b4 <fprintf@plt>
   193e0:	b	19330 <_obstack_memory_used@@Base+0x550>
   193e4:	ldr	r3, [r5, #20]
   193e8:	str	r3, [sp, #12]
   193ec:	ldr	r3, [r5, #16]
   193f0:	str	r3, [sp, #8]
   193f4:	ldr	r3, [r5, #12]
   193f8:	str	r3, [sp, #4]
   193fc:	ldr	r3, [r5, #8]
   19400:	str	r3, [sp]
   19404:	ldr	r3, [r5, #4]
   19408:	ldr	r2, [r5]
   1940c:	movw	r1, #4940	; 0x134c
   19410:	movt	r1, #2
   19414:	mov	r0, r4
   19418:	bl	114b4 <fprintf@plt>
   1941c:	b	19330 <_obstack_memory_used@@Base+0x550>
   19420:	ldr	r3, [r5, #24]
   19424:	str	r3, [sp, #16]
   19428:	ldr	r3, [r5, #20]
   1942c:	str	r3, [sp, #12]
   19430:	ldr	r3, [r5, #16]
   19434:	str	r3, [sp, #8]
   19438:	ldr	r3, [r5, #12]
   1943c:	str	r3, [sp, #4]
   19440:	ldr	r3, [r5, #8]
   19444:	str	r3, [sp]
   19448:	ldr	r3, [r5, #4]
   1944c:	ldr	r2, [r5]
   19450:	movw	r1, #4980	; 0x1374
   19454:	movt	r1, #2
   19458:	mov	r0, r4
   1945c:	bl	114b4 <fprintf@plt>
   19460:	b	19330 <_obstack_memory_used@@Base+0x550>
   19464:	ldr	r3, [r5, #28]
   19468:	str	r3, [sp, #20]
   1946c:	ldr	r3, [r5, #24]
   19470:	str	r3, [sp, #16]
   19474:	ldr	r3, [r5, #20]
   19478:	str	r3, [sp, #12]
   1947c:	ldr	r3, [r5, #16]
   19480:	str	r3, [sp, #8]
   19484:	ldr	r3, [r5, #12]
   19488:	str	r3, [sp, #4]
   1948c:	ldr	r3, [r5, #8]
   19490:	str	r3, [sp]
   19494:	ldr	r3, [r5, #4]
   19498:	ldr	r2, [r5]
   1949c:	movw	r1, #5024	; 0x13a0
   194a0:	movt	r1, #2
   194a4:	mov	r0, r4
   194a8:	bl	114b4 <fprintf@plt>
   194ac:	b	19330 <_obstack_memory_used@@Base+0x550>
   194b0:	ldr	r3, [r5, #32]
   194b4:	str	r3, [sp, #24]
   194b8:	ldr	r3, [r5, #28]
   194bc:	str	r3, [sp, #20]
   194c0:	ldr	r3, [r5, #24]
   194c4:	str	r3, [sp, #16]
   194c8:	ldr	r3, [r5, #20]
   194cc:	str	r3, [sp, #12]
   194d0:	ldr	r3, [r5, #16]
   194d4:	str	r3, [sp, #8]
   194d8:	ldr	r3, [r5, #12]
   194dc:	str	r3, [sp, #4]
   194e0:	ldr	r3, [r5, #8]
   194e4:	str	r3, [sp]
   194e8:	ldr	r3, [r5, #4]
   194ec:	ldr	r2, [r5]
   194f0:	movw	r1, #5072	; 0x13d0
   194f4:	movt	r1, #2
   194f8:	mov	r0, r4
   194fc:	bl	114b4 <fprintf@plt>
   19500:	b	19330 <_obstack_memory_used@@Base+0x550>
   19504:	ldr	r3, [r5, #32]
   19508:	str	r3, [sp, #24]
   1950c:	ldr	r3, [r5, #28]
   19510:	str	r3, [sp, #20]
   19514:	ldr	r3, [r5, #24]
   19518:	str	r3, [sp, #16]
   1951c:	ldr	r3, [r5, #20]
   19520:	str	r3, [sp, #12]
   19524:	ldr	r3, [r5, #16]
   19528:	str	r3, [sp, #8]
   1952c:	ldr	r3, [r5, #12]
   19530:	str	r3, [sp, #4]
   19534:	ldr	r3, [r5, #8]
   19538:	str	r3, [sp]
   1953c:	ldr	r3, [r5, #4]
   19540:	ldr	r2, [r5]
   19544:	movw	r1, #5124	; 0x1404
   19548:	movt	r1, #2
   1954c:	mov	r0, r4
   19550:	bl	114b4 <fprintf@plt>
   19554:	b	19330 <_obstack_memory_used@@Base+0x550>
   19558:	strd	r4, [sp, #-12]!
   1955c:	str	lr, [sp, #8]
   19560:	sub	sp, sp, #12
   19564:	ldr	r5, [sp, #24]
   19568:	ldr	ip, [r5]
   1956c:	cmp	ip, #0
   19570:	beq	195a8 <_obstack_memory_used@@Base+0x7c8>
   19574:	mov	lr, r5
   19578:	mov	ip, #0
   1957c:	add	ip, ip, #1
   19580:	ldr	r4, [lr, #4]!
   19584:	cmp	r4, #0
   19588:	bne	1957c <_obstack_memory_used@@Base+0x79c>
   1958c:	str	ip, [sp, #4]
   19590:	str	r5, [sp]
   19594:	bl	19250 <_obstack_memory_used@@Base+0x470>
   19598:	add	sp, sp, #12
   1959c:	ldrd	r4, [sp]
   195a0:	add	sp, sp, #8
   195a4:	pop	{pc}		; (ldr pc, [sp], #4)
   195a8:	mov	ip, #0
   195ac:	b	1958c <_obstack_memory_used@@Base+0x7ac>
   195b0:	strd	r4, [sp, #-12]!
   195b4:	str	lr, [sp, #8]
   195b8:	sub	sp, sp, #52	; 0x34
   195bc:	ldr	r5, [sp, #64]	; 0x40
   195c0:	add	r4, sp, #8
   195c4:	mov	ip, #0
   195c8:	ldr	lr, [r5], #4
   195cc:	str	lr, [r4], #4
   195d0:	cmp	lr, #0
   195d4:	beq	195e4 <_obstack_memory_used@@Base+0x804>
   195d8:	add	ip, ip, #1
   195dc:	cmp	ip, #10
   195e0:	bne	195c8 <_obstack_memory_used@@Base+0x7e8>
   195e4:	str	ip, [sp, #4]
   195e8:	add	ip, sp, #8
   195ec:	str	ip, [sp]
   195f0:	bl	19250 <_obstack_memory_used@@Base+0x470>
   195f4:	add	sp, sp, #52	; 0x34
   195f8:	ldrd	r4, [sp]
   195fc:	add	sp, sp, #8
   19600:	pop	{pc}		; (ldr pc, [sp], #4)
   19604:	push	{r3}		; (str r3, [sp, #-4]!)
   19608:	push	{lr}		; (str lr, [sp, #-4]!)
   1960c:	sub	sp, sp, #16
   19610:	add	r3, sp, #24
   19614:	str	r3, [sp, #12]
   19618:	str	r3, [sp]
   1961c:	ldr	r3, [sp, #20]
   19620:	bl	195b0 <_obstack_memory_used@@Base+0x7d0>
   19624:	add	sp, sp, #16
   19628:	pop	{lr}		; (ldr lr, [sp], #4)
   1962c:	add	sp, sp, #4
   19630:	bx	lr
   19634:	str	r4, [sp, #-8]!
   19638:	str	lr, [sp, #4]
   1963c:	movw	r3, #11076	; 0x2b44
   19640:	movt	r3, #3
   19644:	ldr	r1, [r3]
   19648:	mov	r0, #10
   1964c:	bl	11568 <fputc@plt>
   19650:	movw	r1, #5184	; 0x1440
   19654:	movt	r1, #2
   19658:	movw	r0, #5208	; 0x1458
   1965c:	movt	r0, #2
   19660:	bl	11310 <printf@plt>
   19664:	movw	r2, #5228	; 0x146c
   19668:	movt	r2, #2
   1966c:	movw	r1, #4464	; 0x1170
   19670:	movt	r1, #2
   19674:	movw	r0, #5268	; 0x1494
   19678:	movt	r0, #2
   1967c:	bl	11310 <printf@plt>
   19680:	movw	r1, #5288	; 0x14a8
   19684:	movt	r1, #2
   19688:	movw	r0, #5320	; 0x14c8
   1968c:	movt	r0, #2
   19690:	bl	11310 <printf@plt>
   19694:	ldr	r4, [sp]
   19698:	add	sp, sp, #4
   1969c:	pop	{pc}		; (ldr pc, [sp], #4)
   196a0:	str	r4, [sp, #-8]!
   196a4:	str	lr, [sp, #4]
   196a8:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   196ac:	cmp	r0, #0
   196b0:	beq	196c0 <_obstack_memory_used@@Base+0x8e0>
   196b4:	ldr	r4, [sp]
   196b8:	add	sp, sp, #4
   196bc:	pop	{pc}		; (ldr pc, [sp], #4)
   196c0:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   196c4:	str	r4, [sp, #-8]!
   196c8:	str	lr, [sp, #4]
   196cc:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   196d0:	cmp	r0, #0
   196d4:	beq	196e4 <_obstack_memory_used@@Base+0x904>
   196d8:	ldr	r4, [sp]
   196dc:	add	sp, sp, #4
   196e0:	pop	{pc}		; (ldr pc, [sp], #4)
   196e4:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   196e8:	str	r4, [sp, #-8]!
   196ec:	str	lr, [sp, #4]
   196f0:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   196f4:	ldr	r4, [sp]
   196f8:	add	sp, sp, #4
   196fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19700:	strd	r4, [sp, #-16]!
   19704:	str	r6, [sp, #8]
   19708:	str	lr, [sp, #12]
   1970c:	mov	r5, r0
   19710:	mov	r4, r1
   19714:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   19718:	cmp	r0, #0
   1971c:	beq	19730 <_obstack_memory_used@@Base+0x950>
   19720:	ldrd	r4, [sp]
   19724:	ldr	r6, [sp, #8]
   19728:	add	sp, sp, #12
   1972c:	pop	{pc}		; (ldr pc, [sp], #4)
   19730:	adds	r4, r4, #0
   19734:	movne	r4, #1
   19738:	cmp	r5, #0
   1973c:	moveq	r4, #1
   19740:	cmp	r4, #0
   19744:	beq	19720 <_obstack_memory_used@@Base+0x940>
   19748:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   1974c:	str	r4, [sp, #-8]!
   19750:	str	lr, [sp, #4]
   19754:	cmp	r1, #0
   19758:	orreq	r1, r1, #1
   1975c:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   19760:	cmp	r0, #0
   19764:	beq	19774 <_obstack_memory_used@@Base+0x994>
   19768:	ldr	r4, [sp]
   1976c:	add	sp, sp, #4
   19770:	pop	{pc}		; (ldr pc, [sp], #4)
   19774:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   19778:	strd	r4, [sp, #-16]!
   1977c:	str	r6, [sp, #8]
   19780:	str	lr, [sp, #12]
   19784:	mov	r4, r0
   19788:	mov	r6, r1
   1978c:	mov	r5, r2
   19790:	bl	1dd60 <argp_error@@Base+0xe04>
   19794:	cmp	r0, #0
   19798:	beq	197ac <_obstack_memory_used@@Base+0x9cc>
   1979c:	ldrd	r4, [sp]
   197a0:	ldr	r6, [sp, #8]
   197a4:	add	sp, sp, #12
   197a8:	pop	{pc}		; (ldr pc, [sp], #4)
   197ac:	cmp	r4, #0
   197b0:	beq	197c0 <_obstack_memory_used@@Base+0x9e0>
   197b4:	cmp	r6, #0
   197b8:	cmpne	r5, #0
   197bc:	beq	1979c <_obstack_memory_used@@Base+0x9bc>
   197c0:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   197c4:	str	r4, [sp, #-8]!
   197c8:	str	lr, [sp, #4]
   197cc:	bl	19778 <_obstack_memory_used@@Base+0x998>
   197d0:	ldr	r4, [sp]
   197d4:	add	sp, sp, #4
   197d8:	pop	{pc}		; (ldr pc, [sp], #4)
   197dc:	str	r4, [sp, #-8]!
   197e0:	str	lr, [sp, #4]
   197e4:	mov	ip, r1
   197e8:	mov	r3, r2
   197ec:	cmp	r2, #0
   197f0:	cmpne	r1, #0
   197f4:	moveq	r3, #1
   197f8:	moveq	ip, r3
   197fc:	mov	r2, r3
   19800:	mov	r1, ip
   19804:	bl	1dd60 <argp_error@@Base+0xe04>
   19808:	cmp	r0, #0
   1980c:	beq	1981c <_obstack_memory_used@@Base+0xa3c>
   19810:	ldr	r4, [sp]
   19814:	add	sp, sp, #4
   19818:	pop	{pc}		; (ldr pc, [sp], #4)
   1981c:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   19820:	str	r4, [sp, #-8]!
   19824:	str	lr, [sp, #4]
   19828:	mov	r2, r1
   1982c:	mov	r1, r0
   19830:	mov	r0, #0
   19834:	bl	19778 <_obstack_memory_used@@Base+0x998>
   19838:	ldr	r4, [sp]
   1983c:	add	sp, sp, #4
   19840:	pop	{pc}		; (ldr pc, [sp], #4)
   19844:	str	r4, [sp, #-8]!
   19848:	str	lr, [sp, #4]
   1984c:	mov	r2, r1
   19850:	mov	r1, r0
   19854:	mov	r0, #0
   19858:	bl	197dc <_obstack_memory_used@@Base+0x9fc>
   1985c:	ldr	r4, [sp]
   19860:	add	sp, sp, #4
   19864:	pop	{pc}		; (ldr pc, [sp], #4)
   19868:	strd	r4, [sp, #-16]!
   1986c:	str	r6, [sp, #8]
   19870:	str	lr, [sp, #12]
   19874:	mov	r5, r1
   19878:	ldr	r4, [r1]
   1987c:	cmp	r0, #0
   19880:	beq	198b0 <_obstack_memory_used@@Base+0xad0>
   19884:	lsr	r3, r4, #1
   19888:	add	r3, r3, #1
   1988c:	adds	r4, r4, r3
   19890:	bcs	198cc <_obstack_memory_used@@Base+0xaec>
   19894:	mov	r1, r4
   19898:	bl	19778 <_obstack_memory_used@@Base+0x998>
   1989c:	str	r4, [r5]
   198a0:	ldrd	r4, [sp]
   198a4:	ldr	r6, [sp, #8]
   198a8:	add	sp, sp, #12
   198ac:	pop	{pc}		; (ldr pc, [sp], #4)
   198b0:	cmp	r4, #0
   198b4:	bne	19894 <_obstack_memory_used@@Base+0xab4>
   198b8:	mov	r4, #64	; 0x40
   198bc:	udiv	r4, r4, r2
   198c0:	cmp	r2, #64	; 0x40
   198c4:	addhi	r4, r4, #1
   198c8:	b	19894 <_obstack_memory_used@@Base+0xab4>
   198cc:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   198d0:	str	r4, [sp, #-8]!
   198d4:	str	lr, [sp, #4]
   198d8:	mov	r2, #1
   198dc:	bl	19868 <_obstack_memory_used@@Base+0xa88>
   198e0:	ldr	r4, [sp]
   198e4:	add	sp, sp, #4
   198e8:	pop	{pc}		; (ldr pc, [sp], #4)
   198ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   198f0:	strd	r6, [sp, #8]
   198f4:	str	r8, [sp, #16]
   198f8:	str	lr, [sp, #20]
   198fc:	mov	r5, r1
   19900:	ldr	lr, [sp, #24]
   19904:	ldr	ip, [r1]
   19908:	asr	r4, ip, #1
   1990c:	adds	r4, ip, r4
   19910:	movvs	r1, #1
   19914:	movvc	r1, #0
   19918:	cmp	r1, #0
   1991c:	mvnne	r4, #-2147483648	; 0x80000000
   19920:	mvn	r8, r3
   19924:	lsr	r8, r8, #31
   19928:	cmp	r3, r4
   1992c:	movge	r1, #0
   19930:	andlt	r1, r8, #1
   19934:	cmp	r1, #0
   19938:	movne	r4, r3
   1993c:	smull	r6, r7, r4, lr
   19940:	asr	r1, r6, #31
   19944:	cmp	r1, r7
   19948:	bne	19960 <_obstack_memory_used@@Base+0xb80>
   1994c:	mov	r1, r6
   19950:	cmp	r6, #63	; 0x3f
   19954:	movle	r1, #64	; 0x40
   19958:	ble	19964 <_obstack_memory_used@@Base+0xb84>
   1995c:	b	19970 <_obstack_memory_used@@Base+0xb90>
   19960:	mvn	r1, #-2147483648	; 0x80000000
   19964:	sdiv	r4, r1, lr
   19968:	mls	r6, lr, r4, r1
   1996c:	sub	r1, r1, r6
   19970:	cmp	r0, #0
   19974:	moveq	r6, #0
   19978:	streq	r6, [r5]
   1997c:	sub	r6, r4, ip
   19980:	cmp	r6, r2
   19984:	bge	199bc <_obstack_memory_used@@Base+0xbdc>
   19988:	adds	r2, ip, r2
   1998c:	mov	r4, r2
   19990:	bvs	199d8 <_obstack_memory_used@@Base+0xbf8>
   19994:	cmp	r2, r3
   19998:	movle	r3, #0
   1999c:	andgt	r3, r8, #1
   199a0:	cmp	r3, #0
   199a4:	bne	199d8 <_obstack_memory_used@@Base+0xbf8>
   199a8:	smull	r2, r3, r2, lr
   199ac:	asr	ip, r2, #31
   199b0:	mov	r1, r2
   199b4:	cmp	ip, r3
   199b8:	bne	199d8 <_obstack_memory_used@@Base+0xbf8>
   199bc:	bl	19700 <_obstack_memory_used@@Base+0x920>
   199c0:	str	r4, [r5]
   199c4:	ldrd	r4, [sp]
   199c8:	ldrd	r6, [sp, #8]
   199cc:	ldr	r8, [sp, #16]
   199d0:	add	sp, sp, #20
   199d4:	pop	{pc}		; (ldr pc, [sp], #4)
   199d8:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   199dc:	str	r4, [sp, #-8]!
   199e0:	str	lr, [sp, #4]
   199e4:	bl	19b64 <_obstack_memory_used@@Base+0xd84>
   199e8:	cmp	r0, #0
   199ec:	beq	199fc <_obstack_memory_used@@Base+0xc1c>
   199f0:	ldr	r4, [sp]
   199f4:	add	sp, sp, #4
   199f8:	pop	{pc}		; (ldr pc, [sp], #4)
   199fc:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   19a00:	str	r4, [sp, #-8]!
   19a04:	str	lr, [sp, #4]
   19a08:	mov	r1, #1
   19a0c:	bl	199dc <_obstack_memory_used@@Base+0xbfc>
   19a10:	ldr	r4, [sp]
   19a14:	add	sp, sp, #4
   19a18:	pop	{pc}		; (ldr pc, [sp], #4)
   19a1c:	str	r4, [sp, #-8]!
   19a20:	str	lr, [sp, #4]
   19a24:	bl	19b64 <_obstack_memory_used@@Base+0xd84>
   19a28:	cmp	r0, #0
   19a2c:	beq	19a3c <_obstack_memory_used@@Base+0xc5c>
   19a30:	ldr	r4, [sp]
   19a34:	add	sp, sp, #4
   19a38:	pop	{pc}		; (ldr pc, [sp], #4)
   19a3c:	bl	19b34 <_obstack_memory_used@@Base+0xd54>
   19a40:	str	r4, [sp, #-8]!
   19a44:	str	lr, [sp, #4]
   19a48:	mov	r1, #1
   19a4c:	bl	19a1c <_obstack_memory_used@@Base+0xc3c>
   19a50:	ldr	r4, [sp]
   19a54:	add	sp, sp, #4
   19a58:	pop	{pc}		; (ldr pc, [sp], #4)
   19a5c:	strd	r4, [sp, #-16]!
   19a60:	str	r6, [sp, #8]
   19a64:	str	lr, [sp, #12]
   19a68:	mov	r5, r0
   19a6c:	mov	r4, r1
   19a70:	mov	r0, r1
   19a74:	bl	196a0 <_obstack_memory_used@@Base+0x8c0>
   19a78:	mov	r2, r4
   19a7c:	mov	r1, r5
   19a80:	bl	11364 <memcpy@plt>
   19a84:	ldrd	r4, [sp]
   19a88:	ldr	r6, [sp, #8]
   19a8c:	add	sp, sp, #12
   19a90:	pop	{pc}		; (ldr pc, [sp], #4)
   19a94:	strd	r4, [sp, #-16]!
   19a98:	str	r6, [sp, #8]
   19a9c:	str	lr, [sp, #12]
   19aa0:	mov	r5, r0
   19aa4:	mov	r4, r1
   19aa8:	mov	r0, r1
   19aac:	bl	196c4 <_obstack_memory_used@@Base+0x8e4>
   19ab0:	mov	r2, r4
   19ab4:	mov	r1, r5
   19ab8:	bl	11364 <memcpy@plt>
   19abc:	ldrd	r4, [sp]
   19ac0:	ldr	r6, [sp, #8]
   19ac4:	add	sp, sp, #12
   19ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   19acc:	strd	r4, [sp, #-16]!
   19ad0:	str	r6, [sp, #8]
   19ad4:	str	lr, [sp, #12]
   19ad8:	mov	r5, r0
   19adc:	mov	r4, r1
   19ae0:	add	r0, r1, #1
   19ae4:	bl	196c4 <_obstack_memory_used@@Base+0x8e4>
   19ae8:	mov	r2, #0
   19aec:	strb	r2, [r0, r4]
   19af0:	mov	r2, r4
   19af4:	mov	r1, r5
   19af8:	bl	11364 <memcpy@plt>
   19afc:	ldrd	r4, [sp]
   19b00:	ldr	r6, [sp, #8]
   19b04:	add	sp, sp, #12
   19b08:	pop	{pc}		; (ldr pc, [sp], #4)
   19b0c:	str	r4, [sp, #-8]!
   19b10:	str	lr, [sp, #4]
   19b14:	mov	r4, r0
   19b18:	bl	1149c <strlen@plt>
   19b1c:	add	r1, r0, #1
   19b20:	mov	r0, r4
   19b24:	bl	19a5c <_obstack_memory_used@@Base+0xc7c>
   19b28:	ldr	r4, [sp]
   19b2c:	add	sp, sp, #4
   19b30:	pop	{pc}		; (ldr pc, [sp], #4)
   19b34:	str	r4, [sp, #-8]!
   19b38:	str	lr, [sp, #4]
   19b3c:	movw	r3, #11044	; 0x2b24
   19b40:	movt	r3, #3
   19b44:	ldr	r0, [r3]
   19b48:	movw	r3, #4480	; 0x1180
   19b4c:	movt	r3, #2
   19b50:	movw	r2, #60272	; 0xeb70
   19b54:	movt	r2, #1
   19b58:	mov	r1, #0
   19b5c:	bl	11400 <error@plt>
   19b60:	bl	11604 <abort@plt>
   19b64:	strd	r4, [sp, #-16]!
   19b68:	str	r6, [sp, #8]
   19b6c:	str	lr, [sp, #12]
   19b70:	cmp	r1, #0
   19b74:	cmpne	r0, #0
   19b78:	beq	19bb4 <_obstack_memory_used@@Base+0xdd4>
   19b7c:	mov	r2, r0
   19b80:	mov	r3, r1
   19b84:	umull	r4, r5, r0, r1
   19b88:	adds	r1, r5, #0
   19b8c:	movne	r1, #1
   19b90:	cmp	r4, #0
   19b94:	movlt	r1, #1
   19b98:	cmp	r1, #0
   19b9c:	beq	19bbc <_obstack_memory_used@@Base+0xddc>
   19ba0:	bl	114c0 <__errno_location@plt>
   19ba4:	mov	r3, #12
   19ba8:	str	r3, [r0]
   19bac:	mov	r0, #0
   19bb0:	b	19bc8 <_obstack_memory_used@@Base+0xde8>
   19bb4:	mov	r3, #1
   19bb8:	mov	r2, r3
   19bbc:	mov	r1, r3
   19bc0:	mov	r0, r2
   19bc4:	bl	112b0 <calloc@plt>
   19bc8:	ldrd	r4, [sp]
   19bcc:	ldr	r6, [sp, #8]
   19bd0:	add	sp, sp, #12
   19bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   19bd8:	str	r4, [sp, #-8]!
   19bdc:	str	lr, [sp, #4]
   19be0:	cmp	r0, #0
   19be4:	beq	19c00 <_obstack_memory_used@@Base+0xe20>
   19be8:	bge	19c04 <_obstack_memory_used@@Base+0xe24>
   19bec:	bl	114c0 <__errno_location@plt>
   19bf0:	mov	r3, #12
   19bf4:	str	r3, [r0]
   19bf8:	mov	r0, #0
   19bfc:	b	19c08 <_obstack_memory_used@@Base+0xe28>
   19c00:	mov	r0, #1
   19c04:	bl	11424 <malloc@plt>
   19c08:	ldr	r4, [sp]
   19c0c:	add	sp, sp, #4
   19c10:	pop	{pc}		; (ldr pc, [sp], #4)
   19c14:	str	r4, [sp, #-8]!
   19c18:	str	lr, [sp, #4]
   19c1c:	cmp	r0, #0
   19c20:	beq	19c44 <_obstack_memory_used@@Base+0xe64>
   19c24:	cmp	r1, #0
   19c28:	beq	19c50 <_obstack_memory_used@@Base+0xe70>
   19c2c:	cmp	r1, #0
   19c30:	blt	19c5c <_obstack_memory_used@@Base+0xe7c>
   19c34:	bl	113a0 <realloc@plt>
   19c38:	ldr	r4, [sp]
   19c3c:	add	sp, sp, #4
   19c40:	pop	{pc}		; (ldr pc, [sp], #4)
   19c44:	mov	r0, r1
   19c48:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   19c4c:	b	19c38 <_obstack_memory_used@@Base+0xe58>
   19c50:	bl	18900 <argp_parse@@Base+0xcd8>
   19c54:	mov	r0, #0
   19c58:	b	19c38 <_obstack_memory_used@@Base+0xe58>
   19c5c:	bl	114c0 <__errno_location@plt>
   19c60:	mov	r3, #12
   19c64:	str	r3, [r0]
   19c68:	mov	r0, #0
   19c6c:	b	19c38 <_obstack_memory_used@@Base+0xe58>
   19c70:	ldr	r3, [r0]
   19c74:	ldr	r2, [r0, #4]
   19c78:	cmp	r2, #0
   19c7c:	beq	19cb8 <_obstack_memory_used@@Base+0xed8>
   19c80:	add	r3, r3, #24
   19c84:	b	19c94 <_obstack_memory_used@@Base+0xeb4>
   19c88:	add	r3, r3, #24
   19c8c:	subs	r2, r2, #1
   19c90:	beq	19cb0 <_obstack_memory_used@@Base+0xed0>
   19c94:	ldr	r0, [r3, #-24]	; 0xffffffe8
   19c98:	cmp	r0, #0
   19c9c:	beq	19c88 <_obstack_memory_used@@Base+0xea8>
   19ca0:	ldr	r1, [r3, #-12]
   19ca4:	tst	r1, #2
   19ca8:	bne	19c88 <_obstack_memory_used@@Base+0xea8>
   19cac:	bx	lr
   19cb0:	mov	r0, #0
   19cb4:	bx	lr
   19cb8:	mov	r0, #0
   19cbc:	b	19cac <_obstack_memory_used@@Base+0xecc>
   19cc0:	ldr	r2, [r0, #8]
   19cc4:	cmp	r2, #0
   19cc8:	beq	19cd4 <_obstack_memory_used@@Base+0xef4>
   19ccc:	mov	r0, #0
   19cd0:	bx	lr
   19cd4:	ldr	r2, [r1, #8]
   19cd8:	cmp	r2, #0
   19cdc:	bne	19ccc <_obstack_memory_used@@Base+0xeec>
   19ce0:	ldr	r2, [r0, #12]
   19ce4:	ldr	r1, [r1, #12]
   19ce8:	orr	r2, r2, r1
   19cec:	tst	r2, #16
   19cf0:	bne	19ccc <_obstack_memory_used@@Base+0xeec>
   19cf4:	ldr	r1, [r0, #4]
   19cf8:	ldr	r2, [r3]
   19cfc:	add	r0, r2, #1
   19d00:	str	r0, [r3]
   19d04:	strb	r1, [r2]
   19d08:	b	19ccc <_obstack_memory_used@@Base+0xeec>
   19d0c:	str	r4, [sp, #-8]!
   19d10:	str	lr, [sp, #4]
   19d14:	mov	r4, r0
   19d18:	bl	11478 <__ctype_b_loc@plt>
   19d1c:	ldr	r3, [r4]
   19d20:	ldrb	r2, [r3]
   19d24:	ldr	ip, [r0]
   19d28:	lsl	r1, r2, #1
   19d2c:	ldrh	r1, [ip, r1]
   19d30:	tst	r1, #8192	; 0x2000
   19d34:	beq	19d44 <_obstack_memory_used@@Base+0xf64>
   19d38:	add	r3, r3, #1
   19d3c:	str	r3, [r4]
   19d40:	b	19d1c <_obstack_memory_used@@Base+0xf3c>
   19d44:	subs	ip, r2, #45	; 0x2d
   19d48:	movne	ip, #1
   19d4c:	cmp	r2, #0
   19d50:	beq	19d84 <_obstack_memory_used@@Base+0xfa4>
   19d54:	tst	r1, #8
   19d58:	bne	19d84 <_obstack_memory_used@@Base+0xfa4>
   19d5c:	add	r3, r3, #1
   19d60:	str	r3, [r4]
   19d64:	ldrb	r2, [r3]
   19d68:	cmp	r2, #0
   19d6c:	beq	19d84 <_obstack_memory_used@@Base+0xfa4>
   19d70:	ldr	r1, [r0]
   19d74:	lsl	r2, r2, #1
   19d78:	ldrh	r2, [r1, r2]
   19d7c:	tst	r2, #8
   19d80:	beq	19d5c <_obstack_memory_used@@Base+0xf7c>
   19d84:	mov	r0, ip
   19d88:	ldr	r4, [sp]
   19d8c:	add	sp, sp, #4
   19d90:	pop	{pc}		; (ldr pc, [sp], #4)
   19d94:	strd	r4, [sp, #-16]!
   19d98:	str	r6, [sp, #8]
   19d9c:	str	lr, [sp, #12]
   19da0:	mov	r5, r0
   19da4:	ldr	r0, [r0, #12]
   19da8:	cmp	r0, #0
   19dac:	beq	19dc4 <_obstack_memory_used@@Base+0xfe4>
   19db0:	ldr	r4, [r0, #24]
   19db4:	bl	18900 <argp_parse@@Base+0xcd8>
   19db8:	mov	r0, r4
   19dbc:	cmp	r4, #0
   19dc0:	bne	19db0 <_obstack_memory_used@@Base+0xfd0>
   19dc4:	ldr	r3, [r5, #4]
   19dc8:	cmp	r3, #0
   19dcc:	bne	19de8 <_obstack_memory_used@@Base+0x1008>
   19dd0:	mov	r0, r5
   19dd4:	bl	18900 <argp_parse@@Base+0xcd8>
   19dd8:	ldrd	r4, [sp]
   19ddc:	ldr	r6, [sp, #8]
   19de0:	add	sp, sp, #12
   19de4:	pop	{pc}		; (ldr pc, [sp], #4)
   19de8:	ldr	r0, [r5]
   19dec:	bl	18900 <argp_parse@@Base+0xcd8>
   19df0:	ldr	r0, [r5, #8]
   19df4:	bl	18900 <argp_parse@@Base+0xcd8>
   19df8:	b	19dd0 <_obstack_memory_used@@Base+0xff0>
   19dfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19e00:	strd	r6, [sp, #8]
   19e04:	str	r8, [sp, #16]
   19e08:	str	lr, [sp, #20]
   19e0c:	mov	r6, r1
   19e10:	ldr	r7, [r0]
   19e14:	ldr	r3, [r0, #4]
   19e18:	sub	r8, r3, #1
   19e1c:	cmp	r3, #0
   19e20:	bne	19e8c <_obstack_memory_used@@Base+0x10ac>
   19e24:	mov	r7, #0
   19e28:	b	19e64 <_obstack_memory_used@@Base+0x1084>
   19e2c:	sub	r5, r5, #1
   19e30:	add	r4, r4, #24
   19e34:	cmn	r5, #1
   19e38:	beq	19e7c <_obstack_memory_used@@Base+0x109c>
   19e3c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   19e40:	cmp	r0, #0
   19e44:	beq	19e2c <_obstack_memory_used@@Base+0x104c>
   19e48:	ldr	r3, [r4, #-12]
   19e4c:	tst	r3, #2
   19e50:	bne	19e2c <_obstack_memory_used@@Base+0x104c>
   19e54:	mov	r1, r6
   19e58:	bl	112f8 <strcmp@plt>
   19e5c:	cmp	r0, #0
   19e60:	bne	19e2c <_obstack_memory_used@@Base+0x104c>
   19e64:	mov	r0, r7
   19e68:	ldrd	r4, [sp]
   19e6c:	ldrd	r6, [sp, #8]
   19e70:	ldr	r8, [sp, #16]
   19e74:	add	sp, sp, #20
   19e78:	pop	{pc}		; (ldr pc, [sp], #4)
   19e7c:	add	r7, r7, #28
   19e80:	sub	r8, r8, #1
   19e84:	cmn	r8, #1
   19e88:	beq	19ea8 <_obstack_memory_used@@Base+0x10c8>
   19e8c:	ldr	r4, [r7]
   19e90:	ldr	r3, [r7, #4]
   19e94:	sub	r5, r3, #1
   19e98:	cmp	r3, #0
   19e9c:	beq	19e7c <_obstack_memory_used@@Base+0x109c>
   19ea0:	add	r4, r4, #24
   19ea4:	b	19e3c <_obstack_memory_used@@Base+0x105c>
   19ea8:	mov	r7, #0
   19eac:	b	19e64 <_obstack_memory_used@@Base+0x1084>
   19eb0:	strd	r4, [sp, #-16]!
   19eb4:	str	r6, [sp, #8]
   19eb8:	str	lr, [sp, #12]
   19ebc:	ldr	r4, [r0, #16]
   19ec0:	ldr	r0, [r0, #8]
   19ec4:	cmp	r0, #0
   19ec8:	moveq	r5, #0
   19ecc:	beq	19ee0 <_obstack_memory_used@@Base+0x1100>
   19ed0:	mov	r1, #10
   19ed4:	bl	114a8 <strchr@plt>
   19ed8:	adds	r5, r0, #0
   19edc:	movne	r5, #1
   19ee0:	cmp	r4, #0
   19ee4:	beq	19f08 <_obstack_memory_used@@Base+0x1128>
   19ee8:	ldr	r0, [r4]
   19eec:	cmp	r0, #0
   19ef0:	beq	19f08 <_obstack_memory_used@@Base+0x1128>
   19ef4:	bl	19eb0 <_obstack_memory_used@@Base+0x10d0>
   19ef8:	add	r5, r5, r0
   19efc:	ldr	r0, [r4, #16]!
   19f00:	cmp	r0, #0
   19f04:	bne	19ef4 <_obstack_memory_used@@Base+0x1114>
   19f08:	mov	r0, r5
   19f0c:	ldrd	r4, [sp]
   19f10:	ldr	r6, [sp, #8]
   19f14:	add	sp, sp, #12
   19f18:	pop	{pc}		; (ldr pc, [sp], #4)
   19f1c:	strd	r4, [sp, #-16]!
   19f20:	str	r6, [sp, #8]
   19f24:	str	lr, [sp, #12]
   19f28:	mov	r4, r0
   19f2c:	subs	r5, r2, #0
   19f30:	beq	19f68 <_obstack_memory_used@@Base+0x1188>
   19f34:	mov	r6, r1
   19f38:	ldr	r2, [r5, #20]
   19f3c:	cmp	r2, #0
   19f40:	beq	19f68 <_obstack_memory_used@@Base+0x1188>
   19f44:	mov	r1, r3
   19f48:	mov	r0, r5
   19f4c:	bl	1877c <argp_parse@@Base+0xb54>
   19f50:	ldr	r3, [r5, #20]
   19f54:	mov	r2, r0
   19f58:	mov	r1, r4
   19f5c:	mov	r0, r6
   19f60:	blx	r3
   19f64:	mov	r4, r0
   19f68:	mov	r0, r4
   19f6c:	ldrd	r4, [sp]
   19f70:	ldr	r6, [sp, #8]
   19f74:	add	sp, sp, #12
   19f78:	pop	{pc}		; (ldr pc, [sp], #4)
   19f7c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19f80:	strd	r6, [sp, #8]
   19f84:	strd	r8, [sp, #16]
   19f88:	strd	sl, [sp, #24]
   19f8c:	str	lr, [sp, #32]
   19f90:	sub	sp, sp, #20
   19f94:	ldr	r4, [r0]
   19f98:	ldr	r9, [r0, #8]
   19f9c:	ldr	r6, [r0, #4]
   19fa0:	cmp	r6, #0
   19fa4:	beq	19ff8 <_obstack_memory_used@@Base+0x1218>
   19fa8:	str	r3, [sp, #12]
   19fac:	str	r2, [sp, #8]
   19fb0:	str	r1, [sp, #4]
   19fb4:	mov	fp, r4
   19fb8:	mov	sl, #0
   19fbc:	b	1a048 <_obstack_memory_used@@Base+0x1268>
   19fc0:	and	r3, r5, #4
   19fc4:	cmp	r3, #0
   19fc8:	moveq	fp, r4
   19fcc:	tst	r5, #2
   19fd0:	bne	19ff0 <_obstack_memory_used@@Base+0x1210>
   19fd4:	ldr	r3, [sp, #12]
   19fd8:	ldr	r2, [sp, #8]
   19fdc:	mov	r1, fp
   19fe0:	mov	r0, r4
   19fe4:	ldr	ip, [sp, #4]
   19fe8:	blx	ip
   19fec:	mov	r7, r0
   19ff0:	add	r9, r9, #1
   19ff4:	b	1a028 <_obstack_memory_used@@Base+0x1248>
   19ff8:	mov	r7, #0
   19ffc:	mov	r0, r7
   1a000:	add	sp, sp, #20
   1a004:	ldrd	r4, [sp]
   1a008:	ldrd	r6, [sp, #8]
   1a00c:	ldrd	r8, [sp, #16]
   1a010:	ldrd	sl, [sp, #24]
   1a014:	add	sp, sp, #32
   1a018:	pop	{pc}		; (ldr pc, [sp], #4)
   1a01c:	ldrb	r3, [r9]
   1a020:	cmp	r3, r8
   1a024:	beq	19fc0 <_obstack_memory_used@@Base+0x11e0>
   1a028:	add	r4, r4, #24
   1a02c:	subs	r6, r6, #1
   1a030:	movne	r3, #1
   1a034:	moveq	r3, #0
   1a038:	cmp	r7, #0
   1a03c:	movne	r3, #0
   1a040:	cmp	r3, #0
   1a044:	beq	19ffc <_obstack_memory_used@@Base+0x121c>
   1a048:	ldr	r5, [r4, #12]
   1a04c:	ands	r7, r5, #8
   1a050:	movne	r7, sl
   1a054:	bne	1a028 <_obstack_memory_used@@Base+0x1248>
   1a058:	ldr	r8, [r4, #4]
   1a05c:	sub	r3, r8, #1
   1a060:	cmp	r3, #254	; 0xfe
   1a064:	bhi	1a028 <_obstack_memory_used@@Base+0x1248>
   1a068:	bl	11478 <__ctype_b_loc@plt>
   1a06c:	ldr	r2, [r0]
   1a070:	lsl	r3, r8, #1
   1a074:	ldrh	r3, [r2, r3]
   1a078:	tst	r3, #16384	; 0x4000
   1a07c:	bne	1a01c <_obstack_memory_used@@Base+0x123c>
   1a080:	b	1a028 <_obstack_memory_used@@Base+0x1248>
   1a084:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a088:	strd	r6, [sp, #8]
   1a08c:	strd	r8, [sp, #16]
   1a090:	strd	sl, [sp, #24]
   1a094:	str	lr, [sp, #32]
   1a098:	add	fp, sp, #32
   1a09c:	sub	sp, sp, #20
   1a0a0:	ldr	r5, [r0, #4]
   1a0a4:	cmp	r5, #0
   1a0a8:	beq	1a250 <_obstack_memory_used@@Base+0x1470>
   1a0ac:	str	r1, [fp, #-48]	; 0xffffffd0
   1a0b0:	mov	r6, r0
   1a0b4:	ldr	r0, [r0, #8]
   1a0b8:	bl	1149c <strlen@plt>
   1a0bc:	add	r3, r0, #8
   1a0c0:	bic	r3, r3, #7
   1a0c4:	sub	sp, sp, r3
   1a0c8:	mov	r8, sp
   1a0cc:	str	r8, [fp, #-40]	; 0xffffffd8
   1a0d0:	ldr	r4, [r6]
   1a0d4:	movw	r7, #40128	; 0x9cc0
   1a0d8:	movt	r7, #1
   1a0dc:	ldr	r2, [r4, #20]
   1a0e0:	sub	r3, fp, #40	; 0x28
   1a0e4:	ldr	r2, [r2, #24]
   1a0e8:	mov	r1, r7
   1a0ec:	mov	r0, r4
   1a0f0:	bl	19f7c <_obstack_memory_used@@Base+0x119c>
   1a0f4:	add	r4, r4, #28
   1a0f8:	subs	r5, r5, #1
   1a0fc:	bne	1a0dc <_obstack_memory_used@@Base+0x12fc>
   1a100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a104:	cmp	r3, r8
   1a108:	bhi	1a17c <_obstack_memory_used@@Base+0x139c>
   1a10c:	ldr	r4, [r6]
   1a110:	ldr	r5, [r6, #4]
   1a114:	cmp	r5, #0
   1a118:	beq	1a250 <_obstack_memory_used@@Base+0x1470>
   1a11c:	movw	r7, #42056	; 0xa448
   1a120:	movt	r7, #1
   1a124:	ldr	r2, [r4, #20]
   1a128:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a12c:	ldr	r2, [r2, #24]
   1a130:	mov	r1, r7
   1a134:	mov	r0, r4
   1a138:	bl	19f7c <_obstack_memory_used@@Base+0x119c>
   1a13c:	add	r4, r4, #28
   1a140:	subs	r5, r5, #1
   1a144:	bne	1a124 <_obstack_memory_used@@Base+0x1344>
   1a148:	ldr	r7, [r6]
   1a14c:	ldr	r8, [r6, #4]
   1a150:	cmp	r8, #0
   1a154:	beq	1a250 <_obstack_memory_used@@Base+0x1470>
   1a158:	add	r7, r7, #28
   1a15c:	movw	sl, #5600	; 0x15e0
   1a160:	movt	sl, #2
   1a164:	movw	r9, #5584	; 0x15d0
   1a168:	movt	r9, #2
   1a16c:	movw	r3, #5612	; 0x15ec
   1a170:	movt	r3, #2
   1a174:	str	r3, [fp, #-52]	; 0xffffffcc
   1a178:	b	1a238 <_obstack_memory_used@@Base+0x1458>
   1a17c:	add	r2, r3, #1
   1a180:	str	r2, [fp, #-40]	; 0xffffffd8
   1a184:	mov	r2, #0
   1a188:	strb	r2, [r3]
   1a18c:	mov	r2, r8
   1a190:	movw	r1, #5576	; 0x15c8
   1a194:	movt	r1, #2
   1a198:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a19c:	bl	1e4ac <argp_error@@Base+0x1550>
   1a1a0:	b	1a10c <_obstack_memory_used@@Base+0x132c>
   1a1a4:	tst	r1, #16
   1a1a8:	bne	1a1dc <_obstack_memory_used@@Base+0x13fc>
   1a1ac:	ldr	r3, [r6, #8]
   1a1b0:	cmp	r3, #0
   1a1b4:	bne	1a1c8 <_obstack_memory_used@@Base+0x13e8>
   1a1b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a1bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a1c0:	bl	1e4ac <argp_error@@Base+0x1550>
   1a1c4:	b	1a1dc <_obstack_memory_used@@Base+0x13fc>
   1a1c8:	tst	r1, #1
   1a1cc:	movne	r1, r9
   1a1d0:	moveq	r1, sl
   1a1d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a1d8:	bl	1e4ac <argp_error@@Base+0x1550>
   1a1dc:	add	r4, r4, #24
   1a1e0:	subs	r5, r5, #1
   1a1e4:	beq	1a22c <_obstack_memory_used@@Base+0x144c>
   1a1e8:	ldr	r2, [r4]
   1a1ec:	cmp	r2, #0
   1a1f0:	beq	1a1dc <_obstack_memory_used@@Base+0x13fc>
   1a1f4:	ldr	r1, [r4, #12]
   1a1f8:	and	r3, r1, #4
   1a1fc:	cmp	r3, #0
   1a200:	moveq	r6, r4
   1a204:	tst	r1, #2
   1a208:	bne	1a1dc <_obstack_memory_used@@Base+0x13fc>
   1a20c:	ldr	r3, [r4, #8]
   1a210:	ldr	r0, [r6, #12]
   1a214:	orr	r1, r1, r0
   1a218:	cmp	r3, #0
   1a21c:	beq	1a1a4 <_obstack_memory_used@@Base+0x13c4>
   1a220:	tst	r1, #16
   1a224:	beq	1a1c8 <_obstack_memory_used@@Base+0x13e8>
   1a228:	b	1a1dc <_obstack_memory_used@@Base+0x13fc>
   1a22c:	add	r7, r7, #28
   1a230:	subs	r8, r8, #1
   1a234:	beq	1a250 <_obstack_memory_used@@Base+0x1470>
   1a238:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1a23c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1a240:	cmp	r5, #0
   1a244:	beq	1a22c <_obstack_memory_used@@Base+0x144c>
   1a248:	mov	r6, r4
   1a24c:	b	1a1e8 <_obstack_memory_used@@Base+0x1408>
   1a250:	sub	sp, fp, #32
   1a254:	ldrd	r4, [sp]
   1a258:	ldrd	r6, [sp, #8]
   1a25c:	ldrd	r8, [sp, #16]
   1a260:	ldrd	sl, [sp, #24]
   1a264:	add	sp, sp, #32
   1a268:	pop	{pc}		; (ldr pc, [sp], #4)
   1a26c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a270:	strd	r6, [sp, #8]
   1a274:	str	r8, [sp, #16]
   1a278:	str	lr, [sp, #20]
   1a27c:	mov	r4, r0
   1a280:	mov	r5, r1
   1a284:	ldr	r3, [r0, #28]
   1a288:	ldr	r2, [r0, #24]
   1a28c:	sub	r3, r3, r2
   1a290:	ldr	r2, [r0, #16]
   1a294:	cmp	r3, r2
   1a298:	bhi	1a2b4 <_obstack_memory_used@@Base+0x14d4>
   1a29c:	ldr	r3, [r4, #20]
   1a2a0:	cmp	r3, #0
   1a2a4:	subge	r5, r5, r3
   1a2a8:	mov	r6, #32
   1a2ac:	mov	r7, #1
   1a2b0:	b	1a2d0 <_obstack_memory_used@@Base+0x14f0>
   1a2b4:	bl	1de34 <argp_error@@Base+0xed8>
   1a2b8:	b	1a29c <_obstack_memory_used@@Base+0x14bc>
   1a2bc:	ldr	r3, [r4, #28]
   1a2c0:	add	r2, r3, #1
   1a2c4:	str	r2, [r4, #28]
   1a2c8:	strb	r6, [r3]
   1a2cc:	sub	r5, r5, #1
   1a2d0:	cmp	r5, #0
   1a2d4:	ble	1a300 <_obstack_memory_used@@Base+0x1520>
   1a2d8:	ldr	r2, [r4, #28]
   1a2dc:	ldr	r3, [r4, #32]
   1a2e0:	cmp	r2, r3
   1a2e4:	bcc	1a2bc <_obstack_memory_used@@Base+0x14dc>
   1a2e8:	mov	r1, r7
   1a2ec:	mov	r0, r4
   1a2f0:	bl	1e3ac <argp_error@@Base+0x1450>
   1a2f4:	cmp	r0, #0
   1a2f8:	bne	1a2bc <_obstack_memory_used@@Base+0x14dc>
   1a2fc:	b	1a2cc <_obstack_memory_used@@Base+0x14ec>
   1a300:	ldrd	r4, [sp]
   1a304:	ldrd	r6, [sp, #8]
   1a308:	ldr	r8, [sp, #16]
   1a30c:	add	sp, sp, #20
   1a310:	pop	{pc}		; (ldr pc, [sp], #4)
   1a314:	strd	r4, [sp, #-16]!
   1a318:	str	r6, [sp, #8]
   1a31c:	str	lr, [sp, #12]
   1a320:	ldr	r4, [r0, #12]
   1a324:	ands	r4, r4, #8
   1a328:	movne	r4, #0
   1a32c:	bne	1a35c <_obstack_memory_used@@Base+0x157c>
   1a330:	ldr	r5, [r0, #4]
   1a334:	sub	r3, r5, #1
   1a338:	cmp	r3, #254	; 0xfe
   1a33c:	bhi	1a35c <_obstack_memory_used@@Base+0x157c>
   1a340:	bl	11478 <__ctype_b_loc@plt>
   1a344:	ldr	r2, [r0]
   1a348:	lsl	r3, r5, #1
   1a34c:	ldrh	r3, [r2, r3]
   1a350:	and	r3, r3, #16384	; 0x4000
   1a354:	cmp	r3, #0
   1a358:	movne	r4, r5
   1a35c:	mov	r0, r4
   1a360:	ldrd	r4, [sp]
   1a364:	ldr	r6, [sp, #8]
   1a368:	add	sp, sp, #12
   1a36c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a370:	strd	r4, [sp, #-16]!
   1a374:	str	r6, [sp, #8]
   1a378:	str	lr, [sp, #12]
   1a37c:	mov	r4, r0
   1a380:	mov	r5, r1
   1a384:	ldr	r3, [r0, #28]
   1a388:	ldr	r2, [r0, #24]
   1a38c:	sub	r3, r3, r2
   1a390:	ldr	r2, [r0, #16]
   1a394:	cmp	r3, r2
   1a398:	bhi	1a3e8 <_obstack_memory_used@@Base+0x1608>
   1a39c:	ldr	r3, [r4, #20]
   1a3a0:	cmp	r3, #0
   1a3a4:	addge	r5, r5, r3
   1a3a8:	ldr	r3, [r4, #8]
   1a3ac:	cmp	r5, r3
   1a3b0:	bcc	1a408 <_obstack_memory_used@@Base+0x1628>
   1a3b4:	ldr	r2, [r4, #28]
   1a3b8:	ldr	r3, [r4, #32]
   1a3bc:	cmp	r2, r3
   1a3c0:	bcs	1a3f0 <_obstack_memory_used@@Base+0x1610>
   1a3c4:	ldr	r3, [r4, #28]
   1a3c8:	add	r2, r3, #1
   1a3cc:	str	r2, [r4, #28]
   1a3d0:	mov	r2, #10
   1a3d4:	strb	r2, [r3]
   1a3d8:	ldrd	r4, [sp]
   1a3dc:	ldr	r6, [sp, #8]
   1a3e0:	add	sp, sp, #12
   1a3e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3e8:	bl	1de34 <argp_error@@Base+0xed8>
   1a3ec:	b	1a39c <_obstack_memory_used@@Base+0x15bc>
   1a3f0:	mov	r1, #1
   1a3f4:	mov	r0, r4
   1a3f8:	bl	1e3ac <argp_error@@Base+0x1450>
   1a3fc:	cmp	r0, #0
   1a400:	bne	1a3c4 <_obstack_memory_used@@Base+0x15e4>
   1a404:	b	1a3d8 <_obstack_memory_used@@Base+0x15f8>
   1a408:	ldr	r2, [r4, #28]
   1a40c:	ldr	r3, [r4, #32]
   1a410:	cmp	r2, r3
   1a414:	bcs	1a430 <_obstack_memory_used@@Base+0x1650>
   1a418:	ldr	r3, [r4, #28]
   1a41c:	add	r2, r3, #1
   1a420:	str	r2, [r4, #28]
   1a424:	mov	r2, #32
   1a428:	strb	r2, [r3]
   1a42c:	b	1a3d8 <_obstack_memory_used@@Base+0x15f8>
   1a430:	mov	r1, #1
   1a434:	mov	r0, r4
   1a438:	bl	1e3ac <argp_error@@Base+0x1450>
   1a43c:	cmp	r0, #0
   1a440:	bne	1a418 <_obstack_memory_used@@Base+0x1638>
   1a444:	b	1a3d8 <_obstack_memory_used@@Base+0x15f8>
   1a448:	strd	r4, [sp, #-16]!
   1a44c:	str	r6, [sp, #8]
   1a450:	str	lr, [sp, #12]
   1a454:	ldr	r5, [r0, #8]
   1a458:	cmp	r5, #0
   1a45c:	beq	1a4a0 <_obstack_memory_used@@Base+0x16c0>
   1a460:	ldr	r2, [r0, #12]
   1a464:	ldr	r1, [r1, #12]
   1a468:	orr	r2, r2, r1
   1a46c:	tst	r2, #16
   1a470:	bne	1a4ac <_obstack_memory_used@@Base+0x16cc>
   1a474:	mov	r6, r3
   1a478:	mov	r4, r0
   1a47c:	tst	r2, #1
   1a480:	beq	1a4c0 <_obstack_memory_used@@Base+0x16e0>
   1a484:	mov	r3, r5
   1a488:	ldr	r2, [r0, #4]
   1a48c:	movw	r1, #5620	; 0x15f4
   1a490:	movt	r1, #2
   1a494:	mov	r0, r6
   1a498:	bl	1e4ac <argp_error@@Base+0x1550>
   1a49c:	b	1a4ac <_obstack_memory_used@@Base+0x16cc>
   1a4a0:	ldr	r5, [r1, #8]
   1a4a4:	cmp	r5, #0
   1a4a8:	bne	1a460 <_obstack_memory_used@@Base+0x1680>
   1a4ac:	mov	r0, #0
   1a4b0:	ldrd	r4, [sp]
   1a4b4:	ldr	r6, [sp, #8]
   1a4b8:	add	sp, sp, #12
   1a4bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4c0:	mov	r0, r5
   1a4c4:	bl	1149c <strlen@plt>
   1a4c8:	add	r1, r0, #6
   1a4cc:	mov	r0, r6
   1a4d0:	bl	1a370 <_obstack_memory_used@@Base+0x1590>
   1a4d4:	mov	r3, r5
   1a4d8:	ldr	r2, [r4, #4]
   1a4dc:	movw	r1, #5632	; 0x1600
   1a4e0:	movt	r1, #2
   1a4e4:	mov	r0, r6
   1a4e8:	bl	1e4ac <argp_error@@Base+0x1550>
   1a4ec:	b	1a4ac <_obstack_memory_used@@Base+0x16cc>
   1a4f0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a4f4:	strd	r6, [sp, #8]
   1a4f8:	strd	r8, [sp, #16]
   1a4fc:	strd	sl, [sp, #24]
   1a500:	str	lr, [sp, #32]
   1a504:	sub	sp, sp, #28
   1a508:	str	r1, [sp, #8]
   1a50c:	mov	sl, r2
   1a510:	mov	r4, r3
   1a514:	ldr	r9, [sp, #64]	; 0x40
   1a518:	ldr	r6, [r2]
   1a51c:	str	r6, [sp, #20]
   1a520:	ldr	r7, [r0, #16]
   1a524:	ldr	r2, [r0, #8]
   1a528:	mov	ip, r2
   1a52c:	str	r2, [sp, #16]
   1a530:	mov	r3, r1
   1a534:	mov	r2, r0
   1a538:	mov	r1, #6
   1a53c:	movt	r1, #512	; 0x200
   1a540:	mov	r0, ip
   1a544:	bl	19f1c <_obstack_memory_used@@Base+0x113c>
   1a548:	cmp	r0, #0
   1a54c:	str	r0, [sp, #12]
   1a550:	beq	1a6e0 <_obstack_memory_used@@Base+0x1900>
   1a554:	mov	r1, #10
   1a558:	bl	11328 <strchrnul@plt>
   1a55c:	mov	r5, r0
   1a560:	ldrb	r3, [r0]
   1a564:	cmp	r3, #0
   1a568:	beq	1a6b0 <_obstack_memory_used@@Base+0x18d0>
   1a56c:	ldrb	fp, [r6]
   1a570:	cmp	fp, #0
   1a574:	ble	1a6a8 <_obstack_memory_used@@Base+0x18c8>
   1a578:	mov	r6, #0
   1a57c:	add	r8, r0, #1
   1a580:	mov	r1, #10
   1a584:	mov	r0, r8
   1a588:	bl	11328 <strchrnul@plt>
   1a58c:	add	r6, r6, #1
   1a590:	cmp	r6, fp
   1a594:	bne	1a57c <_obstack_memory_used@@Base+0x179c>
   1a598:	mov	r5, r0
   1a59c:	ldr	r3, [sl]
   1a5a0:	add	r3, r3, #1
   1a5a4:	str	r3, [sl]
   1a5a8:	mov	fp, #1
   1a5ac:	add	r1, r5, #1
   1a5b0:	sub	r1, r1, r8
   1a5b4:	mov	r0, r9
   1a5b8:	bl	1a370 <_obstack_memory_used@@Base+0x1590>
   1a5bc:	sub	r6, r5, r8
   1a5c0:	ldr	r3, [r9, #28]
   1a5c4:	add	r3, r3, r6
   1a5c8:	ldr	r2, [r9, #32]
   1a5cc:	cmp	r2, r3
   1a5d0:	bcs	1a5e8 <_obstack_memory_used@@Base+0x1808>
   1a5d4:	mov	r1, r6
   1a5d8:	mov	r0, r9
   1a5dc:	bl	1e3ac <argp_error@@Base+0x1450>
   1a5e0:	cmp	r0, #0
   1a5e4:	beq	1a604 <_obstack_memory_used@@Base+0x1824>
   1a5e8:	mov	r2, r6
   1a5ec:	mov	r1, r8
   1a5f0:	ldr	r0, [r9, #28]
   1a5f4:	bl	11364 <memcpy@plt>
   1a5f8:	ldr	r3, [r9, #28]
   1a5fc:	add	r6, r3, r6
   1a600:	str	r6, [r9, #28]
   1a604:	ldr	r2, [sp, #16]
   1a608:	ldr	r3, [sp, #12]
   1a60c:	cmp	r2, r3
   1a610:	bne	1a6bc <_obstack_memory_used@@Base+0x18dc>
   1a614:	cmp	r7, #0
   1a618:	beq	1a654 <_obstack_memory_used@@Base+0x1874>
   1a61c:	ldr	r0, [r7]
   1a620:	cmp	r0, #0
   1a624:	beq	1a654 <_obstack_memory_used@@Base+0x1874>
   1a628:	mov	r3, r4
   1a62c:	str	r9, [sp]
   1a630:	mov	r2, sl
   1a634:	ldr	r1, [sp, #8]
   1a638:	bl	1a4f0 <_obstack_memory_used@@Base+0x1710>
   1a63c:	clz	r3, r0
   1a640:	lsr	r3, r3, #5
   1a644:	ldr	r0, [r7, #16]!
   1a648:	cmp	r0, #0
   1a64c:	bne	1a62c <_obstack_memory_used@@Base+0x184c>
   1a650:	mov	r4, r3
   1a654:	cmp	r4, #0
   1a658:	moveq	fp, #0
   1a65c:	cmp	fp, #0
   1a660:	beq	1a684 <_obstack_memory_used@@Base+0x18a4>
   1a664:	ldrb	r3, [r5]
   1a668:	cmp	r3, #0
   1a66c:	beq	1a6c8 <_obstack_memory_used@@Base+0x18e8>
   1a670:	ldr	r2, [sp, #20]
   1a674:	ldrb	r3, [r2]
   1a678:	add	r3, r3, #1
   1a67c:	strb	r3, [r2]
   1a680:	mov	r4, #0
   1a684:	clz	r0, r4
   1a688:	lsr	r0, r0, #5
   1a68c:	add	sp, sp, #28
   1a690:	ldrd	r4, [sp]
   1a694:	ldrd	r6, [sp, #8]
   1a698:	ldrd	r8, [sp, #16]
   1a69c:	ldrd	sl, [sp, #24]
   1a6a0:	add	sp, sp, #32
   1a6a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a6a8:	ldr	r8, [sp, #12]
   1a6ac:	b	1a59c <_obstack_memory_used@@Base+0x17bc>
   1a6b0:	ldr	r8, [sp, #12]
   1a6b4:	mov	fp, #0
   1a6b8:	b	1a5ac <_obstack_memory_used@@Base+0x17cc>
   1a6bc:	mov	r0, r3
   1a6c0:	bl	18900 <argp_parse@@Base+0xcd8>
   1a6c4:	b	1a614 <_obstack_memory_used@@Base+0x1834>
   1a6c8:	ldr	r2, [sp, #20]
   1a6cc:	ldrb	r3, [r2]
   1a6d0:	cmp	r3, #0
   1a6d4:	movne	r3, #0
   1a6d8:	strbne	r3, [r2]
   1a6dc:	b	1a684 <_obstack_memory_used@@Base+0x18a4>
   1a6e0:	cmp	r7, #0
   1a6e4:	beq	1a684 <_obstack_memory_used@@Base+0x18a4>
   1a6e8:	ldr	r5, [sp, #12]
   1a6ec:	mov	fp, #0
   1a6f0:	b	1a61c <_obstack_memory_used@@Base+0x183c>
   1a6f4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a6f8:	strd	r6, [sp, #8]
   1a6fc:	str	r8, [sp, #16]
   1a700:	str	lr, [sp, #20]
   1a704:	mov	r6, r0
   1a708:	mov	r4, r2
   1a70c:	ldr	r3, [r2, #16]
   1a710:	mov	r2, r1
   1a714:	mov	r1, #3
   1a718:	movt	r1, #512	; 0x200
   1a71c:	bl	19f1c <_obstack_memory_used@@Base+0x113c>
   1a720:	subs	r5, r0, #0
   1a724:	beq	1a838 <_obstack_memory_used@@Base+0x1a58>
   1a728:	ldrb	r3, [r5]
   1a72c:	cmp	r3, #0
   1a730:	beq	1a82c <_obstack_memory_used@@Base+0x1a4c>
   1a734:	ldr	r3, [r4, #8]
   1a738:	ldr	r3, [r3]
   1a73c:	cmp	r3, #0
   1a740:	beq	1a76c <_obstack_memory_used@@Base+0x198c>
   1a744:	ldr	r7, [r4, #4]
   1a748:	ldr	r2, [r7, #28]
   1a74c:	ldr	r3, [r7, #32]
   1a750:	cmp	r2, r3
   1a754:	bcs	1a85c <_obstack_memory_used@@Base+0x1a7c>
   1a758:	ldr	r3, [r7, #28]
   1a75c:	add	r2, r3, #1
   1a760:	str	r2, [r7, #28]
   1a764:	mov	r2, #10
   1a768:	strb	r2, [r3]
   1a76c:	movw	r8, #11004	; 0x2afc
   1a770:	movt	r8, #3
   1a774:	ldr	r1, [r8, #24]
   1a778:	ldr	r0, [r4, #4]
   1a77c:	bl	1a26c <_obstack_memory_used@@Base+0x148c>
   1a780:	ldr	r7, [r4, #4]
   1a784:	ldr	r8, [r8, #24]
   1a788:	ldr	r3, [r7, #28]
   1a78c:	ldr	r2, [r7, #24]
   1a790:	sub	r3, r3, r2
   1a794:	ldr	r2, [r7, #16]
   1a798:	cmp	r3, r2
   1a79c:	bhi	1a874 <_obstack_memory_used@@Base+0x1a94>
   1a7a0:	str	r8, [r7, #4]
   1a7a4:	ldr	r7, [r4, #4]
   1a7a8:	movw	r3, #11004	; 0x2afc
   1a7ac:	movt	r3, #3
   1a7b0:	ldr	r8, [r3, #24]
   1a7b4:	ldr	r3, [r7, #28]
   1a7b8:	ldr	r2, [r7, #24]
   1a7bc:	sub	r3, r3, r2
   1a7c0:	ldr	r2, [r7, #16]
   1a7c4:	cmp	r3, r2
   1a7c8:	bhi	1a880 <_obstack_memory_used@@Base+0x1aa0>
   1a7cc:	str	r8, [r7, #12]
   1a7d0:	mov	r0, r5
   1a7d4:	bl	1149c <strlen@plt>
   1a7d8:	subs	r7, r0, #0
   1a7dc:	bne	1a88c <_obstack_memory_used@@Base+0x1aac>
   1a7e0:	ldr	r7, [r4, #4]
   1a7e4:	ldr	r3, [r7, #28]
   1a7e8:	ldr	r2, [r7, #24]
   1a7ec:	sub	r3, r3, r2
   1a7f0:	ldr	r2, [r7, #16]
   1a7f4:	cmp	r3, r2
   1a7f8:	bhi	1a8d8 <_obstack_memory_used@@Base+0x1af8>
   1a7fc:	mov	r3, #0
   1a800:	str	r3, [r7, #4]
   1a804:	ldr	r7, [r4, #4]
   1a808:	ldr	r2, [r7, #28]
   1a80c:	ldr	r3, [r7, #32]
   1a810:	cmp	r2, r3
   1a814:	bcs	1a8e4 <_obstack_memory_used@@Base+0x1b04>
   1a818:	ldr	r3, [r7, #28]
   1a81c:	add	r2, r3, #1
   1a820:	str	r2, [r7, #28]
   1a824:	mov	r2, #10
   1a828:	strb	r2, [r3]
   1a82c:	ldr	r3, [r4, #8]
   1a830:	mov	r2, #1
   1a834:	str	r2, [r3, #4]
   1a838:	cmp	r6, r5
   1a83c:	beq	1a848 <_obstack_memory_used@@Base+0x1a68>
   1a840:	mov	r0, r5
   1a844:	bl	18900 <argp_parse@@Base+0xcd8>
   1a848:	ldrd	r4, [sp]
   1a84c:	ldrd	r6, [sp, #8]
   1a850:	ldr	r8, [sp, #16]
   1a854:	add	sp, sp, #20
   1a858:	pop	{pc}		; (ldr pc, [sp], #4)
   1a85c:	mov	r1, #1
   1a860:	mov	r0, r7
   1a864:	bl	1e3ac <argp_error@@Base+0x1450>
   1a868:	cmp	r0, #0
   1a86c:	bne	1a758 <_obstack_memory_used@@Base+0x1978>
   1a870:	b	1a76c <_obstack_memory_used@@Base+0x198c>
   1a874:	mov	r0, r7
   1a878:	bl	1de34 <argp_error@@Base+0xed8>
   1a87c:	b	1a7a0 <_obstack_memory_used@@Base+0x19c0>
   1a880:	mov	r0, r7
   1a884:	bl	1de34 <argp_error@@Base+0xed8>
   1a888:	b	1a7cc <_obstack_memory_used@@Base+0x19ec>
   1a88c:	ldr	r8, [r4, #4]
   1a890:	ldr	r3, [r8, #28]
   1a894:	add	r3, r3, r7
   1a898:	ldr	r2, [r8, #32]
   1a89c:	cmp	r2, r3
   1a8a0:	bcs	1a8b8 <_obstack_memory_used@@Base+0x1ad8>
   1a8a4:	mov	r1, r7
   1a8a8:	mov	r0, r8
   1a8ac:	bl	1e3ac <argp_error@@Base+0x1450>
   1a8b0:	cmp	r0, #0
   1a8b4:	beq	1a7e0 <_obstack_memory_used@@Base+0x1a00>
   1a8b8:	mov	r2, r7
   1a8bc:	mov	r1, r5
   1a8c0:	ldr	r0, [r8, #28]
   1a8c4:	bl	11364 <memcpy@plt>
   1a8c8:	ldr	r3, [r8, #28]
   1a8cc:	add	r7, r3, r7
   1a8d0:	str	r7, [r8, #28]
   1a8d4:	b	1a7e0 <_obstack_memory_used@@Base+0x1a00>
   1a8d8:	mov	r0, r7
   1a8dc:	bl	1de34 <argp_error@@Base+0xed8>
   1a8e0:	b	1a7fc <_obstack_memory_used@@Base+0x1a1c>
   1a8e4:	mov	r1, #1
   1a8e8:	mov	r0, r7
   1a8ec:	bl	1e3ac <argp_error@@Base+0x1450>
   1a8f0:	cmp	r0, #0
   1a8f4:	bne	1a818 <_obstack_memory_used@@Base+0x1a38>
   1a8f8:	b	1a82c <_obstack_memory_used@@Base+0x1a4c>
   1a8fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a900:	strd	r6, [sp, #8]
   1a904:	str	r8, [sp, #16]
   1a908:	str	lr, [sp, #20]
   1a90c:	mov	r6, r0
   1a910:	mov	r4, r1
   1a914:	ldr	r3, [r1, #12]
   1a918:	cmp	r3, #0
   1a91c:	beq	1aa50 <_obstack_memory_used@@Base+0x1c70>
   1a920:	ldr	r3, [r1, #8]
   1a924:	ldr	r7, [r3]
   1a928:	ldr	r2, [r1]
   1a92c:	ldr	r5, [r2, #16]
   1a930:	ldr	r3, [r3, #4]
   1a934:	cmp	r3, #0
   1a938:	cmpne	r7, #0
   1a93c:	bne	1a9f0 <_obstack_memory_used@@Base+0x1c10>
   1a940:	cmp	r5, #0
   1a944:	beq	1a9c8 <_obstack_memory_used@@Base+0x1be8>
   1a948:	ldr	r0, [r5]
   1a94c:	cmp	r0, #0
   1a950:	beq	1a9c8 <_obstack_memory_used@@Base+0x1be8>
   1a954:	ldrb	r3, [r0]
   1a958:	cmp	r3, #0
   1a95c:	beq	1a9c8 <_obstack_memory_used@@Base+0x1be8>
   1a960:	cmp	r7, #0
   1a964:	beq	1a994 <_obstack_memory_used@@Base+0x1bb4>
   1a968:	ldr	r3, [r7, #16]
   1a96c:	cmp	r3, r5
   1a970:	beq	1a9c8 <_obstack_memory_used@@Base+0x1be8>
   1a974:	cmp	r3, #0
   1a978:	beq	1a994 <_obstack_memory_used@@Base+0x1bb4>
   1a97c:	ldr	r3, [r3, #12]
   1a980:	cmp	r3, #0
   1a984:	cmpne	r5, r3
   1a988:	bne	1a97c <_obstack_memory_used@@Base+0x1b9c>
   1a98c:	cmp	r5, r3
   1a990:	beq	1a9c8 <_obstack_memory_used@@Base+0x1be8>
   1a994:	ldr	r3, [r4, #4]
   1a998:	ldr	r7, [r3, #12]
   1a99c:	mov	r2, r4
   1a9a0:	ldr	r1, [r5, #16]
   1a9a4:	bl	1a6f4 <_obstack_memory_used@@Base+0x1914>
   1a9a8:	ldr	r5, [r4, #4]
   1a9ac:	ldr	r3, [r5, #28]
   1a9b0:	ldr	r2, [r5, #24]
   1a9b4:	sub	r3, r3, r2
   1a9b8:	ldr	r2, [r5, #16]
   1a9bc:	cmp	r3, r2
   1a9c0:	bhi	1aa44 <_obstack_memory_used@@Base+0x1c64>
   1a9c4:	str	r7, [r5, #12]
   1a9c8:	mov	r3, #0
   1a9cc:	str	r3, [r4, #12]
   1a9d0:	mov	r1, r6
   1a9d4:	ldr	r0, [r4, #4]
   1a9d8:	bl	1a26c <_obstack_memory_used@@Base+0x148c>
   1a9dc:	ldrd	r4, [sp]
   1a9e0:	ldrd	r6, [sp, #8]
   1a9e4:	ldr	r8, [sp, #16]
   1a9e8:	add	sp, sp, #20
   1a9ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9f0:	ldr	r2, [r2, #12]
   1a9f4:	ldr	r3, [r7, #12]
   1a9f8:	cmp	r2, r3
   1a9fc:	beq	1a940 <_obstack_memory_used@@Base+0x1b60>
   1aa00:	ldr	r8, [r1, #4]
   1aa04:	ldr	r2, [r8, #28]
   1aa08:	ldr	r3, [r8, #32]
   1aa0c:	cmp	r2, r3
   1aa10:	bcs	1aa2c <_obstack_memory_used@@Base+0x1c4c>
   1aa14:	ldr	r3, [r8, #28]
   1aa18:	add	r2, r3, #1
   1aa1c:	str	r2, [r8, #28]
   1aa20:	mov	r2, #10
   1aa24:	strb	r2, [r3]
   1aa28:	b	1a940 <_obstack_memory_used@@Base+0x1b60>
   1aa2c:	mov	r1, #1
   1aa30:	mov	r0, r8
   1aa34:	bl	1e3ac <argp_error@@Base+0x1450>
   1aa38:	cmp	r0, #0
   1aa3c:	bne	1aa14 <_obstack_memory_used@@Base+0x1c34>
   1aa40:	b	1a940 <_obstack_memory_used@@Base+0x1b60>
   1aa44:	mov	r0, r5
   1aa48:	bl	1de34 <argp_error@@Base+0xed8>
   1aa4c:	b	1a9c4 <_obstack_memory_used@@Base+0x1be4>
   1aa50:	ldr	r5, [r1, #4]
   1aa54:	ldr	r3, [r5, #28]
   1aa58:	add	r3, r3, #2
   1aa5c:	ldr	r2, [r5, #32]
   1aa60:	cmp	r2, r3
   1aa64:	bcs	1aa7c <_obstack_memory_used@@Base+0x1c9c>
   1aa68:	mov	r1, #2
   1aa6c:	mov	r0, r5
   1aa70:	bl	1e3ac <argp_error@@Base+0x1450>
   1aa74:	cmp	r0, #0
   1aa78:	beq	1a9d0 <_obstack_memory_used@@Base+0x1bf0>
   1aa7c:	ldr	r2, [r5, #28]
   1aa80:	movw	r3, #5644	; 0x160c
   1aa84:	movt	r3, #2
   1aa88:	ldrh	r3, [r3]
   1aa8c:	strh	r3, [r2]
   1aa90:	ldr	r3, [r5, #28]
   1aa94:	add	r3, r3, #2
   1aa98:	str	r3, [r5, #28]
   1aa9c:	b	1a9d0 <_obstack_memory_used@@Base+0x1bf0>
   1aaa0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1aaa4:	strd	r6, [sp, #8]
   1aaa8:	strd	r8, [sp, #16]
   1aaac:	strd	sl, [sp, #24]
   1aab0:	str	lr, [sp, #32]
   1aab4:	sub	sp, sp, #28
   1aab8:	mov	r8, r0
   1aabc:	str	r1, [sp, #12]
   1aac0:	str	r2, [sp, #8]
   1aac4:	mov	fp, r3
   1aac8:	ldr	sl, [sp, #64]	; 0x40
   1aacc:	ldr	r4, [sp, #68]	; 0x44
   1aad0:	ldr	r6, [r0, #12]
   1aad4:	ldr	r9, [r0, #16]
   1aad8:	cmp	r6, #0
   1aadc:	beq	1af58 <_obstack_memory_used@@Base+0x2178>
   1aae0:	mov	r5, r2
   1aae4:	mov	r1, #11
   1aae8:	mov	r0, r6
   1aaec:	bl	114a8 <strchr@plt>
   1aaf0:	cmp	r5, #0
   1aaf4:	beq	1ab34 <_obstack_memory_used@@Base+0x1d54>
   1aaf8:	cmp	r0, #0
   1aafc:	addne	r6, r0, #1
   1ab00:	beq	1afa0 <_obstack_memory_used@@Base+0x21c0>
   1ab04:	ldr	r3, [r8, #20]
   1ab08:	cmp	r3, #0
   1ab0c:	beq	1afa8 <_obstack_memory_used@@Base+0x21c8>
   1ab10:	ldr	r1, [sp, #12]
   1ab14:	mov	r0, r8
   1ab18:	bl	1877c <argp_parse@@Base+0xb54>
   1ab1c:	str	r0, [sp, #16]
   1ab20:	ldr	r3, [r8, #20]
   1ab24:	mov	r7, #0
   1ab28:	mov	r0, #2
   1ab2c:	movt	r0, #512	; 0x200
   1ab30:	b	1ab80 <_obstack_memory_used@@Base+0x1da0>
   1ab34:	cmp	r0, #0
   1ab38:	beq	1afc4 <_obstack_memory_used@@Base+0x21e4>
   1ab3c:	sub	r7, r0, r6
   1ab40:	ldr	r3, [r8, #20]
   1ab44:	cmp	r3, #0
   1ab48:	beq	1ad68 <_obstack_memory_used@@Base+0x1f88>
   1ab4c:	cmp	r7, #0
   1ab50:	beq	1ab64 <_obstack_memory_used@@Base+0x1d84>
   1ab54:	mov	r1, r7
   1ab58:	mov	r0, r6
   1ab5c:	bl	11358 <strndup@plt>
   1ab60:	mov	r6, r0
   1ab64:	ldr	r1, [sp, #12]
   1ab68:	mov	r0, r8
   1ab6c:	bl	1877c <argp_parse@@Base+0xb54>
   1ab70:	str	r0, [sp, #16]
   1ab74:	ldr	r3, [r8, #20]
   1ab78:	mov	r0, #1
   1ab7c:	movt	r0, #512	; 0x200
   1ab80:	ldr	r2, [sp, #16]
   1ab84:	mov	r1, r6
   1ab88:	blx	r3
   1ab8c:	subs	r5, r0, #0
   1ab90:	beq	1ae74 <_obstack_memory_used@@Base+0x2094>
   1ab94:	cmp	fp, #0
   1ab98:	bne	1ad78 <_obstack_memory_used@@Base+0x1f98>
   1ab9c:	cmp	r5, r6
   1aba0:	movne	r3, #0
   1aba4:	moveq	r3, #1
   1aba8:	cmp	r7, #0
   1abac:	moveq	r3, #0
   1abb0:	cmp	r3, #0
   1abb4:	beq	1adb8 <_obstack_memory_used@@Base+0x1fd8>
   1abb8:	ldr	r3, [r4, #28]
   1abbc:	add	r3, r3, r7
   1abc0:	ldr	r2, [r4, #32]
   1abc4:	cmp	r2, r3
   1abc8:	bcs	1abe0 <_obstack_memory_used@@Base+0x1e00>
   1abcc:	mov	r1, r7
   1abd0:	mov	r0, r4
   1abd4:	bl	1e3ac <argp_error@@Base+0x1450>
   1abd8:	cmp	r0, #0
   1abdc:	beq	1abfc <_obstack_memory_used@@Base+0x1e1c>
   1abe0:	mov	r2, r7
   1abe4:	mov	r1, r6
   1abe8:	ldr	r0, [r4, #28]
   1abec:	bl	11364 <memcpy@plt>
   1abf0:	ldr	r3, [r4, #28]
   1abf4:	add	r3, r3, r7
   1abf8:	str	r3, [r4, #28]
   1abfc:	ldr	r3, [r4, #28]
   1ac00:	ldr	r2, [r4, #24]
   1ac04:	sub	r3, r3, r2
   1ac08:	ldr	r2, [r4, #16]
   1ac0c:	cmp	r3, r2
   1ac10:	bhi	1ae18 <_obstack_memory_used@@Base+0x2038>
   1ac14:	ldr	r3, [r4, #20]
   1ac18:	bic	r3, r3, r3, asr #31
   1ac1c:	ldr	r2, [r4, #4]
   1ac20:	cmp	r2, r3
   1ac24:	bcc	1ae24 <_obstack_memory_used@@Base+0x2044>
   1ac28:	cmp	r5, r6
   1ac2c:	moveq	r5, #1
   1ac30:	bne	1ae64 <_obstack_memory_used@@Base+0x2084>
   1ac34:	cmp	r6, #0
   1ac38:	cmpne	r7, #0
   1ac3c:	beq	1ac54 <_obstack_memory_used@@Base+0x1e74>
   1ac40:	ldr	r3, [r8, #20]
   1ac44:	cmp	r3, #0
   1ac48:	beq	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1ac4c:	mov	r0, r6
   1ac50:	bl	18900 <argp_parse@@Base+0xcd8>
   1ac54:	ldr	r3, [sp, #8]
   1ac58:	cmp	r3, #0
   1ac5c:	beq	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1ac60:	ldr	r3, [r8, #20]
   1ac64:	cmp	r3, #0
   1ac68:	beq	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1ac6c:	ldr	r2, [sp, #16]
   1ac70:	mov	r1, #0
   1ac74:	mov	r0, #4
   1ac78:	movt	r0, #512	; 0x200
   1ac7c:	blx	r3
   1ac80:	subs	r6, r0, #0
   1ac84:	beq	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1ac88:	orrs	r3, fp, r5
   1ac8c:	bne	1ae7c <_obstack_memory_used@@Base+0x209c>
   1ac90:	mov	r0, r6
   1ac94:	bl	1149c <strlen@plt>
   1ac98:	subs	r5, r0, #0
   1ac9c:	bne	1aebc <_obstack_memory_used@@Base+0x20dc>
   1aca0:	mov	r0, r6
   1aca4:	bl	18900 <argp_parse@@Base+0xcd8>
   1aca8:	ldr	r3, [r4, #28]
   1acac:	ldr	r2, [r4, #24]
   1acb0:	sub	r3, r3, r2
   1acb4:	ldr	r2, [r4, #16]
   1acb8:	cmp	r3, r2
   1acbc:	bhi	1af04 <_obstack_memory_used@@Base+0x2124>
   1acc0:	ldr	r3, [r4, #20]
   1acc4:	bic	r3, r3, r3, asr #31
   1acc8:	ldr	r2, [r4, #4]
   1accc:	cmp	r2, r3
   1acd0:	movcs	r5, #1
   1acd4:	bcc	1af10 <_obstack_memory_used@@Base+0x2130>
   1acd8:	cmp	r9, #0
   1acdc:	beq	1ad48 <_obstack_memory_used@@Base+0x1f68>
   1ace0:	ldr	r0, [r9]
   1ace4:	cmp	r0, #0
   1ace8:	beq	1ad48 <_obstack_memory_used@@Base+0x1f68>
   1acec:	clz	r6, sl
   1acf0:	lsr	r6, r6, #5
   1acf4:	cmp	sl, #0
   1acf8:	cmpne	r5, #0
   1acfc:	bne	1ad48 <_obstack_memory_used@@Base+0x1f68>
   1ad00:	orrs	r3, fp, r5
   1ad04:	str	r4, [sp, #4]
   1ad08:	str	sl, [sp]
   1ad0c:	movne	r3, #1
   1ad10:	moveq	r3, #0
   1ad14:	ldr	r2, [sp, #8]
   1ad18:	ldr	r1, [sp, #12]
   1ad1c:	bl	1aaa0 <_obstack_memory_used@@Base+0x1cc0>
   1ad20:	orr	r5, r5, r0
   1ad24:	ldr	r0, [r9, #16]
   1ad28:	cmp	r0, #0
   1ad2c:	beq	1ad48 <_obstack_memory_used@@Base+0x1f68>
   1ad30:	add	r9, r9, #16
   1ad34:	cmp	r5, #0
   1ad38:	movne	r3, r6
   1ad3c:	moveq	r3, #1
   1ad40:	cmp	r3, #0
   1ad44:	bne	1ad00 <_obstack_memory_used@@Base+0x1f20>
   1ad48:	mov	r0, r5
   1ad4c:	add	sp, sp, #28
   1ad50:	ldrd	r4, [sp]
   1ad54:	ldrd	r6, [sp, #8]
   1ad58:	ldrd	r8, [sp, #16]
   1ad5c:	ldrd	sl, [sp, #24]
   1ad60:	add	sp, sp, #32
   1ad64:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad68:	mov	r5, r6
   1ad6c:	mov	r3, #0
   1ad70:	str	r3, [sp, #16]
   1ad74:	b	1ab94 <_obstack_memory_used@@Base+0x1db4>
   1ad78:	ldr	r2, [r4, #28]
   1ad7c:	ldr	r3, [r4, #32]
   1ad80:	cmp	r2, r3
   1ad84:	bcs	1ada0 <_obstack_memory_used@@Base+0x1fc0>
   1ad88:	ldr	r3, [r4, #28]
   1ad8c:	add	r2, r3, #1
   1ad90:	str	r2, [r4, #28]
   1ad94:	mov	r2, #10
   1ad98:	strb	r2, [r3]
   1ad9c:	b	1ab9c <_obstack_memory_used@@Base+0x1dbc>
   1ada0:	mov	r1, #1
   1ada4:	mov	r0, r4
   1ada8:	bl	1e3ac <argp_error@@Base+0x1450>
   1adac:	cmp	r0, #0
   1adb0:	bne	1ad88 <_obstack_memory_used@@Base+0x1fa8>
   1adb4:	b	1ab9c <_obstack_memory_used@@Base+0x1dbc>
   1adb8:	mov	r0, r5
   1adbc:	bl	1149c <strlen@plt>
   1adc0:	subs	r3, r0, #0
   1adc4:	str	r3, [sp, #20]
   1adc8:	beq	1abfc <_obstack_memory_used@@Base+0x1e1c>
   1adcc:	ldr	r3, [r4, #28]
   1add0:	mov	r1, r0
   1add4:	add	r3, r3, r0
   1add8:	ldr	r2, [r4, #32]
   1addc:	cmp	r2, r3
   1ade0:	bcs	1adf4 <_obstack_memory_used@@Base+0x2014>
   1ade4:	mov	r0, r4
   1ade8:	bl	1e3ac <argp_error@@Base+0x1450>
   1adec:	cmp	r0, #0
   1adf0:	beq	1abfc <_obstack_memory_used@@Base+0x1e1c>
   1adf4:	ldr	r2, [sp, #20]
   1adf8:	mov	r1, r5
   1adfc:	ldr	r0, [r4, #28]
   1ae00:	bl	11364 <memcpy@plt>
   1ae04:	ldr	r3, [r4, #28]
   1ae08:	ldr	r2, [sp, #20]
   1ae0c:	add	r3, r3, r2
   1ae10:	str	r3, [r4, #28]
   1ae14:	b	1abfc <_obstack_memory_used@@Base+0x1e1c>
   1ae18:	mov	r0, r4
   1ae1c:	bl	1de34 <argp_error@@Base+0xed8>
   1ae20:	b	1ac14 <_obstack_memory_used@@Base+0x1e34>
   1ae24:	ldr	r2, [r4, #28]
   1ae28:	ldr	r3, [r4, #32]
   1ae2c:	cmp	r2, r3
   1ae30:	bcs	1ae4c <_obstack_memory_used@@Base+0x206c>
   1ae34:	ldr	r3, [r4, #28]
   1ae38:	add	r2, r3, #1
   1ae3c:	str	r2, [r4, #28]
   1ae40:	mov	r2, #10
   1ae44:	strb	r2, [r3]
   1ae48:	b	1ac28 <_obstack_memory_used@@Base+0x1e48>
   1ae4c:	mov	r1, #1
   1ae50:	mov	r0, r4
   1ae54:	bl	1e3ac <argp_error@@Base+0x1450>
   1ae58:	cmp	r0, #0
   1ae5c:	bne	1ae34 <_obstack_memory_used@@Base+0x2054>
   1ae60:	b	1ac28 <_obstack_memory_used@@Base+0x1e48>
   1ae64:	mov	r0, r5
   1ae68:	bl	18900 <argp_parse@@Base+0xcd8>
   1ae6c:	mov	r5, #1
   1ae70:	b	1ac34 <_obstack_memory_used@@Base+0x1e54>
   1ae74:	mov	r5, #0
   1ae78:	b	1ac34 <_obstack_memory_used@@Base+0x1e54>
   1ae7c:	ldr	r2, [r4, #28]
   1ae80:	ldr	r3, [r4, #32]
   1ae84:	cmp	r2, r3
   1ae88:	bcs	1aea4 <_obstack_memory_used@@Base+0x20c4>
   1ae8c:	ldr	r3, [r4, #28]
   1ae90:	add	r2, r3, #1
   1ae94:	str	r2, [r4, #28]
   1ae98:	mov	r2, #10
   1ae9c:	strb	r2, [r3]
   1aea0:	b	1ac90 <_obstack_memory_used@@Base+0x1eb0>
   1aea4:	mov	r1, #1
   1aea8:	mov	r0, r4
   1aeac:	bl	1e3ac <argp_error@@Base+0x1450>
   1aeb0:	cmp	r0, #0
   1aeb4:	bne	1ae8c <_obstack_memory_used@@Base+0x20ac>
   1aeb8:	b	1ac90 <_obstack_memory_used@@Base+0x1eb0>
   1aebc:	ldr	r3, [r4, #28]
   1aec0:	add	r3, r3, r5
   1aec4:	ldr	r2, [r4, #32]
   1aec8:	cmp	r2, r3
   1aecc:	bcs	1aee4 <_obstack_memory_used@@Base+0x2104>
   1aed0:	mov	r1, r5
   1aed4:	mov	r0, r4
   1aed8:	bl	1e3ac <argp_error@@Base+0x1450>
   1aedc:	cmp	r0, #0
   1aee0:	beq	1aca0 <_obstack_memory_used@@Base+0x1ec0>
   1aee4:	mov	r2, r5
   1aee8:	mov	r1, r6
   1aeec:	ldr	r0, [r4, #28]
   1aef0:	bl	11364 <memcpy@plt>
   1aef4:	ldr	r3, [r4, #28]
   1aef8:	add	r5, r3, r5
   1aefc:	str	r5, [r4, #28]
   1af00:	b	1aca0 <_obstack_memory_used@@Base+0x1ec0>
   1af04:	mov	r0, r4
   1af08:	bl	1de34 <argp_error@@Base+0xed8>
   1af0c:	b	1acc0 <_obstack_memory_used@@Base+0x1ee0>
   1af10:	ldr	r2, [r4, #28]
   1af14:	ldr	r3, [r4, #32]
   1af18:	cmp	r2, r3
   1af1c:	bcs	1af3c <_obstack_memory_used@@Base+0x215c>
   1af20:	ldr	r3, [r4, #28]
   1af24:	add	r2, r3, #1
   1af28:	str	r2, [r4, #28]
   1af2c:	mov	r2, #10
   1af30:	strb	r2, [r3]
   1af34:	mov	r5, #1
   1af38:	b	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1af3c:	mov	r1, #1
   1af40:	mov	r0, r4
   1af44:	bl	1e3ac <argp_error@@Base+0x1450>
   1af48:	cmp	r0, #0
   1af4c:	bne	1af20 <_obstack_memory_used@@Base+0x2140>
   1af50:	mov	r5, #1
   1af54:	b	1acd8 <_obstack_memory_used@@Base+0x1ef8>
   1af58:	ldr	r3, [r0, #20]
   1af5c:	cmp	r3, #0
   1af60:	moveq	r5, r6
   1af64:	beq	1afac <_obstack_memory_used@@Base+0x21cc>
   1af68:	ldr	r1, [sp, #12]
   1af6c:	mov	r0, r8
   1af70:	bl	1877c <argp_parse@@Base+0xb54>
   1af74:	str	r0, [sp, #16]
   1af78:	ldr	r3, [r8, #20]
   1af7c:	mov	r7, #0
   1af80:	mov	r0, #2
   1af84:	movt	r0, #512	; 0x200
   1af88:	mov	r2, #1
   1af8c:	movt	r2, #512	; 0x200
   1af90:	ldr	r1, [sp, #8]
   1af94:	cmp	r1, r7
   1af98:	moveq	r0, r2
   1af9c:	b	1ab80 <_obstack_memory_used@@Base+0x1da0>
   1afa0:	mov	r6, r0
   1afa4:	b	1ab04 <_obstack_memory_used@@Base+0x1d24>
   1afa8:	mov	r5, r6
   1afac:	cmp	r5, #0
   1afb0:	streq	r5, [sp, #16]
   1afb4:	beq	1ac54 <_obstack_memory_used@@Base+0x1e74>
   1afb8:	mov	r7, #0
   1afbc:	str	r7, [sp, #16]
   1afc0:	b	1ab94 <_obstack_memory_used@@Base+0x1db4>
   1afc4:	ldr	r3, [r8, #20]
   1afc8:	cmp	r3, #0
   1afcc:	moveq	r5, r6
   1afd0:	beq	1afac <_obstack_memory_used@@Base+0x21cc>
   1afd4:	ldr	r1, [sp, #12]
   1afd8:	mov	r0, r8
   1afdc:	bl	1877c <argp_parse@@Base+0xb54>
   1afe0:	str	r0, [sp, #16]
   1afe4:	ldr	r3, [r8, #20]
   1afe8:	mov	r7, #0
   1afec:	mov	r0, #1
   1aff0:	movt	r0, #512	; 0x200
   1aff4:	b	1ab80 <_obstack_memory_used@@Base+0x1da0>
   1aff8:	ldr	r3, [r0, #12]
   1affc:	ldr	r2, [r1, #12]
   1b000:	cmp	r3, r2
   1b004:	beq	1b074 <_obstack_memory_used@@Base+0x2294>
   1b008:	strd	r4, [sp, #-16]!
   1b00c:	str	r6, [sp, #8]
   1b010:	str	lr, [sp, #12]
   1b014:	mov	r5, r1
   1b018:	mov	r4, r0
   1b01c:	mov	r1, r2
   1b020:	mov	r0, r3
   1b024:	bl	1aff8 <_obstack_memory_used@@Base+0x2218>
   1b028:	subs	r3, r0, #0
   1b02c:	bne	1b060 <_obstack_memory_used@@Base+0x2280>
   1b030:	ldr	r0, [r4, #8]
   1b034:	ldr	r3, [r5, #8]
   1b038:	mvn	r2, r3
   1b03c:	lsr	r2, r2, #31
   1b040:	cmp	r2, r0, lsr #31
   1b044:	subne	r3, r0, r3
   1b048:	subeq	r3, r3, r0
   1b04c:	cmp	r3, #0
   1b050:	bne	1b060 <_obstack_memory_used@@Base+0x2280>
   1b054:	ldr	r3, [r5, #4]
   1b058:	ldr	r0, [r4, #4]
   1b05c:	sub	r3, r3, r0
   1b060:	mov	r0, r3
   1b064:	ldrd	r4, [sp]
   1b068:	ldr	r6, [sp, #8]
   1b06c:	add	sp, sp, #12
   1b070:	pop	{pc}		; (ldr pc, [sp], #4)
   1b074:	ldr	r2, [r0, #8]
   1b078:	ldr	r3, [r1, #8]
   1b07c:	mvn	ip, r3
   1b080:	lsr	ip, ip, #31
   1b084:	cmp	ip, r2, lsr #31
   1b088:	subne	r3, r2, r3
   1b08c:	subeq	r3, r3, r2
   1b090:	cmp	r3, #0
   1b094:	bne	1b0a4 <_obstack_memory_used@@Base+0x22c4>
   1b098:	ldr	r3, [r1, #4]
   1b09c:	ldr	r0, [r0, #4]
   1b0a0:	sub	r3, r3, r0
   1b0a4:	mov	r0, r3
   1b0a8:	bx	lr
   1b0ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b0b0:	strd	r6, [sp, #8]
   1b0b4:	str	r8, [sp, #16]
   1b0b8:	str	lr, [sp, #20]
   1b0bc:	sub	sp, sp, #8
   1b0c0:	ldr	lr, [r0, #16]
   1b0c4:	cmp	lr, #0
   1b0c8:	movne	r3, lr
   1b0cc:	bne	1b0dc <_obstack_memory_used@@Base+0x22fc>
   1b0d0:	ldr	ip, [r0, #12]
   1b0d4:	b	1b0ec <_obstack_memory_used@@Base+0x230c>
   1b0d8:	mov	r3, r2
   1b0dc:	ldr	r2, [r3, #12]
   1b0e0:	cmp	r2, #0
   1b0e4:	bne	1b0d8 <_obstack_memory_used@@Base+0x22f8>
   1b0e8:	ldr	ip, [r3, #8]
   1b0ec:	ldr	r5, [r1, #16]
   1b0f0:	cmp	r5, #0
   1b0f4:	movne	r3, r5
   1b0f8:	bne	1b108 <_obstack_memory_used@@Base+0x2328>
   1b0fc:	ldr	r4, [r1, #12]
   1b100:	b	1b118 <_obstack_memory_used@@Base+0x2338>
   1b104:	mov	r3, r2
   1b108:	ldr	r2, [r3, #12]
   1b10c:	cmp	r2, #0
   1b110:	bne	1b104 <_obstack_memory_used@@Base+0x2324>
   1b114:	ldr	r4, [r3, #8]
   1b118:	mvn	r3, r4
   1b11c:	lsr	r3, r3, #31
   1b120:	cmp	r3, ip, lsr #31
   1b124:	subne	r4, ip, r4
   1b128:	subeq	r4, r4, ip
   1b12c:	cmp	r4, #0
   1b130:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b134:	adds	r4, r5, #0
   1b138:	movne	r4, #1
   1b13c:	cmp	lr, #0
   1b140:	rsbeq	r4, r4, #0
   1b144:	rsbne	r4, r4, #1
   1b148:	cmp	r4, #0
   1b14c:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b150:	mov	r7, r1
   1b154:	mov	r6, r0
   1b158:	cmp	lr, #0
   1b15c:	beq	1b1dc <_obstack_memory_used@@Base+0x23fc>
   1b160:	ldr	r1, [lr, #20]
   1b164:	ldr	r2, [r5, #20]
   1b168:	cmp	r1, r2
   1b16c:	ble	1b198 <_obstack_memory_used@@Base+0x23b8>
   1b170:	ldr	lr, [lr, #12]
   1b174:	ldr	r3, [lr, #20]
   1b178:	cmp	r2, r3
   1b17c:	blt	1b170 <_obstack_memory_used@@Base+0x2390>
   1b180:	mov	r1, r5
   1b184:	mov	r0, lr
   1b188:	bl	1aff8 <_obstack_memory_used@@Base+0x2218>
   1b18c:	subs	r4, r0, #0
   1b190:	moveq	r4, #1
   1b194:	b	1b270 <_obstack_memory_used@@Base+0x2490>
   1b198:	cmp	r1, r2
   1b19c:	bge	1b1c8 <_obstack_memory_used@@Base+0x23e8>
   1b1a0:	ldr	r5, [r5, #12]
   1b1a4:	ldr	r3, [r5, #20]
   1b1a8:	cmp	r1, r3
   1b1ac:	blt	1b1a0 <_obstack_memory_used@@Base+0x23c0>
   1b1b0:	mov	r1, r5
   1b1b4:	mov	r0, lr
   1b1b8:	bl	1aff8 <_obstack_memory_used@@Base+0x2218>
   1b1bc:	subs	r4, r0, #0
   1b1c0:	mvneq	r4, #0
   1b1c4:	b	1b270 <_obstack_memory_used@@Base+0x2490>
   1b1c8:	mov	r1, r5
   1b1cc:	mov	r0, lr
   1b1d0:	bl	1aff8 <_obstack_memory_used@@Base+0x2218>
   1b1d4:	subs	r4, r0, #0
   1b1d8:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b1dc:	ldr	r3, [r6, #12]
   1b1e0:	ldr	r4, [r7, #12]
   1b1e4:	mvn	r2, r4
   1b1e8:	lsr	r2, r2, #31
   1b1ec:	cmp	r2, r3, lsr #31
   1b1f0:	subne	r4, r3, r4
   1b1f4:	subeq	r4, r4, r3
   1b1f8:	cmp	r4, #0
   1b1fc:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b200:	mov	r0, r6
   1b204:	bl	19c70 <_obstack_memory_used@@Base+0xe90>
   1b208:	mov	r5, r0
   1b20c:	str	r0, [sp]
   1b210:	mov	r0, r7
   1b214:	bl	19c70 <_obstack_memory_used@@Base+0xe90>
   1b218:	str	r0, [sp, #4]
   1b21c:	ldr	r3, [r6]
   1b220:	ldr	r0, [r3, #12]
   1b224:	ubfx	r0, r0, #3, #1
   1b228:	cmp	r5, #0
   1b22c:	moveq	r0, #0
   1b230:	cmp	r0, #0
   1b234:	bne	1b28c <_obstack_memory_used@@Base+0x24ac>
   1b238:	ldr	r3, [r7]
   1b23c:	ldr	r3, [r3, #12]
   1b240:	tst	r3, #8
   1b244:	beq	1b2c4 <_obstack_memory_used@@Base+0x24e4>
   1b248:	ldr	r3, [sp, #4]
   1b24c:	cmp	r3, #0
   1b250:	beq	1b2c4 <_obstack_memory_used@@Base+0x24e4>
   1b254:	add	r0, sp, #4
   1b258:	bl	19d0c <_obstack_memory_used@@Base+0xf2c>
   1b25c:	adds	r3, r0, #0
   1b260:	movne	r3, #1
   1b264:	mov	r0, r4
   1b268:	subs	r4, r0, r3
   1b26c:	beq	1b2c4 <_obstack_memory_used@@Base+0x24e4>
   1b270:	mov	r0, r4
   1b274:	add	sp, sp, #8
   1b278:	ldrd	r4, [sp]
   1b27c:	ldrd	r6, [sp, #8]
   1b280:	ldr	r8, [sp, #16]
   1b284:	add	sp, sp, #20
   1b288:	pop	{pc}		; (ldr pc, [sp], #4)
   1b28c:	mov	r0, sp
   1b290:	bl	19d0c <_obstack_memory_used@@Base+0xf2c>
   1b294:	adds	r0, r0, #0
   1b298:	movne	r0, #1
   1b29c:	ldr	r3, [r7]
   1b2a0:	ldr	r3, [r3, #12]
   1b2a4:	ands	r3, r3, #8
   1b2a8:	beq	1b268 <_obstack_memory_used@@Base+0x2488>
   1b2ac:	ldr	r3, [sp, #4]
   1b2b0:	cmp	r3, #0
   1b2b4:	moveq	r3, r4
   1b2b8:	beq	1b268 <_obstack_memory_used@@Base+0x2488>
   1b2bc:	mov	r4, r0
   1b2c0:	b	1b254 <_obstack_memory_used@@Base+0x2474>
   1b2c4:	ldr	r2, [r6, #20]
   1b2c8:	movw	r4, #41748	; 0xa314
   1b2cc:	movt	r4, #1
   1b2d0:	mov	r3, #0
   1b2d4:	ldr	r2, [r2, #24]
   1b2d8:	mov	r1, r4
   1b2dc:	mov	r0, r6
   1b2e0:	bl	19f7c <_obstack_memory_used@@Base+0x119c>
   1b2e4:	mov	r5, r0
   1b2e8:	uxtb	r8, r0
   1b2ec:	ldr	r2, [r7, #20]
   1b2f0:	mov	r3, #0
   1b2f4:	ldr	r2, [r2, #24]
   1b2f8:	mov	r1, r4
   1b2fc:	mov	r0, r7
   1b300:	bl	19f7c <_obstack_memory_used@@Base+0x119c>
   1b304:	uxtb	r7, r0
   1b308:	cmp	r8, #0
   1b30c:	movne	r5, r8
   1b310:	bne	1b324 <_obstack_memory_used@@Base+0x2544>
   1b314:	ldr	r3, [sp]
   1b318:	cmp	r3, #0
   1b31c:	ldrbne	r5, [r3]
   1b320:	moveq	r5, #0
   1b324:	cmp	r7, #0
   1b328:	uxtbne	r6, r0
   1b32c:	bne	1b340 <_obstack_memory_used@@Base+0x2560>
   1b330:	ldr	r3, [sp, #4]
   1b334:	cmp	r3, #0
   1b338:	ldrbne	r6, [r3]
   1b33c:	moveq	r6, #0
   1b340:	bl	11448 <__ctype_tolower_loc@plt>
   1b344:	ldr	r3, [r0]
   1b348:	ldr	r4, [r3, r5, lsl #2]
   1b34c:	ldr	r3, [r3, r6, lsl #2]
   1b350:	subs	r4, r4, r3
   1b354:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b358:	subs	r4, r6, r5
   1b35c:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b360:	adds	r4, r7, #0
   1b364:	movne	r4, #1
   1b368:	cmp	r8, #0
   1b36c:	rsbeq	r4, r4, #0
   1b370:	rsbne	r4, r4, #1
   1b374:	cmp	r4, #0
   1b378:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b37c:	cmp	r8, #0
   1b380:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b384:	ldr	r0, [sp]
   1b388:	ldr	r1, [sp, #4]
   1b38c:	adds	r4, r1, #0
   1b390:	movne	r4, #1
   1b394:	cmp	r0, #0
   1b398:	rsbeq	r4, r4, #0
   1b39c:	rsbne	r4, r4, #1
   1b3a0:	cmp	r4, #0
   1b3a4:	bne	1b270 <_obstack_memory_used@@Base+0x2490>
   1b3a8:	cmp	r0, #0
   1b3ac:	beq	1b270 <_obstack_memory_used@@Base+0x2490>
   1b3b0:	bl	113ac <strcasecmp@plt>
   1b3b4:	mov	r4, r0
   1b3b8:	b	1b270 <_obstack_memory_used@@Base+0x2490>
   1b3bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b3c0:	strd	r6, [sp, #8]
   1b3c4:	strd	r8, [sp, #16]
   1b3c8:	strd	sl, [sp, #24]
   1b3cc:	str	lr, [sp, #32]
   1b3d0:	sub	sp, sp, #52	; 0x34
   1b3d4:	str	r0, [sp, #12]
   1b3d8:	str	r1, [sp, #4]
   1b3dc:	ldr	fp, [r0, #16]
   1b3e0:	ldr	r4, [r0]
   1b3e4:	mov	r0, #16
   1b3e8:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b3ec:	subs	sl, r0, #0
   1b3f0:	beq	1b420 <_obstack_memory_used@@Base+0x2640>
   1b3f4:	mov	r3, #0
   1b3f8:	str	r3, [sl, #4]
   1b3fc:	str	r3, [sl, #12]
   1b400:	cmp	r4, r3
   1b404:	beq	1b62c <_obstack_memory_used@@Base+0x284c>
   1b408:	ldr	r3, [r4, #12]
   1b40c:	tst	r3, #4
   1b410:	bne	1b440 <_obstack_memory_used@@Base+0x2660>
   1b414:	add	r5, r4, #24
   1b418:	mov	r6, #0
   1b41c:	b	1b464 <_obstack_memory_used@@Base+0x2684>
   1b420:	movw	r3, #5408	; 0x1520
   1b424:	movt	r3, #2
   1b428:	movw	r2, #450	; 0x1c2
   1b42c:	movw	r1, #5648	; 0x1610
   1b430:	movt	r1, #2
   1b434:	movw	r0, #5660	; 0x161c
   1b438:	movt	r0, #2
   1b43c:	bl	1161c <__assert_fail@plt>
   1b440:	movw	r3, #5408	; 0x1520
   1b444:	movt	r3, #2
   1b448:	mov	r2, #460	; 0x1cc
   1b44c:	movw	r1, #5648	; 0x1610
   1b450:	movt	r1, #2
   1b454:	movw	r0, #5664	; 0x1620
   1b458:	movt	r0, #2
   1b45c:	bl	1161c <__assert_fail@plt>
   1b460:	add	r5, r5, #24
   1b464:	mov	r3, r5
   1b468:	ldr	r2, [r5, #-20]	; 0xffffffec
   1b46c:	cmp	r2, #0
   1b470:	bne	1b480 <_obstack_memory_used@@Base+0x26a0>
   1b474:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1b478:	cmp	r2, #0
   1b47c:	beq	1b4d0 <_obstack_memory_used@@Base+0x26f0>
   1b480:	ldr	r2, [r3, #-12]
   1b484:	tst	r2, #4
   1b488:	bne	1b498 <_obstack_memory_used@@Base+0x26b8>
   1b48c:	ldr	r2, [sl, #4]
   1b490:	add	r2, r2, #1
   1b494:	str	r2, [sl, #4]
   1b498:	ldr	r2, [r3, #-12]
   1b49c:	tst	r2, #8
   1b4a0:	bne	1b460 <_obstack_memory_used@@Base+0x2680>
   1b4a4:	ldr	r7, [r3, #-20]	; 0xffffffec
   1b4a8:	sub	r3, r7, #1
   1b4ac:	cmp	r3, #254	; 0xfe
   1b4b0:	bhi	1b460 <_obstack_memory_used@@Base+0x2680>
   1b4b4:	bl	11478 <__ctype_b_loc@plt>
   1b4b8:	ldr	r3, [r0]
   1b4bc:	lsl	r7, r7, #1
   1b4c0:	ldrh	r3, [r3, r7]
   1b4c4:	tst	r3, #16384	; 0x4000
   1b4c8:	addne	r6, r6, #1
   1b4cc:	b	1b460 <_obstack_memory_used@@Base+0x2680>
   1b4d0:	ldr	r2, [r5, #-8]
   1b4d4:	cmp	r2, #0
   1b4d8:	bne	1b480 <_obstack_memory_used@@Base+0x26a0>
   1b4dc:	ldr	r9, [r5, #-4]
   1b4e0:	cmp	r9, #0
   1b4e4:	bne	1b480 <_obstack_memory_used@@Base+0x26a0>
   1b4e8:	ldr	r0, [sl, #4]
   1b4ec:	rsb	r0, r0, r0, lsl #3
   1b4f0:	lsl	r0, r0, #2
   1b4f4:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b4f8:	str	r0, [sl]
   1b4fc:	add	r0, r6, #1
   1b500:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b504:	mov	r5, r0
   1b508:	str	r0, [sl, #8]
   1b50c:	ldr	r7, [sl]
   1b510:	cmp	r0, #0
   1b514:	cmpne	r7, #0
   1b518:	beq	1b540 <_obstack_memory_used@@Base+0x2760>
   1b51c:	movw	r3, #37449	; 0x9249
   1b520:	movt	r3, #2340	; 0x924
   1b524:	ldr	r2, [sl, #4]
   1b528:	cmp	r2, r3
   1b52c:	bhi	1b560 <_obstack_memory_used@@Base+0x2780>
   1b530:	add	r7, r7, #28
   1b534:	str	fp, [sp, #8]
   1b538:	ldr	fp, [sp, #12]
   1b53c:	b	1b5ac <_obstack_memory_used@@Base+0x27cc>
   1b540:	movw	r3, #5408	; 0x1520
   1b544:	movt	r3, #2
   1b548:	movw	r2, #474	; 0x1da
   1b54c:	movw	r1, #5648	; 0x1610
   1b550:	movt	r1, #2
   1b554:	movw	r0, #5680	; 0x1630
   1b558:	movt	r0, #2
   1b55c:	bl	1161c <__assert_fail@plt>
   1b560:	movw	r3, #5408	; 0x1520
   1b564:	movt	r3, #2
   1b568:	mov	r2, #476	; 0x1dc
   1b56c:	movw	r1, #5648	; 0x1610
   1b570:	movt	r1, #2
   1b574:	movw	r0, #5716	; 0x1654
   1b578:	movt	r0, #2
   1b57c:	bl	1161c <__assert_fail@plt>
   1b580:	ldr	r3, [r4, #4]
   1b584:	cmp	r3, #0
   1b588:	addeq	r9, r9, #1
   1b58c:	b	1b5f4 <_obstack_memory_used@@Base+0x2814>
   1b590:	ldr	r3, [r4, #16]
   1b594:	cmp	r3, #0
   1b598:	bne	1b9cc <_obstack_memory_used@@Base+0x2bec>
   1b59c:	ldr	r3, [r4, #20]
   1b5a0:	cmp	r3, #0
   1b5a4:	bne	1b9cc <_obstack_memory_used@@Base+0x2bec>
   1b5a8:	add	r7, r7, #28
   1b5ac:	ldr	r3, [r4, #4]
   1b5b0:	cmp	r3, #0
   1b5b4:	bne	1b5c4 <_obstack_memory_used@@Base+0x27e4>
   1b5b8:	ldr	r3, [r4]
   1b5bc:	cmp	r3, #0
   1b5c0:	beq	1b608 <_obstack_memory_used@@Base+0x2828>
   1b5c4:	mov	r8, r7
   1b5c8:	str	r4, [r7, #-28]	; 0xffffffe4
   1b5cc:	mov	r3, #0
   1b5d0:	str	r3, [r7, #-24]	; 0xffffffe8
   1b5d4:	str	r5, [r7, #-20]	; 0xffffffec
   1b5d8:	ldr	r3, [r4, #20]
   1b5dc:	cmp	r3, #0
   1b5e0:	movne	r9, r3
   1b5e4:	bne	1b5f4 <_obstack_memory_used@@Base+0x2814>
   1b5e8:	ldr	r3, [r4]
   1b5ec:	cmp	r3, #0
   1b5f0:	beq	1b580 <_obstack_memory_used@@Base+0x27a0>
   1b5f4:	str	r9, [r8, #-16]
   1b5f8:	ldr	r3, [sp, #4]
   1b5fc:	str	r3, [r8, #-12]
   1b600:	str	fp, [r8, #-8]
   1b604:	b	1b9d8 <_obstack_memory_used@@Base+0x2bf8>
   1b608:	ldr	r3, [r4, #16]
   1b60c:	cmp	r3, #0
   1b610:	bne	1b5c4 <_obstack_memory_used@@Base+0x27e4>
   1b614:	ldr	r3, [r4, #20]
   1b618:	cmp	r3, #0
   1b61c:	bne	1b5c4 <_obstack_memory_used@@Base+0x27e4>
   1b620:	ldr	fp, [sp, #8]
   1b624:	mov	r3, #0
   1b628:	strb	r3, [r5]
   1b62c:	cmp	fp, #0
   1b630:	beq	1ba50 <_obstack_memory_used@@Base+0x2c70>
   1b634:	ldr	r3, [fp]
   1b638:	cmp	r3, #0
   1b63c:	beq	1ba50 <_obstack_memory_used@@Base+0x2c70>
   1b640:	movw	r3, #37449	; 0x9249
   1b644:	movt	r3, #2340	; 0x924
   1b648:	str	r3, [sp, #32]
   1b64c:	b	1b6c0 <_obstack_memory_used@@Base+0x28e0>
   1b650:	ldr	r1, [sp, #4]
   1b654:	b	1b738 <_obstack_memory_used@@Base+0x2958>
   1b658:	mov	r3, r2
   1b65c:	ldr	r2, [r3, #24]
   1b660:	cmp	r2, #0
   1b664:	bne	1b658 <_obstack_memory_used@@Base+0x2878>
   1b668:	add	r3, r3, #24
   1b66c:	ldr	r2, [r5, #12]
   1b670:	str	r2, [r3]
   1b674:	mov	r1, #0
   1b678:	str	r1, [r5, #12]
   1b67c:	ldr	r3, [r5, #4]
   1b680:	cmp	r3, r1
   1b684:	beq	1b6ac <_obstack_memory_used@@Base+0x28cc>
   1b688:	ldr	r2, [sl, #4]
   1b68c:	cmp	r2, r1
   1b690:	bne	1b758 <_obstack_memory_used@@Base+0x2978>
   1b694:	str	r3, [sl, #4]
   1b698:	ldr	r3, [r5]
   1b69c:	str	r3, [sl]
   1b6a0:	ldr	r3, [r5, #8]
   1b6a4:	str	r3, [sl, #8]
   1b6a8:	str	r1, [r5, #4]
   1b6ac:	mov	r0, r5
   1b6b0:	bl	19d94 <_obstack_memory_used@@Base+0xfb4>
   1b6b4:	ldr	r3, [fp, #16]!
   1b6b8:	cmp	r3, #0
   1b6bc:	beq	1ba50 <_obstack_memory_used@@Base+0x2c70>
   1b6c0:	mov	r5, fp
   1b6c4:	ldr	r6, [fp, #12]
   1b6c8:	cmp	r6, #0
   1b6cc:	bne	1b6dc <_obstack_memory_used@@Base+0x28fc>
   1b6d0:	ldr	r3, [fp, #8]
   1b6d4:	cmp	r3, #0
   1b6d8:	beq	1b650 <_obstack_memory_used@@Base+0x2870>
   1b6dc:	ldr	r7, [r5, #8]
   1b6e0:	ldr	r8, [sp, #12]
   1b6e4:	ldr	r4, [r8, #16]
   1b6e8:	mov	r0, #28
   1b6ec:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b6f0:	subs	r1, r0, #0
   1b6f4:	beq	1b738 <_obstack_memory_used@@Base+0x2958>
   1b6f8:	str	r6, [r1, #8]
   1b6fc:	str	r7, [r1]
   1b700:	sub	r4, r5, r4
   1b704:	asr	r4, r4, #4
   1b708:	str	r4, [r1, #4]
   1b70c:	ldr	r3, [sp, #4]
   1b710:	str	r3, [r1, #12]
   1b714:	str	r8, [r1, #16]
   1b718:	cmp	r3, #0
   1b71c:	ldrne	r3, [r3, #20]
   1b720:	addne	r3, r3, #1
   1b724:	moveq	r3, #0
   1b728:	str	r3, [r1, #20]
   1b72c:	ldr	r3, [sl, #12]
   1b730:	str	r3, [r1, #24]
   1b734:	str	r1, [sl, #12]
   1b738:	ldr	r0, [r5]
   1b73c:	bl	1b3bc <_obstack_memory_used@@Base+0x25dc>
   1b740:	mov	r5, r0
   1b744:	ldr	r3, [sl, #12]
   1b748:	cmp	r3, #0
   1b74c:	bne	1b65c <_obstack_memory_used@@Base+0x287c>
   1b750:	add	r3, sl, #12
   1b754:	b	1b66c <_obstack_memory_used@@Base+0x288c>
   1b758:	add	r3, r3, r2
   1b75c:	str	r3, [sp, #24]
   1b760:	rsb	r0, r3, r3, lsl #3
   1b764:	lsl	r0, r0, #2
   1b768:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b76c:	mov	r4, r0
   1b770:	str	r0, [sp, #20]
   1b774:	ldr	r0, [sl, #8]
   1b778:	bl	1149c <strlen@plt>
   1b77c:	mov	r7, r0
   1b780:	ldr	r0, [r5, #8]
   1b784:	bl	1149c <strlen@plt>
   1b788:	add	r0, r7, r0
   1b78c:	add	r0, r0, #1
   1b790:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1b794:	mov	r9, r0
   1b798:	cmp	r4, #0
   1b79c:	cmpne	r0, #0
   1b7a0:	beq	1b86c <_obstack_memory_used@@Base+0x2a8c>
   1b7a4:	ldr	r3, [sp, #24]
   1b7a8:	ldr	r2, [sp, #32]
   1b7ac:	cmp	r3, r2
   1b7b0:	bhi	1b888 <_obstack_memory_used@@Base+0x2aa8>
   1b7b4:	ldr	r1, [sl]
   1b7b8:	str	r1, [sp, #28]
   1b7bc:	ldr	r4, [sl, #4]
   1b7c0:	rsb	r8, r4, r4, lsl #3
   1b7c4:	lsl	r8, r8, #2
   1b7c8:	mov	r2, r8
   1b7cc:	ldr	r0, [sp, #20]
   1b7d0:	bl	1146c <mempcpy@plt>
   1b7d4:	ldr	r3, [r5, #4]
   1b7d8:	str	r3, [sp, #16]
   1b7dc:	rsb	r2, r3, r3, lsl #3
   1b7e0:	lsl	r2, r2, #2
   1b7e4:	ldr	r1, [r5]
   1b7e8:	bl	11364 <memcpy@plt>
   1b7ec:	ldr	r6, [sl, #8]
   1b7f0:	mov	r2, r7
   1b7f4:	mov	r1, r6
   1b7f8:	mov	r0, r9
   1b7fc:	bl	11364 <memcpy@plt>
   1b800:	cmp	r4, #0
   1b804:	beq	1b8a4 <_obstack_memory_used@@Base+0x2ac4>
   1b808:	ldr	r2, [sp, #20]
   1b80c:	ldr	r3, [r2, #8]
   1b810:	sub	r3, r3, r6
   1b814:	add	r3, r9, r3
   1b818:	str	r3, [r2, #8]
   1b81c:	add	r2, r2, #28
   1b820:	subs	r4, r4, #1
   1b824:	bne	1b80c <_obstack_memory_used@@Base+0x2a2c>
   1b828:	ldr	r3, [sp, #20]
   1b82c:	add	r4, r3, r8
   1b830:	add	r3, r9, r7
   1b834:	str	r3, [sp, #8]
   1b838:	ldr	r1, [r5, #8]
   1b83c:	ldr	r8, [sp, #16]
   1b840:	cmp	r8, #0
   1b844:	beq	1b948 <_obstack_memory_used@@Base+0x2b68>
   1b848:	add	r4, r4, #28
   1b84c:	sub	r2, r3, #1
   1b850:	str	r2, [sp, #16]
   1b854:	str	r5, [sp, #36]	; 0x24
   1b858:	str	fp, [sp, #40]	; 0x28
   1b85c:	mov	fp, r3
   1b860:	str	sl, [sp, #44]	; 0x2c
   1b864:	mov	sl, r1
   1b868:	b	1b8f0 <_obstack_memory_used@@Base+0x2b10>
   1b86c:	ldr	r3, [pc, #508]	; 1ba70 <_obstack_memory_used@@Base+0x2c90>
   1b870:	movw	r2, #970	; 0x3ca
   1b874:	movw	r1, #5648	; 0x1610
   1b878:	movt	r1, #2
   1b87c:	movw	r0, #5776	; 0x1690
   1b880:	movt	r0, #2
   1b884:	bl	1161c <__assert_fail@plt>
   1b888:	ldr	r3, [pc, #480]	; 1ba70 <_obstack_memory_used@@Base+0x2c90>
   1b88c:	mov	r2, #972	; 0x3cc
   1b890:	movw	r1, #5648	; 0x1610
   1b894:	movt	r1, #2
   1b898:	movw	r0, #5804	; 0x16ac
   1b89c:	movt	r0, #2
   1b8a0:	bl	1161c <__assert_fail@plt>
   1b8a4:	ldr	r4, [sp, #20]
   1b8a8:	b	1b830 <_obstack_memory_used@@Base+0x2a50>
   1b8ac:	ldr	r2, [sp, #8]
   1b8b0:	cmp	r9, r2
   1b8b4:	bcs	1b950 <_obstack_memory_used@@Base+0x2b70>
   1b8b8:	ldrb	r2, [r9]
   1b8bc:	cmp	r2, r3
   1b8c0:	beq	1b954 <_obstack_memory_used@@Base+0x2b74>
   1b8c4:	mov	r2, r9
   1b8c8:	ldr	r1, [sp, #16]
   1b8cc:	cmp	r1, r2
   1b8d0:	beq	1b950 <_obstack_memory_used@@Base+0x2b70>
   1b8d4:	ldrb	r1, [r2, #1]!
   1b8d8:	cmp	r1, r3
   1b8dc:	bne	1b8c8 <_obstack_memory_used@@Base+0x2ae8>
   1b8e0:	b	1b954 <_obstack_memory_used@@Base+0x2b74>
   1b8e4:	add	r4, r4, #28
   1b8e8:	subs	r8, r8, #1
   1b8ec:	beq	1b908 <_obstack_memory_used@@Base+0x2b28>
   1b8f0:	str	fp, [r4, #-20]	; 0xffffffec
   1b8f4:	ldr	r5, [r4, #-24]	; 0xffffffe8
   1b8f8:	ldr	r6, [r4, #-28]	; 0xffffffe4
   1b8fc:	cmp	r5, #0
   1b900:	bne	1b974 <_obstack_memory_used@@Base+0x2b94>
   1b904:	b	1b8e4 <_obstack_memory_used@@Base+0x2b04>
   1b908:	ldr	r5, [sp, #36]	; 0x24
   1b90c:	mov	r3, fp
   1b910:	ldr	fp, [sp, #40]	; 0x28
   1b914:	ldr	sl, [sp, #44]	; 0x2c
   1b918:	mov	r2, #0
   1b91c:	strb	r2, [r3]
   1b920:	ldr	r0, [sp, #28]
   1b924:	bl	18900 <argp_parse@@Base+0xcd8>
   1b928:	ldr	r0, [sl, #8]
   1b92c:	bl	18900 <argp_parse@@Base+0xcd8>
   1b930:	ldr	r3, [sp, #20]
   1b934:	str	r3, [sl]
   1b938:	ldr	r3, [sp, #24]
   1b93c:	str	r3, [sl, #4]
   1b940:	str	r9, [sl, #8]
   1b944:	b	1b6ac <_obstack_memory_used@@Base+0x28cc>
   1b948:	ldr	r3, [sp, #8]
   1b94c:	b	1b918 <_obstack_memory_used@@Base+0x2b38>
   1b950:	strb	r3, [fp], #1
   1b954:	add	sl, sl, #1
   1b958:	b	1b968 <_obstack_memory_used@@Base+0x2b88>
   1b95c:	ldrb	r3, [sl]
   1b960:	cmp	r3, r7
   1b964:	beq	1b8ac <_obstack_memory_used@@Base+0x2acc>
   1b968:	add	r6, r6, #24
   1b96c:	subs	r5, r5, #1
   1b970:	beq	1b8e4 <_obstack_memory_used@@Base+0x2b04>
   1b974:	ldr	r3, [r6, #12]
   1b978:	tst	r3, #8
   1b97c:	bne	1b968 <_obstack_memory_used@@Base+0x2b88>
   1b980:	ldr	r7, [r6, #4]
   1b984:	sub	r3, r7, #1
   1b988:	cmp	r3, #254	; 0xfe
   1b98c:	bhi	1b968 <_obstack_memory_used@@Base+0x2b88>
   1b990:	bl	11478 <__ctype_b_loc@plt>
   1b994:	ldr	r2, [r0]
   1b998:	lsl	r3, r7, #1
   1b99c:	ldrh	r3, [r2, r3]
   1b9a0:	tst	r3, #16384	; 0x4000
   1b9a4:	bne	1b95c <_obstack_memory_used@@Base+0x2b7c>
   1b9a8:	b	1b968 <_obstack_memory_used@@Base+0x2b88>
   1b9ac:	strb	r6, [r5], #1
   1b9b0:	add	r4, r4, #24
   1b9b4:	ldr	r3, [r4, #4]
   1b9b8:	cmp	r3, #0
   1b9bc:	bne	1b9cc <_obstack_memory_used@@Base+0x2bec>
   1b9c0:	ldr	r3, [r4]
   1b9c4:	cmp	r3, #0
   1b9c8:	beq	1b590 <_obstack_memory_used@@Base+0x27b0>
   1b9cc:	ldr	r3, [r4, #12]
   1b9d0:	tst	r3, #4
   1b9d4:	beq	1b5a8 <_obstack_memory_used@@Base+0x27c8>
   1b9d8:	ldr	r3, [r8, #-24]	; 0xffffffe8
   1b9dc:	add	r3, r3, #1
   1b9e0:	str	r3, [r8, #-24]	; 0xffffffe8
   1b9e4:	ldr	r3, [r4, #12]
   1b9e8:	tst	r3, #8
   1b9ec:	bne	1b9b0 <_obstack_memory_used@@Base+0x2bd0>
   1b9f0:	ldr	r6, [r4, #4]
   1b9f4:	sub	r3, r6, #1
   1b9f8:	cmp	r3, #254	; 0xfe
   1b9fc:	bhi	1b9b0 <_obstack_memory_used@@Base+0x2bd0>
   1ba00:	bl	11478 <__ctype_b_loc@plt>
   1ba04:	ldr	r2, [r0]
   1ba08:	lsl	r3, r6, #1
   1ba0c:	ldrh	r3, [r2, r3]
   1ba10:	tst	r3, #16384	; 0x4000
   1ba14:	beq	1b9b0 <_obstack_memory_used@@Base+0x2bd0>
   1ba18:	uxtb	r6, r6
   1ba1c:	ldr	r3, [sl, #8]
   1ba20:	cmp	r3, r5
   1ba24:	bcs	1b9ac <_obstack_memory_used@@Base+0x2bcc>
   1ba28:	ldrb	r2, [r3]
   1ba2c:	cmp	r2, r6
   1ba30:	beq	1b9b0 <_obstack_memory_used@@Base+0x2bd0>
   1ba34:	sub	r2, r5, #1
   1ba38:	cmp	r3, r2
   1ba3c:	beq	1b9ac <_obstack_memory_used@@Base+0x2bcc>
   1ba40:	ldrb	r1, [r3, #1]!
   1ba44:	cmp	r1, r6
   1ba48:	bne	1ba38 <_obstack_memory_used@@Base+0x2c58>
   1ba4c:	b	1b9b0 <_obstack_memory_used@@Base+0x2bd0>
   1ba50:	mov	r0, sl
   1ba54:	add	sp, sp, #52	; 0x34
   1ba58:	ldrd	r4, [sp]
   1ba5c:	ldrd	r6, [sp, #8]
   1ba60:	ldrd	r8, [sp, #16]
   1ba64:	ldrd	sl, [sp, #24]
   1ba68:	add	sp, sp, #32
   1ba6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba70:	andeq	r1, r2, ip, lsr #10

0001ba74 <argp_failure@@Base>:
   1ba74:	push	{r3}		; (str r3, [sp, #-4]!)
   1ba78:	strd	r4, [sp, #-20]!	; 0xffffffec
   1ba7c:	strd	r6, [sp, #8]
   1ba80:	str	lr, [sp, #16]
   1ba84:	sub	sp, sp, #200	; 0xc8
   1ba88:	mov	r7, r1
   1ba8c:	mov	r6, r2
   1ba90:	subs	r5, r0, #0
   1ba94:	beq	1bbf0 <argp_failure@@Base+0x17c>
   1ba98:	ldr	r3, [r5, #16]
   1ba9c:	tst	r3, #2
   1baa0:	bne	1bbd4 <argp_failure@@Base+0x160>
   1baa4:	ldr	r4, [r5, #44]	; 0x2c
   1baa8:	cmp	r4, #0
   1baac:	beq	1bbd4 <argp_failure@@Base+0x160>
   1bab0:	mov	r0, r4
   1bab4:	bl	1158c <flockfile@plt>
   1bab8:	ldr	r0, [r5, #40]	; 0x28
   1babc:	mov	r1, r4
   1bac0:	bl	112bc <fputs_unlocked@plt>
   1bac4:	ldr	r3, [sp, #220]	; 0xdc
   1bac8:	cmp	r3, #0
   1bacc:	beq	1bb28 <argp_failure@@Base+0xb4>
   1bad0:	add	r3, sp, #224	; 0xe0
   1bad4:	str	r3, [sp]
   1bad8:	ldr	r3, [r4, #20]
   1badc:	ldr	r2, [r4, #24]
   1bae0:	cmp	r3, r2
   1bae4:	addcc	r2, r3, #1
   1bae8:	strcc	r2, [r4, #20]
   1baec:	movcc	r2, #58	; 0x3a
   1baf0:	strbcc	r2, [r3]
   1baf4:	bcs	1bc1c <argp_failure@@Base+0x1a8>
   1baf8:	ldr	r3, [r4, #20]
   1bafc:	ldr	r2, [r4, #24]
   1bb00:	cmp	r3, r2
   1bb04:	addcc	r2, r3, #1
   1bb08:	strcc	r2, [r4, #20]
   1bb0c:	movcc	r2, #32
   1bb10:	strbcc	r2, [r3]
   1bb14:	bcs	1bc2c <argp_failure@@Base+0x1b8>
   1bb18:	ldr	r2, [sp]
   1bb1c:	ldr	r1, [sp, #220]	; 0xdc
   1bb20:	mov	r0, r4
   1bb24:	bl	1155c <vfprintf@plt>
   1bb28:	cmp	r6, #0
   1bb2c:	beq	1bb90 <argp_failure@@Base+0x11c>
   1bb30:	ldr	r3, [r4, #20]
   1bb34:	ldr	r2, [r4, #24]
   1bb38:	cmp	r3, r2
   1bb3c:	addcc	r2, r3, #1
   1bb40:	strcc	r2, [r4, #20]
   1bb44:	movcc	r2, #58	; 0x3a
   1bb48:	strbcc	r2, [r3]
   1bb4c:	bcs	1bc3c <argp_failure@@Base+0x1c8>
   1bb50:	ldr	r3, [r4, #20]
   1bb54:	ldr	r2, [r4, #24]
   1bb58:	cmp	r3, r2
   1bb5c:	addcc	r2, r3, #1
   1bb60:	strcc	r2, [r4, #20]
   1bb64:	movcc	r2, #32
   1bb68:	strbcc	r2, [r3]
   1bb6c:	bcs	1bc4c <argp_failure@@Base+0x1d8>
   1bb70:	mov	r2, #200	; 0xc8
   1bb74:	mov	r1, sp
   1bb78:	mov	r0, r6
   1bb7c:	bl	114d8 <strerror_r@plt>
   1bb80:	cmp	r0, #0
   1bb84:	beq	1bc5c <argp_failure@@Base+0x1e8>
   1bb88:	mov	r1, r4
   1bb8c:	bl	112bc <fputs_unlocked@plt>
   1bb90:	ldr	r3, [r4, #20]
   1bb94:	ldr	r2, [r4, #24]
   1bb98:	cmp	r3, r2
   1bb9c:	addcc	r2, r3, #1
   1bba0:	strcc	r2, [r4, #20]
   1bba4:	movcc	r2, #10
   1bba8:	strbcc	r2, [r3]
   1bbac:	bcs	1bc78 <argp_failure@@Base+0x204>
   1bbb0:	mov	r0, r4
   1bbb4:	bl	113b8 <funlockfile@plt>
   1bbb8:	cmp	r7, #0
   1bbbc:	beq	1bbd4 <argp_failure@@Base+0x160>
   1bbc0:	cmp	r5, #0
   1bbc4:	beq	1bc88 <argp_failure@@Base+0x214>
   1bbc8:	ldr	r3, [r5, #16]
   1bbcc:	tst	r3, #32
   1bbd0:	beq	1bc88 <argp_failure@@Base+0x214>
   1bbd4:	add	sp, sp, #200	; 0xc8
   1bbd8:	ldrd	r4, [sp]
   1bbdc:	ldrd	r6, [sp, #8]
   1bbe0:	ldr	lr, [sp, #16]
   1bbe4:	add	sp, sp, #20
   1bbe8:	add	sp, sp, #4
   1bbec:	bx	lr
   1bbf0:	movw	r3, #11072	; 0x2b40
   1bbf4:	movt	r3, #3
   1bbf8:	ldr	r4, [r3]
   1bbfc:	cmp	r4, #0
   1bc00:	beq	1bbd4 <argp_failure@@Base+0x160>
   1bc04:	mov	r0, r4
   1bc08:	bl	1158c <flockfile@plt>
   1bc0c:	movw	r3, #11064	; 0x2b38
   1bc10:	movt	r3, #3
   1bc14:	ldr	r0, [r3]
   1bc18:	b	1babc <argp_failure@@Base+0x48>
   1bc1c:	mov	r1, #58	; 0x3a
   1bc20:	mov	r0, r4
   1bc24:	bl	11538 <__overflow@plt>
   1bc28:	b	1baf8 <argp_failure@@Base+0x84>
   1bc2c:	mov	r1, #32
   1bc30:	mov	r0, r4
   1bc34:	bl	11538 <__overflow@plt>
   1bc38:	b	1bb18 <argp_failure@@Base+0xa4>
   1bc3c:	mov	r1, #58	; 0x3a
   1bc40:	mov	r0, r4
   1bc44:	bl	11538 <__overflow@plt>
   1bc48:	b	1bb50 <argp_failure@@Base+0xdc>
   1bc4c:	mov	r1, #32
   1bc50:	mov	r0, r4
   1bc54:	bl	11538 <__overflow@plt>
   1bc58:	b	1bb70 <argp_failure@@Base+0xfc>
   1bc5c:	mov	r0, r6
   1bc60:	bl	1143c <strerror@plt>
   1bc64:	movw	r3, #5856	; 0x16e0
   1bc68:	movt	r3, #2
   1bc6c:	cmp	r0, #0
   1bc70:	moveq	r0, r3
   1bc74:	b	1bb88 <argp_failure@@Base+0x114>
   1bc78:	mov	r1, #10
   1bc7c:	mov	r0, r4
   1bc80:	bl	11538 <__overflow@plt>
   1bc84:	b	1bbb0 <argp_failure@@Base+0x13c>
   1bc88:	mov	r0, r7
   1bc8c:	bl	11484 <exit@plt>
   1bc90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bc94:	strd	r6, [sp, #8]
   1bc98:	strd	r8, [sp, #16]
   1bc9c:	strd	sl, [sp, #24]
   1bca0:	str	lr, [sp, #32]
   1bca4:	add	fp, sp, #32
   1bca8:	sub	sp, sp, #124	; 0x7c
   1bcac:	str	r0, [fp, #-108]	; 0xffffff94
   1bcb0:	str	r1, [fp, #-104]	; 0xffffff98
   1bcb4:	str	r3, [fp, #-100]	; 0xffffff9c
   1bcb8:	subs	r3, r2, #0
   1bcbc:	str	r3, [fp, #-132]	; 0xffffff7c
   1bcc0:	beq	1cca8 <argp_failure@@Base+0x1234>
   1bcc4:	mov	r0, r3
   1bcc8:	bl	1158c <flockfile@plt>
   1bccc:	movw	r3, #11004	; 0x2afc
   1bcd0:	movt	r3, #3
   1bcd4:	ldr	r9, [r3, #36]	; 0x24
   1bcd8:	cmp	r9, #0
   1bcdc:	beq	1bdb4 <argp_failure@@Base+0x340>
   1bce0:	movw	r2, #11004	; 0x2afc
   1bce4:	movt	r2, #3
   1bce8:	mov	r3, #0
   1bcec:	ldr	r2, [r2, #32]
   1bcf0:	mov	r1, r3
   1bcf4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1bcf8:	bl	1dd9c <argp_error@@Base+0xe40>
   1bcfc:	subs	sl, r0, #0
   1bd00:	beq	1c190 <argp_failure@@Base+0x71c>
   1bd04:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bd08:	tst	r3, #11
   1bd0c:	moveq	r3, #0
   1bd10:	streq	r3, [fp, #-128]	; 0xffffff80
   1bd14:	bne	1c19c <argp_failure@@Base+0x728>
   1bd18:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bd1c:	tst	r3, #3
   1bd20:	moveq	r4, #0
   1bd24:	bne	1c22c <argp_failure@@Base+0x7b8>
   1bd28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bd2c:	tst	r3, #16
   1bd30:	bne	1c450 <argp_failure@@Base+0x9dc>
   1bd34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bd38:	tst	r3, #4
   1bd3c:	bne	1c478 <argp_failure@@Base+0xa04>
   1bd40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bd44:	tst	r3, #8
   1bd48:	beq	1cc34 <argp_failure@@Base+0x11c0>
   1bd4c:	ldr	r3, [fp, #-128]	; 0xffffff80
   1bd50:	ldr	r3, [r3, #4]
   1bd54:	cmp	r3, #0
   1bd58:	beq	1cc34 <argp_failure@@Base+0x11c0>
   1bd5c:	cmp	r4, #0
   1bd60:	bne	1c498 <argp_failure@@Base+0xa24>
   1bd64:	mov	r3, #0
   1bd68:	str	r3, [fp, #-88]	; 0xffffffa8
   1bd6c:	str	r3, [fp, #-84]	; 0xffffffac
   1bd70:	str	r3, [fp, #-80]	; 0xffffffb0
   1bd74:	ldr	r3, [fp, #-128]	; 0xffffff80
   1bd78:	ldr	r9, [r3]
   1bd7c:	ldr	r3, [r3, #4]
   1bd80:	str	r3, [fp, #-116]	; 0xffffff8c
   1bd84:	cmp	r3, #0
   1bd88:	beq	1cc30 <argp_failure@@Base+0x11bc>
   1bd8c:	movw	r3, #11004	; 0x2afc
   1bd90:	movt	r3, #3
   1bd94:	str	r3, [fp, #-96]	; 0xffffffa0
   1bd98:	movw	r3, #6172	; 0x181c
   1bd9c:	movt	r3, #2
   1bda0:	str	r3, [fp, #-140]	; 0xffffff74
   1bda4:	movw	r3, #59044	; 0xe6a4
   1bda8:	movt	r3, #1
   1bdac:	str	r3, [fp, #-144]	; 0xffffff70
   1bdb0:	b	1cab0 <argp_failure@@Base+0x103c>
   1bdb4:	movw	r0, #5880	; 0x16f8
   1bdb8:	movt	r0, #2
   1bdbc:	bl	1140c <getenv@plt>
   1bdc0:	movw	r1, #11004	; 0x2afc
   1bdc4:	movt	r1, #3
   1bdc8:	ldrd	r2, [r1]
   1bdcc:	strd	r2, [fp, #-76]	; 0xffffffb4
   1bdd0:	ldrd	r2, [r1, #8]
   1bdd4:	strd	r2, [fp, #-68]	; 0xffffffbc
   1bdd8:	ldrd	r2, [r1, #16]
   1bddc:	strd	r2, [fp, #-60]	; 0xffffffc4
   1bde0:	ldrd	r2, [r1, #24]
   1bde4:	strd	r2, [fp, #-52]	; 0xffffffcc
   1bde8:	ldrd	r2, [r1, #32]
   1bdec:	strd	r2, [fp, #-44]	; 0xffffffd4
   1bdf0:	subs	r6, r0, #0
   1bdf4:	beq	1bce0 <argp_failure@@Base+0x26c>
   1bdf8:	movw	sl, #5408	; 0x1520
   1bdfc:	movt	sl, #2
   1be00:	add	r8, sl, #168	; 0xa8
   1be04:	b	1c060 <argp_failure@@Base+0x5ec>
   1be08:	cmp	r0, #45	; 0x2d
   1be0c:	cmpne	r0, #95	; 0x5f
   1be10:	moveq	r3, #1
   1be14:	movne	r3, #0
   1be18:	ubfx	r1, r1, #3, #1
   1be1c:	orrs	r3, r3, r1
   1be20:	beq	1ce0c <argp_failure@@Base+0x1398>
   1be24:	mov	r4, r6
   1be28:	ldrb	r3, [r4, #1]!
   1be2c:	lsl	r1, r3, #1
   1be30:	ldrh	r1, [r2, r1]
   1be34:	ubfx	r1, r1, #3, #1
   1be38:	cmp	r3, #95	; 0x5f
   1be3c:	cmpne	r3, #45	; 0x2d
   1be40:	moveq	r3, #1
   1be44:	movne	r3, #0
   1be48:	orrs	r3, r1, r3
   1be4c:	bne	1be28 <argp_failure@@Base+0x3b4>
   1be50:	sub	r7, r4, r6
   1be54:	ldrb	r3, [r4]
   1be58:	lsl	r1, r3, #1
   1be5c:	ldrh	r1, [r2, r1]
   1be60:	tst	r1, #8192	; 0x2000
   1be64:	beq	1be7c <argp_failure@@Base+0x408>
   1be68:	ldrb	r3, [r4, #1]!
   1be6c:	lsl	r1, r3, #1
   1be70:	ldrh	r1, [r2, r1]
   1be74:	tst	r1, #8192	; 0x2000
   1be78:	bne	1be68 <argp_failure@@Base+0x3f4>
   1be7c:	cmp	r3, #44	; 0x2c
   1be80:	cmpne	r3, #0
   1be84:	beq	1bee8 <argp_failure@@Base+0x474>
   1be88:	cmp	r3, #61	; 0x3d
   1be8c:	beq	1beb4 <argp_failure@@Base+0x440>
   1be90:	ldrb	r3, [r4]
   1be94:	lsl	r3, r3, #1
   1be98:	ldrh	r3, [r2, r3]
   1be9c:	tst	r3, #2048	; 0x800
   1bea0:	streq	r9, [fp, #-96]	; 0xffffffa0
   1bea4:	streq	r9, [fp, #-112]	; 0xffffff90
   1bea8:	bne	1bf4c <argp_failure@@Base+0x4d8>
   1beac:	add	r5, sl, #24
   1beb0:	b	1bff4 <argp_failure@@Base+0x580>
   1beb4:	add	r1, r4, #1
   1beb8:	ldrb	r3, [r4, #1]
   1bebc:	lsl	r3, r3, #1
   1bec0:	ldrh	r3, [r2, r3]
   1bec4:	tst	r3, #8192	; 0x2000
   1bec8:	beq	1bf44 <argp_failure@@Base+0x4d0>
   1becc:	ldrb	r3, [r1, #1]!
   1bed0:	lsl	r3, r3, #1
   1bed4:	ldrh	r3, [r2, r3]
   1bed8:	tst	r3, #8192	; 0x2000
   1bedc:	bne	1becc <argp_failure@@Base+0x458>
   1bee0:	mov	r4, r1
   1bee4:	b	1be90 <argp_failure@@Base+0x41c>
   1bee8:	cmp	r0, #110	; 0x6e
   1beec:	movne	r3, #1
   1bef0:	strne	r3, [fp, #-96]	; 0xffffffa0
   1bef4:	strne	r3, [fp, #-112]	; 0xffffff90
   1bef8:	bne	1beac <argp_failure@@Base+0x438>
   1befc:	ldrb	r3, [r6, #1]
   1bf00:	cmp	r3, #111	; 0x6f
   1bf04:	movne	r3, #1
   1bf08:	strne	r3, [fp, #-96]	; 0xffffffa0
   1bf0c:	strne	r3, [fp, #-112]	; 0xffffff90
   1bf10:	bne	1beac <argp_failure@@Base+0x438>
   1bf14:	ldrb	r3, [r6, #2]
   1bf18:	cmp	r3, #45	; 0x2d
   1bf1c:	movne	r3, #1
   1bf20:	strne	r3, [fp, #-96]	; 0xffffffa0
   1bf24:	strne	r3, [fp, #-112]	; 0xffffff90
   1bf28:	bne	1beac <argp_failure@@Base+0x438>
   1bf2c:	add	r6, r6, #3
   1bf30:	sub	r7, r7, #3
   1bf34:	str	r9, [fp, #-112]	; 0xffffff90
   1bf38:	mov	r3, #1
   1bf3c:	str	r3, [fp, #-96]	; 0xffffffa0
   1bf40:	b	1beac <argp_failure@@Base+0x438>
   1bf44:	mov	r4, r1
   1bf48:	b	1be90 <argp_failure@@Base+0x41c>
   1bf4c:	mov	r2, #10
   1bf50:	mov	r1, #0
   1bf54:	mov	r0, r4
   1bf58:	bl	11304 <strtol@plt>
   1bf5c:	str	r0, [fp, #-112]	; 0xffffff90
   1bf60:	ldr	r2, [r5]
   1bf64:	ldrb	r3, [r4]
   1bf68:	lsl	r3, r3, #1
   1bf6c:	ldrh	r3, [r2, r3]
   1bf70:	tst	r3, #2048	; 0x800
   1bf74:	beq	1bf8c <argp_failure@@Base+0x518>
   1bf78:	ldrb	r3, [r4, #1]!
   1bf7c:	lsl	r3, r3, #1
   1bf80:	ldrh	r3, [r2, r3]
   1bf84:	tst	r3, #2048	; 0x800
   1bf88:	bne	1bf78 <argp_failure@@Base+0x504>
   1bf8c:	ldrb	r3, [r4]
   1bf90:	lsl	r3, r3, #1
   1bf94:	ldrh	r3, [r2, r3]
   1bf98:	tst	r3, #8192	; 0x2000
   1bf9c:	beq	1bfbc <argp_failure@@Base+0x548>
   1bfa0:	ldrb	r3, [r4, #1]!
   1bfa4:	lsl	r3, r3, #1
   1bfa8:	ldrh	r3, [r2, r3]
   1bfac:	tst	r3, #8192	; 0x2000
   1bfb0:	bne	1bfa0 <argp_failure@@Base+0x52c>
   1bfb4:	str	r9, [fp, #-96]	; 0xffffffa0
   1bfb8:	b	1beac <argp_failure@@Base+0x438>
   1bfbc:	str	r9, [fp, #-96]	; 0xffffffa0
   1bfc0:	b	1beac <argp_failure@@Base+0x438>
   1bfc4:	str	r6, [sp, #4]
   1bfc8:	str	r7, [sp]
   1bfcc:	movw	r3, #5896	; 0x1708
   1bfd0:	movt	r3, #2
   1bfd4:	mov	r2, #0
   1bfd8:	mov	r1, r2
   1bfdc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1bfe0:	bl	1ba74 <argp_failure@@Base>
   1bfe4:	b	1c048 <argp_failure@@Base+0x5d4>
   1bfe8:	add	r5, r5, #16
   1bfec:	cmp	r5, r8
   1bff0:	beq	1c130 <argp_failure@@Base+0x6bc>
   1bff4:	mov	r0, r5
   1bff8:	bl	1149c <strlen@plt>
   1bffc:	cmp	r0, r7
   1c000:	bne	1bfe8 <argp_failure@@Base+0x574>
   1c004:	mov	r2, r7
   1c008:	mov	r1, r5
   1c00c:	mov	r0, r6
   1c010:	bl	115f8 <strncmp@plt>
   1c014:	cmp	r0, #0
   1c018:	bne	1bfe8 <argp_failure@@Base+0x574>
   1c01c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c020:	cmp	r3, #0
   1c024:	beq	1c034 <argp_failure@@Base+0x5c0>
   1c028:	ldrb	r3, [r5, #14]
   1c02c:	cmp	r3, #0
   1c030:	beq	1bfc4 <argp_failure@@Base+0x550>
   1c034:	ldrb	r3, [r5, #15]
   1c038:	sub	r2, fp, #36	; 0x24
   1c03c:	add	r3, r2, r3
   1c040:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c044:	str	r2, [r3, #-40]	; 0xffffffd8
   1c048:	cmp	r5, r8
   1c04c:	beq	1c130 <argp_failure@@Base+0x6bc>
   1c050:	ldrb	r3, [r4]
   1c054:	cmp	r3, #44	; 0x2c
   1c058:	addeq	r6, r4, #1
   1c05c:	movne	r6, r4
   1c060:	ldrb	r3, [r6]
   1c064:	cmp	r3, #0
   1c068:	beq	1c0c0 <argp_failure@@Base+0x64c>
   1c06c:	bl	11478 <__ctype_b_loc@plt>
   1c070:	mov	r5, r0
   1c074:	ldr	r2, [r0]
   1c078:	mov	r3, r6
   1c07c:	mov	r6, r3
   1c080:	ldrb	r0, [r3], #1
   1c084:	lsl	r1, r0, #1
   1c088:	ldrh	r1, [r2, r1]
   1c08c:	tst	r1, #8192	; 0x2000
   1c090:	bne	1c07c <argp_failure@@Base+0x608>
   1c094:	tst	r1, #1024	; 0x400
   1c098:	bne	1be08 <argp_failure@@Base+0x394>
   1c09c:	cmp	r0, #0
   1c0a0:	beq	1c060 <argp_failure@@Base+0x5ec>
   1c0a4:	str	r6, [sp]
   1c0a8:	movw	r3, #5984	; 0x1760
   1c0ac:	movt	r3, #2
   1c0b0:	mov	r2, #0
   1c0b4:	mov	r1, r2
   1c0b8:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c0bc:	bl	1ba74 <argp_failure@@Base>
   1c0c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c0c4:	ldr	r3, [pc, #3488]	; 1ce6c <argp_failure@@Base+0x13f8>
   1c0c8:	add	r1, r3, #144	; 0x90
   1c0cc:	add	r3, r3, #16
   1c0d0:	cmp	r3, r1
   1c0d4:	beq	1c154 <argp_failure@@Base+0x6e0>
   1c0d8:	ldrb	r2, [r3, #14]
   1c0dc:	cmp	r2, #0
   1c0e0:	bne	1c0cc <argp_failure@@Base+0x658>
   1c0e4:	ldrb	r2, [r3, #15]
   1c0e8:	cmp	r2, #32
   1c0ec:	beq	1c0cc <argp_failure@@Base+0x658>
   1c0f0:	sub	ip, fp, #36	; 0x24
   1c0f4:	add	r2, ip, r2
   1c0f8:	ldr	r2, [r2, #-40]	; 0xffffffd8
   1c0fc:	cmp	r2, r0
   1c100:	blt	1c0cc <argp_failure@@Base+0x658>
   1c104:	str	r3, [sp, #4]
   1c108:	movw	r3, #6068	; 0x17b4
   1c10c:	movt	r3, #2
   1c110:	str	r3, [sp]
   1c114:	movw	r3, #6016	; 0x1780
   1c118:	movt	r3, #2
   1c11c:	mov	r2, #0
   1c120:	mov	r1, r2
   1c124:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c128:	bl	1ba74 <argp_failure@@Base>
   1c12c:	b	1bce0 <argp_failure@@Base+0x26c>
   1c130:	str	r6, [sp, #4]
   1c134:	str	r7, [sp]
   1c138:	movw	r3, #5944	; 0x1738
   1c13c:	movt	r3, #2
   1c140:	mov	r2, #0
   1c144:	mov	r1, r2
   1c148:	ldr	r0, [fp, #-104]	; 0xffffff98
   1c14c:	bl	1ba74 <argp_failure@@Base>
   1c150:	b	1c050 <argp_failure@@Base+0x5dc>
   1c154:	movw	r1, #11004	; 0x2afc
   1c158:	movt	r1, #3
   1c15c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   1c160:	strd	r2, [r1]
   1c164:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1c168:	strd	r2, [r1, #8]
   1c16c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1c170:	strd	r2, [r1, #16]
   1c174:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1c178:	strd	r2, [r1, #24]
   1c17c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c180:	strd	r2, [r1, #32]
   1c184:	mov	r3, #1
   1c188:	str	r3, [r1, #36]	; 0x24
   1c18c:	b	1bce0 <argp_failure@@Base+0x26c>
   1c190:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1c194:	bl	113b8 <funlockfile@plt>
   1c198:	b	1cca8 <argp_failure@@Base+0x1234>
   1c19c:	mov	r1, #0
   1c1a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c1a4:	bl	1b3bc <_obstack_memory_used@@Base+0x25dc>
   1c1a8:	str	r0, [fp, #-128]	; 0xffffff80
   1c1ac:	movw	r1, #65288	; 0xff08
   1c1b0:	movt	r1, #1
   1c1b4:	bl	19dfc <_obstack_memory_used@@Base+0x101c>
   1c1b8:	cmp	r0, #0
   1c1bc:	mvnne	r3, #0
   1c1c0:	strne	r3, [r0, #12]
   1c1c4:	movw	r1, #4264	; 0x10a8
   1c1c8:	movt	r1, #2
   1c1cc:	ldr	r0, [fp, #-128]	; 0xffffff80
   1c1d0:	bl	19dfc <_obstack_memory_used@@Base+0x101c>
   1c1d4:	cmp	r0, #0
   1c1d8:	mvnne	r3, #0
   1c1dc:	strne	r3, [r0, #12]
   1c1e0:	ldr	r0, [fp, #-128]	; 0xffffff80
   1c1e4:	ldr	r3, [r0, #4]
   1c1e8:	cmp	r3, #0
   1c1ec:	beq	1bd18 <argp_failure@@Base+0x2a4>
   1c1f0:	ldr	r2, [r0]
   1c1f4:	mov	r3, #0
   1c1f8:	str	r3, [r2, #24]
   1c1fc:	add	r3, r3, #1
   1c200:	add	r2, r2, #28
   1c204:	ldr	r1, [r0, #4]
   1c208:	cmp	r3, r1
   1c20c:	bcc	1c1f8 <argp_failure@@Base+0x784>
   1c210:	movw	r3, #45228	; 0xb0ac
   1c214:	movt	r3, #1
   1c218:	mov	r2, #28
   1c21c:	ldr	r0, [fp, #-128]	; 0xffffff80
   1c220:	ldr	r0, [r0]
   1c224:	bl	115b0 <qsort@plt>
   1c228:	b	1bd18 <argp_failure@@Base+0x2a4>
   1c22c:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c230:	bl	19eb0 <_obstack_memory_used@@Base+0x10d0>
   1c234:	mov	r2, r0
   1c238:	add	r3, r0, #7
   1c23c:	bic	r3, r3, #7
   1c240:	sub	sp, sp, r3
   1c244:	add	r9, sp, #8
   1c248:	mov	r1, #0
   1c24c:	mov	r0, r9
   1c250:	bl	114f0 <memset@plt>
   1c254:	mov	r5, #1
   1c258:	movw	r4, #11004	; 0x2afc
   1c25c:	movt	r4, #3
   1c260:	movw	r3, #6092	; 0x17cc
   1c264:	movt	r3, #2
   1c268:	str	r3, [fp, #-116]	; 0xffffff8c
   1c26c:	movw	r8, #6084	; 0x17c4
   1c270:	movt	r8, #2
   1c274:	str	r9, [fp, #-96]	; 0xffffffa0
   1c278:	ldr	r9, [fp, #-128]	; 0xffffff80
   1c27c:	str	r8, [fp, #-112]	; 0xffffff90
   1c280:	ldr	r8, [fp, #-100]	; 0xffffff9c
   1c284:	b	1c334 <argp_failure@@Base+0x8c0>
   1c288:	mov	r0, sl
   1c28c:	bl	1de34 <argp_error@@Base+0xed8>
   1c290:	b	1c350 <argp_failure@@Base+0x8dc>
   1c294:	mov	r0, sl
   1c298:	bl	1de34 <argp_error@@Base+0xed8>
   1c29c:	b	1c39c <argp_failure@@Base+0x928>
   1c2a0:	mov	r1, sl
   1c2a4:	mov	r0, r9
   1c2a8:	bl	1a084 <_obstack_memory_used@@Base+0x12a4>
   1c2ac:	orr	r8, r8, #2
   1c2b0:	str	sl, [sp]
   1c2b4:	mov	r3, #1
   1c2b8:	sub	r2, fp, #76	; 0x4c
   1c2bc:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c2c0:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c2c4:	bl	1a4f0 <_obstack_memory_used@@Base+0x1710>
   1c2c8:	mov	r6, r0
   1c2cc:	ldr	r3, [sl, #28]
   1c2d0:	ldr	r2, [sl, #24]
   1c2d4:	sub	r3, r3, r2
   1c2d8:	ldr	r2, [sl, #16]
   1c2dc:	cmp	r3, r2
   1c2e0:	bhi	1c414 <argp_failure@@Base+0x9a0>
   1c2e4:	str	r7, [sl, #12]
   1c2e8:	ldr	r3, [sl, #28]
   1c2ec:	ldr	r2, [sl, #24]
   1c2f0:	sub	r3, r3, r2
   1c2f4:	ldr	r2, [sl, #16]
   1c2f8:	cmp	r3, r2
   1c2fc:	bhi	1c420 <argp_failure@@Base+0x9ac>
   1c300:	str	r5, [sl, #4]
   1c304:	ldr	r2, [sl, #28]
   1c308:	ldr	r3, [sl, #32]
   1c30c:	cmp	r2, r3
   1c310:	bcs	1c42c <argp_failure@@Base+0x9b8>
   1c314:	ldr	r3, [sl, #28]
   1c318:	add	r2, r3, #1
   1c31c:	str	r2, [sl, #28]
   1c320:	mov	r2, #10
   1c324:	strb	r2, [r3]
   1c328:	mov	r5, #0
   1c32c:	cmp	r6, r5
   1c330:	beq	1c444 <argp_failure@@Base+0x9d0>
   1c334:	ldr	r6, [r4, #28]
   1c338:	ldr	r3, [sl, #28]
   1c33c:	ldr	r2, [sl, #24]
   1c340:	sub	r3, r3, r2
   1c344:	ldr	r2, [sl, #16]
   1c348:	cmp	r3, r2
   1c34c:	bhi	1c288 <argp_failure@@Base+0x814>
   1c350:	ldr	r7, [sl, #12]
   1c354:	str	r6, [sl, #12]
   1c358:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c35c:	str	r3, [fp, #-76]	; 0xffffffb4
   1c360:	cmp	r5, #0
   1c364:	ldr	r3, [fp, #4]
   1c368:	movwne	r2, #6076	; 0x17bc
   1c36c:	movtne	r2, #2
   1c370:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   1c374:	ldr	r1, [fp, #-112]	; 0xffffff90
   1c378:	mov	r0, sl
   1c37c:	bl	1e4ac <argp_error@@Base+0x1550>
   1c380:	ldr	r6, [r4, #28]
   1c384:	ldr	r3, [sl, #28]
   1c388:	ldr	r2, [sl, #24]
   1c38c:	sub	r3, r3, r2
   1c390:	ldr	r2, [sl, #16]
   1c394:	cmp	r3, r2
   1c398:	bhi	1c294 <argp_failure@@Base+0x820>
   1c39c:	ldr	r5, [sl, #4]
   1c3a0:	str	r6, [sl, #4]
   1c3a4:	tst	r8, #2
   1c3a8:	beq	1c2a0 <argp_failure@@Base+0x82c>
   1c3ac:	ldr	r3, [r9, #4]
   1c3b0:	cmp	r3, #0
   1c3b4:	beq	1c2b0 <argp_failure@@Base+0x83c>
   1c3b8:	ldr	r3, [sl, #28]
   1c3bc:	add	r3, r3, #12
   1c3c0:	ldr	r2, [sl, #32]
   1c3c4:	cmp	r2, r3
   1c3c8:	bcs	1c3e0 <argp_failure@@Base+0x96c>
   1c3cc:	mov	r1, #12
   1c3d0:	mov	r0, sl
   1c3d4:	bl	1e3ac <argp_error@@Base+0x1450>
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1c2b0 <argp_failure@@Base+0x83c>
   1c3e0:	ldr	r2, [sl, #28]
   1c3e4:	movw	r3, #6100	; 0x17d4
   1c3e8:	movt	r3, #2
   1c3ec:	ldr	r0, [r3]
   1c3f0:	ldr	r1, [r3, #4]
   1c3f4:	str	r0, [r2]
   1c3f8:	str	r1, [r2, #4]
   1c3fc:	ldr	r3, [r3, #8]
   1c400:	str	r3, [r2, #8]
   1c404:	ldr	r3, [sl, #28]
   1c408:	add	r3, r3, #12
   1c40c:	str	r3, [sl, #28]
   1c410:	b	1c2b0 <argp_failure@@Base+0x83c>
   1c414:	mov	r0, sl
   1c418:	bl	1de34 <argp_error@@Base+0xed8>
   1c41c:	b	1c2e4 <argp_failure@@Base+0x870>
   1c420:	mov	r0, sl
   1c424:	bl	1de34 <argp_error@@Base+0xed8>
   1c428:	b	1c300 <argp_failure@@Base+0x88c>
   1c42c:	mov	r1, #1
   1c430:	mov	r0, sl
   1c434:	bl	1e3ac <argp_error@@Base+0x1450>
   1c438:	cmp	r0, #0
   1c43c:	bne	1c314 <argp_failure@@Base+0x8a0>
   1c440:	b	1c328 <argp_failure@@Base+0x8b4>
   1c444:	str	r8, [fp, #-100]	; 0xffffff9c
   1c448:	mov	r4, #1
   1c44c:	b	1bd28 <argp_failure@@Base+0x2b4>
   1c450:	str	sl, [sp, #4]
   1c454:	mov	r3, #1
   1c458:	str	r3, [sp]
   1c45c:	mov	r3, #0
   1c460:	mov	r2, r3
   1c464:	ldr	r1, [fp, #-104]	; 0xffffff98
   1c468:	ldr	r0, [fp, #-108]	; 0xffffff94
   1c46c:	bl	1aaa0 <_obstack_memory_used@@Base+0x1cc0>
   1c470:	orr	r4, r4, r0
   1c474:	b	1bd34 <argp_failure@@Base+0x2c0>
   1c478:	ldr	r3, [fp, #4]
   1c47c:	mov	r2, r3
   1c480:	movw	r1, #6116	; 0x17e4
   1c484:	movt	r1, #2
   1c488:	mov	r0, sl
   1c48c:	bl	1e4ac <argp_error@@Base+0x1550>
   1c490:	mov	r4, #1
   1c494:	b	1bd40 <argp_failure@@Base+0x2cc>
   1c498:	ldr	r2, [sl, #28]
   1c49c:	ldr	r3, [sl, #32]
   1c4a0:	cmp	r2, r3
   1c4a4:	bcs	1c4c0 <argp_failure@@Base+0xa4c>
   1c4a8:	ldr	r3, [sl, #28]
   1c4ac:	add	r2, r3, #1
   1c4b0:	str	r2, [sl, #28]
   1c4b4:	mov	r2, #10
   1c4b8:	strb	r2, [r3]
   1c4bc:	b	1bd64 <argp_failure@@Base+0x2f0>
   1c4c0:	mov	r1, #1
   1c4c4:	mov	r0, sl
   1c4c8:	bl	1e3ac <argp_error@@Base+0x1450>
   1c4cc:	cmp	r0, #0
   1c4d0:	bne	1c4a8 <argp_failure@@Base+0xa34>
   1c4d4:	b	1bd64 <argp_failure@@Base+0x2f0>
   1c4d8:	mov	r0, sl
   1c4dc:	bl	1de34 <argp_error@@Base+0xed8>
   1c4e0:	b	1cad0 <argp_failure@@Base+0x105c>
   1c4e4:	add	r3, r3, #24
   1c4e8:	subs	r2, r2, #1
   1c4ec:	beq	1c510 <argp_failure@@Base+0xa9c>
   1c4f0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1c4f4:	cmp	r1, #0
   1c4f8:	beq	1c4e4 <argp_failure@@Base+0xa70>
   1c4fc:	ldr	r1, [r3, #-12]
   1c500:	tst	r1, #2
   1c504:	bne	1c4e4 <argp_failure@@Base+0xa70>
   1c508:	mov	r3, #1
   1c50c:	str	r3, [fp, #-112]	; 0xffffff90
   1c510:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c514:	ldr	r5, [r3, #8]
   1c518:	ldr	r3, [sl, #28]
   1c51c:	ldr	r2, [sl, #24]
   1c520:	sub	r3, r3, r2
   1c524:	ldr	r2, [sl, #16]
   1c528:	cmp	r3, r2
   1c52c:	bhi	1c54c <argp_failure@@Base+0xad8>
   1c530:	str	r5, [sl, #12]
   1c534:	ldr	r6, [r9, #4]
   1c538:	cmp	r6, #0
   1c53c:	beq	1c64c <argp_failure@@Base+0xbd8>
   1c540:	mov	r5, r4
   1c544:	str	r9, [fp, #-136]	; 0xffffff78
   1c548:	b	1ce34 <argp_failure@@Base+0x13c0>
   1c54c:	mov	r0, sl
   1c550:	bl	1de34 <argp_error@@Base+0xed8>
   1c554:	b	1c530 <argp_failure@@Base+0xabc>
   1c558:	tst	r9, #2
   1c55c:	beq	1c568 <argp_failure@@Base+0xaf4>
   1c560:	add	r8, r8, #1
   1c564:	b	1ce28 <argp_failure@@Base+0x13b4>
   1c568:	sub	r1, fp, #76	; 0x4c
   1c56c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c570:	ldr	r0, [r3, #8]
   1c574:	bl	1a8fc <_obstack_memory_used@@Base+0x1b1c>
   1c578:	ldr	r2, [sl, #28]
   1c57c:	ldr	r3, [sl, #32]
   1c580:	cmp	r2, r3
   1c584:	bcs	1c604 <argp_failure@@Base+0xb90>
   1c588:	ldr	r3, [sl, #28]
   1c58c:	add	r2, r3, #1
   1c590:	str	r2, [sl, #28]
   1c594:	mov	r2, #45	; 0x2d
   1c598:	strb	r2, [r3]
   1c59c:	ldrb	r7, [r8]
   1c5a0:	ldr	r2, [sl, #28]
   1c5a4:	ldr	r3, [sl, #32]
   1c5a8:	cmp	r2, r3
   1c5ac:	bcs	1c61c <argp_failure@@Base+0xba8>
   1c5b0:	ldr	r3, [sl, #28]
   1c5b4:	add	r2, r3, #1
   1c5b8:	str	r2, [sl, #28]
   1c5bc:	strb	r7, [r3]
   1c5c0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c5c4:	cmp	r3, #0
   1c5c8:	beq	1c5dc <argp_failure@@Base+0xb68>
   1c5cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c5d0:	ldr	r3, [r3]
   1c5d4:	cmp	r3, #0
   1c5d8:	beq	1c634 <argp_failure@@Base+0xbc0>
   1c5dc:	ldr	r2, [r4, #8]
   1c5e0:	cmp	r2, #0
   1c5e4:	beq	1c560 <argp_failure@@Base+0xaec>
   1c5e8:	ldr	r3, [r4, #12]
   1c5ec:	tst	r3, #1
   1c5f0:	ldrne	r1, [fp, #-140]	; 0xffffff74
   1c5f4:	ldreq	r1, [fp, #-144]	; 0xffffff70
   1c5f8:	mov	r0, sl
   1c5fc:	bl	1e4ac <argp_error@@Base+0x1550>
   1c600:	b	1c560 <argp_failure@@Base+0xaec>
   1c604:	mov	r1, #1
   1c608:	mov	r0, sl
   1c60c:	bl	1e3ac <argp_error@@Base+0x1450>
   1c610:	cmp	r0, #0
   1c614:	bne	1c588 <argp_failure@@Base+0xb14>
   1c618:	b	1c59c <argp_failure@@Base+0xb28>
   1c61c:	mov	r1, #1
   1c620:	mov	r0, sl
   1c624:	bl	1e3ac <argp_error@@Base+0x1450>
   1c628:	cmp	r0, #0
   1c62c:	bne	1c5b0 <argp_failure@@Base+0xb3c>
   1c630:	b	1c5c0 <argp_failure@@Base+0xb4c>
   1c634:	ldr	r3, [r4, #8]
   1c638:	cmp	r3, #0
   1c63c:	movne	r3, #1
   1c640:	strne	r3, [fp, #-80]	; 0xffffffb0
   1c644:	b	1c560 <argp_failure@@Base+0xaec>
   1c648:	ldr	r9, [fp, #-136]	; 0xffffff78
   1c64c:	ldr	r3, [r4, #12]
   1c650:	tst	r3, #8
   1c654:	beq	1c72c <argp_failure@@Base+0xcb8>
   1c658:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c65c:	ldr	r5, [r3, #16]
   1c660:	ldr	r3, [sl, #28]
   1c664:	ldr	r2, [sl, #24]
   1c668:	sub	r3, r3, r2
   1c66c:	ldr	r2, [sl, #16]
   1c670:	cmp	r3, r2
   1c674:	bhi	1c690 <argp_failure@@Base+0xc1c>
   1c678:	str	r5, [sl, #12]
   1c67c:	ldr	r6, [r9, #4]
   1c680:	cmp	r6, #0
   1c684:	beq	1c7f4 <argp_failure@@Base+0xd80>
   1c688:	add	r5, r4, #24
   1c68c:	b	1c6c4 <argp_failure@@Base+0xc50>
   1c690:	mov	r0, sl
   1c694:	bl	1de34 <argp_error@@Base+0xed8>
   1c698:	b	1c678 <argp_failure@@Base+0xc04>
   1c69c:	mov	r2, r8
   1c6a0:	mov	r1, r7
   1c6a4:	ldr	r0, [sl, #28]
   1c6a8:	bl	11364 <memcpy@plt>
   1c6ac:	ldr	r3, [sl, #28]
   1c6b0:	add	r8, r3, r8
   1c6b4:	str	r8, [sl, #28]
   1c6b8:	add	r5, r5, #24
   1c6bc:	subs	r6, r6, #1
   1c6c0:	beq	1c7f4 <argp_failure@@Base+0xd80>
   1c6c4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1c6c8:	cmp	r3, #0
   1c6cc:	beq	1c6b8 <argp_failure@@Base+0xc44>
   1c6d0:	ldr	r3, [r5, #-12]
   1c6d4:	tst	r3, #2
   1c6d8:	bne	1c6b8 <argp_failure@@Base+0xc44>
   1c6dc:	sub	r1, fp, #76	; 0x4c
   1c6e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c6e4:	ldr	r0, [r3, #16]
   1c6e8:	bl	1a8fc <_obstack_memory_used@@Base+0x1b1c>
   1c6ec:	ldr	r7, [r5, #-24]	; 0xffffffe8
   1c6f0:	mov	r0, r7
   1c6f4:	bl	1149c <strlen@plt>
   1c6f8:	subs	r8, r0, #0
   1c6fc:	beq	1c6b8 <argp_failure@@Base+0xc44>
   1c700:	ldr	r3, [sl, #28]
   1c704:	add	r3, r3, r8
   1c708:	ldr	r2, [sl, #32]
   1c70c:	cmp	r2, r3
   1c710:	bcs	1c69c <argp_failure@@Base+0xc28>
   1c714:	mov	r1, r8
   1c718:	mov	r0, sl
   1c71c:	bl	1e3ac <argp_error@@Base+0x1450>
   1c720:	cmp	r0, #0
   1c724:	beq	1c6b8 <argp_failure@@Base+0xc44>
   1c728:	b	1c69c <argp_failure@@Base+0xc28>
   1c72c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c730:	ldr	r5, [r3, #12]
   1c734:	ldr	r3, [sl, #28]
   1c738:	ldr	r2, [sl, #24]
   1c73c:	sub	r3, r3, r2
   1c740:	ldr	r2, [sl, #16]
   1c744:	cmp	r3, r2
   1c748:	bhi	1c778 <argp_failure@@Base+0xd04>
   1c74c:	str	r5, [sl, #12]
   1c750:	ldr	r6, [r9, #4]
   1c754:	cmp	r6, #0
   1c758:	beq	1c7f4 <argp_failure@@Base+0xd80>
   1c75c:	add	r5, r4, #24
   1c760:	movw	r8, #6180	; 0x1824
   1c764:	movt	r8, #2
   1c768:	movw	r7, #6196	; 0x1834
   1c76c:	movt	r7, #2
   1c770:	str	r7, [fp, #-112]	; 0xffffff90
   1c774:	b	1c790 <argp_failure@@Base+0xd1c>
   1c778:	mov	r0, sl
   1c77c:	bl	1de34 <argp_error@@Base+0xed8>
   1c780:	b	1c74c <argp_failure@@Base+0xcd8>
   1c784:	add	r5, r5, #24
   1c788:	subs	r6, r6, #1
   1c78c:	beq	1c7f4 <argp_failure@@Base+0xd80>
   1c790:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1c794:	cmp	r3, #0
   1c798:	beq	1c784 <argp_failure@@Base+0xd10>
   1c79c:	ldr	r3, [r5, #-12]
   1c7a0:	tst	r3, #2
   1c7a4:	bne	1c784 <argp_failure@@Base+0xd10>
   1c7a8:	sub	r1, fp, #76	; 0x4c
   1c7ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c7b0:	ldr	r0, [r3, #12]
   1c7b4:	bl	1a8fc <_obstack_memory_used@@Base+0x1b1c>
   1c7b8:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1c7bc:	mov	r1, r8
   1c7c0:	mov	r0, sl
   1c7c4:	bl	1e4ac <argp_error@@Base+0x1550>
   1c7c8:	ldr	r2, [r4, #8]
   1c7cc:	cmp	r2, #0
   1c7d0:	beq	1c784 <argp_failure@@Base+0xd10>
   1c7d4:	ldr	r3, [r4, #12]
   1c7d8:	tst	r3, #1
   1c7dc:	movwne	r1, #6188	; 0x182c
   1c7e0:	movtne	r1, #2
   1c7e4:	ldreq	r1, [fp, #-112]	; 0xffffff90
   1c7e8:	mov	r0, sl
   1c7ec:	bl	1e4ac <argp_error@@Base+0x1550>
   1c7f0:	b	1c784 <argp_failure@@Base+0xd10>
   1c7f4:	ldr	r3, [sl, #28]
   1c7f8:	ldr	r2, [sl, #24]
   1c7fc:	sub	r3, r3, r2
   1c800:	ldr	r2, [sl, #16]
   1c804:	cmp	r3, r2
   1c808:	bhi	1c874 <argp_failure@@Base+0xe00>
   1c80c:	mov	r3, #0
   1c810:	str	r3, [sl, #4]
   1c814:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c818:	cmp	r3, #0
   1c81c:	beq	1c880 <argp_failure@@Base+0xe0c>
   1c820:	ldr	r3, [r4, #12]
   1c824:	tst	r3, #8
   1c828:	bne	1c854 <argp_failure@@Base+0xde0>
   1c82c:	ldr	r5, [r4, #4]
   1c830:	sub	r3, r5, #1
   1c834:	cmp	r3, #254	; 0xfe
   1c838:	bhi	1c854 <argp_failure@@Base+0xde0>
   1c83c:	bl	11478 <__ctype_b_loc@plt>
   1c840:	ldr	r3, [r0]
   1c844:	lsl	r5, r5, #1
   1c848:	ldrh	r3, [r3, r5]
   1c84c:	tst	r3, #16384	; 0x4000
   1c850:	bne	1ca5c <argp_failure@@Base+0xfe8>
   1c854:	ldr	r3, [r4]
   1c858:	cmp	r3, #0
   1c85c:	bne	1ca5c <argp_failure@@Base+0xfe8>
   1c860:	sub	r2, fp, #76	; 0x4c
   1c864:	ldr	r1, [r9, #20]
   1c868:	ldr	r0, [r4, #16]
   1c86c:	bl	1a6f4 <_obstack_memory_used@@Base+0x1914>
   1c870:	b	1ca58 <argp_failure@@Base+0xfe4>
   1c874:	mov	r0, sl
   1c878:	bl	1de34 <argp_error@@Base+0xed8>
   1c87c:	b	1c80c <argp_failure@@Base+0xd98>
   1c880:	ldr	r5, [r4, #16]
   1c884:	ldr	r3, [fp, #-104]	; 0xffffff98
   1c888:	ldr	r2, [r9, #20]
   1c88c:	ldr	r1, [r4, #4]
   1c890:	mov	r0, r5
   1c894:	bl	19f1c <_obstack_memory_used@@Base+0x113c>
   1c898:	subs	r4, r0, #0
   1c89c:	beq	1ca14 <argp_failure@@Base+0xfa0>
   1c8a0:	ldrb	r3, [r4]
   1c8a4:	cmp	r3, #0
   1c8a8:	beq	1ca0c <argp_failure@@Base+0xf98>
   1c8ac:	ldr	r3, [sl, #28]
   1c8b0:	ldr	r2, [sl, #24]
   1c8b4:	sub	r3, r3, r2
   1c8b8:	ldr	r2, [sl, #16]
   1c8bc:	cmp	r3, r2
   1c8c0:	bhi	1c96c <argp_failure@@Base+0xef8>
   1c8c4:	ldr	r6, [sl, #20]
   1c8c8:	bic	r6, r6, r6, asr #31
   1c8cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c8d0:	ldr	r7, [r3, #20]
   1c8d4:	str	r7, [sl, #4]
   1c8d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c8dc:	ldr	r7, [r3, #20]
   1c8e0:	ldr	r3, [sl, #28]
   1c8e4:	ldr	r2, [sl, #24]
   1c8e8:	sub	r3, r3, r2
   1c8ec:	ldr	r2, [sl, #16]
   1c8f0:	cmp	r3, r2
   1c8f4:	bhi	1c9a8 <argp_failure@@Base+0xf34>
   1c8f8:	str	r7, [sl, #12]
   1c8fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c900:	ldr	r1, [r3, #20]
   1c904:	add	r3, r1, #3
   1c908:	cmp	r6, r3
   1c90c:	bhi	1c9b4 <argp_failure@@Base+0xf40>
   1c910:	cmp	r6, r1
   1c914:	bcc	1c9f4 <argp_failure@@Base+0xf80>
   1c918:	ldr	r3, [sl, #28]
   1c91c:	add	r3, r3, #3
   1c920:	ldr	r2, [sl, #32]
   1c924:	cmp	r2, r3
   1c928:	bcs	1c940 <argp_failure@@Base+0xecc>
   1c92c:	mov	r1, #3
   1c930:	mov	r0, sl
   1c934:	bl	1e3ac <argp_error@@Base+0x1450>
   1c938:	cmp	r0, #0
   1c93c:	beq	1c9fc <argp_failure@@Base+0xf88>
   1c940:	ldr	r2, [sl, #28]
   1c944:	movw	r3, #6200	; 0x1838
   1c948:	movt	r3, #2
   1c94c:	ldrh	r1, [r3]
   1c950:	strh	r1, [r2]
   1c954:	ldrb	r3, [r3, #2]
   1c958:	strb	r3, [r2, #2]
   1c95c:	ldr	r3, [sl, #28]
   1c960:	add	r3, r3, #3
   1c964:	str	r3, [sl, #28]
   1c968:	b	1c9fc <argp_failure@@Base+0xf88>
   1c96c:	mov	r0, sl
   1c970:	bl	1de34 <argp_error@@Base+0xed8>
   1c974:	ldr	r6, [sl, #20]
   1c978:	bic	r6, r6, r6, asr #31
   1c97c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1c980:	ldr	r7, [r3, #20]
   1c984:	ldr	r3, [sl, #28]
   1c988:	ldr	r2, [sl, #24]
   1c98c:	sub	r3, r3, r2
   1c990:	ldr	r2, [sl, #16]
   1c994:	cmp	r3, r2
   1c998:	bls	1c8d4 <argp_failure@@Base+0xe60>
   1c99c:	mov	r0, sl
   1c9a0:	bl	1de34 <argp_error@@Base+0xed8>
   1c9a4:	b	1c8d4 <argp_failure@@Base+0xe60>
   1c9a8:	mov	r0, sl
   1c9ac:	bl	1de34 <argp_error@@Base+0xed8>
   1c9b0:	b	1c8f8 <argp_failure@@Base+0xe84>
   1c9b4:	ldr	r2, [sl, #28]
   1c9b8:	ldr	r3, [sl, #32]
   1c9bc:	cmp	r2, r3
   1c9c0:	bcs	1c9dc <argp_failure@@Base+0xf68>
   1c9c4:	ldr	r3, [sl, #28]
   1c9c8:	add	r2, r3, #1
   1c9cc:	str	r2, [sl, #28]
   1c9d0:	mov	r2, #10
   1c9d4:	strb	r2, [r3]
   1c9d8:	b	1c9fc <argp_failure@@Base+0xf88>
   1c9dc:	mov	r1, #1
   1c9e0:	mov	r0, sl
   1c9e4:	bl	1e3ac <argp_error@@Base+0x1450>
   1c9e8:	cmp	r0, #0
   1c9ec:	bne	1c9c4 <argp_failure@@Base+0xf50>
   1c9f0:	b	1c9fc <argp_failure@@Base+0xf88>
   1c9f4:	mov	r0, sl
   1c9f8:	bl	1a26c <_obstack_memory_used@@Base+0x148c>
   1c9fc:	mov	r0, r4
   1ca00:	bl	1149c <strlen@plt>
   1ca04:	subs	r6, r0, #0
   1ca08:	bne	1cb34 <argp_failure@@Base+0x10c0>
   1ca0c:	cmp	r5, r4
   1ca10:	bne	1cb7c <argp_failure@@Base+0x1108>
   1ca14:	ldr	r3, [sl, #28]
   1ca18:	ldr	r2, [sl, #24]
   1ca1c:	sub	r3, r3, r2
   1ca20:	ldr	r2, [sl, #16]
   1ca24:	cmp	r3, r2
   1ca28:	bhi	1cb88 <argp_failure@@Base+0x1114>
   1ca2c:	mov	r3, #0
   1ca30:	str	r3, [sl, #4]
   1ca34:	ldr	r2, [sl, #28]
   1ca38:	ldr	r3, [sl, #32]
   1ca3c:	cmp	r2, r3
   1ca40:	bcs	1cb94 <argp_failure@@Base+0x1120>
   1ca44:	ldr	r3, [sl, #28]
   1ca48:	add	r2, r3, #1
   1ca4c:	str	r2, [sl, #28]
   1ca50:	mov	r2, #10
   1ca54:	strb	r2, [r3]
   1ca58:	str	r9, [fp, #-88]	; 0xffffffa8
   1ca5c:	ldr	r3, [sl, #28]
   1ca60:	ldr	r2, [sl, #24]
   1ca64:	sub	r3, r3, r2
   1ca68:	ldr	r2, [sl, #16]
   1ca6c:	cmp	r3, r2
   1ca70:	bhi	1cbac <argp_failure@@Base+0x1138>
   1ca74:	ldr	r3, [fp, #-120]	; 0xffffff88
   1ca78:	str	r3, [sl, #4]
   1ca7c:	ldr	r3, [sl, #28]
   1ca80:	ldr	r2, [sl, #24]
   1ca84:	sub	r3, r3, r2
   1ca88:	ldr	r2, [sl, #16]
   1ca8c:	cmp	r3, r2
   1ca90:	bhi	1cbb8 <argp_failure@@Base+0x1144>
   1ca94:	ldr	r3, [fp, #-124]	; 0xffffff84
   1ca98:	str	r3, [sl, #12]
   1ca9c:	add	r9, r9, #28
   1caa0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1caa4:	subs	r3, r3, #1
   1caa8:	str	r3, [fp, #-116]	; 0xffffff8c
   1caac:	beq	1cbc4 <argp_failure@@Base+0x1150>
   1cab0:	ldr	r4, [r9]
   1cab4:	ldr	r8, [r9, #8]
   1cab8:	ldr	r3, [sl, #28]
   1cabc:	ldr	r2, [sl, #24]
   1cac0:	sub	r3, r3, r2
   1cac4:	ldr	r2, [sl, #16]
   1cac8:	cmp	r3, r2
   1cacc:	bhi	1c4d8 <argp_failure@@Base+0xa64>
   1cad0:	ldr	r3, [sl, #4]
   1cad4:	str	r3, [fp, #-120]	; 0xffffff88
   1cad8:	mov	r3, #0
   1cadc:	str	r3, [sl, #4]
   1cae0:	ldr	r3, [sl, #12]
   1cae4:	str	r3, [fp, #-124]	; 0xffffff84
   1cae8:	str	r9, [fp, #-76]	; 0xffffffb4
   1caec:	str	sl, [fp, #-72]	; 0xffffffb8
   1caf0:	sub	r3, fp, #88	; 0x58
   1caf4:	str	r3, [fp, #-68]	; 0xffffffbc
   1caf8:	mov	r3, #1
   1cafc:	str	r3, [fp, #-64]	; 0xffffffc0
   1cb00:	ldr	r3, [fp, #-104]	; 0xffffff98
   1cb04:	str	r3, [fp, #-60]	; 0xffffffc4
   1cb08:	ldr	r3, [r4, #12]
   1cb0c:	ands	r3, r3, #8
   1cb10:	str	r3, [fp, #-112]	; 0xffffff90
   1cb14:	movne	r3, #0
   1cb18:	strne	r3, [fp, #-112]	; 0xffffff90
   1cb1c:	bne	1c510 <argp_failure@@Base+0xa9c>
   1cb20:	ldr	r2, [r9, #4]
   1cb24:	cmp	r2, #0
   1cb28:	beq	1c510 <argp_failure@@Base+0xa9c>
   1cb2c:	add	r3, r4, #24
   1cb30:	b	1c4f0 <argp_failure@@Base+0xa7c>
   1cb34:	ldr	r3, [sl, #28]
   1cb38:	add	r3, r3, r6
   1cb3c:	ldr	r2, [sl, #32]
   1cb40:	cmp	r2, r3
   1cb44:	bcs	1cb5c <argp_failure@@Base+0x10e8>
   1cb48:	mov	r1, r6
   1cb4c:	mov	r0, sl
   1cb50:	bl	1e3ac <argp_error@@Base+0x1450>
   1cb54:	cmp	r0, #0
   1cb58:	beq	1ca0c <argp_failure@@Base+0xf98>
   1cb5c:	mov	r2, r6
   1cb60:	mov	r1, r4
   1cb64:	ldr	r0, [sl, #28]
   1cb68:	bl	11364 <memcpy@plt>
   1cb6c:	ldr	r3, [sl, #28]
   1cb70:	add	r6, r3, r6
   1cb74:	str	r6, [sl, #28]
   1cb78:	b	1ca0c <argp_failure@@Base+0xf98>
   1cb7c:	mov	r0, r4
   1cb80:	bl	18900 <argp_parse@@Base+0xcd8>
   1cb84:	b	1ca14 <argp_failure@@Base+0xfa0>
   1cb88:	mov	r0, sl
   1cb8c:	bl	1de34 <argp_error@@Base+0xed8>
   1cb90:	b	1ca2c <argp_failure@@Base+0xfb8>
   1cb94:	mov	r1, #1
   1cb98:	mov	r0, sl
   1cb9c:	bl	1e3ac <argp_error@@Base+0x1450>
   1cba0:	cmp	r0, #0
   1cba4:	bne	1ca44 <argp_failure@@Base+0xfd0>
   1cba8:	b	1ca58 <argp_failure@@Base+0xfe4>
   1cbac:	mov	r0, sl
   1cbb0:	bl	1de34 <argp_error@@Base+0xed8>
   1cbb4:	b	1ca74 <argp_failure@@Base+0x1000>
   1cbb8:	mov	r0, sl
   1cbbc:	bl	1de34 <argp_error@@Base+0xed8>
   1cbc0:	b	1ca94 <argp_failure@@Base+0x1020>
   1cbc4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cbc8:	cmp	r3, #0
   1cbcc:	beq	1cc30 <argp_failure@@Base+0x11bc>
   1cbd0:	movw	r3, #11004	; 0x2afc
   1cbd4:	movt	r3, #3
   1cbd8:	ldr	r3, [r3, #4]
   1cbdc:	cmp	r3, #0
   1cbe0:	beq	1cc30 <argp_failure@@Base+0x11bc>
   1cbe4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1cbe8:	cmp	r3, #0
   1cbec:	ldrne	r2, [r3]
   1cbf0:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1cbf4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1cbf8:	mov	r1, #5
   1cbfc:	movt	r1, #512	; 0x200
   1cc00:	movw	r0, #6204	; 0x183c
   1cc04:	movt	r0, #2
   1cc08:	bl	19f1c <_obstack_memory_used@@Base+0x113c>
   1cc0c:	subs	r4, r0, #0
   1cc10:	beq	1cc30 <argp_failure@@Base+0x11bc>
   1cc14:	ldrb	r3, [r4]
   1cc18:	cmp	r3, #0
   1cc1c:	bne	1ccc4 <argp_failure@@Base+0x1250>
   1cc20:	movw	r3, #6204	; 0x183c
   1cc24:	movt	r3, #2
   1cc28:	cmp	r4, r3
   1cc2c:	bne	1cd98 <argp_failure@@Base+0x1324>
   1cc30:	mov	r4, #1
   1cc34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1cc38:	tst	r3, #32
   1cc3c:	bne	1cda4 <argp_failure@@Base+0x1330>
   1cc40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1cc44:	tst	r3, #64	; 0x40
   1cc48:	beq	1cc84 <argp_failure@@Base+0x1210>
   1cc4c:	movw	r3, #11288	; 0x2c18
   1cc50:	movt	r3, #3
   1cc54:	ldr	r3, [r3]
   1cc58:	cmp	r3, #0
   1cc5c:	beq	1cc84 <argp_failure@@Base+0x1210>
   1cc60:	cmp	r4, #0
   1cc64:	bne	1cdcc <argp_failure@@Base+0x1358>
   1cc68:	movw	r3, #11288	; 0x2c18
   1cc6c:	movt	r3, #3
   1cc70:	ldr	r2, [r3]
   1cc74:	movw	r1, #6320	; 0x18b0
   1cc78:	movt	r1, #2
   1cc7c:	mov	r0, sl
   1cc80:	bl	1e4ac <argp_error@@Base+0x1550>
   1cc84:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1cc88:	bl	113b8 <funlockfile@plt>
   1cc8c:	ldr	r3, [fp, #-128]	; 0xffffff80
   1cc90:	cmp	r3, #0
   1cc94:	beq	1cca0 <argp_failure@@Base+0x122c>
   1cc98:	mov	r0, r3
   1cc9c:	bl	19d94 <_obstack_memory_used@@Base+0xfb4>
   1cca0:	mov	r0, sl
   1cca4:	bl	1e360 <argp_error@@Base+0x1404>
   1cca8:	sub	sp, fp, #32
   1ccac:	ldrd	r4, [sp]
   1ccb0:	ldrd	r6, [sp, #8]
   1ccb4:	ldrd	r8, [sp, #16]
   1ccb8:	ldrd	sl, [sp, #24]
   1ccbc:	add	sp, sp, #32
   1ccc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccc4:	ldr	r2, [sl, #28]
   1ccc8:	ldr	r3, [sl, #32]
   1cccc:	cmp	r2, r3
   1ccd0:	bcs	1cd20 <argp_failure@@Base+0x12ac>
   1ccd4:	ldr	r3, [sl, #28]
   1ccd8:	add	r2, r3, #1
   1ccdc:	str	r2, [sl, #28]
   1cce0:	mov	r2, #10
   1cce4:	strb	r2, [r3]
   1cce8:	mov	r0, r4
   1ccec:	bl	1149c <strlen@plt>
   1ccf0:	subs	r5, r0, #0
   1ccf4:	bne	1cd38 <argp_failure@@Base+0x12c4>
   1ccf8:	ldr	r2, [sl, #28]
   1ccfc:	ldr	r3, [sl, #32]
   1cd00:	cmp	r2, r3
   1cd04:	bcs	1cd80 <argp_failure@@Base+0x130c>
   1cd08:	ldr	r3, [sl, #28]
   1cd0c:	add	r2, r3, #1
   1cd10:	str	r2, [sl, #28]
   1cd14:	mov	r2, #10
   1cd18:	strb	r2, [r3]
   1cd1c:	b	1cc20 <argp_failure@@Base+0x11ac>
   1cd20:	mov	r1, #1
   1cd24:	mov	r0, sl
   1cd28:	bl	1e3ac <argp_error@@Base+0x1450>
   1cd2c:	cmp	r0, #0
   1cd30:	bne	1ccd4 <argp_failure@@Base+0x1260>
   1cd34:	b	1cce8 <argp_failure@@Base+0x1274>
   1cd38:	ldr	r3, [sl, #28]
   1cd3c:	add	r3, r3, r5
   1cd40:	ldr	r2, [sl, #32]
   1cd44:	cmp	r2, r3
   1cd48:	bcs	1cd60 <argp_failure@@Base+0x12ec>
   1cd4c:	mov	r1, r5
   1cd50:	mov	r0, sl
   1cd54:	bl	1e3ac <argp_error@@Base+0x1450>
   1cd58:	cmp	r0, #0
   1cd5c:	beq	1ccf8 <argp_failure@@Base+0x1284>
   1cd60:	mov	r2, r5
   1cd64:	mov	r1, r4
   1cd68:	ldr	r0, [sl, #28]
   1cd6c:	bl	11364 <memcpy@plt>
   1cd70:	ldr	r3, [sl, #28]
   1cd74:	add	r5, r3, r5
   1cd78:	str	r5, [sl, #28]
   1cd7c:	b	1ccf8 <argp_failure@@Base+0x1284>
   1cd80:	mov	r1, #1
   1cd84:	mov	r0, sl
   1cd88:	bl	1e3ac <argp_error@@Base+0x1450>
   1cd8c:	cmp	r0, #0
   1cd90:	bne	1cd08 <argp_failure@@Base+0x1294>
   1cd94:	b	1cc20 <argp_failure@@Base+0x11ac>
   1cd98:	mov	r0, r4
   1cd9c:	bl	18900 <argp_parse@@Base+0xcd8>
   1cda0:	b	1cc30 <argp_failure@@Base+0x11bc>
   1cda4:	str	sl, [sp, #4]
   1cda8:	mov	r3, #0
   1cdac:	str	r3, [sp]
   1cdb0:	mov	r3, r4
   1cdb4:	mov	r2, #1
   1cdb8:	ldr	r1, [fp, #-104]	; 0xffffff98
   1cdbc:	ldr	r0, [fp, #-108]	; 0xffffff94
   1cdc0:	bl	1aaa0 <_obstack_memory_used@@Base+0x1cc0>
   1cdc4:	orr	r4, r4, r0
   1cdc8:	b	1cc40 <argp_failure@@Base+0x11cc>
   1cdcc:	ldr	r2, [sl, #28]
   1cdd0:	ldr	r3, [sl, #32]
   1cdd4:	cmp	r2, r3
   1cdd8:	bcs	1cdf4 <argp_failure@@Base+0x1380>
   1cddc:	ldr	r3, [sl, #28]
   1cde0:	add	r2, r3, #1
   1cde4:	str	r2, [sl, #28]
   1cde8:	mov	r2, #10
   1cdec:	strb	r2, [r3]
   1cdf0:	b	1cc68 <argp_failure@@Base+0x11f4>
   1cdf4:	mov	r1, #1
   1cdf8:	mov	r0, sl
   1cdfc:	bl	1e3ac <argp_error@@Base+0x1450>
   1ce00:	cmp	r0, #0
   1ce04:	bne	1cddc <argp_failure@@Base+0x1368>
   1ce08:	b	1cc68 <argp_failure@@Base+0x11f4>
   1ce0c:	ldrb	r3, [r6]
   1ce10:	mov	r4, r6
   1ce14:	mov	r7, #0
   1ce18:	b	1be7c <argp_failure@@Base+0x408>
   1ce1c:	ldrb	r3, [r8]
   1ce20:	cmp	r3, r7
   1ce24:	beq	1c558 <argp_failure@@Base+0xae4>
   1ce28:	add	r5, r5, #24
   1ce2c:	subs	r6, r6, #1
   1ce30:	beq	1c648 <argp_failure@@Base+0xbd4>
   1ce34:	ldr	r9, [r5, #12]
   1ce38:	tst	r9, #8
   1ce3c:	bne	1ce28 <argp_failure@@Base+0x13b4>
   1ce40:	ldr	r7, [r5, #4]
   1ce44:	sub	r3, r7, #1
   1ce48:	cmp	r3, #254	; 0xfe
   1ce4c:	bhi	1ce28 <argp_failure@@Base+0x13b4>
   1ce50:	bl	11478 <__ctype_b_loc@plt>
   1ce54:	ldr	r2, [r0]
   1ce58:	lsl	r3, r7, #1
   1ce5c:	ldrh	r3, [r2, r3]
   1ce60:	tst	r3, #16384	; 0x4000
   1ce64:	bne	1ce1c <argp_failure@@Base+0x13a8>
   1ce68:	b	1ce28 <argp_failure@@Base+0x13b4>
   1ce6c:	andeq	r1, r2, r8, lsr r5

0001ce70 <argp_help@@Base>:
   1ce70:	push	{lr}		; (str lr, [sp, #-4]!)
   1ce74:	sub	sp, sp, #12
   1ce78:	str	r3, [sp]
   1ce7c:	mov	r3, r2
   1ce80:	mov	r2, r1
   1ce84:	mov	r1, #0
   1ce88:	bl	1bc90 <argp_failure@@Base+0x21c>
   1ce8c:	add	sp, sp, #12
   1ce90:	pop	{pc}		; (ldr pc, [sp], #4)

0001ce94 <argp_state_help@@Base>:
   1ce94:	strd	r4, [sp, #-12]!
   1ce98:	str	lr, [sp, #8]
   1ce9c:	sub	sp, sp, #12
   1cea0:	mov	r5, r2
   1cea4:	subs	r4, r0, #0
   1cea8:	beq	1cec8 <argp_state_help@@Base+0x34>
   1ceac:	ldr	r3, [r4, #16]
   1ceb0:	tst	r3, #2
   1ceb4:	beq	1cf08 <argp_state_help@@Base+0x74>
   1ceb8:	add	sp, sp, #12
   1cebc:	ldrd	r4, [sp]
   1cec0:	add	sp, sp, #8
   1cec4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cec8:	cmp	r1, #0
   1cecc:	beq	1ceb8 <argp_state_help@@Base+0x24>
   1ced0:	movw	r3, #11064	; 0x2b38
   1ced4:	movt	r3, #3
   1ced8:	ldr	r3, [r3]
   1cedc:	str	r3, [sp]
   1cee0:	mov	r3, r2
   1cee4:	mov	r2, r1
   1cee8:	mov	r1, #0
   1ceec:	mov	r0, r1
   1cef0:	bl	1bc90 <argp_failure@@Base+0x21c>
   1cef4:	b	1cf44 <argp_state_help@@Base+0xb0>
   1cef8:	movw	r3, #11060	; 0x2b34
   1cefc:	movt	r3, #3
   1cf00:	ldr	r0, [r3]
   1cf04:	bl	11484 <exit@plt>
   1cf08:	cmp	r1, #0
   1cf0c:	beq	1ceb8 <argp_state_help@@Base+0x24>
   1cf10:	ldr	r3, [r4, #16]
   1cf14:	tst	r3, #64	; 0x40
   1cf18:	orrne	r5, r5, #128	; 0x80
   1cf1c:	ldr	r3, [r4, #40]	; 0x28
   1cf20:	str	r3, [sp]
   1cf24:	mov	r3, r5
   1cf28:	mov	r2, r1
   1cf2c:	mov	r1, r4
   1cf30:	ldr	r0, [r4]
   1cf34:	bl	1bc90 <argp_failure@@Base+0x21c>
   1cf38:	ldr	r3, [r4, #16]
   1cf3c:	tst	r3, #32
   1cf40:	bne	1ceb8 <argp_state_help@@Base+0x24>
   1cf44:	tst	r5, #256	; 0x100
   1cf48:	bne	1cef8 <argp_state_help@@Base+0x64>
   1cf4c:	tst	r5, #512	; 0x200
   1cf50:	beq	1ceb8 <argp_state_help@@Base+0x24>
   1cf54:	mov	r0, #0
   1cf58:	bl	11484 <exit@plt>

0001cf5c <argp_error@@Base>:
   1cf5c:	push	{r1, r2, r3}
   1cf60:	strd	r4, [sp, #-12]!
   1cf64:	str	lr, [sp, #8]
   1cf68:	sub	sp, sp, #8
   1cf6c:	subs	r5, r0, #0
   1cf70:	beq	1d048 <argp_error@@Base+0xec>
   1cf74:	ldr	r3, [r5, #16]
   1cf78:	tst	r3, #2
   1cf7c:	bne	1d030 <argp_error@@Base+0xd4>
   1cf80:	ldr	r4, [r5, #44]	; 0x2c
   1cf84:	cmp	r4, #0
   1cf88:	beq	1d030 <argp_error@@Base+0xd4>
   1cf8c:	mov	r0, r4
   1cf90:	bl	1158c <flockfile@plt>
   1cf94:	add	r3, sp, #24
   1cf98:	str	r3, [sp, #4]
   1cf9c:	ldr	r0, [r5, #40]	; 0x28
   1cfa0:	mov	r1, r4
   1cfa4:	bl	112bc <fputs_unlocked@plt>
   1cfa8:	ldr	r3, [r4, #20]
   1cfac:	ldr	r2, [r4, #24]
   1cfb0:	cmp	r3, r2
   1cfb4:	addcc	r2, r3, #1
   1cfb8:	strcc	r2, [r4, #20]
   1cfbc:	movcc	r2, #58	; 0x3a
   1cfc0:	strbcc	r2, [r3]
   1cfc4:	bcs	1d07c <argp_error@@Base+0x120>
   1cfc8:	ldr	r3, [r4, #20]
   1cfcc:	ldr	r2, [r4, #24]
   1cfd0:	cmp	r3, r2
   1cfd4:	addcc	r2, r3, #1
   1cfd8:	strcc	r2, [r4, #20]
   1cfdc:	movcc	r2, #32
   1cfe0:	strbcc	r2, [r3]
   1cfe4:	bcs	1d08c <argp_error@@Base+0x130>
   1cfe8:	ldr	r2, [sp, #4]
   1cfec:	ldr	r1, [sp, #20]
   1cff0:	mov	r0, r4
   1cff4:	bl	1155c <vfprintf@plt>
   1cff8:	ldr	r3, [r4, #20]
   1cffc:	ldr	r2, [r4, #24]
   1d000:	cmp	r3, r2
   1d004:	addcc	r2, r3, #1
   1d008:	strcc	r2, [r4, #20]
   1d00c:	movcc	r2, #10
   1d010:	strbcc	r2, [r3]
   1d014:	bcs	1d09c <argp_error@@Base+0x140>
   1d018:	mov	r2, #260	; 0x104
   1d01c:	mov	r1, r4
   1d020:	mov	r0, r5
   1d024:	bl	1ce94 <argp_state_help@@Base>
   1d028:	mov	r0, r4
   1d02c:	bl	113b8 <funlockfile@plt>
   1d030:	add	sp, sp, #8
   1d034:	ldrd	r4, [sp]
   1d038:	ldr	lr, [sp, #8]
   1d03c:	add	sp, sp, #12
   1d040:	add	sp, sp, #12
   1d044:	bx	lr
   1d048:	movw	r3, #11072	; 0x2b40
   1d04c:	movt	r3, #3
   1d050:	ldr	r4, [r3]
   1d054:	cmp	r4, #0
   1d058:	beq	1d030 <argp_error@@Base+0xd4>
   1d05c:	mov	r0, r4
   1d060:	bl	1158c <flockfile@plt>
   1d064:	add	r3, sp, #24
   1d068:	str	r3, [sp, #4]
   1d06c:	movw	r3, #11064	; 0x2b38
   1d070:	movt	r3, #3
   1d074:	ldr	r0, [r3]
   1d078:	b	1cfa0 <argp_error@@Base+0x44>
   1d07c:	mov	r1, #58	; 0x3a
   1d080:	mov	r0, r4
   1d084:	bl	11538 <__overflow@plt>
   1d088:	b	1cfc8 <argp_error@@Base+0x6c>
   1d08c:	mov	r1, #32
   1d090:	mov	r0, r4
   1d094:	bl	11538 <__overflow@plt>
   1d098:	b	1cfe8 <argp_error@@Base+0x8c>
   1d09c:	mov	r1, #10
   1d0a0:	mov	r0, r4
   1d0a4:	bl	11538 <__overflow@plt>
   1d0a8:	b	1d018 <argp_error@@Base+0xbc>
   1d0ac:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1d0b0:	strd	r6, [sp, #8]
   1d0b4:	strd	r8, [sp, #16]
   1d0b8:	str	lr, [sp, #24]
   1d0bc:	ldr	r5, [r1, #28]
   1d0c0:	ldr	r6, [r1, #32]
   1d0c4:	ldr	r8, [r1]
   1d0c8:	add	r7, r0, r6, lsl #2
   1d0cc:	b	1d0fc <argp_error@@Base+0x1a0>
   1d0d0:	add	r3, r0, r5, lsl #2
   1d0d4:	add	r4, r9, r5
   1d0d8:	add	r4, r0, r4, lsl #2
   1d0dc:	mov	r2, r7
   1d0e0:	ldr	ip, [r3]
   1d0e4:	ldr	lr, [r2]
   1d0e8:	str	lr, [r3], #4
   1d0ec:	str	ip, [r2], #4
   1d0f0:	cmp	r3, r4
   1d0f4:	bne	1d0e0 <argp_error@@Base+0x184>
   1d0f8:	add	r5, r5, r9
   1d0fc:	cmp	r8, r6
   1d100:	movle	r3, #0
   1d104:	movgt	r3, #1
   1d108:	cmp	r5, r6
   1d10c:	movge	r3, #0
   1d110:	cmp	r3, #0
   1d114:	beq	1d158 <argp_error@@Base+0x1fc>
   1d118:	sub	r9, r8, r6
   1d11c:	sub	r3, r6, r5
   1d120:	cmp	r9, r3
   1d124:	ble	1d0d0 <argp_error@@Base+0x174>
   1d128:	add	r2, r0, r5, lsl #2
   1d12c:	sub	r9, r8, r3
   1d130:	add	r3, r0, r9, lsl #2
   1d134:	add	r4, r0, r8, lsl #2
   1d138:	ldr	ip, [r2]
   1d13c:	ldr	lr, [r3]
   1d140:	str	lr, [r2], #4
   1d144:	str	ip, [r3], #4
   1d148:	cmp	r3, r4
   1d14c:	bne	1d138 <argp_error@@Base+0x1dc>
   1d150:	mov	r8, r9
   1d154:	b	1d0fc <argp_error@@Base+0x1a0>
   1d158:	ldr	r0, [r1]
   1d15c:	ldr	r3, [r1, #32]
   1d160:	sub	r2, r0, r3
   1d164:	ldr	r3, [r1, #28]
   1d168:	add	r3, r3, r2
   1d16c:	str	r3, [r1, #28]
   1d170:	str	r0, [r1, #32]
   1d174:	ldrd	r4, [sp]
   1d178:	ldrd	r6, [sp, #8]
   1d17c:	ldrd	r8, [sp, #16]
   1d180:	add	sp, sp, #24
   1d184:	pop	{pc}		; (ldr pc, [sp], #4)
   1d188:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d18c:	strd	r6, [sp, #8]
   1d190:	strd	r8, [sp, #16]
   1d194:	strd	sl, [sp, #24]
   1d198:	str	lr, [sp, #32]
   1d19c:	sub	sp, sp, #52	; 0x34
   1d1a0:	str	r0, [sp, #32]
   1d1a4:	str	r1, [sp, #20]
   1d1a8:	str	r2, [sp, #28]
   1d1ac:	str	r3, [sp, #16]
   1d1b0:	ldr	fp, [sp, #96]	; 0x60
   1d1b4:	ldr	r9, [fp, #20]
   1d1b8:	ldrb	r3, [r9]
   1d1bc:	cmp	r3, #0
   1d1c0:	cmpne	r3, #61	; 0x3d
   1d1c4:	beq	1d1fc <argp_error@@Base+0x2a0>
   1d1c8:	mov	r8, r9
   1d1cc:	ldrb	r3, [r8, #1]!
   1d1d0:	cmp	r3, #0
   1d1d4:	cmpne	r3, #61	; 0x3d
   1d1d8:	bne	1d1cc <argp_error@@Base+0x270>
   1d1dc:	sub	r7, r8, r9
   1d1e0:	ldr	r5, [sp, #16]
   1d1e4:	ldr	sl, [r5]
   1d1e8:	cmp	sl, #0
   1d1ec:	beq	1d6c0 <argp_error@@Base+0x764>
   1d1f0:	mov	r4, sl
   1d1f4:	mov	r6, #0
   1d1f8:	b	1d214 <argp_error@@Base+0x2b8>
   1d1fc:	mov	r8, r9
   1d200:	b	1d1dc <argp_error@@Base+0x280>
   1d204:	add	r6, r6, #1
   1d208:	ldr	r4, [r5, #16]!
   1d20c:	cmp	r4, #0
   1d210:	beq	1d6c4 <argp_error@@Base+0x768>
   1d214:	str	r5, [sp, #12]
   1d218:	mov	r2, r7
   1d21c:	mov	r1, r9
   1d220:	mov	r0, r4
   1d224:	bl	115f8 <strncmp@plt>
   1d228:	cmp	r0, #0
   1d22c:	bne	1d204 <argp_error@@Base+0x2a8>
   1d230:	mov	r0, r4
   1d234:	bl	1149c <strlen@plt>
   1d238:	cmp	r0, r7
   1d23c:	bne	1d204 <argp_error@@Base+0x2a8>
   1d240:	cmp	r5, #0
   1d244:	beq	1d6cc <argp_error@@Base+0x770>
   1d248:	ldr	r3, [fp]
   1d24c:	add	r2, r3, #1
   1d250:	str	r2, [fp]
   1d254:	mov	r1, #0
   1d258:	str	r1, [fp, #20]
   1d25c:	ldrb	r1, [r8]
   1d260:	cmp	r1, #0
   1d264:	beq	1d614 <argp_error@@Base+0x6b8>
   1d268:	ldr	r3, [sp, #12]
   1d26c:	ldr	r3, [r3, #4]
   1d270:	cmp	r3, #0
   1d274:	beq	1d5c0 <argp_error@@Base+0x664>
   1d278:	add	r8, r8, #1
   1d27c:	str	r8, [fp, #12]
   1d280:	ldr	r3, [sp, #88]	; 0x58
   1d284:	cmp	r3, #0
   1d288:	strne	r6, [r3]
   1d28c:	ldr	r2, [sp, #12]
   1d290:	ldr	r3, [r2, #8]
   1d294:	cmp	r3, #0
   1d298:	beq	1d6ac <argp_error@@Base+0x750>
   1d29c:	ldr	r2, [r2, #12]
   1d2a0:	str	r2, [r3]
   1d2a4:	mov	r0, #0
   1d2a8:	add	sp, sp, #52	; 0x34
   1d2ac:	ldrd	r4, [sp]
   1d2b0:	ldrd	r6, [sp, #8]
   1d2b4:	ldrd	r8, [sp, #16]
   1d2b8:	ldrd	sl, [sp, #24]
   1d2bc:	add	sp, sp, #32
   1d2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1d2c4:	ldr	r2, [sl, #8]
   1d2c8:	ldr	r3, [r9, #8]
   1d2cc:	cmp	r2, r3
   1d2d0:	bne	1d390 <argp_error@@Base+0x434>
   1d2d4:	ldr	r2, [sl, #12]
   1d2d8:	ldr	r3, [r9, #12]
   1d2dc:	cmp	r2, r3
   1d2e0:	bne	1d390 <argp_error@@Base+0x434>
   1d2e4:	b	1d348 <argp_error@@Base+0x3ec>
   1d2e8:	mov	r0, r6
   1d2ec:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1d2f0:	subs	r3, r0, #0
   1d2f4:	str	r3, [sp, #24]
   1d2f8:	beq	1d3c0 <argp_error@@Base+0x464>
   1d2fc:	mov	r2, r6
   1d300:	mov	r1, #0
   1d304:	ldr	r7, [sp, #24]
   1d308:	mov	r0, r7
   1d30c:	bl	114f0 <memset@plt>
   1d310:	ldr	r2, [sp, #36]	; 0x24
   1d314:	mov	r1, #1
   1d318:	strb	r1, [r7, r2]
   1d31c:	ldr	r3, [sp, #44]	; 0x2c
   1d320:	str	r3, [sp, #40]	; 0x28
   1d324:	b	1d3b0 <argp_error@@Base+0x454>
   1d328:	ldr	r3, [sp, #24]
   1d32c:	cmp	r3, #0
   1d330:	moveq	r5, #1
   1d334:	beq	1d348 <argp_error@@Base+0x3ec>
   1d338:	mov	r5, #1
   1d33c:	b	1d3b0 <argp_error@@Base+0x454>
   1d340:	str	r4, [sp, #36]	; 0x24
   1d344:	mov	sl, r9
   1d348:	add	r4, r4, #1
   1d34c:	ldr	r0, [r9, #16]!
   1d350:	cmp	r0, #0
   1d354:	beq	1d3c8 <argp_error@@Base+0x46c>
   1d358:	ldr	r2, [sp, #12]
   1d35c:	ldr	r1, [fp, #20]
   1d360:	bl	115f8 <strncmp@plt>
   1d364:	cmp	r0, #0
   1d368:	bne	1d348 <argp_error@@Base+0x3ec>
   1d36c:	cmp	sl, #0
   1d370:	beq	1d340 <argp_error@@Base+0x3e4>
   1d374:	ldr	r3, [sp, #92]	; 0x5c
   1d378:	cmp	r3, #0
   1d37c:	bne	1d390 <argp_error@@Base+0x434>
   1d380:	ldr	r2, [sl, #4]
   1d384:	ldr	r3, [r9, #4]
   1d388:	cmp	r2, r3
   1d38c:	beq	1d2c4 <argp_error@@Base+0x368>
   1d390:	cmp	r5, #0
   1d394:	bne	1d348 <argp_error@@Base+0x3ec>
   1d398:	ldr	r3, [sp, #100]	; 0x64
   1d39c:	cmp	r3, #0
   1d3a0:	beq	1d328 <argp_error@@Base+0x3cc>
   1d3a4:	ldr	r3, [sp, #24]
   1d3a8:	cmp	r3, #0
   1d3ac:	beq	1d2e8 <argp_error@@Base+0x38c>
   1d3b0:	ldr	r3, [sp, #24]
   1d3b4:	mov	r2, #1
   1d3b8:	strb	r2, [r3, r4]
   1d3bc:	b	1d348 <argp_error@@Base+0x3ec>
   1d3c0:	mov	r5, #1
   1d3c4:	b	1d348 <argp_error@@Base+0x3ec>
   1d3c8:	str	sl, [sp, #12]
   1d3cc:	ldr	r3, [sp, #24]
   1d3d0:	orrs	r3, r3, r5
   1d3d4:	bne	1d44c <argp_error@@Base+0x4f0>
   1d3d8:	ldr	r3, [sp, #12]
   1d3dc:	cmp	r3, #0
   1d3e0:	bne	1d5b8 <argp_error@@Base+0x65c>
   1d3e4:	ldr	r3, [sp, #92]	; 0x5c
   1d3e8:	cmp	r3, #0
   1d3ec:	beq	1d420 <argp_error@@Base+0x4c4>
   1d3f0:	ldr	r3, [fp]
   1d3f4:	ldr	r2, [sp, #20]
   1d3f8:	ldr	r3, [r2, r3, lsl #2]
   1d3fc:	ldrb	r3, [r3, #1]
   1d400:	cmp	r3, #45	; 0x2d
   1d404:	beq	1d420 <argp_error@@Base+0x4c4>
   1d408:	ldr	r3, [fp, #20]
   1d40c:	ldrb	r1, [r3]
   1d410:	ldr	r0, [sp, #28]
   1d414:	bl	114a8 <strchr@plt>
   1d418:	cmp	r0, #0
   1d41c:	bne	1d6b8 <argp_error@@Base+0x75c>
   1d420:	ldr	r3, [sp, #100]	; 0x64
   1d424:	cmp	r3, #0
   1d428:	bne	1d588 <argp_error@@Base+0x62c>
   1d42c:	mov	r2, #0
   1d430:	str	r2, [fp, #20]
   1d434:	ldr	r3, [fp]
   1d438:	add	r3, r3, #1
   1d43c:	str	r3, [fp]
   1d440:	str	r2, [fp, #8]
   1d444:	mov	r0, #63	; 0x3f
   1d448:	b	1d2a8 <argp_error@@Base+0x34c>
   1d44c:	ldr	r3, [sp, #100]	; 0x64
   1d450:	cmp	r3, #0
   1d454:	beq	1d48c <argp_error@@Base+0x530>
   1d458:	cmp	r5, #0
   1d45c:	beq	1d4c8 <argp_error@@Base+0x56c>
   1d460:	movw	r0, #11072	; 0x2b40
   1d464:	movt	r0, #3
   1d468:	ldr	r3, [fp, #20]
   1d46c:	str	r3, [sp]
   1d470:	ldr	r3, [sp, #104]	; 0x68
   1d474:	ldr	r2, [sp, #20]
   1d478:	ldr	r2, [r2]
   1d47c:	movw	r1, #6340	; 0x18c4
   1d480:	movt	r1, #2
   1d484:	ldr	r0, [r0]
   1d488:	bl	114b4 <fprintf@plt>
   1d48c:	ldr	r3, [sp, #40]	; 0x28
   1d490:	cmp	r3, #0
   1d494:	bne	1d57c <argp_error@@Base+0x620>
   1d498:	ldr	r4, [fp, #20]
   1d49c:	mov	r0, r4
   1d4a0:	bl	1149c <strlen@plt>
   1d4a4:	add	r0, r4, r0
   1d4a8:	str	r0, [fp, #20]
   1d4ac:	ldr	r3, [fp]
   1d4b0:	add	r3, r3, #1
   1d4b4:	str	r3, [fp]
   1d4b8:	mov	r3, #0
   1d4bc:	str	r3, [fp, #8]
   1d4c0:	mov	r0, #63	; 0x3f
   1d4c4:	b	1d2a8 <argp_error@@Base+0x34c>
   1d4c8:	movw	r4, #11072	; 0x2b40
   1d4cc:	movt	r4, #3
   1d4d0:	ldr	r0, [r4]
   1d4d4:	bl	1158c <flockfile@plt>
   1d4d8:	ldr	r3, [fp, #20]
   1d4dc:	str	r3, [sp]
   1d4e0:	ldr	r3, [sp, #104]	; 0x68
   1d4e4:	ldr	r2, [sp, #20]
   1d4e8:	ldr	r2, [r2]
   1d4ec:	movw	r1, #6372	; 0x18e4
   1d4f0:	movt	r1, #2
   1d4f4:	ldr	r0, [r4]
   1d4f8:	bl	114b4 <fprintf@plt>
   1d4fc:	cmp	r6, #0
   1d500:	ble	1d55c <argp_error@@Base+0x600>
   1d504:	ldr	r2, [sp, #24]
   1d508:	sub	r4, r2, #1
   1d50c:	sub	r3, r6, #1
   1d510:	add	r8, r2, r3
   1d514:	movw	r7, #6420	; 0x1914
   1d518:	movt	r7, #2
   1d51c:	movw	r6, #11072	; 0x2b40
   1d520:	movt	r6, #3
   1d524:	ldr	r9, [sp, #16]
   1d528:	b	1d538 <argp_error@@Base+0x5dc>
   1d52c:	add	r5, r5, #1
   1d530:	cmp	r8, r4
   1d534:	beq	1d55c <argp_error@@Base+0x600>
   1d538:	ldrb	r3, [r4, #1]!
   1d53c:	cmp	r3, #0
   1d540:	beq	1d52c <argp_error@@Base+0x5d0>
   1d544:	ldr	r3, [r9, r5, lsl #4]
   1d548:	ldr	r2, [sp, #104]	; 0x68
   1d54c:	mov	r1, r7
   1d550:	ldr	r0, [r6]
   1d554:	bl	114b4 <fprintf@plt>
   1d558:	b	1d52c <argp_error@@Base+0x5d0>
   1d55c:	movw	r4, #11072	; 0x2b40
   1d560:	movt	r4, #3
   1d564:	ldr	r1, [r4]
   1d568:	mov	r0, #10
   1d56c:	bl	11568 <fputc@plt>
   1d570:	ldr	r0, [r4]
   1d574:	bl	113b8 <funlockfile@plt>
   1d578:	b	1d48c <argp_error@@Base+0x530>
   1d57c:	ldr	r0, [sp, #24]
   1d580:	bl	18900 <argp_parse@@Base+0xcd8>
   1d584:	b	1d498 <argp_error@@Base+0x53c>
   1d588:	movw	r0, #11072	; 0x2b40
   1d58c:	movt	r0, #3
   1d590:	ldr	r3, [fp, #20]
   1d594:	str	r3, [sp]
   1d598:	ldr	r3, [sp, #104]	; 0x68
   1d59c:	ldr	r2, [sp, #20]
   1d5a0:	ldr	r2, [r2]
   1d5a4:	movw	r1, #6428	; 0x191c
   1d5a8:	movt	r1, #2
   1d5ac:	ldr	r0, [r0]
   1d5b0:	bl	114b4 <fprintf@plt>
   1d5b4:	b	1d42c <argp_error@@Base+0x4d0>
   1d5b8:	ldr	r6, [sp, #36]	; 0x24
   1d5bc:	b	1d248 <argp_error@@Base+0x2ec>
   1d5c0:	ldr	r3, [sp, #100]	; 0x64
   1d5c4:	cmp	r3, #0
   1d5c8:	bne	1d5e0 <argp_error@@Base+0x684>
   1d5cc:	ldr	r3, [sp, #12]
   1d5d0:	ldr	r3, [r3, #12]
   1d5d4:	str	r3, [fp, #8]
   1d5d8:	mov	r0, #63	; 0x3f
   1d5dc:	b	1d2a8 <argp_error@@Base+0x34c>
   1d5e0:	movw	r0, #11072	; 0x2b40
   1d5e4:	movt	r0, #3
   1d5e8:	ldr	r3, [sp, #12]
   1d5ec:	ldr	r3, [r3]
   1d5f0:	str	r3, [sp]
   1d5f4:	ldr	r3, [sp, #104]	; 0x68
   1d5f8:	ldr	r2, [sp, #20]
   1d5fc:	ldr	r2, [r2]
   1d600:	movw	r1, #6460	; 0x193c
   1d604:	movt	r1, #2
   1d608:	ldr	r0, [r0]
   1d60c:	bl	114b4 <fprintf@plt>
   1d610:	b	1d5cc <argp_error@@Base+0x670>
   1d614:	ldr	r1, [sp, #12]
   1d618:	ldr	r1, [r1, #4]
   1d61c:	cmp	r1, #1
   1d620:	bne	1d280 <argp_error@@Base+0x324>
   1d624:	ldr	r1, [sp, #32]
   1d628:	cmp	r2, r1
   1d62c:	bge	1d648 <argp_error@@Base+0x6ec>
   1d630:	add	r3, r3, #2
   1d634:	str	r3, [fp]
   1d638:	ldr	r3, [sp, #20]
   1d63c:	ldr	r3, [r3, r2, lsl #2]
   1d640:	str	r3, [fp, #12]
   1d644:	b	1d280 <argp_error@@Base+0x324>
   1d648:	ldr	r3, [sp, #100]	; 0x64
   1d64c:	cmp	r3, #0
   1d650:	bne	1d678 <argp_error@@Base+0x71c>
   1d654:	ldr	r3, [sp, #12]
   1d658:	ldr	r3, [r3, #12]
   1d65c:	str	r3, [fp, #8]
   1d660:	ldr	r3, [sp, #28]
   1d664:	ldrb	r3, [r3]
   1d668:	cmp	r3, #58	; 0x3a
   1d66c:	moveq	r0, #58	; 0x3a
   1d670:	movne	r0, #63	; 0x3f
   1d674:	b	1d2a8 <argp_error@@Base+0x34c>
   1d678:	movw	r0, #11072	; 0x2b40
   1d67c:	movt	r0, #3
   1d680:	ldr	r3, [sp, #12]
   1d684:	ldr	r3, [r3]
   1d688:	str	r3, [sp]
   1d68c:	ldr	r3, [sp, #104]	; 0x68
   1d690:	ldr	r2, [sp, #20]
   1d694:	ldr	r2, [r2]
   1d698:	movw	r1, #6508	; 0x196c
   1d69c:	movt	r1, #2
   1d6a0:	ldr	r0, [r0]
   1d6a4:	bl	114b4 <fprintf@plt>
   1d6a8:	b	1d654 <argp_error@@Base+0x6f8>
   1d6ac:	ldr	r3, [sp, #12]
   1d6b0:	ldr	r0, [r3, #12]
   1d6b4:	b	1d2a8 <argp_error@@Base+0x34c>
   1d6b8:	mvn	r0, #0
   1d6bc:	b	1d2a8 <argp_error@@Base+0x34c>
   1d6c0:	mov	r6, #0
   1d6c4:	cmp	sl, #0
   1d6c8:	beq	1d3e4 <argp_error@@Base+0x488>
   1d6cc:	ldr	r9, [sp, #16]
   1d6d0:	mvn	r3, #0
   1d6d4:	str	r3, [sp, #36]	; 0x24
   1d6d8:	mov	r5, #0
   1d6dc:	str	r5, [sp, #40]	; 0x28
   1d6e0:	str	r5, [sp, #24]
   1d6e4:	mov	r4, r5
   1d6e8:	mov	r3, #1
   1d6ec:	str	r3, [sp, #44]	; 0x2c
   1d6f0:	mov	r0, sl
   1d6f4:	mov	sl, r5
   1d6f8:	str	r7, [sp, #12]
   1d6fc:	b	1d358 <argp_error@@Base+0x3fc>
   1d700:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d704:	strd	r6, [sp, #8]
   1d708:	strd	r8, [sp, #16]
   1d70c:	strd	sl, [sp, #24]
   1d710:	str	lr, [sp, #32]
   1d714:	sub	sp, sp, #36	; 0x24
   1d718:	str	r3, [sp, #24]
   1d71c:	ldr	r4, [sp, #80]	; 0x50
   1d720:	ldr	r8, [r4, #4]
   1d724:	subs	r5, r0, #0
   1d728:	ble	1dc64 <argp_error@@Base+0xd08>
   1d72c:	mov	r9, r1
   1d730:	mov	r6, r2
   1d734:	mov	r3, #0
   1d738:	str	r3, [r4, #12]
   1d73c:	ldr	r3, [r4]
   1d740:	cmp	r3, #0
   1d744:	beq	1d768 <argp_error@@Base+0x80c>
   1d748:	ldr	r3, [r4, #16]
   1d74c:	cmp	r3, #0
   1d750:	beq	1d770 <argp_error@@Base+0x814>
   1d754:	ldrb	r3, [r2]
   1d758:	sub	r3, r3, #43	; 0x2b
   1d75c:	tst	r3, #253	; 0xfd
   1d760:	addeq	r6, r2, #1
   1d764:	b	1d7cc <argp_error@@Base+0x870>
   1d768:	mov	r3, #1
   1d76c:	str	r3, [r4]
   1d770:	ldr	r3, [r4]
   1d774:	str	r3, [r4, #32]
   1d778:	str	r3, [r4, #28]
   1d77c:	mov	r3, #0
   1d780:	str	r3, [r4, #20]
   1d784:	ldrb	r3, [r6]
   1d788:	cmp	r3, #45	; 0x2d
   1d78c:	moveq	r3, #2
   1d790:	streq	r3, [r4, #24]
   1d794:	addeq	r6, r6, #1
   1d798:	beq	1d7c4 <argp_error@@Base+0x868>
   1d79c:	cmp	r3, #43	; 0x2b
   1d7a0:	moveq	r3, #0
   1d7a4:	streq	r3, [r4, #24]
   1d7a8:	addeq	r6, r6, #1
   1d7ac:	beq	1d7c4 <argp_error@@Base+0x868>
   1d7b0:	ldr	r3, [sp, #84]	; 0x54
   1d7b4:	cmp	r3, #0
   1d7b8:	beq	1d88c <argp_error@@Base+0x930>
   1d7bc:	mov	r3, #0
   1d7c0:	str	r3, [r4, #24]
   1d7c4:	mov	r3, #1
   1d7c8:	str	r3, [r4, #16]
   1d7cc:	ldrb	r3, [r6]
   1d7d0:	cmp	r3, #58	; 0x3a
   1d7d4:	moveq	r8, #0
   1d7d8:	ldr	r3, [r4, #20]
   1d7dc:	cmp	r3, #0
   1d7e0:	beq	1d7f0 <argp_error@@Base+0x894>
   1d7e4:	ldrb	r3, [r3]
   1d7e8:	cmp	r3, #0
   1d7ec:	bne	1d990 <argp_error@@Base+0xa34>
   1d7f0:	ldr	r3, [r4]
   1d7f4:	ldr	r2, [r4, #32]
   1d7f8:	cmp	r2, r3
   1d7fc:	strgt	r3, [r4, #32]
   1d800:	ldr	r2, [r4, #28]
   1d804:	cmp	r3, r2
   1d808:	strlt	r3, [r4, #28]
   1d80c:	ldr	r2, [r4, #24]
   1d810:	cmp	r2, #1
   1d814:	beq	1d8ac <argp_error@@Base+0x950>
   1d818:	ldr	r7, [r4]
   1d81c:	cmp	r7, r5
   1d820:	beq	1d86c <argp_error@@Base+0x910>
   1d824:	ldr	sl, [r9, r7, lsl #2]
   1d828:	movw	r1, #4208	; 0x1070
   1d82c:	movt	r1, #2
   1d830:	mov	r0, sl
   1d834:	bl	112f8 <strcmp@plt>
   1d838:	cmp	r0, #0
   1d83c:	bne	1dc74 <argp_error@@Base+0xd18>
   1d840:	add	r7, r7, #1
   1d844:	str	r7, [r4]
   1d848:	ldr	r2, [r4, #28]
   1d84c:	ldr	r3, [r4, #32]
   1d850:	cmp	r2, r3
   1d854:	cmpne	r7, r3
   1d858:	bne	1d928 <argp_error@@Base+0x9cc>
   1d85c:	cmp	r2, r3
   1d860:	streq	r7, [r4, #28]
   1d864:	str	r5, [r4, #32]
   1d868:	str	r5, [r4]
   1d86c:	ldr	r3, [r4, #28]
   1d870:	ldr	r2, [r4, #32]
   1d874:	cmp	r3, r2
   1d878:	mvneq	r0, #0
   1d87c:	beq	1dca0 <argp_error@@Base+0xd44>
   1d880:	str	r3, [r4]
   1d884:	mvn	r0, #0
   1d888:	b	1dca0 <argp_error@@Base+0xd44>
   1d88c:	movw	r0, #6548	; 0x1994
   1d890:	movt	r0, #2
   1d894:	bl	1140c <getenv@plt>
   1d898:	cmp	r0, #0
   1d89c:	bne	1d7bc <argp_error@@Base+0x860>
   1d8a0:	mov	r3, #1
   1d8a4:	str	r3, [r4, #24]
   1d8a8:	b	1d7c4 <argp_error@@Base+0x868>
   1d8ac:	ldr	r2, [r4, #32]
   1d8b0:	ldr	r1, [r4, #28]
   1d8b4:	cmp	r1, r2
   1d8b8:	cmpne	r3, r2
   1d8bc:	bne	1d8dc <argp_error@@Base+0x980>
   1d8c0:	cmp	r3, r2
   1d8c4:	strne	r3, [r4, #28]
   1d8c8:	ldr	r3, [r4]
   1d8cc:	cmp	r5, r3
   1d8d0:	ble	1d920 <argp_error@@Base+0x9c4>
   1d8d4:	add	r1, r9, r3, lsl #2
   1d8d8:	b	1d8fc <argp_error@@Base+0x9a0>
   1d8dc:	mov	r1, r4
   1d8e0:	mov	r0, r9
   1d8e4:	bl	1d0ac <argp_error@@Base+0x150>
   1d8e8:	b	1d8c8 <argp_error@@Base+0x96c>
   1d8ec:	add	r3, r3, #1
   1d8f0:	str	r3, [r4]
   1d8f4:	cmp	r3, r5
   1d8f8:	beq	1d91c <argp_error@@Base+0x9c0>
   1d8fc:	ldr	r2, [r1], #4
   1d900:	ldrb	r0, [r2]
   1d904:	cmp	r0, #45	; 0x2d
   1d908:	bne	1d8ec <argp_error@@Base+0x990>
   1d90c:	ldrb	r2, [r2, #1]
   1d910:	cmp	r2, #0
   1d914:	beq	1d8ec <argp_error@@Base+0x990>
   1d918:	b	1d920 <argp_error@@Base+0x9c4>
   1d91c:	mov	r3, r5
   1d920:	str	r3, [r4, #32]
   1d924:	b	1d818 <argp_error@@Base+0x8bc>
   1d928:	mov	r1, r4
   1d92c:	mov	r0, r9
   1d930:	bl	1d0ac <argp_error@@Base+0x150>
   1d934:	b	1d864 <argp_error@@Base+0x908>
   1d938:	ldrb	r1, [sl, #1]
   1d93c:	cmp	r1, #0
   1d940:	beq	1dc80 <argp_error@@Base+0xd24>
   1d944:	ldr	r3, [sp, #24]
   1d948:	cmp	r3, #0
   1d94c:	beq	1d980 <argp_error@@Base+0xa24>
   1d950:	cmp	r1, #45	; 0x2d
   1d954:	beq	1d9fc <argp_error@@Base+0xaa0>
   1d958:	ldr	r3, [sp, #76]	; 0x4c
   1d95c:	cmp	r3, #0
   1d960:	beq	1d980 <argp_error@@Base+0xa24>
   1d964:	ldrb	r3, [sl, #2]
   1d968:	cmp	r3, #0
   1d96c:	bne	1da40 <argp_error@@Base+0xae4>
   1d970:	mov	r0, r6
   1d974:	bl	114a8 <strchr@plt>
   1d978:	cmp	r0, #0
   1d97c:	beq	1da40 <argp_error@@Base+0xae4>
   1d980:	ldr	r3, [r4]
   1d984:	ldr	r3, [r9, r3, lsl #2]
   1d988:	add	r3, r3, #1
   1d98c:	str	r3, [r4, #20]
   1d990:	ldr	sl, [r4, #20]
   1d994:	add	fp, sl, #1
   1d998:	str	fp, [r4, #20]
   1d99c:	ldrb	r7, [sl]
   1d9a0:	str	r7, [sp, #28]
   1d9a4:	mov	r1, r7
   1d9a8:	mov	r0, r6
   1d9ac:	bl	114a8 <strchr@plt>
   1d9b0:	ldrb	r3, [sl, #1]
   1d9b4:	cmp	r3, #0
   1d9b8:	bne	1d9c8 <argp_error@@Base+0xa6c>
   1d9bc:	ldr	r3, [r4]
   1d9c0:	add	r3, r3, #1
   1d9c4:	str	r3, [r4]
   1d9c8:	sub	r3, r7, #58	; 0x3a
   1d9cc:	uxtb	r3, r3
   1d9d0:	cmp	r0, #0
   1d9d4:	cmpne	r3, #1
   1d9d8:	bls	1da8c <argp_error@@Base+0xb30>
   1d9dc:	ldrb	r3, [r0]
   1d9e0:	cmp	r3, #87	; 0x57
   1d9e4:	beq	1dac8 <argp_error@@Base+0xb6c>
   1d9e8:	ldrb	r3, [r0, #1]
   1d9ec:	cmp	r3, #58	; 0x3a
   1d9f0:	beq	1db9c <argp_error@@Base+0xc40>
   1d9f4:	mov	r0, r7
   1d9f8:	b	1dca0 <argp_error@@Base+0xd44>
   1d9fc:	add	sl, sl, #2
   1da00:	str	sl, [r4, #20]
   1da04:	movw	r3, #4208	; 0x1070
   1da08:	movt	r3, #2
   1da0c:	str	r3, [sp, #16]
   1da10:	str	r8, [sp, #12]
   1da14:	str	r4, [sp, #8]
   1da18:	ldr	r3, [sp, #76]	; 0x4c
   1da1c:	str	r3, [sp, #4]
   1da20:	ldr	r3, [sp, #72]	; 0x48
   1da24:	str	r3, [sp]
   1da28:	ldr	r3, [sp, #24]
   1da2c:	mov	r2, r6
   1da30:	mov	r1, r9
   1da34:	mov	r0, r5
   1da38:	bl	1d188 <argp_error@@Base+0x22c>
   1da3c:	b	1dca0 <argp_error@@Base+0xd44>
   1da40:	add	sl, sl, #1
   1da44:	str	sl, [r4, #20]
   1da48:	movw	r3, #6564	; 0x19a4
   1da4c:	movt	r3, #2
   1da50:	str	r3, [sp, #16]
   1da54:	str	r8, [sp, #12]
   1da58:	str	r4, [sp, #8]
   1da5c:	ldr	r3, [sp, #76]	; 0x4c
   1da60:	str	r3, [sp, #4]
   1da64:	ldr	r3, [sp, #72]	; 0x48
   1da68:	str	r3, [sp]
   1da6c:	ldr	r3, [sp, #24]
   1da70:	mov	r2, r6
   1da74:	mov	r1, r9
   1da78:	mov	r0, r5
   1da7c:	bl	1d188 <argp_error@@Base+0x22c>
   1da80:	cmn	r0, #1
   1da84:	bne	1dca0 <argp_error@@Base+0xd44>
   1da88:	b	1d980 <argp_error@@Base+0xa24>
   1da8c:	cmp	r8, #0
   1da90:	bne	1daa4 <argp_error@@Base+0xb48>
   1da94:	ldr	r3, [sp, #28]
   1da98:	str	r3, [r4, #8]
   1da9c:	mov	r0, #63	; 0x3f
   1daa0:	b	1dca0 <argp_error@@Base+0xd44>
   1daa4:	movw	r0, #11072	; 0x2b40
   1daa8:	movt	r0, #3
   1daac:	ldr	r3, [sp, #28]
   1dab0:	ldr	r2, [r9]
   1dab4:	movw	r1, #6568	; 0x19a8
   1dab8:	movt	r1, #2
   1dabc:	ldr	r0, [r0]
   1dac0:	bl	114b4 <fprintf@plt>
   1dac4:	b	1da94 <argp_error@@Base+0xb38>
   1dac8:	ldrb	r1, [r0, #1]
   1dacc:	ldr	r2, [sp, #24]
   1dad0:	cmp	r1, #59	; 0x3b
   1dad4:	movne	r3, #0
   1dad8:	moveq	r3, #1
   1dadc:	cmp	r2, #0
   1dae0:	moveq	r3, #0
   1dae4:	cmp	r3, #0
   1dae8:	beq	1d9e8 <argp_error@@Base+0xa8c>
   1daec:	ldrb	r3, [sl, #1]
   1daf0:	cmp	r3, #0
   1daf4:	strne	fp, [r4, #12]
   1daf8:	bne	1db10 <argp_error@@Base+0xbb4>
   1dafc:	ldr	r3, [r4]
   1db00:	cmp	r3, r5
   1db04:	beq	1db58 <argp_error@@Base+0xbfc>
   1db08:	ldr	r3, [r9, r3, lsl #2]
   1db0c:	str	r3, [r4, #12]
   1db10:	ldr	r3, [r4, #12]
   1db14:	str	r3, [r4, #20]
   1db18:	mov	r2, #0
   1db1c:	str	r2, [r4, #12]
   1db20:	movw	r3, #6640	; 0x19f0
   1db24:	movt	r3, #2
   1db28:	str	r3, [sp, #16]
   1db2c:	str	r8, [sp, #12]
   1db30:	str	r4, [sp, #8]
   1db34:	str	r2, [sp, #4]
   1db38:	ldr	r3, [sp, #72]	; 0x48
   1db3c:	str	r3, [sp]
   1db40:	ldr	r3, [sp, #24]
   1db44:	mov	r2, r6
   1db48:	mov	r1, r9
   1db4c:	mov	r0, r5
   1db50:	bl	1d188 <argp_error@@Base+0x22c>
   1db54:	b	1dca0 <argp_error@@Base+0xd44>
   1db58:	cmp	r8, #0
   1db5c:	bne	1db78 <argp_error@@Base+0xc1c>
   1db60:	ldr	r3, [sp, #28]
   1db64:	str	r3, [r4, #8]
   1db68:	ldrb	r0, [r6]
   1db6c:	cmp	r0, #58	; 0x3a
   1db70:	movne	r0, #63	; 0x3f
   1db74:	b	1dca0 <argp_error@@Base+0xd44>
   1db78:	movw	r0, #11072	; 0x2b40
   1db7c:	movt	r0, #3
   1db80:	ldr	r3, [sp, #28]
   1db84:	ldr	r2, [r9]
   1db88:	movw	r1, #6596	; 0x19c4
   1db8c:	movt	r1, #2
   1db90:	ldr	r0, [r0]
   1db94:	bl	114b4 <fprintf@plt>
   1db98:	b	1db60 <argp_error@@Base+0xc04>
   1db9c:	ldrb	r3, [r0, #2]
   1dba0:	cmp	r3, #58	; 0x3a
   1dba4:	beq	1dbd0 <argp_error@@Base+0xc74>
   1dba8:	ldrb	r3, [sl, #1]
   1dbac:	cmp	r3, #0
   1dbb0:	beq	1dc00 <argp_error@@Base+0xca4>
   1dbb4:	str	fp, [r4, #12]
   1dbb8:	ldr	r3, [r4]
   1dbbc:	add	r3, r3, #1
   1dbc0:	str	r3, [r4]
   1dbc4:	mov	r3, #0
   1dbc8:	str	r3, [r4, #20]
   1dbcc:	b	1d9f4 <argp_error@@Base+0xa98>
   1dbd0:	ldrb	r3, [sl, #1]
   1dbd4:	cmp	r3, #0
   1dbd8:	moveq	r3, #0
   1dbdc:	streq	r3, [r4, #12]
   1dbe0:	beq	1dbf4 <argp_error@@Base+0xc98>
   1dbe4:	str	fp, [r4, #12]
   1dbe8:	ldr	r3, [r4]
   1dbec:	add	r3, r3, #1
   1dbf0:	str	r3, [r4]
   1dbf4:	mov	r3, #0
   1dbf8:	str	r3, [r4, #20]
   1dbfc:	b	1d9f4 <argp_error@@Base+0xa98>
   1dc00:	ldr	r3, [r4]
   1dc04:	cmp	r3, r5
   1dc08:	beq	1dc20 <argp_error@@Base+0xcc4>
   1dc0c:	add	r2, r3, #1
   1dc10:	str	r2, [r4]
   1dc14:	ldr	r3, [r9, r3, lsl #2]
   1dc18:	str	r3, [r4, #12]
   1dc1c:	b	1dbc4 <argp_error@@Base+0xc68>
   1dc20:	cmp	r8, #0
   1dc24:	bne	1dc40 <argp_error@@Base+0xce4>
   1dc28:	ldr	r3, [sp, #28]
   1dc2c:	str	r3, [r4, #8]
   1dc30:	ldrb	r7, [r6]
   1dc34:	cmp	r7, #58	; 0x3a
   1dc38:	movne	r7, #63	; 0x3f
   1dc3c:	b	1dbc4 <argp_error@@Base+0xc68>
   1dc40:	movw	r0, #11072	; 0x2b40
   1dc44:	movt	r0, #3
   1dc48:	ldr	r3, [sp, #28]
   1dc4c:	ldr	r2, [r9]
   1dc50:	movw	r1, #6596	; 0x19c4
   1dc54:	movt	r1, #2
   1dc58:	ldr	r0, [r0]
   1dc5c:	bl	114b4 <fprintf@plt>
   1dc60:	b	1dc28 <argp_error@@Base+0xccc>
   1dc64:	mvn	r0, #0
   1dc68:	b	1dca0 <argp_error@@Base+0xd44>
   1dc6c:	mvn	r0, #0
   1dc70:	b	1dca0 <argp_error@@Base+0xd44>
   1dc74:	ldrb	r3, [sl]
   1dc78:	cmp	r3, #45	; 0x2d
   1dc7c:	beq	1d938 <argp_error@@Base+0x9dc>
   1dc80:	ldr	r3, [r4, #24]
   1dc84:	cmp	r3, #0
   1dc88:	beq	1dc6c <argp_error@@Base+0xd10>
   1dc8c:	add	r3, r7, #1
   1dc90:	str	r3, [r4]
   1dc94:	ldr	r3, [r9, r7, lsl #2]
   1dc98:	str	r3, [r4, #12]
   1dc9c:	mov	r0, #1
   1dca0:	add	sp, sp, #36	; 0x24
   1dca4:	ldrd	r4, [sp]
   1dca8:	ldrd	r6, [sp, #8]
   1dcac:	ldrd	r8, [sp, #16]
   1dcb0:	ldrd	sl, [sp, #24]
   1dcb4:	add	sp, sp, #32
   1dcb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1dcbc:	strd	r4, [sp, #-12]!
   1dcc0:	str	lr, [sp, #8]
   1dcc4:	sub	sp, sp, #20
   1dcc8:	movw	r4, #11200	; 0x2bc0
   1dccc:	movt	r4, #3
   1dcd0:	movw	r5, #11048	; 0x2b28
   1dcd4:	movt	r5, #3
   1dcd8:	ldr	ip, [r5]
   1dcdc:	str	ip, [r4]
   1dce0:	ldr	ip, [r5, #4]
   1dce4:	str	ip, [r4, #4]
   1dce8:	ldr	ip, [sp, #40]	; 0x28
   1dcec:	str	ip, [sp, #12]
   1dcf0:	str	r4, [sp, #8]
   1dcf4:	ldr	ip, [sp, #36]	; 0x24
   1dcf8:	str	ip, [sp, #4]
   1dcfc:	ldr	ip, [sp, #32]
   1dd00:	str	ip, [sp]
   1dd04:	bl	1d700 <argp_error@@Base+0x7a4>
   1dd08:	ldr	r3, [r4]
   1dd0c:	str	r3, [r5]
   1dd10:	movw	r3, #11296	; 0x2c20
   1dd14:	movt	r3, #3
   1dd18:	ldr	r2, [r4, #12]
   1dd1c:	str	r2, [r3]
   1dd20:	ldr	r3, [r4, #8]
   1dd24:	str	r3, [r5, #8]
   1dd28:	add	sp, sp, #20
   1dd2c:	ldrd	r4, [sp]
   1dd30:	add	sp, sp, #8
   1dd34:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd38:	push	{lr}		; (str lr, [sp, #-4]!)
   1dd3c:	sub	sp, sp, #20
   1dd40:	mov	r3, #1
   1dd44:	str	r3, [sp, #8]
   1dd48:	mov	r3, #0
   1dd4c:	str	r3, [sp, #4]
   1dd50:	str	r3, [sp]
   1dd54:	bl	1dcbc <argp_error@@Base+0xd60>
   1dd58:	add	sp, sp, #20
   1dd5c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd60:	str	r4, [sp, #-8]!
   1dd64:	str	lr, [sp, #4]
   1dd68:	umull	r2, r3, r1, r2
   1dd6c:	cmp	r3, #0
   1dd70:	bne	1dd88 <argp_error@@Base+0xe2c>
   1dd74:	mov	r1, r2
   1dd78:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   1dd7c:	ldr	r4, [sp]
   1dd80:	add	sp, sp, #4
   1dd84:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd88:	bl	114c0 <__errno_location@plt>
   1dd8c:	mov	r3, #12
   1dd90:	str	r3, [r0]
   1dd94:	mov	r0, #0
   1dd98:	b	1dd7c <argp_error@@Base+0xe20>
   1dd9c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1dda0:	strd	r6, [sp, #8]
   1dda4:	str	r8, [sp, #16]
   1dda8:	str	lr, [sp, #20]
   1ddac:	mov	r8, r0
   1ddb0:	mov	r7, r1
   1ddb4:	mov	r6, r2
   1ddb8:	mov	r5, r3
   1ddbc:	mov	r0, #36	; 0x24
   1ddc0:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1ddc4:	subs	r4, r0, #0
   1ddc8:	beq	1de0c <argp_error@@Base+0xeb0>
   1ddcc:	str	r8, [r4]
   1ddd0:	str	r7, [r4, #4]
   1ddd4:	str	r6, [r4, #8]
   1ddd8:	str	r5, [r4, #12]
   1dddc:	mov	r3, #0
   1dde0:	str	r3, [r4, #20]
   1dde4:	str	r3, [r4, #16]
   1dde8:	mov	r0, #200	; 0xc8
   1ddec:	bl	19bd8 <_obstack_memory_used@@Base+0xdf8>
   1ddf0:	mov	r5, r0
   1ddf4:	str	r0, [r4, #24]
   1ddf8:	cmp	r0, #0
   1ddfc:	strne	r0, [r4, #28]
   1de00:	addne	r5, r0, #200	; 0xc8
   1de04:	strne	r5, [r4, #32]
   1de08:	beq	1de24 <argp_error@@Base+0xec8>
   1de0c:	mov	r0, r4
   1de10:	ldrd	r4, [sp]
   1de14:	ldrd	r6, [sp, #8]
   1de18:	ldr	r8, [sp, #16]
   1de1c:	add	sp, sp, #20
   1de20:	pop	{pc}		; (ldr pc, [sp], #4)
   1de24:	mov	r0, r4
   1de28:	bl	18900 <argp_parse@@Base+0xcd8>
   1de2c:	mov	r4, r5
   1de30:	b	1de0c <argp_error@@Base+0xeb0>
   1de34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1de38:	strd	r6, [sp, #8]
   1de3c:	strd	r8, [sp, #16]
   1de40:	strd	sl, [sp, #24]
   1de44:	str	lr, [sp, #32]
   1de48:	sub	sp, sp, #20
   1de4c:	mov	r4, r0
   1de50:	ldr	r5, [r0, #24]
   1de54:	ldr	r3, [r0, #16]
   1de58:	add	r5, r5, r3
   1de5c:	mov	sl, #32
   1de60:	str	sl, [sp, #8]
   1de64:	b	1df4c <argp_error@@Base+0xff0>
   1de68:	mov	r7, #0
   1de6c:	ldr	r0, [r4]
   1de70:	ldr	r3, [r0, #20]
   1de74:	ldr	r2, [r0, #24]
   1de78:	cmp	r3, r2
   1de7c:	addcc	r2, r3, #1
   1de80:	strcc	r2, [r0, #20]
   1de84:	strbcc	sl, [r3]
   1de88:	bcs	1dfb8 <argp_error@@Base+0x105c>
   1de8c:	add	r7, r7, #1
   1de90:	cmp	r6, r7
   1de94:	bne	1de6c <argp_error@@Base+0xf10>
   1de98:	str	r6, [r4, #20]
   1de9c:	ldr	r8, [r4, #28]
   1dea0:	sub	fp, r8, r5
   1dea4:	mov	r2, fp
   1dea8:	mov	r1, #10
   1deac:	mov	r0, r5
   1deb0:	bl	11514 <memchr@plt>
   1deb4:	mov	r6, r0
   1deb8:	ldr	r3, [r4, #20]
   1debc:	cmp	r3, #0
   1dec0:	movlt	r3, #0
   1dec4:	strlt	r3, [r4, #20]
   1dec8:	cmp	r6, #0
   1decc:	beq	1dfc4 <argp_error@@Base+0x1068>
   1ded0:	ldr	r0, [r4, #20]
   1ded4:	ldr	r9, [r4, #8]
   1ded8:	sub	r3, r6, r5
   1dedc:	add	r3, r3, r0
   1dee0:	cmp	r3, r9
   1dee4:	movlt	r3, #0
   1dee8:	strlt	r3, [r4, #20]
   1deec:	addlt	r5, r6, #1
   1def0:	blt	1df4c <argp_error@@Base+0xff0>
   1def4:	sub	r7, r9, #1
   1def8:	ldr	r3, [r4, #12]
   1defc:	str	r3, [sp, #4]
   1df00:	cmp	r3, #0
   1df04:	bge	1dff0 <argp_error@@Base+0x1094>
   1df08:	cmp	r8, r6
   1df0c:	bls	1e080 <argp_error@@Base+0x1124>
   1df10:	sub	r0, r7, r0
   1df14:	sub	r2, r8, r6
   1df18:	mov	r1, r6
   1df1c:	add	r0, r5, r0
   1df20:	bl	1131c <memmove@plt>
   1df24:	ldr	r3, [r4, #20]
   1df28:	sub	r7, r7, r3
   1df2c:	add	r7, r5, r7
   1df30:	sub	r6, r7, r6
   1df34:	ldr	r3, [r4, #28]
   1df38:	sub	r6, r3, r6
   1df3c:	str	r6, [r4, #28]
   1df40:	mov	r3, #0
   1df44:	str	r3, [r4, #20]
   1df48:	add	r5, r5, r9
   1df4c:	ldr	r8, [r4, #28]
   1df50:	cmp	r8, r5
   1df54:	bls	1e098 <argp_error@@Base+0x113c>
   1df58:	ldr	r3, [r4, #20]
   1df5c:	cmp	r3, #0
   1df60:	bne	1de9c <argp_error@@Base+0xf40>
   1df64:	ldr	r6, [r4, #4]
   1df68:	cmp	r6, #0
   1df6c:	beq	1e344 <argp_error@@Base+0x13e8>
   1df70:	add	r3, r8, r6
   1df74:	ldr	r2, [r4, #32]
   1df78:	cmp	r2, r3
   1df7c:	bls	1de68 <argp_error@@Base+0xf0c>
   1df80:	add	r7, r5, r6
   1df84:	sub	r2, r8, r5
   1df88:	mov	r1, r5
   1df8c:	mov	r0, r7
   1df90:	bl	1131c <memmove@plt>
   1df94:	ldr	r3, [r4, #28]
   1df98:	add	r3, r3, r6
   1df9c:	str	r3, [r4, #28]
   1dfa0:	mov	r2, r6
   1dfa4:	mov	r1, sl
   1dfa8:	mov	r0, r5
   1dfac:	bl	114f0 <memset@plt>
   1dfb0:	mov	r5, r7
   1dfb4:	b	1de98 <argp_error@@Base+0xf3c>
   1dfb8:	ldr	r1, [sp, #8]
   1dfbc:	bl	11538 <__overflow@plt>
   1dfc0:	b	1de8c <argp_error@@Base+0xf30>
   1dfc4:	ldr	r3, [r4, #20]
   1dfc8:	add	r3, fp, r3
   1dfcc:	ldr	r7, [r4, #8]
   1dfd0:	cmp	r3, r7
   1dfd4:	bcc	1e078 <argp_error@@Base+0x111c>
   1dfd8:	sub	r7, r7, #1
   1dfdc:	ldr	r3, [r4, #12]
   1dfe0:	str	r3, [sp, #4]
   1dfe4:	cmp	r3, #0
   1dfe8:	blt	1e080 <argp_error@@Base+0x1124>
   1dfec:	mov	r6, r8
   1dff0:	ldr	r3, [r4, #20]
   1dff4:	rsb	r3, r3, #1
   1dff8:	add	r7, r3, r7
   1dffc:	adds	r7, r5, r7
   1e000:	bcs	1e33c <argp_error@@Base+0x13e0>
   1e004:	bl	11478 <__ctype_b_loc@plt>
   1e008:	ldr	r0, [r0]
   1e00c:	mov	r3, r7
   1e010:	mov	r1, r3
   1e014:	sub	r3, r3, #1
   1e018:	ldrb	r2, [r1]
   1e01c:	lsl	r2, r2, #1
   1e020:	ldrh	r2, [r0, r2]
   1e024:	tst	r2, #1
   1e028:	bne	1e0c4 <argp_error@@Base+0x1168>
   1e02c:	mov	r1, r3
   1e030:	cmp	r3, r5
   1e034:	bcs	1e010 <argp_error@@Base+0x10b4>
   1e038:	add	r9, r1, #1
   1e03c:	cmp	r9, r5
   1e040:	bhi	1e100 <argp_error@@Base+0x11a4>
   1e044:	cmp	r6, r7
   1e048:	bhi	1e19c <argp_error@@Base+0x1240>
   1e04c:	cmp	r7, r6
   1e050:	beq	1e1dc <argp_error@@Base+0x1280>
   1e054:	bl	11478 <__ctype_b_loc@plt>
   1e058:	ldr	r2, [r0]
   1e05c:	mov	r9, r7
   1e060:	ldrb	r3, [r9, #1]!
   1e064:	lsl	r3, r3, #1
   1e068:	ldrh	r3, [r2, r3]
   1e06c:	tst	r3, #1
   1e070:	bne	1e060 <argp_error@@Base+0x1104>
   1e074:	b	1e104 <argp_error@@Base+0x11a8>
   1e078:	str	r3, [r4, #20]
   1e07c:	b	1e098 <argp_error@@Base+0x113c>
   1e080:	ldr	r3, [r4, #20]
   1e084:	add	r3, fp, r3
   1e088:	str	r3, [r4, #20]
   1e08c:	sub	r3, r7, r3
   1e090:	add	r8, r8, r3
   1e094:	str	r8, [r4, #28]
   1e098:	ldr	r3, [r4, #28]
   1e09c:	ldr	r2, [r4, #24]
   1e0a0:	sub	r3, r3, r2
   1e0a4:	str	r3, [r4, #16]
   1e0a8:	add	sp, sp, #20
   1e0ac:	ldrd	r4, [sp]
   1e0b0:	ldrd	r6, [sp, #8]
   1e0b4:	ldrd	r8, [sp, #16]
   1e0b8:	ldrd	sl, [sp, #24]
   1e0bc:	add	sp, sp, #32
   1e0c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e0c4:	add	r9, r1, #1
   1e0c8:	cmp	r9, r5
   1e0cc:	bls	1e044 <argp_error@@Base+0x10e8>
   1e0d0:	cmp	r5, r1
   1e0d4:	bhi	1e100 <argp_error@@Base+0x11a4>
   1e0d8:	sub	ip, r5, #1
   1e0dc:	mov	r1, r3
   1e0e0:	cmp	r3, ip
   1e0e4:	beq	1e100 <argp_error@@Base+0x11a4>
   1e0e8:	sub	r3, r3, #1
   1e0ec:	ldrb	r2, [r1]
   1e0f0:	lsl	r2, r2, #1
   1e0f4:	ldrh	r2, [r0, r2]
   1e0f8:	tst	r2, #1
   1e0fc:	bne	1e0dc <argp_error@@Base+0x1180>
   1e100:	add	r7, r1, #1
   1e104:	add	r3, fp, #1
   1e108:	add	r3, r5, r3
   1e10c:	cmp	r9, r3
   1e110:	beq	1e1ec <argp_error@@Base+0x1290>
   1e114:	add	r3, r7, #1
   1e118:	sub	r3, r9, r3
   1e11c:	ldr	r2, [sp, #4]
   1e120:	cmp	r3, r2
   1e124:	bge	1e200 <argp_error@@Base+0x12a4>
   1e128:	cmp	r9, r8
   1e12c:	bcs	1e200 <argp_error@@Base+0x12a4>
   1e130:	ldr	r3, [r4, #32]
   1e134:	sub	r3, r3, r8
   1e138:	ldr	r2, [sp, #4]
   1e13c:	add	r2, r2, #1
   1e140:	cmp	r3, r2
   1e144:	bgt	1e2a8 <argp_error@@Base+0x134c>
   1e148:	ldr	r0, [r4, #24]
   1e14c:	cmp	r0, r7
   1e150:	bcs	1e164 <argp_error@@Base+0x1208>
   1e154:	ldr	r3, [r4]
   1e158:	sub	r2, r7, r0
   1e15c:	mov	r1, #1
   1e160:	bl	11370 <fwrite_unlocked@plt>
   1e164:	ldr	r0, [r4]
   1e168:	ldr	r3, [r0, #20]
   1e16c:	ldr	r2, [r0, #24]
   1e170:	cmp	r3, r2
   1e174:	addcc	r2, r3, #1
   1e178:	strcc	r2, [r0, #20]
   1e17c:	movcc	r2, #10
   1e180:	strbcc	r2, [r3]
   1e184:	bcs	1e2e8 <argp_error@@Base+0x138c>
   1e188:	ldr	r8, [r4, #24]
   1e18c:	sub	r5, r5, r8
   1e190:	add	fp, fp, r5
   1e194:	mov	r5, r8
   1e198:	b	1e210 <argp_error@@Base+0x12b4>
   1e19c:	add	r9, r7, #1
   1e1a0:	str	r6, [sp, #12]
   1e1a4:	mov	r7, r9
   1e1a8:	cmp	r9, r6
   1e1ac:	beq	1e1d4 <argp_error@@Base+0x1278>
   1e1b0:	bl	11478 <__ctype_b_loc@plt>
   1e1b4:	add	r9, r9, #1
   1e1b8:	ldrb	r3, [r7]
   1e1bc:	ldr	r2, [r0]
   1e1c0:	lsl	r3, r3, #1
   1e1c4:	ldrh	r3, [r2, r3]
   1e1c8:	tst	r3, #1
   1e1cc:	beq	1e1a4 <argp_error@@Base+0x1248>
   1e1d0:	b	1e054 <argp_error@@Base+0x10f8>
   1e1d4:	ldr	r6, [sp, #12]
   1e1d8:	b	1e04c <argp_error@@Base+0x10f0>
   1e1dc:	mov	r3, #0
   1e1e0:	str	r3, [r4, #20]
   1e1e4:	add	r5, r6, #1
   1e1e8:	b	1df4c <argp_error@@Base+0xff0>
   1e1ec:	ldr	r3, [r4, #32]
   1e1f0:	sub	r3, r3, r7
   1e1f4:	ldr	r2, [sp, #4]
   1e1f8:	cmp	r3, r2
   1e1fc:	ble	1e128 <argp_error@@Base+0x11cc>
   1e200:	mov	r3, #10
   1e204:	strb	r3, [r7], #1
   1e208:	mov	r8, r5
   1e20c:	mov	r5, r7
   1e210:	ldr	r3, [r4, #12]
   1e214:	sub	r2, r9, r5
   1e218:	cmp	r2, r3
   1e21c:	bge	1e2f4 <argp_error@@Base+0x1398>
   1e220:	add	r2, fp, #1
   1e224:	add	r2, r8, r2
   1e228:	cmp	r9, r2
   1e22c:	bne	1e240 <argp_error@@Base+0x12e4>
   1e230:	ldr	r2, [r4, #32]
   1e234:	sub	r2, r2, r9
   1e238:	cmp	r3, r2
   1e23c:	ble	1e2f4 <argp_error@@Base+0x1398>
   1e240:	cmp	r3, #0
   1e244:	movgt	r6, #0
   1e248:	ble	1e27c <argp_error@@Base+0x1320>
   1e24c:	ldr	r0, [r4]
   1e250:	ldr	r3, [r0, #20]
   1e254:	ldr	r2, [r0, #24]
   1e258:	cmp	r3, r2
   1e25c:	addcc	r2, r3, #1
   1e260:	strcc	r2, [r0, #20]
   1e264:	strbcc	sl, [r3]
   1e268:	bcs	1e318 <argp_error@@Base+0x13bc>
   1e26c:	add	r6, r6, #1
   1e270:	ldr	r3, [r4, #12]
   1e274:	cmp	r3, r6
   1e278:	bgt	1e24c <argp_error@@Base+0x12f0>
   1e27c:	cmp	r5, r9
   1e280:	bcc	1e324 <argp_error@@Base+0x13c8>
   1e284:	sub	r9, r9, r8
   1e288:	sub	fp, fp, r9
   1e28c:	add	fp, r5, fp
   1e290:	str	fp, [r4, #28]
   1e294:	ldr	r3, [r4, #12]
   1e298:	cmp	r3, #0
   1e29c:	mvneq	r3, #0
   1e2a0:	str	r3, [r4, #20]
   1e2a4:	b	1df4c <argp_error@@Base+0xff0>
   1e2a8:	sub	r8, r8, r9
   1e2ac:	mov	r0, r2
   1e2b0:	mov	r2, r8
   1e2b4:	mov	r1, r9
   1e2b8:	add	r0, r7, r0
   1e2bc:	bl	1131c <memmove@plt>
   1e2c0:	ldr	r9, [r4, #12]
   1e2c4:	add	r9, r9, #1
   1e2c8:	add	r9, r7, r9
   1e2cc:	add	r8, r9, r8
   1e2d0:	sub	fp, r8, r5
   1e2d4:	mov	r3, #10
   1e2d8:	strb	r3, [r7], #1
   1e2dc:	mov	r8, r5
   1e2e0:	mov	r5, r7
   1e2e4:	b	1e210 <argp_error@@Base+0x12b4>
   1e2e8:	mov	r1, #10
   1e2ec:	bl	11538 <__overflow@plt>
   1e2f0:	b	1e188 <argp_error@@Base+0x122c>
   1e2f4:	cmp	r3, #0
   1e2f8:	movgt	r3, #0
   1e2fc:	ble	1e27c <argp_error@@Base+0x1320>
   1e300:	strb	sl, [r5], #1
   1e304:	add	r3, r3, #1
   1e308:	ldr	r2, [r4, #12]
   1e30c:	cmp	r2, r3
   1e310:	bgt	1e300 <argp_error@@Base+0x13a4>
   1e314:	b	1e27c <argp_error@@Base+0x1320>
   1e318:	ldr	r1, [sp, #8]
   1e31c:	bl	11538 <__overflow@plt>
   1e320:	b	1e26c <argp_error@@Base+0x1310>
   1e324:	add	r2, r8, fp
   1e328:	sub	r2, r2, r9
   1e32c:	mov	r1, r9
   1e330:	mov	r0, r5
   1e334:	bl	1131c <memmove@plt>
   1e338:	b	1e284 <argp_error@@Base+0x1328>
   1e33c:	mov	r1, r7
   1e340:	b	1e038 <argp_error@@Base+0x10dc>
   1e344:	sub	fp, r8, r5
   1e348:	mov	r2, fp
   1e34c:	mov	r1, #10
   1e350:	mov	r0, r5
   1e354:	bl	11514 <memchr@plt>
   1e358:	mov	r6, r0
   1e35c:	b	1dec8 <argp_error@@Base+0xf6c>
   1e360:	str	r4, [sp, #-8]!
   1e364:	str	lr, [sp, #4]
   1e368:	mov	r4, r0
   1e36c:	bl	1de34 <argp_error@@Base+0xed8>
   1e370:	ldr	r2, [r4, #28]
   1e374:	ldr	r0, [r4, #24]
   1e378:	cmp	r2, r0
   1e37c:	bls	1e390 <argp_error@@Base+0x1434>
   1e380:	ldr	r3, [r4]
   1e384:	sub	r2, r2, r0
   1e388:	mov	r1, #1
   1e38c:	bl	11370 <fwrite_unlocked@plt>
   1e390:	ldr	r0, [r4, #24]
   1e394:	bl	18900 <argp_parse@@Base+0xcd8>
   1e398:	mov	r0, r4
   1e39c:	bl	18900 <argp_parse@@Base+0xcd8>
   1e3a0:	ldr	r4, [sp]
   1e3a4:	add	sp, sp, #4
   1e3a8:	pop	{pc}		; (ldr pc, [sp], #4)
   1e3ac:	ldr	r3, [r0, #32]
   1e3b0:	ldr	r2, [r0, #28]
   1e3b4:	sub	r3, r3, r2
   1e3b8:	cmp	r3, r1
   1e3bc:	bcc	1e3c8 <argp_error@@Base+0x146c>
   1e3c0:	mov	r0, #1
   1e3c4:	bx	lr
   1e3c8:	strd	r4, [sp, #-16]!
   1e3cc:	str	r6, [sp, #8]
   1e3d0:	str	lr, [sp, #12]
   1e3d4:	mov	r5, r1
   1e3d8:	mov	r4, r0
   1e3dc:	bl	1de34 <argp_error@@Base+0xed8>
   1e3e0:	ldr	r0, [r4, #24]
   1e3e4:	ldr	r2, [r4, #28]
   1e3e8:	ldr	r3, [r4]
   1e3ec:	sub	r2, r2, r0
   1e3f0:	mov	r1, #1
   1e3f4:	bl	11370 <fwrite_unlocked@plt>
   1e3f8:	ldr	r2, [r4, #28]
   1e3fc:	ldr	r3, [r4, #24]
   1e400:	sub	r1, r2, r3
   1e404:	cmp	r1, r0
   1e408:	bne	1e448 <argp_error@@Base+0x14ec>
   1e40c:	str	r3, [r4, #28]
   1e410:	mov	r2, #0
   1e414:	str	r2, [r4, #16]
   1e418:	ldr	r1, [r4, #32]
   1e41c:	sub	r1, r1, r3
   1e420:	cmp	r1, r5
   1e424:	movcs	r0, #1
   1e428:	bcs	1e470 <argp_error@@Base+0x1514>
   1e42c:	adds	r5, r1, r5
   1e430:	bcc	1e480 <argp_error@@Base+0x1524>
   1e434:	bl	114c0 <__errno_location@plt>
   1e438:	mov	r3, #12
   1e43c:	str	r3, [r0]
   1e440:	mov	r0, #0
   1e444:	b	1e470 <argp_error@@Base+0x1514>
   1e448:	sub	r2, r2, r0
   1e44c:	str	r2, [r4, #28]
   1e450:	ldr	r1, [r4, #16]
   1e454:	sub	r1, r1, r0
   1e458:	str	r1, [r4, #16]
   1e45c:	sub	r2, r2, r3
   1e460:	add	r1, r3, r0
   1e464:	mov	r0, r3
   1e468:	bl	1131c <memmove@plt>
   1e46c:	mov	r0, #0
   1e470:	ldrd	r4, [sp]
   1e474:	ldr	r6, [sp, #8]
   1e478:	add	sp, sp, #12
   1e47c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e480:	mov	r1, r5
   1e484:	mov	r0, r3
   1e488:	bl	19c14 <_obstack_memory_used@@Base+0xe34>
   1e48c:	cmp	r0, #0
   1e490:	beq	1e434 <argp_error@@Base+0x14d8>
   1e494:	str	r0, [r4, #24]
   1e498:	add	r5, r0, r5
   1e49c:	str	r5, [r4, #32]
   1e4a0:	str	r0, [r4, #28]
   1e4a4:	mov	r0, #1
   1e4a8:	b	1e470 <argp_error@@Base+0x1514>
   1e4ac:	push	{r1, r2, r3}
   1e4b0:	strd	r4, [sp, #-16]!
   1e4b4:	str	r6, [sp, #8]
   1e4b8:	str	lr, [sp, #12]
   1e4bc:	sub	sp, sp, #12
   1e4c0:	mov	r5, r0
   1e4c4:	mov	r1, #150	; 0x96
   1e4c8:	add	r6, sp, #32
   1e4cc:	mov	r0, r5
   1e4d0:	bl	1e3ac <argp_error@@Base+0x1450>
   1e4d4:	cmp	r0, #0
   1e4d8:	beq	1e50c <argp_error@@Base+0x15b0>
   1e4dc:	str	r6, [sp, #4]
   1e4e0:	ldr	r0, [r5, #28]
   1e4e4:	ldr	r4, [r5, #32]
   1e4e8:	sub	r4, r4, r0
   1e4ec:	mov	r3, r6
   1e4f0:	ldr	r2, [sp, #28]
   1e4f4:	mov	r1, r4
   1e4f8:	bl	11598 <vsnprintf@plt>
   1e4fc:	cmp	r0, r4
   1e500:	bcc	1e52c <argp_error@@Base+0x15d0>
   1e504:	add	r1, r0, #1
   1e508:	b	1e4cc <argp_error@@Base+0x1570>
   1e50c:	mvn	r0, #0
   1e510:	add	sp, sp, #12
   1e514:	ldrd	r4, [sp]
   1e518:	ldr	r6, [sp, #8]
   1e51c:	ldr	lr, [sp, #12]
   1e520:	add	sp, sp, #16
   1e524:	add	sp, sp, #12
   1e528:	bx	lr
   1e52c:	ldr	r2, [r5, #28]
   1e530:	add	r3, r2, r0
   1e534:	str	r3, [r5, #28]
   1e538:	b	1e510 <argp_error@@Base+0x15b4>
   1e53c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e540:	mov	r7, r0
   1e544:	ldr	r6, [pc, #72]	; 1e594 <argp_error@@Base+0x1638>
   1e548:	ldr	r5, [pc, #72]	; 1e598 <argp_error@@Base+0x163c>
   1e54c:	add	r6, pc, r6
   1e550:	add	r5, pc, r5
   1e554:	sub	r6, r6, r5
   1e558:	mov	r8, r1
   1e55c:	mov	r9, r2
   1e560:	bl	11290 <calloc@plt-0x20>
   1e564:	asrs	r6, r6, #2
   1e568:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e56c:	mov	r4, #0
   1e570:	add	r4, r4, #1
   1e574:	ldr	r3, [r5], #4
   1e578:	mov	r2, r9
   1e57c:	mov	r1, r8
   1e580:	mov	r0, r7
   1e584:	blx	r3
   1e588:	cmp	r6, r4
   1e58c:	bne	1e570 <argp_error@@Base+0x1614>
   1e590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e594:	andeq	r3, r1, r0, asr #19
   1e598:			; <UNDEFINED> instruction: 0x000139b8
   1e59c:	bx	lr

Disassembly of section .fini:

0001e5a0 <.fini>:
   1e5a0:	push	{r3, lr}
   1e5a4:	pop	{r3, pc}
