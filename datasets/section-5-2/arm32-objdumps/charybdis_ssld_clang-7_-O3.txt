
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00011090 <.init>:
   11090:	push	{r3, lr}
   11094:	bl	11404 <__errno_location@plt+0x48>
   11098:	pop	{r3, pc}

Disassembly of section .plt:

0001109c <open@plt-0x14>:
   1109c:	push	{lr}		; (str lr, [sp, #-4]!)
   110a0:	ldr	lr, [pc, #4]	; 110ac <open@plt-0x4>
   110a4:	add	lr, pc, lr
   110a8:	ldr	pc, [lr, #8]!
   110ac:	andeq	r2, r1, r4, asr pc

000110b0 <open@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #73728	; 0x12000
   110b8:	ldr	pc, [ip, #3924]!	; 0xf54

000110bc <sigemptyset@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #73728	; 0x12000
   110c4:	ldr	pc, [ip, #3916]!	; 0xf4c

000110c8 <strerror@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #73728	; 0x12000
   110d0:	ldr	pc, [ip, #3908]!	; 0xf44

000110d4 <rb_get_type@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #73728	; 0x12000
   110dc:	ldr	pc, [ip, #3900]!	; 0xf3c

000110e0 <zError@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #73728	; 0x12000
   110e8:	ldr	pc, [ip, #3892]!	; 0xf34

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #73728	; 0x12000
   110f4:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f8 <rb_event_addish@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #73728	; 0x12000
   11100:	ldr	pc, [ip, #3876]!	; 0xf24

00011104 <rb_ignore_errno@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #73728	; 0x12000
   1110c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011110 <rb_lib_version@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #73728	; 0x12000
   11118:	ldr	pc, [ip, #3860]!	; 0xf14

0001111c <inflateEnd@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #73728	; 0x12000
   11124:	ldr	pc, [ip, #3852]!	; 0xf0c

00011128 <__libc_start_main@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #73728	; 0x12000
   11130:	ldr	pc, [ip, #3844]!	; 0xf04

00011134 <rb_setselect@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #73728	; 0x12000
   1113c:	ldr	pc, [ip, #3836]!	; 0xefc

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #73728	; 0x12000
   11148:	ldr	pc, [ip, #3828]!	; 0xef4

0001114c <rb_ssl_handshake_count@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #73728	; 0x12000
   11154:	ldr	pc, [ip, #3820]!	; 0xeec

00011158 <rb_send_fd_buf@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #73728	; 0x12000
   11160:	ldr	pc, [ip, #3812]!	; 0xee4

00011164 <vsnprintf@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #73728	; 0x12000
   1116c:	ldr	pc, [ip, #3804]!	; 0xedc

00011170 <strncpy@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #73728	; 0x12000
   11178:	ldr	pc, [ip, #3796]!	; 0xed4

0001117c <getenv@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #73728	; 0x12000
   11184:	ldr	pc, [ip, #3788]!	; 0xecc

00011188 <deflate@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #73728	; 0x12000
   11190:	ldr	pc, [ip, #3780]!	; 0xec4

00011194 <deflateInit_@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #73728	; 0x12000
   1119c:	ldr	pc, [ip, #3772]!	; 0xebc

000111a0 <calloc@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #73728	; 0x12000
   111a8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111ac <rb_set_nb@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #73728	; 0x12000
   111b4:	ldr	pc, [ip, #3756]!	; 0xeac

000111b8 <memset@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #73728	; 0x12000
   111c0:	ldr	pc, [ip, #3748]!	; 0xea4

000111c4 <rb_strlcpy@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #73728	; 0x12000
   111cc:	ldr	pc, [ip, #3740]!	; 0xe9c

000111d0 <rb_get_ssl_certfp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #73728	; 0x12000
   111d8:	ldr	pc, [ip, #3732]!	; 0xe94

000111dc <inflate@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #73728	; 0x12000
   111e4:	ldr	pc, [ip, #3724]!	; 0xe8c

000111e8 <rb_init_rawbuffers@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #73728	; 0x12000
   111f0:	ldr	pc, [ip, #3716]!	; 0xe84

000111f4 <free@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #73728	; 0x12000
   111fc:	ldr	pc, [ip, #3708]!	; 0xe7c

00011200 <rb_lib_loop@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #73728	; 0x12000
   11208:	ldr	pc, [ip, #3700]!	; 0xe74

0001120c <deflateEnd@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #73728	; 0x12000
   11214:	ldr	pc, [ip, #3692]!	; 0xe6c

00011218 <rb_read@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #73728	; 0x12000
   11220:	ldr	pc, [ip, #3684]!	; 0xe64

00011224 <rb_set_type@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #73728	; 0x12000
   1122c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011230 <strlen@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #73728	; 0x12000
   11238:	ldr	pc, [ip, #3668]!	; 0xe54

0001123c <rb_ssl_get_cipher@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #73728	; 0x12000
   11244:	ldr	pc, [ip, #3660]!	; 0xe4c

00011248 <memcpy@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #73728	; 0x12000
   11250:	ldr	pc, [ip, #3652]!	; 0xe44

00011254 <rb_close@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #73728	; 0x12000
   1125c:	ldr	pc, [ip, #3644]!	; 0xe3c

00011260 <strtol@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #73728	; 0x12000
   11268:	ldr	pc, [ip, #3636]!	; 0xe34

0001126c <sigaddset@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #73728	; 0x12000
   11274:	ldr	pc, [ip, #3628]!	; 0xe2c

00011278 <strcpy@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #73728	; 0x12000
   11280:	ldr	pc, [ip, #3620]!	; 0xe24

00011284 <rb_ssl_clear_handshake_count@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #73728	; 0x12000
   1128c:	ldr	pc, [ip, #3612]!	; 0xe1c

00011290 <rb_rawbuf_length@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #73728	; 0x12000
   11298:	ldr	pc, [ip, #3604]!	; 0xe14

0001129c <rb_free_rawbuffer@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #73728	; 0x12000
   112a4:	ldr	pc, [ip, #3596]!	; 0xe0c

000112a8 <rb_get_ssl_strerror@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #73728	; 0x12000
   112b0:	ldr	pc, [ip, #3588]!	; 0xe04

000112b4 <close@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #73728	; 0x12000
   112bc:	ldr	pc, [ip, #3580]!	; 0xdfc

000112c0 <fwrite@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #73728	; 0x12000
   112c8:	ldr	pc, [ip, #3572]!	; 0xdf4

000112cc <rb_init_prng@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #73728	; 0x12000
   112d4:	ldr	pc, [ip, #3564]!	; 0xdec

000112d8 <rb_outofmemory@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #73728	; 0x12000
   112e0:	ldr	pc, [ip, #3556]!	; 0xde4

000112e4 <rb_supports_ssl@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #73728	; 0x12000
   112ec:	ldr	pc, [ip, #3548]!	; 0xddc

000112f0 <sigaction@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #73728	; 0x12000
   112f8:	ldr	pc, [ip, #3540]!	; 0xdd4

000112fc <rb_ssl_start_connected@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #73728	; 0x12000
   11304:	ldr	pc, [ip, #3532]!	; 0xdcc

00011308 <rb_lib_init@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #73728	; 0x12000
   11310:	ldr	pc, [ip, #3524]!	; 0xdc4

00011314 <rb_new_rawbuffer@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #73728	; 0x12000
   1131c:	ldr	pc, [ip, #3516]!	; 0xdbc

00011320 <rb_open@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #73728	; 0x12000
   11328:	ldr	pc, [ip, #3508]!	; 0xdb4

0001132c <inflateInit_@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #73728	; 0x12000
   11334:	ldr	pc, [ip, #3500]!	; 0xdac

00011338 <rb_recv_fd_buf@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #73728	; 0x12000
   11340:	ldr	pc, [ip, #3492]!	; 0xda4

00011344 <rb_ssl_start_accepted@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #73728	; 0x12000
   1134c:	ldr	pc, [ip, #3484]!	; 0xd9c

00011350 <dup2@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #73728	; 0x12000
   11358:	ldr	pc, [ip, #3476]!	; 0xd94

0001135c <rb_event_add@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #73728	; 0x12000
   11364:	ldr	pc, [ip, #3468]!	; 0xd8c

00011368 <snprintf@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #73728	; 0x12000
   11370:	ldr	pc, [ip, #3460]!	; 0xd84

00011374 <strncmp@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #73728	; 0x12000
   1137c:	ldr	pc, [ip, #3452]!	; 0xd7c

00011380 <getrlimit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #73728	; 0x12000
   11388:	ldr	pc, [ip, #3444]!	; 0xd74

0001138c <rb_rawbuf_append@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #73728	; 0x12000
   11394:	ldr	pc, [ip, #3436]!	; 0xd6c

00011398 <rb_rawbuf_flush@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #73728	; 0x12000
   113a0:	ldr	pc, [ip, #3428]!	; 0xd64

000113a4 <rb_setup_ssl_server@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #73728	; 0x12000
   113ac:	ldr	pc, [ip, #3420]!	; 0xd5c

000113b0 <exit@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #73728	; 0x12000
   113b8:	ldr	pc, [ip, #3412]!	; 0xd54

000113bc <__errno_location@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #73728	; 0x12000
   113c4:	ldr	pc, [ip, #3404]!	; 0xd4c

Disassembly of section .text:

000113c8 <.text>:
   113c8:	mov	fp, #0
   113cc:	mov	lr, #0
   113d0:	pop	{r1}		; (ldr r1, [sp], #4)
   113d4:	mov	r2, sp
   113d8:	push	{r2}		; (str r2, [sp, #-4]!)
   113dc:	push	{r0}		; (str r0, [sp, #-4]!)
   113e0:	ldr	ip, [pc, #16]	; 113f8 <__errno_location@plt+0x3c>
   113e4:	push	{ip}		; (str ip, [sp, #-4]!)
   113e8:	ldr	r0, [pc, #12]	; 113fc <__errno_location@plt+0x40>
   113ec:	ldr	r3, [pc, #12]	; 11400 <__errno_location@plt+0x44>
   113f0:	bl	11128 <__libc_start_main@plt>
   113f4:	bl	110ec <abort@plt>
   113f8:	andeq	r3, r1, ip, lsr #22
   113fc:			; <UNDEFINED> instruction: 0x000114b8
   11400:	andeq	r3, r1, ip, asr #21
   11404:	ldr	r3, [pc, #20]	; 11420 <__errno_location@plt+0x64>
   11408:	ldr	r2, [pc, #20]	; 11424 <__errno_location@plt+0x68>
   1140c:	add	r3, pc, r3
   11410:	ldr	r2, [r3, r2]
   11414:	cmp	r2, #0
   11418:	bxeq	lr
   1141c:	b	11140 <__gmon_start__@plt>
   11420:	andeq	r2, r1, ip, ror #23
   11424:	andeq	r0, r0, r4, lsl r1
   11428:	ldr	r0, [pc, #24]	; 11448 <__errno_location@plt+0x8c>
   1142c:	ldr	r3, [pc, #24]	; 1144c <__errno_location@plt+0x90>
   11430:	cmp	r3, r0
   11434:	bxeq	lr
   11438:	ldr	r3, [pc, #16]	; 11450 <__errno_location@plt+0x94>
   1143c:	cmp	r3, #0
   11440:	bxeq	lr
   11444:	bx	r3
   11448:	andeq	r4, r2, r0, lsr #2
   1144c:	andeq	r4, r2, r0, lsr #2
   11450:	andeq	r0, r0, r0
   11454:	ldr	r0, [pc, #36]	; 11480 <__errno_location@plt+0xc4>
   11458:	ldr	r1, [pc, #36]	; 11484 <__errno_location@plt+0xc8>
   1145c:	sub	r1, r1, r0
   11460:	asr	r1, r1, #2
   11464:	add	r1, r1, r1, lsr #31
   11468:	asrs	r1, r1, #1
   1146c:	bxeq	lr
   11470:	ldr	r3, [pc, #16]	; 11488 <__errno_location@plt+0xcc>
   11474:	cmp	r3, #0
   11478:	bxeq	lr
   1147c:	bx	r3
   11480:	andeq	r4, r2, r0, lsr #2
   11484:	andeq	r4, r2, r0, lsr #2
   11488:	andeq	r0, r0, r0
   1148c:	push	{r4, lr}
   11490:	ldr	r4, [pc, #24]	; 114b0 <__errno_location@plt+0xf4>
   11494:	ldrb	r3, [r4]
   11498:	cmp	r3, #0
   1149c:	popne	{r4, pc}
   114a0:	bl	11428 <__errno_location@plt+0x6c>
   114a4:	mov	r3, #1
   114a8:	strb	r3, [r4]
   114ac:	pop	{r4, pc}
   114b0:	andeq	r4, r2, r4, lsr #2
   114b4:	b	11454 <__errno_location@plt+0x98>
   114b8:	push	{r4, r5, fp, lr}
   114bc:	add	fp, sp, #8
   114c0:	sub	sp, sp, #24
   114c4:	sub	sp, sp, #16384	; 0x4000
   114c8:	add	r9, sp, #16
   114cc:	mov	r0, #7
   114d0:	mov	r1, r9
   114d4:	bl	11380 <getrlimit@plt>
   114d8:	ldr	r6, [sp, #16]
   114dc:	cmp	r0, #0
   114e0:	movw	r0, #15164	; 0x3b3c
   114e4:	movt	r0, #1
   114e8:	movwne	r6, #65535	; 0xffff
   114ec:	bl	1117c <getenv@plt>
   114f0:	mov	r5, r0
   114f4:	movw	r0, #15171	; 0x3b43
   114f8:	movt	r0, #1
   114fc:	bl	1117c <getenv@plt>
   11500:	mov	r4, r0
   11504:	movw	r0, #15180	; 0x3b4c
   11508:	movt	r0, #1
   1150c:	bl	1117c <getenv@plt>
   11510:	cmp	r5, #0
   11514:	beq	11528 <__errno_location@plt+0x16c>
   11518:	cmp	r4, #0
   1151c:	movne	r7, r0
   11520:	cmpne	r0, #0
   11524:	bne	11568 <__errno_location@plt+0x1ac>
   11528:	movw	r4, #16672	; 0x4120
   1152c:	movw	r0, #15189	; 0x3b55
   11530:	mov	r1, #50	; 0x32
   11534:	mov	r2, #1
   11538:	movt	r4, #2
   1153c:	movt	r0, #1
   11540:	ldr	r3, [r4]
   11544:	bl	112c0 <fwrite@plt>
   11548:	ldr	r3, [r4]
   1154c:	movw	r0, #15240	; 0x3b88
   11550:	mov	r1, #49	; 0x31
   11554:	mov	r2, #1
   11558:	movt	r0, #1
   1155c:	bl	112c0 <fwrite@plt>
   11560:	mov	r0, #1
   11564:	bl	113b0 <exit@plt>
   11568:	mov	r0, r5
   1156c:	mov	r1, #0
   11570:	mov	r2, #10
   11574:	bl	11260 <strtol@plt>
   11578:	mov	r5, r0
   1157c:	mov	r0, r4
   11580:	mov	r1, #0
   11584:	mov	r2, #10
   11588:	bl	11260 <strtol@plt>
   1158c:	mov	r4, r0
   11590:	mov	r0, r7
   11594:	mov	r1, #0
   11598:	mov	r2, #10
   1159c:	bl	11260 <strtol@plt>
   115a0:	movw	r8, #40692	; 0x9ef4
   115a4:	cmp	r6, #4
   115a8:	movt	r8, #2
   115ac:	str	r0, [r8, #4]
   115b0:	blt	115e8 <__errno_location@plt+0x22c>
   115b4:	mov	r7, #3
   115b8:	cmp	r5, r7
   115bc:	cmpne	r4, r7
   115c0:	bne	115d4 <__errno_location@plt+0x218>
   115c4:	add	r7, r7, #1
   115c8:	cmp	r6, r7
   115cc:	bne	115b8 <__errno_location@plt+0x1fc>
   115d0:	b	115e8 <__errno_location@plt+0x22c>
   115d4:	mov	r0, r7
   115d8:	bl	112b4 <close@plt>
   115dc:	add	r7, r7, #1
   115e0:	cmp	r6, r7
   115e4:	bne	115b8 <__errno_location@plt+0x1fc>
   115e8:	movw	r0, #15290	; 0x3bba
   115ec:	mov	r1, #2
   115f0:	movt	r0, #1
   115f4:	bl	110b0 <open@plt>
   115f8:	cmp	r0, #0
   115fc:	blt	11638 <__errno_location@plt+0x27c>
   11600:	cmp	r5, #0
   11604:	mov	r7, r0
   11608:	cmpne	r4, #0
   1160c:	bne	11890 <__errno_location@plt+0x4d4>
   11610:	cmp	r5, #1
   11614:	cmpne	r4, #1
   11618:	bne	118a8 <__errno_location@plt+0x4ec>
   1161c:	cmp	r5, #2
   11620:	cmpne	r4, #2
   11624:	bne	118c0 <__errno_location@plt+0x504>
   11628:	cmp	r7, #3
   1162c:	blt	11638 <__errno_location@plt+0x27c>
   11630:	mov	r0, r7
   11634:	bl	112b4 <close@plt>
   11638:	mov	r0, #1
   1163c:	add	r7, r9, #4
   11640:	str	r0, [sp, #16]
   11644:	mov	r0, #0
   11648:	str	r0, [sp, #148]	; 0x94
   1164c:	mov	r0, r7
   11650:	bl	110bc <sigemptyset@plt>
   11654:	mov	r0, r7
   11658:	mov	r1, #13
   1165c:	bl	1126c <sigaddset@plt>
   11660:	mov	r0, r7
   11664:	mov	r1, #14
   11668:	bl	1126c <sigaddset@plt>
   1166c:	mov	r0, r7
   11670:	mov	r1, #5
   11674:	bl	1126c <sigaddset@plt>
   11678:	mov	r0, r7
   1167c:	mov	r1, #28
   11680:	bl	1126c <sigaddset@plt>
   11684:	mov	r0, #28
   11688:	mov	r1, r9
   1168c:	mov	r2, #0
   11690:	bl	112f0 <sigaction@plt>
   11694:	mov	r0, #13
   11698:	mov	r1, r9
   1169c:	mov	r2, #0
   116a0:	bl	112f0 <sigaction@plt>
   116a4:	mov	r0, #5
   116a8:	mov	r1, r9
   116ac:	mov	r2, #0
   116b0:	bl	112f0 <sigaction@plt>
   116b4:	movw	r0, #15048	; 0x3ac8
   116b8:	mov	r1, r9
   116bc:	mov	r2, #0
   116c0:	movt	r0, #1
   116c4:	str	r0, [sp, #16]
   116c8:	mov	r0, #14
   116cc:	bl	112f0 <sigaction@plt>
   116d0:	mov	r0, #4096	; 0x1000
   116d4:	mov	r1, #1024	; 0x400
   116d8:	mov	r2, #0
   116dc:	mov	r3, #0
   116e0:	str	r6, [sp]
   116e4:	str	r1, [sp, #4]
   116e8:	str	r0, [sp, #8]
   116ec:	mov	r0, #0
   116f0:	mov	r1, #0
   116f4:	bl	11308 <rb_lib_init@plt>
   116f8:	mov	r0, #1024	; 0x400
   116fc:	bl	111e8 <rb_init_rawbuffers@plt>
   11700:	mov	r0, #0
   11704:	mov	r1, #1
   11708:	bl	112cc <rb_init_prng@plt>
   1170c:	bl	112e4 <rb_supports_ssl@plt>
   11710:	cmp	r0, #0
   11714:	mov	r1, #48	; 0x30
   11718:	movwne	r0, #1
   1171c:	strb	r0, [r8]
   11720:	mov	r0, #1
   11724:	bl	111a0 <calloc@plt>
   11728:	cmp	r0, #0
   1172c:	beq	1188c <__errno_location@plt+0x4d0>
   11730:	movw	r2, #15300	; 0x3bc4
   11734:	str	r0, [r8, #8]
   11738:	mov	r0, r5
   1173c:	mov	r1, #4
   11740:	movt	r2, #1
   11744:	bl	11320 <rb_open@plt>
   11748:	ldr	r1, [r8, #8]
   1174c:	movw	r2, #15320	; 0x3bd8
   11750:	movt	r2, #1
   11754:	str	r0, [r1, #16]
   11758:	mov	r0, r4
   1175c:	mov	r1, #8
   11760:	bl	11320 <rb_open@plt>
   11764:	ldr	r1, [r8, #8]
   11768:	str	r0, [r1, #20]
   1176c:	ldr	r0, [r1, #16]
   11770:	bl	111ac <rb_set_nb@plt>
   11774:	ldr	r0, [r8, #8]
   11778:	ldr	r0, [r0, #20]
   1177c:	bl	111ac <rb_set_nb@plt>
   11780:	movw	r0, #15330	; 0x3be2
   11784:	movw	r1, #6620	; 0x19dc
   11788:	mov	r2, #0
   1178c:	mov	r3, #10
   11790:	movt	r0, #1
   11794:	movt	r1, #1
   11798:	bl	110f8 <rb_event_addish@plt>
   1179c:	movw	r0, #15347	; 0x3bf3
   117a0:	movw	r1, #6760	; 0x1a68
   117a4:	mov	r2, #0
   117a8:	mov	r3, #10
   117ac:	movt	r0, #1
   117b0:	movt	r1, #1
   117b4:	bl	1135c <rb_event_add@plt>
   117b8:	ldr	r0, [r8, #8]
   117bc:	add	r5, sp, #16
   117c0:	ldr	r4, [r0, #20]
   117c4:	mov	r0, r4
   117c8:	mov	r1, r5
   117cc:	mov	r2, #16384	; 0x4000
   117d0:	bl	11218 <rb_read@plt>
   117d4:	cmp	r0, #0
   117d8:	bgt	117c4 <__errno_location@plt+0x408>
   117dc:	beq	117f4 <__errno_location@plt+0x438>
   117e0:	bl	113bc <__errno_location@plt>
   117e4:	ldr	r0, [r0]
   117e8:	bl	11104 <rb_ignore_errno@plt>
   117ec:	cmp	r0, #0
   117f0:	bne	117fc <__errno_location@plt+0x440>
   117f4:	mov	r0, #0
   117f8:	bl	113b0 <exit@plt>
   117fc:	movw	r2, #6888	; 0x1ae8
   11800:	mov	r0, r4
   11804:	mov	r1, #1
   11808:	mov	r3, #0
   1180c:	movt	r2, #1
   11810:	bl	11134 <rb_setselect@plt>
   11814:	ldr	r1, [r8, #8]
   11818:	ldr	r0, [r1, #16]
   1181c:	bl	11b54 <__errno_location@plt+0x798>
   11820:	ldr	r4, [r8, #8]
   11824:	orr	r6, r5, #1
   11828:	mov	r1, #0
   1182c:	mov	r2, #255	; 0xff
   11830:	mov	r0, r6
   11834:	bl	111b8 <memset@plt>
   11838:	mov	r0, #86	; 0x56
   1183c:	strb	r0, [sp, #16]
   11840:	bl	11110 <rb_lib_version@plt>
   11844:	mov	r1, r0
   11848:	mov	r0, r6
   1184c:	mov	r2, #254	; 0xfe
   11850:	bl	11170 <strncpy@plt>
   11854:	mov	r0, r5
   11858:	bl	11230 <strlen@plt>
   1185c:	mov	r6, r0
   11860:	mov	r0, #1
   11864:	mov	r1, #40	; 0x28
   11868:	bl	111a0 <calloc@plt>
   1186c:	cmp	r0, #0
   11870:	beq	1188c <__errno_location@plt+0x4d0>
   11874:	mov	r5, r0
   11878:	mov	r0, #1
   1187c:	mov	r1, r6
   11880:	bl	111a0 <calloc@plt>
   11884:	cmp	r0, #0
   11888:	bne	118d8 <__errno_location@plt+0x51c>
   1188c:	bl	112d8 <rb_outofmemory@plt>
   11890:	mov	r0, r7
   11894:	mov	r1, #0
   11898:	bl	11350 <dup2@plt>
   1189c:	cmp	r5, #1
   118a0:	cmpne	r4, #1
   118a4:	beq	1161c <__errno_location@plt+0x260>
   118a8:	mov	r0, r7
   118ac:	mov	r1, #1
   118b0:	bl	11350 <dup2@plt>
   118b4:	cmp	r5, #2
   118b8:	cmpne	r4, #2
   118bc:	beq	11628 <__errno_location@plt+0x26c>
   118c0:	mov	r0, r7
   118c4:	mov	r1, #2
   118c8:	bl	11350 <dup2@plt>
   118cc:	cmp	r7, #3
   118d0:	bge	11630 <__errno_location@plt+0x274>
   118d4:	b	11638 <__errno_location@plt+0x27c>
   118d8:	add	r1, sp, #16
   118dc:	mov	r2, r6
   118e0:	str	r0, [r5, #12]
   118e4:	str	r6, [r5, #16]
   118e8:	bl	11248 <memcpy@plt>
   118ec:	str	r5, [r5]
   118f0:	ldr	r0, [r4, #40]	; 0x28
   118f4:	cmp	r0, #0
   118f8:	str	r0, [r5, #4]
   118fc:	bne	11914 <__errno_location@plt+0x558>
   11900:	mov	r0, r4
   11904:	ldr	r1, [r0, #36]!	; 0x24
   11908:	cmp	r1, #0
   1190c:	streq	r5, [r0]
   11910:	b	1191c <__errno_location@plt+0x560>
   11914:	add	r0, r0, #8
   11918:	str	r5, [r0]
   1191c:	str	r5, [r4, #40]	; 0x28
   11920:	ldr	r1, [r4, #44]	; 0x2c
   11924:	ldr	r0, [r4, #16]
   11928:	add	r1, r1, #1
   1192c:	str	r1, [r4, #44]	; 0x2c
   11930:	mov	r1, r4
   11934:	bl	12c78 <__errno_location@plt+0x18bc>
   11938:	ldrb	r0, [r8]
   1193c:	cmp	r0, #0
   11940:	bne	119d4 <__errno_location@plt+0x618>
   11944:	ldr	r4, [r8, #8]
   11948:	mov	r0, #1
   1194c:	mov	r1, #40	; 0x28
   11950:	bl	111a0 <calloc@plt>
   11954:	cmp	r0, #0
   11958:	beq	1188c <__errno_location@plt+0x4d0>
   1195c:	mov	r5, r0
   11960:	mov	r0, #1
   11964:	mov	r1, #1
   11968:	mov	r6, #1
   1196c:	bl	111a0 <calloc@plt>
   11970:	cmp	r0, #0
   11974:	beq	1188c <__errno_location@plt+0x4d0>
   11978:	mov	r1, #78	; 0x4e
   1197c:	str	r0, [r5, #12]
   11980:	str	r6, [r5, #16]
   11984:	str	r5, [r5]
   11988:	strb	r1, [r0]
   1198c:	ldr	r0, [r4, #40]	; 0x28
   11990:	cmp	r0, #0
   11994:	str	r0, [r5, #4]
   11998:	bne	119b0 <__errno_location@plt+0x5f4>
   1199c:	mov	r0, r4
   119a0:	ldr	r1, [r0, #36]!	; 0x24
   119a4:	cmp	r1, #0
   119a8:	streq	r5, [r0]
   119ac:	b	119b8 <__errno_location@plt+0x5fc>
   119b0:	add	r0, r0, #8
   119b4:	str	r5, [r0]
   119b8:	str	r5, [r4, #40]	; 0x28
   119bc:	ldr	r1, [r4, #44]	; 0x2c
   119c0:	ldr	r0, [r4, #16]
   119c4:	add	r1, r1, #1
   119c8:	str	r1, [r4, #44]	; 0x2c
   119cc:	mov	r1, r4
   119d0:	bl	12c78 <__errno_location@plt+0x18bc>
   119d4:	mov	r0, #0
   119d8:	bl	11200 <rb_lib_loop@plt>
   119dc:	push	{r4, r5, r6, r7, fp, lr}
   119e0:	add	fp, sp, #16
   119e4:	movw	r6, #16680	; 0x4128
   119e8:	movt	r6, #2
   119ec:	ldr	r7, [r6]
   119f0:	cmp	r7, #0
   119f4:	bne	11a0c <__errno_location@plt+0x650>
   119f8:	b	11a58 <__errno_location@plt+0x69c>
   119fc:	mov	r0, r4
   11a00:	bl	111f4 <free@plt>
   11a04:	cmp	r7, #0
   11a08:	beq	11a58 <__errno_location@plt+0x69c>
   11a0c:	ldr	r4, [r7]
   11a10:	ldr	r7, [r7, #8]
   11a14:	ldr	r0, [r4, #16]
   11a18:	bl	1129c <rb_free_rawbuffer@plt>
   11a1c:	ldr	r0, [r4, #20]
   11a20:	bl	1129c <rb_free_rawbuffer@plt>
   11a24:	ldrb	r0, [r4, #72]	; 0x48
   11a28:	tst	r0, #2
   11a2c:	beq	119fc <__errno_location@plt+0x640>
   11a30:	ldr	r5, [r4, #76]	; 0x4c
   11a34:	mov	r0, r5
   11a38:	bl	1111c <inflateEnd@plt>
   11a3c:	add	r0, r5, #56	; 0x38
   11a40:	bl	1120c <deflateEnd@plt>
   11a44:	cmp	r5, #0
   11a48:	beq	119fc <__errno_location@plt+0x640>
   11a4c:	mov	r0, r5
   11a50:	bl	111f4 <free@plt>
   11a54:	b	119fc <__errno_location@plt+0x640>
   11a58:	mov	r0, #0
   11a5c:	str	r0, [r6]
   11a60:	str	r0, [r6, #4]
   11a64:	pop	{r4, r5, r6, r7, fp, pc}
   11a68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a6c:	add	fp, sp, #24
   11a70:	movw	r8, #16692	; 0x4134
   11a74:	movw	r4, #15369	; 0x3c09
   11a78:	mov	r6, #0
   11a7c:	movt	r8, #2
   11a80:	movt	r4, #1
   11a84:	b	11a94 <__errno_location@plt+0x6d8>
   11a88:	add	r6, r6, #1
   11a8c:	cmp	r6, #2000	; 0x7d0
   11a90:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   11a94:	add	r0, r6, r6, lsl #1
   11a98:	ldr	r7, [r8, r0, lsl #2]
   11a9c:	b	11aa8 <__errno_location@plt+0x6ec>
   11aa0:	ldr	r0, [r5, #28]
   11aa4:	bl	11284 <rb_ssl_clear_handshake_count@plt>
   11aa8:	cmp	r7, #0
   11aac:	beq	11a88 <__errno_location@plt+0x6cc>
   11ab0:	ldr	r5, [r7]
   11ab4:	ldr	r7, [r7, #8]
   11ab8:	ldrb	r0, [r5, #72]	; 0x48
   11abc:	tst	r0, #1
   11ac0:	beq	11aa8 <__errno_location@plt+0x6ec>
   11ac4:	ldr	r0, [r5, #28]
   11ac8:	bl	1114c <rb_ssl_handshake_count@plt>
   11acc:	cmp	r0, #3
   11ad0:	bcc	11aa0 <__errno_location@plt+0x6e4>
   11ad4:	mov	r0, r5
   11ad8:	mov	r1, #1
   11adc:	mov	r2, r4
   11ae0:	bl	1294c <__errno_location@plt+0x1590>
   11ae4:	b	11aa8 <__errno_location@plt+0x6ec>
   11ae8:	push	{r4, r5, r6, r7, fp, lr}
   11aec:	add	fp, sp, #16
   11af0:	sub	sp, sp, #16384	; 0x4000
   11af4:	mov	r4, r0
   11af8:	mov	r5, sp
   11afc:	mov	r0, r4
   11b00:	mov	r1, r5
   11b04:	mov	r2, #16384	; 0x4000
   11b08:	bl	11218 <rb_read@plt>
   11b0c:	cmp	r0, #0
   11b10:	bgt	11afc <__errno_location@plt+0x740>
   11b14:	beq	11b4c <__errno_location@plt+0x790>
   11b18:	bl	113bc <__errno_location@plt>
   11b1c:	ldr	r0, [r0]
   11b20:	bl	11104 <rb_ignore_errno@plt>
   11b24:	cmp	r0, #0
   11b28:	beq	11b4c <__errno_location@plt+0x790>
   11b2c:	movw	r2, #6888	; 0x1ae8
   11b30:	mov	r0, r4
   11b34:	mov	r1, #1
   11b38:	mov	r3, #0
   11b3c:	movt	r2, #1
   11b40:	bl	11134 <rb_setselect@plt>
   11b44:	sub	sp, fp, #16
   11b48:	pop	{r4, r5, r6, r7, fp, pc}
   11b4c:	mov	r0, #0
   11b50:	bl	113b0 <exit@plt>
   11b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b58:	add	fp, sp, #28
   11b5c:	sub	sp, sp, #4
   11b60:	vpush	{d8-d9}
   11b64:	sub	sp, sp, #576	; 0x240
   11b68:	mov	r4, r1
   11b6c:	mov	r0, #1
   11b70:	mov	r1, #40	; 0x28
   11b74:	bl	111a0 <calloc@plt>
   11b78:	cmp	r0, #0
   11b7c:	beq	12940 <__errno_location@plt+0x1584>
   11b80:	mov	r5, r0
   11b84:	add	sl, r4, #24
   11b88:	mov	r8, #16384	; 0x4000
   11b8c:	mov	r7, #4
   11b90:	mov	r9, #0
   11b94:	mov	r0, #1
   11b98:	mov	r1, #16384	; 0x4000
   11b9c:	bl	111a0 <calloc@plt>
   11ba0:	cmp	r0, #0
   11ba4:	beq	12940 <__errno_location@plt+0x1584>
   11ba8:	str	r0, [r5, #12]
   11bac:	str	r8, [r5, #16]
   11bb0:	mov	r1, r0
   11bb4:	add	r3, r5, #20
   11bb8:	mov	r2, #16384	; 0x4000
   11bbc:	ldr	r0, [r4, #16]
   11bc0:	str	r7, [sp]
   11bc4:	bl	11338 <rb_recv_fd_buf@plt>
   11bc8:	mov	r6, r0
   11bcc:	cmp	r0, #0
   11bd0:	ble	11c88 <__errno_location@plt+0x8cc>
   11bd4:	str	r6, [r5, #16]
   11bd8:	ldr	r0, [r4, #28]
   11bdc:	str	r5, [r5]
   11be0:	cmp	r0, #0
   11be4:	stmib	r5, {r0, r9}
   11be8:	beq	11bf8 <__errno_location@plt+0x83c>
   11bec:	add	r0, r0, #8
   11bf0:	str	r5, [r0]
   11bf4:	b	11c04 <__errno_location@plt+0x848>
   11bf8:	ldr	r0, [sl]
   11bfc:	cmp	r0, #0
   11c00:	beq	11c80 <__errno_location@plt+0x8c4>
   11c04:	str	r5, [r4, #28]
   11c08:	ldr	r0, [r4, #32]
   11c0c:	add	r0, r0, #1
   11c10:	str	r0, [r4, #32]
   11c14:	ldr	r0, [r5, #20]
   11c18:	cmp	r0, #0
   11c1c:	beq	11c4c <__errno_location@plt+0x890>
   11c20:	ldr	r0, [r5, #24]
   11c24:	cmp	r0, #0
   11c28:	beq	11c54 <__errno_location@plt+0x898>
   11c2c:	ldr	r0, [r5, #28]
   11c30:	cmp	r0, #0
   11c34:	beq	11c5c <__errno_location@plt+0x8a0>
   11c38:	ldr	r0, [r5, #32]
   11c3c:	cmp	r0, #0
   11c40:	mov	r0, #4
   11c44:	movweq	r0, #3
   11c48:	b	11c60 <__errno_location@plt+0x8a4>
   11c4c:	mov	r0, #0
   11c50:	b	11c60 <__errno_location@plt+0x8a4>
   11c54:	mov	r0, #1
   11c58:	b	11c60 <__errno_location@plt+0x8a4>
   11c5c:	mov	r0, #2
   11c60:	str	r0, [r5, #36]	; 0x24
   11c64:	mov	r0, #1
   11c68:	mov	r1, #40	; 0x28
   11c6c:	bl	111a0 <calloc@plt>
   11c70:	mov	r5, r0
   11c74:	cmp	r0, #0
   11c78:	bne	11b94 <__errno_location@plt+0x7d8>
   11c7c:	b	12940 <__errno_location@plt+0x1584>
   11c80:	mov	r0, sl
   11c84:	b	11bf0 <__errno_location@plt+0x834>
   11c88:	ldr	r0, [r5, #12]
   11c8c:	cmp	r0, #0
   11c90:	beq	11c98 <__errno_location@plt+0x8dc>
   11c94:	bl	111f4 <free@plt>
   11c98:	mov	r0, r5
   11c9c:	bl	111f4 <free@plt>
   11ca0:	cmp	r6, #0
   11ca4:	beq	12944 <__errno_location@plt+0x1588>
   11ca8:	bl	113bc <__errno_location@plt>
   11cac:	ldr	r0, [r0]
   11cb0:	bl	11104 <rb_ignore_errno@plt>
   11cb4:	cmp	r0, #0
   11cb8:	beq	12944 <__errno_location@plt+0x1588>
   11cbc:	ldr	r7, [sl]
   11cc0:	cmp	r7, #0
   11cc4:	beq	12918 <__errno_location@plt+0x155c>
   11cc8:	add	r0, r4, #36	; 0x24
   11ccc:	mov	r9, #0
   11cd0:	vmov.i32	q4, #0	; 0x00000000
   11cd4:	str	r0, [sp, #36]	; 0x24
   11cd8:	str	sl, [sp, #44]	; 0x2c
   11cdc:	ldr	r0, [r7, #8]
   11ce0:	ldr	r8, [r7]
   11ce4:	str	r0, [sp, #52]	; 0x34
   11ce8:	ldr	r0, [r8, #12]
   11cec:	ldrb	r1, [r0]
   11cf0:	sub	r1, r1, #65	; 0x41
   11cf4:	cmp	r1, #25
   11cf8:	bhi	128b8 <__errno_location@plt+0x14fc>
   11cfc:	add	r2, pc, #0
   11d00:	ldr	pc, [r2, r1, lsl #2]
   11d04:	andeq	r1, r1, ip, ror #26
   11d08:			; <UNDEFINED> instruction: 0x000128b8
   11d0c:	andeq	r1, r1, ip, ror #30
   11d10:			; <UNDEFINED> instruction: 0x000128b8
   11d14:			; <UNDEFINED> instruction: 0x000128b8
   11d18:	andeq	r1, r1, ip, asr #28
   11d1c:			; <UNDEFINED> instruction: 0x000128b8
   11d20:			; <UNDEFINED> instruction: 0x000128b8
   11d24:			; <UNDEFINED> instruction: 0x000128b8
   11d28:			; <UNDEFINED> instruction: 0x000128b8
   11d2c:	andeq	r2, r1, r0, asr #32
   11d30:			; <UNDEFINED> instruction: 0x000128b8
   11d34:			; <UNDEFINED> instruction: 0x000128b8
   11d38:			; <UNDEFINED> instruction: 0x000128b8
   11d3c:			; <UNDEFINED> instruction: 0x000128b8
   11d40:			; <UNDEFINED> instruction: 0x000128b8
   11d44:			; <UNDEFINED> instruction: 0x000128b8
   11d48:			; <UNDEFINED> instruction: 0x000128b8
   11d4c:	andeq	r2, r1, r0, lsr #2
   11d50:			; <UNDEFINED> instruction: 0x000128b8
   11d54:			; <UNDEFINED> instruction: 0x000128b8
   11d58:			; <UNDEFINED> instruction: 0x000128b8
   11d5c:			; <UNDEFINED> instruction: 0x000128b8
   11d60:			; <UNDEFINED> instruction: 0x000128b8
   11d64:			; <UNDEFINED> instruction: 0x000128b8
   11d68:	andeq	r1, r1, ip, ror #28
   11d6c:	ldr	r0, [r8, #36]	; 0x24
   11d70:	cmp	r0, #2
   11d74:	bne	121d8 <__errno_location@plt+0xe1c>
   11d78:	ldr	r0, [r8, #16]
   11d7c:	cmp	r0, #5
   11d80:	bne	121e0 <__errno_location@plt+0xe24>
   11d84:	movw	r0, #40692	; 0x9ef4
   11d88:	str	r7, [sp, #48]	; 0x30
   11d8c:	ldr	r7, [r8, #20]
   11d90:	ldr	r5, [r8, #24]
   11d94:	mov	r1, #80	; 0x50
   11d98:	movt	r0, #2
   11d9c:	ldrb	r6, [r0]
   11da0:	mov	r0, #1
   11da4:	bl	111a0 <calloc@plt>
   11da8:	mov	r9, r0
   11dac:	cmp	r6, #0
   11db0:	beq	12608 <__errno_location@plt+0x124c>
   11db4:	cmp	r9, #0
   11db8:	beq	12940 <__errno_location@plt+0x1584>
   11dbc:	str	r4, [r9, #12]
   11dc0:	bl	11314 <rb_new_rawbuffer@plt>
   11dc4:	str	r0, [r9, #16]
   11dc8:	bl	11314 <rb_new_rawbuffer@plt>
   11dcc:	str	r0, [r9, #20]
   11dd0:	mvn	r0, #0
   11dd4:	str	r0, [r9, #24]
   11dd8:	mov	r0, r7
   11ddc:	str	r7, [r9, #28]
   11de0:	str	r5, [r9, #32]
   11de4:	bl	111ac <rb_set_nb@plt>
   11de8:	mov	r0, r5
   11dec:	bl	111ac <rb_set_nb@plt>
   11df0:	ldr	r0, [r8, #12]
   11df4:	movw	r1, #19923	; 0x4dd3
   11df8:	movw	r6, #16692	; 0x4134
   11dfc:	mov	r3, #0
   11e00:	movt	r1, #4194	; 0x1062
   11e04:	movt	r6, #2
   11e08:	ldr	r0, [r0, #1]
   11e0c:	umull	r1, r2, r0, r1
   11e10:	str	r0, [r9, #24]
   11e14:	str	r9, [r9]
   11e18:	str	r3, [r9, #4]
   11e1c:	lsr	r1, r2, #7
   11e20:	mov	r2, #2000	; 0x7d0
   11e24:	mls	r0, r1, r2, r0
   11e28:	mov	r1, r6
   11e2c:	add	r0, r0, r0, lsl #1
   11e30:	ldr	r2, [r1, r0, lsl #2]!
   11e34:	cmp	r2, #0
   11e38:	str	r2, [r9, #8]
   11e3c:	beq	12778 <__errno_location@plt+0x13bc>
   11e40:	add	r2, r2, #4
   11e44:	str	r9, [r2]
   11e48:	b	12788 <__errno_location@plt+0x13cc>
   11e4c:	ldr	r1, [r8, #16]
   11e50:	cmp	r1, #5
   11e54:	bne	1217c <__errno_location@plt+0xdc0>
   11e58:	ldr	r0, [r0, #1]
   11e5c:	movw	r1, #40692	; 0x9ef4
   11e60:	movt	r1, #2
   11e64:	str	r0, [r1, #12]
   11e68:	b	128b8 <__errno_location@plt+0x14fc>
   11e6c:	ldr	r0, [r8, #36]	; 0x24
   11e70:	cmp	r0, #2
   11e74:	bne	121ac <__errno_location@plt+0xdf0>
   11e78:	ldr	r0, [r8, #16]
   11e7c:	cmp	r0, #6
   11e80:	bcc	121b4 <__errno_location@plt+0xdf8>
   11e84:	ldr	r6, [r8, #20]
   11e88:	ldr	r5, [r8, #24]
   11e8c:	mov	r0, #1
   11e90:	mov	r1, #80	; 0x50
   11e94:	str	r7, [sp, #48]	; 0x30
   11e98:	bl	111a0 <calloc@plt>
   11e9c:	cmp	r0, #0
   11ea0:	beq	12940 <__errno_location@plt+0x1584>
   11ea4:	mov	r7, r0
   11ea8:	str	r4, [r0, #12]
   11eac:	bl	11314 <rb_new_rawbuffer@plt>
   11eb0:	str	r0, [r7, #16]
   11eb4:	bl	11314 <rb_new_rawbuffer@plt>
   11eb8:	str	r0, [r7, #20]
   11ebc:	mvn	r0, #0
   11ec0:	str	r0, [r7, #24]
   11ec4:	mov	r0, r6
   11ec8:	str	r6, [r7, #28]
   11ecc:	str	r5, [r7, #32]
   11ed0:	bl	111ac <rb_set_nb@plt>
   11ed4:	mov	r0, r5
   11ed8:	bl	111ac <rb_set_nb@plt>
   11edc:	ldr	r0, [r7, #28]
   11ee0:	bl	110d4 <rb_get_type@plt>
   11ee4:	cmp	r0, #64	; 0x40
   11ee8:	bne	11efc <__errno_location@plt+0xb40>
   11eec:	ldr	r0, [r7, #28]
   11ef0:	mov	r1, #4
   11ef4:	bl	11224 <rb_set_type@plt>
   11ef8:	ldr	r5, [r7, #32]
   11efc:	mov	r0, r5
   11f00:	bl	110d4 <rb_get_type@plt>
   11f04:	cmp	r0, #64	; 0x40
   11f08:	bne	11f18 <__errno_location@plt+0xb5c>
   11f0c:	mov	r0, r5
   11f10:	mov	r1, #4
   11f14:	bl	11224 <rb_set_type@plt>
   11f18:	ldr	r5, [r8, #12]
   11f1c:	movw	r1, #19923	; 0x4dd3
   11f20:	movw	r6, #16692	; 0x4134
   11f24:	movt	r1, #4194	; 0x1062
   11f28:	movt	r6, #2
   11f2c:	ldr	r0, [r5, #1]
   11f30:	umull	r1, r2, r0, r1
   11f34:	str	r0, [r7, #24]
   11f38:	lsr	r1, r2, #7
   11f3c:	mov	r2, #2000	; 0x7d0
   11f40:	mls	r0, r1, r2, r0
   11f44:	mov	r1, r6
   11f48:	add	r0, r0, r0, lsl #1
   11f4c:	ldr	r2, [r1, r0, lsl #2]!
   11f50:	stm	r7, {r7, r9}
   11f54:	cmp	r2, #0
   11f58:	str	r2, [r7, #8]
   11f5c:	beq	124e8 <__errno_location@plt+0x112c>
   11f60:	add	r2, r2, #4
   11f64:	str	r7, [r2]
   11f68:	b	124f8 <__errno_location@plt+0x113c>
   11f6c:	ldr	r0, [r8, #16]
   11f70:	cmp	r0, #5
   11f74:	bne	12204 <__errno_location@plt+0xe48>
   11f78:	movw	r0, #40692	; 0x9ef4
   11f7c:	ldr	r9, [r8, #20]
   11f80:	ldr	r6, [r8, #24]
   11f84:	mov	r1, #80	; 0x50
   11f88:	str	r7, [sp, #48]	; 0x30
   11f8c:	movt	r0, #2
   11f90:	ldrb	r5, [r0]
   11f94:	mov	r0, #1
   11f98:	bl	111a0 <calloc@plt>
   11f9c:	mov	r7, r0
   11fa0:	cmp	r5, #0
   11fa4:	beq	123cc <__errno_location@plt+0x1010>
   11fa8:	cmp	r7, #0
   11fac:	beq	12940 <__errno_location@plt+0x1584>
   11fb0:	str	r4, [r7, #12]
   11fb4:	bl	11314 <rb_new_rawbuffer@plt>
   11fb8:	str	r0, [r7, #16]
   11fbc:	bl	11314 <rb_new_rawbuffer@plt>
   11fc0:	str	r0, [r7, #20]
   11fc4:	mvn	r0, #0
   11fc8:	str	r0, [r7, #24]
   11fcc:	mov	r0, r9
   11fd0:	str	r9, [r7, #28]
   11fd4:	str	r6, [r7, #32]
   11fd8:	bl	111ac <rb_set_nb@plt>
   11fdc:	mov	r0, r6
   11fe0:	bl	111ac <rb_set_nb@plt>
   11fe4:	ldr	r0, [r8, #12]
   11fe8:	movw	r1, #19923	; 0x4dd3
   11fec:	movw	r6, #16692	; 0x4134
   11ff0:	mov	r3, #0
   11ff4:	movt	r1, #4194	; 0x1062
   11ff8:	movt	r6, #2
   11ffc:	ldr	r0, [r0, #1]
   12000:	umull	r1, r2, r0, r1
   12004:	str	r0, [r7, #24]
   12008:	str	r7, [r7]
   1200c:	str	r3, [r7, #4]
   12010:	lsr	r1, r2, #7
   12014:	mov	r2, #2000	; 0x7d0
   12018:	mls	r0, r1, r2, r0
   1201c:	mov	r1, r6
   12020:	add	r0, r0, r0, lsl #1
   12024:	ldr	r2, [r1, r0, lsl #2]!
   12028:	cmp	r2, #0
   1202c:	str	r2, [r7, #8]
   12030:	beq	12464 <__errno_location@plt+0x10a8>
   12034:	add	r2, r2, #4
   12038:	str	r7, [r2]
   1203c:	b	12474 <__errno_location@plt+0x10b8>
   12040:	movw	r1, #40692	; 0x9ef4
   12044:	movt	r1, #2
   12048:	ldrb	r1, [r1]
   1204c:	cmp	r1, #0
   12050:	beq	12234 <__errno_location@plt+0xe78>
   12054:	add	r5, r0, #2
   12058:	mov	r0, r5
   1205c:	bl	11230 <strlen@plt>
   12060:	add	r0, r5, r0
   12064:	add	r6, r0, #1
   12068:	mov	r0, r6
   1206c:	bl	11230 <strlen@plt>
   12070:	add	r1, r6, r0
   12074:	str	r0, [sp, #40]	; 0x28
   12078:	str	r7, [sp, #48]	; 0x30
   1207c:	add	r7, r1, #1
   12080:	mov	r0, r7
   12084:	bl	11230 <strlen@plt>
   12088:	mov	sl, r0
   1208c:	add	r0, r7, r0
   12090:	add	r9, r0, #1
   12094:	mov	r0, r9
   12098:	bl	11230 <strlen@plt>
   1209c:	cmp	r0, #0
   120a0:	moveq	r9, r0
   120a4:	ldr	r0, [sp, #40]	; 0x28
   120a8:	cmp	sl, #0
   120ac:	moveq	r7, sl
   120b0:	ldr	sl, [sp, #44]	; 0x2c
   120b4:	mov	r3, r9
   120b8:	mov	r9, #0
   120bc:	mov	r2, r7
   120c0:	ldr	r7, [sp, #48]	; 0x30
   120c4:	cmp	r0, #0
   120c8:	mov	r0, r5
   120cc:	moveq	r6, r5
   120d0:	mov	r1, r6
   120d4:	bl	113a4 <rb_setup_ssl_server@plt>
   120d8:	cmp	r0, #0
   120dc:	bne	128b8 <__errno_location@plt+0x14fc>
   120e0:	mov	r0, #1
   120e4:	mov	r1, #40	; 0x28
   120e8:	bl	111a0 <calloc@plt>
   120ec:	cmp	r0, #0
   120f0:	beq	12940 <__errno_location@plt+0x1584>
   120f4:	mov	r5, r0
   120f8:	mov	r0, #1
   120fc:	mov	r1, #1
   12100:	bl	111a0 <calloc@plt>
   12104:	cmp	r0, #0
   12108:	beq	12940 <__errno_location@plt+0x1584>
   1210c:	mov	r1, #1
   12110:	str	r0, [r5, #12]
   12114:	str	r1, [r5, #16]
   12118:	mov	r1, #73	; 0x49
   1211c:	b	1287c <__errno_location@plt+0x14c0>
   12120:	ldr	r1, [r0, #1]
   12124:	movw	r2, #19923	; 0x4dd3
   12128:	movt	r2, #4194	; 0x1062
   1212c:	umull	r2, r3, r1, r2
   12130:	lsr	r2, r3, #7
   12134:	mov	r3, #2000	; 0x7d0
   12138:	mls	r2, r2, r3, r1
   1213c:	movw	r3, #16692	; 0x4134
   12140:	add	r2, r2, r2, lsl #1
   12144:	movt	r3, #2
   12148:	ldr	r2, [r3, r2, lsl #2]
   1214c:	cmp	r2, #0
   12150:	beq	128b8 <__errno_location@plt+0x14fc>
   12154:	ldr	r5, [r2]
   12158:	ldr	r3, [r5, #24]
   1215c:	cmp	r3, r1
   12160:	ldrbeq	r3, [r5, #72]	; 0x48
   12164:	tsteq	r3, #8
   12168:	beq	122e8 <__errno_location@plt+0xf2c>
   1216c:	ldr	r2, [r2, #8]
   12170:	cmp	r2, #0
   12174:	bne	12154 <__errno_location@plt+0xd98>
   12178:	b	128b8 <__errno_location@plt+0x14fc>
   1217c:	ldr	r0, [r8, #36]	; 0x24
   12180:	cmp	r0, #1
   12184:	blt	128b8 <__errno_location@plt+0x14fc>
   12188:	add	r5, r8, #20
   1218c:	mov	r6, #0
   12190:	ldr	r0, [r5, r6, lsl #2]
   12194:	bl	11254 <rb_close@plt>
   12198:	ldr	r0, [r8, #36]	; 0x24
   1219c:	add	r6, r6, #1
   121a0:	cmp	r6, r0
   121a4:	blt	12190 <__errno_location@plt+0xdd4>
   121a8:	b	128b8 <__errno_location@plt+0x14fc>
   121ac:	cmp	r0, #1
   121b0:	blt	128b8 <__errno_location@plt+0x14fc>
   121b4:	add	r5, r8, #20
   121b8:	mov	r6, #0
   121bc:	ldr	r0, [r5, r6, lsl #2]
   121c0:	bl	11254 <rb_close@plt>
   121c4:	ldr	r0, [r8, #36]	; 0x24
   121c8:	add	r6, r6, #1
   121cc:	cmp	r6, r0
   121d0:	blt	121bc <__errno_location@plt+0xe00>
   121d4:	b	128b8 <__errno_location@plt+0x14fc>
   121d8:	cmp	r0, #1
   121dc:	blt	128b8 <__errno_location@plt+0x14fc>
   121e0:	add	r5, r8, #20
   121e4:	mov	r6, #0
   121e8:	ldr	r0, [r5, r6, lsl #2]
   121ec:	bl	11254 <rb_close@plt>
   121f0:	ldr	r0, [r8, #36]	; 0x24
   121f4:	add	r6, r6, #1
   121f8:	cmp	r6, r0
   121fc:	blt	121e8 <__errno_location@plt+0xe2c>
   12200:	b	128b8 <__errno_location@plt+0x14fc>
   12204:	ldr	r0, [r8, #36]	; 0x24
   12208:	cmp	r0, #1
   1220c:	blt	128b8 <__errno_location@plt+0x14fc>
   12210:	add	r5, r8, #20
   12214:	mov	r6, #0
   12218:	ldr	r0, [r5, r6, lsl #2]
   1221c:	bl	11254 <rb_close@plt>
   12220:	ldr	r0, [r8, #36]	; 0x24
   12224:	add	r6, r6, #1
   12228:	cmp	r6, r0
   1222c:	blt	12218 <__errno_location@plt+0xe5c>
   12230:	b	128b8 <__errno_location@plt+0x14fc>
   12234:	cmp	r8, #0
   12238:	beq	126dc <__errno_location@plt+0x1320>
   1223c:	str	r7, [sp, #48]	; 0x30
   12240:	ldr	r7, [r8, #20]
   12244:	ldr	r6, [r8, #24]
   12248:	mov	r0, #1
   1224c:	mov	r1, #80	; 0x50
   12250:	bl	111a0 <calloc@plt>
   12254:	cmp	r0, #0
   12258:	beq	12940 <__errno_location@plt+0x1584>
   1225c:	mov	r5, r0
   12260:	str	r4, [r0, #12]
   12264:	bl	11314 <rb_new_rawbuffer@plt>
   12268:	str	r0, [r5, #16]
   1226c:	bl	11314 <rb_new_rawbuffer@plt>
   12270:	str	r0, [r5, #20]
   12274:	mvn	r0, #0
   12278:	str	r0, [r5, #24]
   1227c:	mov	r0, r7
   12280:	str	r7, [r5, #28]
   12284:	str	r6, [r5, #32]
   12288:	bl	111ac <rb_set_nb@plt>
   1228c:	mov	r0, r6
   12290:	bl	111ac <rb_set_nb@plt>
   12294:	ldr	r0, [r8, #12]
   12298:	movw	r1, #19923	; 0x4dd3
   1229c:	movw	r7, #16692	; 0x4134
   122a0:	movt	r1, #4194	; 0x1062
   122a4:	movt	r7, #2
   122a8:	ldr	r0, [r0, #1]
   122ac:	umull	r1, r2, r0, r1
   122b0:	str	r0, [r5, #24]
   122b4:	lsr	r1, r2, #7
   122b8:	mov	r2, #2000	; 0x7d0
   122bc:	mls	r0, r1, r2, r0
   122c0:	mov	r1, r7
   122c4:	add	r0, r0, r0, lsl #1
   122c8:	ldr	r2, [r1, r0, lsl #2]!
   122cc:	stm	r5, {r5, r9}
   122d0:	cmp	r2, #0
   122d4:	str	r2, [r5, #8]
   122d8:	beq	126a0 <__errno_location@plt+0x12e4>
   122dc:	add	r2, r2, #4
   122e0:	str	r5, [r2]
   122e4:	b	126b0 <__errno_location@plt+0x12f4>
   122e8:	ldr	ip, [r5, #56]!	; 0x38
   122ec:	str	r7, [sp, #48]	; 0x30
   122f0:	mov	r6, r5
   122f4:	ldr	r3, [r5, #8]
   122f8:	ldr	r7, [r5, #12]
   122fc:	ldr	lr, [r5, #4]
   12300:	ldr	sl, [r5, #-12]
   12304:	ldr	r9, [r6, #-16]!
   12308:	ldmdb	r5, {r1, r2}
   1230c:	stm	sp, {r3, r7}
   12310:	add	r3, sp, #8
   12314:	add	r7, sp, #56	; 0x38
   12318:	stm	r3, {r1, r2, ip, lr}
   1231c:	movw	r2, #15648	; 0x3d20
   12320:	add	r3, r0, #5
   12324:	mov	r0, r7
   12328:	mov	r1, #512	; 0x200
   1232c:	str	r9, [sp, #24]
   12330:	str	sl, [sp, #28]
   12334:	movt	r2, #1
   12338:	bl	11368 <snprintf@plt>
   1233c:	mov	r0, r7
   12340:	vst1.64	{d8-d9}, [r5]
   12344:	vst1.64	{d8-d9}, [r6]
   12348:	bl	11230 <strlen@plt>
   1234c:	mov	r6, r0
   12350:	mov	r0, #1
   12354:	mov	r1, #40	; 0x28
   12358:	bl	111a0 <calloc@plt>
   1235c:	cmp	r0, #0
   12360:	beq	12940 <__errno_location@plt+0x1584>
   12364:	add	r6, r6, #1
   12368:	mov	r5, r0
   1236c:	mov	r0, #1
   12370:	mov	r1, r6
   12374:	bl	111a0 <calloc@plt>
   12378:	cmp	r0, #0
   1237c:	beq	12940 <__errno_location@plt+0x1584>
   12380:	add	r1, sp, #56	; 0x38
   12384:	mov	r2, r6
   12388:	str	r0, [r5, #12]
   1238c:	str	r6, [r5, #16]
   12390:	bl	11248 <memcpy@plt>
   12394:	ldr	r0, [r4, #40]	; 0x28
   12398:	ldr	sl, [sp, #44]	; 0x2c
   1239c:	ldr	r7, [sp, #48]	; 0x30
   123a0:	mov	r9, #0
   123a4:	str	r5, [r5]
   123a8:	cmp	r0, #0
   123ac:	str	r0, [r5, #4]
   123b0:	bne	12894 <__errno_location@plt+0x14d8>
   123b4:	ldr	r0, [sp, #36]	; 0x24
   123b8:	ldr	r0, [r0]
   123bc:	cmp	r0, #0
   123c0:	bne	1289c <__errno_location@plt+0x14e0>
   123c4:	ldr	r0, [sp, #36]	; 0x24
   123c8:	b	12898 <__errno_location@plt+0x14dc>
   123cc:	cmp	r7, #0
   123d0:	beq	12940 <__errno_location@plt+0x1584>
   123d4:	str	r4, [r7, #12]
   123d8:	bl	11314 <rb_new_rawbuffer@plt>
   123dc:	str	r0, [r7, #16]
   123e0:	bl	11314 <rb_new_rawbuffer@plt>
   123e4:	str	r0, [r7, #20]
   123e8:	mvn	r0, #0
   123ec:	str	r0, [r7, #24]
   123f0:	mov	r0, r9
   123f4:	str	r9, [r7, #28]
   123f8:	str	r6, [r7, #32]
   123fc:	bl	111ac <rb_set_nb@plt>
   12400:	mov	r0, r6
   12404:	bl	111ac <rb_set_nb@plt>
   12408:	ldr	r0, [r8, #12]
   1240c:	movw	r1, #19923	; 0x4dd3
   12410:	movw	r6, #16692	; 0x4134
   12414:	mov	r9, #0
   12418:	movt	r1, #4194	; 0x1062
   1241c:	movt	r6, #2
   12420:	ldr	r0, [r0, #1]
   12424:	umull	r1, r2, r0, r1
   12428:	str	r0, [r7, #24]
   1242c:	str	r7, [r7]
   12430:	str	r9, [r7, #4]
   12434:	lsr	r1, r2, #7
   12438:	mov	r2, #2000	; 0x7d0
   1243c:	mls	r0, r1, r2, r0
   12440:	mov	r1, r6
   12444:	add	r0, r0, r0, lsl #1
   12448:	ldr	r2, [r1, r0, lsl #2]!
   1244c:	cmp	r2, #0
   12450:	str	r2, [r7, #8]
   12454:	beq	1270c <__errno_location@plt+0x1350>
   12458:	add	r2, r2, #4
   1245c:	str	r7, [r2]
   12460:	b	1271c <__errno_location@plt+0x1360>
   12464:	add	r2, r6, r0, lsl #2
   12468:	ldr	r3, [r2, #4]!
   1246c:	cmp	r3, #0
   12470:	streq	r7, [r2]
   12474:	str	r7, [r1]
   12478:	add	r0, r6, r0, lsl #2
   1247c:	ldr	r1, [r0, #8]
   12480:	add	r1, r1, #1
   12484:	str	r1, [r0, #8]
   12488:	mov	r0, #1
   1248c:	strb	r0, [r7, #72]	; 0x48
   12490:	mov	r0, r9
   12494:	bl	110d4 <rb_get_type@plt>
   12498:	cmp	r0, #64	; 0x40
   1249c:	bne	124ac <__errno_location@plt+0x10f0>
   124a0:	ldr	r0, [r7, #28]
   124a4:	mov	r1, #4
   124a8:	bl	11224 <rb_set_type@plt>
   124ac:	ldr	r0, [r7, #32]
   124b0:	bl	110d4 <rb_get_type@plt>
   124b4:	cmp	r0, #64	; 0x40
   124b8:	mov	r9, #0
   124bc:	bne	124cc <__errno_location@plt+0x1110>
   124c0:	ldr	r0, [r7, #32]
   124c4:	mov	r1, #4
   124c8:	bl	11224 <rb_set_type@plt>
   124cc:	ldr	r0, [r8, #20]
   124d0:	movw	r1, #14376	; 0x3828
   124d4:	mov	r2, r7
   124d8:	mov	r3, #10
   124dc:	movt	r1, #1
   124e0:	bl	112fc <rb_ssl_start_connected@plt>
   124e4:	b	12600 <__errno_location@plt+0x1244>
   124e8:	add	r2, r6, r0, lsl #2
   124ec:	ldr	r3, [r2, #4]!
   124f0:	cmp	r3, #0
   124f4:	streq	r7, [r2]
   124f8:	str	r7, [r1]
   124fc:	add	r0, r6, r0, lsl #2
   12500:	mov	sl, r5
   12504:	ldr	r1, [r0, #8]
   12508:	add	r1, r1, #1
   1250c:	str	r1, [r0, #8]
   12510:	ldrb	r0, [r7, #72]	; 0x48
   12514:	mov	r1, #112	; 0x70
   12518:	ldrb	r5, [r5, #5]
   1251c:	ldr	r9, [r8, #16]
   12520:	orr	r0, r0, #2
   12524:	strb	r0, [r7, #72]	; 0x48
   12528:	mov	r0, #1
   1252c:	bl	111a0 <calloc@plt>
   12530:	cmp	r0, #0
   12534:	beq	12940 <__errno_location@plt+0x1584>
   12538:	mov	r6, r0
   1253c:	str	r0, [r7, #76]	; 0x4c
   12540:	movw	r0, #15000	; 0x3a98
   12544:	movw	r1, #15673	; 0x3d39
   12548:	mov	r2, #56	; 0x38
   1254c:	sub	r9, r9, #6
   12550:	movt	r0, #1
   12554:	movt	r1, #1
   12558:	str	r0, [r6, #32]
   1255c:	movw	r0, #15032	; 0x3ab8
   12560:	movt	r0, #1
   12564:	str	r0, [r6, #36]	; 0x24
   12568:	mov	r0, #1
   1256c:	str	r0, [r6, #44]	; 0x2c
   12570:	mov	r0, r6
   12574:	bl	1132c <inflateInit_@plt>
   12578:	mov	r0, #0
   1257c:	cmp	r5, #9
   12580:	movw	r2, #15673	; 0x3d39
   12584:	mov	r3, #56	; 0x38
   12588:	str	r0, [r6, #64]	; 0x40
   1258c:	str	r0, [r6, #76]	; 0x4c
   12590:	movw	r0, #15000	; 0x3a98
   12594:	movwhi	r5, #255	; 0xff
   12598:	movt	r2, #1
   1259c:	movt	r0, #1
   125a0:	mov	r1, r5
   125a4:	str	r0, [r6, #88]	; 0x58
   125a8:	movw	r0, #15032	; 0x3ab8
   125ac:	movt	r0, #1
   125b0:	str	r0, [r6, #92]	; 0x5c
   125b4:	mov	r0, #1
   125b8:	str	r0, [r6, #100]	; 0x64
   125bc:	ldr	r0, [r7, #76]	; 0x4c
   125c0:	add	r0, r0, #56	; 0x38
   125c4:	bl	11194 <deflateInit_@plt>
   125c8:	cmp	r9, #0
   125cc:	beq	125e0 <__errno_location@plt+0x1224>
   125d0:	add	r1, sl, #6
   125d4:	mov	r0, r7
   125d8:	mov	r2, r9
   125dc:	bl	13644 <__errno_location@plt+0x2288>
   125e0:	ldr	r0, [r7, #28]
   125e4:	mov	r1, r7
   125e8:	bl	130a0 <__errno_location@plt+0x1ce4>
   125ec:	ldr	r0, [r7, #32]
   125f0:	mov	r1, r7
   125f4:	bl	13268 <__errno_location@plt+0x1eac>
   125f8:	ldr	sl, [sp, #44]	; 0x2c
   125fc:	mov	r9, #0
   12600:	ldr	r7, [sp, #48]	; 0x30
   12604:	b	128b8 <__errno_location@plt+0x14fc>
   12608:	cmp	r9, #0
   1260c:	beq	12940 <__errno_location@plt+0x1584>
   12610:	str	r4, [r9, #12]
   12614:	bl	11314 <rb_new_rawbuffer@plt>
   12618:	str	r0, [r9, #16]
   1261c:	bl	11314 <rb_new_rawbuffer@plt>
   12620:	str	r0, [r9, #20]
   12624:	mvn	r0, #0
   12628:	str	r0, [r9, #24]
   1262c:	mov	r0, r7
   12630:	str	r7, [r9, #28]
   12634:	str	r5, [r9, #32]
   12638:	bl	111ac <rb_set_nb@plt>
   1263c:	mov	r0, r5
   12640:	bl	111ac <rb_set_nb@plt>
   12644:	ldr	r0, [r8, #12]
   12648:	movw	r1, #19923	; 0x4dd3
   1264c:	movw	r7, #16692	; 0x4134
   12650:	mov	r3, #0
   12654:	movt	r1, #4194	; 0x1062
   12658:	movt	r7, #2
   1265c:	ldr	r0, [r0, #1]
   12660:	umull	r1, r2, r0, r1
   12664:	str	r0, [r9, #24]
   12668:	str	r9, [r9]
   1266c:	str	r3, [r9, #4]
   12670:	lsr	r1, r2, #7
   12674:	mov	r2, #2000	; 0x7d0
   12678:	mls	r0, r1, r2, r0
   1267c:	mov	r1, r7
   12680:	add	r0, r0, r0, lsl #1
   12684:	ldr	r2, [r1, r0, lsl #2]!
   12688:	cmp	r2, #0
   1268c:	str	r2, [r9, #8]
   12690:	beq	12800 <__errno_location@plt+0x1444>
   12694:	add	r2, r2, #4
   12698:	str	r9, [r2]
   1269c:	b	12810 <__errno_location@plt+0x1454>
   126a0:	add	r2, r7, r0, lsl #2
   126a4:	ldr	r3, [r2, #4]!
   126a8:	cmp	r3, #0
   126ac:	streq	r5, [r2]
   126b0:	str	r5, [r1]
   126b4:	add	r0, r7, r0, lsl #2
   126b8:	movw	r2, #15680	; 0x3d40
   126bc:	ldr	r1, [r0, #8]
   126c0:	movt	r2, #1
   126c4:	add	r1, r1, #1
   126c8:	str	r1, [r0, #8]
   126cc:	mov	r0, r5
   126d0:	mov	r1, #1
   126d4:	bl	1294c <__errno_location@plt+0x1590>
   126d8:	ldr	r7, [sp, #48]	; 0x30
   126dc:	mov	r0, #1
   126e0:	mov	r1, #40	; 0x28
   126e4:	bl	111a0 <calloc@plt>
   126e8:	cmp	r0, #0
   126ec:	beq	12940 <__errno_location@plt+0x1584>
   126f0:	mov	r5, r0
   126f4:	mov	r0, #1
   126f8:	mov	r1, #1
   126fc:	bl	111a0 <calloc@plt>
   12700:	cmp	r0, #0
   12704:	bne	1286c <__errno_location@plt+0x14b0>
   12708:	b	12940 <__errno_location@plt+0x1584>
   1270c:	add	r2, r6, r0, lsl #2
   12710:	ldr	r3, [r2, #4]!
   12714:	cmp	r3, #0
   12718:	streq	r7, [r2]
   1271c:	str	r7, [r1]
   12720:	add	r0, r6, r0, lsl #2
   12724:	movw	r2, #15680	; 0x3d40
   12728:	ldr	r1, [r0, #8]
   1272c:	movt	r2, #1
   12730:	add	r1, r1, #1
   12734:	str	r1, [r0, #8]
   12738:	mov	r0, r7
   1273c:	mov	r1, #1
   12740:	bl	1294c <__errno_location@plt+0x1590>
   12744:	mov	r0, #1
   12748:	mov	r1, #40	; 0x28
   1274c:	bl	111a0 <calloc@plt>
   12750:	cmp	r0, #0
   12754:	beq	12940 <__errno_location@plt+0x1584>
   12758:	mov	r5, r0
   1275c:	mov	r0, #1
   12760:	mov	r1, #1
   12764:	bl	111a0 <calloc@plt>
   12768:	ldr	r7, [sp, #48]	; 0x30
   1276c:	cmp	r0, #0
   12770:	bne	1286c <__errno_location@plt+0x14b0>
   12774:	b	12940 <__errno_location@plt+0x1584>
   12778:	add	r2, r6, r0, lsl #2
   1277c:	ldr	r3, [r2, #4]!
   12780:	cmp	r3, #0
   12784:	streq	r9, [r2]
   12788:	str	r9, [r1]
   1278c:	add	r0, r6, r0, lsl #2
   12790:	ldr	r1, [r0, #8]
   12794:	add	r1, r1, #1
   12798:	str	r1, [r0, #8]
   1279c:	mov	r0, #1
   127a0:	strb	r0, [r9, #72]	; 0x48
   127a4:	mov	r0, r7
   127a8:	bl	110d4 <rb_get_type@plt>
   127ac:	tst	r0, #64	; 0x40
   127b0:	beq	127c0 <__errno_location@plt+0x1404>
   127b4:	ldr	r0, [r9, #28]
   127b8:	mov	r1, #4
   127bc:	bl	11224 <rb_set_type@plt>
   127c0:	ldr	r0, [r9, #32]
   127c4:	bl	110d4 <rb_get_type@plt>
   127c8:	ldr	r7, [sp, #48]	; 0x30
   127cc:	cmp	r0, #64	; 0x40
   127d0:	bne	127e0 <__errno_location@plt+0x1424>
   127d4:	ldr	r0, [r9, #32]
   127d8:	mov	r1, #4
   127dc:	bl	11224 <rb_set_type@plt>
   127e0:	ldr	r0, [r8, #20]
   127e4:	movw	r1, #11728	; 0x2dd0
   127e8:	mov	r2, r9
   127ec:	mov	r3, #10
   127f0:	movt	r1, #1
   127f4:	bl	11344 <rb_ssl_start_accepted@plt>
   127f8:	mov	r9, #0
   127fc:	b	128b8 <__errno_location@plt+0x14fc>
   12800:	add	r2, r7, r0, lsl #2
   12804:	ldr	r3, [r2, #4]!
   12808:	cmp	r3, #0
   1280c:	streq	r9, [r2]
   12810:	str	r9, [r1]
   12814:	add	r0, r7, r0, lsl #2
   12818:	movw	r2, #15680	; 0x3d40
   1281c:	ldr	r1, [r0, #8]
   12820:	movt	r2, #1
   12824:	add	r1, r1, #1
   12828:	str	r1, [r0, #8]
   1282c:	mov	r0, r9
   12830:	mov	r1, #1
   12834:	bl	1294c <__errno_location@plt+0x1590>
   12838:	mov	r0, #1
   1283c:	mov	r1, #40	; 0x28
   12840:	bl	111a0 <calloc@plt>
   12844:	cmp	r0, #0
   12848:	beq	12940 <__errno_location@plt+0x1584>
   1284c:	mov	r5, r0
   12850:	mov	r0, #1
   12854:	mov	r1, #1
   12858:	bl	111a0 <calloc@plt>
   1285c:	ldr	r7, [sp, #48]	; 0x30
   12860:	cmp	r0, #0
   12864:	mov	r9, #0
   12868:	beq	12940 <__errno_location@plt+0x1584>
   1286c:	mov	r1, #1
   12870:	str	r0, [r5, #12]
   12874:	str	r1, [r5, #16]
   12878:	mov	r1, #78	; 0x4e
   1287c:	strb	r1, [r0]
   12880:	ldr	r0, [r4, #40]	; 0x28
   12884:	str	r5, [r5]
   12888:	cmp	r0, #0
   1288c:	str	r0, [r5, #4]
   12890:	beq	123b4 <__errno_location@plt+0xff8>
   12894:	add	r0, r0, #8
   12898:	str	r5, [r0]
   1289c:	str	r5, [r4, #40]	; 0x28
   128a0:	ldr	r1, [r4, #44]	; 0x2c
   128a4:	ldr	r0, [r4, #16]
   128a8:	add	r1, r1, #1
   128ac:	str	r1, [r4, #44]	; 0x2c
   128b0:	mov	r1, r4
   128b4:	bl	12c78 <__errno_location@plt+0x18bc>
   128b8:	ldr	r0, [r7, #8]
   128bc:	ldr	r1, [r7, #4]
   128c0:	mov	r2, sl
   128c4:	cmp	r0, #0
   128c8:	streq	r1, [r4, #28]
   128cc:	strne	r1, [r0, #4]
   128d0:	ldrne	r1, [r7, #4]
   128d4:	cmp	r1, #0
   128d8:	addne	r2, r1, #8
   128dc:	str	r0, [r2]
   128e0:	str	r9, [r7, #4]
   128e4:	str	r9, [r7, #8]
   128e8:	ldr	r0, [r4, #32]
   128ec:	sub	r0, r0, #1
   128f0:	str	r0, [r4, #32]
   128f4:	ldr	r0, [r8, #12]
   128f8:	cmp	r0, #0
   128fc:	beq	12904 <__errno_location@plt+0x1548>
   12900:	bl	111f4 <free@plt>
   12904:	mov	r0, r8
   12908:	bl	111f4 <free@plt>
   1290c:	ldr	r7, [sp, #52]	; 0x34
   12910:	cmp	r7, #0
   12914:	bne	11cdc <__errno_location@plt+0x920>
   12918:	ldr	r0, [r4, #16]
   1291c:	movw	r2, #6996	; 0x1b54
   12920:	mov	r1, #1
   12924:	mov	r3, r4
   12928:	movt	r2, #1
   1292c:	sub	sp, fp, #48	; 0x30
   12930:	vpop	{d8-d9}
   12934:	add	sp, sp, #4
   12938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1293c:	b	11134 <rb_setselect@plt>
   12940:	bl	112d8 <rb_outofmemory@plt>
   12944:	mov	r0, #0
   12948:	bl	113b0 <exit@plt>
   1294c:	sub	sp, sp, #4
   12950:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12954:	add	fp, sp, #24
   12958:	sub	sp, sp, #388	; 0x184
   1295c:	str	r3, [fp, #8]
   12960:	mov	r4, r0
   12964:	ldrb	r0, [r0, #72]	; 0x48
   12968:	tst	r0, #8
   1296c:	bne	12b58 <__errno_location@plt+0x179c>
   12970:	mov	r6, r1
   12974:	ldr	r0, [r4, #16]
   12978:	ldr	r1, [r4, #28]
   1297c:	mov	r7, r2
   12980:	bl	11398 <rb_rawbuf_flush@plt>
   12984:	ldr	r0, [r4, #20]
   12988:	ldr	r1, [r4, #32]
   1298c:	bl	11398 <rb_rawbuf_flush@plt>
   12990:	ldr	r0, [r4, #28]
   12994:	bl	11254 <rb_close@plt>
   12998:	ldrb	r0, [r4, #72]	; 0x48
   1299c:	orr	r1, r0, #8
   129a0:	tst	r0, #64	; 0x40
   129a4:	strb	r1, [r4, #72]	; 0x48
   129a8:	bne	12a18 <__errno_location@plt+0x165c>
   129ac:	ldr	r2, [r4, #24]
   129b0:	movw	r3, #19923	; 0x4dd3
   129b4:	ldr	r0, [r4, #8]
   129b8:	ldr	r1, [r4, #4]
   129bc:	movt	r3, #4194	; 0x1062
   129c0:	umull	r3, r5, r2, r3
   129c4:	cmp	r0, #0
   129c8:	lsr	r3, r5, #7
   129cc:	mov	r5, #2000	; 0x7d0
   129d0:	mls	r2, r3, r5, r2
   129d4:	movw	r3, #16692	; 0x4134
   129d8:	add	r2, r2, r2, lsl #1
   129dc:	movt	r3, #2
   129e0:	add	r2, r3, r2, lsl #2
   129e4:	streq	r1, [r2, #4]
   129e8:	strne	r1, [r0, #4]
   129ec:	mov	r3, r2
   129f0:	ldrne	r1, [r4, #4]
   129f4:	cmp	r1, #0
   129f8:	addne	r3, r1, #8
   129fc:	str	r0, [r3]
   12a00:	mov	r0, #0
   12a04:	str	r0, [r4, #4]
   12a08:	str	r0, [r4, #8]
   12a0c:	ldr	r0, [r2, #8]
   12a10:	sub	r0, r0, #1
   12a14:	str	r0, [r2, #8]
   12a18:	ldr	r0, [r4, #32]
   12a1c:	cmp	r6, #0
   12a20:	cmpne	r7, #0
   12a24:	bne	12a5c <__errno_location@plt+0x16a0>
   12a28:	bl	11254 <rb_close@plt>
   12a2c:	mov	r0, #0
   12a30:	str	r0, [r4, #4]
   12a34:	movw	r0, #16680	; 0x4128
   12a38:	str	r4, [r4]
   12a3c:	movt	r0, #2
   12a40:	ldr	r1, [r0]
   12a44:	cmp	r1, #0
   12a48:	str	r1, [r4, #8]
   12a4c:	beq	12b38 <__errno_location@plt+0x177c>
   12a50:	add	r1, r1, #4
   12a54:	str	r4, [r1]
   12a58:	b	12b48 <__errno_location@plt+0x178c>
   12a5c:	movw	r2, #11176	; 0x2ba8
   12a60:	mov	r1, #1
   12a64:	mov	r3, r4
   12a68:	movt	r2, #1
   12a6c:	bl	11134 <rb_setselect@plt>
   12a70:	ldr	r0, [r4, #32]
   12a74:	mov	r1, #2
   12a78:	mov	r2, #0
   12a7c:	mov	r3, #0
   12a80:	bl	11134 <rb_setselect@plt>
   12a84:	sub	r6, fp, #156	; 0x9c
   12a88:	add	r3, fp, #8
   12a8c:	mov	r1, #128	; 0x80
   12a90:	mov	r2, r7
   12a94:	mov	r0, r6
   12a98:	str	r3, [fp, #-28]	; 0xffffffe4
   12a9c:	bl	11164 <vsnprintf@plt>
   12aa0:	mov	r0, #68	; 0x44
   12aa4:	mov	r1, r6
   12aa8:	mov	r2, #251	; 0xfb
   12aac:	strb	r0, [sp]
   12ab0:	ldr	r0, [r4, #24]
   12ab4:	str	r0, [sp, #1]
   12ab8:	mov	r0, sp
   12abc:	orr	r0, r0, #5
   12ac0:	bl	111c4 <rb_strlcpy@plt>
   12ac4:	mov	r0, r6
   12ac8:	bl	11230 <strlen@plt>
   12acc:	ldr	r4, [r4, #12]
   12ad0:	mov	r6, r0
   12ad4:	mov	r0, #1
   12ad8:	mov	r1, #40	; 0x28
   12adc:	bl	111a0 <calloc@plt>
   12ae0:	cmp	r0, #0
   12ae4:	beq	12ba4 <__errno_location@plt+0x17e8>
   12ae8:	add	r6, r6, #6
   12aec:	mov	r5, r0
   12af0:	mov	r0, #1
   12af4:	mov	r1, r6
   12af8:	bl	111a0 <calloc@plt>
   12afc:	cmp	r0, #0
   12b00:	beq	12ba4 <__errno_location@plt+0x17e8>
   12b04:	mov	r1, sp
   12b08:	mov	r2, r6
   12b0c:	str	r0, [r5, #12]
   12b10:	str	r6, [r5, #16]
   12b14:	bl	11248 <memcpy@plt>
   12b18:	str	r5, [r5]
   12b1c:	ldr	r0, [r4, #40]	; 0x28
   12b20:	cmp	r0, #0
   12b24:	str	r0, [r5, #4]
   12b28:	beq	12b68 <__errno_location@plt+0x17ac>
   12b2c:	add	r0, r0, #8
   12b30:	str	r5, [r0]
   12b34:	b	12b78 <__errno_location@plt+0x17bc>
   12b38:	mov	r1, r0
   12b3c:	ldr	r2, [r1, #4]!
   12b40:	cmp	r2, #0
   12b44:	streq	r4, [r1]
   12b48:	str	r4, [r0]
   12b4c:	ldr	r1, [r0, #8]
   12b50:	add	r1, r1, #1
   12b54:	str	r1, [r0, #8]
   12b58:	sub	sp, fp, #24
   12b5c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b60:	add	sp, sp, #4
   12b64:	bx	lr
   12b68:	mov	r0, r4
   12b6c:	ldr	r1, [r0, #36]!	; 0x24
   12b70:	cmp	r1, #0
   12b74:	streq	r5, [r0]
   12b78:	str	r5, [r4, #40]	; 0x28
   12b7c:	ldr	r1, [r4, #44]	; 0x2c
   12b80:	ldr	r0, [r4, #16]
   12b84:	add	r1, r1, #1
   12b88:	str	r1, [r4, #44]	; 0x2c
   12b8c:	mov	r1, r4
   12b90:	bl	12c78 <__errno_location@plt+0x18bc>
   12b94:	sub	sp, fp, #24
   12b98:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b9c:	add	sp, sp, #4
   12ba0:	bx	lr
   12ba4:	bl	112d8 <rb_outofmemory@plt>
   12ba8:	push	{r4, r5, r6, r7, fp, lr}
   12bac:	add	fp, sp, #16
   12bb0:	sub	sp, sp, #16384	; 0x4000
   12bb4:	cmp	r1, #0
   12bb8:	beq	12c10 <__errno_location@plt+0x1854>
   12bbc:	mov	r4, r1
   12bc0:	mov	r5, sp
   12bc4:	ldr	r0, [r4, #32]
   12bc8:	mov	r1, r5
   12bcc:	mov	r2, #16384	; 0x4000
   12bd0:	bl	11218 <rb_read@plt>
   12bd4:	cmp	r0, #0
   12bd8:	beq	12c18 <__errno_location@plt+0x185c>
   12bdc:	cmn	r0, #1
   12be0:	bgt	12bc4 <__errno_location@plt+0x1808>
   12be4:	bl	113bc <__errno_location@plt>
   12be8:	ldr	r0, [r0]
   12bec:	bl	11104 <rb_ignore_errno@plt>
   12bf0:	cmp	r0, #0
   12bf4:	beq	12c18 <__errno_location@plt+0x185c>
   12bf8:	ldr	r0, [r4, #32]
   12bfc:	movw	r2, #11176	; 0x2ba8
   12c00:	mov	r1, #1
   12c04:	mov	r3, r4
   12c08:	movt	r2, #1
   12c0c:	bl	11134 <rb_setselect@plt>
   12c10:	sub	sp, fp, #16
   12c14:	pop	{r4, r5, r6, r7, fp, pc}
   12c18:	ldr	r0, [r4, #32]
   12c1c:	bl	11254 <rb_close@plt>
   12c20:	mov	r0, #0
   12c24:	str	r0, [r4, #4]
   12c28:	movw	r0, #16680	; 0x4128
   12c2c:	str	r4, [r4]
   12c30:	movt	r0, #2
   12c34:	ldr	r1, [r0]
   12c38:	cmp	r1, #0
   12c3c:	str	r1, [r4, #8]
   12c40:	beq	12c50 <__errno_location@plt+0x1894>
   12c44:	add	r1, r1, #4
   12c48:	str	r4, [r1]
   12c4c:	b	12c60 <__errno_location@plt+0x18a4>
   12c50:	mov	r1, r0
   12c54:	ldr	r2, [r1, #4]!
   12c58:	cmp	r2, #0
   12c5c:	streq	r4, [r1]
   12c60:	str	r4, [r0]
   12c64:	ldr	r1, [r0, #8]
   12c68:	add	r1, r1, #1
   12c6c:	str	r1, [r0, #8]
   12c70:	sub	sp, fp, #16
   12c74:	pop	{r4, r5, r6, r7, fp, pc}
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	add	fp, sp, #28
   12c80:	sub	sp, sp, #20
   12c84:	mov	r0, r1
   12c88:	mov	r4, r1
   12c8c:	add	r8, r1, #44	; 0x2c
   12c90:	ldr	sl, [r0, #36]!	; 0x24
   12c94:	cmp	sl, #0
   12c98:	str	r0, [sp, #16]
   12c9c:	beq	12d98 <__errno_location@plt+0x19dc>
   12ca0:	str	r4, [sp, #12]
   12ca4:	ldr	r5, [sl]
   12ca8:	movw	r7, #40692	; 0x9ef4
   12cac:	ldr	r0, [r4, #16]
   12cb0:	ldr	r9, [sl, #8]
   12cb4:	movt	r7, #2
   12cb8:	ldr	r7, [r7, #4]
   12cbc:	ldr	r1, [r5, #16]
   12cc0:	ldr	r3, [r5, #12]
   12cc4:	ldr	r2, [r5, #36]	; 0x24
   12cc8:	stm	sp, {r1, r7}
   12ccc:	add	r7, r5, #20
   12cd0:	mov	r1, r7
   12cd4:	bl	11158 <rb_send_fd_buf@plt>
   12cd8:	mov	r6, r0
   12cdc:	cmp	r0, #1
   12ce0:	blt	12d68 <__errno_location@plt+0x19ac>
   12ce4:	ldr	r0, [sl, #8]
   12ce8:	ldr	r1, [sl, #4]
   12cec:	ldr	r2, [sp, #16]
   12cf0:	cmp	r0, #0
   12cf4:	streq	r1, [r4, #40]	; 0x28
   12cf8:	strne	r1, [r0, #4]
   12cfc:	ldrne	r1, [sl, #4]
   12d00:	cmp	r1, #0
   12d04:	addne	r2, r1, #8
   12d08:	str	r0, [r2]
   12d0c:	mov	r0, #0
   12d10:	str	r0, [sl, #4]
   12d14:	str	r0, [sl, #8]
   12d18:	ldr	r0, [r8]
   12d1c:	sub	r0, r0, #1
   12d20:	str	r0, [r8]
   12d24:	ldr	r0, [r5, #36]	; 0x24
   12d28:	cmp	r0, #1
   12d2c:	blt	12d4c <__errno_location@plt+0x1990>
   12d30:	mov	r4, #0
   12d34:	ldr	r0, [r7, r4, lsl #2]
   12d38:	bl	11254 <rb_close@plt>
   12d3c:	ldr	r0, [r5, #36]	; 0x24
   12d40:	add	r4, r4, #1
   12d44:	cmp	r4, r0
   12d48:	blt	12d34 <__errno_location@plt+0x1978>
   12d4c:	ldr	r0, [r5, #12]
   12d50:	cmp	r0, #0
   12d54:	beq	12d5c <__errno_location@plt+0x19a0>
   12d58:	bl	111f4 <free@plt>
   12d5c:	mov	r0, r5
   12d60:	bl	111f4 <free@plt>
   12d64:	ldr	r4, [sp, #12]
   12d68:	cmp	r6, #0
   12d6c:	beq	12dc8 <__errno_location@plt+0x1a0c>
   12d70:	cmn	r6, #1
   12d74:	bgt	12d8c <__errno_location@plt+0x19d0>
   12d78:	bl	113bc <__errno_location@plt>
   12d7c:	ldr	r0, [r0]
   12d80:	bl	11104 <rb_ignore_errno@plt>
   12d84:	cmp	r0, #0
   12d88:	beq	12dc8 <__errno_location@plt+0x1a0c>
   12d8c:	cmp	r9, #0
   12d90:	mov	sl, r9
   12d94:	bne	12ca4 <__errno_location@plt+0x18e8>
   12d98:	ldr	r0, [r8]
   12d9c:	cmp	r0, #0
   12da0:	subeq	sp, fp, #28
   12da4:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12da8:	ldr	r0, [r4, #16]
   12dac:	movw	r2, #11384	; 0x2c78
   12db0:	mov	r1, #2
   12db4:	mov	r3, r4
   12db8:	movt	r2, #1
   12dbc:	sub	sp, fp, #28
   12dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc4:	b	11134 <rb_setselect@plt>
   12dc8:	mov	r0, #0
   12dcc:	bl	113b0 <exit@plt>
   12dd0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dd4:	add	fp, sp, #24
   12dd8:	sub	sp, sp, #768	; 0x300
   12ddc:	ldr	r4, [fp, #8]
   12de0:	cmp	r1, #0
   12de4:	beq	12e00 <__errno_location@plt+0x1a44>
   12de8:	mov	r0, r4
   12dec:	mov	r1, #0
   12df0:	mov	r2, #0
   12df4:	sub	sp, fp, #24
   12df8:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dfc:	b	1294c <__errno_location@plt+0x1590>
   12e00:	ldrb	r0, [r4, #72]	; 0x48
   12e04:	tst	r0, #1
   12e08:	beq	12ef0 <__errno_location@plt+0x1b34>
   12e0c:	ldr	r0, [r4, #28]
   12e10:	bl	1123c <rb_ssl_get_cipher@plt>
   12e14:	cmp	r0, #0
   12e18:	beq	12ef0 <__errno_location@plt+0x1b34>
   12e1c:	mov	r5, sp
   12e20:	mov	r1, r0
   12e24:	mov	r2, #256	; 0x100
   12e28:	mov	r0, r5
   12e2c:	bl	111c4 <rb_strlcpy@plt>
   12e30:	mov	r0, #67	; 0x43
   12e34:	mov	r1, r5
   12e38:	strb	r0, [sp, #256]	; 0x100
   12e3c:	ldr	r0, [r4, #24]
   12e40:	str	r0, [sp, #257]	; 0x101
   12e44:	add	r0, sp, #256	; 0x100
   12e48:	orr	r0, r0, #5
   12e4c:	bl	11278 <strcpy@plt>
   12e50:	mov	r0, r5
   12e54:	bl	11230 <strlen@plt>
   12e58:	ldr	r5, [r4, #12]
   12e5c:	mov	r7, r0
   12e60:	mov	r0, #1
   12e64:	mov	r1, #40	; 0x28
   12e68:	bl	111a0 <calloc@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	12ff4 <__errno_location@plt+0x1c38>
   12e74:	add	r7, r7, #6
   12e78:	mov	r6, r0
   12e7c:	mov	r0, #1
   12e80:	mov	r1, r7
   12e84:	bl	111a0 <calloc@plt>
   12e88:	cmp	r0, #0
   12e8c:	beq	12ff4 <__errno_location@plt+0x1c38>
   12e90:	add	r1, sp, #256	; 0x100
   12e94:	mov	r2, r7
   12e98:	str	r0, [r6, #12]
   12e9c:	str	r7, [r6, #16]
   12ea0:	bl	11248 <memcpy@plt>
   12ea4:	str	r6, [r6]
   12ea8:	ldr	r0, [r5, #40]	; 0x28
   12eac:	cmp	r0, #0
   12eb0:	str	r0, [r6, #4]
   12eb4:	beq	12ec4 <__errno_location@plt+0x1b08>
   12eb8:	add	r0, r0, #8
   12ebc:	str	r6, [r0]
   12ec0:	b	12ed4 <__errno_location@plt+0x1b18>
   12ec4:	mov	r0, r5
   12ec8:	ldr	r1, [r0, #36]!	; 0x24
   12ecc:	cmp	r1, #0
   12ed0:	streq	r6, [r0]
   12ed4:	str	r6, [r5, #40]	; 0x28
   12ed8:	ldr	r1, [r5, #44]	; 0x2c
   12edc:	ldr	r0, [r5, #16]
   12ee0:	add	r1, r1, #1
   12ee4:	str	r1, [r5, #44]	; 0x2c
   12ee8:	mov	r1, r5
   12eec:	bl	12c78 <__errno_location@plt+0x18bc>
   12ef0:	movw	r5, #40692	; 0x9ef4
   12ef4:	ldr	r0, [r4, #28]
   12ef8:	add	r1, sp, #256	; 0x100
   12efc:	movt	r5, #2
   12f00:	add	r1, r1, #13
   12f04:	ldr	r2, [r5, #12]
   12f08:	bl	111d0 <rb_get_ssl_certfp@plt>
   12f0c:	cmp	r0, #0
   12f10:	beq	12fc8 <__errno_location@plt+0x1c0c>
   12f14:	mov	r7, r0
   12f18:	mov	r0, #70	; 0x46
   12f1c:	ldr	r1, [r5, #12]
   12f20:	strb	r0, [sp, #256]	; 0x100
   12f24:	ldr	r0, [r4, #24]
   12f28:	str	r7, [sp, #265]	; 0x109
   12f2c:	str	r1, [sp, #261]	; 0x105
   12f30:	mov	r1, #40	; 0x28
   12f34:	str	r0, [sp, #257]	; 0x101
   12f38:	mov	r0, #1
   12f3c:	ldr	r5, [r4, #12]
   12f40:	bl	111a0 <calloc@plt>
   12f44:	cmp	r0, #0
   12f48:	beq	12ff4 <__errno_location@plt+0x1c38>
   12f4c:	add	r7, r7, #13
   12f50:	mov	r6, r0
   12f54:	mov	r0, #1
   12f58:	mov	r1, r7
   12f5c:	bl	111a0 <calloc@plt>
   12f60:	cmp	r0, #0
   12f64:	beq	12ff4 <__errno_location@plt+0x1c38>
   12f68:	add	r1, sp, #256	; 0x100
   12f6c:	mov	r2, r7
   12f70:	str	r0, [r6, #12]
   12f74:	str	r7, [r6, #16]
   12f78:	bl	11248 <memcpy@plt>
   12f7c:	str	r6, [r6]
   12f80:	ldr	r0, [r5, #40]	; 0x28
   12f84:	cmp	r0, #0
   12f88:	str	r0, [r6, #4]
   12f8c:	beq	12f9c <__errno_location@plt+0x1be0>
   12f90:	add	r0, r0, #8
   12f94:	str	r6, [r0]
   12f98:	b	12fac <__errno_location@plt+0x1bf0>
   12f9c:	mov	r0, r5
   12fa0:	ldr	r1, [r0, #36]!	; 0x24
   12fa4:	cmp	r1, #0
   12fa8:	streq	r6, [r0]
   12fac:	str	r6, [r5, #40]	; 0x28
   12fb0:	ldr	r1, [r5, #44]	; 0x2c
   12fb4:	ldr	r0, [r5, #16]
   12fb8:	add	r1, r1, #1
   12fbc:	str	r1, [r5, #44]	; 0x2c
   12fc0:	mov	r1, r5
   12fc4:	bl	12c78 <__errno_location@plt+0x18bc>
   12fc8:	ldr	r0, [r4, #12]
   12fcc:	ldr	r1, [r4, #24]
   12fd0:	bl	12ff8 <__errno_location@plt+0x1c3c>
   12fd4:	ldr	r0, [r4, #28]
   12fd8:	mov	r1, r4
   12fdc:	bl	130a0 <__errno_location@plt+0x1ce4>
   12fe0:	ldr	r0, [r4, #32]
   12fe4:	mov	r1, r4
   12fe8:	bl	13268 <__errno_location@plt+0x1eac>
   12fec:	sub	sp, fp, #24
   12ff0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ff4:	bl	112d8 <rb_outofmemory@plt>
   12ff8:	push	{r4, r5, r6, r7, fp, lr}
   12ffc:	add	fp, sp, #16
   13000:	mov	r6, r1
   13004:	mov	r4, r0
   13008:	mov	r0, #1
   1300c:	mov	r1, #40	; 0x28
   13010:	bl	111a0 <calloc@plt>
   13014:	cmp	r0, #0
   13018:	beq	1309c <__errno_location@plt+0x1ce0>
   1301c:	mov	r5, r0
   13020:	mov	r0, #1
   13024:	mov	r1, #5
   13028:	mov	r7, #5
   1302c:	bl	111a0 <calloc@plt>
   13030:	cmp	r0, #0
   13034:	beq	1309c <__errno_location@plt+0x1ce0>
   13038:	mov	r1, #79	; 0x4f
   1303c:	str	r0, [r5, #12]
   13040:	str	r6, [r0, #1]
   13044:	str	r7, [r5, #16]
   13048:	strb	r1, [r0]
   1304c:	ldr	r0, [r4, #40]	; 0x28
   13050:	str	r5, [r5]
   13054:	cmp	r0, #0
   13058:	str	r0, [r5, #4]
   1305c:	beq	1306c <__errno_location@plt+0x1cb0>
   13060:	add	r0, r0, #8
   13064:	str	r5, [r0]
   13068:	b	1307c <__errno_location@plt+0x1cc0>
   1306c:	mov	r0, r4
   13070:	ldr	r1, [r0, #36]!	; 0x24
   13074:	cmp	r1, #0
   13078:	streq	r5, [r0]
   1307c:	str	r5, [r4, #40]	; 0x28
   13080:	ldr	r1, [r4, #44]	; 0x2c
   13084:	ldr	r0, [r4, #16]
   13088:	add	r1, r1, #1
   1308c:	str	r1, [r4, #44]	; 0x2c
   13090:	mov	r1, r4
   13094:	pop	{r4, r5, r6, r7, fp, lr}
   13098:	b	12c78 <__errno_location@plt+0x18bc>
   1309c:	bl	112d8 <rb_outofmemory@plt>
   130a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130a4:	add	fp, sp, #24
   130a8:	sub	sp, sp, #16384	; 0x4000
   130ac:	cmp	r1, #0
   130b0:	beq	13180 <__errno_location@plt+0x1dc4>
   130b4:	ldrb	r0, [r1, #72]	; 0x48
   130b8:	mov	r4, r1
   130bc:	tst	r0, #8
   130c0:	bne	13180 <__errno_location@plt+0x1dc4>
   130c4:	tst	r0, #32
   130c8:	beq	130ec <__errno_location@plt+0x1d30>
   130cc:	and	r0, r0, #223	; 0xdf
   130d0:	mov	r1, r4
   130d4:	strb	r0, [r4, #72]	; 0x48
   130d8:	ldr	r0, [r4, #28]
   130dc:	bl	133b8 <__errno_location@plt+0x1ffc>
   130e0:	ldrb	r0, [r4, #72]	; 0x48
   130e4:	tst	r0, #8
   130e8:	bne	13180 <__errno_location@plt+0x1dc4>
   130ec:	tst	r0, #8
   130f0:	bne	13180 <__errno_location@plt+0x1dc4>
   130f4:	add	r7, r4, #48	; 0x30
   130f8:	mov	r5, sp
   130fc:	ldr	r0, [r4, #28]
   13100:	mov	r1, r5
   13104:	mov	r2, #16384	; 0x4000
   13108:	bl	11218 <rb_read@plt>
   1310c:	cmp	r0, #0
   13110:	beq	13188 <__errno_location@plt+0x1dcc>
   13114:	mov	r6, r0
   13118:	cmn	r0, #1
   1311c:	ble	1319c <__errno_location@plt+0x1de0>
   13120:	ldrd	r0, [r7]
   13124:	adds	r0, r0, r6
   13128:	adc	r1, r1, r6, asr #31
   1312c:	strd	r0, [r7]
   13130:	ldrb	r0, [r4, #72]	; 0x48
   13134:	tst	r0, #2
   13138:	bne	13164 <__errno_location@plt+0x1da8>
   1313c:	tst	r0, #8
   13140:	bne	13154 <__errno_location@plt+0x1d98>
   13144:	ldr	r0, [r4, #20]
   13148:	mov	r1, r5
   1314c:	mov	r2, r6
   13150:	bl	1138c <rb_rawbuf_append@plt>
   13154:	ldrb	r0, [r4, #72]	; 0x48
   13158:	tst	r0, #8
   1315c:	beq	130fc <__errno_location@plt+0x1d40>
   13160:	b	13180 <__errno_location@plt+0x1dc4>
   13164:	mov	r0, r4
   13168:	mov	r1, r5
   1316c:	mov	r2, r6
   13170:	bl	13644 <__errno_location@plt+0x2288>
   13174:	ldrb	r0, [r4, #72]	; 0x48
   13178:	tst	r0, #8
   1317c:	beq	130fc <__errno_location@plt+0x1d40>
   13180:	sub	sp, fp, #24
   13184:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13188:	movw	r2, #15523	; 0x3ca3
   1318c:	movw	r3, #15419	; 0x3c3b
   13190:	movt	r2, #1
   13194:	movt	r3, #1
   13198:	b	13254 <__errno_location@plt+0x1e98>
   1319c:	bl	113bc <__errno_location@plt>
   131a0:	mov	r5, r0
   131a4:	ldr	r0, [r0]
   131a8:	bl	11104 <rb_ignore_errno@plt>
   131ac:	cmp	r0, #0
   131b0:	beq	131f8 <__errno_location@plt+0x1e3c>
   131b4:	ldr	r0, [r4, #28]
   131b8:	cmn	r6, #4
   131bc:	bne	13218 <__errno_location@plt+0x1e5c>
   131c0:	mov	r1, #1
   131c4:	mov	r2, #0
   131c8:	mov	r3, #0
   131cc:	bl	11134 <rb_setselect@plt>
   131d0:	ldr	r0, [r4, #28]
   131d4:	movw	r2, #12448	; 0x30a0
   131d8:	mov	r1, #2
   131dc:	mov	r3, r4
   131e0:	movt	r2, #1
   131e4:	bl	11134 <rb_setselect@plt>
   131e8:	ldrb	r0, [r4, #72]	; 0x48
   131ec:	orr	r0, r0, #32
   131f0:	strb	r0, [r4, #72]	; 0x48
   131f4:	b	1322c <__errno_location@plt+0x1e70>
   131f8:	cmn	r6, #2
   131fc:	bne	13240 <__errno_location@plt+0x1e84>
   13200:	ldrb	r0, [r4, #72]	; 0x48
   13204:	ands	r0, r0, #1
   13208:	beq	13240 <__errno_location@plt+0x1e84>
   1320c:	ldr	r0, [r4, #28]
   13210:	bl	112a8 <rb_get_ssl_strerror@plt>
   13214:	b	13248 <__errno_location@plt+0x1e8c>
   13218:	movw	r2, #12448	; 0x30a0
   1321c:	mov	r1, #1
   13220:	mov	r3, r4
   13224:	movt	r2, #1
   13228:	bl	11134 <rb_setselect@plt>
   1322c:	ldr	r0, [r4, #32]
   13230:	mov	r1, r4
   13234:	bl	13578 <__errno_location@plt+0x21bc>
   13238:	sub	sp, fp, #24
   1323c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13240:	ldr	r0, [r5]
   13244:	bl	110c8 <strerror@plt>
   13248:	movw	r2, #15388	; 0x3c1c
   1324c:	mov	r3, r0
   13250:	movt	r2, #1
   13254:	mov	r0, r4
   13258:	mov	r1, #1
   1325c:	bl	1294c <__errno_location@plt+0x1590>
   13260:	sub	sp, fp, #24
   13264:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13268:	push	{r4, r5, r6, sl, fp, lr}
   1326c:	add	fp, sp, #16
   13270:	sub	sp, sp, #16384	; 0x4000
   13274:	cmp	r1, #0
   13278:	beq	132c8 <__errno_location@plt+0x1f0c>
   1327c:	ldrb	r0, [r1, #72]	; 0x48
   13280:	mov	r4, r1
   13284:	tst	r0, #8
   13288:	bne	132c8 <__errno_location@plt+0x1f0c>
   1328c:	ldr	r0, [r4, #16]
   13290:	bl	11290 <rb_rawbuf_length@plt>
   13294:	cmp	r0, #4096	; 0x1000
   13298:	blt	132d0 <__errno_location@plt+0x1f14>
   1329c:	ldrb	r0, [r4, #72]	; 0x48
   132a0:	mov	r1, #1
   132a4:	mov	r2, #0
   132a8:	mov	r3, #0
   132ac:	orr	r0, r0, #4
   132b0:	strb	r0, [r4, #72]	; 0x48
   132b4:	ldr	r0, [r4, #32]
   132b8:	bl	11134 <rb_setselect@plt>
   132bc:	ldr	r0, [r4, #28]
   132c0:	mov	r1, r4
   132c4:	bl	133b8 <__errno_location@plt+0x1ffc>
   132c8:	sub	sp, fp, #16
   132cc:	pop	{r4, r5, r6, sl, fp, pc}
   132d0:	add	r6, r4, #56	; 0x38
   132d4:	mov	r5, sp
   132d8:	ldrb	r0, [r4, #72]	; 0x48
   132dc:	tst	r0, #8
   132e0:	bne	132c8 <__errno_location@plt+0x1f0c>
   132e4:	ldr	r0, [r4, #32]
   132e8:	mov	r1, r5
   132ec:	mov	r2, #16384	; 0x4000
   132f0:	bl	11218 <rb_read@plt>
   132f4:	cmp	r0, #0
   132f8:	beq	133a0 <__errno_location@plt+0x1fe4>
   132fc:	mov	r2, r0
   13300:	cmn	r0, #1
   13304:	ble	13374 <__errno_location@plt+0x1fb8>
   13308:	ldrd	r0, [r6]
   1330c:	adds	r0, r0, r2
   13310:	adc	r1, r1, r2, asr #31
   13314:	strd	r0, [r6]
   13318:	ldrb	r0, [r4, #72]	; 0x48
   1331c:	tst	r0, #2
   13320:	bne	13348 <__errno_location@plt+0x1f8c>
   13324:	tst	r0, #8
   13328:	bne	13354 <__errno_location@plt+0x1f98>
   1332c:	ldr	r0, [r4, #16]
   13330:	mov	r1, r5
   13334:	bl	1138c <rb_rawbuf_append@plt>
   13338:	ldrb	r0, [r4, #72]	; 0x48
   1333c:	tst	r0, #8
   13340:	beq	13360 <__errno_location@plt+0x1fa4>
   13344:	b	132c8 <__errno_location@plt+0x1f0c>
   13348:	mov	r0, r4
   1334c:	mov	r1, r5
   13350:	bl	13760 <__errno_location@plt+0x23a4>
   13354:	ldrb	r0, [r4, #72]	; 0x48
   13358:	tst	r0, #8
   1335c:	bne	132c8 <__errno_location@plt+0x1f0c>
   13360:	ldr	r0, [r4, #16]
   13364:	bl	11290 <rb_rawbuf_length@plt>
   13368:	cmp	r0, #4096	; 0x1000
   1336c:	blt	132d8 <__errno_location@plt+0x1f1c>
   13370:	b	1329c <__errno_location@plt+0x1ee0>
   13374:	bl	113bc <__errno_location@plt>
   13378:	ldr	r0, [r0]
   1337c:	bl	11104 <rb_ignore_errno@plt>
   13380:	cmp	r0, #0
   13384:	beq	133a0 <__errno_location@plt+0x1fe4>
   13388:	ldr	r0, [r4, #32]
   1338c:	movw	r2, #12904	; 0x3268
   13390:	mov	r1, #1
   13394:	mov	r3, r4
   13398:	movt	r2, #1
   1339c:	b	132b8 <__errno_location@plt+0x1efc>
   133a0:	mov	r0, r4
   133a4:	mov	r1, #0
   133a8:	mov	r2, #0
   133ac:	bl	1294c <__errno_location@plt+0x1590>
   133b0:	sub	sp, fp, #16
   133b4:	pop	{r4, r5, r6, sl, fp, pc}
   133b8:	push	{r4, r5, r6, r7, fp, lr}
   133bc:	add	fp, sp, #16
   133c0:	mov	r5, r0
   133c4:	ldrb	r0, [r1, #72]	; 0x48
   133c8:	tst	r0, #8
   133cc:	bne	13558 <__errno_location@plt+0x219c>
   133d0:	mov	r4, r1
   133d4:	tst	r0, #16
   133d8:	beq	133fc <__errno_location@plt+0x2040>
   133dc:	and	r0, r0, #239	; 0xef
   133e0:	mov	r1, r4
   133e4:	strb	r0, [r4, #72]	; 0x48
   133e8:	ldr	r0, [r4, #28]
   133ec:	bl	130a0 <__errno_location@plt+0x1ce4>
   133f0:	ldrb	r0, [r4, #72]	; 0x48
   133f4:	tst	r0, #8
   133f8:	bne	13558 <__errno_location@plt+0x219c>
   133fc:	ldr	r0, [r4, #16]
   13400:	mov	r1, r5
   13404:	bl	11398 <rb_rawbuf_flush@plt>
   13408:	mov	r6, r0
   1340c:	cmp	r0, #1
   13410:	blt	13440 <__errno_location@plt+0x2084>
   13414:	add	r7, r4, #40	; 0x28
   13418:	ldrd	r0, [r7]
   1341c:	adds	r0, r0, r6
   13420:	adc	r1, r1, r6, asr #31
   13424:	strd	r0, [r7]
   13428:	mov	r1, r5
   1342c:	ldr	r0, [r4, #16]
   13430:	bl	11398 <rb_rawbuf_flush@plt>
   13434:	mov	r6, r0
   13438:	cmp	r0, #0
   1343c:	bgt	13418 <__errno_location@plt+0x205c>
   13440:	cmp	r6, #0
   13444:	beq	134b4 <__errno_location@plt+0x20f8>
   13448:	bl	113bc <__errno_location@plt>
   1344c:	mov	r5, r0
   13450:	ldr	r0, [r0]
   13454:	bl	11104 <rb_ignore_errno@plt>
   13458:	cmp	r0, #0
   1345c:	beq	134e4 <__errno_location@plt+0x2128>
   13460:	ldr	r0, [r4, #16]
   13464:	bl	11290 <rb_rawbuf_length@plt>
   13468:	cmp	r0, #1
   1346c:	blt	1351c <__errno_location@plt+0x2160>
   13470:	ldr	r0, [r4, #28]
   13474:	movw	r2, #13240	; 0x33b8
   13478:	cmn	r6, #3
   1347c:	movt	r2, #1
   13480:	bne	13530 <__errno_location@plt+0x2174>
   13484:	mov	r1, #1
   13488:	mov	r3, r4
   1348c:	bl	11134 <rb_setselect@plt>
   13490:	ldr	r0, [r4, #28]
   13494:	mov	r1, #2
   13498:	mov	r2, #0
   1349c:	mov	r3, #0
   134a0:	bl	11134 <rb_setselect@plt>
   134a4:	ldrb	r0, [r4, #72]	; 0x48
   134a8:	orr	r0, r0, #16
   134ac:	strb	r0, [r4, #72]	; 0x48
   134b0:	b	1353c <__errno_location@plt+0x2180>
   134b4:	movw	r2, #15523	; 0x3ca3
   134b8:	movw	r3, #15419	; 0x3c3b
   134bc:	mov	r0, r4
   134c0:	mov	r1, #1
   134c4:	movt	r2, #1
   134c8:	movt	r3, #1
   134cc:	bl	1294c <__errno_location@plt+0x1590>
   134d0:	bl	113bc <__errno_location@plt>
   134d4:	mov	r5, r0
   134d8:	ldr	r0, [r5]
   134dc:	bl	110c8 <strerror@plt>
   134e0:	b	13500 <__errno_location@plt+0x2144>
   134e4:	cmn	r6, #2
   134e8:	bne	134d8 <__errno_location@plt+0x211c>
   134ec:	ldrb	r0, [r4, #72]	; 0x48
   134f0:	ands	r0, r0, #1
   134f4:	beq	134d8 <__errno_location@plt+0x211c>
   134f8:	ldr	r0, [r4, #28]
   134fc:	bl	112a8 <rb_get_ssl_strerror@plt>
   13500:	movw	r2, #15403	; 0x3c2b
   13504:	mov	r3, r0
   13508:	mov	r0, r4
   1350c:	mov	r1, #1
   13510:	movt	r2, #1
   13514:	pop	{r4, r5, r6, r7, fp, lr}
   13518:	b	1294c <__errno_location@plt+0x1590>
   1351c:	ldr	r0, [r4, #28]
   13520:	mov	r1, #2
   13524:	mov	r2, #0
   13528:	mov	r3, #0
   1352c:	b	13538 <__errno_location@plt+0x217c>
   13530:	mov	r1, #2
   13534:	mov	r3, r4
   13538:	bl	11134 <rb_setselect@plt>
   1353c:	ldrb	r0, [r4, #72]	; 0x48
   13540:	tst	r0, #4
   13544:	popeq	{r4, r5, r6, r7, fp, pc}
   13548:	ldr	r0, [r4, #16]
   1354c:	bl	11290 <rb_rawbuf_length@plt>
   13550:	cmp	r0, #0
   13554:	beq	1355c <__errno_location@plt+0x21a0>
   13558:	pop	{r4, r5, r6, r7, fp, pc}
   1355c:	ldrb	r0, [r4, #72]	; 0x48
   13560:	mov	r1, r4
   13564:	and	r0, r0, #251	; 0xfb
   13568:	strb	r0, [r4, #72]	; 0x48
   1356c:	ldr	r0, [r4, #32]
   13570:	pop	{r4, r5, r6, r7, fp, lr}
   13574:	b	13268 <__errno_location@plt+0x1eac>
   13578:	push	{r4, r5, r6, sl, fp, lr}
   1357c:	add	fp, sp, #16
   13580:	mov	r5, r0
   13584:	ldrb	r0, [r1, #72]	; 0x48
   13588:	tst	r0, #8
   1358c:	popne	{r4, r5, r6, sl, fp, pc}
   13590:	ldr	r0, [r1, #20]
   13594:	mov	r4, r1
   13598:	mov	r1, r5
   1359c:	bl	11398 <rb_rawbuf_flush@plt>
   135a0:	cmp	r0, #1
   135a4:	blt	135d0 <__errno_location@plt+0x2214>
   135a8:	add	r6, r4, #64	; 0x40
   135ac:	ldrd	r2, [r6]
   135b0:	mov	r1, r5
   135b4:	adds	r2, r2, r0
   135b8:	adc	r3, r3, r0, asr #31
   135bc:	strd	r2, [r6]
   135c0:	ldr	r0, [r4, #20]
   135c4:	bl	11398 <rb_rawbuf_flush@plt>
   135c8:	cmp	r0, #0
   135cc:	bgt	135ac <__errno_location@plt+0x21f0>
   135d0:	cmp	r0, #0
   135d4:	beq	1361c <__errno_location@plt+0x2260>
   135d8:	bl	113bc <__errno_location@plt>
   135dc:	ldr	r0, [r0]
   135e0:	bl	11104 <rb_ignore_errno@plt>
   135e4:	cmp	r0, #0
   135e8:	beq	1361c <__errno_location@plt+0x2260>
   135ec:	ldr	r0, [r4, #20]
   135f0:	bl	11290 <rb_rawbuf_length@plt>
   135f4:	mov	r1, r0
   135f8:	ldr	r0, [r4, #32]
   135fc:	cmp	r1, #1
   13600:	blt	13630 <__errno_location@plt+0x2274>
   13604:	movw	r2, #13688	; 0x3578
   13608:	mov	r1, #2
   1360c:	mov	r3, r4
   13610:	movt	r2, #1
   13614:	pop	{r4, r5, r6, sl, fp, lr}
   13618:	b	11134 <rb_setselect@plt>
   1361c:	mov	r0, r4
   13620:	mov	r1, #0
   13624:	mov	r2, #0
   13628:	pop	{r4, r5, r6, sl, fp, lr}
   1362c:	b	1294c <__errno_location@plt+0x1590>
   13630:	mov	r1, #2
   13634:	mov	r2, #0
   13638:	mov	r3, #0
   1363c:	pop	{r4, r5, r6, sl, fp, lr}
   13640:	b	11134 <rb_setselect@plt>
   13644:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13648:	add	fp, sp, #24
   1364c:	sub	sp, sp, #16384	; 0x4000
   13650:	mov	r4, r0
   13654:	ldr	r0, [r0, #76]	; 0x4c
   13658:	mov	r6, sp
   1365c:	mov	r5, #16384	; 0x4000
   13660:	cmp	r2, #0
   13664:	stm	r0, {r1, r2}
   13668:	str	r6, [r0, #12]
   1366c:	str	r5, [r0, #16]
   13670:	beq	1373c <__errno_location@plt+0x2380>
   13674:	mov	r8, r1
   13678:	mov	r1, #0
   1367c:	bl	111dc <inflate@plt>
   13680:	cmp	r0, #0
   13684:	bne	136d4 <__errno_location@plt+0x2318>
   13688:	ldr	r0, [r4, #76]	; 0x4c
   1368c:	ldr	r2, [r0, #16]
   13690:	ldr	r1, [r0, #4]
   13694:	rsb	r2, r2, #16384	; 0x4000
   13698:	cmp	r1, #0
   1369c:	beq	1371c <__errno_location@plt+0x2360>
   136a0:	ldrb	r3, [r4, #72]	; 0x48
   136a4:	tst	r3, #8
   136a8:	bne	136c0 <__errno_location@plt+0x2304>
   136ac:	ldr	r0, [r4, #20]
   136b0:	mov	r1, r6
   136b4:	bl	1138c <rb_rawbuf_append@plt>
   136b8:	ldr	r0, [r4, #76]	; 0x4c
   136bc:	ldr	r1, [r0, #4]
   136c0:	cmp	r1, #0
   136c4:	str	r6, [r0, #12]
   136c8:	str	r5, [r0, #16]
   136cc:	bne	13678 <__errno_location@plt+0x22bc>
   136d0:	b	1373c <__errno_location@plt+0x2380>
   136d4:	mov	r7, r0
   136d8:	movw	r0, #15453	; 0x3c5d
   136dc:	mov	r1, r8
   136e0:	mov	r2, #6
   136e4:	movt	r0, #1
   136e8:	bl	11374 <strncmp@plt>
   136ec:	cmp	r0, #0
   136f0:	beq	13744 <__errno_location@plt+0x2388>
   136f4:	mov	r0, r7
   136f8:	bl	110e0 <zError@plt>
   136fc:	movw	r2, #15488	; 0x3c80
   13700:	mov	r3, r0
   13704:	mov	r0, r4
   13708:	mov	r1, #1
   1370c:	movt	r2, #1
   13710:	bl	1294c <__errno_location@plt+0x1590>
   13714:	sub	sp, fp, #24
   13718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1371c:	cmp	r2, #0
   13720:	beq	1373c <__errno_location@plt+0x2380>
   13724:	ldrb	r0, [r4, #72]	; 0x48
   13728:	tst	r0, #8
   1372c:	bne	1373c <__errno_location@plt+0x2380>
   13730:	ldr	r0, [r4, #20]
   13734:	mov	r1, sp
   13738:	bl	1138c <rb_rawbuf_append@plt>
   1373c:	sub	sp, fp, #24
   13740:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13744:	movw	r2, #15460	; 0x3c64
   13748:	mov	r0, r4
   1374c:	mov	r1, #1
   13750:	movt	r2, #1
   13754:	bl	1294c <__errno_location@plt+0x1590>
   13758:	sub	sp, fp, #24
   1375c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13760:	push	{r4, r5, r6, r7, fp, lr}
   13764:	add	fp, sp, #16
   13768:	sub	sp, sp, #16384	; 0x4000
   1376c:	ldr	r5, [r0, #76]	; 0x4c
   13770:	mov	r4, r0
   13774:	mov	r0, sp
   13778:	str	r2, [r5, #60]	; 0x3c
   1377c:	str	r0, [r5, #68]	; 0x44
   13780:	mov	r2, #16384	; 0x4000
   13784:	mov	r0, r5
   13788:	str	r2, [r5, #72]	; 0x48
   1378c:	str	r1, [r0, #56]!	; 0x38
   13790:	mov	r1, #2
   13794:	bl	11188 <deflate@plt>
   13798:	cmp	r0, #0
   1379c:	beq	137c4 <__errno_location@plt+0x2408>
   137a0:	bl	110e0 <zError@plt>
   137a4:	movw	r2, #15507	; 0x3c93
   137a8:	mov	r3, r0
   137ac:	mov	r0, r4
   137b0:	mov	r1, #1
   137b4:	movt	r2, #1
   137b8:	bl	1294c <__errno_location@plt+0x1590>
   137bc:	sub	sp, fp, #16
   137c0:	pop	{r4, r5, r6, r7, fp, pc}
   137c4:	ldr	r1, [r5, #72]	; 0x48
   137c8:	cmp	r1, #0
   137cc:	beq	137e8 <__errno_location@plt+0x242c>
   137d0:	ldr	r0, [r5, #60]	; 0x3c
   137d4:	cmp	r0, #0
   137d8:	beq	13804 <__errno_location@plt+0x2448>
   137dc:	movw	r2, #15565	; 0x3ccd
   137e0:	movt	r2, #1
   137e4:	b	137f0 <__errno_location@plt+0x2434>
   137e8:	movw	r2, #15526	; 0x3ca6
   137ec:	movt	r2, #1
   137f0:	mov	r0, r4
   137f4:	mov	r1, #1
   137f8:	bl	1294c <__errno_location@plt+0x1590>
   137fc:	sub	sp, fp, #16
   13800:	pop	{r4, r5, r6, r7, fp, pc}
   13804:	ldrb	r0, [r4, #72]	; 0x48
   13808:	tst	r0, #8
   1380c:	bne	13820 <__errno_location@plt+0x2464>
   13810:	ldr	r0, [r4, #16]
   13814:	rsb	r2, r1, #16384	; 0x4000
   13818:	mov	r1, sp
   1381c:	bl	1138c <rb_rawbuf_append@plt>
   13820:	sub	sp, fp, #16
   13824:	pop	{r4, r5, r6, r7, fp, pc}
   13828:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1382c:	add	fp, sp, #24
   13830:	sub	sp, sp, #768	; 0x300
   13834:	mov	r4, r2
   13838:	cmp	r1, #6
   1383c:	beq	13920 <__errno_location@plt+0x2564>
   13840:	cmp	r1, #3
   13844:	beq	13914 <__errno_location@plt+0x2558>
   13848:	cmp	r1, #0
   1384c:	bne	13948 <__errno_location@plt+0x258c>
   13850:	ldrb	r0, [r4, #72]	; 0x48
   13854:	tst	r0, #1
   13858:	beq	13990 <__errno_location@plt+0x25d4>
   1385c:	ldr	r0, [r4, #28]
   13860:	bl	1123c <rb_ssl_get_cipher@plt>
   13864:	cmp	r0, #0
   13868:	beq	13990 <__errno_location@plt+0x25d4>
   1386c:	mov	r5, sp
   13870:	mov	r1, r0
   13874:	mov	r2, #256	; 0x100
   13878:	mov	r0, r5
   1387c:	bl	111c4 <rb_strlcpy@plt>
   13880:	mov	r0, #67	; 0x43
   13884:	mov	r1, r5
   13888:	strb	r0, [sp, #256]	; 0x100
   1388c:	ldr	r0, [r4, #24]
   13890:	str	r0, [sp, #257]	; 0x101
   13894:	add	r0, sp, #256	; 0x100
   13898:	orr	r0, r0, #5
   1389c:	bl	11278 <strcpy@plt>
   138a0:	mov	r0, r5
   138a4:	bl	11230 <strlen@plt>
   138a8:	ldr	r5, [r4, #12]
   138ac:	mov	r7, r0
   138b0:	mov	r0, #1
   138b4:	mov	r1, #40	; 0x28
   138b8:	bl	111a0 <calloc@plt>
   138bc:	cmp	r0, #0
   138c0:	beq	13a94 <__errno_location@plt+0x26d8>
   138c4:	add	r7, r7, #6
   138c8:	mov	r6, r0
   138cc:	mov	r0, #1
   138d0:	mov	r1, r7
   138d4:	bl	111a0 <calloc@plt>
   138d8:	cmp	r0, #0
   138dc:	beq	13a94 <__errno_location@plt+0x26d8>
   138e0:	add	r1, sp, #256	; 0x100
   138e4:	mov	r2, r7
   138e8:	str	r0, [r6, #12]
   138ec:	str	r7, [r6, #16]
   138f0:	bl	11248 <memcpy@plt>
   138f4:	str	r6, [r6]
   138f8:	ldr	r0, [r5, #40]	; 0x28
   138fc:	cmp	r0, #0
   13900:	str	r0, [r6, #4]
   13904:	beq	13964 <__errno_location@plt+0x25a8>
   13908:	add	r0, r0, #8
   1390c:	str	r6, [r0]
   13910:	b	13974 <__errno_location@plt+0x25b8>
   13914:	movw	r2, #15603	; 0x3cf3
   13918:	movt	r2, #1
   1391c:	b	13950 <__errno_location@plt+0x2594>
   13920:	ldr	r0, [r4, #28]
   13924:	bl	112a8 <rb_get_ssl_strerror@plt>
   13928:	movw	r2, #15523	; 0x3ca3
   1392c:	mov	r3, r0
   13930:	mov	r0, r4
   13934:	mov	r1, #1
   13938:	movt	r2, #1
   1393c:	sub	sp, fp, #24
   13940:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   13944:	b	1294c <__errno_location@plt+0x1590>
   13948:	movw	r2, #15627	; 0x3d0b
   1394c:	movt	r2, #1
   13950:	mov	r0, r4
   13954:	mov	r1, #1
   13958:	sub	sp, fp, #24
   1395c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   13960:	b	1294c <__errno_location@plt+0x1590>
   13964:	mov	r0, r5
   13968:	ldr	r1, [r0, #36]!	; 0x24
   1396c:	cmp	r1, #0
   13970:	streq	r6, [r0]
   13974:	str	r6, [r5, #40]	; 0x28
   13978:	ldr	r1, [r5, #44]	; 0x2c
   1397c:	ldr	r0, [r5, #16]
   13980:	add	r1, r1, #1
   13984:	str	r1, [r5, #44]	; 0x2c
   13988:	mov	r1, r5
   1398c:	bl	12c78 <__errno_location@plt+0x18bc>
   13990:	movw	r5, #40692	; 0x9ef4
   13994:	ldr	r0, [r4, #28]
   13998:	add	r1, sp, #256	; 0x100
   1399c:	movt	r5, #2
   139a0:	add	r1, r1, #13
   139a4:	ldr	r2, [r5, #12]
   139a8:	bl	111d0 <rb_get_ssl_certfp@plt>
   139ac:	cmp	r0, #0
   139b0:	beq	13a68 <__errno_location@plt+0x26ac>
   139b4:	mov	r7, r0
   139b8:	mov	r0, #70	; 0x46
   139bc:	ldr	r1, [r5, #12]
   139c0:	strb	r0, [sp, #256]	; 0x100
   139c4:	ldr	r0, [r4, #24]
   139c8:	str	r7, [sp, #265]	; 0x109
   139cc:	str	r1, [sp, #261]	; 0x105
   139d0:	mov	r1, #40	; 0x28
   139d4:	str	r0, [sp, #257]	; 0x101
   139d8:	mov	r0, #1
   139dc:	ldr	r5, [r4, #12]
   139e0:	bl	111a0 <calloc@plt>
   139e4:	cmp	r0, #0
   139e8:	beq	13a94 <__errno_location@plt+0x26d8>
   139ec:	add	r7, r7, #13
   139f0:	mov	r6, r0
   139f4:	mov	r0, #1
   139f8:	mov	r1, r7
   139fc:	bl	111a0 <calloc@plt>
   13a00:	cmp	r0, #0
   13a04:	beq	13a94 <__errno_location@plt+0x26d8>
   13a08:	add	r1, sp, #256	; 0x100
   13a0c:	mov	r2, r7
   13a10:	str	r0, [r6, #12]
   13a14:	str	r7, [r6, #16]
   13a18:	bl	11248 <memcpy@plt>
   13a1c:	str	r6, [r6]
   13a20:	ldr	r0, [r5, #40]	; 0x28
   13a24:	cmp	r0, #0
   13a28:	str	r0, [r6, #4]
   13a2c:	beq	13a3c <__errno_location@plt+0x2680>
   13a30:	add	r0, r0, #8
   13a34:	str	r6, [r0]
   13a38:	b	13a4c <__errno_location@plt+0x2690>
   13a3c:	mov	r0, r5
   13a40:	ldr	r1, [r0, #36]!	; 0x24
   13a44:	cmp	r1, #0
   13a48:	streq	r6, [r0]
   13a4c:	str	r6, [r5, #40]	; 0x28
   13a50:	ldr	r1, [r5, #44]	; 0x2c
   13a54:	ldr	r0, [r5, #16]
   13a58:	add	r1, r1, #1
   13a5c:	str	r1, [r5, #44]	; 0x2c
   13a60:	mov	r1, r5
   13a64:	bl	12c78 <__errno_location@plt+0x18bc>
   13a68:	ldr	r0, [r4, #12]
   13a6c:	ldr	r1, [r4, #24]
   13a70:	bl	12ff8 <__errno_location@plt+0x1c3c>
   13a74:	ldr	r0, [r4, #28]
   13a78:	mov	r1, r4
   13a7c:	bl	130a0 <__errno_location@plt+0x1ce4>
   13a80:	ldr	r0, [r4, #32]
   13a84:	mov	r1, r4
   13a88:	bl	13268 <__errno_location@plt+0x1eac>
   13a8c:	sub	sp, fp, #24
   13a90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13a94:	bl	112d8 <rb_outofmemory@plt>
   13a98:	push	{fp, lr}
   13a9c:	mov	fp, sp
   13aa0:	mul	r1, r2, r1
   13aa4:	mov	r0, #1
   13aa8:	bl	111a0 <calloc@plt>
   13aac:	cmp	r0, #0
   13ab0:	popne	{fp, pc}
   13ab4:	bl	112d8 <rb_outofmemory@plt>
   13ab8:	cmp	r1, #0
   13abc:	bxeq	lr
   13ac0:	mov	r0, r1
   13ac4:	b	111f4 <free@plt>
   13ac8:	bx	lr
   13acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13ad0:	mov	r7, r0
   13ad4:	ldr	r6, [pc, #72]	; 13b24 <__errno_location@plt+0x2768>
   13ad8:	ldr	r5, [pc, #72]	; 13b28 <__errno_location@plt+0x276c>
   13adc:	add	r6, pc, r6
   13ae0:	add	r5, pc, r5
   13ae4:	sub	r6, r6, r5
   13ae8:	mov	r8, r1
   13aec:	mov	r9, r2
   13af0:	bl	11090 <open@plt-0x20>
   13af4:	asrs	r6, r6, #2
   13af8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13afc:	mov	r4, #0
   13b00:	add	r4, r4, #1
   13b04:	ldr	r3, [r5], #4
   13b08:	mov	r2, r9
   13b0c:	mov	r1, r8
   13b10:	mov	r0, r7
   13b14:	blx	r3
   13b18:	cmp	r6, r4
   13b1c:	bne	13b00 <__errno_location@plt+0x2744>
   13b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13b24:	andeq	r0, r1, r8, lsl #8
   13b28:	andeq	r0, r1, r0, lsl #8
   13b2c:	bx	lr

Disassembly of section .fini:

00013b30 <.fini>:
   13b30:	push	{r3, lr}
   13b34:	pop	{r3, pc}
