
../repos/coreutils/src/uname:     file format elf32-littlearm


Disassembly of section .init:

00010c4c <.init>:
   10c4c:	push	{r3, lr}
   10c50:	bl	10eb8 <putchar_unlocked@plt+0x48>
   10c54:	pop	{r3, pc}

Disassembly of section .plt:

00010c58 <calloc@plt-0x14>:
   10c58:	push	{lr}		; (str lr, [sp, #-4]!)
   10c5c:	ldr	lr, [pc, #4]	; 10c68 <calloc@plt-0x4>
   10c60:	add	lr, pc, lr
   10c64:	ldr	pc, [lr, #8]!
   10c68:	muleq	r1, r8, r3

00010c6c <calloc@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #86016	; 0x15000
   10c74:	ldr	pc, [ip, #920]!	; 0x398

00010c78 <fputs_unlocked@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #86016	; 0x15000
   10c80:	ldr	pc, [ip, #912]!	; 0x390

00010c84 <strcmp@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #86016	; 0x15000
   10c8c:	ldr	pc, [ip, #904]!	; 0x388

00010c90 <fflush@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #86016	; 0x15000
   10c98:	ldr	pc, [ip, #896]!	; 0x380

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #86016	; 0x15000
   10ca4:	ldr	pc, [ip, #888]!	; 0x378

00010ca8 <_exit@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #86016	; 0x15000
   10cb0:	ldr	pc, [ip, #880]!	; 0x370

00010cb4 <memcpy@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #86016	; 0x15000
   10cbc:	ldr	pc, [ip, #872]!	; 0x368

00010cc0 <mbsinit@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #86016	; 0x15000
   10cc8:	ldr	pc, [ip, #864]!	; 0x360

00010ccc <memcmp@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #86016	; 0x15000
   10cd4:	ldr	pc, [ip, #856]!	; 0x358

00010cd8 <uname@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #86016	; 0x15000
   10ce0:	ldr	pc, [ip, #848]!	; 0x350

00010ce4 <dcgettext@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #86016	; 0x15000
   10cec:	ldr	pc, [ip, #840]!	; 0x348

00010cf0 <realloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #86016	; 0x15000
   10cf8:	ldr	pc, [ip, #832]!	; 0x340

00010cfc <textdomain@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #86016	; 0x15000
   10d04:	ldr	pc, [ip, #824]!	; 0x338

00010d08 <iswprint@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #86016	; 0x15000
   10d10:	ldr	pc, [ip, #816]!	; 0x330

00010d14 <fwrite@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #86016	; 0x15000
   10d1c:	ldr	pc, [ip, #808]!	; 0x328

00010d20 <lseek64@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #86016	; 0x15000
   10d28:	ldr	pc, [ip, #800]!	; 0x320

00010d2c <__ctype_get_mb_cur_max@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #86016	; 0x15000
   10d34:	ldr	pc, [ip, #792]!	; 0x318

00010d38 <__fpending@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #86016	; 0x15000
   10d40:	ldr	pc, [ip, #784]!	; 0x310

00010d44 <ferror_unlocked@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #86016	; 0x15000
   10d4c:	ldr	pc, [ip, #776]!	; 0x308

00010d50 <mbrtowc@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #86016	; 0x15000
   10d58:	ldr	pc, [ip, #768]!	; 0x300

00010d5c <error@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #760]!	; 0x2f8

00010d68 <malloc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #752]!	; 0x2f0

00010d74 <__libc_start_main@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d80 <__freading@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #736]!	; 0x2e0

00010d8c <__gmon_start__@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #728]!	; 0x2d8

00010d98 <getopt_long@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #720]!	; 0x2d0

00010da4 <__ctype_b_loc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #712]!	; 0x2c8

00010db0 <exit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #704]!	; 0x2c0

00010dbc <strlen@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #696]!	; 0x2b8

00010dc8 <__errno_location@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd4 <__cxa_atexit@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #680]!	; 0x2a8

00010de0 <memset@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dec <__printf_chk@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #664]!	; 0x298

00010df8 <fileno@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #656]!	; 0x290

00010e04 <__fprintf_chk@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #648]!	; 0x288

00010e10 <fclose@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #640]!	; 0x280

00010e1c <fseeko64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #632]!	; 0x278

00010e28 <setlocale@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #624]!	; 0x270

00010e34 <strrchr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #616]!	; 0x268

00010e40 <nl_langinfo@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #608]!	; 0x260

00010e4c <bindtextdomain@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #600]!	; 0x258

00010e58 <strncmp@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #592]!	; 0x250

00010e64 <abort@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #584]!	; 0x248

00010e70 <putchar_unlocked@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #576]!	; 0x240

Disassembly of section .text:

00010e7c <.text>:
   10e7c:	mov	fp, #0
   10e80:	mov	lr, #0
   10e84:	pop	{r1}		; (ldr r1, [sp], #4)
   10e88:	mov	r2, sp
   10e8c:	push	{r2}		; (str r2, [sp, #-4]!)
   10e90:	push	{r0}		; (str r0, [sp, #-4]!)
   10e94:	ldr	ip, [pc, #16]	; 10eac <putchar_unlocked@plt+0x3c>
   10e98:	push	{ip}		; (str ip, [sp, #-4]!)
   10e9c:	ldr	r0, [pc, #12]	; 10eb0 <putchar_unlocked@plt+0x40>
   10ea0:	ldr	r3, [pc, #12]	; 10eb4 <putchar_unlocked@plt+0x44>
   10ea4:	bl	10d74 <__libc_start_main@plt>
   10ea8:	bl	10e64 <abort@plt>
   10eac:	andeq	r4, r1, r8, asr #10
   10eb0:	andeq	r1, r1, r8, asr #4
   10eb4:	andeq	r4, r1, r8, ror #9
   10eb8:	ldr	r3, [pc, #20]	; 10ed4 <putchar_unlocked@plt+0x64>
   10ebc:	ldr	r2, [pc, #20]	; 10ed8 <putchar_unlocked@plt+0x68>
   10ec0:	add	r3, pc, r3
   10ec4:	ldr	r2, [r3, r2]
   10ec8:	cmp	r2, #0
   10ecc:	bxeq	lr
   10ed0:	b	10d8c <__gmon_start__@plt>
   10ed4:	andeq	r5, r1, r8, lsr r1
   10ed8:	strheq	r0, [r0], -ip
   10edc:	ldr	r0, [pc, #24]	; 10efc <putchar_unlocked@plt+0x8c>
   10ee0:	ldr	r3, [pc, #24]	; 10f00 <putchar_unlocked@plt+0x90>
   10ee4:	cmp	r3, r0
   10ee8:	bxeq	lr
   10eec:	ldr	r3, [pc, #16]	; 10f04 <putchar_unlocked@plt+0x94>
   10ef0:	cmp	r3, #0
   10ef4:	bxeq	lr
   10ef8:	bx	r3
   10efc:	andeq	r6, r2, r8, lsl r1
   10f00:	andeq	r6, r2, r8, lsl r1
   10f04:	andeq	r0, r0, r0
   10f08:	ldr	r0, [pc, #36]	; 10f34 <putchar_unlocked@plt+0xc4>
   10f0c:	ldr	r1, [pc, #36]	; 10f38 <putchar_unlocked@plt+0xc8>
   10f10:	sub	r1, r1, r0
   10f14:	asr	r1, r1, #2
   10f18:	add	r1, r1, r1, lsr #31
   10f1c:	asrs	r1, r1, #1
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <putchar_unlocked@plt+0xcc>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r6, r2, r8, lsl r1
   10f38:	andeq	r6, r2, r8, lsl r1
   10f3c:	andeq	r0, r0, r0
   10f40:	push	{r4, lr}
   10f44:	ldr	r4, [pc, #24]	; 10f64 <putchar_unlocked@plt+0xf4>
   10f48:	ldrb	r3, [r4]
   10f4c:	cmp	r3, #0
   10f50:	popne	{r4, pc}
   10f54:	bl	10edc <putchar_unlocked@plt+0x6c>
   10f58:	mov	r3, #1
   10f5c:	strb	r3, [r4]
   10f60:	pop	{r4, pc}
   10f64:	andeq	r6, r2, r0, lsr r1
   10f68:	b	10f08 <putchar_unlocked@plt+0x98>
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	mov	r4, r0
   10f78:	cmp	r0, #0
   10f7c:	bne	11000 <putchar_unlocked@plt+0x190>
   10f80:	movw	r1, #17819	; 0x459b
   10f84:	movt	r1, #1
   10f88:	mov	r0, #0
   10f8c:	mov	r2, #5
   10f90:	bl	10ce4 <dcgettext@plt>
   10f94:	mov	r1, r0
   10f98:	movw	r0, #24892	; 0x613c
   10f9c:	movt	r0, #2
   10fa0:	ldr	r2, [r0]
   10fa4:	mov	r0, #1
   10fa8:	bl	10dec <__printf_chk@plt>
   10fac:	movw	r5, #24776	; 0x60c8
   10fb0:	movt	r5, #2
   10fb4:	ldr	r0, [r5]
   10fb8:	cmp	r0, #1
   10fbc:	bne	11044 <putchar_unlocked@plt+0x1d4>
   10fc0:	movw	r1, #17842	; 0x45b2
   10fc4:	movt	r1, #1
   10fc8:	mov	r0, #0
   10fcc:	mov	r2, #5
   10fd0:	bl	10ce4 <dcgettext@plt>
   10fd4:	movw	r6, #24876	; 0x612c
   10fd8:	movt	r6, #2
   10fdc:	ldr	r1, [r6]
   10fe0:	bl	10c78 <fputs_unlocked@plt>
   10fe4:	movw	r1, #18204	; 0x471c
   10fe8:	movt	r1, #1
   10fec:	mov	r0, #0
   10ff0:	mov	r2, #5
   10ff4:	bl	10ce4 <dcgettext@plt>
   10ff8:	ldr	r1, [r6]
   10ffc:	b	11064 <putchar_unlocked@plt+0x1f4>
   11000:	movw	r0, #24872	; 0x6128
   11004:	movt	r0, #2
   11008:	ldr	r5, [r0]
   1100c:	movw	r1, #17780	; 0x4574
   11010:	movt	r1, #1
   11014:	mov	r0, #0
   11018:	mov	r2, #5
   1101c:	bl	10ce4 <dcgettext@plt>
   11020:	mov	r2, r0
   11024:	movw	r0, #24892	; 0x613c
   11028:	movt	r0, #2
   1102c:	ldr	r3, [r0]
   11030:	mov	r0, r5
   11034:	mov	r1, #1
   11038:	bl	10e04 <__fprintf_chk@plt>
   1103c:	mov	r0, r4
   11040:	bl	10db0 <exit@plt>
   11044:	movw	r1, #18507	; 0x484b
   11048:	movt	r1, #1
   1104c:	mov	r0, #0
   11050:	mov	r2, #5
   11054:	bl	10ce4 <dcgettext@plt>
   11058:	movw	r1, #24876	; 0x612c
   1105c:	movt	r1, #2
   11060:	ldr	r1, [r1]
   11064:	bl	10c78 <fputs_unlocked@plt>
   11068:	movw	r1, #18537	; 0x4869
   1106c:	movt	r1, #1
   11070:	mov	r0, #0
   11074:	mov	r2, #5
   11078:	bl	10ce4 <dcgettext@plt>
   1107c:	movw	r6, #24876	; 0x612c
   11080:	movt	r6, #2
   11084:	ldr	r1, [r6]
   11088:	bl	10c78 <fputs_unlocked@plt>
   1108c:	movw	r1, #18582	; 0x4896
   11090:	movt	r1, #1
   11094:	mov	r0, #0
   11098:	mov	r2, #5
   1109c:	bl	10ce4 <dcgettext@plt>
   110a0:	ldr	r1, [r6]
   110a4:	bl	10c78 <fputs_unlocked@plt>
   110a8:	ldr	r1, [r5]
   110ac:	movw	r2, #18636	; 0x48cc
   110b0:	movt	r2, #1
   110b4:	movw	r0, #18642	; 0x48d2
   110b8:	movt	r0, #1
   110bc:	cmp	r1, #1
   110c0:	moveq	r0, r2
   110c4:	bl	110d0 <putchar_unlocked@plt+0x260>
   110c8:	mov	r0, r4
   110cc:	bl	10db0 <exit@plt>
   110d0:	push	{r4, r5, fp, lr}
   110d4:	add	fp, sp, #8
   110d8:	sub	sp, sp, #56	; 0x38
   110dc:	mov	r4, r0
   110e0:	movw	r0, #19216	; 0x4b10
   110e4:	movt	r0, #1
   110e8:	add	r1, r0, #32
   110ec:	mov	r5, sp
   110f0:	mov	r2, #48	; 0x30
   110f4:	vld1.64	{d16-d17}, [r1]
   110f8:	add	r1, r5, #32
   110fc:	add	r3, r0, #16
   11100:	vld1.64	{d18-d19}, [r0], r2
   11104:	vld1.64	{d20-d21}, [r3]
   11108:	vldr	d22, [r0]
   1110c:	vst1.64	{d16-d17}, [r1]
   11110:	add	r0, r5, #16
   11114:	vst1.64	{d20-d21}, [r0]
   11118:	mov	r0, r5
   1111c:	vst1.64	{d18-d19}, [r0], r2
   11120:	vstr	d22, [r0]
   11124:	ldr	r1, [sp]
   11128:	cmp	r1, #0
   1112c:	beq	1114c <putchar_unlocked@plt+0x2dc>
   11130:	mov	r5, sp
   11134:	mov	r0, r4
   11138:	bl	10c84 <strcmp@plt>
   1113c:	cmp	r0, #0
   11140:	ldrne	r1, [r5, #8]!
   11144:	cmpne	r1, #0
   11148:	bne	11134 <putchar_unlocked@plt+0x2c4>
   1114c:	ldr	r5, [r5, #4]
   11150:	movw	r1, #18799	; 0x496f
   11154:	movt	r1, #1
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	bl	10ce4 <dcgettext@plt>
   11164:	mov	r1, r0
   11168:	movw	r2, #18822	; 0x4986
   1116c:	movt	r2, #1
   11170:	movw	r3, #18836	; 0x4994
   11174:	movt	r3, #1
   11178:	mov	r0, #1
   1117c:	bl	10dec <__printf_chk@plt>
   11180:	cmp	r5, #0
   11184:	moveq	r5, r4
   11188:	mov	r0, #5
   1118c:	mov	r1, #0
   11190:	bl	10e28 <setlocale@plt>
   11194:	cmp	r0, #0
   11198:	beq	111d8 <putchar_unlocked@plt+0x368>
   1119c:	movw	r1, #18876	; 0x49bc
   111a0:	movt	r1, #1
   111a4:	mov	r2, #3
   111a8:	bl	10e58 <strncmp@plt>
   111ac:	cmp	r0, #0
   111b0:	beq	111d8 <putchar_unlocked@plt+0x368>
   111b4:	movw	r1, #18880	; 0x49c0
   111b8:	movt	r1, #1
   111bc:	mov	r0, #0
   111c0:	mov	r2, #5
   111c4:	bl	10ce4 <dcgettext@plt>
   111c8:	movw	r1, #24876	; 0x612c
   111cc:	movt	r1, #2
   111d0:	ldr	r1, [r1]
   111d4:	bl	10c78 <fputs_unlocked@plt>
   111d8:	movw	r1, #18951	; 0x4a07
   111dc:	movt	r1, #1
   111e0:	mov	r0, #0
   111e4:	mov	r2, #5
   111e8:	bl	10ce4 <dcgettext@plt>
   111ec:	mov	r1, r0
   111f0:	movw	r2, #18836	; 0x4994
   111f4:	movt	r2, #1
   111f8:	mov	r0, #1
   111fc:	mov	r3, r4
   11200:	bl	10dec <__printf_chk@plt>
   11204:	movw	r1, #18978	; 0x4a22
   11208:	movt	r1, #1
   1120c:	mov	r0, #0
   11210:	mov	r2, #5
   11214:	bl	10ce4 <dcgettext@plt>
   11218:	mov	r1, r0
   1121c:	movw	r0, #18732	; 0x492c
   11220:	movt	r0, #1
   11224:	movw	r3, #18536	; 0x4868
   11228:	movt	r3, #1
   1122c:	cmp	r5, r4
   11230:	moveq	r3, r0
   11234:	mov	r0, #1
   11238:	mov	r2, r5
   1123c:	bl	10dec <__printf_chk@plt>
   11240:	sub	sp, fp, #8
   11244:	pop	{r4, r5, fp, pc}
   11248:	push	{r4, r5, r6, sl, fp, lr}
   1124c:	add	fp, sp, #16
   11250:	sub	sp, sp, #392	; 0x188
   11254:	mov	r4, r1
   11258:	mov	r5, r0
   1125c:	ldr	r0, [r1]
   11260:	bl	1175c <putchar_unlocked@plt+0x8ec>
   11264:	movw	r1, #18536	; 0x4868
   11268:	movt	r1, #1
   1126c:	mov	r0, #6
   11270:	bl	10e28 <setlocale@plt>
   11274:	movw	r6, #18826	; 0x498a
   11278:	movt	r6, #1
   1127c:	movw	r1, #18647	; 0x48d7
   11280:	movt	r1, #1
   11284:	mov	r0, r6
   11288:	bl	10e4c <bindtextdomain@plt>
   1128c:	mov	r0, r6
   11290:	bl	10cfc <textdomain@plt>
   11294:	movw	r0, #5748	; 0x1674
   11298:	movt	r0, #1
   1129c:	bl	1454c <putchar_unlocked@plt+0x36dc>
   112a0:	mov	r0, r5
   112a4:	mov	r1, r4
   112a8:	bl	113a0 <putchar_unlocked@plt+0x530>
   112ac:	mov	r4, r0
   112b0:	cmp	r0, #0
   112b4:	movweq	r4, #1
   112b8:	tst	r4, #31
   112bc:	beq	11310 <putchar_unlocked@plt+0x4a0>
   112c0:	mov	r5, sp
   112c4:	mov	r0, r5
   112c8:	bl	10cd8 <uname@plt>
   112cc:	cmn	r0, #1
   112d0:	beq	11374 <putchar_unlocked@plt+0x504>
   112d4:	tst	r4, #1
   112d8:	movne	r0, sp
   112dc:	blne	11608 <putchar_unlocked@plt+0x798>
   112e0:	tst	r4, #2
   112e4:	addne	r0, r5, #65	; 0x41
   112e8:	blne	11608 <putchar_unlocked@plt+0x798>
   112ec:	tst	r4, #4
   112f0:	addne	r0, r5, #130	; 0x82
   112f4:	blne	11608 <putchar_unlocked@plt+0x798>
   112f8:	tst	r4, #8
   112fc:	addne	r0, r5, #195	; 0xc3
   11300:	blne	11608 <putchar_unlocked@plt+0x798>
   11304:	tst	r4, #16
   11308:	addne	r0, r5, #260	; 0x104
   1130c:	blne	11608 <putchar_unlocked@plt+0x798>
   11310:	cmn	r4, #1
   11314:	andsne	r0, r4, #32
   11318:	beq	11328 <putchar_unlocked@plt+0x4b8>
   1131c:	movw	r0, #19208	; 0x4b08
   11320:	movt	r0, #1
   11324:	bl	1160c <putchar_unlocked@plt+0x79c>
   11328:	cmn	r4, #1
   1132c:	andsne	r0, r4, #64	; 0x40
   11330:	bne	1135c <putchar_unlocked@plt+0x4ec>
   11334:	tst	r4, #128	; 0x80
   11338:	beq	11348 <putchar_unlocked@plt+0x4d8>
   1133c:	movw	r0, #18694	; 0x4906
   11340:	movt	r0, #1
   11344:	bl	1160c <putchar_unlocked@plt+0x79c>
   11348:	mov	r0, #10
   1134c:	bl	10e70 <putchar_unlocked@plt>
   11350:	mov	r0, #0
   11354:	sub	sp, fp, #16
   11358:	pop	{r4, r5, r6, sl, fp, pc}
   1135c:	movw	r0, #19208	; 0x4b08
   11360:	movt	r0, #1
   11364:	bl	1160c <putchar_unlocked@plt+0x79c>
   11368:	tst	r4, #128	; 0x80
   1136c:	bne	1133c <putchar_unlocked@plt+0x4cc>
   11370:	b	11348 <putchar_unlocked@plt+0x4d8>
   11374:	bl	10dc8 <__errno_location@plt>
   11378:	ldr	r4, [r0]
   1137c:	movw	r1, #18671	; 0x48ef
   11380:	movt	r1, #1
   11384:	mov	r0, #0
   11388:	mov	r2, #5
   1138c:	bl	10ce4 <dcgettext@plt>
   11390:	mov	r2, r0
   11394:	mov	r0, #1
   11398:	mov	r1, r4
   1139c:	bl	10d5c <error@plt>
   113a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113a4:	add	fp, sp, #28
   113a8:	sub	sp, sp, #12
   113ac:	mov	r4, r1
   113b0:	mov	r5, r0
   113b4:	movw	r9, #24776	; 0x60c8
   113b8:	movt	r9, #2
   113bc:	ldr	r0, [r9]
   113c0:	cmp	r0, #2
   113c4:	bne	1143c <putchar_unlocked@plt+0x5cc>
   113c8:	mov	r0, #0
   113cc:	str	r0, [sp]
   113d0:	movw	r2, #18536	; 0x4868
   113d4:	movt	r2, #1
   113d8:	movw	r3, #19272	; 0x4b48
   113dc:	movt	r3, #1
   113e0:	mov	r0, r5
   113e4:	mov	r1, r4
   113e8:	bl	10d98 <getopt_long@plt>
   113ec:	mov	r6, #16
   113f0:	cmn	r0, #1
   113f4:	beq	11530 <putchar_unlocked@plt+0x6c0>
   113f8:	cmn	r0, #3
   113fc:	bne	115f0 <putchar_unlocked@plt+0x780>
   11400:	movw	r0, #24780	; 0x60cc
   11404:	movt	r0, #2
   11408:	ldr	r3, [r0]
   1140c:	movw	r0, #24876	; 0x612c
   11410:	movt	r0, #2
   11414:	ldr	r0, [r0]
   11418:	ldr	r2, [r9]
   1141c:	mov	r1, #0
   11420:	movw	r7, #19045	; 0x4a65
   11424:	movt	r7, #1
   11428:	movw	r6, #19029	; 0x4a55
   1142c:	movt	r6, #1
   11430:	stm	sp, {r6, r7}
   11434:	str	r1, [sp, #8]
   11438:	b	115c4 <putchar_unlocked@plt+0x754>
   1143c:	mov	sl, #0
   11440:	movw	r8, #19055	; 0x4a6f
   11444:	movt	r8, #1
   11448:	movw	r7, #19320	; 0x4b78
   1144c:	movt	r7, #1
   11450:	mov	r0, #0
   11454:	b	11464 <putchar_unlocked@plt+0x5f4>
   11458:	orr	r0, r6, #2
   1145c:	b	11464 <putchar_unlocked@plt+0x5f4>
   11460:	orr	r0, r6, #1
   11464:	mov	r6, r0
   11468:	str	sl, [sp]
   1146c:	mov	r0, r5
   11470:	mov	r1, r4
   11474:	mov	r2, r8
   11478:	mov	r3, r7
   1147c:	bl	10d98 <getopt_long@plt>
   11480:	cmp	r0, #96	; 0x60
   11484:	ble	11528 <putchar_unlocked@plt+0x6b8>
   11488:	sub	r1, r0, #97	; 0x61
   1148c:	cmp	r1, #21
   11490:	bhi	11600 <putchar_unlocked@plt+0x790>
   11494:	mvn	r0, #0
   11498:	add	r2, pc, #0
   1149c:	ldr	pc, [r2, r1, lsl #2]
   114a0:	andeq	r1, r1, r4, ror #8
   114a4:	andeq	r1, r1, r0, lsl #12
   114a8:	andeq	r1, r1, r0, lsl #12
   114ac:	andeq	r1, r1, r0, lsl #12
   114b0:	andeq	r1, r1, r0, lsl #12
   114b4:	andeq	r1, r1, r0, lsl #12
   114b8:	andeq	r1, r1, r0, lsl #12
   114bc:	andeq	r1, r1, r0, lsl #12
   114c0:	strdeq	r1, [r1], -r8
   114c4:	andeq	r1, r1, r0, lsl #12
   114c8:	andeq	r1, r1, r0, lsl #12
   114cc:	andeq	r1, r1, r0, lsl #12
   114d0:	andeq	r1, r1, r8, lsl #10
   114d4:	andeq	r1, r1, r8, asr r4
   114d8:	andeq	r1, r1, r0, lsr #10
   114dc:	andeq	r1, r1, r8, lsl r5
   114e0:	andeq	r1, r1, r0, lsl #12
   114e4:	andeq	r1, r1, r0, lsl r5
   114e8:	andeq	r1, r1, r0, ror #8
   114ec:	andeq	r1, r1, r0, lsl #12
   114f0:	andeq	r1, r1, r0, lsl #12
   114f4:	andeq	r1, r1, r0, lsl #10
   114f8:	orr	r0, r6, #64	; 0x40
   114fc:	b	11464 <putchar_unlocked@plt+0x5f4>
   11500:	orr	r0, r6, #8
   11504:	b	11464 <putchar_unlocked@plt+0x5f4>
   11508:	orr	r0, r6, #16
   1150c:	b	11464 <putchar_unlocked@plt+0x5f4>
   11510:	orr	r0, r6, #4
   11514:	b	11464 <putchar_unlocked@plt+0x5f4>
   11518:	orr	r0, r6, #32
   1151c:	b	11464 <putchar_unlocked@plt+0x5f4>
   11520:	orr	r0, r6, #128	; 0x80
   11524:	b	11464 <putchar_unlocked@plt+0x5f4>
   11528:	cmn	r0, #1
   1152c:	bne	1158c <putchar_unlocked@plt+0x71c>
   11530:	movw	r7, #24864	; 0x6120
   11534:	movt	r7, #2
   11538:	ldr	r0, [r7]
   1153c:	cmp	r0, r5
   11540:	moveq	r0, r6
   11544:	subeq	sp, fp, #28
   11548:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1154c:	movw	r1, #19065	; 0x4a79
   11550:	movt	r1, #1
   11554:	mov	r0, #0
   11558:	mov	r2, #5
   1155c:	bl	10ce4 <dcgettext@plt>
   11560:	mov	r5, r0
   11564:	ldr	r0, [r7]
   11568:	ldr	r0, [r4, r0, lsl #2]
   1156c:	bl	12f94 <putchar_unlocked@plt+0x2124>
   11570:	mov	r3, r0
   11574:	mov	r0, #0
   11578:	mov	r1, #0
   1157c:	mov	r2, r5
   11580:	bl	10d5c <error@plt>
   11584:	mov	r0, #1
   11588:	bl	10f6c <putchar_unlocked@plt+0xfc>
   1158c:	cmn	r0, #3
   11590:	bne	115f0 <putchar_unlocked@plt+0x780>
   11594:	movw	r0, #24780	; 0x60cc
   11598:	movt	r0, #2
   1159c:	ldr	r3, [r0]
   115a0:	movw	r0, #24876	; 0x612c
   115a4:	movt	r0, #2
   115a8:	ldr	r0, [r0]
   115ac:	ldr	r2, [r9]
   115b0:	mov	r1, #0
   115b4:	movw	r7, #19029	; 0x4a55
   115b8:	movt	r7, #1
   115bc:	str	r7, [sp]
   115c0:	str	r1, [sp, #4]
   115c4:	movw	r7, #18636	; 0x48cc
   115c8:	movt	r7, #1
   115cc:	movw	r1, #18642	; 0x48d2
   115d0:	movt	r1, #1
   115d4:	cmp	r2, #1
   115d8:	moveq	r1, r7
   115dc:	movw	r2, #18822	; 0x4986
   115e0:	movt	r2, #1
   115e4:	bl	13764 <putchar_unlocked@plt+0x28f4>
   115e8:	mov	r0, #0
   115ec:	bl	10db0 <exit@plt>
   115f0:	cmn	r0, #2
   115f4:	bne	11600 <putchar_unlocked@plt+0x790>
   115f8:	mov	r0, #0
   115fc:	bl	10f6c <putchar_unlocked@plt+0xfc>
   11600:	mov	r0, #1
   11604:	bl	10f6c <putchar_unlocked@plt+0xfc>
   11608:	b	1160c <putchar_unlocked@plt+0x79c>
   1160c:	push	{r4, r5, fp, lr}
   11610:	add	fp, sp, #8
   11614:	mov	r4, r0
   11618:	movw	r5, #24881	; 0x6131
   1161c:	movt	r5, #2
   11620:	ldrb	r0, [r5]
   11624:	cmp	r0, #1
   11628:	bne	11634 <putchar_unlocked@plt+0x7c4>
   1162c:	mov	r0, #32
   11630:	bl	10e70 <putchar_unlocked@plt>
   11634:	mov	r0, #1
   11638:	strb	r0, [r5]
   1163c:	movw	r0, #24876	; 0x612c
   11640:	movt	r0, #2
   11644:	ldr	r1, [r0]
   11648:	mov	r0, r4
   1164c:	pop	{r4, r5, fp, lr}
   11650:	b	10c78 <fputs_unlocked@plt>
   11654:	movw	r1, #24884	; 0x6134
   11658:	movt	r1, #2
   1165c:	str	r0, [r1]
   11660:	bx	lr
   11664:	movw	r1, #24888	; 0x6138
   11668:	movt	r1, #2
   1166c:	strb	r0, [r1]
   11670:	bx	lr
   11674:	push	{r4, r5, r6, sl, fp, lr}
   11678:	add	fp, sp, #16
   1167c:	sub	sp, sp, #8
   11680:	movw	r0, #24876	; 0x612c
   11684:	movt	r0, #2
   11688:	ldr	r0, [r0]
   1168c:	bl	1405c <putchar_unlocked@plt+0x31ec>
   11690:	cmp	r0, #0
   11694:	beq	116bc <putchar_unlocked@plt+0x84c>
   11698:	movw	r0, #24888	; 0x6138
   1169c:	movt	r0, #2
   116a0:	ldrb	r0, [r0]
   116a4:	cmp	r0, #0
   116a8:	beq	116dc <putchar_unlocked@plt+0x86c>
   116ac:	bl	10dc8 <__errno_location@plt>
   116b0:	ldr	r0, [r0]
   116b4:	cmp	r0, #32
   116b8:	bne	116dc <putchar_unlocked@plt+0x86c>
   116bc:	movw	r0, #24872	; 0x6128
   116c0:	movt	r0, #2
   116c4:	ldr	r0, [r0]
   116c8:	bl	1405c <putchar_unlocked@plt+0x31ec>
   116cc:	cmp	r0, #0
   116d0:	subeq	sp, fp, #16
   116d4:	popeq	{r4, r5, r6, sl, fp, pc}
   116d8:	b	1174c <putchar_unlocked@plt+0x8dc>
   116dc:	movw	r1, #19559	; 0x4c67
   116e0:	movt	r1, #1
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	bl	10ce4 <dcgettext@plt>
   116f0:	mov	r4, r0
   116f4:	movw	r0, #24884	; 0x6134
   116f8:	movt	r0, #2
   116fc:	ldr	r6, [r0]
   11700:	bl	10dc8 <__errno_location@plt>
   11704:	ldr	r5, [r0]
   11708:	cmp	r6, #0
   1170c:	bne	11728 <putchar_unlocked@plt+0x8b8>
   11710:	movw	r2, #19575	; 0x4c77
   11714:	movt	r2, #1
   11718:	mov	r0, #0
   1171c:	mov	r1, r5
   11720:	mov	r3, r4
   11724:	b	11748 <putchar_unlocked@plt+0x8d8>
   11728:	mov	r0, r6
   1172c:	bl	12e44 <putchar_unlocked@plt+0x1fd4>
   11730:	mov	r3, r0
   11734:	str	r4, [sp]
   11738:	movw	r2, #19571	; 0x4c73
   1173c:	movt	r2, #1
   11740:	mov	r0, #0
   11744:	mov	r1, r5
   11748:	bl	10d5c <error@plt>
   1174c:	movw	r0, #24784	; 0x60d0
   11750:	movt	r0, #2
   11754:	ldr	r0, [r0]
   11758:	bl	10ca8 <_exit@plt>
   1175c:	push	{r4, r5, fp, lr}
   11760:	add	fp, sp, #8
   11764:	cmp	r0, #0
   11768:	beq	117fc <putchar_unlocked@plt+0x98c>
   1176c:	mov	r4, r0
   11770:	mov	r1, #47	; 0x2f
   11774:	bl	10e34 <strrchr@plt>
   11778:	cmp	r0, #0
   1177c:	mov	r5, r4
   11780:	addne	r5, r0, #1
   11784:	sub	r0, r5, r4
   11788:	cmp	r0, #7
   1178c:	blt	117e0 <putchar_unlocked@plt+0x970>
   11790:	sub	r0, r5, #7
   11794:	movw	r1, #19634	; 0x4cb2
   11798:	movt	r1, #1
   1179c:	mov	r2, #7
   117a0:	bl	10e58 <strncmp@plt>
   117a4:	cmp	r0, #0
   117a8:	bne	117e0 <putchar_unlocked@plt+0x970>
   117ac:	movw	r1, #19642	; 0x4cba
   117b0:	movt	r1, #1
   117b4:	mov	r0, r5
   117b8:	mov	r2, #3
   117bc:	bl	10e58 <strncmp@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	117d0 <putchar_unlocked@plt+0x960>
   117c8:	mov	r4, r5
   117cc:	b	117e0 <putchar_unlocked@plt+0x970>
   117d0:	add	r4, r5, #3
   117d4:	movw	r0, #24856	; 0x6118
   117d8:	movt	r0, #2
   117dc:	str	r4, [r0]
   117e0:	movw	r0, #24860	; 0x611c
   117e4:	movt	r0, #2
   117e8:	str	r4, [r0]
   117ec:	movw	r0, #24892	; 0x613c
   117f0:	movt	r0, #2
   117f4:	str	r4, [r0]
   117f8:	pop	{r4, r5, fp, pc}
   117fc:	movw	r0, #24872	; 0x6128
   11800:	movt	r0, #2
   11804:	ldr	r3, [r0]
   11808:	movw	r0, #19578	; 0x4c7a
   1180c:	movt	r0, #1
   11810:	mov	r1, #55	; 0x37
   11814:	mov	r2, #1
   11818:	bl	10d14 <fwrite@plt>
   1181c:	bl	10e64 <abort@plt>
   11820:	push	{r4, r5, r6, sl, fp, lr}
   11824:	add	fp, sp, #16
   11828:	mov	r4, r0
   1182c:	movw	r0, #24896	; 0x6140
   11830:	movt	r0, #2
   11834:	cmp	r4, #0
   11838:	moveq	r4, r0
   1183c:	bl	10dc8 <__errno_location@plt>
   11840:	mov	r5, r0
   11844:	ldr	r6, [r0]
   11848:	mov	r0, r4
   1184c:	mov	r1, #48	; 0x30
   11850:	bl	13b60 <putchar_unlocked@plt+0x2cf0>
   11854:	str	r6, [r5]
   11858:	pop	{r4, r5, r6, sl, fp, pc}
   1185c:	movw	r1, #24896	; 0x6140
   11860:	movt	r1, #2
   11864:	cmp	r0, #0
   11868:	movne	r1, r0
   1186c:	ldr	r0, [r1]
   11870:	bx	lr
   11874:	movw	r2, #24896	; 0x6140
   11878:	movt	r2, #2
   1187c:	cmp	r0, #0
   11880:	movne	r2, r0
   11884:	str	r1, [r2]
   11888:	bx	lr
   1188c:	movw	r3, #24896	; 0x6140
   11890:	movt	r3, #2
   11894:	cmp	r0, #0
   11898:	movne	r3, r0
   1189c:	ubfx	r0, r1, #5, #3
   118a0:	add	r0, r3, r0, lsl #2
   118a4:	ldr	r3, [r0, #8]
   118a8:	and	r1, r1, #31
   118ac:	eor	r2, r2, r3, lsr r1
   118b0:	and	r2, r2, #1
   118b4:	eor	r2, r3, r2, lsl r1
   118b8:	str	r2, [r0, #8]
   118bc:	mov	r0, #1
   118c0:	and	r0, r0, r3, lsr r1
   118c4:	bx	lr
   118c8:	movw	r2, #24896	; 0x6140
   118cc:	movt	r2, #2
   118d0:	cmp	r0, #0
   118d4:	movne	r2, r0
   118d8:	ldr	r0, [r2, #4]
   118dc:	str	r1, [r2, #4]
   118e0:	bx	lr
   118e4:	movw	r3, #24896	; 0x6140
   118e8:	movt	r3, #2
   118ec:	cmp	r0, #0
   118f0:	movne	r3, r0
   118f4:	mov	r0, #10
   118f8:	str	r0, [r3]
   118fc:	cmp	r1, #0
   11900:	cmpne	r2, #0
   11904:	bne	11914 <putchar_unlocked@plt+0xaa4>
   11908:	push	{fp, lr}
   1190c:	mov	fp, sp
   11910:	bl	10e64 <abort@plt>
   11914:	str	r1, [r3, #40]	; 0x28
   11918:	str	r2, [r3, #44]	; 0x2c
   1191c:	bx	lr
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11924:	add	fp, sp, #28
   11928:	sub	sp, sp, #20
   1192c:	mov	r8, r3
   11930:	mov	r9, r2
   11934:	mov	sl, r1
   11938:	mov	r7, r0
   1193c:	ldr	r0, [fp, #8]
   11940:	movw	r5, #24896	; 0x6140
   11944:	movt	r5, #2
   11948:	cmp	r0, #0
   1194c:	movne	r5, r0
   11950:	bl	10dc8 <__errno_location@plt>
   11954:	mov	r4, r0
   11958:	ldm	r5, {r0, r1}
   1195c:	ldr	r2, [r5, #40]	; 0x28
   11960:	ldr	r3, [r5, #44]	; 0x2c
   11964:	ldr	r6, [r4]
   11968:	add	r5, r5, #8
   1196c:	stm	sp, {r0, r1, r5}
   11970:	str	r2, [sp, #12]
   11974:	str	r3, [sp, #16]
   11978:	mov	r0, r7
   1197c:	mov	r1, sl
   11980:	mov	r2, r9
   11984:	mov	r3, r8
   11988:	bl	11998 <putchar_unlocked@plt+0xb28>
   1198c:	str	r6, [r4]
   11990:	sub	sp, fp, #28
   11994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1199c:	add	fp, sp, #28
   119a0:	sub	sp, sp, #156	; 0x9c
   119a4:	mov	r9, r3
   119a8:	str	r2, [fp, #-84]	; 0xffffffac
   119ac:	mov	r6, r1
   119b0:	mov	r7, r0
   119b4:	ldr	r0, [fp, #12]
   119b8:	and	r1, r0, #4
   119bc:	str	r1, [sp, #32]
   119c0:	and	r1, r0, #1
   119c4:	str	r1, [sp, #36]	; 0x24
   119c8:	ubfx	sl, r0, #1, #1
   119cc:	bl	10d2c <__ctype_get_mb_cur_max@plt>
   119d0:	str	r0, [sp, #40]	; 0x28
   119d4:	ldr	r0, [fp, #24]
   119d8:	str	r0, [sp, #76]	; 0x4c
   119dc:	ldr	r0, [fp, #20]
   119e0:	str	r0, [sp, #68]	; 0x44
   119e4:	ldr	r0, [fp, #8]
   119e8:	str	r0, [fp, #-60]	; 0xffffffc4
   119ec:	mov	r0, #0
   119f0:	str	r0, [sp, #72]	; 0x48
   119f4:	mov	r0, #0
   119f8:	str	r0, [sp, #92]	; 0x5c
   119fc:	mov	r0, #0
   11a00:	str	r0, [fp, #-72]	; 0xffffffb8
   11a04:	mov	r0, #0
   11a08:	mov	r1, #0
   11a0c:	str	r1, [fp, #-56]	; 0xffffffc8
   11a10:	mov	r1, #0
   11a14:	str	r1, [sp, #56]	; 0x38
   11a18:	mov	r5, #1
   11a1c:	str	r7, [sp, #80]	; 0x50
   11a20:	mov	r4, r6
   11a24:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11a28:	cmp	r6, #10
   11a2c:	bhi	12994 <putchar_unlocked@plt+0x1b24>
   11a30:	add	r1, pc, #20
   11a34:	mov	r8, #0
   11a38:	mov	r2, #1
   11a3c:	mov	r3, #0
   11a40:	ldr	ip, [fp, #-84]	; 0xffffffac
   11a44:	mov	lr, r9
   11a48:	ldr	pc, [r1, r6, lsl #2]
   11a4c:	andeq	r1, r1, r4, lsr #22
   11a50:	andeq	r1, r1, r4, asr fp
   11a54:	andeq	r1, r1, r4, lsl fp
   11a58:	andeq	r1, r1, ip, lsl #22
   11a5c:	andeq	r1, r1, r8, asr #22
   11a60:	andeq	r1, r1, r8, lsr #23
   11a64:	andeq	r1, r1, r4, lsr fp
   11a68:	andeq	r1, r1, r4, lsl #24
   11a6c:	andeq	r1, r1, r8, ror sl
   11a70:	andeq	r1, r1, r8, ror sl
   11a74:	andeq	r1, r1, r0, lsr #21
   11a78:	movw	r0, #19726	; 0x4d0e
   11a7c:	movt	r0, #1
   11a80:	mov	r1, r6
   11a84:	bl	12fa0 <putchar_unlocked@plt+0x2130>
   11a88:	str	r0, [sp, #68]	; 0x44
   11a8c:	movw	r0, #19728	; 0x4d10
   11a90:	movt	r0, #1
   11a94:	mov	r1, r6
   11a98:	bl	12fa0 <putchar_unlocked@plt+0x2130>
   11a9c:	str	r0, [sp, #76]	; 0x4c
   11aa0:	mov	r8, #0
   11aa4:	tst	sl, #1
   11aa8:	bne	11ae0 <putchar_unlocked@plt+0xc70>
   11aac:	ldr	r0, [sp, #68]	; 0x44
   11ab0:	ldrb	r0, [r0]
   11ab4:	cmp	r0, #0
   11ab8:	beq	11ae0 <putchar_unlocked@plt+0xc70>
   11abc:	ldr	r1, [sp, #68]	; 0x44
   11ac0:	add	r1, r1, #1
   11ac4:	mov	r8, #0
   11ac8:	cmp	r8, r4
   11acc:	strbcc	r0, [r7, r8]
   11ad0:	ldrb	r0, [r1, r8]
   11ad4:	add	r8, r8, #1
   11ad8:	cmp	r0, #0
   11adc:	bne	11ac8 <putchar_unlocked@plt+0xc58>
   11ae0:	ldr	r6, [sp, #76]	; 0x4c
   11ae4:	mov	r0, r6
   11ae8:	bl	10dbc <strlen@plt>
   11aec:	str	r0, [fp, #-72]	; 0xffffffb8
   11af0:	str	r6, [sp, #92]	; 0x5c
   11af4:	mov	r2, #1
   11af8:	mov	r3, sl
   11afc:	ldr	ip, [fp, #-84]	; 0xffffffac
   11b00:	mov	lr, r9
   11b04:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11b08:	b	11c04 <putchar_unlocked@plt+0xd94>
   11b0c:	mov	r0, #1
   11b10:	b	11b54 <putchar_unlocked@plt+0xce4>
   11b14:	tst	sl, #1
   11b18:	bne	11b54 <putchar_unlocked@plt+0xce4>
   11b1c:	mov	r2, r0
   11b20:	b	11b7c <putchar_unlocked@plt+0xd0c>
   11b24:	mov	r6, #0
   11b28:	mov	r8, #0
   11b2c:	mov	r2, r0
   11b30:	b	11c00 <putchar_unlocked@plt+0xd90>
   11b34:	mov	r0, #1
   11b38:	str	r0, [fp, #-72]	; 0xffffffb8
   11b3c:	mov	r8, #0
   11b40:	mov	r6, #5
   11b44:	b	11bc0 <putchar_unlocked@plt+0xd50>
   11b48:	mov	r2, #1
   11b4c:	tst	sl, #1
   11b50:	beq	11b7c <putchar_unlocked@plt+0xd0c>
   11b54:	mov	r1, #1
   11b58:	str	r1, [fp, #-72]	; 0xffffffb8
   11b5c:	mov	r8, #0
   11b60:	mov	r6, #2
   11b64:	movw	r1, #19728	; 0x4d10
   11b68:	movt	r1, #1
   11b6c:	str	r1, [sp, #92]	; 0x5c
   11b70:	mov	r2, r0
   11b74:	mov	r3, #1
   11b78:	b	11c04 <putchar_unlocked@plt+0xd94>
   11b7c:	mov	r8, #1
   11b80:	mov	r6, #2
   11b84:	cmp	r4, #0
   11b88:	movne	r0, #39	; 0x27
   11b8c:	strbne	r0, [r7]
   11b90:	movw	r0, #19728	; 0x4d10
   11b94:	movt	r0, #1
   11b98:	str	r0, [sp, #92]	; 0x5c
   11b9c:	mov	r0, #1
   11ba0:	str	r0, [fp, #-72]	; 0xffffffb8
   11ba4:	b	11c00 <putchar_unlocked@plt+0xd90>
   11ba8:	mov	r6, #5
   11bac:	tst	sl, #1
   11bb0:	beq	11bd8 <putchar_unlocked@plt+0xd68>
   11bb4:	mov	r0, #1
   11bb8:	str	r0, [fp, #-72]	; 0xffffffb8
   11bbc:	mov	r8, #0
   11bc0:	movw	r0, #19724	; 0x4d0c
   11bc4:	movt	r0, #1
   11bc8:	str	r0, [sp, #92]	; 0x5c
   11bcc:	mov	r2, #1
   11bd0:	mov	r3, #1
   11bd4:	b	11c04 <putchar_unlocked@plt+0xd94>
   11bd8:	cmp	r4, #0
   11bdc:	movne	r0, #34	; 0x22
   11be0:	strbne	r0, [r7]
   11be4:	mov	r8, #1
   11be8:	movw	r0, #19724	; 0x4d0c
   11bec:	movt	r0, #1
   11bf0:	str	r0, [sp, #92]	; 0x5c
   11bf4:	mov	r0, #1
   11bf8:	str	r0, [fp, #-72]	; 0xffffffb8
   11bfc:	mov	r2, #1
   11c00:	mov	r3, #0
   11c04:	ldr	r0, [fp, #16]
   11c08:	cmp	r0, #0
   11c0c:	movwne	r0, #1
   11c10:	and	r0, r0, r3
   11c14:	str	r0, [fp, #-88]	; 0xffffffa8
   11c18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11c1c:	cmp	r0, #0
   11c20:	movwne	r0, #1
   11c24:	and	r1, r0, r3
   11c28:	and	r1, r2, r1
   11c2c:	str	r1, [sp, #48]	; 0x30
   11c30:	str	r6, [fp, #-60]	; 0xffffffc4
   11c34:	subs	r6, r6, #2
   11c38:	clz	r1, r6
   11c3c:	lsr	r1, r1, #5
   11c40:	and	r1, r1, r3
   11c44:	str	r1, [sp, #60]	; 0x3c
   11c48:	str	r6, [fp, #-80]	; 0xffffffb0
   11c4c:	mov	r1, r6
   11c50:	movwne	r1, #1
   11c54:	str	r3, [fp, #-76]	; 0xffffffb4
   11c58:	eor	r3, r3, #1
   11c5c:	str	r3, [sp, #88]	; 0x58
   11c60:	orr	r3, r1, r3
   11c64:	str	r3, [sp, #64]	; 0x40
   11c68:	and	r1, r1, r2
   11c6c:	str	r1, [fp, #-68]	; 0xffffffbc
   11c70:	and	r0, r0, r1
   11c74:	str	r0, [fp, #-64]	; 0xffffffc0
   11c78:	str	r2, [sp, #84]	; 0x54
   11c7c:	eor	r0, r2, #1
   11c80:	str	r0, [sp, #52]	; 0x34
   11c84:	mov	r6, #0
   11c88:	cmn	lr, #1
   11c8c:	beq	11c9c <putchar_unlocked@plt+0xe2c>
   11c90:	cmp	r6, lr
   11c94:	bne	11ca8 <putchar_unlocked@plt+0xe38>
   11c98:	b	12814 <putchar_unlocked@plt+0x19a4>
   11c9c:	ldrb	r0, [ip, r6]
   11ca0:	cmp	r0, #0
   11ca4:	beq	12814 <putchar_unlocked@plt+0x19a4>
   11ca8:	str	r5, [fp, #-48]	; 0xffffffd0
   11cac:	mov	sl, #0
   11cb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11cb4:	cmp	r0, #0
   11cb8:	beq	11cec <putchar_unlocked@plt+0xe7c>
   11cbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11cc0:	add	r5, r6, r0
   11cc4:	cmp	r0, #2
   11cc8:	bcc	11ce4 <putchar_unlocked@plt+0xe74>
   11ccc:	cmn	lr, #1
   11cd0:	bne	11ce4 <putchar_unlocked@plt+0xe74>
   11cd4:	mov	r0, ip
   11cd8:	bl	10dbc <strlen@plt>
   11cdc:	ldr	ip, [fp, #-84]	; 0xffffffac
   11ce0:	mov	lr, r0
   11ce4:	cmp	r5, lr
   11ce8:	bls	11cf8 <putchar_unlocked@plt+0xe88>
   11cec:	mov	r0, #0
   11cf0:	str	r0, [fp, #-52]	; 0xffffffcc
   11cf4:	b	11d44 <putchar_unlocked@plt+0xed4>
   11cf8:	mov	r5, r4
   11cfc:	mov	r4, lr
   11d00:	add	r0, ip, r6
   11d04:	ldr	r1, [sp, #92]	; 0x5c
   11d08:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11d0c:	bl	10ccc <memcmp@plt>
   11d10:	cmp	r0, #0
   11d14:	mov	r1, r0
   11d18:	movwne	r1, #1
   11d1c:	ldr	r2, [sp, #88]	; 0x58
   11d20:	orr	r1, r1, r2
   11d24:	tst	r1, #1
   11d28:	beq	128d8 <putchar_unlocked@plt+0x1a68>
   11d2c:	clz	r0, r0
   11d30:	lsr	r0, r0, #5
   11d34:	str	r0, [fp, #-52]	; 0xffffffcc
   11d38:	ldr	ip, [fp, #-84]	; 0xffffffac
   11d3c:	mov	lr, r4
   11d40:	mov	r4, r5
   11d44:	ldrb	r5, [ip, r6]
   11d48:	cmp	r5, #126	; 0x7e
   11d4c:	bhi	12108 <putchar_unlocked@plt+0x1298>
   11d50:	mov	r9, #1
   11d54:	mov	r2, #110	; 0x6e
   11d58:	mov	r0, #97	; 0x61
   11d5c:	add	r3, pc, #4
   11d60:	mov	r1, #0
   11d64:	ldr	pc, [r3, r5, lsl #2]
   11d68:	andeq	r2, r1, r0
   11d6c:	andeq	r2, r1, r8, lsl #2
   11d70:	andeq	r2, r1, r8, lsl #2
   11d74:	andeq	r2, r1, r8, lsl #2
   11d78:	andeq	r2, r1, r8, lsl #2
   11d7c:	andeq	r2, r1, r8, lsl #2
   11d80:	andeq	r2, r1, r8, lsl #2
   11d84:	andeq	r2, r1, ip, asr #3
   11d88:	andeq	r1, r1, r0, ror #31
   11d8c:	ldrdeq	r1, [r1], -r8
   11d90:	andeq	r1, r1, ip, ror #31
   11d94:	andeq	r2, r1, r0, ror r0
   11d98:	ldrdeq	r1, [r1], -r0
   11d9c:	andeq	r1, r1, r8, ror #31
   11da0:	andeq	r2, r1, r8, lsl #2
   11da4:	andeq	r2, r1, r8, lsl #2
   11da8:	andeq	r2, r1, r8, lsl #2
   11dac:	andeq	r2, r1, r8, lsl #2
   11db0:	andeq	r2, r1, r8, lsl #2
   11db4:	andeq	r2, r1, r8, lsl #2
   11db8:	andeq	r2, r1, r8, lsl #2
   11dbc:	andeq	r2, r1, r8, lsl #2
   11dc0:	andeq	r2, r1, r8, lsl #2
   11dc4:	andeq	r2, r1, r8, lsl #2
   11dc8:	andeq	r2, r1, r8, lsl #2
   11dcc:	andeq	r2, r1, r8, lsl #2
   11dd0:	andeq	r2, r1, r8, lsl #2
   11dd4:	andeq	r2, r1, r8, lsl #2
   11dd8:	andeq	r2, r1, r8, lsl #2
   11ddc:	andeq	r2, r1, r8, lsl #2
   11de0:	andeq	r2, r1, r8, lsl #2
   11de4:	andeq	r2, r1, r8, lsl #2
   11de8:	andeq	r2, r1, ip, ror r1
   11dec:	andeq	r2, r1, r0, lsl #3
   11df0:	andeq	r2, r1, r0, lsl #3
   11df4:	andeq	r1, r1, r8, ror pc
   11df8:	andeq	r2, r1, r0, lsl #3
   11dfc:	andeq	r1, r1, r4, ror #30
   11e00:	andeq	r2, r1, r0, lsl #3
   11e04:	andeq	r2, r1, r8, ror r0
   11e08:	andeq	r2, r1, r0, lsl #3
   11e0c:	andeq	r2, r1, r0, lsl #3
   11e10:	andeq	r2, r1, r0, lsl #3
   11e14:	andeq	r1, r1, r4, ror #30
   11e18:	andeq	r1, r1, r4, ror #30
   11e1c:	andeq	r1, r1, r4, ror #30
   11e20:	andeq	r1, r1, r4, ror #30
   11e24:	andeq	r1, r1, r4, ror #30
   11e28:	andeq	r1, r1, r4, ror #30
   11e2c:	andeq	r1, r1, r4, ror #30
   11e30:	andeq	r1, r1, r4, ror #30
   11e34:	andeq	r1, r1, r4, ror #30
   11e38:	andeq	r1, r1, r4, ror #30
   11e3c:	andeq	r1, r1, r4, ror #30
   11e40:	andeq	r1, r1, r4, ror #30
   11e44:	andeq	r1, r1, r4, ror #30
   11e48:	andeq	r1, r1, r4, ror #30
   11e4c:	andeq	r1, r1, r4, ror #30
   11e50:	andeq	r1, r1, r4, ror #30
   11e54:	andeq	r2, r1, r0, lsl #3
   11e58:	andeq	r2, r1, r0, lsl #3
   11e5c:	andeq	r2, r1, r0, lsl #3
   11e60:	andeq	r2, r1, r0, lsl #3
   11e64:	andeq	r2, r1, r0, asr #32
   11e68:	andeq	r2, r1, r8, lsl #2
   11e6c:	andeq	r1, r1, r4, ror #30
   11e70:	andeq	r1, r1, r4, ror #30
   11e74:	andeq	r1, r1, r4, ror #30
   11e78:	andeq	r1, r1, r4, ror #30
   11e7c:	andeq	r1, r1, r4, ror #30
   11e80:	andeq	r1, r1, r4, ror #30
   11e84:	andeq	r1, r1, r4, ror #30
   11e88:	andeq	r1, r1, r4, ror #30
   11e8c:	andeq	r1, r1, r4, ror #30
   11e90:	andeq	r1, r1, r4, ror #30
   11e94:	andeq	r1, r1, r4, ror #30
   11e98:	andeq	r1, r1, r4, ror #30
   11e9c:	andeq	r1, r1, r4, ror #30
   11ea0:	andeq	r1, r1, r4, ror #30
   11ea4:	andeq	r1, r1, r4, ror #30
   11ea8:	andeq	r1, r1, r4, ror #30
   11eac:	andeq	r1, r1, r4, ror #30
   11eb0:	andeq	r1, r1, r4, ror #30
   11eb4:	andeq	r1, r1, r4, ror #30
   11eb8:	andeq	r1, r1, r4, ror #30
   11ebc:	andeq	r1, r1, r4, ror #30
   11ec0:	andeq	r1, r1, r4, ror #30
   11ec4:	andeq	r1, r1, r4, ror #30
   11ec8:	andeq	r1, r1, r4, ror #30
   11ecc:	andeq	r1, r1, r4, ror #30
   11ed0:	andeq	r1, r1, r4, ror #30
   11ed4:	andeq	r2, r1, r0, lsl #3
   11ed8:	andeq	r1, r1, ip, lsr #31
   11edc:	andeq	r1, r1, r4, ror #30
   11ee0:	andeq	r2, r1, r0, lsl #3
   11ee4:	andeq	r1, r1, r4, ror #30
   11ee8:	andeq	r2, r1, r0, lsl #3
   11eec:	andeq	r1, r1, r4, ror #30
   11ef0:	andeq	r1, r1, r4, ror #30
   11ef4:	andeq	r1, r1, r4, ror #30
   11ef8:	andeq	r1, r1, r4, ror #30
   11efc:	andeq	r1, r1, r4, ror #30
   11f00:	andeq	r1, r1, r4, ror #30
   11f04:	andeq	r1, r1, r4, ror #30
   11f08:	andeq	r1, r1, r4, ror #30
   11f0c:	andeq	r1, r1, r4, ror #30
   11f10:	andeq	r1, r1, r4, ror #30
   11f14:	andeq	r1, r1, r4, ror #30
   11f18:	andeq	r1, r1, r4, ror #30
   11f1c:	andeq	r1, r1, r4, ror #30
   11f20:	andeq	r1, r1, r4, ror #30
   11f24:	andeq	r1, r1, r4, ror #30
   11f28:	andeq	r1, r1, r4, ror #30
   11f2c:	andeq	r1, r1, r4, ror #30
   11f30:	andeq	r1, r1, r4, ror #30
   11f34:	andeq	r1, r1, r4, ror #30
   11f38:	andeq	r1, r1, r4, ror #30
   11f3c:	andeq	r1, r1, r4, ror #30
   11f40:	andeq	r1, r1, r4, ror #30
   11f44:	andeq	r1, r1, r4, ror #30
   11f48:	andeq	r1, r1, r4, ror #30
   11f4c:	andeq	r1, r1, r4, ror #30
   11f50:	andeq	r1, r1, r4, ror #30
   11f54:	andeq	r1, r1, ip, lsl #31
   11f58:	andeq	r2, r1, r0, lsl #3
   11f5c:	andeq	r1, r1, ip, lsl #31
   11f60:	andeq	r1, r1, r8, ror pc
   11f64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11f68:	cmp	r0, #0
   11f6c:	beq	121e0 <putchar_unlocked@plt+0x1370>
   11f70:	ldr	r0, [fp, #16]
   11f74:	b	121e4 <putchar_unlocked@plt+0x1374>
   11f78:	mov	r9, #0
   11f7c:	cmp	r6, #0
   11f80:	beq	1217c <putchar_unlocked@plt+0x130c>
   11f84:	mov	sl, #0
   11f88:	b	11f64 <putchar_unlocked@plt+0x10f4>
   11f8c:	mov	r9, #0
   11f90:	cmn	lr, #1
   11f94:	beq	12160 <putchar_unlocked@plt+0x12f0>
   11f98:	cmp	r6, #0
   11f9c:	bne	11f84 <putchar_unlocked@plt+0x1114>
   11fa0:	cmp	lr, #1
   11fa4:	beq	1217c <putchar_unlocked@plt+0x130c>
   11fa8:	b	11f84 <putchar_unlocked@plt+0x1114>
   11fac:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11fb0:	cmp	r0, #2
   11fb4:	bne	121a8 <putchar_unlocked@plt+0x1338>
   11fb8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11fbc:	tst	r0, #1
   11fc0:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   11fc4:	mov	sl, #0
   11fc8:	mov	r0, #92	; 0x5c
   11fcc:	b	121bc <putchar_unlocked@plt+0x134c>
   11fd0:	mov	r0, #102	; 0x66
   11fd4:	b	121cc <putchar_unlocked@plt+0x135c>
   11fd8:	mov	r2, #116	; 0x74
   11fdc:	b	11fec <putchar_unlocked@plt+0x117c>
   11fe0:	mov	r0, #98	; 0x62
   11fe4:	b	121cc <putchar_unlocked@plt+0x135c>
   11fe8:	mov	r2, #114	; 0x72
   11fec:	ldr	r0, [sp, #64]	; 0x40
   11ff0:	tst	r0, #1
   11ff4:	mov	r0, r2
   11ff8:	bne	121cc <putchar_unlocked@plt+0x135c>
   11ffc:	b	128f0 <putchar_unlocked@plt+0x1a80>
   12000:	ldr	r0, [sp, #84]	; 0x54
   12004:	tst	r0, #1
   12008:	beq	122bc <putchar_unlocked@plt+0x144c>
   1200c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12010:	tst	r0, #1
   12014:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   12018:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1201c:	cmp	r0, #2
   12020:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12024:	movwne	r0, #1
   12028:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1202c:	orr	r0, r0, r2
   12030:	tst	r0, #1
   12034:	beq	126b0 <putchar_unlocked@plt+0x1840>
   12038:	mov	r0, r8
   1203c:	b	126e4 <putchar_unlocked@plt+0x1874>
   12040:	mov	sl, #0
   12044:	mov	r5, #63	; 0x3f
   12048:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1204c:	cmp	r0, #5
   12050:	beq	12470 <putchar_unlocked@plt+0x1600>
   12054:	cmp	r0, #2
   12058:	bne	12510 <putchar_unlocked@plt+0x16a0>
   1205c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12060:	tst	r0, #1
   12064:	mov	r9, #0
   12068:	beq	11f64 <putchar_unlocked@plt+0x10f4>
   1206c:	b	128f0 <putchar_unlocked@plt+0x1a80>
   12070:	mov	r0, #118	; 0x76
   12074:	b	121cc <putchar_unlocked@plt+0x135c>
   12078:	mov	r5, #39	; 0x27
   1207c:	mov	r0, #1
   12080:	str	r0, [sp, #56]	; 0x38
   12084:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12088:	cmp	r0, #2
   1208c:	bne	122dc <putchar_unlocked@plt+0x146c>
   12090:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12094:	tst	r0, #1
   12098:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   1209c:	ldr	r2, [sp, #72]	; 0x48
   120a0:	cmp	r2, #0
   120a4:	mov	r0, r2
   120a8:	movwne	r0, #1
   120ac:	clz	r1, r4
   120b0:	lsr	r1, r1, #5
   120b4:	orrs	r0, r0, r1
   120b8:	moveq	r2, r4
   120bc:	str	r2, [sp, #72]	; 0x48
   120c0:	moveq	r4, r0
   120c4:	cmp	r8, r4
   120c8:	movcc	r0, #39	; 0x27
   120cc:	strbcc	r0, [r7, r8]
   120d0:	add	r0, r8, #1
   120d4:	cmp	r0, r4
   120d8:	movcc	r1, #92	; 0x5c
   120dc:	strbcc	r1, [r7, r0]
   120e0:	add	r0, r8, #2
   120e4:	cmp	r0, r4
   120e8:	movcc	r1, #39	; 0x27
   120ec:	strbcc	r1, [r7, r0]
   120f0:	add	r8, r8, #3
   120f4:	mov	r0, #0
   120f8:	str	r0, [fp, #-56]	; 0xffffffc8
   120fc:	mov	sl, #0
   12100:	mov	r9, #1
   12104:	b	11f64 <putchar_unlocked@plt+0x10f4>
   12108:	str	r4, [sp, #24]
   1210c:	ldr	r0, [sp, #40]	; 0x28
   12110:	cmp	r0, #1
   12114:	bne	122e4 <putchar_unlocked@plt+0x1474>
   12118:	str	lr, [sp, #28]
   1211c:	bl	10da4 <__ctype_b_loc@plt>
   12120:	ldr	ip, [fp, #-84]	; 0xffffffac
   12124:	ldr	r0, [r0]
   12128:	add	r0, r0, r5, lsl #1
   1212c:	ldrb	r0, [r0, #1]
   12130:	ubfx	r9, r0, #6, #1
   12134:	mov	r1, #1
   12138:	ldr	r4, [sp, #24]
   1213c:	ldr	r0, [sp, #52]	; 0x34
   12140:	orr	r0, r9, r0
   12144:	mov	r2, r1
   12148:	cmp	r1, #1
   1214c:	bhi	12518 <putchar_unlocked@plt+0x16a8>
   12150:	tst	r0, #1
   12154:	beq	12518 <putchar_unlocked@plt+0x16a8>
   12158:	ldr	lr, [sp, #28]
   1215c:	b	11f64 <putchar_unlocked@plt+0x10f4>
   12160:	cmp	r6, #0
   12164:	ldrbeq	r0, [ip, #1]
   12168:	cmpeq	r0, #0
   1216c:	beq	1217c <putchar_unlocked@plt+0x130c>
   12170:	mvn	lr, #0
   12174:	mov	sl, #0
   12178:	b	11f64 <putchar_unlocked@plt+0x10f4>
   1217c:	mov	r1, #1
   12180:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12184:	cmp	r0, #2
   12188:	bne	121a0 <putchar_unlocked@plt+0x1330>
   1218c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12190:	tst	r0, #1
   12194:	mov	r9, r1
   12198:	beq	11f64 <putchar_unlocked@plt+0x10f4>
   1219c:	b	128f0 <putchar_unlocked@plt+0x1a80>
   121a0:	mov	r9, r1
   121a4:	b	11f64 <putchar_unlocked@plt+0x10f4>
   121a8:	mov	sl, #0
   121ac:	mov	r0, #92	; 0x5c
   121b0:	ldr	r1, [sp, #48]	; 0x30
   121b4:	cmp	r1, #0
   121b8:	beq	121cc <putchar_unlocked@plt+0x135c>
   121bc:	mov	r9, #0
   121c0:	cmp	sl, #0
   121c4:	beq	1277c <putchar_unlocked@plt+0x190c>
   121c8:	b	127b8 <putchar_unlocked@plt+0x1948>
   121cc:	mov	r9, #0
   121d0:	ldr	r1, [sp, #84]	; 0x54
   121d4:	tst	r1, #1
   121d8:	mov	sl, #0
   121dc:	bne	1221c <putchar_unlocked@plt+0x13ac>
   121e0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   121e4:	cmp	r0, #0
   121e8:	mov	r0, r5
   121ec:	beq	12210 <putchar_unlocked@plt+0x13a0>
   121f0:	ubfx	r0, r5, #5, #3
   121f4:	ldr	r1, [fp, #16]
   121f8:	ldr	r0, [r1, r0, lsl #2]
   121fc:	and	r1, r5, #31
   12200:	mov	r2, #1
   12204:	tst	r0, r2, lsl r1
   12208:	mov	r0, r5
   1220c:	bne	1221c <putchar_unlocked@plt+0x13ac>
   12210:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12214:	cmp	r1, #0
   12218:	beq	12774 <putchar_unlocked@plt+0x1904>
   1221c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12220:	tst	r1, #1
   12224:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   12228:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1222c:	cmp	r1, #2
   12230:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12234:	movwne	r1, #1
   12238:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1223c:	orr	r1, r1, r2
   12240:	tst	r1, #1
   12244:	beq	12250 <putchar_unlocked@plt+0x13e0>
   12248:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1224c:	b	1228c <putchar_unlocked@plt+0x141c>
   12250:	cmp	r8, r4
   12254:	movcc	r1, #39	; 0x27
   12258:	strbcc	r1, [r7, r8]
   1225c:	add	r1, r8, #1
   12260:	cmp	r1, r4
   12264:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12268:	movcc	r2, #36	; 0x24
   1226c:	strbcc	r2, [r7, r1]
   12270:	add	r1, r8, #2
   12274:	cmp	r1, r4
   12278:	movcc	r2, #39	; 0x27
   1227c:	strbcc	r2, [r7, r1]
   12280:	add	r8, r8, #3
   12284:	mov	r1, #1
   12288:	str	r1, [fp, #-56]	; 0xffffffc8
   1228c:	cmp	r8, r4
   12290:	movcc	r1, #92	; 0x5c
   12294:	strbcc	r1, [r7, r8]
   12298:	add	r8, r8, #1
   1229c:	cmp	r8, r4
   122a0:	strbcc	r0, [r7, r8]
   122a4:	and	r5, r5, r9
   122a8:	add	r8, r8, #1
   122ac:	add	r6, r6, #1
   122b0:	cmn	lr, #1
   122b4:	bne	11c90 <putchar_unlocked@plt+0xe20>
   122b8:	b	11c9c <putchar_unlocked@plt+0xe2c>
   122bc:	mov	r9, #0
   122c0:	ldr	r0, [sp, #36]	; 0x24
   122c4:	cmp	r0, #0
   122c8:	mov	sl, #0
   122cc:	mov	r5, #0
   122d0:	beq	121e0 <putchar_unlocked@plt+0x1370>
   122d4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   122d8:	b	122ac <putchar_unlocked@plt+0x143c>
   122dc:	mov	r9, #1
   122e0:	b	11f64 <putchar_unlocked@plt+0x10f4>
   122e4:	mov	r0, #0
   122e8:	str	r0, [fp, #-36]	; 0xffffffdc
   122ec:	str	r0, [fp, #-40]	; 0xffffffd8
   122f0:	cmn	lr, #1
   122f4:	bne	12308 <putchar_unlocked@plt+0x1498>
   122f8:	mov	r0, ip
   122fc:	bl	10dbc <strlen@plt>
   12300:	ldr	ip, [fp, #-84]	; 0xffffffac
   12304:	mov	lr, r0
   12308:	add	r0, ip, r6
   1230c:	str	r0, [sp, #20]
   12310:	mov	r9, #1
   12314:	mov	r7, #0
   12318:	sub	r4, fp, #40	; 0x28
   1231c:	str	lr, [sp, #28]
   12320:	str	r7, [sp, #44]	; 0x2c
   12324:	add	r7, r7, r6
   12328:	add	r1, ip, r7
   1232c:	sub	r2, lr, r7
   12330:	sub	r0, fp, #44	; 0x2c
   12334:	mov	r3, r4
   12338:	bl	14340 <putchar_unlocked@plt+0x34d0>
   1233c:	cmp	r0, #0
   12340:	beq	12800 <putchar_unlocked@plt+0x1990>
   12344:	cmn	r0, #1
   12348:	beq	127c0 <putchar_unlocked@plt+0x1950>
   1234c:	cmn	r0, #2
   12350:	ldr	lr, [sp, #28]
   12354:	beq	127c8 <putchar_unlocked@plt+0x1958>
   12358:	cmp	r0, #2
   1235c:	mov	r1, #0
   12360:	movwcc	r1, #1
   12364:	ldr	r2, [sp, #60]	; 0x3c
   12368:	eor	r2, r2, #1
   1236c:	orrs	r1, r2, r1
   12370:	ldr	r4, [sp, #24]
   12374:	bne	12434 <putchar_unlocked@plt+0x15c4>
   12378:	ldr	r1, [sp, #44]	; 0x2c
   1237c:	ldr	r2, [sp, #20]
   12380:	add	r1, r2, r1
   12384:	mov	r2, #1
   12388:	ldrb	r3, [r1, r2]
   1238c:	sub	r3, r3, #91	; 0x5b
   12390:	cmp	r3, #33	; 0x21
   12394:	bhi	12428 <putchar_unlocked@plt+0x15b8>
   12398:	add	r7, pc, #0
   1239c:	ldr	pc, [r7, r3, lsl #2]
   123a0:	andeq	r2, r1, r8, ror #17
   123a4:	andeq	r2, r1, r8, ror #17
   123a8:	andeq	r2, r1, r8, lsr #8
   123ac:	andeq	r2, r1, r8, ror #17
   123b0:	andeq	r2, r1, r8, lsr #8
   123b4:	andeq	r2, r1, r8, ror #17
   123b8:	andeq	r2, r1, r8, lsr #8
   123bc:	andeq	r2, r1, r8, lsr #8
   123c0:	andeq	r2, r1, r8, lsr #8
   123c4:	andeq	r2, r1, r8, lsr #8
   123c8:	andeq	r2, r1, r8, lsr #8
   123cc:	andeq	r2, r1, r8, lsr #8
   123d0:	andeq	r2, r1, r8, lsr #8
   123d4:	andeq	r2, r1, r8, lsr #8
   123d8:	andeq	r2, r1, r8, lsr #8
   123dc:	andeq	r2, r1, r8, lsr #8
   123e0:	andeq	r2, r1, r8, lsr #8
   123e4:	andeq	r2, r1, r8, lsr #8
   123e8:	andeq	r2, r1, r8, lsr #8
   123ec:	andeq	r2, r1, r8, lsr #8
   123f0:	andeq	r2, r1, r8, lsr #8
   123f4:	andeq	r2, r1, r8, lsr #8
   123f8:	andeq	r2, r1, r8, lsr #8
   123fc:	andeq	r2, r1, r8, lsr #8
   12400:	andeq	r2, r1, r8, lsr #8
   12404:	andeq	r2, r1, r8, lsr #8
   12408:	andeq	r2, r1, r8, lsr #8
   1240c:	andeq	r2, r1, r8, lsr #8
   12410:	andeq	r2, r1, r8, lsr #8
   12414:	andeq	r2, r1, r8, lsr #8
   12418:	andeq	r2, r1, r8, lsr #8
   1241c:	andeq	r2, r1, r8, lsr #8
   12420:	andeq	r2, r1, r8, lsr #8
   12424:	andeq	r2, r1, r8, ror #17
   12428:	add	r2, r2, #1
   1242c:	cmp	r2, r0
   12430:	bcc	12388 <putchar_unlocked@plt+0x1518>
   12434:	ldr	r7, [sp, #44]	; 0x2c
   12438:	add	r7, r0, r7
   1243c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12440:	bl	10d08 <iswprint@plt>
   12444:	cmp	r0, #0
   12448:	movwne	r0, #1
   1244c:	and	r9, r9, r0
   12450:	sub	r4, fp, #40	; 0x28
   12454:	mov	r0, r4
   12458:	bl	10cc0 <mbsinit@plt>
   1245c:	ldr	lr, [sp, #28]
   12460:	cmp	r0, #0
   12464:	ldr	ip, [fp, #-84]	; 0xffffffac
   12468:	beq	12320 <putchar_unlocked@plt+0x14b0>
   1246c:	b	12808 <putchar_unlocked@plt+0x1998>
   12470:	ldr	r0, [sp, #32]
   12474:	cmp	r0, #0
   12478:	beq	12510 <putchar_unlocked@plt+0x16a0>
   1247c:	add	r0, r6, #2
   12480:	cmp	r0, lr
   12484:	bcs	12510 <putchar_unlocked@plt+0x16a0>
   12488:	add	r1, ip, r6
   1248c:	ldrb	r1, [r1, #1]
   12490:	cmp	r1, #63	; 0x3f
   12494:	bne	12510 <putchar_unlocked@plt+0x16a0>
   12498:	ldrb	r9, [ip, r0]
   1249c:	sub	r2, r9, #33	; 0x21
   124a0:	cmp	r2, #29
   124a4:	bhi	12510 <putchar_unlocked@plt+0x16a0>
   124a8:	mov	r3, #1
   124ac:	movw	r1, #20929	; 0x51c1
   124b0:	movt	r1, #14336	; 0x3800
   124b4:	tst	r1, r3, lsl r2
   124b8:	beq	12510 <putchar_unlocked@plt+0x16a0>
   124bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   124c0:	tst	r1, #1
   124c4:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   124c8:	cmp	r8, r4
   124cc:	movcc	r1, #63	; 0x3f
   124d0:	strbcc	r1, [r7, r8]
   124d4:	add	r2, r8, #1
   124d8:	cmp	r2, r4
   124dc:	movcc	r1, #34	; 0x22
   124e0:	strbcc	r1, [r7, r2]
   124e4:	add	r2, r8, #2
   124e8:	cmp	r2, r4
   124ec:	movcc	r1, #34	; 0x22
   124f0:	strbcc	r1, [r7, r2]
   124f4:	add	r2, r8, #3
   124f8:	cmp	r2, r4
   124fc:	movcc	r1, #63	; 0x3f
   12500:	strbcc	r1, [r7, r2]
   12504:	add	r8, r8, #4
   12508:	mov	r6, r0
   1250c:	mov	r5, r9
   12510:	mov	r9, #0
   12514:	b	11f64 <putchar_unlocked@plt+0x10f4>
   12518:	add	r1, r2, r6
   1251c:	str	r1, [sp, #44]	; 0x2c
   12520:	add	r1, r6, #1
   12524:	mov	r3, #0
   12528:	ldr	lr, [sp, #28]
   1252c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12530:	tst	r0, #1
   12534:	bne	12628 <putchar_unlocked@plt+0x17b8>
   12538:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1253c:	tst	r2, #1
   12540:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   12544:	cmp	r6, #2
   12548:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1254c:	movwne	r3, #1
   12550:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12554:	orr	r3, r3, r2
   12558:	tst	r3, #1
   1255c:	bne	12598 <putchar_unlocked@plt+0x1728>
   12560:	cmp	r8, r4
   12564:	movcc	r2, #39	; 0x27
   12568:	strbcc	r2, [r7, r8]
   1256c:	add	r3, r8, #1
   12570:	cmp	r3, r4
   12574:	movcc	r2, #36	; 0x24
   12578:	strbcc	r2, [r7, r3]
   1257c:	add	r3, r8, #2
   12580:	cmp	r3, r4
   12584:	movcc	r2, #39	; 0x27
   12588:	strbcc	r2, [r7, r3]
   1258c:	add	r8, r8, #3
   12590:	mov	r2, #1
   12594:	str	r2, [fp, #-56]	; 0xffffffc8
   12598:	cmp	r8, r4
   1259c:	movcc	r2, #92	; 0x5c
   125a0:	strbcc	r2, [r7, r8]
   125a4:	add	r3, r8, #1
   125a8:	cmp	r3, r4
   125ac:	bcs	125cc <putchar_unlocked@plt+0x175c>
   125b0:	and	r7, r5, #192	; 0xc0
   125b4:	mov	r2, #48	; 0x30
   125b8:	orr	r7, r2, r7, lsr #6
   125bc:	ldr	r6, [sp, #80]	; 0x50
   125c0:	strb	r7, [r6, r3]
   125c4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   125c8:	ldr	r7, [sp, #80]	; 0x50
   125cc:	add	r3, r8, #2
   125d0:	cmp	r3, r4
   125d4:	bcs	125f4 <putchar_unlocked@plt+0x1784>
   125d8:	lsr	r7, r5, #3
   125dc:	mov	r2, #6
   125e0:	bfi	r7, r2, #3, #29
   125e4:	ldr	r6, [sp, #80]	; 0x50
   125e8:	strb	r7, [r6, r3]
   125ec:	ldr	r6, [fp, #-60]	; 0xffffffc4
   125f0:	ldr	r7, [sp, #80]	; 0x50
   125f4:	mov	r2, #6
   125f8:	bfi	r5, r2, #3, #29
   125fc:	add	r8, r8, #3
   12600:	mov	r3, #1
   12604:	b	1264c <putchar_unlocked@plt+0x17dc>
   12608:	ldr	r7, [sp, #80]	; 0x50
   1260c:	cmp	r8, r4
   12610:	strbcc	r5, [r7, r8]
   12614:	ldrb	r5, [ip, r1]
   12618:	add	r1, r1, #1
   1261c:	add	r8, r8, #1
   12620:	tst	r0, #1
   12624:	beq	12538 <putchar_unlocked@plt+0x16c8>
   12628:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1262c:	tst	r2, #1
   12630:	beq	12644 <putchar_unlocked@plt+0x17d4>
   12634:	cmp	r8, r4
   12638:	movcc	r2, #92	; 0x5c
   1263c:	strbcc	r2, [r7, r8]
   12640:	add	r8, r8, #1
   12644:	mov	r2, #0
   12648:	str	r2, [fp, #-52]	; 0xffffffcc
   1264c:	and	sl, r3, #1
   12650:	ldr	r2, [sp, #44]	; 0x2c
   12654:	cmp	r2, r1
   12658:	bls	12764 <putchar_unlocked@plt+0x18f4>
   1265c:	cmp	sl, #0
   12660:	movwne	sl, #1
   12664:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12668:	mvn	r7, r2
   1266c:	orr	r7, r7, sl
   12670:	tst	r7, #1
   12674:	bne	12608 <putchar_unlocked@plt+0x1798>
   12678:	cmp	r8, r4
   1267c:	ldrcc	r7, [sp, #80]	; 0x50
   12680:	movcc	r2, #39	; 0x27
   12684:	strbcc	r2, [r7, r8]
   12688:	add	r7, r8, #1
   1268c:	cmp	r7, r4
   12690:	ldrcc	r6, [sp, #80]	; 0x50
   12694:	movcc	r2, #39	; 0x27
   12698:	strbcc	r2, [r6, r7]
   1269c:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   126a0:	add	r8, r8, #2
   126a4:	mov	r2, #0
   126a8:	str	r2, [fp, #-56]	; 0xffffffc8
   126ac:	b	12608 <putchar_unlocked@plt+0x1798>
   126b0:	cmp	r8, r4
   126b4:	movcc	r0, #39	; 0x27
   126b8:	strbcc	r0, [r7, r8]
   126bc:	add	r0, r8, #1
   126c0:	cmp	r0, r4
   126c4:	movcc	r1, #36	; 0x24
   126c8:	strbcc	r1, [r7, r0]
   126cc:	add	r0, r8, #2
   126d0:	cmp	r0, r4
   126d4:	movcc	r1, #39	; 0x27
   126d8:	strbcc	r1, [r7, r0]
   126dc:	add	r0, r8, #3
   126e0:	mov	r2, #1
   126e4:	cmp	r0, r4
   126e8:	movcc	r1, #92	; 0x5c
   126ec:	strbcc	r1, [r7, r0]
   126f0:	str	r2, [fp, #-56]	; 0xffffffc8
   126f4:	add	r8, r0, #1
   126f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   126fc:	cmp	r1, #2
   12700:	beq	12754 <putchar_unlocked@plt+0x18e4>
   12704:	add	r1, r6, #1
   12708:	mov	r9, #0
   1270c:	mov	sl, #1
   12710:	mov	r5, #48	; 0x30
   12714:	cmp	r1, lr
   12718:	bcs	11f64 <putchar_unlocked@plt+0x10f4>
   1271c:	ldrb	r1, [ip, r1]
   12720:	sub	r1, r1, #48	; 0x30
   12724:	uxtb	r1, r1
   12728:	cmp	r1, #9
   1272c:	bhi	11f64 <putchar_unlocked@plt+0x10f4>
   12730:	cmp	r8, r4
   12734:	movcc	r1, #48	; 0x30
   12738:	strbcc	r1, [r7, r8]
   1273c:	add	r1, r0, #2
   12740:	cmp	r1, r4
   12744:	movcc	r2, #48	; 0x30
   12748:	strbcc	r2, [r7, r1]
   1274c:	add	r8, r0, #3
   12750:	b	11f64 <putchar_unlocked@plt+0x10f4>
   12754:	mov	r0, #48	; 0x30
   12758:	mov	sl, #1
   1275c:	mov	r9, #0
   12760:	b	12210 <putchar_unlocked@plt+0x13a0>
   12764:	sub	r6, r1, #1
   12768:	cmp	sl, #0
   1276c:	movwne	sl, #1
   12770:	mov	r0, r5
   12774:	cmp	sl, #0
   12778:	bne	127b8 <putchar_unlocked@plt+0x1948>
   1277c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12780:	tst	r1, #1
   12784:	beq	127b8 <putchar_unlocked@plt+0x1948>
   12788:	cmp	r8, r4
   1278c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12790:	movcc	r1, #39	; 0x27
   12794:	strbcc	r1, [r7, r8]
   12798:	add	r1, r8, #1
   1279c:	cmp	r1, r4
   127a0:	movcc	r2, #39	; 0x27
   127a4:	strbcc	r2, [r7, r1]
   127a8:	add	r8, r8, #2
   127ac:	mov	r1, #0
   127b0:	str	r1, [fp, #-56]	; 0xffffffc8
   127b4:	b	1229c <putchar_unlocked@plt+0x142c>
   127b8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   127bc:	b	1229c <putchar_unlocked@plt+0x142c>
   127c0:	mov	r9, #0
   127c4:	b	12800 <putchar_unlocked@plt+0x1990>
   127c8:	mov	r9, #0
   127cc:	cmp	r7, lr
   127d0:	bcs	12800 <putchar_unlocked@plt+0x1990>
   127d4:	ldr	ip, [fp, #-84]	; 0xffffffac
   127d8:	ldr	r7, [sp, #44]	; 0x2c
   127dc:	ldr	r0, [sp, #20]
   127e0:	ldrb	r0, [r0, r7]
   127e4:	cmp	r0, #0
   127e8:	beq	12808 <putchar_unlocked@plt+0x1998>
   127ec:	add	r7, r7, #1
   127f0:	add	r0, r6, r7
   127f4:	cmp	r0, lr
   127f8:	bcc	127dc <putchar_unlocked@plt+0x196c>
   127fc:	b	12808 <putchar_unlocked@plt+0x1998>
   12800:	ldr	ip, [fp, #-84]	; 0xffffffac
   12804:	ldr	r7, [sp, #44]	; 0x2c
   12808:	mov	r1, r7
   1280c:	ldr	r7, [sp, #80]	; 0x50
   12810:	b	12138 <putchar_unlocked@plt+0x12c8>
   12814:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12818:	eor	r0, r1, #2
   1281c:	orr	r0, r0, r8
   12820:	clz	r0, r0
   12824:	lsr	r0, r0, #5
   12828:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1282c:	tst	r2, r0
   12830:	bne	128f0 <putchar_unlocked@plt+0x1a80>
   12834:	cmp	r1, #2
   12838:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1283c:	movwne	r0, #1
   12840:	orr	r0, r2, r0
   12844:	tst	r0, #1
   12848:	ldreq	r0, [sp, #56]	; 0x38
   1284c:	eoreq	r0, r0, #1
   12850:	tsteq	r0, #1
   12854:	bne	12888 <putchar_unlocked@plt+0x1a18>
   12858:	mov	r9, lr
   1285c:	tst	r5, #1
   12860:	bne	12958 <putchar_unlocked@plt+0x1ae8>
   12864:	ldr	r0, [sp, #72]	; 0x48
   12868:	cmp	r0, #0
   1286c:	beq	12888 <putchar_unlocked@plt+0x1a18>
   12870:	mov	r5, #0
   12874:	cmp	r4, #0
   12878:	ldr	r0, [sp, #84]	; 0x54
   1287c:	mov	sl, r2
   12880:	ldr	r6, [sp, #72]	; 0x48
   12884:	beq	11a20 <putchar_unlocked@plt+0xbb0>
   12888:	ldr	r1, [sp, #92]	; 0x5c
   1288c:	clz	r0, r1
   12890:	lsr	r0, r0, #5
   12894:	orr	r0, r0, r2
   12898:	tst	r0, #1
   1289c:	bne	128c8 <putchar_unlocked@plt+0x1a58>
   128a0:	ldrb	r0, [r1]
   128a4:	cmp	r0, #0
   128a8:	beq	128c8 <putchar_unlocked@plt+0x1a58>
   128ac:	add	r1, r1, #1
   128b0:	cmp	r8, r4
   128b4:	strbcc	r0, [r7, r8]
   128b8:	add	r8, r8, #1
   128bc:	ldrb	r0, [r1], #1
   128c0:	cmp	r0, #0
   128c4:	bne	128b0 <putchar_unlocked@plt+0x1a40>
   128c8:	cmp	r8, r4
   128cc:	movcc	r0, #0
   128d0:	strbcc	r0, [r7, r8]
   128d4:	b	1294c <putchar_unlocked@plt+0x1adc>
   128d8:	ldr	ip, [fp, #-84]	; 0xffffffac
   128dc:	mov	lr, r4
   128e0:	mov	r4, r5
   128e4:	b	128f0 <putchar_unlocked@plt+0x1a80>
   128e8:	ldr	r7, [sp, #80]	; 0x50
   128ec:	ldr	ip, [fp, #-84]	; 0xffffffac
   128f0:	mov	r0, #0
   128f4:	ldr	r1, [fp, #12]
   128f8:	bic	r1, r1, #2
   128fc:	ldr	r2, [sp, #84]	; 0x54
   12900:	tst	r2, #1
   12904:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12908:	mov	r2, r3
   1290c:	movwne	r2, #4
   12910:	cmp	r3, #2
   12914:	movne	r2, r3
   12918:	str	r2, [sp]
   1291c:	str	r1, [sp, #4]
   12920:	str	r0, [sp, #8]
   12924:	ldr	r0, [sp, #68]	; 0x44
   12928:	str	r0, [sp, #12]
   1292c:	ldr	r0, [sp, #76]	; 0x4c
   12930:	str	r0, [sp, #16]
   12934:	mov	r0, r7
   12938:	mov	r1, r4
   1293c:	mov	r2, ip
   12940:	mov	r3, lr
   12944:	bl	11998 <putchar_unlocked@plt+0xb28>
   12948:	mov	r8, r0
   1294c:	mov	r0, r8
   12950:	sub	sp, fp, #28
   12954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12958:	mov	r0, #5
   1295c:	str	r0, [sp]
   12960:	ldr	r0, [fp, #12]
   12964:	str	r0, [sp, #4]
   12968:	ldr	r0, [fp, #16]
   1296c:	str	r0, [sp, #8]
   12970:	ldr	r0, [sp, #68]	; 0x44
   12974:	str	r0, [sp, #12]
   12978:	ldr	r0, [sp, #76]	; 0x4c
   1297c:	str	r0, [sp, #16]
   12980:	mov	r0, r7
   12984:	ldr	r1, [sp, #72]	; 0x48
   12988:	ldr	r2, [fp, #-84]	; 0xffffffac
   1298c:	mov	r3, r9
   12990:	b	12944 <putchar_unlocked@plt+0x1ad4>
   12994:	bl	10e64 <abort@plt>
   12998:	mov	r3, r2
   1299c:	mov	r2, #0
   129a0:	b	129a4 <putchar_unlocked@plt+0x1b34>
   129a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129a8:	add	fp, sp, #28
   129ac:	sub	sp, sp, #36	; 0x24
   129b0:	mov	r4, r2
   129b4:	str	r2, [sp, #24]
   129b8:	mov	r5, r1
   129bc:	mov	r6, r0
   129c0:	str	r0, [sp, #20]
   129c4:	movw	r8, #24896	; 0x6140
   129c8:	movt	r8, #2
   129cc:	cmp	r3, #0
   129d0:	movne	r8, r3
   129d4:	bl	10dc8 <__errno_location@plt>
   129d8:	str	r0, [sp, #28]
   129dc:	ldm	r8, {r3, r9}
   129e0:	ldr	r1, [r8, #40]	; 0x28
   129e4:	ldr	r2, [r8, #44]	; 0x2c
   129e8:	ldr	r7, [r0]
   129ec:	str	r7, [sp, #32]
   129f0:	add	sl, r8, #8
   129f4:	cmp	r4, #0
   129f8:	orreq	r9, r9, #1
   129fc:	stm	sp, {r3, r9, sl}
   12a00:	str	r1, [sp, #12]
   12a04:	str	r2, [sp, #16]
   12a08:	mov	r0, #0
   12a0c:	mov	r1, #0
   12a10:	mov	r2, r6
   12a14:	mov	r3, r5
   12a18:	mov	r7, r5
   12a1c:	bl	11998 <putchar_unlocked@plt+0xb28>
   12a20:	mov	r5, r0
   12a24:	add	r4, r0, #1
   12a28:	mov	r0, r4
   12a2c:	bl	138a8 <putchar_unlocked@plt+0x2a38>
   12a30:	mov	r6, r0
   12a34:	ldr	r0, [r8]
   12a38:	ldr	r1, [r8, #40]	; 0x28
   12a3c:	ldr	r2, [r8, #44]	; 0x2c
   12a40:	stm	sp, {r0, r9, sl}
   12a44:	str	r1, [sp, #12]
   12a48:	str	r2, [sp, #16]
   12a4c:	mov	r0, r6
   12a50:	mov	r1, r4
   12a54:	ldr	r2, [sp, #20]
   12a58:	mov	r3, r7
   12a5c:	bl	11998 <putchar_unlocked@plt+0xb28>
   12a60:	ldr	r0, [sp, #24]
   12a64:	ldr	r1, [sp, #32]
   12a68:	ldr	r2, [sp, #28]
   12a6c:	str	r1, [r2]
   12a70:	cmp	r0, #0
   12a74:	strne	r5, [r0]
   12a78:	mov	r0, r6
   12a7c:	sub	sp, fp, #28
   12a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a88:	add	fp, sp, #24
   12a8c:	movw	r8, #24792	; 0x60d8
   12a90:	movt	r8, #2
   12a94:	ldr	r4, [r8]
   12a98:	movw	r5, #24796	; 0x60dc
   12a9c:	movt	r5, #2
   12aa0:	ldr	r0, [r5]
   12aa4:	cmp	r0, #2
   12aa8:	blt	12ad4 <putchar_unlocked@plt+0x1c64>
   12aac:	add	r7, r4, #12
   12ab0:	mov	r6, #0
   12ab4:	ldr	r0, [r7, r6, lsl #3]
   12ab8:	bl	141ec <putchar_unlocked@plt+0x337c>
   12abc:	add	r0, r6, #1
   12ac0:	ldr	r1, [r5]
   12ac4:	add	r2, r6, #2
   12ac8:	cmp	r2, r1
   12acc:	mov	r6, r0
   12ad0:	blt	12ab4 <putchar_unlocked@plt+0x1c44>
   12ad4:	ldr	r0, [r4, #4]
   12ad8:	movw	r7, #24944	; 0x6170
   12adc:	movt	r7, #2
   12ae0:	cmp	r0, r7
   12ae4:	beq	12afc <putchar_unlocked@plt+0x1c8c>
   12ae8:	bl	141ec <putchar_unlocked@plt+0x337c>
   12aec:	movw	r0, #24800	; 0x60e0
   12af0:	movt	r0, #2
   12af4:	mov	r6, #256	; 0x100
   12af8:	strd	r6, [r0]
   12afc:	movw	r6, #24800	; 0x60e0
   12b00:	movt	r6, #2
   12b04:	cmp	r4, r6
   12b08:	beq	12b18 <putchar_unlocked@plt+0x1ca8>
   12b0c:	mov	r0, r4
   12b10:	bl	141ec <putchar_unlocked@plt+0x337c>
   12b14:	str	r6, [r8]
   12b18:	mov	r0, #1
   12b1c:	str	r0, [r5]
   12b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12b24:	movw	r3, #24896	; 0x6140
   12b28:	movt	r3, #2
   12b2c:	mvn	r2, #0
   12b30:	b	12b34 <putchar_unlocked@plt+0x1cc4>
   12b34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b38:	add	fp, sp, #28
   12b3c:	sub	sp, sp, #44	; 0x2c
   12b40:	mov	r7, r3
   12b44:	str	r2, [sp, #36]	; 0x24
   12b48:	str	r1, [sp, #32]
   12b4c:	mov	r5, r0
   12b50:	bl	10dc8 <__errno_location@plt>
   12b54:	cmp	r5, #0
   12b58:	blt	12cc4 <putchar_unlocked@plt+0x1e54>
   12b5c:	cmn	r5, #-2147483647	; 0x80000001
   12b60:	beq	12cc4 <putchar_unlocked@plt+0x1e54>
   12b64:	movw	r4, #24792	; 0x60d8
   12b68:	movt	r4, #2
   12b6c:	ldr	r6, [r4]
   12b70:	str	r0, [sp, #28]
   12b74:	ldr	r0, [r0]
   12b78:	str	r0, [sp, #24]
   12b7c:	movw	r8, #24796	; 0x60dc
   12b80:	movt	r8, #2
   12b84:	ldr	r1, [r8]
   12b88:	cmp	r1, r5
   12b8c:	ble	12b98 <putchar_unlocked@plt+0x1d28>
   12b90:	mov	sl, r6
   12b94:	b	12c00 <putchar_unlocked@plt+0x1d90>
   12b98:	str	r1, [fp, #-32]	; 0xffffffe0
   12b9c:	mov	r0, #8
   12ba0:	str	r0, [sp]
   12ba4:	movw	r9, #24800	; 0x60e0
   12ba8:	movt	r9, #2
   12bac:	subs	r0, r6, r9
   12bb0:	movne	r0, r6
   12bb4:	add	r2, r5, #1
   12bb8:	sub	r2, r2, r1
   12bbc:	sub	r1, fp, #32
   12bc0:	mvn	r3, #-2147483648	; 0x80000000
   12bc4:	bl	13990 <putchar_unlocked@plt+0x2b20>
   12bc8:	mov	sl, r0
   12bcc:	str	r0, [r4]
   12bd0:	cmp	r6, r9
   12bd4:	ldrdeq	r0, [r9]
   12bd8:	stmeq	sl, {r0, r1}
   12bdc:	ldr	r1, [r8]
   12be0:	add	r0, sl, r1, lsl #3
   12be4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12be8:	sub	r1, r2, r1
   12bec:	lsl	r2, r1, #3
   12bf0:	mov	r1, #0
   12bf4:	bl	10de0 <memset@plt>
   12bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12bfc:	str	r0, [r8]
   12c00:	mov	r9, sl
   12c04:	ldr	r6, [r9, r5, lsl #3]!
   12c08:	ldr	r4, [r9, #4]!
   12c0c:	ldm	r7, {r0, r1}
   12c10:	ldr	r2, [r7, #40]	; 0x28
   12c14:	ldr	r3, [r7, #44]	; 0x2c
   12c18:	orr	r8, r1, #1
   12c1c:	add	r1, r7, #8
   12c20:	stm	sp, {r0, r8}
   12c24:	str	r1, [sp, #20]
   12c28:	add	r0, sp, #8
   12c2c:	stm	r0, {r1, r2, r3}
   12c30:	mov	r0, r4
   12c34:	mov	r1, r6
   12c38:	ldr	r2, [sp, #32]
   12c3c:	ldr	r3, [sp, #36]	; 0x24
   12c40:	bl	11998 <putchar_unlocked@plt+0xb28>
   12c44:	cmp	r6, r0
   12c48:	bhi	12cac <putchar_unlocked@plt+0x1e3c>
   12c4c:	add	r6, r0, #1
   12c50:	str	r6, [sl, r5, lsl #3]
   12c54:	movw	r0, #24944	; 0x6170
   12c58:	movt	r0, #2
   12c5c:	cmp	r4, r0
   12c60:	beq	12c6c <putchar_unlocked@plt+0x1dfc>
   12c64:	mov	r0, r4
   12c68:	bl	141ec <putchar_unlocked@plt+0x337c>
   12c6c:	mov	r0, r6
   12c70:	bl	138a8 <putchar_unlocked@plt+0x2a38>
   12c74:	mov	r4, r0
   12c78:	str	r0, [r9]
   12c7c:	ldr	r0, [r7]
   12c80:	ldr	r1, [r7, #40]	; 0x28
   12c84:	ldr	r2, [r7, #44]	; 0x2c
   12c88:	stm	sp, {r0, r8}
   12c8c:	ldr	r0, [sp, #20]
   12c90:	add	r3, sp, #8
   12c94:	stm	r3, {r0, r1, r2}
   12c98:	mov	r0, r4
   12c9c:	mov	r1, r6
   12ca0:	ldr	r2, [sp, #32]
   12ca4:	ldr	r3, [sp, #36]	; 0x24
   12ca8:	bl	11998 <putchar_unlocked@plt+0xb28>
   12cac:	ldr	r0, [sp, #28]
   12cb0:	ldr	r1, [sp, #24]
   12cb4:	str	r1, [r0]
   12cb8:	mov	r0, r4
   12cbc:	sub	sp, fp, #28
   12cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc4:	bl	10e64 <abort@plt>
   12cc8:	movw	r3, #24896	; 0x6140
   12ccc:	movt	r3, #2
   12cd0:	b	12b34 <putchar_unlocked@plt+0x1cc4>
   12cd4:	mov	r1, r0
   12cd8:	mov	r0, #0
   12cdc:	b	12b24 <putchar_unlocked@plt+0x1cb4>
   12ce0:	mov	r2, r1
   12ce4:	mov	r1, r0
   12ce8:	mov	r0, #0
   12cec:	b	12cc8 <putchar_unlocked@plt+0x1e58>
   12cf0:	push	{r4, r5, r6, sl, fp, lr}
   12cf4:	add	fp, sp, #16
   12cf8:	sub	sp, sp, #48	; 0x30
   12cfc:	mov	r4, r2
   12d00:	mov	r5, r0
   12d04:	mov	r6, sp
   12d08:	mov	r0, r6
   12d0c:	bl	12d2c <putchar_unlocked@plt+0x1ebc>
   12d10:	mov	r0, r5
   12d14:	mov	r1, r4
   12d18:	mvn	r2, #0
   12d1c:	mov	r3, r6
   12d20:	bl	12b34 <putchar_unlocked@plt+0x1cc4>
   12d24:	sub	sp, fp, #16
   12d28:	pop	{r4, r5, r6, sl, fp, pc}
   12d2c:	vmov.i32	q8, #0	; 0x00000000
   12d30:	mov	r2, #32
   12d34:	mov	r3, r0
   12d38:	vst1.32	{d16-d17}, [r3], r2
   12d3c:	vst1.32	{d16-d17}, [r3]
   12d40:	add	r2, r0, #16
   12d44:	vst1.32	{d16-d17}, [r2]
   12d48:	cmp	r1, #10
   12d4c:	strne	r1, [r0]
   12d50:	bxne	lr
   12d54:	push	{fp, lr}
   12d58:	mov	fp, sp
   12d5c:	bl	10e64 <abort@plt>
   12d60:	push	{r4, r5, r6, r7, fp, lr}
   12d64:	add	fp, sp, #16
   12d68:	sub	sp, sp, #48	; 0x30
   12d6c:	mov	r4, r3
   12d70:	mov	r5, r2
   12d74:	mov	r6, r0
   12d78:	mov	r7, sp
   12d7c:	mov	r0, r7
   12d80:	bl	12d2c <putchar_unlocked@plt+0x1ebc>
   12d84:	mov	r0, r6
   12d88:	mov	r1, r5
   12d8c:	mov	r2, r4
   12d90:	mov	r3, r7
   12d94:	bl	12b34 <putchar_unlocked@plt+0x1cc4>
   12d98:	sub	sp, fp, #16
   12d9c:	pop	{r4, r5, r6, r7, fp, pc}
   12da0:	mov	r2, r1
   12da4:	mov	r1, r0
   12da8:	mov	r0, #0
   12dac:	b	12cf0 <putchar_unlocked@plt+0x1e80>
   12db0:	mov	r3, r2
   12db4:	mov	r2, r1
   12db8:	mov	r1, r0
   12dbc:	mov	r0, #0
   12dc0:	b	12d60 <putchar_unlocked@plt+0x1ef0>
   12dc4:	push	{r4, r5, r6, sl, fp, lr}
   12dc8:	add	fp, sp, #16
   12dcc:	sub	sp, sp, #48	; 0x30
   12dd0:	mov	r4, r1
   12dd4:	mov	r5, r0
   12dd8:	mov	r0, #32
   12ddc:	movw	r1, #24896	; 0x6140
   12de0:	movt	r1, #2
   12de4:	add	r3, r1, #16
   12de8:	vld1.64	{d16-d17}, [r1], r0
   12dec:	mov	r6, sp
   12df0:	vld1.64	{d18-d19}, [r3]
   12df4:	add	r3, r6, #16
   12df8:	vld1.64	{d20-d21}, [r1]
   12dfc:	vst1.64	{d18-d19}, [r3]
   12e00:	mov	r1, r6
   12e04:	vst1.64	{d16-d17}, [r1], r0
   12e08:	vst1.64	{d20-d21}, [r1]
   12e0c:	mov	r0, r6
   12e10:	mov	r1, r2
   12e14:	mov	r2, #1
   12e18:	bl	1188c <putchar_unlocked@plt+0xa1c>
   12e1c:	mov	r0, #0
   12e20:	mov	r1, r5
   12e24:	mov	r2, r4
   12e28:	mov	r3, r6
   12e2c:	bl	12b34 <putchar_unlocked@plt+0x1cc4>
   12e30:	sub	sp, fp, #16
   12e34:	pop	{r4, r5, r6, sl, fp, pc}
   12e38:	mov	r2, r1
   12e3c:	mvn	r1, #0
   12e40:	b	12dc4 <putchar_unlocked@plt+0x1f54>
   12e44:	mov	r1, #58	; 0x3a
   12e48:	b	12e38 <putchar_unlocked@plt+0x1fc8>
   12e4c:	mov	r2, #58	; 0x3a
   12e50:	b	12dc4 <putchar_unlocked@plt+0x1f54>
   12e54:	push	{r4, r5, r6, sl, fp, lr}
   12e58:	add	fp, sp, #16
   12e5c:	sub	sp, sp, #48	; 0x30
   12e60:	mov	r4, r2
   12e64:	mov	r5, r0
   12e68:	mov	r6, sp
   12e6c:	mov	r0, r6
   12e70:	bl	12d2c <putchar_unlocked@plt+0x1ebc>
   12e74:	mov	r0, r6
   12e78:	mov	r1, #58	; 0x3a
   12e7c:	mov	r2, #1
   12e80:	bl	1188c <putchar_unlocked@plt+0xa1c>
   12e84:	mov	r0, r5
   12e88:	mov	r1, r4
   12e8c:	mvn	r2, #0
   12e90:	mov	r3, r6
   12e94:	bl	12b34 <putchar_unlocked@plt+0x1cc4>
   12e98:	sub	sp, fp, #16
   12e9c:	pop	{r4, r5, r6, sl, fp, pc}
   12ea0:	push	{fp, lr}
   12ea4:	mov	fp, sp
   12ea8:	sub	sp, sp, #8
   12eac:	mvn	ip, #0
   12eb0:	str	ip, [sp]
   12eb4:	bl	12ec0 <putchar_unlocked@plt+0x2050>
   12eb8:	mov	sp, fp
   12ebc:	pop	{fp, pc}
   12ec0:	push	{r4, r5, r6, r7, fp, lr}
   12ec4:	add	fp, sp, #16
   12ec8:	sub	sp, sp, #48	; 0x30
   12ecc:	mov	r7, r3
   12ed0:	mov	r5, r0
   12ed4:	mov	r0, #32
   12ed8:	movw	r3, #24896	; 0x6140
   12edc:	movt	r3, #2
   12ee0:	add	r4, r3, #16
   12ee4:	vld1.64	{d16-d17}, [r3], r0
   12ee8:	mov	r6, sp
   12eec:	vld1.64	{d18-d19}, [r4]
   12ef0:	add	r4, r6, #16
   12ef4:	vld1.64	{d20-d21}, [r3]
   12ef8:	vst1.64	{d18-d19}, [r4]
   12efc:	mov	r3, r6
   12f00:	vst1.64	{d16-d17}, [r3], r0
   12f04:	vst1.64	{d20-d21}, [r3]
   12f08:	mov	r0, r6
   12f0c:	bl	118e4 <putchar_unlocked@plt+0xa74>
   12f10:	ldr	r2, [fp, #8]
   12f14:	mov	r0, r5
   12f18:	mov	r1, r7
   12f1c:	mov	r3, r6
   12f20:	bl	12b34 <putchar_unlocked@plt+0x1cc4>
   12f24:	sub	sp, fp, #16
   12f28:	pop	{r4, r5, r6, r7, fp, pc}
   12f2c:	mov	r3, r2
   12f30:	mov	r2, r1
   12f34:	mov	r1, r0
   12f38:	mov	r0, #0
   12f3c:	b	12ea0 <putchar_unlocked@plt+0x2030>
   12f40:	push	{fp, lr}
   12f44:	mov	fp, sp
   12f48:	sub	sp, sp, #8
   12f4c:	mov	ip, r2
   12f50:	mov	r2, r1
   12f54:	mov	r1, r0
   12f58:	str	r3, [sp]
   12f5c:	mov	r0, #0
   12f60:	mov	r3, ip
   12f64:	bl	12ec0 <putchar_unlocked@plt+0x2050>
   12f68:	mov	sp, fp
   12f6c:	pop	{fp, pc}
   12f70:	movw	r3, #24808	; 0x60e8
   12f74:	movt	r3, #2
   12f78:	b	12b34 <putchar_unlocked@plt+0x1cc4>
   12f7c:	mov	r2, r1
   12f80:	mov	r1, r0
   12f84:	mov	r0, #0
   12f88:	b	12f70 <putchar_unlocked@plt+0x2100>
   12f8c:	mvn	r2, #0
   12f90:	b	12f70 <putchar_unlocked@plt+0x2100>
   12f94:	mov	r1, r0
   12f98:	mov	r0, #0
   12f9c:	b	12f8c <putchar_unlocked@plt+0x211c>
   12fa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fa4:	add	fp, sp, #24
   12fa8:	sub	sp, sp, #16
   12fac:	mov	r4, r1
   12fb0:	mov	r5, r0
   12fb4:	mov	r7, #0
   12fb8:	mov	r0, #0
   12fbc:	mov	r1, r5
   12fc0:	mov	r2, #5
   12fc4:	bl	10ce4 <dcgettext@plt>
   12fc8:	cmp	r0, r5
   12fcc:	beq	12fd8 <putchar_unlocked@plt+0x2168>
   12fd0:	sub	sp, fp, #24
   12fd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fd8:	bl	14308 <putchar_unlocked@plt+0x3498>
   12fdc:	mov	r6, r0
   12fe0:	mov	r8, #56	; 0x38
   12fe4:	mov	r0, #45	; 0x2d
   12fe8:	stm	sp, {r0, r8}
   12fec:	str	r7, [sp, #8]
   12ff0:	str	r7, [sp, #12]
   12ff4:	mov	r0, r6
   12ff8:	mov	r1, #85	; 0x55
   12ffc:	mov	r2, #84	; 0x54
   13000:	mov	r3, #70	; 0x46
   13004:	bl	1309c <putchar_unlocked@plt+0x222c>
   13008:	cmp	r0, #0
   1300c:	beq	13028 <putchar_unlocked@plt+0x21b8>
   13010:	ldrb	r1, [r5]
   13014:	movw	r2, #19730	; 0x4d12
   13018:	movt	r2, #1
   1301c:	movw	r0, #19734	; 0x4d16
   13020:	movt	r0, #1
   13024:	b	1306c <putchar_unlocked@plt+0x21fc>
   13028:	mov	r0, #48	; 0x30
   1302c:	mov	r1, #51	; 0x33
   13030:	str	r8, [sp]
   13034:	stmib	sp, {r0, r1}
   13038:	str	r0, [sp, #12]
   1303c:	mov	r0, r6
   13040:	mov	r1, #71	; 0x47
   13044:	mov	r2, #66	; 0x42
   13048:	mov	r3, #49	; 0x31
   1304c:	bl	1309c <putchar_unlocked@plt+0x222c>
   13050:	cmp	r0, #0
   13054:	beq	1307c <putchar_unlocked@plt+0x220c>
   13058:	ldrb	r1, [r5]
   1305c:	movw	r2, #19738	; 0x4d1a
   13060:	movt	r2, #1
   13064:	movw	r0, #19742	; 0x4d1e
   13068:	movt	r0, #1
   1306c:	cmp	r1, #96	; 0x60
   13070:	moveq	r0, r2
   13074:	sub	sp, fp, #24
   13078:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1307c:	movw	r1, #19724	; 0x4d0c
   13080:	movt	r1, #1
   13084:	movw	r0, #19728	; 0x4d10
   13088:	movt	r0, #1
   1308c:	cmp	r4, #9
   13090:	moveq	r0, r1
   13094:	sub	sp, fp, #24
   13098:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1309c:	push	{r4, r5, r6, r7, fp, lr}
   130a0:	add	fp, sp, #16
   130a4:	sub	sp, sp, #16
   130a8:	mov	r4, r3
   130ac:	mov	r5, r2
   130b0:	mov	r7, r1
   130b4:	mov	r6, r0
   130b8:	mov	r0, r1
   130bc:	bl	13fec <putchar_unlocked@plt+0x317c>
   130c0:	ldrb	r1, [r6]
   130c4:	cmp	r0, #0
   130c8:	andne	r1, r1, #223	; 0xdf
   130cc:	mov	r0, #0
   130d0:	cmp	r1, r7
   130d4:	bne	13114 <putchar_unlocked@plt+0x22a4>
   130d8:	cmp	r7, #0
   130dc:	moveq	r0, #1
   130e0:	subeq	sp, fp, #16
   130e4:	popeq	{r4, r5, r6, r7, fp, pc}
   130e8:	ldr	r0, [fp, #20]
   130ec:	ldr	r1, [fp, #16]
   130f0:	ldr	r2, [fp, #12]
   130f4:	ldr	r3, [fp, #8]
   130f8:	str	r2, [sp]
   130fc:	str	r1, [sp, #4]
   13100:	str	r0, [sp, #8]
   13104:	mov	r0, r6
   13108:	mov	r1, r5
   1310c:	mov	r2, r4
   13110:	bl	1311c <putchar_unlocked@plt+0x22ac>
   13114:	sub	sp, fp, #16
   13118:	pop	{r4, r5, r6, r7, fp, pc}
   1311c:	push	{r4, r5, r6, r7, fp, lr}
   13120:	add	fp, sp, #16
   13124:	sub	sp, sp, #8
   13128:	mov	r4, r3
   1312c:	mov	r5, r2
   13130:	mov	r7, r1
   13134:	mov	r6, r0
   13138:	mov	r0, r1
   1313c:	bl	13fec <putchar_unlocked@plt+0x317c>
   13140:	ldrb	r1, [r6, #1]
   13144:	cmp	r0, #0
   13148:	andne	r1, r1, #223	; 0xdf
   1314c:	mov	r0, #0
   13150:	cmp	r1, r7
   13154:	bne	1318c <putchar_unlocked@plt+0x231c>
   13158:	cmp	r7, #0
   1315c:	moveq	r0, #1
   13160:	subeq	sp, fp, #16
   13164:	popeq	{r4, r5, r6, r7, fp, pc}
   13168:	ldr	r0, [fp, #16]
   1316c:	ldr	r1, [fp, #12]
   13170:	ldr	r3, [fp, #8]
   13174:	str	r1, [sp]
   13178:	str	r0, [sp, #4]
   1317c:	mov	r0, r6
   13180:	mov	r1, r5
   13184:	mov	r2, r4
   13188:	bl	13194 <putchar_unlocked@plt+0x2324>
   1318c:	sub	sp, fp, #16
   13190:	pop	{r4, r5, r6, r7, fp, pc}
   13194:	push	{r4, r5, r6, r7, fp, lr}
   13198:	add	fp, sp, #16
   1319c:	sub	sp, sp, #8
   131a0:	mov	r4, r3
   131a4:	mov	r5, r2
   131a8:	mov	r7, r1
   131ac:	mov	r6, r0
   131b0:	mov	r0, r1
   131b4:	bl	13fec <putchar_unlocked@plt+0x317c>
   131b8:	ldrb	r1, [r6, #2]
   131bc:	cmp	r0, #0
   131c0:	andne	r1, r1, #223	; 0xdf
   131c4:	mov	r0, #0
   131c8:	cmp	r1, r7
   131cc:	bne	131fc <putchar_unlocked@plt+0x238c>
   131d0:	cmp	r7, #0
   131d4:	moveq	r0, #1
   131d8:	subeq	sp, fp, #16
   131dc:	popeq	{r4, r5, r6, r7, fp, pc}
   131e0:	ldr	r0, [fp, #12]
   131e4:	ldr	r3, [fp, #8]
   131e8:	str	r0, [sp]
   131ec:	mov	r0, r6
   131f0:	mov	r1, r5
   131f4:	mov	r2, r4
   131f8:	bl	13204 <putchar_unlocked@plt+0x2394>
   131fc:	sub	sp, fp, #16
   13200:	pop	{r4, r5, r6, r7, fp, pc}
   13204:	push	{r4, r5, r6, r7, fp, lr}
   13208:	add	fp, sp, #16
   1320c:	mov	r4, r3
   13210:	mov	r5, r2
   13214:	mov	r7, r1
   13218:	mov	r6, r0
   1321c:	mov	r0, r1
   13220:	bl	13fec <putchar_unlocked@plt+0x317c>
   13224:	ldrb	r1, [r6, #3]
   13228:	ldr	r3, [fp, #8]
   1322c:	cmp	r0, #0
   13230:	andne	r1, r1, #223	; 0xdf
   13234:	mov	r0, #0
   13238:	cmp	r1, r7
   1323c:	popne	{r4, r5, r6, r7, fp, pc}
   13240:	cmp	r7, #0
   13244:	beq	1325c <putchar_unlocked@plt+0x23ec>
   13248:	mov	r0, r6
   1324c:	mov	r1, r5
   13250:	mov	r2, r4
   13254:	pop	{r4, r5, r6, r7, fp, lr}
   13258:	b	13264 <putchar_unlocked@plt+0x23f4>
   1325c:	mov	r0, #1
   13260:	pop	{r4, r5, r6, r7, fp, pc}
   13264:	push	{r4, r5, r6, r7, fp, lr}
   13268:	add	fp, sp, #16
   1326c:	mov	r4, r3
   13270:	mov	r5, r2
   13274:	mov	r7, r1
   13278:	mov	r6, r0
   1327c:	mov	r0, r1
   13280:	bl	13fec <putchar_unlocked@plt+0x317c>
   13284:	ldrb	r1, [r6, #4]
   13288:	cmp	r0, #0
   1328c:	andne	r1, r1, #223	; 0xdf
   13290:	mov	r0, #0
   13294:	cmp	r1, r7
   13298:	popne	{r4, r5, r6, r7, fp, pc}
   1329c:	cmp	r7, #0
   132a0:	beq	132b8 <putchar_unlocked@plt+0x2448>
   132a4:	mov	r0, r6
   132a8:	mov	r1, r5
   132ac:	mov	r2, r4
   132b0:	pop	{r4, r5, r6, r7, fp, lr}
   132b4:	b	132c0 <putchar_unlocked@plt+0x2450>
   132b8:	mov	r0, #1
   132bc:	pop	{r4, r5, r6, r7, fp, pc}
   132c0:	push	{r4, r5, r6, sl, fp, lr}
   132c4:	add	fp, sp, #16
   132c8:	mov	r4, r2
   132cc:	mov	r6, r1
   132d0:	mov	r5, r0
   132d4:	mov	r0, r1
   132d8:	bl	13fec <putchar_unlocked@plt+0x317c>
   132dc:	ldrb	r1, [r5, #5]
   132e0:	cmp	r0, #0
   132e4:	andne	r1, r1, #223	; 0xdf
   132e8:	mov	r0, #0
   132ec:	cmp	r1, r6
   132f0:	popne	{r4, r5, r6, sl, fp, pc}
   132f4:	cmp	r6, #0
   132f8:	beq	1330c <putchar_unlocked@plt+0x249c>
   132fc:	mov	r0, r5
   13300:	mov	r1, r4
   13304:	pop	{r4, r5, r6, sl, fp, lr}
   13308:	b	13314 <putchar_unlocked@plt+0x24a4>
   1330c:	mov	r0, #1
   13310:	pop	{r4, r5, r6, sl, fp, pc}
   13314:	push	{r4, r5, fp, lr}
   13318:	add	fp, sp, #8
   1331c:	mov	r5, r1
   13320:	mov	r4, r0
   13324:	mov	r0, r1
   13328:	bl	13fec <putchar_unlocked@plt+0x317c>
   1332c:	ldrb	r1, [r4, #6]
   13330:	cmp	r0, #0
   13334:	andne	r1, r1, #223	; 0xdf
   13338:	mov	r0, #0
   1333c:	cmp	r1, r5
   13340:	popne	{r4, r5, fp, pc}
   13344:	cmp	r5, #0
   13348:	beq	13358 <putchar_unlocked@plt+0x24e8>
   1334c:	mov	r0, r4
   13350:	pop	{r4, r5, fp, lr}
   13354:	b	13360 <putchar_unlocked@plt+0x24f0>
   13358:	mov	r0, #1
   1335c:	pop	{r4, r5, fp, pc}
   13360:	push	{r4, sl, fp, lr}
   13364:	add	fp, sp, #8
   13368:	mov	r4, r0
   1336c:	mov	r0, #0
   13370:	bl	13fec <putchar_unlocked@plt+0x317c>
   13374:	ldrb	r1, [r4, #7]
   13378:	cmp	r0, #0
   1337c:	beq	13394 <putchar_unlocked@plt+0x2524>
   13380:	tst	r1, #223	; 0xdf
   13384:	moveq	r0, #1
   13388:	popeq	{r4, sl, fp, pc}
   1338c:	mov	r0, #0
   13390:	pop	{r4, sl, fp, pc}
   13394:	cmp	r1, #0
   13398:	moveq	r0, #1
   1339c:	popeq	{r4, sl, fp, pc}
   133a0:	mov	r0, #0
   133a4:	pop	{r4, sl, fp, pc}
   133a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   133ac:	add	fp, sp, #24
   133b0:	sub	sp, sp, #32
   133b4:	mov	r4, r2
   133b8:	mov	r8, r0
   133bc:	ldr	r6, [fp, #12]
   133c0:	ldr	r7, [fp, #8]
   133c4:	cmp	r1, #0
   133c8:	beq	133f0 <putchar_unlocked@plt+0x2580>
   133cc:	mov	r5, r1
   133d0:	str	r4, [sp]
   133d4:	str	r3, [sp, #4]
   133d8:	movw	r2, #19832	; 0x4d78
   133dc:	movt	r2, #1
   133e0:	mov	r0, r8
   133e4:	mov	r1, #1
   133e8:	mov	r3, r5
   133ec:	b	13408 <putchar_unlocked@plt+0x2598>
   133f0:	str	r3, [sp]
   133f4:	movw	r2, #19844	; 0x4d84
   133f8:	movt	r2, #1
   133fc:	mov	r0, r8
   13400:	mov	r1, #1
   13404:	mov	r3, r4
   13408:	bl	10e04 <__fprintf_chk@plt>
   1340c:	movw	r1, #19851	; 0x4d8b
   13410:	movt	r1, #1
   13414:	mov	r0, #0
   13418:	mov	r2, #5
   1341c:	bl	10ce4 <dcgettext@plt>
   13420:	mov	r3, r0
   13424:	movw	r0, #2022	; 0x7e6
   13428:	str	r0, [sp]
   1342c:	movw	r2, #20569	; 0x5059
   13430:	movt	r2, #1
   13434:	mov	r0, r8
   13438:	mov	r1, #1
   1343c:	bl	10e04 <__fprintf_chk@plt>
   13440:	movw	r4, #18535	; 0x4867
   13444:	movt	r4, #1
   13448:	mov	r0, r4
   1344c:	mov	r1, r8
   13450:	bl	10c78 <fputs_unlocked@plt>
   13454:	movw	r1, #19855	; 0x4d8f
   13458:	movt	r1, #1
   1345c:	mov	r0, #0
   13460:	mov	r2, #5
   13464:	bl	10ce4 <dcgettext@plt>
   13468:	mov	r2, r0
   1346c:	movw	r3, #20026	; 0x4e3a
   13470:	movt	r3, #1
   13474:	mov	r0, r8
   13478:	mov	r1, #1
   1347c:	bl	10e04 <__fprintf_chk@plt>
   13480:	mov	r0, r4
   13484:	mov	r1, r8
   13488:	bl	10c78 <fputs_unlocked@plt>
   1348c:	cmp	r6, #9
   13490:	bhi	134cc <putchar_unlocked@plt+0x265c>
   13494:	add	r0, pc, #0
   13498:	ldr	pc, [r0, r6, lsl #2]
   1349c:	andeq	r3, r1, r4, asr #9
   134a0:	ldrdeq	r3, [r1], -r8
   134a4:	andeq	r3, r1, r8, lsl #10
   134a8:	andeq	r3, r1, r0, lsr r5
   134ac:	andeq	r3, r1, r8, asr r5
   134b0:	andeq	r3, r1, r0, lsl #11
   134b4:	andeq	r3, r1, r8, lsr #11
   134b8:	andeq	r3, r1, r0, ror #11
   134bc:	andeq	r3, r1, r0, lsl #13
   134c0:	andeq	r3, r1, r8, lsr #12
   134c4:	sub	sp, fp, #24
   134c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   134cc:	movw	r1, #20379	; 0x4f9b
   134d0:	movt	r1, #1
   134d4:	b	13630 <putchar_unlocked@plt+0x27c0>
   134d8:	movw	r1, #20060	; 0x4e5c
   134dc:	movt	r1, #1
   134e0:	mov	r0, #0
   134e4:	mov	r2, #5
   134e8:	bl	10ce4 <dcgettext@plt>
   134ec:	mov	r2, r0
   134f0:	ldr	r3, [r7]
   134f4:	mov	r0, r8
   134f8:	mov	r1, #1
   134fc:	sub	sp, fp, #24
   13500:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13504:	b	10e04 <__fprintf_chk@plt>
   13508:	movw	r1, #20076	; 0x4e6c
   1350c:	movt	r1, #1
   13510:	mov	r0, #0
   13514:	mov	r2, #5
   13518:	bl	10ce4 <dcgettext@plt>
   1351c:	mov	r2, r0
   13520:	ldr	r3, [r7]
   13524:	ldr	r0, [r7, #4]
   13528:	str	r0, [sp]
   1352c:	b	1361c <putchar_unlocked@plt+0x27ac>
   13530:	movw	r1, #20099	; 0x4e83
   13534:	movt	r1, #1
   13538:	mov	r0, #0
   1353c:	mov	r2, #5
   13540:	bl	10ce4 <dcgettext@plt>
   13544:	mov	r2, r0
   13548:	ldr	r3, [r7]
   1354c:	ldmib	r7, {r0, r1}
   13550:	stm	sp, {r0, r1}
   13554:	b	1361c <putchar_unlocked@plt+0x27ac>
   13558:	movw	r1, #20127	; 0x4e9f
   1355c:	movt	r1, #1
   13560:	mov	r0, #0
   13564:	mov	r2, #5
   13568:	bl	10ce4 <dcgettext@plt>
   1356c:	mov	r2, r0
   13570:	ldr	r3, [r7]
   13574:	ldmib	r7, {r0, r1, r7}
   13578:	stm	sp, {r0, r1, r7}
   1357c:	b	1361c <putchar_unlocked@plt+0x27ac>
   13580:	movw	r1, #20159	; 0x4ebf
   13584:	movt	r1, #1
   13588:	mov	r0, #0
   1358c:	mov	r2, #5
   13590:	bl	10ce4 <dcgettext@plt>
   13594:	mov	r2, r0
   13598:	ldr	r3, [r7]
   1359c:	ldmib	r7, {r0, r1, r6, r7}
   135a0:	stm	sp, {r0, r1, r6, r7}
   135a4:	b	1361c <putchar_unlocked@plt+0x27ac>
   135a8:	movw	r1, #20195	; 0x4ee3
   135ac:	movt	r1, #1
   135b0:	mov	r0, #0
   135b4:	mov	r2, #5
   135b8:	bl	10ce4 <dcgettext@plt>
   135bc:	mov	r2, r0
   135c0:	ldr	r3, [r7]
   135c4:	ldmib	r7, {r0, r1, r6}
   135c8:	ldr	r5, [r7, #16]
   135cc:	ldr	r7, [r7, #20]
   135d0:	stm	sp, {r0, r1, r6}
   135d4:	str	r5, [sp, #12]
   135d8:	str	r7, [sp, #16]
   135dc:	b	1361c <putchar_unlocked@plt+0x27ac>
   135e0:	movw	r1, #20235	; 0x4f0b
   135e4:	movt	r1, #1
   135e8:	mov	r0, #0
   135ec:	mov	r2, #5
   135f0:	bl	10ce4 <dcgettext@plt>
   135f4:	mov	r2, r0
   135f8:	ldr	r3, [r7]
   135fc:	ldmib	r7, {r0, r1, r6}
   13600:	ldr	r5, [r7, #16]
   13604:	ldr	r4, [r7, #20]
   13608:	ldr	r7, [r7, #24]
   1360c:	stm	sp, {r0, r1, r6}
   13610:	str	r5, [sp, #12]
   13614:	str	r4, [sp, #16]
   13618:	str	r7, [sp, #20]
   1361c:	mov	r0, r8
   13620:	mov	r1, #1
   13624:	b	136d0 <putchar_unlocked@plt+0x2860>
   13628:	movw	r1, #20327	; 0x4f67
   1362c:	movt	r1, #1
   13630:	mov	r0, #0
   13634:	mov	r2, #5
   13638:	bl	10ce4 <dcgettext@plt>
   1363c:	mov	ip, r0
   13640:	ldr	r3, [r7]
   13644:	ldr	r0, [r7, #4]
   13648:	ldr	r1, [r7, #8]
   1364c:	ldr	r6, [r7, #12]
   13650:	ldr	r5, [r7, #16]
   13654:	ldr	r4, [r7, #20]
   13658:	ldr	r2, [r7, #24]
   1365c:	ldr	lr, [r7, #28]
   13660:	ldr	r7, [r7, #32]
   13664:	stm	sp, {r0, r1, r6}
   13668:	str	r5, [sp, #12]
   1366c:	str	r4, [sp, #16]
   13670:	str	r2, [sp, #20]
   13674:	str	lr, [sp, #24]
   13678:	str	r7, [sp, #28]
   1367c:	b	136c4 <putchar_unlocked@plt+0x2854>
   13680:	movw	r1, #20279	; 0x4f37
   13684:	movt	r1, #1
   13688:	mov	r0, #0
   1368c:	mov	r2, #5
   13690:	bl	10ce4 <dcgettext@plt>
   13694:	mov	ip, r0
   13698:	ldr	r3, [r7]
   1369c:	ldmib	r7, {r0, r1, r6}
   136a0:	ldr	r5, [r7, #16]
   136a4:	ldr	r4, [r7, #20]
   136a8:	ldr	r2, [r7, #24]
   136ac:	ldr	r7, [r7, #28]
   136b0:	stm	sp, {r0, r1, r6}
   136b4:	str	r5, [sp, #12]
   136b8:	str	r4, [sp, #16]
   136bc:	str	r2, [sp, #20]
   136c0:	str	r7, [sp, #24]
   136c4:	mov	r0, r8
   136c8:	mov	r1, #1
   136cc:	mov	r2, ip
   136d0:	bl	10e04 <__fprintf_chk@plt>
   136d4:	sub	sp, fp, #24
   136d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   136dc:	push	{r4, sl, fp, lr}
   136e0:	add	fp, sp, #8
   136e4:	sub	sp, sp, #8
   136e8:	mov	lr, #0
   136ec:	ldr	ip, [fp, #8]
   136f0:	ldr	r4, [ip, lr, lsl #2]
   136f4:	add	lr, lr, #1
   136f8:	cmp	r4, #0
   136fc:	bne	136f0 <putchar_unlocked@plt+0x2880>
   13700:	sub	r4, lr, #1
   13704:	str	ip, [sp]
   13708:	str	r4, [sp, #4]
   1370c:	bl	133a8 <putchar_unlocked@plt+0x2538>
   13710:	sub	sp, fp, #8
   13714:	pop	{r4, sl, fp, pc}
   13718:	push	{r4, r5, fp, lr}
   1371c:	add	fp, sp, #8
   13720:	sub	sp, sp, #48	; 0x30
   13724:	mov	ip, #0
   13728:	ldr	r4, [fp, #8]
   1372c:	add	lr, sp, #8
   13730:	ldr	r5, [r4]
   13734:	str	r5, [lr, ip, lsl #2]
   13738:	cmp	r5, #0
   1373c:	beq	13750 <putchar_unlocked@plt+0x28e0>
   13740:	add	ip, ip, #1
   13744:	add	r4, r4, #4
   13748:	cmp	ip, #10
   1374c:	bcc	13730 <putchar_unlocked@plt+0x28c0>
   13750:	str	lr, [sp]
   13754:	str	ip, [sp, #4]
   13758:	bl	133a8 <putchar_unlocked@plt+0x2538>
   1375c:	sub	sp, fp, #8
   13760:	pop	{r4, r5, fp, pc}
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	sub	sp, sp, #8
   13770:	add	ip, fp, #8
   13774:	str	ip, [sp, #4]
   13778:	str	ip, [sp]
   1377c:	bl	13718 <putchar_unlocked@plt+0x28a8>
   13780:	mov	sp, fp
   13784:	pop	{fp, pc}
   13788:	push	{fp, lr}
   1378c:	mov	fp, sp
   13790:	movw	r0, #24876	; 0x612c
   13794:	movt	r0, #2
   13798:	ldr	r1, [r0]
   1379c:	movw	r0, #18535	; 0x4867
   137a0:	movt	r0, #1
   137a4:	bl	10c78 <fputs_unlocked@plt>
   137a8:	movw	r1, #20439	; 0x4fd7
   137ac:	movt	r1, #1
   137b0:	mov	r0, #0
   137b4:	mov	r2, #5
   137b8:	bl	10ce4 <dcgettext@plt>
   137bc:	mov	r1, r0
   137c0:	movw	r2, #20459	; 0x4feb
   137c4:	movt	r2, #1
   137c8:	mov	r0, #1
   137cc:	bl	10dec <__printf_chk@plt>
   137d0:	movw	r1, #20481	; 0x5001
   137d4:	movt	r1, #1
   137d8:	mov	r0, #0
   137dc:	mov	r2, #5
   137e0:	bl	10ce4 <dcgettext@plt>
   137e4:	mov	r1, r0
   137e8:	movw	r2, #18822	; 0x4986
   137ec:	movt	r2, #1
   137f0:	movw	r3, #18836	; 0x4994
   137f4:	movt	r3, #1
   137f8:	mov	r0, #1
   137fc:	bl	10dec <__printf_chk@plt>
   13800:	movw	r1, #20501	; 0x5015
   13804:	movt	r1, #1
   13808:	mov	r0, #0
   1380c:	mov	r2, #5
   13810:	bl	10ce4 <dcgettext@plt>
   13814:	mov	r1, r0
   13818:	movw	r2, #20540	; 0x503c
   1381c:	movt	r2, #1
   13820:	mov	r0, #1
   13824:	pop	{fp, lr}
   13828:	b	10dec <__printf_chk@plt>
   1382c:	b	13830 <putchar_unlocked@plt+0x29c0>
   13830:	push	{r4, r5, r6, sl, fp, lr}
   13834:	add	fp, sp, #16
   13838:	mov	r4, r2
   1383c:	mov	r5, r1
   13840:	mov	r6, r0
   13844:	bl	143a0 <putchar_unlocked@plt+0x3530>
   13848:	cmp	r0, #0
   1384c:	popne	{r4, r5, r6, sl, fp, pc}
   13850:	cmp	r6, #0
   13854:	beq	13868 <putchar_unlocked@plt+0x29f8>
   13858:	cmp	r5, #0
   1385c:	cmpne	r4, #0
   13860:	bne	13868 <putchar_unlocked@plt+0x29f8>
   13864:	pop	{r4, r5, r6, sl, fp, pc}
   13868:	bl	13c1c <putchar_unlocked@plt+0x2dac>
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	13cb4 <putchar_unlocked@plt+0x2e44>
   13878:	bl	13880 <putchar_unlocked@plt+0x2a10>
   1387c:	pop	{fp, pc}
   13880:	cmp	r0, #0
   13884:	bxne	lr
   13888:	push	{fp, lr}
   1388c:	mov	fp, sp
   13890:	bl	13c1c <putchar_unlocked@plt+0x2dac>
   13894:	push	{fp, lr}
   13898:	mov	fp, sp
   1389c:	bl	142d4 <putchar_unlocked@plt+0x3464>
   138a0:	bl	13880 <putchar_unlocked@plt+0x2a10>
   138a4:	pop	{fp, pc}
   138a8:	b	1386c <putchar_unlocked@plt+0x29fc>
   138ac:	push	{r4, r5, fp, lr}
   138b0:	add	fp, sp, #8
   138b4:	mov	r4, r1
   138b8:	mov	r5, r0
   138bc:	bl	13ce4 <putchar_unlocked@plt+0x2e74>
   138c0:	cmp	r0, #0
   138c4:	popne	{r4, r5, fp, pc}
   138c8:	cmp	r5, #0
   138cc:	beq	138dc <putchar_unlocked@plt+0x2a6c>
   138d0:	cmp	r4, #0
   138d4:	bne	138dc <putchar_unlocked@plt+0x2a6c>
   138d8:	pop	{r4, r5, fp, pc}
   138dc:	bl	13c1c <putchar_unlocked@plt+0x2dac>
   138e0:	push	{fp, lr}
   138e4:	mov	fp, sp
   138e8:	bl	142d8 <putchar_unlocked@plt+0x3468>
   138ec:	bl	13880 <putchar_unlocked@plt+0x2a10>
   138f0:	pop	{fp, pc}
   138f4:	push	{fp, lr}
   138f8:	mov	fp, sp
   138fc:	bl	142e8 <putchar_unlocked@plt+0x3478>
   13900:	bl	13880 <putchar_unlocked@plt+0x2a10>
   13904:	pop	{fp, pc}
   13908:	push	{fp, lr}
   1390c:	mov	fp, sp
   13910:	mov	r2, r1
   13914:	mov	r1, r0
   13918:	mov	r0, #0
   1391c:	bl	13830 <putchar_unlocked@plt+0x29c0>
   13920:	pop	{fp, pc}
   13924:	mov	r2, r1
   13928:	mov	r1, r0
   1392c:	mov	r0, #0
   13930:	b	138f4 <putchar_unlocked@plt+0x2a84>
   13934:	mov	r2, #1
   13938:	b	1393c <putchar_unlocked@plt+0x2acc>
   1393c:	push	{r4, r5, fp, lr}
   13940:	add	fp, sp, #8
   13944:	mov	r4, r1
   13948:	ldr	r5, [r1]
   1394c:	cmp	r0, #0
   13950:	beq	13968 <putchar_unlocked@plt+0x2af8>
   13954:	mov	r1, #1
   13958:	add	r1, r1, r5, lsr #1
   1395c:	adds	r5, r5, r1
   13960:	bcc	13980 <putchar_unlocked@plt+0x2b10>
   13964:	bl	13c1c <putchar_unlocked@plt+0x2dac>
   13968:	cmp	r5, #0
   1396c:	bne	13980 <putchar_unlocked@plt+0x2b10>
   13970:	mov	r1, #64	; 0x40
   13974:	udiv	r5, r1, r2
   13978:	cmp	r2, #64	; 0x40
   1397c:	addhi	r5, r5, #1
   13980:	mov	r1, r5
   13984:	bl	13830 <putchar_unlocked@plt+0x29c0>
   13988:	str	r5, [r4]
   1398c:	pop	{r4, r5, fp, pc}
   13990:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13994:	add	fp, sp, #24
   13998:	mov	r8, r1
   1399c:	ldr	r6, [r1]
   139a0:	add	r1, r6, r6, asr #1
   139a4:	cmp	r1, r6
   139a8:	mvnvs	r1, #-2147483648	; 0x80000000
   139ac:	cmp	r1, r3
   139b0:	mov	r5, r1
   139b4:	movgt	r5, r3
   139b8:	cmn	r3, #1
   139bc:	movle	r5, r1
   139c0:	ldr	r4, [fp, #8]
   139c4:	cmn	r4, #1
   139c8:	ble	139f0 <putchar_unlocked@plt+0x2b80>
   139cc:	cmp	r4, #0
   139d0:	beq	13a44 <putchar_unlocked@plt+0x2bd4>
   139d4:	cmn	r5, #1
   139d8:	ble	13a18 <putchar_unlocked@plt+0x2ba8>
   139dc:	mvn	r7, #-2147483648	; 0x80000000
   139e0:	udiv	r1, r7, r4
   139e4:	cmp	r1, r5
   139e8:	bge	13a44 <putchar_unlocked@plt+0x2bd4>
   139ec:	b	13a54 <putchar_unlocked@plt+0x2be4>
   139f0:	cmn	r5, #1
   139f4:	ble	13a34 <putchar_unlocked@plt+0x2bc4>
   139f8:	cmn	r4, #1
   139fc:	beq	13a44 <putchar_unlocked@plt+0x2bd4>
   13a00:	mov	r1, #-2147483648	; 0x80000000
   13a04:	sdiv	r1, r1, r4
   13a08:	mvn	r7, #-2147483648	; 0x80000000
   13a0c:	cmp	r1, r5
   13a10:	bge	13a44 <putchar_unlocked@plt+0x2bd4>
   13a14:	b	13a54 <putchar_unlocked@plt+0x2be4>
   13a18:	beq	13a44 <putchar_unlocked@plt+0x2bd4>
   13a1c:	mov	r1, #-2147483648	; 0x80000000
   13a20:	sdiv	r1, r1, r5
   13a24:	mvn	r7, #-2147483648	; 0x80000000
   13a28:	cmp	r1, r4
   13a2c:	bge	13a44 <putchar_unlocked@plt+0x2bd4>
   13a30:	b	13a54 <putchar_unlocked@plt+0x2be4>
   13a34:	mvn	r7, #-2147483648	; 0x80000000
   13a38:	sdiv	r1, r7, r4
   13a3c:	cmp	r5, r1
   13a40:	blt	13a54 <putchar_unlocked@plt+0x2be4>
   13a44:	mul	r1, r5, r4
   13a48:	mov	r7, #64	; 0x40
   13a4c:	cmp	r1, #63	; 0x3f
   13a50:	bgt	13a5c <putchar_unlocked@plt+0x2bec>
   13a54:	sdiv	r5, r7, r4
   13a58:	mul	r1, r5, r4
   13a5c:	cmp	r0, #0
   13a60:	moveq	r7, #0
   13a64:	streq	r7, [r8]
   13a68:	sub	r7, r5, r6
   13a6c:	cmp	r7, r2
   13a70:	bge	13b1c <putchar_unlocked@plt+0x2cac>
   13a74:	add	r5, r6, r2
   13a78:	mov	r1, #0
   13a7c:	cmp	r5, r3
   13a80:	mov	r2, #0
   13a84:	movwgt	r2, #1
   13a88:	cmn	r3, #1
   13a8c:	movwgt	r1, #1
   13a90:	cmp	r5, r6
   13a94:	bvs	13b04 <putchar_unlocked@plt+0x2c94>
   13a98:	ands	r1, r1, r2
   13a9c:	bne	13b04 <putchar_unlocked@plt+0x2c94>
   13aa0:	cmn	r4, #1
   13aa4:	ble	13acc <putchar_unlocked@plt+0x2c5c>
   13aa8:	cmp	r4, #0
   13aac:	beq	13b18 <putchar_unlocked@plt+0x2ca8>
   13ab0:	cmn	r5, #1
   13ab4:	ble	13af0 <putchar_unlocked@plt+0x2c80>
   13ab8:	mvn	r1, #-2147483648	; 0x80000000
   13abc:	udiv	r1, r1, r4
   13ac0:	cmp	r1, r5
   13ac4:	bge	13b18 <putchar_unlocked@plt+0x2ca8>
   13ac8:	b	13b04 <putchar_unlocked@plt+0x2c94>
   13acc:	cmn	r5, #1
   13ad0:	ble	13b08 <putchar_unlocked@plt+0x2c98>
   13ad4:	cmn	r4, #1
   13ad8:	beq	13b18 <putchar_unlocked@plt+0x2ca8>
   13adc:	mov	r1, #-2147483648	; 0x80000000
   13ae0:	sdiv	r1, r1, r4
   13ae4:	cmp	r1, r5
   13ae8:	bge	13b18 <putchar_unlocked@plt+0x2ca8>
   13aec:	b	13b04 <putchar_unlocked@plt+0x2c94>
   13af0:	beq	13b18 <putchar_unlocked@plt+0x2ca8>
   13af4:	mov	r1, #-2147483648	; 0x80000000
   13af8:	sdiv	r1, r1, r5
   13afc:	cmp	r1, r4
   13b00:	bge	13b18 <putchar_unlocked@plt+0x2ca8>
   13b04:	bl	13c1c <putchar_unlocked@plt+0x2dac>
   13b08:	mvn	r1, #-2147483648	; 0x80000000
   13b0c:	sdiv	r1, r1, r4
   13b10:	cmp	r5, r1
   13b14:	blt	13b04 <putchar_unlocked@plt+0x2c94>
   13b18:	mul	r1, r5, r4
   13b1c:	bl	138ac <putchar_unlocked@plt+0x2a3c>
   13b20:	str	r5, [r8]
   13b24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b28:	mov	r1, #1
   13b2c:	b	13b30 <putchar_unlocked@plt+0x2cc0>
   13b30:	push	{fp, lr}
   13b34:	mov	fp, sp
   13b38:	bl	13c60 <putchar_unlocked@plt+0x2df0>
   13b3c:	bl	13880 <putchar_unlocked@plt+0x2a10>
   13b40:	pop	{fp, pc}
   13b44:	mov	r1, #1
   13b48:	b	13b4c <putchar_unlocked@plt+0x2cdc>
   13b4c:	push	{fp, lr}
   13b50:	mov	fp, sp
   13b54:	bl	142e4 <putchar_unlocked@plt+0x3474>
   13b58:	bl	13880 <putchar_unlocked@plt+0x2a10>
   13b5c:	pop	{fp, pc}
   13b60:	push	{r4, r5, r6, sl, fp, lr}
   13b64:	add	fp, sp, #16
   13b68:	mov	r4, r1
   13b6c:	mov	r5, r0
   13b70:	mov	r0, r1
   13b74:	bl	1386c <putchar_unlocked@plt+0x29fc>
   13b78:	mov	r6, r0
   13b7c:	mov	r1, r5
   13b80:	mov	r2, r4
   13b84:	bl	10cb4 <memcpy@plt>
   13b88:	mov	r0, r6
   13b8c:	pop	{r4, r5, r6, sl, fp, pc}
   13b90:	push	{r4, r5, r6, sl, fp, lr}
   13b94:	add	fp, sp, #16
   13b98:	mov	r4, r1
   13b9c:	mov	r5, r0
   13ba0:	mov	r0, r1
   13ba4:	bl	13894 <putchar_unlocked@plt+0x2a24>
   13ba8:	mov	r6, r0
   13bac:	mov	r1, r5
   13bb0:	mov	r2, r4
   13bb4:	bl	10cb4 <memcpy@plt>
   13bb8:	mov	r0, r6
   13bbc:	pop	{r4, r5, r6, sl, fp, pc}
   13bc0:	push	{r4, r5, r6, sl, fp, lr}
   13bc4:	add	fp, sp, #16
   13bc8:	mov	r4, r1
   13bcc:	mov	r5, r0
   13bd0:	add	r0, r1, #1
   13bd4:	bl	13894 <putchar_unlocked@plt+0x2a24>
   13bd8:	mov	r6, r0
   13bdc:	mov	r0, #0
   13be0:	strb	r0, [r6, r4]
   13be4:	mov	r0, r6
   13be8:	mov	r1, r5
   13bec:	mov	r2, r4
   13bf0:	bl	10cb4 <memcpy@plt>
   13bf4:	mov	r0, r6
   13bf8:	pop	{r4, r5, r6, sl, fp, pc}
   13bfc:	push	{r4, sl, fp, lr}
   13c00:	add	fp, sp, #8
   13c04:	mov	r4, r0
   13c08:	bl	10dbc <strlen@plt>
   13c0c:	add	r1, r0, #1
   13c10:	mov	r0, r4
   13c14:	pop	{r4, sl, fp, lr}
   13c18:	b	13b60 <putchar_unlocked@plt+0x2cf0>
   13c1c:	push	{fp, lr}
   13c20:	mov	fp, sp
   13c24:	movw	r0, #24784	; 0x60d0
   13c28:	movt	r0, #2
   13c2c:	ldr	r4, [r0]
   13c30:	movw	r1, #20616	; 0x5088
   13c34:	movt	r1, #1
   13c38:	mov	r0, #0
   13c3c:	mov	r2, #5
   13c40:	bl	10ce4 <dcgettext@plt>
   13c44:	mov	r3, r0
   13c48:	movw	r2, #19575	; 0x4c77
   13c4c:	movt	r2, #1
   13c50:	mov	r0, r4
   13c54:	mov	r1, #0
   13c58:	bl	10d5c <error@plt>
   13c5c:	bl	10e64 <abort@plt>
   13c60:	clz	r2, r1
   13c64:	lsr	r2, r2, #5
   13c68:	clz	r3, r0
   13c6c:	lsr	r3, r3, #5
   13c70:	orrs	r2, r3, r2
   13c74:	movwne	r1, #1
   13c78:	movwne	r0, #1
   13c7c:	cmp	r1, #0
   13c80:	beq	13cb0 <putchar_unlocked@plt+0x2e40>
   13c84:	mvn	r2, #-2147483648	; 0x80000000
   13c88:	udiv	r2, r2, r1
   13c8c:	cmp	r2, r0
   13c90:	bcs	13cb0 <putchar_unlocked@plt+0x2e40>
   13c94:	push	{fp, lr}
   13c98:	mov	fp, sp
   13c9c:	bl	10dc8 <__errno_location@plt>
   13ca0:	mov	r1, #12
   13ca4:	str	r1, [r0]
   13ca8:	mov	r0, #0
   13cac:	pop	{fp, pc}
   13cb0:	b	10c6c <calloc@plt>
   13cb4:	cmp	r0, #0
   13cb8:	movweq	r0, #1
   13cbc:	cmn	r0, #1
   13cc0:	ble	13cc8 <putchar_unlocked@plt+0x2e58>
   13cc4:	b	10d68 <malloc@plt>
   13cc8:	push	{fp, lr}
   13ccc:	mov	fp, sp
   13cd0:	bl	10dc8 <__errno_location@plt>
   13cd4:	mov	r1, #12
   13cd8:	str	r1, [r0]
   13cdc:	mov	r0, #0
   13ce0:	pop	{fp, pc}
   13ce4:	push	{fp, lr}
   13ce8:	mov	fp, sp
   13cec:	cmp	r0, #0
   13cf0:	beq	13d0c <putchar_unlocked@plt+0x2e9c>
   13cf4:	cmp	r1, #0
   13cf8:	beq	13d18 <putchar_unlocked@plt+0x2ea8>
   13cfc:	cmn	r1, #1
   13d00:	ble	13d24 <putchar_unlocked@plt+0x2eb4>
   13d04:	pop	{fp, lr}
   13d08:	b	10cf0 <realloc@plt>
   13d0c:	mov	r0, r1
   13d10:	pop	{fp, lr}
   13d14:	b	13cb4 <putchar_unlocked@plt+0x2e44>
   13d18:	bl	141ec <putchar_unlocked@plt+0x337c>
   13d1c:	mov	r0, #0
   13d20:	pop	{fp, pc}
   13d24:	bl	10dc8 <__errno_location@plt>
   13d28:	mov	r1, #12
   13d2c:	str	r1, [r0]
   13d30:	mov	r0, #0
   13d34:	pop	{fp, pc}
   13d38:	mov	r1, r0
   13d3c:	sub	r2, r0, #65	; 0x41
   13d40:	mov	r0, #1
   13d44:	cmp	r2, #26
   13d48:	subcs	r2, r1, #97	; 0x61
   13d4c:	cmpcs	r2, #26
   13d50:	bcs	13d58 <putchar_unlocked@plt+0x2ee8>
   13d54:	bx	lr
   13d58:	sub	r1, r1, #48	; 0x30
   13d5c:	cmp	r1, #10
   13d60:	movcs	r0, #0
   13d64:	bx	lr
   13d68:	mov	r1, r0
   13d6c:	sub	r2, r0, #65	; 0x41
   13d70:	mov	r0, #1
   13d74:	cmp	r2, #26
   13d78:	subcs	r1, r1, #97	; 0x61
   13d7c:	cmpcs	r1, #26
   13d80:	movcs	r0, #0
   13d84:	bx	lr
   13d88:	mov	r1, #0
   13d8c:	cmp	r0, #128	; 0x80
   13d90:	movwcc	r1, #1
   13d94:	mov	r0, r1
   13d98:	bx	lr
   13d9c:	sub	r1, r0, #9
   13da0:	clz	r1, r1
   13da4:	lsr	r1, r1, #5
   13da8:	sub	r0, r0, #32
   13dac:	clz	r0, r0
   13db0:	lsr	r0, r0, #5
   13db4:	orr	r0, r0, r1
   13db8:	bx	lr
   13dbc:	mov	r1, r0
   13dc0:	mov	r0, #1
   13dc4:	cmp	r1, #32
   13dc8:	bxcc	lr
   13dcc:	cmp	r1, #127	; 0x7f
   13dd0:	movne	r0, #0
   13dd4:	bx	lr
   13dd8:	sub	r1, r0, #48	; 0x30
   13ddc:	mov	r0, #0
   13de0:	cmp	r1, #10
   13de4:	movwcc	r0, #1
   13de8:	bx	lr
   13dec:	sub	r1, r0, #33	; 0x21
   13df0:	mov	r0, #0
   13df4:	cmp	r1, #94	; 0x5e
   13df8:	movwcc	r0, #1
   13dfc:	bx	lr
   13e00:	sub	r1, r0, #97	; 0x61
   13e04:	mov	r0, #0
   13e08:	cmp	r1, #26
   13e0c:	movwcc	r0, #1
   13e10:	bx	lr
   13e14:	sub	r1, r0, #32
   13e18:	mov	r0, #0
   13e1c:	cmp	r1, #95	; 0x5f
   13e20:	movwcc	r0, #1
   13e24:	bx	lr
   13e28:	sub	r1, r0, #33	; 0x21
   13e2c:	cmp	r1, #93	; 0x5d
   13e30:	bhi	13fbc <putchar_unlocked@plt+0x314c>
   13e34:	mov	r0, #1
   13e38:	add	r2, pc, #0
   13e3c:	ldr	pc, [r2, r1, lsl #2]
   13e40:			; <UNDEFINED> instruction: 0x00013fb8
   13e44:			; <UNDEFINED> instruction: 0x00013fb8
   13e48:			; <UNDEFINED> instruction: 0x00013fb8
   13e4c:			; <UNDEFINED> instruction: 0x00013fb8
   13e50:			; <UNDEFINED> instruction: 0x00013fb8
   13e54:			; <UNDEFINED> instruction: 0x00013fb8
   13e58:			; <UNDEFINED> instruction: 0x00013fb8
   13e5c:			; <UNDEFINED> instruction: 0x00013fb8
   13e60:			; <UNDEFINED> instruction: 0x00013fb8
   13e64:			; <UNDEFINED> instruction: 0x00013fb8
   13e68:			; <UNDEFINED> instruction: 0x00013fb8
   13e6c:			; <UNDEFINED> instruction: 0x00013fb8
   13e70:			; <UNDEFINED> instruction: 0x00013fb8
   13e74:			; <UNDEFINED> instruction: 0x00013fb8
   13e78:			; <UNDEFINED> instruction: 0x00013fb8
   13e7c:			; <UNDEFINED> instruction: 0x00013fbc
   13e80:			; <UNDEFINED> instruction: 0x00013fbc
   13e84:			; <UNDEFINED> instruction: 0x00013fbc
   13e88:			; <UNDEFINED> instruction: 0x00013fbc
   13e8c:			; <UNDEFINED> instruction: 0x00013fbc
   13e90:			; <UNDEFINED> instruction: 0x00013fbc
   13e94:			; <UNDEFINED> instruction: 0x00013fbc
   13e98:			; <UNDEFINED> instruction: 0x00013fbc
   13e9c:			; <UNDEFINED> instruction: 0x00013fbc
   13ea0:			; <UNDEFINED> instruction: 0x00013fbc
   13ea4:			; <UNDEFINED> instruction: 0x00013fb8
   13ea8:			; <UNDEFINED> instruction: 0x00013fb8
   13eac:			; <UNDEFINED> instruction: 0x00013fb8
   13eb0:			; <UNDEFINED> instruction: 0x00013fb8
   13eb4:			; <UNDEFINED> instruction: 0x00013fb8
   13eb8:			; <UNDEFINED> instruction: 0x00013fb8
   13ebc:			; <UNDEFINED> instruction: 0x00013fb8
   13ec0:			; <UNDEFINED> instruction: 0x00013fbc
   13ec4:			; <UNDEFINED> instruction: 0x00013fbc
   13ec8:			; <UNDEFINED> instruction: 0x00013fbc
   13ecc:			; <UNDEFINED> instruction: 0x00013fbc
   13ed0:			; <UNDEFINED> instruction: 0x00013fbc
   13ed4:			; <UNDEFINED> instruction: 0x00013fbc
   13ed8:			; <UNDEFINED> instruction: 0x00013fbc
   13edc:			; <UNDEFINED> instruction: 0x00013fbc
   13ee0:			; <UNDEFINED> instruction: 0x00013fbc
   13ee4:			; <UNDEFINED> instruction: 0x00013fbc
   13ee8:			; <UNDEFINED> instruction: 0x00013fbc
   13eec:			; <UNDEFINED> instruction: 0x00013fbc
   13ef0:			; <UNDEFINED> instruction: 0x00013fbc
   13ef4:			; <UNDEFINED> instruction: 0x00013fbc
   13ef8:			; <UNDEFINED> instruction: 0x00013fbc
   13efc:			; <UNDEFINED> instruction: 0x00013fbc
   13f00:			; <UNDEFINED> instruction: 0x00013fbc
   13f04:			; <UNDEFINED> instruction: 0x00013fbc
   13f08:			; <UNDEFINED> instruction: 0x00013fbc
   13f0c:			; <UNDEFINED> instruction: 0x00013fbc
   13f10:			; <UNDEFINED> instruction: 0x00013fbc
   13f14:			; <UNDEFINED> instruction: 0x00013fbc
   13f18:			; <UNDEFINED> instruction: 0x00013fbc
   13f1c:			; <UNDEFINED> instruction: 0x00013fbc
   13f20:			; <UNDEFINED> instruction: 0x00013fbc
   13f24:			; <UNDEFINED> instruction: 0x00013fbc
   13f28:			; <UNDEFINED> instruction: 0x00013fb8
   13f2c:			; <UNDEFINED> instruction: 0x00013fb8
   13f30:			; <UNDEFINED> instruction: 0x00013fb8
   13f34:			; <UNDEFINED> instruction: 0x00013fb8
   13f38:			; <UNDEFINED> instruction: 0x00013fb8
   13f3c:			; <UNDEFINED> instruction: 0x00013fb8
   13f40:			; <UNDEFINED> instruction: 0x00013fbc
   13f44:			; <UNDEFINED> instruction: 0x00013fbc
   13f48:			; <UNDEFINED> instruction: 0x00013fbc
   13f4c:			; <UNDEFINED> instruction: 0x00013fbc
   13f50:			; <UNDEFINED> instruction: 0x00013fbc
   13f54:			; <UNDEFINED> instruction: 0x00013fbc
   13f58:			; <UNDEFINED> instruction: 0x00013fbc
   13f5c:			; <UNDEFINED> instruction: 0x00013fbc
   13f60:			; <UNDEFINED> instruction: 0x00013fbc
   13f64:			; <UNDEFINED> instruction: 0x00013fbc
   13f68:			; <UNDEFINED> instruction: 0x00013fbc
   13f6c:			; <UNDEFINED> instruction: 0x00013fbc
   13f70:			; <UNDEFINED> instruction: 0x00013fbc
   13f74:			; <UNDEFINED> instruction: 0x00013fbc
   13f78:			; <UNDEFINED> instruction: 0x00013fbc
   13f7c:			; <UNDEFINED> instruction: 0x00013fbc
   13f80:			; <UNDEFINED> instruction: 0x00013fbc
   13f84:			; <UNDEFINED> instruction: 0x00013fbc
   13f88:			; <UNDEFINED> instruction: 0x00013fbc
   13f8c:			; <UNDEFINED> instruction: 0x00013fbc
   13f90:			; <UNDEFINED> instruction: 0x00013fbc
   13f94:			; <UNDEFINED> instruction: 0x00013fbc
   13f98:			; <UNDEFINED> instruction: 0x00013fbc
   13f9c:			; <UNDEFINED> instruction: 0x00013fbc
   13fa0:			; <UNDEFINED> instruction: 0x00013fbc
   13fa4:			; <UNDEFINED> instruction: 0x00013fbc
   13fa8:			; <UNDEFINED> instruction: 0x00013fb8
   13fac:			; <UNDEFINED> instruction: 0x00013fb8
   13fb0:			; <UNDEFINED> instruction: 0x00013fb8
   13fb4:			; <UNDEFINED> instruction: 0x00013fb8
   13fb8:	bx	lr
   13fbc:	mov	r0, #0
   13fc0:	bx	lr
   13fc4:	sub	r0, r0, #9
   13fc8:	cmp	r0, #23
   13fcc:	movhi	r0, #0
   13fd0:	bxhi	lr
   13fd4:	bic	r0, r0, #-16777216	; 0xff000000
   13fd8:	movw	r1, #31
   13fdc:	movt	r1, #128	; 0x80
   13fe0:	mov	r2, #1
   13fe4:	and	r0, r2, r1, lsr r0
   13fe8:	bx	lr
   13fec:	sub	r1, r0, #65	; 0x41
   13ff0:	mov	r0, #0
   13ff4:	cmp	r1, #26
   13ff8:	movwcc	r0, #1
   13ffc:	bx	lr
   14000:	mov	r1, r0
   14004:	sub	r2, r0, #48	; 0x30
   14008:	mov	r0, #1
   1400c:	cmp	r2, #22
   14010:	bhi	14028 <putchar_unlocked@plt+0x31b8>
   14014:	mov	ip, #1
   14018:	movw	r3, #1023	; 0x3ff
   1401c:	movt	r3, #126	; 0x7e
   14020:	tst	r3, ip, lsl r2
   14024:	bxne	lr
   14028:	sub	r1, r1, #97	; 0x61
   1402c:	cmp	r1, #6
   14030:	movcs	r0, #0
   14034:	bxcs	lr
   14038:	bx	lr
   1403c:	sub	r1, r0, #65	; 0x41
   14040:	cmp	r1, #26
   14044:	addcc	r0, r0, #32
   14048:	bx	lr
   1404c:	sub	r1, r0, #97	; 0x61
   14050:	cmp	r1, #26
   14054:	subcc	r0, r0, #32
   14058:	bx	lr
   1405c:	push	{r4, r5, r6, sl, fp, lr}
   14060:	add	fp, sp, #16
   14064:	mov	r4, r0
   14068:	bl	10d38 <__fpending@plt>
   1406c:	mov	r5, r0
   14070:	mov	r0, r4
   14074:	bl	10d44 <ferror_unlocked@plt>
   14078:	mov	r6, r0
   1407c:	mov	r0, r4
   14080:	bl	140e4 <putchar_unlocked@plt+0x3274>
   14084:	cmp	r6, #0
   14088:	beq	140a8 <putchar_unlocked@plt+0x3238>
   1408c:	mvn	r4, #0
   14090:	cmp	r0, #0
   14094:	bne	140dc <putchar_unlocked@plt+0x326c>
   14098:	bl	10dc8 <__errno_location@plt>
   1409c:	mov	r1, #0
   140a0:	str	r1, [r0]
   140a4:	b	140dc <putchar_unlocked@plt+0x326c>
   140a8:	cmp	r0, #0
   140ac:	mov	r4, r0
   140b0:	mvnne	r4, #0
   140b4:	cmp	r5, #0
   140b8:	bne	140dc <putchar_unlocked@plt+0x326c>
   140bc:	cmp	r0, #0
   140c0:	beq	140dc <putchar_unlocked@plt+0x326c>
   140c4:	bl	10dc8 <__errno_location@plt>
   140c8:	ldr	r0, [r0]
   140cc:	subs	r4, r0, #9
   140d0:	mvnne	r4, #0
   140d4:	mov	r0, r4
   140d8:	pop	{r4, r5, r6, sl, fp, pc}
   140dc:	mov	r0, r4
   140e0:	pop	{r4, r5, r6, sl, fp, pc}
   140e4:	push	{r4, r5, fp, lr}
   140e8:	add	fp, sp, #8
   140ec:	sub	sp, sp, #8
   140f0:	mov	r4, r0
   140f4:	bl	10df8 <fileno@plt>
   140f8:	cmn	r0, #1
   140fc:	ble	14174 <putchar_unlocked@plt+0x3304>
   14100:	mov	r0, r4
   14104:	bl	10d80 <__freading@plt>
   14108:	cmp	r0, #0
   1410c:	beq	14138 <putchar_unlocked@plt+0x32c8>
   14110:	mov	r0, r4
   14114:	bl	10df8 <fileno@plt>
   14118:	mov	r1, #1
   1411c:	str	r1, [sp]
   14120:	mov	r2, #0
   14124:	mov	r3, #0
   14128:	bl	10d20 <lseek64@plt>
   1412c:	and	r0, r0, r1
   14130:	cmn	r0, #1
   14134:	beq	14174 <putchar_unlocked@plt+0x3304>
   14138:	mov	r0, r4
   1413c:	bl	14184 <putchar_unlocked@plt+0x3314>
   14140:	cmp	r0, #0
   14144:	beq	14174 <putchar_unlocked@plt+0x3304>
   14148:	bl	10dc8 <__errno_location@plt>
   1414c:	ldr	r5, [r0]
   14150:	mov	r0, r4
   14154:	bl	10e10 <fclose@plt>
   14158:	cmp	r5, #0
   1415c:	beq	1416c <putchar_unlocked@plt+0x32fc>
   14160:	bl	10dc8 <__errno_location@plt>
   14164:	str	r5, [r0]
   14168:	mvn	r0, #0
   1416c:	sub	sp, fp, #8
   14170:	pop	{r4, r5, fp, pc}
   14174:	mov	r0, r4
   14178:	sub	sp, fp, #8
   1417c:	pop	{r4, r5, fp, lr}
   14180:	b	10e10 <fclose@plt>
   14184:	push	{r4, sl, fp, lr}
   14188:	add	fp, sp, #8
   1418c:	mov	r4, r0
   14190:	cmp	r0, #0
   14194:	beq	141ac <putchar_unlocked@plt+0x333c>
   14198:	mov	r0, r4
   1419c:	bl	10d80 <__freading@plt>
   141a0:	cmp	r0, #0
   141a4:	movne	r0, r4
   141a8:	blne	141b8 <putchar_unlocked@plt+0x3348>
   141ac:	mov	r0, r4
   141b0:	pop	{r4, sl, fp, lr}
   141b4:	b	10c90 <fflush@plt>
   141b8:	ldrb	r1, [r0, #1]
   141bc:	tst	r1, #1
   141c0:	bxeq	lr
   141c4:	push	{fp, lr}
   141c8:	mov	fp, sp
   141cc:	sub	sp, sp, #8
   141d0:	mov	r1, #1
   141d4:	str	r1, [sp]
   141d8:	mov	r2, #0
   141dc:	mov	r3, #0
   141e0:	bl	14214 <putchar_unlocked@plt+0x33a4>
   141e4:	mov	sp, fp
   141e8:	pop	{fp, pc}
   141ec:	push	{r4, r5, r6, sl, fp, lr}
   141f0:	add	fp, sp, #16
   141f4:	mov	r4, r0
   141f8:	bl	10dc8 <__errno_location@plt>
   141fc:	mov	r5, r0
   14200:	ldr	r6, [r0]
   14204:	mov	r0, r4
   14208:	bl	10c9c <free@plt>
   1420c:	str	r6, [r5]
   14210:	pop	{r4, r5, r6, sl, fp, pc}
   14214:	push	{r4, r5, r6, r7, fp, lr}
   14218:	add	fp, sp, #16
   1421c:	sub	sp, sp, #8
   14220:	mov	r5, r3
   14224:	mov	r6, r2
   14228:	mov	r4, r0
   1422c:	ldr	r0, [r0, #4]
   14230:	ldr	r1, [r4, #8]
   14234:	cmp	r1, r0
   14238:	bne	14254 <putchar_unlocked@plt+0x33e4>
   1423c:	ldrd	r0, [r4, #16]
   14240:	cmp	r1, r0
   14244:	bne	14254 <putchar_unlocked@plt+0x33e4>
   14248:	ldr	r0, [r4, #36]	; 0x24
   1424c:	cmp	r0, #0
   14250:	beq	1426c <putchar_unlocked@plt+0x33fc>
   14254:	mov	r0, r4
   14258:	mov	r2, r6
   1425c:	mov	r3, r5
   14260:	sub	sp, fp, #16
   14264:	pop	{r4, r5, r6, r7, fp, lr}
   14268:	b	10e1c <fseeko64@plt>
   1426c:	ldr	r7, [fp, #8]
   14270:	mov	r0, r4
   14274:	bl	10df8 <fileno@plt>
   14278:	str	r7, [sp]
   1427c:	mov	r2, r6
   14280:	mov	r3, r5
   14284:	bl	10d20 <lseek64@plt>
   14288:	and	r2, r0, r1
   1428c:	cmn	r2, #1
   14290:	mvneq	r0, #0
   14294:	subeq	sp, fp, #16
   14298:	popeq	{r4, r5, r6, r7, fp, pc}
   1429c:	strd	r0, [r4, #80]	; 0x50
   142a0:	ldr	r0, [r4]
   142a4:	bic	r0, r0, #16
   142a8:	str	r0, [r4]
   142ac:	mov	r0, #0
   142b0:	sub	sp, fp, #16
   142b4:	pop	{r4, r5, r6, r7, fp, pc}
   142b8:	push	{fp, lr}
   142bc:	mov	fp, sp
   142c0:	bl	10dc8 <__errno_location@plt>
   142c4:	mov	r1, #12
   142c8:	str	r1, [r0]
   142cc:	mov	r0, #0
   142d0:	pop	{fp, pc}
   142d4:	b	13cb4 <putchar_unlocked@plt+0x2e44>
   142d8:	cmp	r1, #0
   142dc:	orreq	r1, r1, #1
   142e0:	b	13ce4 <putchar_unlocked@plt+0x2e74>
   142e4:	b	13c60 <putchar_unlocked@plt+0x2df0>
   142e8:	clz	r3, r2
   142ec:	lsr	ip, r3, #5
   142f0:	clz	r3, r1
   142f4:	lsr	r3, r3, #5
   142f8:	orrs	r3, r3, ip
   142fc:	movwne	r1, #1
   14300:	movwne	r2, #1
   14304:	b	143a0 <putchar_unlocked@plt+0x3530>
   14308:	push	{fp, lr}
   1430c:	mov	fp, sp
   14310:	mov	r0, #14
   14314:	bl	10e40 <nl_langinfo@plt>
   14318:	movw	r1, #18536	; 0x4868
   1431c:	movt	r1, #1
   14320:	cmp	r0, #0
   14324:	movne	r1, r0
   14328:	ldrb	r2, [r1]
   1432c:	movw	r0, #20633	; 0x5099
   14330:	movt	r0, #1
   14334:	cmp	r2, #0
   14338:	movne	r0, r1
   1433c:	pop	{fp, pc}
   14340:	push	{r4, r5, r6, r7, fp, lr}
   14344:	add	fp, sp, #16
   14348:	sub	sp, sp, #8
   1434c:	mov	r7, r2
   14350:	mov	r4, r1
   14354:	add	r5, sp, #4
   14358:	cmp	r0, #0
   1435c:	movne	r5, r0
   14360:	mov	r0, r5
   14364:	bl	10d50 <mbrtowc@plt>
   14368:	mov	r6, r0
   1436c:	cmp	r7, #0
   14370:	beq	14394 <putchar_unlocked@plt+0x3524>
   14374:	cmn	r6, #2
   14378:	bcc	14394 <putchar_unlocked@plt+0x3524>
   1437c:	mov	r0, #0
   14380:	bl	143dc <putchar_unlocked@plt+0x356c>
   14384:	cmp	r0, #0
   14388:	ldrbeq	r0, [r4]
   1438c:	streq	r0, [r5]
   14390:	moveq	r6, #1
   14394:	mov	r0, r6
   14398:	sub	sp, fp, #16
   1439c:	pop	{r4, r5, r6, r7, fp, pc}
   143a0:	cmp	r2, #0
   143a4:	beq	143d4 <putchar_unlocked@plt+0x3564>
   143a8:	mvn	r3, #0
   143ac:	udiv	r3, r3, r2
   143b0:	cmp	r3, r1
   143b4:	bcs	143d4 <putchar_unlocked@plt+0x3564>
   143b8:	push	{fp, lr}
   143bc:	mov	fp, sp
   143c0:	bl	10dc8 <__errno_location@plt>
   143c4:	mov	r1, #12
   143c8:	str	r1, [r0]
   143cc:	mov	r0, #0
   143d0:	pop	{fp, pc}
   143d4:	mul	r1, r2, r1
   143d8:	b	13ce4 <putchar_unlocked@plt+0x2e74>
   143dc:	push	{r4, sl, fp, lr}
   143e0:	add	fp, sp, #8
   143e4:	sub	sp, sp, #264	; 0x108
   143e8:	add	r1, sp, #7
   143ec:	movw	r2, #257	; 0x101
   143f0:	bl	14440 <putchar_unlocked@plt+0x35d0>
   143f4:	mov	r4, #0
   143f8:	cmp	r0, #0
   143fc:	bne	14434 <putchar_unlocked@plt+0x35c4>
   14400:	add	r0, sp, #7
   14404:	movw	r1, #20639	; 0x509f
   14408:	movt	r1, #1
   1440c:	bl	10c84 <strcmp@plt>
   14410:	cmp	r0, #0
   14414:	beq	14434 <putchar_unlocked@plt+0x35c4>
   14418:	add	r0, sp, #7
   1441c:	movw	r1, #20641	; 0x50a1
   14420:	movt	r1, #1
   14424:	bl	10c84 <strcmp@plt>
   14428:	mov	r4, r0
   1442c:	cmp	r0, #0
   14430:	movwne	r4, #1
   14434:	mov	r0, r4
   14438:	sub	sp, fp, #8
   1443c:	pop	{r4, sl, fp, pc}
   14440:	b	14444 <putchar_unlocked@plt+0x35d4>
   14444:	push	{r4, r5, r6, r7, fp, lr}
   14448:	add	fp, sp, #16
   1444c:	mov	r6, r2
   14450:	mov	r4, r1
   14454:	bl	144e0 <putchar_unlocked@plt+0x3670>
   14458:	cmp	r0, #0
   1445c:	beq	1448c <putchar_unlocked@plt+0x361c>
   14460:	mov	r7, r0
   14464:	bl	10dbc <strlen@plt>
   14468:	cmp	r0, r6
   1446c:	bcs	144ac <putchar_unlocked@plt+0x363c>
   14470:	add	r2, r0, #1
   14474:	mov	r0, r4
   14478:	mov	r1, r7
   1447c:	bl	10cb4 <memcpy@plt>
   14480:	mov	r5, #0
   14484:	mov	r0, r5
   14488:	pop	{r4, r5, r6, r7, fp, pc}
   1448c:	mov	r5, #22
   14490:	cmp	r6, #0
   14494:	movne	r0, #0
   14498:	strbne	r0, [r4]
   1449c:	movne	r0, r5
   144a0:	popne	{r4, r5, r6, r7, fp, pc}
   144a4:	mov	r0, r5
   144a8:	pop	{r4, r5, r6, r7, fp, pc}
   144ac:	mov	r5, #34	; 0x22
   144b0:	cmp	r6, #0
   144b4:	beq	144d4 <putchar_unlocked@plt+0x3664>
   144b8:	sub	r6, r6, #1
   144bc:	mov	r0, r4
   144c0:	mov	r1, r7
   144c4:	mov	r2, r6
   144c8:	bl	10cb4 <memcpy@plt>
   144cc:	mov	r0, #0
   144d0:	strb	r0, [r4, r6]
   144d4:	mov	r0, r5
   144d8:	pop	{r4, r5, r6, r7, fp, pc}
   144dc:	b	144e0 <putchar_unlocked@plt+0x3670>
   144e0:	mov	r1, #0
   144e4:	b	10e28 <setlocale@plt>
   144e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144ec:	mov	r7, r0
   144f0:	ldr	r6, [pc, #72]	; 14540 <putchar_unlocked@plt+0x36d0>
   144f4:	ldr	r5, [pc, #72]	; 14544 <putchar_unlocked@plt+0x36d4>
   144f8:	add	r6, pc, r6
   144fc:	add	r5, pc, r5
   14500:	sub	r6, r6, r5
   14504:	mov	r8, r1
   14508:	mov	r9, r2
   1450c:	bl	10c4c <calloc@plt-0x20>
   14510:	asrs	r6, r6, #2
   14514:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14518:	mov	r4, #0
   1451c:	add	r4, r4, #1
   14520:	ldr	r3, [r5], #4
   14524:	mov	r2, r9
   14528:	mov	r1, r8
   1452c:	mov	r0, r7
   14530:	blx	r3
   14534:	cmp	r6, r4
   14538:	bne	1451c <putchar_unlocked@plt+0x36ac>
   1453c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14540:	andeq	r1, r1, ip, lsl #20
   14544:	andeq	r1, r1, r4, lsl #20
   14548:	bx	lr
   1454c:	ldr	r3, [pc, #12]	; 14560 <putchar_unlocked@plt+0x36f0>
   14550:	mov	r1, #0
   14554:	add	r3, pc, r3
   14558:	ldr	r2, [r3]
   1455c:	b	10dd4 <__cxa_atexit@plt>
   14560:	andeq	r1, r1, r8, ror #22

Disassembly of section .fini:

00014564 <.fini>:
   14564:	push	{r3, lr}
   14568:	pop	{r3, pc}
