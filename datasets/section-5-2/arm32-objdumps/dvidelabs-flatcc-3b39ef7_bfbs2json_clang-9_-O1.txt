
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001098c <.init>:
   1098c:	push	{r3, lr}
   10990:	bl	10ac0 <_start@@Base+0x3c>
   10994:	pop	{r3, pc}

Disassembly of section .plt:

00010998 <printf@plt-0x14>:
   10998:	push	{lr}		; (str lr, [sp, #-4]!)
   1099c:	ldr	lr, [pc, #4]	; 109a8 <printf@plt-0x4>
   109a0:	add	lr, pc, lr
   109a4:	ldr	pc, [lr, #8]!
   109a8:	andeq	r3, r1, r8, asr r6

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #77824	; 0x13000
   109b4:	ldr	pc, [ip, #1624]!	; 0x658

000109b8 <fopen@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #77824	; 0x13000
   109c0:	ldr	pc, [ip, #1616]!	; 0x650

000109c4 <free@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #77824	; 0x13000
   109cc:	ldr	pc, [ip, #1608]!	; 0x648

000109d0 <ftell@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #77824	; 0x13000
   109d8:	ldr	pc, [ip, #1600]!	; 0x640

000109dc <rewind@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #77824	; 0x13000
   109e4:	ldr	pc, [ip, #1592]!	; 0x638

000109e8 <fwrite@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #77824	; 0x13000
   109f0:	ldr	pc, [ip, #1584]!	; 0x630

000109f4 <puts@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #77824	; 0x13000
   109fc:	ldr	pc, [ip, #1576]!	; 0x628

00010a00 <malloc@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #77824	; 0x13000
   10a08:	ldr	pc, [ip, #1568]!	; 0x620

00010a0c <__libc_start_main@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #77824	; 0x13000
   10a14:	ldr	pc, [ip, #1560]!	; 0x618

00010a18 <__gmon_start__@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #77824	; 0x13000
   10a20:	ldr	pc, [ip, #1552]!	; 0x610

00010a24 <exit@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #77824	; 0x13000
   10a2c:	ldr	pc, [ip, #1544]!	; 0x608

00010a30 <fprintf@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #77824	; 0x13000
   10a38:	ldr	pc, [ip, #1536]!	; 0x600

00010a3c <putchar@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #77824	; 0x13000
   10a44:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a48 <fclose@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #77824	; 0x13000
   10a50:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a54 <fread_unlocked@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #77824	; 0x13000
   10a5c:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a60 <fseek@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #77824	; 0x13000
   10a68:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a6c <abort@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #77824	; 0x13000
   10a74:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a78 <__assert_fail@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #77824	; 0x13000
   10a80:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a84 <_start@@Base>:
   10a84:	mov	fp, #0
   10a88:	mov	lr, #0
   10a8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a90:	mov	r2, sp
   10a94:	push	{r2}		; (str r2, [sp, #-4]!)
   10a98:	push	{r0}		; (str r0, [sp, #-4]!)
   10a9c:	ldr	ip, [pc, #16]	; 10ab4 <_start@@Base+0x30>
   10aa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa4:	ldr	r0, [pc, #12]	; 10ab8 <_start@@Base+0x34>
   10aa8:	ldr	r3, [pc, #12]	; 10abc <_start@@Base+0x38>
   10aac:	bl	10a0c <__libc_start_main@plt>
   10ab0:	bl	10a6c <abort@plt>
   10ab4:	strdeq	r2, [r1], -r4
   10ab8:	andeq	r2, r1, ip, ror #16
   10abc:	muleq	r1, r4, r9
   10ac0:	ldr	r3, [pc, #20]	; 10adc <_start@@Base+0x58>
   10ac4:	ldr	r2, [pc, #20]	; 10ae0 <_start@@Base+0x5c>
   10ac8:	add	r3, pc, r3
   10acc:	ldr	r2, [r3, r2]
   10ad0:	cmp	r2, #0
   10ad4:	bxeq	lr
   10ad8:	b	10a18 <__gmon_start__@plt>
   10adc:	andeq	r3, r1, r0, lsr r5
   10ae0:	andeq	r0, r0, r4, asr r0
   10ae4:	ldr	r0, [pc, #24]	; 10b04 <_start@@Base+0x80>
   10ae8:	ldr	r3, [pc, #24]	; 10b08 <_start@@Base+0x84>
   10aec:	cmp	r3, r0
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0x88>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r4, r2, r0, rrx
   10b08:	andeq	r4, r2, r0, rrx
   10b0c:	andeq	r0, r0, r0
   10b10:	ldr	r0, [pc, #36]	; 10b3c <_start@@Base+0xb8>
   10b14:	ldr	r1, [pc, #36]	; 10b40 <_start@@Base+0xbc>
   10b18:	sub	r1, r1, r0
   10b1c:	asr	r1, r1, #2
   10b20:	add	r1, r1, r1, lsr #31
   10b24:	asrs	r1, r1, #1
   10b28:	bxeq	lr
   10b2c:	ldr	r3, [pc, #16]	; 10b44 <_start@@Base+0xc0>
   10b30:	cmp	r3, #0
   10b34:	bxeq	lr
   10b38:	bx	r3
   10b3c:	andeq	r4, r2, r0, rrx
   10b40:	andeq	r4, r2, r0, rrx
   10b44:	andeq	r0, r0, r0
   10b48:	push	{r4, lr}
   10b4c:	ldr	r4, [pc, #24]	; 10b6c <_start@@Base+0xe8>
   10b50:	ldrb	r3, [r4]
   10b54:	cmp	r3, #0
   10b58:	popne	{r4, pc}
   10b5c:	bl	10ae4 <_start@@Base+0x60>
   10b60:	mov	r3, #1
   10b64:	strb	r3, [r4]
   10b68:	pop	{r4, pc}
   10b6c:	andeq	r4, r2, r4, rrx
   10b70:	b	10b10 <_start@@Base+0x8c>

00010b74 <print_type@@Base>:
   10b74:	push	{r4, r5, fp, lr}
   10b78:	add	fp, sp, #8
   10b7c:	mov	r4, r0
   10b80:	mov	r0, #123	; 0x7b
   10b84:	bl	10a3c <putchar@plt>
   10b88:	mov	r0, r4
   10b8c:	bl	10c44 <print_type@@Base+0xd0>
   10b90:	cmp	r0, #0
   10b94:	beq	10bbc <print_type@@Base+0x48>
   10b98:	mov	r0, r4
   10b9c:	bl	10cd0 <print_type@@Base+0x15c>
   10ba0:	bl	10cac <print_type@@Base+0x138>
   10ba4:	mov	r1, r0
   10ba8:	movw	r0, #10756	; 0x2a04
   10bac:	movt	r0, #1
   10bb0:	bl	109ac <printf@plt>
   10bb4:	mov	r5, #0
   10bb8:	b	10bc0 <print_type@@Base+0x4c>
   10bbc:	mov	r5, #1
   10bc0:	mov	r0, r4
   10bc4:	bl	10d40 <print_type@@Base+0x1cc>
   10bc8:	cmp	r0, #0
   10bcc:	beq	10c00 <print_type@@Base+0x8c>
   10bd0:	cmp	r5, #0
   10bd4:	bne	10be0 <print_type@@Base+0x6c>
   10bd8:	mov	r0, #44	; 0x2c
   10bdc:	bl	10a3c <putchar@plt>
   10be0:	mov	r0, r4
   10be4:	bl	10cd0 <print_type@@Base+0x15c>
   10be8:	bl	10cac <print_type@@Base+0x138>
   10bec:	mov	r1, r0
   10bf0:	movw	r0, #10773	; 0x2a15
   10bf4:	movt	r0, #1
   10bf8:	bl	109ac <printf@plt>
   10bfc:	mov	r5, #0
   10c00:	mov	r0, r4
   10c04:	bl	10da8 <print_type@@Base+0x234>
   10c08:	cmp	r0, #0
   10c0c:	beq	10c38 <print_type@@Base+0xc4>
   10c10:	cmp	r5, #0
   10c14:	bne	10c20 <print_type@@Base+0xac>
   10c18:	mov	r0, #44	; 0x2c
   10c1c:	bl	10a3c <putchar@plt>
   10c20:	mov	r0, r4
   10c24:	bl	10e10 <print_type@@Base+0x29c>
   10c28:	mov	r1, r0
   10c2c:	movw	r0, #10788	; 0x2a24
   10c30:	movt	r0, #1
   10c34:	bl	109ac <printf@plt>
   10c38:	mov	r0, #125	; 0x7d
   10c3c:	pop	{r4, r5, fp, lr}
   10c40:	b	10a3c <putchar@plt>
   10c44:	push	{r4, sl, fp, lr}
   10c48:	add	fp, sp, #8
   10c4c:	cmp	r0, #0
   10c50:	beq	10c8c <print_type@@Base+0x118>
   10c54:	mov	r4, r0
   10c58:	bl	128e0 <main@@Base+0x74>
   10c5c:	sub	r4, r4, r0
   10c60:	mov	r0, r4
   10c64:	bl	128e8 <main@@Base+0x7c>
   10c68:	mov	r1, r0
   10c6c:	mov	r0, #0
   10c70:	cmp	r1, #6
   10c74:	popcc	{r4, sl, fp, pc}
   10c78:	add	r0, r4, #4
   10c7c:	bl	128e8 <main@@Base+0x7c>
   10c80:	cmp	r0, #0
   10c84:	movwne	r0, #1
   10c88:	pop	{r4, sl, fp, pc}
   10c8c:	movw	r0, #11557	; 0x2d25
   10c90:	movt	r0, #1
   10c94:	movw	r1, #11595	; 0x2d4b
   10c98:	movt	r1, #1
   10c9c:	movw	r3, #11689	; 0x2da9
   10ca0:	movt	r3, #1
   10ca4:	mov	r2, #147	; 0x93
   10ca8:	bl	10a78 <__assert_fail@plt>
   10cac:	uxtb	r1, r0
   10cb0:	cmp	r1, #16
   10cb4:	movwhi	r0, #11375	; 0x2c6f
   10cb8:	movthi	r0, #1
   10cbc:	bxhi	lr
   10cc0:	movw	r1, #15168	; 0x3b40
   10cc4:	movt	r1, #1
   10cc8:	ldr	r0, [r1, r0, lsl #2]
   10ccc:	bx	lr
   10cd0:	push	{r4, r5, fp, lr}
   10cd4:	add	fp, sp, #8
   10cd8:	cmp	r0, #0
   10cdc:	beq	10d20 <print_type@@Base+0x1ac>
   10ce0:	mov	r4, r0
   10ce4:	bl	128e0 <main@@Base+0x74>
   10ce8:	sub	r5, r4, r0
   10cec:	mov	r0, r5
   10cf0:	bl	128e8 <main@@Base+0x7c>
   10cf4:	cmp	r0, #6
   10cf8:	bcc	10d18 <print_type@@Base+0x1a4>
   10cfc:	add	r0, r5, #4
   10d00:	bl	128e8 <main@@Base+0x7c>
   10d04:	cmp	r0, #0
   10d08:	beq	10d18 <print_type@@Base+0x1a4>
   10d0c:	add	r0, r4, r0
   10d10:	pop	{r4, r5, fp, lr}
   10d14:	b	128f8 <main@@Base+0x8c>
   10d18:	mov	r0, #0
   10d1c:	pop	{r4, r5, fp, pc}
   10d20:	movw	r0, #11557	; 0x2d25
   10d24:	movt	r0, #1
   10d28:	movw	r1, #11595	; 0x2d4b
   10d2c:	movt	r1, #1
   10d30:	movw	r3, #11832	; 0x2e38
   10d34:	movt	r3, #1
   10d38:	mov	r2, #147	; 0x93
   10d3c:	bl	10a78 <__assert_fail@plt>
   10d40:	push	{r4, sl, fp, lr}
   10d44:	add	fp, sp, #8
   10d48:	cmp	r0, #0
   10d4c:	beq	10d88 <print_type@@Base+0x214>
   10d50:	mov	r4, r0
   10d54:	bl	128e0 <main@@Base+0x74>
   10d58:	sub	r4, r4, r0
   10d5c:	mov	r0, r4
   10d60:	bl	128e8 <main@@Base+0x7c>
   10d64:	mov	r1, r0
   10d68:	mov	r0, #0
   10d6c:	cmp	r1, #8
   10d70:	popcc	{r4, sl, fp, pc}
   10d74:	add	r0, r4, #6
   10d78:	bl	128e8 <main@@Base+0x7c>
   10d7c:	cmp	r0, #0
   10d80:	movwne	r0, #1
   10d84:	pop	{r4, sl, fp, pc}
   10d88:	movw	r0, #11557	; 0x2d25
   10d8c:	movt	r0, #1
   10d90:	movw	r1, #11595	; 0x2d4b
   10d94:	movt	r1, #1
   10d98:	movw	r3, #11910	; 0x2e86
   10d9c:	movt	r3, #1
   10da0:	mov	r2, #148	; 0x94
   10da4:	bl	10a78 <__assert_fail@plt>
   10da8:	push	{r4, sl, fp, lr}
   10dac:	add	fp, sp, #8
   10db0:	cmp	r0, #0
   10db4:	beq	10df0 <print_type@@Base+0x27c>
   10db8:	mov	r4, r0
   10dbc:	bl	128e0 <main@@Base+0x74>
   10dc0:	sub	r4, r4, r0
   10dc4:	mov	r0, r4
   10dc8:	bl	128e8 <main@@Base+0x7c>
   10dcc:	mov	r1, r0
   10dd0:	mov	r0, #0
   10dd4:	cmp	r1, #10
   10dd8:	popcc	{r4, sl, fp, pc}
   10ddc:	add	r0, r4, #8
   10de0:	bl	128e8 <main@@Base+0x7c>
   10de4:	cmp	r0, #0
   10de8:	movwne	r0, #1
   10dec:	pop	{r4, sl, fp, pc}
   10df0:	movw	r0, #11557	; 0x2d25
   10df4:	movt	r0, #1
   10df8:	movw	r1, #11595	; 0x2d4b
   10dfc:	movt	r1, #1
   10e00:	movw	r3, #11974	; 0x2ec6
   10e04:	movt	r3, #1
   10e08:	mov	r2, #149	; 0x95
   10e0c:	bl	10a78 <__assert_fail@plt>
   10e10:	push	{r4, r5, fp, lr}
   10e14:	add	fp, sp, #8
   10e18:	cmp	r0, #0
   10e1c:	beq	10e60 <print_type@@Base+0x2ec>
   10e20:	mov	r4, r0
   10e24:	bl	128e0 <main@@Base+0x74>
   10e28:	sub	r5, r4, r0
   10e2c:	mov	r0, r5
   10e30:	bl	128e8 <main@@Base+0x7c>
   10e34:	cmp	r0, #10
   10e38:	bcc	10e58 <print_type@@Base+0x2e4>
   10e3c:	add	r0, r5, #8
   10e40:	bl	128e8 <main@@Base+0x7c>
   10e44:	cmp	r0, #0
   10e48:	beq	10e58 <print_type@@Base+0x2e4>
   10e4c:	add	r0, r4, r0
   10e50:	pop	{r4, r5, fp, lr}
   10e54:	b	12904 <main@@Base+0x98>
   10e58:	mvn	r0, #0
   10e5c:	pop	{r4, r5, fp, pc}
   10e60:	movw	r0, #11557	; 0x2d25
   10e64:	movt	r0, #1
   10e68:	movw	r1, #11595	; 0x2d4b
   10e6c:	movt	r1, #1
   10e70:	movw	r3, #12036	; 0x2f04
   10e74:	movt	r3, #1
   10e78:	mov	r2, #149	; 0x95
   10e7c:	bl	10a78 <__assert_fail@plt>

00010e80 <print_object@@Base>:
   10e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e84:	add	fp, sp, #28
   10e88:	sub	sp, sp, #4
   10e8c:	mov	r4, r0
   10e90:	bl	110d0 <print_object@@Base+0x250>
   10e94:	mov	r6, r0
   10e98:	str	r4, [sp]
   10e9c:	mov	r0, r4
   10ea0:	bl	11150 <print_object@@Base+0x2d0>
   10ea4:	mov	r1, r0
   10ea8:	movw	r0, #10799	; 0x2a2f
   10eac:	movt	r0, #1
   10eb0:	bl	109ac <printf@plt>
   10eb4:	movw	r0, #10812	; 0x2a3c
   10eb8:	movt	r0, #1
   10ebc:	bl	109ac <printf@plt>
   10ec0:	mov	r0, r6
   10ec4:	bl	111d0 <print_object@@Base+0x350>
   10ec8:	cmp	r0, #0
   10ecc:	movw	r9, #10922	; 0x2aaa
   10ed0:	movt	r9, #1
   10ed4:	movw	r5, #10917	; 0x2aa5
   10ed8:	movt	r5, #1
   10edc:	beq	11034 <print_object@@Base+0x1b4>
   10ee0:	mov	r7, #0
   10ee4:	movw	r4, #10824	; 0x2a48
   10ee8:	movt	r4, #1
   10eec:	movw	sl, #10845	; 0x2a5d
   10ef0:	movt	sl, #1
   10ef4:	cmp	r7, #0
   10ef8:	bne	10f24 <print_object@@Base+0xa4>
   10efc:	b	10f2c <print_object@@Base+0xac>
   10f00:	mov	r0, #125	; 0x7d
   10f04:	bl	10a3c <putchar@plt>
   10f08:	add	r7, r7, #1
   10f0c:	mov	r0, r6
   10f10:	bl	111d0 <print_object@@Base+0x350>
   10f14:	cmp	r7, r0
   10f18:	bcs	11034 <print_object@@Base+0x1b4>
   10f1c:	cmp	r7, #0
   10f20:	beq	10f2c <print_object@@Base+0xac>
   10f24:	mov	r0, #44	; 0x2c
   10f28:	bl	10a3c <putchar@plt>
   10f2c:	mov	r0, r6
   10f30:	mov	r1, r7
   10f34:	bl	111e4 <print_object@@Base+0x364>
   10f38:	mov	r8, r0
   10f3c:	bl	11234 <print_object@@Base+0x3b4>
   10f40:	mov	r1, r0
   10f44:	mov	r0, r4
   10f48:	bl	109ac <printf@plt>
   10f4c:	mov	r0, r8
   10f50:	bl	112b4 <print_object@@Base+0x434>
   10f54:	bl	10b74 <print_type@@Base>
   10f58:	mov	r0, r8
   10f5c:	bl	11330 <print_object@@Base+0x4b0>
   10f60:	cmp	r0, #0
   10f64:	beq	10f7c <print_object@@Base+0xfc>
   10f68:	mov	r0, r8
   10f6c:	bl	11398 <print_object@@Base+0x518>
   10f70:	mov	r1, r0
   10f74:	mov	r0, sl
   10f78:	bl	109ac <printf@plt>
   10f7c:	mov	r0, r8
   10f80:	bl	11408 <print_object@@Base+0x588>
   10f84:	cmp	r0, #0
   10f88:	beq	10fa8 <print_object@@Base+0x128>
   10f8c:	mov	r0, r8
   10f90:	bl	11470 <print_object@@Base+0x5f0>
   10f94:	mov	r2, r0
   10f98:	movw	r0, #10855	; 0x2a67
   10f9c:	movt	r0, #1
   10fa0:	mov	r3, r1
   10fa4:	bl	109ac <printf@plt>
   10fa8:	mov	r0, r8
   10fac:	bl	114e4 <print_object@@Base+0x664>
   10fb0:	cmp	r0, #0
   10fb4:	beq	10fd0 <print_object@@Base+0x150>
   10fb8:	mov	r0, r8
   10fbc:	bl	1154c <print_object@@Base+0x6cc>
   10fc0:	vmov	r2, r3, d0
   10fc4:	movw	r0, #10879	; 0x2a7f
   10fc8:	movt	r0, #1
   10fcc:	bl	109ac <printf@plt>
   10fd0:	mov	r0, r8
   10fd4:	bl	115bc <print_object@@Base+0x73c>
   10fd8:	cmp	r0, #0
   10fdc:	beq	11000 <print_object@@Base+0x180>
   10fe0:	mov	r0, r8
   10fe4:	bl	11624 <print_object@@Base+0x7a4>
   10fe8:	cmp	r0, #0
   10fec:	mov	r1, r5
   10ff0:	moveq	r1, r9
   10ff4:	movw	r0, #10902	; 0x2a96
   10ff8:	movt	r0, #1
   10ffc:	bl	109ac <printf@plt>
   11000:	mov	r0, r8
   11004:	bl	11694 <print_object@@Base+0x814>
   11008:	cmp	r0, #0
   1100c:	beq	10f00 <print_object@@Base+0x80>
   11010:	mov	r0, r8
   11014:	bl	116fc <print_object@@Base+0x87c>
   11018:	cmp	r0, #0
   1101c:	mov	r1, r5
   11020:	moveq	r1, r9
   11024:	movw	r0, #10928	; 0x2ab0
   11028:	movt	r0, #1
   1102c:	bl	109ac <printf@plt>
   11030:	b	10f00 <print_object@@Base+0x80>
   11034:	mov	r0, #93	; 0x5d
   11038:	bl	10a3c <putchar@plt>
   1103c:	ldr	r4, [sp]
   11040:	mov	r0, r4
   11044:	bl	1176c <print_object@@Base+0x8ec>
   11048:	cmp	r0, #0
   1104c:	beq	11070 <print_object@@Base+0x1f0>
   11050:	mov	r0, r4
   11054:	bl	117d4 <print_object@@Base+0x954>
   11058:	cmp	r0, #0
   1105c:	moveq	r5, r9
   11060:	movw	r0, #10938	; 0x2aba
   11064:	movt	r0, #1
   11068:	mov	r1, r5
   1106c:	bl	109ac <printf@plt>
   11070:	mov	r0, r4
   11074:	bl	11844 <print_object@@Base+0x9c4>
   11078:	cmp	r0, #0
   1107c:	beq	11098 <print_object@@Base+0x218>
   11080:	mov	r0, r4
   11084:	bl	118ac <print_object@@Base+0xa2c>
   11088:	mov	r1, r0
   1108c:	movw	r0, #10954	; 0x2aca
   11090:	movt	r0, #1
   11094:	bl	109ac <printf@plt>
   11098:	mov	r0, r4
   1109c:	bl	1191c <print_object@@Base+0xa9c>
   110a0:	cmp	r0, #0
   110a4:	beq	110c0 <print_object@@Base+0x240>
   110a8:	mov	r0, r4
   110ac:	bl	11984 <print_object@@Base+0xb04>
   110b0:	mov	r1, r0
   110b4:	movw	r0, #10969	; 0x2ad9
   110b8:	movt	r0, #1
   110bc:	bl	109ac <printf@plt>
   110c0:	mov	r0, #125	; 0x7d
   110c4:	sub	sp, fp, #28
   110c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110cc:	b	10a3c <putchar@plt>
   110d0:	push	{r4, r5, fp, lr}
   110d4:	add	fp, sp, #8
   110d8:	cmp	r0, #0
   110dc:	beq	11130 <print_object@@Base+0x2b0>
   110e0:	mov	r4, r0
   110e4:	bl	128e0 <main@@Base+0x74>
   110e8:	sub	r5, r4, r0
   110ec:	mov	r0, r5
   110f0:	bl	128e8 <main@@Base+0x7c>
   110f4:	cmp	r0, #8
   110f8:	bcc	11124 <print_object@@Base+0x2a4>
   110fc:	add	r0, r5, #6
   11100:	bl	128e8 <main@@Base+0x7c>
   11104:	cmp	r0, #0
   11108:	beq	11124 <print_object@@Base+0x2a4>
   1110c:	add	r4, r4, r0
   11110:	mov	r0, r4
   11114:	bl	12910 <main@@Base+0xa4>
   11118:	add	r0, r4, r0
   1111c:	add	r0, r0, #4
   11120:	pop	{r4, r5, fp, pc}
   11124:	movw	r0, #12166	; 0x2f86
   11128:	movt	r0, #1
   1112c:	b	11138 <print_object@@Base+0x2b8>
   11130:	movw	r0, #11557	; 0x2d25
   11134:	movt	r0, #1
   11138:	movw	r1, #11595	; 0x2d4b
   1113c:	movt	r1, #1
   11140:	movw	r3, #12091	; 0x2f3b
   11144:	movt	r3, #1
   11148:	mov	r2, #224	; 0xe0
   1114c:	bl	10a78 <__assert_fail@plt>
   11150:	push	{r4, r5, fp, lr}
   11154:	add	fp, sp, #8
   11158:	cmp	r0, #0
   1115c:	beq	111b0 <print_object@@Base+0x330>
   11160:	mov	r4, r0
   11164:	bl	128e0 <main@@Base+0x74>
   11168:	sub	r5, r4, r0
   1116c:	mov	r0, r5
   11170:	bl	128e8 <main@@Base+0x7c>
   11174:	cmp	r0, #6
   11178:	bcc	111a4 <print_object@@Base+0x324>
   1117c:	add	r0, r5, #4
   11180:	bl	128e8 <main@@Base+0x7c>
   11184:	cmp	r0, #0
   11188:	beq	111a4 <print_object@@Base+0x324>
   1118c:	add	r4, r4, r0
   11190:	mov	r0, r4
   11194:	bl	12910 <main@@Base+0xa4>
   11198:	add	r0, r4, r0
   1119c:	add	r0, r0, #4
   111a0:	pop	{r4, r5, fp, pc}
   111a4:	movw	r0, #12166	; 0x2f86
   111a8:	movt	r0, #1
   111ac:	b	111b8 <print_object@@Base+0x338>
   111b0:	movw	r0, #11557	; 0x2d25
   111b4:	movt	r0, #1
   111b8:	movw	r1, #11595	; 0x2d4b
   111bc:	movt	r1, #1
   111c0:	movw	r3, #12199	; 0x2fa7
   111c4:	movt	r3, #1
   111c8:	mov	r2, #218	; 0xda
   111cc:	bl	10a78 <__assert_fail@plt>
   111d0:	cmp	r0, #0
   111d4:	moveq	r0, #0
   111d8:	bxeq	lr
   111dc:	sub	r0, r0, #4
   111e0:	b	12910 <main@@Base+0xa4>
   111e4:	push	{r4, r5, fp, lr}
   111e8:	add	fp, sp, #8
   111ec:	mov	r4, r1
   111f0:	mov	r5, r0
   111f4:	bl	1291c <main@@Base+0xb0>
   111f8:	cmp	r0, r4
   111fc:	bls	11214 <print_object@@Base+0x394>
   11200:	add	r4, r5, r4, lsl #2
   11204:	mov	r0, r4
   11208:	bl	12910 <main@@Base+0xa4>
   1120c:	add	r0, r4, r0
   11210:	pop	{r4, r5, fp, pc}
   11214:	movw	r0, #12270	; 0x2fee
   11218:	movt	r0, #1
   1121c:	movw	r1, #11595	; 0x2d4b
   11220:	movt	r1, #1
   11224:	movw	r3, #12325	; 0x3025
   11228:	movt	r3, #1
   1122c:	mov	r2, #192	; 0xc0
   11230:	bl	10a78 <__assert_fail@plt>
   11234:	push	{r4, r5, fp, lr}
   11238:	add	fp, sp, #8
   1123c:	cmp	r0, #0
   11240:	beq	11294 <print_object@@Base+0x414>
   11244:	mov	r4, r0
   11248:	bl	128e0 <main@@Base+0x74>
   1124c:	sub	r5, r4, r0
   11250:	mov	r0, r5
   11254:	bl	128e8 <main@@Base+0x7c>
   11258:	cmp	r0, #6
   1125c:	bcc	11288 <print_object@@Base+0x408>
   11260:	add	r0, r5, #4
   11264:	bl	128e8 <main@@Base+0x7c>
   11268:	cmp	r0, #0
   1126c:	beq	11288 <print_object@@Base+0x408>
   11270:	add	r4, r4, r0
   11274:	mov	r0, r4
   11278:	bl	12910 <main@@Base+0xa4>
   1127c:	add	r0, r4, r0
   11280:	add	r0, r0, #4
   11284:	pop	{r4, r5, fp, pc}
   11288:	movw	r0, #12166	; 0x2f86
   1128c:	movt	r0, #1
   11290:	b	1129c <print_object@@Base+0x41c>
   11294:	movw	r0, #11557	; 0x2d25
   11298:	movt	r0, #1
   1129c:	movw	r1, #11595	; 0x2d4b
   112a0:	movt	r1, #1
   112a4:	movw	r3, #12406	; 0x3076
   112a8:	movt	r3, #1
   112ac:	mov	r2, #195	; 0xc3
   112b0:	bl	10a78 <__assert_fail@plt>
   112b4:	push	{r4, r5, fp, lr}
   112b8:	add	fp, sp, #8
   112bc:	cmp	r0, #0
   112c0:	beq	11310 <print_object@@Base+0x490>
   112c4:	mov	r4, r0
   112c8:	bl	128e0 <main@@Base+0x74>
   112cc:	sub	r5, r4, r0
   112d0:	mov	r0, r5
   112d4:	bl	128e8 <main@@Base+0x7c>
   112d8:	cmp	r0, #8
   112dc:	bcc	11304 <print_object@@Base+0x484>
   112e0:	add	r0, r5, #6
   112e4:	bl	128e8 <main@@Base+0x7c>
   112e8:	cmp	r0, #0
   112ec:	beq	11304 <print_object@@Base+0x484>
   112f0:	add	r4, r4, r0
   112f4:	mov	r0, r4
   112f8:	bl	12910 <main@@Base+0xa4>
   112fc:	add	r0, r4, r0
   11300:	pop	{r4, r5, fp, pc}
   11304:	movw	r0, #12166	; 0x2f86
   11308:	movt	r0, #1
   1130c:	b	11318 <print_object@@Base+0x498>
   11310:	movw	r0, #11557	; 0x2d25
   11314:	movt	r0, #1
   11318:	movw	r1, #11595	; 0x2d4b
   1131c:	movt	r1, #1
   11320:	movw	r3, #12475	; 0x30bb
   11324:	movt	r3, #1
   11328:	mov	r2, #201	; 0xc9
   1132c:	bl	10a78 <__assert_fail@plt>
   11330:	push	{r4, sl, fp, lr}
   11334:	add	fp, sp, #8
   11338:	cmp	r0, #0
   1133c:	beq	11378 <print_object@@Base+0x4f8>
   11340:	mov	r4, r0
   11344:	bl	128e0 <main@@Base+0x74>
   11348:	sub	r4, r4, r0
   1134c:	mov	r0, r4
   11350:	bl	128e8 <main@@Base+0x7c>
   11354:	mov	r1, r0
   11358:	mov	r0, #0
   1135c:	cmp	r1, #10
   11360:	popcc	{r4, sl, fp, pc}
   11364:	add	r0, r4, #8
   11368:	bl	128e8 <main@@Base+0x7c>
   1136c:	cmp	r0, #0
   11370:	movwne	r0, #1
   11374:	pop	{r4, sl, fp, pc}
   11378:	movw	r0, #11557	; 0x2d25
   1137c:	movt	r0, #1
   11380:	movw	r1, #11595	; 0x2d4b
   11384:	movt	r1, #1
   11388:	movw	r3, #12547	; 0x3103
   1138c:	movt	r3, #1
   11390:	mov	r2, #202	; 0xca
   11394:	bl	10a78 <__assert_fail@plt>
   11398:	push	{r4, r5, fp, lr}
   1139c:	add	fp, sp, #8
   113a0:	cmp	r0, #0
   113a4:	beq	113e8 <print_object@@Base+0x568>
   113a8:	mov	r4, r0
   113ac:	bl	128e0 <main@@Base+0x74>
   113b0:	sub	r5, r4, r0
   113b4:	mov	r0, r5
   113b8:	bl	128e8 <main@@Base+0x7c>
   113bc:	cmp	r0, #10
   113c0:	bcc	113e0 <print_object@@Base+0x560>
   113c4:	add	r0, r5, #8
   113c8:	bl	128e8 <main@@Base+0x7c>
   113cc:	cmp	r0, #0
   113d0:	beq	113e0 <print_object@@Base+0x560>
   113d4:	add	r0, r4, r0
   113d8:	pop	{r4, r5, fp, lr}
   113dc:	b	12930 <main@@Base+0xc4>
   113e0:	mov	r0, #0
   113e4:	pop	{r4, r5, fp, pc}
   113e8:	movw	r0, #11557	; 0x2d25
   113ec:	movt	r0, #1
   113f0:	movw	r1, #11595	; 0x2d4b
   113f4:	movt	r1, #1
   113f8:	movw	r3, #12608	; 0x3140
   113fc:	movt	r3, #1
   11400:	mov	r2, #202	; 0xca
   11404:	bl	10a78 <__assert_fail@plt>
   11408:	push	{r4, sl, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	cmp	r0, #0
   11414:	beq	11450 <print_object@@Base+0x5d0>
   11418:	mov	r4, r0
   1141c:	bl	128e0 <main@@Base+0x74>
   11420:	sub	r4, r4, r0
   11424:	mov	r0, r4
   11428:	bl	128e8 <main@@Base+0x7c>
   1142c:	mov	r1, r0
   11430:	mov	r0, #0
   11434:	cmp	r1, #14
   11438:	popcc	{r4, sl, fp, pc}
   1143c:	add	r0, r4, #12
   11440:	bl	128e8 <main@@Base+0x7c>
   11444:	cmp	r0, #0
   11448:	movwne	r0, #1
   1144c:	pop	{r4, sl, fp, pc}
   11450:	movw	r0, #11557	; 0x2d25
   11454:	movt	r0, #1
   11458:	movw	r1, #11595	; 0x2d4b
   1145c:	movt	r1, #1
   11460:	movw	r3, #12663	; 0x3177
   11464:	movt	r3, #1
   11468:	mov	r2, #204	; 0xcc
   1146c:	bl	10a78 <__assert_fail@plt>
   11470:	push	{r4, r5, fp, lr}
   11474:	add	fp, sp, #8
   11478:	cmp	r0, #0
   1147c:	beq	114c4 <print_object@@Base+0x644>
   11480:	mov	r4, r0
   11484:	bl	128e0 <main@@Base+0x74>
   11488:	sub	r5, r4, r0
   1148c:	mov	r0, r5
   11490:	bl	128e8 <main@@Base+0x7c>
   11494:	cmp	r0, #14
   11498:	bcc	114b8 <print_object@@Base+0x638>
   1149c:	add	r0, r5, #12
   114a0:	bl	128e8 <main@@Base+0x7c>
   114a4:	cmp	r0, #0
   114a8:	beq	114b8 <print_object@@Base+0x638>
   114ac:	add	r0, r4, r0
   114b0:	pop	{r4, r5, fp, lr}
   114b4:	b	1293c <main@@Base+0xd0>
   114b8:	mov	r0, #0
   114bc:	mov	r1, #0
   114c0:	pop	{r4, r5, fp, pc}
   114c4:	movw	r0, #11557	; 0x2d25
   114c8:	movt	r0, #1
   114cc:	movw	r1, #11595	; 0x2d4b
   114d0:	movt	r1, #1
   114d4:	movw	r3, #12737	; 0x31c1
   114d8:	movt	r3, #1
   114dc:	mov	r2, #204	; 0xcc
   114e0:	bl	10a78 <__assert_fail@plt>
   114e4:	push	{r4, sl, fp, lr}
   114e8:	add	fp, sp, #8
   114ec:	cmp	r0, #0
   114f0:	beq	1152c <print_object@@Base+0x6ac>
   114f4:	mov	r4, r0
   114f8:	bl	128e0 <main@@Base+0x74>
   114fc:	sub	r4, r4, r0
   11500:	mov	r0, r4
   11504:	bl	128e8 <main@@Base+0x7c>
   11508:	mov	r1, r0
   1150c:	mov	r0, #0
   11510:	cmp	r1, #16
   11514:	popcc	{r4, sl, fp, pc}
   11518:	add	r0, r4, #14
   1151c:	bl	128e8 <main@@Base+0x7c>
   11520:	cmp	r0, #0
   11524:	movwne	r0, #1
   11528:	pop	{r4, sl, fp, pc}
   1152c:	movw	r0, #11557	; 0x2d25
   11530:	movt	r0, #1
   11534:	movw	r1, #11595	; 0x2d4b
   11538:	movt	r1, #1
   1153c:	movw	r3, #12804	; 0x3204
   11540:	movt	r3, #1
   11544:	mov	r2, #205	; 0xcd
   11548:	bl	10a78 <__assert_fail@plt>
   1154c:	push	{r4, r5, fp, lr}
   11550:	add	fp, sp, #8
   11554:	cmp	r0, #0
   11558:	beq	1159c <print_object@@Base+0x71c>
   1155c:	mov	r4, r0
   11560:	bl	128e0 <main@@Base+0x74>
   11564:	sub	r5, r4, r0
   11568:	mov	r0, r5
   1156c:	bl	128e8 <main@@Base+0x7c>
   11570:	cmp	r0, #16
   11574:	bcc	11594 <print_object@@Base+0x714>
   11578:	add	r0, r5, #14
   1157c:	bl	128e8 <main@@Base+0x7c>
   11580:	cmp	r0, #0
   11584:	beq	11594 <print_object@@Base+0x714>
   11588:	add	r0, r4, r0
   1158c:	pop	{r4, r5, fp, lr}
   11590:	b	12948 <main@@Base+0xdc>
   11594:	vmov.i32	d0, #0	; 0x00000000
   11598:	pop	{r4, r5, fp, pc}
   1159c:	movw	r0, #11557	; 0x2d25
   115a0:	movt	r0, #1
   115a4:	movw	r1, #11595	; 0x2d4b
   115a8:	movt	r1, #1
   115ac:	movw	r3, #12875	; 0x324b
   115b0:	movt	r3, #1
   115b4:	mov	r2, #205	; 0xcd
   115b8:	bl	10a78 <__assert_fail@plt>
   115bc:	push	{r4, sl, fp, lr}
   115c0:	add	fp, sp, #8
   115c4:	cmp	r0, #0
   115c8:	beq	11604 <print_object@@Base+0x784>
   115cc:	mov	r4, r0
   115d0:	bl	128e0 <main@@Base+0x74>
   115d4:	sub	r4, r4, r0
   115d8:	mov	r0, r4
   115dc:	bl	128e8 <main@@Base+0x7c>
   115e0:	mov	r1, r0
   115e4:	mov	r0, #0
   115e8:	cmp	r1, #20
   115ec:	popcc	{r4, sl, fp, pc}
   115f0:	add	r0, r4, #18
   115f4:	bl	128e8 <main@@Base+0x7c>
   115f8:	cmp	r0, #0
   115fc:	movwne	r0, #1
   11600:	pop	{r4, sl, fp, pc}
   11604:	movw	r0, #11557	; 0x2d25
   11608:	movt	r0, #1
   1160c:	movw	r1, #11595	; 0x2d4b
   11610:	movt	r1, #1
   11614:	movw	r3, #12938	; 0x328a
   11618:	movt	r3, #1
   1161c:	mov	r2, #207	; 0xcf
   11620:	bl	10a78 <__assert_fail@plt>
   11624:	push	{r4, r5, fp, lr}
   11628:	add	fp, sp, #8
   1162c:	cmp	r0, #0
   11630:	beq	11674 <print_object@@Base+0x7f4>
   11634:	mov	r4, r0
   11638:	bl	128e0 <main@@Base+0x74>
   1163c:	sub	r5, r4, r0
   11640:	mov	r0, r5
   11644:	bl	128e8 <main@@Base+0x7c>
   11648:	cmp	r0, #20
   1164c:	bcc	1166c <print_object@@Base+0x7ec>
   11650:	add	r0, r5, #18
   11654:	bl	128e8 <main@@Base+0x7c>
   11658:	cmp	r0, #0
   1165c:	beq	1166c <print_object@@Base+0x7ec>
   11660:	add	r0, r4, r0
   11664:	pop	{r4, r5, fp, lr}
   11668:	b	12954 <main@@Base+0xe8>
   1166c:	mov	r0, #0
   11670:	pop	{r4, r5, fp, pc}
   11674:	movw	r0, #11557	; 0x2d25
   11678:	movt	r0, #1
   1167c:	movw	r1, #11595	; 0x2d4b
   11680:	movt	r1, #1
   11684:	movw	r3, #13005	; 0x32cd
   11688:	movt	r3, #1
   1168c:	mov	r2, #207	; 0xcf
   11690:	bl	10a78 <__assert_fail@plt>
   11694:	push	{r4, sl, fp, lr}
   11698:	add	fp, sp, #8
   1169c:	cmp	r0, #0
   116a0:	beq	116dc <print_object@@Base+0x85c>
   116a4:	mov	r4, r0
   116a8:	bl	128e0 <main@@Base+0x74>
   116ac:	sub	r4, r4, r0
   116b0:	mov	r0, r4
   116b4:	bl	128e8 <main@@Base+0x7c>
   116b8:	mov	r1, r0
   116bc:	mov	r0, #0
   116c0:	cmp	r1, #22
   116c4:	popcc	{r4, sl, fp, pc}
   116c8:	add	r0, r4, #20
   116cc:	bl	128e8 <main@@Base+0x7c>
   116d0:	cmp	r0, #0
   116d4:	movwne	r0, #1
   116d8:	pop	{r4, sl, fp, pc}
   116dc:	movw	r0, #11557	; 0x2d25
   116e0:	movt	r0, #1
   116e4:	movw	r1, #11595	; 0x2d4b
   116e8:	movt	r1, #1
   116ec:	movw	r3, #13076	; 0x3314
   116f0:	movt	r3, #1
   116f4:	mov	r2, #208	; 0xd0
   116f8:	bl	10a78 <__assert_fail@plt>
   116fc:	push	{r4, r5, fp, lr}
   11700:	add	fp, sp, #8
   11704:	cmp	r0, #0
   11708:	beq	1174c <print_object@@Base+0x8cc>
   1170c:	mov	r4, r0
   11710:	bl	128e0 <main@@Base+0x74>
   11714:	sub	r5, r4, r0
   11718:	mov	r0, r5
   1171c:	bl	128e8 <main@@Base+0x7c>
   11720:	cmp	r0, #22
   11724:	bcc	11744 <print_object@@Base+0x8c4>
   11728:	add	r0, r5, #20
   1172c:	bl	128e8 <main@@Base+0x7c>
   11730:	cmp	r0, #0
   11734:	beq	11744 <print_object@@Base+0x8c4>
   11738:	add	r0, r4, r0
   1173c:	pop	{r4, r5, fp, lr}
   11740:	b	12954 <main@@Base+0xe8>
   11744:	mov	r0, #0
   11748:	pop	{r4, r5, fp, pc}
   1174c:	movw	r0, #11557	; 0x2d25
   11750:	movt	r0, #1
   11754:	movw	r1, #11595	; 0x2d4b
   11758:	movt	r1, #1
   1175c:	movw	r3, #13138	; 0x3352
   11760:	movt	r3, #1
   11764:	mov	r2, #208	; 0xd0
   11768:	bl	10a78 <__assert_fail@plt>
   1176c:	push	{r4, sl, fp, lr}
   11770:	add	fp, sp, #8
   11774:	cmp	r0, #0
   11778:	beq	117b4 <print_object@@Base+0x934>
   1177c:	mov	r4, r0
   11780:	bl	128e0 <main@@Base+0x74>
   11784:	sub	r4, r4, r0
   11788:	mov	r0, r4
   1178c:	bl	128e8 <main@@Base+0x7c>
   11790:	mov	r1, r0
   11794:	mov	r0, #0
   11798:	cmp	r1, #10
   1179c:	popcc	{r4, sl, fp, pc}
   117a0:	add	r0, r4, #8
   117a4:	bl	128e8 <main@@Base+0x7c>
   117a8:	cmp	r0, #0
   117ac:	movwne	r0, #1
   117b0:	pop	{r4, sl, fp, pc}
   117b4:	movw	r0, #11557	; 0x2d25
   117b8:	movt	r0, #1
   117bc:	movw	r1, #11595	; 0x2d4b
   117c0:	movt	r1, #1
   117c4:	movw	r3, #13204	; 0x3394
   117c8:	movt	r3, #1
   117cc:	mov	r2, #225	; 0xe1
   117d0:	bl	10a78 <__assert_fail@plt>
   117d4:	push	{r4, r5, fp, lr}
   117d8:	add	fp, sp, #8
   117dc:	cmp	r0, #0
   117e0:	beq	11824 <print_object@@Base+0x9a4>
   117e4:	mov	r4, r0
   117e8:	bl	128e0 <main@@Base+0x74>
   117ec:	sub	r5, r4, r0
   117f0:	mov	r0, r5
   117f4:	bl	128e8 <main@@Base+0x7c>
   117f8:	cmp	r0, #10
   117fc:	bcc	1181c <print_object@@Base+0x99c>
   11800:	add	r0, r5, #8
   11804:	bl	128e8 <main@@Base+0x7c>
   11808:	cmp	r0, #0
   1180c:	beq	1181c <print_object@@Base+0x99c>
   11810:	add	r0, r4, r0
   11814:	pop	{r4, r5, fp, lr}
   11818:	b	12954 <main@@Base+0xe8>
   1181c:	mov	r0, #0
   11820:	pop	{r4, r5, fp, pc}
   11824:	movw	r0, #11557	; 0x2d25
   11828:	movt	r0, #1
   1182c:	movw	r1, #11595	; 0x2d4b
   11830:	movt	r1, #1
   11834:	movw	r3, #13274	; 0x33da
   11838:	movt	r3, #1
   1183c:	mov	r2, #225	; 0xe1
   11840:	bl	10a78 <__assert_fail@plt>
   11844:	push	{r4, sl, fp, lr}
   11848:	add	fp, sp, #8
   1184c:	cmp	r0, #0
   11850:	beq	1188c <print_object@@Base+0xa0c>
   11854:	mov	r4, r0
   11858:	bl	128e0 <main@@Base+0x74>
   1185c:	sub	r4, r4, r0
   11860:	mov	r0, r4
   11864:	bl	128e8 <main@@Base+0x7c>
   11868:	mov	r1, r0
   1186c:	mov	r0, #0
   11870:	cmp	r1, #12
   11874:	popcc	{r4, sl, fp, pc}
   11878:	add	r0, r4, #10
   1187c:	bl	128e8 <main@@Base+0x7c>
   11880:	cmp	r0, #0
   11884:	movwne	r0, #1
   11888:	pop	{r4, sl, fp, pc}
   1188c:	movw	r0, #11557	; 0x2d25
   11890:	movt	r0, #1
   11894:	movw	r1, #11595	; 0x2d4b
   11898:	movt	r1, #1
   1189c:	movw	r3, #13348	; 0x3424
   118a0:	movt	r3, #1
   118a4:	mov	r2, #226	; 0xe2
   118a8:	bl	10a78 <__assert_fail@plt>
   118ac:	push	{r4, r5, fp, lr}
   118b0:	add	fp, sp, #8
   118b4:	cmp	r0, #0
   118b8:	beq	118fc <print_object@@Base+0xa7c>
   118bc:	mov	r4, r0
   118c0:	bl	128e0 <main@@Base+0x74>
   118c4:	sub	r5, r4, r0
   118c8:	mov	r0, r5
   118cc:	bl	128e8 <main@@Base+0x7c>
   118d0:	cmp	r0, #12
   118d4:	bcc	118f4 <print_object@@Base+0xa74>
   118d8:	add	r0, r5, #10
   118dc:	bl	128e8 <main@@Base+0x7c>
   118e0:	cmp	r0, #0
   118e4:	beq	118f4 <print_object@@Base+0xa74>
   118e8:	add	r0, r4, r0
   118ec:	pop	{r4, r5, fp, lr}
   118f0:	b	12904 <main@@Base+0x98>
   118f4:	mov	r0, #0
   118f8:	pop	{r4, r5, fp, pc}
   118fc:	movw	r0, #11557	; 0x2d25
   11900:	movt	r0, #1
   11904:	movw	r1, #11595	; 0x2d4b
   11908:	movt	r1, #1
   1190c:	movw	r3, #13417	; 0x3469
   11910:	movt	r3, #1
   11914:	mov	r2, #226	; 0xe2
   11918:	bl	10a78 <__assert_fail@plt>
   1191c:	push	{r4, sl, fp, lr}
   11920:	add	fp, sp, #8
   11924:	cmp	r0, #0
   11928:	beq	11964 <print_object@@Base+0xae4>
   1192c:	mov	r4, r0
   11930:	bl	128e0 <main@@Base+0x74>
   11934:	sub	r4, r4, r0
   11938:	mov	r0, r4
   1193c:	bl	128e8 <main@@Base+0x7c>
   11940:	mov	r1, r0
   11944:	mov	r0, #0
   11948:	cmp	r1, #14
   1194c:	popcc	{r4, sl, fp, pc}
   11950:	add	r0, r4, #12
   11954:	bl	128e8 <main@@Base+0x7c>
   11958:	cmp	r0, #0
   1195c:	movwne	r0, #1
   11960:	pop	{r4, sl, fp, pc}
   11964:	movw	r0, #11557	; 0x2d25
   11968:	movt	r0, #1
   1196c:	movw	r1, #11595	; 0x2d4b
   11970:	movt	r1, #1
   11974:	movw	r3, #13479	; 0x34a7
   11978:	movt	r3, #1
   1197c:	mov	r2, #227	; 0xe3
   11980:	bl	10a78 <__assert_fail@plt>
   11984:	push	{r4, r5, fp, lr}
   11988:	add	fp, sp, #8
   1198c:	cmp	r0, #0
   11990:	beq	119d4 <print_object@@Base+0xb54>
   11994:	mov	r4, r0
   11998:	bl	128e0 <main@@Base+0x74>
   1199c:	sub	r5, r4, r0
   119a0:	mov	r0, r5
   119a4:	bl	128e8 <main@@Base+0x7c>
   119a8:	cmp	r0, #14
   119ac:	bcc	119cc <print_object@@Base+0xb4c>
   119b0:	add	r0, r5, #12
   119b4:	bl	128e8 <main@@Base+0x7c>
   119b8:	cmp	r0, #0
   119bc:	beq	119cc <print_object@@Base+0xb4c>
   119c0:	add	r0, r4, r0
   119c4:	pop	{r4, r5, fp, lr}
   119c8:	b	12904 <main@@Base+0x98>
   119cc:	mov	r0, #0
   119d0:	pop	{r4, r5, fp, pc}
   119d4:	movw	r0, #11557	; 0x2d25
   119d8:	movt	r0, #1
   119dc:	movw	r1, #11595	; 0x2d4b
   119e0:	movt	r1, #1
   119e4:	movw	r3, #13548	; 0x34ec
   119e8:	movt	r3, #1
   119ec:	mov	r2, #227	; 0xe3
   119f0:	bl	10a78 <__assert_fail@plt>

000119f4 <print_enum@@Base>:
   119f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119f8:	add	fp, sp, #28
   119fc:	sub	sp, sp, #4
   11a00:	mov	r8, r0
   11a04:	bl	11b6c <print_enum@@Base+0x178>
   11a08:	mov	r1, r0
   11a0c:	movw	r0, #10799	; 0x2a2f
   11a10:	movt	r0, #1
   11a14:	bl	109ac <printf@plt>
   11a18:	mov	r0, r8
   11a1c:	bl	11bec <print_enum@@Base+0x1f8>
   11a20:	mov	r5, r0
   11a24:	movw	r0, #10984	; 0x2ae8
   11a28:	movt	r0, #1
   11a2c:	bl	109ac <printf@plt>
   11a30:	mov	r0, r5
   11a34:	bl	11c6c <print_enum@@Base+0x278>
   11a38:	cmp	r0, #0
   11a3c:	beq	11b00 <print_enum@@Base+0x10c>
   11a40:	mov	r6, #0
   11a44:	movw	r7, #10799	; 0x2a2f
   11a48:	movt	r7, #1
   11a4c:	movw	r9, #11010	; 0x2b02
   11a50:	movt	r9, #1
   11a54:	movw	sl, #10996	; 0x2af4
   11a58:	movt	sl, #1
   11a5c:	b	11a7c <print_enum@@Base+0x88>
   11a60:	mov	r0, #125	; 0x7d
   11a64:	bl	10a3c <putchar@plt>
   11a68:	add	r6, r6, #1
   11a6c:	mov	r0, r5
   11a70:	bl	11c6c <print_enum@@Base+0x278>
   11a74:	cmp	r6, r0
   11a78:	bcs	11b00 <print_enum@@Base+0x10c>
   11a7c:	mov	r0, r5
   11a80:	mov	r1, r6
   11a84:	bl	11c80 <print_enum@@Base+0x28c>
   11a88:	mov	r4, r0
   11a8c:	cmp	r6, #0
   11a90:	beq	11a9c <print_enum@@Base+0xa8>
   11a94:	mov	r0, #44	; 0x2c
   11a98:	bl	10a3c <putchar@plt>
   11a9c:	mov	r0, r4
   11aa0:	bl	11cd0 <print_enum@@Base+0x2dc>
   11aa4:	mov	r1, r0
   11aa8:	mov	r0, r7
   11aac:	bl	109ac <printf@plt>
   11ab0:	mov	r0, r4
   11ab4:	bl	11d50 <print_enum@@Base+0x35c>
   11ab8:	cmp	r0, #0
   11abc:	beq	11ad8 <print_enum@@Base+0xe4>
   11ac0:	mov	r0, r4
   11ac4:	bl	11db8 <print_enum@@Base+0x3c4>
   11ac8:	mov	r2, r0
   11acc:	mov	r0, sl
   11ad0:	mov	r3, r1
   11ad4:	bl	109ac <printf@plt>
   11ad8:	mov	r0, r4
   11adc:	bl	11e2c <print_enum@@Base+0x438>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11a60 <print_enum@@Base+0x6c>
   11ae8:	mov	r0, r9
   11aec:	bl	109ac <printf@plt>
   11af0:	mov	r0, r4
   11af4:	bl	11e94 <print_enum@@Base+0x4a0>
   11af8:	bl	10e80 <print_object@@Base>
   11afc:	b	11a60 <print_enum@@Base+0x6c>
   11b00:	mov	r0, #93	; 0x5d
   11b04:	bl	10a3c <putchar@plt>
   11b08:	mov	r0, r8
   11b0c:	bl	11f0c <print_enum@@Base+0x518>
   11b10:	cmp	r0, #0
   11b14:	beq	11b44 <print_enum@@Base+0x150>
   11b18:	mov	r0, r8
   11b1c:	bl	11f74 <print_enum@@Base+0x580>
   11b20:	movw	r2, #10922	; 0x2aaa
   11b24:	movt	r2, #1
   11b28:	movw	r1, #10917	; 0x2aa5
   11b2c:	movt	r1, #1
   11b30:	cmp	r0, #0
   11b34:	moveq	r1, r2
   11b38:	movw	r0, #11021	; 0x2b0d
   11b3c:	movt	r0, #1
   11b40:	bl	109ac <printf@plt>
   11b44:	movw	r0, #11036	; 0x2b1c
   11b48:	movt	r0, #1
   11b4c:	bl	109ac <printf@plt>
   11b50:	mov	r0, r8
   11b54:	bl	11fe4 <print_enum@@Base+0x5f0>
   11b58:	bl	10b74 <print_type@@Base>
   11b5c:	mov	r0, #125	; 0x7d
   11b60:	sub	sp, fp, #28
   11b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b68:	b	10a3c <putchar@plt>
   11b6c:	push	{r4, r5, fp, lr}
   11b70:	add	fp, sp, #8
   11b74:	cmp	r0, #0
   11b78:	beq	11bcc <print_enum@@Base+0x1d8>
   11b7c:	mov	r4, r0
   11b80:	bl	128e0 <main@@Base+0x74>
   11b84:	sub	r5, r4, r0
   11b88:	mov	r0, r5
   11b8c:	bl	128e8 <main@@Base+0x7c>
   11b90:	cmp	r0, #6
   11b94:	bcc	11bc0 <print_enum@@Base+0x1cc>
   11b98:	add	r0, r5, #4
   11b9c:	bl	128e8 <main@@Base+0x7c>
   11ba0:	cmp	r0, #0
   11ba4:	beq	11bc0 <print_enum@@Base+0x1cc>
   11ba8:	add	r4, r4, r0
   11bac:	mov	r0, r4
   11bb0:	bl	12910 <main@@Base+0xa4>
   11bb4:	add	r0, r4, r0
   11bb8:	add	r0, r0, #4
   11bbc:	pop	{r4, r5, fp, pc}
   11bc0:	movw	r0, #12166	; 0x2f86
   11bc4:	movt	r0, #1
   11bc8:	b	11bd4 <print_enum@@Base+0x1e0>
   11bcc:	movw	r0, #11557	; 0x2d25
   11bd0:	movt	r0, #1
   11bd4:	movw	r1, #11595	; 0x2d4b
   11bd8:	movt	r1, #1
   11bdc:	movw	r3, #13610	; 0x352a
   11be0:	movt	r3, #1
   11be4:	mov	r2, #177	; 0xb1
   11be8:	bl	10a78 <__assert_fail@plt>
   11bec:	push	{r4, r5, fp, lr}
   11bf0:	add	fp, sp, #8
   11bf4:	cmp	r0, #0
   11bf8:	beq	11c4c <print_enum@@Base+0x258>
   11bfc:	mov	r4, r0
   11c00:	bl	128e0 <main@@Base+0x74>
   11c04:	sub	r5, r4, r0
   11c08:	mov	r0, r5
   11c0c:	bl	128e8 <main@@Base+0x7c>
   11c10:	cmp	r0, #8
   11c14:	bcc	11c40 <print_enum@@Base+0x24c>
   11c18:	add	r0, r5, #6
   11c1c:	bl	128e8 <main@@Base+0x7c>
   11c20:	cmp	r0, #0
   11c24:	beq	11c40 <print_enum@@Base+0x24c>
   11c28:	add	r4, r4, r0
   11c2c:	mov	r0, r4
   11c30:	bl	12910 <main@@Base+0xa4>
   11c34:	add	r0, r4, r0
   11c38:	add	r0, r0, #4
   11c3c:	pop	{r4, r5, fp, pc}
   11c40:	movw	r0, #12166	; 0x2f86
   11c44:	movt	r0, #1
   11c48:	b	11c54 <print_enum@@Base+0x260>
   11c4c:	movw	r0, #11557	; 0x2d25
   11c50:	movt	r0, #1
   11c54:	movw	r1, #11595	; 0x2d4b
   11c58:	movt	r1, #1
   11c5c:	movw	r3, #13677	; 0x356d
   11c60:	movt	r3, #1
   11c64:	mov	r2, #183	; 0xb7
   11c68:	bl	10a78 <__assert_fail@plt>
   11c6c:	cmp	r0, #0
   11c70:	moveq	r0, #0
   11c74:	bxeq	lr
   11c78:	sub	r0, r0, #4
   11c7c:	b	12910 <main@@Base+0xa4>
   11c80:	push	{r4, r5, fp, lr}
   11c84:	add	fp, sp, #8
   11c88:	mov	r4, r1
   11c8c:	mov	r5, r0
   11c90:	bl	1291c <main@@Base+0xb0>
   11c94:	cmp	r0, r4
   11c98:	bls	11cb0 <print_enum@@Base+0x2bc>
   11c9c:	add	r4, r5, r4, lsl #2
   11ca0:	mov	r0, r4
   11ca4:	bl	12910 <main@@Base+0xa4>
   11ca8:	add	r0, r4, r0
   11cac:	pop	{r4, r5, fp, pc}
   11cb0:	movw	r0, #12270	; 0x2fee
   11cb4:	movt	r0, #1
   11cb8:	movw	r1, #11595	; 0x2d4b
   11cbc:	movt	r1, #1
   11cc0:	movw	r3, #13750	; 0x35b6
   11cc4:	movt	r3, #1
   11cc8:	mov	r2, #156	; 0x9c
   11ccc:	bl	10a78 <__assert_fail@plt>
   11cd0:	push	{r4, r5, fp, lr}
   11cd4:	add	fp, sp, #8
   11cd8:	cmp	r0, #0
   11cdc:	beq	11d30 <print_enum@@Base+0x33c>
   11ce0:	mov	r4, r0
   11ce4:	bl	128e0 <main@@Base+0x74>
   11ce8:	sub	r5, r4, r0
   11cec:	mov	r0, r5
   11cf0:	bl	128e8 <main@@Base+0x7c>
   11cf4:	cmp	r0, #6
   11cf8:	bcc	11d24 <print_enum@@Base+0x330>
   11cfc:	add	r0, r5, #4
   11d00:	bl	128e8 <main@@Base+0x7c>
   11d04:	cmp	r0, #0
   11d08:	beq	11d24 <print_enum@@Base+0x330>
   11d0c:	add	r4, r4, r0
   11d10:	mov	r0, r4
   11d14:	bl	12910 <main@@Base+0xa4>
   11d18:	add	r0, r4, r0
   11d1c:	add	r0, r0, #4
   11d20:	pop	{r4, r5, fp, pc}
   11d24:	movw	r0, #12166	; 0x2f86
   11d28:	movt	r0, #1
   11d2c:	b	11d38 <print_enum@@Base+0x344>
   11d30:	movw	r0, #11557	; 0x2d25
   11d34:	movt	r0, #1
   11d38:	movw	r1, #11595	; 0x2d4b
   11d3c:	movt	r1, #1
   11d40:	movw	r3, #13837	; 0x360d
   11d44:	movt	r3, #1
   11d48:	mov	r2, #159	; 0x9f
   11d4c:	bl	10a78 <__assert_fail@plt>
   11d50:	push	{r4, sl, fp, lr}
   11d54:	add	fp, sp, #8
   11d58:	cmp	r0, #0
   11d5c:	beq	11d98 <print_enum@@Base+0x3a4>
   11d60:	mov	r4, r0
   11d64:	bl	128e0 <main@@Base+0x74>
   11d68:	sub	r4, r4, r0
   11d6c:	mov	r0, r4
   11d70:	bl	128e8 <main@@Base+0x7c>
   11d74:	mov	r1, r0
   11d78:	mov	r0, #0
   11d7c:	cmp	r1, #8
   11d80:	popcc	{r4, sl, fp, pc}
   11d84:	add	r0, r4, #6
   11d88:	bl	128e8 <main@@Base+0x7c>
   11d8c:	cmp	r0, #0
   11d90:	movwne	r0, #1
   11d94:	pop	{r4, sl, fp, pc}
   11d98:	movw	r0, #11557	; 0x2d25
   11d9c:	movt	r0, #1
   11da0:	movw	r1, #11595	; 0x2d4b
   11da4:	movt	r1, #1
   11da8:	movw	r3, #13910	; 0x3656
   11dac:	movt	r3, #1
   11db0:	mov	r2, #160	; 0xa0
   11db4:	bl	10a78 <__assert_fail@plt>
   11db8:	push	{r4, r5, fp, lr}
   11dbc:	add	fp, sp, #8
   11dc0:	cmp	r0, #0
   11dc4:	beq	11e0c <print_enum@@Base+0x418>
   11dc8:	mov	r4, r0
   11dcc:	bl	128e0 <main@@Base+0x74>
   11dd0:	sub	r5, r4, r0
   11dd4:	mov	r0, r5
   11dd8:	bl	128e8 <main@@Base+0x7c>
   11ddc:	cmp	r0, #8
   11de0:	bcc	11e00 <print_enum@@Base+0x40c>
   11de4:	add	r0, r5, #6
   11de8:	bl	128e8 <main@@Base+0x7c>
   11dec:	cmp	r0, #0
   11df0:	beq	11e00 <print_enum@@Base+0x40c>
   11df4:	add	r0, r4, r0
   11df8:	pop	{r4, r5, fp, lr}
   11dfc:	b	1293c <main@@Base+0xd0>
   11e00:	mov	r0, #0
   11e04:	mov	r1, #0
   11e08:	pop	{r4, r5, fp, pc}
   11e0c:	movw	r0, #11557	; 0x2d25
   11e10:	movt	r0, #1
   11e14:	movw	r1, #11595	; 0x2d4b
   11e18:	movt	r1, #1
   11e1c:	movw	r3, #13978	; 0x369a
   11e20:	movt	r3, #1
   11e24:	mov	r2, #160	; 0xa0
   11e28:	bl	10a78 <__assert_fail@plt>
   11e2c:	push	{r4, sl, fp, lr}
   11e30:	add	fp, sp, #8
   11e34:	cmp	r0, #0
   11e38:	beq	11e74 <print_enum@@Base+0x480>
   11e3c:	mov	r4, r0
   11e40:	bl	128e0 <main@@Base+0x74>
   11e44:	sub	r4, r4, r0
   11e48:	mov	r0, r4
   11e4c:	bl	128e8 <main@@Base+0x7c>
   11e50:	mov	r1, r0
   11e54:	mov	r0, #0
   11e58:	cmp	r1, #10
   11e5c:	popcc	{r4, sl, fp, pc}
   11e60:	add	r0, r4, #8
   11e64:	bl	128e8 <main@@Base+0x7c>
   11e68:	cmp	r0, #0
   11e6c:	movwne	r0, #1
   11e70:	pop	{r4, sl, fp, pc}
   11e74:	movw	r0, #11557	; 0x2d25
   11e78:	movt	r0, #1
   11e7c:	movw	r1, #11595	; 0x2d4b
   11e80:	movt	r1, #1
   11e84:	movw	r3, #14039	; 0x36d7
   11e88:	movt	r3, #1
   11e8c:	mov	r2, #167	; 0xa7
   11e90:	bl	10a78 <__assert_fail@plt>
   11e94:	push	{r4, r5, r6, sl, fp, lr}
   11e98:	add	fp, sp, #16
   11e9c:	cmp	r0, #0
   11ea0:	beq	11eec <print_enum@@Base+0x4f8>
   11ea4:	mov	r4, r0
   11ea8:	bl	128e0 <main@@Base+0x74>
   11eac:	sub	r6, r4, r0
   11eb0:	mov	r0, r6
   11eb4:	bl	128e8 <main@@Base+0x7c>
   11eb8:	mov	r5, #0
   11ebc:	cmp	r0, #10
   11ec0:	bcc	11ee4 <print_enum@@Base+0x4f0>
   11ec4:	add	r0, r6, #8
   11ec8:	bl	128e8 <main@@Base+0x7c>
   11ecc:	cmp	r0, #0
   11ed0:	beq	11ee4 <print_enum@@Base+0x4f0>
   11ed4:	add	r4, r4, r0
   11ed8:	mov	r0, r4
   11edc:	bl	12910 <main@@Base+0xa4>
   11ee0:	add	r5, r4, r0
   11ee4:	mov	r0, r5
   11ee8:	pop	{r4, r5, r6, sl, fp, pc}
   11eec:	movw	r0, #11557	; 0x2d25
   11ef0:	movt	r0, #1
   11ef4:	movw	r1, #11595	; 0x2d4b
   11ef8:	movt	r1, #1
   11efc:	movw	r3, #14108	; 0x371c
   11f00:	movt	r3, #1
   11f04:	mov	r2, #167	; 0xa7
   11f08:	bl	10a78 <__assert_fail@plt>
   11f0c:	push	{r4, sl, fp, lr}
   11f10:	add	fp, sp, #8
   11f14:	cmp	r0, #0
   11f18:	beq	11f54 <print_enum@@Base+0x560>
   11f1c:	mov	r4, r0
   11f20:	bl	128e0 <main@@Base+0x74>
   11f24:	sub	r4, r4, r0
   11f28:	mov	r0, r4
   11f2c:	bl	128e8 <main@@Base+0x7c>
   11f30:	mov	r1, r0
   11f34:	mov	r0, #0
   11f38:	cmp	r1, #10
   11f3c:	popcc	{r4, sl, fp, pc}
   11f40:	add	r0, r4, #8
   11f44:	bl	128e8 <main@@Base+0x7c>
   11f48:	cmp	r0, #0
   11f4c:	movwne	r0, #1
   11f50:	pop	{r4, sl, fp, pc}
   11f54:	movw	r0, #11557	; 0x2d25
   11f58:	movt	r0, #1
   11f5c:	movw	r1, #11595	; 0x2d4b
   11f60:	movt	r1, #1
   11f64:	movw	r3, #14188	; 0x376c
   11f68:	movt	r3, #1
   11f6c:	mov	r2, #184	; 0xb8
   11f70:	bl	10a78 <__assert_fail@plt>
   11f74:	push	{r4, r5, fp, lr}
   11f78:	add	fp, sp, #8
   11f7c:	cmp	r0, #0
   11f80:	beq	11fc4 <print_enum@@Base+0x5d0>
   11f84:	mov	r4, r0
   11f88:	bl	128e0 <main@@Base+0x74>
   11f8c:	sub	r5, r4, r0
   11f90:	mov	r0, r5
   11f94:	bl	128e8 <main@@Base+0x7c>
   11f98:	cmp	r0, #10
   11f9c:	bcc	11fbc <print_enum@@Base+0x5c8>
   11fa0:	add	r0, r5, #8
   11fa4:	bl	128e8 <main@@Base+0x7c>
   11fa8:	cmp	r0, #0
   11fac:	beq	11fbc <print_enum@@Base+0x5c8>
   11fb0:	add	r0, r4, r0
   11fb4:	pop	{r4, r5, fp, lr}
   11fb8:	b	12954 <main@@Base+0xe8>
   11fbc:	mov	r0, #0
   11fc0:	pop	{r4, r5, fp, pc}
   11fc4:	movw	r0, #11557	; 0x2d25
   11fc8:	movt	r0, #1
   11fcc:	movw	r1, #11595	; 0x2d4b
   11fd0:	movt	r1, #1
   11fd4:	movw	r3, #14253	; 0x37ad
   11fd8:	movt	r3, #1
   11fdc:	mov	r2, #184	; 0xb8
   11fe0:	bl	10a78 <__assert_fail@plt>
   11fe4:	push	{r4, r5, fp, lr}
   11fe8:	add	fp, sp, #8
   11fec:	cmp	r0, #0
   11ff0:	beq	12040 <print_enum@@Base+0x64c>
   11ff4:	mov	r4, r0
   11ff8:	bl	128e0 <main@@Base+0x74>
   11ffc:	sub	r5, r4, r0
   12000:	mov	r0, r5
   12004:	bl	128e8 <main@@Base+0x7c>
   12008:	cmp	r0, #12
   1200c:	bcc	12034 <print_enum@@Base+0x640>
   12010:	add	r0, r5, #10
   12014:	bl	128e8 <main@@Base+0x7c>
   12018:	cmp	r0, #0
   1201c:	beq	12034 <print_enum@@Base+0x640>
   12020:	add	r4, r4, r0
   12024:	mov	r0, r4
   12028:	bl	12910 <main@@Base+0xa4>
   1202c:	add	r0, r4, r0
   12030:	pop	{r4, r5, fp, pc}
   12034:	movw	r0, #12166	; 0x2f86
   12038:	movt	r0, #1
   1203c:	b	12048 <print_enum@@Base+0x654>
   12040:	movw	r0, #11557	; 0x2d25
   12044:	movt	r0, #1
   12048:	movw	r1, #11595	; 0x2d4b
   1204c:	movt	r1, #1
   12050:	movw	r3, #14322	; 0x37f2
   12054:	movt	r3, #1
   12058:	mov	r2, #185	; 0xb9
   1205c:	bl	10a78 <__assert_fail@plt>

00012060 <print_schema@@Base>:
   12060:	push	{r4, r5, r6, sl, fp, lr}
   12064:	add	fp, sp, #16
   12068:	mov	r4, r0
   1206c:	bl	121e0 <print_schema@@Base+0x180>
   12070:	mov	r5, r0
   12074:	mov	r0, #123	; 0x7b
   12078:	bl	10a3c <putchar@plt>
   1207c:	movw	r0, #11056	; 0x2b30
   12080:	movt	r0, #1
   12084:	bl	109ac <printf@plt>
   12088:	mov	r0, r5
   1208c:	bl	12260 <print_schema@@Base+0x200>
   12090:	cmp	r0, #0
   12094:	beq	120dc <print_schema@@Base+0x7c>
   12098:	mov	r6, #0
   1209c:	cmp	r6, #0
   120a0:	bne	120d0 <print_schema@@Base+0x70>
   120a4:	mov	r0, r5
   120a8:	mov	r1, r6
   120ac:	bl	12274 <print_schema@@Base+0x214>
   120b0:	bl	10e80 <print_object@@Base>
   120b4:	add	r6, r6, #1
   120b8:	mov	r0, r5
   120bc:	bl	12260 <print_schema@@Base+0x200>
   120c0:	cmp	r6, r0
   120c4:	bcs	120dc <print_schema@@Base+0x7c>
   120c8:	cmp	r6, #0
   120cc:	beq	120a4 <print_schema@@Base+0x44>
   120d0:	mov	r0, #44	; 0x2c
   120d4:	bl	10a3c <putchar@plt>
   120d8:	b	120a4 <print_schema@@Base+0x44>
   120dc:	mov	r0, #93	; 0x5d
   120e0:	bl	10a3c <putchar@plt>
   120e4:	mov	r0, r4
   120e8:	bl	122c4 <print_schema@@Base+0x264>
   120ec:	mov	r5, r0
   120f0:	movw	r0, #11068	; 0x2b3c
   120f4:	movt	r0, #1
   120f8:	bl	109ac <printf@plt>
   120fc:	mov	r0, r5
   12100:	bl	11c6c <print_enum@@Base+0x278>
   12104:	cmp	r0, #0
   12108:	beq	12150 <print_schema@@Base+0xf0>
   1210c:	mov	r6, #0
   12110:	cmp	r6, #0
   12114:	bne	12144 <print_schema@@Base+0xe4>
   12118:	mov	r0, r5
   1211c:	mov	r1, r6
   12120:	bl	12344 <print_schema@@Base+0x2e4>
   12124:	bl	119f4 <print_enum@@Base>
   12128:	add	r6, r6, #1
   1212c:	mov	r0, r5
   12130:	bl	11c6c <print_enum@@Base+0x278>
   12134:	cmp	r6, r0
   12138:	bcs	12150 <print_schema@@Base+0xf0>
   1213c:	cmp	r6, #0
   12140:	beq	12118 <print_schema@@Base+0xb8>
   12144:	mov	r0, #44	; 0x2c
   12148:	bl	10a3c <putchar@plt>
   1214c:	b	12118 <print_schema@@Base+0xb8>
   12150:	mov	r0, #93	; 0x5d
   12154:	bl	10a3c <putchar@plt>
   12158:	mov	r0, r4
   1215c:	bl	12394 <print_schema@@Base+0x334>
   12160:	cmp	r0, #0
   12164:	beq	12180 <print_schema@@Base+0x120>
   12168:	mov	r0, r4
   1216c:	bl	123fc <print_schema@@Base+0x39c>
   12170:	mov	r1, r0
   12174:	movw	r0, #11079	; 0x2b47
   12178:	movt	r0, #1
   1217c:	bl	109ac <printf@plt>
   12180:	mov	r0, r4
   12184:	bl	12478 <print_schema@@Base+0x418>
   12188:	cmp	r0, #0
   1218c:	beq	121a8 <print_schema@@Base+0x148>
   12190:	mov	r0, r4
   12194:	bl	124e0 <print_schema@@Base+0x480>
   12198:	mov	r1, r0
   1219c:	movw	r0, #11098	; 0x2b5a
   121a0:	movt	r0, #1
   121a4:	bl	109ac <printf@plt>
   121a8:	mov	r0, r4
   121ac:	bl	1255c <print_schema@@Base+0x4fc>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <print_schema@@Base+0x170>
   121b8:	movw	r0, #11115	; 0x2b6b
   121bc:	movt	r0, #1
   121c0:	bl	109ac <printf@plt>
   121c4:	mov	r0, r4
   121c8:	bl	125c4 <print_schema@@Base+0x564>
   121cc:	bl	10e80 <print_object@@Base>
   121d0:	movw	r0, #15163	; 0x3b3b
   121d4:	movt	r0, #1
   121d8:	pop	{r4, r5, r6, sl, fp, lr}
   121dc:	b	109f4 <puts@plt>
   121e0:	push	{r4, r5, fp, lr}
   121e4:	add	fp, sp, #8
   121e8:	cmp	r0, #0
   121ec:	beq	12240 <print_schema@@Base+0x1e0>
   121f0:	mov	r4, r0
   121f4:	bl	128e0 <main@@Base+0x74>
   121f8:	sub	r5, r4, r0
   121fc:	mov	r0, r5
   12200:	bl	128e8 <main@@Base+0x7c>
   12204:	cmp	r0, #6
   12208:	bcc	12234 <print_schema@@Base+0x1d4>
   1220c:	add	r0, r5, #4
   12210:	bl	128e8 <main@@Base+0x7c>
   12214:	cmp	r0, #0
   12218:	beq	12234 <print_schema@@Base+0x1d4>
   1221c:	add	r4, r4, r0
   12220:	mov	r0, r4
   12224:	bl	12910 <main@@Base+0xa4>
   12228:	add	r0, r4, r0
   1222c:	add	r0, r0, #4
   12230:	pop	{r4, r5, fp, pc}
   12234:	movw	r0, #12166	; 0x2f86
   12238:	movt	r0, #1
   1223c:	b	12248 <print_schema@@Base+0x1e8>
   12240:	movw	r0, #11557	; 0x2d25
   12244:	movt	r0, #1
   12248:	movw	r1, #11595	; 0x2d4b
   1224c:	movt	r1, #1
   12250:	movw	r3, #14403	; 0x3843
   12254:	movt	r3, #1
   12258:	mov	r2, #237	; 0xed
   1225c:	bl	10a78 <__assert_fail@plt>
   12260:	cmp	r0, #0
   12264:	moveq	r0, #0
   12268:	bxeq	lr
   1226c:	sub	r0, r0, #4
   12270:	b	12910 <main@@Base+0xa4>
   12274:	push	{r4, r5, fp, lr}
   12278:	add	fp, sp, #8
   1227c:	mov	r4, r1
   12280:	mov	r5, r0
   12284:	bl	1291c <main@@Base+0xb0>
   12288:	cmp	r0, r4
   1228c:	bls	122a4 <print_schema@@Base+0x244>
   12290:	add	r4, r5, r4, lsl #2
   12294:	mov	r0, r4
   12298:	bl	12910 <main@@Base+0xa4>
   1229c:	add	r0, r4, r0
   122a0:	pop	{r4, r5, fp, pc}
   122a4:	movw	r0, #12270	; 0x2fee
   122a8:	movt	r0, #1
   122ac:	movw	r1, #11595	; 0x2d4b
   122b0:	movt	r1, #1
   122b4:	movw	r3, #14480	; 0x3890
   122b8:	movt	r3, #1
   122bc:	mov	r2, #215	; 0xd7
   122c0:	bl	10a78 <__assert_fail@plt>
   122c4:	push	{r4, r5, fp, lr}
   122c8:	add	fp, sp, #8
   122cc:	cmp	r0, #0
   122d0:	beq	12324 <print_schema@@Base+0x2c4>
   122d4:	mov	r4, r0
   122d8:	bl	128e0 <main@@Base+0x74>
   122dc:	sub	r5, r4, r0
   122e0:	mov	r0, r5
   122e4:	bl	128e8 <main@@Base+0x7c>
   122e8:	cmp	r0, #8
   122ec:	bcc	12318 <print_schema@@Base+0x2b8>
   122f0:	add	r0, r5, #6
   122f4:	bl	128e8 <main@@Base+0x7c>
   122f8:	cmp	r0, #0
   122fc:	beq	12318 <print_schema@@Base+0x2b8>
   12300:	add	r4, r4, r0
   12304:	mov	r0, r4
   12308:	bl	12910 <main@@Base+0xa4>
   1230c:	add	r0, r4, r0
   12310:	add	r0, r0, #4
   12314:	pop	{r4, r5, fp, pc}
   12318:	movw	r0, #12166	; 0x2f86
   1231c:	movt	r0, #1
   12320:	b	1232c <print_schema@@Base+0x2cc>
   12324:	movw	r0, #11557	; 0x2d25
   12328:	movt	r0, #1
   1232c:	movw	r1, #11595	; 0x2d4b
   12330:	movt	r1, #1
   12334:	movw	r3, #14564	; 0x38e4
   12338:	movt	r3, #1
   1233c:	mov	r2, #238	; 0xee
   12340:	bl	10a78 <__assert_fail@plt>
   12344:	push	{r4, r5, fp, lr}
   12348:	add	fp, sp, #8
   1234c:	mov	r4, r1
   12350:	mov	r5, r0
   12354:	bl	1291c <main@@Base+0xb0>
   12358:	cmp	r0, r4
   1235c:	bls	12374 <print_schema@@Base+0x314>
   12360:	add	r4, r5, r4, lsl #2
   12364:	mov	r0, r4
   12368:	bl	12910 <main@@Base+0xa4>
   1236c:	add	r0, r4, r0
   12370:	pop	{r4, r5, fp, pc}
   12374:	movw	r0, #12270	; 0x2fee
   12378:	movt	r0, #1
   1237c:	movw	r1, #11595	; 0x2d4b
   12380:	movt	r1, #1
   12384:	movw	r3, #14637	; 0x392d
   12388:	movt	r3, #1
   1238c:	mov	r2, #174	; 0xae
   12390:	bl	10a78 <__assert_fail@plt>
   12394:	push	{r4, sl, fp, lr}
   12398:	add	fp, sp, #8
   1239c:	cmp	r0, #0
   123a0:	beq	123dc <print_schema@@Base+0x37c>
   123a4:	mov	r4, r0
   123a8:	bl	128e0 <main@@Base+0x74>
   123ac:	sub	r4, r4, r0
   123b0:	mov	r0, r4
   123b4:	bl	128e8 <main@@Base+0x7c>
   123b8:	mov	r1, r0
   123bc:	mov	r0, #0
   123c0:	cmp	r1, #10
   123c4:	popcc	{r4, sl, fp, pc}
   123c8:	add	r0, r4, #8
   123cc:	bl	128e8 <main@@Base+0x7c>
   123d0:	cmp	r0, #0
   123d4:	movwne	r0, #1
   123d8:	pop	{r4, sl, fp, pc}
   123dc:	movw	r0, #11557	; 0x2d25
   123e0:	movt	r0, #1
   123e4:	movw	r1, #11595	; 0x2d4b
   123e8:	movt	r1, #1
   123ec:	movw	r3, #14715	; 0x397b
   123f0:	movt	r3, #1
   123f4:	mov	r2, #239	; 0xef
   123f8:	bl	10a78 <__assert_fail@plt>
   123fc:	push	{r4, r5, r6, sl, fp, lr}
   12400:	add	fp, sp, #16
   12404:	cmp	r0, #0
   12408:	beq	12458 <print_schema@@Base+0x3f8>
   1240c:	mov	r4, r0
   12410:	bl	128e0 <main@@Base+0x74>
   12414:	sub	r6, r4, r0
   12418:	mov	r0, r6
   1241c:	bl	128e8 <main@@Base+0x7c>
   12420:	mov	r5, #0
   12424:	cmp	r0, #10
   12428:	bcc	12450 <print_schema@@Base+0x3f0>
   1242c:	add	r0, r6, #8
   12430:	bl	128e8 <main@@Base+0x7c>
   12434:	cmp	r0, #0
   12438:	beq	12450 <print_schema@@Base+0x3f0>
   1243c:	add	r4, r4, r0
   12440:	mov	r0, r4
   12444:	bl	12910 <main@@Base+0xa4>
   12448:	add	r0, r4, r0
   1244c:	add	r5, r0, #4
   12450:	mov	r0, r5
   12454:	pop	{r4, r5, r6, sl, fp, pc}
   12458:	movw	r0, #11557	; 0x2d25
   1245c:	movt	r0, #1
   12460:	movw	r1, #11595	; 0x2d4b
   12464:	movt	r1, #1
   12468:	movw	r3, #14786	; 0x39c2
   1246c:	movt	r3, #1
   12470:	mov	r2, #239	; 0xef
   12474:	bl	10a78 <__assert_fail@plt>
   12478:	push	{r4, sl, fp, lr}
   1247c:	add	fp, sp, #8
   12480:	cmp	r0, #0
   12484:	beq	124c0 <print_schema@@Base+0x460>
   12488:	mov	r4, r0
   1248c:	bl	128e0 <main@@Base+0x74>
   12490:	sub	r4, r4, r0
   12494:	mov	r0, r4
   12498:	bl	128e8 <main@@Base+0x7c>
   1249c:	mov	r1, r0
   124a0:	mov	r0, #0
   124a4:	cmp	r1, #12
   124a8:	popcc	{r4, sl, fp, pc}
   124ac:	add	r0, r4, #10
   124b0:	bl	128e8 <main@@Base+0x7c>
   124b4:	cmp	r0, #0
   124b8:	movwne	r0, #1
   124bc:	pop	{r4, sl, fp, pc}
   124c0:	movw	r0, #11557	; 0x2d25
   124c4:	movt	r0, #1
   124c8:	movw	r1, #11595	; 0x2d4b
   124cc:	movt	r1, #1
   124d0:	movw	r3, #14863	; 0x3a0f
   124d4:	movt	r3, #1
   124d8:	mov	r2, #240	; 0xf0
   124dc:	bl	10a78 <__assert_fail@plt>
   124e0:	push	{r4, r5, r6, sl, fp, lr}
   124e4:	add	fp, sp, #16
   124e8:	cmp	r0, #0
   124ec:	beq	1253c <print_schema@@Base+0x4dc>
   124f0:	mov	r4, r0
   124f4:	bl	128e0 <main@@Base+0x74>
   124f8:	sub	r6, r4, r0
   124fc:	mov	r0, r6
   12500:	bl	128e8 <main@@Base+0x7c>
   12504:	mov	r5, #0
   12508:	cmp	r0, #12
   1250c:	bcc	12534 <print_schema@@Base+0x4d4>
   12510:	add	r0, r6, #10
   12514:	bl	128e8 <main@@Base+0x7c>
   12518:	cmp	r0, #0
   1251c:	beq	12534 <print_schema@@Base+0x4d4>
   12520:	add	r4, r4, r0
   12524:	mov	r0, r4
   12528:	bl	12910 <main@@Base+0xa4>
   1252c:	add	r0, r4, r0
   12530:	add	r5, r0, #4
   12534:	mov	r0, r5
   12538:	pop	{r4, r5, r6, sl, fp, pc}
   1253c:	movw	r0, #11557	; 0x2d25
   12540:	movt	r0, #1
   12544:	movw	r1, #11595	; 0x2d4b
   12548:	movt	r1, #1
   1254c:	movw	r3, #14932	; 0x3a54
   12550:	movt	r3, #1
   12554:	mov	r2, #240	; 0xf0
   12558:	bl	10a78 <__assert_fail@plt>
   1255c:	push	{r4, sl, fp, lr}
   12560:	add	fp, sp, #8
   12564:	cmp	r0, #0
   12568:	beq	125a4 <print_schema@@Base+0x544>
   1256c:	mov	r4, r0
   12570:	bl	128e0 <main@@Base+0x74>
   12574:	sub	r4, r4, r0
   12578:	mov	r0, r4
   1257c:	bl	128e8 <main@@Base+0x7c>
   12580:	mov	r1, r0
   12584:	mov	r0, #0
   12588:	cmp	r1, #14
   1258c:	popcc	{r4, sl, fp, pc}
   12590:	add	r0, r4, #12
   12594:	bl	128e8 <main@@Base+0x7c>
   12598:	cmp	r0, #0
   1259c:	movwne	r0, #1
   125a0:	pop	{r4, sl, fp, pc}
   125a4:	movw	r0, #11557	; 0x2d25
   125a8:	movt	r0, #1
   125ac:	movw	r1, #11595	; 0x2d4b
   125b0:	movt	r1, #1
   125b4:	movw	r3, #15007	; 0x3a9f
   125b8:	movt	r3, #1
   125bc:	mov	r2, #241	; 0xf1
   125c0:	bl	10a78 <__assert_fail@plt>
   125c4:	push	{r4, r5, r6, sl, fp, lr}
   125c8:	add	fp, sp, #16
   125cc:	cmp	r0, #0
   125d0:	beq	1261c <print_schema@@Base+0x5bc>
   125d4:	mov	r4, r0
   125d8:	bl	128e0 <main@@Base+0x74>
   125dc:	sub	r6, r4, r0
   125e0:	mov	r0, r6
   125e4:	bl	128e8 <main@@Base+0x7c>
   125e8:	mov	r5, #0
   125ec:	cmp	r0, #14
   125f0:	bcc	12614 <print_schema@@Base+0x5b4>
   125f4:	add	r0, r6, #12
   125f8:	bl	128e8 <main@@Base+0x7c>
   125fc:	cmp	r0, #0
   12600:	beq	12614 <print_schema@@Base+0x5b4>
   12604:	add	r4, r4, r0
   12608:	mov	r0, r4
   1260c:	bl	12910 <main@@Base+0xa4>
   12610:	add	r5, r4, r0
   12614:	mov	r0, r5
   12618:	pop	{r4, r5, r6, sl, fp, pc}
   1261c:	movw	r0, #11557	; 0x2d25
   12620:	movt	r0, #1
   12624:	movw	r1, #11595	; 0x2d4b
   12628:	movt	r1, #1
   1262c:	movw	r3, #15078	; 0x3ae6
   12630:	movt	r3, #1
   12634:	mov	r2, #241	; 0xf1
   12638:	bl	10a78 <__assert_fail@plt>

0001263c <load_and_dump_schema@@Base>:
   1263c:	push	{r4, r5, fp, lr}
   12640:	add	fp, sp, #8
   12644:	sub	sp, sp, #8
   12648:	mov	r5, r0
   1264c:	add	r1, sp, #4
   12650:	bl	12738 <load_and_dump_schema@@Base+0xfc>
   12654:	cmp	r0, #0
   12658:	beq	126a0 <load_and_dump_schema@@Base+0x64>
   1265c:	mov	r4, r0
   12660:	ldr	r0, [sp, #4]
   12664:	cmp	r0, #11
   12668:	bls	126c4 <load_and_dump_schema@@Base+0x88>
   1266c:	mov	r0, r4
   12670:	bl	12834 <load_and_dump_schema@@Base+0x1f8>
   12674:	mov	r5, r0
   12678:	cmp	r0, #0
   1267c:	beq	126e4 <load_and_dump_schema@@Base+0xa8>
   12680:	mov	r0, r5
   12684:	bl	12060 <print_schema@@Base>
   12688:	mov	r5, #0
   1268c:	mov	r0, r4
   12690:	bl	109c4 <free@plt>
   12694:	mov	r0, r5
   12698:	sub	sp, fp, #8
   1269c:	pop	{r4, r5, fp, pc}
   126a0:	movw	r0, #16480	; 0x4060
   126a4:	movt	r0, #2
   126a8:	ldr	r0, [r0]
   126ac:	movw	r1, #11130	; 0x2b7a
   126b0:	movt	r1, #1
   126b4:	mov	r2, r5
   126b8:	bl	10a30 <fprintf@plt>
   126bc:	mvn	r5, #0
   126c0:	b	12694 <load_and_dump_schema@@Base+0x58>
   126c4:	movw	r0, #16480	; 0x4060
   126c8:	movt	r0, #2
   126cc:	ldr	r0, [r0]
   126d0:	movw	r1, #11171	; 0x2ba3
   126d4:	movt	r1, #1
   126d8:	mov	r2, r5
   126dc:	bl	10a30 <fprintf@plt>
   126e0:	b	12718 <load_and_dump_schema@@Base+0xdc>
   126e4:	add	r0, r4, #4
   126e8:	bl	12834 <load_and_dump_schema@@Base+0x1f8>
   126ec:	mov	r5, r0
   126f0:	movw	r0, #16480	; 0x4060
   126f4:	movt	r0, #2
   126f8:	ldr	r3, [r0]
   126fc:	cmp	r5, #0
   12700:	bne	12720 <load_and_dump_schema@@Base+0xe4>
   12704:	movw	r0, #11244	; 0x2bec
   12708:	movt	r0, #1
   1270c:	mov	r1, #27
   12710:	mov	r2, #1
   12714:	bl	109e8 <fwrite@plt>
   12718:	mvn	r5, #0
   1271c:	b	1268c <load_and_dump_schema@@Base+0x50>
   12720:	movw	r0, #11203	; 0x2bc3
   12724:	movt	r0, #1
   12728:	mov	r1, #40	; 0x28
   1272c:	mov	r2, #1
   12730:	bl	109e8 <fwrite@plt>
   12734:	b	12680 <load_and_dump_schema@@Base+0x44>
   12738:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1273c:	add	fp, sp, #24
   12740:	sub	sp, sp, #8
   12744:	add	r9, sp, #4
   12748:	cmp	r1, #0
   1274c:	movne	r9, r1
   12750:	movw	r1, #15160	; 0x3b38
   12754:	movt	r1, #1
   12758:	bl	109b8 <fopen@plt>
   1275c:	cmp	r0, #0
   12760:	beq	127f8 <load_and_dump_schema@@Base+0x1bc>
   12764:	mov	r6, r0
   12768:	mov	r8, #0
   1276c:	mov	r1, #0
   12770:	mov	r2, #2
   12774:	bl	10a60 <fseek@plt>
   12778:	mov	r0, r6
   1277c:	bl	109d0 <ftell@plt>
   12780:	mov	r5, r0
   12784:	str	r0, [r9]
   12788:	movw	r0, #10000	; 0x2710
   1278c:	cmp	r5, r0
   12790:	bhi	12808 <load_and_dump_schema@@Base+0x1cc>
   12794:	mov	r0, r6
   12798:	bl	109dc <rewind@plt>
   1279c:	cmp	r5, #0
   127a0:	mov	r0, r5
   127a4:	movweq	r0, #1
   127a8:	bl	10a00 <malloc@plt>
   127ac:	cmp	r0, #0
   127b0:	beq	12808 <load_and_dump_schema@@Base+0x1cc>
   127b4:	mov	r7, r0
   127b8:	mov	r8, r0
   127bc:	mov	r1, #0
   127c0:	mov	r4, r1
   127c4:	add	r0, r7, r1
   127c8:	sub	r2, r5, r1
   127cc:	mov	r1, #1
   127d0:	mov	r3, r6
   127d4:	bl	10a54 <fread_unlocked@plt>
   127d8:	add	r1, r0, r4
   127dc:	cmp	r0, #0
   127e0:	bne	127c0 <load_and_dump_schema@@Base+0x184>
   127e4:	cmp	r5, r4
   127e8:	bne	12800 <load_and_dump_schema@@Base+0x1c4>
   127ec:	mov	r0, r6
   127f0:	bl	10a48 <fclose@plt>
   127f4:	b	12824 <load_and_dump_schema@@Base+0x1e8>
   127f8:	mov	r5, #0
   127fc:	b	12820 <load_and_dump_schema@@Base+0x1e4>
   12800:	cmp	r6, #0
   12804:	beq	12810 <load_and_dump_schema@@Base+0x1d4>
   12808:	mov	r0, r6
   1280c:	bl	10a48 <fclose@plt>
   12810:	cmp	r8, #0
   12814:	beq	12820 <load_and_dump_schema@@Base+0x1e4>
   12818:	mov	r0, r8
   1281c:	bl	109c4 <free@plt>
   12820:	mov	r8, #0
   12824:	str	r5, [r9]
   12828:	mov	r0, r8
   1282c:	sub	sp, fp, #24
   12830:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12834:	push	{r4, r5, fp, lr}
   12838:	add	fp, sp, #8
   1283c:	mov	r5, #0
   12840:	cmp	r0, #0
   12844:	beq	12864 <load_and_dump_schema@@Base+0x228>
   12848:	mov	r4, r0
   1284c:	bl	12960 <main@@Base+0xf4>
   12850:	cmp	r0, #0
   12854:	beq	12864 <load_and_dump_schema@@Base+0x228>
   12858:	mov	r0, r4
   1285c:	bl	12910 <main@@Base+0xa4>
   12860:	add	r5, r4, r0
   12864:	mov	r0, r5
   12868:	pop	{r4, r5, fp, pc}

0001286c <main@@Base>:
   1286c:	push	{r4, sl, fp, lr}
   12870:	add	fp, sp, #8
   12874:	cmp	r0, #2
   12878:	bne	12888 <main@@Base+0x1c>
   1287c:	ldr	r0, [r1, #4]
   12880:	pop	{r4, sl, fp, lr}
   12884:	b	1263c <load_and_dump_schema@@Base>
   12888:	movw	r4, #16480	; 0x4060
   1288c:	movt	r4, #2
   12890:	ldr	r3, [r4]
   12894:	movw	r0, #11272	; 0x2c08
   12898:	movt	r0, #1
   1289c:	mov	r1, #28
   128a0:	mov	r2, #1
   128a4:	bl	109e8 <fwrite@plt>
   128a8:	ldr	r3, [r4]
   128ac:	movw	r0, #11301	; 0x2c25
   128b0:	movt	r0, #1
   128b4:	mov	r1, #74	; 0x4a
   128b8:	mov	r2, #1
   128bc:	bl	109e8 <fwrite@plt>
   128c0:	ldr	r3, [r4]
   128c4:	movw	r0, #11376	; 0x2c70
   128c8:	movt	r0, #1
   128cc:	mov	r1, #180	; 0xb4
   128d0:	mov	r2, #1
   128d4:	bl	109e8 <fwrite@plt>
   128d8:	mvn	r0, #0
   128dc:	bl	10a24 <exit@plt>
   128e0:	ldr	r0, [r0]
   128e4:	b	128f0 <main@@Base+0x84>
   128e8:	ldrh	r0, [r0]
   128ec:	b	128f4 <main@@Base+0x88>
   128f0:	bx	lr
   128f4:	bx	lr
   128f8:	ldrsb	r0, [r0]
   128fc:	b	12900 <main@@Base+0x94>
   12900:	bx	lr
   12904:	ldr	r0, [r0]
   12908:	b	1290c <main@@Base+0xa0>
   1290c:	bx	lr
   12910:	ldr	r0, [r0]
   12914:	b	12918 <main@@Base+0xac>
   12918:	bx	lr
   1291c:	cmp	r0, #0
   12920:	moveq	r0, #0
   12924:	bxeq	lr
   12928:	sub	r0, r0, #4
   1292c:	b	12910 <main@@Base+0xa4>
   12930:	ldrh	r0, [r0]
   12934:	b	12938 <main@@Base+0xcc>
   12938:	bx	lr
   1293c:	ldrd	r0, [r0]
   12940:	b	12944 <main@@Base+0xd8>
   12944:	bx	lr
   12948:	vldr	d0, [r0]
   1294c:	b	12950 <main@@Base+0xe4>
   12950:	bx	lr
   12954:	ldrb	r0, [r0]
   12958:	b	1295c <main@@Base+0xf0>
   1295c:	bx	lr
   12960:	push	{fp, lr}
   12964:	mov	fp, sp
   12968:	add	r0, r0, #4
   1296c:	bl	12988 <main@@Base+0x11c>
   12970:	movw	r1, #47550	; 0xb9be
   12974:	movt	r1, #44221	; 0xacbd
   12978:	add	r0, r0, r1
   1297c:	clz	r0, r0
   12980:	lsr	r0, r0, #5
   12984:	pop	{fp, pc}
   12988:	ldr	r0, [r0]
   1298c:	b	12990 <main@@Base+0x124>
   12990:	bx	lr

00012994 <__libc_csu_init@@Base>:
   12994:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12998:	mov	r7, r0
   1299c:	ldr	r6, [pc, #72]	; 129ec <__libc_csu_init@@Base+0x58>
   129a0:	ldr	r5, [pc, #72]	; 129f0 <__libc_csu_init@@Base+0x5c>
   129a4:	add	r6, pc, r6
   129a8:	add	r5, pc, r5
   129ac:	sub	r6, r6, r5
   129b0:	mov	r8, r1
   129b4:	mov	r9, r2
   129b8:	bl	1098c <printf@plt-0x20>
   129bc:	asrs	r6, r6, #2
   129c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   129c4:	mov	r4, #0
   129c8:	add	r4, r4, #1
   129cc:	ldr	r3, [r5], #4
   129d0:	mov	r2, r9
   129d4:	mov	r1, r8
   129d8:	mov	r0, r7
   129dc:	blx	r3
   129e0:	cmp	r6, r4
   129e4:	bne	129c8 <__libc_csu_init@@Base+0x34>
   129e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129ec:	andeq	r1, r1, r0, ror #10
   129f0:	andeq	r1, r1, r8, asr r5

000129f4 <__libc_csu_fini@@Base>:
   129f4:	bx	lr

Disassembly of section .fini:

000129f8 <.fini>:
   129f8:	push	{r3, lr}
   129fc:	pop	{r3, pc}
