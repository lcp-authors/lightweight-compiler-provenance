
../repos/charybdis/modules/.libs/m_version.so:     file format elf32-littlearm


Disassembly of section .init:

00000628 <_init>:
 628:	push	{r3, lr}
 62c:	bl	69c <call_weak_fn>
 630:	pop	{r3, pc}

Disassembly of section .plt:

00000634 <.plt>:
 634:	push	{lr}		; (str lr, [sp, #-4]!)
 638:	ldr	lr, [pc, #4]	; 644 <.plt+0x10>
 63c:	add	lr, pc, lr
 640:	ldr	pc, [lr, #8]!
 644:	.word	0x000109bc

00000648 <rb_current_time@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2492]!	; 0x9bc

00000654 <__cxa_finalize@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2484]!	; 0x9b4

00000660 <sendto_one@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2476]!	; 0x9ac

0000066c <show_isupport@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2468]!	; 0x9a4

00000678 <hunt_server@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2460]!	; 0x99c

00000684 <__gmon_start__@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #16, 20	; 0x10000
 68c:	ldr	pc, [ip, #2452]!	; 0x994

00000690 <sendto_one_numeric@plt>:
 690:	add	ip, pc, #0, 12
 694:	add	ip, ip, #16, 20	; 0x10000
 698:	ldr	pc, [ip, #2444]!	; 0x98c

Disassembly of section .text:

0000069c <call_weak_fn>:
 69c:	ldr	r3, [pc, #20]	; 6b8 <call_weak_fn+0x1c>
 6a0:	ldr	r2, [pc, #20]	; 6bc <call_weak_fn+0x20>
 6a4:	add	r3, pc, r3
 6a8:	ldr	r2, [r3, r2]
 6ac:	cmp	r2, #0
 6b0:	bxeq	lr
 6b4:	b	684 <__gmon_start__@plt>
 6b8:	.word	0x00010954
 6bc:	.word	0x00000040

000006c0 <deregister_tm_clones>:
 6c0:	ldr	r0, [pc, #44]	; 6f4 <deregister_tm_clones+0x34>
 6c4:	ldr	r3, [pc, #44]	; 6f8 <deregister_tm_clones+0x38>
 6c8:	add	r0, pc, r0
 6cc:	add	r3, pc, r3
 6d0:	cmp	r3, r0
 6d4:	ldr	r3, [pc, #32]	; 6fc <deregister_tm_clones+0x3c>
 6d8:	add	r3, pc, r3
 6dc:	bxeq	lr
 6e0:	ldr	r2, [pc, #24]	; 700 <deregister_tm_clones+0x40>
 6e4:	ldr	r3, [r3, r2]
 6e8:	cmp	r3, #0
 6ec:	bxeq	lr
 6f0:	bx	r3
 6f4:	.word	0x000109fc
 6f8:	.word	0x000109f8
 6fc:	.word	0x00010920
 700:	.word	0x0000002c

00000704 <register_tm_clones>:
 704:	ldr	r0, [pc, #56]	; 744 <register_tm_clones+0x40>
 708:	ldr	r3, [pc, #56]	; 748 <register_tm_clones+0x44>
 70c:	add	r0, pc, r0
 710:	add	r3, pc, r3
 714:	sub	r1, r3, r0
 718:	ldr	r3, [pc, #44]	; 74c <register_tm_clones+0x48>
 71c:	asr	r1, r1, #2
 720:	add	r3, pc, r3
 724:	add	r1, r1, r1, lsr #31
 728:	asrs	r1, r1, #1
 72c:	bxeq	lr
 730:	ldr	r2, [pc, #24]	; 750 <register_tm_clones+0x4c>
 734:	ldr	r3, [r3, r2]
 738:	cmp	r3, #0
 73c:	bxeq	lr
 740:	bx	r3
 744:	.word	0x000109b8
 748:	.word	0x000109b4
 74c:	.word	0x000108d8
 750:	.word	0x00000048

00000754 <__do_global_dtors_aux>:
 754:	ldr	r3, [pc, #76]	; 7a8 <__do_global_dtors_aux+0x54>
 758:	ldr	r2, [pc, #76]	; 7ac <__do_global_dtors_aux+0x58>
 75c:	add	r3, pc, r3
 760:	add	r2, pc, r2
 764:	ldrb	r3, [r3]
 768:	cmp	r3, #0
 76c:	bxne	lr
 770:	ldr	r3, [pc, #56]	; 7b0 <__do_global_dtors_aux+0x5c>
 774:	push	{r4, lr}
 778:	ldr	r3, [r2, r3]
 77c:	cmp	r3, #0
 780:	beq	790 <__do_global_dtors_aux+0x3c>
 784:	ldr	r3, [pc, #40]	; 7b4 <__do_global_dtors_aux+0x60>
 788:	ldr	r0, [pc, r3]
 78c:	bl	654 <__cxa_finalize@plt>
 790:	bl	6c0 <deregister_tm_clones>
 794:	ldr	r3, [pc, #28]	; 7b8 <__do_global_dtors_aux+0x64>
 798:	mov	r2, #1
 79c:	add	r3, pc, r3
 7a0:	strb	r2, [r3]
 7a4:	pop	{r4, pc}
 7a8:	.word	0x00010968
 7ac:	.word	0x00010898
 7b0:	.word	0x00000028
 7b4:	.word	0x000108c4
 7b8:	.word	0x00010928

000007bc <frame_dummy>:
 7bc:	b	704 <register_tm_clones>

000007c0 <m_version>:
 7c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 7c4:	add	fp, sp, #24
 7c8:	sub	sp, sp, #24
 7cc:	mov	r4, r2
 7d0:	cmp	r3, #2
 7d4:	blt	874 <m_version+0xb4>
 7d8:	ldr	r8, [fp, #8]
 7dc:	ldr	r0, [pc, #408]	; 97c <m_version+0x1bc>
 7e0:	mov	r5, r1
 7e4:	mov	r6, r3
 7e8:	ldr	r0, [pc, r0]
 7ec:	ldr	r0, [r0, #184]	; 0xb8
 7f0:	ldr	r1, [pc, #392]	; 980 <m_version+0x1c0>
 7f4:	ldr	r1, [pc, r1]
 7f8:	add	r7, r0, r1
 7fc:	bl	648 <rb_current_time@plt>
 800:	cmp	r7, r0
 804:	ble	83c <m_version+0x7c>
 808:	ldr	r0, [pc, #416]	; 9b0 <m_version+0x1f0>
 80c:	add	r3, r4, #88	; 0x58
 810:	add	r0, pc, r0
 814:	str	r0, [sp]
 818:	ldr	r0, [pc, #404]	; 9b4 <m_version+0x1f4>
 81c:	ldr	r0, [pc, r0]
 820:	ldr	r1, [pc, #400]	; 9b8 <m_version+0x1f8>
 824:	add	r2, r0, #88	; 0x58
 828:	add	r1, pc, r1
 82c:	mov	r0, r4
 830:	bl	660 <sendto_one@plt>
 834:	sub	sp, fp, #24
 838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 83c:	bl	648 <rb_current_time@plt>
 840:	ldr	r1, [pc, #316]	; 984 <m_version+0x1c4>
 844:	mov	r3, #1
 848:	add	r1, pc, r1
 84c:	str	r0, [r1]
 850:	stm	sp, {r6, r8}
 854:	mov	r0, r5
 858:	mov	r1, r4
 85c:	ldr	r2, [pc, #292]	; 988 <m_version+0x1c8>
 860:	add	r2, pc, r2
 864:	bl	678 <hunt_server@plt>
 868:	cmp	r0, #0
 86c:	subne	sp, fp, #24
 870:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
 874:	ldr	r7, [pc, #272]	; 98c <m_version+0x1cc>
 878:	mov	r0, #0
 87c:	add	r7, pc, r7
 880:	mov	r1, r7
 884:	strb	r0, [r1, #4]!
 888:	ldr	r0, [pc, #256]	; 990 <m_version+0x1d0>
 88c:	ldr	r0, [pc, r0]
 890:	ldr	r0, [r0]
 894:	ldr	r2, [pc, #248]	; 994 <m_version+0x1d4>
 898:	ldr	r2, [pc, r2]
 89c:	ldr	r3, [r2]
 8a0:	ldr	r6, [pc, #240]	; 998 <m_version+0x1d8>
 8a4:	ldr	r6, [pc, r6]
 8a8:	ldr	r2, [r6]
 8ac:	cmp	r2, #0
 8b0:	ldr	r2, [r6, #4]
 8b4:	movne	r1, #101	; 0x65
 8b8:	strbne	r1, [r7, #4]
 8bc:	addne	r1, r7, #5
 8c0:	cmp	r2, #0
 8c4:	movne	r2, #73	; 0x49
 8c8:	strbne	r2, [r1], #1
 8cc:	ldr	r2, [r6, #12]
 8d0:	movw	r6, #28749	; 0x704d
 8d4:	cmp	r2, #0
 8d8:	movne	r2, #75	; 0x4b
 8dc:	strbne	r2, [r1], #1
 8e0:	mov	r2, r1
 8e4:	strh	r6, [r2], #2
 8e8:	ldr	r6, [pc, #172]	; 99c <m_version+0x1dc>
 8ec:	ldr	r6, [pc, r6]
 8f0:	ldrb	r6, [r6]
 8f4:	cmp	r6, #0
 8f8:	ldreq	r6, [pc, #160]	; 9a0 <m_version+0x1e0>
 8fc:	ldreq	r6, [pc, r6]
 900:	ldreq	r6, [r6, #320]	; 0x140
 904:	cmpeq	r6, #0
 908:	beq	918 <m_version+0x158>
 90c:	mov	r2, #83	; 0x53
 910:	strb	r2, [r1, #2]
 914:	add	r2, r1, #3
 918:	mov	r1, #0
 91c:	strb	r1, [r2, #2]
 920:	movw	r1, #13914	; 0x365a
 924:	strh	r1, [r2]
 928:	ldr	r1, [pc, #116]	; 9a4 <m_version+0x1e4>
 92c:	ldr	r1, [pc, r1]
 930:	add	r1, r1, #4
 934:	str	r1, [sp, #16]
 938:	mov	r1, #6
 93c:	str	r1, [sp, #12]
 940:	add	r1, r7, #4
 944:	str	r1, [sp, #8]
 948:	ldr	r1, [pc, #88]	; 9a8 <m_version+0x1e8>
 94c:	ldr	r1, [pc, r1]
 950:	add	r1, r1, #88	; 0x58
 954:	stm	sp, {r0, r1}
 958:	mov	r0, r4
 95c:	movw	r1, #351	; 0x15f
 960:	ldr	r2, [pc, #68]	; 9ac <m_version+0x1ec>
 964:	add	r2, pc, r2
 968:	bl	690 <sendto_one_numeric@plt>
 96c:	mov	r0, r4
 970:	sub	sp, fp, #24
 974:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
 978:	b	66c <show_isupport@plt>
 97c:	.word	0x00010860
 980:	.word	0x000108d4
 984:	.word	0x00010880
 988:	.word	0x00000343
 98c:	.word	0x0001084c
 990:	.word	0x000107a8
 994:	.word	0x00010790
 998:	.word	0x00010798
 99c:	.word	0x00010744
 9a0:	.word	0x0001074c
 9a4:	.word	0x00010700
 9a8:	.word	0x000106f8
 9ac:	.word	0x0000024f
 9b0:	.word	0x00000320
 9b4:	.word	0x00010828
 9b8:	.word	0x00000310

000009bc <mo_version>:
 9bc:	push	{r4, sl, fp, lr}
 9c0:	add	fp, sp, #8
 9c4:	sub	sp, sp, #24
 9c8:	str	r3, [sp]
 9cc:	mov	r0, r1
 9d0:	mov	r4, r2
 9d4:	mov	r3, #1
 9d8:	ldr	r1, [fp, #8]
 9dc:	str	r1, [sp, #4]
 9e0:	mov	r1, r4
 9e4:	ldr	r2, [pc, #284]	; b08 <mo_version+0x14c>
 9e8:	add	r2, pc, r2
 9ec:	bl	678 <hunt_server@plt>
 9f0:	cmp	r0, #0
 9f4:	subne	sp, fp, #8
 9f8:	popne	{r4, sl, fp, pc}
 9fc:	ldr	lr, [pc, #264]	; b0c <mo_version+0x150>
 a00:	mov	r0, #0
 a04:	add	lr, pc, lr
 a08:	mov	r2, lr
 a0c:	strb	r0, [r2, #4]!
 a10:	ldr	r0, [pc, #248]	; b10 <mo_version+0x154>
 a14:	ldr	r0, [pc, r0]
 a18:	ldr	ip, [r0]
 a1c:	ldr	r0, [pc, #240]	; b14 <mo_version+0x158>
 a20:	ldr	r0, [pc, r0]
 a24:	ldr	r3, [r0]
 a28:	ldr	r0, [pc, #232]	; b18 <mo_version+0x15c>
 a2c:	ldr	r0, [pc, r0]
 a30:	ldr	r1, [r0]
 a34:	cmp	r1, #0
 a38:	movne	r1, #101	; 0x65
 a3c:	addne	r2, lr, #5
 a40:	strbne	r1, [lr, #4]
 a44:	ldr	r1, [r0, #4]
 a48:	ldr	r0, [r0, #12]
 a4c:	cmp	r1, #0
 a50:	movne	r1, #73	; 0x49
 a54:	strbne	r1, [r2], #1
 a58:	cmp	r0, #0
 a5c:	movw	r1, #28749	; 0x704d
 a60:	movne	r0, #75	; 0x4b
 a64:	strbne	r0, [r2], #1
 a68:	mov	r0, r2
 a6c:	strh	r1, [r0], #2
 a70:	ldr	r1, [pc, #164]	; b1c <mo_version+0x160>
 a74:	ldr	r1, [pc, r1]
 a78:	ldrb	r1, [r1]
 a7c:	cmp	r1, #0
 a80:	ldreq	r1, [pc, #152]	; b20 <mo_version+0x164>
 a84:	ldreq	r1, [pc, r1]
 a88:	ldreq	r1, [r1, #320]	; 0x140
 a8c:	cmpeq	r1, #0
 a90:	beq	aa0 <mo_version+0xe4>
 a94:	mov	r0, #83	; 0x53
 a98:	strb	r0, [r2, #2]
 a9c:	add	r0, r2, #3
 aa0:	mov	r1, #0
 aa4:	strb	r1, [r0, #2]
 aa8:	movw	r1, #13914	; 0x365a
 aac:	strh	r1, [r0]
 ab0:	movw	r1, #351	; 0x15f
 ab4:	ldr	r0, [pc, #104]	; b24 <mo_version+0x168>
 ab8:	ldr	r0, [pc, r0]
 abc:	add	r0, r0, #4
 ac0:	str	r0, [sp, #16]
 ac4:	mov	r0, #6
 ac8:	str	r0, [sp, #12]
 acc:	add	r0, lr, #4
 ad0:	str	r0, [sp, #8]
 ad4:	ldr	r0, [pc, #76]	; b28 <mo_version+0x16c>
 ad8:	ldr	r0, [pc, r0]
 adc:	str	ip, [sp]
 ae0:	add	r0, r0, #88	; 0x58
 ae4:	str	r0, [sp, #4]
 ae8:	mov	r0, r4
 aec:	ldr	r2, [pc, #56]	; b2c <mo_version+0x170>
 af0:	add	r2, pc, r2
 af4:	bl	690 <sendto_one_numeric@plt>
 af8:	mov	r0, r4
 afc:	sub	sp, fp, #8
 b00:	pop	{r4, sl, fp, lr}
 b04:	b	66c <show_isupport@plt>
 b08:	.word	0x000001bb
 b0c:	.word	0x000106c4
 b10:	.word	0x00010620
 b14:	.word	0x00010608
 b18:	.word	0x00010610
 b1c:	.word	0x000105bc
 b20:	.word	0x000105c4
 b24:	.word	0x00010574
 b28:	.word	0x0001056c
 b2c:	.word	0x000000c3

Disassembly of section .fini:

00000b30 <_fini>:
 b30:	push	{r3, lr}
 b34:	pop	{r3, pc}
