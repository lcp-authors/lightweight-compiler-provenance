
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

00011078 <.init>:
   11078:	push	{r3, lr}
   1107c:	bl	12448 <mythread_init@plt+0xc>
   11080:	pop	{r3, pc}

Disassembly of section .plt:

00011084 <pthread_mutex_unlock@plt-0x14>:
   11084:	push	{lr}		; (str lr, [sp, #-4]!)
   11088:	ldr	lr, [pc, #4]	; 11094 <pthread_mutex_unlock@plt-0x4>
   1108c:	add	lr, pc, lr
   11090:	ldr	pc, [lr, #8]!
   11094:	andseq	r5, r0, ip, ror #30

00011098 <pthread_mutex_unlock@plt>:
   11098:	add	ip, pc, #1048576	; 0x100000
   1109c:	add	ip, ip, #20480	; 0x5000
   110a0:	ldr	pc, [ip, #3948]!	; 0xf6c

000110a4 <myhtml_get_nodes_by_attribute_value_recursion@plt>:
   110a4:	add	ip, pc, #1048576	; 0x100000
   110a8:	add	ip, ip, #20480	; 0x5000
   110ac:	ldr	pc, [ip, #3940]!	; 0xf64

000110b0 <mycore_realloc@plt>:
   110b0:	add	ip, pc, #1048576	; 0x100000
   110b4:	add	ip, ip, #20480	; 0x5000
   110b8:	ldr	pc, [ip, #3932]!	; 0xf5c

000110bc <calloc@plt>:
   110bc:	add	ip, pc, #1048576	; 0x100000
   110c0:	add	ip, ip, #20480	; 0x5000
   110c4:	ldr	pc, [ip, #3924]!	; 0xf54

000110c8 <mycore_strcmp@plt>:
   110c8:	add	ip, pc, #1048576	; 0x100000
   110cc:	add	ip, ip, #20480	; 0x5000
   110d0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110d4 <myhtml_tree_node_insert_root@plt>:
   110d4:	add	ip, pc, #1048576	; 0x100000
   110d8:	add	ip, ip, #20480	; 0x5000
   110dc:	ldr	pc, [ip, #3908]!	; 0xf44

000110e0 <mythread_queue_list_entry_delete@plt>:
   110e0:	add	ip, pc, #1048576	; 0x100000
   110e4:	add	ip, ip, #20480	; 0x5000
   110e8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110ec <myencoding_string_append_chunk@plt>:
   110ec:	add	ip, pc, #1048576	; 0x100000
   110f0:	add	ip, ip, #20480	; 0x5000
   110f4:	ldr	pc, [ip, #3892]!	; 0xf34

000110f8 <myhtml_token_release_and_check_doctype_attributes@plt>:
   110f8:	add	ip, pc, #1048576	; 0x100000
   110fc:	add	ip, ip, #20480	; 0x5000
   11100:	ldr	pc, [ip, #3884]!	; 0xf2c

00011104 <myhtml_token_doctype_check_xhtml_1_1@plt>:
   11104:	add	ip, pc, #1048576	; 0x100000
   11108:	add	ip, ip, #20480	; 0x5000
   1110c:	ldr	pc, [ip, #3876]!	; 0xf24

00011110 <myencoding_detect_unicode@plt>:
   11110:	add	ip, pc, #1048576	; 0x100000
   11114:	add	ip, ip, #20480	; 0x5000
   11118:	ldr	pc, [ip, #3868]!	; 0xf1c

0001111c <myhtml_tree_element_in_scope_by_node@plt>:
   1111c:	add	ip, pc, #1048576	; 0x100000
   11120:	add	ip, ip, #20480	; 0x5000
   11124:	ldr	pc, [ip, #3860]!	; 0xf14

00011128 <mythread_nanosleep_clean@plt>:
   11128:	add	ip, pc, #1048576	; 0x100000
   1112c:	add	ip, ip, #20480	; 0x5000
   11130:	ldr	pc, [ip, #3852]!	; 0xf0c

00011134 <myhtml_tree_node_insert_html_element@plt>:
   11134:	add	ip, pc, #1048576	; 0x100000
   11138:	add	ip, ip, #20480	; 0x5000
   1113c:	ldr	pc, [ip, #3844]!	; 0xf04

00011140 <myhtml_tree_token_list_destroy@plt>:
   11140:	add	ip, pc, #1048576	; 0x100000
   11144:	add	ip, ip, #20480	; 0x5000
   11148:	ldr	pc, [ip, #3836]!	; 0xefc

0001114c <mcobject_async_init@plt>:
   1114c:	add	ip, pc, #1048576	; 0x100000
   11150:	add	ip, ip, #20480	; 0x5000
   11154:	ldr	pc, [ip, #3828]!	; 0xef4

00011158 <myhtml_tree_temp_tag_name_append@plt>:
   11158:	add	ip, pc, #1048576	; 0x100000
   1115c:	add	ip, ip, #20480	; 0x5000
   11160:	ldr	pc, [ip, #3820]!	; 0xeec

00011164 <myhtml_tokenizer_fragment_init@plt>:
   11164:	add	ip, pc, #1048576	; 0x100000
   11168:	add	ip, ip, #20480	; 0x5000
   1116c:	ldr	pc, [ip, #3812]!	; 0xee4

00011170 <mythread_nanosleep_create@plt>:
   11170:	add	ip, pc, #1048576	; 0x100000
   11174:	add	ip, ip, #20480	; 0x5000
   11178:	ldr	pc, [ip, #3804]!	; 0xedc

0001117c <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
   1117c:	add	ip, pc, #1048576	; 0x100000
   11180:	add	ip, ip, #20480	; 0x5000
   11184:	ldr	pc, [ip, #3796]!	; 0xed4

00011188 <myhtml_tokenizer_state_init@plt>:
   11188:	add	ip, pc, #1048576	; 0x100000
   1118c:	add	ip, ip, #20480	; 0x5000
   11190:	ldr	pc, [ip, #3788]!	; 0xecc

00011194 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
   11194:	add	ip, pc, #1048576	; 0x100000
   11198:	add	ip, ip, #20480	; 0x5000
   1119c:	ldr	pc, [ip, #3780]!	; 0xec4

000111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
   111a0:	add	ip, pc, #1048576	; 0x100000
   111a4:	add	ip, ip, #20480	; 0x5000
   111a8:	ldr	pc, [ip, #3772]!	; 0xebc

000111ac <myhtml_tree_wait_for_last_done_token@plt>:
   111ac:	add	ip, pc, #1048576	; 0x100000
   111b0:	add	ip, ip, #20480	; 0x5000
   111b4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111b8 <mythread_queue_get_prev_node@plt>:
   111b8:	add	ip, pc, #1048576	; 0x100000
   111bc:	add	ip, ip, #20480	; 0x5000
   111c0:	ldr	pc, [ip, #3756]!	; 0xeac

000111c4 <setbuf@plt>:
   111c4:	add	ip, pc, #1048576	; 0x100000
   111c8:	add	ip, ip, #20480	; 0x5000
   111cc:	ldr	pc, [ip, #3748]!	; 0xea4

000111d0 <mycore_utils_avl_tree_find_min@plt>:
   111d0:	add	ip, pc, #1048576	; 0x100000
   111d4:	add	ip, ip, #20480	; 0x5000
   111d8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111dc <myhtml_insertion_mode_in_body_other_end_tag@plt>:
   111dc:	add	ip, pc, #1048576	; 0x100000
   111e0:	add	ip, ip, #20480	; 0x5000
   111e4:	ldr	pc, [ip, #3732]!	; 0xe94

000111e8 <myhtml_stream_buffer_destroy@plt>:
   111e8:	add	ip, pc, #1048576	; 0x100000
   111ec:	add	ip, ip, #20480	; 0x5000
   111f0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111f4 <myhtml_token_attr_match_case@plt>:
   111f4:	add	ip, pc, #1048576	; 0x100000
   111f8:	add	ip, ip, #20480	; 0x5000
   111fc:	ldr	pc, [ip, #3716]!	; 0xe84

00011200 <__cxa_finalize@plt>:
   11200:	add	ip, pc, #1048576	; 0x100000
   11204:	add	ip, ip, #20480	; 0x5000
   11208:	ldr	pc, [ip, #3708]!	; 0xe7c

0001120c <mycore_utils_avl_tree_node_rotate_right@plt>:
   1120c:	add	ip, pc, #1048576	; 0x100000
   11210:	add	ip, ip, #20480	; 0x5000
   11214:	ldr	pc, [ip, #3700]!	; 0xe74

00011218 <mcobject_async_create@plt>:
   11218:	add	ip, pc, #1048576	; 0x100000
   1121c:	add	ip, ip, #20480	; 0x5000
   11220:	ldr	pc, [ip, #3692]!	; 0xe6c

00011224 <mythread_queue_clean@plt>:
   11224:	add	ip, pc, #1048576	; 0x100000
   11228:	add	ip, ip, #20480	; 0x5000
   1122c:	ldr	pc, [ip, #3684]!	; 0xe64

00011230 <mcsync_mutex_destroy@plt>:
   11230:	add	ip, pc, #1048576	; 0x100000
   11234:	add	ip, ip, #20480	; 0x5000
   11238:	ldr	pc, [ip, #3676]!	; 0xe5c

0001123c <myhtml_parser_worker@plt>:
   1123c:	add	ip, pc, #1048576	; 0x100000
   11240:	add	ip, ip, #20480	; 0x5000
   11244:	ldr	pc, [ip, #3668]!	; 0xe54

00011248 <mythread_thread_create@plt>:
   11248:	add	ip, pc, #1048576	; 0x100000
   1124c:	add	ip, ip, #20480	; 0x5000
   11250:	ldr	pc, [ip, #3660]!	; 0xe4c

00011254 <mcsync_create@plt>:
   11254:	add	ip, pc, #1048576	; 0x100000
   11258:	add	ip, ip, #20480	; 0x5000
   1125c:	ldr	pc, [ip, #3652]!	; 0xe44

00011260 <mycore_utils_avl_tree_node_balance_factor@plt>:
   11260:	add	ip, pc, #1048576	; 0x100000
   11264:	add	ip, ip, #20480	; 0x5000
   11268:	ldr	pc, [ip, #3644]!	; 0xe3c

0001126c <fopen@plt>:
   1126c:	add	ip, pc, #1048576	; 0x100000
   11270:	add	ip, ip, #20480	; 0x5000
   11274:	ldr	pc, [ip, #3636]!	; 0xe34

00011278 <mcobject_async_mem_malloc@plt>:
   11278:	add	ip, pc, #1048576	; 0x100000
   1127c:	add	ip, ip, #20480	; 0x5000
   11280:	ldr	pc, [ip, #3628]!	; 0xe2c

00011284 <mcobject_destroy@plt>:
   11284:	add	ip, pc, #1048576	; 0x100000
   11288:	add	ip, ip, #20480	; 0x5000
   1128c:	ldr	pc, [ip, #3620]!	; 0xe24

00011290 <pthread_attr_destroy@plt>:
   11290:	add	ip, pc, #1048576	; 0x100000
   11294:	add	ip, ip, #20480	; 0x5000
   11298:	ldr	pc, [ip, #3612]!	; 0xe1c

0001129c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
   1129c:	add	ip, pc, #1048576	; 0x100000
   112a0:	add	ip, ip, #20480	; 0x5000
   112a4:	ldr	pc, [ip, #3604]!	; 0xe14

000112a8 <pthread_mutex_destroy@plt>:
   112a8:	add	ip, pc, #1048576	; 0x100000
   112ac:	add	ip, ip, #20480	; 0x5000
   112b0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112b4 <fflush@plt>:
   112b4:	add	ip, pc, #1048576	; 0x100000
   112b8:	add	ip, ip, #20480	; 0x5000
   112bc:	ldr	pc, [ip, #3588]!	; 0xe04

000112c0 <mythread_create@plt>:
   112c0:	add	ip, pc, #1048576	; 0x100000
   112c4:	add	ip, ip, #20480	; 0x5000
   112c8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112cc <myhtml_insertion_mode_in_foreign_content@plt>:
   112cc:	add	ip, pc, #1048576	; 0x100000
   112d0:	add	ip, ip, #20480	; 0x5000
   112d4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112d8 <myhtml_tree_generate_all_implied_end_tags@plt>:
   112d8:	add	ip, pc, #1048576	; 0x100000
   112dc:	add	ip, ip, #20480	; 0x5000
   112e0:	ldr	pc, [ip, #3564]!	; 0xdec

000112e4 <myencoding_string_append_lowercase_ascii@plt>:
   112e4:	add	ip, pc, #1048576	; 0x100000
   112e8:	add	ip, ip, #20480	; 0x5000
   112ec:	ldr	pc, [ip, #3556]!	; 0xde4

000112f0 <myhread_increase_id_by_entry_id@plt>:
   112f0:	add	ip, pc, #1048576	; 0x100000
   112f4:	add	ip, ip, #20480	; 0x5000
   112f8:	ldr	pc, [ip, #3548]!	; 0xddc

000112fc <myhtml_tree_incomming_buffer_make_data@plt>:
   112fc:	add	ip, pc, #1048576	; 0x100000
   11300:	add	ip, ip, #20480	; 0x5000
   11304:	ldr	pc, [ip, #3540]!	; 0xdd4

00011308 <_myhtml_token_create_copy_srt@plt>:
   11308:	add	ip, pc, #1048576	; 0x100000
   1130c:	add	ip, ip, #20480	; 0x5000
   11310:	ldr	pc, [ip, #3532]!	; 0xdcc

00011314 <memmove@plt>:
   11314:	add	ip, pc, #1048576	; 0x100000
   11318:	add	ip, ip, #20480	; 0x5000
   1131c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011320 <mythread_thread_attr_init@plt>:
   11320:	add	ip, pc, #1048576	; 0x100000
   11324:	add	ip, ip, #20480	; 0x5000
   11328:	ldr	pc, [ip, #3516]!	; 0xdbc

0001132c <myhtml_rules_tree_dispatcher@plt>:
   1132c:	add	ip, pc, #1048576	; 0x100000
   11330:	add	ip, ip, #20480	; 0x5000
   11334:	ldr	pc, [ip, #3508]!	; 0xdb4

00011338 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
   11338:	add	ip, pc, #1048576	; 0x100000
   1133c:	add	ip, ip, #20480	; 0x5000
   11340:	ldr	pc, [ip, #3500]!	; 0xdac

00011344 <free@plt>:
   11344:	add	ip, pc, #1048576	; 0x100000
   11348:	add	ip, ip, #20480	; 0x5000
   1134c:	ldr	pc, [ip, #3492]!	; 0xda4

00011350 <mchar_async_cache_malloc@plt>:
   11350:	add	ip, pc, #1048576	; 0x100000
   11354:	add	ip, ip, #20480	; 0x5000
   11358:	ldr	pc, [ip, #3484]!	; 0xd9c

0001135c <mythread_function_see_opt@plt>:
   1135c:	add	ip, pc, #1048576	; 0x100000
   11360:	add	ip, ip, #20480	; 0x5000
   11364:	ldr	pc, [ip, #3476]!	; 0xd94

00011368 <myencoding_detect_utf_16@plt>:
   11368:	add	ip, pc, #1048576	; 0x100000
   1136c:	add	ip, ip, #20480	; 0x5000
   11370:	ldr	pc, [ip, #3468]!	; 0xd8c

00011374 <mcobject_chunk_malloc@plt>:
   11374:	add	ip, pc, #1048576	; 0x100000
   11378:	add	ip, ip, #20480	; 0x5000
   1137c:	ldr	pc, [ip, #3460]!	; 0xd84

00011380 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
   11380:	add	ip, pc, #1048576	; 0x100000
   11384:	add	ip, ip, #20480	; 0x5000
   11388:	ldr	pc, [ip, #3452]!	; 0xd7c

0001138c <mcsync_mutex_unlock@plt>:
   1138c:	add	ip, pc, #1048576	; 0x100000
   11390:	add	ip, ip, #20480	; 0x5000
   11394:	ldr	pc, [ip, #3444]!	; 0xd74

00011398 <pthread_mutex_lock@plt>:
   11398:	add	ip, pc, #1048576	; 0x100000
   1139c:	add	ip, ip, #20480	; 0x5000
   113a0:	ldr	pc, [ip, #3436]!	; 0xd6c

000113a4 <mycore_calloc@plt>:
   113a4:	add	ip, pc, #1048576	; 0x100000
   113a8:	add	ip, ip, #20480	; 0x5000
   113ac:	ldr	pc, [ip, #3428]!	; 0xd64

000113b0 <nanosleep@plt>:
   113b0:	add	ip, pc, #1048576	; 0x100000
   113b4:	add	ip, ip, #20480	; 0x5000
   113b8:	ldr	pc, [ip, #3420]!	; 0xd5c

000113bc <myhtml_token_node_clone@plt>:
   113bc:	add	ip, pc, #1048576	; 0x100000
   113c0:	add	ip, ip, #20480	; 0x5000
   113c4:	ldr	pc, [ip, #3412]!	; 0xd54

000113c8 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
   113c8:	add	ip, pc, #1048576	; 0x100000
   113cc:	add	ip, ip, #20480	; 0x5000
   113d0:	ldr	pc, [ip, #3404]!	; 0xd4c

000113d4 <mchar_sync_chunk_insert_after@plt>:
   113d4:	add	ip, pc, #1048576	; 0x100000
   113d8:	add	ip, ip, #20480	; 0x5000
   113dc:	ldr	pc, [ip, #3396]!	; 0xd44

000113e0 <ferror@plt>:
   113e0:	add	ip, pc, #1048576	; 0x100000
   113e4:	add	ip, ip, #20480	; 0x5000
   113e8:	ldr	pc, [ip, #3388]!	; 0xd3c

000113ec <memcpy@plt>:
   113ec:	add	ip, pc, #1048576	; 0x100000
   113f0:	add	ip, ip, #20480	; 0x5000
   113f4:	ldr	pc, [ip, #3380]!	; 0xd34

000113f8 <myencoding_name_entry_by_name@plt>:
   113f8:	add	ip, pc, #1048576	; 0x100000
   113fc:	add	ip, ip, #20480	; 0x5000
   11400:	ldr	pc, [ip, #3372]!	; 0xd2c

00011404 <myhtml_token_adjust_mathml_attributes@plt>:
   11404:	add	ip, pc, #1048576	; 0x100000
   11408:	add	ip, ip, #20480	; 0x5000
   1140c:	ldr	pc, [ip, #3364]!	; 0xd24

00011410 <mcobject_free@plt>:
   11410:	add	ip, pc, #1048576	; 0x100000
   11414:	add	ip, ip, #20480	; 0x5000
   11418:	ldr	pc, [ip, #3356]!	; 0xd1c

0001141c <myhtml_tree_node_insert_text@plt>:
   1141c:	add	ip, pc, #1048576	; 0x100000
   11420:	add	ip, ip, #20480	; 0x5000
   11424:	ldr	pc, [ip, #3348]!	; 0xd14

00011428 <myhtml_tag_set_category@plt>:
   11428:	add	ip, pc, #1048576	; 0x100000
   1142c:	add	ip, ip, #20480	; 0x5000
   11430:	ldr	pc, [ip, #3340]!	; 0xd0c

00011434 <mcsync_spin_destroy@plt>:
   11434:	add	ip, pc, #1048576	; 0x100000
   11438:	add	ip, ip, #20480	; 0x5000
   1143c:	ldr	pc, [ip, #3332]!	; 0xd04

00011440 <myhtml_tree_template_insertion_append@plt>:
   11440:	add	ip, pc, #1048576	; 0x100000
   11444:	add	ip, ip, #20480	; 0x5000
   11448:	ldr	pc, [ip, #3324]!	; 0xcfc

0001144c <mchar_async_realloc@plt>:
   1144c:	add	ip, pc, #1048576	; 0x100000
   11450:	add	ip, ip, #20480	; 0x5000
   11454:	ldr	pc, [ip, #3316]!	; 0xcf4

00011458 <pthread_mutex_init@plt>:
   11458:	add	ip, pc, #1048576	; 0x100000
   1145c:	add	ip, ip, #20480	; 0x5000
   11460:	ldr	pc, [ip, #3308]!	; 0xcec

00011464 <myhtml_tokenizer_state_bogus_comment@plt>:
   11464:	add	ip, pc, #1048576	; 0x100000
   11468:	add	ip, ip, #20480	; 0x5000
   1146c:	ldr	pc, [ip, #3300]!	; 0xce4

00011470 <myhtml_tree_node_create@plt>:
   11470:	add	ip, pc, #1048576	; 0x100000
   11474:	add	ip, ip, #20480	; 0x5000
   11478:	ldr	pc, [ip, #3292]!	; 0xcdc

0001147c <myhtml_tree_node_delete_recursive@plt>:
   1147c:	add	ip, pc, #1048576	; 0x100000
   11480:	add	ip, ip, #20480	; 0x5000
   11484:	ldr	pc, [ip, #3284]!	; 0xcd4

00011488 <myhtml_tag_static_get_by_id@plt>:
   11488:	add	ip, pc, #1048576	; 0x100000
   1148c:	add	ip, ip, #20480	; 0x5000
   11490:	ldr	pc, [ip, #3276]!	; 0xccc

00011494 <myhtml_token_attr_clean@plt>:
   11494:	add	ip, pc, #1048576	; 0x100000
   11498:	add	ip, ip, #20480	; 0x5000
   1149c:	ldr	pc, [ip, #3268]!	; 0xcc4

000114a0 <myhtml_tag_add@plt>:
   114a0:	add	ip, pc, #1048576	; 0x100000
   114a4:	add	ip, ip, #20480	; 0x5000
   114a8:	ldr	pc, [ip, #3260]!	; 0xcbc

000114ac <mcobject_create@plt>:
   114ac:	add	ip, pc, #1048576	; 0x100000
   114b0:	add	ip, ip, #20480	; 0x5000
   114b4:	ldr	pc, [ip, #3252]!	; 0xcb4

000114b8 <myhtml_queue_add@plt>:
   114b8:	add	ip, pc, #1048576	; 0x100000
   114bc:	add	ip, ip, #20480	; 0x5000
   114c0:	ldr	pc, [ip, #3244]!	; 0xcac

000114c4 <pthread_mutex_trylock@plt>:
   114c4:	add	ip, pc, #1048576	; 0x100000
   114c8:	add	ip, ip, #20480	; 0x5000
   114cc:	ldr	pc, [ip, #3236]!	; 0xca4

000114d0 <myhtml_tree_is_mathml_integration_point@plt>:
   114d0:	add	ip, pc, #1048576	; 0x100000
   114d4:	add	ip, ip, #20480	; 0x5000
   114d8:	ldr	pc, [ip, #3228]!	; 0xc9c

000114dc <mcobject_async_free@plt>:
   114dc:	add	ip, pc, #1048576	; 0x100000
   114e0:	add	ip, ip, #20480	; 0x5000
   114e4:	ldr	pc, [ip, #3220]!	; 0xc94

000114e8 <myhtml_insertion_mode_in_head@plt>:
   114e8:	add	ip, pc, #1048576	; 0x100000
   114ec:	add	ip, ip, #20480	; 0x5000
   114f0:	ldr	pc, [ip, #3212]!	; 0xc8c

000114f4 <ftell@plt>:
   114f4:	add	ip, pc, #1048576	; 0x100000
   114f8:	add	ip, ip, #20480	; 0x5000
   114fc:	ldr	pc, [ip, #3204]!	; 0xc84

00011500 <mycore_utils_mhash_hash@plt>:
   11500:	add	ip, pc, #1048576	; 0x100000
   11504:	add	ip, ip, #20480	; 0x5000
   11508:	ldr	pc, [ip, #3196]!	; 0xc7c

0001150c <mycore_incoming_buffer_add@plt>:
   1150c:	add	ip, pc, #1048576	; 0x100000
   11510:	add	ip, ip, #20480	; 0x5000
   11514:	ldr	pc, [ip, #3188]!	; 0xc74

00011518 <mythread_nanosleep_sleep@plt>:
   11518:	add	ip, pc, #1048576	; 0x100000
   1151c:	add	ip, ip, #20480	; 0x5000
   11520:	ldr	pc, [ip, #3180]!	; 0xc6c

00011524 <mctree_insert_before@plt>:
   11524:	add	ip, pc, #1048576	; 0x100000
   11528:	add	ip, ip, #20480	; 0x5000
   1152c:	ldr	pc, [ip, #3172]!	; 0xc64

00011530 <mctree_destroy@plt>:
   11530:	add	ip, pc, #1048576	; 0x100000
   11534:	add	ip, ip, #20480	; 0x5000
   11538:	ldr	pc, [ip, #3164]!	; 0xc5c

0001153c <myhtml_tokenizer_chunk@plt>:
   1153c:	add	ip, pc, #1048576	; 0x100000
   11540:	add	ip, ip, #20480	; 0x5000
   11544:	ldr	pc, [ip, #3156]!	; 0xc54

00011548 <myhtml_tree_active_formatting_append@plt>:
   11548:	add	ip, pc, #1048576	; 0x100000
   1154c:	add	ip, ip, #20480	; 0x5000
   11550:	ldr	pc, [ip, #3148]!	; 0xc4c

00011554 <myhtml_tree_active_formatting_destroy@plt>:
   11554:	add	ip, pc, #1048576	; 0x100000
   11558:	add	ip, ip, #20480	; 0x5000
   1155c:	ldr	pc, [ip, #3140]!	; 0xc44

00011560 <mythread_suspend@plt>:
   11560:	add	ip, pc, #1048576	; 0x100000
   11564:	add	ip, ip, #20480	; 0x5000
   11568:	ldr	pc, [ip, #3132]!	; 0xc3c

0001156c <myhtml_tokenizer_state_destroy@plt>:
   1156c:	add	ip, pc, #1048576	; 0x100000
   11570:	add	ip, ip, #20480	; 0x5000
   11574:	ldr	pc, [ip, #3124]!	; 0xc34

00011578 <mycore_incoming_buffer_find_by_position@plt>:
   11578:	add	ip, pc, #1048576	; 0x100000
   1157c:	add	ip, ip, #20480	; 0x5000
   11580:	ldr	pc, [ip, #3116]!	; 0xc2c

00011584 <mcobject_async_chunk_malloc@plt>:
   11584:	add	ip, pc, #1048576	; 0x100000
   11588:	add	ip, ip, #20480	; 0x5000
   1158c:	ldr	pc, [ip, #3108]!	; 0xc24

00011590 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   11590:	add	ip, pc, #1048576	; 0x100000
   11594:	add	ip, ip, #20480	; 0x5000
   11598:	ldr	pc, [ip, #3100]!	; 0xc1c

0001159c <myhtml_tree_active_formatting_find@plt>:
   1159c:	add	ip, pc, #1048576	; 0x100000
   115a0:	add	ip, ip, #20480	; 0x5000
   115a4:	ldr	pc, [ip, #3092]!	; 0xc14

000115a8 <mythread_queue_list_destroy@plt>:
   115a8:	add	ip, pc, #1048576	; 0x100000
   115ac:	add	ip, ip, #20480	; 0x5000
   115b0:	ldr	pc, [ip, #3084]!	; 0xc0c

000115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>:
   115b4:	add	ip, pc, #1048576	; 0x100000
   115b8:	add	ip, ip, #20480	; 0x5000
   115bc:	ldr	pc, [ip, #3076]!	; 0xc04

000115c0 <myhtml_stream_buffer_entry_destroy@plt>:
   115c0:	add	ip, pc, #1048576	; 0x100000
   115c4:	add	ip, ip, #20480	; 0x5000
   115c8:	ldr	pc, [ip, #3068]!	; 0xbfc

000115cc <myhtml_tokenizer_begin@plt>:
   115cc:	add	ip, pc, #1048576	; 0x100000
   115d0:	add	ip, ip, #20480	; 0x5000
   115d4:	ldr	pc, [ip, #3060]!	; 0xbf4

000115d8 <mchar_async_create@plt>:
   115d8:	add	ip, pc, #1048576	; 0x100000
   115dc:	add	ip, ip, #20480	; 0x5000
   115e0:	ldr	pc, [ip, #3052]!	; 0xbec

000115e4 <mycore_string_copy@plt>:
   115e4:	add	ip, pc, #1048576	; 0x100000
   115e8:	add	ip, ip, #20480	; 0x5000
   115ec:	ldr	pc, [ip, #3044]!	; 0xbe4

000115f0 <mythread_queue_list_entry_push@plt>:
   115f0:	add	ip, pc, #1048576	; 0x100000
   115f4:	add	ip, ip, #20480	; 0x5000
   115f8:	ldr	pc, [ip, #3036]!	; 0xbdc

000115fc <mythread_queue_get_current_node@plt>:
   115fc:	add	ip, pc, #1048576	; 0x100000
   11600:	add	ip, ip, #20480	; 0x5000
   11604:	ldr	pc, [ip, #3028]!	; 0xbd4

00011608 <mcobject_async_chunk_up@plt>:
   11608:	add	ip, pc, #1048576	; 0x100000
   1160c:	add	ip, ip, #20480	; 0x5000
   11610:	ldr	pc, [ip, #3020]!	; 0xbcc

00011614 <myhtml_tree_open_elements_pop@plt>:
   11614:	add	ip, pc, #1048576	; 0x100000
   11618:	add	ip, ip, #20480	; 0x5000
   1161c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011620 <mcsync_destroy@plt>:
   11620:	add	ip, pc, #1048576	; 0x100000
   11624:	add	ip, ip, #20480	; 0x5000
   11628:	ldr	pc, [ip, #3004]!	; 0xbbc

0001162c <myencoding_result_clean@plt>:
   1162c:	add	ip, pc, #1048576	; 0x100000
   11630:	add	ip, ip, #20480	; 0x5000
   11634:	ldr	pc, [ip, #2996]!	; 0xbb4

00011638 <myhtml_string_append_with_preprocessing@plt>:
   11638:	add	ip, pc, #1048576	; 0x100000
   1163c:	add	ip, ip, #20480	; 0x5000
   11640:	ldr	pc, [ip, #2988]!	; 0xbac

00011644 <myhtml_token_adjust_svg_attributes@plt>:
   11644:	add	ip, pc, #1048576	; 0x100000
   11648:	add	ip, ip, #20480	; 0x5000
   1164c:	ldr	pc, [ip, #2980]!	; 0xba4

00011650 <realloc@plt>:
   11650:	add	ip, pc, #1048576	; 0x100000
   11654:	add	ip, ip, #20480	; 0x5000
   11658:	ldr	pc, [ip, #2972]!	; 0xb9c

0001165c <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   1165c:	add	ip, pc, #1048576	; 0x100000
   11660:	add	ip, ip, #20480	; 0x5000
   11664:	ldr	pc, [ip, #2964]!	; 0xb94

00011668 <myhtml_tree_is_html_integration_point@plt>:
   11668:	add	ip, pc, #1048576	; 0x100000
   1166c:	add	ip, ip, #20480	; 0x5000
   11670:	ldr	pc, [ip, #2956]!	; 0xb8c

00011674 <myhtml_namespace_name_entry_by_name@plt>:
   11674:	add	ip, pc, #1048576	; 0x100000
   11678:	add	ip, ip, #20480	; 0x5000
   1167c:	ldr	pc, [ip, #2948]!	; 0xb84

00011680 <myencoding_detect_bom@plt>:
   11680:	add	ip, pc, #1048576	; 0x100000
   11684:	add	ip, ip, #20480	; 0x5000
   11688:	ldr	pc, [ip, #2940]!	; 0xb7c

0001168c <myhtml_tokenizer_calc_current_namespace@plt>:
   1168c:	add	ip, pc, #1048576	; 0x100000
   11690:	add	ip, ip, #20480	; 0x5000
   11694:	ldr	pc, [ip, #2932]!	; 0xb74

00011698 <myhtml_tree_open_elements_remove@plt>:
   11698:	add	ip, pc, #1048576	; 0x100000
   1169c:	add	ip, ip, #20480	; 0x5000
   116a0:	ldr	pc, [ip, #2924]!	; 0xb6c

000116a4 <mctree_insert_child@plt>:
   116a4:	add	ip, pc, #1048576	; 0x100000
   116a8:	add	ip, ip, #20480	; 0x5000
   116ac:	ldr	pc, [ip, #2916]!	; 0xb64

000116b0 <mcsimple_clean@plt>:
   116b0:	add	ip, pc, #1048576	; 0x100000
   116b4:	add	ip, ip, #20480	; 0x5000
   116b8:	ldr	pc, [ip, #2908]!	; 0xb5c

000116bc <myhtml_tree_node_insert_comment@plt>:
   116bc:	add	ip, pc, #1048576	; 0x100000
   116c0:	add	ip, ip, #20480	; 0x5000
   116c4:	ldr	pc, [ip, #2900]!	; 0xb54

000116c8 <myhtml_tokenizer_end@plt>:
   116c8:	add	ip, pc, #1048576	; 0x100000
   116cc:	add	ip, ip, #20480	; 0x5000
   116d0:	ldr	pc, [ip, #2892]!	; 0xb4c

000116d4 <mycore_utils_avl_tree_list_all_nodes@plt>:
   116d4:	add	ip, pc, #1048576	; 0x100000
   116d8:	add	ip, ip, #20480	; 0x5000
   116dc:	ldr	pc, [ip, #2884]!	; 0xb44

000116e0 <myhtml_tree_temp_tag_name_clean@plt>:
   116e0:	add	ip, pc, #1048576	; 0x100000
   116e4:	add	ip, ip, #20480	; 0x5000
   116e8:	ldr	pc, [ip, #2876]!	; 0xb3c

000116ec <myhtml_tree_list_clean@plt>:
   116ec:	add	ip, pc, #1048576	; 0x100000
   116f0:	add	ip, ip, #20480	; 0x5000
   116f4:	ldr	pc, [ip, #2868]!	; 0xb34

000116f8 <mchar_async_node_add@plt>:
   116f8:	add	ip, pc, #1048576	; 0x100000
   116fc:	add	ip, ip, #20480	; 0x5000
   11700:	ldr	pc, [ip, #2860]!	; 0xb2c

00011704 <mycore_strncasecmp@plt>:
   11704:	add	ip, pc, #1048576	; 0x100000
   11708:	add	ip, ip, #20480	; 0x5000
   1170c:	ldr	pc, [ip, #2852]!	; 0xb24

00011710 <myhtml_tokenizer_post@plt>:
   11710:	add	ip, pc, #1048576	; 0x100000
   11714:	add	ip, ip, #20480	; 0x5000
   11718:	ldr	pc, [ip, #2844]!	; 0xb1c

0001171c <myhtml_tree_list_insert_by_index@plt>:
   1171c:	add	ip, pc, #1048576	; 0x100000
   11720:	add	ip, ip, #20480	; 0x5000
   11724:	ldr	pc, [ip, #2836]!	; 0xb14

00011728 <mcsimple_create@plt>:
   11728:	add	ip, pc, #1048576	; 0x100000
   1172c:	add	ip, ip, #20480	; 0x5000
   11730:	ldr	pc, [ip, #2828]!	; 0xb0c

00011734 <mythread_queue_destroy@plt>:
   11734:	add	ip, pc, #1048576	; 0x100000
   11738:	add	ip, ip, #20480	; 0x5000
   1173c:	ldr	pc, [ip, #2820]!	; 0xb04

00011740 <mycore_string_raw_copy@plt>:
   11740:	add	ip, pc, #1048576	; 0x100000
   11744:	add	ip, ip, #20480	; 0x5000
   11748:	ldr	pc, [ip, #2812]!	; 0xafc

0001174c <mycore_string_stay_only_whitespace@plt>:
   1174c:	add	ip, pc, #1048576	; 0x100000
   11750:	add	ip, ip, #20480	; 0x5000
   11754:	ldr	pc, [ip, #2804]!	; 0xaf4

00011758 <mctree_clean@plt>:
   11758:	add	ip, pc, #1048576	; 0x100000
   1175c:	add	ip, ip, #20480	; 0x5000
   11760:	ldr	pc, [ip, #2796]!	; 0xaec

00011764 <myhtml_collection_create@plt>:
   11764:	add	ip, pc, #1048576	; 0x100000
   11768:	add	ip, ip, #20480	; 0x5000
   1176c:	ldr	pc, [ip, #2788]!	; 0xae4

00011770 <myhtml_token_set_replacement_character_for_null_token@plt>:
   11770:	add	ip, pc, #1048576	; 0x100000
   11774:	add	ip, ip, #20480	; 0x5000
   11778:	ldr	pc, [ip, #2780]!	; 0xadc

0001177c <fwrite@plt>:
   1177c:	add	ip, pc, #1048576	; 0x100000
   11780:	add	ip, ip, #20480	; 0x5000
   11784:	ldr	pc, [ip, #2772]!	; 0xad4

00011788 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   11788:	add	ip, pc, #1048576	; 0x100000
   1178c:	add	ip, ip, #20480	; 0x5000
   11790:	ldr	pc, [ip, #2764]!	; 0xacc

00011794 <myhtml_tree_node_insert_by_mode@plt>:
   11794:	add	ip, pc, #1048576	; 0x100000
   11798:	add	ip, ip, #20480	; 0x5000
   1179c:	ldr	pc, [ip, #2756]!	; 0xac4

000117a0 <myhtml_tree_node_insert_after@plt>:
   117a0:	add	ip, pc, #1048576	; 0x100000
   117a4:	add	ip, ip, #20480	; 0x5000
   117a8:	ldr	pc, [ip, #2748]!	; 0xabc

000117ac <myhtml_data_process_state_end@plt>:
   117ac:	add	ip, pc, #1048576	; 0x100000
   117b0:	add	ip, ip, #20480	; 0x5000
   117b4:	ldr	pc, [ip, #2740]!	; 0xab4

000117b8 <myhtml_serialization_reallocate@plt>:
   117b8:	add	ip, pc, #1048576	; 0x100000
   117bc:	add	ip, ip, #20480	; 0x5000
   117c0:	ldr	pc, [ip, #2732]!	; 0xaac

000117c4 <mycore_string_append_with_replacement_null_characters@plt>:
   117c4:	add	ip, pc, #1048576	; 0x100000
   117c8:	add	ip, ip, #20480	; 0x5000
   117cc:	ldr	pc, [ip, #2724]!	; 0xaa4

000117d0 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   117d0:	add	ip, pc, #1048576	; 0x100000
   117d4:	add	ip, ip, #20480	; 0x5000
   117d8:	ldr	pc, [ip, #2716]!	; 0xa9c

000117dc <mcsimple_destroy@plt>:
   117dc:	add	ip, pc, #1048576	; 0x100000
   117e0:	add	ip, ip, #20480	; 0x5000
   117e4:	ldr	pc, [ip, #2708]!	; 0xa94

000117e8 <myhtml_token_doctype_check_html_4_01@plt>:
   117e8:	add	ip, pc, #1048576	; 0x100000
   117ec:	add	ip, ip, #20480	; 0x5000
   117f0:	ldr	pc, [ip, #2700]!	; 0xa8c

000117f4 <__mtree_insert_to_start@plt>:
   117f4:	add	ip, pc, #1048576	; 0x100000
   117f8:	add	ip, ip, #20480	; 0x5000
   117fc:	ldr	pc, [ip, #2692]!	; 0xa84

00011800 <fread@plt>:
   11800:	add	ip, pc, #1048576	; 0x100000
   11804:	add	ip, ip, #20480	; 0x5000
   11808:	ldr	pc, [ip, #2684]!	; 0xa7c

0001180c <pthread_create@plt>:
   1180c:	add	ip, pc, #1048576	; 0x100000
   11810:	add	ip, ip, #20480	; 0x5000
   11814:	ldr	pc, [ip, #2676]!	; 0xa74

00011818 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   11818:	add	ip, pc, #1048576	; 0x100000
   1181c:	add	ip, ip, #20480	; 0x5000
   11820:	ldr	pc, [ip, #2668]!	; 0xa6c

00011824 <myhtml_tree_node_insert_before@plt>:
   11824:	add	ip, pc, #1048576	; 0x100000
   11828:	add	ip, ip, #20480	; 0x5000
   1182c:	ldr	pc, [ip, #2660]!	; 0xa64

00011830 <myhtml_parser_token_data_to_string_charef@plt>:
   11830:	add	ip, pc, #1048576	; 0x100000
   11834:	add	ip, ip, #20480	; 0x5000
   11838:	ldr	pc, [ip, #2652]!	; 0xa5c

0001183c <mythread_thread_attr_clean@plt>:
   1183c:	add	ip, pc, #1048576	; 0x100000
   11840:	add	ip, ip, #20480	; 0x5000
   11844:	ldr	pc, [ip, #2644]!	; 0xa54

00011848 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   11848:	add	ip, pc, #1048576	; 0x100000
   1184c:	add	ip, ip, #20480	; 0x5000
   11850:	ldr	pc, [ip, #2636]!	; 0xa4c

00011854 <myhtml_tree_template_insertion_clean@plt>:
   11854:	add	ip, pc, #1048576	; 0x100000
   11858:	add	ip, ip, #20480	; 0x5000
   1185c:	ldr	pc, [ip, #2628]!	; 0xa44

00011860 <myhtml_tokenizer_chunk_process@plt>:
   11860:	add	ip, pc, #1048576	; 0x100000
   11864:	add	ip, ip, #20480	; 0x5000
   11868:	ldr	pc, [ip, #2620]!	; 0xa3c

0001186c <myhtml_stream_create@plt>:
   1186c:	add	ip, pc, #1048576	; 0x100000
   11870:	add	ip, ip, #20480	; 0x5000
   11874:	ldr	pc, [ip, #2612]!	; 0xa34

00011878 <myhtml_tree_tags_close_p@plt>:
   11878:	add	ip, pc, #1048576	; 0x100000
   1187c:	add	ip, ip, #20480	; 0x5000
   11880:	ldr	pc, [ip, #2604]!	; 0xa2c

00011884 <mcsimple_init@plt>:
   11884:	add	ip, pc, #1048576	; 0x100000
   11888:	add	ip, ip, #20480	; 0x5000
   1188c:	ldr	pc, [ip, #2596]!	; 0xa24

00011890 <myencoding_string_append@plt>:
   11890:	add	ip, pc, #1048576	; 0x100000
   11894:	add	ip, ip, #20480	; 0x5000
   11898:	ldr	pc, [ip, #2588]!	; 0xa1c

0001189c <myhtml_stream_buffer_clean@plt>:
   1189c:	add	ip, pc, #1048576	; 0x100000
   118a0:	add	ip, ip, #20480	; 0x5000
   118a4:	ldr	pc, [ip, #2580]!	; 0xa14

000118a8 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   118a8:	add	ip, pc, #1048576	; 0x100000
   118ac:	add	ip, ip, #20480	; 0x5000
   118b0:	ldr	pc, [ip, #2572]!	; 0xa0c

000118b4 <myhtml_token_merged_two_token_string@plt>:
   118b4:	add	ip, pc, #1048576	; 0x100000
   118b8:	add	ip, ip, #20480	; 0x5000
   118bc:	ldr	pc, [ip, #2564]!	; 0xa04

000118c0 <myhtml_attribute_value@plt>:
   118c0:	add	ip, pc, #1048576	; 0x100000
   118c4:	add	ip, ip, #20480	; 0x5000
   118c8:	ldr	pc, [ip, #2556]!	; 0x9fc

000118cc <myhtml_token_strict_doctype_by_token@plt>:
   118cc:	add	ip, pc, #1048576	; 0x100000
   118d0:	add	ip, ip, #20480	; 0x5000
   118d4:	ldr	pc, [ip, #2548]!	; 0x9f4

000118d8 <mchar_async_init@plt>:
   118d8:	add	ip, pc, #1048576	; 0x100000
   118dc:	add	ip, ip, #20480	; 0x5000
   118e0:	ldr	pc, [ip, #2540]!	; 0x9ec

000118e4 <mycore_string_crop_whitespace_from_begin@plt>:
   118e4:	add	ip, pc, #1048576	; 0x100000
   118e8:	add	ip, ip, #20480	; 0x5000
   118ec:	ldr	pc, [ip, #2532]!	; 0x9e4

000118f0 <mythread_resume@plt>:
   118f0:	add	ip, pc, #1048576	; 0x100000
   118f4:	add	ip, ip, #20480	; 0x5000
   118f8:	ldr	pc, [ip, #2524]!	; 0x9dc

000118fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   118fc:	add	ip, pc, #1048576	; 0x100000
   11900:	add	ip, ip, #20480	; 0x5000
   11904:	ldr	pc, [ip, #2516]!	; 0x9d4

00011908 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   11908:	add	ip, pc, #1048576	; 0x100000
   1190c:	add	ip, ip, #20480	; 0x5000
   11910:	ldr	pc, [ip, #2508]!	; 0x9cc

00011914 <myhtml_create_stream_and_batch@plt>:
   11914:	add	ip, pc, #1048576	; 0x100000
   11918:	add	ip, ip, #20480	; 0x5000
   1191c:	ldr	pc, [ip, #2500]!	; 0x9c4

00011920 <myhtml_data_process_entry_clean@plt>:
   11920:	add	ip, pc, #1048576	; 0x100000
   11924:	add	ip, ip, #20480	; 0x5000
   11928:	ldr	pc, [ip, #2492]!	; 0x9bc

0001192c <mcsync_spin_init@plt>:
   1192c:	add	ip, pc, #1048576	; 0x100000
   11930:	add	ip, ip, #20480	; 0x5000
   11934:	ldr	pc, [ip, #2484]!	; 0x9b4

00011938 <malloc@plt>:
   11938:	add	ip, pc, #1048576	; 0x100000
   1193c:	add	ip, ip, #20480	; 0x5000
   11940:	ldr	pc, [ip, #2476]!	; 0x9ac

00011944 <mythread_check_status@plt>:
   11944:	add	ip, pc, #1048576	; 0x100000
   11948:	add	ip, ip, #20480	; 0x5000
   1194c:	ldr	pc, [ip, #2468]!	; 0x9a4

00011950 <myhtml_token_doctype_check_html_4_0@plt>:
   11950:	add	ip, pc, #1048576	; 0x100000
   11954:	add	ip, ip, #20480	; 0x5000
   11958:	ldr	pc, [ip, #2460]!	; 0x99c

0001195c <mycore_strcasecmp@plt>:
   1195c:	add	ip, pc, #1048576	; 0x100000
   11960:	add	ip, ip, #20480	; 0x5000
   11964:	ldr	pc, [ip, #2452]!	; 0x994

00011968 <mythread_queue_node_malloc_round@plt>:
   11968:	add	ip, pc, #1048576	; 0x100000
   1196c:	add	ip, ip, #20480	; 0x5000
   11970:	ldr	pc, [ip, #2444]!	; 0x98c

00011974 <myhtml_tree_active_formatting_reconstruction@plt>:
   11974:	add	ip, pc, #1048576	; 0x100000
   11978:	add	ip, ip, #20480	; 0x5000
   1197c:	ldr	pc, [ip, #2436]!	; 0x984

00011980 <myhtml_token_set_done@plt>:
   11980:	add	ip, pc, #1048576	; 0x100000
   11984:	add	ip, ip, #20480	; 0x5000
   11988:	ldr	pc, [ip, #2428]!	; 0x97c

0001198c <mcsync_spin_create@plt>:
   1198c:	add	ip, pc, #1048576	; 0x100000
   11990:	add	ip, ip, #20480	; 0x5000
   11994:	ldr	pc, [ip, #2420]!	; 0x974

00011998 <mythread_thread_join@plt>:
   11998:	add	ip, pc, #1048576	; 0x100000
   1199c:	add	ip, ip, #20480	; 0x5000
   119a0:	ldr	pc, [ip, #2412]!	; 0x96c

000119a4 <myhtml_token_attr_remove@plt>:
   119a4:	add	ip, pc, #1048576	; 0x100000
   119a8:	add	ip, ip, #20480	; 0x5000
   119ac:	ldr	pc, [ip, #2404]!	; 0x964

000119b0 <myhtml_token_node_attr_copy@plt>:
   119b0:	add	ip, pc, #1048576	; 0x100000
   119b4:	add	ip, ip, #20480	; 0x5000
   119b8:	ldr	pc, [ip, #2396]!	; 0x95c

000119bc <mythread_quit@plt>:
   119bc:	add	ip, pc, #1048576	; 0x100000
   119c0:	add	ip, ip, #20480	; 0x5000
   119c4:	ldr	pc, [ip, #2388]!	; 0x954

000119c8 <myhtml_batch_create@plt>:
   119c8:	add	ip, pc, #1048576	; 0x100000
   119cc:	add	ip, ip, #20480	; 0x5000
   119d0:	ldr	pc, [ip, #2380]!	; 0x94c

000119d4 <mcsync_spin_lock@plt>:
   119d4:	add	ip, pc, #1048576	; 0x100000
   119d8:	add	ip, ip, #20480	; 0x5000
   119dc:	ldr	pc, [ip, #2372]!	; 0x944

000119e0 <myhtml_token_clean@plt>:
   119e0:	add	ip, pc, #1048576	; 0x100000
   119e4:	add	ip, ip, #20480	; 0x5000
   119e8:	ldr	pc, [ip, #2364]!	; 0x93c

000119ec <mythread_queue_list_get_count@plt>:
   119ec:	add	ip, pc, #1048576	; 0x100000
   119f0:	add	ip, ip, #20480	; 0x5000
   119f4:	ldr	pc, [ip, #2356]!	; 0x934

000119f8 <mythread_queue_list_see_for_done_by_thread@plt>:
   119f8:	add	ip, pc, #1048576	; 0x100000
   119fc:	add	ip, ip, #20480	; 0x5000
   11a00:	ldr	pc, [ip, #2348]!	; 0x92c

00011a04 <__gmon_start__@plt>:
   11a04:	add	ip, pc, #1048576	; 0x100000
   11a08:	add	ip, ip, #20480	; 0x5000
   11a0c:	ldr	pc, [ip, #2340]!	; 0x924

00011a10 <myhtml_tokenizer_pause@plt>:
   11a10:	add	ip, pc, #1048576	; 0x100000
   11a14:	add	ip, ip, #20480	; 0x5000
   11a18:	ldr	pc, [ip, #2332]!	; 0x91c

00011a1c <myhtml_tokenizer_set_first_settings@plt>:
   11a1c:	add	ip, pc, #1048576	; 0x100000
   11a20:	add	ip, ip, #20480	; 0x5000
   11a24:	ldr	pc, [ip, #2324]!	; 0x914

00011a28 <myhtml_tree_temp_tag_name_init@plt>:
   11a28:	add	ip, pc, #1048576	; 0x100000
   11a2c:	add	ip, ip, #20480	; 0x5000
   11a30:	ldr	pc, [ip, #2316]!	; 0x90c

00011a34 <mycore_string_init@plt>:
   11a34:	add	ip, pc, #1048576	; 0x100000
   11a38:	add	ip, ip, #20480	; 0x5000
   11a3c:	ldr	pc, [ip, #2308]!	; 0x904

00011a40 <myhtml_tree_node_find_parent_by_tag_id@plt>:
   11a40:	add	ip, pc, #1048576	; 0x100000
   11a44:	add	ip, ip, #20480	; 0x5000
   11a48:	ldr	pc, [ip, #2300]!	; 0x8fc

00011a4c <myhtml_tree_current_node@plt>:
   11a4c:	add	ip, pc, #1048576	; 0x100000
   11a50:	add	ip, ip, #20480	; 0x5000
   11a54:	ldr	pc, [ip, #2292]!	; 0x8f4

00011a58 <mythread_mutex_close@plt>:
   11a58:	add	ip, pc, #1048576	; 0x100000
   11a5c:	add	ip, ip, #20480	; 0x5000
   11a60:	ldr	pc, [ip, #2284]!	; 0x8ec

00011a64 <myhtml_insertion_mode_in_body@plt>:
   11a64:	add	ip, pc, #1048576	; 0x100000
   11a68:	add	ip, ip, #20480	; 0x5000
   11a6c:	ldr	pc, [ip, #2276]!	; 0x8e4

00011a70 <myhtml_tree_active_formatting_between_last_marker@plt>:
   11a70:	add	ip, pc, #1048576	; 0x100000
   11a74:	add	ip, ip, #20480	; 0x5000
   11a78:	ldr	pc, [ip, #2268]!	; 0x8dc

00011a7c <mctree_create@plt>:
   11a7c:	add	ip, pc, #1048576	; 0x100000
   11a80:	add	ip, ip, #20480	; 0x5000
   11a84:	ldr	pc, [ip, #2260]!	; 0x8d4

00011a88 <bcmp@plt>:
   11a88:	add	ip, pc, #1048576	; 0x100000
   11a8c:	add	ip, ip, #20480	; 0x5000
   11a90:	ldr	pc, [ip, #2252]!	; 0x8cc

00011a94 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   11a94:	add	ip, pc, #1048576	; 0x100000
   11a98:	add	ip, ip, #20480	; 0x5000
   11a9c:	ldr	pc, [ip, #2244]!	; 0x8c4

00011aa0 <strlen@plt>:
   11aa0:	add	ip, pc, #1048576	; 0x100000
   11aa4:	add	ip, ip, #20480	; 0x5000
   11aa8:	ldr	pc, [ip, #2236]!	; 0x8bc

00011aac <myhtml_token_node_wait_for_done@plt>:
   11aac:	add	ip, pc, #1048576	; 0x100000
   11ab0:	add	ip, ip, #20480	; 0x5000
   11ab4:	ldr	pc, [ip, #2228]!	; 0x8b4

00011ab8 <mycore_string_append_lowercase@plt>:
   11ab8:	add	ip, pc, #1048576	; 0x100000
   11abc:	add	ip, ip, #20480	; 0x5000
   11ac0:	ldr	pc, [ip, #2220]!	; 0x8ac

00011ac4 <myhtml_token_node_attr_copy_with_check@plt>:
   11ac4:	add	ip, pc, #1048576	; 0x100000
   11ac8:	add	ip, ip, #20480	; 0x5000
   11acc:	ldr	pc, [ip, #2212]!	; 0x8a4

00011ad0 <myhtml_encoding_set@plt>:
   11ad0:	add	ip, pc, #1048576	; 0x100000
   11ad4:	add	ip, ip, #20480	; 0x5000
   11ad8:	ldr	pc, [ip, #2204]!	; 0x89c

00011adc <mythread_queue_init@plt>:
   11adc:	add	ip, pc, #1048576	; 0x100000
   11ae0:	add	ip, ip, #20480	; 0x5000
   11ae4:	ldr	pc, [ip, #2196]!	; 0x894

00011ae8 <myhtml_tree_node_add_child@plt>:
   11ae8:	add	ip, pc, #1048576	; 0x100000
   11aec:	add	ip, ip, #20480	; 0x5000
   11af0:	ldr	pc, [ip, #2188]!	; 0x88c

00011af4 <mycore_utils_avl_tree_node_set_height@plt>:
   11af4:	add	ip, pc, #1048576	; 0x100000
   11af8:	add	ip, ip, #20480	; 0x5000
   11afc:	ldr	pc, [ip, #2180]!	; 0x884

00011b00 <myhtml_tree_clean@plt>:
   11b00:	add	ip, pc, #1048576	; 0x100000
   11b04:	add	ip, ip, #20480	; 0x5000
   11b08:	ldr	pc, [ip, #2172]!	; 0x87c

00011b0c <myhtml_tree_generate_implied_end_tags@plt>:
   11b0c:	add	ip, pc, #1048576	; 0x100000
   11b10:	add	ip, ip, #20480	; 0x5000
   11b14:	ldr	pc, [ip, #2164]!	; 0x874

00011b18 <mchar_async_node_clean@plt>:
   11b18:	add	ip, pc, #1048576	; 0x100000
   11b1c:	add	ip, ip, #20480	; 0x5000
   11b20:	ldr	pc, [ip, #2156]!	; 0x86c

00011b24 <myhtml_tree_list_destroy@plt>:
   11b24:	add	ip, pc, #1048576	; 0x100000
   11b28:	add	ip, ip, #20480	; 0x5000
   11b2c:	ldr	pc, [ip, #2148]!	; 0x864

00011b30 <myhtml_serialization_node_callback@plt>:
   11b30:	add	ip, pc, #1048576	; 0x100000
   11b34:	add	ip, ip, #20480	; 0x5000
   11b38:	ldr	pc, [ip, #2140]!	; 0x85c

00011b3c <myencoding_detect_by_trigram@plt>:
   11b3c:	add	ip, pc, #1048576	; 0x100000
   11b40:	add	ip, ip, #20480	; 0x5000
   11b44:	ldr	pc, [ip, #2132]!	; 0x854

00011b48 <mchar_async_free@plt>:
   11b48:	add	ip, pc, #1048576	; 0x100000
   11b4c:	add	ip, ip, #20480	; 0x5000
   11b50:	ldr	pc, [ip, #2124]!	; 0x84c

00011b54 <mchar_async_cache_clean@plt>:
   11b54:	add	ip, pc, #1048576	; 0x100000
   11b58:	add	ip, ip, #20480	; 0x5000
   11b5c:	ldr	pc, [ip, #2116]!	; 0x844

00011b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   11b60:	add	ip, pc, #1048576	; 0x100000
   11b64:	add	ip, ip, #20480	; 0x5000
   11b68:	ldr	pc, [ip, #2108]!	; 0x83c

00011b6c <mcsimple_malloc@plt>:
   11b6c:	add	ip, pc, #1048576	; 0x100000
   11b70:	add	ip, ip, #20480	; 0x5000
   11b74:	ldr	pc, [ip, #2100]!	; 0x834

00011b78 <mctree_search_lowercase@plt>:
   11b78:	add	ip, pc, #1048576	; 0x100000
   11b7c:	add	ip, ip, #20480	; 0x5000
   11b80:	ldr	pc, [ip, #2092]!	; 0x82c

00011b84 <myhtml_data_process@plt>:
   11b84:	add	ip, pc, #1048576	; 0x100000
   11b88:	add	ip, ip, #20480	; 0x5000
   11b8c:	ldr	pc, [ip, #2084]!	; 0x824

00011b90 <myhtml_token_attr_copy@plt>:
   11b90:	add	ip, pc, #1048576	; 0x100000
   11b94:	add	ip, ip, #20480	; 0x5000
   11b98:	ldr	pc, [ip, #2076]!	; 0x81c

00011b9c <myhtml_tree_node_insert_by_node@plt>:
   11b9c:	add	ip, pc, #1048576	; 0x100000
   11ba0:	add	ip, ip, #20480	; 0x5000
   11ba4:	ldr	pc, [ip, #2068]!	; 0x814

00011ba8 <mcobject_init@plt>:
   11ba8:	add	ip, pc, #1048576	; 0x100000
   11bac:	add	ip, ip, #20480	; 0x5000
   11bb0:	ldr	pc, [ip, #2060]!	; 0x80c

00011bb4 <myhtml_token_destroy@plt>:
   11bb4:	add	ip, pc, #1048576	; 0x100000
   11bb8:	add	ip, ip, #20480	; 0x5000
   11bbc:	ldr	pc, [ip, #2052]!	; 0x804

00011bc0 <myhtml_destroy_marker@plt>:
   11bc0:	add	ip, pc, #1048576	; 0x100000
   11bc4:	add	ip, ip, #20480	; 0x5000
   11bc8:	ldr	pc, [ip, #2044]!	; 0x7fc

00011bcc <pthread_attr_init@plt>:
   11bcc:	add	ip, pc, #1048576	; 0x100000
   11bd0:	add	ip, ip, #20480	; 0x5000
   11bd4:	ldr	pc, [ip, #2036]!	; 0x7f4

00011bd8 <myhtml_charef_find_by_pos@plt>:
   11bd8:	add	ip, pc, #1048576	; 0x100000
   11bdc:	add	ip, ip, #20480	; 0x5000
   11be0:	ldr	pc, [ip, #2028]!	; 0x7ec

00011be4 <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   11be4:	add	ip, pc, #1048576	; 0x100000
   11be8:	add	ip, ip, #20480	; 0x5000
   11bec:	ldr	pc, [ip, #2020]!	; 0x7e4

00011bf0 <mythread_queue_list_create@plt>:
   11bf0:	add	ip, pc, #1048576	; 0x100000
   11bf4:	add	ip, ip, #20480	; 0x5000
   11bf8:	ldr	pc, [ip, #2012]!	; 0x7dc

00011bfc <myhtml_token_attr_delete_all@plt>:
   11bfc:	add	ip, pc, #1048576	; 0x100000
   11c00:	add	ip, ip, #20480	; 0x5000
   11c04:	ldr	pc, [ip, #2004]!	; 0x7d4

00011c08 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   11c08:	add	ip, pc, #1048576	; 0x100000
   11c0c:	add	ip, ip, #20480	; 0x5000
   11c10:	ldr	pc, [ip, #1996]!	; 0x7cc

00011c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   11c14:	add	ip, pc, #1048576	; 0x100000
   11c18:	add	ip, ip, #20480	; 0x5000
   11c1c:	ldr	pc, [ip, #1988]!	; 0x7c4

00011c20 <myhtml_stream_buffer_entry_init@plt>:
   11c20:	add	ip, pc, #1048576	; 0x100000
   11c24:	add	ip, ip, #20480	; 0x5000
   11c28:	ldr	pc, [ip, #1980]!	; 0x7bc

00011c2c <myhtml_tree_active_formatting_append_with_check@plt>:
   11c2c:	add	ip, pc, #1048576	; 0x100000
   11c30:	add	ip, ip, #20480	; 0x5000
   11c34:	ldr	pc, [ip, #1972]!	; 0x7b4

00011c38 <myhtml_tree_active_formatting_clean@plt>:
   11c38:	add	ip, pc, #1048576	; 0x100000
   11c3c:	add	ip, ip, #20480	; 0x5000
   11c40:	ldr	pc, [ip, #1964]!	; 0x7ac

00011c44 <myencoding_get_function_by_id@plt>:
   11c44:	add	ip, pc, #1048576	; 0x100000
   11c48:	add	ip, ip, #20480	; 0x5000
   11c4c:	ldr	pc, [ip, #1956]!	; 0x7a4

00011c50 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   11c50:	add	ip, pc, #1048576	; 0x100000
   11c54:	add	ip, ip, #20480	; 0x5000
   11c58:	ldr	pc, [ip, #1948]!	; 0x79c

00011c5c <myhtml_tree_active_formatting_remove_by_index@plt>:
   11c5c:	add	ip, pc, #1048576	; 0x100000
   11c60:	add	ip, ip, #20480	; 0x5000
   11c64:	ldr	pc, [ip, #1940]!	; 0x794

00011c68 <mcsync_lock@plt>:
   11c68:	add	ip, pc, #1048576	; 0x100000
   11c6c:	add	ip, ip, #20480	; 0x5000
   11c70:	ldr	pc, [ip, #1932]!	; 0x78c

00011c74 <myhtml_tree_list_init@plt>:
   11c74:	add	ip, pc, #1048576	; 0x100000
   11c78:	add	ip, ip, #20480	; 0x5000
   11c7c:	ldr	pc, [ip, #1924]!	; 0x784

00011c80 <mcsync_init@plt>:
   11c80:	add	ip, pc, #1048576	; 0x100000
   11c84:	add	ip, ip, #20480	; 0x5000
   11c88:	ldr	pc, [ip, #1916]!	; 0x77c

00011c8c <myhtml_tree_active_formatting_is_marker@plt>:
   11c8c:	add	ip, pc, #1048576	; 0x100000
   11c90:	add	ip, ip, #20480	; 0x5000
   11c94:	ldr	pc, [ip, #1908]!	; 0x774

00011c98 <mcobject_async_node_clean@plt>:
   11c98:	add	ip, pc, #1048576	; 0x100000
   11c9c:	add	ip, ip, #20480	; 0x5000
   11ca0:	ldr	pc, [ip, #1900]!	; 0x76c

00011ca4 <mchar_async_cache_destroy@plt>:
   11ca4:	add	ip, pc, #1048576	; 0x100000
   11ca8:	add	ip, ip, #20480	; 0x5000
   11cac:	ldr	pc, [ip, #1892]!	; 0x764

00011cb0 <myhtml_tree_adoption_agency_algorithm@plt>:
   11cb0:	add	ip, pc, #1048576	; 0x100000
   11cb4:	add	ip, ip, #20480	; 0x5000
   11cb8:	ldr	pc, [ip, #1884]!	; 0x75c

00011cbc <myhtml_tree_active_formatting_remove@plt>:
   11cbc:	add	ip, pc, #1048576	; 0x100000
   11cc0:	add	ip, ip, #20480	; 0x5000
   11cc4:	ldr	pc, [ip, #1876]!	; 0x754

00011cc8 <memset@plt>:
   11cc8:	add	ip, pc, #1048576	; 0x100000
   11ccc:	add	ip, ip, #20480	; 0x5000
   11cd0:	ldr	pc, [ip, #1868]!	; 0x74c

00011cd4 <myhread_entry_create@plt>:
   11cd4:	add	ip, pc, #1048576	; 0x100000
   11cd8:	add	ip, ip, #20480	; 0x5000
   11cdc:	ldr	pc, [ip, #1860]!	; 0x744

00011ce0 <mcsync_mutex_create@plt>:
   11ce0:	add	ip, pc, #1048576	; 0x100000
   11ce4:	add	ip, ip, #20480	; 0x5000
   11ce8:	ldr	pc, [ip, #1852]!	; 0x73c

00011cec <mycore_string_append@plt>:
   11cec:	add	ip, pc, #1048576	; 0x100000
   11cf0:	add	ip, ip, #20480	; 0x5000
   11cf4:	ldr	pc, [ip, #1844]!	; 0x734

00011cf8 <mcobject_async_chunk_malloc_without_lock@plt>:
   11cf8:	add	ip, pc, #1048576	; 0x100000
   11cfc:	add	ip, ip, #20480	; 0x5000
   11d00:	ldr	pc, [ip, #1836]!	; 0x72c

00011d04 <strncpy@plt>:
   11d04:	add	ip, pc, #1048576	; 0x100000
   11d08:	add	ip, ip, #20480	; 0x5000
   11d0c:	ldr	pc, [ip, #1828]!	; 0x724

00011d10 <pthread_cancel@plt>:
   11d10:	add	ip, pc, #1048576	; 0x100000
   11d14:	add	ip, ip, #20480	; 0x5000
   11d18:	ldr	pc, [ip, #1820]!	; 0x71c

00011d1c <myhtml_token_attr_create@plt>:
   11d1c:	add	ip, pc, #1048576	; 0x100000
   11d20:	add	ip, ip, #20480	; 0x5000
   11d24:	ldr	pc, [ip, #1812]!	; 0x714

00011d28 <mchar_async_malloc@plt>:
   11d28:	add	ip, pc, #1048576	; 0x100000
   11d2c:	add	ip, ip, #20480	; 0x5000
   11d30:	ldr	pc, [ip, #1804]!	; 0x70c

00011d34 <myhtml_tag_static_search@plt>:
   11d34:	add	ip, pc, #1048576	; 0x100000
   11d38:	add	ip, ip, #20480	; 0x5000
   11d3c:	ldr	pc, [ip, #1796]!	; 0x704

00011d40 <myhtml_data_process_end@plt>:
   11d40:	add	ip, pc, #1048576	; 0x100000
   11d44:	add	ip, ip, #20480	; 0x5000
   11d48:	ldr	pc, [ip, #1788]!	; 0x6fc

00011d4c <myhtml_stream_buffer_add_entry@plt>:
   11d4c:	add	ip, pc, #1048576	; 0x100000
   11d50:	add	ip, ip, #20480	; 0x5000
   11d54:	ldr	pc, [ip, #1780]!	; 0x6f4

00011d58 <myhtml_tree_temp_tag_name_destroy@plt>:
   11d58:	add	ip, pc, #1048576	; 0x100000
   11d5c:	add	ip, ip, #20480	; 0x5000
   11d60:	ldr	pc, [ip, #1772]!	; 0x6ec

00011d64 <myhtml_tree_open_elements_pop_until@plt>:
   11d64:	add	ip, pc, #1048576	; 0x100000
   11d68:	add	ip, ip, #20480	; 0x5000
   11d6c:	ldr	pc, [ip, #1764]!	; 0x6e4

00011d70 <mctree_insert@plt>:
   11d70:	add	ip, pc, #1048576	; 0x100000
   11d74:	add	ip, ip, #20480	; 0x5000
   11d78:	ldr	pc, [ip, #1756]!	; 0x6dc

00011d7c <mycore_string_realloc@plt>:
   11d7c:	add	ip, pc, #1048576	; 0x100000
   11d80:	add	ip, ip, #20480	; 0x5000
   11d84:	ldr	pc, [ip, #1748]!	; 0x6d4

00011d88 <myhtml_tree_node_insert@plt>:
   11d88:	add	ip, pc, #1048576	; 0x100000
   11d8c:	add	ip, ip, #20480	; 0x5000
   11d90:	ldr	pc, [ip, #1740]!	; 0x6cc

00011d94 <mythread_queue_list_entry_wait_for_done@plt>:
   11d94:	add	ip, pc, #1048576	; 0x100000
   11d98:	add	ip, ip, #20480	; 0x5000
   11d9c:	ldr	pc, [ip, #1732]!	; 0x6c4

00011da0 <myhtml_tree_open_elements_append@plt>:
   11da0:	add	ip, pc, #1048576	; 0x100000
   11da4:	add	ip, ip, #20480	; 0x5000
   11da8:	ldr	pc, [ip, #1724]!	; 0x6bc

00011dac <mcsimple_init_list_entries@plt>:
   11dac:	add	ip, pc, #1048576	; 0x100000
   11db0:	add	ip, ip, #20480	; 0x5000
   11db4:	ldr	pc, [ip, #1716]!	; 0x6b4

00011db8 <mythread_queue_list_entry_clean@plt>:
   11db8:	add	ip, pc, #1048576	; 0x100000
   11dbc:	add	ip, ip, #20480	; 0x5000
   11dc0:	ldr	pc, [ip, #1708]!	; 0x6ac

00011dc4 <mythread_destroy@plt>:
   11dc4:	add	ip, pc, #1048576	; 0x100000
   11dc8:	add	ip, ip, #20480	; 0x5000
   11dcc:	ldr	pc, [ip, #1700]!	; 0x6a4

00011dd0 <myhtml_tree_token_list_init@plt>:
   11dd0:	add	ip, pc, #1048576	; 0x100000
   11dd4:	add	ip, ip, #20480	; 0x5000
   11dd8:	ldr	pc, [ip, #1692]!	; 0x69c

00011ddc <mchar_async_chunk_malloc@plt>:
   11ddc:	add	ip, pc, #1048576	; 0x100000
   11de0:	add	ip, ip, #20480	; 0x5000
   11de4:	ldr	pc, [ip, #1684]!	; 0x694

00011de8 <myhtml_tree_template_insertion_pop@plt>:
   11de8:	add	ip, pc, #1048576	; 0x100000
   11dec:	add	ip, ip, #20480	; 0x5000
   11df0:	ldr	pc, [ip, #1676]!	; 0x68c

00011df4 <mythread_thread_destroy@plt>:
   11df4:	add	ip, pc, #1048576	; 0x100000
   11df8:	add	ip, ip, #20480	; 0x5000
   11dfc:	ldr	pc, [ip, #1668]!	; 0x684

00011e00 <fclose@plt>:
   11e00:	add	ip, pc, #1048576	; 0x100000
   11e04:	add	ip, ip, #20480	; 0x5000
   11e08:	ldr	pc, [ip, #1660]!	; 0x67c

00011e0c <myhtml_token_node_create@plt>:
   11e0c:	add	ip, pc, #1048576	; 0x100000
   11e10:	add	ip, ip, #20480	; 0x5000
   11e14:	ldr	pc, [ip, #1652]!	; 0x674

00011e18 <mycore_utils_avl_tree_node_balance@plt>:
   11e18:	add	ip, pc, #1048576	; 0x100000
   11e1c:	add	ip, ip, #20480	; 0x5000
   11e20:	ldr	pc, [ip, #1644]!	; 0x66c

00011e24 <myhtml_tag_get_by_id@plt>:
   11e24:	add	ip, pc, #1048576	; 0x100000
   11e28:	add	ip, ip, #20480	; 0x5000
   11e2c:	ldr	pc, [ip, #1636]!	; 0x664

00011e30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   11e30:	add	ip, pc, #1048576	; 0x100000
   11e34:	add	ip, ip, #20480	; 0x5000
   11e38:	ldr	pc, [ip, #1628]!	; 0x65c

00011e3c <mycore_utils_mhash_rebuld@plt>:
   11e3c:	add	ip, pc, #1048576	; 0x100000
   11e40:	add	ip, ip, #20480	; 0x5000
   11e44:	ldr	pc, [ip, #1620]!	; 0x654

00011e48 <myhtml_charef_get_first_position@plt>:
   11e48:	add	ip, pc, #1048576	; 0x100000
   11e4c:	add	ip, ip, #20480	; 0x5000
   11e50:	ldr	pc, [ip, #1612]!	; 0x64c

00011e54 <mcobject_malloc@plt>:
   11e54:	add	ip, pc, #1048576	; 0x100000
   11e58:	add	ip, ip, #20480	; 0x5000
   11e5c:	ldr	pc, [ip, #1604]!	; 0x644

00011e60 <myencoding_detect_unicode_has_end@plt>:
   11e60:	add	ip, pc, #1048576	; 0x100000
   11e64:	add	ip, ip, #20480	; 0x5000
   11e68:	ldr	pc, [ip, #1596]!	; 0x63c

00011e6c <mcsync_spin_clean@plt>:
   11e6c:	add	ip, pc, #1048576	; 0x100000
   11e70:	add	ip, ip, #20480	; 0x5000
   11e74:	ldr	pc, [ip, #1588]!	; 0x634

00011e78 <mythread_queue_create@plt>:
   11e78:	add	ip, pc, #1048576	; 0x100000
   11e7c:	add	ip, ip, #20480	; 0x5000
   11e80:	ldr	pc, [ip, #1580]!	; 0x62c

00011e84 <mcobject_async_node_add@plt>:
   11e84:	add	ip, pc, #1048576	; 0x100000
   11e88:	add	ip, ip, #20480	; 0x5000
   11e8c:	ldr	pc, [ip, #1572]!	; 0x624

00011e90 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   11e90:	add	ip, pc, #1048576	; 0x100000
   11e94:	add	ip, ip, #20480	; 0x5000
   11e98:	ldr	pc, [ip, #1564]!	; 0x61c

00011e9c <myhtml_is_html_node@plt>:
   11e9c:	add	ip, pc, #1048576	; 0x100000
   11ea0:	add	ip, ip, #20480	; 0x5000
   11ea4:	ldr	pc, [ip, #1556]!	; 0x614

00011ea8 <myhtml_init_marker@plt>:
   11ea8:	add	ip, pc, #1048576	; 0x100000
   11eac:	add	ip, ip, #20480	; 0x5000
   11eb0:	ldr	pc, [ip, #1548]!	; 0x60c

00011eb4 <myhtml_tree_active_formatting_init@plt>:
   11eb4:	add	ip, pc, #1048576	; 0x100000
   11eb8:	add	ip, ip, #20480	; 0x5000
   11ebc:	ldr	pc, [ip, #1540]!	; 0x604

00011ec0 <myhtml_parser_token_data_to_string@plt>:
   11ec0:	add	ip, pc, #1048576	; 0x100000
   11ec4:	add	ip, ip, #20480	; 0x5000
   11ec8:	ldr	pc, [ip, #1532]!	; 0x5fc

00011ecc <mythread_stop@plt>:
   11ecc:	add	ip, pc, #1048576	; 0x100000
   11ed0:	add	ip, ip, #20480	; 0x5000
   11ed4:	ldr	pc, [ip, #1524]!	; 0x5f4

00011ed8 <mythread_option_set@plt>:
   11ed8:	add	ip, pc, #1048576	; 0x100000
   11edc:	add	ip, ip, #20480	; 0x5000
   11ee0:	ldr	pc, [ip, #1516]!	; 0x5ec

00011ee4 <myhtml_tag_name_by_id@plt>:
   11ee4:	add	ip, pc, #1048576	; 0x100000
   11ee8:	add	ip, ip, #20480	; 0x5000
   11eec:	ldr	pc, [ip, #1508]!	; 0x5e4

00011ef0 <mythread_mutex_create@plt>:
   11ef0:	add	ip, pc, #1048576	; 0x100000
   11ef4:	add	ip, ip, #20480	; 0x5000
   11ef8:	ldr	pc, [ip, #1500]!	; 0x5dc

00011efc <myhtml_attribute_key@plt>:
   11efc:	add	ip, pc, #1048576	; 0x100000
   11f00:	add	ip, ip, #20480	; 0x5000
   11f04:	ldr	pc, [ip, #1492]!	; 0x5d4

00011f08 <mchar_sync_chunk_find_by_size@plt>:
   11f08:	add	ip, pc, #1048576	; 0x100000
   11f0c:	add	ip, ip, #20480	; 0x5000
   11f10:	ldr	pc, [ip, #1484]!	; 0x5cc

00011f14 <mcobject_async_destroy@plt>:
   11f14:	add	ip, pc, #1048576	; 0x100000
   11f18:	add	ip, ip, #20480	; 0x5000
   11f1c:	ldr	pc, [ip, #1476]!	; 0x5c4

00011f20 <myhtml_token_attr_compare@plt>:
   11f20:	add	ip, pc, #1048576	; 0x100000
   11f24:	add	ip, ip, #20480	; 0x5000
   11f28:	ldr	pc, [ip, #1468]!	; 0x5bc

00011f2c <myhtml_tokenizer_set_state@plt>:
   11f2c:	add	ip, pc, #1048576	; 0x100000
   11f30:	add	ip, ip, #20480	; 0x5000
   11f34:	ldr	pc, [ip, #1460]!	; 0x5b4

00011f38 <mcsync_mutex_init@plt>:
   11f38:	add	ip, pc, #1048576	; 0x100000
   11f3c:	add	ip, ip, #20480	; 0x5000
   11f40:	ldr	pc, [ip, #1452]!	; 0x5ac

00011f44 <myhtml_tag_init@plt>:
   11f44:	add	ip, pc, #1048576	; 0x100000
   11f48:	add	ip, ip, #20480	; 0x5000
   11f4c:	ldr	pc, [ip, #1444]!	; 0x5a4

00011f50 <pthread_join@plt>:
   11f50:	add	ip, pc, #1048576	; 0x100000
   11f54:	add	ip, ip, #20480	; 0x5000
   11f58:	ldr	pc, [ip, #1436]!	; 0x59c

00011f5c <myhtml_tag_get_by_name@plt>:
   11f5c:	add	ip, pc, #1048576	; 0x100000
   11f60:	add	ip, ip, #20480	; 0x5000
   11f64:	ldr	pc, [ip, #1428]!	; 0x594

00011f68 <myhtml_stream_buffer_current_entry@plt>:
   11f68:	add	ip, pc, #1048576	; 0x100000
   11f6c:	add	ip, ip, #20480	; 0x5000
   11f70:	ldr	pc, [ip, #1420]!	; 0x58c

00011f74 <mchar_async_chunk_malloc_without_lock@plt>:
   11f74:	add	ip, pc, #1048576	; 0x100000
   11f78:	add	ip, ip, #20480	; 0x5000
   11f7c:	ldr	pc, [ip, #1412]!	; 0x584

00011f80 <myhtml_tree_open_elements_init@plt>:
   11f80:	add	ip, pc, #1048576	; 0x100000
   11f84:	add	ip, ip, #20480	; 0x5000
   11f88:	ldr	pc, [ip, #1404]!	; 0x57c

00011f8c <mcobject_async_malloc@plt>:
   11f8c:	add	ip, pc, #1048576	; 0x100000
   11f90:	add	ip, ip, #20480	; 0x5000
   11f94:	ldr	pc, [ip, #1396]!	; 0x574

00011f98 <mchar_async_clean@plt>:
   11f98:	add	ip, pc, #1048576	; 0x100000
   11f9c:	add	ip, ip, #20480	; 0x5000
   11fa0:	ldr	pc, [ip, #1388]!	; 0x56c

00011fa4 <myhtml_token_adjust_foreign_attributes@plt>:
   11fa4:	add	ip, pc, #1048576	; 0x100000
   11fa8:	add	ip, ip, #20480	; 0x5000
   11fac:	ldr	pc, [ip, #1380]!	; 0x564

00011fb0 <myhtml_rules_init@plt>:
   11fb0:	add	ip, pc, #1048576	; 0x100000
   11fb4:	add	ip, ip, #20480	; 0x5000
   11fb8:	ldr	pc, [ip, #1372]!	; 0x55c

00011fbc <mythread_nanosleep_destroy@plt>:
   11fbc:	add	ip, pc, #1048576	; 0x100000
   11fc0:	add	ip, ip, #20480	; 0x5000
   11fc4:	ldr	pc, [ip, #1364]!	; 0x554

00011fc8 <mycore_utils_avl_tree_node_rotate_left@plt>:
   11fc8:	add	ip, pc, #1048576	; 0x100000
   11fcc:	add	ip, ip, #20480	; 0x5000
   11fd0:	ldr	pc, [ip, #1356]!	; 0x54c

00011fd4 <myhtml_string_before_append_any_preprocessing@plt>:
   11fd4:	add	ip, pc, #1048576	; 0x100000
   11fd8:	add	ip, ip, #20480	; 0x5000
   11fdc:	ldr	pc, [ip, #1348]!	; 0x544

00011fe0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   11fe0:	add	ip, pc, #1048576	; 0x100000
   11fe4:	add	ip, ip, #20480	; 0x5000
   11fe8:	ldr	pc, [ip, #1340]!	; 0x53c

00011fec <mchar_async_cache_init@plt>:
   11fec:	add	ip, pc, #1048576	; 0x100000
   11ff0:	add	ip, ip, #20480	; 0x5000
   11ff4:	ldr	pc, [ip, #1332]!	; 0x534

00011ff8 <myhtml_check_tag_parser@plt>:
   11ff8:	add	ip, pc, #1048576	; 0x100000
   11ffc:	add	ip, ip, #20480	; 0x5000
   12000:	ldr	pc, [ip, #1324]!	; 0x52c

00012004 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   12004:	add	ip, pc, #1048576	; 0x100000
   12008:	add	ip, ip, #20480	; 0x5000
   1200c:	ldr	pc, [ip, #1316]!	; 0x524

00012010 <mchar_async_node_delete@plt>:
   12010:	add	ip, pc, #1048576	; 0x100000
   12014:	add	ip, ip, #20480	; 0x5000
   12018:	ldr	pc, [ip, #1308]!	; 0x51c

0001201c <mchar_async_crop_first_chars_without_cache@plt>:
   1201c:	add	ip, pc, #1048576	; 0x100000
   12020:	add	ip, ip, #20480	; 0x5000
   12024:	ldr	pc, [ip, #1300]!	; 0x514

00012028 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   12028:	add	ip, pc, #1048576	; 0x100000
   1202c:	add	ip, ip, #20480	; 0x5000
   12030:	ldr	pc, [ip, #1292]!	; 0x50c

00012034 <mchar_async_cache_add@plt>:
   12034:	add	ip, pc, #1048576	; 0x100000
   12038:	add	ip, ip, #20480	; 0x5000
   1203c:	ldr	pc, [ip, #1284]!	; 0x504

00012040 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   12040:	add	ip, pc, #1048576	; 0x100000
   12044:	add	ip, ip, #20480	; 0x5000
   12048:	ldr	pc, [ip, #1276]!	; 0x4fc

0001204c <mycore_malloc@plt>:
   1204c:	add	ip, pc, #1048576	; 0x100000
   12050:	add	ip, ip, #20480	; 0x5000
   12054:	ldr	pc, [ip, #1268]!	; 0x4f4

00012058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   12058:	add	ip, pc, #1048576	; 0x100000
   1205c:	add	ip, ip, #20480	; 0x5000
   12060:	ldr	pc, [ip, #1260]!	; 0x4ec

00012064 <mythread_queue_node_malloc_limit@plt>:
   12064:	add	ip, pc, #1048576	; 0x100000
   12068:	add	ip, ip, #20480	; 0x5000
   1206c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012070 <myhtml_tree_node_insert_by_token@plt>:
   12070:	add	ip, pc, #1048576	; 0x100000
   12074:	add	ip, ip, #20480	; 0x5000
   12078:	ldr	pc, [ip, #1244]!	; 0x4dc

0001207c <mctree_insert_after@plt>:
   1207c:	add	ip, pc, #1048576	; 0x100000
   12080:	add	ip, ip, #20480	; 0x5000
   12084:	ldr	pc, [ip, #1236]!	; 0x4d4

00012088 <myencoding_by_name@plt>:
   12088:	add	ip, pc, #1048576	; 0x100000
   1208c:	add	ip, ip, #20480	; 0x5000
   12090:	ldr	pc, [ip, #1228]!	; 0x4cc

00012094 <myhtml_tree_template_insertion_init@plt>:
   12094:	add	ip, pc, #1048576	; 0x100000
   12098:	add	ip, ip, #20480	; 0x5000
   1209c:	ldr	pc, [ip, #1220]!	; 0x4c4

000120a0 <myhtml_tree_open_elements_destroy@plt>:
   120a0:	add	ip, pc, #1048576	; 0x100000
   120a4:	add	ip, ip, #20480	; 0x5000
   120a8:	ldr	pc, [ip, #1212]!	; 0x4bc

000120ac <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   120ac:	add	ip, pc, #1048576	; 0x100000
   120b0:	add	ip, ip, #20480	; 0x5000
   120b4:	ldr	pc, [ip, #1204]!	; 0x4b4

000120b8 <myhtml_tree_node_free@plt>:
   120b8:	add	ip, pc, #1048576	; 0x100000
   120bc:	add	ip, ip, #20480	; 0x5000
   120c0:	ldr	pc, [ip, #1196]!	; 0x4ac

000120c4 <mythread_mutex_post@plt>:
   120c4:	add	ip, pc, #1048576	; 0x100000
   120c8:	add	ip, ip, #20480	; 0x5000
   120cc:	ldr	pc, [ip, #1188]!	; 0x4a4

000120d0 <mycore_string_clean@plt>:
   120d0:	add	ip, pc, #1048576	; 0x100000
   120d4:	add	ip, ip, #20480	; 0x5000
   120d8:	ldr	pc, [ip, #1180]!	; 0x49c

000120dc <mythread_queue_list_entry_make_batch@plt>:
   120dc:	add	ip, pc, #1048576	; 0x100000
   120e0:	add	ip, ip, #20480	; 0x5000
   120e4:	ldr	pc, [ip, #1172]!	; 0x494

000120e8 <myhtml_tag_create@plt>:
   120e8:	add	ip, pc, #1048576	; 0x100000
   120ec:	add	ip, ip, #20480	; 0x5000
   120f0:	ldr	pc, [ip, #1164]!	; 0x48c

000120f4 <myhtml_tree_close_cell@plt>:
   120f4:	add	ip, pc, #1048576	; 0x100000
   120f8:	add	ip, ip, #20480	; 0x5000
   120fc:	ldr	pc, [ip, #1156]!	; 0x484

00012100 <myhtml_tree_adjusted_current_node@plt>:
   12100:	add	ip, pc, #1048576	; 0x100000
   12104:	add	ip, ip, #20480	; 0x5000
   12108:	ldr	pc, [ip, #1148]!	; 0x47c

0001210c <myencoding_detect_russian_has_end@plt>:
   1210c:	add	ip, pc, #1048576	; 0x100000
   12110:	add	ip, ip, #20480	; 0x5000
   12114:	ldr	pc, [ip, #1140]!	; 0x474

00012118 <myhtml_rules_check_for_first_newline@plt>:
   12118:	add	ip, pc, #1048576	; 0x100000
   1211c:	add	ip, ip, #20480	; 0x5000
   12120:	ldr	pc, [ip, #1132]!	; 0x46c

00012124 <myhtml_stream_buffer_init@plt>:
   12124:	add	ip, pc, #1048576	; 0x100000
   12128:	add	ip, ip, #20480	; 0x5000
   1212c:	ldr	pc, [ip, #1124]!	; 0x464

00012130 <mythread_queue_node_clean@plt>:
   12130:	add	ip, pc, #1048576	; 0x100000
   12134:	add	ip, ip, #20480	; 0x5000
   12138:	ldr	pc, [ip, #1116]!	; 0x45c

0001213c <myhtml_tree_node_insert_foreign_element@plt>:
   1213c:	add	ip, pc, #1048576	; 0x100000
   12140:	add	ip, ip, #20480	; 0x5000
   12144:	ldr	pc, [ip, #1108]!	; 0x454

00012148 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   12148:	add	ip, pc, #1048576	; 0x100000
   1214c:	add	ip, ip, #20480	; 0x5000
   12150:	ldr	pc, [ip, #1100]!	; 0x44c

00012154 <mythread_mutex_wait@plt>:
   12154:	add	ip, pc, #1048576	; 0x100000
   12158:	add	ip, ip, #20480	; 0x5000
   1215c:	ldr	pc, [ip, #1092]!	; 0x444

00012160 <mchar_async_destroy@plt>:
   12160:	add	ip, pc, #1048576	; 0x100000
   12164:	add	ip, ip, #20480	; 0x5000
   12168:	ldr	pc, [ip, #1084]!	; 0x43c

0001216c <mycore_utils_mhash_add_with_choice@plt>:
   1216c:	add	ip, pc, #1048576	; 0x100000
   12170:	add	ip, ip, #20480	; 0x5000
   12174:	ldr	pc, [ip, #1076]!	; 0x434

00012178 <myhtml_tree_node_delete@plt>:
   12178:	add	ip, pc, #1048576	; 0x100000
   1217c:	add	ip, ip, #20480	; 0x5000
   12180:	ldr	pc, [ip, #1068]!	; 0x42c

00012184 <mycore_free@plt>:
   12184:	add	ip, pc, #1048576	; 0x100000
   12188:	add	ip, ip, #20480	; 0x5000
   1218c:	ldr	pc, [ip, #1060]!	; 0x424

00012190 <mythread_queue_list_wait_for_done@plt>:
   12190:	add	ip, pc, #1048576	; 0x100000
   12194:	add	ip, ip, #20480	; 0x5000
   12198:	ldr	pc, [ip, #1052]!	; 0x41c

0001219c <mycore_string_whitespace_from_begin@plt>:
   1219c:	add	ip, pc, #1048576	; 0x100000
   121a0:	add	ip, ip, #20480	; 0x5000
   121a4:	ldr	pc, [ip, #1044]!	; 0x414

000121a8 <myhtml_tree_node_remove@plt>:
   121a8:	add	ip, pc, #1048576	; 0x100000
   121ac:	add	ip, ip, #20480	; 0x5000
   121b0:	ldr	pc, [ip, #1036]!	; 0x40c

000121b4 <myhtml_collection_check_size@plt>:
   121b4:	add	ip, pc, #1048576	; 0x100000
   121b8:	add	ip, ip, #20480	; 0x5000
   121bc:	ldr	pc, [ip, #1028]!	; 0x404

000121c0 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   121c0:	add	ip, pc, #1048576	; 0x100000
   121c4:	add	ip, ip, #20480	; 0x5000
   121c8:	ldr	pc, [ip, #1020]!	; 0x3fc

000121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   121cc:	add	ip, pc, #1048576	; 0x100000
   121d0:	add	ip, ip, #20480	; 0x5000
   121d4:	ldr	pc, [ip, #1012]!	; 0x3f4

000121d8 <myhtml_tree_open_elements_clean@plt>:
   121d8:	add	ip, pc, #1048576	; 0x100000
   121dc:	add	ip, ip, #20480	; 0x5000
   121e0:	ldr	pc, [ip, #1004]!	; 0x3ec

000121e4 <myhtml_tree_node_insert_doctype@plt>:
   121e4:	add	ip, pc, #1048576	; 0x100000
   121e8:	add	ip, ip, #20480	; 0x5000
   121ec:	ldr	pc, [ip, #996]!	; 0x3e4

000121f0 <myhtml_tree_template_insertion_destroy@plt>:
   121f0:	add	ip, pc, #1048576	; 0x100000
   121f4:	add	ip, ip, #20480	; 0x5000
   121f8:	ldr	pc, [ip, #988]!	; 0x3dc

000121fc <myhtml_tag_destroy@plt>:
   121fc:	add	ip, pc, #1048576	; 0x100000
   12200:	add	ip, ip, #20480	; 0x5000
   12204:	ldr	pc, [ip, #980]!	; 0x3d4

00012208 <mcsync_mutex_clean@plt>:
   12208:	add	ip, pc, #1048576	; 0x100000
   1220c:	add	ip, ip, #20480	; 0x5000
   12210:	ldr	pc, [ip, #972]!	; 0x3cc

00012214 <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   12214:	add	ip, pc, #1048576	; 0x100000
   12218:	add	ip, ip, #20480	; 0x5000
   1221c:	ldr	pc, [ip, #964]!	; 0x3c4

00012220 <myhtml_stream_buffer_create@plt>:
   12220:	add	ip, pc, #1048576	; 0x100000
   12224:	add	ip, ip, #20480	; 0x5000
   12228:	ldr	pc, [ip, #956]!	; 0x3bc

0001222c <myhtml_tree_appropriate_place_inserting@plt>:
   1222c:	add	ip, pc, #1048576	; 0x100000
   12230:	add	ip, ip, #20480	; 0x5000
   12234:	ldr	pc, [ip, #948]!	; 0x3b4

00012238 <myencoding_codepoint_to_ascii_utf_8@plt>:
   12238:	add	ip, pc, #1048576	; 0x100000
   1223c:	add	ip, ip, #20480	; 0x5000
   12240:	ldr	pc, [ip, #940]!	; 0x3ac

00012244 <myhtml_token_attr_remove_by_name@plt>:
   12244:	add	ip, pc, #1048576	; 0x100000
   12248:	add	ip, ip, #20480	; 0x5000
   1224c:	ldr	pc, [ip, #932]!	; 0x3a4

00012250 <mycore_utils_mhash_rebuild_add_entry@plt>:
   12250:	add	ip, pc, #1048576	; 0x100000
   12254:	add	ip, ip, #20480	; 0x5000
   12258:	ldr	pc, [ip, #924]!	; 0x39c

0001225c <myhtml_token_attr_by_name@plt>:
   1225c:	add	ip, pc, #1048576	; 0x100000
   12260:	add	ip, ip, #20480	; 0x5000
   12264:	ldr	pc, [ip, #916]!	; 0x394

00012268 <mcsync_unlock@plt>:
   12268:	add	ip, pc, #1048576	; 0x100000
   1226c:	add	ip, ip, #20480	; 0x5000
   12270:	ldr	pc, [ip, #908]!	; 0x38c

00012274 <myhtml_tree_token_list_append@plt>:
   12274:	add	ip, pc, #1048576	; 0x100000
   12278:	add	ip, ip, #20480	; 0x5000
   1227c:	ldr	pc, [ip, #900]!	; 0x384

00012280 <mycore_utils_avl_tree_node_create_root@plt>:
   12280:	add	ip, pc, #1048576	; 0x100000
   12284:	add	ip, ip, #20480	; 0x5000
   12288:	ldr	pc, [ip, #892]!	; 0x37c

0001228c <mythread_queue_list_entry_make_stream@plt>:
   1228c:	add	ip, pc, #1048576	; 0x100000
   12290:	add	ip, ip, #20480	; 0x5000
   12294:	ldr	pc, [ip, #884]!	; 0x374

00012298 <mycore_strncmp@plt>:
   12298:	add	ip, pc, #1048576	; 0x100000
   1229c:	add	ip, ip, #20480	; 0x5000
   122a0:	ldr	pc, [ip, #876]!	; 0x36c

000122a4 <mycore_utils_mhash_create_entry@plt>:
   122a4:	add	ip, pc, #1048576	; 0x100000
   122a8:	add	ip, ip, #20480	; 0x5000
   122ac:	ldr	pc, [ip, #868]!	; 0x364

000122b0 <myhtml_tree_element_in_scope@plt>:
   122b0:	add	ip, pc, #1048576	; 0x100000
   122b4:	add	ip, ip, #20480	; 0x5000
   122b8:	ldr	pc, [ip, #860]!	; 0x35c

000122bc <myencoding_index_gb18030_ranges_code_point@plt>:
   122bc:	add	ip, pc, #1048576	; 0x100000
   122c0:	add	ip, ip, #20480	; 0x5000
   122c4:	ldr	pc, [ip, #852]!	; 0x354

000122c8 <fseek@plt>:
   122c8:	add	ip, pc, #1048576	; 0x100000
   122cc:	add	ip, ip, #20480	; 0x5000
   122d0:	ldr	pc, [ip, #844]!	; 0x34c

000122d4 <myhtml_node_clone@plt>:
   122d4:	add	ip, pc, #1048576	; 0x100000
   122d8:	add	ip, ip, #20480	; 0x5000
   122dc:	ldr	pc, [ip, #836]!	; 0x344

000122e0 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   122e0:	add	ip, pc, #1048576	; 0x100000
   122e4:	add	ip, ip, #20480	; 0x5000
   122e8:	ldr	pc, [ip, #828]!	; 0x33c

000122ec <pthread_attr_setdetachstate@plt>:
   122ec:	add	ip, pc, #1048576	; 0x100000
   122f0:	add	ip, ip, #20480	; 0x5000
   122f4:	ldr	pc, [ip, #820]!	; 0x334

000122f8 <mchar_async_cache_delete@plt>:
   122f8:	add	ip, pc, #1048576	; 0x100000
   122fc:	add	ip, ip, #20480	; 0x5000
   12300:	ldr	pc, [ip, #812]!	; 0x32c

00012304 <mcobject_clean@plt>:
   12304:	add	ip, pc, #1048576	; 0x100000
   12308:	add	ip, ip, #20480	; 0x5000
   1230c:	ldr	pc, [ip, #804]!	; 0x324

00012310 <myhtml_token_node_clean@plt>:
   12310:	add	ip, pc, #1048576	; 0x100000
   12314:	add	ip, ip, #20480	; 0x5000
   12318:	ldr	pc, [ip, #796]!	; 0x31c

0001231c <myhtml_token_delete@plt>:
   1231c:	add	ip, pc, #1048576	; 0x100000
   12320:	add	ip, ip, #20480	; 0x5000
   12324:	ldr	pc, [ip, #788]!	; 0x314

00012328 <strncmp@plt>:
   12328:	add	ip, pc, #1048576	; 0x100000
   1232c:	add	ip, ip, #20480	; 0x5000
   12330:	ldr	pc, [ip, #780]!	; 0x30c

00012334 <mcsimple_get_by_absolute_position@plt>:
   12334:	add	ip, pc, #1048576	; 0x100000
   12338:	add	ip, ip, #20480	; 0x5000
   1233c:	ldr	pc, [ip, #772]!	; 0x304

00012340 <mcsync_mutex_try_lock@plt>:
   12340:	add	ip, pc, #1048576	; 0x100000
   12344:	add	ip, ip, #20480	; 0x5000
   12348:	ldr	pc, [ip, #764]!	; 0x2fc

0001234c <mycore_utils_avl_tree_node_height@plt>:
   1234c:	add	ip, pc, #1048576	; 0x100000
   12350:	add	ip, ip, #20480	; 0x5000
   12354:	ldr	pc, [ip, #756]!	; 0x2f4

00012358 <mycore_utils_avl_tree_node_clean@plt>:
   12358:	add	ip, pc, #1048576	; 0x100000
   1235c:	add	ip, ip, #20480	; 0x5000
   12360:	ldr	pc, [ip, #748]!	; 0x2ec

00012364 <myhtml_tree_clear_stack_back_table_context@plt>:
   12364:	add	ip, pc, #1048576	; 0x100000
   12368:	add	ip, ip, #20480	; 0x5000
   1236c:	ldr	pc, [ip, #740]!	; 0x2e4

00012370 <myhtml_tree_node_clone@plt>:
   12370:	add	ip, pc, #1048576	; 0x100000
   12374:	add	ip, ip, #20480	; 0x5000
   12378:	ldr	pc, [ip, #732]!	; 0x2dc

0001237c <myhtml_tree_token_list_clean@plt>:
   1237c:	add	ip, pc, #1048576	; 0x100000
   12380:	add	ip, ip, #20480	; 0x5000
   12384:	ldr	pc, [ip, #724]!	; 0x2d4

00012388 <myhtml_parser_stream@plt>:
   12388:	add	ip, pc, #1048576	; 0x100000
   1238c:	add	ip, ip, #20480	; 0x5000
   12390:	ldr	pc, [ip, #716]!	; 0x2cc

00012394 <myhtml_token_create@plt>:
   12394:	add	ip, pc, #1048576	; 0x100000
   12398:	add	ip, ip, #20480	; 0x5000
   1239c:	ldr	pc, [ip, #708]!	; 0x2c4

000123a0 <myhtml_parser_token_data_to_string_lowercase@plt>:
   123a0:	add	ip, pc, #1048576	; 0x100000
   123a4:	add	ip, ip, #20480	; 0x5000
   123a8:	ldr	pc, [ip, #700]!	; 0x2bc

000123ac <myencoding_detect_utf_8@plt>:
   123ac:	add	ip, pc, #1048576	; 0x100000
   123b0:	add	ip, ip, #20480	; 0x5000
   123b4:	ldr	pc, [ip, #692]!	; 0x2b4

000123b8 <mcsync_spin_unlock@plt>:
   123b8:	add	ip, pc, #1048576	; 0x100000
   123bc:	add	ip, ip, #20480	; 0x5000
   123c0:	ldr	pc, [ip, #684]!	; 0x2ac

000123c4 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   123c4:	add	ip, pc, #1048576	; 0x100000
   123c8:	add	ip, ip, #20480	; 0x5000
   123cc:	ldr	pc, [ip, #676]!	; 0x2a4

000123d0 <mcsync_mutex_lock@plt>:
   123d0:	add	ip, pc, #1048576	; 0x100000
   123d4:	add	ip, ip, #20480	; 0x5000
   123d8:	ldr	pc, [ip, #668]!	; 0x29c

000123dc <myhtml_tree_open_elements_find@plt>:
   123dc:	add	ip, pc, #1048576	; 0x100000
   123e0:	add	ip, ip, #20480	; 0x5000
   123e4:	ldr	pc, [ip, #660]!	; 0x294

000123e8 <mcobject_async_clean@plt>:
   123e8:	add	ip, pc, #1048576	; 0x100000
   123ec:	add	ip, ip, #20480	; 0x5000
   123f0:	ldr	pc, [ip, #652]!	; 0x28c

000123f4 <mchar_async_mem_malloc@plt>:
   123f4:	add	ip, pc, #1048576	; 0x100000
   123f8:	add	ip, ip, #20480	; 0x5000
   123fc:	ldr	pc, [ip, #644]!	; 0x284

00012400 <myhtml_data_process_string_append_char@plt>:
   12400:	add	ip, pc, #1048576	; 0x100000
   12404:	add	ip, ip, #20480	; 0x5000
   12408:	ldr	pc, [ip, #636]!	; 0x27c

0001240c <myhtml_tag_clean@plt>:
   1240c:	add	ip, pc, #1048576	; 0x100000
   12410:	add	ip, ip, #20480	; 0x5000
   12414:	ldr	pc, [ip, #628]!	; 0x274

00012418 <mythread_thread_attr_destroy@plt>:
   12418:	add	ip, pc, #1048576	; 0x100000
   1241c:	add	ip, ip, #20480	; 0x5000
   12420:	ldr	pc, [ip, #620]!	; 0x26c

00012424 <mycore_string_clean_all@plt>:
   12424:	add	ip, pc, #1048576	; 0x100000
   12428:	add	ip, ip, #20480	; 0x5000
   1242c:	ldr	pc, [ip, #612]!	; 0x264

00012430 <myhtml_tree_node_clean@plt>:
   12430:	add	ip, pc, #1048576	; 0x100000
   12434:	add	ip, ip, #20480	; 0x5000
   12438:	ldr	pc, [ip, #604]!	; 0x25c

0001243c <mythread_init@plt>:
   1243c:	add	ip, pc, #1048576	; 0x100000
   12440:	add	ip, ip, #20480	; 0x5000
   12444:	ldr	pc, [ip, #596]!	; 0x254

Disassembly of section .text:

00012448 <mycore_incoming_buffer_add@@Base-0x124>:
   12448:	ldr	r3, [pc, #20]	; 12464 <mythread_init@plt+0x28>
   1244c:	ldr	r2, [pc, #20]	; 12468 <mythread_init@plt+0x2c>
   12450:	add	r3, pc, r3
   12454:	ldr	r2, [r3, r2]
   12458:	cmp	r2, #0
   1245c:	bxeq	lr
   12460:	b	11a04 <__gmon_start__@plt>
   12464:	andseq	r4, r0, r8, lsr #23
   12468:	andeq	r0, r0, ip, lsl #16
   1246c:	ldr	r0, [pc, #44]	; 124a0 <mythread_init@plt+0x64>
   12470:	ldr	r3, [pc, #44]	; 124a4 <mythread_init@plt+0x68>
   12474:	add	r0, pc, r0
   12478:	add	r3, pc, r3
   1247c:	cmp	r3, r0
   12480:	ldr	r3, [pc, #32]	; 124a8 <mythread_init@plt+0x6c>
   12484:	add	r3, pc, r3
   12488:	bxeq	lr
   1248c:	ldr	r2, [pc, #24]	; 124ac <mythread_init@plt+0x70>
   12490:	ldr	r3, [r3, r2]
   12494:	cmp	r3, #0
   12498:	bxeq	lr
   1249c:	bx	r3
   124a0:	andseq	r5, r0, ip, ror #9
   124a4:	andseq	r5, r0, r8, ror #9
   124a8:	andseq	r4, r0, r4, ror fp
   124ac:	ldrdeq	r0, [r0], -r8
   124b0:	ldr	r0, [pc, #56]	; 124f0 <mythread_init@plt+0xb4>
   124b4:	ldr	r3, [pc, #56]	; 124f4 <mythread_init@plt+0xb8>
   124b8:	add	r0, pc, r0
   124bc:	add	r3, pc, r3
   124c0:	sub	r1, r3, r0
   124c4:	ldr	r3, [pc, #44]	; 124f8 <mythread_init@plt+0xbc>
   124c8:	asr	r1, r1, #2
   124cc:	add	r3, pc, r3
   124d0:	add	r1, r1, r1, lsr #31
   124d4:	asrs	r1, r1, #1
   124d8:	bxeq	lr
   124dc:	ldr	r2, [pc, #24]	; 124fc <mythread_init@plt+0xc0>
   124e0:	ldr	r3, [r3, r2]
   124e4:	cmp	r3, #0
   124e8:	bxeq	lr
   124ec:	bx	r3
   124f0:	andseq	r5, r0, r8, lsr #9
   124f4:	andseq	r5, r0, r4, lsr #9
   124f8:	andseq	r4, r0, ip, lsr #22
   124fc:	andeq	r0, r0, ip, lsl r9
   12500:	ldr	r3, [pc, #76]	; 12554 <mythread_init@plt+0x118>
   12504:	ldr	r2, [pc, #76]	; 12558 <mythread_init@plt+0x11c>
   12508:	add	r3, pc, r3
   1250c:	add	r2, pc, r2
   12510:	ldrb	r3, [r3]
   12514:	cmp	r3, #0
   12518:	bxne	lr
   1251c:	ldr	r3, [pc, #56]	; 1255c <mythread_init@plt+0x120>
   12520:	push	{r4, lr}
   12524:	ldr	r3, [r2, r3]
   12528:	cmp	r3, #0
   1252c:	beq	1253c <mythread_init@plt+0x100>
   12530:	ldr	r3, [pc, #40]	; 12560 <mythread_init@plt+0x124>
   12534:	ldr	r0, [pc, r3]
   12538:	bl	11200 <__cxa_finalize@plt>
   1253c:	bl	1246c <mythread_init@plt+0x30>
   12540:	ldr	r3, [pc, #28]	; 12564 <mythread_init@plt+0x128>
   12544:	mov	r2, #1
   12548:	add	r3, pc, r3
   1254c:	strb	r2, [r3]
   12550:	pop	{r4, pc}
   12554:	andseq	r5, r0, r8, asr r4
   12558:	andseq	r4, r0, ip, ror #21
   1255c:	andeq	r0, r0, r4, asr #13
   12560:	andseq	r5, r0, r8, lsr #8
   12564:	andseq	r5, r0, r8, lsl r4
   12568:	b	124b0 <mythread_init@plt+0x74>

0001256c <mycore_incoming_buffer_add@@Base>:
   1256c:	push	{r4, r5, r6, r7, fp, lr}
   12570:	add	fp, sp, #16
   12574:	mov	r5, r3
   12578:	mov	r6, r2
   1257c:	mov	r4, r0
   12580:	mov	r7, #0
   12584:	mov	r0, r1
   12588:	mov	r1, #0
   1258c:	bl	11e54 <mcobject_malloc@plt>
   12590:	stm	r0, {r6, r7}
   12594:	str	r5, [r0, #8]
   12598:	cmp	r4, #0
   1259c:	beq	125b8 <mycore_incoming_buffer_add@@Base+0x4c>
   125a0:	ldr	r1, [r4, #8]
   125a4:	ldr	r2, [r4, #12]
   125a8:	add	r1, r1, r2
   125ac:	str	r1, [r0, #12]
   125b0:	str	r0, [r4, #20]
   125b4:	b	125bc <mycore_incoming_buffer_add@@Base+0x50>
   125b8:	str	r7, [r0, #12]
   125bc:	mov	r1, #0
   125c0:	str	r4, [r0, #16]
   125c4:	str	r1, [r0, #20]
   125c8:	pop	{r4, r5, r6, r7, fp, pc}

000125cc <mycore_incoming_buffer_clean@@Base>:
   125cc:	mov	r1, #0
   125d0:	vmov.i32	q8, #0	; 0x00000000
   125d4:	str	r1, [r0, #16]
   125d8:	mov	r2, #20
   125dc:	vst1.32	{d16-d17}, [r0], r2
   125e0:	str	r1, [r0]
   125e4:	bx	lr

000125e8 <mycore_incoming_buffer_split@@Base>:
   125e8:	push	{r4, r5, r6, sl, fp, lr}
   125ec:	add	fp, sp, #16
   125f0:	mov	r4, r0
   125f4:	ldr	r0, [r0, #12]
   125f8:	sub	r5, r2, r0
   125fc:	mov	r6, #0
   12600:	mov	r0, r1
   12604:	mov	r1, #0
   12608:	bl	11e54 <mcobject_malloc@plt>
   1260c:	ldr	r1, [r4, #8]
   12610:	sub	r1, r1, r5
   12614:	str	r1, [r0, #8]
   12618:	str	r1, [r0, #4]
   1261c:	ldr	r1, [r4]
   12620:	add	r1, r1, r5
   12624:	str	r1, [r0]
   12628:	ldr	r1, [r4, #12]
   1262c:	str	r4, [r0, #16]
   12630:	str	r6, [r0, #20]
   12634:	add	r1, r1, r5
   12638:	str	r1, [r0, #12]
   1263c:	str	r0, [r4, #20]
   12640:	str	r5, [r4, #4]
   12644:	str	r5, [r4, #8]
   12648:	pop	{r4, r5, r6, sl, fp, pc}

0001264c <mycore_incoming_buffer_find_by_position@@Base>:
   1264c:	ldr	r2, [r0, #12]
   12650:	cmp	r2, r1
   12654:	bcs	1267c <mycore_incoming_buffer_find_by_position@@Base+0x30>
   12658:	ldr	r2, [r0, #8]
   1265c:	ldr	r3, [r0, #12]
   12660:	add	r2, r2, r3
   12664:	cmp	r2, r1
   12668:	bcs	12698 <mycore_incoming_buffer_find_by_position@@Base+0x4c>
   1266c:	ldr	r0, [r0, #20]
   12670:	cmp	r0, #0
   12674:	bne	12658 <mycore_incoming_buffer_find_by_position@@Base+0xc>
   12678:	b	12694 <mycore_incoming_buffer_find_by_position@@Base+0x48>
   1267c:	ldr	r2, [r0, #12]
   12680:	cmp	r2, r1
   12684:	bxls	lr
   12688:	ldr	r0, [r0, #16]
   1268c:	cmp	r0, #0
   12690:	bne	1267c <mycore_incoming_buffer_find_by_position@@Base+0x30>
   12694:	mov	r0, #0
   12698:	bx	lr

0001269c <mycore_incoming_buffer_data@@Base>:
   1269c:	ldr	r0, [r0]
   126a0:	bx	lr

000126a4 <mycore_incoming_buffer_length@@Base>:
   126a4:	ldr	r0, [r0, #4]
   126a8:	bx	lr

000126ac <mycore_incoming_buffer_size@@Base>:
   126ac:	ldr	r0, [r0, #8]
   126b0:	bx	lr

000126b4 <mycore_incoming_buffer_offset@@Base>:
   126b4:	ldr	r0, [r0, #12]
   126b8:	bx	lr

000126bc <mycore_incoming_buffer_relative_begin@@Base>:
   126bc:	ldr	r0, [r0, #12]
   126c0:	sub	r0, r1, r0
   126c4:	bx	lr

000126c8 <mycore_incoming_buffer_available_length@@Base>:
   126c8:	add	r3, r2, r1
   126cc:	ldr	r0, [r0, #8]
   126d0:	cmp	r3, r0
   126d4:	subhi	r2, r0, r1
   126d8:	mov	r0, r2
   126dc:	bx	lr

000126e0 <mycore_incoming_buffer_next@@Base>:
   126e0:	ldr	r0, [r0, #20]
   126e4:	bx	lr

000126e8 <mycore_incoming_buffer_prev@@Base>:
   126e8:	ldr	r0, [r0, #16]
   126ec:	bx	lr

000126f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   126f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   126f4:	add	fp, sp, #24
   126f8:	ldr	r2, [r1]
   126fc:	ldr	r3, [r0]
   12700:	ldr	r7, [r3, #8]
   12704:	cmp	r2, r7
   12708:	bcc	12718 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x28>
   1270c:	mov	r2, #0
   12710:	str	r2, [r1]
   12714:	ldr	r3, [r3, #20]
   12718:	mov	r2, #0
   1271c:	cmp	r3, #0
   12720:	beq	127a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xb8>
   12724:	ldr	r6, [r1]
   12728:	ldr	ip, [r3]
   1272c:	ldrb	r7, [ip, r6]
   12730:	sub	r5, r7, #48	; 0x30
   12734:	cmp	r5, #9
   12738:	bhi	127ac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xbc>
   1273c:	mov	lr, #0
   12740:	mov	r4, #1
   12744:	ldr	r8, [pc, #108]	; 127b8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xc8>
   12748:	add	r8, pc, r8
   1274c:	mov	r2, #0
   12750:	b	12770 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x80>
   12754:	cmp	r4, #5
   12758:	ldrls	r6, [r1]
   1275c:	ldrbls	r7, [ip, r6]
   12760:	subls	r5, r7, #48	; 0x30
   12764:	addls	r4, r4, #1
   12768:	cmpls	r5, #10
   1276c:	bcs	127ac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xbc>
   12770:	add	r6, r6, #1
   12774:	str	r6, [r1]
   12778:	ldrb	r7, [r8, r7]
   1277c:	orr	r2, r7, r2, lsl #4
   12780:	ldr	r7, [r3, #8]
   12784:	cmp	r6, r7
   12788:	bcc	12754 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x64>
   1278c:	ldr	r6, [r3, #20]
   12790:	cmp	r6, #0
   12794:	beq	127ac <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0xbc>
   12798:	str	lr, [r1]
   1279c:	ldr	ip, [r3]
   127a0:	mov	r3, r6
   127a4:	b	12754 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x64>
   127a8:	mov	r3, #0
   127ac:	str	r3, [r0]
   127b0:	mov	r0, r2
   127b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127b8:			; <UNDEFINED> instruction: 0x0001cfb0

000127bc <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   127bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127c0:	add	fp, sp, #28
   127c4:	sub	sp, sp, #4
   127c8:	mov	r6, r3
   127cc:	mov	r4, r2
   127d0:	mov	r7, r1
   127d4:	mov	r9, r0
   127d8:	ldr	r0, [r0]
   127dc:	str	r0, [sp]
   127e0:	ldr	r1, [r0, #8]
   127e4:	ldr	r2, [r3]
   127e8:	cmp	r2, r1
   127ec:	bcc	1280c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x50>
   127f0:	ldr	r1, [r0, #20]
   127f4:	cmp	r1, #0
   127f8:	beq	128e8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x12c>
   127fc:	mov	r1, #0
   12800:	str	r1, [r6]
   12804:	ldr	r0, [r0, #20]
   12808:	str	r0, [sp]
   1280c:	cmp	r4, #0
   12810:	beq	128d8 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x11c>
   12814:	ldr	r0, [sp]
   12818:	ldr	r0, [r0]
   1281c:	mov	r8, sp
   12820:	ldr	sl, [pc, #204]	; 128f4 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x138>
   12824:	add	sl, pc, sl
   12828:	mov	r5, #0
   1282c:	b	12838 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x7c>
   12830:	cmp	r4, r5
   12834:	beq	128dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   12838:	ldr	r1, [r6]
   1283c:	ldrb	r2, [r0, r1]
   12840:	cmp	r2, #92	; 0x5c
   12844:	bne	12884 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc8>
   12848:	add	r0, r1, #1
   1284c:	str	r0, [r6]
   12850:	mov	r0, r8
   12854:	mov	r1, r6
   12858:	bl	1165c <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   1285c:	cmp	r0, #255	; 0xff
   12860:	bhi	128dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   12864:	ldrb	r0, [sl, r0]
   12868:	ldrb	r1, [r7, r5]
   1286c:	ldrb	r1, [sl, r1]
   12870:	cmp	r0, r1
   12874:	bne	128dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   12878:	ldr	r0, [sp]
   1287c:	ldr	r0, [r0]
   12880:	b	128a0 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xe4>
   12884:	ldrb	r2, [sl, r2]
   12888:	ldrb	r3, [r7, r5]
   1288c:	ldrb	r3, [sl, r3]
   12890:	cmp	r2, r3
   12894:	bne	128dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   12898:	add	r1, r1, #1
   1289c:	str	r1, [r6]
   128a0:	add	r5, r5, #1
   128a4:	ldr	r2, [r6]
   128a8:	ldr	r1, [sp]
   128ac:	ldr	r3, [r1, #8]
   128b0:	cmp	r2, r3
   128b4:	bcc	12830 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x74>
   128b8:	ldr	r0, [r1, #20]
   128bc:	cmp	r0, #0
   128c0:	beq	128dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x120>
   128c4:	str	r0, [sp]
   128c8:	ldr	r0, [r0]
   128cc:	mov	r1, #0
   128d0:	str	r1, [r6]
   128d4:	b	12830 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x74>
   128d8:	mov	r5, #0
   128dc:	ldr	r0, [sp]
   128e0:	str	r0, [r9]
   128e4:	sub	r4, r4, r5
   128e8:	mov	r0, r4
   128ec:	sub	sp, fp, #28
   128f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128f4:	ldrdeq	ip, [r1], -r4

000128f8 <mycore_string_init@@Base>:
   128f8:	push	{r4, r5, r6, r7, fp, lr}
   128fc:	add	fp, sp, #16
   12900:	mov	r4, r3
   12904:	mov	r5, r2
   12908:	mov	r6, r1
   1290c:	mov	r7, r0
   12910:	mov	r2, r3
   12914:	bl	11d28 <mchar_async_malloc@plt>
   12918:	stm	r5, {r0, r4}
   1291c:	str	r7, [r5, #12]
   12920:	str	r6, [r5, #16]
   12924:	mov	r0, r5
   12928:	bl	120d0 <mycore_string_clean@plt>
   1292c:	ldr	r0, [r5]
   12930:	pop	{r4, r5, r6, r7, fp, pc}

00012934 <mycore_string_clean@@Base>:
   12934:	mov	r1, #0
   12938:	str	r1, [r0, #8]
   1293c:	bx	lr

00012940 <mycore_string_clean_all@@Base>:
   12940:	vmov.i32	q8, #0	; 0x00000000
   12944:	vst1.32	{d16-d17}, [r0]!
   12948:	mov	r1, #0
   1294c:	str	r1, [r0]
   12950:	bx	lr

00012954 <mycore_string_destroy@@Base>:
   12954:	push	{r4, r5, r6, sl, fp, lr}
   12958:	add	fp, sp, #16
   1295c:	mov	r4, #0
   12960:	cmp	r0, #0
   12964:	beq	129a0 <mycore_string_destroy@@Base+0x4c>
   12968:	mov	r6, r1
   1296c:	mov	r5, r0
   12970:	ldr	r2, [r0]
   12974:	cmp	r2, #0
   12978:	beq	12990 <mycore_string_destroy@@Base+0x3c>
   1297c:	ldr	r0, [r5, #12]
   12980:	cmp	r0, #0
   12984:	beq	12990 <mycore_string_destroy@@Base+0x3c>
   12988:	ldr	r1, [r5, #16]
   1298c:	bl	11b48 <mchar_async_free@plt>
   12990:	cmp	r6, #0
   12994:	beq	129a8 <mycore_string_destroy@@Base+0x54>
   12998:	mov	r0, r5
   1299c:	bl	12184 <mycore_free@plt>
   129a0:	mov	r0, r4
   129a4:	pop	{r4, r5, r6, sl, fp, pc}
   129a8:	mov	r0, r5
   129ac:	pop	{r4, r5, r6, sl, fp, pc}

000129b0 <mycore_string_raw_clean@@Base>:
   129b0:	mov	r1, #0
   129b4:	str	r1, [r0, #8]
   129b8:	bx	lr

000129bc <mycore_string_raw_clean_all@@Base>:
   129bc:	mov	r1, #0
   129c0:	str	r1, [r0]
   129c4:	str	r1, [r0, #4]
   129c8:	str	r1, [r0, #8]
   129cc:	bx	lr

000129d0 <mycore_string_raw_destroy@@Base>:
   129d0:	push	{r4, r5, r6, sl, fp, lr}
   129d4:	add	fp, sp, #16
   129d8:	mov	r4, #0
   129dc:	cmp	r0, #0
   129e0:	beq	12a14 <mycore_string_raw_destroy@@Base+0x44>
   129e4:	mov	r6, r1
   129e8:	mov	r5, r0
   129ec:	ldr	r0, [r0]
   129f0:	cmp	r0, #0
   129f4:	beq	12a04 <mycore_string_raw_destroy@@Base+0x34>
   129f8:	bl	12184 <mycore_free@plt>
   129fc:	mov	r0, #0
   12a00:	str	r0, [r5]
   12a04:	cmp	r6, #0
   12a08:	beq	12a1c <mycore_string_raw_destroy@@Base+0x4c>
   12a0c:	mov	r0, r5
   12a10:	bl	12184 <mycore_free@plt>
   12a14:	mov	r0, r4
   12a18:	pop	{r4, r5, r6, sl, fp, pc}
   12a1c:	mov	r0, r5
   12a20:	pop	{r4, r5, r6, sl, fp, pc}

00012a24 <mycore_string_realloc@@Base>:
   12a24:	push	{r4, r5, r6, sl, fp, lr}
   12a28:	add	fp, sp, #16
   12a2c:	sub	sp, sp, #8
   12a30:	mov	r4, #0
   12a34:	cmp	r0, #0
   12a38:	beq	12a68 <mycore_string_realloc@@Base+0x44>
   12a3c:	mov	r5, r1
   12a40:	mov	r6, r0
   12a44:	ldr	r2, [r0]
   12a48:	ldr	r3, [r0, #8]
   12a4c:	ldr	r0, [r0, #12]
   12a50:	ldr	r1, [r6, #16]
   12a54:	str	r5, [sp]
   12a58:	bl	1144c <mchar_async_realloc@plt>
   12a5c:	cmp	r0, #0
   12a60:	stmne	r6, {r0, r5}
   12a64:	movne	r4, r0
   12a68:	mov	r0, r4
   12a6c:	sub	sp, fp, #16
   12a70:	pop	{r4, r5, r6, sl, fp, pc}

00012a74 <mycore_string_data_alloc@@Base>:
   12a74:	b	11d28 <mchar_async_malloc@plt>

00012a78 <mycore_string_data_realloc@@Base>:
   12a78:	b	1144c <mchar_async_realloc@plt>

00012a7c <mycore_string_data_free@@Base>:
   12a7c:	b	11b48 <mchar_async_free@plt>

00012a80 <mycore_string_data@@Base>:
   12a80:	cmp	r0, #0
   12a84:	ldrne	r0, [r0]
   12a88:	moveq	r0, #0
   12a8c:	bx	lr

00012a90 <mycore_string_length@@Base>:
   12a90:	cmp	r0, #0
   12a94:	ldrne	r0, [r0, #8]
   12a98:	moveq	r0, #0
   12a9c:	bx	lr

00012aa0 <mycore_string_size@@Base>:
   12aa0:	cmp	r0, #0
   12aa4:	ldrne	r0, [r0, #4]
   12aa8:	moveq	r0, #0
   12aac:	bx	lr

00012ab0 <mycore_string_data_set@@Base>:
   12ab0:	cmp	r0, #0
   12ab4:	strne	r1, [r0]
   12ab8:	moveq	r1, #0
   12abc:	mov	r0, r1
   12ac0:	bx	lr

00012ac4 <mycore_string_size_set@@Base>:
   12ac4:	cmp	r0, #0
   12ac8:	strne	r1, [r0, #4]
   12acc:	moveq	r1, #0
   12ad0:	mov	r0, r1
   12ad4:	bx	lr

00012ad8 <mycore_string_length_set@@Base>:
   12ad8:	cmp	r0, #0
   12adc:	strne	r1, [r0, #8]
   12ae0:	moveq	r1, #0
   12ae4:	mov	r0, r1
   12ae8:	bx	lr

00012aec <mycore_string_append@@Base>:
   12aec:	push	{r4, r5, r6, sl, fp, lr}
   12af0:	add	fp, sp, #16
   12af4:	mov	r4, r2
   12af8:	mov	r6, r1
   12afc:	mov	r5, r0
   12b00:	ldr	r0, [r0, #4]
   12b04:	ldr	r1, [r5, #8]
   12b08:	add	r1, r2, r1
   12b0c:	add	r1, r1, #1
   12b10:	cmp	r1, r0
   12b14:	movcs	r0, r5
   12b18:	blcs	11d7c <mycore_string_realloc@plt>
   12b1c:	ldr	r0, [r5]
   12b20:	ldr	r1, [r5, #8]
   12b24:	add	r0, r0, r1
   12b28:	mov	r1, r6
   12b2c:	mov	r2, r4
   12b30:	bl	113ec <memcpy@plt>
   12b34:	ldr	r0, [r5]
   12b38:	ldr	r1, [r5, #8]
   12b3c:	add	r1, r1, r4
   12b40:	str	r1, [r5, #8]
   12b44:	mov	r2, #0
   12b48:	strb	r2, [r0, r1]
   12b4c:	pop	{r4, r5, r6, sl, fp, pc}

00012b50 <mycore_string_append_one@@Base>:
   12b50:	push	{r4, r5, fp, lr}
   12b54:	add	fp, sp, #8
   12b58:	mov	r5, r1
   12b5c:	mov	r4, r0
   12b60:	ldr	r1, [r0, #4]
   12b64:	ldr	r0, [r0, #8]
   12b68:	add	r2, r0, #2
   12b6c:	cmp	r2, r1
   12b70:	addcs	r1, r0, #3
   12b74:	movcs	r0, r4
   12b78:	blcs	11d7c <mycore_string_realloc@plt>
   12b7c:	ldr	r0, [r4]
   12b80:	ldr	r1, [r4, #8]
   12b84:	strb	r5, [r0, r1]
   12b88:	ldr	r0, [r4]
   12b8c:	ldr	r1, [r4, #8]
   12b90:	add	r1, r1, #1
   12b94:	str	r1, [r4, #8]
   12b98:	mov	r2, #0
   12b9c:	strb	r2, [r0, r1]
   12ba0:	pop	{r4, r5, fp, pc}

00012ba4 <mycore_string_append_lowercase@@Base>:
   12ba4:	push	{r4, r5, r6, sl, fp, lr}
   12ba8:	add	fp, sp, #16
   12bac:	mov	r4, r2
   12bb0:	mov	r6, r1
   12bb4:	mov	r5, r0
   12bb8:	ldr	r0, [r0, #4]
   12bbc:	ldr	r1, [r5, #8]
   12bc0:	add	r1, r2, r1
   12bc4:	add	r1, r1, #1
   12bc8:	cmp	r1, r0
   12bcc:	movcs	r0, r5
   12bd0:	blcs	11d7c <mycore_string_realloc@plt>
   12bd4:	ldr	r0, [r5]
   12bd8:	ldr	r1, [r5, #8]
   12bdc:	add	ip, r0, r1
   12be0:	cmp	r4, #0
   12be4:	beq	12c0c <mycore_string_append_lowercase@@Base+0x68>
   12be8:	ldr	r1, [pc, #52]	; 12c24 <mycore_string_append_lowercase@@Base+0x80>
   12bec:	add	r1, pc, r1
   12bf0:	mov	r2, ip
   12bf4:	mov	r3, r4
   12bf8:	ldrb	r0, [r6], #1
   12bfc:	ldrb	r0, [r1, r0]
   12c00:	strb	r0, [r2], #1
   12c04:	subs	r3, r3, #1
   12c08:	bne	12bf8 <mycore_string_append_lowercase@@Base+0x54>
   12c0c:	mov	r0, #0
   12c10:	strb	r0, [ip, r4]
   12c14:	ldr	r0, [r5, #8]
   12c18:	add	r0, r0, r4
   12c1c:	str	r0, [r5, #8]
   12c20:	pop	{r4, r5, r6, sl, fp, pc}
   12c24:	andeq	ip, r1, ip, lsl #26

00012c28 <mycore_string_copy@@Base>:
   12c28:	ldr	r3, [r1]
   12c2c:	ldr	r2, [r1, #8]
   12c30:	mov	r1, r3
   12c34:	b	12aec <mycore_string_append@@Base>

00012c38 <mycore_string_raw_copy@@Base>:
   12c38:	mov	r3, #0
   12c3c:	strb	r3, [r0, r2]
   12c40:	cmp	r2, #0
   12c44:	beq	12c60 <mycore_string_raw_copy@@Base+0x28>
   12c48:	sub	r1, r1, #1
   12c4c:	sub	r0, r0, #1
   12c50:	ldrb	r3, [r1, r2]
   12c54:	strb	r3, [r0, r2]
   12c58:	subs	r2, r2, #1
   12c5c:	bne	12c50 <mycore_string_raw_copy@@Base+0x18>
   12c60:	mov	r0, #0
   12c64:	bx	lr

00012c68 <mycore_string_raw_set_replacement_character@@Base>:
   12c68:	ldr	r2, [r0]
   12c6c:	mov	r3, #239	; 0xef
   12c70:	strb	r3, [r2, r1]
   12c74:	ldr	r2, [r0]
   12c78:	add	r2, r1, r2
   12c7c:	mov	r3, #191	; 0xbf
   12c80:	strb	r3, [r2, #1]
   12c84:	ldr	r0, [r0]
   12c88:	add	r0, r1, r0
   12c8c:	mov	r1, #189	; 0xbd
   12c90:	strb	r1, [r0, #2]
   12c94:	mov	r0, #3
   12c98:	bx	lr

00012c9c <mycore_string_append_with_replacement_null_characters@@Base>:
   12c9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12ca0:	add	fp, sp, #24
   12ca4:	mov	r5, r2
   12ca8:	mov	r6, r1
   12cac:	mov	r4, r0
   12cb0:	ldr	r0, [r0, #4]
   12cb4:	ldr	r1, [r4, #8]
   12cb8:	add	r1, r2, r1
   12cbc:	add	r1, r1, #1
   12cc0:	cmp	r1, r0
   12cc4:	movcs	r0, r4
   12cc8:	blcs	11d7c <mycore_string_realloc@plt>
   12ccc:	cmp	r5, #0
   12cd0:	beq	12d58 <mycore_string_append_with_replacement_null_characters@@Base+0xbc>
   12cd4:	ldr	r0, [r4]
   12cd8:	mov	r8, #239	; 0xef
   12cdc:	mov	r7, #191	; 0xbf
   12ce0:	b	12d08 <mycore_string_append_with_replacement_null_characters@@Base+0x6c>
   12ce4:	ldr	r2, [r4, #8]
   12ce8:	add	r2, r0, r2
   12cec:	strb	r1, [r2]
   12cf0:	ldr	r1, [r4, #8]
   12cf4:	add	r1, r1, #1
   12cf8:	str	r1, [r4, #8]
   12cfc:	add	r6, r6, #1
   12d00:	subs	r5, r5, #1
   12d04:	beq	12d58 <mycore_string_append_with_replacement_null_characters@@Base+0xbc>
   12d08:	ldrb	r1, [r6]
   12d0c:	cmp	r1, #0
   12d10:	bne	12ce4 <mycore_string_append_with_replacement_null_characters@@Base+0x48>
   12d14:	ldr	r0, [r4, #4]
   12d18:	add	r1, r0, #5
   12d1c:	mov	r0, r4
   12d20:	bl	11d7c <mycore_string_realloc@plt>
   12d24:	ldr	r0, [r4]
   12d28:	ldr	r1, [r4, #8]
   12d2c:	strb	r8, [r0, r1]
   12d30:	ldr	r1, [r4, #8]
   12d34:	add	r1, r1, #1
   12d38:	str	r1, [r4, #8]
   12d3c:	strb	r7, [r0, r1]
   12d40:	ldr	r1, [r4, #8]
   12d44:	add	r1, r1, #1
   12d48:	str	r1, [r4, #8]
   12d4c:	add	r2, r0, r1
   12d50:	mov	r1, #189	; 0xbd
   12d54:	b	12cec <mycore_string_append_with_replacement_null_characters@@Base+0x50>
   12d58:	ldr	r0, [r4]
   12d5c:	ldr	r1, [r4, #8]
   12d60:	mov	r2, #0
   12d64:	strb	r2, [r0, r1]
   12d68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012d6c <mycore_string_stay_only_whitespace@@Base>:
   12d6c:	push	{r4, r5, fp, lr}
   12d70:	add	fp, sp, #8
   12d74:	ldr	r1, [r0, #8]
   12d78:	cmp	r1, #0
   12d7c:	beq	12dcc <mycore_string_stay_only_whitespace@@Base+0x60>
   12d80:	ldr	r1, [r0]
   12d84:	mov	r3, #0
   12d88:	mov	ip, #1
   12d8c:	movw	lr, #27
   12d90:	movt	lr, #128	; 0x80
   12d94:	mov	r2, #0
   12d98:	ldrb	r4, [r1, r3]
   12d9c:	sub	r5, r4, #9
   12da0:	cmp	r5, #23
   12da4:	bhi	12db4 <mycore_string_stay_only_whitespace@@Base+0x48>
   12da8:	tst	lr, ip, lsl r5
   12dac:	strbne	r4, [r1, r2]
   12db0:	addne	r2, r2, #1
   12db4:	ldr	r4, [r0, #8]
   12db8:	add	r3, r3, #1
   12dbc:	cmp	r3, r4
   12dc0:	bcc	12d98 <mycore_string_stay_only_whitespace@@Base+0x2c>
   12dc4:	str	r2, [r0, #8]
   12dc8:	pop	{r4, r5, fp, pc}
   12dcc:	mov	r2, #0
   12dd0:	str	r2, [r0, #8]
   12dd4:	pop	{r4, r5, fp, pc}

00012dd8 <mycore_string_crop_whitespace_from_begin@@Base>:
   12dd8:	push	{r4, r5, fp, lr}
   12ddc:	add	fp, sp, #8
   12de0:	mov	r4, r0
   12de4:	ldr	r0, [r0, #8]
   12de8:	cmp	r0, #0
   12dec:	beq	12e48 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   12df0:	ldr	r0, [r4]
   12df4:	mov	r5, #0
   12df8:	mov	r1, #1
   12dfc:	movw	r2, #27
   12e00:	movt	r2, #128	; 0x80
   12e04:	ldrb	r3, [r0, r5]
   12e08:	sub	r3, r3, #9
   12e0c:	cmp	r3, #23
   12e10:	bhi	12e30 <mycore_string_crop_whitespace_from_begin@@Base+0x58>
   12e14:	tst	r2, r1, lsl r3
   12e18:	beq	12e30 <mycore_string_crop_whitespace_from_begin@@Base+0x58>
   12e1c:	ldr	r3, [r4, #8]
   12e20:	add	r5, r5, #1
   12e24:	cmp	r5, r3
   12e28:	bcc	12e04 <mycore_string_crop_whitespace_from_begin@@Base+0x2c>
   12e2c:	b	12e38 <mycore_string_crop_whitespace_from_begin@@Base+0x60>
   12e30:	cmp	r5, #0
   12e34:	beq	12e48 <mycore_string_crop_whitespace_from_begin@@Base+0x70>
   12e38:	mov	r1, r5
   12e3c:	bl	1201c <mchar_async_crop_first_chars_without_cache@plt>
   12e40:	str	r0, [r4]
   12e44:	b	12e4c <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   12e48:	mov	r5, #0
   12e4c:	ldr	r0, [r4, #8]
   12e50:	sub	r0, r0, r5
   12e54:	str	r0, [r4, #8]
   12e58:	mov	r0, r5
   12e5c:	pop	{r4, r5, fp, pc}

00012e60 <mycore_string_whitespace_from_begin@@Base>:
   12e60:	push	{fp, lr}
   12e64:	mov	fp, sp
   12e68:	mov	r1, r0
   12e6c:	ldr	r0, [r0, #8]
   12e70:	cmp	r0, #0
   12e74:	beq	12eb8 <mycore_string_whitespace_from_begin@@Base+0x58>
   12e78:	ldr	r2, [r1]
   12e7c:	mov	r0, #0
   12e80:	mov	ip, #1
   12e84:	movw	lr, #27
   12e88:	movt	lr, #128	; 0x80
   12e8c:	ldrb	r3, [r2, r0]
   12e90:	sub	r3, r3, #9
   12e94:	cmp	r3, #23
   12e98:	bhi	12eb4 <mycore_string_whitespace_from_begin@@Base+0x54>
   12e9c:	tst	lr, ip, lsl r3
   12ea0:	beq	12eb4 <mycore_string_whitespace_from_begin@@Base+0x54>
   12ea4:	ldr	r3, [r1, #8]
   12ea8:	add	r0, r0, #1
   12eac:	cmp	r0, r3
   12eb0:	bcc	12e8c <mycore_string_whitespace_from_begin@@Base+0x2c>
   12eb4:	pop	{fp, pc}
   12eb8:	mov	r0, #0
   12ebc:	pop	{fp, pc}

00012ec0 <mythread_create@@Base>:
   12ec0:	mov	r0, #1
   12ec4:	mov	r1, #40	; 0x28
   12ec8:	b	113a4 <mycore_calloc@plt>

00012ecc <mythread_init@@Base>:
   12ecc:	push	{r4, sl, fp, lr}
   12ed0:	add	fp, sp, #8
   12ed4:	cmp	r2, #0
   12ed8:	beq	12f2c <mythread_init@@Base+0x60>
   12edc:	mov	r4, r0
   12ee0:	str	r1, [r0, #32]
   12ee4:	mov	r0, #0
   12ee8:	stmib	r4, {r0, r2, r3}
   12eec:	mov	r0, r2
   12ef0:	mov	r1, #40	; 0x28
   12ef4:	bl	113a4 <mycore_calloc@plt>
   12ef8:	str	r0, [r4]
   12efc:	cmp	r0, #0
   12f00:	beq	12f34 <mythread_init@@Base+0x68>
   12f04:	mov	r0, r4
   12f08:	bl	11320 <mythread_thread_attr_init@plt>
   12f0c:	str	r0, [r4, #20]
   12f10:	cmp	r0, #0
   12f14:	beq	12f3c <mythread_init@@Base+0x70>
   12f18:	mov	r0, r4
   12f1c:	bl	11170 <mythread_nanosleep_create@plt>
   12f20:	str	r0, [r4, #24]
   12f24:	mov	r0, #0
   12f28:	pop	{r4, sl, fp, pc}
   12f2c:	mov	r0, #1
   12f30:	pop	{r4, sl, fp, pc}
   12f34:	mov	r0, #2
   12f38:	pop	{r4, sl, fp, pc}
   12f3c:	mov	r0, #12
   12f40:	pop	{r4, sl, fp, pc}

00012f44 <mythread_clean@@Base>:
   12f44:	push	{r4, sl, fp, lr}
   12f48:	add	fp, sp, #8
   12f4c:	mov	r4, r0
   12f50:	ldr	r1, [r0, #20]
   12f54:	bl	1183c <mythread_thread_attr_clean@plt>
   12f58:	ldr	r0, [r4, #24]
   12f5c:	bl	11128 <mythread_nanosleep_clean@plt>
   12f60:	mov	r0, #0
   12f64:	str	r0, [r4, #28]
   12f68:	pop	{r4, sl, fp, pc}

00012f6c <mythread_destroy@@Base>:
   12f6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12f70:	add	fp, sp, #24
   12f74:	mov	r4, #0
   12f78:	cmp	r0, #0
   12f7c:	beq	12fe4 <mythread_destroy@@Base+0x78>
   12f80:	mov	r8, r3
   12f84:	mov	r5, r0
   12f88:	ldr	r0, [r0]
   12f8c:	cmp	r0, #0
   12f90:	beq	12fc0 <mythread_destroy@@Base+0x54>
   12f94:	mov	r7, r2
   12f98:	mov	r6, r1
   12f9c:	mov	r0, r5
   12fa0:	mov	r1, #2
   12fa4:	bl	118f0 <mythread_resume@plt>
   12fa8:	mov	r0, r5
   12fac:	mov	r1, r6
   12fb0:	mov	r2, r7
   12fb4:	bl	119bc <mythread_quit@plt>
   12fb8:	ldr	r0, [r5]
   12fbc:	bl	12184 <mycore_free@plt>
   12fc0:	ldr	r1, [r5, #20]
   12fc4:	mov	r0, r5
   12fc8:	bl	12418 <mythread_thread_attr_destroy@plt>
   12fcc:	ldr	r0, [r5, #24]
   12fd0:	bl	11fbc <mythread_nanosleep_destroy@plt>
   12fd4:	cmp	r8, #0
   12fd8:	beq	12fec <mythread_destroy@@Base+0x80>
   12fdc:	mov	r0, r5
   12fe0:	bl	12184 <mycore_free@plt>
   12fe4:	mov	r0, r4
   12fe8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12fec:	mov	r0, r5
   12ff0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012ff4 <mythread_resume@@Base>:
   12ff4:	push	{r4, r5, r6, r7, fp, lr}
   12ff8:	add	fp, sp, #16
   12ffc:	mov	r4, r1
   13000:	mov	r5, r0
   13004:	ldr	r6, [r0, #36]	; 0x24
   13008:	bl	11ed8 <mythread_option_set@plt>
   1300c:	mov	r0, #0
   13010:	tst	r6, #1
   13014:	bne	1307c <mythread_resume@@Base+0x88>
   13018:	ldr	r1, [r5, #4]
   1301c:	cmp	r1, #0
   13020:	beq	1307c <mythread_resume@@Base+0x88>
   13024:	mov	r6, #0
   13028:	mov	r7, #0
   1302c:	b	13044 <mythread_resume@@Base+0x50>
   13030:	add	r6, r6, #40	; 0x28
   13034:	add	r7, r7, #1
   13038:	ldr	r0, [r5, #4]
   1303c:	cmp	r7, r0
   13040:	bcs	13078 <mythread_resume@@Base+0x84>
   13044:	ldr	r0, [r5]
   13048:	add	r0, r0, r6
   1304c:	ldr	r1, [r0, #16]
   13050:	tst	r1, #4
   13054:	beq	13030 <mythread_resume@@Base+0x3c>
   13058:	str	r4, [r0, #16]
   1305c:	ldr	r1, [r0, #24]
   13060:	mov	r0, r5
   13064:	bl	120c4 <mythread_mutex_post@plt>
   13068:	cmp	r0, #0
   1306c:	beq	13030 <mythread_resume@@Base+0x3c>
   13070:	mov	r0, #1
   13074:	pop	{r4, r5, r6, r7, fp, pc}
   13078:	mov	r0, #0
   1307c:	pop	{r4, r5, r6, r7, fp, pc}

00013080 <mythread_quit@@Base>:
   13080:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13084:	add	fp, sp, #24
   13088:	mov	r8, r2
   1308c:	mov	r9, r1
   13090:	mov	r6, r0
   13094:	mov	r1, #2
   13098:	bl	11ed8 <mythread_option_set@plt>
   1309c:	ldr	r0, [r6, #4]
   130a0:	cmp	r0, #0
   130a4:	beq	13114 <mythread_quit@@Base+0x94>
   130a8:	mov	r4, #0
   130ac:	mov	r5, #0
   130b0:	mov	r7, #1
   130b4:	cmp	r9, #0
   130b8:	beq	130d0 <mythread_quit@@Base+0x50>
   130bc:	ldr	r0, [r6]
   130c0:	add	r1, r0, r4
   130c4:	mov	r0, r6
   130c8:	mov	r2, r8
   130cc:	blx	r9
   130d0:	ldr	r0, [r6]
   130d4:	ldr	r1, [r0, r4]
   130d8:	mov	r0, r6
   130dc:	bl	11998 <mythread_thread_join@plt>
   130e0:	cmp	r0, #0
   130e4:	bne	13118 <mythread_quit@@Base+0x98>
   130e8:	ldr	r0, [r6]
   130ec:	ldr	r1, [r0, r4]
   130f0:	mov	r0, r6
   130f4:	bl	11df4 <mythread_thread_destroy@plt>
   130f8:	cmp	r0, #0
   130fc:	bne	13118 <mythread_quit@@Base+0x98>
   13100:	add	r5, r5, #1
   13104:	add	r4, r4, #40	; 0x28
   13108:	ldr	r0, [r6, #4]
   1310c:	cmp	r5, r0
   13110:	bcc	130b4 <mythread_quit@@Base+0x34>
   13114:	mov	r7, #0
   13118:	mov	r0, r7
   1311c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013120 <myhread_entry_create@@Base>:
   13120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13124:	add	fp, sp, #28
   13128:	sub	sp, sp, #4
   1312c:	mov	r8, r1
   13130:	mov	r4, r0
   13134:	mov	r6, #0
   13138:	str	r6, [r0, #28]
   1313c:	ldmib	r0, {r1, r5}
   13140:	mov	r0, #15
   13144:	cmp	r1, r5
   13148:	bcs	131f8 <myhread_entry_create@@Base+0xd8>
   1314c:	ldr	r9, [r4]
   13150:	add	sl, r1, r1, lsl #2
   13154:	add	r7, r9, sl, lsl #3
   13158:	str	r5, [r7, #12]
   1315c:	str	r2, [r7, #8]
   13160:	str	r4, [r7, #32]
   13164:	str	r6, [r7, #20]
   13168:	str	r3, [r7, #16]
   1316c:	mov	r6, r7
   13170:	str	r1, [r6, #4]!
   13174:	mov	r0, r4
   13178:	bl	11170 <mythread_nanosleep_create@plt>
   1317c:	str	r0, [r7, #28]
   13180:	mov	r0, r4
   13184:	bl	11ef0 <mythread_mutex_create@plt>
   13188:	str	r0, [r7, #24]!
   1318c:	cmp	r0, #0
   13190:	beq	131c0 <myhread_entry_create@@Base+0xa0>
   13194:	mov	r1, r0
   13198:	mov	r0, r4
   1319c:	bl	12154 <mythread_mutex_wait@plt>
   131a0:	cmp	r0, #0
   131a4:	beq	131cc <myhread_entry_create@@Base+0xac>
   131a8:	ldr	r1, [r7]
   131ac:	mov	r0, r4
   131b0:	bl	11a58 <mythread_mutex_close@plt>
   131b4:	mov	r0, #72	; 0x48
   131b8:	sub	sp, fp, #28
   131bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131c0:	mov	r0, #71	; 0x47
   131c4:	sub	sp, fp, #28
   131c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131cc:	mov	r0, r4
   131d0:	mov	r1, r8
   131d4:	mov	r2, r6
   131d8:	bl	11248 <mythread_thread_create@plt>
   131dc:	str	r0, [r9, sl, lsl #3]
   131e0:	cmp	r0, #0
   131e4:	beq	13200 <myhread_entry_create@@Base+0xe0>
   131e8:	ldr	r0, [r4, #4]
   131ec:	add	r0, r0, #1
   131f0:	str	r0, [r4, #4]
   131f4:	mov	r0, #0
   131f8:	sub	sp, fp, #28
   131fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13200:	ldr	r1, [r7]
   13204:	mov	r0, r4
   13208:	bl	11a58 <mythread_mutex_close@plt>
   1320c:	mov	r0, #1
   13210:	sub	sp, fp, #28
   13214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013218 <myhread_increase_id_by_entry_id@@Base>:
   13218:	ldr	r0, [r0, #12]
   1321c:	add	r0, r0, r1
   13220:	bx	lr

00013224 <mythread_join@@Base>:
   13224:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13228:	add	fp, sp, #24
   1322c:	mov	r6, r0
   13230:	ldr	r0, [r0, #4]
   13234:	cmp	r0, #0
   13238:	beq	13294 <mythread_join@@Base+0x70>
   1323c:	mov	r8, r2
   13240:	mov	r5, r1
   13244:	mov	r7, #0
   13248:	mov	r4, #0
   1324c:	cmp	r5, #0
   13250:	beq	13268 <mythread_join@@Base+0x44>
   13254:	ldr	r0, [r6]
   13258:	add	r1, r0, r7
   1325c:	mov	r0, r6
   13260:	mov	r2, r8
   13264:	blx	r5
   13268:	ldr	r0, [r6]
   1326c:	ldr	r1, [r0, r7]
   13270:	mov	r0, r6
   13274:	bl	11998 <mythread_thread_join@plt>
   13278:	cmp	r0, #0
   1327c:	bne	1329c <mythread_join@@Base+0x78>
   13280:	add	r4, r4, #1
   13284:	add	r7, r7, #40	; 0x28
   13288:	ldr	r0, [r6, #4]
   1328c:	cmp	r4, r0
   13290:	bcc	1324c <mythread_join@@Base+0x28>
   13294:	mov	r0, #0
   13298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1329c:	mov	r0, #1
   132a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000132a4 <mythread_option_set@@Base>:
   132a4:	str	r1, [r0, #36]	; 0x24
   132a8:	bx	lr

000132ac <mythread_stop@@Base>:
   132ac:	push	{r4, r5, r6, sl, fp, lr}
   132b0:	add	fp, sp, #16
   132b4:	mov	r4, r0
   132b8:	ldr	r0, [r0, #36]	; 0x24
   132bc:	tst	r0, #4
   132c0:	bne	1331c <mythread_stop@@Base+0x70>
   132c4:	mov	r0, r4
   132c8:	mov	r1, #4
   132cc:	bl	11ed8 <mythread_option_set@plt>
   132d0:	ldr	r0, [r4, #4]
   132d4:	cmp	r0, #0
   132d8:	beq	1331c <mythread_stop@@Base+0x70>
   132dc:	mov	r5, #0
   132e0:	b	132f4 <mythread_stop@@Base+0x48>
   132e4:	ldr	r0, [r4, #4]
   132e8:	add	r5, r5, #1
   132ec:	cmp	r5, r0
   132f0:	bcs	1331c <mythread_stop@@Base+0x70>
   132f4:	ldr	r0, [r4]
   132f8:	add	r6, r5, r5, lsl #2
   132fc:	add	r0, r0, r6, lsl #3
   13300:	ldr	r0, [r0, #16]
   13304:	tst	r0, #4
   13308:	bne	132e4 <mythread_stop@@Base+0x38>
   1330c:	ldr	r0, [r4, #24]
   13310:	bl	11518 <mythread_nanosleep_sleep@plt>
   13314:	ldr	r0, [r4]
   13318:	b	132fc <mythread_stop@@Base+0x50>
   1331c:	mov	r0, #0
   13320:	pop	{r4, r5, r6, sl, fp, pc}

00013324 <mythread_suspend@@Base>:
   13324:	push	{r4, r5, r6, sl, fp, lr}
   13328:	add	fp, sp, #16
   1332c:	mov	r4, r0
   13330:	ldr	r0, [r0, #36]	; 0x24
   13334:	tst	r0, #1
   13338:	bne	13398 <mythread_suspend@@Base+0x74>
   1333c:	mov	r0, r4
   13340:	mov	r1, #1
   13344:	bl	11ed8 <mythread_option_set@plt>
   13348:	ldr	r0, [r4, #4]
   1334c:	cmp	r0, #0
   13350:	beq	13398 <mythread_suspend@@Base+0x74>
   13354:	mov	r5, #0
   13358:	ldr	r0, [r4]
   1335c:	add	r6, r5, r5, lsl #2
   13360:	b	13370 <mythread_suspend@@Base+0x4c>
   13364:	ldr	r0, [r4, #24]
   13368:	bl	11518 <mythread_nanosleep_sleep@plt>
   1336c:	ldr	r0, [r4]
   13370:	add	r0, r0, r6, lsl #3
   13374:	ldr	r1, [r0, #16]!
   13378:	tst	r1, #4
   1337c:	ldreq	r0, [r0]
   13380:	tsteq	r0, #1
   13384:	beq	13364 <mythread_suspend@@Base+0x40>
   13388:	ldr	r0, [r4, #4]
   1338c:	add	r5, r5, #1
   13390:	cmp	r5, r0
   13394:	bcc	13358 <mythread_suspend@@Base+0x34>
   13398:	mov	r0, #0
   1339c:	pop	{r4, r5, r6, sl, fp, pc}

000133a0 <mythread_check_status@@Base>:
   133a0:	ldr	r1, [r0, #4]
   133a4:	cmp	r1, #0
   133a8:	beq	133dc <mythread_check_status@@Base+0x3c>
   133ac:	ldr	r1, [r0]
   133b0:	add	r2, r1, #20
   133b4:	mov	r3, #0
   133b8:	ldr	r1, [r2]
   133bc:	cmp	r1, #0
   133c0:	movne	r0, r1
   133c4:	bxne	lr
   133c8:	add	r3, r3, #1
   133cc:	add	r2, r2, #40	; 0x28
   133d0:	ldr	r1, [r0, #4]
   133d4:	cmp	r3, r1
   133d8:	bcc	133b8 <mythread_check_status@@Base+0x18>
   133dc:	mov	r1, #0
   133e0:	mov	r0, r1
   133e4:	bx	lr

000133e8 <mythread_option@@Base>:
   133e8:	ldr	r0, [r0, #36]	; 0x24
   133ec:	bx	lr

000133f0 <mythread_entry_join@@Base>:
   133f0:	push	{r4, sl, fp, lr}
   133f4:	add	fp, sp, #8
   133f8:	mov	r4, r0
   133fc:	cmp	r1, #0
   13400:	beq	13414 <mythread_entry_join@@Base+0x24>
   13404:	mov	r3, r1
   13408:	ldr	r0, [r4, #32]
   1340c:	mov	r1, r4
   13410:	blx	r3
   13414:	ldr	r1, [r4]
   13418:	ldr	r0, [r4, #32]
   1341c:	bl	11998 <mythread_thread_join@plt>
   13420:	cmp	r0, #0
   13424:	movwne	r0, #1
   13428:	pop	{r4, sl, fp, pc}

0001342c <mythread_entry_quit@@Base>:
   1342c:	push	{r4, sl, fp, lr}
   13430:	add	fp, sp, #8
   13434:	mov	r4, r0
   13438:	cmp	r1, #0
   1343c:	beq	13450 <mythread_entry_quit@@Base+0x24>
   13440:	mov	r3, r1
   13444:	ldr	r0, [r4, #32]
   13448:	mov	r1, r4
   1344c:	blx	r3
   13450:	ldr	r1, [r4]
   13454:	ldr	r0, [r4, #32]
   13458:	bl	11998 <mythread_thread_join@plt>
   1345c:	cmp	r0, #0
   13460:	movne	r0, #1
   13464:	popne	{r4, sl, fp, pc}
   13468:	ldr	r1, [r4]
   1346c:	ldr	r0, [r4, #32]
   13470:	bl	11df4 <mythread_thread_destroy@plt>
   13474:	cmp	r0, #0
   13478:	movwne	r0, #1
   1347c:	pop	{r4, sl, fp, pc}

00013480 <mythread_entry_stop@@Base>:
   13480:	push	{r4, sl, fp, lr}
   13484:	add	fp, sp, #8
   13488:	mov	r4, r0
   1348c:	ldr	r0, [r0, #16]
   13490:	tst	r0, #4
   13494:	bne	134bc <mythread_entry_stop@@Base+0x3c>
   13498:	mov	r0, #4
   1349c:	str	r0, [r4, #16]
   134a0:	ldr	r0, [r4, #16]
   134a4:	tst	r0, #4
   134a8:	bne	134bc <mythread_entry_stop@@Base+0x3c>
   134ac:	ldr	r0, [r4, #32]
   134b0:	ldr	r0, [r0, #24]
   134b4:	bl	11518 <mythread_nanosleep_sleep@plt>
   134b8:	b	134a0 <mythread_entry_stop@@Base+0x20>
   134bc:	mov	r0, #0
   134c0:	pop	{r4, sl, fp, pc}

000134c4 <mythread_entry_suspend@@Base>:
   134c4:	push	{r4, sl, fp, lr}
   134c8:	add	fp, sp, #8
   134cc:	mov	r4, r0
   134d0:	ldr	r0, [r0, #16]
   134d4:	tst	r0, #1
   134d8:	bne	13508 <mythread_entry_suspend@@Base+0x44>
   134dc:	mov	r0, #1
   134e0:	str	r0, [r4, #16]
   134e4:	b	134f4 <mythread_entry_suspend@@Base+0x30>
   134e8:	ldr	r0, [r4, #32]
   134ec:	ldr	r0, [r0, #24]
   134f0:	bl	11518 <mythread_nanosleep_sleep@plt>
   134f4:	ldr	r0, [r4, #16]
   134f8:	tst	r0, #4
   134fc:	ldreq	r0, [r4, #16]
   13500:	tsteq	r0, #1
   13504:	beq	134e8 <mythread_entry_suspend@@Base+0x24>
   13508:	mov	r0, #0
   1350c:	pop	{r4, sl, fp, pc}

00013510 <mythread_entry_resume@@Base>:
   13510:	push	{fp, lr}
   13514:	mov	fp, sp
   13518:	ldr	r2, [r0, #16]
   1351c:	tst	r2, #1
   13520:	bne	13554 <mythread_entry_resume@@Base+0x44>
   13524:	ldr	r2, [r0, #16]
   13528:	str	r1, [r0, #16]
   1352c:	tst	r2, #4
   13530:	beq	13558 <mythread_entry_resume@@Base+0x48>
   13534:	ldr	r1, [r0, #24]
   13538:	ldr	r0, [r0, #32]
   1353c:	bl	120c4 <mythread_mutex_post@plt>
   13540:	mov	r1, r0
   13544:	mov	r0, #1
   13548:	cmp	r1, #0
   1354c:	moveq	r0, #0
   13550:	pop	{fp, pc}
   13554:	str	r1, [r0, #16]
   13558:	mov	r0, #0
   1355c:	pop	{fp, pc}

00013560 <mythread_entry_status@@Base>:
   13560:	ldr	r0, [r0, #20]
   13564:	bx	lr

00013568 <mythread_entry_mythread@@Base>:
   13568:	ldr	r0, [r0, #32]
   1356c:	bx	lr

00013570 <mythread_callback_quit@@Base>:
   13570:	push	{r4, r5, fp, lr}
   13574:	add	fp, sp, #8
   13578:	mov	r5, r0
   1357c:	ldr	r0, [r1, #16]
   13580:	tst	r0, #2
   13584:	popne	{r4, r5, fp, pc}
   13588:	mov	r4, r1
   1358c:	ldr	r0, [r5, #24]
   13590:	bl	11518 <mythread_nanosleep_sleep@plt>
   13594:	ldr	r0, [r4, #16]
   13598:	tst	r0, #2
   1359c:	beq	1358c <mythread_callback_quit@@Base+0x1c>
   135a0:	pop	{r4, r5, fp, pc}

000135a4 <mythread_queue_create@@Base>:
   135a4:	mov	r0, #1
   135a8:	mov	r1, #28
   135ac:	b	113a4 <mycore_calloc@plt>

000135b0 <mythread_queue_init@@Base>:
   135b0:	push	{r4, sl, fp, lr}
   135b4:	add	fp, sp, #8
   135b8:	mov	r4, r0
   135bc:	mov	r0, #512	; 0x200
   135c0:	str	r0, [r4, #8]
   135c4:	cmp	r1, #32
   135c8:	movls	r1, #32
   135cc:	str	r1, [r4, #20]
   135d0:	mov	r0, #512	; 0x200
   135d4:	mov	r1, #4
   135d8:	bl	113a4 <mycore_calloc@plt>
   135dc:	str	r0, [r4]
   135e0:	cmp	r0, #0
   135e4:	beq	13628 <mythread_queue_init@@Base+0x78>
   135e8:	ldr	r0, [r4, #20]
   135ec:	add	r0, r0, r0, lsl #1
   135f0:	lsl	r0, r0, #2
   135f4:	bl	1204c <mycore_malloc@plt>
   135f8:	ldm	r4, {r1, r2}
   135fc:	str	r0, [r1, r2, lsl #2]
   13600:	ldr	r1, [r4]
   13604:	ldr	r2, [r1, r2, lsl #2]
   13608:	mov	r0, #0
   1360c:	cmp	r2, #0
   13610:	popne	{r4, sl, fp, pc}
   13614:	mov	r0, r1
   13618:	bl	12184 <mycore_free@plt>
   1361c:	str	r0, [r4]
   13620:	mov	r0, #62	; 0x3e
   13624:	pop	{r4, sl, fp, pc}
   13628:	mov	r0, #61	; 0x3d
   1362c:	pop	{r4, sl, fp, pc}

00013630 <mythread_queue_clean@@Base>:
   13630:	mov	r1, #0
   13634:	str	r1, [r0, #24]
   13638:	str	r1, [r0, #4]
   1363c:	str	r1, [r0, #12]
   13640:	str	r1, [r0, #16]
   13644:	bx	lr

00013648 <mythread_queue_destroy@@Base>:
   13648:	cmp	r0, #0
   1364c:	beq	1369c <mythread_queue_destroy@@Base+0x54>
   13650:	push	{r4, r5, fp, lr}
   13654:	add	fp, sp, #8
   13658:	mov	r4, r0
   1365c:	ldr	r0, [r0]
   13660:	cmp	r0, #0
   13664:	beq	13690 <mythread_queue_destroy@@Base+0x48>
   13668:	mov	r5, #0
   1366c:	ldr	r0, [r4]
   13670:	ldr	r0, [r0, r5, lsl #2]
   13674:	bl	12184 <mycore_free@plt>
   13678:	add	r5, r5, #1
   1367c:	ldr	r0, [r4, #4]
   13680:	cmp	r5, r0
   13684:	bls	1366c <mythread_queue_destroy@@Base+0x24>
   13688:	ldr	r0, [r4]
   1368c:	bl	12184 <mycore_free@plt>
   13690:	mov	r0, r4
   13694:	bl	12184 <mycore_free@plt>
   13698:	pop	{r4, r5, fp, lr}
   1369c:	mov	r0, #0
   136a0:	bx	lr

000136a4 <mythread_queue_node_clean@@Base>:
   136a4:	mov	r1, #0
   136a8:	str	r1, [r0]
   136ac:	str	r1, [r0, #4]
   136b0:	str	r1, [r0, #8]
   136b4:	bx	lr

000136b8 <mythread_queue_get_prev_node@@Base>:
   136b8:	ldr	r0, [r0, #8]
   136bc:	bx	lr

000136c0 <mythread_queue_get_current_node@@Base>:
   136c0:	ldm	r0, {r1, r2}
   136c4:	ldr	r0, [r0, #12]
   136c8:	ldr	r1, [r1, r2, lsl #2]
   136cc:	add	r0, r0, r0, lsl #1
   136d0:	add	r0, r1, r0, lsl #2
   136d4:	bx	lr

000136d8 <mythread_queue_get_first_node@@Base>:
   136d8:	ldr	r0, [r0]
   136dc:	ldr	r0, [r0]
   136e0:	bx	lr

000136e4 <mythread_queue_count_used_node@@Base>:
   136e4:	ldr	r0, [r0, #16]
   136e8:	bx	lr

000136ec <mythread_queue_node_malloc@@Base>:
   136ec:	push	{r4, r5, r6, r7, fp, lr}
   136f0:	add	fp, sp, #16
   136f4:	mov	r4, r2
   136f8:	mov	r5, r1
   136fc:	ldr	r1, [r1, #12]
   13700:	ldr	r2, [r5, #20]
   13704:	add	r1, r1, #1
   13708:	str	r1, [r5, #12]
   1370c:	cmp	r1, r2
   13710:	bcc	137b8 <mythread_queue_node_malloc@@Base+0xcc>
   13714:	ldmib	r5, {r1, r2}
   13718:	add	r1, r1, #1
   1371c:	str	r1, [r5, #4]
   13720:	cmp	r1, r2
   13724:	bcc	13778 <mythread_queue_node_malloc@@Base+0x8c>
   13728:	cmp	r0, #0
   1372c:	beq	13738 <mythread_queue_node_malloc@@Base+0x4c>
   13730:	ldr	r1, [r0, #16]
   13734:	bl	12190 <mythread_queue_list_wait_for_done@plt>
   13738:	ldr	r0, [r5]
   1373c:	ldr	r1, [r5, #8]
   13740:	add	r7, r1, #512	; 0x200
   13744:	lsl	r1, r7, #2
   13748:	bl	110b0 <mycore_realloc@plt>
   1374c:	cmp	r0, #0
   13750:	beq	137dc <mythread_queue_node_malloc@@Base+0xf0>
   13754:	mov	r6, r0
   13758:	ldr	r1, [r5, #4]
   1375c:	add	r0, r0, r1, lsl #2
   13760:	sub	r1, r7, r1
   13764:	lsl	r2, r1, #2
   13768:	mov	r1, #0
   1376c:	bl	11cc8 <memset@plt>
   13770:	str	r7, [r5, #8]
   13774:	str	r6, [r5]
   13778:	ldm	r5, {r0, r1}
   1377c:	ldr	r0, [r0, r1, lsl #2]
   13780:	cmp	r0, #0
   13784:	bne	137b0 <mythread_queue_node_malloc@@Base+0xc4>
   13788:	ldr	r0, [r5, #20]
   1378c:	add	r0, r0, r0, lsl #1
   13790:	lsl	r0, r0, #2
   13794:	bl	1204c <mycore_malloc@plt>
   13798:	ldm	r5, {r1, r2}
   1379c:	str	r0, [r1, r2, lsl #2]
   137a0:	ldr	r0, [r5]
   137a4:	ldr	r0, [r0, r2, lsl #2]
   137a8:	cmp	r0, #0
   137ac:	beq	137f4 <mythread_queue_node_malloc@@Base+0x108>
   137b0:	mov	r0, #0
   137b4:	str	r0, [r5, #12]
   137b8:	ldm	r5, {r0, r1}
   137bc:	ldr	r2, [r5, #12]
   137c0:	ldr	r3, [r5, #16]
   137c4:	add	r3, r3, #1
   137c8:	str	r3, [r5, #16]
   137cc:	ldr	r0, [r0, r1, lsl #2]
   137d0:	add	r1, r2, r2, lsl #1
   137d4:	add	r0, r0, r1, lsl #2
   137d8:	pop	{r4, r5, r6, r7, fp, pc}
   137dc:	mov	r0, #0
   137e0:	cmp	r4, #0
   137e4:	beq	137d8 <mythread_queue_node_malloc@@Base+0xec>
   137e8:	mov	r1, #61	; 0x3d
   137ec:	str	r1, [r4]
   137f0:	pop	{r4, r5, r6, r7, fp, pc}
   137f4:	mov	r0, #0
   137f8:	cmp	r4, #0
   137fc:	beq	137d8 <mythread_queue_node_malloc@@Base+0xec>
   13800:	mov	r1, #62	; 0x3e
   13804:	str	r1, [r4]
   13808:	pop	{r4, r5, r6, r7, fp, pc}

0001380c <mythread_queue_list_wait_for_done@@Base>:
   1380c:	push	{r4, r5, r6, sl, fp, lr}
   13810:	add	fp, sp, #16
   13814:	cmp	r1, #0
   13818:	beq	13884 <mythread_queue_list_wait_for_done@@Base+0x78>
   1381c:	ldr	r5, [r1]
   13820:	cmp	r5, #0
   13824:	beq	13884 <mythread_queue_list_wait_for_done@@Base+0x78>
   13828:	mov	r4, r0
   1382c:	b	1383c <mythread_queue_list_wait_for_done@@Base+0x30>
   13830:	ldr	r5, [r5, #12]
   13834:	cmp	r5, #0
   13838:	beq	13884 <mythread_queue_list_wait_for_done@@Base+0x78>
   1383c:	ldr	r0, [r4, #4]
   13840:	cmp	r0, #0
   13844:	beq	13830 <mythread_queue_list_wait_for_done@@Base+0x24>
   13848:	mov	r6, #0
   1384c:	b	13858 <mythread_queue_list_wait_for_done@@Base+0x4c>
   13850:	ldr	r0, [r4, #24]
   13854:	bl	11518 <mythread_nanosleep_sleep@plt>
   13858:	ldr	r0, [r5]
   1385c:	ldr	r1, [r5, #4]
   13860:	ldr	r1, [r1, r6, lsl #2]
   13864:	ldr	r0, [r0, #16]
   13868:	cmp	r1, r0
   1386c:	bcc	13850 <mythread_queue_list_wait_for_done@@Base+0x44>
   13870:	ldr	r0, [r4, #4]
   13874:	add	r6, r6, #1
   13878:	cmp	r6, r0
   1387c:	bcc	13858 <mythread_queue_list_wait_for_done@@Base+0x4c>
   13880:	b	13830 <mythread_queue_list_wait_for_done@@Base+0x24>
   13884:	pop	{r4, r5, r6, sl, fp, pc}

00013888 <mythread_queue_node_malloc_limit@@Base>:
   13888:	push	{r4, r5, r6, r7, fp, lr}
   1388c:	add	fp, sp, #16
   13890:	mov	r5, r3
   13894:	mov	r4, r1
   13898:	ldr	r1, [r1, #12]
   1389c:	ldr	r3, [r4, #16]
   138a0:	add	r1, r1, #1
   138a4:	str	r1, [r4, #12]
   138a8:	cmp	r3, r2
   138ac:	bcs	13964 <mythread_queue_node_malloc_limit@@Base+0xdc>
   138b0:	ldr	r2, [r4, #20]
   138b4:	cmp	r1, r2
   138b8:	bcc	13994 <mythread_queue_node_malloc_limit@@Base+0x10c>
   138bc:	ldmib	r4, {r1, r2}
   138c0:	add	r1, r1, #1
   138c4:	str	r1, [r4, #4]
   138c8:	cmp	r1, r2
   138cc:	bcc	13920 <mythread_queue_node_malloc_limit@@Base+0x98>
   138d0:	cmp	r0, #0
   138d4:	beq	138e0 <mythread_queue_node_malloc_limit@@Base+0x58>
   138d8:	ldr	r1, [r0, #16]
   138dc:	bl	12190 <mythread_queue_list_wait_for_done@plt>
   138e0:	ldr	r0, [r4]
   138e4:	ldr	r1, [r4, #8]
   138e8:	add	r7, r1, #512	; 0x200
   138ec:	lsl	r1, r7, #2
   138f0:	bl	110b0 <mycore_realloc@plt>
   138f4:	cmp	r0, #0
   138f8:	beq	139b8 <mythread_queue_node_malloc_limit@@Base+0x130>
   138fc:	mov	r6, r0
   13900:	ldr	r1, [r4, #4]
   13904:	add	r0, r0, r1, lsl #2
   13908:	sub	r1, r7, r1
   1390c:	lsl	r2, r1, #2
   13910:	mov	r1, #0
   13914:	bl	11cc8 <memset@plt>
   13918:	str	r7, [r4, #8]
   1391c:	str	r6, [r4]
   13920:	ldm	r4, {r0, r1}
   13924:	ldr	r0, [r0, r1, lsl #2]
   13928:	cmp	r0, #0
   1392c:	bne	13958 <mythread_queue_node_malloc_limit@@Base+0xd0>
   13930:	ldr	r0, [r4, #20]
   13934:	add	r0, r0, r0, lsl #1
   13938:	lsl	r0, r0, #2
   1393c:	bl	1204c <mycore_malloc@plt>
   13940:	ldm	r4, {r1, r2}
   13944:	str	r0, [r1, r2, lsl #2]
   13948:	ldr	r0, [r4]
   1394c:	ldr	r0, [r0, r2, lsl #2]
   13950:	cmp	r0, #0
   13954:	beq	139d0 <mythread_queue_node_malloc_limit@@Base+0x148>
   13958:	mov	r0, #0
   1395c:	str	r0, [r4, #12]
   13960:	b	13994 <mythread_queue_node_malloc_limit@@Base+0x10c>
   13964:	ldr	r1, [r4, #16]
   13968:	add	r1, r1, #1
   1396c:	str	r1, [r4, #16]
   13970:	cmp	r0, #0
   13974:	beq	13980 <mythread_queue_node_malloc_limit@@Base+0xf8>
   13978:	ldr	r1, [r0, #16]
   1397c:	bl	12190 <mythread_queue_list_wait_for_done@plt>
   13980:	mov	r0, #0
   13984:	str	r0, [r4, #24]
   13988:	str	r0, [r4, #4]
   1398c:	str	r0, [r4, #12]
   13990:	str	r0, [r4, #16]
   13994:	ldm	r4, {r0, r1}
   13998:	ldr	r2, [r4, #12]
   1399c:	ldr	r3, [r4, #16]
   139a0:	add	r3, r3, #1
   139a4:	str	r3, [r4, #16]
   139a8:	ldr	r0, [r0, r1, lsl #2]
   139ac:	add	r1, r2, r2, lsl #1
   139b0:	add	r0, r0, r1, lsl #2
   139b4:	pop	{r4, r5, r6, r7, fp, pc}
   139b8:	mov	r0, #0
   139bc:	cmp	r5, #0
   139c0:	beq	139b4 <mythread_queue_node_malloc_limit@@Base+0x12c>
   139c4:	mov	r1, #61	; 0x3d
   139c8:	str	r1, [r5]
   139cc:	pop	{r4, r5, r6, r7, fp, pc}
   139d0:	mov	r0, #0
   139d4:	cmp	r5, #0
   139d8:	beq	139b4 <mythread_queue_node_malloc_limit@@Base+0x12c>
   139dc:	mov	r1, #62	; 0x3e
   139e0:	str	r1, [r5]
   139e4:	pop	{r4, r5, r6, r7, fp, pc}

000139e8 <mythread_queue_node_malloc_round@@Base>:
   139e8:	push	{r4, r5, fp, lr}
   139ec:	add	fp, sp, #8
   139f0:	mov	r4, r1
   139f4:	ldr	r5, [r1]
   139f8:	ldr	r1, [r5, #12]
   139fc:	add	r1, r1, #1
   13a00:	str	r1, [r5, #12]
   13a04:	ldr	r2, [r5, #20]
   13a08:	ldr	r3, [r5, #16]
   13a0c:	add	r3, r3, #1
   13a10:	str	r3, [r5, #16]
   13a14:	cmp	r1, r2
   13a18:	bcc	13a30 <mythread_queue_node_malloc_round@@Base+0x48>
   13a1c:	cmp	r0, #0
   13a20:	movne	r1, r4
   13a24:	blne	11d94 <mythread_queue_list_entry_wait_for_done@plt>
   13a28:	mov	r0, r4
   13a2c:	bl	11db8 <mythread_queue_list_entry_clean@plt>
   13a30:	ldm	r5, {r0, r1}
   13a34:	ldr	r2, [r5, #12]
   13a38:	ldr	r0, [r0, r1, lsl #2]
   13a3c:	add	r1, r2, r2, lsl #1
   13a40:	add	r0, r0, r1, lsl #2
   13a44:	pop	{r4, r5, fp, pc}

00013a48 <mythread_queue_list_entry_wait_for_done@@Base>:
   13a48:	push	{r4, r5, r6, sl, fp, lr}
   13a4c:	add	fp, sp, #16
   13a50:	cmp	r1, #0
   13a54:	beq	13aa4 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   13a58:	mov	r4, r1
   13a5c:	mov	r5, r0
   13a60:	ldr	r0, [r1, #8]
   13a64:	cmp	r0, #0
   13a68:	beq	13aa4 <mythread_queue_list_entry_wait_for_done@@Base+0x5c>
   13a6c:	mov	r6, #0
   13a70:	b	13a7c <mythread_queue_list_entry_wait_for_done@@Base+0x34>
   13a74:	ldr	r0, [r5, #24]
   13a78:	bl	11518 <mythread_nanosleep_sleep@plt>
   13a7c:	ldr	r0, [r4]
   13a80:	ldr	r1, [r4, #4]
   13a84:	ldr	r1, [r1, r6, lsl #2]
   13a88:	ldr	r0, [r0, #16]
   13a8c:	cmp	r1, r0
   13a90:	bcc	13a74 <mythread_queue_list_entry_wait_for_done@@Base+0x2c>
   13a94:	ldr	r0, [r4, #8]
   13a98:	add	r6, r6, #1
   13a9c:	cmp	r6, r0
   13aa0:	bcc	13a7c <mythread_queue_list_entry_wait_for_done@@Base+0x34>
   13aa4:	pop	{r4, r5, r6, sl, fp, pc}

00013aa8 <mythread_queue_list_entry_clean@@Base>:
   13aa8:	cmp	r0, #0
   13aac:	bxeq	lr
   13ab0:	ldr	r0, [r0]
   13ab4:	b	13630 <mythread_queue_clean@@Base>

00013ab8 <mythread_queue_list_create@@Base>:
   13ab8:	mov	r0, #1
   13abc:	mov	r1, #12
   13ac0:	b	113a4 <mycore_calloc@plt>

00013ac4 <mythread_queue_list_destroy@@Base>:
   13ac4:	cmp	r0, #0
   13ac8:	bxeq	lr
   13acc:	b	12184 <mycore_free@plt>

00013ad0 <mythread_queue_list_get_count@@Base>:
   13ad0:	ldr	r0, [r0, #8]
   13ad4:	bx	lr

00013ad8 <mythread_queue_list_see_for_done@@Base>:
   13ad8:	push	{r4, r5, r6, sl, fp, lr}
   13adc:	add	fp, sp, #16
   13ae0:	mov	r2, r0
   13ae4:	mov	r0, #1
   13ae8:	cmp	r1, #0
   13aec:	beq	13b4c <mythread_queue_list_see_for_done@@Base+0x74>
   13af0:	ldr	lr, [r1]
   13af4:	cmp	lr, #0
   13af8:	beq	13b4c <mythread_queue_list_see_for_done@@Base+0x74>
   13afc:	ldr	ip, [r2, #4]
   13b00:	cmp	ip, #0
   13b04:	bne	13b1c <mythread_queue_list_see_for_done@@Base+0x44>
   13b08:	ldr	lr, [lr, #12]
   13b0c:	cmp	lr, #0
   13b10:	beq	13b4c <mythread_queue_list_see_for_done@@Base+0x74>
   13b14:	cmp	ip, #0
   13b18:	beq	13b08 <mythread_queue_list_see_for_done@@Base+0x30>
   13b1c:	ldr	r3, [lr]
   13b20:	ldr	r1, [lr, #4]
   13b24:	mov	r4, #0
   13b28:	ldr	r5, [r1, r4, lsl #2]
   13b2c:	ldr	r6, [r3, #16]
   13b30:	cmp	r5, r6
   13b34:	bcc	13b50 <mythread_queue_list_see_for_done@@Base+0x78>
   13b38:	add	r4, r4, #1
   13b3c:	ldr	r5, [r2, #4]
   13b40:	cmp	r4, r5
   13b44:	bcc	13b28 <mythread_queue_list_see_for_done@@Base+0x50>
   13b48:	b	13b08 <mythread_queue_list_see_for_done@@Base+0x30>
   13b4c:	pop	{r4, r5, r6, sl, fp, pc}
   13b50:	mov	r0, #0
   13b54:	pop	{r4, r5, r6, sl, fp, pc}

00013b58 <mythread_queue_list_see_for_done_by_thread@@Base>:
   13b58:	push	{fp, lr}
   13b5c:	mov	fp, sp
   13b60:	mov	r0, #1
   13b64:	cmp	r1, #0
   13b68:	popeq	{fp, pc}
   13b6c:	ldr	r1, [r1]
   13b70:	cmp	r1, #0
   13b74:	beq	13b9c <mythread_queue_list_see_for_done_by_thread@@Base+0x44>
   13b78:	ldr	ip, [r1]
   13b7c:	ldr	r3, [r1, #4]
   13b80:	ldr	lr, [r3, r2, lsl #2]
   13b84:	ldr	r3, [ip, #16]
   13b88:	cmp	lr, r3
   13b8c:	bcc	13ba0 <mythread_queue_list_see_for_done_by_thread@@Base+0x48>
   13b90:	ldr	r1, [r1, #12]
   13b94:	cmp	r1, #0
   13b98:	bne	13b78 <mythread_queue_list_see_for_done_by_thread@@Base+0x20>
   13b9c:	pop	{fp, pc}
   13ba0:	mov	r0, #0
   13ba4:	pop	{fp, pc}

00013ba8 <mythread_queue_list_entry_push@@Base>:
   13ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13bac:	add	fp, sp, #28
   13bb0:	sub	sp, sp, #4
   13bb4:	mov	r8, r3
   13bb8:	mov	r9, r2
   13bbc:	mov	r4, r1
   13bc0:	mov	r6, r0
   13bc4:	ldr	r7, [fp, #12]
   13bc8:	cmp	r7, #0
   13bcc:	movne	r0, #0
   13bd0:	strne	r0, [r7]
   13bd4:	mov	r0, #1
   13bd8:	mov	r1, #20
   13bdc:	bl	113a4 <mycore_calloc@plt>
   13be0:	cmp	r0, #0
   13be4:	beq	13c18 <mythread_queue_list_entry_push@@Base+0x70>
   13be8:	mov	sl, r0
   13bec:	ldr	r0, [fp, #8]
   13bf0:	str	r0, [sl, #8]
   13bf4:	cmp	r0, #0
   13bf8:	beq	13c2c <mythread_queue_list_entry_push@@Base+0x84>
   13bfc:	mov	r1, #4
   13c00:	bl	113a4 <mycore_calloc@plt>
   13c04:	str	r0, [sl, #4]
   13c08:	cmp	r0, #0
   13c0c:	bne	13c34 <mythread_queue_list_entry_push@@Base+0x8c>
   13c10:	mov	r0, sl
   13c14:	bl	12184 <mycore_free@plt>
   13c18:	mov	sl, #0
   13c1c:	cmp	r7, #0
   13c20:	movne	r0, #60	; 0x3c
   13c24:	strne	r0, [r7]
   13c28:	b	13cfc <mythread_queue_list_entry_push@@Base+0x154>
   13c2c:	mov	r0, #0
   13c30:	str	r0, [sl, #4]
   13c34:	str	r8, [sl]
   13c38:	cmp	r4, #0
   13c3c:	beq	13c90 <mythread_queue_list_entry_push@@Base+0xe8>
   13c40:	mov	r7, r6
   13c44:	mov	r5, r4
   13c48:	b	13c58 <mythread_queue_list_entry_push@@Base+0xb0>
   13c4c:	add	r7, r7, #4
   13c50:	subs	r5, r5, #1
   13c54:	beq	13c90 <mythread_queue_list_entry_push@@Base+0xe8>
   13c58:	ldr	r0, [r7]
   13c5c:	ldr	r1, [r0, #32]
   13c60:	cmp	r1, #1
   13c64:	bne	13c74 <mythread_queue_list_entry_push@@Base+0xcc>
   13c68:	mov	r1, sl
   13c6c:	bl	120dc <mythread_queue_list_entry_make_batch@plt>
   13c70:	b	13c7c <mythread_queue_list_entry_push@@Base+0xd4>
   13c74:	mov	r1, sl
   13c78:	bl	1228c <mythread_queue_list_entry_make_stream@plt>
   13c7c:	ldr	r0, [r7]
   13c80:	cmp	r0, #0
   13c84:	beq	13c4c <mythread_queue_list_entry_push@@Base+0xa4>
   13c88:	bl	11560 <mythread_suspend@plt>
   13c8c:	b	13c4c <mythread_queue_list_entry_push@@Base+0xa4>
   13c90:	ldr	r0, [r9]
   13c94:	cmp	r0, #0
   13c98:	beq	13cb4 <mythread_queue_list_entry_push@@Base+0x10c>
   13c9c:	mov	r0, r9
   13ca0:	ldr	r1, [r0, #4]!
   13ca4:	str	sl, [r1, #12]
   13ca8:	ldr	r1, [r0]
   13cac:	str	r1, [sl, #16]
   13cb0:	b	13cbc <mythread_queue_list_entry_push@@Base+0x114>
   13cb4:	mov	r0, r9
   13cb8:	str	sl, [r0], #4
   13cbc:	str	sl, [r0]
   13cc0:	ldr	r0, [r9, #8]
   13cc4:	add	r0, r0, #1
   13cc8:	str	r0, [r9, #8]
   13ccc:	cmp	r4, #0
   13cd0:	bne	13ce4 <mythread_queue_list_entry_push@@Base+0x13c>
   13cd4:	b	13cfc <mythread_queue_list_entry_push@@Base+0x154>
   13cd8:	add	r6, r6, #4
   13cdc:	subs	r4, r4, #1
   13ce0:	beq	13cfc <mythread_queue_list_entry_push@@Base+0x154>
   13ce4:	ldr	r0, [r6]
   13ce8:	cmp	r0, #0
   13cec:	beq	13cd8 <mythread_queue_list_entry_push@@Base+0x130>
   13cf0:	mov	r1, #0
   13cf4:	bl	118f0 <mythread_resume@plt>
   13cf8:	b	13cd8 <mythread_queue_list_entry_push@@Base+0x130>
   13cfc:	mov	r0, sl
   13d00:	sub	sp, fp, #28
   13d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013d08 <mythread_queue_list_entry_make_batch@@Base>:
   13d08:	cmp	r1, #0
   13d0c:	beq	13d44 <mythread_queue_list_entry_make_batch@@Base+0x3c>
   13d10:	ldr	r3, [r0, #4]
   13d14:	ldr	ip, [r0, #12]
   13d18:	cmp	ip, r3
   13d1c:	bxhi	lr
   13d20:	ldr	r1, [r1, #4]
   13d24:	add	r1, r1, ip, lsl #2
   13d28:	ldr	r0, [r0, #4]
   13d2c:	mov	r3, #0
   13d30:	str	r3, [r1, r3, lsl #2]
   13d34:	add	r3, r3, #1
   13d38:	add	r2, ip, r3
   13d3c:	cmp	r2, r0
   13d40:	bls	13d30 <mythread_queue_list_entry_make_batch@@Base+0x28>
   13d44:	bx	lr

00013d48 <mythread_queue_list_entry_make_stream@@Base>:
   13d48:	cmp	r1, #0
   13d4c:	beq	13d7c <mythread_queue_list_entry_make_stream@@Base+0x34>
   13d50:	ldr	r3, [r0, #4]
   13d54:	ldr	r2, [r0, #12]
   13d58:	cmp	r2, r3
   13d5c:	bxhi	lr
   13d60:	ldr	r0, [r0, #4]
   13d64:	ldr	r1, [r1, #4]
   13d68:	mov	r3, #0
   13d6c:	str	r3, [r1, r2, lsl #2]
   13d70:	add	r2, r2, #1
   13d74:	cmp	r2, r0
   13d78:	bls	13d6c <mythread_queue_list_entry_make_stream@@Base+0x24>
   13d7c:	bx	lr

00013d80 <mythread_queue_list_entry_delete@@Base>:
   13d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d84:	add	fp, sp, #28
   13d88:	sub	sp, sp, #4
   13d8c:	mov	r9, r3
   13d90:	mov	sl, r2
   13d94:	mov	r7, r1
   13d98:	mov	r4, r0
   13d9c:	cmp	r1, #0
   13da0:	beq	13dd0 <mythread_queue_list_entry_delete@@Base+0x50>
   13da4:	mov	r6, r4
   13da8:	mov	r5, r7
   13dac:	b	13dbc <mythread_queue_list_entry_delete@@Base+0x3c>
   13db0:	add	r6, r6, #4
   13db4:	subs	r5, r5, #1
   13db8:	beq	13dd0 <mythread_queue_list_entry_delete@@Base+0x50>
   13dbc:	ldr	r0, [r6]
   13dc0:	cmp	r0, #0
   13dc4:	beq	13db0 <mythread_queue_list_entry_delete@@Base+0x30>
   13dc8:	bl	11560 <mythread_suspend@plt>
   13dcc:	b	13db0 <mythread_queue_list_entry_delete@@Base+0x30>
   13dd0:	ldr	r1, [r9, #12]
   13dd4:	ldr	r0, [r9, #16]
   13dd8:	cmp	r0, #0
   13ddc:	strne	r1, [r0, #12]
   13de0:	cmp	r1, #0
   13de4:	strne	r0, [r1, #16]
   13de8:	ldr	r2, [sl]
   13dec:	cmp	r2, r9
   13df0:	streq	r1, [sl]
   13df4:	ldr	r1, [sl, #4]
   13df8:	cmp	r1, r9
   13dfc:	streq	r0, [sl, #4]
   13e00:	ldr	r8, [fp, #8]
   13e04:	ldr	r0, [sl, #8]
   13e08:	sub	r0, r0, #1
   13e0c:	str	r0, [sl, #8]
   13e10:	cmp	r7, #0
   13e14:	bne	13e5c <mythread_queue_list_entry_delete@@Base+0xdc>
   13e18:	cmp	r8, #0
   13e1c:	beq	13e2c <mythread_queue_list_entry_delete@@Base+0xac>
   13e20:	ldr	r0, [r9]
   13e24:	cmp	r0, #0
   13e28:	blne	11734 <mythread_queue_destroy@plt>
   13e2c:	ldr	r0, [r9, #4]
   13e30:	cmp	r0, #0
   13e34:	beq	13e3c <mythread_queue_list_entry_delete@@Base+0xbc>
   13e38:	bl	12184 <mycore_free@plt>
   13e3c:	mov	r0, r9
   13e40:	bl	12184 <mycore_free@plt>
   13e44:	mov	r0, #0
   13e48:	sub	sp, fp, #28
   13e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e50:	add	r4, r4, #4
   13e54:	subs	r7, r7, #1
   13e58:	beq	13e18 <mythread_queue_list_entry_delete@@Base+0x98>
   13e5c:	ldr	r0, [r4]
   13e60:	cmp	r0, #0
   13e64:	beq	13e50 <mythread_queue_list_entry_delete@@Base+0xd0>
   13e68:	mov	r1, #0
   13e6c:	bl	118f0 <mythread_resume@plt>
   13e70:	b	13e50 <mythread_queue_list_entry_delete@@Base+0xd0>

00013e74 <mythread_queue_list_entry_see_for_done@@Base>:
   13e74:	push	{r4, sl, fp, lr}
   13e78:	add	fp, sp, #8
   13e7c:	mov	r1, r0
   13e80:	mov	r0, #1
   13e84:	cmp	r1, #0
   13e88:	beq	13ec0 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   13e8c:	ldr	r2, [r1, #8]
   13e90:	cmp	r2, #0
   13e94:	beq	13ec0 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   13e98:	ldm	r1, {ip, lr}
   13e9c:	mov	r2, #0
   13ea0:	ldr	r3, [lr, r2, lsl #2]
   13ea4:	ldr	r4, [ip, #16]
   13ea8:	cmp	r3, r4
   13eac:	bcc	13ec4 <mythread_queue_list_entry_see_for_done@@Base+0x50>
   13eb0:	add	r2, r2, #1
   13eb4:	ldr	r3, [r1, #8]
   13eb8:	cmp	r2, r3
   13ebc:	bcc	13ea0 <mythread_queue_list_entry_see_for_done@@Base+0x2c>
   13ec0:	pop	{r4, sl, fp, pc}
   13ec4:	mov	r0, #0
   13ec8:	pop	{r4, sl, fp, pc}

00013ecc <mythread_function_see_opt@@Base>:
   13ecc:	push	{r4, r5, r6, sl, fp, lr}
   13ed0:	add	fp, sp, #16
   13ed4:	sub	sp, sp, #8
   13ed8:	mov	r4, r0
   13edc:	str	r1, [sp, #4]
   13ee0:	ldr	r6, [r0, #28]
   13ee4:	ldr	r1, [r6, #16]
   13ee8:	ldr	r0, [r1, #8]
   13eec:	mov	r5, #0
   13ef0:	cmp	r0, r3
   13ef4:	bne	13f74 <mythread_function_see_opt@@Base+0xa8>
   13ef8:	ldr	r0, [sp, #4]
   13efc:	tst	r0, #4
   13f00:	bne	13f40 <mythread_function_see_opt@@Base+0x74>
   13f04:	ldr	r0, [sp, #4]
   13f08:	tst	r0, #2
   13f0c:	beq	13f6c <mythread_function_see_opt@@Base+0xa0>
   13f10:	bl	119f8 <mythread_queue_list_see_for_done_by_thread@plt>
   13f14:	cmp	r0, #0
   13f18:	beq	13f6c <mythread_function_see_opt@@Base+0xa0>
   13f1c:	ldr	r1, [r4, #20]
   13f20:	mov	r0, r6
   13f24:	bl	11a58 <mythread_mutex_close@plt>
   13f28:	ldr	r0, [r4, #24]
   13f2c:	bl	11fbc <mythread_nanosleep_destroy@plt>
   13f30:	mov	r0, #2
   13f34:	str	r0, [r4, #12]
   13f38:	mov	r5, #1
   13f3c:	b	13f74 <mythread_function_see_opt@@Base+0xa8>
   13f40:	bl	119f8 <mythread_queue_list_see_for_done_by_thread@plt>
   13f44:	cmp	r0, #0
   13f48:	beq	13f6c <mythread_function_see_opt@@Base+0xa0>
   13f4c:	mov	r0, #4
   13f50:	str	r0, [r4, #12]
   13f54:	ldr	r1, [r4, #20]
   13f58:	mov	r0, r6
   13f5c:	bl	12154 <mythread_mutex_wait@plt>
   13f60:	mov	r5, #0
   13f64:	str	r5, [r4, #12]
   13f68:	b	13f74 <mythread_function_see_opt@@Base+0xa8>
   13f6c:	ldr	r0, [fp, #8]
   13f70:	bl	11518 <mythread_nanosleep_sleep@plt>
   13f74:	mov	r0, r5
   13f78:	sub	sp, fp, #16
   13f7c:	pop	{r4, r5, r6, sl, fp, pc}

00013f80 <mythread_function_queue_batch@@Base>:
   13f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f84:	add	fp, sp, #28
   13f88:	sub	sp, sp, #12
   13f8c:	mov	r5, r0
   13f90:	ldr	r1, [r0]
   13f94:	ldr	r4, [r0, #28]
   13f98:	ldr	r6, [r4, #16]
   13f9c:	mov	r0, r4
   13fa0:	bl	112f0 <myhread_increase_id_by_entry_id@plt>
   13fa4:	mov	r7, r0
   13fa8:	ldr	r1, [r5, #20]
   13fac:	mov	r0, r4
   13fb0:	bl	12154 <mythread_mutex_wait@plt>
   13fb4:	str	r6, [sp, #8]
   13fb8:	ldr	r0, [r4, #36]	; 0x24
   13fbc:	tst	r0, #1
   13fc0:	beq	13fec <mythread_function_queue_batch@@Base+0x6c>
   13fc4:	mov	r0, #1
   13fc8:	str	r0, [r5, #12]
   13fcc:	ldr	r0, [r4, #36]	; 0x24
   13fd0:	tst	r0, #1
   13fd4:	beq	13fe4 <mythread_function_queue_batch@@Base+0x64>
   13fd8:	ldr	r0, [r5, #24]
   13fdc:	bl	11518 <mythread_nanosleep_sleep@plt>
   13fe0:	b	13fcc <mythread_function_queue_batch@@Base+0x4c>
   13fe4:	mov	r0, #0
   13fe8:	str	r0, [r5, #12]
   13fec:	ldr	r9, [r6]
   13ff0:	mov	r8, #0
   13ff4:	cmp	r9, #0
   13ff8:	bne	14068 <mythread_function_queue_batch@@Base+0xe8>
   13ffc:	b	1408c <mythread_function_queue_batch@@Base+0x10c>
   14000:	ldr	ip, [sl, r7, lsl #2]
   14004:	ldr	r2, [r0, #20]
   14008:	ldr	r3, [sl, r7, lsl #2]
   1400c:	mov	r6, r5
   14010:	ldr	r5, [r0]
   14014:	ldr	r0, [r0, #20]
   14018:	mov	r1, r7
   1401c:	mov	r7, r4
   14020:	udiv	r4, r3, r0
   14024:	mls	r0, r4, r0, r3
   14028:	mov	r4, r7
   1402c:	mov	r7, r1
   14030:	add	r0, r0, r0, lsl #1
   14034:	udiv	r1, ip, r2
   14038:	ldr	r1, [r5, r1, lsl #2]
   1403c:	mov	r5, r6
   14040:	add	r1, r1, r0, lsl #2
   14044:	ldm	r6, {r0, r2}
   14048:	blx	r2
   1404c:	ldr	r0, [r4, #4]
   14050:	ldr	r1, [sl, r7, lsl #2]
   14054:	add	r0, r1, r0
   14058:	str	r0, [sl, r7, lsl #2]
   1405c:	ldr	r9, [r9, #12]
   14060:	cmp	r9, #0
   14064:	beq	1408c <mythread_function_queue_batch@@Base+0x10c>
   14068:	ldm	r9, {r0, sl}
   1406c:	ldr	r1, [sl, r7, lsl #2]
   14070:	ldr	r2, [r0, #16]
   14074:	cmp	r1, r2
   14078:	bcc	14000 <mythread_function_queue_batch@@Base+0x80>
   1407c:	add	r8, r8, #1
   14080:	ldr	r9, [r9, #12]
   14084:	cmp	r9, #0
   14088:	bne	14068 <mythread_function_queue_batch@@Base+0xe8>
   1408c:	ldr	r6, [sp, #8]
   14090:	ldr	r0, [r6, #8]
   14094:	cmp	r8, r0
   14098:	bne	13fb8 <mythread_function_queue_batch@@Base+0x38>
   1409c:	ldr	r1, [r4, #36]	; 0x24
   140a0:	ldr	r0, [r5, #24]
   140a4:	str	r0, [sp]
   140a8:	mov	r0, r5
   140ac:	mov	r2, r7
   140b0:	mov	r3, r8
   140b4:	bl	1135c <mythread_function_see_opt@plt>
   140b8:	cmp	r0, #0
   140bc:	beq	13fb8 <mythread_function_queue_batch@@Base+0x38>
   140c0:	mov	r0, #0
   140c4:	sub	sp, fp, #28
   140c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000140cc <mythread_function_queue_stream@@Base>:
   140cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140d0:	add	fp, sp, #28
   140d4:	sub	sp, sp, #12
   140d8:	mov	r8, r0
   140dc:	ldr	r1, [r0]
   140e0:	ldr	r4, [r0, #28]
   140e4:	ldr	r5, [r4, #16]
   140e8:	mov	r0, r4
   140ec:	bl	112f0 <myhread_increase_id_by_entry_id@plt>
   140f0:	mov	r6, r0
   140f4:	ldr	r1, [r8, #20]
   140f8:	mov	r0, r4
   140fc:	bl	12154 <mythread_mutex_wait@plt>
   14100:	str	r4, [sp, #8]
   14104:	str	r5, [sp, #4]
   14108:	ldr	r0, [r4, #36]	; 0x24
   1410c:	tst	r0, #1
   14110:	beq	1413c <mythread_function_queue_stream@@Base+0x70>
   14114:	mov	r0, #1
   14118:	str	r0, [r8, #12]
   1411c:	ldr	r0, [r4, #36]	; 0x24
   14120:	tst	r0, #1
   14124:	beq	14134 <mythread_function_queue_stream@@Base+0x68>
   14128:	ldr	r0, [r8, #24]
   1412c:	bl	11518 <mythread_nanosleep_sleep@plt>
   14130:	b	1411c <mythread_function_queue_stream@@Base+0x50>
   14134:	mov	r0, #0
   14138:	str	r0, [r8, #12]
   1413c:	ldr	r9, [r5]
   14140:	mov	r7, #0
   14144:	cmp	r9, #0
   14148:	bne	1419c <mythread_function_queue_stream@@Base+0xd0>
   1414c:	b	141c0 <mythread_function_queue_stream@@Base+0xf4>
   14150:	ldr	r1, [sl, r6, lsl #2]
   14154:	ldr	r2, [r0, #20]
   14158:	ldr	r3, [sl, r6, lsl #2]
   1415c:	ldr	r5, [r0]
   14160:	ldr	r0, [r0, #20]
   14164:	udiv	r4, r3, r0
   14168:	mls	r0, r4, r0, r3
   1416c:	add	r0, r0, r0, lsl #1
   14170:	udiv	r1, r1, r2
   14174:	ldr	r1, [r5, r1, lsl #2]
   14178:	add	r1, r1, r0, lsl #2
   1417c:	ldm	r8, {r0, r2}
   14180:	blx	r2
   14184:	ldr	r0, [sl, r6, lsl #2]
   14188:	add	r0, r0, #1
   1418c:	str	r0, [sl, r6, lsl #2]
   14190:	ldr	r9, [r9, #12]
   14194:	cmp	r9, #0
   14198:	beq	141c0 <mythread_function_queue_stream@@Base+0xf4>
   1419c:	ldm	r9, {r0, sl}
   141a0:	ldr	r1, [sl, r6, lsl #2]
   141a4:	ldr	r2, [r0, #16]
   141a8:	cmp	r1, r2
   141ac:	bcc	14150 <mythread_function_queue_stream@@Base+0x84>
   141b0:	add	r7, r7, #1
   141b4:	ldr	r9, [r9, #12]
   141b8:	cmp	r9, #0
   141bc:	bne	1419c <mythread_function_queue_stream@@Base+0xd0>
   141c0:	ldr	r5, [sp, #4]
   141c4:	ldr	r0, [r5, #8]
   141c8:	cmp	r7, r0
   141cc:	ldr	r4, [sp, #8]
   141d0:	bne	14108 <mythread_function_queue_stream@@Base+0x3c>
   141d4:	ldr	r1, [r4, #36]	; 0x24
   141d8:	ldr	r0, [r8, #24]
   141dc:	str	r0, [sp]
   141e0:	mov	r0, r8
   141e4:	mov	r2, r6
   141e8:	mov	r3, r7
   141ec:	bl	1135c <mythread_function_see_opt@plt>
   141f0:	cmp	r0, #0
   141f4:	beq	14108 <mythread_function_queue_stream@@Base+0x3c>
   141f8:	mov	r0, #0
   141fc:	sub	sp, fp, #28
   14200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014204 <mythread_function@@Base>:
   14204:	push	{r4, r5, r6, sl, fp, lr}
   14208:	add	fp, sp, #16
   1420c:	mov	r4, r0
   14210:	ldr	r1, [r0, #20]
   14214:	ldr	r5, [r0, #28]
   14218:	mov	r0, r5
   1421c:	bl	12154 <mythread_mutex_wait@plt>
   14220:	mov	r6, #0
   14224:	ldm	r4, {r0, r2}
   14228:	mov	r1, r4
   1422c:	blx	r2
   14230:	ldr	r0, [r4, #12]
   14234:	orr	r0, r0, #8
   14238:	str	r0, [r4, #12]
   1423c:	ldr	r1, [r4, #12]
   14240:	ldr	r0, [r4, #12]
   14244:	tst	r1, #1
   14248:	bne	14264 <mythread_function@@Base+0x60>
   1424c:	orr	r0, r0, #4
   14250:	str	r0, [r4, #12]
   14254:	ldr	r1, [r4, #20]
   14258:	mov	r0, r5
   1425c:	bl	12154 <mythread_mutex_wait@plt>
   14260:	b	1427c <mythread_function@@Base+0x78>
   14264:	tst	r0, #1
   14268:	beq	1427c <mythread_function@@Base+0x78>
   1426c:	ldr	r0, [r4, #24]
   14270:	bl	11518 <mythread_nanosleep_sleep@plt>
   14274:	ldr	r0, [r4, #12]
   14278:	b	14264 <mythread_function@@Base+0x60>
   1427c:	ldr	r0, [r5, #36]	; 0x24
   14280:	tst	r0, #2
   14284:	ldreq	r0, [r4, #12]
   14288:	tsteq	r0, #2
   1428c:	bne	14298 <mythread_function@@Base+0x94>
   14290:	str	r6, [r4, #12]
   14294:	b	14224 <mythread_function@@Base+0x20>
   14298:	ldr	r1, [r4, #20]
   1429c:	mov	r0, r5
   142a0:	bl	11a58 <mythread_mutex_close@plt>
   142a4:	ldr	r0, [r4, #24]
   142a8:	bl	11fbc <mythread_nanosleep_destroy@plt>
   142ac:	mov	r0, #2
   142b0:	str	r0, [r4, #12]
   142b4:	mov	r0, #0
   142b8:	pop	{r4, r5, r6, sl, fp, pc}

000142bc <mycore_power@@Base>:
   142bc:	cmp	r1, #0
   142c0:	moveq	r0, #1
   142c4:	bxeq	lr
   142c8:	mov	r3, r0
   142cc:	mov	r0, #1
   142d0:	mov	ip, #0
   142d4:	tst	r1, #1
   142d8:	mov	r2, r3
   142dc:	movweq	r2, #1
   142e0:	mul	r0, r2, r0
   142e4:	lsr	r2, r1, #1
   142e8:	mul	r3, r3, r3
   142ec:	cmp	ip, r1, lsr #1
   142f0:	mov	r1, r2
   142f4:	bne	142d4 <mycore_power@@Base+0x18>
   142f8:	bx	lr

000142fc <mycore_strncasecmp@@Base>:
   142fc:	push	{r4, sl, fp, lr}
   14300:	add	fp, sp, #8
   14304:	mov	lr, r0
   14308:	cmp	r0, #0
   1430c:	cmpne	r1, #0
   14310:	bne	14320 <mycore_strncasecmp@@Base+0x24>
   14314:	subs	r0, lr, r1
   14318:	movwne	r0, #1
   1431c:	pop	{r4, sl, fp, pc}
   14320:	mov	r0, #0
   14324:	cmp	r2, #0
   14328:	beq	1435c <mycore_strncasecmp@@Base+0x60>
   1432c:	ldr	ip, [pc, #52]	; 14368 <mycore_strncasecmp@@Base+0x6c>
   14330:	add	ip, pc, ip
   14334:	ldrb	r3, [r1]
   14338:	ldrb	r3, [ip, r3]
   1433c:	ldrb	r4, [lr]
   14340:	ldrb	r4, [ip, r4]
   14344:	cmp	r4, r3
   14348:	bne	14360 <mycore_strncasecmp@@Base+0x64>
   1434c:	subs	r2, r2, #1
   14350:	add	r1, r1, #1
   14354:	add	lr, lr, #1
   14358:	bne	14334 <mycore_strncasecmp@@Base+0x38>
   1435c:	pop	{r4, sl, fp, pc}
   14360:	mov	r0, r2
   14364:	pop	{r4, sl, fp, pc}
   14368:	andeq	fp, r1, r8, asr #13

0001436c <mycore_strcasecmp@@Base>:
   1436c:	push	{r4, sl, fp, lr}
   14370:	add	fp, sp, #8
   14374:	cmp	r0, #0
   14378:	cmpne	r1, #0
   1437c:	bne	14390 <mycore_strcasecmp@@Base+0x24>
   14380:	subs	r2, r0, r1
   14384:	movwne	r2, #1
   14388:	mov	r0, r2
   1438c:	pop	{r4, sl, fp, pc}
   14390:	ldrb	r2, [r1]
   14394:	ldr	ip, [pc, #84]	; 143f0 <mycore_strcasecmp@@Base+0x84>
   14398:	add	ip, pc, ip
   1439c:	ldrb	lr, [ip, r2]
   143a0:	ldrb	r3, [r0]
   143a4:	ldrb	r4, [ip, r3]
   143a8:	mov	r2, #1
   143ac:	cmp	r4, lr
   143b0:	bne	143dc <mycore_strcasecmp@@Base+0x70>
   143b4:	mov	r2, #1
   143b8:	tst	r3, #255	; 0xff
   143bc:	beq	143e4 <mycore_strcasecmp@@Base+0x78>
   143c0:	ldrb	r3, [r1, r2]
   143c4:	ldrb	lr, [ip, r3]
   143c8:	ldrb	r3, [r0, r2]
   143cc:	ldrb	r4, [ip, r3]
   143d0:	add	r2, r2, #1
   143d4:	cmp	r4, lr
   143d8:	beq	143b8 <mycore_strcasecmp@@Base+0x4c>
   143dc:	mov	r0, r2
   143e0:	pop	{r4, sl, fp, pc}
   143e4:	mov	r2, #0
   143e8:	mov	r0, r2
   143ec:	pop	{r4, sl, fp, pc}
   143f0:	andeq	fp, r1, r0, ror #12

000143f4 <mycore_strncmp@@Base>:
   143f4:	push	{fp, lr}
   143f8:	mov	fp, sp
   143fc:	mov	lr, r0
   14400:	cmp	r0, #0
   14404:	cmpne	r1, #0
   14408:	bne	14418 <mycore_strncmp@@Base+0x24>
   1440c:	subs	r0, lr, r1
   14410:	movwne	r0, #1
   14414:	pop	{fp, pc}
   14418:	mov	r0, #0
   1441c:	cmp	r2, #0
   14420:	popeq	{fp, pc}
   14424:	ldrb	ip, [r1]
   14428:	ldrb	r3, [lr]
   1442c:	cmp	r3, ip
   14430:	bne	14448 <mycore_strncmp@@Base+0x54>
   14434:	subs	r2, r2, #1
   14438:	add	r1, r1, #1
   1443c:	add	lr, lr, #1
   14440:	bne	14424 <mycore_strncmp@@Base+0x30>
   14444:	pop	{fp, pc}
   14448:	mov	r0, r2
   1444c:	pop	{fp, pc}

00014450 <mycore_strcmp@@Base>:
   14450:	cmp	r0, #0
   14454:	cmpne	r1, #0
   14458:	bne	1446c <mycore_strcmp@@Base+0x1c>
   1445c:	subs	r2, r0, r1
   14460:	movwne	r2, #1
   14464:	mov	r0, r2
   14468:	bx	lr
   1446c:	ldrb	r3, [r0]
   14470:	ldrb	ip, [r1]
   14474:	mov	r2, #1
   14478:	cmp	r3, ip
   1447c:	bne	144a0 <mycore_strcmp@@Base+0x50>
   14480:	mov	r2, #1
   14484:	tst	r3, #255	; 0xff
   14488:	beq	144a8 <mycore_strcmp@@Base+0x58>
   1448c:	ldrb	r3, [r0, r2]
   14490:	ldrb	ip, [r1, r2]
   14494:	add	r2, r2, #1
   14498:	cmp	r3, ip
   1449c:	beq	14484 <mycore_strcmp@@Base+0x34>
   144a0:	mov	r0, r2
   144a4:	bx	lr
   144a8:	mov	r2, #0
   144ac:	mov	r0, r2
   144b0:	bx	lr

000144b4 <mycore_strcmp_ws@@Base>:
   144b4:	cmp	r0, #0
   144b8:	cmpne	r1, #0
   144bc:	bne	144d0 <mycore_strcmp_ws@@Base+0x1c>
   144c0:	subs	r2, r0, r1
   144c4:	movwne	r2, #1
   144c8:	mov	r0, r2
   144cc:	bx	lr
   144d0:	ldrb	r3, [r0]
   144d4:	ldrb	ip, [r1]
   144d8:	mov	r2, #1
   144dc:	cmp	r3, ip
   144e0:	bne	145a0 <mycore_strcmp_ws@@Base+0xec>
   144e4:	mov	r2, #1
   144e8:	b	14500 <mycore_strcmp_ws@@Base+0x4c>
   144ec:	ldrb	r3, [r0, r2]
   144f0:	ldrb	ip, [r1, r2]
   144f4:	add	r2, r2, #1
   144f8:	cmp	r3, ip
   144fc:	bne	145a0 <mycore_strcmp_ws@@Base+0xec>
   14500:	uxtb	r3, r3
   14504:	cmp	r3, #32
   14508:	bhi	144ec <mycore_strcmp_ws@@Base+0x38>
   1450c:	add	ip, pc, #4
   14510:	ldr	r3, [ip, r3, lsl #2]
   14514:	add	pc, ip, r3
   14518:	andeq	r0, r0, r4, lsl #1
   1451c:			; <UNDEFINED> instruction: 0xffffffd4
   14520:			; <UNDEFINED> instruction: 0xffffffd4
   14524:			; <UNDEFINED> instruction: 0xffffffd4
   14528:			; <UNDEFINED> instruction: 0xffffffd4
   1452c:			; <UNDEFINED> instruction: 0xffffffd4
   14530:			; <UNDEFINED> instruction: 0xffffffd4
   14534:			; <UNDEFINED> instruction: 0xffffffd4
   14538:			; <UNDEFINED> instruction: 0xffffffd4
   1453c:	andeq	r0, r0, r4, lsl #1
   14540:	andeq	r0, r0, r4, lsl #1
   14544:			; <UNDEFINED> instruction: 0xffffffd4
   14548:	andeq	r0, r0, r4, lsl #1
   1454c:	andeq	r0, r0, r4, lsl #1
   14550:			; <UNDEFINED> instruction: 0xffffffd4
   14554:			; <UNDEFINED> instruction: 0xffffffd4
   14558:			; <UNDEFINED> instruction: 0xffffffd4
   1455c:			; <UNDEFINED> instruction: 0xffffffd4
   14560:			; <UNDEFINED> instruction: 0xffffffd4
   14564:			; <UNDEFINED> instruction: 0xffffffd4
   14568:			; <UNDEFINED> instruction: 0xffffffd4
   1456c:			; <UNDEFINED> instruction: 0xffffffd4
   14570:			; <UNDEFINED> instruction: 0xffffffd4
   14574:			; <UNDEFINED> instruction: 0xffffffd4
   14578:			; <UNDEFINED> instruction: 0xffffffd4
   1457c:			; <UNDEFINED> instruction: 0xffffffd4
   14580:			; <UNDEFINED> instruction: 0xffffffd4
   14584:			; <UNDEFINED> instruction: 0xffffffd4
   14588:			; <UNDEFINED> instruction: 0xffffffd4
   1458c:			; <UNDEFINED> instruction: 0xffffffd4
   14590:			; <UNDEFINED> instruction: 0xffffffd4
   14594:			; <UNDEFINED> instruction: 0xffffffd4
   14598:	andeq	r0, r0, r4, lsl #1
   1459c:	mov	r2, #0
   145a0:	mov	r0, r2
   145a4:	bx	lr

000145a8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   145a8:	push	{fp, lr}
   145ac:	mov	fp, sp
   145b0:	mov	r2, r0
   145b4:	ldrb	r3, [r0]
   145b8:	mov	r0, #1
   145bc:	cmp	r3, #0
   145c0:	popeq	{fp, pc}
   145c4:	add	r2, r2, #1
   145c8:	ldr	ip, [pc, #52]	; 14604 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x5c>
   145cc:	add	ip, pc, ip
   145d0:	uxtb	r3, r3
   145d4:	ldrb	lr, [ip, r3]
   145d8:	ldrb	r3, [r1]
   145dc:	ldrb	r3, [ip, r3]
   145e0:	cmp	lr, r3
   145e4:	bne	145fc <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x54>
   145e8:	add	r1, r1, #1
   145ec:	ldrb	r3, [r2], #1
   145f0:	cmp	r3, #0
   145f4:	bne	145d0 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x28>
   145f8:	pop	{fp, pc}
   145fc:	mov	r0, #0
   14600:	pop	{fp, pc}
   14604:	andeq	fp, r1, ip, lsr #8

00014608 <mycore_utils_avl_tree_create@@Base>:
   14608:	mov	r0, #1
   1460c:	mov	r1, #4
   14610:	b	113a4 <mycore_calloc@plt>

00014614 <mycore_utils_avl_tree_init@@Base>:
   14614:	push	{r4, sl, fp, lr}
   14618:	add	fp, sp, #8
   1461c:	mov	r4, r0
   14620:	bl	114ac <mcobject_create@plt>
   14624:	str	r0, [r4]
   14628:	cmp	r0, #0
   1462c:	beq	14648 <mycore_utils_avl_tree_init@@Base+0x34>
   14630:	mov	r1, #256	; 0x100
   14634:	mov	r2, #24
   14638:	bl	11ba8 <mcobject_init@plt>
   1463c:	cmp	r0, #0
   14640:	movwne	r0, #1
   14644:	pop	{r4, sl, fp, pc}
   14648:	mov	r0, #2
   1464c:	pop	{r4, sl, fp, pc}

00014650 <mycore_utils_avl_tree_clean@@Base>:
   14650:	ldr	r0, [r0]
   14654:	b	12304 <mcobject_clean@plt>

00014658 <mycore_utils_avl_tree_destroy@@Base>:
   14658:	push	{r4, r5, r6, sl, fp, lr}
   1465c:	add	fp, sp, #16
   14660:	mov	r4, #0
   14664:	cmp	r0, #0
   14668:	beq	14690 <mycore_utils_avl_tree_destroy@@Base+0x38>
   1466c:	mov	r6, r1
   14670:	mov	r5, r0
   14674:	ldr	r0, [r0]
   14678:	mov	r1, #1
   1467c:	bl	11284 <mcobject_destroy@plt>
   14680:	cmp	r6, #0
   14684:	beq	14698 <mycore_utils_avl_tree_destroy@@Base+0x40>
   14688:	mov	r0, r5
   1468c:	bl	12184 <mycore_free@plt>
   14690:	mov	r0, r4
   14694:	pop	{r4, r5, r6, sl, fp, pc}
   14698:	mov	r0, r5
   1469c:	pop	{r4, r5, r6, sl, fp, pc}

000146a0 <mycore_utils_avl_tree_node_create_root@@Base>:
   146a0:	push	{r4, r5, fp, lr}
   146a4:	add	fp, sp, #8
   146a8:	mov	r4, r2
   146ac:	mov	r5, r1
   146b0:	ldr	r0, [r0]
   146b4:	mov	r1, #0
   146b8:	bl	11e54 <mcobject_malloc@plt>
   146bc:	vmov.i32	q8, #0	; 0x00000000
   146c0:	stm	r0, {r4, r5}
   146c4:	add	r1, r0, #8
   146c8:	vst1.32	{d16-d17}, [r1]
   146cc:	pop	{r4, r5, fp, pc}

000146d0 <mycore_utils_avl_tree_node_clean@@Base>:
   146d0:	mov	r1, #0
   146d4:	vmov.i32	q8, #0	; 0x00000000
   146d8:	str	r1, [r0, #16]
   146dc:	mov	r2, #20
   146e0:	vst1.32	{d16-d17}, [r0], r2
   146e4:	str	r1, [r0]
   146e8:	bx	lr

000146ec <mycore_utils_avl_tree_node_height@@Base>:
   146ec:	cmp	r0, #0
   146f0:	ldrhne	r0, [r0, #20]
   146f4:	moveq	r0, #0
   146f8:	sxth	r0, r0
   146fc:	bx	lr

00014700 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   14700:	push	{r4, r5, fp, lr}
   14704:	add	fp, sp, #8
   14708:	mov	r4, r0
   1470c:	ldr	r0, [r0, #12]
   14710:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   14714:	mov	r5, r0
   14718:	ldr	r0, [r4, #8]
   1471c:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   14720:	sub	r0, r5, r0
   14724:	sxth	r0, r0
   14728:	pop	{r4, r5, fp, pc}

0001472c <mycore_utils_avl_tree_node_set_height@@Base>:
   1472c:	push	{r4, r5, fp, lr}
   14730:	add	fp, sp, #8
   14734:	mov	r4, r0
   14738:	ldr	r0, [r0, #8]
   1473c:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   14740:	mov	r5, r0
   14744:	ldr	r0, [r4, #12]
   14748:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   1474c:	cmp	r5, r0
   14750:	movgt	r0, r5
   14754:	add	r0, r0, #1
   14758:	strh	r0, [r4, #20]
   1475c:	pop	{r4, r5, fp, pc}

00014760 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   14760:	push	{r4, sl, fp, lr}
   14764:	add	fp, sp, #8
   14768:	ldr	r4, [r0, #8]
   1476c:	ldr	r1, [r0, #16]
   14770:	str	r1, [r4, #16]
   14774:	ldr	r1, [r4, #12]
   14778:	cmp	r1, #0
   1477c:	strne	r0, [r1, #16]
   14780:	ldr	r1, [r4, #12]
   14784:	str	r4, [r0, #16]
   14788:	str	r1, [r0, #8]
   1478c:	str	r0, [r4, #12]
   14790:	bl	11af4 <mycore_utils_avl_tree_node_set_height@plt>
   14794:	mov	r0, r4
   14798:	bl	11af4 <mycore_utils_avl_tree_node_set_height@plt>
   1479c:	mov	r0, r4
   147a0:	pop	{r4, sl, fp, pc}

000147a4 <mycore_utils_avl_tree_node_rotate_left@@Base>:
   147a4:	push	{r4, sl, fp, lr}
   147a8:	add	fp, sp, #8
   147ac:	ldr	r4, [r0, #12]
   147b0:	ldr	r1, [r0, #16]
   147b4:	str	r1, [r4, #16]
   147b8:	ldr	r1, [r4, #8]
   147bc:	cmp	r1, #0
   147c0:	strne	r0, [r1, #16]
   147c4:	ldr	r1, [r4, #8]
   147c8:	str	r1, [r0, #12]
   147cc:	str	r4, [r0, #16]
   147d0:	str	r0, [r4, #8]
   147d4:	bl	11af4 <mycore_utils_avl_tree_node_set_height@plt>
   147d8:	mov	r0, r4
   147dc:	bl	11af4 <mycore_utils_avl_tree_node_set_height@plt>
   147e0:	mov	r0, r4
   147e4:	pop	{r4, sl, fp, pc}

000147e8 <mycore_utils_avl_tree_node_balance@@Base>:
   147e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147ec:	add	fp, sp, #24
   147f0:	mov	r8, r1
   147f4:	mov	r4, r0
   147f8:	ldr	r6, [r0, #8]
   147fc:	mov	r0, r6
   14800:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   14804:	mov	r5, r0
   14808:	ldr	r7, [r4, #12]
   1480c:	mov	r0, r7
   14810:	bl	1234c <mycore_utils_avl_tree_node_height@plt>
   14814:	cmp	r0, r5
   14818:	mov	r1, r0
   1481c:	movlt	r1, r5
   14820:	add	r1, r1, #1
   14824:	strh	r1, [r4, #20]
   14828:	sub	r0, r0, r5
   1482c:	cmn	r0, #2
   14830:	beq	14880 <mycore_utils_avl_tree_node_balance@@Base+0x98>
   14834:	cmp	r0, #2
   14838:	bne	148c4 <mycore_utils_avl_tree_node_balance@@Base+0xdc>
   1483c:	mov	r0, r7
   14840:	bl	11260 <mycore_utils_avl_tree_node_balance_factor@plt>
   14844:	cmn	r0, #1
   14848:	bgt	14858 <mycore_utils_avl_tree_node_balance@@Base+0x70>
   1484c:	mov	r0, r7
   14850:	bl	1120c <mycore_utils_avl_tree_node_rotate_right@plt>
   14854:	str	r0, [r4, #12]
   14858:	ldr	r5, [r4, #16]
   1485c:	cmp	r5, #0
   14860:	beq	148e0 <mycore_utils_avl_tree_node_balance@@Base+0xf8>
   14864:	ldr	r6, [r5, #12]
   14868:	mov	r0, r4
   1486c:	bl	11fc8 <mycore_utils_avl_tree_node_rotate_left@plt>
   14870:	cmp	r6, r4
   14874:	beq	148d8 <mycore_utils_avl_tree_node_balance@@Base+0xf0>
   14878:	str	r0, [r5, #8]
   1487c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14880:	mov	r0, r6
   14884:	bl	11260 <mycore_utils_avl_tree_node_balance_factor@plt>
   14888:	cmp	r0, #1
   1488c:	blt	1489c <mycore_utils_avl_tree_node_balance@@Base+0xb4>
   14890:	mov	r0, r6
   14894:	bl	11fc8 <mycore_utils_avl_tree_node_rotate_left@plt>
   14898:	str	r0, [r4, #8]
   1489c:	ldr	r5, [r4, #16]
   148a0:	cmp	r5, #0
   148a4:	beq	148ec <mycore_utils_avl_tree_node_balance@@Base+0x104>
   148a8:	ldr	r6, [r5, #12]
   148ac:	mov	r0, r4
   148b0:	bl	1120c <mycore_utils_avl_tree_node_rotate_right@plt>
   148b4:	cmp	r6, r4
   148b8:	beq	148d8 <mycore_utils_avl_tree_node_balance@@Base+0xf0>
   148bc:	str	r0, [r5, #8]
   148c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148c4:	ldr	r0, [r4, #16]
   148c8:	cmp	r0, #0
   148cc:	streq	r4, [r8]
   148d0:	ldr	r0, [r4, #16]
   148d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148d8:	str	r0, [r5, #12]
   148dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   148e0:	mov	r0, r4
   148e4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   148e8:	b	147a4 <mycore_utils_avl_tree_node_rotate_left@@Base>
   148ec:	mov	r0, r4
   148f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   148f4:	b	14760 <mycore_utils_avl_tree_node_rotate_right@@Base>

000148f8 <mycore_utils_avl_tree_add@@Base>:
   148f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148fc:	add	fp, sp, #24
   14900:	mov	r8, r3
   14904:	mov	r6, r2
   14908:	mov	r4, r1
   1490c:	ldr	r5, [r1]
   14910:	cmp	r5, #0
   14914:	beq	14980 <mycore_utils_avl_tree_add@@Base+0x88>
   14918:	ldr	r0, [r0]
   1491c:	mov	r1, #0
   14920:	bl	11e54 <mcobject_malloc@plt>
   14924:	mov	r7, r0
   14928:	bl	12358 <mycore_utils_avl_tree_node_clean@plt>
   1492c:	ldr	r1, [r5, #4]
   14930:	cmp	r1, r6
   14934:	bne	1495c <mycore_utils_avl_tree_add@@Base+0x64>
   14938:	mov	r0, r5
   1493c:	b	14978 <mycore_utils_avl_tree_add@@Base+0x80>
   14940:	ldr	r0, [r5, #12]
   14944:	cmp	r0, #0
   14948:	beq	14994 <mycore_utils_avl_tree_add@@Base+0x9c>
   1494c:	ldr	r1, [r0, #4]
   14950:	cmp	r1, r6
   14954:	mov	r5, r0
   14958:	beq	14978 <mycore_utils_avl_tree_add@@Base+0x80>
   1495c:	cmp	r1, r6
   14960:	bls	14940 <mycore_utils_avl_tree_add@@Base+0x48>
   14964:	ldr	r0, [r5, #8]
   14968:	cmp	r0, #0
   1496c:	bne	1494c <mycore_utils_avl_tree_add@@Base+0x54>
   14970:	add	r0, r5, #8
   14974:	b	14998 <mycore_utils_avl_tree_add@@Base+0xa0>
   14978:	str	r8, [r0]
   1497c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14980:	mov	r1, r6
   14984:	mov	r2, r8
   14988:	bl	12280 <mycore_utils_avl_tree_node_create_root@plt>
   1498c:	str	r0, [r4]
   14990:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14994:	add	r0, r5, #12
   14998:	str	r7, [r0]
   1499c:	str	r5, [r7, #16]
   149a0:	str	r8, [r7]
   149a4:	str	r6, [r7, #4]
   149a8:	mov	r0, r7
   149ac:	mov	r1, r4
   149b0:	bl	11e18 <mycore_utils_avl_tree_node_balance@plt>
   149b4:	mov	r7, r0
   149b8:	cmp	r0, #0
   149bc:	bne	149a8 <mycore_utils_avl_tree_add@@Base+0xb0>
   149c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149c4 <mycore_utils_avl_tree_find_min@@Base>:
   149c4:	cmp	r0, #0
   149c8:	moveq	r1, #0
   149cc:	moveq	r0, r1
   149d0:	bxeq	lr
   149d4:	mov	r1, r0
   149d8:	ldr	r0, [r0, #12]
   149dc:	cmp	r0, #0
   149e0:	bne	149d4 <mycore_utils_avl_tree_find_min@@Base+0x10>
   149e4:	mov	r0, r1
   149e8:	bx	lr

000149ec <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   149ec:	push	{r4, sl, fp, lr}
   149f0:	add	fp, sp, #8
   149f4:	mov	r4, r2
   149f8:	cmp	r1, #0
   149fc:	beq	14a54 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x68>
   14a00:	ldr	r2, [r0, #8]
   14a04:	cmp	r2, r1
   14a08:	beq	14a78 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x8c>
   14a0c:	ldr	r2, [r1, #16]
   14a10:	mov	r3, #0
   14a14:	str	r3, [r2, #12]
   14a18:	ldr	r2, [r0, #16]
   14a1c:	str	r2, [r1, #16]
   14a20:	ldr	r2, [r0, #12]
   14a24:	str	r2, [r1, #12]
   14a28:	ldr	r2, [r0, #8]
   14a2c:	str	r2, [r1, #8]
   14a30:	ldr	r2, [r0, #8]
   14a34:	cmp	r2, #0
   14a38:	strne	r1, [r2, #16]
   14a3c:	ldr	r3, [r0, #12]
   14a40:	cmp	r3, #0
   14a44:	mov	r2, r1
   14a48:	strne	r1, [r3, #16]
   14a4c:	movne	r2, r1
   14a50:	b	14aa0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xb4>
   14a54:	ldr	r2, [r0, #16]
   14a58:	cmp	r2, #0
   14a5c:	beq	14ae0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xf4>
   14a60:	ldr	r1, [r0, #12]
   14a64:	ldr	r3, [r2, #8]
   14a68:	cmp	r3, r0
   14a6c:	streq	r1, [r2, #8]
   14a70:	strne	r1, [r2, #12]
   14a74:	b	14ac4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14a78:	ldr	r2, [r0, #16]
   14a7c:	str	r2, [r1, #16]
   14a80:	ldr	r2, [r0, #12]
   14a84:	str	r2, [r1, #12]
   14a88:	ldr	r2, [r1, #8]
   14a8c:	cmp	r2, #0
   14a90:	moveq	r2, r1
   14a94:	ldr	r3, [r0, #12]
   14a98:	cmp	r3, #0
   14a9c:	strne	r1, [r3, #16]
   14aa0:	ldr	lr, [r0, #16]
   14aa4:	cmp	lr, #0
   14aa8:	mov	ip, r4
   14aac:	beq	14ac0 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd4>
   14ab0:	ldr	r3, [lr, #8]!
   14ab4:	cmp	r3, r0
   14ab8:	addne	lr, lr, #4
   14abc:	mov	ip, lr
   14ac0:	str	r1, [ip]
   14ac4:	mov	r0, r2
   14ac8:	mov	r1, r4
   14acc:	bl	11e18 <mycore_utils_avl_tree_node_balance@plt>
   14ad0:	mov	r2, r0
   14ad4:	cmp	r0, #0
   14ad8:	bne	14ac4 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xd8>
   14adc:	pop	{r4, sl, fp, pc}
   14ae0:	ldr	r0, [r0, #12]
   14ae4:	str	r0, [r4]
   14ae8:	pop	{r4, sl, fp, pc}

00014aec <mycore_utils_avl_tree_delete@@Base>:
   14aec:	push	{r4, r5, r6, r7, fp, lr}
   14af0:	add	fp, sp, #16
   14af4:	ldr	r4, [r1]
   14af8:	mov	r6, #0
   14afc:	cmp	r4, #0
   14b00:	beq	14b2c <mycore_utils_avl_tree_delete@@Base+0x40>
   14b04:	mov	r7, r1
   14b08:	mov	r5, r0
   14b0c:	ldr	r0, [r4, #4]
   14b10:	cmp	r0, r2
   14b14:	beq	14b34 <mycore_utils_avl_tree_delete@@Base+0x48>
   14b18:	mov	r0, #12
   14b1c:	movwhi	r0, #8
   14b20:	ldr	r4, [r4, r0]
   14b24:	cmp	r4, #0
   14b28:	bne	14b0c <mycore_utils_avl_tree_delete@@Base+0x20>
   14b2c:	mov	r0, r6
   14b30:	pop	{r4, r5, r6, r7, fp, pc}
   14b34:	ldr	r0, [r4, #8]
   14b38:	bl	111d0 <mycore_utils_avl_tree_find_min@plt>
   14b3c:	mov	r1, r0
   14b40:	mov	r0, r4
   14b44:	mov	r2, r7
   14b48:	bl	118a8 <mycore_utils_avl_tree_rotate_for_delete@plt>
   14b4c:	ldr	r6, [r4]
   14b50:	ldr	r0, [r5]
   14b54:	mov	r1, r4
   14b58:	bl	11410 <mcobject_free@plt>
   14b5c:	mov	r0, r6
   14b60:	pop	{r4, r5, r6, r7, fp, pc}

00014b64 <mycore_utils_avl_tree_search_by_type@@Base>:
   14b64:	mov	r0, #0
   14b68:	cmp	r1, #0
   14b6c:	bxeq	lr
   14b70:	ldr	r3, [r1, #4]
   14b74:	cmp	r3, r2
   14b78:	beq	14b8c <mycore_utils_avl_tree_search_by_type@@Base+0x28>
   14b7c:	mov	r3, #12
   14b80:	movwhi	r3, #8
   14b84:	ldr	r1, [r1, r3]
   14b88:	b	14b68 <mycore_utils_avl_tree_search_by_type@@Base+0x4>
   14b8c:	mov	r0, r1
   14b90:	bx	lr

00014b94 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   14b94:	push	{r4, r5, r6, r7, fp, lr}
   14b98:	add	fp, sp, #16
   14b9c:	cmp	r1, #0
   14ba0:	beq	14be0 <mycore_utils_avl_tree_list_all_nodes@@Base+0x4c>
   14ba4:	mov	r4, r3
   14ba8:	mov	r5, r2
   14bac:	mov	r6, r1
   14bb0:	mov	r7, r0
   14bb4:	mov	r0, r6
   14bb8:	mov	r1, r4
   14bbc:	blx	r5
   14bc0:	ldr	r1, [r6, #8]
   14bc4:	mov	r0, r7
   14bc8:	mov	r2, r5
   14bcc:	mov	r3, r4
   14bd0:	bl	116d4 <mycore_utils_avl_tree_list_all_nodes@plt>
   14bd4:	ldr	r6, [r6, #12]
   14bd8:	cmp	r6, #0
   14bdc:	bne	14bb4 <mycore_utils_avl_tree_list_all_nodes@@Base+0x20>
   14be0:	pop	{r4, r5, r6, r7, fp, pc}

00014be4 <mchar_async_create@@Base>:
   14be4:	mov	r0, #1
   14be8:	mov	r1, #84	; 0x54
   14bec:	b	113a4 <mycore_calloc@plt>

00014bf0 <mchar_async_init@@Base>:
   14bf0:	push	{r4, r5, fp, lr}
   14bf4:	add	fp, sp, #8
   14bf8:	mov	r4, r0
   14bfc:	str	r1, [r0, #16]
   14c00:	mov	r0, #1024	; 0x400
   14c04:	str	r0, [r4, #8]
   14c08:	cmp	r2, #4096	; 0x1000
   14c0c:	movls	r2, #4096	; 0x1000
   14c10:	str	r2, [r4]
   14c14:	mov	r0, #1024	; 0x400
   14c18:	mov	r1, #4
   14c1c:	bl	113a4 <mycore_calloc@plt>
   14c20:	str	r0, [r4, #4]
   14c24:	mov	r5, #2
   14c28:	cmp	r0, #0
   14c2c:	beq	14cf8 <mchar_async_init@@Base+0x108>
   14c30:	ldr	r0, [r4, #16]
   14c34:	mov	r1, #20
   14c38:	bl	113a4 <mycore_calloc@plt>
   14c3c:	ldr	r1, [r4, #4]
   14c40:	str	r0, [r1]
   14c44:	ldr	r0, [r4, #4]
   14c48:	ldr	r1, [r0]
   14c4c:	cmp	r1, #0
   14c50:	beq	14c78 <mchar_async_init@@Base+0x88>
   14c54:	add	r0, r4, #24
   14c58:	bl	11fec <mchar_async_cache_init@plt>
   14c5c:	cmp	r0, #0
   14c60:	beq	14c88 <mchar_async_init@@Base+0x98>
   14c64:	mov	r5, r0
   14c68:	ldr	r0, [r4, #4]
   14c6c:	ldr	r0, [r0]
   14c70:	bl	12184 <mycore_free@plt>
   14c74:	ldr	r0, [r4, #4]
   14c78:	bl	12184 <mycore_free@plt>
   14c7c:	str	r0, [r4, #4]
   14c80:	mov	r0, r5
   14c84:	pop	{r4, r5, fp, pc}
   14c88:	mov	r0, #64	; 0x40
   14c8c:	mov	r5, #0
   14c90:	str	r5, [r4, #60]	; 0x3c
   14c94:	str	r0, [r4, #64]	; 0x40
   14c98:	mov	r0, #64	; 0x40
   14c9c:	mov	r1, #36	; 0x24
   14ca0:	bl	113a4 <mycore_calloc@plt>
   14ca4:	str	r0, [r4, #56]	; 0x38
   14ca8:	cmp	r0, #0
   14cac:	beq	14cf8 <mchar_async_init@@Base+0x108>
   14cb0:	mov	r5, #0
   14cb4:	ldr	r0, [r4, #64]	; 0x40
   14cb8:	str	r5, [r4, #72]	; 0x48
   14cbc:	str	r0, [r4, #76]	; 0x4c
   14cc0:	lsl	r0, r0, #2
   14cc4:	bl	1204c <mycore_malloc@plt>
   14cc8:	str	r0, [r4, #68]	; 0x44
   14ccc:	cmp	r0, #0
   14cd0:	beq	14cf8 <mchar_async_init@@Base+0x108>
   14cd4:	mov	r0, r4
   14cd8:	bl	11f98 <mchar_async_clean@plt>
   14cdc:	bl	11254 <mcsync_create@plt>
   14ce0:	str	r0, [r4, #80]	; 0x50
   14ce4:	cmp	r0, #0
   14ce8:	mov	r5, #2
   14cec:	beq	14cf8 <mchar_async_init@@Base+0x108>
   14cf0:	pop	{r4, r5, fp, lr}
   14cf4:	b	11c80 <mcsync_init@plt>
   14cf8:	mov	r0, r5
   14cfc:	pop	{r4, r5, fp, pc}

00014d00 <mchar_async_cache_init@@Base>:
   14d00:	push	{r4, r5, fp, lr}
   14d04:	add	fp, sp, #8
   14d08:	mov	r4, r0
   14d0c:	mov	r5, #0
   14d10:	mov	r0, #1
   14d14:	mov	r1, #1024	; 0x400
   14d18:	str	r1, [r4, #4]
   14d1c:	str	r0, [r4, #8]
   14d20:	str	r5, [r4, #12]
   14d24:	str	r5, [r4, #16]
   14d28:	mov	r0, #20480	; 0x5000
   14d2c:	bl	1204c <mycore_malloc@plt>
   14d30:	str	r0, [r4]
   14d34:	cmp	r0, #0
   14d38:	beq	14d84 <mchar_async_cache_init@@Base+0x84>
   14d3c:	str	r5, [r0, #8]
   14d40:	ldr	r0, [r4]
   14d44:	str	r5, [r0, #12]
   14d48:	str	r5, [r0]
   14d4c:	str	r5, [r0, #4]
   14d50:	ldr	r0, [r4, #4]
   14d54:	str	r5, [r4, #24]
   14d58:	str	r0, [r4, #28]
   14d5c:	lsl	r0, r0, #2
   14d60:	bl	1204c <mycore_malloc@plt>
   14d64:	str	r0, [r4, #20]
   14d68:	cmp	r0, #0
   14d6c:	beq	14d78 <mchar_async_cache_init@@Base+0x78>
   14d70:	mov	r0, r5
   14d74:	pop	{r4, r5, fp, pc}
   14d78:	ldr	r0, [r4]
   14d7c:	bl	12184 <mycore_free@plt>
   14d80:	str	r0, [r4]
   14d84:	mov	r5, #2
   14d88:	mov	r0, r5
   14d8c:	pop	{r4, r5, fp, pc}

00014d90 <mchar_async_clean@@Base>:
   14d90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d94:	add	fp, sp, #24
   14d98:	mov	r8, r0
   14d9c:	mov	r0, #1
   14da0:	str	r0, [r8, #12]
   14da4:	mov	r5, #0
   14da8:	str	r5, [r8, #20]
   14dac:	add	r0, r8, #24
   14db0:	bl	11b54 <mchar_async_cache_clean@plt>
   14db4:	ldr	r0, [r8, #60]	; 0x3c
   14db8:	cmp	r0, #0
   14dbc:	beq	14e10 <mchar_async_clean@@Base+0x80>
   14dc0:	mov	r6, #0
   14dc4:	mov	r7, #0
   14dc8:	ldr	r4, [r8, #56]	; 0x38
   14dcc:	add	r5, r4, r6
   14dd0:	add	r0, r5, #4
   14dd4:	bl	11b54 <mchar_async_cache_clean@plt>
   14dd8:	ldr	r2, [r8]
   14ddc:	mov	r0, r8
   14de0:	mov	r1, r5
   14de4:	bl	11ddc <mchar_async_chunk_malloc@plt>
   14de8:	str	r0, [r4, r6]
   14dec:	cmp	r0, #0
   14df0:	beq	14e18 <mchar_async_clean@@Base+0x88>
   14df4:	mov	r5, #0
   14df8:	str	r5, [r0, #16]
   14dfc:	add	r6, r6, #36	; 0x24
   14e00:	add	r7, r7, #1
   14e04:	ldr	r0, [r8, #60]	; 0x3c
   14e08:	cmp	r7, r0
   14e0c:	bcc	14dc8 <mchar_async_clean@@Base+0x38>
   14e10:	mov	r0, r5
   14e14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14e18:	mov	r5, #2
   14e1c:	mov	r0, r5
   14e20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014e24 <mchar_async_cache_clean@@Base>:
   14e24:	mov	r1, #0
   14e28:	str	r1, [r0, #24]
   14e2c:	mov	r2, #1
   14e30:	str	r2, [r0, #8]
   14e34:	str	r1, [r0, #12]
   14e38:	str	r1, [r0, #16]
   14e3c:	ldr	r0, [r0]
   14e40:	cmp	r0, #0
   14e44:	bxeq	lr
   14e48:	vmov.i32	q8, #0	; 0x00000000
   14e4c:	vst1.32	{d16-d17}, [r0]
   14e50:	bx	lr

00014e54 <mchar_async_chunk_malloc@@Base>:
   14e54:	push	{r4, r5, fp, lr}
   14e58:	add	fp, sp, #8
   14e5c:	mov	r4, r2
   14e60:	mov	r5, r0
   14e64:	ldr	r0, [r0, #80]	; 0x50
   14e68:	bl	11c68 <mcsync_lock@plt>
   14e6c:	mov	r0, r5
   14e70:	mov	r2, r4
   14e74:	bl	11f74 <mchar_async_chunk_malloc_without_lock@plt>
   14e78:	mov	r4, r0
   14e7c:	ldr	r0, [r5, #80]	; 0x50
   14e80:	bl	12268 <mcsync_unlock@plt>
   14e84:	mov	r0, r4
   14e88:	pop	{r4, r5, fp, pc}

00014e8c <mchar_async_destroy@@Base>:
   14e8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e90:	add	fp, sp, #24
   14e94:	cmp	r0, #0
   14e98:	beq	15018 <mchar_async_destroy@@Base+0x18c>
   14e9c:	mov	r8, r1
   14ea0:	mov	r4, r0
   14ea4:	ldr	r0, [r0, #56]	; 0x38
   14ea8:	cmp	r0, #0
   14eac:	beq	14ef8 <mchar_async_destroy@@Base+0x6c>
   14eb0:	ldr	r0, [r4, #60]	; 0x3c
   14eb4:	cmp	r0, #0
   14eb8:	beq	14ee8 <mchar_async_destroy@@Base+0x5c>
   14ebc:	mov	r5, #0
   14ec0:	mov	r6, #4
   14ec4:	ldr	r0, [r4, #56]	; 0x38
   14ec8:	add	r0, r0, r6
   14ecc:	mov	r1, #0
   14ed0:	bl	11ca4 <mchar_async_cache_destroy@plt>
   14ed4:	add	r6, r6, #36	; 0x24
   14ed8:	add	r5, r5, #1
   14edc:	ldr	r0, [r4, #60]	; 0x3c
   14ee0:	cmp	r5, r0
   14ee4:	bcc	14ec4 <mchar_async_destroy@@Base+0x38>
   14ee8:	ldr	r0, [r4, #56]	; 0x38
   14eec:	bl	12184 <mycore_free@plt>
   14ef0:	mov	r0, #0
   14ef4:	str	r0, [r4, #56]	; 0x38
   14ef8:	ldr	r0, [r4, #68]	; 0x44
   14efc:	cmp	r0, #0
   14f00:	beq	14f08 <mchar_async_destroy@@Base+0x7c>
   14f04:	bl	12184 <mycore_free@plt>
   14f08:	ldr	r0, [r4, #4]
   14f0c:	cmp	r0, #0
   14f10:	beq	14fb4 <mchar_async_destroy@@Base+0x128>
   14f14:	ldr	r0, [r4, #12]
   14f18:	cmp	r0, #0
   14f1c:	beq	14fa4 <mchar_async_destroy@@Base+0x118>
   14f20:	mov	r6, #0
   14f24:	b	14f40 <mchar_async_destroy@@Base+0xb4>
   14f28:	ldr	r0, [r0]
   14f2c:	bl	12184 <mycore_free@plt>
   14f30:	ldr	r0, [r4, #12]
   14f34:	add	r6, r6, #1
   14f38:	cmp	r6, r0
   14f3c:	bcs	14fa4 <mchar_async_destroy@@Base+0x118>
   14f40:	ldr	r0, [r4, #4]
   14f44:	ldr	r0, [r0, r6, lsl #2]
   14f48:	cmp	r0, #0
   14f4c:	beq	14f30 <mchar_async_destroy@@Base+0xa4>
   14f50:	ldr	r0, [r4, #4]
   14f54:	ldr	r1, [r4, #16]
   14f58:	add	r0, r0, r6, lsl #2
   14f5c:	cmp	r1, #0
   14f60:	beq	14f28 <mchar_async_destroy@@Base+0x9c>
   14f64:	mov	r7, #0
   14f68:	mov	r5, #0
   14f6c:	b	14f8c <mchar_async_destroy@@Base+0x100>
   14f70:	ldr	r0, [r4, #4]
   14f74:	ldr	r1, [r4, #16]
   14f78:	add	r0, r0, r6, lsl #2
   14f7c:	add	r7, r7, #20
   14f80:	add	r5, r5, #1
   14f84:	cmp	r5, r1
   14f88:	bcs	14f28 <mchar_async_destroy@@Base+0x9c>
   14f8c:	ldr	r0, [r0]
   14f90:	ldr	r0, [r0, r7]
   14f94:	cmp	r0, #0
   14f98:	beq	14f70 <mchar_async_destroy@@Base+0xe4>
   14f9c:	bl	12184 <mycore_free@plt>
   14fa0:	b	14f70 <mchar_async_destroy@@Base+0xe4>
   14fa4:	ldr	r0, [r4, #4]
   14fa8:	bl	12184 <mycore_free@plt>
   14fac:	mov	r0, #0
   14fb0:	str	r0, [r4, #4]
   14fb4:	add	r0, r4, #24
   14fb8:	mov	r6, #0
   14fbc:	mov	r1, #0
   14fc0:	bl	11ca4 <mchar_async_cache_destroy@plt>
   14fc4:	ldr	r0, [r4, #80]	; 0x50
   14fc8:	mov	r1, #1
   14fcc:	bl	11620 <mcsync_destroy@plt>
   14fd0:	vmov.i32	q8, #0	; 0x00000000
   14fd4:	add	r0, r4, #16
   14fd8:	vst1.32	{d16-d17}, [r0]
   14fdc:	add	r0, r4, #32
   14fe0:	vst1.32	{d16-d17}, [r0]
   14fe4:	add	r0, r4, #48	; 0x30
   14fe8:	vst1.32	{d16-d17}, [r0]
   14fec:	str	r6, [r4, #80]	; 0x50
   14ff0:	mov	r0, #64	; 0x40
   14ff4:	mov	r1, r4
   14ff8:	vst1.32	{d16-d17}, [r1], r0
   14ffc:	vst1.32	{d16-d17}, [r1]
   15000:	cmp	r8, #0
   15004:	beq	15024 <mchar_async_destroy@@Base+0x198>
   15008:	mov	r0, r4
   1500c:	bl	12184 <mycore_free@plt>
   15010:	mov	r0, r6
   15014:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15018:	mov	r6, #0
   1501c:	mov	r0, r6
   15020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15024:	mov	r0, r4
   15028:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001502c <mchar_async_cache_destroy@@Base>:
   1502c:	push	{r4, r5, r6, sl, fp, lr}
   15030:	add	fp, sp, #16
   15034:	mov	r4, #0
   15038:	cmp	r0, #0
   1503c:	beq	15078 <mchar_async_cache_destroy@@Base+0x4c>
   15040:	mov	r6, r1
   15044:	mov	r5, r0
   15048:	ldr	r0, [r0]
   1504c:	cmp	r0, #0
   15050:	beq	15058 <mchar_async_cache_destroy@@Base+0x2c>
   15054:	bl	12184 <mycore_free@plt>
   15058:	ldr	r0, [r5, #20]
   1505c:	cmp	r0, #0
   15060:	beq	15068 <mchar_async_cache_destroy@@Base+0x3c>
   15064:	bl	12184 <mycore_free@plt>
   15068:	cmp	r6, #0
   1506c:	beq	15080 <mchar_async_cache_destroy@@Base+0x54>
   15070:	mov	r0, r5
   15074:	bl	12184 <mycore_free@plt>
   15078:	mov	r0, r4
   1507c:	pop	{r4, r5, r6, sl, fp, pc}
   15080:	mov	r0, r5
   15084:	pop	{r4, r5, r6, sl, fp, pc}

00015088 <mchar_async_mem_malloc@@Base>:
   15088:	cmp	r2, #0
   1508c:	bxeq	lr
   15090:	push	{r4, r5, r6, sl, fp, lr}
   15094:	add	fp, sp, #16
   15098:	mov	r5, r3
   1509c:	mov	r4, r2
   150a0:	mov	r6, r0
   150a4:	ldr	r0, [r2]
   150a8:	cmp	r0, #0
   150ac:	beq	150cc <mchar_async_mem_malloc@@Base+0x44>
   150b0:	ldr	r1, [r4, #8]
   150b4:	cmp	r1, r5
   150b8:	bcs	150e4 <mchar_async_mem_malloc@@Base+0x5c>
   150bc:	bl	12184 <mycore_free@plt>
   150c0:	ldr	r0, [r6]
   150c4:	add	r0, r0, r5
   150c8:	b	150d8 <mchar_async_mem_malloc@@Base+0x50>
   150cc:	ldr	r0, [r6]
   150d0:	cmp	r0, r5
   150d4:	movcc	r0, r5
   150d8:	str	r0, [r4, #8]
   150dc:	bl	1204c <mycore_malloc@plt>
   150e0:	str	r0, [r4]
   150e4:	mov	r0, #0
   150e8:	str	r0, [r4, #4]
   150ec:	pop	{r4, r5, r6, sl, fp, lr}
   150f0:	bx	lr

000150f4 <mchar_async_chunk_malloc_without_lock@@Base>:
   150f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150f8:	add	fp, sp, #24
   150fc:	mov	r8, r2
   15100:	mov	r5, r0
   15104:	ldr	r0, [r0, #40]	; 0x28
   15108:	cmp	r0, #0
   1510c:	beq	15138 <mchar_async_chunk_malloc_without_lock@@Base+0x44>
   15110:	add	r5, r5, #24
   15114:	mov	r0, r5
   15118:	mov	r1, r8
   1511c:	bl	122f8 <mchar_async_cache_delete@plt>
   15120:	cmp	r0, #0
   15124:	beq	15218 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   15128:	ldr	r1, [r5]
   1512c:	add	r0, r0, r0, lsl #2
   15130:	ldr	r0, [r1, r0, lsl #2]
   15134:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15138:	ldr	r0, [r5, #16]
   1513c:	ldr	r1, [r5, #20]
   15140:	cmp	r1, r0
   15144:	bcc	151d4 <mchar_async_chunk_malloc_without_lock@@Base+0xe0>
   15148:	ldr	r1, [r5, #8]
   1514c:	ldr	r7, [r5, #12]
   15150:	add	r0, r7, #1
   15154:	str	r0, [r5, #12]
   15158:	cmp	r0, r1
   1515c:	bcc	151a0 <mchar_async_chunk_malloc_without_lock@@Base+0xac>
   15160:	lsl	r0, r1, #1
   15164:	str	r0, [r5, #8]
   15168:	ldr	r0, [r5, #4]
   1516c:	lsl	r1, r1, #3
   15170:	bl	110b0 <mycore_realloc@plt>
   15174:	cmp	r0, #0
   15178:	beq	15218 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   1517c:	mov	r6, r0
   15180:	ldr	r1, [r5, #8]
   15184:	ldr	r2, [r5, #12]
   15188:	add	r0, r0, r2, lsl #2
   1518c:	sub	r1, r1, r2
   15190:	lsl	r2, r1, #2
   15194:	mov	r1, #0
   15198:	bl	11cc8 <memset@plt>
   1519c:	str	r6, [r5, #4]
   151a0:	ldr	r0, [r5, #4]
   151a4:	ldr	r0, [r0, r7, lsl #2]
   151a8:	cmp	r0, #0
   151ac:	bne	151cc <mchar_async_chunk_malloc_without_lock@@Base+0xd8>
   151b0:	ldr	r0, [r5, #16]
   151b4:	mov	r1, #20
   151b8:	bl	113a4 <mycore_calloc@plt>
   151bc:	cmp	r0, #0
   151c0:	beq	15218 <mchar_async_chunk_malloc_without_lock@@Base+0x124>
   151c4:	ldr	r1, [r5, #4]
   151c8:	str	r0, [r1, r7, lsl #2]
   151cc:	mov	r0, #0
   151d0:	str	r0, [r5, #20]
   151d4:	ldr	r0, [r5, #4]
   151d8:	ldr	r1, [r5, #12]
   151dc:	ldr	r2, [r5, #20]
   151e0:	add	r0, r0, r1, lsl #2
   151e4:	ldr	r7, [r0, #-4]
   151e8:	add	r0, r2, #1
   151ec:	str	r0, [r5, #20]
   151f0:	add	r4, r2, r2, lsl #2
   151f4:	add	r6, r7, r4, lsl #2
   151f8:	mov	r0, r5
   151fc:	mov	r2, r6
   15200:	mov	r3, r8
   15204:	bl	123f4 <mchar_async_mem_malloc@plt>
   15208:	ldr	r0, [r7, r4, lsl #2]
   1520c:	cmp	r0, #0
   15210:	movne	r0, r6
   15214:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15218:	mov	r0, #0
   1521c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015220 <mchar_async_cache_delete@@Base>:
   15220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15224:	add	fp, sp, #28
   15228:	sub	sp, sp, #4
   1522c:	ldr	r2, [r0, #12]
   15230:	mov	r8, #0
   15234:	cmp	r2, #0
   15238:	beq	15464 <mchar_async_cache_delete@@Base+0x244>
   1523c:	mov	sl, r0
   15240:	ldr	r0, [r0]
   15244:	add	r3, r2, r2, lsl #2
   15248:	add	r3, r0, r3, lsl #2
   1524c:	ldr	r7, [r3, #4]
   15250:	cmp	r7, r1
   15254:	bcs	15268 <mchar_async_cache_delete@@Base+0x48>
   15258:	ldr	r2, [r3, #12]
   1525c:	cmp	r2, #0
   15260:	bne	15244 <mchar_async_cache_delete@@Base+0x24>
   15264:	b	15464 <mchar_async_cache_delete@@Base+0x244>
   15268:	mov	r6, r2
   1526c:	add	r2, r2, r2, lsl #2
   15270:	add	r5, r0, r2, lsl #2
   15274:	mov	r3, r5
   15278:	ldr	r2, [r3, #12]!
   1527c:	add	r7, r2, r2, lsl #2
   15280:	add	r7, r0, r7, lsl #2
   15284:	ldr	r4, [r7, #4]
   15288:	cmp	r4, r1
   1528c:	beq	15268 <mchar_async_cache_delete@@Base+0x48>
   15290:	ldr	lr, [r5, #16]
   15294:	cmp	lr, #0
   15298:	beq	15308 <mchar_async_cache_delete@@Base+0xe8>
   1529c:	add	r1, lr, lr, lsl #2
   152a0:	add	ip, r0, r1, lsl #2
   152a4:	mov	r9, ip
   152a8:	ldr	r1, [r9, #8]!
   152ac:	cmp	r1, r6
   152b0:	bne	15360 <mchar_async_cache_delete@@Base+0x140>
   152b4:	ldr	ip, [r5, #8]!
   152b8:	cmp	r2, #0
   152bc:	beq	153c4 <mchar_async_cache_delete@@Base+0x1a4>
   152c0:	cmp	ip, #0
   152c4:	beq	153f0 <mchar_async_cache_delete@@Base+0x1d0>
   152c8:	ldr	r3, [r7, #8]!
   152cc:	mov	r4, r3
   152d0:	add	r1, r3, r3, lsl #2
   152d4:	add	r1, r0, r1, lsl #2
   152d8:	ldr	r3, [r1, #8]!
   152dc:	cmp	r3, #0
   152e0:	bne	152cc <mchar_async_cache_delete@@Base+0xac>
   152e4:	cmp	r4, #0
   152e8:	beq	153ec <mchar_async_cache_delete@@Base+0x1cc>
   152ec:	str	ip, [r1]
   152f0:	ldr	r1, [r5]
   152f4:	add	r1, r1, r1, lsl #2
   152f8:	add	r1, r0, r1, lsl #2
   152fc:	str	r4, [r1, #16]
   15300:	str	r2, [r9]
   15304:	b	15404 <mchar_async_cache_delete@@Base+0x1e4>
   15308:	ldr	r1, [r5, #8]
   1530c:	cmp	r1, #0
   15310:	beq	153b8 <mchar_async_cache_delete@@Base+0x198>
   15314:	cmp	r2, #0
   15318:	beq	153e0 <mchar_async_cache_delete@@Base+0x1c0>
   1531c:	add	r7, r1, r1, lsl #2
   15320:	add	ip, r0, r7, lsl #2
   15324:	ldr	r5, [ip, #12]!
   15328:	mov	r4, r5
   1532c:	add	r7, r5, r5, lsl #2
   15330:	add	r7, r0, r7, lsl #2
   15334:	ldr	r5, [r7, #12]!
   15338:	cmp	r5, #0
   1533c:	bne	15328 <mchar_async_cache_delete@@Base+0x108>
   15340:	cmp	r4, #0
   15344:	beq	153dc <mchar_async_cache_delete@@Base+0x1bc>
   15348:	str	r2, [r7]
   1534c:	ldr	r2, [r3]
   15350:	add	r2, r2, r2, lsl #2
   15354:	add	r2, r0, r2, lsl #2
   15358:	str	r4, [r2, #16]
   1535c:	b	153e0 <mchar_async_cache_delete@@Base+0x1c0>
   15360:	ldr	r1, [r5, #8]
   15364:	cmp	r1, #0
   15368:	beq	153d0 <mchar_async_cache_delete@@Base+0x1b0>
   1536c:	cmp	r2, #0
   15370:	beq	153fc <mchar_async_cache_delete@@Base+0x1dc>
   15374:	add	r4, r1, r1, lsl #2
   15378:	add	r9, r0, r4, lsl #2
   1537c:	ldr	r4, [r9, #12]!
   15380:	mov	r7, r4
   15384:	add	r4, r4, r4, lsl #2
   15388:	add	r5, r0, r4, lsl #2
   1538c:	ldr	r4, [r5, #12]!
   15390:	cmp	r4, #0
   15394:	bne	15380 <mchar_async_cache_delete@@Base+0x160>
   15398:	cmp	r7, #0
   1539c:	beq	153f8 <mchar_async_cache_delete@@Base+0x1d8>
   153a0:	str	r2, [r5]
   153a4:	ldr	r2, [r3]
   153a8:	add	r2, r2, r2, lsl #2
   153ac:	add	r2, r0, r2, lsl #2
   153b0:	str	r7, [r2, #16]
   153b4:	b	153fc <mchar_async_cache_delete@@Base+0x1dc>
   153b8:	str	r2, [sl, #12]
   153bc:	mov	lr, #0
   153c0:	b	15404 <mchar_async_cache_delete@@Base+0x1e4>
   153c4:	str	ip, [r9]
   153c8:	ldr	r2, [r5]
   153cc:	b	15404 <mchar_async_cache_delete@@Base+0x1e4>
   153d0:	str	r2, [ip, #12]
   153d4:	ldr	r2, [r3]
   153d8:	b	15404 <mchar_async_cache_delete@@Base+0x1e4>
   153dc:	str	r2, [ip]
   153e0:	str	r1, [sl, #12]
   153e4:	mov	lr, #0
   153e8:	b	15400 <mchar_async_cache_delete@@Base+0x1e0>
   153ec:	str	ip, [r7]
   153f0:	str	r2, [r9]
   153f4:	b	15404 <mchar_async_cache_delete@@Base+0x1e4>
   153f8:	str	r2, [r9]
   153fc:	str	r1, [ip, #12]
   15400:	mov	r2, r1
   15404:	add	r1, r2, r2, lsl #2
   15408:	add	r0, r0, r1, lsl #2
   1540c:	str	lr, [r0, #16]
   15410:	ldr	r0, [sl, #20]
   15414:	ldr	r1, [sl, #24]
   15418:	str	r6, [r0, r1, lsl #2]
   1541c:	ldr	r0, [sl, #24]
   15420:	ldr	r5, [sl, #28]
   15424:	add	r0, r0, #1
   15428:	str	r0, [sl, #24]
   1542c:	cmp	r0, r5
   15430:	bcc	15454 <mchar_async_cache_delete@@Base+0x234>
   15434:	ldr	r0, [sl, #20]
   15438:	lsl	r1, r5, #3
   1543c:	bl	110b0 <mycore_realloc@plt>
   15440:	cmp	r0, #0
   15444:	beq	15464 <mchar_async_cache_delete@@Base+0x244>
   15448:	str	r0, [sl, #20]
   1544c:	lsl	r0, r5, #1
   15450:	str	r0, [sl, #28]
   15454:	ldr	r0, [sl, #16]
   15458:	sub	r0, r0, #1
   1545c:	str	r0, [sl, #16]
   15460:	mov	r8, r6
   15464:	mov	r0, r8
   15468:	sub	sp, fp, #28
   1546c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015470 <mchar_async_node_add@@Base>:
   15470:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15474:	add	fp, sp, #24
   15478:	mov	r4, r1
   1547c:	mov	r5, r0
   15480:	ldr	r0, [r0, #80]	; 0x50
   15484:	bl	11c68 <mcsync_lock@plt>
   15488:	cmp	r0, #0
   1548c:	beq	154ac <mchar_async_node_add@@Base+0x3c>
   15490:	mov	r6, #0
   15494:	cmp	r4, #0
   15498:	beq	15544 <mchar_async_node_add@@Base+0xd4>
   1549c:	mov	r0, #96	; 0x60
   154a0:	str	r0, [r4]
   154a4:	mov	r0, r6
   154a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   154ac:	ldr	r0, [r5, #72]	; 0x48
   154b0:	cmp	r0, #0
   154b4:	beq	154cc <mchar_async_node_add@@Base+0x5c>
   154b8:	sub	r0, r0, #1
   154bc:	str	r0, [r5, #72]	; 0x48
   154c0:	ldr	r1, [r5, #68]	; 0x44
   154c4:	ldr	r6, [r1, r0, lsl #2]
   154c8:	b	154e4 <mchar_async_node_add@@Base+0x74>
   154cc:	ldr	r6, [r5, #60]	; 0x3c
   154d0:	ldr	r0, [r5, #64]	; 0x40
   154d4:	cmp	r6, r0
   154d8:	bcs	1554c <mchar_async_node_add@@Base+0xdc>
   154dc:	add	r0, r6, #1
   154e0:	str	r0, [r5, #60]	; 0x3c
   154e4:	ldr	r8, [r5, #56]	; 0x38
   154e8:	add	r7, r6, r6, lsl #3
   154ec:	add	r0, r8, r7, lsl #2
   154f0:	add	r0, r0, #4
   154f4:	bl	11fec <mchar_async_cache_init@plt>
   154f8:	cmp	r0, #0
   154fc:	beq	15510 <mchar_async_node_add@@Base+0xa0>
   15500:	cmp	r4, #0
   15504:	beq	1555c <mchar_async_node_add@@Base+0xec>
   15508:	mov	r0, #2
   1550c:	b	15558 <mchar_async_node_add@@Base+0xe8>
   15510:	ldr	r2, [r5]
   15514:	mov	r0, r5
   15518:	bl	11f74 <mchar_async_chunk_malloc_without_lock@plt>
   1551c:	str	r0, [r8, r7, lsl #2]
   15520:	cmp	r0, #0
   15524:	beq	15500 <mchar_async_node_add@@Base+0x90>
   15528:	mov	r7, #0
   1552c:	str	r7, [r0, #12]
   15530:	str	r7, [r0, #16]
   15534:	ldr	r0, [r5, #80]	; 0x50
   15538:	bl	12268 <mcsync_unlock@plt>
   1553c:	cmp	r4, #0
   15540:	strne	r7, [r4]
   15544:	mov	r0, r6
   15548:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1554c:	cmp	r4, #0
   15550:	beq	1555c <mchar_async_node_add@@Base+0xec>
   15554:	mov	r0, #98	; 0x62
   15558:	str	r0, [r4]
   1555c:	ldr	r0, [r5, #80]	; 0x50
   15560:	bl	12268 <mcsync_unlock@plt>
   15564:	mov	r6, #0
   15568:	mov	r0, r6
   1556c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015570 <mchar_async_node_clean@@Base>:
   15570:	ldr	r2, [r0, #60]	; 0x3c
   15574:	cmp	r2, r1
   15578:	bxls	lr
   1557c:	ldr	ip, [r0, #56]	; 0x38
   15580:	add	r1, r1, r1, lsl #3
   15584:	mov	r3, ip
   15588:	ldr	r0, [r3, r1, lsl #2]!
   1558c:	ldr	r2, [r0, #16]
   15590:	cmp	r2, #0
   15594:	beq	155ac <mchar_async_node_clean@@Base+0x3c>
   15598:	mov	r0, r2
   1559c:	ldr	r2, [r2, #16]
   155a0:	cmp	r2, #0
   155a4:	bne	15598 <mchar_async_node_clean@@Base+0x28>
   155a8:	str	r0, [r3]
   155ac:	mov	r2, #0
   155b0:	str	r2, [r0, #4]
   155b4:	add	r0, ip, r1, lsl #2
   155b8:	add	r0, r0, #4
   155bc:	b	14e24 <mchar_async_cache_clean@@Base>

000155c0 <mchar_async_node_delete@@Base>:
   155c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155c4:	add	fp, sp, #28
   155c8:	sub	sp, sp, #4
   155cc:	mov	r8, r1
   155d0:	mov	r4, r0
   155d4:	ldr	r0, [r0, #80]	; 0x50
   155d8:	bl	11c68 <mcsync_lock@plt>
   155dc:	ldr	r0, [r4, #60]	; 0x3c
   155e0:	cmp	r0, r8
   155e4:	bls	156a4 <mchar_async_node_delete@@Base+0xe4>
   155e8:	ldr	r9, [r4, #56]	; 0x38
   155ec:	add	sl, r8, r8, lsl #3
   155f0:	mov	r5, r9
   155f4:	ldr	r0, [r5, sl, lsl #2]!
   155f8:	mov	r6, r0
   155fc:	ldr	r0, [r0, #12]
   15600:	cmp	r0, #0
   15604:	bne	155f8 <mchar_async_node_delete@@Base+0x38>
   15608:	cmp	r6, #0
   1560c:	beq	15630 <mchar_async_node_delete@@Base+0x70>
   15610:	add	r7, r4, #24
   15614:	ldr	r2, [r6, #8]
   15618:	mov	r0, r7
   1561c:	mov	r1, r6
   15620:	bl	12034 <mchar_async_cache_add@plt>
   15624:	ldr	r6, [r6, #16]
   15628:	cmp	r6, #0
   1562c:	bne	15614 <mchar_async_node_delete@@Base+0x54>
   15630:	add	r0, r9, sl, lsl #2
   15634:	ldr	r1, [r0, #4]!
   15638:	cmp	r1, #0
   1563c:	movne	r1, #0
   15640:	blne	11ca4 <mchar_async_cache_destroy@plt>
   15644:	vmov.i32	q8, #0	; 0x00000000
   15648:	mov	r0, #32
   1564c:	add	r1, r5, #16
   15650:	vst1.32	{d16-d17}, [r5], r0
   15654:	mov	r0, #0
   15658:	str	r0, [r5]
   1565c:	vst1.32	{d16-d17}, [r1]
   15660:	ldr	r0, [r4, #72]	; 0x48
   15664:	ldr	r5, [r4, #76]	; 0x4c
   15668:	cmp	r0, r5
   1566c:	bcc	1568c <mchar_async_node_delete@@Base+0xcc>
   15670:	ldr	r0, [r4, #68]	; 0x44
   15674:	lsl	r1, r5, #2
   15678:	bl	110b0 <mycore_realloc@plt>
   1567c:	cmp	r0, #0
   15680:	strne	r0, [r4, #68]	; 0x44
   15684:	lslne	r0, r5, #1
   15688:	strne	r0, [r4, #76]	; 0x4c
   1568c:	ldr	r0, [r4, #68]	; 0x44
   15690:	ldr	r1, [r4, #72]	; 0x48
   15694:	str	r8, [r0, r1, lsl #2]
   15698:	ldr	r0, [r4, #72]	; 0x48
   1569c:	add	r0, r0, #1
   156a0:	str	r0, [r4, #72]	; 0x48
   156a4:	ldr	r0, [r4, #80]	; 0x50
   156a8:	sub	sp, fp, #28
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156b0:	b	12268 <mcsync_unlock@plt>

000156b4 <mchar_async_cache_add@@Base>:
   156b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   156b8:	add	fp, sp, #24
   156bc:	mov	r5, r2
   156c0:	mov	r8, r1
   156c4:	mov	r6, r0
   156c8:	mov	r7, r0
   156cc:	ldr	r4, [r7, #12]!
   156d0:	ldr	r0, [r7, #4]
   156d4:	add	r0, r0, #1
   156d8:	str	r0, [r7, #4]
   156dc:	cmp	r4, #0
   156e0:	beq	15740 <mchar_async_cache_add@@Base+0x8c>
   156e4:	mov	r0, r6
   156e8:	bl	11350 <mchar_async_cache_malloc@plt>
   156ec:	ldr	r3, [r6]
   156f0:	mov	r1, r4
   156f4:	add	r2, r4, r4, lsl #2
   156f8:	add	r2, r3, r2, lsl #2
   156fc:	ldr	r6, [r2, #4]
   15700:	cmp	r6, r5
   15704:	beq	15774 <mchar_async_cache_add@@Base+0xc0>
   15708:	bhi	157a4 <mchar_async_cache_add@@Base+0xf0>
   1570c:	ldr	r4, [r2, #12]!
   15710:	cmp	r4, #0
   15714:	bne	156f0 <mchar_async_cache_add@@Base+0x3c>
   15718:	str	r0, [r2]
   1571c:	add	r0, r0, r0, lsl #2
   15720:	add	r7, r3, r0, lsl #2
   15724:	mov	r0, #0
   15728:	str	r5, [r7, #4]
   1572c:	str	r0, [r7, #8]
   15730:	str	r0, [r7, #12]
   15734:	str	r1, [r7, #16]
   15738:	str	r8, [r7]
   1573c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15740:	ldr	r4, [r6]
   15744:	mov	r0, r6
   15748:	bl	11350 <mchar_async_cache_malloc@plt>
   1574c:	str	r0, [r6, #12]
   15750:	add	r0, r0, r0, lsl #2
   15754:	add	r7, r4, r0, lsl #2
   15758:	mov	r0, #0
   1575c:	str	r5, [r7, #4]
   15760:	str	r0, [r7, #8]
   15764:	str	r0, [r7, #12]
   15768:	str	r0, [r7, #16]
   1576c:	str	r8, [r7]
   15770:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15774:	add	r7, r0, r0, lsl #2
   15778:	add	r7, r3, r7, lsl #2
   1577c:	add	r6, r7, #12
   15780:	ldr	r4, [r2, #12]!
   15784:	cmp	r4, #0
   15788:	beq	157f4 <mchar_async_cache_add@@Base+0x140>
   1578c:	str	r4, [r6]
   15790:	ldr	r6, [r2]
   15794:	add	r6, r6, r6, lsl #2
   15798:	add	r3, r3, r6, lsl #2
   1579c:	str	r0, [r3, #16]
   157a0:	b	157fc <mchar_async_cache_add@@Base+0x148>
   157a4:	ldr	r4, [r2, #16]!
   157a8:	mov	ip, #0
   157ac:	cmp	r4, #0
   157b0:	mov	r6, #0
   157b4:	beq	157d0 <mchar_async_cache_add@@Base+0x11c>
   157b8:	add	r7, r4, r4, lsl #2
   157bc:	add	r7, r3, r7, lsl #2
   157c0:	ldr	r6, [r7, #8]!
   157c4:	cmp	r6, r1
   157c8:	addne	r7, r7, #4
   157cc:	mov	r6, r4
   157d0:	str	r0, [r7]
   157d4:	add	r7, r0, r0, lsl #2
   157d8:	add	r7, r3, r7, lsl #2
   157dc:	str	r6, [r7, #16]
   157e0:	str	r0, [r2]
   157e4:	str	r1, [r7, #12]
   157e8:	stmib	r7, {r5, ip}
   157ec:	str	r8, [r7]
   157f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   157f4:	mov	r3, #0
   157f8:	str	r3, [r6]
   157fc:	str	r0, [r2]
   15800:	mov	r0, #0
   15804:	str	r1, [r7, #16]
   15808:	str	r5, [r7, #4]
   1580c:	str	r0, [r7, #8]
   15810:	str	r8, [r7]
   15814:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015818 <mchar_sync_chunk_find_by_size@@Base>:
   15818:	ldr	r0, [r0]
   1581c:	ldr	r0, [r0, #12]
   15820:	cmp	r0, #0
   15824:	bxeq	lr
   15828:	ldr	r2, [r0, #8]
   1582c:	cmp	r2, r1
   15830:	bcc	1581c <mchar_sync_chunk_find_by_size@@Base+0x4>
   15834:	bx	lr

00015838 <mchar_sync_chunk_insert_after@@Base>:
   15838:	ldr	r2, [r0, #12]
   1583c:	cmp	r2, r1
   15840:	bxeq	lr
   15844:	ldr	r2, [r1, #16]
   15848:	cmp	r2, #0
   1584c:	ldrne	r3, [r1, #12]
   15850:	strne	r3, [r2, #12]
   15854:	ldr	r2, [r1, #12]
   15858:	cmp	r2, #0
   1585c:	ldrne	r3, [r1, #16]
   15860:	strne	r3, [r2, #16]
   15864:	ldr	r2, [r0, #12]
   15868:	cmp	r2, #0
   1586c:	strne	r1, [r2, #16]
   15870:	ldr	r2, [r0, #12]
   15874:	str	r2, [r1, #12]
   15878:	str	r0, [r1, #16]
   1587c:	str	r1, [r0, #12]
   15880:	bx	lr

00015884 <mchar_async_malloc@@Base>:
   15884:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15888:	add	fp, sp, #24
   1588c:	cmp	r2, #0
   15890:	beq	1594c <mchar_async_malloc@@Base+0xc8>
   15894:	mov	r4, r2
   15898:	mov	r8, r0
   1589c:	ldr	r5, [r0, #56]	; 0x38
   158a0:	add	r0, r1, r1, lsl #3
   158a4:	ldr	r6, [r5, r0, lsl #2]!
   158a8:	add	r7, r5, #4
   158ac:	ldr	r0, [r5, #20]
   158b0:	cmp	r0, #0
   158b4:	beq	158dc <mchar_async_malloc@@Base+0x58>
   158b8:	mov	r0, r7
   158bc:	mov	r1, r4
   158c0:	bl	122f8 <mchar_async_cache_delete@plt>
   158c4:	cmp	r0, #0
   158c8:	beq	158dc <mchar_async_malloc@@Base+0x58>
   158cc:	ldr	r1, [r7]
   158d0:	add	r0, r0, r0, lsl #2
   158d4:	ldr	r0, [r1, r0, lsl #2]
   158d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   158dc:	ldmib	r6, {r0, r2}
   158e0:	add	r1, r4, r0
   158e4:	add	r1, r1, #4
   158e8:	cmp	r1, r2
   158ec:	bls	15980 <mchar_async_malloc@@Base+0xfc>
   158f0:	add	r1, r0, #4
   158f4:	cmp	r1, r2
   158f8:	bcs	15924 <mchar_async_malloc@@Base+0xa0>
   158fc:	sub	r2, r2, r0
   15900:	subs	r2, r2, #4
   15904:	beq	15924 <mchar_async_malloc@@Base+0xa0>
   15908:	ldr	r3, [r6]
   1590c:	str	r2, [r3, r0]
   15910:	ldr	r0, [r6, #8]
   15914:	str	r0, [r6, #4]
   15918:	add	r1, r3, r1
   1591c:	mov	r0, r7
   15920:	bl	12034 <mchar_async_cache_add@plt>
   15924:	add	r7, r4, #4
   15928:	mov	r0, r5
   1592c:	mov	r1, r7
   15930:	bl	11f08 <mchar_sync_chunk_find_by_size@plt>
   15934:	cmp	r0, #0
   15938:	beq	15954 <mchar_async_malloc@@Base+0xd0>
   1593c:	mov	r6, r0
   15940:	mov	r0, #0
   15944:	str	r0, [r6, #4]
   15948:	b	15970 <mchar_async_malloc@@Base+0xec>
   1594c:	mov	r0, #0
   15950:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15954:	ldr	r2, [r8]
   15958:	cmp	r7, r2
   1595c:	addhi	r2, r2, r7
   15960:	mov	r0, r8
   15964:	mov	r1, r5
   15968:	bl	11ddc <mchar_async_chunk_malloc@plt>
   1596c:	mov	r6, r0
   15970:	ldr	r0, [r5]
   15974:	mov	r1, r6
   15978:	bl	113d4 <mchar_sync_chunk_insert_after@plt>
   1597c:	str	r6, [r5]
   15980:	ldm	r6, {r0, r1}
   15984:	str	r4, [r0, r1]!
   15988:	ldr	r1, [r6, #4]
   1598c:	add	r1, r4, r1
   15990:	add	r1, r1, #4
   15994:	str	r1, [r6, #4]
   15998:	add	r0, r0, #4
   1599c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000159a0 <mchar_async_realloc@@Base>:
   159a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159a4:	add	fp, sp, #28
   159a8:	sub	sp, sp, #4
   159ac:	mov	r5, #0
   159b0:	cmp	r2, #0
   159b4:	beq	15a5c <mchar_async_realloc@@Base+0xbc>
   159b8:	mov	r4, r2
   159bc:	ldr	r2, [fp, #8]
   159c0:	ldr	r7, [r4, #-4]
   159c4:	cmp	r7, r2
   159c8:	bcs	15a58 <mchar_async_realloc@@Base+0xb8>
   159cc:	mov	r8, r3
   159d0:	ldr	r9, [r0, #56]	; 0x38
   159d4:	add	sl, r1, r1, lsl #3
   159d8:	str	r9, [sp]
   159dc:	ldr	r6, [r9, sl, lsl #2]!
   159e0:	ldr	r3, [r6, #4]
   159e4:	cmp	r3, r7
   159e8:	bcc	15a10 <mchar_async_realloc@@Base+0x70>
   159ec:	sub	lr, r3, r7
   159f0:	ldr	r3, [r6]
   159f4:	add	ip, r3, lr
   159f8:	cmp	ip, r4
   159fc:	bne	15a10 <mchar_async_realloc@@Base+0x70>
   15a00:	add	lr, lr, r2
   15a04:	ldr	r3, [r6, #8]
   15a08:	cmp	lr, r3
   15a0c:	bls	15a4c <mchar_async_realloc@@Base+0xac>
   15a10:	bl	11d28 <mchar_async_malloc@plt>
   15a14:	cmp	r0, #0
   15a18:	beq	15a5c <mchar_async_realloc@@Base+0xbc>
   15a1c:	mov	r6, r0
   15a20:	mov	r1, r4
   15a24:	mov	r2, r8
   15a28:	bl	113ec <memcpy@plt>
   15a2c:	ldr	r0, [sp]
   15a30:	add	r0, r0, sl, lsl #2
   15a34:	add	r0, r0, #4
   15a38:	mov	r1, r4
   15a3c:	mov	r2, r7
   15a40:	bl	12034 <mchar_async_cache_add@plt>
   15a44:	mov	r5, r6
   15a48:	b	15a5c <mchar_async_realloc@@Base+0xbc>
   15a4c:	str	r2, [ip, #-4]
   15a50:	ldr	r0, [r9]
   15a54:	str	lr, [r0, #4]
   15a58:	mov	r5, r4
   15a5c:	mov	r0, r5
   15a60:	sub	sp, fp, #28
   15a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015a68 <mchar_async_crop_first_chars@@Base>:
   15a68:	push	{r4, r5, fp, lr}
   15a6c:	add	fp, sp, #8
   15a70:	cmp	r2, #0
   15a74:	beq	15ac0 <mchar_async_crop_first_chars@@Base+0x58>
   15a78:	add	r5, r2, r3
   15a7c:	ldr	r4, [r2, #-4]
   15a80:	sub	r4, r4, r3
   15a84:	str	r4, [r5, #-4]
   15a88:	add	r4, r3, #4
   15a8c:	cmp	r4, #5
   15a90:	bcc	15ab8 <mchar_async_crop_first_chars@@Base+0x50>
   15a94:	sub	r3, r3, #4
   15a98:	str	r3, [r2, #-4]
   15a9c:	ldr	r0, [r0, #56]	; 0x38
   15aa0:	add	r1, r1, r1, lsl #3
   15aa4:	add	r0, r0, r1, lsl #2
   15aa8:	add	r0, r0, #4
   15aac:	mov	r1, r2
   15ab0:	mov	r2, r3
   15ab4:	bl	12034 <mchar_async_cache_add@plt>
   15ab8:	mov	r0, r5
   15abc:	pop	{r4, r5, fp, pc}
   15ac0:	mov	r5, #0
   15ac4:	mov	r0, r5
   15ac8:	pop	{r4, r5, fp, pc}

00015acc <mchar_async_crop_first_chars_without_cache@@Base>:
   15acc:	cmp	r0, #0
   15ad0:	moveq	r0, #0
   15ad4:	bxeq	lr
   15ad8:	mov	r2, r0
   15adc:	add	r0, r0, r1
   15ae0:	ldr	r2, [r2, #-4]
   15ae4:	sub	r1, r2, r1
   15ae8:	str	r1, [r0, #-4]
   15aec:	bx	lr

00015af0 <mchar_async_get_size_by_data@@Base>:
   15af0:	cmp	r0, #0
   15af4:	ldrne	r0, [r0, #-4]
   15af8:	moveq	r0, #0
   15afc:	bx	lr

00015b00 <mchar_async_free@@Base>:
   15b00:	cmp	r2, #0
   15b04:	bxeq	lr
   15b08:	ldr	r0, [r0, #56]	; 0x38
   15b0c:	add	r1, r1, r1, lsl #3
   15b10:	add	r0, r0, r1, lsl #2
   15b14:	add	r0, r0, #4
   15b18:	ldr	r3, [r2, #-4]
   15b1c:	mov	r1, r2
   15b20:	mov	r2, r3
   15b24:	b	156b4 <mchar_async_cache_add@@Base>

00015b28 <mchar_async_cache_malloc@@Base>:
   15b28:	push	{r4, sl, fp, lr}
   15b2c:	add	fp, sp, #8
   15b30:	mov	r4, r0
   15b34:	ldr	r0, [r0, #24]
   15b38:	cmp	r0, #0
   15b3c:	beq	15b54 <mchar_async_cache_malloc@@Base+0x2c>
   15b40:	sub	r0, r0, #1
   15b44:	str	r0, [r4, #24]
   15b48:	ldr	r1, [r4, #20]
   15b4c:	ldr	r0, [r1, r0, lsl #2]
   15b50:	pop	{r4, sl, fp, pc}
   15b54:	ldr	r1, [r4, #4]
   15b58:	ldr	r0, [r4, #8]
   15b5c:	add	r0, r0, #1
   15b60:	str	r0, [r4, #8]
   15b64:	cmp	r0, r1
   15b68:	bcc	15b8c <mchar_async_cache_malloc@@Base+0x64>
   15b6c:	lsl	r0, r1, #1
   15b70:	str	r0, [r4, #4]
   15b74:	ldr	r0, [r4]
   15b78:	add	r1, r1, r1, lsl #2
   15b7c:	lsl	r1, r1, #3
   15b80:	bl	110b0 <mycore_realloc@plt>
   15b84:	cmp	r0, #0
   15b88:	strne	r0, [r4]
   15b8c:	ldr	r0, [r4, #8]
   15b90:	sub	r0, r0, #1
   15b94:	pop	{r4, sl, fp, pc}

00015b98 <mcobject_create@@Base>:
   15b98:	mov	r0, #1
   15b9c:	mov	r1, #24
   15ba0:	b	113a4 <mycore_calloc@plt>

00015ba4 <mcobject_init@@Base>:
   15ba4:	push	{r4, r5, fp, lr}
   15ba8:	add	fp, sp, #8
   15bac:	mov	r4, r0
   15bb0:	mov	r5, #0
   15bb4:	str	r5, [r0]
   15bb8:	str	r1, [r0, #8]
   15bbc:	str	r5, [r0, #12]
   15bc0:	str	r2, [r0, #16]
   15bc4:	str	r1, [r0, #20]
   15bc8:	lsl	r0, r1, #2
   15bcc:	bl	1204c <mycore_malloc@plt>
   15bd0:	str	r0, [r4, #4]
   15bd4:	cmp	r0, #0
   15bd8:	movweq	r5, #85	; 0x55
   15bdc:	mov	r0, r5
   15be0:	pop	{r4, r5, fp, pc}

00015be4 <mcobject_clean@@Base>:
   15be4:	push	{r4, r5, r6, sl, fp, lr}
   15be8:	add	fp, sp, #16
   15bec:	mov	r4, r0
   15bf0:	ldr	r0, [r0]
   15bf4:	cmp	r0, #0
   15bf8:	beq	15c48 <mcobject_clean@@Base+0x64>
   15bfc:	mov	r5, r0
   15c00:	ldr	r0, [r0, #12]
   15c04:	cmp	r0, #0
   15c08:	bne	15bfc <mcobject_clean@@Base+0x18>
   15c0c:	b	15c24 <mcobject_clean@@Base+0x40>
   15c10:	mov	r0, r5
   15c14:	bl	12184 <mycore_free@plt>
   15c18:	cmp	r6, #0
   15c1c:	mov	r5, r6
   15c20:	beq	15c3c <mcobject_clean@@Base+0x58>
   15c24:	ldr	r0, [r5]
   15c28:	ldr	r6, [r5, #16]
   15c2c:	cmp	r0, #0
   15c30:	beq	15c10 <mcobject_clean@@Base+0x2c>
   15c34:	bl	12184 <mycore_free@plt>
   15c38:	b	15c10 <mcobject_clean@@Base+0x2c>
   15c3c:	mov	r0, #0
   15c40:	str	r0, [r4, #12]
   15c44:	str	r0, [r4]
   15c48:	pop	{r4, r5, r6, sl, fp, pc}

00015c4c <mcobject_destroy@@Base>:
   15c4c:	push	{r4, r5, r6, sl, fp, lr}
   15c50:	add	fp, sp, #16
   15c54:	mov	r4, #0
   15c58:	cmp	r0, #0
   15c5c:	beq	15c94 <mcobject_destroy@@Base+0x48>
   15c60:	mov	r6, r1
   15c64:	mov	r5, r0
   15c68:	bl	12304 <mcobject_clean@plt>
   15c6c:	ldr	r0, [r5, #4]
   15c70:	cmp	r0, #0
   15c74:	beq	15c84 <mcobject_destroy@@Base+0x38>
   15c78:	bl	12184 <mycore_free@plt>
   15c7c:	mov	r0, #0
   15c80:	str	r0, [r5, #4]
   15c84:	cmp	r6, #0
   15c88:	beq	15c9c <mcobject_destroy@@Base+0x50>
   15c8c:	mov	r0, r5
   15c90:	bl	12184 <mycore_free@plt>
   15c94:	mov	r0, r4
   15c98:	pop	{r4, r5, r6, sl, fp, pc}
   15c9c:	mov	r0, r5
   15ca0:	pop	{r4, r5, r6, sl, fp, pc}

00015ca4 <mcobject_chunk_malloc@@Base>:
   15ca4:	push	{r4, r5, r6, sl, fp, lr}
   15ca8:	add	fp, sp, #16
   15cac:	mov	r4, r1
   15cb0:	mov	r5, r0
   15cb4:	cmp	r1, #0
   15cb8:	movne	r0, #0
   15cbc:	strne	r0, [r4]
   15cc0:	ldr	r0, [r5]
   15cc4:	cmp	r0, #0
   15cc8:	beq	15ce8 <mcobject_chunk_malloc@@Base+0x44>
   15ccc:	ldr	r0, [r0, #12]
   15cd0:	cmp	r0, #0
   15cd4:	beq	15ce8 <mcobject_chunk_malloc@@Base+0x44>
   15cd8:	str	r0, [r5]
   15cdc:	mov	r1, #0
   15ce0:	str	r1, [r0, #4]
   15ce4:	pop	{r4, r5, r6, sl, fp, pc}
   15ce8:	mov	r0, #1
   15cec:	mov	r1, #20
   15cf0:	bl	113a4 <mycore_calloc@plt>
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d3c <mcobject_chunk_malloc@@Base+0x98>
   15cfc:	mov	r6, r0
   15d00:	ldr	r0, [r5, #16]
   15d04:	ldr	r1, [r5, #20]
   15d08:	mul	r0, r1, r0
   15d0c:	bl	1204c <mycore_malloc@plt>
   15d10:	str	r0, [r6]
   15d14:	cmp	r0, #0
   15d18:	beq	15d50 <mcobject_chunk_malloc@@Base+0xac>
   15d1c:	ldr	r0, [r5, #20]
   15d20:	str	r0, [r6, #8]
   15d24:	ldr	r0, [r5]
   15d28:	cmp	r0, #0
   15d2c:	strne	r0, [r6, #16]
   15d30:	strne	r6, [r0, #12]
   15d34:	str	r6, [r5]
   15d38:	pop	{r4, r5, r6, sl, fp, pc}
   15d3c:	cmp	r4, #0
   15d40:	beq	15d4c <mcobject_chunk_malloc@@Base+0xa8>
   15d44:	mov	r0, #86	; 0x56
   15d48:	str	r0, [r4]
   15d4c:	pop	{r4, r5, r6, sl, fp, pc}
   15d50:	cmp	r4, #0
   15d54:	movne	r0, #87	; 0x57
   15d58:	strne	r0, [r4]
   15d5c:	mov	r0, r6
   15d60:	pop	{r4, r5, r6, sl, fp, lr}
   15d64:	b	12184 <mycore_free@plt>

00015d68 <mcobject_malloc@@Base>:
   15d68:	push	{r4, r5, fp, lr}
   15d6c:	add	fp, sp, #8
   15d70:	sub	sp, sp, #8
   15d74:	mov	r5, r1
   15d78:	mov	r4, r0
   15d7c:	ldr	r0, [r0, #12]
   15d80:	cmp	r0, #0
   15d84:	beq	15db0 <mcobject_malloc@@Base+0x48>
   15d88:	cmp	r5, #0
   15d8c:	movne	r0, #0
   15d90:	strne	r0, [r5]
   15d94:	ldr	r0, [r4, #4]
   15d98:	ldr	r1, [r4, #12]
   15d9c:	sub	r1, r1, #1
   15da0:	str	r1, [r4, #12]
   15da4:	ldr	r0, [r0, r1, lsl #2]
   15da8:	sub	sp, fp, #8
   15dac:	pop	{r4, r5, fp, pc}
   15db0:	ldr	r0, [r4]
   15db4:	cmp	r0, #0
   15db8:	beq	15dc8 <mcobject_malloc@@Base+0x60>
   15dbc:	ldmib	r0, {r1, r2}
   15dc0:	cmp	r1, r2
   15dc4:	bcc	15df8 <mcobject_malloc@@Base+0x90>
   15dc8:	add	r1, sp, #4
   15dcc:	mov	r0, r4
   15dd0:	bl	11374 <mcobject_chunk_malloc@plt>
   15dd4:	ldr	r0, [sp, #4]
   15dd8:	cmp	r0, #0
   15ddc:	beq	15df4 <mcobject_malloc@@Base+0x8c>
   15de0:	cmp	r5, #0
   15de4:	strne	r0, [r5]
   15de8:	mov	r0, #0
   15dec:	sub	sp, fp, #8
   15df0:	pop	{r4, r5, fp, pc}
   15df4:	ldr	r0, [r4]
   15df8:	cmp	r5, #0
   15dfc:	movne	r1, #0
   15e00:	strne	r1, [r5]
   15e04:	ldm	r0, {r1, r2}
   15e08:	add	r3, r2, #1
   15e0c:	str	r3, [r0, #4]
   15e10:	ldr	r0, [r4, #16]
   15e14:	mla	r0, r0, r2, r1
   15e18:	sub	sp, fp, #8
   15e1c:	pop	{r4, r5, fp, pc}

00015e20 <mcobject_free@@Base>:
   15e20:	push	{r4, r5, r6, sl, fp, lr}
   15e24:	add	fp, sp, #16
   15e28:	mov	r5, r1
   15e2c:	mov	r4, r0
   15e30:	ldr	r6, [r0, #8]
   15e34:	ldr	r0, [r0, #12]
   15e38:	cmp	r0, r6
   15e3c:	bcc	15e5c <mcobject_free@@Base+0x3c>
   15e40:	ldr	r0, [r4, #4]
   15e44:	lsl	r1, r6, #3
   15e48:	bl	110b0 <mycore_realloc@plt>
   15e4c:	cmp	r0, #0
   15e50:	beq	15e78 <mcobject_free@@Base+0x58>
   15e54:	lsl	r1, r6, #1
   15e58:	stmib	r4, {r0, r1}
   15e5c:	ldr	r0, [r4, #4]
   15e60:	ldr	r1, [r4, #12]
   15e64:	str	r5, [r0, r1, lsl #2]
   15e68:	add	r0, r1, #1
   15e6c:	str	r0, [r4, #12]
   15e70:	mov	r0, #0
   15e74:	pop	{r4, r5, r6, sl, fp, pc}
   15e78:	mov	r0, #88	; 0x58
   15e7c:	pop	{r4, r5, r6, sl, fp, pc}

00015e80 <mcobject_async_create@@Base>:
   15e80:	mov	r0, #1
   15e84:	mov	r1, #72	; 0x48
   15e88:	b	113a4 <mycore_calloc@plt>

00015e8c <mcobject_async_chunk_up@@Base>:
   15e8c:	push	{r4, r5, fp, lr}
   15e90:	add	fp, sp, #8
   15e94:	mov	r5, r0
   15e98:	mov	r4, #0
   15e9c:	str	r4, [r0, #40]	; 0x28
   15ea0:	ldr	r0, [r0, #24]
   15ea4:	ldr	r1, [r5, #32]
   15ea8:	ldr	r0, [r0, r1, lsl #2]
   15eac:	cmp	r0, #0
   15eb0:	beq	15ebc <mcobject_async_chunk_up@@Base+0x30>
   15eb4:	mov	r0, r4
   15eb8:	pop	{r4, r5, fp, pc}
   15ebc:	ldr	r0, [r5, #36]	; 0x24
   15ec0:	mov	r1, #20
   15ec4:	bl	113a4 <mycore_calloc@plt>
   15ec8:	ldr	r1, [r5, #24]
   15ecc:	ldr	r2, [r5, #32]
   15ed0:	str	r0, [r1, r2, lsl #2]
   15ed4:	ldr	r0, [r5, #24]
   15ed8:	ldr	r0, [r0, r2, lsl #2]
   15edc:	cmp	r0, #0
   15ee0:	moveq	r4, #2
   15ee4:	mov	r0, r4
   15ee8:	pop	{r4, r5, fp, pc}

00015eec <mcobject_async_init@@Base>:
   15eec:	push	{r4, r5, r6, sl, fp, lr}
   15ef0:	add	fp, sp, #16
   15ef4:	mov	r4, r0
   15ef8:	mov	r0, #0
   15efc:	mov	r6, #128	; 0x80
   15f00:	str	r6, [r4, #28]
   15f04:	str	r0, [r4, #32]
   15f08:	str	r1, [r4, #36]	; 0x24
   15f0c:	add	r0, r3, #4
   15f10:	stm	r4, {r2, r3}
   15f14:	str	r0, [r4, #8]
   15f18:	mov	r0, #128	; 0x80
   15f1c:	mov	r1, #4
   15f20:	bl	113a4 <mycore_calloc@plt>
   15f24:	str	r0, [r4, #24]
   15f28:	cmp	r0, #0
   15f2c:	beq	15fd0 <mcobject_async_init@@Base+0xe4>
   15f30:	mov	r0, r4
   15f34:	bl	11608 <mcobject_async_chunk_up@plt>
   15f38:	ldr	r0, [r4, #36]	; 0x24
   15f3c:	str	r0, [r4, #16]
   15f40:	mov	r5, #4
   15f44:	mov	r1, #4
   15f48:	bl	113a4 <mycore_calloc@plt>
   15f4c:	str	r0, [r4, #12]
   15f50:	cmp	r0, #0
   15f54:	beq	15fdc <mcobject_async_init@@Base+0xf0>
   15f58:	mov	r0, #64	; 0x40
   15f5c:	mov	r6, #0
   15f60:	str	r6, [r4, #48]	; 0x30
   15f64:	str	r0, [r4, #52]	; 0x34
   15f68:	mov	r0, #64	; 0x40
   15f6c:	mov	r1, #16
   15f70:	bl	113a4 <mycore_calloc@plt>
   15f74:	str	r0, [r4, #44]	; 0x2c
   15f78:	cmp	r0, #0
   15f7c:	beq	15fc8 <mcobject_async_init@@Base+0xdc>
   15f80:	ldr	r0, [r4, #52]	; 0x34
   15f84:	str	r6, [r4, #60]	; 0x3c
   15f88:	str	r0, [r4, #64]	; 0x40
   15f8c:	lsl	r0, r0, #2
   15f90:	bl	1204c <mycore_malloc@plt>
   15f94:	str	r0, [r4, #56]	; 0x38
   15f98:	cmp	r0, #0
   15f9c:	beq	15fc8 <mcobject_async_init@@Base+0xdc>
   15fa0:	mov	r0, r4
   15fa4:	bl	123e8 <mcobject_async_clean@plt>
   15fa8:	bl	11254 <mcsync_create@plt>
   15fac:	str	r0, [r4, #68]	; 0x44
   15fb0:	cmp	r0, #0
   15fb4:	beq	15fe8 <mcobject_async_init@@Base+0xfc>
   15fb8:	bl	11c80 <mcsync_init@plt>
   15fbc:	mov	r5, r0
   15fc0:	cmp	r0, #0
   15fc4:	movwne	r5, #1
   15fc8:	mov	r0, r5
   15fcc:	pop	{r4, r5, r6, sl, fp, pc}
   15fd0:	mov	r5, #2
   15fd4:	mov	r0, r5
   15fd8:	pop	{r4, r5, r6, sl, fp, pc}
   15fdc:	mov	r5, #3
   15fe0:	mov	r0, r5
   15fe4:	pop	{r4, r5, r6, sl, fp, pc}
   15fe8:	mov	r5, #1
   15fec:	mov	r0, r5
   15ff0:	pop	{r4, r5, r6, sl, fp, pc}

00015ff4 <mcobject_async_clean@@Base>:
   15ff4:	push	{r4, r5, r6, r7, fp, lr}
   15ff8:	add	fp, sp, #16
   15ffc:	mov	r4, r0
   16000:	ldr	r0, [r0, #24]
   16004:	ldr	r1, [r4, #48]	; 0x30
   16008:	ldr	r0, [r0]
   1600c:	mov	r5, #0
   16010:	str	r5, [r4, #40]	; 0x28
   16014:	str	r5, [r4, #20]
   16018:	cmp	r0, #0
   1601c:	movwne	r0, #1
   16020:	str	r0, [r4, #32]
   16024:	cmp	r1, #0
   16028:	beq	16074 <mcobject_async_clean@@Base+0x80>
   1602c:	mov	r6, #0
   16030:	b	16044 <mcobject_async_clean@@Base+0x50>
   16034:	ldr	r0, [r4, #48]	; 0x30
   16038:	add	r6, r6, #1
   1603c:	cmp	r6, r0
   16040:	bcs	16074 <mcobject_async_clean@@Base+0x80>
   16044:	ldr	r7, [r4, #44]	; 0x2c
   16048:	mov	r0, r7
   1604c:	ldr	r1, [r0, r6, lsl #4]!
   16050:	str	r5, [r0, #12]
   16054:	cmp	r1, #0
   16058:	beq	16034 <mcobject_async_clean@@Base+0x40>
   1605c:	ldr	r1, [r4]
   16060:	mov	r0, r4
   16064:	mov	r2, #0
   16068:	bl	11584 <mcobject_async_chunk_malloc@plt>
   1606c:	str	r0, [r7, r6, lsl #4]
   16070:	b	16034 <mcobject_async_clean@@Base+0x40>
   16074:	pop	{r4, r5, r6, r7, fp, pc}

00016078 <mcobject_async_chunk_malloc@@Base>:
   16078:	push	{r4, r5, r6, sl, fp, lr}
   1607c:	add	fp, sp, #16
   16080:	mov	r4, r2
   16084:	mov	r6, r1
   16088:	mov	r5, r0
   1608c:	ldr	r0, [r0, #68]	; 0x44
   16090:	bl	11c68 <mcsync_lock@plt>
   16094:	cmp	r0, #0
   16098:	beq	160b0 <mcobject_async_chunk_malloc@@Base+0x38>
   1609c:	cmp	r4, #0
   160a0:	movne	r0, #1
   160a4:	strne	r0, [r4]
   160a8:	mov	r0, #0
   160ac:	pop	{r4, r5, r6, sl, fp, pc}
   160b0:	mov	r0, r5
   160b4:	mov	r1, r6
   160b8:	mov	r2, r4
   160bc:	bl	11cf8 <mcobject_async_chunk_malloc_without_lock@plt>
   160c0:	mov	r4, r0
   160c4:	ldr	r0, [r5, #68]	; 0x44
   160c8:	bl	12268 <mcsync_unlock@plt>
   160cc:	mov	r0, r4
   160d0:	pop	{r4, r5, r6, sl, fp, pc}

000160d4 <mcobject_async_destroy@@Base>:
   160d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   160d8:	add	fp, sp, #24
   160dc:	cmp	r0, #0
   160e0:	beq	1625c <mcobject_async_destroy@@Base+0x188>
   160e4:	mov	r8, r1
   160e8:	mov	r4, r0
   160ec:	ldr	r0, [r0, #44]	; 0x2c
   160f0:	cmp	r0, #0
   160f4:	beq	16140 <mcobject_async_destroy@@Base+0x6c>
   160f8:	ldr	r0, [r4, #48]	; 0x30
   160fc:	cmp	r0, #0
   16100:	beq	16138 <mcobject_async_destroy@@Base+0x64>
   16104:	mov	r5, #0
   16108:	b	1611c <mcobject_async_destroy@@Base+0x48>
   1610c:	ldr	r0, [r4, #48]	; 0x30
   16110:	add	r5, r5, #1
   16114:	cmp	r5, r0
   16118:	bcs	16138 <mcobject_async_destroy@@Base+0x64>
   1611c:	ldr	r0, [r4, #44]	; 0x2c
   16120:	add	r0, r0, r5, lsl #4
   16124:	ldr	r0, [r0, #4]
   16128:	cmp	r0, #0
   1612c:	beq	1610c <mcobject_async_destroy@@Base+0x38>
   16130:	bl	12184 <mycore_free@plt>
   16134:	b	1610c <mcobject_async_destroy@@Base+0x38>
   16138:	ldr	r0, [r4, #44]	; 0x2c
   1613c:	bl	12184 <mycore_free@plt>
   16140:	ldr	r0, [r4, #56]	; 0x38
   16144:	cmp	r0, #0
   16148:	beq	16150 <mcobject_async_destroy@@Base+0x7c>
   1614c:	bl	12184 <mycore_free@plt>
   16150:	ldr	r0, [r4, #24]
   16154:	cmp	r0, #0
   16158:	beq	161f4 <mcobject_async_destroy@@Base+0x120>
   1615c:	ldr	r0, [r4, #32]
   16160:	cmp	r0, #0
   16164:	beq	161ec <mcobject_async_destroy@@Base+0x118>
   16168:	mov	r6, #0
   1616c:	b	16188 <mcobject_async_destroy@@Base+0xb4>
   16170:	ldr	r0, [r0]
   16174:	bl	12184 <mycore_free@plt>
   16178:	ldr	r0, [r4, #32]
   1617c:	add	r6, r6, #1
   16180:	cmp	r6, r0
   16184:	bcs	161ec <mcobject_async_destroy@@Base+0x118>
   16188:	ldr	r0, [r4, #24]
   1618c:	ldr	r0, [r0, r6, lsl #2]
   16190:	cmp	r0, #0
   16194:	beq	16178 <mcobject_async_destroy@@Base+0xa4>
   16198:	ldr	r0, [r4, #24]
   1619c:	ldr	r1, [r4, #36]	; 0x24
   161a0:	add	r0, r0, r6, lsl #2
   161a4:	cmp	r1, #0
   161a8:	beq	16170 <mcobject_async_destroy@@Base+0x9c>
   161ac:	mov	r7, #0
   161b0:	mov	r5, #0
   161b4:	b	161d4 <mcobject_async_destroy@@Base+0x100>
   161b8:	ldr	r0, [r4, #24]
   161bc:	ldr	r1, [r4, #36]	; 0x24
   161c0:	add	r0, r0, r6, lsl #2
   161c4:	add	r7, r7, #20
   161c8:	add	r5, r5, #1
   161cc:	cmp	r5, r1
   161d0:	bcs	16170 <mcobject_async_destroy@@Base+0x9c>
   161d4:	ldr	r0, [r0]
   161d8:	ldr	r0, [r0, r7]
   161dc:	cmp	r0, #0
   161e0:	beq	161b8 <mcobject_async_destroy@@Base+0xe4>
   161e4:	bl	12184 <mycore_free@plt>
   161e8:	b	161b8 <mcobject_async_destroy@@Base+0xe4>
   161ec:	ldr	r0, [r4, #24]
   161f0:	bl	12184 <mycore_free@plt>
   161f4:	ldr	r0, [r4, #12]
   161f8:	cmp	r0, #0
   161fc:	beq	16204 <mcobject_async_destroy@@Base+0x130>
   16200:	bl	12184 <mycore_free@plt>
   16204:	ldr	r0, [r4, #68]	; 0x44
   16208:	mov	r1, #1
   1620c:	bl	11620 <mcsync_destroy@plt>
   16210:	vmov.i32	q8, #0	; 0x00000000
   16214:	add	r0, r4, #16
   16218:	vst1.32	{d16-d17}, [r0]
   1621c:	add	r0, r4, #32
   16220:	vst1.32	{d16-d17}, [r0]
   16224:	add	r0, r4, #48	; 0x30
   16228:	vst1.32	{d16-d17}, [r0]
   1622c:	mov	r6, #0
   16230:	str	r6, [r4, #68]	; 0x44
   16234:	mov	r0, #64	; 0x40
   16238:	mov	r1, r4
   1623c:	vst1.32	{d16-d17}, [r1], r0
   16240:	str	r6, [r1]
   16244:	cmp	r8, #0
   16248:	beq	16268 <mcobject_async_destroy@@Base+0x194>
   1624c:	mov	r0, r4
   16250:	bl	12184 <mycore_free@plt>
   16254:	mov	r0, r6
   16258:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1625c:	mov	r6, #0
   16260:	mov	r0, r6
   16264:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16268:	mov	r0, r4
   1626c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016270 <mcobject_async_mem_malloc@@Base>:
   16270:	push	{r4, r5, r6, sl, fp, lr}
   16274:	add	fp, sp, #16
   16278:	mov	r6, r2
   1627c:	mov	r4, r1
   16280:	mov	r5, r0
   16284:	ldr	r0, [r1]
   16288:	cmp	r0, #0
   1628c:	beq	162b4 <mcobject_async_mem_malloc@@Base+0x44>
   16290:	ldr	r1, [r4, #8]
   16294:	cmp	r1, r6
   16298:	bcs	162d4 <mcobject_async_mem_malloc@@Base+0x64>
   1629c:	bl	12184 <mycore_free@plt>
   162a0:	ldr	r0, [r5]
   162a4:	add	r1, r0, r6
   162a8:	str	r1, [r4, #8]
   162ac:	ldr	r0, [r5, #8]
   162b0:	b	162c8 <mcobject_async_mem_malloc@@Base+0x58>
   162b4:	ldr	r0, [r5]
   162b8:	cmp	r0, r6
   162bc:	addcc	r0, r0, r6
   162c0:	str	r0, [r4, #8]
   162c4:	ldr	r1, [r5, #8]
   162c8:	mul	r0, r0, r1
   162cc:	bl	1204c <mycore_malloc@plt>
   162d0:	str	r0, [r4]
   162d4:	mov	r0, #0
   162d8:	str	r0, [r4, #4]
   162dc:	ldr	r0, [r4]
   162e0:	clz	r0, r0
   162e4:	lsr	r0, r0, #5
   162e8:	lsl	r0, r0, #1
   162ec:	pop	{r4, r5, r6, sl, fp, pc}

000162f0 <mcobject_async_chunk_malloc_without_lock@@Base>:
   162f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   162f4:	add	fp, sp, #24
   162f8:	mov	r4, r2
   162fc:	mov	r6, r1
   16300:	mov	r5, r0
   16304:	cmp	r2, #0
   16308:	movne	r0, #0
   1630c:	strne	r0, [r4]
   16310:	ldr	r0, [r5, #20]
   16314:	cmp	r0, #0
   16318:	beq	1634c <mcobject_async_chunk_malloc_without_lock@@Base+0x5c>
   1631c:	sub	r0, r0, #1
   16320:	str	r0, [r5, #20]
   16324:	ldr	r1, [r5, #12]
   16328:	ldr	r2, [r1, r0, lsl #2]
   1632c:	mov	r3, #0
   16330:	str	r3, [r2, #12]
   16334:	str	r3, [r2, #4]
   16338:	ldr	r2, [r1, r0, lsl #2]
   1633c:	str	r3, [r2, #16]
   16340:	ldr	r7, [r1, r0, lsl #2]
   16344:	mov	r0, r7
   16348:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1634c:	ldr	r0, [r5, #36]	; 0x24
   16350:	ldr	r1, [r5, #40]	; 0x28
   16354:	cmp	r1, r0
   16358:	bcc	163e0 <mcobject_async_chunk_malloc_without_lock@@Base+0xf0>
   1635c:	ldr	r7, [r5, #28]
   16360:	ldr	r0, [r5, #32]
   16364:	cmp	r0, r7
   16368:	bcc	163a8 <mcobject_async_chunk_malloc_without_lock@@Base+0xb8>
   1636c:	ldr	r0, [r5, #24]
   16370:	lsl	r1, r7, #3
   16374:	bl	110b0 <mycore_realloc@plt>
   16378:	cmp	r0, #0
   1637c:	beq	163b8 <mcobject_async_chunk_malloc_without_lock@@Base+0xc8>
   16380:	mov	r8, r0
   16384:	lsl	r7, r7, #1
   16388:	ldr	r1, [r5, #32]
   1638c:	add	r0, r0, r1, lsl #2
   16390:	sub	r1, r7, r1
   16394:	lsl	r2, r1, #2
   16398:	mov	r1, #0
   1639c:	bl	11cc8 <memset@plt>
   163a0:	str	r8, [r5, #24]
   163a4:	str	r7, [r5, #28]
   163a8:	mov	r0, r5
   163ac:	bl	11608 <mcobject_async_chunk_up@plt>
   163b0:	cmp	r0, #0
   163b4:	beq	163d4 <mcobject_async_chunk_malloc_without_lock@@Base+0xe4>
   163b8:	mov	r7, #0
   163bc:	cmp	r4, #0
   163c0:	beq	163cc <mcobject_async_chunk_malloc_without_lock@@Base+0xdc>
   163c4:	mov	r0, #2
   163c8:	str	r0, [r4]
   163cc:	mov	r0, r7
   163d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   163d4:	ldr	r0, [r5, #32]
   163d8:	add	r0, r0, #1
   163dc:	str	r0, [r5, #32]
   163e0:	ldr	r0, [r5, #24]
   163e4:	ldr	r1, [r5, #32]
   163e8:	ldr	r2, [r5, #40]	; 0x28
   163ec:	add	r0, r0, r1, lsl #2
   163f0:	ldr	r0, [r0, #-4]
   163f4:	add	r1, r2, #1
   163f8:	str	r1, [r5, #40]	; 0x28
   163fc:	add	r1, r2, r2, lsl #2
   16400:	add	r7, r0, r1, lsl #2
   16404:	mov	r0, #0
   16408:	str	r0, [r7, #12]
   1640c:	str	r0, [r7, #16]
   16410:	mov	r0, r5
   16414:	mov	r1, r7
   16418:	mov	r2, r6
   1641c:	bl	11278 <mcobject_async_mem_malloc@plt>
   16420:	cmp	r4, #0
   16424:	strne	r0, [r4]
   16428:	mov	r0, r7
   1642c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016430 <mcobject_async_node_add@@Base>:
   16430:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16434:	add	fp, sp, #24
   16438:	mov	r5, r1
   1643c:	mov	r4, r0
   16440:	ldr	r0, [r0, #68]	; 0x44
   16444:	bl	11c68 <mcsync_lock@plt>
   16448:	cmp	r5, #0
   1644c:	movne	r0, #0
   16450:	strne	r0, [r5]
   16454:	ldr	r0, [r4, #60]	; 0x3c
   16458:	cmp	r0, #0
   1645c:	beq	16474 <mcobject_async_node_add@@Base+0x44>
   16460:	sub	r0, r0, #1
   16464:	str	r0, [r4, #60]	; 0x3c
   16468:	ldr	r1, [r4, #56]	; 0x38
   1646c:	ldr	r8, [r1, r0, lsl #2]
   16470:	b	16490 <mcobject_async_node_add@@Base+0x60>
   16474:	ldr	r8, [r4, #48]	; 0x30
   16478:	ldr	r0, [r4, #52]	; 0x34
   1647c:	mov	r6, #0
   16480:	cmp	r8, r0
   16484:	bcs	16508 <mcobject_async_node_add@@Base+0xd8>
   16488:	add	r0, r8, #1
   1648c:	str	r0, [r4, #48]	; 0x30
   16490:	ldr	r1, [r4]
   16494:	ldr	r7, [r4, #44]	; 0x2c
   16498:	mov	r0, r4
   1649c:	mov	r2, r5
   164a0:	bl	11cf8 <mcobject_async_chunk_malloc_without_lock@plt>
   164a4:	str	r0, [r7, r8, lsl #4]
   164a8:	cmp	r5, #0
   164ac:	beq	164c0 <mcobject_async_node_add@@Base+0x90>
   164b0:	ldr	r1, [r5]
   164b4:	mov	r6, #0
   164b8:	cmp	r1, #0
   164bc:	bne	16508 <mcobject_async_node_add@@Base+0xd8>
   164c0:	mov	r1, #0
   164c4:	str	r1, [r0, #12]
   164c8:	str	r1, [r0, #16]
   164cc:	add	r7, r7, r8, lsl #4
   164d0:	str	r1, [r7, #12]
   164d4:	ldr	r0, [r4]
   164d8:	str	r0, [r7, #8]
   164dc:	lsl	r0, r0, #2
   164e0:	bl	1204c <mycore_malloc@plt>
   164e4:	mov	r6, r0
   164e8:	str	r0, [r7, #4]
   164ec:	cmp	r0, #0
   164f0:	movne	r6, r8
   164f4:	bne	16508 <mcobject_async_node_add@@Base+0xd8>
   164f8:	cmp	r5, #0
   164fc:	movne	r0, #3
   16500:	strne	r0, [r5]
   16504:	movne	r6, #0
   16508:	ldr	r0, [r4, #68]	; 0x44
   1650c:	bl	12268 <mcsync_unlock@plt>
   16510:	mov	r0, r6
   16514:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016518 <mcobject_async_node_clean@@Base>:
   16518:	ldr	r2, [r0, #48]	; 0x30
   1651c:	cmp	r2, r1
   16520:	bls	16570 <mcobject_async_node_clean@@Base+0x58>
   16524:	ldr	ip, [r0, #44]	; 0x2c
   16528:	mov	r0, ip
   1652c:	ldr	r2, [r0, r1, lsl #4]!
   16530:	mov	r3, #0
   16534:	str	r3, [r0, #12]!
   16538:	cmp	r2, #0
   1653c:	bxeq	lr
   16540:	ldr	r2, [ip, r1, lsl #4]
   16544:	ldr	r3, [r2, #16]
   16548:	cmp	r3, #0
   1654c:	beq	16564 <mcobject_async_node_clean@@Base+0x4c>
   16550:	mov	r2, r3
   16554:	ldr	r3, [r3, #16]
   16558:	cmp	r3, #0
   1655c:	bne	16550 <mcobject_async_node_clean@@Base+0x38>
   16560:	str	r2, [ip, r1, lsl #4]
   16564:	mov	r1, #0
   16568:	str	r1, [r2, #4]
   1656c:	str	r1, [r0]
   16570:	bx	lr

00016574 <mcobject_async_node_all_clean@@Base>:
   16574:	push	{r4, r5, fp, lr}
   16578:	add	fp, sp, #8
   1657c:	mov	r4, r0
   16580:	ldr	r0, [r0, #48]	; 0x30
   16584:	cmp	r0, #0
   16588:	popeq	{r4, r5, fp, pc}
   1658c:	mov	r5, #0
   16590:	mov	r0, r4
   16594:	mov	r1, r5
   16598:	bl	11c98 <mcobject_async_node_clean@plt>
   1659c:	add	r5, r5, #1
   165a0:	ldr	r0, [r4, #48]	; 0x30
   165a4:	cmp	r5, r0
   165a8:	bcc	16590 <mcobject_async_node_all_clean@@Base+0x1c>
   165ac:	pop	{r4, r5, fp, pc}

000165b0 <mcobject_async_node_delete@@Base>:
   165b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   165b4:	add	fp, sp, #24
   165b8:	mov	r5, r1
   165bc:	mov	r4, r0
   165c0:	ldr	r0, [r0, #68]	; 0x44
   165c4:	bl	11c68 <mcsync_lock@plt>
   165c8:	ldr	r0, [r4, #48]	; 0x30
   165cc:	cmp	r0, r5
   165d0:	bls	166a8 <mcobject_async_node_delete@@Base+0xf8>
   165d4:	ldr	r8, [r4, #44]	; 0x2c
   165d8:	mov	r9, r8
   165dc:	ldr	r0, [r9, r5, lsl #4]!
   165e0:	mov	r7, r0
   165e4:	ldr	r0, [r0, #12]
   165e8:	cmp	r0, #0
   165ec:	bne	165e0 <mcobject_async_node_delete@@Base+0x30>
   165f0:	b	16618 <mcobject_async_node_delete@@Base+0x68>
   165f4:	lsl	r1, r6, #1
   165f8:	str	r0, [r4, #12]
   165fc:	str	r1, [r4, #16]
   16600:	ldr	r0, [r4, #12]
   16604:	ldr	r1, [r4, #20]
   16608:	str	r7, [r0, r1, lsl #2]
   1660c:	add	r0, r1, #1
   16610:	str	r0, [r4, #20]
   16614:	ldr	r7, [r7, #16]
   16618:	cmp	r7, #0
   1661c:	beq	16648 <mcobject_async_node_delete@@Base+0x98>
   16620:	ldr	r6, [r4, #16]
   16624:	ldr	r0, [r4, #20]
   16628:	cmp	r0, r6
   1662c:	bcc	16600 <mcobject_async_node_delete@@Base+0x50>
   16630:	ldr	r0, [r4, #12]
   16634:	lsl	r1, r6, #3
   16638:	bl	110b0 <mycore_realloc@plt>
   1663c:	cmp	r0, #0
   16640:	bne	165f4 <mcobject_async_node_delete@@Base+0x44>
   16644:	b	166a8 <mcobject_async_node_delete@@Base+0xf8>
   16648:	add	r0, r8, r5, lsl #4
   1664c:	ldr	r0, [r0, #4]
   16650:	cmp	r0, #0
   16654:	beq	1665c <mcobject_async_node_delete@@Base+0xac>
   16658:	bl	12184 <mycore_free@plt>
   1665c:	vmov.i32	q8, #0	; 0x00000000
   16660:	vst1.32	{d16-d17}, [r9]
   16664:	ldr	r0, [r4, #60]	; 0x3c
   16668:	ldr	r6, [r4, #64]	; 0x40
   1666c:	cmp	r0, r6
   16670:	bcc	16690 <mcobject_async_node_delete@@Base+0xe0>
   16674:	ldr	r0, [r4, #56]	; 0x38
   16678:	lsl	r1, r6, #2
   1667c:	bl	110b0 <mycore_realloc@plt>
   16680:	cmp	r0, #0
   16684:	strne	r0, [r4, #56]	; 0x38
   16688:	lslne	r0, r6, #1
   1668c:	strne	r0, [r4, #64]	; 0x40
   16690:	ldr	r0, [r4, #56]	; 0x38
   16694:	ldr	r1, [r4, #60]	; 0x3c
   16698:	str	r5, [r0, r1, lsl #2]
   1669c:	ldr	r0, [r4, #60]	; 0x3c
   166a0:	add	r0, r0, #1
   166a4:	str	r0, [r4, #60]	; 0x3c
   166a8:	ldr	r0, [r4, #68]	; 0x44
   166ac:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   166b0:	b	12268 <mcsync_unlock@plt>

000166b4 <mcobject_async_malloc@@Base>:
   166b4:	push	{r4, r5, r6, r7, fp, lr}
   166b8:	add	fp, sp, #16
   166bc:	sub	sp, sp, #8
   166c0:	mov	r4, r2
   166c4:	mov	r5, r1
   166c8:	mov	r6, r0
   166cc:	ldr	r7, [r0, #44]	; 0x2c
   166d0:	add	r0, r7, r1, lsl #4
   166d4:	mov	r1, r0
   166d8:	ldr	r2, [r1, #12]!
   166dc:	cmp	r2, #0
   166e0:	beq	1670c <mcobject_async_malloc@@Base+0x58>
   166e4:	cmp	r4, #0
   166e8:	movne	r2, #0
   166ec:	strne	r2, [r4]
   166f0:	ldr	r2, [r1]
   166f4:	sub	r2, r2, #1
   166f8:	str	r2, [r1]
   166fc:	ldr	r0, [r0, #4]
   16700:	ldr	r0, [r0, r2, lsl #2]
   16704:	sub	sp, fp, #16
   16708:	pop	{r4, r5, r6, r7, fp, pc}
   1670c:	ldr	r0, [r7, r5, lsl #4]
   16710:	ldmib	r0, {r1, r2}
   16714:	cmp	r1, r2
   16718:	bcc	16734 <mcobject_async_malloc@@Base+0x80>
   1671c:	ldr	r0, [r0, #12]
   16720:	cmp	r0, #0
   16724:	beq	1676c <mcobject_async_malloc@@Base+0xb8>
   16728:	str	r0, [r7, r5, lsl #4]
   1672c:	mov	r1, #0
   16730:	str	r1, [r0, #4]
   16734:	cmp	r4, #0
   16738:	movne	r0, #0
   1673c:	strne	r0, [r4]
   16740:	ldr	r0, [r7, r5, lsl #4]
   16744:	ldm	r0, {r1, r2}
   16748:	ldr	r3, [r6, #8]
   1674c:	mul	r2, r3, r2
   16750:	str	r5, [r1, r2]!
   16754:	ldr	r2, [r0, #4]
   16758:	add	r2, r2, #1
   1675c:	str	r2, [r0, #4]
   16760:	add	r0, r1, #4
   16764:	sub	sp, fp, #16
   16768:	pop	{r4, r5, r6, r7, fp, pc}
   1676c:	ldr	r1, [r6]
   16770:	add	r2, sp, #4
   16774:	mov	r0, r6
   16778:	bl	11584 <mcobject_async_chunk_malloc@plt>
   1677c:	ldr	r1, [sp, #4]
   16780:	cmp	r1, #0
   16784:	beq	1679c <mcobject_async_malloc@@Base+0xe8>
   16788:	cmp	r4, #0
   1678c:	strne	r1, [r4]
   16790:	mov	r0, #0
   16794:	sub	sp, fp, #16
   16798:	pop	{r4, r5, r6, r7, fp, pc}
   1679c:	ldr	r1, [r7, r5, lsl #4]
   167a0:	str	r1, [r0, #16]
   167a4:	ldr	r1, [r7, r5, lsl #4]
   167a8:	str	r0, [r1, #12]
   167ac:	str	r0, [r7, r5, lsl #4]
   167b0:	b	16734 <mcobject_async_malloc@@Base+0x80>

000167b4 <mcobject_async_free@@Base>:
   167b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   167b8:	add	fp, sp, #24
   167bc:	mov	r4, r1
   167c0:	mov	r1, r0
   167c4:	ldr	r2, [r4, #-4]
   167c8:	ldr	r3, [r0, #48]	; 0x30
   167cc:	mov	r0, #5
   167d0:	cmp	r2, r3
   167d4:	bcs	16834 <mcobject_async_free@@Base+0x80>
   167d8:	ldr	r0, [r1, #44]	; 0x2c
   167dc:	add	r6, r0, r2, lsl #4
   167e0:	mov	r5, r6
   167e4:	ldr	r0, [r5, #12]!
   167e8:	mov	r7, r5
   167ec:	ldr	r8, [r7, #-4]!
   167f0:	cmp	r0, r8
   167f4:	bcc	1681c <mcobject_async_free@@Base+0x68>
   167f8:	mov	r9, r6
   167fc:	ldr	r0, [r9, #4]!
   16800:	lsl	r1, r8, #3
   16804:	bl	110b0 <mycore_realloc@plt>
   16808:	cmp	r0, #0
   1680c:	beq	16838 <mcobject_async_free@@Base+0x84>
   16810:	str	r0, [r9]
   16814:	lsl	r0, r8, #1
   16818:	str	r0, [r7]
   1681c:	ldr	r0, [r6, #4]
   16820:	ldr	r1, [r5]
   16824:	str	r4, [r0, r1, lsl #2]
   16828:	add	r0, r1, #1
   1682c:	str	r0, [r5]
   16830:	mov	r0, #0
   16834:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16838:	mov	r0, #6
   1683c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00016840 <mcsimple_create@@Base>:
   16840:	mov	r0, #1
   16844:	mov	r1, #28
   16848:	b	113a4 <mycore_calloc@plt>

0001684c <mcsimple_init@@Base>:
   1684c:	push	{r4, r5, r6, sl, fp, lr}
   16850:	add	fp, sp, #16
   16854:	mov	r5, r3
   16858:	mov	r6, r2
   1685c:	mov	r4, r0
   16860:	mov	r0, #0
   16864:	str	r3, [r4]
   16868:	str	r1, [r4, #8]
   1686c:	str	r0, [r4, #12]
   16870:	str	r0, [r4, #16]
   16874:	mov	r0, r1
   16878:	mov	r1, #4
   1687c:	bl	113a4 <mycore_calloc@plt>
   16880:	str	r0, [r4, #4]
   16884:	cmp	r0, #0
   16888:	beq	168a4 <mcsimple_init@@Base+0x58>
   1688c:	mul	r0, r5, r6
   16890:	str	r0, [r4, #20]
   16894:	ldr	r1, [r4, #12]
   16898:	mov	r0, r4
   1689c:	pop	{r4, r5, r6, sl, fp, lr}
   168a0:	b	168a8 <mcsimple_init_list_entries@@Base>
   168a4:	pop	{r4, r5, r6, sl, fp, pc}

000168a8 <mcsimple_init_list_entries@@Base>:
   168a8:	push	{r4, r5, r6, sl, fp, lr}
   168ac:	add	fp, sp, #16
   168b0:	mov	r4, r1
   168b4:	mov	r5, r0
   168b8:	ldr	r6, [r0, #8]
   168bc:	ldr	r0, [r0, #12]
   168c0:	cmp	r0, r6
   168c4:	bcc	16900 <mcsimple_init_list_entries@@Base+0x58>
   168c8:	ldr	r0, [r5, #4]
   168cc:	lsl	r1, r6, #2
   168d0:	bl	110b0 <mycore_realloc@plt>
   168d4:	cmp	r0, #0
   168d8:	beq	16940 <mcsimple_init_list_entries@@Base+0x98>
   168dc:	add	r6, r6, #128	; 0x80
   168e0:	str	r0, [r5, #4]
   168e4:	add	r0, r0, r4, lsl #2
   168e8:	ldr	r1, [r5, #8]
   168ec:	sub	r1, r6, r1
   168f0:	lsl	r2, r1, #2
   168f4:	mov	r1, #0
   168f8:	bl	11cc8 <memset@plt>
   168fc:	str	r6, [r5, #8]
   16900:	mov	r0, #0
   16904:	str	r0, [r5, #24]
   16908:	ldr	r0, [r5, #4]
   1690c:	ldr	r0, [r0, r4, lsl #2]
   16910:	cmp	r0, #0
   16914:	bne	16934 <mcsimple_init_list_entries@@Base+0x8c>
   16918:	ldr	r1, [r5, #16]
   1691c:	ldr	r0, [r5, #20]
   16920:	add	r1, r1, #1
   16924:	str	r1, [r5, #16]
   16928:	bl	1204c <mycore_malloc@plt>
   1692c:	ldr	r1, [r5, #4]
   16930:	str	r0, [r1, r4, lsl #2]
   16934:	ldr	r0, [r5, #4]
   16938:	ldr	r0, [r0, r4, lsl #2]
   1693c:	pop	{r4, r5, r6, sl, fp, pc}
   16940:	mov	r0, #0
   16944:	pop	{r4, r5, r6, sl, fp, pc}

00016948 <mcsimple_clean@@Base>:
   16948:	mov	r1, #0
   1694c:	str	r1, [r0, #12]
   16950:	str	r1, [r0, #24]
   16954:	bx	lr

00016958 <mcsimple_destroy@@Base>:
   16958:	push	{r4, r5, r6, r7, fp, lr}
   1695c:	add	fp, sp, #16
   16960:	mov	r4, #0
   16964:	cmp	r0, #0
   16968:	beq	169d4 <mcsimple_destroy@@Base+0x7c>
   1696c:	mov	r6, r1
   16970:	mov	r5, r0
   16974:	ldr	r0, [r0, #4]
   16978:	cmp	r0, #0
   1697c:	beq	169c4 <mcsimple_destroy@@Base+0x6c>
   16980:	ldr	r0, [r5, #16]
   16984:	cmp	r0, #0
   16988:	beq	169bc <mcsimple_destroy@@Base+0x64>
   1698c:	mov	r7, #0
   16990:	b	169a4 <mcsimple_destroy@@Base+0x4c>
   16994:	ldr	r0, [r5, #16]
   16998:	add	r7, r7, #1
   1699c:	cmp	r7, r0
   169a0:	bcs	169bc <mcsimple_destroy@@Base+0x64>
   169a4:	ldr	r0, [r5, #4]
   169a8:	ldr	r0, [r0, r7, lsl #2]
   169ac:	cmp	r0, #0
   169b0:	beq	16994 <mcsimple_destroy@@Base+0x3c>
   169b4:	bl	12184 <mycore_free@plt>
   169b8:	b	16994 <mcsimple_destroy@@Base+0x3c>
   169bc:	ldr	r0, [r5, #4]
   169c0:	bl	12184 <mycore_free@plt>
   169c4:	cmp	r6, #0
   169c8:	beq	169dc <mcsimple_destroy@@Base+0x84>
   169cc:	mov	r0, r5
   169d0:	bl	12184 <mycore_free@plt>
   169d4:	mov	r0, r4
   169d8:	pop	{r4, r5, r6, r7, fp, pc}
   169dc:	mov	r0, r5
   169e0:	pop	{r4, r5, r6, r7, fp, pc}

000169e4 <mcsimple_malloc@@Base>:
   169e4:	push	{r4, sl, fp, lr}
   169e8:	add	fp, sp, #8
   169ec:	mov	r4, r0
   169f0:	ldr	r0, [r0, #20]
   169f4:	ldr	r1, [r4, #24]
   169f8:	cmp	r1, r0
   169fc:	bcc	16a1c <mcsimple_malloc@@Base+0x38>
   16a00:	ldr	r0, [r4, #12]
   16a04:	add	r1, r0, #1
   16a08:	str	r1, [r4, #12]
   16a0c:	mov	r0, r4
   16a10:	bl	11dac <mcsimple_init_list_entries@plt>
   16a14:	cmp	r0, #0
   16a18:	beq	16a3c <mcsimple_malloc@@Base+0x58>
   16a1c:	ldm	r4, {r0, r1}
   16a20:	ldr	r2, [r4, #12]
   16a24:	ldr	r3, [r4, #24]
   16a28:	add	r0, r0, r3
   16a2c:	str	r0, [r4, #24]
   16a30:	ldr	r0, [r1, r2, lsl #2]
   16a34:	add	r0, r0, r3
   16a38:	pop	{r4, sl, fp, pc}
   16a3c:	mov	r0, #0
   16a40:	pop	{r4, sl, fp, pc}

00016a44 <mcsimple_get_by_absolute_position@@Base>:
   16a44:	push	{fp, lr}
   16a48:	mov	fp, sp
   16a4c:	ldr	r2, [r0]
   16a50:	ldr	lr, [r0, #16]
   16a54:	ldr	ip, [r0, #20]
   16a58:	mul	r2, r2, r1
   16a5c:	udiv	r3, r2, ip
   16a60:	mov	r1, #0
   16a64:	cmp	r3, lr
   16a68:	bcs	16a7c <mcsimple_get_by_absolute_position@@Base+0x38>
   16a6c:	mls	r1, r3, ip, r2
   16a70:	ldr	r0, [r0, #4]
   16a74:	ldr	r0, [r0, r3, lsl #2]
   16a78:	add	r1, r0, r1
   16a7c:	mov	r0, r1
   16a80:	pop	{fp, pc}

00016a84 <mcsync_create@@Base>:
   16a84:	mov	r0, #1
   16a88:	mov	r1, #8
   16a8c:	b	113a4 <mycore_calloc@plt>

00016a90 <mcsync_init@@Base>:
   16a90:	push	{r4, r5, r6, sl, fp, lr}
   16a94:	add	fp, sp, #16
   16a98:	mov	r5, r0
   16a9c:	bl	1198c <mcsync_spin_create@plt>
   16aa0:	str	r0, [r5]
   16aa4:	mov	r4, #1
   16aa8:	cmp	r0, #0
   16aac:	beq	16b00 <mcsync_init@@Base+0x70>
   16ab0:	bl	1192c <mcsync_spin_init@plt>
   16ab4:	cmp	r0, #0
   16ab8:	beq	16ad0 <mcsync_init@@Base+0x40>
   16abc:	mov	r6, r0
   16ac0:	ldr	r0, [r5]
   16ac4:	bl	11434 <mcsync_spin_destroy@plt>
   16ac8:	mov	r0, r6
   16acc:	pop	{r4, r5, r6, sl, fp, pc}
   16ad0:	bl	11ce0 <mcsync_mutex_create@plt>
   16ad4:	str	r0, [r5, #4]
   16ad8:	cmp	r0, #0
   16adc:	beq	16b00 <mcsync_init@@Base+0x70>
   16ae0:	bl	11f38 <mcsync_mutex_init@plt>
   16ae4:	cmp	r0, #0
   16ae8:	beq	16b08 <mcsync_init@@Base+0x78>
   16aec:	mov	r4, r0
   16af0:	ldr	r0, [r5]
   16af4:	bl	11434 <mcsync_spin_destroy@plt>
   16af8:	ldr	r0, [r5, #4]
   16afc:	bl	11230 <mcsync_mutex_destroy@plt>
   16b00:	mov	r0, r4
   16b04:	pop	{r4, r5, r6, sl, fp, pc}
   16b08:	mov	r4, #0
   16b0c:	mov	r0, r4
   16b10:	pop	{r4, r5, r6, sl, fp, pc}

00016b14 <mcsync_clean@@Base>:
   16b14:	push	{r4, sl, fp, lr}
   16b18:	add	fp, sp, #8
   16b1c:	mov	r4, r0
   16b20:	ldr	r0, [r0]
   16b24:	bl	11e6c <mcsync_spin_clean@plt>
   16b28:	ldr	r0, [r4, #4]
   16b2c:	pop	{r4, sl, fp, lr}
   16b30:	b	12208 <mcsync_mutex_clean@plt>

00016b34 <mcsync_destroy@@Base>:
   16b34:	push	{r4, r5, r6, sl, fp, lr}
   16b38:	add	fp, sp, #16
   16b3c:	mov	r4, #0
   16b40:	cmp	r0, #0
   16b44:	beq	16b70 <mcsync_destroy@@Base+0x3c>
   16b48:	mov	r6, r1
   16b4c:	mov	r5, r0
   16b50:	ldr	r0, [r0]
   16b54:	bl	11434 <mcsync_spin_destroy@plt>
   16b58:	ldr	r0, [r5, #4]
   16b5c:	bl	11230 <mcsync_mutex_destroy@plt>
   16b60:	cmp	r6, #0
   16b64:	beq	16b78 <mcsync_destroy@@Base+0x44>
   16b68:	mov	r0, r5
   16b6c:	bl	12184 <mycore_free@plt>
   16b70:	mov	r0, r4
   16b74:	pop	{r4, r5, r6, sl, fp, pc}
   16b78:	mov	r0, r5
   16b7c:	pop	{r4, r5, r6, sl, fp, pc}

00016b80 <mcsync_lock@@Base>:
   16b80:	ldr	r0, [r0]
   16b84:	b	119d4 <mcsync_spin_lock@plt>

00016b88 <mcsync_unlock@@Base>:
   16b88:	ldr	r0, [r0]
   16b8c:	b	123b8 <mcsync_spin_unlock@plt>

00016b90 <mctree_create@@Base>:
   16b90:	push	{r4, r5, r6, sl, fp, lr}
   16b94:	add	fp, sp, #16
   16b98:	mov	r5, r0
   16b9c:	mov	r0, #16
   16ba0:	bl	1204c <mycore_malloc@plt>
   16ba4:	mov	r4, #0
   16ba8:	cmp	r0, #0
   16bac:	beq	16be0 <mctree_create@@Base+0x50>
   16bb0:	mov	r6, r0
   16bb4:	add	r1, r5, #1
   16bb8:	add	r0, r5, #512	; 0x200
   16bbc:	str	r1, [r6, #4]
   16bc0:	str	r0, [r6, #8]
   16bc4:	mov	r1, #28
   16bc8:	bl	113a4 <mycore_calloc@plt>
   16bcc:	str	r0, [r6]
   16bd0:	cmp	r0, #0
   16bd4:	beq	16be8 <mctree_create@@Base+0x58>
   16bd8:	str	r5, [r6, #12]
   16bdc:	mov	r4, r6
   16be0:	mov	r0, r4
   16be4:	pop	{r4, r5, r6, sl, fp, pc}
   16be8:	mov	r0, r6
   16bec:	bl	12184 <mycore_free@plt>
   16bf0:	mov	r0, r4
   16bf4:	pop	{r4, r5, r6, sl, fp, pc}

00016bf8 <mctree_clean@@Base>:
   16bf8:	ldr	r1, [r0]
   16bfc:	ldr	r2, [r0, #8]
   16c00:	ldr	r3, [r0, #12]
   16c04:	add	r3, r3, #1
   16c08:	str	r3, [r0, #4]
   16c0c:	rsb	r0, r2, r2, lsl #3
   16c10:	lsl	r2, r0, #2
   16c14:	mov	r0, r1
   16c18:	mov	r1, #0
   16c1c:	b	11cc8 <memset@plt>

00016c20 <mctree_destroy@@Base>:
   16c20:	cmp	r0, #0
   16c24:	beq	16c50 <mctree_destroy@@Base+0x30>
   16c28:	push	{r4, sl, fp, lr}
   16c2c:	add	fp, sp, #8
   16c30:	mov	r4, r0
   16c34:	ldr	r0, [r0]
   16c38:	cmp	r0, #0
   16c3c:	beq	16c44 <mctree_destroy@@Base+0x24>
   16c40:	bl	12184 <mycore_free@plt>
   16c44:	mov	r0, r4
   16c48:	bl	12184 <mycore_free@plt>
   16c4c:	pop	{r4, sl, fp, lr}
   16c50:	mov	r0, #0
   16c54:	bx	lr

00016c58 <__mtree_search_lowercase_to_start@@Base>:
   16c58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16c5c:	add	fp, sp, #24
   16c60:	cmp	r1, #0
   16c64:	beq	16cf4 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16c68:	mov	r5, r3
   16c6c:	mov	r8, r2
   16c70:	mov	r4, r1
   16c74:	ldr	r7, [r0]
   16c78:	b	16c9c <__mtree_search_lowercase_to_start@@Base+0x44>
   16c7c:	ldr	r4, [r6, #16]
   16c80:	rsb	r0, r4, r4, lsl #3
   16c84:	add	r0, r7, r0, lsl #2
   16c88:	ldr	r0, [r0, #4]
   16c8c:	cmp	r0, r5
   16c90:	bcc	16cf4 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16c94:	cmp	r4, #0
   16c98:	beq	16cf4 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16c9c:	rsb	r0, r4, r4, lsl #3
   16ca0:	add	r6, r7, r0, lsl #2
   16ca4:	ldr	r1, [r6, #4]
   16ca8:	cmp	r1, r5
   16cac:	bne	16cd8 <__mtree_search_lowercase_to_start@@Base+0x80>
   16cb0:	ldr	r1, [r7, r0, lsl #2]
   16cb4:	mov	r0, r8
   16cb8:	mov	r2, r5
   16cbc:	bl	11704 <mycore_strncasecmp@plt>
   16cc0:	cmp	r0, #0
   16cc4:	beq	16cf8 <__mtree_search_lowercase_to_start@@Base+0xa0>
   16cc8:	ldr	r4, [r6, #24]
   16ccc:	cmp	r4, #0
   16cd0:	bne	16c9c <__mtree_search_lowercase_to_start@@Base+0x44>
   16cd4:	b	16cf4 <__mtree_search_lowercase_to_start@@Base+0x9c>
   16cd8:	bcs	16c7c <__mtree_search_lowercase_to_start@@Base+0x24>
   16cdc:	ldr	r4, [r6, #20]
   16ce0:	rsb	r0, r4, r4, lsl #3
   16ce4:	add	r0, r7, r0, lsl #2
   16ce8:	ldr	r0, [r0, #4]
   16cec:	cmp	r0, r5
   16cf0:	bls	16c94 <__mtree_search_lowercase_to_start@@Base+0x3c>
   16cf4:	mov	r4, #0
   16cf8:	mov	r0, r4
   16cfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016d00 <__mtree_search_to_start@@Base>:
   16d00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d04:	add	fp, sp, #24
   16d08:	cmp	r1, #0
   16d0c:	beq	16d9c <__mtree_search_to_start@@Base+0x9c>
   16d10:	mov	r5, r3
   16d14:	mov	r8, r2
   16d18:	mov	r4, r1
   16d1c:	ldr	r7, [r0]
   16d20:	b	16d44 <__mtree_search_to_start@@Base+0x44>
   16d24:	ldr	r4, [r6, #16]
   16d28:	rsb	r0, r4, r4, lsl #3
   16d2c:	add	r0, r7, r0, lsl #2
   16d30:	ldr	r0, [r0, #4]
   16d34:	cmp	r0, r5
   16d38:	bcc	16d9c <__mtree_search_to_start@@Base+0x9c>
   16d3c:	cmp	r4, #0
   16d40:	beq	16d9c <__mtree_search_to_start@@Base+0x9c>
   16d44:	rsb	r0, r4, r4, lsl #3
   16d48:	add	r6, r7, r0, lsl #2
   16d4c:	ldr	r1, [r6, #4]
   16d50:	cmp	r1, r5
   16d54:	bne	16d80 <__mtree_search_to_start@@Base+0x80>
   16d58:	ldr	r1, [r7, r0, lsl #2]
   16d5c:	mov	r0, r8
   16d60:	mov	r2, r5
   16d64:	bl	11a88 <bcmp@plt>
   16d68:	cmp	r0, #0
   16d6c:	beq	16da0 <__mtree_search_to_start@@Base+0xa0>
   16d70:	ldr	r4, [r6, #24]
   16d74:	cmp	r4, #0
   16d78:	bne	16d44 <__mtree_search_to_start@@Base+0x44>
   16d7c:	b	16d9c <__mtree_search_to_start@@Base+0x9c>
   16d80:	bcs	16d24 <__mtree_search_to_start@@Base+0x24>
   16d84:	ldr	r4, [r6, #20]
   16d88:	rsb	r0, r4, r4, lsl #3
   16d8c:	add	r0, r7, r0, lsl #2
   16d90:	ldr	r0, [r0, #4]
   16d94:	cmp	r0, r5
   16d98:	bls	16d3c <__mtree_search_to_start@@Base+0x3c>
   16d9c:	mov	r4, #0
   16da0:	mov	r0, r4
   16da4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016da8 <mctree_insert_child@@Base>:
   16da8:	push	{r4, r5, fp, lr}
   16dac:	add	fp, sp, #8
   16db0:	mov	r5, r0
   16db4:	ldr	r0, [r0]
   16db8:	ldr	r4, [r5, #4]
   16dbc:	rsb	r1, r1, r1, lsl #3
   16dc0:	add	r1, r0, r1, lsl #2
   16dc4:	str	r4, [r1, #24]
   16dc8:	rsb	r1, r4, r4, lsl #3
   16dcc:	str	r2, [r0, r1, lsl #2]!
   16dd0:	ldr	r1, [fp, #8]
   16dd4:	str	r3, [r0, #4]
   16dd8:	str	r1, [r0, #8]
   16ddc:	add	r0, r4, #1
   16de0:	str	r0, [r5, #4]
   16de4:	ldr	r1, [r5, #8]
   16de8:	cmp	r0, r1
   16dec:	bcc	16e10 <mctree_insert_child@@Base+0x68>
   16df0:	movw	r0, #4097	; 0x1001
   16df4:	add	r0, r4, r0
   16df8:	str	r0, [r5, #8]
   16dfc:	rsb	r0, r0, r0, lsl #3
   16e00:	lsl	r1, r0, #2
   16e04:	ldr	r0, [r5]
   16e08:	bl	110b0 <mycore_realloc@plt>
   16e0c:	str	r0, [r5]
   16e10:	ldm	r5, {r0, r1}
   16e14:	rsb	r1, r1, r1, lsl #3
   16e18:	mov	r2, #0
   16e1c:	str	r2, [r0, r1, lsl #2]!
   16e20:	vmov.i32	q8, #0	; 0x00000000
   16e24:	str	r2, [r0, #24]
   16e28:	add	r0, r0, #8
   16e2c:	vst1.32	{d16-d17}, [r0]
   16e30:	mov	r0, r4
   16e34:	pop	{r4, r5, fp, pc}

00016e38 <mctree_insert_after@@Base>:
   16e38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e3c:	add	fp, sp, #24
   16e40:	mov	r5, r0
   16e44:	ldr	r0, [r0]
   16e48:	ldr	r8, [r5, #4]
   16e4c:	rsb	r6, r1, r1, lsl #3
   16e50:	add	r4, r0, r6, lsl #2
   16e54:	ldr	r6, [r4, #20]!
   16e58:	ldr	ip, [fp, #8]
   16e5c:	cmp	r6, #0
   16e60:	beq	16e7c <mctree_insert_after@@Base+0x44>
   16e64:	rsb	r7, r6, r6, lsl #3
   16e68:	add	r7, r0, r7, lsl #2
   16e6c:	str	r8, [r7, #16]
   16e70:	rsb	r7, r8, r8, lsl #3
   16e74:	add	r7, r0, r7, lsl #2
   16e78:	str	r6, [r7, #20]
   16e7c:	str	r8, [r4]
   16e80:	rsb	r7, r8, r8, lsl #3
   16e84:	str	r2, [r0, r7, lsl #2]!
   16e88:	stmib	r0, {r3, ip}
   16e8c:	str	r1, [r0, #16]
   16e90:	add	r0, r8, #1
   16e94:	str	r0, [r5, #4]
   16e98:	ldr	r1, [r5, #8]
   16e9c:	cmp	r0, r1
   16ea0:	bcc	16ec4 <mctree_insert_after@@Base+0x8c>
   16ea4:	movw	r0, #4097	; 0x1001
   16ea8:	add	r0, r8, r0
   16eac:	str	r0, [r5, #8]
   16eb0:	rsb	r0, r0, r0, lsl #3
   16eb4:	lsl	r1, r0, #2
   16eb8:	ldr	r0, [r5]
   16ebc:	bl	110b0 <mycore_realloc@plt>
   16ec0:	str	r0, [r5]
   16ec4:	ldm	r5, {r0, r1}
   16ec8:	rsb	r1, r1, r1, lsl #3
   16ecc:	mov	r2, #0
   16ed0:	str	r2, [r0, r1, lsl #2]!
   16ed4:	vmov.i32	q8, #0	; 0x00000000
   16ed8:	str	r2, [r0, #24]
   16edc:	add	r0, r0, #8
   16ee0:	vst1.32	{d16-d17}, [r0]
   16ee4:	mov	r0, r8
   16ee8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016eec <mctree_insert_before@@Base>:
   16eec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ef0:	add	fp, sp, #24
   16ef4:	mov	r5, r0
   16ef8:	ldr	r0, [r0]
   16efc:	ldr	r8, [r5, #4]
   16f00:	rsb	r6, r1, r1, lsl #3
   16f04:	add	r4, r0, r6, lsl #2
   16f08:	ldr	r6, [r4, #16]!
   16f0c:	ldr	ip, [fp, #8]
   16f10:	cmp	r6, #0
   16f14:	beq	16f30 <mctree_insert_before@@Base+0x44>
   16f18:	rsb	r7, r6, r6, lsl #3
   16f1c:	add	r7, r0, r7, lsl #2
   16f20:	str	r8, [r7, #20]
   16f24:	rsb	r7, r8, r8, lsl #3
   16f28:	add	r7, r0, r7, lsl #2
   16f2c:	str	r6, [r7, #16]
   16f30:	str	r8, [r4]
   16f34:	rsb	r7, r8, r8, lsl #3
   16f38:	str	r2, [r0, r7, lsl #2]!
   16f3c:	stmib	r0, {r3, ip}
   16f40:	str	r1, [r0, #20]
   16f44:	add	r0, r8, #1
   16f48:	str	r0, [r5, #4]
   16f4c:	ldr	r1, [r5, #8]
   16f50:	cmp	r0, r1
   16f54:	bcc	16f78 <mctree_insert_before@@Base+0x8c>
   16f58:	movw	r0, #4097	; 0x1001
   16f5c:	add	r0, r8, r0
   16f60:	str	r0, [r5, #8]
   16f64:	rsb	r0, r0, r0, lsl #3
   16f68:	lsl	r1, r0, #2
   16f6c:	ldr	r0, [r5]
   16f70:	bl	110b0 <mycore_realloc@plt>
   16f74:	str	r0, [r5]
   16f78:	ldm	r5, {r0, r1}
   16f7c:	rsb	r1, r1, r1, lsl #3
   16f80:	mov	r2, #0
   16f84:	str	r2, [r0, r1, lsl #2]!
   16f88:	vmov.i32	q8, #0	; 0x00000000
   16f8c:	str	r2, [r0, #24]
   16f90:	add	r0, r0, #8
   16f94:	vst1.32	{d16-d17}, [r0]
   16f98:	mov	r0, r8
   16f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016fa0 <__mtree_insert_to_start@@Base>:
   16fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fa4:	add	fp, sp, #28
   16fa8:	sub	sp, sp, #4
   16fac:	cmp	r1, #0
   16fb0:	beq	1708c <__mtree_insert_to_start@@Base+0xec>
   16fb4:	mov	r5, r3
   16fb8:	mov	r6, r2
   16fbc:	mov	sl, r0
   16fc0:	ldr	r7, [r0]
   16fc4:	ldr	r9, [fp, #8]
   16fc8:	mov	r4, r1
   16fcc:	rsb	r0, r1, r1, lsl #3
   16fd0:	add	r8, r7, r0, lsl #2
   16fd4:	ldr	r1, [r8, #4]
   16fd8:	cmp	r1, r5
   16fdc:	bne	17008 <__mtree_insert_to_start@@Base+0x68>
   16fe0:	ldr	r1, [r7, r0, lsl #2]
   16fe4:	mov	r0, r6
   16fe8:	mov	r2, r5
   16fec:	bl	11a88 <bcmp@plt>
   16ff0:	cmp	r0, #0
   16ff4:	beq	17094 <__mtree_insert_to_start@@Base+0xf4>
   16ff8:	ldr	r1, [r8, #24]
   16ffc:	cmp	r1, #0
   17000:	bne	16fc8 <__mtree_insert_to_start@@Base+0x28>
   17004:	b	170dc <__mtree_insert_to_start@@Base+0x13c>
   17008:	bcs	17030 <__mtree_insert_to_start@@Base+0x90>
   1700c:	ldr	r1, [r8, #20]
   17010:	cmp	r1, #0
   17014:	beq	170a0 <__mtree_insert_to_start@@Base+0x100>
   17018:	rsb	r0, r1, r1, lsl #3
   1701c:	add	r0, r7, r0, lsl #2
   17020:	ldr	r0, [r0, #4]
   17024:	cmp	r0, r5
   17028:	bls	16fc8 <__mtree_insert_to_start@@Base+0x28>
   1702c:	b	170a0 <__mtree_insert_to_start@@Base+0x100>
   17030:	ldr	r1, [r8, #16]
   17034:	cmp	r1, #0
   17038:	beq	17050 <__mtree_insert_to_start@@Base+0xb0>
   1703c:	rsb	r0, r1, r1, lsl #3
   17040:	add	r0, r7, r0, lsl #2
   17044:	ldr	r0, [r0, #4]
   17048:	cmp	r0, r5
   1704c:	bcs	16fc8 <__mtree_insert_to_start@@Base+0x28>
   17050:	ldr	r3, [fp, #12]
   17054:	cmp	r3, #0
   17058:	beq	1706c <__mtree_insert_to_start@@Base+0xcc>
   1705c:	add	r2, fp, #8
   17060:	mov	r0, r6
   17064:	mov	r1, r5
   17068:	blx	r3
   1706c:	ldr	r0, [fp, #8]
   17070:	str	r0, [sp]
   17074:	mov	r0, sl
   17078:	mov	r1, r4
   1707c:	mov	r2, r6
   17080:	mov	r3, r5
   17084:	bl	11524 <mctree_insert_before@plt>
   17088:	b	17114 <__mtree_insert_to_start@@Base+0x174>
   1708c:	mov	r4, #0
   17090:	b	17118 <__mtree_insert_to_start@@Base+0x178>
   17094:	cmp	r9, #0
   17098:	strne	r9, [r8, #8]
   1709c:	b	17118 <__mtree_insert_to_start@@Base+0x178>
   170a0:	ldr	r3, [fp, #12]
   170a4:	cmp	r3, #0
   170a8:	beq	170bc <__mtree_insert_to_start@@Base+0x11c>
   170ac:	add	r2, fp, #8
   170b0:	mov	r0, r6
   170b4:	mov	r1, r5
   170b8:	blx	r3
   170bc:	ldr	r0, [fp, #8]
   170c0:	str	r0, [sp]
   170c4:	mov	r0, sl
   170c8:	mov	r1, r4
   170cc:	mov	r2, r6
   170d0:	mov	r3, r5
   170d4:	bl	1207c <mctree_insert_after@plt>
   170d8:	b	17114 <__mtree_insert_to_start@@Base+0x174>
   170dc:	ldr	r3, [fp, #12]
   170e0:	cmp	r3, #0
   170e4:	beq	170f8 <__mtree_insert_to_start@@Base+0x158>
   170e8:	add	r2, fp, #8
   170ec:	mov	r0, r6
   170f0:	mov	r1, r5
   170f4:	blx	r3
   170f8:	ldr	r0, [fp, #8]
   170fc:	str	r0, [sp]
   17100:	mov	r0, sl
   17104:	mov	r1, r4
   17108:	mov	r2, r6
   1710c:	mov	r3, r5
   17110:	bl	116a4 <mctree_insert_child@plt>
   17114:	mov	r4, r0
   17118:	mov	r0, r4
   1711c:	sub	sp, fp, #28
   17120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017124 <mctree_insert@@Base>:
   17124:	push	{r4, r5, r6, r7, fp, lr}
   17128:	add	fp, sp, #16
   1712c:	sub	sp, sp, #16
   17130:	str	r3, [sp, #12]
   17134:	cmp	r2, #0
   17138:	beq	171b0 <mctree_insert@@Base+0x8c>
   1713c:	mov	r4, r2
   17140:	mov	r5, r1
   17144:	mov	r6, r0
   17148:	ldr	ip, [fp, #8]
   1714c:	mov	r0, r1
   17150:	ldrb	r1, [r0], r2
   17154:	ldr	r2, [pc, #156]	; 171f8 <mctree_insert@@Base+0xd4>
   17158:	add	r2, pc, r2
   1715c:	ldrb	r1, [r2, r1]
   17160:	ldrb	r0, [r0, #-1]
   17164:	ldrb	r0, [r2, r0]
   17168:	add	r0, r0, r1
   1716c:	ldr	r1, [r6]
   17170:	ldr	r2, [r6, #12]
   17174:	udiv	r7, r0, r2
   17178:	mls	r0, r7, r2, r0
   1717c:	add	r7, r0, #1
   17180:	rsb	r0, r7, r7, lsl #3
   17184:	add	r0, r1, r0, lsl #2
   17188:	ldr	r1, [r0, #24]
   1718c:	cmp	r1, #0
   17190:	beq	171bc <mctree_insert@@Base+0x98>
   17194:	stm	sp, {r3, ip}
   17198:	mov	r0, r6
   1719c:	mov	r2, r5
   171a0:	mov	r3, r4
   171a4:	bl	117f4 <__mtree_insert_to_start@plt>
   171a8:	sub	sp, fp, #16
   171ac:	pop	{r4, r5, r6, r7, fp, pc}
   171b0:	mov	r0, #0
   171b4:	sub	sp, fp, #16
   171b8:	pop	{r4, r5, r6, r7, fp, pc}
   171bc:	cmp	ip, #0
   171c0:	beq	171d4 <mctree_insert@@Base+0xb0>
   171c4:	add	r2, sp, #12
   171c8:	mov	r0, r5
   171cc:	mov	r1, r4
   171d0:	blx	ip
   171d4:	ldr	r0, [sp, #12]
   171d8:	str	r0, [sp]
   171dc:	mov	r0, r6
   171e0:	mov	r1, r7
   171e4:	mov	r2, r5
   171e8:	mov	r3, r4
   171ec:	bl	116a4 <mctree_insert_child@plt>
   171f0:	sub	sp, fp, #16
   171f4:	pop	{r4, r5, r6, r7, fp, pc}
   171f8:	andeq	r8, r1, r0, lsr #19

000171fc <mctree_search@@Base>:
   171fc:	cmp	r2, #0
   17200:	beq	17260 <mctree_search@@Base+0x64>
   17204:	push	{r4, sl, fp, lr}
   17208:	add	fp, sp, #8
   1720c:	mov	r3, r2
   17210:	mov	ip, r1
   17214:	ldrb	r2, [r1], r2
   17218:	ldr	lr, [pc, #72]	; 17268 <mctree_search@@Base+0x6c>
   1721c:	add	lr, pc, lr
   17220:	ldrb	r2, [lr, r2]
   17224:	ldrb	r1, [r1, #-1]
   17228:	ldrb	r1, [lr, r1]
   1722c:	add	r1, r1, r2
   17230:	ldr	lr, [r0]
   17234:	ldr	r2, [r0, #12]
   17238:	udiv	r4, r1, r2
   1723c:	mls	r1, r4, r2, r1
   17240:	rsb	r1, r1, r1, lsl #3
   17244:	add	r1, lr, r1, lsl #2
   17248:	ldr	r1, [r1, #52]	; 0x34
   1724c:	cmp	r1, #0
   17250:	pop	{r4, sl, fp, lr}
   17254:	beq	17260 <mctree_search@@Base+0x64>
   17258:	mov	r2, ip
   1725c:	b	16d00 <__mtree_search_to_start@@Base>
   17260:	mov	r0, #0
   17264:	bx	lr
   17268:	ldrdeq	r8, [r1], -ip

0001726c <mctree_search_lowercase@@Base>:
   1726c:	cmp	r2, #0
   17270:	beq	172d0 <mctree_search_lowercase@@Base+0x64>
   17274:	push	{r4, sl, fp, lr}
   17278:	add	fp, sp, #8
   1727c:	mov	r3, r2
   17280:	mov	ip, r1
   17284:	ldrb	r2, [r1], r2
   17288:	ldr	lr, [pc, #72]	; 172d8 <mctree_search_lowercase@@Base+0x6c>
   1728c:	add	lr, pc, lr
   17290:	ldrb	r2, [lr, r2]
   17294:	ldrb	r1, [r1, #-1]
   17298:	ldrb	r1, [lr, r1]
   1729c:	add	r1, r1, r2
   172a0:	ldr	lr, [r0]
   172a4:	ldr	r2, [r0, #12]
   172a8:	udiv	r4, r1, r2
   172ac:	mls	r1, r4, r2, r1
   172b0:	rsb	r1, r1, r1, lsl #3
   172b4:	add	r1, lr, r1, lsl #2
   172b8:	ldr	r1, [r1, #52]	; 0x34
   172bc:	cmp	r1, #0
   172c0:	pop	{r4, sl, fp, lr}
   172c4:	beq	172d0 <mctree_search_lowercase@@Base+0x64>
   172c8:	mov	r2, ip
   172cc:	b	16c58 <__mtree_search_lowercase_to_start@@Base>
   172d0:	mov	r0, #0
   172d4:	bx	lr
   172d8:	andeq	r8, r1, ip, ror #16

000172dc <mycore_utils_mhash_hash@@Base>:
   172dc:	cmp	r1, #0
   172e0:	beq	17308 <mycore_utils_mhash_hash@@Base+0x2c>
   172e4:	mov	ip, #0
   172e8:	ldrb	r3, [r0], #1
   172ec:	add	r3, ip, r3
   172f0:	add	r3, r3, r3, lsl #10
   172f4:	eor	ip, r3, r3, lsr #6
   172f8:	subs	r1, r1, #1
   172fc:	bne	172e8 <mycore_utils_mhash_hash@@Base+0xc>
   17300:	add	r0, ip, ip, lsl #3
   17304:	b	1730c <mycore_utils_mhash_hash@@Base+0x30>
   17308:	mov	r0, #0
   1730c:	eor	r0, r0, r0, lsr #11
   17310:	add	r0, r0, r0, lsl #15
   17314:	udiv	r1, r0, r2
   17318:	mls	r0, r1, r2, r0
   1731c:	bx	lr

00017320 <mycore_utils_mhash_create@@Base>:
   17320:	mov	r0, #1
   17324:	mov	r1, #24
   17328:	b	113a4 <mycore_calloc@plt>

0001732c <mycore_utils_mhash_init@@Base>:
   1732c:	push	{r4, r5, r6, sl, fp, lr}
   17330:	add	fp, sp, #16
   17334:	sub	sp, sp, #8
   17338:	mov	r4, r2
   1733c:	mov	r6, r1
   17340:	mov	r5, r0
   17344:	bl	115d8 <mchar_async_create@plt>
   17348:	mov	r1, r0
   1734c:	str	r0, [r5]
   17350:	mov	r0, #2
   17354:	cmp	r1, #0
   17358:	beq	173cc <mycore_utils_mhash_init@@Base+0xa0>
   1735c:	mov	r0, r1
   17360:	mov	r1, #128	; 0x80
   17364:	mov	r2, #4096	; 0x1000
   17368:	bl	118d8 <mchar_async_init@plt>
   1736c:	str	r0, [sp, #4]
   17370:	cmp	r0, #0
   17374:	bne	173cc <mycore_utils_mhash_init@@Base+0xa0>
   17378:	ldr	r0, [r5]
   1737c:	add	r1, sp, #4
   17380:	bl	116f8 <mchar_async_node_add@plt>
   17384:	str	r0, [r5, #4]
   17388:	ldr	r0, [sp, #4]
   1738c:	cmp	r0, #0
   17390:	bne	173cc <mycore_utils_mhash_init@@Base+0xa0>
   17394:	cmp	r6, #128	; 0x80
   17398:	movls	r6, #128	; 0x80
   1739c:	mov	r0, r6
   173a0:	mov	r1, #4
   173a4:	bl	113a4 <mycore_calloc@plt>
   173a8:	str	r0, [r5, #8]
   173ac:	cmp	r0, #0
   173b0:	mov	r0, #2
   173b4:	beq	173cc <mycore_utils_mhash_init@@Base+0xa0>
   173b8:	str	r6, [r5, #12]
   173bc:	cmp	r4, #0
   173c0:	movweq	r4, #1
   173c4:	str	r4, [r5, #20]
   173c8:	mov	r0, #0
   173cc:	sub	sp, fp, #16
   173d0:	pop	{r4, r5, r6, sl, fp, pc}

000173d4 <mycore_utils_mhash_clean@@Base>:
   173d4:	push	{r4, sl, fp, lr}
   173d8:	add	fp, sp, #8
   173dc:	mov	r4, r0
   173e0:	ldr	r0, [r0]
   173e4:	bl	11f98 <mchar_async_clean@plt>
   173e8:	ldr	r0, [r4, #8]
   173ec:	ldr	r1, [r4, #12]
   173f0:	lsl	r2, r1, #2
   173f4:	mov	r1, #0
   173f8:	pop	{r4, sl, fp, lr}
   173fc:	b	11cc8 <memset@plt>

00017400 <mycore_utils_mhash_destroy@@Base>:
   17400:	push	{r4, r5, r6, sl, fp, lr}
   17404:	add	fp, sp, #16
   17408:	mov	r4, #0
   1740c:	cmp	r0, #0
   17410:	beq	17444 <mycore_utils_mhash_destroy@@Base+0x44>
   17414:	mov	r6, r1
   17418:	mov	r5, r0
   1741c:	ldr	r0, [r0, #8]
   17420:	cmp	r0, #0
   17424:	beq	17434 <mycore_utils_mhash_destroy@@Base+0x34>
   17428:	bl	12184 <mycore_free@plt>
   1742c:	mov	r0, #0
   17430:	str	r0, [r5, #8]
   17434:	cmp	r6, #0
   17438:	beq	1744c <mycore_utils_mhash_destroy@@Base+0x4c>
   1743c:	ldr	r0, [r5, #8]
   17440:	bl	12184 <mycore_free@plt>
   17444:	mov	r0, r4
   17448:	pop	{r4, r5, r6, sl, fp, pc}
   1744c:	mov	r0, r5
   17450:	pop	{r4, r5, r6, sl, fp, pc}

00017454 <mycore_utils_mhash_create_entry@@Base>:
   17454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17458:	add	fp, sp, #24
   1745c:	mov	r8, r3
   17460:	mov	r6, r2
   17464:	mov	r7, r1
   17468:	mov	r5, r0
   1746c:	ldr	r0, [r0]
   17470:	ldr	r1, [r5, #4]
   17474:	mov	r2, #16
   17478:	bl	11d28 <mchar_async_malloc@plt>
   1747c:	mov	r4, r0
   17480:	ldm	r5, {r0, r1}
   17484:	add	r2, r6, #1
   17488:	bl	11d28 <mchar_async_malloc@plt>
   1748c:	str	r0, [r4]
   17490:	cmp	r0, #0
   17494:	beq	174c0 <mycore_utils_mhash_create_entry@@Base+0x6c>
   17498:	mov	r1, r7
   1749c:	mov	r2, r6
   174a0:	bl	113ec <memcpy@plt>
   174a4:	ldr	r0, [r4]
   174a8:	mov	r1, #0
   174ac:	strb	r1, [r0, r6]
   174b0:	stmib	r4, {r6, r8}
   174b4:	str	r1, [r4, #12]
   174b8:	mov	r0, r4
   174bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   174c0:	ldm	r5, {r0, r1}
   174c4:	mov	r2, r4
   174c8:	bl	11b48 <mchar_async_free@plt>
   174cc:	mov	r4, #0
   174d0:	mov	r0, r4
   174d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000174d8 <mycore_utils_mhash_add_with_choice@@Base>:
   174d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   174dc:	add	fp, sp, #24
   174e0:	mov	r8, #0
   174e4:	cmp	r1, #0
   174e8:	movne	r5, r2
   174ec:	cmpne	r2, #0
   174f0:	bne	174fc <mycore_utils_mhash_add_with_choice@@Base+0x24>
   174f4:	mov	r0, r8
   174f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   174fc:	mov	r6, r1
   17500:	mov	r9, r0
   17504:	ldr	r4, [r0, #12]
   17508:	mov	r0, r1
   1750c:	mov	r1, r5
   17510:	mov	r2, r4
   17514:	bl	11500 <mycore_utils_mhash_hash@plt>
   17518:	mov	r8, r0
   1751c:	ldr	r0, [r9, #8]
   17520:	ldr	r7, [r0, r8, lsl #2]
   17524:	cmp	r7, #0
   17528:	beq	175a0 <mycore_utils_mhash_add_with_choice@@Base+0xc8>
   1752c:	mov	r4, #0
   17530:	ldr	r0, [r7, #4]
   17534:	cmp	r0, r5
   17538:	bne	17554 <mycore_utils_mhash_add_with_choice@@Base+0x7c>
   1753c:	ldr	r0, [r7]
   17540:	mov	r1, r6
   17544:	mov	r2, r5
   17548:	bl	12328 <strncmp@plt>
   1754c:	cmp	r0, #0
   17550:	beq	175e0 <mycore_utils_mhash_add_with_choice@@Base+0x108>
   17554:	ldr	r0, [r7, #12]
   17558:	cmp	r0, #0
   1755c:	beq	1756c <mycore_utils_mhash_add_with_choice@@Base+0x94>
   17560:	add	r4, r4, #1
   17564:	mov	r7, r0
   17568:	b	17530 <mycore_utils_mhash_add_with_choice@@Base+0x58>
   1756c:	mov	r0, r9
   17570:	mov	r1, r6
   17574:	mov	r2, r5
   17578:	mov	r3, #0
   1757c:	bl	122a4 <mycore_utils_mhash_create_entry@plt>
   17580:	mov	r8, r0
   17584:	str	r0, [r7, #12]
   17588:	ldr	r0, [r9, #20]
   1758c:	cmp	r4, r0
   17590:	movhi	r0, r9
   17594:	blhi	11e3c <mycore_utils_mhash_rebuld@plt>
   17598:	mov	r0, r8
   1759c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   175a0:	ldr	r0, [r9, #16]
   175a4:	sub	r1, r4, r4, lsr #2
   175a8:	cmp	r0, r1
   175ac:	movcs	r0, r9
   175b0:	blcs	11e3c <mycore_utils_mhash_rebuld@plt>
   175b4:	mov	r0, r9
   175b8:	mov	r1, r6
   175bc:	mov	r2, r5
   175c0:	mov	r3, #0
   175c4:	bl	122a4 <mycore_utils_mhash_create_entry@plt>
   175c8:	ldr	r1, [r9, #8]
   175cc:	str	r0, [r1, r8, lsl #2]
   175d0:	ldr	r0, [r9, #8]
   175d4:	ldr	r8, [r0, r8, lsl #2]
   175d8:	mov	r0, r8
   175dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   175e0:	mov	r0, r7
   175e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000175e8 <mycore_utils_mhash_rebuld@@Base>:
   175e8:	push	{r4, r5, r6, r7, fp, lr}
   175ec:	add	fp, sp, #16
   175f0:	mov	r4, r0
   175f4:	ldr	r5, [r0, #8]
   175f8:	ldr	r6, [r0, #12]
   175fc:	lsl	r0, r6, #1
   17600:	str	r0, [r4, #12]
   17604:	mov	r1, #4
   17608:	bl	113a4 <mycore_calloc@plt>
   1760c:	str	r0, [r4, #8]
   17610:	cmp	r0, #0
   17614:	beq	17678 <mycore_utils_mhash_rebuld@@Base+0x90>
   17618:	ldr	r0, [r4, #12]
   1761c:	cmp	r0, #0
   17620:	beq	17668 <mycore_utils_mhash_rebuld@@Base+0x80>
   17624:	mov	r7, #0
   17628:	b	1763c <mycore_utils_mhash_rebuld@@Base+0x54>
   1762c:	ldr	r0, [r4, #12]
   17630:	add	r7, r7, #1
   17634:	cmp	r7, r0
   17638:	bcs	17668 <mycore_utils_mhash_rebuld@@Base+0x80>
   1763c:	ldr	r6, [r5, r7, lsl #2]
   17640:	cmp	r6, #0
   17644:	beq	1762c <mycore_utils_mhash_rebuld@@Base+0x44>
   17648:	ldm	r6, {r1, r2}
   1764c:	mov	r0, r4
   17650:	mov	r3, r6
   17654:	bl	12250 <mycore_utils_mhash_rebuild_add_entry@plt>
   17658:	ldr	r6, [r6, #12]
   1765c:	cmp	r6, #0
   17660:	bne	17648 <mycore_utils_mhash_rebuld@@Base+0x60>
   17664:	b	1762c <mycore_utils_mhash_rebuld@@Base+0x44>
   17668:	mov	r0, r5
   1766c:	bl	12184 <mycore_free@plt>
   17670:	ldr	r0, [r4, #8]
   17674:	pop	{r4, r5, r6, r7, fp, pc}
   17678:	str	r5, [r4, #8]
   1767c:	str	r6, [r4, #12]
   17680:	mov	r0, #0
   17684:	pop	{r4, r5, r6, r7, fp, pc}

00017688 <mycore_utils_mhash_add@@Base>:
   17688:	push	{r4, sl, fp, lr}
   1768c:	add	fp, sp, #8
   17690:	mov	r4, r3
   17694:	bl	1216c <mycore_utils_mhash_add_with_choice@plt>
   17698:	cmp	r0, #0
   1769c:	strne	r4, [r0, #8]
   176a0:	pop	{r4, sl, fp, pc}

000176a4 <mycore_utils_mhash_search@@Base>:
   176a4:	push	{r4, r5, r6, r7, fp, lr}
   176a8:	add	fp, sp, #16
   176ac:	mov	r4, #0
   176b0:	cmp	r1, #0
   176b4:	movne	r5, r2
   176b8:	cmpne	r2, #0
   176bc:	bne	176c8 <mycore_utils_mhash_search@@Base+0x24>
   176c0:	mov	r0, r4
   176c4:	pop	{r4, r5, r6, r7, fp, pc}
   176c8:	mov	r6, r1
   176cc:	mov	r7, r0
   176d0:	ldr	r2, [r0, #12]
   176d4:	mov	r0, r1
   176d8:	mov	r1, r5
   176dc:	bl	11500 <mycore_utils_mhash_hash@plt>
   176e0:	ldr	r1, [r7, #8]
   176e4:	ldr	r7, [r1, r0, lsl #2]
   176e8:	cmp	r7, #0
   176ec:	bne	17700 <mycore_utils_mhash_search@@Base+0x5c>
   176f0:	b	176c0 <mycore_utils_mhash_search@@Base+0x1c>
   176f4:	ldr	r7, [r7, #12]
   176f8:	cmp	r7, #0
   176fc:	beq	176c0 <mycore_utils_mhash_search@@Base+0x1c>
   17700:	ldr	r0, [r7, #4]
   17704:	cmp	r0, r5
   17708:	bne	176f4 <mycore_utils_mhash_search@@Base+0x50>
   1770c:	ldr	r0, [r7]
   17710:	mov	r1, r6
   17714:	mov	r2, r5
   17718:	bl	12328 <strncmp@plt>
   1771c:	cmp	r0, #0
   17720:	bne	176f4 <mycore_utils_mhash_search@@Base+0x50>
   17724:	mov	r4, r7
   17728:	mov	r0, r4
   1772c:	pop	{r4, r5, r6, r7, fp, pc}

00017730 <mycore_utils_mhash_entry_by_id@@Base>:
   17730:	mov	r2, r0
   17734:	ldr	r3, [r0, #12]
   17738:	mov	r0, #0
   1773c:	cmp	r3, r1
   17740:	bxls	lr
   17744:	ldr	r0, [r2, #8]
   17748:	ldr	r0, [r0, r1, lsl #2]
   1774c:	bx	lr

00017750 <mycore_utils_mhash_get_table_size@@Base>:
   17750:	ldr	r0, [r0, #12]
   17754:	bx	lr

00017758 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   17758:	push	{r4, r5, fp, lr}
   1775c:	add	fp, sp, #8
   17760:	mov	r5, r0
   17764:	mov	r0, #0
   17768:	cmp	r1, #0
   1776c:	cmpne	r2, #0
   17770:	bne	17778 <mycore_utils_mhash_rebuild_add_entry@@Base+0x20>
   17774:	pop	{r4, r5, fp, pc}
   17778:	mov	r4, r3
   1777c:	mov	r0, #0
   17780:	str	r0, [r3, #12]
   17784:	ldr	r3, [r5, #12]
   17788:	mov	r0, r1
   1778c:	mov	r1, r2
   17790:	mov	r2, r3
   17794:	bl	11500 <mycore_utils_mhash_hash@plt>
   17798:	ldr	r1, [r5, #8]
   1779c:	ldr	r0, [r1, r0, lsl #2]!
   177a0:	cmp	r0, #0
   177a4:	beq	177bc <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   177a8:	mov	r1, r0
   177ac:	ldr	r0, [r0, #12]
   177b0:	cmp	r0, #0
   177b4:	bne	177a8 <mycore_utils_mhash_rebuild_add_entry@@Base+0x50>
   177b8:	add	r1, r1, #12
   177bc:	str	r4, [r1]
   177c0:	mov	r0, r4
   177c4:	pop	{r4, r5, fp, pc}

000177c8 <myencoding_detect_by_trigram@@Base>:
   177c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177cc:	add	fp, sp, #28
   177d0:	sub	sp, sp, #12
   177d4:	str	r3, [sp, #8]
   177d8:	mov	r5, #0
   177dc:	str	r5, [r0]
   177e0:	str	r0, [sp]
   177e4:	str	r5, [r0, #4]
   177e8:	str	r2, [sp, #4]
   177ec:	subs	r7, r2, #3
   177f0:	beq	17884 <myencoding_detect_by_trigram@@Base+0xbc>
   177f4:	mov	r8, r1
   177f8:	ldr	r9, [fp, #8]
   177fc:	b	1783c <myencoding_detect_by_trigram@@Base+0x74>
   17800:	ldr	r0, [r4, #4]
   17804:	ldr	r3, [sp]
   17808:	ldm	r3, {r1, r2}
   1780c:	add	r0, r2, r0
   17810:	add	r1, r1, #1
   17814:	str	r1, [r3]
   17818:	str	r0, [r3, #4]
   1781c:	ldr	r1, [fp, #12]
   17820:	cmp	r0, r1
   17824:	ldr	r0, [sp, #4]
   17828:	movcs	r5, r0
   1782c:	mov	r9, sl
   17830:	add	r5, r5, #1
   17834:	cmp	r5, r7
   17838:	bcs	17884 <myencoding_detect_by_trigram@@Base+0xbc>
   1783c:	mov	r6, r8
   17840:	ldrsb	r0, [r6, r5]!
   17844:	cmn	r0, #1
   17848:	bgt	17830 <myencoding_detect_by_trigram@@Base+0x68>
   1784c:	cmp	r9, #0
   17850:	beq	17830 <myencoding_detect_by_trigram@@Base+0x68>
   17854:	mov	sl, r9
   17858:	ldr	r4, [sp, #8]
   1785c:	mov	r0, r4
   17860:	mov	r1, r6
   17864:	mov	r2, #3
   17868:	bl	11a88 <bcmp@plt>
   1786c:	cmp	r0, #0
   17870:	beq	17800 <myencoding_detect_by_trigram@@Base+0x38>
   17874:	subs	r9, r9, #1
   17878:	add	r4, r4, #8
   1787c:	bne	1785c <myencoding_detect_by_trigram@@Base+0x94>
   17880:	b	1782c <myencoding_detect_by_trigram@@Base+0x64>
   17884:	sub	sp, fp, #28
   17888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001788c <myencoding_detect_russian_has_end@@Base>:
   1788c:	ldr	r3, [r0, #4]
   17890:	cmp	r3, r2
   17894:	movcs	r0, #1
   17898:	bxcs	lr
   1789c:	ldr	r2, [r0]
   178a0:	mov	r0, #0
   178a4:	cmp	r2, r1
   178a8:	movwcs	r0, #1
   178ac:	bx	lr

000178b0 <myencoding_detect_unicode_has_end@@Base>:
   178b0:	ldmib	r0, {r2, ip}
   178b4:	cmp	r2, #0
   178b8:	mov	r0, r2
   178bc:	movwne	r0, #1
   178c0:	clz	r3, ip
   178c4:	lsr	r3, r3, #5
   178c8:	orr	r0, r3, r0
   178cc:	cmpne	ip, #0
   178d0:	bne	178d8 <myencoding_detect_unicode_has_end@@Base+0x28>
   178d4:	bx	lr
   178d8:	mov	r0, #100	; 0x64
   178dc:	mul	r0, ip, r0
   178e0:	udiv	r2, r0, r2
   178e4:	mov	r0, #0
   178e8:	cmp	r2, r1
   178ec:	movwcc	r0, #1
   178f0:	bx	lr

000178f4 <myencoding_detect_utf_8@@Base>:
   178f4:	push	{r4, r5, fp, lr}
   178f8:	add	fp, sp, #8
   178fc:	mov	r3, #0
   17900:	str	r3, [r0]
   17904:	str	r3, [r0, #4]
   17908:	str	r3, [r0, #8]
   1790c:	cmp	r2, #0
   17910:	popeq	{r4, r5, fp, pc}
   17914:	add	ip, r0, #4
   17918:	add	lr, r0, #8
   1791c:	b	1793c <myencoding_detect_utf_8@@Base+0x48>
   17920:	add	r3, r3, #1
   17924:	mov	r4, r0
   17928:	ldr	r5, [r4]
   1792c:	add	r5, r5, #1
   17930:	str	r5, [r4]
   17934:	cmp	r3, r2
   17938:	bcs	17a0c <myencoding_detect_utf_8@@Base+0x118>
   1793c:	ldrb	r4, [r1, r3]
   17940:	tst	r4, #128	; 0x80
   17944:	beq	17920 <myencoding_detect_utf_8@@Base+0x2c>
   17948:	and	r5, r4, #224	; 0xe0
   1794c:	cmp	r5, #192	; 0xc0
   17950:	bne	17980 <myencoding_detect_utf_8@@Base+0x8c>
   17954:	add	r5, r3, #2
   17958:	cmp	r5, r2
   1795c:	bcs	17a0c <myencoding_detect_utf_8@@Base+0x118>
   17960:	add	r3, r3, r1
   17964:	ldrb	r3, [r3, #1]
   17968:	and	r3, r3, #192	; 0xc0
   1796c:	cmp	r3, #128	; 0x80
   17970:	mov	r4, lr
   17974:	moveq	r4, ip
   17978:	mov	r3, r5
   1797c:	b	17928 <myencoding_detect_utf_8@@Base+0x34>
   17980:	and	r5, r4, #240	; 0xf0
   17984:	cmp	r5, #224	; 0xe0
   17988:	bne	179c8 <myencoding_detect_utf_8@@Base+0xd4>
   1798c:	add	r5, r3, #3
   17990:	cmp	r5, r2
   17994:	bcs	17a0c <myencoding_detect_utf_8@@Base+0x118>
   17998:	add	r3, r3, r1
   1799c:	ldrb	r4, [r3, #2]
   179a0:	and	r4, r4, #192	; 0xc0
   179a4:	cmp	r4, #128	; 0x80
   179a8:	bne	179f4 <myencoding_detect_utf_8@@Base+0x100>
   179ac:	ldrb	r3, [r3, #1]
   179b0:	and	r3, r3, #192	; 0xc0
   179b4:	cmp	r3, #128	; 0x80
   179b8:	bne	179f4 <myencoding_detect_utf_8@@Base+0x100>
   179bc:	mov	r4, ip
   179c0:	mov	r3, r5
   179c4:	b	17928 <myencoding_detect_utf_8@@Base+0x34>
   179c8:	and	r4, r4, #248	; 0xf8
   179cc:	cmp	r4, #240	; 0xf0
   179d0:	bne	17a00 <myencoding_detect_utf_8@@Base+0x10c>
   179d4:	add	r5, r3, #4
   179d8:	cmp	r5, r2
   179dc:	bcs	17a0c <myencoding_detect_utf_8@@Base+0x118>
   179e0:	add	r3, r3, r1
   179e4:	ldrb	r4, [r3, #3]
   179e8:	and	r4, r4, #192	; 0xc0
   179ec:	cmp	r4, #128	; 0x80
   179f0:	beq	1799c <myencoding_detect_utf_8@@Base+0xa8>
   179f4:	mov	r4, lr
   179f8:	mov	r3, r5
   179fc:	b	17928 <myencoding_detect_utf_8@@Base+0x34>
   17a00:	add	r3, r3, #1
   17a04:	mov	r4, lr
   17a08:	b	17928 <myencoding_detect_utf_8@@Base+0x34>
   17a0c:	pop	{r4, r5, fp, pc}

00017a10 <myencoding_detect_utf_16@@Base>:
   17a10:	mov	ip, #0
   17a14:	str	ip, [r0]
   17a18:	str	ip, [r0, #4]
   17a1c:	str	ip, [r0, #8]
   17a20:	cmp	r2, #0
   17a24:	bxeq	lr
   17a28:	b	17a38 <myencoding_detect_utf_16@@Base+0x28>
   17a2c:	add	ip, ip, #1
   17a30:	cmp	ip, r2
   17a34:	bcs	17aa4 <myencoding_detect_utf_16@@Base+0x94>
   17a38:	ldrb	r3, [r1, ip]
   17a3c:	cmp	r3, #0
   17a40:	bne	17a2c <myencoding_detect_utf_16@@Base+0x1c>
   17a44:	tst	ip, #1
   17a48:	bne	17a7c <myencoding_detect_utf_16@@Base+0x6c>
   17a4c:	add	ip, ip, #1
   17a50:	ldrb	r3, [r1, ip]
   17a54:	sub	r3, r3, #32
   17a58:	uxtb	r3, r3
   17a5c:	cmp	r3, #94	; 0x5e
   17a60:	bhi	17a30 <myencoding_detect_utf_16@@Base+0x20>
   17a64:	ldr	r3, [r0, #8]
   17a68:	add	r3, r3, #1
   17a6c:	str	r3, [r0, #8]
   17a70:	cmp	ip, r2
   17a74:	bcc	17a38 <myencoding_detect_utf_16@@Base+0x28>
   17a78:	b	17aa4 <myencoding_detect_utf_16@@Base+0x94>
   17a7c:	add	r3, ip, r1
   17a80:	ldrb	r3, [r3, #-1]
   17a84:	sub	r3, r3, #32
   17a88:	uxtb	r3, r3
   17a8c:	cmp	r3, #94	; 0x5e
   17a90:	bhi	17a2c <myencoding_detect_utf_16@@Base+0x1c>
   17a94:	ldr	r3, [r0, #4]
   17a98:	add	r3, r3, #1
   17a9c:	str	r3, [r0, #4]
   17aa0:	b	17a2c <myencoding_detect_utf_16@@Base+0x1c>
   17aa4:	bx	lr

00017aa8 <myencoding_detect_bom@@Base>:
   17aa8:	cmp	r1, #3
   17aac:	bcc	17adc <myencoding_detect_bom@@Base+0x34>
   17ab0:	ldrb	r1, [r0]
   17ab4:	cmp	r1, #239	; 0xef
   17ab8:	bne	17aec <myencoding_detect_bom@@Base+0x44>
   17abc:	ldrb	r1, [r0, #1]
   17ac0:	cmp	r1, #187	; 0xbb
   17ac4:	bne	17ae8 <myencoding_detect_bom@@Base+0x40>
   17ac8:	ldrb	r1, [r0, #2]
   17acc:	cmp	r1, #191	; 0xbf
   17ad0:	bne	17ae8 <myencoding_detect_bom@@Base+0x40>
   17ad4:	mov	r0, #0
   17ad8:	b	17b24 <myencoding_detect_bom@@Base+0x7c>
   17adc:	mov	r3, #0
   17ae0:	cmp	r1, #2
   17ae4:	bne	17b2c <myencoding_detect_bom@@Base+0x84>
   17ae8:	ldrb	r1, [r0]
   17aec:	mov	r3, #0
   17af0:	cmp	r1, #255	; 0xff
   17af4:	beq	17b14 <myencoding_detect_bom@@Base+0x6c>
   17af8:	cmp	r1, #254	; 0xfe
   17afc:	bne	17b2c <myencoding_detect_bom@@Base+0x84>
   17b00:	ldrb	r0, [r0, #1]
   17b04:	cmp	r0, #255	; 0xff
   17b08:	bne	17b2c <myencoding_detect_bom@@Base+0x84>
   17b0c:	mov	r0, #5
   17b10:	b	17b24 <myencoding_detect_bom@@Base+0x7c>
   17b14:	ldrb	r0, [r0, #1]
   17b18:	cmp	r0, #254	; 0xfe
   17b1c:	bne	17b2c <myencoding_detect_bom@@Base+0x84>
   17b20:	mov	r0, #4
   17b24:	str	r0, [r2]
   17b28:	mov	r3, #1
   17b2c:	mov	r0, r3
   17b30:	bx	lr

00017b34 <myencoding_detect_and_cut_bom@@Base>:
   17b34:	push	{r4, r5, r6, r7, fp, lr}
   17b38:	add	fp, sp, #16
   17b3c:	mov	r5, r3
   17b40:	mov	r7, r2
   17b44:	mov	r4, r1
   17b48:	mov	r6, r0
   17b4c:	bl	11680 <myencoding_detect_bom@plt>
   17b50:	mov	r1, r0
   17b54:	mov	r0, #0
   17b58:	cmp	r1, #0
   17b5c:	beq	17b90 <myencoding_detect_and_cut_bom@@Base+0x5c>
   17b60:	ldr	r0, [fp, #8]
   17b64:	ldr	r1, [r7]
   17b68:	mov	r2, #2
   17b6c:	cmp	r1, #0
   17b70:	movweq	r2, #3
   17b74:	add	r1, r6, r2
   17b78:	str	r1, [r5]
   17b7c:	mvn	r1, #1
   17b80:	mvneq	r1, #2
   17b84:	add	r1, r1, r4
   17b88:	str	r1, [r0]
   17b8c:	mov	r0, #1
   17b90:	pop	{r4, r5, r6, r7, fp, pc}

00017b94 <myencoding_detect_unicode@@Base>:
   17b94:	push	{r4, r5, r6, r7, fp, lr}
   17b98:	add	fp, sp, #16
   17b9c:	sub	sp, sp, #16
   17ba0:	mov	r4, r2
   17ba4:	mov	r5, r1
   17ba8:	mov	r6, r0
   17bac:	mov	r0, #0
   17bb0:	str	r0, [r2]
   17bb4:	add	r0, sp, #4
   17bb8:	mov	r1, r6
   17bbc:	mov	r2, r5
   17bc0:	bl	11368 <myencoding_detect_utf_16@plt>
   17bc4:	ldr	r0, [sp, #12]
   17bc8:	cmp	r0, #0
   17bcc:	beq	17bec <myencoding_detect_unicode@@Base+0x58>
   17bd0:	cmp	r0, #3
   17bd4:	bcc	17bfc <myencoding_detect_unicode@@Base+0x68>
   17bd8:	ldr	r0, [sp, #8]
   17bdc:	cmp	r0, #0
   17be0:	bne	17bfc <myencoding_detect_unicode@@Base+0x68>
   17be4:	mov	r0, #5
   17be8:	b	17c2c <myencoding_detect_unicode@@Base+0x98>
   17bec:	mov	r0, #4
   17bf0:	ldr	r1, [sp, #8]
   17bf4:	cmp	r1, #2
   17bf8:	bhi	17c2c <myencoding_detect_unicode@@Base+0x98>
   17bfc:	add	r7, sp, #4
   17c00:	mov	r0, r7
   17c04:	mov	r1, r6
   17c08:	mov	r2, r5
   17c0c:	bl	123ac <myencoding_detect_utf_8@plt>
   17c10:	mov	r0, r7
   17c14:	mov	r1, #10
   17c18:	bl	11e60 <myencoding_detect_unicode_has_end@plt>
   17c1c:	mov	r1, r0
   17c20:	mov	r0, #0
   17c24:	cmp	r1, #0
   17c28:	beq	17c34 <myencoding_detect_unicode@@Base+0xa0>
   17c2c:	str	r0, [r4]
   17c30:	mov	r0, #1
   17c34:	sub	sp, fp, #16
   17c38:	pop	{r4, r5, r6, r7, fp, pc}

00017c3c <myencoding_detect_russian@@Base>:
   17c3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c40:	add	fp, sp, #28
   17c44:	sub	sp, sp, #20
   17c48:	mov	r4, r2
   17c4c:	mov	r7, r1
   17c50:	mov	r5, r0
   17c54:	mov	r0, #0
   17c58:	str	r0, [r2]
   17c5c:	movw	r9, #34464	; 0x86a0
   17c60:	movt	r9, #1
   17c64:	mov	r0, #1000	; 0x3e8
   17c68:	stm	sp, {r0, r9}
   17c6c:	add	r6, sp, #8
   17c70:	ldr	r3, [pc, #416]	; 17e18 <myencoding_detect_russian@@Base+0x1dc>
   17c74:	add	r3, pc, r3
   17c78:	mov	r0, r6
   17c7c:	mov	r1, r5
   17c80:	mov	r2, r7
   17c84:	bl	11b3c <myencoding_detect_by_trigram@plt>
   17c88:	mov	r0, r6
   17c8c:	mov	r1, #50	; 0x32
   17c90:	mov	r2, r9
   17c94:	bl	1210c <myencoding_detect_russian_has_end@plt>
   17c98:	mov	r8, #1
   17c9c:	mov	r1, #32
   17ca0:	cmp	r0, #0
   17ca4:	bne	17df4 <myencoding_detect_russian@@Base+0x1b8>
   17ca8:	ldr	sl, [sp, #12]
   17cac:	cmp	sl, #0
   17cb0:	movne	r0, #32
   17cb4:	strne	r0, [r4]
   17cb8:	mov	r0, #1000	; 0x3e8
   17cbc:	stm	sp, {r0, r9}
   17cc0:	add	r6, sp, #8
   17cc4:	ldr	r3, [pc, #336]	; 17e1c <myencoding_detect_russian@@Base+0x1e0>
   17cc8:	add	r3, pc, r3
   17ccc:	mov	r0, r6
   17cd0:	mov	r1, r5
   17cd4:	mov	r2, r7
   17cd8:	bl	11b3c <myencoding_detect_by_trigram@plt>
   17cdc:	mov	r0, r6
   17ce0:	mov	r1, #50	; 0x32
   17ce4:	mov	r2, r9
   17ce8:	bl	1210c <myencoding_detect_russian_has_end@plt>
   17cec:	mov	r1, #27
   17cf0:	cmp	r0, #0
   17cf4:	bne	17df4 <myencoding_detect_russian@@Base+0x1b8>
   17cf8:	ldr	r0, [sp, #12]
   17cfc:	cmp	sl, r0
   17d00:	movcc	r1, #27
   17d04:	strcc	r1, [r4]
   17d08:	movcc	sl, r0
   17d0c:	mov	r0, #1000	; 0x3e8
   17d10:	stm	sp, {r0, r9}
   17d14:	add	r6, sp, #8
   17d18:	ldr	r3, [pc, #256]	; 17e20 <myencoding_detect_russian@@Base+0x1e4>
   17d1c:	add	r3, pc, r3
   17d20:	mov	r0, r6
   17d24:	mov	r1, r5
   17d28:	mov	r2, r7
   17d2c:	bl	11b3c <myencoding_detect_by_trigram@plt>
   17d30:	mov	r0, r6
   17d34:	mov	r1, #50	; 0x32
   17d38:	mov	r2, r9
   17d3c:	bl	1210c <myencoding_detect_russian_has_end@plt>
   17d40:	mov	r1, #22
   17d44:	cmp	r0, #0
   17d48:	bne	17df4 <myencoding_detect_russian@@Base+0x1b8>
   17d4c:	ldr	r0, [sp, #12]
   17d50:	cmp	sl, r0
   17d54:	movcc	r1, #22
   17d58:	strcc	r1, [r4]
   17d5c:	movcc	sl, r0
   17d60:	mov	r0, #1000	; 0x3e8
   17d64:	stm	sp, {r0, r9}
   17d68:	add	r6, sp, #8
   17d6c:	ldr	r3, [pc, #176]	; 17e24 <myencoding_detect_russian@@Base+0x1e8>
   17d70:	add	r3, pc, r3
   17d74:	mov	r0, r6
   17d78:	mov	r1, r5
   17d7c:	mov	r2, r7
   17d80:	bl	11b3c <myencoding_detect_by_trigram@plt>
   17d84:	mov	r0, r6
   17d88:	mov	r1, #50	; 0x32
   17d8c:	mov	r2, r9
   17d90:	bl	1210c <myencoding_detect_russian_has_end@plt>
   17d94:	mov	r1, #41	; 0x29
   17d98:	cmp	r0, #0
   17d9c:	bne	17df4 <myencoding_detect_russian@@Base+0x1b8>
   17da0:	ldr	r0, [sp, #12]
   17da4:	cmp	sl, r0
   17da8:	movcc	r1, #41	; 0x29
   17dac:	strcc	r1, [r4]
   17db0:	movcc	sl, r0
   17db4:	mov	r0, #1000	; 0x3e8
   17db8:	stm	sp, {r0, r9}
   17dbc:	add	r6, sp, #8
   17dc0:	ldr	r3, [pc, #96]	; 17e28 <myencoding_detect_russian@@Base+0x1ec>
   17dc4:	add	r3, pc, r3
   17dc8:	mov	r0, r6
   17dcc:	mov	r1, r5
   17dd0:	mov	r2, r7
   17dd4:	bl	11b3c <myencoding_detect_by_trigram@plt>
   17dd8:	mov	r0, r6
   17ddc:	mov	r1, #50	; 0x32
   17de0:	mov	r2, r9
   17de4:	bl	1210c <myencoding_detect_russian_has_end@plt>
   17de8:	mov	r1, #12
   17dec:	cmp	r0, #0
   17df0:	beq	17e04 <myencoding_detect_russian@@Base+0x1c8>
   17df4:	str	r1, [r4]
   17df8:	mov	r0, r8
   17dfc:	sub	sp, fp, #28
   17e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e04:	mov	r8, #0
   17e08:	ldr	r0, [sp, #12]
   17e0c:	cmp	sl, r0
   17e10:	strcc	r1, [r4]
   17e14:	b	17df8 <myencoding_detect_russian@@Base+0x1bc>
   17e18:	andeq	r7, r1, r4, lsl #31
   17e1c:	andeq	r9, r1, r0, lsr #29
   17e20:			; <UNDEFINED> instruction: 0x0001bdbc
   17e24:	ldrdeq	sp, [r1], -r8
   17e28:	strdeq	pc, [r1], -r4

00017e2c <myencoding_detect@@Base>:
   17e2c:	push	{r4, r5, r6, sl, fp, lr}
   17e30:	add	fp, sp, #16
   17e34:	mov	r4, r2
   17e38:	mov	r5, r1
   17e3c:	mov	r6, r0
   17e40:	mov	r0, #0
   17e44:	str	r0, [r2]
   17e48:	mov	r0, r6
   17e4c:	bl	11110 <myencoding_detect_unicode@plt>
   17e50:	cmp	r0, #0
   17e54:	beq	17e60 <myencoding_detect@@Base+0x34>
   17e58:	mov	r0, #1
   17e5c:	pop	{r4, r5, r6, sl, fp, pc}
   17e60:	mov	r0, r6
   17e64:	mov	r1, r5
   17e68:	mov	r2, r4
   17e6c:	pop	{r4, r5, r6, sl, fp, lr}
   17e70:	b	17c3c <myencoding_detect_russian@@Base>

00017e74 <myencoding_name_entry_by_name@@Base>:
   17e74:	push	{r4, r5, r6, r7, fp, lr}
   17e78:	add	fp, sp, #16
   17e7c:	mov	r4, r1
   17e80:	mov	r5, r0
   17e84:	ldrb	r1, [r0], r1
   17e88:	ldrb	r0, [r0, #-1]
   17e8c:	ldr	r2, [pc, #160]	; 17f34 <myencoding_name_entry_by_name@@Base+0xc0>
   17e90:	add	r2, pc, r2
   17e94:	ldrb	r0, [r2, r0]
   17e98:	ldrb	r1, [r2, r1]
   17e9c:	mul	r1, r1, r4
   17ea0:	mul	r0, r1, r0
   17ea4:	movw	r1, #11575	; 0x2d37
   17ea8:	movt	r1, #14546	; 0x38d2
   17eac:	umull	r1, r2, r0, r1
   17eb0:	sub	r1, r0, r2
   17eb4:	add	r1, r2, r1, lsr #1
   17eb8:	lsr	r1, r1, #8
   17ebc:	movw	r2, #419	; 0x1a3
   17ec0:	mls	r0, r1, r2, r0
   17ec4:	add	r1, r0, #1
   17ec8:	rsb	r0, r1, r1, lsl #3
   17ecc:	ldr	r7, [pc, #100]	; 17f38 <myencoding_name_entry_by_name@@Base+0xc4>
   17ed0:	add	r7, pc, r7
   17ed4:	b	17ee4 <myencoding_name_entry_by_name@@Base+0x70>
   17ed8:	bhi	17f28 <myencoding_name_entry_by_name@@Base+0xb4>
   17edc:	ldr	r1, [r6, #20]
   17ee0:	rsb	r0, r1, r1, lsl #3
   17ee4:	add	r0, r7, r0, lsl #2
   17ee8:	ldr	r0, [r0, #8]
   17eec:	cmp	r0, #0
   17ef0:	beq	17f28 <myencoding_name_entry_by_name@@Base+0xb4>
   17ef4:	rsb	r1, r1, r1, lsl #3
   17ef8:	add	r6, r7, r1, lsl #2
   17efc:	ldr	r1, [r6, #12]
   17f00:	cmp	r1, r4
   17f04:	bne	17ed8 <myencoding_name_entry_by_name@@Base+0x64>
   17f08:	mov	r1, r5
   17f0c:	mov	r2, r4
   17f10:	bl	11704 <mycore_strncasecmp@plt>
   17f14:	cmp	r0, #0
   17f18:	beq	17f2c <myencoding_name_entry_by_name@@Base+0xb8>
   17f1c:	ldr	r1, [r6, #20]
   17f20:	cmp	r1, #0
   17f24:	bne	17ee0 <myencoding_name_entry_by_name@@Base+0x6c>
   17f28:	mov	r6, #0
   17f2c:	mov	r0, r6
   17f30:	pop	{r4, r5, r6, r7, fp, pc}
   17f34:	muleq	r2, r8, sl
   17f38:	andeq	r6, pc, ip, lsl #26

00017f3c <myencoding_by_name@@Base>:
   17f3c:	push	{r4, sl, fp, lr}
   17f40:	add	fp, sp, #8
   17f44:	mov	r4, r2
   17f48:	bl	113f8 <myencoding_name_entry_by_name@plt>
   17f4c:	cmp	r0, #0
   17f50:	beq	17f6c <myencoding_by_name@@Base+0x30>
   17f54:	mov	r1, r0
   17f58:	mov	r0, #1
   17f5c:	cmp	r4, #0
   17f60:	ldrne	r1, [r1, #16]
   17f64:	strne	r1, [r4]
   17f68:	pop	{r4, sl, fp, pc}
   17f6c:	mov	r0, #0
   17f70:	pop	{r4, sl, fp, pc}

00017f74 <myencoding_name_by_id@@Base>:
   17f74:	cmp	r0, #42	; 0x2a
   17f78:	bcc	17f90 <myencoding_name_by_id@@Base+0x1c>
   17f7c:	mov	r0, #0
   17f80:	cmp	r1, #0
   17f84:	strne	r0, [r1]
   17f88:	bxne	lr
   17f8c:	bx	lr
   17f90:	cmp	r1, #0
   17f94:	ldr	r2, [pc, #24]	; 17fb4 <myencoding_name_by_id@@Base+0x40>
   17f98:	add	r2, pc, r2
   17f9c:	beq	17fac <myencoding_name_by_id@@Base+0x38>
   17fa0:	add	r3, r2, r0, lsl #3
   17fa4:	ldr	r3, [r3, #4]
   17fa8:	str	r3, [r1]
   17fac:	ldr	r0, [r2, r0, lsl #3]
   17fb0:	bx	lr
   17fb4:	andeq	sl, pc, ip, asr #4

00017fb8 <myencoding_extracting_character_encoding_from_charset@@Base>:
   17fb8:	push	{fp, lr}
   17fbc:	mov	fp, sp
   17fc0:	sub	sp, sp, #8
   17fc4:	mov	r3, #0
   17fc8:	str	r3, [sp]
   17fcc:	mov	r3, #0
   17fd0:	bl	11c50 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17fd4:	mov	sp, fp
   17fd8:	pop	{fp, pc}

00017fdc <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   17fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17fe0:	add	fp, sp, #28
   17fe4:	sub	sp, sp, #12
   17fe8:	mov	r6, r1
   17fec:	mov	r7, r0
   17ff0:	mov	r0, #2
   17ff4:	str	r2, [sp, #8]
   17ff8:	str	r0, [r2]
   17ffc:	ldr	r1, [fp, #8]
   18000:	cmp	r3, #0
   18004:	movne	r0, #0
   18008:	strne	r0, [r3]
   1800c:	str	r3, [sp]
   18010:	cmp	r1, #0
   18014:	movne	r0, #0
   18018:	strne	r0, [r1]
   1801c:	str	r1, [sp, #4]
   18020:	cmp	r6, #8
   18024:	bcc	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18028:	mov	sl, #0
   1802c:	mov	r8, #7
   18030:	ldr	r4, [pc, #576]	; 18278 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x29c>
   18034:	add	r4, pc, r4
   18038:	mov	r9, #1
   1803c:	movw	r5, #27
   18040:	movt	r5, #128	; 0x80
   18044:	b	18058 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x7c>
   18048:	add	r8, sl, #8
   1804c:	add	sl, sl, #1
   18050:	cmp	r8, r6
   18054:	bcs	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18058:	add	r1, r7, sl
   1805c:	mov	r0, r4
   18060:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18064:	cmp	r0, #0
   18068:	beq	18048 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   1806c:	cmp	r8, r6
   18070:	bcs	18094 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   18074:	ldrb	r0, [r7, r8]
   18078:	sub	r0, r0, #9
   1807c:	cmp	r0, #23
   18080:	bhi	18094 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   18084:	tst	r5, r9, lsl r0
   18088:	addne	r8, r8, #1
   1808c:	cmpne	r6, r8
   18090:	bne	18074 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x98>
   18094:	ldrb	r0, [r7, r8]
   18098:	cmp	r0, #61	; 0x3d
   1809c:	beq	180a8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xcc>
   180a0:	mov	sl, r8
   180a4:	b	18048 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x6c>
   180a8:	add	r0, r8, #1
   180ac:	cmp	r0, r6
   180b0:	bcs	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   180b4:	add	r4, r7, r8
   180b8:	sub	r0, r8, r6
   180bc:	add	r1, r0, #1
   180c0:	sub	r0, r6, r8
   180c4:	sub	ip, r0, #2
   180c8:	mov	r2, #0
   180cc:	mov	lr, #1
   180d0:	add	r0, r4, r2
   180d4:	ldrb	r3, [r0, #1]
   180d8:	sub	r3, r3, #9
   180dc:	cmp	r3, #23
   180e0:	bhi	18104 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   180e4:	tst	r5, lr, lsl r3
   180e8:	beq	18104 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x128>
   180ec:	add	r2, r2, #1
   180f0:	adds	r0, r1, r2
   180f4:	bne	180d0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf4>
   180f8:	mov	r0, #0
   180fc:	sub	sp, fp, #28
   18100:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18104:	sub	r3, ip, r2
   18108:	add	lr, r8, r2
   1810c:	mov	ip, r0
   18110:	ldrb	r1, [ip, #1]!
   18114:	cmp	r1, #34	; 0x22
   18118:	beq	18158 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x17c>
   1811c:	cmp	r1, #39	; 0x27
   18120:	bne	1818c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b0>
   18124:	add	r1, lr, #2
   18128:	cmp	r1, r6
   1812c:	bcs	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18130:	mov	r1, #0
   18134:	add	r7, r4, r1
   18138:	add	r7, r7, r2
   1813c:	ldrb	r7, [r7, #2]
   18140:	cmp	r7, #39	; 0x27
   18144:	beq	181cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f0>
   18148:	add	r1, r1, #1
   1814c:	cmp	r3, r1
   18150:	bne	18134 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x158>
   18154:	b	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18158:	add	r1, lr, #2
   1815c:	cmp	r1, r6
   18160:	bcs	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18164:	add	r2, ip, #1
   18168:	mov	r1, #0
   1816c:	ldrb	r7, [r2]
   18170:	cmp	r7, #34	; 0x22
   18174:	beq	181cc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f0>
   18178:	add	r2, r2, #1
   1817c:	subs	r3, r3, #1
   18180:	add	r1, r1, #1
   18184:	bne	1816c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x190>
   18188:	b	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   1818c:	add	r1, lr, #1
   18190:	cmp	r1, r6
   18194:	bcs	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   18198:	rsb	r0, r6, #0
   1819c:	mov	r2, #1
   181a0:	ldrb	r3, [r7, r1]
   181a4:	sub	r3, r3, #9
   181a8:	cmp	r3, #23
   181ac:	bhi	181f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x214>
   181b0:	tst	r5, r2, lsl r3
   181b4:	beq	181f0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x214>
   181b8:	add	r1, r1, #1
   181bc:	adds	r3, r0, r1
   181c0:	add	ip, ip, #1
   181c4:	bne	181a0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c4>
   181c8:	b	180f8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x11c>
   181cc:	ldr	r3, [sp]
   181d0:	cmp	r3, #0
   181d4:	addne	r2, r0, #2
   181d8:	strne	r2, [r3]
   181dc:	ldr	r2, [sp, #4]
   181e0:	cmp	r2, #0
   181e4:	strne	r1, [r2]
   181e8:	add	r0, r0, #2
   181ec:	b	18268 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x28c>
   181f0:	add	r0, r7, r1
   181f4:	cmp	r1, r6
   181f8:	mov	r2, r1
   181fc:	bcs	18224 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   18200:	sub	r3, r1, r6
   18204:	mov	r2, #0
   18208:	ldrb	r7, [ip, -r2]
   1820c:	cmp	r7, #59	; 0x3b
   18210:	beq	18248 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x26c>
   18214:	sub	r2, r2, #1
   18218:	cmp	r3, r2
   1821c:	bne	18208 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x22c>
   18220:	sub	r2, r1, r2
   18224:	ldr	r3, [sp]
   18228:	cmp	r3, #0
   1822c:	strne	r0, [r3]
   18230:	ldr	r7, [sp, #4]
   18234:	cmp	r7, #0
   18238:	subne	r3, r2, r1
   1823c:	strne	r3, [r7]
   18240:	sub	r1, r2, r1
   18244:	b	18268 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x28c>
   18248:	ldr	r1, [sp]
   1824c:	cmp	r1, #0
   18250:	strne	r0, [r1]
   18254:	ldr	r3, [sp, #4]
   18258:	cmp	r3, #0
   1825c:	rsbne	r1, r2, #0
   18260:	strne	r1, [r3]
   18264:	rsb	r1, r2, #0
   18268:	ldr	r2, [sp, #8]
   1826c:	sub	sp, fp, #28
   18270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18274:	b	17f3c <myencoding_by_name@@Base>
   18278:	strdeq	r1, [r2], -r4

0001827c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   1827c:	push	{r4, r5, fp, lr}
   18280:	add	fp, sp, #8
   18284:	mov	ip, r0
   18288:	ldr	r0, [r3]
   1828c:	ldr	lr, [r1]
   18290:	sub	r0, lr, r0
   18294:	str	r0, [r3, #4]
   18298:	mov	r0, #0
   1829c:	cmp	lr, r2
   182a0:	bcs	18374 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xf8>
   182a4:	rsb	r5, r2, #0
   182a8:	rsb	r2, lr, #0
   182ac:	ldrb	r3, [ip, -r2]
   182b0:	sub	r3, r3, #9
   182b4:	cmp	r3, #38	; 0x26
   182b8:	bhi	1837c <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x100>
   182bc:	add	r4, pc, #4
   182c0:	ldr	r3, [r4, r3, lsl #2]
   182c4:	add	pc, r4, r3
   182c8:	muleq	r0, ip, r0
   182cc:	muleq	r0, ip, r0
   182d0:	strheq	r0, [r0], -r4
   182d4:	muleq	r0, ip, r0
   182d8:	muleq	r0, ip, r0
   182dc:	strheq	r0, [r0], -r4
   182e0:	strheq	r0, [r0], -r4
   182e4:	strheq	r0, [r0], -r4
   182e8:	strheq	r0, [r0], -r4
   182ec:	strheq	r0, [r0], -r4
   182f0:	strheq	r0, [r0], -r4
   182f4:	strheq	r0, [r0], -r4
   182f8:	strheq	r0, [r0], -r4
   182fc:	strheq	r0, [r0], -r4
   18300:	strheq	r0, [r0], -r4
   18304:	strheq	r0, [r0], -r4
   18308:	strheq	r0, [r0], -r4
   1830c:	strheq	r0, [r0], -r4
   18310:	strheq	r0, [r0], -r4
   18314:	strheq	r0, [r0], -r4
   18318:	strheq	r0, [r0], -r4
   1831c:	strheq	r0, [r0], -r4
   18320:	strheq	r0, [r0], -r4
   18324:	muleq	r0, ip, r0
   18328:	strheq	r0, [r0], -r4
   1832c:	strheq	r0, [r0], -r4
   18330:	strheq	r0, [r0], -r4
   18334:	strheq	r0, [r0], -r4
   18338:	strheq	r0, [r0], -r4
   1833c:	strheq	r0, [r0], -r4
   18340:	strheq	r0, [r0], -r4
   18344:	strheq	r0, [r0], -r4
   18348:	strheq	r0, [r0], -r4
   1834c:	strheq	r0, [r0], -r4
   18350:	strheq	r0, [r0], -r4
   18354:	strheq	r0, [r0], -r4
   18358:	strheq	r0, [r0], -r4
   1835c:	strheq	r0, [r0], -r4
   18360:	muleq	r0, ip, r0
   18364:	sub	r2, r2, #1
   18368:	cmp	r5, r2
   1836c:	bne	182ac <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x30>
   18370:	rsb	lr, r2, #0
   18374:	str	lr, [r1]
   18378:	pop	{r4, r5, fp, pc}
   1837c:	ldrb	r0, [ip, -r2]
   18380:	sub	r0, r0, #61	; 0x3d
   18384:	clz	r0, r0
   18388:	lsr	r0, r0, #5
   1838c:	sub	lr, r0, r2
   18390:	str	lr, [r1]
   18394:	pop	{r4, r5, fp, pc}

00018398 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   18398:	push	{r4, r5, r6, r7, fp, lr}
   1839c:	add	fp, sp, #16
   183a0:	ldr	lr, [fp, #8]
   183a4:	cmp	r1, r2
   183a8:	bcs	183e8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x50>
   183ac:	add	ip, r0, r1
   183b0:	rsb	r4, r2, #0
   183b4:	mov	r5, #1
   183b8:	movw	r6, #27
   183bc:	movt	r6, #128	; 0x80
   183c0:	ldrb	r7, [r0, r1]
   183c4:	sub	r7, r7, #9
   183c8:	cmp	r7, #23
   183cc:	bhi	183f8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   183d0:	tst	r6, r5, lsl r7
   183d4:	beq	183f8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x60>
   183d8:	add	r1, r1, #1
   183dc:	adds	r7, r4, r1
   183e0:	add	ip, ip, #1
   183e4:	bne	183c0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x28>
   183e8:	mov	r0, #1
   183ec:	strb	r0, [lr]
   183f0:	mov	r0, r1
   183f4:	pop	{r4, r5, r6, r7, fp, pc}
   183f8:	ldrb	r4, [r0, r1]
   183fc:	cmp	r4, #62	; 0x3e
   18400:	beq	18454 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xbc>
   18404:	cmp	r4, #39	; 0x27
   18408:	beq	18468 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xd0>
   1840c:	cmp	r4, #34	; 0x22
   18410:	bne	184b0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x118>
   18414:	add	ip, r1, #1
   18418:	str	ip, [r3, #8]
   1841c:	cmp	ip, r2
   18420:	bcs	18600 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x268>
   18424:	sub	r6, r1, r2
   18428:	mov	r2, #0
   1842c:	add	r7, r0, r2
   18430:	add	r7, r7, r1
   18434:	ldrb	r7, [r7, #1]
   18438:	cmp	r7, #34	; 0x22
   1843c:	beq	185e0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x248>
   18440:	add	r7, r6, r2
   18444:	add	r2, r2, #1
   18448:	cmn	r7, #2
   1844c:	bne	1842c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x94>
   18450:	b	184a4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x10c>
   18454:	mov	r0, #1
   18458:	strb	r0, [lr]
   1845c:	add	ip, r1, #1
   18460:	mov	r0, ip
   18464:	pop	{r4, r5, r6, r7, fp, pc}
   18468:	add	ip, r1, #1
   1846c:	str	ip, [r3, #8]
   18470:	cmp	ip, r2
   18474:	bcs	18600 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x268>
   18478:	sub	r6, r1, r2
   1847c:	mov	r2, #0
   18480:	add	r7, r0, r2
   18484:	add	r7, r7, r1
   18488:	ldrb	r7, [r7, #1]
   1848c:	cmp	r7, #39	; 0x27
   18490:	beq	185e0 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x248>
   18494:	add	r7, r6, r2
   18498:	add	r2, r2, #1
   1849c:	cmn	r7, #2
   184a0:	bne	18480 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   184a4:	add	r0, r1, r2
   184a8:	add	ip, r0, #1
   184ac:	b	18600 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x268>
   184b0:	str	r1, [r3, #8]
   184b4:	cmp	r1, r2
   184b8:	bcs	185f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x25c>
   184bc:	sub	r2, r1, r2
   184c0:	mov	r0, #0
   184c4:	b	184d4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   184c8:	sub	r0, r0, #1
   184cc:	cmp	r2, r0
   184d0:	beq	185fc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x264>
   184d4:	ldrb	r7, [ip, -r0]
   184d8:	sub	r6, r7, #9
   184dc:	cmp	r6, #53	; 0x35
   184e0:	bhi	184c8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x130>
   184e4:	add	r7, pc, #4
   184e8:	ldr	r6, [r7, r6, lsl #2]
   184ec:	add	pc, r7, r6
   184f0:	ldrdeq	r0, [r0], -r8
   184f4:	ldrdeq	r0, [r0], -r8
   184f8:			; <UNDEFINED> instruction: 0xffffffd8
   184fc:	ldrdeq	r0, [r0], -r8
   18500:	ldrdeq	r0, [r0], -r8
   18504:			; <UNDEFINED> instruction: 0xffffffd8
   18508:			; <UNDEFINED> instruction: 0xffffffd8
   1850c:			; <UNDEFINED> instruction: 0xffffffd8
   18510:			; <UNDEFINED> instruction: 0xffffffd8
   18514:			; <UNDEFINED> instruction: 0xffffffd8
   18518:			; <UNDEFINED> instruction: 0xffffffd8
   1851c:			; <UNDEFINED> instruction: 0xffffffd8
   18520:			; <UNDEFINED> instruction: 0xffffffd8
   18524:			; <UNDEFINED> instruction: 0xffffffd8
   18528:			; <UNDEFINED> instruction: 0xffffffd8
   1852c:			; <UNDEFINED> instruction: 0xffffffd8
   18530:			; <UNDEFINED> instruction: 0xffffffd8
   18534:			; <UNDEFINED> instruction: 0xffffffd8
   18538:			; <UNDEFINED> instruction: 0xffffffd8
   1853c:			; <UNDEFINED> instruction: 0xffffffd8
   18540:			; <UNDEFINED> instruction: 0xffffffd8
   18544:			; <UNDEFINED> instruction: 0xffffffd8
   18548:			; <UNDEFINED> instruction: 0xffffffd8
   1854c:	ldrdeq	r0, [r0], -r8
   18550:			; <UNDEFINED> instruction: 0xffffffd8
   18554:			; <UNDEFINED> instruction: 0xffffffd8
   18558:			; <UNDEFINED> instruction: 0xffffffd8
   1855c:			; <UNDEFINED> instruction: 0xffffffd8
   18560:			; <UNDEFINED> instruction: 0xffffffd8
   18564:			; <UNDEFINED> instruction: 0xffffffd8
   18568:			; <UNDEFINED> instruction: 0xffffffd8
   1856c:			; <UNDEFINED> instruction: 0xffffffd8
   18570:			; <UNDEFINED> instruction: 0xffffffd8
   18574:			; <UNDEFINED> instruction: 0xffffffd8
   18578:			; <UNDEFINED> instruction: 0xffffffd8
   1857c:			; <UNDEFINED> instruction: 0xffffffd8
   18580:			; <UNDEFINED> instruction: 0xffffffd8
   18584:			; <UNDEFINED> instruction: 0xffffffd8
   18588:			; <UNDEFINED> instruction: 0xffffffd8
   1858c:			; <UNDEFINED> instruction: 0xffffffd8
   18590:			; <UNDEFINED> instruction: 0xffffffd8
   18594:			; <UNDEFINED> instruction: 0xffffffd8
   18598:			; <UNDEFINED> instruction: 0xffffffd8
   1859c:			; <UNDEFINED> instruction: 0xffffffd8
   185a0:			; <UNDEFINED> instruction: 0xffffffd8
   185a4:			; <UNDEFINED> instruction: 0xffffffd8
   185a8:			; <UNDEFINED> instruction: 0xffffffd8
   185ac:			; <UNDEFINED> instruction: 0xffffffd8
   185b0:			; <UNDEFINED> instruction: 0xffffffd8
   185b4:			; <UNDEFINED> instruction: 0xffffffd8
   185b8:			; <UNDEFINED> instruction: 0xffffffd8
   185bc:			; <UNDEFINED> instruction: 0xffffffd8
   185c0:			; <UNDEFINED> instruction: 0xffffffd8
   185c4:	ldrdeq	r0, [r0], -r8
   185c8:	rsb	r2, r0, #0
   185cc:	str	r2, [r3, #12]
   185d0:	sub	r0, r1, r0
   185d4:	add	ip, r0, #1
   185d8:	mov	r0, ip
   185dc:	pop	{r4, r5, r6, r7, fp, pc}
   185e0:	str	r2, [r3, #12]
   185e4:	add	r0, r1, r2
   185e8:	add	ip, r0, #2
   185ec:	mov	r0, ip
   185f0:	pop	{r4, r5, r6, r7, fp, pc}
   185f4:	mov	ip, r1
   185f8:	b	18600 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x268>
   185fc:	sub	ip, r1, r0
   18600:	ldr	r0, [r3, #8]
   18604:	sub	r0, ip, r0
   18608:	str	r0, [r3, #12]
   1860c:	mov	r0, ip
   18610:	pop	{r4, r5, r6, r7, fp, pc}

00018614 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   18614:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18618:	add	fp, sp, #24
   1861c:	sub	sp, sp, #8
   18620:	mov	r5, r2
   18624:	mov	r6, r0
   18628:	vmov.i32	q8, #0	; 0x00000000
   1862c:	str	r1, [sp, #4]
   18630:	mov	r0, r3
   18634:	vst1.32	{d16-d17}, [r0]!
   18638:	mov	r2, #0
   1863c:	str	r2, [r0]
   18640:	ldr	r8, [fp, #8]
   18644:	cmp	r1, r5
   18648:	bcs	18724 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x110>
   1864c:	mov	r4, r3
   18650:	ldr	r0, [sp, #4]
   18654:	ldrb	r2, [r6, r1]
   18658:	sub	r2, r2, #9
   1865c:	cmp	r2, #38	; 0x26
   18660:	bhi	18738 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x124>
   18664:	add	r3, pc, #4
   18668:	ldr	r2, [r3, r2, lsl #2]
   1866c:	add	pc, r3, r2
   18670:	muleq	r0, ip, r0
   18674:	muleq	r0, ip, r0
   18678:	andeq	r0, r0, r8, asr #1
   1867c:	muleq	r0, ip, r0
   18680:	muleq	r0, ip, r0
   18684:	andeq	r0, r0, r8, asr #1
   18688:	andeq	r0, r0, r8, asr #1
   1868c:	andeq	r0, r0, r8, asr #1
   18690:	andeq	r0, r0, r8, asr #1
   18694:	andeq	r0, r0, r8, asr #1
   18698:	andeq	r0, r0, r8, asr #1
   1869c:	andeq	r0, r0, r8, asr #1
   186a0:	andeq	r0, r0, r8, asr #1
   186a4:	andeq	r0, r0, r8, asr #1
   186a8:	andeq	r0, r0, r8, asr #1
   186ac:	andeq	r0, r0, r8, asr #1
   186b0:	andeq	r0, r0, r8, asr #1
   186b4:	andeq	r0, r0, r8, asr #1
   186b8:	andeq	r0, r0, r8, asr #1
   186bc:	andeq	r0, r0, r8, asr #1
   186c0:	andeq	r0, r0, r8, asr #1
   186c4:	andeq	r0, r0, r8, asr #1
   186c8:	andeq	r0, r0, r8, asr #1
   186cc:	muleq	r0, ip, r0
   186d0:	andeq	r0, r0, r8, asr #1
   186d4:	andeq	r0, r0, r8, asr #1
   186d8:	andeq	r0, r0, r8, asr #1
   186dc:	andeq	r0, r0, r8, asr #1
   186e0:	andeq	r0, r0, r8, asr #1
   186e4:	andeq	r0, r0, r8, asr #1
   186e8:	andeq	r0, r0, r8, asr #1
   186ec:	andeq	r0, r0, r8, asr #1
   186f0:	andeq	r0, r0, r8, asr #1
   186f4:	andeq	r0, r0, r8, asr #1
   186f8:	andeq	r0, r0, r8, asr #1
   186fc:	andeq	r0, r0, r8, asr #1
   18700:	andeq	r0, r0, r8, asr #1
   18704:	andeq	r0, r0, r8, asr #1
   18708:	muleq	r0, ip, r0
   1870c:	add	r0, r1, #1
   18710:	cmp	r5, r0
   18714:	mov	r1, r0
   18718:	bne	18654 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x40>
   1871c:	str	r0, [sp, #4]
   18720:	b	18728 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x114>
   18724:	mov	r0, r1
   18728:	mov	r1, #1
   1872c:	strb	r1, [r8]
   18730:	sub	sp, fp, #24
   18734:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18738:	str	r0, [sp, #4]
   1873c:	ldrb	r0, [r6, r1]
   18740:	cmp	r0, #62	; 0x3e
   18744:	bne	1875c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x148>
   18748:	mov	r0, #1
   1874c:	strb	r0, [r8]
   18750:	add	r0, r1, #1
   18754:	sub	sp, fp, #24
   18758:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1875c:	str	r1, [r4]
   18760:	ldr	r0, [sp, #4]
   18764:	cmp	r0, r5
   18768:	bcs	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x278>
   1876c:	ldr	r2, [sp, #4]
   18770:	b	18784 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x170>
   18774:	add	r2, r0, #1
   18778:	cmp	r5, r2
   1877c:	mov	r0, r2
   18780:	beq	18888 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x274>
   18784:	ldrb	r3, [r6, r0]
   18788:	sub	r3, r3, #9
   1878c:	cmp	r3, #53	; 0x35
   18790:	bhi	18774 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x160>
   18794:	add	r7, pc, #4
   18798:	ldr	r3, [r7, r3, lsl #2]
   1879c:	add	pc, r7, r3
   187a0:	ldrdeq	r0, [r0], -r8
   187a4:	ldrdeq	r0, [r0], -r8
   187a8:			; <UNDEFINED> instruction: 0xffffffd4
   187ac:	ldrdeq	r0, [r0], -r8
   187b0:	ldrdeq	r0, [r0], -r8
   187b4:			; <UNDEFINED> instruction: 0xffffffd4
   187b8:			; <UNDEFINED> instruction: 0xffffffd4
   187bc:			; <UNDEFINED> instruction: 0xffffffd4
   187c0:			; <UNDEFINED> instruction: 0xffffffd4
   187c4:			; <UNDEFINED> instruction: 0xffffffd4
   187c8:			; <UNDEFINED> instruction: 0xffffffd4
   187cc:			; <UNDEFINED> instruction: 0xffffffd4
   187d0:			; <UNDEFINED> instruction: 0xffffffd4
   187d4:			; <UNDEFINED> instruction: 0xffffffd4
   187d8:			; <UNDEFINED> instruction: 0xffffffd4
   187dc:			; <UNDEFINED> instruction: 0xffffffd4
   187e0:			; <UNDEFINED> instruction: 0xffffffd4
   187e4:			; <UNDEFINED> instruction: 0xffffffd4
   187e8:			; <UNDEFINED> instruction: 0xffffffd4
   187ec:			; <UNDEFINED> instruction: 0xffffffd4
   187f0:			; <UNDEFINED> instruction: 0xffffffd4
   187f4:			; <UNDEFINED> instruction: 0xffffffd4
   187f8:			; <UNDEFINED> instruction: 0xffffffd4
   187fc:	ldrdeq	r0, [r0], -r8
   18800:			; <UNDEFINED> instruction: 0xffffffd4
   18804:			; <UNDEFINED> instruction: 0xffffffd4
   18808:			; <UNDEFINED> instruction: 0xffffffd4
   1880c:			; <UNDEFINED> instruction: 0xffffffd4
   18810:			; <UNDEFINED> instruction: 0xffffffd4
   18814:			; <UNDEFINED> instruction: 0xffffffd4
   18818:			; <UNDEFINED> instruction: 0xffffffd4
   1881c:			; <UNDEFINED> instruction: 0xffffffd4
   18820:			; <UNDEFINED> instruction: 0xffffffd4
   18824:			; <UNDEFINED> instruction: 0xffffffd4
   18828:			; <UNDEFINED> instruction: 0xffffffd4
   1882c:			; <UNDEFINED> instruction: 0xffffffd4
   18830:			; <UNDEFINED> instruction: 0xffffffd4
   18834:			; <UNDEFINED> instruction: 0xffffffd4
   18838:	andeq	r0, r0, r8, lsr r1
   1883c:			; <UNDEFINED> instruction: 0xffffffd4
   18840:			; <UNDEFINED> instruction: 0xffffffd4
   18844:			; <UNDEFINED> instruction: 0xffffffd4
   18848:			; <UNDEFINED> instruction: 0xffffffd4
   1884c:			; <UNDEFINED> instruction: 0xffffffd4
   18850:			; <UNDEFINED> instruction: 0xffffffd4
   18854:			; <UNDEFINED> instruction: 0xffffffd4
   18858:			; <UNDEFINED> instruction: 0xffffffd4
   1885c:			; <UNDEFINED> instruction: 0xffffffd4
   18860:			; <UNDEFINED> instruction: 0xffffffd4
   18864:			; <UNDEFINED> instruction: 0xffffffd4
   18868:			; <UNDEFINED> instruction: 0xffffffd4
   1886c:			; <UNDEFINED> instruction: 0xffffffd4
   18870:	andeq	r0, r0, r8, asr r1
   18874:	andeq	r0, r0, r8, lsr r1
   18878:	str	r2, [sp, #4]
   1887c:	add	r0, r0, #1
   18880:	str	r0, [sp, #4]
   18884:	b	1888c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x278>
   18888:	str	r2, [sp, #4]
   1888c:	add	r1, sp, #4
   18890:	mov	r0, r6
   18894:	mov	r2, r5
   18898:	mov	r3, r4
   1889c:	bl	118fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   188a0:	cmp	r0, #0
   188a4:	beq	188c4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2b0>
   188a8:	ldr	r1, [sp, #4]
   188ac:	mov	r0, r6
   188b0:	mov	r2, r5
   188b4:	mov	r3, r4
   188b8:	sub	sp, fp, #24
   188bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   188c0:	b	18398 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>
   188c4:	mov	r0, #1
   188c8:	strb	r0, [r8]
   188cc:	ldr	r0, [sp, #4]
   188d0:	sub	sp, fp, #24
   188d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   188d8:	str	r2, [sp, #4]
   188dc:	mov	r2, #1
   188e0:	strb	r2, [r8]
   188e4:	sub	r1, r0, r1
   188e8:	str	r1, [r4, #4]
   188ec:	add	r0, r0, #1
   188f0:	sub	sp, fp, #24
   188f4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   188f8:	str	r2, [sp, #4]
   188fc:	add	r2, r1, #1
   18900:	cmp	r2, r0
   18904:	beq	1887c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x268>
   18908:	sub	r1, r0, r1
   1890c:	str	r1, [r4, #4]
   18910:	add	r1, r0, #1
   18914:	str	r1, [sp, #4]
   18918:	b	188ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x298>

0001891c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1891c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18920:	add	fp, sp, #28
   18924:	sub	sp, sp, #36	; 0x24
   18928:	str	r3, [sp, #8]
   1892c:	mov	r5, r2
   18930:	mov	r6, r1
   18934:	mov	r7, r0
   18938:	mov	r1, #0
   1893c:	mov	r0, #0
   18940:	str	r0, [sp, #4]
   18944:	strb	r1, [sp, #15]
   18948:	add	r8, sp, #15
   1894c:	add	r4, sp, #16
   18950:	mov	sl, #0
   18954:	mov	r9, #0
   18958:	b	18968 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x4c>
   1895c:	ldrb	r0, [sp, #15]
   18960:	cmp	r0, #0
   18964:	bne	18ab4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x198>
   18968:	ldr	r1, [r6]
   1896c:	cmp	r1, r5
   18970:	bcs	18ab4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x198>
   18974:	str	r8, [sp]
   18978:	mov	r0, r7
   1897c:	mov	r2, r5
   18980:	mov	r3, r4
   18984:	bl	120ac <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18988:	str	r0, [r6]
   1898c:	ldr	r0, [sp, #20]
   18990:	cmp	r0, #7
   18994:	beq	189f8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xdc>
   18998:	cmp	r0, #10
   1899c:	bne	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   189a0:	ldr	r0, [sp, #16]
   189a4:	add	r1, r7, r0
   189a8:	ldr	r0, [pc, #360]	; 18b18 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1fc>
   189ac:	add	r0, pc, r0
   189b0:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   189b4:	tst	r9, #1
   189b8:	bne	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   189bc:	cmp	r0, #0
   189c0:	beq	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   189c4:	orr	r9, r9, #1
   189c8:	ldr	r0, [sp, #28]
   189cc:	cmp	r0, #12
   189d0:	bne	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   189d4:	ldr	r0, [sp, #24]
   189d8:	add	r1, r7, r0
   189dc:	ldr	r0, [pc, #312]	; 18b1c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x200>
   189e0:	add	r0, pc, r0
   189e4:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   189e8:	ldr	r1, [sp, #4]
   189ec:	orr	r1, r1, r0
   189f0:	str	r1, [sp, #4]
   189f4:	b	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   189f8:	ldr	r0, [sp, #16]
   189fc:	add	r1, r7, r0
   18a00:	ldr	r0, [pc, #280]	; 18b20 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x204>
   18a04:	add	r0, pc, r0
   18a08:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18a0c:	cmp	r0, #0
   18a10:	beq	18a4c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x130>
   18a14:	tst	r9, #2
   18a18:	bne	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   18a1c:	ldr	r0, [sp, #24]
   18a20:	ldr	r1, [sp, #28]
   18a24:	ldr	r2, [fp, #12]
   18a28:	str	r2, [sp]
   18a2c:	add	r0, r7, r0
   18a30:	ldr	r2, [sp, #8]
   18a34:	ldr	r3, [fp, #8]
   18a38:	bl	11c50 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   18a3c:	cmp	r0, #0
   18a40:	movwne	sl, #2
   18a44:	orr	r9, r9, #2
   18a48:	b	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   18a4c:	ldr	r0, [sp, #16]
   18a50:	add	r1, r7, r0
   18a54:	ldr	r0, [pc, #200]	; 18b24 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x208>
   18a58:	add	r0, pc, r0
   18a5c:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18a60:	tst	r9, #4
   18a64:	bne	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   18a68:	cmp	r0, #0
   18a6c:	beq	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   18a70:	ldr	r1, [fp, #8]
   18a74:	cmp	r1, #0
   18a78:	ldrne	r0, [sp, #24]
   18a7c:	addne	r0, r7, r0
   18a80:	strne	r0, [r1]
   18a84:	ldr	r1, [fp, #12]
   18a88:	cmp	r1, #0
   18a8c:	ldrne	r0, [sp, #28]
   18a90:	strne	r0, [r1]
   18a94:	orr	r9, r9, #4
   18a98:	ldr	r0, [sp, #24]
   18a9c:	ldr	r1, [sp, #28]
   18aa0:	add	r0, r7, r0
   18aa4:	ldr	r2, [sp, #8]
   18aa8:	bl	12088 <myencoding_by_name@plt>
   18aac:	mov	sl, #1
   18ab0:	b	1895c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x40>
   18ab4:	mov	r0, #0
   18ab8:	mov	r1, #2
   18abc:	cmp	sl, #0
   18ac0:	beq	18b08 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1ec>
   18ac4:	cmp	sl, #2
   18ac8:	bne	18ad8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1bc>
   18acc:	ldr	r2, [sp, #4]
   18ad0:	tst	r2, #1
   18ad4:	beq	18b08 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1ec>
   18ad8:	ldr	r0, [sp, #8]
   18adc:	ldr	r2, [r0]
   18ae0:	bic	r0, r2, #1
   18ae4:	cmp	r0, #4
   18ae8:	bne	18af8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1dc>
   18aec:	mov	r0, #1
   18af0:	mov	r1, #0
   18af4:	b	18b08 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1ec>
   18af8:	mov	r0, #1
   18afc:	mov	r1, #33	; 0x21
   18b00:	cmp	r2, #6
   18b04:	bne	18b10 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1f4>
   18b08:	ldr	r2, [sp, #8]
   18b0c:	str	r1, [r2]
   18b10:	sub	sp, fp, #28
   18b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b18:	andeq	r1, r2, r4, lsl #3
   18b1c:	andeq	r1, r2, fp, asr r1
   18b20:	andeq	r1, r2, r4, asr #2
   18b24:	ldrdeq	r1, [r2], -r0

00018b28 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   18b28:	push	{r4, r5, r6, r7, fp, lr}
   18b2c:	add	fp, sp, #16
   18b30:	sub	sp, sp, #32
   18b34:	cmp	r1, r2
   18b38:	bcs	18bc8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18b3c:	mov	r4, r2
   18b40:	mov	r5, r0
   18b44:	mov	r0, #1
   18b48:	movw	r2, #27
   18b4c:	movt	r2, #128	; 0x80
   18b50:	ldrb	r3, [r5, r1]
   18b54:	sub	r3, r3, #9
   18b58:	cmp	r3, #23
   18b5c:	bhi	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   18b60:	tst	r2, r0, lsl r3
   18b64:	beq	18b78 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x50>
   18b68:	add	r1, r1, #1
   18b6c:	cmp	r4, r1
   18b70:	bne	18b50 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x28>
   18b74:	b	18bc8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18b78:	ldrb	r0, [r5, r1]
   18b7c:	cmp	r0, #62	; 0x3e
   18b80:	bne	18b8c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   18b84:	add	r1, r1, #1
   18b88:	b	18bc8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18b8c:	mov	r0, #0
   18b90:	strb	r0, [sp, #11]
   18b94:	add	r7, sp, #11
   18b98:	add	r6, sp, #12
   18b9c:	cmp	r1, r4
   18ba0:	bcs	18bc8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xa0>
   18ba4:	str	r7, [sp]
   18ba8:	mov	r0, r5
   18bac:	mov	r2, r4
   18bb0:	mov	r3, r6
   18bb4:	bl	120ac <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   18bb8:	mov	r1, r0
   18bbc:	ldrb	r0, [sp, #11]
   18bc0:	cmp	r0, #0
   18bc4:	beq	18b9c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x74>
   18bc8:	mov	r0, r1
   18bcc:	sub	sp, fp, #16
   18bd0:	pop	{r4, r5, r6, r7, fp, pc}

00018bd4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   18bd4:	push	{fp, lr}
   18bd8:	mov	fp, sp
   18bdc:	ldrb	r3, [r0, r1]
   18be0:	cmp	r3, #33	; 0x21
   18be4:	beq	18c44 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x70>
   18be8:	cmp	r3, #63	; 0x3f
   18bec:	beq	18cdc <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   18bf0:	cmp	r3, #47	; 0x2f
   18bf4:	bne	18d00 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x12c>
   18bf8:	add	lr, r1, #1
   18bfc:	cmp	lr, r2
   18c00:	bcs	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18c04:	ldrb	ip, [r0, lr]
   18c08:	ldr	r1, [pc, #260]	; 18d14 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x140>
   18c0c:	add	r1, pc, r1
   18c10:	ldrb	r1, [r1, ip]
   18c14:	cmp	r1, #1
   18c18:	bne	18c28 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18c1c:	mov	r1, lr
   18c20:	pop	{fp, lr}
   18c24:	b	18b28 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>
   18c28:	cmp	lr, r2
   18c2c:	bcs	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18c30:	ldrb	r1, [r0, lr]
   18c34:	add	lr, lr, #1
   18c38:	cmp	r1, #62	; 0x3e
   18c3c:	beq	18c28 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   18c40:	b	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18c44:	add	lr, r1, #1
   18c48:	add	r3, r1, #3
   18c4c:	cmp	r3, r2
   18c50:	bcs	18c84 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb0>
   18c54:	ldrb	r3, [r0, lr]
   18c58:	cmp	r3, #45	; 0x2d
   18c5c:	bne	18c84 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb0>
   18c60:	add	r3, r1, r0
   18c64:	ldrb	r3, [r3, #2]
   18c68:	cmp	r3, #45	; 0x2d
   18c6c:	bne	18c84 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb0>
   18c70:	cmp	lr, r2
   18c74:	bcs	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18c78:	rsb	r2, r2, #0
   18c7c:	add	lr, r1, #2
   18c80:	b	18cb0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xdc>
   18c84:	cmp	lr, r2
   18c88:	bcs	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18c8c:	ldrb	r1, [r0, lr]
   18c90:	add	lr, lr, #1
   18c94:	cmp	r1, #62	; 0x3e
   18c98:	beq	18c84 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb0>
   18c9c:	b	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18ca0:	add	lr, lr, #1
   18ca4:	add	r1, r2, lr
   18ca8:	cmp	r1, #1
   18cac:	beq	18d08 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x134>
   18cb0:	add	r1, r0, lr
   18cb4:	ldrb	r3, [r1, #-1]
   18cb8:	cmp	r3, #62	; 0x3e
   18cbc:	beq	18ca0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xcc>
   18cc0:	ldrb	r3, [r1, #-2]
   18cc4:	cmp	r3, #45	; 0x2d
   18cc8:	bne	18ca0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xcc>
   18ccc:	ldrb	r1, [r1, #-3]
   18cd0:	cmp	r1, #45	; 0x2d
   18cd4:	bne	18ca0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xcc>
   18cd8:	b	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18cdc:	add	lr, r1, #1
   18ce0:	cmp	lr, r2
   18ce4:	bcs	18cf8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   18ce8:	ldrb	r1, [r0, lr]
   18cec:	add	lr, lr, #1
   18cf0:	cmp	r1, #62	; 0x3e
   18cf4:	beq	18ce0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x10c>
   18cf8:	mov	r0, lr
   18cfc:	pop	{fp, pc}
   18d00:	pop	{fp, lr}
   18d04:	b	18b28 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>
   18d08:	sub	lr, lr, #1
   18d0c:	mov	r0, lr
   18d10:	pop	{fp, pc}
   18d14:	andeq	r0, r2, ip, lsl lr

00018d18 <myencoding_prescan_stream_to_determine_encoding@@Base>:
   18d18:	mov	r2, #0
   18d1c:	mov	r3, #0
   18d20:	b	18d24 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>

00018d24 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   18d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d28:	add	fp, sp, #28
   18d2c:	sub	sp, sp, #20
   18d30:	mov	r4, r3
   18d34:	mov	r5, r2
   18d38:	mov	r6, r1
   18d3c:	mov	r7, r0
   18d40:	mov	r0, #2
   18d44:	str	r0, [sp, #16]
   18d48:	cmp	r2, #0
   18d4c:	movne	r0, #0
   18d50:	strne	r0, [r5]
   18d54:	cmp	r4, #0
   18d58:	movne	r0, #0
   18d5c:	strne	r0, [r4]
   18d60:	mov	r9, #0
   18d64:	str	r9, [sp, #12]
   18d68:	cmp	r6, #0
   18d6c:	beq	18ed4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   18d70:	ldr	r8, [pc, #360]	; 18ee0 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1bc>
   18d74:	add	r8, pc, r8
   18d78:	b	18d90 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x6c>
   18d7c:	add	r0, r9, #1
   18d80:	str	r0, [sp, #12]
   18d84:	ldr	r9, [sp, #12]
   18d88:	cmp	r9, r6
   18d8c:	bcs	18ed4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   18d90:	ldrb	r0, [r7, r9]
   18d94:	cmp	r0, #60	; 0x3c
   18d98:	bne	18d7c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x58>
   18d9c:	add	sl, r9, #5
   18da0:	cmp	sl, r6
   18da4:	bcs	18ed4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   18da8:	add	r1, r9, #1
   18dac:	str	r1, [sp, #12]
   18db0:	mov	r2, r7
   18db4:	ldrb	r0, [r2, r1]!
   18db8:	orr	r0, r0, #32
   18dbc:	cmp	r0, #109	; 0x6d
   18dc0:	bne	18ec4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1a0>
   18dc4:	mov	r0, r8
   18dc8:	mov	r1, r2
   18dcc:	bl	111a0 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   18dd0:	cmp	r0, #0
   18dd4:	beq	18d84 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x60>
   18dd8:	str	sl, [sp, #12]
   18ddc:	ldrb	r0, [r7, sl]
   18de0:	sub	r0, r0, #9
   18de4:	cmp	r0, #38	; 0x26
   18de8:	bhi	18d84 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x60>
   18dec:	add	r1, pc, #4
   18df0:	ldr	r0, [r1, r0, lsl #2]
   18df4:	add	pc, r1, r0
   18df8:	muleq	r0, ip, r0
   18dfc:	muleq	r0, ip, r0
   18e00:			; <UNDEFINED> instruction: 0xffffff8c
   18e04:	muleq	r0, ip, r0
   18e08:	muleq	r0, ip, r0
   18e0c:			; <UNDEFINED> instruction: 0xffffff8c
   18e10:			; <UNDEFINED> instruction: 0xffffff8c
   18e14:			; <UNDEFINED> instruction: 0xffffff8c
   18e18:			; <UNDEFINED> instruction: 0xffffff8c
   18e1c:			; <UNDEFINED> instruction: 0xffffff8c
   18e20:			; <UNDEFINED> instruction: 0xffffff8c
   18e24:			; <UNDEFINED> instruction: 0xffffff8c
   18e28:			; <UNDEFINED> instruction: 0xffffff8c
   18e2c:			; <UNDEFINED> instruction: 0xffffff8c
   18e30:			; <UNDEFINED> instruction: 0xffffff8c
   18e34:			; <UNDEFINED> instruction: 0xffffff8c
   18e38:			; <UNDEFINED> instruction: 0xffffff8c
   18e3c:			; <UNDEFINED> instruction: 0xffffff8c
   18e40:			; <UNDEFINED> instruction: 0xffffff8c
   18e44:			; <UNDEFINED> instruction: 0xffffff8c
   18e48:			; <UNDEFINED> instruction: 0xffffff8c
   18e4c:			; <UNDEFINED> instruction: 0xffffff8c
   18e50:			; <UNDEFINED> instruction: 0xffffff8c
   18e54:	muleq	r0, ip, r0
   18e58:			; <UNDEFINED> instruction: 0xffffff8c
   18e5c:			; <UNDEFINED> instruction: 0xffffff8c
   18e60:			; <UNDEFINED> instruction: 0xffffff8c
   18e64:			; <UNDEFINED> instruction: 0xffffff8c
   18e68:			; <UNDEFINED> instruction: 0xffffff8c
   18e6c:			; <UNDEFINED> instruction: 0xffffff8c
   18e70:			; <UNDEFINED> instruction: 0xffffff8c
   18e74:			; <UNDEFINED> instruction: 0xffffff8c
   18e78:			; <UNDEFINED> instruction: 0xffffff8c
   18e7c:			; <UNDEFINED> instruction: 0xffffff8c
   18e80:			; <UNDEFINED> instruction: 0xffffff8c
   18e84:			; <UNDEFINED> instruction: 0xffffff8c
   18e88:			; <UNDEFINED> instruction: 0xffffff8c
   18e8c:			; <UNDEFINED> instruction: 0xffffff8c
   18e90:	muleq	r0, ip, r0
   18e94:	add	r0, r9, #6
   18e98:	str	r0, [sp, #12]
   18e9c:	str	r5, [sp]
   18ea0:	str	r4, [sp, #4]
   18ea4:	mov	r0, r7
   18ea8:	add	r1, sp, #12
   18eac:	mov	r2, r6
   18eb0:	add	r3, sp, #16
   18eb4:	bl	11818 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   18eb8:	cmp	r0, #0
   18ebc:	beq	18d84 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x60>
   18ec0:	b	18ed4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x1b0>
   18ec4:	mov	r0, r7
   18ec8:	mov	r2, r6
   18ecc:	bl	11788 <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   18ed0:	b	18d80 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x5c>
   18ed4:	ldr	r0, [sp, #16]
   18ed8:	sub	sp, fp, #28
   18edc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ee0:	ldrdeq	r0, [r2], -ip

00018ee4 <myencoding_get_function_by_id@@Base>:
   18ee4:	ldr	r1, [pc, #8]	; 18ef4 <myencoding_get_function_by_id@@Base+0x10>
   18ee8:	add	r1, pc, r1
   18eec:	ldr	r0, [r1, r0, lsl #2]
   18ef0:	bx	lr
   18ef4:	andeq	r9, pc, r4, asr r4	; <UNPREDICTABLE>

00018ef8 <myencoding_decode_utf_8@@Base>:
   18ef8:	ldr	r2, [r1, #20]
   18efc:	cmp	r2, #0
   18f00:	beq	18f98 <myencoding_decode_utf_8@@Base+0xa0>
   18f04:	ldr	r3, [r1]
   18f08:	cmp	r3, r0
   18f0c:	bls	18f48 <myencoding_decode_utf_8@@Base+0x50>
   18f10:	ldr	r3, [r1, #4]
   18f14:	cmp	r3, r0
   18f18:	bcs	18f48 <myencoding_decode_utf_8@@Base+0x50>
   18f1c:	mov	r0, #0
   18f20:	str	r0, [r1, #20]
   18f24:	mov	r2, #191	; 0xbf
   18f28:	mov	r3, #128	; 0x80
   18f2c:	str	r3, [r1]
   18f30:	str	r2, [r1, #4]
   18f34:	str	r0, [r1, #8]
   18f38:	str	r0, [r1, #12]
   18f3c:	mov	r2, #5
   18f40:	mov	r0, r2
   18f44:	bx	lr
   18f48:	mov	r3, #191	; 0xbf
   18f4c:	str	r3, [r1, #4]
   18f50:	mov	r3, #128	; 0x80
   18f54:	str	r3, [r1]
   18f58:	ldr	r3, [r1, #8]
   18f5c:	ldr	ip, [r1, #12]
   18f60:	add	r3, r3, #1
   18f64:	str	r3, [r1, #8]
   18f68:	subs	r2, r2, r3
   18f6c:	add	r2, r2, r2, lsl #1
   18f70:	lsl	r2, r2, #1
   18f74:	sub	r0, r0, #128	; 0x80
   18f78:	add	r0, ip, r0, lsl r2
   18f7c:	str	r0, [r1, #12]
   18f80:	mov	r2, #2
   18f84:	moveq	r2, #0
   18f88:	streq	r2, [r1, #8]
   18f8c:	streq	r2, [r1, #20]
   18f90:	mov	r0, r2
   18f94:	bx	lr
   18f98:	sxtb	r2, r0
   18f9c:	cmp	r2, #0
   18fa0:	strpl	r0, [r1, #12]
   18fa4:	movpl	r2, #0
   18fa8:	movpl	r0, r2
   18fac:	bxpl	lr
   18fb0:	add	r2, r0, #62	; 0x3e
   18fb4:	uxtb	r2, r2
   18fb8:	cmp	r2, #30
   18fbc:	bcs	18fcc <myencoding_decode_utf_8@@Base+0xd4>
   18fc0:	mvn	ip, #191	; 0xbf
   18fc4:	mov	r3, #1
   18fc8:	b	1903c <myencoding_decode_utf_8@@Base+0x144>
   18fcc:	and	r2, r0, #240	; 0xf0
   18fd0:	cmp	r2, #224	; 0xe0
   18fd4:	bne	18ff8 <myencoding_decode_utf_8@@Base+0x100>
   18fd8:	mvn	ip, #223	; 0xdf
   18fdc:	mov	r3, #2
   18fe0:	cmp	r0, #237	; 0xed
   18fe4:	beq	1902c <myencoding_decode_utf_8@@Base+0x134>
   18fe8:	cmp	r0, #224	; 0xe0
   18fec:	moveq	r2, #160	; 0xa0
   18ff0:	streq	r2, [r1]
   18ff4:	b	1903c <myencoding_decode_utf_8@@Base+0x144>
   18ff8:	add	r2, r0, #16
   18ffc:	uxtb	r3, r2
   19000:	mov	r2, #1
   19004:	cmp	r3, #4
   19008:	bhi	18f90 <myencoding_decode_utf_8@@Base+0x98>
   1900c:	mvn	ip, #239	; 0xef
   19010:	mov	r3, #2
   19014:	cmp	r0, #244	; 0xf4
   19018:	beq	19034 <myencoding_decode_utf_8@@Base+0x13c>
   1901c:	cmp	r0, #240	; 0xf0
   19020:	moveq	r2, #144	; 0x90
   19024:	streq	r2, [r1]
   19028:	b	1903c <myencoding_decode_utf_8@@Base+0x144>
   1902c:	mov	r2, #159	; 0x9f
   19030:	b	19038 <myencoding_decode_utf_8@@Base+0x140>
   19034:	mov	r2, #143	; 0x8f
   19038:	str	r2, [r1, #4]
   1903c:	str	r3, [r1, #20]
   19040:	add	r0, ip, r0
   19044:	add	r2, r3, r3, lsl #1
   19048:	lsl	r2, r2, #1
   1904c:	lsl	r0, r0, r2
   19050:	str	r0, [r1, #12]
   19054:	mov	r2, #2
   19058:	mov	r0, r2
   1905c:	bx	lr

00019060 <myencoding_decode_ibm866@@Base>:
   19060:	sxtb	r2, r0
   19064:	cmn	r2, #1
   19068:	bgt	1907c <myencoding_decode_ibm866@@Base+0x1c>
   1906c:	ldr	r2, [pc, #20]	; 19088 <myencoding_decode_ibm866@@Base+0x28>
   19070:	add	r2, pc, r2
   19074:	add	r0, r2, r0, lsl #2
   19078:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1907c:	str	r0, [r1, #12]
   19080:	mov	r0, #0
   19084:	bx	lr
   19088:	andeq	r1, r2, ip, lsr #8

0001908c <myencoding_decode_iso_8859_2@@Base>:
   1908c:	sxtb	r2, r0
   19090:	cmn	r2, #1
   19094:	bgt	190a8 <myencoding_decode_iso_8859_2@@Base+0x1c>
   19098:	ldr	r2, [pc, #20]	; 190b4 <myencoding_decode_iso_8859_2@@Base+0x28>
   1909c:	add	r2, pc, r2
   190a0:	add	r0, r2, r0, lsl #2
   190a4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   190a8:	str	r0, [r1, #12]
   190ac:	mov	r0, #0
   190b0:	bx	lr
   190b4:	andeq	r1, r2, r0, lsl #12

000190b8 <myencoding_decode_iso_8859_3@@Base>:
   190b8:	sxtb	r2, r0
   190bc:	cmn	r2, #1
   190c0:	bgt	190d4 <myencoding_decode_iso_8859_3@@Base+0x1c>
   190c4:	ldr	r2, [pc, #20]	; 190e0 <myencoding_decode_iso_8859_3@@Base+0x28>
   190c8:	add	r2, pc, r2
   190cc:	add	r0, r2, r0, lsl #2
   190d0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   190d4:	str	r0, [r1, #12]
   190d8:	mov	r0, #0
   190dc:	bx	lr
   190e0:	ldrdeq	r1, [r2], -r4

000190e4 <myencoding_decode_iso_8859_4@@Base>:
   190e4:	sxtb	r2, r0
   190e8:	cmn	r2, #1
   190ec:	bgt	19100 <myencoding_decode_iso_8859_4@@Base+0x1c>
   190f0:	ldr	r2, [pc, #20]	; 1910c <myencoding_decode_iso_8859_4@@Base+0x28>
   190f4:	add	r2, pc, r2
   190f8:	add	r0, r2, r0, lsl #2
   190fc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19100:	str	r0, [r1, #12]
   19104:	mov	r0, #0
   19108:	bx	lr
   1910c:	andeq	r1, r2, r8, lsr #19

00019110 <myencoding_decode_iso_8859_5@@Base>:
   19110:	sxtb	r2, r0
   19114:	cmn	r2, #1
   19118:	bgt	1912c <myencoding_decode_iso_8859_5@@Base+0x1c>
   1911c:	ldr	r2, [pc, #20]	; 19138 <myencoding_decode_iso_8859_5@@Base+0x28>
   19120:	add	r2, pc, r2
   19124:	add	r0, r2, r0, lsl #2
   19128:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1912c:	str	r0, [r1, #12]
   19130:	mov	r0, #0
   19134:	bx	lr
   19138:	andeq	r1, r2, ip, ror fp

0001913c <myencoding_decode_iso_8859_6@@Base>:
   1913c:	sxtb	r2, r0
   19140:	cmn	r2, #1
   19144:	bgt	19158 <myencoding_decode_iso_8859_6@@Base+0x1c>
   19148:	ldr	r2, [pc, #20]	; 19164 <myencoding_decode_iso_8859_6@@Base+0x28>
   1914c:	add	r2, pc, r2
   19150:	add	r0, r2, r0, lsl #2
   19154:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19158:	str	r0, [r1, #12]
   1915c:	mov	r0, #0
   19160:	bx	lr
   19164:	strdeq	pc, [r4], -r0

00019168 <myencoding_decode_iso_8859_7@@Base>:
   19168:	sxtb	r2, r0
   1916c:	cmn	r2, #1
   19170:	bgt	19184 <myencoding_decode_iso_8859_7@@Base+0x1c>
   19174:	ldr	r2, [pc, #20]	; 19190 <myencoding_decode_iso_8859_7@@Base+0x28>
   19178:	add	r2, pc, r2
   1917c:	add	r0, r2, r0, lsl #2
   19180:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19184:	str	r0, [r1, #12]
   19188:	mov	r0, #0
   1918c:	bx	lr
   19190:	andeq	r1, r2, r4, lsr #26

00019194 <myencoding_decode_iso_8859_8@@Base>:
   19194:	sxtb	r2, r0
   19198:	cmn	r2, #1
   1919c:	bgt	191b0 <myencoding_decode_iso_8859_8@@Base+0x1c>
   191a0:	ldr	r2, [pc, #20]	; 191bc <myencoding_decode_iso_8859_8@@Base+0x28>
   191a4:	add	r2, pc, r2
   191a8:	add	r0, r2, r0, lsl #2
   191ac:	ldr	r0, [r0, #-512]	; 0xfffffe00
   191b0:	str	r0, [r1, #12]
   191b4:	mov	r0, #0
   191b8:	bx	lr
   191bc:	strdeq	r1, [r2], -r8

000191c0 <myencoding_decode_iso_8859_8_i@@Base>:
   191c0:	sxtb	r2, r0
   191c4:	cmn	r2, #1
   191c8:	bgt	191dc <myencoding_decode_iso_8859_8_i@@Base+0x1c>
   191cc:	ldr	r2, [pc, #20]	; 191e8 <myencoding_decode_iso_8859_8_i@@Base+0x28>
   191d0:	add	r2, pc, r2
   191d4:	add	r0, r2, r0, lsl #2
   191d8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   191dc:	str	r0, [r1, #12]
   191e0:	mov	r0, #0
   191e4:	bx	lr
   191e8:	andeq	r1, r2, ip, asr #29

000191ec <myencoding_decode_iso_8859_10@@Base>:
   191ec:	sxtb	r2, r0
   191f0:	cmn	r2, #1
   191f4:	bgt	19208 <myencoding_decode_iso_8859_10@@Base+0x1c>
   191f8:	ldr	r2, [pc, #20]	; 19214 <myencoding_decode_iso_8859_10@@Base+0x28>
   191fc:	add	r2, pc, r2
   19200:	add	r0, r2, r0, lsl #2
   19204:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19208:	str	r0, [r1, #12]
   1920c:	mov	r0, #0
   19210:	bx	lr
   19214:	andeq	r2, r2, r0, lsr #1

00019218 <myencoding_decode_iso_8859_13@@Base>:
   19218:	sxtb	r2, r0
   1921c:	cmn	r2, #1
   19220:	bgt	19234 <myencoding_decode_iso_8859_13@@Base+0x1c>
   19224:	ldr	r2, [pc, #20]	; 19240 <myencoding_decode_iso_8859_13@@Base+0x28>
   19228:	add	r2, pc, r2
   1922c:	add	r0, r2, r0, lsl #2
   19230:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19234:	str	r0, [r1, #12]
   19238:	mov	r0, #0
   1923c:	bx	lr
   19240:	andeq	r2, r2, r4, ror r2

00019244 <myencoding_decode_iso_8859_14@@Base>:
   19244:	sxtb	r2, r0
   19248:	cmn	r2, #1
   1924c:	bgt	19260 <myencoding_decode_iso_8859_14@@Base+0x1c>
   19250:	ldr	r2, [pc, #20]	; 1926c <myencoding_decode_iso_8859_14@@Base+0x28>
   19254:	add	r2, pc, r2
   19258:	add	r0, r2, r0, lsl #2
   1925c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19260:	str	r0, [r1, #12]
   19264:	mov	r0, #0
   19268:	bx	lr
   1926c:	andeq	r2, r2, r8, asr #8

00019270 <myencoding_decode_iso_8859_15@@Base>:
   19270:	sxtb	r2, r0
   19274:	cmn	r2, #1
   19278:	bgt	1928c <myencoding_decode_iso_8859_15@@Base+0x1c>
   1927c:	ldr	r2, [pc, #20]	; 19298 <myencoding_decode_iso_8859_15@@Base+0x28>
   19280:	add	r2, pc, r2
   19284:	add	r0, r2, r0, lsl #2
   19288:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1928c:	str	r0, [r1, #12]
   19290:	mov	r0, #0
   19294:	bx	lr
   19298:	andeq	r2, r2, ip, lsl r6

0001929c <myencoding_decode_iso_8859_16@@Base>:
   1929c:	sxtb	r2, r0
   192a0:	cmn	r2, #1
   192a4:	bgt	192b8 <myencoding_decode_iso_8859_16@@Base+0x1c>
   192a8:	ldr	r2, [pc, #20]	; 192c4 <myencoding_decode_iso_8859_16@@Base+0x28>
   192ac:	add	r2, pc, r2
   192b0:	add	r0, r2, r0, lsl #2
   192b4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   192b8:	str	r0, [r1, #12]
   192bc:	mov	r0, #0
   192c0:	bx	lr
   192c4:	strdeq	r2, [r2], -r0

000192c8 <myencoding_decode_koi8_r@@Base>:
   192c8:	sxtb	r2, r0
   192cc:	cmn	r2, #1
   192d0:	bgt	192e4 <myencoding_decode_koi8_r@@Base+0x1c>
   192d4:	ldr	r2, [pc, #20]	; 192f0 <myencoding_decode_koi8_r@@Base+0x28>
   192d8:	add	r2, pc, r2
   192dc:	add	r0, r2, r0, lsl #2
   192e0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   192e4:	str	r0, [r1, #12]
   192e8:	mov	r0, #0
   192ec:	bx	lr
   192f0:	andeq	r2, r2, r4, asr #19

000192f4 <myencoding_decode_koi8_u@@Base>:
   192f4:	sxtb	r2, r0
   192f8:	cmn	r2, #1
   192fc:	bgt	19310 <myencoding_decode_koi8_u@@Base+0x1c>
   19300:	ldr	r2, [pc, #20]	; 1931c <myencoding_decode_koi8_u@@Base+0x28>
   19304:	add	r2, pc, r2
   19308:	add	r0, r2, r0, lsl #2
   1930c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19310:	str	r0, [r1, #12]
   19314:	mov	r0, #0
   19318:	bx	lr
   1931c:	muleq	r2, r8, fp

00019320 <myencoding_decode_macintosh@@Base>:
   19320:	sxtb	r2, r0
   19324:	cmn	r2, #1
   19328:	bgt	1933c <myencoding_decode_macintosh@@Base+0x1c>
   1932c:	ldr	r2, [pc, #20]	; 19348 <myencoding_decode_macintosh@@Base+0x28>
   19330:	add	r2, pc, r2
   19334:	add	r0, r2, r0, lsl #2
   19338:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1933c:	str	r0, [r1, #12]
   19340:	mov	r0, #0
   19344:	bx	lr
   19348:	andeq	r2, r2, ip, ror #26

0001934c <myencoding_decode_windows_874@@Base>:
   1934c:	sxtb	r2, r0
   19350:	cmn	r2, #1
   19354:	bgt	19368 <myencoding_decode_windows_874@@Base+0x1c>
   19358:	ldr	r2, [pc, #20]	; 19374 <myencoding_decode_windows_874@@Base+0x28>
   1935c:	add	r2, pc, r2
   19360:	add	r0, r2, r0, lsl #2
   19364:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19368:	str	r0, [r1, #12]
   1936c:	mov	r0, #0
   19370:	bx	lr
   19374:	andeq	r2, r2, r0, asr #30

00019378 <myencoding_decode_windows_1250@@Base>:
   19378:	sxtb	r2, r0
   1937c:	cmn	r2, #1
   19380:	bgt	19394 <myencoding_decode_windows_1250@@Base+0x1c>
   19384:	ldr	r2, [pc, #20]	; 193a0 <myencoding_decode_windows_1250@@Base+0x28>
   19388:	add	r2, pc, r2
   1938c:	add	r0, r2, r0, lsl #2
   19390:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19394:	str	r0, [r1, #12]
   19398:	mov	r0, #0
   1939c:	bx	lr
   193a0:	andeq	r3, r2, r4, lsl r1

000193a4 <myencoding_decode_windows_1251@@Base>:
   193a4:	sxtb	r2, r0
   193a8:	cmn	r2, #1
   193ac:	bgt	193c0 <myencoding_decode_windows_1251@@Base+0x1c>
   193b0:	ldr	r2, [pc, #20]	; 193cc <myencoding_decode_windows_1251@@Base+0x28>
   193b4:	add	r2, pc, r2
   193b8:	add	r0, r2, r0, lsl #2
   193bc:	ldr	r0, [r0, #-512]	; 0xfffffe00
   193c0:	str	r0, [r1, #12]
   193c4:	mov	r0, #0
   193c8:	bx	lr
   193cc:	andeq	r3, r2, r8, ror #5

000193d0 <myencoding_decode_windows_1252@@Base>:
   193d0:	sxtb	r2, r0
   193d4:	cmn	r2, #1
   193d8:	bgt	193ec <myencoding_decode_windows_1252@@Base+0x1c>
   193dc:	ldr	r2, [pc, #20]	; 193f8 <myencoding_decode_windows_1252@@Base+0x28>
   193e0:	add	r2, pc, r2
   193e4:	add	r0, r2, r0, lsl #2
   193e8:	ldr	r0, [r0, #-512]	; 0xfffffe00
   193ec:	str	r0, [r1, #12]
   193f0:	mov	r0, #0
   193f4:	bx	lr
   193f8:			; <UNDEFINED> instruction: 0x000234bc

000193fc <myencoding_decode_windows_1253@@Base>:
   193fc:	sxtb	r2, r0
   19400:	cmn	r2, #1
   19404:	bgt	19418 <myencoding_decode_windows_1253@@Base+0x1c>
   19408:	ldr	r2, [pc, #20]	; 19424 <myencoding_decode_windows_1253@@Base+0x28>
   1940c:	add	r2, pc, r2
   19410:	add	r0, r2, r0, lsl #2
   19414:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19418:	str	r0, [r1, #12]
   1941c:	mov	r0, #0
   19420:	bx	lr
   19424:	muleq	r2, r0, r6

00019428 <myencoding_decode_windows_1254@@Base>:
   19428:	sxtb	r2, r0
   1942c:	cmn	r2, #1
   19430:	bgt	19444 <myencoding_decode_windows_1254@@Base+0x1c>
   19434:	ldr	r2, [pc, #20]	; 19450 <myencoding_decode_windows_1254@@Base+0x28>
   19438:	add	r2, pc, r2
   1943c:	add	r0, r2, r0, lsl #2
   19440:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19444:	str	r0, [r1, #12]
   19448:	mov	r0, #0
   1944c:	bx	lr
   19450:	andeq	r3, r2, r4, ror #16

00019454 <myencoding_decode_windows_1255@@Base>:
   19454:	sxtb	r2, r0
   19458:	cmn	r2, #1
   1945c:	bgt	19470 <myencoding_decode_windows_1255@@Base+0x1c>
   19460:	ldr	r2, [pc, #20]	; 1947c <myencoding_decode_windows_1255@@Base+0x28>
   19464:	add	r2, pc, r2
   19468:	add	r0, r2, r0, lsl #2
   1946c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19470:	str	r0, [r1, #12]
   19474:	mov	r0, #0
   19478:	bx	lr
   1947c:	andeq	r3, r2, r8, lsr sl

00019480 <myencoding_decode_windows_1256@@Base>:
   19480:	sxtb	r2, r0
   19484:	cmn	r2, #1
   19488:	bgt	1949c <myencoding_decode_windows_1256@@Base+0x1c>
   1948c:	ldr	r2, [pc, #20]	; 194a8 <myencoding_decode_windows_1256@@Base+0x28>
   19490:	add	r2, pc, r2
   19494:	add	r0, r2, r0, lsl #2
   19498:	ldr	r0, [r0, #-512]	; 0xfffffe00
   1949c:	str	r0, [r1, #12]
   194a0:	mov	r0, #0
   194a4:	bx	lr
   194a8:	andeq	r3, r2, ip, lsl #24

000194ac <myencoding_decode_windows_1257@@Base>:
   194ac:	sxtb	r2, r0
   194b0:	cmn	r2, #1
   194b4:	bgt	194c8 <myencoding_decode_windows_1257@@Base+0x1c>
   194b8:	ldr	r2, [pc, #20]	; 194d4 <myencoding_decode_windows_1257@@Base+0x28>
   194bc:	add	r2, pc, r2
   194c0:	add	r0, r2, r0, lsl #2
   194c4:	ldr	r0, [r0, #-512]	; 0xfffffe00
   194c8:	str	r0, [r1, #12]
   194cc:	mov	r0, #0
   194d0:	bx	lr
   194d4:	andeq	r3, r2, r0, ror #27

000194d8 <myencoding_decode_windows_1258@@Base>:
   194d8:	sxtb	r2, r0
   194dc:	cmn	r2, #1
   194e0:	bgt	194f4 <myencoding_decode_windows_1258@@Base+0x1c>
   194e4:	ldr	r2, [pc, #20]	; 19500 <myencoding_decode_windows_1258@@Base+0x28>
   194e8:	add	r2, pc, r2
   194ec:	add	r0, r2, r0, lsl #2
   194f0:	ldr	r0, [r0, #-512]	; 0xfffffe00
   194f4:	str	r0, [r1, #12]
   194f8:	mov	r0, #0
   194fc:	bx	lr
   19500:			; <UNDEFINED> instruction: 0x00023fb4

00019504 <myencoding_decode_x_mac_cyrillic@@Base>:
   19504:	sxtb	r2, r0
   19508:	cmn	r2, #1
   1950c:	bgt	19520 <myencoding_decode_x_mac_cyrillic@@Base+0x1c>
   19510:	ldr	r2, [pc, #20]	; 1952c <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   19514:	add	r2, pc, r2
   19518:	add	r0, r2, r0, lsl #2
   1951c:	ldr	r0, [r0, #-512]	; 0xfffffe00
   19520:	str	r0, [r1, #12]
   19524:	mov	r0, #0
   19528:	bx	lr
   1952c:	andeq	r4, r2, r8, lsl #3

00019530 <myencoding_decode_gbk@@Base>:
   19530:	b	19534 <myencoding_decode_gb18030@@Base>

00019534 <myencoding_decode_gb18030@@Base>:
   19534:	push	{r4, sl, fp, lr}
   19538:	add	fp, sp, #8
   1953c:	mov	r4, r1
   19540:	ldr	r1, [r1, #8]
   19544:	cmp	r1, #0
   19548:	beq	195b0 <myencoding_decode_gb18030@@Base+0x7c>
   1954c:	sub	r2, r0, #48	; 0x30
   19550:	uxtb	r2, r2
   19554:	cmp	r2, #9
   19558:	bhi	1958c <myencoding_decode_gb18030@@Base+0x58>
   1955c:	ldm	r4, {r2, r3}
   19560:	add	r2, r2, r2, lsl #2
   19564:	add	r2, r3, r2, lsl #1
   19568:	rsb	r2, r2, r2, lsl #6
   1956c:	add	r1, r1, r2, lsl #1
   19570:	add	r1, r1, r1, lsl #2
   19574:	add	r0, r0, r1, lsl #1
   19578:	movw	r1, #16718	; 0x414e
   1957c:	movt	r1, #65510	; 0xffe6
   19580:	add	r0, r0, r1
   19584:	bl	122bc <myencoding_index_gb18030_ranges_code_point@plt>
   19588:	str	r0, [r4, #12]
   1958c:	mov	r0, #0
   19590:	str	r0, [r4]
   19594:	str	r0, [r4, #4]
   19598:	str	r0, [r4, #8]
   1959c:	ldr	r0, [r4, #12]
   195a0:	clz	r0, r0
   195a4:	lsr	r1, r0, #5
   195a8:	mov	r0, r1
   195ac:	pop	{r4, sl, fp, pc}
   195b0:	ldr	r1, [r4, #4]
   195b4:	cmp	r1, #0
   195b8:	beq	195d4 <myencoding_decode_gb18030@@Base+0xa0>
   195bc:	cmp	r0, #129	; 0x81
   195c0:	bcc	19600 <myencoding_decode_gb18030@@Base+0xcc>
   195c4:	cmp	r0, #255	; 0xff
   195c8:	beq	19600 <myencoding_decode_gb18030@@Base+0xcc>
   195cc:	str	r0, [r4, #8]
   195d0:	b	195f4 <myencoding_decode_gb18030@@Base+0xc0>
   195d4:	ldr	r2, [r4]
   195d8:	cmp	r2, #0
   195dc:	beq	19618 <myencoding_decode_gb18030@@Base+0xe4>
   195e0:	sub	r1, r0, #48	; 0x30
   195e4:	uxtb	r1, r1
   195e8:	cmp	r1, #9
   195ec:	bhi	1963c <myencoding_decode_gb18030@@Base+0x108>
   195f0:	str	r0, [r4, #4]
   195f4:	mov	r1, #2
   195f8:	mov	r0, r1
   195fc:	pop	{r4, sl, fp, pc}
   19600:	mov	r0, #0
   19604:	str	r0, [r4]
   19608:	str	r0, [r4, #4]
   1960c:	mov	r1, #1
   19610:	mov	r0, r1
   19614:	pop	{r4, sl, fp, pc}
   19618:	sxtb	r1, r0
   1961c:	cmp	r1, #0
   19620:	bpl	19694 <myencoding_decode_gb18030@@Base+0x160>
   19624:	cmp	r0, #255	; 0xff
   19628:	beq	1960c <myencoding_decode_gb18030@@Base+0xd8>
   1962c:	cmp	r0, #128	; 0x80
   19630:	bne	196a4 <myencoding_decode_gb18030@@Base+0x170>
   19634:	movw	r0, #8364	; 0x20ac
   19638:	b	19694 <myencoding_decode_gb18030@@Base+0x160>
   1963c:	mov	r1, #0
   19640:	str	r1, [r4]
   19644:	sxtb	r1, r0
   19648:	cmn	r1, #1
   1964c:	blt	19664 <myencoding_decode_gb18030@@Base+0x130>
   19650:	sub	r3, r0, #64	; 0x40
   19654:	mov	r1, #1
   19658:	uxtb	r3, r3
   1965c:	cmp	r3, #62	; 0x3e
   19660:	bhi	195f8 <myencoding_decode_gb18030@@Base+0xc4>
   19664:	mvn	r1, #64	; 0x40
   19668:	cmp	r0, #127	; 0x7f
   1966c:	mvncc	r1, #63	; 0x3f
   19670:	add	r0, r0, r1
   19674:	mov	r1, #190	; 0xbe
   19678:	mla	r0, r2, r1, r0
   1967c:	ldr	r1, [pc, #40]	; 196ac <myencoding_decode_gb18030@@Base+0x178>
   19680:	add	r1, pc, r1
   19684:	add	r0, r1, r0, lsl #2
   19688:	movw	r1, #33032	; 0x8108
   1968c:	movt	r1, #65534	; 0xfffe
   19690:	ldr	r0, [r0, r1]
   19694:	str	r0, [r4, #12]
   19698:	mov	r1, #0
   1969c:	mov	r0, r1
   196a0:	pop	{r4, sl, fp, pc}
   196a4:	str	r0, [r4]
   196a8:	b	195f4 <myencoding_decode_gb18030@@Base+0xc0>
   196ac:	muleq	r2, r4, r8

000196b0 <myencoding_index_gb18030_ranges_code_point@@Base>:
   196b0:	mov	r1, #0
   196b4:	movw	r2, #57927	; 0xe247
   196b8:	movt	r2, #18
   196bc:	cmp	r0, r2
   196c0:	bhi	1972c <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   196c4:	movw	r2, #39420	; 0x99fc
   196c8:	sub	r2, r0, r2
   196cc:	movw	r3, #18508	; 0x484c
   196d0:	movt	r3, #2
   196d4:	cmp	r2, r3
   196d8:	bcc	1972c <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   196dc:	movw	r1, #59335	; 0xe7c7
   196e0:	movw	r2, #7457	; 0x1d21
   196e4:	cmp	r0, r2
   196e8:	beq	1972c <myencoding_index_gb18030_ranges_code_point@@Base+0x7c>
   196ec:	ldr	r1, [pc, #64]	; 19734 <myencoding_index_gb18030_ranges_code_point@@Base+0x84>
   196f0:	add	r1, pc, r1
   196f4:	add	r2, r1, #1648	; 0x670
   196f8:	mvn	r1, #206	; 0xce
   196fc:	cmp	r1, #0
   19700:	beq	1971c <myencoding_index_gb18030_ranges_code_point@@Base+0x6c>
   19704:	add	r1, r1, #1
   19708:	ldr	r3, [r2], #-8
   1970c:	cmp	r3, r0
   19710:	bhi	196fc <myencoding_index_gb18030_ranges_code_point@@Base+0x4c>
   19714:	ldr	r2, [r2, #12]
   19718:	b	19724 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   1971c:	mov	r1, #0
   19720:	mov	r2, #0
   19724:	add	r0, r1, r0
   19728:	add	r1, r0, r2
   1972c:	mov	r0, r1
   19730:	bx	lr
   19734:	andeq	r4, r2, ip, lsr #3

00019738 <myencoding_decode_big5@@Base>:
   19738:	mov	r2, r0
   1973c:	ldr	ip, [r1]
   19740:	cmp	ip, #0
   19744:	beq	19840 <myencoding_decode_big5@@Base+0x108>
   19748:	mov	r0, #0
   1974c:	str	r0, [r1]
   19750:	mov	r3, #98	; 0x62
   19754:	cmp	r2, #127	; 0x7f
   19758:	movwcc	r3, #64	; 0x40
   1975c:	sub	r0, r2, #64	; 0x40
   19760:	uxtb	r0, r0
   19764:	cmp	r0, #63	; 0x3f
   19768:	bcc	19780 <myencoding_decode_big5@@Base+0x48>
   1976c:	mov	r0, #1
   19770:	cmp	r2, #161	; 0xa1
   19774:	bcc	19868 <myencoding_decode_big5@@Base+0x130>
   19778:	cmp	r2, #255	; 0xff
   1977c:	beq	19868 <myencoding_decode_big5@@Base+0x130>
   19780:	sub	r0, r2, r3
   19784:	mov	r2, #157	; 0x9d
   19788:	mla	r0, ip, r2, r0
   1978c:	movw	r2, #20253	; 0x4f1d
   19790:	sub	r2, r0, r2
   19794:	movw	r3, #21386	; 0x538a
   19798:	sub	r0, r0, r3
   1979c:	cmp	r0, #33	; 0x21
   197a0:	bhi	1986c <myencoding_decode_big5@@Base+0x134>
   197a4:	add	r3, pc, #4
   197a8:	ldr	r0, [r3, r0, lsl #2]
   197ac:	add	pc, r3, r0
   197b0:	andeq	r0, r0, r8, lsl #1
   197b4:	andeq	r0, r0, r8, asr #1
   197b8:	andeq	r0, r0, r4, ror #1
   197bc:	andeq	r0, r0, r8, asr #1
   197c0:	andeq	r0, r0, r8, asr #1
   197c4:	andeq	r0, r0, r8, asr #1
   197c8:	andeq	r0, r0, r8, asr #1
   197cc:	andeq	r0, r0, r8, asr #1
   197d0:	andeq	r0, r0, r8, asr #1
   197d4:	andeq	r0, r0, r8, asr #1
   197d8:	andeq	r0, r0, r8, asr #1
   197dc:	andeq	r0, r0, r8, asr #1
   197e0:	andeq	r0, r0, r8, asr #1
   197e4:	andeq	r0, r0, r8, asr #1
   197e8:	andeq	r0, r0, r8, asr #1
   197ec:	andeq	r0, r0, r8, asr #1
   197f0:	andeq	r0, r0, r8, asr #1
   197f4:	andeq	r0, r0, r8, asr #1
   197f8:	andeq	r0, r0, r8, asr #1
   197fc:	andeq	r0, r0, r8, asr #1
   19800:	andeq	r0, r0, r8, asr #1
   19804:	andeq	r0, r0, r8, asr #1
   19808:	andeq	r0, r0, r8, asr #1
   1980c:	andeq	r0, r0, r8, asr #1
   19810:	andeq	r0, r0, r8, asr #1
   19814:	andeq	r0, r0, r8, asr #1
   19818:	andeq	r0, r0, r8, asr #1
   1981c:	andeq	r0, r0, r8, asr #1
   19820:	andeq	r0, r0, r8, asr #1
   19824:	andeq	r0, r0, r8, asr #1
   19828:	andeq	r0, r0, r8, asr #1
   1982c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   19830:	andeq	r0, r0, r8, asr #1
   19834:	strdeq	r0, [r0], -r8
   19838:	mov	r0, #772	; 0x304
   1983c:	b	19898 <myencoding_decode_big5@@Base+0x160>
   19840:	sxtb	r0, r2
   19844:	cmp	r0, #0
   19848:	strpl	r2, [r1, #12]
   1984c:	movpl	r0, #0
   19850:	bxpl	lr
   19854:	mov	r0, #1
   19858:	cmp	r2, #128	; 0x80
   1985c:	cmpne	r2, #255	; 0xff
   19860:	strne	r2, [r1]
   19864:	movne	r0, #2
   19868:	bx	lr
   1986c:	mov	r0, #1
   19870:	cmp	r2, #0
   19874:	bxeq	lr
   19878:	mov	r0, #0
   1987c:	str	r0, [r1, #16]
   19880:	ldr	r3, [pc, #56]	; 198c0 <myencoding_decode_big5@@Base+0x188>
   19884:	add	r3, pc, r3
   19888:	ldr	r2, [r3, r2, lsl #2]
   1988c:	str	r2, [r1, #12]
   19890:	bx	lr
   19894:	mov	r0, #780	; 0x30c
   19898:	mov	r2, #202	; 0xca
   1989c:	b	198b0 <myencoding_decode_big5@@Base+0x178>
   198a0:	mov	r0, #772	; 0x304
   198a4:	b	198ac <myencoding_decode_big5@@Base+0x174>
   198a8:	mov	r0, #780	; 0x30c
   198ac:	mov	r2, #234	; 0xea
   198b0:	str	r2, [r1, #12]
   198b4:	str	r0, [r1, #16]
   198b8:	mov	r0, #0
   198bc:	bx	lr
   198c0:	andeq	fp, r3, r0, lsr #25

000198c4 <myencoding_decode_euc_jp@@Base>:
   198c4:	ldr	r2, [r1]
   198c8:	cmp	r2, #0
   198cc:	beq	199ac <myencoding_decode_euc_jp@@Base+0xe8>
   198d0:	cmp	r2, #143	; 0x8f
   198d4:	beq	1990c <myencoding_decode_euc_jp@@Base+0x48>
   198d8:	cmp	r2, #142	; 0x8e
   198dc:	bne	1992c <myencoding_decode_euc_jp@@Base+0x68>
   198e0:	add	r2, r0, #95	; 0x5f
   198e4:	uxtb	r2, r2
   198e8:	cmp	r2, #62	; 0x3e
   198ec:	bhi	199a4 <myencoding_decode_euc_jp@@Base+0xe0>
   198f0:	mov	r2, #0
   198f4:	str	r2, [r1]
   198f8:	movw	r3, #65216	; 0xfec0
   198fc:	add	r0, r0, r3
   19900:	str	r0, [r1, #12]
   19904:	mov	r0, r2
   19908:	bx	lr
   1990c:	cmp	r0, #161	; 0xa1
   19910:	bcc	199a4 <myencoding_decode_euc_jp@@Base+0xe0>
   19914:	cmp	r0, #255	; 0xff
   19918:	beq	199a4 <myencoding_decode_euc_jp@@Base+0xe0>
   1991c:	str	r0, [r1]
   19920:	mov	r0, #1
   19924:	str	r0, [r1, #20]
   19928:	b	199e8 <myencoding_decode_euc_jp@@Base+0x124>
   1992c:	mov	r3, #0
   19930:	str	r3, [r1]
   19934:	sub	r3, r2, #161	; 0xa1
   19938:	cmp	r3, #93	; 0x5d
   1993c:	bhi	199ac <myencoding_decode_euc_jp@@Base+0xe8>
   19940:	cmp	r0, #161	; 0xa1
   19944:	bcc	199ac <myencoding_decode_euc_jp@@Base+0xe8>
   19948:	cmp	r0, #255	; 0xff
   1994c:	beq	199ac <myencoding_decode_euc_jp@@Base+0xe8>
   19950:	ldr	ip, [r1, #20]
   19954:	mov	r3, #0
   19958:	str	r3, [r1, #20]
   1995c:	mov	r3, #94	; 0x5e
   19960:	mla	r0, r2, r3, r0
   19964:	movw	r2, #4356	; 0x1104
   19968:	movt	r2, #65535	; 0xffff
   1996c:	add	r0, r2, r0, lsl #2
   19970:	ldr	r2, [pc, #124]	; 199f4 <myencoding_decode_euc_jp@@Base+0x130>
   19974:	add	r2, pc, r2
   19978:	ldr	r3, [pc, #120]	; 199f8 <myencoding_decode_euc_jp@@Base+0x134>
   1997c:	add	r3, pc, r3
   19980:	add	r3, r3, r0
   19984:	cmp	ip, #0
   19988:	addeq	r3, r2, r0
   1998c:	ldr	r0, [r3]
   19990:	str	r0, [r1, #12]
   19994:	clz	r0, r0
   19998:	lsr	r2, r0, #5
   1999c:	mov	r0, r2
   199a0:	bx	lr
   199a4:	mov	r2, #0
   199a8:	str	r2, [r1]
   199ac:	sxtb	r2, r0
   199b0:	cmp	r2, #0
   199b4:	strpl	r0, [r1, #12]
   199b8:	movpl	r2, #0
   199bc:	movpl	r0, r2
   199c0:	bxpl	lr
   199c4:	and	r2, r0, #254	; 0xfe
   199c8:	cmp	r2, #142	; 0x8e
   199cc:	beq	199e4 <myencoding_decode_euc_jp@@Base+0x120>
   199d0:	mov	r2, #1
   199d4:	cmp	r0, #161	; 0xa1
   199d8:	bcc	199ec <myencoding_decode_euc_jp@@Base+0x128>
   199dc:	cmp	r0, #255	; 0xff
   199e0:	beq	199ec <myencoding_decode_euc_jp@@Base+0x128>
   199e4:	str	r0, [r1]
   199e8:	mov	r2, #2
   199ec:	mov	r0, r2
   199f0:	bx	lr
   199f4:	ldrdeq	r7, [r5], -r8
   199f8:	andeq	pc, r4, r0, asr #7

000199fc <myencoding_decode_iso_2022_jp@@Base>:
   199fc:	ldr	r3, [r1, #4]
   19a00:	mov	ip, #0
   19a04:	cmp	r3, #7
   19a08:	bhi	19c48 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   19a0c:	add	r2, pc, #4
   19a10:	ldr	r3, [r2, r3, lsl #2]
   19a14:	add	pc, r2, r3
   19a18:	andeq	r0, r0, r0, lsr #32
   19a1c:	andeq	r0, r0, r4, asr r0
   19a20:	andeq	r0, r0, r0, lsr r2
   19a24:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   19a28:	andeq	r0, r0, ip, ror #1
   19a2c:	andeq	r0, r0, r0, lsl #2
   19a30:	andeq	r0, r0, ip, ror #2
   19a34:	andeq	r0, r0, r0, lsl #3
   19a38:	cmp	r0, #27
   19a3c:	beq	19b0c <myencoding_decode_iso_2022_jp@@Base+0x110>
   19a40:	sxtb	r2, r0
   19a44:	cmp	r2, #0
   19a48:	bmi	19abc <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19a4c:	cmp	r0, #27
   19a50:	bhi	19c80 <myencoding_decode_iso_2022_jp@@Base+0x284>
   19a54:	mov	r2, #1
   19a58:	movw	r3, #49152	; 0xc000
   19a5c:	movt	r3, #2048	; 0x800
   19a60:	tst	r3, r2, lsl r0
   19a64:	bne	19abc <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19a68:	b	19c80 <myencoding_decode_iso_2022_jp@@Base+0x284>
   19a6c:	cmp	r0, #126	; 0x7e
   19a70:	beq	19c74 <myencoding_decode_iso_2022_jp@@Base+0x278>
   19a74:	cmp	r0, #92	; 0x5c
   19a78:	beq	19c7c <myencoding_decode_iso_2022_jp@@Base+0x280>
   19a7c:	cmp	r0, #27
   19a80:	beq	19b0c <myencoding_decode_iso_2022_jp@@Base+0x110>
   19a84:	sxtb	r2, r0
   19a88:	cmp	r2, #0
   19a8c:	bmi	19abc <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19a90:	cmp	r0, #27
   19a94:	bhi	19aac <myencoding_decode_iso_2022_jp@@Base+0xb0>
   19a98:	mov	r2, #1
   19a9c:	movw	r3, #49152	; 0xc000
   19aa0:	movt	r3, #2048	; 0x800
   19aa4:	tst	r3, r2, lsl r0
   19aa8:	bne	19abc <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19aac:	cmp	r0, #92	; 0x5c
   19ab0:	beq	19abc <myencoding_decode_iso_2022_jp@@Base+0xc0>
   19ab4:	cmp	r0, #126	; 0x7e
   19ab8:	bne	19c80 <myencoding_decode_iso_2022_jp@@Base+0x284>
   19abc:	mov	r0, #0
   19ac0:	str	r0, [r1, #20]
   19ac4:	b	19c68 <myencoding_decode_iso_2022_jp@@Base+0x26c>
   19ac8:	cmp	r0, #27
   19acc:	beq	19b0c <myencoding_decode_iso_2022_jp@@Base+0x110>
   19ad0:	mov	r2, #0
   19ad4:	str	r2, [r1, #20]
   19ad8:	sub	r2, r0, #33	; 0x21
   19adc:	uxtb	r2, r2
   19ae0:	mov	ip, #1
   19ae4:	cmp	r2, #62	; 0x3e
   19ae8:	bhi	19c48 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   19aec:	movw	r2, #65344	; 0xff40
   19af0:	add	r0, r0, r2
   19af4:	str	r0, [r1, #12]
   19af8:	mov	ip, #0
   19afc:	mov	r0, ip
   19b00:	bx	lr
   19b04:	cmp	r0, #27
   19b08:	bne	19c1c <myencoding_decode_iso_2022_jp@@Base+0x220>
   19b0c:	mov	r0, #6
   19b10:	str	r0, [r1, #4]
   19b14:	b	19c44 <myencoding_decode_iso_2022_jp@@Base+0x248>
   19b18:	cmp	r0, #27
   19b1c:	moveq	r0, #6
   19b20:	streq	r0, [r1, #4]
   19b24:	moveq	ip, #3
   19b28:	moveq	r0, ip
   19b2c:	bxeq	lr
   19b30:	mov	r2, #4
   19b34:	str	r2, [r1, #4]
   19b38:	sub	r2, r0, #33	; 0x21
   19b3c:	uxtb	r2, r2
   19b40:	mov	ip, #1
   19b44:	cmp	r2, #93	; 0x5d
   19b48:	bhi	19c48 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   19b4c:	ldr	r2, [r1]
   19b50:	mov	r3, #94	; 0x5e
   19b54:	mla	r0, r2, r3, r0
   19b58:	ldr	r2, [pc, #308]	; 19c94 <myencoding_decode_iso_2022_jp@@Base+0x298>
   19b5c:	add	r2, pc, r2
   19b60:	add	r0, r2, r0, lsl #2
   19b64:	movw	r2, #52996	; 0xcf04
   19b68:	movt	r2, #65535	; 0xffff
   19b6c:	ldr	r0, [r0, r2]
   19b70:	str	r0, [r1, #12]
   19b74:	clz	r0, r0
   19b78:	lsr	ip, r0, #5
   19b7c:	mov	r0, ip
   19b80:	bx	lr
   19b84:	cmp	r0, #40	; 0x28
   19b88:	cmpne	r0, #36	; 0x24
   19b8c:	bne	19c58 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   19b90:	mov	r2, #7
   19b94:	b	19c3c <myencoding_decode_iso_2022_jp@@Base+0x240>
   19b98:	mov	r3, #0
   19b9c:	str	r3, [r1, #4]
   19ba0:	ldr	r2, [r1]
   19ba4:	str	r3, [r1]
   19ba8:	cmp	r0, #66	; 0x42
   19bac:	cmpeq	r2, #40	; 0x28
   19bb0:	beq	19c50 <myencoding_decode_iso_2022_jp@@Base+0x254>
   19bb4:	cmp	r0, #74	; 0x4a
   19bb8:	moveq	r3, #1
   19bbc:	cmpeq	r2, #40	; 0x28
   19bc0:	beq	19bf8 <myencoding_decode_iso_2022_jp@@Base+0x1fc>
   19bc4:	cmp	r0, #73	; 0x49
   19bc8:	moveq	r3, #2
   19bcc:	cmpeq	r2, #40	; 0x28
   19bd0:	beq	19bf8 <myencoding_decode_iso_2022_jp@@Base+0x1fc>
   19bd4:	cmp	r2, #36	; 0x24
   19bd8:	orreq	r0, r0, #2
   19bdc:	moveq	r3, #4
   19be0:	cmpeq	r0, #66	; 0x42
   19be4:	beq	19bf8 <myencoding_decode_iso_2022_jp@@Base+0x1fc>
   19be8:	ldr	r3, [r1, #4]
   19bec:	cmp	r3, #0
   19bf0:	bne	19bfc <myencoding_decode_iso_2022_jp@@Base+0x200>
   19bf4:	b	19c58 <myencoding_decode_iso_2022_jp@@Base+0x25c>
   19bf8:	str	r3, [r1, #4]
   19bfc:	str	r3, [r1, #8]
   19c00:	ldr	r0, [r1, #20]
   19c04:	mov	ip, #1
   19c08:	str	ip, [r1, #20]
   19c0c:	cmp	r0, #0
   19c10:	movweq	ip, #2
   19c14:	mov	r0, ip
   19c18:	bx	lr
   19c1c:	mov	r2, #0
   19c20:	str	r2, [r1, #20]
   19c24:	sub	r2, r0, #33	; 0x21
   19c28:	uxtb	r2, r2
   19c2c:	mov	ip, #1
   19c30:	cmp	r2, #93	; 0x5d
   19c34:	bhi	19c48 <myencoding_decode_iso_2022_jp@@Base+0x24c>
   19c38:	mov	r2, #5
   19c3c:	str	r0, [r1]
   19c40:	str	r2, [r1, #4]
   19c44:	mov	ip, #2
   19c48:	mov	r0, ip
   19c4c:	bx	lr
   19c50:	mov	r0, #0
   19c54:	str	r0, [r1, #4]
   19c58:	mov	r0, #0
   19c5c:	str	r0, [r1, #20]
   19c60:	ldr	r0, [r1, #8]
   19c64:	str	r0, [r1, #4]
   19c68:	mov	ip, #1
   19c6c:	mov	r0, ip
   19c70:	bx	lr
   19c74:	movw	r0, #8254	; 0x203e
   19c78:	b	19c80 <myencoding_decode_iso_2022_jp@@Base+0x284>
   19c7c:	mov	r0, #165	; 0xa5
   19c80:	str	r0, [r1, #12]
   19c84:	mov	ip, #0
   19c88:	str	ip, [r1, #20]
   19c8c:	mov	r0, ip
   19c90:	bx	lr
   19c94:	strdeq	r7, [r5], -r0

00019c98 <myencoding_decode_shift_jis@@Base>:
   19c98:	ldr	r2, [r1]
   19c9c:	cmp	r2, #0
   19ca0:	beq	19d2c <myencoding_decode_shift_jis@@Base+0x94>
   19ca4:	mov	ip, #193	; 0xc1
   19ca8:	cmp	r2, #160	; 0xa0
   19cac:	movwcc	ip, #129	; 0x81
   19cb0:	sub	r3, r0, #64	; 0x40
   19cb4:	uxtb	r3, r3
   19cb8:	cmp	r3, #63	; 0x3f
   19cbc:	bcc	19cd4 <myencoding_decode_shift_jis@@Base+0x3c>
   19cc0:	sxtb	r3, r0
   19cc4:	cmn	r3, #1
   19cc8:	bgt	19d68 <myencoding_decode_shift_jis@@Base+0xd0>
   19ccc:	cmp	r0, #252	; 0xfc
   19cd0:	bhi	19d68 <myencoding_decode_shift_jis@@Base+0xd0>
   19cd4:	sub	r2, r2, ip
   19cd8:	mvn	r3, #64	; 0x40
   19cdc:	cmp	r0, #127	; 0x7f
   19ce0:	mvncc	r3, #63	; 0x3f
   19ce4:	add	r0, r3, r0
   19ce8:	mov	r3, #188	; 0xbc
   19cec:	mla	r0, r2, r3, r0
   19cf0:	cmp	r0, #0
   19cf4:	beq	19d68 <myencoding_decode_shift_jis@@Base+0xd0>
   19cf8:	ldr	r2, [pc, #172]	; 19dac <myencoding_decode_shift_jis@@Base+0x114>
   19cfc:	add	r2, pc, r2
   19d00:	ldr	r2, [r2, r0, lsl #2]
   19d04:	str	r2, [r1, #12]!
   19d08:	movw	r3, #8836	; 0x2284
   19d0c:	sub	ip, r0, r3
   19d10:	movw	r3, #1692	; 0x69c
   19d14:	cmp	ip, r3
   19d18:	cmpls	r2, #0
   19d1c:	movweq	r2, #48508	; 0xbd7c
   19d20:	addeq	r0, r0, r2
   19d24:	streq	r0, [r1]
   19d28:	b	19d70 <myencoding_decode_shift_jis@@Base+0xd8>
   19d2c:	sxtb	r2, r0
   19d30:	cmn	r2, #1
   19d34:	bgt	19d58 <myencoding_decode_shift_jis@@Base+0xc0>
   19d38:	cmp	r0, #128	; 0x80
   19d3c:	beq	19d58 <myencoding_decode_shift_jis@@Base+0xc0>
   19d40:	add	r2, r0, #95	; 0x5f
   19d44:	uxtb	r2, r2
   19d48:	cmp	r2, #62	; 0x3e
   19d4c:	bhi	19d84 <myencoding_decode_shift_jis@@Base+0xec>
   19d50:	movw	r2, #65216	; 0xfec0
   19d54:	add	r0, r0, r2
   19d58:	str	r0, [r1, #12]
   19d5c:	mov	r2, #0
   19d60:	mov	r0, r2
   19d64:	bx	lr
   19d68:	mov	r0, #0
   19d6c:	str	r0, [r1, #12]!
   19d70:	ldr	r0, [r1]
   19d74:	clz	r0, r0
   19d78:	lsr	r2, r0, #5
   19d7c:	mov	r0, r2
   19d80:	bx	lr
   19d84:	cmp	r0, #160	; 0xa0
   19d88:	addcs	r3, r0, #32
   19d8c:	movcs	r2, #1
   19d90:	uxtbcs	r3, r3
   19d94:	cmpcs	r3, #28
   19d98:	bhi	19da4 <myencoding_decode_shift_jis@@Base+0x10c>
   19d9c:	str	r0, [r1]
   19da0:	mov	r2, #2
   19da4:	mov	r0, r2
   19da8:	bx	lr
   19dac:	andeq	r7, r5, r0, asr sl

00019db0 <myencoding_decode_euc_kr@@Base>:
   19db0:	ldr	r2, [r1]
   19db4:	cmp	r2, #0
   19db8:	beq	19e08 <myencoding_decode_euc_kr@@Base+0x58>
   19dbc:	mov	r3, #0
   19dc0:	str	r3, [r1]
   19dc4:	cmp	r0, #65	; 0x41
   19dc8:	bcc	19df4 <myencoding_decode_euc_kr@@Base+0x44>
   19dcc:	cmp	r0, #255	; 0xff
   19dd0:	movne	r3, #190	; 0xbe
   19dd4:	mlane	r0, r2, r3, r0
   19dd8:	movwne	r2, #24575	; 0x5fff
   19ddc:	subsne	r0, r0, r2
   19de0:	beq	19df4 <myencoding_decode_euc_kr@@Base+0x44>
   19de4:	ldr	r2, [pc, #80]	; 19e3c <myencoding_decode_euc_kr@@Base+0x8c>
   19de8:	add	r2, pc, r2
   19dec:	ldr	r0, [r2, r0, lsl #2]
   19df0:	str	r0, [r1, #12]
   19df4:	ldr	r0, [r1, #12]
   19df8:	clz	r0, r0
   19dfc:	lsr	r2, r0, #5
   19e00:	mov	r0, r2
   19e04:	bx	lr
   19e08:	sxtb	r2, r0
   19e0c:	cmp	r2, #0
   19e10:	strpl	r0, [r1, #12]
   19e14:	movpl	r2, #0
   19e18:	movpl	r0, r2
   19e1c:	bxpl	lr
   19e20:	mov	r2, #1
   19e24:	cmp	r0, #128	; 0x80
   19e28:	cmpne	r0, #255	; 0xff
   19e2c:	strne	r0, [r1]
   19e30:	movne	r2, #2
   19e34:	mov	r0, r2
   19e38:	bx	lr
   19e3c:	andeq	r2, r6, r4, lsr #19

00019e40 <myencoding_decode_shared_utf_16@@Base>:
   19e40:	push	{fp, lr}
   19e44:	mov	fp, sp
   19e48:	ldr	r3, [r1]
   19e4c:	cmp	r3, #0
   19e50:	beq	19ea4 <myencoding_decode_shared_utf_16@@Base+0x64>
   19e54:	ldr	r2, [r1, #20]
   19e58:	cmp	r2, #0
   19e5c:	addeq	lr, r3, r0, lsl #8
   19e60:	orrne	lr, r0, r3, lsl #8
   19e64:	mov	ip, #0
   19e68:	str	ip, [r1]
   19e6c:	ldr	r3, [r1, #4]
   19e70:	cmp	r3, #0
   19e74:	beq	19eb0 <myencoding_decode_shared_utf_16@@Base+0x70>
   19e78:	str	ip, [r1, #4]
   19e7c:	mov	r0, lr
   19e80:	bfc	r0, #0, #10
   19e84:	cmp	r0, #56320	; 0xdc00
   19e88:	bne	19ed8 <myencoding_decode_shared_utf_16@@Base+0x98>
   19e8c:	add	r0, lr, r3, lsl #10
   19e90:	sub	r0, r0, #252928	; 0x3dc00
   19e94:	sub	r0, r0, #56360960	; 0x35c0000
   19e98:	str	r0, [r1, #12]
   19e9c:	mov	r0, #0
   19ea0:	pop	{fp, pc}
   19ea4:	str	r0, [r1]
   19ea8:	mov	r0, #2
   19eac:	pop	{fp, pc}
   19eb0:	mov	r2, lr
   19eb4:	bfc	r2, #0, #10
   19eb8:	cmp	r2, #56320	; 0xdc00
   19ebc:	beq	19ef0 <myencoding_decode_shared_utf_16@@Base+0xb0>
   19ec0:	cmp	r2, #55296	; 0xd800
   19ec4:	streq	lr, [r1, #4]
   19ec8:	moveq	r0, #2
   19ecc:	strne	lr, [r1, #12]
   19ed0:	movne	r0, #0
   19ed4:	pop	{fp, pc}
   19ed8:	lsr	r3, lr, #8
   19edc:	cmp	r2, #0
   19ee0:	beq	19ef8 <myencoding_decode_shared_utf_16@@Base+0xb8>
   19ee4:	uxtb	r0, lr
   19ee8:	uxtb	r2, r3
   19eec:	b	19f00 <myencoding_decode_shared_utf_16@@Base+0xc0>
   19ef0:	mov	r0, #1
   19ef4:	pop	{fp, pc}
   19ef8:	uxtb	r0, r3
   19efc:	uxtb	r2, lr
   19f00:	str	r2, [r1, #12]
   19f04:	str	r0, [r1, #16]
   19f08:	mov	r0, #5
   19f0c:	pop	{fp, pc}

00019f10 <myencoding_decode_utf_16be@@Base>:
   19f10:	ldr	r2, [r1, #20]
   19f14:	cmp	r2, #0
   19f18:	moveq	r2, #1
   19f1c:	streq	r2, [r1, #20]
   19f20:	b	19e40 <myencoding_decode_shared_utf_16@@Base>

00019f24 <myencoding_decode_utf_16le@@Base>:
   19f24:	ldr	r2, [r1, #20]
   19f28:	cmp	r2, #0
   19f2c:	movne	r2, #0
   19f30:	strne	r2, [r1, #20]
   19f34:	b	19e40 <myencoding_decode_shared_utf_16@@Base>

00019f38 <myencoding_decode_x_user_defined@@Base>:
   19f38:	sxtb	r2, r0
   19f3c:	cmn	r2, #1
   19f40:	orrle	r0, r0, #63232	; 0xf700
   19f44:	str	r0, [r1, #12]
   19f48:	mov	r0, #0
   19f4c:	bx	lr

00019f50 <myencoding_result_clean@@Base>:
   19f50:	mov	r1, #0
   19f54:	vmov.i32	q8, #0	; 0x00000000
   19f58:	str	r1, [r0, #16]
   19f5c:	mov	r2, #20
   19f60:	vst1.32	{d16-d17}, [r0], r2
   19f64:	str	r1, [r0]
   19f68:	bx	lr

00019f6c <myencoding_codepoint_ascii_length@@Base>:
   19f6c:	mov	r1, #1
   19f70:	cmp	r0, #128	; 0x80
   19f74:	bcc	19f8c <myencoding_codepoint_ascii_length@@Base+0x20>
   19f78:	mov	r1, #2
   19f7c:	cmp	r0, #2048	; 0x800
   19f80:	movcs	r1, #3
   19f84:	cmpcs	r0, #65536	; 0x10000
   19f88:	bcs	19f94 <myencoding_codepoint_ascii_length@@Base+0x28>
   19f8c:	mov	r0, r1
   19f90:	bx	lr
   19f94:	mov	r1, #4
   19f98:	cmp	r0, #2097152	; 0x200000
   19f9c:	movcs	r1, #5
   19fa0:	cmpcs	r0, #67108864	; 0x4000000
   19fa4:	bcc	19f8c <myencoding_codepoint_ascii_length@@Base+0x20>
   19fa8:	mov	r1, #0
   19fac:	cmn	r0, #1
   19fb0:	movwgt	r1, #6
   19fb4:	mov	r0, r1
   19fb8:	bx	lr

00019fbc <myencoding_ascii_utf_8_length@@Base>:
   19fbc:	sxtb	r2, r0
   19fc0:	mov	r1, #1
   19fc4:	cmn	r2, #1
   19fc8:	bgt	19fe8 <myencoding_ascii_utf_8_length@@Base+0x2c>
   19fcc:	and	r2, r0, #224	; 0xe0
   19fd0:	mov	r1, #2
   19fd4:	cmp	r2, #192	; 0xc0
   19fd8:	andne	r2, r0, #240	; 0xf0
   19fdc:	movne	r1, #3
   19fe0:	cmpne	r2, #224	; 0xe0
   19fe4:	bne	19ff0 <myencoding_ascii_utf_8_length@@Base+0x34>
   19fe8:	mov	r0, r1
   19fec:	bx	lr
   19ff0:	and	r2, r0, #248	; 0xf8
   19ff4:	mov	r1, #4
   19ff8:	cmp	r2, #240	; 0xf0
   19ffc:	andne	r2, r0, #252	; 0xfc
   1a000:	movne	r1, #5
   1a004:	cmpne	r2, #248	; 0xf8
   1a008:	beq	19fe8 <myencoding_ascii_utf_8_length@@Base+0x2c>
   1a00c:	mov	r1, #0
   1a010:	cmp	r0, #252	; 0xfc
   1a014:	movweq	r1, #6
   1a018:	mov	r0, r1
   1a01c:	bx	lr

0001a020 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   1a020:	cmp	r0, #127	; 0x7f
   1a024:	strbls	r0, [r1]
   1a028:	movls	r2, #1
   1a02c:	movls	r0, r2
   1a030:	bxls	lr
   1a034:	mov	r2, #0
   1a038:	cmp	r2, r0, lsr #11
   1a03c:	bne	1a064 <myencoding_codepoint_to_ascii_utf_8@@Base+0x44>
   1a040:	mov	r2, #2
   1a044:	mov	r3, r0
   1a048:	bfi	r3, r2, #6, #26
   1a04c:	strb	r3, [r1, #1]
   1a050:	mov	r3, #192	; 0xc0
   1a054:	orr	r0, r3, r0, lsr #6
   1a058:	strb	r0, [r1]
   1a05c:	mov	r0, r2
   1a060:	bx	lr
   1a064:	cmp	r2, r0, lsr #16
   1a068:	bne	1a0a0 <myencoding_codepoint_to_ascii_utf_8@@Base+0x80>
   1a06c:	mov	r2, #2
   1a070:	mov	r3, r0
   1a074:	bfi	r3, r2, #6, #26
   1a078:	strb	r3, [r1, #2]
   1a07c:	mov	r3, #224	; 0xe0
   1a080:	orr	r3, r3, r0, lsr #12
   1a084:	strb	r3, [r1]
   1a088:	lsr	r0, r0, #6
   1a08c:	bfi	r0, r2, #6, #26
   1a090:	strb	r0, [r1, #1]
   1a094:	mov	r2, #3
   1a098:	mov	r0, r2
   1a09c:	bx	lr
   1a0a0:	mov	r2, #0
   1a0a4:	cmp	r2, r0, lsr #21
   1a0a8:	bne	1a0e4 <myencoding_codepoint_to_ascii_utf_8@@Base+0xc4>
   1a0ac:	mov	r2, #2
   1a0b0:	mov	r3, r0
   1a0b4:	bfi	r3, r2, #6, #26
   1a0b8:	strb	r3, [r1, #3]
   1a0bc:	mov	r3, #240	; 0xf0
   1a0c0:	orr	r3, r3, r0, lsr #18
   1a0c4:	strb	r3, [r1]
   1a0c8:	lsr	r3, r0, #6
   1a0cc:	bfi	r3, r2, #6, #26
   1a0d0:	strb	r3, [r1, #2]
   1a0d4:	lsr	r0, r0, #12
   1a0d8:	bfi	r0, r2, #6, #26
   1a0dc:	strb	r0, [r1, #1]
   1a0e0:	mov	r2, #4
   1a0e4:	mov	r0, r2
   1a0e8:	bx	lr

0001a0ec <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   1a0ec:	cmp	r0, #127	; 0x7f
   1a0f0:	bhi	1a110 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x24>
   1a0f4:	ldr	r2, [pc, #204]	; 1a1c8 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xdc>
   1a0f8:	add	r2, pc, r2
   1a0fc:	ldrb	r0, [r2, r0]
   1a100:	strb	r0, [r1]
   1a104:	mov	r2, #1
   1a108:	mov	r0, r2
   1a10c:	bx	lr
   1a110:	mov	r2, #0
   1a114:	cmp	r2, r0, lsr #11
   1a118:	bne	1a140 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x54>
   1a11c:	mov	r2, #2
   1a120:	mov	r3, r0
   1a124:	bfi	r3, r2, #6, #26
   1a128:	strb	r3, [r1, #1]
   1a12c:	mov	r3, #192	; 0xc0
   1a130:	orr	r0, r3, r0, lsr #6
   1a134:	strb	r0, [r1]
   1a138:	mov	r0, r2
   1a13c:	bx	lr
   1a140:	cmp	r2, r0, lsr #16
   1a144:	bne	1a17c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x90>
   1a148:	mov	r2, #2
   1a14c:	mov	r3, r0
   1a150:	bfi	r3, r2, #6, #26
   1a154:	strb	r3, [r1, #2]
   1a158:	mov	r3, #224	; 0xe0
   1a15c:	orr	r3, r3, r0, lsr #12
   1a160:	strb	r3, [r1]
   1a164:	lsr	r0, r0, #6
   1a168:	bfi	r0, r2, #6, #26
   1a16c:	strb	r0, [r1, #1]
   1a170:	mov	r2, #3
   1a174:	mov	r0, r2
   1a178:	bx	lr
   1a17c:	mov	r2, #0
   1a180:	cmp	r2, r0, lsr #21
   1a184:	bne	1a1c0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   1a188:	mov	r2, #2
   1a18c:	mov	r3, r0
   1a190:	bfi	r3, r2, #6, #26
   1a194:	strb	r3, [r1, #3]
   1a198:	mov	r3, #240	; 0xf0
   1a19c:	orr	r3, r3, r0, lsr #18
   1a1a0:	strb	r3, [r1]
   1a1a4:	lsr	r3, r0, #6
   1a1a8:	bfi	r3, r2, #6, #26
   1a1ac:	strb	r3, [r1, #2]
   1a1b0:	lsr	r0, r0, #12
   1a1b4:	bfi	r0, r2, #6, #26
   1a1b8:	strb	r0, [r1, #1]
   1a1bc:	mov	r2, #4
   1a1c0:	mov	r0, r2
   1a1c4:	bx	lr
   1a1c8:	andeq	lr, r4, r4, asr #18

0001a1cc <myencoding_ascii_utf_8_to_codepoint@@Base>:
   1a1cc:	ldrsb	r2, [r0]
   1a1d0:	uxtb	r3, r2
   1a1d4:	cmn	r2, #1
   1a1d8:	ble	1a1e4 <myencoding_ascii_utf_8_to_codepoint@@Base+0x18>
   1a1dc:	mov	r2, #1
   1a1e0:	b	1a284 <myencoding_ascii_utf_8_to_codepoint@@Base+0xb8>
   1a1e4:	and	r2, r3, #224	; 0xe0
   1a1e8:	cmp	r2, #192	; 0xc0
   1a1ec:	bne	1a204 <myencoding_ascii_utf_8_to_codepoint@@Base+0x38>
   1a1f0:	mov	r2, #4032	; 0xfc0
   1a1f4:	and	r3, r2, r3, lsl #6
   1a1f8:	mov	r2, #2
   1a1fc:	mov	ip, #1
   1a200:	b	1a274 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1a204:	and	r2, r3, #240	; 0xf0
   1a208:	cmp	r2, #224	; 0xe0
   1a20c:	bne	1a234 <myencoding_ascii_utf_8_to_codepoint@@Base+0x68>
   1a210:	mov	r2, #126976	; 0x1f000
   1a214:	and	r2, r2, r3, lsl #12
   1a218:	str	r2, [r1]
   1a21c:	ldrb	r3, [r0, #1]
   1a220:	and	r3, r3, #127	; 0x7f
   1a224:	orr	r3, r2, r3, lsl #6
   1a228:	mov	r2, #3
   1a22c:	mov	ip, #2
   1a230:	b	1a274 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa8>
   1a234:	and	ip, r3, #248	; 0xf8
   1a238:	mov	r2, #0
   1a23c:	cmp	ip, #240	; 0xf0
   1a240:	bne	1a288 <myencoding_ascii_utf_8_to_codepoint@@Base+0xbc>
   1a244:	mov	r2, #3932160	; 0x3c0000
   1a248:	and	r2, r2, r3, lsl #18
   1a24c:	str	r2, [r1]
   1a250:	ldrb	r3, [r0, #1]
   1a254:	and	r3, r3, #127	; 0x7f
   1a258:	orr	r2, r2, r3, lsl #12
   1a25c:	str	r2, [r1]
   1a260:	ldrb	r3, [r0, #2]
   1a264:	and	r3, r3, #127	; 0x7f
   1a268:	orr	r3, r2, r3, lsl #6
   1a26c:	mov	r2, #4
   1a270:	mov	ip, #3
   1a274:	str	r3, [r1]
   1a278:	ldrb	r0, [r0, ip]
   1a27c:	and	r0, r0, #127	; 0x7f
   1a280:	orr	r3, r3, r0
   1a284:	str	r3, [r1]
   1a288:	mov	r0, r2
   1a28c:	bx	lr

0001a290 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   1a290:	cmp	r0, #65536	; 0x10000
   1a294:	bcc	1a2cc <myencoding_codepoint_to_ascii_utf_16@@Base+0x3c>
   1a298:	sub	r0, r0, #65536	; 0x10000
   1a29c:	lsr	r2, r0, #10
   1a2a0:	strb	r2, [r1, #1]
   1a2a4:	mov	r2, #216	; 0xd8
   1a2a8:	orr	r2, r2, r0, lsr #18
   1a2ac:	strb	r2, [r1]
   1a2b0:	lsr	r2, r0, #8
   1a2b4:	mov	r3, #55	; 0x37
   1a2b8:	bfi	r2, r3, #2, #30
   1a2bc:	strb	r2, [r1, #2]
   1a2c0:	mov	r2, #4
   1a2c4:	mov	r3, #3
   1a2c8:	b	1a2dc <myencoding_codepoint_to_ascii_utf_16@@Base+0x4c>
   1a2cc:	lsr	r2, r0, #8
   1a2d0:	strb	r2, [r1]
   1a2d4:	mov	r2, #2
   1a2d8:	mov	r3, #1
   1a2dc:	strb	r0, [r1, r3]
   1a2e0:	mov	r0, r2
   1a2e4:	bx	lr

0001a2e8 <myencoding_convert_to_ascii_utf_8@@Base>:
   1a2e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a2ec:	add	fp, sp, #28
   1a2f0:	sub	sp, sp, #36	; 0x24
   1a2f4:	mov	r5, r3
   1a2f8:	mov	sl, r2
   1a2fc:	mov	r8, r1
   1a300:	mov	r6, r0
   1a304:	ldr	r0, [r0]
   1a308:	cmp	r0, #0
   1a30c:	bne	1a32c <myencoding_convert_to_ascii_utf_8@@Base+0x44>
   1a310:	mov	r7, #0
   1a314:	add	r0, sl, #1
   1a318:	stmib	r6, {r0, r7}
   1a31c:	bl	1204c <mycore_malloc@plt>
   1a320:	str	r0, [r6]
   1a324:	cmp	r0, #0
   1a328:	beq	1a3ec <myencoding_convert_to_ascii_utf_8@@Base+0x104>
   1a32c:	vmov.i32	q8, #0	; 0x00000000
   1a330:	mov	r0, #20
   1a334:	add	r1, sp, #8
   1a338:	vst1.64	{d16-d17}, [r1], r0
   1a33c:	mov	r7, #0
   1a340:	str	r7, [r1]
   1a344:	str	r7, [sp, #24]
   1a348:	mov	r0, r5
   1a34c:	bl	11c44 <myencoding_get_function_by_id@plt>
   1a350:	cmp	sl, #0
   1a354:	beq	1a3ec <myencoding_convert_to_ascii_utf_8@@Base+0x104>
   1a358:	mov	r5, r0
   1a35c:	lsr	r0, sl, #1
   1a360:	str	r0, [sp, #4]
   1a364:	mov	r7, #0
   1a368:	add	r9, sp, #8
   1a36c:	b	1a39c <myencoding_convert_to_ascii_utf_8@@Base+0xb4>
   1a370:	ldr	r1, [r6]
   1a374:	ldr	r2, [r6, #8]
   1a378:	ldr	r0, [sp, #20]
   1a37c:	add	r1, r1, r2
   1a380:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a384:	ldr	r1, [r6, #8]
   1a388:	add	r0, r1, r0
   1a38c:	str	r0, [r6, #8]
   1a390:	add	r7, r7, #1
   1a394:	cmp	sl, r7
   1a398:	beq	1a3ec <myencoding_convert_to_ascii_utf_8@@Base+0x104>
   1a39c:	ldrb	r0, [r8, r7]
   1a3a0:	mov	r1, r9
   1a3a4:	blx	r5
   1a3a8:	cmp	r0, #0
   1a3ac:	bne	1a390 <myencoding_convert_to_ascii_utf_8@@Base+0xa8>
   1a3b0:	ldr	r1, [r6, #4]
   1a3b4:	ldr	r0, [r6, #8]
   1a3b8:	add	r0, r0, #6
   1a3bc:	cmp	r0, r1
   1a3c0:	bcc	1a370 <myencoding_convert_to_ascii_utf_8@@Base+0x88>
   1a3c4:	ldr	r1, [sp, #4]
   1a3c8:	add	r4, r0, r1
   1a3cc:	ldr	r0, [r6]
   1a3d0:	mov	r1, r4
   1a3d4:	bl	110b0 <mycore_realloc@plt>
   1a3d8:	cmp	r0, #0
   1a3dc:	beq	1a3e8 <myencoding_convert_to_ascii_utf_8@@Base+0x100>
   1a3e0:	stm	r6, {r0, r4}
   1a3e4:	b	1a370 <myencoding_convert_to_ascii_utf_8@@Base+0x88>
   1a3e8:	mov	r7, #0
   1a3ec:	mov	r0, r7
   1a3f0:	sub	sp, fp, #28
   1a3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a3f8 <myencoding_string_append@@Base>:
   1a3f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a3fc:	add	fp, sp, #24
   1a400:	sub	sp, sp, #32
   1a404:	mov	r4, r3
   1a408:	mov	r5, r2
   1a40c:	mov	r6, r1
   1a410:	mov	r7, r0
   1a414:	add	r8, sp, #8
   1a418:	mov	r0, r8
   1a41c:	bl	1162c <myencoding_result_clean@plt>
   1a420:	str	r4, [sp]
   1a424:	mov	r0, r7
   1a428:	mov	r1, r8
   1a42c:	mov	r2, r6
   1a430:	mov	r3, r5
   1a434:	bl	110ec <myencoding_string_append_chunk@plt>
   1a438:	sub	sp, fp, #24
   1a43c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a440 <myencoding_string_append_chunk@@Base>:
   1a440:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a444:	add	fp, sp, #24
   1a448:	mov	r5, r3
   1a44c:	mov	r6, r2
   1a450:	mov	r7, r1
   1a454:	mov	r4, r0
   1a458:	ldr	r0, [fp, #8]
   1a45c:	bl	11c44 <myencoding_get_function_by_id@plt>
   1a460:	cmp	r5, #0
   1a464:	beq	1a4cc <myencoding_string_append_chunk@@Base+0x8c>
   1a468:	mov	r8, r0
   1a46c:	b	1a49c <myencoding_string_append_chunk@@Base+0x5c>
   1a470:	ldr	r0, [r7, #12]
   1a474:	ldr	r1, [r4]
   1a478:	ldr	r2, [r4, #8]
   1a47c:	add	r1, r1, r2
   1a480:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a484:	ldr	r1, [r4, #8]
   1a488:	add	r0, r1, r0
   1a48c:	str	r0, [r4, #8]
   1a490:	add	r6, r6, #1
   1a494:	subs	r5, r5, #1
   1a498:	beq	1a4cc <myencoding_string_append_chunk@@Base+0x8c>
   1a49c:	ldrb	r0, [r6]
   1a4a0:	mov	r1, r7
   1a4a4:	blx	r8
   1a4a8:	cmp	r0, #0
   1a4ac:	bne	1a490 <myencoding_string_append_chunk@@Base+0x50>
   1a4b0:	ldmib	r4, {r0, r1}
   1a4b4:	add	r1, r1, #5
   1a4b8:	cmp	r1, r0
   1a4bc:	bcc	1a470 <myencoding_string_append_chunk@@Base+0x30>
   1a4c0:	mov	r0, r4
   1a4c4:	bl	11d7c <mycore_string_realloc@plt>
   1a4c8:	b	1a470 <myencoding_string_append_chunk@@Base+0x30>
   1a4cc:	ldr	r1, [r4, #4]
   1a4d0:	ldr	r0, [r4, #8]
   1a4d4:	cmp	r0, r1
   1a4d8:	bcc	1a4e8 <myencoding_string_append_chunk@@Base+0xa8>
   1a4dc:	add	r1, r0, #1
   1a4e0:	mov	r0, r4
   1a4e4:	bl	11d7c <mycore_string_realloc@plt>
   1a4e8:	ldr	r0, [r4]
   1a4ec:	ldr	r1, [r4, #8]
   1a4f0:	mov	r2, #0
   1a4f4:	strb	r2, [r0, r1]
   1a4f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a4fc <myencoding_string_append_one@@Base>:
   1a4fc:	push	{r4, r5, r6, sl, fp, lr}
   1a500:	add	fp, sp, #16
   1a504:	mov	r6, r2
   1a508:	mov	r5, r1
   1a50c:	mov	r4, r0
   1a510:	mov	r0, r3
   1a514:	bl	11c44 <myencoding_get_function_by_id@plt>
   1a518:	mov	r2, r0
   1a51c:	mov	r0, r6
   1a520:	mov	r1, r5
   1a524:	blx	r2
   1a528:	cmp	r0, #0
   1a52c:	popne	{r4, r5, r6, sl, fp, pc}
   1a530:	ldmib	r4, {r0, r1}
   1a534:	add	r1, r1, #5
   1a538:	cmp	r1, r0
   1a53c:	bcc	1a548 <myencoding_string_append_one@@Base+0x4c>
   1a540:	mov	r0, r4
   1a544:	bl	11d7c <mycore_string_realloc@plt>
   1a548:	ldr	r0, [r5, #12]
   1a54c:	ldr	r1, [r4]
   1a550:	ldr	r2, [r4, #8]
   1a554:	add	r1, r1, r2
   1a558:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a55c:	ldr	r1, [r4]
   1a560:	ldr	r2, [r4, #8]
   1a564:	add	r0, r2, r0
   1a568:	str	r0, [r4, #8]
   1a56c:	mov	r2, #0
   1a570:	strb	r2, [r1, r0]
   1a574:	pop	{r4, r5, r6, sl, fp, pc}

0001a578 <myencoding_string_append_lowercase_ascii@@Base>:
   1a578:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a57c:	add	fp, sp, #24
   1a580:	sub	sp, sp, #32
   1a584:	mov	r4, r3
   1a588:	mov	r5, r2
   1a58c:	mov	r6, r1
   1a590:	mov	r7, r0
   1a594:	add	r8, sp, #8
   1a598:	mov	r0, r8
   1a59c:	bl	1162c <myencoding_result_clean@plt>
   1a5a0:	str	r4, [sp]
   1a5a4:	mov	r0, r7
   1a5a8:	mov	r1, r8
   1a5ac:	mov	r2, r6
   1a5b0:	mov	r3, r5
   1a5b4:	bl	12040 <myencoding_string_append_chunk_lowercase_ascii@plt>
   1a5b8:	sub	sp, fp, #24
   1a5bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a5c0 <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   1a5c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a5c4:	add	fp, sp, #24
   1a5c8:	mov	r5, r3
   1a5cc:	mov	r6, r2
   1a5d0:	mov	r7, r1
   1a5d4:	mov	r4, r0
   1a5d8:	ldr	r0, [fp, #8]
   1a5dc:	bl	11c44 <myencoding_get_function_by_id@plt>
   1a5e0:	cmp	r5, #0
   1a5e4:	beq	1a678 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb8>
   1a5e8:	mov	r8, r0
   1a5ec:	ldr	r9, [pc, #180]	; 1a6a8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe8>
   1a5f0:	add	r9, pc, r9
   1a5f4:	b	1a610 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x50>
   1a5f8:	ldr	r1, [r4, #8]
   1a5fc:	add	r0, r1, r0
   1a600:	str	r0, [r4, #8]
   1a604:	add	r6, r6, #1
   1a608:	subs	r5, r5, #1
   1a60c:	beq	1a678 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb8>
   1a610:	ldrb	r0, [r6]
   1a614:	mov	r1, r7
   1a618:	blx	r8
   1a61c:	cmp	r0, #0
   1a620:	bne	1a604 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x44>
   1a624:	ldr	r1, [r4, #4]
   1a628:	ldr	r0, [r4, #8]
   1a62c:	add	r2, r0, #5
   1a630:	cmp	r2, r1
   1a634:	bcc	1a644 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x84>
   1a638:	add	r1, r0, #6
   1a63c:	mov	r0, r4
   1a640:	bl	11d7c <mycore_string_realloc@plt>
   1a644:	ldr	r0, [r7, #12]
   1a648:	ldr	r1, [r4]
   1a64c:	ldr	r2, [r4, #8]
   1a650:	add	r1, r1, r2
   1a654:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1a658:	cmp	r0, #1
   1a65c:	bne	1a5f8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1a660:	ldrb	r1, [r6]
   1a664:	ldrb	r1, [r9, r1]
   1a668:	ldr	r2, [r4]
   1a66c:	ldr	r3, [r4, #8]
   1a670:	strb	r1, [r2, r3]
   1a674:	b	1a5f8 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1a678:	ldr	r1, [r4, #4]
   1a67c:	ldr	r0, [r4, #8]
   1a680:	cmp	r0, r1
   1a684:	bcc	1a694 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd4>
   1a688:	add	r1, r0, #1
   1a68c:	mov	r0, r4
   1a690:	bl	11d7c <mycore_string_realloc@plt>
   1a694:	ldr	r0, [r4]
   1a698:	ldr	r1, [r4, #8]
   1a69c:	mov	r2, #0
   1a6a0:	strb	r2, [r0, r1]
   1a6a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a6a8:	andeq	r9, r7, ip, lsr #15

0001a6ac <myhtml_callback_before_token_done@@Base>:
   1a6ac:	ldr	r0, [r0, #220]	; 0xdc
   1a6b0:	bx	lr

0001a6b4 <myhtml_callback_after_token_done@@Base>:
   1a6b4:	ldr	r0, [r0, #224]	; 0xe0
   1a6b8:	bx	lr

0001a6bc <myhtml_callback_before_token_done_set@@Base>:
   1a6bc:	str	r2, [r0, #228]	; 0xe4
   1a6c0:	str	r1, [r0, #220]	; 0xdc
   1a6c4:	bx	lr

0001a6c8 <myhtml_callback_after_token_done_set@@Base>:
   1a6c8:	str	r2, [r0, #232]	; 0xe8
   1a6cc:	str	r1, [r0, #224]	; 0xe0
   1a6d0:	bx	lr

0001a6d4 <myhtml_callback_tree_node_insert@@Base>:
   1a6d4:	ldr	r0, [r0, #236]	; 0xec
   1a6d8:	bx	lr

0001a6dc <myhtml_callback_tree_node_remove@@Base>:
   1a6dc:	ldr	r0, [r0, #240]	; 0xf0
   1a6e0:	bx	lr

0001a6e4 <myhtml_callback_tree_node_insert_set@@Base>:
   1a6e4:	str	r2, [r0, #244]	; 0xf4
   1a6e8:	str	r1, [r0, #236]	; 0xec
   1a6ec:	bx	lr

0001a6f0 <myhtml_callback_tree_node_remove_set@@Base>:
   1a6f0:	str	r2, [r0, #248]	; 0xf8
   1a6f4:	str	r1, [r0, #240]	; 0xf0
   1a6f8:	bx	lr

0001a6fc <myhtml_charef_find@@Base>:
   1a6fc:	push	{r4, r5, r6, r7, fp, lr}
   1a700:	add	fp, sp, #16
   1a704:	mov	ip, r0
   1a708:	ldrb	r4, [r0]
   1a70c:	add	r5, r4, r4, lsl #1
   1a710:	ldr	lr, [pc, #144]	; 1a7a8 <myhtml_charef_find@@Base+0xac>
   1a714:	add	lr, pc, lr
   1a718:	b	1a720 <myhtml_charef_find@@Base+0x24>
   1a71c:	add	r5, r4, r4, lsl #1
   1a720:	mov	r0, lr
   1a724:	ldrb	r5, [r0, r5, lsl #3]!
   1a728:	cmp	r5, #0
   1a72c:	beq	1a77c <myhtml_charef_find@@Base+0x80>
   1a730:	ldr	r6, [r1]
   1a734:	ldrb	r7, [ip, r6]
   1a738:	uxtb	r5, r5
   1a73c:	cmp	r5, r7
   1a740:	bne	1a76c <myhtml_charef_find@@Base+0x70>
   1a744:	add	r6, r6, #1
   1a748:	str	r6, [r1]
   1a74c:	add	r4, r4, r4, lsl #1
   1a750:	add	r5, lr, r4, lsl #3
   1a754:	cmp	r6, r2
   1a758:	bcs	1a798 <myhtml_charef_find@@Base+0x9c>
   1a75c:	ldr	r4, [r5, #4]
   1a760:	cmp	r4, #0
   1a764:	bne	1a71c <myhtml_charef_find@@Base+0x20>
   1a768:	b	1a798 <myhtml_charef_find@@Base+0x9c>
   1a76c:	cmp	r7, r5
   1a770:	bls	1a77c <myhtml_charef_find@@Base+0x80>
   1a774:	add	r4, r4, #1
   1a778:	b	1a71c <myhtml_charef_find@@Base+0x20>
   1a77c:	cmp	r3, #0
   1a780:	beq	1a794 <myhtml_charef_find@@Base+0x98>
   1a784:	add	r1, r4, r4, lsl #1
   1a788:	add	r1, lr, r1, lsl #3
   1a78c:	ldr	r1, [r1, #20]
   1a790:	str	r1, [r3]
   1a794:	pop	{r4, r5, r6, r7, fp, pc}
   1a798:	cmp	r3, #0
   1a79c:	beq	1a794 <myhtml_charef_find@@Base+0x98>
   1a7a0:	ldr	r1, [r5, #20]
   1a7a4:	b	1a790 <myhtml_charef_find@@Base+0x94>
   1a7a8:	andeq	r9, r7, r8, lsl #15

0001a7ac <myhtml_charef_get_first_position@@Base>:
   1a7ac:	add	r0, r0, r0, lsl #1
   1a7b0:	ldr	r1, [pc, #8]	; 1a7c0 <myhtml_charef_get_first_position@@Base+0x14>
   1a7b4:	add	r1, pc, r1
   1a7b8:	add	r0, r1, r0, lsl #3
   1a7bc:	bx	lr
   1a7c0:	andeq	r9, r7, r8, ror #13

0001a7c4 <myhtml_charef_find_by_pos@@Base>:
   1a7c4:	push	{r4, r5, r6, r7, fp, lr}
   1a7c8:	add	fp, sp, #16
   1a7cc:	mov	ip, r0
   1a7d0:	ldr	r0, [r2]
   1a7d4:	ldrb	r0, [r1, r0]
   1a7d8:	ldr	lr, [fp, #8]
   1a7dc:	cmp	r0, #38	; 0x26
   1a7e0:	bne	1a814 <myhtml_charef_find_by_pos@@Base+0x50>
   1a7e4:	mov	r0, #1
   1a7e8:	str	r0, [lr, #12]
   1a7ec:	ldr	r0, [lr]
   1a7f0:	ldr	r1, [r0, #20]
   1a7f4:	cmp	r1, #0
   1a7f8:	popne	{r4, r5, r6, r7, fp, pc}
   1a7fc:	ldr	r0, [lr, #4]
   1a800:	cmp	r0, #0
   1a804:	beq	1a8d4 <myhtml_charef_find_by_pos@@Base+0x110>
   1a808:	ldr	r1, [lr, #8]
   1a80c:	str	r1, [r2]
   1a810:	pop	{r4, r5, r6, r7, fp, pc}
   1a814:	mov	r0, #0
   1a818:	str	r0, [lr, #12]
   1a81c:	add	r5, ip, ip, lsl #1
   1a820:	ldr	r4, [pc, #256]	; 1a928 <myhtml_charef_find_by_pos@@Base+0x164>
   1a824:	add	r4, pc, r4
   1a828:	mov	r0, r4
   1a82c:	ldrb	r5, [r0, r5, lsl #3]!
   1a830:	cmp	r5, #0
   1a834:	beq	1a8b0 <myhtml_charef_find_by_pos@@Base+0xec>
   1a838:	ldr	r6, [r2]
   1a83c:	ldrb	r7, [r1, r6]
   1a840:	uxtb	r5, r5
   1a844:	cmp	r5, r7
   1a848:	bne	1a89c <myhtml_charef_find_by_pos@@Base+0xd8>
   1a84c:	cmp	r7, #59	; 0x3b
   1a850:	beq	1a8e0 <myhtml_charef_find_by_pos@@Base+0x11c>
   1a854:	add	r5, r6, #1
   1a858:	str	r5, [r2]
   1a85c:	add	r7, ip, ip, lsl #1
   1a860:	add	r6, r4, r7, lsl #3
   1a864:	ldr	ip, [r6, #4]
   1a868:	cmp	ip, #0
   1a86c:	beq	1a8e4 <myhtml_charef_find_by_pos@@Base+0x120>
   1a870:	cmp	r5, r3
   1a874:	bcs	1a8f0 <myhtml_charef_find_by_pos@@Base+0x12c>
   1a878:	ldrb	r7, [r1, r5]
   1a87c:	cmp	r7, #38	; 0x26
   1a880:	beq	1a908 <myhtml_charef_find_by_pos@@Base+0x144>
   1a884:	ldr	r6, [r6, #20]
   1a888:	cmp	r6, #0
   1a88c:	beq	1a8a8 <myhtml_charef_find_by_pos@@Base+0xe4>
   1a890:	stmib	lr, {r0, r5}
   1a894:	add	r5, ip, ip, lsl #1
   1a898:	b	1a828 <myhtml_charef_find_by_pos@@Base+0x64>
   1a89c:	cmp	r7, r5
   1a8a0:	bls	1a8b0 <myhtml_charef_find_by_pos@@Base+0xec>
   1a8a4:	add	ip, ip, #1
   1a8a8:	add	r5, ip, ip, lsl #1
   1a8ac:	b	1a828 <myhtml_charef_find_by_pos@@Base+0x64>
   1a8b0:	mov	r0, #1
   1a8b4:	str	r0, [lr, #12]
   1a8b8:	ldr	r1, [lr, #4]
   1a8bc:	cmp	r1, #0
   1a8c0:	mov	r0, r4
   1a8c4:	ldrne	r0, [lr, #8]
   1a8c8:	strne	r0, [r2]
   1a8cc:	movne	r0, r1
   1a8d0:	pop	{r4, r5, r6, r7, fp, pc}
   1a8d4:	ldr	r0, [pc, #72]	; 1a924 <myhtml_charef_find_by_pos@@Base+0x160>
   1a8d8:	add	r0, pc, r0
   1a8dc:	pop	{r4, r5, r6, r7, fp, pc}
   1a8e0:	str	r0, [lr]
   1a8e4:	mov	r1, #1
   1a8e8:	str	r1, [lr, #12]
   1a8ec:	pop	{r4, r5, r6, r7, fp, pc}
   1a8f0:	str	r0, [lr]
   1a8f4:	ldr	r1, [r6, #20]
   1a8f8:	cmp	r1, #0
   1a8fc:	beq	1a8d0 <myhtml_charef_find_by_pos@@Base+0x10c>
   1a900:	stmib	lr, {r0, r5}
   1a904:	pop	{r4, r5, r6, r7, fp, pc}
   1a908:	str	r0, [lr]
   1a90c:	mov	r1, #1
   1a910:	str	r1, [lr, #12]
   1a914:	ldr	r1, [r6, #20]
   1a918:	cmp	r1, #0
   1a91c:	bne	1a8d0 <myhtml_charef_find_by_pos@@Base+0x10c>
   1a920:	b	1a8b8 <myhtml_charef_find_by_pos@@Base+0xf4>
   1a924:	andeq	r9, r7, r4, asr #11
   1a928:	andeq	r9, r7, r8, ror r6

0001a92c <myhtml_data_process_entry_clean@@Base>:
   1a92c:	vmov.i32	q8, #0	; 0x00000000
   1a930:	add	r1, r0, #48	; 0x30
   1a934:	vst1.32	{d16-d17}, [r1]
   1a938:	add	r1, r0, #36	; 0x24
   1a93c:	vst1.32	{d16-d17}, [r1]
   1a940:	add	r1, r0, #4
   1a944:	vst1.32	{d16-d17}, [r1]
   1a948:	ldr	r1, [pc, #12]	; 1a95c <myhtml_data_process_entry_clean@@Base+0x30>
   1a94c:	ldr	r1, [pc, r1]
   1a950:	str	r1, [r0], #20
   1a954:	vst1.32	{d16-d17}, [r0]
   1a958:	bx	lr
   1a95c:	strdeq	ip, [pc], -r4

0001a960 <myhtml_data_process_state_data@@Base>:
   1a960:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a964:	add	fp, sp, #24
   1a968:	sub	sp, sp, #8
   1a96c:	mov	r6, r3
   1a970:	mov	r9, r2
   1a974:	mov	r8, r1
   1a978:	mov	r4, r0
   1a97c:	ldr	r0, [fp, #8]
   1a980:	cmp	r3, r0
   1a984:	mov	r5, r3
   1a988:	bcs	1a9b4 <myhtml_data_process_state_data@@Base+0x54>
   1a98c:	sub	r0, r6, r0
   1a990:	add	r5, r9, r6
   1a994:	mov	r7, #0
   1a998:	ldrb	r1, [r5, -r7]
   1a99c:	cmp	r1, #38	; 0x26
   1a9a0:	beq	1aa00 <myhtml_data_process_state_data@@Base+0xa0>
   1a9a4:	sub	r7, r7, #1
   1a9a8:	cmp	r0, r7
   1a9ac:	bne	1a998 <myhtml_data_process_state_data@@Base+0x38>
   1a9b0:	sub	r5, r6, r7
   1a9b4:	add	r1, r9, r6
   1a9b8:	sub	r2, r5, r6
   1a9bc:	ldr	r3, [r4, #32]
   1a9c0:	mov	r0, r8
   1a9c4:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1a9c8:	add	r0, r0, r6
   1a9cc:	cmp	r5, r0
   1a9d0:	beq	1aac0 <myhtml_data_process_state_data@@Base+0x160>
   1a9d4:	ldr	r1, [r4, #4]
   1a9d8:	cmp	r1, #0
   1a9dc:	beq	1aa60 <myhtml_data_process_state_data@@Base+0x100>
   1a9e0:	ldrb	r2, [r4, #61]	; 0x3d
   1a9e4:	stm	sp, {r1, r2}
   1a9e8:	add	r2, r9, r0
   1a9ec:	sub	r3, r5, r0
   1a9f0:	add	r1, r4, #8
   1a9f4:	mov	r0, r8
   1a9f8:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a9fc:	b	1aa74 <myhtml_data_process_state_data@@Base+0x114>
   1aa00:	ldr	r3, [r4, #32]
   1aa04:	rsb	r2, r7, #0
   1aa08:	mov	r0, r8
   1aa0c:	mov	r1, r5
   1aa10:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1aa14:	cmn	r7, r0
   1aa18:	beq	1aa98 <myhtml_data_process_state_data@@Base+0x138>
   1aa1c:	add	r1, r0, r6
   1aa20:	ldr	r2, [r4, #4]
   1aa24:	cmp	r2, #0
   1aa28:	beq	1aa7c <myhtml_data_process_state_data@@Base+0x11c>
   1aa2c:	ldrb	r3, [r4, #61]	; 0x3d
   1aa30:	stm	sp, {r2, r3}
   1aa34:	add	r2, r9, r1
   1aa38:	add	r0, r0, r7
   1aa3c:	rsb	r3, r0, #0
   1aa40:	add	r9, r4, #8
   1aa44:	mov	r0, r8
   1aa48:	mov	r1, r9
   1aa4c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1aa50:	str	r0, [r4, #32]
   1aa54:	mov	r0, r9
   1aa58:	bl	1162c <myencoding_result_clean@plt>
   1aa5c:	b	1aa98 <myhtml_data_process_state_data@@Base+0x138>
   1aa60:	add	r1, r9, r0
   1aa64:	sub	r2, r5, r0
   1aa68:	ldrb	r3, [r4, #61]	; 0x3d
   1aa6c:	mov	r0, r8
   1aa70:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1aa74:	str	r0, [r4, #32]
   1aa78:	b	1aac0 <myhtml_data_process_state_data@@Base+0x160>
   1aa7c:	add	r1, r9, r1
   1aa80:	add	r0, r0, r7
   1aa84:	rsb	r2, r0, #0
   1aa88:	ldrb	r3, [r4, #61]	; 0x3d
   1aa8c:	mov	r0, r8
   1aa90:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1aa94:	str	r0, [r4, #32]
   1aa98:	ldr	r0, [r8, #8]
   1aa9c:	ldr	r1, [pc, #40]	; 1aacc <myhtml_data_process_state_data@@Base+0x16c>
   1aaa0:	ldr	r1, [pc, r1]
   1aaa4:	str	r1, [r4]
   1aaa8:	str	r0, [r4, #36]	; 0x24
   1aaac:	ldrb	r1, [r5, -r7]
   1aab0:	mov	r0, r8
   1aab4:	bl	12400 <myhtml_data_process_string_append_char@plt>
   1aab8:	sub	r0, r6, r7
   1aabc:	add	r5, r0, #1
   1aac0:	mov	r0, r5
   1aac4:	sub	sp, fp, #24
   1aac8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aacc:	andeq	ip, pc, r4, ror #28

0001aad0 <myhtml_data_process_string_append_char@@Base>:
   1aad0:	push	{r4, r5, fp, lr}
   1aad4:	add	fp, sp, #8
   1aad8:	mov	r5, r1
   1aadc:	mov	r4, r0
   1aae0:	ldr	r0, [r0, #4]
   1aae4:	ldr	r1, [r4, #8]
   1aae8:	add	r1, r1, #2
   1aaec:	cmp	r1, r0
   1aaf0:	bcc	1aafc <myhtml_data_process_string_append_char@@Base+0x2c>
   1aaf4:	mov	r0, r4
   1aaf8:	bl	11d7c <mycore_string_realloc@plt>
   1aafc:	ldr	r0, [r4]
   1ab00:	ldr	r1, [r4, #8]
   1ab04:	strb	r5, [r0, r1]
   1ab08:	ldr	r0, [r4]
   1ab0c:	ldr	r1, [r4, #8]
   1ab10:	add	r1, r1, #1
   1ab14:	str	r1, [r4, #8]
   1ab18:	mov	r2, #0
   1ab1c:	strb	r2, [r0, r1]
   1ab20:	pop	{r4, r5, fp, pc}

0001ab24 <myhtml_data_process_state_ampersand@@Base>:
   1ab24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ab28:	add	fp, sp, #24
   1ab2c:	mov	r4, r3
   1ab30:	mov	r7, r2
   1ab34:	mov	r6, r1
   1ab38:	mov	r5, r0
   1ab3c:	ldrb	r1, [r2, r3]
   1ab40:	cmp	r1, #35	; 0x23
   1ab44:	bne	1ab94 <myhtml_data_process_state_ampersand@@Base+0x70>
   1ab48:	ldr	r8, [fp, #8]
   1ab4c:	mov	r0, r6
   1ab50:	bl	12400 <myhtml_data_process_string_append_char@plt>
   1ab54:	mov	r0, #0
   1ab58:	str	r0, [r5, #40]	; 0x28
   1ab5c:	add	r0, r4, #1
   1ab60:	cmp	r0, r8
   1ab64:	bcs	1abd4 <myhtml_data_process_state_ampersand@@Base+0xb0>
   1ab68:	ldrb	r1, [r7, r0]
   1ab6c:	orr	r2, r1, #32
   1ab70:	cmp	r2, #120	; 0x78
   1ab74:	bne	1abf8 <myhtml_data_process_state_ampersand@@Base+0xd4>
   1ab78:	mov	r0, r6
   1ab7c:	bl	12400 <myhtml_data_process_string_append_char@plt>
   1ab80:	ldr	r0, [pc, #132]	; 1ac0c <myhtml_data_process_state_ampersand@@Base+0xe8>
   1ab84:	ldr	r0, [pc, r0]
   1ab88:	str	r0, [r5]
   1ab8c:	add	r0, r4, #2
   1ab90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ab94:	mov	r0, #0
   1ab98:	str	r0, [r5, #48]	; 0x30
   1ab9c:	ldrb	r0, [r7, r4]
   1aba0:	bl	11e48 <myhtml_charef_get_first_position@plt>
   1aba4:	str	r0, [r5, #44]	; 0x2c
   1aba8:	ldrb	r0, [r0]
   1abac:	cmp	r0, #0
   1abb0:	beq	1abe4 <myhtml_data_process_state_ampersand@@Base+0xc0>
   1abb4:	ldr	r0, [pc, #92]	; 1ac18 <myhtml_data_process_state_ampersand@@Base+0xf4>
   1abb8:	ldr	r0, [pc, r0]
   1abbc:	str	r0, [r5]
   1abc0:	ldrb	r1, [r7, r4]
   1abc4:	mov	r0, r6
   1abc8:	bl	12400 <myhtml_data_process_string_append_char@plt>
   1abcc:	add	r0, r4, #1
   1abd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1abd4:	ldr	r1, [pc, #44]	; 1ac08 <myhtml_data_process_state_ampersand@@Base+0xe4>
   1abd8:	ldr	r1, [pc, r1]
   1abdc:	str	r1, [r5]
   1abe0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1abe4:	ldr	r0, [pc, #40]	; 1ac14 <myhtml_data_process_state_ampersand@@Base+0xf0>
   1abe8:	ldr	r0, [pc, r0]
   1abec:	str	r0, [r5]
   1abf0:	mov	r0, r4
   1abf4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1abf8:	ldr	r1, [pc, #16]	; 1ac10 <myhtml_data_process_state_ampersand@@Base+0xec>
   1abfc:	ldr	r1, [pc, r1]
   1ac00:	str	r1, [r5]
   1ac04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ac08:	andeq	ip, pc, r4, lsr #22
   1ac0c:	andeq	ip, pc, r0, lsl #23
   1ac10:	andeq	ip, pc, ip, lsr #26
   1ac14:	andeq	ip, pc, r8, asr sp	; <UNPREDICTABLE>
   1ac18:	andeq	ip, pc, r0, lsr #24

0001ac1c <myhtml_data_process_state_ampersand_hash@@Base>:
   1ac1c:	push	{r4, r5, fp, lr}
   1ac20:	add	fp, sp, #8
   1ac24:	mov	r4, r3
   1ac28:	mov	r5, r0
   1ac2c:	ldrb	r2, [r2, r3]
   1ac30:	orr	r0, r2, #32
   1ac34:	cmp	r0, #120	; 0x78
   1ac38:	bne	1ac58 <myhtml_data_process_state_ampersand_hash@@Base+0x3c>
   1ac3c:	mov	r0, r1
   1ac40:	mov	r1, r2
   1ac44:	bl	12400 <myhtml_data_process_string_append_char@plt>
   1ac48:	add	r4, r4, #1
   1ac4c:	ldr	r0, [pc, #28]	; 1ac70 <myhtml_data_process_state_ampersand_hash@@Base+0x54>
   1ac50:	ldr	r0, [pc, r0]
   1ac54:	b	1ac60 <myhtml_data_process_state_ampersand_hash@@Base+0x44>
   1ac58:	ldr	r0, [pc, #12]	; 1ac6c <myhtml_data_process_state_ampersand_hash@@Base+0x50>
   1ac5c:	ldr	r0, [pc, r0]
   1ac60:	str	r0, [r5]
   1ac64:	mov	r0, r4
   1ac68:	pop	{r4, r5, fp, pc}
   1ac6c:	andeq	ip, pc, ip, asr #25
   1ac70:			; <UNDEFINED> instruction: 0x000fcab4

0001ac74 <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   1ac74:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ac78:	add	fp, sp, #24
   1ac7c:	sub	sp, sp, #8
   1ac80:	mov	r5, r3
   1ac84:	mov	r9, r2
   1ac88:	mov	r8, r1
   1ac8c:	mov	r4, r0
   1ac90:	ldr	r0, [fp, #8]
   1ac94:	cmp	r3, r0
   1ac98:	mov	r6, r3
   1ac9c:	bcs	1ad38 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xc4>
   1aca0:	add	r1, r9, r5
   1aca4:	sub	r0, r5, r0
   1aca8:	mov	r7, #0
   1acac:	ldr	r2, [pc, #328]	; 1adfc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x188>
   1acb0:	add	r2, pc, r2
   1acb4:	b	1acc4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x50>
   1acb8:	sub	r7, r7, #1
   1acbc:	cmp	r0, r7
   1acc0:	beq	1ad34 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xc0>
   1acc4:	ldrb	r3, [r1, -r7]
   1acc8:	ldrb	r3, [r2, r3]
   1accc:	cmp	r3, #255	; 0xff
   1acd0:	beq	1ad00 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x8c>
   1acd4:	ldr	r3, [r4, #40]	; 0x28
   1acd8:	lsr	r6, r3, #16
   1acdc:	cmp	r6, #16
   1ace0:	bhi	1acb8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x44>
   1ace4:	lsl	r6, r3, #4
   1ace8:	str	r6, [r4, #40]	; 0x28
   1acec:	ldrb	r6, [r1, -r7]
   1acf0:	ldrb	r6, [r2, r6]
   1acf4:	orr	r3, r6, r3, lsl #4
   1acf8:	str	r3, [r4, #40]	; 0x28
   1acfc:	b	1acb8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x44>
   1ad00:	ldr	r0, [pc, #248]	; 1ae00 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x18c>
   1ad04:	ldr	r0, [pc, r0]
   1ad08:	str	r0, [r4]
   1ad0c:	cmp	r7, #0
   1ad10:	beq	1ada8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1ad14:	ldrb	r6, [r1, -r7]
   1ad18:	mov	r0, r4
   1ad1c:	mov	r1, r8
   1ad20:	bl	117ac <myhtml_data_process_state_end@plt>
   1ad24:	cmp	r6, #59	; 0x3b
   1ad28:	addeq	r5, r5, #1
   1ad2c:	sub	r6, r5, r7
   1ad30:	b	1ad9c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1ad34:	sub	r6, r5, r7
   1ad38:	add	r1, r9, r5
   1ad3c:	sub	r2, r6, r5
   1ad40:	ldr	r3, [r4, #32]
   1ad44:	mov	r0, r8
   1ad48:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1ad4c:	add	r0, r0, r5
   1ad50:	cmp	r6, r0
   1ad54:	beq	1ad9c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1ad58:	ldr	r1, [r4, #4]
   1ad5c:	cmp	r1, #0
   1ad60:	beq	1ad84 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x110>
   1ad64:	ldrb	r2, [r4, #61]	; 0x3d
   1ad68:	stm	sp, {r1, r2}
   1ad6c:	add	r2, r9, r0
   1ad70:	sub	r3, r6, r0
   1ad74:	add	r1, r4, #8
   1ad78:	mov	r0, r8
   1ad7c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1ad80:	b	1ad98 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x124>
   1ad84:	add	r1, r9, r0
   1ad88:	sub	r2, r6, r0
   1ad8c:	ldrb	r3, [r4, #61]	; 0x3d
   1ad90:	mov	r0, r8
   1ad94:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1ad98:	str	r0, [r4, #32]
   1ad9c:	mov	r0, r6
   1ada0:	sub	sp, fp, #24
   1ada4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ada8:	sub	r6, r5, r7
   1adac:	ldr	r3, [r4, #32]
   1adb0:	mov	r0, r8
   1adb4:	mov	r2, #0
   1adb8:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1adbc:	cmn	r7, r0
   1adc0:	beq	1ad9c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x128>
   1adc4:	add	r1, r0, r5
   1adc8:	ldr	r2, [r4, #4]
   1adcc:	cmp	r2, #0
   1add0:	beq	1adec <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x178>
   1add4:	ldrb	r3, [r4, #61]	; 0x3d
   1add8:	stm	sp, {r2, r3}
   1addc:	add	r2, r9, r1
   1ade0:	add	r0, r0, r7
   1ade4:	rsb	r3, r0, #0
   1ade8:	b	1ad74 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x100>
   1adec:	add	r1, r9, r1
   1adf0:	add	r0, r0, r7
   1adf4:	rsb	r2, r0, #0
   1adf8:	b	1ad8c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x118>
   1adfc:	andeq	r1, lr, ip, asr sl
   1ae00:	andeq	ip, pc, ip, lsr ip	; <UNPREDICTABLE>

0001ae04 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   1ae04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ae08:	add	fp, sp, #24
   1ae0c:	sub	sp, sp, #8
   1ae10:	mov	r5, r3
   1ae14:	mov	r9, r2
   1ae18:	mov	r8, r1
   1ae1c:	mov	r4, r0
   1ae20:	ldr	r0, [fp, #8]
   1ae24:	cmp	r3, r0
   1ae28:	mov	r6, r3
   1ae2c:	bcs	1aec0 <myhtml_data_process_state_ampersand_hash_data@@Base+0xbc>
   1ae30:	sub	r0, r5, r0
   1ae34:	add	r1, r9, r5
   1ae38:	mov	r7, #0
   1ae3c:	ldr	ip, [pc, #320]	; 1af84 <myhtml_data_process_state_ampersand_hash_data@@Base+0x180>
   1ae40:	add	ip, pc, ip
   1ae44:	b	1ae54 <myhtml_data_process_state_ampersand_hash_data@@Base+0x50>
   1ae48:	sub	r7, r7, #1
   1ae4c:	cmp	r0, r7
   1ae50:	beq	1aebc <myhtml_data_process_state_ampersand_hash_data@@Base+0xb8>
   1ae54:	ldrb	r3, [r1, -r7]
   1ae58:	sub	r6, r3, #48	; 0x30
   1ae5c:	cmp	r6, #10
   1ae60:	bcs	1ae88 <myhtml_data_process_state_ampersand_hash_data@@Base+0x84>
   1ae64:	ldr	r6, [r4, #40]	; 0x28
   1ae68:	lsr	r2, r6, #16
   1ae6c:	cmp	r2, #16
   1ae70:	bhi	1ae48 <myhtml_data_process_state_ampersand_hash_data@@Base+0x44>
   1ae74:	ldrb	r2, [ip, r3]
   1ae78:	add	r3, r6, r6, lsl #2
   1ae7c:	add	r2, r2, r3, lsl #1
   1ae80:	str	r2, [r4, #40]	; 0x28
   1ae84:	b	1ae48 <myhtml_data_process_state_ampersand_hash_data@@Base+0x44>
   1ae88:	ldr	r0, [pc, #248]	; 1af88 <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   1ae8c:	ldr	r0, [pc, r0]
   1ae90:	str	r0, [r4]
   1ae94:	cmp	r7, #0
   1ae98:	beq	1af30 <myhtml_data_process_state_ampersand_hash_data@@Base+0x12c>
   1ae9c:	ldrb	r6, [r1, -r7]
   1aea0:	mov	r0, r4
   1aea4:	mov	r1, r8
   1aea8:	bl	117ac <myhtml_data_process_state_end@plt>
   1aeac:	cmp	r6, #59	; 0x3b
   1aeb0:	addeq	r5, r5, #1
   1aeb4:	sub	r6, r5, r7
   1aeb8:	b	1af24 <myhtml_data_process_state_ampersand_hash_data@@Base+0x120>
   1aebc:	sub	r6, r5, r7
   1aec0:	add	r1, r9, r5
   1aec4:	sub	r2, r6, r5
   1aec8:	ldr	r3, [r4, #32]
   1aecc:	mov	r0, r8
   1aed0:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1aed4:	add	r0, r0, r5
   1aed8:	cmp	r6, r0
   1aedc:	beq	1af24 <myhtml_data_process_state_ampersand_hash_data@@Base+0x120>
   1aee0:	ldr	r1, [r4, #4]
   1aee4:	cmp	r1, #0
   1aee8:	beq	1af0c <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   1aeec:	ldrb	r2, [r4, #61]	; 0x3d
   1aef0:	stm	sp, {r1, r2}
   1aef4:	add	r2, r9, r0
   1aef8:	sub	r3, r6, r0
   1aefc:	add	r1, r4, #8
   1af00:	mov	r0, r8
   1af04:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1af08:	b	1af20 <myhtml_data_process_state_ampersand_hash_data@@Base+0x11c>
   1af0c:	add	r1, r9, r0
   1af10:	sub	r2, r6, r0
   1af14:	ldrb	r3, [r4, #61]	; 0x3d
   1af18:	mov	r0, r8
   1af1c:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1af20:	str	r0, [r4, #32]
   1af24:	mov	r0, r6
   1af28:	sub	sp, fp, #24
   1af2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1af30:	sub	r6, r5, r7
   1af34:	ldr	r3, [r4, #32]
   1af38:	mov	r0, r8
   1af3c:	mov	r2, #0
   1af40:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1af44:	cmn	r7, r0
   1af48:	beq	1af24 <myhtml_data_process_state_ampersand_hash_data@@Base+0x120>
   1af4c:	add	r1, r0, r5
   1af50:	ldr	r2, [r4, #4]
   1af54:	cmp	r2, #0
   1af58:	beq	1af74 <myhtml_data_process_state_ampersand_hash_data@@Base+0x170>
   1af5c:	ldrb	r3, [r4, #61]	; 0x3d
   1af60:	stm	sp, {r2, r3}
   1af64:	add	r2, r9, r1
   1af68:	add	r0, r0, r7
   1af6c:	rsb	r3, r0, #0
   1af70:	b	1aefc <myhtml_data_process_state_ampersand_hash_data@@Base+0xf8>
   1af74:	add	r1, r9, r1
   1af78:	add	r0, r0, r7
   1af7c:	rsb	r2, r0, #0
   1af80:	b	1af14 <myhtml_data_process_state_ampersand_hash_data@@Base+0x110>
   1af84:	andeq	r1, lr, ip, asr #15
   1af88:			; <UNDEFINED> instruction: 0x000fcab4

0001af8c <myhtml_data_process_state_ampersand_data@@Base>:
   1af8c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1af90:	add	fp, sp, #24
   1af94:	sub	sp, sp, #16
   1af98:	mov	r7, r3
   1af9c:	mov	r8, r2
   1afa0:	mov	r5, r1
   1afa4:	mov	r4, r0
   1afa8:	str	r3, [sp, #12]
   1afac:	mov	r6, r0
   1afb0:	ldr	r0, [r6, #44]!	; 0x2c
   1afb4:	ldr	r0, [r0, #4]
   1afb8:	str	r6, [sp]
   1afbc:	ldr	r3, [fp, #8]
   1afc0:	add	r2, sp, #12
   1afc4:	mov	r1, r8
   1afc8:	bl	11bd8 <myhtml_charef_find_by_pos@plt>
   1afcc:	mov	r9, r0
   1afd0:	ldr	r0, [r6, #12]
   1afd4:	cmp	r0, #0
   1afd8:	beq	1b004 <myhtml_data_process_state_ampersand_data@@Base+0x78>
   1afdc:	ldr	r0, [pc, #456]	; 1b1ac <myhtml_data_process_state_ampersand_data@@Base+0x220>
   1afe0:	ldr	r0, [pc, r0]
   1afe4:	str	r0, [r4]
   1afe8:	ldr	r0, [sp, #12]
   1afec:	ldrb	r1, [r8, r0]
   1aff0:	cmp	r1, #59	; 0x3b
   1aff4:	bne	1b010 <myhtml_data_process_state_ampersand_data@@Base+0x84>
   1aff8:	add	r0, r0, #1
   1affc:	str	r0, [sp, #12]
   1b000:	b	1b038 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1b004:	add	r1, r8, r7
   1b008:	ldr	r0, [sp, #12]
   1b00c:	b	1b118 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   1b010:	ldrb	r2, [r4, #60]	; 0x3c
   1b014:	cmp	r2, #0
   1b018:	beq	1b038 <myhtml_data_process_state_ampersand_data@@Base+0xac>
   1b01c:	cmp	r1, #61	; 0x3d
   1b020:	beq	1b114 <myhtml_data_process_state_ampersand_data@@Base+0x188>
   1b024:	ldr	r2, [pc, #388]	; 1b1b0 <myhtml_data_process_state_ampersand_data@@Base+0x224>
   1b028:	add	r2, pc, r2
   1b02c:	ldr	r1, [r2, r1, lsl #2]
   1b030:	cmp	r1, #255	; 0xff
   1b034:	bne	1b114 <myhtml_data_process_state_ampersand_data@@Base+0x188>
   1b038:	ldr	r0, [r9, #20]
   1b03c:	cmp	r0, #0
   1b040:	beq	1b0c0 <myhtml_data_process_state_ampersand_data@@Base+0x134>
   1b044:	ldr	r0, [r9, #20]
   1b048:	cmp	r0, #0
   1b04c:	beq	1b0a8 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   1b050:	add	r7, r9, #12
   1b054:	mov	r6, #0
   1b058:	b	1b08c <myhtml_data_process_state_ampersand_data@@Base+0x100>
   1b05c:	ldr	r0, [r7, r6, lsl #2]
   1b060:	ldr	r1, [r4, #36]	; 0x24
   1b064:	ldr	r2, [r5]
   1b068:	add	r1, r2, r1
   1b06c:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b070:	ldr	r1, [r4, #36]	; 0x24
   1b074:	add	r0, r1, r0
   1b078:	str	r0, [r4, #36]	; 0x24
   1b07c:	add	r6, r6, #1
   1b080:	ldr	r0, [r9, #20]
   1b084:	cmp	r6, r0
   1b088:	bcs	1b0a8 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   1b08c:	ldmib	r5, {r0, r1}
   1b090:	add	r1, r1, #5
   1b094:	cmp	r1, r0
   1b098:	bcc	1b05c <myhtml_data_process_state_ampersand_data@@Base+0xd0>
   1b09c:	mov	r0, r5
   1b0a0:	bl	11d7c <mycore_string_realloc@plt>
   1b0a4:	b	1b05c <myhtml_data_process_state_ampersand_data@@Base+0xd0>
   1b0a8:	ldr	r0, [r4, #36]	; 0x24
   1b0ac:	str	r0, [r5, #8]
   1b0b0:	ldr	r1, [r5]
   1b0b4:	mov	r2, #0
   1b0b8:	strb	r2, [r1, r0]
   1b0bc:	b	1b198 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1b0c0:	add	r1, r8, r7
   1b0c4:	ldr	r0, [sp, #12]
   1b0c8:	sub	r2, r0, r7
   1b0cc:	ldr	r3, [r4, #32]
   1b0d0:	mov	r0, r5
   1b0d4:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1b0d8:	add	r0, r0, r7
   1b0dc:	ldr	r3, [sp, #12]
   1b0e0:	cmp	r3, r0
   1b0e4:	beq	1b198 <myhtml_data_process_state_ampersand_data@@Base+0x20c>
   1b0e8:	ldr	r1, [r4, #4]
   1b0ec:	cmp	r1, #0
   1b0f0:	beq	1b180 <myhtml_data_process_state_ampersand_data@@Base+0x1f4>
   1b0f4:	ldrb	r2, [r4, #61]	; 0x3d
   1b0f8:	stm	sp, {r1, r2}
   1b0fc:	add	r2, r8, r0
   1b100:	sub	r3, r3, r0
   1b104:	add	r1, r4, #8
   1b108:	mov	r0, r5
   1b10c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b110:	b	1b194 <myhtml_data_process_state_ampersand_data@@Base+0x208>
   1b114:	add	r1, r8, r7
   1b118:	sub	r2, r0, r7
   1b11c:	ldr	r3, [r4, #32]
   1b120:	mov	r0, r5
   1b124:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1b128:	add	r0, r0, r7
   1b12c:	ldr	r3, [sp, #12]
   1b130:	cmp	r3, r0
   1b134:	beq	1b1a0 <myhtml_data_process_state_ampersand_data@@Base+0x214>
   1b138:	ldr	r1, [r4, #4]
   1b13c:	cmp	r1, #0
   1b140:	beq	1b164 <myhtml_data_process_state_ampersand_data@@Base+0x1d8>
   1b144:	ldrb	r2, [r4, #61]	; 0x3d
   1b148:	stm	sp, {r1, r2}
   1b14c:	add	r2, r8, r0
   1b150:	sub	r3, r3, r0
   1b154:	add	r1, r4, #8
   1b158:	mov	r0, r5
   1b15c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1b160:	b	1b178 <myhtml_data_process_state_ampersand_data@@Base+0x1ec>
   1b164:	add	r1, r8, r0
   1b168:	sub	r2, r3, r0
   1b16c:	ldrb	r3, [r4, #61]	; 0x3d
   1b170:	mov	r0, r5
   1b174:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1b178:	str	r0, [r4, #32]
   1b17c:	b	1b1a0 <myhtml_data_process_state_ampersand_data@@Base+0x214>
   1b180:	add	r1, r8, r0
   1b184:	sub	r2, r3, r0
   1b188:	ldrb	r3, [r4, #61]	; 0x3d
   1b18c:	mov	r0, r5
   1b190:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1b194:	str	r0, [r4, #32]
   1b198:	mov	r0, #0
   1b19c:	str	r0, [r4, #48]	; 0x30
   1b1a0:	ldr	r0, [sp, #12]
   1b1a4:	sub	sp, fp, #24
   1b1a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b1ac:	andeq	ip, pc, r0, ror #18
   1b1b0:	andeq	r1, lr, r4, ror #3

0001b1b4 <myhtml_data_process_state_end@@Base>:
   1b1b4:	push	{r4, r5, r6, sl, fp, lr}
   1b1b8:	add	fp, sp, #16
   1b1bc:	mov	r4, r1
   1b1c0:	mov	r5, r0
   1b1c4:	ldmib	r1, {r0, r1}
   1b1c8:	add	r1, r1, #5
   1b1cc:	cmp	r1, r0
   1b1d0:	bcc	1b1dc <myhtml_data_process_state_end@@Base+0x28>
   1b1d4:	mov	r0, r4
   1b1d8:	bl	11d7c <mycore_string_realloc@plt>
   1b1dc:	ldr	r1, [r5, #40]	; 0x28
   1b1e0:	cmp	r1, #159	; 0x9f
   1b1e4:	bhi	1b1fc <myhtml_data_process_state_end@@Base+0x48>
   1b1e8:	ldr	r0, [pc, #84]	; 1b244 <myhtml_data_process_state_end@@Base+0x90>
   1b1ec:	add	r0, pc, r0
   1b1f0:	ldr	r0, [r0, r1, lsl #2]
   1b1f4:	str	r0, [r5, #40]	; 0x28
   1b1f8:	b	1b218 <myhtml_data_process_state_end@@Base+0x64>
   1b1fc:	mov	r2, r1
   1b200:	bfc	r2, #0, #11
   1b204:	movw	r0, #65533	; 0xfffd
   1b208:	cmp	r2, #55296	; 0xd800
   1b20c:	beq	1b1f4 <myhtml_data_process_state_end@@Base+0x40>
   1b210:	cmp	r1, #1114112	; 0x110000
   1b214:	strcs	r0, [r5, #40]	; 0x28
   1b218:	ldr	r6, [r5, #36]	; 0x24
   1b21c:	ldr	r0, [r5, #40]	; 0x28
   1b220:	ldr	r1, [r4]
   1b224:	add	r1, r1, r6
   1b228:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b22c:	add	r0, r0, r6
   1b230:	str	r0, [r4, #8]
   1b234:	ldr	r1, [r4]
   1b238:	mov	r2, #0
   1b23c:	strb	r2, [r1, r0]
   1b240:	pop	{r4, r5, r6, sl, fp, pc}
   1b244:	andeq	r1, lr, r0, lsr #12

0001b248 <myhtml_data_process@@Base>:
   1b248:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b24c:	add	fp, sp, #24
   1b250:	sub	sp, sp, #8
   1b254:	cmp	r3, #0
   1b258:	beq	1b294 <myhtml_data_process@@Base+0x4c>
   1b25c:	mov	r4, r3
   1b260:	mov	r8, r2
   1b264:	mov	r6, r1
   1b268:	mov	r7, r0
   1b26c:	mov	r3, #0
   1b270:	ldr	r5, [r7]
   1b274:	str	r4, [sp]
   1b278:	mov	r0, r7
   1b27c:	mov	r1, r6
   1b280:	mov	r2, r8
   1b284:	blx	r5
   1b288:	mov	r3, r0
   1b28c:	cmp	r0, r4
   1b290:	bcc	1b270 <myhtml_data_process@@Base+0x28>
   1b294:	sub	sp, fp, #24
   1b298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001b29c <myhtml_data_process_end@@Base>:
   1b29c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b2a0:	add	fp, sp, #24
   1b2a4:	mov	r4, r1
   1b2a8:	mov	r5, r0
   1b2ac:	ldr	r0, [r0]
   1b2b0:	ldr	r1, [pc, #236]	; 1b3a4 <myhtml_data_process_end@@Base+0x108>
   1b2b4:	ldr	r1, [pc, r1]
   1b2b8:	cmp	r0, r1
   1b2bc:	beq	1b2f8 <myhtml_data_process_end@@Base+0x5c>
   1b2c0:	ldr	r1, [pc, #224]	; 1b3a8 <myhtml_data_process_end@@Base+0x10c>
   1b2c4:	ldr	r1, [pc, r1]
   1b2c8:	cmp	r0, r1
   1b2cc:	beq	1b368 <myhtml_data_process_end@@Base+0xcc>
   1b2d0:	ldr	r1, [pc, #212]	; 1b3ac <myhtml_data_process_end@@Base+0x110>
   1b2d4:	ldr	r1, [pc, r1]
   1b2d8:	cmp	r0, r1
   1b2dc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b2e0:	ldr	r0, [r4, #8]
   1b2e4:	ldr	r1, [r5, #36]	; 0x24
   1b2e8:	add	r1, r1, #3
   1b2ec:	cmp	r0, r1
   1b2f0:	bne	1b37c <myhtml_data_process_end@@Base+0xe0>
   1b2f4:	b	1b3a0 <myhtml_data_process_end@@Base+0x104>
   1b2f8:	ldr	r6, [r5, #48]	; 0x30
   1b2fc:	cmp	r6, #0
   1b300:	beq	1b3a0 <myhtml_data_process_end@@Base+0x104>
   1b304:	ldr	r0, [r6, #20]
   1b308:	cmp	r0, #0
   1b30c:	beq	1b38c <myhtml_data_process_end@@Base+0xf0>
   1b310:	add	r8, r6, #12
   1b314:	mov	r7, #0
   1b318:	b	1b34c <myhtml_data_process_end@@Base+0xb0>
   1b31c:	ldr	r0, [r8, r7, lsl #2]
   1b320:	ldr	r1, [r5, #36]	; 0x24
   1b324:	ldr	r2, [r4]
   1b328:	add	r1, r2, r1
   1b32c:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1b330:	ldr	r1, [r5, #36]	; 0x24
   1b334:	add	r0, r1, r0
   1b338:	str	r0, [r5, #36]	; 0x24
   1b33c:	add	r7, r7, #1
   1b340:	ldr	r0, [r6, #20]
   1b344:	cmp	r7, r0
   1b348:	bcs	1b38c <myhtml_data_process_end@@Base+0xf0>
   1b34c:	ldmib	r4, {r0, r1}
   1b350:	add	r1, r1, #5
   1b354:	cmp	r1, r0
   1b358:	bcc	1b31c <myhtml_data_process_end@@Base+0x80>
   1b35c:	mov	r0, r4
   1b360:	bl	11d7c <mycore_string_realloc@plt>
   1b364:	b	1b31c <myhtml_data_process_end@@Base+0x80>
   1b368:	ldr	r0, [r4, #8]
   1b36c:	ldr	r1, [r5, #36]	; 0x24
   1b370:	add	r1, r1, #2
   1b374:	cmp	r0, r1
   1b378:	beq	1b3a0 <myhtml_data_process_end@@Base+0x104>
   1b37c:	mov	r0, r5
   1b380:	mov	r1, r4
   1b384:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b388:	b	1b1b4 <myhtml_data_process_state_end@@Base>
   1b38c:	ldr	r0, [r5, #36]	; 0x24
   1b390:	str	r0, [r4, #8]
   1b394:	ldr	r1, [r4]
   1b398:	mov	r2, #0
   1b39c:	strb	r2, [r1, r0]
   1b3a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b3a4:	andeq	ip, pc, r4, lsr #10
   1b3a8:	andeq	ip, pc, r4, ror #12
   1b3ac:	andeq	ip, pc, r0, lsr r4	; <UNPREDICTABLE>

0001b3b0 <myhtml_init_marker@@Base>:
   1b3b0:	push	{r4, sl, fp, lr}
   1b3b4:	add	fp, sp, #8
   1b3b8:	mov	r4, r0
   1b3bc:	mov	r0, #44	; 0x2c
   1b3c0:	bl	1204c <mycore_malloc@plt>
   1b3c4:	str	r0, [r4, #36]	; 0x24
   1b3c8:	cmp	r0, #0
   1b3cc:	popeq	{r4, sl, fp, pc}
   1b3d0:	pop	{r4, sl, fp, lr}
   1b3d4:	b	12430 <myhtml_tree_node_clean@plt>

0001b3d8 <myhtml_destroy_marker@@Base>:
   1b3d8:	ldr	r0, [r0, #36]	; 0x24
   1b3dc:	cmp	r0, #0
   1b3e0:	bxeq	lr
   1b3e4:	b	12184 <mycore_free@plt>

0001b3e8 <myhtml_stream_create@@Base>:
   1b3e8:	push	{r4, r5, r6, r7, fp, lr}
   1b3ec:	add	fp, sp, #16
   1b3f0:	mov	r4, r1
   1b3f4:	mov	r5, r0
   1b3f8:	cmp	r2, #0
   1b3fc:	beq	1b458 <myhtml_stream_create@@Base+0x70>
   1b400:	mov	r6, r3
   1b404:	mov	r7, r2
   1b408:	bl	112c0 <mythread_create@plt>
   1b40c:	str	r0, [r5]
   1b410:	cmp	r0, #0
   1b414:	moveq	r1, #9
   1b418:	streq	r1, [r4]
   1b41c:	mov	r1, #0
   1b420:	mov	r2, r7
   1b424:	mov	r3, r6
   1b428:	bl	1243c <mythread_init@plt>
   1b42c:	str	r0, [r4]
   1b430:	cmp	r0, #0
   1b434:	beq	1b450 <myhtml_stream_create@@Base+0x68>
   1b438:	ldr	r0, [r5]
   1b43c:	mov	r1, #0
   1b440:	mov	r2, #0
   1b444:	mov	r3, #1
   1b448:	bl	11dc4 <mythread_destroy@plt>
   1b44c:	str	r0, [r5]
   1b450:	ldr	r0, [r4]
   1b454:	pop	{r4, r5, r6, r7, fp, pc}
   1b458:	mov	r0, #0
   1b45c:	str	r0, [r5]
   1b460:	str	r0, [r4]
   1b464:	pop	{r4, r5, r6, r7, fp, pc}

0001b468 <myhtml_batch_create@@Base>:
   1b468:	push	{r4, r5, r6, r7, fp, lr}
   1b46c:	add	fp, sp, #16
   1b470:	mov	r4, r1
   1b474:	mov	r5, r0
   1b478:	cmp	r2, #0
   1b47c:	beq	1b4fc <myhtml_batch_create@@Base+0x94>
   1b480:	mov	r6, r3
   1b484:	mov	r7, r2
   1b488:	bl	112c0 <mythread_create@plt>
   1b48c:	str	r0, [r5, #4]
   1b490:	ldr	r0, [r5]
   1b494:	cmp	r0, #0
   1b498:	bne	1b4bc <myhtml_batch_create@@Base+0x54>
   1b49c:	mov	r0, #0
   1b4a0:	mov	r1, #0
   1b4a4:	mov	r2, #0
   1b4a8:	mov	r3, #1
   1b4ac:	bl	11dc4 <mythread_destroy@plt>
   1b4b0:	str	r0, [r5]
   1b4b4:	mov	r0, #9
   1b4b8:	str	r0, [r4]
   1b4bc:	ldr	r0, [r5, #4]
   1b4c0:	mov	r1, #1
   1b4c4:	mov	r2, r7
   1b4c8:	mov	r3, r6
   1b4cc:	bl	1243c <mythread_init@plt>
   1b4d0:	str	r0, [r4]
   1b4d4:	cmp	r0, #0
   1b4d8:	beq	1b4f4 <myhtml_batch_create@@Base+0x8c>
   1b4dc:	ldr	r0, [r5, #4]
   1b4e0:	mov	r1, #0
   1b4e4:	mov	r2, #0
   1b4e8:	mov	r3, #1
   1b4ec:	bl	11dc4 <mythread_destroy@plt>
   1b4f0:	str	r0, [r5, #4]
   1b4f4:	ldr	r0, [r4]
   1b4f8:	pop	{r4, r5, r6, r7, fp, pc}
   1b4fc:	mov	r0, #0
   1b500:	str	r0, [r5, #4]
   1b504:	str	r0, [r4]
   1b508:	pop	{r4, r5, r6, r7, fp, pc}

0001b50c <myhtml_create_stream_and_batch@@Base>:
   1b50c:	push	{r4, r5, r6, sl, fp, lr}
   1b510:	add	fp, sp, #16
   1b514:	sub	sp, sp, #8
   1b518:	mov	r6, r2
   1b51c:	mov	r5, r1
   1b520:	mov	r4, r0
   1b524:	add	r1, sp, #4
   1b528:	mov	r2, r5
   1b52c:	mov	r3, #0
   1b530:	bl	1186c <myhtml_stream_create@plt>
   1b534:	cmp	r0, #0
   1b538:	bne	1b570 <myhtml_create_stream_and_batch@@Base+0x64>
   1b53c:	add	r1, sp, #4
   1b540:	mov	r0, r4
   1b544:	mov	r2, r6
   1b548:	mov	r3, r5
   1b54c:	bl	119c8 <myhtml_batch_create@plt>
   1b550:	cmp	r0, #0
   1b554:	beq	1b570 <myhtml_create_stream_and_batch@@Base+0x64>
   1b558:	ldr	r0, [r4]
   1b55c:	mov	r1, #0
   1b560:	mov	r2, #0
   1b564:	mov	r3, #1
   1b568:	bl	11dc4 <mythread_destroy@plt>
   1b56c:	str	r0, [r4]
   1b570:	ldr	r0, [sp, #4]
   1b574:	sub	sp, fp, #16
   1b578:	pop	{r4, r5, r6, sl, fp, pc}

0001b57c <myhtml_create@@Base>:
   1b57c:	mov	r0, #1
   1b580:	mov	r1, #40	; 0x28
   1b584:	b	113a4 <mycore_calloc@plt>

0001b588 <myhtml_init@@Base>:
   1b588:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b58c:	add	fp, sp, #24
   1b590:	sub	sp, sp, #8
   1b594:	mov	r4, r2
   1b598:	mov	r6, r1
   1b59c:	mov	r5, r0
   1b5a0:	str	r1, [r0, #32]
   1b5a4:	bl	11ea8 <myhtml_init_marker@plt>
   1b5a8:	mov	r0, r5
   1b5ac:	bl	11188 <myhtml_tokenizer_state_init@plt>
   1b5b0:	str	r0, [sp, #4]
   1b5b4:	cmp	r0, #0
   1b5b8:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b5bc:	mov	r0, r5
   1b5c0:	bl	11fb0 <myhtml_rules_init@plt>
   1b5c4:	str	r0, [sp, #4]
   1b5c8:	cmp	r0, #0
   1b5cc:	beq	1b5d8 <myhtml_init@@Base+0x50>
   1b5d0:	sub	sp, fp, #24
   1b5d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b5d8:	cmp	r4, #0
   1b5dc:	movweq	r4, #1
   1b5e0:	cmp	r6, #2
   1b5e4:	beq	1b610 <myhtml_init@@Base+0x88>
   1b5e8:	cmp	r6, #1
   1b5ec:	bne	1b680 <myhtml_init@@Base+0xf8>
   1b5f0:	mov	r0, r5
   1b5f4:	mov	r1, #0
   1b5f8:	mov	r2, #0
   1b5fc:	bl	11914 <myhtml_create_stream_and_batch@plt>
   1b600:	str	r0, [sp, #4]
   1b604:	cmp	r0, #0
   1b608:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b60c:	b	1b65c <myhtml_init@@Base+0xd4>
   1b610:	mov	r0, r5
   1b614:	mov	r1, #1
   1b618:	mov	r2, #0
   1b61c:	bl	11914 <myhtml_create_stream_and_batch@plt>
   1b620:	str	r0, [sp, #4]
   1b624:	cmp	r0, #0
   1b628:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b62c:	add	r0, sp, #4
   1b630:	bl	11bf0 <mythread_queue_list_create@plt>
   1b634:	ldr	r3, [r5]
   1b638:	str	r0, [r3, #16]
   1b63c:	ldr	r1, [pc, #248]	; 1b73c <myhtml_init@@Base+0x1b4>
   1b640:	ldr	r1, [pc, r1]
   1b644:	ldr	r2, [pc, #244]	; 1b740 <myhtml_init@@Base+0x1b8>
   1b648:	ldr	r2, [pc, r2]
   1b64c:	mov	r0, r3
   1b650:	mov	r3, #4
   1b654:	bl	11cd4 <myhread_entry_create@plt>
   1b658:	str	r0, [sp, #4]
   1b65c:	mov	r0, #0
   1b660:	ldm	r5, {r1, r2}
   1b664:	str	r1, [r5, #8]
   1b668:	str	r2, [r5, #12]
   1b66c:	str	r0, [r5, #16]
   1b670:	str	r4, [r5, #20]
   1b674:	ldr	r0, [sp, #4]
   1b678:	sub	sp, fp, #24
   1b67c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b680:	cmp	r4, #2
   1b684:	movls	r4, #2
   1b688:	sub	r2, r4, #1
   1b68c:	mov	r0, r5
   1b690:	mov	r1, #1
   1b694:	bl	11914 <myhtml_create_stream_and_batch@plt>
   1b698:	str	r0, [sp, #4]
   1b69c:	cmp	r0, #0
   1b6a0:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b6a4:	add	r0, sp, #4
   1b6a8:	bl	11bf0 <mythread_queue_list_create@plt>
   1b6ac:	ldr	r3, [r5]
   1b6b0:	str	r0, [r3, #16]
   1b6b4:	ldr	r1, [r5, #4]
   1b6b8:	str	r0, [r1, #16]
   1b6bc:	ldr	r1, [pc, #128]	; 1b744 <myhtml_init@@Base+0x1bc>
   1b6c0:	ldr	r1, [pc, r1]
   1b6c4:	ldr	r2, [pc, #124]	; 1b748 <myhtml_init@@Base+0x1c0>
   1b6c8:	ldr	r2, [pc, r2]
   1b6cc:	mov	r0, r3
   1b6d0:	mov	r3, #4
   1b6d4:	bl	11cd4 <myhread_entry_create@plt>
   1b6d8:	str	r0, [sp, #4]
   1b6dc:	cmp	r0, #0
   1b6e0:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b6e4:	ldr	r0, [r5, #4]
   1b6e8:	ldr	r1, [r0, #8]
   1b6ec:	cmp	r1, #0
   1b6f0:	beq	1b65c <myhtml_init@@Base+0xd4>
   1b6f4:	mov	r6, #0
   1b6f8:	ldr	r8, [pc, #76]	; 1b74c <myhtml_init@@Base+0x1c4>
   1b6fc:	ldr	r8, [pc, r8]
   1b700:	ldr	r7, [pc, #72]	; 1b750 <myhtml_init@@Base+0x1c8>
   1b704:	ldr	r7, [pc, r7]
   1b708:	mov	r1, r8
   1b70c:	mov	r2, r7
   1b710:	mov	r3, #4
   1b714:	bl	11cd4 <myhread_entry_create@plt>
   1b718:	str	r0, [sp, #4]
   1b71c:	cmp	r0, #0
   1b720:	bne	1b5d0 <myhtml_init@@Base+0x48>
   1b724:	add	r6, r6, #1
   1b728:	ldr	r0, [r5, #4]
   1b72c:	ldr	r1, [r0, #8]
   1b730:	cmp	r6, r1
   1b734:	bcc	1b708 <myhtml_init@@Base+0x180>
   1b738:	b	1b65c <myhtml_init@@Base+0xd4>
   1b73c:	andeq	ip, pc, ip, lsl #1
   1b740:	muleq	pc, r0, r0	; <UNPREDICTABLE>
   1b744:	andeq	ip, pc, ip
   1b748:	andeq	ip, pc, ip, lsl #5
   1b74c:	andeq	fp, pc, r4, asr #31
   1b750:	ldrdeq	fp, [pc], -ip

0001b754 <myhtml_clean@@Base>:
   1b754:	bx	lr

0001b758 <myhtml_destroy@@Base>:
   1b758:	cmp	r0, #0
   1b75c:	beq	1b804 <myhtml_destroy@@Base+0xac>
   1b760:	push	{r4, r5, fp, lr}
   1b764:	add	fp, sp, #8
   1b768:	mov	r4, r0
   1b76c:	bl	11bc0 <myhtml_destroy_marker@plt>
   1b770:	ldr	r0, [r4]
   1b774:	cmp	r0, #0
   1b778:	beq	1b7e0 <myhtml_destroy@@Base+0x88>
   1b77c:	ldr	r5, [r0, #16]
   1b780:	cmp	r5, #0
   1b784:	beq	1b790 <myhtml_destroy@@Base+0x38>
   1b788:	mov	r1, r5
   1b78c:	bl	12190 <mythread_queue_list_wait_for_done@plt>
   1b790:	ldr	r0, [r4]
   1b794:	ldr	r1, [pc, #112]	; 1b80c <myhtml_destroy@@Base+0xb4>
   1b798:	ldr	r1, [pc, r1]
   1b79c:	mov	r2, #0
   1b7a0:	mov	r3, #1
   1b7a4:	bl	11dc4 <mythread_destroy@plt>
   1b7a8:	str	r0, [r4]
   1b7ac:	ldr	r0, [r4, #4]
   1b7b0:	cmp	r0, #0
   1b7b4:	beq	1b7d0 <myhtml_destroy@@Base+0x78>
   1b7b8:	ldr	r1, [pc, #80]	; 1b810 <myhtml_destroy@@Base+0xb8>
   1b7bc:	ldr	r1, [pc, r1]
   1b7c0:	mov	r2, #0
   1b7c4:	mov	r3, #1
   1b7c8:	bl	11dc4 <mythread_destroy@plt>
   1b7cc:	str	r0, [r4, #4]
   1b7d0:	cmp	r5, #0
   1b7d4:	beq	1b7e0 <myhtml_destroy@@Base+0x88>
   1b7d8:	mov	r0, r5
   1b7dc:	bl	115a8 <mythread_queue_list_destroy@plt>
   1b7e0:	mov	r0, r4
   1b7e4:	bl	1156c <myhtml_tokenizer_state_destroy@plt>
   1b7e8:	ldr	r0, [r4, #28]
   1b7ec:	cmp	r0, #0
   1b7f0:	beq	1b7f8 <myhtml_destroy@@Base+0xa0>
   1b7f4:	bl	12184 <mycore_free@plt>
   1b7f8:	mov	r0, r4
   1b7fc:	bl	12184 <mycore_free@plt>
   1b800:	pop	{r4, r5, fp, lr}
   1b804:	mov	r0, #0
   1b808:	bx	lr
   1b80c:	andeq	ip, pc, ip, asr r0	; <UNPREDICTABLE>
   1b810:	andeq	ip, pc, r8, lsr r0	; <UNPREDICTABLE>

0001b814 <myhtml_parse@@Base>:
   1b814:	push	{r4, r5, r6, r7, fp, lr}
   1b818:	add	fp, sp, #16
   1b81c:	mov	r5, r3
   1b820:	mov	r6, r2
   1b824:	mov	r7, r1
   1b828:	mov	r4, r0
   1b82c:	ldr	r0, [r0, #180]	; 0xb4
   1b830:	tst	r0, #32
   1b834:	beq	1b840 <myhtml_parse@@Base+0x2c>
   1b838:	mov	r0, r4
   1b83c:	bl	11b00 <myhtml_tree_clean@plt>
   1b840:	mov	r0, r4
   1b844:	mov	r1, r7
   1b848:	bl	11ad0 <myhtml_encoding_set@plt>
   1b84c:	mov	r0, r4
   1b850:	mov	r1, r6
   1b854:	mov	r2, r5
   1b858:	bl	115cc <myhtml_tokenizer_begin@plt>
   1b85c:	cmp	r0, #0
   1b860:	popne	{r4, r5, r6, r7, fp, pc}
   1b864:	mov	r0, r4
   1b868:	pop	{r4, r5, r6, r7, fp, lr}
   1b86c:	b	116c8 <myhtml_tokenizer_end@plt>

0001b870 <myhtml_encoding_set@@Base>:
   1b870:	cmp	r1, #41	; 0x29
   1b874:	strls	r1, [r0, #200]	; 0xc8
   1b878:	strls	r1, [r0, #204]	; 0xcc
   1b87c:	bx	lr

0001b880 <myhtml_parse_fragment@@Base>:
   1b880:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b884:	add	fp, sp, #24
   1b888:	mov	r8, r3
   1b88c:	mov	r9, r2
   1b890:	mov	r7, r1
   1b894:	mov	r4, r0
   1b898:	ldr	r0, [r0, #180]	; 0xb4
   1b89c:	ldr	r5, [fp, #12]
   1b8a0:	ldr	r6, [fp, #8]
   1b8a4:	tst	r0, #32
   1b8a8:	beq	1b8b4 <myhtml_parse_fragment@@Base+0x34>
   1b8ac:	mov	r0, r4
   1b8b0:	bl	11b00 <myhtml_tree_clean@plt>
   1b8b4:	cmp	r6, #0
   1b8b8:	movweq	r6, #42	; 0x2a
   1b8bc:	cmp	r5, #0
   1b8c0:	movweq	r5, #1
   1b8c4:	mov	r0, r4
   1b8c8:	mov	r1, r6
   1b8cc:	mov	r2, r5
   1b8d0:	bl	11164 <myhtml_tokenizer_fragment_init@plt>
   1b8d4:	cmp	r0, #0
   1b8d8:	beq	1b904 <myhtml_parse_fragment@@Base+0x84>
   1b8dc:	mov	r0, r4
   1b8e0:	mov	r1, r7
   1b8e4:	bl	11ad0 <myhtml_encoding_set@plt>
   1b8e8:	mov	r0, r4
   1b8ec:	mov	r1, r9
   1b8f0:	mov	r2, r8
   1b8f4:	bl	115cc <myhtml_tokenizer_begin@plt>
   1b8f8:	cmp	r0, #0
   1b8fc:	beq	1b90c <myhtml_parse_fragment@@Base+0x8c>
   1b900:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b904:	movw	r0, #37165	; 0x912d
   1b908:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b90c:	mov	r0, r4
   1b910:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b914:	b	116c8 <myhtml_tokenizer_end@plt>

0001b918 <myhtml_parse_single@@Base>:
   1b918:	push	{r4, r5, r6, r7, fp, lr}
   1b91c:	add	fp, sp, #16
   1b920:	mov	r5, r3
   1b924:	mov	r6, r2
   1b928:	mov	r7, r1
   1b92c:	mov	r4, r0
   1b930:	ldr	r0, [r0, #180]	; 0xb4
   1b934:	tst	r0, #32
   1b938:	beq	1b944 <myhtml_parse_single@@Base+0x2c>
   1b93c:	mov	r0, r4
   1b940:	bl	11b00 <myhtml_tree_clean@plt>
   1b944:	ldr	r0, [r4, #180]	; 0xb4
   1b948:	orr	r0, r0, #16
   1b94c:	str	r0, [r4, #180]	; 0xb4
   1b950:	mov	r0, r4
   1b954:	mov	r1, r7
   1b958:	bl	11ad0 <myhtml_encoding_set@plt>
   1b95c:	mov	r0, r4
   1b960:	mov	r1, r6
   1b964:	mov	r2, r5
   1b968:	bl	115cc <myhtml_tokenizer_begin@plt>
   1b96c:	cmp	r0, #0
   1b970:	popne	{r4, r5, r6, r7, fp, pc}
   1b974:	mov	r0, r4
   1b978:	pop	{r4, r5, r6, r7, fp, lr}
   1b97c:	b	116c8 <myhtml_tokenizer_end@plt>

0001b980 <myhtml_parse_fragment_single@@Base>:
   1b980:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b984:	add	fp, sp, #24
   1b988:	mov	r8, r3
   1b98c:	mov	r9, r2
   1b990:	mov	r7, r1
   1b994:	mov	r4, r0
   1b998:	ldr	r0, [r0, #180]	; 0xb4
   1b99c:	ldr	r5, [fp, #12]
   1b9a0:	ldr	r6, [fp, #8]
   1b9a4:	tst	r0, #32
   1b9a8:	beq	1b9b4 <myhtml_parse_fragment_single@@Base+0x34>
   1b9ac:	mov	r0, r4
   1b9b0:	bl	11b00 <myhtml_tree_clean@plt>
   1b9b4:	ldr	r0, [r4, #180]	; 0xb4
   1b9b8:	orr	r0, r0, #16
   1b9bc:	str	r0, [r4, #180]	; 0xb4
   1b9c0:	cmp	r6, #0
   1b9c4:	movweq	r6, #42	; 0x2a
   1b9c8:	cmp	r5, #0
   1b9cc:	movweq	r5, #1
   1b9d0:	mov	r0, r4
   1b9d4:	mov	r1, r6
   1b9d8:	mov	r2, r5
   1b9dc:	bl	11164 <myhtml_tokenizer_fragment_init@plt>
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1ba10 <myhtml_parse_fragment_single@@Base+0x90>
   1b9e8:	mov	r0, r4
   1b9ec:	mov	r1, r7
   1b9f0:	bl	11ad0 <myhtml_encoding_set@plt>
   1b9f4:	mov	r0, r4
   1b9f8:	mov	r1, r9
   1b9fc:	mov	r2, r8
   1ba00:	bl	115cc <myhtml_tokenizer_begin@plt>
   1ba04:	cmp	r0, #0
   1ba08:	beq	1ba18 <myhtml_parse_fragment_single@@Base+0x98>
   1ba0c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ba10:	movw	r0, #37165	; 0x912d
   1ba14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ba18:	mov	r0, r4
   1ba1c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ba20:	b	116c8 <myhtml_tokenizer_end@plt>

0001ba24 <myhtml_parse_chunk@@Base>:
   1ba24:	push	{r4, r5, r6, sl, fp, lr}
   1ba28:	add	fp, sp, #16
   1ba2c:	mov	r4, r2
   1ba30:	mov	r5, r1
   1ba34:	mov	r6, r0
   1ba38:	ldr	r0, [r0, #180]	; 0xb4
   1ba3c:	tst	r0, #32
   1ba40:	beq	1ba4c <myhtml_parse_chunk@@Base+0x28>
   1ba44:	mov	r0, r6
   1ba48:	bl	11b00 <myhtml_tree_clean@plt>
   1ba4c:	mov	r0, r6
   1ba50:	mov	r1, r5
   1ba54:	mov	r2, r4
   1ba58:	pop	{r4, r5, r6, sl, fp, lr}
   1ba5c:	b	1153c <myhtml_tokenizer_chunk@plt>

0001ba60 <myhtml_parse_chunk_fragment@@Base>:
   1ba60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ba64:	add	fp, sp, #24
   1ba68:	mov	r7, r3
   1ba6c:	mov	r8, r2
   1ba70:	mov	r5, r1
   1ba74:	mov	r6, r0
   1ba78:	ldr	r0, [r0, #180]	; 0xb4
   1ba7c:	ldr	r4, [fp, #8]
   1ba80:	tst	r0, #32
   1ba84:	beq	1ba90 <myhtml_parse_chunk_fragment@@Base+0x30>
   1ba88:	mov	r0, r6
   1ba8c:	bl	11b00 <myhtml_tree_clean@plt>
   1ba90:	cmp	r7, #0
   1ba94:	movweq	r7, #42	; 0x2a
   1ba98:	cmp	r4, #0
   1ba9c:	movweq	r4, #1
   1baa0:	mov	r0, r6
   1baa4:	mov	r1, r7
   1baa8:	mov	r2, r4
   1baac:	bl	11164 <myhtml_tokenizer_fragment_init@plt>
   1bab0:	cmp	r0, #0
   1bab4:	beq	1bacc <myhtml_parse_chunk_fragment@@Base+0x6c>
   1bab8:	mov	r0, r6
   1babc:	mov	r1, r5
   1bac0:	mov	r2, r8
   1bac4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bac8:	b	1153c <myhtml_tokenizer_chunk@plt>
   1bacc:	movw	r0, #37165	; 0x912d
   1bad0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001bad4 <myhtml_parse_chunk_single@@Base>:
   1bad4:	ldr	r3, [r0, #180]	; 0xb4
   1bad8:	tst	r3, #16
   1badc:	bne	1baec <myhtml_parse_chunk_single@@Base+0x18>
   1bae0:	ldr	r3, [r0, #180]	; 0xb4
   1bae4:	orr	r3, r3, #16
   1bae8:	str	r3, [r0, #180]	; 0xb4
   1baec:	b	1ba24 <myhtml_parse_chunk@@Base>

0001baf0 <myhtml_parse_chunk_fragment_single@@Base>:
   1baf0:	ldr	ip, [r0, #180]	; 0xb4
   1baf4:	tst	ip, #16
   1baf8:	bne	1bb08 <myhtml_parse_chunk_fragment_single@@Base+0x18>
   1bafc:	ldr	ip, [r0, #180]	; 0xb4
   1bb00:	orr	ip, ip, #16
   1bb04:	str	ip, [r0, #180]	; 0xb4
   1bb08:	b	1ba60 <myhtml_parse_chunk_fragment@@Base>

0001bb0c <myhtml_parse_chunk_end@@Base>:
   1bb0c:	b	116c8 <myhtml_tokenizer_end@plt>

0001bb10 <myhtml_encoding_get@@Base>:
   1bb10:	ldr	r0, [r0, #200]	; 0xc8
   1bb14:	bx	lr

0001bb18 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1bb18:	push	{r4, r5, r6, sl, fp, lr}
   1bb1c:	add	fp, sp, #16
   1bb20:	cmp	r0, #0
   1bb24:	beq	1bba0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x88>
   1bb28:	mov	r4, r2
   1bb2c:	mov	r5, r1
   1bb30:	mov	r6, r0
   1bb34:	b	1bb58 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x40>
   1bb38:	ldr	r0, [r6, #20]
   1bb3c:	cmp	r0, #0
   1bb40:	movne	r1, r5
   1bb44:	movne	r2, r4
   1bb48:	blne	12004 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bb4c:	ldr	r6, [r6, #16]
   1bb50:	cmp	r6, #0
   1bb54:	beq	1bba0 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x88>
   1bb58:	ldr	r0, [r6, #4]
   1bb5c:	cmp	r0, r4
   1bb60:	bne	1bb38 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bb64:	ldr	r0, [r5]
   1bb68:	ldr	r1, [r5, #8]
   1bb6c:	str	r6, [r0, r1, lsl #2]
   1bb70:	add	r0, r1, #1
   1bb74:	str	r0, [r5, #8]
   1bb78:	ldr	r1, [r5, #4]
   1bb7c:	cmp	r0, r1
   1bb80:	bcc	1bb38 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bb84:	mov	r0, r5
   1bb88:	mov	r1, #1024	; 0x400
   1bb8c:	mov	r2, #0
   1bb90:	bl	121b4 <myhtml_collection_check_size@plt>
   1bb94:	cmp	r0, #0
   1bb98:	beq	1bb38 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bb9c:	pop	{r4, r5, r6, sl, fp, pc}
   1bba0:	mov	r0, #0
   1bba4:	pop	{r4, r5, r6, sl, fp, pc}

0001bba8 <myhtml_collection_check_size@@Base>:
   1bba8:	push	{r4, r5, r6, sl, fp, lr}
   1bbac:	add	fp, sp, #16
   1bbb0:	mov	r5, r0
   1bbb4:	ldr	r3, [r0, #4]
   1bbb8:	ldr	r0, [r0, #8]
   1bbbc:	add	r0, r0, r1
   1bbc0:	mov	r4, #0
   1bbc4:	cmp	r0, r3
   1bbc8:	bcc	1bbec <myhtml_collection_check_size@@Base+0x44>
   1bbcc:	add	r0, r2, r0
   1bbd0:	add	r6, r0, #1
   1bbd4:	lsl	r1, r6, #2
   1bbd8:	ldr	r0, [r5]
   1bbdc:	bl	110b0 <mycore_realloc@plt>
   1bbe0:	cmp	r0, #0
   1bbe4:	beq	1bbf4 <myhtml_collection_check_size@@Base+0x4c>
   1bbe8:	stm	r5, {r0, r6}
   1bbec:	mov	r0, r4
   1bbf0:	pop	{r4, r5, r6, sl, fp, pc}
   1bbf4:	mov	r4, #2
   1bbf8:	mov	r0, r4
   1bbfc:	pop	{r4, r5, r6, sl, fp, pc}

0001bc00 <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1bc00:	push	{r4, r5, r6, r7, fp, lr}
   1bc04:	add	fp, sp, #16
   1bc08:	sub	sp, sp, #8
   1bc0c:	cmp	r2, #0
   1bc10:	beq	1bc74 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x74>
   1bc14:	mov	r5, r3
   1bc18:	mov	r6, r2
   1bc1c:	mov	r4, r1
   1bc20:	ldr	r7, [fp, #8]
   1bc24:	mov	r0, #0
   1bc28:	str	r0, [sp, #4]
   1bc2c:	cmp	r1, #0
   1bc30:	beq	1bc7c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x7c>
   1bc34:	ldr	r0, [r6, #20]
   1bc38:	cmp	r0, #0
   1bc3c:	beq	1bc50 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x50>
   1bc40:	mov	r1, r4
   1bc44:	mov	r2, r5
   1bc48:	bl	12004 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bc4c:	str	r0, [sp, #4]
   1bc50:	ldr	r0, [r4]
   1bc54:	ldr	r1, [r4, #8]
   1bc58:	mov	r2, #0
   1bc5c:	str	r2, [r0, r1, lsl #2]
   1bc60:	cmp	r7, #0
   1bc64:	beq	1bca0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1bc68:	ldr	r0, [sp, #4]
   1bc6c:	str	r0, [r7]
   1bc70:	b	1bca0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1bc74:	mov	r4, #0
   1bc78:	b	1bca0 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1bc7c:	add	r1, sp, #4
   1bc80:	mov	r0, #1024	; 0x400
   1bc84:	bl	11764 <myhtml_collection_create@plt>
   1bc88:	mov	r4, r0
   1bc8c:	ldr	r0, [sp, #4]
   1bc90:	cmp	r0, #0
   1bc94:	beq	1bc34 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x34>
   1bc98:	cmp	r7, #0
   1bc9c:	strne	r0, [r7]
   1bca0:	mov	r0, r4
   1bca4:	sub	sp, fp, #16
   1bca8:	pop	{r4, r5, r6, r7, fp, pc}

0001bcac <myhtml_collection_create@@Base>:
   1bcac:	push	{r4, r5, r6, r7, fp, lr}
   1bcb0:	add	fp, sp, #16
   1bcb4:	mov	r4, r1
   1bcb8:	mov	r7, r0
   1bcbc:	mov	r0, #12
   1bcc0:	bl	1204c <mycore_malloc@plt>
   1bcc4:	cmp	r0, #0
   1bcc8:	beq	1bd08 <myhtml_collection_create@@Base+0x5c>
   1bccc:	mov	r6, r0
   1bcd0:	mov	r5, #0
   1bcd4:	str	r7, [r0, #4]
   1bcd8:	str	r5, [r0, #8]
   1bcdc:	lsl	r0, r7, #2
   1bce0:	bl	1204c <mycore_malloc@plt>
   1bce4:	str	r0, [r6]
   1bce8:	cmp	r0, #0
   1bcec:	beq	1bd1c <myhtml_collection_create@@Base+0x70>
   1bcf0:	cmp	r4, #0
   1bcf4:	movne	r0, #0
   1bcf8:	strne	r0, [r4]
   1bcfc:	mov	r5, r6
   1bd00:	mov	r0, r5
   1bd04:	pop	{r4, r5, r6, r7, fp, pc}
   1bd08:	mov	r5, #0
   1bd0c:	cmp	r4, #0
   1bd10:	bne	1bd2c <myhtml_collection_create@@Base+0x80>
   1bd14:	mov	r0, r5
   1bd18:	pop	{r4, r5, r6, r7, fp, pc}
   1bd1c:	mov	r0, r6
   1bd20:	bl	12184 <mycore_free@plt>
   1bd24:	cmp	r4, #0
   1bd28:	beq	1bd14 <myhtml_collection_create@@Base+0x68>
   1bd2c:	mov	r0, #2
   1bd30:	str	r0, [r4]
   1bd34:	mov	r0, r5
   1bd38:	pop	{r4, r5, r6, r7, fp, pc}

0001bd3c <myhtml_get_nodes_by_name_in_scope@@Base>:
   1bd3c:	push	{r4, r5, fp, lr}
   1bd40:	add	fp, sp, #8
   1bd44:	sub	sp, sp, #8
   1bd48:	mov	r4, r2
   1bd4c:	mov	r5, r1
   1bd50:	ldr	r0, [r0, #28]
   1bd54:	ldr	r2, [fp, #8]
   1bd58:	mov	r1, r3
   1bd5c:	bl	11f5c <myhtml_tag_get_by_name@plt>
   1bd60:	cmp	r0, #0
   1bd64:	beq	1bd88 <myhtml_get_nodes_by_name_in_scope@@Base+0x4c>
   1bd68:	ldr	r1, [fp, #12]
   1bd6c:	ldr	r3, [r0]
   1bd70:	str	r1, [sp]
   1bd74:	mov	r1, r5
   1bd78:	mov	r2, r4
   1bd7c:	bl	113c8 <myhtml_get_nodes_by_tag_id_in_scope@plt>
   1bd80:	sub	sp, fp, #8
   1bd84:	pop	{r4, r5, fp, pc}
   1bd88:	mov	r0, #0
   1bd8c:	sub	sp, fp, #8
   1bd90:	pop	{r4, r5, fp, pc}

0001bd94 <myhtml_get_nodes_by_tag_id@@Base>:
   1bd94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bd98:	add	fp, sp, #24
   1bd9c:	mov	r8, r3
   1bda0:	mov	r6, r2
   1bda4:	mov	r5, r1
   1bda8:	mov	r7, r0
   1bdac:	cmp	r1, #0
   1bdb0:	bne	1bdd0 <myhtml_get_nodes_by_tag_id@@Base+0x3c>
   1bdb4:	mov	r4, #0
   1bdb8:	mov	r0, #1024	; 0x400
   1bdbc:	mov	r1, #0
   1bdc0:	bl	11764 <myhtml_collection_create@plt>
   1bdc4:	mov	r5, r0
   1bdc8:	cmp	r0, #0
   1bdcc:	beq	1be8c <myhtml_get_nodes_by_tag_id@@Base+0xf8>
   1bdd0:	ldr	r4, [r7, #96]	; 0x60
   1bdd4:	cmp	r4, #0
   1bdd8:	beq	1be50 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1bddc:	ldr	r0, [r4, #4]
   1bde0:	cmp	r0, r6
   1bde4:	bne	1be14 <myhtml_get_nodes_by_tag_id@@Base+0x80>
   1bde8:	mov	r0, r5
   1bdec:	mov	r1, #1
   1bdf0:	mov	r2, #1024	; 0x400
   1bdf4:	bl	121b4 <myhtml_collection_check_size@plt>
   1bdf8:	cmp	r0, #0
   1bdfc:	bne	1be68 <myhtml_get_nodes_by_tag_id@@Base+0xd4>
   1be00:	ldr	r0, [r5]
   1be04:	ldr	r1, [r5, #8]
   1be08:	str	r4, [r0, r1, lsl #2]
   1be0c:	add	r0, r1, #1
   1be10:	str	r0, [r5, #8]
   1be14:	ldr	r0, [r4, #20]
   1be18:	cmp	r0, #0
   1be1c:	bne	1be44 <myhtml_get_nodes_by_tag_id@@Base+0xb0>
   1be20:	b	1be28 <myhtml_get_nodes_by_tag_id@@Base+0x94>
   1be24:	ldr	r4, [r4, #24]
   1be28:	ldr	r0, [r7, #96]	; 0x60
   1be2c:	cmp	r4, r0
   1be30:	beq	1be50 <myhtml_get_nodes_by_tag_id@@Base+0xbc>
   1be34:	ldr	r0, [r4, #16]
   1be38:	cmp	r0, #0
   1be3c:	beq	1be24 <myhtml_get_nodes_by_tag_id@@Base+0x90>
   1be40:	ldr	r0, [r4, #16]
   1be44:	cmp	r0, #0
   1be48:	mov	r4, r0
   1be4c:	bne	1bddc <myhtml_get_nodes_by_tag_id@@Base+0x48>
   1be50:	mov	r0, r5
   1be54:	mov	r1, #1
   1be58:	mov	r2, #1024	; 0x400
   1be5c:	bl	121b4 <myhtml_collection_check_size@plt>
   1be60:	cmp	r0, #0
   1be64:	beq	1be78 <myhtml_get_nodes_by_tag_id@@Base+0xe4>
   1be68:	cmp	r8, #0
   1be6c:	movne	r0, #2
   1be70:	strne	r0, [r8]
   1be74:	b	1be88 <myhtml_get_nodes_by_tag_id@@Base+0xf4>
   1be78:	ldr	r0, [r5]
   1be7c:	ldr	r1, [r5, #8]
   1be80:	mov	r2, #0
   1be84:	str	r2, [r0, r1, lsl #2]
   1be88:	mov	r4, r5
   1be8c:	mov	r0, r4
   1be90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001be94 <myhtml_get_nodes_by_name@@Base>:
   1be94:	push	{r4, r5, fp, lr}
   1be98:	add	fp, sp, #8
   1be9c:	mov	r4, r1
   1bea0:	mov	r5, r0
   1bea4:	ldr	r0, [r0, #28]
   1bea8:	mov	r1, r2
   1beac:	mov	r2, r3
   1beb0:	bl	11f5c <myhtml_tag_get_by_name@plt>
   1beb4:	cmp	r0, #0
   1beb8:	beq	1bed4 <myhtml_get_nodes_by_name@@Base+0x40>
   1bebc:	ldr	r3, [fp, #8]
   1bec0:	ldr	r2, [r0]
   1bec4:	mov	r0, r5
   1bec8:	mov	r1, r4
   1becc:	pop	{r4, r5, fp, lr}
   1bed0:	b	1bd94 <myhtml_get_nodes_by_tag_id@@Base>
   1bed4:	mov	r0, #0
   1bed8:	pop	{r4, r5, fp, pc}

0001bedc <myhtml_node_first@@Base>:
   1bedc:	ldr	r1, [r0, #84]	; 0x54
   1bee0:	ldr	r0, [r0, #88]	; 0x58
   1bee4:	cmp	r0, #0
   1bee8:	beq	1bf0c <myhtml_node_first@@Base+0x30>
   1beec:	mov	r0, #0
   1bef0:	cmp	r1, #0
   1bef4:	beq	1bf20 <myhtml_node_first@@Base+0x44>
   1bef8:	ldr	r1, [r1, #20]
   1befc:	cmp	r1, #0
   1bf00:	bxeq	lr
   1bf04:	ldr	r0, [r1, #20]
   1bf08:	bx	lr
   1bf0c:	cmp	r1, #0
   1bf10:	beq	1bf1c <myhtml_node_first@@Base+0x40>
   1bf14:	ldr	r0, [r1, #20]
   1bf18:	bx	lr
   1bf1c:	mov	r0, #0
   1bf20:	bx	lr

0001bf24 <myhtml_node_next@@Base>:
   1bf24:	ldr	r0, [r0, #16]
   1bf28:	bx	lr

0001bf2c <myhtml_node_prev@@Base>:
   1bf2c:	ldr	r0, [r0, #12]
   1bf30:	bx	lr

0001bf34 <myhtml_node_parent@@Base>:
   1bf34:	ldr	r0, [r0, #24]
   1bf38:	bx	lr

0001bf3c <myhtml_node_child@@Base>:
   1bf3c:	ldr	r0, [r0, #20]
   1bf40:	bx	lr

0001bf44 <myhtml_node_last_child@@Base>:
   1bf44:	ldr	r0, [r0, #28]
   1bf48:	bx	lr

0001bf4c <myhtml_node_create@@Base>:
   1bf4c:	push	{r4, r5, fp, lr}
   1bf50:	add	fp, sp, #8
   1bf54:	mov	r4, r2
   1bf58:	mov	r5, r1
   1bf5c:	bl	11470 <myhtml_tree_node_create@plt>
   1bf60:	str	r5, [r0, #4]
   1bf64:	str	r4, [r0, #8]
   1bf68:	pop	{r4, r5, fp, pc}

0001bf6c <myhtml_node_remove@@Base>:
   1bf6c:	b	121a8 <myhtml_tree_node_remove@plt>

0001bf70 <myhtml_node_delete@@Base>:
   1bf70:	b	12178 <myhtml_tree_node_delete@plt>

0001bf74 <myhtml_node_delete_recursive@@Base>:
   1bf74:	b	1147c <myhtml_tree_node_delete_recursive@plt>

0001bf78 <myhtml_node_free@@Base>:
   1bf78:	b	120b8 <myhtml_tree_node_free@plt>

0001bf7c <myhtml_node_insert_before@@Base>:
   1bf7c:	push	{r4, sl, fp, lr}
   1bf80:	add	fp, sp, #8
   1bf84:	mov	r4, r1
   1bf88:	mov	r1, r0
   1bf8c:	mov	r0, #0
   1bf90:	cmp	r1, #0
   1bf94:	cmpne	r4, #0
   1bf98:	bne	1bfa0 <myhtml_node_insert_before@@Base+0x24>
   1bf9c:	pop	{r4, sl, fp, pc}
   1bfa0:	mov	r0, r1
   1bfa4:	mov	r1, r4
   1bfa8:	bl	11824 <myhtml_tree_node_insert_before@plt>
   1bfac:	mov	r0, r4
   1bfb0:	pop	{r4, sl, fp, pc}

0001bfb4 <myhtml_node_insert_after@@Base>:
   1bfb4:	push	{r4, sl, fp, lr}
   1bfb8:	add	fp, sp, #8
   1bfbc:	mov	r4, r1
   1bfc0:	mov	r1, r0
   1bfc4:	mov	r0, #0
   1bfc8:	cmp	r1, #0
   1bfcc:	cmpne	r4, #0
   1bfd0:	bne	1bfd8 <myhtml_node_insert_after@@Base+0x24>
   1bfd4:	pop	{r4, sl, fp, pc}
   1bfd8:	mov	r0, r1
   1bfdc:	mov	r1, r4
   1bfe0:	bl	117a0 <myhtml_tree_node_insert_after@plt>
   1bfe4:	mov	r0, r4
   1bfe8:	pop	{r4, sl, fp, pc}

0001bfec <myhtml_node_append_child@@Base>:
   1bfec:	push	{r4, sl, fp, lr}
   1bff0:	add	fp, sp, #8
   1bff4:	mov	r4, r1
   1bff8:	mov	r1, r0
   1bffc:	mov	r0, #0
   1c000:	cmp	r1, #0
   1c004:	cmpne	r4, #0
   1c008:	bne	1c010 <myhtml_node_append_child@@Base+0x24>
   1c00c:	pop	{r4, sl, fp, pc}
   1c010:	mov	r0, r1
   1c014:	mov	r1, r4
   1c018:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   1c01c:	mov	r0, r4
   1c020:	pop	{r4, sl, fp, pc}

0001c024 <myhtml_node_insert_to_appropriate_place@@Base>:
   1c024:	push	{r4, sl, fp, lr}
   1c028:	add	fp, sp, #8
   1c02c:	sub	sp, sp, #8
   1c030:	mov	r4, r1
   1c034:	mov	r1, #0
   1c038:	cmp	r0, #0
   1c03c:	cmpne	r4, #0
   1c040:	beq	1c074 <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1c044:	ldr	r1, [r0, #40]	; 0x28
   1c048:	mov	r2, #1
   1c04c:	strb	r2, [r1, #188]	; 0xbc
   1c050:	add	r1, sp, #4
   1c054:	bl	11e30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1c058:	ldr	r1, [r0, #40]	; 0x28
   1c05c:	mov	r2, #0
   1c060:	strb	r2, [r1, #188]	; 0xbc
   1c064:	ldr	r2, [sp, #4]
   1c068:	mov	r1, r4
   1c06c:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   1c070:	mov	r1, r4
   1c074:	mov	r0, r1
   1c078:	sub	sp, fp, #8
   1c07c:	pop	{r4, sl, fp, pc}

0001c080 <myhtml_node_text_set@@Base>:
   1c080:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c084:	add	fp, sp, #24
   1c088:	mov	r7, #0
   1c08c:	cmp	r0, #0
   1c090:	beq	1c184 <myhtml_node_text_set@@Base+0x104>
   1c094:	mov	r6, r3
   1c098:	cmp	r3, #41	; 0x29
   1c09c:	bhi	1c184 <myhtml_node_text_set@@Base+0x104>
   1c0a0:	mov	r9, r2
   1c0a4:	mov	r8, r1
   1c0a8:	mov	r4, r0
   1c0ac:	ldr	r0, [r0, #32]
   1c0b0:	ldr	r5, [r4, #40]	; 0x28
   1c0b4:	cmp	r0, #0
   1c0b8:	bne	1c0e0 <myhtml_node_text_set@@Base+0x60>
   1c0bc:	ldr	r0, [r5, #8]
   1c0c0:	ldr	r1, [r5, #40]	; 0x28
   1c0c4:	bl	11e0c <myhtml_token_node_create@plt>
   1c0c8:	str	r0, [r4, #32]
   1c0cc:	cmp	r0, #0
   1c0d0:	beq	1c184 <myhtml_node_text_set@@Base+0x104>
   1c0d4:	ldr	r1, [r0, #48]	; 0x30
   1c0d8:	orr	r1, r1, #4
   1c0dc:	str	r1, [r0, #48]	; 0x30
   1c0e0:	ldr	r0, [r4, #32]
   1c0e4:	mov	r7, r0
   1c0e8:	ldr	r2, [r7, #4]!
   1c0ec:	cmp	r2, #0
   1c0f0:	beq	1c128 <myhtml_node_text_set@@Base+0xa8>
   1c0f4:	ldr	r1, [r0, #8]
   1c0f8:	cmp	r1, r9
   1c0fc:	bcs	1c140 <myhtml_node_text_set@@Base+0xc0>
   1c100:	ldr	r1, [r0, #20]
   1c104:	ldr	r0, [r5, #4]
   1c108:	bl	11b48 <mchar_async_free@plt>
   1c10c:	ldr	r0, [r5, #4]
   1c110:	ldr	r1, [r5, #52]	; 0x34
   1c114:	ldr	r2, [r4, #32]
   1c118:	add	r2, r2, #4
   1c11c:	mov	r3, r9
   1c120:	bl	11a34 <mycore_string_init@plt>
   1c124:	b	1c148 <myhtml_node_text_set@@Base+0xc8>
   1c128:	ldr	r0, [r5, #4]
   1c12c:	ldr	r1, [r5, #52]	; 0x34
   1c130:	add	r3, r9, #2
   1c134:	mov	r2, r7
   1c138:	bl	11a34 <mycore_string_init@plt>
   1c13c:	b	1c148 <myhtml_node_text_set@@Base+0xc8>
   1c140:	mov	r1, #0
   1c144:	str	r1, [r0, #12]
   1c148:	ldr	r0, [r4, #32]
   1c14c:	add	r0, r0, #4
   1c150:	mov	r1, r8
   1c154:	mov	r2, r9
   1c158:	cmp	r6, #0
   1c15c:	beq	1c16c <myhtml_node_text_set@@Base+0xec>
   1c160:	mov	r3, r6
   1c164:	bl	11890 <myencoding_string_append@plt>
   1c168:	b	1c170 <myhtml_node_text_set@@Base+0xf0>
   1c16c:	bl	11cec <mycore_string_append@plt>
   1c170:	ldr	r0, [r4, #32]
   1c174:	mov	r1, #0
   1c178:	str	r1, [r0, #24]
   1c17c:	str	r1, [r0, #28]
   1c180:	add	r7, r0, #4
   1c184:	mov	r0, r7
   1c188:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c18c <myhtml_node_text_set_with_charef@@Base>:
   1c18c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c190:	add	fp, sp, #24
   1c194:	sub	sp, sp, #64	; 0x40
   1c198:	mov	r6, #0
   1c19c:	cmp	r0, #0
   1c1a0:	beq	1c2ac <myhtml_node_text_set_with_charef@@Base+0x120>
   1c1a4:	mov	r7, r3
   1c1a8:	cmp	r3, #41	; 0x29
   1c1ac:	bhi	1c2ac <myhtml_node_text_set_with_charef@@Base+0x120>
   1c1b0:	mov	r9, r2
   1c1b4:	mov	r8, r1
   1c1b8:	mov	r4, r0
   1c1bc:	ldr	r0, [r0, #32]
   1c1c0:	ldr	r5, [r4, #40]	; 0x28
   1c1c4:	cmp	r0, #0
   1c1c8:	bne	1c1f0 <myhtml_node_text_set_with_charef@@Base+0x64>
   1c1cc:	ldr	r0, [r5, #8]
   1c1d0:	ldr	r1, [r5, #40]	; 0x28
   1c1d4:	bl	11e0c <myhtml_token_node_create@plt>
   1c1d8:	str	r0, [r4, #32]
   1c1dc:	cmp	r0, #0
   1c1e0:	beq	1c2ac <myhtml_node_text_set_with_charef@@Base+0x120>
   1c1e4:	ldr	r1, [r0, #48]	; 0x30
   1c1e8:	orr	r1, r1, #4
   1c1ec:	str	r1, [r0, #48]	; 0x30
   1c1f0:	ldr	r0, [r4, #32]
   1c1f4:	mov	r6, r0
   1c1f8:	ldr	r2, [r6, #4]!
   1c1fc:	cmp	r2, #0
   1c200:	beq	1c238 <myhtml_node_text_set_with_charef@@Base+0xac>
   1c204:	ldr	r1, [r0, #8]
   1c208:	cmp	r1, r9
   1c20c:	bcs	1c250 <myhtml_node_text_set_with_charef@@Base+0xc4>
   1c210:	ldr	r1, [r0, #20]
   1c214:	ldr	r0, [r5, #4]
   1c218:	bl	11b48 <mchar_async_free@plt>
   1c21c:	ldr	r0, [r5, #4]
   1c220:	ldr	r1, [r5, #52]	; 0x34
   1c224:	ldr	r2, [r4, #32]
   1c228:	add	r2, r2, #4
   1c22c:	mov	r3, r9
   1c230:	bl	11a34 <mycore_string_init@plt>
   1c234:	b	1c258 <myhtml_node_text_set_with_charef@@Base+0xcc>
   1c238:	ldr	r0, [r5, #4]
   1c23c:	ldr	r1, [r5, #52]	; 0x34
   1c240:	add	r3, r9, #2
   1c244:	mov	r2, r6
   1c248:	bl	11a34 <mycore_string_init@plt>
   1c24c:	b	1c258 <myhtml_node_text_set_with_charef@@Base+0xcc>
   1c250:	mov	r1, #0
   1c254:	str	r1, [r0, #12]
   1c258:	mov	r6, sp
   1c25c:	mov	r0, r6
   1c260:	bl	11920 <myhtml_data_process_entry_clean@plt>
   1c264:	str	r7, [sp, #4]
   1c268:	add	r0, r6, #8
   1c26c:	bl	1162c <myencoding_result_clean@plt>
   1c270:	ldr	r0, [r4, #32]
   1c274:	add	r1, r0, #4
   1c278:	mov	r0, r6
   1c27c:	mov	r2, r8
   1c280:	mov	r3, r9
   1c284:	bl	11b84 <myhtml_data_process@plt>
   1c288:	ldr	r0, [r4, #32]
   1c28c:	add	r1, r0, #4
   1c290:	mov	r0, r6
   1c294:	bl	11d40 <myhtml_data_process_end@plt>
   1c298:	ldr	r0, [r4, #32]
   1c29c:	mov	r1, #0
   1c2a0:	str	r1, [r0, #24]
   1c2a4:	str	r1, [r0, #28]
   1c2a8:	add	r6, r0, #4
   1c2ac:	mov	r0, r6
   1c2b0:	sub	sp, fp, #24
   1c2b4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c2b8 <myhtml_node_token@@Base>:
   1c2b8:	ldr	r0, [r0, #32]
   1c2bc:	bx	lr

0001c2c0 <myhtml_node_namespace@@Base>:
   1c2c0:	ldr	r0, [r0, #8]
   1c2c4:	bx	lr

0001c2c8 <myhtml_node_namespace_set@@Base>:
   1c2c8:	str	r1, [r0, #8]
   1c2cc:	bx	lr

0001c2d0 <myhtml_node_tag_id@@Base>:
   1c2d0:	ldr	r0, [r0, #4]
   1c2d4:	bx	lr

0001c2d8 <myhtml_tag_name_by_id@@Base>:
   1c2d8:	push	{r4, r5, fp, lr}
   1c2dc:	add	fp, sp, #8
   1c2e0:	mov	r4, r2
   1c2e4:	cmp	r2, #0
   1c2e8:	movne	r2, #0
   1c2ec:	strne	r2, [r4]
   1c2f0:	mov	r5, #0
   1c2f4:	cmp	r0, #0
   1c2f8:	beq	1c324 <myhtml_tag_name_by_id@@Base+0x4c>
   1c2fc:	ldr	r0, [r0, #28]
   1c300:	cmp	r0, #0
   1c304:	beq	1c324 <myhtml_tag_name_by_id@@Base+0x4c>
   1c308:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1c30c:	cmp	r0, #0
   1c310:	beq	1c324 <myhtml_tag_name_by_id@@Base+0x4c>
   1c314:	cmp	r4, #0
   1c318:	ldrne	r1, [r0, #8]
   1c31c:	strne	r1, [r4]
   1c320:	ldr	r5, [r0, #4]
   1c324:	mov	r0, r5
   1c328:	pop	{r4, r5, fp, pc}

0001c32c <myhtml_tag_id_by_name@@Base>:
   1c32c:	push	{r4, sl, fp, lr}
   1c330:	add	fp, sp, #8
   1c334:	mov	r4, #0
   1c338:	cmp	r0, #0
   1c33c:	beq	1c358 <myhtml_tag_id_by_name@@Base+0x2c>
   1c340:	ldr	r0, [r0, #28]
   1c344:	cmp	r0, #0
   1c348:	beq	1c358 <myhtml_tag_id_by_name@@Base+0x2c>
   1c34c:	bl	11f5c <myhtml_tag_get_by_name@plt>
   1c350:	cmp	r0, #0
   1c354:	ldrne	r4, [r0]
   1c358:	mov	r0, r4
   1c35c:	pop	{r4, sl, fp, pc}

0001c360 <myhtml_node_is_close_self@@Base>:
   1c360:	ldr	r0, [r0, #32]
   1c364:	cmp	r0, #0
   1c368:	moveq	r0, #0
   1c36c:	ldrne	r0, [r0, #48]	; 0x30
   1c370:	ubfxne	r0, r0, #1, #1
   1c374:	bx	lr

0001c378 <myhtml_node_is_void_element@@Base>:
   1c378:	ldr	r0, [r0, #4]
   1c37c:	sub	r1, r0, #10
   1c380:	cmp	r1, #132	; 0x84
   1c384:	bhi	1c5b0 <myhtml_node_is_void_element@@Base+0x238>
   1c388:	mov	r0, #1
   1c38c:	add	r2, pc, #4
   1c390:	ldr	r1, [r2, r1, lsl #2]
   1c394:	add	pc, r2, r1
   1c398:	andeq	r0, r0, r4, lsl r2
   1c39c:	andeq	r0, r0, r8, lsl r2
   1c3a0:	andeq	r0, r0, r8, lsl r2
   1c3a4:	andeq	r0, r0, r8, lsl r2
   1c3a8:	andeq	r0, r0, r8, lsl r2
   1c3ac:	andeq	r0, r0, r4, lsl r2
   1c3b0:	andeq	r0, r0, r8, lsl r2
   1c3b4:	andeq	r0, r0, r8, lsl r2
   1c3b8:	andeq	r0, r0, r8, lsl r2
   1c3bc:	andeq	r0, r0, r8, lsl r2
   1c3c0:	andeq	r0, r0, r8, lsl r2
   1c3c4:	andeq	r0, r0, r8, lsl r2
   1c3c8:	andeq	r0, r0, r8, lsl r2
   1c3cc:	andeq	r0, r0, r8, lsl r2
   1c3d0:	andeq	r0, r0, r4, lsl r2
   1c3d4:	andeq	r0, r0, r8, lsl r2
   1c3d8:	andeq	r0, r0, r8, lsl r2
   1c3dc:	andeq	r0, r0, r8, lsl r2
   1c3e0:	andeq	r0, r0, r8, lsl r2
   1c3e4:	andeq	r0, r0, r8, lsl r2
   1c3e8:	andeq	r0, r0, r8, lsl r2
   1c3ec:	andeq	r0, r0, r4, lsl r2
   1c3f0:	andeq	r0, r0, r8, lsl r2
   1c3f4:	andeq	r0, r0, r4, lsl r2
   1c3f8:	andeq	r0, r0, r8, lsl r2
   1c3fc:	andeq	r0, r0, r8, lsl r2
   1c400:	andeq	r0, r0, r8, lsl r2
   1c404:	andeq	r0, r0, r8, lsl r2
   1c408:	andeq	r0, r0, r8, lsl r2
   1c40c:	andeq	r0, r0, r8, lsl r2
   1c410:	andeq	r0, r0, r8, lsl r2
   1c414:	andeq	r0, r0, r8, lsl r2
   1c418:	andeq	r0, r0, r8, lsl r2
   1c41c:	andeq	r0, r0, r8, lsl r2
   1c420:	andeq	r0, r0, r8, lsl r2
   1c424:	andeq	r0, r0, r8, lsl r2
   1c428:	andeq	r0, r0, r4, lsl r2
   1c42c:	andeq	r0, r0, r8, lsl r2
   1c430:	andeq	r0, r0, r8, lsl r2
   1c434:	andeq	r0, r0, r8, lsl r2
   1c438:	andeq	r0, r0, r8, lsl r2
   1c43c:	andeq	r0, r0, r8, lsl r2
   1c440:	andeq	r0, r0, r8, lsl r2
   1c444:	andeq	r0, r0, r8, lsl r2
   1c448:	andeq	r0, r0, r8, lsl r2
   1c44c:	andeq	r0, r0, r8, lsl r2
   1c450:	andeq	r0, r0, r8, lsl r2
   1c454:	andeq	r0, r0, r8, lsl r2
   1c458:	andeq	r0, r0, r8, lsl r2
   1c45c:	andeq	r0, r0, r8, lsl r2
   1c460:	andeq	r0, r0, r8, lsl r2
   1c464:	andeq	r0, r0, r8, lsl r2
   1c468:	andeq	r0, r0, r8, lsl r2
   1c46c:	andeq	r0, r0, r8, lsl r2
   1c470:	andeq	r0, r0, r4, lsl r2
   1c474:	andeq	r0, r0, r8, lsl r2
   1c478:	andeq	r0, r0, r8, lsl r2
   1c47c:	andeq	r0, r0, r8, lsl r2
   1c480:	andeq	r0, r0, r8, lsl r2
   1c484:	andeq	r0, r0, r4, lsl r2
   1c488:	andeq	r0, r0, r4, lsl r2
   1c48c:	andeq	r0, r0, r8, lsl r2
   1c490:	andeq	r0, r0, r8, lsl r2
   1c494:	andeq	r0, r0, r8, lsl r2
   1c498:	andeq	r0, r0, r4, lsl r2
   1c49c:	andeq	r0, r0, r8, lsl r2
   1c4a0:	andeq	r0, r0, r8, lsl r2
   1c4a4:	andeq	r0, r0, r8, lsl r2
   1c4a8:	andeq	r0, r0, r4, lsl r2
   1c4ac:	andeq	r0, r0, r8, lsl r2
   1c4b0:	andeq	r0, r0, r8, lsl r2
   1c4b4:	andeq	r0, r0, r8, lsl r2
   1c4b8:	andeq	r0, r0, r8, lsl r2
   1c4bc:	andeq	r0, r0, r8, lsl r2
   1c4c0:	andeq	r0, r0, r8, lsl r2
   1c4c4:	andeq	r0, r0, r8, lsl r2
   1c4c8:	andeq	r0, r0, r4, lsl r2
   1c4cc:	andeq	r0, r0, r8, lsl r2
   1c4d0:	andeq	r0, r0, r8, lsl r2
   1c4d4:	andeq	r0, r0, r8, lsl r2
   1c4d8:	andeq	r0, r0, r8, lsl r2
   1c4dc:	andeq	r0, r0, r8, lsl r2
   1c4e0:	andeq	r0, r0, r8, lsl r2
   1c4e4:	andeq	r0, r0, r8, lsl r2
   1c4e8:	andeq	r0, r0, r8, lsl r2
   1c4ec:	andeq	r0, r0, r8, lsl r2
   1c4f0:	andeq	r0, r0, r8, lsl r2
   1c4f4:	andeq	r0, r0, r8, lsl r2
   1c4f8:	andeq	r0, r0, r8, lsl r2
   1c4fc:	andeq	r0, r0, r8, lsl r2
   1c500:	andeq	r0, r0, r4, lsl r2
   1c504:	andeq	r0, r0, r8, lsl r2
   1c508:	andeq	r0, r0, r8, lsl r2
   1c50c:	andeq	r0, r0, r8, lsl r2
   1c510:	andeq	r0, r0, r8, lsl r2
   1c514:	andeq	r0, r0, r8, lsl r2
   1c518:	andeq	r0, r0, r8, lsl r2
   1c51c:	andeq	r0, r0, r8, lsl r2
   1c520:	andeq	r0, r0, r8, lsl r2
   1c524:	andeq	r0, r0, r8, lsl r2
   1c528:	andeq	r0, r0, r8, lsl r2
   1c52c:	andeq	r0, r0, r8, lsl r2
   1c530:	andeq	r0, r0, r8, lsl r2
   1c534:	andeq	r0, r0, r8, lsl r2
   1c538:	andeq	r0, r0, r8, lsl r2
   1c53c:	andeq	r0, r0, r8, lsl r2
   1c540:	andeq	r0, r0, r4, lsl r2
   1c544:	andeq	r0, r0, r8, lsl r2
   1c548:	andeq	r0, r0, r8, lsl r2
   1c54c:	andeq	r0, r0, r8, lsl r2
   1c550:	andeq	r0, r0, r8, lsl r2
   1c554:	andeq	r0, r0, r8, lsl r2
   1c558:	andeq	r0, r0, r8, lsl r2
   1c55c:	andeq	r0, r0, r8, lsl r2
   1c560:	andeq	r0, r0, r8, lsl r2
   1c564:	andeq	r0, r0, r8, lsl r2
   1c568:	andeq	r0, r0, r8, lsl r2
   1c56c:	andeq	r0, r0, r8, lsl r2
   1c570:	andeq	r0, r0, r8, lsl r2
   1c574:	andeq	r0, r0, r8, lsl r2
   1c578:	andeq	r0, r0, r8, lsl r2
   1c57c:	andeq	r0, r0, r8, lsl r2
   1c580:	andeq	r0, r0, r8, lsl r2
   1c584:	andeq	r0, r0, r8, lsl r2
   1c588:	andeq	r0, r0, r8, lsl r2
   1c58c:	andeq	r0, r0, r8, lsl r2
   1c590:	andeq	r0, r0, r4, lsl r2
   1c594:	andeq	r0, r0, r8, lsl r2
   1c598:	andeq	r0, r0, r8, lsl r2
   1c59c:	andeq	r0, r0, r8, lsl r2
   1c5a0:	andeq	r0, r0, r8, lsl r2
   1c5a4:	andeq	r0, r0, r8, lsl r2
   1c5a8:	andeq	r0, r0, r4, lsl r2
   1c5ac:	bx	lr
   1c5b0:	mov	r0, #0
   1c5b4:	bx	lr

0001c5b8 <myhtml_node_attribute_first@@Base>:
   1c5b8:	ldr	r0, [r0, #32]
   1c5bc:	cmp	r0, #0
   1c5c0:	ldrne	r0, [r0, #40]	; 0x28
   1c5c4:	moveq	r0, #0
   1c5c8:	bx	lr

0001c5cc <myhtml_node_attribute_last@@Base>:
   1c5cc:	ldr	r0, [r0, #32]
   1c5d0:	cmp	r0, #0
   1c5d4:	ldrne	r0, [r0, #44]	; 0x2c
   1c5d8:	moveq	r0, #0
   1c5dc:	bx	lr

0001c5e0 <myhtml_node_text@@Base>:
   1c5e0:	ldr	r0, [r0, #32]
   1c5e4:	cmp	r0, #0
   1c5e8:	beq	1c614 <myhtml_node_text@@Base+0x34>
   1c5ec:	ldr	r2, [r0, #12]
   1c5f0:	cmp	r2, #0
   1c5f4:	beq	1c614 <myhtml_node_text@@Base+0x34>
   1c5f8:	ldr	r0, [r0, #4]
   1c5fc:	cmp	r0, #0
   1c600:	beq	1c614 <myhtml_node_text@@Base+0x34>
   1c604:	cmp	r1, #0
   1c608:	strne	r2, [r1]
   1c60c:	bxne	lr
   1c610:	bx	lr
   1c614:	mov	r0, #0
   1c618:	cmp	r1, #0
   1c61c:	strne	r0, [r1]
   1c620:	bx	lr

0001c624 <myhtml_node_string@@Base>:
   1c624:	cmp	r0, #0
   1c628:	moveq	r0, #0
   1c62c:	bxeq	lr
   1c630:	ldr	r0, [r0, #32]
   1c634:	cmp	r0, #0
   1c638:	addne	r0, r0, #4
   1c63c:	bx	lr

0001c640 <myhtml_node_raw_position@@Base>:
   1c640:	cmp	r1, #0
   1c644:	beq	1c668 <myhtml_node_raw_position@@Base+0x28>
   1c648:	ldr	r1, [r1, #32]
   1c64c:	cmp	r1, #0
   1c650:	beq	1c668 <myhtml_node_raw_position@@Base+0x28>
   1c654:	ldr	r2, [r1, #24]
   1c658:	ldr	r1, [r1, #28]
   1c65c:	str	r2, [r0]
   1c660:	str	r1, [r0, #4]
   1c664:	bx	lr
   1c668:	mov	r1, #0
   1c66c:	str	r1, [r0]
   1c670:	str	r1, [r0, #4]
   1c674:	bx	lr

0001c678 <myhtml_node_element_position@@Base>:
   1c678:	cmp	r1, #0
   1c67c:	beq	1c6a0 <myhtml_node_element_position@@Base+0x28>
   1c680:	ldr	r1, [r1, #32]
   1c684:	cmp	r1, #0
   1c688:	beq	1c6a0 <myhtml_node_element_position@@Base+0x28>
   1c68c:	ldr	r2, [r1, #32]
   1c690:	ldr	r1, [r1, #36]	; 0x24
   1c694:	str	r2, [r0]
   1c698:	str	r1, [r0, #4]
   1c69c:	bx	lr
   1c6a0:	mov	r1, #0
   1c6a4:	str	r1, [r0]
   1c6a8:	str	r1, [r0, #4]
   1c6ac:	bx	lr

0001c6b0 <myhtml_node_set_data@@Base>:
   1c6b0:	str	r1, [r0, #36]	; 0x24
   1c6b4:	bx	lr

0001c6b8 <myhtml_node_get_data@@Base>:
   1c6b8:	ldr	r0, [r0, #36]	; 0x24
   1c6bc:	bx	lr

0001c6c0 <myhtml_node_tree@@Base>:
   1c6c0:	ldr	r0, [r0, #40]	; 0x28
   1c6c4:	bx	lr

0001c6c8 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1c6c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c6cc:	add	fp, sp, #24
   1c6d0:	cmp	r0, #0
   1c6d4:	beq	1c798 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd0>
   1c6d8:	mov	r4, r3
   1c6dc:	mov	r8, r2
   1c6e0:	mov	r6, r1
   1c6e4:	mov	r9, r0
   1c6e8:	mov	r5, r0
   1c6ec:	ldr	r0, [r0, #32]
   1c6f0:	cmp	r0, #0
   1c6f4:	beq	1c774 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c6f8:	ldr	r7, [r0, #40]	; 0x28
   1c6fc:	cmp	r7, #0
   1c700:	bne	1c714 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1c704:	b	1c774 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c708:	ldr	r7, [r7]
   1c70c:	cmp	r7, #0
   1c710:	beq	1c774 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1c714:	ldr	r0, [r7, #16]
   1c718:	cmp	r0, r4
   1c71c:	bne	1c708 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c720:	ldr	r0, [r7, #8]
   1c724:	mov	r1, r8
   1c728:	mov	r2, r4
   1c72c:	bl	11704 <mycore_strncasecmp@plt>
   1c730:	cmp	r0, #0
   1c734:	bne	1c708 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c738:	ldr	r0, [r6]
   1c73c:	ldr	r1, [r6, #8]
   1c740:	str	r5, [r0, r1, lsl #2]
   1c744:	add	r0, r1, #1
   1c748:	str	r0, [r6, #8]
   1c74c:	ldr	r1, [r6, #4]
   1c750:	cmp	r0, r1
   1c754:	bcc	1c708 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c758:	mov	r0, r6
   1c75c:	mov	r1, #1024	; 0x400
   1c760:	mov	r2, #0
   1c764:	bl	121b4 <myhtml_collection_check_size@plt>
   1c768:	cmp	r0, #0
   1c76c:	beq	1c708 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1c770:	b	1c79c <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd4>
   1c774:	ldr	r0, [r5, #20]
   1c778:	cmp	r0, #0
   1c77c:	bne	1c6e8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c780:	ldr	r0, [r5, #16]
   1c784:	cmp	r0, #0
   1c788:	bne	1c6e8 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x20>
   1c78c:	ldr	r5, [r5, #24]
   1c790:	cmp	r5, r9
   1c794:	bne	1c780 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb8>
   1c798:	mov	r0, #0
   1c79c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001c7a0 <myhtml_get_nodes_by_attribute_key@@Base>:
   1c7a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c7a4:	add	fp, sp, #24
   1c7a8:	mov	r6, r3
   1c7ac:	mov	r7, r2
   1c7b0:	mov	r5, r1
   1c7b4:	mov	r4, r0
   1c7b8:	ldr	r8, [fp, #12]
   1c7bc:	cmp	r1, #0
   1c7c0:	beq	1c7f4 <myhtml_get_nodes_by_attribute_key@@Base+0x54>
   1c7c4:	ldr	r3, [fp, #8]
   1c7c8:	cmp	r7, #0
   1c7cc:	ldreq	r7, [r4, #96]	; 0x60
   1c7d0:	mov	r0, r7
   1c7d4:	mov	r1, r5
   1c7d8:	mov	r2, r6
   1c7dc:	bl	11338 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1c7e0:	cmp	r8, #0
   1c7e4:	cmpne	r0, #0
   1c7e8:	strne	r0, [r8]
   1c7ec:	mov	r0, r5
   1c7f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c7f4:	mov	r0, #1024	; 0x400
   1c7f8:	mov	r1, r8
   1c7fc:	bl	11764 <myhtml_collection_create@plt>
   1c800:	mov	r5, r0
   1c804:	cmp	r8, #0
   1c808:	beq	1c828 <myhtml_get_nodes_by_attribute_key@@Base+0x88>
   1c80c:	mov	r0, #0
   1c810:	cmp	r5, #0
   1c814:	beq	1c824 <myhtml_get_nodes_by_attribute_key@@Base+0x84>
   1c818:	ldr	r1, [r8]
   1c81c:	cmp	r1, #0
   1c820:	beq	1c7c4 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1c824:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c828:	cmp	r5, #0
   1c82c:	bne	1c7c4 <myhtml_get_nodes_by_attribute_key@@Base+0x24>
   1c830:	mov	r0, #0
   1c834:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001c838 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1c838:	push	{fp, lr}
   1c83c:	mov	fp, sp
   1c840:	mov	r3, r0
   1c844:	ldr	ip, [r0, #8]
   1c848:	mov	r0, #0
   1c84c:	cmp	ip, r2
   1c850:	popne	{fp, pc}
   1c854:	ldr	r0, [r3]
   1c858:	bl	12298 <mycore_strncmp@plt>
   1c85c:	clz	r0, r0
   1c860:	lsr	r0, r0, #5
   1c864:	pop	{fp, pc}

0001c868 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1c868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c86c:	add	fp, sp, #28
   1c870:	sub	sp, sp, #4
   1c874:	mov	r6, r0
   1c878:	ldr	r0, [r0, #8]
   1c87c:	cmp	r0, r2
   1c880:	bcc	1c998 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c884:	mov	r4, r2
   1c888:	mov	sl, r1
   1c88c:	ldr	r7, [r6]
   1c890:	mov	r0, r7
   1c894:	bl	12298 <mycore_strncmp@plt>
   1c898:	cmp	r0, #0
   1c89c:	bne	1c8ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1c8a0:	ldr	r1, [r6, #8]
   1c8a4:	cmp	r1, r4
   1c8a8:	bls	1c8e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1c8ac:	ldrb	r0, [r7, r4]
   1c8b0:	sub	r0, r0, #9
   1c8b4:	uxtb	r2, r0
   1c8b8:	cmp	r2, #24
   1c8bc:	bcs	1c8e0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x78>
   1c8c0:	mov	r0, #1
   1c8c4:	movw	r3, #27
   1c8c8:	movt	r3, #128	; 0x80
   1c8cc:	tst	r0, r3, lsr r2
   1c8d0:	bne	1c990 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x128>
   1c8d4:	cmp	r1, r4
   1c8d8:	bne	1c8ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x84>
   1c8dc:	b	1c990 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x128>
   1c8e0:	mov	r0, #1
   1c8e4:	cmp	r1, r4
   1c8e8:	beq	1c990 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x128>
   1c8ec:	ldr	r0, [r6, #8]
   1c8f0:	sub	r0, r0, #1
   1c8f4:	cmp	r0, r4
   1c8f8:	bcc	1c998 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c8fc:	mov	r8, #1
   1c900:	movw	r9, #27
   1c904:	movt	r9, #128	; 0x80
   1c908:	mov	r5, #1
   1c90c:	b	1c934 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xcc>
   1c910:	ldr	r0, [r6, #8]
   1c914:	sub	r0, r0, r5
   1c918:	cmp	r0, r4
   1c91c:	beq	1c9a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x13c>
   1c920:	ldr	r0, [r6, #8]
   1c924:	add	r5, r5, #1
   1c928:	sub	r0, r0, r5
   1c92c:	cmp	r0, r4
   1c930:	bcc	1c998 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x130>
   1c934:	add	r0, r5, r7
   1c938:	ldrb	r1, [r0, #-1]
   1c93c:	sub	r1, r1, #9
   1c940:	cmp	r1, #23
   1c944:	bhi	1c920 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1c948:	tst	r9, r8, lsl r1
   1c94c:	beq	1c920 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1c950:	mov	r1, sl
   1c954:	mov	r2, r4
   1c958:	bl	12298 <mycore_strncmp@plt>
   1c95c:	cmp	r0, #0
   1c960:	bne	1c920 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb8>
   1c964:	cmp	r5, r4
   1c968:	bls	1c910 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa8>
   1c96c:	add	r0, r5, r4
   1c970:	ldrb	r0, [r7, r0]
   1c974:	sub	r0, r0, #9
   1c978:	uxtb	r1, r0
   1c97c:	cmp	r1, #24
   1c980:	bcs	1c910 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa8>
   1c984:	mov	r0, #1
   1c988:	tst	r0, r9, lsr r1
   1c98c:	beq	1c910 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xa8>
   1c990:	sub	sp, fp, #28
   1c994:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c998:	mov	r0, #0
   1c99c:	sub	sp, fp, #28
   1c9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9a4:	mov	r0, #1
   1c9a8:	sub	sp, fp, #28
   1c9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c9b0 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1c9b0:	push	{fp, lr}
   1c9b4:	mov	fp, sp
   1c9b8:	mov	r3, r0
   1c9bc:	ldr	ip, [r0, #8]
   1c9c0:	mov	r0, #0
   1c9c4:	cmp	ip, r2
   1c9c8:	popcc	{fp, pc}
   1c9cc:	ldr	r0, [r3]
   1c9d0:	bl	12298 <mycore_strncmp@plt>
   1c9d4:	clz	r0, r0
   1c9d8:	lsr	r0, r0, #5
   1c9dc:	pop	{fp, pc}

0001c9e0 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1c9e0:	push	{fp, lr}
   1c9e4:	mov	fp, sp
   1c9e8:	ldr	r3, [r0, #8]
   1c9ec:	mov	ip, #0
   1c9f0:	cmp	r3, r2
   1c9f4:	bcc	1ca10 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x30>
   1c9f8:	sub	r3, r3, r2
   1c9fc:	ldr	r0, [r0]
   1ca00:	add	r0, r0, r3
   1ca04:	bl	12298 <mycore_strncmp@plt>
   1ca08:	clz	r0, r0
   1ca0c:	lsr	ip, r0, #5
   1ca10:	mov	r0, ip
   1ca14:	pop	{fp, pc}

0001ca18 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1ca18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ca1c:	add	fp, sp, #24
   1ca20:	mov	r8, r1
   1ca24:	mov	r6, r0
   1ca28:	ldr	r1, [r0, #8]
   1ca2c:	mov	r0, #0
   1ca30:	cmp	r1, r2
   1ca34:	bcc	1ca8c <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x74>
   1ca38:	mov	r4, r2
   1ca3c:	ldr	r1, [r6, #8]
   1ca40:	cmp	r1, r2
   1ca44:	bcc	1ca8c <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x74>
   1ca48:	ldr	r7, [r6]
   1ca4c:	mov	r5, #0
   1ca50:	mov	r0, r7
   1ca54:	mov	r1, r8
   1ca58:	mov	r2, r4
   1ca5c:	bl	12298 <mycore_strncmp@plt>
   1ca60:	cmp	r0, #0
   1ca64:	beq	1ca88 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x70>
   1ca68:	ldr	r0, [r6, #8]
   1ca6c:	sub	r5, r5, #1
   1ca70:	add	r0, r0, r5
   1ca74:	add	r7, r7, #1
   1ca78:	cmp	r0, r4
   1ca7c:	bcs	1ca50 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x38>
   1ca80:	mov	r0, #0
   1ca84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ca88:	mov	r0, #1
   1ca8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001ca90 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1ca90:	push	{r4, r5, r6, sl, fp, lr}
   1ca94:	add	fp, sp, #16
   1ca98:	mov	r4, r2
   1ca9c:	mov	r6, r1
   1caa0:	mov	r1, r0
   1caa4:	ldr	r2, [r0, #8]
   1caa8:	mov	r0, #0
   1caac:	cmp	r2, r4
   1cab0:	bcc	1caf0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x60>
   1cab4:	ldr	r5, [r1]
   1cab8:	bne	1cad4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1cabc:	mov	r0, r5
   1cac0:	mov	r1, r6
   1cac4:	mov	r2, r4
   1cac8:	bl	12298 <mycore_strncmp@plt>
   1cacc:	cmp	r0, #0
   1cad0:	beq	1cb08 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x78>
   1cad4:	mov	r0, r5
   1cad8:	mov	r1, r6
   1cadc:	mov	r2, r4
   1cae0:	bl	12298 <mycore_strncmp@plt>
   1cae4:	cmp	r0, #0
   1cae8:	beq	1caf4 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x64>
   1caec:	mov	r0, #0
   1caf0:	pop	{r4, r5, r6, sl, fp, pc}
   1caf4:	ldrb	r1, [r5, r4]
   1caf8:	mov	r0, #1
   1cafc:	cmp	r1, #45	; 0x2d
   1cb00:	movne	r0, #0
   1cb04:	pop	{r4, r5, r6, sl, fp, pc}
   1cb08:	mov	r0, #1
   1cb0c:	pop	{r4, r5, r6, sl, fp, pc}

0001cb10 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1cb10:	push	{fp, lr}
   1cb14:	mov	fp, sp
   1cb18:	mov	r3, r0
   1cb1c:	ldr	ip, [r0, #8]
   1cb20:	mov	r0, #0
   1cb24:	cmp	ip, r2
   1cb28:	popne	{fp, pc}
   1cb2c:	ldr	r0, [r3]
   1cb30:	bl	11704 <mycore_strncasecmp@plt>
   1cb34:	clz	r0, r0
   1cb38:	lsr	r0, r0, #5
   1cb3c:	pop	{fp, pc}

0001cb40 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1cb40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb44:	add	fp, sp, #28
   1cb48:	sub	sp, sp, #4
   1cb4c:	mov	r6, r0
   1cb50:	ldr	r0, [r0, #8]
   1cb54:	cmp	r0, r2
   1cb58:	bcc	1cc70 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1cb5c:	mov	r4, r2
   1cb60:	mov	sl, r1
   1cb64:	ldr	r7, [r6]
   1cb68:	mov	r0, r7
   1cb6c:	bl	11704 <mycore_strncasecmp@plt>
   1cb70:	cmp	r0, #0
   1cb74:	bne	1cbc4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1cb78:	ldr	r1, [r6, #8]
   1cb7c:	cmp	r1, r4
   1cb80:	bls	1cbb8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1cb84:	ldrb	r0, [r7, r4]
   1cb88:	sub	r0, r0, #9
   1cb8c:	uxtb	r2, r0
   1cb90:	cmp	r2, #24
   1cb94:	bcs	1cbb8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x78>
   1cb98:	mov	r0, #1
   1cb9c:	movw	r3, #27
   1cba0:	movt	r3, #128	; 0x80
   1cba4:	tst	r0, r3, lsr r2
   1cba8:	bne	1cc68 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x128>
   1cbac:	cmp	r1, r4
   1cbb0:	bne	1cbc4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x84>
   1cbb4:	b	1cc68 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x128>
   1cbb8:	mov	r0, #1
   1cbbc:	cmp	r1, r4
   1cbc0:	beq	1cc68 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x128>
   1cbc4:	ldr	r0, [r6, #8]
   1cbc8:	sub	r0, r0, #1
   1cbcc:	cmp	r0, r4
   1cbd0:	bcc	1cc70 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1cbd4:	mov	r8, #1
   1cbd8:	movw	r9, #27
   1cbdc:	movt	r9, #128	; 0x80
   1cbe0:	mov	r5, #1
   1cbe4:	b	1cc0c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xcc>
   1cbe8:	ldr	r0, [r6, #8]
   1cbec:	sub	r0, r0, r5
   1cbf0:	cmp	r0, r4
   1cbf4:	beq	1cc7c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x13c>
   1cbf8:	ldr	r0, [r6, #8]
   1cbfc:	add	r5, r5, #1
   1cc00:	sub	r0, r0, r5
   1cc04:	cmp	r0, r4
   1cc08:	bcc	1cc70 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x130>
   1cc0c:	add	r0, r5, r7
   1cc10:	ldrb	r1, [r0, #-1]
   1cc14:	sub	r1, r1, #9
   1cc18:	cmp	r1, #23
   1cc1c:	bhi	1cbf8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1cc20:	tst	r9, r8, lsl r1
   1cc24:	beq	1cbf8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1cc28:	mov	r1, sl
   1cc2c:	mov	r2, r4
   1cc30:	bl	11704 <mycore_strncasecmp@plt>
   1cc34:	cmp	r0, #0
   1cc38:	bne	1cbf8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb8>
   1cc3c:	cmp	r5, r4
   1cc40:	bls	1cbe8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa8>
   1cc44:	add	r0, r5, r4
   1cc48:	ldrb	r0, [r7, r0]
   1cc4c:	sub	r0, r0, #9
   1cc50:	uxtb	r1, r0
   1cc54:	cmp	r1, #24
   1cc58:	bcs	1cbe8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa8>
   1cc5c:	mov	r0, #1
   1cc60:	tst	r0, r9, lsr r1
   1cc64:	beq	1cbe8 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xa8>
   1cc68:	sub	sp, fp, #28
   1cc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc70:	mov	r0, #0
   1cc74:	sub	sp, fp, #28
   1cc78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc7c:	mov	r0, #1
   1cc80:	sub	sp, fp, #28
   1cc84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cc88 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1cc88:	push	{fp, lr}
   1cc8c:	mov	fp, sp
   1cc90:	mov	r3, r0
   1cc94:	ldr	ip, [r0, #8]
   1cc98:	mov	r0, #0
   1cc9c:	cmp	ip, r2
   1cca0:	popcc	{fp, pc}
   1cca4:	ldr	r0, [r3]
   1cca8:	bl	11704 <mycore_strncasecmp@plt>
   1ccac:	clz	r0, r0
   1ccb0:	lsr	r0, r0, #5
   1ccb4:	pop	{fp, pc}

0001ccb8 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1ccb8:	push	{fp, lr}
   1ccbc:	mov	fp, sp
   1ccc0:	ldr	r3, [r0, #8]
   1ccc4:	mov	ip, #0
   1ccc8:	cmp	r3, r2
   1cccc:	bcc	1cce8 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x30>
   1ccd0:	sub	r3, r3, r2
   1ccd4:	ldr	r0, [r0]
   1ccd8:	add	r0, r0, r3
   1ccdc:	bl	11704 <mycore_strncasecmp@plt>
   1cce0:	clz	r0, r0
   1cce4:	lsr	ip, r0, #5
   1cce8:	mov	r0, ip
   1ccec:	pop	{fp, pc}

0001ccf0 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1ccf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ccf4:	add	fp, sp, #24
   1ccf8:	mov	r8, r1
   1ccfc:	mov	r6, r0
   1cd00:	ldr	r1, [r0, #8]
   1cd04:	mov	r0, #0
   1cd08:	cmp	r1, r2
   1cd0c:	bcc	1cd64 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x74>
   1cd10:	mov	r4, r2
   1cd14:	ldr	r1, [r6, #8]
   1cd18:	cmp	r1, r2
   1cd1c:	bcc	1cd64 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x74>
   1cd20:	ldr	r7, [r6]
   1cd24:	mov	r5, #0
   1cd28:	mov	r0, r7
   1cd2c:	mov	r1, r8
   1cd30:	mov	r2, r4
   1cd34:	bl	11704 <mycore_strncasecmp@plt>
   1cd38:	cmp	r0, #0
   1cd3c:	beq	1cd60 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x70>
   1cd40:	ldr	r0, [r6, #8]
   1cd44:	sub	r5, r5, #1
   1cd48:	add	r0, r0, r5
   1cd4c:	add	r7, r7, #1
   1cd50:	cmp	r0, r4
   1cd54:	bcs	1cd28 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x38>
   1cd58:	mov	r0, #0
   1cd5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1cd60:	mov	r0, #1
   1cd64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001cd68 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1cd68:	push	{r4, r5, r6, sl, fp, lr}
   1cd6c:	add	fp, sp, #16
   1cd70:	mov	r4, r2
   1cd74:	mov	r6, r1
   1cd78:	mov	r1, r0
   1cd7c:	ldr	r2, [r0, #8]
   1cd80:	mov	r0, #0
   1cd84:	cmp	r2, r4
   1cd88:	bcc	1cdc8 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x60>
   1cd8c:	ldr	r5, [r1]
   1cd90:	bne	1cdac <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1cd94:	mov	r0, r5
   1cd98:	mov	r1, r6
   1cd9c:	mov	r2, r4
   1cda0:	bl	11704 <mycore_strncasecmp@plt>
   1cda4:	cmp	r0, #0
   1cda8:	beq	1cde0 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x78>
   1cdac:	mov	r0, r5
   1cdb0:	mov	r1, r6
   1cdb4:	mov	r2, r4
   1cdb8:	bl	11704 <mycore_strncasecmp@plt>
   1cdbc:	cmp	r0, #0
   1cdc0:	beq	1cdcc <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x64>
   1cdc4:	mov	r0, #0
   1cdc8:	pop	{r4, r5, r6, sl, fp, pc}
   1cdcc:	ldrb	r1, [r5, r4]
   1cdd0:	mov	r0, #1
   1cdd4:	cmp	r1, #45	; 0x2d
   1cdd8:	movne	r0, #0
   1cddc:	pop	{r4, r5, r6, sl, fp, pc}
   1cde0:	mov	r0, #1
   1cde4:	pop	{r4, r5, r6, sl, fp, pc}

0001cde8 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1cde8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cdec:	add	fp, sp, #28
   1cdf0:	sub	sp, sp, #4
   1cdf4:	cmp	r0, #0
   1cdf8:	beq	1ceb4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xcc>
   1cdfc:	mov	sl, r3
   1ce00:	mov	r5, r2
   1ce04:	mov	r6, r1
   1ce08:	mov	r9, r0
   1ce0c:	ldr	r8, [fp, #8]
   1ce10:	mov	r7, r0
   1ce14:	ldr	r0, [r0, #32]
   1ce18:	cmp	r0, #0
   1ce1c:	beq	1ce90 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1ce20:	ldr	r4, [r0, #40]	; 0x28
   1ce24:	cmp	r4, #0
   1ce28:	bne	1ce3c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x54>
   1ce2c:	b	1ce90 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1ce30:	ldr	r4, [r4]
   1ce34:	cmp	r4, #0
   1ce38:	beq	1ce90 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1ce3c:	add	r0, r4, #28
   1ce40:	mov	r1, sl
   1ce44:	mov	r2, r8
   1ce48:	blx	r5
   1ce4c:	cmp	r0, #0
   1ce50:	beq	1ce30 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1ce54:	ldr	r0, [r6]
   1ce58:	ldr	r1, [r6, #8]
   1ce5c:	str	r7, [r0, r1, lsl #2]
   1ce60:	add	r0, r1, #1
   1ce64:	str	r0, [r6, #8]
   1ce68:	ldr	r1, [r6, #4]
   1ce6c:	cmp	r0, r1
   1ce70:	bcc	1ce30 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1ce74:	mov	r0, r6
   1ce78:	mov	r1, #1024	; 0x400
   1ce7c:	mov	r2, #0
   1ce80:	bl	121b4 <myhtml_collection_check_size@plt>
   1ce84:	cmp	r0, #0
   1ce88:	beq	1ce30 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x48>
   1ce8c:	b	1ceb8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xd0>
   1ce90:	ldr	r0, [r7, #20]
   1ce94:	cmp	r0, #0
   1ce98:	bne	1ce10 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1ce9c:	ldr	r0, [r7, #16]
   1cea0:	cmp	r0, #0
   1cea4:	bne	1ce10 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x28>
   1cea8:	ldr	r7, [r7, #24]
   1ceac:	cmp	r7, r9
   1ceb0:	bne	1ce9c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb4>
   1ceb4:	mov	r0, #0
   1ceb8:	sub	sp, fp, #28
   1cebc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cec0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1cec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cec4:	add	fp, sp, #28
   1cec8:	sub	sp, sp, #4
   1cecc:	cmp	r0, #0
   1ced0:	beq	1cfb0 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf0>
   1ced4:	mov	r4, r3
   1ced8:	mov	sl, r2
   1cedc:	mov	r6, r1
   1cee0:	mov	r7, r0
   1cee4:	ldr	r5, [fp, #8]
   1cee8:	mov	r8, r0
   1ceec:	ldr	r0, [r0, #32]
   1cef0:	cmp	r0, #0
   1cef4:	beq	1cf8c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1cef8:	ldr	r9, [r0, #40]	; 0x28
   1cefc:	cmp	r9, #0
   1cf00:	bne	1cf14 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x54>
   1cf04:	b	1cf8c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1cf08:	ldr	r9, [r9]
   1cf0c:	cmp	r9, #0
   1cf10:	beq	1cf8c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1cf14:	ldr	r0, [r9, #16]
   1cf18:	cmp	r0, r5
   1cf1c:	bne	1cf08 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cf20:	ldr	r0, [r9, #8]
   1cf24:	mov	r1, r4
   1cf28:	mov	r2, r5
   1cf2c:	bl	11704 <mycore_strncasecmp@plt>
   1cf30:	cmp	r0, #0
   1cf34:	bne	1cf08 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cf38:	add	r0, r9, #28
   1cf3c:	ldr	r1, [fp, #12]
   1cf40:	ldr	r2, [fp, #16]
   1cf44:	blx	sl
   1cf48:	cmp	r0, #0
   1cf4c:	beq	1cf08 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cf50:	ldr	r0, [r6]
   1cf54:	ldr	r1, [r6, #8]
   1cf58:	str	r8, [r0, r1, lsl #2]
   1cf5c:	add	r0, r1, #1
   1cf60:	str	r0, [r6, #8]
   1cf64:	ldr	r1, [r6, #4]
   1cf68:	cmp	r0, r1
   1cf6c:	bcc	1cf08 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cf70:	mov	r0, r6
   1cf74:	mov	r1, #1024	; 0x400
   1cf78:	mov	r2, #0
   1cf7c:	bl	121b4 <myhtml_collection_check_size@plt>
   1cf80:	cmp	r0, #0
   1cf84:	beq	1cf08 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x48>
   1cf88:	b	1cfb4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xf4>
   1cf8c:	ldr	r0, [r8, #20]
   1cf90:	cmp	r0, #0
   1cf94:	bne	1cee8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cf98:	ldr	r0, [r8, #16]
   1cf9c:	cmp	r0, #0
   1cfa0:	bne	1cee8 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x28>
   1cfa4:	ldr	r8, [r8, #24]
   1cfa8:	cmp	r8, r7
   1cfac:	bne	1cf98 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd8>
   1cfb0:	mov	r0, #0
   1cfb4:	sub	sp, fp, #28
   1cfb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001cfbc <_myhtml_get_nodes_by_attribute_value@@Base>:
   1cfbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1cfc0:	add	fp, sp, #24
   1cfc4:	sub	sp, sp, #16
   1cfc8:	mov	r6, r3
   1cfcc:	mov	r7, r2
   1cfd0:	mov	r5, r1
   1cfd4:	mov	r4, r0
   1cfd8:	ldr	r8, [fp, #24]
   1cfdc:	cmp	r1, #0
   1cfe0:	beq	1d024 <_myhtml_get_nodes_by_attribute_value@@Base+0x68>
   1cfe4:	ldr	r3, [fp, #8]
   1cfe8:	cmp	r7, #0
   1cfec:	ldreq	r7, [r4, #96]	; 0x60
   1cff0:	ldr	r0, [fp, #20]
   1cff4:	ldr	r4, [fp, #16]
   1cff8:	cmp	r3, #0
   1cffc:	ldrne	r1, [fp, #12]
   1d000:	cmpne	r1, #0
   1d004:	bne	1d05c <_myhtml_get_nodes_by_attribute_value@@Base+0xa0>
   1d008:	str	r0, [sp]
   1d00c:	mov	r0, r7
   1d010:	mov	r1, r5
   1d014:	mov	r2, r6
   1d018:	mov	r3, r4
   1d01c:	bl	110a4 <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1d020:	b	1d074 <_myhtml_get_nodes_by_attribute_value@@Base+0xb8>
   1d024:	mov	r0, #1024	; 0x400
   1d028:	mov	r1, r8
   1d02c:	bl	11764 <myhtml_collection_create@plt>
   1d030:	mov	r5, r0
   1d034:	cmp	r8, #0
   1d038:	beq	1d08c <_myhtml_get_nodes_by_attribute_value@@Base+0xd0>
   1d03c:	mov	r0, #0
   1d040:	cmp	r5, #0
   1d044:	beq	1d054 <_myhtml_get_nodes_by_attribute_value@@Base+0x98>
   1d048:	ldr	r1, [r8]
   1d04c:	cmp	r1, #0
   1d050:	beq	1cfe4 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1d054:	sub	sp, fp, #24
   1d058:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d05c:	stm	sp, {r1, r4}
   1d060:	str	r0, [sp, #8]
   1d064:	mov	r0, r7
   1d068:	mov	r1, r5
   1d06c:	mov	r2, r6
   1d070:	bl	1129c <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1d074:	cmp	r8, #0
   1d078:	cmpne	r0, #0
   1d07c:	strne	r0, [r8]
   1d080:	mov	r0, r5
   1d084:	sub	sp, fp, #24
   1d088:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d08c:	cmp	r5, #0
   1d090:	bne	1cfe4 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1d094:	mov	r0, #0
   1d098:	sub	sp, fp, #24
   1d09c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d0a0 <myhtml_get_nodes_by_attribute_value@@Base>:
   1d0a0:	push	{fp, lr}
   1d0a4:	mov	fp, sp
   1d0a8:	ldr	lr, [pc, #28]	; 1d0cc <myhtml_get_nodes_by_attribute_value@@Base+0x2c>
   1d0ac:	ldr	lr, [pc, lr]
   1d0b0:	ldr	ip, [pc, #24]	; 1d0d0 <myhtml_get_nodes_by_attribute_value@@Base+0x30>
   1d0b4:	ldr	ip, [pc, ip]
   1d0b8:	cmp	r3, #0
   1d0bc:	movne	ip, lr
   1d0c0:	mov	r3, ip
   1d0c4:	pop	{fp, lr}
   1d0c8:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d0cc:	andeq	sl, pc, r4, ror #14
   1d0d0:	andeq	sl, pc, r4, lsl #15

0001d0d4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1d0d4:	push	{fp, lr}
   1d0d8:	mov	fp, sp
   1d0dc:	ldr	lr, [pc, #28]	; 1d100 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x2c>
   1d0e0:	ldr	lr, [pc, lr]
   1d0e4:	ldr	ip, [pc, #24]	; 1d104 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x30>
   1d0e8:	ldr	ip, [pc, ip]
   1d0ec:	cmp	r3, #0
   1d0f0:	movne	ip, lr
   1d0f4:	mov	r3, ip
   1d0f8:	pop	{fp, lr}
   1d0fc:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d100:	andeq	sl, pc, r4, asr #11
   1d104:	andeq	sl, pc, ip, asr #15

0001d108 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1d108:	push	{fp, lr}
   1d10c:	mov	fp, sp
   1d110:	ldr	lr, [pc, #28]	; 1d134 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x2c>
   1d114:	ldr	lr, [pc, lr]
   1d118:	ldr	ip, [pc, #24]	; 1d138 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x30>
   1d11c:	ldr	ip, [pc, ip]
   1d120:	cmp	r3, #0
   1d124:	movne	ip, lr
   1d128:	mov	r3, ip
   1d12c:	pop	{fp, lr}
   1d130:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d134:	andeq	sl, pc, ip, ror #11
   1d138:	ldrdeq	sl, [pc], -r4

0001d13c <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1d13c:	push	{fp, lr}
   1d140:	mov	fp, sp
   1d144:	ldr	lr, [pc, #28]	; 1d168 <myhtml_get_nodes_by_attribute_value_end@@Base+0x2c>
   1d148:	ldr	lr, [pc, lr]
   1d14c:	ldr	ip, [pc, #24]	; 1d16c <myhtml_get_nodes_by_attribute_value_end@@Base+0x30>
   1d150:	ldr	ip, [pc, ip]
   1d154:	cmp	r3, #0
   1d158:	movne	ip, lr
   1d15c:	mov	r3, ip
   1d160:	pop	{fp, lr}
   1d164:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d168:	andeq	sl, pc, r4, asr #15
   1d16c:	andeq	sl, pc, r0, lsr r6	; <UNPREDICTABLE>

0001d170 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1d170:	push	{fp, lr}
   1d174:	mov	fp, sp
   1d178:	ldr	lr, [pc, #28]	; 1d19c <myhtml_get_nodes_by_attribute_value_contain@@Base+0x2c>
   1d17c:	ldr	lr, [pc, lr]
   1d180:	ldr	ip, [pc, #24]	; 1d1a0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x30>
   1d184:	ldr	ip, [pc, ip]
   1d188:	cmp	r3, #0
   1d18c:	movne	ip, lr
   1d190:	mov	r3, ip
   1d194:	pop	{fp, lr}
   1d198:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d19c:	andeq	sl, pc, r8, ror r5	; <UNPREDICTABLE>
   1d1a0:	muleq	pc, r0, r6	; <UNPREDICTABLE>

0001d1a4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1d1a4:	push	{fp, lr}
   1d1a8:	mov	fp, sp
   1d1ac:	ldr	lr, [pc, #28]	; 1d1d0 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x2c>
   1d1b0:	ldr	lr, [pc, lr]
   1d1b4:	ldr	ip, [pc, #24]	; 1d1d4 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x30>
   1d1b8:	ldr	ip, [pc, ip]
   1d1bc:	cmp	r3, #0
   1d1c0:	movne	ip, lr
   1d1c4:	mov	r3, ip
   1d1c8:	pop	{fp, lr}
   1d1cc:	b	1cfbc <_myhtml_get_nodes_by_attribute_value@@Base>
   1d1d0:	andeq	sl, pc, r0, ror #11
   1d1d4:	andeq	sl, pc, r4, asr #12

0001d1d8 <myhtml_attribute_next@@Base>:
   1d1d8:	ldr	r0, [r0]
   1d1dc:	bx	lr

0001d1e0 <myhtml_attribute_prev@@Base>:
   1d1e0:	ldr	r0, [r0, #4]
   1d1e4:	bx	lr

0001d1e8 <myhtml_attribute_namespace@@Base>:
   1d1e8:	ldr	r0, [r0, #64]	; 0x40
   1d1ec:	bx	lr

0001d1f0 <myhtml_attribute_namespace_set@@Base>:
   1d1f0:	str	r1, [r0, #64]	; 0x40
   1d1f4:	bx	lr

0001d1f8 <myhtml_attribute_key@@Base>:
   1d1f8:	mov	r2, r0
   1d1fc:	ldr	r0, [r0, #8]
   1d200:	cmp	r0, #0
   1d204:	beq	1d224 <myhtml_attribute_key@@Base+0x2c>
   1d208:	ldr	r2, [r2, #16]
   1d20c:	cmp	r2, #0
   1d210:	beq	1d224 <myhtml_attribute_key@@Base+0x2c>
   1d214:	cmp	r1, #0
   1d218:	strne	r2, [r1]
   1d21c:	bxne	lr
   1d220:	bx	lr
   1d224:	mov	r0, #0
   1d228:	cmp	r1, #0
   1d22c:	strne	r0, [r1]
   1d230:	bx	lr

0001d234 <myhtml_attribute_value@@Base>:
   1d234:	mov	r2, r0
   1d238:	ldr	r0, [r0, #28]
   1d23c:	cmp	r0, #0
   1d240:	beq	1d260 <myhtml_attribute_value@@Base+0x2c>
   1d244:	ldr	r2, [r2, #36]	; 0x24
   1d248:	cmp	r2, #0
   1d24c:	beq	1d260 <myhtml_attribute_value@@Base+0x2c>
   1d250:	cmp	r1, #0
   1d254:	strne	r2, [r1]
   1d258:	bxne	lr
   1d25c:	bx	lr
   1d260:	mov	r0, #0
   1d264:	cmp	r1, #0
   1d268:	strne	r0, [r1]
   1d26c:	bx	lr

0001d270 <myhtml_attribute_key_string@@Base>:
   1d270:	cmp	r0, #0
   1d274:	addne	r0, r0, #8
   1d278:	bx	lr

0001d27c <myhtml_attribute_value_string@@Base>:
   1d27c:	cmp	r0, #0
   1d280:	addne	r0, r0, #28
   1d284:	bx	lr

0001d288 <myhtml_attribute_by_key@@Base>:
   1d288:	cmp	r0, #0
   1d28c:	beq	1d2a0 <myhtml_attribute_by_key@@Base+0x18>
   1d290:	ldr	r0, [r0, #32]
   1d294:	cmp	r0, #0
   1d298:	beq	1d2a0 <myhtml_attribute_by_key@@Base+0x18>
   1d29c:	b	1225c <myhtml_token_attr_by_name@plt>
   1d2a0:	mov	r0, #0
   1d2a4:	bx	lr

0001d2a8 <myhtml_attribute_add@@Base>:
   1d2a8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d2ac:	add	fp, sp, #24
   1d2b0:	sub	sp, sp, #16
   1d2b4:	cmp	r0, #0
   1d2b8:	beq	1d334 <myhtml_attribute_add@@Base+0x8c>
   1d2bc:	mov	r6, r3
   1d2c0:	mov	r8, r2
   1d2c4:	mov	r5, r1
   1d2c8:	mov	r7, r0
   1d2cc:	ldr	r0, [r0, #32]
   1d2d0:	ldr	r4, [r7, #40]	; 0x28
   1d2d4:	cmp	r0, #0
   1d2d8:	bne	1d300 <myhtml_attribute_add@@Base+0x58>
   1d2dc:	ldr	r0, [r4, #8]
   1d2e0:	ldr	r1, [r4, #40]	; 0x28
   1d2e4:	bl	11e0c <myhtml_token_node_create@plt>
   1d2e8:	str	r0, [r7, #32]
   1d2ec:	cmp	r0, #0
   1d2f0:	beq	1d334 <myhtml_attribute_add@@Base+0x8c>
   1d2f4:	ldr	r1, [r0, #48]	; 0x30
   1d2f8:	orr	r1, r1, #4
   1d2fc:	str	r1, [r0, #48]	; 0x30
   1d300:	ldr	r2, [fp, #12]
   1d304:	ldr	r3, [fp, #8]
   1d308:	ldr	r1, [r7, #32]
   1d30c:	ldr	r0, [r4, #8]
   1d310:	ldr	r7, [r4, #40]	; 0x28
   1d314:	str	r6, [sp]
   1d318:	stmib	sp, {r3, r7}
   1d31c:	str	r2, [sp, #12]
   1d320:	mov	r2, r5
   1d324:	mov	r3, r8
   1d328:	bl	11c08 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1d32c:	sub	sp, fp, #24
   1d330:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1d334:	mov	r0, #0
   1d338:	sub	sp, fp, #24
   1d33c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d340 <myhtml_attribute_remove@@Base>:
   1d340:	cmp	r0, #0
   1d344:	beq	1d358 <myhtml_attribute_remove@@Base+0x18>
   1d348:	ldr	r0, [r0, #32]
   1d34c:	cmp	r0, #0
   1d350:	beq	1d358 <myhtml_attribute_remove@@Base+0x18>
   1d354:	b	119a4 <myhtml_token_attr_remove@plt>
   1d358:	mov	r0, #0
   1d35c:	bx	lr

0001d360 <myhtml_attribute_remove_by_key@@Base>:
   1d360:	cmp	r0, #0
   1d364:	beq	1d378 <myhtml_attribute_remove_by_key@@Base+0x18>
   1d368:	ldr	r0, [r0, #32]
   1d36c:	cmp	r0, #0
   1d370:	beq	1d378 <myhtml_attribute_remove_by_key@@Base+0x18>
   1d374:	b	12244 <myhtml_token_attr_remove_by_name@plt>
   1d378:	mov	r0, #0
   1d37c:	bx	lr

0001d380 <myhtml_attribute_delete@@Base>:
   1d380:	push	{r4, r5, fp, lr}
   1d384:	add	fp, sp, #8
   1d388:	cmp	r1, #0
   1d38c:	popeq	{r4, r5, fp, pc}
   1d390:	mov	r5, r0
   1d394:	ldr	r0, [r1, #32]
   1d398:	cmp	r0, #0
   1d39c:	beq	1d3bc <myhtml_attribute_delete@@Base+0x3c>
   1d3a0:	mov	r4, r2
   1d3a4:	mov	r1, r2
   1d3a8:	bl	119a4 <myhtml_token_attr_remove@plt>
   1d3ac:	mov	r0, r5
   1d3b0:	mov	r1, r4
   1d3b4:	pop	{r4, r5, fp, lr}
   1d3b8:	b	1d3c0 <myhtml_attribute_free@@Base>
   1d3bc:	pop	{r4, r5, fp, pc}

0001d3c0 <myhtml_attribute_free@@Base>:
   1d3c0:	push	{r4, r5, fp, lr}
   1d3c4:	add	fp, sp, #8
   1d3c8:	mov	r4, r1
   1d3cc:	mov	r5, r0
   1d3d0:	ldr	r2, [r1, #8]
   1d3d4:	cmp	r2, #0
   1d3d8:	beq	1d3e8 <myhtml_attribute_free@@Base+0x28>
   1d3dc:	ldr	r0, [r4, #20]
   1d3e0:	ldr	r1, [r4, #24]
   1d3e4:	bl	11b48 <mchar_async_free@plt>
   1d3e8:	ldr	r2, [r4, #28]
   1d3ec:	cmp	r2, #0
   1d3f0:	beq	1d400 <myhtml_attribute_free@@Base+0x40>
   1d3f4:	ldr	r0, [r4, #40]	; 0x28
   1d3f8:	ldr	r1, [r4, #44]	; 0x2c
   1d3fc:	bl	11b48 <mchar_async_free@plt>
   1d400:	ldr	r0, [r5, #8]
   1d404:	ldr	r0, [r0, #8]
   1d408:	mov	r1, r4
   1d40c:	pop	{r4, r5, fp, lr}
   1d410:	b	114dc <mcobject_async_free@plt>

0001d414 <myhtml_attribute_key_raw_position@@Base>:
   1d414:	cmp	r1, #0
   1d418:	moveq	r1, #0
   1d41c:	streq	r1, [r0]
   1d420:	streq	r1, [r0, #4]
   1d424:	bxeq	lr
   1d428:	ldr	r2, [r1, #48]	; 0x30
   1d42c:	ldr	r1, [r1, #52]	; 0x34
   1d430:	str	r2, [r0]
   1d434:	str	r1, [r0, #4]
   1d438:	bx	lr

0001d43c <myhtml_attribute_value_raw_position@@Base>:
   1d43c:	cmp	r1, #0
   1d440:	moveq	r1, #0
   1d444:	streq	r1, [r0]
   1d448:	streq	r1, [r0, #4]
   1d44c:	bxeq	lr
   1d450:	ldr	r2, [r1, #56]	; 0x38
   1d454:	ldr	r1, [r1, #60]	; 0x3c
   1d458:	str	r2, [r0]
   1d45c:	str	r1, [r0, #4]
   1d460:	bx	lr

0001d464 <myhtml_collection_clean@@Base>:
   1d464:	cmp	r0, #0
   1d468:	movne	r1, #0
   1d46c:	strne	r1, [r0, #8]
   1d470:	bx	lr

0001d474 <myhtml_collection_destroy@@Base>:
   1d474:	cmp	r0, #0
   1d478:	beq	1d4a4 <myhtml_collection_destroy@@Base+0x30>
   1d47c:	push	{r4, sl, fp, lr}
   1d480:	add	fp, sp, #8
   1d484:	mov	r4, r0
   1d488:	ldr	r0, [r0]
   1d48c:	cmp	r0, #0
   1d490:	beq	1d498 <myhtml_collection_destroy@@Base+0x24>
   1d494:	bl	12184 <mycore_free@plt>
   1d498:	mov	r0, r4
   1d49c:	bl	12184 <mycore_free@plt>
   1d4a0:	pop	{r4, sl, fp, lr}
   1d4a4:	mov	r0, #0
   1d4a8:	bx	lr

0001d4ac <myhtml_queue_add@@Base>:
   1d4ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1d4b0:	add	fp, sp, #24
   1d4b4:	mov	r6, r2
   1d4b8:	mov	r8, r1
   1d4bc:	mov	r5, r0
   1d4c0:	ldr	r7, [r0, #68]	; 0x44
   1d4c4:	ldr	r0, [r0, #184]	; 0xb8
   1d4c8:	cmp	r2, #0
   1d4cc:	andsne	r0, r0, #4
   1d4d0:	bne	1d5d0 <myhtml_queue_add@@Base+0x124>
   1d4d4:	ldr	r0, [r5, #180]	; 0xb4
   1d4d8:	tst	r0, #16
   1d4dc:	bne	1d534 <myhtml_queue_add@@Base+0x88>
   1d4e0:	cmp	r7, #0
   1d4e4:	strne	r6, [r7, #4]
   1d4e8:	ldr	r0, [r5]
   1d4ec:	ldr	r1, [r5, #20]
   1d4f0:	ldr	r0, [r0]
   1d4f4:	bl	11968 <mythread_queue_node_malloc_round@plt>
   1d4f8:	str	r0, [r5, #68]	; 0x44
   1d4fc:	ldr	r1, [r5, #20]
   1d500:	ldr	r0, [r1]
   1d504:	ldr	r0, [r0, #12]
   1d508:	cmp	r0, #0
   1d50c:	bne	1d52c <myhtml_queue_add@@Base+0x80>
   1d510:	ldr	r0, [r5]
   1d514:	ldr	r0, [r0, #4]
   1d518:	bl	120dc <mythread_queue_list_entry_make_batch@plt>
   1d51c:	ldr	r0, [r5]
   1d520:	ldr	r1, [r5, #20]
   1d524:	ldr	r0, [r0]
   1d528:	bl	1228c <mythread_queue_list_entry_make_stream@plt>
   1d52c:	ldr	r0, [r5, #68]	; 0x44
   1d530:	b	1d578 <myhtml_queue_add@@Base+0xcc>
   1d534:	cmp	r6, #0
   1d538:	cmpne	r7, #0
   1d53c:	beq	1d55c <myhtml_queue_add@@Base+0xb0>
   1d540:	str	r6, [r7, #4]
   1d544:	mov	r0, #0
   1d548:	mov	r1, r7
   1d54c:	bl	1123c <myhtml_parser_worker@plt>
   1d550:	mov	r0, #0
   1d554:	mov	r1, r7
   1d558:	bl	12388 <myhtml_parser_stream@plt>
   1d55c:	ldr	r0, [r5]
   1d560:	ldr	r1, [r5, #24]
   1d564:	ldr	r0, [r0]
   1d568:	mov	r2, #4
   1d56c:	mov	r3, #0
   1d570:	bl	12064 <mythread_queue_node_malloc_limit@plt>
   1d574:	str	r0, [r5, #68]	; 0x44
   1d578:	mov	r4, #2
   1d57c:	cmp	r0, #0
   1d580:	beq	1d604 <myhtml_queue_add@@Base+0x158>
   1d584:	str	r7, [r0, #8]
   1d588:	str	r5, [r0]
   1d58c:	cmp	r6, #0
   1d590:	cmpne	r7, #0
   1d594:	beq	1d5a4 <myhtml_queue_add@@Base+0xf8>
   1d598:	mov	r0, r5
   1d59c:	mov	r1, r6
   1d5a0:	bl	1168c <myhtml_tokenizer_calc_current_namespace@plt>
   1d5a4:	ldr	r0, [r5, #8]
   1d5a8:	ldr	r1, [r0, #12]
   1d5ac:	bl	11e0c <myhtml_token_node_create@plt>
   1d5b0:	str	r0, [r5, #64]	; 0x40
   1d5b4:	cmp	r0, #0
   1d5b8:	beq	1d604 <myhtml_queue_add@@Base+0x158>
   1d5bc:	ldr	r1, [r5, #192]	; 0xc0
   1d5c0:	add	r1, r1, r8
   1d5c4:	str	r1, [r0, #24]
   1d5c8:	str	r1, [r0, #32]
   1d5cc:	b	1d600 <myhtml_queue_add@@Base+0x154>
   1d5d0:	ldr	r0, [r6]
   1d5d4:	cmp	r0, #1
   1d5d8:	bne	1d4d4 <myhtml_queue_add@@Base+0x28>
   1d5dc:	ldr	r0, [r6, #48]	; 0x30
   1d5e0:	tst	r0, #8
   1d5e4:	beq	1d4d4 <myhtml_queue_add@@Base+0x28>
   1d5e8:	mov	r0, r6
   1d5ec:	bl	12310 <myhtml_token_node_clean@plt>
   1d5f0:	ldr	r0, [r5, #192]	; 0xc0
   1d5f4:	add	r0, r0, r8
   1d5f8:	str	r0, [r6, #24]
   1d5fc:	str	r0, [r6, #32]
   1d600:	mov	r4, #0
   1d604:	mov	r0, r4
   1d608:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001d60c <myhtml_utils_strcmp@@Base>:
   1d60c:	push	{fp, lr}
   1d610:	mov	fp, sp
   1d614:	mov	ip, r0
   1d618:	mov	r0, #1
   1d61c:	cmp	r2, #0
   1d620:	popeq	{fp, pc}
   1d624:	ldrb	lr, [r1]
   1d628:	sub	r3, lr, #65	; 0x41
   1d62c:	uxtb	r3, r3
   1d630:	cmp	r3, #26
   1d634:	orrcc	lr, lr, #96	; 0x60
   1d638:	uxtb	lr, lr
   1d63c:	ldrb	r3, [ip]
   1d640:	cmp	lr, r3
   1d644:	bne	1d65c <myhtml_utils_strcmp@@Base+0x50>
   1d648:	add	r1, r1, #1
   1d64c:	add	ip, ip, #1
   1d650:	subs	r2, r2, #1
   1d654:	bne	1d624 <myhtml_utils_strcmp@@Base+0x18>
   1d658:	pop	{fp, pc}
   1d65c:	mov	r0, #0
   1d660:	pop	{fp, pc}

0001d664 <myhtml_is_html_node@@Base>:
   1d664:	mov	r2, r0
   1d668:	mov	r0, #0
   1d66c:	cmp	r2, #0
   1d670:	beq	1d690 <myhtml_is_html_node@@Base+0x2c>
   1d674:	ldr	r3, [r2, #4]
   1d678:	cmp	r3, r1
   1d67c:	bxne	lr
   1d680:	ldr	r0, [r2, #8]
   1d684:	sub	r0, r0, #1
   1d688:	clz	r0, r0
   1d68c:	lsr	r0, r0, #5
   1d690:	bx	lr

0001d694 <myhtml_version@@Base>:
   1d694:	mov	r1, #5
   1d698:	mov	r2, #0
   1d69c:	mov	r3, #4
   1d6a0:	str	r3, [r0]
   1d6a4:	str	r2, [r0, #4]
   1d6a8:	str	r1, [r0, #8]
   1d6ac:	bx	lr

0001d6b0 <myhtml_node_clone@@Base>:
   1d6b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1d6b4:	add	fp, sp, #24
   1d6b8:	sub	sp, sp, #8
   1d6bc:	mov	r5, r1
   1d6c0:	mov	r6, r0
   1d6c4:	bl	11470 <myhtml_tree_node_create@plt>
   1d6c8:	mov	r4, r0
   1d6cc:	ldr	r7, [r5, #4]
   1d6d0:	cmp	r7, #252	; 0xfc
   1d6d4:	bcc	1d744 <myhtml_node_clone@@Base+0x94>
   1d6d8:	ldr	r0, [r6, #28]
   1d6dc:	mov	r1, r7
   1d6e0:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1d6e4:	mov	r9, r0
   1d6e8:	ldr	r1, [r5, #4]
   1d6ec:	ldr	r0, [r5, #40]	; 0x28
   1d6f0:	ldr	r0, [r0, #28]
   1d6f4:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1d6f8:	mov	r8, r0
   1d6fc:	cmp	r9, #0
   1d700:	beq	1d728 <myhtml_node_clone@@Base+0x78>
   1d704:	ldr	r2, [r8, #8]
   1d708:	ldr	r0, [r9, #8]
   1d70c:	cmp	r0, r2
   1d710:	bne	1d728 <myhtml_node_clone@@Base+0x78>
   1d714:	ldr	r1, [r8, #4]
   1d718:	ldr	r0, [r9, #4]
   1d71c:	bl	12298 <mycore_strncmp@plt>
   1d720:	cmp	r0, #0
   1d724:	beq	1d744 <myhtml_node_clone@@Base+0x94>
   1d728:	ldmib	r8, {r1, r2}
   1d72c:	ldr	r0, [r6, #28]
   1d730:	mov	r3, #1
   1d734:	str	r3, [sp]
   1d738:	mov	r3, #0
   1d73c:	bl	114a0 <myhtml_tag_add@plt>
   1d740:	mov	r7, r0
   1d744:	ldr	r1, [r5, #32]
   1d748:	ldr	r0, [r6, #8]
   1d74c:	ldr	r2, [r6, #40]	; 0x28
   1d750:	ldr	r3, [r6, #44]	; 0x2c
   1d754:	bl	113bc <myhtml_token_node_clone@plt>
   1d758:	str	r0, [r4, #32]
   1d75c:	str	r7, [r4, #4]
   1d760:	ldr	r1, [r5, #8]
   1d764:	str	r1, [r4, #8]
   1d768:	cmp	r0, #0
   1d76c:	beq	1d780 <myhtml_node_clone@@Base+0xd0>
   1d770:	str	r7, [r0]
   1d774:	ldr	r1, [r0, #48]	; 0x30
   1d778:	orr	r1, r1, #4
   1d77c:	str	r1, [r0, #48]	; 0x30
   1d780:	mov	r0, r4
   1d784:	sub	sp, fp, #24
   1d788:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001d78c <myhtml_node_clone_deep@@Base>:
   1d78c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d790:	add	fp, sp, #28
   1d794:	sub	sp, sp, #4
   1d798:	mov	r5, r1
   1d79c:	mov	r9, r0
   1d7a0:	mov	r8, #0
   1d7a4:	cmp	r1, #0
   1d7a8:	mov	r4, #0
   1d7ac:	beq	1d7d0 <myhtml_node_clone_deep@@Base+0x44>
   1d7b0:	ldr	r0, [r5, #40]	; 0x28
   1d7b4:	cmp	r0, #0
   1d7b8:	mov	r4, r5
   1d7bc:	beq	1d7d0 <myhtml_node_clone_deep@@Base+0x44>
   1d7c0:	ldr	r0, [r0, #84]	; 0x54
   1d7c4:	cmp	r0, r5
   1d7c8:	mov	r4, r5
   1d7cc:	ldreq	r4, [r5, #20]
   1d7d0:	mov	r0, r9
   1d7d4:	mov	r1, r4
   1d7d8:	bl	122d4 <myhtml_node_clone@plt>
   1d7dc:	cmp	r0, #0
   1d7e0:	beq	1d864 <myhtml_node_clone_deep@@Base+0xd8>
   1d7e4:	mov	sl, r0
   1d7e8:	ldr	r4, [r4, #20]
   1d7ec:	cmp	r4, #0
   1d7f0:	beq	1d860 <myhtml_node_clone_deep@@Base+0xd4>
   1d7f4:	mov	r7, sl
   1d7f8:	mov	r0, r9
   1d7fc:	mov	r1, r4
   1d800:	bl	122d4 <myhtml_node_clone@plt>
   1d804:	cmp	r0, #0
   1d808:	beq	1d864 <myhtml_node_clone_deep@@Base+0xd8>
   1d80c:	mov	r6, r0
   1d810:	mov	r0, r7
   1d814:	mov	r1, r6
   1d818:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   1d81c:	ldr	r0, [r4, #20]
   1d820:	cmp	r0, #0
   1d824:	bne	1d850 <myhtml_node_clone_deep@@Base+0xc4>
   1d828:	b	1d834 <myhtml_node_clone_deep@@Base+0xa8>
   1d82c:	ldr	r4, [r4, #24]
   1d830:	ldr	r7, [r7, #24]
   1d834:	cmp	r4, r5
   1d838:	beq	1d860 <myhtml_node_clone_deep@@Base+0xd4>
   1d83c:	ldr	r0, [r4, #16]
   1d840:	cmp	r0, #0
   1d844:	beq	1d82c <myhtml_node_clone_deep@@Base+0xa0>
   1d848:	ldr	r0, [r4, #16]
   1d84c:	mov	r6, r7
   1d850:	cmp	r0, #0
   1d854:	mov	r7, r6
   1d858:	mov	r4, r0
   1d85c:	bne	1d7f8 <myhtml_node_clone_deep@@Base+0x6c>
   1d860:	mov	r8, sl
   1d864:	mov	r0, r8
   1d868:	sub	sp, fp, #28
   1d86c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d870 <myhtml_namespace_name_entry_by_name@@Base>:
   1d870:	push	{r4, sl, fp, lr}
   1d874:	add	fp, sp, #8
   1d878:	mov	r2, r1
   1d87c:	mov	ip, r0
   1d880:	ldrb	r1, [r0], r1
   1d884:	ldrb	r0, [r0, #-1]
   1d888:	ldr	r3, [pc, #156]	; 1d92c <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1d88c:	add	r3, pc, r3
   1d890:	ldrb	r0, [r3, r0]
   1d894:	ldrb	r1, [r3, r1]
   1d898:	mul	r1, r1, r2
   1d89c:	mul	r0, r1, r0
   1d8a0:	movw	r1, #27595	; 0x6bcb
   1d8a4:	movt	r1, #44840	; 0xaf28
   1d8a8:	umull	r1, r3, r0, r1
   1d8ac:	sub	r1, r0, r3
   1d8b0:	add	r1, r3, r1, lsr #1
   1d8b4:	lsr	r1, r1, #4
   1d8b8:	mov	r3, #19
   1d8bc:	mls	r0, r1, r3, r0
   1d8c0:	add	r1, r0, #1
   1d8c4:	add	r3, r1, r1, lsl #2
   1d8c8:	ldr	lr, [pc, #96]	; 1d930 <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1d8cc:	add	lr, pc, lr
   1d8d0:	mov	r4, lr
   1d8d4:	ldr	r0, [r4, r3, lsl #2]!
   1d8d8:	cmp	r0, #0
   1d8dc:	beq	1d90c <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1d8e0:	add	r3, lr, r3, lsl #2
   1d8e4:	ldr	r3, [r3, #4]
   1d8e8:	cmp	r3, r2
   1d8ec:	beq	1d914 <myhtml_namespace_name_entry_by_name@@Base+0xa4>
   1d8f0:	cmp	r3, r2
   1d8f4:	bhi	1d90c <myhtml_namespace_name_entry_by_name@@Base+0x9c>
   1d8f8:	add	r0, r1, r1, lsl #2
   1d8fc:	add	r0, lr, r0, lsl #2
   1d900:	ldr	r1, [r0, #12]
   1d904:	add	r3, r1, r1, lsl #2
   1d908:	b	1d8d0 <myhtml_namespace_name_entry_by_name@@Base+0x60>
   1d90c:	mov	r0, #0
   1d910:	pop	{r4, sl, fp, pc}
   1d914:	mov	r1, ip
   1d918:	bl	11704 <mycore_strncasecmp@plt>
   1d91c:	cmp	r0, #0
   1d920:	movne	r4, #0
   1d924:	mov	r0, r4
   1d928:	pop	{r4, sl, fp, pc}
   1d92c:	andeq	pc, sp, r0, lsl #4
   1d930:	andeq	r4, pc, ip, lsl fp	; <UNPREDICTABLE>

0001d934 <myhtml_namespace_id_by_name@@Base>:
   1d934:	push	{r4, sl, fp, lr}
   1d938:	add	fp, sp, #8
   1d93c:	mov	r4, r2
   1d940:	bl	11674 <myhtml_namespace_name_entry_by_name@plt>
   1d944:	cmp	r0, #0
   1d948:	beq	1d964 <myhtml_namespace_id_by_name@@Base+0x30>
   1d94c:	mov	r1, r0
   1d950:	mov	r0, #1
   1d954:	cmp	r4, #0
   1d958:	ldrne	r1, [r1, #8]
   1d95c:	strne	r1, [r4]
   1d960:	pop	{r4, sl, fp, pc}
   1d964:	mov	r0, #0
   1d968:	pop	{r4, sl, fp, pc}

0001d96c <myhtml_namespace_name_by_id@@Base>:
   1d96c:	push	{r4, r5, fp, lr}
   1d970:	add	fp, sp, #8
   1d974:	mov	r5, r1
   1d978:	cmp	r0, #8
   1d97c:	bcc	1d998 <myhtml_namespace_name_by_id@@Base+0x2c>
   1d980:	mov	r4, #0
   1d984:	cmp	r5, #0
   1d988:	beq	1d9b8 <myhtml_namespace_name_by_id@@Base+0x4c>
   1d98c:	str	r4, [r5]
   1d990:	mov	r0, r4
   1d994:	pop	{r4, r5, fp, pc}
   1d998:	ldr	r1, [pc, #32]	; 1d9c0 <myhtml_namespace_name_by_id@@Base+0x54>
   1d99c:	add	r1, pc, r1
   1d9a0:	add	r4, r1, r0, lsl #3
   1d9a4:	cmp	r5, #0
   1d9a8:	beq	1d9b8 <myhtml_namespace_name_by_id@@Base+0x4c>
   1d9ac:	mov	r0, r4
   1d9b0:	bl	11aa0 <strlen@plt>
   1d9b4:	str	r0, [r5]
   1d9b8:	mov	r0, r4
   1d9bc:	pop	{r4, r5, fp, pc}
   1d9c0:	strdeq	pc, [sp], -r0

0001d9c4 <myhtml_namespace_url_by_id@@Base>:
   1d9c4:	cmp	r0, #8
   1d9c8:	bcc	1d9e0 <myhtml_namespace_url_by_id@@Base+0x1c>
   1d9cc:	mov	r0, #0
   1d9d0:	cmp	r1, #0
   1d9d4:	strne	r0, [r1]
   1d9d8:	bxne	lr
   1d9dc:	bx	lr
   1d9e0:	cmp	r1, #0
   1d9e4:	ldr	r2, [pc, #32]	; 1da0c <myhtml_namespace_url_by_id@@Base+0x48>
   1d9e8:	add	r2, pc, r2
   1d9ec:	beq	1da00 <myhtml_namespace_url_by_id@@Base+0x3c>
   1d9f0:	add	r3, r0, r0, lsl #1
   1d9f4:	add	r3, r2, r3, lsl #2
   1d9f8:	ldr	r3, [r3, #4]
   1d9fc:	str	r3, [r1]
   1da00:	add	r0, r0, r0, lsl #1
   1da04:	ldr	r0, [r2, r0, lsl #2]
   1da08:	bx	lr
   1da0c:	muleq	pc, r0, fp	; <UNPREDICTABLE>

0001da10 <myhtml_namespace_id_by_url@@Base>:
   1da10:	mov	r0, #0
   1da14:	bx	lr

0001da18 <myhtml_string_append_with_preprocessing@@Base>:
   1da18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da1c:	add	fp, sp, #28
   1da20:	sub	sp, sp, #4
   1da24:	mov	r8, r3
   1da28:	mov	r6, r2
   1da2c:	mov	r7, r1
   1da30:	mov	r4, r0
   1da34:	ldr	r0, [r0, #4]
   1da38:	ldr	r1, [r4, #8]
   1da3c:	add	r1, r2, r1
   1da40:	add	r1, r1, #1
   1da44:	cmp	r1, r0
   1da48:	bcc	1da54 <myhtml_string_append_with_preprocessing@@Base+0x3c>
   1da4c:	mov	r0, r4
   1da50:	bl	11d7c <mycore_string_realloc@plt>
   1da54:	cmp	r6, #0
   1da58:	beq	1db18 <myhtml_string_append_with_preprocessing@@Base+0x100>
   1da5c:	ldr	r0, [r4]
   1da60:	mov	r5, #0
   1da64:	mov	r9, #189	; 0xbd
   1da68:	mov	sl, #10
   1da6c:	b	1da90 <myhtml_string_append_with_preprocessing@@Base+0x78>
   1da70:	ldr	r2, [r4, #8]
   1da74:	strb	r1, [r0, r2]
   1da78:	ldr	r1, [r4, #8]
   1da7c:	add	r1, r1, #1
   1da80:	str	r1, [r4, #8]
   1da84:	add	r5, r5, #1
   1da88:	cmp	r5, r6
   1da8c:	bcs	1db18 <myhtml_string_append_with_preprocessing@@Base+0x100>
   1da90:	ldrb	r1, [r7, r5]
   1da94:	cmp	r1, #0
   1da98:	beq	1dac8 <myhtml_string_append_with_preprocessing@@Base+0xb0>
   1da9c:	cmp	r1, #13
   1daa0:	bne	1da70 <myhtml_string_append_with_preprocessing@@Base+0x58>
   1daa4:	ldr	r1, [r4, #8]
   1daa8:	strb	sl, [r0, r1]
   1daac:	add	r1, r5, #1
   1dab0:	cmp	r1, r6
   1dab4:	bcs	1db30 <myhtml_string_append_with_preprocessing@@Base+0x118>
   1dab8:	ldrb	r2, [r7, r1]
   1dabc:	cmp	r2, #10
   1dac0:	moveq	r5, r1
   1dac4:	b	1da78 <myhtml_string_append_with_preprocessing@@Base+0x60>
   1dac8:	cmp	r8, #0
   1dacc:	bne	1da70 <myhtml_string_append_with_preprocessing@@Base+0x58>
   1dad0:	ldr	r0, [r4, #4]
   1dad4:	add	r1, r0, #5
   1dad8:	mov	r0, r4
   1dadc:	bl	11d7c <mycore_string_realloc@plt>
   1dae0:	ldr	r0, [r4]
   1dae4:	ldr	r1, [r4, #8]
   1dae8:	mov	r2, #239	; 0xef
   1daec:	strb	r2, [r0, r1]
   1daf0:	ldr	r1, [r4, #8]
   1daf4:	add	r1, r1, #1
   1daf8:	str	r1, [r4, #8]
   1dafc:	mov	r2, #191	; 0xbf
   1db00:	strb	r2, [r0, r1]
   1db04:	ldr	r1, [r4, #8]
   1db08:	add	r1, r1, #1
   1db0c:	str	r1, [r4, #8]
   1db10:	strb	r9, [r0, r1]
   1db14:	b	1da78 <myhtml_string_append_with_preprocessing@@Base+0x60>
   1db18:	ldr	r1, [r4]
   1db1c:	ldr	r2, [r4, #8]
   1db20:	mov	r0, #0
   1db24:	strb	r0, [r1, r2]
   1db28:	sub	sp, fp, #28
   1db2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db30:	ldr	r1, [r4, #4]
   1db34:	ldr	r0, [r4, #8]
   1db38:	add	r2, r0, #1
   1db3c:	str	r2, [r4, #8]
   1db40:	cmp	r2, r1
   1db44:	bcc	1db54 <myhtml_string_append_with_preprocessing@@Base+0x13c>
   1db48:	add	r1, r0, #3
   1db4c:	mov	r0, r4
   1db50:	bl	11d7c <mycore_string_realloc@plt>
   1db54:	ldr	r0, [r4]
   1db58:	ldr	r1, [r4, #8]
   1db5c:	mov	r2, #0
   1db60:	strb	r2, [r0, r1]
   1db64:	ldr	r0, [r4, #8]
   1db68:	sub	sp, fp, #28
   1db6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db70 <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1db70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db74:	add	fp, sp, #28
   1db78:	sub	sp, sp, #4
   1db7c:	mov	r8, r3
   1db80:	mov	r6, r2
   1db84:	mov	r7, r1
   1db88:	mov	r4, r0
   1db8c:	ldr	r0, [r0, #4]
   1db90:	ldr	r1, [r4, #8]
   1db94:	add	r1, r2, r1
   1db98:	add	r1, r1, #1
   1db9c:	cmp	r1, r0
   1dba0:	bcc	1dbac <myhtml_string_append_lowercase_with_preprocessing@@Base+0x3c>
   1dba4:	mov	r0, r4
   1dba8:	bl	11d7c <mycore_string_realloc@plt>
   1dbac:	cmp	r6, #0
   1dbb0:	beq	1dc7c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x10c>
   1dbb4:	ldr	r0, [r4]
   1dbb8:	mov	r5, #0
   1dbbc:	ldr	sl, [pc, #272]	; 1dcd4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x164>
   1dbc0:	add	sl, pc, sl
   1dbc4:	mov	r9, #10
   1dbc8:	b	1dbf0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x80>
   1dbcc:	ldrb	r1, [sl, r1]
   1dbd0:	ldr	r2, [r4, #8]
   1dbd4:	strb	r1, [r0, r2]
   1dbd8:	ldr	r1, [r4, #8]
   1dbdc:	add	r1, r1, #1
   1dbe0:	str	r1, [r4, #8]
   1dbe4:	add	r5, r5, #1
   1dbe8:	cmp	r5, r6
   1dbec:	bcs	1dc7c <myhtml_string_append_lowercase_with_preprocessing@@Base+0x10c>
   1dbf0:	ldrb	r1, [r7, r5]
   1dbf4:	cmp	r1, #0
   1dbf8:	beq	1dc28 <myhtml_string_append_lowercase_with_preprocessing@@Base+0xb8>
   1dbfc:	cmp	r1, #13
   1dc00:	bne	1dbcc <myhtml_string_append_lowercase_with_preprocessing@@Base+0x5c>
   1dc04:	ldr	r1, [r4, #8]
   1dc08:	strb	r9, [r0, r1]
   1dc0c:	add	r1, r5, #1
   1dc10:	cmp	r1, r6
   1dc14:	bcs	1dc94 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x124>
   1dc18:	ldrb	r2, [r7, r1]
   1dc1c:	cmp	r2, #10
   1dc20:	moveq	r5, r1
   1dc24:	b	1dbd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x68>
   1dc28:	cmp	r8, #0
   1dc2c:	bne	1dbcc <myhtml_string_append_lowercase_with_preprocessing@@Base+0x5c>
   1dc30:	ldr	r0, [r4, #4]
   1dc34:	add	r1, r0, #5
   1dc38:	mov	r0, r4
   1dc3c:	bl	11d7c <mycore_string_realloc@plt>
   1dc40:	ldr	r0, [r4]
   1dc44:	ldr	r1, [r4, #8]
   1dc48:	mov	r2, #239	; 0xef
   1dc4c:	strb	r2, [r0, r1]
   1dc50:	ldr	r1, [r4, #8]
   1dc54:	add	r1, r1, #1
   1dc58:	str	r1, [r4, #8]
   1dc5c:	mov	r2, #191	; 0xbf
   1dc60:	strb	r2, [r0, r1]
   1dc64:	ldr	r1, [r4, #8]
   1dc68:	add	r1, r1, #1
   1dc6c:	str	r1, [r4, #8]
   1dc70:	mov	r2, #189	; 0xbd
   1dc74:	strb	r2, [r0, r1]
   1dc78:	b	1dbd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x68>
   1dc7c:	ldr	r1, [r4]
   1dc80:	ldr	r2, [r4, #8]
   1dc84:	mov	r0, #0
   1dc88:	strb	r0, [r1, r2]
   1dc8c:	sub	sp, fp, #28
   1dc90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc94:	ldr	r1, [r4, #4]
   1dc98:	ldr	r0, [r4, #8]
   1dc9c:	add	r2, r0, #1
   1dca0:	str	r2, [r4, #8]
   1dca4:	cmp	r2, r1
   1dca8:	bcc	1dcb8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x148>
   1dcac:	add	r1, r0, #3
   1dcb0:	mov	r0, r4
   1dcb4:	bl	11d7c <mycore_string_realloc@plt>
   1dcb8:	ldr	r0, [r4]
   1dcbc:	ldr	r1, [r4, #8]
   1dcc0:	mov	r2, #0
   1dcc4:	strb	r2, [r0, r1]
   1dcc8:	ldr	r0, [r4, #8]
   1dccc:	sub	sp, fp, #28
   1dcd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dcd4:	andeq	pc, sp, r7, ror #1

0001dcd8 <myhtml_string_before_append_any_preprocessing@@Base>:
   1dcd8:	mov	r0, #0
   1dcdc:	cmp	r2, #0
   1dce0:	cmpne	r3, #0
   1dce4:	ldrbne	r0, [r1]
   1dce8:	subne	r0, r0, #10
   1dcec:	clzne	r0, r0
   1dcf0:	lsrne	r0, r0, #5
   1dcf4:	bx	lr

0001dcf8 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1dcf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dcfc:	add	fp, sp, #24
   1dd00:	sub	sp, sp, #32
   1dd04:	mov	r4, r3
   1dd08:	mov	r5, r2
   1dd0c:	mov	r6, r1
   1dd10:	mov	r7, r0
   1dd14:	add	r8, sp, #8
   1dd18:	mov	r0, r8
   1dd1c:	bl	1162c <myencoding_result_clean@plt>
   1dd20:	ldr	r0, [fp, #8]
   1dd24:	str	r4, [sp]
   1dd28:	str	r0, [sp, #4]
   1dd2c:	mov	r0, r7
   1dd30:	mov	r1, r8
   1dd34:	mov	r2, r6
   1dd38:	mov	r3, r5
   1dd3c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1dd40:	sub	sp, fp, #24
   1dd44:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001dd48 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1dd48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd4c:	add	fp, sp, #28
   1dd50:	sub	sp, sp, #4
   1dd54:	mov	r5, r3
   1dd58:	mov	r8, r2
   1dd5c:	mov	r7, r1
   1dd60:	mov	r4, r0
   1dd64:	ldr	r0, [r0, #4]
   1dd68:	ldr	r1, [r4, #8]
   1dd6c:	add	r1, r3, r1
   1dd70:	add	r1, r1, #1
   1dd74:	ldr	r6, [fp, #8]
   1dd78:	cmp	r1, r0
   1dd7c:	bcc	1dd88 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1dd80:	mov	r0, r4
   1dd84:	bl	11d7c <mycore_string_realloc@plt>
   1dd88:	mov	r0, r6
   1dd8c:	bl	11c44 <myencoding_get_function_by_id@plt>
   1dd90:	cmp	r5, #0
   1dd94:	beq	1deb0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1dd98:	mov	r9, r0
   1dd9c:	mov	sl, #0
   1dda0:	b	1ddbc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1dda4:	ldr	r0, [r4, #8]
   1dda8:	add	r0, r0, r6
   1ddac:	str	r0, [r4, #8]
   1ddb0:	add	sl, sl, #1
   1ddb4:	cmp	sl, r5
   1ddb8:	bcs	1deb0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1ddbc:	ldrb	r0, [r8, sl]
   1ddc0:	mov	r1, r7
   1ddc4:	blx	r9
   1ddc8:	cmp	r0, #0
   1ddcc:	bne	1ddb0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   1ddd0:	ldr	r1, [r4, #4]
   1ddd4:	ldr	r0, [r4, #8]
   1ddd8:	add	r2, r0, #5
   1dddc:	cmp	r2, r1
   1dde0:	bcc	1ddf0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xa8>
   1dde4:	add	r1, r0, #6
   1dde8:	mov	r0, r4
   1ddec:	bl	11d7c <mycore_string_realloc@plt>
   1ddf0:	ldr	r0, [r7, #12]
   1ddf4:	ldr	r1, [r4]
   1ddf8:	ldr	r2, [r4, #8]
   1ddfc:	add	r1, r1, r2
   1de00:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   1de04:	mov	r6, r0
   1de08:	cmp	r0, #1
   1de0c:	bne	1dda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1de10:	ldr	r0, [r4]
   1de14:	ldr	r1, [r4, #8]
   1de18:	ldrb	r2, [r0, r1]
   1de1c:	cmp	r2, #0
   1de20:	beq	1de50 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x108>
   1de24:	cmp	r2, #13
   1de28:	bne	1dda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1de2c:	mov	r2, #10
   1de30:	strb	r2, [r0, r1]
   1de34:	add	r0, sl, #1
   1de38:	cmp	r0, r5
   1de3c:	bcs	1dee4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x19c>
   1de40:	ldrb	r1, [r8, r0]
   1de44:	cmp	r1, #10
   1de48:	moveq	sl, r0
   1de4c:	b	1dda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1de50:	ldr	r0, [fp, #12]
   1de54:	cmp	r0, #0
   1de58:	bne	1dda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1de5c:	ldr	r0, [r4, #4]
   1de60:	add	r1, r0, #5
   1de64:	mov	r0, r4
   1de68:	bl	11d7c <mycore_string_realloc@plt>
   1de6c:	ldr	r0, [r4]
   1de70:	ldr	r1, [r4, #8]
   1de74:	mov	r2, #239	; 0xef
   1de78:	strb	r2, [r0, r1]
   1de7c:	ldr	r0, [r4]
   1de80:	ldr	r1, [r4, #8]
   1de84:	add	r1, r1, #1
   1de88:	str	r1, [r4, #8]
   1de8c:	mov	r2, #191	; 0xbf
   1de90:	strb	r2, [r0, r1]
   1de94:	ldr	r0, [r4]
   1de98:	ldr	r1, [r4, #8]
   1de9c:	add	r1, r1, #1
   1dea0:	str	r1, [r4, #8]
   1dea4:	mov	r2, #189	; 0xbd
   1dea8:	strb	r2, [r0, r1]
   1deac:	b	1dda4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1deb0:	ldr	r1, [r4, #4]
   1deb4:	ldr	r0, [r4, #8]
   1deb8:	cmp	r0, r1
   1debc:	bcc	1decc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x184>
   1dec0:	add	r1, r0, #1
   1dec4:	mov	r0, r4
   1dec8:	bl	11d7c <mycore_string_realloc@plt>
   1decc:	ldr	r1, [r4]
   1ded0:	ldr	r2, [r4, #8]
   1ded4:	mov	r0, #0
   1ded8:	strb	r0, [r1, r2]
   1dedc:	sub	sp, fp, #28
   1dee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dee4:	ldr	r1, [r4, #4]
   1dee8:	ldr	r0, [r4, #8]
   1deec:	add	r2, r0, #1
   1def0:	str	r2, [r4, #8]
   1def4:	cmp	r2, r1
   1def8:	bcc	1df08 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c0>
   1defc:	add	r1, r0, #3
   1df00:	mov	r0, r4
   1df04:	bl	11d7c <mycore_string_realloc@plt>
   1df08:	ldr	r0, [r4]
   1df0c:	ldr	r1, [r4, #8]
   1df10:	mov	r2, #0
   1df14:	strb	r2, [r0, r1]
   1df18:	ldr	r0, [r4, #8]
   1df1c:	sub	sp, fp, #28
   1df20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001df24 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1df24:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1df28:	add	fp, sp, #24
   1df2c:	sub	sp, sp, #32
   1df30:	mov	r4, r3
   1df34:	mov	r5, r2
   1df38:	mov	r6, r1
   1df3c:	mov	r7, r0
   1df40:	add	r8, sp, #8
   1df44:	mov	r0, r8
   1df48:	bl	1162c <myencoding_result_clean@plt>
   1df4c:	ldr	r0, [fp, #8]
   1df50:	str	r4, [sp]
   1df54:	str	r0, [sp, #4]
   1df58:	mov	r0, r7
   1df5c:	mov	r1, r8
   1df60:	mov	r2, r6
   1df64:	mov	r3, r5
   1df68:	bl	12148 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1df6c:	sub	sp, fp, #24
   1df70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001df74 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1df74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df78:	add	fp, sp, #28
   1df7c:	sub	sp, sp, #4
   1df80:	mov	r5, r3
   1df84:	mov	r8, r2
   1df88:	mov	r7, r1
   1df8c:	mov	r4, r0
   1df90:	ldr	r0, [r0, #4]
   1df94:	ldr	r1, [r4, #8]
   1df98:	add	r1, r3, r1
   1df9c:	add	r1, r1, #1
   1dfa0:	ldr	r6, [fp, #8]
   1dfa4:	cmp	r1, r0
   1dfa8:	bcc	1dfb4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x40>
   1dfac:	mov	r0, r4
   1dfb0:	bl	11d7c <mycore_string_realloc@plt>
   1dfb4:	mov	r0, r6
   1dfb8:	bl	11c44 <myencoding_get_function_by_id@plt>
   1dfbc:	cmp	r5, #0
   1dfc0:	beq	1e0dc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1dfc4:	mov	r9, r0
   1dfc8:	mov	sl, #0
   1dfcc:	b	1dfe8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x74>
   1dfd0:	ldr	r0, [r4, #8]
   1dfd4:	add	r0, r0, r6
   1dfd8:	str	r0, [r4, #8]
   1dfdc:	add	sl, sl, #1
   1dfe0:	cmp	sl, r5
   1dfe4:	bcs	1e0dc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1dfe8:	ldrb	r0, [r8, sl]
   1dfec:	mov	r1, r7
   1dff0:	blx	r9
   1dff4:	cmp	r0, #0
   1dff8:	bne	1dfdc <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x68>
   1dffc:	ldr	r1, [r4, #4]
   1e000:	ldr	r0, [r4, #8]
   1e004:	add	r2, r0, #5
   1e008:	cmp	r2, r1
   1e00c:	bcc	1e01c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xa8>
   1e010:	add	r1, r0, #6
   1e014:	mov	r0, r4
   1e018:	bl	11d7c <mycore_string_realloc@plt>
   1e01c:	ldr	r0, [r7, #12]
   1e020:	ldr	r1, [r4]
   1e024:	ldr	r2, [r4, #8]
   1e028:	add	r1, r1, r2
   1e02c:	bl	11194 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1e030:	mov	r6, r0
   1e034:	cmp	r0, #1
   1e038:	bne	1dfd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1e03c:	ldr	r0, [r4]
   1e040:	ldr	r1, [r4, #8]
   1e044:	ldrb	r2, [r0, r1]
   1e048:	cmp	r2, #0
   1e04c:	beq	1e07c <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x108>
   1e050:	cmp	r2, #13
   1e054:	bne	1dfd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1e058:	mov	r2, #10
   1e05c:	strb	r2, [r0, r1]
   1e060:	add	r0, sl, #1
   1e064:	cmp	r0, r5
   1e068:	bcs	1e110 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x19c>
   1e06c:	ldrb	r1, [r8, r0]
   1e070:	cmp	r1, #10
   1e074:	moveq	sl, r0
   1e078:	b	1dfd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1e07c:	ldr	r0, [fp, #12]
   1e080:	cmp	r0, #0
   1e084:	bne	1dfd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1e088:	ldr	r0, [r4, #4]
   1e08c:	add	r1, r0, #5
   1e090:	mov	r0, r4
   1e094:	bl	11d7c <mycore_string_realloc@plt>
   1e098:	ldr	r0, [r4]
   1e09c:	ldr	r1, [r4, #8]
   1e0a0:	mov	r2, #239	; 0xef
   1e0a4:	strb	r2, [r0, r1]
   1e0a8:	ldr	r0, [r4]
   1e0ac:	ldr	r1, [r4, #8]
   1e0b0:	add	r1, r1, #1
   1e0b4:	str	r1, [r4, #8]
   1e0b8:	mov	r2, #191	; 0xbf
   1e0bc:	strb	r2, [r0, r1]
   1e0c0:	ldr	r0, [r4]
   1e0c4:	ldr	r1, [r4, #8]
   1e0c8:	add	r1, r1, #1
   1e0cc:	str	r1, [r4, #8]
   1e0d0:	mov	r2, #189	; 0xbd
   1e0d4:	strb	r2, [r0, r1]
   1e0d8:	b	1dfd0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x5c>
   1e0dc:	ldr	r1, [r4, #4]
   1e0e0:	ldr	r0, [r4, #8]
   1e0e4:	cmp	r0, r1
   1e0e8:	bcc	1e0f8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x184>
   1e0ec:	add	r1, r0, #1
   1e0f0:	mov	r0, r4
   1e0f4:	bl	11d7c <mycore_string_realloc@plt>
   1e0f8:	ldr	r1, [r4]
   1e0fc:	ldr	r2, [r4, #8]
   1e100:	mov	r0, #0
   1e104:	strb	r0, [r1, r2]
   1e108:	sub	sp, fp, #28
   1e10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e110:	ldr	r1, [r4, #4]
   1e114:	ldr	r0, [r4, #8]
   1e118:	add	r2, r0, #1
   1e11c:	str	r2, [r4, #8]
   1e120:	cmp	r2, r1
   1e124:	bcc	1e134 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c0>
   1e128:	add	r1, r0, #3
   1e12c:	mov	r0, r4
   1e130:	bl	11d7c <mycore_string_realloc@plt>
   1e134:	ldr	r0, [r4]
   1e138:	ldr	r1, [r4, #8]
   1e13c:	mov	r2, #0
   1e140:	strb	r2, [r0, r1]
   1e144:	ldr	r0, [r4, #8]
   1e148:	sub	sp, fp, #28
   1e14c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e150 <myhtml_parser_stream@@Base>:
   1e150:	push	{r4, sl, fp, lr}
   1e154:	add	fp, sp, #8
   1e158:	ldr	r0, [r1]
   1e15c:	ldr	r0, [r0, #184]	; 0xb8
   1e160:	tst	r0, #1
   1e164:	popne	{r4, sl, fp, pc}
   1e168:	mov	r4, r1
   1e16c:	ldm	r4, {r0, r1}
   1e170:	bl	1132c <myhtml_rules_tree_dispatcher@plt>
   1e174:	cmp	r0, #0
   1e178:	bne	1e16c <myhtml_parser_stream@@Base+0x1c>
   1e17c:	pop	{r4, sl, fp, pc}

0001e180 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1e180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e184:	add	fp, sp, #28
   1e188:	sub	sp, sp, #20
   1e18c:	mov	r5, r3
   1e190:	str	r2, [sp, #16]
   1e194:	mov	sl, r1
   1e198:	mov	r4, r0
   1e19c:	ldr	r0, [r0, #80]	; 0x50
   1e1a0:	mov	r1, r3
   1e1a4:	bl	11578 <mycore_incoming_buffer_find_by_position@plt>
   1e1a8:	mov	r7, r0
   1e1ac:	ldr	r0, [r0, #8]
   1e1b0:	ldr	r1, [r7, #12]
   1e1b4:	sub	r8, r5, r1
   1e1b8:	ldr	r6, [fp, #8]
   1e1bc:	add	r1, r8, r6
   1e1c0:	cmp	r1, r0
   1e1c4:	bls	1e288 <myhtml_parser_token_data_to_string_lowercase@@Base+0x108>
   1e1c8:	cmp	r7, #0
   1e1cc:	beq	1e338 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e1d0:	ldr	r0, [sp, #16]
   1e1d4:	add	r0, r0, #8
   1e1d8:	str	r0, [sp, #12]
   1e1dc:	mov	r5, #0
   1e1e0:	b	1e218 <myhtml_parser_token_data_to_string_lowercase@@Base+0x98>
   1e1e4:	ldr	r0, [sp, #16]
   1e1e8:	ldrb	r5, [r0, #61]	; 0x3d
   1e1ec:	mov	r0, sl
   1e1f0:	mov	r1, r2
   1e1f4:	mov	r2, r3
   1e1f8:	mov	r3, r5
   1e1fc:	bl	123c4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e200:	mov	r5, r0
   1e204:	sub	r6, r6, r9
   1e208:	ldr	r7, [r7, #20]
   1e20c:	mov	r8, #0
   1e210:	cmp	r7, #0
   1e214:	beq	1e338 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e218:	add	r1, r6, r8
   1e21c:	ldr	r0, [r7, #8]
   1e220:	cmp	r1, r0
   1e224:	bls	1e2e0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x160>
   1e228:	sub	r9, r0, r8
   1e22c:	ldr	r0, [r7]
   1e230:	add	r1, r0, r8
   1e234:	mov	r0, sl
   1e238:	mov	r2, r9
   1e23c:	mov	r3, r5
   1e240:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1e244:	cmp	r9, #0
   1e248:	beq	1e204 <myhtml_parser_token_data_to_string_lowercase@@Base+0x84>
   1e24c:	sub	r3, r9, r0
   1e250:	add	r0, r0, r8
   1e254:	ldr	r1, [r7]
   1e258:	add	r2, r1, r0
   1e25c:	ldr	r0, [r4, #200]	; 0xc8
   1e260:	cmp	r0, #0
   1e264:	beq	1e1e4 <myhtml_parser_token_data_to_string_lowercase@@Base+0x64>
   1e268:	ldr	r1, [sp, #16]
   1e26c:	ldr	r0, [r1, #4]
   1e270:	ldrb	r1, [r1, #61]	; 0x3d
   1e274:	stm	sp, {r0, r1}
   1e278:	mov	r0, sl
   1e27c:	ldr	r1, [sp, #12]
   1e280:	bl	12148 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e284:	b	1e200 <myhtml_parser_token_data_to_string_lowercase@@Base+0x80>
   1e288:	ldr	r0, [r4, #200]	; 0xc8
   1e28c:	cmp	r0, #0
   1e290:	beq	1e2c0 <myhtml_parser_token_data_to_string_lowercase@@Base+0x140>
   1e294:	ldr	r0, [r7]
   1e298:	ldr	r3, [sp, #16]
   1e29c:	ldr	r1, [r3, #4]
   1e2a0:	ldrb	r2, [r3, #61]	; 0x3d
   1e2a4:	stm	sp, {r1, r2}
   1e2a8:	add	r2, r0, r8
   1e2ac:	add	r1, r3, #8
   1e2b0:	mov	r0, sl
   1e2b4:	mov	r3, r6
   1e2b8:	bl	12148 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1e2bc:	b	1e338 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e2c0:	ldr	r0, [r7]
   1e2c4:	add	r1, r0, r8
   1e2c8:	ldr	r0, [sp, #16]
   1e2cc:	ldrb	r3, [r0, #61]	; 0x3d
   1e2d0:	mov	r0, sl
   1e2d4:	mov	r2, r6
   1e2d8:	bl	123c4 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1e2dc:	b	1e338 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e2e0:	ldr	r0, [r7]
   1e2e4:	add	r1, r0, r8
   1e2e8:	mov	r0, sl
   1e2ec:	mov	r2, r6
   1e2f0:	mov	r3, r5
   1e2f4:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1e2f8:	cmp	r6, #0
   1e2fc:	beq	1e338 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1b8>
   1e300:	ldr	r1, [r4, #200]	; 0xc8
   1e304:	cmp	r1, #0
   1e308:	beq	1e344 <myhtml_parser_token_data_to_string_lowercase@@Base+0x1c4>
   1e30c:	ldr	r1, [r7]
   1e310:	ldr	r3, [sp, #16]
   1e314:	ldr	r2, [r3, #4]
   1e318:	ldrb	r3, [r3, #61]	; 0x3d
   1e31c:	stm	sp, {r2, r3}
   1e320:	sub	r3, r6, r0
   1e324:	add	r0, r0, r8
   1e328:	add	r2, r1, r0
   1e32c:	mov	r0, sl
   1e330:	ldr	r1, [sp, #12]
   1e334:	b	1e2b8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x138>
   1e338:	ldr	r0, [sl, #8]
   1e33c:	sub	sp, fp, #28
   1e340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e344:	sub	r2, r6, r0
   1e348:	add	r0, r0, r8
   1e34c:	ldr	r1, [r7]
   1e350:	add	r1, r1, r0
   1e354:	ldr	r0, [sp, #16]
   1e358:	ldrb	r3, [r0, #61]	; 0x3d
   1e35c:	mov	r0, sl
   1e360:	b	1e2d8 <myhtml_parser_token_data_to_string_lowercase@@Base+0x158>

0001e364 <myhtml_parser_token_data_to_string@@Base>:
   1e364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e368:	add	fp, sp, #28
   1e36c:	sub	sp, sp, #20
   1e370:	mov	r5, r3
   1e374:	str	r2, [sp, #16]
   1e378:	mov	sl, r1
   1e37c:	mov	r4, r0
   1e380:	ldr	r0, [r0, #80]	; 0x50
   1e384:	mov	r1, r3
   1e388:	bl	11578 <mycore_incoming_buffer_find_by_position@plt>
   1e38c:	mov	r7, r0
   1e390:	ldr	r0, [r0, #8]
   1e394:	ldr	r1, [r7, #12]
   1e398:	sub	r8, r5, r1
   1e39c:	ldr	r6, [fp, #8]
   1e3a0:	add	r1, r8, r6
   1e3a4:	cmp	r1, r0
   1e3a8:	bls	1e46c <myhtml_parser_token_data_to_string@@Base+0x108>
   1e3ac:	cmp	r7, #0
   1e3b0:	beq	1e51c <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e3b4:	ldr	r0, [sp, #16]
   1e3b8:	add	r0, r0, #8
   1e3bc:	str	r0, [sp, #12]
   1e3c0:	mov	r5, #0
   1e3c4:	b	1e3fc <myhtml_parser_token_data_to_string@@Base+0x98>
   1e3c8:	ldr	r0, [sp, #16]
   1e3cc:	ldrb	r5, [r0, #61]	; 0x3d
   1e3d0:	mov	r0, sl
   1e3d4:	mov	r1, r2
   1e3d8:	mov	r2, r3
   1e3dc:	mov	r3, r5
   1e3e0:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1e3e4:	mov	r5, r0
   1e3e8:	sub	r6, r6, r9
   1e3ec:	ldr	r7, [r7, #20]
   1e3f0:	mov	r8, #0
   1e3f4:	cmp	r7, #0
   1e3f8:	beq	1e51c <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e3fc:	add	r1, r6, r8
   1e400:	ldr	r0, [r7, #8]
   1e404:	cmp	r1, r0
   1e408:	bls	1e4c4 <myhtml_parser_token_data_to_string@@Base+0x160>
   1e40c:	sub	r9, r0, r8
   1e410:	ldr	r0, [r7]
   1e414:	add	r1, r0, r8
   1e418:	mov	r0, sl
   1e41c:	mov	r2, r9
   1e420:	mov	r3, r5
   1e424:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1e428:	cmp	r9, #0
   1e42c:	beq	1e3e8 <myhtml_parser_token_data_to_string@@Base+0x84>
   1e430:	sub	r3, r9, r0
   1e434:	add	r0, r0, r8
   1e438:	ldr	r1, [r7]
   1e43c:	add	r2, r1, r0
   1e440:	ldr	r0, [r4, #200]	; 0xc8
   1e444:	cmp	r0, #0
   1e448:	beq	1e3c8 <myhtml_parser_token_data_to_string@@Base+0x64>
   1e44c:	ldr	r1, [sp, #16]
   1e450:	ldr	r0, [r1, #4]
   1e454:	ldrb	r1, [r1, #61]	; 0x3d
   1e458:	stm	sp, {r0, r1}
   1e45c:	mov	r0, sl
   1e460:	ldr	r1, [sp, #12]
   1e464:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e468:	b	1e3e4 <myhtml_parser_token_data_to_string@@Base+0x80>
   1e46c:	ldr	r0, [r4, #200]	; 0xc8
   1e470:	cmp	r0, #0
   1e474:	beq	1e4a4 <myhtml_parser_token_data_to_string@@Base+0x140>
   1e478:	ldr	r0, [r7]
   1e47c:	ldr	r3, [sp, #16]
   1e480:	ldr	r1, [r3, #4]
   1e484:	ldrb	r2, [r3, #61]	; 0x3d
   1e488:	stm	sp, {r1, r2}
   1e48c:	add	r2, r0, r8
   1e490:	add	r1, r3, #8
   1e494:	mov	r0, sl
   1e498:	mov	r3, r6
   1e49c:	bl	121cc <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1e4a0:	b	1e51c <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e4a4:	ldr	r0, [r7]
   1e4a8:	add	r1, r0, r8
   1e4ac:	ldr	r0, [sp, #16]
   1e4b0:	ldrb	r3, [r0, #61]	; 0x3d
   1e4b4:	mov	r0, sl
   1e4b8:	mov	r2, r6
   1e4bc:	bl	11638 <myhtml_string_append_with_preprocessing@plt>
   1e4c0:	b	1e51c <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e4c4:	ldr	r0, [r7]
   1e4c8:	add	r1, r0, r8
   1e4cc:	mov	r0, sl
   1e4d0:	mov	r2, r6
   1e4d4:	mov	r3, r5
   1e4d8:	bl	11fd4 <myhtml_string_before_append_any_preprocessing@plt>
   1e4dc:	cmp	r6, #0
   1e4e0:	beq	1e51c <myhtml_parser_token_data_to_string@@Base+0x1b8>
   1e4e4:	ldr	r1, [r4, #200]	; 0xc8
   1e4e8:	cmp	r1, #0
   1e4ec:	beq	1e528 <myhtml_parser_token_data_to_string@@Base+0x1c4>
   1e4f0:	ldr	r1, [r7]
   1e4f4:	ldr	r3, [sp, #16]
   1e4f8:	ldr	r2, [r3, #4]
   1e4fc:	ldrb	r3, [r3, #61]	; 0x3d
   1e500:	stm	sp, {r2, r3}
   1e504:	sub	r3, r6, r0
   1e508:	add	r0, r0, r8
   1e50c:	add	r2, r1, r0
   1e510:	mov	r0, sl
   1e514:	ldr	r1, [sp, #12]
   1e518:	b	1e49c <myhtml_parser_token_data_to_string@@Base+0x138>
   1e51c:	ldr	r0, [sl, #8]
   1e520:	sub	sp, fp, #28
   1e524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e528:	sub	r2, r6, r0
   1e52c:	add	r0, r0, r8
   1e530:	ldr	r1, [r7]
   1e534:	add	r1, r1, r0
   1e538:	ldr	r0, [sp, #16]
   1e53c:	ldrb	r3, [r0, #61]	; 0x3d
   1e540:	mov	r0, sl
   1e544:	b	1e4bc <myhtml_parser_token_data_to_string@@Base+0x158>

0001e548 <myhtml_parser_token_data_to_string_charef@@Base>:
   1e548:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e54c:	add	fp, sp, #24
   1e550:	mov	r6, r3
   1e554:	mov	r8, r2
   1e558:	mov	r4, r1
   1e55c:	ldr	r0, [r0, #80]	; 0x50
   1e560:	mov	r1, r3
   1e564:	bl	11578 <mycore_incoming_buffer_find_by_position@plt>
   1e568:	mov	r7, r0
   1e56c:	ldr	r1, [r0, #8]
   1e570:	ldr	r0, [r0, #12]
   1e574:	sub	r0, r6, r0
   1e578:	ldr	r6, [fp, #8]
   1e57c:	add	r2, r0, r6
   1e580:	cmp	r2, r1
   1e584:	bls	1e5d4 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   1e588:	cmp	r7, #0
   1e58c:	beq	1e5ec <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   1e590:	add	r2, r0, r6
   1e594:	ldr	r1, [r7, #8]
   1e598:	cmp	r2, r1
   1e59c:	bls	1e5d4 <myhtml_parser_token_data_to_string_charef@@Base+0x8c>
   1e5a0:	sub	r5, r1, r0
   1e5a4:	ldr	r1, [r7]
   1e5a8:	add	r2, r1, r0
   1e5ac:	mov	r0, r8
   1e5b0:	mov	r1, r4
   1e5b4:	mov	r3, r5
   1e5b8:	bl	11b84 <myhtml_data_process@plt>
   1e5bc:	sub	r6, r6, r5
   1e5c0:	ldr	r7, [r7, #20]
   1e5c4:	mov	r0, #0
   1e5c8:	cmp	r7, #0
   1e5cc:	bne	1e590 <myhtml_parser_token_data_to_string_charef@@Base+0x48>
   1e5d0:	b	1e5ec <myhtml_parser_token_data_to_string_charef@@Base+0xa4>
   1e5d4:	ldr	r1, [r7]
   1e5d8:	add	r2, r1, r0
   1e5dc:	mov	r0, r8
   1e5e0:	mov	r1, r4
   1e5e4:	mov	r3, r6
   1e5e8:	bl	11b84 <myhtml_data_process@plt>
   1e5ec:	mov	r0, r8
   1e5f0:	mov	r1, r4
   1e5f4:	bl	11d40 <myhtml_data_process_end@plt>
   1e5f8:	ldr	r0, [r4, #8]
   1e5fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e600 <myhtml_parser_worker@@Base>:
   1e600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e604:	add	fp, sp, #28
   1e608:	sub	sp, sp, #68	; 0x44
   1e60c:	ldm	r1, {r4, r8}
   1e610:	ldr	r1, [r4, #184]	; 0xb8
   1e614:	tst	r1, #3
   1e618:	beq	1e628 <myhtml_parser_worker@@Base+0x28>
   1e61c:	ldr	r1, [r4, #184]	; 0xb8
   1e620:	tst	r1, #2
   1e624:	bne	1e7ec <myhtml_parser_worker@@Base+0x1ec>
   1e628:	ldr	r2, [r4]
   1e62c:	ldr	r1, [r4, #144]	; 0x90
   1e630:	ldr	r2, [r2, #4]
   1e634:	cmp	r2, #0
   1e638:	ldrne	r2, [r2, #12]
   1e63c:	addne	r0, r2, r0
   1e640:	ldr	r9, [r1, r0, lsl #2]
   1e644:	ldr	r3, [r4, #220]	; 0xdc
   1e648:	cmp	r3, #0
   1e64c:	beq	1e664 <myhtml_parser_worker@@Base+0x64>
   1e650:	ldr	r2, [r4, #228]	; 0xe4
   1e654:	mov	r0, r4
   1e658:	mov	r1, r8
   1e65c:	blx	r3
   1e660:	str	r0, [r4, #228]	; 0xe4
   1e664:	ldr	r0, [r8]
   1e668:	sub	r0, r0, #1
   1e66c:	cmp	r0, #1
   1e670:	bhi	1e6f0 <myhtml_parser_worker@@Base+0xf0>
   1e674:	ldr	r0, [r4, #4]
   1e678:	ldr	r1, [r8, #28]
   1e67c:	add	r7, r8, #4
   1e680:	add	r3, r1, #1
   1e684:	mov	r1, r9
   1e688:	mov	r2, r7
   1e68c:	bl	11a34 <mycore_string_init@plt>
   1e690:	mov	r0, #0
   1e694:	str	r0, [r8, #40]	; 0x28
   1e698:	str	r0, [r8, #44]	; 0x2c
   1e69c:	add	r0, sp, #4
   1e6a0:	bl	11920 <myhtml_data_process_entry_clean@plt>
   1e6a4:	ldr	r0, [r4, #200]	; 0xc8
   1e6a8:	str	r0, [sp, #8]
   1e6ac:	ldr	r0, [r8, #48]	; 0x30
   1e6b0:	tst	r0, #512	; 0x200
   1e6b4:	bne	1e810 <myhtml_parser_worker@@Base+0x210>
   1e6b8:	ldr	r0, [r8, #48]	; 0x30
   1e6bc:	tst	r0, #16
   1e6c0:	bne	1e818 <myhtml_parser_worker@@Base+0x218>
   1e6c4:	ldr	r0, [r8, #48]	; 0x30
   1e6c8:	tst	r0, #256	; 0x100
   1e6cc:	bne	1e818 <myhtml_parser_worker@@Base+0x218>
   1e6d0:	ldr	r3, [r8, #24]
   1e6d4:	ldr	r0, [r8, #28]
   1e6d8:	str	r0, [sp]
   1e6dc:	add	r2, sp, #4
   1e6e0:	mov	r0, r4
   1e6e4:	mov	r1, r7
   1e6e8:	bl	11ec0 <myhtml_parser_token_data_to_string@plt>
   1e6ec:	b	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e6f0:	ldr	r0, [r8, #40]	; 0x28
   1e6f4:	cmp	r0, #0
   1e6f8:	beq	1e838 <myhtml_parser_worker@@Base+0x238>
   1e6fc:	add	r0, r8, #4
   1e700:	bl	12424 <mycore_string_clean_all@plt>
   1e704:	ldr	r6, [r8, #40]	; 0x28
   1e708:	cmp	r6, #0
   1e70c:	beq	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e710:	add	r7, sp, #4
   1e714:	mov	sl, #1
   1e718:	b	1e730 <myhtml_parser_worker@@Base+0x130>
   1e71c:	add	r0, r6, #28
   1e720:	bl	12424 <mycore_string_clean_all@plt>
   1e724:	ldr	r6, [r6]
   1e728:	cmp	r6, #0
   1e72c:	beq	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e730:	ldr	r0, [r6, #52]	; 0x34
   1e734:	cmp	r0, #0
   1e738:	beq	1e788 <myhtml_parser_worker@@Base+0x188>
   1e73c:	mov	r0, r7
   1e740:	bl	11920 <myhtml_data_process_entry_clean@plt>
   1e744:	ldr	r0, [r4, #200]	; 0xc8
   1e748:	str	r0, [sp, #8]
   1e74c:	ldr	r0, [r4, #4]
   1e750:	ldr	r1, [r6, #52]	; 0x34
   1e754:	add	r5, r6, #8
   1e758:	add	r3, r1, #1
   1e75c:	mov	r1, r9
   1e760:	mov	r2, r5
   1e764:	bl	11a34 <mycore_string_init@plt>
   1e768:	ldr	r3, [r6, #48]	; 0x30
   1e76c:	ldr	r0, [r6, #52]	; 0x34
   1e770:	str	r0, [sp]
   1e774:	mov	r0, r4
   1e778:	mov	r1, r5
   1e77c:	mov	r2, r7
   1e780:	bl	123a0 <myhtml_parser_token_data_to_string_lowercase@plt>
   1e784:	b	1e790 <myhtml_parser_worker@@Base+0x190>
   1e788:	add	r0, r6, #8
   1e78c:	bl	12424 <mycore_string_clean_all@plt>
   1e790:	ldr	r0, [r6, #60]	; 0x3c
   1e794:	cmp	r0, #0
   1e798:	beq	1e71c <myhtml_parser_worker@@Base+0x11c>
   1e79c:	mov	r0, r7
   1e7a0:	bl	11920 <myhtml_data_process_entry_clean@plt>
   1e7a4:	ldr	r0, [r4, #200]	; 0xc8
   1e7a8:	strb	sl, [sp, #64]	; 0x40
   1e7ac:	str	r0, [sp, #8]
   1e7b0:	ldr	r0, [r4, #4]
   1e7b4:	ldr	r1, [r6, #60]	; 0x3c
   1e7b8:	add	r5, r6, #28
   1e7bc:	add	r3, r1, #1
   1e7c0:	mov	r1, r9
   1e7c4:	mov	r2, r5
   1e7c8:	bl	11a34 <mycore_string_init@plt>
   1e7cc:	ldr	r3, [r6, #56]	; 0x38
   1e7d0:	ldr	r0, [r6, #60]	; 0x3c
   1e7d4:	str	r0, [sp]
   1e7d8:	mov	r0, r4
   1e7dc:	mov	r1, r5
   1e7e0:	mov	r2, r7
   1e7e4:	bl	11830 <myhtml_parser_token_data_to_string_charef@plt>
   1e7e8:	b	1e724 <myhtml_parser_worker@@Base+0x124>
   1e7ec:	ldr	r3, [r4, #220]	; 0xdc
   1e7f0:	cmp	r3, #0
   1e7f4:	beq	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e7f8:	ldr	r2, [r4, #228]	; 0xe4
   1e7fc:	mov	r0, r4
   1e800:	mov	r1, r8
   1e804:	blx	r3
   1e808:	str	r0, [r4, #228]	; 0xe4
   1e80c:	b	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e810:	mov	r0, #1
   1e814:	strb	r0, [sp, #65]	; 0x41
   1e818:	ldr	r3, [r8, #24]
   1e81c:	ldr	r0, [r8, #28]
   1e820:	str	r0, [sp]
   1e824:	add	r2, sp, #4
   1e828:	mov	r0, r4
   1e82c:	mov	r1, r7
   1e830:	bl	11830 <myhtml_parser_token_data_to_string_charef@plt>
   1e834:	b	1e84c <myhtml_parser_worker@@Base+0x24c>
   1e838:	mov	r0, #0
   1e83c:	str	r0, [r8, #40]	; 0x28
   1e840:	str	r0, [r8, #44]	; 0x2c
   1e844:	add	r0, r8, #4
   1e848:	bl	12424 <mycore_string_clean_all@plt>
   1e84c:	ldr	r0, [r8, #48]	; 0x30
   1e850:	orr	r0, r0, #4
   1e854:	str	r0, [r8, #48]	; 0x30
   1e858:	ldr	r3, [r4, #224]	; 0xe0
   1e85c:	cmp	r3, #0
   1e860:	beq	1e878 <myhtml_parser_worker@@Base+0x278>
   1e864:	ldr	r2, [r4, #232]	; 0xe8
   1e868:	mov	r0, r4
   1e86c:	mov	r1, r8
   1e870:	blx	r3
   1e874:	str	r0, [r4, #232]	; 0xe8
   1e878:	sub	sp, fp, #28
   1e87c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e880 <myhtml_parser_worker_stream@@Base>:
   1e880:	push	{r4, sl, fp, lr}
   1e884:	add	fp, sp, #8
   1e888:	mov	r4, r1
   1e88c:	bl	1123c <myhtml_parser_worker@plt>
   1e890:	mov	r1, r4
   1e894:	pop	{r4, sl, fp, lr}
   1e898:	b	1e150 <myhtml_parser_stream@@Base>

0001e89c <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1e89c:	push	{r4, sl, fp, lr}
   1e8a0:	add	fp, sp, #8
   1e8a4:	mov	r4, r1
   1e8a8:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1e8ac:	add	r0, r4, #4
   1e8b0:	pop	{r4, sl, fp, lr}
   1e8b4:	b	118e4 <mycore_string_crop_whitespace_from_begin@plt>

0001e8b8 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1e8b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e8bc:	add	fp, sp, #24
   1e8c0:	mov	r4, r1
   1e8c4:	mov	r7, r0
   1e8c8:	ldr	r0, [r0, #8]
   1e8cc:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1e8d0:	add	r0, r4, #4
   1e8d4:	bl	1219c <mycore_string_whitespace_from_begin@plt>
   1e8d8:	mov	r6, #0
   1e8dc:	cmp	r0, #0
   1e8e0:	beq	1e954 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e8e4:	mov	r5, r0
   1e8e8:	ldr	r0, [r7, #8]
   1e8ec:	ldr	r1, [r7, #40]	; 0x28
   1e8f0:	bl	11e0c <myhtml_token_node_create@plt>
   1e8f4:	cmp	r0, #0
   1e8f8:	beq	1e954 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x9c>
   1e8fc:	mov	r8, r0
   1e900:	ldr	r0, [r7, #4]
   1e904:	ldr	r1, [r7, #52]	; 0x34
   1e908:	add	r6, r8, #4
   1e90c:	add	r3, r5, #2
   1e910:	mov	r2, r6
   1e914:	bl	11a34 <mycore_string_init@plt>
   1e918:	ldr	r1, [r4, #4]
   1e91c:	mov	r0, r6
   1e920:	mov	r2, r5
   1e924:	bl	11cec <mycore_string_append@plt>
   1e928:	ldr	r0, [r8, #48]	; 0x30
   1e92c:	orr	r0, r0, #4
   1e930:	str	r0, [r8, #48]	; 0x30
   1e934:	ldr	r0, [r4, #4]
   1e938:	mov	r1, r5
   1e93c:	bl	1201c <mchar_async_crop_first_chars_without_cache@plt>
   1e940:	str	r0, [r4, #4]
   1e944:	ldr	r0, [r4, #12]
   1e948:	sub	r0, r0, r5
   1e94c:	str	r0, [r4, #12]
   1e950:	mov	r6, r8
   1e954:	mov	r0, r6
   1e958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001e95c <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1e95c:	push	{r4, r5, r6, r7, fp, lr}
   1e960:	add	fp, sp, #16
   1e964:	mov	r4, r1
   1e968:	ldr	r0, [r0, #8]
   1e96c:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1e970:	ldr	r5, [r4, #12]
   1e974:	cmp	r5, #0
   1e978:	beq	1ea20 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xc4>
   1e97c:	mov	r0, #0
   1e980:	mov	r6, #0
   1e984:	b	1e9b0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   1e988:	add	r1, r3, r2
   1e98c:	sub	r2, r7, r2
   1e990:	sub	r0, r0, r6
   1e994:	add	r0, r3, r0
   1e998:	bl	11314 <memmove@plt>
   1e99c:	add	r6, r6, #1
   1e9a0:	sub	r0, r7, #1
   1e9a4:	add	r0, r0, #1
   1e9a8:	cmp	r0, r5
   1e9ac:	bcs	1ea20 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xc4>
   1e9b0:	ldr	r3, [r4, #4]
   1e9b4:	ldrb	r1, [r3, r0]
   1e9b8:	cmp	r1, #0
   1e9bc:	bne	1e9a4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x48>
   1e9c0:	cmp	r0, r5
   1e9c4:	mov	r2, r0
   1e9c8:	bcs	1e9e8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x8c>
   1e9cc:	mov	r2, r0
   1e9d0:	ldrb	r1, [r3, r2]
   1e9d4:	cmp	r1, #0
   1e9d8:	bne	1e9e8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x8c>
   1e9dc:	add	r2, r2, #1
   1e9e0:	cmp	r5, r2
   1e9e4:	bne	1e9d0 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x74>
   1e9e8:	sub	r1, r0, r2
   1e9ec:	ldr	r7, [r4, #12]
   1e9f0:	add	r1, r1, r7
   1e9f4:	str	r1, [r4, #12]
   1e9f8:	cmp	r2, r5
   1e9fc:	mov	r7, r2
   1ea00:	bcs	1e988 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x2c>
   1ea04:	mov	r7, r2
   1ea08:	ldrb	r1, [r3, r7]
   1ea0c:	cmp	r1, #0
   1ea10:	addne	r7, r7, #1
   1ea14:	cmpne	r5, r7
   1ea18:	bne	1ea08 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xac>
   1ea1c:	b	1e988 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x2c>
   1ea20:	pop	{r4, r5, r6, r7, fp, pc}

0001ea24 <myhtml_insertion_mode_initial@@Base>:
   1ea24:	push	{r4, r5, r6, sl, fp, lr}
   1ea28:	add	fp, sp, #16
   1ea2c:	mov	r5, r1
   1ea30:	mov	r4, r0
   1ea34:	ldr	r0, [r1]
   1ea38:	cmp	r0, #3
   1ea3c:	beq	1ea7c <myhtml_insertion_mode_initial@@Base+0x58>
   1ea40:	cmp	r0, #2
   1ea44:	beq	1eaec <myhtml_insertion_mode_initial@@Base+0xc8>
   1ea48:	cmp	r0, #1
   1ea4c:	bne	1ea6c <myhtml_insertion_mode_initial@@Base+0x48>
   1ea50:	ldr	r1, [r5, #48]	; 0x30
   1ea54:	mov	r0, #0
   1ea58:	tst	r1, #8
   1ea5c:	bne	1eb00 <myhtml_insertion_mode_initial@@Base+0xdc>
   1ea60:	ldr	r0, [r4, #8]
   1ea64:	mov	r1, r5
   1ea68:	bl	11590 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1ea6c:	mov	r0, #1
   1ea70:	str	r0, [r4, #168]	; 0xa8
   1ea74:	str	r0, [r4, #176]	; 0xb0
   1ea78:	pop	{r4, r5, r6, sl, fp, pc}
   1ea7c:	ldr	r0, [r4, #8]
   1ea80:	mov	r1, r5
   1ea84:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1ea88:	ldr	r0, [r4, #8]
   1ea8c:	add	r6, r4, #108	; 0x6c
   1ea90:	mov	r1, r5
   1ea94:	mov	r2, r6
   1ea98:	bl	110f8 <myhtml_token_release_and_check_doctype_attributes@plt>
   1ea9c:	ldr	r0, [r4, #184]	; 0xb8
   1eaa0:	tst	r0, #8
   1eaa4:	bne	1eab4 <myhtml_insertion_mode_initial@@Base+0x90>
   1eaa8:	mov	r0, r4
   1eaac:	mov	r1, r5
   1eab0:	bl	121e4 <myhtml_tree_node_insert_doctype@plt>
   1eab4:	ldrb	r0, [r6]
   1eab8:	cmp	r0, #0
   1eabc:	bne	1eae0 <myhtml_insertion_mode_initial@@Base+0xbc>
   1eac0:	ldr	r0, [r4, #116]	; 0x74
   1eac4:	cmp	r0, #0
   1eac8:	beq	1ead8 <myhtml_insertion_mode_initial@@Base+0xb4>
   1eacc:	ldr	r0, [r4, #120]	; 0x78
   1ead0:	cmp	r0, #0
   1ead4:	bne	1eae0 <myhtml_insertion_mode_initial@@Base+0xbc>
   1ead8:	mov	r0, #1
   1eadc:	str	r0, [r4, #176]	; 0xb0
   1eae0:	mov	r0, #1
   1eae4:	str	r0, [r4, #168]	; 0xa8
   1eae8:	b	1eafc <myhtml_insertion_mode_initial@@Base+0xd8>
   1eaec:	ldr	r2, [r4, #84]	; 0x54
   1eaf0:	mov	r0, r4
   1eaf4:	mov	r1, r5
   1eaf8:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   1eafc:	mov	r0, #0
   1eb00:	pop	{r4, r5, r6, sl, fp, pc}

0001eb04 <myhtml_insertion_mode_before_html@@Base>:
   1eb04:	push	{r4, r5, fp, lr}
   1eb08:	add	fp, sp, #8
   1eb0c:	mov	r4, r0
   1eb10:	ldr	r0, [r1]
   1eb14:	ldr	r2, [r1, #48]	; 0x30
   1eb18:	tst	r2, #1
   1eb1c:	bne	1eb50 <myhtml_insertion_mode_before_html@@Base+0x4c>
   1eb20:	mov	r5, #0
   1eb24:	cmp	r0, #2
   1eb28:	bgt	1eb74 <myhtml_insertion_mode_before_html@@Base+0x70>
   1eb2c:	cmp	r0, #1
   1eb30:	beq	1eb8c <myhtml_insertion_mode_before_html@@Base+0x88>
   1eb34:	cmp	r0, #2
   1eb38:	bne	1eba0 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1eb3c:	ldr	r2, [r4, #84]	; 0x54
   1eb40:	mov	r0, r4
   1eb44:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   1eb48:	mov	r0, r5
   1eb4c:	pop	{r4, r5, fp, pc}
   1eb50:	sub	r1, r0, #23
   1eb54:	cmp	r1, #2
   1eb58:	bcc	1eba0 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1eb5c:	cmp	r0, #65	; 0x41
   1eb60:	beq	1eba0 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1eb64:	mov	r5, #0
   1eb68:	cmp	r0, #61	; 0x3d
   1eb6c:	beq	1eba0 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1eb70:	b	1ebbc <myhtml_insertion_mode_before_html@@Base+0xb8>
   1eb74:	cmp	r0, #3
   1eb78:	beq	1ebbc <myhtml_insertion_mode_before_html@@Base+0xb8>
   1eb7c:	cmp	r0, #65	; 0x41
   1eb80:	bne	1eba0 <myhtml_insertion_mode_before_html@@Base+0x9c>
   1eb84:	mov	r0, r4
   1eb88:	b	1ebac <myhtml_insertion_mode_before_html@@Base+0xa8>
   1eb8c:	ldr	r0, [r1, #48]	; 0x30
   1eb90:	tst	r0, #8
   1eb94:	bne	1ebbc <myhtml_insertion_mode_before_html@@Base+0xb8>
   1eb98:	ldr	r0, [r4, #8]
   1eb9c:	bl	11590 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1eba0:	mov	r5, #1
   1eba4:	mov	r0, r4
   1eba8:	mov	r1, #0
   1ebac:	mov	r2, #1
   1ebb0:	bl	110d4 <myhtml_tree_node_insert_root@plt>
   1ebb4:	mov	r0, #2
   1ebb8:	str	r0, [r4, #168]	; 0xa8
   1ebbc:	mov	r0, r5
   1ebc0:	pop	{r4, r5, fp, pc}

0001ebc4 <myhtml_insertion_mode_before_head@@Base>:
   1ebc4:	push	{r4, r5, fp, lr}
   1ebc8:	add	fp, sp, #8
   1ebcc:	mov	r4, r0
   1ebd0:	ldr	r0, [r1]
   1ebd4:	ldr	r2, [r1, #48]	; 0x30
   1ebd8:	tst	r2, #1
   1ebdc:	bne	1ec10 <myhtml_insertion_mode_before_head@@Base+0x4c>
   1ebe0:	mov	r5, #0
   1ebe4:	cmp	r0, #2
   1ebe8:	ble	1ec34 <myhtml_insertion_mode_before_head@@Base+0x70>
   1ebec:	cmp	r0, #3
   1ebf0:	beq	1ec9c <myhtml_insertion_mode_before_head@@Base+0xd8>
   1ebf4:	cmp	r0, #61	; 0x3d
   1ebf8:	beq	1ec5c <myhtml_insertion_mode_before_head@@Base+0x98>
   1ebfc:	cmp	r0, #65	; 0x41
   1ec00:	bne	1ec7c <myhtml_insertion_mode_before_head@@Base+0xb8>
   1ec04:	mov	r0, r4
   1ec08:	pop	{r4, r5, fp, lr}
   1ec0c:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   1ec10:	sub	r1, r0, #23
   1ec14:	cmp	r1, #2
   1ec18:	bcc	1ec7c <myhtml_insertion_mode_before_head@@Base+0xb8>
   1ec1c:	cmp	r0, #65	; 0x41
   1ec20:	beq	1ec7c <myhtml_insertion_mode_before_head@@Base+0xb8>
   1ec24:	mov	r5, #0
   1ec28:	cmp	r0, #61	; 0x3d
   1ec2c:	beq	1ec7c <myhtml_insertion_mode_before_head@@Base+0xb8>
   1ec30:	b	1ec9c <myhtml_insertion_mode_before_head@@Base+0xd8>
   1ec34:	cmp	r0, #1
   1ec38:	beq	1ec68 <myhtml_insertion_mode_before_head@@Base+0xa4>
   1ec3c:	cmp	r0, #2
   1ec40:	bne	1ec7c <myhtml_insertion_mode_before_head@@Base+0xb8>
   1ec44:	mov	r5, #0
   1ec48:	mov	r0, r4
   1ec4c:	mov	r2, #0
   1ec50:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   1ec54:	mov	r0, r5
   1ec58:	pop	{r4, r5, fp, pc}
   1ec5c:	mov	r0, r4
   1ec60:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1ec64:	b	1ec90 <myhtml_insertion_mode_before_head@@Base+0xcc>
   1ec68:	ldr	r0, [r1, #48]	; 0x30
   1ec6c:	tst	r0, #8
   1ec70:	bne	1ec9c <myhtml_insertion_mode_before_head@@Base+0xd8>
   1ec74:	ldr	r0, [r4, #8]
   1ec78:	bl	11590 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1ec7c:	mov	r5, #1
   1ec80:	mov	r0, r4
   1ec84:	mov	r1, #61	; 0x3d
   1ec88:	mov	r2, #1
   1ec8c:	bl	11d88 <myhtml_tree_node_insert@plt>
   1ec90:	mov	r1, #3
   1ec94:	str	r1, [r4, #168]	; 0xa8
   1ec98:	str	r0, [r4, #92]	; 0x5c
   1ec9c:	mov	r0, r5
   1eca0:	pop	{r4, r5, fp, pc}

0001eca4 <myhtml_insertion_mode_in_body@@Base>:
   1eca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eca8:	add	fp, sp, #28
   1ecac:	sub	sp, sp, #12
   1ecb0:	mov	r6, r1
   1ecb4:	mov	r8, r0
   1ecb8:	ldr	r2, [r1]
   1ecbc:	ldr	r0, [r1, #48]	; 0x30
   1ecc0:	tst	r0, #1
   1ecc4:	bne	1f0fc <myhtml_insertion_mode_in_body@@Base+0x458>
   1ecc8:	sub	r0, r2, #1
   1eccc:	mov	sl, #0
   1ecd0:	cmp	r0, #250	; 0xfa
   1ecd4:	bhi	1ff1c <myhtml_insertion_mode_in_body@@Base+0x1278>
   1ecd8:	add	r1, pc, #4
   1ecdc:	ldr	r0, [r1, r0, lsl #2]
   1ece0:	add	pc, r1, r0
   1ece4:			; <UNDEFINED> instruction: 0x00000cb8
   1ece8:	andeq	r0, r0, r0, lsl #26
   1ecec:	andeq	r1, r0, ip, asr #4
   1ecf0:	andeq	r0, r0, r8, lsl sp
   1ecf4:	andeq	r1, r0, r8, lsr r2
   1ecf8:	andeq	r1, r0, r8, lsr r2
   1ecfc:	andeq	r0, r0, ip, ror #7
   1ed00:	andeq	r1, r0, r8, lsr r2
   1ed04:	andeq	r0, r0, r8, lsl r9
   1ed08:	andeq	r0, r0, r4, lsl r8
   1ed0c:	andeq	r0, r0, ip, ror #7
   1ed10:	andeq	r0, r0, ip, ror #7
   1ed14:	andeq	r1, r0, r8, lsr r2
   1ed18:	andeq	r1, r0, r8, lsl #4
   1ed1c:			; <UNDEFINED> instruction: 0x000006bc
   1ed20:			; <UNDEFINED> instruction: 0x000006bc
   1ed24:	andeq	r1, r0, r8, lsr r2
   1ed28:	andeq	r1, r0, r8, lsr r2
   1ed2c:			; <UNDEFINED> instruction: 0x000006bc
   1ed30:	andeq	r1, r0, r8, lsl #4
   1ed34:	andeq	r1, r0, r8, lsr r2
   1ed38:	andeq	r0, r0, ip, ror #7
   1ed3c:	andeq	r0, r0, ip, ror sp
   1ed40:	andeq	r0, r0, r4, lsl r8
   1ed44:	strdeq	r0, [r0], -ip
   1ed48:	andeq	r1, r0, r8, lsr r2
   1ed4c:	andeq	r1, r0, ip, asr #4
   1ed50:	andeq	r0, r0, ip, ror #7
   1ed54:	andeq	r1, r0, r8, lsr r2
   1ed58:	andeq	r1, r0, r8, lsl #4
   1ed5c:	andeq	r1, r0, ip, asr #4
   1ed60:	andeq	r1, r0, ip, asr #4
   1ed64:	andeq	r1, r0, r8, lsr r2
   1ed68:	andeq	r1, r0, r8, lsr r2
   1ed6c:	andeq	r1, r0, r8, lsr r2
   1ed70:	andeq	r0, r0, r0, asr r9
   1ed74:	andeq	r1, r0, r8, lsr r2
   1ed78:	andeq	r0, r0, ip, ror #7
   1ed7c:	andeq	r1, r0, r8, lsr r2
   1ed80:	andeq	r0, r0, ip, ror #7
   1ed84:	andeq	r0, r0, ip, ror #7
   1ed88:	andeq	r0, r0, ip, ror #7
   1ed8c:	andeq	r0, r0, ip, ror #7
   1ed90:	andeq	r0, r0, r0, asr r9
   1ed94:	andeq	r1, r0, r8, lsl #4
   1ed98:	andeq	r0, r0, r4, lsl r8
   1ed9c:	andeq	r0, r0, ip, ror #7
   1eda0:	andeq	r0, r0, ip, ror #7
   1eda4:	andeq	r0, r0, ip, ror #7
   1eda8:	andeq	r1, r0, r8, lsl #4
   1edac:	andeq	r0, r0, ip, ror #7
   1edb0:	andeq	r0, r0, r4, asr lr
   1edb4:	andeq	r1, r0, ip, asr #4
   1edb8:	andeq	r0, r0, r4, asr #29
   1edbc:	andeq	r0, r0, r0, lsr #16
   1edc0:	andeq	r0, r0, r0, lsr #16
   1edc4:	andeq	r0, r0, r0, lsr #16
   1edc8:	andeq	r0, r0, r0, lsr #16
   1edcc:	andeq	r0, r0, r0, lsr #16
   1edd0:	andeq	r0, r0, r0, lsr #16
   1edd4:	andeq	r1, r0, ip, asr #4
   1edd8:	andeq	r0, r0, ip, ror #7
   1eddc:	andeq	r0, r0, ip, ror #7
   1ede0:	andeq	r0, r0, r0, lsr pc
   1ede4:	andeq	r0, r0, r4, lsr #31
   1ede8:	andeq	r1, r0, r8, lsl #4
   1edec:	ldrdeq	r1, [r0], -ip
   1edf0:	andeq	r1, r0, r8, lsl r0
   1edf4:	andeq	r0, r0, r4, lsl r8
   1edf8:	andeq	r1, r0, r8, lsr #32
   1edfc:	andeq	r1, r0, r8, lsr r2
   1ee00:	andeq	r1, r0, r8, lsr r2
   1ee04:	andeq	r1, r0, r8, lsr r2
   1ee08:	andeq	r0, r0, r4, lsl r8
   1ee0c:	andeq	r1, r0, r8, lsr r2
   1ee10:	andeq	r1, r0, r8, lsr r2
   1ee14:	andeq	r1, r0, r8, lsl #1
   1ee18:			; <UNDEFINED> instruction: 0x000006bc
   1ee1c:	andeq	r0, r0, r0, asr #20
   1ee20:	andeq	r0, r0, ip, ror #7
   1ee24:	andeq	r1, r0, r8, lsr r2
   1ee28:	andeq	r1, r0, r8, lsr r2
   1ee2c:	andeq	r0, r0, r8, lsl r9
   1ee30:	andeq	r1, r0, r4, ror #2
   1ee34:			; <UNDEFINED> instruction: 0x000011b0
   1ee38:			; <UNDEFINED> instruction: 0x000006bc
   1ee3c:	andeq	r1, r0, r8, lsr r2
   1ee40:	andeq	r1, r0, r8, lsr r2
   1ee44:	andeq	r0, r0, ip, ror #7
   1ee48:	ldrdeq	r1, [r0], -r4
   1ee4c:	andeq	r1, r0, r8, asr r2
   1ee50:			; <UNDEFINED> instruction: 0x000006bc
   1ee54:	andeq	r1, r0, ip, lsr #4
   1ee58:	andeq	r0, r0, r8, lsl r9
   1ee5c:	andeq	r0, r0, ip, ror #7
   1ee60:	andeq	r0, r0, r4, lsl #21
   1ee64:	andeq	r0, r0, r4, lsl #21
   1ee68:	andeq	r1, r0, r8, lsr r2
   1ee6c:	andeq	r0, r0, ip, ror #7
   1ee70:	andeq	r0, r0, r0, asr #18
   1ee74:	andeq	r1, r0, r4, ror #4
   1ee78:	andeq	r0, r0, r0, asr #20
   1ee7c:	andeq	r1, r0, r8, lsr r2
   1ee80:	andeq	r1, r0, r8, lsr r2
   1ee84:	muleq	r0, r4, sl
   1ee88:	andeq	r0, r0, r0, asr #21
   1ee8c:	andeq	r0, r0, r0, asr #21
   1ee90:	muleq	r0, r4, sl
   1ee94:	andeq	r1, r0, r8, lsr r2
   1ee98:	andeq	r1, r0, r8, lsl #4
   1ee9c:	andeq	r1, r0, r8, lsr r2
   1eea0:			; <UNDEFINED> instruction: 0x000006bc
   1eea4:	andeq	r0, r0, ip, ror #7
   1eea8:	andeq	r1, r0, r4, lsr #5
   1eeac:	andeq	r1, r0, r8, lsl #4
   1eeb0:	andeq	r0, r0, r0, asr #18
   1eeb4:	andeq	r1, r0, r8, lsr r2
   1eeb8:	andeq	r1, r0, r8, lsl #4
   1eebc:	andeq	r1, r0, r8, lsl #4
   1eec0:			; <UNDEFINED> instruction: 0x000006bc
   1eec4:	andeq	r1, r0, r8, lsr r2
   1eec8:	andeq	r0, r0, ip, ror #7
   1eecc:	andeq	r1, r0, r8, lsr r2
   1eed0:	strdeq	r1, [r0], -r4
   1eed4:	andeq	r1, r0, ip, lsr #6
   1eed8:	andeq	r1, r0, ip, asr #4
   1eedc:	andeq	r1, r0, ip, asr #4
   1eee0:			; <UNDEFINED> instruction: 0x000006bc
   1eee4:	andeq	r1, r0, r8, ror r3
   1eee8:	andeq	r1, r0, ip, asr #4
   1eeec:	andeq	r1, r0, ip, asr #4
   1eef0:	andeq	r1, r0, ip, asr #4
   1eef4:	andeq	r1, r0, r8, lsr r2
   1eef8:			; <UNDEFINED> instruction: 0x000006bc
   1eefc:	andeq	r1, r0, ip, asr #4
   1ef00:	andeq	r0, r0, r0, asr #18
   1ef04:	andeq	r1, r0, r8, lsl #4
   1ef08:	andeq	r1, r0, r8, lsl #4
   1ef0c:	andeq	r0, r0, ip, ror #7
   1ef10:	andeq	r1, r0, r8, lsr r2
   1ef14:	andeq	r1, r0, r8, lsr r2
   1ef18:	andeq	r0, r0, r4, lsl r8
   1ef1c:	andeq	r1, r0, ip, lsr #7
   1ef20:	andeq	r1, r0, r8, lsr r2
   1ef24:	andeq	r1, r0, r8, lsr r2
   1ef28:	andeq	r1, r0, r8, lsr r2
   1ef2c:	andeq	r1, r0, r8, lsr r2
   1ef30:	andeq	r1, r0, r8, lsr r2
   1ef34:	andeq	r1, r0, r8, lsr r2
   1ef38:	andeq	r1, r0, r8, lsr r2
   1ef3c:	andeq	r1, r0, r8, lsr r2
   1ef40:	andeq	r1, r0, r8, lsr r2
   1ef44:	andeq	r1, r0, r8, lsr r2
   1ef48:	andeq	r1, r0, r8, lsr r2
   1ef4c:	andeq	r1, r0, r8, lsr r2
   1ef50:	andeq	r1, r0, r8, lsr r2
   1ef54:	andeq	r1, r0, r8, lsr r2
   1ef58:	andeq	r1, r0, r8, lsr r2
   1ef5c:	andeq	r1, r0, r8, lsr r2
   1ef60:	andeq	r1, r0, r8, lsr r2
   1ef64:	andeq	r1, r0, r8, lsr r2
   1ef68:	andeq	r1, r0, r8, lsr r2
   1ef6c:	andeq	r1, r0, r8, lsr r2
   1ef70:	andeq	r1, r0, r8, lsr r2
   1ef74:	andeq	r1, r0, r8, lsr r2
   1ef78:	andeq	r1, r0, r8, lsr r2
   1ef7c:	andeq	r1, r0, r8, lsr r2
   1ef80:	andeq	r1, r0, r8, lsr r2
   1ef84:	andeq	r1, r0, r8, lsr r2
   1ef88:	andeq	r1, r0, r8, lsr r2
   1ef8c:	andeq	r1, r0, r8, lsr r2
   1ef90:	andeq	r1, r0, r8, lsr r2
   1ef94:	andeq	r1, r0, r8, lsr r2
   1ef98:	andeq	r1, r0, r8, lsr r2
   1ef9c:	andeq	r1, r0, r8, lsr r2
   1efa0:	andeq	r1, r0, r8, lsr r2
   1efa4:	andeq	r1, r0, r8, lsr r2
   1efa8:	andeq	r1, r0, r8, lsr r2
   1efac:	andeq	r1, r0, r8, lsr r2
   1efb0:	andeq	r1, r0, r8, lsr r2
   1efb4:	andeq	r1, r0, r8, lsr r2
   1efb8:	andeq	r1, r0, r8, lsr r2
   1efbc:	andeq	r1, r0, r8, lsr r2
   1efc0:	andeq	r1, r0, r8, lsr r2
   1efc4:	andeq	r1, r0, r8, lsr r2
   1efc8:	andeq	r1, r0, r8, lsr r2
   1efcc:	andeq	r1, r0, r8, lsr r2
   1efd0:	andeq	r1, r0, r8, lsr r2
   1efd4:	andeq	r1, r0, r8, lsr r2
   1efd8:	andeq	r1, r0, r8, lsr r2
   1efdc:	andeq	r1, r0, r8, lsr r2
   1efe0:	andeq	r1, r0, r8, lsr r2
   1efe4:	andeq	r1, r0, r8, lsr r2
   1efe8:	andeq	r1, r0, r8, lsr r2
   1efec:	andeq	r1, r0, r8, lsr r2
   1eff0:	andeq	r1, r0, r8, lsr r2
   1eff4:	andeq	r1, r0, r8, lsr r2
   1eff8:	andeq	r1, r0, r8, lsr r2
   1effc:	andeq	r1, r0, r8, lsr r2
   1f000:	andeq	r1, r0, r8, lsr r2
   1f004:	andeq	r1, r0, r8, lsr r2
   1f008:	andeq	r1, r0, r8, lsr r2
   1f00c:	andeq	r1, r0, r8, lsr r2
   1f010:	andeq	r1, r0, r8, lsr r2
   1f014:	andeq	r1, r0, r8, lsr r2
   1f018:	andeq	r1, r0, r8, lsr r2
   1f01c:	andeq	r1, r0, r8, lsr r2
   1f020:	andeq	r1, r0, r8, lsr r2
   1f024:	andeq	r1, r0, r8, lsr r2
   1f028:	andeq	r1, r0, r8, lsr r2
   1f02c:	andeq	r1, r0, r8, lsr r2
   1f030:	andeq	r1, r0, r8, lsr r2
   1f034:	andeq	r1, r0, r8, lsr r2
   1f038:	andeq	r1, r0, r8, lsr r2
   1f03c:	andeq	r1, r0, r8, lsr r2
   1f040:	andeq	r1, r0, r8, lsr r2
   1f044:	andeq	r1, r0, r8, lsr r2
   1f048:	andeq	r1, r0, r8, lsl #8
   1f04c:	andeq	r1, r0, r8, lsr r2
   1f050:	andeq	r1, r0, r8, lsr r2
   1f054:	andeq	r1, r0, r8, lsr r2
   1f058:	andeq	r1, r0, r8, lsr r2
   1f05c:	andeq	r1, r0, r8, lsr r2
   1f060:	andeq	r1, r0, r8, lsr r2
   1f064:	andeq	r1, r0, r8, lsr r2
   1f068:	andeq	r1, r0, r8, lsr r2
   1f06c:	andeq	r1, r0, r8, lsr r2
   1f070:	andeq	r1, r0, r8, lsr r2
   1f074:	andeq	r1, r0, r8, lsr r2
   1f078:	andeq	r1, r0, r8, lsr r2
   1f07c:	andeq	r1, r0, r8, lsr r2
   1f080:	andeq	r1, r0, r8, lsr r2
   1f084:	andeq	r1, r0, r8, lsr r2
   1f088:	andeq	r1, r0, r8, lsr r2
   1f08c:	andeq	r1, r0, r8, lsr r2
   1f090:	andeq	r1, r0, r8, lsr r2
   1f094:	andeq	r1, r0, r8, lsr r2
   1f098:	andeq	r1, r0, r8, lsr r2
   1f09c:	andeq	r1, r0, r8, lsr r2
   1f0a0:	andeq	r1, r0, r8, lsr r2
   1f0a4:	andeq	r1, r0, r8, lsr r2
   1f0a8:	andeq	r1, r0, r8, lsr r2
   1f0ac:	andeq	r1, r0, r8, lsr r2
   1f0b0:	andeq	r1, r0, r8, lsr r2
   1f0b4:	andeq	r1, r0, r8, lsr r2
   1f0b8:	andeq	r1, r0, r8, lsr r2
   1f0bc:	andeq	r1, r0, r8, lsr r2
   1f0c0:	andeq	r1, r0, r8, lsr r2
   1f0c4:	andeq	r1, r0, r8, lsr r2
   1f0c8:	andeq	r1, r0, r8, lsr r2
   1f0cc:	andeq	r1, r0, r8, asr r4
   1f0d0:	mov	r0, r8
   1f0d4:	mov	r1, #99	; 0x63
   1f0d8:	mov	r2, #1
   1f0dc:	mov	r3, #32
   1f0e0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f0e4:	cmp	r0, #0
   1f0e8:	beq	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f0ec:	mov	r0, r8
   1f0f0:	mov	r1, r6
   1f0f4:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1f0f8:	b	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f0fc:	sub	r0, r2, #4
   1f100:	cmp	r0, #135	; 0x87
   1f104:	bhi	1f7dc <myhtml_insertion_mode_in_body@@Base+0xb38>
   1f108:	add	r1, pc, #4
   1f10c:	ldr	r0, [r1, r0, lsl #2]
   1f110:	add	pc, r1, r0
   1f114:	andeq	r0, r0, r8, ror r2
   1f118:	andeq	r0, r0, r8, asr #13
   1f11c:	andeq	r0, r0, r8, asr #13
   1f120:	andeq	r0, r0, r0, lsr #4
   1f124:	andeq	r0, r0, r8, asr #13
   1f128:	andeq	r0, r0, r0, asr #8
   1f12c:	andeq	r0, r0, r8, asr #13
   1f130:	andeq	r0, r0, r0, lsr #4
   1f134:	andeq	r0, r0, r0, lsr #4
   1f138:	andeq	r0, r0, r8, asr #13
   1f13c:	andeq	r0, r0, r8, ror r2
   1f140:	andeq	r0, r0, r8, asr #13
   1f144:	andeq	r0, r0, r8, asr #13
   1f148:	andeq	r0, r0, r8, asr #13
   1f14c:	andeq	r0, r0, r8, asr #13
   1f150:	andeq	r0, r0, r8, asr #13
   1f154:	andeq	r0, r0, r8, ror r2
   1f158:	andeq	r0, r0, r8, asr #13
   1f15c:	andeq	r0, r0, r0, lsr #4
   1f160:	ldrdeq	r0, [r0], -r8
   1f164:	andeq	r0, r0, ip, lsl r7
   1f168:	andeq	r0, r0, r0, lsr #4
   1f16c:	andeq	r0, r0, r8, asr #13
   1f170:	andeq	r0, r0, r8, asr #13
   1f174:	andeq	r0, r0, r0, lsr #4
   1f178:	andeq	r0, r0, r8, asr #13
   1f17c:	andeq	r0, r0, r8, ror r2
   1f180:	andeq	r0, r0, r8, asr #13
   1f184:	andeq	r0, r0, r8, asr #13
   1f188:	andeq	r0, r0, r8, asr #13
   1f18c:	andeq	r0, r0, r8, asr #13
   1f190:	andeq	r0, r0, r8, asr #13
   1f194:	andeq	r0, r0, r0, lsr #9
   1f198:	andeq	r0, r0, r8, asr #13
   1f19c:	andeq	r0, r0, r0, lsr #4
   1f1a0:	andeq	r0, r0, r8, asr #13
   1f1a4:	andeq	r0, r0, r0, lsr #4
   1f1a8:	andeq	r0, r0, r0, lsr #4
   1f1ac:	andeq	r0, r0, r0, lsr #4
   1f1b0:	andeq	r0, r0, r0, lsr #4
   1f1b4:	andeq	r0, r0, r0, lsr #9
   1f1b8:	andeq	r0, r0, r8, ror r2
   1f1bc:	andeq	r0, r0, r8, asr #13
   1f1c0:	andeq	r0, r0, r0, lsr #4
   1f1c4:	andeq	r0, r0, r0, lsr #4
   1f1c8:	andeq	r0, r0, r0, lsr #4
   1f1cc:	andeq	r0, r0, r8, ror r2
   1f1d0:	andeq	r0, r0, r0, lsr #4
   1f1d4:	andeq	r0, r0, r0, asr r7
   1f1d8:	andeq	r0, r0, r8, asr #13
   1f1dc:	andeq	r0, r0, r8, asr #13
   1f1e0:	andeq	r0, r0, r0, lsr #5
   1f1e4:	andeq	r0, r0, r0, lsr #5
   1f1e8:	andeq	r0, r0, r0, lsr #5
   1f1ec:	andeq	r0, r0, r0, lsr #5
   1f1f0:	andeq	r0, r0, r0, lsr #5
   1f1f4:	andeq	r0, r0, r0, lsr #5
   1f1f8:	andeq	r0, r0, r8, asr #13
   1f1fc:	andeq	r0, r0, r0, lsr #4
   1f200:	andeq	r0, r0, r0, lsr #4
   1f204:	andeq	r0, r0, r8, asr #13
   1f208:			; <UNDEFINED> instruction: 0x000007bc
   1f20c:	andeq	r0, r0, r8, ror r2
   1f210:	andeq	r0, r0, r8, asr #13
   1f214:	andeq	r0, r0, r8, asr #13
   1f218:	andeq	r0, r0, r8, asr #13
   1f21c:	andeq	r0, r0, r8, asr #13
   1f220:	andeq	r0, r0, r8, asr #13
   1f224:	andeq	r0, r0, r8, asr #13
   1f228:	andeq	r0, r0, r8, asr #13
   1f22c:	andeq	r0, r0, r8, asr #13
   1f230:	andeq	r0, r0, r8, asr #13
   1f234:	andeq	r0, r0, r8, asr #13
   1f238:	andeq	r0, r0, r0, lsl #16
   1f23c:	andeq	r0, r0, r8, asr #13
   1f240:	andeq	r0, r0, r0, lsr #4
   1f244:	andeq	r0, r0, r0, lsr #4
   1f248:	andeq	r0, r0, r8, asr #13
   1f24c:	andeq	r0, r0, r8, asr #13
   1f250:	andeq	r0, r0, r0, asr #8
   1f254:	andeq	r0, r0, r0, lsr #4
   1f258:	andeq	r0, r0, r8, asr #13
   1f25c:	andeq	r0, r0, r8, asr #13
   1f260:	andeq	r0, r0, r8, asr #13
   1f264:	andeq	r0, r0, r8, asr #13
   1f268:	andeq	r0, r0, r0, lsr #4
   1f26c:	andeq	r0, r0, r8, ror r2
   1f270:	andeq	r0, r0, r8, asr #13
   1f274:	andeq	r0, r0, r8, asr #13
   1f278:	andeq	r0, r0, r8, asr #13
   1f27c:	andeq	r0, r0, r0, asr #8
   1f280:	andeq	r0, r0, r0, lsr #4
   1f284:	andeq	r0, r0, r8, asr #13
   1f288:	andeq	r0, r0, r8, asr #13
   1f28c:	andeq	r0, r0, r8, asr #13
   1f290:	andeq	r0, r0, ip, asr #16
   1f294:	andeq	r0, r0, r8, asr #13
   1f298:	andeq	r0, r0, r8, asr #13
   1f29c:	andeq	r0, r0, r0, lsr #4
   1f2a0:	andeq	r0, r0, r8, asr #13
   1f2a4:	andeq	r0, r0, r8, asr #13
   1f2a8:	andeq	r0, r0, r8, asr #13
   1f2ac:	andeq	r0, r0, r8, asr #13
   1f2b0:	andeq	r0, r0, r8, asr #13
   1f2b4:	andeq	r0, r0, r8, asr #13
   1f2b8:	andeq	r0, r0, r8, asr #13
   1f2bc:	andeq	r0, r0, r8, ror r2
   1f2c0:	andeq	r0, r0, r8, asr #13
   1f2c4:	andeq	r0, r0, r8, asr #13
   1f2c8:	andeq	r0, r0, r0, lsr #4
   1f2cc:	andeq	r0, r0, r8, asr #13
   1f2d0:	andeq	r0, r0, r8, ror r2
   1f2d4:	andeq	r0, r0, r8, asr #13
   1f2d8:	andeq	r0, r0, r8, asr #13
   1f2dc:	andeq	r0, r0, r8, ror r2
   1f2e0:	andeq	r0, r0, r8, ror r2
   1f2e4:	andeq	r0, r0, r8, asr #13
   1f2e8:	andeq	r0, r0, r8, asr #13
   1f2ec:	andeq	r0, r0, r0, lsr #4
   1f2f0:	andeq	r0, r0, r8, asr #13
   1f2f4:	andeq	r0, r0, r8, asr #13
   1f2f8:	andeq	r0, r0, r8, asr #13
   1f2fc:	andeq	r0, r0, r8, asr #13
   1f300:	andeq	r0, r0, r8, asr #13
   1f304:	andeq	r0, r0, ip, lsl #5
   1f308:	andeq	r0, r0, r8, asr #13
   1f30c:	andeq	r0, r0, r8, asr #13
   1f310:	andeq	r0, r0, r8, asr #13
   1f314:	andeq	r0, r0, r8, asr #13
   1f318:	andeq	r0, r0, r8, asr #13
   1f31c:	andeq	r0, r0, r8, asr #13
   1f320:	andeq	r0, r0, r8, asr #13
   1f324:	andeq	r0, r0, r8, asr #13
   1f328:	andeq	r0, r0, r8, ror r2
   1f32c:	andeq	r0, r0, r8, ror r2
   1f330:	andeq	r0, r0, r0, lsr #4
   1f334:	mov	r0, r8
   1f338:	mov	r1, r2
   1f33c:	mov	r2, #1
   1f340:	mov	r3, #8
   1f344:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f348:	mov	sl, #0
   1f34c:	cmp	r0, #0
   1f350:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f354:	mov	r0, r8
   1f358:	mov	r1, #0
   1f35c:	mov	r2, #0
   1f360:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f364:	mov	r0, r8
   1f368:	bl	11a4c <myhtml_tree_current_node@plt>
   1f36c:	ldr	r1, [r6]
   1f370:	bl	11e9c <myhtml_is_html_node@plt>
   1f374:	ldr	r1, [r6]
   1f378:	mov	r0, r8
   1f37c:	mov	r2, #1
   1f380:	mov	r3, #0
   1f384:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   1f388:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f38c:	mov	r0, r8
   1f390:	mov	r1, r6
   1f394:	bl	11cb0 <myhtml_tree_adoption_agency_algorithm@plt>
   1f398:	mov	sl, #0
   1f39c:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f3a0:	mov	r0, r8
   1f3a4:	mov	r1, r6
   1f3a8:	sub	sp, fp, #28
   1f3ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f3b0:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   1f3b4:	ldr	r0, [r8, #128]	; 0x80
   1f3b8:	ldr	r4, [r0, #4]
   1f3bc:	ldr	r7, [r0]
   1f3c0:	sub	r5, r7, #4
   1f3c4:	mov	sl, #0
   1f3c8:	cmp	r4, #0
   1f3cc:	bne	1f3f4 <myhtml_insertion_mode_in_body@@Base+0x750>
   1f3d0:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f3d4:	sub	r4, r4, #1
   1f3d8:	ldr	r1, [r1, #8]
   1f3dc:	add	r0, r0, r1, lsl #2
   1f3e0:	ldrb	r0, [r0, #16]
   1f3e4:	tst	r0, #8
   1f3e8:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f3ec:	cmp	r4, #0
   1f3f0:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f3f4:	ldr	r0, [r5, r4, lsl #2]
   1f3f8:	ldr	r1, [r0, #4]
   1f3fc:	ldr	r0, [r8, #28]
   1f400:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1f404:	ldr	r1, [r5, r4, lsl #2]
   1f408:	ldr	r2, [r1, #4]
   1f40c:	sub	r2, r2, #55	; 0x37
   1f410:	cmp	r2, #5
   1f414:	bhi	1f3d4 <myhtml_insertion_mode_in_body@@Base+0x730>
   1f418:	ldr	r2, [r1, #8]
   1f41c:	cmp	r2, #1
   1f420:	bne	1f3d4 <myhtml_insertion_mode_in_body@@Base+0x730>
   1f424:	mov	sl, #0
   1f428:	mov	r0, r8
   1f42c:	mov	r1, #0
   1f430:	mov	r2, #0
   1f434:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f438:	mov	r0, r8
   1f43c:	bl	11a4c <myhtml_tree_current_node@plt>
   1f440:	ldr	r1, [r6]
   1f444:	bl	11e9c <myhtml_is_html_node@plt>
   1f448:	b	1f460 <myhtml_insertion_mode_in_body@@Base+0x7bc>
   1f44c:	ldr	r0, [r0]
   1f450:	ldr	r0, [r7, r0, lsl #2]
   1f454:	ldr	r0, [r0, #8]
   1f458:	cmp	r0, #1
   1f45c:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f460:	ldr	r0, [r8, #128]	; 0x80
   1f464:	ldr	r1, [r0, #4]!
   1f468:	cmp	r1, #0
   1f46c:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f470:	ldr	r1, [r0]
   1f474:	sub	r1, r1, #1
   1f478:	str	r1, [r0]
   1f47c:	ldr	r1, [r0]
   1f480:	ldr	r1, [r7, r1, lsl #2]
   1f484:	ldr	r1, [r1, #4]
   1f488:	cmp	r1, #55	; 0x37
   1f48c:	beq	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f490:	ldr	r1, [r0]
   1f494:	ldr	r1, [r7, r1, lsl #2]
   1f498:	ldr	r1, [r1, #4]
   1f49c:	cmp	r1, #56	; 0x38
   1f4a0:	beq	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f4a4:	ldr	r1, [r0]
   1f4a8:	ldr	r1, [r7, r1, lsl #2]
   1f4ac:	ldr	r1, [r1, #4]
   1f4b0:	cmp	r1, #57	; 0x39
   1f4b4:	beq	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f4b8:	ldr	r1, [r0]
   1f4bc:	ldr	r1, [r7, r1, lsl #2]
   1f4c0:	ldr	r1, [r1, #4]
   1f4c4:	cmp	r1, #58	; 0x3a
   1f4c8:	beq	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f4cc:	ldr	r1, [r0]
   1f4d0:	ldr	r1, [r7, r1, lsl #2]
   1f4d4:	ldr	r1, [r1, #4]
   1f4d8:	cmp	r1, #59	; 0x3b
   1f4dc:	beq	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f4e0:	ldr	r1, [r0]
   1f4e4:	ldr	r1, [r7, r1, lsl #2]
   1f4e8:	ldr	r1, [r1, #4]
   1f4ec:	cmp	r1, #60	; 0x3c
   1f4f0:	bne	1f460 <myhtml_insertion_mode_in_body@@Base+0x7bc>
   1f4f4:	b	1f44c <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1f4f8:	mov	r0, r8
   1f4fc:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1f500:	b	1fc5c <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1f504:	mov	r0, r8
   1f508:	mov	r1, #99	; 0x63
   1f50c:	mov	r2, #1
   1f510:	mov	r3, #32
   1f514:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f518:	cmp	r0, #0
   1f51c:	beq	1f52c <myhtml_insertion_mode_in_body@@Base+0x888>
   1f520:	mov	r0, r8
   1f524:	mov	r1, r6
   1f528:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1f52c:	mov	r0, r8
   1f530:	bl	11a4c <myhtml_tree_current_node@plt>
   1f534:	ldr	r1, [r0, #4]
   1f538:	sub	r1, r1, #55	; 0x37
   1f53c:	cmp	r1, #5
   1f540:	bhi	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f544:	ldr	r0, [r0, #8]
   1f548:	cmp	r0, #1
   1f54c:	beq	1fe88 <myhtml_insertion_mode_in_body@@Base+0x11e4>
   1f550:	b	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f554:	mov	r0, r8
   1f558:	mov	r1, r2
   1f55c:	mov	r2, #1
   1f560:	mov	r3, #8
   1f564:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f568:	mov	sl, #0
   1f56c:	cmp	r0, #0
   1f570:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f574:	mov	r0, r8
   1f578:	mov	r1, #0
   1f57c:	mov	r2, #0
   1f580:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f584:	mov	r0, r8
   1f588:	bl	11a4c <myhtml_tree_current_node@plt>
   1f58c:	ldr	r1, [r6]
   1f590:	bl	11e9c <myhtml_is_html_node@plt>
   1f594:	ldr	r1, [r6]
   1f598:	mov	r0, r8
   1f59c:	mov	r2, #1
   1f5a0:	mov	r3, #0
   1f5a4:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   1f5a8:	mov	r0, r8
   1f5ac:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1f5b0:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f5b4:	mov	r0, r8
   1f5b8:	mov	r1, r2
   1f5bc:	mov	r2, #1
   1f5c0:	mov	r3, #8
   1f5c4:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f5c8:	cmp	r0, #0
   1f5cc:	beq	1f398 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f5d0:	ldr	r1, [r6]
   1f5d4:	mov	r0, r8
   1f5d8:	mov	r2, #1
   1f5dc:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f5e0:	mov	r0, r8
   1f5e4:	bl	11a4c <myhtml_tree_current_node@plt>
   1f5e8:	ldr	r1, [r6]
   1f5ec:	bl	11e9c <myhtml_is_html_node@plt>
   1f5f0:	ldr	r1, [r6]
   1f5f4:	mov	sl, #0
   1f5f8:	b	1f378 <myhtml_insertion_mode_in_body@@Base+0x6d4>
   1f5fc:	mov	r0, r8
   1f600:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1f604:	mov	r0, r8
   1f608:	mov	r1, r6
   1f60c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1f610:	ldr	r0, [r8]
   1f614:	ldr	r1, [r0, #36]	; 0x24
   1f618:	mov	r0, r8
   1f61c:	bl	11548 <myhtml_tree_active_formatting_append@plt>
   1f620:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f624:	mov	r0, r8
   1f628:	mov	r1, r6
   1f62c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1f630:	b	20130 <myhtml_insertion_mode_in_body@@Base+0x148c>
   1f634:	ldr	r0, [r8, #128]	; 0x80
   1f638:	ldr	r1, [r8, #180]	; 0xb4
   1f63c:	ldr	r2, [r8, #180]	; 0xb4
   1f640:	and	r1, r1, #2
   1f644:	eor	r1, r2, r1
   1f648:	str	r1, [r8, #180]	; 0xb4
   1f64c:	ldr	r9, [r0, #4]
   1f650:	cmp	r9, #0
   1f654:	beq	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f658:	ldr	r0, [r8, #28]
   1f65c:	ldr	r1, [r8, #128]	; 0x80
   1f660:	ldr	r1, [r1]
   1f664:	add	r1, r1, r9, lsl #2
   1f668:	ldr	r4, [r1, #-4]
   1f66c:	mov	r7, r4
   1f670:	ldr	r1, [r7, #4]!
   1f674:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1f678:	mov	r5, r0
   1f67c:	mov	r0, r4
   1f680:	mov	r1, #36	; 0x24
   1f684:	bl	11e9c <myhtml_is_html_node@plt>
   1f688:	cmp	r0, #0
   1f68c:	bne	20160 <myhtml_insertion_mode_in_body@@Base+0x14bc>
   1f690:	rsb	r9, r9, #2
   1f694:	mov	r0, r4
   1f698:	mov	r1, #44	; 0x2c
   1f69c:	bl	11e9c <myhtml_is_html_node@plt>
   1f6a0:	cmp	r0, #0
   1f6a4:	bne	20228 <myhtml_insertion_mode_in_body@@Base+0x1584>
   1f6a8:	ldr	r0, [r4, #8]
   1f6ac:	add	r1, r5, r0, lsl #2
   1f6b0:	ldrb	r1, [r1, #16]
   1f6b4:	tst	r1, #2
   1f6b8:	beq	1f6d4 <myhtml_insertion_mode_in_body@@Base+0xa30>
   1f6bc:	ldr	r1, [r7]
   1f6c0:	cmp	r1, #7
   1f6c4:	cmpne	r1, #99	; 0x63
   1f6c8:	bne	1f718 <myhtml_insertion_mode_in_body@@Base+0xa74>
   1f6cc:	cmp	r0, #1
   1f6d0:	bne	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f6d4:	cmp	r9, #1
   1f6d8:	beq	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f6dc:	ldr	r0, [r8, #28]
   1f6e0:	ldr	r1, [r8, #128]	; 0x80
   1f6e4:	ldr	r1, [r1]
   1f6e8:	ldr	r4, [r1, -r9, lsl #2]
   1f6ec:	mov	r7, r4
   1f6f0:	ldr	r1, [r7, #4]!
   1f6f4:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1f6f8:	mov	r5, r0
   1f6fc:	mov	r0, r4
   1f700:	mov	r1, #36	; 0x24
   1f704:	bl	11e9c <myhtml_is_html_node@plt>
   1f708:	add	r9, r9, #1
   1f70c:	cmp	r0, #0
   1f710:	beq	1f694 <myhtml_insertion_mode_in_body@@Base+0x9f0>
   1f714:	b	20160 <myhtml_insertion_mode_in_body@@Base+0x14bc>
   1f718:	cmp	r1, #42	; 0x2a
   1f71c:	beq	1f6cc <myhtml_insertion_mode_in_body@@Base+0xa28>
   1f720:	b	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1f724:	mov	r0, r8
   1f728:	mov	r1, #99	; 0x63
   1f72c:	mov	r2, #1
   1f730:	mov	r3, #32
   1f734:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f738:	cmp	r0, #0
   1f73c:	beq	1f74c <myhtml_insertion_mode_in_body@@Base+0xaa8>
   1f740:	mov	r0, r8
   1f744:	mov	r1, r6
   1f748:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1f74c:	mov	r0, r8
   1f750:	mov	r1, r6
   1f754:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1f758:	ldr	r0, [r8, #180]	; 0xb4
   1f75c:	orr	r0, r0, #192	; 0xc0
   1f760:	str	r0, [r8, #180]	; 0xb4
   1f764:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f768:	mov	r0, r8
   1f76c:	bl	11a4c <myhtml_tree_current_node@plt>
   1f770:	mov	r1, #97	; 0x61
   1f774:	b	1fea0 <myhtml_insertion_mode_in_body@@Base+0x11fc>
   1f778:	mov	r0, r8
   1f77c:	mov	r1, #109	; 0x6d
   1f780:	mov	r2, #1
   1f784:	mov	r3, #8
   1f788:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f78c:	cmp	r0, #0
   1f790:	beq	1f7d0 <myhtml_insertion_mode_in_body@@Base+0xb2c>
   1f794:	mov	r0, r8
   1f798:	mov	r1, #0
   1f79c:	mov	r2, #0
   1f7a0:	b	1f7cc <myhtml_insertion_mode_in_body@@Base+0xb28>
   1f7a4:	mov	r0, r8
   1f7a8:	mov	r1, #109	; 0x6d
   1f7ac:	mov	r2, #1
   1f7b0:	mov	r3, #8
   1f7b4:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f7b8:	cmp	r0, #0
   1f7bc:	beq	1f7d0 <myhtml_insertion_mode_in_body@@Base+0xb2c>
   1f7c0:	mov	r0, r8
   1f7c4:	mov	r1, #108	; 0x6c
   1f7c8:	mov	r2, #1
   1f7cc:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f7d0:	mov	r0, r8
   1f7d4:	bl	11a4c <myhtml_tree_current_node@plt>
   1f7d8:	b	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f7dc:	mov	r0, r8
   1f7e0:	mov	r1, r6
   1f7e4:	bl	111dc <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1f7e8:	b	1f398 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f7ec:	mov	r0, r8
   1f7f0:	mov	r1, #23
   1f7f4:	mov	r2, #1
   1f7f8:	mov	r3, #8
   1f7fc:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f800:	mov	sl, #0
   1f804:	cmp	r0, #0
   1f808:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f80c:	ldr	r0, [r8, #128]	; 0x80
   1f810:	mvn	r1, #0
   1f814:	add	r1, r1, #1
   1f818:	ldr	r2, [r0, #4]
   1f81c:	cmp	r1, r2
   1f820:	bcc	1f814 <myhtml_insertion_mode_in_body@@Base+0xb70>
   1f824:	mov	r0, #18
   1f828:	str	r0, [r8, #168]	; 0xa8
   1f82c:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f830:	ldr	r0, [r6, #40]	; 0x28
   1f834:	cmp	r0, #0
   1f838:	movne	r0, #0
   1f83c:	strne	r0, [r6, #40]	; 0x28
   1f840:	ldr	r0, [r6, #44]	; 0x2c
   1f844:	cmp	r0, #0
   1f848:	movne	r0, #0
   1f84c:	strne	r0, [r6, #44]	; 0x2c
   1f850:	mov	r0, r8
   1f854:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1f858:	mov	sl, #0
   1f85c:	str	sl, [r6, #48]	; 0x30
   1f860:	b	1fc5c <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1f864:	mov	sl, #0
   1f868:	mov	r0, r8
   1f86c:	mov	r1, #128	; 0x80
   1f870:	mov	r2, #1
   1f874:	mov	r3, #0
   1f878:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f87c:	cmp	r0, #0
   1f880:	beq	2018c <myhtml_insertion_mode_in_body@@Base+0x14e8>
   1f884:	mov	r0, r8
   1f888:	mov	r1, #52	; 0x34
   1f88c:	mov	r2, #1
   1f890:	mov	r3, #8
   1f894:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f898:	cmp	r0, #0
   1f89c:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f8a0:	mov	sl, #0
   1f8a4:	mov	r0, r8
   1f8a8:	mov	r1, #0
   1f8ac:	mov	r2, #0
   1f8b0:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f8b4:	mov	r0, r8
   1f8b8:	bl	11a4c <myhtml_tree_current_node@plt>
   1f8bc:	mov	r1, #52	; 0x34
   1f8c0:	bl	11e9c <myhtml_is_html_node@plt>
   1f8c4:	mov	r0, r8
   1f8c8:	mov	r1, #52	; 0x34
   1f8cc:	b	1f37c <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f8d0:	mov	r0, r8
   1f8d4:	mov	r1, #23
   1f8d8:	mov	r2, #1
   1f8dc:	mov	r3, #8
   1f8e0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f8e4:	cmp	r0, #0
   1f8e8:	beq	1f398 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f8ec:	ldr	r0, [r8, #128]	; 0x80
   1f8f0:	mvn	r1, #0
   1f8f4:	add	r1, r1, #1
   1f8f8:	ldr	r2, [r0, #4]
   1f8fc:	cmp	r1, r2
   1f900:	bcc	1f8f4 <myhtml_insertion_mode_in_body@@Base+0xc50>
   1f904:	mov	r0, #18
   1f908:	str	r0, [r8, #168]	; 0xa8
   1f90c:	mov	sl, #1
   1f910:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f914:	mov	r0, r8
   1f918:	mov	r1, #77	; 0x4d
   1f91c:	mov	r2, #1
   1f920:	mov	r3, #16
   1f924:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f928:	cmp	r0, #0
   1f92c:	beq	1f398 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f930:	mov	r0, r8
   1f934:	mov	r1, #77	; 0x4d
   1f938:	mov	r2, #1
   1f93c:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1f940:	mov	r0, r8
   1f944:	bl	11a4c <myhtml_tree_current_node@plt>
   1f948:	mov	r1, #77	; 0x4d
   1f94c:	bl	11e9c <myhtml_is_html_node@plt>
   1f950:	mov	sl, #0
   1f954:	mov	r0, r8
   1f958:	mov	r1, #77	; 0x4d
   1f95c:	b	1f37c <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1f960:	mov	r0, r8
   1f964:	mov	r1, #99	; 0x63
   1f968:	mov	r2, #1
   1f96c:	mov	r3, #32
   1f970:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1f974:	cmp	r0, #0
   1f978:	bne	1f98c <myhtml_insertion_mode_in_body@@Base+0xce8>
   1f97c:	mov	r0, r8
   1f980:	mov	r1, #99	; 0x63
   1f984:	mov	r2, #1
   1f988:	bl	11d88 <myhtml_tree_node_insert@plt>
   1f98c:	mov	r0, r8
   1f990:	mov	r1, r6
   1f994:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1f998:	b	1f398 <myhtml_insertion_mode_in_body@@Base+0x6f4>
   1f99c:	ldr	r0, [r6, #48]	; 0x30
   1f9a0:	tst	r0, #2048	; 0x800
   1f9a4:	beq	1f9c0 <myhtml_insertion_mode_in_body@@Base+0xd1c>
   1f9a8:	mov	r0, r8
   1f9ac:	mov	r1, r6
   1f9b0:	bl	11be4 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f9b4:	ldr	r0, [r6, #12]
   1f9b8:	cmp	r0, #0
   1f9bc:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f9c0:	mov	r0, r8
   1f9c4:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1f9c8:	mov	r0, r8
   1f9cc:	mov	r1, r6
   1f9d0:	bl	1141c <myhtml_tree_node_insert_text@plt>
   1f9d4:	ldr	r0, [r6, #48]	; 0x30
   1f9d8:	tst	r0, #8
   1f9dc:	beq	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1f9e0:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f9e4:	mov	sl, #0
   1f9e8:	mov	r0, r8
   1f9ec:	mov	r1, r6
   1f9f0:	mov	r2, #0
   1f9f4:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   1f9f8:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1f9fc:	mov	sl, #0
   1fa00:	mov	r0, r8
   1fa04:	mov	r1, #4
   1fa08:	mov	r2, #0
   1fa0c:	bl	11a70 <myhtml_tree_active_formatting_between_last_marker@plt>
   1fa10:	cmp	r0, #0
   1fa14:	beq	1feec <myhtml_insertion_mode_in_body@@Base+0x1248>
   1fa18:	mov	r0, r8
   1fa1c:	mov	r1, r6
   1fa20:	mov	r2, #4
   1fa24:	bl	11cb0 <myhtml_tree_adoption_agency_algorithm@plt>
   1fa28:	mov	r0, r8
   1fa2c:	mov	r1, #4
   1fa30:	mov	r2, #0
   1fa34:	bl	11a70 <myhtml_tree_active_formatting_between_last_marker@plt>
   1fa38:	cmp	r0, #0
   1fa3c:	beq	1feec <myhtml_insertion_mode_in_body@@Base+0x1248>
   1fa40:	mov	r7, r0
   1fa44:	mov	r0, r8
   1fa48:	mov	r1, r7
   1fa4c:	bl	11698 <myhtml_tree_open_elements_remove@plt>
   1fa50:	mov	r0, r8
   1fa54:	mov	r1, r7
   1fa58:	bl	11cbc <myhtml_tree_active_formatting_remove@plt>
   1fa5c:	b	1feec <myhtml_insertion_mode_in_body@@Base+0x1248>
   1fa60:	ldr	r0, [r8, #128]	; 0x80
   1fa64:	ldr	r1, [r0, #4]
   1fa68:	cmp	r1, #2
   1fa6c:	bcc	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fa70:	ldr	r0, [r0]
   1fa74:	ldr	r0, [r0, #4]
   1fa78:	ldr	r1, [r0, #4]
   1fa7c:	cmp	r1, #23
   1fa80:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fa84:	ldr	r0, [r0, #8]
   1fa88:	cmp	r0, #1
   1fa8c:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fa90:	mov	sl, #0
   1fa94:	mov	r0, r8
   1fa98:	mov	r1, #128	; 0x80
   1fa9c:	mov	r2, #1
   1faa0:	mov	r3, #0
   1faa4:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1faa8:	cmp	r0, #0
   1faac:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fab0:	ldr	r0, [r8, #128]	; 0x80
   1fab4:	ldr	r1, [r8, #180]	; 0xb4
   1fab8:	ldr	r2, [r8, #180]	; 0xb4
   1fabc:	and	r1, r1, #2
   1fac0:	eor	r1, r2, r1
   1fac4:	str	r1, [r8, #180]	; 0xb4
   1fac8:	ldr	r1, [r0, #4]
   1facc:	cmp	r1, #2
   1fad0:	bcc	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fad4:	ldr	r0, [r0]
   1fad8:	ldr	r4, [r0, #4]
   1fadc:	b	1fcc0 <myhtml_insertion_mode_in_body@@Base+0x101c>
   1fae0:	mov	r0, r8
   1fae4:	mov	r1, #25
   1fae8:	mov	r2, #1
   1faec:	mov	r3, #8
   1faf0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1faf4:	cmp	r0, #0
   1faf8:	beq	1fb20 <myhtml_insertion_mode_in_body@@Base+0xe7c>
   1fafc:	mov	r0, r8
   1fb00:	mov	r1, #0
   1fb04:	mov	r2, #0
   1fb08:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   1fb0c:	mov	r0, r8
   1fb10:	mov	r1, #25
   1fb14:	mov	r2, #1
   1fb18:	mov	r3, #0
   1fb1c:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   1fb20:	mov	r0, r8
   1fb24:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1fb28:	mov	r0, r8
   1fb2c:	mov	r1, r6
   1fb30:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1fb34:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1fb38:	mov	sl, #0
   1fb3c:	mov	r0, r8
   1fb40:	mov	r1, #128	; 0x80
   1fb44:	mov	r2, #1
   1fb48:	mov	r3, #0
   1fb4c:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fb50:	mov	r7, r0
   1fb54:	cmp	r0, #0
   1fb58:	bne	1fb68 <myhtml_insertion_mode_in_body@@Base+0xec4>
   1fb5c:	ldr	r0, [r8, #104]	; 0x68
   1fb60:	cmp	r0, #0
   1fb64:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fb68:	mov	r0, r8
   1fb6c:	mov	r1, #99	; 0x63
   1fb70:	mov	r2, #1
   1fb74:	mov	r3, #32
   1fb78:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1fb7c:	cmp	r0, #0
   1fb80:	beq	1fb90 <myhtml_insertion_mode_in_body@@Base+0xeec>
   1fb84:	mov	r0, r8
   1fb88:	mov	r1, r6
   1fb8c:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1fb90:	mov	r0, r8
   1fb94:	mov	r1, r6
   1fb98:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1fb9c:	cmp	r7, #0
   1fba0:	streq	r0, [r8, #104]	; 0x68
   1fba4:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fba8:	ldr	r0, [r8, #128]	; 0x80
   1fbac:	ldr	r1, [r0, #4]
   1fbb0:	cmp	r1, #2
   1fbb4:	bcc	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fbb8:	ldr	r0, [r0]
   1fbbc:	ldr	r0, [r0, #4]
   1fbc0:	ldr	r1, [r0, #4]
   1fbc4:	cmp	r1, #23
   1fbc8:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fbcc:	ldr	r1, [r0, #8]
   1fbd0:	cmp	r1, #1
   1fbd4:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fbd8:	ldr	r1, [r8, #180]	; 0xb4
   1fbdc:	tst	r1, #2
   1fbe0:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fbe4:	bl	121a8 <myhtml_tree_node_remove@plt>
   1fbe8:	mov	r0, r8
   1fbec:	mov	r1, #65	; 0x41
   1fbf0:	mov	r2, #1
   1fbf4:	mov	r3, #1
   1fbf8:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   1fbfc:	mov	r0, r8
   1fc00:	mov	r1, r6
   1fc04:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1fc08:	mov	r0, #19
   1fc0c:	str	r0, [r8, #168]	; 0xa8
   1fc10:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fc14:	mov	r0, r8
   1fc18:	mov	r1, #99	; 0x63
   1fc1c:	mov	r2, #1
   1fc20:	mov	r3, #32
   1fc24:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1fc28:	cmp	r0, #0
   1fc2c:	beq	1fc3c <myhtml_insertion_mode_in_body@@Base+0xf98>
   1fc30:	mov	r0, r8
   1fc34:	mov	r1, r6
   1fc38:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1fc3c:	mov	r0, r8
   1fc40:	bl	11a4c <myhtml_tree_current_node@plt>
   1fc44:	mov	r1, #85	; 0x55
   1fc48:	bl	11e9c <myhtml_is_html_node@plt>
   1fc4c:	cmp	r0, #0
   1fc50:	beq	1fc5c <myhtml_insertion_mode_in_body@@Base+0xfb8>
   1fc54:	mov	r0, r8
   1fc58:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   1fc5c:	mov	r0, r8
   1fc60:	mov	r1, r6
   1fc64:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1fc68:	mov	r0, r8
   1fc6c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   1fc70:	ldr	r0, [r8, #180]	; 0xb4
   1fc74:	ldr	r1, [r8, #180]	; 0xb4
   1fc78:	and	r0, r0, #2
   1fc7c:	eor	r0, r1, r0
   1fc80:	str	r0, [r8, #180]	; 0xb4
   1fc84:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fc88:	mov	sl, #0
   1fc8c:	mov	r0, r8
   1fc90:	mov	r1, #128	; 0x80
   1fc94:	mov	r2, #1
   1fc98:	mov	r3, #0
   1fc9c:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1fca0:	cmp	r0, #0
   1fca4:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fca8:	ldr	r0, [r8, #128]	; 0x80
   1fcac:	ldr	r1, [r0, #4]
   1fcb0:	cmp	r1, #0
   1fcb4:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fcb8:	ldr	r0, [r0]
   1fcbc:	ldr	r4, [r0]
   1fcc0:	ldr	r0, [r4, #32]
   1fcc4:	cmp	r0, #0
   1fcc8:	beq	2026c <myhtml_insertion_mode_in_body@@Base+0x15c8>
   1fccc:	ldr	r0, [r8, #8]
   1fcd0:	mov	r1, r6
   1fcd4:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1fcd8:	ldr	r1, [r4, #32]
   1fcdc:	ldr	r0, [r8, #8]
   1fce0:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1fce4:	ldr	r2, [r4, #32]
   1fce8:	ldr	r0, [r8, #8]
   1fcec:	ldr	r3, [r8, #44]	; 0x2c
   1fcf0:	mov	r1, r6
   1fcf4:	bl	11ac4 <myhtml_token_node_attr_copy_with_check@plt>
   1fcf8:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fcfc:	mov	r0, #69	; 0x45
   1fd00:	str	r0, [r6]
   1fd04:	mov	sl, #1
   1fd08:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fd0c:	mov	r0, r8
   1fd10:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1fd14:	mov	r0, r8
   1fd18:	mov	r1, r6
   1fd1c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1fd20:	mov	r0, r8
   1fd24:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   1fd28:	ldr	r0, [r8, #8]
   1fd2c:	mov	r1, r6
   1fd30:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1fd34:	ldr	r0, [r8, #8]
   1fd38:	mov	r1, #6
   1fd3c:	ldr	r2, [pc, #1328]	; 20274 <myhtml_insertion_mode_in_body@@Base+0x15d0>
   1fd40:	add	r2, pc, r2
   1fd44:	str	r2, [sp]
   1fd48:	str	r1, [sp, #4]
   1fd4c:	ldr	r2, [pc, #1316]	; 20278 <myhtml_insertion_mode_in_body@@Base+0x15d4>
   1fd50:	add	r2, pc, r2
   1fd54:	mov	r1, r6
   1fd58:	mov	r3, #4
   1fd5c:	bl	111f4 <myhtml_token_attr_match_case@plt>
   1fd60:	cmp	r0, #0
   1fd64:	bne	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1fd68:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   1fd6c:	ldr	r0, [r8, #128]	; 0x80
   1fd70:	ldr	r1, [r8, #180]	; 0xb4
   1fd74:	ldr	r2, [r8, #180]	; 0xb4
   1fd78:	and	r1, r1, #2
   1fd7c:	eor	r1, r2, r1
   1fd80:	str	r1, [r8, #180]	; 0xb4
   1fd84:	ldr	r4, [r0, #4]
   1fd88:	cmp	r4, #0
   1fd8c:	beq	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fd90:	ldr	r0, [r8, #28]
   1fd94:	ldr	r1, [r8, #128]	; 0x80
   1fd98:	ldr	r1, [r1]
   1fd9c:	add	r1, r1, r4, lsl #2
   1fda0:	ldr	r9, [r1, #-4]
   1fda4:	mov	r7, r9
   1fda8:	ldr	r1, [r7, #4]!
   1fdac:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1fdb0:	mov	r5, r0
   1fdb4:	mov	r0, r9
   1fdb8:	mov	r1, #77	; 0x4d
   1fdbc:	bl	11e9c <myhtml_is_html_node@plt>
   1fdc0:	cmp	r0, #0
   1fdc4:	bne	201e0 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1fdc8:	rsb	r4, r4, #2
   1fdcc:	ldr	r0, [r9, #8]
   1fdd0:	add	r1, r5, r0, lsl #2
   1fdd4:	ldrb	r1, [r1, #16]
   1fdd8:	tst	r1, #2
   1fddc:	beq	1fdf8 <myhtml_insertion_mode_in_body@@Base+0x1154>
   1fde0:	ldr	r1, [r7]
   1fde4:	cmp	r1, #7
   1fde8:	cmpne	r1, #99	; 0x63
   1fdec:	bne	1fe3c <myhtml_insertion_mode_in_body@@Base+0x1198>
   1fdf0:	cmp	r0, #1
   1fdf4:	bne	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fdf8:	cmp	r4, #1
   1fdfc:	beq	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fe00:	ldr	r0, [r8, #28]
   1fe04:	ldr	r1, [r8, #128]	; 0x80
   1fe08:	ldr	r1, [r1]
   1fe0c:	ldr	r9, [r1, -r4, lsl #2]
   1fe10:	mov	r7, r9
   1fe14:	ldr	r1, [r7, #4]!
   1fe18:	bl	11e24 <myhtml_tag_get_by_id@plt>
   1fe1c:	mov	r5, r0
   1fe20:	mov	r0, r9
   1fe24:	mov	r1, #77	; 0x4d
   1fe28:	bl	11e9c <myhtml_is_html_node@plt>
   1fe2c:	add	r4, r4, #1
   1fe30:	cmp	r0, #0
   1fe34:	beq	1fdcc <myhtml_insertion_mode_in_body@@Base+0x1128>
   1fe38:	b	201e0 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1fe3c:	cmp	r1, #42	; 0x2a
   1fe40:	beq	1fdf0 <myhtml_insertion_mode_in_body@@Base+0x114c>
   1fe44:	b	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   1fe48:	mov	r0, r8
   1fe4c:	mov	r1, #99	; 0x63
   1fe50:	mov	r2, #1
   1fe54:	mov	r3, #32
   1fe58:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1fe5c:	cmp	r0, #0
   1fe60:	beq	1fe70 <myhtml_insertion_mode_in_body@@Base+0x11cc>
   1fe64:	mov	r0, r8
   1fe68:	mov	r1, r6
   1fe6c:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1fe70:	mov	r0, r8
   1fe74:	bl	11a4c <myhtml_tree_current_node@plt>
   1fe78:	mov	r1, #85	; 0x55
   1fe7c:	bl	11e9c <myhtml_is_html_node@plt>
   1fe80:	cmp	r0, #0
   1fe84:	beq	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1fe88:	mov	r0, r8
   1fe8c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   1fe90:	b	1ff24 <myhtml_insertion_mode_in_body@@Base+0x1280>
   1fe94:	mov	r0, r8
   1fe98:	bl	11a4c <myhtml_tree_current_node@plt>
   1fe9c:	mov	r1, #85	; 0x55
   1fea0:	bl	11e9c <myhtml_is_html_node@plt>
   1fea4:	cmp	r0, #0
   1fea8:	beq	1ff1c <myhtml_insertion_mode_in_body@@Base+0x1278>
   1feac:	mov	r0, r8
   1feb0:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   1feb4:	b	1ff1c <myhtml_insertion_mode_in_body@@Base+0x1278>
   1feb8:	mov	r0, r8
   1febc:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1fec0:	mov	r0, r8
   1fec4:	mov	r1, #90	; 0x5a
   1fec8:	mov	r2, #1
   1fecc:	mov	r3, #8
   1fed0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1fed4:	cmp	r0, #0
   1fed8:	beq	1fef4 <myhtml_insertion_mode_in_body@@Base+0x1250>
   1fedc:	mov	r0, r8
   1fee0:	mov	r1, r6
   1fee4:	mov	r2, #90	; 0x5a
   1fee8:	bl	11cb0 <myhtml_tree_adoption_agency_algorithm@plt>
   1feec:	mov	r0, r8
   1fef0:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1fef4:	mov	r0, r8
   1fef8:	mov	r1, r6
   1fefc:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1ff00:	mov	r1, r0
   1ff04:	mov	r0, r8
   1ff08:	bl	11c2c <myhtml_tree_active_formatting_append_with_check@plt>
   1ff0c:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1ff10:	ldr	r0, [r8, #180]	; 0xb4
   1ff14:	tst	r0, #1
   1ff18:	bne	1ff3c <myhtml_insertion_mode_in_body@@Base+0x1298>
   1ff1c:	mov	r0, r8
   1ff20:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1ff24:	mov	r0, r8
   1ff28:	mov	r1, r6
   1ff2c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1ff30:	mov	r0, sl
   1ff34:	sub	sp, fp, #28
   1ff38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ff3c:	mov	r0, #4
   1ff40:	str	r0, [r8, #164]	; 0xa4
   1ff44:	b	200dc <myhtml_insertion_mode_in_body@@Base+0x1438>
   1ff48:	mov	r0, r8
   1ff4c:	mov	r1, #99	; 0x63
   1ff50:	mov	r2, #1
   1ff54:	mov	r3, #32
   1ff58:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   1ff5c:	cmp	r0, #0
   1ff60:	beq	1ff70 <myhtml_insertion_mode_in_body@@Base+0x12cc>
   1ff64:	mov	r0, r8
   1ff68:	mov	r1, r6
   1ff6c:	bl	11878 <myhtml_tree_tags_close_p@plt>
   1ff70:	mov	r0, r8
   1ff74:	mov	r1, r6
   1ff78:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1ff7c:	mov	r0, #6
   1ff80:	str	r0, [r8, #164]	; 0xa4
   1ff84:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1ff88:	mov	r0, r8
   1ff8c:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1ff90:	mov	r0, r8
   1ff94:	mov	r1, r6
   1ff98:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   1ff9c:	ldr	r0, [r8, #168]	; 0xa8
   1ffa0:	ldr	r1, [r8, #180]	; 0xb4
   1ffa4:	ldr	r2, [r8, #180]	; 0xb4
   1ffa8:	and	r1, r1, #2
   1ffac:	eor	r1, r2, r1
   1ffb0:	str	r1, [r8, #180]	; 0xb4
   1ffb4:	cmp	r0, #14
   1ffb8:	bhi	20260 <myhtml_insertion_mode_in_body@@Base+0x15bc>
   1ffbc:	mov	r1, #1
   1ffc0:	mov	r2, #29952	; 0x7500
   1ffc4:	tst	r2, r1, lsl r0
   1ffc8:	beq	20260 <myhtml_insertion_mode_in_body@@Base+0x15bc>
   1ffcc:	mov	r0, #16
   1ffd0:	str	r0, [r8, #168]	; 0xa8
   1ffd4:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   1ffd8:	mov	r0, r8
   1ffdc:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   1ffe0:	ldr	r0, [r8, #8]
   1ffe4:	mov	r1, r6
   1ffe8:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   1ffec:	mov	r0, r6
   1fff0:	bl	11644 <myhtml_token_adjust_svg_attributes@plt>
   1fff4:	mov	r0, r6
   1fff8:	bl	11fa4 <myhtml_token_adjust_foreign_attributes@plt>
   1fffc:	mov	r0, r8
   20000:	mov	r1, r6
   20004:	bl	1213c <myhtml_tree_node_insert_foreign_element@plt>
   20008:	mov	r1, #3
   2000c:	b	20120 <myhtml_insertion_mode_in_body@@Base+0x147c>
   20010:	ldrb	r0, [r8, #176]	; 0xb0
   20014:	tst	r0, #1
   20018:	bne	20044 <myhtml_insertion_mode_in_body@@Base+0x13a0>
   2001c:	mov	r0, r8
   20020:	mov	r1, #99	; 0x63
   20024:	mov	r2, #1
   20028:	mov	r3, #32
   2002c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   20030:	cmp	r0, #0
   20034:	beq	20044 <myhtml_insertion_mode_in_body@@Base+0x13a0>
   20038:	mov	r0, r8
   2003c:	mov	r1, r6
   20040:	bl	11878 <myhtml_tree_tags_close_p@plt>
   20044:	mov	r0, r8
   20048:	mov	r1, r6
   2004c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   20050:	mov	r0, #8
   20054:	str	r0, [r8, #168]	; 0xa8
   20058:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   2005c:	mov	r0, r8
   20060:	mov	r1, r6
   20064:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   20068:	ldr	r0, [r8, #168]	; 0xa8
   2006c:	ldr	r1, [r8, #180]	; 0xb4
   20070:	orr	r1, r1, #192	; 0xc0
   20074:	str	r1, [r8, #180]	; 0xb4
   20078:	mov	r1, #2
   2007c:	mov	r2, #7
   20080:	str	r1, [r8, #164]	; 0xa4
   20084:	str	r2, [r8, #168]	; 0xa8
   20088:	str	r0, [r8, #172]	; 0xac
   2008c:	b	1fc70 <myhtml_insertion_mode_in_body@@Base+0xfcc>
   20090:	mov	r0, r8
   20094:	mov	r1, #99	; 0x63
   20098:	mov	r2, #1
   2009c:	mov	r3, #32
   200a0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   200a4:	cmp	r0, #0
   200a8:	beq	200b8 <myhtml_insertion_mode_in_body@@Base+0x1414>
   200ac:	mov	r0, r8
   200b0:	mov	r1, r6
   200b4:	bl	11878 <myhtml_tree_tags_close_p@plt>
   200b8:	mov	r0, r8
   200bc:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   200c0:	mov	r0, #4
   200c4:	str	r0, [r8, #164]	; 0xa4
   200c8:	ldr	r0, [r8, #180]	; 0xb4
   200cc:	ldr	r1, [r8, #180]	; 0xb4
   200d0:	and	r0, r0, #2
   200d4:	eor	r0, r1, r0
   200d8:	str	r0, [r8, #180]	; 0xb4
   200dc:	mov	r0, r8
   200e0:	mov	r1, r6
   200e4:	bl	122e0 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   200e8:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   200ec:	mov	r0, r8
   200f0:	bl	11974 <myhtml_tree_active_formatting_reconstruction@plt>
   200f4:	ldr	r0, [r8, #8]
   200f8:	mov	r1, r6
   200fc:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   20100:	mov	r0, r6
   20104:	bl	11404 <myhtml_token_adjust_mathml_attributes@plt>
   20108:	mov	r0, r6
   2010c:	bl	11fa4 <myhtml_token_adjust_foreign_attributes@plt>
   20110:	mov	r0, r8
   20114:	mov	r1, r6
   20118:	bl	1213c <myhtml_tree_node_insert_foreign_element@plt>
   2011c:	mov	r1, #2
   20120:	str	r1, [r0, #8]
   20124:	ldr	r0, [r6, #48]	; 0x30
   20128:	tst	r0, #2
   2012c:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   20130:	mov	r0, r8
   20134:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   20138:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   2013c:	ldr	r0, [r8, #140]	; 0x8c
   20140:	ldr	r0, [r0, #4]
   20144:	cmp	r0, #0
   20148:	beq	2020c <myhtml_insertion_mode_in_body@@Base+0x1568>
   2014c:	mov	r0, r8
   20150:	mov	r1, r6
   20154:	sub	sp, fp, #28
   20158:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2015c:	b	20df0 <myhtml_insertion_mode_in_template@@Base>
   20160:	mov	r0, r8
   20164:	mov	r1, #36	; 0x24
   20168:	mov	r2, #1
   2016c:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   20170:	mov	r0, r8
   20174:	bl	11a4c <myhtml_tree_current_node@plt>
   20178:	mov	r1, #36	; 0x24
   2017c:	bl	11e9c <myhtml_is_html_node@plt>
   20180:	mov	r0, r8
   20184:	mov	r1, #36	; 0x24
   20188:	b	20250 <myhtml_insertion_mode_in_body@@Base+0x15ac>
   2018c:	ldr	r6, [r8, #104]	; 0x68
   20190:	mov	sl, #0
   20194:	str	sl, [r8, #104]	; 0x68
   20198:	cmp	r6, #0
   2019c:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   201a0:	mov	r0, r6
   201a4:	mov	r1, #8
   201a8:	bl	1111c <myhtml_tree_element_in_scope_by_node@plt>
   201ac:	cmp	r0, #0
   201b0:	beq	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   201b4:	mov	sl, #0
   201b8:	mov	r0, r8
   201bc:	mov	r1, #0
   201c0:	mov	r2, #0
   201c4:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   201c8:	mov	r0, r8
   201cc:	bl	11a4c <myhtml_tree_current_node@plt>
   201d0:	mov	r0, r8
   201d4:	mov	r1, r6
   201d8:	bl	11698 <myhtml_tree_open_elements_remove@plt>
   201dc:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   201e0:	mov	r0, r8
   201e4:	mov	r1, #77	; 0x4d
   201e8:	mov	r2, #1
   201ec:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   201f0:	mov	r0, r8
   201f4:	bl	11a4c <myhtml_tree_current_node@plt>
   201f8:	mov	r1, #77	; 0x4d
   201fc:	bl	11e9c <myhtml_is_html_node@plt>
   20200:	mov	r0, r8
   20204:	mov	r1, #77	; 0x4d
   20208:	b	20250 <myhtml_insertion_mode_in_body@@Base+0x15ac>
   2020c:	ldr	r0, [r8, #128]	; 0x80
   20210:	mvn	r1, #0
   20214:	add	r1, r1, #1
   20218:	ldr	r2, [r0, #4]
   2021c:	cmp	r1, r2
   20220:	bcc	20214 <myhtml_insertion_mode_in_body@@Base+0x1570>
   20224:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   20228:	mov	r0, r8
   2022c:	mov	r1, #44	; 0x2c
   20230:	mov	r2, #1
   20234:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   20238:	mov	r0, r8
   2023c:	bl	11a4c <myhtml_tree_current_node@plt>
   20240:	mov	r1, #44	; 0x2c
   20244:	bl	11e9c <myhtml_is_html_node@plt>
   20248:	mov	r0, r8
   2024c:	mov	r1, #44	; 0x2c
   20250:	mov	r2, #1
   20254:	mov	r3, #0
   20258:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   2025c:	b	1f0d0 <myhtml_insertion_mode_in_body@@Base+0x42c>
   20260:	mov	r0, #15
   20264:	str	r0, [r8, #168]	; 0xa8
   20268:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   2026c:	str	r6, [r4, #32]
   20270:	b	1ff30 <myhtml_insertion_mode_in_body@@Base+0x128c>
   20274:	andeq	sp, sp, r7, rrx
   20278:	strdeq	r9, [r1], -r3

0002027c <myhtml_insertion_mode_in_head@@Base>:
   2027c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20280:	add	fp, sp, #24
   20284:	sub	sp, sp, #8
   20288:	mov	r6, r1
   2028c:	mov	r5, r0
   20290:	ldr	r0, [r1]
   20294:	ldr	r1, [r1, #48]	; 0x30
   20298:	tst	r1, #1
   2029c:	bne	204ec <myhtml_insertion_mode_in_head@@Base+0x270>
   202a0:	sub	r0, r0, #1
   202a4:	cmp	r0, #133	; 0x85
   202a8:	bhi	205dc <myhtml_insertion_mode_in_head@@Base+0x360>
   202ac:	mov	r4, #0
   202b0:	add	r1, pc, #4
   202b4:	ldr	r0, [r1, r0, lsl #2]
   202b8:	add	pc, r1, r0
   202bc:	strdeq	r0, [r0], -r4
   202c0:	andeq	r0, r0, r8, lsr r3
   202c4:	andeq	r0, r0, r4, asr r4
   202c8:	andeq	r0, r0, r0, lsr #6
   202cc:	andeq	r0, r0, r0, lsr #6
   202d0:	andeq	r0, r0, r0, lsr #6
   202d4:	andeq	r0, r0, r0, lsr #6
   202d8:	andeq	r0, r0, r0, lsr #6
   202dc:	andeq	r0, r0, r0, lsr #6
   202e0:	andeq	r0, r0, r0, lsr #6
   202e4:	andeq	r0, r0, r0, lsr #6
   202e8:	andeq	r0, r0, r0, lsr #6
   202ec:	andeq	r0, r0, r0, lsr #6
   202f0:	andeq	r0, r0, r0, lsr #6
   202f4:	andeq	r0, r0, r8, lsl r2
   202f8:	andeq	r0, r0, r8, lsl r2
   202fc:	andeq	r0, r0, r0, lsr #6
   20300:	andeq	r0, r0, r0, lsr #6
   20304:	andeq	r0, r0, r8, lsl r2
   20308:	andeq	r0, r0, r0, lsr #6
   2030c:	andeq	r0, r0, r0, lsr #6
   20310:	andeq	r0, r0, r0, lsr #6
   20314:	andeq	r0, r0, r0, lsr #6
   20318:	andeq	r0, r0, r0, lsr #6
   2031c:	andeq	r0, r0, r0, lsr #6
   20320:	andeq	r0, r0, r0, lsr #6
   20324:	andeq	r0, r0, r0, lsr #6
   20328:	andeq	r0, r0, r0, lsr #6
   2032c:	andeq	r0, r0, r0, lsr #6
   20330:	andeq	r0, r0, r0, lsr #6
   20334:	andeq	r0, r0, r0, lsr #6
   20338:	andeq	r0, r0, r0, lsr #6
   2033c:	andeq	r0, r0, r0, lsr #6
   20340:	andeq	r0, r0, r0, lsr #6
   20344:	andeq	r0, r0, r0, lsr #6
   20348:	andeq	r0, r0, r0, lsr #6
   2034c:	andeq	r0, r0, r0, lsr #6
   20350:	andeq	r0, r0, r0, lsr #6
   20354:	andeq	r0, r0, r0, lsr #6
   20358:	andeq	r0, r0, r0, lsr #6
   2035c:	andeq	r0, r0, r0, lsr #6
   20360:	andeq	r0, r0, r0, lsr #6
   20364:	andeq	r0, r0, r0, lsr #6
   20368:	andeq	r0, r0, r0, lsr #6
   2036c:	andeq	r0, r0, r0, lsr #6
   20370:	andeq	r0, r0, r0, lsr #6
   20374:	andeq	r0, r0, r0, lsr #6
   20378:	andeq	r0, r0, r0, lsr #6
   2037c:	andeq	r0, r0, r0, lsr #6
   20380:	andeq	r0, r0, r0, lsr #6
   20384:	andeq	r0, r0, r0, lsr #6
   20388:	andeq	r0, r0, r0, lsr #6
   2038c:	andeq	r0, r0, r0, lsr #6
   20390:	andeq	r0, r0, r0, lsr #6
   20394:	andeq	r0, r0, r0, lsr #6
   20398:	andeq	r0, r0, r0, lsr #6
   2039c:	andeq	r0, r0, r0, lsr #6
   203a0:	andeq	r0, r0, r0, lsr #6
   203a4:	andeq	r0, r0, r0, lsr #6
   203a8:	andeq	r0, r0, r0, lsr #6
   203ac:	andeq	r0, r0, r4, asr r4
   203b0:	andeq	r0, r0, r0, lsr #6
   203b4:	andeq	r0, r0, r0, lsr #6
   203b8:	andeq	r0, r0, r0, lsr #6
   203bc:	andeq	r0, r0, r0, asr r3
   203c0:	andeq	r0, r0, r0, lsr #6
   203c4:	andeq	r0, r0, r0, lsr #6
   203c8:	andeq	r0, r0, r0, lsr #6
   203cc:	andeq	r0, r0, r0, lsr #6
   203d0:	andeq	r0, r0, r0, lsr #6
   203d4:	andeq	r0, r0, r0, lsr #6
   203d8:	andeq	r0, r0, r0, lsr #6
   203dc:	andeq	r0, r0, r0, lsr #6
   203e0:	andeq	r0, r0, r0, lsr #6
   203e4:	andeq	r0, r0, r0, lsr #6
   203e8:	andeq	r0, r0, r0, lsr #6
   203ec:	andeq	r0, r0, r0, lsr #6
   203f0:	andeq	r0, r0, r8, lsl r2
   203f4:	andeq	r0, r0, r0, lsr #6
   203f8:	andeq	r0, r0, r0, lsr #6
   203fc:	andeq	r0, r0, r0, lsr #6
   20400:	andeq	r0, r0, r0, lsr #6
   20404:	andeq	r0, r0, r0, lsr #6
   20408:	andeq	r0, r0, r0, lsr #6
   2040c:	andeq	r0, r0, r0, lsr #6
   20410:	andeq	r0, r0, r8, lsl r2
   20414:	andeq	r0, r0, r0, lsr #6
   20418:	andeq	r0, r0, r0, lsr #6
   2041c:	andeq	r0, r0, r0, lsr #6
   20420:	andeq	r0, r0, r0, lsr #6
   20424:	andeq	r0, r0, r0, lsr #6
   20428:	andeq	r0, r0, r0, ror #5
   2042c:	andeq	r0, r0, r4, ror #6
   20430:	andeq	r0, r0, r0, lsr #6
   20434:	andeq	r0, r0, r0, lsr #6
   20438:	andeq	r0, r0, r0, lsr #6
   2043c:	andeq	r0, r0, r0, lsr #6
   20440:	andeq	r0, r0, r0, lsr #6
   20444:	andeq	r0, r0, r0, lsr #6
   20448:	andeq	r0, r0, r0, lsr #6
   2044c:	andeq	r0, r0, r0, lsr #6
   20450:	andeq	r0, r0, r0, lsr #6
   20454:	andeq	r0, r0, r0, lsr #6
   20458:	andeq	r0, r0, r0, lsr #6
   2045c:	andeq	r0, r0, r0, lsr #6
   20460:	andeq	r0, r0, r0, lsr #6
   20464:	andeq	r0, r0, r0, lsr #6
   20468:	andeq	r0, r0, r0, lsr #6
   2046c:	andeq	r0, r0, r0, lsr #6
   20470:	andeq	r0, r0, r0, lsr #6
   20474:	andeq	r0, r0, r0, lsr #6
   20478:	andeq	r0, r0, r8, lsl #7
   2047c:	andeq	r0, r0, r0, lsr #6
   20480:	andeq	r0, r0, r0, lsr #6
   20484:	andeq	r0, r0, r0, lsr #6
   20488:	andeq	r0, r0, r0, lsr #6
   2048c:	andeq	r0, r0, r0, lsr #6
   20490:	andeq	r0, r0, r0, lsr #6
   20494:	andeq	r0, r0, r0, lsr #6
   20498:	andeq	r0, r0, r0, ror #5
   2049c:	andeq	r0, r0, r0, lsr #6
   204a0:	andeq	r0, r0, r0, lsr #6
   204a4:	andeq	r0, r0, r0, lsr #6
   204a8:	andeq	r0, r0, r0, lsr #6
   204ac:	andeq	r0, r0, r0, lsr #6
   204b0:	andeq	r0, r0, r0, lsr #6
   204b4:	andeq	r0, r0, r0, lsr #6
   204b8:	andeq	r0, r0, r8, ror #7
   204bc:	andeq	r0, r0, r0, lsr #6
   204c0:	andeq	r0, r0, r0, lsr #6
   204c4:	andeq	r0, r0, r0, lsr #6
   204c8:	andeq	r0, r0, r0, lsr #6
   204cc:	andeq	r0, r0, r0, lsr #6
   204d0:	andeq	r0, r0, r0, lsr r4
   204d4:	mov	r0, r5
   204d8:	mov	r1, r6
   204dc:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   204e0:	mov	r0, r5
   204e4:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   204e8:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   204ec:	mov	r4, #0
   204f0:	cmp	r0, #64	; 0x40
   204f4:	bgt	20520 <myhtml_insertion_mode_in_head@@Base+0x2a4>
   204f8:	sub	r1, r0, #23
   204fc:	cmp	r1, #2
   20500:	bcc	205dc <myhtml_insertion_mode_in_head@@Base+0x360>
   20504:	cmp	r0, #61	; 0x3d
   20508:	bne	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   2050c:	mov	r0, r5
   20510:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   20514:	mov	r0, #5
   20518:	str	r0, [r5, #168]	; 0xa8
   2051c:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   20520:	cmp	r0, #65	; 0x41
   20524:	beq	205dc <myhtml_insertion_mode_in_head@@Base+0x360>
   20528:	cmp	r0, #128	; 0x80
   2052c:	bne	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   20530:	mov	r4, #0
   20534:	mov	r0, r5
   20538:	mov	r1, #128	; 0x80
   2053c:	mov	r2, #1
   20540:	mov	r3, #0
   20544:	bl	1117c <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   20548:	cmp	r0, #0
   2054c:	beq	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   20550:	mov	r4, #0
   20554:	mov	r0, r5
   20558:	mov	r1, #0
   2055c:	mov	r2, #0
   20560:	bl	112d8 <myhtml_tree_generate_all_implied_end_tags@plt>
   20564:	mov	r0, r5
   20568:	bl	11a4c <myhtml_tree_current_node@plt>
   2056c:	mov	r0, r5
   20570:	mov	r1, #128	; 0x80
   20574:	mov	r2, #1
   20578:	mov	r3, #0
   2057c:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   20580:	mov	r0, r5
   20584:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   20588:	mov	r0, r5
   2058c:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   20590:	mov	r0, r5
   20594:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20598:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   2059c:	mov	r0, r5
   205a0:	mov	r1, r6
   205a4:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   205a8:	mov	r0, #4
   205ac:	b	206fc <myhtml_insertion_mode_in_head@@Base+0x480>
   205b0:	ldr	r0, [r6, #48]	; 0x30
   205b4:	tst	r0, #8
   205b8:	bne	2071c <myhtml_insertion_mode_in_head@@Base+0x4a0>
   205bc:	mov	r0, r5
   205c0:	mov	r1, r6
   205c4:	bl	11380 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   205c8:	cmp	r0, #0
   205cc:	beq	205dc <myhtml_insertion_mode_in_head@@Base+0x360>
   205d0:	mov	r1, r0
   205d4:	mov	r0, r5
   205d8:	bl	1141c <myhtml_tree_node_insert_text@plt>
   205dc:	mov	r0, r5
   205e0:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   205e4:	mov	r0, #5
   205e8:	str	r0, [r5, #168]	; 0xa8
   205ec:	mov	r4, #1
   205f0:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   205f4:	mov	r4, #0
   205f8:	mov	r0, r5
   205fc:	mov	r1, r6
   20600:	mov	r2, #0
   20604:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   20608:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   2060c:	mov	r0, r5
   20610:	mov	r1, r6
   20614:	sub	sp, fp, #24
   20618:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2061c:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   20620:	ldr	r7, [r5, #180]	; 0xb4
   20624:	mov	r0, r5
   20628:	mov	r1, r6
   2062c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   20630:	tst	r7, #1
   20634:	bne	205a8 <myhtml_insertion_mode_in_head@@Base+0x32c>
   20638:	mov	r0, #4
   2063c:	str	r0, [r5, #168]	; 0xa8
   20640:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   20644:	mov	r4, #0
   20648:	add	r2, sp, #4
   2064c:	mov	r0, r5
   20650:	mov	r1, #0
   20654:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   20658:	mov	r8, r0
   2065c:	mov	r0, r5
   20660:	bl	11470 <myhtml_tree_node_create@plt>
   20664:	mov	r7, r0
   20668:	str	r6, [r0, #32]
   2066c:	mov	r0, #112	; 0x70
   20670:	mov	r1, #1
   20674:	mov	r2, #3
   20678:	str	r2, [r7]
   2067c:	stmib	r7, {r0, r1}
   20680:	ldr	r2, [sp, #4]
   20684:	mov	r0, r8
   20688:	mov	r1, r7
   2068c:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   20690:	mov	r0, r5
   20694:	mov	r1, r7
   20698:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2069c:	mov	r0, #5
   206a0:	b	206fc <myhtml_insertion_mode_in_head@@Base+0x480>
   206a4:	mov	r0, r5
   206a8:	mov	r1, r6
   206ac:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   206b0:	ldr	r0, [r5]
   206b4:	ldr	r1, [r0, #36]	; 0x24
   206b8:	mov	r0, r5
   206bc:	bl	11548 <myhtml_tree_active_formatting_append@plt>
   206c0:	mov	r0, #17
   206c4:	str	r0, [r5, #168]	; 0xa8
   206c8:	ldr	r0, [r5, #180]	; 0xb4
   206cc:	ldr	r1, [r5, #180]	; 0xb4
   206d0:	and	r0, r0, #2
   206d4:	eor	r0, r1, r0
   206d8:	str	r0, [r5, #180]	; 0xb4
   206dc:	mov	r0, r5
   206e0:	mov	r1, #17
   206e4:	bl	11440 <myhtml_tree_template_insertion_append@plt>
   206e8:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>
   206ec:	mov	r0, r5
   206f0:	mov	r1, r6
   206f4:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   206f8:	mov	r0, #2
   206fc:	str	r0, [r5, #164]	; 0xa4
   20700:	ldr	r0, [r5, #168]	; 0xa8
   20704:	mov	r1, #7
   20708:	str	r1, [r5, #168]	; 0xa8
   2070c:	str	r0, [r5, #172]	; 0xac
   20710:	mov	r0, r4
   20714:	sub	sp, fp, #24
   20718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2071c:	mov	r0, r5
   20720:	mov	r1, r6
   20724:	bl	1141c <myhtml_tree_node_insert_text@plt>
   20728:	b	20710 <myhtml_insertion_mode_in_head@@Base+0x494>

0002072c <myhtml_insertion_mode_in_head_noscript@@Base>:
   2072c:	push	{r4, r5, fp, lr}
   20730:	add	fp, sp, #8
   20734:	mov	r4, r0
   20738:	ldr	r0, [r1]
   2073c:	ldr	r2, [r1, #48]	; 0x30
   20740:	tst	r2, #1
   20744:	bne	20950 <myhtml_insertion_mode_in_head_noscript@@Base+0x224>
   20748:	sub	r0, r0, #1
   2074c:	cmp	r0, #119	; 0x77
   20750:	bhi	20988 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   20754:	mov	r5, #0
   20758:	add	r2, pc, #4
   2075c:	ldr	r0, [r2, r0, lsl #2]
   20760:	add	pc, r2, r0
   20764:	andeq	r0, r0, r8, lsl r2
   20768:	andeq	r0, r0, r0, ror #3
   2076c:	andeq	r0, r0, r8, lsr r2
   20770:	andeq	r0, r0, r4, lsr #4
   20774:	andeq	r0, r0, r4, lsr #4
   20778:	andeq	r0, r0, r4, lsr #4
   2077c:	andeq	r0, r0, r4, lsr #4
   20780:	andeq	r0, r0, r4, lsr #4
   20784:	andeq	r0, r0, r4, lsr #4
   20788:	andeq	r0, r0, r4, lsr #4
   2078c:	andeq	r0, r0, r4, lsr #4
   20790:	andeq	r0, r0, r4, lsr #4
   20794:	andeq	r0, r0, r4, lsr #4
   20798:	andeq	r0, r0, r4, lsr #4
   2079c:	andeq	r0, r0, r4, lsr #4
   207a0:	andeq	r0, r0, r0, ror #3
   207a4:	andeq	r0, r0, r4, lsr #4
   207a8:	andeq	r0, r0, r4, lsr #4
   207ac:	andeq	r0, r0, r0, ror #3
   207b0:	andeq	r0, r0, r4, lsr #4
   207b4:	andeq	r0, r0, r4, lsr #4
   207b8:	andeq	r0, r0, r4, lsr #4
   207bc:	andeq	r0, r0, r4, lsr #4
   207c0:	andeq	r0, r0, r4, lsr #4
   207c4:	andeq	r0, r0, r4, lsr #4
   207c8:	andeq	r0, r0, r4, lsr #4
   207cc:	andeq	r0, r0, r4, lsr #4
   207d0:	andeq	r0, r0, r4, lsr #4
   207d4:	andeq	r0, r0, r4, lsr #4
   207d8:	andeq	r0, r0, r4, lsr #4
   207dc:	andeq	r0, r0, r4, lsr #4
   207e0:	andeq	r0, r0, r4, lsr #4
   207e4:	andeq	r0, r0, r4, lsr #4
   207e8:	andeq	r0, r0, r4, lsr #4
   207ec:	andeq	r0, r0, r4, lsr #4
   207f0:	andeq	r0, r0, r4, lsr #4
   207f4:	andeq	r0, r0, r4, lsr #4
   207f8:	andeq	r0, r0, r4, lsr #4
   207fc:	andeq	r0, r0, r4, lsr #4
   20800:	andeq	r0, r0, r4, lsr #4
   20804:	andeq	r0, r0, r4, lsr #4
   20808:	andeq	r0, r0, r4, lsr #4
   2080c:	andeq	r0, r0, r4, lsr #4
   20810:	andeq	r0, r0, r4, lsr #4
   20814:	andeq	r0, r0, r4, lsr #4
   20818:	andeq	r0, r0, r4, lsr #4
   2081c:	andeq	r0, r0, r4, lsr #4
   20820:	andeq	r0, r0, r4, lsr #4
   20824:	andeq	r0, r0, r4, lsr #4
   20828:	andeq	r0, r0, r4, lsr #4
   2082c:	andeq	r0, r0, r4, lsr #4
   20830:	andeq	r0, r0, r4, lsr #4
   20834:	andeq	r0, r0, r4, lsr #4
   20838:	andeq	r0, r0, r4, lsr #4
   2083c:	andeq	r0, r0, r4, lsr #4
   20840:	andeq	r0, r0, r4, lsr #4
   20844:	andeq	r0, r0, r4, lsr #4
   20848:	andeq	r0, r0, r4, lsr #4
   2084c:	andeq	r0, r0, r4, lsr #4
   20850:	andeq	r0, r0, r4, lsr #4
   20854:	andeq	r0, r0, r8, lsr r2
   20858:	andeq	r0, r0, r4, lsr #4
   2085c:	andeq	r0, r0, r4, lsr #4
   20860:	andeq	r0, r0, r4, lsr #4
   20864:	andeq	r0, r0, r0, asr #4
   20868:	andeq	r0, r0, r4, lsr #4
   2086c:	andeq	r0, r0, r4, lsr #4
   20870:	andeq	r0, r0, r4, lsr #4
   20874:	andeq	r0, r0, r4, lsr #4
   20878:	andeq	r0, r0, r4, lsr #4
   2087c:	andeq	r0, r0, r4, lsr #4
   20880:	andeq	r0, r0, r4, lsr #4
   20884:	andeq	r0, r0, r4, lsr #4
   20888:	andeq	r0, r0, r4, lsr #4
   2088c:	andeq	r0, r0, r4, lsr #4
   20890:	andeq	r0, r0, r4, lsr #4
   20894:	andeq	r0, r0, r4, lsr #4
   20898:	andeq	r0, r0, r0, ror #3
   2089c:	andeq	r0, r0, r4, lsr #4
   208a0:	andeq	r0, r0, r4, lsr #4
   208a4:	andeq	r0, r0, r4, lsr #4
   208a8:	andeq	r0, r0, r4, lsr #4
   208ac:	andeq	r0, r0, r4, lsr #4
   208b0:	andeq	r0, r0, r4, lsr #4
   208b4:	andeq	r0, r0, r4, lsr #4
   208b8:	andeq	r0, r0, r0, ror #3
   208bc:	andeq	r0, r0, r4, lsr #4
   208c0:	andeq	r0, r0, r4, lsr #4
   208c4:	andeq	r0, r0, r4, lsr #4
   208c8:	andeq	r0, r0, r4, lsr #4
   208cc:	andeq	r0, r0, r4, lsr #4
   208d0:	andeq	r0, r0, r0, ror #3
   208d4:	andeq	r0, r0, r8, lsr r2
   208d8:	andeq	r0, r0, r4, lsr #4
   208dc:	andeq	r0, r0, r4, lsr #4
   208e0:	andeq	r0, r0, r4, lsr #4
   208e4:	andeq	r0, r0, r4, lsr #4
   208e8:	andeq	r0, r0, r4, lsr #4
   208ec:	andeq	r0, r0, r4, lsr #4
   208f0:	andeq	r0, r0, r4, lsr #4
   208f4:	andeq	r0, r0, r4, lsr #4
   208f8:	andeq	r0, r0, r4, lsr #4
   208fc:	andeq	r0, r0, r4, lsr #4
   20900:	andeq	r0, r0, r4, lsr #4
   20904:	andeq	r0, r0, r4, lsr #4
   20908:	andeq	r0, r0, r4, lsr #4
   2090c:	andeq	r0, r0, r4, lsr #4
   20910:	andeq	r0, r0, r4, lsr #4
   20914:	andeq	r0, r0, r4, lsr #4
   20918:	andeq	r0, r0, r4, lsr #4
   2091c:	andeq	r0, r0, r4, lsr #4
   20920:	andeq	r0, r0, r4, lsr #4
   20924:	andeq	r0, r0, r4, lsr #4
   20928:	andeq	r0, r0, r4, lsr #4
   2092c:	andeq	r0, r0, r4, lsr #4
   20930:	andeq	r0, r0, r4, lsr #4
   20934:	andeq	r0, r0, r4, lsr #4
   20938:	andeq	r0, r0, r4, lsr #4
   2093c:	andeq	r0, r0, r4, lsr #4
   20940:	andeq	r0, r0, r0, ror #3
   20944:	mov	r0, r4
   20948:	pop	{r4, r5, fp, lr}
   2094c:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   20950:	cmp	r0, #24
   20954:	beq	20988 <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   20958:	mov	r5, #0
   2095c:	cmp	r0, #93	; 0x5d
   20960:	bne	2099c <myhtml_insertion_mode_in_head_noscript@@Base+0x270>
   20964:	mov	r0, r4
   20968:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2096c:	mov	r0, #3
   20970:	str	r0, [r4, #168]	; 0xa8
   20974:	mov	r0, r5
   20978:	pop	{r4, r5, fp, pc}
   2097c:	ldr	r0, [r1, #48]	; 0x30
   20980:	tst	r0, #8
   20984:	bne	20944 <myhtml_insertion_mode_in_head_noscript@@Base+0x218>
   20988:	mov	r0, r4
   2098c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   20990:	mov	r0, #3
   20994:	str	r0, [r4, #168]	; 0xa8
   20998:	mov	r5, #1
   2099c:	mov	r0, r5
   209a0:	pop	{r4, r5, fp, pc}
   209a4:	mov	r0, r4
   209a8:	pop	{r4, r5, fp, lr}
   209ac:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>

000209b0 <myhtml_insertion_mode_after_head@@Base>:
   209b0:	push	{r4, r5, r6, sl, fp, lr}
   209b4:	add	fp, sp, #16
   209b8:	mov	r6, r1
   209bc:	mov	r4, r0
   209c0:	ldr	r0, [r1]
   209c4:	ldr	r1, [r1, #48]	; 0x30
   209c8:	tst	r1, #1
   209cc:	bne	20c30 <myhtml_insertion_mode_after_head@@Base+0x280>
   209d0:	sub	r0, r0, #1
   209d4:	cmp	r0, #133	; 0x85
   209d8:	bhi	20c50 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   209dc:	mov	r5, #0
   209e0:	add	r1, pc, #4
   209e4:	ldr	r0, [r1, r0, lsl #2]
   209e8:	add	pc, r1, r0
   209ec:	muleq	r0, ip, r2
   209f0:	andeq	r0, r0, ip, asr #5
   209f4:	andeq	r0, r0, r4, lsl #5
   209f8:	andeq	r0, r0, r4, ror #4
   209fc:	andeq	r0, r0, r4, ror #4
   20a00:	andeq	r0, r0, r4, ror #4
   20a04:	andeq	r0, r0, r4, ror #4
   20a08:	andeq	r0, r0, r4, ror #4
   20a0c:	andeq	r0, r0, r4, ror #4
   20a10:	andeq	r0, r0, r4, ror #4
   20a14:	andeq	r0, r0, r4, ror #4
   20a18:	andeq	r0, r0, r4, ror #4
   20a1c:	andeq	r0, r0, r4, ror #4
   20a20:	andeq	r0, r0, r4, ror #4
   20a24:	andeq	r0, r0, r8, lsl r2
   20a28:	andeq	r0, r0, r8, lsl r2
   20a2c:	andeq	r0, r0, r4, ror #4
   20a30:	andeq	r0, r0, r4, ror #4
   20a34:	andeq	r0, r0, r8, lsl r2
   20a38:	andeq	r0, r0, r4, ror #4
   20a3c:	andeq	r0, r0, r4, ror #4
   20a40:	andeq	r0, r0, r4, ror #4
   20a44:	andeq	r0, r0, r8, ror #5
   20a48:	andeq	r0, r0, r4, ror #4
   20a4c:	andeq	r0, r0, r4, ror #4
   20a50:	andeq	r0, r0, r4, ror #4
   20a54:	andeq	r0, r0, r4, ror #4
   20a58:	andeq	r0, r0, r4, ror #4
   20a5c:	andeq	r0, r0, r4, ror #4
   20a60:	andeq	r0, r0, r4, ror #4
   20a64:	andeq	r0, r0, r4, ror #4
   20a68:	andeq	r0, r0, r4, ror #4
   20a6c:	andeq	r0, r0, r4, ror #4
   20a70:	andeq	r0, r0, r4, ror #4
   20a74:	andeq	r0, r0, r4, ror #4
   20a78:	andeq	r0, r0, r4, ror #4
   20a7c:	andeq	r0, r0, r4, ror #4
   20a80:	andeq	r0, r0, r4, ror #4
   20a84:	andeq	r0, r0, r4, ror #4
   20a88:	andeq	r0, r0, r4, ror #4
   20a8c:	andeq	r0, r0, r4, ror #4
   20a90:	andeq	r0, r0, r4, ror #4
   20a94:	andeq	r0, r0, r4, ror #4
   20a98:	andeq	r0, r0, r4, ror #4
   20a9c:	andeq	r0, r0, r4, ror #4
   20aa0:	andeq	r0, r0, r4, ror #4
   20aa4:	andeq	r0, r0, r4, ror #4
   20aa8:	andeq	r0, r0, r4, ror #4
   20aac:	andeq	r0, r0, r4, ror #4
   20ab0:	andeq	r0, r0, r4, ror #4
   20ab4:	andeq	r0, r0, r4, ror #4
   20ab8:	andeq	r0, r0, r4, ror #4
   20abc:	andeq	r0, r0, r4, ror #4
   20ac0:	andeq	r0, r0, ip, lsl r3
   20ac4:	andeq	r0, r0, r4, ror #4
   20ac8:	andeq	r0, r0, r4, ror #4
   20acc:	andeq	r0, r0, r4, ror #4
   20ad0:	andeq	r0, r0, r4, ror #4
   20ad4:	andeq	r0, r0, r4, ror #4
   20ad8:	andeq	r0, r0, r4, ror #4
   20adc:	andeq	r0, r0, r4, lsl #5
   20ae0:	andeq	r0, r0, r4, ror #4
   20ae4:	andeq	r0, r0, r4, ror #4
   20ae8:	andeq	r0, r0, r4, ror #4
   20aec:	andeq	r0, r0, r8, lsr r3
   20af0:	andeq	r0, r0, r4, ror #4
   20af4:	andeq	r0, r0, r4, ror #4
   20af8:	andeq	r0, r0, r4, ror #4
   20afc:	andeq	r0, r0, r4, ror #4
   20b00:	andeq	r0, r0, r4, ror #4
   20b04:	andeq	r0, r0, r4, ror #4
   20b08:	andeq	r0, r0, r4, ror #4
   20b0c:	andeq	r0, r0, r4, ror #4
   20b10:	andeq	r0, r0, r4, ror #4
   20b14:	andeq	r0, r0, r4, ror #4
   20b18:	andeq	r0, r0, r4, ror #4
   20b1c:	andeq	r0, r0, r4, ror #4
   20b20:	andeq	r0, r0, r8, lsl r2
   20b24:	andeq	r0, r0, r4, ror #4
   20b28:	andeq	r0, r0, r4, ror #4
   20b2c:	andeq	r0, r0, r4, ror #4
   20b30:	andeq	r0, r0, r4, ror #4
   20b34:	andeq	r0, r0, r4, ror #4
   20b38:	andeq	r0, r0, r4, ror #4
   20b3c:	andeq	r0, r0, r4, ror #4
   20b40:	andeq	r0, r0, r8, lsl r2
   20b44:	andeq	r0, r0, r4, ror #4
   20b48:	andeq	r0, r0, r4, ror #4
   20b4c:	andeq	r0, r0, r4, ror #4
   20b50:	andeq	r0, r0, r4, ror #4
   20b54:	andeq	r0, r0, r4, ror #4
   20b58:	andeq	r0, r0, r8, lsl r2
   20b5c:	andeq	r0, r0, r4, ror #4
   20b60:	andeq	r0, r0, r4, ror #4
   20b64:	andeq	r0, r0, r4, ror #4
   20b68:	andeq	r0, r0, r4, ror #4
   20b6c:	andeq	r0, r0, r4, ror #4
   20b70:	andeq	r0, r0, r4, ror #4
   20b74:	andeq	r0, r0, r4, ror #4
   20b78:	andeq	r0, r0, r4, ror #4
   20b7c:	andeq	r0, r0, r4, ror #4
   20b80:	andeq	r0, r0, r4, ror #4
   20b84:	andeq	r0, r0, r4, ror #4
   20b88:	andeq	r0, r0, r4, ror #4
   20b8c:	andeq	r0, r0, r4, ror #4
   20b90:	andeq	r0, r0, r4, ror #4
   20b94:	andeq	r0, r0, r4, ror #4
   20b98:	andeq	r0, r0, r4, ror #4
   20b9c:	andeq	r0, r0, r4, ror #4
   20ba0:	andeq	r0, r0, r4, ror #4
   20ba4:	andeq	r0, r0, r4, ror #4
   20ba8:	andeq	r0, r0, r8, lsl r2
   20bac:	andeq	r0, r0, r4, ror #4
   20bb0:	andeq	r0, r0, r4, ror #4
   20bb4:	andeq	r0, r0, r4, ror #4
   20bb8:	andeq	r0, r0, r4, ror #4
   20bbc:	andeq	r0, r0, r4, ror #4
   20bc0:	andeq	r0, r0, r4, ror #4
   20bc4:	andeq	r0, r0, r4, ror #4
   20bc8:	andeq	r0, r0, r8, lsl r2
   20bcc:	andeq	r0, r0, r4, ror #4
   20bd0:	andeq	r0, r0, r4, ror #4
   20bd4:	andeq	r0, r0, r4, ror #4
   20bd8:	andeq	r0, r0, r4, ror #4
   20bdc:	andeq	r0, r0, r4, ror #4
   20be0:	andeq	r0, r0, r4, ror #4
   20be4:	andeq	r0, r0, r4, ror #4
   20be8:	andeq	r0, r0, r8, lsl r2
   20bec:	andeq	r0, r0, r4, ror #4
   20bf0:	andeq	r0, r0, r4, ror #4
   20bf4:	andeq	r0, r0, r4, ror #4
   20bf8:	andeq	r0, r0, r4, ror #4
   20bfc:	andeq	r0, r0, r4, ror #4
   20c00:	andeq	r0, r0, r8, lsl r2
   20c04:	ldr	r1, [r4, #92]	; 0x5c
   20c08:	mov	r0, r4
   20c0c:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   20c10:	mov	r0, r4
   20c14:	mov	r1, r6
   20c18:	bl	114e8 <myhtml_insertion_mode_in_head@plt>
   20c1c:	ldr	r1, [r4, #92]	; 0x5c
   20c20:	mov	r0, r4
   20c24:	bl	11698 <myhtml_tree_open_elements_remove@plt>
   20c28:	mov	r0, r5
   20c2c:	pop	{r4, r5, r6, sl, fp, pc}
   20c30:	sub	r1, r0, #23
   20c34:	cmp	r1, #2
   20c38:	bcc	20c50 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20c3c:	cmp	r0, #128	; 0x80
   20c40:	beq	20c78 <myhtml_insertion_mode_after_head@@Base+0x2c8>
   20c44:	mov	r5, #0
   20c48:	cmp	r0, #65	; 0x41
   20c4c:	bne	20c70 <myhtml_insertion_mode_after_head@@Base+0x2c0>
   20c50:	mov	r5, #1
   20c54:	mov	r0, r4
   20c58:	mov	r1, #23
   20c5c:	mov	r2, #1
   20c60:	bl	11d88 <myhtml_tree_node_insert@plt>
   20c64:	mov	r1, #6
   20c68:	str	r1, [r4, #168]	; 0xa8
   20c6c:	str	r0, [r4, #100]	; 0x64
   20c70:	mov	r0, r5
   20c74:	pop	{r4, r5, r6, sl, fp, pc}
   20c78:	mov	r0, r4
   20c7c:	mov	r1, r6
   20c80:	pop	{r4, r5, r6, sl, fp, lr}
   20c84:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   20c88:	ldr	r0, [r6, #48]	; 0x30
   20c8c:	tst	r0, #8
   20c90:	bne	20d34 <myhtml_insertion_mode_after_head@@Base+0x384>
   20c94:	mov	r0, r4
   20c98:	mov	r1, r6
   20c9c:	bl	11380 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   20ca0:	cmp	r0, #0
   20ca4:	beq	20c50 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20ca8:	mov	r1, r0
   20cac:	mov	r0, r4
   20cb0:	bl	1141c <myhtml_tree_node_insert_text@plt>
   20cb4:	b	20c50 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20cb8:	mov	r5, #0
   20cbc:	mov	r0, r4
   20cc0:	mov	r1, r6
   20cc4:	mov	r2, #0
   20cc8:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   20ccc:	mov	r0, r5
   20cd0:	pop	{r4, r5, r6, sl, fp, pc}
   20cd4:	mov	r0, r4
   20cd8:	mov	r1, r6
   20cdc:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   20ce0:	str	r0, [r4, #100]	; 0x64
   20ce4:	mov	r0, #6
   20ce8:	str	r0, [r4, #168]	; 0xa8
   20cec:	ldr	r0, [r4, #180]	; 0xb4
   20cf0:	ldr	r1, [r4, #180]	; 0xb4
   20cf4:	and	r0, r0, #2
   20cf8:	eor	r0, r1, r0
   20cfc:	str	r0, [r4, #180]	; 0xb4
   20d00:	mov	r0, r5
   20d04:	pop	{r4, r5, r6, sl, fp, pc}
   20d08:	mov	r0, r4
   20d0c:	mov	r1, r6
   20d10:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   20d14:	mov	r0, #19
   20d18:	str	r0, [r4, #168]	; 0xa8
   20d1c:	mov	r0, r5
   20d20:	pop	{r4, r5, r6, sl, fp, pc}
   20d24:	mov	r0, r4
   20d28:	mov	r1, r6
   20d2c:	pop	{r4, r5, r6, sl, fp, lr}
   20d30:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   20d34:	mov	r0, r4
   20d38:	mov	r1, r6
   20d3c:	bl	1141c <myhtml_tree_node_insert_text@plt>
   20d40:	mov	r0, r5
   20d44:	pop	{r4, r5, r6, sl, fp, pc}

00020d48 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   20d48:	push	{r4, r5, r6, r7, fp, lr}
   20d4c:	add	fp, sp, #16
   20d50:	mov	r5, r1
   20d54:	mov	r4, r0
   20d58:	ldr	r0, [r0, #128]	; 0x80
   20d5c:	ldr	r0, [r0, #4]
   20d60:	rsb	r7, r0, #1
   20d64:	cmp	r7, #1
   20d68:	bne	20d98 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x50>
   20d6c:	b	20de8 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   20d70:	ldr	r0, [r4, #28]
   20d74:	bl	11e24 <myhtml_tag_get_by_id@plt>
   20d78:	ldr	r1, [r6, #8]
   20d7c:	add	r0, r0, r1, lsl #2
   20d80:	ldrb	r0, [r0, #16]
   20d84:	add	r7, r7, #1
   20d88:	tst	r0, #2
   20d8c:	bne	20de8 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   20d90:	cmp	r7, #1
   20d94:	beq	20de8 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0xa0>
   20d98:	ldr	r0, [r4, #128]	; 0x80
   20d9c:	ldr	r0, [r0]
   20da0:	ldr	r6, [r0, -r7, lsl #2]
   20da4:	ldr	r1, [r6, #4]
   20da8:	ldr	r2, [r5]
   20dac:	cmp	r1, r2
   20db0:	bne	20d70 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   20db4:	ldr	r0, [r6, #8]
   20db8:	cmp	r0, #1
   20dbc:	bne	20d70 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   20dc0:	mov	r0, r4
   20dc4:	mov	r1, r2
   20dc8:	mov	r2, #1
   20dcc:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   20dd0:	mov	r0, r4
   20dd4:	bl	11a4c <myhtml_tree_current_node@plt>
   20dd8:	mov	r0, r4
   20ddc:	mov	r1, r6
   20de0:	mov	r2, #0
   20de4:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   20de8:	mov	r0, #0
   20dec:	pop	{r4, r5, r6, r7, fp, pc}

00020df0 <myhtml_insertion_mode_in_template@@Base>:
   20df0:	push	{r4, r5, fp, lr}
   20df4:	add	fp, sp, #8
   20df8:	mov	r4, r0
   20dfc:	ldr	r0, [r1]
   20e00:	ldr	r2, [r1, #48]	; 0x30
   20e04:	tst	r2, #1
   20e08:	bne	2104c <myhtml_insertion_mode_in_template@@Base+0x25c>
   20e0c:	sub	r2, r0, #1
   20e10:	cmp	r2, #134	; 0x86
   20e14:	bhi	21094 <myhtml_insertion_mode_in_template@@Base+0x2a4>
   20e18:	add	r0, pc, #4
   20e1c:	ldr	r2, [r0, r2, lsl #2]
   20e20:	add	pc, r0, r2
   20e24:	andeq	r0, r0, r4, lsr r2
   20e28:	andeq	r0, r0, r4, lsr r2
   20e2c:	andeq	r0, r0, r4, lsr r2
   20e30:	andeq	r0, r0, r4, asr #5
   20e34:	andeq	r0, r0, r4, asr #5
   20e38:	andeq	r0, r0, r4, asr #5
   20e3c:	andeq	r0, r0, r4, asr #5
   20e40:	andeq	r0, r0, r4, asr #5
   20e44:	andeq	r0, r0, r4, asr #5
   20e48:	andeq	r0, r0, r4, asr #5
   20e4c:	andeq	r0, r0, r4, asr #5
   20e50:	andeq	r0, r0, r4, asr #5
   20e54:	andeq	r0, r0, r4, asr #5
   20e58:	andeq	r0, r0, r4, asr #5
   20e5c:	andeq	r0, r0, ip, lsl r2
   20e60:	andeq	r0, r0, ip, lsl r2
   20e64:	andeq	r0, r0, r4, asr #5
   20e68:	andeq	r0, r0, r4, asr #5
   20e6c:	andeq	r0, r0, ip, lsl r2
   20e70:	andeq	r0, r0, r4, asr #5
   20e74:	andeq	r0, r0, r4, asr #5
   20e78:	andeq	r0, r0, r4, asr #5
   20e7c:	andeq	r0, r0, r4, asr #5
   20e80:	andeq	r0, r0, r4, asr #5
   20e84:	andeq	r0, r0, r4, asr #5
   20e88:	andeq	r0, r0, r4, asr #5
   20e8c:	andeq	r0, r0, r0, asr #4
   20e90:	andeq	r0, r0, r4, asr #5
   20e94:	andeq	r0, r0, r4, asr #5
   20e98:	andeq	r0, r0, r4, asr #5
   20e9c:	ldrdeq	r0, [r0], -ip
   20ea0:	andeq	r0, r0, r0, asr #4
   20ea4:	andeq	r0, r0, r4, asr #5
   20ea8:	andeq	r0, r0, r4, asr #5
   20eac:	andeq	r0, r0, r4, asr #5
   20eb0:	andeq	r0, r0, r4, asr #5
   20eb4:	andeq	r0, r0, r4, asr #5
   20eb8:	andeq	r0, r0, r4, asr #5
   20ebc:	andeq	r0, r0, r4, asr #5
   20ec0:	andeq	r0, r0, r4, asr #5
   20ec4:	andeq	r0, r0, r4, asr #5
   20ec8:	andeq	r0, r0, r4, asr #5
   20ecc:	andeq	r0, r0, r4, asr #5
   20ed0:	andeq	r0, r0, r4, asr #5
   20ed4:	andeq	r0, r0, r4, asr #5
   20ed8:	andeq	r0, r0, r4, asr #5
   20edc:	andeq	r0, r0, r4, asr #5
   20ee0:	andeq	r0, r0, r4, asr #5
   20ee4:	andeq	r0, r0, r4, asr #5
   20ee8:	andeq	r0, r0, r4, asr #5
   20eec:	andeq	r0, r0, r4, asr #5
   20ef0:	andeq	r0, r0, r4, asr #5
   20ef4:	andeq	r0, r0, r4, asr #5
   20ef8:	andeq	r0, r0, r4, asr #5
   20efc:	andeq	r0, r0, r4, asr #5
   20f00:	andeq	r0, r0, r4, asr #5
   20f04:	andeq	r0, r0, r4, asr #5
   20f08:	andeq	r0, r0, r4, asr #5
   20f0c:	andeq	r0, r0, r4, asr #5
   20f10:	andeq	r0, r0, r4, asr #5
   20f14:	andeq	r0, r0, r4, asr #5
   20f18:	andeq	r0, r0, r4, asr #5
   20f1c:	andeq	r0, r0, r4, asr #5
   20f20:	andeq	r0, r0, r4, asr #5
   20f24:	andeq	r0, r0, r4, asr #5
   20f28:	andeq	r0, r0, r4, asr #5
   20f2c:	andeq	r0, r0, r4, asr #5
   20f30:	andeq	r0, r0, r4, asr #5
   20f34:	andeq	r0, r0, r4, asr #5
   20f38:	andeq	r0, r0, r4, asr #5
   20f3c:	andeq	r0, r0, r4, asr #5
   20f40:	andeq	r0, r0, r4, asr #5
   20f44:	andeq	r0, r0, r4, asr #5
   20f48:	andeq	r0, r0, r4, asr #5
   20f4c:	andeq	r0, r0, r4, asr #5
   20f50:	andeq	r0, r0, r4, asr #5
   20f54:	andeq	r0, r0, r4, asr #5
   20f58:	andeq	r0, r0, ip, lsl r2
   20f5c:	andeq	r0, r0, r4, asr #5
   20f60:	andeq	r0, r0, r4, asr #5
   20f64:	andeq	r0, r0, r4, asr #5
   20f68:	andeq	r0, r0, r4, asr #5
   20f6c:	andeq	r0, r0, r4, asr #5
   20f70:	andeq	r0, r0, r4, asr #5
   20f74:	andeq	r0, r0, r4, asr #5
   20f78:	andeq	r0, r0, ip, lsl r2
   20f7c:	andeq	r0, r0, r4, asr #5
   20f80:	andeq	r0, r0, r4, asr #5
   20f84:	andeq	r0, r0, r4, asr #5
   20f88:	andeq	r0, r0, r4, asr #5
   20f8c:	andeq	r0, r0, r4, asr #5
   20f90:	andeq	r0, r0, ip, lsl r2
   20f94:	andeq	r0, r0, r4, asr #5
   20f98:	andeq	r0, r0, r4, asr #5
   20f9c:	andeq	r0, r0, r4, asr #5
   20fa0:	andeq	r0, r0, r4, asr #5
   20fa4:	andeq	r0, r0, r4, asr #5
   20fa8:	andeq	r0, r0, r4, asr #5
   20fac:	andeq	r0, r0, r4, asr #5
   20fb0:	andeq	r0, r0, r4, asr #5
   20fb4:	andeq	r0, r0, r4, asr #5
   20fb8:	andeq	r0, r0, r4, asr #5
   20fbc:	andeq	r0, r0, r4, asr #5
   20fc0:	andeq	r0, r0, r4, asr #5
   20fc4:	andeq	r0, r0, r4, asr #5
   20fc8:	andeq	r0, r0, r4, asr #5
   20fcc:	andeq	r0, r0, r4, asr #5
   20fd0:	andeq	r0, r0, r4, asr #5
   20fd4:	andeq	r0, r0, r4, asr #5
   20fd8:	andeq	r0, r0, r4, asr #5
   20fdc:	andeq	r0, r0, r4, asr #5
   20fe0:	andeq	r0, r0, ip, lsl r2
   20fe4:	andeq	r0, r0, r4, asr #5
   20fe8:	andeq	r0, r0, r4, asr #5
   20fec:	andeq	r0, r0, r4, asr #5
   20ff0:	andeq	r0, r0, r4, asr #5
   20ff4:	andeq	r0, r0, r4, asr #5
   20ff8:	andeq	r0, r0, r4, asr #5
   20ffc:	andeq	r0, r0, r4, asr #5
   21000:	andeq	r0, r0, ip, lsl r2
   21004:	andeq	r0, r0, r4, asr #5
   21008:	andeq	r0, r0, r4, asr #5
   2100c:	andeq	r0, r0, r4, asr #5
   21010:	andeq	r0, r0, r4, asr #5
   21014:	andeq	r0, r0, r4, asr #5
   21018:	andeq	r0, r0, r0, asr #4
   2101c:	andeq	r0, r0, r8, asr r2
   21020:	andeq	r0, r0, ip, lsl r2
   21024:	andeq	r0, r0, r4, asr #5
   21028:	andeq	r0, r0, r0, asr #4
   2102c:	andeq	r0, r0, r8, asr r2
   21030:	andeq	r0, r0, r0, asr #4
   21034:	andeq	r0, r0, r4, asr #5
   21038:	andeq	r0, r0, ip, lsl r2
   2103c:	strdeq	r0, [r0], -r4
   21040:	mov	r0, r4
   21044:	pop	{r4, r5, fp, lr}
   21048:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   2104c:	mov	r5, #0
   21050:	cmp	r0, #128	; 0x80
   21054:	bne	21138 <myhtml_insertion_mode_in_template@@Base+0x348>
   21058:	mov	r0, r4
   2105c:	pop	{r4, r5, fp, lr}
   21060:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   21064:	mov	r0, r4
   21068:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   2106c:	mov	r5, #8
   21070:	mov	r0, r4
   21074:	mov	r1, #8
   21078:	b	2112c <myhtml_insertion_mode_in_template@@Base+0x33c>
   2107c:	mov	r0, r4
   21080:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   21084:	mov	r5, #13
   21088:	mov	r0, r4
   2108c:	mov	r1, #13
   21090:	b	2112c <myhtml_insertion_mode_in_template@@Base+0x33c>
   21094:	cmp	r0, #251	; 0xfb
   21098:	bne	210e8 <myhtml_insertion_mode_in_template@@Base+0x2f8>
   2109c:	mov	r5, #0
   210a0:	mov	r0, r4
   210a4:	mov	r1, #128	; 0x80
   210a8:	mov	r2, #1
   210ac:	mov	r3, #0
   210b0:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   210b4:	cmp	r0, #0
   210b8:	beq	21138 <myhtml_insertion_mode_in_template@@Base+0x348>
   210bc:	mov	r1, r0
   210c0:	mov	r0, r4
   210c4:	mov	r2, #0
   210c8:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   210cc:	mov	r0, r4
   210d0:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   210d4:	mov	r0, r4
   210d8:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   210dc:	mov	r0, r4
   210e0:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   210e4:	b	21134 <myhtml_insertion_mode_in_template@@Base+0x344>
   210e8:	mov	r0, r4
   210ec:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   210f0:	mov	r5, #6
   210f4:	mov	r0, r4
   210f8:	mov	r1, #6
   210fc:	b	2112c <myhtml_insertion_mode_in_template@@Base+0x33c>
   21100:	mov	r0, r4
   21104:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   21108:	mov	r5, #11
   2110c:	mov	r0, r4
   21110:	mov	r1, #11
   21114:	b	2112c <myhtml_insertion_mode_in_template@@Base+0x33c>
   21118:	mov	r0, r4
   2111c:	bl	11de8 <myhtml_tree_template_insertion_pop@plt>
   21120:	mov	r5, #12
   21124:	mov	r0, r4
   21128:	mov	r1, #12
   2112c:	bl	11440 <myhtml_tree_template_insertion_append@plt>
   21130:	str	r5, [r4, #168]	; 0xa8
   21134:	mov	r5, #1
   21138:	mov	r0, r5
   2113c:	pop	{r4, r5, fp, pc}

00021140 <myhtml_rules_stop_parsing@@Base>:
   21140:	bx	lr

00021144 <myhtml_insertion_mode_text@@Base>:
   21144:	push	{r4, sl, fp, lr}
   21148:	add	fp, sp, #8
   2114c:	mov	r4, r0
   21150:	ldr	r0, [r1, #48]	; 0x30
   21154:	tst	r0, #1
   21158:	bne	211a0 <myhtml_insertion_mode_text@@Base+0x5c>
   2115c:	ldr	r0, [r1]
   21160:	cmp	r0, #251	; 0xfb
   21164:	bne	211b8 <myhtml_insertion_mode_text@@Base+0x74>
   21168:	mov	r0, r4
   2116c:	bl	11a4c <myhtml_tree_current_node@plt>
   21170:	ldr	r1, [r0, #4]
   21174:	cmp	r1, #112	; 0x70
   21178:	bne	21188 <myhtml_insertion_mode_text@@Base+0x44>
   2117c:	ldr	r1, [r0]
   21180:	orr	r1, r1, #8
   21184:	str	r1, [r0]
   21188:	mov	r0, r4
   2118c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   21190:	ldr	r0, [r4, #172]	; 0xac
   21194:	str	r0, [r4, #168]	; 0xa8
   21198:	mov	r0, #1
   2119c:	pop	{r4, sl, fp, pc}
   211a0:	mov	r0, r4
   211a4:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   211a8:	ldr	r0, [r4, #172]	; 0xac
   211ac:	str	r0, [r4, #168]	; 0xa8
   211b0:	mov	r0, #0
   211b4:	pop	{r4, sl, fp, pc}
   211b8:	mov	r0, r4
   211bc:	bl	1141c <myhtml_tree_node_insert_text@plt>
   211c0:	mov	r0, #0
   211c4:	pop	{r4, sl, fp, pc}

000211c8 <myhtml_insertion_mode_in_table@@Base>:
   211c8:	push	{r4, r5, r6, sl, fp, lr}
   211cc:	add	fp, sp, #16
   211d0:	sub	sp, sp, #8
   211d4:	mov	r6, r1
   211d8:	mov	r4, r0
   211dc:	ldr	r0, [r1]
   211e0:	ldr	r1, [r1, #48]	; 0x30
   211e4:	tst	r1, #1
   211e8:	bne	2143c <myhtml_insertion_mode_in_table@@Base+0x274>
   211ec:	sub	r1, r0, #1
   211f0:	cmp	r1, #134	; 0x86
   211f4:	bhi	21694 <myhtml_insertion_mode_in_table@@Base+0x4cc>
   211f8:	mov	r5, #0
   211fc:	add	r0, pc, #4
   21200:	ldr	r1, [r0, r1, lsl #2]
   21204:	add	pc, r0, r1
   21208:	muleq	r0, r8, r4
   2120c:	andeq	r0, r0, ip, ror #9
   21210:	andeq	r0, r0, r4, asr #12
   21214:	andeq	r0, r0, r8, lsr #12
   21218:	andeq	r0, r0, r8, lsr #12
   2121c:	andeq	r0, r0, r8, lsr #12
   21220:	andeq	r0, r0, r8, lsr #12
   21224:	andeq	r0, r0, r8, lsr #12
   21228:	andeq	r0, r0, r8, lsr #12
   2122c:	andeq	r0, r0, r8, lsr #12
   21230:	andeq	r0, r0, r8, lsr #12
   21234:	andeq	r0, r0, r8, lsr #12
   21238:	andeq	r0, r0, r8, lsr #12
   2123c:	andeq	r0, r0, r8, lsr #12
   21240:	andeq	r0, r0, r8, lsr #12
   21244:	andeq	r0, r0, r8, lsr #12
   21248:	andeq	r0, r0, r8, lsr #12
   2124c:	andeq	r0, r0, r8, lsr #12
   21250:	andeq	r0, r0, r8, lsr #12
   21254:	andeq	r0, r0, r8, lsr #12
   21258:	andeq	r0, r0, r8, lsr #12
   2125c:	andeq	r0, r0, r8, lsr #12
   21260:	andeq	r0, r0, r8, lsr #12
   21264:	andeq	r0, r0, r8, lsr #12
   21268:	andeq	r0, r0, r8, lsr #12
   2126c:	andeq	r0, r0, r8, lsr #12
   21270:	andeq	r0, r0, r4, lsl #10
   21274:	andeq	r0, r0, r8, lsr #12
   21278:	andeq	r0, r0, r8, lsr #12
   2127c:	andeq	r0, r0, r8, lsr #12
   21280:	andeq	r0, r0, r4, lsr r5
   21284:	andeq	r0, r0, r4, asr r5
   21288:	andeq	r0, r0, r8, lsr #12
   2128c:	andeq	r0, r0, r8, lsr #12
   21290:	andeq	r0, r0, r8, lsr #12
   21294:	andeq	r0, r0, r8, lsr #12
   21298:	andeq	r0, r0, r8, lsr #12
   2129c:	andeq	r0, r0, r8, lsr #12
   212a0:	andeq	r0, r0, r8, lsr #12
   212a4:	andeq	r0, r0, r8, lsr #12
   212a8:	andeq	r0, r0, r8, lsr #12
   212ac:	andeq	r0, r0, r8, lsr #12
   212b0:	andeq	r0, r0, r8, lsr #12
   212b4:	andeq	r0, r0, r8, lsr #12
   212b8:	andeq	r0, r0, r8, lsr #12
   212bc:	andeq	r0, r0, r8, lsr #12
   212c0:	andeq	r0, r0, r8, lsr #12
   212c4:	andeq	r0, r0, r8, lsr #12
   212c8:	andeq	r0, r0, r8, lsr #12
   212cc:	andeq	r0, r0, r8, lsr #12
   212d0:	andeq	r0, r0, r8, lsr #12
   212d4:	andeq	r0, r0, r4, ror r5
   212d8:	andeq	r0, r0, r8, lsr #12
   212dc:	andeq	r0, r0, r8, lsr #12
   212e0:	andeq	r0, r0, r8, lsr #12
   212e4:	andeq	r0, r0, r8, lsr #12
   212e8:	andeq	r0, r0, r8, lsr #12
   212ec:	andeq	r0, r0, r8, lsr #12
   212f0:	andeq	r0, r0, r8, lsr #12
   212f4:	andeq	r0, r0, r8, lsr #12
   212f8:	andeq	r0, r0, r8, lsr #12
   212fc:	andeq	r0, r0, r8, lsr #12
   21300:	andeq	r0, r0, r8, lsr #12
   21304:	andeq	r0, r0, r8, lsr #12
   21308:	andeq	r0, r0, r8, lsr #12
   2130c:	andeq	r0, r0, r8, lsr #12
   21310:	andeq	r0, r0, r8, lsr #12
   21314:	andeq	r0, r0, r8, lsr #12
   21318:	andeq	r0, r0, r8, lsr #12
   2131c:	andeq	r0, r0, r4, asr #11
   21320:	andeq	r0, r0, r8, lsr #12
   21324:	andeq	r0, r0, r8, lsr #12
   21328:	andeq	r0, r0, r8, lsr #12
   2132c:	andeq	r0, r0, r8, lsr #12
   21330:	andeq	r0, r0, r8, lsr #12
   21334:	andeq	r0, r0, r8, lsr #12
   21338:	andeq	r0, r0, r8, lsr #12
   2133c:	andeq	r0, r0, r8, lsr #12
   21340:	andeq	r0, r0, r8, lsr #12
   21344:	andeq	r0, r0, r8, lsr #12
   21348:	andeq	r0, r0, r8, lsr #12
   2134c:	andeq	r0, r0, r8, lsr #12
   21350:	andeq	r0, r0, r8, lsr #12
   21354:	andeq	r0, r0, r8, lsr #12
   21358:	andeq	r0, r0, r8, lsr #12
   2135c:	andeq	r0, r0, r8, lsr #12
   21360:	andeq	r0, r0, r8, lsr #12
   21364:	andeq	r0, r0, r8, lsr #12
   21368:	andeq	r0, r0, r8, lsr #12
   2136c:	andeq	r0, r0, r8, lsr #12
   21370:	andeq	r0, r0, r8, lsr #12
   21374:	andeq	r0, r0, r8, lsr #12
   21378:	andeq	r0, r0, r8, lsr #12
   2137c:	andeq	r0, r0, r8, lsr #12
   21380:	andeq	r0, r0, r8, lsr #12
   21384:	andeq	r0, r0, r8, lsr #12
   21388:	andeq	r0, r0, r8, lsr #12
   2138c:	andeq	r0, r0, r8, lsr #12
   21390:	andeq	r0, r0, r8, lsr #12
   21394:	andeq	r0, r0, r8, lsr #12
   21398:	andeq	r0, r0, r8, lsr #12
   2139c:	andeq	r0, r0, r8, lsr #12
   213a0:	andeq	r0, r0, r8, lsr #12
   213a4:	andeq	r0, r0, r8, lsr #12
   213a8:	andeq	r0, r0, r8, lsr #12
   213ac:	andeq	r0, r0, r8, lsr #12
   213b0:	andeq	r0, r0, r8, lsr #12
   213b4:	andeq	r0, r0, r8, lsr #12
   213b8:	andeq	r0, r0, r8, lsr #12
   213bc:	andeq	r0, r0, r8, lsr #12
   213c0:	andeq	r0, r0, r8, lsr #12
   213c4:	andeq	r0, r0, r0, asr r4
   213c8:	andeq	r0, r0, r8, lsr #12
   213cc:	andeq	r0, r0, r8, lsr #12
   213d0:	andeq	r0, r0, r8, lsr #12
   213d4:	andeq	r0, r0, r8, lsr #12
   213d8:	andeq	r0, r0, r8, lsr #12
   213dc:	andeq	r0, r0, r8, lsr #12
   213e0:	andeq	r0, r0, r8, lsr #12
   213e4:	andeq	r0, r0, r0, asr r4
   213e8:	andeq	r0, r0, r8, lsr #12
   213ec:	andeq	r0, r0, r8, lsr #12
   213f0:	andeq	r0, r0, r8, lsr #12
   213f4:	andeq	r0, r0, r8, lsr #12
   213f8:	andeq	r0, r0, r0, asr r6
   213fc:	andeq	r0, r0, ip, lsl r2
   21400:	andeq	r0, r0, r4, ror #8
   21404:	andeq	r0, r0, r0, asr r4
   21408:	andeq	r0, r0, r8, lsr #12
   2140c:	andeq	r0, r0, ip, lsl r2
   21410:	andeq	r0, r0, r4, ror #8
   21414:	andeq	r0, r0, ip, lsl r2
   21418:	andeq	r0, r0, r8, lsr #12
   2141c:	andeq	r0, r0, r8, lsr #12
   21420:	andeq	r0, r0, r4, ror #8
   21424:	mov	r0, r4
   21428:	bl	12364 <myhtml_tree_clear_stack_back_table_context@plt>
   2142c:	mov	r0, r4
   21430:	mov	r1, r6
   21434:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   21438:	b	21688 <myhtml_insertion_mode_in_table@@Base+0x4c0>
   2143c:	sub	r0, r0, #23
   21440:	cmp	r0, #112	; 0x70
   21444:	bhi	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   21448:	mov	r5, #0
   2144c:	add	r1, pc, #4
   21450:	ldr	r0, [r1, r0, lsl #2]
   21454:	add	pc, r1, r0
   21458:	strdeq	r0, [r0], -r4
   2145c:	ldrdeq	r0, [r0], -r8
   21460:	ldrdeq	r0, [r0], -r8
   21464:	ldrdeq	r0, [r0], -r8
   21468:	strdeq	r0, [r0], -r4
   2146c:	ldrdeq	r0, [r0], -r8
   21470:	ldrdeq	r0, [r0], -r8
   21474:	ldrdeq	r0, [r0], -r8
   21478:	strdeq	r0, [r0], -r4
   2147c:	strdeq	r0, [r0], -r4
   21480:	ldrdeq	r0, [r0], -r8
   21484:	ldrdeq	r0, [r0], -r8
   21488:	ldrdeq	r0, [r0], -r8
   2148c:	ldrdeq	r0, [r0], -r8
   21490:	ldrdeq	r0, [r0], -r8
   21494:	ldrdeq	r0, [r0], -r8
   21498:	ldrdeq	r0, [r0], -r8
   2149c:	ldrdeq	r0, [r0], -r8
   214a0:	ldrdeq	r0, [r0], -r8
   214a4:	ldrdeq	r0, [r0], -r8
   214a8:	ldrdeq	r0, [r0], -r8
   214ac:	ldrdeq	r0, [r0], -r8
   214b0:	ldrdeq	r0, [r0], -r8
   214b4:	ldrdeq	r0, [r0], -r8
   214b8:	ldrdeq	r0, [r0], -r8
   214bc:	ldrdeq	r0, [r0], -r8
   214c0:	ldrdeq	r0, [r0], -r8
   214c4:	ldrdeq	r0, [r0], -r8
   214c8:	ldrdeq	r0, [r0], -r8
   214cc:	ldrdeq	r0, [r0], -r8
   214d0:	ldrdeq	r0, [r0], -r8
   214d4:	ldrdeq	r0, [r0], -r8
   214d8:	ldrdeq	r0, [r0], -r8
   214dc:	ldrdeq	r0, [r0], -r8
   214e0:	ldrdeq	r0, [r0], -r8
   214e4:	ldrdeq	r0, [r0], -r8
   214e8:	ldrdeq	r0, [r0], -r8
   214ec:	ldrdeq	r0, [r0], -r8
   214f0:	ldrdeq	r0, [r0], -r8
   214f4:	ldrdeq	r0, [r0], -r8
   214f8:	ldrdeq	r0, [r0], -r8
   214fc:	ldrdeq	r0, [r0], -r8
   21500:	strdeq	r0, [r0], -r4
   21504:	ldrdeq	r0, [r0], -r8
   21508:	ldrdeq	r0, [r0], -r8
   2150c:	ldrdeq	r0, [r0], -r8
   21510:	ldrdeq	r0, [r0], -r8
   21514:	ldrdeq	r0, [r0], -r8
   21518:	ldrdeq	r0, [r0], -r8
   2151c:	ldrdeq	r0, [r0], -r8
   21520:	ldrdeq	r0, [r0], -r8
   21524:	ldrdeq	r0, [r0], -r8
   21528:	ldrdeq	r0, [r0], -r8
   2152c:	ldrdeq	r0, [r0], -r8
   21530:	ldrdeq	r0, [r0], -r8
   21534:	ldrdeq	r0, [r0], -r8
   21538:	ldrdeq	r0, [r0], -r8
   2153c:	ldrdeq	r0, [r0], -r8
   21540:	ldrdeq	r0, [r0], -r8
   21544:	ldrdeq	r0, [r0], -r8
   21548:	ldrdeq	r0, [r0], -r8
   2154c:	ldrdeq	r0, [r0], -r8
   21550:	ldrdeq	r0, [r0], -r8
   21554:	ldrdeq	r0, [r0], -r8
   21558:	ldrdeq	r0, [r0], -r8
   2155c:	ldrdeq	r0, [r0], -r8
   21560:	ldrdeq	r0, [r0], -r8
   21564:	ldrdeq	r0, [r0], -r8
   21568:	ldrdeq	r0, [r0], -r8
   2156c:	ldrdeq	r0, [r0], -r8
   21570:	ldrdeq	r0, [r0], -r8
   21574:	ldrdeq	r0, [r0], -r8
   21578:	ldrdeq	r0, [r0], -r8
   2157c:	ldrdeq	r0, [r0], -r8
   21580:	ldrdeq	r0, [r0], -r8
   21584:	ldrdeq	r0, [r0], -r8
   21588:	ldrdeq	r0, [r0], -r8
   2158c:	ldrdeq	r0, [r0], -r8
   21590:	ldrdeq	r0, [r0], -r8
   21594:	ldrdeq	r0, [r0], -r8
   21598:	ldrdeq	r0, [r0], -r8
   2159c:	ldrdeq	r0, [r0], -r8
   215a0:	ldrdeq	r0, [r0], -r8
   215a4:	ldrdeq	r0, [r0], -r8
   215a8:	ldrdeq	r0, [r0], -r8
   215ac:	ldrdeq	r0, [r0], -r8
   215b0:	ldrdeq	r0, [r0], -r8
   215b4:	ldrdeq	r0, [r0], -r8
   215b8:	ldrdeq	r0, [r0], -r8
   215bc:	ldrdeq	r0, [r0], -r8
   215c0:	ldrdeq	r0, [r0], -r8
   215c4:	ldrdeq	r0, [r0], -r8
   215c8:	ldrdeq	r0, [r0], -r8
   215cc:	ldrdeq	r0, [r0], -r8
   215d0:	ldrdeq	r0, [r0], -r8
   215d4:	ldrdeq	r0, [r0], -r8
   215d8:	ldrdeq	r0, [r0], -r8
   215dc:	ldrdeq	r0, [r0], -r8
   215e0:	ldrdeq	r0, [r0], -r8
   215e4:	ldrdeq	r0, [r0], -r8
   215e8:	ldrdeq	r0, [r0], -r8
   215ec:	ldrdeq	r0, [r0], -r8
   215f0:	andeq	r0, r0, r4, asr #3
   215f4:	strdeq	r0, [r0], -r4
   215f8:	strdeq	r0, [r0], -r4
   215fc:	andeq	r0, r0, r0, lsl #4
   21600:	ldrdeq	r0, [r0], -r8
   21604:	strdeq	r0, [r0], -r4
   21608:	strdeq	r0, [r0], -r4
   2160c:	strdeq	r0, [r0], -r4
   21610:	ldrdeq	r0, [r0], -r8
   21614:	ldrdeq	r0, [r0], -r8
   21618:	strdeq	r0, [r0], -r4
   2161c:	mov	r0, r4
   21620:	mov	r1, #125	; 0x7d
   21624:	mov	r2, #1
   21628:	mov	r3, #64	; 0x40
   2162c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   21630:	cmp	r0, #0
   21634:	beq	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21638:	mov	r1, r0
   2163c:	mov	r5, #0
   21640:	mov	r0, r4
   21644:	mov	r2, #0
   21648:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   2164c:	mov	r0, r4
   21650:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21654:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21658:	mov	r0, r4
   2165c:	mov	r1, r6
   21660:	sub	sp, fp, #16
   21664:	pop	{r4, r5, r6, sl, fp, lr}
   21668:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   2166c:	mov	r0, r4
   21670:	bl	12364 <myhtml_tree_clear_stack_back_table_context@plt>
   21674:	mov	r5, #1
   21678:	mov	r0, r4
   2167c:	mov	r1, #126	; 0x7e
   21680:	mov	r2, #1
   21684:	bl	11d88 <myhtml_tree_node_insert@plt>
   21688:	mov	r0, #12
   2168c:	str	r0, [r4, #168]	; 0xa8
   21690:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21694:	cmp	r0, #251	; 0xfb
   21698:	beq	217b8 <myhtml_insertion_mode_in_table@@Base+0x5f0>
   2169c:	b	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   216a0:	mov	r0, r4
   216a4:	bl	11a4c <myhtml_tree_current_node@plt>
   216a8:	ldr	r1, [r0, #4]
   216ac:	sub	r1, r1, #125	; 0x7d
   216b0:	cmp	r1, #10
   216b4:	bhi	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   216b8:	mov	r2, #1
   216bc:	movw	r3, #1187	; 0x4a3
   216c0:	tst	r3, r2, lsl r1
   216c4:	beq	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   216c8:	ldr	r0, [r0, #8]
   216cc:	cmp	r0, #1
   216d0:	bne	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   216d4:	ldr	r0, [r4, #136]	; 0x88
   216d8:	bl	1237c <myhtml_tree_token_list_clean@plt>
   216dc:	ldr	r0, [r4, #168]	; 0xa8
   216e0:	mov	r1, #9
   216e4:	str	r1, [r4, #168]	; 0xa8
   216e8:	str	r0, [r4, #172]	; 0xac
   216ec:	mov	r5, #1
   216f0:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   216f4:	mov	r5, #0
   216f8:	mov	r0, r4
   216fc:	mov	r1, r6
   21700:	mov	r2, #0
   21704:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   21708:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   2170c:	mov	r0, r4
   21710:	bl	12364 <myhtml_tree_clear_stack_back_table_context@plt>
   21714:	mov	r0, r4
   21718:	mov	r1, r6
   2171c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   21720:	ldr	r0, [r4]
   21724:	ldr	r1, [r0, #36]	; 0x24
   21728:	mov	r0, r4
   2172c:	bl	11548 <myhtml_tree_active_formatting_append@plt>
   21730:	mov	r0, #10
   21734:	str	r0, [r4, #168]	; 0xa8
   21738:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   2173c:	mov	r0, r4
   21740:	bl	12364 <myhtml_tree_clear_stack_back_table_context@plt>
   21744:	mov	r5, #1
   21748:	mov	r0, r4
   2174c:	mov	r1, #32
   21750:	mov	r2, #1
   21754:	bl	11d88 <myhtml_tree_node_insert@plt>
   21758:	b	21770 <myhtml_insertion_mode_in_table@@Base+0x5a8>
   2175c:	mov	r0, r4
   21760:	bl	12364 <myhtml_tree_clear_stack_back_table_context@plt>
   21764:	mov	r0, r4
   21768:	mov	r1, r6
   2176c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   21770:	mov	r0, #11
   21774:	str	r0, [r4, #168]	; 0xa8
   21778:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   2177c:	mov	r5, #0
   21780:	mov	r0, r4
   21784:	mov	r1, #128	; 0x80
   21788:	mov	r2, #1
   2178c:	mov	r3, #0
   21790:	bl	11c14 <myhtml_tree_open_elements_find_by_tag_idx@plt>
   21794:	ldr	r1, [r4, #104]	; 0x68
   21798:	orrs	r0, r0, r1
   2179c:	bne	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   217a0:	mov	r0, r4
   217a4:	mov	r1, r6
   217a8:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   217ac:	str	r0, [r4, #104]	; 0x68
   217b0:	mov	r0, r4
   217b4:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   217b8:	mov	r0, r4
   217bc:	mov	r1, r6
   217c0:	sub	sp, fp, #16
   217c4:	pop	{r4, r5, r6, sl, fp, lr}
   217c8:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   217cc:	ldr	r0, [r4, #8]
   217d0:	mov	r1, r6
   217d4:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   217d8:	ldr	r0, [r4, #8]
   217dc:	mov	r1, #6
   217e0:	ldr	r2, [pc, #176]	; 21898 <myhtml_insertion_mode_in_table@@Base+0x6d0>
   217e4:	add	r2, pc, r2
   217e8:	str	r2, [sp]
   217ec:	str	r1, [sp, #4]
   217f0:	ldr	r2, [pc, #164]	; 2189c <myhtml_insertion_mode_in_table@@Base+0x6d4>
   217f4:	add	r2, pc, r2
   217f8:	mov	r1, r6
   217fc:	mov	r3, #4
   21800:	bl	111f4 <myhtml_token_attr_match_case@plt>
   21804:	cmp	r0, #0
   21808:	beq	21830 <myhtml_insertion_mode_in_table@@Base+0x668>
   2180c:	mov	r0, r4
   21810:	mov	r1, r6
   21814:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   21818:	mov	r0, r4
   2181c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   21820:	ldr	r0, [r6, #48]	; 0x30
   21824:	orr	r0, r0, #2
   21828:	str	r0, [r6, #48]	; 0x30
   2182c:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21830:	mov	r0, #1
   21834:	strb	r0, [r4, #188]	; 0xbc
   21838:	mov	r0, r4
   2183c:	mov	r1, r6
   21840:	bl	11a64 <myhtml_insertion_mode_in_body@plt>
   21844:	mov	r5, #0
   21848:	strb	r5, [r4, #188]	; 0xbc
   2184c:	mov	r0, r5
   21850:	sub	sp, fp, #16
   21854:	pop	{r4, r5, r6, sl, fp, pc}
   21858:	mov	r0, r4
   2185c:	mov	r1, #125	; 0x7d
   21860:	mov	r2, #1
   21864:	mov	r3, #64	; 0x40
   21868:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   2186c:	cmp	r0, #0
   21870:	beq	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21874:	mov	r0, r4
   21878:	mov	r1, #125	; 0x7d
   2187c:	mov	r2, #1
   21880:	mov	r3, #0
   21884:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   21888:	mov	r0, r4
   2188c:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21890:	mov	r5, #1
   21894:	b	2184c <myhtml_insertion_mode_in_table@@Base+0x684>
   21898:	andeq	fp, sp, r3, asr #11
   2189c:	andeq	r8, r1, pc, asr #6

000218a0 <myhtml_insertion_mode_in_table_text@@Base>:
   218a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   218a4:	add	fp, sp, #24
   218a8:	mov	r4, r0
   218ac:	ldr	r0, [r1]
   218b0:	cmp	r0, #1
   218b4:	bne	218e0 <myhtml_insertion_mode_in_table_text@@Base+0x40>
   218b8:	mov	r5, r1
   218bc:	ldr	r0, [r1, #48]	; 0x30
   218c0:	tst	r0, #2048	; 0x800
   218c4:	bne	21948 <myhtml_insertion_mode_in_table_text@@Base+0xa8>
   218c8:	ldr	r0, [r4, #136]	; 0x88
   218cc:	mov	r1, r5
   218d0:	bl	12274 <myhtml_tree_token_list_append@plt>
   218d4:	mov	r6, #0
   218d8:	mov	r0, r6
   218dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   218e0:	ldr	r5, [r4, #136]	; 0x88
   218e4:	ldr	r0, [r5, #4]
   218e8:	cmp	r0, #0
   218ec:	beq	219b8 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   218f0:	ldr	r0, [r5]
   218f4:	mov	r1, #0
   218f8:	ldr	r2, [r0, r1, lsl #2]
   218fc:	ldr	r2, [r2, #48]	; 0x30
   21900:	tst	r2, #8
   21904:	beq	21978 <myhtml_insertion_mode_in_table_text@@Base+0xd8>
   21908:	add	r1, r1, #1
   2190c:	ldr	r2, [r5, #4]
   21910:	cmp	r1, r2
   21914:	bcc	218f8 <myhtml_insertion_mode_in_table_text@@Base+0x58>
   21918:	cmp	r2, #0
   2191c:	beq	219b8 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   21920:	mov	r6, #0
   21924:	ldr	r0, [r5]
   21928:	ldr	r1, [r0, r6, lsl #2]
   2192c:	mov	r0, r4
   21930:	bl	1141c <myhtml_tree_node_insert_text@plt>
   21934:	add	r6, r6, #1
   21938:	ldr	r0, [r5, #4]
   2193c:	cmp	r6, r0
   21940:	bcc	21924 <myhtml_insertion_mode_in_table_text@@Base+0x84>
   21944:	b	219b8 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   21948:	mov	r0, r4
   2194c:	mov	r1, r5
   21950:	bl	11be4 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21954:	ldr	r0, [r5, #12]
   21958:	mov	r6, #0
   2195c:	cmp	r0, #0
   21960:	beq	219c4 <myhtml_insertion_mode_in_table_text@@Base+0x124>
   21964:	ldr	r0, [r4, #136]	; 0x88
   21968:	mov	r1, r5
   2196c:	bl	12274 <myhtml_tree_token_list_append@plt>
   21970:	mov	r0, r6
   21974:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21978:	ldr	r0, [r5, #4]
   2197c:	cmp	r0, #0
   21980:	beq	219b8 <myhtml_insertion_mode_in_table_text@@Base+0x118>
   21984:	mov	r8, #0
   21988:	mov	r7, #1
   2198c:	mov	r6, #0
   21990:	strb	r7, [r4, #188]	; 0xbc
   21994:	ldr	r0, [r5]
   21998:	ldr	r1, [r0, r6, lsl #2]
   2199c:	mov	r0, r4
   219a0:	bl	11a64 <myhtml_insertion_mode_in_body@plt>
   219a4:	strb	r8, [r4, #188]	; 0xbc
   219a8:	add	r6, r6, #1
   219ac:	ldr	r0, [r5, #4]
   219b0:	cmp	r6, r0
   219b4:	bcc	21990 <myhtml_insertion_mode_in_table_text@@Base+0xf0>
   219b8:	ldr	r0, [r4, #172]	; 0xac
   219bc:	str	r0, [r4, #168]	; 0xa8
   219c0:	mov	r6, #1
   219c4:	mov	r0, r6
   219c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000219cc <myhtml_insertion_mode_in_caption@@Base>:
   219cc:	push	{r4, r5, fp, lr}
   219d0:	add	fp, sp, #8
   219d4:	mov	r4, r0
   219d8:	ldr	r0, [r1]
   219dc:	ldr	r2, [r1, #48]	; 0x30
   219e0:	tst	r2, #1
   219e4:	bne	21a8c <myhtml_insertion_mode_in_caption@@Base+0xc0>
   219e8:	sub	r2, r0, #126	; 0x7e
   219ec:	cmp	r2, #9
   219f0:	bhi	21a04 <myhtml_insertion_mode_in_caption@@Base+0x38>
   219f4:	mov	r3, #1
   219f8:	movw	r5, #627	; 0x273
   219fc:	tst	r5, r3, lsl r2
   21a00:	bne	21a20 <myhtml_insertion_mode_in_caption@@Base+0x54>
   21a04:	sub	r0, r0, #27
   21a08:	cmp	r0, #5
   21a0c:	bhi	21c9c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   21a10:	mov	r2, #1
   21a14:	mov	r3, #49	; 0x31
   21a18:	tst	r3, r2, lsl r0
   21a1c:	beq	21c9c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   21a20:	mov	r5, #1
   21a24:	mov	r0, r4
   21a28:	mov	r1, #27
   21a2c:	mov	r2, #1
   21a30:	mov	r3, #64	; 0x40
   21a34:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   21a38:	cmp	r0, #0
   21a3c:	beq	21c90 <myhtml_insertion_mode_in_caption@@Base+0x2c4>
   21a40:	mov	r0, r4
   21a44:	mov	r1, #0
   21a48:	mov	r2, #0
   21a4c:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   21a50:	mov	r0, r4
   21a54:	bl	11a4c <myhtml_tree_current_node@plt>
   21a58:	mov	r1, #27
   21a5c:	bl	11e9c <myhtml_is_html_node@plt>
   21a60:	mov	r0, r4
   21a64:	mov	r1, #27
   21a68:	mov	r2, #1
   21a6c:	mov	r3, #0
   21a70:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   21a74:	mov	r0, r4
   21a78:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21a7c:	mov	r0, #8
   21a80:	str	r0, [r4, #168]	; 0xa8
   21a84:	mov	r0, r5
   21a88:	pop	{r4, r5, fp, pc}
   21a8c:	sub	r0, r0, #23
   21a90:	cmp	r0, #112	; 0x70
   21a94:	bhi	21c9c <myhtml_insertion_mode_in_caption@@Base+0x2d0>
   21a98:	mov	r5, #0
   21a9c:	add	r2, pc, #4
   21aa0:	ldr	r0, [r2, r0, lsl #2]
   21aa4:	add	pc, r2, r0
   21aa8:	andeq	r0, r0, ip, ror #3
   21aac:	strdeq	r0, [r0], -r4
   21ab0:	strdeq	r0, [r0], -r4
   21ab4:	strdeq	r0, [r0], -r4
   21ab8:	andeq	r0, r0, r4, asr #3
   21abc:	strdeq	r0, [r0], -r4
   21ac0:	strdeq	r0, [r0], -r4
   21ac4:	strdeq	r0, [r0], -r4
   21ac8:	andeq	r0, r0, ip, ror #3
   21acc:	andeq	r0, r0, ip, ror #3
   21ad0:	strdeq	r0, [r0], -r4
   21ad4:	strdeq	r0, [r0], -r4
   21ad8:	strdeq	r0, [r0], -r4
   21adc:	strdeq	r0, [r0], -r4
   21ae0:	strdeq	r0, [r0], -r4
   21ae4:	strdeq	r0, [r0], -r4
   21ae8:	strdeq	r0, [r0], -r4
   21aec:	strdeq	r0, [r0], -r4
   21af0:	strdeq	r0, [r0], -r4
   21af4:	strdeq	r0, [r0], -r4
   21af8:	strdeq	r0, [r0], -r4
   21afc:	strdeq	r0, [r0], -r4
   21b00:	strdeq	r0, [r0], -r4
   21b04:	strdeq	r0, [r0], -r4
   21b08:	strdeq	r0, [r0], -r4
   21b0c:	strdeq	r0, [r0], -r4
   21b10:	strdeq	r0, [r0], -r4
   21b14:	strdeq	r0, [r0], -r4
   21b18:	strdeq	r0, [r0], -r4
   21b1c:	strdeq	r0, [r0], -r4
   21b20:	strdeq	r0, [r0], -r4
   21b24:	strdeq	r0, [r0], -r4
   21b28:	strdeq	r0, [r0], -r4
   21b2c:	strdeq	r0, [r0], -r4
   21b30:	strdeq	r0, [r0], -r4
   21b34:	strdeq	r0, [r0], -r4
   21b38:	strdeq	r0, [r0], -r4
   21b3c:	strdeq	r0, [r0], -r4
   21b40:	strdeq	r0, [r0], -r4
   21b44:	strdeq	r0, [r0], -r4
   21b48:	strdeq	r0, [r0], -r4
   21b4c:	strdeq	r0, [r0], -r4
   21b50:	andeq	r0, r0, ip, ror #3
   21b54:	strdeq	r0, [r0], -r4
   21b58:	strdeq	r0, [r0], -r4
   21b5c:	strdeq	r0, [r0], -r4
   21b60:	strdeq	r0, [r0], -r4
   21b64:	strdeq	r0, [r0], -r4
   21b68:	strdeq	r0, [r0], -r4
   21b6c:	strdeq	r0, [r0], -r4
   21b70:	strdeq	r0, [r0], -r4
   21b74:	strdeq	r0, [r0], -r4
   21b78:	strdeq	r0, [r0], -r4
   21b7c:	strdeq	r0, [r0], -r4
   21b80:	strdeq	r0, [r0], -r4
   21b84:	strdeq	r0, [r0], -r4
   21b88:	strdeq	r0, [r0], -r4
   21b8c:	strdeq	r0, [r0], -r4
   21b90:	strdeq	r0, [r0], -r4
   21b94:	strdeq	r0, [r0], -r4
   21b98:	strdeq	r0, [r0], -r4
   21b9c:	strdeq	r0, [r0], -r4
   21ba0:	strdeq	r0, [r0], -r4
   21ba4:	strdeq	r0, [r0], -r4
   21ba8:	strdeq	r0, [r0], -r4
   21bac:	strdeq	r0, [r0], -r4
   21bb0:	strdeq	r0, [r0], -r4
   21bb4:	strdeq	r0, [r0], -r4
   21bb8:	strdeq	r0, [r0], -r4
   21bbc:	strdeq	r0, [r0], -r4
   21bc0:	strdeq	r0, [r0], -r4
   21bc4:	strdeq	r0, [r0], -r4
   21bc8:	strdeq	r0, [r0], -r4
   21bcc:	strdeq	r0, [r0], -r4
   21bd0:	strdeq	r0, [r0], -r4
   21bd4:	strdeq	r0, [r0], -r4
   21bd8:	strdeq	r0, [r0], -r4
   21bdc:	strdeq	r0, [r0], -r4
   21be0:	strdeq	r0, [r0], -r4
   21be4:	strdeq	r0, [r0], -r4
   21be8:	strdeq	r0, [r0], -r4
   21bec:	strdeq	r0, [r0], -r4
   21bf0:	strdeq	r0, [r0], -r4
   21bf4:	strdeq	r0, [r0], -r4
   21bf8:	strdeq	r0, [r0], -r4
   21bfc:	strdeq	r0, [r0], -r4
   21c00:	strdeq	r0, [r0], -r4
   21c04:	strdeq	r0, [r0], -r4
   21c08:	strdeq	r0, [r0], -r4
   21c0c:	strdeq	r0, [r0], -r4
   21c10:	strdeq	r0, [r0], -r4
   21c14:	strdeq	r0, [r0], -r4
   21c18:	strdeq	r0, [r0], -r4
   21c1c:	strdeq	r0, [r0], -r4
   21c20:	strdeq	r0, [r0], -r4
   21c24:	strdeq	r0, [r0], -r4
   21c28:	strdeq	r0, [r0], -r4
   21c2c:	strdeq	r0, [r0], -r4
   21c30:	strdeq	r0, [r0], -r4
   21c34:	strdeq	r0, [r0], -r4
   21c38:	strdeq	r0, [r0], -r4
   21c3c:	strdeq	r0, [r0], -r4
   21c40:	andeq	r0, r0, r0, lsl #4
   21c44:	andeq	r0, r0, ip, ror #3
   21c48:	andeq	r0, r0, ip, ror #3
   21c4c:	strdeq	r0, [r0], -r4
   21c50:	strdeq	r0, [r0], -r4
   21c54:	andeq	r0, r0, ip, ror #3
   21c58:	andeq	r0, r0, ip, ror #3
   21c5c:	andeq	r0, r0, ip, ror #3
   21c60:	strdeq	r0, [r0], -r4
   21c64:	strdeq	r0, [r0], -r4
   21c68:	andeq	r0, r0, ip, ror #3
   21c6c:	mov	r0, r4
   21c70:	mov	r1, #27
   21c74:	mov	r2, #1
   21c78:	mov	r3, #64	; 0x40
   21c7c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   21c80:	cmp	r0, #0
   21c84:	beq	21c94 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   21c88:	mov	r5, #0
   21c8c:	b	21a40 <myhtml_insertion_mode_in_caption@@Base+0x74>
   21c90:	mov	r5, #0
   21c94:	mov	r0, r5
   21c98:	pop	{r4, r5, fp, pc}
   21c9c:	mov	r0, r4
   21ca0:	pop	{r4, r5, fp, lr}
   21ca4:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   21ca8:	mov	r0, r4
   21cac:	mov	r1, #27
   21cb0:	mov	r2, #1
   21cb4:	mov	r3, #64	; 0x40
   21cb8:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   21cbc:	cmp	r0, #0
   21cc0:	beq	21c94 <myhtml_insertion_mode_in_caption@@Base+0x2c8>
   21cc4:	mov	r0, r4
   21cc8:	mov	r1, #0
   21ccc:	mov	r2, #0
   21cd0:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   21cd4:	mov	r0, r4
   21cd8:	bl	11a4c <myhtml_tree_current_node@plt>
   21cdc:	mov	r1, #27
   21ce0:	bl	11e9c <myhtml_is_html_node@plt>
   21ce4:	mov	r0, r4
   21ce8:	mov	r1, #27
   21cec:	mov	r2, #1
   21cf0:	mov	r3, #0
   21cf4:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   21cf8:	mov	r0, r4
   21cfc:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21d00:	mov	r0, #8
   21d04:	str	r0, [r4, #168]	; 0xa8
   21d08:	mov	r5, #1
   21d0c:	mov	r0, r5
   21d10:	pop	{r4, r5, fp, pc}

00021d14 <myhtml_insertion_mode_in_column_group@@Base>:
   21d14:	push	{r4, r5, fp, lr}
   21d18:	add	fp, sp, #8
   21d1c:	mov	r5, r0
   21d20:	ldr	r0, [r1]
   21d24:	ldr	r2, [r1, #48]	; 0x30
   21d28:	mov	r4, #0
   21d2c:	tst	r2, #1
   21d30:	bne	21dfc <myhtml_insertion_mode_in_column_group@@Base+0xe8>
   21d34:	cmp	r0, #64	; 0x40
   21d38:	bgt	21e4c <myhtml_insertion_mode_in_column_group@@Base+0x138>
   21d3c:	sub	r0, r0, #1
   21d40:	cmp	r0, #30
   21d44:	bhi	21e70 <myhtml_insertion_mode_in_column_group@@Base+0x15c>
   21d48:	add	r2, pc, #4
   21d4c:	ldr	r0, [r2, r0, lsl #2]
   21d50:	add	pc, r2, r0
   21d54:	andeq	r0, r0, ip, ror r0
   21d58:	andeq	r0, r0, r4, ror #2
   21d5c:	andeq	r0, r0, r0, asr r1
   21d60:	andeq	r0, r0, ip, lsl r1
   21d64:	andeq	r0, r0, ip, lsl r1
   21d68:	andeq	r0, r0, ip, lsl r1
   21d6c:	andeq	r0, r0, ip, lsl r1
   21d70:	andeq	r0, r0, ip, lsl r1
   21d74:	andeq	r0, r0, ip, lsl r1
   21d78:	andeq	r0, r0, ip, lsl r1
   21d7c:	andeq	r0, r0, ip, lsl r1
   21d80:	andeq	r0, r0, ip, lsl r1
   21d84:	andeq	r0, r0, ip, lsl r1
   21d88:	andeq	r0, r0, ip, lsl r1
   21d8c:	andeq	r0, r0, ip, lsl r1
   21d90:	andeq	r0, r0, ip, lsl r1
   21d94:	andeq	r0, r0, ip, lsl r1
   21d98:	andeq	r0, r0, ip, lsl r1
   21d9c:	andeq	r0, r0, ip, lsl r1
   21da0:	andeq	r0, r0, ip, lsl r1
   21da4:	andeq	r0, r0, ip, lsl r1
   21da8:	andeq	r0, r0, ip, lsl r1
   21dac:	andeq	r0, r0, ip, lsl r1
   21db0:	andeq	r0, r0, ip, lsl r1
   21db4:	andeq	r0, r0, ip, lsl r1
   21db8:	andeq	r0, r0, ip, lsl r1
   21dbc:	andeq	r0, r0, ip, lsl r1
   21dc0:	andeq	r0, r0, ip, lsl r1
   21dc4:	andeq	r0, r0, ip, lsl r1
   21dc8:	andeq	r0, r0, ip, lsl r1
   21dcc:	andeq	r0, r0, ip, ror r1
   21dd0:	ldr	r0, [r1, #48]	; 0x30
   21dd4:	tst	r0, #8
   21dd8:	bne	21ee8 <myhtml_insertion_mode_in_column_group@@Base+0x1d4>
   21ddc:	mov	r0, r5
   21de0:	bl	11380 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   21de4:	cmp	r0, #0
   21de8:	beq	21e70 <myhtml_insertion_mode_in_column_group@@Base+0x15c>
   21dec:	mov	r1, r0
   21df0:	mov	r0, r5
   21df4:	bl	1141c <myhtml_tree_node_insert_text@plt>
   21df8:	b	21e70 <myhtml_insertion_mode_in_column_group@@Base+0x15c>
   21dfc:	cmp	r0, #31
   21e00:	beq	21ea4 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   21e04:	cmp	r0, #128	; 0x80
   21e08:	beq	21eac <myhtml_insertion_mode_in_column_group@@Base+0x198>
   21e0c:	cmp	r0, #32
   21e10:	bne	21e70 <myhtml_insertion_mode_in_column_group@@Base+0x15c>
   21e14:	mov	r0, r5
   21e18:	bl	11a4c <myhtml_tree_current_node@plt>
   21e1c:	cmp	r0, #0
   21e20:	beq	21ea4 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   21e24:	mov	r1, #32
   21e28:	bl	11e9c <myhtml_is_html_node@plt>
   21e2c:	cmp	r0, #0
   21e30:	beq	21ea4 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   21e34:	mov	r0, r5
   21e38:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   21e3c:	mov	r0, #8
   21e40:	str	r0, [r5, #168]	; 0xa8
   21e44:	mov	r0, r4
   21e48:	pop	{r4, r5, fp, pc}
   21e4c:	cmp	r0, #65	; 0x41
   21e50:	beq	21e64 <myhtml_insertion_mode_in_column_group@@Base+0x150>
   21e54:	cmp	r0, #128	; 0x80
   21e58:	beq	21eac <myhtml_insertion_mode_in_column_group@@Base+0x198>
   21e5c:	cmp	r0, #251	; 0xfb
   21e60:	bne	21e70 <myhtml_insertion_mode_in_column_group@@Base+0x15c>
   21e64:	mov	r0, r5
   21e68:	pop	{r4, r5, fp, lr}
   21e6c:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   21e70:	mov	r0, r5
   21e74:	bl	11a4c <myhtml_tree_current_node@plt>
   21e78:	cmp	r0, #0
   21e7c:	beq	21ea4 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   21e80:	mov	r1, #32
   21e84:	bl	11e9c <myhtml_is_html_node@plt>
   21e88:	cmp	r0, #0
   21e8c:	beq	21ea4 <myhtml_insertion_mode_in_column_group@@Base+0x190>
   21e90:	mov	r0, r5
   21e94:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   21e98:	mov	r0, #8
   21e9c:	str	r0, [r5, #168]	; 0xa8
   21ea0:	mov	r4, #1
   21ea4:	mov	r0, r4
   21ea8:	pop	{r4, r5, fp, pc}
   21eac:	mov	r0, r5
   21eb0:	pop	{r4, r5, fp, lr}
   21eb4:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   21eb8:	mov	r4, #0
   21ebc:	mov	r0, r5
   21ec0:	mov	r2, #0
   21ec4:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   21ec8:	mov	r0, r4
   21ecc:	pop	{r4, r5, fp, pc}
   21ed0:	mov	r0, r5
   21ed4:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   21ed8:	mov	r0, r5
   21edc:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   21ee0:	mov	r0, r4
   21ee4:	pop	{r4, r5, fp, pc}
   21ee8:	mov	r0, r5
   21eec:	bl	1141c <myhtml_tree_node_insert_text@plt>
   21ef0:	mov	r0, r4
   21ef4:	pop	{r4, r5, fp, pc}

00021ef8 <myhtml_insertion_mode_in_table_body@@Base>:
   21ef8:	push	{r4, r5, r6, r7, fp, lr}
   21efc:	add	fp, sp, #16
   21f00:	mov	r6, r1
   21f04:	mov	r4, r0
   21f08:	ldr	r1, [r1]
   21f0c:	ldr	r0, [r6, #48]	; 0x30
   21f10:	tst	r0, #1
   21f14:	bne	21f64 <myhtml_insertion_mode_in_table_body@@Base+0x6c>
   21f18:	sub	r0, r1, #126	; 0x7e
   21f1c:	cmp	r0, #9
   21f20:	bhi	221ac <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   21f24:	mov	r2, #1
   21f28:	mov	r3, #81	; 0x51
   21f2c:	tst	r3, r2, lsl r0
   21f30:	bne	221c8 <myhtml_insertion_mode_in_table_body@@Base+0x2d0>
   21f34:	mov	r3, #34	; 0x22
   21f38:	tst	r3, r2, lsl r0
   21f3c:	beq	2217c <myhtml_insertion_mode_in_table_body@@Base+0x284>
   21f40:	mov	r0, r4
   21f44:	bl	117d0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   21f48:	mov	r5, #1
   21f4c:	mov	r0, r4
   21f50:	mov	r1, #135	; 0x87
   21f54:	mov	r2, #1
   21f58:	bl	11d88 <myhtml_tree_node_insert@plt>
   21f5c:	mov	r0, #13
   21f60:	b	22170 <myhtml_insertion_mode_in_table_body@@Base+0x278>
   21f64:	sub	r0, r1, #23
   21f68:	cmp	r0, #112	; 0x70
   21f6c:	bhi	22250 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   21f70:	mov	r5, #0
   21f74:	add	r2, pc, #4
   21f78:	ldr	r0, [r2, r0, lsl #2]
   21f7c:	add	pc, r2, r0
   21f80:	andeq	r0, r0, r8, asr #5
   21f84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21f88:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21f8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21f90:	andeq	r0, r0, r8, asr #5
   21f94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21f98:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21f9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fa0:	andeq	r0, r0, r8, asr #5
   21fa4:	andeq	r0, r0, r8, asr #5
   21fa8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fb0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fb4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fb8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fcc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fd0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fd4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fd8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fdc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fe0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fe4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fe8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21fec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ff0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ff4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ff8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   21ffc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22000:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22004:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22008:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2200c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22010:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22014:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22018:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2201c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22020:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22024:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22028:	andeq	r0, r0, r8, asr #5
   2202c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22030:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22034:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22038:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2203c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22040:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22044:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22048:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2204c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22050:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22054:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22058:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2205c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22060:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22064:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22068:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2206c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22070:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22074:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22078:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2207c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22080:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22084:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22088:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2208c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22090:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22094:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22098:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2209c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   220fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22100:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22104:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22108:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2210c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22110:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22114:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22118:	andeq	r0, r0, r0, ror #5
   2211c:	andeq	r0, r0, r4, asr #3
   22120:	andeq	r0, r0, r8, asr #5
   22124:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22128:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2212c:	andeq	r0, r0, r4, asr #3
   22130:	andeq	r0, r0, r8, asr #5
   22134:	andeq	r0, r0, r4, asr #3
   22138:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2213c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22140:	andeq	r0, r0, r8, asr #5
   22144:	mov	r0, r4
   22148:	mov	r2, #1
   2214c:	mov	r3, #64	; 0x40
   22150:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22154:	cmp	r0, #0
   22158:	beq	22248 <myhtml_insertion_mode_in_table_body@@Base+0x350>
   2215c:	mov	r0, r4
   22160:	bl	117d0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22164:	mov	r0, r4
   22168:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2216c:	mov	r0, #8
   22170:	str	r0, [r4, #168]	; 0xa8
   22174:	mov	r0, r5
   22178:	pop	{r4, r5, r6, r7, fp, pc}
   2217c:	cmp	r0, #9
   22180:	bne	221ac <myhtml_insertion_mode_in_table_body@@Base+0x2b4>
   22184:	mov	r0, r4
   22188:	bl	117d0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   2218c:	mov	r0, r4
   22190:	mov	r1, r6
   22194:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   22198:	mov	r0, #13
   2219c:	str	r0, [r4, #168]	; 0xa8
   221a0:	mov	r5, #0
   221a4:	mov	r0, r5
   221a8:	pop	{r4, r5, r6, r7, fp, pc}
   221ac:	sub	r0, r1, #27
   221b0:	cmp	r0, #5
   221b4:	bhi	22250 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   221b8:	mov	r1, #1
   221bc:	mov	r2, #49	; 0x31
   221c0:	tst	r2, r1, lsl r0
   221c4:	beq	22250 <myhtml_insertion_mode_in_table_body@@Base+0x358>
   221c8:	mov	r0, r4
   221cc:	mov	r1, #126	; 0x7e
   221d0:	mov	r2, #1
   221d4:	mov	r3, #64	; 0x40
   221d8:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   221dc:	mov	r6, r0
   221e0:	mov	r0, r4
   221e4:	mov	r1, #130	; 0x82
   221e8:	mov	r2, #1
   221ec:	mov	r3, #64	; 0x40
   221f0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   221f4:	mov	r5, r0
   221f8:	mov	r0, r4
   221fc:	mov	r1, #132	; 0x84
   22200:	mov	r2, #1
   22204:	mov	r3, #64	; 0x40
   22208:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   2220c:	cmp	r6, #0
   22210:	cmpeq	r5, #0
   22214:	beq	2223c <myhtml_insertion_mode_in_table_body@@Base+0x344>
   22218:	mov	r0, r4
   2221c:	bl	117d0 <myhtml_tree_clear_stack_back_table_body_context@plt>
   22220:	mov	r0, r4
   22224:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22228:	mov	r0, #8
   2222c:	str	r0, [r4, #168]	; 0xa8
   22230:	mov	r5, #1
   22234:	mov	r0, r5
   22238:	pop	{r4, r5, r6, r7, fp, pc}
   2223c:	mov	r5, #0
   22240:	cmp	r0, #0
   22244:	bne	22218 <myhtml_insertion_mode_in_table_body@@Base+0x320>
   22248:	mov	r0, r5
   2224c:	pop	{r4, r5, r6, r7, fp, pc}
   22250:	mov	r0, r4
   22254:	mov	r1, r6
   22258:	pop	{r4, r5, r6, r7, fp, lr}
   2225c:	b	211c8 <myhtml_insertion_mode_in_table@@Base>
   22260:	mov	r0, r4
   22264:	mov	r1, #126	; 0x7e
   22268:	mov	r2, #1
   2226c:	mov	r3, #64	; 0x40
   22270:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22274:	mov	r7, r0
   22278:	mov	r0, r4
   2227c:	mov	r1, #130	; 0x82
   22280:	mov	r2, #1
   22284:	mov	r3, #64	; 0x40
   22288:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   2228c:	mov	r6, r0
   22290:	mov	r0, r4
   22294:	mov	r1, #132	; 0x84
   22298:	mov	r2, #1
   2229c:	mov	r3, #64	; 0x40
   222a0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   222a4:	cmp	r7, #0
   222a8:	cmpeq	r6, #0
   222ac:	bne	22218 <myhtml_insertion_mode_in_table_body@@Base+0x320>
   222b0:	b	22240 <myhtml_insertion_mode_in_table_body@@Base+0x348>

000222b4 <myhtml_insertion_mode_in_row@@Base>:
   222b4:	push	{r4, r5, r6, sl, fp, lr}
   222b8:	add	fp, sp, #16
   222bc:	mov	r6, r1
   222c0:	mov	r4, r0
   222c4:	ldr	r1, [r1]
   222c8:	ldr	r0, [r6, #48]	; 0x30
   222cc:	tst	r0, #1
   222d0:	bne	2232c <myhtml_insertion_mode_in_row@@Base+0x78>
   222d4:	sub	r0, r1, #126	; 0x7e
   222d8:	cmp	r0, #9
   222dc:	bhi	22564 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222e0:	mov	r2, #1
   222e4:	movw	r3, #593	; 0x251
   222e8:	tst	r3, r2, lsl r0
   222ec:	bne	22580 <myhtml_insertion_mode_in_row@@Base+0x2cc>
   222f0:	mov	r3, #34	; 0x22
   222f4:	tst	r3, r2, lsl r0
   222f8:	beq	22564 <myhtml_insertion_mode_in_row@@Base+0x2b0>
   222fc:	mov	r0, r4
   22300:	bl	11848 <myhtml_tree_clear_stack_back_table_row_context@plt>
   22304:	mov	r0, r4
   22308:	mov	r1, r6
   2230c:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   22310:	ldr	r0, [r4]
   22314:	ldr	r1, [r0, #36]	; 0x24
   22318:	mov	r0, r4
   2231c:	bl	11548 <myhtml_tree_active_formatting_append@plt>
   22320:	mov	r0, #14
   22324:	str	r0, [r4, #168]	; 0xa8
   22328:	b	225c0 <myhtml_insertion_mode_in_row@@Base+0x30c>
   2232c:	sub	r0, r1, #23
   22330:	cmp	r0, #112	; 0x70
   22334:	bhi	225cc <myhtml_insertion_mode_in_row@@Base+0x318>
   22338:	mov	r5, #0
   2233c:	add	r2, pc, #4
   22340:	ldr	r0, [r2, r0, lsl #2]
   22344:	add	pc, r2, r0
   22348:	andeq	r0, r0, ip, ror r2
   2234c:	andeq	r0, r0, r4, lsl #5
   22350:	andeq	r0, r0, r4, lsl #5
   22354:	andeq	r0, r0, r4, lsl #5
   22358:	andeq	r0, r0, ip, ror r2
   2235c:	andeq	r0, r0, r4, lsl #5
   22360:	andeq	r0, r0, r4, lsl #5
   22364:	andeq	r0, r0, r4, lsl #5
   22368:	andeq	r0, r0, ip, ror r2
   2236c:	andeq	r0, r0, ip, ror r2
   22370:	andeq	r0, r0, r4, lsl #5
   22374:	andeq	r0, r0, r4, lsl #5
   22378:	andeq	r0, r0, r4, lsl #5
   2237c:	andeq	r0, r0, r4, lsl #5
   22380:	andeq	r0, r0, r4, lsl #5
   22384:	andeq	r0, r0, r4, lsl #5
   22388:	andeq	r0, r0, r4, lsl #5
   2238c:	andeq	r0, r0, r4, lsl #5
   22390:	andeq	r0, r0, r4, lsl #5
   22394:	andeq	r0, r0, r4, lsl #5
   22398:	andeq	r0, r0, r4, lsl #5
   2239c:	andeq	r0, r0, r4, lsl #5
   223a0:	andeq	r0, r0, r4, lsl #5
   223a4:	andeq	r0, r0, r4, lsl #5
   223a8:	andeq	r0, r0, r4, lsl #5
   223ac:	andeq	r0, r0, r4, lsl #5
   223b0:	andeq	r0, r0, r4, lsl #5
   223b4:	andeq	r0, r0, r4, lsl #5
   223b8:	andeq	r0, r0, r4, lsl #5
   223bc:	andeq	r0, r0, r4, lsl #5
   223c0:	andeq	r0, r0, r4, lsl #5
   223c4:	andeq	r0, r0, r4, lsl #5
   223c8:	andeq	r0, r0, r4, lsl #5
   223cc:	andeq	r0, r0, r4, lsl #5
   223d0:	andeq	r0, r0, r4, lsl #5
   223d4:	andeq	r0, r0, r4, lsl #5
   223d8:	andeq	r0, r0, r4, lsl #5
   223dc:	andeq	r0, r0, r4, lsl #5
   223e0:	andeq	r0, r0, r4, lsl #5
   223e4:	andeq	r0, r0, r4, lsl #5
   223e8:	andeq	r0, r0, r4, lsl #5
   223ec:	andeq	r0, r0, r4, lsl #5
   223f0:	andeq	r0, r0, ip, ror r2
   223f4:	andeq	r0, r0, r4, lsl #5
   223f8:	andeq	r0, r0, r4, lsl #5
   223fc:	andeq	r0, r0, r4, lsl #5
   22400:	andeq	r0, r0, r4, lsl #5
   22404:	andeq	r0, r0, r4, lsl #5
   22408:	andeq	r0, r0, r4, lsl #5
   2240c:	andeq	r0, r0, r4, lsl #5
   22410:	andeq	r0, r0, r4, lsl #5
   22414:	andeq	r0, r0, r4, lsl #5
   22418:	andeq	r0, r0, r4, lsl #5
   2241c:	andeq	r0, r0, r4, lsl #5
   22420:	andeq	r0, r0, r4, lsl #5
   22424:	andeq	r0, r0, r4, lsl #5
   22428:	andeq	r0, r0, r4, lsl #5
   2242c:	andeq	r0, r0, r4, lsl #5
   22430:	andeq	r0, r0, r4, lsl #5
   22434:	andeq	r0, r0, r4, lsl #5
   22438:	andeq	r0, r0, r4, lsl #5
   2243c:	andeq	r0, r0, r4, lsl #5
   22440:	andeq	r0, r0, r4, lsl #5
   22444:	andeq	r0, r0, r4, lsl #5
   22448:	andeq	r0, r0, r4, lsl #5
   2244c:	andeq	r0, r0, r4, lsl #5
   22450:	andeq	r0, r0, r4, lsl #5
   22454:	andeq	r0, r0, r4, lsl #5
   22458:	andeq	r0, r0, r4, lsl #5
   2245c:	andeq	r0, r0, r4, lsl #5
   22460:	andeq	r0, r0, r4, lsl #5
   22464:	andeq	r0, r0, r4, lsl #5
   22468:	andeq	r0, r0, r4, lsl #5
   2246c:	andeq	r0, r0, r4, lsl #5
   22470:	andeq	r0, r0, r4, lsl #5
   22474:	andeq	r0, r0, r4, lsl #5
   22478:	andeq	r0, r0, r4, lsl #5
   2247c:	andeq	r0, r0, r4, lsl #5
   22480:	andeq	r0, r0, r4, lsl #5
   22484:	andeq	r0, r0, r4, lsl #5
   22488:	andeq	r0, r0, r4, lsl #5
   2248c:	andeq	r0, r0, r4, lsl #5
   22490:	andeq	r0, r0, r4, lsl #5
   22494:	andeq	r0, r0, r4, lsl #5
   22498:	andeq	r0, r0, r4, lsl #5
   2249c:	andeq	r0, r0, r4, lsl #5
   224a0:	andeq	r0, r0, r4, lsl #5
   224a4:	andeq	r0, r0, r4, lsl #5
   224a8:	andeq	r0, r0, r4, lsl #5
   224ac:	andeq	r0, r0, r4, lsl #5
   224b0:	andeq	r0, r0, r4, lsl #5
   224b4:	andeq	r0, r0, r4, lsl #5
   224b8:	andeq	r0, r0, r4, lsl #5
   224bc:	andeq	r0, r0, r4, lsl #5
   224c0:	andeq	r0, r0, r4, lsl #5
   224c4:	andeq	r0, r0, r4, lsl #5
   224c8:	andeq	r0, r0, r4, lsl #5
   224cc:	andeq	r0, r0, r4, lsl #5
   224d0:	andeq	r0, r0, r4, lsl #5
   224d4:	andeq	r0, r0, r4, lsl #5
   224d8:	andeq	r0, r0, r4, lsl #5
   224dc:	andeq	r0, r0, r4, lsl #5
   224e0:	ldrdeq	r0, [r0], -ip
   224e4:	andeq	r0, r0, r4, asr #3
   224e8:	andeq	r0, r0, ip, ror r2
   224ec:	andeq	r0, r0, r4, lsl #5
   224f0:	andeq	r0, r0, r4, lsl #5
   224f4:	andeq	r0, r0, r4, asr #3
   224f8:	andeq	r0, r0, ip, ror r2
   224fc:	andeq	r0, r0, r4, asr #3
   22500:	andeq	r0, r0, r4, lsl #5
   22504:	andeq	r0, r0, r4, lsl #5
   22508:	muleq	r0, r4, r2
   2250c:	mov	r0, r4
   22510:	mov	r2, #1
   22514:	mov	r3, #64	; 0x40
   22518:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   2251c:	cmp	r0, #0
   22520:	beq	225c4 <myhtml_insertion_mode_in_row@@Base+0x310>
   22524:	mov	r0, r4
   22528:	mov	r1, #135	; 0x87
   2252c:	mov	r2, #1
   22530:	mov	r3, #64	; 0x40
   22534:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22538:	cmp	r0, #0
   2253c:	beq	225c4 <myhtml_insertion_mode_in_row@@Base+0x310>
   22540:	mov	r0, r4
   22544:	bl	11848 <myhtml_tree_clear_stack_back_table_row_context@plt>
   22548:	mov	r0, r4
   2254c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22550:	mov	r0, #12
   22554:	str	r0, [r4, #168]	; 0xa8
   22558:	mov	r5, #1
   2255c:	mov	r0, r5
   22560:	pop	{r4, r5, r6, sl, fp, pc}
   22564:	sub	r0, r1, #27
   22568:	cmp	r0, #5
   2256c:	bhi	225cc <myhtml_insertion_mode_in_row@@Base+0x318>
   22570:	mov	r1, #1
   22574:	mov	r2, #49	; 0x31
   22578:	tst	r2, r1, lsl r0
   2257c:	beq	225cc <myhtml_insertion_mode_in_row@@Base+0x318>
   22580:	mov	r5, #1
   22584:	mov	r0, r4
   22588:	mov	r1, #135	; 0x87
   2258c:	mov	r2, #1
   22590:	mov	r3, #64	; 0x40
   22594:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22598:	cmp	r0, #0
   2259c:	beq	225c0 <myhtml_insertion_mode_in_row@@Base+0x30c>
   225a0:	mov	r0, r4
   225a4:	bl	11848 <myhtml_tree_clear_stack_back_table_row_context@plt>
   225a8:	mov	r0, r4
   225ac:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   225b0:	mov	r0, #12
   225b4:	str	r0, [r4, #168]	; 0xa8
   225b8:	mov	r0, r5
   225bc:	pop	{r4, r5, r6, sl, fp, pc}
   225c0:	mov	r5, #0
   225c4:	mov	r0, r5
   225c8:	pop	{r4, r5, r6, sl, fp, pc}
   225cc:	mov	r0, r4
   225d0:	mov	r1, r6
   225d4:	pop	{r4, r5, r6, sl, fp, lr}
   225d8:	b	211c8 <myhtml_insertion_mode_in_table@@Base>
   225dc:	mov	r0, r4
   225e0:	mov	r1, #135	; 0x87
   225e4:	mov	r2, #1
   225e8:	mov	r3, #64	; 0x40
   225ec:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   225f0:	cmp	r0, #0
   225f4:	bne	225a0 <myhtml_insertion_mode_in_row@@Base+0x2ec>
   225f8:	b	225c4 <myhtml_insertion_mode_in_row@@Base+0x310>

000225fc <myhtml_insertion_mode_in_cell@@Base>:
   225fc:	push	{r4, r5, r6, r7, fp, lr}
   22600:	add	fp, sp, #16
   22604:	mov	r5, r1
   22608:	mov	r4, r0
   2260c:	ldr	r1, [r1]
   22610:	ldr	r0, [r5, #48]	; 0x30
   22614:	tst	r0, #1
   22618:	bne	226b0 <myhtml_insertion_mode_in_cell@@Base+0xb4>
   2261c:	sub	r0, r1, #126	; 0x7e
   22620:	cmp	r0, #9
   22624:	bhi	22638 <myhtml_insertion_mode_in_cell@@Base+0x3c>
   22628:	mov	r2, #1
   2262c:	movw	r3, #627	; 0x273
   22630:	tst	r3, r2, lsl r0
   22634:	bne	22654 <myhtml_insertion_mode_in_cell@@Base+0x58>
   22638:	sub	r0, r1, #27
   2263c:	cmp	r0, #5
   22640:	bhi	22968 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22644:	mov	r1, #1
   22648:	mov	r2, #49	; 0x31
   2264c:	tst	r2, r1, lsl r0
   22650:	beq	22968 <myhtml_insertion_mode_in_cell@@Base+0x36c>
   22654:	mov	r0, r4
   22658:	mov	r1, #127	; 0x7f
   2265c:	mov	r2, #1
   22660:	mov	r3, #64	; 0x40
   22664:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22668:	mov	r7, r0
   2266c:	mov	r0, r4
   22670:	mov	r1, #131	; 0x83
   22674:	mov	r2, #1
   22678:	mov	r3, #64	; 0x40
   2267c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22680:	mov	r1, r0
   22684:	orrs	r0, r7, r0
   22688:	mov	r6, #0
   2268c:	beq	22960 <myhtml_insertion_mode_in_cell@@Base+0x364>
   22690:	cmp	r7, #0
   22694:	movne	r1, r7
   22698:	mov	r0, r4
   2269c:	mov	r2, r5
   226a0:	bl	120f4 <myhtml_tree_close_cell@plt>
   226a4:	mov	r6, #1
   226a8:	mov	r0, r6
   226ac:	pop	{r4, r5, r6, r7, fp, pc}
   226b0:	sub	r0, r1, #23
   226b4:	cmp	r0, #112	; 0x70
   226b8:	bhi	22978 <myhtml_insertion_mode_in_cell@@Base+0x37c>
   226bc:	mov	r6, #0
   226c0:	add	r2, pc, #4
   226c4:	ldr	r0, [r2, r0, lsl #2]
   226c8:	add	pc, r2, r0
   226cc:	muleq	r0, r4, r2
   226d0:	andeq	r0, r0, ip, lsr #5
   226d4:	andeq	r0, r0, ip, lsr #5
   226d8:	andeq	r0, r0, ip, lsr #5
   226dc:	muleq	r0, r4, r2
   226e0:	andeq	r0, r0, ip, lsr #5
   226e4:	andeq	r0, r0, ip, lsr #5
   226e8:	andeq	r0, r0, ip, lsr #5
   226ec:	muleq	r0, r4, r2
   226f0:	muleq	r0, r4, r2
   226f4:	andeq	r0, r0, ip, lsr #5
   226f8:	andeq	r0, r0, ip, lsr #5
   226fc:	andeq	r0, r0, ip, lsr #5
   22700:	andeq	r0, r0, ip, lsr #5
   22704:	andeq	r0, r0, ip, lsr #5
   22708:	andeq	r0, r0, ip, lsr #5
   2270c:	andeq	r0, r0, ip, lsr #5
   22710:	andeq	r0, r0, ip, lsr #5
   22714:	andeq	r0, r0, ip, lsr #5
   22718:	andeq	r0, r0, ip, lsr #5
   2271c:	andeq	r0, r0, ip, lsr #5
   22720:	andeq	r0, r0, ip, lsr #5
   22724:	andeq	r0, r0, ip, lsr #5
   22728:	andeq	r0, r0, ip, lsr #5
   2272c:	andeq	r0, r0, ip, lsr #5
   22730:	andeq	r0, r0, ip, lsr #5
   22734:	andeq	r0, r0, ip, lsr #5
   22738:	andeq	r0, r0, ip, lsr #5
   2273c:	andeq	r0, r0, ip, lsr #5
   22740:	andeq	r0, r0, ip, lsr #5
   22744:	andeq	r0, r0, ip, lsr #5
   22748:	andeq	r0, r0, ip, lsr #5
   2274c:	andeq	r0, r0, ip, lsr #5
   22750:	andeq	r0, r0, ip, lsr #5
   22754:	andeq	r0, r0, ip, lsr #5
   22758:	andeq	r0, r0, ip, lsr #5
   2275c:	andeq	r0, r0, ip, lsr #5
   22760:	andeq	r0, r0, ip, lsr #5
   22764:	andeq	r0, r0, ip, lsr #5
   22768:	andeq	r0, r0, ip, lsr #5
   2276c:	andeq	r0, r0, ip, lsr #5
   22770:	andeq	r0, r0, ip, lsr #5
   22774:	muleq	r0, r4, r2
   22778:	andeq	r0, r0, ip, lsr #5
   2277c:	andeq	r0, r0, ip, lsr #5
   22780:	andeq	r0, r0, ip, lsr #5
   22784:	andeq	r0, r0, ip, lsr #5
   22788:	andeq	r0, r0, ip, lsr #5
   2278c:	andeq	r0, r0, ip, lsr #5
   22790:	andeq	r0, r0, ip, lsr #5
   22794:	andeq	r0, r0, ip, lsr #5
   22798:	andeq	r0, r0, ip, lsr #5
   2279c:	andeq	r0, r0, ip, lsr #5
   227a0:	andeq	r0, r0, ip, lsr #5
   227a4:	andeq	r0, r0, ip, lsr #5
   227a8:	andeq	r0, r0, ip, lsr #5
   227ac:	andeq	r0, r0, ip, lsr #5
   227b0:	andeq	r0, r0, ip, lsr #5
   227b4:	andeq	r0, r0, ip, lsr #5
   227b8:	andeq	r0, r0, ip, lsr #5
   227bc:	andeq	r0, r0, ip, lsr #5
   227c0:	andeq	r0, r0, ip, lsr #5
   227c4:	andeq	r0, r0, ip, lsr #5
   227c8:	andeq	r0, r0, ip, lsr #5
   227cc:	andeq	r0, r0, ip, lsr #5
   227d0:	andeq	r0, r0, ip, lsr #5
   227d4:	andeq	r0, r0, ip, lsr #5
   227d8:	andeq	r0, r0, ip, lsr #5
   227dc:	andeq	r0, r0, ip, lsr #5
   227e0:	andeq	r0, r0, ip, lsr #5
   227e4:	andeq	r0, r0, ip, lsr #5
   227e8:	andeq	r0, r0, ip, lsr #5
   227ec:	andeq	r0, r0, ip, lsr #5
   227f0:	andeq	r0, r0, ip, lsr #5
   227f4:	andeq	r0, r0, ip, lsr #5
   227f8:	andeq	r0, r0, ip, lsr #5
   227fc:	andeq	r0, r0, ip, lsr #5
   22800:	andeq	r0, r0, ip, lsr #5
   22804:	andeq	r0, r0, ip, lsr #5
   22808:	andeq	r0, r0, ip, lsr #5
   2280c:	andeq	r0, r0, ip, lsr #5
   22810:	andeq	r0, r0, ip, lsr #5
   22814:	andeq	r0, r0, ip, lsr #5
   22818:	andeq	r0, r0, ip, lsr #5
   2281c:	andeq	r0, r0, ip, lsr #5
   22820:	andeq	r0, r0, ip, lsr #5
   22824:	andeq	r0, r0, ip, lsr #5
   22828:	andeq	r0, r0, ip, lsr #5
   2282c:	andeq	r0, r0, ip, lsr #5
   22830:	andeq	r0, r0, ip, lsr #5
   22834:	andeq	r0, r0, ip, lsr #5
   22838:	andeq	r0, r0, ip, lsr #5
   2283c:	andeq	r0, r0, ip, lsr #5
   22840:	andeq	r0, r0, ip, lsr #5
   22844:	andeq	r0, r0, ip, lsr #5
   22848:	andeq	r0, r0, ip, lsr #5
   2284c:	andeq	r0, r0, ip, lsr #5
   22850:	andeq	r0, r0, ip, lsr #5
   22854:	andeq	r0, r0, ip, lsr #5
   22858:	andeq	r0, r0, ip, lsr #5
   2285c:	andeq	r0, r0, ip, lsr #5
   22860:	andeq	r0, r0, ip, lsr #5
   22864:	andeq	r0, r0, r4, asr #3
   22868:	andeq	r0, r0, r4, asr #3
   2286c:	andeq	r0, r0, r4, lsr r2
   22870:	andeq	r0, r0, ip, lsr #5
   22874:	andeq	r0, r0, ip, lsr #5
   22878:	andeq	r0, r0, r4, asr #3
   2287c:	andeq	r0, r0, r4, lsr r2
   22880:	andeq	r0, r0, r4, asr #3
   22884:	andeq	r0, r0, ip, lsr #5
   22888:	andeq	r0, r0, ip, lsr #5
   2288c:	andeq	r0, r0, r4, asr #3
   22890:	mov	r0, r4
   22894:	mov	r2, #1
   22898:	mov	r3, #64	; 0x40
   2289c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   228a0:	cmp	r0, #0
   228a4:	beq	22960 <myhtml_insertion_mode_in_cell@@Base+0x364>
   228a8:	mov	r6, #1
   228ac:	mov	r0, r4
   228b0:	mov	r1, #127	; 0x7f
   228b4:	mov	r2, #1
   228b8:	mov	r3, #64	; 0x40
   228bc:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   228c0:	cmp	r0, #0
   228c4:	bne	228e8 <myhtml_insertion_mode_in_cell@@Base+0x2ec>
   228c8:	mov	r6, #1
   228cc:	mov	r0, r4
   228d0:	mov	r1, #131	; 0x83
   228d4:	mov	r2, #1
   228d8:	mov	r3, #64	; 0x40
   228dc:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   228e0:	cmp	r0, #0
   228e4:	beq	22960 <myhtml_insertion_mode_in_cell@@Base+0x364>
   228e8:	mov	r1, r0
   228ec:	mov	r0, r4
   228f0:	mov	r2, r5
   228f4:	bl	120f4 <myhtml_tree_close_cell@plt>
   228f8:	mov	r0, r6
   228fc:	pop	{r4, r5, r6, r7, fp, pc}
   22900:	mov	r0, r4
   22904:	mov	r2, #1
   22908:	mov	r3, #64	; 0x40
   2290c:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22910:	cmp	r0, #0
   22914:	beq	22960 <myhtml_insertion_mode_in_cell@@Base+0x364>
   22918:	mov	r6, #0
   2291c:	mov	r0, r4
   22920:	mov	r1, #0
   22924:	mov	r2, #0
   22928:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   2292c:	mov	r0, r4
   22930:	bl	11a4c <myhtml_tree_current_node@plt>
   22934:	ldr	r1, [r5]
   22938:	bl	11e9c <myhtml_is_html_node@plt>
   2293c:	ldr	r1, [r5]
   22940:	mov	r0, r4
   22944:	mov	r2, #1
   22948:	mov	r3, #0
   2294c:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   22950:	mov	r0, r4
   22954:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   22958:	mov	r0, #13
   2295c:	str	r0, [r4, #168]	; 0xa8
   22960:	mov	r0, r6
   22964:	pop	{r4, r5, r6, r7, fp, pc}
   22968:	mov	r0, r4
   2296c:	mov	r1, r5
   22970:	pop	{r4, r5, r6, r7, fp, lr}
   22974:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   22978:	mov	r0, r4
   2297c:	mov	r1, r5
   22980:	pop	{r4, r5, r6, r7, fp, lr}
   22984:	b	211c8 <myhtml_insertion_mode_in_table@@Base>

00022988 <myhtml_insertion_mode_in_select@@Base>:
   22988:	push	{r4, r5, r6, sl, fp, lr}
   2298c:	add	fp, sp, #16
   22990:	mov	r6, r1
   22994:	mov	r5, r0
   22998:	ldr	r0, [r1]
   2299c:	ldr	r1, [r1, #48]	; 0x30
   229a0:	tst	r1, #1
   229a4:	bne	22b10 <myhtml_insertion_mode_in_select@@Base+0x188>
   229a8:	mov	r4, #0
   229ac:	cmp	r0, #64	; 0x40
   229b0:	ble	22c88 <myhtml_insertion_mode_in_select@@Base+0x300>
   229b4:	sub	r1, r0, #65	; 0x41
   229b8:	cmp	r1, #64	; 0x40
   229bc:	bhi	22cb4 <myhtml_insertion_mode_in_select@@Base+0x32c>
   229c0:	add	r0, pc, #4
   229c4:	ldr	r1, [r0, r1, lsl #2]
   229c8:	add	pc, r0, r1
   229cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   229d0:			; <UNDEFINED> instruction: 0x000003b4
   229d4:			; <UNDEFINED> instruction: 0x000003b4
   229d8:			; <UNDEFINED> instruction: 0x000003b4
   229dc:			; <UNDEFINED> instruction: 0x000003b4
   229e0:	andeq	r0, r0, r4, lsl #2
   229e4:			; <UNDEFINED> instruction: 0x000003b4
   229e8:			; <UNDEFINED> instruction: 0x000003b4
   229ec:			; <UNDEFINED> instruction: 0x000003b4
   229f0:	andeq	r0, r0, r4, lsl #2
   229f4:			; <UNDEFINED> instruction: 0x000003b4
   229f8:			; <UNDEFINED> instruction: 0x000003b4
   229fc:			; <UNDEFINED> instruction: 0x000003b4
   22a00:			; <UNDEFINED> instruction: 0x000003b4
   22a04:			; <UNDEFINED> instruction: 0x000003b4
   22a08:			; <UNDEFINED> instruction: 0x000003b4
   22a0c:			; <UNDEFINED> instruction: 0x000003b4
   22a10:			; <UNDEFINED> instruction: 0x000003b4
   22a14:			; <UNDEFINED> instruction: 0x000003b4
   22a18:			; <UNDEFINED> instruction: 0x000003b4
   22a1c:			; <UNDEFINED> instruction: 0x000003b4
   22a20:			; <UNDEFINED> instruction: 0x000003b4
   22a24:			; <UNDEFINED> instruction: 0x000003b4
   22a28:			; <UNDEFINED> instruction: 0x000003b4
   22a2c:			; <UNDEFINED> instruction: 0x000003b4
   22a30:			; <UNDEFINED> instruction: 0x000003b4
   22a34:			; <UNDEFINED> instruction: 0x000003b4
   22a38:			; <UNDEFINED> instruction: 0x000003b4
   22a3c:			; <UNDEFINED> instruction: 0x000003b4
   22a40:			; <UNDEFINED> instruction: 0x000003b4
   22a44:			; <UNDEFINED> instruction: 0x000003b4
   22a48:	andeq	r0, r0, r0, lsl #6
   22a4c:	andeq	r0, r0, r0, asr r3
   22a50:			; <UNDEFINED> instruction: 0x000003b4
   22a54:			; <UNDEFINED> instruction: 0x000003b4
   22a58:			; <UNDEFINED> instruction: 0x000003b4
   22a5c:			; <UNDEFINED> instruction: 0x000003b4
   22a60:			; <UNDEFINED> instruction: 0x000003b4
   22a64:			; <UNDEFINED> instruction: 0x000003b4
   22a68:			; <UNDEFINED> instruction: 0x000003b4
   22a6c:			; <UNDEFINED> instruction: 0x000003b4
   22a70:			; <UNDEFINED> instruction: 0x000003b4
   22a74:			; <UNDEFINED> instruction: 0x000003b4
   22a78:			; <UNDEFINED> instruction: 0x000003b4
   22a7c:			; <UNDEFINED> instruction: 0x000003b4
   22a80:			; <UNDEFINED> instruction: 0x000003b4
   22a84:			; <UNDEFINED> instruction: 0x000003b4
   22a88:	andeq	r0, r0, r4, asr #4
   22a8c:			; <UNDEFINED> instruction: 0x000003b4
   22a90:	andeq	r0, r0, r4, asr r2
   22a94:			; <UNDEFINED> instruction: 0x000003b4
   22a98:			; <UNDEFINED> instruction: 0x000003b4
   22a9c:			; <UNDEFINED> instruction: 0x000003b4
   22aa0:			; <UNDEFINED> instruction: 0x000003b4
   22aa4:			; <UNDEFINED> instruction: 0x000003b4
   22aa8:			; <UNDEFINED> instruction: 0x000003b4
   22aac:			; <UNDEFINED> instruction: 0x000003b4
   22ab0:			; <UNDEFINED> instruction: 0x000003b4
   22ab4:			; <UNDEFINED> instruction: 0x000003b4
   22ab8:			; <UNDEFINED> instruction: 0x000003b4
   22abc:			; <UNDEFINED> instruction: 0x000003b4
   22ac0:			; <UNDEFINED> instruction: 0x000003b4
   22ac4:			; <UNDEFINED> instruction: 0x000003b4
   22ac8:	andeq	r0, r0, r4, asr #4
   22acc:	andeq	r0, r0, r4, lsl #2
   22ad0:	mov	r0, r5
   22ad4:	mov	r1, #114	; 0x72
   22ad8:	mov	r2, #1
   22adc:	mov	r3, #128	; 0x80
   22ae0:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22ae4:	cmp	r0, #0
   22ae8:	beq	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22aec:	mov	r1, r0
   22af0:	mov	r0, r5
   22af4:	mov	r2, #0
   22af8:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   22afc:	mov	r0, r5
   22b00:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22b04:	mov	r4, #1
   22b08:	mov	r0, r4
   22b0c:	pop	{r4, r5, r6, sl, fp, pc}
   22b10:	sub	r0, r0, #96	; 0x60
   22b14:	mov	r4, #0
   22b18:	cmp	r0, #32
   22b1c:	bhi	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22b20:	add	r1, pc, #4
   22b24:	ldr	r0, [r1, r0, lsl #2]
   22b28:	add	pc, r1, r0
   22b2c:	andeq	r0, r0, r4, lsl #1
   22b30:	andeq	r0, r0, r4, lsr r1
   22b34:	andeq	r0, r0, r4, asr r2
   22b38:	andeq	r0, r0, r4, asr r2
   22b3c:	andeq	r0, r0, r4, asr r2
   22b40:	andeq	r0, r0, r4, asr r2
   22b44:	andeq	r0, r0, r4, asr r2
   22b48:	andeq	r0, r0, r4, asr r2
   22b4c:	andeq	r0, r0, r4, asr r2
   22b50:	andeq	r0, r0, r4, asr r2
   22b54:	andeq	r0, r0, r4, asr r2
   22b58:	andeq	r0, r0, r4, asr r2
   22b5c:	andeq	r0, r0, r4, asr r2
   22b60:	andeq	r0, r0, r4, asr r2
   22b64:	andeq	r0, r0, r4, asr r2
   22b68:	andeq	r0, r0, r4, asr r2
   22b6c:	andeq	r0, r0, r4, asr r2
   22b70:	andeq	r0, r0, r4, asr r2
   22b74:	strdeq	r0, [r0], -r4
   22b78:	andeq	r0, r0, r4, asr r2
   22b7c:	andeq	r0, r0, r4, asr r2
   22b80:	andeq	r0, r0, r4, asr r2
   22b84:	andeq	r0, r0, r4, asr r2
   22b88:	andeq	r0, r0, r4, asr r2
   22b8c:	andeq	r0, r0, r4, asr r2
   22b90:	andeq	r0, r0, r4, asr r2
   22b94:	andeq	r0, r0, r4, asr r2
   22b98:	andeq	r0, r0, r4, asr r2
   22b9c:	andeq	r0, r0, r4, asr r2
   22ba0:	andeq	r0, r0, r4, asr r2
   22ba4:	andeq	r0, r0, r4, asr r2
   22ba8:	andeq	r0, r0, r4, asr r2
   22bac:	andeq	r0, r0, r4, ror #1
   22bb0:	mov	r0, r5
   22bb4:	bl	11a4c <myhtml_tree_current_node@plt>
   22bb8:	mov	r1, #97	; 0x61
   22bbc:	bl	11e9c <myhtml_is_html_node@plt>
   22bc0:	cmp	r0, #0
   22bc4:	beq	22c00 <myhtml_insertion_mode_in_select@@Base+0x278>
   22bc8:	ldr	r0, [r5, #128]	; 0x80
   22bcc:	ldr	r1, [r0, #4]
   22bd0:	cmp	r1, #2
   22bd4:	bcc	22c00 <myhtml_insertion_mode_in_select@@Base+0x278>
   22bd8:	ldr	r1, [r0]
   22bdc:	ldr	r0, [r0, #4]
   22be0:	add	r0, r1, r0, lsl #2
   22be4:	ldr	r0, [r0, #-8]
   22be8:	mov	r1, #96	; 0x60
   22bec:	bl	11e9c <myhtml_is_html_node@plt>
   22bf0:	cmp	r0, #0
   22bf4:	beq	22c00 <myhtml_insertion_mode_in_select@@Base+0x278>
   22bf8:	mov	r0, r5
   22bfc:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22c00:	mov	r0, r5
   22c04:	bl	11a4c <myhtml_tree_current_node@plt>
   22c08:	mov	r1, #96	; 0x60
   22c0c:	b	22c6c <myhtml_insertion_mode_in_select@@Base+0x2e4>
   22c10:	mov	r0, r5
   22c14:	mov	r1, r6
   22c18:	pop	{r4, r5, r6, sl, fp, lr}
   22c1c:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   22c20:	mov	r0, r5
   22c24:	mov	r1, #114	; 0x72
   22c28:	mov	r2, #1
   22c2c:	mov	r3, #128	; 0x80
   22c30:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22c34:	cmp	r0, #0
   22c38:	beq	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22c3c:	mov	r1, r0
   22c40:	mov	r4, #0
   22c44:	mov	r0, r5
   22c48:	mov	r2, #0
   22c4c:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   22c50:	mov	r0, r5
   22c54:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22c58:	mov	r0, r4
   22c5c:	pop	{r4, r5, r6, sl, fp, pc}
   22c60:	mov	r0, r5
   22c64:	bl	11a4c <myhtml_tree_current_node@plt>
   22c68:	mov	r1, #97	; 0x61
   22c6c:	bl	11e9c <myhtml_is_html_node@plt>
   22c70:	cmp	r0, #0
   22c74:	beq	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22c78:	mov	r0, r5
   22c7c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22c80:	mov	r0, r4
   22c84:	pop	{r4, r5, r6, sl, fp, pc}
   22c88:	cmp	r0, #1
   22c8c:	beq	22d50 <myhtml_insertion_mode_in_select@@Base+0x3c8>
   22c90:	cmp	r0, #2
   22c94:	bne	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22c98:	mov	r4, #0
   22c9c:	mov	r0, r5
   22ca0:	mov	r1, r6
   22ca4:	mov	r2, #0
   22ca8:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   22cac:	mov	r0, r4
   22cb0:	pop	{r4, r5, r6, sl, fp, pc}
   22cb4:	cmp	r0, #251	; 0xfb
   22cb8:	bne	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22cbc:	mov	r0, r5
   22cc0:	mov	r1, r6
   22cc4:	pop	{r4, r5, r6, sl, fp, lr}
   22cc8:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   22ccc:	mov	r0, r5
   22cd0:	bl	11a4c <myhtml_tree_current_node@plt>
   22cd4:	ldr	r1, [r0, #4]
   22cd8:	cmp	r1, #97	; 0x61
   22cdc:	bne	22cf4 <myhtml_insertion_mode_in_select@@Base+0x36c>
   22ce0:	ldr	r0, [r0, #8]
   22ce4:	cmp	r0, #1
   22ce8:	bne	22cf4 <myhtml_insertion_mode_in_select@@Base+0x36c>
   22cec:	mov	r0, r5
   22cf0:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22cf4:	mov	r0, r5
   22cf8:	bl	11a4c <myhtml_tree_current_node@plt>
   22cfc:	ldr	r1, [r6]
   22d00:	ldr	r2, [r0, #4]
   22d04:	cmp	r2, r1
   22d08:	bne	22d3c <myhtml_insertion_mode_in_select@@Base+0x3b4>
   22d0c:	ldr	r0, [r0, #8]
   22d10:	cmp	r0, #1
   22d14:	beq	22d34 <myhtml_insertion_mode_in_select@@Base+0x3ac>
   22d18:	b	22d3c <myhtml_insertion_mode_in_select@@Base+0x3b4>
   22d1c:	mov	r0, r5
   22d20:	bl	11a4c <myhtml_tree_current_node@plt>
   22d24:	ldr	r1, [r6]
   22d28:	bl	11e9c <myhtml_is_html_node@plt>
   22d2c:	cmp	r0, #0
   22d30:	beq	22d3c <myhtml_insertion_mode_in_select@@Base+0x3b4>
   22d34:	mov	r0, r5
   22d38:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   22d3c:	mov	r0, r5
   22d40:	mov	r1, r6
   22d44:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   22d48:	mov	r0, r4
   22d4c:	pop	{r4, r5, r6, sl, fp, pc}
   22d50:	ldr	r0, [r6, #48]	; 0x30
   22d54:	tst	r0, #2048	; 0x800
   22d58:	beq	22d74 <myhtml_insertion_mode_in_select@@Base+0x3ec>
   22d5c:	mov	r0, r5
   22d60:	mov	r1, r6
   22d64:	bl	11be4 <myhtml_insertion_fix_for_null_char_drop_all@plt>
   22d68:	ldr	r0, [r6, #12]
   22d6c:	cmp	r0, #0
   22d70:	beq	22d80 <myhtml_insertion_mode_in_select@@Base+0x3f8>
   22d74:	mov	r0, r5
   22d78:	mov	r1, r6
   22d7c:	bl	1141c <myhtml_tree_node_insert_text@plt>
   22d80:	mov	r0, r4
   22d84:	pop	{r4, r5, r6, sl, fp, pc}

00022d88 <myhtml_insertion_mode_in_select_in_table@@Base>:
   22d88:	push	{r4, r5, fp, lr}
   22d8c:	add	fp, sp, #8
   22d90:	mov	r4, r0
   22d94:	ldr	r2, [r1]
   22d98:	ldr	r0, [r1, #48]	; 0x30
   22d9c:	tst	r0, #1
   22da0:	bne	22dc8 <myhtml_insertion_mode_in_select_in_table@@Base+0x40>
   22da4:	sub	r0, r2, #125	; 0x7d
   22da8:	cmp	r0, #10
   22dac:	bhi	22e34 <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   22db0:	mov	r3, #1
   22db4:	movw	r5, #1255	; 0x4e7
   22db8:	tst	r5, r3, lsl r0
   22dbc:	beq	22e34 <myhtml_insertion_mode_in_select_in_table@@Base+0xac>
   22dc0:	mov	r5, #1
   22dc4:	b	22e04 <myhtml_insertion_mode_in_select_in_table@@Base+0x7c>
   22dc8:	sub	r0, r2, #125	; 0x7d
   22dcc:	cmp	r0, #10
   22dd0:	bhi	22e40 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   22dd4:	mov	r3, #1
   22dd8:	movw	r5, #1255	; 0x4e7
   22ddc:	tst	r5, r3, lsl r0
   22de0:	beq	22e40 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   22de4:	mov	r5, #1
   22de8:	mov	r0, r4
   22dec:	mov	r1, r2
   22df0:	mov	r2, #1
   22df4:	mov	r3, #64	; 0x40
   22df8:	bl	122b0 <myhtml_tree_element_in_scope@plt>
   22dfc:	cmp	r0, #0
   22e00:	beq	22e28 <myhtml_insertion_mode_in_select_in_table@@Base+0xa0>
   22e04:	mov	r0, r4
   22e08:	mov	r1, #114	; 0x72
   22e0c:	mov	r2, #1
   22e10:	mov	r3, #0
   22e14:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   22e18:	mov	r0, r4
   22e1c:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   22e20:	mov	r0, r5
   22e24:	pop	{r4, r5, fp, pc}
   22e28:	mov	r5, #0
   22e2c:	mov	r0, r5
   22e30:	pop	{r4, r5, fp, pc}
   22e34:	cmp	r2, #27
   22e38:	beq	22dc0 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   22e3c:	b	22e48 <myhtml_insertion_mode_in_select_in_table@@Base+0xc0>
   22e40:	cmp	r2, #27
   22e44:	beq	22de4 <myhtml_insertion_mode_in_select_in_table@@Base+0x5c>
   22e48:	mov	r0, r4
   22e4c:	pop	{r4, r5, fp, lr}
   22e50:	b	22988 <myhtml_insertion_mode_in_select@@Base>

00022e54 <myhtml_insertion_mode_after_body@@Base>:
   22e54:	push	{r4, r5, r6, sl, fp, lr}
   22e58:	add	fp, sp, #16
   22e5c:	mov	r5, r1
   22e60:	ldr	r1, [r1]
   22e64:	ldr	r2, [r5, #48]	; 0x30
   22e68:	tst	r2, #1
   22e6c:	bne	22e98 <myhtml_insertion_mode_after_body@@Base+0x44>
   22e70:	mov	r4, #0
   22e74:	cmp	r1, #2
   22e78:	ble	22ec0 <myhtml_insertion_mode_after_body@@Base+0x6c>
   22e7c:	cmp	r1, #3
   22e80:	beq	22f2c <myhtml_insertion_mode_after_body@@Base+0xd8>
   22e84:	cmp	r1, #65	; 0x41
   22e88:	beq	22f34 <myhtml_insertion_mode_after_body@@Base+0xe0>
   22e8c:	cmp	r1, #251	; 0xfb
   22e90:	beq	22f2c <myhtml_insertion_mode_after_body@@Base+0xd8>
   22e94:	b	22f20 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22e98:	cmp	r1, #65	; 0x41
   22e9c:	bne	22f20 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22ea0:	ldr	r1, [r0, #88]	; 0x58
   22ea4:	mov	r4, #0
   22ea8:	cmp	r1, #0
   22eac:	bne	22f2c <myhtml_insertion_mode_after_body@@Base+0xd8>
   22eb0:	mov	r1, #21
   22eb4:	str	r1, [r0, #168]	; 0xa8
   22eb8:	mov	r0, r4
   22ebc:	pop	{r4, r5, r6, sl, fp, pc}
   22ec0:	cmp	r1, #1
   22ec4:	beq	22f14 <myhtml_insertion_mode_after_body@@Base+0xc0>
   22ec8:	cmp	r1, #2
   22ecc:	bne	22f20 <myhtml_insertion_mode_after_body@@Base+0xcc>
   22ed0:	ldr	r1, [r0, #128]	; 0x80
   22ed4:	ldr	r2, [r1, #4]
   22ed8:	cmp	r2, #0
   22edc:	beq	22f2c <myhtml_insertion_mode_after_body@@Base+0xd8>
   22ee0:	ldr	r1, [r1]
   22ee4:	ldr	r6, [r1]
   22ee8:	bl	11470 <myhtml_tree_node_create@plt>
   22eec:	mov	r1, r0
   22ef0:	str	r5, [r0, #32]
   22ef4:	mov	r0, #2
   22ef8:	str	r0, [r1, #4]
   22efc:	ldr	r0, [r6, #8]
   22f00:	str	r0, [r1, #8]
   22f04:	mov	r0, r6
   22f08:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   22f0c:	mov	r0, r4
   22f10:	pop	{r4, r5, r6, sl, fp, pc}
   22f14:	ldr	r1, [r5, #48]	; 0x30
   22f18:	tst	r1, #8
   22f1c:	bne	22f34 <myhtml_insertion_mode_after_body@@Base+0xe0>
   22f20:	mov	r1, #6
   22f24:	str	r1, [r0, #168]	; 0xa8
   22f28:	mov	r4, #1
   22f2c:	mov	r0, r4
   22f30:	pop	{r4, r5, r6, sl, fp, pc}
   22f34:	mov	r1, r5
   22f38:	pop	{r4, r5, r6, sl, fp, lr}
   22f3c:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>

00022f40 <myhtml_insertion_mode_in_frameset@@Base>:
   22f40:	push	{r4, r5, fp, lr}
   22f44:	add	fp, sp, #8
   22f48:	mov	r5, r1
   22f4c:	mov	r4, r0
   22f50:	ldr	r0, [r1]
   22f54:	ldr	r1, [r1, #48]	; 0x30
   22f58:	tst	r1, #1
   22f5c:	bne	2303c <myhtml_insertion_mode_in_frameset@@Base+0xfc>
   22f60:	cmp	r0, #52	; 0x34
   22f64:	ble	230a0 <myhtml_insertion_mode_in_frameset@@Base+0x160>
   22f68:	sub	r1, r0, #53	; 0x35
   22f6c:	cmp	r1, #39	; 0x27
   22f70:	bhi	230c8 <myhtml_insertion_mode_in_frameset@@Base+0x188>
   22f74:	add	r0, pc, #4
   22f78:	ldr	r1, [r0, r1, lsl #2]
   22f7c:	add	pc, r0, r1
   22f80:	andeq	r0, r0, r0, lsr #1
   22f84:	andeq	r0, r0, r0, ror #2
   22f88:	andeq	r0, r0, ip, asr #3
   22f8c:	andeq	r0, r0, ip, asr #3
   22f90:	andeq	r0, r0, ip, asr #3
   22f94:	andeq	r0, r0, ip, asr #3
   22f98:	andeq	r0, r0, ip, asr #3
   22f9c:	andeq	r0, r0, ip, asr #3
   22fa0:	andeq	r0, r0, ip, asr #3
   22fa4:	andeq	r0, r0, ip, asr #3
   22fa8:	andeq	r0, r0, ip, asr #3
   22fac:	andeq	r0, r0, ip, asr #3
   22fb0:	andeq	r0, r0, r4, ror r1
   22fb4:	andeq	r0, r0, ip, asr #3
   22fb8:	andeq	r0, r0, ip, asr #3
   22fbc:	andeq	r0, r0, ip, asr #3
   22fc0:	andeq	r0, r0, ip, asr #3
   22fc4:	andeq	r0, r0, ip, asr #3
   22fc8:	andeq	r0, r0, ip, asr #3
   22fcc:	andeq	r0, r0, ip, asr #3
   22fd0:	andeq	r0, r0, ip, asr #3
   22fd4:	andeq	r0, r0, ip, asr #3
   22fd8:	andeq	r0, r0, ip, asr #3
   22fdc:	andeq	r0, r0, ip, asr #3
   22fe0:	andeq	r0, r0, ip, asr #3
   22fe4:	andeq	r0, r0, ip, asr #3
   22fe8:	andeq	r0, r0, ip, asr #3
   22fec:	andeq	r0, r0, ip, asr #3
   22ff0:	andeq	r0, r0, ip, asr #3
   22ff4:	andeq	r0, r0, ip, asr #3
   22ff8:	andeq	r0, r0, ip, asr #3
   22ffc:	andeq	r0, r0, ip, asr #3
   23000:	andeq	r0, r0, ip, asr #3
   23004:	andeq	r0, r0, ip, asr #3
   23008:	andeq	r0, r0, ip, asr #3
   2300c:	andeq	r0, r0, ip, asr #3
   23010:	andeq	r0, r0, ip, asr #3
   23014:	andeq	r0, r0, ip, asr #3
   23018:	andeq	r0, r0, ip, asr #3
   2301c:	andeq	r0, r0, r4, lsl #3
   23020:	mov	r0, r4
   23024:	mov	r1, r5
   23028:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   2302c:	mov	r0, r4
   23030:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   23034:	mov	r0, #0
   23038:	pop	{r4, r5, fp, pc}
   2303c:	cmp	r0, #54	; 0x36
   23040:	bne	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   23044:	mov	r0, r4
   23048:	bl	11a4c <myhtml_tree_current_node@plt>
   2304c:	ldr	r1, [r4, #84]	; 0x54
   23050:	ldr	r1, [r1, #20]
   23054:	cmp	r0, r1
   23058:	beq	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   2305c:	mov	r0, r4
   23060:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   23064:	mov	r0, r4
   23068:	bl	11a4c <myhtml_tree_current_node@plt>
   2306c:	ldr	r1, [r4, #88]	; 0x58
   23070:	cmp	r1, #0
   23074:	bne	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   23078:	ldr	r1, [r0, #4]
   2307c:	cmp	r1, #54	; 0x36
   23080:	bne	23090 <myhtml_insertion_mode_in_frameset@@Base+0x150>
   23084:	ldr	r0, [r0, #8]
   23088:	cmp	r0, #1
   2308c:	beq	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   23090:	mov	r0, #20
   23094:	str	r0, [r4, #168]	; 0xa8
   23098:	mov	r0, #0
   2309c:	pop	{r4, r5, fp, pc}
   230a0:	cmp	r0, #1
   230a4:	beq	23114 <myhtml_insertion_mode_in_frameset@@Base+0x1d4>
   230a8:	cmp	r0, #2
   230ac:	bne	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   230b0:	mov	r0, r4
   230b4:	mov	r1, r5
   230b8:	mov	r2, #0
   230bc:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   230c0:	mov	r0, #0
   230c4:	pop	{r4, r5, fp, pc}
   230c8:	cmp	r0, #251	; 0xfb
   230cc:	bne	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   230d0:	mov	r0, r4
   230d4:	bl	11a4c <myhtml_tree_current_node@plt>
   230d8:	mov	r0, #0
   230dc:	pop	{r4, r5, fp, pc}
   230e0:	mov	r0, r4
   230e4:	mov	r1, r5
   230e8:	bl	11134 <myhtml_tree_node_insert_html_element@plt>
   230ec:	mov	r0, #0
   230f0:	pop	{r4, r5, fp, pc}
   230f4:	mov	r0, r4
   230f8:	mov	r1, r5
   230fc:	pop	{r4, r5, fp, lr}
   23100:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   23104:	mov	r0, r4
   23108:	mov	r1, r5
   2310c:	pop	{r4, r5, fp, lr}
   23110:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   23114:	ldr	r0, [r5, #48]	; 0x30
   23118:	tst	r0, #8
   2311c:	bne	23140 <myhtml_insertion_mode_in_frameset@@Base+0x200>
   23120:	ldr	r0, [r4, #8]
   23124:	mov	r1, r5
   23128:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2312c:	add	r0, r5, #4
   23130:	bl	1174c <mycore_string_stay_only_whitespace@plt>
   23134:	ldr	r0, [r5, #12]
   23138:	cmp	r0, #0
   2313c:	beq	2314c <myhtml_insertion_mode_in_frameset@@Base+0x20c>
   23140:	mov	r0, r4
   23144:	mov	r1, r5
   23148:	bl	1141c <myhtml_tree_node_insert_text@plt>
   2314c:	mov	r0, #0
   23150:	pop	{r4, r5, fp, pc}

00023154 <myhtml_insertion_mode_after_frameset@@Base>:
   23154:	push	{r4, r5, fp, lr}
   23158:	add	fp, sp, #8
   2315c:	mov	r5, r1
   23160:	mov	r4, r0
   23164:	ldr	r0, [r1]
   23168:	ldr	r1, [r1, #48]	; 0x30
   2316c:	tst	r1, #1
   23170:	bne	231a4 <myhtml_insertion_mode_after_frameset@@Base+0x50>
   23174:	cmp	r0, #64	; 0x40
   23178:	bgt	231b8 <myhtml_insertion_mode_after_frameset@@Base+0x64>
   2317c:	cmp	r0, #1
   23180:	beq	231d8 <myhtml_insertion_mode_after_frameset@@Base+0x84>
   23184:	cmp	r0, #2
   23188:	bne	231b0 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   2318c:	mov	r0, r4
   23190:	mov	r1, r5
   23194:	mov	r2, #0
   23198:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   2319c:	mov	r0, #0
   231a0:	pop	{r4, r5, fp, pc}
   231a4:	cmp	r0, #65	; 0x41
   231a8:	moveq	r0, #22
   231ac:	streq	r0, [r4, #168]	; 0xa8
   231b0:	mov	r0, #0
   231b4:	pop	{r4, r5, fp, pc}
   231b8:	cmp	r0, #65	; 0x41
   231bc:	beq	23218 <myhtml_insertion_mode_after_frameset@@Base+0xc4>
   231c0:	cmp	r0, #92	; 0x5c
   231c4:	bne	231b0 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   231c8:	mov	r0, r4
   231cc:	mov	r1, r5
   231d0:	pop	{r4, r5, fp, lr}
   231d4:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   231d8:	ldr	r0, [r5, #48]	; 0x30
   231dc:	tst	r0, #8
   231e0:	bne	23204 <myhtml_insertion_mode_after_frameset@@Base+0xb0>
   231e4:	ldr	r0, [r4, #8]
   231e8:	mov	r1, r5
   231ec:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   231f0:	add	r0, r5, #4
   231f4:	bl	1174c <mycore_string_stay_only_whitespace@plt>
   231f8:	ldr	r0, [r5, #12]
   231fc:	cmp	r0, #0
   23200:	beq	231b0 <myhtml_insertion_mode_after_frameset@@Base+0x5c>
   23204:	mov	r0, r4
   23208:	mov	r1, r5
   2320c:	bl	1141c <myhtml_tree_node_insert_text@plt>
   23210:	mov	r0, #0
   23214:	pop	{r4, r5, fp, pc}
   23218:	mov	r0, r4
   2321c:	mov	r1, r5
   23220:	pop	{r4, r5, fp, lr}
   23224:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>

00023228 <myhtml_insertion_mode_after_after_body@@Base>:
   23228:	push	{r4, r5, r6, sl, fp, lr}
   2322c:	add	fp, sp, #16
   23230:	mov	r5, r1
   23234:	ldr	r1, [r1, #48]	; 0x30
   23238:	tst	r1, #1
   2323c:	bne	232c4 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   23240:	ldr	r1, [r5]
   23244:	mov	r4, #0
   23248:	cmp	r1, #2
   2324c:	ble	23268 <myhtml_insertion_mode_after_after_body@@Base+0x40>
   23250:	cmp	r1, #3
   23254:	cmpne	r1, #65	; 0x41
   23258:	bne	232a8 <myhtml_insertion_mode_after_after_body@@Base+0x80>
   2325c:	mov	r1, r5
   23260:	pop	{r4, r5, r6, sl, fp, lr}
   23264:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   23268:	cmp	r1, #1
   2326c:	beq	232b8 <myhtml_insertion_mode_after_after_body@@Base+0x90>
   23270:	cmp	r1, #2
   23274:	bne	232c4 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   23278:	ldr	r6, [r0, #84]	; 0x54
   2327c:	bl	11470 <myhtml_tree_node_create@plt>
   23280:	mov	r1, r0
   23284:	str	r5, [r0, #32]
   23288:	mov	r0, #2
   2328c:	str	r0, [r1, #4]
   23290:	ldr	r0, [r6, #8]
   23294:	str	r0, [r1, #8]
   23298:	mov	r0, r6
   2329c:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   232a0:	mov	r0, r4
   232a4:	pop	{r4, r5, r6, sl, fp, pc}
   232a8:	cmp	r1, #251	; 0xfb
   232ac:	bne	232c4 <myhtml_insertion_mode_after_after_body@@Base+0x9c>
   232b0:	mov	r0, r4
   232b4:	pop	{r4, r5, r6, sl, fp, pc}
   232b8:	ldr	r1, [r5, #48]	; 0x30
   232bc:	tst	r1, #8
   232c0:	bne	2325c <myhtml_insertion_mode_after_after_body@@Base+0x34>
   232c4:	mov	r1, #6
   232c8:	str	r1, [r0, #168]	; 0xa8
   232cc:	mov	r4, #1
   232d0:	mov	r0, r4
   232d4:	pop	{r4, r5, r6, sl, fp, pc}

000232d8 <myhtml_insertion_mode_after_after_frameset@@Base>:
   232d8:	push	{r4, r5, r6, sl, fp, lr}
   232dc:	add	fp, sp, #16
   232e0:	mov	r4, r0
   232e4:	ldr	r0, [r1, #48]	; 0x30
   232e8:	tst	r0, #1
   232ec:	bne	233a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   232f0:	mov	r5, r1
   232f4:	ldr	r0, [r1]
   232f8:	cmp	r0, #2
   232fc:	ble	2331c <myhtml_insertion_mode_after_after_frameset@@Base+0x44>
   23300:	cmp	r0, #3
   23304:	cmpne	r0, #65	; 0x41
   23308:	bne	2335c <myhtml_insertion_mode_after_after_frameset@@Base+0x84>
   2330c:	mov	r0, r4
   23310:	mov	r1, r5
   23314:	pop	{r4, r5, r6, sl, fp, lr}
   23318:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   2331c:	cmp	r0, #1
   23320:	beq	23374 <myhtml_insertion_mode_after_after_frameset@@Base+0x9c>
   23324:	cmp	r0, #2
   23328:	bne	233a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2332c:	ldr	r6, [r4, #84]	; 0x54
   23330:	mov	r0, r4
   23334:	bl	11470 <myhtml_tree_node_create@plt>
   23338:	mov	r1, r0
   2333c:	str	r5, [r0, #32]
   23340:	mov	r0, #2
   23344:	str	r0, [r1, #4]
   23348:	ldr	r0, [r6, #8]
   2334c:	str	r0, [r1, #8]
   23350:	mov	r0, r6
   23354:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   23358:	b	233a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2335c:	cmp	r0, #92	; 0x5c
   23360:	bne	233a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   23364:	mov	r0, r4
   23368:	mov	r1, r5
   2336c:	pop	{r4, r5, r6, sl, fp, lr}
   23370:	b	2027c <myhtml_insertion_mode_in_head@@Base>
   23374:	ldr	r0, [r5, #48]	; 0x30
   23378:	tst	r0, #8
   2337c:	bne	2330c <myhtml_insertion_mode_after_after_frameset@@Base+0x34>
   23380:	mov	r0, r4
   23384:	mov	r1, r5
   23388:	bl	11380 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   2338c:	cmp	r0, #0
   23390:	beq	233a4 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   23394:	mov	r1, r0
   23398:	mov	r0, r4
   2339c:	pop	{r4, r5, r6, sl, fp, lr}
   233a0:	b	1eca4 <myhtml_insertion_mode_in_body@@Base>
   233a4:	mov	r0, #0
   233a8:	pop	{r4, r5, r6, sl, fp, pc}

000233ac <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   233ac:	push	{r4, sl, fp, lr}
   233b0:	add	fp, sp, #8
   233b4:	ldr	r1, [r0, #128]	; 0x80
   233b8:	ldr	r3, [r1, #4]
   233bc:	cmp	r3, #0
   233c0:	beq	23404 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   233c4:	ldr	r3, [r1]
   233c8:	ldr	r1, [r1, #4]
   233cc:	sub	ip, r1, #1
   233d0:	add	r3, r3, ip, lsl #2
   233d4:	cmp	ip, #0
   233d8:	beq	23404 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x58>
   233dc:	ldr	lr, [r2]
   233e0:	ldr	r1, [r3]
   233e4:	ldr	r4, [r1, #4]
   233e8:	cmp	r4, lr
   233ec:	beq	23420 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x74>
   233f0:	sub	ip, ip, #1
   233f4:	ldr	r1, [r3, #-4]!
   233f8:	ldr	r1, [r1, #8]
   233fc:	cmp	r1, #1
   23400:	bne	233d4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x28>
   23404:	ldr	r1, [r0]
   23408:	ldr	r3, [r0, #168]	; 0xa8
   2340c:	ldr	r1, [r1, #28]
   23410:	ldr	r3, [r1, r3, lsl #2]
   23414:	mov	r1, r2
   23418:	pop	{r4, sl, fp, lr}
   2341c:	bx	r3
   23420:	mov	r2, #0
   23424:	bl	115b4 <myhtml_tree_open_elements_pop_until_by_node@plt>
   23428:	mov	r0, #0
   2342c:	pop	{r4, sl, fp, pc}

00023430 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   23430:	push	{r4, r5, r6, sl, fp, lr}
   23434:	add	fp, sp, #16
   23438:	mov	r4, r1
   2343c:	mov	r5, r0
   23440:	bl	12100 <myhtml_tree_adjusted_current_node@plt>
   23444:	mov	r6, r0
   23448:	ldr	r0, [r5, #8]
   2344c:	mov	r1, r4
   23450:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   23454:	ldr	r0, [r6, #8]
   23458:	cmp	r0, #3
   2345c:	beq	23474 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x44>
   23460:	cmp	r0, #2
   23464:	bne	2347c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   23468:	mov	r0, r4
   2346c:	bl	11404 <myhtml_token_adjust_mathml_attributes@plt>
   23470:	b	2347c <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x4c>
   23474:	mov	r0, r4
   23478:	bl	11644 <myhtml_token_adjust_svg_attributes@plt>
   2347c:	mov	r0, r4
   23480:	bl	11fa4 <myhtml_token_adjust_foreign_attributes@plt>
   23484:	mov	r0, r5
   23488:	mov	r1, r4
   2348c:	bl	1213c <myhtml_tree_node_insert_foreign_element@plt>
   23490:	ldr	r1, [r6, #8]
   23494:	str	r1, [r0, #8]
   23498:	ldr	r0, [r4, #48]	; 0x30
   2349c:	tst	r0, #2
   234a0:	beq	234bc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x8c>
   234a4:	cmp	r1, #3
   234a8:	ldreq	r0, [r4]
   234ac:	cmpeq	r0, #112	; 0x70
   234b0:	beq	234c4 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x94>
   234b4:	mov	r0, r5
   234b8:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   234bc:	mov	r0, #0
   234c0:	pop	{r4, r5, r6, sl, fp, pc}
   234c4:	mov	r0, r5
   234c8:	bl	11a4c <myhtml_tree_current_node@plt>
   234cc:	mov	r1, r0
   234d0:	mov	r0, r5
   234d4:	mov	r2, r4
   234d8:	pop	{r4, r5, r6, sl, fp, lr}
   234dc:	b	233ac <myhtml_insertion_mode_in_foreign_content_end_other@@Base>

000234e0 <myhtml_insertion_mode_in_foreign_content@@Base>:
   234e0:	push	{r4, r5, r6, sl, fp, lr}
   234e4:	add	fp, sp, #16
   234e8:	mov	r5, r1
   234ec:	mov	r4, r0
   234f0:	ldr	r0, [r1, #48]	; 0x30
   234f4:	tst	r0, #1
   234f8:	bne	23768 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   234fc:	ldr	r0, [r5]
   23500:	sub	r0, r0, #1
   23504:	cmp	r0, #139	; 0x8b
   23508:	bhi	23758 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   2350c:	mov	r6, #0
   23510:	add	r1, pc, #4
   23514:	ldr	r0, [r1, r0, lsl #2]
   23518:	add	pc, r1, r0
   2351c:	strdeq	r0, [r0], -ip
   23520:	andeq	r0, r0, r4, asr r3
   23524:	strdeq	r0, [r0], -r4
   23528:	andeq	r0, r0, ip, lsr r2
   2352c:	andeq	r0, r0, ip, lsr r2
   23530:	andeq	r0, r0, ip, lsr r2
   23534:	andeq	r0, r0, ip, lsr r2
   23538:	andeq	r0, r0, ip, lsr r2
   2353c:	andeq	r0, r0, ip, lsr r2
   23540:	andeq	r0, r0, ip, lsr r2
   23544:	andeq	r0, r0, ip, lsr r2
   23548:	andeq	r0, r0, ip, lsr r2
   2354c:	andeq	r0, r0, ip, lsr r2
   23550:	andeq	r0, r0, r0, lsr r2
   23554:	andeq	r0, r0, ip, lsr r2
   23558:	andeq	r0, r0, ip, lsr r2
   2355c:	andeq	r0, r0, ip, lsr r2
   23560:	andeq	r0, r0, ip, lsr r2
   23564:	andeq	r0, r0, ip, lsr r2
   23568:	andeq	r0, r0, r0, lsr r2
   2356c:	andeq	r0, r0, ip, lsr r2
   23570:	andeq	r0, r0, r0, lsr r2
   23574:	andeq	r0, r0, r0, lsr r2
   23578:	andeq	r0, r0, r0, lsr r2
   2357c:	andeq	r0, r0, ip, lsr r2
   23580:	andeq	r0, r0, ip, lsr r2
   23584:	andeq	r0, r0, ip, lsr r2
   23588:	andeq	r0, r0, r0, lsr r2
   2358c:	andeq	r0, r0, ip, lsr r2
   23590:	andeq	r0, r0, r0, lsr r2
   23594:	andeq	r0, r0, ip, lsr r2
   23598:	andeq	r0, r0, ip, lsr r2
   2359c:	andeq	r0, r0, ip, lsr r2
   235a0:	andeq	r0, r0, ip, lsr r2
   235a4:	andeq	r0, r0, ip, lsr r2
   235a8:	andeq	r0, r0, r0, lsr r2
   235ac:	andeq	r0, r0, ip, lsr r2
   235b0:	andeq	r0, r0, ip, lsr r2
   235b4:	andeq	r0, r0, ip, lsr r2
   235b8:	andeq	r0, r0, ip, lsr r2
   235bc:	andeq	r0, r0, ip, lsr r2
   235c0:	andeq	r0, r0, r0, lsr r2
   235c4:	andeq	r0, r0, r0, lsr r2
   235c8:	andeq	r0, r0, r0, lsr r2
   235cc:	andeq	r0, r0, r0, lsr r2
   235d0:	andeq	r0, r0, r0, lsr r2
   235d4:	andeq	r0, r0, ip, lsr r2
   235d8:	andeq	r0, r0, ip, lsr r2
   235dc:	andeq	r0, r0, ip, lsr r2
   235e0:	andeq	r0, r0, r0, ror r3
   235e4:	andeq	r0, r0, ip, lsr r2
   235e8:	andeq	r0, r0, ip, lsr r2
   235ec:	andeq	r0, r0, ip, lsr r2
   235f0:	andeq	r0, r0, ip, lsr r2
   235f4:	andeq	r0, r0, r0, lsr r2
   235f8:	andeq	r0, r0, r0, lsr r2
   235fc:	andeq	r0, r0, r0, lsr r2
   23600:	andeq	r0, r0, r0, lsr r2
   23604:	andeq	r0, r0, r0, lsr r2
   23608:	andeq	r0, r0, r0, lsr r2
   2360c:	andeq	r0, r0, r0, lsr r2
   23610:	andeq	r0, r0, ip, lsr r2
   23614:	andeq	r0, r0, ip, lsr r2
   23618:	andeq	r0, r0, r0, lsr r2
   2361c:	andeq	r0, r0, ip, lsr r2
   23620:	andeq	r0, r0, r0, lsr r2
   23624:	andeq	r0, r0, ip, lsr r2
   23628:	andeq	r0, r0, ip, lsr r2
   2362c:	andeq	r0, r0, r0, lsr r2
   23630:	andeq	r0, r0, ip, lsr r2
   23634:	andeq	r0, r0, ip, lsr r2
   23638:	andeq	r0, r0, ip, lsr r2
   2363c:	andeq	r0, r0, ip, lsr r2
   23640:	andeq	r0, r0, ip, lsr r2
   23644:	andeq	r0, r0, ip, lsr r2
   23648:	andeq	r0, r0, ip, lsr r2
   2364c:	andeq	r0, r0, r0, lsr r2
   23650:	andeq	r0, r0, ip, lsr r2
   23654:	andeq	r0, r0, r0, lsr r2
   23658:	andeq	r0, r0, ip, lsr r2
   2365c:	andeq	r0, r0, ip, lsr r2
   23660:	andeq	r0, r0, ip, lsr r2
   23664:	andeq	r0, r0, ip, lsr r2
   23668:	andeq	r0, r0, r0, lsr r2
   2366c:	andeq	r0, r0, ip, lsr r2
   23670:	andeq	r0, r0, r0, lsr r2
   23674:	andeq	r0, r0, ip, lsr r2
   23678:	andeq	r0, r0, ip, lsr r2
   2367c:	andeq	r0, r0, ip, lsr r2
   23680:	andeq	r0, r0, r0, lsr r2
   23684:	andeq	r0, r0, ip, lsr r2
   23688:	andeq	r0, r0, ip, lsr r2
   2368c:	andeq	r0, r0, ip, lsr r2
   23690:	andeq	r0, r0, ip, lsr r2
   23694:	andeq	r0, r0, r0, lsr r2
   23698:	andeq	r0, r0, ip, lsr r2
   2369c:	andeq	r0, r0, ip, lsr r2
   236a0:	andeq	r0, r0, ip, lsr r2
   236a4:	andeq	r0, r0, r0, lsr r2
   236a8:	andeq	r0, r0, ip, lsr r2
   236ac:	andeq	r0, r0, ip, lsr r2
   236b0:	andeq	r0, r0, r0, lsr r2
   236b4:	andeq	r0, r0, ip, lsr r2
   236b8:	andeq	r0, r0, ip, lsr r2
   236bc:	andeq	r0, r0, ip, lsr r2
   236c0:	andeq	r0, r0, ip, lsr r2
   236c4:	andeq	r0, r0, ip, lsr r2
   236c8:	andeq	r0, r0, ip, lsr r2
   236cc:	andeq	r0, r0, r0, lsr r2
   236d0:	andeq	r0, r0, r0, lsr r2
   236d4:	andeq	r0, r0, ip, lsr r2
   236d8:	andeq	r0, r0, ip, lsr r2
   236dc:	andeq	r0, r0, ip, lsr r2
   236e0:	andeq	r0, r0, ip, lsr r2
   236e4:	andeq	r0, r0, r0, lsr r2
   236e8:	andeq	r0, r0, ip, lsr r2
   236ec:	andeq	r0, r0, r0, lsr r2
   236f0:	andeq	r0, r0, r0, lsr r2
   236f4:	andeq	r0, r0, r0, lsr r2
   236f8:	andeq	r0, r0, ip, lsr r2
   236fc:	andeq	r0, r0, r0, lsr r2
   23700:	andeq	r0, r0, ip, lsr r2
   23704:	andeq	r0, r0, r0, lsr r2
   23708:	andeq	r0, r0, ip, lsr r2
   2370c:	andeq	r0, r0, r0, lsr r2
   23710:	andeq	r0, r0, ip, lsr r2
   23714:	andeq	r0, r0, ip, lsr r2
   23718:	andeq	r0, r0, ip, lsr r2
   2371c:	andeq	r0, r0, ip, lsr r2
   23720:	andeq	r0, r0, ip, lsr r2
   23724:	andeq	r0, r0, ip, lsr r2
   23728:	andeq	r0, r0, ip, lsr r2
   2372c:	andeq	r0, r0, ip, lsr r2
   23730:	andeq	r0, r0, ip, lsr r2
   23734:	andeq	r0, r0, ip, lsr r2
   23738:	andeq	r0, r0, ip, lsr r2
   2373c:	andeq	r0, r0, r0, lsr r2
   23740:	andeq	r0, r0, r0, lsr r2
   23744:	andeq	r0, r0, r0, lsr r2
   23748:	andeq	r0, r0, r0, lsr r2
   2374c:	ldr	r0, [r4, #88]	; 0x58
   23750:	cmp	r0, #0
   23754:	beq	237bc <myhtml_insertion_mode_in_foreign_content@@Base+0x2dc>
   23758:	mov	r0, r4
   2375c:	mov	r1, r5
   23760:	pop	{r4, r5, r6, sl, fp, lr}
   23764:	b	23430 <myhtml_insertion_mode_in_foreign_content_start_other@@Base>
   23768:	mov	r0, r4
   2376c:	bl	11a4c <myhtml_tree_current_node@plt>
   23770:	mov	r1, r0
   23774:	ldr	r0, [r5]
   23778:	cmp	r0, #112	; 0x70
   2377c:	bne	237ac <myhtml_insertion_mode_in_foreign_content@@Base+0x2cc>
   23780:	ldr	r0, [r1, #4]
   23784:	cmp	r0, #112	; 0x70
   23788:	bne	237ac <myhtml_insertion_mode_in_foreign_content@@Base+0x2cc>
   2378c:	ldr	r0, [r1, #8]
   23790:	cmp	r0, #3
   23794:	bne	237ac <myhtml_insertion_mode_in_foreign_content@@Base+0x2cc>
   23798:	mov	r0, r4
   2379c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   237a0:	mov	r6, #0
   237a4:	mov	r0, r6
   237a8:	pop	{r4, r5, r6, sl, fp, pc}
   237ac:	mov	r0, r4
   237b0:	mov	r2, r5
   237b4:	pop	{r4, r5, r6, sl, fp, lr}
   237b8:	b	233ac <myhtml_insertion_mode_in_foreign_content_end_other@@Base>
   237bc:	mov	r6, #1
   237c0:	mov	r0, r4
   237c4:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   237c8:	mov	r0, r4
   237cc:	bl	11a4c <myhtml_tree_current_node@plt>
   237d0:	cmp	r0, #0
   237d4:	beq	23810 <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   237d8:	mov	r5, r0
   237dc:	mov	r0, r4
   237e0:	mov	r1, r5
   237e4:	bl	114d0 <myhtml_tree_is_mathml_integration_point@plt>
   237e8:	cmp	r0, #0
   237ec:	bne	23810 <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   237f0:	mov	r0, r4
   237f4:	mov	r1, r5
   237f8:	bl	11668 <myhtml_tree_is_html_integration_point@plt>
   237fc:	cmp	r0, #0
   23800:	bne	23810 <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   23804:	ldr	r0, [r5, #8]
   23808:	cmp	r0, #1
   2380c:	bne	237c0 <myhtml_insertion_mode_in_foreign_content@@Base+0x2e0>
   23810:	mov	r0, r6
   23814:	pop	{r4, r5, r6, sl, fp, pc}
   23818:	ldr	r0, [r5, #48]	; 0x30
   2381c:	tst	r0, #2048	; 0x800
   23820:	beq	2383c <myhtml_insertion_mode_in_foreign_content@@Base+0x35c>
   23824:	ldr	r0, [r4, #8]
   23828:	mov	r1, r5
   2382c:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   23830:	mov	r0, r4
   23834:	mov	r1, r5
   23838:	bl	11770 <myhtml_token_set_replacement_character_for_null_token@plt>
   2383c:	mov	r0, r4
   23840:	mov	r1, r5
   23844:	bl	1141c <myhtml_tree_node_insert_text@plt>
   23848:	ldr	r0, [r5, #48]	; 0x30
   2384c:	tst	r0, #8
   23850:	bne	23810 <myhtml_insertion_mode_in_foreign_content@@Base+0x330>
   23854:	ldr	r0, [r4, #180]	; 0xb4
   23858:	ldr	r1, [r4, #180]	; 0xb4
   2385c:	and	r0, r0, #2
   23860:	eor	r0, r1, r0
   23864:	str	r0, [r4, #180]	; 0xb4
   23868:	mov	r0, r6
   2386c:	pop	{r4, r5, r6, sl, fp, pc}
   23870:	mov	r6, #0
   23874:	mov	r0, r4
   23878:	mov	r1, r5
   2387c:	mov	r2, #0
   23880:	bl	116bc <myhtml_tree_node_insert_comment@plt>
   23884:	mov	r0, r6
   23888:	pop	{r4, r5, r6, sl, fp, pc}
   2388c:	ldr	r0, [r4, #8]
   23890:	mov	r1, r5
   23894:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   23898:	ldr	r1, [pc, #80]	; 238f0 <myhtml_insertion_mode_in_foreign_content@@Base+0x410>
   2389c:	add	r1, pc, r1
   238a0:	mov	r0, r5
   238a4:	mov	r2, #5
   238a8:	bl	1225c <myhtml_token_attr_by_name@plt>
   238ac:	cmp	r0, #0
   238b0:	bne	2374c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   238b4:	ldr	r1, [pc, #56]	; 238f4 <myhtml_insertion_mode_in_foreign_content@@Base+0x414>
   238b8:	add	r1, pc, r1
   238bc:	mov	r0, r5
   238c0:	mov	r2, #4
   238c4:	bl	1225c <myhtml_token_attr_by_name@plt>
   238c8:	cmp	r0, #0
   238cc:	bne	2374c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   238d0:	ldr	r1, [pc, #32]	; 238f8 <myhtml_insertion_mode_in_foreign_content@@Base+0x418>
   238d4:	add	r1, pc, r1
   238d8:	mov	r0, r5
   238dc:	mov	r2, #4
   238e0:	bl	1225c <myhtml_token_attr_by_name@plt>
   238e4:	cmp	r0, #0
   238e8:	bne	2374c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   238ec:	b	23758 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   238f0:	andeq	r9, sp, r2, lsl r5
   238f4:	ldrdeq	r9, [sp], -fp
   238f8:	andeq	r9, sp, r0, ror #9

000238fc <myhtml_rules_check_for_first_newline@@Base>:
   238fc:	push	{r4, r5, r6, sl, fp, lr}
   23900:	add	fp, sp, #16
   23904:	mov	r5, r0
   23908:	ldr	r0, [r0, #180]	; 0xb4
   2390c:	mov	r4, #0
   23910:	tst	r0, #64	; 0x40
   23914:	beq	2398c <myhtml_rules_check_for_first_newline@@Base+0x90>
   23918:	ldr	r0, [r5, #180]	; 0xb4
   2391c:	tst	r0, #128	; 0x80
   23920:	beq	23978 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   23924:	mov	r6, r1
   23928:	ldr	r0, [r1]
   2392c:	cmp	r0, #1
   23930:	bne	23978 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   23934:	ldr	r0, [r5, #8]
   23938:	mov	r1, r6
   2393c:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   23940:	ldr	r0, [r6, #12]
   23944:	cmp	r0, #0
   23948:	beq	239a8 <myhtml_rules_check_for_first_newline@@Base+0xac>
   2394c:	ldr	r0, [r6, #4]
   23950:	ldrb	r1, [r0]
   23954:	cmp	r1, #10
   23958:	bne	23978 <myhtml_rules_check_for_first_newline@@Base+0x7c>
   2395c:	mov	r1, #1
   23960:	bl	1201c <mchar_async_crop_first_chars_without_cache@plt>
   23964:	str	r0, [r6, #4]
   23968:	ldr	r0, [r6, #12]
   2396c:	subs	r0, r0, #1
   23970:	str	r0, [r6, #12]
   23974:	beq	23994 <myhtml_rules_check_for_first_newline@@Base+0x98>
   23978:	ldr	r0, [r5, #180]	; 0xb4
   2397c:	ldr	r1, [r5, #180]	; 0xb4
   23980:	and	r0, r0, #64	; 0x40
   23984:	eor	r0, r1, r0
   23988:	str	r0, [r5, #180]	; 0xb4
   2398c:	mov	r0, r4
   23990:	pop	{r4, r5, r6, sl, fp, pc}
   23994:	ldr	r0, [r5, #180]	; 0xb4
   23998:	ldr	r1, [r5, #180]	; 0xb4
   2399c:	and	r0, r0, #64	; 0x40
   239a0:	eor	r0, r1, r0
   239a4:	str	r0, [r5, #180]	; 0xb4
   239a8:	mov	r4, #1
   239ac:	mov	r0, r4
   239b0:	pop	{r4, r5, r6, sl, fp, pc}

000239b4 <myhtml_rules_tree_dispatcher@@Base>:
   239b4:	push	{r4, r5, r6, sl, fp, lr}
   239b8:	add	fp, sp, #16
   239bc:	mov	r4, r1
   239c0:	mov	r5, r0
   239c4:	bl	12118 <myhtml_rules_check_for_first_newline@plt>
   239c8:	cmp	r0, #0
   239cc:	bne	23adc <myhtml_rules_tree_dispatcher@@Base+0x128>
   239d0:	ldr	r0, [r5, #164]	; 0xa4
   239d4:	cmp	r0, #0
   239d8:	movne	r0, #0
   239dc:	strne	r0, [r5, #164]	; 0xa4
   239e0:	mov	r0, r5
   239e4:	bl	12100 <myhtml_tree_adjusted_current_node@plt>
   239e8:	mov	r6, r0
   239ec:	ldr	r0, [r5, #128]	; 0x80
   239f0:	ldr	r0, [r0, #4]
   239f4:	cmp	r0, #0
   239f8:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   239fc:	ldr	r0, [r6, #8]
   23a00:	cmp	r0, #1
   23a04:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   23a08:	mov	r0, r5
   23a0c:	mov	r1, r6
   23a10:	bl	114d0 <myhtml_tree_is_mathml_integration_point@plt>
   23a14:	cmp	r0, #0
   23a18:	beq	23a2c <myhtml_rules_tree_dispatcher@@Base+0x78>
   23a1c:	ldr	r0, [r4]
   23a20:	cmp	r0, #221	; 0xdd
   23a24:	cmpne	r0, #226	; 0xe2
   23a28:	bne	23aa4 <myhtml_rules_tree_dispatcher@@Base+0xf0>
   23a2c:	ldr	r0, [r6, #4]
   23a30:	cmp	r0, #8
   23a34:	bne	23a5c <myhtml_rules_tree_dispatcher@@Base+0xa8>
   23a38:	ldr	r0, [r6, #8]
   23a3c:	cmp	r0, #2
   23a40:	bne	23a5c <myhtml_rules_tree_dispatcher@@Base+0xa8>
   23a44:	ldr	r0, [r4]
   23a48:	cmp	r0, #124	; 0x7c
   23a4c:	bne	23a5c <myhtml_rules_tree_dispatcher@@Base+0xa8>
   23a50:	ldr	r0, [r4, #48]	; 0x30
   23a54:	tst	r0, #1
   23a58:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   23a5c:	mov	r0, r5
   23a60:	mov	r1, r6
   23a64:	bl	11668 <myhtml_tree_is_html_integration_point@plt>
   23a68:	cmp	r0, #0
   23a6c:	beq	23a88 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   23a70:	ldr	r0, [r4, #48]	; 0x30
   23a74:	tst	r0, #1
   23a78:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   23a7c:	ldr	r0, [r4]
   23a80:	cmp	r0, #1
   23a84:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   23a88:	ldr	r0, [r4]
   23a8c:	cmp	r0, #251	; 0xfb
   23a90:	beq	23ab0 <myhtml_rules_tree_dispatcher@@Base+0xfc>
   23a94:	mov	r0, r5
   23a98:	mov	r1, r4
   23a9c:	bl	112cc <myhtml_insertion_mode_in_foreign_content@plt>
   23aa0:	b	23acc <myhtml_rules_tree_dispatcher@@Base+0x118>
   23aa4:	ldr	r0, [r4, #48]	; 0x30
   23aa8:	tst	r0, #1
   23aac:	bne	23a2c <myhtml_rules_tree_dispatcher@@Base+0x78>
   23ab0:	ldr	r0, [r5]
   23ab4:	ldr	r1, [r5, #168]	; 0xa8
   23ab8:	ldr	r0, [r0, #28]
   23abc:	ldr	r2, [r0, r1, lsl #2]
   23ac0:	mov	r0, r5
   23ac4:	mov	r1, r4
   23ac8:	blx	r2
   23acc:	mov	r1, r0
   23ad0:	mov	r0, #1
   23ad4:	cmp	r1, #0
   23ad8:	bne	23ae4 <myhtml_rules_tree_dispatcher@@Base+0x130>
   23adc:	str	r4, [r5, #152]	; 0x98
   23ae0:	mov	r0, #0
   23ae4:	pop	{r4, r5, r6, sl, fp, pc}

00023ae8 <myhtml_rules_init@@Base>:
   23ae8:	push	{r4, sl, fp, lr}
   23aec:	add	fp, sp, #8
   23af0:	mov	r4, r0
   23af4:	mov	r0, #92	; 0x5c
   23af8:	bl	1204c <mycore_malloc@plt>
   23afc:	str	r0, [r4, #28]!
   23b00:	cmp	r0, #0
   23b04:	beq	23c7c <myhtml_rules_init@@Base+0x194>
   23b08:	ldr	r1, [pc, #372]	; 23c84 <myhtml_rules_init@@Base+0x19c>
   23b0c:	ldr	r1, [pc, r1]
   23b10:	str	r1, [r0]
   23b14:	ldr	r0, [r4]
   23b18:	ldr	r1, [pc, #360]	; 23c88 <myhtml_rules_init@@Base+0x1a0>
   23b1c:	ldr	r1, [pc, r1]
   23b20:	str	r1, [r0, #4]
   23b24:	ldr	r0, [r4]
   23b28:	ldr	r1, [pc, #348]	; 23c8c <myhtml_rules_init@@Base+0x1a4>
   23b2c:	ldr	r1, [pc, r1]
   23b30:	str	r1, [r0, #8]
   23b34:	ldr	r0, [r4]
   23b38:	ldr	r1, [pc, #336]	; 23c90 <myhtml_rules_init@@Base+0x1a8>
   23b3c:	ldr	r1, [pc, r1]
   23b40:	str	r1, [r0, #12]
   23b44:	ldr	r0, [r4]
   23b48:	ldr	r1, [pc, #324]	; 23c94 <myhtml_rules_init@@Base+0x1ac>
   23b4c:	ldr	r1, [pc, r1]
   23b50:	str	r1, [r0, #16]
   23b54:	ldr	r0, [r4]
   23b58:	ldr	r1, [pc, #312]	; 23c98 <myhtml_rules_init@@Base+0x1b0>
   23b5c:	ldr	r1, [pc, r1]
   23b60:	str	r1, [r0, #20]
   23b64:	ldr	r0, [r4]
   23b68:	ldr	r1, [pc, #300]	; 23c9c <myhtml_rules_init@@Base+0x1b4>
   23b6c:	ldr	r1, [pc, r1]
   23b70:	str	r1, [r0, #24]
   23b74:	ldr	r0, [r4]
   23b78:	ldr	r1, [pc, #288]	; 23ca0 <myhtml_rules_init@@Base+0x1b8>
   23b7c:	ldr	r1, [pc, r1]
   23b80:	str	r1, [r0, #28]
   23b84:	ldr	r0, [r4]
   23b88:	ldr	r1, [pc, #276]	; 23ca4 <myhtml_rules_init@@Base+0x1bc>
   23b8c:	ldr	r1, [pc, r1]
   23b90:	str	r1, [r0, #32]
   23b94:	ldr	r0, [r4]
   23b98:	ldr	r1, [pc, #264]	; 23ca8 <myhtml_rules_init@@Base+0x1c0>
   23b9c:	ldr	r1, [pc, r1]
   23ba0:	str	r1, [r0, #36]	; 0x24
   23ba4:	ldr	r0, [r4]
   23ba8:	ldr	r1, [pc, #252]	; 23cac <myhtml_rules_init@@Base+0x1c4>
   23bac:	ldr	r1, [pc, r1]
   23bb0:	str	r1, [r0, #40]	; 0x28
   23bb4:	ldr	r0, [r4]
   23bb8:	ldr	r1, [pc, #240]	; 23cb0 <myhtml_rules_init@@Base+0x1c8>
   23bbc:	ldr	r1, [pc, r1]
   23bc0:	str	r1, [r0, #44]	; 0x2c
   23bc4:	ldr	r0, [r4]
   23bc8:	ldr	r1, [pc, #228]	; 23cb4 <myhtml_rules_init@@Base+0x1cc>
   23bcc:	ldr	r1, [pc, r1]
   23bd0:	str	r1, [r0, #48]	; 0x30
   23bd4:	ldr	r0, [r4]
   23bd8:	ldr	r1, [pc, #216]	; 23cb8 <myhtml_rules_init@@Base+0x1d0>
   23bdc:	ldr	r1, [pc, r1]
   23be0:	str	r1, [r0, #52]	; 0x34
   23be4:	ldr	r0, [r4]
   23be8:	ldr	r1, [pc, #204]	; 23cbc <myhtml_rules_init@@Base+0x1d4>
   23bec:	ldr	r1, [pc, r1]
   23bf0:	str	r1, [r0, #56]	; 0x38
   23bf4:	ldr	r0, [r4]
   23bf8:	ldr	r1, [pc, #192]	; 23cc0 <myhtml_rules_init@@Base+0x1d8>
   23bfc:	ldr	r1, [pc, r1]
   23c00:	str	r1, [r0, #60]	; 0x3c
   23c04:	ldr	r0, [r4]
   23c08:	ldr	r1, [pc, #180]	; 23cc4 <myhtml_rules_init@@Base+0x1dc>
   23c0c:	ldr	r1, [pc, r1]
   23c10:	str	r1, [r0, #64]	; 0x40
   23c14:	ldr	r0, [r4]
   23c18:	ldr	r1, [pc, #168]	; 23cc8 <myhtml_rules_init@@Base+0x1e0>
   23c1c:	ldr	r1, [pc, r1]
   23c20:	str	r1, [r0, #68]	; 0x44
   23c24:	ldr	r0, [r4]
   23c28:	ldr	r1, [pc, #156]	; 23ccc <myhtml_rules_init@@Base+0x1e4>
   23c2c:	ldr	r1, [pc, r1]
   23c30:	str	r1, [r0, #72]	; 0x48
   23c34:	ldr	r0, [r4]
   23c38:	ldr	r1, [pc, #144]	; 23cd0 <myhtml_rules_init@@Base+0x1e8>
   23c3c:	ldr	r1, [pc, r1]
   23c40:	str	r1, [r0, #76]	; 0x4c
   23c44:	ldr	r0, [r4]
   23c48:	ldr	r1, [pc, #132]	; 23cd4 <myhtml_rules_init@@Base+0x1ec>
   23c4c:	ldr	r1, [pc, r1]
   23c50:	str	r1, [r0, #80]	; 0x50
   23c54:	ldr	r0, [r4]
   23c58:	ldr	r1, [pc, #120]	; 23cd8 <myhtml_rules_init@@Base+0x1f0>
   23c5c:	ldr	r1, [pc, r1]
   23c60:	str	r1, [r0, #84]	; 0x54
   23c64:	ldr	r0, [r4]
   23c68:	ldr	r1, [pc, #108]	; 23cdc <myhtml_rules_init@@Base+0x1f4>
   23c6c:	ldr	r1, [pc, r1]
   23c70:	str	r1, [r0, #88]	; 0x58
   23c74:	mov	r0, #0
   23c78:	pop	{r4, sl, fp, pc}
   23c7c:	movw	r0, #36964	; 0x9064
   23c80:	pop	{r4, sl, fp, pc}
   23c84:	andeq	r3, pc, r8, lsr #25
   23c88:	andeq	r3, pc, r4, asr #27
   23c8c:	andeq	r3, pc, r0, asr #27
   23c90:	strdeq	r3, [pc], -ip
   23c94:	andeq	r3, pc, r0, asr #26
   23c98:	andeq	r3, pc, ip, asr sp	; <UNPREDICTABLE>
   23c9c:			; <UNDEFINED> instruction: 0x000f3cb8
   23ca0:	andeq	r3, pc, r0, lsl ip	; <UNPREDICTABLE>
   23ca4:	ldrdeq	r3, [pc], -ip
   23ca8:	ldrdeq	r3, [pc], -r4
   23cac:	andeq	r3, pc, r4, lsl #26
   23cb0:	andeq	r3, pc, r4, ror #25
   23cb4:	ldrdeq	r3, [pc], -ip
   23cb8:	andeq	r3, pc, r8, asr fp	; <UNPREDICTABLE>
   23cbc:	andeq	r3, pc, r4, asr #26
   23cc0:	andeq	r3, pc, r8, asr #23
   23cc4:	andeq	r3, pc, ip, lsl ip	; <UNPREDICTABLE>
   23cc8:	ldrdeq	r3, [pc], -r0
   23ccc:	andeq	r3, pc, ip, lsr #26
   23cd0:	andeq	r3, pc, r0, asr #25
   23cd4:	andeq	r3, pc, r4, ror #20
   23cd8:	andeq	r3, pc, r0, asr sl	; <UNPREDICTABLE>
   23cdc:	andeq	r3, pc, r0, asr #22

00023ce0 <myhtml_serialization@@Base>:
   23ce0:	b	23ce4 <myhtml_serialization_tree_buffer@@Base>

00023ce4 <myhtml_serialization_tree_buffer@@Base>:
   23ce4:	push	{r4, r5, r6, sl, fp, lr}
   23ce8:	add	fp, sp, #16
   23cec:	cmp	r1, #0
   23cf0:	beq	23d40 <myhtml_serialization_tree_buffer@@Base+0x5c>
   23cf4:	mov	r4, r1
   23cf8:	mov	r5, r0
   23cfc:	ldr	r0, [r1]
   23d00:	cmp	r0, #0
   23d04:	bne	23d28 <myhtml_serialization_tree_buffer@@Base+0x44>
   23d08:	mov	r6, #0
   23d0c:	movw	r0, #20490	; 0x500a
   23d10:	stmib	r4, {r0, r6}
   23d14:	movw	r0, #20490	; 0x500a
   23d18:	bl	1204c <mycore_malloc@plt>
   23d1c:	str	r0, [r4]
   23d20:	cmp	r0, #0
   23d24:	beq	23d48 <myhtml_serialization_tree_buffer@@Base+0x64>
   23d28:	ldr	r1, [pc, #36]	; 23d54 <myhtml_serialization_tree_buffer@@Base+0x70>
   23d2c:	ldr	r1, [pc, r1]
   23d30:	mov	r0, r5
   23d34:	mov	r2, r4
   23d38:	pop	{r4, r5, r6, sl, fp, lr}
   23d3c:	b	23dc8 <myhtml_serialization_tree_callback@@Base>
   23d40:	mov	r0, #0
   23d44:	pop	{r4, r5, r6, sl, fp, pc}
   23d48:	str	r6, [r4, #4]
   23d4c:	mov	r0, #2
   23d50:	pop	{r4, r5, r6, sl, fp, pc}
   23d54:	andeq	r3, pc, r8, lsl #22

00023d58 <myhtml_serialization_node@@Base>:
   23d58:	b	23d5c <myhtml_serialization_node_buffer@@Base>

00023d5c <myhtml_serialization_node_buffer@@Base>:
   23d5c:	push	{r4, r5, r6, sl, fp, lr}
   23d60:	add	fp, sp, #16
   23d64:	cmp	r1, #0
   23d68:	beq	23dbc <myhtml_serialization_node_buffer@@Base+0x60>
   23d6c:	mov	r4, r1
   23d70:	mov	r5, r0
   23d74:	ldr	r0, [r1]
   23d78:	cmp	r0, #0
   23d7c:	bne	23da0 <myhtml_serialization_node_buffer@@Base+0x44>
   23d80:	mov	r6, #0
   23d84:	mov	r0, #2048	; 0x800
   23d88:	stmib	r4, {r0, r6}
   23d8c:	mov	r0, #2048	; 0x800
   23d90:	bl	1204c <mycore_malloc@plt>
   23d94:	str	r0, [r4]
   23d98:	cmp	r0, #0
   23d9c:	beq	23db8 <myhtml_serialization_node_buffer@@Base+0x5c>
   23da0:	ldr	r1, [pc, #28]	; 23dc4 <myhtml_serialization_node_buffer@@Base+0x68>
   23da4:	ldr	r1, [pc, r1]
   23da8:	mov	r0, r5
   23dac:	mov	r2, r4
   23db0:	pop	{r4, r5, r6, sl, fp, lr}
   23db4:	b	23ec8 <myhtml_serialization_node_callback@@Base>
   23db8:	str	r6, [r4, #4]
   23dbc:	mov	r0, #0
   23dc0:	pop	{r4, r5, r6, sl, fp, pc}
   23dc4:	muleq	pc, r0, sl	; <UNPREDICTABLE>

00023dc8 <myhtml_serialization_tree_callback@@Base>:
   23dc8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23dcc:	add	fp, sp, #24
   23dd0:	cmp	r0, #0
   23dd4:	beq	23ebc <myhtml_serialization_tree_callback@@Base+0xf4>
   23dd8:	mov	r9, r2
   23ddc:	mov	r5, r1
   23de0:	mov	r6, r0
   23de4:	ldr	r0, [r0, #40]	; 0x28
   23de8:	cmp	r0, #0
   23dec:	mov	r7, r6
   23df0:	beq	23e10 <myhtml_serialization_tree_callback@@Base+0x48>
   23df4:	ldr	r0, [r0, #84]	; 0x54
   23df8:	cmp	r0, r6
   23dfc:	mov	r7, r6
   23e00:	bne	23e10 <myhtml_serialization_tree_callback@@Base+0x48>
   23e04:	ldr	r7, [r6, #20]
   23e08:	cmp	r7, #0
   23e0c:	beq	23ebc <myhtml_serialization_tree_callback@@Base+0xf4>
   23e10:	mov	r8, #2
   23e14:	mov	r0, r7
   23e18:	mov	r1, r5
   23e1c:	mov	r2, r9
   23e20:	bl	11b30 <myhtml_serialization_node_callback@plt>
   23e24:	cmp	r0, #0
   23e28:	bne	23eb4 <myhtml_serialization_tree_callback@@Base+0xec>
   23e2c:	ldr	r0, [r7, #20]
   23e30:	cmp	r0, #0
   23e34:	beq	23e4c <myhtml_serialization_tree_callback@@Base+0x84>
   23e38:	cmp	r0, #0
   23e3c:	mov	r7, r0
   23e40:	bne	23e14 <myhtml_serialization_tree_callback@@Base+0x4c>
   23e44:	b	23ebc <myhtml_serialization_tree_callback@@Base+0xf4>
   23e48:	ldr	r7, [r7, #24]
   23e4c:	cmp	r7, r6
   23e50:	beq	23e8c <myhtml_serialization_tree_callback@@Base+0xc4>
   23e54:	ldr	r4, [r7, #16]
   23e58:	mov	r0, r7
   23e5c:	mov	r1, r5
   23e60:	mov	r2, r9
   23e64:	bl	24274 <myhtml_serialization_node_callback@@Base+0x3ac>
   23e68:	cmp	r4, #0
   23e6c:	bne	23e7c <myhtml_serialization_tree_callback@@Base+0xb4>
   23e70:	cmp	r0, #0
   23e74:	beq	23e48 <myhtml_serialization_tree_callback@@Base+0x80>
   23e78:	b	23eb4 <myhtml_serialization_tree_callback@@Base+0xec>
   23e7c:	cmp	r0, #0
   23e80:	bne	23eb4 <myhtml_serialization_tree_callback@@Base+0xec>
   23e84:	ldr	r0, [r7, #16]
   23e88:	b	23e38 <myhtml_serialization_tree_callback@@Base+0x70>
   23e8c:	ldr	r0, [r7, #40]	; 0x28
   23e90:	ldr	r0, [r0, #84]	; 0x54
   23e94:	cmp	r7, r0
   23e98:	beq	23ebc <myhtml_serialization_tree_callback@@Base+0xf4>
   23e9c:	mov	r0, r7
   23ea0:	mov	r1, r5
   23ea4:	mov	r2, r9
   23ea8:	bl	24274 <myhtml_serialization_node_callback@@Base+0x3ac>
   23eac:	cmp	r0, #0
   23eb0:	moveq	r8, #0
   23eb4:	mov	r0, r8
   23eb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23ebc:	mov	r8, #0
   23ec0:	mov	r0, r8
   23ec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00023ec8 <myhtml_serialization_node_callback@@Base>:
   23ec8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23ecc:	add	fp, sp, #24
   23ed0:	sub	sp, sp, #8
   23ed4:	mov	r5, r2
   23ed8:	mov	r4, r1
   23edc:	mov	r7, r0
   23ee0:	ldr	r1, [r0, #4]
   23ee4:	cmp	r1, #3
   23ee8:	beq	23f1c <myhtml_serialization_node_callback@@Base+0x54>
   23eec:	cmp	r1, #2
   23ef0:	beq	24054 <myhtml_serialization_node_callback@@Base+0x18c>
   23ef4:	cmp	r1, #1
   23ef8:	bne	240c4 <myhtml_serialization_node_callback@@Base+0x1fc>
   23efc:	mov	r0, r7
   23f00:	mov	r1, r4
   23f04:	mov	r2, r5
   23f08:	bl	24568 <myhtml_serialization_node_callback@@Base+0x6a0>
   23f0c:	mov	r6, #2
   23f10:	cmp	r0, #0
   23f14:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   23f18:	b	240bc <myhtml_serialization_node_callback@@Base+0x1f4>
   23f1c:	ldr	r0, [pc, #800]	; 24244 <myhtml_serialization_node_callback@@Base+0x37c>
   23f20:	add	r0, pc, r0
   23f24:	mov	r1, #9
   23f28:	mov	r2, r5
   23f2c:	blx	r4
   23f30:	mov	r6, #2
   23f34:	cmp	r0, #0
   23f38:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   23f3c:	ldr	r0, [pc, #772]	; 24248 <myhtml_serialization_node_callback@@Base+0x380>
   23f40:	add	r0, pc, r0
   23f44:	mov	r1, #1
   23f48:	mov	r2, r5
   23f4c:	blx	r4
   23f50:	cmp	r0, #0
   23f54:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   23f58:	ldr	r0, [r7, #32]
   23f5c:	cmp	r0, #0
   23f60:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23f64:	ldr	r7, [r0, #40]	; 0x28
   23f68:	cmp	r7, #0
   23f6c:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23f70:	ldr	r0, [r7, #8]
   23f74:	cmp	r0, #0
   23f78:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23f7c:	ldr	r1, [r7, #16]
   23f80:	cmp	r1, #0
   23f84:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23f88:	mov	r2, r5
   23f8c:	blx	r4
   23f90:	cmp	r0, #0
   23f94:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   23f98:	ldr	r7, [r7]
   23f9c:	cmp	r7, #0
   23fa0:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23fa4:	ldr	r0, [r7, #36]	; 0x24
   23fa8:	cmp	r0, #6
   23fac:	bne	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23fb0:	ldr	r0, [r7, #28]
   23fb4:	ldr	r1, [pc, #656]	; 2424c <myhtml_serialization_node_callback@@Base+0x384>
   23fb8:	add	r1, pc, r1
   23fbc:	bl	1195c <mycore_strcasecmp@plt>
   23fc0:	cmp	r0, #0
   23fc4:	beq	24154 <myhtml_serialization_node_callback@@Base+0x28c>
   23fc8:	ldr	r0, [r7, #28]
   23fcc:	ldr	r1, [pc, #636]	; 24250 <myhtml_serialization_node_callback@@Base+0x388>
   23fd0:	add	r1, pc, r1
   23fd4:	bl	1195c <mycore_strcasecmp@plt>
   23fd8:	cmp	r0, #0
   23fdc:	bne	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23fe0:	ldr	r7, [r7]
   23fe4:	cmp	r7, #0
   23fe8:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   23fec:	ldr	r8, [r7]
   23ff0:	ldr	r0, [r7, #36]	; 0x24
   23ff4:	cmp	r0, #0
   23ff8:	beq	2420c <myhtml_serialization_node_callback@@Base+0x344>
   23ffc:	ldr	r0, [pc, #592]	; 24254 <myhtml_serialization_node_callback@@Base+0x38c>
   24000:	add	r0, pc, r0
   24004:	mov	r1, #9
   24008:	mov	r2, r5
   2400c:	blx	r4
   24010:	cmp	r0, #0
   24014:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   24018:	ldr	r0, [r7, #28]
   2401c:	ldr	r1, [r7, #36]	; 0x24
   24020:	mov	r2, r5
   24024:	blx	r4
   24028:	cmp	r0, #0
   2402c:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   24030:	ldr	r0, [pc, #544]	; 24258 <myhtml_serialization_node_callback@@Base+0x390>
   24034:	add	r0, pc, r0
   24038:	mov	r9, #1
   2403c:	mov	r1, #1
   24040:	mov	r2, r5
   24044:	blx	r4
   24048:	cmp	r0, #0
   2404c:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   24050:	b	24160 <myhtml_serialization_node_callback@@Base+0x298>
   24054:	ldr	r0, [pc, #480]	; 2423c <myhtml_serialization_node_callback@@Base+0x374>
   24058:	add	r0, pc, r0
   2405c:	mov	r1, #4
   24060:	mov	r2, r5
   24064:	blx	r4
   24068:	mov	r6, #2
   2406c:	cmp	r0, #0
   24070:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   24074:	ldr	r1, [r7, #32]
   24078:	cmp	r1, #0
   2407c:	beq	240a0 <myhtml_serialization_node_callback@@Base+0x1d8>
   24080:	ldr	r0, [r1, #4]
   24084:	cmp	r0, #0
   24088:	beq	240a0 <myhtml_serialization_node_callback@@Base+0x1d8>
   2408c:	ldr	r1, [r1, #12]
   24090:	mov	r2, r5
   24094:	blx	r4
   24098:	cmp	r0, #0
   2409c:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   240a0:	ldr	r0, [pc, #408]	; 24240 <myhtml_serialization_node_callback@@Base+0x378>
   240a4:	add	r0, pc, r0
   240a8:	mov	r1, #3
   240ac:	mov	r2, r5
   240b0:	blx	r4
   240b4:	cmp	r0, #0
   240b8:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   240bc:	mov	r6, #0
   240c0:	b	2410c <myhtml_serialization_node_callback@@Base+0x244>
   240c4:	ldr	r0, [r7, #40]	; 0x28
   240c8:	add	r2, sp, #4
   240cc:	bl	11ee4 <myhtml_tag_name_by_id@plt>
   240d0:	mov	r6, r0
   240d4:	ldr	r0, [pc, #400]	; 2426c <myhtml_serialization_node_callback@@Base+0x3a4>
   240d8:	add	r0, pc, r0
   240dc:	mov	r1, #1
   240e0:	mov	r2, r5
   240e4:	blx	r4
   240e8:	cmp	r0, #0
   240ec:	bne	24108 <myhtml_serialization_node_callback@@Base+0x240>
   240f0:	ldr	r1, [sp, #4]
   240f4:	mov	r0, r6
   240f8:	mov	r2, r5
   240fc:	blx	r4
   24100:	cmp	r0, #0
   24104:	beq	24118 <myhtml_serialization_node_callback@@Base+0x250>
   24108:	mov	r6, #2
   2410c:	mov	r0, r6
   24110:	sub	sp, fp, #24
   24114:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   24118:	ldr	r0, [r7, #32]
   2411c:	cmp	r0, #0
   24120:	beq	2413c <myhtml_serialization_node_callback@@Base+0x274>
   24124:	ldr	r0, [r0, #40]	; 0x28
   24128:	mov	r1, r4
   2412c:	mov	r2, r5
   24130:	bl	246f4 <myhtml_serialization_node_callback@@Base+0x82c>
   24134:	cmp	r0, #0
   24138:	bne	24108 <myhtml_serialization_node_callback@@Base+0x240>
   2413c:	ldr	r0, [pc, #300]	; 24270 <myhtml_serialization_node_callback@@Base+0x3a8>
   24140:	add	r0, pc, r0
   24144:	mov	r1, #1
   24148:	mov	r2, r5
   2414c:	blx	r4
   24150:	b	23f0c <myhtml_serialization_node_callback@@Base+0x44>
   24154:	ldr	r8, [r7]
   24158:	mov	r9, #0
   2415c:	mov	r7, #0
   24160:	cmp	r8, #0
   24164:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   24168:	ldr	r0, [r8, #36]	; 0x24
   2416c:	cmp	r0, #0
   24170:	beq	24218 <myhtml_serialization_node_callback@@Base+0x350>
   24174:	cmp	r9, #0
   24178:	beq	24188 <myhtml_serialization_node_callback@@Base+0x2c0>
   2417c:	ldr	r0, [r7, #36]	; 0x24
   24180:	cmp	r0, #0
   24184:	bne	241a4 <myhtml_serialization_node_callback@@Base+0x2dc>
   24188:	ldr	r0, [pc, #204]	; 2425c <myhtml_serialization_node_callback@@Base+0x394>
   2418c:	add	r0, pc, r0
   24190:	mov	r1, #7
   24194:	mov	r2, r5
   24198:	blx	r4
   2419c:	cmp	r0, #0
   241a0:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   241a4:	ldr	r0, [pc, #180]	; 24260 <myhtml_serialization_node_callback@@Base+0x398>
   241a8:	add	r0, pc, r0
   241ac:	mov	r6, #2
   241b0:	mov	r1, #2
   241b4:	mov	r2, r5
   241b8:	blx	r4
   241bc:	cmp	r0, #0
   241c0:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   241c4:	ldr	r0, [r8, #28]
   241c8:	cmp	r0, #0
   241cc:	beq	241ec <myhtml_serialization_node_callback@@Base+0x324>
   241d0:	ldr	r1, [r8, #36]	; 0x24
   241d4:	cmp	r1, #0
   241d8:	beq	241ec <myhtml_serialization_node_callback@@Base+0x324>
   241dc:	mov	r2, r5
   241e0:	blx	r4
   241e4:	cmp	r0, #0
   241e8:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   241ec:	ldr	r0, [pc, #112]	; 24264 <myhtml_serialization_node_callback@@Base+0x39c>
   241f0:	add	r0, pc, r0
   241f4:	mov	r1, #1
   241f8:	mov	r2, r5
   241fc:	blx	r4
   24200:	cmp	r0, #0
   24204:	bne	2410c <myhtml_serialization_node_callback@@Base+0x244>
   24208:	b	24218 <myhtml_serialization_node_callback@@Base+0x350>
   2420c:	mov	r9, #1
   24210:	cmp	r8, #0
   24214:	bne	24168 <myhtml_serialization_node_callback@@Base+0x2a0>
   24218:	ldr	r0, [pc, #72]	; 24268 <myhtml_serialization_node_callback@@Base+0x3a0>
   2421c:	add	r0, pc, r0
   24220:	mov	r1, #1
   24224:	mov	r2, r5
   24228:	blx	r4
   2422c:	cmp	r0, #0
   24230:	mov	r6, #2
   24234:	moveq	r6, #0
   24238:	b	2410c <myhtml_serialization_node_callback@@Base+0x244>
   2423c:	andeq	r8, sp, r1, ror #26
   24240:	andeq	r8, sp, sl, lsl sp
   24244:	andeq	r8, sp, r2, lsr #29
   24248:	andeq	r8, sp, ip, lsl #29
   2424c:	andeq	r8, sp, r8, lsr #28
   24250:	strdeq	r8, [sp], -lr
   24254:	ldrdeq	r8, [sp], -r5
   24258:	andeq	r8, sp, r9, lsr #27
   2425c:	andeq	r8, sp, r3, asr ip
   24260:	andeq	r8, sp, r4, lsr ip
   24264:	andeq	r8, sp, sp, ror #23
   24268:	andeq	r8, sp, r4, lsr #23
   2426c:	andeq	r8, sp, pc, lsl #26
   24270:	andeq	r8, sp, r0, lsl #25
   24274:	push	{r4, r5, r6, r7, fp, lr}
   24278:	add	fp, sp, #16
   2427c:	sub	sp, sp, #8
   24280:	mov	r5, r2
   24284:	mov	r4, r1
   24288:	ldr	r1, [r0, #4]
   2428c:	sub	r2, r1, #1
   24290:	cmp	r2, #141	; 0x8d
   24294:	bhi	244ec <myhtml_serialization_node_callback@@Base+0x624>
   24298:	mov	r6, #0
   2429c:	add	r3, pc, #4
   242a0:	ldr	r2, [r3, r2, lsl #2]
   242a4:	add	pc, r3, r2
   242a8:	andeq	r0, r0, ip, lsr #5
   242ac:	andeq	r0, r0, ip, lsr #5
   242b0:	andeq	r0, r0, ip, lsr #5
   242b4:	andeq	r0, r0, r4, asr #4
   242b8:	andeq	r0, r0, r4, asr #4
   242bc:	andeq	r0, r0, r4, asr #4
   242c0:	andeq	r0, r0, r4, asr #4
   242c4:	andeq	r0, r0, r4, asr #4
   242c8:	andeq	r0, r0, r4, asr #4
   242cc:	andeq	r0, r0, r8, lsr r2
   242d0:	andeq	r0, r0, r4, asr #4
   242d4:	andeq	r0, r0, r4, asr #4
   242d8:	andeq	r0, r0, r4, asr #4
   242dc:	andeq	r0, r0, r4, asr #4
   242e0:	andeq	r0, r0, r8, lsr r2
   242e4:	andeq	r0, r0, r4, asr #4
   242e8:	andeq	r0, r0, r4, asr #4
   242ec:	andeq	r0, r0, r4, asr #4
   242f0:	andeq	r0, r0, r8, lsr r2
   242f4:	andeq	r0, r0, r4, asr #4
   242f8:	andeq	r0, r0, r4, asr #4
   242fc:	andeq	r0, r0, r4, asr #4
   24300:	andeq	r0, r0, r4, asr #4
   24304:	andeq	r0, r0, r8, lsr r2
   24308:	andeq	r0, r0, r4, asr #4
   2430c:	andeq	r0, r0, r4, asr #4
   24310:	andeq	r0, r0, r4, asr #4
   24314:	andeq	r0, r0, r4, asr #4
   24318:	andeq	r0, r0, r4, asr #4
   2431c:	andeq	r0, r0, r4, asr #4
   24320:	andeq	r0, r0, r8, lsr r2
   24324:	andeq	r0, r0, r4, asr #4
   24328:	andeq	r0, r0, r4, asr #4
   2432c:	andeq	r0, r0, r4, asr #4
   24330:	andeq	r0, r0, r4, asr #4
   24334:	andeq	r0, r0, r4, asr #4
   24338:	andeq	r0, r0, r4, asr #4
   2433c:	andeq	r0, r0, r4, asr #4
   24340:	andeq	r0, r0, r4, asr #4
   24344:	andeq	r0, r0, r4, asr #4
   24348:	andeq	r0, r0, r4, asr #4
   2434c:	andeq	r0, r0, r4, asr #4
   24350:	andeq	r0, r0, r4, asr #4
   24354:	andeq	r0, r0, r4, asr #4
   24358:	andeq	r0, r0, r4, asr #4
   2435c:	andeq	r0, r0, r8, lsr r2
   24360:	andeq	r0, r0, r4, asr #4
   24364:	andeq	r0, r0, r4, asr #4
   24368:	andeq	r0, r0, r4, asr #4
   2436c:	andeq	r0, r0, r4, asr #4
   24370:	andeq	r0, r0, r4, asr #4
   24374:	andeq	r0, r0, r4, asr #4
   24378:	andeq	r0, r0, r8, lsr r2
   2437c:	andeq	r0, r0, r4, asr #4
   24380:	andeq	r0, r0, r4, asr #4
   24384:	andeq	r0, r0, r4, asr #4
   24388:	andeq	r0, r0, r4, asr #4
   2438c:	andeq	r0, r0, r4, asr #4
   24390:	andeq	r0, r0, r4, asr #4
   24394:	andeq	r0, r0, r4, asr #4
   24398:	andeq	r0, r0, r4, asr #4
   2439c:	andeq	r0, r0, r4, asr #4
   243a0:	andeq	r0, r0, r4, asr #4
   243a4:	andeq	r0, r0, r8, lsr r2
   243a8:	andeq	r0, r0, r4, asr #4
   243ac:	andeq	r0, r0, r4, asr #4
   243b0:	andeq	r0, r0, r4, asr #4
   243b4:	andeq	r0, r0, r4, asr #4
   243b8:	andeq	r0, r0, r8, lsr r2
   243bc:	andeq	r0, r0, r8, lsr r2
   243c0:	andeq	r0, r0, r4, asr #4
   243c4:	andeq	r0, r0, r4, asr #4
   243c8:	andeq	r0, r0, r4, asr #4
   243cc:	andeq	r0, r0, r8, lsr r2
   243d0:	andeq	r0, r0, r4, asr #4
   243d4:	andeq	r0, r0, r4, asr #4
   243d8:	andeq	r0, r0, r4, asr #4
   243dc:	andeq	r0, r0, r8, lsr r2
   243e0:	andeq	r0, r0, r4, asr #4
   243e4:	andeq	r0, r0, r4, asr #4
   243e8:	andeq	r0, r0, r4, asr #4
   243ec:	andeq	r0, r0, r4, asr #4
   243f0:	andeq	r0, r0, r4, asr #4
   243f4:	andeq	r0, r0, r4, asr #4
   243f8:	andeq	r0, r0, r4, asr #4
   243fc:	andeq	r0, r0, r8, lsr r2
   24400:	andeq	r0, r0, r4, asr #4
   24404:	andeq	r0, r0, r4, asr #4
   24408:	andeq	r0, r0, r4, asr #4
   2440c:	andeq	r0, r0, r4, asr #4
   24410:	andeq	r0, r0, r4, asr #4
   24414:	andeq	r0, r0, r4, asr #4
   24418:	andeq	r0, r0, r4, asr #4
   2441c:	andeq	r0, r0, r4, asr #4
   24420:	andeq	r0, r0, r4, asr #4
   24424:	andeq	r0, r0, r4, asr #4
   24428:	andeq	r0, r0, r4, asr #4
   2442c:	andeq	r0, r0, r4, asr #4
   24430:	andeq	r0, r0, r4, asr #4
   24434:	andeq	r0, r0, r8, lsr r2
   24438:	andeq	r0, r0, r4, asr #4
   2443c:	andeq	r0, r0, r4, asr #4
   24440:	andeq	r0, r0, r4, asr #4
   24444:	andeq	r0, r0, r4, asr #4
   24448:	andeq	r0, r0, r4, asr #4
   2444c:	andeq	r0, r0, r4, asr #4
   24450:	andeq	r0, r0, r4, asr #4
   24454:	andeq	r0, r0, r4, asr #4
   24458:	andeq	r0, r0, r4, asr #4
   2445c:	andeq	r0, r0, r4, asr #4
   24460:	andeq	r0, r0, r4, asr #4
   24464:	andeq	r0, r0, r4, asr #4
   24468:	andeq	r0, r0, r4, asr #4
   2446c:	andeq	r0, r0, r4, asr #4
   24470:	andeq	r0, r0, r4, asr #4
   24474:	andeq	r0, r0, r8, lsr r2
   24478:	andeq	r0, r0, r4, asr #4
   2447c:	andeq	r0, r0, r4, asr #4
   24480:	andeq	r0, r0, r4, asr #4
   24484:	andeq	r0, r0, r4, asr #4
   24488:	andeq	r0, r0, r4, asr #4
   2448c:	andeq	r0, r0, r4, asr #4
   24490:	andeq	r0, r0, r4, asr #4
   24494:	andeq	r0, r0, r4, asr #4
   24498:	andeq	r0, r0, r4, asr #4
   2449c:	andeq	r0, r0, r4, asr #4
   244a0:	andeq	r0, r0, r4, asr #4
   244a4:	andeq	r0, r0, r4, asr #4
   244a8:	andeq	r0, r0, r4, asr #4
   244ac:	andeq	r0, r0, r4, asr #4
   244b0:	andeq	r0, r0, r4, asr #4
   244b4:	andeq	r0, r0, r4, asr #4
   244b8:	andeq	r0, r0, r4, asr #4
   244bc:	andeq	r0, r0, r4, asr #4
   244c0:	andeq	r0, r0, r4, asr #4
   244c4:	andeq	r0, r0, r8, lsr r2
   244c8:	andeq	r0, r0, r4, asr #4
   244cc:	andeq	r0, r0, r4, asr #4
   244d0:	andeq	r0, r0, r4, asr #4
   244d4:	andeq	r0, r0, r4, asr #4
   244d8:	andeq	r0, r0, r4, asr #4
   244dc:	andeq	r0, r0, r8, lsr r2
   244e0:	ldr	r2, [r0, #8]
   244e4:	cmp	r2, #1
   244e8:	beq	24554 <myhtml_serialization_node_callback@@Base+0x68c>
   244ec:	ldr	r0, [r0, #40]	; 0x28
   244f0:	add	r2, sp, #4
   244f4:	bl	11ee4 <myhtml_tag_name_by_id@plt>
   244f8:	mov	r7, r0
   244fc:	ldr	r0, [pc, #92]	; 24560 <myhtml_serialization_node_callback@@Base+0x698>
   24500:	add	r0, pc, r0
   24504:	mov	r6, #2
   24508:	mov	r1, #2
   2450c:	mov	r2, r5
   24510:	blx	r4
   24514:	cmp	r0, #0
   24518:	bne	24554 <myhtml_serialization_node_callback@@Base+0x68c>
   2451c:	ldr	r1, [sp, #4]
   24520:	mov	r0, r7
   24524:	mov	r2, r5
   24528:	blx	r4
   2452c:	cmp	r0, #0
   24530:	bne	24554 <myhtml_serialization_node_callback@@Base+0x68c>
   24534:	ldr	r0, [pc, #40]	; 24564 <myhtml_serialization_node_callback@@Base+0x69c>
   24538:	add	r0, pc, r0
   2453c:	mov	r1, #1
   24540:	mov	r2, r5
   24544:	blx	r4
   24548:	cmp	r0, #0
   2454c:	movwne	r0, #1
   24550:	lsl	r6, r0, #1
   24554:	mov	r0, r6
   24558:	sub	sp, fp, #16
   2455c:	pop	{r4, r5, r6, r7, fp, pc}
   24560:	andeq	r8, sp, r9, lsl r9
   24564:	andeq	r8, sp, r8, lsl #17
   24568:	push	{fp, lr}
   2456c:	mov	fp, sp
   24570:	mov	lr, r1
   24574:	ldr	r3, [r0, #32]
   24578:	mov	r1, #0
   2457c:	cmp	r3, #0
   24580:	beq	246ac <myhtml_serialization_node_callback@@Base+0x7e4>
   24584:	mov	ip, r2
   24588:	mov	r2, r0
   2458c:	ldr	r0, [r3, #4]
   24590:	cmp	r0, #0
   24594:	beq	246ac <myhtml_serialization_node_callback@@Base+0x7e4>
   24598:	ldr	r1, [r2, #24]
   2459c:	cmp	r1, #0
   245a0:	beq	246b4 <myhtml_serialization_node_callback@@Base+0x7ec>
   245a4:	ldr	r1, [r1, #4]
   245a8:	sub	r2, r1, #91	; 0x5b
   245ac:	cmp	r2, #52	; 0x34
   245b0:	bhi	246d8 <myhtml_serialization_node_callback@@Base+0x810>
   245b4:	add	r1, pc, #4
   245b8:	ldr	r2, [r1, r2, lsl #2]
   245bc:	add	pc, r1, r2
   245c0:	ldrdeq	r0, [r0], -r4
   245c4:	ldrdeq	r0, [r0], -r4
   245c8:	andeq	r0, r0, r0, lsr #2
   245cc:	andeq	r0, r0, r0, lsr #2
   245d0:	andeq	r0, r0, r0, lsr #2
   245d4:	andeq	r0, r0, r0, lsr #2
   245d8:	andeq	r0, r0, r0, lsr #2
   245dc:	andeq	r0, r0, r0, lsr #2
   245e0:	andeq	r0, r0, r0, lsr #2
   245e4:	andeq	r0, r0, r0, lsr #2
   245e8:	ldrdeq	r0, [r0], -r4
   245ec:	andeq	r0, r0, r0, lsr #2
   245f0:	andeq	r0, r0, r0, lsr #2
   245f4:	andeq	r0, r0, r0, lsr #2
   245f8:	andeq	r0, r0, r0, lsr #2
   245fc:	andeq	r0, r0, r0, lsr #2
   24600:	andeq	r0, r0, r0, lsr #2
   24604:	andeq	r0, r0, r0, lsr #2
   24608:	andeq	r0, r0, r0, lsr #2
   2460c:	andeq	r0, r0, r0, lsr #2
   24610:	andeq	r0, r0, r0, lsr #2
   24614:	ldrdeq	r0, [r0], -r4
   24618:	andeq	r0, r0, r0, lsr #2
   2461c:	andeq	r0, r0, r0, lsr #2
   24620:	andeq	r0, r0, r0, lsr #2
   24624:	andeq	r0, r0, r0, lsr #2
   24628:	andeq	r0, r0, r0, lsr #2
   2462c:	andeq	r0, r0, r0, lsr #2
   24630:	andeq	r0, r0, r0, lsr #2
   24634:	ldrdeq	r0, [r0], -r4
   24638:	andeq	r0, r0, r0, lsr #2
   2463c:	andeq	r0, r0, r0, lsr #2
   24640:	andeq	r0, r0, r0, lsr #2
   24644:	andeq	r0, r0, r0, lsr #2
   24648:	andeq	r0, r0, r0, lsr #2
   2464c:	andeq	r0, r0, r0, lsr #2
   24650:	andeq	r0, r0, r0, lsr #2
   24654:	andeq	r0, r0, r0, lsr #2
   24658:	andeq	r0, r0, r0, lsr #2
   2465c:	andeq	r0, r0, r0, lsr #2
   24660:	andeq	r0, r0, r0, lsr #2
   24664:	andeq	r0, r0, r0, lsr #2
   24668:	andeq	r0, r0, r0, lsr #2
   2466c:	andeq	r0, r0, r0, lsr #2
   24670:	andeq	r0, r0, r0, lsr #2
   24674:	andeq	r0, r0, r0, lsr #2
   24678:	andeq	r0, r0, r0, lsr #2
   2467c:	andeq	r0, r0, r0, lsr #2
   24680:	andeq	r0, r0, r0, lsr #2
   24684:	andeq	r0, r0, r0, lsr #2
   24688:	andeq	r0, r0, r0, lsr #2
   2468c:	andeq	r0, r0, r0, lsr #2
   24690:	ldrdeq	r0, [r0], -r4
   24694:	ldr	r1, [r3, #12]
   24698:	mov	r2, ip
   2469c:	blx	lr
   246a0:	mov	r1, #2
   246a4:	cmp	r0, #0
   246a8:	moveq	r1, #0
   246ac:	mov	r0, r1
   246b0:	pop	{fp, pc}
   246b4:	ldr	r1, [r3, #12]
   246b8:	mov	r2, lr
   246bc:	mov	r3, ip
   246c0:	bl	24abc <myhtml_serialization_concatenate@@Base+0x1e8>
   246c4:	cmp	r0, #0
   246c8:	movwne	r0, #1
   246cc:	lsl	r1, r0, #1
   246d0:	mov	r0, r1
   246d4:	pop	{fp, pc}
   246d8:	cmp	r1, #67	; 0x43
   246dc:	beq	24694 <myhtml_serialization_node_callback@@Base+0x7cc>
   246e0:	ldr	r1, [r3, #12]
   246e4:	mov	r2, lr
   246e8:	mov	r3, ip
   246ec:	bl	24abc <myhtml_serialization_concatenate@@Base+0x1e8>
   246f0:	b	246a0 <myhtml_serialization_node_callback@@Base+0x7d8>
   246f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246f8:	add	fp, sp, #28
   246fc:	sub	sp, sp, #4
   24700:	cmp	r0, #0
   24704:	beq	24868 <myhtml_serialization_node_callback@@Base+0x9a0>
   24708:	mov	r5, r2
   2470c:	mov	r6, r1
   24710:	mov	r7, r0
   24714:	ldr	sl, [pc, #344]	; 24874 <myhtml_serialization_node_callback@@Base+0x9ac>
   24718:	add	sl, pc, sl
   2471c:	mov	r4, sp
   24720:	ldr	r9, [pc, #336]	; 24878 <myhtml_serialization_node_callback@@Base+0x9b0>
   24724:	add	r9, pc, r9
   24728:	ldr	r8, [pc, #332]	; 2487c <myhtml_serialization_node_callback@@Base+0x9b4>
   2472c:	add	r8, pc, r8
   24730:	mov	r0, sl
   24734:	mov	r1, #1
   24738:	mov	r2, r5
   2473c:	blx	r6
   24740:	cmp	r0, #0
   24744:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   24748:	ldr	r0, [r7, #64]	; 0x40
   2474c:	cmp	r0, #4
   24750:	beq	24774 <myhtml_serialization_node_callback@@Base+0x8ac>
   24754:	cmp	r0, #6
   24758:	beq	24824 <myhtml_serialization_node_callback@@Base+0x95c>
   2475c:	cmp	r0, #5
   24760:	bne	24790 <myhtml_serialization_node_callback@@Base+0x8c8>
   24764:	ldr	r0, [pc, #276]	; 24880 <myhtml_serialization_node_callback@@Base+0x9b8>
   24768:	add	r0, pc, r0
   2476c:	mov	r1, #4
   24770:	b	24780 <myhtml_serialization_node_callback@@Base+0x8b8>
   24774:	ldr	r0, [pc, #272]	; 2488c <myhtml_serialization_node_callback@@Base+0x9c4>
   24778:	add	r0, pc, r0
   2477c:	mov	r1, #6
   24780:	mov	r2, r5
   24784:	blx	r6
   24788:	cmp	r0, #0
   2478c:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   24790:	mov	r0, r7
   24794:	mov	r1, r4
   24798:	bl	11efc <myhtml_attribute_key@plt>
   2479c:	cmp	r0, #0
   247a0:	beq	247b8 <myhtml_serialization_node_callback@@Base+0x8f0>
   247a4:	ldr	r1, [sp]
   247a8:	mov	r2, r5
   247ac:	blx	r6
   247b0:	cmp	r0, #0
   247b4:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   247b8:	mov	r0, r9
   247bc:	mov	r1, #2
   247c0:	mov	r2, r5
   247c4:	blx	r6
   247c8:	cmp	r0, #0
   247cc:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   247d0:	mov	r0, r7
   247d4:	mov	r1, r4
   247d8:	bl	118c0 <myhtml_attribute_value@plt>
   247dc:	cmp	r0, #0
   247e0:	beq	247fc <myhtml_serialization_node_callback@@Base+0x934>
   247e4:	ldr	r1, [sp]
   247e8:	mov	r2, r6
   247ec:	mov	r3, r5
   247f0:	bl	2494c <myhtml_serialization_concatenate@@Base+0x78>
   247f4:	cmp	r0, #0
   247f8:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   247fc:	mov	r0, r8
   24800:	mov	r1, #1
   24804:	mov	r2, r5
   24808:	blx	r6
   2480c:	cmp	r0, #0
   24810:	bne	2485c <myhtml_serialization_node_callback@@Base+0x994>
   24814:	ldr	r7, [r7]
   24818:	cmp	r7, #0
   2481c:	bne	24730 <myhtml_serialization_node_callback@@Base+0x868>
   24820:	b	24868 <myhtml_serialization_node_callback@@Base+0x9a0>
   24824:	ldr	r0, [r7, #8]
   24828:	cmp	r0, #0
   2482c:	beq	24790 <myhtml_serialization_node_callback@@Base+0x8c8>
   24830:	ldr	r1, [r7, #16]
   24834:	cmp	r1, #5
   24838:	bne	24790 <myhtml_serialization_node_callback@@Base+0x8c8>
   2483c:	ldr	r1, [pc, #64]	; 24884 <myhtml_serialization_node_callback@@Base+0x9bc>
   24840:	add	r1, pc, r1
   24844:	bl	110c8 <mycore_strcmp@plt>
   24848:	cmp	r0, #0
   2484c:	beq	24790 <myhtml_serialization_node_callback@@Base+0x8c8>
   24850:	ldr	r0, [pc, #48]	; 24888 <myhtml_serialization_node_callback@@Base+0x9c0>
   24854:	add	r0, pc, r0
   24858:	b	2477c <myhtml_serialization_node_callback@@Base+0x8b4>
   2485c:	mov	r0, #2
   24860:	sub	sp, fp, #28
   24864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24868:	mov	r0, #0
   2486c:	sub	sp, fp, #28
   24870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24874:			; <UNDEFINED> instruction: 0x000d86b4
   24878:	ldrdeq	r8, [sp], -lr
   2487c:			; <UNDEFINED> instruction: 0x000d86b1
   24880:	andeq	r8, sp, r1, lsl #13
   24884:	andeq	r8, sp, lr, lsr #11
   24888:	andeq	r8, sp, r0, lsr #11
   2488c:	andeq	r8, sp, r3, lsl #13

00024890 <myhtml_serialization_reallocate@@Base>:
   24890:	push	{r4, r5, fp, lr}
   24894:	add	fp, sp, #8
   24898:	mov	r5, r1
   2489c:	mov	r4, r0
   248a0:	ldr	r0, [r0]
   248a4:	bl	110b0 <mycore_realloc@plt>
   248a8:	cmp	r0, #0
   248ac:	beq	248bc <myhtml_serialization_reallocate@@Base+0x2c>
   248b0:	stm	r4, {r0, r5}
   248b4:	mov	r0, #0
   248b8:	pop	{r4, r5, fp, pc}
   248bc:	mov	r0, #0
   248c0:	str	r0, [r4]
   248c4:	str	r0, [r4, #4]
   248c8:	str	r0, [r4, #8]
   248cc:	mov	r0, #2
   248d0:	pop	{r4, r5, fp, pc}

000248d4 <myhtml_serialization_concatenate@@Base>:
   248d4:	push	{r4, r5, r6, sl, fp, lr}
   248d8:	add	fp, sp, #16
   248dc:	mov	r4, r2
   248e0:	mov	r5, r1
   248e4:	mov	r6, r0
   248e8:	ldr	r1, [r2, #4]
   248ec:	ldr	r0, [r2, #8]
   248f0:	add	r0, r0, r5
   248f4:	cmp	r0, r1
   248f8:	bcc	24918 <myhtml_serialization_concatenate@@Base+0x44>
   248fc:	add	r1, r0, #4096	; 0x1000
   24900:	mov	r0, r4
   24904:	bl	117b8 <myhtml_serialization_reallocate@plt>
   24908:	mov	r1, r0
   2490c:	mov	r0, #2
   24910:	cmp	r1, #0
   24914:	popne	{r4, r5, r6, sl, fp, pc}
   24918:	ldr	r0, [r4]
   2491c:	ldr	r1, [r4, #8]
   24920:	add	r0, r0, r1
   24924:	mov	r1, r6
   24928:	mov	r2, r5
   2492c:	bl	11d04 <strncpy@plt>
   24930:	ldr	r1, [r4]
   24934:	ldr	r0, [r4, #8]
   24938:	add	r2, r0, r5
   2493c:	str	r2, [r4, #8]
   24940:	mov	r0, #0
   24944:	strb	r0, [r1, r2]
   24948:	pop	{r4, r5, r6, sl, fp, pc}
   2494c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24950:	add	fp, sp, #28
   24954:	sub	sp, sp, #4
   24958:	cmp	r1, #0
   2495c:	beq	24aa4 <myhtml_serialization_concatenate@@Base+0x1d0>
   24960:	mov	r5, r3
   24964:	mov	r4, r2
   24968:	mov	r6, r1
   2496c:	mov	r7, r0
   24970:	mov	r9, #0
   24974:	ldr	r8, [pc, #308]	; 24ab0 <myhtml_serialization_concatenate@@Base+0x1dc>
   24978:	add	r8, pc, r8
   2497c:	ldr	sl, [pc, #304]	; 24ab4 <myhtml_serialization_concatenate@@Base+0x1e0>
   24980:	add	sl, pc, sl
   24984:	mov	r1, #0
   24988:	b	2499c <myhtml_serialization_concatenate@@Base+0xc8>
   2498c:	add	r1, r1, #1
   24990:	add	r9, r9, #1
   24994:	cmp	r6, r9
   24998:	beq	24a74 <myhtml_serialization_concatenate@@Base+0x1a0>
   2499c:	ldrb	r0, [r7, r9]
   249a0:	cmp	r0, #34	; 0x22
   249a4:	beq	249e4 <myhtml_serialization_concatenate@@Base+0x110>
   249a8:	cmp	r0, #160	; 0xa0
   249ac:	beq	24a0c <myhtml_serialization_concatenate@@Base+0x138>
   249b0:	cmp	r0, #38	; 0x26
   249b4:	bne	2498c <myhtml_serialization_concatenate@@Base+0xb8>
   249b8:	cmp	r1, #0
   249bc:	beq	249d8 <myhtml_serialization_concatenate@@Base+0x104>
   249c0:	sub	r0, r9, r1
   249c4:	add	r0, r7, r0
   249c8:	mov	r2, r5
   249cc:	blx	r4
   249d0:	cmp	r0, #0
   249d4:	bne	24a68 <myhtml_serialization_concatenate@@Base+0x194>
   249d8:	mov	r0, sl
   249dc:	mov	r1, #5
   249e0:	b	24a54 <myhtml_serialization_concatenate@@Base+0x180>
   249e4:	cmp	r1, #0
   249e8:	beq	24a04 <myhtml_serialization_concatenate@@Base+0x130>
   249ec:	sub	r0, r9, r1
   249f0:	add	r0, r7, r0
   249f4:	mov	r2, r5
   249f8:	blx	r4
   249fc:	cmp	r0, #0
   24a00:	bne	24a68 <myhtml_serialization_concatenate@@Base+0x194>
   24a04:	mov	r0, r8
   24a08:	b	24a50 <myhtml_serialization_concatenate@@Base+0x17c>
   24a0c:	cmp	r9, #0
   24a10:	beq	2498c <myhtml_serialization_concatenate@@Base+0xb8>
   24a14:	add	r0, r7, r9
   24a18:	ldrb	r0, [r0, #-1]
   24a1c:	cmp	r0, #194	; 0xc2
   24a20:	bne	2498c <myhtml_serialization_concatenate@@Base+0xb8>
   24a24:	cmp	r1, #0
   24a28:	beq	24a48 <myhtml_serialization_concatenate@@Base+0x174>
   24a2c:	sub	r0, r9, r1
   24a30:	add	r0, r7, r0
   24a34:	sub	r1, r1, #1
   24a38:	mov	r2, r5
   24a3c:	blx	r4
   24a40:	cmp	r0, #0
   24a44:	bne	24a68 <myhtml_serialization_concatenate@@Base+0x194>
   24a48:	ldr	r0, [pc, #104]	; 24ab8 <myhtml_serialization_concatenate@@Base+0x1e4>
   24a4c:	add	r0, pc, r0
   24a50:	mov	r1, #6
   24a54:	mov	r2, r5
   24a58:	blx	r4
   24a5c:	mov	r1, #0
   24a60:	cmp	r0, #0
   24a64:	beq	24990 <myhtml_serialization_concatenate@@Base+0xbc>
   24a68:	mov	r0, #2
   24a6c:	sub	sp, fp, #28
   24a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24a74:	cmp	r1, #0
   24a78:	beq	24aa4 <myhtml_serialization_concatenate@@Base+0x1d0>
   24a7c:	add	r0, r7, r6
   24a80:	sub	r0, r0, r1
   24a84:	mov	r2, r5
   24a88:	blx	r4
   24a8c:	mov	r1, r0
   24a90:	mov	r0, #2
   24a94:	cmp	r1, #0
   24a98:	moveq	r0, #0
   24a9c:	sub	sp, fp, #28
   24aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24aa4:	mov	r0, #0
   24aa8:	sub	sp, fp, #28
   24aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ab0:	muleq	sp, r3, r4
   24ab4:	andeq	r8, sp, r5, lsl #9
   24ab8:	andeq	r8, sp, r6, asr #7
   24abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ac0:	add	fp, sp, #28
   24ac4:	sub	sp, sp, #4
   24ac8:	cmp	r1, #0
   24acc:	beq	24c54 <myhtml_serialization_concatenate@@Base+0x380>
   24ad0:	mov	r5, r3
   24ad4:	mov	r4, r2
   24ad8:	mov	r6, r1
   24adc:	mov	r7, r0
   24ae0:	mov	r8, #0
   24ae4:	ldr	r9, [pc, #372]	; 24c60 <myhtml_serialization_concatenate@@Base+0x38c>
   24ae8:	add	r9, pc, r9
   24aec:	ldr	sl, [pc, #368]	; 24c64 <myhtml_serialization_concatenate@@Base+0x390>
   24af0:	add	sl, pc, sl
   24af4:	mov	r1, #0
   24af8:	b	24b0c <myhtml_serialization_concatenate@@Base+0x238>
   24afc:	add	r1, r1, #1
   24b00:	add	r8, r8, #1
   24b04:	cmp	r6, r8
   24b08:	beq	24c24 <myhtml_serialization_concatenate@@Base+0x350>
   24b0c:	ldrb	r0, [r7, r8]
   24b10:	cmp	r0, #61	; 0x3d
   24b14:	bgt	24b50 <myhtml_serialization_concatenate@@Base+0x27c>
   24b18:	cmp	r0, #38	; 0x26
   24b1c:	beq	24bac <myhtml_serialization_concatenate@@Base+0x2d8>
   24b20:	cmp	r0, #60	; 0x3c
   24b24:	bne	24afc <myhtml_serialization_concatenate@@Base+0x228>
   24b28:	cmp	r1, #0
   24b2c:	beq	24b48 <myhtml_serialization_concatenate@@Base+0x274>
   24b30:	sub	r0, r8, r1
   24b34:	add	r0, r7, r0
   24b38:	mov	r2, r5
   24b3c:	blx	r4
   24b40:	cmp	r0, #0
   24b44:	bne	24c18 <myhtml_serialization_concatenate@@Base+0x344>
   24b48:	mov	r0, r9
   24b4c:	b	24c00 <myhtml_serialization_concatenate@@Base+0x32c>
   24b50:	cmp	r0, #62	; 0x3e
   24b54:	beq	24bdc <myhtml_serialization_concatenate@@Base+0x308>
   24b58:	cmp	r0, #160	; 0xa0
   24b5c:	bne	24afc <myhtml_serialization_concatenate@@Base+0x228>
   24b60:	cmp	r8, #0
   24b64:	beq	24afc <myhtml_serialization_concatenate@@Base+0x228>
   24b68:	add	r0, r7, r8
   24b6c:	ldrb	r0, [r0, #-1]
   24b70:	cmp	r0, #194	; 0xc2
   24b74:	bne	24afc <myhtml_serialization_concatenate@@Base+0x228>
   24b78:	cmp	r1, #0
   24b7c:	beq	24b9c <myhtml_serialization_concatenate@@Base+0x2c8>
   24b80:	sub	r0, r8, r1
   24b84:	add	r0, r7, r0
   24b88:	sub	r1, r1, #1
   24b8c:	mov	r2, r5
   24b90:	blx	r4
   24b94:	cmp	r0, #0
   24b98:	bne	24c18 <myhtml_serialization_concatenate@@Base+0x344>
   24b9c:	ldr	r0, [pc, #200]	; 24c6c <myhtml_serialization_concatenate@@Base+0x398>
   24ba0:	add	r0, pc, r0
   24ba4:	mov	r1, #6
   24ba8:	b	24c04 <myhtml_serialization_concatenate@@Base+0x330>
   24bac:	cmp	r1, #0
   24bb0:	beq	24bcc <myhtml_serialization_concatenate@@Base+0x2f8>
   24bb4:	sub	r0, r8, r1
   24bb8:	add	r0, r7, r0
   24bbc:	mov	r2, r5
   24bc0:	blx	r4
   24bc4:	cmp	r0, #0
   24bc8:	bne	24c18 <myhtml_serialization_concatenate@@Base+0x344>
   24bcc:	ldr	r0, [pc, #148]	; 24c68 <myhtml_serialization_concatenate@@Base+0x394>
   24bd0:	add	r0, pc, r0
   24bd4:	mov	r1, #5
   24bd8:	b	24c04 <myhtml_serialization_concatenate@@Base+0x330>
   24bdc:	cmp	r1, #0
   24be0:	beq	24bfc <myhtml_serialization_concatenate@@Base+0x328>
   24be4:	sub	r0, r8, r1
   24be8:	add	r0, r7, r0
   24bec:	mov	r2, r5
   24bf0:	blx	r4
   24bf4:	cmp	r0, #0
   24bf8:	bne	24c18 <myhtml_serialization_concatenate@@Base+0x344>
   24bfc:	mov	r0, sl
   24c00:	mov	r1, #4
   24c04:	mov	r2, r5
   24c08:	blx	r4
   24c0c:	mov	r1, #0
   24c10:	cmp	r0, #0
   24c14:	beq	24b00 <myhtml_serialization_concatenate@@Base+0x22c>
   24c18:	mov	r0, #2
   24c1c:	sub	sp, fp, #28
   24c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c24:	cmp	r1, #0
   24c28:	beq	24c54 <myhtml_serialization_concatenate@@Base+0x380>
   24c2c:	add	r0, r7, r6
   24c30:	sub	r0, r0, r1
   24c34:	mov	r2, r5
   24c38:	blx	r4
   24c3c:	mov	r1, r0
   24c40:	mov	r0, #2
   24c44:	cmp	r1, #0
   24c48:	moveq	r0, #0
   24c4c:	sub	sp, fp, #28
   24c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c54:	mov	r0, #0
   24c58:	sub	sp, fp, #28
   24c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c60:	andeq	r8, sp, r4, lsr r3
   24c64:	andeq	r8, sp, r1, lsr r3
   24c68:	andeq	r8, sp, r5, lsr r2
   24c6c:	andeq	r8, sp, r2, ror r2

00024c70 <myhtml_stream_buffer_create@@Base>:
   24c70:	mov	r0, #1
   24c74:	mov	r1, #36	; 0x24
   24c78:	b	113a4 <mycore_calloc@plt>

00024c7c <myhtml_stream_buffer_init@@Base>:
   24c7c:	push	{r4, r5, fp, lr}
   24c80:	add	fp, sp, #8
   24c84:	mov	r4, r0
   24c88:	mov	r5, #0
   24c8c:	str	r5, [r0, #4]
   24c90:	str	r1, [r0, #8]
   24c94:	mov	r0, r1
   24c98:	mov	r1, #12
   24c9c:	bl	113a4 <mycore_calloc@plt>
   24ca0:	str	r0, [r4]
   24ca4:	cmp	r0, #0
   24ca8:	movweq	r5, #37633	; 0x9301
   24cac:	mov	r0, r5
   24cb0:	pop	{r4, r5, fp, pc}

00024cb4 <myhtml_stream_buffer_entry_init@@Base>:
   24cb4:	push	{r4, r5, r6, sl, fp, lr}
   24cb8:	add	fp, sp, #16
   24cbc:	mov	r5, r1
   24cc0:	mov	r4, r0
   24cc4:	ldr	r0, [r0]
   24cc8:	cmp	r0, #0
   24ccc:	beq	24ce4 <myhtml_stream_buffer_entry_init@@Base+0x30>
   24cd0:	ldr	r1, [r4, #8]
   24cd4:	mov	r6, #0
   24cd8:	cmp	r1, r5
   24cdc:	bcs	24d04 <myhtml_stream_buffer_entry_init@@Base+0x50>
   24ce0:	bl	12184 <mycore_free@plt>
   24ce4:	mov	r6, #0
   24ce8:	str	r6, [r4, #4]
   24cec:	str	r5, [r4, #8]
   24cf0:	mov	r0, r5
   24cf4:	bl	1204c <mycore_malloc@plt>
   24cf8:	str	r0, [r4]
   24cfc:	cmp	r0, #0
   24d00:	movweq	r6, #37635	; 0x9303
   24d04:	mov	r0, r6
   24d08:	pop	{r4, r5, r6, sl, fp, pc}

00024d0c <myhtml_stream_buffer_entry_clean@@Base>:
   24d0c:	cmp	r0, #0
   24d10:	movne	r1, #0
   24d14:	strne	r1, [r0, #4]
   24d18:	bx	lr

00024d1c <myhtml_stream_buffer_entry_destroy@@Base>:
   24d1c:	push	{r4, r5, r6, sl, fp, lr}
   24d20:	add	fp, sp, #16
   24d24:	mov	r4, #0
   24d28:	cmp	r0, #0
   24d2c:	beq	24d58 <myhtml_stream_buffer_entry_destroy@@Base+0x3c>
   24d30:	mov	r6, r1
   24d34:	mov	r5, r0
   24d38:	ldr	r0, [r0]
   24d3c:	cmp	r0, #0
   24d40:	beq	24d48 <myhtml_stream_buffer_entry_destroy@@Base+0x2c>
   24d44:	bl	12184 <mycore_free@plt>
   24d48:	cmp	r6, #0
   24d4c:	beq	24d60 <myhtml_stream_buffer_entry_destroy@@Base+0x44>
   24d50:	mov	r0, r5
   24d54:	bl	12184 <mycore_free@plt>
   24d58:	mov	r0, r4
   24d5c:	pop	{r4, r5, r6, sl, fp, pc}
   24d60:	mov	r0, r5
   24d64:	pop	{r4, r5, r6, sl, fp, pc}

00024d68 <myhtml_stream_buffer_clean@@Base>:
   24d68:	cmp	r0, #0
   24d6c:	movne	r1, #0
   24d70:	strne	r1, [r0, #4]
   24d74:	bx	lr

00024d78 <myhtml_stream_buffer_destroy@@Base>:
   24d78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   24d7c:	add	fp, sp, #24
   24d80:	mov	r4, #0
   24d84:	cmp	r0, #0
   24d88:	beq	24df0 <myhtml_stream_buffer_destroy@@Base+0x78>
   24d8c:	mov	r8, r1
   24d90:	mov	r5, r0
   24d94:	ldr	r0, [r0]
   24d98:	cmp	r0, #0
   24d9c:	beq	24de0 <myhtml_stream_buffer_destroy@@Base+0x68>
   24da0:	ldr	r0, [r5, #4]
   24da4:	cmp	r0, #0
   24da8:	beq	24dd8 <myhtml_stream_buffer_destroy@@Base+0x60>
   24dac:	mov	r7, #0
   24db0:	mov	r6, #0
   24db4:	ldr	r0, [r5]
   24db8:	add	r0, r0, r7
   24dbc:	mov	r1, #0
   24dc0:	bl	115c0 <myhtml_stream_buffer_entry_destroy@plt>
   24dc4:	add	r7, r7, #12
   24dc8:	add	r6, r6, #1
   24dcc:	ldr	r0, [r5, #4]
   24dd0:	cmp	r6, r0
   24dd4:	bcc	24db4 <myhtml_stream_buffer_destroy@@Base+0x3c>
   24dd8:	ldr	r0, [r5]
   24ddc:	bl	12184 <mycore_free@plt>
   24de0:	cmp	r8, #0
   24de4:	beq	24df8 <myhtml_stream_buffer_destroy@@Base+0x80>
   24de8:	mov	r0, r5
   24dec:	bl	12184 <mycore_free@plt>
   24df0:	mov	r0, r4
   24df4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   24df8:	mov	r0, r5
   24dfc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00024e00 <myhtml_stream_buffer_add_entry@@Base>:
   24e00:	push	{r4, r5, r6, r7, fp, lr}
   24e04:	add	fp, sp, #16
   24e08:	mov	r5, r1
   24e0c:	mov	r4, r0
   24e10:	ldr	r0, [r0, #4]
   24e14:	ldr	r7, [r4, #8]
   24e18:	cmp	r0, r7
   24e1c:	bcc	24e60 <myhtml_stream_buffer_add_entry@@Base+0x60>
   24e20:	add	r0, r7, r7, lsl #1
   24e24:	lsl	r1, r0, #3
   24e28:	mov	r0, r4
   24e2c:	bl	110b0 <mycore_realloc@plt>
   24e30:	cmp	r0, #0
   24e34:	beq	24e9c <myhtml_stream_buffer_add_entry@@Base+0x9c>
   24e38:	mov	r6, r0
   24e3c:	lsl	r7, r7, #1
   24e40:	ldr	r0, [r4, #8]
   24e44:	sub	r2, r7, r0
   24e48:	add	r0, r0, r0, lsl #1
   24e4c:	add	r0, r6, r0, lsl #2
   24e50:	mov	r1, #0
   24e54:	bl	11cc8 <memset@plt>
   24e58:	str	r7, [r4, #8]
   24e5c:	str	r6, [r4]
   24e60:	ldm	r4, {r0, r1}
   24e64:	add	r1, r1, r1, lsl #1
   24e68:	add	r6, r0, r1, lsl #2
   24e6c:	mov	r0, r6
   24e70:	mov	r1, r5
   24e74:	bl	11c20 <myhtml_stream_buffer_entry_init@plt>
   24e78:	mov	r1, r0
   24e7c:	mov	r0, #0
   24e80:	cmp	r1, #0
   24e84:	popne	{r4, r5, r6, r7, fp, pc}
   24e88:	ldr	r0, [r4, #4]
   24e8c:	add	r0, r0, #1
   24e90:	str	r0, [r4, #4]
   24e94:	mov	r0, r6
   24e98:	pop	{r4, r5, r6, r7, fp, pc}
   24e9c:	mov	r0, #0
   24ea0:	pop	{r4, r5, r6, r7, fp, pc}

00024ea4 <myhtml_stream_buffer_current_entry@@Base>:
   24ea4:	ldr	r1, [r0, #4]
   24ea8:	cmp	r1, #0
   24eac:	moveq	r0, #0
   24eb0:	bxeq	lr
   24eb4:	ldr	r0, [r0]
   24eb8:	add	r1, r1, r1, lsl #1
   24ebc:	add	r0, r0, r1, lsl #2
   24ec0:	sub	r0, r0, #12
   24ec4:	bx	lr

00024ec8 <myhtml_tag_create@@Base>:
   24ec8:	mov	r0, #20
   24ecc:	b	1204c <mycore_malloc@plt>

00024ed0 <myhtml_tag_init@@Base>:
   24ed0:	push	{r4, r5, fp, lr}
   24ed4:	add	fp, sp, #8
   24ed8:	sub	sp, sp, #8
   24edc:	mov	r4, r1
   24ee0:	mov	r5, r0
   24ee4:	bl	11728 <mcsimple_create@plt>
   24ee8:	str	r0, [r4, #4]
   24eec:	cmp	r0, #0
   24ef0:	beq	24f60 <myhtml_tag_init@@Base+0x90>
   24ef4:	mov	r1, #128	; 0x80
   24ef8:	mov	r2, #1024	; 0x400
   24efc:	mov	r3, #44	; 0x2c
   24f00:	bl	11884 <mcsimple_init@plt>
   24f04:	ldr	r0, [r5, #4]
   24f08:	add	r1, sp, #4
   24f0c:	bl	116f8 <mchar_async_node_add@plt>
   24f10:	str	r0, [r4, #12]
   24f14:	mov	r0, #2
   24f18:	bl	11a7c <mctree_create@plt>
   24f1c:	mov	r1, r0
   24f20:	str	r0, [r4]
   24f24:	ldr	r0, [r5, #4]
   24f28:	mov	r2, #252	; 0xfc
   24f2c:	str	r2, [r4, #8]
   24f30:	str	r0, [r4, #16]
   24f34:	ldr	r0, [sp, #4]
   24f38:	cmp	r0, #0
   24f3c:	bne	24f58 <myhtml_tag_init@@Base+0x88>
   24f40:	cmp	r1, #0
   24f44:	mov	r0, #2
   24f48:	beq	24f58 <myhtml_tag_init@@Base+0x88>
   24f4c:	mov	r0, r4
   24f50:	bl	1240c <myhtml_tag_clean@plt>
   24f54:	mov	r0, #0
   24f58:	sub	sp, fp, #8
   24f5c:	pop	{r4, r5, fp, pc}
   24f60:	movw	r0, #37264	; 0x9190
   24f64:	sub	sp, fp, #8
   24f68:	pop	{r4, r5, fp, pc}

00024f6c <myhtml_tag_clean@@Base>:
   24f6c:	push	{r4, sl, fp, lr}
   24f70:	add	fp, sp, #8
   24f74:	mov	r4, r0
   24f78:	mov	r0, #252	; 0xfc
   24f7c:	str	r0, [r4, #8]
   24f80:	ldr	r0, [r4, #4]
   24f84:	bl	116b0 <mcsimple_clean@plt>
   24f88:	ldr	r1, [r4, #12]
   24f8c:	ldr	r0, [r4, #16]
   24f90:	bl	11b18 <mchar_async_node_clean@plt>
   24f94:	ldr	r0, [r4]
   24f98:	pop	{r4, sl, fp, lr}
   24f9c:	b	11758 <mctree_clean@plt>

00024fa0 <myhtml_tag_destroy@@Base>:
   24fa0:	cmp	r0, #0
   24fa4:	beq	24fe8 <myhtml_tag_destroy@@Base+0x48>
   24fa8:	push	{r4, sl, fp, lr}
   24fac:	add	fp, sp, #8
   24fb0:	mov	r4, r0
   24fb4:	ldr	r0, [r0]
   24fb8:	bl	11530 <mctree_destroy@plt>
   24fbc:	str	r0, [r4]
   24fc0:	ldr	r0, [r4, #4]
   24fc4:	mov	r1, #1
   24fc8:	bl	117dc <mcsimple_destroy@plt>
   24fcc:	str	r0, [r4, #4]
   24fd0:	ldr	r1, [r4, #12]
   24fd4:	ldr	r0, [r4, #16]
   24fd8:	bl	12010 <mchar_async_node_delete@plt>
   24fdc:	mov	r0, r4
   24fe0:	bl	12184 <mycore_free@plt>
   24fe4:	pop	{r4, sl, fp, lr}
   24fe8:	mov	r0, #0
   24fec:	bx	lr

00024ff0 <myhtml_tag_add@@Base>:
   24ff0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24ff4:	add	fp, sp, #24
   24ff8:	sub	sp, sp, #8
   24ffc:	mov	r8, r3
   25000:	mov	r6, r2
   25004:	mov	r4, r1
   25008:	mov	r5, r0
   2500c:	ldr	r1, [r0, #12]
   25010:	ldr	r0, [r0, #16]
   25014:	add	r2, r2, #1
   25018:	bl	11d28 <mchar_async_malloc@plt>
   2501c:	mov	r7, r0
   25020:	ldr	r0, [fp, #8]
   25024:	cmp	r0, #0
   25028:	beq	25060 <myhtml_tag_add@@Base+0x70>
   2502c:	cmp	r6, #0
   25030:	beq	25070 <myhtml_tag_add@@Base+0x80>
   25034:	mov	r0, r7
   25038:	mov	r1, r6
   2503c:	ldrb	r2, [r4], #1
   25040:	sub	r3, r2, #65	; 0x41
   25044:	uxtb	r3, r3
   25048:	cmp	r3, #26
   2504c:	orrcc	r2, r2, #96	; 0x60
   25050:	strb	r2, [r0], #1
   25054:	subs	r1, r1, #1
   25058:	bne	2503c <myhtml_tag_add@@Base+0x4c>
   2505c:	b	25070 <myhtml_tag_add@@Base+0x80>
   25060:	mov	r0, r7
   25064:	mov	r1, r4
   25068:	mov	r2, r6
   2506c:	bl	11d04 <strncpy@plt>
   25070:	mov	r9, #0
   25074:	strb	r9, [r7, r6]
   25078:	ldr	r0, [r5, #4]
   2507c:	bl	11b6c <mcsimple_malloc@plt>
   25080:	mov	r4, r0
   25084:	ldr	r0, [r5]
   25088:	str	r9, [sp]
   2508c:	mov	r1, r7
   25090:	mov	r2, r6
   25094:	mov	r3, r4
   25098:	bl	11d70 <mctree_insert@plt>
   2509c:	ldr	r0, [r5, #8]
   250a0:	stm	r4, {r0, r7}
   250a4:	str	r6, [r4, #8]
   250a8:	str	r8, [r4, #12]
   250ac:	add	r1, r0, #1
   250b0:	str	r1, [r5, #8]
   250b4:	vmov.i32	q8, #0	; 0x00000000
   250b8:	add	r1, r4, #28
   250bc:	vst1.32	{d16-d17}, [r1]
   250c0:	add	r1, r4, #16
   250c4:	vst1.32	{d16-d17}, [r1]
   250c8:	sub	sp, fp, #24
   250cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000250d0 <myhtml_tag_set_category@@Base>:
   250d0:	cmp	r1, #252	; 0xfc
   250d4:	bxcc	lr
   250d8:	push	{r4, r5, fp, lr}
   250dc:	add	fp, sp, #8
   250e0:	mov	r4, r3
   250e4:	mov	r5, r2
   250e8:	ldr	r0, [r0, #4]
   250ec:	sub	r1, r1, #252	; 0xfc
   250f0:	bl	12334 <mcsimple_get_by_absolute_position@plt>
   250f4:	add	r0, r0, r5, lsl #2
   250f8:	str	r4, [r0, #16]
   250fc:	pop	{r4, r5, fp, lr}
   25100:	bx	lr

00025104 <myhtml_tag_get_by_id@@Base>:
   25104:	cmp	r1, #252	; 0xfc
   25108:	bcc	25118 <myhtml_tag_get_by_id@@Base+0x14>
   2510c:	ldr	r0, [r0, #4]
   25110:	sub	r1, r1, #252	; 0xfc
   25114:	b	12334 <mcsimple_get_by_absolute_position@plt>
   25118:	mov	r0, r1
   2511c:	b	11488 <myhtml_tag_static_get_by_id@plt>

00025120 <myhtml_tag_get_by_name@@Base>:
   25120:	push	{r4, r5, r6, sl, fp, lr}
   25124:	add	fp, sp, #16
   25128:	mov	r5, r2
   2512c:	mov	r6, r1
   25130:	mov	r4, r0
   25134:	mov	r0, r1
   25138:	mov	r1, r2
   2513c:	bl	11d34 <myhtml_tag_static_search@plt>
   25140:	cmp	r0, #0
   25144:	popne	{r4, r5, r6, sl, fp, pc}
   25148:	ldr	r0, [r4]
   2514c:	mov	r1, r6
   25150:	mov	r2, r5
   25154:	bl	11b78 <mctree_search_lowercase@plt>
   25158:	rsb	r0, r0, r0, lsl #3
   2515c:	ldr	r1, [r4]
   25160:	ldr	r1, [r1]
   25164:	add	r0, r1, r0, lsl #2
   25168:	ldr	r0, [r0, #8]
   2516c:	pop	{r4, r5, r6, sl, fp, pc}

00025170 <myhtml_tag_static_search@@Base>:
   25170:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25174:	add	fp, sp, #24
   25178:	mov	r4, r1
   2517c:	mov	r8, r0
   25180:	ldrb	r1, [r0], r1
   25184:	ldrb	r0, [r0, #-1]
   25188:	ldr	r2, [pc, #168]	; 25238 <myhtml_tag_static_search@@Base+0xc8>
   2518c:	add	r2, pc, r2
   25190:	ldrb	r0, [r2, r0]
   25194:	ldrb	r1, [r2, r1]
   25198:	mul	r1, r1, r4
   2519c:	mul	r0, r1, r0
   251a0:	movw	r1, #411	; 0x19b
   251a4:	movt	r1, #4515	; 0x11a3
   251a8:	umull	r1, r2, r0, r1
   251ac:	sub	r1, r0, r2
   251b0:	add	r1, r2, r1, lsr #1
   251b4:	lsr	r1, r1, #8
   251b8:	movw	r2, #479	; 0x1df
   251bc:	mls	r0, r1, r2, r0
   251c0:	add	r5, r0, #1
   251c4:	add	r0, r5, r5, lsl #1
   251c8:	ldr	r7, [pc, #108]	; 2523c <myhtml_tag_static_search@@Base+0xcc>
   251cc:	add	r7, pc, r7
   251d0:	b	251e8 <myhtml_tag_static_search@@Base+0x78>
   251d4:	bhi	2522c <myhtml_tag_static_search@@Base+0xbc>
   251d8:	add	r0, r5, r5, lsl #1
   251dc:	add	r0, r7, r0, lsl #2
   251e0:	ldr	r5, [r0, #4]
   251e4:	add	r0, r5, r5, lsl #1
   251e8:	ldr	r6, [r7, r0, lsl #2]
   251ec:	cmp	r6, #0
   251f0:	beq	2522c <myhtml_tag_static_search@@Base+0xbc>
   251f4:	ldr	r0, [r6, #8]
   251f8:	cmp	r0, r4
   251fc:	bne	251d4 <myhtml_tag_static_search@@Base+0x64>
   25200:	ldr	r0, [r6, #4]
   25204:	mov	r1, r8
   25208:	mov	r2, r4
   2520c:	bl	11704 <mycore_strncasecmp@plt>
   25210:	cmp	r0, #0
   25214:	beq	25230 <myhtml_tag_static_search@@Base+0xc0>
   25218:	add	r0, r5, r5, lsl #1
   2521c:	add	r0, r7, r0, lsl #2
   25220:	ldr	r5, [r0, #4]
   25224:	cmp	r5, #0
   25228:	bne	251e4 <myhtml_tag_static_search@@Base+0x74>
   2522c:	mov	r6, #0
   25230:	mov	r0, r6
   25234:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25238:	muleq	sp, sl, ip
   2523c:	andeq	sp, lr, ip, lsl #8

00025240 <myhtml_tag_static_get_by_id@@Base>:
   25240:	ldr	r1, [pc, #12]	; 25254 <myhtml_tag_static_get_by_id@@Base+0x14>
   25244:	add	r1, pc, r1
   25248:	mov	r2, #44	; 0x2c
   2524c:	mla	r0, r0, r2, r1
   25250:	bx	lr
   25254:	strdeq	lr, [lr], -r0

00025258 <myhtml_token_create@@Base>:
   25258:	push	{r4, r5, r6, r7, fp, lr}
   2525c:	add	fp, sp, #16
   25260:	mov	r6, r1
   25264:	mov	r5, r0
   25268:	cmp	r1, #0
   2526c:	movweq	r6, #4096	; 0x1000
   25270:	mov	r0, #24
   25274:	bl	1204c <mycore_malloc@plt>
   25278:	mov	r7, #0
   2527c:	cmp	r0, #0
   25280:	beq	252fc <myhtml_token_create@@Base+0xa4>
   25284:	mov	r4, r0
   25288:	bl	11218 <mcobject_async_create@plt>
   2528c:	str	r0, [r4, #4]
   25290:	cmp	r0, #0
   25294:	beq	25308 <myhtml_token_create@@Base+0xb0>
   25298:	bl	11218 <mcobject_async_create@plt>
   2529c:	mov	r1, r0
   252a0:	str	r0, [r4, #8]
   252a4:	ldr	r0, [r4, #4]
   252a8:	cmp	r1, #0
   252ac:	beq	25304 <myhtml_token_create@@Base+0xac>
   252b0:	mov	r1, #128	; 0x80
   252b4:	mov	r2, r6
   252b8:	mov	r3, #52	; 0x34
   252bc:	bl	1114c <mcobject_async_init@plt>
   252c0:	ldr	r0, [r4, #8]
   252c4:	mov	r1, #128	; 0x80
   252c8:	mov	r2, r6
   252cc:	mov	r3, #68	; 0x44
   252d0:	bl	1114c <mcobject_async_init@plt>
   252d4:	ldr	r0, [r4, #4]
   252d8:	mov	r1, #0
   252dc:	bl	11e84 <mcobject_async_node_add@plt>
   252e0:	str	r0, [r4, #12]
   252e4:	ldr	r0, [r4, #8]
   252e8:	mov	r1, #0
   252ec:	bl	11e84 <mcobject_async_node_add@plt>
   252f0:	str	r0, [r4, #16]
   252f4:	str	r5, [r4]
   252f8:	mov	r7, r4
   252fc:	mov	r0, r7
   25300:	pop	{r4, r5, r6, r7, fp, pc}
   25304:	bl	12184 <mycore_free@plt>
   25308:	mov	r0, r4
   2530c:	bl	12184 <mycore_free@plt>
   25310:	mov	r0, r7
   25314:	pop	{r4, r5, r6, r7, fp, pc}

00025318 <myhtml_token_clean@@Base>:
   25318:	push	{r4, sl, fp, lr}
   2531c:	add	fp, sp, #8
   25320:	mov	r4, r0
   25324:	ldr	r0, [r0, #4]
   25328:	ldr	r1, [r4, #12]
   2532c:	bl	11c98 <mcobject_async_node_clean@plt>
   25330:	ldr	r0, [r4, #8]
   25334:	ldr	r1, [r4, #16]
   25338:	pop	{r4, sl, fp, lr}
   2533c:	b	11c98 <mcobject_async_node_clean@plt>

00025340 <myhtml_token_clean_all@@Base>:
   25340:	push	{r4, sl, fp, lr}
   25344:	add	fp, sp, #8
   25348:	mov	r4, r0
   2534c:	ldr	r0, [r0, #4]
   25350:	bl	123e8 <mcobject_async_clean@plt>
   25354:	ldr	r0, [r4, #8]
   25358:	pop	{r4, sl, fp, lr}
   2535c:	b	123e8 <mcobject_async_clean@plt>

00025360 <myhtml_token_destroy@@Base>:
   25360:	cmp	r0, #0
   25364:	beq	253b0 <myhtml_token_destroy@@Base+0x50>
   25368:	push	{r4, sl, fp, lr}
   2536c:	add	fp, sp, #8
   25370:	mov	r4, r0
   25374:	ldr	r0, [r0, #4]
   25378:	cmp	r0, #0
   2537c:	beq	2538c <myhtml_token_destroy@@Base+0x2c>
   25380:	mov	r1, #1
   25384:	bl	11f14 <mcobject_async_destroy@plt>
   25388:	str	r0, [r4, #4]
   2538c:	ldr	r0, [r4, #8]
   25390:	cmp	r0, #0
   25394:	beq	253a4 <myhtml_token_destroy@@Base+0x44>
   25398:	mov	r1, #1
   2539c:	bl	11f14 <mcobject_async_destroy@plt>
   253a0:	str	r0, [r4, #8]
   253a4:	mov	r0, r4
   253a8:	bl	12184 <mycore_free@plt>
   253ac:	pop	{r4, sl, fp, lr}
   253b0:	mov	r0, #0
   253b4:	bx	lr

000253b8 <myhtml_token_node_create@@Base>:
   253b8:	push	{r4, r5, fp, lr}
   253bc:	add	fp, sp, #8
   253c0:	ldr	r0, [r0, #4]
   253c4:	mov	r4, #0
   253c8:	mov	r2, #0
   253cc:	bl	11f8c <mcobject_async_malloc@plt>
   253d0:	cmp	r0, #0
   253d4:	beq	253e4 <myhtml_token_node_create@@Base+0x2c>
   253d8:	mov	r5, r0
   253dc:	bl	12310 <myhtml_token_node_clean@plt>
   253e0:	mov	r4, r5
   253e4:	mov	r0, r4
   253e8:	pop	{r4, r5, fp, pc}

000253ec <myhtml_token_node_clean@@Base>:
   253ec:	mov	r1, #0
   253f0:	vmov.i32	q8, #0	; 0x00000000
   253f4:	str	r1, [r0, #48]	; 0x30
   253f8:	add	r1, r0, #32
   253fc:	vst1.32	{d16-d17}, [r1]
   25400:	add	r1, r0, #16
   25404:	vst1.32	{d16-d17}, [r1]
   25408:	mov	r1, #8
   2540c:	str	r1, [r0, #48]	; 0x30
   25410:	mov	r1, #4
   25414:	vst1.32	{d16-d17}, [r0], r1
   25418:	b	12424 <mycore_string_clean_all@plt>

0002541c <myhtml_token_attr_create@@Base>:
   2541c:	push	{r4, r5, fp, lr}
   25420:	add	fp, sp, #8
   25424:	ldr	r0, [r0, #8]
   25428:	mov	r4, #0
   2542c:	mov	r2, #0
   25430:	bl	11f8c <mcobject_async_malloc@plt>
   25434:	cmp	r0, #0
   25438:	beq	25448 <myhtml_token_attr_create@@Base+0x2c>
   2543c:	mov	r5, r0
   25440:	bl	11494 <myhtml_token_attr_clean@plt>
   25444:	mov	r4, r5
   25448:	mov	r0, r4
   2544c:	pop	{r4, r5, fp, pc}

00025450 <myhtml_token_attr_clean@@Base>:
   25450:	push	{r4, sl, fp, lr}
   25454:	add	fp, sp, #8
   25458:	mov	r1, #1
   2545c:	vmov.i32	q8, #0	; 0x00000000
   25460:	str	r1, [r0, #64]	; 0x40
   25464:	add	r1, r0, #48	; 0x30
   25468:	vst1.32	{d16-d17}, [r1]
   2546c:	add	r1, r0, #32
   25470:	vst1.32	{d16-d17}, [r1]
   25474:	add	r1, r0, #16
   25478:	vst1.32	{d16-d17}, [r1]
   2547c:	mov	r1, #28
   25480:	mov	r4, r0
   25484:	vst1.32	{d16-d17}, [r4], r1
   25488:	add	r0, r0, #8
   2548c:	bl	12424 <mycore_string_clean_all@plt>
   25490:	mov	r0, r4
   25494:	pop	{r4, sl, fp, lr}
   25498:	b	12424 <mycore_string_clean_all@plt>

0002549c <myhtml_token_node_tag_id@@Base>:
   2549c:	ldr	r0, [r0]
   254a0:	bx	lr

000254a4 <myhtml_token_node_raw_position@@Base>:
   254a4:	cmp	r1, #0
   254a8:	moveq	r1, #0
   254ac:	streq	r1, [r0]
   254b0:	streq	r1, [r0, #4]
   254b4:	bxeq	lr
   254b8:	ldr	r2, [r1, #24]
   254bc:	ldr	r1, [r1, #28]
   254c0:	str	r2, [r0]
   254c4:	str	r1, [r0, #4]
   254c8:	bx	lr

000254cc <myhtml_token_node_element_position@@Base>:
   254cc:	cmp	r1, #0
   254d0:	moveq	r1, #0
   254d4:	streq	r1, [r0]
   254d8:	streq	r1, [r0, #4]
   254dc:	bxeq	lr
   254e0:	ldr	r2, [r1, #32]
   254e4:	ldr	r1, [r1, #36]	; 0x24
   254e8:	str	r2, [r0]
   254ec:	str	r1, [r0, #4]
   254f0:	bx	lr

000254f4 <myhtml_token_node_attribute_first@@Base>:
   254f4:	ldr	r0, [r0, #40]	; 0x28
   254f8:	bx	lr

000254fc <myhtml_token_node_attribute_last@@Base>:
   254fc:	ldr	r0, [r0, #44]	; 0x2c
   25500:	bx	lr

00025504 <myhtml_token_node_text@@Base>:
   25504:	cmp	r1, #0
   25508:	ldrne	r2, [r0, #12]
   2550c:	strne	r2, [r1]
   25510:	ldr	r0, [r0, #4]
   25514:	bx	lr

00025518 <myhtml_token_node_string@@Base>:
   25518:	add	r0, r0, #4
   2551c:	bx	lr

00025520 <myhtml_token_node_is_close@@Base>:
   25520:	ldr	r0, [r0, #48]	; 0x30
   25524:	and	r0, r0, #1
   25528:	bx	lr

0002552c <myhtml_token_node_is_close_self@@Base>:
   2552c:	ldr	r0, [r0, #48]	; 0x30
   25530:	ubfx	r0, r0, #1, #1
   25534:	bx	lr

00025538 <myhtml_token_node_wait_for_done@@Base>:
   25538:	push	{r4, r5, fp, lr}
   2553c:	add	fp, sp, #8
   25540:	mov	r5, r0
   25544:	ldr	r0, [r1, #48]	; 0x30
   25548:	tst	r0, #4
   2554c:	popne	{r4, r5, fp, pc}
   25550:	mov	r4, r1
   25554:	ldr	r0, [r5]
   25558:	ldr	r0, [r0]
   2555c:	ldr	r0, [r0]
   25560:	ldr	r0, [r0, #24]
   25564:	bl	11518 <mythread_nanosleep_sleep@plt>
   25568:	ldr	r0, [r4, #48]	; 0x30
   2556c:	tst	r0, #4
   25570:	beq	25554 <myhtml_token_node_wait_for_done@@Base+0x1c>
   25574:	pop	{r4, r5, fp, pc}

00025578 <myhtml_token_set_done@@Base>:
   25578:	ldr	r1, [r0, #48]	; 0x30
   2557c:	orr	r1, r1, #4
   25580:	str	r1, [r0, #48]	; 0x30
   25584:	bx	lr

00025588 <myhtml_token_node_clone@@Base>:
   25588:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2558c:	add	fp, sp, #24
   25590:	mov	r4, #0
   25594:	cmp	r1, #0
   25598:	beq	25654 <myhtml_token_node_clone@@Base+0xcc>
   2559c:	mov	r8, r3
   255a0:	mov	r5, r1
   255a4:	mov	r6, r0
   255a8:	ldr	r9, [r0]
   255ac:	mov	r1, r2
   255b0:	bl	11e0c <myhtml_token_node_create@plt>
   255b4:	cmp	r0, #0
   255b8:	beq	25654 <myhtml_token_node_clone@@Base+0xcc>
   255bc:	mov	r7, r0
   255c0:	ldr	r0, [r5]
   255c4:	str	r0, [r7]
   255c8:	ldr	r0, [r5, #48]	; 0x30
   255cc:	mov	r1, #0
   255d0:	str	r1, [r7, #44]	; 0x2c
   255d4:	str	r1, [r7, #40]	; 0x28
   255d8:	str	r0, [r7, #48]	; 0x30
   255dc:	ldr	r0, [r5, #24]
   255e0:	str	r0, [r7, #24]
   255e4:	ldr	r0, [r5, #28]
   255e8:	str	r0, [r7, #28]
   255ec:	ldr	r0, [r5, #32]
   255f0:	str	r0, [r7, #32]
   255f4:	ldr	r0, [r5, #36]	; 0x24
   255f8:	str	r0, [r7, #36]	; 0x24
   255fc:	ldr	r2, [r5, #12]
   25600:	cmp	r2, #0
   25604:	beq	25634 <myhtml_token_node_clone@@Base+0xac>
   25608:	ldr	r0, [r9, #4]
   2560c:	ldr	r1, [r9, #52]	; 0x34
   25610:	add	r4, r7, #4
   25614:	add	r3, r2, #1
   25618:	mov	r2, r4
   2561c:	bl	11a34 <mycore_string_init@plt>
   25620:	ldr	r1, [r5, #4]
   25624:	ldr	r2, [r5, #12]
   25628:	mov	r0, r4
   2562c:	bl	11cec <mycore_string_append@plt>
   25630:	b	2563c <myhtml_token_node_clone@@Base+0xb4>
   25634:	add	r0, r7, #4
   25638:	bl	12424 <mycore_string_clean_all@plt>
   2563c:	mov	r0, r6
   25640:	mov	r1, r5
   25644:	mov	r2, r7
   25648:	mov	r3, r8
   2564c:	bl	119b0 <myhtml_token_node_attr_copy@plt>
   25650:	mov	r4, r7
   25654:	mov	r0, r4
   25658:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002565c <myhtml_token_node_attr_copy@@Base>:
   2565c:	push	{r4, r5, r6, r7, fp, lr}
   25660:	add	fp, sp, #16
   25664:	ldr	r7, [r1, #40]	; 0x28
   25668:	cmp	r7, #0
   2566c:	beq	2569c <myhtml_token_node_attr_copy@@Base+0x40>
   25670:	mov	r4, r3
   25674:	mov	r5, r2
   25678:	mov	r6, r0
   2567c:	mov	r0, r6
   25680:	mov	r1, r7
   25684:	mov	r2, r5
   25688:	mov	r3, r4
   2568c:	bl	11b90 <myhtml_token_attr_copy@plt>
   25690:	ldr	r7, [r7]
   25694:	cmp	r7, #0
   25698:	bne	2567c <myhtml_token_node_attr_copy@@Base+0x20>
   2569c:	pop	{r4, r5, r6, r7, fp, pc}

000256a0 <myhtml_token_node_text_append@@Base>:
   256a0:	push	{r4, r5, r6, sl, fp, lr}
   256a4:	add	fp, sp, #16
   256a8:	mov	r4, r3
   256ac:	mov	r5, r2
   256b0:	ldr	r2, [r0]
   256b4:	ldr	r0, [r2, #4]
   256b8:	ldr	r2, [r2, #52]	; 0x34
   256bc:	add	r6, r1, #4
   256c0:	add	r3, r3, #2
   256c4:	mov	r1, r2
   256c8:	mov	r2, r6
   256cc:	bl	11a34 <mycore_string_init@plt>
   256d0:	mov	r0, r6
   256d4:	mov	r1, r5
   256d8:	mov	r2, r4
   256dc:	pop	{r4, r5, r6, sl, fp, lr}
   256e0:	b	11cec <mycore_string_append@plt>

000256e4 <myhtml_token_node_attr_append@@Base>:
   256e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256e8:	add	fp, sp, #28
   256ec:	sub	sp, sp, #4
   256f0:	mov	r6, r3
   256f4:	mov	r9, r2
   256f8:	mov	r4, r1
   256fc:	mov	sl, r0
   25700:	ldr	r0, [r0, #8]
   25704:	ldr	r1, [fp, #16]
   25708:	mov	r7, #0
   2570c:	mov	r2, #0
   25710:	bl	11f8c <mcobject_async_malloc@plt>
   25714:	mov	r5, r0
   25718:	str	r7, [r0]
   2571c:	ldr	r8, [fp, #12]
   25720:	cmp	r6, #0
   25724:	beq	25790 <myhtml_token_node_attr_append@@Base+0xac>
   25728:	ldr	r1, [sl]
   2572c:	ldr	r0, [r1, #4]
   25730:	ldr	r1, [r1, #52]	; 0x34
   25734:	add	r7, r5, #8
   25738:	add	r3, r6, #1
   2573c:	mov	r2, r7
   25740:	bl	11a34 <mycore_string_init@plt>
   25744:	mov	r0, r7
   25748:	mov	r1, r9
   2574c:	mov	r2, r6
   25750:	bl	11ab8 <mycore_string_append_lowercase@plt>
   25754:	cmp	r8, #0
   25758:	beq	257a0 <myhtml_token_node_attr_append@@Base+0xbc>
   2575c:	ldr	r6, [fp, #8]
   25760:	ldr	r1, [sl]
   25764:	ldr	r0, [r1, #4]
   25768:	ldr	r1, [r1, #52]	; 0x34
   2576c:	add	r7, r5, #28
   25770:	add	r3, r8, #1
   25774:	mov	r2, r7
   25778:	bl	11a34 <mycore_string_init@plt>
   2577c:	mov	r0, r7
   25780:	mov	r1, r6
   25784:	mov	r2, r8
   25788:	bl	11cec <mycore_string_append@plt>
   2578c:	b	257a8 <myhtml_token_node_attr_append@@Base+0xc4>
   25790:	add	r0, r5, #8
   25794:	bl	12424 <mycore_string_clean_all@plt>
   25798:	cmp	r8, #0
   2579c:	bne	2575c <myhtml_token_node_attr_append@@Base+0x78>
   257a0:	add	r0, r5, #28
   257a4:	bl	12424 <mycore_string_clean_all@plt>
   257a8:	ldr	r0, [r4, #40]	; 0x28
   257ac:	cmp	r0, #0
   257b0:	beq	257c8 <myhtml_token_node_attr_append@@Base+0xe4>
   257b4:	ldr	r0, [r4, #44]!	; 0x2c
   257b8:	str	r5, [r0]
   257bc:	ldr	r0, [r4]
   257c0:	str	r0, [r5, #4]
   257c4:	b	257d8 <myhtml_token_node_attr_append@@Base+0xf4>
   257c8:	mov	r0, #0
   257cc:	str	r0, [r5, #4]
   257d0:	str	r5, [r4, #40]	; 0x28
   257d4:	add	r4, r4, #44	; 0x2c
   257d8:	str	r5, [r4]
   257dc:	mov	r0, #1
   257e0:	str	r0, [r5, #64]	; 0x40
   257e4:	mov	r0, r5
   257e8:	sub	sp, fp, #28
   257ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000257f0 <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   257f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   257f4:	add	fp, sp, #28
   257f8:	sub	sp, sp, #4
   257fc:	mov	r6, r3
   25800:	str	r2, [sp]
   25804:	mov	r9, r1
   25808:	mov	sl, r0
   2580c:	ldr	r0, [r0, #8]
   25810:	ldr	r1, [fp, #16]
   25814:	mov	r8, #0
   25818:	mov	r2, #0
   2581c:	bl	11f8c <mcobject_async_malloc@plt>
   25820:	mov	r5, r0
   25824:	str	r8, [r0]
   25828:	ldr	r4, [fp, #20]
   2582c:	ldr	r7, [fp, #12]
   25830:	cmp	r6, #0
   25834:	beq	258b8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xc8>
   25838:	ldr	r1, [sl]
   2583c:	ldr	r0, [r1, #4]
   25840:	ldr	r1, [r1, #52]	; 0x34
   25844:	add	r8, r5, #8
   25848:	add	r3, r6, #1
   2584c:	mov	r2, r8
   25850:	bl	11a34 <mycore_string_init@plt>
   25854:	mov	r0, r8
   25858:	cmp	r4, #0
   2585c:	beq	258d4 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xe4>
   25860:	ldr	r1, [sp]
   25864:	mov	r2, r6
   25868:	mov	r3, r4
   2586c:	bl	112e4 <myencoding_string_append_lowercase_ascii@plt>
   25870:	cmp	r7, #0
   25874:	beq	258c8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   25878:	ldr	r8, [fp, #8]
   2587c:	ldr	r1, [sl]
   25880:	ldr	r0, [r1, #4]
   25884:	ldr	r1, [r1, #52]	; 0x34
   25888:	add	r6, r5, #28
   2588c:	add	r3, r7, #1
   25890:	mov	r2, r6
   25894:	bl	11a34 <mycore_string_init@plt>
   25898:	mov	r0, r6
   2589c:	mov	r1, r8
   258a0:	mov	r2, r7
   258a4:	cmp	r4, #0
   258a8:	beq	258ec <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xfc>
   258ac:	mov	r3, r4
   258b0:	bl	11890 <myencoding_string_append@plt>
   258b4:	b	258f0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   258b8:	add	r0, r5, #8
   258bc:	bl	12424 <mycore_string_clean_all@plt>
   258c0:	cmp	r7, #0
   258c4:	bne	25878 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   258c8:	add	r0, r5, #28
   258cc:	bl	12424 <mycore_string_clean_all@plt>
   258d0:	b	258f0 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   258d4:	ldr	r1, [sp]
   258d8:	mov	r2, r6
   258dc:	bl	11ab8 <mycore_string_append_lowercase@plt>
   258e0:	cmp	r7, #0
   258e4:	bne	25878 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x88>
   258e8:	b	258c8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xd8>
   258ec:	bl	11cec <mycore_string_append@plt>
   258f0:	ldr	r0, [r9, #40]	; 0x28
   258f4:	cmp	r0, #0
   258f8:	beq	25910 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x120>
   258fc:	ldr	r0, [r9, #44]!	; 0x2c
   25900:	str	r5, [r0]
   25904:	ldr	r0, [r9]
   25908:	str	r0, [r5, #4]
   2590c:	b	25920 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x130>
   25910:	mov	r0, #0
   25914:	str	r0, [r5, #4]
   25918:	str	r5, [r9, #40]	; 0x28
   2591c:	add	r9, r9, #44	; 0x2c
   25920:	str	r5, [r9]
   25924:	mov	r0, #1
   25928:	str	r0, [r5, #64]	; 0x40
   2592c:	mov	r0, r5
   25930:	sub	sp, fp, #28
   25934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00025938 <myhtml_token_node_attr_copy_with_check@@Base>:
   25938:	push	{r4, r5, r6, r7, fp, lr}
   2593c:	add	fp, sp, #16
   25940:	ldr	r7, [r1, #40]	; 0x28
   25944:	cmp	r7, #0
   25948:	beq	259a0 <myhtml_token_node_attr_copy_with_check@@Base+0x68>
   2594c:	mov	r4, r3
   25950:	mov	r5, r2
   25954:	mov	r6, r0
   25958:	b	25968 <myhtml_token_node_attr_copy_with_check@@Base+0x30>
   2595c:	ldr	r7, [r7]
   25960:	cmp	r7, #0
   25964:	beq	259a0 <myhtml_token_node_attr_copy_with_check@@Base+0x68>
   25968:	ldr	r2, [r7, #16]
   2596c:	cmp	r2, #0
   25970:	beq	2595c <myhtml_token_node_attr_copy_with_check@@Base+0x24>
   25974:	ldr	r1, [r7, #8]
   25978:	mov	r0, r5
   2597c:	bl	1225c <myhtml_token_attr_by_name@plt>
   25980:	cmp	r0, #0
   25984:	bne	2595c <myhtml_token_node_attr_copy_with_check@@Base+0x24>
   25988:	mov	r0, r6
   2598c:	mov	r1, r7
   25990:	mov	r2, r5
   25994:	mov	r3, r4
   25998:	bl	11b90 <myhtml_token_attr_copy@plt>
   2599c:	b	2595c <myhtml_token_node_attr_copy_with_check@@Base+0x24>
   259a0:	pop	{r4, r5, r6, r7, fp, pc}

000259a4 <myhtml_token_attr_by_name@@Base>:
   259a4:	push	{r4, r5, r6, r7, fp, lr}
   259a8:	add	fp, sp, #16
   259ac:	ldr	r7, [r0, #40]	; 0x28
   259b0:	mov	r4, #0
   259b4:	cmp	r7, #0
   259b8:	beq	259fc <myhtml_token_attr_by_name@@Base+0x58>
   259bc:	mov	r5, r2
   259c0:	mov	r6, r1
   259c4:	b	259d4 <myhtml_token_attr_by_name@@Base+0x30>
   259c8:	ldr	r7, [r7]
   259cc:	cmp	r7, #0
   259d0:	beq	259fc <myhtml_token_attr_by_name@@Base+0x58>
   259d4:	ldr	r0, [r7, #16]
   259d8:	cmp	r0, r5
   259dc:	bne	259c8 <myhtml_token_attr_by_name@@Base+0x24>
   259e0:	ldr	r0, [r7, #8]
   259e4:	mov	r1, r6
   259e8:	bl	110c8 <mycore_strcmp@plt>
   259ec:	cmp	r0, #0
   259f0:	bne	259c8 <myhtml_token_attr_by_name@@Base+0x24>
   259f4:	mov	r0, r7
   259f8:	pop	{r4, r5, r6, r7, fp, pc}
   259fc:	mov	r0, r4
   25a00:	pop	{r4, r5, r6, r7, fp, pc}

00025a04 <myhtml_token_attr_copy@@Base>:
   25a04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25a08:	add	fp, sp, #24
   25a0c:	mov	r5, r2
   25a10:	mov	r4, r1
   25a14:	mov	r8, r0
   25a18:	ldr	r0, [r0, #8]
   25a1c:	mov	r7, #0
   25a20:	mov	r1, r3
   25a24:	mov	r2, #0
   25a28:	bl	11f8c <mcobject_async_malloc@plt>
   25a2c:	mov	r6, r0
   25a30:	str	r7, [r0]
   25a34:	ldr	r2, [r4, #16]
   25a38:	cmp	r2, #0
   25a3c:	beq	25a70 <myhtml_token_attr_copy@@Base+0x6c>
   25a40:	ldr	r1, [r8]
   25a44:	ldr	r0, [r1, #4]
   25a48:	ldr	r1, [r1, #52]	; 0x34
   25a4c:	add	r7, r6, #8
   25a50:	add	r3, r2, #1
   25a54:	mov	r2, r7
   25a58:	bl	11a34 <mycore_string_init@plt>
   25a5c:	ldr	r1, [r4, #8]
   25a60:	ldr	r2, [r4, #16]
   25a64:	mov	r0, r7
   25a68:	bl	11ab8 <mycore_string_append_lowercase@plt>
   25a6c:	b	25a78 <myhtml_token_attr_copy@@Base+0x74>
   25a70:	add	r0, r6, #8
   25a74:	bl	12424 <mycore_string_clean_all@plt>
   25a78:	ldr	r2, [r4, #36]	; 0x24
   25a7c:	cmp	r2, #0
   25a80:	beq	25ab4 <myhtml_token_attr_copy@@Base+0xb0>
   25a84:	ldr	r1, [r8]
   25a88:	ldr	r0, [r1, #4]
   25a8c:	ldr	r1, [r1, #52]	; 0x34
   25a90:	add	r7, r6, #28
   25a94:	add	r3, r2, #1
   25a98:	mov	r2, r7
   25a9c:	bl	11a34 <mycore_string_init@plt>
   25aa0:	ldr	r1, [r4, #28]
   25aa4:	ldr	r2, [r4, #36]	; 0x24
   25aa8:	mov	r0, r7
   25aac:	bl	11cec <mycore_string_append@plt>
   25ab0:	b	25abc <myhtml_token_attr_copy@@Base+0xb8>
   25ab4:	add	r0, r6, #28
   25ab8:	bl	12424 <mycore_string_clean_all@plt>
   25abc:	ldr	r0, [r5, #40]	; 0x28
   25ac0:	cmp	r0, #0
   25ac4:	beq	25adc <myhtml_token_attr_copy@@Base+0xd8>
   25ac8:	ldr	r0, [r5, #44]!	; 0x2c
   25acc:	str	r6, [r0]
   25ad0:	ldr	r0, [r5]
   25ad4:	str	r0, [r6, #4]
   25ad8:	b	25aec <myhtml_token_attr_copy@@Base+0xe8>
   25adc:	mov	r0, #0
   25ae0:	str	r0, [r6, #4]
   25ae4:	str	r6, [r5, #40]	; 0x28
   25ae8:	add	r5, r5, #44	; 0x2c
   25aec:	str	r6, [r5]
   25af0:	ldr	r0, [r4, #64]	; 0x40
   25af4:	str	r0, [r6, #64]	; 0x40
   25af8:	mov	r0, #1
   25afc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025b00 <myhtml_token_attr_match@@Base>:
   25b00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25b04:	add	fp, sp, #24
   25b08:	ldr	r4, [r1, #40]	; 0x28
   25b0c:	cmp	r4, #0
   25b10:	beq	25b7c <myhtml_token_attr_match@@Base+0x7c>
   25b14:	mov	r5, r3
   25b18:	mov	r6, r2
   25b1c:	ldr	r7, [fp, #12]
   25b20:	ldr	r8, [fp, #8]
   25b24:	b	25b34 <myhtml_token_attr_match@@Base+0x34>
   25b28:	ldr	r4, [r4]
   25b2c:	cmp	r4, #0
   25b30:	beq	25b7c <myhtml_token_attr_match@@Base+0x7c>
   25b34:	ldr	r0, [r4, #16]
   25b38:	cmp	r0, r5
   25b3c:	bne	25b28 <myhtml_token_attr_match@@Base+0x28>
   25b40:	ldr	r0, [r4, #36]	; 0x24
   25b44:	cmp	r0, r7
   25b48:	bne	25b28 <myhtml_token_attr_match@@Base+0x28>
   25b4c:	ldr	r0, [r4, #8]
   25b50:	mov	r1, r6
   25b54:	bl	110c8 <mycore_strcmp@plt>
   25b58:	cmp	r0, #0
   25b5c:	bne	25b28 <myhtml_token_attr_match@@Base+0x28>
   25b60:	ldr	r0, [r4, #28]
   25b64:	mov	r1, r8
   25b68:	bl	110c8 <mycore_strcmp@plt>
   25b6c:	cmp	r0, #0
   25b70:	movne	r4, #0
   25b74:	mov	r0, r4
   25b78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25b7c:	mov	r4, #0
   25b80:	mov	r0, r4
   25b84:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025b88 <myhtml_token_attr_match_case@@Base>:
   25b88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25b8c:	add	fp, sp, #24
   25b90:	ldr	r4, [r1, #40]	; 0x28
   25b94:	cmp	r4, #0
   25b98:	beq	25c04 <myhtml_token_attr_match_case@@Base+0x7c>
   25b9c:	mov	r5, r3
   25ba0:	mov	r6, r2
   25ba4:	ldr	r7, [fp, #12]
   25ba8:	ldr	r8, [fp, #8]
   25bac:	b	25bbc <myhtml_token_attr_match_case@@Base+0x34>
   25bb0:	ldr	r4, [r4]
   25bb4:	cmp	r4, #0
   25bb8:	beq	25c04 <myhtml_token_attr_match_case@@Base+0x7c>
   25bbc:	ldr	r0, [r4, #16]
   25bc0:	cmp	r0, r5
   25bc4:	bne	25bb0 <myhtml_token_attr_match_case@@Base+0x28>
   25bc8:	ldr	r0, [r4, #36]	; 0x24
   25bcc:	cmp	r0, r7
   25bd0:	bne	25bb0 <myhtml_token_attr_match_case@@Base+0x28>
   25bd4:	ldr	r0, [r4, #8]
   25bd8:	mov	r1, r6
   25bdc:	bl	110c8 <mycore_strcmp@plt>
   25be0:	cmp	r0, #0
   25be4:	bne	25bb0 <myhtml_token_attr_match_case@@Base+0x28>
   25be8:	ldr	r0, [r4, #28]
   25bec:	mov	r1, r8
   25bf0:	bl	1195c <mycore_strcasecmp@plt>
   25bf4:	cmp	r0, #0
   25bf8:	movne	r4, #0
   25bfc:	mov	r0, r4
   25c00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25c04:	mov	r4, #0
   25c08:	mov	r0, r4
   25c0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00025c10 <myhtml_token_adjust_mathml_attributes@@Base>:
   25c10:	push	{fp, lr}
   25c14:	mov	fp, sp
   25c18:	ldr	r1, [pc, #56]	; 25c58 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   25c1c:	add	r1, pc, r1
   25c20:	mov	r2, #13
   25c24:	bl	1225c <myhtml_token_attr_by_name@plt>
   25c28:	cmp	r0, #0
   25c2c:	popeq	{fp, pc}
   25c30:	ldr	r0, [r0, #8]
   25c34:	ldr	r1, [pc, #32]	; 25c5c <myhtml_token_adjust_mathml_attributes@@Base+0x4c>
   25c38:	add	r1, pc, r1
   25c3c:	vldr	d16, [r1]
   25c40:	add	r1, r1, #5
   25c44:	vld1.8	{d17}, [r1]
   25c48:	vst1.8	{d16}, [r0]
   25c4c:	add	r0, r0, #5
   25c50:	vst1.8	{d17}, [r0]
   25c54:	pop	{fp, pc}
   25c58:	andeq	r7, sp, sl, ror #18
   25c5c:	andeq	r8, sp, r8, asr #1

00025c60 <_myhtml_token_create_copy_srt@@Base>:
   25c60:	push	{r4, r5, r6, sl, fp, lr}
   25c64:	add	fp, sp, #16
   25c68:	mov	r4, r3
   25c6c:	mov	r5, r2
   25c70:	mov	r6, r1
   25c74:	ldr	r1, [r0]
   25c78:	ldr	r0, [r1, #4]
   25c7c:	ldr	r1, [r1, #52]	; 0x34
   25c80:	add	r2, r2, #2
   25c84:	bl	11d28 <mchar_async_malloc@plt>
   25c88:	str	r0, [r4]
   25c8c:	mov	r1, r6
   25c90:	mov	r2, r5
   25c94:	pop	{r4, r5, r6, sl, fp, lr}
   25c98:	b	11740 <mycore_string_raw_copy@plt>

00025c9c <myhtml_token_strict_doctype_by_token@@Base>:
   25c9c:	push	{r4, r5, r6, sl, fp, lr}
   25ca0:	add	fp, sp, #16
   25ca4:	mov	r4, r2
   25ca8:	mov	r5, r0
   25cac:	ldr	r6, [r1, #40]	; 0x28
   25cb0:	cmp	r6, #0
   25cb4:	beq	25d78 <myhtml_token_strict_doctype_by_token@@Base+0xdc>
   25cb8:	ldr	r2, [r6, #16]
   25cbc:	cmp	r2, #0
   25cc0:	beq	25d78 <myhtml_token_strict_doctype_by_token@@Base+0xdc>
   25cc4:	ldr	r1, [r6, #8]
   25cc8:	add	r3, r4, #4
   25ccc:	mov	r0, r5
   25cd0:	bl	11308 <_myhtml_token_create_copy_srt@plt>
   25cd4:	ldr	r1, [r4, #4]
   25cd8:	ldr	r0, [pc, #408]	; 25e78 <myhtml_token_strict_doctype_by_token@@Base+0x1dc>
   25cdc:	add	r0, pc, r0
   25ce0:	bl	110c8 <mycore_strcmp@plt>
   25ce4:	clz	r0, r0
   25ce8:	lsr	r0, r0, #5
   25cec:	strb	r0, [r4]
   25cf0:	ldr	r6, [r6]
   25cf4:	cmp	r6, #0
   25cf8:	beq	25e48 <myhtml_token_strict_doctype_by_token@@Base+0x1ac>
   25cfc:	ldr	r0, [r6, #36]	; 0x24
   25d00:	cmp	r0, #0
   25d04:	beq	25e48 <myhtml_token_strict_doctype_by_token@@Base+0x1ac>
   25d08:	ldr	r0, [r6, #28]
   25d0c:	ldr	r1, [pc, #360]	; 25e7c <myhtml_token_strict_doctype_by_token@@Base+0x1e0>
   25d10:	add	r1, pc, r1
   25d14:	bl	1195c <mycore_strcasecmp@plt>
   25d18:	cmp	r0, #0
   25d1c:	beq	25dc8 <myhtml_token_strict_doctype_by_token@@Base+0x12c>
   25d20:	ldr	r0, [r6, #28]
   25d24:	ldr	r2, [r6, #36]	; 0x24
   25d28:	ldr	r1, [pc, #344]	; 25e88 <myhtml_token_strict_doctype_by_token@@Base+0x1ec>
   25d2c:	add	r1, pc, r1
   25d30:	bl	11704 <mycore_strncasecmp@plt>
   25d34:	cmp	r0, #0
   25d38:	bne	25e1c <myhtml_token_strict_doctype_by_token@@Base+0x180>
   25d3c:	ldr	r6, [r6]
   25d40:	cmp	r6, #0
   25d44:	beq	25e1c <myhtml_token_strict_doctype_by_token@@Base+0x180>
   25d48:	ldr	r0, [r6, #36]	; 0x24
   25d4c:	cmp	r0, #0
   25d50:	beq	25e1c <myhtml_token_strict_doctype_by_token@@Base+0x180>
   25d54:	add	r3, r4, #8
   25d58:	ldr	r1, [pc, #300]	; 25e8c <myhtml_token_strict_doctype_by_token@@Base+0x1f0>
   25d5c:	add	r1, pc, r1
   25d60:	mov	r0, r5
   25d64:	mov	r2, #1
   25d68:	bl	11308 <_myhtml_token_create_copy_srt@plt>
   25d6c:	ldr	r1, [r6, #28]
   25d70:	ldr	r2, [r6, #36]	; 0x24
   25d74:	b	25e0c <myhtml_token_strict_doctype_by_token@@Base+0x170>
   25d78:	mov	r6, #0
   25d7c:	strb	r6, [r4]
   25d80:	add	r3, r4, #4
   25d84:	ldr	r1, [pc, #244]	; 25e80 <myhtml_token_strict_doctype_by_token@@Base+0x1e4>
   25d88:	add	r1, pc, r1
   25d8c:	mov	r0, r5
   25d90:	mov	r2, #1
   25d94:	bl	11308 <_myhtml_token_create_copy_srt@plt>
   25d98:	ldr	r0, [r4, #8]
   25d9c:	cmp	r0, #0
   25da0:	beq	25da8 <myhtml_token_strict_doctype_by_token@@Base+0x10c>
   25da4:	bl	12184 <mycore_free@plt>
   25da8:	str	r6, [r4, #8]
   25dac:	ldr	r0, [r4, #12]
   25db0:	cmp	r0, #0
   25db4:	beq	25dbc <myhtml_token_strict_doctype_by_token@@Base+0x120>
   25db8:	bl	12184 <mycore_free@plt>
   25dbc:	mov	r0, #0
   25dc0:	str	r0, [r4, #12]
   25dc4:	pop	{r4, r5, r6, sl, fp, pc}
   25dc8:	ldr	r6, [r6]
   25dcc:	cmp	r6, #0
   25dd0:	beq	25e1c <myhtml_token_strict_doctype_by_token@@Base+0x180>
   25dd4:	ldr	r2, [r6, #36]	; 0x24
   25dd8:	cmp	r2, #0
   25ddc:	beq	25e1c <myhtml_token_strict_doctype_by_token@@Base+0x180>
   25de0:	ldr	r1, [r6, #28]
   25de4:	add	r3, r4, #8
   25de8:	mov	r0, r5
   25dec:	bl	11308 <_myhtml_token_create_copy_srt@plt>
   25df0:	ldr	r0, [r6]
   25df4:	cmp	r0, #0
   25df8:	beq	25e4c <myhtml_token_strict_doctype_by_token@@Base+0x1b0>
   25dfc:	ldr	r2, [r0, #36]	; 0x24
   25e00:	cmp	r2, #0
   25e04:	beq	25e4c <myhtml_token_strict_doctype_by_token@@Base+0x1b0>
   25e08:	ldr	r1, [r0, #28]
   25e0c:	add	r3, r4, #12
   25e10:	mov	r0, r5
   25e14:	pop	{r4, r5, r6, sl, fp, lr}
   25e18:	b	25c60 <_myhtml_token_create_copy_srt@@Base>
   25e1c:	ldr	r0, [r4, #8]
   25e20:	cmp	r0, #0
   25e24:	beq	25e2c <myhtml_token_strict_doctype_by_token@@Base+0x190>
   25e28:	bl	12184 <mycore_free@plt>
   25e2c:	mov	r5, #0
   25e30:	str	r5, [r4, #8]
   25e34:	ldr	r0, [r4, #12]
   25e38:	cmp	r0, #0
   25e3c:	beq	25e44 <myhtml_token_strict_doctype_by_token@@Base+0x1a8>
   25e40:	bl	12184 <mycore_free@plt>
   25e44:	str	r5, [r4, #12]
   25e48:	pop	{r4, r5, r6, sl, fp, pc}
   25e4c:	ldr	r0, [r4, #12]!
   25e50:	cmp	r0, #0
   25e54:	beq	25e5c <myhtml_token_strict_doctype_by_token@@Base+0x1c0>
   25e58:	bl	12184 <mycore_free@plt>
   25e5c:	ldr	r1, [pc, #32]	; 25e84 <myhtml_token_strict_doctype_by_token@@Base+0x1e8>
   25e60:	add	r1, pc, r1
   25e64:	mov	r0, r5
   25e68:	mov	r2, #1
   25e6c:	mov	r3, r4
   25e70:	pop	{r4, r5, r6, sl, fp, lr}
   25e74:	b	25c60 <_myhtml_token_create_copy_srt@@Base>
   25e78:	andeq	r8, sp, ip, asr #2
   25e7c:	strheq	r7, [sp], -lr
   25e80:	andeq	r7, sp, r8, lsl #31
   25e84:			; <UNDEFINED> instruction: 0x000d7eb0
   25e88:	strheq	r7, [sp], -r4
   25e8c:			; <UNDEFINED> instruction: 0x000d7fb4

00025e90 <myhtml_token_doctype_check_html_4_0@@Base>:
   25e90:	push	{r4, sl, fp, lr}
   25e94:	add	fp, sp, #8
   25e98:	mov	r4, r0
   25e9c:	ldr	r0, [r0, #8]
   25ea0:	ldr	r1, [pc, #64]	; 25ee8 <myhtml_token_doctype_check_html_4_0@@Base+0x58>
   25ea4:	add	r1, pc, r1
   25ea8:	bl	110c8 <mycore_strcmp@plt>
   25eac:	cmp	r0, #0
   25eb0:	beq	25ed8 <myhtml_token_doctype_check_html_4_0@@Base+0x48>
   25eb4:	ldr	r0, [r4, #12]
   25eb8:	cmp	r0, #0
   25ebc:	beq	25ee0 <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   25ec0:	ldr	r1, [pc, #36]	; 25eec <myhtml_token_doctype_check_html_4_0@@Base+0x5c>
   25ec4:	add	r1, pc, r1
   25ec8:	bl	110c8 <mycore_strcmp@plt>
   25ecc:	cmp	r0, #0
   25ed0:	movwne	r0, #1
   25ed4:	pop	{r4, sl, fp, pc}
   25ed8:	mov	r0, #0
   25edc:	pop	{r4, sl, fp, pc}
   25ee0:	mov	r0, #1
   25ee4:	pop	{r4, sl, fp, pc}
   25ee8:	strdeq	r7, [sp], -r0
   25eec:	andeq	r7, sp, r9, ror #13

00025ef0 <myhtml_token_doctype_check_html_4_01@@Base>:
   25ef0:	push	{r4, sl, fp, lr}
   25ef4:	add	fp, sp, #8
   25ef8:	mov	r4, r0
   25efc:	ldr	r0, [r0, #8]
   25f00:	ldr	r1, [pc, #64]	; 25f48 <myhtml_token_doctype_check_html_4_01@@Base+0x58>
   25f04:	add	r1, pc, r1
   25f08:	bl	110c8 <mycore_strcmp@plt>
   25f0c:	cmp	r0, #0
   25f10:	beq	25f38 <myhtml_token_doctype_check_html_4_01@@Base+0x48>
   25f14:	ldr	r0, [r4, #12]
   25f18:	cmp	r0, #0
   25f1c:	beq	25f40 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   25f20:	ldr	r1, [pc, #36]	; 25f4c <myhtml_token_doctype_check_html_4_01@@Base+0x5c>
   25f24:	add	r1, pc, r1
   25f28:	bl	110c8 <mycore_strcmp@plt>
   25f2c:	cmp	r0, #0
   25f30:	movwne	r0, #1
   25f34:	pop	{r4, sl, fp, pc}
   25f38:	mov	r0, #0
   25f3c:	pop	{r4, sl, fp, pc}
   25f40:	mov	r0, #1
   25f44:	pop	{r4, sl, fp, pc}
   25f48:	ldrdeq	r7, [sp], -r4
   25f4c:	andeq	r7, sp, lr, asr #13

00025f50 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   25f50:	push	{r4, sl, fp, lr}
   25f54:	add	fp, sp, #8
   25f58:	mov	r4, r0
   25f5c:	ldr	r0, [r0, #12]
   25f60:	cmp	r0, #0
   25f64:	beq	25f9c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x4c>
   25f68:	ldr	r0, [r4, #8]
   25f6c:	ldr	r1, [pc, #56]	; 25fac <myhtml_token_doctype_check_xhtml_1_0@@Base+0x5c>
   25f70:	add	r1, pc, r1
   25f74:	bl	110c8 <mycore_strcmp@plt>
   25f78:	cmp	r0, #0
   25f7c:	beq	25fa4 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   25f80:	ldr	r0, [r4, #12]
   25f84:	ldr	r1, [pc, #36]	; 25fb0 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x60>
   25f88:	add	r1, pc, r1
   25f8c:	bl	110c8 <mycore_strcmp@plt>
   25f90:	cmp	r0, #0
   25f94:	movwne	r0, #1
   25f98:	pop	{r4, sl, fp, pc}
   25f9c:	mov	r0, #1
   25fa0:	pop	{r4, sl, fp, pc}
   25fa4:	mov	r0, #0
   25fa8:	pop	{r4, sl, fp, pc}
   25fac:	andeq	r7, sp, r8, lsr #13
   25fb0:			; <UNDEFINED> instruction: 0x000d76b1

00025fb4 <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   25fb4:	push	{r4, sl, fp, lr}
   25fb8:	add	fp, sp, #8
   25fbc:	mov	r4, r0
   25fc0:	ldr	r0, [r0, #12]
   25fc4:	cmp	r0, #0
   25fc8:	beq	26000 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x4c>
   25fcc:	ldr	r0, [r4, #8]
   25fd0:	ldr	r1, [pc, #56]	; 26010 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x5c>
   25fd4:	add	r1, pc, r1
   25fd8:	bl	110c8 <mycore_strcmp@plt>
   25fdc:	cmp	r0, #0
   25fe0:	beq	26008 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   25fe4:	ldr	r0, [r4, #12]
   25fe8:	ldr	r1, [pc, #36]	; 26014 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x60>
   25fec:	add	r1, pc, r1
   25ff0:	bl	110c8 <mycore_strcmp@plt>
   25ff4:	cmp	r0, #0
   25ff8:	movwne	r0, #1
   25ffc:	pop	{r4, sl, fp, pc}
   26000:	mov	r0, #1
   26004:	pop	{r4, sl, fp, pc}
   26008:	mov	r0, #0
   2600c:	pop	{r4, sl, fp, pc}
   26010:	muleq	sp, r7, r6
   26014:	muleq	sp, r9, r6

00026018 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   26018:	push	{r4, r5, fp, lr}
   2601c:	add	fp, sp, #8
   26020:	mov	r4, #0
   26024:	cmp	r2, #0
   26028:	beq	260dc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   2602c:	mov	r5, r2
   26030:	bl	118cc <myhtml_token_strict_doctype_by_token@plt>
   26034:	ldr	r0, [r5, #4]
   26038:	cmp	r0, #0
   2603c:	beq	260dc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   26040:	ldrb	r0, [r5]
   26044:	cmp	r0, #0
   26048:	bne	26058 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   2604c:	ldr	r0, [r5, #8]
   26050:	cmp	r0, #0
   26054:	beq	260b8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xa0>
   26058:	ldr	r0, [r5, #8]
   2605c:	cmp	r0, #0
   26060:	beq	260dc <myhtml_token_release_and_check_doctype_attributes@@Base+0xc4>
   26064:	ldrb	r0, [r5]
   26068:	cmp	r0, #0
   2606c:	beq	260d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   26070:	mov	r0, r5
   26074:	bl	11950 <myhtml_token_doctype_check_html_4_0@plt>
   26078:	cmp	r0, #0
   2607c:	beq	260d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   26080:	mov	r0, r5
   26084:	bl	117e8 <myhtml_token_doctype_check_html_4_01@plt>
   26088:	cmp	r0, #0
   2608c:	beq	260d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   26090:	mov	r0, r5
   26094:	bl	11a94 <myhtml_token_doctype_check_xhtml_1_0@plt>
   26098:	cmp	r0, #0
   2609c:	beq	260d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   260a0:	mov	r0, r5
   260a4:	bl	11104 <myhtml_token_doctype_check_xhtml_1_1@plt>
   260a8:	cmp	r0, #0
   260ac:	moveq	r4, #1
   260b0:	mov	r0, r4
   260b4:	pop	{r4, r5, fp, pc}
   260b8:	ldr	r0, [r5, #12]
   260bc:	cmp	r0, #0
   260c0:	beq	260d8 <myhtml_token_release_and_check_doctype_attributes@@Base+0xc0>
   260c4:	ldr	r1, [pc, #24]	; 260e4 <myhtml_token_release_and_check_doctype_attributes@@Base+0xcc>
   260c8:	add	r1, pc, r1
   260cc:	bl	110c8 <mycore_strcmp@plt>
   260d0:	cmp	r0, #0
   260d4:	bne	26058 <myhtml_token_release_and_check_doctype_attributes@@Base+0x40>
   260d8:	mov	r4, #1
   260dc:	mov	r0, r4
   260e0:	pop	{r4, r5, fp, pc}
   260e4:	andeq	r7, sp, sl, ror #11

000260e8 <myhtml_token_adjust_svg_attributes@@Base>:
   260e8:	push	{r4, r5, r6, r7, fp, lr}
   260ec:	add	fp, sp, #16
   260f0:	mov	r4, r0
   260f4:	mov	r6, #0
   260f8:	ldr	r7, [pc, #84]	; 26154 <myhtml_token_adjust_svg_attributes@@Base+0x6c>
   260fc:	add	r7, pc, r7
   26100:	b	26110 <myhtml_token_adjust_svg_attributes@@Base+0x28>
   26104:	add	r6, r6, #16
   26108:	cmp	r6, #928	; 0x3a0
   2610c:	beq	26150 <myhtml_token_adjust_svg_attributes@@Base+0x68>
   26110:	mov	r0, r7
   26114:	ldr	r1, [r0, r6]!
   26118:	ldr	r2, [r0, #4]
   2611c:	mov	r0, r4
   26120:	bl	1225c <myhtml_token_attr_by_name@plt>
   26124:	cmp	r0, #0
   26128:	beq	26104 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   2612c:	add	r5, r0, #8
   26130:	mov	r0, r5
   26134:	bl	120d0 <mycore_string_clean@plt>
   26138:	add	r0, r7, r6
   2613c:	ldr	r1, [r0, #8]
   26140:	ldr	r2, [r0, #12]
   26144:	mov	r0, r5
   26148:	bl	11cec <mycore_string_append@plt>
   2614c:	b	26104 <myhtml_token_adjust_svg_attributes@@Base+0x1c>
   26150:	pop	{r4, r5, r6, r7, fp, pc}
   26154:	andeq	r0, pc, r8, lsl #19

00026158 <myhtml_token_adjust_foreign_attributes@@Base>:
   26158:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2615c:	add	fp, sp, #24
   26160:	mov	r9, r0
   26164:	mov	r7, #0
   26168:	ldr	r8, [pc, #92]	; 261cc <myhtml_token_adjust_foreign_attributes@@Base+0x74>
   2616c:	add	r8, pc, r8
   26170:	b	26180 <myhtml_token_adjust_foreign_attributes@@Base+0x28>
   26174:	add	r7, r7, #20
   26178:	cmp	r7, #220	; 0xdc
   2617c:	beq	261c8 <myhtml_token_adjust_foreign_attributes@@Base+0x70>
   26180:	mov	r0, r8
   26184:	ldr	r1, [r0, r7]!
   26188:	ldr	r2, [r0, #4]
   2618c:	mov	r0, r9
   26190:	bl	1225c <myhtml_token_attr_by_name@plt>
   26194:	cmp	r0, #0
   26198:	beq	26174 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   2619c:	mov	r5, r0
   261a0:	add	r6, r0, #8
   261a4:	mov	r0, r6
   261a8:	bl	120d0 <mycore_string_clean@plt>
   261ac:	add	r0, r8, r7
   261b0:	add	r4, r0, #8
   261b4:	ldm	r4, {r1, r2, r4}
   261b8:	mov	r0, r6
   261bc:	bl	11cec <mycore_string_append@plt>
   261c0:	str	r4, [r5, #64]	; 0x40
   261c4:	b	26174 <myhtml_token_adjust_foreign_attributes@@Base+0x1c>
   261c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   261cc:			; <UNDEFINED> instruction: 0x000f0cb8

000261d0 <myhtml_token_attr_compare@@Base>:
   261d0:	mov	r2, r0
   261d4:	mov	r0, #0
   261d8:	cmp	r2, #0
   261dc:	cmpne	r1, #0
   261e0:	bne	261e8 <myhtml_token_attr_compare@@Base+0x18>
   261e4:	bx	lr
   261e8:	push	{r4, r5, fp, lr}
   261ec:	add	fp, sp, #8
   261f0:	ldr	r4, [r2, #40]	; 0x28
   261f4:	ldr	r5, [r1, #40]	; 0x28
   261f8:	b	26248 <myhtml_token_attr_compare@@Base+0x78>
   261fc:	ldr	r0, [r5, #16]
   26200:	ldr	r1, [r4, #16]
   26204:	cmp	r1, r0
   26208:	ldreq	r0, [r5, #36]	; 0x24
   2620c:	ldreq	r1, [r4, #36]	; 0x24
   26210:	cmpeq	r1, r0
   26214:	bne	26254 <myhtml_token_attr_compare@@Base+0x84>
   26218:	ldr	r1, [r5, #8]
   2621c:	ldr	r0, [r4, #8]
   26220:	bl	110c8 <mycore_strcmp@plt>
   26224:	cmp	r0, #0
   26228:	bne	26254 <myhtml_token_attr_compare@@Base+0x84>
   2622c:	ldr	r1, [r5, #28]
   26230:	ldr	r0, [r4, #28]
   26234:	bl	1195c <mycore_strcasecmp@plt>
   26238:	cmp	r0, #0
   2623c:	bne	26254 <myhtml_token_attr_compare@@Base+0x84>
   26240:	ldr	r4, [r4]
   26244:	ldr	r5, [r5]
   26248:	cmp	r5, #0
   2624c:	cmpne	r4, #0
   26250:	bne	261fc <myhtml_token_attr_compare@@Base+0x2c>
   26254:	orr	r0, r5, r4
   26258:	clz	r0, r0
   2625c:	lsr	r0, r0, #5
   26260:	pop	{r4, r5, fp, lr}
   26264:	bx	lr

00026268 <myhtml_token_delete@@Base>:
   26268:	push	{r4, r5, fp, lr}
   2626c:	add	fp, sp, #8
   26270:	mov	r4, r1
   26274:	mov	r5, r0
   26278:	ldr	r2, [r1, #4]
   2627c:	cmp	r2, #0
   26280:	beq	26298 <myhtml_token_delete@@Base+0x30>
   26284:	ldr	r0, [r4, #16]
   26288:	cmp	r0, #0
   2628c:	beq	26298 <myhtml_token_delete@@Base+0x30>
   26290:	ldr	r1, [r4, #20]
   26294:	bl	11b48 <mchar_async_free@plt>
   26298:	ldr	r0, [r5, #4]
   2629c:	mov	r1, r4
   262a0:	pop	{r4, r5, fp, lr}
   262a4:	b	114dc <mcobject_async_free@plt>

000262a8 <myhtml_token_attr_delete_all@@Base>:
   262a8:	push	{r4, sl, fp, lr}
   262ac:	add	fp, sp, #8
   262b0:	ldr	r4, [r1, #40]	; 0x28
   262b4:	cmp	r4, #0
   262b8:	bne	262cc <myhtml_token_attr_delete_all@@Base+0x24>
   262bc:	b	26310 <myhtml_token_attr_delete_all@@Base+0x68>
   262c0:	ldr	r4, [r4]
   262c4:	cmp	r4, #0
   262c8:	beq	26310 <myhtml_token_attr_delete_all@@Base+0x68>
   262cc:	ldr	r2, [r4, #8]
   262d0:	cmp	r2, #0
   262d4:	beq	262ec <myhtml_token_attr_delete_all@@Base+0x44>
   262d8:	ldr	r0, [r4, #20]
   262dc:	cmp	r0, #0
   262e0:	beq	262ec <myhtml_token_attr_delete_all@@Base+0x44>
   262e4:	ldr	r1, [r4, #24]
   262e8:	bl	11b48 <mchar_async_free@plt>
   262ec:	ldr	r2, [r4, #28]
   262f0:	cmp	r2, #0
   262f4:	beq	262c0 <myhtml_token_attr_delete_all@@Base+0x18>
   262f8:	ldr	r0, [r4, #40]	; 0x28
   262fc:	cmp	r0, #0
   26300:	beq	262c0 <myhtml_token_attr_delete_all@@Base+0x18>
   26304:	ldr	r1, [r4, #44]	; 0x2c
   26308:	bl	11b48 <mchar_async_free@plt>
   2630c:	b	262c0 <myhtml_token_attr_delete_all@@Base+0x18>
   26310:	pop	{r4, sl, fp, pc}

00026314 <myhtml_token_attr_remove@@Base>:
   26314:	cmp	r1, #0
   26318:	beq	2634c <myhtml_token_attr_remove@@Base+0x38>
   2631c:	ldm	r1, {r2, r3}
   26320:	cmp	r3, #0
   26324:	addeq	r3, r0, #40	; 0x28
   26328:	str	r2, [r3]
   2632c:	ldm	r1, {r2, ip}
   26330:	add	r3, r2, #4
   26334:	cmp	r2, #0
   26338:	addeq	r3, r0, #44	; 0x2c
   2633c:	str	ip, [r3]
   26340:	mov	r0, #0
   26344:	str	r0, [r1]
   26348:	str	r0, [r1, #4]
   2634c:	mov	r0, r1
   26350:	bx	lr

00026354 <myhtml_token_attr_remove_by_name@@Base>:
   26354:	push	{r4, sl, fp, lr}
   26358:	add	fp, sp, #8
   2635c:	mov	r4, r0
   26360:	bl	1225c <myhtml_token_attr_by_name@plt>
   26364:	mov	r1, r0
   26368:	mov	r0, r4
   2636c:	pop	{r4, sl, fp, lr}
   26370:	b	26314 <myhtml_token_attr_remove@@Base>

00026374 <myhtml_token_merged_two_token_string@@Base>:
   26374:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26378:	add	fp, sp, #24
   2637c:	sub	sp, sp, #24
   26380:	mov	r8, r3
   26384:	mov	r6, r2
   26388:	mov	r4, r1
   2638c:	mov	r7, r0
   26390:	ldr	r0, [r0, #8]
   26394:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   26398:	ldr	r0, [r7, #8]
   2639c:	mov	r1, r6
   263a0:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   263a4:	mov	r0, #0
   263a8:	str	r0, [r4, #24]
   263ac:	str	r0, [r4, #28]
   263b0:	add	r9, r6, #4
   263b4:	add	r5, r4, #4
   263b8:	ldr	r1, [r7, #52]	; 0x34
   263bc:	ldr	r0, [r4, #20]
   263c0:	cmp	r0, r1
   263c4:	bne	263e0 <myhtml_token_merged_two_token_string@@Base+0x6c>
   263c8:	cmp	r8, #0
   263cc:	bne	26464 <myhtml_token_merged_two_token_string@@Base+0xf0>
   263d0:	mov	r0, r5
   263d4:	mov	r1, r9
   263d8:	bl	115e4 <mycore_string_copy@plt>
   263dc:	b	26464 <myhtml_token_merged_two_token_string@@Base+0xf0>
   263e0:	ldr	r0, [r6, #20]
   263e4:	cmp	r0, r1
   263e8:	bne	2640c <myhtml_token_merged_two_token_string@@Base+0x98>
   263ec:	cmp	r8, #0
   263f0:	movne	r0, r9
   263f4:	movne	r1, r5
   263f8:	moveq	r0, r5
   263fc:	moveq	r1, r9
   26400:	bl	115e4 <mycore_string_copy@plt>
   26404:	mov	r4, r6
   26408:	b	26464 <myhtml_token_merged_two_token_string@@Base+0xf0>
   2640c:	ldr	r0, [r6, #12]
   26410:	ldr	r2, [r4, #12]
   26414:	add	r0, r2, r0
   26418:	add	r3, r0, #2
   2641c:	ldr	r0, [r7, #4]
   26420:	mov	r6, sp
   26424:	mov	r2, r6
   26428:	bl	11a34 <mycore_string_init@plt>
   2642c:	cmp	r8, #0
   26430:	mov	r1, r5
   26434:	movne	r1, r9
   26438:	mov	r0, r6
   2643c:	bl	115e4 <mycore_string_copy@plt>
   26440:	cmp	r8, #0
   26444:	movne	r9, r5
   26448:	mov	r0, r6
   2644c:	mov	r1, r9
   26450:	bl	115e4 <mycore_string_copy@plt>
   26454:	vld1.32	{d16-d17}, [r6]!
   26458:	vst1.32	{d16-d17}, [r5]!
   2645c:	ldr	r0, [r6]
   26460:	str	r0, [r5]
   26464:	mov	r0, r4
   26468:	sub	sp, fp, #24
   2646c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026470 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   26470:	push	{r4, r5, r6, sl, fp, lr}
   26474:	add	fp, sp, #16
   26478:	sub	sp, sp, #24
   2647c:	mov	r4, r1
   26480:	mov	r5, r0
   26484:	ldr	r0, [r0, #8]
   26488:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2648c:	ldr	r0, [r5, #4]
   26490:	ldr	r1, [r5, #52]	; 0x34
   26494:	ldr	r2, [r4, #12]
   26498:	add	r3, r2, #2
   2649c:	mov	r5, sp
   264a0:	mov	r2, r5
   264a4:	bl	11a34 <mycore_string_init@plt>
   264a8:	mov	r6, r4
   264ac:	ldr	r1, [r6, #4]!
   264b0:	ldr	r2, [r4, #12]
   264b4:	mov	r0, r5
   264b8:	bl	117c4 <mycore_string_append_with_replacement_null_characters@plt>
   264bc:	vld1.64	{d16-d17}, [r5]!
   264c0:	vst1.32	{d16-d17}, [r6]
   264c4:	ldr	r0, [r5]
   264c8:	str	r0, [r6, #16]
   264cc:	sub	sp, fp, #16
   264d0:	pop	{r4, r5, r6, sl, fp, pc}

000264d4 <myhtml_tokenizer_set_first_settings@@Base>:
   264d4:	push	{r4, sl, fp, lr}
   264d8:	add	fp, sp, #8
   264dc:	mov	r4, r0
   264e0:	ldr	r0, [r0, #24]
   264e4:	bl	115fc <mythread_queue_get_current_node@plt>
   264e8:	str	r0, [r4, #68]	; 0x44
   264ec:	bl	12130 <mythread_queue_node_clean@plt>
   264f0:	ldr	r0, [r4, #68]	; 0x44
   264f4:	str	r4, [r0]
   264f8:	ldr	r0, [r4, #8]
   264fc:	ldr	r1, [r0, #12]
   26500:	bl	11e0c <myhtml_token_node_create@plt>
   26504:	str	r0, [r4, #64]	; 0x40
   26508:	cmp	r0, #0
   2650c:	beq	26520 <myhtml_tokenizer_set_first_settings@@Base+0x4c>
   26510:	ldr	r0, [r4, #76]	; 0x4c
   26514:	str	r0, [r4, #80]	; 0x50
   26518:	mov	r0, #0
   2651c:	pop	{r4, sl, fp, pc}
   26520:	mov	r0, #2
   26524:	pop	{r4, sl, fp, pc}

00026528 <myhtml_tokenizer_begin@@Base>:
   26528:	b	2652c <myhtml_tokenizer_chunk@@Base>

0002652c <myhtml_tokenizer_chunk@@Base>:
   2652c:	ldr	r3, [r0, #204]	; 0xcc
   26530:	bic	r3, r3, #1
   26534:	cmp	r3, #4
   26538:	bne	26540 <myhtml_tokenizer_chunk@@Base+0x14>
   2653c:	b	266a4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>
   26540:	b	26544 <myhtml_tokenizer_chunk_process@@Base>

00026544 <myhtml_tokenizer_chunk_process@@Base>:
   26544:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26548:	add	fp, sp, #24
   2654c:	sub	sp, sp, #16
   26550:	mov	r4, r2
   26554:	mov	r6, r1
   26558:	mov	r5, r0
   2655c:	ldr	r8, [r0]
   26560:	ldr	r1, [r0, #72]	; 0x48
   26564:	ldr	r0, [r0, #76]	; 0x4c
   26568:	ldr	r9, [r8, #24]
   2656c:	mov	r2, r6
   26570:	mov	r3, r4
   26574:	bl	1150c <mycore_incoming_buffer_add@plt>
   26578:	str	r0, [r5, #76]	; 0x4c
   2657c:	ldrb	r0, [r8, #32]
   26580:	tst	r0, #1
   26584:	beq	26594 <myhtml_tokenizer_chunk_process@@Base+0x50>
   26588:	ldr	r0, [r5, #180]	; 0xb4
   2658c:	orr	r0, r0, #16
   26590:	str	r0, [r5, #180]	; 0xb4
   26594:	ldr	r0, [r5, #180]	; 0xb4
   26598:	tst	r0, #16
   2659c:	bne	265f4 <myhtml_tokenizer_chunk_process@@Base+0xb0>
   265a0:	ldr	r0, [r5, #20]
   265a4:	cmp	r0, #0
   265a8:	bne	265ec <myhtml_tokenizer_chunk_process@@Base+0xa8>
   265ac:	mov	r0, #0
   265b0:	str	r0, [sp, #12]
   265b4:	ldr	r3, [r5, #24]
   265b8:	ldr	r0, [r8]
   265bc:	ldr	r1, [r8, #20]
   265c0:	ldr	r2, [r0, #16]
   265c4:	add	r0, sp, #12
   265c8:	str	r1, [sp]
   265cc:	str	r0, [sp, #4]
   265d0:	add	r0, r8, #8
   265d4:	mov	r1, #2
   265d8:	bl	115f0 <mythread_queue_list_entry_push@plt>
   265dc:	str	r0, [r5, #20]
   265e0:	ldr	r0, [sp, #12]
   265e4:	cmp	r0, #0
   265e8:	bne	2665c <myhtml_tokenizer_chunk_process@@Base+0x118>
   265ec:	mov	r0, r5
   265f0:	bl	11710 <myhtml_tokenizer_post@plt>
   265f4:	ldr	r0, [r5, #68]	; 0x44
   265f8:	cmp	r0, #0
   265fc:	beq	2664c <myhtml_tokenizer_chunk_process@@Base+0x108>
   26600:	cmp	r4, #0
   26604:	beq	26634 <myhtml_tokenizer_chunk_process@@Base+0xf0>
   26608:	mov	r3, #0
   2660c:	ldr	r1, [r5, #64]	; 0x40
   26610:	ldr	r0, [r5, #160]	; 0xa0
   26614:	ldr	r7, [r9, r0, lsl #2]
   26618:	str	r4, [sp]
   2661c:	mov	r0, r5
   26620:	mov	r2, r6
   26624:	blx	r7
   26628:	mov	r3, r0
   2662c:	cmp	r0, r4
   26630:	bcc	2660c <myhtml_tokenizer_chunk_process@@Base+0xc8>
   26634:	ldr	r0, [r5, #192]	; 0xc0
   26638:	add	r0, r0, r4
   2663c:	str	r0, [r5, #192]	; 0xc0
   26640:	mov	r0, #0
   26644:	sub	sp, fp, #24
   26648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2664c:	mov	r0, r5
   26650:	bl	11a1c <myhtml_tokenizer_set_first_settings@plt>
   26654:	cmp	r0, #0
   26658:	beq	26600 <myhtml_tokenizer_chunk_process@@Base+0xbc>
   2665c:	sub	sp, fp, #24
   26660:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026664 <myhtml_tokenizer_post@@Base>:
   26664:	push	{r4, sl, fp, lr}
   26668:	add	fp, sp, #8
   2666c:	mov	r4, r0
   26670:	ldr	r0, [r0]
   26674:	ldr	r0, [r0]
   26678:	cmp	r0, #0
   2667c:	beq	26688 <myhtml_tokenizer_post@@Base+0x24>
   26680:	mov	r1, #0
   26684:	bl	118f0 <mythread_resume@plt>
   26688:	ldr	r0, [r4]
   2668c:	ldr	r0, [r0, #4]
   26690:	cmp	r0, #0
   26694:	popeq	{r4, sl, fp, pc}
   26698:	mov	r1, #0
   2669c:	pop	{r4, sl, fp, lr}
   266a0:	b	118f0 <mythread_resume@plt>

000266a4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   266a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   266a8:	add	fp, sp, #28
   266ac:	sub	sp, sp, #4
   266b0:	mov	r5, r2
   266b4:	mov	r6, r1
   266b8:	mov	r4, r0
   266bc:	ldr	r0, [r0, #200]	; 0xc8
   266c0:	bl	11c44 <myencoding_get_function_by_id@plt>
   266c4:	mov	sl, r0
   266c8:	ldr	r0, [r4, #148]	; 0x94
   266cc:	cmp	r0, #0
   266d0:	beq	267b8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x114>
   266d4:	str	r4, [sp]
   266d8:	ldr	r9, [r4, #148]	; 0x94
   266dc:	mov	r0, r9
   266e0:	bl	11f68 <myhtml_stream_buffer_current_entry@plt>
   266e4:	mov	r4, r0
   266e8:	ldr	r8, [r0, #4]
   266ec:	cmp	r5, #0
   266f0:	beq	26788 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xe4>
   266f4:	add	r7, r9, #12
   266f8:	b	2672c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x88>
   266fc:	mov	r4, r0
   26700:	ldr	r8, [r0, #4]
   26704:	ldr	r0, [r9, #24]
   26708:	ldm	r4, {r1, r2}
   2670c:	add	r1, r1, r2
   26710:	bl	12238 <myencoding_codepoint_to_ascii_utf_8@plt>
   26714:	ldr	r1, [r4, #4]
   26718:	add	r0, r1, r0
   2671c:	str	r0, [r4, #4]
   26720:	add	r6, r6, #1
   26724:	subs	r5, r5, #1
   26728:	beq	26788 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xe4>
   2672c:	ldrb	r0, [r6]
   26730:	mov	r1, r7
   26734:	blx	sl
   26738:	cmp	r0, #0
   2673c:	bne	26720 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x7c>
   26740:	ldr	r3, [r4, #4]
   26744:	ldr	r1, [r4, #8]
   26748:	add	r2, r3, #4
   2674c:	cmp	r2, r1
   26750:	bcc	26704 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x60>
   26754:	ldr	r0, [sp]
   26758:	mov	r1, #0
   2675c:	str	r1, [r0, #200]	; 0xc8
   26760:	sub	r2, r3, r8
   26764:	ldr	r1, [r4]
   26768:	add	r1, r1, r8
   2676c:	bl	11860 <myhtml_tokenizer_chunk_process@plt>
   26770:	mov	r0, r9
   26774:	mov	r1, #16384	; 0x4000
   26778:	bl	11d4c <myhtml_stream_buffer_add_entry@plt>
   2677c:	cmp	r0, #0
   26780:	bne	266fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x58>
   26784:	b	267f0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x14c>
   26788:	ldr	r1, [r4, #4]
   2678c:	mov	r7, #0
   26790:	cmp	r1, r8
   26794:	ldr	r0, [sp]
   26798:	beq	267fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x158>
   2679c:	mov	r7, #0
   267a0:	str	r7, [r0, #200]	; 0xc8
   267a4:	sub	r2, r1, r8
   267a8:	ldr	r1, [r4]
   267ac:	add	r1, r1, r8
   267b0:	bl	11860 <myhtml_tokenizer_chunk_process@plt>
   267b4:	b	267fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x158>
   267b8:	bl	12220 <myhtml_stream_buffer_create@plt>
   267bc:	str	r0, [r4, #148]	; 0x94
   267c0:	cmp	r0, #0
   267c4:	beq	267f8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x154>
   267c8:	mov	r1, #1024	; 0x400
   267cc:	bl	12124 <myhtml_stream_buffer_init@plt>
   267d0:	mov	r7, r0
   267d4:	cmp	r0, #0
   267d8:	bne	267fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x158>
   267dc:	ldr	r0, [r4, #148]	; 0x94
   267e0:	mov	r1, #16384	; 0x4000
   267e4:	bl	11d4c <myhtml_stream_buffer_add_entry@plt>
   267e8:	cmp	r0, #0
   267ec:	bne	266d4 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x30>
   267f0:	movw	r7, #37636	; 0x9304
   267f4:	b	267fc <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x158>
   267f8:	mov	r7, #37632	; 0x9300
   267fc:	mov	r0, r7
   26800:	sub	sp, fp, #28
   26804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00026808 <myhtml_tokenizer_end@@Base>:
   26808:	push	{r4, r5, fp, lr}
   2680c:	add	fp, sp, #8
   26810:	sub	sp, sp, #8
   26814:	mov	r4, r0
   26818:	ldr	r0, [r0, #76]	; 0x4c
   2681c:	cmp	r0, #0
   26820:	beq	2685c <myhtml_tokenizer_end@@Base+0x54>
   26824:	ldr	r3, [r0, #8]
   26828:	ldr	ip, [r4]
   2682c:	ldr	r1, [r4, #64]	; 0x40
   26830:	ldr	r5, [r4, #160]	; 0xa0
   26834:	ldr	r2, [r4, #192]	; 0xc0
   26838:	sub	r2, r2, r3
   2683c:	str	r2, [r4, #192]	; 0xc0
   26840:	ldr	r2, [ip, #24]
   26844:	add	r2, r2, r5, lsl #2
   26848:	ldr	r5, [r2, #280]	; 0x118
   2684c:	ldr	r2, [r0]
   26850:	str	r3, [sp]
   26854:	mov	r0, r4
   26858:	blx	r5
   2685c:	ldr	r2, [r4, #64]	; 0x40
   26860:	mov	r0, #251	; 0xfb
   26864:	str	r0, [r2]
   26868:	mov	r0, r4
   2686c:	mov	r1, #0
   26870:	bl	114b8 <myhtml_queue_add@plt>
   26874:	cmp	r0, #0
   26878:	movne	r0, #2
   2687c:	strne	r0, [r4, #196]	; 0xc4
   26880:	ldr	r0, [r4, #180]	; 0xb4
   26884:	ldr	r5, [r4, #196]	; 0xc4
   26888:	tst	r0, #16
   2688c:	bne	268f8 <myhtml_tokenizer_end@@Base+0xf0>
   26890:	ldr	r0, [r4]
   26894:	ldr	r1, [r4, #20]
   26898:	ldr	r0, [r0]
   2689c:	bl	11d94 <mythread_queue_list_entry_wait_for_done@plt>
   268a0:	ldr	r0, [r4]
   268a4:	ldr	r3, [r4, #20]
   268a8:	ldr	r1, [r0], #8
   268ac:	ldr	r2, [r1, #16]
   268b0:	mov	r1, #0
   268b4:	str	r1, [sp]
   268b8:	mov	r1, #2
   268bc:	bl	110e0 <mythread_queue_list_entry_delete@plt>
   268c0:	str	r0, [r4, #20]
   268c4:	ldr	r0, [r4]
   268c8:	ldr	r0, [r0]
   268cc:	ldr	r0, [r0, #16]
   268d0:	bl	119ec <mythread_queue_list_get_count@plt>
   268d4:	cmp	r0, #0
   268d8:	moveq	r0, r4
   268dc:	bleq	11a10 <myhtml_tokenizer_pause@plt>
   268e0:	cmp	r5, #0
   268e4:	bne	268f8 <myhtml_tokenizer_end@@Base+0xf0>
   268e8:	ldr	r0, [r4]
   268ec:	ldr	r0, [r0]
   268f0:	bl	11944 <mythread_check_status@plt>
   268f4:	mov	r5, r0
   268f8:	ldr	r0, [r4, #180]	; 0xb4
   268fc:	orr	r0, r0, #32
   26900:	str	r0, [r4, #180]	; 0xb4
   26904:	mov	r0, r5
   26908:	sub	sp, fp, #8
   2690c:	pop	{r4, r5, fp, pc}

00026910 <myhtml_tokenizer_pause@@Base>:
   26910:	push	{r4, sl, fp, lr}
   26914:	add	fp, sp, #8
   26918:	mov	r4, r0
   2691c:	ldr	r0, [r0]
   26920:	ldr	r0, [r0]
   26924:	cmp	r0, #0
   26928:	beq	26930 <myhtml_tokenizer_pause@@Base+0x20>
   2692c:	bl	11ecc <mythread_stop@plt>
   26930:	ldr	r0, [r4]
   26934:	ldr	r0, [r0, #4]
   26938:	cmp	r0, #0
   2693c:	popeq	{r4, sl, fp, pc}
   26940:	pop	{r4, sl, fp, lr}
   26944:	b	11ecc <mythread_stop@plt>

00026948 <myhtml_tokenizer_fragment_init@@Base>:
   26948:	push	{r4, r5, r6, sl, fp, lr}
   2694c:	add	fp, sp, #16
   26950:	mov	r6, r2
   26954:	mov	r5, r1
   26958:	mov	r4, r0
   2695c:	bl	11470 <myhtml_tree_node_create@plt>
   26960:	str	r0, [r4, #88]	; 0x58
   26964:	stmib	r0, {r5, r6}
   26968:	cmp	r6, #1
   2696c:	bne	269a0 <myhtml_tokenizer_fragment_init@@Base+0x58>
   26970:	cmp	r5, #93	; 0x5d
   26974:	bne	2698c <myhtml_tokenizer_fragment_init@@Base+0x44>
   26978:	ldr	r0, [r4, #180]	; 0xb4
   2697c:	tst	r0, #1
   26980:	moveq	r0, #0
   26984:	movne	r0, #4
   26988:	b	2699c <myhtml_tokenizer_fragment_init@@Base+0x54>
   2698c:	ldr	r0, [r4, #28]
   26990:	mov	r1, r5
   26994:	bl	11e24 <myhtml_tag_get_by_id@plt>
   26998:	ldr	r0, [r0, #12]
   2699c:	str	r0, [r4, #160]	; 0xa0
   269a0:	ldr	r0, [r4, #8]
   269a4:	ldr	r1, [r0, #12]
   269a8:	bl	11e0c <myhtml_token_node_create@plt>
   269ac:	ldr	r1, [r4, #88]	; 0x58
   269b0:	str	r0, [r1, #32]
   269b4:	cmp	r0, #0
   269b8:	beq	26a04 <myhtml_tokenizer_fragment_init@@Base+0xbc>
   269bc:	bl	11980 <myhtml_token_set_done@plt>
   269c0:	ldr	r0, [r4, #88]	; 0x58
   269c4:	ldr	r0, [r0, #32]
   269c8:	str	r0, [r4, #156]	; 0x9c
   269cc:	mov	r0, r4
   269d0:	mov	r1, #0
   269d4:	mov	r2, #1
   269d8:	bl	110d4 <myhtml_tree_node_insert_root@plt>
   269dc:	mov	r6, r0
   269e0:	cmp	r5, #128	; 0x80
   269e4:	bne	269f4 <myhtml_tokenizer_fragment_init@@Base+0xac>
   269e8:	mov	r0, r4
   269ec:	mov	r1, #17
   269f0:	bl	11440 <myhtml_tree_template_insertion_append@plt>
   269f4:	mov	r0, r4
   269f8:	bl	11b60 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   269fc:	mov	r0, r6
   26a00:	pop	{r4, r5, r6, sl, fp, pc}
   26a04:	mov	r6, #0
   26a08:	mov	r0, r6
   26a0c:	pop	{r4, r5, r6, sl, fp, pc}

00026a10 <myhtml_tokenizer_wait@@Base>:
   26a10:	ldr	r1, [r0]
   26a14:	ldr	r2, [r1]
   26a18:	cmp	r2, #0
   26a1c:	bxeq	lr
   26a20:	ldr	r1, [r0, #20]
   26a24:	mov	r0, r2
   26a28:	b	11d94 <mythread_queue_list_entry_wait_for_done@plt>

00026a2c <myhtml_tokenizer_calc_current_namespace@@Base>:
   26a2c:	push	{r4, r5, fp, lr}
   26a30:	add	fp, sp, #8
   26a34:	mov	r4, r0
   26a38:	ldr	r0, [r0, #184]	; 0xb8
   26a3c:	tst	r0, #1
   26a40:	bne	26ab4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   26a44:	ldr	r0, [r4, #180]	; 0xb4
   26a48:	tst	r0, #16
   26a4c:	bne	26aac <myhtml_tokenizer_calc_current_namespace@@Base+0x80>
   26a50:	mov	r5, r1
   26a54:	ldr	r1, [r1]
   26a58:	cmp	r1, #54	; 0x36
   26a5c:	beq	26a6c <myhtml_tokenizer_calc_current_namespace@@Base+0x40>
   26a60:	cmp	r1, #218	; 0xda
   26a64:	cmpne	r1, #124	; 0x7c
   26a68:	bne	26a74 <myhtml_tokenizer_calc_current_namespace@@Base+0x48>
   26a6c:	str	r5, [r4, #156]	; 0x9c
   26a70:	pop	{r4, r5, fp, pc}
   26a74:	ldr	r0, [r4, #156]	; 0x9c
   26a78:	cmp	r0, #0
   26a7c:	beq	26ab4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   26a80:	ldr	r0, [r5, #48]	; 0x30
   26a84:	tst	r0, #1
   26a88:	bne	26ab4 <myhtml_tokenizer_calc_current_namespace@@Base+0x88>
   26a8c:	ldr	r0, [r4, #28]
   26a90:	bl	11e24 <myhtml_tag_get_by_id@plt>
   26a94:	ldr	r0, [r0, #12]
   26a98:	cmp	r0, #0
   26a9c:	popeq	{r4, r5, fp, pc}
   26aa0:	mov	r0, r4
   26aa4:	mov	r1, r5
   26aa8:	bl	111ac <myhtml_tree_wait_for_last_done_token@plt>
   26aac:	ldr	r0, [r4, #164]	; 0xa4
   26ab0:	str	r0, [r4, #160]	; 0xa0
   26ab4:	pop	{r4, r5, fp, pc}

00026ab8 <myhtml_check_tag_parser@@Base>:
   26ab8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26abc:	add	fp, sp, #24
   26ac0:	sub	sp, sp, #8
   26ac4:	mov	r6, r3
   26ac8:	mov	r8, r2
   26acc:	mov	r4, r1
   26ad0:	mov	r7, r0
   26ad4:	ldr	r1, [r1, #24]
   26ad8:	ldr	r2, [r4, #28]
   26adc:	ldr	r5, [r0, #28]
   26ae0:	cmp	r2, r3
   26ae4:	bls	26afc <myhtml_check_tag_parser@@Base+0x44>
   26ae8:	mov	r0, r7
   26aec:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   26af0:	mov	r1, r0
   26af4:	ldr	r2, [r4, #28]
   26af8:	b	26b08 <myhtml_check_tag_parser@@Base+0x50>
   26afc:	ldr	r0, [r7, #192]	; 0xc0
   26b00:	sub	r0, r1, r0
   26b04:	add	r1, r8, r0
   26b08:	mov	r0, r5
   26b0c:	bl	11f5c <myhtml_tag_get_by_name@plt>
   26b10:	cmp	r0, #0
   26b14:	beq	26b28 <myhtml_check_tag_parser@@Base+0x70>
   26b18:	ldr	r0, [r0]
   26b1c:	str	r0, [r4]
   26b20:	sub	sp, fp, #24
   26b24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26b28:	ldr	r1, [r4, #24]
   26b2c:	ldr	r2, [r4, #28]
   26b30:	cmp	r2, r6
   26b34:	bls	26b54 <myhtml_check_tag_parser@@Base+0x9c>
   26b38:	mov	r0, r7
   26b3c:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   26b40:	mov	r1, r0
   26b44:	ldr	r2, [r4, #28]
   26b48:	mov	r0, #1
   26b4c:	str	r0, [sp]
   26b50:	b	26b68 <myhtml_check_tag_parser@@Base+0xb0>
   26b54:	ldr	r0, [r7, #192]	; 0xc0
   26b58:	mov	r3, #1
   26b5c:	str	r3, [sp]
   26b60:	sub	r0, r1, r0
   26b64:	add	r1, r8, r0
   26b68:	mov	r0, r5
   26b6c:	mov	r3, #0
   26b70:	bl	114a0 <myhtml_tag_add@plt>
   26b74:	mov	r1, r0
   26b78:	str	r0, [r4]
   26b7c:	mov	r0, r5
   26b80:	mov	r2, #1
   26b84:	mov	r3, #1
   26b88:	sub	sp, fp, #24
   26b8c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   26b90:	b	11428 <myhtml_tag_set_category@plt>

00026b94 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   26b94:	push	{r4, sl, fp, lr}
   26b98:	add	fp, sp, #8
   26b9c:	mov	r2, r1
   26ba0:	mov	r4, r0
   26ba4:	ldr	r0, [r1]
   26ba8:	cmp	r0, #0
   26bac:	bne	26bfc <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   26bb0:	ldr	r0, [r2, #24]
   26bb4:	cmp	r0, r3
   26bb8:	bcs	26bfc <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x68>
   26bbc:	ldr	ip, [fp, #8]
   26bc0:	mov	r1, #1
   26bc4:	str	r1, [r2]
   26bc8:	sub	r3, r3, r0
   26bcc:	str	r3, [r2, #36]	; 0x24
   26bd0:	ldr	r1, [r2, #32]
   26bd4:	ldr	lr, [r2, #48]	; 0x30
   26bd8:	str	r0, [r2, #32]
   26bdc:	str	r3, [r2, #28]
   26be0:	orr	r0, lr, ip
   26be4:	str	r0, [r2, #48]	; 0x30
   26be8:	mov	r0, r4
   26bec:	bl	114b8 <myhtml_queue_add@plt>
   26bf0:	mov	r2, #0
   26bf4:	cmp	r0, #0
   26bf8:	ldreq	r2, [r4, #64]	; 0x40
   26bfc:	mov	r0, r2
   26c00:	pop	{r4, sl, fp, pc}

00026c04 <myhtml_tokenizer_set_state@@Base>:
   26c04:	push	{r4, sl, fp, lr}
   26c08:	add	fp, sp, #8
   26c0c:	mov	r4, r0
   26c10:	ldr	r2, [r1, #48]	; 0x30
   26c14:	mov	r0, #0
   26c18:	tst	r2, #1
   26c1c:	bne	26c44 <myhtml_tokenizer_set_state@@Base+0x40>
   26c20:	ldr	r1, [r1]
   26c24:	cmp	r1, #93	; 0x5d
   26c28:	bne	26c38 <myhtml_tokenizer_set_state@@Base+0x34>
   26c2c:	ldr	r2, [r4, #180]	; 0xb4
   26c30:	tst	r2, #1
   26c34:	beq	26c44 <myhtml_tokenizer_set_state@@Base+0x40>
   26c38:	ldr	r0, [r4, #28]
   26c3c:	bl	11e24 <myhtml_tag_get_by_id@plt>
   26c40:	ldr	r0, [r0, #12]
   26c44:	str	r0, [r4, #160]	; 0xa0
   26c48:	pop	{r4, sl, fp, pc}

00026c4c <myhtml_tokenizer_state_rcdata@@Base>:
   26c4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26c50:	add	fp, sp, #24
   26c54:	mov	r7, r3
   26c58:	mov	r6, r2
   26c5c:	mov	r8, r1
   26c60:	mov	r4, r0
   26c64:	ldr	r0, [r0, #60]	; 0x3c
   26c68:	ldr	r5, [fp, #8]
   26c6c:	cmp	r0, #0
   26c70:	bne	26cb8 <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   26c74:	ldr	r0, [r4, #192]	; 0xc0
   26c78:	add	r0, r0, r7
   26c7c:	str	r0, [r8, #24]
   26c80:	ldr	r0, [r4, #68]	; 0x44
   26c84:	bl	111b8 <mythread_queue_get_prev_node@plt>
   26c88:	cmp	r0, #0
   26c8c:	beq	26ca4 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   26c90:	ldr	r0, [r0, #4]
   26c94:	cmp	r0, #0
   26c98:	beq	26ca4 <myhtml_tokenizer_state_rcdata@@Base+0x58>
   26c9c:	ldr	r0, [r0]
   26ca0:	b	26cb4 <myhtml_tokenizer_state_rcdata@@Base+0x68>
   26ca4:	ldr	r0, [r4, #88]	; 0x58
   26ca8:	cmp	r0, #0
   26cac:	beq	26cb8 <myhtml_tokenizer_state_rcdata@@Base+0x6c>
   26cb0:	ldr	r0, [r0, #4]
   26cb4:	str	r0, [r4, #60]	; 0x3c
   26cb8:	cmp	r7, r5
   26cbc:	bcs	26ce4 <myhtml_tokenizer_state_rcdata@@Base+0x98>
   26cc0:	rsb	r1, r5, #0
   26cc4:	rsb	r0, r7, #0
   26cc8:	ldrb	r2, [r6, -r0]
   26ccc:	cmp	r2, #60	; 0x3c
   26cd0:	beq	26cec <myhtml_tokenizer_state_rcdata@@Base+0xa0>
   26cd4:	sub	r0, r0, #1
   26cd8:	cmp	r1, r0
   26cdc:	bne	26cc8 <myhtml_tokenizer_state_rcdata@@Base+0x7c>
   26ce0:	rsb	r7, r0, #0
   26ce4:	mov	r0, r7
   26ce8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26cec:	ldr	r1, [r4, #192]	; 0xc0
   26cf0:	sub	r1, r1, r0
   26cf4:	str	r1, [r8, #32]
   26cf8:	mov	r1, #10
   26cfc:	str	r1, [r4, #160]	; 0xa0
   26d00:	rsb	r7, r0, #1
   26d04:	mov	r0, r7
   26d08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026d0c <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   26d0c:	ldrb	r1, [r2, r3]
   26d10:	mov	r2, #2
   26d14:	cmp	r1, #47	; 0x2f
   26d18:	movweq	r2, #11
   26d1c:	str	r2, [r0, #160]	; 0xa0
   26d20:	addeq	r3, r3, #1
   26d24:	mov	r0, r3
   26d28:	bx	lr

00026d2c <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   26d2c:	ldrb	r1, [r2, r3]
   26d30:	ldr	r2, [pc, #28]	; 26d54 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   26d34:	add	r2, pc, r2
   26d38:	ldrb	r1, [r2, r1]
   26d3c:	mov	r2, #2
   26d40:	cmp	r1, #1
   26d44:	movweq	r2, #12
   26d48:	str	r2, [r0, #160]	; 0xa0
   26d4c:	mov	r0, r3
   26d50:	bx	lr
   26d54:	andeq	r6, sp, r6, ror #31

00026d58 <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   26d58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26d5c:	add	fp, sp, #24
   26d60:	mov	r4, r3
   26d64:	mov	r5, r1
   26d68:	mov	r6, r0
   26d6c:	ldr	r0, [r3]
   26d70:	ldr	r1, [r6, #192]	; 0xc0
   26d74:	add	r0, r1, r0
   26d78:	ldr	r1, [r5, #24]
   26d7c:	sub	r0, r0, r1
   26d80:	str	r0, [r5, #28]
   26d84:	ldr	r3, [r3]
   26d88:	mov	r0, r6
   26d8c:	mov	r1, r5
   26d90:	bl	11ff8 <myhtml_check_tag_parser@plt>
   26d94:	ldr	r0, [r6, #60]	; 0x3c
   26d98:	ldr	r2, [r5]
   26d9c:	ldr	r1, [fp, #8]
   26da0:	cmp	r2, r0
   26da4:	bne	26e4c <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xf4>
   26da8:	ldr	r7, [r5, #24]
   26dac:	sub	r0, r7, #2
   26db0:	cmp	r0, r1
   26db4:	bls	26e18 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xc0>
   26db8:	ldr	r2, [fp, #12]
   26dbc:	ldr	r8, [r5, #32]
   26dc0:	ldr	r3, [r5, #48]	; 0x30
   26dc4:	orr	r2, r3, r2
   26dc8:	str	r2, [r5, #48]	; 0x30
   26dcc:	mov	r2, #1
   26dd0:	str	r2, [r5]
   26dd4:	sub	r0, r0, r1
   26dd8:	str	r1, [r5, #24]
   26ddc:	str	r0, [r5, #28]
   26de0:	str	r1, [r5, #32]
   26de4:	str	r0, [r5, #36]	; 0x24
   26de8:	ldr	r0, [r5, #48]	; 0x30
   26dec:	ldr	r1, [r5, #48]	; 0x30
   26df0:	and	r0, r0, #8
   26df4:	eor	r0, r1, r0
   26df8:	str	r0, [r5, #48]	; 0x30
   26dfc:	ldr	r1, [r4]
   26e00:	mov	r0, r6
   26e04:	mov	r2, r5
   26e08:	bl	114b8 <myhtml_queue_add@plt>
   26e0c:	ldr	r5, [r6, #64]	; 0x40
   26e10:	str	r8, [r5, #32]
   26e14:	str	r7, [r5, #24]
   26e18:	ldr	r0, [r6, #60]	; 0x3c
   26e1c:	str	r0, [r5]
   26e20:	ldr	r0, [r5, #48]	; 0x30
   26e24:	orr	r0, r0, #1
   26e28:	str	r0, [r5, #48]	; 0x30
   26e2c:	ldr	r0, [r6, #192]	; 0xc0
   26e30:	ldr	r1, [r4]
   26e34:	add	r0, r1, r0
   26e38:	ldr	r1, [r5, #24]
   26e3c:	sub	r0, r0, r1
   26e40:	str	r0, [r5, #28]
   26e44:	mov	r0, #1
   26e48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   26e4c:	mov	r0, #0
   26e50:	str	r1, [r5, #24]
   26e54:	str	r0, [r5, #28]
   26e58:	mov	r1, #2
   26e5c:	str	r1, [r6, #160]	; 0xa0
   26e60:	ldr	r1, [r4]
   26e64:	add	r1, r1, #1
   26e68:	str	r1, [r4]
   26e6c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00026e70 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   26e70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26e74:	add	fp, sp, #24
   26e78:	sub	sp, sp, #16
   26e7c:	mov	r5, r1
   26e80:	mov	r9, r0
   26e84:	str	r3, [sp, #12]
   26e88:	ldr	r0, [r0, #192]	; 0xc0
   26e8c:	add	r0, r0, r3
   26e90:	ldr	r8, [r1, #24]
   26e94:	str	r0, [r1, #24]
   26e98:	ldr	r0, [fp, #8]
   26e9c:	ldr	r3, [sp, #12]
   26ea0:	cmp	r3, r0
   26ea4:	bcs	26fb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26ea8:	ldr	r1, [sp, #12]
   26eac:	ldr	r6, [pc, #296]	; 26fdc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x16c>
   26eb0:	add	r6, pc, r6
   26eb4:	ldrb	r4, [r2, r3]
   26eb8:	ldrb	r7, [r6, r4]
   26ebc:	cmp	r7, #2
   26ec0:	cmpne	r4, #47	; 0x2f
   26ec4:	beq	26ef0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x80>
   26ec8:	cmp	r4, #62	; 0x3e
   26ecc:	beq	26f48 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xd8>
   26ed0:	cmp	r7, #1
   26ed4:	bne	26f38 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc8>
   26ed8:	add	r1, r3, #1
   26edc:	cmp	r0, r1
   26ee0:	mov	r3, r1
   26ee4:	bne	26eb4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x44>
   26ee8:	str	r1, [sp, #12]
   26eec:	b	26fb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26ef0:	str	r1, [sp, #12]
   26ef4:	mov	r0, #16
   26ef8:	str	r8, [sp]
   26efc:	str	r0, [sp, #4]
   26f00:	add	r3, sp, #12
   26f04:	mov	r0, r9
   26f08:	mov	r1, r5
   26f0c:	bl	12028 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26f10:	cmp	r0, #0
   26f14:	beq	26fb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26f18:	mov	r0, #0
   26f1c:	str	r0, [r9, #60]	; 0x3c
   26f20:	mov	r0, #33	; 0x21
   26f24:	str	r0, [r9, #160]	; 0xa0
   26f28:	ldr	r0, [sp, #12]
   26f2c:	add	r5, r0, #1
   26f30:	str	r5, [sp, #12]
   26f34:	b	26fc0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26f38:	str	r1, [sp, #12]
   26f3c:	mov	r0, #2
   26f40:	str	r0, [r9, #160]	; 0xa0
   26f44:	b	26fb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26f48:	str	r1, [sp, #12]
   26f4c:	mov	r0, #16
   26f50:	str	r8, [sp]
   26f54:	str	r0, [sp, #4]
   26f58:	add	r3, sp, #12
   26f5c:	mov	r0, r9
   26f60:	mov	r1, r5
   26f64:	bl	12028 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26f68:	cmp	r0, #0
   26f6c:	beq	26fb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x148>
   26f70:	ldr	r0, [sp, #12]
   26f74:	add	r5, r0, #1
   26f78:	str	r5, [sp, #12]
   26f7c:	ldr	r2, [r9, #64]	; 0x40
   26f80:	ldr	r0, [r9, #192]	; 0xc0
   26f84:	add	r0, r0, r5
   26f88:	ldr	r1, [r2, #32]
   26f8c:	sub	r0, r0, r1
   26f90:	str	r0, [r2, #36]	; 0x24
   26f94:	mov	r0, r9
   26f98:	mov	r1, r5
   26f9c:	bl	114b8 <myhtml_queue_add@plt>
   26fa0:	cmp	r0, #0
   26fa4:	beq	26fcc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x15c>
   26fa8:	mov	r0, #69	; 0x45
   26fac:	str	r0, [r9, #160]	; 0xa0
   26fb0:	mov	r5, #0
   26fb4:	b	26fc0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26fb8:	str	r8, [r5, #24]
   26fbc:	ldr	r5, [sp, #12]
   26fc0:	mov	r0, r5
   26fc4:	sub	sp, fp, #24
   26fc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   26fcc:	mov	r0, #0
   26fd0:	str	r0, [r9, #160]	; 0xa0
   26fd4:	str	r0, [r9, #60]	; 0x3c
   26fd8:	b	26fc0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x150>
   26fdc:	andeq	r6, sp, sl, ror #28

00026fe0 <myhtml_tokenizer_state_rawtext@@Base>:
   26fe0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26fe4:	add	fp, sp, #24
   26fe8:	mov	r7, r3
   26fec:	mov	r6, r2
   26ff0:	mov	r8, r1
   26ff4:	mov	r4, r0
   26ff8:	ldr	r0, [r0, #60]	; 0x3c
   26ffc:	ldr	r5, [fp, #8]
   27000:	cmp	r0, #0
   27004:	bne	2704c <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   27008:	ldr	r0, [r4, #192]	; 0xc0
   2700c:	add	r0, r0, r7
   27010:	str	r0, [r8, #24]
   27014:	ldr	r0, [r4, #68]	; 0x44
   27018:	bl	111b8 <mythread_queue_get_prev_node@plt>
   2701c:	cmp	r0, #0
   27020:	beq	27038 <myhtml_tokenizer_state_rawtext@@Base+0x58>
   27024:	ldr	r0, [r0, #4]
   27028:	cmp	r0, #0
   2702c:	beq	27038 <myhtml_tokenizer_state_rawtext@@Base+0x58>
   27030:	ldr	r0, [r0]
   27034:	b	27048 <myhtml_tokenizer_state_rawtext@@Base+0x68>
   27038:	ldr	r0, [r4, #88]	; 0x58
   2703c:	cmp	r0, #0
   27040:	beq	2704c <myhtml_tokenizer_state_rawtext@@Base+0x6c>
   27044:	ldr	r0, [r0, #4]
   27048:	str	r0, [r4, #60]	; 0x3c
   2704c:	cmp	r7, r5
   27050:	bcs	27078 <myhtml_tokenizer_state_rawtext@@Base+0x98>
   27054:	rsb	r1, r5, #0
   27058:	rsb	r0, r7, #0
   2705c:	ldrb	r2, [r6, -r0]
   27060:	cmp	r2, #60	; 0x3c
   27064:	beq	27080 <myhtml_tokenizer_state_rawtext@@Base+0xa0>
   27068:	sub	r0, r0, #1
   2706c:	cmp	r1, r0
   27070:	bne	2705c <myhtml_tokenizer_state_rawtext@@Base+0x7c>
   27074:	rsb	r7, r0, #0
   27078:	mov	r0, r7
   2707c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27080:	ldr	r1, [r4, #192]	; 0xc0
   27084:	sub	r1, r1, r0
   27088:	str	r1, [r8, #32]
   2708c:	mov	r1, #13
   27090:	str	r1, [r4, #160]	; 0xa0
   27094:	rsb	r7, r0, #1
   27098:	mov	r0, r7
   2709c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000270a0 <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   270a0:	ldrb	r1, [r2, r3]
   270a4:	mov	r2, #4
   270a8:	cmp	r1, #47	; 0x2f
   270ac:	movweq	r2, #14
   270b0:	str	r2, [r0, #160]	; 0xa0
   270b4:	addeq	r3, r3, #1
   270b8:	mov	r0, r3
   270bc:	bx	lr

000270c0 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   270c0:	ldrb	r1, [r2, r3]
   270c4:	ldr	r2, [pc, #28]	; 270e8 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   270c8:	add	r2, pc, r2
   270cc:	ldrb	r1, [r2, r1]
   270d0:	mov	r2, #4
   270d4:	cmp	r1, #1
   270d8:	movweq	r2, #15
   270dc:	str	r2, [r0, #160]	; 0xa0
   270e0:	mov	r0, r3
   270e4:	bx	lr
   270e8:	andeq	r6, sp, r2, asr ip

000270ec <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   270ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   270f0:	add	fp, sp, #24
   270f4:	sub	sp, sp, #16
   270f8:	mov	r8, r0
   270fc:	str	r3, [sp, #12]
   27100:	ldr	r0, [r0, #192]	; 0xc0
   27104:	add	r0, r0, r3
   27108:	ldr	ip, [r1, #24]
   2710c:	str	r0, [r1, #24]
   27110:	ldr	r5, [fp, #8]
   27114:	ldr	r0, [sp, #12]
   27118:	cmp	r0, r5
   2711c:	bcs	27168 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x7c>
   27120:	ldr	r4, [sp, #12]
   27124:	ldr	r6, [pc, #296]	; 27254 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x168>
   27128:	add	r6, pc, r6
   2712c:	ldrb	r3, [r2, r0]
   27130:	ldrb	r7, [r6, r3]
   27134:	cmp	r7, #2
   27138:	cmpne	r3, #47	; 0x2f
   2713c:	beq	27174 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x88>
   27140:	cmp	r3, #62	; 0x3e
   27144:	beq	271d0 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xe4>
   27148:	cmp	r7, #1
   2714c:	bne	271b8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xcc>
   27150:	add	r4, r0, #1
   27154:	cmp	r5, r4
   27158:	mov	r0, r4
   2715c:	bne	2712c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x40>
   27160:	str	r4, [sp, #12]
   27164:	mov	r0, r4
   27168:	str	ip, [r1, #24]
   2716c:	sub	sp, fp, #24
   27170:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27174:	str	r4, [sp, #12]
   27178:	mov	r0, #32
   2717c:	str	ip, [sp]
   27180:	str	r0, [sp, #4]
   27184:	add	r3, sp, #12
   27188:	mov	r0, r8
   2718c:	bl	12028 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   27190:	cmp	r0, #0
   27194:	beq	27248 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x15c>
   27198:	mov	r0, #0
   2719c:	str	r0, [r8, #60]	; 0x3c
   271a0:	mov	r0, #33	; 0x21
   271a4:	str	r0, [r8, #160]	; 0xa0
   271a8:	ldr	r0, [sp, #12]
   271ac:	add	r0, r0, #1
   271b0:	str	r0, [sp, #12]
   271b4:	b	27248 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x15c>
   271b8:	str	r4, [sp, #12]
   271bc:	str	ip, [r1, #24]
   271c0:	mov	r1, #4
   271c4:	str	r1, [r8, #160]	; 0xa0
   271c8:	sub	sp, fp, #24
   271cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   271d0:	str	r4, [sp, #12]
   271d4:	mov	r0, #32
   271d8:	str	ip, [sp]
   271dc:	str	r0, [sp, #4]
   271e0:	add	r3, sp, #12
   271e4:	mov	r0, r8
   271e8:	bl	12028 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   271ec:	cmp	r0, #0
   271f0:	beq	27248 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x15c>
   271f4:	ldr	r0, [sp, #12]
   271f8:	add	r1, r0, #1
   271fc:	str	r1, [sp, #12]
   27200:	ldr	r2, [r8, #64]	; 0x40
   27204:	ldr	r0, [r8, #192]	; 0xc0
   27208:	add	r0, r0, r1
   2720c:	ldr	r3, [r2, #32]
   27210:	sub	r0, r0, r3
   27214:	str	r0, [r2, #36]	; 0x24
   27218:	mov	r0, r8
   2721c:	bl	114b8 <myhtml_queue_add@plt>
   27220:	cmp	r0, #0
   27224:	beq	2723c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x150>
   27228:	mov	r0, #69	; 0x45
   2722c:	str	r0, [r8, #160]	; 0xa0
   27230:	mov	r0, #0
   27234:	sub	sp, fp, #24
   27238:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2723c:	mov	r0, #0
   27240:	str	r0, [r8, #160]	; 0xa0
   27244:	str	r0, [r8, #60]	; 0x3c
   27248:	ldr	r0, [sp, #12]
   2724c:	sub	sp, fp, #24
   27250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27254:	strdeq	r6, [sp], -r2

00027258 <myhtml_tokenizer_state_plaintext@@Base>:
   27258:	push	{r4, r5, fp, lr}
   2725c:	add	fp, sp, #8
   27260:	mov	r2, r1
   27264:	mov	r4, r0
   27268:	ldr	r0, [r1, #48]	; 0x30
   2726c:	ldr	r5, [fp, #8]
   27270:	tst	r0, #128	; 0x80
   27274:	bne	27284 <myhtml_tokenizer_state_plaintext@@Base+0x2c>
   27278:	ldr	r0, [r2, #48]	; 0x30
   2727c:	orr	r0, r0, #128	; 0x80
   27280:	str	r0, [r2, #48]	; 0x30
   27284:	ldr	r0, [r2, #48]	; 0x30
   27288:	ldr	r1, [r2, #48]	; 0x30
   2728c:	and	r0, r0, #8
   27290:	eor	r0, r1, r0
   27294:	str	r0, [r2, #48]	; 0x30
   27298:	ldr	r0, [r4, #192]	; 0xc0
   2729c:	mov	r1, #1
   272a0:	str	r1, [r2]
   272a4:	add	r1, r0, r3
   272a8:	add	r0, r0, r5
   272ac:	sub	r0, r0, r1
   272b0:	str	r0, [r2, #36]	; 0x24
   272b4:	str	r1, [r2, #24]
   272b8:	str	r0, [r2, #28]
   272bc:	mov	r0, #0
   272c0:	str	r0, [r4, #160]	; 0xa0
   272c4:	mov	r0, r4
   272c8:	mov	r1, r5
   272cc:	bl	114b8 <myhtml_queue_add@plt>
   272d0:	cmp	r0, #0
   272d4:	movne	r0, #69	; 0x45
   272d8:	strne	r0, [r4, #160]	; 0xa0
   272dc:	movne	r5, #0
   272e0:	mov	r0, r5
   272e4:	pop	{r4, r5, fp, pc}

000272e8 <myhtml_tokenizer_state_cdata_section@@Base>:
   272e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   272ec:	add	fp, sp, #24
   272f0:	mov	r9, r3
   272f4:	mov	r6, r2
   272f8:	mov	r8, r1
   272fc:	mov	r4, r0
   27300:	ldr	r1, [r1, #48]	; 0x30
   27304:	ldr	r0, [fp, #8]
   27308:	tst	r1, #256	; 0x100
   2730c:	bne	2731c <myhtml_tokenizer_state_cdata_section@@Base+0x34>
   27310:	ldr	r1, [r8, #48]	; 0x30
   27314:	orr	r1, r1, #256	; 0x100
   27318:	str	r1, [r8, #48]	; 0x30
   2731c:	cmp	r9, r0
   27320:	bcs	273e8 <myhtml_tokenizer_state_cdata_section@@Base+0x100>
   27324:	rsb	r7, r0, #0
   27328:	sub	r5, r9, #2
   2732c:	b	27340 <myhtml_tokenizer_state_cdata_section@@Base+0x58>
   27330:	add	r5, r5, #1
   27334:	add	r0, r7, r5
   27338:	cmn	r0, #2
   2733c:	beq	273e4 <myhtml_tokenizer_state_cdata_section@@Base+0xfc>
   27340:	add	r0, r6, r5
   27344:	ldrb	r1, [r0, #2]
   27348:	cmp	r1, #62	; 0x3e
   2734c:	bne	27330 <myhtml_tokenizer_state_cdata_section@@Base+0x48>
   27350:	add	r1, r5, #2
   27354:	cmp	r1, #1
   27358:	bhi	27370 <myhtml_tokenizer_state_cdata_section@@Base+0x88>
   2735c:	ldr	r0, [r4, #192]	; 0xc0
   27360:	add	r1, r5, r0
   27364:	mov	r0, r4
   27368:	mov	r2, #2
   2736c:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   27370:	ldrb	r1, [r0]
   27374:	cmp	r1, #93	; 0x5d
   27378:	bne	27330 <myhtml_tokenizer_state_cdata_section@@Base+0x48>
   2737c:	ldrb	r0, [r0, #1]
   27380:	cmp	r0, #93	; 0x5d
   27384:	bne	27330 <myhtml_tokenizer_state_cdata_section@@Base+0x48>
   27388:	ldr	r1, [r8, #24]
   2738c:	ldr	r0, [r4, #192]	; 0xc0
   27390:	sub	r1, r0, r1
   27394:	adds	r1, r1, r5
   27398:	str	r1, [r8, #28]
   2739c:	add	r9, r5, #3
   273a0:	beq	273f0 <myhtml_tokenizer_state_cdata_section@@Base+0x108>
   273a4:	ldr	r1, [r8, #32]
   273a8:	sub	r0, r0, r1
   273ac:	add	r0, r0, r5
   273b0:	add	r0, r0, #3
   273b4:	str	r0, [r8, #36]	; 0x24
   273b8:	mov	r0, r4
   273bc:	mov	r1, r9
   273c0:	mov	r2, r8
   273c4:	bl	114b8 <myhtml_queue_add@plt>
   273c8:	cmp	r0, #0
   273cc:	beq	273fc <myhtml_tokenizer_state_cdata_section@@Base+0x114>
   273d0:	mov	r0, #69	; 0x45
   273d4:	str	r0, [r4, #160]	; 0xa0
   273d8:	mov	r9, #0
   273dc:	mov	r0, r9
   273e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   273e4:	add	r9, r5, #2
   273e8:	mov	r0, r9
   273ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   273f0:	add	r0, r0, r5
   273f4:	add	r0, r0, #3
   273f8:	str	r0, [r8, #24]
   273fc:	mov	r0, #0
   27400:	str	r0, [r4, #160]	; 0xa0
   27404:	mov	r0, r9
   27408:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002740c <myhtml_tokenizer_state_data@@Base>:
   2740c:	push	{r4, r5, fp, lr}
   27410:	add	fp, sp, #8
   27414:	ldr	r4, [fp, #8]
   27418:	cmp	r3, r4
   2741c:	bcs	274ac <myhtml_tokenizer_state_data@@Base+0xa0>
   27420:	rsb	ip, r4, #0
   27424:	rsb	r3, r3, #0
   27428:	ldr	lr, [pc, #164]	; 274d4 <myhtml_tokenizer_state_data@@Base+0xc8>
   2742c:	add	lr, pc, lr
   27430:	b	2744c <myhtml_tokenizer_state_data@@Base+0x40>
   27434:	ldr	r4, [r1, #48]	; 0x30
   27438:	orr	r4, r4, #2048	; 0x800
   2743c:	str	r4, [r1, #48]	; 0x30
   27440:	sub	r3, r3, #1
   27444:	cmp	ip, r3
   27448:	beq	274a8 <myhtml_tokenizer_state_data@@Base+0x9c>
   2744c:	ldrb	r4, [r2, -r3]
   27450:	cmp	r4, #0
   27454:	beq	27464 <myhtml_tokenizer_state_data@@Base+0x58>
   27458:	cmp	r4, #60	; 0x3c
   2745c:	bne	27470 <myhtml_tokenizer_state_data@@Base+0x64>
   27460:	b	274b4 <myhtml_tokenizer_state_data@@Base+0xa8>
   27464:	ldr	r5, [r1, #48]	; 0x30
   27468:	tst	r5, #2048	; 0x800
   2746c:	beq	27434 <myhtml_tokenizer_state_data@@Base+0x28>
   27470:	ldr	r5, [r1, #48]	; 0x30
   27474:	tst	r5, #8
   27478:	beq	27440 <myhtml_tokenizer_state_data@@Base+0x34>
   2747c:	ldrb	r4, [lr, r4]
   27480:	cmp	r4, #2
   27484:	beq	27440 <myhtml_tokenizer_state_data@@Base+0x34>
   27488:	ldr	r4, [r1, #48]	; 0x30
   2748c:	ldr	r5, [r1, #48]	; 0x30
   27490:	and	r4, r4, #8
   27494:	eor	r4, r5, r4
   27498:	str	r4, [r1, #48]	; 0x30
   2749c:	ldr	r4, [r1, #48]	; 0x30
   274a0:	orr	r4, r4, #512	; 0x200
   274a4:	b	2743c <myhtml_tokenizer_state_data@@Base+0x30>
   274a8:	rsb	r3, r3, #0
   274ac:	mov	r0, r3
   274b0:	pop	{r4, r5, fp, pc}
   274b4:	ldr	r2, [r0, #192]	; 0xc0
   274b8:	sub	r2, r2, r3
   274bc:	str	r2, [r1, #32]
   274c0:	mov	r1, #7
   274c4:	str	r1, [r0, #160]	; 0xa0
   274c8:	rsb	r3, r3, #1
   274cc:	mov	r0, r3
   274d0:	pop	{r4, r5, fp, pc}
   274d4:	andeq	r6, sp, lr, ror #17

000274d8 <myhtml_tokenizer_state_tag_open@@Base>:
   274d8:	push	{r4, r5, fp, lr}
   274dc:	add	fp, sp, #8
   274e0:	sub	sp, sp, #8
   274e4:	mov	r4, r3
   274e8:	mov	r5, r0
   274ec:	ldrb	r0, [r2, r3]
   274f0:	ldr	r2, [pc, #272]	; 27608 <myhtml_tokenizer_state_tag_open@@Base+0x130>
   274f4:	add	r2, pc, r2
   274f8:	ldrb	r2, [r2, r0]
   274fc:	cmp	r2, #1
   27500:	bne	2753c <myhtml_tokenizer_state_tag_open@@Base+0x64>
   27504:	ldr	r0, [r5, #192]	; 0xc0
   27508:	mov	r2, #512	; 0x200
   2750c:	str	r2, [sp]
   27510:	add	r0, r4, r0
   27514:	sub	r3, r0, #1
   27518:	mov	r0, r5
   2751c:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27520:	cmp	r0, #0
   27524:	beq	275c8 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   27528:	ldr	r1, [r5, #192]	; 0xc0
   2752c:	add	r1, r1, r4
   27530:	str	r1, [r0, #24]
   27534:	mov	r0, #9
   27538:	b	275f8 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   2753c:	cmp	r0, #63	; 0x3f
   27540:	beq	27590 <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   27544:	cmp	r0, #47	; 0x2f
   27548:	beq	275d4 <myhtml_tokenizer_state_tag_open@@Base+0xfc>
   2754c:	cmp	r0, #33	; 0x21
   27550:	bne	275e0 <myhtml_tokenizer_state_tag_open@@Base+0x108>
   27554:	ldr	r0, [r5, #192]	; 0xc0
   27558:	mov	r2, #512	; 0x200
   2755c:	str	r2, [sp]
   27560:	add	r0, r4, r0
   27564:	sub	r3, r0, #1
   27568:	mov	r0, r5
   2756c:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27570:	cmp	r0, #0
   27574:	beq	275c8 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   27578:	ldr	r1, [r5, #192]	; 0xc0
   2757c:	add	r4, r4, #1
   27580:	add	r1, r1, r4
   27584:	str	r1, [r0, #24]
   27588:	mov	r0, #44	; 0x2c
   2758c:	b	275f8 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   27590:	ldr	r0, [r5, #192]	; 0xc0
   27594:	mov	r2, #512	; 0x200
   27598:	str	r2, [sp]
   2759c:	add	r0, r4, r0
   275a0:	sub	r3, r0, #1
   275a4:	mov	r0, r5
   275a8:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   275ac:	cmp	r0, #0
   275b0:	beq	275c8 <myhtml_tokenizer_state_tag_open@@Base+0xf0>
   275b4:	ldr	r1, [r5, #192]	; 0xc0
   275b8:	add	r1, r1, r4
   275bc:	str	r1, [r0, #24]
   275c0:	mov	r0, #43	; 0x2b
   275c4:	b	275f8 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   275c8:	mov	r4, #0
   275cc:	mov	r0, #69	; 0x45
   275d0:	b	275f8 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   275d4:	add	r4, r4, #1
   275d8:	mov	r0, #8
   275dc:	b	275f8 <myhtml_tokenizer_state_tag_open@@Base+0x120>
   275e0:	ldr	r0, [r1, #48]	; 0x30
   275e4:	ldr	r2, [r1, #48]	; 0x30
   275e8:	and	r0, r0, #8
   275ec:	eor	r0, r2, r0
   275f0:	str	r0, [r1, #48]	; 0x30
   275f4:	mov	r0, #0
   275f8:	str	r0, [r5, #160]	; 0xa0
   275fc:	mov	r0, r4
   27600:	sub	sp, fp, #8
   27604:	pop	{r4, r5, fp, pc}
   27608:	andeq	r6, sp, r6, lsr #16

0002760c <myhtml_tokenizer_state_end_tag_open@@Base>:
   2760c:	push	{r4, r5, fp, lr}
   27610:	add	fp, sp, #8
   27614:	sub	sp, sp, #8
   27618:	mov	r4, r3
   2761c:	mov	r5, r0
   27620:	ldrb	r0, [r2, r3]
   27624:	ldr	r2, [pc, #176]	; 276dc <myhtml_tokenizer_state_end_tag_open@@Base+0xd0>
   27628:	add	r2, pc, r2
   2762c:	ldrb	r2, [r2, r0]
   27630:	cmp	r2, #1
   27634:	bne	27678 <myhtml_tokenizer_state_end_tag_open@@Base+0x6c>
   27638:	ldr	r0, [r5, #192]	; 0xc0
   2763c:	mov	r2, #512	; 0x200
   27640:	str	r2, [sp]
   27644:	add	r0, r4, r0
   27648:	sub	r3, r0, #2
   2764c:	mov	r0, r5
   27650:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   27654:	cmp	r0, #0
   27658:	beq	276c4 <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   2765c:	ldr	r1, [r5, #192]	; 0xc0
   27660:	mov	r2, #1
   27664:	str	r2, [r0, #48]	; 0x30
   27668:	add	r1, r1, r4
   2766c:	str	r1, [r0, #24]
   27670:	mov	r0, #9
   27674:	b	276cc <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   27678:	cmp	r0, #62	; 0x3e
   2767c:	bne	2768c <myhtml_tokenizer_state_end_tag_open@@Base+0x80>
   27680:	add	r4, r4, #1
   27684:	mov	r0, #0
   27688:	b	276cc <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   2768c:	ldr	r0, [r5, #192]	; 0xc0
   27690:	mov	r2, #512	; 0x200
   27694:	str	r2, [sp]
   27698:	add	r0, r4, r0
   2769c:	sub	r3, r0, #2
   276a0:	mov	r0, r5
   276a4:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   276a8:	cmp	r0, #0
   276ac:	beq	276c4 <myhtml_tokenizer_state_end_tag_open@@Base+0xb8>
   276b0:	ldr	r1, [r5, #192]	; 0xc0
   276b4:	add	r1, r1, r4
   276b8:	str	r1, [r0, #24]
   276bc:	mov	r0, #43	; 0x2b
   276c0:	b	276cc <myhtml_tokenizer_state_end_tag_open@@Base+0xc0>
   276c4:	mov	r4, #0
   276c8:	mov	r0, #69	; 0x45
   276cc:	str	r0, [r5, #160]	; 0xa0
   276d0:	mov	r0, r4
   276d4:	sub	sp, fp, #8
   276d8:	pop	{r4, r5, fp, pc}
   276dc:	strdeq	r6, [sp], -r2

000276e0 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   276e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   276e4:	add	fp, sp, #24
   276e8:	mov	r5, r3
   276ec:	mov	r4, r1
   276f0:	mov	r6, r0
   276f4:	ldr	r0, [r0, #192]	; 0xc0
   276f8:	ldr	r7, [fp, #8]
   276fc:	add	r0, r0, r7
   27700:	ldr	r1, [r1, #24]
   27704:	add	r2, r1, #2
   27708:	cmp	r2, r0
   2770c:	bhi	27774 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x94>
   27710:	mov	r0, r6
   27714:	mov	r2, #2
   27718:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2771c:	ldrb	r1, [r0]
   27720:	cmp	r1, #45	; 0x2d
   27724:	bne	2775c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   27728:	ldrb	r0, [r0, #1]
   2772c:	cmp	r0, #45	; 0x2d
   27730:	bne	2775c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   27734:	mov	r0, #45	; 0x2d
   27738:	str	r0, [r6, #160]	; 0xa0
   2773c:	ldr	r0, [r6, #192]	; 0xc0
   27740:	mov	r1, #0
   27744:	add	r5, r5, #2
   27748:	add	r0, r0, r5
   2774c:	str	r0, [r4, #24]
   27750:	str	r1, [r4, #28]
   27754:	mov	r0, r5
   27758:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2775c:	ldr	r0, [r6, #192]	; 0xc0
   27760:	add	r0, r0, r7
   27764:	ldr	r1, [r4, #24]
   27768:	add	r2, r1, #7
   2776c:	cmp	r2, r0
   27770:	bls	27784 <myhtml_tokenizer_state_markup_declaration_open@@Base+0xa4>
   27774:	ldr	r0, [r6, #76]	; 0x4c
   27778:	str	r5, [r0, #4]
   2777c:	mov	r0, r7
   27780:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27784:	mov	r8, #7
   27788:	mov	r0, r6
   2778c:	mov	r2, #7
   27790:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   27794:	mov	r7, r0
   27798:	ldr	r1, [pc, #256]	; 278a0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c0>
   2779c:	add	r1, pc, r1
   277a0:	mov	r2, #7
   277a4:	bl	11704 <mycore_strncasecmp@plt>
   277a8:	cmp	r0, #0
   277ac:	beq	277e4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x104>
   277b0:	ldr	r1, [pc, #236]	; 278a4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1c4>
   277b4:	add	r1, pc, r1
   277b8:	mov	r0, r7
   277bc:	mov	r2, #7
   277c0:	bl	12328 <strncmp@plt>
   277c4:	cmp	r0, #0
   277c8:	beq	27814 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x134>
   277cc:	mov	r0, #0
   277d0:	str	r0, [r4, #28]
   277d4:	mov	r0, #43	; 0x2b
   277d8:	str	r0, [r6, #160]	; 0xa0
   277dc:	mov	r0, r5
   277e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   277e4:	mov	r0, #51	; 0x33
   277e8:	str	r0, [r6, #160]	; 0xa0
   277ec:	ldr	r0, [r6, #76]	; 0x4c
   277f0:	ldr	r0, [r0, #12]
   277f4:	str	r8, [r4, #28]
   277f8:	mov	r1, #3
   277fc:	str	r1, [r4]
   27800:	ldr	r1, [r4, #24]
   27804:	sub	r0, r1, r0
   27808:	add	r5, r0, #7
   2780c:	mov	r0, r5
   27810:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   27814:	ldr	r0, [r6, #68]	; 0x44
   27818:	ldr	r0, [r0, #8]
   2781c:	cmp	r0, #0
   27820:	beq	277cc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   27824:	ldr	r1, [r0, #4]
   27828:	cmp	r1, #0
   2782c:	beq	277cc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   27830:	mov	r0, r6
   27834:	bl	111ac <myhtml_tree_wait_for_last_done_token@plt>
   27838:	mov	r0, r6
   2783c:	bl	12100 <myhtml_tree_adjusted_current_node@plt>
   27840:	cmp	r0, #0
   27844:	beq	277cc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   27848:	ldr	r0, [r0, #8]
   2784c:	cmp	r0, #1
   27850:	beq	277cc <myhtml_tokenizer_state_markup_declaration_open@@Base+0xec>
   27854:	mov	r0, #67	; 0x43
   27858:	str	r0, [r6, #160]	; 0xa0
   2785c:	ldr	r0, [r6, #76]	; 0x4c
   27860:	ldr	r0, [r0, #12]
   27864:	mov	r1, #1
   27868:	str	r1, [r4]
   2786c:	mov	r1, #0
   27870:	str	r1, [r4, #28]
   27874:	ldr	r1, [r4, #24]
   27878:	add	r1, r1, #7
   2787c:	str	r1, [r4, #24]
   27880:	ldr	r2, [r4, #48]	; 0x30
   27884:	ldr	r3, [r4, #48]	; 0x30
   27888:	and	r2, r2, #8
   2788c:	eor	r2, r3, r2
   27890:	str	r2, [r4, #48]	; 0x30
   27894:	sub	r5, r1, r0
   27898:	mov	r0, r5
   2789c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   278a0:	andeq	r5, sp, r8, lsr #12
   278a4:	andeq	r6, sp, lr, asr r5

000278a8 <myhtml_tokenizer_state_tag_name@@Base>:
   278a8:	push	{r4, r5, r6, r7, fp, lr}
   278ac:	add	fp, sp, #16
   278b0:	mov	r4, r3
   278b4:	mov	r7, r0
   278b8:	ldr	r0, [fp, #8]
   278bc:	cmp	r3, r0
   278c0:	bcs	278fc <myhtml_tokenizer_state_tag_name@@Base+0x54>
   278c4:	mov	r6, r1
   278c8:	ldr	r1, [pc, #272]	; 279e0 <myhtml_tokenizer_state_tag_name@@Base+0x138>
   278cc:	add	r1, pc, r1
   278d0:	ldrb	r3, [r2, r4]
   278d4:	ldrb	r5, [r1, r3]
   278d8:	cmp	r5, #2
   278dc:	beq	27904 <myhtml_tokenizer_state_tag_name@@Base+0x5c>
   278e0:	cmp	r3, #62	; 0x3e
   278e4:	beq	27930 <myhtml_tokenizer_state_tag_name@@Base+0x88>
   278e8:	cmp	r3, #47	; 0x2f
   278ec:	beq	279a8 <myhtml_tokenizer_state_tag_name@@Base+0x100>
   278f0:	add	r4, r4, #1
   278f4:	cmp	r0, r4
   278f8:	bne	278d0 <myhtml_tokenizer_state_tag_name@@Base+0x28>
   278fc:	mov	r0, r4
   27900:	pop	{r4, r5, r6, r7, fp, pc}
   27904:	ldr	r0, [r6, #24]
   27908:	ldr	r1, [r7, #192]	; 0xc0
   2790c:	sub	r0, r1, r0
   27910:	add	r0, r0, r4
   27914:	str	r0, [r6, #28]
   27918:	mov	r0, r7
   2791c:	mov	r1, r6
   27920:	mov	r3, r4
   27924:	bl	11ff8 <myhtml_check_tag_parser@plt>
   27928:	mov	r0, #33	; 0x21
   2792c:	b	279d0 <myhtml_tokenizer_state_tag_name@@Base+0x128>
   27930:	ldr	r0, [r6, #24]
   27934:	ldr	r1, [r7, #192]	; 0xc0
   27938:	sub	r0, r1, r0
   2793c:	add	r0, r0, r4
   27940:	str	r0, [r6, #28]
   27944:	mov	r0, r7
   27948:	mov	r1, r6
   2794c:	mov	r3, r4
   27950:	bl	11ff8 <myhtml_check_tag_parser@plt>
   27954:	mov	r0, r7
   27958:	mov	r1, r6
   2795c:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   27960:	ldr	r0, [r6, #32]
   27964:	ldr	r1, [r7, #192]	; 0xc0
   27968:	sub	r0, r1, r0
   2796c:	add	r0, r0, r4
   27970:	add	r0, r0, #1
   27974:	str	r0, [r6, #36]	; 0x24
   27978:	add	r4, r4, #1
   2797c:	mov	r0, r7
   27980:	mov	r1, r4
   27984:	mov	r2, r6
   27988:	bl	114b8 <myhtml_queue_add@plt>
   2798c:	cmp	r0, #0
   27990:	beq	278fc <myhtml_tokenizer_state_tag_name@@Base+0x54>
   27994:	mov	r0, #69	; 0x45
   27998:	str	r0, [r7, #160]	; 0xa0
   2799c:	mov	r4, #0
   279a0:	mov	r0, r4
   279a4:	pop	{r4, r5, r6, r7, fp, pc}
   279a8:	ldr	r0, [r6, #24]
   279ac:	ldr	r1, [r7, #192]	; 0xc0
   279b0:	sub	r0, r1, r0
   279b4:	add	r0, r0, r4
   279b8:	str	r0, [r6, #28]
   279bc:	mov	r0, r7
   279c0:	mov	r1, r6
   279c4:	mov	r3, r4
   279c8:	bl	11ff8 <myhtml_check_tag_parser@plt>
   279cc:	mov	r0, #42	; 0x2a
   279d0:	str	r0, [r7, #160]	; 0xa0
   279d4:	add	r4, r4, #1
   279d8:	mov	r0, r4
   279dc:	pop	{r4, r5, r6, r7, fp, pc}
   279e0:	andeq	r6, sp, lr, asr #8

000279e4 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   279e4:	push	{r4, r5, r6, sl, fp, lr}
   279e8:	add	fp, sp, #16
   279ec:	mov	r4, r3
   279f0:	mov	r6, r1
   279f4:	mov	r5, r0
   279f8:	ldrb	r1, [r2, r3]
   279fc:	mov	r0, #33	; 0x21
   27a00:	cmp	r1, #62	; 0x3e
   27a04:	bne	27a58 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x74>
   27a08:	ldr	r0, [r6, #48]	; 0x30
   27a0c:	orr	r0, r0, #2
   27a10:	str	r0, [r6, #48]	; 0x30
   27a14:	mov	r0, r5
   27a18:	mov	r1, r6
   27a1c:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   27a20:	ldr	r0, [r5, #192]	; 0xc0
   27a24:	add	r4, r4, #1
   27a28:	add	r0, r0, r4
   27a2c:	ldr	r1, [r6, #32]
   27a30:	sub	r0, r0, r1
   27a34:	str	r0, [r6, #36]	; 0x24
   27a38:	mov	r0, r5
   27a3c:	mov	r1, r4
   27a40:	mov	r2, r6
   27a44:	bl	114b8 <myhtml_queue_add@plt>
   27a48:	cmp	r0, #0
   27a4c:	beq	27a5c <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x78>
   27a50:	mov	r4, #0
   27a54:	mov	r0, #69	; 0x45
   27a58:	str	r0, [r5, #160]	; 0xa0
   27a5c:	mov	r0, r4
   27a60:	pop	{r4, r5, r6, sl, fp, pc}

00027a64 <myhtml_tokenizer_state_before_attribute_name@@Base>:
   27a64:	push	{r4, r5, r6, r7, fp, lr}
   27a68:	add	fp, sp, #16
   27a6c:	mov	r4, r3
   27a70:	mov	r6, r1
   27a74:	mov	r7, r0
   27a78:	ldrb	r0, [r2, r3]
   27a7c:	sub	r3, r0, #9
   27a80:	ldr	r0, [fp, #8]
   27a84:	cmp	r3, #23
   27a88:	bhi	27acc <myhtml_tokenizer_state_before_attribute_name@@Base+0x68>
   27a8c:	mov	r5, #1
   27a90:	movw	r1, #27
   27a94:	movt	r1, #128	; 0x80
   27a98:	tst	r1, r5, lsl r3
   27a9c:	beq	27acc <myhtml_tokenizer_state_before_attribute_name@@Base+0x68>
   27aa0:	cmp	r4, r0
   27aa4:	bcs	27acc <myhtml_tokenizer_state_before_attribute_name@@Base+0x68>
   27aa8:	mov	r3, #1
   27aac:	ldrb	r5, [r2, r4]
   27ab0:	sub	r5, r5, #9
   27ab4:	cmp	r5, #23
   27ab8:	bhi	27acc <myhtml_tokenizer_state_before_attribute_name@@Base+0x68>
   27abc:	tst	r1, r3, lsl r5
   27ac0:	addne	r4, r4, #1
   27ac4:	cmpne	r0, r4
   27ac8:	bne	27aac <myhtml_tokenizer_state_before_attribute_name@@Base+0x48>
   27acc:	cmp	r4, r0
   27ad0:	bcs	27bcc <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   27ad4:	ldrb	r0, [r2, r4]
   27ad8:	cmp	r0, #47	; 0x2f
   27adc:	beq	27b38 <myhtml_tokenizer_state_before_attribute_name@@Base+0xd4>
   27ae0:	cmp	r0, #62	; 0x3e
   27ae4:	bne	27b50 <myhtml_tokenizer_state_before_attribute_name@@Base+0xec>
   27ae8:	mov	r0, r7
   27aec:	mov	r1, r6
   27af0:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   27af4:	ldr	r0, [r7, #192]	; 0xc0
   27af8:	add	r4, r4, #1
   27afc:	add	r0, r0, r4
   27b00:	ldr	r1, [r6, #32]
   27b04:	sub	r0, r0, r1
   27b08:	str	r0, [r6, #36]	; 0x24
   27b0c:	mov	r0, r7
   27b10:	mov	r1, r4
   27b14:	mov	r2, r6
   27b18:	bl	114b8 <myhtml_queue_add@plt>
   27b1c:	cmp	r0, #0
   27b20:	beq	27bcc <myhtml_tokenizer_state_before_attribute_name@@Base+0x168>
   27b24:	mov	r0, #69	; 0x45
   27b28:	str	r0, [r7, #160]	; 0xa0
   27b2c:	mov	r4, #0
   27b30:	mov	r0, r4
   27b34:	pop	{r4, r5, r6, r7, fp, pc}
   27b38:	ldr	r0, [r6, #48]	; 0x30
   27b3c:	orr	r0, r0, #2
   27b40:	str	r0, [r6, #48]	; 0x30
   27b44:	add	r4, r4, #1
   27b48:	mov	r0, r4
   27b4c:	pop	{r4, r5, r6, r7, fp, pc}
   27b50:	ldr	r0, [r7, #56]	; 0x38
   27b54:	ldr	r1, [r6, #40]	; 0x28
   27b58:	cmp	r1, #0
   27b5c:	beq	27b84 <myhtml_tokenizer_state_before_attribute_name@@Base+0x120>
   27b60:	ldr	r1, [r6, #44]	; 0x2c
   27b64:	str	r0, [r1]
   27b68:	str	r1, [r0, #4]
   27b6c:	str	r0, [r6, #44]	; 0x2c
   27b70:	mov	r1, #0
   27b74:	str	r1, [r0]
   27b78:	ldr	r0, [r6, #44]	; 0x2c
   27b7c:	str	r0, [r7, #56]	; 0x38
   27b80:	b	27b98 <myhtml_tokenizer_state_before_attribute_name@@Base+0x134>
   27b84:	str	r0, [r6, #40]	; 0x28
   27b88:	str	r0, [r6, #44]	; 0x2c
   27b8c:	mov	r1, #0
   27b90:	str	r1, [r0]
   27b94:	str	r1, [r0, #4]
   27b98:	ldr	r0, [r7, #56]	; 0x38
   27b9c:	ldr	r1, [r7, #192]	; 0xc0
   27ba0:	mov	r3, #0
   27ba4:	add	r1, r1, r4
   27ba8:	str	r1, [r0, #48]	; 0x30
   27bac:	str	r3, [r0, #52]	; 0x34
   27bb0:	str	r3, [r0, #56]	; 0x38
   27bb4:	str	r3, [r0, #60]	; 0x3c
   27bb8:	ldrb	r0, [r2, r4]
   27bbc:	mov	r1, #34	; 0x22
   27bc0:	str	r1, [r7, #160]	; 0xa0
   27bc4:	cmp	r0, #61	; 0x3d
   27bc8:	addeq	r4, r4, #1
   27bcc:	mov	r0, r4
   27bd0:	pop	{r4, r5, r6, r7, fp, pc}

00027bd4 <myhtml_tokenizer_state_attribute_name@@Base>:
   27bd4:	push	{r4, r5, r6, sl, fp, lr}
   27bd8:	add	fp, sp, #16
   27bdc:	mov	r4, r3
   27be0:	mov	r5, r0
   27be4:	ldr	r0, [fp, #8]
   27be8:	cmp	r3, r0
   27bec:	bcs	27dfc <myhtml_tokenizer_state_attribute_name@@Base+0x228>
   27bf0:	mov	r6, r1
   27bf4:	b	27c04 <myhtml_tokenizer_state_attribute_name@@Base+0x30>
   27bf8:	add	r4, r4, #1
   27bfc:	cmp	r0, r4
   27c00:	beq	27dfc <myhtml_tokenizer_state_attribute_name@@Base+0x228>
   27c04:	ldrb	r1, [r2, r4]
   27c08:	sub	r1, r1, #9
   27c0c:	cmp	r1, #53	; 0x35
   27c10:	bhi	27bf8 <myhtml_tokenizer_state_attribute_name@@Base+0x24>
   27c14:	add	r3, pc, #4
   27c18:	ldr	r1, [r3, r1, lsl #2]
   27c1c:	add	pc, r3, r1
   27c20:	ldrdeq	r0, [r0], -r8
   27c24:	ldrdeq	r0, [r0], -r8
   27c28:			; <UNDEFINED> instruction: 0xffffffd8
   27c2c:	ldrdeq	r0, [r0], -r8
   27c30:	ldrdeq	r0, [r0], -r8
   27c34:			; <UNDEFINED> instruction: 0xffffffd8
   27c38:			; <UNDEFINED> instruction: 0xffffffd8
   27c3c:			; <UNDEFINED> instruction: 0xffffffd8
   27c40:			; <UNDEFINED> instruction: 0xffffffd8
   27c44:			; <UNDEFINED> instruction: 0xffffffd8
   27c48:			; <UNDEFINED> instruction: 0xffffffd8
   27c4c:			; <UNDEFINED> instruction: 0xffffffd8
   27c50:			; <UNDEFINED> instruction: 0xffffffd8
   27c54:			; <UNDEFINED> instruction: 0xffffffd8
   27c58:			; <UNDEFINED> instruction: 0xffffffd8
   27c5c:			; <UNDEFINED> instruction: 0xffffffd8
   27c60:			; <UNDEFINED> instruction: 0xffffffd8
   27c64:			; <UNDEFINED> instruction: 0xffffffd8
   27c68:			; <UNDEFINED> instruction: 0xffffffd8
   27c6c:			; <UNDEFINED> instruction: 0xffffffd8
   27c70:			; <UNDEFINED> instruction: 0xffffffd8
   27c74:			; <UNDEFINED> instruction: 0xffffffd8
   27c78:			; <UNDEFINED> instruction: 0xffffffd8
   27c7c:	ldrdeq	r0, [r0], -r8
   27c80:			; <UNDEFINED> instruction: 0xffffffd8
   27c84:			; <UNDEFINED> instruction: 0xffffffd8
   27c88:			; <UNDEFINED> instruction: 0xffffffd8
   27c8c:			; <UNDEFINED> instruction: 0xffffffd8
   27c90:			; <UNDEFINED> instruction: 0xffffffd8
   27c94:			; <UNDEFINED> instruction: 0xffffffd8
   27c98:			; <UNDEFINED> instruction: 0xffffffd8
   27c9c:			; <UNDEFINED> instruction: 0xffffffd8
   27ca0:			; <UNDEFINED> instruction: 0xffffffd8
   27ca4:			; <UNDEFINED> instruction: 0xffffffd8
   27ca8:			; <UNDEFINED> instruction: 0xffffffd8
   27cac:			; <UNDEFINED> instruction: 0xffffffd8
   27cb0:			; <UNDEFINED> instruction: 0xffffffd8
   27cb4:			; <UNDEFINED> instruction: 0xffffffd8
   27cb8:	andeq	r0, r0, r4, lsl #2
   27cbc:			; <UNDEFINED> instruction: 0xffffffd8
   27cc0:			; <UNDEFINED> instruction: 0xffffffd8
   27cc4:			; <UNDEFINED> instruction: 0xffffffd8
   27cc8:			; <UNDEFINED> instruction: 0xffffffd8
   27ccc:			; <UNDEFINED> instruction: 0xffffffd8
   27cd0:			; <UNDEFINED> instruction: 0xffffffd8
   27cd4:			; <UNDEFINED> instruction: 0xffffffd8
   27cd8:			; <UNDEFINED> instruction: 0xffffffd8
   27cdc:			; <UNDEFINED> instruction: 0xffffffd8
   27ce0:			; <UNDEFINED> instruction: 0xffffffd8
   27ce4:			; <UNDEFINED> instruction: 0xffffffd8
   27ce8:			; <UNDEFINED> instruction: 0xffffffd8
   27cec:			; <UNDEFINED> instruction: 0xffffffd8
   27cf0:	andeq	r0, r0, ip, asr #2
   27cf4:	andeq	r0, r0, ip, ror #2
   27cf8:	ldr	r0, [r5, #56]	; 0x38
   27cfc:	ldr	r1, [r5, #192]	; 0xc0
   27d00:	ldr	r2, [r0, #48]	; 0x30
   27d04:	sub	r1, r1, r2
   27d08:	add	r1, r1, r4
   27d0c:	str	r1, [r0, #52]	; 0x34
   27d10:	mov	r0, #35	; 0x23
   27d14:	str	r0, [r5, #160]	; 0xa0
   27d18:	add	r4, r4, #1
   27d1c:	mov	r0, r4
   27d20:	pop	{r4, r5, r6, sl, fp, pc}
   27d24:	ldr	r0, [r5, #56]	; 0x38
   27d28:	ldr	r1, [r5, #192]	; 0xc0
   27d2c:	ldr	r2, [r0, #48]	; 0x30
   27d30:	sub	r1, r1, r2
   27d34:	add	r1, r1, r4
   27d38:	str	r1, [r0, #52]	; 0x34
   27d3c:	ldr	r0, [r6, #48]	; 0x30
   27d40:	orr	r0, r0, #2
   27d44:	str	r0, [r6, #48]	; 0x30
   27d48:	mov	r0, #33	; 0x21
   27d4c:	str	r0, [r5, #160]	; 0xa0
   27d50:	ldr	r0, [r5, #8]
   27d54:	ldr	r1, [r0, #16]
   27d58:	bl	11d1c <myhtml_token_attr_create@plt>
   27d5c:	str	r0, [r5, #56]	; 0x38
   27d60:	cmp	r0, #0
   27d64:	bne	27d18 <myhtml_tokenizer_state_attribute_name@@Base+0x144>
   27d68:	b	27e04 <myhtml_tokenizer_state_attribute_name@@Base+0x230>
   27d6c:	ldr	r0, [r5, #56]	; 0x38
   27d70:	ldr	r1, [r5, #192]	; 0xc0
   27d74:	ldr	r2, [r0, #48]	; 0x30
   27d78:	sub	r1, r1, r2
   27d7c:	add	r1, r1, r4
   27d80:	str	r1, [r0, #52]	; 0x34
   27d84:	mov	r0, #36	; 0x24
   27d88:	b	27d14 <myhtml_tokenizer_state_attribute_name@@Base+0x140>
   27d8c:	ldr	r0, [r5, #56]	; 0x38
   27d90:	ldr	r1, [r5, #192]	; 0xc0
   27d94:	ldr	r2, [r0, #48]	; 0x30
   27d98:	sub	r1, r1, r2
   27d9c:	add	r1, r1, r4
   27da0:	str	r1, [r0, #52]	; 0x34
   27da4:	mov	r0, r5
   27da8:	mov	r1, r6
   27dac:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   27db0:	ldr	r0, [r6, #32]
   27db4:	ldr	r1, [r5, #192]	; 0xc0
   27db8:	sub	r0, r1, r0
   27dbc:	add	r0, r0, r4
   27dc0:	add	r0, r0, #1
   27dc4:	str	r0, [r6, #36]	; 0x24
   27dc8:	add	r4, r4, #1
   27dcc:	mov	r0, r5
   27dd0:	mov	r1, r4
   27dd4:	mov	r2, r6
   27dd8:	bl	114b8 <myhtml_queue_add@plt>
   27ddc:	cmp	r0, #0
   27de0:	bne	27e04 <myhtml_tokenizer_state_attribute_name@@Base+0x230>
   27de4:	ldr	r0, [r5, #8]
   27de8:	ldr	r1, [r0, #16]
   27dec:	bl	11d1c <myhtml_token_attr_create@plt>
   27df0:	str	r0, [r5, #56]	; 0x38
   27df4:	cmp	r0, #0
   27df8:	beq	27e04 <myhtml_tokenizer_state_attribute_name@@Base+0x230>
   27dfc:	mov	r0, r4
   27e00:	pop	{r4, r5, r6, sl, fp, pc}
   27e04:	mov	r0, #69	; 0x45
   27e08:	str	r0, [r5, #160]	; 0xa0
   27e0c:	mov	r4, #0
   27e10:	mov	r0, r4
   27e14:	pop	{r4, r5, r6, sl, fp, pc}

00027e18 <myhtml_tokenizer_state_after_attribute_name@@Base>:
   27e18:	push	{r4, r5, r6, sl, fp, lr}
   27e1c:	add	fp, sp, #16
   27e20:	mov	r4, r3
   27e24:	mov	r5, r0
   27e28:	ldr	r0, [fp, #8]
   27e2c:	cmp	r3, r0
   27e30:	bcs	27f38 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   27e34:	mov	r6, r1
   27e38:	ldrb	r1, [r2, r4]
   27e3c:	sub	r1, r1, #9
   27e40:	cmp	r1, #53	; 0x35
   27e44:	bhi	27f40 <myhtml_tokenizer_state_after_attribute_name@@Base+0x128>
   27e48:	add	r3, pc, #4
   27e4c:	ldr	r1, [r3, r1, lsl #2]
   27e50:	add	pc, r3, r1
   27e54:	ldrdeq	r0, [r0], -r8
   27e58:	ldrdeq	r0, [r0], -r8
   27e5c:	andeq	r0, r0, ip, ror #1
   27e60:	ldrdeq	r0, [r0], -r8
   27e64:	ldrdeq	r0, [r0], -r8
   27e68:	andeq	r0, r0, ip, ror #1
   27e6c:	andeq	r0, r0, ip, ror #1
   27e70:	andeq	r0, r0, ip, ror #1
   27e74:	andeq	r0, r0, ip, ror #1
   27e78:	andeq	r0, r0, ip, ror #1
   27e7c:	andeq	r0, r0, ip, ror #1
   27e80:	andeq	r0, r0, ip, ror #1
   27e84:	andeq	r0, r0, ip, ror #1
   27e88:	andeq	r0, r0, ip, ror #1
   27e8c:	andeq	r0, r0, ip, ror #1
   27e90:	andeq	r0, r0, ip, ror #1
   27e94:	andeq	r0, r0, ip, ror #1
   27e98:	andeq	r0, r0, ip, ror #1
   27e9c:	andeq	r0, r0, ip, ror #1
   27ea0:	andeq	r0, r0, ip, ror #1
   27ea4:	andeq	r0, r0, ip, ror #1
   27ea8:	andeq	r0, r0, ip, ror #1
   27eac:	andeq	r0, r0, ip, ror #1
   27eb0:	ldrdeq	r0, [r0], -r8
   27eb4:	andeq	r0, r0, ip, ror #1
   27eb8:	andeq	r0, r0, ip, ror #1
   27ebc:	andeq	r0, r0, ip, ror #1
   27ec0:	andeq	r0, r0, ip, ror #1
   27ec4:	andeq	r0, r0, ip, ror #1
   27ec8:	andeq	r0, r0, ip, ror #1
   27ecc:	andeq	r0, r0, ip, ror #1
   27ed0:	andeq	r0, r0, ip, ror #1
   27ed4:	andeq	r0, r0, ip, ror #1
   27ed8:	andeq	r0, r0, ip, ror #1
   27edc:	andeq	r0, r0, ip, ror #1
   27ee0:	andeq	r0, r0, ip, ror #1
   27ee4:	andeq	r0, r0, ip, ror #1
   27ee8:	andeq	r0, r0, ip, ror #1
   27eec:	andeq	r0, r0, ip, ror #1
   27ef0:	andeq	r0, r0, ip, ror #1
   27ef4:	andeq	r0, r0, ip, ror #1
   27ef8:	andeq	r0, r0, ip, ror #1
   27efc:	andeq	r0, r0, ip, ror #1
   27f00:	andeq	r0, r0, ip, ror #1
   27f04:	andeq	r0, r0, ip, ror #1
   27f08:	andeq	r0, r0, ip, ror #1
   27f0c:	andeq	r0, r0, ip, ror #1
   27f10:	andeq	r0, r0, ip, ror #1
   27f14:	andeq	r0, r0, ip, ror #1
   27f18:	andeq	r0, r0, ip, ror #1
   27f1c:	andeq	r0, r0, ip, ror #1
   27f20:	andeq	r0, r0, ip, ror #1
   27f24:	andeq	r0, r0, r4, lsr r1
   27f28:	andeq	r0, r0, r8, asr #2
   27f2c:	add	r4, r4, #1
   27f30:	cmp	r0, r4
   27f34:	bne	27e38 <myhtml_tokenizer_state_after_attribute_name@@Base+0x20>
   27f38:	mov	r0, r4
   27f3c:	pop	{r4, r5, r6, sl, fp, pc}
   27f40:	ldr	r0, [r5, #8]
   27f44:	ldr	r1, [r0, #16]
   27f48:	bl	11d1c <myhtml_token_attr_create@plt>
   27f4c:	str	r0, [r5, #56]	; 0x38
   27f50:	cmp	r0, #0
   27f54:	beq	27ff4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1dc>
   27f58:	ldr	r1, [r6, #40]	; 0x28
   27f5c:	cmp	r1, #0
   27f60:	beq	28008 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   27f64:	ldr	r1, [r6, #44]	; 0x2c
   27f68:	str	r0, [r1]
   27f6c:	str	r1, [r0, #4]
   27f70:	str	r0, [r6, #44]	; 0x2c
   27f74:	mov	r1, #0
   27f78:	str	r1, [r0]
   27f7c:	ldr	r0, [r6, #44]	; 0x2c
   27f80:	str	r0, [r5, #56]	; 0x38
   27f84:	b	28020 <myhtml_tokenizer_state_after_attribute_name@@Base+0x208>
   27f88:	mov	r0, #36	; 0x24
   27f8c:	str	r0, [r5, #160]	; 0xa0
   27f90:	add	r4, r4, #1
   27f94:	mov	r0, r4
   27f98:	pop	{r4, r5, r6, sl, fp, pc}
   27f9c:	mov	r0, r5
   27fa0:	mov	r1, r6
   27fa4:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   27fa8:	ldr	r0, [r6, #32]
   27fac:	ldr	r1, [r5, #192]	; 0xc0
   27fb0:	sub	r0, r1, r0
   27fb4:	add	r0, r0, r4
   27fb8:	add	r0, r0, #1
   27fbc:	str	r0, [r6, #36]	; 0x24
   27fc0:	add	r4, r4, #1
   27fc4:	mov	r0, r5
   27fc8:	mov	r1, r4
   27fcc:	mov	r2, r6
   27fd0:	bl	114b8 <myhtml_queue_add@plt>
   27fd4:	cmp	r0, #0
   27fd8:	bne	27ff4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x1dc>
   27fdc:	ldr	r0, [r5, #8]
   27fe0:	ldr	r1, [r0, #16]
   27fe4:	bl	11d1c <myhtml_token_attr_create@plt>
   27fe8:	str	r0, [r5, #56]	; 0x38
   27fec:	cmp	r0, #0
   27ff0:	bne	27f38 <myhtml_tokenizer_state_after_attribute_name@@Base+0x120>
   27ff4:	mov	r0, #69	; 0x45
   27ff8:	str	r0, [r5, #160]	; 0xa0
   27ffc:	mov	r4, #0
   28000:	mov	r0, r4
   28004:	pop	{r4, r5, r6, sl, fp, pc}
   28008:	str	r0, [r6, #40]	; 0x28
   2800c:	str	r0, [r6, #44]	; 0x2c
   28010:	str	r0, [r5, #56]	; 0x38
   28014:	mov	r1, #0
   28018:	str	r1, [r0]
   2801c:	str	r1, [r0, #4]
   28020:	ldr	r0, [r5, #56]	; 0x38
   28024:	ldr	r1, [r5, #192]	; 0xc0
   28028:	mov	r2, #0
   2802c:	add	r1, r1, r4
   28030:	str	r1, [r0, #48]	; 0x30
   28034:	str	r2, [r0, #52]	; 0x34
   28038:	str	r2, [r0, #56]	; 0x38
   2803c:	str	r2, [r0, #60]	; 0x3c
   28040:	mov	r0, #34	; 0x22
   28044:	str	r0, [r5, #160]	; 0xa0
   28048:	mov	r0, r4
   2804c:	pop	{r4, r5, r6, sl, fp, pc}

00028050 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   28050:	push	{r4, r5, r6, sl, fp, lr}
   28054:	add	fp, sp, #16
   28058:	mov	r5, r3
   2805c:	mov	r4, r0
   28060:	ldr	r0, [fp, #8]
   28064:	cmp	r3, r0
   28068:	bcs	2817c <myhtml_tokenizer_state_before_attribute_value@@Base+0x12c>
   2806c:	mov	r6, r1
   28070:	rsb	r0, r0, #0
   28074:	rsb	r5, r5, #0
   28078:	ldrb	r1, [r2, -r5]
   2807c:	sub	r1, r1, #9
   28080:	cmp	r1, #53	; 0x35
   28084:	bhi	28184 <myhtml_tokenizer_state_before_attribute_value@@Base+0x134>
   28088:	add	r3, pc, #4
   2808c:	ldr	r1, [r3, r1, lsl #2]
   28090:	add	pc, r3, r1
   28094:	ldrdeq	r0, [r0], -r8
   28098:	ldrdeq	r0, [r0], -r8
   2809c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280a0:	ldrdeq	r0, [r0], -r8
   280a4:	ldrdeq	r0, [r0], -r8
   280a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280f0:	ldrdeq	r0, [r0], -r8
   280f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   280f8:	strdeq	r0, [r0], -ip
   280fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28100:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28104:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28108:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2810c:	andeq	r0, r0, r8, lsl #2
   28110:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28114:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28118:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2811c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28120:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28124:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28128:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2812c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28130:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28134:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28138:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2813c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28140:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28144:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28148:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2814c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28150:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28154:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28158:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2815c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28160:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28164:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   28168:	andeq	r0, r0, ip, lsr #2
   2816c:	sub	r5, r5, #1
   28170:	cmp	r0, r5
   28174:	bne	28078 <myhtml_tokenizer_state_before_attribute_value@@Base+0x28>
   28178:	rsb	r5, r5, #0
   2817c:	mov	r0, r5
   28180:	pop	{r4, r5, r6, sl, fp, pc}
   28184:	rsb	r5, r5, #0
   28188:	mov	r0, #39	; 0x27
   2818c:	b	281a4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x154>
   28190:	rsb	r5, r5, #1
   28194:	mov	r0, #37	; 0x25
   28198:	b	281a4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x154>
   2819c:	rsb	r5, r5, #1
   281a0:	mov	r0, #38	; 0x26
   281a4:	str	r0, [r4, #160]	; 0xa0
   281a8:	ldr	r0, [r4, #56]	; 0x38
   281ac:	ldr	r1, [r4, #192]	; 0xc0
   281b0:	add	r1, r1, r5
   281b4:	str	r1, [r0, #56]	; 0x38
   281b8:	mov	r0, r5
   281bc:	pop	{r4, r5, r6, sl, fp, pc}
   281c0:	mov	r0, r4
   281c4:	mov	r1, r6
   281c8:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   281cc:	ldr	r0, [r6, #32]
   281d0:	ldr	r1, [r4, #192]	; 0xc0
   281d4:	sub	r0, r1, r0
   281d8:	sub	r0, r0, r5
   281dc:	add	r0, r0, #1
   281e0:	str	r0, [r6, #36]	; 0x24
   281e4:	rsb	r5, r5, #1
   281e8:	mov	r0, r4
   281ec:	mov	r1, r5
   281f0:	mov	r2, r6
   281f4:	bl	114b8 <myhtml_queue_add@plt>
   281f8:	cmp	r0, #0
   281fc:	bne	28218 <myhtml_tokenizer_state_before_attribute_value@@Base+0x1c8>
   28200:	ldr	r0, [r4, #8]
   28204:	ldr	r1, [r0, #16]
   28208:	bl	11d1c <myhtml_token_attr_create@plt>
   2820c:	str	r0, [r4, #56]	; 0x38
   28210:	cmp	r0, #0
   28214:	bne	2817c <myhtml_tokenizer_state_before_attribute_value@@Base+0x12c>
   28218:	mov	r0, #69	; 0x45
   2821c:	str	r0, [r4, #160]	; 0xa0
   28220:	mov	r5, #0
   28224:	mov	r0, r5
   28228:	pop	{r4, r5, r6, sl, fp, pc}

0002822c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2822c:	push	{r4, r5, fp, lr}
   28230:	add	fp, sp, #8
   28234:	mov	r4, r0
   28238:	ldr	r0, [fp, #8]
   2823c:	cmp	r3, r0
   28240:	bcs	28268 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x3c>
   28244:	rsb	r0, r0, #0
   28248:	rsb	r5, r3, #0
   2824c:	ldrb	r1, [r2, -r5]
   28250:	cmp	r1, #34	; 0x22
   28254:	beq	28270 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x44>
   28258:	sub	r5, r5, #1
   2825c:	cmp	r0, r5
   28260:	bne	2824c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x20>
   28264:	rsb	r3, r5, #0
   28268:	mov	r0, r3
   2826c:	pop	{r4, r5, fp, pc}
   28270:	ldr	r0, [r4, #56]	; 0x38
   28274:	ldr	r1, [r4, #192]	; 0xc0
   28278:	ldr	r2, [r0, #56]	; 0x38
   2827c:	sub	r1, r1, r2
   28280:	sub	r1, r1, r5
   28284:	str	r1, [r0, #60]	; 0x3c
   28288:	ldr	r0, [r4, #8]
   2828c:	ldr	r1, [r0, #16]
   28290:	bl	11d1c <myhtml_token_attr_create@plt>
   28294:	str	r0, [r4, #56]	; 0x38
   28298:	cmp	r0, #0
   2829c:	beq	282b4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x88>
   282a0:	mov	r0, #41	; 0x29
   282a4:	str	r0, [r4, #160]	; 0xa0
   282a8:	rsb	r3, r5, #1
   282ac:	mov	r0, r3
   282b0:	pop	{r4, r5, fp, pc}
   282b4:	mov	r0, #69	; 0x45
   282b8:	str	r0, [r4, #160]	; 0xa0
   282bc:	mov	r3, #0
   282c0:	mov	r0, r3
   282c4:	pop	{r4, r5, fp, pc}

000282c8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   282c8:	push	{r4, r5, fp, lr}
   282cc:	add	fp, sp, #8
   282d0:	mov	r4, r0
   282d4:	ldr	r0, [fp, #8]
   282d8:	cmp	r3, r0
   282dc:	bcs	28304 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x3c>
   282e0:	rsb	r0, r0, #0
   282e4:	rsb	r5, r3, #0
   282e8:	ldrb	r1, [r2, -r5]
   282ec:	cmp	r1, #39	; 0x27
   282f0:	beq	2830c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x44>
   282f4:	sub	r5, r5, #1
   282f8:	cmp	r0, r5
   282fc:	bne	282e8 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x20>
   28300:	rsb	r3, r5, #0
   28304:	mov	r0, r3
   28308:	pop	{r4, r5, fp, pc}
   2830c:	ldr	r0, [r4, #56]	; 0x38
   28310:	ldr	r1, [r4, #192]	; 0xc0
   28314:	ldr	r2, [r0, #56]	; 0x38
   28318:	sub	r1, r1, r2
   2831c:	sub	r1, r1, r5
   28320:	str	r1, [r0, #60]	; 0x3c
   28324:	ldr	r0, [r4, #8]
   28328:	ldr	r1, [r0, #16]
   2832c:	bl	11d1c <myhtml_token_attr_create@plt>
   28330:	str	r0, [r4, #56]	; 0x38
   28334:	cmp	r0, #0
   28338:	beq	28350 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x88>
   2833c:	mov	r0, #41	; 0x29
   28340:	str	r0, [r4, #160]	; 0xa0
   28344:	rsb	r3, r5, #1
   28348:	mov	r0, r3
   2834c:	pop	{r4, r5, fp, pc}
   28350:	mov	r0, #69	; 0x45
   28354:	str	r0, [r4, #160]	; 0xa0
   28358:	mov	r3, #0
   2835c:	mov	r0, r3
   28360:	pop	{r4, r5, fp, pc}

00028364 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   28364:	push	{r4, r5, r6, sl, fp, lr}
   28368:	add	fp, sp, #16
   2836c:	mov	r4, r3
   28370:	mov	r5, r0
   28374:	ldr	r0, [fp, #8]
   28378:	cmp	r3, r0
   2837c:	bcs	2853c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1d8>
   28380:	mov	r6, r1
   28384:	b	28394 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x30>
   28388:	add	r4, r4, #1
   2838c:	cmp	r0, r4
   28390:	beq	2853c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1d8>
   28394:	ldrb	r1, [r2, r4]
   28398:	sub	r1, r1, #9
   2839c:	cmp	r1, #53	; 0x35
   283a0:	bhi	28388 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x24>
   283a4:	add	r3, pc, #4
   283a8:	ldr	r1, [r3, r1, lsl #2]
   283ac:	add	pc, r3, r1
   283b0:	ldrdeq	r0, [r0], -r8
   283b4:	ldrdeq	r0, [r0], -r8
   283b8:			; <UNDEFINED> instruction: 0xffffffd8
   283bc:	ldrdeq	r0, [r0], -r8
   283c0:	ldrdeq	r0, [r0], -r8
   283c4:			; <UNDEFINED> instruction: 0xffffffd8
   283c8:			; <UNDEFINED> instruction: 0xffffffd8
   283cc:			; <UNDEFINED> instruction: 0xffffffd8
   283d0:			; <UNDEFINED> instruction: 0xffffffd8
   283d4:			; <UNDEFINED> instruction: 0xffffffd8
   283d8:			; <UNDEFINED> instruction: 0xffffffd8
   283dc:			; <UNDEFINED> instruction: 0xffffffd8
   283e0:			; <UNDEFINED> instruction: 0xffffffd8
   283e4:			; <UNDEFINED> instruction: 0xffffffd8
   283e8:			; <UNDEFINED> instruction: 0xffffffd8
   283ec:			; <UNDEFINED> instruction: 0xffffffd8
   283f0:			; <UNDEFINED> instruction: 0xffffffd8
   283f4:			; <UNDEFINED> instruction: 0xffffffd8
   283f8:			; <UNDEFINED> instruction: 0xffffffd8
   283fc:			; <UNDEFINED> instruction: 0xffffffd8
   28400:			; <UNDEFINED> instruction: 0xffffffd8
   28404:			; <UNDEFINED> instruction: 0xffffffd8
   28408:			; <UNDEFINED> instruction: 0xffffffd8
   2840c:	ldrdeq	r0, [r0], -r8
   28410:			; <UNDEFINED> instruction: 0xffffffd8
   28414:			; <UNDEFINED> instruction: 0xffffffd8
   28418:			; <UNDEFINED> instruction: 0xffffffd8
   2841c:			; <UNDEFINED> instruction: 0xffffffd8
   28420:			; <UNDEFINED> instruction: 0xffffffd8
   28424:			; <UNDEFINED> instruction: 0xffffffd8
   28428:			; <UNDEFINED> instruction: 0xffffffd8
   2842c:			; <UNDEFINED> instruction: 0xffffffd8
   28430:			; <UNDEFINED> instruction: 0xffffffd8
   28434:			; <UNDEFINED> instruction: 0xffffffd8
   28438:			; <UNDEFINED> instruction: 0xffffffd8
   2843c:			; <UNDEFINED> instruction: 0xffffffd8
   28440:			; <UNDEFINED> instruction: 0xffffffd8
   28444:			; <UNDEFINED> instruction: 0xffffffd8
   28448:			; <UNDEFINED> instruction: 0xffffffd8
   2844c:			; <UNDEFINED> instruction: 0xffffffd8
   28450:			; <UNDEFINED> instruction: 0xffffffd8
   28454:			; <UNDEFINED> instruction: 0xffffffd8
   28458:			; <UNDEFINED> instruction: 0xffffffd8
   2845c:			; <UNDEFINED> instruction: 0xffffffd8
   28460:			; <UNDEFINED> instruction: 0xffffffd8
   28464:			; <UNDEFINED> instruction: 0xffffffd8
   28468:			; <UNDEFINED> instruction: 0xffffffd8
   2846c:			; <UNDEFINED> instruction: 0xffffffd8
   28470:			; <UNDEFINED> instruction: 0xffffffd8
   28474:			; <UNDEFINED> instruction: 0xffffffd8
   28478:			; <UNDEFINED> instruction: 0xffffffd8
   2847c:			; <UNDEFINED> instruction: 0xffffffd8
   28480:			; <UNDEFINED> instruction: 0xffffffd8
   28484:	andeq	r0, r0, ip, lsl r1
   28488:	mov	r0, #33	; 0x21
   2848c:	str	r0, [r5, #160]	; 0xa0
   28490:	ldr	r0, [r5, #56]	; 0x38
   28494:	ldr	r1, [r5, #192]	; 0xc0
   28498:	ldr	r2, [r0, #56]	; 0x38
   2849c:	sub	r1, r1, r2
   284a0:	add	r1, r1, r4
   284a4:	str	r1, [r0, #60]	; 0x3c
   284a8:	ldr	r0, [r5, #8]
   284ac:	ldr	r1, [r0, #16]
   284b0:	bl	11d1c <myhtml_token_attr_create@plt>
   284b4:	str	r0, [r5, #56]	; 0x38
   284b8:	cmp	r0, #0
   284bc:	beq	28544 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1e0>
   284c0:	add	r4, r4, #1
   284c4:	mov	r0, r4
   284c8:	pop	{r4, r5, r6, sl, fp, pc}
   284cc:	ldr	r0, [r5, #56]	; 0x38
   284d0:	ldr	r1, [r5, #192]	; 0xc0
   284d4:	ldr	r2, [r0, #56]	; 0x38
   284d8:	sub	r1, r1, r2
   284dc:	add	r1, r1, r4
   284e0:	str	r1, [r0, #60]	; 0x3c
   284e4:	mov	r0, r5
   284e8:	mov	r1, r6
   284ec:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   284f0:	ldr	r0, [r6, #32]
   284f4:	ldr	r1, [r5, #192]	; 0xc0
   284f8:	sub	r0, r1, r0
   284fc:	add	r0, r0, r4
   28500:	add	r0, r0, #1
   28504:	str	r0, [r6, #36]	; 0x24
   28508:	add	r4, r4, #1
   2850c:	mov	r0, r5
   28510:	mov	r1, r4
   28514:	mov	r2, r6
   28518:	bl	114b8 <myhtml_queue_add@plt>
   2851c:	cmp	r0, #0
   28520:	bne	28544 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1e0>
   28524:	ldr	r0, [r5, #8]
   28528:	ldr	r1, [r0, #16]
   2852c:	bl	11d1c <myhtml_token_attr_create@plt>
   28530:	str	r0, [r5, #56]	; 0x38
   28534:	cmp	r0, #0
   28538:	beq	28544 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x1e0>
   2853c:	mov	r0, r4
   28540:	pop	{r4, r5, r6, sl, fp, pc}
   28544:	mov	r0, #69	; 0x45
   28548:	str	r0, [r5, #160]	; 0xa0
   2854c:	mov	r4, #0
   28550:	mov	r0, r4
   28554:	pop	{r4, r5, r6, sl, fp, pc}

00028558 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   28558:	push	{r4, r5, r6, sl, fp, lr}
   2855c:	add	fp, sp, #16
   28560:	mov	r4, r3
   28564:	mov	r5, r0
   28568:	ldrb	r0, [r2, r3]
   2856c:	sub	r0, r0, #9
   28570:	cmp	r0, #53	; 0x35
   28574:	bhi	28674 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x11c>
   28578:	mov	r6, r1
   2857c:	add	r1, pc, #4
   28580:	ldr	r0, [r1, r0, lsl #2]
   28584:	add	pc, r1, r0
   28588:	ldrdeq	r0, [r0], -r8
   2858c:	ldrdeq	r0, [r0], -r8
   28590:	andeq	r0, r0, ip, ror #1
   28594:	ldrdeq	r0, [r0], -r8
   28598:	ldrdeq	r0, [r0], -r8
   2859c:	andeq	r0, r0, ip, ror #1
   285a0:	andeq	r0, r0, ip, ror #1
   285a4:	andeq	r0, r0, ip, ror #1
   285a8:	andeq	r0, r0, ip, ror #1
   285ac:	andeq	r0, r0, ip, ror #1
   285b0:	andeq	r0, r0, ip, ror #1
   285b4:	andeq	r0, r0, ip, ror #1
   285b8:	andeq	r0, r0, ip, ror #1
   285bc:	andeq	r0, r0, ip, ror #1
   285c0:	andeq	r0, r0, ip, ror #1
   285c4:	andeq	r0, r0, ip, ror #1
   285c8:	andeq	r0, r0, ip, ror #1
   285cc:	andeq	r0, r0, ip, ror #1
   285d0:	andeq	r0, r0, ip, ror #1
   285d4:	andeq	r0, r0, ip, ror #1
   285d8:	andeq	r0, r0, ip, ror #1
   285dc:	andeq	r0, r0, ip, ror #1
   285e0:	andeq	r0, r0, ip, ror #1
   285e4:	ldrdeq	r0, [r0], -r8
   285e8:	andeq	r0, r0, ip, ror #1
   285ec:	andeq	r0, r0, ip, ror #1
   285f0:	andeq	r0, r0, ip, ror #1
   285f4:	andeq	r0, r0, ip, ror #1
   285f8:	andeq	r0, r0, ip, ror #1
   285fc:	andeq	r0, r0, ip, ror #1
   28600:	andeq	r0, r0, ip, ror #1
   28604:	andeq	r0, r0, ip, ror #1
   28608:	andeq	r0, r0, ip, ror #1
   2860c:	andeq	r0, r0, ip, ror #1
   28610:	andeq	r0, r0, ip, ror #1
   28614:	andeq	r0, r0, ip, ror #1
   28618:	andeq	r0, r0, ip, ror #1
   2861c:	andeq	r0, r0, ip, ror #1
   28620:	strdeq	r0, [r0], -ip
   28624:	andeq	r0, r0, ip, ror #1
   28628:	andeq	r0, r0, ip, ror #1
   2862c:	andeq	r0, r0, ip, ror #1
   28630:	andeq	r0, r0, ip, ror #1
   28634:	andeq	r0, r0, ip, ror #1
   28638:	andeq	r0, r0, ip, ror #1
   2863c:	andeq	r0, r0, ip, ror #1
   28640:	andeq	r0, r0, ip, ror #1
   28644:	andeq	r0, r0, ip, ror #1
   28648:	andeq	r0, r0, ip, ror #1
   2864c:	andeq	r0, r0, ip, ror #1
   28650:	andeq	r0, r0, ip, ror #1
   28654:	andeq	r0, r0, ip, ror #1
   28658:	andeq	r0, r0, ip, ror #1
   2865c:	andeq	r0, r0, r4, lsl #2
   28660:	mov	r0, #33	; 0x21
   28664:	str	r0, [r5, #160]	; 0xa0
   28668:	add	r4, r4, #1
   2866c:	mov	r0, r4
   28670:	pop	{r4, r5, r6, sl, fp, pc}
   28674:	mov	r0, #33	; 0x21
   28678:	str	r0, [r5, #160]	; 0xa0
   2867c:	mov	r0, r4
   28680:	pop	{r4, r5, r6, sl, fp, pc}
   28684:	mov	r0, #42	; 0x2a
   28688:	b	28664 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x10c>
   2868c:	mov	r0, r5
   28690:	mov	r1, r6
   28694:	bl	11f2c <myhtml_tokenizer_set_state@plt>
   28698:	ldr	r0, [r5, #192]	; 0xc0
   2869c:	add	r4, r4, #1
   286a0:	add	r0, r0, r4
   286a4:	ldr	r1, [r6, #32]
   286a8:	sub	r0, r0, r1
   286ac:	str	r0, [r6, #36]	; 0x24
   286b0:	mov	r0, r5
   286b4:	mov	r1, r4
   286b8:	mov	r2, r6
   286bc:	bl	114b8 <myhtml_queue_add@plt>
   286c0:	cmp	r0, #0
   286c4:	beq	286d4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x17c>
   286c8:	mov	r0, #69	; 0x45
   286cc:	str	r0, [r5, #160]	; 0xa0
   286d0:	mov	r4, #0
   286d4:	mov	r0, r4
   286d8:	pop	{r4, r5, r6, sl, fp, pc}

000286dc <myhtml_tokenizer_state_comment_start@@Base>:
   286dc:	push	{r4, r5, r6, r7, fp, lr}
   286e0:	add	fp, sp, #16
   286e4:	mov	r4, r0
   286e8:	mov	r0, #2
   286ec:	str	r0, [r1]
   286f0:	ldrb	r0, [r2, r3]
   286f4:	cmp	r0, #45	; 0x2d
   286f8:	beq	28750 <myhtml_tokenizer_state_comment_start@@Base+0x74>
   286fc:	cmp	r0, #62	; 0x3e
   28700:	bne	28758 <myhtml_tokenizer_state_comment_start@@Base+0x7c>
   28704:	mov	r6, r1
   28708:	ldr	r0, [r4, #192]	; 0xc0
   2870c:	mov	r5, #0
   28710:	str	r5, [r1, #28]
   28714:	add	r7, r3, #1
   28718:	add	r0, r0, r7
   2871c:	ldr	r1, [r1, #32]
   28720:	sub	r0, r0, r1
   28724:	str	r0, [r6, #36]	; 0x24
   28728:	mov	r0, r4
   2872c:	mov	r1, r7
   28730:	mov	r2, r6
   28734:	bl	114b8 <myhtml_queue_add@plt>
   28738:	cmp	r0, #0
   2873c:	beq	2876c <myhtml_tokenizer_state_comment_start@@Base+0x90>
   28740:	mov	r0, #69	; 0x45
   28744:	str	r0, [r4, #160]	; 0xa0
   28748:	mov	r0, r5
   2874c:	pop	{r4, r5, r6, r7, fp, pc}
   28750:	mov	r0, #46	; 0x2e
   28754:	b	2875c <myhtml_tokenizer_state_comment_start@@Base+0x80>
   28758:	mov	r0, #47	; 0x2f
   2875c:	str	r0, [r4, #160]	; 0xa0
   28760:	add	r5, r3, #1
   28764:	mov	r0, r5
   28768:	pop	{r4, r5, r6, r7, fp, pc}
   2876c:	mov	r0, #0
   28770:	str	r0, [r4, #160]	; 0xa0
   28774:	mov	r0, r7
   28778:	pop	{r4, r5, r6, r7, fp, pc}

0002877c <myhtml_tokenizer_state_comment_start_dash@@Base>:
   2877c:	push	{r4, r5, r6, r7, fp, lr}
   28780:	add	fp, sp, #16
   28784:	mov	r4, r0
   28788:	mov	r0, #2
   2878c:	str	r0, [r1]
   28790:	ldrb	r0, [r2, r3]
   28794:	cmp	r0, #45	; 0x2d
   28798:	beq	287f0 <myhtml_tokenizer_state_comment_start_dash@@Base+0x74>
   2879c:	cmp	r0, #62	; 0x3e
   287a0:	bne	287f8 <myhtml_tokenizer_state_comment_start_dash@@Base+0x7c>
   287a4:	mov	r6, r1
   287a8:	ldr	r0, [r4, #192]	; 0xc0
   287ac:	mov	r5, #0
   287b0:	str	r5, [r1, #28]
   287b4:	add	r7, r3, #1
   287b8:	add	r0, r0, r7
   287bc:	ldr	r1, [r1, #32]
   287c0:	sub	r0, r0, r1
   287c4:	str	r0, [r6, #36]	; 0x24
   287c8:	mov	r0, r4
   287cc:	mov	r1, r7
   287d0:	mov	r2, r6
   287d4:	bl	114b8 <myhtml_queue_add@plt>
   287d8:	cmp	r0, #0
   287dc:	beq	2880c <myhtml_tokenizer_state_comment_start_dash@@Base+0x90>
   287e0:	mov	r0, #69	; 0x45
   287e4:	str	r0, [r4, #160]	; 0xa0
   287e8:	mov	r0, r5
   287ec:	pop	{r4, r5, r6, r7, fp, pc}
   287f0:	mov	r0, #49	; 0x31
   287f4:	b	287fc <myhtml_tokenizer_state_comment_start_dash@@Base+0x80>
   287f8:	mov	r0, #47	; 0x2f
   287fc:	str	r0, [r4, #160]	; 0xa0
   28800:	add	r5, r3, #1
   28804:	mov	r0, r5
   28808:	pop	{r4, r5, r6, r7, fp, pc}
   2880c:	mov	r0, #0
   28810:	str	r0, [r4, #160]	; 0xa0
   28814:	mov	r0, r7
   28818:	pop	{r4, r5, r6, r7, fp, pc}

0002881c <myhtml_tokenizer_state_comment@@Base>:
   2881c:	mov	ip, r3
   28820:	mov	r3, #2
   28824:	str	r3, [r1]
   28828:	ldr	r1, [sp]
   2882c:	cmp	ip, r1
   28830:	bcs	2884c <myhtml_tokenizer_state_comment@@Base+0x30>
   28834:	ldrb	r3, [r2, ip]
   28838:	cmp	r3, #45	; 0x2d
   2883c:	beq	28854 <myhtml_tokenizer_state_comment@@Base+0x38>
   28840:	add	ip, ip, #1
   28844:	cmp	r1, ip
   28848:	bne	28834 <myhtml_tokenizer_state_comment@@Base+0x18>
   2884c:	mov	r0, ip
   28850:	bx	lr
   28854:	mov	r1, #48	; 0x30
   28858:	str	r1, [r0, #160]	; 0xa0
   2885c:	add	ip, ip, #1
   28860:	mov	r0, ip
   28864:	bx	lr

00028868 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   28868:	ldrb	r1, [r2, r3]
   2886c:	mov	r2, #47	; 0x2f
   28870:	cmp	r1, #45	; 0x2d
   28874:	movweq	r2, #49	; 0x31
   28878:	str	r2, [r0, #160]	; 0xa0
   2887c:	add	r0, r3, #1
   28880:	bx	lr

00028884 <myhtml_tokenizer_state_comment_end@@Base>:
   28884:	push	{r4, r5, r6, r7, fp, lr}
   28888:	add	fp, sp, #16
   2888c:	mov	r4, r0
   28890:	ldrb	r0, [r2, r3]
   28894:	cmp	r0, #33	; 0x21
   28898:	beq	28900 <myhtml_tokenizer_state_comment_end@@Base+0x7c>
   2889c:	cmp	r0, #62	; 0x3e
   288a0:	bne	28914 <myhtml_tokenizer_state_comment_end@@Base+0x90>
   288a4:	mov	r6, r1
   288a8:	ldr	r0, [r4, #192]	; 0xc0
   288ac:	add	r7, r3, #1
   288b0:	add	r1, r0, r7
   288b4:	ldr	r2, [r6, #24]
   288b8:	ldr	r5, [r6, #32]
   288bc:	sub	r1, r1, r5
   288c0:	str	r1, [r6, #36]	; 0x24
   288c4:	add	r0, r0, r3
   288c8:	sub	r0, r0, r2
   288cc:	mov	r5, #0
   288d0:	cmp	r0, #1
   288d4:	mov	r1, #0
   288d8:	subhi	r1, r0, #2
   288dc:	str	r1, [r6, #28]
   288e0:	mov	r0, r4
   288e4:	mov	r1, r7
   288e8:	mov	r2, r6
   288ec:	bl	114b8 <myhtml_queue_add@plt>
   288f0:	cmp	r0, #0
   288f4:	beq	28930 <myhtml_tokenizer_state_comment_end@@Base+0xac>
   288f8:	mov	r0, #69	; 0x45
   288fc:	b	28924 <myhtml_tokenizer_state_comment_end@@Base+0xa0>
   28900:	mov	r0, #50	; 0x32
   28904:	str	r0, [r4, #160]	; 0xa0
   28908:	add	r5, r3, #1
   2890c:	mov	r0, r5
   28910:	pop	{r4, r5, r6, r7, fp, pc}
   28914:	add	r5, r3, #1
   28918:	cmp	r0, #45	; 0x2d
   2891c:	beq	28928 <myhtml_tokenizer_state_comment_end@@Base+0xa4>
   28920:	mov	r0, #47	; 0x2f
   28924:	str	r0, [r4, #160]	; 0xa0
   28928:	mov	r0, r5
   2892c:	pop	{r4, r5, r6, r7, fp, pc}
   28930:	mov	r0, #0
   28934:	str	r0, [r4, #160]	; 0xa0
   28938:	mov	r0, r7
   2893c:	pop	{r4, r5, r6, r7, fp, pc}

00028940 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   28940:	push	{r4, r5, r6, sl, fp, lr}
   28944:	add	fp, sp, #16
   28948:	mov	r6, r0
   2894c:	ldrb	r0, [r2, r3]
   28950:	cmp	r0, #62	; 0x3e
   28954:	bne	289c0 <myhtml_tokenizer_state_comment_end_bang@@Base+0x80>
   28958:	mov	r4, r1
   2895c:	ldr	r0, [r6, #192]	; 0xc0
   28960:	add	r1, r0, r3
   28964:	sub	r5, r1, #3
   28968:	ldr	r2, [r4, #24]
   2896c:	cmp	r5, r2
   28970:	movcc	r1, #0
   28974:	subcs	r1, r1, r2
   28978:	subcs	r1, r1, #3
   2897c:	str	r1, [r4, #28]
   28980:	add	r5, r3, #1
   28984:	add	r0, r0, r5
   28988:	ldr	r1, [r4, #32]
   2898c:	sub	r0, r0, r1
   28990:	str	r0, [r4, #36]	; 0x24
   28994:	mov	r0, r6
   28998:	mov	r1, r5
   2899c:	mov	r2, r4
   289a0:	bl	114b8 <myhtml_queue_add@plt>
   289a4:	cmp	r0, #0
   289a8:	beq	289d4 <myhtml_tokenizer_state_comment_end_bang@@Base+0x94>
   289ac:	mov	r0, #69	; 0x45
   289b0:	str	r0, [r6, #160]	; 0xa0
   289b4:	mov	r5, #0
   289b8:	mov	r0, r5
   289bc:	pop	{r4, r5, r6, sl, fp, pc}
   289c0:	add	r5, r3, #1
   289c4:	cmp	r0, #45	; 0x2d
   289c8:	movne	r0, #47	; 0x2f
   289cc:	moveq	r0, #48	; 0x30
   289d0:	b	289d8 <myhtml_tokenizer_state_comment_end_bang@@Base+0x98>
   289d4:	mov	r0, #0
   289d8:	str	r0, [r6, #160]	; 0xa0
   289dc:	mov	r0, r5
   289e0:	pop	{r4, r5, r6, sl, fp, pc}

000289e4 <myhtml_tokenizer_state_bogus_comment@@Base>:
   289e4:	push	{r4, r5, fp, lr}
   289e8:	add	fp, sp, #8
   289ec:	mov	r4, r3
   289f0:	mov	r5, r0
   289f4:	mov	r0, #2
   289f8:	str	r0, [r1]
   289fc:	ldr	r0, [r1, #48]	; 0x30
   28a00:	orr	r0, r0, #1024	; 0x400
   28a04:	str	r0, [r1, #48]	; 0x30
   28a08:	ldr	r0, [fp, #8]
   28a0c:	cmp	r3, r0
   28a10:	bcs	28a30 <myhtml_tokenizer_state_bogus_comment@@Base+0x4c>
   28a14:	mov	r3, r1
   28a18:	ldrb	r1, [r2, r4]
   28a1c:	cmp	r1, #62	; 0x3e
   28a20:	beq	28a38 <myhtml_tokenizer_state_bogus_comment@@Base+0x54>
   28a24:	add	r4, r4, #1
   28a28:	cmp	r0, r4
   28a2c:	bne	28a18 <myhtml_tokenizer_state_bogus_comment@@Base+0x34>
   28a30:	mov	r0, r4
   28a34:	pop	{r4, r5, fp, pc}
   28a38:	ldr	r0, [r3, #24]
   28a3c:	ldr	r1, [r3, #32]
   28a40:	ldr	r2, [r5, #192]	; 0xc0
   28a44:	sub	r0, r2, r0
   28a48:	add	r0, r0, r4
   28a4c:	str	r0, [r3, #28]
   28a50:	sub	r0, r2, r1
   28a54:	add	r0, r0, r4
   28a58:	add	r0, r0, #1
   28a5c:	str	r0, [r3, #36]	; 0x24
   28a60:	add	r4, r4, #1
   28a64:	mov	r0, r5
   28a68:	mov	r1, r4
   28a6c:	mov	r2, r3
   28a70:	bl	114b8 <myhtml_queue_add@plt>
   28a74:	cmp	r0, #0
   28a78:	moveq	r0, #0
   28a7c:	streq	r0, [r5, #160]	; 0xa0
   28a80:	movne	r0, #69	; 0x45
   28a84:	strne	r0, [r5, #160]	; 0xa0
   28a88:	movne	r4, #0
   28a8c:	mov	r0, r4
   28a90:	pop	{r4, r5, fp, pc}

00028a94 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   28a94:	movw	r1, #37164	; 0x912c
   28a98:	str	r1, [r0, #196]	; 0xc4
   28a9c:	ldr	r0, [sp]
   28aa0:	bx	lr

00028aa4 <myhtml_tokenizer_state_init@@Base>:
   28aa4:	push	{r4, sl, fp, lr}
   28aa8:	add	fp, sp, #8
   28aac:	mov	r4, r0
   28ab0:	movw	r0, #19604	; 0x4c94
   28ab4:	bl	1204c <mycore_malloc@plt>
   28ab8:	str	r0, [r4, #24]!
   28abc:	cmp	r0, #0
   28ac0:	beq	292a8 <myhtml_tokenizer_state_init@@Base+0x804>
   28ac4:	ldr	r1, [pc, #2020]	; 292b0 <myhtml_tokenizer_state_init@@Base+0x80c>
   28ac8:	ldr	r1, [pc, r1]
   28acc:	str	r1, [r0]
   28ad0:	ldr	r0, [r4]
   28ad4:	ldr	r1, [pc, #2008]	; 292b4 <myhtml_tokenizer_state_init@@Base+0x810>
   28ad8:	ldr	r1, [pc, r1]
   28adc:	str	r1, [r0, #28]
   28ae0:	ldr	r0, [r4]
   28ae4:	ldr	r1, [pc, #1996]	; 292b8 <myhtml_tokenizer_state_init@@Base+0x814>
   28ae8:	ldr	r1, [pc, r1]
   28aec:	str	r1, [r0, #36]	; 0x24
   28af0:	ldr	r0, [r4]
   28af4:	ldr	r1, [pc, #1984]	; 292bc <myhtml_tokenizer_state_init@@Base+0x818>
   28af8:	ldr	r1, [pc, r1]
   28afc:	str	r1, [r0, #32]
   28b00:	ldr	r0, [r4]
   28b04:	ldr	r1, [pc, #1972]	; 292c0 <myhtml_tokenizer_state_init@@Base+0x81c>
   28b08:	ldr	r1, [pc, r1]
   28b0c:	str	r1, [r0, #168]	; 0xa8
   28b10:	ldr	r0, [r4]
   28b14:	ldr	r1, [pc, #1960]	; 292c4 <myhtml_tokenizer_state_init@@Base+0x820>
   28b18:	ldr	r1, [pc, r1]
   28b1c:	str	r1, [r0, #176]	; 0xb0
   28b20:	ldr	r0, [r4]
   28b24:	ldr	r1, [pc, #1948]	; 292c8 <myhtml_tokenizer_state_init@@Base+0x824>
   28b28:	ldr	r1, [pc, r1]
   28b2c:	str	r1, [r0, #132]	; 0x84
   28b30:	ldr	r0, [r4]
   28b34:	ldr	r1, [pc, #1936]	; 292cc <myhtml_tokenizer_state_init@@Base+0x828>
   28b38:	ldr	r1, [pc, r1]
   28b3c:	str	r1, [r0, #136]	; 0x88
   28b40:	ldr	r0, [r4]
   28b44:	ldr	r1, [pc, #1924]	; 292d0 <myhtml_tokenizer_state_init@@Base+0x82c>
   28b48:	ldr	r1, [pc, r1]
   28b4c:	str	r1, [r0, #140]	; 0x8c
   28b50:	ldr	r0, [r4]
   28b54:	ldr	r1, [pc, #1912]	; 292d4 <myhtml_tokenizer_state_init@@Base+0x830>
   28b58:	ldr	r1, [pc, r1]
   28b5c:	str	r1, [r0, #144]	; 0x90
   28b60:	ldr	r0, [r4]
   28b64:	ldr	r1, [pc, #1900]	; 292d8 <myhtml_tokenizer_state_init@@Base+0x834>
   28b68:	ldr	r1, [pc, r1]
   28b6c:	str	r1, [r0, #164]	; 0xa4
   28b70:	ldr	r0, [r4]
   28b74:	ldr	r1, [pc, #1888]	; 292dc <myhtml_tokenizer_state_init@@Base+0x838>
   28b78:	ldr	r1, [pc, r1]
   28b7c:	str	r1, [r0, #148]	; 0x94
   28b80:	ldr	r0, [r4]
   28b84:	ldr	r1, [pc, #1876]	; 292e0 <myhtml_tokenizer_state_init@@Base+0x83c>
   28b88:	ldr	r1, [pc, r1]
   28b8c:	str	r1, [r0, #152]	; 0x98
   28b90:	ldr	r0, [r4]
   28b94:	ldr	r1, [pc, #1864]	; 292e4 <myhtml_tokenizer_state_init@@Base+0x840>
   28b98:	ldr	r1, [pc, r1]
   28b9c:	str	r1, [r0, #156]	; 0x9c
   28ba0:	ldr	r0, [r4]
   28ba4:	ldr	r1, [pc, #1852]	; 292e8 <myhtml_tokenizer_state_init@@Base+0x844>
   28ba8:	ldr	r1, [pc, r1]
   28bac:	str	r1, [r0, #180]	; 0xb4
   28bb0:	ldr	r0, [r4]
   28bb4:	ldr	r1, [pc, #1840]	; 292ec <myhtml_tokenizer_state_init@@Base+0x848>
   28bb8:	ldr	r1, [pc, r1]
   28bbc:	str	r1, [r0, #184]	; 0xb8
   28bc0:	ldr	r0, [r4]
   28bc4:	ldr	r1, [pc, #1828]	; 292f0 <myhtml_tokenizer_state_init@@Base+0x84c>
   28bc8:	ldr	r1, [pc, r1]
   28bcc:	str	r1, [r0, #188]	; 0xbc
   28bd0:	ldr	r0, [r4]
   28bd4:	ldr	r1, [pc, #1816]	; 292f4 <myhtml_tokenizer_state_init@@Base+0x850>
   28bd8:	ldr	r1, [pc, r1]
   28bdc:	str	r1, [r0, #196]	; 0xc4
   28be0:	ldr	r0, [r4]
   28be4:	ldr	r1, [pc, #1804]	; 292f8 <myhtml_tokenizer_state_init@@Base+0x854>
   28be8:	ldr	r1, [pc, r1]
   28bec:	str	r1, [r0, #192]	; 0xc0
   28bf0:	ldr	r0, [r4]
   28bf4:	ldr	r1, [pc, #1792]	; 292fc <myhtml_tokenizer_state_init@@Base+0x858>
   28bf8:	ldr	r1, [pc, r1]
   28bfc:	str	r1, [r0, #200]	; 0xc8
   28c00:	ldr	r0, [r4]
   28c04:	ldr	r1, [pc, #1780]	; 29300 <myhtml_tokenizer_state_init@@Base+0x85c>
   28c08:	ldr	r1, [pc, r1]
   28c0c:	str	r1, [r0, #172]	; 0xac
   28c10:	ldr	r0, [r4]
   28c14:	ldr	r1, [pc, #1768]	; 29304 <myhtml_tokenizer_state_init@@Base+0x860>
   28c18:	ldr	r1, [pc, r1]
   28c1c:	str	r1, [r0, #268]	; 0x10c
   28c20:	ldr	r0, [r4]
   28c24:	ldr	r1, [pc, #1756]	; 29308 <myhtml_tokenizer_state_init@@Base+0x864>
   28c28:	ldr	r1, [pc, r1]
   28c2c:	str	r1, [r0, #8]
   28c30:	ldr	r0, [r4]
   28c34:	ldr	r1, [pc, #1744]	; 2930c <myhtml_tokenizer_state_init@@Base+0x868>
   28c38:	ldr	r1, [pc, r1]
   28c3c:	str	r1, [r0, #40]	; 0x28
   28c40:	ldr	r0, [r4]
   28c44:	ldr	r1, [pc, #1732]	; 29310 <myhtml_tokenizer_state_init@@Base+0x86c>
   28c48:	ldr	r1, [pc, r1]
   28c4c:	str	r1, [r0, #44]	; 0x2c
   28c50:	ldr	r0, [r4]
   28c54:	ldr	r1, [pc, #1720]	; 29314 <myhtml_tokenizer_state_init@@Base+0x870>
   28c58:	ldr	r1, [pc, r1]
   28c5c:	str	r1, [r0, #48]	; 0x30
   28c60:	ldr	r0, [r4]
   28c64:	ldr	r1, [pc, #1708]	; 29318 <myhtml_tokenizer_state_init@@Base+0x874>
   28c68:	ldr	r1, [pc, r1]
   28c6c:	str	r1, [r0, #16]
   28c70:	ldr	r0, [r4]
   28c74:	ldr	r1, [pc, #1696]	; 2931c <myhtml_tokenizer_state_init@@Base+0x878>
   28c78:	ldr	r1, [pc, r1]
   28c7c:	str	r1, [r0, #52]	; 0x34
   28c80:	ldr	r0, [r4]
   28c84:	ldr	r1, [pc, #1684]	; 29320 <myhtml_tokenizer_state_init@@Base+0x87c>
   28c88:	ldr	r1, [pc, r1]
   28c8c:	str	r1, [r0, #56]	; 0x38
   28c90:	ldr	r0, [r4]
   28c94:	ldr	r1, [pc, #1672]	; 29324 <myhtml_tokenizer_state_init@@Base+0x880>
   28c98:	ldr	r1, [pc, r1]
   28c9c:	str	r1, [r0, #60]	; 0x3c
   28ca0:	ldr	r0, [r4]
   28ca4:	ldr	r1, [pc, #1660]	; 29328 <myhtml_tokenizer_state_init@@Base+0x884>
   28ca8:	ldr	r1, [pc, r1]
   28cac:	str	r1, [r0, #24]
   28cb0:	ldr	r0, [r4]
   28cb4:	ldr	r1, [pc, #1648]	; 2932c <myhtml_tokenizer_state_init@@Base+0x888>
   28cb8:	ldr	r1, [pc, r1]
   28cbc:	str	r1, [r0, #204]	; 0xcc
   28cc0:	ldr	r0, [r4]
   28cc4:	ldr	r1, [pc, #1636]	; 29330 <myhtml_tokenizer_state_init@@Base+0x88c>
   28cc8:	ldr	r1, [pc, r1]
   28ccc:	str	r1, [r0, #208]	; 0xd0
   28cd0:	ldr	r0, [r4]
   28cd4:	ldr	r1, [pc, #1624]	; 29334 <myhtml_tokenizer_state_init@@Base+0x890>
   28cd8:	ldr	r1, [pc, r1]
   28cdc:	str	r1, [r0, #212]	; 0xd4
   28ce0:	ldr	r0, [r4]
   28ce4:	ldr	r1, [pc, #1612]	; 29338 <myhtml_tokenizer_state_init@@Base+0x894>
   28ce8:	ldr	r1, [pc, r1]
   28cec:	str	r1, [r0, #216]	; 0xd8
   28cf0:	ldr	r0, [r4]
   28cf4:	ldr	r1, [pc, #1600]	; 2933c <myhtml_tokenizer_state_init@@Base+0x898>
   28cf8:	ldr	r1, [pc, r1]
   28cfc:	str	r1, [r0, #272]	; 0x110
   28d00:	ldr	r0, [r4]
   28d04:	ldr	r1, [pc, #1588]	; 29340 <myhtml_tokenizer_state_init@@Base+0x89c>
   28d08:	ldr	r1, [pc, r1]
   28d0c:	str	r1, [r0, #224]	; 0xe0
   28d10:	ldr	r0, [r4]
   28d14:	ldr	r1, [pc, #1576]	; 29344 <myhtml_tokenizer_state_init@@Base+0x8a0>
   28d18:	ldr	r1, [pc, r1]
   28d1c:	str	r1, [r0, #228]	; 0xe4
   28d20:	ldr	r0, [r4]
   28d24:	ldr	r1, [pc, #1564]	; 29348 <myhtml_tokenizer_state_init@@Base+0x8a4>
   28d28:	ldr	r1, [pc, r1]
   28d2c:	str	r1, [r0, #232]	; 0xe8
   28d30:	ldr	r0, [r4]
   28d34:	ldr	r1, [pc, #1552]	; 2934c <myhtml_tokenizer_state_init@@Base+0x8a8>
   28d38:	ldr	r1, [pc, r1]
   28d3c:	str	r1, [r0, #236]	; 0xec
   28d40:	ldr	r0, [r4]
   28d44:	ldr	r1, [pc, #1540]	; 29350 <myhtml_tokenizer_state_init@@Base+0x8ac>
   28d48:	ldr	r1, [pc, r1]
   28d4c:	str	r1, [r0, #252]	; 0xfc
   28d50:	ldr	r0, [r4]
   28d54:	ldr	r1, [pc, #1528]	; 29354 <myhtml_tokenizer_state_init@@Base+0x8b0>
   28d58:	ldr	r1, [pc, r1]
   28d5c:	str	r1, [r0, #256]	; 0x100
   28d60:	ldr	r0, [r4]
   28d64:	ldr	r1, [pc, #1516]	; 29358 <myhtml_tokenizer_state_init@@Base+0x8b4>
   28d68:	ldr	r1, [pc, r1]
   28d6c:	str	r1, [r0, #260]	; 0x104
   28d70:	ldr	r0, [r4]
   28d74:	ldr	r1, [pc, #1504]	; 2935c <myhtml_tokenizer_state_init@@Base+0x8b8>
   28d78:	ldr	r1, [pc, r1]
   28d7c:	str	r1, [r0, #264]	; 0x108
   28d80:	ldr	r0, [r4]
   28d84:	ldr	r1, [pc, #1492]	; 29360 <myhtml_tokenizer_state_init@@Base+0x8bc>
   28d88:	ldr	r1, [pc, r1]
   28d8c:	str	r1, [r0, #20]
   28d90:	ldr	r0, [r4]
   28d94:	ldr	r1, [pc, #1480]	; 29364 <myhtml_tokenizer_state_init@@Base+0x8c0>
   28d98:	ldr	r1, [pc, r1]
   28d9c:	str	r1, [r0, #64]	; 0x40
   28da0:	ldr	r0, [r4]
   28da4:	ldr	r1, [pc, #1468]	; 29368 <myhtml_tokenizer_state_init@@Base+0x8c4>
   28da8:	ldr	r1, [pc, r1]
   28dac:	str	r1, [r0, #68]	; 0x44
   28db0:	ldr	r0, [r4]
   28db4:	ldr	r1, [pc, #1456]	; 2936c <myhtml_tokenizer_state_init@@Base+0x8c8>
   28db8:	ldr	r1, [pc, r1]
   28dbc:	str	r1, [r0, #72]	; 0x48
   28dc0:	ldr	r0, [r4]
   28dc4:	ldr	r1, [pc, #1444]	; 29370 <myhtml_tokenizer_state_init@@Base+0x8cc>
   28dc8:	ldr	r1, [pc, r1]
   28dcc:	str	r1, [r0, #76]	; 0x4c
   28dd0:	ldr	r0, [r4]
   28dd4:	ldr	r1, [pc, #1432]	; 29374 <myhtml_tokenizer_state_init@@Base+0x8d0>
   28dd8:	ldr	r1, [pc, r1]
   28ddc:	str	r1, [r0, #80]	; 0x50
   28de0:	ldr	r0, [r4]
   28de4:	ldr	r1, [pc, #1420]	; 29378 <myhtml_tokenizer_state_init@@Base+0x8d4>
   28de8:	ldr	r1, [pc, r1]
   28dec:	str	r1, [r0, #84]	; 0x54
   28df0:	ldr	r0, [r4]
   28df4:	ldr	r1, [pc, #1408]	; 2937c <myhtml_tokenizer_state_init@@Base+0x8d8>
   28df8:	ldr	r1, [pc, r1]
   28dfc:	str	r1, [r0, #88]	; 0x58
   28e00:	ldr	r0, [r4]
   28e04:	ldr	r1, [pc, #1396]	; 29380 <myhtml_tokenizer_state_init@@Base+0x8dc>
   28e08:	ldr	r1, [pc, r1]
   28e0c:	str	r1, [r0, #92]	; 0x5c
   28e10:	ldr	r0, [r4]
   28e14:	ldr	r1, [pc, #1384]	; 29384 <myhtml_tokenizer_state_init@@Base+0x8e0>
   28e18:	ldr	r1, [pc, r1]
   28e1c:	str	r1, [r0, #96]	; 0x60
   28e20:	ldr	r0, [r4]
   28e24:	ldr	r1, [pc, #1372]	; 29388 <myhtml_tokenizer_state_init@@Base+0x8e4>
   28e28:	ldr	r1, [pc, r1]
   28e2c:	str	r1, [r0, #100]	; 0x64
   28e30:	ldr	r0, [r4]
   28e34:	ldr	r1, [pc, #1360]	; 2938c <myhtml_tokenizer_state_init@@Base+0x8e8>
   28e38:	ldr	r1, [pc, r1]
   28e3c:	str	r1, [r0, #104]	; 0x68
   28e40:	ldr	r0, [r4]
   28e44:	ldr	r1, [pc, #1348]	; 29390 <myhtml_tokenizer_state_init@@Base+0x8ec>
   28e48:	ldr	r1, [pc, r1]
   28e4c:	str	r1, [r0, #108]	; 0x6c
   28e50:	ldr	r0, [r4]
   28e54:	ldr	r1, [pc, #1336]	; 29394 <myhtml_tokenizer_state_init@@Base+0x8f0>
   28e58:	ldr	r1, [pc, r1]
   28e5c:	str	r1, [r0, #112]	; 0x70
   28e60:	ldr	r0, [r4]
   28e64:	ldr	r1, [pc, #1324]	; 29398 <myhtml_tokenizer_state_init@@Base+0x8f4>
   28e68:	ldr	r1, [pc, r1]
   28e6c:	str	r1, [r0, #116]	; 0x74
   28e70:	ldr	r0, [r4]
   28e74:	ldr	r1, [pc, #1312]	; 2939c <myhtml_tokenizer_state_init@@Base+0x8f8>
   28e78:	ldr	r1, [pc, r1]
   28e7c:	str	r1, [r0, #120]	; 0x78
   28e80:	ldr	r0, [r4]
   28e84:	ldr	r1, [pc, #1300]	; 293a0 <myhtml_tokenizer_state_init@@Base+0x8fc>
   28e88:	ldr	r1, [pc, r1]
   28e8c:	str	r1, [r0, #124]	; 0x7c
   28e90:	ldr	r0, [r4]
   28e94:	ldr	r1, [pc, #1288]	; 293a4 <myhtml_tokenizer_state_init@@Base+0x900>
   28e98:	ldr	r1, [pc, r1]
   28e9c:	str	r1, [r0, #128]	; 0x80
   28ea0:	ldr	r0, [r4]
   28ea4:	ldr	r1, [pc, #1276]	; 293a8 <myhtml_tokenizer_state_init@@Base+0x904>
   28ea8:	ldr	r1, [pc, r1]
   28eac:	str	r1, [r0, #276]	; 0x114
   28eb0:	ldr	r0, [r4]
   28eb4:	ldr	r1, [pc, #1264]	; 293ac <myhtml_tokenizer_state_init@@Base+0x908>
   28eb8:	ldr	r1, [pc, r1]
   28ebc:	str	r1, [r0, #280]	; 0x118
   28ec0:	ldr	r0, [r4]
   28ec4:	ldr	r1, [pc, #1252]	; 293b0 <myhtml_tokenizer_state_init@@Base+0x90c>
   28ec8:	ldr	r1, [pc, r1]
   28ecc:	str	r1, [r0, #308]	; 0x134
   28ed0:	ldr	r0, [r4]
   28ed4:	ldr	r1, [pc, #1240]	; 293b4 <myhtml_tokenizer_state_init@@Base+0x910>
   28ed8:	ldr	r1, [pc, r1]
   28edc:	str	r1, [r0, #316]	; 0x13c
   28ee0:	ldr	r0, [r4]
   28ee4:	ldr	r1, [pc, #1228]	; 293b8 <myhtml_tokenizer_state_init@@Base+0x914>
   28ee8:	ldr	r1, [pc, r1]
   28eec:	str	r1, [r0, #312]	; 0x138
   28ef0:	ldr	r0, [r4]
   28ef4:	ldr	r1, [pc, #1216]	; 293bc <myhtml_tokenizer_state_init@@Base+0x918>
   28ef8:	ldr	r1, [pc, r1]
   28efc:	str	r1, [r0, #448]	; 0x1c0
   28f00:	ldr	r0, [r4]
   28f04:	ldr	r1, [pc, #1204]	; 293c0 <myhtml_tokenizer_state_init@@Base+0x91c>
   28f08:	ldr	r1, [pc, r1]
   28f0c:	str	r1, [r0, #456]	; 0x1c8
   28f10:	ldr	r0, [r4]
   28f14:	ldr	r1, [pc, #1192]	; 293c4 <myhtml_tokenizer_state_init@@Base+0x920>
   28f18:	ldr	r1, [pc, r1]
   28f1c:	str	r1, [r0, #412]	; 0x19c
   28f20:	ldr	r0, [r4]
   28f24:	ldr	r1, [pc, #1180]	; 293c8 <myhtml_tokenizer_state_init@@Base+0x924>
   28f28:	ldr	r1, [pc, r1]
   28f2c:	str	r1, [r0, #416]	; 0x1a0
   28f30:	ldr	r0, [r4]
   28f34:	ldr	r1, [pc, #1168]	; 293cc <myhtml_tokenizer_state_init@@Base+0x928>
   28f38:	ldr	r1, [pc, r1]
   28f3c:	str	r1, [r0, #420]	; 0x1a4
   28f40:	ldr	r0, [r4]
   28f44:	ldr	r1, [pc, #1156]	; 293d0 <myhtml_tokenizer_state_init@@Base+0x92c>
   28f48:	ldr	r1, [pc, r1]
   28f4c:	str	r1, [r0, #424]	; 0x1a8
   28f50:	ldr	r0, [r4]
   28f54:	ldr	r1, [pc, #1144]	; 293d4 <myhtml_tokenizer_state_init@@Base+0x930>
   28f58:	ldr	r1, [pc, r1]
   28f5c:	str	r1, [r0, #428]	; 0x1ac
   28f60:	ldr	r0, [r4]
   28f64:	ldr	r1, [pc, #1132]	; 293d8 <myhtml_tokenizer_state_init@@Base+0x934>
   28f68:	ldr	r1, [pc, r1]
   28f6c:	str	r1, [r0, #432]	; 0x1b0
   28f70:	ldr	r0, [r4]
   28f74:	ldr	r1, [pc, #1120]	; 293dc <myhtml_tokenizer_state_init@@Base+0x938>
   28f78:	ldr	r1, [pc, r1]
   28f7c:	str	r1, [r0, #436]	; 0x1b4
   28f80:	ldr	r0, [r4]
   28f84:	ldr	r1, [pc, #1108]	; 293e0 <myhtml_tokenizer_state_init@@Base+0x93c>
   28f88:	ldr	r1, [pc, r1]
   28f8c:	str	r1, [r0, #444]	; 0x1bc
   28f90:	ldr	r0, [r4]
   28f94:	ldr	r1, [pc, #1096]	; 293e4 <myhtml_tokenizer_state_init@@Base+0x940>
   28f98:	ldr	r1, [pc, r1]
   28f9c:	str	r1, [r0, #460]	; 0x1cc
   28fa0:	ldr	r0, [r4]
   28fa4:	ldr	r1, [pc, #1084]	; 293e8 <myhtml_tokenizer_state_init@@Base+0x944>
   28fa8:	ldr	r1, [pc, r1]
   28fac:	str	r1, [r0, #464]	; 0x1d0
   28fb0:	ldr	r0, [r4]
   28fb4:	ldr	r1, [pc, #1072]	; 293ec <myhtml_tokenizer_state_init@@Base+0x948>
   28fb8:	ldr	r1, [pc, r1]
   28fbc:	str	r1, [r0, #468]	; 0x1d4
   28fc0:	ldr	r0, [r4]
   28fc4:	ldr	r1, [pc, #1060]	; 293f0 <myhtml_tokenizer_state_init@@Base+0x94c>
   28fc8:	ldr	r1, [pc, r1]
   28fcc:	str	r1, [r0, #476]	; 0x1dc
   28fd0:	ldr	r0, [r4]
   28fd4:	ldr	r1, [pc, #1048]	; 293f4 <myhtml_tokenizer_state_init@@Base+0x950>
   28fd8:	ldr	r1, [pc, r1]
   28fdc:	str	r1, [r0, #472]	; 0x1d8
   28fe0:	ldr	r0, [r4]
   28fe4:	ldr	r1, [pc, #1036]	; 293f8 <myhtml_tokenizer_state_init@@Base+0x954>
   28fe8:	ldr	r1, [pc, r1]
   28fec:	str	r1, [r0, #480]	; 0x1e0
   28ff0:	ldr	r0, [r4]
   28ff4:	ldr	r1, [pc, #1024]	; 293fc <myhtml_tokenizer_state_init@@Base+0x958>
   28ff8:	ldr	r1, [pc, r1]
   28ffc:	str	r1, [r0, #452]	; 0x1c4
   29000:	ldr	r0, [r4]
   29004:	ldr	r1, [pc, #1012]	; 29400 <myhtml_tokenizer_state_init@@Base+0x95c>
   29008:	ldr	r1, [pc, r1]
   2900c:	str	r1, [r0, #548]	; 0x224
   29010:	ldr	r0, [r4]
   29014:	ldr	r1, [pc, #1000]	; 29404 <myhtml_tokenizer_state_init@@Base+0x960>
   29018:	ldr	r1, [pc, r1]
   2901c:	str	r1, [r0, #288]	; 0x120
   29020:	ldr	r0, [r4]
   29024:	ldr	r1, [pc, #988]	; 29408 <myhtml_tokenizer_state_init@@Base+0x964>
   29028:	ldr	r1, [pc, r1]
   2902c:	str	r1, [r0, #320]	; 0x140
   29030:	ldr	r0, [r4]
   29034:	ldr	r1, [pc, #976]	; 2940c <myhtml_tokenizer_state_init@@Base+0x968>
   29038:	ldr	r1, [pc, r1]
   2903c:	str	r1, [r0, #324]	; 0x144
   29040:	ldr	r0, [r4]
   29044:	ldr	r1, [pc, #964]	; 29410 <myhtml_tokenizer_state_init@@Base+0x96c>
   29048:	ldr	r1, [pc, r1]
   2904c:	str	r1, [r0, #328]	; 0x148
   29050:	ldr	r0, [r4]
   29054:	ldr	r1, [pc, #952]	; 29414 <myhtml_tokenizer_state_init@@Base+0x970>
   29058:	ldr	r1, [pc, r1]
   2905c:	str	r1, [r0, #296]	; 0x128
   29060:	ldr	r0, [r4]
   29064:	ldr	r1, [pc, #940]	; 29418 <myhtml_tokenizer_state_init@@Base+0x974>
   29068:	ldr	r1, [pc, r1]
   2906c:	str	r1, [r0, #332]	; 0x14c
   29070:	ldr	r0, [r4]
   29074:	ldr	r1, [pc, #928]	; 2941c <myhtml_tokenizer_state_init@@Base+0x978>
   29078:	ldr	r1, [pc, r1]
   2907c:	str	r1, [r0, #336]	; 0x150
   29080:	ldr	r0, [r4]
   29084:	ldr	r1, [pc, #916]	; 29420 <myhtml_tokenizer_state_init@@Base+0x97c>
   29088:	ldr	r1, [pc, r1]
   2908c:	str	r1, [r0, #340]	; 0x154
   29090:	ldr	r0, [r4]
   29094:	ldr	r1, [pc, #904]	; 29424 <myhtml_tokenizer_state_init@@Base+0x980>
   29098:	ldr	r1, [pc, r1]
   2909c:	str	r1, [r0, #304]	; 0x130
   290a0:	ldr	r0, [r4]
   290a4:	ldr	r1, [pc, #892]	; 29428 <myhtml_tokenizer_state_init@@Base+0x984>
   290a8:	ldr	r1, [pc, r1]
   290ac:	str	r1, [r0, #484]	; 0x1e4
   290b0:	ldr	r0, [r4]
   290b4:	ldr	r1, [pc, #880]	; 2942c <myhtml_tokenizer_state_init@@Base+0x988>
   290b8:	ldr	r1, [pc, r1]
   290bc:	str	r1, [r0, #488]	; 0x1e8
   290c0:	ldr	r0, [r4]
   290c4:	ldr	r1, [pc, #868]	; 29430 <myhtml_tokenizer_state_init@@Base+0x98c>
   290c8:	ldr	r1, [pc, r1]
   290cc:	str	r1, [r0, #492]	; 0x1ec
   290d0:	ldr	r0, [r4]
   290d4:	ldr	r1, [pc, #856]	; 29434 <myhtml_tokenizer_state_init@@Base+0x990>
   290d8:	ldr	r1, [pc, r1]
   290dc:	str	r1, [r0, #496]	; 0x1f0
   290e0:	ldr	r0, [r4]
   290e4:	ldr	r1, [pc, #844]	; 29438 <myhtml_tokenizer_state_init@@Base+0x994>
   290e8:	ldr	r1, [pc, r1]
   290ec:	str	r1, [r0, #552]	; 0x228
   290f0:	ldr	r0, [r4]
   290f4:	ldr	r1, [pc, #832]	; 2943c <myhtml_tokenizer_state_init@@Base+0x998>
   290f8:	ldr	r1, [pc, r1]
   290fc:	str	r1, [r0, #504]	; 0x1f8
   29100:	ldr	r0, [r4]
   29104:	ldr	r1, [pc, #820]	; 29440 <myhtml_tokenizer_state_init@@Base+0x99c>
   29108:	ldr	r1, [pc, r1]
   2910c:	str	r1, [r0, #508]	; 0x1fc
   29110:	ldr	r0, [r4]
   29114:	ldr	r1, [pc, #808]	; 29444 <myhtml_tokenizer_state_init@@Base+0x9a0>
   29118:	ldr	r1, [pc, r1]
   2911c:	str	r1, [r0, #512]	; 0x200
   29120:	ldr	r0, [r4]
   29124:	ldr	r1, [pc, #796]	; 29448 <myhtml_tokenizer_state_init@@Base+0x9a4>
   29128:	ldr	r1, [pc, r1]
   2912c:	str	r1, [r0, #516]	; 0x204
   29130:	ldr	r0, [r4]
   29134:	ldr	r1, [pc, #784]	; 2944c <myhtml_tokenizer_state_init@@Base+0x9a8>
   29138:	ldr	r1, [pc, r1]
   2913c:	str	r1, [r0, #532]	; 0x214
   29140:	ldr	r0, [r4]
   29144:	ldr	r1, [pc, #772]	; 29450 <myhtml_tokenizer_state_init@@Base+0x9ac>
   29148:	ldr	r1, [pc, r1]
   2914c:	str	r1, [r0, #536]	; 0x218
   29150:	ldr	r0, [r4]
   29154:	ldr	r1, [pc, #760]	; 29454 <myhtml_tokenizer_state_init@@Base+0x9b0>
   29158:	ldr	r1, [pc, r1]
   2915c:	str	r1, [r0, #540]	; 0x21c
   29160:	ldr	r0, [r4]
   29164:	ldr	r1, [pc, #748]	; 29458 <myhtml_tokenizer_state_init@@Base+0x9b4>
   29168:	ldr	r1, [pc, r1]
   2916c:	str	r1, [r0, #544]	; 0x220
   29170:	ldr	r0, [r4]
   29174:	ldr	r1, [pc, #736]	; 2945c <myhtml_tokenizer_state_init@@Base+0x9b8>
   29178:	ldr	r1, [pc, r1]
   2917c:	str	r1, [r0, #300]	; 0x12c
   29180:	ldr	r0, [r4]
   29184:	ldr	r1, [pc, #724]	; 29460 <myhtml_tokenizer_state_init@@Base+0x9bc>
   29188:	ldr	r1, [pc, r1]
   2918c:	str	r1, [r0, #344]	; 0x158
   29190:	ldr	r0, [r4]
   29194:	ldr	r1, [pc, #712]	; 29464 <myhtml_tokenizer_state_init@@Base+0x9c0>
   29198:	ldr	r1, [pc, r1]
   2919c:	str	r1, [r0, #348]	; 0x15c
   291a0:	ldr	r0, [r4]
   291a4:	ldr	r1, [pc, #700]	; 29468 <myhtml_tokenizer_state_init@@Base+0x9c4>
   291a8:	ldr	r1, [pc, r1]
   291ac:	str	r1, [r0, #352]	; 0x160
   291b0:	ldr	r0, [r4]
   291b4:	ldr	r1, [pc, #688]	; 2946c <myhtml_tokenizer_state_init@@Base+0x9c8>
   291b8:	ldr	r1, [pc, r1]
   291bc:	str	r1, [r0, #356]	; 0x164
   291c0:	ldr	r0, [r4]
   291c4:	ldr	r1, [pc, #676]	; 29470 <myhtml_tokenizer_state_init@@Base+0x9cc>
   291c8:	ldr	r1, [pc, r1]
   291cc:	str	r1, [r0, #360]	; 0x168
   291d0:	ldr	r0, [r4]
   291d4:	ldr	r1, [pc, #664]	; 29474 <myhtml_tokenizer_state_init@@Base+0x9d0>
   291d8:	ldr	r1, [pc, r1]
   291dc:	str	r1, [r0, #364]	; 0x16c
   291e0:	ldr	r0, [r4]
   291e4:	ldr	r1, [pc, #652]	; 29478 <myhtml_tokenizer_state_init@@Base+0x9d4>
   291e8:	ldr	r1, [pc, r1]
   291ec:	str	r1, [r0, #368]	; 0x170
   291f0:	ldr	r0, [r4]
   291f4:	ldr	r1, [pc, #640]	; 2947c <myhtml_tokenizer_state_init@@Base+0x9d8>
   291f8:	ldr	r1, [pc, r1]
   291fc:	str	r1, [r0, #372]	; 0x174
   29200:	ldr	r0, [r4]
   29204:	ldr	r1, [pc, #628]	; 29480 <myhtml_tokenizer_state_init@@Base+0x9dc>
   29208:	ldr	r1, [pc, r1]
   2920c:	str	r1, [r0, #376]	; 0x178
   29210:	ldr	r0, [r4]
   29214:	ldr	r1, [pc, #616]	; 29484 <myhtml_tokenizer_state_init@@Base+0x9e0>
   29218:	ldr	r1, [pc, r1]
   2921c:	str	r1, [r0, #380]	; 0x17c
   29220:	ldr	r0, [r4]
   29224:	ldr	r1, [pc, #604]	; 29488 <myhtml_tokenizer_state_init@@Base+0x9e4>
   29228:	ldr	r1, [pc, r1]
   2922c:	str	r1, [r0, #384]	; 0x180
   29230:	ldr	r0, [r4]
   29234:	ldr	r1, [pc, #592]	; 2948c <myhtml_tokenizer_state_init@@Base+0x9e8>
   29238:	ldr	r1, [pc, r1]
   2923c:	str	r1, [r0, #388]	; 0x184
   29240:	ldr	r0, [r4]
   29244:	ldr	r1, [pc, #580]	; 29490 <myhtml_tokenizer_state_init@@Base+0x9ec>
   29248:	ldr	r1, [pc, r1]
   2924c:	str	r1, [r0, #392]	; 0x188
   29250:	ldr	r0, [r4]
   29254:	ldr	r1, [pc, #568]	; 29494 <myhtml_tokenizer_state_init@@Base+0x9f0>
   29258:	ldr	r1, [pc, r1]
   2925c:	str	r1, [r0, #396]	; 0x18c
   29260:	ldr	r0, [r4]
   29264:	ldr	r1, [pc, #556]	; 29498 <myhtml_tokenizer_state_init@@Base+0x9f4>
   29268:	ldr	r1, [pc, r1]
   2926c:	str	r1, [r0, #400]	; 0x190
   29270:	ldr	r0, [r4]
   29274:	ldr	r1, [pc, #544]	; 2949c <myhtml_tokenizer_state_init@@Base+0x9f8>
   29278:	ldr	r1, [pc, r1]
   2927c:	str	r1, [r0, #404]	; 0x194
   29280:	ldr	r0, [r4]
   29284:	ldr	r1, [pc, #532]	; 294a0 <myhtml_tokenizer_state_init@@Base+0x9fc>
   29288:	ldr	r1, [pc, r1]
   2928c:	str	r1, [r0, #408]	; 0x198
   29290:	ldr	r0, [r4]
   29294:	ldr	r1, [pc, #520]	; 294a4 <myhtml_tokenizer_state_init@@Base+0xa00>
   29298:	ldr	r1, [pc, r1]
   2929c:	str	r1, [r0, #556]	; 0x22c
   292a0:	mov	r0, #0
   292a4:	pop	{r4, sl, fp, pc}
   292a8:	movw	r0, #37164	; 0x912c
   292ac:	pop	{r4, sl, fp, pc}
   292b0:	andeq	lr, lr, r4, asr ip
   292b4:	andeq	lr, lr, r4, ror #27
   292b8:	muleq	lr, r0, sp
   292bc:	andeq	lr, lr, ip, ror #27
   292c0:	andeq	lr, lr, r4, lsl #24
   292c4:	andeq	lr, lr, r4, ror #24
   292c8:	andeq	lr, lr, r0, lsr sp
   292cc:	andeq	lr, lr, ip, asr fp
   292d0:	andeq	lr, lr, ip, ror sp
   292d4:	andeq	lr, lr, r8, lsr #27
   292d8:	andeq	lr, lr, r4, asr #26
   292dc:	andeq	lr, lr, r0, lsr #26
   292e0:	andeq	lr, lr, r4, asr sp
   292e4:	andeq	lr, lr, r0, lsr ip
   292e8:	andeq	lr, lr, ip, asr #26
   292ec:	andeq	lr, lr, r0, lsr ip
   292f0:	andeq	lr, lr, ip, asr #25
   292f4:	andeq	lr, lr, r0, asr #21
   292f8:	andeq	lr, lr, r4, asr fp
   292fc:	andeq	lr, lr, r8, lsr #24
   29300:	andeq	lr, lr, ip, lsl fp
   29304:	andeq	lr, lr, r8, lsr sp
   29308:	andeq	lr, lr, r8, lsl #24
   2930c:	andeq	lr, lr, ip, lsl fp
   29310:	andeq	lr, lr, r0, ror sl
   29314:	andeq	lr, lr, r0, lsl #22
   29318:	andeq	lr, lr, r0, lsr #21
   2931c:	andeq	lr, lr, r0, lsl #22
   29320:	andeq	lr, lr, ip, asr sl
   29324:	andeq	lr, lr, r0, asr ip
   29328:	muleq	lr, r0, ip
   2932c:	andeq	lr, lr, r0, ror #21
   29330:	ldrdeq	lr, [lr], -r8
   29334:	andeq	lr, lr, r8, lsl #22
   29338:	andeq	lr, lr, r0, lsr ip
   2933c:	andeq	lr, lr, r0, lsl fp
   29340:	andeq	lr, lr, r8, lsr sl
   29344:	andeq	lr, lr, r0, ror #21
   29348:	andeq	lr, lr, r4, ror #21
   2934c:	andeq	lr, lr, r0, lsl ip
   29350:			; <UNDEFINED> instruction: 0x000ee9b0
   29354:	andeq	lr, lr, r0, asr sl
   29358:	andeq	lr, lr, r4, ror #19
   2935c:	andeq	lr, lr, r0, asr #20
   29360:	andeq	lr, lr, r0, asr #19
   29364:	andeq	lr, lr, r8, lsl sl
   29368:	andeq	lr, lr, r4, asr #19
   2936c:	andeq	lr, lr, r8, lsr fp
   29370:	andeq	lr, lr, r0, asr #19
   29374:	andeq	lr, lr, ip, lsl #20
   29378:	andeq	lr, lr, r8, lsr #21
   2937c:	andeq	lr, lr, r4, asr #19
   29380:	ldrdeq	lr, [lr], -r4
   29384:	andeq	lr, lr, ip, lsl #22
   29388:	strdeq	lr, [lr], -r8
   2938c:	strdeq	lr, [lr], -r4
   29390:	andeq	lr, lr, ip, asr r9
   29394:	andeq	lr, lr, ip, ror sl
   29398:	andeq	lr, lr, ip, asr r8
   2939c:	andeq	lr, lr, r4, ror #17
   293a0:	andeq	lr, lr, r8, asr #17
   293a4:	andeq	lr, lr, r4, lsl #20
   293a8:	andeq	lr, lr, r8, lsl #17
   293ac:			; <UNDEFINED> instruction: 0x000ee8bc
   293b0:	ldrdeq	lr, [lr], -r4
   293b4:	andeq	lr, lr, r4, asr #20
   293b8:	andeq	lr, lr, r8, lsr sl
   293bc:	andeq	lr, lr, r8, ror #18
   293c0:	andeq	lr, lr, r4, ror r9
   293c4:	andeq	lr, lr, r8, ror #18
   293c8:	andeq	lr, lr, r0, lsr #19
   293cc:			; <UNDEFINED> instruction: 0x000ee7b0
   293d0:	strdeq	lr, [lr], -r4
   293d4:	andeq	lr, lr, r8, ror #16
   293d8:	andeq	lr, lr, r0, lsr #18
   293dc:	strdeq	lr, [lr], -r8
   293e0:	andeq	lr, lr, r8, asr #17
   293e4:	andeq	lr, lr, r0, ror #18
   293e8:			; <UNDEFINED> instruction: 0x000ee7bc
   293ec:	andeq	lr, lr, r4, ror r8
   293f0:	andeq	lr, lr, r0, asr r7
   293f4:	andeq	lr, lr, ip, asr r9
   293f8:	andeq	lr, lr, r8, lsr #14
   293fc:	strdeq	lr, [lr], -r8
   29400:	andeq	lr, lr, ip, ror r7
   29404:	andeq	lr, lr, r0, asr #17
   29408:	andeq	lr, lr, r0, lsl #14
   2940c:	andeq	lr, lr, r4, lsr r8
   29410:	andeq	lr, lr, r0, lsl #16
   29414:	andeq	lr, lr, r8, lsr #15
   29418:	andeq	lr, lr, r4, ror #17
   2941c:	strdeq	lr, [lr], -ip
   29420:			; <UNDEFINED> instruction: 0x000ee7b8
   29424:	andeq	lr, lr, ip, lsr r7
   29428:	andeq	lr, lr, r0, lsl #12
   2942c:	andeq	lr, lr, ip, ror #15
   29430:	andeq	lr, lr, ip, ror #11
   29434:	strdeq	lr, [lr], -r0
   29438:	andeq	lr, lr, ip, ror #11
   2943c:	andeq	lr, lr, r0, lsr #14
   29440:	andeq	lr, lr, r8, asr #15
   29444:	strdeq	lr, [lr], -ip
   29448:	andeq	lr, lr, r4, lsl r8
   2944c:	ldrdeq	lr, [lr], -r8
   29450:	strdeq	lr, [lr], -ip
   29454:			; <UNDEFINED> instruction: 0x000ee7b0
   29458:	andeq	lr, lr, r4, lsl #13
   2945c:	andeq	lr, lr, ip, asr #11
   29460:	muleq	lr, r4, r6
   29464:	ldrdeq	lr, [lr], -r0
   29468:			; <UNDEFINED> instruction: 0x000ee6bc
   2946c:	andeq	lr, lr, r8, lsl #14
   29470:	ldrdeq	lr, [lr], -r8
   29474:	andeq	lr, lr, r4, asr #9
   29478:	andeq	lr, lr, r4, asr #14
   2947c:	andeq	lr, lr, r4, ror #12
   29480:	andeq	lr, lr, ip, lsr r7
   29484:	andeq	lr, lr, r4, asr #9
   29488:	andeq	lr, lr, ip, lsr #12
   2948c:	andeq	lr, lr, ip, asr #12
   29490:	andeq	lr, lr, r8, lsl #11
   29494:	andeq	lr, lr, r4, ror r6
   29498:	andeq	lr, lr, r4, ror #10
   2949c:	ldrdeq	lr, [lr], -r4
   294a0:	ldrdeq	lr, [lr], -r8
   294a4:	strdeq	lr, [lr], -ip

000294a8 <myhtml_tokenizer_state_destroy@@Base>:
   294a8:	ldr	r0, [r0, #24]
   294ac:	cmp	r0, #0
   294b0:	bxeq	lr
   294b4:	b	12184 <mycore_free@plt>

000294b8 <myhtml_tokenizer_state_doctype@@Base>:
   294b8:	mov	r1, #52	; 0x34
   294bc:	str	r1, [r0, #160]	; 0xa0
   294c0:	mov	r0, r3
   294c4:	bx	lr

000294c8 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   294c8:	push	{r4, r5, r6, r7, fp, lr}
   294cc:	add	fp, sp, #16
   294d0:	mov	r4, r3
   294d4:	mov	r3, r1
   294d8:	mov	r7, r0
   294dc:	ldrb	r0, [r2, r4]
   294e0:	sub	r5, r0, #9
   294e4:	ldr	r0, [fp, #8]
   294e8:	cmp	r5, #23
   294ec:	bhi	29530 <myhtml_tokenizer_state_before_doctype_name@@Base+0x68>
   294f0:	mov	r6, #1
   294f4:	movw	r1, #27
   294f8:	movt	r1, #128	; 0x80
   294fc:	tst	r1, r6, lsl r5
   29500:	beq	29530 <myhtml_tokenizer_state_before_doctype_name@@Base+0x68>
   29504:	cmp	r4, r0
   29508:	bcs	29530 <myhtml_tokenizer_state_before_doctype_name@@Base+0x68>
   2950c:	mov	r5, #1
   29510:	ldrb	r6, [r2, r4]
   29514:	sub	r6, r6, #9
   29518:	cmp	r6, #23
   2951c:	bhi	29530 <myhtml_tokenizer_state_before_doctype_name@@Base+0x68>
   29520:	tst	r1, r5, lsl r6
   29524:	addne	r4, r4, #1
   29528:	cmpne	r0, r4
   2952c:	bne	29510 <myhtml_tokenizer_state_before_doctype_name@@Base+0x48>
   29530:	cmp	r4, r0
   29534:	bcs	29610 <myhtml_tokenizer_state_before_doctype_name@@Base+0x148>
   29538:	ldrb	r0, [r2, r4]
   2953c:	cmp	r0, #62	; 0x3e
   29540:	bne	29590 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc8>
   29544:	mov	r0, #1
   29548:	str	r0, [r7, #176]	; 0xb0
   2954c:	ldr	r0, [r7, #192]	; 0xc0
   29550:	add	r4, r4, #1
   29554:	add	r0, r0, r4
   29558:	ldr	r1, [r3, #32]
   2955c:	sub	r0, r0, r1
   29560:	str	r0, [r3, #36]	; 0x24
   29564:	mov	r0, r7
   29568:	mov	r1, r4
   2956c:	mov	r2, r3
   29570:	bl	114b8 <myhtml_queue_add@plt>
   29574:	cmp	r0, #0
   29578:	beq	295c4 <myhtml_tokenizer_state_before_doctype_name@@Base+0xfc>
   2957c:	mov	r0, #69	; 0x45
   29580:	str	r0, [r7, #160]	; 0xa0
   29584:	mov	r4, #0
   29588:	mov	r0, r4
   2958c:	pop	{r4, r5, r6, r7, fp, pc}
   29590:	ldr	r0, [r7, #56]	; 0x38
   29594:	ldr	r1, [r3, #40]	; 0x28
   29598:	cmp	r1, #0
   2959c:	beq	295e4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x11c>
   295a0:	ldr	r1, [r3, #44]	; 0x2c
   295a4:	str	r0, [r1]
   295a8:	str	r1, [r0, #4]
   295ac:	str	r0, [r3, #44]	; 0x2c
   295b0:	mov	r1, #0
   295b4:	str	r1, [r0]
   295b8:	ldr	r0, [r3, #44]	; 0x2c
   295bc:	str	r0, [r7, #56]	; 0x38
   295c0:	b	295f8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x130>
   295c4:	ldr	r0, [r7, #8]
   295c8:	ldr	r1, [r0, #16]
   295cc:	bl	11d1c <myhtml_token_attr_create@plt>
   295d0:	str	r0, [r7, #56]	; 0x38
   295d4:	cmp	r0, #0
   295d8:	beq	2957c <myhtml_tokenizer_state_before_doctype_name@@Base+0xb4>
   295dc:	mov	r0, #0
   295e0:	b	2960c <myhtml_tokenizer_state_before_doctype_name@@Base+0x144>
   295e4:	str	r0, [r3, #40]	; 0x28
   295e8:	str	r0, [r3, #44]	; 0x2c
   295ec:	mov	r1, #0
   295f0:	str	r1, [r0]
   295f4:	str	r1, [r0, #4]
   295f8:	ldr	r0, [r7, #56]	; 0x38
   295fc:	ldr	r1, [r7, #192]	; 0xc0
   29600:	add	r1, r1, r4
   29604:	str	r1, [r0, #48]	; 0x30
   29608:	mov	r0, #53	; 0x35
   2960c:	str	r0, [r7, #160]	; 0xa0
   29610:	mov	r0, r4
   29614:	pop	{r4, r5, r6, r7, fp, pc}

00029618 <myhtml_tokenizer_state_doctype_name@@Base>:
   29618:	push	{r4, r5, fp, lr}
   2961c:	add	fp, sp, #8
   29620:	mov	r4, r3
   29624:	mov	r5, r0
   29628:	ldr	r0, [fp, #8]
   2962c:	cmp	r3, r0
   29630:	bcs	29778 <myhtml_tokenizer_state_doctype_name@@Base+0x160>
   29634:	mov	ip, r1
   29638:	b	29648 <myhtml_tokenizer_state_doctype_name@@Base+0x30>
   2963c:	add	r4, r4, #1
   29640:	cmp	r0, r4
   29644:	beq	29778 <myhtml_tokenizer_state_doctype_name@@Base+0x160>
   29648:	ldrb	r1, [r2, r4]
   2964c:	sub	r1, r1, #9
   29650:	cmp	r1, #53	; 0x35
   29654:	bhi	2963c <myhtml_tokenizer_state_doctype_name@@Base+0x24>
   29658:	add	r3, pc, #4
   2965c:	ldr	r1, [r3, r1, lsl #2]
   29660:	add	pc, r3, r1
   29664:	ldrdeq	r0, [r0], -r8
   29668:	ldrdeq	r0, [r0], -r8
   2966c:			; <UNDEFINED> instruction: 0xffffffd8
   29670:	ldrdeq	r0, [r0], -r8
   29674:	ldrdeq	r0, [r0], -r8
   29678:			; <UNDEFINED> instruction: 0xffffffd8
   2967c:			; <UNDEFINED> instruction: 0xffffffd8
   29680:			; <UNDEFINED> instruction: 0xffffffd8
   29684:			; <UNDEFINED> instruction: 0xffffffd8
   29688:			; <UNDEFINED> instruction: 0xffffffd8
   2968c:			; <UNDEFINED> instruction: 0xffffffd8
   29690:			; <UNDEFINED> instruction: 0xffffffd8
   29694:			; <UNDEFINED> instruction: 0xffffffd8
   29698:			; <UNDEFINED> instruction: 0xffffffd8
   2969c:			; <UNDEFINED> instruction: 0xffffffd8
   296a0:			; <UNDEFINED> instruction: 0xffffffd8
   296a4:			; <UNDEFINED> instruction: 0xffffffd8
   296a8:			; <UNDEFINED> instruction: 0xffffffd8
   296ac:			; <UNDEFINED> instruction: 0xffffffd8
   296b0:			; <UNDEFINED> instruction: 0xffffffd8
   296b4:			; <UNDEFINED> instruction: 0xffffffd8
   296b8:			; <UNDEFINED> instruction: 0xffffffd8
   296bc:			; <UNDEFINED> instruction: 0xffffffd8
   296c0:	ldrdeq	r0, [r0], -r8
   296c4:			; <UNDEFINED> instruction: 0xffffffd8
   296c8:			; <UNDEFINED> instruction: 0xffffffd8
   296cc:			; <UNDEFINED> instruction: 0xffffffd8
   296d0:			; <UNDEFINED> instruction: 0xffffffd8
   296d4:			; <UNDEFINED> instruction: 0xffffffd8
   296d8:			; <UNDEFINED> instruction: 0xffffffd8
   296dc:			; <UNDEFINED> instruction: 0xffffffd8
   296e0:			; <UNDEFINED> instruction: 0xffffffd8
   296e4:			; <UNDEFINED> instruction: 0xffffffd8
   296e8:			; <UNDEFINED> instruction: 0xffffffd8
   296ec:			; <UNDEFINED> instruction: 0xffffffd8
   296f0:			; <UNDEFINED> instruction: 0xffffffd8
   296f4:			; <UNDEFINED> instruction: 0xffffffd8
   296f8:			; <UNDEFINED> instruction: 0xffffffd8
   296fc:			; <UNDEFINED> instruction: 0xffffffd8
   29700:			; <UNDEFINED> instruction: 0xffffffd8
   29704:			; <UNDEFINED> instruction: 0xffffffd8
   29708:			; <UNDEFINED> instruction: 0xffffffd8
   2970c:			; <UNDEFINED> instruction: 0xffffffd8
   29710:			; <UNDEFINED> instruction: 0xffffffd8
   29714:			; <UNDEFINED> instruction: 0xffffffd8
   29718:			; <UNDEFINED> instruction: 0xffffffd8
   2971c:			; <UNDEFINED> instruction: 0xffffffd8
   29720:			; <UNDEFINED> instruction: 0xffffffd8
   29724:			; <UNDEFINED> instruction: 0xffffffd8
   29728:			; <UNDEFINED> instruction: 0xffffffd8
   2972c:			; <UNDEFINED> instruction: 0xffffffd8
   29730:			; <UNDEFINED> instruction: 0xffffffd8
   29734:			; <UNDEFINED> instruction: 0xffffffd8
   29738:	andeq	r0, r0, ip, lsl r1
   2973c:	ldr	r0, [r5, #56]	; 0x38
   29740:	ldr	r1, [r5, #192]	; 0xc0
   29744:	ldr	r2, [r0, #48]	; 0x30
   29748:	sub	r1, r1, r2
   2974c:	add	r1, r1, r4
   29750:	str	r1, [r0, #52]	; 0x34
   29754:	ldr	r0, [r5, #8]
   29758:	ldr	r1, [r0, #16]
   2975c:	bl	11d1c <myhtml_token_attr_create@plt>
   29760:	str	r0, [r5, #56]	; 0x38
   29764:	cmp	r0, #0
   29768:	beq	297c8 <myhtml_tokenizer_state_doctype_name@@Base+0x1b0>
   2976c:	mov	r0, #54	; 0x36
   29770:	str	r0, [r5, #160]	; 0xa0
   29774:	add	r4, r4, #1
   29778:	mov	r0, r4
   2977c:	pop	{r4, r5, fp, pc}
   29780:	ldr	r0, [r5, #56]	; 0x38
   29784:	ldr	r1, [r5, #192]	; 0xc0
   29788:	ldr	r2, [r0, #48]	; 0x30
   2978c:	sub	r2, r1, r2
   29790:	add	r2, r2, r4
   29794:	str	r2, [r0, #52]	; 0x34
   29798:	ldr	r0, [ip, #32]
   2979c:	sub	r0, r1, r0
   297a0:	add	r0, r0, r4
   297a4:	add	r0, r0, #1
   297a8:	str	r0, [ip, #36]	; 0x24
   297ac:	add	r4, r4, #1
   297b0:	mov	r0, r5
   297b4:	mov	r1, r4
   297b8:	mov	r2, ip
   297bc:	bl	114b8 <myhtml_queue_add@plt>
   297c0:	cmp	r0, #0
   297c4:	beq	297dc <myhtml_tokenizer_state_doctype_name@@Base+0x1c4>
   297c8:	mov	r0, #69	; 0x45
   297cc:	str	r0, [r5, #160]	; 0xa0
   297d0:	mov	r4, #0
   297d4:	mov	r0, r4
   297d8:	pop	{r4, r5, fp, pc}
   297dc:	ldr	r0, [r5, #8]
   297e0:	ldr	r1, [r0, #16]
   297e4:	bl	11d1c <myhtml_token_attr_create@plt>
   297e8:	str	r0, [r5, #56]	; 0x38
   297ec:	cmp	r0, #0
   297f0:	beq	297c8 <myhtml_tokenizer_state_doctype_name@@Base+0x1b0>
   297f4:	mov	r0, #0
   297f8:	str	r0, [r5, #160]	; 0xa0
   297fc:	mov	r0, r4
   29800:	pop	{r4, r5, fp, pc}

00029804 <myhtml_tokenizer_state_after_doctype_name@@Base>:
   29804:	push	{r4, r5, r6, r7, fp, lr}
   29808:	add	fp, sp, #16
   2980c:	mov	r4, r3
   29810:	mov	r3, r1
   29814:	mov	r7, r0
   29818:	ldrb	r0, [r2, r4]
   2981c:	sub	r5, r0, #9
   29820:	ldr	r0, [fp, #8]
   29824:	cmp	r5, #23
   29828:	bhi	2986c <myhtml_tokenizer_state_after_doctype_name@@Base+0x68>
   2982c:	mov	r6, #1
   29830:	movw	r1, #27
   29834:	movt	r1, #128	; 0x80
   29838:	tst	r1, r6, lsl r5
   2983c:	beq	2986c <myhtml_tokenizer_state_after_doctype_name@@Base+0x68>
   29840:	cmp	r4, r0
   29844:	bcs	2986c <myhtml_tokenizer_state_after_doctype_name@@Base+0x68>
   29848:	mov	r5, #1
   2984c:	ldrb	r6, [r2, r4]
   29850:	sub	r6, r6, #9
   29854:	cmp	r6, #23
   29858:	bhi	2986c <myhtml_tokenizer_state_after_doctype_name@@Base+0x68>
   2985c:	tst	r1, r5, lsl r6
   29860:	addne	r4, r4, #1
   29864:	cmpne	r0, r4
   29868:	bne	2984c <myhtml_tokenizer_state_after_doctype_name@@Base+0x48>
   2986c:	cmp	r4, r0
   29870:	bcs	298e0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xdc>
   29874:	ldrb	r0, [r2, r4]
   29878:	cmp	r0, #62	; 0x3e
   2987c:	bne	298c4 <myhtml_tokenizer_state_after_doctype_name@@Base+0xc0>
   29880:	ldr	r0, [r7, #192]	; 0xc0
   29884:	add	r4, r4, #1
   29888:	add	r0, r0, r4
   2988c:	ldr	r1, [r3, #32]
   29890:	sub	r0, r0, r1
   29894:	str	r0, [r3, #36]	; 0x24
   29898:	mov	r0, r7
   2989c:	mov	r1, r4
   298a0:	mov	r2, r3
   298a4:	bl	114b8 <myhtml_queue_add@plt>
   298a8:	cmp	r0, #0
   298ac:	beq	298d8 <myhtml_tokenizer_state_after_doctype_name@@Base+0xd4>
   298b0:	mov	r0, #69	; 0x45
   298b4:	str	r0, [r7, #160]	; 0xa0
   298b8:	mov	r4, #0
   298bc:	mov	r0, r4
   298c0:	pop	{r4, r5, r6, r7, fp, pc}
   298c4:	ldr	r0, [r7, #192]	; 0xc0
   298c8:	add	r0, r0, r4
   298cc:	str	r0, [r3, #12]
   298d0:	mov	r0, #68	; 0x44
   298d4:	b	298dc <myhtml_tokenizer_state_after_doctype_name@@Base+0xd8>
   298d8:	mov	r0, #0
   298dc:	str	r0, [r7, #160]	; 0xa0
   298e0:	mov	r0, r4
   298e4:	pop	{r4, r5, r6, r7, fp, pc}

000298e8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   298e8:	push	{r4, r5, r6, r7, fp, lr}
   298ec:	add	fp, sp, #16
   298f0:	mov	r6, r3
   298f4:	mov	r5, r1
   298f8:	mov	r4, r0
   298fc:	ldr	r1, [r0, #192]	; 0xc0
   29900:	ldr	r0, [fp, #8]
   29904:	add	r2, r1, r0
   29908:	ldr	r1, [r5, #12]
   2990c:	add	r3, r1, #6
   29910:	cmp	r3, r2
   29914:	bhi	29970 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x88>
   29918:	mov	r0, r4
   2991c:	mov	r2, #6
   29920:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   29924:	mov	r7, r0
   29928:	ldr	r1, [pc, #356]	; 29a94 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1ac>
   2992c:	add	r1, pc, r1
   29930:	mov	r2, #6
   29934:	bl	11704 <mycore_strncasecmp@plt>
   29938:	cmp	r0, #0
   2993c:	beq	29974 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x8c>
   29940:	ldr	r1, [pc, #336]	; 29a98 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1b0>
   29944:	add	r1, pc, r1
   29948:	mov	r0, r7
   2994c:	mov	r2, #6
   29950:	bl	11704 <mycore_strncasecmp@plt>
   29954:	cmp	r0, #0
   29958:	beq	299a8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xc0>
   2995c:	mov	r0, #66	; 0x42
   29960:	str	r0, [r4, #160]	; 0xa0
   29964:	mov	r0, #1
   29968:	str	r0, [r4, #176]	; 0xb0
   2996c:	mov	r0, r6
   29970:	pop	{r4, r5, r6, r7, fp, pc}
   29974:	ldr	r0, [r4, #56]	; 0x38
   29978:	ldr	r1, [r5, #40]	; 0x28
   2997c:	cmp	r1, #0
   29980:	beq	299dc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xf4>
   29984:	ldr	r1, [r5, #44]	; 0x2c
   29988:	str	r0, [r1]
   2998c:	str	r1, [r0, #4]
   29990:	str	r0, [r5, #44]	; 0x2c
   29994:	mov	r1, #0
   29998:	str	r1, [r0]
   2999c:	ldr	r0, [r5, #44]	; 0x2c
   299a0:	str	r0, [r4, #56]	; 0x38
   299a4:	b	299f0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x108>
   299a8:	ldr	r0, [r4, #56]	; 0x38
   299ac:	ldr	r1, [r5, #40]	; 0x28
   299b0:	cmp	r1, #0
   299b4:	beq	29a24 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x13c>
   299b8:	ldr	r1, [r5, #44]	; 0x2c
   299bc:	str	r0, [r1]
   299c0:	str	r1, [r0, #4]
   299c4:	str	r0, [r5, #44]	; 0x2c
   299c8:	mov	r1, #0
   299cc:	str	r1, [r0]
   299d0:	ldr	r0, [r5, #44]	; 0x2c
   299d4:	str	r0, [r4, #56]	; 0x38
   299d8:	b	29a38 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x150>
   299dc:	str	r0, [r5, #40]	; 0x28
   299e0:	str	r0, [r5, #44]	; 0x2c
   299e4:	mov	r1, #0
   299e8:	str	r1, [r0]
   299ec:	str	r1, [r0, #4]
   299f0:	ldr	r0, [r5, #12]
   299f4:	ldr	r1, [r4, #56]	; 0x38
   299f8:	mov	r2, #6
   299fc:	str	r0, [r1, #56]	; 0x38
   29a00:	str	r2, [r1, #60]	; 0x3c
   29a04:	ldr	r0, [r4, #8]
   29a08:	ldr	r1, [r0, #16]
   29a0c:	bl	11d1c <myhtml_token_attr_create@plt>
   29a10:	str	r0, [r4, #56]	; 0x38
   29a14:	cmp	r0, #0
   29a18:	beq	29a84 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   29a1c:	mov	r0, #56	; 0x38
   29a20:	b	29a68 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x180>
   29a24:	str	r0, [r5, #40]	; 0x28
   29a28:	str	r0, [r5, #44]	; 0x2c
   29a2c:	mov	r1, #0
   29a30:	str	r1, [r0]
   29a34:	str	r1, [r0, #4]
   29a38:	ldr	r0, [r5, #12]
   29a3c:	ldr	r1, [r4, #56]	; 0x38
   29a40:	mov	r2, #6
   29a44:	str	r0, [r1, #56]	; 0x38
   29a48:	str	r2, [r1, #60]	; 0x3c
   29a4c:	ldr	r0, [r4, #8]
   29a50:	ldr	r1, [r0, #16]
   29a54:	bl	11d1c <myhtml_token_attr_create@plt>
   29a58:	str	r0, [r4, #56]	; 0x38
   29a5c:	cmp	r0, #0
   29a60:	beq	29a84 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   29a64:	mov	r0, #59	; 0x3b
   29a68:	str	r0, [r4, #160]	; 0xa0
   29a6c:	ldr	r0, [r5, #12]
   29a70:	ldr	r1, [r4, #76]	; 0x4c
   29a74:	ldr	r1, [r1, #12]
   29a78:	sub	r0, r0, r1
   29a7c:	add	r0, r0, #6
   29a80:	pop	{r4, r5, r6, r7, fp, pc}
   29a84:	mov	r0, #69	; 0x45
   29a88:	str	r0, [r4, #160]	; 0xa0
   29a8c:	mov	r0, #0
   29a90:	pop	{r4, r5, r6, r7, fp, pc}
   29a94:	andeq	r3, sp, r2, lsr #9
   29a98:	muleq	sp, ip, r4

00029a9c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   29a9c:	push	{r4, r5, r6, sl, fp, lr}
   29aa0:	add	fp, sp, #16
   29aa4:	mov	r4, r3
   29aa8:	mov	ip, r1
   29aac:	mov	r6, r0
   29ab0:	ldrb	r0, [r2, r3]
   29ab4:	sub	r3, r0, #9
   29ab8:	ldr	r0, [fp, #8]
   29abc:	cmp	r3, #23
   29ac0:	bhi	29b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   29ac4:	mov	r5, #1
   29ac8:	movw	r1, #27
   29acc:	movt	r1, #128	; 0x80
   29ad0:	tst	r1, r5, lsl r3
   29ad4:	beq	29b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   29ad8:	cmp	r4, r0
   29adc:	bcs	29b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   29ae0:	mov	r3, #1
   29ae4:	ldrb	r5, [r2, r4]
   29ae8:	sub	r5, r5, #9
   29aec:	cmp	r5, #23
   29af0:	bhi	29b04 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x68>
   29af4:	tst	r1, r3, lsl r5
   29af8:	addne	r4, r4, #1
   29afc:	cmpne	r0, r4
   29b00:	bne	29ae4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x48>
   29b04:	cmp	r4, r0
   29b08:	bcs	29bb8 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x11c>
   29b0c:	ldrb	r1, [r2, r4]
   29b10:	cmp	r1, #34	; 0x22
   29b14:	beq	29b28 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x8c>
   29b18:	cmp	r1, #39	; 0x27
   29b1c:	bne	29b58 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xbc>
   29b20:	mov	r0, #58	; 0x3a
   29b24:	b	29b2c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x90>
   29b28:	mov	r0, #57	; 0x39
   29b2c:	ldr	r1, [r6, #56]	; 0x38
   29b30:	ldr	r2, [r6, #192]	; 0xc0
   29b34:	mov	r3, #0
   29b38:	add	r2, r4, r2
   29b3c:	add	r2, r2, #1
   29b40:	str	r2, [r1, #56]	; 0x38
   29b44:	str	r3, [r1, #60]	; 0x3c
   29b48:	str	r0, [r6, #160]	; 0xa0
   29b4c:	add	r4, r4, #1
   29b50:	mov	r0, r4
   29b54:	pop	{r4, r5, r6, sl, fp, pc}
   29b58:	mov	r0, #1
   29b5c:	str	r0, [r6, #176]	; 0xb0
   29b60:	mov	r0, #66	; 0x42
   29b64:	cmp	r1, #62	; 0x3e
   29b68:	bne	29b48 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   29b6c:	ldr	r0, [r6, #192]	; 0xc0
   29b70:	add	r4, r4, #1
   29b74:	add	r0, r0, r4
   29b78:	ldr	r1, [ip, #32]
   29b7c:	sub	r0, r0, r1
   29b80:	str	r0, [ip, #36]	; 0x24
   29b84:	mov	r0, r6
   29b88:	mov	r1, r4
   29b8c:	mov	r2, ip
   29b90:	bl	114b8 <myhtml_queue_add@plt>
   29b94:	cmp	r0, #0
   29b98:	beq	29bb0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x114>
   29b9c:	mov	r0, #69	; 0x45
   29ba0:	str	r0, [r6, #160]	; 0xa0
   29ba4:	mov	r4, #0
   29ba8:	mov	r0, r4
   29bac:	pop	{r4, r5, r6, sl, fp, pc}
   29bb0:	mov	r0, #0
   29bb4:	str	r0, [r6, #160]	; 0xa0
   29bb8:	mov	r0, r4
   29bbc:	pop	{r4, r5, r6, sl, fp, pc}

00029bc0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   29bc0:	push	{r4, r5, r6, sl, fp, lr}
   29bc4:	add	fp, sp, #16
   29bc8:	mov	r4, r3
   29bcc:	mov	r5, r0
   29bd0:	ldr	r0, [fp, #8]
   29bd4:	cmp	r3, r0
   29bd8:	bcs	29c04 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x44>
   29bdc:	mov	r6, r1
   29be0:	ldr	r1, [fp, #12]
   29be4:	ldrb	r3, [r2, r4]
   29be8:	cmp	r3, r1
   29bec:	beq	29c0c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   29bf0:	cmp	r3, #62	; 0x3e
   29bf4:	beq	29c54 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x94>
   29bf8:	add	r4, r4, #1
   29bfc:	cmp	r0, r4
   29c00:	bne	29be4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x24>
   29c04:	mov	r0, r4
   29c08:	pop	{r4, r5, r6, sl, fp, pc}
   29c0c:	ldr	r0, [r5, #56]	; 0x38
   29c10:	ldr	r1, [r5, #192]	; 0xc0
   29c14:	ldr	r2, [r0, #56]	; 0x38
   29c18:	sub	r1, r1, r2
   29c1c:	add	r1, r1, r4
   29c20:	str	r1, [r0, #60]	; 0x3c
   29c24:	ldr	r1, [r6, #40]	; 0x28
   29c28:	cmp	r1, #0
   29c2c:	beq	29cb0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf0>
   29c30:	ldr	r1, [r6, #44]	; 0x2c
   29c34:	str	r0, [r1]
   29c38:	str	r1, [r0, #4]
   29c3c:	str	r0, [r6, #44]	; 0x2c
   29c40:	mov	r1, #0
   29c44:	str	r1, [r0]
   29c48:	ldr	r0, [r6, #44]	; 0x2c
   29c4c:	str	r0, [r5, #56]	; 0x38
   29c50:	b	29cc4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x104>
   29c54:	mov	r0, #1
   29c58:	str	r0, [r5, #176]	; 0xb0
   29c5c:	ldr	r0, [r5, #56]	; 0x38
   29c60:	ldr	r1, [r5, #192]	; 0xc0
   29c64:	add	r3, r1, r4
   29c68:	ldr	r2, [r0, #56]	; 0x38
   29c6c:	cmp	r3, r2
   29c70:	bls	29d1c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x15c>
   29c74:	sub	r1, r1, r2
   29c78:	add	r1, r1, r4
   29c7c:	str	r1, [r0, #60]	; 0x3c
   29c80:	ldr	r1, [r6, #40]	; 0x28
   29c84:	cmp	r1, #0
   29c88:	beq	29cf0 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x130>
   29c8c:	ldr	r1, [r6, #44]	; 0x2c
   29c90:	str	r0, [r1]
   29c94:	str	r1, [r0, #4]
   29c98:	str	r0, [r6, #44]	; 0x2c
   29c9c:	mov	r1, #0
   29ca0:	str	r1, [r0]
   29ca4:	ldr	r0, [r6, #44]	; 0x2c
   29ca8:	str	r0, [r5, #56]	; 0x38
   29cac:	b	29d04 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x144>
   29cb0:	str	r0, [r6, #40]	; 0x28
   29cb4:	str	r0, [r6, #44]	; 0x2c
   29cb8:	mov	r1, #0
   29cbc:	str	r1, [r0]
   29cc0:	str	r1, [r0, #4]
   29cc4:	ldr	r0, [r5, #8]
   29cc8:	ldr	r1, [r0, #16]
   29ccc:	bl	11d1c <myhtml_token_attr_create@plt>
   29cd0:	str	r0, [r5, #56]	; 0x38
   29cd4:	cmp	r0, #0
   29cd8:	beq	29d50 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   29cdc:	mov	r0, #59	; 0x3b
   29ce0:	str	r0, [r5, #160]	; 0xa0
   29ce4:	add	r4, r4, #1
   29ce8:	mov	r0, r4
   29cec:	pop	{r4, r5, r6, sl, fp, pc}
   29cf0:	str	r0, [r6, #40]	; 0x28
   29cf4:	str	r0, [r6, #44]	; 0x2c
   29cf8:	mov	r1, #0
   29cfc:	str	r1, [r0]
   29d00:	str	r1, [r0, #4]
   29d04:	ldr	r0, [r5, #8]
   29d08:	ldr	r1, [r0, #16]
   29d0c:	bl	11d1c <myhtml_token_attr_create@plt>
   29d10:	str	r0, [r5, #56]	; 0x38
   29d14:	cmp	r0, #0
   29d18:	beq	29d50 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x190>
   29d1c:	ldr	r0, [r6, #32]
   29d20:	ldr	r1, [r5, #192]	; 0xc0
   29d24:	sub	r0, r1, r0
   29d28:	add	r0, r0, r4
   29d2c:	add	r0, r0, #1
   29d30:	str	r0, [r6, #36]	; 0x24
   29d34:	add	r4, r4, #1
   29d38:	mov	r0, r5
   29d3c:	mov	r1, r4
   29d40:	mov	r2, r6
   29d44:	bl	114b8 <myhtml_queue_add@plt>
   29d48:	cmp	r0, #0
   29d4c:	beq	29d64 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x1a4>
   29d50:	mov	r0, #69	; 0x45
   29d54:	str	r0, [r5, #160]	; 0xa0
   29d58:	mov	r4, #0
   29d5c:	mov	r0, r4
   29d60:	pop	{r4, r5, r6, sl, fp, pc}
   29d64:	mov	r0, #0
   29d68:	str	r0, [r5, #160]	; 0xa0
   29d6c:	mov	r0, r4
   29d70:	pop	{r4, r5, r6, sl, fp, pc}

00029d74 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   29d74:	push	{fp, lr}
   29d78:	mov	fp, sp
   29d7c:	sub	sp, sp, #8
   29d80:	mov	ip, #34	; 0x22
   29d84:	str	ip, [sp, #4]
   29d88:	ldr	ip, [fp, #8]
   29d8c:	str	ip, [sp]
   29d90:	bl	11908 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29d94:	mov	sp, fp
   29d98:	pop	{fp, pc}

00029d9c <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   29d9c:	push	{fp, lr}
   29da0:	mov	fp, sp
   29da4:	sub	sp, sp, #8
   29da8:	mov	ip, #39	; 0x27
   29dac:	str	ip, [sp, #4]
   29db0:	ldr	ip, [fp, #8]
   29db4:	str	ip, [sp]
   29db8:	bl	11908 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   29dbc:	mov	sp, fp
   29dc0:	pop	{fp, pc}

00029dc4 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   29dc4:	push	{r4, r5, r6, sl, fp, lr}
   29dc8:	add	fp, sp, #16
   29dcc:	mov	r4, r3
   29dd0:	mov	ip, r1
   29dd4:	mov	r6, r0
   29dd8:	ldrb	r0, [r2, r3]
   29ddc:	sub	r3, r0, #9
   29de0:	ldr	r0, [fp, #8]
   29de4:	cmp	r3, #23
   29de8:	bhi	29e2c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x68>
   29dec:	mov	r5, #1
   29df0:	movw	r1, #27
   29df4:	movt	r1, #128	; 0x80
   29df8:	tst	r1, r5, lsl r3
   29dfc:	beq	29e2c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x68>
   29e00:	cmp	r4, r0
   29e04:	bcs	29e2c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x68>
   29e08:	mov	r3, #1
   29e0c:	ldrb	r5, [r2, r4]
   29e10:	sub	r5, r5, #9
   29e14:	cmp	r5, #23
   29e18:	bhi	29e2c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x68>
   29e1c:	tst	r1, r3, lsl r5
   29e20:	addne	r4, r4, #1
   29e24:	cmpne	r0, r4
   29e28:	bne	29e0c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x48>
   29e2c:	cmp	r4, r0
   29e30:	bcs	29ed8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x114>
   29e34:	ldrb	r0, [r2, r4]
   29e38:	cmp	r0, #34	; 0x22
   29e3c:	beq	29e58 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x94>
   29e40:	cmp	r0, #62	; 0x3e
   29e44:	beq	29e84 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xc0>
   29e48:	cmp	r0, #39	; 0x27
   29e4c:	bne	29ec8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x104>
   29e50:	mov	r0, #64	; 0x40
   29e54:	b	29e5c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x98>
   29e58:	mov	r0, #63	; 0x3f
   29e5c:	ldr	r1, [r6, #56]	; 0x38
   29e60:	ldr	r2, [r6, #192]	; 0xc0
   29e64:	mov	r3, #0
   29e68:	add	r4, r4, #1
   29e6c:	add	r2, r4, r2
   29e70:	str	r2, [r1, #56]	; 0x38
   29e74:	str	r3, [r1, #60]	; 0x3c
   29e78:	str	r0, [r6, #160]	; 0xa0
   29e7c:	mov	r0, r4
   29e80:	pop	{r4, r5, r6, sl, fp, pc}
   29e84:	ldr	r0, [r6, #192]	; 0xc0
   29e88:	add	r4, r4, #1
   29e8c:	add	r0, r0, r4
   29e90:	ldr	r1, [ip, #32]
   29e94:	sub	r0, r0, r1
   29e98:	str	r0, [ip, #36]	; 0x24
   29e9c:	mov	r0, r6
   29ea0:	mov	r1, r4
   29ea4:	mov	r2, ip
   29ea8:	bl	114b8 <myhtml_queue_add@plt>
   29eac:	cmp	r0, #0
   29eb0:	beq	29ee0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x11c>
   29eb4:	mov	r0, #69	; 0x45
   29eb8:	str	r0, [r6, #160]	; 0xa0
   29ebc:	mov	r4, #0
   29ec0:	mov	r0, r4
   29ec4:	pop	{r4, r5, r6, sl, fp, pc}
   29ec8:	mov	r0, #66	; 0x42
   29ecc:	str	r0, [r6, #160]	; 0xa0
   29ed0:	mov	r0, #1
   29ed4:	str	r0, [r6, #176]	; 0xb0
   29ed8:	mov	r0, r4
   29edc:	pop	{r4, r5, r6, sl, fp, pc}
   29ee0:	mov	r0, #0
   29ee4:	b	29e78 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>

00029ee8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   29ee8:	push	{r4, r5, r6, sl, fp, lr}
   29eec:	add	fp, sp, #16
   29ef0:	mov	r4, r3
   29ef4:	mov	r5, r0
   29ef8:	ldr	r0, [fp, #8]
   29efc:	cmp	r3, r0
   29f00:	bcs	29f2c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x44>
   29f04:	mov	r6, r1
   29f08:	ldr	r1, [fp, #12]
   29f0c:	ldrb	r3, [r2, r4]
   29f10:	cmp	r3, r1
   29f14:	beq	29f34 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   29f18:	cmp	r3, #62	; 0x3e
   29f1c:	beq	29f7c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x94>
   29f20:	add	r4, r4, #1
   29f24:	cmp	r0, r4
   29f28:	bne	29f0c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x24>
   29f2c:	mov	r0, r4
   29f30:	pop	{r4, r5, r6, sl, fp, pc}
   29f34:	ldr	r0, [r5, #56]	; 0x38
   29f38:	ldr	r1, [r5, #192]	; 0xc0
   29f3c:	ldr	r2, [r0, #56]	; 0x38
   29f40:	sub	r1, r1, r2
   29f44:	add	r1, r1, r4
   29f48:	str	r1, [r0, #60]	; 0x3c
   29f4c:	ldr	r1, [r6, #40]	; 0x28
   29f50:	cmp	r1, #0
   29f54:	beq	29fd8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf0>
   29f58:	ldr	r1, [r6, #44]	; 0x2c
   29f5c:	str	r0, [r1]
   29f60:	str	r1, [r0, #4]
   29f64:	str	r0, [r6, #44]	; 0x2c
   29f68:	mov	r1, #0
   29f6c:	str	r1, [r0]
   29f70:	ldr	r0, [r6, #44]	; 0x2c
   29f74:	str	r0, [r5, #56]	; 0x38
   29f78:	b	29fec <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x104>
   29f7c:	mov	r0, #1
   29f80:	str	r0, [r5, #176]	; 0xb0
   29f84:	ldr	r0, [r5, #56]	; 0x38
   29f88:	ldr	r1, [r5, #192]	; 0xc0
   29f8c:	add	r3, r1, r4
   29f90:	ldr	r2, [r0, #56]	; 0x38
   29f94:	cmp	r3, r2
   29f98:	bls	2a044 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x15c>
   29f9c:	sub	r1, r1, r2
   29fa0:	add	r1, r1, r4
   29fa4:	str	r1, [r0, #60]	; 0x3c
   29fa8:	ldr	r1, [r6, #40]	; 0x28
   29fac:	cmp	r1, #0
   29fb0:	beq	2a018 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x130>
   29fb4:	ldr	r1, [r6, #44]	; 0x2c
   29fb8:	str	r0, [r1]
   29fbc:	str	r1, [r0, #4]
   29fc0:	str	r0, [r6, #44]	; 0x2c
   29fc4:	mov	r1, #0
   29fc8:	str	r1, [r0]
   29fcc:	ldr	r0, [r6, #44]	; 0x2c
   29fd0:	str	r0, [r5, #56]	; 0x38
   29fd4:	b	2a02c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x144>
   29fd8:	str	r0, [r6, #40]	; 0x28
   29fdc:	str	r0, [r6, #44]	; 0x2c
   29fe0:	mov	r1, #0
   29fe4:	str	r1, [r0]
   29fe8:	str	r1, [r0, #4]
   29fec:	ldr	r0, [r5, #8]
   29ff0:	ldr	r1, [r0, #16]
   29ff4:	bl	11d1c <myhtml_token_attr_create@plt>
   29ff8:	str	r0, [r5, #56]	; 0x38
   29ffc:	cmp	r0, #0
   2a000:	beq	2a078 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   2a004:	mov	r0, #65	; 0x41
   2a008:	str	r0, [r5, #160]	; 0xa0
   2a00c:	add	r4, r4, #1
   2a010:	mov	r0, r4
   2a014:	pop	{r4, r5, r6, sl, fp, pc}
   2a018:	str	r0, [r6, #40]	; 0x28
   2a01c:	str	r0, [r6, #44]	; 0x2c
   2a020:	mov	r1, #0
   2a024:	str	r1, [r0]
   2a028:	str	r1, [r0, #4]
   2a02c:	ldr	r0, [r5, #8]
   2a030:	ldr	r1, [r0, #16]
   2a034:	bl	11d1c <myhtml_token_attr_create@plt>
   2a038:	str	r0, [r5, #56]	; 0x38
   2a03c:	cmp	r0, #0
   2a040:	beq	2a078 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x190>
   2a044:	ldr	r0, [r6, #32]
   2a048:	ldr	r1, [r5, #192]	; 0xc0
   2a04c:	sub	r0, r1, r0
   2a050:	add	r0, r0, r4
   2a054:	add	r0, r0, #1
   2a058:	str	r0, [r6, #36]	; 0x24
   2a05c:	add	r4, r4, #1
   2a060:	mov	r0, r5
   2a064:	mov	r1, r4
   2a068:	mov	r2, r6
   2a06c:	bl	114b8 <myhtml_queue_add@plt>
   2a070:	cmp	r0, #0
   2a074:	beq	2a08c <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x1a4>
   2a078:	mov	r0, #69	; 0x45
   2a07c:	str	r0, [r5, #160]	; 0xa0
   2a080:	mov	r4, #0
   2a084:	mov	r0, r4
   2a088:	pop	{r4, r5, r6, sl, fp, pc}
   2a08c:	mov	r0, #0
   2a090:	str	r0, [r5, #160]	; 0xa0
   2a094:	mov	r0, r4
   2a098:	pop	{r4, r5, r6, sl, fp, pc}

0002a09c <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   2a09c:	push	{fp, lr}
   2a0a0:	mov	fp, sp
   2a0a4:	sub	sp, sp, #8
   2a0a8:	mov	ip, #34	; 0x22
   2a0ac:	str	ip, [sp, #4]
   2a0b0:	ldr	ip, [fp, #8]
   2a0b4:	str	ip, [sp]
   2a0b8:	bl	11e90 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a0bc:	mov	sp, fp
   2a0c0:	pop	{fp, pc}

0002a0c4 <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2a0c4:	push	{fp, lr}
   2a0c8:	mov	fp, sp
   2a0cc:	sub	sp, sp, #8
   2a0d0:	mov	ip, #39	; 0x27
   2a0d4:	str	ip, [sp, #4]
   2a0d8:	ldr	ip, [fp, #8]
   2a0dc:	str	ip, [sp]
   2a0e0:	bl	11e90 <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   2a0e4:	mov	sp, fp
   2a0e8:	pop	{fp, pc}

0002a0ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   2a0ec:	push	{r4, r5, r6, sl, fp, lr}
   2a0f0:	add	fp, sp, #16
   2a0f4:	mov	r4, r3
   2a0f8:	mov	ip, r1
   2a0fc:	mov	r6, r0
   2a100:	ldrb	r0, [r2, r3]
   2a104:	sub	r3, r0, #9
   2a108:	ldr	r0, [fp, #8]
   2a10c:	cmp	r3, #23
   2a110:	bhi	2a154 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x68>
   2a114:	mov	r5, #1
   2a118:	movw	r1, #27
   2a11c:	movt	r1, #128	; 0x80
   2a120:	tst	r1, r5, lsl r3
   2a124:	beq	2a154 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x68>
   2a128:	cmp	r4, r0
   2a12c:	bcs	2a154 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x68>
   2a130:	mov	r3, #1
   2a134:	ldrb	r5, [r2, r4]
   2a138:	sub	r5, r5, #9
   2a13c:	cmp	r5, #23
   2a140:	bhi	2a154 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x68>
   2a144:	tst	r1, r3, lsl r5
   2a148:	addne	r4, r4, #1
   2a14c:	cmpne	r0, r4
   2a150:	bne	2a134 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x48>
   2a154:	cmp	r4, r0
   2a158:	bcs	2a1bc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd0>
   2a15c:	ldrb	r0, [r2, r4]
   2a160:	cmp	r0, #62	; 0x3e
   2a164:	bne	2a1ac <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xc0>
   2a168:	ldr	r0, [r6, #192]	; 0xc0
   2a16c:	add	r4, r4, #1
   2a170:	add	r0, r0, r4
   2a174:	ldr	r1, [ip, #32]
   2a178:	sub	r0, r0, r1
   2a17c:	str	r0, [ip, #36]	; 0x24
   2a180:	mov	r0, r6
   2a184:	mov	r1, r4
   2a188:	mov	r2, ip
   2a18c:	bl	114b8 <myhtml_queue_add@plt>
   2a190:	cmp	r0, #0
   2a194:	beq	2a1b4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xc8>
   2a198:	mov	r0, #69	; 0x45
   2a19c:	str	r0, [r6, #160]	; 0xa0
   2a1a0:	mov	r4, #0
   2a1a4:	mov	r0, r4
   2a1a8:	pop	{r4, r5, r6, sl, fp, pc}
   2a1ac:	mov	r0, #66	; 0x42
   2a1b0:	b	2a1b8 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xcc>
   2a1b4:	mov	r0, #0
   2a1b8:	str	r0, [r6, #160]	; 0xa0
   2a1bc:	mov	r0, r4
   2a1c0:	pop	{r4, r5, r6, sl, fp, pc}

0002a1c4 <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2a1c4:	push	{r4, r5, fp, lr}
   2a1c8:	add	fp, sp, #8
   2a1cc:	mov	r4, r3
   2a1d0:	mov	r3, r1
   2a1d4:	mov	r5, r0
   2a1d8:	ldr	r0, [fp, #8]
   2a1dc:	cmp	r4, r0
   2a1e0:	bcs	2a228 <myhtml_tokenizer_state_bogus_doctype@@Base+0x64>
   2a1e4:	ldrb	r1, [r2, r4]
   2a1e8:	add	r4, r4, #1
   2a1ec:	cmp	r1, #62	; 0x3e
   2a1f0:	bne	2a1dc <myhtml_tokenizer_state_bogus_doctype@@Base+0x18>
   2a1f4:	ldr	r0, [r3, #32]
   2a1f8:	ldr	r1, [r5, #192]	; 0xc0
   2a1fc:	sub	r0, r1, r0
   2a200:	add	r0, r0, r4
   2a204:	str	r0, [r3, #36]	; 0x24
   2a208:	mov	r0, r5
   2a20c:	mov	r1, r4
   2a210:	mov	r2, r3
   2a214:	bl	114b8 <myhtml_queue_add@plt>
   2a218:	cmp	r0, #0
   2a21c:	movwne	r0, #69	; 0x45
   2a220:	str	r0, [r5, #160]	; 0xa0
   2a224:	movne	r4, #0
   2a228:	mov	r0, r4
   2a22c:	pop	{r4, r5, fp, pc}

0002a230 <myhtml_tokenizer_end_state_data@@Base>:
   2a230:	push	{r4, r5, fp, lr}
   2a234:	add	fp, sp, #8
   2a238:	sub	sp, sp, #8
   2a23c:	mov	r5, r3
   2a240:	ldr	r3, [r0, #192]	; 0xc0
   2a244:	ldr	r4, [fp, #8]
   2a248:	add	r3, r3, r4
   2a24c:	ldr	r4, [r1, #32]
   2a250:	sub	r4, r3, r4
   2a254:	str	r4, [r1, #36]	; 0x24
   2a258:	mov	r4, #512	; 0x200
   2a25c:	str	r4, [sp]
   2a260:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a264:	mov	r0, r5
   2a268:	sub	sp, fp, #8
   2a26c:	pop	{r4, r5, fp, pc}

0002a270 <myhtml_tokenizer_end_state_tag_open@@Base>:
   2a270:	push	{r4, r5, r6, r7, fp, lr}
   2a274:	add	fp, sp, #16
   2a278:	sub	sp, sp, #8
   2a27c:	mov	r7, r3
   2a280:	mov	r6, r1
   2a284:	mov	r5, r0
   2a288:	ldr	r0, [r0, #192]	; 0xc0
   2a28c:	ldr	r1, [fp, #8]
   2a290:	add	r3, r0, r1
   2a294:	ldr	r1, [r6, #24]
   2a298:	ldr	r4, [r6, #32]
   2a29c:	sub	r4, r3, r4
   2a2a0:	str	r4, [r6, #36]	; 0x24
   2a2a4:	cmp	r1, r3
   2a2a8:	bcs	2a31c <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   2a2ac:	cmp	r1, #0
   2a2b0:	beq	2a2f4 <myhtml_tokenizer_end_state_tag_open@@Base+0x84>
   2a2b4:	add	r0, r0, r7
   2a2b8:	sub	r0, r0, r1
   2a2bc:	str	r0, [r6, #28]
   2a2c0:	mov	r0, r5
   2a2c4:	mov	r1, r6
   2a2c8:	mov	r3, r7
   2a2cc:	bl	11ff8 <myhtml_check_tag_parser@plt>
   2a2d0:	mov	r0, r5
   2a2d4:	mov	r1, r7
   2a2d8:	mov	r2, r6
   2a2dc:	bl	114b8 <myhtml_queue_add@plt>
   2a2e0:	cmp	r0, #0
   2a2e4:	movne	r0, #69	; 0x45
   2a2e8:	strne	r0, [r5, #160]	; 0xa0
   2a2ec:	movne	r7, #0
   2a2f0:	b	2a31c <myhtml_tokenizer_end_state_tag_open@@Base+0xac>
   2a2f4:	ldr	r0, [r6, #48]	; 0x30
   2a2f8:	ldr	r1, [r6, #48]	; 0x30
   2a2fc:	and	r0, r0, #8
   2a300:	eor	r0, r1, r0
   2a304:	str	r0, [r6, #48]	; 0x30
   2a308:	mov	r0, #512	; 0x200
   2a30c:	str	r0, [sp]
   2a310:	mov	r0, r5
   2a314:	mov	r1, r6
   2a318:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a31c:	mov	r0, r7
   2a320:	sub	sp, fp, #16
   2a324:	pop	{r4, r5, r6, r7, fp, pc}

0002a328 <myhtml_tokenizer_end_state_tag_name@@Base>:
   2a328:	push	{r4, r5, fp, lr}
   2a32c:	add	fp, sp, #8
   2a330:	sub	sp, sp, #8
   2a334:	mov	r5, r3
   2a338:	ldr	r3, [r0, #192]	; 0xc0
   2a33c:	ldr	r4, [fp, #8]
   2a340:	add	r3, r3, r4
   2a344:	ldr	r4, [r1, #32]
   2a348:	sub	r4, r3, r4
   2a34c:	str	r4, [r1, #36]	; 0x24
   2a350:	mov	r4, #512	; 0x200
   2a354:	str	r4, [sp]
   2a358:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a35c:	mov	r0, r5
   2a360:	sub	sp, fp, #8
   2a364:	pop	{r4, r5, fp, pc}

0002a368 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   2a368:	push	{r4, r5, r6, r7, fp, lr}
   2a36c:	add	fp, sp, #16
   2a370:	sub	sp, sp, #8
   2a374:	mov	r7, r3
   2a378:	ldr	r4, [r0, #192]	; 0xc0
   2a37c:	ldr	r3, [fp, #8]
   2a380:	add	r3, r4, r3
   2a384:	ldr	r5, [r1, #24]
   2a388:	ldr	r6, [r1, #32]
   2a38c:	sub	r6, r3, r6
   2a390:	str	r6, [r1, #36]	; 0x24
   2a394:	cmp	r5, r3
   2a398:	bcs	2a3c8 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   2a39c:	add	r6, r4, r7
   2a3a0:	sub	r6, r6, r5
   2a3a4:	str	r6, [r1, #28]
   2a3a8:	ldr	r6, [r1, #48]	; 0x30
   2a3ac:	ldr	r5, [r1, #48]	; 0x30
   2a3b0:	and	r6, r6, #8
   2a3b4:	eor	r6, r5, r6
   2a3b8:	str	r6, [r1, #48]	; 0x30
   2a3bc:	mov	r6, #512	; 0x200
   2a3c0:	str	r6, [sp]
   2a3c4:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a3c8:	mov	r0, r7
   2a3cc:	sub	sp, fp, #16
   2a3d0:	pop	{r4, r5, r6, r7, fp, pc}

0002a3d4 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   2a3d4:	push	{r4, r5, fp, lr}
   2a3d8:	add	fp, sp, #8
   2a3dc:	sub	sp, sp, #8
   2a3e0:	mov	r5, r3
   2a3e4:	ldr	r3, [r0, #192]	; 0xc0
   2a3e8:	ldr	r4, [fp, #8]
   2a3ec:	add	r3, r3, r4
   2a3f0:	ldr	r4, [r1, #32]
   2a3f4:	sub	r4, r3, r4
   2a3f8:	str	r4, [r1, #36]	; 0x24
   2a3fc:	mov	r4, #512	; 0x200
   2a400:	str	r4, [sp]
   2a404:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2a408:	mov	r0, r5
   2a40c:	sub	sp, fp, #8
   2a410:	pop	{r4, r5, fp, pc}

0002a414 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   2a414:	push	{r4, r5, r6, r7, fp, lr}
   2a418:	add	fp, sp, #16
   2a41c:	sub	sp, sp, #8
   2a420:	mov	r4, r3
   2a424:	mov	r6, r1
   2a428:	mov	r5, r0
   2a42c:	ldr	r0, [r0, #192]	; 0xc0
   2a430:	ldr	r7, [fp, #8]
   2a434:	add	r0, r0, r7
   2a438:	ldr	r3, [r1, #24]
   2a43c:	ldr	r1, [r1, #32]
   2a440:	sub	r0, r0, r1
   2a444:	str	r0, [r6, #36]	; 0x24
   2a448:	cmp	r3, #2
   2a44c:	bcc	2a520 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x10c>
   2a450:	str	r7, [sp]
   2a454:	mov	r0, r5
   2a458:	mov	r1, r6
   2a45c:	bl	11464 <myhtml_tokenizer_state_bogus_comment@plt>
   2a460:	ldr	r1, [r5, #76]	; 0x4c
   2a464:	str	r0, [r1, #4]
   2a468:	ldr	r2, [r5, #64]	; 0x40
   2a46c:	cmp	r2, r6
   2a470:	beq	2a4c4 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xb0>
   2a474:	ldr	r0, [r5, #192]	; 0xc0
   2a478:	add	r0, r0, r7
   2a47c:	ldr	r1, [r2, #24]
   2a480:	subs	r0, r0, r1
   2a484:	str	r0, [r2, #28]
   2a488:	beq	2a520 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x10c>
   2a48c:	ldr	r1, [r2, #48]	; 0x30
   2a490:	ldr	r3, [r2, #48]	; 0x30
   2a494:	and	r1, r1, #8
   2a498:	eor	r1, r3, r1
   2a49c:	str	r1, [r2, #48]	; 0x30
   2a4a0:	mov	r1, #1
   2a4a4:	str	r1, [r2]
   2a4a8:	str	r0, [r2, #28]
   2a4ac:	ldr	r0, [r2, #48]	; 0x30
   2a4b0:	orr	r0, r0, #512	; 0x200
   2a4b4:	str	r0, [r2, #48]	; 0x30
   2a4b8:	mov	r0, r5
   2a4bc:	mov	r1, r4
   2a4c0:	b	2a50c <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xf8>
   2a4c4:	ldr	r0, [r6, #24]
   2a4c8:	ldr	r1, [r6, #48]	; 0x30
   2a4cc:	ldr	r2, [r6, #48]	; 0x30
   2a4d0:	and	r1, r1, #8
   2a4d4:	eor	r1, r2, r1
   2a4d8:	str	r1, [r6, #48]	; 0x30
   2a4dc:	mov	r1, #2
   2a4e0:	str	r1, [r6]
   2a4e4:	ldr	r1, [r6, #48]	; 0x30
   2a4e8:	orr	r1, r1, #1024	; 0x400
   2a4ec:	str	r1, [r6, #48]	; 0x30
   2a4f0:	ldr	r1, [r5, #192]	; 0xc0
   2a4f4:	add	r1, r1, r7
   2a4f8:	sub	r0, r1, r0
   2a4fc:	str	r0, [r6, #28]
   2a500:	mov	r0, r5
   2a504:	mov	r1, r4
   2a508:	mov	r2, r6
   2a50c:	bl	114b8 <myhtml_queue_add@plt>
   2a510:	cmp	r0, #0
   2a514:	movne	r0, #69	; 0x45
   2a518:	strne	r0, [r5, #160]	; 0xa0
   2a51c:	movne	r4, #0
   2a520:	mov	r0, r4
   2a524:	sub	sp, fp, #16
   2a528:	pop	{r4, r5, r6, r7, fp, pc}

0002a52c <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   2a52c:	push	{r4, r5, fp, lr}
   2a530:	add	fp, sp, #8
   2a534:	mov	r4, r3
   2a538:	mov	r2, r1
   2a53c:	mov	r5, r0
   2a540:	ldr	r0, [r0, #192]	; 0xc0
   2a544:	ldr	r1, [fp, #8]
   2a548:	add	r0, r0, r1
   2a54c:	ldr	r1, [r2, #32]
   2a550:	sub	r0, r0, r1
   2a554:	str	r0, [r2, #36]	; 0x24
   2a558:	mov	r0, r5
   2a55c:	mov	r1, r3
   2a560:	bl	114b8 <myhtml_queue_add@plt>
   2a564:	cmp	r0, #0
   2a568:	movne	r0, #69	; 0x45
   2a56c:	strne	r0, [r5, #160]	; 0xa0
   2a570:	movne	r4, #0
   2a574:	mov	r0, r4
   2a578:	pop	{r4, r5, fp, pc}

0002a57c <myhtml_tokenizer_end_state_attribute_name@@Base>:
   2a57c:	push	{r4, r5, fp, lr}
   2a580:	add	fp, sp, #8
   2a584:	mov	r4, r3
   2a588:	mov	r2, r1
   2a58c:	mov	r5, r0
   2a590:	ldr	r0, [r0, #192]	; 0xc0
   2a594:	ldr	r1, [fp, #8]
   2a598:	add	r1, r0, r1
   2a59c:	ldr	r3, [r2, #32]
   2a5a0:	sub	r1, r1, r3
   2a5a4:	str	r1, [r2, #36]	; 0x24
   2a5a8:	add	r0, r0, r4
   2a5ac:	ldr	r1, [r5, #56]	; 0x38
   2a5b0:	ldr	r3, [r1, #48]	; 0x30
   2a5b4:	sub	r0, r0, r3
   2a5b8:	str	r0, [r1, #52]	; 0x34
   2a5bc:	mov	r0, r5
   2a5c0:	mov	r1, r4
   2a5c4:	bl	114b8 <myhtml_queue_add@plt>
   2a5c8:	cmp	r0, #0
   2a5cc:	movne	r0, #69	; 0x45
   2a5d0:	strne	r0, [r5, #160]	; 0xa0
   2a5d4:	movne	r4, #0
   2a5d8:	mov	r0, r4
   2a5dc:	pop	{r4, r5, fp, pc}

0002a5e0 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   2a5e0:	push	{r4, r5, fp, lr}
   2a5e4:	add	fp, sp, #8
   2a5e8:	mov	r4, r3
   2a5ec:	mov	r2, r1
   2a5f0:	mov	r5, r0
   2a5f4:	ldr	r0, [r0, #192]	; 0xc0
   2a5f8:	ldr	r1, [fp, #8]
   2a5fc:	add	r0, r0, r1
   2a600:	ldr	r1, [r2, #32]
   2a604:	sub	r0, r0, r1
   2a608:	str	r0, [r2, #36]	; 0x24
   2a60c:	mov	r0, r5
   2a610:	mov	r1, r3
   2a614:	bl	114b8 <myhtml_queue_add@plt>
   2a618:	cmp	r0, #0
   2a61c:	movne	r0, #69	; 0x45
   2a620:	strne	r0, [r5, #160]	; 0xa0
   2a624:	movne	r4, #0
   2a628:	mov	r0, r4
   2a62c:	pop	{r4, r5, fp, pc}

0002a630 <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2a630:	push	{r4, r5, fp, lr}
   2a634:	add	fp, sp, #8
   2a638:	mov	r4, r3
   2a63c:	mov	r2, r1
   2a640:	mov	r5, r0
   2a644:	ldr	r0, [r0, #192]	; 0xc0
   2a648:	ldr	r1, [fp, #8]
   2a64c:	add	r0, r0, r1
   2a650:	ldr	r1, [r2, #32]
   2a654:	sub	r0, r0, r1
   2a658:	str	r0, [r2, #36]	; 0x24
   2a65c:	mov	r0, r5
   2a660:	mov	r1, r3
   2a664:	bl	114b8 <myhtml_queue_add@plt>
   2a668:	cmp	r0, #0
   2a66c:	bne	2a690 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2a670:	ldr	r0, [r5, #8]
   2a674:	ldr	r1, [r0, #16]
   2a678:	bl	11d1c <myhtml_token_attr_create@plt>
   2a67c:	str	r0, [r5, #56]	; 0x38
   2a680:	cmp	r0, #0
   2a684:	beq	2a690 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x60>
   2a688:	mov	r0, r4
   2a68c:	pop	{r4, r5, fp, pc}
   2a690:	mov	r0, #69	; 0x45
   2a694:	str	r0, [r5, #160]	; 0xa0
   2a698:	mov	r4, #0
   2a69c:	mov	r0, r4
   2a6a0:	pop	{r4, r5, fp, pc}

0002a6a4 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   2a6a4:	ldr	r0, [r0, #192]	; 0xc0
   2a6a8:	ldr	r2, [sp]
   2a6ac:	add	r0, r0, r2
   2a6b0:	ldr	r2, [r1, #32]
   2a6b4:	sub	r0, r0, r2
   2a6b8:	str	r0, [r1, #36]	; 0x24
   2a6bc:	mov	r0, r3
   2a6c0:	bx	lr

0002a6c4 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   2a6c4:	ldr	r0, [r0, #192]	; 0xc0
   2a6c8:	ldr	r2, [sp]
   2a6cc:	add	r0, r0, r2
   2a6d0:	ldr	r2, [r1, #32]
   2a6d4:	sub	r0, r0, r2
   2a6d8:	str	r0, [r1, #36]	; 0x24
   2a6dc:	mov	r0, r3
   2a6e0:	bx	lr

0002a6e4 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   2a6e4:	push	{r4, r5, fp, lr}
   2a6e8:	add	fp, sp, #8
   2a6ec:	mov	r4, r3
   2a6f0:	mov	r2, r1
   2a6f4:	mov	r5, r0
   2a6f8:	ldr	r0, [r0, #192]	; 0xc0
   2a6fc:	ldr	r1, [fp, #8]
   2a700:	add	r1, r0, r1
   2a704:	ldr	r3, [r2, #32]
   2a708:	sub	r1, r1, r3
   2a70c:	str	r1, [r2, #36]	; 0x24
   2a710:	add	r0, r0, r4
   2a714:	ldr	r1, [r5, #56]	; 0x38
   2a718:	ldr	r3, [r1, #56]	; 0x38
   2a71c:	sub	r0, r0, r3
   2a720:	str	r0, [r1, #60]	; 0x3c
   2a724:	mov	r0, r5
   2a728:	mov	r1, r4
   2a72c:	bl	114b8 <myhtml_queue_add@plt>
   2a730:	cmp	r0, #0
   2a734:	bne	2a758 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2a738:	ldr	r0, [r5, #8]
   2a73c:	ldr	r1, [r0, #16]
   2a740:	bl	11d1c <myhtml_token_attr_create@plt>
   2a744:	str	r0, [r5, #56]	; 0x38
   2a748:	cmp	r0, #0
   2a74c:	beq	2a758 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x74>
   2a750:	mov	r0, r4
   2a754:	pop	{r4, r5, fp, pc}
   2a758:	mov	r0, #69	; 0x45
   2a75c:	str	r0, [r5, #160]	; 0xa0
   2a760:	mov	r4, #0
   2a764:	mov	r0, r4
   2a768:	pop	{r4, r5, fp, pc}

0002a76c <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   2a76c:	push	{r4, r5, fp, lr}
   2a770:	add	fp, sp, #8
   2a774:	mov	r4, r3
   2a778:	mov	r2, r1
   2a77c:	mov	r5, r0
   2a780:	ldr	r0, [r0, #192]	; 0xc0
   2a784:	ldr	r1, [fp, #8]
   2a788:	add	r1, r0, r1
   2a78c:	ldr	ip, [r2, #24]
   2a790:	ldr	r3, [r2, #32]
   2a794:	sub	r1, r1, r3
   2a798:	str	r1, [r2, #36]	; 0x24
   2a79c:	add	r0, r0, r4
   2a7a0:	sub	r0, r0, ip
   2a7a4:	str	r0, [r2, #28]
   2a7a8:	mov	r0, r5
   2a7ac:	mov	r1, r4
   2a7b0:	bl	114b8 <myhtml_queue_add@plt>
   2a7b4:	cmp	r0, #0
   2a7b8:	movne	r0, #69	; 0x45
   2a7bc:	strne	r0, [r5, #160]	; 0xa0
   2a7c0:	movne	r4, #0
   2a7c4:	mov	r0, r4
   2a7c8:	pop	{r4, r5, fp, pc}

0002a7cc <myhtml_tokenizer_end_state_comment_start@@Base>:
   2a7cc:	push	{r4, r5, fp, lr}
   2a7d0:	add	fp, sp, #8
   2a7d4:	mov	r4, r3
   2a7d8:	mov	r2, r1
   2a7dc:	mov	r5, r0
   2a7e0:	ldr	r0, [r0, #192]	; 0xc0
   2a7e4:	ldr	r1, [fp, #8]
   2a7e8:	add	r1, r0, r1
   2a7ec:	ldr	ip, [r2, #24]
   2a7f0:	ldr	r3, [r2, #32]
   2a7f4:	sub	r1, r1, r3
   2a7f8:	str	r1, [r2, #36]	; 0x24
   2a7fc:	add	r0, r0, r4
   2a800:	sub	r0, r0, ip
   2a804:	str	r0, [r2, #28]
   2a808:	mov	r0, r5
   2a80c:	mov	r1, r4
   2a810:	bl	114b8 <myhtml_queue_add@plt>
   2a814:	cmp	r0, #0
   2a818:	movne	r0, #69	; 0x45
   2a81c:	strne	r0, [r5, #160]	; 0xa0
   2a820:	movne	r4, #0
   2a824:	mov	r0, r4
   2a828:	pop	{r4, r5, fp, pc}

0002a82c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   2a82c:	push	{r4, r5, fp, lr}
   2a830:	add	fp, sp, #8
   2a834:	mov	r4, r3
   2a838:	mov	r2, r1
   2a83c:	mov	r5, r0
   2a840:	ldr	r0, [r0, #192]	; 0xc0
   2a844:	ldr	r1, [fp, #8]
   2a848:	add	r1, r0, r1
   2a84c:	ldr	ip, [r2, #24]
   2a850:	ldr	r3, [r2, #32]
   2a854:	sub	r1, r1, r3
   2a858:	str	r1, [r2, #36]	; 0x24
   2a85c:	add	r0, r0, r4
   2a860:	sub	r0, r0, ip
   2a864:	str	r0, [r2, #28]
   2a868:	mov	r0, r5
   2a86c:	mov	r1, r4
   2a870:	bl	114b8 <myhtml_queue_add@plt>
   2a874:	cmp	r0, #0
   2a878:	movne	r0, #69	; 0x45
   2a87c:	strne	r0, [r5, #160]	; 0xa0
   2a880:	movne	r4, #0
   2a884:	mov	r0, r4
   2a888:	pop	{r4, r5, fp, pc}

0002a88c <myhtml_tokenizer_end_state_comment@@Base>:
   2a88c:	push	{r4, r5, fp, lr}
   2a890:	add	fp, sp, #8
   2a894:	mov	r4, r3
   2a898:	mov	r2, r1
   2a89c:	mov	r5, r0
   2a8a0:	ldr	r0, [r0, #192]	; 0xc0
   2a8a4:	ldr	r1, [fp, #8]
   2a8a8:	add	r1, r0, r1
   2a8ac:	ldr	ip, [r2, #24]
   2a8b0:	ldr	r3, [r2, #32]
   2a8b4:	sub	r1, r1, r3
   2a8b8:	str	r1, [r2, #36]	; 0x24
   2a8bc:	add	r0, r0, r4
   2a8c0:	sub	r0, r0, ip
   2a8c4:	str	r0, [r2, #28]
   2a8c8:	mov	r0, r5
   2a8cc:	mov	r1, r4
   2a8d0:	bl	114b8 <myhtml_queue_add@plt>
   2a8d4:	cmp	r0, #0
   2a8d8:	movne	r0, #69	; 0x45
   2a8dc:	strne	r0, [r5, #160]	; 0xa0
   2a8e0:	movne	r4, #0
   2a8e4:	mov	r0, r4
   2a8e8:	pop	{r4, r5, fp, pc}

0002a8ec <myhtml_tokenizer_end_state_comment_end@@Base>:
   2a8ec:	push	{r4, r5, r6, sl, fp, lr}
   2a8f0:	add	fp, sp, #16
   2a8f4:	mov	r4, r3
   2a8f8:	mov	r2, r1
   2a8fc:	mov	r6, r0
   2a900:	ldr	r0, [r0, #192]	; 0xc0
   2a904:	ldr	r1, [fp, #8]
   2a908:	add	r1, r0, r1
   2a90c:	ldr	r3, [r2, #24]
   2a910:	ldr	r5, [r2, #32]
   2a914:	sub	r1, r1, r5
   2a918:	str	r1, [r2, #36]	; 0x24
   2a91c:	add	r0, r0, r4
   2a920:	sub	r0, r0, r3
   2a924:	str	r0, [r2, #28]
   2a928:	cmp	r0, #3
   2a92c:	bcc	2a954 <myhtml_tokenizer_end_state_comment_end@@Base+0x68>
   2a930:	sub	r0, r0, #2
   2a934:	str	r0, [r2, #28]
   2a938:	mov	r0, r6
   2a93c:	mov	r1, r4
   2a940:	bl	114b8 <myhtml_queue_add@plt>
   2a944:	cmp	r0, #0
   2a948:	movne	r0, #69	; 0x45
   2a94c:	strne	r0, [r6, #160]	; 0xa0
   2a950:	movne	r4, #0
   2a954:	mov	r0, r4
   2a958:	pop	{r4, r5, r6, sl, fp, pc}

0002a95c <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   2a95c:	push	{r4, r5, fp, lr}
   2a960:	add	fp, sp, #8
   2a964:	mov	r4, r3
   2a968:	mov	r2, r1
   2a96c:	mov	r5, r0
   2a970:	ldr	r0, [r0, #192]	; 0xc0
   2a974:	ldr	r1, [fp, #8]
   2a978:	add	r1, r0, r1
   2a97c:	ldr	ip, [r2, #24]
   2a980:	ldr	r3, [r2, #32]
   2a984:	sub	r1, r1, r3
   2a988:	str	r1, [r2, #36]	; 0x24
   2a98c:	add	r0, r0, r4
   2a990:	sub	r0, r0, ip
   2a994:	str	r0, [r2, #28]
   2a998:	mov	r0, r5
   2a99c:	mov	r1, r4
   2a9a0:	bl	114b8 <myhtml_queue_add@plt>
   2a9a4:	cmp	r0, #0
   2a9a8:	movne	r0, #69	; 0x45
   2a9ac:	strne	r0, [r5, #160]	; 0xa0
   2a9b0:	movne	r4, #0
   2a9b4:	mov	r0, r4
   2a9b8:	pop	{r4, r5, fp, pc}

0002a9bc <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   2a9bc:	push	{r4, r5, fp, lr}
   2a9c0:	add	fp, sp, #8
   2a9c4:	mov	r4, r3
   2a9c8:	mov	r2, r1
   2a9cc:	mov	r5, r0
   2a9d0:	ldr	r0, [r0, #192]	; 0xc0
   2a9d4:	ldr	r1, [fp, #8]
   2a9d8:	add	r1, r0, r1
   2a9dc:	ldr	ip, [r2, #24]
   2a9e0:	ldr	r3, [r2, #32]
   2a9e4:	sub	r1, r1, r3
   2a9e8:	str	r1, [r2, #36]	; 0x24
   2a9ec:	add	r0, r0, r4
   2a9f0:	sub	r0, r0, ip
   2a9f4:	str	r0, [r2, #28]
   2a9f8:	mov	r0, r5
   2a9fc:	mov	r1, r4
   2aa00:	bl	114b8 <myhtml_queue_add@plt>
   2aa04:	cmp	r0, #0
   2aa08:	movne	r0, #69	; 0x45
   2aa0c:	strne	r0, [r5, #160]	; 0xa0
   2aa10:	movne	r4, #0
   2aa14:	mov	r0, r4
   2aa18:	pop	{r4, r5, fp, pc}

0002aa1c <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   2aa1c:	push	{r4, r5, fp, lr}
   2aa20:	add	fp, sp, #8
   2aa24:	mov	r4, r3
   2aa28:	mov	r2, r1
   2aa2c:	mov	r5, r0
   2aa30:	ldr	r0, [r0, #192]	; 0xc0
   2aa34:	ldr	r1, [fp, #8]
   2aa38:	add	r1, r0, r1
   2aa3c:	ldr	ip, [r2, #24]
   2aa40:	ldr	r3, [r2, #32]
   2aa44:	sub	r1, r1, r3
   2aa48:	str	r1, [r2, #36]	; 0x24
   2aa4c:	add	r0, r0, r4
   2aa50:	sub	r0, r0, ip
   2aa54:	str	r0, [r2, #28]
   2aa58:	mov	r0, r5
   2aa5c:	mov	r1, r4
   2aa60:	bl	114b8 <myhtml_queue_add@plt>
   2aa64:	cmp	r0, #0
   2aa68:	movne	r0, #69	; 0x45
   2aa6c:	strne	r0, [r5, #160]	; 0xa0
   2aa70:	movne	r4, #0
   2aa74:	mov	r0, r4
   2aa78:	pop	{r4, r5, fp, pc}

0002aa7c <myhtml_tokenizer_end_state_cdata_section@@Base>:
   2aa7c:	push	{r4, r5, r6, sl, fp, lr}
   2aa80:	add	fp, sp, #16
   2aa84:	mov	r4, r3
   2aa88:	mov	r2, r1
   2aa8c:	mov	r6, r0
   2aa90:	ldr	r0, [r0, #192]	; 0xc0
   2aa94:	ldr	r1, [fp, #8]
   2aa98:	add	r1, r0, r1
   2aa9c:	ldr	r3, [r2, #24]
   2aaa0:	ldr	r5, [r2, #32]
   2aaa4:	sub	r1, r1, r5
   2aaa8:	str	r1, [r2, #36]	; 0x24
   2aaac:	add	r0, r0, r4
   2aab0:	subs	r0, r0, r3
   2aab4:	str	r0, [r2, #28]
   2aab8:	beq	2aad8 <myhtml_tokenizer_end_state_cdata_section@@Base+0x5c>
   2aabc:	mov	r0, r6
   2aac0:	mov	r1, r4
   2aac4:	bl	114b8 <myhtml_queue_add@plt>
   2aac8:	cmp	r0, #0
   2aacc:	movne	r0, #69	; 0x45
   2aad0:	strne	r0, [r6, #160]	; 0xa0
   2aad4:	movne	r4, #0
   2aad8:	mov	r0, r4
   2aadc:	pop	{r4, r5, r6, sl, fp, pc}

0002aae0 <myhtml_tokenizer_end_state_rcdata@@Base>:
   2aae0:	push	{r4, r5, fp, lr}
   2aae4:	add	fp, sp, #8
   2aae8:	mov	r4, r3
   2aaec:	mov	r2, r1
   2aaf0:	mov	r5, r0
   2aaf4:	ldr	r0, [r0, #192]	; 0xc0
   2aaf8:	ldr	r1, [fp, #8]
   2aafc:	add	r0, r0, r1
   2ab00:	ldr	r1, [r2, #24]
   2ab04:	ldr	r3, [r2, #32]
   2ab08:	sub	r3, r0, r3
   2ab0c:	str	r3, [r2, #36]	; 0x24
   2ab10:	cmp	r0, r1
   2ab14:	bls	2ab50 <myhtml_tokenizer_end_state_rcdata@@Base+0x70>
   2ab18:	mov	r3, #1
   2ab1c:	str	r3, [r2]
   2ab20:	sub	r0, r0, r1
   2ab24:	str	r0, [r2, #28]
   2ab28:	ldr	r0, [r2, #48]	; 0x30
   2ab2c:	orr	r0, r0, #16
   2ab30:	str	r0, [r2, #48]	; 0x30
   2ab34:	mov	r0, r5
   2ab38:	mov	r1, #0
   2ab3c:	bl	114b8 <myhtml_queue_add@plt>
   2ab40:	cmp	r0, #0
   2ab44:	movne	r0, #69	; 0x45
   2ab48:	strne	r0, [r5, #160]	; 0xa0
   2ab4c:	movne	r4, #0
   2ab50:	mov	r0, r4
   2ab54:	pop	{r4, r5, fp, pc}

0002ab58 <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   2ab58:	push	{r4, r5, r6, sl, fp, lr}
   2ab5c:	add	fp, sp, #16
   2ab60:	sub	sp, sp, #8
   2ab64:	mov	r6, r3
   2ab68:	ldr	r3, [r0, #192]	; 0xc0
   2ab6c:	ldr	r4, [fp, #8]
   2ab70:	add	r4, r3, r4
   2ab74:	ldr	r5, [r1, #32]
   2ab78:	sub	r5, r4, r5
   2ab7c:	str	r5, [r1, #36]	; 0x24
   2ab80:	mov	r5, #16
   2ab84:	str	r5, [sp]
   2ab88:	add	r3, r3, r6
   2ab8c:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ab90:	mov	r0, r6
   2ab94:	sub	sp, fp, #16
   2ab98:	pop	{r4, r5, r6, sl, fp, pc}

0002ab9c <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   2ab9c:	push	{r4, r5, r6, sl, fp, lr}
   2aba0:	add	fp, sp, #16
   2aba4:	sub	sp, sp, #8
   2aba8:	mov	r6, r3
   2abac:	ldr	r3, [r0, #192]	; 0xc0
   2abb0:	ldr	r4, [fp, #8]
   2abb4:	add	r4, r3, r4
   2abb8:	ldr	r5, [r1, #32]
   2abbc:	sub	r5, r4, r5
   2abc0:	str	r5, [r1, #36]	; 0x24
   2abc4:	mov	r5, #16
   2abc8:	str	r5, [sp]
   2abcc:	add	r3, r3, r6
   2abd0:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2abd4:	mov	r0, r6
   2abd8:	sub	sp, fp, #16
   2abdc:	pop	{r4, r5, r6, sl, fp, pc}

0002abe0 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   2abe0:	push	{r4, r5, r6, sl, fp, lr}
   2abe4:	add	fp, sp, #16
   2abe8:	sub	sp, sp, #8
   2abec:	mov	r6, r3
   2abf0:	ldr	r3, [r0, #192]	; 0xc0
   2abf4:	ldr	r4, [fp, #8]
   2abf8:	add	r4, r3, r4
   2abfc:	ldr	r5, [r1, #32]
   2ac00:	sub	r5, r4, r5
   2ac04:	str	r5, [r1, #36]	; 0x24
   2ac08:	mov	r5, #16
   2ac0c:	str	r5, [sp]
   2ac10:	add	r3, r3, r6
   2ac14:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ac18:	mov	r0, r6
   2ac1c:	sub	sp, fp, #16
   2ac20:	pop	{r4, r5, r6, sl, fp, pc}

0002ac24 <myhtml_tokenizer_end_state_rawtext@@Base>:
   2ac24:	push	{r4, r5, r6, sl, fp, lr}
   2ac28:	add	fp, sp, #16
   2ac2c:	sub	sp, sp, #8
   2ac30:	mov	r6, r3
   2ac34:	ldr	r3, [r0, #192]	; 0xc0
   2ac38:	ldr	r4, [fp, #8]
   2ac3c:	add	r4, r3, r4
   2ac40:	ldr	r5, [r1, #32]
   2ac44:	sub	r5, r4, r5
   2ac48:	str	r5, [r1, #36]	; 0x24
   2ac4c:	mov	r5, #32
   2ac50:	str	r5, [sp]
   2ac54:	add	r3, r3, r6
   2ac58:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ac5c:	mov	r0, r6
   2ac60:	sub	sp, fp, #16
   2ac64:	pop	{r4, r5, r6, sl, fp, pc}

0002ac68 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   2ac68:	push	{r4, r5, r6, sl, fp, lr}
   2ac6c:	add	fp, sp, #16
   2ac70:	sub	sp, sp, #8
   2ac74:	mov	r6, r3
   2ac78:	ldr	r3, [r0, #192]	; 0xc0
   2ac7c:	ldr	r4, [fp, #8]
   2ac80:	add	r4, r3, r4
   2ac84:	ldr	r5, [r1, #32]
   2ac88:	sub	r5, r4, r5
   2ac8c:	str	r5, [r1, #36]	; 0x24
   2ac90:	mov	r5, #32
   2ac94:	str	r5, [sp]
   2ac98:	add	r3, r3, r6
   2ac9c:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2aca0:	mov	r0, r6
   2aca4:	sub	sp, fp, #16
   2aca8:	pop	{r4, r5, r6, sl, fp, pc}

0002acac <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   2acac:	push	{r4, r5, r6, sl, fp, lr}
   2acb0:	add	fp, sp, #16
   2acb4:	sub	sp, sp, #8
   2acb8:	mov	r6, r3
   2acbc:	ldr	r3, [r0, #192]	; 0xc0
   2acc0:	ldr	r4, [fp, #8]
   2acc4:	add	r4, r3, r4
   2acc8:	ldr	r5, [r1, #32]
   2accc:	sub	r5, r4, r5
   2acd0:	str	r5, [r1, #36]	; 0x24
   2acd4:	mov	r5, #32
   2acd8:	str	r5, [sp]
   2acdc:	add	r3, r3, r6
   2ace0:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ace4:	mov	r0, r6
   2ace8:	sub	sp, fp, #16
   2acec:	pop	{r4, r5, r6, sl, fp, pc}

0002acf0 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   2acf0:	push	{r4, r5, r6, sl, fp, lr}
   2acf4:	add	fp, sp, #16
   2acf8:	sub	sp, sp, #8
   2acfc:	mov	r6, r3
   2ad00:	ldr	r3, [r0, #192]	; 0xc0
   2ad04:	ldr	r4, [fp, #8]
   2ad08:	add	r4, r3, r4
   2ad0c:	ldr	r5, [r1, #32]
   2ad10:	sub	r5, r4, r5
   2ad14:	str	r5, [r1, #36]	; 0x24
   2ad18:	mov	r5, #32
   2ad1c:	str	r5, [sp]
   2ad20:	add	r3, r3, r6
   2ad24:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad28:	mov	r0, r6
   2ad2c:	sub	sp, fp, #16
   2ad30:	pop	{r4, r5, r6, sl, fp, pc}

0002ad34 <myhtml_tokenizer_end_state_plaintext@@Base>:
   2ad34:	ldr	r0, [r0, #192]	; 0xc0
   2ad38:	ldr	r2, [sp]
   2ad3c:	add	r0, r0, r2
   2ad40:	ldr	r2, [r1, #32]
   2ad44:	sub	r0, r0, r2
   2ad48:	str	r0, [r1, #36]	; 0x24
   2ad4c:	mov	r0, r3
   2ad50:	bx	lr

0002ad54 <myhtml_tokenizer_end_state_doctype@@Base>:
   2ad54:	push	{r4, r5, r6, sl, fp, lr}
   2ad58:	add	fp, sp, #16
   2ad5c:	sub	sp, sp, #8
   2ad60:	mov	r6, r3
   2ad64:	ldr	r3, [r0, #192]	; 0xc0
   2ad68:	ldr	r4, [fp, #8]
   2ad6c:	add	r4, r3, r4
   2ad70:	ldr	r5, [r1, #32]
   2ad74:	sub	r5, r4, r5
   2ad78:	str	r5, [r1, #36]	; 0x24
   2ad7c:	mov	r5, #32
   2ad80:	str	r5, [sp]
   2ad84:	add	r3, r3, r6
   2ad88:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ad8c:	mov	r0, r6
   2ad90:	sub	sp, fp, #16
   2ad94:	pop	{r4, r5, r6, sl, fp, pc}

0002ad98 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   2ad98:	push	{r4, r5, fp, lr}
   2ad9c:	add	fp, sp, #8
   2ada0:	mov	r4, r3
   2ada4:	mov	r2, r1
   2ada8:	mov	r5, r0
   2adac:	ldr	r0, [r0, #192]	; 0xc0
   2adb0:	ldr	r1, [fp, #8]
   2adb4:	add	r0, r0, r1
   2adb8:	ldr	r1, [r2, #32]
   2adbc:	sub	r0, r0, r1
   2adc0:	str	r0, [r2, #36]	; 0x24
   2adc4:	mov	r0, #1
   2adc8:	str	r0, [r5, #176]	; 0xb0
   2adcc:	mov	r0, r5
   2add0:	mov	r1, r3
   2add4:	bl	114b8 <myhtml_queue_add@plt>
   2add8:	cmp	r0, #0
   2addc:	movne	r0, #69	; 0x45
   2ade0:	strne	r0, [r5, #160]	; 0xa0
   2ade4:	movne	r4, #0
   2ade8:	mov	r0, r4
   2adec:	pop	{r4, r5, fp, pc}

0002adf0 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   2adf0:	push	{r4, r5, fp, lr}
   2adf4:	add	fp, sp, #8
   2adf8:	mov	r4, r3
   2adfc:	mov	r2, r1
   2ae00:	mov	r5, r0
   2ae04:	ldr	r0, [r0, #192]	; 0xc0
   2ae08:	ldr	r1, [fp, #8]
   2ae0c:	add	r1, r0, r1
   2ae10:	ldr	r3, [r2, #32]
   2ae14:	sub	r1, r1, r3
   2ae18:	str	r1, [r2, #36]	; 0x24
   2ae1c:	add	r0, r0, r4
   2ae20:	ldr	r1, [r5, #56]	; 0x38
   2ae24:	ldr	r3, [r1, #48]	; 0x30
   2ae28:	sub	r0, r0, r3
   2ae2c:	str	r0, [r1, #52]	; 0x34
   2ae30:	mov	r0, r5
   2ae34:	mov	r1, r4
   2ae38:	bl	114b8 <myhtml_queue_add@plt>
   2ae3c:	cmp	r0, #0
   2ae40:	movne	r0, #69	; 0x45
   2ae44:	strne	r0, [r5, #160]	; 0xa0
   2ae48:	movne	r4, #0
   2ae4c:	mov	r0, r4
   2ae50:	pop	{r4, r5, fp, pc}

0002ae54 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   2ae54:	push	{r4, r5, fp, lr}
   2ae58:	add	fp, sp, #8
   2ae5c:	mov	r4, r3
   2ae60:	mov	r2, r1
   2ae64:	mov	r5, r0
   2ae68:	ldr	r0, [r0, #192]	; 0xc0
   2ae6c:	ldr	r1, [fp, #8]
   2ae70:	add	r0, r0, r1
   2ae74:	ldr	r1, [r2, #32]
   2ae78:	sub	r0, r0, r1
   2ae7c:	str	r0, [r2, #36]	; 0x24
   2ae80:	mov	r0, r5
   2ae84:	mov	r1, r3
   2ae88:	bl	114b8 <myhtml_queue_add@plt>
   2ae8c:	cmp	r0, #0
   2ae90:	movne	r0, #69	; 0x45
   2ae94:	strne	r0, [r5, #160]	; 0xa0
   2ae98:	movne	r4, #0
   2ae9c:	mov	r0, r4
   2aea0:	pop	{r4, r5, fp, pc}

0002aea4 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   2aea4:	push	{r4, r5, fp, lr}
   2aea8:	add	fp, sp, #8
   2aeac:	mov	r4, r3
   2aeb0:	mov	r2, r1
   2aeb4:	mov	r5, r0
   2aeb8:	ldr	r0, [r0, #192]	; 0xc0
   2aebc:	ldr	r1, [fp, #8]
   2aec0:	add	r0, r0, r1
   2aec4:	ldr	r1, [r2, #32]
   2aec8:	sub	r0, r0, r1
   2aecc:	str	r0, [r2, #36]	; 0x24
   2aed0:	mov	r0, r5
   2aed4:	mov	r1, r3
   2aed8:	bl	114b8 <myhtml_queue_add@plt>
   2aedc:	cmp	r0, #0
   2aee0:	movne	r0, #69	; 0x45
   2aee4:	strne	r0, [r5, #160]	; 0xa0
   2aee8:	movne	r4, #0
   2aeec:	mov	r0, r4
   2aef0:	pop	{r4, r5, fp, pc}

0002aef4 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   2aef4:	push	{r4, r5, fp, lr}
   2aef8:	add	fp, sp, #8
   2aefc:	mov	r4, r3
   2af00:	mov	r2, r1
   2af04:	mov	r5, r0
   2af08:	ldr	r0, [r0, #192]	; 0xc0
   2af0c:	ldr	r1, [fp, #8]
   2af10:	add	r0, r0, r1
   2af14:	ldr	r1, [r2, #32]
   2af18:	sub	r0, r0, r1
   2af1c:	str	r0, [r2, #36]	; 0x24
   2af20:	mov	r0, #1
   2af24:	str	r0, [r5, #176]	; 0xb0
   2af28:	mov	r0, r5
   2af2c:	mov	r1, r3
   2af30:	bl	114b8 <myhtml_queue_add@plt>
   2af34:	cmp	r0, #0
   2af38:	movne	r0, #69	; 0x45
   2af3c:	strne	r0, [r5, #160]	; 0xa0
   2af40:	movne	r4, #0
   2af44:	mov	r0, r4
   2af48:	pop	{r4, r5, fp, pc}

0002af4c <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   2af4c:	push	{r4, r5, fp, lr}
   2af50:	add	fp, sp, #8
   2af54:	mov	r4, r3
   2af58:	mov	r2, r1
   2af5c:	mov	r5, r0
   2af60:	ldr	r0, [r0, #192]	; 0xc0
   2af64:	ldr	ip, [fp, #8]
   2af68:	add	r3, r0, ip
   2af6c:	ldr	r1, [r1, #32]
   2af70:	sub	r1, r3, r1
   2af74:	str	r1, [r2, #36]	; 0x24
   2af78:	mov	r1, #1
   2af7c:	str	r1, [r5, #176]	; 0xb0
   2af80:	cmp	ip, #0
   2af84:	beq	2afa0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base+0x54>
   2af88:	ldr	r1, [r5, #56]	; 0x38
   2af8c:	ldr	r3, [r1, #48]	; 0x30
   2af90:	cmp	r3, #0
   2af94:	addne	r0, r0, r4
   2af98:	subne	r0, r0, r3
   2af9c:	strne	r0, [r1, #52]	; 0x34
   2afa0:	mov	r0, r5
   2afa4:	mov	r1, r4
   2afa8:	bl	114b8 <myhtml_queue_add@plt>
   2afac:	cmp	r0, #0
   2afb0:	movne	r0, #69	; 0x45
   2afb4:	strne	r0, [r5, #160]	; 0xa0
   2afb8:	movne	r4, #0
   2afbc:	mov	r0, r4
   2afc0:	pop	{r4, r5, fp, pc}

0002afc4 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   2afc4:	push	{r4, r5, fp, lr}
   2afc8:	add	fp, sp, #8
   2afcc:	sub	sp, sp, #8
   2afd0:	mov	r5, r3
   2afd4:	ldr	r2, [r0, #192]	; 0xc0
   2afd8:	ldr	ip, [fp, #8]
   2afdc:	add	r3, r2, ip
   2afe0:	ldr	r4, [r1, #32]
   2afe4:	sub	r3, r3, r4
   2afe8:	str	r3, [r1, #36]	; 0x24
   2afec:	str	ip, [sp]
   2aff0:	add	r3, r2, r5
   2aff4:	bl	11fe0 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   2aff8:	mov	r0, r5
   2affc:	sub	sp, fp, #8
   2b000:	pop	{r4, r5, fp, pc}

0002b004 <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   2b004:	push	{r4, r5, fp, lr}
   2b008:	add	fp, sp, #8
   2b00c:	mov	r4, r3
   2b010:	mov	r2, r1
   2b014:	mov	r5, r0
   2b018:	ldr	r0, [r0, #192]	; 0xc0
   2b01c:	ldr	r1, [fp, #8]
   2b020:	add	r0, r0, r1
   2b024:	ldr	r1, [r2, #32]
   2b028:	sub	r0, r0, r1
   2b02c:	str	r0, [r2, #36]	; 0x24
   2b030:	mov	r0, r5
   2b034:	mov	r1, r3
   2b038:	bl	114b8 <myhtml_queue_add@plt>
   2b03c:	cmp	r0, #0
   2b040:	movne	r0, #69	; 0x45
   2b044:	strne	r0, [r5, #160]	; 0xa0
   2b048:	movne	r4, #0
   2b04c:	mov	r0, r4
   2b050:	pop	{r4, r5, fp, pc}

0002b054 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   2b054:	push	{r4, r5, fp, lr}
   2b058:	add	fp, sp, #8
   2b05c:	mov	r4, r3
   2b060:	mov	r2, r1
   2b064:	mov	r5, r0
   2b068:	ldr	r0, [r0, #192]	; 0xc0
   2b06c:	ldr	ip, [fp, #8]
   2b070:	add	r3, r0, ip
   2b074:	ldr	r1, [r1, #32]
   2b078:	sub	r1, r3, r1
   2b07c:	str	r1, [r2, #36]	; 0x24
   2b080:	mov	r1, #1
   2b084:	str	r1, [r5, #176]	; 0xb0
   2b088:	cmp	ip, #0
   2b08c:	beq	2b0a8 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base+0x54>
   2b090:	ldr	r1, [r5, #56]	; 0x38
   2b094:	ldr	r3, [r1, #48]	; 0x30
   2b098:	cmp	r3, #0
   2b09c:	addne	r0, r0, r4
   2b0a0:	subne	r0, r0, r3
   2b0a4:	strne	r0, [r1, #52]	; 0x34
   2b0a8:	mov	r0, r5
   2b0ac:	mov	r1, r4
   2b0b0:	bl	114b8 <myhtml_queue_add@plt>
   2b0b4:	cmp	r0, #0
   2b0b8:	movne	r0, #69	; 0x45
   2b0bc:	strne	r0, [r5, #160]	; 0xa0
   2b0c0:	movne	r4, #0
   2b0c4:	mov	r0, r4
   2b0c8:	pop	{r4, r5, fp, pc}

0002b0cc <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   2b0cc:	push	{r4, r5, fp, lr}
   2b0d0:	add	fp, sp, #8
   2b0d4:	sub	sp, sp, #8
   2b0d8:	mov	r5, r3
   2b0dc:	ldr	r2, [r0, #192]	; 0xc0
   2b0e0:	ldr	ip, [fp, #8]
   2b0e4:	add	r3, r2, ip
   2b0e8:	ldr	r4, [r1, #32]
   2b0ec:	sub	r3, r3, r4
   2b0f0:	str	r3, [r1, #36]	; 0x24
   2b0f4:	str	ip, [sp]
   2b0f8:	add	r3, r2, r5
   2b0fc:	bl	121c0 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   2b100:	mov	r0, r5
   2b104:	sub	sp, fp, #8
   2b108:	pop	{r4, r5, fp, pc}

0002b10c <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   2b10c:	push	{r4, r5, fp, lr}
   2b110:	add	fp, sp, #8
   2b114:	mov	r4, r3
   2b118:	mov	r2, r1
   2b11c:	mov	r5, r0
   2b120:	ldr	r0, [r0, #192]	; 0xc0
   2b124:	ldr	r1, [fp, #8]
   2b128:	add	r0, r0, r1
   2b12c:	ldr	r1, [r2, #32]
   2b130:	sub	r0, r0, r1
   2b134:	str	r0, [r2, #36]	; 0x24
   2b138:	mov	r0, r5
   2b13c:	mov	r1, r3
   2b140:	bl	114b8 <myhtml_queue_add@plt>
   2b144:	cmp	r0, #0
   2b148:	movne	r0, #69	; 0x45
   2b14c:	strne	r0, [r5, #160]	; 0xa0
   2b150:	movne	r4, #0
   2b154:	mov	r0, r4
   2b158:	pop	{r4, r5, fp, pc}

0002b15c <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   2b15c:	push	{r4, r5, fp, lr}
   2b160:	add	fp, sp, #8
   2b164:	mov	r4, r3
   2b168:	mov	r2, r1
   2b16c:	mov	r5, r0
   2b170:	ldr	r0, [r0, #192]	; 0xc0
   2b174:	ldr	r1, [fp, #8]
   2b178:	add	r0, r0, r1
   2b17c:	ldr	r1, [r2, #32]
   2b180:	sub	r0, r0, r1
   2b184:	str	r0, [r2, #36]	; 0x24
   2b188:	mov	r0, r5
   2b18c:	mov	r1, r3
   2b190:	bl	114b8 <myhtml_queue_add@plt>
   2b194:	cmp	r0, #0
   2b198:	movne	r0, #69	; 0x45
   2b19c:	strne	r0, [r5, #160]	; 0xa0
   2b1a0:	movne	r4, #0
   2b1a4:	mov	r0, r4
   2b1a8:	pop	{r4, r5, fp, pc}

0002b1ac <myhtml_tokenizer_end_state_script_data@@Base>:
   2b1ac:	push	{r4, r5, r6, sl, fp, lr}
   2b1b0:	add	fp, sp, #16
   2b1b4:	sub	sp, sp, #8
   2b1b8:	mov	r6, r3
   2b1bc:	ldr	r3, [r0, #192]	; 0xc0
   2b1c0:	ldr	r4, [fp, #8]
   2b1c4:	add	r4, r3, r4
   2b1c8:	ldr	r5, [r1, #32]
   2b1cc:	sub	r5, r4, r5
   2b1d0:	str	r5, [r1, #36]	; 0x24
   2b1d4:	mov	r5, #64	; 0x40
   2b1d8:	str	r5, [sp]
   2b1dc:	add	r3, r3, r6
   2b1e0:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b1e4:	mov	r0, r6
   2b1e8:	sub	sp, fp, #16
   2b1ec:	pop	{r4, r5, r6, sl, fp, pc}

0002b1f0 <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   2b1f0:	push	{r4, r5, r6, sl, fp, lr}
   2b1f4:	add	fp, sp, #16
   2b1f8:	sub	sp, sp, #8
   2b1fc:	mov	r6, r3
   2b200:	ldr	r3, [r0, #192]	; 0xc0
   2b204:	ldr	r4, [fp, #8]
   2b208:	add	r4, r3, r4
   2b20c:	ldr	r5, [r1, #32]
   2b210:	sub	r5, r4, r5
   2b214:	str	r5, [r1, #36]	; 0x24
   2b218:	mov	r5, #64	; 0x40
   2b21c:	str	r5, [sp]
   2b220:	add	r3, r3, r6
   2b224:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b228:	mov	r0, r6
   2b22c:	sub	sp, fp, #16
   2b230:	pop	{r4, r5, r6, sl, fp, pc}

0002b234 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   2b234:	push	{r4, r5, r6, sl, fp, lr}
   2b238:	add	fp, sp, #16
   2b23c:	sub	sp, sp, #8
   2b240:	mov	r6, r3
   2b244:	ldr	r3, [r0, #192]	; 0xc0
   2b248:	ldr	r4, [fp, #8]
   2b24c:	add	r4, r3, r4
   2b250:	ldr	r5, [r1, #32]
   2b254:	sub	r5, r4, r5
   2b258:	str	r5, [r1, #36]	; 0x24
   2b25c:	mov	r5, #64	; 0x40
   2b260:	str	r5, [sp]
   2b264:	add	r3, r3, r6
   2b268:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b26c:	mov	r0, r6
   2b270:	sub	sp, fp, #16
   2b274:	pop	{r4, r5, r6, sl, fp, pc}

0002b278 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   2b278:	push	{r4, r5, r6, sl, fp, lr}
   2b27c:	add	fp, sp, #16
   2b280:	sub	sp, sp, #8
   2b284:	mov	r6, r3
   2b288:	ldr	r3, [r0, #192]	; 0xc0
   2b28c:	ldr	r4, [fp, #8]
   2b290:	add	r4, r3, r4
   2b294:	ldr	r5, [r1, #32]
   2b298:	sub	r5, r4, r5
   2b29c:	str	r5, [r1, #36]	; 0x24
   2b2a0:	mov	r5, #64	; 0x40
   2b2a4:	str	r5, [sp]
   2b2a8:	add	r3, r3, r6
   2b2ac:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b2b0:	mov	r0, r6
   2b2b4:	sub	sp, fp, #16
   2b2b8:	pop	{r4, r5, r6, sl, fp, pc}

0002b2bc <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   2b2bc:	push	{r4, r5, r6, sl, fp, lr}
   2b2c0:	add	fp, sp, #16
   2b2c4:	sub	sp, sp, #8
   2b2c8:	mov	r6, r3
   2b2cc:	ldr	r3, [r0, #192]	; 0xc0
   2b2d0:	ldr	r4, [fp, #8]
   2b2d4:	add	r4, r3, r4
   2b2d8:	ldr	r5, [r1, #32]
   2b2dc:	sub	r5, r4, r5
   2b2e0:	str	r5, [r1, #36]	; 0x24
   2b2e4:	mov	r5, #64	; 0x40
   2b2e8:	str	r5, [sp]
   2b2ec:	add	r3, r3, r6
   2b2f0:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b2f4:	mov	r0, r6
   2b2f8:	sub	sp, fp, #16
   2b2fc:	pop	{r4, r5, r6, sl, fp, pc}

0002b300 <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   2b300:	push	{r4, r5, r6, sl, fp, lr}
   2b304:	add	fp, sp, #16
   2b308:	sub	sp, sp, #8
   2b30c:	mov	r6, r3
   2b310:	ldr	r3, [r0, #192]	; 0xc0
   2b314:	ldr	r4, [fp, #8]
   2b318:	add	r4, r3, r4
   2b31c:	ldr	r5, [r1, #32]
   2b320:	sub	r5, r4, r5
   2b324:	str	r5, [r1, #36]	; 0x24
   2b328:	mov	r5, #64	; 0x40
   2b32c:	str	r5, [sp]
   2b330:	add	r3, r3, r6
   2b334:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b338:	mov	r0, r6
   2b33c:	sub	sp, fp, #16
   2b340:	pop	{r4, r5, r6, sl, fp, pc}

0002b344 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   2b344:	push	{r4, r5, r6, sl, fp, lr}
   2b348:	add	fp, sp, #16
   2b34c:	sub	sp, sp, #8
   2b350:	mov	r6, r3
   2b354:	ldr	r3, [r0, #192]	; 0xc0
   2b358:	ldr	r4, [fp, #8]
   2b35c:	add	r4, r3, r4
   2b360:	ldr	r5, [r1, #32]
   2b364:	sub	r5, r4, r5
   2b368:	str	r5, [r1, #36]	; 0x24
   2b36c:	mov	r5, #64	; 0x40
   2b370:	str	r5, [sp]
   2b374:	add	r3, r3, r6
   2b378:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b37c:	mov	r0, r6
   2b380:	sub	sp, fp, #16
   2b384:	pop	{r4, r5, r6, sl, fp, pc}

0002b388 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   2b388:	push	{r4, r5, r6, sl, fp, lr}
   2b38c:	add	fp, sp, #16
   2b390:	sub	sp, sp, #8
   2b394:	mov	r6, r3
   2b398:	ldr	r3, [r0, #192]	; 0xc0
   2b39c:	ldr	r4, [fp, #8]
   2b3a0:	add	r4, r3, r4
   2b3a4:	ldr	r5, [r1, #32]
   2b3a8:	sub	r5, r4, r5
   2b3ac:	str	r5, [r1, #36]	; 0x24
   2b3b0:	mov	r5, #64	; 0x40
   2b3b4:	str	r5, [sp]
   2b3b8:	add	r3, r3, r6
   2b3bc:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b3c0:	mov	r0, r6
   2b3c4:	sub	sp, fp, #16
   2b3c8:	pop	{r4, r5, r6, sl, fp, pc}

0002b3cc <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   2b3cc:	push	{r4, r5, r6, sl, fp, lr}
   2b3d0:	add	fp, sp, #16
   2b3d4:	sub	sp, sp, #8
   2b3d8:	mov	r6, r3
   2b3dc:	ldr	r3, [r0, #192]	; 0xc0
   2b3e0:	ldr	r4, [fp, #8]
   2b3e4:	add	r4, r3, r4
   2b3e8:	ldr	r5, [r1, #32]
   2b3ec:	sub	r5, r4, r5
   2b3f0:	str	r5, [r1, #36]	; 0x24
   2b3f4:	mov	r5, #64	; 0x40
   2b3f8:	str	r5, [sp]
   2b3fc:	add	r3, r3, r6
   2b400:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b404:	mov	r0, r6
   2b408:	sub	sp, fp, #16
   2b40c:	pop	{r4, r5, r6, sl, fp, pc}

0002b410 <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   2b410:	push	{r4, r5, r6, sl, fp, lr}
   2b414:	add	fp, sp, #16
   2b418:	sub	sp, sp, #8
   2b41c:	mov	r6, r3
   2b420:	ldr	r3, [r0, #192]	; 0xc0
   2b424:	ldr	r4, [fp, #8]
   2b428:	add	r4, r3, r4
   2b42c:	ldr	r5, [r1, #32]
   2b430:	sub	r5, r4, r5
   2b434:	str	r5, [r1, #36]	; 0x24
   2b438:	mov	r5, #64	; 0x40
   2b43c:	str	r5, [sp]
   2b440:	add	r3, r3, r6
   2b444:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b448:	mov	r0, r6
   2b44c:	sub	sp, fp, #16
   2b450:	pop	{r4, r5, r6, sl, fp, pc}

0002b454 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   2b454:	push	{r4, r5, r6, sl, fp, lr}
   2b458:	add	fp, sp, #16
   2b45c:	sub	sp, sp, #8
   2b460:	mov	r6, r3
   2b464:	ldr	r3, [r0, #192]	; 0xc0
   2b468:	ldr	r4, [fp, #8]
   2b46c:	add	r4, r3, r4
   2b470:	ldr	r5, [r1, #32]
   2b474:	sub	r5, r4, r5
   2b478:	str	r5, [r1, #36]	; 0x24
   2b47c:	mov	r5, #64	; 0x40
   2b480:	str	r5, [sp]
   2b484:	add	r3, r3, r6
   2b488:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b48c:	mov	r0, r6
   2b490:	sub	sp, fp, #16
   2b494:	pop	{r4, r5, r6, sl, fp, pc}

0002b498 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   2b498:	push	{r4, r5, r6, sl, fp, lr}
   2b49c:	add	fp, sp, #16
   2b4a0:	sub	sp, sp, #8
   2b4a4:	mov	r6, r3
   2b4a8:	ldr	r3, [r0, #192]	; 0xc0
   2b4ac:	ldr	r4, [fp, #8]
   2b4b0:	add	r4, r3, r4
   2b4b4:	ldr	r5, [r1, #32]
   2b4b8:	sub	r5, r4, r5
   2b4bc:	str	r5, [r1, #36]	; 0x24
   2b4c0:	mov	r5, #64	; 0x40
   2b4c4:	str	r5, [sp]
   2b4c8:	add	r3, r3, r6
   2b4cc:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b4d0:	mov	r0, r6
   2b4d4:	sub	sp, fp, #16
   2b4d8:	pop	{r4, r5, r6, sl, fp, pc}

0002b4dc <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   2b4dc:	push	{r4, r5, r6, sl, fp, lr}
   2b4e0:	add	fp, sp, #16
   2b4e4:	sub	sp, sp, #8
   2b4e8:	mov	r6, r3
   2b4ec:	ldr	r3, [r0, #192]	; 0xc0
   2b4f0:	ldr	r4, [fp, #8]
   2b4f4:	add	r4, r3, r4
   2b4f8:	ldr	r5, [r1, #32]
   2b4fc:	sub	r5, r4, r5
   2b500:	str	r5, [r1, #36]	; 0x24
   2b504:	mov	r5, #64	; 0x40
   2b508:	str	r5, [sp]
   2b50c:	add	r3, r3, r6
   2b510:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b514:	mov	r0, r6
   2b518:	sub	sp, fp, #16
   2b51c:	pop	{r4, r5, r6, sl, fp, pc}

0002b520 <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   2b520:	push	{r4, r5, r6, sl, fp, lr}
   2b524:	add	fp, sp, #16
   2b528:	sub	sp, sp, #8
   2b52c:	mov	r6, r3
   2b530:	ldr	r3, [r0, #192]	; 0xc0
   2b534:	ldr	r4, [fp, #8]
   2b538:	add	r4, r3, r4
   2b53c:	ldr	r5, [r1, #32]
   2b540:	sub	r5, r4, r5
   2b544:	str	r5, [r1, #36]	; 0x24
   2b548:	mov	r5, #64	; 0x40
   2b54c:	str	r5, [sp]
   2b550:	add	r3, r3, r6
   2b554:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b558:	mov	r0, r6
   2b55c:	sub	sp, fp, #16
   2b560:	pop	{r4, r5, r6, sl, fp, pc}

0002b564 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   2b564:	push	{r4, r5, r6, sl, fp, lr}
   2b568:	add	fp, sp, #16
   2b56c:	sub	sp, sp, #8
   2b570:	mov	r6, r3
   2b574:	ldr	r3, [r0, #192]	; 0xc0
   2b578:	ldr	r4, [fp, #8]
   2b57c:	add	r4, r3, r4
   2b580:	ldr	r5, [r1, #32]
   2b584:	sub	r5, r4, r5
   2b588:	str	r5, [r1, #36]	; 0x24
   2b58c:	mov	r5, #64	; 0x40
   2b590:	str	r5, [sp]
   2b594:	add	r3, r3, r6
   2b598:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b59c:	mov	r0, r6
   2b5a0:	sub	sp, fp, #16
   2b5a4:	pop	{r4, r5, r6, sl, fp, pc}

0002b5a8 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   2b5a8:	push	{r4, r5, r6, sl, fp, lr}
   2b5ac:	add	fp, sp, #16
   2b5b0:	sub	sp, sp, #8
   2b5b4:	mov	r6, r3
   2b5b8:	ldr	r3, [r0, #192]	; 0xc0
   2b5bc:	ldr	r4, [fp, #8]
   2b5c0:	add	r4, r3, r4
   2b5c4:	ldr	r5, [r1, #32]
   2b5c8:	sub	r5, r4, r5
   2b5cc:	str	r5, [r1, #36]	; 0x24
   2b5d0:	mov	r5, #64	; 0x40
   2b5d4:	str	r5, [sp]
   2b5d8:	add	r3, r3, r6
   2b5dc:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b5e0:	mov	r0, r6
   2b5e4:	sub	sp, fp, #16
   2b5e8:	pop	{r4, r5, r6, sl, fp, pc}

0002b5ec <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   2b5ec:	push	{r4, r5, r6, sl, fp, lr}
   2b5f0:	add	fp, sp, #16
   2b5f4:	sub	sp, sp, #8
   2b5f8:	mov	r6, r3
   2b5fc:	ldr	r3, [r0, #192]	; 0xc0
   2b600:	ldr	r4, [fp, #8]
   2b604:	add	r4, r3, r4
   2b608:	ldr	r5, [r1, #32]
   2b60c:	sub	r5, r4, r5
   2b610:	str	r5, [r1, #36]	; 0x24
   2b614:	mov	r5, #64	; 0x40
   2b618:	str	r5, [sp]
   2b61c:	add	r3, r3, r6
   2b620:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b624:	mov	r0, r6
   2b628:	sub	sp, fp, #16
   2b62c:	pop	{r4, r5, r6, sl, fp, pc}

0002b630 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   2b630:	push	{r4, r5, r6, sl, fp, lr}
   2b634:	add	fp, sp, #16
   2b638:	sub	sp, sp, #8
   2b63c:	mov	r6, r3
   2b640:	ldr	r3, [r0, #192]	; 0xc0
   2b644:	ldr	r4, [fp, #8]
   2b648:	add	r4, r3, r4
   2b64c:	ldr	r5, [r1, #32]
   2b650:	sub	r5, r4, r5
   2b654:	str	r5, [r1, #36]	; 0x24
   2b658:	mov	r5, #64	; 0x40
   2b65c:	str	r5, [sp]
   2b660:	add	r3, r3, r6
   2b664:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b668:	mov	r0, r6
   2b66c:	sub	sp, fp, #16
   2b670:	pop	{r4, r5, r6, sl, fp, pc}

0002b674 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   2b674:	ldr	r0, [sp]
   2b678:	bx	lr

0002b67c <myhtml_tokenizer_state_script_data@@Base>:
   2b67c:	push	{fp, lr}
   2b680:	mov	fp, sp
   2b684:	ldr	ip, [fp, #8]
   2b688:	cmp	r3, ip
   2b68c:	bcs	2b6b4 <myhtml_tokenizer_state_script_data@@Base+0x38>
   2b690:	rsb	ip, ip, #0
   2b694:	rsb	lr, r3, #0
   2b698:	ldrb	r3, [r2, -lr]
   2b69c:	cmp	r3, #60	; 0x3c
   2b6a0:	beq	2b6bc <myhtml_tokenizer_state_script_data@@Base+0x40>
   2b6a4:	sub	lr, lr, #1
   2b6a8:	cmp	ip, lr
   2b6ac:	bne	2b698 <myhtml_tokenizer_state_script_data@@Base+0x1c>
   2b6b0:	rsb	r3, lr, #0
   2b6b4:	mov	r0, r3
   2b6b8:	pop	{fp, pc}
   2b6bc:	ldr	r2, [r0, #192]	; 0xc0
   2b6c0:	sub	r2, r2, lr
   2b6c4:	str	r2, [r1, #32]
   2b6c8:	mov	r1, #16
   2b6cc:	str	r1, [r0, #160]	; 0xa0
   2b6d0:	rsb	r3, lr, #1
   2b6d4:	mov	r0, r3
   2b6d8:	pop	{fp, pc}

0002b6dc <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   2b6dc:	ldrb	r2, [r2, r3]
   2b6e0:	cmp	r2, #33	; 0x21
   2b6e4:	beq	2b6fc <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x20>
   2b6e8:	mov	r1, #5
   2b6ec:	cmp	r2, #47	; 0x2f
   2b6f0:	addeq	r3, r3, #1
   2b6f4:	moveq	r1, #17
   2b6f8:	b	2b704 <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x28>
   2b6fc:	add	r3, r3, #1
   2b700:	mov	r1, #19
   2b704:	str	r1, [r0, #160]	; 0xa0
   2b708:	mov	r0, r3
   2b70c:	bx	lr

0002b710 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   2b710:	ldrb	r1, [r2, r3]
   2b714:	mov	r2, #5
   2b718:	cmp	r1, #45	; 0x2d
   2b71c:	movweq	r2, #20
   2b720:	str	r2, [r0, #160]	; 0xa0
   2b724:	addeq	r3, r3, #1
   2b728:	mov	r0, r3
   2b72c:	bx	lr

0002b730 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   2b730:	ldrb	r1, [r2, r3]
   2b734:	mov	r2, #5
   2b738:	cmp	r1, #45	; 0x2d
   2b73c:	movweq	r2, #23
   2b740:	str	r2, [r0, #160]	; 0xa0
   2b744:	addeq	r3, r3, #1
   2b748:	mov	r0, r3
   2b74c:	bx	lr

0002b750 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   2b750:	ldrb	r2, [r2, r3]
   2b754:	and	r2, r2, #223	; 0xdf
   2b758:	sub	r2, r2, #65	; 0x41
   2b75c:	uxtb	r2, r2
   2b760:	mov	ip, #5
   2b764:	cmp	r2, #25
   2b768:	bhi	2b77c <myhtml_tokenizer_state_script_data_end_tag_open@@Base+0x2c>
   2b76c:	ldr	r2, [r0, #192]	; 0xc0
   2b770:	add	r2, r2, r3
   2b774:	str	r2, [r1, #12]
   2b778:	mov	ip, #18
   2b77c:	str	ip, [r0, #160]	; 0xa0
   2b780:	mov	r0, r3
   2b784:	bx	lr

0002b788 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   2b788:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2b78c:	add	fp, sp, #24
   2b790:	sub	sp, sp, #8
   2b794:	mov	r4, r3
   2b798:	mov	r5, r0
   2b79c:	ldr	r0, [fp, #8]
   2b7a0:	cmp	r3, r0
   2b7a4:	bcs	2ba1c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b7a8:	mov	r6, r2
   2b7ac:	mov	r7, r1
   2b7b0:	rsb	r0, r0, #0
   2b7b4:	add	r4, r4, #1
   2b7b8:	b	2b7cc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x44>
   2b7bc:	add	r4, r4, #1
   2b7c0:	add	r1, r0, r4
   2b7c4:	cmp	r1, #1
   2b7c8:	beq	2b8ec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x164>
   2b7cc:	add	r1, r6, r4
   2b7d0:	ldrb	r1, [r1, #-1]
   2b7d4:	sub	r2, r1, #9
   2b7d8:	cmp	r2, #53	; 0x35
   2b7dc:	bhi	2b8c4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x13c>
   2b7e0:	add	r3, pc, #4
   2b7e4:	ldr	r2, [r3, r2, lsl #2]
   2b7e8:	add	pc, r3, r2
   2b7ec:	andeq	r0, r0, r8, lsl #2
   2b7f0:	andeq	r0, r0, r8, lsl #2
   2b7f4:	ldrdeq	r0, [r0], -r8
   2b7f8:	andeq	r0, r0, r8, lsl #2
   2b7fc:	andeq	r0, r0, r8, lsl #2
   2b800:	ldrdeq	r0, [r0], -r8
   2b804:	ldrdeq	r0, [r0], -r8
   2b808:	ldrdeq	r0, [r0], -r8
   2b80c:	ldrdeq	r0, [r0], -r8
   2b810:	ldrdeq	r0, [r0], -r8
   2b814:	ldrdeq	r0, [r0], -r8
   2b818:	ldrdeq	r0, [r0], -r8
   2b81c:	ldrdeq	r0, [r0], -r8
   2b820:	ldrdeq	r0, [r0], -r8
   2b824:	ldrdeq	r0, [r0], -r8
   2b828:	ldrdeq	r0, [r0], -r8
   2b82c:	ldrdeq	r0, [r0], -r8
   2b830:	ldrdeq	r0, [r0], -r8
   2b834:	ldrdeq	r0, [r0], -r8
   2b838:	ldrdeq	r0, [r0], -r8
   2b83c:	ldrdeq	r0, [r0], -r8
   2b840:	ldrdeq	r0, [r0], -r8
   2b844:	ldrdeq	r0, [r0], -r8
   2b848:	andeq	r0, r0, r8, lsl #2
   2b84c:	ldrdeq	r0, [r0], -r8
   2b850:	ldrdeq	r0, [r0], -r8
   2b854:	ldrdeq	r0, [r0], -r8
   2b858:	ldrdeq	r0, [r0], -r8
   2b85c:	ldrdeq	r0, [r0], -r8
   2b860:	ldrdeq	r0, [r0], -r8
   2b864:	ldrdeq	r0, [r0], -r8
   2b868:	ldrdeq	r0, [r0], -r8
   2b86c:	ldrdeq	r0, [r0], -r8
   2b870:	ldrdeq	r0, [r0], -r8
   2b874:	ldrdeq	r0, [r0], -r8
   2b878:	ldrdeq	r0, [r0], -r8
   2b87c:	ldrdeq	r0, [r0], -r8
   2b880:	ldrdeq	r0, [r0], -r8
   2b884:	muleq	r0, ip, r1
   2b888:	ldrdeq	r0, [r0], -r8
   2b88c:	ldrdeq	r0, [r0], -r8
   2b890:	ldrdeq	r0, [r0], -r8
   2b894:	ldrdeq	r0, [r0], -r8
   2b898:	ldrdeq	r0, [r0], -r8
   2b89c:	ldrdeq	r0, [r0], -r8
   2b8a0:	ldrdeq	r0, [r0], -r8
   2b8a4:	ldrdeq	r0, [r0], -r8
   2b8a8:	ldrdeq	r0, [r0], -r8
   2b8ac:	ldrdeq	r0, [r0], -r8
   2b8b0:	ldrdeq	r0, [r0], -r8
   2b8b4:	ldrdeq	r0, [r0], -r8
   2b8b8:	ldrdeq	r0, [r0], -r8
   2b8bc:	ldrdeq	r0, [r0], -r8
   2b8c0:	andeq	r0, r0, r8, ror #3
   2b8c4:	sub	r2, r1, #97	; 0x61
   2b8c8:	uxtb	r2, r2
   2b8cc:	cmp	r2, #26
   2b8d0:	bcc	2b7bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x34>
   2b8d4:	sub	r1, r1, #65	; 0x41
   2b8d8:	uxtb	r1, r1
   2b8dc:	cmp	r1, #26
   2b8e0:	bcc	2b7bc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x34>
   2b8e4:	mov	r0, #5
   2b8e8:	str	r0, [r5, #160]	; 0xa0
   2b8ec:	sub	r4, r4, #1
   2b8f0:	b	2ba1c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b8f4:	ldr	r8, [r7, #12]
   2b8f8:	ldr	r0, [r5, #192]	; 0xc0
   2b8fc:	sub	r0, r0, r8
   2b900:	add	r0, r0, r4
   2b904:	cmp	r0, #7
   2b908:	bne	2ba14 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b90c:	mov	r0, r5
   2b910:	mov	r1, r8
   2b914:	mov	r2, #6
   2b918:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2b91c:	ldr	r1, [pc, #464]	; 2baf4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x36c>
   2b920:	add	r1, pc, r1
   2b924:	mov	r2, #6
   2b928:	bl	11704 <mycore_strncasecmp@plt>
   2b92c:	mov	r1, #5
   2b930:	cmp	r0, #0
   2b934:	bne	2b9cc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   2b938:	ldr	r0, [r5, #192]	; 0xc0
   2b93c:	mov	r1, #64	; 0x40
   2b940:	str	r1, [sp]
   2b944:	add	r0, r0, r4
   2b948:	sub	r3, r0, #9
   2b94c:	mov	r0, r5
   2b950:	mov	r1, r7
   2b954:	mov	r2, r6
   2b958:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2b95c:	cmp	r0, #0
   2b960:	beq	2badc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x354>
   2b964:	mov	r1, #6
   2b968:	str	r8, [r0, #24]
   2b96c:	str	r1, [r0, #28]
   2b970:	mov	r1, #1
   2b974:	str	r1, [r0, #48]	; 0x30
   2b978:	mov	r1, #112	; 0x70
   2b97c:	str	r1, [r0]
   2b980:	mov	r1, #33	; 0x21
   2b984:	b	2b9cc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x244>
   2b988:	ldr	r8, [r7, #12]
   2b98c:	ldr	r0, [r5, #192]	; 0xc0
   2b990:	sub	r0, r0, r8
   2b994:	add	r0, r0, r4
   2b998:	cmp	r0, #7
   2b99c:	bne	2ba14 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b9a0:	mov	r0, r5
   2b9a4:	mov	r1, r8
   2b9a8:	mov	r2, #6
   2b9ac:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2b9b0:	ldr	r1, [pc, #320]	; 2baf8 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x370>
   2b9b4:	add	r1, pc, r1
   2b9b8:	mov	r2, #6
   2b9bc:	bl	11704 <mycore_strncasecmp@plt>
   2b9c0:	mov	r1, #5
   2b9c4:	cmp	r0, #0
   2b9c8:	beq	2ba28 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2a0>
   2b9cc:	str	r1, [r5, #160]	; 0xa0
   2b9d0:	b	2ba1c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2b9d4:	ldr	r8, [r7, #12]
   2b9d8:	ldr	r0, [r5, #192]	; 0xc0
   2b9dc:	sub	r0, r0, r8
   2b9e0:	add	r0, r0, r4
   2b9e4:	cmp	r0, #7
   2b9e8:	bne	2ba14 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x28c>
   2b9ec:	mov	r0, r5
   2b9f0:	mov	r1, r8
   2b9f4:	mov	r2, #6
   2b9f8:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2b9fc:	ldr	r1, [pc, #248]	; 2bafc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x374>
   2ba00:	add	r1, pc, r1
   2ba04:	mov	r2, #6
   2ba08:	bl	11704 <mycore_strncasecmp@plt>
   2ba0c:	cmp	r0, #0
   2ba10:	beq	2ba68 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2e0>
   2ba14:	mov	r0, #5
   2ba18:	str	r0, [r5, #160]	; 0xa0
   2ba1c:	mov	r0, r4
   2ba20:	sub	sp, fp, #24
   2ba24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ba28:	ldr	r0, [r5, #192]	; 0xc0
   2ba2c:	mov	r1, #64	; 0x40
   2ba30:	str	r1, [sp]
   2ba34:	add	r0, r0, r4
   2ba38:	sub	r3, r0, #9
   2ba3c:	mov	r0, r5
   2ba40:	mov	r1, r7
   2ba44:	mov	r2, r6
   2ba48:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ba4c:	cmp	r0, #0
   2ba50:	beq	2badc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x354>
   2ba54:	mov	r1, #6
   2ba58:	str	r8, [r0, #24]
   2ba5c:	str	r1, [r0, #28]
   2ba60:	mov	r1, #3
   2ba64:	b	2b974 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1ec>
   2ba68:	ldr	r0, [r5, #192]	; 0xc0
   2ba6c:	mov	r1, #64	; 0x40
   2ba70:	str	r1, [sp]
   2ba74:	add	r0, r0, r4
   2ba78:	sub	r3, r0, #9
   2ba7c:	mov	r0, r5
   2ba80:	mov	r1, r7
   2ba84:	mov	r2, r6
   2ba88:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2ba8c:	cmp	r0, #0
   2ba90:	beq	2badc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x354>
   2ba94:	mov	r2, r0
   2ba98:	mov	r0, #6
   2ba9c:	str	r8, [r2, #24]
   2baa0:	str	r0, [r2, #28]
   2baa4:	mov	r0, #1
   2baa8:	str	r0, [r2, #48]	; 0x30
   2baac:	mov	r0, #112	; 0x70
   2bab0:	str	r0, [r2]
   2bab4:	ldr	r0, [r2, #32]
   2bab8:	ldr	r1, [r5, #192]	; 0xc0
   2babc:	sub	r0, r1, r0
   2bac0:	add	r0, r0, r4
   2bac4:	str	r0, [r2, #36]	; 0x24
   2bac8:	mov	r0, r5
   2bacc:	mov	r1, r4
   2bad0:	bl	114b8 <myhtml_queue_add@plt>
   2bad4:	cmp	r0, #0
   2bad8:	beq	2baec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x364>
   2badc:	mov	r0, #69	; 0x45
   2bae0:	str	r0, [r5, #160]	; 0xa0
   2bae4:	mov	r4, #0
   2bae8:	b	2ba1c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x294>
   2baec:	mov	r0, #0
   2baf0:	b	2ba18 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x290>
   2baf4:	ldrdeq	r1, [sp], -r3
   2baf8:	andeq	r1, sp, pc, lsr r7
   2bafc:	strdeq	r1, [sp], -r3

0002bb00 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   2bb00:	ldrb	r1, [r2, r3]
   2bb04:	cmp	r1, #45	; 0x2d
   2bb08:	beq	2bb2c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   2bb0c:	cmp	r1, #60	; 0x3c
   2bb10:	bne	2bb1c <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x1c>
   2bb14:	mov	r1, #24
   2bb18:	b	2bb28 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x28>
   2bb1c:	cmp	r1, #62	; 0x3e
   2bb20:	movne	r1, #21
   2bb24:	moveq	r1, #5
   2bb28:	str	r1, [r0, #160]	; 0xa0
   2bb2c:	add	r0, r3, #1
   2bb30:	bx	lr

0002bb34 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   2bb34:	ldrb	r2, [r2, r3]
   2bb38:	cmp	r2, #47	; 0x2f
   2bb3c:	moveq	r1, #25
   2bb40:	streq	r1, [r0, #160]	; 0xa0
   2bb44:	addeq	r3, r3, #1
   2bb48:	moveq	r0, r3
   2bb4c:	bxeq	lr
   2bb50:	and	r2, r2, #223	; 0xdf
   2bb54:	sub	r2, r2, #65	; 0x41
   2bb58:	uxtb	r2, r2
   2bb5c:	cmp	r2, #25
   2bb60:	bhi	2bb78 <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x44>
   2bb64:	ldr	r2, [r0, #192]	; 0xc0
   2bb68:	add	r2, r2, r3
   2bb6c:	str	r2, [r1, #12]
   2bb70:	mov	r1, #27
   2bb74:	b	2bb7c <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x48>
   2bb78:	mov	r1, #21
   2bb7c:	str	r1, [r0, #160]	; 0xa0
   2bb80:	mov	r0, r3
   2bb84:	bx	lr

0002bb88 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   2bb88:	ldrb	r2, [r2, r3]
   2bb8c:	and	r2, r2, #223	; 0xdf
   2bb90:	sub	r2, r2, #65	; 0x41
   2bb94:	uxtb	r2, r2
   2bb98:	mov	ip, #21
   2bb9c:	cmp	r2, #25
   2bba0:	bhi	2bbb4 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base+0x2c>
   2bba4:	ldr	r2, [r0, #192]	; 0xc0
   2bba8:	add	r2, r2, r3
   2bbac:	str	r2, [r1, #12]
   2bbb0:	mov	ip, #26
   2bbb4:	str	ip, [r0, #160]	; 0xa0
   2bbb8:	mov	r0, r3
   2bbbc:	bx	lr

0002bbc0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   2bbc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2bbc4:	add	fp, sp, #24
   2bbc8:	sub	sp, sp, #8
   2bbcc:	mov	r4, r3
   2bbd0:	mov	r5, r0
   2bbd4:	ldr	r0, [fp, #8]
   2bbd8:	cmp	r3, r0
   2bbdc:	bcs	2be54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bbe0:	mov	r6, r2
   2bbe4:	mov	r7, r1
   2bbe8:	rsb	r0, r0, #0
   2bbec:	add	r4, r4, #1
   2bbf0:	b	2bc04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x44>
   2bbf4:	add	r4, r4, #1
   2bbf8:	add	r1, r0, r4
   2bbfc:	cmp	r1, #1
   2bc00:	beq	2bd24 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x164>
   2bc04:	add	r1, r6, r4
   2bc08:	ldrb	r1, [r1, #-1]
   2bc0c:	sub	r2, r1, #9
   2bc10:	cmp	r2, #53	; 0x35
   2bc14:	bhi	2bcfc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x13c>
   2bc18:	add	r3, pc, #4
   2bc1c:	ldr	r2, [r3, r2, lsl #2]
   2bc20:	add	pc, r3, r2
   2bc24:	andeq	r0, r0, r8, lsl #2
   2bc28:	andeq	r0, r0, r8, lsl #2
   2bc2c:	ldrdeq	r0, [r0], -r8
   2bc30:	andeq	r0, r0, r8, lsl #2
   2bc34:	andeq	r0, r0, r8, lsl #2
   2bc38:	ldrdeq	r0, [r0], -r8
   2bc3c:	ldrdeq	r0, [r0], -r8
   2bc40:	ldrdeq	r0, [r0], -r8
   2bc44:	ldrdeq	r0, [r0], -r8
   2bc48:	ldrdeq	r0, [r0], -r8
   2bc4c:	ldrdeq	r0, [r0], -r8
   2bc50:	ldrdeq	r0, [r0], -r8
   2bc54:	ldrdeq	r0, [r0], -r8
   2bc58:	ldrdeq	r0, [r0], -r8
   2bc5c:	ldrdeq	r0, [r0], -r8
   2bc60:	ldrdeq	r0, [r0], -r8
   2bc64:	ldrdeq	r0, [r0], -r8
   2bc68:	ldrdeq	r0, [r0], -r8
   2bc6c:	ldrdeq	r0, [r0], -r8
   2bc70:	ldrdeq	r0, [r0], -r8
   2bc74:	ldrdeq	r0, [r0], -r8
   2bc78:	ldrdeq	r0, [r0], -r8
   2bc7c:	ldrdeq	r0, [r0], -r8
   2bc80:	andeq	r0, r0, r8, lsl #2
   2bc84:	ldrdeq	r0, [r0], -r8
   2bc88:	ldrdeq	r0, [r0], -r8
   2bc8c:	ldrdeq	r0, [r0], -r8
   2bc90:	ldrdeq	r0, [r0], -r8
   2bc94:	ldrdeq	r0, [r0], -r8
   2bc98:	ldrdeq	r0, [r0], -r8
   2bc9c:	ldrdeq	r0, [r0], -r8
   2bca0:	ldrdeq	r0, [r0], -r8
   2bca4:	ldrdeq	r0, [r0], -r8
   2bca8:	ldrdeq	r0, [r0], -r8
   2bcac:	ldrdeq	r0, [r0], -r8
   2bcb0:	ldrdeq	r0, [r0], -r8
   2bcb4:	ldrdeq	r0, [r0], -r8
   2bcb8:	ldrdeq	r0, [r0], -r8
   2bcbc:	muleq	r0, ip, r1
   2bcc0:	ldrdeq	r0, [r0], -r8
   2bcc4:	ldrdeq	r0, [r0], -r8
   2bcc8:	ldrdeq	r0, [r0], -r8
   2bccc:	ldrdeq	r0, [r0], -r8
   2bcd0:	ldrdeq	r0, [r0], -r8
   2bcd4:	ldrdeq	r0, [r0], -r8
   2bcd8:	ldrdeq	r0, [r0], -r8
   2bcdc:	ldrdeq	r0, [r0], -r8
   2bce0:	ldrdeq	r0, [r0], -r8
   2bce4:	ldrdeq	r0, [r0], -r8
   2bce8:	ldrdeq	r0, [r0], -r8
   2bcec:	ldrdeq	r0, [r0], -r8
   2bcf0:	ldrdeq	r0, [r0], -r8
   2bcf4:	ldrdeq	r0, [r0], -r8
   2bcf8:	andeq	r0, r0, r8, ror #3
   2bcfc:	sub	r2, r1, #97	; 0x61
   2bd00:	uxtb	r2, r2
   2bd04:	cmp	r2, #26
   2bd08:	bcc	2bbf4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x34>
   2bd0c:	sub	r1, r1, #65	; 0x41
   2bd10:	uxtb	r1, r1
   2bd14:	cmp	r1, #26
   2bd18:	bcc	2bbf4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x34>
   2bd1c:	mov	r0, #21
   2bd20:	str	r0, [r5, #160]	; 0xa0
   2bd24:	sub	r4, r4, #1
   2bd28:	b	2be54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bd2c:	ldr	r8, [r7, #12]
   2bd30:	ldr	r0, [r5, #192]	; 0xc0
   2bd34:	sub	r0, r0, r8
   2bd38:	add	r0, r0, r4
   2bd3c:	cmp	r0, #7
   2bd40:	bne	2be4c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2bd44:	mov	r0, r5
   2bd48:	mov	r1, r8
   2bd4c:	mov	r2, #6
   2bd50:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2bd54:	ldr	r1, [pc, #464]	; 2bf2c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x36c>
   2bd58:	add	r1, pc, r1
   2bd5c:	mov	r2, #6
   2bd60:	bl	11704 <mycore_strncasecmp@plt>
   2bd64:	mov	r1, #21
   2bd68:	cmp	r0, #0
   2bd6c:	bne	2be04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   2bd70:	ldr	r0, [r5, #192]	; 0xc0
   2bd74:	mov	r1, #64	; 0x40
   2bd78:	str	r1, [sp]
   2bd7c:	add	r0, r0, r4
   2bd80:	sub	r3, r0, #9
   2bd84:	mov	r0, r5
   2bd88:	mov	r1, r7
   2bd8c:	mov	r2, r6
   2bd90:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bd94:	cmp	r0, #0
   2bd98:	beq	2bf1c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x35c>
   2bd9c:	mov	r1, #6
   2bda0:	str	r8, [r0, #24]
   2bda4:	str	r1, [r0, #28]
   2bda8:	mov	r1, #1
   2bdac:	str	r1, [r0, #48]	; 0x30
   2bdb0:	mov	r1, #112	; 0x70
   2bdb4:	str	r1, [r0]
   2bdb8:	mov	r1, #33	; 0x21
   2bdbc:	b	2be04 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x244>
   2bdc0:	ldr	r8, [r7, #12]
   2bdc4:	ldr	r0, [r5, #192]	; 0xc0
   2bdc8:	sub	r0, r0, r8
   2bdcc:	add	r0, r0, r4
   2bdd0:	cmp	r0, #7
   2bdd4:	bne	2be4c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2bdd8:	mov	r0, r5
   2bddc:	mov	r1, r8
   2bde0:	mov	r2, #6
   2bde4:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2bde8:	ldr	r1, [pc, #320]	; 2bf30 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x370>
   2bdec:	add	r1, pc, r1
   2bdf0:	mov	r2, #6
   2bdf4:	bl	11704 <mycore_strncasecmp@plt>
   2bdf8:	mov	r1, #21
   2bdfc:	cmp	r0, #0
   2be00:	beq	2be60 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2a0>
   2be04:	str	r1, [r5, #160]	; 0xa0
   2be08:	b	2be54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2be0c:	ldr	r8, [r7, #12]
   2be10:	ldr	r0, [r5, #192]	; 0xc0
   2be14:	sub	r0, r0, r8
   2be18:	add	r0, r0, r4
   2be1c:	cmp	r0, #7
   2be20:	bne	2be4c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   2be24:	mov	r0, r5
   2be28:	mov	r1, r8
   2be2c:	mov	r2, #6
   2be30:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2be34:	ldr	r1, [pc, #248]	; 2bf34 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x374>
   2be38:	add	r1, pc, r1
   2be3c:	mov	r2, #6
   2be40:	bl	11704 <mycore_strncasecmp@plt>
   2be44:	cmp	r0, #0
   2be48:	beq	2bea0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2e0>
   2be4c:	mov	r0, #21
   2be50:	str	r0, [r5, #160]	; 0xa0
   2be54:	mov	r0, r4
   2be58:	sub	sp, fp, #24
   2be5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2be60:	ldr	r0, [r5, #192]	; 0xc0
   2be64:	mov	r1, #64	; 0x40
   2be68:	str	r1, [sp]
   2be6c:	add	r0, r0, r4
   2be70:	sub	r3, r0, #9
   2be74:	mov	r0, r5
   2be78:	mov	r1, r7
   2be7c:	mov	r2, r6
   2be80:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2be84:	cmp	r0, #0
   2be88:	beq	2bf1c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x35c>
   2be8c:	mov	r1, #6
   2be90:	str	r8, [r0, #24]
   2be94:	str	r1, [r0, #28]
   2be98:	mov	r1, #3
   2be9c:	b	2bdac <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1ec>
   2bea0:	ldr	r0, [r5, #192]	; 0xc0
   2bea4:	mov	r1, #64	; 0x40
   2bea8:	str	r1, [sp]
   2beac:	add	r0, r0, r4
   2beb0:	sub	r3, r0, #9
   2beb4:	mov	r0, r5
   2beb8:	mov	r1, r7
   2bebc:	mov	r2, r6
   2bec0:	bl	12058 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2bec4:	cmp	r0, #0
   2bec8:	beq	2bf1c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x35c>
   2becc:	mov	r2, r0
   2bed0:	mov	r0, #6
   2bed4:	str	r8, [r2, #24]
   2bed8:	str	r0, [r2, #28]
   2bedc:	mov	r0, #1
   2bee0:	str	r0, [r2, #48]	; 0x30
   2bee4:	mov	r0, #112	; 0x70
   2bee8:	str	r0, [r2]
   2beec:	mov	r0, #0
   2bef0:	str	r0, [r5, #160]	; 0xa0
   2bef4:	ldr	r0, [r5, #192]	; 0xc0
   2bef8:	ldr	r1, [r2, #32]
   2befc:	sub	r0, r0, r1
   2bf00:	add	r0, r0, r4
   2bf04:	str	r0, [r2, #36]	; 0x24
   2bf08:	mov	r0, r5
   2bf0c:	mov	r1, r4
   2bf10:	bl	114b8 <myhtml_queue_add@plt>
   2bf14:	cmp	r0, #0
   2bf18:	beq	2be54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bf1c:	mov	r0, #69	; 0x45
   2bf20:	str	r0, [r5, #160]	; 0xa0
   2bf24:	mov	r4, #0
   2bf28:	b	2be54 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x294>
   2bf2c:	muleq	sp, fp, r3
   2bf30:	andeq	r1, sp, r7, lsl #6
   2bf34:			; <UNDEFINED> instruction: 0x000d12bb

0002bf38 <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2bf38:	ldr	ip, [sp]
   2bf3c:	cmp	r3, ip
   2bf40:	bcs	2bf64 <myhtml_tokenizer_state_script_data_escaped@@Base+0x2c>
   2bf44:	ldrb	r1, [r2, r3]
   2bf48:	cmp	r1, #60	; 0x3c
   2bf4c:	beq	2bf6c <myhtml_tokenizer_state_script_data_escaped@@Base+0x34>
   2bf50:	cmp	r1, #45	; 0x2d
   2bf54:	beq	2bf74 <myhtml_tokenizer_state_script_data_escaped@@Base+0x3c>
   2bf58:	add	r3, r3, #1
   2bf5c:	cmp	ip, r3
   2bf60:	bne	2bf44 <myhtml_tokenizer_state_script_data_escaped@@Base+0xc>
   2bf64:	mov	r0, r3
   2bf68:	bx	lr
   2bf6c:	mov	r1, #24
   2bf70:	b	2bf78 <myhtml_tokenizer_state_script_data_escaped@@Base+0x40>
   2bf74:	mov	r1, #22
   2bf78:	str	r1, [r0, #160]	; 0xa0
   2bf7c:	add	r3, r3, #1
   2bf80:	mov	r0, r3
   2bf84:	bx	lr

0002bf88 <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2bf88:	ldrb	r1, [r2, r3]
   2bf8c:	cmp	r1, #60	; 0x3c
   2bf90:	beq	2bfc4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x3c>
   2bf94:	cmp	r1, #45	; 0x2d
   2bf98:	moveq	r1, #23
   2bf9c:	streq	r1, [r0, #160]	; 0xa0
   2bfa0:	addeq	r3, r3, #1
   2bfa4:	moveq	r0, r3
   2bfa8:	bxeq	lr
   2bfac:	mov	r2, #21
   2bfb0:	str	r2, [r0, #160]	; 0xa0
   2bfb4:	cmp	r1, #0
   2bfb8:	addne	r3, r3, #1
   2bfbc:	mov	r0, r3
   2bfc0:	bx	lr
   2bfc4:	mov	r1, #24
   2bfc8:	str	r1, [r0, #160]	; 0xa0
   2bfcc:	mov	r0, r3
   2bfd0:	bx	lr

0002bfd4 <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   2bfd4:	push	{r4, r5, r6, r7, fp, lr}
   2bfd8:	add	fp, sp, #16
   2bfdc:	mov	r4, r3
   2bfe0:	mov	r7, r0
   2bfe4:	ldr	r0, [fp, #8]
   2bfe8:	cmp	r3, r0
   2bfec:	bcs	2c130 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x15c>
   2bff0:	rsb	r0, r0, #0
   2bff4:	add	r4, r4, #1
   2bff8:	b	2c00c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x38>
   2bffc:	add	r4, r4, #1
   2c000:	add	r3, r0, r4
   2c004:	cmp	r3, #1
   2c008:	beq	2c12c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x158>
   2c00c:	add	r3, r2, r4
   2c010:	ldrb	r3, [r3, #-1]
   2c014:	sub	r5, r3, #9
   2c018:	cmp	r5, #53	; 0x35
   2c01c:	bhi	2c104 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x130>
   2c020:	add	r6, pc, #4
   2c024:	ldr	r5, [r6, r5, lsl #2]
   2c028:	add	pc, r6, r5
   2c02c:	andeq	r0, r0, ip, lsl #2
   2c030:	andeq	r0, r0, ip, lsl #2
   2c034:	ldrdeq	r0, [r0], -r8
   2c038:	andeq	r0, r0, ip, lsl #2
   2c03c:	andeq	r0, r0, ip, lsl #2
   2c040:	ldrdeq	r0, [r0], -r8
   2c044:	ldrdeq	r0, [r0], -r8
   2c048:	ldrdeq	r0, [r0], -r8
   2c04c:	ldrdeq	r0, [r0], -r8
   2c050:	ldrdeq	r0, [r0], -r8
   2c054:	ldrdeq	r0, [r0], -r8
   2c058:	ldrdeq	r0, [r0], -r8
   2c05c:	ldrdeq	r0, [r0], -r8
   2c060:	ldrdeq	r0, [r0], -r8
   2c064:	ldrdeq	r0, [r0], -r8
   2c068:	ldrdeq	r0, [r0], -r8
   2c06c:	ldrdeq	r0, [r0], -r8
   2c070:	ldrdeq	r0, [r0], -r8
   2c074:	ldrdeq	r0, [r0], -r8
   2c078:	ldrdeq	r0, [r0], -r8
   2c07c:	ldrdeq	r0, [r0], -r8
   2c080:	ldrdeq	r0, [r0], -r8
   2c084:	ldrdeq	r0, [r0], -r8
   2c088:	andeq	r0, r0, ip, lsl #2
   2c08c:	ldrdeq	r0, [r0], -r8
   2c090:	ldrdeq	r0, [r0], -r8
   2c094:	ldrdeq	r0, [r0], -r8
   2c098:	ldrdeq	r0, [r0], -r8
   2c09c:	ldrdeq	r0, [r0], -r8
   2c0a0:	ldrdeq	r0, [r0], -r8
   2c0a4:	ldrdeq	r0, [r0], -r8
   2c0a8:	ldrdeq	r0, [r0], -r8
   2c0ac:	ldrdeq	r0, [r0], -r8
   2c0b0:	ldrdeq	r0, [r0], -r8
   2c0b4:	ldrdeq	r0, [r0], -r8
   2c0b8:	ldrdeq	r0, [r0], -r8
   2c0bc:	ldrdeq	r0, [r0], -r8
   2c0c0:	ldrdeq	r0, [r0], -r8
   2c0c4:	andeq	r0, r0, ip, lsl #2
   2c0c8:	ldrdeq	r0, [r0], -r8
   2c0cc:	ldrdeq	r0, [r0], -r8
   2c0d0:	ldrdeq	r0, [r0], -r8
   2c0d4:	ldrdeq	r0, [r0], -r8
   2c0d8:	ldrdeq	r0, [r0], -r8
   2c0dc:	ldrdeq	r0, [r0], -r8
   2c0e0:	ldrdeq	r0, [r0], -r8
   2c0e4:	ldrdeq	r0, [r0], -r8
   2c0e8:	ldrdeq	r0, [r0], -r8
   2c0ec:	ldrdeq	r0, [r0], -r8
   2c0f0:	ldrdeq	r0, [r0], -r8
   2c0f4:	ldrdeq	r0, [r0], -r8
   2c0f8:	ldrdeq	r0, [r0], -r8
   2c0fc:	ldrdeq	r0, [r0], -r8
   2c100:	andeq	r0, r0, ip, lsl #2
   2c104:	sub	r6, r3, #97	; 0x61
   2c108:	uxtb	r6, r6
   2c10c:	cmp	r6, #26
   2c110:	bcc	2bffc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x28>
   2c114:	sub	r3, r3, #65	; 0x41
   2c118:	uxtb	r3, r3
   2c11c:	cmp	r3, #26
   2c120:	bcc	2bffc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x28>
   2c124:	mov	r0, #21
   2c128:	str	r0, [r7, #160]	; 0xa0
   2c12c:	sub	r4, r4, #1
   2c130:	mov	r0, r4
   2c134:	pop	{r4, r5, r6, r7, fp, pc}
   2c138:	ldr	r1, [r1, #12]
   2c13c:	ldr	r0, [r7, #192]	; 0xc0
   2c140:	sub	r0, r0, r1
   2c144:	add	r0, r0, r4
   2c148:	cmp	r0, #7
   2c14c:	bne	2c184 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1b0>
   2c150:	mov	r0, r7
   2c154:	mov	r2, #6
   2c158:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2c15c:	ldr	r1, [pc, #48]	; 2c194 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x1c0>
   2c160:	add	r1, pc, r1
   2c164:	mov	r2, #6
   2c168:	bl	11704 <mycore_strncasecmp@plt>
   2c16c:	mov	r1, #21
   2c170:	cmp	r0, #0
   2c174:	movweq	r1, #28
   2c178:	str	r1, [r7, #160]	; 0xa0
   2c17c:	mov	r0, r4
   2c180:	pop	{r4, r5, r6, r7, fp, pc}
   2c184:	mov	r0, #21
   2c188:	str	r0, [r7, #160]	; 0xa0
   2c18c:	mov	r0, r4
   2c190:	pop	{r4, r5, r6, r7, fp, pc}
   2c194:	muleq	sp, r3, pc	; <UNPREDICTABLE>

0002c198 <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2c198:	ldr	ip, [sp]
   2c19c:	cmp	r3, ip
   2c1a0:	bcs	2c1c4 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x2c>
   2c1a4:	ldrb	r1, [r2, r3]
   2c1a8:	cmp	r1, #60	; 0x3c
   2c1ac:	beq	2c1cc <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x34>
   2c1b0:	cmp	r1, #45	; 0x2d
   2c1b4:	beq	2c1d4 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x3c>
   2c1b8:	add	r3, r3, #1
   2c1bc:	cmp	ip, r3
   2c1c0:	bne	2c1a4 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0xc>
   2c1c4:	mov	r0, r3
   2c1c8:	bx	lr
   2c1cc:	mov	r1, #31
   2c1d0:	b	2c1d8 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x40>
   2c1d4:	mov	r1, #29
   2c1d8:	str	r1, [r0, #160]	; 0xa0
   2c1dc:	add	r3, r3, #1
   2c1e0:	mov	r0, r3
   2c1e4:	bx	lr

0002c1e8 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2c1e8:	ldrb	r1, [r2, r3]
   2c1ec:	cmp	r1, #45	; 0x2d
   2c1f0:	bne	2c1fc <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x14>
   2c1f4:	mov	r1, #30
   2c1f8:	b	2c208 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x20>
   2c1fc:	cmp	r1, #60	; 0x3c
   2c200:	movne	r1, #28
   2c204:	moveq	r1, #31
   2c208:	str	r1, [r0, #160]	; 0xa0
   2c20c:	add	r0, r3, #1
   2c210:	bx	lr

0002c214 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   2c214:	ldrb	r1, [r2, r3]
   2c218:	cmp	r1, #45	; 0x2d
   2c21c:	beq	2c240 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   2c220:	cmp	r1, #60	; 0x3c
   2c224:	bne	2c230 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x1c>
   2c228:	mov	r1, #31
   2c22c:	b	2c23c <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x28>
   2c230:	cmp	r1, #62	; 0x3e
   2c234:	movne	r1, #28
   2c238:	moveq	r1, #5
   2c23c:	str	r1, [r0, #160]	; 0xa0
   2c240:	add	r0, r3, #1
   2c244:	bx	lr

0002c248 <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   2c248:	ldrb	r2, [r2, r3]
   2c24c:	cmp	r2, #47	; 0x2f
   2c250:	movne	r1, #28
   2c254:	strne	r1, [r0, #160]	; 0xa0
   2c258:	movne	r0, r3
   2c25c:	bxne	lr
   2c260:	mov	r2, #32
   2c264:	str	r2, [r0, #160]	; 0xa0
   2c268:	ldr	r0, [r0, #192]	; 0xc0
   2c26c:	add	r3, r3, #1
   2c270:	add	r0, r0, r3
   2c274:	str	r0, [r1, #12]
   2c278:	mov	r0, r3
   2c27c:	bx	lr

0002c280 <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   2c280:	push	{r4, r5, r6, r7, fp, lr}
   2c284:	add	fp, sp, #16
   2c288:	mov	r4, r3
   2c28c:	mov	r7, r0
   2c290:	ldr	r0, [fp, #8]
   2c294:	cmp	r3, r0
   2c298:	bcs	2c3dc <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x15c>
   2c29c:	rsb	r0, r0, #0
   2c2a0:	add	r4, r4, #1
   2c2a4:	b	2c2b8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x38>
   2c2a8:	add	r4, r4, #1
   2c2ac:	add	r3, r0, r4
   2c2b0:	cmp	r3, #1
   2c2b4:	beq	2c3d8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x158>
   2c2b8:	add	r3, r2, r4
   2c2bc:	ldrb	r3, [r3, #-1]
   2c2c0:	sub	r5, r3, #9
   2c2c4:	cmp	r5, #53	; 0x35
   2c2c8:	bhi	2c3b0 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x130>
   2c2cc:	add	r6, pc, #4
   2c2d0:	ldr	r5, [r6, r5, lsl #2]
   2c2d4:	add	pc, r6, r5
   2c2d8:	andeq	r0, r0, ip, lsl #2
   2c2dc:	andeq	r0, r0, ip, lsl #2
   2c2e0:	ldrdeq	r0, [r0], -r8
   2c2e4:	andeq	r0, r0, ip, lsl #2
   2c2e8:	andeq	r0, r0, ip, lsl #2
   2c2ec:	ldrdeq	r0, [r0], -r8
   2c2f0:	ldrdeq	r0, [r0], -r8
   2c2f4:	ldrdeq	r0, [r0], -r8
   2c2f8:	ldrdeq	r0, [r0], -r8
   2c2fc:	ldrdeq	r0, [r0], -r8
   2c300:	ldrdeq	r0, [r0], -r8
   2c304:	ldrdeq	r0, [r0], -r8
   2c308:	ldrdeq	r0, [r0], -r8
   2c30c:	ldrdeq	r0, [r0], -r8
   2c310:	ldrdeq	r0, [r0], -r8
   2c314:	ldrdeq	r0, [r0], -r8
   2c318:	ldrdeq	r0, [r0], -r8
   2c31c:	ldrdeq	r0, [r0], -r8
   2c320:	ldrdeq	r0, [r0], -r8
   2c324:	ldrdeq	r0, [r0], -r8
   2c328:	ldrdeq	r0, [r0], -r8
   2c32c:	ldrdeq	r0, [r0], -r8
   2c330:	ldrdeq	r0, [r0], -r8
   2c334:	andeq	r0, r0, ip, lsl #2
   2c338:	ldrdeq	r0, [r0], -r8
   2c33c:	ldrdeq	r0, [r0], -r8
   2c340:	ldrdeq	r0, [r0], -r8
   2c344:	ldrdeq	r0, [r0], -r8
   2c348:	ldrdeq	r0, [r0], -r8
   2c34c:	ldrdeq	r0, [r0], -r8
   2c350:	ldrdeq	r0, [r0], -r8
   2c354:	ldrdeq	r0, [r0], -r8
   2c358:	ldrdeq	r0, [r0], -r8
   2c35c:	ldrdeq	r0, [r0], -r8
   2c360:	ldrdeq	r0, [r0], -r8
   2c364:	ldrdeq	r0, [r0], -r8
   2c368:	ldrdeq	r0, [r0], -r8
   2c36c:	ldrdeq	r0, [r0], -r8
   2c370:	andeq	r0, r0, ip, lsl #2
   2c374:	ldrdeq	r0, [r0], -r8
   2c378:	ldrdeq	r0, [r0], -r8
   2c37c:	ldrdeq	r0, [r0], -r8
   2c380:	ldrdeq	r0, [r0], -r8
   2c384:	ldrdeq	r0, [r0], -r8
   2c388:	ldrdeq	r0, [r0], -r8
   2c38c:	ldrdeq	r0, [r0], -r8
   2c390:	ldrdeq	r0, [r0], -r8
   2c394:	ldrdeq	r0, [r0], -r8
   2c398:	ldrdeq	r0, [r0], -r8
   2c39c:	ldrdeq	r0, [r0], -r8
   2c3a0:	ldrdeq	r0, [r0], -r8
   2c3a4:	ldrdeq	r0, [r0], -r8
   2c3a8:	ldrdeq	r0, [r0], -r8
   2c3ac:	andeq	r0, r0, ip, lsl #2
   2c3b0:	sub	r6, r3, #97	; 0x61
   2c3b4:	uxtb	r6, r6
   2c3b8:	cmp	r6, #26
   2c3bc:	bcc	2c2a8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x28>
   2c3c0:	sub	r3, r3, #65	; 0x41
   2c3c4:	uxtb	r3, r3
   2c3c8:	cmp	r3, #26
   2c3cc:	bcc	2c2a8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x28>
   2c3d0:	mov	r0, #28
   2c3d4:	str	r0, [r7, #160]	; 0xa0
   2c3d8:	sub	r4, r4, #1
   2c3dc:	mov	r0, r4
   2c3e0:	pop	{r4, r5, r6, r7, fp, pc}
   2c3e4:	ldr	r1, [r1, #12]
   2c3e8:	ldr	r0, [r7, #192]	; 0xc0
   2c3ec:	sub	r0, r0, r1
   2c3f0:	add	r0, r0, r4
   2c3f4:	cmp	r0, #7
   2c3f8:	bne	2c430 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1b0>
   2c3fc:	mov	r0, r7
   2c400:	mov	r2, #6
   2c404:	bl	112fc <myhtml_tree_incomming_buffer_make_data@plt>
   2c408:	ldr	r1, [pc, #48]	; 2c440 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x1c0>
   2c40c:	add	r1, pc, r1
   2c410:	mov	r2, #6
   2c414:	bl	11704 <mycore_strncasecmp@plt>
   2c418:	mov	r1, #28
   2c41c:	cmp	r0, #0
   2c420:	movweq	r1, #21
   2c424:	str	r1, [r7, #160]	; 0xa0
   2c428:	mov	r0, r4
   2c42c:	pop	{r4, r5, r6, r7, fp, pc}
   2c430:	mov	r0, #28
   2c434:	str	r0, [r7, #160]	; 0xa0
   2c438:	mov	r0, r4
   2c43c:	pop	{r4, r5, r6, r7, fp, pc}
   2c440:	andeq	r0, sp, r7, ror #25

0002c444 <myhtml_tree_create@@Base>:
   2c444:	mov	r0, #1
   2c448:	mov	r1, #252	; 0xfc
   2c44c:	b	113a4 <mycore_calloc@plt>

0002c450 <myhtml_tree_init@@Base>:
   2c450:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2c454:	add	fp, sp, #24
   2c458:	sub	sp, sp, #8
   2c45c:	mov	r5, r1
   2c460:	mov	r4, r0
   2c464:	mov	r6, #0
   2c468:	str	r6, [sp, #4]
   2c46c:	str	r1, [r0]
   2c470:	mov	r1, #512	; 0x200
   2c474:	bl	12394 <myhtml_token_create@plt>
   2c478:	str	r0, [r4, #8]
   2c47c:	cmp	r0, #0
   2c480:	beq	2c6a4 <myhtml_tree_init@@Base+0x254>
   2c484:	vmov.i32	q8, #0	; 0x00000000
   2c488:	str	r6, [r4, #184]	; 0xb8
   2c48c:	str	r6, [r4, #148]	; 0x94
   2c490:	str	r6, [r4, #208]	; 0xd0
   2c494:	str	r6, [r4, #36]	; 0x24
   2c498:	add	r0, r4, #220	; 0xdc
   2c49c:	vst1.32	{d16-d17}, [r0]
   2c4a0:	add	r0, r4, #236	; 0xec
   2c4a4:	vst1.32	{d16-d17}, [r0]
   2c4a8:	ldr	r6, [sp, #4]
   2c4ac:	cmp	r6, #0
   2c4b0:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c4b4:	bl	11e78 <mythread_queue_create@plt>
   2c4b8:	str	r0, [r4, #24]
   2c4bc:	cmp	r0, #0
   2c4c0:	beq	2c6b4 <myhtml_tree_init@@Base+0x264>
   2c4c4:	movw	r1, #9182	; 0x23de
   2c4c8:	bl	11adc <mythread_queue_init@plt>
   2c4cc:	mov	r6, r0
   2c4d0:	str	r0, [sp, #4]
   2c4d4:	cmp	r0, #0
   2c4d8:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c4dc:	bl	114ac <mcobject_create@plt>
   2c4e0:	str	r0, [r4, #72]	; 0x48
   2c4e4:	cmp	r0, #0
   2c4e8:	beq	2c6bc <myhtml_tree_init@@Base+0x26c>
   2c4ec:	mov	r1, #256	; 0x100
   2c4f0:	mov	r2, #24
   2c4f4:	bl	11ba8 <mcobject_init@plt>
   2c4f8:	mov	r6, r0
   2c4fc:	str	r0, [sp, #4]
   2c500:	cmp	r0, #0
   2c504:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c508:	bl	11218 <mcobject_async_create@plt>
   2c50c:	str	r0, [r4, #12]
   2c510:	cmp	r0, #0
   2c514:	beq	2c6c4 <myhtml_tree_init@@Base+0x274>
   2c518:	mov	r1, #128	; 0x80
   2c51c:	mov	r2, #1024	; 0x400
   2c520:	mov	r3, #44	; 0x2c
   2c524:	bl	1114c <mcobject_async_init@plt>
   2c528:	str	r0, [sp]
   2c52c:	movw	r6, #37366	; 0x91f6
   2c530:	cmp	r0, #0
   2c534:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c538:	bl	115d8 <mchar_async_create@plt>
   2c53c:	str	r0, [r4, #4]
   2c540:	bl	11eb4 <myhtml_tree_active_formatting_init@plt>
   2c544:	str	r0, [r4, #124]	; 0x7c
   2c548:	bl	11f80 <myhtml_tree_open_elements_init@plt>
   2c54c:	str	r0, [r4, #128]	; 0x80
   2c550:	bl	11c74 <myhtml_tree_list_init@plt>
   2c554:	str	r0, [r4, #132]	; 0x84
   2c558:	bl	11dd0 <myhtml_tree_token_list_init@plt>
   2c55c:	str	r0, [r4, #136]	; 0x88
   2c560:	mov	r0, r4
   2c564:	bl	12094 <myhtml_tree_template_insertion_init@plt>
   2c568:	str	r0, [r4, #140]	; 0x8c
   2c56c:	ldr	r0, [r4, #4]
   2c570:	cmp	r0, #0
   2c574:	beq	2c6b4 <myhtml_tree_init@@Base+0x264>
   2c578:	mov	r1, #128	; 0x80
   2c57c:	mov	r2, #20480	; 0x5000
   2c580:	bl	118d8 <mchar_async_init@plt>
   2c584:	mov	r6, r0
   2c588:	str	r0, [sp, #4]
   2c58c:	cmp	r0, #0
   2c590:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c594:	ldr	r0, [r4, #12]
   2c598:	mov	r1, sp
   2c59c:	bl	11e84 <mcobject_async_node_add@plt>
   2c5a0:	str	r0, [r4, #48]	; 0x30
   2c5a4:	movw	r6, #37367	; 0x91f7
   2c5a8:	ldr	r0, [sp]
   2c5ac:	cmp	r0, #0
   2c5b0:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c5b4:	ldr	r0, [r4, #8]
   2c5b8:	ldr	r0, [r0, #4]
   2c5bc:	mov	r1, sp
   2c5c0:	bl	11e84 <mcobject_async_node_add@plt>
   2c5c4:	str	r0, [r4, #40]	; 0x28
   2c5c8:	ldr	r0, [sp]
   2c5cc:	cmp	r0, #0
   2c5d0:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c5d4:	ldr	r0, [r4, #8]
   2c5d8:	ldr	r0, [r0, #8]
   2c5dc:	mov	r1, sp
   2c5e0:	bl	11e84 <mcobject_async_node_add@plt>
   2c5e4:	str	r0, [r4, #44]	; 0x2c
   2c5e8:	ldr	r0, [sp]
   2c5ec:	cmp	r0, #0
   2c5f0:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c5f4:	ldr	r0, [r5, #20]
   2c5f8:	mov	r1, #4
   2c5fc:	bl	113a4 <mycore_calloc@plt>
   2c600:	str	r0, [r4, #144]	; 0x90
   2c604:	cmp	r0, #0
   2c608:	beq	2c6b4 <myhtml_tree_init@@Base+0x264>
   2c60c:	ldr	r0, [r5, #20]
   2c610:	cmp	r0, #0
   2c614:	beq	2c650 <myhtml_tree_init@@Base+0x200>
   2c618:	mov	r7, #0
   2c61c:	add	r8, sp, #4
   2c620:	ldr	r0, [r4, #4]
   2c624:	mov	r1, r8
   2c628:	bl	116f8 <mchar_async_node_add@plt>
   2c62c:	ldr	r1, [r4, #144]	; 0x90
   2c630:	str	r0, [r1, r7, lsl #2]
   2c634:	ldr	r6, [sp, #4]
   2c638:	cmp	r6, #0
   2c63c:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c640:	add	r7, r7, #1
   2c644:	ldr	r0, [r5, #20]
   2c648:	cmp	r7, r0
   2c64c:	bcc	2c620 <myhtml_tree_init@@Base+0x1d0>
   2c650:	ldr	r0, [r4, #144]	; 0x90
   2c654:	ldr	r0, [r0]
   2c658:	str	r0, [r4, #52]	; 0x34
   2c65c:	bl	11254 <mcsync_create@plt>
   2c660:	str	r0, [r4, #16]
   2c664:	cmp	r0, #0
   2c668:	beq	2c6b4 <myhtml_tree_init@@Base+0x264>
   2c66c:	bl	11c80 <mcsync_init@plt>
   2c670:	cmp	r0, #0
   2c674:	mov	r6, #2
   2c678:	bne	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c67c:	bl	120e8 <myhtml_tag_create@plt>
   2c680:	mov	r1, r0
   2c684:	str	r0, [r4, #28]
   2c688:	mov	r0, r4
   2c68c:	bl	11f44 <myhtml_tag_init@plt>
   2c690:	str	r0, [sp, #4]
   2c694:	mov	r0, r4
   2c698:	bl	11b00 <myhtml_tree_clean@plt>
   2c69c:	ldr	r6, [sp, #4]
   2c6a0:	b	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c6a4:	movw	r6, #37164	; 0x912c
   2c6a8:	mov	r0, r6
   2c6ac:	sub	sp, fp, #24
   2c6b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2c6b4:	mov	r6, #2
   2c6b8:	b	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c6bc:	movw	r6, #37368	; 0x91f8
   2c6c0:	b	2c6a8 <myhtml_tree_init@@Base+0x258>
   2c6c4:	movw	r6, #37365	; 0x91f5
   2c6c8:	b	2c6a8 <myhtml_tree_init@@Base+0x258>

0002c6cc <myhtml_tree_active_formatting_init@@Base>:
   2c6cc:	b	2c6d4 <myhtml_tree_list_init@@Base>

0002c6d0 <myhtml_tree_open_elements_init@@Base>:
   2c6d0:	b	2c6d4 <myhtml_tree_list_init@@Base>

0002c6d4 <myhtml_tree_list_init@@Base>:
   2c6d4:	push	{r4, sl, fp, lr}
   2c6d8:	add	fp, sp, #8
   2c6dc:	mov	r0, #12
   2c6e0:	bl	1204c <mycore_malloc@plt>
   2c6e4:	mov	r4, r0
   2c6e8:	mov	r0, #0
   2c6ec:	str	r0, [r4, #4]
   2c6f0:	mov	r0, #4096	; 0x1000
   2c6f4:	str	r0, [r4, #8]
   2c6f8:	mov	r0, #16384	; 0x4000
   2c6fc:	bl	1204c <mycore_malloc@plt>
   2c700:	str	r0, [r4]
   2c704:	mov	r0, r4
   2c708:	pop	{r4, sl, fp, pc}

0002c70c <myhtml_tree_token_list_init@@Base>:
   2c70c:	push	{r4, sl, fp, lr}
   2c710:	add	fp, sp, #8
   2c714:	mov	r0, #12
   2c718:	bl	1204c <mycore_malloc@plt>
   2c71c:	mov	r4, r0
   2c720:	mov	r0, #4096	; 0x1000
   2c724:	mov	r1, #0
   2c728:	str	r1, [r4, #4]
   2c72c:	str	r0, [r4, #8]
   2c730:	mov	r0, #16384	; 0x4000
   2c734:	bl	1204c <mycore_malloc@plt>
   2c738:	str	r0, [r4]
   2c73c:	mov	r0, r4
   2c740:	pop	{r4, sl, fp, pc}

0002c744 <myhtml_tree_template_insertion_init@@Base>:
   2c744:	push	{r4, r5, fp, lr}
   2c748:	add	fp, sp, #8
   2c74c:	mov	r4, r0
   2c750:	mov	r0, #12
   2c754:	bl	1204c <mycore_malloc@plt>
   2c758:	mov	r5, r0
   2c75c:	mov	r0, #1024	; 0x400
   2c760:	mov	r1, #0
   2c764:	str	r1, [r5, #4]
   2c768:	str	r0, [r5, #8]
   2c76c:	mov	r0, #4096	; 0x1000
   2c770:	bl	1204c <mycore_malloc@plt>
   2c774:	str	r0, [r5]
   2c778:	str	r5, [r4, #140]	; 0x8c
   2c77c:	mov	r0, r5
   2c780:	pop	{r4, r5, fp, pc}

0002c784 <myhtml_tree_clean@@Base>:
   2c784:	push	{r4, r5, r6, sl, fp, lr}
   2c788:	add	fp, sp, #16
   2c78c:	mov	r4, r0
   2c790:	ldr	r5, [r0]
   2c794:	ldr	r0, [r5, #20]
   2c798:	cmp	r0, #0
   2c79c:	beq	2c7c4 <myhtml_tree_clean@@Base+0x40>
   2c7a0:	mov	r6, #0
   2c7a4:	ldr	r0, [r4, #4]
   2c7a8:	ldr	r1, [r4, #144]	; 0x90
   2c7ac:	ldr	r1, [r1, r6, lsl #2]
   2c7b0:	bl	11b18 <mchar_async_node_clean@plt>
   2c7b4:	add	r6, r6, #1
   2c7b8:	ldr	r0, [r5, #20]
   2c7bc:	cmp	r6, r0
   2c7c0:	bcc	2c7a4 <myhtml_tree_clean@@Base+0x20>
   2c7c4:	ldr	r0, [r4, #12]
   2c7c8:	ldr	r1, [r4, #48]	; 0x30
   2c7cc:	bl	11c98 <mcobject_async_node_clean@plt>
   2c7d0:	ldr	r0, [r4, #8]
   2c7d4:	ldr	r1, [r4, #40]	; 0x28
   2c7d8:	ldr	r0, [r0, #4]
   2c7dc:	bl	11c98 <mcobject_async_node_clean@plt>
   2c7e0:	ldr	r0, [r4, #8]
   2c7e4:	ldr	r1, [r4, #44]	; 0x2c
   2c7e8:	ldr	r0, [r0, #8]
   2c7ec:	bl	11c98 <mcobject_async_node_clean@plt>
   2c7f0:	ldr	r0, [r4, #20]
   2c7f4:	bl	11db8 <mythread_queue_list_entry_clean@plt>
   2c7f8:	ldr	r0, [r4]
   2c7fc:	ldr	r1, [r4, #20]
   2c800:	ldr	r0, [r0, #4]
   2c804:	bl	120dc <mythread_queue_list_entry_make_batch@plt>
   2c808:	ldr	r0, [r4]
   2c80c:	ldr	r1, [r4, #20]
   2c810:	ldr	r0, [r0]
   2c814:	bl	1228c <mythread_queue_list_entry_make_stream@plt>
   2c818:	ldr	r0, [r4, #8]
   2c81c:	bl	119e0 <myhtml_token_clean@plt>
   2c820:	mov	r0, r4
   2c824:	bl	11470 <myhtml_tree_node_create@plt>
   2c828:	mov	r0, r4
   2c82c:	bl	11470 <myhtml_tree_node_create@plt>
   2c830:	mov	r1, #2
   2c834:	vmov.i32	q8, #0	; 0x00000000
   2c838:	str	r1, [r4, #180]	; 0xb4
   2c83c:	mov	r1, #0
   2c840:	str	r1, [r4, #112]	; 0x70
   2c844:	str	r1, [r4, #116]	; 0x74
   2c848:	str	r1, [r4, #120]	; 0x78
   2c84c:	str	r0, [r4, #84]	; 0x54
   2c850:	add	r0, r4, #88	; 0x58
   2c854:	vst1.32	{d16-d17}, [r0]
   2c858:	str	r1, [r4, #60]	; 0x3c
   2c85c:	str	r1, [r4, #105]	; 0x69
   2c860:	str	r1, [r4, #101]	; 0x65
   2c864:	add	r0, r4, #160	; 0xa0
   2c868:	vst1.32	{d16-d17}, [r0]
   2c86c:	str	r1, [r4, #176]	; 0xb0
   2c870:	strb	r1, [r4, #188]	; 0xbc
   2c874:	str	r1, [r4, #156]	; 0x9c
   2c878:	str	r1, [r4, #80]	; 0x50
   2c87c:	str	r1, [r4, #76]	; 0x4c
   2c880:	str	r1, [r4, #68]	; 0x44
   2c884:	str	r1, [r4, #192]	; 0xc0
   2c888:	str	r1, [r4, #196]	; 0xc4
   2c88c:	str	r1, [r4, #200]	; 0xc8
   2c890:	str	r1, [r4, #204]	; 0xcc
   2c894:	str	r1, [r4, #152]	; 0x98
   2c898:	ldr	r0, [r4, #148]	; 0x94
   2c89c:	bl	1189c <myhtml_stream_buffer_clean@plt>
   2c8a0:	mov	r0, r4
   2c8a4:	bl	11c38 <myhtml_tree_active_formatting_clean@plt>
   2c8a8:	mov	r0, r4
   2c8ac:	bl	121d8 <myhtml_tree_open_elements_clean@plt>
   2c8b0:	ldr	r0, [r4, #132]	; 0x84
   2c8b4:	bl	116ec <myhtml_tree_list_clean@plt>
   2c8b8:	ldr	r0, [r4, #136]	; 0x88
   2c8bc:	bl	1237c <myhtml_tree_token_list_clean@plt>
   2c8c0:	mov	r0, r4
   2c8c4:	bl	11854 <myhtml_tree_template_insertion_clean@plt>
   2c8c8:	ldr	r0, [r4, #72]	; 0x48
   2c8cc:	bl	12304 <mcobject_clean@plt>
   2c8d0:	ldr	r0, [r4, #28]
   2c8d4:	bl	1240c <myhtml_tag_clean@plt>
   2c8d8:	ldr	r0, [r4, #24]
   2c8dc:	bl	11224 <mythread_queue_clean@plt>
   2c8e0:	ldr	r0, [r4, #8]
   2c8e4:	ldr	r1, [r0, #16]
   2c8e8:	bl	11d1c <myhtml_token_attr_create@plt>
   2c8ec:	str	r0, [r4, #56]	; 0x38
   2c8f0:	pop	{r4, r5, r6, sl, fp, pc}

0002c8f4 <myhtml_tree_node_create@@Base>:
   2c8f4:	push	{r4, r5, fp, lr}
   2c8f8:	add	fp, sp, #8
   2c8fc:	mov	r4, r0
   2c900:	ldr	r0, [r0, #12]
   2c904:	ldr	r1, [r4, #48]	; 0x30
   2c908:	mov	r2, #0
   2c90c:	bl	11f8c <mcobject_async_malloc@plt>
   2c910:	mov	r5, r0
   2c914:	bl	12430 <myhtml_tree_node_clean@plt>
   2c918:	str	r4, [r5, #40]	; 0x28
   2c91c:	mov	r0, r5
   2c920:	pop	{r4, r5, fp, pc}

0002c924 <myhtml_tree_active_formatting_clean@@Base>:
   2c924:	ldr	r0, [r0, #124]	; 0x7c
   2c928:	mov	r1, #0
   2c92c:	str	r1, [r0, #4]
   2c930:	bx	lr

0002c934 <myhtml_tree_open_elements_clean@@Base>:
   2c934:	ldr	r0, [r0, #128]	; 0x80
   2c938:	mov	r1, #0
   2c93c:	str	r1, [r0, #4]
   2c940:	bx	lr

0002c944 <myhtml_tree_list_clean@@Base>:
   2c944:	mov	r1, #0
   2c948:	str	r1, [r0, #4]
   2c94c:	bx	lr

0002c950 <myhtml_tree_token_list_clean@@Base>:
   2c950:	mov	r1, #0
   2c954:	str	r1, [r0, #4]
   2c958:	bx	lr

0002c95c <myhtml_tree_template_insertion_clean@@Base>:
   2c95c:	ldr	r0, [r0, #140]	; 0x8c
   2c960:	mov	r1, #0
   2c964:	str	r1, [r0, #4]
   2c968:	bx	lr

0002c96c <myhtml_tree_clean_all@@Base>:
   2c96c:	push	{r4, sl, fp, lr}
   2c970:	add	fp, sp, #8
   2c974:	mov	r4, r0
   2c978:	ldr	r0, [r0, #12]
   2c97c:	bl	123e8 <mcobject_async_clean@plt>
   2c980:	ldr	r0, [r4, #8]
   2c984:	bl	119e0 <myhtml_token_clean@plt>
   2c988:	ldr	r0, [r4, #4]
   2c98c:	bl	11f98 <mchar_async_clean@plt>
   2c990:	mov	r0, r4
   2c994:	bl	11470 <myhtml_tree_node_create@plt>
   2c998:	mov	r0, r4
   2c99c:	bl	11470 <myhtml_tree_node_create@plt>
   2c9a0:	mov	r1, #2
   2c9a4:	vmov.i32	q8, #0	; 0x00000000
   2c9a8:	str	r1, [r4, #180]	; 0xb4
   2c9ac:	mov	r1, #0
   2c9b0:	str	r1, [r4, #112]	; 0x70
   2c9b4:	str	r1, [r4, #116]	; 0x74
   2c9b8:	str	r1, [r4, #120]	; 0x78
   2c9bc:	str	r0, [r4, #84]	; 0x54
   2c9c0:	add	r0, r4, #88	; 0x58
   2c9c4:	vst1.32	{d16-d17}, [r0]
   2c9c8:	str	r1, [r4, #60]	; 0x3c
   2c9cc:	str	r1, [r4, #105]	; 0x69
   2c9d0:	str	r1, [r4, #101]	; 0x65
   2c9d4:	add	r0, r4, #160	; 0xa0
   2c9d8:	vst1.32	{d16-d17}, [r0]
   2c9dc:	str	r1, [r4, #176]	; 0xb0
   2c9e0:	strb	r1, [r4, #188]	; 0xbc
   2c9e4:	str	r1, [r4, #156]	; 0x9c
   2c9e8:	str	r1, [r4, #80]	; 0x50
   2c9ec:	str	r1, [r4, #76]	; 0x4c
   2c9f0:	str	r1, [r4, #68]	; 0x44
   2c9f4:	str	r1, [r4, #192]	; 0xc0
   2c9f8:	str	r1, [r4, #196]	; 0xc4
   2c9fc:	str	r1, [r4, #200]	; 0xc8
   2ca00:	str	r1, [r4, #204]	; 0xcc
   2ca04:	str	r1, [r4, #152]	; 0x98
   2ca08:	ldr	r0, [r4, #148]	; 0x94
   2ca0c:	bl	1189c <myhtml_stream_buffer_clean@plt>
   2ca10:	mov	r0, r4
   2ca14:	bl	11c38 <myhtml_tree_active_formatting_clean@plt>
   2ca18:	mov	r0, r4
   2ca1c:	bl	121d8 <myhtml_tree_open_elements_clean@plt>
   2ca20:	ldr	r0, [r4, #132]	; 0x84
   2ca24:	bl	116ec <myhtml_tree_list_clean@plt>
   2ca28:	ldr	r0, [r4, #136]	; 0x88
   2ca2c:	bl	1237c <myhtml_tree_token_list_clean@plt>
   2ca30:	mov	r0, r4
   2ca34:	bl	11854 <myhtml_tree_template_insertion_clean@plt>
   2ca38:	ldr	r0, [r4, #72]	; 0x48
   2ca3c:	bl	12304 <mcobject_clean@plt>
   2ca40:	ldr	r0, [r4, #28]
   2ca44:	bl	1240c <myhtml_tag_clean@plt>
   2ca48:	ldr	r0, [r4, #20]
   2ca4c:	bl	11db8 <mythread_queue_list_entry_clean@plt>
   2ca50:	ldr	r0, [r4]
   2ca54:	ldr	r1, [r4, #20]
   2ca58:	ldr	r0, [r0, #4]
   2ca5c:	bl	120dc <mythread_queue_list_entry_make_batch@plt>
   2ca60:	ldr	r0, [r4]
   2ca64:	ldr	r1, [r4, #20]
   2ca68:	ldr	r0, [r0]
   2ca6c:	bl	1228c <mythread_queue_list_entry_make_stream@plt>
   2ca70:	ldr	r0, [r4, #8]
   2ca74:	ldr	r1, [r0, #16]
   2ca78:	bl	11d1c <myhtml_token_attr_create@plt>
   2ca7c:	str	r0, [r4, #56]	; 0x38
   2ca80:	pop	{r4, sl, fp, pc}

0002ca84 <myhtml_tree_destroy@@Base>:
   2ca84:	cmp	r0, #0
   2ca88:	beq	2cb74 <myhtml_tree_destroy@@Base+0xf0>
   2ca8c:	push	{r4, sl, fp, lr}
   2ca90:	add	fp, sp, #8
   2ca94:	mov	r4, r0
   2ca98:	ldr	r0, [r0, #28]
   2ca9c:	bl	121fc <myhtml_tag_destroy@plt>
   2caa0:	str	r0, [r4, #28]
   2caa4:	mov	r0, r4
   2caa8:	bl	11554 <myhtml_tree_active_formatting_destroy@plt>
   2caac:	str	r0, [r4, #124]	; 0x7c
   2cab0:	mov	r0, r4
   2cab4:	bl	120a0 <myhtml_tree_open_elements_destroy@plt>
   2cab8:	str	r0, [r4, #128]	; 0x80
   2cabc:	ldr	r0, [r4, #132]	; 0x84
   2cac0:	mov	r1, #1
   2cac4:	bl	11b24 <myhtml_tree_list_destroy@plt>
   2cac8:	str	r0, [r4, #132]	; 0x84
   2cacc:	ldr	r0, [r4, #136]	; 0x88
   2cad0:	mov	r1, #1
   2cad4:	bl	11140 <myhtml_tree_token_list_destroy@plt>
   2cad8:	str	r0, [r4, #136]	; 0x88
   2cadc:	mov	r0, r4
   2cae0:	bl	121f0 <myhtml_tree_template_insertion_destroy@plt>
   2cae4:	mov	r0, #0
   2cae8:	str	r0, [r4, #140]	; 0x8c
   2caec:	ldr	r0, [r4, #16]
   2caf0:	mov	r1, #1
   2caf4:	bl	11620 <mcsync_destroy@plt>
   2caf8:	str	r0, [r4, #16]
   2cafc:	ldr	r0, [r4, #12]
   2cb00:	mov	r1, #1
   2cb04:	bl	11f14 <mcobject_async_destroy@plt>
   2cb08:	str	r0, [r4, #12]
   2cb0c:	ldr	r0, [r4, #8]
   2cb10:	bl	11bb4 <myhtml_token_destroy@plt>
   2cb14:	str	r0, [r4, #8]
   2cb18:	ldr	r0, [r4, #4]
   2cb1c:	mov	r1, #1
   2cb20:	bl	12160 <mchar_async_destroy@plt>
   2cb24:	str	r0, [r4, #4]
   2cb28:	ldr	r0, [r4, #148]	; 0x94
   2cb2c:	mov	r1, #1
   2cb30:	bl	111e8 <myhtml_stream_buffer_destroy@plt>
   2cb34:	str	r0, [r4, #148]	; 0x94
   2cb38:	ldr	r0, [r4, #24]
   2cb3c:	bl	11734 <mythread_queue_destroy@plt>
   2cb40:	str	r0, [r4, #24]
   2cb44:	ldr	r0, [r4, #72]	; 0x48
   2cb48:	mov	r1, #1
   2cb4c:	bl	11284 <mcobject_destroy@plt>
   2cb50:	str	r0, [r4, #72]	; 0x48
   2cb54:	add	r0, r4, #208	; 0xd0
   2cb58:	mov	r1, #0
   2cb5c:	bl	11d58 <myhtml_tree_temp_tag_name_destroy@plt>
   2cb60:	ldr	r0, [r4, #144]	; 0x90
   2cb64:	bl	12184 <mycore_free@plt>
   2cb68:	mov	r0, r4
   2cb6c:	bl	12184 <mycore_free@plt>
   2cb70:	pop	{r4, sl, fp, lr}
   2cb74:	mov	r0, #0
   2cb78:	bx	lr

0002cb7c <myhtml_tree_active_formatting_destroy@@Base>:
   2cb7c:	ldr	r0, [r0, #124]	; 0x7c
   2cb80:	mov	r1, #1
   2cb84:	b	2cb94 <myhtml_tree_list_destroy@@Base>

0002cb88 <myhtml_tree_open_elements_destroy@@Base>:
   2cb88:	ldr	r0, [r0, #128]	; 0x80
   2cb8c:	mov	r1, #1
   2cb90:	b	2cb94 <myhtml_tree_list_destroy@@Base>

0002cb94 <myhtml_tree_list_destroy@@Base>:
   2cb94:	push	{r4, r5, r6, sl, fp, lr}
   2cb98:	add	fp, sp, #16
   2cb9c:	mov	r4, #0
   2cba0:	cmp	r0, #0
   2cba4:	beq	2cbd0 <myhtml_tree_list_destroy@@Base+0x3c>
   2cba8:	mov	r6, r1
   2cbac:	mov	r5, r0
   2cbb0:	ldr	r0, [r0]
   2cbb4:	cmp	r0, #0
   2cbb8:	beq	2cbc0 <myhtml_tree_list_destroy@@Base+0x2c>
   2cbbc:	bl	12184 <mycore_free@plt>
   2cbc0:	cmp	r6, #0
   2cbc4:	beq	2cbd8 <myhtml_tree_list_destroy@@Base+0x44>
   2cbc8:	mov	r0, r5
   2cbcc:	bl	12184 <mycore_free@plt>
   2cbd0:	mov	r0, r4
   2cbd4:	pop	{r4, r5, r6, sl, fp, pc}
   2cbd8:	mov	r0, r5
   2cbdc:	pop	{r4, r5, r6, sl, fp, pc}

0002cbe0 <myhtml_tree_token_list_destroy@@Base>:
   2cbe0:	push	{r4, r5, r6, sl, fp, lr}
   2cbe4:	add	fp, sp, #16
   2cbe8:	mov	r4, #0
   2cbec:	cmp	r0, #0
   2cbf0:	beq	2cc1c <myhtml_tree_token_list_destroy@@Base+0x3c>
   2cbf4:	mov	r6, r1
   2cbf8:	mov	r5, r0
   2cbfc:	ldr	r0, [r0]
   2cc00:	cmp	r0, #0
   2cc04:	beq	2cc0c <myhtml_tree_token_list_destroy@@Base+0x2c>
   2cc08:	bl	12184 <mycore_free@plt>
   2cc0c:	cmp	r6, #0
   2cc10:	beq	2cc24 <myhtml_tree_token_list_destroy@@Base+0x44>
   2cc14:	mov	r0, r5
   2cc18:	bl	12184 <mycore_free@plt>
   2cc1c:	mov	r0, r4
   2cc20:	pop	{r4, r5, r6, sl, fp, pc}
   2cc24:	mov	r0, r5
   2cc28:	pop	{r4, r5, r6, sl, fp, pc}

0002cc2c <myhtml_tree_template_insertion_destroy@@Base>:
   2cc2c:	push	{r4, sl, fp, lr}
   2cc30:	add	fp, sp, #8
   2cc34:	mov	r4, r0
   2cc38:	ldr	r0, [r0, #140]	; 0x8c
   2cc3c:	cmp	r0, #0
   2cc40:	beq	2cc64 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2cc44:	ldr	r0, [r0]
   2cc48:	cmp	r0, #0
   2cc4c:	beq	2cc54 <myhtml_tree_template_insertion_destroy@@Base+0x28>
   2cc50:	bl	12184 <mycore_free@plt>
   2cc54:	ldr	r0, [r4, #140]	; 0x8c
   2cc58:	cmp	r0, #0
   2cc5c:	beq	2cc64 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2cc60:	bl	12184 <mycore_free@plt>
   2cc64:	mov	r0, #0
   2cc68:	pop	{r4, sl, fp, pc}

0002cc6c <myhtml_tree_temp_tag_name_destroy@@Base>:
   2cc6c:	push	{r4, r5, r6, sl, fp, lr}
   2cc70:	add	fp, sp, #16
   2cc74:	mov	r4, #0
   2cc78:	cmp	r0, #0
   2cc7c:	beq	2ccb0 <myhtml_tree_temp_tag_name_destroy@@Base+0x44>
   2cc80:	mov	r6, r1
   2cc84:	mov	r5, r0
   2cc88:	ldr	r0, [r0]
   2cc8c:	cmp	r0, #0
   2cc90:	beq	2cca0 <myhtml_tree_temp_tag_name_destroy@@Base+0x34>
   2cc94:	bl	12184 <mycore_free@plt>
   2cc98:	mov	r0, #0
   2cc9c:	str	r0, [r5]
   2cca0:	cmp	r6, #0
   2cca4:	beq	2ccb8 <myhtml_tree_temp_tag_name_destroy@@Base+0x4c>
   2cca8:	mov	r0, r5
   2ccac:	bl	12184 <mycore_free@plt>
   2ccb0:	mov	r0, r4
   2ccb4:	pop	{r4, r5, r6, sl, fp, pc}
   2ccb8:	mov	r0, r5
   2ccbc:	pop	{r4, r5, r6, sl, fp, pc}

0002ccc0 <myhtml_tree_node_clean@@Base>:
   2ccc0:	vmov.i32	q8, #0	; 0x00000000
   2ccc4:	add	r1, r0, #28
   2ccc8:	vst1.32	{d16-d17}, [r1]
   2cccc:	add	r1, r0, #16
   2ccd0:	vst1.32	{d16-d17}, [r1]
   2ccd4:	mov	r1, #8
   2ccd8:	vst1.32	{d16-d17}, [r0], r1
   2ccdc:	mov	r1, #1
   2cce0:	str	r1, [r0]
   2cce4:	bx	lr

0002cce8 <myhtml_tree_parse_flags@@Base>:
   2cce8:	ldr	r0, [r0, #184]	; 0xb8
   2ccec:	bx	lr

0002ccf0 <myhtml_tree_parse_flags_set@@Base>:
   2ccf0:	str	r1, [r0, #184]	; 0xb8
   2ccf4:	bx	lr

0002ccf8 <myhtml_tree_get_myhtml@@Base>:
   2ccf8:	cmp	r0, #0
   2ccfc:	ldrne	r0, [r0]
   2cd00:	moveq	r0, #0
   2cd04:	bx	lr

0002cd08 <myhtml_tree_get_tag@@Base>:
   2cd08:	cmp	r0, #0
   2cd0c:	ldrne	r0, [r0, #28]
   2cd10:	moveq	r0, #0
   2cd14:	bx	lr

0002cd18 <myhtml_tree_get_document@@Base>:
   2cd18:	ldr	r0, [r0, #84]	; 0x54
   2cd1c:	bx	lr

0002cd20 <myhtml_tree_get_node_html@@Base>:
   2cd20:	ldr	r0, [r0, #96]	; 0x60
   2cd24:	bx	lr

0002cd28 <myhtml_tree_get_node_body@@Base>:
   2cd28:	ldr	r0, [r0, #100]	; 0x64
   2cd2c:	bx	lr

0002cd30 <myhtml_tree_get_node_head@@Base>:
   2cd30:	ldr	r0, [r0, #92]	; 0x5c
   2cd34:	bx	lr

0002cd38 <myhtml_tree_get_mchar@@Base>:
   2cd38:	ldr	r0, [r0, #4]
   2cd3c:	bx	lr

0002cd40 <myhtml_tree_get_mchar_node_id@@Base>:
   2cd40:	ldr	r0, [r0, #52]	; 0x34
   2cd44:	bx	lr

0002cd48 <myhtml_tree_node_add_child@@Base>:
   2cd48:	ldr	r2, [r0, #28]
   2cd4c:	cmp	r2, #0
   2cd50:	beq	2cd64 <myhtml_tree_node_add_child@@Base+0x1c>
   2cd54:	str	r1, [r2, #16]
   2cd58:	ldr	r2, [r0, #28]
   2cd5c:	str	r2, [r1, #12]
   2cd60:	b	2cd68 <myhtml_tree_node_add_child@@Base+0x20>
   2cd64:	str	r1, [r0, #20]
   2cd68:	str	r0, [r1, #24]
   2cd6c:	str	r1, [r0, #28]
   2cd70:	ldr	r0, [r1, #40]	; 0x28
   2cd74:	ldr	r3, [r0, #236]	; 0xec
   2cd78:	cmp	r3, #0
   2cd7c:	bxeq	lr
   2cd80:	ldr	r2, [r0, #244]	; 0xf4
   2cd84:	bx	r3

0002cd88 <myhtml_tree_node_insert_before@@Base>:
   2cd88:	ldr	r2, [r0, #12]
   2cd8c:	cmp	r2, #0
   2cd90:	beq	2cda4 <myhtml_tree_node_insert_before@@Base+0x1c>
   2cd94:	str	r1, [r2, #16]
   2cd98:	ldr	r2, [r0, #12]
   2cd9c:	str	r2, [r1, #12]
   2cda0:	b	2cdac <myhtml_tree_node_insert_before@@Base+0x24>
   2cda4:	ldr	r2, [r0, #24]
   2cda8:	str	r1, [r2, #20]
   2cdac:	ldr	r2, [r0, #24]
   2cdb0:	str	r0, [r1, #16]
   2cdb4:	str	r2, [r1, #24]
   2cdb8:	str	r1, [r0, #12]
   2cdbc:	ldr	r0, [r1, #40]	; 0x28
   2cdc0:	ldr	r3, [r0, #236]	; 0xec
   2cdc4:	cmp	r3, #0
   2cdc8:	bxeq	lr
   2cdcc:	ldr	r2, [r0, #244]	; 0xf4
   2cdd0:	bx	r3

0002cdd4 <myhtml_tree_node_insert_after@@Base>:
   2cdd4:	ldr	r2, [r0, #16]
   2cdd8:	cmp	r2, #0
   2cddc:	beq	2cdf0 <myhtml_tree_node_insert_after@@Base+0x1c>
   2cde0:	str	r1, [r2, #12]
   2cde4:	ldr	r2, [r0, #16]
   2cde8:	str	r2, [r1, #16]
   2cdec:	b	2cdf8 <myhtml_tree_node_insert_after@@Base+0x24>
   2cdf0:	ldr	r2, [r0, #24]
   2cdf4:	str	r1, [r2, #28]
   2cdf8:	ldr	r2, [r0, #24]
   2cdfc:	str	r0, [r1, #12]
   2ce00:	str	r2, [r1, #24]
   2ce04:	str	r1, [r0, #16]
   2ce08:	ldr	r0, [r1, #40]	; 0x28
   2ce0c:	ldr	r3, [r0, #236]	; 0xec
   2ce10:	cmp	r3, #0
   2ce14:	bxeq	lr
   2ce18:	ldr	r2, [r0, #244]	; 0xf4
   2ce1c:	bx	r3

0002ce20 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   2ce20:	ldr	r0, [r0, #24]
   2ce24:	cmp	r0, #0
   2ce28:	ldrne	r2, [r0, #4]
   2ce2c:	cmpne	r2, r1
   2ce30:	bne	2ce20 <myhtml_tree_node_find_parent_by_tag_id@@Base>
   2ce34:	bx	lr

0002ce38 <myhtml_tree_node_remove@@Base>:
   2ce38:	push	{r4, sl, fp, lr}
   2ce3c:	add	fp, sp, #8
   2ce40:	mov	r4, r0
   2ce44:	ldr	r0, [r0, #16]
   2ce48:	cmp	r0, #0
   2ce4c:	beq	2ce58 <myhtml_tree_node_remove@@Base+0x20>
   2ce50:	add	r0, r0, #12
   2ce54:	b	2ce68 <myhtml_tree_node_remove@@Base+0x30>
   2ce58:	ldr	r0, [r4, #24]
   2ce5c:	cmp	r0, #0
   2ce60:	beq	2ce70 <myhtml_tree_node_remove@@Base+0x38>
   2ce64:	add	r0, r0, #28
   2ce68:	ldr	r1, [r4, #12]
   2ce6c:	str	r1, [r0]
   2ce70:	ldr	r0, [r4, #12]
   2ce74:	cmp	r0, #0
   2ce78:	beq	2ce84 <myhtml_tree_node_remove@@Base+0x4c>
   2ce7c:	add	r0, r0, #16
   2ce80:	b	2ce94 <myhtml_tree_node_remove@@Base+0x5c>
   2ce84:	ldr	r0, [r4, #24]
   2ce88:	cmp	r0, #0
   2ce8c:	beq	2ce9c <myhtml_tree_node_remove@@Base+0x64>
   2ce90:	add	r0, r0, #20
   2ce94:	ldr	r1, [r4, #16]
   2ce98:	str	r1, [r0]
   2ce9c:	ldr	r0, [r4, #40]	; 0x28
   2cea0:	ldr	r3, [r0, #240]	; 0xf0
   2cea4:	cmp	r3, #0
   2cea8:	beq	2ceb8 <myhtml_tree_node_remove@@Base+0x80>
   2ceac:	ldr	r2, [r0, #248]	; 0xf8
   2ceb0:	mov	r1, r4
   2ceb4:	blx	r3
   2ceb8:	mov	r0, #0
   2cebc:	str	r0, [r4, #24]
   2cec0:	str	r0, [r4, #12]
   2cec4:	str	r0, [r4, #16]
   2cec8:	mov	r0, r4
   2cecc:	pop	{r4, sl, fp, pc}

0002ced0 <myhtml_tree_node_free@@Base>:
   2ced0:	cmp	r0, #0
   2ced4:	bxeq	lr
   2ced8:	push	{r4, sl, fp, lr}
   2cedc:	add	fp, sp, #8
   2cee0:	mov	r4, r0
   2cee4:	ldr	r1, [r0, #32]
   2cee8:	cmp	r1, #0
   2ceec:	beq	2cf0c <myhtml_tree_node_free@@Base+0x3c>
   2cef0:	ldr	r0, [r4, #40]	; 0x28
   2cef4:	ldr	r0, [r0, #8]
   2cef8:	bl	11bfc <myhtml_token_attr_delete_all@plt>
   2cefc:	ldr	r1, [r4, #32]
   2cf00:	ldr	r0, [r4, #40]	; 0x28
   2cf04:	ldr	r0, [r0, #8]
   2cf08:	bl	1231c <myhtml_token_delete@plt>
   2cf0c:	ldr	r0, [r4, #40]	; 0x28
   2cf10:	ldr	r0, [r0, #12]
   2cf14:	mov	r1, r4
   2cf18:	pop	{r4, sl, fp, lr}
   2cf1c:	b	114dc <mcobject_async_free@plt>

0002cf20 <myhtml_tree_node_delete@@Base>:
   2cf20:	cmp	r0, #0
   2cf24:	bxeq	lr
   2cf28:	push	{fp, lr}
   2cf2c:	mov	fp, sp
   2cf30:	bl	121a8 <myhtml_tree_node_remove@plt>
   2cf34:	pop	{fp, lr}
   2cf38:	b	2ced0 <myhtml_tree_node_free@@Base>

0002cf3c <myhtml_tree_node_delete_recursive@@Base>:
   2cf3c:	cmp	r0, #0
   2cf40:	bxeq	lr
   2cf44:	push	{r4, sl, fp, lr}
   2cf48:	add	fp, sp, #8
   2cf4c:	mov	r4, r0
   2cf50:	ldr	r0, [r0, #20]
   2cf54:	cmp	r0, #0
   2cf58:	blne	2cf68 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   2cf5c:	mov	r0, r4
   2cf60:	pop	{r4, sl, fp, lr}
   2cf64:	b	2cf20 <myhtml_tree_node_delete@@Base>
   2cf68:	push	{r4, sl, fp, lr}
   2cf6c:	add	fp, sp, #8
   2cf70:	cmp	r0, #0
   2cf74:	popeq	{r4, sl, fp, pc}
   2cf78:	mov	r4, r0
   2cf7c:	ldr	r0, [r4, #20]
   2cf80:	cmp	r0, #0
   2cf84:	blne	2cf68 <myhtml_tree_node_delete_recursive@@Base+0x2c>
   2cf88:	ldr	r4, [r4, #16]
   2cf8c:	mov	r0, r4
   2cf90:	bl	12178 <myhtml_tree_node_delete@plt>
   2cf94:	cmp	r4, #0
   2cf98:	bne	2cf7c <myhtml_tree_node_delete_recursive@@Base+0x40>
   2cf9c:	pop	{r4, sl, fp, pc}

0002cfa0 <myhtml_tree_node_clone@@Base>:
   2cfa0:	push	{r4, r5, fp, lr}
   2cfa4:	add	fp, sp, #8
   2cfa8:	mov	r5, r0
   2cfac:	ldr	r0, [r0, #40]	; 0x28
   2cfb0:	bl	11470 <myhtml_tree_node_create@plt>
   2cfb4:	mov	r4, r0
   2cfb8:	ldr	r1, [r5, #32]
   2cfbc:	cmp	r1, #0
   2cfc0:	beq	2cfd0 <myhtml_tree_node_clone@@Base+0x30>
   2cfc4:	ldr	r0, [r5, #40]	; 0x28
   2cfc8:	ldr	r0, [r0, #8]
   2cfcc:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2cfd0:	ldr	r1, [r5, #32]
   2cfd4:	ldr	r3, [r5, #40]	; 0x28
   2cfd8:	ldr	r0, [r3, #8]
   2cfdc:	ldr	r2, [r3, #40]	; 0x28
   2cfe0:	ldr	r3, [r3, #44]	; 0x2c
   2cfe4:	bl	113bc <myhtml_token_node_clone@plt>
   2cfe8:	str	r0, [r4, #32]
   2cfec:	ldr	r1, [r5, #4]
   2cff0:	str	r1, [r4, #4]
   2cff4:	ldr	r1, [r5, #8]
   2cff8:	str	r1, [r4, #8]
   2cffc:	cmp	r0, #0
   2d000:	ldrne	r1, [r0, #48]	; 0x30
   2d004:	orrne	r1, r1, #4
   2d008:	strne	r1, [r0, #48]	; 0x30
   2d00c:	mov	r0, r4
   2d010:	pop	{r4, r5, fp, pc}

0002d014 <myhtml_tree_node_insert_by_mode@@Base>:
   2d014:	cmp	r2, #1
   2d018:	beq	2d028 <myhtml_tree_node_insert_by_mode@@Base+0x14>
   2d01c:	cmp	r2, #0
   2d020:	bne	2d02c <myhtml_tree_node_insert_by_mode@@Base+0x18>
   2d024:	b	2cd48 <myhtml_tree_node_add_child@@Base>
   2d028:	b	2cd88 <myhtml_tree_node_insert_before@@Base>
   2d02c:	b	2cdd4 <myhtml_tree_node_insert_after@@Base>

0002d030 <myhtml_tree_node_insert_by_token@@Base>:
   2d030:	push	{r4, r5, r6, r7, fp, lr}
   2d034:	add	fp, sp, #16
   2d038:	sub	sp, sp, #8
   2d03c:	mov	r4, r2
   2d040:	mov	r5, r1
   2d044:	mov	r6, r0
   2d048:	bl	11470 <myhtml_tree_node_create@plt>
   2d04c:	mov	r7, r0
   2d050:	ldr	r0, [r5]
   2d054:	str	r5, [r7, #32]
   2d058:	stmib	r7, {r0, r4}
   2d05c:	add	r2, sp, #4
   2d060:	mov	r0, r6
   2d064:	mov	r1, #0
   2d068:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d06c:	ldr	r2, [sp, #4]
   2d070:	mov	r1, r7
   2d074:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d078:	mov	r0, r6
   2d07c:	mov	r1, r7
   2d080:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d084:	mov	r0, r7
   2d088:	sub	sp, fp, #16
   2d08c:	pop	{r4, r5, r6, r7, fp, pc}

0002d090 <myhtml_tree_appropriate_place_inserting@@Base>:
   2d090:	push	{r4, r5, r6, sl, fp, lr}
   2d094:	add	fp, sp, #16
   2d098:	sub	sp, sp, #8
   2d09c:	mov	r4, r2
   2d0a0:	mov	r6, r1
   2d0a4:	mov	r5, r0
   2d0a8:	mov	r0, #0
   2d0ac:	str	r0, [r2]
   2d0b0:	cmp	r1, #0
   2d0b4:	bne	2d0c4 <myhtml_tree_appropriate_place_inserting@@Base+0x34>
   2d0b8:	mov	r0, r5
   2d0bc:	bl	11a4c <myhtml_tree_current_node@plt>
   2d0c0:	mov	r6, r0
   2d0c4:	ldrb	r0, [r5, #188]	; 0xbc
   2d0c8:	cmp	r0, #0
   2d0cc:	beq	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d0d0:	ldr	r0, [r6, #8]
   2d0d4:	cmp	r0, #1
   2d0d8:	bne	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d0dc:	ldr	r0, [r6, #4]
   2d0e0:	sub	r0, r0, #125	; 0x7d
   2d0e4:	cmp	r0, #10
   2d0e8:	bhi	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d0ec:	mov	r1, #1
   2d0f0:	movw	r2, #1187	; 0x4a3
   2d0f4:	tst	r2, r1, lsl r0
   2d0f8:	beq	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d0fc:	add	r3, sp, #4
   2d100:	mov	r0, r5
   2d104:	mov	r1, #128	; 0x80
   2d108:	mov	r2, #1
   2d10c:	bl	1117c <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2d110:	mov	r6, r0
   2d114:	mov	r3, sp
   2d118:	mov	r0, r5
   2d11c:	mov	r1, #125	; 0x7d
   2d120:	mov	r2, #1
   2d124:	bl	1117c <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2d128:	cmp	r6, #0
   2d12c:	beq	2d148 <myhtml_tree_appropriate_place_inserting@@Base+0xb8>
   2d130:	cmp	r0, #0
   2d134:	beq	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d138:	ldm	sp, {r1, r2}
   2d13c:	cmp	r2, r1
   2d140:	bls	2d150 <myhtml_tree_appropriate_place_inserting@@Base+0xc0>
   2d144:	b	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d148:	cmp	r0, #0
   2d14c:	beq	2d194 <myhtml_tree_appropriate_place_inserting@@Base+0x104>
   2d150:	ldr	r1, [r0, #24]
   2d154:	cmp	r1, #0
   2d158:	beq	2d17c <myhtml_tree_appropriate_place_inserting@@Base+0xec>
   2d15c:	ldr	r1, [r0, #12]
   2d160:	mov	r2, #2
   2d164:	cmp	r1, #0
   2d168:	movweq	r2, #1
   2d16c:	str	r2, [r4]
   2d170:	movne	r0, r1
   2d174:	mov	r6, r0
   2d178:	b	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d17c:	ldr	r0, [r5, #128]	; 0x80
   2d180:	ldr	r0, [r0]
   2d184:	ldr	r1, [sp]
   2d188:	add	r0, r0, r1, lsl #2
   2d18c:	ldr	r6, [r0, #-4]
   2d190:	b	2d1a0 <myhtml_tree_appropriate_place_inserting@@Base+0x110>
   2d194:	ldr	r0, [r5, #128]	; 0x80
   2d198:	ldr	r0, [r0]
   2d19c:	ldr	r6, [r0]
   2d1a0:	mov	r0, r6
   2d1a4:	sub	sp, fp, #16
   2d1a8:	pop	{r4, r5, r6, sl, fp, pc}

0002d1ac <myhtml_tree_open_elements_append@@Base>:
   2d1ac:	ldr	r0, [r0, #128]	; 0x80
   2d1b0:	b	2d6e0 <myhtml_tree_list_append@@Base>

0002d1b4 <myhtml_tree_node_insert@@Base>:
   2d1b4:	push	{r4, r5, r6, r7, fp, lr}
   2d1b8:	add	fp, sp, #16
   2d1bc:	sub	sp, sp, #8
   2d1c0:	mov	r4, r2
   2d1c4:	mov	r5, r1
   2d1c8:	mov	r6, r0
   2d1cc:	bl	11470 <myhtml_tree_node_create@plt>
   2d1d0:	mov	r7, r0
   2d1d4:	mov	r0, #0
   2d1d8:	str	r0, [r7, #32]
   2d1dc:	str	r5, [r7, #4]
   2d1e0:	str	r4, [r7, #8]
   2d1e4:	add	r2, sp, #4
   2d1e8:	mov	r0, r6
   2d1ec:	mov	r1, #0
   2d1f0:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d1f4:	ldr	r2, [sp, #4]
   2d1f8:	mov	r1, r7
   2d1fc:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d200:	mov	r0, r6
   2d204:	mov	r1, r7
   2d208:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d20c:	mov	r0, r7
   2d210:	sub	sp, fp, #16
   2d214:	pop	{r4, r5, r6, r7, fp, pc}

0002d218 <myhtml_tree_node_insert_comment@@Base>:
   2d218:	push	{r4, r5, r6, r7, fp, lr}
   2d21c:	add	fp, sp, #16
   2d220:	sub	sp, sp, #8
   2d224:	mov	r5, r2
   2d228:	mov	r7, r1
   2d22c:	mov	r6, r0
   2d230:	bl	11470 <myhtml_tree_node_create@plt>
   2d234:	mov	r4, r0
   2d238:	str	r7, [r0, #32]
   2d23c:	mov	r0, #2
   2d240:	str	r0, [r4, #4]
   2d244:	mov	r0, #0
   2d248:	str	r0, [sp, #4]
   2d24c:	cmp	r5, #0
   2d250:	bne	2d268 <myhtml_tree_node_insert_comment@@Base+0x50>
   2d254:	add	r2, sp, #4
   2d258:	mov	r0, r6
   2d25c:	mov	r1, #0
   2d260:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d264:	mov	r5, r0
   2d268:	ldr	r2, [sp, #4]
   2d26c:	mov	r0, r5
   2d270:	mov	r1, r4
   2d274:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d278:	ldr	r0, [r5, #8]
   2d27c:	str	r0, [r4, #8]
   2d280:	mov	r0, r4
   2d284:	sub	sp, fp, #16
   2d288:	pop	{r4, r5, r6, r7, fp, pc}

0002d28c <myhtml_tree_node_insert_doctype@@Base>:
   2d28c:	push	{r4, r5, r6, sl, fp, lr}
   2d290:	add	fp, sp, #16
   2d294:	mov	r4, r1
   2d298:	mov	r5, r0
   2d29c:	bl	11470 <myhtml_tree_node_create@plt>
   2d2a0:	mov	r6, r0
   2d2a4:	str	r4, [r0, #32]
   2d2a8:	mov	r0, #1
   2d2ac:	mov	r1, #3
   2d2b0:	str	r1, [r6, #4]
   2d2b4:	str	r0, [r6, #8]
   2d2b8:	ldr	r0, [r5, #84]	; 0x54
   2d2bc:	mov	r1, r6
   2d2c0:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   2d2c4:	mov	r0, r6
   2d2c8:	pop	{r4, r5, r6, sl, fp, pc}

0002d2cc <myhtml_tree_node_insert_root@@Base>:
   2d2cc:	push	{r4, r5, r6, r7, fp, lr}
   2d2d0:	add	fp, sp, #16
   2d2d4:	mov	r6, r2
   2d2d8:	mov	r7, r1
   2d2dc:	mov	r4, r0
   2d2e0:	bl	11470 <myhtml_tree_node_create@plt>
   2d2e4:	mov	r5, r0
   2d2e8:	cmp	r7, #0
   2d2ec:	beq	2d2f8 <myhtml_tree_node_insert_root@@Base+0x2c>
   2d2f0:	ldr	r0, [r7]
   2d2f4:	b	2d2fc <myhtml_tree_node_insert_root@@Base+0x30>
   2d2f8:	mov	r0, #65	; 0x41
   2d2fc:	str	r7, [r5, #32]
   2d300:	stmib	r5, {r0, r6}
   2d304:	ldr	r0, [r4, #84]	; 0x54
   2d308:	mov	r1, r5
   2d30c:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   2d310:	mov	r0, r4
   2d314:	mov	r1, r5
   2d318:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d31c:	str	r5, [r4, #96]	; 0x60
   2d320:	mov	r0, r5
   2d324:	pop	{r4, r5, r6, r7, fp, pc}

0002d328 <myhtml_tree_node_insert_text@@Base>:
   2d328:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2d32c:	add	fp, sp, #24
   2d330:	sub	sp, sp, #8
   2d334:	mov	r8, r1
   2d338:	mov	r6, r0
   2d33c:	mov	r4, #0
   2d340:	add	r2, sp, #4
   2d344:	mov	r1, #0
   2d348:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d34c:	mov	r5, r0
   2d350:	ldr	r0, [r6, #84]	; 0x54
   2d354:	cmp	r5, r0
   2d358:	beq	2d434 <myhtml_tree_node_insert_text@@Base+0x10c>
   2d35c:	ldr	r7, [sp, #4]
   2d360:	cmp	r7, #1
   2d364:	beq	2d398 <myhtml_tree_node_insert_text@@Base+0x70>
   2d368:	cmp	r7, #2
   2d36c:	bne	2d3c8 <myhtml_tree_node_insert_text@@Base+0xa0>
   2d370:	ldr	r0, [r5, #4]
   2d374:	cmp	r0, #1
   2d378:	bne	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d37c:	ldr	r1, [r5, #32]
   2d380:	cmp	r1, #0
   2d384:	beq	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d388:	mov	r0, r6
   2d38c:	mov	r2, r8
   2d390:	mov	r3, #0
   2d394:	b	2d3bc <myhtml_tree_node_insert_text@@Base+0x94>
   2d398:	ldr	r0, [r5, #4]
   2d39c:	cmp	r0, #1
   2d3a0:	bne	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d3a4:	ldr	r2, [r5, #32]
   2d3a8:	cmp	r2, #0
   2d3ac:	beq	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d3b0:	mov	r0, r6
   2d3b4:	mov	r1, r8
   2d3b8:	mov	r3, #1
   2d3bc:	bl	118b4 <myhtml_token_merged_two_token_string@plt>
   2d3c0:	mov	r4, r5
   2d3c4:	b	2d434 <myhtml_tree_node_insert_text@@Base+0x10c>
   2d3c8:	ldr	r0, [r5, #28]
   2d3cc:	cmp	r0, #0
   2d3d0:	beq	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d3d4:	ldr	r1, [r0, #4]
   2d3d8:	cmp	r1, #1
   2d3dc:	bne	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d3e0:	ldr	r1, [r0, #32]
   2d3e4:	cmp	r1, #0
   2d3e8:	beq	2d404 <myhtml_tree_node_insert_text@@Base+0xdc>
   2d3ec:	mov	r0, r6
   2d3f0:	mov	r2, r8
   2d3f4:	mov	r3, #0
   2d3f8:	bl	118b4 <myhtml_token_merged_two_token_string@plt>
   2d3fc:	ldr	r4, [r5, #28]
   2d400:	b	2d434 <myhtml_tree_node_insert_text@@Base+0x10c>
   2d404:	mov	r0, r6
   2d408:	bl	11470 <myhtml_tree_node_create@plt>
   2d40c:	mov	r4, r0
   2d410:	str	r8, [r0, #32]
   2d414:	mov	r0, #1
   2d418:	str	r0, [r4, #4]
   2d41c:	ldr	r0, [r5, #8]
   2d420:	str	r0, [r4, #8]
   2d424:	mov	r0, r5
   2d428:	mov	r1, r4
   2d42c:	mov	r2, r7
   2d430:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d434:	mov	r0, r4
   2d438:	sub	sp, fp, #24
   2d43c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002d440 <myhtml_tree_node_insert_by_node@@Base>:
   2d440:	push	{r4, r5, fp, lr}
   2d444:	add	fp, sp, #8
   2d448:	sub	sp, sp, #8
   2d44c:	mov	r4, r1
   2d450:	mov	r5, r0
   2d454:	add	r2, sp, #4
   2d458:	mov	r1, #0
   2d45c:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d460:	ldr	r2, [sp, #4]
   2d464:	mov	r1, r4
   2d468:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d46c:	mov	r0, r5
   2d470:	mov	r1, r4
   2d474:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d478:	mov	r0, r4
   2d47c:	sub	sp, fp, #8
   2d480:	pop	{r4, r5, fp, pc}

0002d484 <myhtml_tree_node_insert_foreign_element@@Base>:
   2d484:	push	{r4, r5, r6, r7, fp, lr}
   2d488:	add	fp, sp, #16
   2d48c:	sub	sp, sp, #8
   2d490:	mov	r4, r1
   2d494:	mov	r5, r0
   2d498:	add	r2, sp, #4
   2d49c:	mov	r1, #0
   2d4a0:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d4a4:	mov	r6, r0
   2d4a8:	mov	r0, r5
   2d4ac:	bl	11470 <myhtml_tree_node_create@plt>
   2d4b0:	mov	r7, r0
   2d4b4:	ldr	r0, [r4]
   2d4b8:	str	r4, [r7, #32]
   2d4bc:	str	r0, [r7, #4]
   2d4c0:	ldr	r0, [r6, #8]
   2d4c4:	str	r0, [r7, #8]
   2d4c8:	ldr	r2, [sp, #4]
   2d4cc:	mov	r0, r6
   2d4d0:	mov	r1, r7
   2d4d4:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d4d8:	mov	r0, r5
   2d4dc:	mov	r1, r7
   2d4e0:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d4e4:	mov	r0, r7
   2d4e8:	sub	sp, fp, #16
   2d4ec:	pop	{r4, r5, r6, r7, fp, pc}

0002d4f0 <myhtml_tree_node_insert_html_element@@Base>:
   2d4f0:	push	{r4, r5, r6, r7, fp, lr}
   2d4f4:	add	fp, sp, #16
   2d4f8:	sub	sp, sp, #8
   2d4fc:	mov	r4, r1
   2d500:	mov	r5, r0
   2d504:	add	r2, sp, #4
   2d508:	mov	r1, #0
   2d50c:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2d510:	mov	r6, r0
   2d514:	mov	r0, r5
   2d518:	bl	11470 <myhtml_tree_node_create@plt>
   2d51c:	mov	r7, r0
   2d520:	ldr	r0, [r4]
   2d524:	mov	r1, #1
   2d528:	str	r4, [r7, #32]
   2d52c:	stmib	r7, {r0, r1}
   2d530:	ldr	r2, [sp, #4]
   2d534:	mov	r0, r6
   2d538:	mov	r1, r7
   2d53c:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2d540:	mov	r0, r5
   2d544:	mov	r1, r7
   2d548:	bl	11da0 <myhtml_tree_open_elements_append@plt>
   2d54c:	mov	r0, r7
   2d550:	sub	sp, fp, #16
   2d554:	pop	{r4, r5, r6, r7, fp, pc}

0002d558 <myhtml_tree_element_in_scope@@Base>:
   2d558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d55c:	add	fp, sp, #28
   2d560:	sub	sp, sp, #4
   2d564:	mov	sl, r1
   2d568:	mov	r4, r0
   2d56c:	ldr	r1, [r0, #128]	; 0x80
   2d570:	ldr	r0, [r1, #4]
   2d574:	mov	r8, #0
   2d578:	cmp	r0, #0
   2d57c:	beq	2d60c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d580:	mov	r5, r3
   2d584:	mov	r9, r2
   2d588:	ldr	r6, [r1]
   2d58c:	sub	r7, r0, #1
   2d590:	b	2d598 <myhtml_tree_element_in_scope@@Base+0x40>
   2d594:	sub	r7, r7, #1
   2d598:	ldr	r0, [r6, r7, lsl #2]
   2d59c:	ldr	r1, [r0, #4]
   2d5a0:	ldr	r0, [r4, #28]
   2d5a4:	bl	11e24 <myhtml_tag_get_by_id@plt>
   2d5a8:	ldr	r1, [r6, r7, lsl #2]
   2d5ac:	ldr	r2, [r1, #4]
   2d5b0:	cmp	r2, sl
   2d5b4:	bne	2d5c8 <myhtml_tree_element_in_scope@@Base+0x70>
   2d5b8:	cmp	r9, #0
   2d5bc:	ldrne	r2, [r1, #8]
   2d5c0:	cmpne	r2, r9
   2d5c4:	beq	2d608 <myhtml_tree_element_in_scope@@Base+0xb0>
   2d5c8:	ldr	r1, [r1, #8]
   2d5cc:	add	r0, r0, r1, lsl #2
   2d5d0:	ldr	r0, [r0, #16]
   2d5d4:	and	r0, r0, r5
   2d5d8:	cmp	r5, #128	; 0x80
   2d5dc:	bne	2d5f4 <myhtml_tree_element_in_scope@@Base+0x9c>
   2d5e0:	cmp	r0, #0
   2d5e4:	beq	2d60c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d5e8:	cmp	r7, #0
   2d5ec:	bne	2d594 <myhtml_tree_element_in_scope@@Base+0x3c>
   2d5f0:	b	2d60c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d5f4:	cmp	r7, #0
   2d5f8:	beq	2d60c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d5fc:	cmp	r0, #0
   2d600:	beq	2d594 <myhtml_tree_element_in_scope@@Base+0x3c>
   2d604:	b	2d60c <myhtml_tree_element_in_scope@@Base+0xb4>
   2d608:	mov	r8, r1
   2d60c:	mov	r0, r8
   2d610:	sub	sp, fp, #28
   2d614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002d618 <myhtml_tree_element_in_scope_by_node@@Base>:
   2d618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d61c:	add	fp, sp, #28
   2d620:	sub	sp, sp, #4
   2d624:	mov	r9, r0
   2d628:	ldr	r7, [r0, #40]	; 0x28
   2d62c:	ldr	r0, [r7, #128]	; 0x80
   2d630:	ldr	r4, [r0, #4]
   2d634:	mov	r8, #0
   2d638:	cmp	r4, #0
   2d63c:	beq	2d6d4 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   2d640:	mov	r5, r1
   2d644:	ldr	sl, [r0]
   2d648:	add	r6, sl, r4, lsl #2
   2d64c:	ldr	r0, [r6, #-4]
   2d650:	ldr	r1, [r0, #4]
   2d654:	ldr	r0, [r7, #28]
   2d658:	bl	11e24 <myhtml_tag_get_by_id@plt>
   2d65c:	ldr	r1, [r6, #-4]
   2d660:	cmp	r1, r9
   2d664:	beq	2d6d0 <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2d668:	sub	r6, sl, #8
   2d66c:	b	2d690 <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   2d670:	ldr	r0, [r6, r4, lsl #2]
   2d674:	ldr	r1, [r0, #4]
   2d678:	ldr	r0, [r7, #28]
   2d67c:	bl	11e24 <myhtml_tag_get_by_id@plt>
   2d680:	ldr	r1, [r6, r4, lsl #2]
   2d684:	sub	r4, r4, #1
   2d688:	cmp	r1, r9
   2d68c:	beq	2d6d0 <myhtml_tree_element_in_scope_by_node@@Base+0xb8>
   2d690:	ldr	r1, [r1, #8]
   2d694:	add	r0, r0, r1, lsl #2
   2d698:	ldr	r0, [r0, #16]
   2d69c:	and	r0, r0, r5
   2d6a0:	cmp	r5, #128	; 0x80
   2d6a4:	bne	2d6bc <myhtml_tree_element_in_scope_by_node@@Base+0xa4>
   2d6a8:	cmp	r0, #0
   2d6ac:	beq	2d6d4 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   2d6b0:	cmp	r4, #1
   2d6b4:	bne	2d670 <myhtml_tree_element_in_scope_by_node@@Base+0x58>
   2d6b8:	b	2d6d4 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   2d6bc:	cmp	r4, #1
   2d6c0:	beq	2d6d4 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   2d6c4:	cmp	r0, #0
   2d6c8:	beq	2d670 <myhtml_tree_element_in_scope_by_node@@Base+0x58>
   2d6cc:	b	2d6d4 <myhtml_tree_element_in_scope_by_node@@Base+0xbc>
   2d6d0:	mov	r8, #1
   2d6d4:	mov	r0, r8
   2d6d8:	sub	sp, fp, #28
   2d6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002d6e0 <myhtml_tree_list_append@@Base>:
   2d6e0:	push	{r4, r5, fp, lr}
   2d6e4:	add	fp, sp, #8
   2d6e8:	mov	r5, r1
   2d6ec:	mov	r4, r0
   2d6f0:	ldr	r0, [r0, #4]
   2d6f4:	ldr	r1, [r4, #8]
   2d6f8:	cmp	r0, r1
   2d6fc:	bcc	2d71c <myhtml_tree_list_append@@Base+0x3c>
   2d700:	lsl	r0, r1, #1
   2d704:	str	r0, [r4, #8]
   2d708:	ldr	r0, [r4]
   2d70c:	lsl	r1, r1, #3
   2d710:	bl	110b0 <mycore_realloc@plt>
   2d714:	cmp	r0, #0
   2d718:	strne	r0, [r4]
   2d71c:	ldr	r0, [r4]
   2d720:	ldr	r1, [r4, #4]
   2d724:	str	r5, [r0, r1, lsl #2]
   2d728:	ldr	r0, [r4, #4]
   2d72c:	add	r0, r0, #1
   2d730:	str	r0, [r4, #4]
   2d734:	pop	{r4, r5, fp, pc}

0002d738 <myhtml_tree_list_append_after_index@@Base>:
   2d738:	add	r2, r2, #1
   2d73c:	b	2d740 <myhtml_tree_list_insert_by_index@@Base>

0002d740 <myhtml_tree_list_insert_by_index@@Base>:
   2d740:	push	{r4, r5, r6, sl, fp, lr}
   2d744:	add	fp, sp, #16
   2d748:	mov	r5, r2
   2d74c:	mov	r6, r1
   2d750:	mov	r4, r0
   2d754:	ldr	r0, [r0, #4]
   2d758:	ldr	r1, [r4, #8]
   2d75c:	cmp	r0, r1
   2d760:	bcc	2d780 <myhtml_tree_list_insert_by_index@@Base+0x40>
   2d764:	lsl	r0, r1, #1
   2d768:	str	r0, [r4, #8]
   2d76c:	ldr	r0, [r4]
   2d770:	lsl	r1, r1, #3
   2d774:	bl	110b0 <mycore_realloc@plt>
   2d778:	cmp	r0, #0
   2d77c:	strne	r0, [r4]
   2d780:	ldr	r0, [r4]
   2d784:	ldr	r2, [r4, #4]
   2d788:	add	r1, r0, r5, lsl #2
   2d78c:	add	r0, r1, #4
   2d790:	sub	r2, r2, r5
   2d794:	lsl	r2, r2, #2
   2d798:	bl	11314 <memmove@plt>
   2d79c:	ldr	r0, [r4]
   2d7a0:	str	r6, [r0, r5, lsl #2]
   2d7a4:	ldr	r0, [r4, #4]
   2d7a8:	add	r0, r0, #1
   2d7ac:	str	r0, [r4, #4]
   2d7b0:	pop	{r4, r5, r6, sl, fp, pc}

0002d7b4 <myhtml_tree_list_current_node@@Base>:
   2d7b4:	ldr	r1, [r0, #4]
   2d7b8:	cmp	r1, #0
   2d7bc:	moveq	r0, #0
   2d7c0:	bxeq	lr
   2d7c4:	ldr	r1, [r0]
   2d7c8:	ldr	r0, [r0, #4]
   2d7cc:	add	r0, r1, r0, lsl #2
   2d7d0:	ldr	r0, [r0, #-4]
   2d7d4:	bx	lr

0002d7d8 <myhtml_tree_current_node@@Base>:
   2d7d8:	ldr	r0, [r0, #128]	; 0x80
   2d7dc:	ldr	r1, [r0, #4]
   2d7e0:	cmp	r1, #0
   2d7e4:	moveq	r0, #0
   2d7e8:	bxeq	lr
   2d7ec:	ldr	r1, [r0]
   2d7f0:	ldr	r0, [r0, #4]
   2d7f4:	add	r0, r1, r0, lsl #2
   2d7f8:	ldr	r0, [r0, #-4]
   2d7fc:	bx	lr

0002d800 <myhtml_tree_adjusted_current_node@@Base>:
   2d800:	ldr	r1, [r0, #128]	; 0x80
   2d804:	ldr	r1, [r1, #4]
   2d808:	cmp	r1, #1
   2d80c:	bne	2d820 <myhtml_tree_adjusted_current_node@@Base+0x20>
   2d810:	ldr	r1, [r0, #88]	; 0x58
   2d814:	cmp	r1, #0
   2d818:	movne	r0, r1
   2d81c:	bxne	lr
   2d820:	b	2d7d8 <myhtml_tree_current_node@@Base>

0002d824 <myhtml_tree_open_elements_append_after_index@@Base>:
   2d824:	ldr	r0, [r0, #128]	; 0x80
   2d828:	b	2d738 <myhtml_tree_list_append_after_index@@Base>

0002d82c <myhtml_tree_open_elements_pop@@Base>:
   2d82c:	ldr	r0, [r0, #128]	; 0x80
   2d830:	ldr	r1, [r0, #4]
   2d834:	cmp	r1, #0
   2d838:	ldrne	r1, [r0, #4]
   2d83c:	subne	r1, r1, #1
   2d840:	strne	r1, [r0, #4]
   2d844:	bx	lr

0002d848 <myhtml_tree_open_elements_remove@@Base>:
   2d848:	push	{r4, r5, fp, lr}
   2d84c:	add	fp, sp, #8
   2d850:	mov	r5, r0
   2d854:	ldr	r0, [r0, #128]	; 0x80
   2d858:	ldr	r2, [r0, #4]
   2d85c:	ldr	r3, [r0]
   2d860:	add	r3, r3, r2, lsl #2
   2d864:	add	r3, r3, #4
   2d868:	cmp	r2, #0
   2d86c:	beq	2d8b0 <myhtml_tree_open_elements_remove@@Base+0x68>
   2d870:	sub	r4, r3, #4
   2d874:	sub	r2, r2, #1
   2d878:	ldr	r3, [r3, #-8]
   2d87c:	cmp	r3, r1
   2d880:	mov	r3, r4
   2d884:	bne	2d868 <myhtml_tree_open_elements_remove@@Base+0x20>
   2d888:	ldr	r0, [r0, #4]
   2d88c:	sub	r0, r0, r2
   2d890:	lsl	r2, r0, #2
   2d894:	sub	r0, r4, #4
   2d898:	mov	r1, r4
   2d89c:	bl	11314 <memmove@plt>
   2d8a0:	ldr	r0, [r5, #128]	; 0x80
   2d8a4:	ldr	r1, [r0, #4]
   2d8a8:	sub	r1, r1, #1
   2d8ac:	str	r1, [r0, #4]
   2d8b0:	pop	{r4, r5, fp, pc}

0002d8b4 <myhtml_tree_open_elements_pop_until@@Base>:
   2d8b4:	push	{fp, lr}
   2d8b8:	mov	fp, sp
   2d8bc:	ldr	lr, [r0, #128]	; 0x80
   2d8c0:	ldr	ip, [lr]
   2d8c4:	ldr	r0, [lr, #4]
   2d8c8:	cmp	r0, #0
   2d8cc:	beq	2d91c <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2d8d0:	ldr	r0, [lr, #4]
   2d8d4:	sub	r0, r0, #1
   2d8d8:	str	r0, [lr, #4]
   2d8dc:	ldr	r0, [lr, #4]
   2d8e0:	ldr	r0, [ip, r0, lsl #2]
   2d8e4:	ldr	r0, [r0, #4]
   2d8e8:	cmp	r0, r1
   2d8ec:	bne	2d8c4 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2d8f0:	cmp	r2, #0
   2d8f4:	ldrne	r0, [lr, #4]
   2d8f8:	ldrne	r0, [ip, r0, lsl #2]
   2d8fc:	ldrne	r0, [r0, #8]
   2d900:	cmpne	r0, r2
   2d904:	bne	2d8c4 <myhtml_tree_open_elements_pop_until@@Base+0x10>
   2d908:	cmp	r3, #0
   2d90c:	popeq	{fp, pc}
   2d910:	ldr	r0, [lr, #4]
   2d914:	add	r0, r0, #1
   2d918:	str	r0, [lr, #4]
   2d91c:	pop	{fp, pc}

0002d920 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2d920:	ldr	r0, [r0, #128]	; 0x80
   2d924:	ldr	ip, [r0]
   2d928:	ldr	r3, [r0, #4]
   2d92c:	cmp	r3, #0
   2d930:	beq	2d964 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x44>
   2d934:	ldr	r3, [r0, #4]
   2d938:	sub	r3, r3, #1
   2d93c:	str	r3, [r0, #4]
   2d940:	ldr	r3, [r0, #4]
   2d944:	ldr	r3, [ip, r3, lsl #2]
   2d948:	cmp	r3, r1
   2d94c:	bne	2d928 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x8>
   2d950:	cmp	r2, #0
   2d954:	bxeq	lr
   2d958:	ldr	r1, [r0, #4]
   2d95c:	add	r1, r1, #1
   2d960:	str	r1, [r0, #4]
   2d964:	bx	lr

0002d968 <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2d968:	ldr	r0, [r0, #128]	; 0x80
   2d96c:	ldr	r3, [r0, #4]
   2d970:	cmp	r3, #0
   2d974:	beq	2d9a4 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x3c>
   2d978:	ldr	r3, [r0, #4]
   2d97c:	sub	r3, r3, #1
   2d980:	str	r3, [r0, #4]
   2d984:	ldr	r3, [r0, #4]
   2d988:	cmp	r3, r1
   2d98c:	bne	2d96c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x4>
   2d990:	cmp	r2, #0
   2d994:	bxeq	lr
   2d998:	ldr	r1, [r0, #4]
   2d99c:	add	r1, r1, #1
   2d9a0:	str	r1, [r0, #4]
   2d9a4:	bx	lr

0002d9a8 <myhtml_tree_open_elements_find_reverse@@Base>:
   2d9a8:	ldr	r0, [r0, #128]	; 0x80
   2d9ac:	ldr	r3, [r0, #4]
   2d9b0:	ldr	r0, [r0]
   2d9b4:	sub	ip, r0, #4
   2d9b8:	cmp	r3, #0
   2d9bc:	moveq	r0, #0
   2d9c0:	bxeq	lr
   2d9c4:	ldr	r0, [ip, r3, lsl #2]
   2d9c8:	sub	r3, r3, #1
   2d9cc:	cmp	r0, r1
   2d9d0:	bne	2d9b8 <myhtml_tree_open_elements_find_reverse@@Base+0x10>
   2d9d4:	mov	r0, #1
   2d9d8:	cmp	r2, #0
   2d9dc:	strne	r3, [r2]
   2d9e0:	bx	lr

0002d9e4 <myhtml_tree_open_elements_find@@Base>:
   2d9e4:	push	{fp, lr}
   2d9e8:	mov	fp, sp
   2d9ec:	ldr	lr, [r0, #128]	; 0x80
   2d9f0:	ldr	ip, [lr]
   2d9f4:	ldr	r3, [lr, #4]
   2d9f8:	cmp	r3, #0
   2d9fc:	beq	2da20 <myhtml_tree_open_elements_find@@Base+0x3c>
   2da00:	mov	r3, #0
   2da04:	ldr	r0, [ip, r3, lsl #2]
   2da08:	cmp	r0, r1
   2da0c:	beq	2da28 <myhtml_tree_open_elements_find@@Base+0x44>
   2da10:	add	r3, r3, #1
   2da14:	ldr	r0, [lr, #4]
   2da18:	cmp	r3, r0
   2da1c:	bcc	2da04 <myhtml_tree_open_elements_find@@Base+0x20>
   2da20:	mov	r0, #0
   2da24:	pop	{fp, pc}
   2da28:	mov	r0, #1
   2da2c:	cmp	r2, #0
   2da30:	strne	r3, [r2]
   2da34:	popne	{fp, pc}
   2da38:	pop	{fp, pc}

0002da3c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2da3c:	push	{r4, sl, fp, lr}
   2da40:	add	fp, sp, #8
   2da44:	ldr	ip, [r0, #128]	; 0x80
   2da48:	ldr	r0, [ip, #4]
   2da4c:	cmp	r0, #0
   2da50:	beq	2daa0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x64>
   2da54:	ldr	lr, [ip]
   2da58:	rsb	ip, r0, #1
   2da5c:	b	2da6c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x30>
   2da60:	add	ip, ip, #1
   2da64:	cmp	ip, #1
   2da68:	beq	2daa0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x64>
   2da6c:	ldr	r0, [lr, -ip, lsl #2]
   2da70:	ldr	r4, [r0, #4]
   2da74:	cmp	r4, r1
   2da78:	bne	2da60 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x24>
   2da7c:	cmp	r2, #0
   2da80:	ldrne	r4, [r0, #8]
   2da84:	cmpne	r4, r2
   2da88:	bne	2da60 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x24>
   2da8c:	cmp	r3, #0
   2da90:	beq	2daa4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x68>
   2da94:	rsb	r1, ip, #0
   2da98:	str	r1, [r3]
   2da9c:	pop	{r4, sl, fp, pc}
   2daa0:	mov	r0, #0
   2daa4:	pop	{r4, sl, fp, pc}

0002daa8 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2daa8:	push	{r4, r5, fp, lr}
   2daac:	add	fp, sp, #8
   2dab0:	ldr	ip, [r0, #128]	; 0x80
   2dab4:	ldr	lr, [ip]
   2dab8:	ldr	r0, [ip, #4]
   2dabc:	cmp	r0, #0
   2dac0:	beq	2db0c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>
   2dac4:	mov	r4, #0
   2dac8:	b	2dadc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x34>
   2dacc:	add	r4, r4, #1
   2dad0:	ldr	r0, [ip, #4]
   2dad4:	cmp	r4, r0
   2dad8:	bcs	2db0c <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x64>
   2dadc:	ldr	r0, [lr, r4, lsl #2]
   2dae0:	ldr	r5, [r0, #4]
   2dae4:	cmp	r5, r1
   2dae8:	bne	2dacc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   2daec:	cmp	r2, #0
   2daf0:	ldrne	r5, [r0, #8]
   2daf4:	cmpne	r5, r2
   2daf8:	bne	2dacc <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   2dafc:	cmp	r3, #0
   2db00:	strne	r4, [r3]
   2db04:	popne	{r4, r5, fp, pc}
   2db08:	pop	{r4, r5, fp, pc}
   2db0c:	mov	r0, #0
   2db10:	pop	{r4, r5, fp, pc}

0002db14 <myhtml_tree_generate_implied_end_tags@@Base>:
   2db14:	push	{r4, r5, r6, sl, fp, lr}
   2db18:	add	fp, sp, #16
   2db1c:	mov	r6, r0
   2db20:	ldr	r0, [r0, #128]	; 0x80
   2db24:	ldr	r0, [r0, #4]
   2db28:	cmp	r0, #0
   2db2c:	beq	2dcc4 <myhtml_tree_generate_implied_end_tags@@Base+0x1b0>
   2db30:	ldr	r0, [r6, #128]	; 0x80
   2db34:	ldr	r0, [r0, #4]
   2db38:	cmp	r0, #0
   2db3c:	beq	2dcc4 <myhtml_tree_generate_implied_end_tags@@Base+0x1b0>
   2db40:	mov	r4, r2
   2db44:	mov	r5, r1
   2db48:	b	2db64 <myhtml_tree_generate_implied_end_tags@@Base+0x50>
   2db4c:	mov	r0, r6
   2db50:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2db54:	ldr	r0, [r6, #128]	; 0x80
   2db58:	ldr	r0, [r0, #4]
   2db5c:	cmp	r0, #0
   2db60:	beq	2dcc4 <myhtml_tree_generate_implied_end_tags@@Base+0x1b0>
   2db64:	mov	r0, r6
   2db68:	bl	11a4c <myhtml_tree_current_node@plt>
   2db6c:	ldr	r1, [r0, #4]
   2db70:	sub	r2, r1, #36	; 0x24
   2db74:	cmp	r2, #72	; 0x48
   2db78:	bhi	2dcc4 <myhtml_tree_generate_implied_end_tags@@Base+0x1b0>
   2db7c:	add	r3, pc, #4
   2db80:	ldr	r2, [r3, r2, lsl #2]
   2db84:	add	pc, r3, r2
   2db88:	andeq	r0, r0, r4, lsr #2
   2db8c:	andeq	r0, r0, ip, lsr r1
   2db90:	andeq	r0, r0, ip, lsr r1
   2db94:	andeq	r0, r0, ip, lsr r1
   2db98:	andeq	r0, r0, ip, lsr r1
   2db9c:	andeq	r0, r0, ip, lsr r1
   2dba0:	andeq	r0, r0, ip, lsr r1
   2dba4:	andeq	r0, r0, ip, lsr r1
   2dba8:	andeq	r0, r0, r4, lsr #2
   2dbac:	andeq	r0, r0, ip, lsr r1
   2dbb0:	andeq	r0, r0, ip, lsr r1
   2dbb4:	andeq	r0, r0, ip, lsr r1
   2dbb8:	andeq	r0, r0, ip, lsr r1
   2dbbc:	andeq	r0, r0, ip, lsr r1
   2dbc0:	andeq	r0, r0, ip, lsr r1
   2dbc4:	andeq	r0, r0, ip, lsr r1
   2dbc8:	andeq	r0, r0, ip, lsr r1
   2dbcc:	andeq	r0, r0, ip, lsr r1
   2dbd0:	andeq	r0, r0, ip, lsr r1
   2dbd4:	andeq	r0, r0, ip, lsr r1
   2dbd8:	andeq	r0, r0, ip, lsr r1
   2dbdc:	andeq	r0, r0, ip, lsr r1
   2dbe0:	andeq	r0, r0, ip, lsr r1
   2dbe4:	andeq	r0, r0, ip, lsr r1
   2dbe8:	andeq	r0, r0, ip, lsr r1
   2dbec:	andeq	r0, r0, ip, lsr r1
   2dbf0:	andeq	r0, r0, ip, lsr r1
   2dbf4:	andeq	r0, r0, ip, lsr r1
   2dbf8:	andeq	r0, r0, ip, lsr r1
   2dbfc:	andeq	r0, r0, ip, lsr r1
   2dc00:	andeq	r0, r0, ip, lsr r1
   2dc04:	andeq	r0, r0, ip, lsr r1
   2dc08:	andeq	r0, r0, ip, lsr r1
   2dc0c:	andeq	r0, r0, ip, lsr r1
   2dc10:	andeq	r0, r0, ip, lsr r1
   2dc14:	andeq	r0, r0, ip, lsr r1
   2dc18:	andeq	r0, r0, ip, lsr r1
   2dc1c:	andeq	r0, r0, ip, lsr r1
   2dc20:	andeq	r0, r0, ip, lsr r1
   2dc24:	andeq	r0, r0, ip, lsr r1
   2dc28:	andeq	r0, r0, ip, lsr r1
   2dc2c:	andeq	r0, r0, r4, lsr #2
   2dc30:	andeq	r0, r0, ip, lsr r1
   2dc34:	andeq	r0, r0, ip, lsr r1
   2dc38:	andeq	r0, r0, ip, lsr r1
   2dc3c:	andeq	r0, r0, ip, lsr r1
   2dc40:	andeq	r0, r0, ip, lsr r1
   2dc44:	andeq	r0, r0, ip, lsr r1
   2dc48:	andeq	r0, r0, ip, lsr r1
   2dc4c:	andeq	r0, r0, r4, lsr #2
   2dc50:	andeq	r0, r0, ip, lsr r1
   2dc54:	andeq	r0, r0, ip, lsr r1
   2dc58:	andeq	r0, r0, ip, lsr r1
   2dc5c:	andeq	r0, r0, ip, lsr r1
   2dc60:	andeq	r0, r0, ip, lsr r1
   2dc64:	andeq	r0, r0, ip, lsr r1
   2dc68:	andeq	r0, r0, ip, lsr r1
   2dc6c:	andeq	r0, r0, ip, lsr r1
   2dc70:	andeq	r0, r0, ip, lsr r1
   2dc74:	andeq	r0, r0, ip, lsr r1
   2dc78:	andeq	r0, r0, r4, lsr #2
   2dc7c:	andeq	r0, r0, r4, lsr #2
   2dc80:	andeq	r0, r0, ip, lsr r1
   2dc84:	andeq	r0, r0, r4, lsr #2
   2dc88:	andeq	r0, r0, ip, lsr r1
   2dc8c:	andeq	r0, r0, ip, lsr r1
   2dc90:	andeq	r0, r0, ip, lsr r1
   2dc94:	andeq	r0, r0, ip, lsr r1
   2dc98:	andeq	r0, r0, ip, lsr r1
   2dc9c:	andeq	r0, r0, r4, lsr #2
   2dca0:	andeq	r0, r0, r4, lsr #2
   2dca4:	andeq	r0, r0, r4, lsr #2
   2dca8:	andeq	r0, r0, r4, lsr #2
   2dcac:	cmp	r1, r5
   2dcb0:	bne	2db4c <myhtml_tree_generate_implied_end_tags@@Base+0x38>
   2dcb4:	cmp	r4, #0
   2dcb8:	ldrne	r0, [r0, #8]
   2dcbc:	cmpne	r0, r4
   2dcc0:	bne	2db4c <myhtml_tree_generate_implied_end_tags@@Base+0x38>
   2dcc4:	pop	{r4, r5, r6, sl, fp, pc}

0002dcc8 <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2dcc8:	push	{r4, r5, r6, sl, fp, lr}
   2dccc:	add	fp, sp, #16
   2dcd0:	mov	r6, r0
   2dcd4:	ldr	r0, [r0, #128]	; 0x80
   2dcd8:	ldr	r0, [r0, #4]
   2dcdc:	cmp	r0, #0
   2dce0:	beq	2df08 <myhtml_tree_generate_all_implied_end_tags@@Base+0x240>
   2dce4:	ldr	r0, [r6, #128]	; 0x80
   2dce8:	ldr	r0, [r0, #4]
   2dcec:	cmp	r0, #0
   2dcf0:	beq	2df08 <myhtml_tree_generate_all_implied_end_tags@@Base+0x240>
   2dcf4:	mov	r4, r2
   2dcf8:	mov	r5, r1
   2dcfc:	b	2dd18 <myhtml_tree_generate_all_implied_end_tags@@Base+0x50>
   2dd00:	mov	r0, r6
   2dd04:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2dd08:	ldr	r0, [r6, #128]	; 0x80
   2dd0c:	ldr	r0, [r0, #4]
   2dd10:	cmp	r0, #0
   2dd14:	beq	2df08 <myhtml_tree_generate_all_implied_end_tags@@Base+0x240>
   2dd18:	mov	r0, r6
   2dd1c:	bl	11a4c <myhtml_tree_current_node@plt>
   2dd20:	ldr	r1, [r0, #4]
   2dd24:	sub	r2, r1, #27
   2dd28:	cmp	r2, #108	; 0x6c
   2dd2c:	bhi	2df08 <myhtml_tree_generate_all_implied_end_tags@@Base+0x240>
   2dd30:	add	r3, pc, #4
   2dd34:	ldr	r2, [r3, r2, lsl #2]
   2dd38:	add	pc, r3, r2
   2dd3c:			; <UNDEFINED> instruction: 0x000001b4
   2dd40:	andeq	r0, r0, ip, asr #3
   2dd44:	andeq	r0, r0, ip, asr #3
   2dd48:	andeq	r0, r0, ip, asr #3
   2dd4c:	andeq	r0, r0, ip, asr #3
   2dd50:			; <UNDEFINED> instruction: 0x000001b4
   2dd54:	andeq	r0, r0, ip, asr #3
   2dd58:	andeq	r0, r0, ip, asr #3
   2dd5c:	andeq	r0, r0, ip, asr #3
   2dd60:			; <UNDEFINED> instruction: 0x000001b4
   2dd64:	andeq	r0, r0, ip, asr #3
   2dd68:	andeq	r0, r0, ip, asr #3
   2dd6c:	andeq	r0, r0, ip, asr #3
   2dd70:	andeq	r0, r0, ip, asr #3
   2dd74:	andeq	r0, r0, ip, asr #3
   2dd78:	andeq	r0, r0, ip, asr #3
   2dd7c:	andeq	r0, r0, ip, asr #3
   2dd80:			; <UNDEFINED> instruction: 0x000001b4
   2dd84:	andeq	r0, r0, ip, asr #3
   2dd88:	andeq	r0, r0, ip, asr #3
   2dd8c:	andeq	r0, r0, ip, asr #3
   2dd90:	andeq	r0, r0, ip, asr #3
   2dd94:	andeq	r0, r0, ip, asr #3
   2dd98:	andeq	r0, r0, ip, asr #3
   2dd9c:	andeq	r0, r0, ip, asr #3
   2dda0:	andeq	r0, r0, ip, asr #3
   2dda4:	andeq	r0, r0, ip, asr #3
   2dda8:	andeq	r0, r0, ip, asr #3
   2ddac:	andeq	r0, r0, ip, asr #3
   2ddb0:	andeq	r0, r0, ip, asr #3
   2ddb4:	andeq	r0, r0, ip, asr #3
   2ddb8:	andeq	r0, r0, ip, asr #3
   2ddbc:	andeq	r0, r0, ip, asr #3
   2ddc0:	andeq	r0, r0, ip, asr #3
   2ddc4:	andeq	r0, r0, ip, asr #3
   2ddc8:	andeq	r0, r0, ip, asr #3
   2ddcc:	andeq	r0, r0, ip, asr #3
   2ddd0:	andeq	r0, r0, ip, asr #3
   2ddd4:	andeq	r0, r0, ip, asr #3
   2ddd8:	andeq	r0, r0, ip, asr #3
   2dddc:	andeq	r0, r0, ip, asr #3
   2dde0:	andeq	r0, r0, ip, asr #3
   2dde4:	andeq	r0, r0, ip, asr #3
   2dde8:	andeq	r0, r0, ip, asr #3
   2ddec:	andeq	r0, r0, ip, asr #3
   2ddf0:	andeq	r0, r0, ip, asr #3
   2ddf4:	andeq	r0, r0, ip, asr #3
   2ddf8:	andeq	r0, r0, ip, asr #3
   2ddfc:	andeq	r0, r0, ip, asr #3
   2de00:	andeq	r0, r0, ip, asr #3
   2de04:			; <UNDEFINED> instruction: 0x000001b4
   2de08:	andeq	r0, r0, ip, asr #3
   2de0c:	andeq	r0, r0, ip, asr #3
   2de10:	andeq	r0, r0, ip, asr #3
   2de14:	andeq	r0, r0, ip, asr #3
   2de18:	andeq	r0, r0, ip, asr #3
   2de1c:	andeq	r0, r0, ip, asr #3
   2de20:	andeq	r0, r0, ip, asr #3
   2de24:	andeq	r0, r0, ip, asr #3
   2de28:	andeq	r0, r0, ip, asr #3
   2de2c:	andeq	r0, r0, ip, asr #3
   2de30:	andeq	r0, r0, ip, asr #3
   2de34:	andeq	r0, r0, ip, asr #3
   2de38:	andeq	r0, r0, ip, asr #3
   2de3c:	andeq	r0, r0, ip, asr #3
   2de40:	andeq	r0, r0, ip, asr #3
   2de44:	andeq	r0, r0, ip, asr #3
   2de48:	andeq	r0, r0, ip, asr #3
   2de4c:	andeq	r0, r0, ip, asr #3
   2de50:			; <UNDEFINED> instruction: 0x000001b4
   2de54:			; <UNDEFINED> instruction: 0x000001b4
   2de58:	andeq	r0, r0, ip, asr #3
   2de5c:			; <UNDEFINED> instruction: 0x000001b4
   2de60:	andeq	r0, r0, ip, asr #3
   2de64:	andeq	r0, r0, ip, asr #3
   2de68:	andeq	r0, r0, ip, asr #3
   2de6c:	andeq	r0, r0, ip, asr #3
   2de70:	andeq	r0, r0, ip, asr #3
   2de74:			; <UNDEFINED> instruction: 0x000001b4
   2de78:			; <UNDEFINED> instruction: 0x000001b4
   2de7c:			; <UNDEFINED> instruction: 0x000001b4
   2de80:			; <UNDEFINED> instruction: 0x000001b4
   2de84:	andeq	r0, r0, ip, asr #3
   2de88:	andeq	r0, r0, ip, asr #3
   2de8c:	andeq	r0, r0, ip, asr #3
   2de90:	andeq	r0, r0, ip, asr #3
   2de94:	andeq	r0, r0, ip, asr #3
   2de98:	andeq	r0, r0, ip, asr #3
   2de9c:	andeq	r0, r0, ip, asr #3
   2dea0:	andeq	r0, r0, ip, asr #3
   2dea4:	andeq	r0, r0, ip, asr #3
   2dea8:	andeq	r0, r0, ip, asr #3
   2deac:	andeq	r0, r0, ip, asr #3
   2deb0:	andeq	r0, r0, ip, asr #3
   2deb4:	andeq	r0, r0, ip, asr #3
   2deb8:	andeq	r0, r0, ip, asr #3
   2debc:	andeq	r0, r0, ip, asr #3
   2dec0:	andeq	r0, r0, ip, asr #3
   2dec4:	andeq	r0, r0, ip, asr #3
   2dec8:			; <UNDEFINED> instruction: 0x000001b4
   2decc:			; <UNDEFINED> instruction: 0x000001b4
   2ded0:	andeq	r0, r0, ip, asr #3
   2ded4:	andeq	r0, r0, ip, asr #3
   2ded8:			; <UNDEFINED> instruction: 0x000001b4
   2dedc:			; <UNDEFINED> instruction: 0x000001b4
   2dee0:			; <UNDEFINED> instruction: 0x000001b4
   2dee4:	andeq	r0, r0, ip, asr #3
   2dee8:	andeq	r0, r0, ip, asr #3
   2deec:			; <UNDEFINED> instruction: 0x000001b4
   2def0:	cmp	r1, r5
   2def4:	bne	2dd00 <myhtml_tree_generate_all_implied_end_tags@@Base+0x38>
   2def8:	cmp	r4, #0
   2defc:	ldrne	r0, [r0, #8]
   2df00:	cmpne	r0, r4
   2df04:	bne	2dd00 <myhtml_tree_generate_all_implied_end_tags@@Base+0x38>
   2df08:	pop	{r4, r5, r6, sl, fp, pc}

0002df0c <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2df0c:	push	{r4, sl, fp, lr}
   2df10:	add	fp, sp, #8
   2df14:	ldr	r1, [r0, #128]	; 0x80
   2df18:	ldr	r2, [r1, #4]
   2df1c:	cmp	r2, #0
   2df20:	popeq	{r4, sl, fp, pc}
   2df24:	ldr	ip, [r1]
   2df28:	ldr	r1, [r1, #4]
   2df2c:	cmp	r1, #0
   2df30:	beq	2e154 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x248>
   2df34:	sub	lr, ip, #4
   2df38:	ldr	r3, [lr, r1, lsl #2]
   2df3c:	mov	r2, #0
   2df40:	cmp	r1, #1
   2df44:	bne	2df58 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>
   2df48:	ldr	r2, [r0, #88]	; 0x58
   2df4c:	cmp	r2, #0
   2df50:	movne	r3, r2
   2df54:	mov	r2, #1
   2df58:	ldr	r4, [r3, #8]
   2df5c:	cmp	r4, #1
   2df60:	bne	2e144 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   2df64:	ldr	r3, [r3, #4]
   2df68:	sub	r3, r3, #23
   2df6c:	cmp	r3, #112	; 0x70
   2df70:	bhi	2e144 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x238>
   2df74:	add	r4, pc, #4
   2df78:	ldr	r3, [r4, r3, lsl #2]
   2df7c:	add	pc, r4, r3
   2df80:	andeq	r0, r0, ip, lsr #4
   2df84:	andeq	r0, r0, r4, asr #3
   2df88:	andeq	r0, r0, r4, asr #3
   2df8c:	andeq	r0, r0, r4, asr #3
   2df90:	andeq	r0, r0, r0, lsl #4
   2df94:	andeq	r0, r0, r4, asr #3
   2df98:	andeq	r0, r0, r4, asr #3
   2df9c:	andeq	r0, r0, r4, asr #3
   2dfa0:	andeq	r0, r0, r4, asr #3
   2dfa4:	andeq	r0, r0, ip, lsl #4
   2dfa8:	andeq	r0, r0, r4, asr #3
   2dfac:	andeq	r0, r0, r4, asr #3
   2dfb0:	andeq	r0, r0, r4, asr #3
   2dfb4:	andeq	r0, r0, r4, asr #3
   2dfb8:	andeq	r0, r0, r4, asr #3
   2dfbc:	andeq	r0, r0, r4, asr #3
   2dfc0:	andeq	r0, r0, r4, asr #3
   2dfc4:	andeq	r0, r0, r4, asr #3
   2dfc8:	andeq	r0, r0, r4, asr #3
   2dfcc:	andeq	r0, r0, r4, asr #3
   2dfd0:	andeq	r0, r0, r4, asr #3
   2dfd4:	andeq	r0, r0, r4, asr #3
   2dfd8:	andeq	r0, r0, r4, asr #3
   2dfdc:	andeq	r0, r0, r4, asr #3
   2dfe0:	andeq	r0, r0, r4, asr #3
   2dfe4:	andeq	r0, r0, r4, asr #3
   2dfe8:	andeq	r0, r0, r4, asr #3
   2dfec:	andeq	r0, r0, r4, asr #3
   2dff0:	andeq	r0, r0, r4, asr #3
   2dff4:	andeq	r0, r0, r4, asr #3
   2dff8:	andeq	r0, r0, r4, asr #3
   2dffc:	andeq	r0, r0, r8, lsl r2
   2e000:	andeq	r0, r0, r4, asr #3
   2e004:	andeq	r0, r0, r4, asr #3
   2e008:	andeq	r0, r0, r4, asr #3
   2e00c:	andeq	r0, r0, r4, asr #3
   2e010:	andeq	r0, r0, r4, asr #3
   2e014:	andeq	r0, r0, r4, asr #3
   2e018:	andeq	r0, r0, r4, lsr #4
   2e01c:	andeq	r0, r0, r4, asr #3
   2e020:	andeq	r0, r0, r4, asr #3
   2e024:	andeq	r0, r0, r4, asr #3
   2e028:	andeq	r0, r0, r8, lsr r2
   2e02c:	andeq	r0, r0, r4, asr #3
   2e030:	andeq	r0, r0, r4, asr #3
   2e034:	andeq	r0, r0, r4, asr #3
   2e038:	andeq	r0, r0, r4, asr #3
   2e03c:	andeq	r0, r0, r4, asr #3
   2e040:	andeq	r0, r0, r4, asr #3
   2e044:	andeq	r0, r0, r4, asr #3
   2e048:	andeq	r0, r0, r4, asr #3
   2e04c:	andeq	r0, r0, r4, asr #3
   2e050:	andeq	r0, r0, r4, asr #3
   2e054:	andeq	r0, r0, r4, asr #3
   2e058:	andeq	r0, r0, r4, asr #3
   2e05c:	andeq	r0, r0, r4, asr #3
   2e060:	andeq	r0, r0, r4, asr #3
   2e064:	andeq	r0, r0, r4, asr #3
   2e068:	andeq	r0, r0, r4, asr #3
   2e06c:	andeq	r0, r0, r4, asr #3
   2e070:	andeq	r0, r0, r4, asr #3
   2e074:	andeq	r0, r0, r4, asr #3
   2e078:	andeq	r0, r0, r4, asr #3
   2e07c:	andeq	r0, r0, r4, asr #3
   2e080:	andeq	r0, r0, r4, asr #3
   2e084:	andeq	r0, r0, r4, asr #3
   2e088:	andeq	r0, r0, r4, asr #3
   2e08c:	andeq	r0, r0, r4, asr #3
   2e090:	andeq	r0, r0, r4, asr #3
   2e094:	andeq	r0, r0, r4, asr #3
   2e098:	andeq	r0, r0, r4, asr #3
   2e09c:	andeq	r0, r0, r4, asr #3
   2e0a0:	andeq	r0, r0, r4, asr #3
   2e0a4:	andeq	r0, r0, r4, asr #3
   2e0a8:	andeq	r0, r0, r4, asr #3
   2e0ac:	andeq	r0, r0, r4, asr #3
   2e0b0:	andeq	r0, r0, r4, asr #3
   2e0b4:	andeq	r0, r0, r4, asr #3
   2e0b8:	andeq	r0, r0, r4, asr #3
   2e0bc:	andeq	r0, r0, r4, asr #3
   2e0c0:	andeq	r0, r0, r4, asr #3
   2e0c4:	andeq	r0, r0, r4, asr #3
   2e0c8:	andeq	r0, r0, r4, asr #3
   2e0cc:	andeq	r0, r0, r4, asr #3
   2e0d0:	andeq	r0, r0, r4, asr #3
   2e0d4:	andeq	r0, r0, r4, asr #3
   2e0d8:	andeq	r0, r0, r4, asr #3
   2e0dc:	andeq	r0, r0, r4, asr #3
   2e0e0:	andeq	r0, r0, r4, asr #3
   2e0e4:	andeq	r0, r0, r4, asr #3
   2e0e8:	andeq	r0, r0, r4, asr #3
   2e0ec:	andeq	r0, r0, r0, asr r2
   2e0f0:	andeq	r0, r0, r4, asr #3
   2e0f4:	andeq	r0, r0, r4, asr #3
   2e0f8:	andeq	r0, r0, r4, asr #3
   2e0fc:	andeq	r0, r0, r4, asr #3
   2e100:	andeq	r0, r0, r4, asr #3
   2e104:	andeq	r0, r0, r4, asr #3
   2e108:	andeq	r0, r0, r4, asr #3
   2e10c:	andeq	r0, r0, r4, asr #3
   2e110:	andeq	r0, r0, r4, asr #3
   2e114:	andeq	r0, r0, r4, asr #3
   2e118:	andeq	r0, r0, ip, lsl #5
   2e11c:	andeq	r0, r0, r0, ror #3
   2e120:	andeq	r0, r0, ip, ror #3
   2e124:	muleq	r0, r8, r2
   2e128:	andeq	r0, r0, r4, asr #3
   2e12c:	andeq	r0, r0, r0, ror #3
   2e130:	andeq	r0, r0, ip, ror #3
   2e134:	andeq	r0, r0, r0, ror #3
   2e138:	andeq	r0, r0, r4, asr #3
   2e13c:	andeq	r0, r0, r4, asr #3
   2e140:			; <UNDEFINED> instruction: 0x000002b4
   2e144:	cmp	r2, #0
   2e148:	bne	2e1ac <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   2e14c:	subs	r1, r1, #1
   2e150:	bne	2df38 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c>
   2e154:	mov	r1, #0
   2e158:	str	r1, [r0, #168]	; 0xa8
   2e15c:	pop	{r4, sl, fp, pc}
   2e160:	mov	r1, #12
   2e164:	str	r1, [r0, #168]	; 0xa8
   2e168:	pop	{r4, sl, fp, pc}
   2e16c:	cmp	r2, #0
   2e170:	bne	2e1ac <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a0>
   2e174:	mov	r1, #14
   2e178:	str	r1, [r0, #168]	; 0xa8
   2e17c:	pop	{r4, sl, fp, pc}
   2e180:	mov	r1, #10
   2e184:	str	r1, [r0, #168]	; 0xa8
   2e188:	pop	{r4, sl, fp, pc}
   2e18c:	mov	r1, #11
   2e190:	str	r1, [r0, #168]	; 0xa8
   2e194:	pop	{r4, sl, fp, pc}
   2e198:	mov	r1, #19
   2e19c:	str	r1, [r0, #168]	; 0xa8
   2e1a0:	pop	{r4, sl, fp, pc}
   2e1a4:	cmp	r2, #0
   2e1a8:	beq	2e240 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x334>
   2e1ac:	mov	r1, #6
   2e1b0:	str	r1, [r0, #168]	; 0xa8
   2e1b4:	pop	{r4, sl, fp, pc}
   2e1b8:	ldr	r1, [r0, #92]	; 0x5c
   2e1bc:	cmp	r1, #0
   2e1c0:	moveq	r1, #2
   2e1c4:	movne	r1, #5
   2e1c8:	str	r1, [r0, #168]	; 0xa8
   2e1cc:	pop	{r4, sl, fp, pc}
   2e1d0:	cmp	r2, #0
   2e1d4:	bne	2e200 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2e1d8:	sub	r2, ip, #8
   2e1dc:	cmp	r1, #1
   2e1e0:	beq	2e200 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2f4>
   2e1e4:	ldr	r3, [r2, r1, lsl #2]
   2e1e8:	ldr	r3, [r3, #4]
   2e1ec:	cmp	r3, #125	; 0x7d
   2e1f0:	beq	2e24c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x340>
   2e1f4:	sub	r1, r1, #1
   2e1f8:	cmp	r3, #128	; 0x80
   2e1fc:	bne	2e1dc <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d0>
   2e200:	mov	r1, #15
   2e204:	str	r1, [r0, #168]	; 0xa8
   2e208:	pop	{r4, sl, fp, pc}
   2e20c:	mov	r1, #8
   2e210:	str	r1, [r0, #168]	; 0xa8
   2e214:	pop	{r4, sl, fp, pc}
   2e218:	ldr	r1, [r0, #140]	; 0x8c
   2e21c:	ldr	r2, [r1]
   2e220:	ldr	r1, [r1, #4]
   2e224:	add	r1, r2, r1, lsl #2
   2e228:	ldr	r1, [r1, #-4]
   2e22c:	str	r1, [r0, #168]	; 0xa8
   2e230:	pop	{r4, sl, fp, pc}
   2e234:	mov	r1, #13
   2e238:	str	r1, [r0, #168]	; 0xa8
   2e23c:	pop	{r4, sl, fp, pc}
   2e240:	mov	r1, #3
   2e244:	str	r1, [r0, #168]	; 0xa8
   2e248:	pop	{r4, sl, fp, pc}
   2e24c:	mov	r1, #16
   2e250:	str	r1, [r0, #168]	; 0xa8
   2e254:	pop	{r4, sl, fp, pc}

0002e258 <myhtml_tree_active_formatting_is_marker@@Base>:
   2e258:	ldr	r0, [r0]
   2e25c:	ldr	r2, [r0, #36]	; 0x24
   2e260:	mov	r0, #1
   2e264:	cmp	r2, r1
   2e268:	bxeq	lr
   2e26c:	ldr	r1, [r1, #4]
   2e270:	cmp	r1, #82	; 0x52
   2e274:	ble	2e294 <myhtml_tree_active_formatting_is_marker@@Base+0x3c>
   2e278:	cmp	r1, #126	; 0x7e
   2e27c:	bgt	2e2b4 <myhtml_tree_active_formatting_is_marker@@Base+0x5c>
   2e280:	cmp	r1, #83	; 0x53
   2e284:	beq	2e2b0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2e288:	cmp	r1, #94	; 0x5e
   2e28c:	movne	r0, #0
   2e290:	bx	lr
   2e294:	cmp	r1, #27
   2e298:	bhi	2e2c0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2e29c:	mov	r2, #1
   2e2a0:	movw	r3, #512	; 0x200
   2e2a4:	movt	r3, #2560	; 0xa00
   2e2a8:	tst	r3, r2, lsl r1
   2e2ac:	beq	2e2c0 <myhtml_tree_active_formatting_is_marker@@Base+0x68>
   2e2b0:	bx	lr
   2e2b4:	cmp	r1, #127	; 0x7f
   2e2b8:	cmpne	r1, #131	; 0x83
   2e2bc:	beq	2e2b0 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2e2c0:	mov	r0, #0
   2e2c4:	bx	lr

0002e2c8 <myhtml_tree_active_formatting_append@@Base>:
   2e2c8:	ldr	r0, [r0, #124]	; 0x7c
   2e2cc:	b	2d6e0 <myhtml_tree_list_append@@Base>

0002e2d0 <myhtml_tree_active_formatting_pop@@Base>:
   2e2d0:	ldr	r0, [r0, #124]	; 0x7c
   2e2d4:	ldr	r1, [r0, #4]
   2e2d8:	cmp	r1, #0
   2e2dc:	ldrne	r1, [r0, #4]
   2e2e0:	subne	r1, r1, #1
   2e2e4:	strne	r1, [r0, #4]
   2e2e8:	bx	lr

0002e2ec <myhtml_tree_active_formatting_remove@@Base>:
   2e2ec:	push	{r4, r5, fp, lr}
   2e2f0:	add	fp, sp, #8
   2e2f4:	mov	r5, r0
   2e2f8:	ldr	r0, [r0, #124]	; 0x7c
   2e2fc:	ldr	r2, [r0, #4]
   2e300:	ldr	r3, [r0]
   2e304:	add	r3, r3, r2, lsl #2
   2e308:	add	r3, r3, #4
   2e30c:	cmp	r2, #0
   2e310:	beq	2e354 <myhtml_tree_active_formatting_remove@@Base+0x68>
   2e314:	sub	r4, r3, #4
   2e318:	sub	r2, r2, #1
   2e31c:	ldr	r3, [r3, #-8]
   2e320:	cmp	r3, r1
   2e324:	mov	r3, r4
   2e328:	bne	2e30c <myhtml_tree_active_formatting_remove@@Base+0x20>
   2e32c:	ldr	r0, [r0, #4]
   2e330:	sub	r0, r0, r2
   2e334:	lsl	r2, r0, #2
   2e338:	sub	r0, r4, #4
   2e33c:	mov	r1, r4
   2e340:	bl	11314 <memmove@plt>
   2e344:	ldr	r0, [r5, #124]	; 0x7c
   2e348:	ldr	r1, [r0, #4]
   2e34c:	sub	r1, r1, #1
   2e350:	str	r1, [r0, #4]
   2e354:	pop	{r4, r5, fp, pc}

0002e358 <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2e358:	push	{r4, sl, fp, lr}
   2e35c:	add	fp, sp, #8
   2e360:	mov	r4, r0
   2e364:	ldr	r2, [r0, #124]	; 0x7c
   2e368:	ldr	r0, [r2]
   2e36c:	add	r0, r0, r1, lsl #2
   2e370:	add	r3, r0, #4
   2e374:	ldr	r2, [r2, #4]
   2e378:	sub	r1, r2, r1
   2e37c:	lsl	r2, r1, #2
   2e380:	mov	r1, r3
   2e384:	bl	11314 <memmove@plt>
   2e388:	ldr	r0, [r4, #124]	; 0x7c
   2e38c:	ldr	r1, [r0, #4]
   2e390:	sub	r1, r1, #1
   2e394:	str	r1, [r0, #4]
   2e398:	pop	{r4, sl, fp, pc}

0002e39c <myhtml_tree_active_formatting_append_with_check@@Base>:
   2e39c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e3a0:	add	fp, sp, #28
   2e3a4:	sub	sp, sp, #4
   2e3a8:	mov	r4, r1
   2e3ac:	mov	r5, r0
   2e3b0:	ldr	r1, [r0, #124]	; 0x7c
   2e3b4:	ldr	r0, [r1, #4]
   2e3b8:	cmp	r0, #0
   2e3bc:	beq	2e474 <myhtml_tree_active_formatting_append_with_check@@Base+0xd8>
   2e3c0:	ldr	sl, [r1]
   2e3c4:	sub	r6, r0, #1
   2e3c8:	mov	r9, #0
   2e3cc:	mov	r8, r6
   2e3d0:	b	2e3e0 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2e3d4:	sub	r6, r6, #1
   2e3d8:	cmn	r6, #1
   2e3dc:	beq	2e464 <myhtml_tree_active_formatting_append_with_check@@Base+0xc8>
   2e3e0:	ldr	r7, [sl, r6, lsl #2]
   2e3e4:	mov	r0, r5
   2e3e8:	mov	r1, r7
   2e3ec:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e3f0:	cmp	r0, #0
   2e3f4:	bne	2e464 <myhtml_tree_active_formatting_append_with_check@@Base+0xc8>
   2e3f8:	ldr	r1, [r7, #32]
   2e3fc:	cmp	r1, #0
   2e400:	beq	2e3d4 <myhtml_tree_active_formatting_append_with_check@@Base+0x38>
   2e404:	ldr	r0, [r4, #32]
   2e408:	cmp	r0, #0
   2e40c:	beq	2e3d4 <myhtml_tree_active_formatting_append_with_check@@Base+0x38>
   2e410:	ldr	r0, [r5, #8]
   2e414:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2e418:	ldr	r1, [r4, #32]
   2e41c:	ldr	r0, [r5, #8]
   2e420:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2e424:	ldr	r0, [sl, r6, lsl #2]
   2e428:	ldr	r1, [r0, #8]
   2e42c:	ldr	r2, [r4, #8]
   2e430:	cmp	r1, r2
   2e434:	bne	2e3d4 <myhtml_tree_active_formatting_append_with_check@@Base+0x38>
   2e438:	ldr	r1, [r4, #4]
   2e43c:	ldr	r2, [r0, #4]
   2e440:	cmp	r2, r1
   2e444:	bne	2e3d4 <myhtml_tree_active_formatting_append_with_check@@Base+0x38>
   2e448:	ldr	r1, [r4, #32]
   2e44c:	ldr	r0, [r0, #32]
   2e450:	bl	11f20 <myhtml_token_attr_compare@plt>
   2e454:	cmp	r0, #0
   2e458:	movne	r8, r6
   2e45c:	add	r9, r9, r0
   2e460:	b	2e3d4 <myhtml_tree_active_formatting_append_with_check@@Base+0x38>
   2e464:	cmp	r9, #3
   2e468:	movcs	r0, r5
   2e46c:	movcs	r1, r8
   2e470:	blcs	11c5c <myhtml_tree_active_formatting_remove_by_index@plt>
   2e474:	mov	r0, r5
   2e478:	mov	r1, r4
   2e47c:	sub	sp, fp, #28
   2e480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e484:	b	2e2c8 <myhtml_tree_active_formatting_append@@Base>

0002e488 <myhtml_tree_active_formatting_current_node@@Base>:
   2e488:	ldr	r0, [r0, #124]	; 0x7c
   2e48c:	ldr	r1, [r0, #4]
   2e490:	cmp	r1, #0
   2e494:	moveq	r0, #0
   2e498:	bxeq	lr
   2e49c:	ldr	r1, [r0]
   2e4a0:	ldr	r0, [r0, #4]
   2e4a4:	add	r0, r1, r0, lsl #2
   2e4a8:	ldr	r0, [r0, #-4]
   2e4ac:	bx	lr

0002e4b0 <myhtml_tree_active_formatting_find@@Base>:
   2e4b0:	ldr	r0, [r0, #124]	; 0x7c
   2e4b4:	ldr	r3, [r0, #4]
   2e4b8:	ldr	r0, [r0]
   2e4bc:	sub	ip, r0, #4
   2e4c0:	cmp	r3, #0
   2e4c4:	moveq	r0, #0
   2e4c8:	bxeq	lr
   2e4cc:	ldr	r0, [ip, r3, lsl #2]
   2e4d0:	sub	r3, r3, #1
   2e4d4:	cmp	r0, r1
   2e4d8:	bne	2e4c0 <myhtml_tree_active_formatting_find@@Base+0x10>
   2e4dc:	mov	r0, #1
   2e4e0:	cmp	r2, #0
   2e4e4:	strne	r3, [r2]
   2e4e8:	bx	lr

0002e4ec <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2e4ec:	push	{r4, r5, r6, sl, fp, lr}
   2e4f0:	add	fp, sp, #16
   2e4f4:	mov	r4, r0
   2e4f8:	ldr	r5, [r0, #124]	; 0x7c
   2e4fc:	ldr	r6, [r5]
   2e500:	ldr	r0, [r5, #4]
   2e504:	cmp	r0, #0
   2e508:	beq	2e53c <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x50>
   2e50c:	ldr	r0, [r5, #4]
   2e510:	cmp	r0, #0
   2e514:	beq	2e53c <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x50>
   2e518:	ldr	r0, [r5, #4]
   2e51c:	sub	r0, r0, #1
   2e520:	str	r0, [r5, #4]
   2e524:	ldr	r0, [r5, #4]
   2e528:	ldr	r1, [r6, r0, lsl #2]
   2e52c:	mov	r0, r4
   2e530:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e534:	cmp	r0, #0
   2e538:	beq	2e50c <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x20>
   2e53c:	pop	{r4, r5, r6, sl, fp, pc}

0002e540 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2e540:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e544:	add	fp, sp, #24
   2e548:	mov	r9, r1
   2e54c:	mov	r7, r0
   2e550:	ldr	r1, [r0, #124]	; 0x7c
   2e554:	ldr	r0, [r1, #4]
   2e558:	cmp	r0, #0
   2e55c:	beq	2e5c4 <myhtml_tree_active_formatting_between_last_marker@@Base+0x84>
   2e560:	mov	r8, r2
   2e564:	ldr	r5, [r1]
   2e568:	rsb	r4, r0, #1
   2e56c:	b	2e57c <myhtml_tree_active_formatting_between_last_marker@@Base+0x3c>
   2e570:	add	r4, r4, #1
   2e574:	cmp	r4, #1
   2e578:	beq	2e5c4 <myhtml_tree_active_formatting_between_last_marker@@Base+0x84>
   2e57c:	ldr	r6, [r5, -r4, lsl #2]
   2e580:	mov	r0, r7
   2e584:	mov	r1, r6
   2e588:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e58c:	cmp	r0, #0
   2e590:	bne	2e5c4 <myhtml_tree_active_formatting_between_last_marker@@Base+0x84>
   2e594:	ldr	r0, [r6, #4]
   2e598:	cmp	r0, r9
   2e59c:	bne	2e570 <myhtml_tree_active_formatting_between_last_marker@@Base+0x30>
   2e5a0:	ldr	r0, [r6, #8]
   2e5a4:	cmp	r0, #1
   2e5a8:	bne	2e570 <myhtml_tree_active_formatting_between_last_marker@@Base+0x30>
   2e5ac:	cmp	r8, #0
   2e5b0:	beq	2e5c8 <myhtml_tree_active_formatting_between_last_marker@@Base+0x88>
   2e5b4:	rsb	r0, r4, #0
   2e5b8:	str	r0, [r8]
   2e5bc:	mov	r0, r6
   2e5c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e5c4:	mov	r6, #0
   2e5c8:	mov	r0, r6
   2e5cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002e5d0 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2e5d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e5d4:	add	fp, sp, #24
   2e5d8:	mov	r4, r0
   2e5dc:	ldr	r9, [r0, #124]	; 0x7c
   2e5e0:	ldr	r7, [r9]
   2e5e4:	ldr	r0, [r9, #4]
   2e5e8:	cmp	r0, #0
   2e5ec:	beq	2e6a0 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e5f0:	ldr	r5, [r9, #4]
   2e5f4:	add	r0, r7, r5, lsl #2
   2e5f8:	ldr	r8, [r0, #-4]
   2e5fc:	mov	r0, r4
   2e600:	mov	r1, r8
   2e604:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e608:	cmp	r0, #0
   2e60c:	bne	2e6a0 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e610:	mov	r0, r4
   2e614:	mov	r1, r8
   2e618:	mov	r2, #0
   2e61c:	bl	123dc <myhtml_tree_open_elements_find@plt>
   2e620:	cmp	r0, #0
   2e624:	bne	2e6a0 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e628:	sub	r8, r7, #8
   2e62c:	mov	r6, r5
   2e630:	cmp	r5, #1
   2e634:	beq	2e66c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2e638:	ldr	r5, [r8, r6, lsl #2]
   2e63c:	mov	r0, r4
   2e640:	mov	r1, r5
   2e644:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e648:	cmp	r0, #0
   2e64c:	bne	2e66c <myhtml_tree_active_formatting_reconstruction@@Base+0x9c>
   2e650:	mov	r0, r4
   2e654:	mov	r1, r5
   2e658:	mov	r2, #0
   2e65c:	bl	123dc <myhtml_tree_open_elements_find@plt>
   2e660:	sub	r5, r6, #1
   2e664:	cmp	r0, #0
   2e668:	beq	2e62c <myhtml_tree_active_formatting_reconstruction@@Base+0x5c>
   2e66c:	sub	r6, r6, #1
   2e670:	ldr	r0, [r9, #4]
   2e674:	cmp	r6, r0
   2e678:	bcs	2e6a0 <myhtml_tree_active_formatting_reconstruction@@Base+0xd0>
   2e67c:	ldr	r0, [r7, r6, lsl #2]
   2e680:	bl	12370 <myhtml_tree_node_clone@plt>
   2e684:	mov	r5, r0
   2e688:	mov	r0, r4
   2e68c:	mov	r1, r5
   2e690:	bl	11b9c <myhtml_tree_node_insert_by_node@plt>
   2e694:	str	r5, [r7, r6, lsl #2]
   2e698:	add	r6, r6, #1
   2e69c:	b	2e670 <myhtml_tree_active_formatting_reconstruction@@Base+0xa0>
   2e6a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002e6a4 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2e6a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e6a8:	add	fp, sp, #28
   2e6ac:	sub	sp, sp, #52	; 0x34
   2e6b0:	mov	r4, r0
   2e6b4:	ldr	r0, [r0, #128]	; 0x80
   2e6b8:	ldr	r1, [r0, #4]
   2e6bc:	cmp	r1, #0
   2e6c0:	beq	2eaec <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   2e6c4:	mov	r7, r2
   2e6c8:	ldr	sl, [r0]
   2e6cc:	ldr	r0, [r0, #4]
   2e6d0:	ldr	r1, [r4, #124]	; 0x7c
   2e6d4:	ldr	r1, [r1]
   2e6d8:	str	r1, [sp, #16]
   2e6dc:	add	r0, sl, r0, lsl #2
   2e6e0:	ldr	r1, [r0, #-4]
   2e6e4:	ldr	r0, [r1, #8]
   2e6e8:	cmp	r0, #1
   2e6ec:	bne	2e714 <myhtml_tree_adoption_agency_algorithm@@Base+0x70>
   2e6f0:	ldr	r0, [r1, #4]
   2e6f4:	cmp	r0, r7
   2e6f8:	bne	2e714 <myhtml_tree_adoption_agency_algorithm@@Base+0x70>
   2e6fc:	mov	r6, #0
   2e700:	mov	r0, r4
   2e704:	mov	r2, #0
   2e708:	bl	1159c <myhtml_tree_active_formatting_find@plt>
   2e70c:	cmp	r0, #0
   2e710:	beq	2ead4 <myhtml_tree_adoption_agency_algorithm@@Base+0x430>
   2e714:	mov	r0, #0
   2e718:	sub	r8, fp, #36	; 0x24
   2e71c:	mov	r1, #0
   2e720:	cmp	r1, #8
   2e724:	beq	2eaec <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   2e728:	str	r0, [fp, #-32]	; 0xffffffe0
   2e72c:	add	r1, r1, #1
   2e730:	str	r1, [sp, #20]
   2e734:	ldr	r0, [r4, #124]	; 0x7c
   2e738:	ldr	r5, [r0, #4]
   2e73c:	ldr	r0, [r0]
   2e740:	sub	r6, r0, #4
   2e744:	cmp	r5, #0
   2e748:	beq	2eacc <myhtml_tree_adoption_agency_algorithm@@Base+0x428>
   2e74c:	ldr	r9, [r6, r5, lsl #2]
   2e750:	mov	r0, r4
   2e754:	mov	r1, r9
   2e758:	bl	11c8c <myhtml_tree_active_formatting_is_marker@plt>
   2e75c:	cmp	r0, #0
   2e760:	bne	2eaec <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   2e764:	sub	r5, r5, #1
   2e768:	ldr	r0, [r9, #4]
   2e76c:	cmp	r0, r7
   2e770:	bne	2e744 <myhtml_tree_adoption_agency_algorithm@@Base+0xa0>
   2e774:	str	r5, [fp, #-32]	; 0xffffffe0
   2e778:	mov	r0, r4
   2e77c:	mov	r1, r9
   2e780:	mov	r2, r8
   2e784:	bl	123dc <myhtml_tree_open_elements_find@plt>
   2e788:	cmp	r0, #0
   2e78c:	beq	2eae0 <myhtml_tree_adoption_agency_algorithm@@Base+0x43c>
   2e790:	mov	r0, r9
   2e794:	mov	r1, #8
   2e798:	bl	1111c <myhtml_tree_element_in_scope_by_node@plt>
   2e79c:	cmp	r0, #0
   2e7a0:	beq	2eaec <myhtml_tree_adoption_agency_algorithm@@Base+0x448>
   2e7a4:	mov	r0, r4
   2e7a8:	bl	11a4c <myhtml_tree_current_node@plt>
   2e7ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e7b0:	str	r0, [sp, #40]	; 0x28
   2e7b4:	ldr	r1, [r4, #128]	; 0x80
   2e7b8:	ldr	r1, [r1, #4]
   2e7bc:	cmp	r0, r1
   2e7c0:	bcs	2e84c <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e7c4:	ldr	r0, [sl, r0, lsl #2]
   2e7c8:	ldr	r1, [r0, #4]
   2e7cc:	ldr	r0, [r4, #28]
   2e7d0:	bl	11e24 <myhtml_tag_get_by_id@plt>
   2e7d4:	ldr	r1, [sp, #40]	; 0x28
   2e7d8:	ldr	r8, [sl, r1, lsl #2]
   2e7dc:	ldr	r2, [r8, #8]
   2e7e0:	add	r0, r0, r2, lsl #2
   2e7e4:	ldrb	r0, [r0, #16]
   2e7e8:	tst	r0, #2
   2e7ec:	bne	2e80c <myhtml_tree_adoption_agency_algorithm@@Base+0x168>
   2e7f0:	add	r0, r1, #1
   2e7f4:	str	r0, [sp, #40]	; 0x28
   2e7f8:	ldr	r1, [r4, #128]	; 0x80
   2e7fc:	ldr	r1, [r1, #4]
   2e800:	cmp	r0, r1
   2e804:	bcc	2e7c4 <myhtml_tree_adoption_agency_algorithm@@Base+0x120>
   2e808:	mov	r8, #0
   2e80c:	cmp	r8, #0
   2e810:	beq	2e84c <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e814:	str	r7, [sp, #8]
   2e818:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e81c:	str	sl, [sp, #24]
   2e820:	add	r0, sl, r0, lsl #2
   2e824:	ldr	r0, [r0, #-4]
   2e828:	str	r0, [sp, #4]
   2e82c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e830:	add	r0, r0, #1
   2e834:	str	r0, [sp, #28]
   2e838:	mov	sl, #0
   2e83c:	ldr	r7, [sp, #40]	; 0x28
   2e840:	mov	r6, r8
   2e844:	str	r8, [sp, #12]
   2e848:	b	2e8b8 <myhtml_tree_adoption_agency_algorithm@@Base+0x214>
   2e84c:	mov	r0, r4
   2e850:	bl	11a4c <myhtml_tree_current_node@plt>
   2e854:	mov	r6, r0
   2e858:	mov	r0, r4
   2e85c:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2e860:	cmp	r6, r9
   2e864:	bne	2e84c <myhtml_tree_adoption_agency_algorithm@@Base+0x1a8>
   2e868:	mov	r0, r4
   2e86c:	mov	r1, r9
   2e870:	bl	11cbc <myhtml_tree_active_formatting_remove@plt>
   2e874:	mov	r5, #1
   2e878:	mov	r0, #0
   2e87c:	sub	r8, fp, #36	; 0x24
   2e880:	ldr	r1, [sp, #20]
   2e884:	mov	r6, #0
   2e888:	cmp	r5, #0
   2e88c:	beq	2e720 <myhtml_tree_adoption_agency_algorithm@@Base+0x7c>
   2e890:	b	2eaf0 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   2e894:	ldr	r1, [sp, #32]
   2e898:	mov	r0, r4
   2e89c:	bl	11c5c <myhtml_tree_active_formatting_remove_by_index@plt>
   2e8a0:	ldr	r0, [sp, #32]
   2e8a4:	ldr	r1, [sp, #28]
   2e8a8:	cmp	r0, r1
   2e8ac:	subcc	r1, r1, #1
   2e8b0:	str	r1, [sp, #28]
   2e8b4:	mov	sl, r5
   2e8b8:	mov	r0, r4
   2e8bc:	mov	r1, r6
   2e8c0:	add	r2, sp, #36	; 0x24
   2e8c4:	bl	123dc <myhtml_tree_open_elements_find@plt>
   2e8c8:	cmp	r0, #0
   2e8cc:	beq	2e8e0 <myhtml_tree_adoption_agency_algorithm@@Base+0x23c>
   2e8d0:	ldr	r7, [sp, #36]	; 0x24
   2e8d4:	cmp	r7, #0
   2e8d8:	bne	2e8ec <myhtml_tree_adoption_agency_algorithm@@Base+0x248>
   2e8dc:	b	2e9b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x30c>
   2e8e0:	str	r7, [sp, #36]	; 0x24
   2e8e4:	cmp	r7, #0
   2e8e8:	beq	2e9b0 <myhtml_tree_adoption_agency_algorithm@@Base+0x30c>
   2e8ec:	sub	r7, r7, #1
   2e8f0:	str	r7, [sp, #36]	; 0x24
   2e8f4:	ldr	r0, [sp, #24]
   2e8f8:	ldr	r6, [r0, r7, lsl #2]
   2e8fc:	cmp	r6, r9
   2e900:	beq	2e9c0 <myhtml_tree_adoption_agency_algorithm@@Base+0x31c>
   2e904:	add	r5, sl, #1
   2e908:	mov	r0, r4
   2e90c:	mov	r1, r6
   2e910:	add	r2, sp, #32
   2e914:	bl	1159c <myhtml_tree_active_formatting_find@plt>
   2e918:	cmp	sl, #3
   2e91c:	bcc	2e928 <myhtml_tree_adoption_agency_algorithm@@Base+0x284>
   2e920:	cmp	r0, #0
   2e924:	bne	2e894 <myhtml_tree_adoption_agency_algorithm@@Base+0x1f0>
   2e928:	cmp	r0, #0
   2e92c:	beq	2e99c <myhtml_tree_adoption_agency_algorithm@@Base+0x2f8>
   2e930:	mov	sl, r5
   2e934:	mov	r0, r6
   2e938:	bl	12370 <myhtml_tree_node_clone@plt>
   2e93c:	mov	r6, r0
   2e940:	mov	r0, #1
   2e944:	str	r0, [r6, #8]
   2e948:	ldr	r0, [sp, #32]
   2e94c:	ldr	r1, [sp, #16]
   2e950:	str	r6, [r1, r0, lsl #2]
   2e954:	ldr	r0, [sp, #36]	; 0x24
   2e958:	ldr	r1, [sp, #24]
   2e95c:	str	r6, [r1, r0, lsl #2]
   2e960:	ldr	r0, [sp, #32]
   2e964:	ldr	r5, [sp, #12]
   2e968:	cmp	r5, r8
   2e96c:	ldr	r1, [sp, #28]
   2e970:	addeq	r1, r0, #1
   2e974:	str	r1, [sp, #28]
   2e978:	ldr	r0, [r5, #24]
   2e97c:	cmp	r0, #0
   2e980:	movne	r0, r5
   2e984:	blne	121a8 <myhtml_tree_node_remove@plt>
   2e988:	mov	r0, r6
   2e98c:	mov	r1, r5
   2e990:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   2e994:	str	r6, [sp, #12]
   2e998:	b	2e8b8 <myhtml_tree_adoption_agency_algorithm@@Base+0x214>
   2e99c:	mov	r0, r4
   2e9a0:	mov	r1, r6
   2e9a4:	bl	11698 <myhtml_tree_open_elements_remove@plt>
   2e9a8:	mov	sl, r5
   2e9ac:	b	2e8b8 <myhtml_tree_adoption_agency_algorithm@@Base+0x214>
   2e9b0:	mov	r5, #1
   2e9b4:	ldr	r7, [sp, #8]
   2e9b8:	ldr	sl, [sp, #24]
   2e9bc:	b	2e878 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d4>
   2e9c0:	ldr	r5, [sp, #12]
   2e9c4:	ldr	r0, [r5, #24]
   2e9c8:	cmp	r0, #0
   2e9cc:	movne	r0, r5
   2e9d0:	blne	121a8 <myhtml_tree_node_remove@plt>
   2e9d4:	mov	r0, r4
   2e9d8:	ldr	r1, [sp, #4]
   2e9dc:	add	r2, sp, #36	; 0x24
   2e9e0:	bl	1222c <myhtml_tree_appropriate_place_inserting@plt>
   2e9e4:	ldr	r2, [sp, #36]	; 0x24
   2e9e8:	mov	r1, r5
   2e9ec:	bl	11794 <myhtml_tree_node_insert_by_mode@plt>
   2e9f0:	mov	r0, r9
   2e9f4:	bl	12370 <myhtml_tree_node_clone@plt>
   2e9f8:	mov	r6, r0
   2e9fc:	mov	r0, #1
   2ea00:	str	r0, [r6, #8]
   2ea04:	ldr	r7, [r8, #20]
   2ea08:	cmp	r7, #0
   2ea0c:	ldr	sl, [sp, #24]
   2ea10:	beq	2ea38 <myhtml_tree_adoption_agency_algorithm@@Base+0x394>
   2ea14:	ldr	r5, [r7, #16]
   2ea18:	mov	r0, r7
   2ea1c:	bl	121a8 <myhtml_tree_node_remove@plt>
   2ea20:	mov	r0, r6
   2ea24:	mov	r1, r7
   2ea28:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   2ea2c:	cmp	r5, #0
   2ea30:	mov	r7, r5
   2ea34:	bne	2ea14 <myhtml_tree_adoption_agency_algorithm@@Base+0x370>
   2ea38:	mov	r0, r8
   2ea3c:	mov	r1, r6
   2ea40:	bl	11ae8 <myhtml_tree_node_add_child@plt>
   2ea44:	mov	r0, r4
   2ea48:	mov	r1, r9
   2ea4c:	sub	r2, fp, #32
   2ea50:	bl	1159c <myhtml_tree_active_formatting_find@plt>
   2ea54:	mov	r5, #1
   2ea58:	cmp	r0, #0
   2ea5c:	beq	2eac4 <myhtml_tree_adoption_agency_algorithm@@Base+0x420>
   2ea60:	ldr	r7, [fp, #-32]	; 0xffffffe0
   2ea64:	mov	r0, r4
   2ea68:	mov	r1, r7
   2ea6c:	bl	11c5c <myhtml_tree_active_formatting_remove_by_index@plt>
   2ea70:	ldr	r2, [sp, #28]
   2ea74:	cmp	r7, r2
   2ea78:	subcc	r2, r2, #1
   2ea7c:	ldr	r0, [r4, #124]	; 0x7c
   2ea80:	mov	r1, r6
   2ea84:	bl	1171c <myhtml_tree_list_insert_by_index@plt>
   2ea88:	mov	r0, r4
   2ea8c:	mov	r1, r9
   2ea90:	bl	11698 <myhtml_tree_open_elements_remove@plt>
   2ea94:	mov	r0, r4
   2ea98:	mov	r1, r8
   2ea9c:	add	r2, sp, #40	; 0x28
   2eaa0:	bl	123dc <myhtml_tree_open_elements_find@plt>
   2eaa4:	mov	r5, #0
   2eaa8:	cmp	r0, #0
   2eaac:	beq	2eac4 <myhtml_tree_adoption_agency_algorithm@@Base+0x420>
   2eab0:	ldr	r0, [r4, #128]	; 0x80
   2eab4:	ldr	r1, [sp, #40]	; 0x28
   2eab8:	add	r2, r1, #1
   2eabc:	mov	r1, r6
   2eac0:	bl	1171c <myhtml_tree_list_insert_by_index@plt>
   2eac4:	ldr	r7, [sp, #8]
   2eac8:	b	2e878 <myhtml_tree_adoption_agency_algorithm@@Base+0x1d4>
   2eacc:	mov	r6, #1
   2ead0:	b	2eaf0 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   2ead4:	mov	r0, r4
   2ead8:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2eadc:	b	2eaf0 <myhtml_tree_adoption_agency_algorithm@@Base+0x44c>
   2eae0:	mov	r0, r4
   2eae4:	mov	r1, r9
   2eae8:	bl	11cbc <myhtml_tree_active_formatting_remove@plt>
   2eaec:	mov	r6, #0
   2eaf0:	mov	r0, r6
   2eaf4:	sub	sp, fp, #28
   2eaf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002eafc <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2eafc:	push	{r4, r5, r6, r7, fp, lr}
   2eb00:	add	fp, sp, #16
   2eb04:	mov	r5, r1
   2eb08:	mov	r4, r0
   2eb0c:	mov	r0, #1
   2eb10:	str	r0, [r1]
   2eb14:	ldr	r0, [r4, #40]	; 0x28
   2eb18:	ldrb	r0, [r0, #188]	; 0xbc
   2eb1c:	cmp	r0, #0
   2eb20:	beq	2eba4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2eb24:	ldr	r0, [r4, #8]
   2eb28:	cmp	r0, #1
   2eb2c:	bne	2ebac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2eb30:	ldr	r0, [r4, #4]
   2eb34:	sub	r0, r0, #125	; 0x7d
   2eb38:	cmp	r0, #10
   2eb3c:	bhi	2eba4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2eb40:	mov	r1, #1
   2eb44:	movw	r2, #1187	; 0x4a3
   2eb48:	tst	r2, r1, lsl r0
   2eb4c:	beq	2eba4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xa8>
   2eb50:	mov	r0, r4
   2eb54:	mov	r1, #128	; 0x80
   2eb58:	bl	11a40 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2eb5c:	mov	r7, r0
   2eb60:	mov	r0, r4
   2eb64:	mov	r1, #125	; 0x7d
   2eb68:	bl	11a40 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2eb6c:	mov	r6, r0
   2eb70:	cmp	r7, #0
   2eb74:	beq	2ebb4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb8>
   2eb78:	mov	r0, r7
   2eb7c:	mov	r1, #125	; 0x7d
   2eb80:	bl	11a40 <myhtml_tree_node_find_parent_by_tag_id@plt>
   2eb84:	cmp	r6, #0
   2eb88:	beq	2eb94 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x98>
   2eb8c:	cmp	r6, r0
   2eb90:	beq	2ebbc <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc0>
   2eb94:	mov	r0, #0
   2eb98:	str	r0, [r5]
   2eb9c:	mov	r0, r7
   2eba0:	pop	{r4, r5, r6, r7, fp, pc}
   2eba4:	mov	r0, #0
   2eba8:	str	r0, [r5]
   2ebac:	mov	r0, r4
   2ebb0:	pop	{r4, r5, r6, r7, fp, pc}
   2ebb4:	cmp	r6, #0
   2ebb8:	beq	2ebac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2ebbc:	ldr	r0, [r6, #24]
   2ebc0:	cmp	r0, #0
   2ebc4:	beq	2ebac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2ebc8:	ldr	r0, [r6, #12]
   2ebcc:	cmp	r0, #0
   2ebd0:	mov	r4, r6
   2ebd4:	beq	2ebac <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xb0>
   2ebd8:	mov	r1, #2
   2ebdc:	str	r1, [r5]
   2ebe0:	pop	{r4, r5, r6, r7, fp, pc}

0002ebe4 <myhtml_tree_template_insertion_append@@Base>:
   2ebe4:	push	{r4, r5, fp, lr}
   2ebe8:	add	fp, sp, #8
   2ebec:	mov	r4, r1
   2ebf0:	ldr	r5, [r0, #140]	; 0x8c
   2ebf4:	ldmib	r5, {r0, r1}
   2ebf8:	cmp	r0, r1
   2ebfc:	bcc	2ec1c <myhtml_tree_template_insertion_append@@Base+0x38>
   2ec00:	lsl	r0, r1, #1
   2ec04:	str	r0, [r5, #8]
   2ec08:	ldr	r0, [r5]
   2ec0c:	lsl	r1, r1, #3
   2ec10:	bl	110b0 <mycore_realloc@plt>
   2ec14:	cmp	r0, #0
   2ec18:	strne	r0, [r5]
   2ec1c:	ldm	r5, {r0, r1}
   2ec20:	str	r4, [r0, r1, lsl #2]
   2ec24:	ldr	r0, [r5, #4]
   2ec28:	add	r0, r0, #1
   2ec2c:	str	r0, [r5, #4]
   2ec30:	pop	{r4, r5, fp, pc}

0002ec34 <myhtml_tree_template_insertion_pop@@Base>:
   2ec34:	ldr	r0, [r0, #140]	; 0x8c
   2ec38:	ldr	r1, [r0, #4]
   2ec3c:	cmp	r1, #0
   2ec40:	subne	r1, r1, #1
   2ec44:	strne	r1, [r0, #4]
   2ec48:	bx	lr

0002ec4c <myhtml_tree_template_insertion_length@@Base>:
   2ec4c:	ldr	r0, [r0, #140]	; 0x8c
   2ec50:	ldr	r0, [r0, #4]
   2ec54:	bx	lr

0002ec58 <myhtml_tree_token_list_append@@Base>:
   2ec58:	push	{r4, r5, fp, lr}
   2ec5c:	add	fp, sp, #8
   2ec60:	mov	r5, r1
   2ec64:	mov	r4, r0
   2ec68:	ldr	r0, [r0, #4]
   2ec6c:	ldr	r1, [r4, #8]
   2ec70:	cmp	r0, r1
   2ec74:	bcc	2ec94 <myhtml_tree_token_list_append@@Base+0x3c>
   2ec78:	lsl	r0, r1, #1
   2ec7c:	str	r0, [r4, #8]
   2ec80:	ldr	r0, [r4]
   2ec84:	lsl	r1, r1, #3
   2ec88:	bl	110b0 <mycore_realloc@plt>
   2ec8c:	cmp	r0, #0
   2ec90:	strne	r0, [r4]
   2ec94:	ldm	r4, {r0, r1}
   2ec98:	str	r5, [r0, r1, lsl #2]
   2ec9c:	add	r0, r1, #1
   2eca0:	str	r0, [r4, #4]
   2eca4:	pop	{r4, r5, fp, pc}

0002eca8 <myhtml_tree_token_list_append_after_index@@Base>:
   2eca8:	push	{r4, r5, r6, r7, fp, lr}
   2ecac:	add	fp, sp, #16
   2ecb0:	mov	r6, r2
   2ecb4:	mov	r7, r1
   2ecb8:	mov	r4, r0
   2ecbc:	ldr	r0, [r0, #4]
   2ecc0:	ldr	r1, [r4, #8]
   2ecc4:	cmp	r0, r1
   2ecc8:	bcc	2ece8 <myhtml_tree_token_list_append_after_index@@Base+0x40>
   2eccc:	lsl	r0, r1, #1
   2ecd0:	str	r0, [r4, #8]
   2ecd4:	ldr	r0, [r4]
   2ecd8:	lsl	r1, r1, #3
   2ecdc:	bl	110b0 <mycore_realloc@plt>
   2ece0:	cmp	r0, #0
   2ece4:	strne	r0, [r4]
   2ece8:	ldr	r0, [r4, #4]
   2ecec:	cmp	r0, r6
   2ecf0:	bcs	2ed18 <myhtml_tree_token_list_append_after_index@@Base+0x70>
   2ecf4:	ldr	r1, [r4]
   2ecf8:	ldr	r0, [r4, #4]
   2ecfc:	mov	r2, r6
   2ed00:	mov	r3, r1
   2ed04:	ldr	r5, [r3, r2, lsl #2]!
   2ed08:	str	r5, [r3, #4]
   2ed0c:	add	r2, r2, #1
   2ed10:	cmp	r2, r0
   2ed14:	bhi	2ed00 <myhtml_tree_token_list_append_after_index@@Base+0x58>
   2ed18:	ldr	r1, [r4]
   2ed1c:	add	r1, r1, r6, lsl #2
   2ed20:	str	r7, [r1, #4]
   2ed24:	add	r0, r0, #1
   2ed28:	str	r0, [r4, #4]
   2ed2c:	pop	{r4, r5, r6, r7, fp, pc}

0002ed30 <myhtml_tree_token_list_current_node@@Base>:
   2ed30:	ldr	r1, [r0, #4]
   2ed34:	cmp	r1, #0
   2ed38:	moveq	r0, #0
   2ed3c:	bxeq	lr
   2ed40:	ldr	r0, [r0]
   2ed44:	add	r0, r0, r1, lsl #2
   2ed48:	ldr	r0, [r0, #-4]
   2ed4c:	bx	lr

0002ed50 <myhtml_tree_tags_close_p@@Base>:
   2ed50:	push	{r4, sl, fp, lr}
   2ed54:	add	fp, sp, #8
   2ed58:	mov	r4, r0
   2ed5c:	mov	r1, #99	; 0x63
   2ed60:	mov	r2, #1
   2ed64:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   2ed68:	mov	r0, r4
   2ed6c:	bl	11a4c <myhtml_tree_current_node@plt>
   2ed70:	mov	r1, #99	; 0x63
   2ed74:	bl	11e9c <myhtml_is_html_node@plt>
   2ed78:	mov	r0, r4
   2ed7c:	mov	r1, #99	; 0x63
   2ed80:	mov	r2, #1
   2ed84:	mov	r3, #0
   2ed88:	pop	{r4, sl, fp, lr}
   2ed8c:	b	2d8b4 <myhtml_tree_open_elements_pop_until@@Base>

0002ed90 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2ed90:	push	{r4, sl, fp, lr}
   2ed94:	add	fp, sp, #8
   2ed98:	mov	r4, r0
   2ed9c:	mov	r2, #1
   2eda0:	bl	12070 <myhtml_tree_node_insert_by_token@plt>
   2eda4:	ldr	r1, [r4, #168]	; 0xa8
   2eda8:	mov	r2, #7
   2edac:	str	r2, [r4, #168]	; 0xa8
   2edb0:	str	r1, [r4, #172]	; 0xac
   2edb4:	pop	{r4, sl, fp, pc}

0002edb8 <myhtml_tree_clear_stack_back_table_context@@Base>:
   2edb8:	push	{r4, sl, fp, lr}
   2edbc:	add	fp, sp, #8
   2edc0:	mov	r4, r0
   2edc4:	b	2eddc <myhtml_tree_clear_stack_back_table_context@@Base+0x24>
   2edc8:	ldr	r0, [r0, #8]
   2edcc:	cmp	r0, #1
   2edd0:	beq	2ee00 <myhtml_tree_clear_stack_back_table_context@@Base+0x48>
   2edd4:	mov	r0, r4
   2edd8:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2eddc:	mov	r0, r4
   2ede0:	bl	11a4c <myhtml_tree_current_node@plt>
   2ede4:	ldr	r1, [r0, #4]
   2ede8:	cmp	r1, #65	; 0x41
   2edec:	cmpne	r1, #128	; 0x80
   2edf0:	beq	2edc8 <myhtml_tree_clear_stack_back_table_context@@Base+0x10>
   2edf4:	cmp	r1, #125	; 0x7d
   2edf8:	beq	2edc8 <myhtml_tree_clear_stack_back_table_context@@Base+0x10>
   2edfc:	b	2edd4 <myhtml_tree_clear_stack_back_table_context@@Base+0x1c>
   2ee00:	pop	{r4, sl, fp, pc}

0002ee04 <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2ee04:	push	{r4, r5, r6, sl, fp, lr}
   2ee08:	add	fp, sp, #16
   2ee0c:	mov	r4, r0
   2ee10:	mov	r5, #1
   2ee14:	mov	r6, #85	; 0x55
   2ee18:	b	2ee38 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x34>
   2ee1c:	tst	r6, r5, lsl r2
   2ee20:	beq	2ee50 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x4c>
   2ee24:	ldr	r0, [r0, #8]
   2ee28:	cmp	r0, #1
   2ee2c:	beq	2ee5c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x58>
   2ee30:	mov	r0, r4
   2ee34:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2ee38:	mov	r0, r4
   2ee3c:	bl	11a4c <myhtml_tree_current_node@plt>
   2ee40:	ldr	r1, [r0, #4]
   2ee44:	sub	r2, r1, #126	; 0x7e
   2ee48:	cmp	r2, #6
   2ee4c:	bls	2ee1c <myhtml_tree_clear_stack_back_table_body_context@@Base+0x18>
   2ee50:	cmp	r1, #65	; 0x41
   2ee54:	beq	2ee24 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x20>
   2ee58:	b	2ee30 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x2c>
   2ee5c:	pop	{r4, r5, r6, sl, fp, pc}

0002ee60 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2ee60:	push	{r4, sl, fp, lr}
   2ee64:	add	fp, sp, #8
   2ee68:	mov	r4, r0
   2ee6c:	b	2ee84 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x24>
   2ee70:	ldr	r0, [r0, #8]
   2ee74:	cmp	r0, #1
   2ee78:	beq	2eea8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x48>
   2ee7c:	mov	r0, r4
   2ee80:	bl	11614 <myhtml_tree_open_elements_pop@plt>
   2ee84:	mov	r0, r4
   2ee88:	bl	11a4c <myhtml_tree_current_node@plt>
   2ee8c:	ldr	r1, [r0, #4]
   2ee90:	cmp	r1, #65	; 0x41
   2ee94:	cmpne	r1, #135	; 0x87
   2ee98:	beq	2ee70 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x10>
   2ee9c:	cmp	r1, #128	; 0x80
   2eea0:	beq	2ee70 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x10>
   2eea4:	b	2ee7c <myhtml_tree_clear_stack_back_table_row_context@@Base+0x1c>
   2eea8:	pop	{r4, sl, fp, pc}

0002eeac <myhtml_tree_close_cell@@Base>:
   2eeac:	push	{r4, r5, fp, lr}
   2eeb0:	add	fp, sp, #8
   2eeb4:	mov	r4, r1
   2eeb8:	mov	r5, r0
   2eebc:	mov	r1, #0
   2eec0:	mov	r2, #0
   2eec4:	bl	11b0c <myhtml_tree_generate_implied_end_tags@plt>
   2eec8:	mov	r0, r5
   2eecc:	bl	11a4c <myhtml_tree_current_node@plt>
   2eed0:	ldmib	r4, {r1, r2}
   2eed4:	mov	r0, r5
   2eed8:	mov	r3, #0
   2eedc:	bl	11d64 <myhtml_tree_open_elements_pop_until@plt>
   2eee0:	mov	r0, r5
   2eee4:	bl	12214 <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2eee8:	mov	r0, #13
   2eeec:	str	r0, [r5, #168]	; 0xa8
   2eef0:	pop	{r4, r5, fp, pc}

0002eef4 <myhtml_tree_is_mathml_integration_point@@Base>:
   2eef4:	ldr	r0, [r1, #8]
   2eef8:	cmp	r0, #2
   2eefc:	bne	2ef30 <myhtml_tree_is_mathml_integration_point@@Base+0x3c>
   2ef00:	ldr	r1, [r1, #4]
   2ef04:	sub	r2, r1, #227	; 0xe3
   2ef08:	mov	r0, #1
   2ef0c:	cmp	r2, #11
   2ef10:	bhi	2ef28 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2ef14:	mov	ip, #1
   2ef18:	movw	r3, #2097	; 0x831
   2ef1c:	tst	r3, ip, lsl r2
   2ef20:	beq	2ef28 <myhtml_tree_is_mathml_integration_point@@Base+0x34>
   2ef24:	bx	lr
   2ef28:	cmp	r1, #88	; 0x58
   2ef2c:	bxeq	lr
   2ef30:	mov	r0, #0
   2ef34:	bx	lr

0002ef38 <myhtml_tree_is_html_integration_point@@Base>:
   2ef38:	push	{r4, r5, r6, sl, fp, lr}
   2ef3c:	add	fp, sp, #16
   2ef40:	sub	sp, sp, #8
   2ef44:	mov	r4, r1
   2ef48:	mov	r5, r0
   2ef4c:	ldr	r0, [r1, #8]
   2ef50:	cmp	r0, #2
   2ef54:	beq	2ef80 <myhtml_tree_is_html_integration_point@@Base+0x48>
   2ef58:	cmp	r0, #3
   2ef5c:	bne	2f018 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ef60:	ldr	r0, [r4, #4]
   2ef64:	mov	r6, #1
   2ef68:	cmp	r0, #134	; 0x86
   2ef6c:	cmpne	r0, #156	; 0x9c
   2ef70:	beq	2f01c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ef74:	cmp	r0, #189	; 0xbd
   2ef78:	movne	r6, #0
   2ef7c:	b	2f01c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2ef80:	ldr	r0, [r4, #4]
   2ef84:	cmp	r0, #8
   2ef88:	bne	2f018 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ef8c:	ldr	r1, [r4, #32]
   2ef90:	cmp	r1, #0
   2ef94:	beq	2f018 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2ef98:	ldr	r0, [r1, #48]	; 0x30
   2ef9c:	tst	r0, #1
   2efa0:	bne	2f018 <myhtml_tree_is_html_integration_point@@Base+0xe0>
   2efa4:	ldr	r0, [r5, #8]
   2efa8:	bl	11aac <myhtml_token_node_wait_for_done@plt>
   2efac:	ldr	r1, [r4, #32]
   2efb0:	ldr	r0, [r5, #8]
   2efb4:	mov	r2, #9
   2efb8:	ldr	r3, [pc, #104]	; 2f028 <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2efbc:	add	r3, pc, r3
   2efc0:	str	r3, [sp]
   2efc4:	str	r2, [sp, #4]
   2efc8:	ldr	r2, [pc, #92]	; 2f02c <myhtml_tree_is_html_integration_point@@Base+0xf4>
   2efcc:	add	r2, pc, r2
   2efd0:	mov	r3, #8
   2efd4:	bl	111f4 <myhtml_token_attr_match_case@plt>
   2efd8:	mov	r6, #1
   2efdc:	cmp	r0, #0
   2efe0:	bne	2f01c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2efe4:	ldr	r1, [r4, #32]
   2efe8:	ldr	r0, [r5, #8]
   2efec:	mov	r2, #21
   2eff0:	ldr	r3, [pc, #56]	; 2f030 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   2eff4:	add	r3, pc, r3
   2eff8:	str	r3, [sp]
   2effc:	str	r2, [sp, #4]
   2f000:	ldr	r2, [pc, #44]	; 2f034 <myhtml_tree_is_html_integration_point@@Base+0xfc>
   2f004:	add	r2, pc, r2
   2f008:	mov	r3, #8
   2f00c:	bl	111f4 <myhtml_token_attr_match_case@plt>
   2f010:	cmp	r0, #0
   2f014:	bne	2f01c <myhtml_tree_is_html_integration_point@@Base+0xe4>
   2f018:	mov	r6, #0
   2f01c:	mov	r0, r6
   2f020:	sub	sp, fp, #16
   2f024:	pop	{r4, r5, r6, sl, fp, pc}
   2f028:	andeq	lr, ip, r7, ror #28
   2f02c:	andeq	lr, ip, lr, asr #28
   2f030:	andeq	lr, ip, r9, lsr lr
   2f034:	andeq	lr, ip, r6, lsl lr

0002f038 <myhtml_tree_temp_tag_name_init@@Base>:
   2f038:	push	{r4, sl, fp, lr}
   2f03c:	add	fp, sp, #8
   2f040:	mov	r4, r0
   2f044:	mov	r0, #0
   2f048:	mov	r1, #1024	; 0x400
   2f04c:	stmib	r4, {r0, r1}
   2f050:	mov	r0, #1024	; 0x400
   2f054:	bl	1204c <mycore_malloc@plt>
   2f058:	str	r0, [r4]
   2f05c:	clz	r0, r0
   2f060:	lsr	r0, r0, #5
   2f064:	lsl	r0, r0, #1
   2f068:	pop	{r4, sl, fp, pc}

0002f06c <myhtml_tree_temp_tag_name_clean@@Base>:
   2f06c:	mov	r1, #0
   2f070:	str	r1, [r0, #4]
   2f074:	bx	lr

0002f078 <myhtml_tree_temp_tag_name_append_one@@Base>:
   2f078:	push	{r4, r5, r6, sl, fp, lr}
   2f07c:	add	fp, sp, #16
   2f080:	mov	r5, r1
   2f084:	mov	r4, r0
   2f088:	ldr	r0, [r0, #4]
   2f08c:	ldr	r1, [r4, #8]
   2f090:	cmp	r0, r1
   2f094:	bcc	2f0b8 <myhtml_tree_temp_tag_name_append_one@@Base+0x40>
   2f098:	ldr	r0, [r4]
   2f09c:	lsl	r6, r1, #1
   2f0a0:	mov	r1, r6
   2f0a4:	bl	110b0 <mycore_realloc@plt>
   2f0a8:	cmp	r0, #0
   2f0ac:	beq	2f0d4 <myhtml_tree_temp_tag_name_append_one@@Base+0x5c>
   2f0b0:	str	r0, [r4]
   2f0b4:	str	r6, [r4, #8]
   2f0b8:	ldm	r4, {r0, r1}
   2f0bc:	strb	r5, [r0, r1]
   2f0c0:	ldr	r0, [r4, #4]
   2f0c4:	add	r0, r0, #1
   2f0c8:	str	r0, [r4, #4]
   2f0cc:	mov	r0, #0
   2f0d0:	pop	{r4, r5, r6, sl, fp, pc}
   2f0d4:	mov	r0, #2
   2f0d8:	pop	{r4, r5, r6, sl, fp, pc}

0002f0dc <myhtml_tree_temp_tag_name_append@@Base>:
   2f0dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f0e0:	add	fp, sp, #24
   2f0e4:	mov	r4, #0
   2f0e8:	cmp	r2, #0
   2f0ec:	movne	r6, r0
   2f0f0:	ldrne	r0, [r0]
   2f0f4:	cmpne	r0, #0
   2f0f8:	bne	2f104 <myhtml_tree_temp_tag_name_append@@Base+0x28>
   2f0fc:	mov	r0, r4
   2f100:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f104:	mov	r5, r2
   2f108:	mov	r7, r1
   2f10c:	ldr	r2, [r6, #4]
   2f110:	ldr	r1, [r6, #8]
   2f114:	add	r2, r2, r5
   2f118:	cmp	r2, r1
   2f11c:	bcc	2f13c <myhtml_tree_temp_tag_name_append@@Base+0x60>
   2f120:	add	r8, r5, r1, lsl #1
   2f124:	mov	r1, r8
   2f128:	bl	110b0 <mycore_realloc@plt>
   2f12c:	cmp	r0, #0
   2f130:	beq	2f164 <myhtml_tree_temp_tag_name_append@@Base+0x88>
   2f134:	str	r0, [r6]
   2f138:	str	r8, [r6, #8]
   2f13c:	ldm	r6, {r0, r1}
   2f140:	add	r0, r0, r1
   2f144:	mov	r1, r7
   2f148:	mov	r2, r5
   2f14c:	bl	113ec <memcpy@plt>
   2f150:	ldr	r0, [r6, #4]
   2f154:	add	r0, r0, r5
   2f158:	str	r0, [r6, #4]
   2f15c:	mov	r0, r4
   2f160:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f164:	mov	r4, #2
   2f168:	mov	r0, r4
   2f16c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002f170 <myhtml_tree_wait_for_last_done_token@@Base>:
   2f170:	push	{r4, r5, fp, lr}
   2f174:	add	fp, sp, #8
   2f178:	mov	r5, r0
   2f17c:	ldr	r0, [r0, #152]	; 0x98
   2f180:	cmp	r0, r1
   2f184:	popeq	{r4, r5, fp, pc}
   2f188:	mov	r4, r1
   2f18c:	ldr	r0, [r5]
   2f190:	ldr	r0, [r0]
   2f194:	ldr	r0, [r0, #24]
   2f198:	bl	11518 <mythread_nanosleep_sleep@plt>
   2f19c:	ldr	r0, [r5, #152]	; 0x98
   2f1a0:	cmp	r0, r4
   2f1a4:	bne	2f18c <myhtml_tree_wait_for_last_done_token@@Base+0x1c>
   2f1a8:	pop	{r4, r5, fp, pc}

0002f1ac <myhtml_tree_special_list_init@@Base>:
   2f1ac:	push	{r4, sl, fp, lr}
   2f1b0:	add	fp, sp, #8
   2f1b4:	mov	r4, r0
   2f1b8:	mov	r0, #0
   2f1bc:	mov	r1, #1024	; 0x400
   2f1c0:	stmib	r4, {r0, r1}
   2f1c4:	mov	r0, #8192	; 0x2000
   2f1c8:	bl	1204c <mycore_malloc@plt>
   2f1cc:	str	r0, [r4]
   2f1d0:	clz	r0, r0
   2f1d4:	lsr	r0, r0, #5
   2f1d8:	lsl	r0, r0, #1
   2f1dc:	pop	{r4, sl, fp, pc}

0002f1e0 <myhtml_tree_special_list_clean@@Base>:
   2f1e0:	mov	r1, #0
   2f1e4:	str	r1, [r0, #4]
   2f1e8:	bx	lr

0002f1ec <myhtml_tree_special_list_destroy@@Base>:
   2f1ec:	push	{r4, r5, r6, sl, fp, lr}
   2f1f0:	add	fp, sp, #16
   2f1f4:	mov	r4, #0
   2f1f8:	cmp	r0, #0
   2f1fc:	beq	2f230 <myhtml_tree_special_list_destroy@@Base+0x44>
   2f200:	mov	r6, r1
   2f204:	mov	r5, r0
   2f208:	ldr	r0, [r0]
   2f20c:	cmp	r0, #0
   2f210:	beq	2f220 <myhtml_tree_special_list_destroy@@Base+0x34>
   2f214:	bl	12184 <mycore_free@plt>
   2f218:	mov	r0, #0
   2f21c:	str	r0, [r5]
   2f220:	cmp	r6, #0
   2f224:	beq	2f238 <myhtml_tree_special_list_destroy@@Base+0x4c>
   2f228:	mov	r0, r5
   2f22c:	bl	12184 <mycore_free@plt>
   2f230:	mov	r0, r4
   2f234:	pop	{r4, r5, r6, sl, fp, pc}
   2f238:	mov	r0, r5
   2f23c:	pop	{r4, r5, r6, sl, fp, pc}

0002f240 <myhtml_tree_special_list_append@@Base>:
   2f240:	push	{r4, r5, r6, r7, fp, lr}
   2f244:	add	fp, sp, #16
   2f248:	mov	r5, r2
   2f24c:	mov	r6, r1
   2f250:	mov	r4, r0
   2f254:	ldr	r0, [r0, #4]
   2f258:	ldr	r7, [r4, #8]
   2f25c:	cmp	r0, r7
   2f260:	bcc	2f284 <myhtml_tree_special_list_append@@Base+0x44>
   2f264:	ldr	r0, [r4]
   2f268:	lsl	r1, r7, #4
   2f26c:	bl	110b0 <mycore_realloc@plt>
   2f270:	cmp	r0, #0
   2f274:	beq	2f2a0 <myhtml_tree_special_list_append@@Base+0x60>
   2f278:	str	r0, [r4]
   2f27c:	lsl	r0, r7, #1
   2f280:	str	r0, [r4, #8]
   2f284:	ldm	r4, {r0, r1}
   2f288:	str	r6, [r0, r1, lsl #3]!
   2f28c:	str	r5, [r0, #4]
   2f290:	add	r0, r1, #1
   2f294:	str	r0, [r4, #4]
   2f298:	mov	r0, #0
   2f29c:	pop	{r4, r5, r6, r7, fp, pc}
   2f2a0:	mov	r0, #2
   2f2a4:	pop	{r4, r5, r6, r7, fp, pc}

0002f2a8 <myhtml_tree_special_list_length@@Base>:
   2f2a8:	ldr	r0, [r0, #4]
   2f2ac:	bx	lr

0002f2b0 <myhtml_tree_special_list_pop@@Base>:
   2f2b0:	ldr	r1, [r0, #4]
   2f2b4:	cmp	r1, #0
   2f2b8:	subne	r1, r1, #1
   2f2bc:	strne	r1, [r0, #4]
   2f2c0:	ldr	r0, [r0, #4]
   2f2c4:	bx	lr

0002f2c8 <myhtml_tree_special_list_get_last@@Base>:
   2f2c8:	ldr	r1, [r0, #4]
   2f2cc:	cmp	r1, #0
   2f2d0:	moveq	r0, #0
   2f2d4:	bxeq	lr
   2f2d8:	ldr	r0, [r0]
   2f2dc:	add	r0, r0, r1, lsl #3
   2f2e0:	bx	lr

0002f2e4 <myhtml_tree_incoming_buffer_first@@Base>:
   2f2e4:	ldr	r0, [r0, #80]	; 0x50
   2f2e8:	bx	lr

0002f2ec <myhtml_tree_incomming_buffer_make_data@@Base>:
   2f2ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f2f0:	add	fp, sp, #24
   2f2f4:	mov	r5, r2
   2f2f8:	mov	r7, r1
   2f2fc:	mov	r8, r0
   2f300:	ldr	r0, [r0, #80]	; 0x50
   2f304:	bl	11578 <mycore_incoming_buffer_find_by_position@plt>
   2f308:	mov	r6, r0
   2f30c:	ldr	r0, [r0, #8]
   2f310:	ldr	r1, [r6, #12]
   2f314:	sub	r4, r7, r1
   2f318:	add	r1, r4, r5
   2f31c:	cmp	r1, r0
   2f320:	bls	2f33c <myhtml_tree_incomming_buffer_make_data@@Base+0x50>
   2f324:	ldr	r0, [r8, #208]!	; 0xd0
   2f328:	cmp	r0, #0
   2f32c:	beq	2f348 <myhtml_tree_incomming_buffer_make_data@@Base+0x5c>
   2f330:	mov	r0, r8
   2f334:	bl	116e0 <myhtml_tree_temp_tag_name_clean@plt>
   2f338:	b	2f388 <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   2f33c:	ldr	r0, [r6]
   2f340:	add	r0, r0, r4
   2f344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f348:	mov	r0, r8
   2f34c:	bl	11a28 <myhtml_tree_temp_tag_name_init@plt>
   2f350:	b	2f388 <myhtml_tree_incomming_buffer_make_data@@Base+0x9c>
   2f354:	add	r1, r4, r5
   2f358:	ldr	r0, [r6, #8]
   2f35c:	cmp	r1, r0
   2f360:	bls	2f398 <myhtml_tree_incomming_buffer_make_data@@Base+0xac>
   2f364:	sub	r7, r0, r4
   2f368:	ldr	r0, [r6]
   2f36c:	add	r1, r0, r4
   2f370:	mov	r0, r8
   2f374:	mov	r2, r7
   2f378:	bl	11158 <myhtml_tree_temp_tag_name_append@plt>
   2f37c:	sub	r5, r5, r7
   2f380:	ldr	r6, [r6, #20]
   2f384:	mov	r4, #0
   2f388:	cmp	r6, #0
   2f38c:	bne	2f354 <myhtml_tree_incomming_buffer_make_data@@Base+0x68>
   2f390:	ldr	r0, [r8]
   2f394:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f398:	ldr	r0, [r6]
   2f39c:	add	r1, r0, r4
   2f3a0:	mov	r0, r8
   2f3a4:	mov	r2, r5
   2f3a8:	bl	11158 <myhtml_tree_temp_tag_name_append@plt>
   2f3ac:	ldr	r0, [r8]
   2f3b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002f3b4 <mycore_fopen@@Base>:
   2f3b4:	b	1126c <fopen@plt>

0002f3b8 <mycore_fclose@@Base>:
   2f3b8:	b	11e00 <fclose@plt>

0002f3bc <mycore_fread@@Base>:
   2f3bc:	b	11800 <fread@plt>

0002f3c0 <mycore_fwrite@@Base>:
   2f3c0:	b	1177c <fwrite@plt>

0002f3c4 <mycore_fflush@@Base>:
   2f3c4:	b	112b4 <fflush@plt>

0002f3c8 <mycore_fseek@@Base>:
   2f3c8:	b	122c8 <fseek@plt>

0002f3cc <mycore_ftell@@Base>:
   2f3cc:	b	114f4 <ftell@plt>

0002f3d0 <mycore_ferror@@Base>:
   2f3d0:	b	113e0 <ferror@plt>

0002f3d4 <mycore_setbuf@@Base>:
   2f3d4:	b	111c4 <setbuf@plt>

0002f3d8 <mycore_malloc@@Base>:
   2f3d8:	b	11938 <malloc@plt>

0002f3dc <mycore_realloc@@Base>:
   2f3dc:	b	11650 <realloc@plt>

0002f3e0 <mycore_calloc@@Base>:
   2f3e0:	b	110bc <calloc@plt>

0002f3e4 <mycore_free@@Base>:
   2f3e4:	push	{fp, lr}
   2f3e8:	mov	fp, sp
   2f3ec:	bl	11344 <free@plt>
   2f3f0:	mov	r0, #0
   2f3f4:	pop	{fp, pc}

0002f3f8 <mythread_thread_create@@Base>:
   2f3f8:	push	{r4, r5, r6, r7, fp, lr}
   2f3fc:	add	fp, sp, #16
   2f400:	mov	r5, r2
   2f404:	mov	r6, r1
   2f408:	mov	r7, r0
   2f40c:	mov	r0, #1
   2f410:	mov	r1, #4
   2f414:	bl	113a4 <mycore_calloc@plt>
   2f418:	cmp	r0, #0
   2f41c:	beq	2f444 <mythread_thread_create@@Base+0x4c>
   2f420:	mov	r4, r0
   2f424:	ldr	r1, [r7, #20]
   2f428:	mov	r2, r6
   2f42c:	mov	r3, r5
   2f430:	bl	1180c <pthread_create@plt>
   2f434:	cmp	r0, #0
   2f438:	movne	r4, #0
   2f43c:	mov	r0, r4
   2f440:	pop	{r4, r5, r6, r7, fp, pc}
   2f444:	mov	r4, #0
   2f448:	mov	r0, r4
   2f44c:	pop	{r4, r5, r6, r7, fp, pc}

0002f450 <mythread_thread_join@@Base>:
   2f450:	push	{fp, lr}
   2f454:	mov	fp, sp
   2f458:	ldr	r0, [r1]
   2f45c:	mov	r1, #0
   2f460:	bl	11f50 <pthread_join@plt>
   2f464:	cmp	r0, #0
   2f468:	movwne	r0, #1
   2f46c:	pop	{fp, pc}

0002f470 <mythread_thread_cancel@@Base>:
   2f470:	push	{fp, lr}
   2f474:	mov	fp, sp
   2f478:	ldr	r0, [r1]
   2f47c:	bl	11d10 <pthread_cancel@plt>
   2f480:	cmp	r0, #0
   2f484:	movwne	r0, #1
   2f488:	pop	{fp, pc}

0002f48c <mythread_thread_destroy@@Base>:
   2f48c:	push	{fp, lr}
   2f490:	mov	fp, sp
   2f494:	mov	r0, r1
   2f498:	bl	12184 <mycore_free@plt>
   2f49c:	mov	r0, #0
   2f4a0:	pop	{fp, pc}

0002f4a4 <mythread_thread_attr_init@@Base>:
   2f4a4:	push	{r4, r5, r6, sl, fp, lr}
   2f4a8:	add	fp, sp, #16
   2f4ac:	mov	r6, r0
   2f4b0:	mov	r0, #1
   2f4b4:	mov	r1, #36	; 0x24
   2f4b8:	bl	113a4 <mycore_calloc@plt>
   2f4bc:	mov	r4, #0
   2f4c0:	cmp	r0, #0
   2f4c4:	beq	2f500 <mythread_thread_attr_init@@Base+0x5c>
   2f4c8:	mov	r5, r0
   2f4cc:	bl	11bcc <pthread_attr_init@plt>
   2f4d0:	str	r0, [r6, #28]
   2f4d4:	cmp	r0, #0
   2f4d8:	bne	2f4f8 <mythread_thread_attr_init@@Base+0x54>
   2f4dc:	mov	r4, #0
   2f4e0:	mov	r0, r5
   2f4e4:	mov	r1, #0
   2f4e8:	bl	122ec <pthread_attr_setdetachstate@plt>
   2f4ec:	str	r0, [r6, #28]
   2f4f0:	cmp	r0, #0
   2f4f4:	beq	2f508 <mythread_thread_attr_init@@Base+0x64>
   2f4f8:	mov	r0, r5
   2f4fc:	bl	12184 <mycore_free@plt>
   2f500:	mov	r0, r4
   2f504:	pop	{r4, r5, r6, sl, fp, pc}
   2f508:	mov	r0, r5
   2f50c:	pop	{r4, r5, r6, sl, fp, pc}

0002f510 <mythread_thread_attr_clean@@Base>:
   2f510:	bx	lr

0002f514 <mythread_thread_attr_destroy@@Base>:
   2f514:	cmp	r1, #0
   2f518:	bxeq	lr
   2f51c:	push	{r4, r5, fp, lr}
   2f520:	add	fp, sp, #8
   2f524:	mov	r4, r1
   2f528:	mov	r5, r0
   2f52c:	mov	r0, r1
   2f530:	bl	11290 <pthread_attr_destroy@plt>
   2f534:	str	r0, [r5, #28]
   2f538:	mov	r0, r4
   2f53c:	pop	{r4, r5, fp, lr}
   2f540:	b	12184 <mycore_free@plt>

0002f544 <mythread_mutex_create@@Base>:
   2f544:	push	{r4, r5, fp, lr}
   2f548:	add	fp, sp, #8
   2f54c:	bl	11ce0 <mcsync_mutex_create@plt>
   2f550:	mov	r4, #0
   2f554:	cmp	r0, #0
   2f558:	beq	2f574 <mythread_mutex_create@@Base+0x30>
   2f55c:	mov	r5, r0
   2f560:	bl	11f38 <mcsync_mutex_init@plt>
   2f564:	cmp	r0, #0
   2f568:	beq	2f57c <mythread_mutex_create@@Base+0x38>
   2f56c:	mov	r0, r5
   2f570:	bl	12184 <mycore_free@plt>
   2f574:	mov	r0, r4
   2f578:	pop	{r4, r5, fp, pc}
   2f57c:	mov	r0, r5
   2f580:	pop	{r4, r5, fp, pc}

0002f584 <mythread_mutex_post@@Base>:
   2f584:	mov	r0, r1
   2f588:	b	1138c <mcsync_mutex_unlock@plt>

0002f58c <mythread_mutex_wait@@Base>:
   2f58c:	mov	r0, r1
   2f590:	b	123d0 <mcsync_mutex_lock@plt>

0002f594 <mythread_mutex_try_wait@@Base>:
   2f594:	mov	r0, r1
   2f598:	b	12340 <mcsync_mutex_try_lock@plt>

0002f59c <mythread_mutex_close@@Base>:
   2f59c:	mov	r0, r1
   2f5a0:	b	11230 <mcsync_mutex_destroy@plt>

0002f5a4 <mythread_nanosleep_create@@Base>:
   2f5a4:	mov	r0, #1
   2f5a8:	mov	r1, #8
   2f5ac:	b	113a4 <mycore_calloc@plt>

0002f5b0 <mythread_nanosleep_clean@@Base>:
   2f5b0:	mov	r1, #0
   2f5b4:	str	r1, [r0, #4]
   2f5b8:	str	r1, [r0]
   2f5bc:	bx	lr

0002f5c0 <mythread_nanosleep_destroy@@Base>:
   2f5c0:	b	12184 <mycore_free@plt>

0002f5c4 <mythread_nanosleep_sleep@@Base>:
   2f5c4:	push	{fp, lr}
   2f5c8:	mov	fp, sp
   2f5cc:	mov	r1, #0
   2f5d0:	bl	113b0 <nanosleep@plt>
   2f5d4:	cmp	r0, #0
   2f5d8:	movwne	r0, #1
   2f5dc:	pop	{fp, pc}

0002f5e0 <mcsync_spin_create@@Base>:
   2f5e0:	mov	r0, #1
   2f5e4:	mov	r1, #4
   2f5e8:	b	113a4 <mycore_calloc@plt>

0002f5ec <mcsync_spin_init@@Base>:
   2f5ec:	mov	r0, #0
   2f5f0:	bx	lr

0002f5f4 <mcsync_spin_clean@@Base>:
   2f5f4:	mov	r1, #0
   2f5f8:	str	r1, [r0]
   2f5fc:	bx	lr

0002f600 <mcsync_spin_destroy@@Base>:
   2f600:	b	12184 <mycore_free@plt>

0002f604 <mcsync_spin_lock@@Base>:
   2f604:	push	{fp, lr}
   2f608:	mov	fp, sp
   2f60c:	bl	2f618 <mcsync_spin_lock@@Base+0x14>
   2f610:	mov	r0, #0
   2f614:	pop	{fp, pc}
   2f618:	mov	r2, #0
   2f61c:	mov	r1, #1
   2f620:	b	2f62c <mcsync_spin_lock@@Base+0x28>
   2f624:	clrex
   2f628:	mov	r2, r3
   2f62c:	ldaex	r3, [r0]
   2f630:	cmp	r3, r2
   2f634:	bne	2f624 <mcsync_spin_lock@@Base+0x20>
   2f638:	stlex	r3, r1, [r0]
   2f63c:	cmp	r3, #0
   2f640:	bxeq	lr
   2f644:	b	2f62c <mcsync_spin_lock@@Base+0x28>

0002f648 <mcsync_spin_unlock@@Base>:
   2f648:	push	{fp, lr}
   2f64c:	mov	fp, sp
   2f650:	bl	2f65c <mcsync_spin_unlock@@Base+0x14>
   2f654:	mov	r0, #0
   2f658:	pop	{fp, pc}
   2f65c:	mov	r1, #0
   2f660:	stl	r1, [r0]
   2f664:	bx	lr

0002f668 <mcsync_mutex_create@@Base>:
   2f668:	mov	r0, #1
   2f66c:	mov	r1, #24
   2f670:	b	113a4 <mycore_calloc@plt>

0002f674 <mcsync_mutex_init@@Base>:
   2f674:	push	{fp, lr}
   2f678:	mov	fp, sp
   2f67c:	mov	r1, #0
   2f680:	bl	11458 <pthread_mutex_init@plt>
   2f684:	cmp	r0, #0
   2f688:	movwne	r0, #1
   2f68c:	pop	{fp, pc}

0002f690 <mcsync_mutex_clean@@Base>:
   2f690:	bx	lr

0002f694 <mcsync_mutex_destroy@@Base>:
   2f694:	push	{r4, sl, fp, lr}
   2f698:	add	fp, sp, #8
   2f69c:	mov	r4, r0
   2f6a0:	bl	112a8 <pthread_mutex_destroy@plt>
   2f6a4:	mov	r0, r4
   2f6a8:	pop	{r4, sl, fp, lr}
   2f6ac:	b	12184 <mycore_free@plt>

0002f6b0 <mcsync_mutex_lock@@Base>:
   2f6b0:	push	{fp, lr}
   2f6b4:	mov	fp, sp
   2f6b8:	bl	11398 <pthread_mutex_lock@plt>
   2f6bc:	cmp	r0, #0
   2f6c0:	movwne	r0, #1
   2f6c4:	pop	{fp, pc}

0002f6c8 <mcsync_mutex_try_lock@@Base>:
   2f6c8:	push	{fp, lr}
   2f6cc:	mov	fp, sp
   2f6d0:	bl	114c4 <pthread_mutex_trylock@plt>
   2f6d4:	cmp	r0, #0
   2f6d8:	movwne	r0, #1
   2f6dc:	pop	{fp, pc}

0002f6e0 <mcsync_mutex_unlock@@Base>:
   2f6e0:	push	{fp, lr}
   2f6e4:	mov	fp, sp
   2f6e8:	bl	11098 <pthread_mutex_unlock@plt>
   2f6ec:	cmp	r0, #0
   2f6f0:	movwne	r0, #1
   2f6f4:	pop	{fp, pc}

Disassembly of section .fini:

0002f6f8 <.fini>:
   2f6f8:	push	{r3, lr}
   2f6fc:	pop	{r3, pc}
