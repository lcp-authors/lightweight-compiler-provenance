
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010af0 <.init>:
   10af0:	push	{r3, lr}
   10af4:	bl	10c24 <_start@@Base+0x3c>
   10af8:	pop	{r3, pc}

Disassembly of section .plt:

00010afc <calloc@plt-0x14>:
   10afc:	push	{lr}		; (str lr, [sp, #-4]!)
   10b00:	ldr	lr, [pc, #4]	; 10b0c <calloc@plt-0x4>
   10b04:	add	lr, pc, lr
   10b08:	ldr	pc, [lr, #8]!
   10b0c:	strdeq	r1, [r1], -r4

00010b10 <calloc@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b1c <strcmp@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b28 <strtol@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b34 <printf@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b40 <fopen@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b4c <free@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b58 <fgets@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b64 <realloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b70 <strcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b7c <puts@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b88 <malloc@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b94 <__libc_start_main@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1180]!	; 0x49c

00010ba0 <__gmon_start__@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1172]!	; 0x494

00010bac <feof@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1164]!	; 0x48c

00010bb8 <strlen@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1156]!	; 0x484

00010bc4 <strchr@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1148]!	; 0x47c

00010bd0 <fclose@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1140]!	; 0x474

00010bdc <abort@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00010be8 <_start@@Base>:
   10be8:	mov	fp, #0
   10bec:	mov	lr, #0
   10bf0:	pop	{r1}		; (ldr r1, [sp], #4)
   10bf4:	mov	r2, sp
   10bf8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bfc:	push	{r0}		; (str r0, [sp, #-4]!)
   10c00:	ldr	ip, [pc, #16]	; 10c18 <_start@@Base+0x30>
   10c04:	push	{ip}		; (str ip, [sp, #-4]!)
   10c08:	ldr	r0, [pc, #12]	; 10c1c <_start@@Base+0x34>
   10c0c:	ldr	r3, [pc, #12]	; 10c20 <_start@@Base+0x38>
   10c10:	bl	10b94 <__libc_start_main@plt>
   10c14:	bl	10bdc <abort@plt>
   10c18:	andeq	r1, r1, r8, lsr #22
   10c1c:	andeq	r1, r1, r0, lsr #32
   10c20:	andeq	r1, r1, r8, asr #21
   10c24:	ldr	r3, [pc, #20]	; 10c40 <_start@@Base+0x58>
   10c28:	ldr	r2, [pc, #20]	; 10c44 <_start@@Base+0x5c>
   10c2c:	add	r3, pc, r3
   10c30:	ldr	r2, [r3, r2]
   10c34:	cmp	r2, #0
   10c38:	bxeq	lr
   10c3c:	b	10ba0 <__gmon_start__@plt>
   10c40:	andeq	r1, r1, ip, asr #7
   10c44:	andeq	r0, r0, r4, asr r0
   10c48:	ldr	r0, [pc, #24]	; 10c68 <_start@@Base+0x80>
   10c4c:	ldr	r3, [pc, #24]	; 10c6c <_start@@Base+0x84>
   10c50:	cmp	r3, r0
   10c54:	bxeq	lr
   10c58:	ldr	r3, [pc, #16]	; 10c70 <_start@@Base+0x88>
   10c5c:	cmp	r3, #0
   10c60:	bxeq	lr
   10c64:	bx	r3
   10c68:	andeq	r2, r2, r0, rrx
   10c6c:	andeq	r2, r2, r0, rrx
   10c70:	andeq	r0, r0, r0
   10c74:	ldr	r0, [pc, #36]	; 10ca0 <_start@@Base+0xb8>
   10c78:	ldr	r1, [pc, #36]	; 10ca4 <_start@@Base+0xbc>
   10c7c:	sub	r1, r1, r0
   10c80:	asr	r1, r1, #2
   10c84:	add	r1, r1, r1, lsr #31
   10c88:	asrs	r1, r1, #1
   10c8c:	bxeq	lr
   10c90:	ldr	r3, [pc, #16]	; 10ca8 <_start@@Base+0xc0>
   10c94:	cmp	r3, #0
   10c98:	bxeq	lr
   10c9c:	bx	r3
   10ca0:	andeq	r2, r2, r0, rrx
   10ca4:	andeq	r2, r2, r0, rrx
   10ca8:	andeq	r0, r0, r0
   10cac:	push	{r4, lr}
   10cb0:	ldr	r4, [pc, #24]	; 10cd0 <_start@@Base+0xe8>
   10cb4:	ldrb	r3, [r4]
   10cb8:	cmp	r3, #0
   10cbc:	popne	{r4, pc}
   10cc0:	bl	10c48 <_start@@Base+0x60>
   10cc4:	mov	r3, #1
   10cc8:	strb	r3, [r4]
   10ccc:	pop	{r4, pc}
   10cd0:	andeq	r2, r2, r0, rrx
   10cd4:	b	10c74 <_start@@Base+0x8c>

00010cd8 <retira_duplicados@@Base>:
   10cd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10cdc:	strd	r6, [sp, #8]
   10ce0:	str	r8, [sp, #16]
   10ce4:	str	lr, [sp, #20]
   10ce8:	mov	r5, r0
   10cec:	mov	r7, #0
   10cf0:	b	10d50 <retira_duplicados@@Base+0x78>
   10cf4:	mov	r1, r4
   10cf8:	mov	r0, r5
   10cfc:	bl	1147c <vetor_remove@@Base>
   10d00:	sub	r4, r4, #1
   10d04:	add	r4, r4, #1
   10d08:	mov	r0, r5
   10d0c:	bl	1130c <vetor_tamanho@@Base>
   10d10:	cmp	r0, r4
   10d14:	ble	10d4c <retira_duplicados@@Base+0x74>
   10d18:	mov	r1, r7
   10d1c:	mov	r0, r5
   10d20:	bl	1131c <vetor_elemento@@Base>
   10d24:	mov	r6, r0
   10d28:	mov	r1, r4
   10d2c:	mov	r0, r5
   10d30:	bl	1131c <vetor_elemento@@Base>
   10d34:	mov	r1, r0
   10d38:	mov	r0, r6
   10d3c:	bl	10b1c <strcmp@plt>
   10d40:	cmp	r0, #0
   10d44:	bne	10d04 <retira_duplicados@@Base+0x2c>
   10d48:	b	10cf4 <retira_duplicados@@Base+0x1c>
   10d4c:	mov	r7, r8
   10d50:	mov	r0, r5
   10d54:	bl	1130c <vetor_tamanho@@Base>
   10d58:	sub	r0, r0, #1
   10d5c:	cmp	r0, r7
   10d60:	ble	10d70 <retira_duplicados@@Base+0x98>
   10d64:	add	r8, r7, #1
   10d68:	mov	r4, r8
   10d6c:	b	10d08 <retira_duplicados@@Base+0x30>
   10d70:	ldrd	r4, [sp]
   10d74:	ldrd	r6, [sp, #8]
   10d78:	ldr	r8, [sp, #16]
   10d7c:	add	sp, sp, #20
   10d80:	pop	{pc}		; (ldr pc, [sp], #4)

00010d84 <interseta@@Base>:
   10d84:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10d88:	strd	r6, [sp, #8]
   10d8c:	strd	r8, [sp, #16]
   10d90:	strd	sl, [sp, #24]
   10d94:	str	lr, [sp, #32]
   10d98:	sub	sp, sp, #4
   10d9c:	mov	r8, r0
   10da0:	mov	r6, r1
   10da4:	bl	111b0 <vetor_novo@@Base>
   10da8:	mov	sl, r0
   10dac:	ldr	r4, [r8]
   10db0:	ldr	r3, [r8, #8]
   10db4:	cmp	r3, #0
   10db8:	cmple	r4, #0
   10dbc:	beq	10e40 <interseta@@Base+0xbc>
   10dc0:	mov	r9, #0
   10dc4:	mov	r5, r9
   10dc8:	mov	r7, r9
   10dcc:	b	10dfc <interseta@@Base+0x78>
   10dd0:	mov	r2, r9
   10dd4:	ldr	r1, [r4]
   10dd8:	mov	r0, sl
   10ddc:	bl	1135c <vetor_insere@@Base>
   10de0:	add	r9, r9, #1
   10de4:	ldr	r4, [r4, #4]
   10de8:	add	r5, r5, #1
   10dec:	ldr	r3, [r8, #8]
   10df0:	cmp	r3, r5
   10df4:	cmple	r4, #0
   10df8:	beq	10e40 <interseta@@Base+0xbc>
   10dfc:	mov	r2, r7
   10e00:	ldr	r1, [r4]
   10e04:	mov	r0, r6
   10e08:	bl	118e0 <lista_pesquisa@@Base>
   10e0c:	cmp	r0, #0
   10e10:	beq	10de4 <interseta@@Base+0x60>
   10e14:	ldr	fp, [r4]
   10e18:	mov	r2, r7
   10e1c:	mov	r1, fp
   10e20:	mov	r0, r6
   10e24:	bl	118e0 <lista_pesquisa@@Base>
   10e28:	ldr	r1, [r0]
   10e2c:	mov	r0, fp
   10e30:	bl	10b1c <strcmp@plt>
   10e34:	cmp	r0, #0
   10e38:	bne	10de4 <interseta@@Base+0x60>
   10e3c:	b	10dd0 <interseta@@Base+0x4c>
   10e40:	mov	r0, sl
   10e44:	add	sp, sp, #4
   10e48:	ldrd	r4, [sp]
   10e4c:	ldrd	r6, [sp, #8]
   10e50:	ldrd	r8, [sp, #16]
   10e54:	ldrd	sl, [sp, #24]
   10e58:	add	sp, sp, #32
   10e5c:	pop	{pc}		; (ldr pc, [sp], #4)

00010e60 <anteriores@@Base>:
   10e60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10e64:	strd	r6, [sp, #8]
   10e68:	strd	r8, [sp, #16]
   10e6c:	str	sl, [sp, #24]
   10e70:	str	lr, [sp, #28]
   10e74:	mov	r4, r0
   10e78:	mov	r6, r1
   10e7c:	bl	111b0 <vetor_novo@@Base>
   10e80:	mov	r9, r0
   10e84:	ldr	r4, [r4]
   10e88:	cmp	r4, #0
   10e8c:	beq	10ee4 <anteriores@@Base+0x84>
   10e90:	mov	r8, #10
   10e94:	mov	r7, #0
   10e98:	b	10eb8 <anteriores@@Base+0x58>
   10e9c:	ldr	r2, [r9]
   10ea0:	ldr	r1, [r4]
   10ea4:	mov	r0, r9
   10ea8:	bl	1135c <vetor_insere@@Base>
   10eac:	ldr	r4, [r4, #4]
   10eb0:	cmp	r4, #0
   10eb4:	beq	10ee4 <anteriores@@Base+0x84>
   10eb8:	ldr	r5, [r4]
   10ebc:	mov	r0, r5
   10ec0:	bl	10bb8 <strlen@plt>
   10ec4:	sub	r0, r0, #5
   10ec8:	mov	r2, r8
   10ecc:	mov	r1, r7
   10ed0:	add	r0, r5, r0
   10ed4:	bl	10b28 <strtol@plt>
   10ed8:	cmp	r6, r0
   10edc:	ble	10eac <anteriores@@Base+0x4c>
   10ee0:	b	10e9c <anteriores@@Base+0x3c>
   10ee4:	mov	r0, r9
   10ee8:	ldrd	r4, [sp]
   10eec:	ldrd	r6, [sp, #8]
   10ef0:	ldrd	r8, [sp, #16]
   10ef4:	ldr	sl, [sp, #24]
   10ef8:	add	sp, sp, #28
   10efc:	pop	{pc}		; (ldr pc, [sp], #4)

00010f00 <lerAtores@@Base>:
   10f00:	strd	r4, [sp, #-20]!	; 0xffffffec
   10f04:	strd	r6, [sp, #8]
   10f08:	str	lr, [sp, #16]
   10f0c:	sub	sp, sp, #260	; 0x104
   10f10:	subs	r4, r0, #0
   10f14:	moveq	r5, r4
   10f18:	beq	10f78 <lerAtores@@Base+0x78>
   10f1c:	bl	111b0 <vetor_novo@@Base>
   10f20:	mov	r5, r0
   10f24:	mov	r7, #255	; 0xff
   10f28:	mov	r6, #10
   10f2c:	mov	r0, r4
   10f30:	bl	10bac <feof@plt>
   10f34:	cmp	r0, #0
   10f38:	bne	10f78 <lerAtores@@Base+0x78>
   10f3c:	mov	r2, r4
   10f40:	mov	r1, r7
   10f44:	mov	r0, sp
   10f48:	bl	10b58 <fgets@plt>
   10f4c:	mov	r1, r6
   10f50:	mov	r0, sp
   10f54:	bl	10bc4 <strchr@plt>
   10f58:	cmp	r0, #0
   10f5c:	movne	r3, #0
   10f60:	strbne	r3, [r0]
   10f64:	ldr	r2, [r5]
   10f68:	mov	r1, sp
   10f6c:	mov	r0, r5
   10f70:	bl	1135c <vetor_insere@@Base>
   10f74:	b	10f2c <lerAtores@@Base+0x2c>
   10f78:	mov	r0, r5
   10f7c:	add	sp, sp, #260	; 0x104
   10f80:	ldrd	r4, [sp]
   10f84:	ldrd	r6, [sp, #8]
   10f88:	add	sp, sp, #16
   10f8c:	pop	{pc}		; (ldr pc, [sp], #4)

00010f90 <lerFilmes@@Base>:
   10f90:	strd	r4, [sp, #-20]!	; 0xffffffec
   10f94:	strd	r6, [sp, #8]
   10f98:	str	lr, [sp, #16]
   10f9c:	sub	sp, sp, #260	; 0x104
   10fa0:	subs	r4, r0, #0
   10fa4:	moveq	r5, r4
   10fa8:	beq	11008 <lerFilmes@@Base+0x78>
   10fac:	bl	116e4 <lista_nova@@Base>
   10fb0:	mov	r5, r0
   10fb4:	mov	r7, #255	; 0xff
   10fb8:	mov	r6, #10
   10fbc:	mov	r0, r4
   10fc0:	bl	10bac <feof@plt>
   10fc4:	cmp	r0, #0
   10fc8:	bne	11008 <lerFilmes@@Base+0x78>
   10fcc:	mov	r2, r4
   10fd0:	mov	r1, r7
   10fd4:	mov	r0, sp
   10fd8:	bl	10b58 <fgets@plt>
   10fdc:	mov	r1, r6
   10fe0:	mov	r0, sp
   10fe4:	bl	10bc4 <strchr@plt>
   10fe8:	cmp	r0, #0
   10fec:	movne	r3, #0
   10ff0:	strbne	r3, [r0]
   10ff4:	mov	r2, #0
   10ff8:	mov	r1, sp
   10ffc:	mov	r0, r5
   11000:	bl	1179c <lista_insere@@Base>
   11004:	b	10fbc <lerFilmes@@Base+0x2c>
   11008:	mov	r0, r5
   1100c:	add	sp, sp, #260	; 0x104
   11010:	ldrd	r4, [sp]
   11014:	ldrd	r6, [sp, #8]
   11018:	add	sp, sp, #16
   1101c:	pop	{pc}		; (ldr pc, [sp], #4)

00011020 <main@@Base>:
   11020:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11024:	strd	r6, [sp, #8]
   11028:	strd	r8, [sp, #16]
   1102c:	strd	sl, [sp, #24]
   11030:	str	lr, [sp, #32]
   11034:	sub	sp, sp, #4
   11038:	movw	r4, #6968	; 0x1b38
   1103c:	movt	r4, #1
   11040:	mov	r1, r4
   11044:	movw	r0, #6972	; 0x1b3c
   11048:	movt	r0, #1
   1104c:	bl	10b40 <fopen@plt>
   11050:	mov	r8, r0
   11054:	mov	r1, r4
   11058:	movw	r0, #6984	; 0x1b48
   1105c:	movt	r0, #1
   11060:	bl	10b40 <fopen@plt>
   11064:	mov	r7, r0
   11068:	mov	r1, r4
   1106c:	movw	r0, #6996	; 0x1b54
   11070:	movt	r0, #1
   11074:	bl	10b40 <fopen@plt>
   11078:	mov	r6, r0
   1107c:	mov	r0, r8
   11080:	bl	10f00 <lerAtores@@Base>
   11084:	mov	r4, r0
   11088:	mov	r0, r7
   1108c:	bl	10f90 <lerFilmes@@Base>
   11090:	mov	r5, r0
   11094:	mov	r0, r6
   11098:	bl	10f90 <lerFilmes@@Base>
   1109c:	mov	r9, r0
   110a0:	mov	r0, r4
   110a4:	bl	1130c <vetor_tamanho@@Base>
   110a8:	mov	r1, r0
   110ac:	movw	r0, #7008	; 0x1b60
   110b0:	movt	r0, #1
   110b4:	bl	10b34 <printf@plt>
   110b8:	mov	r0, r4
   110bc:	bl	10cd8 <retira_duplicados@@Base>
   110c0:	mov	r0, r4
   110c4:	bl	1130c <vetor_tamanho@@Base>
   110c8:	mov	r1, r0
   110cc:	movw	r0, #7028	; 0x1b74
   110d0:	movt	r0, #1
   110d4:	bl	10b34 <printf@plt>
   110d8:	mov	r1, r9
   110dc:	mov	r0, r5
   110e0:	bl	10d84 <interseta@@Base>
   110e4:	subs	fp, r0, #0
   110e8:	beq	11190 <main@@Base+0x170>
   110ec:	mov	r0, fp
   110f0:	bl	1130c <vetor_tamanho@@Base>
   110f4:	mov	r1, r0
   110f8:	movw	r0, #7056	; 0x1b90
   110fc:	movt	r0, #1
   11100:	bl	10b34 <printf@plt>
   11104:	mov	r1, #2000	; 0x7d0
   11108:	mov	r0, r5
   1110c:	bl	10e60 <anteriores@@Base>
   11110:	subs	sl, r0, #0
   11114:	beq	111a0 <main@@Base+0x180>
   11118:	mov	r0, sl
   1111c:	bl	1130c <vetor_tamanho@@Base>
   11120:	mov	r1, r0
   11124:	movw	r0, #7112	; 0x1bc8
   11128:	movt	r0, #1
   1112c:	bl	10b34 <printf@plt>
   11130:	mov	r0, r4
   11134:	bl	111e4 <vetor_apaga@@Base>
   11138:	mov	r0, fp
   1113c:	bl	111e4 <vetor_apaga@@Base>
   11140:	mov	r0, sl
   11144:	bl	111e4 <vetor_apaga@@Base>
   11148:	mov	r0, r5
   1114c:	bl	11718 <lista_apaga@@Base>
   11150:	mov	r0, r9
   11154:	bl	11718 <lista_apaga@@Base>
   11158:	mov	r0, r8
   1115c:	bl	10bd0 <fclose@plt>
   11160:	mov	r0, r7
   11164:	bl	10bd0 <fclose@plt>
   11168:	mov	r0, r6
   1116c:	bl	10bd0 <fclose@plt>
   11170:	mov	r0, #0
   11174:	add	sp, sp, #4
   11178:	ldrd	r4, [sp]
   1117c:	ldrd	r6, [sp, #8]
   11180:	ldrd	r8, [sp, #16]
   11184:	ldrd	sl, [sp, #24]
   11188:	add	sp, sp, #32
   1118c:	pop	{pc}		; (ldr pc, [sp], #4)
   11190:	movw	r0, #7088	; 0x1bb0
   11194:	movt	r0, #1
   11198:	bl	10b7c <puts@plt>
   1119c:	b	11104 <main@@Base+0xe4>
   111a0:	movw	r0, #7148	; 0x1bec
   111a4:	movt	r0, #1
   111a8:	bl	10b7c <puts@plt>
   111ac:	b	11130 <main@@Base+0x110>

000111b0 <vetor_novo@@Base>:
   111b0:	str	r4, [sp, #-8]!
   111b4:	str	lr, [sp, #4]
   111b8:	mov	r0, #12
   111bc:	bl	10b88 <malloc@plt>
   111c0:	cmp	r0, #0
   111c4:	beq	111d8 <vetor_novo@@Base+0x28>
   111c8:	mov	r3, #0
   111cc:	str	r3, [r0]
   111d0:	str	r3, [r0, #4]
   111d4:	str	r3, [r0, #8]
   111d8:	ldr	r4, [sp]
   111dc:	add	sp, sp, #4
   111e0:	pop	{pc}		; (ldr pc, [sp], #4)

000111e4 <vetor_apaga@@Base>:
   111e4:	strd	r4, [sp, #-16]!
   111e8:	str	r6, [sp, #8]
   111ec:	str	lr, [sp, #12]
   111f0:	subs	r5, r0, #0
   111f4:	beq	11234 <vetor_apaga@@Base+0x50>
   111f8:	ldr	r3, [r5]
   111fc:	cmp	r3, #0
   11200:	ble	11224 <vetor_apaga@@Base+0x40>
   11204:	mov	r4, #0
   11208:	ldr	r3, [r5, #8]
   1120c:	ldr	r0, [r3, r4, lsl #2]
   11210:	bl	10b4c <free@plt>
   11214:	add	r4, r4, #1
   11218:	ldr	r3, [r5]
   1121c:	cmp	r3, r4
   11220:	bgt	11208 <vetor_apaga@@Base+0x24>
   11224:	ldr	r0, [r5, #8]
   11228:	bl	10b4c <free@plt>
   1122c:	mov	r0, r5
   11230:	bl	10b4c <free@plt>
   11234:	ldrd	r4, [sp]
   11238:	ldr	r6, [sp, #8]
   1123c:	add	sp, sp, #12
   11240:	pop	{pc}		; (ldr pc, [sp], #4)

00011244 <vetor_atribui@@Base>:
   11244:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11248:	strd	r6, [sp, #8]
   1124c:	strd	r8, [sp, #16]
   11250:	str	sl, [sp, #24]
   11254:	str	lr, [sp, #28]
   11258:	mov	r5, r0
   1125c:	cmp	r0, #0
   11260:	lsrne	r0, r1, #31
   11264:	moveq	r0, #1
   11268:	cmp	r0, #0
   1126c:	bne	112f4 <vetor_atribui@@Base+0xb0>
   11270:	ldr	r3, [r5]
   11274:	cmp	r3, r1
   11278:	ble	112fc <vetor_atribui@@Base+0xb8>
   1127c:	mov	r6, r2
   11280:	mov	r4, r1
   11284:	mov	r0, r2
   11288:	bl	10bb8 <strlen@plt>
   1128c:	mov	r9, r0
   11290:	ldr	r7, [r5, #8]
   11294:	ldr	r8, [r7, r4, lsl #2]
   11298:	mov	r0, r8
   1129c:	bl	10bb8 <strlen@plt>
   112a0:	cmp	r0, r9
   112a4:	bcs	112c8 <vetor_atribui@@Base+0x84>
   112a8:	add	r1, r9, #1
   112ac:	mov	r0, r8
   112b0:	bl	10b64 <realloc@plt>
   112b4:	str	r0, [r7, r4, lsl #2]
   112b8:	ldr	r3, [r5, #8]
   112bc:	ldr	r3, [r3, r4, lsl #2]
   112c0:	cmp	r3, #0
   112c4:	beq	11304 <vetor_atribui@@Base+0xc0>
   112c8:	ldr	r3, [r5, #8]
   112cc:	mov	r1, r6
   112d0:	ldr	r0, [r3, r4, lsl #2]
   112d4:	bl	10b70 <strcpy@plt>
   112d8:	mov	r0, r4
   112dc:	ldrd	r4, [sp]
   112e0:	ldrd	r6, [sp, #8]
   112e4:	ldrd	r8, [sp, #16]
   112e8:	ldr	sl, [sp, #24]
   112ec:	add	sp, sp, #28
   112f0:	pop	{pc}		; (ldr pc, [sp], #4)
   112f4:	mvn	r0, #0
   112f8:	b	112dc <vetor_atribui@@Base+0x98>
   112fc:	mvn	r0, #0
   11300:	b	112dc <vetor_atribui@@Base+0x98>
   11304:	mvn	r0, #0
   11308:	b	112dc <vetor_atribui@@Base+0x98>

0001130c <vetor_tamanho@@Base>:
   1130c:	cmp	r0, #0
   11310:	ldrne	r0, [r0]
   11314:	mvneq	r0, #0
   11318:	bx	lr

0001131c <vetor_elemento@@Base>:
   1131c:	mov	r3, r0
   11320:	cmp	r0, #0
   11324:	lsrne	r0, r1, #31
   11328:	moveq	r0, #1
   1132c:	cmp	r0, #0
   11330:	bne	1134c <vetor_elemento@@Base+0x30>
   11334:	ldr	r2, [r3]
   11338:	cmp	r2, r1
   1133c:	ble	11354 <vetor_elemento@@Base+0x38>
   11340:	ldr	r3, [r3, #8]
   11344:	ldr	r0, [r3, r1, lsl #2]
   11348:	bx	lr
   1134c:	mov	r0, #0
   11350:	bx	lr
   11354:	mov	r0, #0
   11358:	bx	lr

0001135c <vetor_insere@@Base>:
   1135c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11360:	strd	r6, [sp, #8]
   11364:	str	r8, [sp, #16]
   11368:	str	lr, [sp, #20]
   1136c:	mov	r4, r0
   11370:	cmp	r0, #0
   11374:	lsrne	r0, r2, #31
   11378:	moveq	r0, #1
   1137c:	cmp	r0, #0
   11380:	bne	11464 <vetor_insere@@Base+0x108>
   11384:	ldr	r3, [r4]
   11388:	cmp	r3, r2
   1138c:	blt	1146c <vetor_insere@@Base+0x110>
   11390:	mov	r6, r2
   11394:	mov	r7, r1
   11398:	ldr	r1, [r4, #4]
   1139c:	cmp	r3, r1
   113a0:	beq	11434 <vetor_insere@@Base+0xd8>
   113a4:	ldr	ip, [r4]
   113a8:	sub	ip, ip, #1
   113ac:	cmp	r6, ip
   113b0:	bgt	113dc <vetor_insere@@Base+0x80>
   113b4:	lsl	r3, ip, #2
   113b8:	sub	r1, r6, #1
   113bc:	ldr	lr, [r4, #8]
   113c0:	add	r5, lr, r3
   113c4:	ldr	r2, [lr, r3]
   113c8:	str	r2, [r5, #4]
   113cc:	sub	ip, ip, #1
   113d0:	sub	r3, r3, #4
   113d4:	cmp	ip, r1
   113d8:	bne	113bc <vetor_insere@@Base+0x60>
   113dc:	mov	r0, r7
   113e0:	bl	10bb8 <strlen@plt>
   113e4:	ldr	r5, [r4, #8]
   113e8:	mov	r1, #1
   113ec:	add	r0, r0, r1
   113f0:	bl	10b10 <calloc@plt>
   113f4:	str	r0, [r5, r6, lsl #2]
   113f8:	ldr	r3, [r4, #8]
   113fc:	ldr	r0, [r3, r6, lsl #2]
   11400:	cmp	r0, #0
   11404:	beq	11474 <vetor_insere@@Base+0x118>
   11408:	mov	r1, r7
   1140c:	bl	10b70 <strcpy@plt>
   11410:	ldr	r3, [r4]
   11414:	add	r3, r3, #1
   11418:	str	r3, [r4]
   1141c:	mov	r0, r6
   11420:	ldrd	r4, [sp]
   11424:	ldrd	r6, [sp, #8]
   11428:	ldr	r8, [sp, #16]
   1142c:	add	sp, sp, #20
   11430:	pop	{pc}		; (ldr pc, [sp], #4)
   11434:	cmp	r1, #0
   11438:	lslne	r1, r1, #1
   1143c:	moveq	r1, #1
   11440:	str	r1, [r4, #4]
   11444:	lsl	r1, r1, #2
   11448:	ldr	r0, [r4, #8]
   1144c:	bl	10b64 <realloc@plt>
   11450:	str	r0, [r4, #8]
   11454:	cmp	r0, #0
   11458:	bne	113a4 <vetor_insere@@Base+0x48>
   1145c:	mvn	r0, #0
   11460:	b	11420 <vetor_insere@@Base+0xc4>
   11464:	mvn	r0, #0
   11468:	b	11420 <vetor_insere@@Base+0xc4>
   1146c:	mvn	r0, #0
   11470:	b	11420 <vetor_insere@@Base+0xc4>
   11474:	mvn	r0, #0
   11478:	b	11420 <vetor_insere@@Base+0xc4>

0001147c <vetor_remove@@Base>:
   1147c:	strd	r4, [sp, #-16]!
   11480:	str	r6, [sp, #8]
   11484:	str	lr, [sp, #12]
   11488:	mov	r6, r0
   1148c:	cmp	r0, #0
   11490:	lsrne	r0, r1, #31
   11494:	moveq	r0, #1
   11498:	cmp	r0, #0
   1149c:	bne	11514 <vetor_remove@@Base+0x98>
   114a0:	ldr	r3, [r6]
   114a4:	cmp	r3, r1
   114a8:	ble	1151c <vetor_remove@@Base+0xa0>
   114ac:	mov	r5, r1
   114b0:	lsl	r4, r1, #2
   114b4:	ldr	r3, [r6, #8]
   114b8:	ldr	r0, [r3, r1, lsl #2]
   114bc:	bl	10b4c <free@plt>
   114c0:	add	r1, r5, #1
   114c4:	ldr	r2, [r6]
   114c8:	cmp	r1, r2
   114cc:	bge	114f8 <vetor_remove@@Base+0x7c>
   114d0:	add	r3, r4, #4
   114d4:	ldr	r2, [r6, #8]
   114d8:	add	r0, r2, r3
   114dc:	ldr	r2, [r2, r3]
   114e0:	str	r2, [r0, #-4]
   114e4:	add	r1, r1, #1
   114e8:	ldr	r2, [r6]
   114ec:	add	r3, r3, #4
   114f0:	cmp	r2, r1
   114f4:	bgt	114d4 <vetor_remove@@Base+0x58>
   114f8:	sub	r2, r2, #1
   114fc:	str	r2, [r6]
   11500:	mov	r0, #0
   11504:	ldrd	r4, [sp]
   11508:	ldr	r6, [sp, #8]
   1150c:	add	sp, sp, #12
   11510:	pop	{pc}		; (ldr pc, [sp], #4)
   11514:	mvn	r0, #0
   11518:	b	11504 <vetor_remove@@Base+0x88>
   1151c:	mvn	r0, #0
   11520:	b	11504 <vetor_remove@@Base+0x88>

00011524 <vetor_pesquisa@@Base>:
   11524:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11528:	strd	r6, [sp, #8]
   1152c:	str	r8, [sp, #16]
   11530:	str	lr, [sp, #20]
   11534:	cmp	r0, #0
   11538:	beq	11594 <vetor_pesquisa@@Base+0x70>
   1153c:	ldr	r7, [r0]
   11540:	cmp	r7, #0
   11544:	ble	1159c <vetor_pesquisa@@Base+0x78>
   11548:	mov	r6, r1
   1154c:	ldr	r5, [r0, #8]
   11550:	sub	r5, r5, #4
   11554:	mov	r4, #0
   11558:	mov	r1, r6
   1155c:	ldr	r0, [r5, #4]!
   11560:	bl	10b1c <strcmp@plt>
   11564:	cmp	r0, #0
   11568:	beq	1157c <vetor_pesquisa@@Base+0x58>
   1156c:	add	r4, r4, #1
   11570:	cmp	r4, r7
   11574:	bne	11558 <vetor_pesquisa@@Base+0x34>
   11578:	mvn	r4, #0
   1157c:	mov	r0, r4
   11580:	ldrd	r4, [sp]
   11584:	ldrd	r6, [sp, #8]
   11588:	ldr	r8, [sp, #16]
   1158c:	add	sp, sp, #20
   11590:	pop	{pc}		; (ldr pc, [sp], #4)
   11594:	mvn	r4, #0
   11598:	b	1157c <vetor_pesquisa@@Base+0x58>
   1159c:	mvn	r4, #0
   115a0:	b	1157c <vetor_pesquisa@@Base+0x58>

000115a4 <vetor_ordena@@Base>:
   115a4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115a8:	strd	r6, [sp, #8]
   115ac:	strd	r8, [sp, #16]
   115b0:	str	sl, [sp, #24]
   115b4:	str	lr, [sp, #28]
   115b8:	subs	r7, r0, #0
   115bc:	beq	1165c <vetor_ordena@@Base+0xb8>
   115c0:	ldr	r3, [r7]
   115c4:	cmp	r3, #1
   115c8:	ble	11664 <vetor_ordena@@Base+0xc0>
   115cc:	mov	sl, #4
   115d0:	mov	r9, #1
   115d4:	b	115f8 <vetor_ordena@@Base+0x54>
   115d8:	mov	r4, r9
   115dc:	ldr	r3, [r7, #8]
   115e0:	str	r8, [r3, r4, lsl #2]
   115e4:	add	r9, r9, #1
   115e8:	add	sl, sl, #4
   115ec:	ldr	r3, [r7]
   115f0:	cmp	r3, r9
   115f4:	ble	11640 <vetor_ordena@@Base+0x9c>
   115f8:	ldr	r3, [r7, #8]
   115fc:	ldr	r8, [r3, sl]
   11600:	cmp	r9, #0
   11604:	ble	115d8 <vetor_ordena@@Base+0x34>
   11608:	sub	r5, sl, #4
   1160c:	mov	r4, r9
   11610:	ldr	r6, [r7, #8]
   11614:	ldr	r1, [r6, r5]
   11618:	mov	r0, r8
   1161c:	bl	10b1c <strcmp@plt>
   11620:	cmp	r0, #0
   11624:	bge	115dc <vetor_ordena@@Base+0x38>
   11628:	ldr	r3, [r6, r5]
   1162c:	str	r3, [r6, r4, lsl #2]
   11630:	sub	r5, r5, #4
   11634:	subs	r4, r4, #1
   11638:	bne	11610 <vetor_ordena@@Base+0x6c>
   1163c:	b	115dc <vetor_ordena@@Base+0x38>
   11640:	mov	r0, #0
   11644:	ldrd	r4, [sp]
   11648:	ldrd	r6, [sp, #8]
   1164c:	ldrd	r8, [sp, #16]
   11650:	ldr	sl, [sp, #24]
   11654:	add	sp, sp, #28
   11658:	pop	{pc}		; (ldr pc, [sp], #4)
   1165c:	mvn	r0, #0
   11660:	b	11644 <vetor_ordena@@Base+0xa0>
   11664:	mov	r0, #0
   11668:	b	11644 <vetor_ordena@@Base+0xa0>

0001166c <novo_str@@Base>:
   1166c:	strd	r4, [sp, #-16]!
   11670:	str	r6, [sp, #8]
   11674:	str	lr, [sp, #12]
   11678:	mov	r6, r0
   1167c:	mov	r0, #12
   11680:	bl	10b88 <malloc@plt>
   11684:	subs	r4, r0, #0
   11688:	beq	116c0 <novo_str@@Base+0x54>
   1168c:	mov	r0, r6
   11690:	bl	10bb8 <strlen@plt>
   11694:	add	r0, r0, #1
   11698:	bl	10b88 <malloc@plt>
   1169c:	mov	r5, r0
   116a0:	str	r0, [r4]
   116a4:	cmp	r0, #0
   116a8:	beq	116d4 <novo_str@@Base+0x68>
   116ac:	mov	r1, r6
   116b0:	bl	10b70 <strcpy@plt>
   116b4:	mov	r3, #0
   116b8:	str	r3, [r4, #4]
   116bc:	str	r3, [r4, #8]
   116c0:	mov	r0, r4
   116c4:	ldrd	r4, [sp]
   116c8:	ldr	r6, [sp, #8]
   116cc:	add	sp, sp, #12
   116d0:	pop	{pc}		; (ldr pc, [sp], #4)
   116d4:	mov	r0, r4
   116d8:	bl	10b4c <free@plt>
   116dc:	mov	r4, r5
   116e0:	b	116c0 <novo_str@@Base+0x54>

000116e4 <lista_nova@@Base>:
   116e4:	str	r4, [sp, #-8]!
   116e8:	str	lr, [sp, #4]
   116ec:	mov	r0, #12
   116f0:	bl	10b88 <malloc@plt>
   116f4:	cmp	r0, #0
   116f8:	beq	1170c <lista_nova@@Base+0x28>
   116fc:	mov	r3, #0
   11700:	str	r3, [r0]
   11704:	str	r3, [r0, #4]
   11708:	str	r3, [r0, #8]
   1170c:	ldr	r4, [sp]
   11710:	add	sp, sp, #4
   11714:	pop	{pc}		; (ldr pc, [sp], #4)

00011718 <lista_apaga@@Base>:
   11718:	strd	r4, [sp, #-16]!
   1171c:	str	r6, [sp, #8]
   11720:	str	lr, [sp, #12]
   11724:	subs	r5, r0, #0
   11728:	beq	11764 <lista_apaga@@Base+0x4c>
   1172c:	ldr	r4, [r5]
   11730:	cmp	r4, #0
   11734:	beq	1175c <lista_apaga@@Base+0x44>
   11738:	ldr	r3, [r4, #4]
   1173c:	str	r3, [r5]
   11740:	ldr	r0, [r4]
   11744:	bl	10b4c <free@plt>
   11748:	mov	r0, r4
   1174c:	bl	10b4c <free@plt>
   11750:	ldr	r4, [r5]
   11754:	cmp	r4, #0
   11758:	bne	11738 <lista_apaga@@Base+0x20>
   1175c:	mov	r0, r5
   11760:	bl	10b4c <free@plt>
   11764:	ldrd	r4, [sp]
   11768:	ldr	r6, [sp, #8]
   1176c:	add	sp, sp, #12
   11770:	pop	{pc}		; (ldr pc, [sp], #4)

00011774 <lista_tamanho@@Base>:
   11774:	cmp	r0, #0
   11778:	ldrne	r0, [r0, #8]
   1177c:	mvneq	r0, #0
   11780:	bx	lr

00011784 <lista_inicio@@Base>:
   11784:	cmp	r0, #0
   11788:	ldrne	r0, [r0]
   1178c:	bx	lr

00011790 <lista_fim@@Base>:
   11790:	cmp	r0, #0
   11794:	ldrne	r0, [r0, #4]
   11798:	bx	lr

0001179c <lista_insere@@Base>:
   1179c:	cmp	r1, #0
   117a0:	cmpne	r0, #0
   117a4:	beq	11854 <lista_insere@@Base+0xb8>
   117a8:	strd	r4, [sp, #-16]!
   117ac:	str	r6, [sp, #8]
   117b0:	str	lr, [sp, #12]
   117b4:	mov	r5, r0
   117b8:	mov	r0, r1
   117bc:	mov	r4, r2
   117c0:	bl	1166c <novo_str@@Base>
   117c4:	cmp	r0, #0
   117c8:	beq	11804 <lista_insere@@Base+0x68>
   117cc:	ldr	r3, [r5, #8]
   117d0:	add	r3, r3, #1
   117d4:	str	r3, [r5, #8]
   117d8:	cmp	r4, #0
   117dc:	beq	11814 <lista_insere@@Base+0x78>
   117e0:	ldr	r3, [r5]
   117e4:	cmp	r3, r4
   117e8:	beq	11840 <lista_insere@@Base+0xa4>
   117ec:	ldr	r3, [r4, #8]
   117f0:	str	r3, [r0, #8]
   117f4:	str	r4, [r0, #4]
   117f8:	ldr	r3, [r4, #8]
   117fc:	str	r0, [r3, #4]
   11800:	str	r0, [r4, #8]
   11804:	ldrd	r4, [sp]
   11808:	ldr	r6, [sp, #8]
   1180c:	add	sp, sp, #12
   11810:	pop	{pc}		; (ldr pc, [sp], #4)
   11814:	ldr	r3, [r5]
   11818:	cmp	r3, #0
   1181c:	streq	r0, [r5, #4]
   11820:	streq	r0, [r5]
   11824:	beq	11804 <lista_insere@@Base+0x68>
   11828:	ldr	r3, [r5, #4]
   1182c:	str	r3, [r0, #8]
   11830:	ldr	r3, [r5, #4]
   11834:	str	r0, [r3, #4]
   11838:	str	r0, [r5, #4]
   1183c:	b	11804 <lista_insere@@Base+0x68>
   11840:	str	r4, [r0, #4]
   11844:	ldr	r3, [r5]
   11848:	str	r0, [r3, #8]
   1184c:	str	r0, [r5]
   11850:	b	11804 <lista_insere@@Base+0x68>
   11854:	mov	r0, #0
   11858:	bx	lr

0001185c <lista_remove@@Base>:
   1185c:	strd	r4, [sp, #-16]!
   11860:	str	r6, [sp, #8]
   11864:	str	lr, [sp, #12]
   11868:	cmp	r1, #0
   1186c:	cmpne	r0, #0
   11870:	moveq	r5, #0
   11874:	beq	118cc <lista_remove@@Base+0x70>
   11878:	mov	r4, r1
   1187c:	ldr	r2, [r0, #8]
   11880:	sub	r2, r2, #1
   11884:	str	r2, [r0, #8]
   11888:	ldr	r2, [r1, #8]
   1188c:	cmp	r2, #0
   11890:	ldrne	r1, [r1, #4]
   11894:	strne	r1, [r2, #4]
   11898:	ldreq	r2, [r4, #4]
   1189c:	streq	r2, [r0]
   118a0:	ldr	r2, [r4, #4]
   118a4:	cmp	r2, #0
   118a8:	ldrne	r1, [r4, #8]
   118ac:	strne	r1, [r2, #8]
   118b0:	ldreq	r2, [r4, #8]
   118b4:	streq	r2, [r0, #4]
   118b8:	ldr	r5, [r4, #4]
   118bc:	ldr	r0, [r4]
   118c0:	bl	10b4c <free@plt>
   118c4:	mov	r0, r4
   118c8:	bl	10b4c <free@plt>
   118cc:	mov	r0, r5
   118d0:	ldrd	r4, [sp]
   118d4:	ldr	r6, [sp, #8]
   118d8:	add	sp, sp, #12
   118dc:	pop	{pc}		; (ldr pc, [sp], #4)

000118e0 <lista_pesquisa@@Base>:
   118e0:	strd	r4, [sp, #-16]!
   118e4:	str	r6, [sp, #8]
   118e8:	str	lr, [sp, #12]
   118ec:	cmp	r1, #0
   118f0:	cmpne	r0, #0
   118f4:	moveq	r4, #0
   118f8:	beq	11940 <lista_pesquisa@@Base+0x60>
   118fc:	mov	r5, r1
   11900:	cmp	r2, #1
   11904:	movhi	r4, #0
   11908:	bhi	11940 <lista_pesquisa@@Base+0x60>
   1190c:	cmp	r2, #0
   11910:	bne	11954 <lista_pesquisa@@Base+0x74>
   11914:	ldr	r4, [r0]
   11918:	cmp	r4, #0
   1191c:	beq	11940 <lista_pesquisa@@Base+0x60>
   11920:	mov	r1, r5
   11924:	ldr	r0, [r4]
   11928:	bl	10b1c <strcmp@plt>
   1192c:	cmp	r0, #0
   11930:	beq	11940 <lista_pesquisa@@Base+0x60>
   11934:	ldr	r4, [r4, #4]
   11938:	cmp	r4, #0
   1193c:	bne	11920 <lista_pesquisa@@Base+0x40>
   11940:	mov	r0, r4
   11944:	ldrd	r4, [sp]
   11948:	ldr	r6, [sp, #8]
   1194c:	add	sp, sp, #12
   11950:	pop	{pc}		; (ldr pc, [sp], #4)
   11954:	ldr	r4, [r0, #4]
   11958:	cmp	r4, #0
   1195c:	beq	11940 <lista_pesquisa@@Base+0x60>
   11960:	mov	r1, r5
   11964:	ldr	r0, [r4]
   11968:	bl	10b1c <strcmp@plt>
   1196c:	cmp	r0, #0
   11970:	beq	11940 <lista_pesquisa@@Base+0x60>
   11974:	ldr	r4, [r4, #8]
   11978:	cmp	r4, #0
   1197c:	bne	11960 <lista_pesquisa@@Base+0x80>
   11980:	b	11940 <lista_pesquisa@@Base+0x60>

00011984 <lista_ordena@@Base>:
   11984:	cmp	r0, #0
   11988:	beq	11a08 <lista_ordena@@Base+0x84>
   1198c:	strd	r4, [sp, #-16]!
   11990:	str	r6, [sp, #8]
   11994:	str	lr, [sp, #12]
   11998:	ldr	r6, [r0]
   1199c:	ldr	r4, [r6, #4]
   119a0:	cmp	r4, #0
   119a4:	moveq	r0, #0
   119a8:	bne	119c0 <lista_ordena@@Base+0x3c>
   119ac:	b	11a14 <lista_ordena@@Base+0x90>
   119b0:	ldr	r6, [r6, #4]
   119b4:	ldr	r4, [r6, #4]
   119b8:	cmp	r4, #0
   119bc:	beq	11a10 <lista_ordena@@Base+0x8c>
   119c0:	cmp	r4, #0
   119c4:	movne	r5, r6
   119c8:	beq	119b0 <lista_ordena@@Base+0x2c>
   119cc:	ldr	r1, [r5]
   119d0:	ldr	r0, [r4]
   119d4:	bl	10b1c <strcmp@plt>
   119d8:	cmp	r0, #0
   119dc:	movlt	r5, r4
   119e0:	ldr	r4, [r4, #4]
   119e4:	cmp	r4, #0
   119e8:	bne	119cc <lista_ordena@@Base+0x48>
   119ec:	cmp	r5, r6
   119f0:	beq	119b0 <lista_ordena@@Base+0x2c>
   119f4:	ldr	r3, [r6]
   119f8:	ldr	r2, [r5]
   119fc:	str	r2, [r6]
   11a00:	str	r3, [r5]
   11a04:	b	119b0 <lista_ordena@@Base+0x2c>
   11a08:	mvn	r0, #0
   11a0c:	bx	lr
   11a10:	mov	r0, #0
   11a14:	ldrd	r4, [sp]
   11a18:	ldr	r6, [sp, #8]
   11a1c:	add	sp, sp, #12
   11a20:	pop	{pc}		; (ldr pc, [sp], #4)

00011a24 <lista_inverte@@Base>:
   11a24:	subs	r1, r0, #0
   11a28:	beq	11ab8 <lista_inverte@@Base+0x94>
   11a2c:	ldr	r2, [r1, #8]
   11a30:	cmp	r2, #1
   11a34:	ble	11ac0 <lista_inverte@@Base+0x9c>
   11a38:	ldr	r3, [r1]
   11a3c:	ldr	r3, [r3, #4]
   11a40:	cmp	r2, #2
   11a44:	ble	11a8c <lista_inverte@@Base+0x68>
   11a48:	mov	r0, #0
   11a4c:	ldr	ip, [r3, #8]
   11a50:	ldr	r2, [r3, #4]
   11a54:	str	r2, [ip, #4]
   11a58:	ldr	ip, [r3, #8]
   11a5c:	str	ip, [r2, #8]
   11a60:	ldr	ip, [r3, #4]
   11a64:	ldr	r2, [r1]
   11a68:	str	r2, [r3, #4]
   11a6c:	str	r3, [r2, #8]
   11a70:	str	r3, [r1]
   11a74:	add	r0, r0, #1
   11a78:	mov	r3, ip
   11a7c:	ldr	r2, [r1, #8]
   11a80:	sub	r2, r2, #2
   11a84:	cmp	r2, r0
   11a88:	bgt	11a4c <lista_inverte@@Base+0x28>
   11a8c:	ldr	r3, [r1, #4]
   11a90:	ldr	r2, [r3, #8]
   11a94:	str	r2, [r1, #4]
   11a98:	mov	r0, #0
   11a9c:	str	r0, [r2, #4]
   11aa0:	str	r0, [r3, #8]
   11aa4:	ldr	r2, [r1]
   11aa8:	str	r2, [r3, #4]
   11aac:	str	r3, [r2, #8]
   11ab0:	str	r3, [r1]
   11ab4:	bx	lr
   11ab8:	mvn	r0, #0
   11abc:	bx	lr
   11ac0:	mov	r0, #0
   11ac4:	bx	lr

00011ac8 <__libc_csu_init@@Base>:
   11ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11acc:	mov	r7, r0
   11ad0:	ldr	r6, [pc, #72]	; 11b20 <__libc_csu_init@@Base+0x58>
   11ad4:	ldr	r5, [pc, #72]	; 11b24 <__libc_csu_init@@Base+0x5c>
   11ad8:	add	r6, pc, r6
   11adc:	add	r5, pc, r5
   11ae0:	sub	r6, r6, r5
   11ae4:	mov	r8, r1
   11ae8:	mov	r9, r2
   11aec:	bl	10af0 <calloc@plt-0x20>
   11af0:	asrs	r6, r6, #2
   11af4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11af8:	mov	r4, #0
   11afc:	add	r4, r4, #1
   11b00:	ldr	r3, [r5], #4
   11b04:	mov	r2, r9
   11b08:	mov	r1, r8
   11b0c:	mov	r0, r7
   11b10:	blx	r3
   11b14:	cmp	r6, r4
   11b18:	bne	11afc <__libc_csu_init@@Base+0x34>
   11b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b20:	andeq	r0, r1, r4, lsr r4
   11b24:	andeq	r0, r1, ip, lsr #8

00011b28 <__libc_csu_fini@@Base>:
   11b28:	bx	lr

Disassembly of section .fini:

00011b2c <.fini>:
   11b2c:	push	{r3, lr}
   11b30:	pop	{r3, pc}
