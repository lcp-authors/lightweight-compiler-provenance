
../repos/charybdis/modules/.libs/m_testline.so:     file format elf32-littlearm


Disassembly of section .init:

0000080c <_init>:
 80c:	push	{r3, lr}
 810:	bl	928 <call_weak_fn>
 814:	pop	{r3, pc}

Disassembly of section .plt:

00000818 <.plt>:
 818:	push	{lr}		; (str lr, [sp, #-4]!)
 81c:	ldr	lr, [pc, #4]	; 828 <.plt+0x10>
 820:	add	lr, pc, lr
 824:	ldr	pc, [lr, #8]!
 828:	.word	0x000117d8

0000082c <rb_current_time@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2008]!	; 0x7d8

00000838 <__cxa_finalize@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2000]!	; 0x7d0

00000844 <sendto_one@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #1992]!	; 0x7c8

00000850 <find_address_conf@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #1984]!	; 0x7c0

0000085c <parse_netmask@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #1976]!	; 0x7b8

00000868 <get_printable_kline@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #1968]!	; 0x7b0

00000874 <is_throttle_ip@plt>:
 874:	add	ip, pc, #0, 12
 878:	add	ip, ip, #69632	; 0x11000
 87c:	ldr	pc, [ip, #1960]!	; 0x7a8

00000880 <strcpy@plt>:
 880:	add	ip, pc, #0, 12
 884:	add	ip, ip, #69632	; 0x11000
 888:	ldr	pc, [ip, #1952]!	; 0x7a0

0000088c <find_nick_resv@plt>:
 88c:	add	ip, pc, #0, 12
 890:	add	ip, ip, #69632	; 0x11000
 894:	ldr	pc, [ip, #1944]!	; 0x798

00000898 <show_iline_prefix@plt>:
 898:	add	ip, pc, #0, 12
 89c:	add	ip, ip, #69632	; 0x11000
 8a0:	ldr	pc, [ip, #1936]!	; 0x790

000008a4 <__gmon_start__@plt>:
 8a4:	add	ip, pc, #0, 12
 8a8:	add	ip, ip, #69632	; 0x11000
 8ac:	ldr	pc, [ip, #1928]!	; 0x788

000008b0 <sendto_one_numeric@plt>:
 8b0:	add	ip, pc, #0, 12
 8b4:	add	ip, ip, #69632	; 0x11000
 8b8:	ldr	pc, [ip, #1920]!	; 0x780

000008bc <strlen@plt>:
 8bc:	add	ip, pc, #0, 12
 8c0:	add	ip, ip, #69632	; 0x11000
 8c4:	ldr	pc, [ip, #1912]!	; 0x778

000008c8 <strchr@plt>:
 8c8:	add	ip, pc, #0, 12
 8cc:	add	ip, ip, #69632	; 0x11000
 8d0:	ldr	pc, [ip, #1904]!	; 0x770

000008d4 <snprintf@plt>:
 8d4:	add	ip, pc, #0, 12
 8d8:	add	ip, ip, #69632	; 0x11000
 8dc:	ldr	pc, [ip, #1896]!	; 0x768

000008e0 <is_reject_ip@plt>:
 8e0:	add	ip, pc, #0, 12
 8e4:	add	ip, ip, #69632	; 0x11000
 8e8:	ldr	pc, [ip, #1888]!	; 0x760

000008ec <find_xline@plt>:
 8ec:	add	ip, pc, #0, 12
 8f0:	add	ip, ip, #69632	; 0x11000
 8f4:	ldr	pc, [ip, #1880]!	; 0x758

000008f8 <rb_strlcpy@plt>:
 8f8:	add	ip, pc, #0, 12
 8fc:	add	ip, ip, #69632	; 0x11000
 900:	ldr	pc, [ip, #1872]!	; 0x750

00000904 <privilegeset_in_set@plt>:
 904:	add	ip, pc, #0, 12
 908:	add	ip, ip, #69632	; 0x11000
 90c:	ldr	pc, [ip, #1864]!	; 0x748

00000910 <hash_find_resv@plt>:
 910:	add	ip, pc, #0, 12
 914:	add	ip, ip, #69632	; 0x11000
 918:	ldr	pc, [ip, #1856]!	; 0x740

0000091c <find_dline@plt>:
 91c:	add	ip, pc, #0, 12
 920:	add	ip, ip, #69632	; 0x11000
 924:	ldr	pc, [ip, #1848]!	; 0x738

Disassembly of section .text:

00000928 <call_weak_fn>:
     928:	ldr	r3, [pc, #20]	; 944 <call_weak_fn+0x1c>
     92c:	ldr	r2, [pc, #20]	; 948 <call_weak_fn+0x20>
     930:	add	r3, pc, r3
     934:	ldr	r2, [r3, r2]
     938:	cmp	r2, #0
     93c:	bxeq	lr
     940:	b	8a4 <__gmon_start__@plt>
     944:	.word	0x000116c8
     948:	.word	0x00000068

0000094c <deregister_tm_clones>:
     94c:	ldr	r0, [pc, #44]	; 980 <deregister_tm_clones+0x34>
     950:	ldr	r3, [pc, #44]	; 984 <deregister_tm_clones+0x38>
     954:	add	r0, pc, r0
     958:	add	r3, pc, r3
     95c:	cmp	r3, r0
     960:	ldr	r3, [pc, #32]	; 988 <deregister_tm_clones+0x3c>
     964:	add	r3, pc, r3
     968:	bxeq	lr
     96c:	ldr	r2, [pc, #24]	; 98c <deregister_tm_clones+0x40>
     970:	ldr	r3, [r3, r2]
     974:	cmp	r3, #0
     978:	bxeq	lr
     97c:	bx	r3
     980:	.word	0x000117dc
     984:	.word	0x000117d8
     988:	.word	0x00011694
     98c:	.word	0x00000064

00000990 <register_tm_clones>:
     990:	ldr	r0, [pc, #56]	; 9d0 <register_tm_clones+0x40>
     994:	ldr	r3, [pc, #56]	; 9d4 <register_tm_clones+0x44>
     998:	add	r0, pc, r0
     99c:	add	r3, pc, r3
     9a0:	sub	r1, r3, r0
     9a4:	ldr	r3, [pc, #44]	; 9d8 <register_tm_clones+0x48>
     9a8:	asr	r1, r1, #2
     9ac:	add	r3, pc, r3
     9b0:	add	r1, r1, r1, lsr #31
     9b4:	asrs	r1, r1, #1
     9b8:	bxeq	lr
     9bc:	ldr	r2, [pc, #24]	; 9dc <register_tm_clones+0x4c>
     9c0:	ldr	r3, [r3, r2]
     9c4:	cmp	r3, #0
     9c8:	bxeq	lr
     9cc:	bx	r3
     9d0:	.word	0x00011798
     9d4:	.word	0x00011794
     9d8:	.word	0x0001164c
     9dc:	.word	0x00000070

000009e0 <__do_global_dtors_aux>:
     9e0:	ldr	r3, [pc, #76]	; a34 <__do_global_dtors_aux+0x54>
     9e4:	ldr	r2, [pc, #76]	; a38 <__do_global_dtors_aux+0x58>
     9e8:	add	r3, pc, r3
     9ec:	add	r2, pc, r2
     9f0:	ldrb	r3, [r3]
     9f4:	cmp	r3, #0
     9f8:	bxne	lr
     9fc:	ldr	r3, [pc, #56]	; a3c <__do_global_dtors_aux+0x5c>
     a00:	push	{r4, lr}
     a04:	ldr	r3, [r2, r3]
     a08:	cmp	r3, #0
     a0c:	beq	a1c <__do_global_dtors_aux+0x3c>
     a10:	ldr	r3, [pc, #40]	; a40 <__do_global_dtors_aux+0x60>
     a14:	ldr	r0, [pc, r3]
     a18:	bl	838 <__cxa_finalize@plt>
     a1c:	bl	94c <deregister_tm_clones>
     a20:	ldr	r3, [pc, #28]	; a44 <__do_global_dtors_aux+0x64>
     a24:	mov	r2, #1
     a28:	add	r3, pc, r3
     a2c:	strb	r2, [r3]
     a30:	pop	{r4, pc}
     a34:	.word	0x00011748
     a38:	.word	0x0001160c
     a3c:	.word	0x00000060
     a40:	.word	0x0001165c
     a44:	.word	0x00011708

00000a48 <frame_dummy>:
     a48:	b	990 <register_tm_clones>

00000a4c <mo_testline>:
     a4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a50:	add	fp, sp, #28
     a54:	sub	sp, sp, #692	; 0x2b4
     a58:	ldr	r0, [r2, #24]
     a5c:	mov	r4, r2
     a60:	cmp	r0, #0
     a64:	beq	b08 <mo_testline+0xbc>
     a68:	ldr	r0, [r0, #36]	; 0x24
     a6c:	cmp	r0, #0
     a70:	beq	b08 <mo_testline+0xbc>
     a74:	ldr	r1, [pc, #1788]	; 1178 <mo_testline+0x72c>
     a78:	add	r1, pc, r1
     a7c:	bl	904 <privilegeset_in_set@plt>
     a80:	cmp	r0, #0
     a84:	beq	b08 <mo_testline+0xbc>
     a88:	ldr	sl, [fp, #8]
     a8c:	ldr	r6, [sl, #4]
     a90:	mov	r0, r6
     a94:	bl	8bc <strlen@plt>
     a98:	add	r0, r0, #8
     a9c:	mov	r5, sp
     aa0:	bic	r7, r0, #7
     aa4:	sub	r9, r5, r7
     aa8:	mov	sp, r9
     aac:	mov	r0, r9
     ab0:	mov	r1, r6
     ab4:	bl	880 <strcpy@plt>
     ab8:	ldrb	r0, [r5, -r7]
     abc:	ldr	r1, [pc, #1732]	; 1188 <mo_testline+0x73c>
     ac0:	ldr	r1, [pc, r1]
     ac4:	add	r0, r1, r0, lsl #2
     ac8:	ldrb	r0, [r0, #1]
     acc:	tst	r0, #2
     ad0:	bne	b44 <mo_testline+0xf8>
     ad4:	mov	r0, r9
     ad8:	mov	r1, #33	; 0x21
     adc:	bl	8c8 <strchr@plt>
     ae0:	mov	sl, #0
     ae4:	cmp	r0, #0
     ae8:	beq	b90 <mo_testline+0x144>
     aec:	mov	r7, r0
     af0:	mov	r0, #0
     af4:	strb	r0, [r7]
     af8:	ldrb	r0, [r7, #1]!
     afc:	cmp	r0, #0
     b00:	bne	b98 <mo_testline+0x14c>
     b04:	b	b3c <mo_testline+0xf0>
     b08:	sub	sp, sp, #8
     b0c:	ldr	r0, [pc, #1640]	; 117c <mo_testline+0x730>
     b10:	add	r3, r4, #88	; 0x58
     b14:	add	r0, pc, r0
     b18:	str	r0, [sp]
     b1c:	ldr	r0, [pc, #1628]	; 1180 <mo_testline+0x734>
     b20:	ldr	r0, [pc, r0]
     b24:	ldr	r1, [pc, #1624]	; 1184 <mo_testline+0x738>
     b28:	add	r2, r0, #88	; 0x58
     b2c:	add	r1, pc, r1
     b30:	mov	r0, r4
     b34:	bl	844 <sendto_one@plt>
     b38:	add	sp, sp, #8
     b3c:	sub	sp, fp, #28
     b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     b44:	mov	r0, r9
     b48:	bl	910 <hash_find_resv@plt>
     b4c:	add	r8, r4, #88	; 0x58
     b50:	cmp	r0, #0
     b54:	beq	bcc <mo_testline+0x180>
     b58:	ldr	r5, [r0, #36]	; 0x24
     b5c:	mov	r6, r0
     b60:	mov	r7, #81	; 0x51
     b64:	cmp	r5, #0
     b68:	movwne	r7, #113	; 0x71
     b6c:	beq	d2c <mo_testline+0x2e0>
     b70:	bl	82c <rb_current_time@plt>
     b74:	movw	r1, #34953	; 0x8889
     b78:	sub	r0, r5, r0
     b7c:	movt	r1, #34952	; 0x8888
     b80:	smmla	r0, r0, r1, r0
     b84:	asr	r1, r0, #5
     b88:	add	r0, r1, r0, lsr #31
     b8c:	b	d30 <mo_testline+0x2e4>
     b90:	mov	r7, r9
     b94:	mov	r9, #0
     b98:	mov	r0, r7
     b9c:	mov	r1, #64	; 0x40
     ba0:	bl	8c8 <strchr@plt>
     ba4:	cmp	r0, #0
     ba8:	beq	bf4 <mo_testline+0x1a8>
     bac:	mov	r6, r0
     bb0:	mov	r0, #0
     bb4:	mov	sl, r7
     bb8:	strb	r0, [r6]
     bbc:	ldrb	r0, [r6, #1]!
     bc0:	cmp	r0, #0
     bc4:	bne	bf8 <mo_testline+0x1ac>
     bc8:	b	b3c <mo_testline+0xf0>
     bcc:	ldr	r0, [sl, #4]
     bd0:	sub	sp, sp, #8
     bd4:	str	r0, [sp]
     bd8:	mov	r3, r8
     bdc:	ldr	r0, [pc, #1456]	; 1194 <mo_testline+0x748>
     be0:	ldr	r0, [pc, r0]
     be4:	ldr	r1, [pc, #1452]	; 1198 <mo_testline+0x74c>
     be8:	add	r2, r0, #88	; 0x58
     bec:	add	r1, pc, r1
     bf0:	b	b30 <mo_testline+0xe4>
     bf4:	mov	r6, r7
     bf8:	sub	r8, fp, #160	; 0xa0
     bfc:	sub	r2, fp, #188	; 0xbc
     c00:	mov	r0, r6
     c04:	mov	r1, r8
     c08:	bl	85c <parse_netmask@plt>
     c0c:	mov	r5, r0
     c10:	cmp	r0, #1
     c14:	beq	e44 <mo_testline+0x3f8>
     c18:	cmp	r5, #3
     c1c:	mov	r1, #2
     c20:	sub	r0, fp, #160	; 0xa0
     c24:	movweq	r1, #10
     c28:	bl	91c <find_dline@plt>
     c2c:	cmp	r0, #0
     c30:	beq	d7c <mo_testline+0x330>
     c34:	mov	r7, r0
     c38:	ldrb	r0, [r0, #2]
     c3c:	tst	r0, #2
     c40:	beq	e44 <mo_testline+0x3f8>
     c44:	sub	sp, sp, #8
     c48:	sub	r0, fp, #204	; 0xcc
     c4c:	sub	r1, fp, #192	; 0xc0
     c50:	sub	r2, fp, #196	; 0xc4
     c54:	sub	r3, fp, #200	; 0xc8
     c58:	str	r1, [sp]
     c5c:	str	r0, [sp, #4]
     c60:	mov	r0, r4
     c64:	mov	r1, r7
     c68:	bl	868 <get_printable_kline@plt>
     c6c:	add	sp, sp, #8
     c70:	ldr	r0, [fp, #-204]	; 0xffffff34
     c74:	ldr	r1, [pc, #1312]	; 119c <mo_testline+0x750>
     c78:	ldr	r3, [fp, #-200]	; 0xffffff38
     c7c:	add	r1, pc, r1
     c80:	cmp	r0, #0
     c84:	mov	r2, r1
     c88:	movne	r2, r0
     c8c:	sub	sp, sp, #8
     c90:	ldr	r6, [pc, #1288]	; 11a0 <mo_testline+0x754>
     c94:	cmp	r0, #0
     c98:	str	r2, [sp, #4]
     c9c:	sub	r8, fp, #716	; 0x2cc
     ca0:	mov	r0, r8
     ca4:	add	r6, pc, r6
     ca8:	moveq	r6, r1
     cac:	mov	r1, #512	; 0x200
     cb0:	str	r6, [sp]
     cb4:	ldr	r2, [pc, #1256]	; 11a4 <mo_testline+0x758>
     cb8:	add	r2, pc, r2
     cbc:	bl	8d4 <snprintf@plt>
     cc0:	add	sp, sp, #8
     cc4:	ldr	r0, [r7, #4]
     cc8:	mov	r5, #68	; 0x44
     ccc:	add	r6, r4, #88	; 0x58
     cd0:	ands	r0, r0, #8388608	; 0x800000
     cd4:	mov	r0, #0
     cd8:	movwne	r5, #100	; 0x64
     cdc:	beq	d00 <mo_testline+0x2b4>
     ce0:	ldr	r7, [r7, #36]	; 0x24
     ce4:	bl	82c <rb_current_time@plt>
     ce8:	movw	r1, #34953	; 0x8889
     cec:	sub	r0, r7, r0
     cf0:	movt	r1, #34952	; 0x8888
     cf4:	smmla	r0, r0, r1, r0
     cf8:	asr	r1, r0, #5
     cfc:	add	r0, r1, r0, lsr #31
     d00:	ldr	r1, [fp, #-196]	; 0xffffff3c
     d04:	sub	sp, sp, #16
     d08:	str	r5, [sp]
     d0c:	stmib	sp, {r0, r1, r8}
     d10:	mov	r3, r6
     d14:	ldr	r0, [pc, #1164]	; 11a8 <mo_testline+0x75c>
     d18:	ldr	r0, [pc, r0]
     d1c:	ldr	r1, [pc, #1160]	; 11ac <mo_testline+0x760>
     d20:	add	r2, r0, #88	; 0x58
     d24:	add	r1, pc, r1
     d28:	b	1098 <mo_testline+0x64c>
     d2c:	mov	r0, #0
     d30:	ldr	r1, [r6, #16]
     d34:	ldr	r2, [r6, #20]
     d38:	sub	sp, sp, #16
     d3c:	str	r7, [sp]
     d40:	stmib	sp, {r0, r1, r2}
     d44:	mov	r3, r8
     d48:	ldr	r0, [pc, #1084]	; 118c <mo_testline+0x740>
     d4c:	ldr	r0, [pc, r0]
     d50:	ldr	r1, [pc, #1080]	; 1190 <mo_testline+0x744>
     d54:	add	r2, r0, #88	; 0x58
     d58:	add	r1, pc, r1
     d5c:	mov	r0, r4
     d60:	bl	844 <sendto_one@plt>
     d64:	add	sp, sp, #16
     d68:	ldr	r0, [r6, #32]
     d6c:	sub	r0, r0, #1
     d70:	str	r0, [r6, #32]
     d74:	sub	sp, fp, #28
     d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     d7c:	sub	r0, fp, #160	; 0xa0
     d80:	bl	8e0 <is_reject_ip@plt>
     d84:	cmp	r0, #0
     d88:	beq	de0 <mo_testline+0x394>
     d8c:	sub	sp, sp, #16
     d90:	movw	r3, #34953	; 0x8889
     d94:	ldr	r1, [pc, #1044]	; 11b0 <mo_testline+0x764>
     d98:	mov	r2, #33	; 0x21
     d9c:	movt	r3, #34952	; 0x8888
     da0:	str	r2, [sp]
     da4:	smmla	r0, r0, r3, r0
     da8:	add	r1, pc, r1
     dac:	asr	r3, r0, #5
     db0:	add	r0, r3, r0, lsr #31
     db4:	add	r3, r4, #88	; 0x58
     db8:	stmib	sp, {r0, r6}
     dbc:	str	r1, [sp, #12]
     dc0:	ldr	r0, [pc, #1004]	; 11b4 <mo_testline+0x768>
     dc4:	ldr	r0, [pc, r0]
     dc8:	ldr	r1, [pc, #1000]	; 11b8 <mo_testline+0x76c>
     dcc:	add	r2, r0, #88	; 0x58
     dd0:	add	r1, pc, r1
     dd4:	mov	r0, r4
     dd8:	bl	844 <sendto_one@plt>
     ddc:	add	sp, sp, #16
     de0:	sub	r0, fp, #160	; 0xa0
     de4:	bl	874 <is_throttle_ip@plt>
     de8:	cmp	r0, #0
     dec:	beq	e44 <mo_testline+0x3f8>
     df0:	sub	sp, sp, #16
     df4:	movw	r3, #34953	; 0x8889
     df8:	ldr	r1, [pc, #956]	; 11bc <mo_testline+0x770>
     dfc:	mov	r2, #33	; 0x21
     e00:	movt	r3, #34952	; 0x8888
     e04:	str	r2, [sp]
     e08:	smmla	r0, r0, r3, r0
     e0c:	add	r1, pc, r1
     e10:	asr	r3, r0, #5
     e14:	add	r0, r3, r0, lsr #31
     e18:	add	r3, r4, #88	; 0x58
     e1c:	stmib	sp, {r0, r6}
     e20:	str	r1, [sp, #12]
     e24:	ldr	r0, [pc, #916]	; 11c0 <mo_testline+0x774>
     e28:	ldr	r0, [pc, r0]
     e2c:	ldr	r1, [pc, #912]	; 11c4 <mo_testline+0x778>
     e30:	add	r2, r0, #88	; 0x58
     e34:	add	r1, pc, r1
     e38:	mov	r0, r4
     e3c:	bl	844 <sendto_one@plt>
     e40:	add	sp, sp, #16
     e44:	sub	r0, fp, #171	; 0xab
     e48:	cmp	sl, #0
     e4c:	beq	e74 <mo_testline+0x428>
     e50:	mov	r1, sl
     e54:	mov	r2, #11
     e58:	bl	8f8 <rb_strlcpy@plt>
     e5c:	mov	r1, sl
     e60:	ldrb	r0, [r1], #1
     e64:	cmp	r0, #126	; 0x7e
     e68:	sub	r0, fp, #182	; 0xb6
     e6c:	movne	r1, sl
     e70:	b	e90 <mo_testline+0x444>
     e74:	ldr	r7, [pc, #844]	; 11c8 <mo_testline+0x77c>
     e78:	mov	r2, #11
     e7c:	add	r7, pc, r7
     e80:	mov	r1, r7
     e84:	bl	8f8 <rb_strlcpy@plt>
     e88:	sub	r0, fp, #182	; 0xb6
     e8c:	mov	r1, r7
     e90:	mov	r2, #11
     e94:	bl	8f8 <rb_strlcpy@plt>
     e98:	ldr	r7, [fp, #8]
     e9c:	sub	sp, sp, #16
     ea0:	cmp	r5, #3
     ea4:	mov	r1, #2
     ea8:	mov	r0, #0
     eac:	sub	r3, fp, #182	; 0xb6
     eb0:	movweq	r1, #10
     eb4:	subs	r2, r5, #1
     eb8:	str	r0, [sp, #8]
     ebc:	mov	r0, r6
     ec0:	moveq	r1, r2
     ec4:	moveq	r8, r2
     ec8:	sub	r2, fp, #171	; 0xab
     ecc:	str	r1, [sp, #4]
     ed0:	mov	r1, #0
     ed4:	str	r8, [sp]
     ed8:	bl	850 <find_address_conf@plt>
     edc:	add	sp, sp, #16
     ee0:	mov	r6, r0
     ee4:	cmp	r0, #0
     ee8:	beq	ef8 <mo_testline+0x4ac>
     eec:	ldrb	r0, [r6]
     ef0:	tst	r0, #64	; 0x40
     ef4:	bne	f88 <mo_testline+0x53c>
     ef8:	cmp	r9, #0
     efc:	beq	f4c <mo_testline+0x500>
     f00:	mov	r0, r9
     f04:	bl	88c <find_nick_resv@plt>
     f08:	cmp	r0, #0
     f0c:	beq	f4c <mo_testline+0x500>
     f10:	ldr	r6, [r0, #36]	; 0x24
     f14:	mov	r5, r0
     f18:	mov	r7, #81	; 0x51
     f1c:	add	r8, r4, #88	; 0x58
     f20:	cmp	r6, #0
     f24:	movwne	r7, #113	; 0x71
     f28:	beq	10d4 <mo_testline+0x688>
     f2c:	bl	82c <rb_current_time@plt>
     f30:	movw	r1, #34953	; 0x8889
     f34:	sub	r0, r6, r0
     f38:	movt	r1, #34952	; 0x8888
     f3c:	smmla	r0, r0, r1, r0
     f40:	asr	r1, r0, #5
     f44:	add	r0, r1, r0, lsr #31
     f48:	b	10d8 <mo_testline+0x68c>
     f4c:	cmp	r6, #0
     f50:	beq	f60 <mo_testline+0x514>
     f54:	ldrb	r0, [r6]
     f58:	tst	r0, #2
     f5c:	bne	10ac <mo_testline+0x660>
     f60:	ldr	r0, [r7, #4]
     f64:	sub	sp, sp, #8
     f68:	str	r0, [sp]
     f6c:	add	r3, r4, #88	; 0x58
     f70:	ldr	r0, [pc, #644]	; 11fc <mo_testline+0x7b0>
     f74:	ldr	r0, [pc, r0]
     f78:	ldr	r1, [pc, #640]	; 1200 <mo_testline+0x7b4>
     f7c:	add	r2, r0, #88	; 0x58
     f80:	add	r1, pc, r1
     f84:	b	b30 <mo_testline+0xe4>
     f88:	sub	sp, sp, #8
     f8c:	sub	r0, fp, #204	; 0xcc
     f90:	sub	r1, fp, #192	; 0xc0
     f94:	sub	r2, fp, #196	; 0xc4
     f98:	sub	r3, fp, #200	; 0xc8
     f9c:	str	r1, [sp]
     fa0:	str	r0, [sp, #4]
     fa4:	mov	r0, r4
     fa8:	mov	r1, r6
     fac:	bl	868 <get_printable_kline@plt>
     fb0:	add	sp, sp, #8
     fb4:	ldr	r0, [fp, #-196]	; 0xffffff3c
     fb8:	ldr	r3, [fp, #-192]	; 0xffffff40
     fbc:	sub	sp, sp, #8
     fc0:	str	r0, [sp]
     fc4:	mov	r1, #75	; 0x4b
     fc8:	mov	r7, #75	; 0x4b
     fcc:	ldr	r8, [pc, #504]	; 11cc <mo_testline+0x780>
     fd0:	ldr	r2, [pc, #504]	; 11d0 <mo_testline+0x784>
     fd4:	add	r8, pc, r8
     fd8:	add	r2, pc, r2
     fdc:	mov	r0, r8
     fe0:	bl	8d4 <snprintf@plt>
     fe4:	add	sp, sp, #8
     fe8:	ldr	r0, [fp, #-204]	; 0xffffff34
     fec:	ldr	r1, [pc, #480]	; 11d4 <mo_testline+0x788>
     ff0:	ldr	r3, [fp, #-200]	; 0xffffff38
     ff4:	add	r1, pc, r1
     ff8:	cmp	r0, #0
     ffc:	mov	r2, r1
    1000:	movne	r2, r0
    1004:	sub	sp, sp, #8
    1008:	ldr	r5, [pc, #456]	; 11d8 <mo_testline+0x78c>
    100c:	cmp	r0, #0
    1010:	str	r2, [sp, #4]
    1014:	sub	r9, fp, #716	; 0x2cc
    1018:	mov	r0, r9
    101c:	add	r5, pc, r5
    1020:	moveq	r5, r1
    1024:	mov	r1, #512	; 0x200
    1028:	str	r5, [sp]
    102c:	ldr	r2, [pc, #424]	; 11dc <mo_testline+0x790>
    1030:	add	r2, pc, r2
    1034:	bl	8d4 <snprintf@plt>
    1038:	add	sp, sp, #8
    103c:	ldr	r0, [r6, #4]
    1040:	add	r5, r4, #88	; 0x58
    1044:	ands	r0, r0, #8388608	; 0x800000
    1048:	mov	r0, #0
    104c:	movwne	r7, #107	; 0x6b
    1050:	beq	1074 <mo_testline+0x628>
    1054:	ldr	r6, [r6, #36]	; 0x24
    1058:	bl	82c <rb_current_time@plt>
    105c:	movw	r1, #34953	; 0x8889
    1060:	sub	r0, r6, r0
    1064:	movt	r1, #34952	; 0x8888
    1068:	smmla	r0, r0, r1, r0
    106c:	asr	r1, r0, #5
    1070:	add	r0, r1, r0, lsr #31
    1074:	sub	sp, sp, #16
    1078:	str	r7, [sp]
    107c:	stmib	sp, {r0, r8, r9}
    1080:	mov	r3, r5
    1084:	ldr	r0, [pc, #340]	; 11e0 <mo_testline+0x794>
    1088:	ldr	r0, [pc, r0]
    108c:	ldr	r1, [pc, #336]	; 11e4 <mo_testline+0x798>
    1090:	add	r2, r0, #88	; 0x58
    1094:	add	r1, pc, r1
    1098:	mov	r0, r4
    109c:	bl	844 <sendto_one@plt>
    10a0:	add	sp, sp, #16
    10a4:	sub	sp, fp, #28
    10a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10ac:	ldr	r0, [r6, #24]
    10b0:	ldr	r5, [r6, #12]
    10b4:	cmp	r0, #0
    10b8:	beq	1124 <mo_testline+0x6d8>
    10bc:	ldrb	r1, [r0]
    10c0:	ldr	r7, [pc, #300]	; 11f4 <mo_testline+0x7a8>
    10c4:	cmp	r1, #0
    10c8:	add	r7, pc, r7
    10cc:	movne	r7, r0
    10d0:	b	112c <mo_testline+0x6e0>
    10d4:	mov	r0, #0
    10d8:	ldr	r1, [r5, #16]
    10dc:	ldr	r2, [r5, #20]
    10e0:	sub	sp, sp, #16
    10e4:	str	r7, [sp]
    10e8:	stmib	sp, {r0, r1, r2}
    10ec:	mov	r3, r8
    10f0:	ldr	r0, [pc, #240]	; 11e8 <mo_testline+0x79c>
    10f4:	ldr	r0, [pc, r0]
    10f8:	ldr	r1, [pc, #236]	; 11ec <mo_testline+0x7a0>
    10fc:	add	r2, r0, #88	; 0x58
    1100:	add	r1, pc, r1
    1104:	mov	r0, r4
    1108:	bl	844 <sendto_one@plt>
    110c:	add	sp, sp, #16
    1110:	ldr	r0, [r5, #32]
    1114:	sub	r0, r0, #1
    1118:	str	r0, [r5, #32]
    111c:	sub	sp, fp, #28
    1120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1124:	ldr	r7, [pc, #196]	; 11f0 <mo_testline+0x7a4>
    1128:	add	r7, pc, r7
    112c:	ldr	r2, [r6, #28]
    1130:	mov	r0, r4
    1134:	mov	r1, r6
    1138:	bl	898 <show_iline_prefix@plt>
    113c:	ldr	r1, [r6, #16]
    1140:	ldr	r2, [r6, #32]
    1144:	ldr	r3, [r6, #48]	; 0x30
    1148:	sub	sp, sp, #24
    114c:	str	r7, [sp]
    1150:	stmib	sp, {r0, r1, r2, r3}
    1154:	mov	r0, r4
    1158:	mov	r1, #215	; 0xd7
    115c:	mov	r3, r5
    1160:	ldr	r2, [pc, #144]	; 11f8 <mo_testline+0x7ac>
    1164:	add	r2, pc, r2
    1168:	bl	8b0 <sendto_one_numeric@plt>
    116c:	add	sp, sp, #24
    1170:	sub	sp, fp, #28
    1174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1178:	.word	0x000008d7
    117c:	.word	0x00000840
    1180:	.word	0x0001154c
    1184:	.word	0x00000831
    1188:	.word	0x000115a4
    118c:	.word	0x00011320
    1190:	.word	0x0000062c
    1194:	.word	0x0001148c
    1198:	.word	0x000007b1
    119c:	.word	0x00000781
    11a0:	.word	0x0000071a
    11a4:	.word	0x000006ff
    11a8:	.word	0x00011354
    11ac:	.word	0x00000660
    11b0:	.word	0x00000618
    11b4:	.word	0x000112a8
    11b8:	.word	0x000005b4
    11bc:	.word	0x000005c1
    11c0:	.word	0x00011244
    11c4:	.word	0x00000550
    11c8:	.word	0x0000055b
    11cc:	.word	0x0001115d
    11d0:	.word	0x00000405
    11d4:	.word	0x00000409
    11d8:	.word	0x000003a2
    11dc:	.word	0x00000387
    11e0:	.word	0x00010fe4
    11e4:	.word	0x000002f0
    11e8:	.word	0x00010f78
    11ec:	.word	0x00000284
    11f0:	.word	0x000002cf
    11f4:	.word	0x0000032f
    11f8:	.word	0x0000027f
    11fc:	.word	0x000110f8
    1200:	.word	0x0000041d

00001204 <mo_testgecos>:
    1204:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1208:	add	fp, sp, #24
    120c:	sub	sp, sp, #16
    1210:	ldr	r0, [r2, #24]
    1214:	mov	r4, r2
    1218:	cmp	r0, #0
    121c:	beq	12c0 <mo_testgecos+0xbc>
    1220:	ldr	r0, [r0, #36]	; 0x24
    1224:	cmp	r0, #0
    1228:	beq	12c0 <mo_testgecos+0xbc>
    122c:	ldr	r1, [pc, #232]	; 131c <mo_testgecos+0x118>
    1230:	add	r1, pc, r1
    1234:	bl	904 <privilegeset_in_set@plt>
    1238:	cmp	r0, #0
    123c:	beq	12c0 <mo_testgecos+0xbc>
    1240:	ldr	r5, [fp, #8]
    1244:	mov	r1, #0
    1248:	mov	r9, #0
    124c:	ldr	r0, [r5, #4]
    1250:	bl	8ec <find_xline@plt>
    1254:	add	r8, r4, #88	; 0x58
    1258:	cmp	r0, #0
    125c:	beq	12ec <mo_testgecos+0xe8>
    1260:	ldr	r7, [r0, #36]	; 0x24
    1264:	mov	r6, r0
    1268:	mov	r5, #88	; 0x58
    126c:	cmp	r7, #0
    1270:	movwne	r5, #120	; 0x78
    1274:	beq	1294 <mo_testgecos+0x90>
    1278:	bl	82c <rb_current_time@plt>
    127c:	movw	r1, #34953	; 0x8889
    1280:	sub	r0, r7, r0
    1284:	movt	r1, #34952	; 0x8888
    1288:	smmla	r0, r0, r1, r0
    128c:	asr	r1, r0, #5
    1290:	add	r9, r1, r0, lsr #31
    1294:	ldr	r0, [r6, #16]
    1298:	ldr	r1, [r6, #20]
    129c:	stm	sp, {r5, r9}
    12a0:	str	r0, [sp, #8]
    12a4:	str	r1, [sp, #12]
    12a8:	ldr	r0, [pc, #132]	; 1334 <mo_testgecos+0x130>
    12ac:	ldr	r0, [pc, r0]
    12b0:	ldr	r1, [pc, #128]	; 1338 <mo_testgecos+0x134>
    12b4:	add	r2, r0, #88	; 0x58
    12b8:	add	r1, pc, r1
    12bc:	b	1308 <mo_testgecos+0x104>
    12c0:	ldr	r0, [pc, #88]	; 1320 <mo_testgecos+0x11c>
    12c4:	add	r3, r4, #88	; 0x58
    12c8:	add	r0, pc, r0
    12cc:	str	r0, [sp]
    12d0:	ldr	r0, [pc, #76]	; 1324 <mo_testgecos+0x120>
    12d4:	ldr	r0, [pc, r0]
    12d8:	ldr	r1, [pc, #72]	; 1328 <mo_testgecos+0x124>
    12dc:	add	r2, r0, #88	; 0x58
    12e0:	add	r1, pc, r1
    12e4:	mov	r0, r4
    12e8:	b	1310 <mo_testgecos+0x10c>
    12ec:	ldr	r0, [r5, #4]
    12f0:	str	r0, [sp]
    12f4:	ldr	r0, [pc, #48]	; 132c <mo_testgecos+0x128>
    12f8:	ldr	r0, [pc, r0]
    12fc:	ldr	r1, [pc, #44]	; 1330 <mo_testgecos+0x12c>
    1300:	add	r2, r0, #88	; 0x58
    1304:	add	r1, pc, r1
    1308:	mov	r0, r4
    130c:	mov	r3, r8
    1310:	bl	844 <sendto_one@plt>
    1314:	sub	sp, fp, #24
    1318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    131c:	.word	0x0000011f
    1320:	.word	0x0000008c
    1324:	.word	0x00010d98
    1328:	.word	0x0000007d
    132c:	.word	0x00010d74
    1330:	.word	0x00000099
    1334:	.word	0x00010dc0
    1338:	.word	0x000000cc

Disassembly of section .fini:

0000133c <_fini>:
    133c:	push	{r3, lr}
    1340:	pop	{r3, pc}
