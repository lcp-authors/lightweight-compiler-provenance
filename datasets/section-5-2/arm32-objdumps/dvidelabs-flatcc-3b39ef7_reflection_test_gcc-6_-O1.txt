
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010788 <.init>:
   10788:	push	{r3, lr}
   1078c:	bl	108b0 <_start@@Base+0x3c>
   10790:	pop	{r3, pc}

Disassembly of section .plt:

00010794 <strcmp@plt-0x14>:
   10794:	push	{lr}		; (str lr, [sp, #-4]!)
   10798:	ldr	lr, [pc, #4]	; 107a4 <strcmp@plt-0x4>
   1079c:	add	lr, pc, lr
   107a0:	ldr	pc, [lr, #8]!
   107a4:	andeq	r1, r1, ip, asr r8

000107a8 <strcmp@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2140]!	; 0x85c

000107b4 <printf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2132]!	; 0x854

000107c0 <fopen@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2124]!	; 0x84c

000107cc <free@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2116]!	; 0x844

000107d8 <ftell@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2108]!	; 0x83c

000107e4 <rewind@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2100]!	; 0x834

000107f0 <fwrite@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2092]!	; 0x82c

000107fc <fread@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2084]!	; 0x824

00010808 <puts@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2076]!	; 0x81c

00010814 <malloc@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2068]!	; 0x814

00010820 <__libc_start_main@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2060]!	; 0x80c

0001082c <__gmon_start__@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2052]!	; 0x804

00010838 <exit@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2044]!	; 0x7fc

00010844 <fclose@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010850 <fseek@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2028]!	; 0x7ec

0001085c <abort@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #2020]!	; 0x7e4

00010868 <__assert_fail@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #2012]!	; 0x7dc

Disassembly of section .text:

00010874 <_start@@Base>:
   10874:	mov	fp, #0
   10878:	mov	lr, #0
   1087c:	pop	{r1}		; (ldr r1, [sp], #4)
   10880:	mov	r2, sp
   10884:	push	{r2}		; (str r2, [sp, #-4]!)
   10888:	push	{r0}		; (str r0, [sp, #-4]!)
   1088c:	ldr	ip, [pc, #16]	; 108a4 <_start@@Base+0x30>
   10890:	push	{ip}		; (str ip, [sp, #-4]!)
   10894:	ldr	r0, [pc, #12]	; 108a8 <_start@@Base+0x34>
   10898:	ldr	r3, [pc, #12]	; 108ac <_start@@Base+0x38>
   1089c:	bl	10820 <__libc_start_main@plt>
   108a0:	bl	1085c <abort@plt>
   108a4:	andeq	r1, r1, r0, asr #13
   108a8:	andeq	r1, r1, r4, lsl #12
   108ac:	andeq	r1, r1, r0, ror #12
   108b0:	ldr	r3, [pc, #20]	; 108cc <_start@@Base+0x58>
   108b4:	ldr	r2, [pc, #20]	; 108d0 <_start@@Base+0x5c>
   108b8:	add	r3, pc, r3
   108bc:	ldr	r2, [r3, r2]
   108c0:	cmp	r2, #0
   108c4:	bxeq	lr
   108c8:	b	1082c <__gmon_start__@plt>
   108cc:	andeq	r1, r1, r0, asr #14
   108d0:	andeq	r0, r0, r0, asr r0
   108d4:	ldr	r3, [pc, #28]	; 108f8 <_start@@Base+0x84>
   108d8:	ldr	r0, [pc, #28]	; 108fc <_start@@Base+0x88>
   108dc:	sub	r3, r3, r0
   108e0:	cmp	r3, #6
   108e4:	bxls	lr
   108e8:	ldr	r3, [pc, #16]	; 10900 <_start@@Base+0x8c>
   108ec:	cmp	r3, #0
   108f0:	bxeq	lr
   108f4:	bx	r3
   108f8:	andeq	r2, r2, r3, rrx
   108fc:	andeq	r2, r2, r0, rrx
   10900:	andeq	r0, r0, r0
   10904:	ldr	r1, [pc, #36]	; 10930 <_start@@Base+0xbc>
   10908:	ldr	r0, [pc, #36]	; 10934 <_start@@Base+0xc0>
   1090c:	sub	r1, r1, r0
   10910:	asr	r1, r1, #2
   10914:	add	r1, r1, r1, lsr #31
   10918:	asrs	r1, r1, #1
   1091c:	bxeq	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <_start@@Base+0xc4>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r2, r2, r0, rrx
   10934:	andeq	r2, r2, r0, rrx
   10938:	andeq	r0, r0, r0
   1093c:	push	{r4, lr}
   10940:	ldr	r4, [pc, #24]	; 10960 <_start@@Base+0xec>
   10944:	ldrb	r3, [r4]
   10948:	cmp	r3, #0
   1094c:	popne	{r4, pc}
   10950:	bl	108d4 <_start@@Base+0x60>
   10954:	mov	r3, #1
   10958:	strb	r3, [r4]
   1095c:	pop	{r4, pc}
   10960:	andeq	r2, r2, r4, rrx
   10964:	ldr	r0, [pc, #40]	; 10994 <_start@@Base+0x120>
   10968:	ldr	r3, [r0]
   1096c:	cmp	r3, #0
   10970:	bne	10978 <_start@@Base+0x104>
   10974:	b	10904 <_start@@Base+0x90>
   10978:	ldr	r3, [pc, #24]	; 10998 <_start@@Base+0x124>
   1097c:	cmp	r3, #0
   10980:	beq	10974 <_start@@Base+0x100>
   10984:	push	{r4, lr}
   10988:	blx	r3
   1098c:	pop	{r4, lr}
   10990:	b	10904 <_start@@Base+0x90>
   10994:	andeq	r1, r2, r4, lsl pc
   10998:	andeq	r0, r0, r0

0001099c <test_schema@@Base>:
   1099c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109a0:	sub	sp, sp, #20
   109a4:	ldr	r1, [pc, #3024]	; 1157c <test_schema@@Base+0xbe0>
   109a8:	bl	107c0 <fopen@plt>
   109ac:	subs	r5, r0, #0
   109b0:	beq	1156c <test_schema@@Base+0xbd0>
   109b4:	mov	r2, #2
   109b8:	mov	r1, #0
   109bc:	mov	r0, r5
   109c0:	bl	10850 <fseek@plt>
   109c4:	mov	r0, r5
   109c8:	bl	107d8 <ftell@plt>
   109cc:	mov	r7, r0
   109d0:	ldr	r3, [pc, #2984]	; 11580 <test_schema@@Base+0xbe4>
   109d4:	cmp	r0, r3
   109d8:	bhi	11550 <test_schema@@Base+0xbb4>
   109dc:	mov	r0, r5
   109e0:	bl	107e4 <rewind@plt>
   109e4:	cmp	r7, #0
   109e8:	movne	r0, r7
   109ec:	moveq	r0, #1
   109f0:	bl	10814 <malloc@plt>
   109f4:	subs	sl, r0, #0
   109f8:	beq	11554 <test_schema@@Base+0xbb8>
   109fc:	mov	r4, #0
   10a00:	mov	r8, #1
   10a04:	b	10a0c <test_schema@@Base+0x70>
   10a08:	add	r4, r4, r0
   10a0c:	mov	r3, r5
   10a10:	sub	r2, r7, r4
   10a14:	mov	r1, r8
   10a18:	add	r0, sl, r4
   10a1c:	bl	107fc <fread@plt>
   10a20:	cmp	r0, #0
   10a24:	bne	10a08 <test_schema@@Base+0x6c>
   10a28:	mov	r6, r0
   10a2c:	cmp	r7, r4
   10a30:	bne	11554 <test_schema@@Base+0xbb8>
   10a34:	mov	r0, r5
   10a38:	bl	10844 <fclose@plt>
   10a3c:	ldr	r2, [sl, #4]
   10a40:	ldr	r3, [pc, #2876]	; 11584 <test_schema@@Base+0xbe8>
   10a44:	cmp	r2, r3
   10a48:	beq	10a60 <test_schema@@Base+0xc4>
   10a4c:	ldr	r3, [pc, #2868]	; 11588 <test_schema@@Base+0xbec>
   10a50:	mov	r2, #237	; 0xed
   10a54:	ldr	r1, [pc, #2864]	; 1158c <test_schema@@Base+0xbf0>
   10a58:	ldr	r0, [pc, #2864]	; 11590 <test_schema@@Base+0xbf4>
   10a5c:	bl	10868 <__assert_fail@plt>
   10a60:	ldr	r3, [sl]
   10a64:	adds	r2, sl, r3
   10a68:	beq	10a4c <test_schema@@Base+0xb0>
   10a6c:	ldr	r3, [sl, r3]
   10a70:	sub	r3, r2, r3
   10a74:	ldrh	r1, [r3]
   10a78:	cmp	r1, #5
   10a7c:	bls	10aac <test_schema@@Base+0x110>
   10a80:	ldrh	r3, [r3, #4]
   10a84:	cmp	r3, #0
   10a88:	beq	10aac <test_schema@@Base+0x110>
   10a8c:	add	r5, r2, r3
   10a90:	ldr	r3, [r2, r3]
   10a94:	add	r3, r3, #4
   10a98:	add	r5, r5, r3
   10a9c:	mov	r7, r5
   10aa0:	mov	r4, r6
   10aa4:	ldr	r9, [pc, #2792]	; 11594 <test_schema@@Base+0xbf8>
   10aa8:	b	10af0 <test_schema@@Base+0x154>
   10aac:	ldr	r3, [pc, #2772]	; 11588 <test_schema@@Base+0xbec>
   10ab0:	mov	r2, #237	; 0xed
   10ab4:	ldr	r1, [pc, #2768]	; 1158c <test_schema@@Base+0xbf0>
   10ab8:	ldr	r0, [pc, #2776]	; 11598 <test_schema@@Base+0xbfc>
   10abc:	bl	10868 <__assert_fail@plt>
   10ac0:	ldr	r3, [pc, #2772]	; 1159c <test_schema@@Base+0xc00>
   10ac4:	mov	r2, #218	; 0xda
   10ac8:	ldr	r1, [pc, #2748]	; 1158c <test_schema@@Base+0xbf0>
   10acc:	ldr	r0, [pc, #2748]	; 11590 <test_schema@@Base+0xbf4>
   10ad0:	bl	10868 <__assert_fail@plt>
   10ad4:	add	r2, r0, r3
   10ad8:	ldr	r3, [r0, r3]
   10adc:	add	r3, r3, #4
   10ae0:	add	r2, r2, r3
   10ae4:	mov	r0, r9
   10ae8:	bl	107b4 <printf@plt>
   10aec:	add	r4, r4, #1
   10af0:	cmp	r5, #0
   10af4:	beq	10b50 <test_schema@@Base+0x1b4>
   10af8:	ldr	r8, [r5, #-4]
   10afc:	cmp	r4, r8
   10b00:	bcs	10b54 <test_schema@@Base+0x1b8>
   10b04:	mov	r1, r4
   10b08:	mov	r3, r7
   10b0c:	add	r7, r7, #4
   10b10:	ldr	r2, [r3]
   10b14:	adds	r0, r3, r2
   10b18:	beq	10ac0 <test_schema@@Base+0x124>
   10b1c:	ldr	r3, [r3, r2]
   10b20:	sub	r3, r0, r3
   10b24:	ldrh	r2, [r3]
   10b28:	cmp	r2, #5
   10b2c:	bls	10b3c <test_schema@@Base+0x1a0>
   10b30:	ldrh	r3, [r3, #4]
   10b34:	cmp	r3, #0
   10b38:	bne	10ad4 <test_schema@@Base+0x138>
   10b3c:	ldr	r3, [pc, #2648]	; 1159c <test_schema@@Base+0xc00>
   10b40:	mov	r2, #218	; 0xda
   10b44:	ldr	r1, [pc, #2624]	; 1158c <test_schema@@Base+0xbf0>
   10b48:	ldr	r0, [pc, #2632]	; 11598 <test_schema@@Base+0xbfc>
   10b4c:	bl	10868 <__assert_fail@plt>
   10b50:	mov	r8, r6
   10b54:	cmp	r8, #0
   10b58:	beq	10c50 <test_schema@@Base+0x2b4>
   10b5c:	sub	r9, r8, #1
   10b60:	mov	r7, r6
   10b64:	ldr	fp, [pc, #2612]	; 115a0 <test_schema@@Base+0xc04>
   10b68:	cmp	r7, r9
   10b6c:	bcs	10c44 <test_schema@@Base+0x2a8>
   10b70:	sub	r4, r9, r7
   10b74:	add	r4, r7, r4, lsr #1
   10b78:	add	r2, r5, r4, lsl #2
   10b7c:	cmp	r4, r8
   10b80:	bcs	10ba4 <test_schema@@Base+0x208>
   10b84:	ldr	r3, [r5, r4, lsl #2]
   10b88:	adds	r3, r2, r3
   10b8c:	bne	10c08 <test_schema@@Base+0x26c>
   10b90:	ldr	r3, [pc, #2564]	; 1159c <test_schema@@Base+0xc00>
   10b94:	mov	r2, #218	; 0xda
   10b98:	ldr	r1, [pc, #2540]	; 1158c <test_schema@@Base+0xbf0>
   10b9c:	ldr	r0, [pc, #2540]	; 11590 <test_schema@@Base+0xbf4>
   10ba0:	bl	10868 <__assert_fail@plt>
   10ba4:	ldr	r3, [pc, #2552]	; 115a4 <test_schema@@Base+0xc08>
   10ba8:	mov	r2, #215	; 0xd7
   10bac:	ldr	r1, [pc, #2520]	; 1158c <test_schema@@Base+0xbf0>
   10bb0:	ldr	r0, [pc, #2544]	; 115a8 <test_schema@@Base+0xc0c>
   10bb4:	bl	10868 <__assert_fail@plt>
   10bb8:	add	r0, r3, r2
   10bbc:	ldr	r3, [r3, r2]
   10bc0:	add	r3, r3, #4
   10bc4:	mov	r1, fp
   10bc8:	add	r0, r0, r3
   10bcc:	bl	107a8 <strcmp@plt>
   10bd0:	cmp	r0, #0
   10bd4:	blt	10c3c <test_schema@@Base+0x2a0>
   10bd8:	cmp	r7, r4
   10bdc:	bcs	10c48 <test_schema@@Base+0x2ac>
   10be0:	sub	r2, r4, r7
   10be4:	add	r2, r7, r2, lsr #1
   10be8:	add	r3, r5, r2, lsl #2
   10bec:	cmp	r2, r8
   10bf0:	bcs	10ba4 <test_schema@@Base+0x208>
   10bf4:	ldr	r1, [r5, r2, lsl #2]
   10bf8:	mov	r9, r4
   10bfc:	adds	r3, r3, r1
   10c00:	beq	10b90 <test_schema@@Base+0x1f4>
   10c04:	mov	r4, r2
   10c08:	ldr	r2, [r3]
   10c0c:	sub	r2, r3, r2
   10c10:	ldrh	r1, [r2]
   10c14:	cmp	r1, #5
   10c18:	bls	10c28 <test_schema@@Base+0x28c>
   10c1c:	ldrh	r2, [r2, #4]
   10c20:	cmp	r2, #0
   10c24:	bne	10bb8 <test_schema@@Base+0x21c>
   10c28:	ldr	r3, [pc, #2412]	; 1159c <test_schema@@Base+0xc00>
   10c2c:	mov	r2, #218	; 0xda
   10c30:	ldr	r1, [pc, #2388]	; 1158c <test_schema@@Base+0xbf0>
   10c34:	ldr	r0, [pc, #2396]	; 11598 <test_schema@@Base+0xbfc>
   10c38:	bl	10868 <__assert_fail@plt>
   10c3c:	add	r7, r4, #1
   10c40:	b	10b68 <test_schema@@Base+0x1cc>
   10c44:	mov	r4, r9
   10c48:	cmp	r7, r4
   10c4c:	beq	10c60 <test_schema@@Base+0x2c4>
   10c50:	ldr	r0, [pc, #2388]	; 115ac <test_schema@@Base+0xc10>
   10c54:	bl	10808 <puts@plt>
   10c58:	mvn	r4, #0
   10c5c:	b	114f8 <test_schema@@Base+0xb5c>
   10c60:	add	r2, r5, r7, lsl #2
   10c64:	cmp	r7, r8
   10c68:	bcs	10cdc <test_schema@@Base+0x340>
   10c6c:	ldr	r3, [r5, r7, lsl #2]
   10c70:	adds	r5, r2, r3
   10c74:	beq	10cf0 <test_schema@@Base+0x354>
   10c78:	ldr	r8, [r2, r3]
   10c7c:	sub	r8, r5, r8
   10c80:	ldrh	r4, [r8]
   10c84:	cmp	r4, #5
   10c88:	bls	10d04 <test_schema@@Base+0x368>
   10c8c:	ldrh	r3, [r8, #4]
   10c90:	cmp	r3, #0
   10c94:	beq	10d04 <test_schema@@Base+0x368>
   10c98:	add	r0, r5, r3
   10c9c:	ldr	r3, [r5, r3]
   10ca0:	add	r3, r3, #4
   10ca4:	ldr	r1, [pc, #2292]	; 115a0 <test_schema@@Base+0xc04>
   10ca8:	add	r0, r0, r3
   10cac:	bl	107a8 <strcmp@plt>
   10cb0:	cmp	r0, #0
   10cb4:	bne	10c50 <test_schema@@Base+0x2b4>
   10cb8:	cmn	r7, #1
   10cbc:	beq	10c50 <test_schema@@Base+0x2b4>
   10cc0:	cmp	r4, #7
   10cc4:	bhi	10d18 <test_schema@@Base+0x37c>
   10cc8:	ldr	r3, [pc, #2272]	; 115b0 <test_schema@@Base+0xc14>
   10ccc:	mov	r2, #224	; 0xe0
   10cd0:	ldr	r1, [pc, #2228]	; 1158c <test_schema@@Base+0xbf0>
   10cd4:	ldr	r0, [pc, #2236]	; 11598 <test_schema@@Base+0xbfc>
   10cd8:	bl	10868 <__assert_fail@plt>
   10cdc:	ldr	r3, [pc, #2240]	; 115a4 <test_schema@@Base+0xc08>
   10ce0:	mov	r2, #215	; 0xd7
   10ce4:	ldr	r1, [pc, #2208]	; 1158c <test_schema@@Base+0xbf0>
   10ce8:	ldr	r0, [pc, #2232]	; 115a8 <test_schema@@Base+0xc0c>
   10cec:	bl	10868 <__assert_fail@plt>
   10cf0:	ldr	r3, [pc, #2212]	; 1159c <test_schema@@Base+0xc00>
   10cf4:	mov	r2, #218	; 0xda
   10cf8:	ldr	r1, [pc, #2188]	; 1158c <test_schema@@Base+0xbf0>
   10cfc:	ldr	r0, [pc, #2188]	; 11590 <test_schema@@Base+0xbf4>
   10d00:	bl	10868 <__assert_fail@plt>
   10d04:	ldr	r3, [pc, #2192]	; 1159c <test_schema@@Base+0xc00>
   10d08:	mov	r2, #218	; 0xda
   10d0c:	ldr	r1, [pc, #2168]	; 1158c <test_schema@@Base+0xbf0>
   10d10:	ldr	r0, [pc, #2176]	; 11598 <test_schema@@Base+0xbfc>
   10d14:	bl	10868 <__assert_fail@plt>
   10d18:	ldrh	r3, [r8, #6]
   10d1c:	cmp	r3, #0
   10d20:	beq	10cc8 <test_schema@@Base+0x32c>
   10d24:	add	r4, r5, r3
   10d28:	ldr	r3, [r5, r3]
   10d2c:	add	r3, r3, #4
   10d30:	adds	r4, r4, r3
   10d34:	beq	10e3c <test_schema@@Base+0x4a0>
   10d38:	ldr	r9, [r4, #-4]
   10d3c:	cmp	r9, #0
   10d40:	beq	10e3c <test_schema@@Base+0x4a0>
   10d44:	sub	r3, r9, #1
   10d48:	str	r3, [sp]
   10d4c:	mov	fp, r3
   10d50:	mov	r8, r6
   10d54:	cmp	r8, fp
   10d58:	bcs	10e30 <test_schema@@Base+0x494>
   10d5c:	sub	r5, fp, r8
   10d60:	add	r5, r8, r5, lsr #1
   10d64:	add	r2, r4, r5, lsl #2
   10d68:	cmp	r9, r5
   10d6c:	bls	10d90 <test_schema@@Base+0x3f4>
   10d70:	ldr	r3, [r4, r5, lsl #2]
   10d74:	adds	r3, r2, r3
   10d78:	bne	10df4 <test_schema@@Base+0x458>
   10d7c:	ldr	r3, [pc, #2096]	; 115b4 <test_schema@@Base+0xc18>
   10d80:	mov	r2, #195	; 0xc3
   10d84:	ldr	r1, [pc, #2048]	; 1158c <test_schema@@Base+0xbf0>
   10d88:	ldr	r0, [pc, #2048]	; 11590 <test_schema@@Base+0xbf4>
   10d8c:	bl	10868 <__assert_fail@plt>
   10d90:	ldr	r3, [pc, #2080]	; 115b8 <test_schema@@Base+0xc1c>
   10d94:	mov	r2, #192	; 0xc0
   10d98:	ldr	r1, [pc, #2028]	; 1158c <test_schema@@Base+0xbf0>
   10d9c:	ldr	r0, [pc, #2052]	; 115a8 <test_schema@@Base+0xc0c>
   10da0:	bl	10868 <__assert_fail@plt>
   10da4:	add	r0, r3, r2
   10da8:	ldr	r3, [r3, r2]
   10dac:	add	r3, r3, #4
   10db0:	ldr	r1, [pc, #2052]	; 115bc <test_schema@@Base+0xc20>
   10db4:	add	r0, r0, r3
   10db8:	bl	107a8 <strcmp@plt>
   10dbc:	cmp	r0, #0
   10dc0:	blt	10e28 <test_schema@@Base+0x48c>
   10dc4:	cmp	r8, r5
   10dc8:	bcs	10e34 <test_schema@@Base+0x498>
   10dcc:	sub	r2, r5, r8
   10dd0:	add	r2, r8, r2, lsr #1
   10dd4:	add	r1, r4, r2, lsl #2
   10dd8:	cmp	r9, r2
   10ddc:	bls	10d90 <test_schema@@Base+0x3f4>
   10de0:	ldr	r3, [r4, r2, lsl #2]
   10de4:	mov	fp, r5
   10de8:	adds	r3, r1, r3
   10dec:	beq	10d7c <test_schema@@Base+0x3e0>
   10df0:	mov	r5, r2
   10df4:	ldr	r2, [r3]
   10df8:	sub	r2, r3, r2
   10dfc:	ldrh	r1, [r2]
   10e00:	cmp	r1, #5
   10e04:	bls	10e14 <test_schema@@Base+0x478>
   10e08:	ldrh	r2, [r2, #4]
   10e0c:	cmp	r2, #0
   10e10:	bne	10da4 <test_schema@@Base+0x408>
   10e14:	ldr	r3, [pc, #1944]	; 115b4 <test_schema@@Base+0xc18>
   10e18:	mov	r2, #195	; 0xc3
   10e1c:	ldr	r1, [pc, #1896]	; 1158c <test_schema@@Base+0xbf0>
   10e20:	ldr	r0, [pc, #1904]	; 11598 <test_schema@@Base+0xbfc>
   10e24:	bl	10868 <__assert_fail@plt>
   10e28:	add	r8, r5, #1
   10e2c:	b	10d54 <test_schema@@Base+0x3b8>
   10e30:	mov	r5, fp
   10e34:	cmp	r8, r5
   10e38:	beq	10e4c <test_schema@@Base+0x4b0>
   10e3c:	ldr	r0, [pc, #1916]	; 115c0 <test_schema@@Base+0xc24>
   10e40:	bl	10808 <puts@plt>
   10e44:	mvn	r4, #0
   10e48:	b	114f8 <test_schema@@Base+0xb5c>
   10e4c:	add	r3, r4, r8, lsl #2
   10e50:	str	r3, [sp, #8]
   10e54:	cmp	r9, r8
   10e58:	bls	10f54 <test_schema@@Base+0x5b8>
   10e5c:	ldr	r3, [r4, r8, lsl #2]
   10e60:	str	r3, [sp, #12]
   10e64:	ldr	r2, [sp, #8]
   10e68:	adds	r5, r2, r3
   10e6c:	beq	10f68 <test_schema@@Base+0x5cc>
   10e70:	ldr	r3, [sp, #8]
   10e74:	ldr	r2, [sp, #12]
   10e78:	ldr	r3, [r3, r2]
   10e7c:	sub	r3, r5, r3
   10e80:	str	r3, [sp, #4]
   10e84:	ldrh	fp, [r3]
   10e88:	cmp	fp, #5
   10e8c:	bls	10f7c <test_schema@@Base+0x5e0>
   10e90:	ldrh	r3, [r3, #4]
   10e94:	cmp	r3, #0
   10e98:	beq	10f7c <test_schema@@Base+0x5e0>
   10e9c:	add	r0, r5, r3
   10ea0:	ldr	r3, [r5, r3]
   10ea4:	add	r3, r3, #4
   10ea8:	ldr	r1, [pc, #1804]	; 115bc <test_schema@@Base+0xc20>
   10eac:	add	r0, r0, r3
   10eb0:	bl	107a8 <strcmp@plt>
   10eb4:	cmp	r0, #0
   10eb8:	bne	10e3c <test_schema@@Base+0x4a0>
   10ebc:	cmn	r8, #1
   10ec0:	beq	10e3c <test_schema@@Base+0x4a0>
   10ec4:	cmp	fp, #13
   10ec8:	bhi	10f90 <test_schema@@Base+0x5f4>
   10ecc:	ldr	r0, [pc, #1776]	; 115c4 <test_schema@@Base+0xc28>
   10ed0:	bl	10808 <puts@plt>
   10ed4:	ldr	r4, [sp, #8]
   10ed8:	ldr	r6, [sp, #12]
   10edc:	ldr	r3, [r4, r6]
   10ee0:	sub	r3, r5, r3
   10ee4:	ldrh	r2, [r3]
   10ee8:	cmp	r2, #5
   10eec:	bls	11048 <test_schema@@Base+0x6ac>
   10ef0:	ldrh	r3, [r3, #4]
   10ef4:	cmp	r3, #0
   10ef8:	beq	11048 <test_schema@@Base+0x6ac>
   10efc:	add	r1, r5, r3
   10f00:	ldr	r3, [r5, r3]
   10f04:	add	r3, r3, #4
   10f08:	add	r1, r1, r3
   10f0c:	ldr	r0, [pc, #1716]	; 115c8 <test_schema@@Base+0xc2c>
   10f10:	bl	107b4 <printf@plt>
   10f14:	ldr	r3, [r4, r6]
   10f18:	sub	r3, r5, r3
   10f1c:	ldrh	r2, [r3]
   10f20:	cmp	r2, #13
   10f24:	movls	r2, #0
   10f28:	movls	r3, #0
   10f2c:	bls	10f44 <test_schema@@Base+0x5a8>
   10f30:	ldrh	r3, [r3, #12]
   10f34:	cmp	r3, #0
   10f38:	moveq	r2, #0
   10f3c:	moveq	r3, #0
   10f40:	ldrdne	r2, [r3, r5]
   10f44:	ldr	r0, [pc, #1664]	; 115cc <test_schema@@Base+0xc30>
   10f48:	bl	107b4 <printf@plt>
   10f4c:	mvn	r4, #0
   10f50:	b	114f8 <test_schema@@Base+0xb5c>
   10f54:	ldr	r3, [pc, #1628]	; 115b8 <test_schema@@Base+0xc1c>
   10f58:	mov	r2, #192	; 0xc0
   10f5c:	ldr	r1, [pc, #1576]	; 1158c <test_schema@@Base+0xbf0>
   10f60:	ldr	r0, [pc, #1600]	; 115a8 <test_schema@@Base+0xc0c>
   10f64:	bl	10868 <__assert_fail@plt>
   10f68:	ldr	r3, [pc, #1604]	; 115b4 <test_schema@@Base+0xc18>
   10f6c:	mov	r2, #195	; 0xc3
   10f70:	ldr	r1, [pc, #1556]	; 1158c <test_schema@@Base+0xbf0>
   10f74:	ldr	r0, [pc, #1556]	; 11590 <test_schema@@Base+0xbf4>
   10f78:	bl	10868 <__assert_fail@plt>
   10f7c:	ldr	r3, [pc, #1584]	; 115b4 <test_schema@@Base+0xc18>
   10f80:	mov	r2, #195	; 0xc3
   10f84:	ldr	r1, [pc, #1536]	; 1158c <test_schema@@Base+0xbf0>
   10f88:	ldr	r0, [pc, #1544]	; 11598 <test_schema@@Base+0xbfc>
   10f8c:	bl	10868 <__assert_fail@plt>
   10f90:	ldr	r3, [sp, #4]
   10f94:	ldrh	r3, [r3, #12]
   10f98:	cmp	r3, #0
   10f9c:	beq	10ecc <test_schema@@Base+0x530>
   10fa0:	ldrd	r2, [r3, r5]
   10fa4:	cmp	r3, #0
   10fa8:	cmpeq	r2, #150	; 0x96
   10fac:	bne	10ecc <test_schema@@Base+0x530>
   10fb0:	cmp	fp, #7
   10fb4:	bls	1105c <test_schema@@Base+0x6c0>
   10fb8:	ldr	r3, [sp, #4]
   10fbc:	ldrh	r3, [r3, #6]
   10fc0:	cmp	r3, #0
   10fc4:	beq	1105c <test_schema@@Base+0x6c0>
   10fc8:	add	r2, r5, r3
   10fcc:	ldr	r3, [r5, r3]
   10fd0:	adds	r1, r2, r3
   10fd4:	beq	11070 <test_schema@@Base+0x6d4>
   10fd8:	ldr	r3, [r2, r3]
   10fdc:	sub	r3, r1, r3
   10fe0:	ldrh	r2, [r3]
   10fe4:	cmp	r2, #5
   10fe8:	bls	11084 <test_schema@@Base+0x6e8>
   10fec:	ldrh	r3, [r3, #4]
   10ff0:	cmp	r3, #0
   10ff4:	beq	11084 <test_schema@@Base+0x6e8>
   10ff8:	ldrsb	r3, [r1, r3]
   10ffc:	cmp	r3, #5
   11000:	ldreq	fp, [sp]
   11004:	moveq	r8, r6
   11008:	bne	11084 <test_schema@@Base+0x6e8>
   1100c:	cmp	r8, fp
   11010:	bcs	11134 <test_schema@@Base+0x798>
   11014:	sub	r5, fp, r8
   11018:	add	r5, r8, r5, lsr #1
   1101c:	add	r2, r4, r5, lsl #2
   11020:	cmp	r9, r5
   11024:	bls	11094 <test_schema@@Base+0x6f8>
   11028:	ldr	r3, [r4, r5, lsl #2]
   1102c:	adds	r3, r2, r3
   11030:	bne	110f8 <test_schema@@Base+0x75c>
   11034:	ldr	r3, [pc, #1400]	; 115b4 <test_schema@@Base+0xc18>
   11038:	mov	r2, #195	; 0xc3
   1103c:	ldr	r1, [pc, #1352]	; 1158c <test_schema@@Base+0xbf0>
   11040:	ldr	r0, [pc, #1352]	; 11590 <test_schema@@Base+0xbf4>
   11044:	bl	10868 <__assert_fail@plt>
   11048:	ldr	r3, [pc, #1380]	; 115b4 <test_schema@@Base+0xc18>
   1104c:	mov	r2, #195	; 0xc3
   11050:	ldr	r1, [pc, #1332]	; 1158c <test_schema@@Base+0xbf0>
   11054:	ldr	r0, [pc, #1340]	; 11598 <test_schema@@Base+0xbfc>
   11058:	bl	10868 <__assert_fail@plt>
   1105c:	ldr	r3, [pc, #1388]	; 115d0 <test_schema@@Base+0xc34>
   11060:	mov	r2, #201	; 0xc9
   11064:	ldr	r1, [pc, #1312]	; 1158c <test_schema@@Base+0xbf0>
   11068:	ldr	r0, [pc, #1320]	; 11598 <test_schema@@Base+0xbfc>
   1106c:	bl	10868 <__assert_fail@plt>
   11070:	ldr	r3, [pc, #1372]	; 115d4 <test_schema@@Base+0xc38>
   11074:	mov	r2, #147	; 0x93
   11078:	ldr	r1, [pc, #1292]	; 1158c <test_schema@@Base+0xbf0>
   1107c:	ldr	r0, [pc, #1292]	; 11590 <test_schema@@Base+0xbf4>
   11080:	bl	10868 <__assert_fail@plt>
   11084:	ldr	r0, [pc, #1356]	; 115d8 <test_schema@@Base+0xc3c>
   11088:	bl	10808 <puts@plt>
   1108c:	mvn	r4, #0
   11090:	b	114f8 <test_schema@@Base+0xb5c>
   11094:	ldr	r3, [pc, #1308]	; 115b8 <test_schema@@Base+0xc1c>
   11098:	mov	r2, #192	; 0xc0
   1109c:	ldr	r1, [pc, #1256]	; 1158c <test_schema@@Base+0xbf0>
   110a0:	ldr	r0, [pc, #1280]	; 115a8 <test_schema@@Base+0xc0c>
   110a4:	bl	10868 <__assert_fail@plt>
   110a8:	add	r0, r3, r2
   110ac:	ldr	r3, [r3, r2]
   110b0:	add	r3, r3, #4
   110b4:	ldr	r1, [pc, #1312]	; 115dc <test_schema@@Base+0xc40>
   110b8:	add	r0, r0, r3
   110bc:	bl	107a8 <strcmp@plt>
   110c0:	cmp	r0, #0
   110c4:	blt	1112c <test_schema@@Base+0x790>
   110c8:	cmp	r8, r5
   110cc:	bcs	11138 <test_schema@@Base+0x79c>
   110d0:	sub	r2, r5, r8
   110d4:	add	r2, r8, r2, lsr #1
   110d8:	add	r1, r4, r2, lsl #2
   110dc:	cmp	r9, r2
   110e0:	bls	11094 <test_schema@@Base+0x6f8>
   110e4:	ldr	r3, [r4, r2, lsl #2]
   110e8:	mov	fp, r5
   110ec:	adds	r3, r1, r3
   110f0:	beq	11034 <test_schema@@Base+0x698>
   110f4:	mov	r5, r2
   110f8:	ldr	r2, [r3]
   110fc:	sub	r2, r3, r2
   11100:	ldrh	r1, [r2]
   11104:	cmp	r1, #5
   11108:	bls	11118 <test_schema@@Base+0x77c>
   1110c:	ldrh	r2, [r2, #4]
   11110:	cmp	r2, #0
   11114:	bne	110a8 <test_schema@@Base+0x70c>
   11118:	ldr	r3, [pc, #1172]	; 115b4 <test_schema@@Base+0xc18>
   1111c:	mov	r2, #195	; 0xc3
   11120:	ldr	r1, [pc, #1124]	; 1158c <test_schema@@Base+0xbf0>
   11124:	ldr	r0, [pc, #1132]	; 11598 <test_schema@@Base+0xbfc>
   11128:	bl	10868 <__assert_fail@plt>
   1112c:	add	r8, r5, #1
   11130:	b	1100c <test_schema@@Base+0x670>
   11134:	mov	r5, fp
   11138:	cmp	r8, r5
   1113c:	beq	11150 <test_schema@@Base+0x7b4>
   11140:	ldr	r0, [pc, #1176]	; 115e0 <test_schema@@Base+0xc44>
   11144:	bl	10808 <puts@plt>
   11148:	mvn	r4, #0
   1114c:	b	114f8 <test_schema@@Base+0xb5c>
   11150:	add	r2, r4, r8, lsl #2
   11154:	cmp	r9, r8
   11158:	bls	111d0 <test_schema@@Base+0x834>
   1115c:	ldr	r3, [r4, r8, lsl #2]
   11160:	adds	r5, r2, r3
   11164:	beq	111e4 <test_schema@@Base+0x848>
   11168:	ldr	r3, [r2, r3]
   1116c:	sub	r3, r5, r3
   11170:	str	r3, [sp, #4]
   11174:	ldrh	fp, [r3]
   11178:	cmp	fp, #5
   1117c:	bls	111f8 <test_schema@@Base+0x85c>
   11180:	ldrh	r3, [r3, #4]
   11184:	cmp	r3, #0
   11188:	beq	111f8 <test_schema@@Base+0x85c>
   1118c:	add	r0, r5, r3
   11190:	ldr	r3, [r5, r3]
   11194:	add	r3, r3, #4
   11198:	ldr	r1, [pc, #1084]	; 115dc <test_schema@@Base+0xc40>
   1119c:	add	r0, r0, r3
   111a0:	bl	107a8 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	bne	11140 <test_schema@@Base+0x7a4>
   111ac:	cmn	r8, #1
   111b0:	beq	11140 <test_schema@@Base+0x7a4>
   111b4:	cmp	fp, #7
   111b8:	bhi	1120c <test_schema@@Base+0x870>
   111bc:	ldr	r3, [pc, #1036]	; 115d0 <test_schema@@Base+0xc34>
   111c0:	mov	r2, #201	; 0xc9
   111c4:	ldr	r1, [pc, #960]	; 1158c <test_schema@@Base+0xbf0>
   111c8:	ldr	r0, [pc, #968]	; 11598 <test_schema@@Base+0xbfc>
   111cc:	bl	10868 <__assert_fail@plt>
   111d0:	ldr	r3, [pc, #992]	; 115b8 <test_schema@@Base+0xc1c>
   111d4:	mov	r2, #192	; 0xc0
   111d8:	ldr	r1, [pc, #940]	; 1158c <test_schema@@Base+0xbf0>
   111dc:	ldr	r0, [pc, #964]	; 115a8 <test_schema@@Base+0xc0c>
   111e0:	bl	10868 <__assert_fail@plt>
   111e4:	ldr	r3, [pc, #968]	; 115b4 <test_schema@@Base+0xc18>
   111e8:	mov	r2, #195	; 0xc3
   111ec:	ldr	r1, [pc, #920]	; 1158c <test_schema@@Base+0xbf0>
   111f0:	ldr	r0, [pc, #920]	; 11590 <test_schema@@Base+0xbf4>
   111f4:	bl	10868 <__assert_fail@plt>
   111f8:	ldr	r3, [pc, #948]	; 115b4 <test_schema@@Base+0xc18>
   111fc:	mov	r2, #195	; 0xc3
   11200:	ldr	r1, [pc, #900]	; 1158c <test_schema@@Base+0xbf0>
   11204:	ldr	r0, [pc, #908]	; 11598 <test_schema@@Base+0xbfc>
   11208:	bl	10868 <__assert_fail@plt>
   1120c:	ldr	r3, [sp, #4]
   11210:	ldrh	r3, [r3, #6]
   11214:	cmp	r3, #0
   11218:	beq	111bc <test_schema@@Base+0x820>
   1121c:	add	r2, r5, r3
   11220:	ldr	r3, [r5, r3]
   11224:	adds	r1, r2, r3
   11228:	beq	112c4 <test_schema@@Base+0x928>
   1122c:	ldr	r3, [r2, r3]
   11230:	sub	r3, r1, r3
   11234:	ldrh	r2, [r3]
   11238:	cmp	r2, #5
   1123c:	bls	112d8 <test_schema@@Base+0x93c>
   11240:	ldrh	r0, [r3, #4]
   11244:	cmp	r0, #0
   11248:	beq	112d8 <test_schema@@Base+0x93c>
   1124c:	ldrsb	r0, [r1, r0]
   11250:	cmp	r0, #15
   11254:	bne	112d8 <test_schema@@Base+0x93c>
   11258:	cmp	r2, #9
   1125c:	mvnls	r3, #0
   11260:	bls	11274 <test_schema@@Base+0x8d8>
   11264:	ldrh	r3, [r3, #8]
   11268:	cmp	r3, #0
   1126c:	ldrne	r3, [r1, r3]
   11270:	mvneq	r3, #0
   11274:	mov	r8, r7
   11278:	cmp	r7, r3
   1127c:	bne	112e8 <test_schema@@Base+0x94c>
   11280:	ldr	r7, [pc, #860]	; 115e4 <test_schema@@Base+0xc48>
   11284:	ldr	fp, [sp]
   11288:	cmp	r6, fp
   1128c:	bcs	11398 <test_schema@@Base+0x9fc>
   11290:	sub	r5, fp, r6
   11294:	add	r5, r6, r5, lsr #1
   11298:	add	r2, r4, r5, lsl #2
   1129c:	cmp	r9, r5
   112a0:	bls	112f8 <test_schema@@Base+0x95c>
   112a4:	ldr	r3, [r4, r5, lsl #2]
   112a8:	adds	r3, r2, r3
   112ac:	bne	1135c <test_schema@@Base+0x9c0>
   112b0:	ldr	r3, [pc, #764]	; 115b4 <test_schema@@Base+0xc18>
   112b4:	mov	r2, #195	; 0xc3
   112b8:	ldr	r1, [pc, #716]	; 1158c <test_schema@@Base+0xbf0>
   112bc:	ldr	r0, [pc, #716]	; 11590 <test_schema@@Base+0xbf4>
   112c0:	bl	10868 <__assert_fail@plt>
   112c4:	ldr	r3, [pc, #776]	; 115d4 <test_schema@@Base+0xc38>
   112c8:	mov	r2, #147	; 0x93
   112cc:	ldr	r1, [pc, #696]	; 1158c <test_schema@@Base+0xbf0>
   112d0:	ldr	r0, [pc, #696]	; 11590 <test_schema@@Base+0xbf4>
   112d4:	bl	10868 <__assert_fail@plt>
   112d8:	ldr	r0, [pc, #776]	; 115e8 <test_schema@@Base+0xc4c>
   112dc:	bl	10808 <puts@plt>
   112e0:	mvn	r4, #0
   112e4:	b	114f8 <test_schema@@Base+0xb5c>
   112e8:	ldr	r0, [pc, #764]	; 115ec <test_schema@@Base+0xc50>
   112ec:	bl	10808 <puts@plt>
   112f0:	mvn	r4, #0
   112f4:	b	114f8 <test_schema@@Base+0xb5c>
   112f8:	ldr	r3, [pc, #696]	; 115b8 <test_schema@@Base+0xc1c>
   112fc:	mov	r2, #192	; 0xc0
   11300:	ldr	r1, [pc, #644]	; 1158c <test_schema@@Base+0xbf0>
   11304:	ldr	r0, [pc, #668]	; 115a8 <test_schema@@Base+0xc0c>
   11308:	bl	10868 <__assert_fail@plt>
   1130c:	add	r0, r3, r2
   11310:	ldr	r3, [r3, r2]
   11314:	add	r3, r3, #4
   11318:	mov	r1, r7
   1131c:	add	r0, r0, r3
   11320:	bl	107a8 <strcmp@plt>
   11324:	cmp	r0, #0
   11328:	blt	11390 <test_schema@@Base+0x9f4>
   1132c:	cmp	r6, r5
   11330:	bcs	1139c <test_schema@@Base+0xa00>
   11334:	sub	r2, r5, r6
   11338:	add	r2, r6, r2, lsr #1
   1133c:	add	r3, r4, r2, lsl #2
   11340:	cmp	r9, r2
   11344:	bls	112f8 <test_schema@@Base+0x95c>
   11348:	ldr	r1, [r4, r2, lsl #2]
   1134c:	mov	fp, r5
   11350:	adds	r3, r3, r1
   11354:	beq	112b0 <test_schema@@Base+0x914>
   11358:	mov	r5, r2
   1135c:	ldr	r2, [r3]
   11360:	sub	r2, r3, r2
   11364:	ldrh	r1, [r2]
   11368:	cmp	r1, #5
   1136c:	bls	1137c <test_schema@@Base+0x9e0>
   11370:	ldrh	r2, [r2, #4]
   11374:	cmp	r2, #0
   11378:	bne	1130c <test_schema@@Base+0x970>
   1137c:	ldr	r3, [pc, #560]	; 115b4 <test_schema@@Base+0xc18>
   11380:	mov	r2, #195	; 0xc3
   11384:	ldr	r1, [pc, #512]	; 1158c <test_schema@@Base+0xbf0>
   11388:	ldr	r0, [pc, #520]	; 11598 <test_schema@@Base+0xbfc>
   1138c:	bl	10868 <__assert_fail@plt>
   11390:	add	r6, r5, #1
   11394:	b	11288 <test_schema@@Base+0x8ec>
   11398:	mov	r5, fp
   1139c:	cmp	r6, r5
   113a0:	beq	113b4 <test_schema@@Base+0xa18>
   113a4:	ldr	r0, [pc, #580]	; 115f0 <test_schema@@Base+0xc54>
   113a8:	bl	10808 <puts@plt>
   113ac:	mvn	r4, #0
   113b0:	b	114f8 <test_schema@@Base+0xb5c>
   113b4:	add	r2, r4, r6, lsl #2
   113b8:	cmp	r9, r6
   113bc:	bls	11430 <test_schema@@Base+0xa94>
   113c0:	ldr	r3, [r4, r6, lsl #2]
   113c4:	adds	r5, r2, r3
   113c8:	beq	11444 <test_schema@@Base+0xaa8>
   113cc:	ldr	r9, [r2, r3]
   113d0:	sub	r9, r5, r9
   113d4:	ldrh	r7, [r9]
   113d8:	cmp	r7, #5
   113dc:	bls	11458 <test_schema@@Base+0xabc>
   113e0:	ldrh	r3, [r9, #4]
   113e4:	cmp	r3, #0
   113e8:	beq	11458 <test_schema@@Base+0xabc>
   113ec:	add	r0, r5, r3
   113f0:	ldr	r3, [r5, r3]
   113f4:	add	r3, r3, #4
   113f8:	ldr	r1, [pc, #484]	; 115e4 <test_schema@@Base+0xc48>
   113fc:	add	r0, r0, r3
   11400:	bl	107a8 <strcmp@plt>
   11404:	subs	r4, r0, #0
   11408:	bne	113a4 <test_schema@@Base+0xa08>
   1140c:	cmn	r6, #1
   11410:	beq	113a4 <test_schema@@Base+0xa08>
   11414:	cmp	r7, #7
   11418:	bhi	1146c <test_schema@@Base+0xad0>
   1141c:	ldr	r3, [pc, #428]	; 115d0 <test_schema@@Base+0xc34>
   11420:	mov	r2, #201	; 0xc9
   11424:	ldr	r1, [pc, #352]	; 1158c <test_schema@@Base+0xbf0>
   11428:	ldr	r0, [pc, #360]	; 11598 <test_schema@@Base+0xbfc>
   1142c:	bl	10868 <__assert_fail@plt>
   11430:	ldr	r3, [pc, #384]	; 115b8 <test_schema@@Base+0xc1c>
   11434:	mov	r2, #192	; 0xc0
   11438:	ldr	r1, [pc, #332]	; 1158c <test_schema@@Base+0xbf0>
   1143c:	ldr	r0, [pc, #356]	; 115a8 <test_schema@@Base+0xc0c>
   11440:	bl	10868 <__assert_fail@plt>
   11444:	ldr	r3, [pc, #360]	; 115b4 <test_schema@@Base+0xc18>
   11448:	mov	r2, #195	; 0xc3
   1144c:	ldr	r1, [pc, #312]	; 1158c <test_schema@@Base+0xbf0>
   11450:	ldr	r0, [pc, #312]	; 11590 <test_schema@@Base+0xbf4>
   11454:	bl	10868 <__assert_fail@plt>
   11458:	ldr	r3, [pc, #340]	; 115b4 <test_schema@@Base+0xc18>
   1145c:	mov	r2, #195	; 0xc3
   11460:	ldr	r1, [pc, #292]	; 1158c <test_schema@@Base+0xbf0>
   11464:	ldr	r0, [pc, #300]	; 11598 <test_schema@@Base+0xbfc>
   11468:	bl	10868 <__assert_fail@plt>
   1146c:	ldrh	r3, [r9, #6]
   11470:	cmp	r3, #0
   11474:	beq	1141c <test_schema@@Base+0xa80>
   11478:	add	r2, r5, r3
   1147c:	ldr	r3, [r5, r3]
   11480:	adds	r1, r2, r3
   11484:	beq	1150c <test_schema@@Base+0xb70>
   11488:	ldr	r3, [r2, r3]
   1148c:	sub	r3, r1, r3
   11490:	ldrh	r2, [r3]
   11494:	cmp	r2, #5
   11498:	bls	11520 <test_schema@@Base+0xb84>
   1149c:	ldrh	r0, [r3, #4]
   114a0:	cmp	r0, #0
   114a4:	beq	11520 <test_schema@@Base+0xb84>
   114a8:	ldrsb	r0, [r1, r0]
   114ac:	cmp	r0, #14
   114b0:	bne	11520 <test_schema@@Base+0xb84>
   114b4:	cmp	r2, #7
   114b8:	bls	11530 <test_schema@@Base+0xb94>
   114bc:	ldrh	r0, [r3, #6]
   114c0:	cmp	r0, #0
   114c4:	beq	11530 <test_schema@@Base+0xb94>
   114c8:	ldrsb	r0, [r1, r0]
   114cc:	cmp	r0, #15
   114d0:	bne	11530 <test_schema@@Base+0xb94>
   114d4:	cmp	r2, #9
   114d8:	mvnls	r3, #0
   114dc:	bls	114f0 <test_schema@@Base+0xb54>
   114e0:	ldrh	r3, [r3, #8]
   114e4:	cmp	r3, #0
   114e8:	ldrne	r3, [r1, r3]
   114ec:	mvneq	r3, #0
   114f0:	cmp	r8, r3
   114f4:	bne	11540 <test_schema@@Base+0xba4>
   114f8:	mov	r0, sl
   114fc:	bl	107cc <free@plt>
   11500:	mov	r0, r4
   11504:	add	sp, sp, #20
   11508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1150c:	ldr	r3, [pc, #192]	; 115d4 <test_schema@@Base+0xc38>
   11510:	mov	r2, #147	; 0x93
   11514:	ldr	r1, [pc, #112]	; 1158c <test_schema@@Base+0xbf0>
   11518:	ldr	r0, [pc, #112]	; 11590 <test_schema@@Base+0xbf4>
   1151c:	bl	10868 <__assert_fail@plt>
   11520:	ldr	r0, [pc, #204]	; 115f4 <test_schema@@Base+0xc58>
   11524:	bl	10808 <puts@plt>
   11528:	mvn	r4, #0
   1152c:	b	114f8 <test_schema@@Base+0xb5c>
   11530:	ldr	r0, [pc, #192]	; 115f8 <test_schema@@Base+0xc5c>
   11534:	bl	10808 <puts@plt>
   11538:	mvn	r4, #0
   1153c:	b	114f8 <test_schema@@Base+0xb5c>
   11540:	ldr	r0, [pc, #180]	; 115fc <test_schema@@Base+0xc60>
   11544:	bl	10808 <puts@plt>
   11548:	mvn	r4, #0
   1154c:	b	114f8 <test_schema@@Base+0xb5c>
   11550:	mov	sl, #0
   11554:	mov	r0, r5
   11558:	bl	10844 <fclose@plt>
   1155c:	cmp	sl, #0
   11560:	beq	1156c <test_schema@@Base+0xbd0>
   11564:	mov	r0, sl
   11568:	bl	107cc <free@plt>
   1156c:	ldr	r0, [pc, #140]	; 11600 <test_schema@@Base+0xc64>
   11570:	bl	10808 <puts@plt>
   11574:	mvn	r4, #0
   11578:	b	11500 <test_schema@@Base+0xb64>
   1157c:	andeq	r1, r1, r0, lsr #15
   11580:	andeq	r2, r0, r0, lsl r7
   11584:	movtpl	r4, #9794	; 0x2642
   11588:	ldrdeq	r1, [r1], -r0
   1158c:	andeq	r1, r1, r4, lsr #15
   11590:	andeq	r1, r1, r4, lsl #16
   11594:	andeq	r1, r1, r0, asr r8
   11598:	andeq	r1, r1, ip, lsr #16
   1159c:	andeq	r1, r1, ip, ror #13
   115a0:	muleq	r1, ip, r8
   115a4:	andeq	r1, r1, r4, lsl #14
   115a8:	andeq	r1, r1, r4, ror #16
   115ac:			; <UNDEFINED> instruction: 0x000118b4
   115b0:	andeq	r1, r1, r0, lsr #14
   115b4:	andeq	r1, r1, r4, asr r7
   115b8:	andeq	r1, r1, ip, lsr r7
   115bc:	ldrdeq	r1, [r1], -r8
   115c0:	andeq	r1, r1, r0, ror #17
   115c4:	andeq	r1, r1, ip, lsl #18
   115c8:	andeq	r1, r1, r0, lsr r9
   115cc:	andeq	r1, r1, r0, asr #18
   115d0:	andeq	r1, r1, ip, ror #14
   115d4:	andeq	r1, r1, r4, lsl #15
   115d8:	andeq	r1, r1, r8, asr #18
   115dc:	andeq	r1, r1, r4, ror #18
   115e0:	andeq	r1, r1, ip, ror #18
   115e4:			; <UNDEFINED> instruction: 0x000119b4
   115e8:	andeq	r1, r1, r4, lsl #19
   115ec:	muleq	r1, ip, r9
   115f0:	andeq	r1, r1, r8, asr #19
   115f4:	andeq	r1, r1, r4, ror #19
   115f8:	andeq	r1, r1, ip, lsl #20
   115fc:	andeq	r1, r1, ip, lsr sl
   11600:	andeq	r1, r1, r4, ror #20

00011604 <main@@Base>:
   11604:	push	{r4, lr}
   11608:	sub	r3, r0, #1
   1160c:	cmp	r3, #1
   11610:	bhi	11634 <main@@Base+0x30>
   11614:	cmp	r0, #2
   11618:	ldreq	r2, [r1, #4]
   1161c:	ldreq	r3, [pc, #48]	; 11654 <main@@Base+0x50>
   11620:	streq	r2, [r3]
   11624:	ldr	r3, [pc, #40]	; 11654 <main@@Base+0x50>
   11628:	ldr	r0, [r3]
   1162c:	bl	1099c <test_schema@@Base>
   11630:	pop	{r4, pc}
   11634:	ldr	r3, [pc, #28]	; 11658 <main@@Base+0x54>
   11638:	ldr	r3, [r3]
   1163c:	mov	r2, #64	; 0x40
   11640:	mov	r1, #1
   11644:	ldr	r0, [pc, #16]	; 1165c <main@@Base+0x58>
   11648:	bl	107f0 <fwrite@plt>
   1164c:	mov	r0, #1
   11650:	bl	10838 <exit@plt>
   11654:	andeq	r2, r2, ip, asr r0
   11658:	andeq	r2, r2, r0, rrx
   1165c:	andeq	r1, r1, r4, lsl #21

00011660 <__libc_csu_init@@Base>:
   11660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11664:	mov	r7, r0
   11668:	ldr	r6, [pc, #72]	; 116b8 <__libc_csu_init@@Base+0x58>
   1166c:	ldr	r5, [pc, #72]	; 116bc <__libc_csu_init@@Base+0x5c>
   11670:	add	r6, pc, r6
   11674:	add	r5, pc, r5
   11678:	sub	r6, r6, r5
   1167c:	mov	r8, r1
   11680:	mov	r9, r2
   11684:	bl	10788 <strcmp@plt-0x20>
   11688:	asrs	r6, r6, #2
   1168c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11690:	mov	r4, #0
   11694:	add	r4, r4, #1
   11698:	ldr	r3, [r5], #4
   1169c:	mov	r2, r9
   116a0:	mov	r1, r8
   116a4:	mov	r0, r7
   116a8:	blx	r3
   116ac:	cmp	r6, r4
   116b0:	bne	11694 <__libc_csu_init@@Base+0x34>
   116b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   116b8:	muleq	r1, r8, r8
   116bc:	muleq	r1, r0, r8

000116c0 <__libc_csu_fini@@Base>:
   116c0:	bx	lr

Disassembly of section .fini:

000116c4 <.fini>:
   116c4:	push	{r3, lr}
   116c8:	pop	{r3, pc}
