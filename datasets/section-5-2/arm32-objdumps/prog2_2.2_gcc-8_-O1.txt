
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106ac <.init>:
   106ac:	push	{r3, lr}
   106b0:	bl	107a4 <_start@@Base+0x3c>
   106b4:	pop	{r3, pc}

Disassembly of section .plt:

000106b8 <printf@plt-0x14>:
   106b8:	push	{lr}		; (str lr, [sp, #-4]!)
   106bc:	ldr	lr, [pc, #4]	; 106c8 <printf@plt-0x4>
   106c0:	add	lr, pc, lr
   106c4:	ldr	pc, [lr, #8]!
   106c8:	andeq	r0, r1, r8, lsr r9

000106cc <printf@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2360]!	; 0x938

000106d8 <free@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2352]!	; 0x930

000106e4 <fgets@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2344]!	; 0x928

000106f0 <realloc@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2336]!	; 0x920

000106fc <strcpy@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2328]!	; 0x918

00010708 <puts@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2320]!	; 0x910

00010714 <malloc@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2312]!	; 0x908

00010720 <__libc_start_main@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2304]!	; 0x900

0001072c <__gmon_start__@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2296]!	; 0x8f8

00010738 <strlen@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2288]!	; 0x8f0

00010744 <__isoc99_scanf@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2280]!	; 0x8e8

00010750 <abort@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2272]!	; 0x8e0

0001075c <getc@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00010768 <_start@@Base>:
   10768:	mov	fp, #0
   1076c:	mov	lr, #0
   10770:	pop	{r1}		; (ldr r1, [sp], #4)
   10774:	mov	r2, sp
   10778:	push	{r2}		; (str r2, [sp, #-4]!)
   1077c:	push	{r0}		; (str r0, [sp, #-4]!)
   10780:	ldr	ip, [pc, #16]	; 10798 <_start@@Base+0x30>
   10784:	push	{ip}		; (str ip, [sp, #-4]!)
   10788:	ldr	r0, [pc, #12]	; 1079c <_start@@Base+0x34>
   1078c:	ldr	r3, [pc, #12]	; 107a0 <_start@@Base+0x38>
   10790:	bl	10720 <__libc_start_main@plt>
   10794:	bl	10750 <abort@plt>
   10798:	andeq	r0, r1, r8, lsr #20
   1079c:	andeq	r0, r1, r8, asr r8
   107a0:	andeq	r0, r1, r8, asr #19
   107a4:	ldr	r3, [pc, #20]	; 107c0 <_start@@Base+0x58>
   107a8:	ldr	r2, [pc, #20]	; 107c4 <_start@@Base+0x5c>
   107ac:	add	r3, pc, r3
   107b0:	ldr	r2, [r3, r2]
   107b4:	cmp	r2, #0
   107b8:	bxeq	lr
   107bc:	b	1072c <__gmon_start__@plt>
   107c0:	andeq	r0, r1, ip, asr #16
   107c4:	andeq	r0, r0, r0, asr #32
   107c8:	ldr	r0, [pc, #24]	; 107e8 <_start@@Base+0x80>
   107cc:	ldr	r3, [pc, #24]	; 107ec <_start@@Base+0x84>
   107d0:	cmp	r3, r0
   107d4:	bxeq	lr
   107d8:	ldr	r3, [pc, #16]	; 107f0 <_start@@Base+0x88>
   107dc:	cmp	r3, #0
   107e0:	bxeq	lr
   107e4:	bx	r3
   107e8:	andeq	r1, r2, ip, asr #32
   107ec:	andeq	r1, r2, ip, asr #32
   107f0:	andeq	r0, r0, r0
   107f4:	ldr	r0, [pc, #36]	; 10820 <_start@@Base+0xb8>
   107f8:	ldr	r1, [pc, #36]	; 10824 <_start@@Base+0xbc>
   107fc:	sub	r1, r1, r0
   10800:	asr	r1, r1, #2
   10804:	add	r1, r1, r1, lsr #31
   10808:	asrs	r1, r1, #1
   1080c:	bxeq	lr
   10810:	ldr	r3, [pc, #16]	; 10828 <_start@@Base+0xc0>
   10814:	cmp	r3, #0
   10818:	bxeq	lr
   1081c:	bx	r3
   10820:	andeq	r1, r2, ip, asr #32
   10824:	andeq	r1, r2, ip, asr #32
   10828:	andeq	r0, r0, r0
   1082c:	push	{r4, lr}
   10830:	ldr	r4, [pc, #24]	; 10850 <_start@@Base+0xe8>
   10834:	ldrb	r3, [r4]
   10838:	cmp	r3, #0
   1083c:	popne	{r4, pc}
   10840:	bl	107c8 <_start@@Base+0x60>
   10844:	mov	r3, #1
   10848:	strb	r3, [r4]
   1084c:	pop	{r4, pc}
   10850:	andeq	r1, r2, r4, asr r0
   10854:	b	107f4 <_start@@Base+0x8c>

00010858 <main@@Base>:
   10858:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1085c:	strd	r6, [sp, #8]
   10860:	strd	r8, [sp, #16]
   10864:	str	lr, [sp, #24]
   10868:	sub	sp, sp, #92	; 0x5c
   1086c:	mov	r0, #12
   10870:	bl	10714 <malloc@plt>
   10874:	mov	r7, r0
   10878:	mov	r3, #0
   1087c:	str	r3, [r0]
   10880:	str	r3, [r0, #4]
   10884:	str	r3, [r0, #8]
   10888:	movw	r8, #2616	; 0xa38
   1088c:	movt	r8, #1
   10890:	movw	r9, #2624	; 0xa40
   10894:	movt	r9, #1
   10898:	b	10940 <main@@Base+0xe8>
   1089c:	mov	r1, #3
   108a0:	mov	r0, r6
   108a4:	bl	106cc <printf@plt>
   108a8:	add	r1, sp, #4
   108ac:	mov	r0, r5
   108b0:	bl	10744 <__isoc99_scanf@plt>
   108b4:	ldr	r0, [r4]
   108b8:	bl	1075c <getc@plt>
   108bc:	ldr	r3, [sp, #4]
   108c0:	cmp	r3, #3
   108c4:	bhi	1089c <main@@Base+0x44>
   108c8:	cmp	r3, #0
   108cc:	beq	1098c <main@@Base+0x134>
   108d0:	movw	r0, #2672	; 0xa70
   108d4:	movt	r0, #1
   108d8:	bl	106cc <printf@plt>
   108dc:	movw	r3, #4176	; 0x1050
   108e0:	movt	r3, #2
   108e4:	ldr	r2, [r3]
   108e8:	mov	r1, #80	; 0x50
   108ec:	add	r0, sp, #8
   108f0:	bl	106e4 <fgets@plt>
   108f4:	add	r0, sp, #8
   108f8:	bl	10738 <strlen@plt>
   108fc:	add	r3, sp, #88	; 0x58
   10900:	add	r0, r3, r0
   10904:	mov	r3, #0
   10908:	strb	r3, [r0, #-81]	; 0xffffffaf
   1090c:	ldr	r4, [sp, #4]
   10910:	sub	r4, r4, #-1073741823	; 0xc0000001
   10914:	add	r0, sp, #8
   10918:	bl	10738 <strlen@plt>
   1091c:	add	r1, r0, #1
   10920:	ldr	r0, [r7, r4, lsl #2]
   10924:	bl	106f0 <realloc@plt>
   10928:	str	r0, [r7, r4, lsl #2]
   1092c:	ldr	r3, [sp, #4]
   10930:	sub	r3, r3, #-1073741823	; 0xc0000001
   10934:	add	r1, sp, #8
   10938:	ldr	r0, [r7, r3, lsl #2]
   1093c:	bl	106fc <strcpy@plt>
   10940:	sub	r5, r7, #4
   10944:	mov	r4, #0
   10948:	add	r4, r4, #1
   1094c:	mov	r1, r4
   10950:	mov	r0, r8
   10954:	bl	106cc <printf@plt>
   10958:	ldr	r0, [r5, #4]!
   1095c:	cmp	r0, #0
   10960:	moveq	r0, r9
   10964:	bl	10708 <puts@plt>
   10968:	cmp	r4, #3
   1096c:	bne	10948 <main@@Base+0xf0>
   10970:	movw	r6, #2632	; 0xa48
   10974:	movt	r6, #1
   10978:	movw	r5, #2668	; 0xa6c
   1097c:	movt	r5, #1
   10980:	movw	r4, #4176	; 0x1050
   10984:	movt	r4, #2
   10988:	b	1089c <main@@Base+0x44>
   1098c:	ldr	r0, [r7]
   10990:	bl	106d8 <free@plt>
   10994:	ldr	r0, [r7, #4]
   10998:	bl	106d8 <free@plt>
   1099c:	ldr	r0, [r7, #8]
   109a0:	bl	106d8 <free@plt>
   109a4:	mov	r0, r7
   109a8:	bl	106d8 <free@plt>
   109ac:	mov	r0, #0
   109b0:	add	sp, sp, #92	; 0x5c
   109b4:	ldrd	r4, [sp]
   109b8:	ldrd	r6, [sp, #8]
   109bc:	ldrd	r8, [sp, #16]
   109c0:	add	sp, sp, #24
   109c4:	pop	{pc}		; (ldr pc, [sp], #4)

000109c8 <__libc_csu_init@@Base>:
   109c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109cc:	mov	r7, r0
   109d0:	ldr	r6, [pc, #72]	; 10a20 <__libc_csu_init@@Base+0x58>
   109d4:	ldr	r5, [pc, #72]	; 10a24 <__libc_csu_init@@Base+0x5c>
   109d8:	add	r6, pc, r6
   109dc:	add	r5, pc, r5
   109e0:	sub	r6, r6, r5
   109e4:	mov	r8, r1
   109e8:	mov	r9, r2
   109ec:	bl	106ac <printf@plt-0x20>
   109f0:	asrs	r6, r6, #2
   109f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   109f8:	mov	r4, #0
   109fc:	add	r4, r4, #1
   10a00:	ldr	r3, [r5], #4
   10a04:	mov	r2, r9
   10a08:	mov	r1, r8
   10a0c:	mov	r0, r7
   10a10:	blx	r3
   10a14:	cmp	r6, r4
   10a18:	bne	109fc <__libc_csu_init@@Base+0x34>
   10a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a20:	andeq	r0, r1, r4, lsr r5
   10a24:	andeq	r0, r1, ip, lsr #10

00010a28 <__libc_csu_fini@@Base>:
   10a28:	bx	lr

Disassembly of section .fini:

00010a2c <.fini>:
   10a2c:	push	{r3, lr}
   10a30:	pop	{r3, pc}
