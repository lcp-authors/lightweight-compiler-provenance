
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011610 <.init>:
   11610:	push	{r3, lr}
   11614:	bl	12c78 <__assert_fail@plt+0x1198>
   11618:	pop	{r3, pc}

Disassembly of section .plt:

0001161c <calloc@plt-0x14>:
   1161c:	push	{lr}		; (str lr, [sp, #-4]!)
   11620:	ldr	lr, [pc, #4]	; 1162c <calloc@plt-0x4>
   11624:	add	lr, pc, lr
   11628:	ldr	pc, [lr, #8]!
   1162c:	ldrdeq	r0, [r2], -r4

00011630 <calloc@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #32, 20	; 0x20000
   11638:	ldr	pc, [ip, #2516]!	; 0x9d4

0001163c <fputs_unlocked@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #32, 20	; 0x20000
   11644:	ldr	pc, [ip, #2508]!	; 0x9cc

00011648 <fsync@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #32, 20	; 0x20000
   11650:	ldr	pc, [ip, #2500]!	; 0x9c4

00011654 <strcmp@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #32, 20	; 0x20000
   1165c:	ldr	pc, [ip, #2492]!	; 0x9bc

00011660 <strtol@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #32, 20	; 0x20000
   11668:	ldr	pc, [ip, #2484]!	; 0x9b4

0001166c <setsockopt@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #32, 20	; 0x20000
   11674:	ldr	pc, [ip, #2476]!	; 0x9ac

00011678 <pause@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #32, 20	; 0x20000
   11680:	ldr	pc, [ip, #2468]!	; 0x9a4

00011684 <printf@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #32, 20	; 0x20000
   1168c:	ldr	pc, [ip, #2460]!	; 0x99c

00011690 <read@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #32, 20	; 0x20000
   11698:	ldr	pc, [ip, #2452]!	; 0x994

0001169c <fflush@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #32, 20	; 0x20000
   116a4:	ldr	pc, [ip, #2444]!	; 0x98c

000116a8 <utmpxname@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #32, 20	; 0x20000
   116b0:	ldr	pc, [ip, #2436]!	; 0x984

000116b4 <sigprocmask@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #32, 20	; 0x20000
   116bc:	ldr	pc, [ip, #2428]!	; 0x97c

000116c0 <memmove@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #32, 20	; 0x20000
   116c8:	ldr	pc, [ip, #2420]!	; 0x974

000116cc <strchrnul@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #32, 20	; 0x20000
   116d4:	ldr	pc, [ip, #2412]!	; 0x96c

000116d8 <free@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #32, 20	; 0x20000
   116e0:	ldr	pc, [ip, #2404]!	; 0x964

000116e4 <gai_strerror@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #32, 20	; 0x20000
   116ec:	ldr	pc, [ip, #2396]!	; 0x95c

000116f0 <fgets@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #32, 20	; 0x20000
   116f8:	ldr	pc, [ip, #2388]!	; 0x954

000116fc <strndup@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #32, 20	; 0x20000
   11704:	ldr	pc, [ip, #2380]!	; 0x94c

00011708 <_exit@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #32, 20	; 0x20000
   11710:	ldr	pc, [ip, #2372]!	; 0x944

00011714 <memcpy@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #32, 20	; 0x20000
   1171c:	ldr	pc, [ip, #2364]!	; 0x93c

00011720 <signal@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #32, 20	; 0x20000
   11728:	ldr	pc, [ip, #2356]!	; 0x934

0001172c <time@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #32, 20	; 0x20000
   11734:	ldr	pc, [ip, #2348]!	; 0x92c

00011738 <fwrite_unlocked@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #32, 20	; 0x20000
   11740:	ldr	pc, [ip, #2340]!	; 0x924

00011744 <sleep@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #32, 20	; 0x20000
   1174c:	ldr	pc, [ip, #2332]!	; 0x91c

00011750 <stpcpy@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #32, 20	; 0x20000
   11758:	ldr	pc, [ip, #2324]!	; 0x914

0001175c <ctime@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #32, 20	; 0x20000
   11764:	ldr	pc, [ip, #2316]!	; 0x90c

00011768 <recvfrom@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #32, 20	; 0x20000
   11770:	ldr	pc, [ip, #2308]!	; 0x904

00011774 <strdup@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #32, 20	; 0x20000
   1177c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011780 <setutxent@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #32, 20	; 0x20000
   11788:	ldr	pc, [ip, #2292]!	; 0x8f4

0001178c <alarm@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #32, 20	; 0x20000
   11794:	ldr	pc, [ip, #2284]!	; 0x8ec

00011798 <sysconf@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #32, 20	; 0x20000
   117a0:	ldr	pc, [ip, #2276]!	; 0x8e4

000117a4 <unlink@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #32, 20	; 0x20000
   117ac:	ldr	pc, [ip, #2268]!	; 0x8dc

000117b0 <dup2@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #32, 20	; 0x20000
   117b8:	ldr	pc, [ip, #2260]!	; 0x8d4

000117bc <realloc@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #32, 20	; 0x20000
   117c4:	ldr	pc, [ip, #2252]!	; 0x8cc

000117c8 <chdir@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #32, 20	; 0x20000
   117d0:	ldr	pc, [ip, #2244]!	; 0x8c4

000117d4 <strcasecmp@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #32, 20	; 0x20000
   117dc:	ldr	pc, [ip, #2236]!	; 0x8bc

000117e0 <funlockfile@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #32, 20	; 0x20000
   117e8:	ldr	pc, [ip, #2228]!	; 0x8b4

000117ec <poll@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #32, 20	; 0x20000
   117f4:	ldr	pc, [ip, #2220]!	; 0x8ac

000117f8 <sigaction@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #32, 20	; 0x20000
   11800:	ldr	pc, [ip, #2212]!	; 0x8a4

00011804 <fwrite@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #32, 20	; 0x20000
   1180c:	ldr	pc, [ip, #2204]!	; 0x89c

00011810 <waitpid@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #32, 20	; 0x20000
   11818:	ldr	pc, [ip, #2196]!	; 0x894

0001181c <strcpy@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #32, 20	; 0x20000
   11824:	ldr	pc, [ip, #2188]!	; 0x88c

00011828 <error@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #32, 20	; 0x20000
   11830:	ldr	pc, [ip, #2180]!	; 0x884

00011834 <gethostname@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #32, 20	; 0x20000
   1183c:	ldr	pc, [ip, #2172]!	; 0x87c

00011840 <opendir@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #32, 20	; 0x20000
   11848:	ldr	pc, [ip, #2164]!	; 0x874

0001184c <open64@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #32, 20	; 0x20000
   11854:	ldr	pc, [ip, #2156]!	; 0x86c

00011858 <getenv@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #32, 20	; 0x20000
   11860:	ldr	pc, [ip, #2148]!	; 0x864

00011864 <malloc@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #32, 20	; 0x20000
   1186c:	ldr	pc, [ip, #2140]!	; 0x85c

00011870 <sigaddset@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #32, 20	; 0x20000
   11878:	ldr	pc, [ip, #2132]!	; 0x854

0001187c <__libc_start_main@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #32, 20	; 0x20000
   11884:	ldr	pc, [ip, #2124]!	; 0x84c

00011888 <strerror@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #32, 20	; 0x20000
   11890:	ldr	pc, [ip, #2116]!	; 0x844

00011894 <__ctype_tolower_loc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #32, 20	; 0x20000
   1189c:	ldr	pc, [ip, #2108]!	; 0x83c

000118a0 <__gmon_start__@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #32, 20	; 0x20000
   118a8:	ldr	pc, [ip, #2100]!	; 0x834

000118ac <mempcpy@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #32, 20	; 0x20000
   118b4:	ldr	pc, [ip, #2092]!	; 0x82c

000118b8 <kill@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #32, 20	; 0x20000
   118c0:	ldr	pc, [ip, #2084]!	; 0x824

000118c4 <__ctype_b_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #32, 20	; 0x20000
   118cc:	ldr	pc, [ip, #2076]!	; 0x81c

000118d0 <getpid@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #32, 20	; 0x20000
   118d8:	ldr	pc, [ip, #2068]!	; 0x814

000118dc <exit@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #32, 20	; 0x20000
   118e4:	ldr	pc, [ip, #2060]!	; 0x80c

000118e8 <strlen@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #32, 20	; 0x20000
   118f0:	ldr	pc, [ip, #2052]!	; 0x804

000118f4 <setsid@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #32, 20	; 0x20000
   118fc:	ldr	pc, [ip, #2044]!	; 0x7fc

00011900 <strchr@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #32, 20	; 0x20000
   11908:	ldr	pc, [ip, #2036]!	; 0x7f4

0001190c <fprintf@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #32, 20	; 0x20000
   11914:	ldr	pc, [ip, #2028]!	; 0x7ec

00011918 <__errno_location@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #32, 20	; 0x20000
   11920:	ldr	pc, [ip, #2020]!	; 0x7e4

00011924 <snprintf@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #32, 20	; 0x20000
   1192c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011930 <strerror_r@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #32, 20	; 0x20000
   11938:	ldr	pc, [ip, #2004]!	; 0x7d4

0001193c <bind@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #32, 20	; 0x20000
   11944:	ldr	pc, [ip, #1996]!	; 0x7cc

00011948 <setvbuf@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #32, 20	; 0x20000
   11950:	ldr	pc, [ip, #1988]!	; 0x7c4

00011954 <memset@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #32, 20	; 0x20000
   1195c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011960 <strncpy@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #32, 20	; 0x20000
   11968:	ldr	pc, [ip, #1972]!	; 0x7b4

0001196c <asprintf@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #32, 20	; 0x20000
   11974:	ldr	pc, [ip, #1964]!	; 0x7ac

00011978 <memchr@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #32, 20	; 0x20000
   11980:	ldr	pc, [ip, #1956]!	; 0x7a4

00011984 <writev@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #32, 20	; 0x20000
   1198c:	ldr	pc, [ip, #1948]!	; 0x79c

00011990 <fclose@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #32, 20	; 0x20000
   11998:	ldr	pc, [ip, #1940]!	; 0x794

0001199c <fcntl64@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #32, 20	; 0x20000
   119a4:	ldr	pc, [ip, #1932]!	; 0x78c

000119a8 <sendto@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #32, 20	; 0x20000
   119b0:	ldr	pc, [ip, #1924]!	; 0x784

000119b4 <endutxent@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #32, 20	; 0x20000
   119bc:	ldr	pc, [ip, #1916]!	; 0x77c

000119c0 <__overflow@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #32, 20	; 0x20000
   119c8:	ldr	pc, [ip, #1908]!	; 0x774

000119cc <sigemptyset@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #32, 20	; 0x20000
   119d4:	ldr	pc, [ip, #1900]!	; 0x76c

000119d8 <fork@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #32, 20	; 0x20000
   119e0:	ldr	pc, [ip, #1892]!	; 0x764

000119e4 <getnameinfo@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #32, 20	; 0x20000
   119ec:	ldr	pc, [ip, #1884]!	; 0x75c

000119f0 <strrchr@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #32, 20	; 0x20000
   119f8:	ldr	pc, [ip, #1876]!	; 0x754

000119fc <vfprintf@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #32, 20	; 0x20000
   11a04:	ldr	pc, [ip, #1868]!	; 0x74c

00011a08 <fputc@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #32, 20	; 0x20000
   11a10:	ldr	pc, [ip, #1860]!	; 0x744

00011a14 <readdir64@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #32, 20	; 0x20000
   11a1c:	ldr	pc, [ip, #1852]!	; 0x73c

00011a20 <flockfile@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #32, 20	; 0x20000
   11a28:	ldr	pc, [ip, #1844]!	; 0x734

00011a2c <vsnprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #32, 20	; 0x20000
   11a34:	ldr	pc, [ip, #1836]!	; 0x72c

00011a38 <fopen64@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #32, 20	; 0x20000
   11a40:	ldr	pc, [ip, #1828]!	; 0x724

00011a44 <qsort@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #32, 20	; 0x20000
   11a4c:	ldr	pc, [ip, #1820]!	; 0x71c

00011a50 <strpbrk@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #32, 20	; 0x20000
   11a58:	ldr	pc, [ip, #1812]!	; 0x714

00011a5c <freeaddrinfo@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #32, 20	; 0x20000
   11a64:	ldr	pc, [ip, #1804]!	; 0x70c

00011a68 <getaddrinfo@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #32, 20	; 0x20000
   11a70:	ldr	pc, [ip, #1796]!	; 0x704

00011a74 <socket@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #32, 20	; 0x20000
   11a7c:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a80 <chmod@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #32, 20	; 0x20000
   11a88:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a8c <__xstat64@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #32, 20	; 0x20000
   11a94:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a98 <isatty@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #32, 20	; 0x20000
   11aa0:	ldr	pc, [ip, #1764]!	; 0x6e4

00011aa4 <strncmp@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #32, 20	; 0x20000
   11aac:	ldr	pc, [ip, #1756]!	; 0x6dc

00011ab0 <abort@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #32, 20	; 0x20000
   11ab8:	ldr	pc, [ip, #1748]!	; 0x6d4

00011abc <getutxent@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #32, 20	; 0x20000
   11ac4:	ldr	pc, [ip, #1740]!	; 0x6cc

00011ac8 <close@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #32, 20	; 0x20000
   11ad0:	ldr	pc, [ip, #1732]!	; 0x6c4

00011ad4 <closedir@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #32, 20	; 0x20000
   11adc:	ldr	pc, [ip, #1724]!	; 0x6bc

00011ae0 <__assert_fail@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #32, 20	; 0x20000
   11ae8:	ldr	pc, [ip, #1716]!	; 0x6b4

Disassembly of section .text:

00011aec <daemon@@Base-0x4e80>:
   11aec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11af0:	mov	r5, r0
   11af4:	mov	r4, r1
   11af8:	ldr	r0, [r1]
   11afc:	strd	r6, [sp, #8]
   11b00:	movw	r6, #11392	; 0x2c80
   11b04:	movt	r6, #3
   11b08:	strd	r8, [sp, #16]
   11b0c:	strd	sl, [sp, #24]
   11b10:	movw	sl, #11296	; 0x2c20
   11b14:	movt	sl, #3
   11b18:	str	lr, [sp, #32]
   11b1c:	sub	sp, sp, #2496	; 0x9c0
   11b20:	sub	sp, sp, #12
   11b24:	bl	1cc34 <argp_parse@@Base+0x134c>
   11b28:	ldr	r1, [sl]
   11b2c:	str	r6, [sp, #36]	; 0x24
   11b30:	ldr	r0, [r6]
   11b34:	add	r1, r1, #1
   11b38:	lsl	r1, r1, #3
   11b3c:	bl	1e180 <argp_parse@@Base+0x2898>
   11b40:	cmp	r0, #0
   11b44:	str	r0, [r6]
   11b48:	beq	1294c <__assert_fail@plt+0xe6c>
   11b4c:	ldr	r2, [sl]
   11b50:	movw	r3, #3136	; 0xc40
   11b54:	movt	r3, #2
   11b58:	mvn	r6, #0
   11b5c:	movw	ip, #12428	; 0x308c
   11b60:	movt	ip, #3
   11b64:	movw	lr, #1260	; 0x4ec
   11b68:	movt	lr, #2
   11b6c:	movw	r1, #9588	; 0x2574
   11b70:	movt	r1, #3
   11b74:	str	r3, [r0, r2, lsl #3]
   11b78:	add	r3, r0, r2, lsl #3
   11b7c:	add	r2, r2, #1
   11b80:	movw	r0, #1284	; 0x504
   11b84:	movt	r0, #2
   11b88:	str	lr, [ip]
   11b8c:	str	r2, [sl]
   11b90:	str	r6, [r3, #4]
   11b94:	movw	r6, #9676	; 0x25cc
   11b98:	movt	r6, #3
   11b9c:	str	r6, [sp, #32]
   11ba0:	bl	1c828 <argp_parse@@Base+0xf40>
   11ba4:	mov	ip, #0
   11ba8:	mov	r2, r4
   11bac:	ldr	r0, [pc, #4064]	; 12b94 <__assert_fail@plt+0x10b4>
   11bb0:	movw	r4, #11324	; 0x2c3c
   11bb4:	movt	r4, #3
   11bb8:	mov	r1, r5
   11bbc:	mov	r3, ip
   11bc0:	str	ip, [sp]
   11bc4:	str	ip, [sp, #4]
   11bc8:	str	r4, [sp, #44]	; 0x2c
   11bcc:	bl	1b8e8 <argp_parse@@Base>
   11bd0:	ldr	r0, [r6, #12]
   11bd4:	bl	166a0 <__assert_fail@plt+0x4bc0>
   11bd8:	ldr	r4, [r4]
   11bdc:	cmp	r4, #0
   11be0:	beq	12904 <__assert_fail@plt+0xe24>
   11be4:	movw	r3, #11300	; 0x2c24
   11be8:	movt	r3, #3
   11bec:	ldr	r3, [r3]
   11bf0:	cmp	r3, #0
   11bf4:	bne	128f4 <__assert_fail@plt+0xe14>
   11bf8:	mov	r3, #0
   11bfc:	movw	r1, #9668	; 0x25c4
   11c00:	movt	r1, #3
   11c04:	mov	r2, #1
   11c08:	ldr	r0, [r1]
   11c0c:	mov	r1, r3
   11c10:	str	r3, [sp, #24]
   11c14:	bl	11948 <setvbuf@plt>
   11c18:	bl	16ab4 <daemon@@Base+0x148>
   11c1c:	movw	r3, #11320	; 0x2c38
   11c20:	movt	r3, #3
   11c24:	cmp	r0, #0
   11c28:	mov	r4, r0
   11c2c:	str	r0, [r3]
   11c30:	str	r3, [sp, #20]
   11c34:	beq	12970 <__assert_fail@plt+0xe90>
   11c38:	mov	r1, #46	; 0x2e
   11c3c:	mov	r0, r4
   11c40:	bl	11900 <strchr@plt>
   11c44:	subs	ip, r0, #0
   11c48:	beq	12994 <__assert_fail@plt+0xeb4>
   11c4c:	mov	r2, #0
   11c50:	movw	r3, #11316	; 0x2c34
   11c54:	movt	r3, #3
   11c58:	add	r7, sp, #1472	; 0x5c0
   11c5c:	add	r7, r7, #4
   11c60:	strb	r2, [ip], #1
   11c64:	add	r2, sp, #456	; 0x1c8
   11c68:	str	ip, [r3]
   11c6c:	add	r3, sp, #448	; 0x1c0
   11c70:	str	r3, [sp, #28]
   11c74:	str	r2, [sp, #48]	; 0x30
   11c78:	mov	r5, #3
   11c7c:	movw	r6, #10828	; 0x2a4c
   11c80:	movt	r6, #3
   11c84:	ldr	r0, [pc, #3852]	; 12b98 <__assert_fail@plt+0x10b8>
   11c88:	movw	r4, #20100	; 0x4e84
   11c8c:	movt	r4, #1
   11c90:	strh	r5, [r6, #4]
   11c94:	bl	11774 <strdup@plt>
   11c98:	mov	r1, r4
   11c9c:	str	r0, [r6, #40]	; 0x28
   11ca0:	mov	r0, #15
   11ca4:	bl	11720 <signal@plt>
   11ca8:	ldr	r6, [sp, #44]	; 0x2c
   11cac:	mov	r0, #2
   11cb0:	ldr	r3, [r6]
   11cb4:	cmp	r3, #0
   11cb8:	movne	r1, r4
   11cbc:	moveq	r1, #1
   11cc0:	bl	11720 <signal@plt>
   11cc4:	ldr	r3, [r6]
   11cc8:	mov	r0, r5
   11ccc:	cmp	r3, #0
   11cd0:	movne	r1, r4
   11cd4:	moveq	r1, #1
   11cd8:	bl	11720 <signal@plt>
   11cdc:	add	r0, sp, #312	; 0x138
   11ce0:	mov	r3, #268435456	; 0x10000000
   11ce4:	sub	r2, r0, #4
   11ce8:	str	r2, [sp, #40]	; 0x28
   11cec:	str	r3, [sp, #440]	; 0x1b8
   11cf0:	bl	119cc <sigemptyset@plt>
   11cf4:	movw	r3, #19164	; 0x4adc
   11cf8:	movt	r3, #1
   11cfc:	ldr	r1, [sp, #40]	; 0x28
   11d00:	mov	r2, #0
   11d04:	mov	r0, #14
   11d08:	str	r3, [sp, #308]	; 0x134
   11d0c:	bl	117f8 <sigaction@plt>
   11d10:	ldr	ip, [r6]
   11d14:	mov	r2, #0
   11d18:	movw	r3, #11708	; 0x2dbc
   11d1c:	movt	r3, #1
   11d20:	mov	r0, #10
   11d24:	ldr	r1, [sp, #40]	; 0x28
   11d28:	cmp	ip, r2
   11d2c:	moveq	r3, #1
   11d30:	str	r3, [sp, #308]	; 0x134
   11d34:	bl	117f8 <sigaction@plt>
   11d38:	mov	r0, #30
   11d3c:	bl	1178c <alarm@plt>
   11d40:	ldr	r0, [sl]
   11d44:	add	r0, r0, r5
   11d48:	lsl	r0, r0, r5
   11d4c:	bl	1e144 <argp_parse@@Base+0x285c>
   11d50:	subs	r3, r0, #0
   11d54:	str	r3, [sp, #16]
   11d58:	beq	12a1c <__assert_fail@plt+0xf3c>
   11d5c:	bl	15fb4 <__assert_fail@plt+0x44d4>
   11d60:	movw	r3, #10812	; 0x2a3c
   11d64:	movt	r3, #3
   11d68:	ldr	fp, [r3]
   11d6c:	cmp	fp, #0
   11d70:	beq	1289c <__assert_fail@plt+0xdbc>
   11d74:	movw	r9, #8620	; 0x21ac
   11d78:	movt	r9, #3
   11d7c:	mov	r3, #0
   11d80:	str	r3, [sp, #12]
   11d84:	movw	r3, #11304	; 0x2c28
   11d88:	movt	r3, #3
   11d8c:	ldr	r3, [r3]
   11d90:	cmp	r3, #0
   11d94:	bne	11ef8 <__assert_fail@plt+0x418>
   11d98:	ldr	r2, [sl]
   11d9c:	cmp	r2, #0
   11da0:	beq	11ef8 <__assert_fail@plt+0x418>
   11da4:	mov	r6, r3
   11da8:	movw	r3, #1448	; 0x5a8
   11dac:	movt	r3, #2
   11db0:	add	r8, sp, #180	; 0xb4
   11db4:	str	r9, [sp, #56]	; 0x38
   11db8:	str	r3, [sp, #64]	; 0x40
   11dbc:	movw	r3, #5456	; 0x1550
   11dc0:	movt	r3, #2
   11dc4:	str	r3, [sp, #52]	; 0x34
   11dc8:	movw	r3, #1468	; 0x5bc
   11dcc:	movt	r3, #2
   11dd0:	str	r3, [sp, #68]	; 0x44
   11dd4:	ldr	r3, [sp, #36]	; 0x24
   11dd8:	lsl	r9, r6, #3
   11ddc:	ldr	r3, [r3]
   11de0:	ldr	r4, [r3, r6, lsl #3]
   11de4:	add	r3, r3, r9
   11de8:	str	r3, [sp, #60]	; 0x3c
   11dec:	ldrb	r3, [r4]
   11df0:	cmp	r3, #0
   11df4:	beq	12b8c <__assert_fail@plt+0x10ac>
   11df8:	mov	r0, r4
   11dfc:	bl	118e8 <strlen@plt>
   11e00:	cmp	r0, #107	; 0x6b
   11e04:	bhi	12b9c <__assert_fail@plt+0x10bc>
   11e08:	ldr	r3, [sp, #48]	; 0x30
   11e0c:	mov	r0, r4
   11e10:	mov	r5, #1
   11e14:	sub	fp, r3, #6
   11e18:	bl	117a4 <unlink@plt>
   11e1c:	mov	r2, #108	; 0x6c
   11e20:	mov	r1, #0
   11e24:	mov	r0, fp
   11e28:	bl	11954 <memset@plt>
   11e2c:	ldr	r3, [sp, #28]
   11e30:	mov	r2, #107	; 0x6b
   11e34:	mov	r1, r4
   11e38:	mov	r0, fp
   11e3c:	strh	r5, [r3]
   11e40:	bl	11960 <strncpy@plt>
   11e44:	mov	r0, r5
   11e48:	mov	r2, #0
   11e4c:	mov	r1, #2
   11e50:	bl	11a74 <socket@plt>
   11e54:	subs	r5, r0, #0
   11e58:	blt	12808 <__assert_fail@plt+0xd28>
   11e5c:	mov	r0, fp
   11e60:	bl	118e8 <strlen@plt>
   11e64:	add	r2, r0, #2
   11e68:	mov	r0, r5
   11e6c:	ldr	r1, [sp, #28]
   11e70:	bl	1193c <bind@plt>
   11e74:	cmp	r0, #0
   11e78:	blt	12808 <__assert_fail@plt+0xd28>
   11e7c:	movw	r1, #438	; 0x1b6
   11e80:	mov	r0, r4
   11e84:	bl	11a80 <chmod@plt>
   11e88:	cmp	r0, #0
   11e8c:	blt	12808 <__assert_fail@plt+0xd28>
   11e90:	ldr	r3, [sp, #36]	; 0x24
   11e94:	ldr	r2, [sp, #60]	; 0x3c
   11e98:	ldr	r3, [r3]
   11e9c:	str	r5, [r2, #4]
   11ea0:	add	r2, r3, r9
   11ea4:	ldr	r1, [r2, #4]
   11ea8:	cmp	r1, #0
   11eac:	blt	127d0 <__assert_fail@plt+0xcf0>
   11eb0:	ldr	lr, [sp, #12]
   11eb4:	mov	ip, #3
   11eb8:	add	r6, r6, #1
   11ebc:	ldr	r0, [sp, #16]
   11ec0:	add	r2, r0, lr, lsl #3
   11ec4:	str	r1, [r0, lr, lsl #3]
   11ec8:	movw	r0, #1492	; 0x5d4
   11ecc:	movt	r0, #2
   11ed0:	ldr	r1, [r3, r9]
   11ed4:	add	r3, lr, #1
   11ed8:	strh	ip, [r2, #4]
   11edc:	str	r3, [sp, #12]
   11ee0:	bl	12d40 <__assert_fail@plt+0x1260>
   11ee4:	ldr	r3, [sl]
   11ee8:	cmp	r3, r6
   11eec:	bhi	11dd4 <__assert_fail@plt+0x2f4>
   11ef0:	ldr	r9, [sp, #56]	; 0x38
   11ef4:	b	11efc <__assert_fail@plt+0x41c>
   11ef8:	add	r8, sp, #180	; 0xb4
   11efc:	movw	r3, #10816	; 0x2a40
   11f00:	movt	r3, #3
   11f04:	ldr	r3, [r3]
   11f08:	cmp	r3, #0
   11f0c:	bne	1261c <__assert_fail@plt+0xb3c>
   11f10:	movw	r1, #1748	; 0x6d4
   11f14:	movt	r1, #2
   11f18:	ldr	r0, [r9, #12]
   11f1c:	bl	11a38 <fopen64@plt>
   11f20:	subs	r4, r0, #0
   11f24:	beq	11f48 <__assert_fail@plt+0x468>
   11f28:	bl	118d0 <getpid@plt>
   11f2c:	mov	r2, r0
   11f30:	movw	r1, #1752	; 0x6d8
   11f34:	movt	r1, #2
   11f38:	mov	r0, r4
   11f3c:	bl	1190c <fprintf@plt>
   11f40:	mov	r0, r4
   11f44:	bl	11990 <fclose@plt>
   11f48:	movw	r0, #1756	; 0x6dc
   11f4c:	movt	r0, #2
   11f50:	bl	12d40 <__assert_fail@plt+0x1260>
   11f54:	movw	r3, #11564	; 0x2d2c
   11f58:	movt	r3, #1
   11f5c:	ldr	r1, [sp, #40]	; 0x28
   11f60:	mov	r2, #0
   11f64:	mov	r0, #1
   11f68:	str	r3, [sp, #308]	; 0x134
   11f6c:	bl	117f8 <sigaction@plt>
   11f70:	ldr	r3, [sp, #44]	; 0x2c
   11f74:	ldr	r3, [r3]
   11f78:	cmp	r3, #0
   11f7c:	bne	125f0 <__assert_fail@plt+0xb10>
   11f80:	ldr	r3, [sp, #24]
   11f84:	cmp	r3, #0
   11f88:	bne	125e0 <__assert_fail@plt+0xb00>
   11f8c:	ldrd	r2, [sp, #12]
   11f90:	mov	r4, #0
   11f94:	add	sl, r3, r2, lsl #3
   11f98:	movw	r3, #5456	; 0x1550
   11f9c:	movt	r3, #2
   11fa0:	str	r3, [sp, #24]
   11fa4:	movw	r3, #1888	; 0x760
   11fa8:	movt	r3, #2
   11fac:	str	r3, [sp, #44]	; 0x2c
   11fb0:	movw	r3, #65324	; 0xff2c
   11fb4:	movt	r3, #1
   11fb8:	str	r3, [sp, #36]	; 0x24
   11fbc:	mvn	r2, #0
   11fc0:	ldr	r1, [sp, #12]
   11fc4:	ldr	r0, [sp, #16]
   11fc8:	bl	117ec <poll@plt>
   11fcc:	cmp	r0, #0
   11fd0:	beq	11fbc <__assert_fail@plt+0x4dc>
   11fd4:	ldr	r3, [sp, #32]
   11fd8:	ldr	r3, [r3]
   11fdc:	cmp	r3, #0
   11fe0:	bne	12344 <__assert_fail@plt+0x864>
   11fe4:	cmp	r0, #0
   11fe8:	blt	1222c <__assert_fail@plt+0x74c>
   11fec:	ldr	r3, [sp, #12]
   11ff0:	cmp	r3, #0
   11ff4:	beq	11fbc <__assert_fail@plt+0x4dc>
   11ff8:	movw	r3, #1960	; 0x7a8
   11ffc:	movt	r3, #2
   12000:	ldr	r5, [sp, #16]
   12004:	str	r3, [sp, #40]	; 0x28
   12008:	b	12080 <__assert_fail@plt+0x5a0>
   1200c:	ldr	r6, [r5]
   12010:	cmn	r6, #1
   12014:	beq	12074 <__assert_fail@plt+0x594>
   12018:	ldr	r3, [r9, #384]	; 0x180
   1201c:	cmp	r6, r3
   12020:	beq	12394 <__assert_fail@plt+0x8b4>
   12024:	ldr	r3, [r9, #312]	; 0x138
   12028:	cmp	r6, r3
   1202c:	beq	12108 <__assert_fail@plt+0x628>
   12030:	ldr	r3, [r9, #316]	; 0x13c
   12034:	cmp	r6, r3
   12038:	beq	12108 <__assert_fail@plt+0x628>
   1203c:	mov	r0, r6
   12040:	ldr	r6, [sp, #28]
   12044:	add	r1, sp, #76	; 0x4c
   12048:	mov	ip, #110	; 0x6e
   1204c:	mov	r3, #0
   12050:	str	r8, [sp]
   12054:	mov	r2, #1024	; 0x400
   12058:	str	r1, [sp, #4]
   1205c:	str	ip, [sp, #76]	; 0x4c
   12060:	mov	r1, r6
   12064:	bl	11768 <recvfrom@plt>
   12068:	cmp	r0, #0
   1206c:	bgt	1231c <__assert_fail@plt+0x83c>
   12070:	bne	124c8 <__assert_fail@plt+0x9e8>
   12074:	add	r5, r5, #8
   12078:	cmp	sl, r5
   1207c:	beq	11fbc <__assert_fail@plt+0x4dc>
   12080:	ldrh	r3, [r5, #6]
   12084:	tst	r3, #3
   12088:	bne	1200c <__assert_fail@plt+0x52c>
   1208c:	tst	r3, #32
   12090:	bne	121bc <__assert_fail@plt+0x6dc>
   12094:	tst	r3, #8
   12098:	bne	12298 <__assert_fail@plt+0x7b8>
   1209c:	tst	r3, #16
   120a0:	beq	12074 <__assert_fail@plt+0x594>
   120a4:	bl	11918 <__errno_location@plt>
   120a8:	mov	r6, r0
   120ac:	ldr	r0, [r0]
   120b0:	cmp	r0, #0
   120b4:	beq	12380 <__assert_fail@plt+0x8a0>
   120b8:	bl	11888 <strerror@plt>
   120bc:	movw	r2, #65308	; 0xff1c
   120c0:	movt	r2, #1
   120c4:	str	r0, [sp]
   120c8:	mov	r1, #100	; 0x64
   120cc:	mov	r0, r8
   120d0:	ldr	r3, [sp, #40]	; 0x28
   120d4:	bl	11924 <snprintf@plt>
   120d8:	mov	r3, #0
   120dc:	mov	r1, r8
   120e0:	ldr	r0, [sp, #24]
   120e4:	str	r3, [r6]
   120e8:	bl	12d40 <__assert_fail@plt+0x1260>
   120ec:	ldr	r2, [sp, #20]
   120f0:	mov	r3, #4
   120f4:	mov	r1, r8
   120f8:	mov	r0, #43	; 0x2b
   120fc:	ldr	r2, [r2]
   12100:	bl	14238 <__assert_fail@plt+0x2758>
   12104:	b	12074 <__assert_fail@plt+0x594>
   12108:	ldr	fp, [sp, #28]
   1210c:	mov	r3, #128	; 0x80
   12110:	movw	r2, #1025	; 0x401
   12114:	mov	r1, #0
   12118:	str	r3, [sp, #76]	; 0x4c
   1211c:	mov	r0, fp
   12120:	bl	11954 <memset@plt>
   12124:	add	ip, sp, #76	; 0x4c
   12128:	mov	r0, r6
   1212c:	mov	r3, #0
   12130:	mov	r2, #1024	; 0x400
   12134:	mov	r1, fp
   12138:	stm	sp, {r8, ip}
   1213c:	bl	11768 <recvfrom@plt>
   12140:	cmp	r0, #0
   12144:	bgt	122d4 <__assert_fail@plt+0x7f4>
   12148:	beq	12074 <__assert_fail@plt+0x594>
   1214c:	bl	11918 <__errno_location@plt>
   12150:	mov	r6, r0
   12154:	ldr	r0, [r0]
   12158:	cmp	r0, #4
   1215c:	beq	12074 <__assert_fail@plt+0x594>
   12160:	cmp	r0, #0
   12164:	beq	1258c <__assert_fail@plt+0xaac>
   12168:	bl	11888 <strerror@plt>
   1216c:	movw	r3, #1904	; 0x770
   12170:	movt	r3, #2
   12174:	movw	r2, #65308	; 0xff1c
   12178:	movt	r2, #1
   1217c:	str	r0, [sp]
   12180:	mov	r1, #100	; 0x64
   12184:	add	r0, sp, #80	; 0x50
   12188:	bl	11924 <snprintf@plt>
   1218c:	mov	r3, #0
   12190:	add	r1, sp, #80	; 0x50
   12194:	ldr	r0, [sp, #24]
   12198:	str	r3, [r6]
   1219c:	bl	12d40 <__assert_fail@plt+0x1260>
   121a0:	ldr	r2, [sp, #20]
   121a4:	mov	r3, #4
   121a8:	add	r1, sp, #80	; 0x50
   121ac:	mov	r0, #43	; 0x2b
   121b0:	ldr	r2, [r2]
   121b4:	bl	14238 <__assert_fail@plt+0x2758>
   121b8:	b	12074 <__assert_fail@plt+0x594>
   121bc:	bl	11918 <__errno_location@plt>
   121c0:	mov	r6, r0
   121c4:	ldr	r0, [r0]
   121c8:	cmp	r0, #0
   121cc:	beq	12300 <__assert_fail@plt+0x820>
   121d0:	bl	11888 <strerror@plt>
   121d4:	movw	r3, #1936	; 0x790
   121d8:	movt	r3, #2
   121dc:	str	r0, [sp]
   121e0:	movw	r2, #65308	; 0xff1c
   121e4:	movt	r2, #1
   121e8:	mov	r1, #100	; 0x64
   121ec:	mov	r0, r8
   121f0:	bl	11924 <snprintf@plt>
   121f4:	mov	r3, #0
   121f8:	mov	r1, r8
   121fc:	ldr	r0, [sp, #24]
   12200:	str	r3, [r6]
   12204:	bl	12d40 <__assert_fail@plt+0x1260>
   12208:	ldr	r2, [sp, #20]
   1220c:	mov	r3, #4
   12210:	mov	r1, r8
   12214:	mov	r0, #43	; 0x2b
   12218:	ldr	r2, [r2]
   1221c:	bl	14238 <__assert_fail@plt+0x2758>
   12220:	mvn	r3, #0
   12224:	str	r3, [r5]
   12228:	b	12074 <__assert_fail@plt+0x594>
   1222c:	bl	11918 <__errno_location@plt>
   12230:	mov	r5, r0
   12234:	ldr	r0, [r0]
   12238:	cmp	r0, #4
   1223c:	beq	11fbc <__assert_fail@plt+0x4dc>
   12240:	cmp	r0, #0
   12244:	beq	124f4 <__assert_fail@plt+0xa14>
   12248:	bl	11888 <strerror@plt>
   1224c:	movw	r2, #65308	; 0xff1c
   12250:	movt	r2, #1
   12254:	str	r0, [sp]
   12258:	mov	r1, #100	; 0x64
   1225c:	mov	r0, r8
   12260:	ldr	r3, [sp, #44]	; 0x2c
   12264:	bl	11924 <snprintf@plt>
   12268:	mov	r3, #0
   1226c:	mov	r1, r8
   12270:	ldr	r0, [sp, #24]
   12274:	str	r3, [r5]
   12278:	bl	12d40 <__assert_fail@plt+0x1260>
   1227c:	ldr	r2, [sp, #20]
   12280:	mov	r3, #4
   12284:	mov	r1, r8
   12288:	mov	r0, #43	; 0x2b
   1228c:	ldr	r2, [r2]
   12290:	bl	14238 <__assert_fail@plt+0x2758>
   12294:	b	11fbc <__assert_fail@plt+0x4dc>
   12298:	bl	11918 <__errno_location@plt>
   1229c:	mov	r6, r0
   122a0:	ldr	r0, [r0]
   122a4:	cmp	r0, #0
   122a8:	beq	12364 <__assert_fail@plt+0x884>
   122ac:	bl	11888 <strerror@plt>
   122b0:	movw	r3, #1948	; 0x79c
   122b4:	movt	r3, #2
   122b8:	str	r0, [sp]
   122bc:	movw	r2, #65308	; 0xff1c
   122c0:	movt	r2, #1
   122c4:	mov	r1, #100	; 0x64
   122c8:	mov	r0, r8
   122cc:	bl	11924 <snprintf@plt>
   122d0:	b	120d8 <__assert_fail@plt+0x5f8>
   122d4:	add	r3, sp, #2496	; 0x9c0
   122d8:	mov	r2, #0
   122dc:	ldr	r1, [sp, #76]	; 0x4c
   122e0:	add	r3, r3, #8
   122e4:	add	r3, r3, r0
   122e8:	mov	r0, r8
   122ec:	strb	r2, [r3, #-2056]	; 0xfffff7f8
   122f0:	bl	14c24 <__assert_fail@plt+0x3144>
   122f4:	mov	r1, fp
   122f8:	bl	147a8 <__assert_fail@plt+0x2cc8>
   122fc:	b	12074 <__assert_fail@plt+0x594>
   12300:	movw	r3, #1936	; 0x790
   12304:	movt	r3, #2
   12308:	ldr	r2, [sp, #36]	; 0x24
   1230c:	mov	r1, #100	; 0x64
   12310:	mov	r0, r8
   12314:	bl	11924 <snprintf@plt>
   12318:	b	121f4 <__assert_fail@plt+0x714>
   1231c:	ldr	r1, [sp, #20]
   12320:	add	r3, sp, #2496	; 0x9c0
   12324:	mov	r2, #0
   12328:	add	r3, r3, #8
   1232c:	add	r3, r3, r0
   12330:	strb	r2, [r3, #-2056]	; 0xfffff7f8
   12334:	ldr	r0, [r1]
   12338:	mov	r1, r6
   1233c:	bl	147a8 <__assert_fail@plt+0x2cc8>
   12340:	b	12074 <__assert_fail@plt+0x594>
   12344:	movw	r0, #1848	; 0x738
   12348:	movt	r0, #2
   1234c:	bl	12d40 <__assert_fail@plt+0x1260>
   12350:	bl	15fb4 <__assert_fail@plt+0x44d4>
   12354:	ldr	r2, [sp, #32]
   12358:	mov	r3, #0
   1235c:	str	r3, [r2]
   12360:	b	11fbc <__assert_fail@plt+0x4dc>
   12364:	movw	r3, #1948	; 0x79c
   12368:	movt	r3, #2
   1236c:	ldr	r2, [sp, #36]	; 0x24
   12370:	mov	r1, #100	; 0x64
   12374:	mov	r0, r8
   12378:	bl	11924 <snprintf@plt>
   1237c:	b	120d8 <__assert_fail@plt+0x5f8>
   12380:	mov	r1, #100	; 0x64
   12384:	mov	r0, r8
   12388:	ldrd	r2, [sp, #36]	; 0x24
   1238c:	bl	11924 <snprintf@plt>
   12390:	b	120d8 <__assert_fail@plt+0x5f8>
   12394:	mov	r0, r6
   12398:	rsb	r2, r4, #1024	; 0x400
   1239c:	add	r1, r7, r4
   123a0:	bl	11690 <read@plt>
   123a4:	cmp	r0, #0
   123a8:	ble	1250c <__assert_fail@plt+0xa2c>
   123ac:	add	r4, r4, r0
   123b0:	mov	r6, #0
   123b4:	add	r3, sp, #2496	; 0x9c0
   123b8:	mov	r1, #10
   123bc:	add	r3, r3, #8
   123c0:	mov	r0, r7
   123c4:	add	r3, r3, r4
   123c8:	strb	r6, [r3, #-1028]	; 0xfffffbfc
   123cc:	bl	11900 <strchr@plt>
   123d0:	cmp	r0, #0
   123d4:	beq	124c0 <__assert_fail@plt+0x9e0>
   123d8:	mov	r3, r7
   123dc:	mov	fp, r0
   123e0:	mov	r0, r3
   123e4:	strb	r6, [fp], #1
   123e8:	sub	r3, fp, r3
   123ec:	sub	r4, r4, r3
   123f0:	bl	14978 <__assert_fail@plt+0x2e98>
   123f4:	mov	r0, fp
   123f8:	mov	r1, #10
   123fc:	bl	11900 <strchr@plt>
   12400:	cmp	r0, #0
   12404:	mov	r3, fp
   12408:	bne	123dc <__assert_fail@plt+0x8fc>
   1240c:	cmp	r4, #0
   12410:	beq	12074 <__assert_fail@plt+0x594>
   12414:	ldrb	r3, [fp]
   12418:	cmp	r3, #0
   1241c:	bne	12454 <__assert_fail@plt+0x974>
   12420:	add	r2, fp, r4
   12424:	add	r3, fp, #1
   12428:	b	1243c <__assert_fail@plt+0x95c>
   1242c:	ldrb	r1, [r3]
   12430:	add	r3, r3, #1
   12434:	cmp	r1, #0
   12438:	bne	12454 <__assert_fail@plt+0x974>
   1243c:	cmp	r2, r3
   12440:	mov	fp, r3
   12444:	sub	r4, r2, r3
   12448:	bne	1242c <__assert_fail@plt+0x94c>
   1244c:	mov	r4, #0
   12450:	b	12074 <__assert_fail@plt+0x594>
   12454:	cmp	fp, r7
   12458:	beq	12470 <__assert_fail@plt+0x990>
   1245c:	mov	r1, fp
   12460:	mov	r2, r4
   12464:	mov	r0, r7
   12468:	bl	116c0 <memmove@plt>
   1246c:	b	123b4 <__assert_fail@plt+0x8d4>
   12470:	cmp	r4, #1024	; 0x400
   12474:	blt	12074 <__assert_fail@plt+0x594>
   12478:	mov	r0, r7
   1247c:	bl	14978 <__assert_fail@plt+0x2e98>
   12480:	ldrb	r3, [sp, #1476]	; 0x5c4
   12484:	cmp	r3, #60	; 0x3c
   12488:	movne	r4, #0
   1248c:	bne	123b4 <__assert_fail@plt+0x8d4>
   12490:	bl	118c4 <__ctype_b_loc@plt>
   12494:	ldrb	r3, [sp, #1477]	; 0x5c5
   12498:	ldr	r2, [r0]
   1249c:	lsl	r3, r3, #1
   124a0:	ldrh	r3, [r2, r3]
   124a4:	ands	r4, r3, #2048	; 0x800
   124a8:	beq	123b4 <__assert_fail@plt+0x8d4>
   124ac:	ldrb	r3, [sp, #1478]	; 0x5c6
   124b0:	cmp	r3, #62	; 0x3e
   124b4:	movne	r4, #0
   124b8:	moveq	r4, #3
   124bc:	b	123b4 <__assert_fail@plt+0x8d4>
   124c0:	mov	fp, r7
   124c4:	b	1240c <__assert_fail@plt+0x92c>
   124c8:	bl	11918 <__errno_location@plt>
   124cc:	mov	r6, r0
   124d0:	ldr	r0, [r0]
   124d4:	cmp	r0, #4
   124d8:	beq	12074 <__assert_fail@plt+0x594>
   124dc:	cmp	r0, #0
   124e0:	beq	125a8 <__assert_fail@plt+0xac8>
   124e4:	bl	11888 <strerror@plt>
   124e8:	movw	r3, #1920	; 0x780
   124ec:	movt	r3, #2
   124f0:	b	12174 <__assert_fail@plt+0x694>
   124f4:	mov	r1, #100	; 0x64
   124f8:	mov	r0, r8
   124fc:	ldr	r2, [sp, #36]	; 0x24
   12500:	ldr	r3, [sp, #44]	; 0x2c
   12504:	bl	11924 <snprintf@plt>
   12508:	b	12268 <__assert_fail@plt+0x788>
   1250c:	beq	123b0 <__assert_fail@plt+0x8d0>
   12510:	bl	11918 <__errno_location@plt>
   12514:	mov	r6, r0
   12518:	ldr	r0, [r0]
   1251c:	cmp	r0, #4
   12520:	beq	123b0 <__assert_fail@plt+0x8d0>
   12524:	cmp	r0, #0
   12528:	beq	125c4 <__assert_fail@plt+0xae4>
   1252c:	bl	11888 <strerror@plt>
   12530:	movw	r3, #1896	; 0x768
   12534:	movt	r3, #2
   12538:	str	r0, [sp]
   1253c:	movw	r2, #65308	; 0xff1c
   12540:	movt	r2, #1
   12544:	mov	r1, #100	; 0x64
   12548:	mov	r0, r8
   1254c:	bl	11924 <snprintf@plt>
   12550:	mov	r3, #0
   12554:	mov	r1, r8
   12558:	ldr	r0, [sp, #24]
   1255c:	str	r3, [r6]
   12560:	bl	12d40 <__assert_fail@plt+0x1260>
   12564:	ldr	r2, [sp, #20]
   12568:	mov	r3, #4
   1256c:	mov	r1, r8
   12570:	mov	r0, #43	; 0x2b
   12574:	ldr	r2, [r2]
   12578:	bl	14238 <__assert_fail@plt+0x2758>
   1257c:	mvn	r3, #0
   12580:	str	r3, [r5]
   12584:	str	r3, [r9, #384]	; 0x180
   12588:	b	123b0 <__assert_fail@plt+0x8d0>
   1258c:	movw	r3, #1904	; 0x770
   12590:	movt	r3, #2
   12594:	ldr	r2, [sp, #36]	; 0x24
   12598:	mov	r1, #100	; 0x64
   1259c:	add	r0, sp, #80	; 0x50
   125a0:	bl	11924 <snprintf@plt>
   125a4:	b	1218c <__assert_fail@plt+0x6ac>
   125a8:	movw	r3, #1920	; 0x780
   125ac:	movt	r3, #2
   125b0:	ldr	r2, [sp, #36]	; 0x24
   125b4:	mov	r1, #100	; 0x64
   125b8:	add	r0, sp, #80	; 0x50
   125bc:	bl	11924 <snprintf@plt>
   125c0:	b	1218c <__assert_fail@plt+0x6ac>
   125c4:	movw	r3, #1896	; 0x768
   125c8:	movt	r3, #2
   125cc:	ldr	r2, [sp, #36]	; 0x24
   125d0:	mov	r1, #100	; 0x64
   125d4:	mov	r0, r8
   125d8:	bl	11924 <snprintf@plt>
   125dc:	b	12550 <__assert_fail@plt+0xa70>
   125e0:	mov	r0, r3
   125e4:	mov	r1, #15
   125e8:	bl	118b8 <kill@plt>
   125ec:	b	11f8c <__assert_fail@plt+0x4ac>
   125f0:	ldr	r4, [sp, #32]
   125f4:	mov	r3, #1
   125f8:	str	r3, [r4, #4]
   125fc:	bl	118d0 <getpid@plt>
   12600:	mov	r1, r0
   12604:	movw	r0, #1776	; 0x6f0
   12608:	movt	r0, #2
   1260c:	bl	12d40 <__assert_fail@plt+0x1260>
   12610:	mov	r3, #0
   12614:	str	r3, [r4, #4]
   12618:	b	11f80 <__assert_fail@plt+0x4a0>
   1261c:	ldr	r3, [sp, #32]
   12620:	ldr	r1, [r3, #48]	; 0x30
   12624:	mvn	r3, #0
   12628:	str	r3, [r9, #312]	; 0x138
   1262c:	str	r3, [r9, #316]	; 0x13c
   12630:	ldr	r3, [r9, #4]
   12634:	cmp	r1, #0
   12638:	beq	12b7c <__assert_fail@plt+0x109c>
   1263c:	ldr	r2, [sp, #32]
   12640:	mov	ip, #0
   12644:	mov	r4, #1
   12648:	str	r3, [sp, #1480]	; 0x5c8
   1264c:	mov	r3, r8
   12650:	str	r4, [sp, #1476]	; 0x5c4
   12654:	str	ip, [sp, #1488]	; 0x5d0
   12658:	ldr	r0, [r2, #8]
   1265c:	mov	r2, #2
   12660:	str	r2, [sp, #1484]	; 0x5cc
   12664:	mov	r2, r7
   12668:	str	ip, [sp, #1492]	; 0x5d4
   1266c:	str	ip, [sp, #1496]	; 0x5d8
   12670:	str	ip, [sp, #1500]	; 0x5dc
   12674:	str	ip, [sp, #1504]	; 0x5e0
   12678:	bl	11a68 <getaddrinfo@plt>
   1267c:	cmp	r0, #0
   12680:	bne	12b6c <__assert_fail@plt+0x108c>
   12684:	ldr	r5, [sp, #180]	; 0xb4
   12688:	cmp	r5, #0
   1268c:	beq	12738 <__assert_fail@plt+0xc58>
   12690:	movw	r6, #1596	; 0x63c
   12694:	movt	r6, #2
   12698:	mov	sl, r4
   1269c:	mov	fp, #4
   126a0:	b	126c4 <__assert_fail@plt+0xbe4>
   126a4:	cmp	r3, #10
   126a8:	bne	126b8 <__assert_fail@plt+0xbd8>
   126ac:	ldr	r3, [r9, #316]	; 0x13c
   126b0:	cmp	r3, #0
   126b4:	strlt	r4, [r9, #316]	; 0x13c
   126b8:	ldr	r5, [r5, #28]
   126bc:	cmp	r5, #0
   126c0:	beq	12738 <__assert_fail@plt+0xc58>
   126c4:	str	sl, [sp, #448]	; 0x1c0
   126c8:	ldrd	r0, [r5, #4]
   126cc:	ldr	r2, [r5, #12]
   126d0:	bl	11a74 <socket@plt>
   126d4:	subs	r4, r0, #0
   126d8:	blt	126b8 <__assert_fail@plt+0xbd8>
   126dc:	mov	r2, #2
   126e0:	mov	r1, #1
   126e4:	str	fp, [sp]
   126e8:	ldr	r3, [sp, #28]
   126ec:	bl	1166c <setsockopt@plt>
   126f0:	cmp	r0, #0
   126f4:	blt	12b38 <__assert_fail@plt+0x1058>
   126f8:	ldr	r3, [r5, #4]
   126fc:	cmp	r3, #10
   12700:	beq	12b50 <__assert_fail@plt+0x1070>
   12704:	mov	r0, r4
   12708:	ldr	r2, [r5, #16]
   1270c:	ldr	r1, [r5, #20]
   12710:	bl	1193c <bind@plt>
   12714:	cmp	r0, #0
   12718:	blt	12b44 <__assert_fail@plt+0x1064>
   1271c:	ldr	r3, [r5, #4]
   12720:	cmp	r3, #2
   12724:	bne	126a4 <__assert_fail@plt+0xbc4>
   12728:	ldr	r3, [r9, #312]	; 0x138
   1272c:	cmp	r3, #0
   12730:	strlt	r4, [r9, #312]	; 0x138
   12734:	b	126b8 <__assert_fail@plt+0xbd8>
   12738:	ldr	r0, [sp, #180]	; 0xb4
   1273c:	bl	11a5c <freeaddrinfo@plt>
   12740:	ldr	r3, [r9, #312]	; 0x138
   12744:	cmp	r3, #0
   12748:	blt	12b1c <__assert_fail@plt+0x103c>
   1274c:	ldr	r2, [r9, #312]	; 0x138
   12750:	cmp	r2, #0
   12754:	bge	12acc <__assert_fail@plt+0xfec>
   12758:	ldr	r3, [r9, #316]	; 0x13c
   1275c:	cmp	r3, #0
   12760:	blt	127b0 <__assert_fail@plt+0xcd0>
   12764:	ldr	r0, [sp, #12]
   12768:	mov	r1, #3
   1276c:	ldr	ip, [sp, #16]
   12770:	add	r2, ip, r0, lsl #3
   12774:	mov	lr, ip
   12778:	mov	ip, r0
   1277c:	str	r3, [lr, r0, lsl #3]
   12780:	add	r3, ip, #1
   12784:	movw	r0, #1688	; 0x698
   12788:	movt	r0, #2
   1278c:	strh	r1, [r2, #4]
   12790:	str	r3, [sp, #12]
   12794:	bl	12d40 <__assert_fail@plt+0x1260>
   12798:	ldr	r3, [r9, #312]	; 0x138
   1279c:	cmp	r3, #0
   127a0:	bge	11f10 <__assert_fail@plt+0x430>
   127a4:	ldr	r3, [r9, #316]	; 0x13c
   127a8:	cmp	r3, #0
   127ac:	bge	11f10 <__assert_fail@plt+0x430>
   127b0:	bl	11918 <__errno_location@plt>
   127b4:	ldr	r0, [r0]
   127b8:	bl	11888 <strerror@plt>
   127bc:	mov	r1, r0
   127c0:	movw	r0, #1720	; 0x6b8
   127c4:	movt	r0, #2
   127c8:	bl	12d40 <__assert_fail@plt+0x1260>
   127cc:	b	11f10 <__assert_fail@plt+0x430>
   127d0:	ldr	r4, [r3, r9]
   127d4:	add	r6, r6, #1
   127d8:	bl	11918 <__errno_location@plt>
   127dc:	ldr	r0, [r0]
   127e0:	bl	11888 <strerror@plt>
   127e4:	mov	r2, r0
   127e8:	movw	r0, #1396	; 0x574
   127ec:	movt	r0, #2
   127f0:	mov	r1, r4
   127f4:	bl	12d40 <__assert_fail@plt+0x1260>
   127f8:	ldr	r3, [sl]
   127fc:	cmp	r3, r6
   12800:	bhi	11dd4 <__assert_fail@plt+0x2f4>
   12804:	b	11ef0 <__assert_fail@plt+0x410>
   12808:	mov	r3, r4
   1280c:	movw	r1, #1025	; 0x401
   12810:	ldr	r2, [sp, #64]	; 0x40
   12814:	mov	r0, r7
   12818:	bl	11924 <snprintf@plt>
   1281c:	bl	11918 <__errno_location@plt>
   12820:	mov	fp, r0
   12824:	ldr	r0, [r0]
   12828:	cmp	r0, #0
   1282c:	bne	12aa8 <__assert_fail@plt+0xfc8>
   12830:	movw	r2, #65324	; 0xff2c
   12834:	movt	r2, #1
   12838:	mov	r3, r7
   1283c:	mov	r1, #100	; 0x64
   12840:	mov	r0, r8
   12844:	bl	11924 <snprintf@plt>
   12848:	mov	r3, #0
   1284c:	mov	r1, r8
   12850:	ldr	r0, [sp, #52]	; 0x34
   12854:	str	r3, [fp]
   12858:	bl	12d40 <__assert_fail@plt+0x1260>
   1285c:	ldr	r2, [sp, #20]
   12860:	mov	r3, #4
   12864:	mov	r1, r8
   12868:	mov	r0, #43	; 0x2b
   1286c:	ldr	r2, [r2]
   12870:	bl	14238 <__assert_fail@plt+0x2758>
   12874:	ldr	r0, [fp]
   12878:	bl	11888 <strerror@plt>
   1287c:	mov	r2, r0
   12880:	mov	r1, r4
   12884:	ldr	r0, [sp, #68]	; 0x44
   12888:	bl	12d40 <__assert_fail@plt+0x1260>
   1288c:	mov	r0, r5
   12890:	mvn	r5, #0
   12894:	bl	11ac8 <close@plt>
   12898:	b	11e90 <__assert_fail@plt+0x3b0>
   1289c:	movw	r0, #1368	; 0x558
   128a0:	movt	r0, #2
   128a4:	mov	r2, fp
   128a8:	mov	r1, fp
   128ac:	bl	1184c <open64@plt>
   128b0:	movw	r9, #8620	; 0x21ac
   128b4:	movt	r9, #3
   128b8:	cmp	r0, #0
   128bc:	str	r0, [r9, #384]	; 0x180
   128c0:	blt	12a7c <__assert_fail@plt+0xf9c>
   128c4:	ldr	r2, [sp, #16]
   128c8:	mov	r3, #3
   128cc:	movw	r1, #1368	; 0x558
   128d0:	movt	r1, #2
   128d4:	str	r0, [r2]
   128d8:	movw	r0, #1380	; 0x564
   128dc:	movt	r0, #2
   128e0:	strh	r3, [r2, #4]
   128e4:	mov	r3, #1
   128e8:	str	r3, [sp, #12]
   128ec:	bl	12d40 <__assert_fail@plt+0x1260>
   128f0:	b	11d84 <__assert_fail@plt+0x2a4>
   128f4:	ldr	r2, [sp, #32]
   128f8:	mov	r3, #1
   128fc:	str	r3, [r2, #4]
   12900:	b	11bf8 <__assert_fail@plt+0x118>
   12904:	movw	r1, #11804	; 0x2e1c
   12908:	movt	r1, #1
   1290c:	mov	r0, #15
   12910:	bl	11720 <signal@plt>
   12914:	mov	r2, #30
   12918:	mov	r1, r4
   1291c:	mov	r0, r4
   12920:	bl	16808 <__assert_fail@plt+0x4d28>
   12924:	subs	r3, r0, #0
   12928:	str	r3, [sp, #24]
   1292c:	bge	11c18 <__assert_fail@plt+0x138>
   12930:	bl	11918 <__errno_location@plt>
   12934:	movw	r2, #1292	; 0x50c
   12938:	movt	r2, #2
   1293c:	ldr	r1, [r0]
   12940:	mov	r0, #1
   12944:	bl	11828 <error@plt>
   12948:	b	11c18 <__assert_fail@plt+0x138>
   1294c:	bl	11918 <__errno_location@plt>
   12950:	movw	r2, #65192	; 0xfea8
   12954:	movt	r2, #1
   12958:	ldr	r1, [r0]
   1295c:	mov	r0, #1
   12960:	bl	11828 <error@plt>
   12964:	ldr	r3, [sp, #36]	; 0x24
   12968:	ldr	r0, [r3]
   1296c:	b	11b4c <__assert_fail@plt+0x6c>
   12970:	bl	11918 <__errno_location@plt>
   12974:	movw	r2, #1316	; 0x524
   12978:	movt	r2, #2
   1297c:	ldr	r1, [r0]
   12980:	mov	r0, #1
   12984:	bl	11828 <error@plt>
   12988:	ldr	r3, [sp, #20]
   1298c:	ldr	r4, [r3]
   12990:	b	11c38 <__assert_fail@plt+0x158>
   12994:	add	r3, sp, #456	; 0x1c8
   12998:	add	r2, sp, #1472	; 0x5c0
   1299c:	add	r2, r2, #8
   129a0:	mov	r0, r4
   129a4:	str	r3, [sp, #48]	; 0x30
   129a8:	add	r3, sp, #448	; 0x1c0
   129ac:	sub	r7, r2, #4
   129b0:	mov	lr, r3
   129b4:	mov	r3, #2
   129b8:	mov	r1, ip
   129bc:	mov	r2, r7
   129c0:	str	lr, [sp, #28]
   129c4:	str	r3, [sp, #1476]	; 0x5c4
   129c8:	mov	r3, lr
   129cc:	str	ip, [sp, #1480]	; 0x5c8
   129d0:	str	ip, [sp, #1484]	; 0x5cc
   129d4:	str	ip, [sp, #1488]	; 0x5d0
   129d8:	str	ip, [sp, #1492]	; 0x5d4
   129dc:	str	ip, [sp, #1496]	; 0x5d8
   129e0:	str	ip, [sp, #1500]	; 0x5dc
   129e4:	str	ip, [sp, #1504]	; 0x5e0
   129e8:	bl	11a68 <getaddrinfo@plt>
   129ec:	subs	r5, r0, #0
   129f0:	beq	12a38 <__assert_fail@plt+0xf58>
   129f4:	movw	r6, #11316	; 0x2c34
   129f8:	movt	r6, #3
   129fc:	ldr	r3, [r6]
   12a00:	cmp	r3, #0
   12a04:	bne	11c78 <__assert_fail@plt+0x198>
   12a08:	movw	r0, #6600	; 0x19c8
   12a0c:	movt	r0, #2
   12a10:	bl	11774 <strdup@plt>
   12a14:	str	r0, [r6]
   12a18:	b	11c78 <__assert_fail@plt+0x198>
   12a1c:	bl	11918 <__errno_location@plt>
   12a20:	movw	r2, #1344	; 0x540
   12a24:	movt	r2, #2
   12a28:	ldr	r1, [r0]
   12a2c:	mov	r0, #1
   12a30:	bl	11828 <error@plt>
   12a34:	b	11d5c <__assert_fail@plt+0x27c>
   12a38:	ldr	r6, [sp, #20]
   12a3c:	ldr	r0, [r6]
   12a40:	bl	1cb08 <argp_parse@@Base+0x1220>
   12a44:	ldr	r4, [sp, #448]	; 0x1c0
   12a48:	ldr	r0, [r4, #24]
   12a4c:	bl	11774 <strdup@plt>
   12a50:	mov	r1, #46	; 0x2e
   12a54:	str	r0, [r6]
   12a58:	movw	r6, #11316	; 0x2c34
   12a5c:	movt	r6, #3
   12a60:	bl	11900 <strchr@plt>
   12a64:	subs	r3, r0, #0
   12a68:	mov	r0, r4
   12a6c:	strbne	r5, [r3], #1
   12a70:	strne	r3, [r6]
   12a74:	bl	11a5c <freeaddrinfo@plt>
   12a78:	b	129fc <__assert_fail@plt+0xf1c>
   12a7c:	bl	11918 <__errno_location@plt>
   12a80:	ldr	r0, [r0]
   12a84:	str	fp, [sp, #12]
   12a88:	bl	11888 <strerror@plt>
   12a8c:	mov	r2, r0
   12a90:	movw	r1, #1368	; 0x558
   12a94:	movt	r1, #2
   12a98:	movw	r0, #1396	; 0x574
   12a9c:	movt	r0, #2
   12aa0:	bl	12d40 <__assert_fail@plt+0x1260>
   12aa4:	b	11d84 <__assert_fail@plt+0x2a4>
   12aa8:	bl	11888 <strerror@plt>
   12aac:	movw	r2, #65308	; 0xff1c
   12ab0:	movt	r2, #1
   12ab4:	str	r0, [sp]
   12ab8:	mov	r3, r7
   12abc:	mov	r1, #100	; 0x64
   12ac0:	mov	r0, r8
   12ac4:	bl	11924 <snprintf@plt>
   12ac8:	b	12848 <__assert_fail@plt+0xd68>
   12acc:	ldr	r0, [sp, #12]
   12ad0:	mov	r1, #3
   12ad4:	ldr	ip, [sp, #16]
   12ad8:	add	r3, ip, r0, lsl #3
   12adc:	mov	lr, ip
   12ae0:	mov	ip, r0
   12ae4:	str	r2, [lr, r0, lsl #3]
   12ae8:	movw	r0, #1656	; 0x678
   12aec:	movt	r0, #2
   12af0:	strh	r1, [r3, #4]
   12af4:	add	r3, ip, #1
   12af8:	str	r3, [sp, #12]
   12afc:	bl	12d40 <__assert_fail@plt+0x1260>
   12b00:	ldr	r3, [r9, #316]	; 0x13c
   12b04:	cmp	r3, #0
   12b08:	bge	12764 <__assert_fail@plt+0xc84>
   12b0c:	ldr	r3, [r9, #312]	; 0x138
   12b10:	cmp	r3, #0
   12b14:	bge	11f10 <__assert_fail@plt+0x430>
   12b18:	b	127b0 <__assert_fail@plt+0xcd0>
   12b1c:	ldr	r3, [r9, #316]	; 0x13c
   12b20:	cmp	r3, #0
   12b24:	bge	1274c <__assert_fail@plt+0xc6c>
   12b28:	movw	r0, #1624	; 0x658
   12b2c:	movt	r0, #2
   12b30:	bl	14dd4 <__assert_fail@plt+0x32f4>
   12b34:	b	1274c <__assert_fail@plt+0xc6c>
   12b38:	mov	r0, r6
   12b3c:	bl	14dd4 <__assert_fail@plt+0x32f4>
   12b40:	b	126f8 <__assert_fail@plt+0xc18>
   12b44:	mov	r0, r4
   12b48:	bl	11ac8 <close@plt>
   12b4c:	b	126b8 <__assert_fail@plt+0xbd8>
   12b50:	mov	r2, #26
   12b54:	mov	r1, #41	; 0x29
   12b58:	str	fp, [sp]
   12b5c:	mov	r0, r4
   12b60:	ldr	r3, [sp, #28]
   12b64:	bl	1166c <setsockopt@plt>
   12b68:	b	12704 <__assert_fail@plt+0xc24>
   12b6c:	movw	r0, #1556	; 0x614
   12b70:	movt	r0, #2
   12b74:	bl	14dd4 <__assert_fail@plt+0x32f4>
   12b78:	b	1274c <__assert_fail@plt+0xc6c>
   12b7c:	movw	r0, #1520	; 0x5f0
   12b80:	movt	r0, #2
   12b84:	bl	12d40 <__assert_fail@plt+0x1260>
   12b88:	b	1274c <__assert_fail@plt+0xc6c>
   12b8c:	mvn	r5, #0
   12b90:	b	11e90 <__assert_fail@plt+0x3b0>
   12b94:	andeq	r2, r3, r0, lsr r3
   12b98:	andeq	r2, r3, r4, lsl r3
   12b9c:	mov	r3, r4
   12ba0:	movw	r1, #1025	; 0x401
   12ba4:	movw	r2, #1416	; 0x588
   12ba8:	movt	r2, #2
   12bac:	mov	r0, r7
   12bb0:	bl	11924 <snprintf@plt>
   12bb4:	bl	11918 <__errno_location@plt>
   12bb8:	mov	r4, r0
   12bbc:	ldr	r0, [r0]
   12bc0:	cmp	r0, #0
   12bc4:	beq	12c20 <__assert_fail@plt+0x1140>
   12bc8:	bl	11888 <strerror@plt>
   12bcc:	movw	r2, #65308	; 0xff1c
   12bd0:	movt	r2, #1
   12bd4:	str	r0, [sp]
   12bd8:	mov	r3, r7
   12bdc:	mov	r1, #100	; 0x64
   12be0:	ldr	r0, [sp, #28]
   12be4:	bl	11924 <snprintf@plt>
   12be8:	ldr	fp, [sp, #28]
   12bec:	mov	r3, #0
   12bf0:	mvn	r5, #0
   12bf4:	str	r3, [r4]
   12bf8:	ldr	r0, [sp, #52]	; 0x34
   12bfc:	mov	r1, fp
   12c00:	bl	12d40 <__assert_fail@plt+0x1260>
   12c04:	ldr	r2, [sp, #20]
   12c08:	mov	r3, #4
   12c0c:	mov	r1, fp
   12c10:	mov	r0, #43	; 0x2b
   12c14:	ldr	r2, [r2]
   12c18:	bl	14238 <__assert_fail@plt+0x2758>
   12c1c:	b	11e90 <__assert_fail@plt+0x3b0>
   12c20:	movw	r2, #65324	; 0xff2c
   12c24:	movt	r2, #1
   12c28:	ldr	r0, [sp, #28]
   12c2c:	mov	r3, r7
   12c30:	mov	r1, #100	; 0x64
   12c34:	bl	11924 <snprintf@plt>
   12c38:	b	12be8 <__assert_fail@plt+0x1108>
   12c3c:	mov	fp, #0
   12c40:	mov	lr, #0
   12c44:	pop	{r1}		; (ldr r1, [sp], #4)
   12c48:	mov	r2, sp
   12c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   12c50:	push	{r0}		; (str r0, [sp, #-4]!)
   12c54:	ldr	ip, [pc, #16]	; 12c6c <__assert_fail@plt+0x118c>
   12c58:	push	{ip}		; (str ip, [sp, #-4]!)
   12c5c:	ldr	r0, [pc, #12]	; 12c70 <__assert_fail@plt+0x1190>
   12c60:	ldr	r3, [pc, #12]	; 12c74 <__assert_fail@plt+0x1194>
   12c64:	bl	1187c <__libc_start_main@plt>
   12c68:	bl	11ab0 <abort@plt>
   12c6c:	andeq	pc, r1, r8, lsr #28
   12c70:	andeq	r1, r1, ip, ror #21
   12c74:	andeq	pc, r1, r8, asr #27
   12c78:	ldr	r3, [pc, #20]	; 12c94 <__assert_fail@plt+0x11b4>
   12c7c:	ldr	r2, [pc, #20]	; 12c98 <__assert_fail@plt+0x11b8>
   12c80:	add	r3, pc, r3
   12c84:	ldr	r2, [r3, r2]
   12c88:	cmp	r2, #0
   12c8c:	bxeq	lr
   12c90:	b	118a0 <__gmon_start__@plt>
   12c94:	andeq	pc, r1, r8, ror r3	; <UNPREDICTABLE>
   12c98:	andeq	r0, r0, r0, lsr #3
   12c9c:	ldr	r0, [pc, #24]	; 12cbc <__assert_fail@plt+0x11dc>
   12ca0:	ldr	r3, [pc, #24]	; 12cc0 <__assert_fail@plt+0x11e0>
   12ca4:	cmp	r3, r0
   12ca8:	bxeq	lr
   12cac:	ldr	r3, [pc, #16]	; 12cc4 <__assert_fail@plt+0x11e4>
   12cb0:	cmp	r3, #0
   12cb4:	bxeq	lr
   12cb8:	bx	r3
   12cbc:			; <UNDEFINED> instruction: 0x000325b8
   12cc0:			; <UNDEFINED> instruction: 0x000325b8
   12cc4:	andeq	r0, r0, r0
   12cc8:	ldr	r0, [pc, #36]	; 12cf4 <__assert_fail@plt+0x1214>
   12ccc:	ldr	r1, [pc, #36]	; 12cf8 <__assert_fail@plt+0x1218>
   12cd0:	sub	r1, r1, r0
   12cd4:	asr	r1, r1, #2
   12cd8:	add	r1, r1, r1, lsr #31
   12cdc:	asrs	r1, r1, #1
   12ce0:	bxeq	lr
   12ce4:	ldr	r3, [pc, #16]	; 12cfc <__assert_fail@plt+0x121c>
   12ce8:	cmp	r3, #0
   12cec:	bxeq	lr
   12cf0:	bx	r3
   12cf4:			; <UNDEFINED> instruction: 0x000325b8
   12cf8:			; <UNDEFINED> instruction: 0x000325b8
   12cfc:	andeq	r0, r0, r0
   12d00:	push	{r4, lr}
   12d04:	ldr	r4, [pc, #24]	; 12d24 <__assert_fail@plt+0x1244>
   12d08:	ldrb	r3, [r4]
   12d0c:	cmp	r3, #0
   12d10:	popne	{r4, pc}
   12d14:	bl	12c9c <__assert_fail@plt+0x11bc>
   12d18:	mov	r3, #1
   12d1c:	strb	r3, [r4]
   12d20:	pop	{r4, pc}
   12d24:	andeq	r2, r3, r8, asr #11
   12d28:	b	12cc8 <__assert_fail@plt+0x11e8>
   12d2c:	movw	r3, #9676	; 0x25cc
   12d30:	movt	r3, #3
   12d34:	mov	r2, #1
   12d38:	str	r2, [r3]
   12d3c:	bx	lr
   12d40:	push	{r0, r1, r2, r3}
   12d44:	movw	r3, #11324	; 0x2c3c
   12d48:	movt	r3, #3
   12d4c:	ldr	r3, [r3]
   12d50:	str	r4, [sp, #-8]!
   12d54:	str	lr, [sp, #4]
   12d58:	sub	sp, sp, #8
   12d5c:	cmp	r3, #0
   12d60:	beq	12d78 <__assert_fail@plt+0x1298>
   12d64:	movw	r3, #9676	; 0x25cc
   12d68:	movt	r3, #3
   12d6c:	ldr	r3, [r3, #4]
   12d70:	cmp	r3, #0
   12d74:	bne	12d90 <__assert_fail@plt+0x12b0>
   12d78:	add	sp, sp, #8
   12d7c:	ldr	r4, [sp]
   12d80:	ldr	lr, [sp, #4]
   12d84:	add	sp, sp, #8
   12d88:	add	sp, sp, #16
   12d8c:	bx	lr
   12d90:	add	r3, sp, #20
   12d94:	movw	r4, #9668	; 0x25c4
   12d98:	movt	r4, #3
   12d9c:	mov	r2, r3
   12da0:	ldr	r1, [sp, #16]
   12da4:	str	r3, [sp, #4]
   12da8:	ldr	r0, [r4]
   12dac:	bl	119fc <vfprintf@plt>
   12db0:	ldr	r0, [r4]
   12db4:	bl	1169c <fflush@plt>
   12db8:	b	12d78 <__assert_fail@plt+0x1298>
   12dbc:	strd	r4, [sp, #-16]!
   12dc0:	movw	r5, #9676	; 0x25cc
   12dc4:	movt	r5, #3
   12dc8:	ldr	r4, [r5, #4]
   12dcc:	mov	r2, #1
   12dd0:	movw	r3, #65116	; 0xfe5c
   12dd4:	movt	r3, #1
   12dd8:	movw	r1, #65108	; 0xfe54
   12ddc:	movt	r1, #1
   12de0:	movw	r0, #65124	; 0xfe64
   12de4:	movt	r0, #1
   12de8:	str	r2, [r5, #4]
   12dec:	str	r6, [sp, #8]
   12df0:	cmp	r4, #0
   12df4:	str	lr, [sp, #12]
   12df8:	movne	r1, r3
   12dfc:	bl	12d40 <__assert_fail@plt+0x1260>
   12e00:	clz	r3, r4
   12e04:	ldr	r6, [sp, #8]
   12e08:	lsr	r3, r3, #5
   12e0c:	str	r3, [r5, #4]
   12e10:	ldrd	r4, [sp]
   12e14:	add	sp, sp, #12
   12e18:	pop	{pc}		; (ldr pc, [sp], #4)
   12e1c:	mov	r0, #0
   12e20:	str	r4, [sp, #-8]!
   12e24:	str	lr, [sp, #4]
   12e28:	bl	11708 <_exit@plt>
   12e2c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12e30:	mov	r4, r1
   12e34:	mov	r5, #0
   12e38:	strd	r6, [sp, #8]
   12e3c:	strd	r8, [sp, #16]
   12e40:	mov	r9, r0
   12e44:	strd	sl, [sp, #24]
   12e48:	str	lr, [sp, #32]
   12e4c:	sub	sp, sp, #4
   12e50:	b	12e58 <__assert_fail@plt+0x1378>
   12e54:	strb	r5, [r4, r0]
   12e58:	mov	r0, r4
   12e5c:	bl	118e8 <strlen@plt>
   12e60:	sub	r0, r0, #1
   12e64:	ldrb	r3, [r4, r0]
   12e68:	cmp	r3, #58	; 0x3a
   12e6c:	beq	12e54 <__assert_fail@plt+0x1374>
   12e70:	ldrb	r3, [r4]
   12e74:	cmp	r3, #58	; 0x3a
   12e78:	bne	12e88 <__assert_fail@plt+0x13a8>
   12e7c:	ldrb	r3, [r4, #1]!
   12e80:	cmp	r3, #58	; 0x3a
   12e84:	beq	12e7c <__assert_fail@plt+0x139c>
   12e88:	cmp	r3, #0
   12e8c:	beq	12fb0 <__assert_fail@plt+0x14d0>
   12e90:	mov	r3, r4
   12e94:	mov	r1, #1
   12e98:	b	12ea4 <__assert_fail@plt+0x13c4>
   12e9c:	cmp	r5, #58	; 0x3a
   12ea0:	addeq	r1, r1, #1
   12ea4:	ldrb	r5, [r3, #1]!
   12ea8:	cmp	r5, #0
   12eac:	bne	12e9c <__assert_fail@plt+0x13bc>
   12eb0:	cmp	r9, #0
   12eb4:	moveq	r5, r9
   12eb8:	beq	12ee0 <__assert_fail@plt+0x1400>
   12ebc:	ldr	r3, [r9]
   12ec0:	cmp	r3, #0
   12ec4:	beq	13020 <__assert_fail@plt+0x1540>
   12ec8:	mov	r3, r9
   12ecc:	ldr	r2, [r3, #4]!
   12ed0:	add	r5, r5, #1
   12ed4:	cmp	r2, #0
   12ed8:	bne	12ecc <__assert_fail@plt+0x13ec>
   12edc:	add	r1, r1, r5
   12ee0:	add	r1, r1, #1
   12ee4:	mov	r0, r9
   12ee8:	lsl	r1, r1, #2
   12eec:	bl	1e180 <argp_parse@@Base+0x2898>
   12ef0:	subs	r9, r0, #0
   12ef4:	beq	13004 <__assert_fail@plt+0x1524>
   12ef8:	movw	fp, #65156	; 0xfe84
   12efc:	movt	fp, #1
   12f00:	add	r7, r9, r5, lsl #2
   12f04:	b	12f28 <__assert_fail@plt+0x1448>
   12f08:	mov	r1, r4
   12f0c:	mov	r2, r8
   12f10:	bl	11960 <strncpy@plt>
   12f14:	ldr	r3, [sl]
   12f18:	mov	r2, #0
   12f1c:	add	r7, r7, #4
   12f20:	add	r4, r6, #1
   12f24:	strb	r2, [r3, r8]
   12f28:	mov	r1, #58	; 0x3a
   12f2c:	mov	r0, r4
   12f30:	bl	11900 <strchr@plt>
   12f34:	subs	r6, r0, #0
   12f38:	mov	sl, r7
   12f3c:	sub	r8, r6, r4
   12f40:	beq	12f78 <__assert_fail@plt+0x1498>
   12f44:	add	r0, r8, #1
   12f48:	add	r5, r5, #1
   12f4c:	bl	1e144 <argp_parse@@Base+0x285c>
   12f50:	cmp	r0, #0
   12f54:	str	r0, [r7]
   12f58:	bne	12f08 <__assert_fail@plt+0x1428>
   12f5c:	bl	11918 <__errno_location@plt>
   12f60:	mov	r2, fp
   12f64:	ldr	r1, [r0]
   12f68:	mov	r0, #1
   12f6c:	bl	11828 <error@plt>
   12f70:	ldr	r0, [r7]
   12f74:	b	12f08 <__assert_fail@plt+0x1428>
   12f78:	mov	r0, r4
   12f7c:	add	r5, r5, #1
   12f80:	bl	118e8 <strlen@plt>
   12f84:	add	r0, r0, #1
   12f88:	bl	1dae8 <argp_parse@@Base+0x2200>
   12f8c:	mov	r1, r4
   12f90:	str	r0, [r7]
   12f94:	bl	1181c <strcpy@plt>
   12f98:	movw	r3, #11300	; 0x2c24
   12f9c:	movt	r3, #3
   12fa0:	ldr	r3, [r3]
   12fa4:	str	r6, [r9, r5, lsl #2]
   12fa8:	cmp	r3, #0
   12fac:	bne	12fd0 <__assert_fail@plt+0x14f0>
   12fb0:	mov	r0, r9
   12fb4:	add	sp, sp, #4
   12fb8:	ldrd	r4, [sp]
   12fbc:	ldrd	r6, [sp, #8]
   12fc0:	ldrd	r8, [sp, #16]
   12fc4:	ldrd	sl, [sp, #24]
   12fc8:	add	sp, sp, #32
   12fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fd0:	ldr	r2, [r9]
   12fd4:	cmp	r2, #0
   12fd8:	beq	12fb0 <__assert_fail@plt+0x14d0>
   12fdc:	movw	r4, #65180	; 0xfe9c
   12fe0:	movt	r4, #1
   12fe4:	mov	r1, r6
   12fe8:	mov	r0, r4
   12fec:	add	r6, r6, #1
   12ff0:	bl	11684 <printf@plt>
   12ff4:	ldr	r2, [r9, r6, lsl #2]
   12ff8:	cmp	r2, #0
   12ffc:	bne	12fe4 <__assert_fail@plt+0x1504>
   13000:	b	12fb0 <__assert_fail@plt+0x14d0>
   13004:	bl	11918 <__errno_location@plt>
   13008:	movw	r2, #65156	; 0xfe84
   1300c:	movt	r2, #1
   13010:	ldr	r1, [r0]
   13014:	mov	r0, #1
   13018:	bl	11828 <error@plt>
   1301c:	b	12ef8 <__assert_fail@plt+0x1418>
   13020:	mov	r5, r3
   13024:	b	12ee0 <__assert_fail@plt+0x1400>
   13028:	sub	r0, r0, #52	; 0x34
   1302c:	strd	r4, [sp, #-16]!
   13030:	mov	r4, r1
   13034:	str	r6, [sp, #8]
   13038:	str	lr, [sp, #12]
   1303c:	sub	sp, sp, #8
   13040:	cmp	r0, #207	; 0xcf
   13044:	ldrls	pc, [pc, r0, lsl #2]
   13048:	b	13614 <__assert_fail@plt+0x1b34>
   1304c:	strdeq	r3, [r1], -ip
   13050:	andeq	r3, r1, r4, lsl r6
   13054:	andeq	r3, r1, r4, ror #11
   13058:	andeq	r3, r1, r4, lsl r6
   1305c:	andeq	r3, r1, r4, lsl r6
   13060:	andeq	r3, r1, r4, lsl r6
   13064:	andeq	r3, r1, r4, lsl r6
   13068:	andeq	r3, r1, r4, lsl r6
   1306c:	andeq	r3, r1, r4, lsl r6
   13070:	andeq	r3, r1, r4, lsl r6
   13074:	andeq	r3, r1, r4, lsl r6
   13078:	andeq	r3, r1, r4, lsl r6
   1307c:	andeq	r3, r1, r4, lsl r6
   13080:	andeq	r3, r1, r4, lsl r6
   13084:	ldrdeq	r3, [r1], -r0
   13088:	andeq	r3, r1, r4, lsl r6
   1308c:			; <UNDEFINED> instruction: 0x000135bc
   13090:	andeq	r3, r1, r4, lsl r6
   13094:	andeq	r3, r1, r4, lsl r6
   13098:	andeq	r3, r1, r4, lsl r6
   1309c:	andeq	r3, r1, r4, lsl r6
   130a0:	andeq	r3, r1, r4, lsl r6
   130a4:	andeq	r3, r1, r4, lsl r6
   130a8:	andeq	r3, r1, r4, lsl r6
   130ac:	andeq	r3, r1, r4, lsl r6
   130b0:	andeq	r3, r1, r4, lsl r6
   130b4:	andeq	r3, r1, r4, lsl r6
   130b8:	andeq	r3, r1, r4, lsl r6
   130bc:	andeq	r3, r1, r8, lsr #11
   130c0:	andeq	r3, r1, r4, lsl r6
   130c4:	andeq	r3, r1, r4, lsl r6
   130c8:	muleq	r1, r0, r5
   130cc:	andeq	r3, r1, r8, ror r5
   130d0:	andeq	r3, r1, r4, lsl r6
   130d4:	andeq	r3, r1, r4, lsl r6
   130d8:	andeq	r3, r1, r4, lsl r6
   130dc:	andeq	r3, r1, r4, lsl r6
   130e0:	andeq	r3, r1, r4, lsl r6
   130e4:	andeq	r3, r1, r4, lsl r6
   130e8:	andeq	r3, r1, r4, lsl r6
   130ec:	andeq	r3, r1, r4, lsl r6
   130f0:	andeq	r3, r1, r4, lsl r6
   130f4:	andeq	r3, r1, r4, lsl r6
   130f8:	andeq	r3, r1, r4, lsl r6
   130fc:	andeq	r3, r1, r4, lsl r6
   13100:	andeq	r3, r1, r4, lsr #10
   13104:	andeq	r3, r1, r0, lsl r5
   13108:	andeq	r3, r1, r4, lsl r6
   1310c:	andeq	r3, r1, ip, ror #9
   13110:	andeq	r3, r1, r4, lsl r6
   13114:	ldrdeq	r3, [r1], -r8
   13118:	andeq	r3, r1, r4, lsl r6
   1311c:	andeq	r3, r1, r0, asr #9
   13120:	andeq	r3, r1, r4, lsl r6
   13124:	andeq	r3, r1, r4, lsl r6
   13128:	andeq	r3, r1, r4, lsl r6
   1312c:			; <UNDEFINED> instruction: 0x000134b4
   13130:	andeq	r3, r1, r0, ror r4
   13134:	andeq	r3, r1, r8, asr r4
   13138:	andeq	r3, r1, r4, lsl r6
   1313c:	andeq	r3, r1, r8, lsr r4
   13140:	andeq	r3, r1, r4, lsl r6
   13144:	andeq	r3, r1, r0, lsr #8
   13148:	andeq	r3, r1, r0, lsl #8
   1314c:	andeq	r3, r1, r4, lsl r6
   13150:	andeq	r3, r1, r4, lsl r6
   13154:	andeq	r3, r1, r4, lsl r6
   13158:	andeq	r3, r1, r4, lsl r6
   1315c:	andeq	r3, r1, r4, lsl r6
   13160:	andeq	r3, r1, r4, lsl r6
   13164:	andeq	r3, r1, r4, lsl r6
   13168:	andeq	r3, r1, r4, lsl r6
   1316c:	andeq	r3, r1, r4, lsl r6
   13170:	andeq	r3, r1, r4, lsl r6
   13174:	andeq	r3, r1, r4, lsl r6
   13178:	andeq	r3, r1, r4, lsl r6
   1317c:	andeq	r3, r1, r4, lsl r6
   13180:	andeq	r3, r1, r4, lsl r6
   13184:	andeq	r3, r1, r4, lsl r6
   13188:	andeq	r3, r1, r4, lsl r6
   1318c:	andeq	r3, r1, r4, lsl r6
   13190:	andeq	r3, r1, r4, lsl r6
   13194:	andeq	r3, r1, r4, lsl r6
   13198:	andeq	r3, r1, r4, lsl r6
   1319c:	andeq	r3, r1, r4, lsl r6
   131a0:	andeq	r3, r1, r4, lsl r6
   131a4:	andeq	r3, r1, r4, lsl r6
   131a8:	andeq	r3, r1, r4, lsl r6
   131ac:	andeq	r3, r1, r4, lsl r6
   131b0:	andeq	r3, r1, r4, lsl r6
   131b4:	andeq	r3, r1, r4, lsl r6
   131b8:	andeq	r3, r1, r4, lsl r6
   131bc:	andeq	r3, r1, r4, lsl r6
   131c0:	andeq	r3, r1, r4, lsl r6
   131c4:	andeq	r3, r1, r4, lsl r6
   131c8:	andeq	r3, r1, r4, lsl r6
   131cc:	andeq	r3, r1, r4, lsl r6
   131d0:	andeq	r3, r1, r4, lsl r6
   131d4:	andeq	r3, r1, r4, lsl r6
   131d8:	andeq	r3, r1, r4, lsl r6
   131dc:	andeq	r3, r1, r4, lsl r6
   131e0:	andeq	r3, r1, r4, lsl r6
   131e4:	andeq	r3, r1, r4, lsl r6
   131e8:	andeq	r3, r1, r4, lsl r6
   131ec:	andeq	r3, r1, r4, lsl r6
   131f0:	andeq	r3, r1, r4, lsl r6
   131f4:	andeq	r3, r1, r4, lsl r6
   131f8:	andeq	r3, r1, r4, lsl r6
   131fc:	andeq	r3, r1, r4, lsl r6
   13200:	andeq	r3, r1, r4, lsl r6
   13204:	andeq	r3, r1, r4, lsl r6
   13208:	andeq	r3, r1, r4, lsl r6
   1320c:	andeq	r3, r1, r4, lsl r6
   13210:	andeq	r3, r1, r4, lsl r6
   13214:	andeq	r3, r1, r4, lsl r6
   13218:	andeq	r3, r1, r4, lsl r6
   1321c:	andeq	r3, r1, r4, lsl r6
   13220:	andeq	r3, r1, r4, lsl r6
   13224:	andeq	r3, r1, r4, lsl r6
   13228:	andeq	r3, r1, r4, lsl r6
   1322c:	andeq	r3, r1, r4, lsl r6
   13230:	andeq	r3, r1, r4, lsl r6
   13234:	andeq	r3, r1, r4, lsl r6
   13238:	andeq	r3, r1, r4, lsl r6
   1323c:	andeq	r3, r1, r4, lsl r6
   13240:	andeq	r3, r1, r4, lsl r6
   13244:	andeq	r3, r1, r4, lsl r6
   13248:	andeq	r3, r1, r4, lsl r6
   1324c:	andeq	r3, r1, r4, lsl r6
   13250:	andeq	r3, r1, r4, lsl r6
   13254:	andeq	r3, r1, r4, lsl r6
   13258:	andeq	r3, r1, r4, lsl r6
   1325c:	andeq	r3, r1, r4, lsl r6
   13260:	andeq	r3, r1, r4, lsl r6
   13264:	andeq	r3, r1, r4, lsl r6
   13268:	andeq	r3, r1, r4, lsl r6
   1326c:	andeq	r3, r1, r4, lsl r6
   13270:	andeq	r3, r1, r4, lsl r6
   13274:	andeq	r3, r1, r4, lsl r6
   13278:	andeq	r3, r1, r4, lsl r6
   1327c:	andeq	r3, r1, r4, lsl r6
   13280:	andeq	r3, r1, r4, lsl r6
   13284:	andeq	r3, r1, r4, lsl r6
   13288:	andeq	r3, r1, r4, lsl r6
   1328c:	andeq	r3, r1, r4, lsl r6
   13290:	andeq	r3, r1, r4, lsl r6
   13294:	andeq	r3, r1, r4, lsl r6
   13298:	andeq	r3, r1, r4, lsl r6
   1329c:	andeq	r3, r1, r4, lsl r6
   132a0:	andeq	r3, r1, r4, lsl r6
   132a4:	andeq	r3, r1, r4, lsl r6
   132a8:	andeq	r3, r1, r4, lsl r6
   132ac:	andeq	r3, r1, r4, lsl r6
   132b0:	andeq	r3, r1, r4, lsl r6
   132b4:	andeq	r3, r1, r4, lsl r6
   132b8:	andeq	r3, r1, r4, lsl r6
   132bc:	andeq	r3, r1, r4, lsl r6
   132c0:	andeq	r3, r1, r4, lsl r6
   132c4:	andeq	r3, r1, r4, lsl r6
   132c8:	andeq	r3, r1, r4, lsl r6
   132cc:	andeq	r3, r1, r4, lsl r6
   132d0:	andeq	r3, r1, r4, lsl r6
   132d4:	andeq	r3, r1, r4, lsl r6
   132d8:	andeq	r3, r1, r4, lsl r6
   132dc:	andeq	r3, r1, r4, lsl r6
   132e0:	andeq	r3, r1, r4, lsl r6
   132e4:	andeq	r3, r1, r4, lsl r6
   132e8:	andeq	r3, r1, r4, lsl r6
   132ec:	andeq	r3, r1, r4, lsl r6
   132f0:	andeq	r3, r1, r4, lsl r6
   132f4:	andeq	r3, r1, r4, lsl r6
   132f8:	andeq	r3, r1, r4, lsl r6
   132fc:	andeq	r3, r1, r4, lsl r6
   13300:	andeq	r3, r1, r4, lsl r6
   13304:	andeq	r3, r1, r4, lsl r6
   13308:	andeq	r3, r1, r4, lsl r6
   1330c:	andeq	r3, r1, r4, lsl r6
   13310:	andeq	r3, r1, r4, lsl r6
   13314:	andeq	r3, r1, r4, lsl r6
   13318:	andeq	r3, r1, r4, lsl r6
   1331c:	andeq	r3, r1, r4, lsl r6
   13320:	andeq	r3, r1, r4, lsl r6
   13324:	andeq	r3, r1, r4, lsl r6
   13328:	andeq	r3, r1, r4, lsl r6
   1332c:	andeq	r3, r1, r4, lsl r6
   13330:	andeq	r3, r1, r4, lsl r6
   13334:	andeq	r3, r1, r4, lsl r6
   13338:	andeq	r3, r1, r4, lsl r6
   1333c:	andeq	r3, r1, r4, lsl r6
   13340:	andeq	r3, r1, r4, lsl r6
   13344:	andeq	r3, r1, r4, lsl r6
   13348:	andeq	r3, r1, r4, lsl r6
   1334c:	andeq	r3, r1, r4, lsl r6
   13350:	andeq	r3, r1, r4, lsl r6
   13354:	andeq	r3, r1, r4, lsl r6
   13358:	andeq	r3, r1, r4, lsl r6
   1335c:	andeq	r3, r1, r4, lsl r6
   13360:	andeq	r3, r1, r4, lsl r6
   13364:	andeq	r3, r1, r4, lsl r6
   13368:	andeq	r3, r1, r4, lsl r6
   1336c:	andeq	r3, r1, r4, lsl r6
   13370:	andeq	r3, r1, r4, lsl r6
   13374:	andeq	r3, r1, r4, lsl r6
   13378:	andeq	r3, r1, r4, lsl r6
   1337c:	andeq	r3, r1, r8, ror #7
   13380:	ldrdeq	r3, [r1], -r0
   13384:			; <UNDEFINED> instruction: 0x000133b8
   13388:	andeq	r3, r1, ip, lsl #7
   1338c:	mov	r1, #0
   13390:	movw	r2, #8620	; 0x21ac
   13394:	movt	r2, #3
   13398:	mov	r3, r1
   1339c:	str	r1, [r2, #4]
   133a0:	mov	r0, r3
   133a4:	add	sp, sp, #8
   133a8:	ldrd	r4, [sp]
   133ac:	ldr	r6, [sp, #8]
   133b0:	add	sp, sp, #12
   133b4:	pop	{pc}		; (ldr pc, [sp], #4)
   133b8:	movw	r2, #11304	; 0x2c28
   133bc:	movt	r2, #3
   133c0:	mov	r1, #1
   133c4:	mov	r3, #0
   133c8:	str	r1, [r2]
   133cc:	b	133a0 <__assert_fail@plt+0x18c0>
   133d0:	movw	r2, #10812	; 0x2a3c
   133d4:	movt	r2, #3
   133d8:	mov	r1, #1
   133dc:	mov	r3, #0
   133e0:	str	r1, [r2]
   133e4:	b	133a0 <__assert_fail@plt+0x18c0>
   133e8:	movw	r2, #11388	; 0x2c7c
   133ec:	movt	r2, #3
   133f0:	mov	r1, #1
   133f4:	mov	r3, #0
   133f8:	str	r1, [r2]
   133fc:	b	133a0 <__assert_fail@plt+0x18c0>
   13400:	movw	r5, #11292	; 0x2c1c
   13404:	movt	r5, #3
   13408:	mov	r1, r4
   1340c:	ldr	r0, [r5]
   13410:	bl	12e2c <__assert_fail@plt+0x134c>
   13414:	mov	r3, #0
   13418:	str	r0, [r5]
   1341c:	b	133a0 <__assert_fail@plt+0x18c0>
   13420:	movw	r2, #10816	; 0x2a40
   13424:	movt	r2, #3
   13428:	mov	r1, #1
   1342c:	mov	r3, #0
   13430:	str	r1, [r2]
   13434:	b	133a0 <__assert_fail@plt+0x18c0>
   13438:	movw	r3, #11392	; 0x2c80
   1343c:	movt	r3, #3
   13440:	ldr	r2, [r3]
   13444:	mvn	r1, #0
   13448:	mov	r3, #0
   1344c:	str	r4, [r2]
   13450:	str	r1, [r2, #4]
   13454:	b	133a0 <__assert_fail@plt+0x18c0>
   13458:	movw	r2, #11324	; 0x2c3c
   1345c:	movt	r2, #3
   13460:	mov	r1, #1
   13464:	mov	r3, #0
   13468:	str	r1, [r2]
   1346c:	b	133a0 <__assert_fail@plt+0x18c0>
   13470:	mov	r5, r2
   13474:	add	r1, sp, #4
   13478:	mov	r2, #10
   1347c:	mov	r0, r4
   13480:	bl	11660 <strtol@plt>
   13484:	ldr	r3, [sp, #4]
   13488:	mov	r6, r0
   1348c:	ldrb	r2, [r3]
   13490:	cmp	r2, #0
   13494:	bne	1361c <__assert_fail@plt+0x1b3c>
   13498:	rsb	r6, r6, r6, lsl #4
   1349c:	movw	r2, #8620	; 0x21ac
   134a0:	movt	r2, #3
   134a4:	mov	r3, #0
   134a8:	lsl	r6, r6, #2
   134ac:	str	r6, [r2, #8]
   134b0:	b	133a0 <__assert_fail@plt+0x18c0>
   134b4:	movw	r5, #11332	; 0x2c44
   134b8:	movt	r5, #3
   134bc:	b	13408 <__assert_fail@plt+0x1928>
   134c0:	mov	r1, #0
   134c4:	movw	r2, #8620	; 0x21ac
   134c8:	movt	r2, #3
   134cc:	mov	r3, r1
   134d0:	str	r1, [r2]
   134d4:	b	133a0 <__assert_fail@plt+0x18c0>
   134d8:	movw	r2, #8620	; 0x21ac
   134dc:	movt	r2, #3
   134e0:	mov	r3, #0
   134e4:	str	r1, [r2, #16]
   134e8:	b	133a0 <__assert_fail@plt+0x18c0>
   134ec:	mov	r0, #1
   134f0:	movw	r1, #11300	; 0x2c24
   134f4:	movt	r1, #3
   134f8:	movw	r2, #11324	; 0x2c3c
   134fc:	movt	r2, #3
   13500:	mov	r3, #0
   13504:	str	r0, [r1]
   13508:	str	r0, [r2]
   1350c:	b	133a0 <__assert_fail@plt+0x18c0>
   13510:	movw	r2, #9676	; 0x25cc
   13514:	movt	r2, #3
   13518:	mov	r3, #0
   1351c:	str	r1, [r2, #8]
   13520:	b	133a0 <__assert_fail@plt+0x18c0>
   13524:	movw	r5, #11296	; 0x2c20
   13528:	movt	r5, #3
   1352c:	ldr	r1, [r5]
   13530:	movw	r6, #11392	; 0x2c80
   13534:	movt	r6, #3
   13538:	ldr	r0, [r6]
   1353c:	add	r1, r1, #1
   13540:	lsl	r1, r1, #3
   13544:	bl	1e180 <argp_parse@@Base+0x2898>
   13548:	cmp	r0, #0
   1354c:	str	r0, [r6]
   13550:	beq	13634 <__assert_fail@plt+0x1b54>
   13554:	ldr	r2, [r5]
   13558:	mvn	ip, #0
   1355c:	mov	r3, #0
   13560:	add	r1, r0, r2, lsl #3
   13564:	str	r4, [r0, r2, lsl #3]
   13568:	add	r2, r2, #1
   1356c:	str	r2, [r5]
   13570:	str	ip, [r1, #4]
   13574:	b	133a0 <__assert_fail@plt+0x18c0>
   13578:	movw	r2, #9676	; 0x25cc
   1357c:	movt	r2, #3
   13580:	mov	r1, #1
   13584:	mov	r3, #0
   13588:	str	r1, [r2, #16]
   1358c:	b	133a0 <__assert_fail@plt+0x18c0>
   13590:	movw	r2, #11308	; 0x2c2c
   13594:	movt	r2, #3
   13598:	mov	r1, #1
   1359c:	mov	r3, #0
   135a0:	str	r1, [r2]
   135a4:	b	133a0 <__assert_fail@plt+0x18c0>
   135a8:	movw	r2, #8620	; 0x21ac
   135ac:	movt	r2, #3
   135b0:	mov	r3, #0
   135b4:	str	r1, [r2, #12]
   135b8:	b	133a0 <__assert_fail@plt+0x18c0>
   135bc:	movw	r2, #8620	; 0x21ac
   135c0:	movt	r2, #3
   135c4:	mov	r3, #0
   135c8:	str	r1, [r2, #20]
   135cc:	b	133a0 <__assert_fail@plt+0x18c0>
   135d0:	movw	r2, #9676	; 0x25cc
   135d4:	movt	r2, #3
   135d8:	mov	r3, #0
   135dc:	str	r1, [r2, #12]
   135e0:	b	133a0 <__assert_fail@plt+0x18c0>
   135e4:	movw	r2, #8620	; 0x21ac
   135e8:	movt	r2, #3
   135ec:	mov	r1, #10
   135f0:	mov	r3, #0
   135f4:	str	r1, [r2, #4]
   135f8:	b	133a0 <__assert_fail@plt+0x18c0>
   135fc:	movw	r2, #8620	; 0x21ac
   13600:	movt	r2, #3
   13604:	mov	r1, #2
   13608:	mov	r3, #0
   1360c:	str	r1, [r2, #4]
   13610:	b	133a0 <__assert_fail@plt+0x18c0>
   13614:	mov	r3, #7
   13618:	b	133a0 <__assert_fail@plt+0x18c0>
   1361c:	mov	r2, r4
   13620:	mov	r0, r5
   13624:	movw	r1, #65232	; 0xfed0
   13628:	movt	r1, #1
   1362c:	bl	1b1d4 <argp_error@@Base>
   13630:	b	13498 <__assert_fail@plt+0x19b8>
   13634:	bl	11918 <__errno_location@plt>
   13638:	movw	r2, #65192	; 0xfea8
   1363c:	movt	r2, #1
   13640:	ldr	r1, [r0]
   13644:	mov	r0, #1
   13648:	bl	11828 <error@plt>
   1364c:	ldr	r0, [r6]
   13650:	b	13554 <__assert_fail@plt+0x1a74>
   13654:	push	{lr}		; (str lr, [sp, #-4]!)
   13658:	movw	lr, #8620	; 0x21ac
   1365c:	movt	lr, #3
   13660:	ldr	r3, [lr, #24]
   13664:	sub	sp, sp, #12
   13668:	cmp	r3, #0
   1366c:	beq	136a4 <__assert_fail@plt+0x1bc4>
   13670:	ldr	r2, [lr, #28]
   13674:	and	ip, r0, #1016	; 0x3f8
   13678:	cmp	r2, ip
   1367c:	beq	136a4 <__assert_fail@plt+0x1bc4>
   13680:	add	r2, lr, #24
   13684:	b	13694 <__assert_fail@plt+0x1bb4>
   13688:	ldr	r1, [r2, #4]
   1368c:	cmp	r1, ip
   13690:	beq	136a4 <__assert_fail@plt+0x1bc4>
   13694:	ldr	r3, [r2, #8]
   13698:	add	r2, r2, #8
   1369c:	cmp	r3, #0
   136a0:	bne	13688 <__assert_fail@plt+0x1ba8>
   136a4:	ldr	ip, [lr, #208]	; 0xd0
   136a8:	cmp	ip, #0
   136ac:	beq	136e4 <__assert_fail@plt+0x1c04>
   136b0:	ldr	r2, [lr, #212]	; 0xd4
   136b4:	and	r0, r0, #7
   136b8:	cmp	r0, r2
   136bc:	ldrne	r2, [pc, #68]	; 13708 <__assert_fail@plt+0x1c28>
   136c0:	bne	136d4 <__assert_fail@plt+0x1bf4>
   136c4:	b	136e4 <__assert_fail@plt+0x1c04>
   136c8:	ldr	r1, [r2, #4]
   136cc:	cmp	r1, r0
   136d0:	beq	136e4 <__assert_fail@plt+0x1c04>
   136d4:	ldr	ip, [r2, #8]
   136d8:	add	r2, r2, #8
   136dc:	cmp	ip, #0
   136e0:	bne	136c8 <__assert_fail@plt+0x1be8>
   136e4:	mov	r1, #20
   136e8:	movw	r2, #65264	; 0xfef0
   136ec:	movt	r2, #1
   136f0:	ldr	r0, [pc, #20]	; 1370c <__assert_fail@plt+0x1c2c>
   136f4:	str	ip, [sp]
   136f8:	bl	11924 <snprintf@plt>
   136fc:	ldr	r0, [pc, #8]	; 1370c <__assert_fail@plt+0x1c2c>
   13700:	add	sp, sp, #12
   13704:	pop	{pc}		; (ldr pc, [sp], #4)
   13708:	andeq	r2, r3, ip, ror r2
   1370c:	andeq	r2, r3, r0, ror #11
   13710:	movw	ip, #9676	; 0x25cc
   13714:	movt	ip, #3
   13718:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1371c:	ldr	r3, [ip, #40]	; 0x28
   13720:	strd	r6, [sp, #8]
   13724:	strd	r8, [sp, #16]
   13728:	strd	sl, [sp, #24]
   1372c:	str	lr, [sp, #32]
   13730:	sub	sp, sp, #180	; 0xb4
   13734:	add	r2, r3, #1
   13738:	cmp	r3, #0
   1373c:	str	ip, [sp, #28]
   13740:	str	r2, [ip, #40]	; 0x28
   13744:	beq	13764 <__assert_fail@plt+0x1c84>
   13748:	add	sp, sp, #180	; 0xb4
   1374c:	ldrd	r4, [sp]
   13750:	ldrd	r6, [sp, #8]
   13754:	ldrd	r8, [sp, #16]
   13758:	ldrd	sl, [sp, #24]
   1375c:	add	sp, sp, #32
   13760:	pop	{pc}		; (ldr pc, [sp], #4)
   13764:	mov	r9, r0
   13768:	mov	r3, #3
   1376c:	str	r1, [sp, #12]
   13770:	movw	r0, #65272	; 0xfef8
   13774:	movt	r0, #1
   13778:	add	r2, sp, #32
   1377c:	add	r1, sp, #36	; 0x24
   13780:	bl	1cd84 <argp_parse@@Base+0x149c>
   13784:	cmp	r0, #0
   13788:	blt	1392c <__assert_fail@plt+0x1e4c>
   1378c:	ldr	r8, [sp, #32]
   13790:	ldr	sl, [sp, #36]	; 0x24
   13794:	mov	r7, r8
   13798:	lsl	r3, sl, #1
   1379c:	str	r3, [sp, #8]
   137a0:	add	r3, r3, sl
   137a4:	add	r3, r8, r3, lsl #7
   137a8:	cmp	r8, r3
   137ac:	bcs	138cc <__assert_fail@plt+0x1dec>
   137b0:	movw	r3, #65324	; 0xff2c
   137b4:	movt	r3, #1
   137b8:	str	r3, [sp, #16]
   137bc:	movw	r3, #5456	; 0x1550
   137c0:	movt	r3, #2
   137c4:	str	r3, [sp, #20]
   137c8:	movw	r3, #11320	; 0x2c38
   137cc:	movt	r3, #3
   137d0:	str	r3, [sp, #24]
   137d4:	add	r1, r8, #8
   137d8:	mov	r2, #32
   137dc:	add	r0, sp, #40	; 0x28
   137e0:	mov	r4, #0
   137e4:	bl	11960 <strncpy@plt>
   137e8:	ldrsh	r1, [r9, #4]
   137ec:	strb	r4, [sp, #72]	; 0x48
   137f0:	cmp	r1, #6
   137f4:	beq	138e4 <__assert_fail@plt+0x1e04>
   137f8:	ldr	r5, [r9, #40]	; 0x28
   137fc:	cmp	r5, r4
   13800:	ble	138b4 <__assert_fail@plt+0x1dd4>
   13804:	ldr	r3, [r9, #44]	; 0x2c
   13808:	add	r6, r8, #44	; 0x2c
   1380c:	sub	fp, r3, #4
   13810:	b	1381c <__assert_fail@plt+0x1d3c>
   13814:	cmp	r4, r5
   13818:	beq	138b4 <__assert_fail@plt+0x1dd4>
   1381c:	mov	r2, #32
   13820:	mov	r1, r6
   13824:	ldr	r0, [fp, #4]!
   13828:	bl	11aa4 <strncmp@plt>
   1382c:	cmp	r0, #0
   13830:	add	r4, r4, #1
   13834:	bne	13814 <__assert_fail@plt+0x1d34>
   13838:	mov	r7, r0
   1383c:	mov	r3, #10
   13840:	ldr	r0, [sp, #12]
   13844:	add	r2, sp, #40	; 0x28
   13848:	mov	r1, #6
   1384c:	bl	16c18 <daemon@@Base+0x2ac>
   13850:	subs	r5, r0, #0
   13854:	beq	138a0 <__assert_fail@plt+0x1dc0>
   13858:	bl	11918 <__errno_location@plt>
   1385c:	mov	r4, r0
   13860:	mov	r1, #100	; 0x64
   13864:	ldr	r2, [sp, #16]
   13868:	mov	r3, r5
   1386c:	add	r0, sp, #76	; 0x4c
   13870:	str	r7, [r4]
   13874:	bl	11924 <snprintf@plt>
   13878:	ldr	r0, [sp, #20]
   1387c:	add	r1, sp, #76	; 0x4c
   13880:	str	r7, [r4]
   13884:	bl	12d40 <__assert_fail@plt+0x1260>
   13888:	ldr	r2, [sp, #24]
   1388c:	add	r1, sp, #76	; 0x4c
   13890:	mov	r3, #4
   13894:	mov	r0, #43	; 0x2b
   13898:	ldr	r2, [r2]
   1389c:	bl	14238 <__assert_fail@plt+0x2758>
   138a0:	ldr	r3, [sp, #32]
   138a4:	ldr	sl, [sp, #36]	; 0x24
   138a8:	mov	r7, r3
   138ac:	lsl	r3, sl, #1
   138b0:	str	r3, [sp, #8]
   138b4:	ldr	r3, [sp, #8]
   138b8:	add	r8, r8, #384	; 0x180
   138bc:	add	r3, r3, sl
   138c0:	add	r3, r7, r3, lsl #7
   138c4:	cmp	r8, r3
   138c8:	bcc	137d4 <__assert_fail@plt+0x1cf4>
   138cc:	mov	r0, r7
   138d0:	bl	1cb08 <argp_parse@@Base+0x1220>
   138d4:	ldr	r2, [sp, #28]
   138d8:	mov	r3, #0
   138dc:	str	r3, [r2, #40]	; 0x28
   138e0:	b	13748 <__assert_fail@plt+0x1c68>
   138e4:	mov	r3, #10
   138e8:	add	r2, sp, #40	; 0x28
   138ec:	ldr	r0, [sp, #12]
   138f0:	bl	16c18 <daemon@@Base+0x2ac>
   138f4:	subs	r6, r0, #0
   138f8:	beq	138a0 <__assert_fail@plt+0x1dc0>
   138fc:	bl	11918 <__errno_location@plt>
   13900:	mov	r5, r0
   13904:	mov	r1, #100	; 0x64
   13908:	ldr	r2, [sp, #16]
   1390c:	mov	r3, r6
   13910:	add	r0, sp, #76	; 0x4c
   13914:	str	r4, [r5]
   13918:	bl	11924 <snprintf@plt>
   1391c:	add	r1, sp, #76	; 0x4c
   13920:	str	r4, [r5]
   13924:	ldr	r0, [sp, #20]
   13928:	b	13884 <__assert_fail@plt+0x1da4>
   1392c:	bl	11918 <__errno_location@plt>
   13930:	mov	r5, r0
   13934:	ldr	r0, [r0]
   13938:	add	r4, sp, #76	; 0x4c
   1393c:	cmp	r0, #0
   13940:	bne	13998 <__assert_fail@plt+0x1eb8>
   13944:	movw	r3, #65288	; 0xff08
   13948:	movt	r3, #1
   1394c:	movw	r2, #65324	; 0xff2c
   13950:	movt	r2, #1
   13954:	mov	r0, r4
   13958:	mov	r1, #100	; 0x64
   1395c:	bl	11924 <snprintf@plt>
   13960:	mov	r3, #0
   13964:	mov	r1, r4
   13968:	movw	r0, #5456	; 0x1550
   1396c:	movt	r0, #2
   13970:	str	r3, [r5]
   13974:	bl	12d40 <__assert_fail@plt+0x1260>
   13978:	movw	r2, #11320	; 0x2c38
   1397c:	movt	r2, #3
   13980:	mov	r1, r4
   13984:	mov	r3, #4
   13988:	ldr	r2, [r2]
   1398c:	mov	r0, #43	; 0x2b
   13990:	bl	14238 <__assert_fail@plt+0x2758>
   13994:	b	13748 <__assert_fail@plt+0x1c68>
   13998:	bl	11888 <strerror@plt>
   1399c:	movw	r3, #65288	; 0xff08
   139a0:	movt	r3, #1
   139a4:	str	r0, [sp]
   139a8:	movw	r2, #65308	; 0xff1c
   139ac:	movt	r2, #1
   139b0:	mov	r1, #100	; 0x64
   139b4:	mov	r0, r4
   139b8:	bl	11924 <snprintf@plt>
   139bc:	b	13960 <__assert_fail@plt+0x1e80>
   139c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   139c4:	mov	r4, r0
   139c8:	ldrsh	r0, [r0, #4]
   139cc:	ldr	r5, [r4, #432]	; 0x1b0
   139d0:	strd	r6, [sp, #8]
   139d4:	mov	r6, r2
   139d8:	strd	r8, [sp, #16]
   139dc:	mov	r8, #0
   139e0:	mov	r9, #0
   139e4:	strd	sl, [sp, #24]
   139e8:	cmp	r0, #6
   139ec:	mov	sl, r1
   139f0:	str	lr, [sp, #32]
   139f4:	sub	sp, sp, #1456	; 0x5b0
   139f8:	mov	fp, r3
   139fc:	sub	sp, sp, #12
   13a00:	strd	r8, [sp, #8]
   13a04:	strd	r8, [sp, #16]
   13a08:	strd	r8, [sp, #24]
   13a0c:	strd	r8, [sp, #32]
   13a10:	strd	r8, [sp, #40]	; 0x28
   13a14:	strd	r8, [sp, #48]	; 0x30
   13a18:	beq	13b48 <__assert_fail@plt+0x2068>
   13a1c:	movw	r7, #65384	; 0xff68
   13a20:	movt	r7, #1
   13a24:	add	r1, r4, #416	; 0x1a0
   13a28:	mov	r2, #15
   13a2c:	mov	r3, #1
   13a30:	str	r1, [sp, #8]
   13a34:	str	r2, [sp, #12]
   13a38:	str	r7, [sp, #16]
   13a3c:	str	r3, [sp, #20]
   13a40:	cmp	r5, #0
   13a44:	addeq	r5, sp, #24
   13a48:	beq	13a60 <__assert_fail@plt+0x1f80>
   13a4c:	mov	r0, r5
   13a50:	str	r5, [sp, #24]
   13a54:	add	r5, sp, #32
   13a58:	bl	118e8 <strlen@plt>
   13a5c:	str	r0, [sp, #28]
   13a60:	mov	r3, #1
   13a64:	cmp	fp, #0
   13a68:	str	r7, [r5]
   13a6c:	str	r3, [r5, #4]
   13a70:	beq	13b2c <__assert_fail@plt+0x204c>
   13a74:	mov	r0, fp
   13a78:	str	fp, [r5, #8]
   13a7c:	bl	118e8 <strlen@plt>
   13a80:	str	r0, [r5, #12]
   13a84:	ldrsh	r3, [r4, #4]
   13a88:	movw	r7, #8620	; 0x21ac
   13a8c:	movt	r7, #3
   13a90:	movw	r0, #65420	; 0xff8c
   13a94:	movt	r0, #1
   13a98:	add	r3, r7, r3, lsl #2
   13a9c:	ldr	r1, [r3, #320]	; 0x140
   13aa0:	bl	12d40 <__assert_fail@plt+0x1260>
   13aa4:	ldrsh	r3, [r4, #4]
   13aa8:	cmp	r3, #9
   13aac:	ldrls	pc, [pc, r3, lsl #2]
   13ab0:	b	13b04 <__assert_fail@plt+0x2024>
   13ab4:	ldrdeq	r3, [r1], -ip
   13ab8:	andeq	r3, r1, r4, lsl #30
   13abc:	andeq	r3, r1, r4, lsl #30
   13ac0:			; <UNDEFINED> instruction: 0x00013cb0
   13ac4:			; <UNDEFINED> instruction: 0x00013bbc
   13ac8:			; <UNDEFINED> instruction: 0x00013db0
   13acc:			; <UNDEFINED> instruction: 0x00013db0
   13ad0:	strdeq	r3, [r1], -r4
   13ad4:	andeq	r3, r1, r4, lsr lr
   13ad8:	andeq	r3, r1, r4, lsl #30
   13adc:	movw	r3, #11384	; 0x2c78
   13ae0:	movt	r3, #3
   13ae4:	ldr	r3, [r3]
   13ae8:	movw	r0, #65380	; 0xff64
   13aec:	movt	r0, #1
   13af0:	str	r3, [r4, #8]
   13af4:	bl	12d40 <__assert_fail@plt+0x1260>
   13af8:	ldrsh	r3, [r4, #4]
   13afc:	cmp	r3, #8
   13b00:	beq	13b0c <__assert_fail@plt+0x202c>
   13b04:	mov	r3, #0
   13b08:	str	r3, [r4, #452]	; 0x1c4
   13b0c:	add	sp, sp, #1456	; 0x5b0
   13b10:	add	sp, sp, #12
   13b14:	ldrd	r4, [sp]
   13b18:	ldrd	r6, [sp, #8]
   13b1c:	ldrd	r8, [sp, #16]
   13b20:	ldrd	sl, [sp, #24]
   13b24:	add	sp, sp, #32
   13b28:	pop	{pc}		; (ldr pc, [sp], #4)
   13b2c:	ldr	r3, [r4, #452]	; 0x1c4
   13b30:	cmp	r3, #1
   13b34:	bgt	13f14 <__assert_fail@plt+0x2434>
   13b38:	ldr	r3, [r4, #448]	; 0x1c0
   13b3c:	add	r2, r4, #176	; 0xb0
   13b40:	strd	r2, [r5, #8]
   13b44:	b	13a84 <__assert_fail@plt+0x1fa4>
   13b48:	add	r8, sp, #236	; 0xec
   13b4c:	movw	r0, #11384	; 0x2c78
   13b50:	movt	r0, #3
   13b54:	movw	r7, #65384	; 0xff68
   13b58:	movt	r7, #1
   13b5c:	str	r8, [sp, #8]
   13b60:	bl	1175c <ctime@plt>
   13b64:	mov	r3, r5
   13b68:	mov	r1, #200	; 0xc8
   13b6c:	str	r0, [sp]
   13b70:	movw	r2, #65340	; 0xff3c
   13b74:	movt	r2, #1
   13b78:	mov	r0, r8
   13b7c:	bl	11924 <snprintf@plt>
   13b80:	mov	r0, r8
   13b84:	bl	118e8 <strlen@plt>
   13b88:	movw	r3, #6600	; 0x19c8
   13b8c:	movt	r3, #2
   13b90:	str	r0, [sp, #12]
   13b94:	mov	r2, #0
   13b98:	ldr	r5, [r4, #432]	; 0x1b0
   13b9c:	str	r3, [sp, #16]
   13ba0:	str	r2, [sp, #20]
   13ba4:	b	13a40 <__assert_fail@plt+0x1f60>
   13ba8:	movw	r0, #65436	; 0xff9c
   13bac:	movt	r0, #1
   13bb0:	bl	12d40 <__assert_fail@plt+0x1260>
   13bb4:	mov	r3, #4
   13bb8:	strh	r3, [r4, #4]
   13bbc:	movw	r0, #65184	; 0xfea0
   13bc0:	movt	r0, #1
   13bc4:	ldr	r1, [r4, #40]	; 0x28
   13bc8:	movw	r6, #11320	; 0x2c38
   13bcc:	movt	r6, #3
   13bd0:	bl	12d40 <__assert_fail@plt+0x1260>
   13bd4:	mov	r0, sl
   13bd8:	ldr	r1, [r6]
   13bdc:	bl	117d4 <strcasecmp@plt>
   13be0:	cmp	r0, #0
   13be4:	beq	13bf4 <__assert_fail@plt+0x2114>
   13be8:	ldr	r3, [r7]
   13bec:	cmp	r3, #0
   13bf0:	bne	14188 <__assert_fail@plt+0x26a8>
   13bf4:	movw	r3, #11388	; 0x2c7c
   13bf8:	movt	r3, #3
   13bfc:	ldr	r3, [r3]
   13c00:	cmp	r3, #0
   13c04:	bne	13fd4 <__assert_fail@plt+0x24f4>
   13c08:	ldrh	r3, [r4, #44]	; 0x2c
   13c0c:	cmp	r3, #2
   13c10:	ldreq	r7, [r7, #312]	; 0x138
   13c14:	ldrne	r7, [r7, #316]	; 0x13c
   13c18:	ldreq	r8, [pc, #1552]	; 14230 <__assert_fail@plt+0x2750>
   13c1c:	ldrne	r8, [pc, #1552]	; 14234 <__assert_fail@plt+0x2754>
   13c20:	cmp	r7, #0
   13c24:	addge	r5, sp, #436	; 0x1b4
   13c28:	blt	14108 <__assert_fail@plt+0x2628>
   13c2c:	movw	r3, #11384	; 0x2c78
   13c30:	movt	r3, #3
   13c34:	ldr	r0, [sp, #8]
   13c38:	movw	r1, #1025	; 0x401
   13c3c:	movw	r2, #300	; 0x12c
   13c40:	movt	r2, #2
   13c44:	ldr	ip, [r3]
   13c48:	ldr	lr, [sp, #40]	; 0x28
   13c4c:	stm	sp, {r0, lr}
   13c50:	mov	r0, r5
   13c54:	str	ip, [r4, #8]
   13c58:	ldr	r3, [r4, #444]	; 0x1bc
   13c5c:	bl	11924 <snprintf@plt>
   13c60:	mov	r0, r5
   13c64:	bl	118e8 <strlen@plt>
   13c68:	ldr	ip, [r4, #172]	; 0xac
   13c6c:	add	r3, r4, #44	; 0x2c
   13c70:	mov	r9, r0
   13c74:	mov	r2, r0
   13c78:	mov	r1, r5
   13c7c:	mov	r0, r7
   13c80:	stm	sp, {r3, ip}
   13c84:	mov	r3, #0
   13c88:	bl	119a8 <sendto@plt>
   13c8c:	cmp	r0, r9
   13c90:	bne	14014 <__assert_fail@plt+0x2534>
   13c94:	ldr	r3, [r8]
   13c98:	cmp	r3, #0
   13c9c:	bge	13dec <__assert_fail@plt+0x230c>
   13ca0:	mov	r0, r7
   13ca4:	bl	11ac8 <close@plt>
   13ca8:	ldrsh	r3, [r4, #4]
   13cac:	b	13afc <__assert_fail@plt+0x201c>
   13cb0:	movw	r3, #11384	; 0x2c78
   13cb4:	movt	r3, #3
   13cb8:	ldr	r3, [r3]
   13cbc:	tst	r6, #1
   13cc0:	str	r3, [r4, #8]
   13cc4:	bne	14174 <__assert_fail@plt+0x2694>
   13cc8:	movw	r0, #65184	; 0xfea0
   13ccc:	movt	r0, #1
   13cd0:	str	r3, [r4, #8]
   13cd4:	ldr	r1, [r4, #40]	; 0x28
   13cd8:	bl	12d40 <__assert_fail@plt+0x1260>
   13cdc:	ldrh	r2, [r4, #4]
   13ce0:	movw	r1, #65380	; 0xff64
   13ce4:	movt	r1, #1
   13ce8:	movw	r3, #65336	; 0xff38
   13cec:	movt	r3, #1
   13cf0:	ldrsh	r0, [r4, #6]
   13cf4:	sub	r2, r2, #2
   13cf8:	uxth	r2, r2
   13cfc:	cmp	r2, #2
   13d00:	movcs	r3, r1
   13d04:	movcc	r2, #2
   13d08:	movcs	r2, #1
   13d0c:	str	r3, [r5, #16]
   13d10:	str	r2, [r5, #20]
   13d14:	b	13d78 <__assert_fail@plt+0x2298>
   13d18:	bl	11918 <__errno_location@plt>
   13d1c:	ldrsh	r3, [r4, #4]
   13d20:	mov	r7, r0
   13d24:	ldr	r8, [r0]
   13d28:	cmp	r3, #9
   13d2c:	cmpeq	r8, #11
   13d30:	beq	13b04 <__assert_fail@plt+0x2024>
   13d34:	ldrsh	r0, [r4, #6]
   13d38:	bl	11ac8 <close@plt>
   13d3c:	sub	r2, r8, #5
   13d40:	movw	r1, #1025	; 0x401
   13d44:	bics	r5, r2, #4
   13d48:	mov	r2, r5
   13d4c:	bne	13f40 <__assert_fail@plt+0x2460>
   13d50:	ldrh	r3, [r4, #4]
   13d54:	sub	r3, r3, #2
   13d58:	cmp	r3, #1
   13d5c:	bhi	13f40 <__assert_fail@plt+0x2460>
   13d60:	ldr	r0, [r4, #40]	; 0x28
   13d64:	bl	1184c <open64@plt>
   13d68:	sxth	r0, r0
   13d6c:	cmp	r0, #0
   13d70:	strh	r0, [r4, #6]
   13d74:	blt	140ec <__assert_fail@plt+0x260c>
   13d78:	mov	r2, #6
   13d7c:	add	r1, sp, #8
   13d80:	bl	11984 <writev@plt>
   13d84:	cmp	r0, #0
   13d88:	blt	13d18 <__assert_fail@plt+0x2238>
   13d8c:	tst	r6, #2
   13d90:	beq	13dec <__assert_fail@plt+0x230c>
   13d94:	ldr	r3, [r4, #460]	; 0x1cc
   13d98:	tst	r3, #1
   13d9c:	bne	13dec <__assert_fail@plt+0x230c>
   13da0:	ldrsh	r0, [r4, #6]
   13da4:	bl	11648 <fsync@plt>
   13da8:	ldrsh	r3, [r4, #4]
   13dac:	b	13afc <__assert_fail@plt+0x201c>
   13db0:	movw	r3, #11384	; 0x2c78
   13db4:	movt	r3, #3
   13db8:	ldr	r3, [r3]
   13dbc:	movw	r0, #65380	; 0xff64
   13dc0:	movt	r0, #1
   13dc4:	str	r3, [r4, #8]
   13dc8:	bl	12d40 <__assert_fail@plt+0x1260>
   13dcc:	movw	r3, #65336	; 0xff38
   13dd0:	movt	r3, #1
   13dd4:	mov	r2, #2
   13dd8:	add	r1, sp, #8
   13ddc:	mov	r0, r4
   13de0:	str	r3, [r5, #16]
   13de4:	str	r2, [r5, #20]
   13de8:	bl	13710 <__assert_fail@plt+0x1c30>
   13dec:	ldrsh	r3, [r4, #4]
   13df0:	b	13afc <__assert_fail@plt+0x201c>
   13df4:	mov	r0, #0
   13df8:	bl	1172c <time@plt>
   13dfc:	ldr	r5, [r4, #8]
   13e00:	sub	r5, r0, r5
   13e04:	cmp	r5, #179	; 0xb3
   13e08:	bgt	13ba8 <__assert_fail@plt+0x20c8>
   13e0c:	movw	r0, #65184	; 0xfea0
   13e10:	movt	r0, #1
   13e14:	ldr	r1, [r4, #40]	; 0x28
   13e18:	bl	12d40 <__assert_fail@plt+0x1260>
   13e1c:	rsb	r1, r5, #180	; 0xb4
   13e20:	movw	r0, #65480	; 0xffc8
   13e24:	movt	r0, #1
   13e28:	bl	12d40 <__assert_fail@plt+0x1260>
   13e2c:	ldrsh	r3, [r4, #4]
   13e30:	b	13afc <__assert_fail@plt+0x201c>
   13e34:	movw	r0, #65184	; 0xfea0
   13e38:	movt	r0, #1
   13e3c:	ldr	r1, [r4, #40]	; 0x28
   13e40:	bl	12d40 <__assert_fail@plt+0x1260>
   13e44:	mov	r0, #0
   13e48:	bl	1172c <time@plt>
   13e4c:	ldr	r1, [r4, #8]
   13e50:	sub	r1, r0, r1
   13e54:	cmp	r1, #179	; 0xb3
   13e58:	ble	13fbc <__assert_fail@plt+0x24dc>
   13e5c:	ldr	r1, [r7, #4]
   13e60:	mov	r3, #0
   13e64:	mov	r2, #0
   13e68:	add	r5, sp, #436	; 0x1b4
   13e6c:	add	r0, sp, #440	; 0x1b8
   13e70:	strd	r2, [r0, #-4]
   13e74:	strd	r2, [r5, #8]
   13e78:	cmp	r1, #0
   13e7c:	strd	r2, [r5, #16]
   13e80:	strd	r2, [r5, #24]
   13e84:	moveq	r3, #32
   13e88:	mov	r2, r5
   13e8c:	str	r1, [sp, #440]	; 0x1b8
   13e90:	movw	r1, #9676	; 0x25cc
   13e94:	movt	r1, #3
   13e98:	streq	r3, [sp, #436]	; 0x1b4
   13e9c:	add	r3, sp, #136	; 0x88
   13ea0:	ldr	r0, [r4, #40]	; 0x28
   13ea4:	ldr	r1, [r1, #44]	; 0x2c
   13ea8:	bl	11a68 <getaddrinfo@plt>
   13eac:	subs	r5, r0, #0
   13eb0:	beq	140ac <__assert_fail@plt+0x25cc>
   13eb4:	bl	116e4 <gai_strerror@plt>
   13eb8:	mov	r1, r0
   13ebc:	movw	r0, #65528	; 0xfff8
   13ec0:	movt	r0, #1
   13ec4:	bl	12d40 <__assert_fail@plt+0x1260>
   13ec8:	movw	r0, #8
   13ecc:	movt	r0, #2
   13ed0:	ldr	r1, [r4, #452]	; 0x1c4
   13ed4:	bl	12d40 <__assert_fail@plt+0x1260>
   13ed8:	ldr	r3, [r4, #452]	; 0x1c4
   13edc:	sub	r3, r3, #1
   13ee0:	cmp	r3, #0
   13ee4:	str	r3, [r4, #452]	; 0x1c4
   13ee8:	bge	13dec <__assert_fail@plt+0x230c>
   13eec:	mov	r5, #0
   13ef0:	ldr	r0, [r4, #40]	; 0x28
   13ef4:	strh	r5, [r4, #4]
   13ef8:	bl	1cb08 <argp_parse@@Base+0x1220>
   13efc:	str	r5, [r4, #40]	; 0x28
   13f00:	b	13dec <__assert_fail@plt+0x230c>
   13f04:	movw	r3, #11384	; 0x2c78
   13f08:	movt	r3, #3
   13f0c:	ldr	r3, [r3]
   13f10:	b	13cc8 <__assert_fail@plt+0x21e8>
   13f14:	add	r7, sp, #56	; 0x38
   13f18:	mov	r1, #80	; 0x50
   13f1c:	mov	r0, r7
   13f20:	movw	r2, #65388	; 0xff6c
   13f24:	movt	r2, #1
   13f28:	str	r7, [r5, #8]
   13f2c:	bl	11924 <snprintf@plt>
   13f30:	mov	r0, r7
   13f34:	bl	118e8 <strlen@plt>
   13f38:	str	r0, [r5, #12]
   13f3c:	b	13a84 <__assert_fail@plt+0x1fa4>
   13f40:	mov	r3, #0
   13f44:	cmp	r8, r3
   13f48:	strh	r3, [r4, #4]
   13f4c:	str	r8, [r7]
   13f50:	ldr	r6, [r4, #40]	; 0x28
   13f54:	bne	13fe8 <__assert_fail@plt+0x2508>
   13f58:	add	r5, sp, #436	; 0x1b4
   13f5c:	movw	r2, #65324	; 0xff2c
   13f60:	movt	r2, #1
   13f64:	mov	r3, r6
   13f68:	mov	r0, r5
   13f6c:	mov	r1, #100	; 0x64
   13f70:	bl	11924 <snprintf@plt>
   13f74:	mov	r6, #0
   13f78:	mov	r1, r5
   13f7c:	movw	r0, #5456	; 0x1550
   13f80:	movt	r0, #2
   13f84:	str	r6, [r7]
   13f88:	bl	12d40 <__assert_fail@plt+0x1260>
   13f8c:	movw	r2, #11320	; 0x2c38
   13f90:	movt	r2, #3
   13f94:	mov	r3, #4
   13f98:	mov	r1, r5
   13f9c:	ldr	r2, [r2]
   13fa0:	mov	r0, #43	; 0x2b
   13fa4:	bl	14238 <__assert_fail@plt+0x2758>
   13fa8:	ldr	r0, [r4, #40]	; 0x28
   13fac:	bl	1cb08 <argp_parse@@Base+0x1220>
   13fb0:	ldrsh	r3, [r4, #4]
   13fb4:	str	r6, [r4, #40]	; 0x28
   13fb8:	b	13afc <__assert_fail@plt+0x201c>
   13fbc:	rsb	r1, r1, #180	; 0xb4
   13fc0:	movw	r0, #48	; 0x30
   13fc4:	movt	r0, #2
   13fc8:	bl	12d40 <__assert_fail@plt+0x1260>
   13fcc:	ldrsh	r3, [r4, #4]
   13fd0:	b	13afc <__assert_fail@plt+0x201c>
   13fd4:	movw	r0, #128	; 0x80
   13fd8:	movt	r0, #2
   13fdc:	bl	12d40 <__assert_fail@plt+0x1260>
   13fe0:	ldrsh	r3, [r4, #4]
   13fe4:	b	13afc <__assert_fail@plt+0x201c>
   13fe8:	mov	r0, r8
   13fec:	add	r5, sp, #436	; 0x1b4
   13ff0:	bl	11888 <strerror@plt>
   13ff4:	mov	r3, r6
   13ff8:	movw	r2, #65308	; 0xff1c
   13ffc:	movt	r2, #1
   14000:	mov	r1, #100	; 0x64
   14004:	str	r0, [sp]
   14008:	mov	r0, r5
   1400c:	bl	11924 <snprintf@plt>
   14010:	b	13f74 <__assert_fail@plt+0x2494>
   14014:	bl	11918 <__errno_location@plt>
   14018:	ldr	r5, [r0]
   1401c:	mov	r9, r0
   14020:	mov	r0, r5
   14024:	bl	11888 <strerror@plt>
   14028:	mov	r2, r0
   1402c:	mov	r1, r5
   14030:	movw	r0, #316	; 0x13c
   14034:	movt	r0, #2
   14038:	bl	12d40 <__assert_fail@plt+0x1260>
   1403c:	mov	r3, #7
   14040:	cmp	r5, #0
   14044:	strh	r3, [r4, #4]
   14048:	str	r5, [r9]
   1404c:	beq	141f4 <__assert_fail@plt+0x2714>
   14050:	mov	r0, r5
   14054:	add	r5, sp, #136	; 0x88
   14058:	bl	11888 <strerror@plt>
   1405c:	movw	r3, #348	; 0x15c
   14060:	movt	r3, #2
   14064:	str	r0, [sp]
   14068:	movw	r2, #65308	; 0xff1c
   1406c:	movt	r2, #1
   14070:	mov	r1, #100	; 0x64
   14074:	mov	r0, r5
   14078:	bl	11924 <snprintf@plt>
   1407c:	mov	r3, #0
   14080:	mov	r1, r5
   14084:	movw	r0, #5456	; 0x1550
   14088:	movt	r0, #2
   1408c:	str	r3, [r9]
   14090:	bl	12d40 <__assert_fail@plt+0x1260>
   14094:	mov	r1, r5
   14098:	mov	r3, #4
   1409c:	ldr	r2, [r6]
   140a0:	mov	r0, #43	; 0x2b
   140a4:	bl	14238 <__assert_fail@plt+0x2758>
   140a8:	b	13c94 <__assert_fail@plt+0x21b4>
   140ac:	movw	r0, #24
   140b0:	movt	r0, #2
   140b4:	ldr	r1, [r4, #40]	; 0x28
   140b8:	bl	12d40 <__assert_fail@plt+0x1260>
   140bc:	ldr	r6, [sp, #136]	; 0x88
   140c0:	add	r0, r4, #44	; 0x2c
   140c4:	ldr	r2, [r6, #16]
   140c8:	ldr	r1, [r6, #20]
   140cc:	str	r2, [r4, #172]	; 0xac
   140d0:	bl	11714 <memcpy@plt>
   140d4:	mov	r0, r6
   140d8:	bl	11a5c <freeaddrinfo@plt>
   140dc:	mov	r3, #4
   140e0:	strh	r3, [r4, #4]
   140e4:	str	r5, [r4, #452]	; 0x1c4
   140e8:	b	13bbc <__assert_fail@plt+0x20dc>
   140ec:	ldr	r0, [r7]
   140f0:	strh	r5, [r4, #4]
   140f4:	add	r5, sp, #436	; 0x1b4
   140f8:	ldr	r6, [r4, #40]	; 0x28
   140fc:	cmp	r0, #0
   14100:	beq	13f5c <__assert_fail@plt+0x247c>
   14104:	b	13ff0 <__assert_fail@plt+0x2510>
   14108:	mov	r0, #2
   1410c:	str	r3, [sp, #440]	; 0x1b8
   14110:	mov	r3, #1
   14114:	mov	ip, #0
   14118:	movw	r2, #9676	; 0x25cc
   1411c:	movt	r2, #3
   14120:	add	r5, sp, #436	; 0x1b4
   14124:	str	r3, [sp, #436]	; 0x1b4
   14128:	add	r3, sp, #136	; 0x88
   1412c:	str	r0, [sp, #444]	; 0x1bc
   14130:	mov	r0, ip
   14134:	ldr	r1, [r2, #44]	; 0x2c
   14138:	mov	r2, r5
   1413c:	str	ip, [sp, #448]	; 0x1c0
   14140:	str	ip, [sp, #452]	; 0x1c4
   14144:	str	ip, [sp, #456]	; 0x1c8
   14148:	str	ip, [sp, #460]	; 0x1cc
   1414c:	str	ip, [sp, #464]	; 0x1d0
   14150:	bl	11a68 <getaddrinfo@plt>
   14154:	cmp	r0, #0
   14158:	beq	1419c <__assert_fail@plt+0x26bc>
   1415c:	bl	116e4 <gai_strerror@plt>
   14160:	mov	r1, r0
   14164:	movw	r0, #176	; 0xb0
   14168:	movt	r0, #2
   1416c:	bl	12d40 <__assert_fail@plt+0x1260>
   14170:	b	13dec <__assert_fail@plt+0x230c>
   14174:	movw	r0, #356	; 0x164
   14178:	movt	r0, #2
   1417c:	bl	12d40 <__assert_fail@plt+0x1260>
   14180:	ldrsh	r3, [r4, #4]
   14184:	b	13afc <__assert_fail@plt+0x201c>
   14188:	movw	r0, #96	; 0x60
   1418c:	movt	r0, #2
   14190:	bl	12d40 <__assert_fail@plt+0x1260>
   14194:	ldrsh	r3, [r4, #4]
   14198:	b	13afc <__assert_fail@plt+0x201c>
   1419c:	ldr	r3, [sp, #136]	; 0x88
   141a0:	ldmib	r3, {r0, r1, r2}
   141a4:	bl	11a74 <socket@plt>
   141a8:	subs	r7, r0, #0
   141ac:	blt	14218 <__assert_fail@plt+0x2738>
   141b0:	ldr	r3, [sp, #136]	; 0x88
   141b4:	ldr	r2, [r3, #16]
   141b8:	ldr	r1, [r3, #20]
   141bc:	bl	1193c <bind@plt>
   141c0:	mov	r9, r0
   141c4:	ldr	r0, [sp, #136]	; 0x88
   141c8:	bl	11a5c <freeaddrinfo@plt>
   141cc:	cmp	r9, #0
   141d0:	beq	13c2c <__assert_fail@plt+0x214c>
   141d4:	bl	11918 <__errno_location@plt>
   141d8:	ldr	r0, [r0]
   141dc:	bl	11888 <strerror@plt>
   141e0:	mov	r1, r0
   141e4:	movw	r0, #260	; 0x104
   141e8:	movt	r0, #2
   141ec:	bl	12d40 <__assert_fail@plt+0x1260>
   141f0:	b	13dec <__assert_fail@plt+0x230c>
   141f4:	add	r5, sp, #136	; 0x88
   141f8:	movw	r3, #348	; 0x15c
   141fc:	movt	r3, #2
   14200:	mov	r0, r5
   14204:	movw	r2, #65324	; 0xff2c
   14208:	movt	r2, #1
   1420c:	mov	r1, #100	; 0x64
   14210:	bl	11924 <snprintf@plt>
   14214:	b	1407c <__assert_fail@plt+0x259c>
   14218:	movw	r0, #220	; 0xdc
   1421c:	movt	r0, #2
   14220:	bl	12d40 <__assert_fail@plt+0x1260>
   14224:	ldr	r0, [sp, #136]	; 0x88
   14228:	bl	11a5c <freeaddrinfo@plt>
   1422c:	b	13dec <__assert_fail@plt+0x230c>
   14230:	andeq	r2, r3, r4, ror #5
   14234:	andeq	r2, r3, r8, ror #5
   14238:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1423c:	mov	r5, r1
   14240:	strd	r6, [sp, #8]
   14244:	movw	r6, #8620	; 0x21ac
   14248:	movt	r6, #3
   1424c:	ldr	ip, [r6, #24]
   14250:	mov	r7, r3
   14254:	strd	r8, [sp, #16]
   14258:	strd	sl, [sp, #24]
   1425c:	str	lr, [sp, #32]
   14260:	sub	sp, sp, #308	; 0x134
   14264:	cmp	ip, #0
   14268:	str	r2, [sp, #12]
   1426c:	str	r0, [sp, #16]
   14270:	beq	142a8 <__assert_fail@plt+0x27c8>
   14274:	ldr	r3, [r6, #28]
   14278:	and	r1, r0, #1016	; 0x3f8
   1427c:	cmp	r3, r1
   14280:	beq	142a8 <__assert_fail@plt+0x27c8>
   14284:	add	r3, r6, #24
   14288:	b	14298 <__assert_fail@plt+0x27b8>
   1428c:	ldr	r2, [r3, #4]
   14290:	cmp	r2, r1
   14294:	beq	142a8 <__assert_fail@plt+0x27c8>
   14298:	ldr	ip, [r3, #8]
   1429c:	add	r3, r3, #8
   142a0:	cmp	ip, #0
   142a4:	bne	1428c <__assert_fail@plt+0x27ac>
   142a8:	ldr	r2, [r6, #208]	; 0xd0
   142ac:	ldr	r3, [sp, #16]
   142b0:	cmp	r2, #0
   142b4:	and	r8, r3, #7
   142b8:	beq	142ec <__assert_fail@plt+0x280c>
   142bc:	ldr	r3, [r6, #212]	; 0xd4
   142c0:	cmp	r8, r3
   142c4:	ldrne	r3, [pc, #1236]	; 147a0 <__assert_fail@plt+0x2cc0>
   142c8:	bne	142dc <__assert_fail@plt+0x27fc>
   142cc:	b	142ec <__assert_fail@plt+0x280c>
   142d0:	ldr	r1, [r3, #4]
   142d4:	cmp	r1, r8
   142d8:	beq	142ec <__assert_fail@plt+0x280c>
   142dc:	ldr	r2, [r3, #8]
   142e0:	add	r3, r3, #8
   142e4:	cmp	r2, #0
   142e8:	bne	142d0 <__assert_fail@plt+0x27f0>
   142ec:	movw	r4, #9676	; 0x25cc
   142f0:	movt	r4, #3
   142f4:	str	r2, [sp]
   142f8:	mov	r3, ip
   142fc:	mov	r1, #20
   14300:	add	r0, r4, #20
   14304:	movw	r2, #65264	; 0xfef0
   14308:	movt	r2, #1
   1430c:	bl	11924 <snprintf@plt>
   14310:	ldr	r2, [sp, #12]
   14314:	mov	r3, r7
   14318:	add	r1, r4, #20
   1431c:	movw	r0, #368	; 0x170
   14320:	movt	r0, #2
   14324:	stm	sp, {r2, r5}
   14328:	ldr	r2, [sp, #16]
   1432c:	bl	12d40 <__assert_fail@plt+0x1260>
   14330:	add	r0, sp, #48	; 0x30
   14334:	bl	119cc <sigemptyset@plt>
   14338:	mov	r1, #1
   1433c:	add	r0, sp, #48	; 0x30
   14340:	bl	11870 <sigaddset@plt>
   14344:	mov	r1, #14
   14348:	add	r0, sp, #48	; 0x30
   1434c:	bl	11870 <sigaddset@plt>
   14350:	add	r1, sp, #48	; 0x30
   14354:	add	r2, sp, #176	; 0xb0
   14358:	mov	r0, #0
   1435c:	bl	116b4 <sigprocmask@plt>
   14360:	mov	r0, r5
   14364:	bl	118e8 <strlen@plt>
   14368:	cmp	r0, #15
   1436c:	mov	r9, r0
   14370:	str	r0, [sp, #20]
   14374:	bhi	14574 <__assert_fail@plt+0x2a94>
   14378:	movw	r0, #11384	; 0x2c78
   1437c:	movt	r0, #3
   14380:	orr	r7, r7, #4
   14384:	bl	1172c <time@plt>
   14388:	movw	r0, #11384	; 0x2c78
   1438c:	movt	r0, #3
   14390:	bl	1175c <ctime@plt>
   14394:	add	r3, r0, #4
   14398:	str	r3, [sp, #24]
   1439c:	ands	r3, r7, #8
   143a0:	mov	r1, r3
   143a4:	ldreq	r3, [sp, #16]
   143a8:	movne	r9, #24
   143ac:	ubfxeq	r9, r3, #3, #7
   143b0:	movw	r3, #11312	; 0x2c30
   143b4:	movt	r3, #3
   143b8:	ldr	r2, [r3]
   143bc:	cmp	r2, #0
   143c0:	beq	14730 <__assert_fail@plt+0x2c50>
   143c4:	movw	r3, #10824	; 0x2a48
   143c8:	movt	r3, #3
   143cc:	ldr	r4, [r3]
   143d0:	cmp	r4, #0
   143d4:	beq	14548 <__assert_fail@plt+0x2a68>
   143d8:	mov	r3, #1
   143dc:	movw	fp, #11384	; 0x2c78
   143e0:	movt	fp, #3
   143e4:	lsl	r8, r3, r8
   143e8:	movw	r3, #416	; 0x1a0
   143ec:	movt	r3, #2
   143f0:	mov	sl, r1
   143f4:	str	r7, [sp, #28]
   143f8:	str	r3, [sp, #36]	; 0x24
   143fc:	and	r3, r7, #1
   14400:	str	r3, [sp, #32]
   14404:	b	14484 <__assert_fail@plt+0x29a4>
   14408:	ldr	r3, [r6, #8]
   1440c:	ldr	r2, [fp]
   14410:	ldr	r1, [r4, #8]
   14414:	add	r3, r3, r3, lsr #31
   14418:	sub	r2, r2, r1
   1441c:	cmp	r2, r3, asr #1
   14420:	blt	14478 <__assert_fail@plt+0x2998>
   14424:	ldr	r1, [r4, #436]	; 0x1b4
   14428:	cmp	r1, #0
   1442c:	beq	1464c <__assert_fail@plt+0x2b6c>
   14430:	ldr	r7, [r4, #440]	; 0x1b8
   14434:	mov	r0, r5
   14438:	mov	r2, r7
   1443c:	bl	11aa4 <strncmp@plt>
   14440:	cmp	r0, #0
   14444:	bne	14478 <__assert_fail@plt+0x2998>
   14448:	bl	118c4 <__ctype_b_loc@plt>
   1444c:	ldrb	r3, [r5, r7]
   14450:	ldr	r1, [r0]
   14454:	lsl	r2, r3, #1
   14458:	cmp	r3, #45	; 0x2d
   1445c:	cmpne	r3, #95	; 0x5f
   14460:	moveq	r3, #1
   14464:	movne	r3, #0
   14468:	ldrh	r2, [r1, r2]
   1446c:	ubfx	r2, r2, #3, #1
   14470:	orrs	r3, r2, r3
   14474:	beq	1461c <__assert_fail@plt+0x2b3c>
   14478:	ldr	r4, [r4]
   1447c:	cmp	r4, #0
   14480:	beq	14548 <__assert_fail@plt+0x2a68>
   14484:	add	r3, r4, r9
   14488:	ldrb	r3, [r3, #12]
   1448c:	tst	r3, r8
   14490:	beq	14478 <__assert_fail@plt+0x2998>
   14494:	ldrsh	r3, [r4, #4]
   14498:	cmp	r3, #3
   1449c:	beq	145e4 <__assert_fail@plt+0x2b04>
   144a0:	cmp	sl, #0
   144a4:	bne	14408 <__assert_fail@plt+0x2928>
   144a8:	ldr	r1, [r4, #436]	; 0x1b4
   144ac:	cmp	r1, #0
   144b0:	bne	14430 <__assert_fail@plt+0x2950>
   144b4:	ldr	r3, [r4, #452]	; 0x1c4
   144b8:	add	r7, r4, #416	; 0x1a0
   144bc:	ldr	r1, [sp, #20]
   144c0:	ldr	r2, [r4, #448]	; 0x1c0
   144c4:	cmp	r2, r1
   144c8:	beq	14658 <__assert_fail@plt+0x2b78>
   144cc:	cmp	r3, #0
   144d0:	bne	14634 <__assert_fail@plt+0x2b54>
   144d4:	mov	r3, #0
   144d8:	mov	r2, #15
   144dc:	ldr	r1, [sp, #24]
   144e0:	mov	r0, r7
   144e4:	str	r3, [r4, #456]	; 0x1c8
   144e8:	bl	11960 <strncpy@plt>
   144ec:	ldr	r0, [r4, #432]	; 0x1b0
   144f0:	bl	1cb08 <argp_parse@@Base+0x1220>
   144f4:	ldr	r7, [sp, #12]
   144f8:	mov	r0, r7
   144fc:	bl	11774 <strdup@plt>
   14500:	ldr	r3, [sp, #20]
   14504:	str	r0, [r4, #432]	; 0x1b0
   14508:	cmp	r3, #239	; 0xef
   1450c:	bgt	145f4 <__assert_fail@plt+0x2b14>
   14510:	ldr	r2, [sp, #16]
   14514:	mov	r1, r5
   14518:	add	r0, r4, #176	; 0xb0
   1451c:	str	r2, [r4, #444]	; 0x1bc
   14520:	str	r3, [r4, #448]	; 0x1c0
   14524:	bl	1181c <strcpy@plt>
   14528:	mov	r0, r4
   1452c:	mov	r3, #0
   14530:	ldr	r2, [sp, #28]
   14534:	mov	r1, r7
   14538:	bl	139c0 <__assert_fail@plt+0x1ee0>
   1453c:	ldr	r4, [r4]
   14540:	cmp	r4, #0
   14544:	bne	14484 <__assert_fail@plt+0x29a4>
   14548:	add	r1, sp, #176	; 0xb0
   1454c:	mov	r2, #0
   14550:	mov	r0, #2
   14554:	bl	116b4 <sigprocmask@plt>
   14558:	add	sp, sp, #308	; 0x134
   1455c:	ldrd	r4, [sp]
   14560:	ldrd	r6, [sp, #8]
   14564:	ldrd	r8, [sp, #16]
   14568:	ldrd	sl, [sp, #24]
   1456c:	add	sp, sp, #32
   14570:	pop	{pc}		; (ldr pc, [sp], #4)
   14574:	ldrb	r3, [r5, #3]
   14578:	cmp	r3, #32
   1457c:	bne	14378 <__assert_fail@plt+0x2898>
   14580:	ldrb	r3, [r5, #6]
   14584:	cmp	r3, #32
   14588:	bne	14378 <__assert_fail@plt+0x2898>
   1458c:	ldrb	r3, [r5, #9]
   14590:	cmp	r3, #58	; 0x3a
   14594:	bne	14378 <__assert_fail@plt+0x2898>
   14598:	ldrb	r3, [r5, #12]
   1459c:	cmp	r3, #58	; 0x3a
   145a0:	bne	14378 <__assert_fail@plt+0x2898>
   145a4:	ldrb	r3, [r5, #15]
   145a8:	cmp	r3, #32
   145ac:	bne	14378 <__assert_fail@plt+0x2898>
   145b0:	movw	r0, #11384	; 0x2c78
   145b4:	movt	r0, #3
   145b8:	bl	1172c <time@plt>
   145bc:	tst	r7, #4
   145c0:	bne	14388 <__assert_fail@plt+0x28a8>
   145c4:	ldr	r3, [r4, #16]
   145c8:	cmp	r3, #0
   145cc:	streq	r5, [sp, #24]
   145d0:	bne	14788 <__assert_fail@plt+0x2ca8>
   145d4:	sub	r3, r9, #16
   145d8:	add	r5, r5, #16
   145dc:	str	r3, [sp, #20]
   145e0:	b	1439c <__assert_fail@plt+0x28bc>
   145e4:	ldr	r3, [sp, #32]
   145e8:	cmp	r3, #0
   145ec:	beq	144a0 <__assert_fail@plt+0x29c0>
   145f0:	b	14478 <__assert_fail@plt+0x2998>
   145f4:	mov	r1, #0
   145f8:	mov	ip, #0
   145fc:	ldr	r2, [sp, #28]
   14600:	mov	r3, r5
   14604:	mov	r0, r4
   14608:	strb	r1, [r4, #176]	; 0xb0
   1460c:	str	ip, [r4, #448]	; 0x1c0
   14610:	ldr	r1, [sp, #12]
   14614:	bl	139c0 <__assert_fail@plt+0x1ee0>
   14618:	b	14478 <__assert_fail@plt+0x2998>
   1461c:	cmp	sl, #0
   14620:	add	r7, r4, #416	; 0x1a0
   14624:	ldr	r3, [r4, #452]	; 0x1c4
   14628:	beq	144bc <__assert_fail@plt+0x29dc>
   1462c:	cmp	r3, #0
   14630:	beq	144d4 <__assert_fail@plt+0x29f4>
   14634:	mov	r3, #0
   14638:	mov	r0, r4
   1463c:	ldr	r1, [sp, #12]
   14640:	mov	r2, r3
   14644:	bl	139c0 <__assert_fail@plt+0x1ee0>
   14648:	b	144d4 <__assert_fail@plt+0x29f4>
   1464c:	add	r7, r4, #416	; 0x1a0
   14650:	ldr	r3, [r4, #452]	; 0x1c4
   14654:	b	144cc <__assert_fail@plt+0x29ec>
   14658:	ldr	r2, [r4, #432]	; 0x1b0
   1465c:	cmp	r2, #0
   14660:	str	r2, [sp, #44]	; 0x2c
   14664:	beq	144cc <__assert_fail@plt+0x29ec>
   14668:	add	r1, r4, #176	; 0xb0
   1466c:	mov	r0, r5
   14670:	str	r3, [sp, #40]	; 0x28
   14674:	bl	11654 <strcmp@plt>
   14678:	cmp	r0, #0
   1467c:	ldr	r3, [sp, #40]	; 0x28
   14680:	bne	144cc <__assert_fail@plt+0x29ec>
   14684:	ldr	r0, [sp, #12]
   14688:	ldr	r2, [sp, #44]	; 0x2c
   1468c:	mov	r1, r2
   14690:	bl	11654 <strcmp@plt>
   14694:	subs	r3, r0, #0
   14698:	str	r3, [sp, #44]	; 0x2c
   1469c:	ldr	r3, [sp, #40]	; 0x28
   146a0:	bne	144cc <__assert_fail@plt+0x29ec>
   146a4:	mov	r2, #15
   146a8:	mov	r0, r7
   146ac:	ldr	r1, [sp, #24]
   146b0:	bl	11960 <strncpy@plt>
   146b4:	ldr	ip, [fp]
   146b8:	ldr	r3, [sp, #40]	; 0x28
   146bc:	ldr	lr, [r4, #456]	; 0x1c8
   146c0:	ldr	r2, [r4, #8]
   146c4:	add	r3, r3, #1
   146c8:	mov	r1, r3
   146cc:	ldr	r0, [sp, #36]	; 0x24
   146d0:	str	r3, [r4, #452]	; 0x1c4
   146d4:	add	r3, r6, lr, lsl #2
   146d8:	sub	r2, ip, r2
   146dc:	ldr	r3, [r3, #376]	; 0x178
   146e0:	bl	12d40 <__assert_fail@plt+0x1260>
   146e4:	ldr	r1, [r4, #8]
   146e8:	ldr	r3, [r4, #456]	; 0x1c8
   146ec:	ldr	r2, [fp]
   146f0:	add	r3, r6, r3, lsl #2
   146f4:	ldr	r3, [r3, #376]	; 0x178
   146f8:	add	r3, r3, r1
   146fc:	cmp	r3, r2
   14700:	bge	14478 <__assert_fail@plt+0x2998>
   14704:	mov	r0, r4
   14708:	ldr	r1, [sp, #12]
   1470c:	ldr	r2, [sp, #28]
   14710:	ldr	r3, [sp, #44]	; 0x2c
   14714:	bl	139c0 <__assert_fail@plt+0x1ee0>
   14718:	ldr	r3, [r4, #456]	; 0x1c8
   1471c:	add	r3, r3, #1
   14720:	cmp	r3, #1
   14724:	movhi	r3, #1
   14728:	str	r3, [r4, #456]	; 0x1c8
   1472c:	b	14478 <__assert_fail@plt+0x2998>
   14730:	mov	r1, #1
   14734:	ldr	r0, [pc, #104]	; 147a4 <__assert_fail@plt+0x2cc4>
   14738:	movw	r4, #10828	; 0x2a4c
   1473c:	movt	r4, #3
   14740:	bl	1184c <open64@plt>
   14744:	sxth	r6, r0
   14748:	movw	r3, #11320	; 0x2c38
   1474c:	movt	r3, #3
   14750:	ldr	r0, [r3]
   14754:	strh	r6, [r4, #6]
   14758:	bl	11774 <strdup@plt>
   1475c:	cmp	r6, #0
   14760:	str	r0, [r4, #432]	; 0x1b0
   14764:	blt	14548 <__assert_fail@plt+0x2a68>
   14768:	mov	r0, r4
   1476c:	mov	r3, r5
   14770:	ldr	r1, [sp, #12]
   14774:	mov	r2, r7
   14778:	bl	139c0 <__assert_fail@plt+0x1ee0>
   1477c:	ldrsh	r0, [r4, #6]
   14780:	bl	11ac8 <close@plt>
   14784:	b	14548 <__assert_fail@plt+0x2a68>
   14788:	movw	r0, #11384	; 0x2c78
   1478c:	movt	r0, #3
   14790:	bl	1175c <ctime@plt>
   14794:	add	r3, r0, #4
   14798:	str	r3, [sp, #24]
   1479c:	b	145d4 <__assert_fail@plt+0x2af4>
   147a0:	andeq	r2, r3, ip, ror r2
   147a4:	andeq	r2, r3, r4, lsl r3
   147a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   147ac:	mov	r5, r1
   147b0:	strd	r6, [sp, #8]
   147b4:	mov	r7, r0
   147b8:	strd	r8, [sp, #16]
   147bc:	str	sl, [sp, #24]
   147c0:	str	lr, [sp, #28]
   147c4:	sub	sp, sp, #1024	; 0x400
   147c8:	ldrb	r3, [r1]
   147cc:	sub	sp, sp, #8
   147d0:	cmp	r3, #60	; 0x3c
   147d4:	beq	148c8 <__assert_fail@plt+0x2de8>
   147d8:	mov	r6, #13
   147dc:	ldrb	r4, [r5], #1
   147e0:	cmp	r4, #0
   147e4:	beq	14954 <__assert_fail@plt+0x2e74>
   147e8:	bl	118c4 <__ctype_b_loc@plt>
   147ec:	add	r1, sp, #4
   147f0:	add	ip, sp, #1024	; 0x400
   147f4:	ldr	lr, [r0]
   147f8:	mov	r9, #94	; 0x5e
   147fc:	mov	r2, r1
   14800:	mov	r8, #32
   14804:	add	ip, ip, #4
   14808:	b	14854 <__assert_fail@plt+0x2d74>
   1480c:	cmp	r4, #10
   14810:	strbeq	r8, [r2], #1
   14814:	beq	14844 <__assert_fail@plt+0x2d64>
   14818:	cmp	r4, #9
   1481c:	strbeq	r4, [r2], #1
   14820:	beq	14844 <__assert_fail@plt+0x2d64>
   14824:	cmp	r4, #126	; 0x7e
   14828:	mov	r0, r2
   1482c:	mov	r3, r2
   14830:	eor	sl, r4, #64	; 0x40
   14834:	bgt	14868 <__assert_fail@plt+0x2d88>
   14838:	strb	r9, [r3], #2
   1483c:	strb	sl, [r2, #1]
   14840:	mov	r2, r3
   14844:	ldrb	r4, [r5], #1
   14848:	cmp	r4, #0
   1484c:	cmpne	r2, ip
   14850:	bcs	14880 <__assert_fail@plt+0x2da0>
   14854:	lsl	r3, r4, #1
   14858:	mov	r0, r2
   1485c:	ldrh	r3, [lr, r3]
   14860:	tst	r3, #2
   14864:	bne	1480c <__assert_fail@plt+0x2d2c>
   14868:	strb	r4, [r0], #1
   1486c:	mov	r2, r0
   14870:	ldrb	r4, [r5], #1
   14874:	cmp	r4, #0
   14878:	cmpne	r2, ip
   1487c:	bcc	14854 <__assert_fail@plt+0x2d74>
   14880:	movw	r3, #11308	; 0x2c2c
   14884:	movt	r3, #3
   14888:	ldr	r3, [r3]
   1488c:	mov	r0, #0
   14890:	strb	r0, [r2]
   14894:	mov	r2, r7
   14898:	cmp	r3, r0
   1489c:	mov	r0, r6
   148a0:	movne	r3, #2
   148a4:	bl	14238 <__assert_fail@plt+0x2758>
   148a8:	add	sp, sp, #1024	; 0x400
   148ac:	add	sp, sp, #8
   148b0:	ldrd	r4, [sp]
   148b4:	ldrd	r6, [sp, #8]
   148b8:	ldrd	r8, [sp, #16]
   148bc:	ldr	sl, [sp, #24]
   148c0:	add	sp, sp, #28
   148c4:	pop	{pc}		; (ldr pc, [sp], #4)
   148c8:	bl	118c4 <__ctype_b_loc@plt>
   148cc:	ldrb	r3, [r5, #1]
   148d0:	add	r2, r5, #1
   148d4:	ldr	r0, [r0]
   148d8:	lsl	r1, r3, #1
   148dc:	ldrh	r6, [r0, r1]
   148e0:	ands	r6, r6, #2048	; 0x800
   148e4:	beq	14960 <__assert_fail@plt+0x2e80>
   148e8:	mov	r6, #0
   148ec:	b	148f4 <__assert_fail@plt+0x2e14>
   148f0:	mov	r2, r5
   148f4:	sub	r1, r3, #48	; 0x30
   148f8:	ldrb	r3, [r2, #1]
   148fc:	add	r6, r6, r6, lsl #2
   14900:	add	r5, r2, #1
   14904:	add	r6, r1, r6, lsl #1
   14908:	lsl	r1, r3, #1
   1490c:	ldrh	r1, [r0, r1]
   14910:	tst	r1, #2048	; 0x800
   14914:	bne	148f0 <__assert_fail@plt+0x2e10>
   14918:	cmp	r3, #62	; 0x3e
   1491c:	beq	14970 <__assert_fail@plt+0x2e90>
   14920:	bic	r3, r6, #1020	; 0x3fc
   14924:	bic	r3, r3, #3
   14928:	cmp	r3, #0
   1492c:	bne	147d8 <__assert_fail@plt+0x2cf8>
   14930:	asr	r3, r6, #3
   14934:	cmp	r3, #24
   14938:	bgt	147d8 <__assert_fail@plt+0x2cf8>
   1493c:	cmp	r3, #0
   14940:	bne	147dc <__assert_fail@plt+0x2cfc>
   14944:	ldrb	r4, [r5], #1
   14948:	orr	r6, r6, #8
   1494c:	cmp	r4, #0
   14950:	bne	147e8 <__assert_fail@plt+0x2d08>
   14954:	add	r1, sp, #4
   14958:	mov	r2, r1
   1495c:	b	14880 <__assert_fail@plt+0x2da0>
   14960:	cmp	r3, #62	; 0x3e
   14964:	movne	r5, r2
   14968:	bne	14944 <__assert_fail@plt+0x2e64>
   1496c:	mov	r2, r5
   14970:	add	r5, r2, #2
   14974:	b	14920 <__assert_fail@plt+0x2e40>
   14978:	movw	r3, #456	; 0x1c8
   1497c:	movt	r3, #2
   14980:	strd	r4, [sp, #-20]!	; 0xffffffec
   14984:	strd	r6, [sp, #8]
   14988:	mov	r4, r0
   1498c:	str	lr, [sp, #16]
   14990:	sub	sp, sp, #1024	; 0x400
   14994:	ldrb	r2, [r0]
   14998:	sub	sp, sp, #12
   1499c:	ldrb	ip, [r3, #8]
   149a0:	ldrd	r0, [r3]
   149a4:	cmp	r2, #0
   149a8:	strd	r0, [sp, #4]
   149ac:	strb	ip, [sp, #12]
   149b0:	beq	14a34 <__assert_fail@plt+0x2f54>
   149b4:	add	r5, sp, #1024	; 0x400
   149b8:	movw	r6, #11320	; 0x2c38
   149bc:	movt	r6, #3
   149c0:	mov	r7, #64512	; 0xfc00
   149c4:	movt	r7, #65535	; 0xffff
   149c8:	add	r5, r5, #4
   149cc:	cmp	r2, #60	; 0x3c
   149d0:	movne	r3, #7
   149d4:	movne	r0, #2
   149d8:	beq	14a4c <__assert_fail@plt+0x2f6c>
   149dc:	cmp	r2, #10
   149e0:	add	r4, r4, #1
   149e4:	beq	14ab8 <__assert_fail@plt+0x2fd8>
   149e8:	mov	r1, r4
   149ec:	add	ip, sp, #12
   149f0:	mov	r4, r1
   149f4:	strb	r2, [ip], #1
   149f8:	ldrb	r2, [r1], #1
   149fc:	cmp	r2, #0
   14a00:	beq	14a14 <__assert_fail@plt+0x2f34>
   14a04:	cmp	r2, #10
   14a08:	cmpne	ip, r5
   14a0c:	mov	r4, r1
   14a10:	bcc	149f0 <__assert_fail@plt+0x2f10>
   14a14:	mov	lr, #0
   14a18:	add	r1, sp, #4
   14a1c:	ldr	r2, [r6]
   14a20:	strb	lr, [ip]
   14a24:	bl	14238 <__assert_fail@plt+0x2758>
   14a28:	ldrb	r2, [r4]
   14a2c:	cmp	r2, #0
   14a30:	bne	149cc <__assert_fail@plt+0x2eec>
   14a34:	add	sp, sp, #1024	; 0x400
   14a38:	add	sp, sp, #12
   14a3c:	ldrd	r4, [sp]
   14a40:	ldrd	r6, [sp, #8]
   14a44:	add	sp, sp, #16
   14a48:	pop	{pc}		; (ldr pc, [sp], #4)
   14a4c:	bl	118c4 <__ctype_b_loc@plt>
   14a50:	ldrb	r2, [r4, #1]
   14a54:	add	r3, r4, #1
   14a58:	ldr	ip, [r0]
   14a5c:	lsl	r1, r2, #1
   14a60:	ldrh	r0, [ip, r1]
   14a64:	ands	r0, r0, #2048	; 0x800
   14a68:	beq	14ac0 <__assert_fail@plt+0x2fe0>
   14a6c:	mov	r0, #0
   14a70:	b	14a78 <__assert_fail@plt+0x2f98>
   14a74:	mov	r3, r4
   14a78:	sub	r1, r2, #48	; 0x30
   14a7c:	ldrb	r2, [r3, #1]
   14a80:	add	r0, r0, r0, lsl #2
   14a84:	add	r4, r3, #1
   14a88:	add	r0, r1, r0, lsl #1
   14a8c:	lsl	r1, r2, #1
   14a90:	ldrh	r1, [ip, r1]
   14a94:	tst	r1, #2048	; 0x800
   14a98:	bne	14a74 <__assert_fail@plt+0x2f94>
   14a9c:	cmp	r2, #62	; 0x3e
   14aa0:	beq	14ad0 <__assert_fail@plt+0x2ff0>
   14aa4:	tst	r0, r7
   14aa8:	movne	r0, #2
   14aac:	cmp	r2, #0
   14ab0:	mov	r3, #6
   14ab4:	bne	149dc <__assert_fail@plt+0x2efc>
   14ab8:	add	ip, sp, #12
   14abc:	b	14a14 <__assert_fail@plt+0x2f34>
   14ac0:	cmp	r2, #62	; 0x3e
   14ac4:	movne	r4, r3
   14ac8:	bne	14aac <__assert_fail@plt+0x2fcc>
   14acc:	mov	r3, r4
   14ad0:	ldrb	r2, [r3, #2]
   14ad4:	add	r4, r3, #2
   14ad8:	b	14aa4 <__assert_fail@plt+0x2fc4>
   14adc:	mov	r0, #0
   14ae0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14ae4:	movw	r5, #8620	; 0x21ac
   14ae8:	movt	r5, #3
   14aec:	strd	r6, [sp, #8]
   14af0:	movw	r6, #11384	; 0x2c78
   14af4:	movt	r6, #3
   14af8:	str	r8, [sp, #16]
   14afc:	str	lr, [sp, #20]
   14b00:	bl	1172c <time@plt>
   14b04:	ldr	r2, [r5, #8]
   14b08:	str	r0, [r6]
   14b0c:	cmp	r2, #0
   14b10:	ble	14b30 <__assert_fail@plt+0x3050>
   14b14:	movw	r4, #11396	; 0x2c84
   14b18:	movt	r4, #3
   14b1c:	ldr	r3, [r4]
   14b20:	add	r3, r3, #30
   14b24:	cmp	r2, r3
   14b28:	str	r3, [r4]
   14b2c:	ble	14bf8 <__assert_fail@plt+0x3118>
   14b30:	movw	r3, #10824	; 0x2a48
   14b34:	movt	r3, #3
   14b38:	ldr	r4, [r3]
   14b3c:	cmp	r4, #0
   14b40:	beq	14bdc <__assert_fail@plt+0x30fc>
   14b44:	movw	r8, #480	; 0x1e0
   14b48:	movt	r8, #2
   14b4c:	movw	r7, #11320	; 0x2c38
   14b50:	movt	r7, #3
   14b54:	b	14b64 <__assert_fail@plt+0x3084>
   14b58:	ldr	r4, [r4]
   14b5c:	cmp	r4, #0
   14b60:	beq	14bdc <__assert_fail@plt+0x30fc>
   14b64:	ldr	r2, [r4, #452]	; 0x1c4
   14b68:	cmp	r2, #0
   14b6c:	beq	14b58 <__assert_fail@plt+0x3078>
   14b70:	ldr	r1, [r4, #8]
   14b74:	ldr	r3, [r4, #456]	; 0x1c8
   14b78:	ldr	r0, [r6]
   14b7c:	add	r3, r5, r3, lsl #2
   14b80:	ldr	r3, [r3, #376]	; 0x178
   14b84:	add	r1, r3, r1
   14b88:	cmp	r1, r0
   14b8c:	bgt	14b58 <__assert_fail@plt+0x3078>
   14b90:	ldrsh	r1, [r4, #4]
   14b94:	mov	r0, r8
   14b98:	add	r1, r5, r1, lsl #2
   14b9c:	ldr	r1, [r1, #320]	; 0x140
   14ba0:	bl	12d40 <__assert_fail@plt+0x1260>
   14ba4:	mov	r3, #0
   14ba8:	mov	r0, r4
   14bac:	ldr	r1, [r7]
   14bb0:	mov	r2, r3
   14bb4:	bl	139c0 <__assert_fail@plt+0x1ee0>
   14bb8:	ldr	r3, [r4, #456]	; 0x1c8
   14bbc:	mov	r2, #1
   14bc0:	add	r3, r3, r2
   14bc4:	cmp	r3, r2
   14bc8:	strls	r3, [r4, #456]	; 0x1c8
   14bcc:	strhi	r2, [r4, #456]	; 0x1c8
   14bd0:	ldr	r4, [r4]
   14bd4:	cmp	r4, #0
   14bd8:	bne	14b64 <__assert_fail@plt+0x3084>
   14bdc:	mov	r0, #30
   14be0:	ldrd	r4, [sp]
   14be4:	ldrd	r6, [sp, #8]
   14be8:	ldr	r8, [sp, #16]
   14bec:	ldr	lr, [sp, #20]
   14bf0:	add	sp, sp, #24
   14bf4:	b	1178c <alarm@plt>
   14bf8:	movw	r3, #11320	; 0x2c38
   14bfc:	movt	r3, #3
   14c00:	movw	r1, #468	; 0x1d4
   14c04:	movt	r1, #2
   14c08:	ldr	r2, [r3]
   14c0c:	mov	r0, #6
   14c10:	mov	r3, #12
   14c14:	bl	14238 <__assert_fail@plt+0x2758>
   14c18:	mov	r3, #0
   14c1c:	str	r3, [r4]
   14c20:	b	14b30 <__assert_fail@plt+0x3050>
   14c24:	mov	ip, #0
   14c28:	strd	r4, [sp, #-16]!
   14c2c:	movw	r2, #11336	; 0x2c48
   14c30:	movt	r2, #3
   14c34:	str	r6, [sp, #8]
   14c38:	mov	r3, #46	; 0x2e
   14c3c:	str	lr, [sp, #12]
   14c40:	sub	sp, sp, #16
   14c44:	mov	lr, #1
   14c48:	mov	r5, r0
   14c4c:	mov	r6, r1
   14c50:	str	ip, [sp]
   14c54:	stmib	sp, {ip, lr}
   14c58:	bl	119e4 <getnameinfo@plt>
   14c5c:	subs	r4, r0, #0
   14c60:	bne	14d48 <__assert_fail@plt+0x3268>
   14c64:	movw	r1, #11336	; 0x2c48
   14c68:	movt	r1, #3
   14c6c:	movw	r0, #556	; 0x22c
   14c70:	movt	r0, #2
   14c74:	bl	12d40 <__assert_fail@plt+0x1260>
   14c78:	mov	ip, #8
   14c7c:	mov	r1, r6
   14c80:	str	r4, [sp]
   14c84:	mov	r0, r5
   14c88:	movw	r2, #11400	; 0x2c88
   14c8c:	movt	r2, #3
   14c90:	movw	r3, #1025	; 0x401
   14c94:	stmib	sp, {r4, ip}
   14c98:	bl	119e4 <getnameinfo@plt>
   14c9c:	cmp	r0, #0
   14ca0:	bne	14d68 <__assert_fail@plt+0x3288>
   14ca4:	movw	r0, #11400	; 0x2c88
   14ca8:	movt	r0, #3
   14cac:	mov	r1, #46	; 0x2e
   14cb0:	bl	11900 <strchr@plt>
   14cb4:	subs	r5, r0, #0
   14cb8:	beq	14d3c <__assert_fail@plt+0x325c>
   14cbc:	movw	r3, #11316	; 0x2c34
   14cc0:	movt	r3, #3
   14cc4:	add	r6, r5, #1
   14cc8:	ldr	r1, [r3]
   14ccc:	mov	r0, r6
   14cd0:	bl	117d4 <strcasecmp@plt>
   14cd4:	subs	r3, r0, #0
   14cd8:	beq	14d1c <__assert_fail@plt+0x323c>
   14cdc:	movw	r3, #11292	; 0x2c1c
   14ce0:	movt	r3, #3
   14ce4:	ldr	r4, [r3]
   14ce8:	cmp	r4, #0
   14cec:	beq	14d88 <__assert_fail@plt+0x32a8>
   14cf0:	ldr	r1, [r4]
   14cf4:	cmp	r1, #0
   14cf8:	bne	14d0c <__assert_fail@plt+0x322c>
   14cfc:	b	14d88 <__assert_fail@plt+0x32a8>
   14d00:	ldr	r1, [r4, #4]!
   14d04:	cmp	r1, #0
   14d08:	beq	14d88 <__assert_fail@plt+0x32a8>
   14d0c:	mov	r0, r6
   14d10:	bl	117d4 <strcasecmp@plt>
   14d14:	subs	r3, r0, #0
   14d18:	bne	14d00 <__assert_fail@plt+0x3220>
   14d1c:	movw	r0, #11400	; 0x2c88
   14d20:	movt	r0, #3
   14d24:	strb	r3, [r5]
   14d28:	add	sp, sp, #16
   14d2c:	ldrd	r4, [sp]
   14d30:	ldr	r6, [sp, #8]
   14d34:	add	sp, sp, #12
   14d38:	pop	{pc}		; (ldr pc, [sp], #4)
   14d3c:	movw	r0, #11400	; 0x2c88
   14d40:	movt	r0, #3
   14d44:	b	14d28 <__assert_fail@plt+0x3248>
   14d48:	bl	116e4 <gai_strerror@plt>
   14d4c:	mov	r1, r0
   14d50:	movw	r0, #524	; 0x20c
   14d54:	movt	r0, #2
   14d58:	bl	12d40 <__assert_fail@plt+0x1260>
   14d5c:	movw	r0, #520	; 0x208
   14d60:	movt	r0, #2
   14d64:	b	14d28 <__assert_fail@plt+0x3248>
   14d68:	movw	r1, #11336	; 0x2c48
   14d6c:	movt	r1, #3
   14d70:	movw	r0, #572	; 0x23c
   14d74:	movt	r0, #2
   14d78:	bl	12d40 <__assert_fail@plt+0x1260>
   14d7c:	movw	r0, #11336	; 0x2c48
   14d80:	movt	r0, #3
   14d84:	b	14d28 <__assert_fail@plt+0x3248>
   14d88:	movw	r3, #11332	; 0x2c44
   14d8c:	movt	r3, #3
   14d90:	ldr	r4, [r3]
   14d94:	cmp	r4, #0
   14d98:	beq	14d3c <__assert_fail@plt+0x325c>
   14d9c:	ldr	r1, [r4]
   14da0:	cmp	r1, #0
   14da4:	beq	14d3c <__assert_fail@plt+0x325c>
   14da8:	movw	r6, #11400	; 0x2c88
   14dac:	movt	r6, #3
   14db0:	b	14dc0 <__assert_fail@plt+0x32e0>
   14db4:	ldr	r1, [r4, #4]!
   14db8:	cmp	r1, #0
   14dbc:	beq	14d3c <__assert_fail@plt+0x325c>
   14dc0:	mov	r0, r6
   14dc4:	bl	117d4 <strcasecmp@plt>
   14dc8:	subs	r3, r0, #0
   14dcc:	bne	14db4 <__assert_fail@plt+0x32d4>
   14dd0:	b	14d1c <__assert_fail@plt+0x323c>
   14dd4:	strd	r4, [sp, #-16]!
   14dd8:	str	r6, [sp, #8]
   14ddc:	mov	r6, r0
   14de0:	str	lr, [sp, #12]
   14de4:	sub	sp, sp, #112	; 0x70
   14de8:	bl	11918 <__errno_location@plt>
   14dec:	mov	r5, r0
   14df0:	ldr	r0, [r0]
   14df4:	add	r4, sp, #12
   14df8:	cmp	r0, #0
   14dfc:	beq	14e68 <__assert_fail@plt+0x3388>
   14e00:	bl	11888 <strerror@plt>
   14e04:	movw	r2, #65308	; 0xff1c
   14e08:	movt	r2, #1
   14e0c:	str	r0, [sp]
   14e10:	mov	r3, r6
   14e14:	mov	r1, #100	; 0x64
   14e18:	mov	r0, r4
   14e1c:	bl	11924 <snprintf@plt>
   14e20:	mov	r3, #0
   14e24:	mov	r1, r4
   14e28:	movw	r0, #5456	; 0x1550
   14e2c:	movt	r0, #2
   14e30:	str	r3, [r5]
   14e34:	bl	12d40 <__assert_fail@plt+0x1260>
   14e38:	movw	r2, #11320	; 0x2c38
   14e3c:	movt	r2, #3
   14e40:	ldr	r2, [r2]
   14e44:	mov	r1, r4
   14e48:	mov	r3, #4
   14e4c:	mov	r0, #43	; 0x2b
   14e50:	bl	14238 <__assert_fail@plt+0x2758>
   14e54:	add	sp, sp, #112	; 0x70
   14e58:	ldrd	r4, [sp]
   14e5c:	ldr	r6, [sp, #8]
   14e60:	add	sp, sp, #12
   14e64:	pop	{pc}		; (ldr pc, [sp], #4)
   14e68:	mov	r3, r6
   14e6c:	mov	r0, r4
   14e70:	movw	r2, #65324	; 0xff2c
   14e74:	movt	r2, #1
   14e78:	mov	r1, #100	; 0x64
   14e7c:	bl	11924 <snprintf@plt>
   14e80:	b	14e20 <__assert_fail@plt+0x3340>
   14e84:	movw	r3, #10824	; 0x2a48
   14e88:	movt	r3, #3
   14e8c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14e90:	ldr	r4, [r3]
   14e94:	movw	r5, #11312	; 0x2c30
   14e98:	movt	r5, #3
   14e9c:	mov	r3, #0
   14ea0:	strd	r6, [sp, #8]
   14ea4:	mov	r7, r0
   14ea8:	str	r8, [sp, #16]
   14eac:	str	lr, [sp, #20]
   14eb0:	sub	sp, sp, #104	; 0x68
   14eb4:	ldr	r8, [r5]
   14eb8:	cmp	r4, r3
   14ebc:	str	r3, [r5]
   14ec0:	beq	14ee4 <__assert_fail@plt+0x3404>
   14ec4:	movw	r6, #11320	; 0x2c38
   14ec8:	movt	r6, #3
   14ecc:	ldr	r3, [r4, #452]	; 0x1c4
   14ed0:	cmp	r3, #0
   14ed4:	bne	14f9c <__assert_fail@plt+0x34bc>
   14ed8:	ldr	r4, [r4]
   14edc:	cmp	r4, #0
   14ee0:	bne	14ecc <__assert_fail@plt+0x33ec>
   14ee4:	cmp	r7, #0
   14ee8:	str	r8, [r5]
   14eec:	bne	14fc0 <__assert_fail@plt+0x34e0>
   14ef0:	movw	r7, #8620	; 0x21ac
   14ef4:	movt	r7, #3
   14ef8:	ldr	r0, [r7, #384]	; 0x180
   14efc:	cmp	r0, #0
   14f00:	blt	14f08 <__assert_fail@plt+0x3428>
   14f04:	bl	11ac8 <close@plt>
   14f08:	movw	r6, #11296	; 0x2c20
   14f0c:	movt	r6, #3
   14f10:	ldr	r2, [r6]
   14f14:	cmp	r2, #0
   14f18:	movwne	r5, #11392	; 0x2c80
   14f1c:	movne	r4, #0
   14f20:	movtne	r5, #3
   14f24:	bne	14f38 <__assert_fail@plt+0x3458>
   14f28:	b	14f74 <__assert_fail@plt+0x3494>
   14f2c:	add	r4, r4, #1
   14f30:	cmp	r4, r2
   14f34:	bcs	14f74 <__assert_fail@plt+0x3494>
   14f38:	ldr	r3, [r5]
   14f3c:	add	r3, r3, r4, lsl #3
   14f40:	ldr	r0, [r3, #4]
   14f44:	cmp	r0, #0
   14f48:	blt	14f2c <__assert_fail@plt+0x344c>
   14f4c:	bl	11ac8 <close@plt>
   14f50:	ldr	r3, [r5]
   14f54:	ldr	r0, [r3, r4, lsl #3]
   14f58:	cmp	r0, #0
   14f5c:	beq	14f64 <__assert_fail@plt+0x3484>
   14f60:	bl	117a4 <unlink@plt>
   14f64:	ldr	r2, [r6]
   14f68:	add	r4, r4, #1
   14f6c:	cmp	r4, r2
   14f70:	bcc	14f38 <__assert_fail@plt+0x3458>
   14f74:	ldr	r0, [r7, #312]	; 0x138
   14f78:	cmp	r0, #0
   14f7c:	blt	14f84 <__assert_fail@plt+0x34a4>
   14f80:	bl	11ac8 <close@plt>
   14f84:	ldr	r0, [r7, #316]	; 0x13c
   14f88:	cmp	r0, #0
   14f8c:	blt	14f94 <__assert_fail@plt+0x34b4>
   14f90:	bl	11ac8 <close@plt>
   14f94:	mov	r0, #0
   14f98:	bl	118dc <exit@plt>
   14f9c:	mov	r3, #0
   14fa0:	mov	r0, r4
   14fa4:	ldr	r1, [r6]
   14fa8:	mov	r2, r3
   14fac:	bl	139c0 <__assert_fail@plt+0x1ee0>
   14fb0:	ldr	r4, [r4]
   14fb4:	cmp	r4, #0
   14fb8:	bne	14ecc <__assert_fail@plt+0x33ec>
   14fbc:	b	14ee4 <__assert_fail@plt+0x3404>
   14fc0:	movw	r3, #9660	; 0x25bc
   14fc4:	movt	r3, #3
   14fc8:	mov	r2, r7
   14fcc:	movw	r0, #616	; 0x268
   14fd0:	movt	r0, #2
   14fd4:	ldr	r1, [r3]
   14fd8:	bl	12d40 <__assert_fail@plt+0x1260>
   14fdc:	mov	r3, r7
   14fe0:	mov	r1, #100	; 0x64
   14fe4:	add	r0, sp, #4
   14fe8:	movw	r2, #644	; 0x284
   14fec:	movt	r2, #2
   14ff0:	bl	11924 <snprintf@plt>
   14ff4:	bl	11918 <__errno_location@plt>
   14ff8:	mov	r3, r0
   14ffc:	mov	r2, #0
   15000:	add	r0, sp, #4
   15004:	str	r2, [r3]
   15008:	bl	14dd4 <__assert_fail@plt+0x32f4>
   1500c:	b	14ef0 <__assert_fail@plt+0x3410>
   15010:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15014:	movw	r3, #11328	; 0x2c40
   15018:	movt	r3, #3
   1501c:	strd	r6, [sp, #8]
   15020:	mov	r4, r0
   15024:	movw	r0, #680	; 0x2a8
   15028:	movt	r0, #2
   1502c:	strd	r8, [sp, #16]
   15030:	mov	r6, #0
   15034:	strd	sl, [sp, #24]
   15038:	movw	r9, #10820	; 0x2a44
   1503c:	movt	r9, #3
   15040:	str	lr, [sp, #32]
   15044:	sub	sp, sp, #1376	; 0x560
   15048:	sub	sp, sp, #4
   1504c:	str	r1, [sp, #12]
   15050:	mov	r1, r4
   15054:	str	r3, [sp, #44]	; 0x2c
   15058:	ldr	r3, [r3]
   1505c:	cmp	r3, #0
   15060:	movweq	r2, #6600	; 0x19c8
   15064:	movwne	r2, #668	; 0x29c
   15068:	movteq	r2, #2
   1506c:	movtne	r2, #2
   15070:	moveq	r3, r2
   15074:	bl	12d40 <__assert_fail@plt+0x1260>
   15078:	bl	11918 <__errno_location@plt>
   1507c:	ldr	r5, [sp, #12]
   15080:	mov	r3, r0
   15084:	mov	r1, r6
   15088:	mov	r2, #464	; 0x1d0
   1508c:	str	r6, [r3]
   15090:	str	r3, [sp, #20]
   15094:	movw	r3, #696	; 0x2b8
   15098:	movt	r3, #2
   1509c:	add	r7, r5, #12
   150a0:	mov	r0, r5
   150a4:	str	r7, [sp, #28]
   150a8:	str	r3, [sp, #32]
   150ac:	bl	11954 <memset@plt>
   150b0:	movw	r3, #704	; 0x2c0
   150b4:	movt	r3, #2
   150b8:	str	r6, [r5, #12]
   150bc:	movw	r5, #736	; 0x2e0
   150c0:	movt	r5, #2
   150c4:	str	r6, [r7, #4]
   150c8:	str	r6, [r7, #8]
   150cc:	str	r6, [r7, #12]
   150d0:	str	r6, [r7, #16]
   150d4:	str	r6, [r7, #20]
   150d8:	strb	r6, [r7, #24]
   150dc:	str	r3, [sp, #36]	; 0x24
   150e0:	str	r9, [sp, #40]	; 0x28
   150e4:	ldrb	r9, [r4]
   150e8:	and	r2, r9, #223	; 0xdf
   150ec:	cmp	r9, #9
   150f0:	cmpne	r2, #0
   150f4:	beq	155b4 <__assert_fail@plt+0x3ad4>
   150f8:	add	r1, r4, #1
   150fc:	mov	r2, r9
   15100:	cmp	r2, #46	; 0x2e
   15104:	mov	r8, r1
   15108:	beq	1511c <__assert_fail@plt+0x363c>
   1510c:	ldrb	r2, [r1], #1
   15110:	cmp	r2, #0
   15114:	cmpne	r2, #9
   15118:	bne	15100 <__assert_fail@plt+0x3620>
   1511c:	ldrb	r6, [r8]
   15120:	add	r7, sp, #352	; 0x160
   15124:	mov	sl, r7
   15128:	cmp	r6, #0
   1512c:	ldrne	fp, [sp, #32]
   15130:	bne	15148 <__assert_fail@plt+0x3668>
   15134:	b	155a8 <__assert_fail@plt+0x3ac8>
   15138:	strb	r6, [sl], #1
   1513c:	ldrb	r6, [r8, #1]!
   15140:	cmp	r6, #0
   15144:	beq	155a8 <__assert_fail@plt+0x3ac8>
   15148:	mov	r1, r6
   1514c:	mov	r0, fp
   15150:	bl	11900 <strchr@plt>
   15154:	cmp	r0, #0
   15158:	beq	15138 <__assert_fail@plt+0x3658>
   1515c:	mov	r2, #0
   15160:	mov	r1, r6
   15164:	ldr	r6, [sp, #36]	; 0x24
   15168:	strb	r2, [sl]
   1516c:	b	1517c <__assert_fail@plt+0x369c>
   15170:	ldrb	r1, [r8, #1]!
   15174:	cmp	r1, #0
   15178:	beq	1518c <__assert_fail@plt+0x36ac>
   1517c:	mov	r0, r6
   15180:	bl	11900 <strchr@plt>
   15184:	cmp	r0, #0
   15188:	bne	15170 <__assert_fail@plt+0x3690>
   1518c:	ldrb	r2, [sp, #352]	; 0x160
   15190:	cmp	r2, #33	; 0x21
   15194:	cmpne	r2, #61	; 0x3d
   15198:	moveq	r6, #0
   1519c:	moveq	sl, #1
   151a0:	movne	sl, #0
   151a4:	addeq	r1, r7, #1
   151a8:	moveq	sl, r6
   151ac:	bne	15578 <__assert_fail@plt+0x3a98>
   151b0:	cmp	r2, #33	; 0x21
   151b4:	mov	fp, r1
   151b8:	moveq	sl, #1
   151bc:	beq	151c8 <__assert_fail@plt+0x36e8>
   151c0:	cmp	r2, #61	; 0x3d
   151c4:	moveq	r6, #1
   151c8:	ldrb	r2, [r1], #1
   151cc:	cmp	r2, #61	; 0x3d
   151d0:	cmpne	r2, #33	; 0x21
   151d4:	moveq	r0, #1
   151d8:	movne	r0, #0
   151dc:	beq	151b0 <__assert_fail@plt+0x36d0>
   151e0:	cmp	r2, #42	; 0x2a
   151e4:	beq	15288 <__assert_fail@plt+0x37a8>
   151e8:	str	r2, [sp, #16]
   151ec:	bl	118c4 <__ctype_b_loc@plt>
   151f0:	ldr	r2, [sp, #16]
   151f4:	ldr	r3, [r0]
   151f8:	lsl	r2, r2, #1
   151fc:	ldrh	r3, [r3, r2]
   15200:	tst	r3, #2048	; 0x800
   15204:	bne	15594 <__assert_fail@plt+0x3ab4>
   15208:	movw	r3, #8620	; 0x21ac
   1520c:	movt	r3, #3
   15210:	ldr	r1, [r3, #208]	; 0xd0
   15214:	cmp	r1, #0
   15218:	beq	1551c <__assert_fail@plt+0x3a3c>
   1521c:	add	r9, r3, #208	; 0xd0
   15220:	b	15230 <__assert_fail@plt+0x3750>
   15224:	ldr	r1, [r9, #8]!
   15228:	cmp	r1, #0
   1522c:	beq	1551c <__assert_fail@plt+0x3a3c>
   15230:	mov	r0, fp
   15234:	bl	117d4 <strcasecmp@plt>
   15238:	cmp	r0, #0
   1523c:	bne	15224 <__assert_fail@plt+0x3744>
   15240:	ldr	r0, [r9, #4]
   15244:	cmp	r0, #0
   15248:	blt	1551c <__assert_fail@plt+0x3a3c>
   1524c:	cmp	r0, #16
   15250:	cmpne	r0, #7
   15254:	movgt	r2, #1
   15258:	movle	r2, #0
   1525c:	bgt	1551c <__assert_fail@plt+0x3a3c>
   15260:	cmp	r0, #16
   15264:	ldrb	r9, [r4]
   15268:	beq	15530 <__assert_fail@plt+0x3a50>
   1526c:	cmp	r6, #0
   15270:	beq	15544 <__assert_fail@plt+0x3a64>
   15274:	mov	fp, #1
   15278:	mov	r6, r2
   1527c:	lsl	r3, fp, r0
   15280:	str	r3, [sp, #16]
   15284:	b	15538 <__assert_fail@plt+0x3a58>
   15288:	cmp	sl, #0
   1528c:	beq	154f8 <__assert_fail@plt+0x3a18>
   15290:	mov	r3, #255	; 0xff
   15294:	mov	r6, r0
   15298:	str	r3, [sp, #16]
   1529c:	str	r8, [sp, #24]
   152a0:	movw	sl, #772	; 0x304
   152a4:	movt	sl, #2
   152a8:	ldr	r8, [sp, #40]	; 0x28
   152ac:	mov	r1, r9
   152b0:	mov	r0, sl
   152b4:	bl	11900 <strchr@plt>
   152b8:	cmp	r0, #0
   152bc:	bne	153b4 <__assert_fail@plt+0x38d4>
   152c0:	mov	fp, r7
   152c4:	b	152d8 <__assert_fail@plt+0x37f8>
   152c8:	strb	r9, [fp], #1
   152cc:	ldrb	r9, [r4, #1]!
   152d0:	cmp	r9, #0
   152d4:	beq	152ec <__assert_fail@plt+0x380c>
   152d8:	mov	r1, r9
   152dc:	mov	r0, r5
   152e0:	bl	11900 <strchr@plt>
   152e4:	cmp	r0, #0
   152e8:	beq	152c8 <__assert_fail@plt+0x37e8>
   152ec:	mov	r9, #0
   152f0:	strb	r9, [fp]
   152f4:	ldrb	fp, [sp, #352]	; 0x160
   152f8:	cmp	fp, #42	; 0x2a
   152fc:	beq	15464 <__assert_fail@plt+0x3984>
   15300:	bl	118c4 <__ctype_b_loc@plt>
   15304:	ldr	r1, [r0]
   15308:	lsl	r2, fp, #1
   1530c:	ldrh	r2, [r1, r2]
   15310:	tst	r2, #2048	; 0x800
   15314:	bne	154a4 <__assert_fail@plt+0x39c4>
   15318:	movw	r9, #8620	; 0x21ac
   1531c:	movt	r9, #3
   15320:	ldr	r1, [r9, #24]
   15324:	cmp	r1, #0
   15328:	beq	153c0 <__assert_fail@plt+0x38e0>
   1532c:	add	r9, r9, #24
   15330:	b	15340 <__assert_fail@plt+0x3860>
   15334:	ldr	r1, [r9, #8]!
   15338:	cmp	r1, #0
   1533c:	beq	153c0 <__assert_fail@plt+0x38e0>
   15340:	mov	r0, r7
   15344:	bl	117d4 <strcasecmp@plt>
   15348:	cmp	r0, #0
   1534c:	bne	15334 <__assert_fail@plt+0x3854>
   15350:	ldr	r0, [r9, #4]
   15354:	cmp	r0, #192	; 0xc0
   15358:	bhi	153c0 <__assert_fail@plt+0x38e0>
   1535c:	ldr	r3, [sp, #12]
   15360:	asr	r0, r0, #3
   15364:	mov	lr, #1
   15368:	ldr	ip, [r8]
   1536c:	add	r1, r3, r0
   15370:	ldr	r3, [sp, #16]
   15374:	ldrb	r2, [r1, #12]
   15378:	orr	r0, ip, lr, lsl r0
   1537c:	str	r0, [r8]
   15380:	bic	r2, r2, r3
   15384:	orr	r2, r2, r6
   15388:	strb	r2, [r1, #12]
   1538c:	ldrb	r9, [r4]
   15390:	cmp	r9, #44	; 0x2c
   15394:	cmpne	r9, #32
   15398:	bne	153ac <__assert_fail@plt+0x38cc>
   1539c:	ldrb	r9, [r4, #1]!
   153a0:	cmp	r9, #32
   153a4:	cmpne	r9, #44	; 0x2c
   153a8:	beq	1539c <__assert_fail@plt+0x38bc>
   153ac:	cmp	r9, #0
   153b0:	bne	152ac <__assert_fail@plt+0x37cc>
   153b4:	ldr	r8, [sp, #24]
   153b8:	mov	r4, r8
   153bc:	b	150e4 <__assert_fail@plt+0x3604>
   153c0:	movw	r2, #744	; 0x2e8
   153c4:	movt	r2, #2
   153c8:	mov	r3, r7
   153cc:	add	r0, sp, #152	; 0x98
   153d0:	mov	r1, #200	; 0xc8
   153d4:	bl	11924 <snprintf@plt>
   153d8:	ldr	r3, [sp, #20]
   153dc:	ldr	r0, [r3]
   153e0:	cmp	r0, #0
   153e4:	beq	15558 <__assert_fail@plt+0x3a78>
   153e8:	bl	11888 <strerror@plt>
   153ec:	add	r4, sp, #52	; 0x34
   153f0:	movw	r2, #65308	; 0xff1c
   153f4:	movt	r2, #1
   153f8:	add	r3, sp, #152	; 0x98
   153fc:	str	r0, [sp]
   15400:	mov	r1, #100	; 0x64
   15404:	mov	r0, r4
   15408:	bl	11924 <snprintf@plt>
   1540c:	ldr	r2, [sp, #20]
   15410:	mov	r3, #0
   15414:	mov	r1, r4
   15418:	movw	r0, #5456	; 0x1550
   1541c:	movt	r0, #2
   15420:	str	r3, [r2]
   15424:	bl	12d40 <__assert_fail@plt+0x1260>
   15428:	movw	r2, #11320	; 0x2c38
   1542c:	movt	r2, #3
   15430:	mov	r1, r4
   15434:	mov	r3, #4
   15438:	ldr	r2, [r2]
   1543c:	mov	r0, #43	; 0x2b
   15440:	bl	14238 <__assert_fail@plt+0x2758>
   15444:	add	sp, sp, #1376	; 0x560
   15448:	add	sp, sp, #4
   1544c:	ldrd	r4, [sp]
   15450:	ldrd	r6, [sp, #8]
   15454:	ldrd	r8, [sp, #16]
   15458:	ldrd	sl, [sp, #24]
   1545c:	add	sp, sp, #32
   15460:	pop	{pc}		; (ldr pc, [sp], #4)
   15464:	ldrb	r2, [sp, #353]	; 0x161
   15468:	ldr	ip, [r8]
   1546c:	cmp	r2, #42	; 0x2a
   15470:	beq	154b8 <__assert_fail@plt+0x39d8>
   15474:	ldr	r3, [sp, #12]
   15478:	add	r1, r3, #11
   1547c:	add	ip, r3, #36	; 0x24
   15480:	ldr	r3, [sp, #16]
   15484:	mvn	r0, r3
   15488:	ldrb	r3, [r1, #1]!
   1548c:	and	r3, r3, r0
   15490:	cmp	ip, r1
   15494:	orr	r3, r3, r6
   15498:	strb	r3, [r1]
   1549c:	bne	15488 <__assert_fail@plt+0x39a8>
   154a0:	b	1538c <__assert_fail@plt+0x38ac>
   154a4:	mov	r1, r9
   154a8:	mov	r2, #10
   154ac:	mov	r0, r7
   154b0:	bl	11660 <strtol@plt>
   154b4:	b	15354 <__assert_fail@plt+0x3874>
   154b8:	ldr	r3, [sp, #16]
   154bc:	mov	r1, r9
   154c0:	ldr	r0, [sp, #28]
   154c4:	mvn	lr, r3
   154c8:	asr	r3, ip, r1
   154cc:	add	r1, r1, #1
   154d0:	tst	r3, #1
   154d4:	bne	154e8 <__assert_fail@plt+0x3a08>
   154d8:	ldrb	r3, [r0]
   154dc:	and	r3, r3, lr
   154e0:	orr	r3, r3, r6
   154e4:	strb	r3, [r0]
   154e8:	cmp	r1, #25
   154ec:	add	r0, r0, #1
   154f0:	bne	154c8 <__assert_fail@plt+0x39e8>
   154f4:	b	1538c <__assert_fail@plt+0x38ac>
   154f8:	mov	r3, #255	; 0xff
   154fc:	mov	r6, sl
   15500:	str	r3, [sp, #16]
   15504:	mov	r2, r6
   15508:	ldr	r6, [sp, #16]
   1550c:	str	r2, [sp, #16]
   15510:	cmp	r9, #0
   15514:	bne	1529c <__assert_fail@plt+0x37bc>
   15518:	b	153b8 <__assert_fail@plt+0x38d8>
   1551c:	movw	r2, #708	; 0x2c4
   15520:	movt	r2, #2
   15524:	mov	r3, fp
   15528:	add	r0, sp, #152	; 0x98
   1552c:	b	153d0 <__assert_fail@plt+0x38f0>
   15530:	mov	r6, #255	; 0xff
   15534:	str	r2, [sp, #16]
   15538:	cmp	sl, #0
   1553c:	bne	15510 <__assert_fail@plt+0x3a30>
   15540:	b	15504 <__assert_fail@plt+0x3a24>
   15544:	add	r0, r0, #1
   15548:	mvn	fp, #0
   1554c:	mvn	r3, fp, lsl r0
   15550:	str	r3, [sp, #16]
   15554:	b	15538 <__assert_fail@plt+0x3a58>
   15558:	add	r4, sp, #52	; 0x34
   1555c:	add	r3, sp, #152	; 0x98
   15560:	mov	r0, r4
   15564:	movw	r2, #65324	; 0xff2c
   15568:	movt	r2, #1
   1556c:	mov	r1, #100	; 0x64
   15570:	bl	11924 <snprintf@plt>
   15574:	b	1540c <__assert_fail@plt+0x392c>
   15578:	cmp	r2, #42	; 0x2a
   1557c:	movne	fp, r7
   15580:	movne	r6, sl
   15584:	bne	151e8 <__assert_fail@plt+0x3708>
   15588:	mov	r6, #255	; 0xff
   1558c:	str	sl, [sp, #16]
   15590:	b	1529c <__assert_fail@plt+0x37bc>
   15594:	mov	r2, #10
   15598:	mov	r1, #0
   1559c:	mov	r0, fp
   155a0:	bl	11660 <strtol@plt>
   155a4:	b	15244 <__assert_fail@plt+0x3764>
   155a8:	mov	r2, #0
   155ac:	strb	r2, [sl]
   155b0:	b	1518c <__assert_fail@plt+0x36ac>
   155b4:	cmp	r9, #9
   155b8:	cmpne	r9, #32
   155bc:	mov	fp, r9
   155c0:	bne	155d4 <__assert_fail@plt+0x3af4>
   155c4:	ldrb	fp, [r4, #1]!
   155c8:	cmp	fp, #32
   155cc:	cmpne	fp, #9
   155d0:	beq	155c4 <__assert_fail@plt+0x3ae4>
   155d4:	cmp	fp, #45	; 0x2d
   155d8:	bne	155f4 <__assert_fail@plt+0x3b14>
   155dc:	ldr	r2, [sp, #12]
   155e0:	add	r4, r4, #1
   155e4:	ldr	r3, [r2, #460]	; 0x1cc
   155e8:	orr	r3, r3, #1
   155ec:	str	r3, [r2, #460]	; 0x1cc
   155f0:	ldrb	fp, [r4]
   155f4:	cmp	fp, #0
   155f8:	beq	1583c <__assert_fail@plt+0x3d5c>
   155fc:	cmp	fp, #47	; 0x2f
   15600:	beq	157d8 <__assert_fail@plt+0x3cf8>
   15604:	bls	15698 <__assert_fail@plt+0x3bb8>
   15608:	cmp	fp, #64	; 0x40
   1560c:	beq	158b8 <__assert_fail@plt+0x3dd8>
   15610:	cmp	fp, #124	; 0x7c
   15614:	bne	156bc <__assert_fail@plt+0x3bdc>
   15618:	mov	r0, r4
   1561c:	add	r4, r4, #1
   15620:	bl	11774 <strdup@plt>
   15624:	ldr	r6, [sp, #12]
   15628:	movw	r1, #2050	; 0x802
   1562c:	str	r0, [r6, #40]	; 0x28
   15630:	mov	r0, r4
   15634:	bl	1184c <open64@plt>
   15638:	sxth	r5, r0
   1563c:	cmp	r5, #0
   15640:	strh	r5, [r6, #6]
   15644:	blt	159d4 <__assert_fail@plt+0x3ef4>
   15648:	mov	r0, r4
   1564c:	ldr	r1, [pc, #1140]	; 15ac8 <__assert_fail@plt+0x3fe8>
   15650:	bl	11654 <strcmp@plt>
   15654:	cmp	r0, #0
   15658:	bne	159ac <__assert_fail@plt+0x3ecc>
   1565c:	ldr	r2, [sp, #12]
   15660:	mov	r3, #3
   15664:	strh	r3, [r2, #4]
   15668:	ldr	r3, [sp, #44]	; 0x2c
   1566c:	ldr	r4, [r3]
   15670:	cmp	r4, #0
   15674:	beq	156b0 <__assert_fail@plt+0x3bd0>
   15678:	mov	r0, r4
   1567c:	bl	11774 <strdup@plt>
   15680:	ldr	r5, [sp, #12]
   15684:	str	r0, [r5, #436]	; 0x1b4
   15688:	mov	r0, r4
   1568c:	bl	118e8 <strlen@plt>
   15690:	str	r0, [r5, #440]	; 0x1b8
   15694:	b	15444 <__assert_fail@plt+0x3964>
   15698:	cmp	fp, #42	; 0x2a
   1569c:	bne	156bc <__assert_fail@plt+0x3bdc>
   156a0:	ldr	r2, [sp, #12]
   156a4:	mov	r3, #6
   156a8:	strh	r3, [r2, #4]
   156ac:	b	15668 <__assert_fail@plt+0x3b88>
   156b0:	ldr	r3, [sp, #12]
   156b4:	str	r4, [r3, #436]	; 0x1b4
   156b8:	b	15444 <__assert_fail@plt+0x3964>
   156bc:	ldr	r2, [sp, #12]
   156c0:	mov	r3, #1
   156c4:	str	r3, [r2, #40]	; 0x28
   156c8:	ldrb	r2, [r4]
   156cc:	cmp	r2, #0
   156d0:	beq	159cc <__assert_fail@plt+0x3eec>
   156d4:	mov	r1, r4
   156d8:	cmp	r2, #44	; 0x2c
   156dc:	beq	156f0 <__assert_fail@plt+0x3c10>
   156e0:	ldrb	r2, [r1, #1]!
   156e4:	cmp	r2, #0
   156e8:	bne	156d8 <__assert_fail@plt+0x3bf8>
   156ec:	b	15708 <__assert_fail@plt+0x3c28>
   156f0:	ldr	r2, [sp, #12]
   156f4:	add	r3, r3, #1
   156f8:	str	r3, [r2, #40]	; 0x28
   156fc:	ldrb	r2, [r1, #1]!
   15700:	cmp	r2, #0
   15704:	bne	156d8 <__assert_fail@plt+0x3bf8>
   15708:	lsl	r0, r3, #2
   1570c:	bl	1e144 <argp_parse@@Base+0x285c>
   15710:	ldr	r3, [sp, #12]
   15714:	mov	r9, r0
   15718:	str	r0, [r3, #44]	; 0x2c
   1571c:	ldrb	r3, [r4]
   15720:	cmp	r3, #0
   15724:	beq	157c8 <__assert_fail@plt+0x3ce8>
   15728:	ldr	sl, [sp, #12]
   1572c:	mov	r6, #0
   15730:	mov	r7, r6
   15734:	cmp	r3, #44	; 0x2c
   15738:	mov	r5, r4
   1573c:	moveq	r0, #1
   15740:	moveq	r8, #0
   15744:	beq	15760 <__assert_fail@plt+0x3c80>
   15748:	ldrb	r3, [r5, #1]!
   1574c:	cmp	r3, #0
   15750:	cmpne	r3, #44	; 0x2c
   15754:	bne	15748 <__assert_fail@plt+0x3c68>
   15758:	sub	r8, r5, r4
   1575c:	add	r0, r8, #1
   15760:	bl	1e144 <argp_parse@@Base+0x285c>
   15764:	str	r0, [r9, r6]
   15768:	ldr	r3, [sl, #44]	; 0x2c
   1576c:	ldr	r0, [r3, r6]
   15770:	cmp	r0, #0
   15774:	beq	15790 <__assert_fail@plt+0x3cb0>
   15778:	mov	r1, r4
   1577c:	mov	r2, r8
   15780:	bl	11960 <strncpy@plt>
   15784:	ldr	r3, [sl, #44]	; 0x2c
   15788:	ldr	r3, [r3, r6]
   1578c:	strb	r7, [r3, r8]
   15790:	ldrb	r3, [r5]
   15794:	cmp	r3, #44	; 0x2c
   15798:	cmpne	r3, #32
   1579c:	bne	157b0 <__assert_fail@plt+0x3cd0>
   157a0:	ldrb	r3, [r5, #1]!
   157a4:	cmp	r3, #32
   157a8:	cmpne	r3, #44	; 0x2c
   157ac:	beq	157a0 <__assert_fail@plt+0x3cc0>
   157b0:	cmp	r3, #0
   157b4:	add	r6, r6, #4
   157b8:	beq	157c8 <__assert_fail@plt+0x3ce8>
   157bc:	mov	r4, r5
   157c0:	ldr	r9, [sl, #44]	; 0x2c
   157c4:	b	15734 <__assert_fail@plt+0x3c54>
   157c8:	ldr	r2, [sp, #12]
   157cc:	mov	r3, #5
   157d0:	strh	r3, [r2, #4]
   157d4:	b	15668 <__assert_fail@plt+0x3b88>
   157d8:	mov	r0, r4
   157dc:	bl	11774 <strdup@plt>
   157e0:	ldr	r6, [sp, #12]
   157e4:	mov	r2, #420	; 0x1a4
   157e8:	movw	r1, #1089	; 0x441
   157ec:	str	r0, [r6, #40]	; 0x28
   157f0:	mov	r0, r4
   157f4:	bl	1184c <open64@plt>
   157f8:	sxth	r5, r0
   157fc:	cmp	r5, #0
   15800:	strh	r5, [r6, #6]
   15804:	blt	159d4 <__assert_fail@plt+0x3ef4>
   15808:	mov	r0, r4
   1580c:	ldr	r1, [pc, #692]	; 15ac8 <__assert_fail@plt+0x3fe8>
   15810:	bl	11654 <strcmp@plt>
   15814:	cmp	r0, #0
   15818:	beq	1565c <__assert_fail@plt+0x3b7c>
   1581c:	mov	r0, r5
   15820:	bl	11a98 <isatty@plt>
   15824:	cmp	r0, #0
   15828:	bne	1599c <__assert_fail@plt+0x3ebc>
   1582c:	ldr	r2, [sp, #12]
   15830:	mov	r3, #1
   15834:	strh	r3, [r2, #4]
   15838:	b	15668 <__assert_fail@plt+0x3b88>
   1583c:	ldr	r3, [sp, #20]
   15840:	add	r5, sp, #152	; 0x98
   15844:	ldr	r0, [r3]
   15848:	ldr	r3, [sp, #12]
   1584c:	cmp	r0, #0
   15850:	strh	fp, [r3, #4]
   15854:	beq	1597c <__assert_fail@plt+0x3e9c>
   15858:	bl	11888 <strerror@plt>
   1585c:	movw	r3, #780	; 0x30c
   15860:	movt	r3, #2
   15864:	str	r0, [sp]
   15868:	movw	r2, #65308	; 0xff1c
   1586c:	movt	r2, #1
   15870:	mov	r1, #100	; 0x64
   15874:	mov	r0, r5
   15878:	bl	11924 <snprintf@plt>
   1587c:	ldr	r2, [sp, #20]
   15880:	mov	r3, #0
   15884:	mov	r1, r5
   15888:	movw	r0, #5456	; 0x1550
   1588c:	movt	r0, #2
   15890:	str	r3, [r2]
   15894:	bl	12d40 <__assert_fail@plt+0x1260>
   15898:	movw	r2, #11320	; 0x2c38
   1589c:	movt	r2, #3
   158a0:	mov	r1, r5
   158a4:	mov	r3, #4
   158a8:	ldr	r2, [r2]
   158ac:	mov	r0, #43	; 0x2b
   158b0:	bl	14238 <__assert_fail@plt+0x2758>
   158b4:	b	15444 <__assert_fail@plt+0x3964>
   158b8:	add	r4, r4, #1
   158bc:	add	r5, sp, #160	; 0xa0
   158c0:	mov	r0, r4
   158c4:	mov	r6, #0
   158c8:	bl	11774 <strdup@plt>
   158cc:	movw	r3, #8620	; 0x21ac
   158d0:	movt	r3, #3
   158d4:	ldr	r2, [sp, #12]
   158d8:	ldr	r1, [r3, #4]
   158dc:	mov	r3, #0
   158e0:	str	r0, [r2, #40]	; 0x28
   158e4:	mov	r2, #0
   158e8:	mov	r0, #2
   158ec:	cmp	r1, #0
   158f0:	strd	r2, [r5, #-8]
   158f4:	strd	r2, [r5], #-8
   158f8:	strd	r2, [r5, #16]
   158fc:	strd	r2, [r5, #24]
   15900:	moveq	r3, #32
   15904:	mov	r2, #128	; 0x80
   15908:	str	r1, [sp, #156]	; 0x9c
   1590c:	mov	r1, r6
   15910:	streq	r3, [sp, #152]	; 0x98
   15914:	ldr	r3, [sp, #12]
   15918:	str	r0, [sp, #160]	; 0xa0
   1591c:	add	r7, r3, #44	; 0x2c
   15920:	str	r6, [r3, #172]	; 0xac
   15924:	mov	r0, r7
   15928:	bl	11954 <memset@plt>
   1592c:	movw	r3, #9676	; 0x25cc
   15930:	movt	r3, #3
   15934:	mov	r2, r5
   15938:	mov	r0, r4
   1593c:	ldr	r1, [r3, #44]	; 0x2c
   15940:	add	r3, sp, #52	; 0x34
   15944:	bl	11a68 <getaddrinfo@plt>
   15948:	cmp	r0, #0
   1594c:	beq	15a78 <__assert_fail@plt+0x3f98>
   15950:	cmn	r0, #10
   15954:	beq	15a60 <__assert_fail@plt+0x3f80>
   15958:	cmn	r0, #3
   1595c:	beq	15a60 <__assert_fail@plt+0x3f80>
   15960:	ldr	r3, [sp, #12]
   15964:	strh	r6, [r3, #4]
   15968:	mov	r0, #0
   1596c:	bl	1172c <time@plt>
   15970:	ldr	r3, [sp, #12]
   15974:	str	r0, [r3, #8]
   15978:	b	15668 <__assert_fail@plt+0x3b88>
   1597c:	movw	r3, #780	; 0x30c
   15980:	movt	r3, #2
   15984:	mov	r0, r5
   15988:	movw	r2, #65324	; 0xff2c
   1598c:	movt	r2, #1
   15990:	mov	r1, #100	; 0x64
   15994:	bl	11924 <snprintf@plt>
   15998:	b	1587c <__assert_fail@plt+0x3d9c>
   1599c:	ldr	r2, [sp, #12]
   159a0:	mov	r3, #2
   159a4:	strh	r3, [r2, #4]
   159a8:	b	15668 <__assert_fail@plt+0x3b88>
   159ac:	mov	r0, r5
   159b0:	bl	11a98 <isatty@plt>
   159b4:	cmp	r0, #0
   159b8:	bne	1599c <__assert_fail@plt+0x3ebc>
   159bc:	ldr	r2, [sp, #12]
   159c0:	mov	r3, #9
   159c4:	strh	r3, [r2, #4]
   159c8:	b	15668 <__assert_fail@plt+0x3b88>
   159cc:	mov	r0, #4
   159d0:	b	1570c <__assert_fail@plt+0x3c2c>
   159d4:	ldr	r2, [sp, #12]
   159d8:	add	r5, sp, #152	; 0x98
   159dc:	ldr	r3, [sp, #20]
   159e0:	ldr	r0, [r3]
   159e4:	mov	r3, #0
   159e8:	strh	r3, [r2, #4]
   159ec:	cmp	r0, r3
   159f0:	beq	15aac <__assert_fail@plt+0x3fcc>
   159f4:	bl	11888 <strerror@plt>
   159f8:	movw	r2, #65308	; 0xff1c
   159fc:	movt	r2, #1
   15a00:	str	r0, [sp]
   15a04:	mov	r3, r4
   15a08:	mov	r1, #100	; 0x64
   15a0c:	mov	r0, r5
   15a10:	bl	11924 <snprintf@plt>
   15a14:	ldr	r3, [sp, #20]
   15a18:	mov	r4, #0
   15a1c:	mov	r1, r5
   15a20:	movw	r0, #5456	; 0x1550
   15a24:	movt	r0, #2
   15a28:	str	r4, [r3]
   15a2c:	bl	12d40 <__assert_fail@plt+0x1260>
   15a30:	movw	r2, #11320	; 0x2c38
   15a34:	movt	r2, #3
   15a38:	mov	r1, r5
   15a3c:	mov	r3, #4
   15a40:	ldr	r2, [r2]
   15a44:	mov	r0, #43	; 0x2b
   15a48:	bl	14238 <__assert_fail@plt+0x2758>
   15a4c:	ldr	r5, [sp, #12]
   15a50:	ldr	r0, [r5, #40]	; 0x28
   15a54:	bl	1cb08 <argp_parse@@Base+0x1220>
   15a58:	str	r4, [r5, #40]	; 0x28
   15a5c:	b	15668 <__assert_fail@plt+0x3b88>
   15a60:	ldr	r1, [sp, #12]
   15a64:	mov	r2, #8
   15a68:	mov	r3, #10
   15a6c:	strh	r2, [r1, #4]
   15a70:	str	r3, [r1, #452]	; 0x1c4
   15a74:	b	15968 <__assert_fail@plt+0x3e88>
   15a78:	ldr	ip, [sp, #12]
   15a7c:	mov	r3, #4
   15a80:	mov	r0, r7
   15a84:	ldr	r4, [sp, #52]	; 0x34
   15a88:	ldr	r1, [r4, #20]
   15a8c:	strh	r3, [ip, #4]
   15a90:	ldr	r3, [r4, #16]
   15a94:	mov	r2, r3
   15a98:	str	r3, [ip, #172]	; 0xac
   15a9c:	bl	11714 <memcpy@plt>
   15aa0:	mov	r0, r4
   15aa4:	bl	11a5c <freeaddrinfo@plt>
   15aa8:	b	15668 <__assert_fail@plt+0x3b88>
   15aac:	mov	r3, r4
   15ab0:	mov	r0, r5
   15ab4:	movw	r2, #65324	; 0xff2c
   15ab8:	movt	r2, #1
   15abc:	mov	r1, #100	; 0x64
   15ac0:	bl	11924 <snprintf@plt>
   15ac4:	b	15a14 <__assert_fail@plt+0x3f34>
   15ac8:	andeq	r2, r3, r4, lsl r3
   15acc:	movw	r1, #4528	; 0x11b0
   15ad0:	movt	r1, #2
   15ad4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15ad8:	strd	r6, [sp, #8]
   15adc:	mov	r4, r0
   15ae0:	strd	r8, [sp, #16]
   15ae4:	strd	sl, [sp, #24]
   15ae8:	str	lr, [sp, #32]
   15aec:	sub	sp, sp, #12
   15af0:	bl	11a38 <fopen64@plt>
   15af4:	subs	r9, r0, #0
   15af8:	beq	15df4 <__assert_fail@plt+0x4314>
   15afc:	mov	r0, #2048	; 0x800
   15b00:	bl	1e144 <argp_parse@@Base+0x285c>
   15b04:	subs	fp, r0, #0
   15b08:	beq	15e30 <__assert_fail@plt+0x4350>
   15b0c:	movw	sl, #11328	; 0x2c40
   15b10:	movt	sl, #3
   15b14:	movw	r3, #932	; 0x3a4
   15b18:	movt	r3, #2
   15b1c:	ldr	r0, [sl]
   15b20:	mov	r5, fp
   15b24:	mov	r7, #2048	; 0x800
   15b28:	str	r3, [sp, #4]
   15b2c:	bl	1cb08 <argp_parse@@Base+0x1220>
   15b30:	mov	r2, #0
   15b34:	movw	r3, #10824	; 0x2a48
   15b38:	movt	r3, #3
   15b3c:	mov	r4, r2
   15b40:	str	r2, [sl]
   15b44:	str	r3, [sp]
   15b48:	sub	r6, fp, r5
   15b4c:	mov	r2, r9
   15b50:	sub	r1, r7, r6
   15b54:	mov	r0, fp
   15b58:	bl	116f0 <fgets@plt>
   15b5c:	cmp	r0, #0
   15b60:	beq	15ddc <__assert_fail@plt+0x42fc>
   15b64:	mov	r0, fp
   15b68:	bl	118e8 <strlen@plt>
   15b6c:	cmp	r4, #0
   15b70:	mov	r8, r0
   15b74:	bne	15c10 <__assert_fail@plt+0x4130>
   15b78:	mov	r0, fp
   15b7c:	mov	r1, #10
   15b80:	bl	11900 <strchr@plt>
   15b84:	subs	r4, r0, #0
   15b88:	beq	15be4 <__assert_fail@plt+0x4104>
   15b8c:	bl	118c4 <__ctype_b_loc@plt>
   15b90:	ldrb	r4, [r5]
   15b94:	mov	r8, r0
   15b98:	mov	r6, r5
   15b9c:	ldr	r2, [r0]
   15ba0:	lsl	r3, r4, #1
   15ba4:	ldrh	r3, [r2, r3]
   15ba8:	tst	r3, #8192	; 0x2000
   15bac:	beq	15bc4 <__assert_fail@plt+0x40e4>
   15bb0:	ldrb	r4, [r6, #1]!
   15bb4:	lsl	r3, r4, #1
   15bb8:	ldrh	r3, [r2, r3]
   15bbc:	tst	r3, #8192	; 0x2000
   15bc0:	bne	15bb0 <__assert_fail@plt+0x40d0>
   15bc4:	cmp	r4, #33	; 0x21
   15bc8:	beq	15cf4 <__assert_fail@plt+0x4214>
   15bcc:	cmp	r4, #35	; 0x23
   15bd0:	beq	15c4c <__assert_fail@plt+0x416c>
   15bd4:	cmp	r4, #0
   15bd8:	bne	15c64 <__assert_fail@plt+0x4184>
   15bdc:	mov	fp, r5
   15be0:	b	15b48 <__assert_fail@plt+0x4068>
   15be4:	lsl	r7, r7, #1
   15be8:	mov	r0, r5
   15bec:	mov	r1, r7
   15bf0:	bl	1e180 <argp_parse@@Base+0x2898>
   15bf4:	subs	r3, r0, #0
   15bf8:	beq	15d98 <__assert_fail@plt+0x42b8>
   15bfc:	sub	r6, r6, #1
   15c00:	mov	r5, r3
   15c04:	add	r8, r6, r8
   15c08:	add	fp, r3, r8
   15c0c:	b	15b48 <__assert_fail@plt+0x4068>
   15c10:	ldrb	r2, [fp]
   15c14:	mov	r1, fp
   15c18:	cmp	r2, #32
   15c1c:	cmpne	r2, #9
   15c20:	bne	15c3c <__assert_fail@plt+0x415c>
   15c24:	ldrb	r2, [r1, #1]!
   15c28:	cmp	r2, #9
   15c2c:	cmpne	r2, #32
   15c30:	beq	15c24 <__assert_fail@plt+0x4144>
   15c34:	sub	r2, r1, fp
   15c38:	sub	r8, r8, r2
   15c3c:	add	r2, r8, #1
   15c40:	mov	r0, fp
   15c44:	bl	116c0 <memmove@plt>
   15c48:	b	15b78 <__assert_fail@plt+0x4098>
   15c4c:	ldrb	r3, [r6, #1]
   15c50:	cmp	r3, #33	; 0x21
   15c54:	beq	15d04 <__assert_fail@plt+0x4224>
   15c58:	mov	fp, r5
   15c5c:	mov	r4, #0
   15c60:	b	15b48 <__assert_fail@plt+0x4068>
   15c64:	mov	r0, r6
   15c68:	bl	118e8 <strlen@plt>
   15c6c:	add	r2, r0, #1
   15c70:	mov	r1, r6
   15c74:	mov	r0, r5
   15c78:	bl	116c0 <memmove@plt>
   15c7c:	mov	r0, r5
   15c80:	bl	118e8 <strlen@plt>
   15c84:	add	r2, r5, r0
   15c88:	ldr	ip, [r8]
   15c8c:	b	15c94 <__assert_fail@plt+0x41b4>
   15c90:	mov	r2, fp
   15c94:	ldrb	r1, [r2, #-1]
   15c98:	sub	fp, r2, #1
   15c9c:	lsl	r0, r1, #1
   15ca0:	ldrh	r4, [ip, r0]
   15ca4:	ands	r4, r4, #8192	; 0x2000
   15ca8:	bne	15c90 <__assert_fail@plt+0x41b0>
   15cac:	cmp	r1, #92	; 0x5c
   15cb0:	strbeq	r4, [fp]
   15cb4:	moveq	r4, #1
   15cb8:	beq	15b48 <__assert_fail@plt+0x4068>
   15cbc:	mov	r1, #464	; 0x1d0
   15cc0:	mov	r0, #1
   15cc4:	strb	r4, [r2]
   15cc8:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   15ccc:	mov	r6, r0
   15cd0:	mov	r1, r0
   15cd4:	mov	r0, r5
   15cd8:	mov	fp, r5
   15cdc:	bl	15010 <__assert_fail@plt+0x3530>
   15ce0:	ldr	r3, [sp]
   15ce4:	ldr	r2, [r3]
   15ce8:	str	r6, [r3]
   15cec:	str	r2, [r6]
   15cf0:	b	15b48 <__assert_fail@plt+0x4068>
   15cf4:	ldrb	r4, [r6, #1]
   15cf8:	add	r8, r6, #1
   15cfc:	cmp	r4, #33	; 0x21
   15d00:	bne	15d20 <__assert_fail@plt+0x4240>
   15d04:	ldrb	r4, [r6, #2]
   15d08:	add	r8, r6, #2
   15d0c:	lsl	r3, r4, #1
   15d10:	ldrh	r3, [r2, r3]
   15d14:	tst	r3, #8192	; 0x2000
   15d18:	beq	15d30 <__assert_fail@plt+0x4250>
   15d1c:	ldrb	r4, [r8, #1]!
   15d20:	lsl	r3, r4, #1
   15d24:	ldrh	r3, [r2, r3]
   15d28:	tst	r3, #8192	; 0x2000
   15d2c:	bne	15d1c <__assert_fail@plt+0x423c>
   15d30:	cmp	r4, #0
   15d34:	beq	15bdc <__assert_fail@plt+0x40fc>
   15d38:	mov	r4, #0
   15d3c:	ldr	r0, [sl]
   15d40:	bl	1cb08 <argp_parse@@Base+0x1220>
   15d44:	str	r4, [sl]
   15d48:	ldrb	r3, [r8]
   15d4c:	cmp	r3, #42	; 0x2a
   15d50:	beq	15bdc <__assert_fail@plt+0x40fc>
   15d54:	mov	r1, #44	; 0x2c
   15d58:	mov	r0, r8
   15d5c:	bl	11900 <strchr@plt>
   15d60:	cmp	r0, #0
   15d64:	ldr	r1, [sp, #4]
   15d68:	mov	fp, r5
   15d6c:	strbne	r4, [r0]
   15d70:	mov	r0, r8
   15d74:	mov	r4, #0
   15d78:	bl	11a50 <strpbrk@plt>
   15d7c:	cmp	r0, #0
   15d80:	movne	r3, #0
   15d84:	strbne	r3, [r0]
   15d88:	mov	r0, r8
   15d8c:	bl	11774 <strdup@plt>
   15d90:	str	r0, [sl]
   15d94:	b	15b48 <__assert_fail@plt+0x4068>
   15d98:	movw	r0, #892	; 0x37c
   15d9c:	movt	r0, #2
   15da0:	str	r3, [sp]
   15da4:	bl	12d40 <__assert_fail@plt+0x1260>
   15da8:	mov	r0, r9
   15dac:	bl	11990 <fclose@plt>
   15db0:	mov	r0, r5
   15db4:	bl	1cb08 <argp_parse@@Base+0x1220>
   15db8:	ldr	r3, [sp]
   15dbc:	mov	r0, r3
   15dc0:	add	sp, sp, #12
   15dc4:	ldrd	r4, [sp]
   15dc8:	ldrd	r6, [sp, #8]
   15dcc:	ldrd	r8, [sp, #16]
   15dd0:	ldrd	sl, [sp, #24]
   15dd4:	add	sp, sp, #32
   15dd8:	pop	{pc}		; (ldr pc, [sp], #4)
   15ddc:	mov	r0, r9
   15de0:	bl	11990 <fclose@plt>
   15de4:	mov	r0, r5
   15de8:	bl	1cb08 <argp_parse@@Base+0x1220>
   15dec:	mov	r0, #1
   15df0:	b	15dc0 <__assert_fail@plt+0x42e0>
   15df4:	mov	r1, r4
   15df8:	movw	r0, #800	; 0x320
   15dfc:	movt	r0, #2
   15e00:	movw	r4, #10824	; 0x2a48
   15e04:	movt	r4, #3
   15e08:	bl	12d40 <__assert_fail@plt+0x1260>
   15e0c:	ldr	r3, [r4]
   15e10:	cmp	r3, #0
   15e14:	beq	15e4c <__assert_fail@plt+0x436c>
   15e18:	mov	r2, #1
   15e1c:	movw	r3, #11312	; 0x2c30
   15e20:	movt	r3, #3
   15e24:	mov	r0, r2
   15e28:	str	r2, [r3]
   15e2c:	b	15dc0 <__assert_fail@plt+0x42e0>
   15e30:	movw	r0, #848	; 0x350
   15e34:	movt	r0, #2
   15e38:	bl	12d40 <__assert_fail@plt+0x1260>
   15e3c:	mov	r0, r9
   15e40:	bl	11990 <fclose@plt>
   15e44:	mov	r0, fp
   15e48:	b	15dc0 <__assert_fail@plt+0x42e0>
   15e4c:	mov	r1, #464	; 0x1d0
   15e50:	mov	r0, #1
   15e54:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   15e58:	mov	r5, r0
   15e5c:	mov	r1, r0
   15e60:	movw	r0, #816	; 0x330
   15e64:	movt	r0, #2
   15e68:	bl	15010 <__assert_fail@plt+0x3530>
   15e6c:	mov	r1, #464	; 0x1d0
   15e70:	mov	r0, #1
   15e74:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   15e78:	mov	r3, r0
   15e7c:	movw	r0, #836	; 0x344
   15e80:	movt	r0, #2
   15e84:	mov	r1, r3
   15e88:	str	r3, [r5]
   15e8c:	bl	15010 <__assert_fail@plt+0x3530>
   15e90:	str	r5, [r4]
   15e94:	b	15e18 <__assert_fail@plt+0x4338>
   15e98:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15e9c:	strd	r6, [sp, #8]
   15ea0:	mov	r6, r0
   15ea4:	strd	r8, [sp, #16]
   15ea8:	str	lr, [sp, #24]
   15eac:	sub	sp, sp, #116	; 0x74
   15eb0:	bl	11840 <opendir@plt>
   15eb4:	subs	r5, r0, #0
   15eb8:	beq	15f9c <__assert_fail@plt+0x44bc>
   15ebc:	mov	r8, #0
   15ec0:	movw	r4, #940	; 0x3ac
   15ec4:	movt	r4, #2
   15ec8:	movw	r9, #1000	; 0x3e8
   15ecc:	movt	r9, #2
   15ed0:	mov	r7, r8
   15ed4:	mov	r0, r5
   15ed8:	bl	11a14 <readdir64@plt>
   15edc:	subs	r3, r0, #0
   15ee0:	mov	r2, r6
   15ee4:	mov	r1, r4
   15ee8:	add	r0, sp, #4
   15eec:	add	r3, r3, #19
   15ef0:	beq	15f5c <__assert_fail@plt+0x447c>
   15ef4:	bl	1196c <asprintf@plt>
   15ef8:	cmp	r0, #0
   15efc:	add	r2, sp, #8
   15f00:	mov	r0, #3
   15f04:	blt	15f88 <__assert_fail@plt+0x44a8>
   15f08:	ldr	r1, [sp, #4]
   15f0c:	bl	11a8c <__xstat64@plt>
   15f10:	cmp	r0, #0
   15f14:	bne	15f38 <__assert_fail@plt+0x4458>
   15f18:	ldr	r2, [sp, #4]
   15f1c:	ldr	r3, [sp, #24]
   15f20:	and	r3, r3, #61440	; 0xf000
   15f24:	cmp	r3, #32768	; 0x8000
   15f28:	beq	15f44 <__assert_fail@plt+0x4464>
   15f2c:	mov	r0, r2
   15f30:	bl	1cb08 <argp_parse@@Base+0x1220>
   15f34:	b	15ed4 <__assert_fail@plt+0x43f4>
   15f38:	mov	r0, r9
   15f3c:	bl	12d40 <__assert_fail@plt+0x1260>
   15f40:	b	15ed4 <__assert_fail@plt+0x43f4>
   15f44:	mov	r0, r2
   15f48:	add	r8, r8, #1
   15f4c:	bl	15acc <__assert_fail@plt+0x3fec>
   15f50:	add	r7, r7, r0
   15f54:	ldr	r2, [sp, #4]
   15f58:	b	15f2c <__assert_fail@plt+0x444c>
   15f5c:	mov	r0, r5
   15f60:	bl	11ad4 <closedir@plt>
   15f64:	cmp	r8, #0
   15f68:	moveq	r7, #1
   15f6c:	mov	r0, r7
   15f70:	add	sp, sp, #116	; 0x74
   15f74:	ldrd	r4, [sp]
   15f78:	ldrd	r6, [sp, #8]
   15f7c:	ldrd	r8, [sp, #16]
   15f80:	add	sp, sp, #24
   15f84:	pop	{pc}		; (ldr pc, [sp], #4)
   15f88:	movw	r0, #948	; 0x3b4
   15f8c:	movt	r0, #2
   15f90:	bl	12d40 <__assert_fail@plt+0x1260>
   15f94:	mov	r7, #0
   15f98:	b	15f6c <__assert_fail@plt+0x448c>
   15f9c:	mov	r1, r6
   15fa0:	movw	r0, #800	; 0x320
   15fa4:	movt	r0, #2
   15fa8:	mov	r7, #1
   15fac:	bl	12d40 <__assert_fail@plt+0x1260>
   15fb0:	b	15f6c <__assert_fail@plt+0x448c>
   15fb4:	movw	r0, #1040	; 0x410
   15fb8:	movt	r0, #2
   15fbc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15fc0:	strd	r6, [sp, #8]
   15fc4:	movw	r6, #10824	; 0x2a48
   15fc8:	movt	r6, #3
   15fcc:	strd	r8, [sp, #16]
   15fd0:	movw	r7, #11312	; 0x2c30
   15fd4:	movt	r7, #3
   15fd8:	strd	sl, [sp, #24]
   15fdc:	movw	r9, #11320	; 0x2c38
   15fe0:	movt	r9, #3
   15fe4:	str	lr, [sp, #32]
   15fe8:	sub	sp, sp, #12
   15fec:	bl	12d40 <__assert_fail@plt+0x1260>
   15ff0:	ldr	r4, [r6]
   15ff4:	mov	r3, #0
   15ff8:	str	r3, [r7]
   15ffc:	cmp	r4, r3
   16000:	beq	160ac <__assert_fail@plt+0x45cc>
   16004:	ldr	r3, [r4, #452]	; 0x1c4
   16008:	cmp	r3, #0
   1600c:	bne	16248 <__assert_fail@plt+0x4768>
   16010:	ldrsh	r3, [r4, #4]
   16014:	sub	r3, r3, #1
   16018:	cmp	r3, #8
   1601c:	ldrls	pc, [pc, r3, lsl #2]
   16020:	b	16088 <__assert_fail@plt+0x45a8>
   16024:	andeq	r6, r1, ip, lsr #3
   16028:	andeq	r6, r1, ip, lsr #3
   1602c:	andeq	r6, r1, ip, lsr #3
   16030:	andeq	r6, r1, r0, lsl #1
   16034:	andeq	r6, r1, r8, asr #32
   16038:	andeq	r6, r1, r8, lsl #1
   1603c:	andeq	r6, r1, r0, lsl #1
   16040:	andeq	r6, r1, r0, lsl #1
   16044:	andeq	r6, r1, ip, lsr #3
   16048:	ldr	r3, [r4, #40]	; 0x28
   1604c:	cmp	r3, #0
   16050:	movgt	r5, #0
   16054:	ble	16074 <__assert_fail@plt+0x4594>
   16058:	ldr	r3, [r4, #44]	; 0x2c
   1605c:	ldr	r0, [r3, r5, lsl #2]
   16060:	add	r5, r5, #1
   16064:	bl	1cb08 <argp_parse@@Base+0x1220>
   16068:	ldr	r3, [r4, #40]	; 0x28
   1606c:	cmp	r5, r3
   16070:	blt	16058 <__assert_fail@plt+0x4578>
   16074:	ldr	r0, [r4, #44]	; 0x2c
   16078:	bl	1cb08 <argp_parse@@Base+0x1220>
   1607c:	b	16088 <__assert_fail@plt+0x45a8>
   16080:	ldr	r0, [r4, #40]	; 0x28
   16084:	bl	1cb08 <argp_parse@@Base+0x1220>
   16088:	ldr	r0, [r4, #436]	; 0x1b4
   1608c:	bl	1cb08 <argp_parse@@Base+0x1220>
   16090:	ldr	r0, [r4, #432]	; 0x1b0
   16094:	bl	1cb08 <argp_parse@@Base+0x1220>
   16098:	ldr	r5, [r4]
   1609c:	mov	r0, r4
   160a0:	bl	1cb08 <argp_parse@@Base+0x1220>
   160a4:	subs	r4, r5, #0
   160a8:	bne	16004 <__assert_fail@plt+0x4524>
   160ac:	mov	r2, #0
   160b0:	movw	r3, #10820	; 0x2a44
   160b4:	movt	r3, #3
   160b8:	movw	r8, #8620	; 0x21ac
   160bc:	movt	r8, #3
   160c0:	str	r2, [r6]
   160c4:	ldr	r0, [r8, #16]
   160c8:	str	r2, [r3]
   160cc:	bl	15acc <__assert_fail@plt+0x3fec>
   160d0:	mov	r4, r0
   160d4:	ldr	r0, [r8, #20]
   160d8:	bl	15e98 <__assert_fail@plt+0x43b8>
   160dc:	movw	r3, #11300	; 0x2c24
   160e0:	movt	r3, #3
   160e4:	ldr	r3, [r3]
   160e8:	cmp	r0, #0
   160ec:	mov	r2, #1
   160f0:	moveq	r4, #0
   160f4:	str	r2, [r7]
   160f8:	str	r4, [sp, #4]
   160fc:	cmp	r3, #0
   16100:	beq	161e8 <__assert_fail@plt+0x4708>
   16104:	ldr	r7, [r6]
   16108:	cmp	r7, #0
   1610c:	beq	161e8 <__assert_fail@plt+0x4708>
   16110:	movw	r5, #1052	; 0x41c
   16114:	movt	r5, #2
   16118:	movw	r6, #1048	; 0x418
   1611c:	movt	r6, #2
   16120:	movw	sl, #1060	; 0x424
   16124:	movt	sl, #2
   16128:	add	fp, r7, #11
   1612c:	add	r4, r7, #36	; 0x24
   16130:	b	16144 <__assert_fail@plt+0x4664>
   16134:	mov	r0, r6
   16138:	bl	12d40 <__assert_fail@plt+0x1260>
   1613c:	cmp	r4, fp
   16140:	beq	16160 <__assert_fail@plt+0x4680>
   16144:	ldrb	r2, [fp, #1]!
   16148:	mov	r0, r5
   1614c:	subs	r1, r2, #0
   16150:	beq	16134 <__assert_fail@plt+0x4654>
   16154:	bl	12d40 <__assert_fail@plt+0x1260>
   16158:	cmp	r4, fp
   1615c:	bne	16144 <__assert_fail@plt+0x4664>
   16160:	ldrsh	r3, [r7, #4]
   16164:	mov	r0, sl
   16168:	add	r3, r8, r3, lsl #2
   1616c:	ldr	r1, [r3, #320]	; 0x140
   16170:	bl	12d40 <__assert_fail@plt+0x1260>
   16174:	ldrsh	r3, [r7, #4]
   16178:	sub	r3, r3, #1
   1617c:	cmp	r3, #8
   16180:	ldrls	pc, [pc, r3, lsl #2]
   16184:	b	161d0 <__assert_fail@plt+0x46f0>
   16188:	andeq	r6, r1, r0, asr #3
   1618c:	andeq	r6, r1, r0, asr #3
   16190:	andeq	r6, r1, r0, asr #3
   16194:	andeq	r6, r1, r0, asr #3
   16198:	muleq	r1, ip, r2
   1619c:	ldrdeq	r6, [r1], -r0
   161a0:	andeq	r6, r1, r0, asr #3
   161a4:	andeq	r6, r1, r0, asr #3
   161a8:	andeq	r6, r1, r0, asr #3
   161ac:	ldr	r0, [r4, #40]	; 0x28
   161b0:	bl	1cb08 <argp_parse@@Base+0x1220>
   161b4:	ldrsh	r0, [r4, #6]
   161b8:	bl	11ac8 <close@plt>
   161bc:	b	16088 <__assert_fail@plt+0x45a8>
   161c0:	movw	r0, #3824	; 0xef0
   161c4:	movt	r0, #2
   161c8:	ldr	r1, [r7, #40]	; 0x28
   161cc:	bl	12d40 <__assert_fail@plt+0x1260>
   161d0:	movw	r0, #65380	; 0xff64
   161d4:	movt	r0, #1
   161d8:	bl	12d40 <__assert_fail@plt+0x1260>
   161dc:	ldr	r7, [r7]
   161e0:	cmp	r7, #0
   161e4:	bne	16128 <__assert_fail@plt+0x4648>
   161e8:	movw	r3, #10816	; 0x2a40
   161ec:	movt	r3, #3
   161f0:	ldr	r2, [r9]
   161f4:	ldr	r3, [r3]
   161f8:	cmp	r3, #0
   161fc:	beq	16260 <__assert_fail@plt+0x4780>
   16200:	mov	r3, #4
   16204:	movw	r1, #1076	; 0x434
   16208:	movt	r1, #2
   1620c:	mov	r0, #46	; 0x2e
   16210:	bl	14238 <__assert_fail@plt+0x2758>
   16214:	ldr	r3, [sp, #4]
   16218:	cmp	r3, #0
   1621c:	beq	16280 <__assert_fail@plt+0x47a0>
   16220:	movw	r0, #1228	; 0x4cc
   16224:	movt	r0, #2
   16228:	add	sp, sp, #12
   1622c:	ldrd	r4, [sp]
   16230:	ldrd	r6, [sp, #8]
   16234:	ldrd	r8, [sp, #16]
   16238:	ldrd	sl, [sp, #24]
   1623c:	ldr	lr, [sp, #32]
   16240:	add	sp, sp, #36	; 0x24
   16244:	b	12d40 <__assert_fail@plt+0x1260>
   16248:	mov	r3, #0
   1624c:	mov	r0, r4
   16250:	ldr	r1, [r9]
   16254:	mov	r2, r3
   16258:	bl	139c0 <__assert_fail@plt+0x1ee0>
   1625c:	b	16010 <__assert_fail@plt+0x4530>
   16260:	mov	r3, #4
   16264:	movw	r1, #1144	; 0x478
   16268:	movt	r1, #2
   1626c:	mov	r0, #46	; 0x2e
   16270:	bl	14238 <__assert_fail@plt+0x2758>
   16274:	ldr	r3, [sp, #4]
   16278:	cmp	r3, #0
   1627c:	bne	16220 <__assert_fail@plt+0x4740>
   16280:	movw	r1, #1192	; 0x4a8
   16284:	movt	r1, #2
   16288:	ldr	r2, [r9]
   1628c:	mov	r3, #4
   16290:	mov	r0, #43	; 0x2b
   16294:	bl	14238 <__assert_fail@plt+0x2758>
   16298:	b	16220 <__assert_fail@plt+0x4740>
   1629c:	ldr	r3, [r7, #40]	; 0x28
   162a0:	cmp	r3, #0
   162a4:	movwgt	r4, #1068	; 0x42c
   162a8:	movgt	fp, #0
   162ac:	movtgt	r4, #2
   162b0:	ble	161d0 <__assert_fail@plt+0x46f0>
   162b4:	ldr	r2, [r7, #44]	; 0x2c
   162b8:	mov	r0, r4
   162bc:	ldr	r1, [r2, fp, lsl #2]
   162c0:	add	fp, fp, #1
   162c4:	bl	12d40 <__assert_fail@plt+0x1260>
   162c8:	ldr	r2, [r7, #40]	; 0x28
   162cc:	cmp	fp, r2
   162d0:	blt	162b4 <__assert_fail@plt+0x47d4>
   162d4:	b	161d0 <__assert_fail@plt+0x46f0>
   162d8:	movw	r0, #1040	; 0x410
   162dc:	movt	r0, #2
   162e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   162e4:	strd	r6, [sp, #8]
   162e8:	movw	r6, #10824	; 0x2a48
   162ec:	movt	r6, #3
   162f0:	strd	r8, [sp, #16]
   162f4:	movw	r7, #11312	; 0x2c30
   162f8:	movt	r7, #3
   162fc:	strd	sl, [sp, #24]
   16300:	movw	r9, #11320	; 0x2c38
   16304:	movt	r9, #3
   16308:	str	lr, [sp, #32]
   1630c:	sub	sp, sp, #12
   16310:	bl	12d40 <__assert_fail@plt+0x1260>
   16314:	ldr	r4, [r6]
   16318:	mov	r3, #0
   1631c:	str	r3, [r7]
   16320:	cmp	r4, r3
   16324:	beq	163d0 <__assert_fail@plt+0x48f0>
   16328:	ldr	r3, [r4, #452]	; 0x1c4
   1632c:	cmp	r3, #0
   16330:	bne	1656c <__assert_fail@plt+0x4a8c>
   16334:	ldrsh	r3, [r4, #4]
   16338:	sub	r3, r3, #1
   1633c:	cmp	r3, #8
   16340:	ldrls	pc, [pc, r3, lsl #2]
   16344:	b	163ac <__assert_fail@plt+0x48cc>
   16348:	ldrdeq	r6, [r1], -r0
   1634c:	ldrdeq	r6, [r1], -r0
   16350:	ldrdeq	r6, [r1], -r0
   16354:	andeq	r6, r1, r4, lsr #7
   16358:	andeq	r6, r1, ip, ror #6
   1635c:	andeq	r6, r1, ip, lsr #7
   16360:	andeq	r6, r1, r4, lsr #7
   16364:	andeq	r6, r1, r4, lsr #7
   16368:	ldrdeq	r6, [r1], -r0
   1636c:	ldr	r3, [r4, #40]	; 0x28
   16370:	cmp	r3, #0
   16374:	movgt	r5, #0
   16378:	ble	16398 <__assert_fail@plt+0x48b8>
   1637c:	ldr	r3, [r4, #44]	; 0x2c
   16380:	ldr	r0, [r3, r5, lsl #2]
   16384:	add	r5, r5, #1
   16388:	bl	1cb08 <argp_parse@@Base+0x1220>
   1638c:	ldr	r3, [r4, #40]	; 0x28
   16390:	cmp	r3, r5
   16394:	bgt	1637c <__assert_fail@plt+0x489c>
   16398:	ldr	r0, [r4, #44]	; 0x2c
   1639c:	bl	1cb08 <argp_parse@@Base+0x1220>
   163a0:	b	163ac <__assert_fail@plt+0x48cc>
   163a4:	ldr	r0, [r4, #40]	; 0x28
   163a8:	bl	1cb08 <argp_parse@@Base+0x1220>
   163ac:	ldr	r0, [r4, #436]	; 0x1b4
   163b0:	bl	1cb08 <argp_parse@@Base+0x1220>
   163b4:	ldr	r0, [r4, #432]	; 0x1b0
   163b8:	bl	1cb08 <argp_parse@@Base+0x1220>
   163bc:	ldr	r5, [r4]
   163c0:	mov	r0, r4
   163c4:	bl	1cb08 <argp_parse@@Base+0x1220>
   163c8:	subs	r4, r5, #0
   163cc:	bne	16328 <__assert_fail@plt+0x4848>
   163d0:	mov	r2, #0
   163d4:	movw	r3, #10820	; 0x2a44
   163d8:	movt	r3, #3
   163dc:	movw	r8, #8620	; 0x21ac
   163e0:	movt	r8, #3
   163e4:	str	r2, [r6]
   163e8:	ldr	r0, [r8, #16]
   163ec:	str	r2, [r3]
   163f0:	bl	15acc <__assert_fail@plt+0x3fec>
   163f4:	mov	r4, r0
   163f8:	ldr	r0, [r8, #20]
   163fc:	bl	15e98 <__assert_fail@plt+0x43b8>
   16400:	movw	r3, #11300	; 0x2c24
   16404:	movt	r3, #3
   16408:	ldr	r3, [r3]
   1640c:	cmp	r0, #0
   16410:	mov	r2, #1
   16414:	moveq	r4, #0
   16418:	str	r2, [r7]
   1641c:	str	r4, [sp, #4]
   16420:	cmp	r3, #0
   16424:	beq	1650c <__assert_fail@plt+0x4a2c>
   16428:	ldr	r7, [r6]
   1642c:	cmp	r7, #0
   16430:	beq	1650c <__assert_fail@plt+0x4a2c>
   16434:	movw	r5, #1052	; 0x41c
   16438:	movt	r5, #2
   1643c:	movw	r6, #1048	; 0x418
   16440:	movt	r6, #2
   16444:	movw	sl, #1060	; 0x424
   16448:	movt	sl, #2
   1644c:	add	fp, r7, #11
   16450:	add	r4, r7, #36	; 0x24
   16454:	b	16468 <__assert_fail@plt+0x4988>
   16458:	mov	r0, r6
   1645c:	bl	12d40 <__assert_fail@plt+0x1260>
   16460:	cmp	r4, fp
   16464:	beq	16484 <__assert_fail@plt+0x49a4>
   16468:	ldrb	r2, [fp, #1]!
   1646c:	mov	r0, r5
   16470:	subs	r1, r2, #0
   16474:	beq	16458 <__assert_fail@plt+0x4978>
   16478:	bl	12d40 <__assert_fail@plt+0x1260>
   1647c:	cmp	r4, fp
   16480:	bne	16468 <__assert_fail@plt+0x4988>
   16484:	ldrsh	r3, [r7, #4]
   16488:	mov	r0, sl
   1648c:	add	r3, r8, r3, lsl #2
   16490:	ldr	r1, [r3, #320]	; 0x140
   16494:	bl	12d40 <__assert_fail@plt+0x1260>
   16498:	ldrsh	r3, [r7, #4]
   1649c:	sub	r3, r3, #1
   164a0:	cmp	r3, #8
   164a4:	ldrls	pc, [pc, r3, lsl #2]
   164a8:	b	164f4 <__assert_fail@plt+0x4a14>
   164ac:	andeq	r6, r1, r4, ror #9
   164b0:	andeq	r6, r1, r4, ror #9
   164b4:	andeq	r6, r1, r4, ror #9
   164b8:	andeq	r6, r1, r4, ror #9
   164bc:	andeq	r6, r1, r0, asr #11
   164c0:	strdeq	r6, [r1], -r4
   164c4:	andeq	r6, r1, r4, ror #9
   164c8:	andeq	r6, r1, r4, ror #9
   164cc:	andeq	r6, r1, r4, ror #9
   164d0:	ldr	r0, [r4, #40]	; 0x28
   164d4:	bl	1cb08 <argp_parse@@Base+0x1220>
   164d8:	ldrsh	r0, [r4, #6]
   164dc:	bl	11ac8 <close@plt>
   164e0:	b	163ac <__assert_fail@plt+0x48cc>
   164e4:	movw	r0, #3824	; 0xef0
   164e8:	movt	r0, #2
   164ec:	ldr	r1, [r7, #40]	; 0x28
   164f0:	bl	12d40 <__assert_fail@plt+0x1260>
   164f4:	movw	r0, #65380	; 0xff64
   164f8:	movt	r0, #1
   164fc:	bl	12d40 <__assert_fail@plt+0x1260>
   16500:	ldr	r7, [r7]
   16504:	cmp	r7, #0
   16508:	bne	1644c <__assert_fail@plt+0x496c>
   1650c:	movw	r3, #10816	; 0x2a40
   16510:	movt	r3, #3
   16514:	ldr	r2, [r9]
   16518:	ldr	r3, [r3]
   1651c:	cmp	r3, #0
   16520:	beq	16584 <__assert_fail@plt+0x4aa4>
   16524:	mov	r3, #4
   16528:	movw	r1, #1076	; 0x434
   1652c:	movt	r1, #2
   16530:	mov	r0, #46	; 0x2e
   16534:	bl	14238 <__assert_fail@plt+0x2758>
   16538:	ldr	r3, [sp, #4]
   1653c:	cmp	r3, #0
   16540:	beq	165a4 <__assert_fail@plt+0x4ac4>
   16544:	movw	r0, #1228	; 0x4cc
   16548:	movt	r0, #2
   1654c:	add	sp, sp, #12
   16550:	ldrd	r4, [sp]
   16554:	ldrd	r6, [sp, #8]
   16558:	ldrd	r8, [sp, #16]
   1655c:	ldrd	sl, [sp, #24]
   16560:	ldr	lr, [sp, #32]
   16564:	add	sp, sp, #36	; 0x24
   16568:	b	12d40 <__assert_fail@plt+0x1260>
   1656c:	mov	r3, #0
   16570:	mov	r0, r4
   16574:	ldr	r1, [r9]
   16578:	mov	r2, r3
   1657c:	bl	139c0 <__assert_fail@plt+0x1ee0>
   16580:	b	16334 <__assert_fail@plt+0x4854>
   16584:	mov	r3, #4
   16588:	movw	r1, #1144	; 0x478
   1658c:	movt	r1, #2
   16590:	mov	r0, #46	; 0x2e
   16594:	bl	14238 <__assert_fail@plt+0x2758>
   16598:	ldr	r3, [sp, #4]
   1659c:	cmp	r3, #0
   165a0:	bne	16544 <__assert_fail@plt+0x4a64>
   165a4:	movw	r1, #1192	; 0x4a8
   165a8:	movt	r1, #2
   165ac:	ldr	r2, [r9]
   165b0:	mov	r3, #4
   165b4:	mov	r0, #43	; 0x2b
   165b8:	bl	14238 <__assert_fail@plt+0x2758>
   165bc:	b	16544 <__assert_fail@plt+0x4a64>
   165c0:	ldr	r3, [r7, #40]	; 0x28
   165c4:	cmp	r3, #0
   165c8:	movwgt	r4, #1068	; 0x42c
   165cc:	movgt	fp, #0
   165d0:	movtgt	r4, #2
   165d4:	ble	164f4 <__assert_fail@plt+0x4a14>
   165d8:	ldr	r2, [r7, #44]	; 0x2c
   165dc:	mov	r0, r4
   165e0:	ldr	r1, [r2, fp, lsl #2]
   165e4:	add	fp, fp, #1
   165e8:	bl	12d40 <__assert_fail@plt+0x1260>
   165ec:	ldr	r2, [r7, #40]	; 0x28
   165f0:	cmp	r2, fp
   165f4:	bgt	165d8 <__assert_fail@plt+0x4af8>
   165f8:	b	164f4 <__assert_fail@plt+0x4a14>
   165fc:	strd	r4, [sp, #-16]!
   16600:	mov	r5, r0
   16604:	mov	r4, r1
   16608:	str	r6, [sp, #8]
   1660c:	str	lr, [sp, #12]
   16610:	bl	118c4 <__ctype_b_loc@plt>
   16614:	ldrb	r3, [r5]
   16618:	ldr	r2, [r0]
   1661c:	lsl	r3, r3, #1
   16620:	ldrh	r3, [r2, r3]
   16624:	tst	r3, #2048	; 0x800
   16628:	bne	16680 <__assert_fail@plt+0x4ba0>
   1662c:	ldr	r1, [r4]
   16630:	cmp	r1, #0
   16634:	bne	16648 <__assert_fail@plt+0x4b68>
   16638:	b	1666c <__assert_fail@plt+0x4b8c>
   1663c:	ldr	r1, [r4, #8]!
   16640:	cmp	r1, #0
   16644:	beq	1666c <__assert_fail@plt+0x4b8c>
   16648:	mov	r0, r5
   1664c:	bl	117d4 <strcasecmp@plt>
   16650:	cmp	r0, #0
   16654:	bne	1663c <__assert_fail@plt+0x4b5c>
   16658:	ldr	r0, [r4, #4]
   1665c:	ldrd	r4, [sp]
   16660:	ldr	r6, [sp, #8]
   16664:	add	sp, sp, #12
   16668:	pop	{pc}		; (ldr pc, [sp], #4)
   1666c:	ldrd	r4, [sp]
   16670:	mvn	r0, #0
   16674:	ldr	r6, [sp, #8]
   16678:	add	sp, sp, #12
   1667c:	pop	{pc}		; (ldr pc, [sp], #4)
   16680:	mov	r0, r5
   16684:	mov	r2, #10
   16688:	ldrd	r4, [sp]
   1668c:	mov	r1, #0
   16690:	ldr	r6, [sp, #8]
   16694:	ldr	lr, [sp, #12]
   16698:	add	sp, sp, #16
   1669c:	b	11660 <strtol@plt>
   166a0:	movw	r3, #1248	; 0x4e0
   166a4:	movt	r3, #2
   166a8:	strd	r4, [sp, #-16]!
   166ac:	movw	r4, #9676	; 0x25cc
   166b0:	movt	r4, #3
   166b4:	str	r6, [sp, #8]
   166b8:	str	lr, [sp, #12]
   166bc:	sub	sp, sp, #40	; 0x28
   166c0:	mov	ip, #0
   166c4:	str	r3, [r4, #44]	; 0x2c
   166c8:	mov	r3, #2
   166cc:	mov	lr, #1
   166d0:	movw	r5, #1252	; 0x4e4
   166d4:	movt	r5, #2
   166d8:	mov	r1, r5
   166dc:	mov	r6, r0
   166e0:	str	lr, [sp, #8]
   166e4:	add	r2, sp, #8
   166e8:	mov	r0, ip
   166ec:	str	r3, [sp, #16]
   166f0:	add	r3, sp, #4
   166f4:	str	ip, [sp, #12]
   166f8:	str	ip, [sp, #20]
   166fc:	str	ip, [sp, #24]
   16700:	str	ip, [sp, #28]
   16704:	str	ip, [sp, #32]
   16708:	str	ip, [sp, #36]	; 0x24
   1670c:	bl	11a68 <getaddrinfo@plt>
   16710:	cmp	r0, #0
   16714:	beq	16790 <__assert_fail@plt+0x4cb0>
   16718:	cmp	r6, #0
   1671c:	str	r6, [r4, #48]	; 0x30
   16720:	beq	167a8 <__assert_fail@plt+0x4cc8>
   16724:	mov	r0, #1
   16728:	mov	r5, #0
   1672c:	mov	ip, #2
   16730:	add	r3, sp, #4
   16734:	add	r2, sp, #8
   16738:	mov	r1, r6
   1673c:	str	r0, [sp, #8]
   16740:	mov	r0, r5
   16744:	str	r5, [sp, #12]
   16748:	str	ip, [sp, #16]
   1674c:	str	r5, [sp, #20]
   16750:	str	r5, [sp, #24]
   16754:	str	r5, [sp, #28]
   16758:	str	r5, [sp, #32]
   1675c:	str	r5, [sp, #36]	; 0x24
   16760:	bl	11a68 <getaddrinfo@plt>
   16764:	cmp	r0, r5
   16768:	strne	r5, [r4, #48]	; 0x30
   1676c:	beq	16784 <__assert_fail@plt+0x4ca4>
   16770:	add	sp, sp, #40	; 0x28
   16774:	ldrd	r4, [sp]
   16778:	ldr	r6, [sp, #8]
   1677c:	add	sp, sp, #12
   16780:	pop	{pc}		; (ldr pc, [sp], #4)
   16784:	ldr	r0, [sp, #4]
   16788:	bl	11a5c <freeaddrinfo@plt>
   1678c:	b	16770 <__assert_fail@plt+0x4c90>
   16790:	ldr	r0, [sp, #4]
   16794:	str	r5, [r4, #44]	; 0x2c
   16798:	bl	11a5c <freeaddrinfo@plt>
   1679c:	cmp	r6, #0
   167a0:	str	r6, [r4, #48]	; 0x30
   167a4:	bne	16724 <__assert_fail@plt+0x4c44>
   167a8:	ldr	r3, [r4, #44]	; 0x2c
   167ac:	str	r3, [r4, #48]	; 0x30
   167b0:	b	16770 <__assert_fail@plt+0x4c90>
   167b4:	mov	r0, #0
   167b8:	str	r4, [sp, #-8]!
   167bc:	str	lr, [sp, #4]
   167c0:	bl	1178c <alarm@plt>
   167c4:	mov	r4, r0
   167c8:	mov	r1, #0
   167cc:	mov	r0, #14
   167d0:	bl	11720 <signal@plt>
   167d4:	cmp	r4, #0
   167d8:	beq	167e8 <__assert_fail@plt+0x4d08>
   167dc:	ldr	r4, [sp]
   167e0:	add	sp, sp, #4
   167e4:	pop	{pc}		; (ldr pc, [sp], #4)
   167e8:	mov	r1, r4
   167ec:	movw	r2, #3648	; 0xe40
   167f0:	movt	r2, #2
   167f4:	mov	r0, #1
   167f8:	ldr	r4, [sp]
   167fc:	ldr	lr, [sp, #4]
   16800:	add	sp, sp, #8
   16804:	b	11828 <error@plt>
   16808:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1680c:	mov	r5, r1
   16810:	strd	r6, [sp, #8]
   16814:	mov	r7, r2
   16818:	str	r8, [sp, #16]
   1681c:	mov	r8, r0
   16820:	str	lr, [sp, #20]
   16824:	bl	118d0 <getpid@plt>
   16828:	mov	r6, r0
   1682c:	bl	119d8 <fork@plt>
   16830:	cmn	r0, #1
   16834:	beq	16864 <__assert_fail@plt+0x4d84>
   16838:	cmp	r0, #0
   1683c:	beq	16880 <__assert_fail@plt+0x4da0>
   16840:	cmp	r7, #0
   16844:	bgt	16940 <__assert_fail@plt+0x4e60>
   16848:	mov	r0, #0
   1684c:	bl	11708 <_exit@plt>
   16850:	movw	r0, #3796	; 0xed4
   16854:	movt	r0, #2
   16858:	bl	117c8 <chdir@plt>
   1685c:	cmp	r0, #0
   16860:	bge	168b4 <__assert_fail@plt+0x4dd4>
   16864:	mvn	r6, #0
   16868:	mov	r0, r6
   1686c:	ldrd	r4, [sp]
   16870:	ldrd	r6, [sp, #8]
   16874:	ldr	r8, [sp, #16]
   16878:	add	sp, sp, #20
   1687c:	pop	{pc}		; (ldr pc, [sp], #4)
   16880:	bl	118f4 <setsid@plt>
   16884:	cmn	r0, #1
   16888:	beq	16864 <__assert_fail@plt+0x4d84>
   1688c:	mov	r1, #1
   16890:	mov	r0, r1
   16894:	bl	11720 <signal@plt>
   16898:	bl	119d8 <fork@plt>
   1689c:	cmn	r0, #1
   168a0:	beq	16864 <__assert_fail@plt+0x4d84>
   168a4:	cmp	r0, #0
   168a8:	bne	16848 <__assert_fail@plt+0x4d68>
   168ac:	cmp	r8, #0
   168b0:	beq	16850 <__assert_fail@plt+0x4d70>
   168b4:	cmp	r5, #0
   168b8:	bne	16868 <__assert_fail@plt+0x4d88>
   168bc:	mov	r0, #4
   168c0:	bl	11798 <sysconf@plt>
   168c4:	cmn	r0, #1
   168c8:	mov	r4, r0
   168cc:	beq	16964 <__assert_fail@plt+0x4e84>
   168d0:	cmp	r0, #0
   168d4:	ble	168ec <__assert_fail@plt+0x4e0c>
   168d8:	mov	r0, r5
   168dc:	add	r5, r5, #1
   168e0:	bl	11ac8 <close@plt>
   168e4:	cmp	r4, r5
   168e8:	bgt	168d8 <__assert_fail@plt+0x4df8>
   168ec:	movw	r0, #3676	; 0xe5c
   168f0:	movt	r0, #2
   168f4:	mov	r2, #0
   168f8:	mov	r1, #2
   168fc:	bl	1184c <open64@plt>
   16900:	cmn	r0, #1
   16904:	mov	r4, r0
   16908:	beq	16868 <__assert_fail@plt+0x4d88>
   1690c:	mov	r1, #0
   16910:	bl	117b0 <dup2@plt>
   16914:	mov	r1, #1
   16918:	mov	r0, r4
   1691c:	bl	117b0 <dup2@plt>
   16920:	mov	r1, #2
   16924:	mov	r0, r4
   16928:	bl	117b0 <dup2@plt>
   1692c:	cmp	r4, #2
   16930:	ble	16868 <__assert_fail@plt+0x4d88>
   16934:	mov	r0, r4
   16938:	bl	11ac8 <close@plt>
   1693c:	b	16868 <__assert_fail@plt+0x4d88>
   16940:	movw	r1, #26548	; 0x67b4
   16944:	movt	r1, #1
   16948:	mov	r0, #14
   1694c:	bl	11720 <signal@plt>
   16950:	mov	r0, r7
   16954:	bl	1178c <alarm@plt>
   16958:	bl	11678 <pause@plt>
   1695c:	mov	r0, #0
   16960:	bl	11708 <_exit@plt>
   16964:	mov	r4, #64	; 0x40
   16968:	b	168d8 <__assert_fail@plt+0x4df8>

0001696c <daemon@@Base>:
   1696c:	strd	r4, [sp, #-16]!
   16970:	mov	r5, r1
   16974:	str	r6, [sp, #8]
   16978:	mov	r6, r0
   1697c:	str	lr, [sp, #12]
   16980:	bl	118d0 <getpid@plt>
   16984:	mov	r4, r0
   16988:	bl	119d8 <fork@plt>
   1698c:	cmn	r0, #1
   16990:	beq	16a14 <daemon@@Base+0xa8>
   16994:	cmp	r0, #0
   16998:	bne	169f8 <daemon@@Base+0x8c>
   1699c:	bl	118f4 <setsid@plt>
   169a0:	cmn	r0, #1
   169a4:	beq	16a14 <daemon@@Base+0xa8>
   169a8:	mov	r1, #1
   169ac:	mov	r0, r1
   169b0:	bl	11720 <signal@plt>
   169b4:	bl	119d8 <fork@plt>
   169b8:	cmn	r0, #1
   169bc:	beq	16a14 <daemon@@Base+0xa8>
   169c0:	cmp	r0, #0
   169c4:	bne	169f8 <daemon@@Base+0x8c>
   169c8:	cmp	r6, #0
   169cc:	beq	16a00 <daemon@@Base+0x94>
   169d0:	cmp	r5, #0
   169d4:	beq	16a28 <daemon@@Base+0xbc>
   169d8:	cmn	r4, #1
   169dc:	ldrd	r4, [sp]
   169e0:	movne	r0, #0
   169e4:	moveq	r0, #1
   169e8:	ldr	r6, [sp, #8]
   169ec:	add	sp, sp, #12
   169f0:	rsb	r0, r0, #0
   169f4:	pop	{pc}		; (ldr pc, [sp], #4)
   169f8:	mov	r0, #0
   169fc:	bl	11708 <_exit@plt>
   16a00:	movw	r0, #3796	; 0xed4
   16a04:	movt	r0, #2
   16a08:	bl	117c8 <chdir@plt>
   16a0c:	cmp	r0, #0
   16a10:	bge	169d0 <daemon@@Base+0x64>
   16a14:	ldrd	r4, [sp]
   16a18:	mvn	r0, #0
   16a1c:	ldr	r6, [sp, #8]
   16a20:	add	sp, sp, #12
   16a24:	pop	{pc}		; (ldr pc, [sp], #4)
   16a28:	mov	r0, #4
   16a2c:	bl	11798 <sysconf@plt>
   16a30:	cmn	r0, #1
   16a34:	mov	r6, r0
   16a38:	beq	16aac <daemon@@Base+0x140>
   16a3c:	cmp	r0, #0
   16a40:	ble	16a58 <daemon@@Base+0xec>
   16a44:	mov	r0, r5
   16a48:	add	r5, r5, #1
   16a4c:	bl	11ac8 <close@plt>
   16a50:	cmp	r6, r5
   16a54:	bgt	16a44 <daemon@@Base+0xd8>
   16a58:	movw	r0, #3676	; 0xe5c
   16a5c:	movt	r0, #2
   16a60:	mov	r2, #0
   16a64:	mov	r1, #2
   16a68:	bl	1184c <open64@plt>
   16a6c:	cmn	r0, #1
   16a70:	mov	r5, r0
   16a74:	beq	169d8 <daemon@@Base+0x6c>
   16a78:	mov	r1, #0
   16a7c:	bl	117b0 <dup2@plt>
   16a80:	mov	r1, #1
   16a84:	mov	r0, r5
   16a88:	bl	117b0 <dup2@plt>
   16a8c:	mov	r1, #2
   16a90:	mov	r0, r5
   16a94:	bl	117b0 <dup2@plt>
   16a98:	cmp	r5, #2
   16a9c:	ble	169d8 <daemon@@Base+0x6c>
   16aa0:	mov	r0, r5
   16aa4:	bl	11ac8 <close@plt>
   16aa8:	b	169d8 <daemon@@Base+0x6c>
   16aac:	mov	r6, #64	; 0x40
   16ab0:	b	16a44 <daemon@@Base+0xd8>
   16ab4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16ab8:	mov	r4, #0
   16abc:	strd	r6, [sp, #8]
   16ac0:	mov	r6, r4
   16ac4:	strd	r8, [sp, #16]
   16ac8:	mov	r9, r4
   16acc:	str	lr, [sp, #24]
   16ad0:	sub	sp, sp, #1072	; 0x430
   16ad4:	sub	sp, sp, #12
   16ad8:	bl	11918 <__errno_location@plt>
   16adc:	mov	r7, r0
   16ae0:	add	r4, r4, #256	; 0x100
   16ae4:	mov	r0, r6
   16ae8:	str	r9, [r7]
   16aec:	mov	r1, r4
   16af0:	bl	1e180 <argp_parse@@Base+0x2898>
   16af4:	subs	r5, r0, #0
   16af8:	mov	r1, r4
   16afc:	beq	16bc0 <daemon@@Base+0x254>
   16b00:	bl	11834 <gethostname@plt>
   16b04:	subs	r8, r0, #0
   16b08:	mov	r2, r4
   16b0c:	mov	r6, r5
   16b10:	mov	r0, r5
   16b14:	mov	r1, r8
   16b18:	bne	16b28 <daemon@@Base+0x1bc>
   16b1c:	bl	11978 <memchr@plt>
   16b20:	cmp	r0, #0
   16b24:	beq	16ae0 <daemon@@Base+0x174>
   16b28:	ldr	r3, [r7]
   16b2c:	cmp	r3, #36	; 0x24
   16b30:	beq	16ae0 <daemon@@Base+0x174>
   16b34:	adds	r3, r3, #0
   16b38:	movne	r3, #1
   16b3c:	cmp	r8, #0
   16b40:	movne	r1, r3
   16b44:	moveq	r1, #0
   16b48:	cmp	r1, #0
   16b4c:	bne	16bf0 <daemon@@Base+0x284>
   16b50:	mov	r6, #0
   16b54:	mov	r7, #0
   16b58:	mov	r0, #2
   16b5c:	add	r2, sp, #20
   16b60:	add	r3, sp, #16
   16b64:	strd	r6, [sp, #20]
   16b68:	str	r0, [sp, #24]
   16b6c:	mov	r0, r5
   16b70:	strd	r6, [sp, #28]
   16b74:	strd	r6, [sp, #36]	; 0x24
   16b78:	strd	r6, [sp, #44]	; 0x2c
   16b7c:	bl	11a68 <getaddrinfo@plt>
   16b80:	subs	ip, r0, #0
   16b84:	bne	16bd0 <daemon@@Base+0x264>
   16b88:	ldr	r0, [sp, #16]
   16b8c:	mov	lr, #8
   16b90:	add	r2, sp, #52	; 0x34
   16b94:	movw	r3, #1025	; 0x401
   16b98:	ldr	r1, [r0, #16]
   16b9c:	ldr	r0, [r0, #20]
   16ba0:	str	ip, [sp]
   16ba4:	stmib	sp, {ip, lr}
   16ba8:	bl	119e4 <getnameinfo@plt>
   16bac:	cmp	r0, #0
   16bb0:	beq	16c00 <daemon@@Base+0x294>
   16bb4:	ldr	r0, [sp, #16]
   16bb8:	bl	11a5c <freeaddrinfo@plt>
   16bbc:	b	16bd0 <daemon@@Base+0x264>
   16bc0:	mov	r3, #12
   16bc4:	mov	r0, r6
   16bc8:	str	r3, [r7]
   16bcc:	bl	1cb08 <argp_parse@@Base+0x1220>
   16bd0:	mov	r0, r5
   16bd4:	add	sp, sp, #1072	; 0x430
   16bd8:	add	sp, sp, #12
   16bdc:	ldrd	r4, [sp]
   16be0:	ldrd	r6, [sp, #8]
   16be4:	ldrd	r8, [sp, #16]
   16be8:	add	sp, sp, #24
   16bec:	pop	{pc}		; (ldr pc, [sp], #4)
   16bf0:	mov	r0, r5
   16bf4:	mov	r5, #0
   16bf8:	bl	1cb08 <argp_parse@@Base+0x1220>
   16bfc:	b	16bd0 <daemon@@Base+0x264>
   16c00:	mov	r0, r5
   16c04:	bl	1cb08 <argp_parse@@Base+0x1220>
   16c08:	add	r0, sp, #52	; 0x34
   16c0c:	bl	11774 <strdup@plt>
   16c10:	mov	r5, r0
   16c14:	b	16bb4 <daemon@@Base+0x248>
   16c18:	cmp	r1, #6
   16c1c:	ble	16c2c <daemon@@Base+0x2c0>
   16c20:	movw	r0, #3704	; 0xe78
   16c24:	movt	r0, #2
   16c28:	bx	lr
   16c2c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16c30:	strd	r6, [sp, #8]
   16c34:	mov	r7, r0
   16c38:	mov	r0, r2
   16c3c:	strd	r8, [sp, #16]
   16c40:	mov	r6, r1
   16c44:	mov	r8, r2
   16c48:	strd	sl, [sp, #24]
   16c4c:	mov	r9, r3
   16c50:	str	lr, [sp, #32]
   16c54:	sub	sp, sp, #196	; 0xc4
   16c58:	bl	118e8 <strlen@plt>
   16c5c:	add	r0, r0, #6
   16c60:	bl	1e144 <argp_parse@@Base+0x285c>
   16c64:	subs	r4, r0, #0
   16c68:	beq	16f50 <daemon@@Base+0x5e4>
   16c6c:	movw	r3, #3792	; 0xed0
   16c70:	movt	r3, #2
   16c74:	ldr	r2, [r3]
   16c78:	mov	r1, r8
   16c7c:	add	r0, r4, #5
   16c80:	ldrb	r3, [r3, #4]
   16c84:	str	r2, [r4]
   16c88:	strb	r3, [r4, #4]
   16c8c:	bl	11750 <stpcpy@plt>
   16c90:	subs	r0, r0, r4
   16c94:	beq	16d44 <daemon@@Base+0x3d8>
   16c98:	sub	r0, r0, #1
   16c9c:	mov	r1, #46	; 0x2e
   16ca0:	ldrb	r3, [r4, r0]
   16ca4:	cmp	r3, #47	; 0x2f
   16ca8:	moveq	r3, #0
   16cac:	strbeq	r3, [r4, r0]
   16cb0:	mov	r0, r4
   16cb4:	bl	11900 <strchr@plt>
   16cb8:	subs	r3, r0, #0
   16cbc:	bne	16cd8 <daemon@@Base+0x36c>
   16cc0:	b	16d38 <daemon@@Base+0x3cc>
   16cc4:	add	r0, r3, #1
   16cc8:	mov	r1, #46	; 0x2e
   16ccc:	bl	11900 <strchr@plt>
   16cd0:	subs	r3, r0, #0
   16cd4:	beq	16d38 <daemon@@Base+0x3cc>
   16cd8:	cmp	r4, r3
   16cdc:	bcs	16cc4 <daemon@@Base+0x358>
   16ce0:	ldrb	r2, [r3, #-1]
   16ce4:	cmp	r2, #47	; 0x2f
   16ce8:	bne	16cc4 <daemon@@Base+0x358>
   16cec:	ldrb	r2, [r3, #1]
   16cf0:	cmp	r2, #46	; 0x2e
   16cf4:	bne	16cc4 <daemon@@Base+0x358>
   16cf8:	ldrb	r2, [r3, #2]
   16cfc:	cmp	r2, #47	; 0x2f
   16d00:	cmpne	r2, #0
   16d04:	bne	16cc4 <daemon@@Base+0x358>
   16d08:	ldrb	r1, [r3, #-2]
   16d0c:	sub	r0, r3, #2
   16d10:	b	16d18 <daemon@@Base+0x3ac>
   16d14:	ldrb	r1, [r0, #-1]!
   16d18:	subs	r2, r1, #47	; 0x2f
   16d1c:	movne	r2, #1
   16d20:	cmp	r4, r0
   16d24:	movhi	r2, #0
   16d28:	cmp	r2, #0
   16d2c:	bne	16d14 <daemon@@Base+0x3a8>
   16d30:	cmp	r4, r0
   16d34:	bls	17088 <daemon@@Base+0x71c>
   16d38:	ldrb	r3, [r4]
   16d3c:	cmp	r3, #0
   16d40:	beq	16ed8 <daemon@@Base+0x56c>
   16d44:	movw	r1, #3792	; 0xed0
   16d48:	movt	r1, #2
   16d4c:	mov	r2, #5
   16d50:	mov	r0, r4
   16d54:	bl	11aa4 <strncmp@plt>
   16d58:	subs	r5, r0, #0
   16d5c:	bne	16ee8 <daemon@@Base+0x57c>
   16d60:	mov	r2, r5
   16d64:	movw	r1, #2049	; 0x801
   16d68:	mov	r0, r4
   16d6c:	bl	1184c <open64@plt>
   16d70:	subs	sl, r0, #0
   16d74:	blt	16e74 <daemon@@Base+0x508>
   16d78:	cmp	r6, #0
   16d7c:	movle	r8, r5
   16d80:	ble	16dd4 <daemon@@Base+0x468>
   16d84:	cmp	r6, #1
   16d88:	ldr	r8, [r7, #4]
   16d8c:	beq	16dd4 <daemon@@Base+0x468>
   16d90:	ldr	r3, [r7, #12]
   16d94:	cmp	r6, #2
   16d98:	add	r8, r8, r3
   16d9c:	beq	16dd4 <daemon@@Base+0x468>
   16da0:	ldr	r3, [r7, #20]
   16da4:	cmp	r6, #3
   16da8:	add	r8, r8, r3
   16dac:	beq	16dd4 <daemon@@Base+0x468>
   16db0:	ldr	r3, [r7, #28]
   16db4:	cmp	r6, #4
   16db8:	add	r8, r8, r3
   16dbc:	beq	16dd4 <daemon@@Base+0x468>
   16dc0:	ldr	r3, [r7, #36]	; 0x24
   16dc4:	cmp	r6, #6
   16dc8:	add	r8, r8, r3
   16dcc:	ldreq	r3, [r7, #44]	; 0x2c
   16dd0:	addeq	r8, r8, r3
   16dd4:	mov	r2, r6
   16dd8:	mov	r1, r7
   16ddc:	mov	r0, sl
   16de0:	bl	11984 <writev@plt>
   16de4:	cmp	r8, r0
   16de8:	mov	fp, r0
   16dec:	ble	170a4 <daemon@@Base+0x738>
   16df0:	cmp	r0, #0
   16df4:	bge	17004 <daemon@@Base+0x698>
   16df8:	bl	11918 <__errno_location@plt>
   16dfc:	ldr	r3, [r0]
   16e00:	mov	fp, r0
   16e04:	cmp	r3, #11
   16e08:	bne	170c4 <daemon@@Base+0x758>
   16e0c:	mov	r3, #0
   16e10:	cmp	r5, #0
   16e14:	str	r3, [sp, #12]
   16e18:	bne	170ec <daemon@@Base+0x780>
   16e1c:	bl	119d8 <fork@plt>
   16e20:	cmp	r0, #0
   16e24:	beq	16f98 <daemon@@Base+0x62c>
   16e28:	blt	16f10 <daemon@@Base+0x5a4>
   16e2c:	mov	r2, r5
   16e30:	add	r1, sp, #64	; 0x40
   16e34:	bl	11810 <waitpid@plt>
   16e38:	cmp	r0, #0
   16e3c:	blt	16f10 <daemon@@Base+0x5a4>
   16e40:	ldr	r0, [sp, #64]	; 0x40
   16e44:	tst	r0, #127	; 0x7f
   16e48:	bne	17078 <daemon@@Base+0x70c>
   16e4c:	ubfx	r0, r0, #8, #8
   16e50:	cmp	r0, #0
   16e54:	strne	r0, [fp]
   16e58:	bne	16f14 <daemon@@Base+0x5a8>
   16e5c:	mov	r0, sl
   16e60:	bl	11ac8 <close@plt>
   16e64:	mov	r0, r4
   16e68:	bl	1cb08 <argp_parse@@Base+0x1220>
   16e6c:	mov	r0, r5
   16e70:	b	16ebc <daemon@@Base+0x550>
   16e74:	bl	11918 <__errno_location@plt>
   16e78:	ldr	r0, [r0]
   16e7c:	cmp	r0, #13
   16e80:	cmpne	r0, #16
   16e84:	beq	17070 <daemon@@Base+0x704>
   16e88:	bl	11888 <strerror@plt>
   16e8c:	mov	r3, r4
   16e90:	mov	r1, #1024	; 0x400
   16e94:	str	r0, [sp]
   16e98:	movw	r2, #3820	; 0xeec
   16e9c:	movt	r2, #2
   16ea0:	movw	r0, #9728	; 0x2600
   16ea4:	movt	r0, #3
   16ea8:	bl	11924 <snprintf@plt>
   16eac:	mov	r0, r4
   16eb0:	bl	1cb08 <argp_parse@@Base+0x1220>
   16eb4:	movw	r0, #9728	; 0x2600
   16eb8:	movt	r0, #3
   16ebc:	add	sp, sp, #196	; 0xc4
   16ec0:	ldrd	r4, [sp]
   16ec4:	ldrd	r6, [sp, #8]
   16ec8:	ldrd	r8, [sp, #16]
   16ecc:	ldrd	sl, [sp, #24]
   16ed0:	add	sp, sp, #32
   16ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ed8:	mov	r2, #47	; 0x2f
   16edc:	strb	r2, [r4]
   16ee0:	strb	r3, [r4, #1]
   16ee4:	b	16d44 <daemon@@Base+0x3d8>
   16ee8:	mov	r3, r8
   16eec:	movw	r2, #3800	; 0xed8
   16ef0:	movt	r2, #2
   16ef4:	movw	r0, #9728	; 0x2600
   16ef8:	movt	r0, #3
   16efc:	mov	r1, #1024	; 0x400
   16f00:	bl	11924 <snprintf@plt>
   16f04:	movw	r0, #9728	; 0x2600
   16f08:	movt	r0, #3
   16f0c:	b	16ebc <daemon@@Base+0x550>
   16f10:	ldr	r0, [fp]
   16f14:	bl	11888 <strerror@plt>
   16f18:	mov	r3, r0
   16f1c:	mov	r1, #1024	; 0x400
   16f20:	movw	r2, #3828	; 0xef4
   16f24:	movt	r2, #2
   16f28:	movw	r0, #9728	; 0x2600
   16f2c:	movt	r0, #3
   16f30:	bl	11924 <snprintf@plt>
   16f34:	mov	r0, sl
   16f38:	bl	11ac8 <close@plt>
   16f3c:	mov	r0, r4
   16f40:	bl	1cb08 <argp_parse@@Base+0x1220>
   16f44:	movw	r0, #9728	; 0x2600
   16f48:	movt	r0, #3
   16f4c:	b	16ebc <daemon@@Base+0x550>
   16f50:	movw	ip, #3752	; 0xea8
   16f54:	movt	ip, #2
   16f58:	ldrd	r4, [ip]
   16f5c:	movw	r1, #9728	; 0x2600
   16f60:	movt	r1, #3
   16f64:	mov	r0, r1
   16f68:	ldrd	r2, [ip, #8]
   16f6c:	ldrh	lr, [ip, #36]	; 0x24
   16f70:	strd	r4, [r1]
   16f74:	ldrd	r6, [ip, #16]
   16f78:	strd	r2, [r1, #8]
   16f7c:	ldrd	r4, [ip, #24]
   16f80:	ldr	r3, [ip, #32]
   16f84:	strd	r6, [r1, #16]
   16f88:	strh	lr, [r1, #36]	; 0x24
   16f8c:	strd	r4, [r1, #24]
   16f90:	str	r3, [r1, #32]
   16f94:	b	16ebc <daemon@@Base+0x550>
   16f98:	bl	119d8 <fork@plt>
   16f9c:	cmn	r0, #1
   16fa0:	beq	170fc <daemon@@Base+0x790>
   16fa4:	cmp	r0, #0
   16fa8:	beq	16fb4 <daemon@@Base+0x648>
   16fac:	mov	r0, r5
   16fb0:	bl	11708 <_exit@plt>
   16fb4:	mov	r1, r5
   16fb8:	mov	r0, #14
   16fbc:	bl	11720 <signal@plt>
   16fc0:	mov	r1, r5
   16fc4:	mov	r0, #15
   16fc8:	bl	11720 <signal@plt>
   16fcc:	add	r0, sp, #64	; 0x40
   16fd0:	bl	119cc <sigemptyset@plt>
   16fd4:	mov	r2, r5
   16fd8:	add	r1, sp, #64	; 0x40
   16fdc:	mov	r0, #2
   16fe0:	mov	r5, #1
   16fe4:	bl	116b4 <sigprocmask@plt>
   16fe8:	mov	r0, r9
   16fec:	bl	1178c <alarm@plt>
   16ff0:	add	r2, sp, #12
   16ff4:	mov	r1, #2048	; 0x800
   16ff8:	mov	r0, sl
   16ffc:	bl	1c920 <argp_parse@@Base+0x1038>
   17000:	b	16dd4 <daemon@@Base+0x468>
   17004:	add	r3, sp, #16
   17008:	sub	r8, r8, r0
   1700c:	cmp	r7, r3
   17010:	beq	17028 <daemon@@Base+0x6bc>
   17014:	mov	r0, r3
   17018:	mov	r1, r7
   1701c:	lsl	r2, r6, #3
   17020:	bl	11714 <memcpy@plt>
   17024:	mov	r3, r0
   17028:	ldr	r2, [sp, #20]
   1702c:	mov	r7, r3
   17030:	cmp	fp, r2
   17034:	blt	17050 <daemon@@Base+0x6e4>
   17038:	add	r7, r7, #8
   1703c:	sub	fp, fp, r2
   17040:	ldr	r2, [r7, #4]
   17044:	sub	r6, r6, #1
   17048:	cmp	r2, fp
   1704c:	ble	17038 <daemon@@Base+0x6cc>
   17050:	cmp	fp, #0
   17054:	beq	16dd4 <daemon@@Base+0x468>
   17058:	ldr	r3, [r7]
   1705c:	sub	r2, r2, fp
   17060:	str	r2, [r7, #4]
   17064:	add	fp, r3, fp
   17068:	str	fp, [r7]
   1706c:	b	16dd4 <daemon@@Base+0x468>
   17070:	mov	r0, #0
   17074:	b	16ebc <daemon@@Base+0x550>
   17078:	mov	r3, #4
   1707c:	mov	r0, r3
   17080:	str	r3, [fp]
   17084:	b	16f14 <daemon@@Base+0x5a8>
   17088:	add	r3, r3, #2
   1708c:	sub	r1, r0, #1
   17090:	ldrb	r2, [r3], #1
   17094:	cmp	r2, #0
   17098:	strb	r2, [r1, #1]!
   1709c:	bne	17090 <daemon@@Base+0x724>
   170a0:	b	16cc8 <daemon@@Base+0x35c>
   170a4:	mov	r0, r4
   170a8:	bl	1cb08 <argp_parse@@Base+0x1220>
   170ac:	mov	r0, sl
   170b0:	bl	11ac8 <close@plt>
   170b4:	cmp	r5, #0
   170b8:	beq	17070 <daemon@@Base+0x704>
   170bc:	mov	r0, #0
   170c0:	bl	11708 <_exit@plt>
   170c4:	cmp	r3, #5
   170c8:	cmpne	r3, #19
   170cc:	beq	170a4 <daemon@@Base+0x738>
   170d0:	mov	r0, sl
   170d4:	bl	11ac8 <close@plt>
   170d8:	cmp	r5, #0
   170dc:	ldreq	r0, [fp]
   170e0:	beq	16e88 <daemon@@Base+0x51c>
   170e4:	mov	r0, #1
   170e8:	bl	11708 <_exit@plt>
   170ec:	mov	r0, sl
   170f0:	bl	11ac8 <close@plt>
   170f4:	mov	r0, #1
   170f8:	bl	11708 <_exit@plt>
   170fc:	ldr	r0, [fp]
   17100:	bl	11708 <_exit@plt>
   17104:	ldr	r3, [r0, #12]
   17108:	strd	r4, [sp, #-16]!
   1710c:	ldr	r2, [r1, #12]
   17110:	str	r6, [sp, #8]
   17114:	str	lr, [sp, #12]
   17118:	cmp	r3, r2
   1711c:	beq	1717c <daemon@@Base+0x810>
   17120:	mov	r5, r1
   17124:	mov	r4, r0
   17128:	mov	r1, r2
   1712c:	mov	r0, r3
   17130:	bl	17104 <daemon@@Base+0x798>
   17134:	cmp	r0, #0
   17138:	bne	1716c <daemon@@Base+0x800>
   1713c:	ldr	r3, [r5, #8]
   17140:	ldr	r0, [r4, #8]
   17144:	mvn	r2, r3
   17148:	lsr	r2, r2, #31
   1714c:	cmp	r2, r0, lsr #31
   17150:	subne	r0, r0, r3
   17154:	subeq	r0, r3, r0
   17158:	cmp	r0, #0
   1715c:	bne	1716c <daemon@@Base+0x800>
   17160:	ldr	r0, [r4, #4]
   17164:	ldr	r3, [r5, #4]
   17168:	sub	r0, r3, r0
   1716c:	ldrd	r4, [sp]
   17170:	ldr	r6, [sp, #8]
   17174:	add	sp, sp, #12
   17178:	pop	{pc}		; (ldr pc, [sp], #4)
   1717c:	ldr	lr, [r1, #4]
   17180:	ldr	r3, [r1, #8]
   17184:	ldr	r2, [r0, #8]
   17188:	ldr	ip, [r0, #4]
   1718c:	mvn	r1, r3
   17190:	lsr	r1, r1, #31
   17194:	ldrd	r4, [sp]
   17198:	cmp	r1, r2, lsr #31
   1719c:	ldr	r6, [sp, #8]
   171a0:	add	sp, sp, #12
   171a4:	subne	r0, r2, r3
   171a8:	subeq	r0, r3, r2
   171ac:	cmp	r0, #0
   171b0:	subeq	r0, lr, ip
   171b4:	pop	{pc}		; (ldr pc, [sp], #4)
   171b8:	strd	r4, [sp, #-16]!
   171bc:	subs	r5, r0, #0
   171c0:	mov	r4, r1
   171c4:	str	r6, [sp, #8]
   171c8:	str	lr, [sp, #12]
   171cc:	beq	171e0 <daemon@@Base+0x874>
   171d0:	mov	r1, #10
   171d4:	bl	11900 <strchr@plt>
   171d8:	adds	r5, r0, #0
   171dc:	movne	r5, #1
   171e0:	cmp	r4, #0
   171e4:	beq	17210 <daemon@@Base+0x8a4>
   171e8:	ldr	r3, [r4]
   171ec:	cmp	r3, #0
   171f0:	beq	17210 <daemon@@Base+0x8a4>
   171f4:	ldr	r0, [r3, #8]
   171f8:	ldr	r1, [r3, #16]
   171fc:	bl	171b8 <daemon@@Base+0x84c>
   17200:	ldr	r3, [r4, #16]!
   17204:	add	r5, r5, r0
   17208:	cmp	r3, #0
   1720c:	bne	171f4 <daemon@@Base+0x888>
   17210:	mov	r0, r5
   17214:	ldrd	r4, [sp]
   17218:	ldr	r6, [sp, #8]
   1721c:	add	sp, sp, #12
   17220:	pop	{pc}		; (ldr pc, [sp], #4)
   17224:	ldr	r3, [r0, #16]
   17228:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1722c:	ldr	r4, [r0]
   17230:	strd	r6, [sp, #8]
   17234:	strd	r8, [sp, #16]
   17238:	strd	sl, [sp, #24]
   1723c:	str	lr, [sp, #32]
   17240:	sub	sp, sp, #52	; 0x34
   17244:	stm	sp, {r0, r3}
   17248:	mov	r0, #16
   1724c:	str	r1, [sp, #8]
   17250:	bl	1e144 <argp_parse@@Base+0x285c>
   17254:	subs	fp, r0, #0
   17258:	beq	178c0 <daemon@@Base+0xf54>
   1725c:	mov	r3, #0
   17260:	cmp	r4, r3
   17264:	str	r3, [fp, #4]
   17268:	str	r3, [fp, #12]
   1726c:	beq	174c8 <daemon@@Base+0xb5c>
   17270:	ldr	r0, [r4, #12]
   17274:	ands	r0, r0, #4
   17278:	bne	178fc <daemon@@Base+0xf90>
   1727c:	mov	r9, r0
   17280:	add	r5, r4, #24
   17284:	mov	r8, r0
   17288:	b	172d8 <daemon@@Base+0x96c>
   1728c:	ldr	r3, [r5, #-12]
   17290:	tst	r3, #4
   17294:	bne	172a4 <daemon@@Base+0x938>
   17298:	add	r9, r9, #1
   1729c:	str	r9, [fp, #4]
   172a0:	ldr	r3, [r5, #-12]
   172a4:	tst	r3, #8
   172a8:	bne	172d4 <daemon@@Base+0x968>
   172ac:	ldr	r6, [r5, #-20]	; 0xffffffec
   172b0:	sub	r3, r6, #1
   172b4:	cmp	r3, #254	; 0xfe
   172b8:	bhi	172d4 <daemon@@Base+0x968>
   172bc:	bl	118c4 <__ctype_b_loc@plt>
   172c0:	ldr	r3, [r0]
   172c4:	lsl	r6, r6, #1
   172c8:	ldrh	r3, [r3, r6]
   172cc:	tst	r3, #16384	; 0x4000
   172d0:	addne	r8, r8, #1
   172d4:	add	r5, r5, #24
   172d8:	ldr	r3, [r5, #-20]	; 0xffffffec
   172dc:	cmp	r3, #0
   172e0:	bne	1728c <daemon@@Base+0x920>
   172e4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   172e8:	cmp	r3, #0
   172ec:	bne	1728c <daemon@@Base+0x920>
   172f0:	ldr	r3, [r5, #-8]
   172f4:	cmp	r3, #0
   172f8:	bne	1728c <daemon@@Base+0x920>
   172fc:	ldr	sl, [r5, #-4]
   17300:	cmp	sl, #0
   17304:	bne	1728c <daemon@@Base+0x920>
   17308:	rsb	r9, r9, r9, lsl #3
   1730c:	lsl	r0, r9, #2
   17310:	bl	1e144 <argp_parse@@Base+0x285c>
   17314:	str	r0, [fp]
   17318:	add	r0, r8, #1
   1731c:	bl	1e144 <argp_parse@@Base+0x285c>
   17320:	ldr	r5, [fp]
   17324:	mov	r7, r0
   17328:	str	r0, [fp, #8]
   1732c:	cmp	r5, #0
   17330:	cmpne	r0, #0
   17334:	beq	17864 <daemon@@Base+0xef8>
   17338:	ldr	r2, [fp, #4]
   1733c:	movw	r3, #37449	; 0x9249
   17340:	movt	r3, #2340	; 0x924
   17344:	cmp	r2, r3
   17348:	bhi	17884 <daemon@@Base+0xf18>
   1734c:	mov	r6, r0
   17350:	mov	r8, sl
   17354:	ldr	r3, [r4, #4]
   17358:	mov	r0, sl
   1735c:	add	r5, r5, #28
   17360:	str	fp, [sp, #12]
   17364:	ldr	sl, [sp, #8]
   17368:	mov	fp, r7
   1736c:	cmp	r3, #0
   17370:	ldr	r7, [r4, #20]
   17374:	bne	17384 <daemon@@Base+0xa18>
   17378:	ldr	ip, [r4]
   1737c:	cmp	ip, #0
   17380:	beq	17464 <daemon@@Base+0xaf8>
   17384:	cmp	r7, #0
   17388:	str	r4, [r5, #-28]	; 0xffffffe4
   1738c:	str	r8, [r5, #-24]	; 0xffffffe8
   17390:	str	r6, [r5, #-20]	; 0xffffffec
   17394:	bne	173a8 <daemon@@Base+0xa3c>
   17398:	ldr	r2, [r4]
   1739c:	orrs	r3, r2, r3
   173a0:	movne	r7, r0
   173a4:	beq	17484 <daemon@@Base+0xb18>
   173a8:	ldr	r2, [sp]
   173ac:	mov	r3, #0
   173b0:	str	r7, [r5, #-16]
   173b4:	str	sl, [r5, #-12]
   173b8:	str	r2, [r5, #-8]
   173bc:	add	r3, r3, #1
   173c0:	str	r3, [r5, #-24]	; 0xffffffe8
   173c4:	ldr	r3, [r4, #12]
   173c8:	tst	r3, #8
   173cc:	bne	17434 <daemon@@Base+0xac8>
   173d0:	ldr	r9, [r4, #4]
   173d4:	sub	r3, r9, #1
   173d8:	cmp	r3, #254	; 0xfe
   173dc:	bhi	17434 <daemon@@Base+0xac8>
   173e0:	bl	118c4 <__ctype_b_loc@plt>
   173e4:	ldr	r0, [r0]
   173e8:	lsl	r3, r9, #1
   173ec:	ldrh	r3, [r0, r3]
   173f0:	tst	r3, #16384	; 0x4000
   173f4:	beq	17434 <daemon@@Base+0xac8>
   173f8:	cmp	fp, r6
   173fc:	uxtb	r9, r9
   17400:	bcs	17430 <daemon@@Base+0xac4>
   17404:	ldrb	r3, [fp]
   17408:	cmp	r3, r9
   1740c:	beq	17434 <daemon@@Base+0xac8>
   17410:	mov	r3, fp
   17414:	sub	r0, r6, #1
   17418:	b	17428 <daemon@@Base+0xabc>
   1741c:	ldrb	ip, [r3, #1]!
   17420:	cmp	ip, r9
   17424:	beq	17434 <daemon@@Base+0xac8>
   17428:	cmp	r0, r3
   1742c:	bne	1741c <daemon@@Base+0xab0>
   17430:	strb	r9, [r6], #1
   17434:	add	r4, r4, #24
   17438:	ldr	r0, [r4, #4]
   1743c:	cmp	r0, #0
   17440:	bne	17450 <daemon@@Base+0xae4>
   17444:	ldr	r3, [r4]
   17448:	cmp	r3, #0
   1744c:	beq	1748c <daemon@@Base+0xb20>
   17450:	ldr	r3, [r4, #12]
   17454:	tst	r3, #4
   17458:	beq	174b0 <daemon@@Base+0xb44>
   1745c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17460:	b	173bc <daemon@@Base+0xa50>
   17464:	ldr	ip, [r4, #16]
   17468:	cmp	ip, #0
   1746c:	beq	174b8 <daemon@@Base+0xb4c>
   17470:	cmp	r7, #0
   17474:	str	r4, [r5, #-28]	; 0xffffffe4
   17478:	str	r3, [r5, #-24]	; 0xffffffe8
   1747c:	str	r6, [r5, #-20]	; 0xffffffec
   17480:	bne	173a8 <daemon@@Base+0xa3c>
   17484:	add	r7, r0, #1
   17488:	b	173a8 <daemon@@Base+0xa3c>
   1748c:	ldr	r3, [r4, #16]
   17490:	cmp	r3, #0
   17494:	bne	17450 <daemon@@Base+0xae4>
   17498:	ldr	r3, [r4, #20]
   1749c:	cmp	r3, #0
   174a0:	bne	17450 <daemon@@Base+0xae4>
   174a4:	add	r5, r5, #28
   174a8:	mov	r0, r7
   174ac:	b	1736c <daemon@@Base+0xa00>
   174b0:	mov	r3, r0
   174b4:	b	174a4 <daemon@@Base+0xb38>
   174b8:	cmp	r7, #0
   174bc:	bne	17604 <daemon@@Base+0xc98>
   174c0:	ldr	fp, [sp, #12]
   174c4:	strb	r3, [r6]
   174c8:	ldr	sl, [sp, #4]
   174cc:	cmp	sl, #0
   174d0:	beq	175e4 <daemon@@Base+0xc78>
   174d4:	ldr	r0, [sl]
   174d8:	cmp	r0, #0
   174dc:	beq	175e4 <daemon@@Base+0xc78>
   174e0:	movw	r3, #37449	; 0x9249
   174e4:	movt	r3, #2340	; 0x924
   174e8:	str	r3, [sp, #28]
   174ec:	add	r3, fp, #12
   174f0:	str	r3, [sp, #44]	; 0x2c
   174f4:	ldr	r6, [sl, #8]
   174f8:	ldr	r5, [sl, #12]
   174fc:	cmp	r5, #0
   17500:	bne	1750c <daemon@@Base+0xba0>
   17504:	cmp	r6, #0
   17508:	beq	1784c <daemon@@Base+0xee0>
   1750c:	ldr	r3, [sp]
   17510:	mov	r0, #28
   17514:	ldr	r4, [r3, #16]
   17518:	bl	1e144 <argp_parse@@Base+0x285c>
   1751c:	subs	r1, r0, #0
   17520:	beq	17614 <daemon@@Base+0xca8>
   17524:	ldr	r2, [sp]
   17528:	sub	r4, sl, r4
   1752c:	asr	r4, r4, #4
   17530:	str	r6, [r1]
   17534:	ldr	r3, [sp, #8]
   17538:	strd	r4, [r1, #4]
   1753c:	cmp	r3, #0
   17540:	str	r3, [r1, #12]
   17544:	ldrne	r3, [r3, #20]
   17548:	str	r2, [r1, #16]
   1754c:	ldr	r2, [fp, #12]
   17550:	ldr	r0, [sl]
   17554:	addne	r3, r3, #1
   17558:	str	r1, [fp, #12]
   1755c:	str	r3, [r1, #20]
   17560:	str	r2, [r1, #24]
   17564:	bl	17224 <daemon@@Base+0x8b8>
   17568:	ldr	r3, [fp, #12]
   1756c:	mov	r4, r0
   17570:	cmp	r3, #0
   17574:	bne	17580 <daemon@@Base+0xc14>
   17578:	b	17854 <daemon@@Base+0xee8>
   1757c:	mov	r3, r2
   17580:	ldr	r2, [r3, #24]
   17584:	cmp	r2, #0
   17588:	bne	1757c <daemon@@Base+0xc10>
   1758c:	add	r3, r3, #24
   17590:	ldr	r2, [r4, #4]
   17594:	ldr	r1, [r4, #12]
   17598:	cmp	r2, #0
   1759c:	str	r1, [r3]
   175a0:	mov	r3, #0
   175a4:	str	r3, [r4, #12]
   175a8:	beq	175d0 <daemon@@Base+0xc64>
   175ac:	ldr	r3, [fp, #4]
   175b0:	cmp	r3, #0
   175b4:	bne	1761c <daemon@@Base+0xcb0>
   175b8:	ldr	r1, [r4]
   175bc:	str	r2, [fp, #4]
   175c0:	ldr	r2, [r4, #8]
   175c4:	str	r1, [fp]
   175c8:	str	r2, [fp, #8]
   175cc:	str	r3, [r4, #4]
   175d0:	mov	r0, r4
   175d4:	bl	1cb08 <argp_parse@@Base+0x1220>
   175d8:	ldr	r0, [sl, #16]!
   175dc:	cmp	r0, #0
   175e0:	bne	174f4 <daemon@@Base+0xb88>
   175e4:	mov	r0, fp
   175e8:	add	sp, sp, #52	; 0x34
   175ec:	ldrd	r4, [sp]
   175f0:	ldrd	r6, [sp, #8]
   175f4:	ldrd	r8, [sp, #16]
   175f8:	ldrd	sl, [sp, #24]
   175fc:	add	sp, sp, #32
   17600:	pop	{pc}		; (ldr pc, [sp], #4)
   17604:	str	r4, [r5, #-28]	; 0xffffffe4
   17608:	str	r3, [r5, #-24]	; 0xffffffe8
   1760c:	str	r6, [r5, #-20]	; 0xffffffec
   17610:	b	173a8 <daemon@@Base+0xa3c>
   17614:	ldr	r0, [sl]
   17618:	b	17564 <daemon@@Base+0xbf8>
   1761c:	add	r3, r2, r3
   17620:	rsb	r0, r3, r3, lsl #3
   17624:	str	r3, [sp, #12]
   17628:	lsl	r0, r0, #2
   1762c:	bl	1e144 <argp_parse@@Base+0x285c>
   17630:	mov	r5, r0
   17634:	ldr	r0, [fp, #8]
   17638:	str	r5, [sp, #4]
   1763c:	bl	118e8 <strlen@plt>
   17640:	mov	r8, r0
   17644:	ldr	r0, [r4, #8]
   17648:	bl	118e8 <strlen@plt>
   1764c:	add	r0, r8, r0
   17650:	add	r0, r0, #1
   17654:	bl	1e144 <argp_parse@@Base+0x285c>
   17658:	cmp	r5, #0
   1765c:	cmpne	r0, #0
   17660:	mov	r9, r0
   17664:	beq	178a4 <daemon@@Base+0xf38>
   17668:	ldr	r3, [sp, #12]
   1766c:	ldr	r2, [sp, #28]
   17670:	cmp	r3, r2
   17674:	bhi	178e0 <daemon@@Base+0xf74>
   17678:	ldm	fp, {r1, r6}
   1767c:	ldr	r0, [sp, #4]
   17680:	rsb	r5, r6, r6, lsl #3
   17684:	str	r1, [sp, #16]
   17688:	lsl	r5, r5, #2
   1768c:	mov	r2, r5
   17690:	bl	118ac <mempcpy@plt>
   17694:	ldm	r4, {r1, r3}
   17698:	rsb	r2, r3, r3, lsl #3
   1769c:	str	r3, [sp, #20]
   176a0:	lsl	r2, r2, #2
   176a4:	bl	11714 <memcpy@plt>
   176a8:	ldr	r7, [fp, #8]
   176ac:	mov	r2, r8
   176b0:	mov	r0, r9
   176b4:	mov	r1, r7
   176b8:	bl	11714 <memcpy@plt>
   176bc:	cmp	r6, #0
   176c0:	ldr	r3, [sp, #20]
   176c4:	beq	1785c <daemon@@Base+0xef0>
   176c8:	ldr	r1, [sp, #4]
   176cc:	subs	r6, r6, #1
   176d0:	add	r1, r1, #28
   176d4:	ldr	r2, [r1, #-20]	; 0xffffffec
   176d8:	sub	r2, r2, r7
   176dc:	add	r2, r9, r2
   176e0:	str	r2, [r1, #-20]	; 0xffffffec
   176e4:	bne	176cc <daemon@@Base+0xd60>
   176e8:	ldr	r2, [sp, #4]
   176ec:	add	r5, r2, r5
   176f0:	add	r2, r9, r8
   176f4:	cmp	r3, #0
   176f8:	ldr	r1, [r4, #8]
   176fc:	str	r2, [sp, #20]
   17700:	beq	177a0 <daemon@@Base+0xe34>
   17704:	sub	r0, r2, #1
   17708:	add	r5, r5, #28
   1770c:	mov	r7, r2
   17710:	str	r0, [sp, #24]
   17714:	strd	sl, [sp, #36]	; 0x24
   17718:	mov	sl, r1
   1771c:	mov	fp, r3
   17720:	str	r4, [sp, #32]
   17724:	str	r7, [r5, #-20]	; 0xffffffec
   17728:	ldr	r6, [r5, #-24]	; 0xffffffe8
   1772c:	ldr	r8, [r5, #-28]	; 0xffffffe4
   17730:	cmp	r6, #0
   17734:	beq	17788 <daemon@@Base+0xe1c>
   17738:	ldr	r3, [r8, #12]
   1773c:	tst	r3, #8
   17740:	bne	1777c <daemon@@Base+0xe10>
   17744:	ldr	r4, [r8, #4]
   17748:	sub	r3, r4, #1
   1774c:	cmp	r3, #254	; 0xfe
   17750:	bhi	1777c <daemon@@Base+0xe10>
   17754:	bl	118c4 <__ctype_b_loc@plt>
   17758:	ldr	r1, [r0]
   1775c:	lsl	r2, r4, #1
   17760:	ldrb	r3, [sl]
   17764:	ldrh	r2, [r1, r2]
   17768:	sub	r4, r3, r4
   1776c:	clz	r4, r4
   17770:	lsr	r4, r4, #5
   17774:	ands	r2, r4, r2, lsr #14
   17778:	bne	17808 <daemon@@Base+0xe9c>
   1777c:	subs	r6, r6, #1
   17780:	add	r8, r8, #24
   17784:	bne	17738 <daemon@@Base+0xdcc>
   17788:	subs	fp, fp, #1
   1778c:	add	r5, r5, #28
   17790:	bne	17724 <daemon@@Base+0xdb8>
   17794:	add	r4, sp, #32
   17798:	mov	r2, r7
   1779c:	ldm	r4, {r4, sl, fp}
   177a0:	mov	r3, #0
   177a4:	strb	r3, [r2]
   177a8:	ldr	r0, [sp, #16]
   177ac:	bl	1cb08 <argp_parse@@Base+0x1220>
   177b0:	ldr	r0, [fp, #8]
   177b4:	bl	1cb08 <argp_parse@@Base+0x1220>
   177b8:	ldr	r3, [sp, #4]
   177bc:	ldr	r0, [r4, #12]
   177c0:	str	r3, [fp]
   177c4:	ldr	r3, [sp, #12]
   177c8:	cmp	r0, #0
   177cc:	str	r3, [fp, #4]
   177d0:	str	r9, [fp, #8]
   177d4:	beq	177e8 <daemon@@Base+0xe7c>
   177d8:	ldr	r5, [r0, #24]
   177dc:	bl	1cb08 <argp_parse@@Base+0x1220>
   177e0:	subs	r0, r5, #0
   177e4:	bne	177d8 <daemon@@Base+0xe6c>
   177e8:	ldr	r3, [r4, #4]
   177ec:	cmp	r3, #0
   177f0:	beq	175d0 <daemon@@Base+0xc64>
   177f4:	ldr	r0, [r4]
   177f8:	bl	1cb08 <argp_parse@@Base+0x1220>
   177fc:	ldr	r0, [r4, #8]
   17800:	bl	1cb08 <argp_parse@@Base+0x1220>
   17804:	b	175d0 <daemon@@Base+0xc64>
   17808:	ldr	r2, [sp, #20]
   1780c:	cmp	r9, r2
   17810:	bcs	17840 <daemon@@Base+0xed4>
   17814:	ldrb	r2, [r9]
   17818:	cmp	r2, r3
   1781c:	beq	17844 <daemon@@Base+0xed8>
   17820:	mov	r2, r9
   17824:	ldr	r0, [sp, #24]
   17828:	b	17838 <daemon@@Base+0xecc>
   1782c:	ldrb	r1, [r2, #1]!
   17830:	cmp	r1, r3
   17834:	beq	17844 <daemon@@Base+0xed8>
   17838:	cmp	r0, r2
   1783c:	bne	1782c <daemon@@Base+0xec0>
   17840:	strb	r3, [r7], #1
   17844:	add	sl, sl, #1
   17848:	b	1777c <daemon@@Base+0xe10>
   1784c:	ldr	r1, [sp, #8]
   17850:	b	17564 <daemon@@Base+0xbf8>
   17854:	ldr	r3, [sp, #44]	; 0x2c
   17858:	b	17590 <daemon@@Base+0xc24>
   1785c:	ldr	r5, [sp, #4]
   17860:	b	176f0 <daemon@@Base+0xd84>
   17864:	movw	r3, #3840	; 0xf00
   17868:	movt	r3, #2
   1786c:	movw	r1, #4008	; 0xfa8
   17870:	movt	r1, #2
   17874:	movw	r0, #4040	; 0xfc8
   17878:	movt	r0, #2
   1787c:	movw	r2, #474	; 0x1da
   17880:	bl	11ae0 <__assert_fail@plt>
   17884:	movw	r3, #3840	; 0xf00
   17888:	movt	r3, #2
   1788c:	movw	r1, #4008	; 0xfa8
   17890:	movt	r1, #2
   17894:	movw	r0, #4076	; 0xfec
   17898:	movt	r0, #2
   1789c:	mov	r2, #476	; 0x1dc
   178a0:	bl	11ae0 <__assert_fail@plt>
   178a4:	movw	r1, #4008	; 0xfa8
   178a8:	movt	r1, #2
   178ac:	ldr	r3, [pc, #104]	; 1791c <daemon@@Base+0xfb0>
   178b0:	movw	r0, #4136	; 0x1028
   178b4:	movt	r0, #2
   178b8:	movw	r2, #970	; 0x3ca
   178bc:	bl	11ae0 <__assert_fail@plt>
   178c0:	movw	r3, #3840	; 0xf00
   178c4:	movt	r3, #2
   178c8:	movw	r1, #4008	; 0xfa8
   178cc:	movt	r1, #2
   178d0:	movw	r0, #4020	; 0xfb4
   178d4:	movt	r0, #2
   178d8:	movw	r2, #450	; 0x1c2
   178dc:	bl	11ae0 <__assert_fail@plt>
   178e0:	movw	r1, #4008	; 0xfa8
   178e4:	movt	r1, #2
   178e8:	ldr	r3, [pc, #44]	; 1791c <daemon@@Base+0xfb0>
   178ec:	movw	r0, #4164	; 0x1044
   178f0:	movt	r0, #2
   178f4:	mov	r2, #972	; 0x3cc
   178f8:	bl	11ae0 <__assert_fail@plt>
   178fc:	movw	r3, #3840	; 0xf00
   17900:	movt	r3, #2
   17904:	movw	r1, #4008	; 0xfa8
   17908:	movt	r1, #2
   1790c:	movw	r0, #4024	; 0xfb8
   17910:	movt	r0, #2
   17914:	mov	r2, #460	; 0x1cc
   17918:	bl	11ae0 <__assert_fail@plt>
   1791c:	andeq	r0, r2, ip, lsl #30
   17920:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17924:	mov	r4, r3
   17928:	ldr	r3, [r0, #20]
   1792c:	cmp	r3, #0
   17930:	ldr	r3, [r0, #16]
   17934:	strd	r6, [sp, #8]
   17938:	strd	r8, [sp, #16]
   1793c:	mov	r8, r2
   17940:	ldr	r2, [r2]
   17944:	strd	sl, [sp, #24]
   17948:	ldr	r7, [r0, #8]
   1794c:	str	lr, [sp, #32]
   17950:	sub	sp, sp, #28
   17954:	ldr	r5, [sp, #64]	; 0x40
   17958:	str	r3, [sp, #8]
   1795c:	moveq	r9, r7
   17960:	str	r7, [sp, #12]
   17964:	str	r2, [sp, #16]
   17968:	str	r1, [sp, #20]
   1796c:	beq	17994 <daemon@@Base+0x1028>
   17970:	mov	r6, r0
   17974:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   17978:	mov	r2, r0
   1797c:	mov	r1, r7
   17980:	ldr	r3, [r6, #20]
   17984:	mov	r0, #6
   17988:	movt	r0, #512	; 0x200
   1798c:	blx	r3
   17990:	mov	r9, r0
   17994:	cmp	r9, #0
   17998:	beq	17b88 <daemon@@Base+0x121c>
   1799c:	mov	r1, #10
   179a0:	mov	r0, r9
   179a4:	bl	116cc <strchrnul@plt>
   179a8:	ldrb	r3, [r0]
   179ac:	mov	r6, r0
   179b0:	cmp	r3, #0
   179b4:	moveq	fp, r3
   179b8:	moveq	r7, r9
   179bc:	beq	17a08 <daemon@@Base+0x109c>
   179c0:	ldr	r3, [sp, #16]
   179c4:	ldrb	sl, [r3]
   179c8:	cmp	sl, #0
   179cc:	beq	17c0c <daemon@@Base+0x12a0>
   179d0:	mov	fp, #0
   179d4:	add	r7, r0, #1
   179d8:	add	fp, fp, #1
   179dc:	mov	r0, r7
   179e0:	mov	r1, #10
   179e4:	bl	116cc <strchrnul@plt>
   179e8:	cmp	fp, sl
   179ec:	bne	179d4 <daemon@@Base+0x1068>
   179f0:	mov	r6, r0
   179f4:	ldr	r3, [r8]
   179f8:	mov	r2, #1
   179fc:	mov	fp, r2
   17a00:	add	r3, r3, r2
   17a04:	str	r3, [r8]
   17a08:	ldr	ip, [r5, #16]
   17a0c:	add	sl, r6, #1
   17a10:	sub	sl, sl, r7
   17a14:	ldr	r1, [r5, #24]
   17a18:	ldr	r3, [r5, #28]
   17a1c:	sub	r1, r3, r1
   17a20:	mov	r0, r3
   17a24:	cmp	r1, ip
   17a28:	bhi	17b74 <daemon@@Base+0x1208>
   17a2c:	ldr	ip, [r5, #8]
   17a30:	ldr	r1, [r5, #20]
   17a34:	cmp	r1, #0
   17a38:	addge	sl, sl, r1
   17a3c:	ldr	r1, [r5, #32]
   17a40:	cmp	sl, ip
   17a44:	bcc	17a64 <daemon@@Base+0x10f8>
   17a48:	cmp	r3, r1
   17a4c:	bcs	17bc4 <daemon@@Base+0x1258>
   17a50:	add	r0, r3, #1
   17a54:	mov	r1, #10
   17a58:	str	r0, [r5, #28]
   17a5c:	strb	r1, [r3]
   17a60:	b	17a7c <daemon@@Base+0x1110>
   17a64:	cmp	r3, r1
   17a68:	bcs	17bf0 <daemon@@Base+0x1284>
   17a6c:	add	r1, r0, #1
   17a70:	mov	r3, #32
   17a74:	str	r1, [r5, #28]
   17a78:	strb	r3, [r0]
   17a7c:	ldrd	r0, [r5, #28]
   17a80:	sub	sl, r6, r7
   17a84:	add	r3, r0, sl
   17a88:	cmp	r1, r3
   17a8c:	bcs	17aa8 <daemon@@Base+0x113c>
   17a90:	mov	r1, sl
   17a94:	mov	r0, r5
   17a98:	bl	1e900 <argp_parse@@Base+0x3018>
   17a9c:	cmp	r0, #0
   17aa0:	beq	17ac0 <daemon@@Base+0x1154>
   17aa4:	ldr	r0, [r5, #28]
   17aa8:	mov	r2, sl
   17aac:	mov	r1, r7
   17ab0:	bl	11714 <memcpy@plt>
   17ab4:	ldr	r3, [r5, #28]
   17ab8:	add	sl, r3, sl
   17abc:	str	sl, [r5, #28]
   17ac0:	ldr	r3, [sp, #12]
   17ac4:	cmp	r3, r9
   17ac8:	beq	17ad4 <daemon@@Base+0x1168>
   17acc:	mov	r0, r9
   17ad0:	bl	1cb08 <argp_parse@@Base+0x1220>
   17ad4:	ldr	r3, [sp, #8]
   17ad8:	cmp	r3, #0
   17adc:	beq	17b24 <daemon@@Base+0x11b8>
   17ae0:	ldr	r2, [r3]
   17ae4:	cmp	r2, #0
   17ae8:	beq	17b24 <daemon@@Base+0x11b8>
   17aec:	mov	r3, r4
   17af0:	ldr	r7, [sp, #8]
   17af4:	ldr	r4, [sp, #20]
   17af8:	mov	r0, r2
   17afc:	mov	r1, r4
   17b00:	str	r5, [sp]
   17b04:	mov	r2, r8
   17b08:	bl	17920 <daemon@@Base+0xfb4>
   17b0c:	ldr	r2, [r7, #16]!
   17b10:	clz	r3, r0
   17b14:	lsr	r3, r3, #5
   17b18:	cmp	r2, #0
   17b1c:	bne	17af8 <daemon@@Base+0x118c>
   17b20:	mov	r4, r3
   17b24:	cmp	r4, #0
   17b28:	mov	r3, fp
   17b2c:	moveq	r3, #0
   17b30:	cmp	r3, #0
   17b34:	beq	17ba8 <daemon@@Base+0x123c>
   17b38:	ldrb	r3, [r6]
   17b3c:	ldr	r2, [sp, #16]
   17b40:	cmp	r3, #0
   17b44:	ldrb	r0, [r2]
   17b48:	beq	17bb4 <daemon@@Base+0x1248>
   17b4c:	add	r4, r0, #1
   17b50:	mov	r0, #1
   17b54:	strb	r4, [r2]
   17b58:	add	sp, sp, #28
   17b5c:	ldrd	r4, [sp]
   17b60:	ldrd	r6, [sp, #8]
   17b64:	ldrd	r8, [sp, #16]
   17b68:	ldrd	sl, [sp, #24]
   17b6c:	add	sp, sp, #32
   17b70:	pop	{pc}		; (ldr pc, [sp], #4)
   17b74:	mov	r0, r5
   17b78:	bl	1e270 <argp_parse@@Base+0x2988>
   17b7c:	ldr	r3, [r5, #28]
   17b80:	mov	r0, r3
   17b84:	b	17a2c <daemon@@Base+0x10c0>
   17b88:	ldr	r3, [sp, #8]
   17b8c:	cmp	r3, #0
   17b90:	beq	17ba8 <daemon@@Base+0x123c>
   17b94:	ldr	r2, [r3]
   17b98:	cmp	r2, #0
   17b9c:	movne	r6, r9
   17ba0:	movne	fp, r6
   17ba4:	bne	17aec <daemon@@Base+0x1180>
   17ba8:	clz	r0, r4
   17bac:	lsr	r0, r0, #5
   17bb0:	b	17b58 <daemon@@Base+0x11ec>
   17bb4:	cmp	r0, #0
   17bb8:	movne	r0, r3
   17bbc:	strbne	r3, [r2]
   17bc0:	b	17b58 <daemon@@Base+0x11ec>
   17bc4:	mov	r1, #1
   17bc8:	mov	r0, r5
   17bcc:	bl	1e900 <argp_parse@@Base+0x3018>
   17bd0:	cmp	r0, #0
   17bd4:	beq	17a7c <daemon@@Base+0x1110>
   17bd8:	ldr	r3, [r5, #28]
   17bdc:	mov	r1, #10
   17be0:	add	r0, r3, #1
   17be4:	str	r0, [r5, #28]
   17be8:	strb	r1, [r3]
   17bec:	b	17a7c <daemon@@Base+0x1110>
   17bf0:	mov	r1, #1
   17bf4:	mov	r0, r5
   17bf8:	bl	1e900 <argp_parse@@Base+0x3018>
   17bfc:	cmp	r0, #0
   17c00:	beq	17a7c <daemon@@Base+0x1110>
   17c04:	ldr	r0, [r5, #28]
   17c08:	b	17a6c <daemon@@Base+0x1100>
   17c0c:	mov	r7, r9
   17c10:	b	179f4 <daemon@@Base+0x1088>
   17c14:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17c18:	subs	r4, r1, #0
   17c1c:	strd	r6, [sp, #8]
   17c20:	mov	r7, r0
   17c24:	mov	r6, r2
   17c28:	strd	r8, [sp, #16]
   17c2c:	strd	sl, [sp, #24]
   17c30:	str	lr, [sp, #32]
   17c34:	sub	sp, sp, #12
   17c38:	beq	17c74 <daemon@@Base+0x1308>
   17c3c:	ldr	r3, [r4, #20]
   17c40:	cmp	r3, #0
   17c44:	beq	17c74 <daemon@@Base+0x1308>
   17c48:	mov	r0, r4
   17c4c:	ldr	r1, [r2, #16]
   17c50:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   17c54:	mov	r2, r0
   17c58:	mov	r1, r7
   17c5c:	ldr	r3, [r4, #20]
   17c60:	mov	r0, #3
   17c64:	movt	r0, #512	; 0x200
   17c68:	blx	r3
   17c6c:	mov	r9, r0
   17c70:	b	17c78 <daemon@@Base+0x130c>
   17c74:	mov	r9, r7
   17c78:	cmp	r9, #0
   17c7c:	beq	17c98 <daemon@@Base+0x132c>
   17c80:	ldrb	r2, [r9]
   17c84:	ldr	r3, [r6, #8]
   17c88:	cmp	r2, #0
   17c8c:	bne	17cc4 <daemon@@Base+0x1358>
   17c90:	mov	r2, #1
   17c94:	str	r2, [r3, #4]
   17c98:	cmp	r7, r9
   17c9c:	beq	17e10 <daemon@@Base+0x14a4>
   17ca0:	mov	r0, r9
   17ca4:	add	sp, sp, #12
   17ca8:	ldrd	r4, [sp]
   17cac:	ldrd	r6, [sp, #8]
   17cb0:	ldrd	r8, [sp, #16]
   17cb4:	ldrd	sl, [sp, #24]
   17cb8:	ldr	lr, [sp, #32]
   17cbc:	add	sp, sp, #36	; 0x24
   17cc0:	b	1cb08 <argp_parse@@Base+0x1220>
   17cc4:	ldr	r3, [r3]
   17cc8:	ldr	r4, [r6, #4]
   17ccc:	cmp	r3, #0
   17cd0:	ldr	r3, [r4, #28]
   17cd4:	beq	17d14 <daemon@@Base+0x13a8>
   17cd8:	ldr	r2, [r4, #32]
   17cdc:	cmp	r2, r3
   17ce0:	bhi	17cfc <daemon@@Base+0x1390>
   17ce4:	mov	r1, #1
   17ce8:	mov	r0, r4
   17cec:	bl	1e900 <argp_parse@@Base+0x3018>
   17cf0:	cmp	r0, #0
   17cf4:	ldrne	r3, [r4, #28]
   17cf8:	beq	17d0c <daemon@@Base+0x13a0>
   17cfc:	add	r1, r3, #1
   17d00:	mov	r2, #10
   17d04:	str	r1, [r4, #28]
   17d08:	strb	r2, [r3]
   17d0c:	ldr	r4, [r6, #4]
   17d10:	ldr	r3, [r4, #28]
   17d14:	movw	r8, #9596	; 0x257c
   17d18:	movt	r8, #3
   17d1c:	ldr	r2, [r4, #16]
   17d20:	ldr	r1, [r4, #24]
   17d24:	ldr	r5, [r8, #24]
   17d28:	sub	r3, r3, r1
   17d2c:	cmp	r3, r2
   17d30:	bhi	17ef4 <daemon@@Base+0x1588>
   17d34:	ldr	r3, [r4, #20]
   17d38:	cmp	r3, #0
   17d3c:	subge	r5, r5, r3
   17d40:	cmp	r5, #0
   17d44:	sub	r5, r5, #1
   17d48:	ble	17d90 <daemon@@Base+0x1424>
   17d4c:	mov	sl, #32
   17d50:	ldr	r3, [r4, #28]
   17d54:	mov	r1, #1
   17d58:	mov	r0, r4
   17d5c:	sub	r5, r5, #1
   17d60:	ldr	r2, [r4, #32]
   17d64:	cmp	r3, r2
   17d68:	bcc	17d7c <daemon@@Base+0x1410>
   17d6c:	bl	1e900 <argp_parse@@Base+0x3018>
   17d70:	cmp	r0, #0
   17d74:	beq	17d88 <daemon@@Base+0x141c>
   17d78:	ldr	r3, [r4, #28]
   17d7c:	add	r2, r3, #1
   17d80:	str	r2, [r4, #28]
   17d84:	strb	sl, [r3]
   17d88:	cmn	r5, #1
   17d8c:	bne	17d50 <daemon@@Base+0x13e4>
   17d90:	ldr	r4, [r6, #4]
   17d94:	ldr	sl, [r8, #24]
   17d98:	ldr	r1, [r4, #16]
   17d9c:	ldr	r3, [r4, #24]
   17da0:	ldr	r5, [r4, #28]
   17da4:	sub	r3, r5, r3
   17da8:	cmp	r3, r1
   17dac:	movls	fp, r4
   17db0:	strls	sl, [r4, #4]
   17db4:	bhi	17eac <daemon@@Base+0x1540>
   17db8:	mov	r0, r9
   17dbc:	str	sl, [fp, #12]
   17dc0:	bl	118e8 <strlen@plt>
   17dc4:	subs	r8, r0, #0
   17dc8:	bne	17e5c <daemon@@Base+0x14f0>
   17dcc:	ldr	r2, [r4, #16]
   17dd0:	ldr	r3, [r4, #24]
   17dd4:	sub	r3, r5, r3
   17dd8:	cmp	r3, r2
   17ddc:	movls	r8, r4
   17de0:	bhi	17e48 <daemon@@Base+0x14dc>
   17de4:	ldr	r3, [r8, #32]
   17de8:	mov	r2, #0
   17dec:	str	r2, [r4, #4]
   17df0:	cmp	r3, r5
   17df4:	bls	17e2c <daemon@@Base+0x14c0>
   17df8:	add	r2, r5, #1
   17dfc:	mov	r3, #10
   17e00:	str	r2, [r8, #28]
   17e04:	strb	r3, [r5]
   17e08:	ldr	r3, [r6, #8]
   17e0c:	b	17c90 <daemon@@Base+0x1324>
   17e10:	add	sp, sp, #12
   17e14:	ldrd	r4, [sp]
   17e18:	ldrd	r6, [sp, #8]
   17e1c:	ldrd	r8, [sp, #16]
   17e20:	ldrd	sl, [sp, #24]
   17e24:	add	sp, sp, #32
   17e28:	pop	{pc}		; (ldr pc, [sp], #4)
   17e2c:	mov	r1, #1
   17e30:	mov	r0, r8
   17e34:	bl	1e900 <argp_parse@@Base+0x3018>
   17e38:	cmp	r0, #0
   17e3c:	ldrne	r5, [r8, #28]
   17e40:	bne	17df8 <daemon@@Base+0x148c>
   17e44:	b	17e08 <daemon@@Base+0x149c>
   17e48:	mov	r0, r4
   17e4c:	bl	1e270 <argp_parse@@Base+0x2988>
   17e50:	ldr	r8, [r6, #4]
   17e54:	ldr	r5, [r8, #28]
   17e58:	b	17de4 <daemon@@Base+0x1478>
   17e5c:	ldr	r2, [r4, #32]
   17e60:	add	r3, r5, r8
   17e64:	cmp	r2, r3
   17e68:	bcs	17e84 <daemon@@Base+0x1518>
   17e6c:	mov	r1, r8
   17e70:	mov	r0, r4
   17e74:	bl	1e900 <argp_parse@@Base+0x3018>
   17e78:	cmp	r0, #0
   17e7c:	beq	17ea0 <daemon@@Base+0x1534>
   17e80:	ldr	r5, [r4, #28]
   17e84:	mov	r2, r8
   17e88:	mov	r0, r5
   17e8c:	mov	r1, r9
   17e90:	bl	11714 <memcpy@plt>
   17e94:	ldr	r3, [r4, #28]
   17e98:	add	r8, r3, r8
   17e9c:	str	r8, [r4, #28]
   17ea0:	ldr	r4, [r6, #4]
   17ea4:	ldr	r5, [r4, #28]
   17ea8:	b	17dcc <daemon@@Base+0x1460>
   17eac:	mov	r0, r4
   17eb0:	str	sl, [sp, #4]
   17eb4:	bl	1e270 <argp_parse@@Base+0x2988>
   17eb8:	ldr	fp, [r6, #4]
   17ebc:	ldr	r2, [sp, #4]
   17ec0:	ldr	sl, [r8, #24]
   17ec4:	ldr	r1, [fp, #16]
   17ec8:	ldr	r3, [fp, #24]
   17ecc:	ldr	r5, [fp, #28]
   17ed0:	str	r2, [r4, #4]
   17ed4:	sub	r3, r5, r3
   17ed8:	cmp	r3, r1
   17edc:	bls	17f00 <daemon@@Base+0x1594>
   17ee0:	mov	r0, fp
   17ee4:	bl	1e270 <argp_parse@@Base+0x2988>
   17ee8:	ldr	r4, [r6, #4]
   17eec:	ldr	r5, [r4, #28]
   17ef0:	b	17db8 <daemon@@Base+0x144c>
   17ef4:	mov	r0, r4
   17ef8:	bl	1e270 <argp_parse@@Base+0x2988>
   17efc:	b	17d34 <daemon@@Base+0x13c8>
   17f00:	mov	r4, fp
   17f04:	b	17db8 <daemon@@Base+0x144c>
   17f08:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17f0c:	strd	r6, [sp, #8]
   17f10:	strd	r8, [sp, #16]
   17f14:	strd	sl, [sp, #24]
   17f18:	add	fp, sp, #32
   17f1c:	str	lr, [sp, #32]
   17f20:	sub	sp, sp, #36	; 0x24
   17f24:	ldr	r3, [r0, #4]
   17f28:	cmp	r3, #0
   17f2c:	str	r3, [fp, #-40]	; 0xffffffd8
   17f30:	beq	1814c <daemon@@Base+0x17e0>
   17f34:	mov	r4, r0
   17f38:	ldr	r0, [r0, #8]
   17f3c:	str	r4, [fp, #-60]	; 0xffffffc4
   17f40:	str	r1, [fp, #-48]	; 0xffffffd0
   17f44:	str	r3, [fp, #-44]	; 0xffffffd4
   17f48:	bl	118e8 <strlen@plt>
   17f4c:	add	r3, r0, #8
   17f50:	ldr	r2, [r4]
   17f54:	bic	r3, r3, #7
   17f58:	sub	sp, sp, r3
   17f5c:	mov	r3, sp
   17f60:	str	r3, [fp, #-56]	; 0xffffffc8
   17f64:	str	r3, [fp, #-52]	; 0xffffffcc
   17f68:	add	r3, r2, #28
   17f6c:	mov	r9, r3
   17f70:	str	r3, [fp, #-64]	; 0xffffffc0
   17f74:	ldr	r8, [r9, #-28]	; 0xffffffe4
   17f78:	ldr	r5, [r9, #-24]	; 0xffffffe8
   17f7c:	ldr	sl, [r9, #-20]	; 0xffffffec
   17f80:	cmp	r5, #0
   17f84:	beq	17fd8 <daemon@@Base+0x166c>
   17f88:	mov	r4, r8
   17f8c:	ldr	r6, [r4, #12]
   17f90:	tst	r6, #8
   17f94:	bne	17fcc <daemon@@Base+0x1660>
   17f98:	ldr	r7, [r4, #4]
   17f9c:	sub	r3, r7, #1
   17fa0:	cmp	r3, #254	; 0xfe
   17fa4:	bhi	17fcc <daemon@@Base+0x1660>
   17fa8:	bl	118c4 <__ctype_b_loc@plt>
   17fac:	ldr	r2, [r0]
   17fb0:	lsl	r3, r7, #1
   17fb4:	ldrh	r3, [r2, r3]
   17fb8:	tst	r3, #16384	; 0x4000
   17fbc:	beq	17fcc <daemon@@Base+0x1660>
   17fc0:	ldrb	r3, [sl]
   17fc4:	cmp	r7, r3
   17fc8:	beq	18168 <daemon@@Base+0x17fc>
   17fcc:	subs	r5, r5, #1
   17fd0:	add	r4, r4, #24
   17fd4:	bne	17f8c <daemon@@Base+0x1620>
   17fd8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17fdc:	add	r9, r9, #28
   17fe0:	subs	r3, r3, #1
   17fe4:	str	r3, [fp, #-44]	; 0xffffffd4
   17fe8:	bne	17f74 <daemon@@Base+0x1608>
   17fec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17ff0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17ff4:	cmp	r3, r2
   17ff8:	bcc	18338 <daemon@@Base+0x19cc>
   17ffc:	ldr	r6, [fp, #-64]	; 0xffffffc0
   18000:	movw	r3, #4236	; 0x108c
   18004:	movt	r3, #2
   18008:	str	r3, [fp, #-44]	; 0xffffffd4
   1800c:	movw	r3, #4224	; 0x1080
   18010:	movt	r3, #2
   18014:	str	r3, [fp, #-52]	; 0xffffffcc
   18018:	ldr	r8, [r6, #-28]	; 0xffffffe4
   1801c:	ldr	r5, [r6, #-24]	; 0xffffffe8
   18020:	ldr	r7, [r6, #-20]	; 0xffffffec
   18024:	cmp	r5, #0
   18028:	movne	r4, r8
   1802c:	beq	1807c <daemon@@Base+0x1710>
   18030:	ldr	r9, [r4, #12]
   18034:	tst	r9, #8
   18038:	bne	18070 <daemon@@Base+0x1704>
   1803c:	ldr	sl, [r4, #4]
   18040:	sub	r3, sl, #1
   18044:	cmp	r3, #254	; 0xfe
   18048:	bhi	18070 <daemon@@Base+0x1704>
   1804c:	bl	118c4 <__ctype_b_loc@plt>
   18050:	ldr	r2, [r0]
   18054:	lsl	r3, sl, #1
   18058:	ldrh	r3, [r2, r3]
   1805c:	tst	r3, #16384	; 0x4000
   18060:	beq	18070 <daemon@@Base+0x1704>
   18064:	ldrb	r3, [r7]
   18068:	cmp	sl, r3
   1806c:	beq	181b0 <daemon@@Base+0x1844>
   18070:	subs	r5, r5, #1
   18074:	add	r4, r4, #24
   18078:	bne	18030 <daemon@@Base+0x16c4>
   1807c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18080:	add	r6, r6, #28
   18084:	subs	r3, r3, #1
   18088:	str	r3, [fp, #-40]	; 0xffffffd8
   1808c:	bne	18018 <daemon@@Base+0x16ac>
   18090:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18094:	ldm	r3, {r7, r8}
   18098:	cmp	r8, #0
   1809c:	beq	1814c <daemon@@Base+0x17e0>
   180a0:	movw	sl, #4264	; 0x10a8
   180a4:	movt	sl, #2
   180a8:	movw	r9, #4248	; 0x1098
   180ac:	movt	r9, #2
   180b0:	str	sl, [fp, #-40]	; 0xffffffd8
   180b4:	movw	r3, #4276	; 0x10b4
   180b8:	movt	r3, #2
   180bc:	ldr	sl, [fp, #-48]	; 0xffffffd0
   180c0:	add	r7, r7, #28
   180c4:	str	r3, [fp, #-44]	; 0xffffffd4
   180c8:	ldr	r6, [r7, #-28]	; 0xffffffe4
   180cc:	ldr	r5, [r7, #-24]	; 0xffffffe8
   180d0:	cmp	r5, #0
   180d4:	movne	r4, r6
   180d8:	beq	18140 <daemon@@Base+0x17d4>
   180dc:	ldr	r2, [r4]
   180e0:	cmp	r2, #0
   180e4:	beq	18134 <daemon@@Base+0x17c8>
   180e8:	ldr	r1, [r4, #12]
   180ec:	tst	r1, #4
   180f0:	moveq	r6, r4
   180f4:	tst	r1, #2
   180f8:	bne	18134 <daemon@@Base+0x17c8>
   180fc:	ldr	r3, [r4, #8]
   18100:	ldr	r0, [r6, #12]
   18104:	cmp	r3, #0
   18108:	orr	r1, r1, r0
   1810c:	and	r0, r1, #16
   18110:	beq	1818c <daemon@@Base+0x1820>
   18114:	cmp	r0, #0
   18118:	bne	18134 <daemon@@Base+0x17c8>
   1811c:	tst	r1, #1
   18120:	movne	r1, r9
   18124:	movne	r0, sl
   18128:	ldreq	r1, [fp, #-40]	; 0xffffffd8
   1812c:	moveq	r0, sl
   18130:	bl	1e920 <argp_parse@@Base+0x3038>
   18134:	subs	r5, r5, #1
   18138:	add	r4, r4, #24
   1813c:	bne	180dc <daemon@@Base+0x1770>
   18140:	subs	r8, r8, #1
   18144:	add	r7, r7, #28
   18148:	bne	180c8 <daemon@@Base+0x175c>
   1814c:	sub	sp, fp, #32
   18150:	ldrd	r4, [sp]
   18154:	ldrd	r6, [sp, #8]
   18158:	ldrd	r8, [sp, #16]
   1815c:	ldrd	sl, [sp, #24]
   18160:	add	sp, sp, #32
   18164:	pop	{pc}		; (ldr pc, [sp], #4)
   18168:	tst	r6, #4
   1816c:	moveq	r8, r4
   18170:	tst	r6, #2
   18174:	bne	18184 <daemon@@Base+0x1818>
   18178:	ldr	r3, [r4, #8]
   1817c:	cmp	r3, #0
   18180:	beq	181fc <daemon@@Base+0x1890>
   18184:	add	sl, sl, #1
   18188:	b	17fcc <daemon@@Base+0x1660>
   1818c:	cmp	r0, #0
   18190:	bne	18134 <daemon@@Base+0x17c8>
   18194:	ldr	r3, [r6, #8]
   18198:	cmp	r3, #0
   1819c:	bne	1811c <daemon@@Base+0x17b0>
   181a0:	mov	r0, sl
   181a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181a8:	bl	1e920 <argp_parse@@Base+0x3038>
   181ac:	b	18134 <daemon@@Base+0x17c8>
   181b0:	tst	r9, #4
   181b4:	moveq	r8, r4
   181b8:	tst	r9, #2
   181bc:	bne	181f4 <daemon@@Base+0x1888>
   181c0:	ldr	r3, [r4, #8]
   181c4:	cmp	r3, #0
   181c8:	beq	18228 <daemon@@Base+0x18bc>
   181cc:	ldr	r2, [r8, #12]
   181d0:	orr	r9, r9, r2
   181d4:	tst	r9, #16
   181d8:	bne	181f4 <daemon@@Base+0x1888>
   181dc:	tst	r9, #1
   181e0:	beq	18238 <daemon@@Base+0x18cc>
   181e4:	mov	r2, sl
   181e8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   181ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   181f0:	bl	1e920 <argp_parse@@Base+0x3038>
   181f4:	add	r7, r7, #1
   181f8:	b	18070 <daemon@@Base+0x1704>
   181fc:	ldr	r3, [r8, #8]
   18200:	cmp	r3, #0
   18204:	bne	18184 <daemon@@Base+0x1818>
   18208:	ldr	r3, [r8, #12]
   1820c:	orr	r6, r6, r3
   18210:	tst	r6, #16
   18214:	bne	18184 <daemon@@Base+0x1818>
   18218:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1821c:	strb	r7, [r3], #1
   18220:	str	r3, [fp, #-52]	; 0xffffffcc
   18224:	b	18184 <daemon@@Base+0x1818>
   18228:	ldr	r3, [r8, #8]
   1822c:	cmp	r3, #0
   18230:	beq	181f4 <daemon@@Base+0x1888>
   18234:	b	181cc <daemon@@Base+0x1860>
   18238:	mov	r0, r3
   1823c:	str	r3, [fp, #-56]	; 0xffffffc8
   18240:	bl	118e8 <strlen@plt>
   18244:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18248:	mov	r9, r0
   1824c:	ldr	r0, [r3, #16]
   18250:	ldr	r2, [r3, #24]
   18254:	ldr	r1, [r3, #28]
   18258:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1825c:	sub	r2, r1, r2
   18260:	cmp	r2, r0
   18264:	bhi	18320 <daemon@@Base+0x19b4>
   18268:	ldr	lr, [fp, #-48]	; 0xffffffd0
   1826c:	ldr	r0, [lr, #8]
   18270:	ldr	r2, [lr, #20]
   18274:	ldr	ip, [lr, #32]
   18278:	bic	r2, r2, r2, asr #31
   1827c:	add	r2, r2, #6
   18280:	add	r2, r2, r9
   18284:	cmp	r2, r0
   18288:	bcs	182dc <daemon@@Base+0x1970>
   1828c:	cmp	r1, ip
   18290:	bcc	182b8 <daemon@@Base+0x194c>
   18294:	mov	r1, #1
   18298:	mov	r0, lr
   1829c:	str	r3, [fp, #-56]	; 0xffffffc8
   182a0:	mov	r9, lr
   182a4:	bl	1e900 <argp_parse@@Base+0x3018>
   182a8:	cmp	r0, #0
   182ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   182b0:	beq	182cc <daemon@@Base+0x1960>
   182b4:	ldr	r1, [r9, #28]
   182b8:	add	r2, r1, #1
   182bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   182c0:	str	r2, [r0, #28]
   182c4:	mov	r2, #32
   182c8:	strb	r2, [r1]
   182cc:	ldrd	r0, [fp, #-48]	; 0xffffffd0
   182d0:	ldr	r2, [r4, #4]
   182d4:	bl	1e920 <argp_parse@@Base+0x3038>
   182d8:	b	181f4 <daemon@@Base+0x1888>
   182dc:	cmp	r1, ip
   182e0:	bcc	18308 <daemon@@Base+0x199c>
   182e4:	mov	r1, #1
   182e8:	mov	r0, lr
   182ec:	str	r3, [fp, #-56]	; 0xffffffc8
   182f0:	mov	r9, lr
   182f4:	bl	1e900 <argp_parse@@Base+0x3018>
   182f8:	cmp	r0, #0
   182fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18300:	beq	182cc <daemon@@Base+0x1960>
   18304:	ldr	r1, [r9, #28]
   18308:	add	r0, r1, #1
   1830c:	mov	r2, #10
   18310:	ldr	ip, [fp, #-48]	; 0xffffffd0
   18314:	str	r0, [ip, #28]
   18318:	strb	r2, [r1]
   1831c:	b	182cc <daemon@@Base+0x1960>
   18320:	ldr	sl, [fp, #-48]	; 0xffffffd0
   18324:	mov	r0, sl
   18328:	bl	1e270 <argp_parse@@Base+0x2988>
   1832c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18330:	ldr	r1, [sl, #28]
   18334:	b	18268 <daemon@@Base+0x18fc>
   18338:	mov	r2, r3
   1833c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18340:	movw	r1, #4216	; 0x1078
   18344:	movt	r1, #2
   18348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1834c:	strb	r0, [r3]
   18350:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18354:	bl	1e920 <argp_parse@@Base+0x3038>
   18358:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1835c:	ldr	r3, [r2, #4]
   18360:	cmp	r3, #0
   18364:	str	r3, [fp, #-40]	; 0xffffffd8
   18368:	beq	1814c <daemon@@Base+0x17e0>
   1836c:	ldr	r2, [r2]
   18370:	add	r3, r2, #28
   18374:	str	r3, [fp, #-64]	; 0xffffffc0
   18378:	b	17ffc <daemon@@Base+0x1690>
   1837c:	ldr	r3, [r1, #12]
   18380:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18384:	mov	r5, r0
   18388:	ldr	r4, [r1, #4]
   1838c:	strd	r6, [sp, #8]
   18390:	mov	r6, r1
   18394:	str	r8, [sp, #16]
   18398:	cmp	r3, #0
   1839c:	str	lr, [sp, #20]
   183a0:	beq	184cc <daemon@@Base+0x1b60>
   183a4:	ldr	r2, [r1]
   183a8:	ldr	r3, [r1, #8]
   183ac:	ldr	r7, [r2, #16]
   183b0:	ldr	r8, [r3]
   183b4:	ldr	r3, [r3, #4]
   183b8:	cmp	r3, #0
   183bc:	cmpne	r8, #0
   183c0:	bne	18474 <daemon@@Base+0x1b08>
   183c4:	cmp	r7, #0
   183c8:	beq	183e4 <daemon@@Base+0x1a78>
   183cc:	ldr	r0, [r7]
   183d0:	cmp	r0, #0
   183d4:	beq	183e4 <daemon@@Base+0x1a78>
   183d8:	ldrb	r3, [r0]
   183dc:	cmp	r3, #0
   183e0:	bne	1853c <daemon@@Base+0x1bd0>
   183e4:	ldr	r2, [r4, #16]
   183e8:	ldr	r1, [r4, #24]
   183ec:	ldr	r3, [r4, #28]
   183f0:	sub	r3, r3, r1
   183f4:	mov	r1, #0
   183f8:	cmp	r3, r2
   183fc:	str	r1, [r6, #12]
   18400:	bhi	18530 <daemon@@Base+0x1bc4>
   18404:	ldr	r3, [r4, #20]
   18408:	cmp	r3, #0
   1840c:	subge	r5, r5, r3
   18410:	cmp	r5, #0
   18414:	sub	r5, r5, #1
   18418:	ble	18460 <daemon@@Base+0x1af4>
   1841c:	mov	r6, #32
   18420:	ldr	r3, [r4, #28]
   18424:	mov	r1, #1
   18428:	mov	r0, r4
   1842c:	sub	r5, r5, #1
   18430:	ldr	r2, [r4, #32]
   18434:	cmp	r3, r2
   18438:	bcc	1844c <daemon@@Base+0x1ae0>
   1843c:	bl	1e900 <argp_parse@@Base+0x3018>
   18440:	cmp	r0, #0
   18444:	beq	18458 <daemon@@Base+0x1aec>
   18448:	ldr	r3, [r4, #28]
   1844c:	add	r2, r3, #1
   18450:	str	r2, [r4, #28]
   18454:	strb	r6, [r3]
   18458:	cmn	r5, #1
   1845c:	bne	18420 <daemon@@Base+0x1ab4>
   18460:	ldrd	r4, [sp]
   18464:	ldrd	r6, [sp, #8]
   18468:	ldr	r8, [sp, #16]
   1846c:	add	sp, sp, #20
   18470:	pop	{pc}		; (ldr pc, [sp], #4)
   18474:	ldr	r2, [r2, #12]
   18478:	ldr	r3, [r8, #12]
   1847c:	cmp	r2, r3
   18480:	beq	183c4 <daemon@@Base+0x1a58>
   18484:	ldr	r3, [r4, #28]
   18488:	ldr	r2, [r4, #32]
   1848c:	cmp	r3, r2
   18490:	bcc	184ac <daemon@@Base+0x1b40>
   18494:	mov	r1, #1
   18498:	mov	r0, r4
   1849c:	bl	1e900 <argp_parse@@Base+0x3018>
   184a0:	cmp	r0, #0
   184a4:	ldrne	r3, [r4, #28]
   184a8:	beq	184bc <daemon@@Base+0x1b50>
   184ac:	add	r1, r3, #1
   184b0:	mov	r2, #10
   184b4:	str	r1, [r4, #28]
   184b8:	strb	r2, [r3]
   184bc:	cmp	r7, #0
   184c0:	ldr	r4, [r6, #4]
   184c4:	bne	183cc <daemon@@Base+0x1a60>
   184c8:	b	183e4 <daemon@@Base+0x1a78>
   184cc:	ldr	r3, [r4, #28]
   184d0:	ldr	r1, [r4, #32]
   184d4:	add	r2, r3, #2
   184d8:	cmp	r1, r2
   184dc:	bcs	184f8 <daemon@@Base+0x1b8c>
   184e0:	mov	r1, #2
   184e4:	mov	r0, r4
   184e8:	bl	1e900 <argp_parse@@Base+0x3018>
   184ec:	cmp	r0, #0
   184f0:	beq	18514 <daemon@@Base+0x1ba8>
   184f4:	ldr	r3, [r4, #28]
   184f8:	movw	r2, #4284	; 0x10bc
   184fc:	movt	r2, #2
   18500:	ldrh	r2, [r2]
   18504:	strh	r2, [r3]
   18508:	ldr	r3, [r4, #28]
   1850c:	add	r3, r3, #2
   18510:	str	r3, [r4, #28]
   18514:	ldr	r4, [r6, #4]
   18518:	ldr	r2, [r4, #16]
   1851c:	ldr	r1, [r4, #24]
   18520:	ldr	r3, [r4, #28]
   18524:	sub	r3, r3, r1
   18528:	cmp	r3, r2
   1852c:	bls	18404 <daemon@@Base+0x1a98>
   18530:	mov	r0, r4
   18534:	bl	1e270 <argp_parse@@Base+0x2988>
   18538:	b	18404 <daemon@@Base+0x1a98>
   1853c:	cmp	r8, #0
   18540:	beq	18570 <daemon@@Base+0x1c04>
   18544:	ldr	r3, [r8, #16]
   18548:	cmp	r3, r7
   1854c:	beq	183e4 <daemon@@Base+0x1a78>
   18550:	cmp	r3, #0
   18554:	beq	18570 <daemon@@Base+0x1c04>
   18558:	ldr	r3, [r3, #12]
   1855c:	cmp	r3, #0
   18560:	cmpne	r7, r3
   18564:	bne	18558 <daemon@@Base+0x1bec>
   18568:	cmp	r7, r3
   1856c:	beq	183e4 <daemon@@Base+0x1a78>
   18570:	mov	r2, r6
   18574:	ldr	r1, [r7, #16]
   18578:	ldr	r7, [r4, #12]
   1857c:	bl	17c14 <daemon@@Base+0x12a8>
   18580:	ldr	r8, [r6, #4]
   18584:	ldr	r2, [r8, #16]
   18588:	ldr	r1, [r8, #24]
   1858c:	ldr	r3, [r8, #28]
   18590:	sub	r3, r3, r1
   18594:	cmp	r3, r2
   18598:	movls	r4, r8
   1859c:	bhi	185a8 <daemon@@Base+0x1c3c>
   185a0:	str	r7, [r8, #12]
   185a4:	b	183f4 <daemon@@Base+0x1a88>
   185a8:	mov	r0, r8
   185ac:	bl	1e270 <argp_parse@@Base+0x2988>
   185b0:	ldr	r4, [r6, #4]
   185b4:	ldr	r2, [r4, #16]
   185b8:	ldr	r1, [r4, #24]
   185bc:	ldr	r3, [r4, #28]
   185c0:	sub	r3, r3, r1
   185c4:	b	185a0 <daemon@@Base+0x1c34>
   185c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   185cc:	strd	r6, [sp, #8]
   185d0:	mov	r7, r0
   185d4:	ldr	r6, [r0, #12]
   185d8:	strd	r8, [sp, #16]
   185dc:	mov	r8, r2
   185e0:	strd	sl, [sp, #24]
   185e4:	mov	sl, r3
   185e8:	mov	fp, r1
   185ec:	ldr	r3, [r0, #16]
   185f0:	str	lr, [sp, #32]
   185f4:	sub	sp, sp, #28
   185f8:	cmp	r6, #0
   185fc:	ldr	r5, [sp, #68]	; 0x44
   18600:	str	r3, [sp, #8]
   18604:	ldr	r3, [r0, #20]
   18608:	beq	18978 <daemon@@Base+0x200c>
   1860c:	mov	r1, #11
   18610:	mov	r0, r6
   18614:	str	r3, [sp, #12]
   18618:	bl	11900 <strchr@plt>
   1861c:	cmp	r8, #0
   18620:	mov	r9, r0
   18624:	ldr	r3, [sp, #12]
   18628:	bne	18874 <daemon@@Base+0x1f08>
   1862c:	cmp	r0, #0
   18630:	beq	18b74 <daemon@@Base+0x2208>
   18634:	subs	r1, r0, r6
   18638:	movne	r4, #1
   1863c:	moveq	r4, #0
   18640:	cmp	r3, #0
   18644:	str	r1, [sp, #20]
   18648:	beq	18b18 <daemon@@Base+0x21ac>
   1864c:	cmp	r1, #0
   18650:	beq	18b68 <daemon@@Base+0x21fc>
   18654:	mov	r0, r6
   18658:	mov	r4, #1
   1865c:	bl	116fc <strndup@plt>
   18660:	adds	r3, r0, #0
   18664:	mov	r6, r0
   18668:	movne	r3, #1
   1866c:	str	r3, [sp, #16]
   18670:	mov	r1, fp
   18674:	mov	r0, r7
   18678:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   1867c:	mov	r2, r0
   18680:	mov	r1, r6
   18684:	ldr	r3, [r7, #20]
   18688:	mov	r0, #1
   1868c:	movt	r0, #512	; 0x200
   18690:	str	r2, [sp, #12]
   18694:	blx	r3
   18698:	subs	r9, r0, #0
   1869c:	moveq	r4, r9
   186a0:	beq	18730 <daemon@@Base+0x1dc4>
   186a4:	cmp	r6, r9
   186a8:	movne	r4, #0
   186ac:	andeq	r4, r4, #1
   186b0:	cmp	sl, #0
   186b4:	ldr	r2, [r5, #28]
   186b8:	bne	189c0 <daemon@@Base+0x2054>
   186bc:	cmp	r4, #0
   186c0:	beq	18918 <daemon@@Base+0x1fac>
   186c4:	ldr	r3, [sp, #20]
   186c8:	ldr	r0, [r5, #32]
   186cc:	add	r1, r2, r3
   186d0:	cmp	r0, r1
   186d4:	bcs	188d0 <daemon@@Base+0x1f64>
   186d8:	mov	r1, r3
   186dc:	mov	r0, r5
   186e0:	bl	1e900 <argp_parse@@Base+0x3018>
   186e4:	cmp	r0, #0
   186e8:	ldr	r2, [r5, #28]
   186ec:	bne	188d0 <daemon@@Base+0x1f64>
   186f0:	ldr	r0, [r5, #16]
   186f4:	ldr	r1, [r5, #24]
   186f8:	sub	r2, r2, r1
   186fc:	cmp	r2, r0
   18700:	bhi	18a08 <daemon@@Base+0x209c>
   18704:	ldr	r1, [r5, #4]
   18708:	ldr	r2, [r5, #20]
   1870c:	bic	r2, r2, r2, asr #31
   18710:	cmp	r1, r2
   18714:	bcc	189e4 <daemon@@Base+0x2078>
   18718:	cmp	r9, r6
   1871c:	moveq	r4, #1
   18720:	beq	18730 <daemon@@Base+0x1dc4>
   18724:	mov	r0, r9
   18728:	mov	r4, #1
   1872c:	bl	1cb08 <argp_parse@@Base+0x1220>
   18730:	ldr	r3, [sp, #16]
   18734:	cmp	r3, #0
   18738:	beq	18750 <daemon@@Base+0x1de4>
   1873c:	ldr	r3, [r7, #20]
   18740:	cmp	r3, #0
   18744:	beq	187d0 <daemon@@Base+0x1e64>
   18748:	mov	r0, r6
   1874c:	bl	1cb08 <argp_parse@@Base+0x1220>
   18750:	cmp	r8, #0
   18754:	beq	187d0 <daemon@@Base+0x1e64>
   18758:	ldr	r3, [r7, #20]
   1875c:	cmp	r3, #0
   18760:	beq	187d0 <daemon@@Base+0x1e64>
   18764:	mov	r0, #4
   18768:	movt	r0, #512	; 0x200
   1876c:	ldr	r2, [sp, #12]
   18770:	mov	r1, #0
   18774:	blx	r3
   18778:	subs	r6, r0, #0
   1877c:	beq	187d0 <daemon@@Base+0x1e64>
   18780:	orrs	r3, sl, r4
   18784:	bne	18aa4 <daemon@@Base+0x2138>
   18788:	mov	r0, r6
   1878c:	bl	118e8 <strlen@plt>
   18790:	subs	r4, r0, #0
   18794:	bne	18a5c <daemon@@Base+0x20f0>
   18798:	mov	r0, r6
   1879c:	bl	1cb08 <argp_parse@@Base+0x1220>
   187a0:	ldr	r2, [r5, #16]
   187a4:	ldr	r1, [r5, #24]
   187a8:	ldr	r3, [r5, #28]
   187ac:	sub	r3, r3, r1
   187b0:	cmp	r3, r2
   187b4:	bhi	18af0 <daemon@@Base+0x2184>
   187b8:	ldr	r2, [r5, #4]
   187bc:	ldr	r3, [r5, #20]
   187c0:	bic	r3, r3, r3, asr #31
   187c4:	cmp	r2, r3
   187c8:	bcc	18ac8 <daemon@@Base+0x215c>
   187cc:	mov	r4, #1
   187d0:	ldr	r7, [sp, #8]
   187d4:	cmp	r7, #0
   187d8:	beq	18854 <daemon@@Base+0x1ee8>
   187dc:	ldr	r3, [r7]
   187e0:	cmp	r3, #0
   187e4:	beq	18854 <daemon@@Base+0x1ee8>
   187e8:	ldr	r2, [sp, #64]	; 0x40
   187ec:	eor	r6, r2, #1
   187f0:	eor	r2, r4, #1
   187f4:	orr	r2, r2, r6
   187f8:	and	r6, r6, #1
   187fc:	tst	r2, #1
   18800:	beq	18b28 <daemon@@Base+0x21bc>
   18804:	ldr	r9, [sp, #64]	; 0x40
   18808:	orrs	r2, r4, sl
   1880c:	mov	r0, r3
   18810:	str	r9, [sp]
   18814:	movne	r3, #1
   18818:	moveq	r3, #0
   1881c:	str	r5, [sp, #4]
   18820:	mov	r2, r8
   18824:	mov	r1, fp
   18828:	bl	185c8 <daemon@@Base+0x1c5c>
   1882c:	ldr	r3, [r7, #16]
   18830:	orr	r4, r4, r0
   18834:	add	r7, r7, #16
   18838:	cmp	r3, #0
   1883c:	beq	18854 <daemon@@Base+0x1ee8>
   18840:	cmp	r4, #0
   18844:	movne	r2, r6
   18848:	moveq	r2, #1
   1884c:	cmp	r2, #0
   18850:	bne	18808 <daemon@@Base+0x1e9c>
   18854:	mov	r0, r4
   18858:	add	sp, sp, #28
   1885c:	ldrd	r4, [sp]
   18860:	ldrd	r6, [sp, #8]
   18864:	ldrd	r8, [sp, #16]
   18868:	ldrd	sl, [sp, #24]
   1886c:	add	sp, sp, #32
   18870:	pop	{pc}		; (ldr pc, [sp], #4)
   18874:	cmp	r0, #0
   18878:	beq	18afc <daemon@@Base+0x2190>
   1887c:	cmp	r3, #0
   18880:	add	r6, r0, #1
   18884:	movne	r1, fp
   18888:	movne	r0, r7
   1888c:	beq	188f4 <daemon@@Base+0x1f88>
   18890:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   18894:	ldr	r3, [r7, #20]
   18898:	str	r0, [sp, #12]
   1889c:	mov	r0, #2
   188a0:	movt	r0, #512	; 0x200
   188a4:	mov	r1, r6
   188a8:	ldr	r2, [sp, #12]
   188ac:	blx	r3
   188b0:	subs	r9, r0, #0
   188b4:	moveq	r4, r9
   188b8:	beq	18750 <daemon@@Base+0x1de4>
   188bc:	mov	r3, #0
   188c0:	mov	r4, r3
   188c4:	str	r3, [sp, #16]
   188c8:	str	r3, [sp, #20]
   188cc:	b	186a4 <daemon@@Base+0x1d38>
   188d0:	ldr	r4, [sp, #20]
   188d4:	mov	r0, r2
   188d8:	mov	r1, r6
   188dc:	mov	r2, r4
   188e0:	bl	11714 <memcpy@plt>
   188e4:	ldr	r2, [r5, #28]
   188e8:	add	r2, r2, r4
   188ec:	str	r2, [r5, #28]
   188f0:	b	186f0 <daemon@@Base+0x1d84>
   188f4:	cmp	r6, #0
   188f8:	moveq	r4, r6
   188fc:	beq	187d0 <daemon@@Base+0x1e64>
   18900:	cmp	sl, #0
   18904:	ldr	r2, [r5, #28]
   18908:	bne	189a8 <daemon@@Base+0x203c>
   1890c:	mov	r9, r6
   18910:	str	sl, [sp, #12]
   18914:	str	sl, [sp, #16]
   18918:	mov	r0, r9
   1891c:	str	r2, [sp, #20]
   18920:	bl	118e8 <strlen@plt>
   18924:	subs	r4, r0, #0
   18928:	ldr	r2, [sp, #20]
   1892c:	beq	186f0 <daemon@@Base+0x1d84>
   18930:	ldr	r0, [r5, #32]
   18934:	add	r1, r2, r4
   18938:	cmp	r0, r1
   1893c:	bcs	18958 <daemon@@Base+0x1fec>
   18940:	mov	r1, r4
   18944:	mov	r0, r5
   18948:	bl	1e900 <argp_parse@@Base+0x3018>
   1894c:	cmp	r0, #0
   18950:	ldr	r2, [r5, #28]
   18954:	beq	186f0 <daemon@@Base+0x1d84>
   18958:	mov	r0, r2
   1895c:	mov	r1, r9
   18960:	mov	r2, r4
   18964:	bl	11714 <memcpy@plt>
   18968:	ldr	r2, [r5, #28]
   1896c:	add	r2, r2, r4
   18970:	str	r2, [r5, #28]
   18974:	b	186f0 <daemon@@Base+0x1d84>
   18978:	cmp	r3, #0
   1897c:	beq	18b10 <daemon@@Base+0x21a4>
   18980:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   18984:	mov	r2, #1
   18988:	movt	r2, #512	; 0x200
   1898c:	str	r0, [sp, #12]
   18990:	cmp	r8, #0
   18994:	mov	r0, #2
   18998:	movt	r0, #512	; 0x200
   1899c:	moveq	r0, r2
   189a0:	ldr	r3, [r7, #20]
   189a4:	b	188a4 <daemon@@Base+0x1f38>
   189a8:	mov	r3, #0
   189ac:	mov	r9, r6
   189b0:	mov	r4, r3
   189b4:	str	r3, [sp, #12]
   189b8:	str	r3, [sp, #16]
   189bc:	str	r3, [sp, #20]
   189c0:	ldr	r1, [r5, #32]
   189c4:	cmp	r1, r2
   189c8:	bls	18a14 <daemon@@Base+0x20a8>
   189cc:	add	r0, r2, #1
   189d0:	mov	r1, #10
   189d4:	str	r0, [r5, #28]
   189d8:	strb	r1, [r2]
   189dc:	ldr	r2, [r5, #28]
   189e0:	b	186bc <daemon@@Base+0x1d50>
   189e4:	ldr	r2, [r5, #28]
   189e8:	ldr	r1, [r5, #32]
   189ec:	cmp	r2, r1
   189f0:	bcs	18a30 <daemon@@Base+0x20c4>
   189f4:	add	r0, r2, #1
   189f8:	mov	r1, #10
   189fc:	str	r0, [r5, #28]
   18a00:	strb	r1, [r2]
   18a04:	b	18718 <daemon@@Base+0x1dac>
   18a08:	mov	r0, r5
   18a0c:	bl	1e270 <argp_parse@@Base+0x2988>
   18a10:	b	18704 <daemon@@Base+0x1d98>
   18a14:	mov	r1, #1
   18a18:	mov	r0, r5
   18a1c:	bl	1e900 <argp_parse@@Base+0x3018>
   18a20:	cmp	r0, #0
   18a24:	ldr	r2, [r5, #28]
   18a28:	bne	189cc <daemon@@Base+0x2060>
   18a2c:	b	186bc <daemon@@Base+0x1d50>
   18a30:	mov	r1, #1
   18a34:	mov	r0, r5
   18a38:	bl	1e900 <argp_parse@@Base+0x3018>
   18a3c:	cmp	r0, #0
   18a40:	beq	18718 <daemon@@Base+0x1dac>
   18a44:	ldr	r2, [r5, #28]
   18a48:	mov	r1, #10
   18a4c:	add	r0, r2, #1
   18a50:	str	r0, [r5, #28]
   18a54:	strb	r1, [r2]
   18a58:	b	18718 <daemon@@Base+0x1dac>
   18a5c:	ldr	r0, [r5, #28]
   18a60:	ldr	r2, [r5, #32]
   18a64:	add	r3, r0, r4
   18a68:	cmp	r2, r3
   18a6c:	bcs	18a88 <daemon@@Base+0x211c>
   18a70:	mov	r1, r4
   18a74:	mov	r0, r5
   18a78:	bl	1e900 <argp_parse@@Base+0x3018>
   18a7c:	cmp	r0, #0
   18a80:	beq	18798 <daemon@@Base+0x1e2c>
   18a84:	ldr	r0, [r5, #28]
   18a88:	mov	r2, r4
   18a8c:	mov	r1, r6
   18a90:	bl	11714 <memcpy@plt>
   18a94:	ldr	r3, [r5, #28]
   18a98:	add	r4, r3, r4
   18a9c:	str	r4, [r5, #28]
   18aa0:	b	18798 <daemon@@Base+0x1e2c>
   18aa4:	ldr	r3, [r5, #28]
   18aa8:	ldr	r2, [r5, #32]
   18aac:	cmp	r3, r2
   18ab0:	bcs	18b4c <daemon@@Base+0x21e0>
   18ab4:	add	r1, r3, #1
   18ab8:	mov	r2, #10
   18abc:	str	r1, [r5, #28]
   18ac0:	strb	r2, [r3]
   18ac4:	b	18788 <daemon@@Base+0x1e1c>
   18ac8:	ldr	r3, [r5, #28]
   18acc:	ldr	r2, [r5, #32]
   18ad0:	cmp	r3, r2
   18ad4:	bcs	18b30 <daemon@@Base+0x21c4>
   18ad8:	add	r1, r3, #1
   18adc:	mov	r2, #10
   18ae0:	mov	r4, #1
   18ae4:	str	r1, [r5, #28]
   18ae8:	strb	r2, [r3]
   18aec:	b	187d0 <daemon@@Base+0x1e64>
   18af0:	mov	r0, r5
   18af4:	bl	1e270 <argp_parse@@Base+0x2988>
   18af8:	b	187b8 <daemon@@Base+0x1e4c>
   18afc:	cmp	r3, #0
   18b00:	movne	r1, fp
   18b04:	movne	r0, r7
   18b08:	movne	r6, r9
   18b0c:	bne	18890 <daemon@@Base+0x1f24>
   18b10:	mov	r4, r3
   18b14:	b	187d0 <daemon@@Base+0x1e64>
   18b18:	mov	r9, r6
   18b1c:	str	r8, [sp, #12]
   18b20:	str	r4, [sp, #16]
   18b24:	b	186a4 <daemon@@Base+0x1d38>
   18b28:	mov	r4, #1
   18b2c:	b	18854 <daemon@@Base+0x1ee8>
   18b30:	mov	r1, #1
   18b34:	mov	r0, r5
   18b38:	bl	1e900 <argp_parse@@Base+0x3018>
   18b3c:	cmp	r0, #0
   18b40:	beq	187cc <daemon@@Base+0x1e60>
   18b44:	ldr	r3, [r5, #28]
   18b48:	b	18ad8 <daemon@@Base+0x216c>
   18b4c:	mov	r1, #1
   18b50:	mov	r0, r5
   18b54:	bl	1e900 <argp_parse@@Base+0x3018>
   18b58:	cmp	r0, #0
   18b5c:	beq	18788 <daemon@@Base+0x1e1c>
   18b60:	ldr	r3, [r5, #28]
   18b64:	b	18ab4 <daemon@@Base+0x2148>
   18b68:	ldr	r4, [sp, #20]
   18b6c:	str	r4, [sp, #16]
   18b70:	b	18670 <daemon@@Base+0x1d04>
   18b74:	cmp	r3, #0
   18b78:	beq	18900 <daemon@@Base+0x1f94>
   18b7c:	mov	r1, fp
   18b80:	mov	r0, r7
   18b84:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   18b88:	str	r0, [sp, #12]
   18b8c:	mov	r0, #1
   18b90:	movt	r0, #512	; 0x200
   18b94:	ldr	r3, [r7, #20]
   18b98:	b	188a4 <daemon@@Base+0x1f38>
   18b9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18ba0:	ldr	r4, [r0, #16]
   18ba4:	strd	r6, [sp, #8]
   18ba8:	strd	r8, [sp, #16]
   18bac:	strd	sl, [sp, #24]
   18bb0:	str	lr, [sp, #32]
   18bb4:	sub	sp, sp, #20
   18bb8:	cmp	r4, #0
   18bbc:	movne	r3, r4
   18bc0:	bne	18bcc <daemon@@Base+0x2260>
   18bc4:	b	1945c <daemon@@Base+0x2af0>
   18bc8:	mov	r3, r2
   18bcc:	ldr	r2, [r3, #12]
   18bd0:	cmp	r2, #0
   18bd4:	bne	18bc8 <daemon@@Base+0x225c>
   18bd8:	ldr	r2, [r3, #8]
   18bdc:	ldr	r7, [r1, #16]
   18be0:	cmp	r7, #0
   18be4:	movne	r3, r7
   18be8:	bne	18bf4 <daemon@@Base+0x2288>
   18bec:	b	19454 <daemon@@Base+0x2ae8>
   18bf0:	mov	r3, ip
   18bf4:	ldr	ip, [r3, #12]
   18bf8:	cmp	ip, #0
   18bfc:	bne	18bf0 <daemon@@Base+0x2284>
   18c00:	ldr	ip, [r3, #8]
   18c04:	mvn	r3, ip
   18c08:	lsr	r3, r3, #31
   18c0c:	cmp	r3, r2, lsr #31
   18c10:	subne	ip, r2, ip
   18c14:	subeq	ip, ip, r2
   18c18:	cmp	ip, #0
   18c1c:	bne	18dfc <daemon@@Base+0x2490>
   18c20:	adds	ip, r7, #0
   18c24:	movne	ip, #1
   18c28:	cmp	r4, #0
   18c2c:	rsbeq	ip, ip, #0
   18c30:	rsbne	ip, ip, #1
   18c34:	cmp	ip, #0
   18c38:	bne	18dfc <daemon@@Base+0x2490>
   18c3c:	cmp	r4, #0
   18c40:	mov	r6, r1
   18c44:	mov	r5, r0
   18c48:	beq	1914c <daemon@@Base+0x27e0>
   18c4c:	ldr	r8, [r4, #12]
   18c50:	ldr	r1, [r4, #20]
   18c54:	ldr	r2, [r7, #20]
   18c58:	ldr	r9, [r7, #12]
   18c5c:	cmp	r1, r2
   18c60:	bgt	18e20 <daemon@@Base+0x24b4>
   18c64:	blt	18c70 <daemon@@Base+0x2304>
   18c68:	b	18fb0 <daemon@@Base+0x2644>
   18c6c:	mov	r9, r5
   18c70:	ldr	r5, [r9, #12]
   18c74:	ldr	r3, [r9, #20]
   18c78:	cmp	r1, r3
   18c7c:	blt	18c6c <daemon@@Base+0x2300>
   18c80:	cmp	r8, r5
   18c84:	beq	1961c <daemon@@Base+0x2cb0>
   18c88:	ldr	r7, [r5, #12]
   18c8c:	ldr	r6, [r8, #12]
   18c90:	cmp	r6, r7
   18c94:	beq	19564 <daemon@@Base+0x2bf8>
   18c98:	ldr	sl, [r6, #12]
   18c9c:	ldr	fp, [r7, #12]
   18ca0:	cmp	sl, fp
   18ca4:	beq	19684 <daemon@@Base+0x2d18>
   18ca8:	ldr	r3, [sl, #12]
   18cac:	ldr	r2, [fp, #12]
   18cb0:	cmp	r3, r2
   18cb4:	beq	19720 <daemon@@Base+0x2db4>
   18cb8:	ldr	r1, [r2, #12]
   18cbc:	ldr	r0, [r3, #12]
   18cc0:	cmp	r0, r1
   18cc4:	beq	197bc <daemon@@Base+0x2e50>
   18cc8:	str	r3, [sp]
   18ccc:	str	r2, [sp, #4]
   18cd0:	bl	17104 <daemon@@Base+0x798>
   18cd4:	subs	ip, r0, #0
   18cd8:	bne	18dfc <daemon@@Base+0x2490>
   18cdc:	ldr	r3, [sp]
   18ce0:	ldr	r2, [sp, #4]
   18ce4:	ldr	r0, [r3, #8]
   18ce8:	ldr	r1, [r2, #8]
   18cec:	mvn	ip, r1
   18cf0:	lsr	ip, ip, #31
   18cf4:	cmp	ip, r0, lsr #31
   18cf8:	subne	ip, r0, r1
   18cfc:	subeq	ip, r1, r0
   18d00:	cmp	ip, #0
   18d04:	bne	18dfc <daemon@@Base+0x2490>
   18d08:	ldr	r1, [r2, #4]
   18d0c:	ldr	r3, [r3, #4]
   18d10:	sub	ip, r1, r3
   18d14:	cmp	ip, #0
   18d18:	bne	18dfc <daemon@@Base+0x2490>
   18d1c:	ldr	r1, [fp, #8]
   18d20:	ldr	r0, [sl, #8]
   18d24:	mvn	r3, r1
   18d28:	lsr	r3, r3, #31
   18d2c:	cmp	r3, r0, lsr #31
   18d30:	subne	ip, r0, r1
   18d34:	subeq	ip, r1, r0
   18d38:	cmp	ip, #0
   18d3c:	bne	18dfc <daemon@@Base+0x2490>
   18d40:	ldr	r3, [sl, #4]
   18d44:	ldr	r1, [fp, #4]
   18d48:	sub	ip, r1, r3
   18d4c:	cmp	ip, #0
   18d50:	bne	18dfc <daemon@@Base+0x2490>
   18d54:	ldr	r1, [r7, #8]
   18d58:	ldr	r0, [r6, #8]
   18d5c:	mvn	r3, r1
   18d60:	lsr	r3, r3, #31
   18d64:	cmp	r3, r0, lsr #31
   18d68:	subne	ip, r0, r1
   18d6c:	subeq	ip, r1, r0
   18d70:	cmp	ip, #0
   18d74:	bne	18dfc <daemon@@Base+0x2490>
   18d78:	ldr	r3, [r6, #4]
   18d7c:	ldr	r1, [r7, #4]
   18d80:	sub	ip, r1, r3
   18d84:	cmp	ip, #0
   18d88:	bne	18dfc <daemon@@Base+0x2490>
   18d8c:	ldr	r1, [r5, #8]
   18d90:	ldr	r0, [r8, #8]
   18d94:	mvn	r3, r1
   18d98:	lsr	r3, r3, #31
   18d9c:	cmp	r3, r0, lsr #31
   18da0:	subne	ip, r0, r1
   18da4:	subeq	ip, r1, r0
   18da8:	cmp	ip, #0
   18dac:	bne	18dfc <daemon@@Base+0x2490>
   18db0:	ldr	r1, [r5, #4]
   18db4:	ldr	r3, [r8, #4]
   18db8:	sub	ip, r1, r3
   18dbc:	cmp	ip, #0
   18dc0:	bne	18dfc <daemon@@Base+0x2490>
   18dc4:	ldr	r1, [r9, #8]
   18dc8:	ldr	r0, [r4, #8]
   18dcc:	mvn	r3, r1
   18dd0:	lsr	r3, r3, #31
   18dd4:	cmp	r3, r0, lsr #31
   18dd8:	subne	ip, r0, r1
   18ddc:	subeq	ip, r1, r0
   18de0:	cmp	ip, #0
   18de4:	bne	18dfc <daemon@@Base+0x2490>
   18de8:	ldr	r0, [r4, #4]
   18dec:	ldr	r1, [r9, #4]
   18df0:	sub	ip, r1, r0
   18df4:	cmp	ip, #0
   18df8:	mvneq	ip, #0
   18dfc:	mov	r0, ip
   18e00:	add	sp, sp, #20
   18e04:	ldrd	r4, [sp]
   18e08:	ldrd	r6, [sp, #8]
   18e0c:	ldrd	r8, [sp, #16]
   18e10:	ldrd	sl, [sp, #24]
   18e14:	add	sp, sp, #32
   18e18:	pop	{pc}		; (ldr pc, [sp], #4)
   18e1c:	mov	r8, r4
   18e20:	ldr	r4, [r8, #12]
   18e24:	ldr	r3, [r8, #20]
   18e28:	cmp	r2, r3
   18e2c:	blt	18e1c <daemon@@Base+0x24b0>
   18e30:	cmp	r4, r9
   18e34:	beq	195e8 <daemon@@Base+0x2c7c>
   18e38:	ldr	r5, [r4, #12]
   18e3c:	ldr	r6, [r9, #12]
   18e40:	cmp	r5, r6
   18e44:	beq	19650 <daemon@@Base+0x2ce4>
   18e48:	ldr	sl, [r5, #12]
   18e4c:	ldr	fp, [r6, #12]
   18e50:	cmp	sl, fp
   18e54:	beq	19598 <daemon@@Base+0x2c2c>
   18e58:	ldr	r3, [sl, #12]
   18e5c:	ldr	r2, [fp, #12]
   18e60:	cmp	r3, r2
   18e64:	beq	196c8 <daemon@@Base+0x2d5c>
   18e68:	ldr	r1, [r2, #12]
   18e6c:	ldr	r0, [r3, #12]
   18e70:	cmp	r0, r1
   18e74:	beq	19754 <daemon@@Base+0x2de8>
   18e78:	str	r3, [sp]
   18e7c:	str	r2, [sp, #4]
   18e80:	bl	17104 <daemon@@Base+0x798>
   18e84:	subs	ip, r0, #0
   18e88:	bne	18dfc <daemon@@Base+0x2490>
   18e8c:	ldr	r3, [sp]
   18e90:	ldr	r2, [sp, #4]
   18e94:	ldr	r0, [r3, #8]
   18e98:	ldr	r1, [r2, #8]
   18e9c:	mvn	ip, r1
   18ea0:	lsr	ip, ip, #31
   18ea4:	cmp	ip, r0, lsr #31
   18ea8:	subne	ip, r0, r1
   18eac:	subeq	ip, r1, r0
   18eb0:	cmp	ip, #0
   18eb4:	bne	18dfc <daemon@@Base+0x2490>
   18eb8:	ldr	r1, [r2, #4]
   18ebc:	ldr	r3, [r3, #4]
   18ec0:	sub	ip, r1, r3
   18ec4:	cmp	ip, #0
   18ec8:	bne	18dfc <daemon@@Base+0x2490>
   18ecc:	ldr	r1, [fp, #8]
   18ed0:	ldr	r0, [sl, #8]
   18ed4:	mvn	r3, r1
   18ed8:	lsr	r3, r3, #31
   18edc:	cmp	r3, r0, lsr #31
   18ee0:	subne	ip, r0, r1
   18ee4:	subeq	ip, r1, r0
   18ee8:	cmp	ip, #0
   18eec:	bne	18dfc <daemon@@Base+0x2490>
   18ef0:	ldr	r3, [sl, #4]
   18ef4:	ldr	r1, [fp, #4]
   18ef8:	sub	ip, r1, r3
   18efc:	cmp	ip, #0
   18f00:	bne	18dfc <daemon@@Base+0x2490>
   18f04:	ldr	r1, [r6, #8]
   18f08:	ldr	r0, [r5, #8]
   18f0c:	mvn	r3, r1
   18f10:	lsr	r3, r3, #31
   18f14:	cmp	r3, r0, lsr #31
   18f18:	subne	ip, r0, r1
   18f1c:	subeq	ip, r1, r0
   18f20:	cmp	ip, #0
   18f24:	bne	18dfc <daemon@@Base+0x2490>
   18f28:	ldr	r3, [r5, #4]
   18f2c:	ldr	r1, [r6, #4]
   18f30:	sub	ip, r1, r3
   18f34:	cmp	ip, #0
   18f38:	bne	18dfc <daemon@@Base+0x2490>
   18f3c:	ldr	r1, [r9, #8]
   18f40:	ldr	r0, [r4, #8]
   18f44:	mvn	r3, r1
   18f48:	lsr	r3, r3, #31
   18f4c:	cmp	r3, r0, lsr #31
   18f50:	subne	ip, r0, r1
   18f54:	subeq	ip, r1, r0
   18f58:	cmp	ip, #0
   18f5c:	bne	18dfc <daemon@@Base+0x2490>
   18f60:	ldr	r0, [r4, #4]
   18f64:	ldr	r1, [r9, #4]
   18f68:	sub	ip, r1, r0
   18f6c:	cmp	ip, #0
   18f70:	bne	18dfc <daemon@@Base+0x2490>
   18f74:	ldr	r1, [r7, #8]
   18f78:	ldr	r0, [r8, #8]
   18f7c:	mvn	r3, r1
   18f80:	lsr	r3, r3, #31
   18f84:	cmp	r3, r0, lsr #31
   18f88:	subne	ip, r0, r1
   18f8c:	subeq	ip, r1, r0
   18f90:	cmp	ip, #0
   18f94:	bne	18dfc <daemon@@Base+0x2490>
   18f98:	ldr	r1, [r7, #4]
   18f9c:	ldr	r0, [r8, #4]
   18fa0:	sub	ip, r1, r0
   18fa4:	cmp	ip, #0
   18fa8:	moveq	ip, #1
   18fac:	b	18dfc <daemon@@Base+0x2490>
   18fb0:	cmp	r8, r9
   18fb4:	beq	19788 <daemon@@Base+0x2e1c>
   18fb8:	ldr	sl, [r8, #12]
   18fbc:	ldr	fp, [r9, #12]
   18fc0:	cmp	sl, fp
   18fc4:	beq	197f0 <daemon@@Base+0x2e84>
   18fc8:	ldr	r3, [sl, #12]
   18fcc:	mov	r2, r3
   18fd0:	ldr	r3, [fp, #12]
   18fd4:	str	r2, [sp]
   18fd8:	cmp	r2, r3
   18fdc:	beq	19824 <daemon@@Base+0x2eb8>
   18fe0:	ldr	r2, [r2, #12]
   18fe4:	mov	r1, r2
   18fe8:	ldr	r2, [r3, #12]
   18fec:	str	r1, [sp, #4]
   18ff0:	cmp	r1, r2
   18ff4:	beq	19858 <daemon@@Base+0x2eec>
   18ff8:	ldr	r0, [r1, #12]
   18ffc:	ldr	r1, [r2, #12]
   19000:	cmp	r0, r1
   19004:	beq	19890 <daemon@@Base+0x2f24>
   19008:	str	r3, [sp, #8]
   1900c:	str	r2, [sp, #12]
   19010:	bl	17104 <daemon@@Base+0x798>
   19014:	subs	ip, r0, #0
   19018:	bne	18dfc <daemon@@Base+0x2490>
   1901c:	ldr	r3, [sp, #4]
   19020:	ldr	r2, [sp, #12]
   19024:	ldr	r0, [r3, #8]
   19028:	ldr	r1, [r2, #8]
   1902c:	ldr	r3, [sp, #8]
   19030:	mvn	ip, r1
   19034:	lsr	ip, ip, #31
   19038:	cmp	ip, r0, lsr #31
   1903c:	subne	ip, r0, r1
   19040:	subeq	ip, r1, r0
   19044:	cmp	ip, #0
   19048:	bne	18dfc <daemon@@Base+0x2490>
   1904c:	ldr	r1, [r2, #4]
   19050:	ldr	r2, [sp, #4]
   19054:	ldr	r2, [r2, #4]
   19058:	sub	ip, r1, r2
   1905c:	cmp	ip, #0
   19060:	bne	18dfc <daemon@@Base+0x2490>
   19064:	ldr	r2, [sp]
   19068:	ldr	r1, [r3, #8]
   1906c:	ldr	r0, [r2, #8]
   19070:	mvn	r2, r1
   19074:	lsr	r2, r2, #31
   19078:	cmp	r2, r0, lsr #31
   1907c:	subne	ip, r0, r1
   19080:	subeq	ip, r1, r0
   19084:	cmp	ip, #0
   19088:	bne	18dfc <daemon@@Base+0x2490>
   1908c:	ldr	r1, [r3, #4]
   19090:	ldr	r3, [sp]
   19094:	ldr	r3, [r3, #4]
   19098:	sub	ip, r1, r3
   1909c:	cmp	ip, #0
   190a0:	bne	18dfc <daemon@@Base+0x2490>
   190a4:	ldr	r1, [fp, #8]
   190a8:	ldr	r0, [sl, #8]
   190ac:	mvn	r3, r1
   190b0:	lsr	r3, r3, #31
   190b4:	cmp	r3, r0, lsr #31
   190b8:	subne	ip, r0, r1
   190bc:	subeq	ip, r1, r0
   190c0:	cmp	ip, #0
   190c4:	bne	18dfc <daemon@@Base+0x2490>
   190c8:	ldr	r3, [sl, #4]
   190cc:	ldr	r1, [fp, #4]
   190d0:	sub	ip, r1, r3
   190d4:	cmp	ip, #0
   190d8:	bne	18dfc <daemon@@Base+0x2490>
   190dc:	ldr	r1, [r9, #8]
   190e0:	ldr	r0, [r8, #8]
   190e4:	mvn	r3, r1
   190e8:	lsr	r3, r3, #31
   190ec:	cmp	r3, r0, lsr #31
   190f0:	subne	ip, r0, r1
   190f4:	subeq	ip, r1, r0
   190f8:	cmp	ip, #0
   190fc:	bne	18dfc <daemon@@Base+0x2490>
   19100:	ldr	r3, [r8, #4]
   19104:	ldr	r1, [r9, #4]
   19108:	sub	ip, r1, r3
   1910c:	cmp	ip, #0
   19110:	bne	18dfc <daemon@@Base+0x2490>
   19114:	ldr	r1, [r7, #8]
   19118:	ldr	r0, [r4, #8]
   1911c:	mvn	r3, r1
   19120:	lsr	r3, r3, #31
   19124:	cmp	r3, r0, lsr #31
   19128:	subne	ip, r0, r1
   1912c:	subeq	ip, r1, r0
   19130:	cmp	ip, #0
   19134:	bne	18dfc <daemon@@Base+0x2490>
   19138:	ldr	r3, [r4, #4]
   1913c:	ldr	r1, [r7, #4]
   19140:	sub	ip, r1, r3
   19144:	cmp	ip, #0
   19148:	bne	18dfc <daemon@@Base+0x2490>
   1914c:	ldr	r1, [r6, #12]
   19150:	ldr	r0, [r5, #12]
   19154:	mvn	r3, r1
   19158:	lsr	r3, r3, #31
   1915c:	cmp	r3, r0, lsr #31
   19160:	subne	ip, r0, r1
   19164:	subeq	ip, r1, r0
   19168:	cmp	ip, #0
   1916c:	bne	18dfc <daemon@@Base+0x2490>
   19170:	ldm	r5, {r3, sl}
   19174:	cmp	sl, #0
   19178:	beq	196b8 <daemon@@Base+0x2d4c>
   1917c:	add	r2, r3, #24
   19180:	mov	r1, sl
   19184:	ldr	r7, [r2, #-24]	; 0xffffffe8
   19188:	cmp	r7, #0
   1918c:	beq	1919c <daemon@@Base+0x2830>
   19190:	ldr	r0, [r2, #-12]
   19194:	tst	r0, #2
   19198:	beq	191ac <daemon@@Base+0x2840>
   1919c:	subs	r1, r1, #1
   191a0:	add	r2, r2, #24
   191a4:	bne	19184 <daemon@@Base+0x2818>
   191a8:	mov	r7, r1
   191ac:	ldrd	r8, [r6]
   191b0:	cmp	r9, #0
   191b4:	beq	196c0 <daemon@@Base+0x2d54>
   191b8:	add	r2, r8, #24
   191bc:	mov	r1, r9
   191c0:	ldr	r4, [r2, #-24]	; 0xffffffe8
   191c4:	cmp	r4, #0
   191c8:	beq	191d8 <daemon@@Base+0x286c>
   191cc:	ldr	r0, [r2, #-12]
   191d0:	tst	r0, #2
   191d4:	beq	191e8 <daemon@@Base+0x287c>
   191d8:	subs	r1, r1, #1
   191dc:	add	r2, r2, #24
   191e0:	bne	191c0 <daemon@@Base+0x2854>
   191e4:	mov	r4, r1
   191e8:	ldr	r2, [r3, #12]
   191ec:	tst	r2, #8
   191f0:	beq	19264 <daemon@@Base+0x28f8>
   191f4:	cmp	r7, #0
   191f8:	beq	19264 <daemon@@Base+0x28f8>
   191fc:	str	r3, [sp]
   19200:	bl	118c4 <__ctype_b_loc@plt>
   19204:	ldrb	r1, [r7]
   19208:	ldr	r0, [r0]
   1920c:	ldr	r3, [sp]
   19210:	lsl	r2, r1, #1
   19214:	ldrh	r2, [r0, r2]
   19218:	tst	r2, #8192	; 0x2000
   1921c:	beq	19234 <daemon@@Base+0x28c8>
   19220:	ldrb	r1, [r7, #1]!
   19224:	lsl	r2, r1, #1
   19228:	ldrh	r2, [r0, r2]
   1922c:	tst	r2, #8192	; 0x2000
   19230:	bne	19220 <daemon@@Base+0x28b4>
   19234:	cmp	r1, #0
   19238:	bne	19254 <daemon@@Base+0x28e8>
   1923c:	b	19548 <daemon@@Base+0x2bdc>
   19240:	ldrb	r2, [r7, #1]!
   19244:	cmp	r2, #0
   19248:	lsl	ip, r2, #1
   1924c:	beq	1925c <daemon@@Base+0x28f0>
   19250:	ldrh	r2, [r0, ip]
   19254:	tst	r2, #8
   19258:	beq	19240 <daemon@@Base+0x28d4>
   1925c:	cmp	r1, #45	; 0x2d
   19260:	bne	19548 <daemon@@Base+0x2bdc>
   19264:	ldr	r2, [r8, #12]
   19268:	tst	r2, #8
   1926c:	bne	19464 <daemon@@Base+0x2af8>
   19270:	cmp	sl, #0
   19274:	ldr	r2, [r5, #8]
   19278:	ldr	r6, [r6, #8]
   1927c:	beq	194ec <daemon@@Base+0x2b80>
   19280:	mov	fp, sl
   19284:	mov	r5, r3
   19288:	str	r7, [sp]
   1928c:	stmib	sp, {r4, r6}
   19290:	mov	r4, r2
   19294:	ldr	sl, [r5, #12]
   19298:	mov	r0, #1
   1929c:	ands	r6, sl, #8
   192a0:	movne	r6, #0
   192a4:	bne	192f4 <daemon@@Base+0x2988>
   192a8:	ldr	r7, [r5, #4]
   192ac:	sub	ip, r7, #1
   192b0:	cmp	ip, #254	; 0xfe
   192b4:	bhi	192f4 <daemon@@Base+0x2988>
   192b8:	bl	118c4 <__ctype_b_loc@plt>
   192bc:	ldr	lr, [r0]
   192c0:	lsl	ip, r7, #1
   192c4:	mov	r0, #1
   192c8:	ldrh	ip, [lr, ip]
   192cc:	tst	ip, #16384	; 0x4000
   192d0:	beq	192f4 <daemon@@Base+0x2988>
   192d4:	ldrb	ip, [r4]
   192d8:	cmp	r7, ip
   192dc:	bne	192f4 <daemon@@Base+0x2988>
   192e0:	and	sl, sl, #2
   192e4:	add	r4, r4, r0
   192e8:	cmp	sl, #0
   192ec:	moveq	r6, r7
   192f0:	moveq	r0, #0
   192f4:	subs	fp, fp, #1
   192f8:	add	r5, r5, #24
   192fc:	moveq	r0, #0
   19300:	cmp	r0, #0
   19304:	bne	19294 <daemon@@Base+0x2928>
   19308:	uxtb	r3, r6
   1930c:	mov	fp, r6
   19310:	ldr	r7, [sp]
   19314:	cmp	r9, #0
   19318:	ldmib	sp, {r4, r6}
   1931c:	str	r3, [sp]
   19320:	strne	r4, [sp, #4]
   19324:	beq	196fc <daemon@@Base+0x2d90>
   19328:	ldr	r5, [r8, #12]
   1932c:	mov	r3, #1
   19330:	ands	sl, r5, #8
   19334:	movne	sl, #0
   19338:	bne	19388 <daemon@@Base+0x2a1c>
   1933c:	ldr	r4, [r8, #4]
   19340:	sub	r1, r4, #1
   19344:	cmp	r1, #254	; 0xfe
   19348:	bhi	19388 <daemon@@Base+0x2a1c>
   1934c:	bl	118c4 <__ctype_b_loc@plt>
   19350:	ldr	r0, [r0]
   19354:	lsl	r1, r4, #1
   19358:	mov	r3, #1
   1935c:	ldrh	r1, [r0, r1]
   19360:	tst	r1, #16384	; 0x4000
   19364:	beq	19388 <daemon@@Base+0x2a1c>
   19368:	ldrb	r1, [r6]
   1936c:	cmp	r4, r1
   19370:	bne	19388 <daemon@@Base+0x2a1c>
   19374:	and	r5, r5, #2
   19378:	add	r6, r6, r3
   1937c:	cmp	r5, #0
   19380:	moveq	sl, r4
   19384:	moveq	r3, #0
   19388:	subs	r9, r9, #1
   1938c:	add	r8, r8, #24
   19390:	moveq	r3, #0
   19394:	cmp	r3, #0
   19398:	bne	19328 <daemon@@Base+0x29bc>
   1939c:	cmp	fp, #0
   193a0:	uxtb	r6, sl
   193a4:	ldr	r4, [sp, #4]
   193a8:	beq	1952c <daemon@@Base+0x2bc0>
   193ac:	ldr	r3, [sp]
   193b0:	lsl	r9, r3, #2
   193b4:	cmp	sl, #0
   193b8:	beq	19518 <daemon@@Base+0x2bac>
   193bc:	lsl	r8, r6, #2
   193c0:	bl	11894 <__ctype_tolower_loc@plt>
   193c4:	ldr	r3, [r0]
   193c8:	ldr	r1, [r3, r9]
   193cc:	ldr	r0, [r3, r8]
   193d0:	subs	ip, r1, r0
   193d4:	bne	18dfc <daemon@@Base+0x2490>
   193d8:	ldr	r3, [sp]
   193dc:	subs	ip, r6, r3
   193e0:	bne	18dfc <daemon@@Base+0x2490>
   193e4:	adds	r0, sl, #0
   193e8:	movne	r0, #1
   193ec:	cmp	fp, #0
   193f0:	rsbeq	ip, r0, #0
   193f4:	rsbne	ip, r0, #1
   193f8:	cmp	ip, #0
   193fc:	bne	18dfc <daemon@@Base+0x2490>
   19400:	cmp	fp, #0
   19404:	bne	18dfc <daemon@@Base+0x2490>
   19408:	adds	r0, r4, #0
   1940c:	movne	r0, #1
   19410:	cmp	r7, #0
   19414:	rsbeq	ip, r0, #0
   19418:	rsbne	ip, r0, #1
   1941c:	cmp	ip, #0
   19420:	bne	18dfc <daemon@@Base+0x2490>
   19424:	cmp	r7, #0
   19428:	beq	18dfc <daemon@@Base+0x2490>
   1942c:	mov	r1, r4
   19430:	mov	r0, r7
   19434:	add	sp, sp, #20
   19438:	ldrd	r4, [sp]
   1943c:	ldrd	r6, [sp, #8]
   19440:	ldrd	r8, [sp, #16]
   19444:	ldrd	sl, [sp, #24]
   19448:	ldr	lr, [sp, #32]
   1944c:	add	sp, sp, #36	; 0x24
   19450:	b	117d4 <strcasecmp@plt>
   19454:	ldr	ip, [r1, #12]
   19458:	b	18c04 <daemon@@Base+0x2298>
   1945c:	ldr	r2, [r0, #12]
   19460:	b	18bdc <daemon@@Base+0x2270>
   19464:	cmp	r4, #0
   19468:	movne	fp, #0
   1946c:	beq	19270 <daemon@@Base+0x2904>
   19470:	str	r3, [sp]
   19474:	bl	118c4 <__ctype_b_loc@plt>
   19478:	ldrb	ip, [r4]
   1947c:	ldr	r1, [r0]
   19480:	ldr	r3, [sp]
   19484:	lsl	r2, ip, #1
   19488:	ldrh	r2, [r1, r2]
   1948c:	tst	r2, #8192	; 0x2000
   19490:	beq	194a8 <daemon@@Base+0x2b3c>
   19494:	ldrb	ip, [r4, #1]!
   19498:	lsl	r2, ip, #1
   1949c:	ldrh	r2, [r1, r2]
   194a0:	tst	r2, #8192	; 0x2000
   194a4:	bne	19494 <daemon@@Base+0x2b28>
   194a8:	cmp	ip, #0
   194ac:	bne	194c8 <daemon@@Base+0x2b5c>
   194b0:	b	194d0 <daemon@@Base+0x2b64>
   194b4:	ldrb	r2, [r4, #1]!
   194b8:	cmp	r2, #0
   194bc:	lsl	r0, r2, #1
   194c0:	beq	194d0 <daemon@@Base+0x2b64>
   194c4:	ldrh	r2, [r1, r0]
   194c8:	tst	r2, #8
   194cc:	beq	194b4 <daemon@@Base+0x2b48>
   194d0:	cmp	ip, #45	; 0x2d
   194d4:	moveq	r0, fp
   194d8:	subne	r0, fp, #1
   194dc:	cmp	r0, #0
   194e0:	movne	ip, r0
   194e4:	bne	18dfc <daemon@@Base+0x2490>
   194e8:	b	19270 <daemon@@Base+0x2904>
   194ec:	cmp	r9, #0
   194f0:	movne	fp, sl
   194f4:	strne	r4, [sp, #4]
   194f8:	strne	fp, [sp]
   194fc:	bne	19328 <daemon@@Base+0x29bc>
   19500:	cmp	r7, #0
   19504:	beq	198cc <daemon@@Base+0x2f60>
   19508:	ldrb	r3, [r7]
   1950c:	mov	fp, sl
   19510:	lsl	r9, r3, #2
   19514:	str	r3, [sp]
   19518:	cmp	r4, #0
   1951c:	beq	195cc <daemon@@Base+0x2c60>
   19520:	ldrb	r6, [r4]
   19524:	mov	sl, #0
   19528:	b	193bc <daemon@@Base+0x2a50>
   1952c:	cmp	r7, #0
   19530:	beq	195dc <daemon@@Base+0x2c70>
   19534:	ldrb	r3, [r7]
   19538:	mov	fp, #0
   1953c:	lsl	r9, r3, #2
   19540:	str	r3, [sp]
   19544:	b	193b4 <daemon@@Base+0x2a48>
   19548:	ldr	r2, [r8, #12]
   1954c:	tst	r2, #8
   19550:	beq	1955c <daemon@@Base+0x2bf0>
   19554:	cmp	r4, #0
   19558:	bne	198d4 <daemon@@Base+0x2f68>
   1955c:	mov	ip, #1
   19560:	b	18dfc <daemon@@Base+0x2490>
   19564:	ldr	lr, [r5, #4]
   19568:	ldr	r1, [r5, #8]
   1956c:	ldr	r0, [r8, #8]
   19570:	ldr	r2, [r8, #4]
   19574:	mvn	r3, r1
   19578:	lsr	r3, r3, #31
   1957c:	cmp	r3, r0, lsr #31
   19580:	subne	ip, r0, r1
   19584:	subeq	ip, r1, r0
   19588:	cmp	ip, #0
   1958c:	subeq	ip, lr, r2
   19590:	beq	18dbc <daemon@@Base+0x2450>
   19594:	b	18dfc <daemon@@Base+0x2490>
   19598:	ldr	r2, [r5, #4]
   1959c:	ldr	r1, [r6, #8]
   195a0:	ldr	r0, [r5, #8]
   195a4:	ldr	lr, [r6, #4]
   195a8:	mvn	r3, r1
   195ac:	lsr	r3, r3, #31
   195b0:	cmp	r3, r0, lsr #31
   195b4:	subne	ip, r0, r1
   195b8:	subeq	ip, r1, r0
   195bc:	cmp	ip, #0
   195c0:	subeq	ip, lr, r2
   195c4:	beq	18f34 <daemon@@Base+0x25c8>
   195c8:	b	18dfc <daemon@@Base+0x2490>
   195cc:	mov	sl, r4
   195d0:	mov	r8, r4
   195d4:	mov	r6, r4
   195d8:	b	193c0 <daemon@@Base+0x2a54>
   195dc:	mov	r9, r7
   195e0:	str	r7, [sp]
   195e4:	b	193b4 <daemon@@Base+0x2a48>
   195e8:	ldr	lr, [r7, #4]
   195ec:	ldr	r1, [r7, #8]
   195f0:	ldr	r0, [r8, #8]
   195f4:	ldr	r2, [r8, #4]
   195f8:	mvn	r3, r1
   195fc:	lsr	r3, r3, #31
   19600:	cmp	r3, r0, lsr #31
   19604:	subne	ip, r0, r1
   19608:	subeq	ip, r1, r0
   1960c:	cmp	ip, #0
   19610:	subeq	ip, lr, r2
   19614:	beq	18fa4 <daemon@@Base+0x2638>
   19618:	b	18dfc <daemon@@Base+0x2490>
   1961c:	ldr	r2, [r4, #4]
   19620:	ldr	r1, [r9, #8]
   19624:	ldr	r0, [r4, #8]
   19628:	ldr	lr, [r9, #4]
   1962c:	mvn	r3, r1
   19630:	lsr	r3, r3, #31
   19634:	cmp	r3, r0, lsr #31
   19638:	subne	ip, r0, r1
   1963c:	subeq	ip, r1, r0
   19640:	cmp	ip, #0
   19644:	subeq	ip, lr, r2
   19648:	beq	18df4 <daemon@@Base+0x2488>
   1964c:	b	18dfc <daemon@@Base+0x2490>
   19650:	ldr	r2, [r4, #4]
   19654:	ldr	r1, [r9, #8]
   19658:	ldr	r0, [r4, #8]
   1965c:	ldr	lr, [r9, #4]
   19660:	mvn	r3, r1
   19664:	lsr	r3, r3, #31
   19668:	cmp	r3, r0, lsr #31
   1966c:	subne	ip, r0, r1
   19670:	subeq	ip, r1, r0
   19674:	cmp	ip, #0
   19678:	subeq	ip, lr, r2
   1967c:	beq	18f6c <daemon@@Base+0x2600>
   19680:	b	18dfc <daemon@@Base+0x2490>
   19684:	ldr	r2, [r6, #4]
   19688:	ldr	r1, [r7, #8]
   1968c:	ldr	r0, [r6, #8]
   19690:	ldr	lr, [r7, #4]
   19694:	mvn	r3, r1
   19698:	lsr	r3, r3, #31
   1969c:	cmp	r3, r0, lsr #31
   196a0:	subne	ip, r0, r1
   196a4:	subeq	ip, r1, r0
   196a8:	cmp	ip, #0
   196ac:	subeq	ip, lr, r2
   196b0:	beq	18d84 <daemon@@Base+0x2418>
   196b4:	b	18dfc <daemon@@Base+0x2490>
   196b8:	mov	r7, ip
   196bc:	b	191ac <daemon@@Base+0x2840>
   196c0:	mov	r4, r9
   196c4:	b	191e8 <daemon@@Base+0x287c>
   196c8:	ldr	r2, [sl, #4]
   196cc:	ldr	r1, [fp, #8]
   196d0:	ldr	r0, [sl, #8]
   196d4:	ldr	lr, [fp, #4]
   196d8:	mvn	r3, r1
   196dc:	lsr	r3, r3, #31
   196e0:	cmp	r3, r0, lsr #31
   196e4:	subne	ip, r0, r1
   196e8:	subeq	ip, r1, r0
   196ec:	cmp	ip, #0
   196f0:	subeq	ip, lr, r2
   196f4:	beq	18efc <daemon@@Base+0x2590>
   196f8:	b	18dfc <daemon@@Base+0x2490>
   196fc:	cmp	fp, #0
   19700:	lslne	r9, fp, #2
   19704:	bne	19518 <daemon@@Base+0x2bac>
   19708:	cmp	r7, #0
   1970c:	movne	sl, fp
   19710:	movne	r6, sl
   19714:	bne	19534 <daemon@@Base+0x2bc8>
   19718:	str	r7, [sp]
   1971c:	b	19518 <daemon@@Base+0x2bac>
   19720:	ldr	r2, [sl, #4]
   19724:	ldr	r1, [fp, #8]
   19728:	ldr	r0, [sl, #8]
   1972c:	ldr	lr, [fp, #4]
   19730:	mvn	r3, r1
   19734:	lsr	r3, r3, #31
   19738:	cmp	r3, r0, lsr #31
   1973c:	subne	ip, r0, r1
   19740:	subeq	ip, r1, r0
   19744:	cmp	ip, #0
   19748:	subeq	ip, lr, r2
   1974c:	beq	18d4c <daemon@@Base+0x23e0>
   19750:	b	18dfc <daemon@@Base+0x2490>
   19754:	ldr	r0, [r3, #8]
   19758:	ldr	r1, [r2, #8]
   1975c:	ldr	lr, [r2, #4]
   19760:	ldr	r3, [r3, #4]
   19764:	mvn	r2, r1
   19768:	lsr	r2, r2, #31
   1976c:	cmp	r2, r0, lsr #31
   19770:	subne	ip, r0, r1
   19774:	subeq	ip, r1, r0
   19778:	cmp	ip, #0
   1977c:	subeq	ip, lr, r3
   19780:	beq	18ec4 <daemon@@Base+0x2558>
   19784:	b	18dfc <daemon@@Base+0x2490>
   19788:	ldr	r2, [r4, #4]
   1978c:	ldr	r1, [r7, #8]
   19790:	ldr	r0, [r4, #8]
   19794:	ldr	lr, [r7, #4]
   19798:	mvn	r3, r1
   1979c:	lsr	r3, r3, #31
   197a0:	cmp	r3, r0, lsr #31
   197a4:	subne	ip, r0, r1
   197a8:	subeq	ip, r1, r0
   197ac:	cmp	ip, #0
   197b0:	subeq	ip, lr, r2
   197b4:	beq	19144 <daemon@@Base+0x27d8>
   197b8:	b	18dfc <daemon@@Base+0x2490>
   197bc:	ldr	r0, [r3, #8]
   197c0:	ldr	r1, [r2, #8]
   197c4:	ldr	lr, [r2, #4]
   197c8:	ldr	r3, [r3, #4]
   197cc:	mvn	r2, r1
   197d0:	lsr	r2, r2, #31
   197d4:	cmp	r2, r0, lsr #31
   197d8:	subne	ip, r0, r1
   197dc:	subeq	ip, r1, r0
   197e0:	cmp	ip, #0
   197e4:	subeq	ip, lr, r3
   197e8:	beq	18d14 <daemon@@Base+0x23a8>
   197ec:	b	18dfc <daemon@@Base+0x2490>
   197f0:	ldr	r2, [r8, #4]
   197f4:	ldr	r1, [r9, #8]
   197f8:	ldr	r0, [r8, #8]
   197fc:	ldr	lr, [r9, #4]
   19800:	mvn	r3, r1
   19804:	lsr	r3, r3, #31
   19808:	cmp	r3, r0, lsr #31
   1980c:	subne	ip, r0, r1
   19810:	subeq	ip, r1, r0
   19814:	cmp	ip, #0
   19818:	subeq	ip, lr, r2
   1981c:	beq	1910c <daemon@@Base+0x27a0>
   19820:	b	18dfc <daemon@@Base+0x2490>
   19824:	ldr	r2, [sl, #4]
   19828:	ldr	r1, [fp, #8]
   1982c:	ldr	r0, [sl, #8]
   19830:	ldr	lr, [fp, #4]
   19834:	mvn	r3, r1
   19838:	lsr	r3, r3, #31
   1983c:	cmp	r3, r0, lsr #31
   19840:	subne	ip, r0, r1
   19844:	subeq	ip, r1, r0
   19848:	cmp	ip, #0
   1984c:	subeq	ip, lr, r2
   19850:	beq	190d4 <daemon@@Base+0x2768>
   19854:	b	18dfc <daemon@@Base+0x2490>
   19858:	ldr	ip, [sp]
   1985c:	ldr	r2, [r3, #4]
   19860:	ldr	r1, [r3, #8]
   19864:	ldr	lr, [ip, #4]
   19868:	ldr	r0, [ip, #8]
   1986c:	mvn	r3, r1
   19870:	lsr	r3, r3, #31
   19874:	cmp	r3, r0, lsr #31
   19878:	subne	ip, r0, r1
   1987c:	subeq	ip, r1, r0
   19880:	cmp	ip, #0
   19884:	subeq	ip, r2, lr
   19888:	beq	1909c <daemon@@Base+0x2730>
   1988c:	b	18dfc <daemon@@Base+0x2490>
   19890:	ldr	r0, [sp, #4]
   19894:	ldr	lr, [r2, #4]
   19898:	ldr	r1, [r2, #8]
   1989c:	ldr	r2, [sp, #4]
   198a0:	ldr	r0, [r0, #8]
   198a4:	mvn	ip, r1
   198a8:	lsr	ip, ip, #31
   198ac:	ldr	r2, [r2, #4]
   198b0:	cmp	ip, r0, lsr #31
   198b4:	subne	ip, r0, r1
   198b8:	subeq	ip, r1, r0
   198bc:	cmp	ip, #0
   198c0:	subeq	ip, lr, r2
   198c4:	beq	1905c <daemon@@Base+0x26f0>
   198c8:	b	18dfc <daemon@@Base+0x2490>
   198cc:	mov	fp, r7
   198d0:	b	19718 <daemon@@Base+0x2dac>
   198d4:	mov	fp, #1
   198d8:	b	19470 <daemon@@Base+0x2b04>

000198dc <argp_failure@@Base>:
   198dc:	push	{r3}		; (str r3, [sp, #-4]!)
   198e0:	strd	r4, [sp, #-20]!	; 0xffffffec
   198e4:	subs	r5, r0, #0
   198e8:	strd	r6, [sp, #8]
   198ec:	mov	r7, r1
   198f0:	mov	r6, r2
   198f4:	str	lr, [sp, #16]
   198f8:	sub	sp, sp, #200	; 0xc8
   198fc:	beq	19a58 <argp_failure@@Base+0x17c>
   19900:	ldr	r3, [r5, #16]
   19904:	tst	r3, #2
   19908:	bne	19a3c <argp_failure@@Base+0x160>
   1990c:	ldr	r4, [r5, #44]	; 0x2c
   19910:	cmp	r4, #0
   19914:	beq	19a3c <argp_failure@@Base+0x160>
   19918:	mov	r0, r4
   1991c:	bl	11a20 <flockfile@plt>
   19920:	ldr	r0, [r5, #40]	; 0x28
   19924:	mov	r1, r4
   19928:	bl	1163c <fputs_unlocked@plt>
   1992c:	ldr	r3, [sp, #220]	; 0xdc
   19930:	cmp	r3, #0
   19934:	beq	19990 <argp_failure@@Base+0xb4>
   19938:	ldr	r3, [r4, #20]
   1993c:	add	r1, sp, #224	; 0xe0
   19940:	ldr	r2, [r4, #24]
   19944:	str	r1, [sp]
   19948:	cmp	r3, r2
   1994c:	addcc	r1, r3, #1
   19950:	movcc	r2, #58	; 0x3a
   19954:	strcc	r1, [r4, #20]
   19958:	strbcc	r2, [r3]
   1995c:	bcs	19ac8 <argp_failure@@Base+0x1ec>
   19960:	ldr	r3, [r4, #20]
   19964:	ldr	r2, [r4, #24]
   19968:	cmp	r3, r2
   1996c:	addcc	r1, r3, #1
   19970:	movcc	r2, #32
   19974:	strcc	r1, [r4, #20]
   19978:	strbcc	r2, [r3]
   1997c:	bcs	19ab8 <argp_failure@@Base+0x1dc>
   19980:	mov	r0, r4
   19984:	ldr	r2, [sp]
   19988:	ldr	r1, [sp, #220]	; 0xdc
   1998c:	bl	119fc <vfprintf@plt>
   19990:	cmp	r6, #0
   19994:	ldr	r3, [r4, #20]
   19998:	ldr	r2, [r4, #24]
   1999c:	beq	19a00 <argp_failure@@Base+0x124>
   199a0:	cmp	r2, r3
   199a4:	addhi	r1, r3, #1
   199a8:	movhi	r2, #58	; 0x3a
   199ac:	strhi	r1, [r4, #20]
   199b0:	strbhi	r2, [r3]
   199b4:	bls	19ae8 <argp_failure@@Base+0x20c>
   199b8:	ldr	r3, [r4, #20]
   199bc:	ldr	r2, [r4, #24]
   199c0:	cmp	r3, r2
   199c4:	addcc	r1, r3, #1
   199c8:	movcc	r2, #32
   199cc:	strcc	r1, [r4, #20]
   199d0:	strbcc	r2, [r3]
   199d4:	bcs	19ad8 <argp_failure@@Base+0x1fc>
   199d8:	mov	r2, #200	; 0xc8
   199dc:	mov	r1, sp
   199e0:	mov	r0, r6
   199e4:	bl	11930 <strerror_r@plt>
   199e8:	cmp	r0, #0
   199ec:	beq	19a9c <argp_failure@@Base+0x1c0>
   199f0:	mov	r1, r4
   199f4:	bl	1163c <fputs_unlocked@plt>
   199f8:	ldr	r3, [r4, #20]
   199fc:	ldr	r2, [r4, #24]
   19a00:	cmp	r3, r2
   19a04:	addcc	r1, r3, #1
   19a08:	movcc	r2, #10
   19a0c:	strcc	r1, [r4, #20]
   19a10:	strbcc	r2, [r3]
   19a14:	bcs	19a8c <argp_failure@@Base+0x1b0>
   19a18:	mov	r0, r4
   19a1c:	bl	117e0 <funlockfile@plt>
   19a20:	cmp	r7, #0
   19a24:	beq	19a3c <argp_failure@@Base+0x160>
   19a28:	cmp	r5, #0
   19a2c:	beq	19a84 <argp_failure@@Base+0x1a8>
   19a30:	ldr	r3, [r5, #16]
   19a34:	tst	r3, #32
   19a38:	beq	19a84 <argp_failure@@Base+0x1a8>
   19a3c:	add	sp, sp, #200	; 0xc8
   19a40:	ldrd	r4, [sp]
   19a44:	ldrd	r6, [sp, #8]
   19a48:	ldr	lr, [sp, #16]
   19a4c:	add	sp, sp, #20
   19a50:	add	sp, sp, #4
   19a54:	bx	lr
   19a58:	movw	r3, #9664	; 0x25c0
   19a5c:	movt	r3, #3
   19a60:	ldr	r4, [r3]
   19a64:	cmp	r4, #0
   19a68:	beq	19a3c <argp_failure@@Base+0x160>
   19a6c:	mov	r0, r4
   19a70:	bl	11a20 <flockfile@plt>
   19a74:	movw	r3, #9656	; 0x25b8
   19a78:	movt	r3, #3
   19a7c:	ldr	r0, [r3]
   19a80:	b	19924 <argp_failure@@Base+0x48>
   19a84:	mov	r0, r7
   19a88:	bl	118dc <exit@plt>
   19a8c:	mov	r1, #10
   19a90:	mov	r0, r4
   19a94:	bl	119c0 <__overflow@plt>
   19a98:	b	19a18 <argp_failure@@Base+0x13c>
   19a9c:	mov	r0, r6
   19aa0:	bl	11888 <strerror@plt>
   19aa4:	cmp	r0, #0
   19aa8:	movw	r3, #4288	; 0x10c0
   19aac:	movt	r3, #2
   19ab0:	moveq	r0, r3
   19ab4:	b	199f0 <argp_failure@@Base+0x114>
   19ab8:	mov	r1, #32
   19abc:	mov	r0, r4
   19ac0:	bl	119c0 <__overflow@plt>
   19ac4:	b	19980 <argp_failure@@Base+0xa4>
   19ac8:	mov	r1, #58	; 0x3a
   19acc:	mov	r0, r4
   19ad0:	bl	119c0 <__overflow@plt>
   19ad4:	b	19960 <argp_failure@@Base+0x84>
   19ad8:	mov	r1, #32
   19adc:	mov	r0, r4
   19ae0:	bl	119c0 <__overflow@plt>
   19ae4:	b	199d8 <argp_failure@@Base+0xfc>
   19ae8:	mov	r1, #58	; 0x3a
   19aec:	mov	r0, r4
   19af0:	bl	119c0 <__overflow@plt>
   19af4:	b	199b8 <argp_failure@@Base+0xdc>
   19af8:	cmp	r2, #0
   19afc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19b00:	strd	r6, [sp, #8]
   19b04:	strd	r8, [sp, #16]
   19b08:	strd	sl, [sp, #24]
   19b0c:	add	fp, sp, #32
   19b10:	str	lr, [sp, #32]
   19b14:	sub	sp, sp, #124	; 0x7c
   19b18:	str	r2, [fp, #-132]	; 0xffffff7c
   19b1c:	str	r0, [fp, #-108]	; 0xffffff94
   19b20:	str	r3, [fp, #-104]	; 0xffffff98
   19b24:	str	r1, [fp, #-100]	; 0xffffff9c
   19b28:	beq	19fdc <argp_failure@@Base+0x700>
   19b2c:	mov	r0, r2
   19b30:	movw	r9, #9596	; 0x257c
   19b34:	movt	r9, #3
   19b38:	bl	11a20 <flockfile@plt>
   19b3c:	ldr	r3, [r9, #36]	; 0x24
   19b40:	cmp	r3, #0
   19b44:	beq	19ff8 <argp_failure@@Base+0x71c>
   19b48:	mov	r3, #0
   19b4c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19b50:	mov	r1, r3
   19b54:	ldr	r2, [r9, #32]
   19b58:	bl	1e1d8 <argp_parse@@Base+0x28f0>
   19b5c:	subs	r7, r0, #0
   19b60:	beq	1ae54 <argp_failure@@Base+0x1578>
   19b64:	ldr	r3, [fp, #-104]	; 0xffffff98
   19b68:	ands	r3, r3, #11
   19b6c:	streq	r3, [fp, #-112]	; 0xffffff90
   19b70:	bne	1a384 <argp_failure@@Base+0xaa8>
   19b74:	ldr	r3, [fp, #-104]	; 0xffffff98
   19b78:	ands	r4, r3, #3
   19b7c:	bne	1a1c8 <argp_failure@@Base+0x8ec>
   19b80:	ldr	r3, [fp, #-104]	; 0xffffff98
   19b84:	tst	r3, #16
   19b88:	bne	1a194 <argp_failure@@Base+0x8b8>
   19b8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19b90:	tst	r3, #4
   19b94:	and	r5, r3, #8
   19b98:	bne	1a10c <argp_failure@@Base+0x830>
   19b9c:	cmp	r5, #0
   19ba0:	beq	19f48 <argp_failure@@Base+0x66c>
   19ba4:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ba8:	ldr	r3, [r3, #4]
   19bac:	cmp	r3, #0
   19bb0:	str	r3, [fp, #-116]	; 0xffffff8c
   19bb4:	beq	19f48 <argp_failure@@Base+0x66c>
   19bb8:	cmp	r4, #0
   19bbc:	bne	1a13c <argp_failure@@Base+0x860>
   19bc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   19bc4:	ldr	r3, [r3]
   19bc8:	str	r4, [fp, #-88]	; 0xffffffa8
   19bcc:	str	r4, [fp, #-84]	; 0xffffffac
   19bd0:	str	r4, [fp, #-80]	; 0xffffffb0
   19bd4:	mov	r0, r3
   19bd8:	movw	r3, #5116	; 0x13fc
   19bdc:	movt	r3, #2
   19be0:	ldr	r2, [r7, #16]
   19be4:	str	r3, [fp, #-140]	; 0xffffff74
   19be8:	movw	r3, #4736	; 0x1280
   19bec:	movt	r3, #2
   19bf0:	ldr	r1, [r7, #24]
   19bf4:	str	r3, [fp, #-144]	; 0xffffff70
   19bf8:	ldr	r3, [r7, #28]
   19bfc:	str	r9, [fp, #-96]	; 0xffffffa0
   19c00:	mov	r9, r0
   19c04:	sub	r3, r3, r1
   19c08:	ldr	r4, [r9]
   19c0c:	cmp	r3, r2
   19c10:	ldr	r8, [r9, #8]
   19c14:	bhi	1a8d8 <argp_failure@@Base+0xffc>
   19c18:	mov	r1, #1
   19c1c:	ldr	r0, [r7, #4]
   19c20:	ldr	r6, [r4, #12]
   19c24:	str	r0, [fp, #-120]	; 0xffffff88
   19c28:	mov	r0, #0
   19c2c:	str	r0, [r7, #4]
   19c30:	ldr	r0, [r7, #12]
   19c34:	str	r1, [fp, #-64]	; 0xffffffc0
   19c38:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19c3c:	str	r0, [fp, #-124]	; 0xffffff84
   19c40:	ands	r0, r6, #8
   19c44:	str	r9, [fp, #-76]	; 0xffffffb4
   19c48:	str	r0, [fp, #-128]	; 0xffffff80
   19c4c:	sub	r0, fp, #88	; 0x58
   19c50:	str	r7, [fp, #-72]	; 0xffffffb8
   19c54:	str	r1, [fp, #-60]	; 0xffffffc4
   19c58:	movne	r1, #0
   19c5c:	str	r0, [fp, #-68]	; 0xffffffbc
   19c60:	strne	r1, [fp, #-128]	; 0xffffff80
   19c64:	bne	19c9c <argp_failure@@Base+0x3c0>
   19c68:	ldr	r0, [r9, #4]
   19c6c:	cmp	r0, #0
   19c70:	beq	19c9c <argp_failure@@Base+0x3c0>
   19c74:	add	r1, r4, #24
   19c78:	ldr	ip, [r1, #-24]	; 0xffffffe8
   19c7c:	cmp	ip, #0
   19c80:	beq	19c90 <argp_failure@@Base+0x3b4>
   19c84:	ldr	ip, [r1, #-12]
   19c88:	tst	ip, #2
   19c8c:	beq	1aa08 <argp_failure@@Base+0x112c>
   19c90:	subs	r0, r0, #1
   19c94:	add	r1, r1, #24
   19c98:	bne	19c78 <argp_failure@@Base+0x39c>
   19c9c:	cmp	r3, r2
   19ca0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19ca4:	ldr	r5, [r3, #8]
   19ca8:	bhi	1a8cc <argp_failure@@Base+0xff0>
   19cac:	str	r5, [r7, #12]
   19cb0:	ldr	sl, [r9, #4]
   19cb4:	cmp	sl, #0
   19cb8:	beq	19d28 <argp_failure@@Base+0x44c>
   19cbc:	mov	r5, r4
   19cc0:	str	r9, [fp, #-136]	; 0xffffff78
   19cc4:	mov	r9, r7
   19cc8:	mov	r7, r4
   19ccc:	mov	r4, r8
   19cd0:	ldr	r8, [r5, #12]
   19cd4:	tst	r8, #8
   19cd8:	bne	19d10 <argp_failure@@Base+0x434>
   19cdc:	ldr	r6, [r5, #4]
   19ce0:	sub	r2, r6, #1
   19ce4:	cmp	r2, #254	; 0xfe
   19ce8:	bhi	19d10 <argp_failure@@Base+0x434>
   19cec:	bl	118c4 <__ctype_b_loc@plt>
   19cf0:	ldr	r1, [r0]
   19cf4:	lsl	r2, r6, #1
   19cf8:	ldrh	r2, [r1, r2]
   19cfc:	tst	r2, #16384	; 0x4000
   19d00:	beq	19d10 <argp_failure@@Base+0x434>
   19d04:	ldrb	r2, [r4]
   19d08:	cmp	r6, r2
   19d0c:	beq	1a4dc <argp_failure@@Base+0xc00>
   19d10:	subs	sl, sl, #1
   19d14:	add	r5, r5, #24
   19d18:	bne	19cd0 <argp_failure@@Base+0x3f4>
   19d1c:	mov	r4, r7
   19d20:	mov	r7, r9
   19d24:	ldr	r9, [fp, #-136]	; 0xffffff78
   19d28:	ldr	r2, [r4, #12]
   19d2c:	ldr	r1, [r7, #24]
   19d30:	ldr	r3, [r7, #28]
   19d34:	tst	r2, #8
   19d38:	ldr	r2, [r7, #16]
   19d3c:	sub	r3, r3, r1
   19d40:	beq	1a4ec <argp_failure@@Base+0xc10>
   19d44:	cmp	r3, r2
   19d48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d4c:	ldr	r5, [r3, #16]
   19d50:	bhi	1aa6c <argp_failure@@Base+0x1190>
   19d54:	str	r5, [r7, #12]
   19d58:	ldr	r6, [r9, #4]
   19d5c:	cmp	r6, #0
   19d60:	addne	r5, r4, #24
   19d64:	bne	19d78 <argp_failure@@Base+0x49c>
   19d68:	b	19e08 <argp_failure@@Base+0x52c>
   19d6c:	subs	r6, r6, #1
   19d70:	add	r5, r5, #24
   19d74:	beq	19e08 <argp_failure@@Base+0x52c>
   19d78:	ldr	r3, [r5, #-24]	; 0xffffffe8
   19d7c:	cmp	r3, #0
   19d80:	beq	19d6c <argp_failure@@Base+0x490>
   19d84:	ldr	r3, [r5, #-12]
   19d88:	tst	r3, #2
   19d8c:	bne	19d6c <argp_failure@@Base+0x490>
   19d90:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19d94:	sub	r1, fp, #76	; 0x4c
   19d98:	ldr	r0, [r3, #16]
   19d9c:	bl	1837c <daemon@@Base+0x1a10>
   19da0:	ldr	sl, [r5, #-24]	; 0xffffffe8
   19da4:	mov	r0, sl
   19da8:	bl	118e8 <strlen@plt>
   19dac:	subs	r8, r0, #0
   19db0:	beq	19d6c <argp_failure@@Base+0x490>
   19db4:	ldr	ip, [r7, #28]
   19db8:	mov	r1, r8
   19dbc:	mov	r0, r7
   19dc0:	ldr	lr, [r7, #32]
   19dc4:	add	r2, ip, r8
   19dc8:	cmp	lr, r2
   19dcc:	bcs	19de0 <argp_failure@@Base+0x504>
   19dd0:	bl	1e900 <argp_parse@@Base+0x3018>
   19dd4:	cmp	r0, #0
   19dd8:	beq	19d6c <argp_failure@@Base+0x490>
   19ddc:	ldr	ip, [r7, #28]
   19de0:	mov	r2, r8
   19de4:	mov	r1, sl
   19de8:	mov	r0, ip
   19dec:	add	r5, r5, #24
   19df0:	bl	11714 <memcpy@plt>
   19df4:	ldr	r2, [r7, #28]
   19df8:	subs	r6, r6, #1
   19dfc:	add	r3, r2, r8
   19e00:	str	r3, [r7, #28]
   19e04:	bne	19d78 <argp_failure@@Base+0x49c>
   19e08:	ldr	r2, [r7, #16]
   19e0c:	ldr	r1, [r7, #24]
   19e10:	ldr	r3, [r7, #28]
   19e14:	sub	r3, r3, r1
   19e18:	cmp	r3, r2
   19e1c:	bhi	1a8c0 <argp_failure@@Base+0xfe4>
   19e20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19e24:	mov	r2, #0
   19e28:	str	r2, [r7, #4]
   19e2c:	cmp	r3, r2
   19e30:	beq	1a5a0 <argp_failure@@Base+0xcc4>
   19e34:	ldr	r3, [r4, #12]
   19e38:	tst	r3, #8
   19e3c:	bne	19e68 <argp_failure@@Base+0x58c>
   19e40:	ldr	r5, [r4, #4]
   19e44:	sub	r3, r5, #1
   19e48:	cmp	r3, #254	; 0xfe
   19e4c:	bhi	19e68 <argp_failure@@Base+0x58c>
   19e50:	bl	118c4 <__ctype_b_loc@plt>
   19e54:	ldr	r3, [r0]
   19e58:	lsl	r5, r5, #1
   19e5c:	ldrh	r3, [r3, r5]
   19e60:	tst	r3, #16384	; 0x4000
   19e64:	bne	19e74 <argp_failure@@Base+0x598>
   19e68:	ldr	r3, [r4]
   19e6c:	cmp	r3, #0
   19e70:	beq	1aba0 <argp_failure@@Base+0x12c4>
   19e74:	ldr	r2, [r7, #16]
   19e78:	ldr	r1, [r7, #24]
   19e7c:	ldr	r3, [r7, #28]
   19e80:	sub	r0, r3, r1
   19e84:	cmp	r0, r2
   19e88:	bhi	1a8f4 <argp_failure@@Base+0x1018>
   19e8c:	ldr	r0, [fp, #-120]	; 0xffffff88
   19e90:	str	r0, [r7, #4]
   19e94:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19e98:	add	r9, r9, #28
   19e9c:	subs	r0, r0, #1
   19ea0:	str	r0, [fp, #-116]	; 0xffffff8c
   19ea4:	ldr	r0, [fp, #-124]	; 0xffffff84
   19ea8:	str	r0, [r7, #12]
   19eac:	bne	19c04 <argp_failure@@Base+0x328>
   19eb0:	ldr	r9, [fp, #-96]	; 0xffffffa0
   19eb4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19eb8:	cmp	r3, #0
   19ebc:	beq	19f44 <argp_failure@@Base+0x668>
   19ec0:	ldr	r3, [r9, #4]
   19ec4:	cmp	r3, #0
   19ec8:	beq	19f44 <argp_failure@@Base+0x668>
   19ecc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19ed0:	cmp	r1, #0
   19ed4:	beq	1af7c <argp_failure@@Base+0x16a0>
   19ed8:	ldr	r5, [r1]
   19edc:	cmp	r5, #0
   19ee0:	beq	1b06c <argp_failure@@Base+0x1790>
   19ee4:	ldr	r4, [r5, #20]
   19ee8:	cmp	r4, #0
   19eec:	beq	1b00c <argp_failure@@Base+0x1730>
   19ef0:	mov	r0, r5
   19ef4:	movw	r4, #4312	; 0x10d8
   19ef8:	movt	r4, #2
   19efc:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   19f00:	mov	r2, r0
   19f04:	mov	r1, r4
   19f08:	ldr	r3, [r5, #20]
   19f0c:	mov	r0, #5
   19f10:	movt	r0, #512	; 0x200
   19f14:	blx	r3
   19f18:	subs	r5, r0, #0
   19f1c:	beq	19f44 <argp_failure@@Base+0x668>
   19f20:	ldrb	r3, [r5]
   19f24:	subs	r4, r5, r4
   19f28:	movne	r4, #1
   19f2c:	cmp	r3, #0
   19f30:	bne	1af88 <argp_failure@@Base+0x16ac>
   19f34:	cmp	r4, #0
   19f38:	beq	19f44 <argp_failure@@Base+0x668>
   19f3c:	mov	r0, r5
   19f40:	bl	1cb08 <argp_parse@@Base+0x1220>
   19f44:	mov	r4, #1
   19f48:	ldr	r3, [fp, #-104]	; 0xffffff98
   19f4c:	tst	r3, #32
   19f50:	bne	1a478 <argp_failure@@Base+0xb9c>
   19f54:	ldr	r3, [fp, #-104]	; 0xffffff98
   19f58:	tst	r3, #64	; 0x40
   19f5c:	beq	19f8c <argp_failure@@Base+0x6b0>
   19f60:	movw	r5, #12428	; 0x308c
   19f64:	movt	r5, #3
   19f68:	ldr	r2, [r5]
   19f6c:	cmp	r2, #0
   19f70:	beq	19f8c <argp_failure@@Base+0x6b0>
   19f74:	cmp	r4, #0
   19f78:	bne	1a4b4 <argp_failure@@Base+0xbd8>
   19f7c:	movw	r1, #4768	; 0x12a0
   19f80:	movt	r1, #2
   19f84:	mov	r0, r7
   19f88:	bl	1e920 <argp_parse@@Base+0x3038>
   19f8c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19f90:	bl	117e0 <funlockfile@plt>
   19f94:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f98:	cmp	r3, #0
   19f9c:	beq	19fd4 <argp_failure@@Base+0x6f8>
   19fa0:	ldr	r0, [r3, #12]
   19fa4:	cmp	r0, #0
   19fa8:	beq	19fbc <argp_failure@@Base+0x6e0>
   19fac:	ldr	r4, [r0, #24]
   19fb0:	bl	1cb08 <argp_parse@@Base+0x1220>
   19fb4:	subs	r0, r4, #0
   19fb8:	bne	19fac <argp_failure@@Base+0x6d0>
   19fbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   19fc0:	ldr	r3, [r3, #4]
   19fc4:	cmp	r3, #0
   19fc8:	bne	1ad0c <argp_failure@@Base+0x1430>
   19fcc:	ldr	r0, [fp, #-112]	; 0xffffff90
   19fd0:	bl	1cb08 <argp_parse@@Base+0x1220>
   19fd4:	mov	r0, r7
   19fd8:	bl	1e7d0 <argp_parse@@Base+0x2ee8>
   19fdc:	sub	sp, fp, #32
   19fe0:	ldrd	r4, [sp]
   19fe4:	ldrd	r6, [sp, #8]
   19fe8:	ldrd	r8, [sp, #16]
   19fec:	ldrd	sl, [sp, #24]
   19ff0:	add	sp, sp, #32
   19ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   19ff8:	movw	r0, #4428	; 0x114c
   19ffc:	movt	r0, #2
   1a000:	bl	11858 <getenv@plt>
   1a004:	subs	r8, r0, #0
   1a008:	ldrd	r2, [r9]
   1a00c:	sub	sl, fp, #76	; 0x4c
   1a010:	ldrd	r0, [r9, #8]
   1a014:	ldrd	r4, [r9, #16]
   1a018:	strd	r2, [fp, #-76]	; 0xffffffb4
   1a01c:	ldrd	r2, [r9, #24]
   1a020:	strd	r0, [sl, #8]
   1a024:	ldrd	r0, [r9, #32]
   1a028:	strd	r4, [sl, #16]
   1a02c:	strd	r2, [sl, #24]
   1a030:	strd	r0, [sl, #32]
   1a034:	beq	19b48 <argp_failure@@Base+0x26c>
   1a038:	ldrb	r6, [r8]
   1a03c:	cmp	r6, #0
   1a040:	beq	1a08c <argp_failure@@Base+0x7b0>
   1a044:	bl	118c4 <__ctype_b_loc@plt>
   1a048:	mov	r3, r0
   1a04c:	mov	r0, r6
   1a050:	mov	r6, r3
   1a054:	ldr	r1, [r6]
   1a058:	lsl	r3, r0, #1
   1a05c:	ldrh	r3, [r1, r3]
   1a060:	tst	r3, #8192	; 0x2000
   1a064:	beq	1a07c <argp_failure@@Base+0x7a0>
   1a068:	ldrb	r0, [r8, #1]!
   1a06c:	lsl	r3, r0, #1
   1a070:	ldrh	r3, [r1, r3]
   1a074:	tst	r3, #8192	; 0x2000
   1a078:	bne	1a068 <argp_failure@@Base+0x78c>
   1a07c:	ands	r2, r3, #1024	; 0x400
   1a080:	bne	1a744 <argp_failure@@Base+0xe68>
   1a084:	cmp	r0, #0
   1a088:	bne	1ae60 <argp_failure@@Base+0x1584>
   1a08c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1a090:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a094:	cmp	r3, r2
   1a098:	ble	1b018 <argp_failure@@Base+0x173c>
   1a09c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a0a0:	cmp	r3, r2
   1a0a4:	ble	1b044 <argp_failure@@Base+0x1768>
   1a0a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a0ac:	cmp	r3, r2
   1a0b0:	ble	1b04c <argp_failure@@Base+0x1770>
   1a0b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a0b8:	cmp	r3, r2
   1a0bc:	ble	1b054 <argp_failure@@Base+0x1778>
   1a0c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a0c4:	cmp	r3, r2
   1a0c8:	ble	1b05c <argp_failure@@Base+0x1780>
   1a0cc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a0d0:	cmp	r3, r2
   1a0d4:	ble	1b064 <argp_failure@@Base+0x1788>
   1a0d8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1a0dc:	mov	ip, #1
   1a0e0:	ldrd	r4, [sl, #8]
   1a0e4:	ldrd	r2, [sl, #32]
   1a0e8:	strd	r0, [r9]
   1a0ec:	ldrd	r0, [sl, #24]
   1a0f0:	strd	r4, [r9, #8]
   1a0f4:	strd	r2, [r9, #32]
   1a0f8:	ldrd	r2, [sl, #16]
   1a0fc:	strd	r2, [r9, #16]
   1a100:	strd	r0, [r9, #24]
   1a104:	str	ip, [r9, #36]	; 0x24
   1a108:	b	19b48 <argp_failure@@Base+0x26c>
   1a10c:	ldr	r3, [fp, #4]
   1a110:	movw	r1, #4680	; 0x1248
   1a114:	movt	r1, #2
   1a118:	mov	r0, r7
   1a11c:	mov	r2, r3
   1a120:	bl	1e920 <argp_parse@@Base+0x3038>
   1a124:	cmp	r5, #0
   1a128:	beq	19f44 <argp_failure@@Base+0x668>
   1a12c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a130:	ldr	r3, [r3, #4]
   1a134:	cmp	r3, #0
   1a138:	beq	19f44 <argp_failure@@Base+0x668>
   1a13c:	ldr	r3, [r7, #28]
   1a140:	ldr	r2, [r7, #32]
   1a144:	cmp	r3, r2
   1a148:	bcs	1aeb4 <argp_failure@@Base+0x15d8>
   1a14c:	add	r1, r3, #1
   1a150:	mov	r2, #10
   1a154:	str	r1, [r7, #28]
   1a158:	strb	r2, [r3]
   1a15c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a160:	ldr	r3, [r3, #4]
   1a164:	mov	r2, r3
   1a168:	str	r3, [fp, #-116]	; 0xffffff8c
   1a16c:	mov	r3, #0
   1a170:	cmp	r2, r3
   1a174:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a178:	ldr	r2, [r2]
   1a17c:	str	r3, [fp, #-88]	; 0xffffffa8
   1a180:	str	r3, [fp, #-84]	; 0xffffffac
   1a184:	str	r3, [fp, #-80]	; 0xffffffb0
   1a188:	mov	r0, r2
   1a18c:	bne	19bd8 <argp_failure@@Base+0x2fc>
   1a190:	b	19f44 <argp_failure@@Base+0x668>
   1a194:	mov	r0, #1
   1a198:	mov	r3, #0
   1a19c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a1a0:	mov	r2, r3
   1a1a4:	stm	sp, {r0, r7}
   1a1a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a1ac:	bl	185c8 <daemon@@Base+0x1c5c>
   1a1b0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a1b4:	orr	r4, r4, r0
   1a1b8:	tst	r3, #4
   1a1bc:	and	r5, r3, #8
   1a1c0:	beq	19b9c <argp_failure@@Base+0x2c0>
   1a1c4:	b	1a10c <argp_failure@@Base+0x830>
   1a1c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a1cc:	ldr	r0, [r3, #8]
   1a1d0:	ldr	r5, [r3, #16]
   1a1d4:	cmp	r0, #0
   1a1d8:	moveq	r4, r0
   1a1dc:	beq	1a1f0 <argp_failure@@Base+0x914>
   1a1e0:	mov	r1, #10
   1a1e4:	bl	11900 <strchr@plt>
   1a1e8:	adds	r4, r0, #0
   1a1ec:	movne	r4, #1
   1a1f0:	cmp	r5, #0
   1a1f4:	beq	1a220 <argp_failure@@Base+0x944>
   1a1f8:	ldr	r3, [r5]
   1a1fc:	cmp	r3, #0
   1a200:	beq	1a220 <argp_failure@@Base+0x944>
   1a204:	ldr	r0, [r3, #8]
   1a208:	ldr	r1, [r3, #16]
   1a20c:	bl	171b8 <daemon@@Base+0x84c>
   1a210:	ldr	r3, [r5, #16]!
   1a214:	add	r4, r4, r0
   1a218:	cmp	r3, #0
   1a21c:	bne	1a204 <argp_failure@@Base+0x928>
   1a220:	add	r3, r4, #7
   1a224:	sub	sl, fp, #76	; 0x4c
   1a228:	bic	r3, r3, #7
   1a22c:	movw	r8, #4648	; 0x1228
   1a230:	movt	r8, #2
   1a234:	sub	sp, sp, r3
   1a238:	movw	r3, #4656	; 0x1230
   1a23c:	movt	r3, #2
   1a240:	mov	r2, r4
   1a244:	mov	r1, #0
   1a248:	str	r3, [fp, #-124]	; 0xffffff84
   1a24c:	add	r3, sp, #8
   1a250:	mov	r4, #1
   1a254:	mov	r0, r3
   1a258:	str	r3, [fp, #-96]	; 0xffffffa0
   1a25c:	movw	r3, #4640	; 0x1220
   1a260:	movt	r3, #2
   1a264:	str	r3, [fp, #-128]	; 0xffffff80
   1a268:	bl	11954 <memset@plt>
   1a26c:	str	r8, [fp, #-120]	; 0xffffff88
   1a270:	str	sl, [fp, #-116]	; 0xffffff8c
   1a274:	ldr	sl, [fp, #-112]	; 0xffffff90
   1a278:	ldr	r8, [fp, #-104]	; 0xffffff98
   1a27c:	b	1a35c <argp_failure@@Base+0xa80>
   1a280:	cmp	r4, #0
   1a284:	mov	r0, r7
   1a288:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a28c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a290:	ldrne	r2, [fp, #-128]	; 0xffffff80
   1a294:	ldreq	r2, [fp, #-124]	; 0xffffff84
   1a298:	ldr	r4, [r7, #12]
   1a29c:	str	r5, [r7, #12]
   1a2a0:	str	r3, [fp, #-76]	; 0xffffffb4
   1a2a4:	ldr	r3, [fp, #4]
   1a2a8:	bl	1e920 <argp_parse@@Base+0x3038>
   1a2ac:	ldr	r2, [r7, #16]
   1a2b0:	ldr	r1, [r7, #24]
   1a2b4:	ldr	r3, [r7, #28]
   1a2b8:	ldr	r5, [r9, #28]
   1a2bc:	sub	r3, r3, r1
   1a2c0:	cmp	r3, r2
   1a2c4:	bhi	1a46c <argp_failure@@Base+0xb90>
   1a2c8:	tst	r8, #2
   1a2cc:	ldr	r6, [r7, #4]
   1a2d0:	str	r5, [r7, #4]
   1a2d4:	beq	1a458 <argp_failure@@Base+0xb7c>
   1a2d8:	ldr	r3, [sl, #4]
   1a2dc:	cmp	r3, #0
   1a2e0:	bne	1ac44 <argp_failure@@Base+0x1368>
   1a2e4:	mov	r3, #1
   1a2e8:	str	r7, [sp]
   1a2ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1a2f0:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a2f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a2f8:	bl	17920 <daemon@@Base+0xfb4>
   1a2fc:	ldr	r1, [r7, #16]
   1a300:	mov	r5, r0
   1a304:	ldrd	r2, [r7, #24]
   1a308:	sub	r2, r3, r2
   1a30c:	cmp	r2, r1
   1a310:	strls	r4, [r7, #12]
   1a314:	bhi	1a428 <argp_failure@@Base+0xb4c>
   1a318:	ldr	r2, [r7, #32]
   1a31c:	str	r6, [r7, #4]
   1a320:	cmp	r2, r3
   1a324:	bhi	1a340 <argp_failure@@Base+0xa64>
   1a328:	mov	r1, #1
   1a32c:	mov	r0, r7
   1a330:	bl	1e900 <argp_parse@@Base+0x3018>
   1a334:	cmp	r0, #0
   1a338:	beq	1a350 <argp_failure@@Base+0xa74>
   1a33c:	ldr	r3, [r7, #28]
   1a340:	add	r1, r3, #1
   1a344:	mov	r2, #10
   1a348:	str	r1, [r7, #28]
   1a34c:	strb	r2, [r3]
   1a350:	cmp	r5, #0
   1a354:	mov	r4, #0
   1a358:	beq	1a49c <argp_failure@@Base+0xbc0>
   1a35c:	ldr	r2, [r7, #16]
   1a360:	ldr	r1, [r7, #24]
   1a364:	ldr	r3, [r7, #28]
   1a368:	ldr	r5, [r9, #28]
   1a36c:	sub	r3, r3, r1
   1a370:	cmp	r3, r2
   1a374:	bls	1a280 <argp_failure@@Base+0x9a4>
   1a378:	mov	r0, r7
   1a37c:	bl	1e270 <argp_parse@@Base+0x2988>
   1a380:	b	1a280 <argp_failure@@Base+0x9a4>
   1a384:	mov	r1, #0
   1a388:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a38c:	bl	17224 <daemon@@Base+0x8b8>
   1a390:	ldr	r5, [r0]
   1a394:	mov	r3, r0
   1a398:	ldr	r2, [r0, #4]
   1a39c:	cmp	r2, #0
   1a3a0:	sub	r4, r2, #1
   1a3a4:	strd	r2, [fp, #-116]	; 0xffffff8c
   1a3a8:	str	r5, [fp, #-96]	; 0xffffffa0
   1a3ac:	beq	19b74 <argp_failure@@Base+0x298>
   1a3b0:	movw	r6, #4624	; 0x1210
   1a3b4:	movt	r6, #2
   1a3b8:	str	r4, [fp, #-120]	; 0xffffff88
   1a3bc:	mov	sl, r4
   1a3c0:	ldr	r8, [r5]
   1a3c4:	ldr	r3, [r5, #4]
   1a3c8:	cmp	r3, #0
   1a3cc:	sub	r4, r3, #1
   1a3d0:	beq	1a410 <argp_failure@@Base+0xb34>
   1a3d4:	add	r8, r8, #24
   1a3d8:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1a3dc:	sub	r4, r4, #1
   1a3e0:	cmp	r0, #0
   1a3e4:	beq	1a404 <argp_failure@@Base+0xb28>
   1a3e8:	ldr	r3, [r8, #-12]
   1a3ec:	mov	r1, r6
   1a3f0:	tst	r3, #2
   1a3f4:	bne	1a404 <argp_failure@@Base+0xb28>
   1a3f8:	bl	11654 <strcmp@plt>
   1a3fc:	cmp	r0, #0
   1a400:	beq	1aab8 <argp_failure@@Base+0x11dc>
   1a404:	cmn	r4, #1
   1a408:	add	r8, r8, #24
   1a40c:	bne	1a3d8 <argp_failure@@Base+0xafc>
   1a410:	sub	sl, sl, #1
   1a414:	add	r5, r5, #28
   1a418:	cmn	sl, #1
   1a41c:	bne	1a3c0 <argp_failure@@Base+0xae4>
   1a420:	ldr	r4, [fp, #-120]	; 0xffffff88
   1a424:	b	1aad8 <argp_failure@@Base+0x11fc>
   1a428:	mov	r0, r7
   1a42c:	bl	1e270 <argp_parse@@Base+0x2988>
   1a430:	ldr	r1, [r7, #16]
   1a434:	str	r4, [r7, #12]
   1a438:	ldrd	r2, [r7, #24]
   1a43c:	sub	r2, r3, r2
   1a440:	cmp	r2, r1
   1a444:	bls	1a318 <argp_failure@@Base+0xa3c>
   1a448:	mov	r0, r7
   1a44c:	bl	1e270 <argp_parse@@Base+0x2988>
   1a450:	ldr	r3, [r7, #28]
   1a454:	b	1a318 <argp_failure@@Base+0xa3c>
   1a458:	mov	r1, r7
   1a45c:	mov	r0, sl
   1a460:	orr	r8, r8, #2
   1a464:	bl	17f08 <daemon@@Base+0x159c>
   1a468:	b	1a2e4 <argp_failure@@Base+0xa08>
   1a46c:	mov	r0, r7
   1a470:	bl	1e270 <argp_parse@@Base+0x2988>
   1a474:	b	1a2c8 <argp_failure@@Base+0x9ec>
   1a478:	mov	r2, #0
   1a47c:	mov	r3, r4
   1a480:	ldr	r0, [fp, #-108]	; 0xffffff94
   1a484:	stm	sp, {r2, r7}
   1a488:	mov	r2, #1
   1a48c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a490:	bl	185c8 <daemon@@Base+0x1c5c>
   1a494:	orr	r4, r4, r0
   1a498:	b	19f54 <argp_failure@@Base+0x678>
   1a49c:	str	r8, [fp, #-104]	; 0xffffff98
   1a4a0:	mov	r4, #1
   1a4a4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1a4a8:	tst	r3, #16
   1a4ac:	beq	19b8c <argp_failure@@Base+0x2b0>
   1a4b0:	b	1a194 <argp_failure@@Base+0x8b8>
   1a4b4:	ldr	r3, [r7, #28]
   1a4b8:	ldr	r2, [r7, #32]
   1a4bc:	cmp	r3, r2
   1a4c0:	bcs	1ae98 <argp_failure@@Base+0x15bc>
   1a4c4:	add	r1, r3, #1
   1a4c8:	mov	r2, #10
   1a4cc:	str	r1, [r7, #28]
   1a4d0:	strb	r2, [r3]
   1a4d4:	ldr	r2, [r5]
   1a4d8:	b	19f7c <argp_failure@@Base+0x6a0>
   1a4dc:	tst	r8, #2
   1a4e0:	beq	1a958 <argp_failure@@Base+0x107c>
   1a4e4:	add	r4, r4, #1
   1a4e8:	b	19d10 <argp_failure@@Base+0x434>
   1a4ec:	cmp	r3, r2
   1a4f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a4f4:	ldr	r5, [r3, #12]
   1a4f8:	bhi	1aa88 <argp_failure@@Base+0x11ac>
   1a4fc:	str	r5, [r7, #12]
   1a500:	ldr	sl, [r9, #4]
   1a504:	cmp	sl, #0
   1a508:	beq	19e08 <argp_failure@@Base+0x52c>
   1a50c:	movw	r3, #4752	; 0x1290
   1a510:	movt	r3, #2
   1a514:	movw	r6, #4744	; 0x1288
   1a518:	movt	r6, #2
   1a51c:	movw	r8, #4760	; 0x1298
   1a520:	movt	r8, #2
   1a524:	str	r3, [fp, #-128]	; 0xffffff80
   1a528:	add	r5, r4, #24
   1a52c:	b	1a53c <argp_failure@@Base+0xc60>
   1a530:	subs	sl, sl, #1
   1a534:	add	r5, r5, #24
   1a538:	beq	19e08 <argp_failure@@Base+0x52c>
   1a53c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1a540:	cmp	r3, #0
   1a544:	beq	1a530 <argp_failure@@Base+0xc54>
   1a548:	ldr	r3, [r5, #-12]
   1a54c:	tst	r3, #2
   1a550:	bne	1a530 <argp_failure@@Base+0xc54>
   1a554:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a558:	sub	r1, fp, #76	; 0x4c
   1a55c:	ldr	r0, [r3, #12]
   1a560:	bl	1837c <daemon@@Base+0x1a10>
   1a564:	mov	r1, r6
   1a568:	mov	r0, r7
   1a56c:	ldr	r2, [r5, #-24]	; 0xffffffe8
   1a570:	bl	1e920 <argp_parse@@Base+0x3038>
   1a574:	ldr	r3, [r4, #8]
   1a578:	cmp	r3, #0
   1a57c:	beq	1a530 <argp_failure@@Base+0xc54>
   1a580:	ldr	ip, [r4, #12]
   1a584:	mov	r1, r8
   1a588:	mov	r2, r3
   1a58c:	mov	r0, r7
   1a590:	tst	ip, #1
   1a594:	ldrne	r1, [fp, #-128]	; 0xffffff80
   1a598:	bl	1e920 <argp_parse@@Base+0x3038>
   1a59c:	b	1a530 <argp_failure@@Base+0xc54>
   1a5a0:	ldr	r6, [r9, #20]
   1a5a4:	ldr	r5, [r4, #16]
   1a5a8:	cmp	r6, #0
   1a5ac:	beq	1a950 <argp_failure@@Base+0x1074>
   1a5b0:	ldr	r3, [r6, #20]
   1a5b4:	cmp	r3, #0
   1a5b8:	beq	1a950 <argp_failure@@Base+0x1074>
   1a5bc:	ldr	r4, [r4, #4]
   1a5c0:	mov	r0, r6
   1a5c4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a5c8:	bl	1c7a0 <argp_parse@@Base+0xeb8>
   1a5cc:	mov	r2, r0
   1a5d0:	mov	r1, r5
   1a5d4:	ldr	r3, [r6, #20]
   1a5d8:	mov	r0, r4
   1a5dc:	blx	r3
   1a5e0:	mov	r4, r0
   1a5e4:	cmp	r4, #0
   1a5e8:	beq	1a6ec <argp_failure@@Base+0xe10>
   1a5ec:	ldrb	r3, [r4]
   1a5f0:	cmp	r3, #0
   1a5f4:	beq	1a6dc <argp_failure@@Base+0xe00>
   1a5f8:	ldr	r1, [r7, #16]
   1a5fc:	ldrd	r2, [r7, #24]
   1a600:	sub	r2, r3, r2
   1a604:	cmp	r2, r1
   1a608:	bhi	1adec <argp_failure@@Base+0x1510>
   1a60c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1a610:	ldr	r8, [r7, #20]
   1a614:	ldr	r6, [r2, #20]
   1a618:	bic	r8, r8, r8, asr #31
   1a61c:	mov	sl, r6
   1a620:	str	r6, [r7, #4]
   1a624:	add	r2, r6, #3
   1a628:	str	sl, [r7, #12]
   1a62c:	cmp	r2, r8
   1a630:	bcc	1adcc <argp_failure@@Base+0x14f0>
   1a634:	cmp	r6, r8
   1a638:	bhi	1ad58 <argp_failure@@Base+0x147c>
   1a63c:	ldr	r1, [r7, #32]
   1a640:	add	r2, r3, #3
   1a644:	cmp	r1, r2
   1a648:	bcs	1a664 <argp_failure@@Base+0xd88>
   1a64c:	mov	r1, #3
   1a650:	mov	r0, r7
   1a654:	bl	1e900 <argp_parse@@Base+0x3018>
   1a658:	cmp	r0, #0
   1a65c:	beq	1a688 <argp_failure@@Base+0xdac>
   1a660:	ldr	r3, [r7, #28]
   1a664:	movw	r2, #4764	; 0x129c
   1a668:	movt	r2, #2
   1a66c:	ldrh	r1, [r2]
   1a670:	ldrb	r2, [r2, #2]
   1a674:	strh	r1, [r3]
   1a678:	strb	r2, [r3, #2]
   1a67c:	ldr	r3, [r7, #28]
   1a680:	add	r3, r3, #3
   1a684:	str	r3, [r7, #28]
   1a688:	mov	r0, r4
   1a68c:	bl	118e8 <strlen@plt>
   1a690:	subs	r6, r0, #0
   1a694:	beq	1a6dc <argp_failure@@Base+0xe00>
   1a698:	ldr	r0, [r7, #28]
   1a69c:	ldr	r2, [r7, #32]
   1a6a0:	add	r3, r0, r6
   1a6a4:	cmp	r2, r3
   1a6a8:	bcs	1a6c4 <argp_failure@@Base+0xde8>
   1a6ac:	mov	r1, r6
   1a6b0:	mov	r0, r7
   1a6b4:	bl	1e900 <argp_parse@@Base+0x3018>
   1a6b8:	cmp	r0, #0
   1a6bc:	beq	1a6dc <argp_failure@@Base+0xe00>
   1a6c0:	ldr	r0, [r7, #28]
   1a6c4:	mov	r2, r6
   1a6c8:	mov	r1, r4
   1a6cc:	bl	11714 <memcpy@plt>
   1a6d0:	ldr	r3, [r7, #28]
   1a6d4:	add	r6, r3, r6
   1a6d8:	str	r6, [r7, #28]
   1a6dc:	cmp	r5, r4
   1a6e0:	beq	1a6ec <argp_failure@@Base+0xe10>
   1a6e4:	mov	r0, r4
   1a6e8:	bl	1cb08 <argp_parse@@Base+0x1220>
   1a6ec:	ldr	r1, [r7, #16]
   1a6f0:	ldrd	r2, [r7, #24]
   1a6f4:	sub	r2, r3, r2
   1a6f8:	cmp	r2, r1
   1a6fc:	bhi	1aa78 <argp_failure@@Base+0x119c>
   1a700:	mov	r2, #0
   1a704:	str	r2, [r7, #4]
   1a708:	ldr	r2, [r7, #32]
   1a70c:	cmp	r2, r3
   1a710:	bhi	1a72c <argp_failure@@Base+0xe50>
   1a714:	mov	r1, #1
   1a718:	mov	r0, r7
   1a71c:	bl	1e900 <argp_parse@@Base+0x3018>
   1a720:	cmp	r0, #0
   1a724:	beq	1a73c <argp_failure@@Base+0xe60>
   1a728:	ldr	r3, [r7, #28]
   1a72c:	add	r1, r3, #1
   1a730:	mov	r2, #10
   1a734:	str	r1, [r7, #28]
   1a738:	strb	r2, [r3]
   1a73c:	str	r9, [fp, #-88]	; 0xffffffa8
   1a740:	b	19e74 <argp_failure@@Base+0x598>
   1a744:	cmp	r0, #45	; 0x2d
   1a748:	cmpne	r0, #95	; 0x5f
   1a74c:	ubfx	r7, r3, #3, #1
   1a750:	moveq	r2, #1
   1a754:	movne	r2, #0
   1a758:	orrs	r7, r2, r7
   1a75c:	beq	1af70 <argp_failure@@Base+0x1694>
   1a760:	mov	r4, r8
   1a764:	ldrb	r2, [r4, #1]!
   1a768:	lsl	r3, r2, #1
   1a76c:	cmp	r2, #45	; 0x2d
   1a770:	cmpne	r2, #95	; 0x5f
   1a774:	moveq	lr, #1
   1a778:	movne	lr, #0
   1a77c:	ldrh	r3, [r1, r3]
   1a780:	ubfx	ip, r3, #3, #1
   1a784:	orrs	ip, lr, ip
   1a788:	bne	1a764 <argp_failure@@Base+0xe88>
   1a78c:	tst	r3, #8192	; 0x2000
   1a790:	sub	r7, r4, r8
   1a794:	beq	1a7ac <argp_failure@@Base+0xed0>
   1a798:	ldrb	r2, [r4, #1]!
   1a79c:	lsl	r3, r2, #1
   1a7a0:	ldrh	r3, [r1, r3]
   1a7a4:	tst	r3, #8192	; 0x2000
   1a7a8:	bne	1a798 <argp_failure@@Base+0xebc>
   1a7ac:	cmp	r2, #44	; 0x2c
   1a7b0:	cmpne	r2, #0
   1a7b4:	beq	1aa14 <argp_failure@@Base+0x1138>
   1a7b8:	cmp	r2, #61	; 0x3d
   1a7bc:	beq	1aedc <argp_failure@@Base+0x1600>
   1a7c0:	ands	r3, r3, #2048	; 0x800
   1a7c4:	streq	r3, [fp, #-112]	; 0xffffff90
   1a7c8:	streq	r3, [fp, #-96]	; 0xffffffa0
   1a7cc:	bne	1af0c <argp_failure@@Base+0x1630>
   1a7d0:	ldr	r0, [pc, #2292]	; 1b0cc <argp_failure@@Base+0x17f0>
   1a7d4:	bl	118e8 <strlen@plt>
   1a7d8:	cmp	r7, r0
   1a7dc:	beq	1aa38 <argp_failure@@Base+0x115c>
   1a7e0:	ldr	r5, [pc, #2280]	; 1b0d0 <argp_failure@@Base+0x17f4>
   1a7e4:	mov	r0, r5
   1a7e8:	bl	118e8 <strlen@plt>
   1a7ec:	cmp	r7, r0
   1a7f0:	beq	1abb4 <argp_failure@@Base+0x12d8>
   1a7f4:	ldr	r5, [pc, #2264]	; 1b0d4 <argp_failure@@Base+0x17f8>
   1a7f8:	mov	r0, r5
   1a7fc:	bl	118e8 <strlen@plt>
   1a800:	cmp	r7, r0
   1a804:	beq	1abf0 <argp_failure@@Base+0x1314>
   1a808:	ldr	r5, [pc, #2248]	; 1b0d8 <argp_failure@@Base+0x17fc>
   1a80c:	mov	r0, r5
   1a810:	bl	118e8 <strlen@plt>
   1a814:	cmp	r7, r0
   1a818:	beq	1ac0c <argp_failure@@Base+0x1330>
   1a81c:	ldr	r5, [pc, #2232]	; 1b0dc <argp_failure@@Base+0x1800>
   1a820:	mov	r0, r5
   1a824:	bl	118e8 <strlen@plt>
   1a828:	cmp	r7, r0
   1a82c:	beq	1ac28 <argp_failure@@Base+0x134c>
   1a830:	ldr	r5, [pc, #2216]	; 1b0e0 <argp_failure@@Base+0x1804>
   1a834:	mov	r0, r5
   1a838:	bl	118e8 <strlen@plt>
   1a83c:	cmp	r7, r0
   1a840:	beq	1ac9c <argp_failure@@Base+0x13c0>
   1a844:	ldr	r5, [pc, #2200]	; 1b0e4 <argp_failure@@Base+0x1808>
   1a848:	mov	r0, r5
   1a84c:	bl	118e8 <strlen@plt>
   1a850:	cmp	r7, r0
   1a854:	beq	1acb8 <argp_failure@@Base+0x13dc>
   1a858:	ldr	r5, [pc, #2184]	; 1b0e8 <argp_failure@@Base+0x180c>
   1a85c:	mov	r0, r5
   1a860:	bl	118e8 <strlen@plt>
   1a864:	cmp	r7, r0
   1a868:	beq	1acd4 <argp_failure@@Base+0x13f8>
   1a86c:	ldr	r5, [pc, #2168]	; 1b0ec <argp_failure@@Base+0x1810>
   1a870:	mov	r0, r5
   1a874:	bl	118e8 <strlen@plt>
   1a878:	cmp	r0, r7
   1a87c:	beq	1acf0 <argp_failure@@Base+0x1414>
   1a880:	movw	r3, #4492	; 0x118c
   1a884:	movt	r3, #2
   1a888:	mov	r2, #0
   1a88c:	mov	r1, r2
   1a890:	stm	sp, {r7, r8}
   1a894:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a898:	bl	198dc <argp_failure@@Base>
   1a89c:	ldrb	r0, [r4]
   1a8a0:	cmp	r0, #44	; 0x2c
   1a8a4:	movne	r8, r4
   1a8a8:	bne	1a8b4 <argp_failure@@Base+0xfd8>
   1a8ac:	ldrb	r0, [r4, #1]
   1a8b0:	add	r8, r4, #1
   1a8b4:	cmp	r0, #0
   1a8b8:	bne	1a054 <argp_failure@@Base+0x778>
   1a8bc:	b	1a08c <argp_failure@@Base+0x7b0>
   1a8c0:	mov	r0, r7
   1a8c4:	bl	1e270 <argp_parse@@Base+0x2988>
   1a8c8:	b	19e20 <argp_failure@@Base+0x544>
   1a8cc:	mov	r0, r7
   1a8d0:	bl	1e270 <argp_parse@@Base+0x2988>
   1a8d4:	b	19cac <argp_failure@@Base+0x3d0>
   1a8d8:	mov	r0, r7
   1a8dc:	bl	1e270 <argp_parse@@Base+0x2988>
   1a8e0:	ldr	r2, [r7, #16]
   1a8e4:	ldr	r3, [r7, #24]
   1a8e8:	ldr	r1, [r7, #28]
   1a8ec:	sub	r3, r1, r3
   1a8f0:	b	19c18 <argp_failure@@Base+0x33c>
   1a8f4:	mov	r0, r7
   1a8f8:	bl	1e270 <argp_parse@@Base+0x2988>
   1a8fc:	ldr	r3, [fp, #-120]	; 0xffffff88
   1a900:	ldr	r2, [r7, #16]
   1a904:	ldr	r1, [r7, #24]
   1a908:	str	r3, [r7, #4]
   1a90c:	ldr	r3, [r7, #28]
   1a910:	sub	r0, r3, r1
   1a914:	cmp	r0, r2
   1a918:	bls	19e94 <argp_failure@@Base+0x5b8>
   1a91c:	mov	r0, r7
   1a920:	add	r9, r9, #28
   1a924:	bl	1e270 <argp_parse@@Base+0x2988>
   1a928:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1a92c:	subs	r3, r3, #1
   1a930:	str	r3, [fp, #-116]	; 0xffffff8c
   1a934:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a938:	str	r3, [r7, #12]
   1a93c:	beq	19eb0 <argp_failure@@Base+0x5d4>
   1a940:	ldr	r2, [r7, #16]
   1a944:	ldr	r1, [r7, #24]
   1a948:	ldr	r3, [r7, #28]
   1a94c:	b	19c04 <argp_failure@@Base+0x328>
   1a950:	mov	r4, r5
   1a954:	b	1a5e4 <argp_failure@@Base+0xd08>
   1a958:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a95c:	sub	r1, fp, #76	; 0x4c
   1a960:	ldr	r0, [r3, #8]
   1a964:	bl	1837c <daemon@@Base+0x1a10>
   1a968:	ldr	r2, [r9, #28]
   1a96c:	ldr	r1, [r9, #32]
   1a970:	cmp	r2, r1
   1a974:	bcc	1a990 <argp_failure@@Base+0x10b4>
   1a978:	mov	r1, #1
   1a97c:	mov	r0, r9
   1a980:	bl	1e900 <argp_parse@@Base+0x3018>
   1a984:	cmp	r0, #0
   1a988:	beq	1a9a0 <argp_failure@@Base+0x10c4>
   1a98c:	ldr	r2, [r9, #28]
   1a990:	add	r0, r2, #1
   1a994:	mov	r1, #45	; 0x2d
   1a998:	str	r0, [r9, #28]
   1a99c:	strb	r1, [r2]
   1a9a0:	ldr	r2, [r9, #28]
   1a9a4:	ldr	r1, [r9, #32]
   1a9a8:	ldrb	r6, [r4]
   1a9ac:	cmp	r2, r1
   1a9b0:	bcc	1a9cc <argp_failure@@Base+0x10f0>
   1a9b4:	mov	r1, #1
   1a9b8:	mov	r0, r9
   1a9bc:	bl	1e900 <argp_parse@@Base+0x3018>
   1a9c0:	cmp	r0, #0
   1a9c4:	beq	1a9d8 <argp_failure@@Base+0x10fc>
   1a9c8:	ldr	r2, [r9, #28]
   1a9cc:	add	r1, r2, #1
   1a9d0:	str	r1, [r9, #28]
   1a9d4:	strb	r6, [r2]
   1a9d8:	ldr	r3, [fp, #-128]	; 0xffffff80
   1a9dc:	ldr	r2, [r7, #8]
   1a9e0:	cmp	r3, #0
   1a9e4:	beq	1aa94 <argp_failure@@Base+0x11b8>
   1a9e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1a9ec:	ldr	r1, [r3]
   1a9f0:	cmp	r1, #0
   1a9f4:	bne	1aa94 <argp_failure@@Base+0x11b8>
   1a9f8:	cmp	r2, #0
   1a9fc:	movne	r2, #1
   1aa00:	strne	r2, [fp, #-80]	; 0xffffffb0
   1aa04:	b	1a4e4 <argp_failure@@Base+0xc08>
   1aa08:	mov	r1, #1
   1aa0c:	str	r1, [fp, #-128]	; 0xffffff80
   1aa10:	b	19c9c <argp_failure@@Base+0x3c0>
   1aa14:	cmp	r0, #110	; 0x6e
   1aa18:	beq	1ad24 <argp_failure@@Base+0x1448>
   1aa1c:	mov	r3, #1
   1aa20:	ldr	r0, [pc, #1700]	; 1b0cc <argp_failure@@Base+0x17f0>
   1aa24:	str	r3, [fp, #-112]	; 0xffffff90
   1aa28:	str	r3, [fp, #-96]	; 0xffffffa0
   1aa2c:	bl	118e8 <strlen@plt>
   1aa30:	cmp	r7, r0
   1aa34:	bne	1a7e0 <argp_failure@@Base+0xf04>
   1aa38:	mov	r2, r7
   1aa3c:	ldr	r1, [pc, #1672]	; 1b0cc <argp_failure@@Base+0x17f0>
   1aa40:	mov	r0, r8
   1aa44:	bl	11aa4 <strncmp@plt>
   1aa48:	cmp	r0, #0
   1aa4c:	bne	1a7e0 <argp_failure@@Base+0xf04>
   1aa50:	ldr	r5, [pc, #1652]	; 1b0cc <argp_failure@@Base+0x17f0>
   1aa54:	sub	r2, fp, #36	; 0x24
   1aa58:	ldrb	r3, [r5, #15]
   1aa5c:	add	r3, r2, r3
   1aa60:	ldr	r2, [fp, #-112]	; 0xffffff90
   1aa64:	str	r2, [r3, #-40]	; 0xffffffd8
   1aa68:	b	1a89c <argp_failure@@Base+0xfc0>
   1aa6c:	mov	r0, r7
   1aa70:	bl	1e270 <argp_parse@@Base+0x2988>
   1aa74:	b	19d54 <argp_failure@@Base+0x478>
   1aa78:	mov	r0, r7
   1aa7c:	bl	1e270 <argp_parse@@Base+0x2988>
   1aa80:	ldr	r3, [r7, #28]
   1aa84:	b	1a700 <argp_failure@@Base+0xe24>
   1aa88:	mov	r0, r7
   1aa8c:	bl	1e270 <argp_parse@@Base+0x2988>
   1aa90:	b	1a4fc <argp_failure@@Base+0xc20>
   1aa94:	cmp	r2, #0
   1aa98:	beq	1a4e4 <argp_failure@@Base+0xc08>
   1aa9c:	ldr	r1, [r7, #12]
   1aaa0:	mov	r0, r9
   1aaa4:	tst	r1, #1
   1aaa8:	ldrne	r1, [fp, #-144]	; 0xffffff70
   1aaac:	ldreq	r1, [fp, #-140]	; 0xffffff74
   1aab0:	bl	1e920 <argp_parse@@Base+0x3038>
   1aab4:	b	1a4e4 <argp_failure@@Base+0xc08>
   1aab8:	mvn	r3, #0
   1aabc:	str	r3, [r5, #12]
   1aac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1aac4:	ldr	r3, [r3, #4]
   1aac8:	cmp	r3, #0
   1aacc:	sub	r4, r3, #1
   1aad0:	str	r3, [fp, #-116]	; 0xffffff8c
   1aad4:	beq	19b74 <argp_failure@@Base+0x298>
   1aad8:	ldr	r5, [fp, #-96]	; 0xffffffa0
   1aadc:	movw	r6, #4632	; 0x1218
   1aae0:	movt	r6, #2
   1aae4:	ldm	r5, {r8, sl}
   1aae8:	cmp	sl, #0
   1aaec:	sub	sl, sl, #1
   1aaf0:	beq	1ab30 <argp_failure@@Base+0x1254>
   1aaf4:	add	r8, r8, #24
   1aaf8:	ldr	r0, [r8, #-24]	; 0xffffffe8
   1aafc:	sub	sl, sl, #1
   1ab00:	cmp	r0, #0
   1ab04:	beq	1ab24 <argp_failure@@Base+0x1248>
   1ab08:	ldr	r3, [r8, #-12]
   1ab0c:	mov	r1, r6
   1ab10:	tst	r3, #2
   1ab14:	bne	1ab24 <argp_failure@@Base+0x1248>
   1ab18:	bl	11654 <strcmp@plt>
   1ab1c:	cmp	r0, #0
   1ab20:	beq	1ab48 <argp_failure@@Base+0x126c>
   1ab24:	cmn	sl, #1
   1ab28:	add	r8, r8, #24
   1ab2c:	bne	1aaf8 <argp_failure@@Base+0x121c>
   1ab30:	cmp	r4, #0
   1ab34:	add	r5, r5, #28
   1ab38:	sub	r4, r4, #1
   1ab3c:	bne	1aae4 <argp_failure@@Base+0x1208>
   1ab40:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1ab44:	b	1ab60 <argp_failure@@Base+0x1284>
   1ab48:	mvn	r3, #0
   1ab4c:	str	r3, [r5, #12]
   1ab50:	ldr	r3, [fp, #-112]	; 0xffffff90
   1ab54:	ldr	r1, [r3, #4]
   1ab58:	cmp	r1, #0
   1ab5c:	beq	19b74 <argp_failure@@Base+0x298>
   1ab60:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1ab64:	mov	r3, #0
   1ab68:	str	r3, [r2, #24]
   1ab6c:	add	r3, r3, #1
   1ab70:	add	r2, r2, #28
   1ab74:	cmp	r1, r3
   1ab78:	bhi	1ab68 <argp_failure@@Base+0x128c>
   1ab7c:	movw	r3, #35740	; 0x8b9c
   1ab80:	movt	r3, #1
   1ab84:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1ab88:	mov	r2, #28
   1ab8c:	bl	11a44 <qsort@plt>
   1ab90:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ab94:	ands	r4, r3, #3
   1ab98:	beq	19b80 <argp_failure@@Base+0x2a4>
   1ab9c:	b	1a1c8 <argp_failure@@Base+0x8ec>
   1aba0:	sub	r2, fp, #76	; 0x4c
   1aba4:	ldr	r0, [r4, #16]
   1aba8:	ldr	r1, [r9, #20]
   1abac:	bl	17c14 <daemon@@Base+0x12a8>
   1abb0:	b	1a73c <argp_failure@@Base+0xe60>
   1abb4:	mov	r2, r7
   1abb8:	mov	r1, r5
   1abbc:	mov	r0, r8
   1abc0:	bl	11aa4 <strncmp@plt>
   1abc4:	cmp	r0, #0
   1abc8:	bne	1a7f4 <argp_failure@@Base+0xf18>
   1abcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1abd0:	cmp	r3, #0
   1abd4:	beq	1aa54 <argp_failure@@Base+0x1178>
   1abd8:	ldrb	r2, [r5, #14]
   1abdc:	cmp	r2, #0
   1abe0:	movweq	r3, #4444	; 0x115c
   1abe4:	movteq	r3, #2
   1abe8:	bne	1aa54 <argp_failure@@Base+0x1178>
   1abec:	b	1a88c <argp_failure@@Base+0xfb0>
   1abf0:	mov	r2, r7
   1abf4:	mov	r1, r5
   1abf8:	mov	r0, r8
   1abfc:	bl	11aa4 <strncmp@plt>
   1ac00:	cmp	r0, #0
   1ac04:	bne	1a808 <argp_failure@@Base+0xf2c>
   1ac08:	b	1abcc <argp_failure@@Base+0x12f0>
   1ac0c:	mov	r2, r7
   1ac10:	mov	r1, r5
   1ac14:	mov	r0, r8
   1ac18:	bl	11aa4 <strncmp@plt>
   1ac1c:	cmp	r0, #0
   1ac20:	bne	1a81c <argp_failure@@Base+0xf40>
   1ac24:	b	1abcc <argp_failure@@Base+0x12f0>
   1ac28:	mov	r2, r7
   1ac2c:	mov	r1, r5
   1ac30:	mov	r0, r8
   1ac34:	bl	11aa4 <strncmp@plt>
   1ac38:	cmp	r0, #0
   1ac3c:	bne	1a830 <argp_failure@@Base+0xf54>
   1ac40:	b	1abcc <argp_failure@@Base+0x12f0>
   1ac44:	ldr	r3, [r7, #28]
   1ac48:	ldr	r1, [r7, #32]
   1ac4c:	add	r2, r3, #12
   1ac50:	cmp	r1, r2
   1ac54:	bcs	1ac70 <argp_failure@@Base+0x1394>
   1ac58:	mov	r1, #12
   1ac5c:	mov	r0, r7
   1ac60:	bl	1e900 <argp_parse@@Base+0x3018>
   1ac64:	cmp	r0, #0
   1ac68:	beq	1a2e4 <argp_failure@@Base+0xa08>
   1ac6c:	ldr	r3, [r7, #28]
   1ac70:	movw	r2, #4664	; 0x1238
   1ac74:	movt	r2, #2
   1ac78:	ldrd	r0, [r2]
   1ac7c:	ldr	r2, [r2, #8]
   1ac80:	str	r0, [r3]
   1ac84:	str	r1, [r3, #4]
   1ac88:	str	r2, [r3, #8]
   1ac8c:	ldr	r3, [r7, #28]
   1ac90:	add	r3, r3, #12
   1ac94:	str	r3, [r7, #28]
   1ac98:	b	1a2e4 <argp_failure@@Base+0xa08>
   1ac9c:	mov	r2, r7
   1aca0:	mov	r1, r5
   1aca4:	mov	r0, r8
   1aca8:	bl	11aa4 <strncmp@plt>
   1acac:	cmp	r0, #0
   1acb0:	bne	1a844 <argp_failure@@Base+0xf68>
   1acb4:	b	1abcc <argp_failure@@Base+0x12f0>
   1acb8:	mov	r2, r7
   1acbc:	mov	r1, r5
   1acc0:	mov	r0, r8
   1acc4:	bl	11aa4 <strncmp@plt>
   1acc8:	cmp	r0, #0
   1accc:	bne	1a858 <argp_failure@@Base+0xf7c>
   1acd0:	b	1abcc <argp_failure@@Base+0x12f0>
   1acd4:	mov	r2, r7
   1acd8:	mov	r1, r5
   1acdc:	mov	r0, r8
   1ace0:	bl	11aa4 <strncmp@plt>
   1ace4:	cmp	r0, #0
   1ace8:	bne	1a86c <argp_failure@@Base+0xf90>
   1acec:	b	1abcc <argp_failure@@Base+0x12f0>
   1acf0:	mov	r2, r7
   1acf4:	mov	r1, r5
   1acf8:	mov	r0, r8
   1acfc:	bl	11aa4 <strncmp@plt>
   1ad00:	cmp	r0, #0
   1ad04:	bne	1a880 <argp_failure@@Base+0xfa4>
   1ad08:	b	1abcc <argp_failure@@Base+0x12f0>
   1ad0c:	ldr	r4, [fp, #-112]	; 0xffffff90
   1ad10:	ldr	r0, [r4]
   1ad14:	bl	1cb08 <argp_parse@@Base+0x1220>
   1ad18:	ldr	r0, [r4, #8]
   1ad1c:	bl	1cb08 <argp_parse@@Base+0x1220>
   1ad20:	b	19fcc <argp_failure@@Base+0x6f0>
   1ad24:	ldrb	r3, [r8, #1]
   1ad28:	cmp	r3, #111	; 0x6f
   1ad2c:	bne	1aa1c <argp_failure@@Base+0x1140>
   1ad30:	ldrb	r3, [r8, #2]
   1ad34:	cmp	r3, #45	; 0x2d
   1ad38:	bne	1aa1c <argp_failure@@Base+0x1140>
   1ad3c:	mov	r3, #0
   1ad40:	add	r8, r8, #3
   1ad44:	sub	r7, r7, #3
   1ad48:	str	r3, [fp, #-112]	; 0xffffff90
   1ad4c:	mov	r3, #1
   1ad50:	str	r3, [fp, #-96]	; 0xffffffa0
   1ad54:	b	1a7d0 <argp_failure@@Base+0xef4>
   1ad58:	ldr	r1, [r7, #16]
   1ad5c:	ldr	r2, [r7, #24]
   1ad60:	sub	r3, r3, r2
   1ad64:	cmp	r3, r1
   1ad68:	bhi	1aed0 <argp_failure@@Base+0x15f4>
   1ad6c:	ldr	r3, [r7, #20]
   1ad70:	cmp	r3, #0
   1ad74:	subge	r6, r6, r3
   1ad78:	cmp	r6, #0
   1ad7c:	sub	r6, r6, #1
   1ad80:	ble	1a688 <argp_failure@@Base+0xdac>
   1ad84:	mov	r8, #32
   1ad88:	ldr	r3, [r7, #28]
   1ad8c:	mov	r1, #1
   1ad90:	mov	r0, r7
   1ad94:	sub	r6, r6, #1
   1ad98:	ldr	r2, [r7, #32]
   1ad9c:	cmp	r3, r2
   1ada0:	bcc	1adb4 <argp_failure@@Base+0x14d8>
   1ada4:	bl	1e900 <argp_parse@@Base+0x3018>
   1ada8:	cmp	r0, #0
   1adac:	beq	1adc0 <argp_failure@@Base+0x14e4>
   1adb0:	ldr	r3, [r7, #28]
   1adb4:	add	r2, r3, #1
   1adb8:	str	r2, [r7, #28]
   1adbc:	strb	r8, [r3]
   1adc0:	cmn	r6, #1
   1adc4:	bne	1ad88 <argp_failure@@Base+0x14ac>
   1adc8:	b	1a688 <argp_failure@@Base+0xdac>
   1adcc:	ldr	r2, [r7, #32]
   1add0:	cmp	r2, r3
   1add4:	bls	1ae7c <argp_failure@@Base+0x15a0>
   1add8:	add	r1, r3, #1
   1addc:	mov	r2, #10
   1ade0:	str	r1, [r7, #28]
   1ade4:	strb	r2, [r3]
   1ade8:	b	1a688 <argp_failure@@Base+0xdac>
   1adec:	mov	r0, r7
   1adf0:	bl	1e270 <argp_parse@@Base+0x2988>
   1adf4:	ldr	r1, [r7, #16]
   1adf8:	ldrd	r2, [r7, #24]
   1adfc:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1ae00:	ldr	r8, [r7, #20]
   1ae04:	sub	r2, r3, r2
   1ae08:	cmp	r2, r1
   1ae0c:	ldr	r6, [sl, #20]
   1ae10:	bic	r8, r8, r8, asr #31
   1ae14:	bls	1a61c <argp_failure@@Base+0xd40>
   1ae18:	mov	r0, r7
   1ae1c:	bl	1e270 <argp_parse@@Base+0x2988>
   1ae20:	ldr	r1, [r7, #16]
   1ae24:	str	r6, [r7, #4]
   1ae28:	mov	r6, sl
   1ae2c:	ldrd	r2, [r7, #24]
   1ae30:	ldr	sl, [sl, #20]
   1ae34:	sub	r2, r3, r2
   1ae38:	cmp	r2, r1
   1ae3c:	bls	1b0c4 <argp_failure@@Base+0x17e8>
   1ae40:	mov	r0, r7
   1ae44:	bl	1e270 <argp_parse@@Base+0x2988>
   1ae48:	ldr	r6, [r6, #20]
   1ae4c:	ldr	r3, [r7, #28]
   1ae50:	b	1a624 <argp_failure@@Base+0xd48>
   1ae54:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1ae58:	bl	117e0 <funlockfile@plt>
   1ae5c:	b	19fdc <argp_failure@@Base+0x700>
   1ae60:	movw	r3, #4532	; 0x11b4
   1ae64:	movt	r3, #2
   1ae68:	str	r8, [sp]
   1ae6c:	mov	r1, r2
   1ae70:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ae74:	bl	198dc <argp_failure@@Base>
   1ae78:	b	1a08c <argp_failure@@Base+0x7b0>
   1ae7c:	mov	r1, #1
   1ae80:	mov	r0, r7
   1ae84:	bl	1e900 <argp_parse@@Base+0x3018>
   1ae88:	cmp	r0, #0
   1ae8c:	beq	1a688 <argp_failure@@Base+0xdac>
   1ae90:	ldr	r3, [r7, #28]
   1ae94:	b	1add8 <argp_failure@@Base+0x14fc>
   1ae98:	mov	r1, #1
   1ae9c:	mov	r0, r7
   1aea0:	bl	1e900 <argp_parse@@Base+0x3018>
   1aea4:	cmp	r0, #0
   1aea8:	ldrne	r3, [r7, #28]
   1aeac:	bne	1a4c4 <argp_failure@@Base+0xbe8>
   1aeb0:	b	1a4d4 <argp_failure@@Base+0xbf8>
   1aeb4:	mov	r1, #1
   1aeb8:	mov	r0, r7
   1aebc:	bl	1e900 <argp_parse@@Base+0x3018>
   1aec0:	cmp	r0, #0
   1aec4:	ldrne	r3, [r7, #28]
   1aec8:	bne	1a14c <argp_failure@@Base+0x870>
   1aecc:	b	1a15c <argp_failure@@Base+0x880>
   1aed0:	mov	r0, r7
   1aed4:	bl	1e270 <argp_parse@@Base+0x2988>
   1aed8:	b	1ad6c <argp_failure@@Base+0x1490>
   1aedc:	ldrb	r3, [r4, #1]
   1aee0:	add	r4, r4, #1
   1aee4:	lsl	r3, r3, #1
   1aee8:	ldrh	r3, [r1, r3]
   1aeec:	tst	r3, #8192	; 0x2000
   1aef0:	beq	1a7c0 <argp_failure@@Base+0xee4>
   1aef4:	ldrb	r3, [r4, #1]!
   1aef8:	lsl	r3, r3, #1
   1aefc:	ldrh	r3, [r1, r3]
   1af00:	tst	r3, #8192	; 0x2000
   1af04:	bne	1aef4 <argp_failure@@Base+0x1618>
   1af08:	b	1a7c0 <argp_failure@@Base+0xee4>
   1af0c:	mov	r2, #10
   1af10:	mov	r1, #0
   1af14:	mov	r0, r4
   1af18:	bl	11660 <strtol@plt>
   1af1c:	ldrb	r3, [r4]
   1af20:	ldr	r2, [r6]
   1af24:	lsl	r3, r3, #1
   1af28:	ldrh	r3, [r2, r3]
   1af2c:	str	r0, [fp, #-112]	; 0xffffff90
   1af30:	tst	r3, #2048	; 0x800
   1af34:	beq	1af4c <argp_failure@@Base+0x1670>
   1af38:	ldrb	r3, [r4, #1]!
   1af3c:	lsl	r3, r3, #1
   1af40:	ldrh	r3, [r2, r3]
   1af44:	tst	r3, #2048	; 0x800
   1af48:	bne	1af38 <argp_failure@@Base+0x165c>
   1af4c:	ands	r3, r3, #8192	; 0x2000
   1af50:	beq	1af68 <argp_failure@@Base+0x168c>
   1af54:	ldrb	r3, [r4, #1]!
   1af58:	lsl	r3, r3, #1
   1af5c:	ldrh	r3, [r2, r3]
   1af60:	ands	r3, r3, #8192	; 0x2000
   1af64:	bne	1af54 <argp_failure@@Base+0x1678>
   1af68:	str	r3, [fp, #-96]	; 0xffffffa0
   1af6c:	b	1a7d0 <argp_failure@@Base+0xef4>
   1af70:	mov	r2, r0
   1af74:	mov	r4, r8
   1af78:	b	1a7ac <argp_failure@@Base+0xed0>
   1af7c:	movw	r5, #4312	; 0x10d8
   1af80:	movt	r5, #2
   1af84:	mov	r4, r1
   1af88:	ldr	r3, [r7, #28]
   1af8c:	ldr	r2, [r7, #32]
   1af90:	cmp	r3, r2
   1af94:	bcc	1afb0 <argp_failure@@Base+0x16d4>
   1af98:	mov	r1, #1
   1af9c:	mov	r0, r7
   1afa0:	bl	1e900 <argp_parse@@Base+0x3018>
   1afa4:	cmp	r0, #0
   1afa8:	beq	1afc0 <argp_failure@@Base+0x16e4>
   1afac:	ldr	r3, [r7, #28]
   1afb0:	add	r1, r3, #1
   1afb4:	mov	r2, #10
   1afb8:	str	r1, [r7, #28]
   1afbc:	strb	r2, [r3]
   1afc0:	mov	r0, r5
   1afc4:	bl	118e8 <strlen@plt>
   1afc8:	subs	r6, r0, #0
   1afcc:	ldr	r0, [r7, #28]
   1afd0:	ldr	r3, [r7, #32]
   1afd4:	bne	1b07c <argp_failure@@Base+0x17a0>
   1afd8:	cmp	r0, r3
   1afdc:	bcc	1aff8 <argp_failure@@Base+0x171c>
   1afe0:	mov	r1, #1
   1afe4:	mov	r0, r7
   1afe8:	bl	1e900 <argp_parse@@Base+0x3018>
   1afec:	cmp	r0, #0
   1aff0:	beq	19f34 <argp_failure@@Base+0x658>
   1aff4:	ldr	r0, [r7, #28]
   1aff8:	add	r2, r0, #1
   1affc:	mov	r3, #10
   1b000:	str	r2, [r7, #28]
   1b004:	strb	r3, [r0]
   1b008:	b	19f34 <argp_failure@@Base+0x658>
   1b00c:	movw	r5, #4312	; 0x10d8
   1b010:	movt	r5, #2
   1b014:	b	1af88 <argp_failure@@Base+0x16ac>
   1b018:	ldr	r3, [pc, #180]	; 1b0d4 <argp_failure@@Base+0x17f8>
   1b01c:	movw	r0, #4616	; 0x1208
   1b020:	movt	r0, #2
   1b024:	mov	r2, #0
   1b028:	mov	r1, r2
   1b02c:	stm	sp, {r0, r3}
   1b030:	movw	r3, #4564	; 0x11d4
   1b034:	movt	r3, #2
   1b038:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1b03c:	bl	198dc <argp_failure@@Base>
   1b040:	b	19b48 <argp_failure@@Base+0x26c>
   1b044:	ldr	r3, [pc, #140]	; 1b0d8 <argp_failure@@Base+0x17fc>
   1b048:	b	1b01c <argp_failure@@Base+0x1740>
   1b04c:	ldr	r3, [pc, #136]	; 1b0dc <argp_failure@@Base+0x1800>
   1b050:	b	1b01c <argp_failure@@Base+0x1740>
   1b054:	ldr	r3, [pc, #132]	; 1b0e0 <argp_failure@@Base+0x1804>
   1b058:	b	1b01c <argp_failure@@Base+0x1740>
   1b05c:	ldr	r3, [pc, #128]	; 1b0e4 <argp_failure@@Base+0x1808>
   1b060:	b	1b01c <argp_failure@@Base+0x1740>
   1b064:	ldr	r3, [pc, #124]	; 1b0e8 <argp_failure@@Base+0x180c>
   1b068:	b	1b01c <argp_failure@@Base+0x1740>
   1b06c:	mov	r4, r5
   1b070:	movw	r5, #4312	; 0x10d8
   1b074:	movt	r5, #2
   1b078:	b	1af88 <argp_failure@@Base+0x16ac>
   1b07c:	add	r2, r0, r6
   1b080:	cmp	r3, r2
   1b084:	bcs	1b0a4 <argp_failure@@Base+0x17c8>
   1b088:	mov	r1, r6
   1b08c:	mov	r0, r7
   1b090:	bl	1e900 <argp_parse@@Base+0x3018>
   1b094:	cmp	r0, #0
   1b098:	ldr	r0, [r7, #28]
   1b09c:	ldreq	r3, [r7, #32]
   1b0a0:	beq	1afd8 <argp_failure@@Base+0x16fc>
   1b0a4:	mov	r2, r6
   1b0a8:	mov	r1, r5
   1b0ac:	bl	11714 <memcpy@plt>
   1b0b0:	ldr	r0, [r7, #28]
   1b0b4:	ldr	r3, [r7, #32]
   1b0b8:	add	r0, r0, r6
   1b0bc:	str	r0, [r7, #28]
   1b0c0:	b	1afd8 <argp_failure@@Base+0x16fc>
   1b0c4:	mov	r6, sl
   1b0c8:	b	1a624 <argp_failure@@Base+0xd48>
   1b0cc:	andeq	r0, r2, r8, lsl pc
   1b0d0:	andeq	r0, r2, r8, lsr #30
   1b0d4:	andeq	r0, r2, r8, lsr pc
   1b0d8:	andeq	r0, r2, r8, asr #30
   1b0dc:	andeq	r0, r2, r8, asr pc
   1b0e0:	andeq	r0, r2, r8, ror #30
   1b0e4:	andeq	r0, r2, r8, ror pc
   1b0e8:	andeq	r0, r2, r8, lsl #31
   1b0ec:	muleq	r2, r8, pc	; <UNPREDICTABLE>

0001b0f0 <argp_help@@Base>:
   1b0f0:	push	{lr}		; (str lr, [sp, #-4]!)
   1b0f4:	sub	sp, sp, #12
   1b0f8:	str	r3, [sp]
   1b0fc:	mov	r3, r2
   1b100:	mov	r2, r1
   1b104:	mov	r1, #0
   1b108:	bl	19af8 <argp_failure@@Base+0x21c>
   1b10c:	add	sp, sp, #12
   1b110:	pop	{pc}		; (ldr pc, [sp], #4)

0001b114 <argp_state_help@@Base>:
   1b114:	strd	r4, [sp, #-12]!
   1b118:	subs	r4, r0, #0
   1b11c:	mov	r5, r2
   1b120:	str	lr, [sp, #8]
   1b124:	sub	sp, sp, #12
   1b128:	beq	1b198 <argp_state_help@@Base+0x84>
   1b12c:	ldr	r3, [r4, #16]
   1b130:	adds	r2, r1, #0
   1b134:	movne	r2, #1
   1b138:	eor	r0, r3, #2
   1b13c:	ands	r2, r2, r0, lsr #1
   1b140:	bne	1b154 <argp_state_help@@Base+0x40>
   1b144:	add	sp, sp, #12
   1b148:	ldrd	r4, [sp]
   1b14c:	add	sp, sp, #8
   1b150:	pop	{pc}		; (ldr pc, [sp], #4)
   1b154:	ldr	r0, [r4, #40]	; 0x28
   1b158:	tst	r3, #64	; 0x40
   1b15c:	mov	r2, r1
   1b160:	orrne	r5, r5, #128	; 0x80
   1b164:	mov	r1, r4
   1b168:	mov	r3, r5
   1b16c:	str	r0, [sp]
   1b170:	ldr	r0, [r4]
   1b174:	bl	19af8 <argp_failure@@Base+0x21c>
   1b178:	ldr	r3, [r4, #16]
   1b17c:	tst	r3, #32
   1b180:	bne	1b144 <argp_state_help@@Base+0x30>
   1b184:	ands	r0, r5, #256	; 0x100
   1b188:	bne	1b1c4 <argp_state_help@@Base+0xb0>
   1b18c:	tst	r5, #512	; 0x200
   1b190:	beq	1b144 <argp_state_help@@Base+0x30>
   1b194:	bl	118dc <exit@plt>
   1b198:	cmp	r1, #0
   1b19c:	beq	1b144 <argp_state_help@@Base+0x30>
   1b1a0:	movw	r3, #9656	; 0x25b8
   1b1a4:	movt	r3, #3
   1b1a8:	ldr	ip, [r3]
   1b1ac:	mov	r2, r1
   1b1b0:	mov	r3, r5
   1b1b4:	mov	r1, r4
   1b1b8:	str	ip, [sp]
   1b1bc:	bl	19af8 <argp_failure@@Base+0x21c>
   1b1c0:	b	1b184 <argp_state_help@@Base+0x70>
   1b1c4:	movw	r3, #9636	; 0x25a4
   1b1c8:	movt	r3, #3
   1b1cc:	ldr	r0, [r3]
   1b1d0:	bl	118dc <exit@plt>

0001b1d4 <argp_error@@Base>:
   1b1d4:	push	{r1, r2, r3}
   1b1d8:	strd	r4, [sp, #-12]!
   1b1dc:	subs	r5, r0, #0
   1b1e0:	str	lr, [sp, #8]
   1b1e4:	sub	sp, sp, #8
   1b1e8:	beq	1b2c0 <argp_error@@Base+0xec>
   1b1ec:	ldr	r3, [r5, #16]
   1b1f0:	tst	r3, #2
   1b1f4:	bne	1b2a8 <argp_error@@Base+0xd4>
   1b1f8:	ldr	r4, [r5, #44]	; 0x2c
   1b1fc:	cmp	r4, #0
   1b200:	beq	1b2a8 <argp_error@@Base+0xd4>
   1b204:	mov	r0, r4
   1b208:	bl	11a20 <flockfile@plt>
   1b20c:	ldr	r0, [r5, #40]	; 0x28
   1b210:	add	r3, sp, #24
   1b214:	str	r3, [sp, #4]
   1b218:	mov	r1, r4
   1b21c:	bl	1163c <fputs_unlocked@plt>
   1b220:	ldr	r3, [r4, #20]
   1b224:	ldr	r2, [r4, #24]
   1b228:	cmp	r3, r2
   1b22c:	addcc	r1, r3, #1
   1b230:	movcc	r2, #58	; 0x3a
   1b234:	strcc	r1, [r4, #20]
   1b238:	strbcc	r2, [r3]
   1b23c:	bcs	1b304 <argp_error@@Base+0x130>
   1b240:	ldr	r3, [r4, #20]
   1b244:	ldr	r2, [r4, #24]
   1b248:	cmp	r3, r2
   1b24c:	addcc	r1, r3, #1
   1b250:	movcc	r2, #32
   1b254:	strcc	r1, [r4, #20]
   1b258:	strbcc	r2, [r3]
   1b25c:	bcs	1b314 <argp_error@@Base+0x140>
   1b260:	mov	r0, r4
   1b264:	ldr	r2, [sp, #4]
   1b268:	ldr	r1, [sp, #20]
   1b26c:	bl	119fc <vfprintf@plt>
   1b270:	ldr	r3, [r4, #20]
   1b274:	ldr	r2, [r4, #24]
   1b278:	cmp	r3, r2
   1b27c:	addcc	r1, r3, #1
   1b280:	movcc	r2, #10
   1b284:	strcc	r1, [r4, #20]
   1b288:	strbcc	r2, [r3]
   1b28c:	bcs	1b2f4 <argp_error@@Base+0x120>
   1b290:	mov	r0, r5
   1b294:	mov	r2, #260	; 0x104
   1b298:	mov	r1, r4
   1b29c:	bl	1b114 <argp_state_help@@Base>
   1b2a0:	mov	r0, r4
   1b2a4:	bl	117e0 <funlockfile@plt>
   1b2a8:	add	sp, sp, #8
   1b2ac:	ldrd	r4, [sp]
   1b2b0:	ldr	lr, [sp, #8]
   1b2b4:	add	sp, sp, #12
   1b2b8:	add	sp, sp, #12
   1b2bc:	bx	lr
   1b2c0:	movw	r3, #9664	; 0x25c0
   1b2c4:	movt	r3, #3
   1b2c8:	ldr	r4, [r3]
   1b2cc:	cmp	r4, #0
   1b2d0:	beq	1b2a8 <argp_error@@Base+0xd4>
   1b2d4:	mov	r0, r4
   1b2d8:	bl	11a20 <flockfile@plt>
   1b2dc:	add	r2, sp, #24
   1b2e0:	movw	r3, #9656	; 0x25b8
   1b2e4:	movt	r3, #3
   1b2e8:	str	r2, [sp, #4]
   1b2ec:	ldr	r0, [r3]
   1b2f0:	b	1b218 <argp_error@@Base+0x44>
   1b2f4:	mov	r1, #10
   1b2f8:	mov	r0, r4
   1b2fc:	bl	119c0 <__overflow@plt>
   1b300:	b	1b290 <argp_error@@Base+0xbc>
   1b304:	mov	r1, #58	; 0x3a
   1b308:	mov	r0, r4
   1b30c:	bl	119c0 <__overflow@plt>
   1b310:	b	1b240 <argp_error@@Base+0x6c>
   1b314:	mov	r1, #32
   1b318:	mov	r0, r4
   1b31c:	bl	119c0 <__overflow@plt>
   1b320:	b	1b260 <argp_error@@Base+0x8c>
   1b324:	ldr	r3, [r0]
   1b328:	strd	r4, [sp, #-16]!
   1b32c:	ldr	r5, [r0, #16]
   1b330:	str	r6, [sp, #8]
   1b334:	str	lr, [sp, #12]
   1b338:	cmp	r3, #0
   1b33c:	beq	1b3e8 <argp_error@@Base+0x214>
   1b340:	ldr	r0, [r1, #8]
   1b344:	mov	r2, #0
   1b348:	add	r0, r0, #1
   1b34c:	str	r0, [r1, #8]
   1b350:	b	1b358 <argp_error@@Base+0x184>
   1b354:	add	r2, r2, #1
   1b358:	add	r3, r3, #24
   1b35c:	ldr	r0, [r3, #-20]	; 0xffffffec
   1b360:	cmp	r0, #0
   1b364:	bne	1b354 <argp_error@@Base+0x180>
   1b368:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1b36c:	cmp	r0, #0
   1b370:	bne	1b354 <argp_error@@Base+0x180>
   1b374:	ldr	r0, [r3, #-8]
   1b378:	cmp	r0, #0
   1b37c:	bne	1b354 <argp_error@@Base+0x180>
   1b380:	ldr	r0, [r3, #-4]
   1b384:	cmp	r0, #0
   1b388:	bne	1b354 <argp_error@@Base+0x180>
   1b38c:	ldm	r1, {r0, r3}
   1b390:	add	ip, r2, r2, lsl #1
   1b394:	add	r2, r3, r2
   1b398:	add	r0, r0, ip
   1b39c:	stm	r1, {r0, r2}
   1b3a0:	cmp	r5, #0
   1b3a4:	beq	1b3d8 <argp_error@@Base+0x204>
   1b3a8:	ldr	r0, [r5]
   1b3ac:	cmp	r0, #0
   1b3b0:	beq	1b3d8 <argp_error@@Base+0x204>
   1b3b4:	mov	r4, r1
   1b3b8:	mov	r1, r4
   1b3bc:	bl	1b324 <argp_error@@Base+0x150>
   1b3c0:	ldr	r3, [r4, #12]
   1b3c4:	ldr	r0, [r5, #16]!
   1b3c8:	add	r3, r3, #1
   1b3cc:	cmp	r0, #0
   1b3d0:	str	r3, [r4, #12]
   1b3d4:	bne	1b3b8 <argp_error@@Base+0x1e4>
   1b3d8:	ldrd	r4, [sp]
   1b3dc:	ldr	r6, [sp, #8]
   1b3e0:	add	sp, sp, #12
   1b3e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b3e8:	ldr	r3, [r0, #4]
   1b3ec:	cmp	r3, #0
   1b3f0:	beq	1b3a0 <argp_error@@Base+0x1cc>
   1b3f4:	ldr	r3, [r1, #8]
   1b3f8:	add	r3, r3, #1
   1b3fc:	str	r3, [r1, #8]
   1b400:	b	1b3a0 <argp_error@@Base+0x1cc>
   1b404:	cmp	r0, #86	; 0x56
   1b408:	beq	1b414 <argp_error@@Base+0x240>
   1b40c:	mov	r0, #7
   1b410:	bx	lr
   1b414:	movw	r3, #10756	; 0x2a04
   1b418:	movt	r3, #3
   1b41c:	str	r4, [sp, #-8]!
   1b420:	ldr	r3, [r3]
   1b424:	mov	r4, r2
   1b428:	str	lr, [sp, #4]
   1b42c:	cmp	r3, #0
   1b430:	beq	1b460 <argp_error@@Base+0x28c>
   1b434:	mov	r1, r2
   1b438:	ldr	r0, [r2, #48]	; 0x30
   1b43c:	blx	r3
   1b440:	ldr	r0, [r4, #16]
   1b444:	ands	r0, r0, #32
   1b448:	beq	1b45c <argp_error@@Base+0x288>
   1b44c:	ldr	r4, [sp]
   1b450:	add	sp, sp, #4
   1b454:	mov	r0, #0
   1b458:	pop	{pc}		; (ldr pc, [sp], #4)
   1b45c:	bl	118dc <exit@plt>
   1b460:	movw	r3, #12432	; 0x3090
   1b464:	movt	r3, #3
   1b468:	ldr	r2, [r3]
   1b46c:	cmp	r2, #0
   1b470:	beq	1b488 <argp_error@@Base+0x2b4>
   1b474:	movw	r1, #5456	; 0x1550
   1b478:	movt	r1, #2
   1b47c:	ldr	r0, [r4, #48]	; 0x30
   1b480:	bl	1190c <fprintf@plt>
   1b484:	b	1b440 <argp_error@@Base+0x26c>
   1b488:	movw	r2, #5068	; 0x13cc
   1b48c:	movt	r2, #2
   1b490:	movw	r1, #3824	; 0xef0
   1b494:	movt	r1, #2
   1b498:	mov	r0, r4
   1b49c:	bl	1b1d4 <argp_error@@Base>
   1b4a0:	b	1b440 <argp_error@@Base+0x26c>
   1b4a4:	cmn	r0, #3
   1b4a8:	str	r4, [sp, #-8]!
   1b4ac:	mov	r4, r2
   1b4b0:	str	lr, [sp, #4]
   1b4b4:	sub	sp, sp, #8
   1b4b8:	beq	1b5b8 <argp_error@@Base+0x3e4>
   1b4bc:	ble	1b4f4 <argp_error@@Base+0x320>
   1b4c0:	cmn	r0, #2
   1b4c4:	beq	1b56c <argp_error@@Base+0x398>
   1b4c8:	cmp	r0, #63	; 0x3f
   1b4cc:	bne	1b558 <argp_error@@Base+0x384>
   1b4d0:	mov	r0, r4
   1b4d4:	movw	r2, #634	; 0x27a
   1b4d8:	ldr	r1, [r4, #48]	; 0x30
   1b4dc:	bl	1b114 <argp_state_help@@Base>
   1b4e0:	mov	r0, #0
   1b4e4:	add	sp, sp, #8
   1b4e8:	ldr	r4, [sp]
   1b4ec:	add	sp, sp, #4
   1b4f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4f4:	cmn	r0, #4
   1b4f8:	bne	1b558 <argp_error@@Base+0x384>
   1b4fc:	cmp	r1, #0
   1b500:	movw	r0, #5104	; 0x13f0
   1b504:	movt	r0, #2
   1b508:	mov	r2, #10
   1b50c:	movne	r0, r1
   1b510:	movw	r4, #10752	; 0x2a00
   1b514:	movt	r4, #3
   1b518:	mov	r1, #0
   1b51c:	bl	11660 <strtol@plt>
   1b520:	str	r0, [r4]
   1b524:	b	1b530 <argp_error@@Base+0x35c>
   1b528:	mov	r0, #1
   1b52c:	bl	11744 <sleep@plt>
   1b530:	ldr	r3, [r4]
   1b534:	sub	r2, r3, #1
   1b538:	cmp	r3, #0
   1b53c:	str	r2, [r4]
   1b540:	bgt	1b528 <argp_error@@Base+0x354>
   1b544:	mov	r0, #0
   1b548:	add	sp, sp, #8
   1b54c:	ldr	r4, [sp]
   1b550:	add	sp, sp, #4
   1b554:	pop	{pc}		; (ldr pc, [sp], #4)
   1b558:	mov	r0, #7
   1b55c:	add	sp, sp, #8
   1b560:	ldr	r4, [sp]
   1b564:	add	sp, sp, #4
   1b568:	pop	{pc}		; (ldr pc, [sp], #4)
   1b56c:	movw	r3, #9660	; 0x25bc
   1b570:	movt	r3, #3
   1b574:	str	r1, [sp, #4]
   1b578:	mov	r0, r1
   1b57c:	str	r1, [r3]
   1b580:	bl	1c84c <argp_parse@@Base+0xf64>
   1b584:	ldr	r3, [r4, #16]
   1b588:	movw	r2, #9656	; 0x25b8
   1b58c:	movt	r2, #3
   1b590:	str	r0, [r4, #40]	; 0x28
   1b594:	str	r0, [r2]
   1b598:	ldr	r1, [sp, #4]
   1b59c:	and	r3, r3, #3
   1b5a0:	cmp	r3, #1
   1b5a4:	bne	1b544 <argp_error@@Base+0x370>
   1b5a8:	ldr	r3, [r4, #8]
   1b5ac:	mov	r0, #0
   1b5b0:	str	r1, [r3]
   1b5b4:	b	1b4e4 <argp_error@@Base+0x310>
   1b5b8:	ldr	r1, [r4, #48]	; 0x30
   1b5bc:	mov	r0, r4
   1b5c0:	movw	r2, #513	; 0x201
   1b5c4:	bl	1b114 <argp_state_help@@Base>
   1b5c8:	mov	r0, #0
   1b5cc:	add	sp, sp, #8
   1b5d0:	ldr	r4, [sp]
   1b5d4:	add	sp, sp, #4
   1b5d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b5e0:	strd	r6, [sp, #8]
   1b5e4:	strd	r8, [sp, #16]
   1b5e8:	strd	sl, [sp, #24]
   1b5ec:	str	lr, [sp, #32]
   1b5f0:	sub	sp, sp, #44	; 0x2c
   1b5f4:	ldr	fp, [r0]
   1b5f8:	str	r3, [sp, #16]
   1b5fc:	ldr	r3, [r0, #16]
   1b600:	ldr	r7, [sp, #80]	; 0x50
   1b604:	cmp	fp, #0
   1b608:	str	r3, [sp, #24]
   1b60c:	strd	r0, [sp, #28]
   1b610:	str	r2, [sp, #36]	; 0x24
   1b614:	beq	1b8c0 <argp_error@@Base+0x6ec>
   1b618:	ldr	r9, [r7, #4]
   1b61c:	movw	r3, #36409	; 0x8e39
   1b620:	movt	r3, #14563	; 0x38e3
   1b624:	mov	r4, fp
   1b628:	str	r3, [sp, #20]
   1b62c:	ldr	r6, [r4, #4]
   1b630:	cmp	r6, #0
   1b634:	bne	1b644 <argp_error@@Base+0x470>
   1b638:	ldr	r3, [r4]
   1b63c:	cmp	r3, #0
   1b640:	beq	1b7b8 <argp_error@@Base+0x5e4>
   1b644:	ldr	r3, [r4, #12]
   1b648:	tst	r3, #4
   1b64c:	moveq	r5, r3
   1b650:	moveq	fp, r4
   1b654:	ldrne	r5, [fp, #12]
   1b658:	ands	r5, r5, #8
   1b65c:	bne	1b7a0 <argp_error@@Base+0x5cc>
   1b660:	tst	r3, #8
   1b664:	bne	1b6e4 <argp_error@@Base+0x510>
   1b668:	sub	r3, r6, #1
   1b66c:	cmp	r3, #254	; 0xfe
   1b670:	bhi	1b6e4 <argp_error@@Base+0x510>
   1b674:	bl	118c4 <__ctype_b_loc@plt>
   1b678:	ldr	r1, [r0]
   1b67c:	lsl	r3, r6, #1
   1b680:	ldrh	r3, [r1, r3]
   1b684:	tst	r3, #16384	; 0x4000
   1b688:	beq	1b6e4 <argp_error@@Base+0x510>
   1b68c:	add	r3, r9, #1
   1b690:	str	r3, [r7, #4]
   1b694:	strb	r6, [r9]
   1b698:	ldr	r3, [fp, #8]
   1b69c:	cmp	r3, #0
   1b6a0:	beq	1b6d4 <argp_error@@Base+0x500>
   1b6a4:	ldr	r3, [r7, #4]
   1b6a8:	mov	r2, #58	; 0x3a
   1b6ac:	add	r1, r3, #1
   1b6b0:	str	r1, [r7, #4]
   1b6b4:	strb	r2, [r3]
   1b6b8:	ldr	r3, [fp, #12]
   1b6bc:	tst	r3, #1
   1b6c0:	beq	1b6d4 <argp_error@@Base+0x500>
   1b6c4:	ldr	r3, [r7, #4]
   1b6c8:	add	r1, r3, #1
   1b6cc:	str	r1, [r7, #4]
   1b6d0:	strb	r2, [r3]
   1b6d4:	ldr	r3, [r7, #4]
   1b6d8:	mov	r2, #0
   1b6dc:	strb	r2, [r3]
   1b6e0:	ldr	r9, [r7, #4]
   1b6e4:	ldr	sl, [r4]
   1b6e8:	cmp	sl, #0
   1b6ec:	beq	1b7a0 <argp_error@@Base+0x5cc>
   1b6f0:	ldr	r3, [r7]
   1b6f4:	ldr	r8, [r3, #8]
   1b6f8:	str	r3, [sp, #12]
   1b6fc:	ldr	r0, [r8]
   1b700:	cmp	r0, #0
   1b704:	beq	1b728 <argp_error@@Base+0x554>
   1b708:	mov	r6, r8
   1b70c:	mov	r1, sl
   1b710:	bl	11654 <strcmp@plt>
   1b714:	cmp	r0, #0
   1b718:	beq	1b7a8 <argp_error@@Base+0x5d4>
   1b71c:	ldr	r0, [r6, #16]!
   1b720:	cmp	r0, #0
   1b724:	bne	1b70c <argp_error@@Base+0x538>
   1b728:	ldr	r0, [fp, #8]
   1b72c:	ldr	r1, [r7, #8]
   1b730:	cmp	r0, #0
   1b734:	str	sl, [r1]
   1b738:	beq	1b74c <argp_error@@Base+0x578>
   1b73c:	ldr	r3, [fp, #12]
   1b740:	tst	r3, #1
   1b744:	movne	r5, #2
   1b748:	moveq	r5, #1
   1b74c:	str	r5, [r1, #4]
   1b750:	mov	r3, #0
   1b754:	add	ip, r1, #16
   1b758:	ldr	r0, [r4, #4]
   1b75c:	str	r3, [r1, #8]
   1b760:	ldr	r2, [sp, #16]
   1b764:	cmp	r0, r3
   1b768:	ldr	r3, [sp, #12]
   1b76c:	ldreq	r0, [fp, #4]
   1b770:	ldr	r3, [r3, #48]	; 0x30
   1b774:	bic	r0, r0, #-16777216	; 0xff000000
   1b778:	sub	r3, r2, r3
   1b77c:	ldr	r2, [sp, #20]
   1b780:	asr	r3, r3, #2
   1b784:	mul	r3, r2, r3
   1b788:	add	r3, r3, #1
   1b78c:	add	r3, r0, r3, lsl #24
   1b790:	str	r3, [r1, #12]
   1b794:	mov	r3, #0
   1b798:	str	ip, [r7, #8]
   1b79c:	str	r3, [r1, #16]
   1b7a0:	add	r4, r4, #24
   1b7a4:	b	1b62c <argp_error@@Base+0x458>
   1b7a8:	sub	r6, r6, r8
   1b7ac:	cmp	r6, #0
   1b7b0:	bge	1b7a0 <argp_error@@Base+0x5cc>
   1b7b4:	b	1b728 <argp_error@@Base+0x554>
   1b7b8:	ldr	r3, [r4, #16]
   1b7bc:	cmp	r3, #0
   1b7c0:	bne	1b644 <argp_error@@Base+0x470>
   1b7c4:	ldr	r3, [r4, #20]
   1b7c8:	cmp	r3, #0
   1b7cc:	bne	1b644 <argp_error@@Base+0x470>
   1b7d0:	ldr	r3, [sp, #28]
   1b7d4:	ldr	r2, [r3, #4]
   1b7d8:	mov	r3, #0
   1b7dc:	ldr	r1, [sp, #16]
   1b7e0:	ldr	r0, [sp, #24]
   1b7e4:	str	r2, [r1]
   1b7e8:	mov	r2, r1
   1b7ec:	ldr	r1, [sp, #28]
   1b7f0:	cmp	r0, r3
   1b7f4:	stmib	r2, {r1, r9}
   1b7f8:	ldr	r1, [sp, #32]
   1b7fc:	str	r3, [r2, #12]
   1b800:	str	r1, [r2, #16]
   1b804:	ldr	r1, [sp, #36]	; 0x24
   1b808:	str	r3, [r2, #24]
   1b80c:	str	r3, [r2, #28]
   1b810:	str	r3, [r2, #32]
   1b814:	str	r1, [r2, #20]
   1b818:	beq	1b854 <argp_error@@Base+0x680>
   1b81c:	ldr	r2, [r0]
   1b820:	cmp	r2, r3
   1b824:	beq	1b8e0 <argp_error@@Base+0x70c>
   1b828:	mov	r1, r0
   1b82c:	add	r3, r3, #1
   1b830:	ldr	r2, [r1, r3, lsl #4]
   1b834:	cmp	r2, #0
   1b838:	bne	1b82c <argp_error@@Base+0x658>
   1b83c:	lsl	r3, r3, #2
   1b840:	ldr	r2, [r7, #12]
   1b844:	ldr	r1, [sp, #16]
   1b848:	add	r3, r2, r3
   1b84c:	str	r2, [r1, #28]
   1b850:	str	r3, [r7, #12]
   1b854:	ldr	r3, [sp, #16]
   1b858:	add	r0, r3, #36	; 0x24
   1b85c:	ldr	r5, [sp, #24]
   1b860:	cmp	r5, #0
   1b864:	beq	1b8a4 <argp_error@@Base+0x6d0>
   1b868:	ldr	r1, [r5]
   1b86c:	cmp	r1, #0
   1b870:	beq	1b8a4 <argp_error@@Base+0x6d0>
   1b874:	ldr	r6, [sp, #16]
   1b878:	mov	r2, #0
   1b87c:	add	r4, r2, #1
   1b880:	mov	r3, r0
   1b884:	str	r7, [sp]
   1b888:	mov	r0, r1
   1b88c:	mov	r1, r6
   1b890:	bl	1b5dc <argp_error@@Base+0x408>
   1b894:	ldr	r1, [r5, r4, lsl #4]
   1b898:	mov	r2, r4
   1b89c:	cmp	r1, #0
   1b8a0:	bne	1b87c <argp_error@@Base+0x6a8>
   1b8a4:	add	sp, sp, #44	; 0x2c
   1b8a8:	ldrd	r4, [sp]
   1b8ac:	ldrd	r6, [sp, #8]
   1b8b0:	ldrd	r8, [sp, #16]
   1b8b4:	ldrd	sl, [sp, #24]
   1b8b8:	add	sp, sp, #32
   1b8bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8c0:	ldr	r2, [r0, #4]
   1b8c4:	cmp	r2, #0
   1b8c8:	beq	1b8d4 <argp_error@@Base+0x700>
   1b8cc:	ldr	r9, [r7, #4]
   1b8d0:	b	1b7d8 <argp_error@@Base+0x604>
   1b8d4:	ldr	r0, [sp, #16]
   1b8d8:	str	r2, [sp, #16]
   1b8dc:	b	1b85c <argp_error@@Base+0x688>
   1b8e0:	mov	r3, r2
   1b8e4:	b	1b840 <argp_error@@Base+0x66c>

0001b8e8 <argp_parse@@Base>:
   1b8e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b8ec:	tst	r3, #1
   1b8f0:	mov	r4, r3
   1b8f4:	strd	r6, [sp, #8]
   1b8f8:	strd	r8, [sp, #16]
   1b8fc:	strd	sl, [sp, #24]
   1b900:	add	fp, sp, #32
   1b904:	str	lr, [sp, #32]
   1b908:	sub	sp, sp, #236	; 0xec
   1b90c:	str	r1, [fp, #-256]	; 0xffffff00
   1b910:	str	r2, [fp, #-236]	; 0xffffff14
   1b914:	str	r0, [fp, #-232]	; 0xffffff18
   1b918:	bne	1b944 <argp_parse@@Base+0x5c>
   1b91c:	movw	r3, #9660	; 0x25bc
   1b920:	movt	r3, #3
   1b924:	ldr	r2, [r3]
   1b928:	cmp	r2, #0
   1b92c:	beq	1c370 <argp_parse@@Base+0xa88>
   1b930:	movw	r5, #9656	; 0x25b8
   1b934:	movt	r5, #3
   1b938:	ldr	r3, [r5]
   1b93c:	cmp	r3, #0
   1b940:	beq	1c380 <argp_parse@@Base+0xa98>
   1b944:	ands	r3, r4, #4
   1b948:	moveq	r5, #1
   1b94c:	movne	r5, #0
   1b950:	ands	ip, r4, #16
   1b954:	str	r3, [fp, #-240]	; 0xffffff10
   1b958:	beq	1b9b0 <argp_parse@@Base+0xc8>
   1b95c:	ldr	r2, [fp, #-232]	; 0xffffff18
   1b960:	mov	r3, #0
   1b964:	sub	r9, fp, #196	; 0xc4
   1b968:	str	r5, [fp, #-228]	; 0xffffff1c
   1b96c:	str	r3, [fp, #-224]	; 0xffffff20
   1b970:	str	r3, [fp, #-220]	; 0xffffff24
   1b974:	str	r3, [fp, #-216]	; 0xffffff28
   1b978:	cmp	r2, r3
   1b97c:	str	r3, [r9, #8]
   1b980:	str	r3, [r9, #12]
   1b984:	str	r3, [r9, #16]
   1b988:	str	r3, [r9, #20]
   1b98c:	str	r3, [r9, #24]
   1b990:	str	r3, [r9, #28]
   1b994:	str	r3, [r9, #32]
   1b998:	bne	1ba64 <argp_parse@@Base+0x17c>
   1b99c:	mov	r3, #52	; 0x34
   1b9a0:	mov	sl, #36	; 0x24
   1b9a4:	str	r3, [fp, #-240]	; 0xffffff10
   1b9a8:	mov	r3, sl
   1b9ac:	b	1baa0 <argp_parse@@Base+0x1b8>
   1b9b0:	sub	sp, sp, #64	; 0x40
   1b9b4:	mov	r1, ip
   1b9b8:	add	r3, sp, #8
   1b9bc:	sub	sp, sp, #32
   1b9c0:	add	r7, sp, #8
   1b9c4:	mov	r0, r3
   1b9c8:	mov	r2, #64	; 0x40
   1b9cc:	str	ip, [r7]
   1b9d0:	str	ip, [r7, #4]
   1b9d4:	str	ip, [r7, #8]
   1b9d8:	str	ip, [r7, #12]
   1b9dc:	str	r3, [r7, #16]
   1b9e0:	str	ip, [r7, #20]
   1b9e4:	str	ip, [r7, #24]
   1b9e8:	bl	11954 <memset@plt>
   1b9ec:	ldr	r2, [fp, #-232]	; 0xffffff18
   1b9f0:	mov	r3, r0
   1b9f4:	cmp	r2, #0
   1b9f8:	strne	r2, [r3], #16
   1b9fc:	movw	r2, #12432	; 0x3090
   1ba00:	movt	r2, #3
   1ba04:	ldr	r1, [r2]
   1ba08:	movw	r2, #4788	; 0x12b4
   1ba0c:	movt	r2, #2
   1ba10:	str	r2, [r3]
   1ba14:	cmp	r1, #0
   1ba18:	beq	1c50c <argp_parse@@Base+0xc24>
   1ba1c:	ldr	r1, [pc, #3444]	; 1c798 <argp_parse@@Base+0xeb0>
   1ba20:	add	r2, r3, #32
   1ba24:	str	r1, [r3, #16]
   1ba28:	mov	r3, #0
   1ba2c:	sub	r9, fp, #196	; 0xc4
   1ba30:	str	r7, [fp, #-232]	; 0xffffff18
   1ba34:	str	r5, [fp, #-228]	; 0xffffff1c
   1ba38:	str	r3, [fp, #-224]	; 0xffffff20
   1ba3c:	str	r3, [fp, #-220]	; 0xffffff24
   1ba40:	str	r3, [fp, #-216]	; 0xffffff28
   1ba44:	str	r3, [r2]
   1ba48:	str	r3, [r9, #8]
   1ba4c:	str	r3, [r9, #12]
   1ba50:	str	r3, [r9, #16]
   1ba54:	str	r3, [r9, #20]
   1ba58:	str	r3, [r9, #24]
   1ba5c:	str	r3, [r9, #28]
   1ba60:	str	r3, [r9, #32]
   1ba64:	sub	r1, fp, #228	; 0xe4
   1ba68:	ldr	r0, [fp, #-232]	; 0xffffff18
   1ba6c:	bl	1b324 <argp_error@@Base+0x150>
   1ba70:	ldr	r5, [fp, #-228]	; 0xffffff1c
   1ba74:	ldr	r3, [fp, #-220]	; 0xffffff24
   1ba78:	ldr	r2, [fp, #-216]	; 0xffffff28
   1ba7c:	ldr	r7, [fp, #-224]	; 0xffffff20
   1ba80:	add	r3, r3, #1
   1ba84:	add	r3, r3, r3, lsl #3
   1ba88:	lsl	r2, r2, #2
   1ba8c:	lsl	r3, r3, #2
   1ba90:	add	r7, r7, #1
   1ba94:	add	sl, r2, r3
   1ba98:	add	r1, sl, r7, lsl #4
   1ba9c:	str	r1, [fp, #-240]	; 0xffffff10
   1baa0:	str	r3, [fp, #-252]	; 0xffffff04
   1baa4:	ldr	r3, [fp, #-240]	; 0xffffff10
   1baa8:	str	r2, [fp, #-244]	; 0xffffff0c
   1baac:	add	r0, r3, r5
   1bab0:	add	r0, r0, #1
   1bab4:	bl	1e144 <argp_parse@@Base+0x285c>
   1bab8:	cmp	r0, #0
   1babc:	mov	r5, r0
   1bac0:	str	r0, [fp, #-40]	; 0xffffffd8
   1bac4:	moveq	r5, #12
   1bac8:	ldr	r3, [fp, #-252]	; 0xffffff04
   1bacc:	ldr	r2, [fp, #-244]	; 0xffffff0c
   1bad0:	beq	1bfe4 <argp_parse@@Base+0x6fc>
   1bad4:	add	ip, r5, sl
   1bad8:	add	r3, r5, r3
   1badc:	ldr	r1, [fp, #-240]	; 0xffffff10
   1bae0:	str	ip, [fp, #-244]	; 0xffffff0c
   1bae4:	ldrd	r6, [r9, #8]
   1bae8:	str	ip, [fp, #-152]	; 0xffffff68
   1baec:	add	sl, r5, r1
   1baf0:	ldrd	r0, [r9, #16]
   1baf4:	str	r5, [fp, #-112]	; 0xffffff90
   1baf8:	strd	r6, [fp, #-140]	; 0xffffff74
   1bafc:	ldrd	r6, [r9, #24]
   1bb00:	strd	r0, [fp, #-252]	; 0xffffff04
   1bb04:	mov	r0, r3
   1bb08:	ldr	r1, [r9, #32]
   1bb0c:	str	sl, [fp, #-156]	; 0xffffff64
   1bb10:	ldrd	r8, [fp, #-252]	; 0xffffff04
   1bb14:	str	r3, [fp, #-104]	; 0xffffff98
   1bb18:	strd	r8, [fp, #-132]	; 0xffffff7c
   1bb1c:	mov	r9, #1
   1bb20:	mov	r8, #1
   1bb24:	str	r1, [fp, #-116]	; 0xffffff8c
   1bb28:	mov	r1, #0
   1bb2c:	strd	r8, [fp, #-196]	; 0xffffff3c
   1bb30:	strd	r8, [fp, #-148]	; 0xffffff6c
   1bb34:	sub	r9, fp, #160	; 0xa0
   1bb38:	strd	r6, [fp, #-124]	; 0xffffff84
   1bb3c:	bl	11954 <memset@plt>
   1bb40:	ldr	ip, [fp, #-244]	; 0xffffff0c
   1bb44:	tst	r4, #8
   1bb48:	str	r9, [fp, #-212]	; 0xffffff2c
   1bb4c:	str	sl, [fp, #-208]	; 0xffffff30
   1bb50:	str	ip, [fp, #-204]	; 0xffffff34
   1bb54:	str	r0, [fp, #-200]	; 0xffffff38
   1bb58:	bne	1c004 <argp_parse@@Base+0x71c>
   1bb5c:	ands	r3, r4, #4
   1bb60:	cmp	r3, #0
   1bb64:	moveq	r3, sl
   1bb68:	moveq	r2, ip
   1bb6c:	beq	1bb84 <argp_parse@@Base+0x29c>
   1bb70:	mov	r2, #43	; 0x2b
   1bb74:	add	r3, sl, #1
   1bb78:	strb	r2, [sl]
   1bb7c:	mov	r2, ip
   1bb80:	str	r3, [fp, #-208]	; 0xffffff30
   1bb84:	ldr	r0, [fp, #-232]	; 0xffffff18
   1bb88:	mov	r5, #0
   1bb8c:	strb	r5, [r3]
   1bb90:	str	r5, [r2]
   1bb94:	cmp	r0, r5
   1bb98:	str	r0, [fp, #-160]	; 0xffffff60
   1bb9c:	beq	1c1f0 <argp_parse@@Base+0x908>
   1bba0:	sub	ip, fp, #212	; 0xd4
   1bba4:	mov	r2, r5
   1bba8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bbac:	mov	r1, r5
   1bbb0:	str	ip, [sp]
   1bbb4:	bl	1b5dc <argp_error@@Base+0x408>
   1bbb8:	movw	r1, #9664	; 0x25c0
   1bbbc:	movt	r1, #3
   1bbc0:	ldr	r6, [fp, #-236]	; 0xffffff14
   1bbc4:	mov	lr, #1
   1bbc8:	movw	r2, #9668	; 0x25c4
   1bbcc:	movt	r2, #3
   1bbd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bbd4:	str	r0, [fp, #-108]	; 0xffffff94
   1bbd8:	ldr	ip, [r1]
   1bbdc:	str	lr, [fp, #-100]	; 0xffffff9c
   1bbe0:	ldr	r1, [fp, #-256]	; 0xffffff00
   1bbe4:	cmp	r0, r3
   1bbe8:	mov	r0, #0
   1bbec:	ldr	lr, [fp, #-160]	; 0xffffff60
   1bbf0:	movls	r3, r6
   1bbf4:	ldr	r2, [r2]
   1bbf8:	str	ip, [fp, #-52]	; 0xffffffcc
   1bbfc:	str	r9, [fp, #-44]	; 0xffffffd4
   1bc00:	str	r1, [fp, #-92]	; 0xffffffa4
   1bc04:	mov	r1, #0
   1bc08:	str	lr, [fp, #-96]	; 0xffffffa0
   1bc0c:	str	r6, [fp, #-88]	; 0xffffffa8
   1bc10:	str	r5, [fp, #-84]	; 0xffffffac
   1bc14:	str	r4, [fp, #-80]	; 0xffffffb0
   1bc18:	strd	r0, [fp, #-76]	; 0xffffffb4
   1bc1c:	strd	r0, [fp, #-68]	; 0xffffffbc
   1bc20:	strd	r0, [fp, #-60]	; 0xffffffc4
   1bc24:	str	r2, [fp, #-48]	; 0xffffffd0
   1bc28:	bls	1bd10 <argp_parse@@Base+0x428>
   1bc2c:	ldr	r2, [fp, #8]
   1bc30:	mov	r8, r6
   1bc34:	add	r4, r3, #36	; 0x24
   1bc38:	mov	r6, #3
   1bc3c:	movt	r6, #256	; 0x100
   1bc40:	str	r2, [r3, #24]
   1bc44:	b	1bc90 <argp_parse@@Base+0x3a8>
   1bc48:	ldr	r7, [r4, #-24]	; 0xffffffe8
   1bc4c:	ldr	r5, [r4, #-12]
   1bc50:	ldr	lr, [r4, #-8]
   1bc54:	ldr	ip, [r4, #-4]
   1bc58:	str	r7, [fp, #-76]	; 0xffffffb4
   1bc5c:	str	r5, [fp, #-68]	; 0xffffffbc
   1bc60:	str	lr, [fp, #-64]	; 0xffffffc0
   1bc64:	str	ip, [fp, #-60]	; 0xffffffc4
   1bc68:	blx	r3
   1bc6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bc70:	str	r3, [r4, #-4]
   1bc74:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bc78:	cmp	r3, r4
   1bc7c:	bls	1c2a4 <argp_parse@@Base+0x9bc>
   1bc80:	cmp	r0, #7
   1bc84:	cmpne	r0, #0
   1bc88:	bne	1c294 <argp_parse@@Base+0x9ac>
   1bc8c:	add	r4, r4, #36	; 0x24
   1bc90:	ldr	r3, [r4, #-20]	; 0xffffffec
   1bc94:	mov	r1, #0
   1bc98:	sub	r2, fp, #96	; 0x60
   1bc9c:	mov	r0, r6
   1bca0:	cmp	r3, r1
   1bca4:	beq	1bcb8 <argp_parse@@Base+0x3d0>
   1bca8:	ldr	ip, [r4, #-16]
   1bcac:	ldr	r3, [r3, #28]
   1bcb0:	ldr	r3, [r3, ip, lsl #2]
   1bcb4:	str	r3, [r4, #-12]
   1bcb8:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1bcbc:	cmp	r3, #0
   1bcc0:	bne	1bc48 <argp_parse@@Base+0x360>
   1bcc4:	ldr	r3, [r4, #-32]	; 0xffffffe0
   1bcc8:	ldr	r3, [r3, #16]
   1bccc:	cmp	r3, #0
   1bcd0:	beq	1bcf8 <argp_parse@@Base+0x410>
   1bcd4:	ldr	r3, [r3]
   1bcd8:	cmp	r3, #0
   1bcdc:	beq	1bcf8 <argp_parse@@Base+0x410>
   1bce0:	ldr	ip, [r4, #-12]
   1bce4:	ldr	r3, [r4, #-8]
   1bce8:	str	ip, [r3]
   1bcec:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1bcf0:	cmp	r3, #0
   1bcf4:	bne	1bc48 <argp_parse@@Base+0x360>
   1bcf8:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bcfc:	cmp	r4, r3
   1bd00:	bcc	1bc8c <argp_parse@@Base+0x3a4>
   1bd04:	str	r8, [fp, #-236]	; 0xffffff14
   1bd08:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bd0c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1bd10:	tst	r4, #2
   1bd14:	beq	1c264 <argp_parse@@Base+0x97c>
   1bd18:	tst	r4, #1
   1bd1c:	mov	r2, #0
   1bd20:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1bd24:	subne	r3, r3, #4
   1bd28:	str	r2, [fp, #-144]	; 0xffffff70
   1bd2c:	ldr	r2, [fp, #-236]	; 0xffffff14
   1bd30:	strne	r3, [fp, #-88]	; 0xffffffa8
   1bd34:	addne	r4, r4, #1
   1bd38:	strne	r4, [fp, #-92]	; 0xffffffa4
   1bd3c:	cmp	r2, r3
   1bd40:	beq	1c27c <argp_parse@@Base+0x994>
   1bd44:	movw	r3, #9656	; 0x25b8
   1bd48:	movt	r3, #3
   1bd4c:	ldr	r3, [r3]
   1bd50:	str	r3, [fp, #-56]	; 0xffffffc8
   1bd54:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1bd58:	movw	r3, #476	; 0x1dc
   1bd5c:	movt	r3, #2
   1bd60:	mov	r9, #6
   1bd64:	movt	r9, #256	; 0x100
   1bd68:	ldr	r7, [fp, #-84]	; 0xffffffac
   1bd6c:	mov	r0, r4
   1bd70:	str	r3, [fp, #-232]	; 0xffffff18
   1bd74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1bd78:	cmp	r3, #0
   1bd7c:	beq	1be64 <argp_parse@@Base+0x57c>
   1bd80:	cmp	r3, r7
   1bd84:	movgt	r3, #0
   1bd88:	strgt	r3, [fp, #-72]	; 0xffffffb8
   1bd8c:	bgt	1be64 <argp_parse@@Base+0x57c>
   1bd90:	cmp	r7, r0
   1bd94:	bge	1c0b4 <argp_parse@@Base+0x7cc>
   1bd98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1bd9c:	tst	r3, #4
   1bda0:	bne	1c2c8 <argp_parse@@Base+0x9e0>
   1bda4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1bda8:	ldr	r5, [r3, r7, lsl #2]
   1bdac:	str	r5, [fp, #-136]	; 0xffffff78
   1bdb0:	ldr	r8, [fp, #-112]	; 0xffffff90
   1bdb4:	str	r7, [fp, #-84]	; 0xffffffac
   1bdb8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1bdbc:	cmp	r8, ip
   1bdc0:	bcs	1c0ac <argp_parse@@Base+0x7c4>
   1bdc4:	mov	r3, r7
   1bdc8:	add	r4, r8, #36	; 0x24
   1bdcc:	ldr	sl, [r4, #-36]	; 0xffffffdc
   1bdd0:	mov	r0, #0
   1bdd4:	add	lr, r3, #1
   1bdd8:	sub	r2, fp, #96	; 0x60
   1bddc:	mov	r1, r5
   1bde0:	sub	r6, r4, #36	; 0x24
   1bde4:	mov	r8, r4
   1bde8:	str	lr, [fp, #-84]	; 0xffffffac
   1bdec:	cmp	sl, r0
   1bdf0:	beq	1c098 <argp_parse@@Base+0x7b0>
   1bdf4:	ldr	r3, [r4, #-12]
   1bdf8:	ldr	lr, [r4, #-8]
   1bdfc:	ldr	ip, [r4, #-4]
   1be00:	str	r3, [fp, #-68]	; 0xffffffbc
   1be04:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1be08:	str	r3, [fp, #-76]	; 0xffffffb4
   1be0c:	str	lr, [fp, #-64]	; 0xffffffc0
   1be10:	str	ip, [fp, #-60]	; 0xffffffc4
   1be14:	blx	sl
   1be18:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1be1c:	cmp	r0, #7
   1be20:	str	r3, [r4, #-4]
   1be24:	beq	1c020 <argp_parse@@Base+0x738>
   1be28:	cmp	r0, #0
   1be2c:	bne	1c168 <argp_parse@@Base+0x880>
   1be30:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1be34:	ldr	r3, [fp, #-84]	; 0xffffffac
   1be38:	cmp	r7, r3
   1be3c:	bge	1c180 <argp_parse@@Base+0x898>
   1be40:	ldr	r1, [r4, #-24]	; 0xffffffe8
   1be44:	sub	ip, r3, r7
   1be48:	mov	r7, r3
   1be4c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1be50:	add	r3, r1, ip
   1be54:	str	r3, [r4, #-24]	; 0xffffffe8
   1be58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1be5c:	cmp	r3, #0
   1be60:	bne	1bd80 <argp_parse@@Base+0x498>
   1be64:	cmp	r2, #0
   1be68:	beq	1bd90 <argp_parse@@Base+0x4a8>
   1be6c:	mvn	r2, #0
   1be70:	str	r7, [fp, #-148]	; 0xffffff6c
   1be74:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1be78:	str	r2, [fp, #-140]	; 0xffffff74
   1be7c:	ldr	r2, [fp, #-156]	; 0xffffff64
   1be80:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1be84:	ands	ip, r3, #64	; 0x40
   1be88:	ldr	r3, [fp, #-152]	; 0xffffff68
   1be8c:	beq	1c194 <argp_parse@@Base+0x8ac>
   1be90:	mov	ip, #0
   1be94:	sub	lr, fp, #148	; 0x94
   1be98:	stm	sp, {ip, lr}
   1be9c:	bl	1cbf8 <argp_parse@@Base+0x1310>
   1bea0:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1bea4:	mov	r4, r0
   1bea8:	cmn	r4, #1
   1beac:	str	r7, [fp, #-84]	; 0xffffffac
   1beb0:	beq	1c1b8 <argp_parse@@Base+0x8d0>
   1beb4:	cmp	r4, #63	; 0x3f
   1beb8:	beq	1bed0 <argp_parse@@Base+0x5e8>
   1bebc:	cmp	r4, #1
   1bec0:	bne	1c47c <argp_parse@@Base+0xb94>
   1bec4:	sub	r7, r7, #1
   1bec8:	ldr	r5, [fp, #-136]	; 0xffffff78
   1becc:	b	1bdb0 <argp_parse@@Base+0x4c8>
   1bed0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1bed4:	cmn	r3, #1
   1bed8:	beq	1c394 <argp_parse@@Base+0xaac>
   1bedc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bee0:	sub	r6, fp, #96	; 0x60
   1bee4:	mov	r0, r6
   1bee8:	mov	r2, #260	; 0x104
   1beec:	mov	r5, #7
   1bef0:	bl	1b114 <argp_state_help@@Base>
   1bef4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bef8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1befc:	cmp	r3, ip
   1bf00:	mov	r6, r3
   1bf04:	mov	r4, ip
   1bf08:	bcs	1c71c <argp_parse@@Base+0xe34>
   1bf0c:	mov	r7, #5
   1bf10:	movt	r7, #256	; 0x100
   1bf14:	ldr	r3, [r6]
   1bf18:	mov	r1, #0
   1bf1c:	sub	r2, fp, #96	; 0x60
   1bf20:	mov	r0, r7
   1bf24:	cmp	r3, r1
   1bf28:	beq	1c458 <argp_parse@@Base+0xb70>
   1bf2c:	ldr	ip, [r6, #24]
   1bf30:	add	r6, r6, #36	; 0x24
   1bf34:	ldr	r4, [r6, #-8]
   1bf38:	ldr	lr, [r6, #-4]
   1bf3c:	str	ip, [fp, #-68]	; 0xffffffbc
   1bf40:	ldr	ip, [r6, #-24]	; 0xffffffe8
   1bf44:	str	ip, [fp, #-76]	; 0xffffffb4
   1bf48:	str	r4, [fp, #-64]	; 0xffffffc0
   1bf4c:	str	lr, [fp, #-60]	; 0xffffffc4
   1bf50:	blx	r3
   1bf54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bf58:	str	r3, [r6, #-4]
   1bf5c:	ldr	r4, [fp, #-108]	; 0xffffff94
   1bf60:	cmp	r6, r4
   1bf64:	bcc	1bf14 <argp_parse@@Base+0x62c>
   1bf68:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bf6c:	sub	r4, r4, #36	; 0x24
   1bf70:	cmp	r3, r4
   1bf74:	bhi	1bfd4 <argp_parse@@Base+0x6ec>
   1bf78:	mov	r7, #7
   1bf7c:	movt	r7, #256	; 0x100
   1bf80:	ldr	r6, [r4]
   1bf84:	mov	r1, #0
   1bf88:	sub	r2, fp, #96	; 0x60
   1bf8c:	mov	r0, r7
   1bf90:	cmp	r6, r1
   1bf94:	beq	1c448 <argp_parse@@Base+0xb60>
   1bf98:	ldr	r8, [r4, #12]
   1bf9c:	sub	r4, r4, #36	; 0x24
   1bfa0:	ldr	lr, [r4, #60]	; 0x3c
   1bfa4:	ldr	ip, [r4, #64]	; 0x40
   1bfa8:	ldr	r3, [r4, #68]	; 0x44
   1bfac:	str	r8, [fp, #-76]	; 0xffffffb4
   1bfb0:	str	lr, [fp, #-68]	; 0xffffffbc
   1bfb4:	str	ip, [fp, #-64]	; 0xffffffc0
   1bfb8:	str	r3, [fp, #-60]	; 0xffffffc4
   1bfbc:	blx	r6
   1bfc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bfc4:	str	r3, [r4, #68]	; 0x44
   1bfc8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1bfcc:	cmp	r3, r4
   1bfd0:	bls	1bf80 <argp_parse@@Base+0x698>
   1bfd4:	cmp	r5, #7
   1bfd8:	moveq	r5, #22
   1bfdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bfe0:	bl	1cb08 <argp_parse@@Base+0x1220>
   1bfe4:	mov	r0, r5
   1bfe8:	sub	sp, fp, #32
   1bfec:	ldrd	r4, [sp]
   1bff0:	ldrd	r6, [sp, #8]
   1bff4:	ldrd	r8, [sp, #16]
   1bff8:	ldrd	sl, [sp, #24]
   1bffc:	add	sp, sp, #32
   1c000:	pop	{pc}		; (ldr pc, [sp], #4)
   1c004:	ldr	r1, [fp, #-240]	; 0xffffff10
   1c008:	mov	r2, #45	; 0x2d
   1c00c:	add	r3, sl, #1
   1c010:	str	r3, [fp, #-208]	; 0xffffff30
   1c014:	strb	r2, [r5, r1]
   1c018:	mov	r2, ip
   1c01c:	b	1bb84 <argp_parse@@Base+0x29c>
   1c020:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c024:	ldr	sl, [r4, #-36]	; 0xffffffdc
   1c028:	sub	r3, r3, #1
   1c02c:	cmp	sl, #0
   1c030:	str	r3, [fp, #-84]	; 0xffffffac
   1c034:	beq	1c764 <argp_parse@@Base+0xe7c>
   1c038:	ldr	r3, [r6, #24]
   1c03c:	sub	r2, fp, #96	; 0x60
   1c040:	mov	r1, #0
   1c044:	mov	r0, r9
   1c048:	ldr	lr, [r6, #28]
   1c04c:	ldr	ip, [r6, #32]
   1c050:	str	r3, [fp, #-68]	; 0xffffffbc
   1c054:	ldr	r3, [r6, #12]
   1c058:	str	r3, [fp, #-76]	; 0xffffffb4
   1c05c:	str	lr, [fp, #-64]	; 0xffffffc0
   1c060:	str	ip, [fp, #-60]	; 0xffffffc4
   1c064:	blx	sl
   1c068:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c06c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c070:	cmp	ip, r4
   1c074:	movls	r2, #0
   1c078:	movhi	r2, #1
   1c07c:	cmp	r0, #7
   1c080:	str	r3, [r6, #32]
   1c084:	movne	r2, #0
   1c088:	cmp	r2, #0
   1c08c:	beq	1c76c <argp_parse@@Base+0xe84>
   1c090:	ldr	r3, [fp, #-84]	; 0xffffffac
   1c094:	b	1bdc8 <argp_parse@@Base+0x4e0>
   1c098:	str	r3, [fp, #-84]	; 0xffffffac
   1c09c:	add	r2, r4, #36	; 0x24
   1c0a0:	cmp	ip, r4
   1c0a4:	mov	r4, r2
   1c0a8:	bhi	1bdcc <argp_parse@@Base+0x4e4>
   1c0ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c0b0:	ldr	r7, [fp, #-84]	; 0xffffffac
   1c0b4:	cmp	r7, r0
   1c0b8:	bne	1c2c8 <argp_parse@@Base+0x9e0>
   1c0bc:	ldr	r4, [fp, #-112]	; 0xffffff90
   1c0c0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c0c4:	mov	r3, r4
   1c0c8:	cmp	r4, ip
   1c0cc:	bcs	1c72c <argp_parse@@Base+0xe44>
   1c0d0:	mov	r6, #2
   1c0d4:	movt	r6, #256	; 0x100
   1c0d8:	mov	r5, #0
   1c0dc:	b	1c124 <argp_parse@@Base+0x83c>
   1c0e0:	ldr	r7, [r4, #-12]
   1c0e4:	ldr	lr, [r4, #-8]
   1c0e8:	ldr	ip, [r4, #-4]
   1c0ec:	str	r3, [fp, #-76]	; 0xffffffb4
   1c0f0:	str	r7, [fp, #-68]	; 0xffffffbc
   1c0f4:	str	lr, [fp, #-64]	; 0xffffffc0
   1c0f8:	str	ip, [fp, #-60]	; 0xffffffc4
   1c0fc:	blx	r5
   1c100:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c104:	mov	r5, r0
   1c108:	str	r3, [r4, #-4]
   1c10c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c110:	cmp	ip, r4
   1c114:	bls	1c600 <argp_parse@@Base+0xd18>
   1c118:	cmp	r5, #7
   1c11c:	cmpne	r5, #0
   1c120:	bne	1c5c8 <argp_parse@@Base+0xce0>
   1c124:	ldr	r3, [r4, #12]
   1c128:	sub	r2, fp, #96	; 0x60
   1c12c:	mov	r0, r6
   1c130:	add	r4, r4, #36	; 0x24
   1c134:	subs	r1, r3, #0
   1c138:	bne	1c110 <argp_parse@@Base+0x828>
   1c13c:	ldr	r5, [r4, #-36]	; 0xffffffdc
   1c140:	cmp	r5, #0
   1c144:	bne	1c0e0 <argp_parse@@Base+0x7f8>
   1c148:	cmp	ip, r4
   1c14c:	mov	r5, #7
   1c150:	bhi	1c124 <argp_parse@@Base+0x83c>
   1c154:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c158:	sub	r4, ip, #36	; 0x24
   1c15c:	cmp	r3, r4
   1c160:	bls	1c61c <argp_parse@@Base+0xd34>
   1c164:	b	1c6a0 <argp_parse@@Base+0xdb8>
   1c168:	mov	r5, r0
   1c16c:	cmp	r5, #7
   1c170:	bne	1bef4 <argp_parse@@Base+0x60c>
   1c174:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c178:	sub	r6, fp, #96	; 0x60
   1c17c:	b	1bee4 <argp_parse@@Base+0x5fc>
   1c180:	mov	r1, #1
   1c184:	mov	r7, r3
   1c188:	mov	r2, r1
   1c18c:	str	r1, [fp, #-100]	; 0xffffff9c
   1c190:	b	1bd74 <argp_parse@@Base+0x48c>
   1c194:	str	ip, [sp]
   1c198:	sub	ip, fp, #148	; 0x94
   1c19c:	str	ip, [sp, #4]
   1c1a0:	bl	1cb90 <argp_parse@@Base+0x12a8>
   1c1a4:	ldr	r7, [fp, #-148]	; 0xffffff6c
   1c1a8:	mov	r4, r0
   1c1ac:	cmn	r4, #1
   1c1b0:	str	r7, [fp, #-84]	; 0xffffffac
   1c1b4:	bne	1beb4 <argp_parse@@Base+0x5cc>
   1c1b8:	mov	r3, #0
   1c1bc:	cmp	r7, #1
   1c1c0:	str	r3, [fp, #-100]	; 0xffffff9c
   1c1c4:	ble	1c29c <argp_parse@@Base+0x9b4>
   1c1c8:	sub	r3, r7, #-1073741823	; 0xc0000001
   1c1cc:	ldr	r1, [fp, #-232]	; 0xffffff18
   1c1d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1c1d4:	ldr	r0, [r2, r3, lsl #2]
   1c1d8:	bl	11654 <strcmp@plt>
   1c1dc:	cmp	r0, #0
   1c1e0:	bne	1c29c <argp_parse@@Base+0x9b4>
   1c1e4:	str	r7, [fp, #-72]	; 0xffffffb8
   1c1e8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c1ec:	b	1bd90 <argp_parse@@Base+0x4a8>
   1c1f0:	ldr	r2, [fp, #-256]	; 0xffffff00
   1c1f4:	movw	r3, #9664	; 0x25c0
   1c1f8:	movt	r3, #3
   1c1fc:	mov	lr, r0
   1c200:	mov	r0, #1
   1c204:	ldr	r1, [r3]
   1c208:	movw	r3, #9668	; 0x25c4
   1c20c:	movt	r3, #3
   1c210:	str	r0, [fp, #-100]	; 0xffffff9c
   1c214:	mov	r0, #0
   1c218:	tst	r4, #2
   1c21c:	ldr	ip, [fp, #-236]	; 0xffffff14
   1c220:	str	lr, [fp, #-96]	; 0xffffffa0
   1c224:	str	r2, [fp, #-92]	; 0xffffffa4
   1c228:	ldr	r2, [fp, #-112]	; 0xffffff90
   1c22c:	ldr	r3, [r3]
   1c230:	str	r2, [fp, #-108]	; 0xffffff94
   1c234:	str	r1, [fp, #-52]	; 0xffffffcc
   1c238:	mov	r1, #0
   1c23c:	str	ip, [fp, #-88]	; 0xffffffa8
   1c240:	str	lr, [fp, #-84]	; 0xffffffac
   1c244:	str	r4, [fp, #-80]	; 0xffffffb0
   1c248:	strd	r0, [fp, #-76]	; 0xffffffb4
   1c24c:	strd	r0, [fp, #-68]	; 0xffffffbc
   1c250:	strd	r0, [fp, #-60]	; 0xffffffc4
   1c254:	str	r3, [fp, #-48]	; 0xffffffd0
   1c258:	mov	r3, ip
   1c25c:	str	r9, [fp, #-44]	; 0xffffffd4
   1c260:	bne	1bd18 <argp_parse@@Base+0x430>
   1c264:	mov	r2, #1
   1c268:	ldr	r4, [fp, #-92]	; 0xffffffa4
   1c26c:	str	r2, [fp, #-144]	; 0xffffff70
   1c270:	ldr	r2, [fp, #-236]	; 0xffffff14
   1c274:	cmp	r2, r3
   1c278:	bne	1bd44 <argp_parse@@Base+0x45c>
   1c27c:	ldr	r0, [r2]
   1c280:	cmp	r0, #0
   1c284:	beq	1bd44 <argp_parse@@Base+0x45c>
   1c288:	bl	1c84c <argp_parse@@Base+0xf64>
   1c28c:	str	r0, [fp, #-56]	; 0xffffffc8
   1c290:	b	1bd54 <argp_parse@@Base+0x46c>
   1c294:	mov	r5, r0
   1c298:	b	1bfe4 <argp_parse@@Base+0x6fc>
   1c29c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c2a0:	b	1bd90 <argp_parse@@Base+0x4a8>
   1c2a4:	cmp	r0, #7
   1c2a8:	mov	r5, r0
   1c2ac:	str	r8, [fp, #-236]	; 0xffffff14
   1c2b0:	beq	1bd08 <argp_parse@@Base+0x420>
   1c2b4:	cmp	r0, #0
   1c2b8:	bne	1bfe4 <argp_parse@@Base+0x6fc>
   1c2bc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1c2c0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1c2c4:	b	1bd10 <argp_parse@@Base+0x428>
   1c2c8:	ldr	r3, [fp, #4]
   1c2cc:	cmp	r3, #0
   1c2d0:	beq	1c410 <argp_parse@@Base+0xb28>
   1c2d4:	str	r7, [r3]
   1c2d8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c2dc:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c2e0:	sub	r2, ip, #36	; 0x24
   1c2e4:	cmp	r3, r2
   1c2e8:	movls	r6, #4
   1c2ec:	subls	r4, ip, #72	; 0x48
   1c2f0:	movtls	r6, #256	; 0x100
   1c2f4:	bhi	1c548 <argp_parse@@Base+0xc60>
   1c2f8:	ldr	r5, [r4, #36]	; 0x24
   1c2fc:	mov	r1, #0
   1c300:	sub	r2, fp, #96	; 0x60
   1c304:	mov	r0, r6
   1c308:	cmp	r5, r1
   1c30c:	beq	1c468 <argp_parse@@Base+0xb80>
   1c310:	ldr	r3, [r4, #60]	; 0x3c
   1c314:	ldr	lr, [r4, #64]	; 0x40
   1c318:	ldr	ip, [r4, #68]	; 0x44
   1c31c:	str	r3, [fp, #-68]	; 0xffffffbc
   1c320:	ldr	r3, [r4, #48]	; 0x30
   1c324:	str	r3, [fp, #-76]	; 0xffffffb4
   1c328:	str	lr, [fp, #-64]	; 0xffffffc0
   1c32c:	str	ip, [fp, #-60]	; 0xffffffc4
   1c330:	blx	r5
   1c334:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c338:	str	r3, [r4, #68]	; 0x44
   1c33c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c340:	cmp	r4, r3
   1c344:	sub	r4, r4, #36	; 0x24
   1c348:	bcc	1c528 <argp_parse@@Base+0xc40>
   1c34c:	cmp	r0, #7
   1c350:	cmpne	r0, #0
   1c354:	beq	1c2f8 <argp_parse@@Base+0xa10>
   1c358:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c35c:	mov	r5, r0
   1c360:	sub	r4, ip, #36	; 0x24
   1c364:	cmp	r4, r3
   1c368:	bcs	1bf78 <argp_parse@@Base+0x690>
   1c36c:	b	1bfdc <argp_parse@@Base+0x6f4>
   1c370:	ldr	r2, [fp, #-236]	; 0xffffff14
   1c374:	ldr	r2, [r2]
   1c378:	str	r2, [r3]
   1c37c:	b	1b930 <argp_parse@@Base+0x48>
   1c380:	ldr	r3, [fp, #-236]	; 0xffffff14
   1c384:	ldr	r0, [r3]
   1c388:	bl	1c84c <argp_parse@@Base+0xf64>
   1c38c:	str	r0, [r5]
   1c390:	b	1b944 <argp_parse@@Base+0x5c>
   1c394:	mov	r1, r4
   1c398:	ldr	r0, [fp, #-156]	; 0xffffff64
   1c39c:	bl	11900 <strchr@plt>
   1c3a0:	cmp	r0, #0
   1c3a4:	beq	1c3e0 <argp_parse@@Base+0xaf8>
   1c3a8:	ldr	r5, [fp, #-112]	; 0xffffff90
   1c3ac:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c3b0:	cmp	r5, r2
   1c3b4:	bcs	1c3e0 <argp_parse@@Base+0xaf8>
   1c3b8:	ldr	r3, [r5, #8]
   1c3bc:	cmp	r3, r0
   1c3c0:	bls	1c3d4 <argp_parse@@Base+0xaec>
   1c3c4:	b	1c6bc <argp_parse@@Base+0xdd4>
   1c3c8:	ldr	r3, [r5, #8]
   1c3cc:	cmp	r0, r3
   1c3d0:	bcc	1c6bc <argp_parse@@Base+0xdd4>
   1c3d4:	add	r5, r5, #36	; 0x24
   1c3d8:	cmp	r5, r2
   1c3dc:	bcc	1c3c8 <argp_parse@@Base+0xae0>
   1c3e0:	sub	r6, fp, #96	; 0x60
   1c3e4:	mov	r2, r4
   1c3e8:	add	r4, r4, #1
   1c3ec:	ldr	r3, [pc, #936]	; 1c79c <argp_parse@@Base+0xeb4>
   1c3f0:	movw	r1, #5112	; 0x13f8
   1c3f4:	movt	r1, #2
   1c3f8:	mov	r0, r6
   1c3fc:	bic	r4, r4, #2
   1c400:	bl	1b1d4 <argp_error@@Base>
   1c404:	cmp	r4, #0
   1c408:	bne	1c440 <argp_parse@@Base+0xb58>
   1c40c:	b	1c0ac <argp_parse@@Base+0x7c4>
   1c410:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1c414:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c418:	tst	r3, #2
   1c41c:	bne	1c178 <argp_parse@@Base+0x890>
   1c420:	cmp	r1, #0
   1c424:	beq	1c178 <argp_parse@@Base+0x890>
   1c428:	mov	r0, r1
   1c42c:	movw	r1, #5132	; 0x140c
   1c430:	movt	r1, #2
   1c434:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c438:	sub	r6, fp, #96	; 0x60
   1c43c:	bl	1190c <fprintf@plt>
   1c440:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c444:	b	1bee4 <argp_parse@@Base+0x5fc>
   1c448:	sub	r4, r4, #36	; 0x24
   1c44c:	cmp	r4, r3
   1c450:	bcs	1bf80 <argp_parse@@Base+0x698>
   1c454:	b	1bfd4 <argp_parse@@Base+0x6ec>
   1c458:	add	r6, r6, #36	; 0x24
   1c45c:	cmp	r6, r4
   1c460:	bcc	1bf14 <argp_parse@@Base+0x62c>
   1c464:	b	1bf68 <argp_parse@@Base+0x680>
   1c468:	cmp	r4, r3
   1c46c:	sub	r4, r4, #36	; 0x24
   1c470:	bcs	1c2f8 <argp_parse@@Base+0xa10>
   1c474:	mov	r5, #7
   1c478:	b	1c52c <argp_parse@@Base+0xc44>
   1c47c:	asrs	r8, r4, #24
   1c480:	beq	1c394 <argp_parse@@Base+0xaac>
   1c484:	add	r3, r8, r8, lsl #3
   1c488:	ldr	r5, [fp, #-112]	; 0xffffff90
   1c48c:	ands	r2, r4, #8388608	; 0x800000
   1c490:	movne	r2, #-16777216	; 0xff000000
   1c494:	bic	r0, r4, #-16777216	; 0xff000000
   1c498:	lsl	r3, r3, #2
   1c49c:	orr	r0, r0, r2
   1c4a0:	sub	r3, r3, #36	; 0x24
   1c4a4:	ldr	r7, [r5, r3]
   1c4a8:	add	r5, r5, r3
   1c4ac:	cmp	r7, #0
   1c4b0:	beq	1c724 <argp_parse@@Base+0xe3c>
   1c4b4:	ldr	r3, [r5, #24]
   1c4b8:	sub	r6, fp, #96	; 0x60
   1c4bc:	mov	r2, r6
   1c4c0:	ldr	ip, [r5, #28]
   1c4c4:	ldr	r1, [r5, #32]
   1c4c8:	str	r3, [fp, #-68]	; 0xffffffbc
   1c4cc:	ldr	r3, [r5, #12]
   1c4d0:	str	r3, [fp, #-76]	; 0xffffffb4
   1c4d4:	str	ip, [fp, #-64]	; 0xffffffc0
   1c4d8:	str	r1, [fp, #-60]	; 0xffffffc4
   1c4dc:	ldr	r1, [fp, #-136]	; 0xffffff78
   1c4e0:	blx	r7
   1c4e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c4e8:	str	r3, [r5, #32]
   1c4ec:	cmp	r0, #7
   1c4f0:	beq	1c550 <argp_parse@@Base+0xc68>
   1c4f4:	cmp	r0, #0
   1c4f8:	bne	1c168 <argp_parse@@Base+0x880>
   1c4fc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1c500:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1c504:	ldr	r7, [fp, #-84]	; 0xffffffac
   1c508:	b	1bd74 <argp_parse@@Base+0x48c>
   1c50c:	movw	r2, #10756	; 0x2a04
   1c510:	movt	r2, #3
   1c514:	ldr	r2, [r2]
   1c518:	cmp	r2, #0
   1c51c:	addeq	r2, r3, #16
   1c520:	bne	1ba1c <argp_parse@@Base+0x134>
   1c524:	b	1ba28 <argp_parse@@Base+0x140>
   1c528:	mov	r5, r0
   1c52c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c530:	cmp	r5, #7
   1c534:	sub	r4, ip, #36	; 0x24
   1c538:	bne	1c364 <argp_parse@@Base+0xa7c>
   1c53c:	cmp	r4, r3
   1c540:	movcs	r5, #0
   1c544:	bcs	1bf78 <argp_parse@@Base+0x690>
   1c548:	mov	r5, #0
   1c54c:	b	1bfdc <argp_parse@@Base+0x6f4>
   1c550:	cmp	r8, #0
   1c554:	beq	1c3e4 <argp_parse@@Base+0xafc>
   1c558:	ldr	r3, [fp, #-152]	; 0xffffff68
   1c55c:	ldr	r2, [r3]
   1c560:	ldr	r1, [r3, #12]
   1c564:	cmp	r4, r1
   1c568:	bne	1c584 <argp_parse@@Base+0xc9c>
   1c56c:	b	1c5b4 <argp_parse@@Base+0xccc>
   1c570:	add	r3, r3, #16
   1c574:	ldr	r2, [r3]
   1c578:	ldr	r1, [r3, #12]
   1c57c:	cmp	r4, r1
   1c580:	beq	1c5b4 <argp_parse@@Base+0xccc>
   1c584:	cmp	r2, #0
   1c588:	bne	1c570 <argp_parse@@Base+0xc88>
   1c58c:	movw	r2, #520	; 0x208
   1c590:	movt	r2, #2
   1c594:	movw	r1, #5120	; 0x1400
   1c598:	movt	r1, #2
   1c59c:	ldr	r3, [pc, #504]	; 1c79c <argp_parse@@Base+0xeb4>
   1c5a0:	mov	r0, r6
   1c5a4:	add	r4, r4, #1
   1c5a8:	bl	1b1d4 <argp_error@@Base>
   1c5ac:	bic	r4, r4, #2
   1c5b0:	b	1c404 <argp_parse@@Base+0xb1c>
   1c5b4:	movw	r3, #520	; 0x208
   1c5b8:	movt	r3, #2
   1c5bc:	cmp	r2, #0
   1c5c0:	moveq	r2, r3
   1c5c4:	b	1c594 <argp_parse@@Base+0xcac>
   1c5c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c5cc:	sub	r2, ip, #36	; 0x24
   1c5d0:	cmp	r3, r2
   1c5d4:	bhi	1c754 <argp_parse@@Base+0xe6c>
   1c5d8:	ldr	r2, [fp, #4]
   1c5dc:	cmp	r2, #0
   1c5e0:	beq	1c5f0 <argp_parse@@Base+0xd08>
   1c5e4:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c5e8:	ldr	r1, [fp, #4]
   1c5ec:	str	r2, [r1]
   1c5f0:	cmp	r5, #0
   1c5f4:	bne	1c16c <argp_parse@@Base+0x884>
   1c5f8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c5fc:	b	1c2e0 <argp_parse@@Base+0x9f8>
   1c600:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c604:	sub	r4, ip, #36	; 0x24
   1c608:	cmp	r4, r3
   1c60c:	bcc	1c710 <argp_parse@@Base+0xe28>
   1c610:	cmp	r5, #0
   1c614:	cmpne	r5, #7
   1c618:	bne	1c5d8 <argp_parse@@Base+0xcf0>
   1c61c:	mov	r6, #1
   1c620:	movt	r6, #256	; 0x100
   1c624:	sub	r4, r4, #36	; 0x24
   1c628:	ldr	r5, [r4, #36]	; 0x24
   1c62c:	mov	r1, #0
   1c630:	sub	r2, fp, #96	; 0x60
   1c634:	mov	r0, r6
   1c638:	cmp	r5, r1
   1c63c:	beq	1c690 <argp_parse@@Base+0xda8>
   1c640:	ldr	r3, [r4, #60]	; 0x3c
   1c644:	ldr	lr, [r4, #64]	; 0x40
   1c648:	ldr	ip, [r4, #68]	; 0x44
   1c64c:	str	r3, [fp, #-68]	; 0xffffffbc
   1c650:	ldr	r3, [r4, #48]	; 0x30
   1c654:	str	r3, [fp, #-76]	; 0xffffffb4
   1c658:	str	lr, [fp, #-64]	; 0xffffffc0
   1c65c:	str	ip, [fp, #-60]	; 0xffffffc4
   1c660:	blx	r5
   1c664:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c668:	str	r3, [r4, #68]	; 0x44
   1c66c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1c670:	cmp	r3, r4
   1c674:	sub	r4, r4, #36	; 0x24
   1c678:	bhi	1c70c <argp_parse@@Base+0xe24>
   1c67c:	cmp	r0, #7
   1c680:	cmpne	r0, #0
   1c684:	beq	1c628 <argp_parse@@Base+0xd40>
   1c688:	mov	r5, r0
   1c68c:	b	1c5d8 <argp_parse@@Base+0xcf0>
   1c690:	cmp	r3, r4
   1c694:	sub	r4, r4, #36	; 0x24
   1c698:	bls	1c628 <argp_parse@@Base+0xd40>
   1c69c:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c6a0:	ldr	r2, [fp, #4]
   1c6a4:	cmp	r2, #0
   1c6a8:	beq	1c2e0 <argp_parse@@Base+0x9f8>
   1c6ac:	mov	r1, r2
   1c6b0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c6b4:	str	r2, [r1]
   1c6b8:	b	1c2e0 <argp_parse@@Base+0x9f8>
   1c6bc:	ldr	r3, [r5]
   1c6c0:	cmp	r3, #0
   1c6c4:	beq	1c3e0 <argp_parse@@Base+0xaf8>
   1c6c8:	ldr	r2, [r5, #12]
   1c6cc:	sub	r6, fp, #96	; 0x60
   1c6d0:	mov	r8, #0
   1c6d4:	ldr	r0, [r5, #24]
   1c6d8:	ldr	ip, [r5, #28]
   1c6dc:	ldr	r1, [r5, #32]
   1c6e0:	str	r2, [fp, #-76]	; 0xffffffb4
   1c6e4:	mov	r2, r6
   1c6e8:	str	r0, [fp, #-68]	; 0xffffffbc
   1c6ec:	mov	r0, r4
   1c6f0:	str	ip, [fp, #-64]	; 0xffffffc0
   1c6f4:	str	r1, [fp, #-60]	; 0xffffffc4
   1c6f8:	ldr	r1, [fp, #-136]	; 0xffffff78
   1c6fc:	blx	r3
   1c700:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c704:	str	r3, [r5, #32]
   1c708:	b	1c4ec <argp_parse@@Base+0xc04>
   1c70c:	mov	r5, r0
   1c710:	cmp	r5, #7
   1c714:	beq	1c69c <argp_parse@@Base+0xdb4>
   1c718:	b	1c5d8 <argp_parse@@Base+0xcf0>
   1c71c:	sub	r4, ip, #36	; 0x24
   1c720:	b	1bf70 <argp_parse@@Base+0x688>
   1c724:	sub	r6, fp, #96	; 0x60
   1c728:	b	1c558 <argp_parse@@Base+0xc70>
   1c72c:	sub	r4, ip, #36	; 0x24
   1c730:	cmp	r3, r4
   1c734:	bls	1c61c <argp_parse@@Base+0xd34>
   1c738:	ldr	r2, [fp, #4]
   1c73c:	cmp	r2, #0
   1c740:	beq	1c548 <argp_parse@@Base+0xc60>
   1c744:	ldr	r2, [fp, #-84]	; 0xffffffac
   1c748:	ldr	r1, [fp, #4]
   1c74c:	str	r2, [r1]
   1c750:	b	1c2e0 <argp_parse@@Base+0x9f8>
   1c754:	ldr	r2, [fp, #4]
   1c758:	cmp	r2, #0
   1c75c:	bne	1c5e4 <argp_parse@@Base+0xcfc>
   1c760:	b	1befc <argp_parse@@Base+0x614>
   1c764:	ldr	ip, [fp, #-108]	; 0xffffff94
   1c768:	b	1c09c <argp_parse@@Base+0x7b4>
   1c76c:	cmp	r0, #0
   1c770:	beq	1c788 <argp_parse@@Base+0xea0>
   1c774:	cmp	r0, #7
   1c778:	mov	r5, r0
   1c77c:	ldrne	r3, [fp, #-112]	; 0xffffff90
   1c780:	beq	1c0ac <argp_parse@@Base+0x7c4>
   1c784:	b	1befc <argp_parse@@Base+0x614>
   1c788:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1c78c:	mov	r0, r3
   1c790:	str	r3, [fp, #-84]	; 0xffffffac
   1c794:	b	1be38 <argp_parse@@Base+0x550>
   1c798:	ldrdeq	r1, [r2], -r0
   1c79c:	andeq	r1, r2, ip, ror #5
   1c7a0:	cmp	r1, #0
   1c7a4:	beq	1c7e4 <argp_parse@@Base+0xefc>
   1c7a8:	ldr	r2, [r1, #52]	; 0x34
   1c7ac:	ldr	r3, [r2, #48]	; 0x30
   1c7b0:	ldr	r1, [r2, #52]	; 0x34
   1c7b4:	cmp	r3, r1
   1c7b8:	bcs	1c7e4 <argp_parse@@Base+0xefc>
   1c7bc:	ldr	r2, [r3, #4]
   1c7c0:	cmp	r0, r2
   1c7c4:	bne	1c7d8 <argp_parse@@Base+0xef0>
   1c7c8:	b	1c7ec <argp_parse@@Base+0xf04>
   1c7cc:	ldr	r2, [r3, #4]
   1c7d0:	cmp	r2, r0
   1c7d4:	beq	1c7ec <argp_parse@@Base+0xf04>
   1c7d8:	add	r3, r3, #36	; 0x24
   1c7dc:	cmp	r3, r1
   1c7e0:	bcc	1c7cc <argp_parse@@Base+0xee4>
   1c7e4:	mov	r0, #0
   1c7e8:	bx	lr
   1c7ec:	ldr	r0, [r3, #24]
   1c7f0:	bx	lr
   1c7f4:	movw	r1, #10760	; 0x2a08
   1c7f8:	movt	r1, #3
   1c7fc:	push	{lr}		; (str lr, [sp, #-4]!)
   1c800:	ldm	r1, {r1, ip}
   1c804:	sub	sp, sp, #12
   1c808:	movw	r3, #5348	; 0x14e4
   1c80c:	movt	r3, #2
   1c810:	movw	r2, #5364	; 0x14f4
   1c814:	movt	r2, #2
   1c818:	str	ip, [sp]
   1c81c:	bl	1d254 <argp_parse@@Base+0x196c>
   1c820:	add	sp, sp, #12
   1c824:	pop	{pc}		; (ldr pc, [sp], #4)
   1c828:	movw	r2, #10756	; 0x2a04
   1c82c:	movt	r2, #3
   1c830:	movw	ip, #51188	; 0xc7f4
   1c834:	movt	ip, #1
   1c838:	movw	r3, #10760	; 0x2a08
   1c83c:	movt	r3, #3
   1c840:	str	ip, [r2]
   1c844:	strd	r0, [r3]
   1c848:	bx	lr
   1c84c:	ldrb	r3, [r0]
   1c850:	cmp	r3, #47	; 0x2f
   1c854:	bne	1c864 <argp_parse@@Base+0xf7c>
   1c858:	ldrb	r3, [r0, #1]!
   1c85c:	cmp	r3, #47	; 0x2f
   1c860:	beq	1c858 <argp_parse@@Base+0xf70>
   1c864:	cmp	r3, #0
   1c868:	beq	1c898 <argp_parse@@Base+0xfb0>
   1c86c:	mov	r2, r0
   1c870:	mov	r1, #0
   1c874:	cmp	r3, #47	; 0x2f
   1c878:	moveq	r1, #1
   1c87c:	beq	1c88c <argp_parse@@Base+0xfa4>
   1c880:	cmp	r1, #0
   1c884:	movne	r0, r2
   1c888:	movne	r1, #0
   1c88c:	ldrb	r3, [r2, #1]!
   1c890:	cmp	r3, #0
   1c894:	bne	1c874 <argp_parse@@Base+0xf8c>
   1c898:	bx	lr
   1c89c:	str	r4, [sp, #-8]!
   1c8a0:	mov	r4, r0
   1c8a4:	str	lr, [sp, #4]
   1c8a8:	bl	118e8 <strlen@plt>
   1c8ac:	cmp	r0, #1
   1c8b0:	bls	1c8c4 <argp_parse@@Base+0xfdc>
   1c8b4:	sub	r2, r0, #1
   1c8b8:	ldrb	r1, [r4, r2]
   1c8bc:	cmp	r1, #47	; 0x2f
   1c8c0:	beq	1c8d0 <argp_parse@@Base+0xfe8>
   1c8c4:	ldr	r4, [sp]
   1c8c8:	add	sp, sp, #4
   1c8cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8d0:	cmp	r2, #1
   1c8d4:	beq	1c8e8 <argp_parse@@Base+0x1000>
   1c8d8:	add	r1, r4, r0
   1c8dc:	ldrb	r1, [r1, #-2]
   1c8e0:	cmp	r1, #47	; 0x2f
   1c8e4:	beq	1c8f8 <argp_parse@@Base+0x1010>
   1c8e8:	ldr	r4, [sp]
   1c8ec:	add	sp, sp, #4
   1c8f0:	mov	r0, r2
   1c8f4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c8f8:	sub	r3, r0, #3
   1c8fc:	rsb	r0, r4, #1
   1c900:	add	r3, r4, r3
   1c904:	cmp	r3, r4
   1c908:	add	r2, r0, r3
   1c90c:	beq	1c8e8 <argp_parse@@Base+0x1000>
   1c910:	ldrb	r1, [r3], #-1
   1c914:	cmp	r1, #47	; 0x2f
   1c918:	bne	1c8e8 <argp_parse@@Base+0x1000>
   1c91c:	b	1c904 <argp_parse@@Base+0x101c>
   1c920:	push	{r1, r2, r3}
   1c924:	strd	r4, [sp, #-20]!	; 0xffffffec
   1c928:	strd	r6, [sp, #8]
   1c92c:	str	lr, [sp, #16]
   1c930:	sub	sp, sp, #8
   1c934:	ldr	r1, [sp, #28]
   1c938:	add	r2, sp, #32
   1c93c:	str	r2, [sp, #4]
   1c940:	cmp	r1, #0
   1c944:	beq	1ca20 <argp_parse@@Base+0x1138>
   1c948:	movw	r3, #1030	; 0x406
   1c94c:	mov	r6, r0
   1c950:	cmp	r1, r3
   1c954:	beq	1ca30 <argp_parse@@Base+0x1148>
   1c958:	cmp	r1, #11
   1c95c:	beq	1c9d8 <argp_parse@@Base+0x10f0>
   1c960:	ble	1c9b8 <argp_parse@@Base+0x10d0>
   1c964:	movw	r2, #1031	; 0x407
   1c968:	cmp	r1, r2
   1c96c:	bgt	1c9f4 <argp_parse@@Base+0x110c>
   1c970:	cmp	r1, r3
   1c974:	bge	1c984 <argp_parse@@Base+0x109c>
   1c978:	movw	r3, #1025	; 0x401
   1c97c:	cmp	r1, r3
   1c980:	beq	1c9d8 <argp_parse@@Base+0x10f0>
   1c984:	ldr	r3, [sp, #4]
   1c988:	mov	r0, r6
   1c98c:	ldr	r2, [r3]
   1c990:	bl	1199c <fcntl64@plt>
   1c994:	mov	r4, r0
   1c998:	mov	r0, r4
   1c99c:	add	sp, sp, #8
   1c9a0:	ldrd	r4, [sp]
   1c9a4:	ldrd	r6, [sp, #8]
   1c9a8:	ldr	lr, [sp, #16]
   1c9ac:	add	sp, sp, #20
   1c9b0:	add	sp, sp, #12
   1c9b4:	bx	lr
   1c9b8:	cmp	r1, #4
   1c9bc:	beq	1c984 <argp_parse@@Base+0x109c>
   1c9c0:	bgt	1c9e8 <argp_parse@@Base+0x1100>
   1c9c4:	cmp	r1, #2
   1c9c8:	beq	1c984 <argp_parse@@Base+0x109c>
   1c9cc:	bgt	1c9d8 <argp_parse@@Base+0x10f0>
   1c9d0:	cmp	r1, #1
   1c9d4:	bne	1c984 <argp_parse@@Base+0x109c>
   1c9d8:	mov	r0, r6
   1c9dc:	bl	1199c <fcntl64@plt>
   1c9e0:	mov	r4, r0
   1c9e4:	b	1c998 <argp_parse@@Base+0x10b0>
   1c9e8:	cmp	r1, #9
   1c9ec:	bne	1c984 <argp_parse@@Base+0x109c>
   1c9f0:	b	1c9d8 <argp_parse@@Base+0x10f0>
   1c9f4:	movw	r3, #1033	; 0x409
   1c9f8:	cmp	r1, r3
   1c9fc:	beq	1c984 <argp_parse@@Base+0x109c>
   1ca00:	blt	1c9d8 <argp_parse@@Base+0x10f0>
   1ca04:	movw	r3, #1034	; 0x40a
   1ca08:	cmp	r1, r3
   1ca0c:	bne	1c984 <argp_parse@@Base+0x109c>
   1ca10:	mov	r0, r6
   1ca14:	bl	1199c <fcntl64@plt>
   1ca18:	mov	r4, r0
   1ca1c:	b	1c998 <argp_parse@@Base+0x10b0>
   1ca20:	ldr	r2, [sp, #32]
   1ca24:	bl	1199c <fcntl64@plt>
   1ca28:	mov	r4, r0
   1ca2c:	b	1c998 <argp_parse@@Base+0x10b0>
   1ca30:	movw	r5, #10768	; 0x2a10
   1ca34:	movt	r5, #3
   1ca38:	ldr	r7, [r2]
   1ca3c:	add	r2, sp, #36	; 0x24
   1ca40:	ldr	r3, [r5]
   1ca44:	str	r2, [sp, #4]
   1ca48:	mov	r2, r7
   1ca4c:	cmp	r3, #0
   1ca50:	blt	1ca6c <argp_parse@@Base+0x1184>
   1ca54:	bl	1199c <fcntl64@plt>
   1ca58:	subs	r4, r0, #0
   1ca5c:	blt	1cad4 <argp_parse@@Base+0x11ec>
   1ca60:	mov	r3, #1
   1ca64:	str	r3, [r5]
   1ca68:	b	1c998 <argp_parse@@Base+0x10b0>
   1ca6c:	mov	r1, #0
   1ca70:	bl	1199c <fcntl64@plt>
   1ca74:	subs	r4, r0, #0
   1ca78:	blt	1c998 <argp_parse@@Base+0x10b0>
   1ca7c:	ldr	r3, [r5]
   1ca80:	cmn	r3, #1
   1ca84:	bne	1c998 <argp_parse@@Base+0x10b0>
   1ca88:	mov	r1, #1
   1ca8c:	mov	r0, r4
   1ca90:	bl	1199c <fcntl64@plt>
   1ca94:	subs	r2, r0, #0
   1ca98:	blt	1cab4 <argp_parse@@Base+0x11cc>
   1ca9c:	orr	r2, r2, #1
   1caa0:	mov	r1, #2
   1caa4:	mov	r0, r4
   1caa8:	bl	1199c <fcntl64@plt>
   1caac:	cmn	r0, #1
   1cab0:	bne	1c998 <argp_parse@@Base+0x10b0>
   1cab4:	bl	11918 <__errno_location@plt>
   1cab8:	mov	r5, r0
   1cabc:	mov	r0, r4
   1cac0:	ldr	r6, [r5]
   1cac4:	mvn	r4, #0
   1cac8:	bl	11ac8 <close@plt>
   1cacc:	str	r6, [r5]
   1cad0:	b	1c998 <argp_parse@@Base+0x10b0>
   1cad4:	bl	11918 <__errno_location@plt>
   1cad8:	ldr	r3, [r0]
   1cadc:	cmp	r3, #22
   1cae0:	bne	1ca60 <argp_parse@@Base+0x1178>
   1cae4:	mov	r2, r7
   1cae8:	mov	r0, r6
   1caec:	mov	r1, #0
   1caf0:	bl	1199c <fcntl64@plt>
   1caf4:	subs	r4, r0, #0
   1caf8:	mvnge	r3, #0
   1cafc:	strge	r3, [r5]
   1cb00:	bge	1ca88 <argp_parse@@Base+0x11a0>
   1cb04:	b	1c998 <argp_parse@@Base+0x10b0>
   1cb08:	strd	r4, [sp, #-12]!
   1cb0c:	mov	r5, r0
   1cb10:	str	lr, [sp, #8]
   1cb14:	sub	sp, sp, #12
   1cb18:	bl	11918 <__errno_location@plt>
   1cb1c:	mov	r4, r0
   1cb20:	mov	r2, #0
   1cb24:	ldr	r3, [r4]
   1cb28:	mov	r0, r5
   1cb2c:	str	r2, [r4]
   1cb30:	str	r3, [sp]
   1cb34:	str	r3, [sp, #4]
   1cb38:	bl	116d8 <free@plt>
   1cb3c:	ldr	r3, [r4]
   1cb40:	add	r2, sp, #8
   1cb44:	clz	r3, r3
   1cb48:	lsr	r3, r3, #5
   1cb4c:	add	r3, r2, r3, lsl #2
   1cb50:	ldr	r3, [r3, #-8]
   1cb54:	str	r3, [r4]
   1cb58:	add	sp, sp, #12
   1cb5c:	ldrd	r4, [sp]
   1cb60:	add	sp, sp, #8
   1cb64:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb68:	push	{lr}		; (str lr, [sp, #-4]!)
   1cb6c:	sub	sp, sp, #20
   1cb70:	mov	ip, #0
   1cb74:	ldr	lr, [sp, #24]
   1cb78:	str	lr, [sp]
   1cb7c:	str	ip, [sp, #4]
   1cb80:	str	ip, [sp, #8]
   1cb84:	bl	1f8a4 <argp_parse@@Base+0x3fbc>
   1cb88:	add	sp, sp, #20
   1cb8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cb90:	str	r4, [sp, #-8]!
   1cb94:	mov	ip, #0
   1cb98:	str	lr, [sp, #4]
   1cb9c:	sub	sp, sp, #16
   1cba0:	ldr	r4, [sp, #24]
   1cba4:	str	ip, [sp, #12]
   1cba8:	ldr	lr, [sp, #28]
   1cbac:	stm	sp, {r4, ip, lr}
   1cbb0:	bl	1f308 <argp_parse@@Base+0x3a20>
   1cbb4:	add	sp, sp, #16
   1cbb8:	ldr	r4, [sp]
   1cbbc:	add	sp, sp, #4
   1cbc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbc4:	str	r4, [sp, #-8]!
   1cbc8:	mov	r4, #1
   1cbcc:	str	lr, [sp, #4]
   1cbd0:	sub	sp, sp, #16
   1cbd4:	mov	lr, #0
   1cbd8:	ldr	ip, [sp, #24]
   1cbdc:	str	ip, [sp]
   1cbe0:	stmib	sp, {r4, lr}
   1cbe4:	bl	1f8a4 <argp_parse@@Base+0x3fbc>
   1cbe8:	add	sp, sp, #16
   1cbec:	ldr	r4, [sp]
   1cbf0:	add	sp, sp, #4
   1cbf4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cbf8:	strd	r4, [sp, #-12]!
   1cbfc:	mov	r4, #0
   1cc00:	mov	r5, #1
   1cc04:	str	lr, [sp, #8]
   1cc08:	sub	sp, sp, #20
   1cc0c:	ldr	lr, [sp, #32]
   1cc10:	ldr	ip, [sp, #36]	; 0x24
   1cc14:	str	lr, [sp]
   1cc18:	str	r4, [sp, #12]
   1cc1c:	stmib	sp, {r5, ip}
   1cc20:	bl	1f308 <argp_parse@@Base+0x3a20>
   1cc24:	add	sp, sp, #20
   1cc28:	ldrd	r4, [sp]
   1cc2c:	add	sp, sp, #8
   1cc30:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc34:	strd	r4, [sp, #-16]!
   1cc38:	subs	r4, r0, #0
   1cc3c:	str	r6, [sp, #8]
   1cc40:	str	lr, [sp, #12]
   1cc44:	beq	1ccdc <argp_parse@@Base+0x13f4>
   1cc48:	mov	r1, #47	; 0x2f
   1cc4c:	bl	119f0 <strrchr@plt>
   1cc50:	subs	r5, r0, #0
   1cc54:	beq	1ccb4 <argp_parse@@Base+0x13cc>
   1cc58:	add	r6, r5, #1
   1cc5c:	sub	r3, r6, r4
   1cc60:	cmp	r3, #6
   1cc64:	ble	1ccb4 <argp_parse@@Base+0x13cc>
   1cc68:	movw	r1, #5436	; 0x153c
   1cc6c:	movt	r1, #2
   1cc70:	mov	r2, #7
   1cc74:	sub	r0, r5, #6
   1cc78:	bl	11aa4 <strncmp@plt>
   1cc7c:	cmp	r0, #0
   1cc80:	bne	1ccb4 <argp_parse@@Base+0x13cc>
   1cc84:	movw	r1, #5444	; 0x1544
   1cc88:	movt	r1, #2
   1cc8c:	mov	r2, #3
   1cc90:	mov	r0, r6
   1cc94:	bl	11aa4 <strncmp@plt>
   1cc98:	cmp	r0, #0
   1cc9c:	movne	r4, r6
   1cca0:	bne	1ccb4 <argp_parse@@Base+0x13cc>
   1cca4:	add	r4, r5, #4
   1cca8:	movw	r3, #9656	; 0x25b8
   1ccac:	movt	r3, #3
   1ccb0:	str	r4, [r3]
   1ccb4:	movw	r2, #10772	; 0x2a14
   1ccb8:	movt	r2, #3
   1ccbc:	ldr	r6, [sp, #8]
   1ccc0:	movw	r3, #9660	; 0x25bc
   1ccc4:	movt	r3, #3
   1ccc8:	str	r4, [r2]
   1cccc:	str	r4, [r3]
   1ccd0:	ldrd	r4, [sp]
   1ccd4:	add	sp, sp, #12
   1ccd8:	pop	{pc}		; (ldr pc, [sp], #4)
   1ccdc:	movw	r3, #9664	; 0x25c0
   1cce0:	movt	r3, #3
   1cce4:	movw	r0, #5380	; 0x1504
   1cce8:	movt	r0, #2
   1ccec:	ldr	r3, [r3]
   1ccf0:	mov	r2, #55	; 0x37
   1ccf4:	mov	r1, #1
   1ccf8:	bl	11804 <fwrite@plt>
   1ccfc:	bl	11ab0 <abort@plt>
   1cd00:	strd	r4, [sp, #-16]!
   1cd04:	mov	r5, r0
   1cd08:	mov	r0, #33	; 0x21
   1cd0c:	str	r6, [sp, #8]
   1cd10:	str	lr, [sp, #12]
   1cd14:	bl	1dae8 <argp_parse@@Base+0x2200>
   1cd18:	mov	r4, r0
   1cd1c:	add	r1, r5, #44	; 0x2c
   1cd20:	mov	r2, #32
   1cd24:	mov	r5, #0
   1cd28:	bl	11960 <strncpy@plt>
   1cd2c:	mov	r0, r4
   1cd30:	strb	r5, [r4, #32]
   1cd34:	bl	118e8 <strlen@plt>
   1cd38:	add	r0, r4, r0
   1cd3c:	cmp	r4, r0
   1cd40:	bcs	1cd50 <argp_parse@@Base+0x1468>
   1cd44:	ldrb	r3, [r0, #-1]
   1cd48:	cmp	r3, #32
   1cd4c:	beq	1cd64 <argp_parse@@Base+0x147c>
   1cd50:	mov	r0, r4
   1cd54:	ldrd	r4, [sp]
   1cd58:	ldr	r6, [sp, #8]
   1cd5c:	add	sp, sp, #12
   1cd60:	pop	{pc}		; (ldr pc, [sp], #4)
   1cd64:	sub	r0, r0, #1
   1cd68:	cmp	r0, r4
   1cd6c:	strb	r5, [r0]
   1cd70:	beq	1cd50 <argp_parse@@Base+0x1468>
   1cd74:	ldrb	r3, [r0, #-1]!
   1cd78:	cmp	r3, #32
   1cd7c:	bne	1cd50 <argp_parse@@Base+0x1468>
   1cd80:	b	1cd68 <argp_parse@@Base+0x1480>
   1cd84:	mov	ip, #0
   1cd88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cd8c:	strd	r6, [sp, #8]
   1cd90:	mov	r5, ip
   1cd94:	mov	r7, ip
   1cd98:	strd	r8, [sp, #16]
   1cd9c:	and	r8, r3, #2
   1cda0:	mov	r9, r2
   1cda4:	strd	sl, [sp, #24]
   1cda8:	and	r6, r3, #1
   1cdac:	mov	sl, r1
   1cdb0:	str	lr, [sp, #32]
   1cdb4:	sub	sp, sp, #20
   1cdb8:	mov	fp, #384	; 0x180
   1cdbc:	str	ip, [sp, #12]
   1cdc0:	bl	116a8 <utmpxname@plt>
   1cdc4:	bl	11780 <setutxent@plt>
   1cdc8:	cmp	r8, #0
   1cdcc:	bne	1ce28 <argp_parse@@Base+0x1540>
   1cdd0:	cmp	r6, #0
   1cdd4:	beq	1cf40 <argp_parse@@Base+0x1658>
   1cdd8:	bl	11abc <getutxent@plt>
   1cddc:	subs	r4, r0, #0
   1cde0:	beq	1ce60 <argp_parse@@Base+0x1578>
   1cde4:	ldrb	r3, [r4, #44]	; 0x2c
   1cde8:	cmp	r3, #0
   1cdec:	beq	1cdfc <argp_parse@@Base+0x1514>
   1cdf0:	ldrsh	r3, [r4]
   1cdf4:	cmp	r3, #7
   1cdf8:	beq	1ce8c <argp_parse@@Base+0x15a4>
   1cdfc:	ldr	r3, [sp, #12]
   1ce00:	cmp	r3, r5
   1ce04:	beq	1cec8 <argp_parse@@Base+0x15e0>
   1ce08:	add	r0, r5, r5, lsl #1
   1ce0c:	mov	r1, r4
   1ce10:	mov	r2, #384	; 0x180
   1ce14:	add	r5, r5, #1
   1ce18:	add	r0, r7, r0, lsl #7
   1ce1c:	bl	11714 <memcpy@plt>
   1ce20:	cmp	r8, #0
   1ce24:	beq	1cdd0 <argp_parse@@Base+0x14e8>
   1ce28:	cmp	r6, #0
   1ce2c:	bne	1cf18 <argp_parse@@Base+0x1630>
   1ce30:	bl	11abc <getutxent@plt>
   1ce34:	subs	r4, r0, #0
   1ce38:	beq	1ce60 <argp_parse@@Base+0x1578>
   1ce3c:	ldrb	r3, [r4, #44]	; 0x2c
   1ce40:	cmp	r3, #0
   1ce44:	beq	1ce30 <argp_parse@@Base+0x1548>
   1ce48:	ldrsh	r3, [r4]
   1ce4c:	cmp	r3, #7
   1ce50:	beq	1cdfc <argp_parse@@Base+0x1514>
   1ce54:	bl	11abc <getutxent@plt>
   1ce58:	subs	r4, r0, #0
   1ce5c:	bne	1ce3c <argp_parse@@Base+0x1554>
   1ce60:	bl	119b4 <endutxent@plt>
   1ce64:	mov	r0, #0
   1ce68:	str	r5, [sl]
   1ce6c:	str	r7, [r9]
   1ce70:	add	sp, sp, #20
   1ce74:	ldrd	r4, [sp]
   1ce78:	ldrd	r6, [sp, #8]
   1ce7c:	ldrd	r8, [sp, #16]
   1ce80:	ldrd	sl, [sp, #24]
   1ce84:	add	sp, sp, #32
   1ce88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ce8c:	ldr	r3, [r4, #4]
   1ce90:	mov	r1, #0
   1ce94:	cmp	r3, r1
   1ce98:	mov	r0, r3
   1ce9c:	ble	1cdfc <argp_parse@@Base+0x1514>
   1cea0:	bl	118b8 <kill@plt>
   1cea4:	cmp	r0, #0
   1cea8:	bge	1cdfc <argp_parse@@Base+0x1514>
   1ceac:	bl	11918 <__errno_location@plt>
   1ceb0:	ldr	r3, [r0]
   1ceb4:	cmp	r3, #3
   1ceb8:	beq	1cdd8 <argp_parse@@Base+0x14f0>
   1cebc:	ldr	r3, [sp, #12]
   1cec0:	cmp	r3, r5
   1cec4:	bne	1ce08 <argp_parse@@Base+0x1520>
   1cec8:	mov	r0, r7
   1cecc:	mvn	r3, #0
   1ced0:	str	fp, [sp]
   1ced4:	mov	r2, #1
   1ced8:	add	r1, sp, #12
   1cedc:	bl	1ddd4 <argp_parse@@Base+0x24ec>
   1cee0:	mov	r7, r0
   1cee4:	b	1ce08 <argp_parse@@Base+0x1520>
   1cee8:	ldr	r3, [r4, #4]
   1ceec:	mov	r1, #0
   1cef0:	cmp	r3, r1
   1cef4:	mov	r0, r3
   1cef8:	ble	1cdfc <argp_parse@@Base+0x1514>
   1cefc:	bl	118b8 <kill@plt>
   1cf00:	cmp	r0, #0
   1cf04:	bge	1cdfc <argp_parse@@Base+0x1514>
   1cf08:	bl	11918 <__errno_location@plt>
   1cf0c:	ldr	r3, [r0]
   1cf10:	cmp	r3, #3
   1cf14:	bne	1cdfc <argp_parse@@Base+0x1514>
   1cf18:	bl	11abc <getutxent@plt>
   1cf1c:	subs	r4, r0, #0
   1cf20:	beq	1ce60 <argp_parse@@Base+0x1578>
   1cf24:	ldrb	r3, [r4, #44]	; 0x2c
   1cf28:	cmp	r3, #0
   1cf2c:	beq	1cf18 <argp_parse@@Base+0x1630>
   1cf30:	ldrsh	r3, [r4]
   1cf34:	cmp	r3, #7
   1cf38:	bne	1cf18 <argp_parse@@Base+0x1630>
   1cf3c:	b	1cee8 <argp_parse@@Base+0x1600>
   1cf40:	bl	11abc <getutxent@plt>
   1cf44:	subs	r4, r0, #0
   1cf48:	bne	1cdfc <argp_parse@@Base+0x1514>
   1cf4c:	b	1ce60 <argp_parse@@Base+0x1578>
   1cf50:	cmp	r1, #0
   1cf54:	strd	r4, [sp, #-16]!
   1cf58:	mov	r4, r0
   1cf5c:	str	r6, [sp, #8]
   1cf60:	str	lr, [sp, #12]
   1cf64:	sub	sp, sp, #32
   1cf68:	ldr	r5, [sp, #48]	; 0x30
   1cf6c:	ldr	r6, [sp, #52]	; 0x34
   1cf70:	beq	1d074 <argp_parse@@Base+0x178c>
   1cf74:	mov	ip, r3
   1cf78:	mov	r3, r2
   1cf7c:	mov	r2, r1
   1cf80:	movw	r1, #5448	; 0x1548
   1cf84:	movt	r1, #2
   1cf88:	str	ip, [sp]
   1cf8c:	bl	1190c <fprintf@plt>
   1cf90:	movw	r3, #2022	; 0x7e6
   1cf94:	movw	r2, #5468	; 0x155c
   1cf98:	movt	r2, #2
   1cf9c:	movw	r1, #6236	; 0x185c
   1cfa0:	movt	r1, #2
   1cfa4:	mov	r0, r4
   1cfa8:	bl	1190c <fprintf@plt>
   1cfac:	mov	r1, r4
   1cfb0:	mov	r0, #10
   1cfb4:	bl	11a08 <fputc@plt>
   1cfb8:	movw	r2, #5472	; 0x1560
   1cfbc:	movt	r2, #2
   1cfc0:	movw	r1, #5508	; 0x1584
   1cfc4:	movt	r1, #2
   1cfc8:	mov	r0, r4
   1cfcc:	bl	1190c <fprintf@plt>
   1cfd0:	mov	r1, r4
   1cfd4:	mov	r0, #10
   1cfd8:	bl	11a08 <fputc@plt>
   1cfdc:	cmp	r6, #9
   1cfe0:	ldrls	pc, [pc, r6, lsl #2]
   1cfe4:	b	1d240 <argp_parse@@Base+0x1958>
   1cfe8:	andeq	sp, r1, r0, rrx
   1cfec:	andeq	sp, r1, r4, lsl #1
   1cff0:	andeq	sp, r1, ip, lsr #1
   1cff4:	ldrdeq	sp, [r1], -r4
   1cff8:	andeq	sp, r1, r4, lsl #2
   1cffc:	andeq	sp, r1, r0, asr #2
   1d000:	andeq	sp, r1, r4, ror r1
   1d004:			; <UNDEFINED> instruction: 0x0001d1b0
   1d008:	strdeq	sp, [r1], -r4
   1d00c:	andeq	sp, r1, r0, lsl r0
   1d010:	ldr	ip, [r5, #8]
   1d014:	movw	r1, #5948	; 0x173c
   1d018:	movt	r1, #2
   1d01c:	mov	r0, r4
   1d020:	ldr	r3, [r5, #12]
   1d024:	ldr	r2, [r5, #32]
   1d028:	str	ip, [sp]
   1d02c:	ldr	ip, [r5, #16]
   1d030:	str	r2, [sp, #24]
   1d034:	ldr	r2, [r5, #28]
   1d038:	str	r3, [sp, #4]
   1d03c:	ldr	r3, [r5, #20]
   1d040:	str	ip, [sp, #8]
   1d044:	ldr	ip, [r5, #24]
   1d048:	str	r2, [sp, #20]
   1d04c:	ldr	r2, [r5]
   1d050:	str	r3, [sp, #12]
   1d054:	ldr	r3, [r5, #4]
   1d058:	str	ip, [sp, #16]
   1d05c:	bl	1190c <fprintf@plt>
   1d060:	add	sp, sp, #32
   1d064:	ldrd	r4, [sp]
   1d068:	ldr	r6, [sp, #8]
   1d06c:	add	sp, sp, #12
   1d070:	pop	{pc}		; (ldr pc, [sp], #4)
   1d074:	movw	r1, #5460	; 0x1554
   1d078:	movt	r1, #2
   1d07c:	bl	1190c <fprintf@plt>
   1d080:	b	1cf90 <argp_parse@@Base+0x16a8>
   1d084:	ldr	r2, [r5]
   1d088:	mov	r0, r4
   1d08c:	movw	r1, #5680	; 0x1630
   1d090:	movt	r1, #2
   1d094:	add	sp, sp, #32
   1d098:	ldrd	r4, [sp]
   1d09c:	ldr	r6, [sp, #8]
   1d0a0:	ldr	lr, [sp, #12]
   1d0a4:	add	sp, sp, #16
   1d0a8:	b	1190c <fprintf@plt>
   1d0ac:	ldrd	r2, [r5]
   1d0b0:	mov	r0, r4
   1d0b4:	movw	r1, #5696	; 0x1640
   1d0b8:	movt	r1, #2
   1d0bc:	add	sp, sp, #32
   1d0c0:	ldrd	r4, [sp]
   1d0c4:	ldr	r6, [sp, #8]
   1d0c8:	ldr	lr, [sp, #12]
   1d0cc:	add	sp, sp, #16
   1d0d0:	b	1190c <fprintf@plt>
   1d0d4:	ldrd	r2, [r5]
   1d0d8:	mov	r0, r4
   1d0dc:	movw	r1, #5720	; 0x1658
   1d0e0:	movt	r1, #2
   1d0e4:	ldr	ip, [r5, #8]
   1d0e8:	str	ip, [sp, #48]	; 0x30
   1d0ec:	add	sp, sp, #32
   1d0f0:	ldrd	r4, [sp]
   1d0f4:	ldr	r6, [sp, #8]
   1d0f8:	ldr	lr, [sp, #12]
   1d0fc:	add	sp, sp, #16
   1d100:	b	1190c <fprintf@plt>
   1d104:	ldr	r2, [r5]
   1d108:	mov	r0, r4
   1d10c:	movw	r1, #5748	; 0x1674
   1d110:	movt	r1, #2
   1d114:	ldr	r3, [r5, #8]
   1d118:	ldr	ip, [r5, #12]
   1d11c:	str	r3, [sp, #48]	; 0x30
   1d120:	ldr	r3, [r5, #4]
   1d124:	str	ip, [sp, #52]	; 0x34
   1d128:	add	sp, sp, #32
   1d12c:	ldrd	r4, [sp]
   1d130:	ldr	r6, [sp, #8]
   1d134:	ldr	lr, [sp, #12]
   1d138:	add	sp, sp, #16
   1d13c:	b	1190c <fprintf@plt>
   1d140:	ldr	r2, [r5, #8]
   1d144:	mov	r0, r4
   1d148:	movw	r1, #5780	; 0x1694
   1d14c:	movt	r1, #2
   1d150:	ldr	ip, [r5, #12]
   1d154:	ldr	r3, [r5, #16]
   1d158:	str	r2, [sp]
   1d15c:	ldr	r2, [r5]
   1d160:	str	r3, [sp, #8]
   1d164:	ldr	r3, [r5, #4]
   1d168:	str	ip, [sp, #4]
   1d16c:	bl	1190c <fprintf@plt>
   1d170:	b	1d060 <argp_parse@@Base+0x1778>
   1d174:	ldr	ip, [r5, #8]
   1d178:	mov	r0, r4
   1d17c:	movw	r1, #5816	; 0x16b8
   1d180:	movt	r1, #2
   1d184:	ldr	r3, [r5, #12]
   1d188:	ldr	r2, [r5, #20]
   1d18c:	str	ip, [sp]
   1d190:	ldr	ip, [r5, #16]
   1d194:	str	r2, [sp, #12]
   1d198:	ldr	r2, [r5]
   1d19c:	str	r3, [sp, #4]
   1d1a0:	ldr	r3, [r5, #4]
   1d1a4:	str	ip, [sp, #8]
   1d1a8:	bl	1190c <fprintf@plt>
   1d1ac:	b	1d060 <argp_parse@@Base+0x1778>
   1d1b0:	ldr	r3, [r5, #8]
   1d1b4:	mov	r0, r4
   1d1b8:	movw	r1, #5856	; 0x16e0
   1d1bc:	movt	r1, #2
   1d1c0:	ldr	r2, [r5, #12]
   1d1c4:	ldr	ip, [r5, #24]
   1d1c8:	str	r3, [sp]
   1d1cc:	ldr	r3, [r5, #16]
   1d1d0:	str	ip, [sp, #16]
   1d1d4:	ldr	ip, [r5, #20]
   1d1d8:	str	r2, [sp, #4]
   1d1dc:	ldr	r2, [r5]
   1d1e0:	str	r3, [sp, #8]
   1d1e4:	ldr	r3, [r5, #4]
   1d1e8:	str	ip, [sp, #12]
   1d1ec:	bl	1190c <fprintf@plt>
   1d1f0:	b	1d060 <argp_parse@@Base+0x1778>
   1d1f4:	ldr	r2, [r5, #8]
   1d1f8:	mov	r0, r4
   1d1fc:	movw	r1, #5900	; 0x170c
   1d200:	movt	r1, #2
   1d204:	ldr	ip, [r5, #12]
   1d208:	ldr	r3, [r5, #28]
   1d20c:	str	r2, [sp]
   1d210:	ldr	r2, [r5, #16]
   1d214:	str	r3, [sp, #20]
   1d218:	ldr	r3, [r5, #24]
   1d21c:	str	ip, [sp, #4]
   1d220:	ldr	ip, [r5, #20]
   1d224:	str	r2, [sp, #8]
   1d228:	ldr	r2, [r5]
   1d22c:	str	r3, [sp, #16]
   1d230:	ldr	r3, [r5, #4]
   1d234:	str	ip, [sp, #12]
   1d238:	bl	1190c <fprintf@plt>
   1d23c:	b	1d060 <argp_parse@@Base+0x1778>
   1d240:	movw	r1, #6000	; 0x1770
   1d244:	movt	r1, #2
   1d248:	ldr	ip, [r5, #8]
   1d24c:	mov	r0, r4
   1d250:	b	1d020 <argp_parse@@Base+0x1738>
   1d254:	strd	r4, [sp, #-16]!
   1d258:	mov	ip, r3
   1d25c:	str	r6, [sp, #8]
   1d260:	mov	r6, r0
   1d264:	str	lr, [sp, #12]
   1d268:	sub	sp, sp, #32
   1d26c:	ldr	r5, [sp, #48]	; 0x30
   1d270:	ldr	r4, [r5]
   1d274:	cmp	r4, #0
   1d278:	beq	1d294 <argp_parse@@Base+0x19ac>
   1d27c:	mov	r3, r5
   1d280:	mov	r4, #0
   1d284:	ldr	r0, [r3, #4]!
   1d288:	add	r4, r4, #1
   1d28c:	cmp	r0, #0
   1d290:	bne	1d284 <argp_parse@@Base+0x199c>
   1d294:	cmp	r1, #0
   1d298:	beq	1d39c <argp_parse@@Base+0x1ab4>
   1d29c:	mov	r3, r2
   1d2a0:	mov	r0, r6
   1d2a4:	str	ip, [sp]
   1d2a8:	mov	r2, r1
   1d2ac:	movw	r1, #5448	; 0x1548
   1d2b0:	movt	r1, #2
   1d2b4:	bl	1190c <fprintf@plt>
   1d2b8:	movw	r3, #2022	; 0x7e6
   1d2bc:	movw	r2, #5468	; 0x155c
   1d2c0:	movt	r2, #2
   1d2c4:	movw	r1, #6236	; 0x185c
   1d2c8:	movt	r1, #2
   1d2cc:	mov	r0, r6
   1d2d0:	bl	1190c <fprintf@plt>
   1d2d4:	mov	r1, r6
   1d2d8:	mov	r0, #10
   1d2dc:	bl	11a08 <fputc@plt>
   1d2e0:	movw	r2, #5472	; 0x1560
   1d2e4:	movt	r2, #2
   1d2e8:	movw	r1, #5508	; 0x1584
   1d2ec:	movt	r1, #2
   1d2f0:	mov	r0, r6
   1d2f4:	bl	1190c <fprintf@plt>
   1d2f8:	mov	r1, r6
   1d2fc:	mov	r0, #10
   1d300:	bl	11a08 <fputc@plt>
   1d304:	cmp	r4, #9
   1d308:	ldrls	pc, [pc, r4, lsl #2]
   1d30c:	b	1d560 <argp_parse@@Base+0x1c78>
   1d310:	andeq	sp, r1, r8, lsl #7
   1d314:			; <UNDEFINED> instruction: 0x0001d3b4
   1d318:	ldrdeq	sp, [r1], -ip
   1d31c:	andeq	sp, r1, r4, lsl #8
   1d320:	andeq	sp, r1, r4, lsr r4
   1d324:	andeq	sp, r1, r0, ror #8
   1d328:	muleq	r1, r4, r4
   1d32c:	ldrdeq	sp, [r1], -r0
   1d330:	andeq	sp, r1, r4, lsl r5
   1d334:	andeq	sp, r1, r8, lsr r3
   1d338:	ldr	ip, [r5, #8]
   1d33c:	movw	r1, #5948	; 0x173c
   1d340:	movt	r1, #2
   1d344:	mov	r0, r6
   1d348:	ldr	r3, [r5, #12]
   1d34c:	ldr	r2, [r5, #32]
   1d350:	str	ip, [sp]
   1d354:	ldr	ip, [r5, #16]
   1d358:	str	r2, [sp, #24]
   1d35c:	ldr	r2, [r5, #28]
   1d360:	str	r3, [sp, #4]
   1d364:	ldr	r3, [r5, #20]
   1d368:	str	ip, [sp, #8]
   1d36c:	ldr	ip, [r5, #24]
   1d370:	str	r2, [sp, #20]
   1d374:	ldr	r2, [r5]
   1d378:	str	r3, [sp, #12]
   1d37c:	ldr	r3, [r5, #4]
   1d380:	str	ip, [sp, #16]
   1d384:	bl	1190c <fprintf@plt>
   1d388:	add	sp, sp, #32
   1d38c:	ldrd	r4, [sp]
   1d390:	ldr	r6, [sp, #8]
   1d394:	add	sp, sp, #12
   1d398:	pop	{pc}		; (ldr pc, [sp], #4)
   1d39c:	mov	r3, ip
   1d3a0:	movw	r1, #5460	; 0x1554
   1d3a4:	movt	r1, #2
   1d3a8:	mov	r0, r6
   1d3ac:	bl	1190c <fprintf@plt>
   1d3b0:	b	1d2b8 <argp_parse@@Base+0x19d0>
   1d3b4:	ldr	r2, [r5]
   1d3b8:	mov	r0, r6
   1d3bc:	movw	r1, #5680	; 0x1630
   1d3c0:	movt	r1, #2
   1d3c4:	add	sp, sp, #32
   1d3c8:	ldrd	r4, [sp]
   1d3cc:	ldr	r6, [sp, #8]
   1d3d0:	ldr	lr, [sp, #12]
   1d3d4:	add	sp, sp, #16
   1d3d8:	b	1190c <fprintf@plt>
   1d3dc:	ldrd	r2, [r5]
   1d3e0:	mov	r0, r6
   1d3e4:	movw	r1, #5696	; 0x1640
   1d3e8:	movt	r1, #2
   1d3ec:	add	sp, sp, #32
   1d3f0:	ldrd	r4, [sp]
   1d3f4:	ldr	r6, [sp, #8]
   1d3f8:	ldr	lr, [sp, #12]
   1d3fc:	add	sp, sp, #16
   1d400:	b	1190c <fprintf@plt>
   1d404:	ldrd	r2, [r5]
   1d408:	mov	r0, r6
   1d40c:	movw	r1, #5720	; 0x1658
   1d410:	movt	r1, #2
   1d414:	ldr	ip, [r5, #8]
   1d418:	str	ip, [sp, #48]	; 0x30
   1d41c:	add	sp, sp, #32
   1d420:	ldrd	r4, [sp]
   1d424:	ldr	r6, [sp, #8]
   1d428:	ldr	lr, [sp, #12]
   1d42c:	add	sp, sp, #16
   1d430:	b	1190c <fprintf@plt>
   1d434:	mov	r0, r6
   1d438:	movw	r1, #5748	; 0x1674
   1d43c:	movt	r1, #2
   1d440:	ldr	r3, [r5, #8]
   1d444:	ldr	ip, [r5, #12]
   1d448:	ldr	r2, [r5]
   1d44c:	str	r3, [sp]
   1d450:	ldr	r3, [r5, #4]
   1d454:	str	ip, [sp, #4]
   1d458:	bl	1190c <fprintf@plt>
   1d45c:	b	1d388 <argp_parse@@Base+0x1aa0>
   1d460:	ldr	r2, [r5, #8]
   1d464:	mov	r0, r6
   1d468:	movw	r1, #5780	; 0x1694
   1d46c:	movt	r1, #2
   1d470:	ldr	ip, [r5, #12]
   1d474:	ldr	r3, [r5, #16]
   1d478:	str	r2, [sp]
   1d47c:	ldr	r2, [r5]
   1d480:	str	r3, [sp, #8]
   1d484:	ldr	r3, [r5, #4]
   1d488:	str	ip, [sp, #4]
   1d48c:	bl	1190c <fprintf@plt>
   1d490:	b	1d388 <argp_parse@@Base+0x1aa0>
   1d494:	ldr	ip, [r5, #8]
   1d498:	mov	r0, r6
   1d49c:	movw	r1, #5816	; 0x16b8
   1d4a0:	movt	r1, #2
   1d4a4:	ldr	r3, [r5, #12]
   1d4a8:	ldr	r2, [r5, #20]
   1d4ac:	str	ip, [sp]
   1d4b0:	ldr	ip, [r5, #16]
   1d4b4:	str	r2, [sp, #12]
   1d4b8:	ldr	r2, [r5]
   1d4bc:	str	r3, [sp, #4]
   1d4c0:	ldr	r3, [r5, #4]
   1d4c4:	str	ip, [sp, #8]
   1d4c8:	bl	1190c <fprintf@plt>
   1d4cc:	b	1d388 <argp_parse@@Base+0x1aa0>
   1d4d0:	ldr	r3, [r5, #8]
   1d4d4:	mov	r0, r6
   1d4d8:	movw	r1, #5856	; 0x16e0
   1d4dc:	movt	r1, #2
   1d4e0:	ldr	r2, [r5, #12]
   1d4e4:	ldr	ip, [r5, #24]
   1d4e8:	str	r3, [sp]
   1d4ec:	ldr	r3, [r5, #16]
   1d4f0:	str	ip, [sp, #16]
   1d4f4:	ldr	ip, [r5, #20]
   1d4f8:	str	r2, [sp, #4]
   1d4fc:	ldr	r2, [r5]
   1d500:	str	r3, [sp, #8]
   1d504:	ldr	r3, [r5, #4]
   1d508:	str	ip, [sp, #12]
   1d50c:	bl	1190c <fprintf@plt>
   1d510:	b	1d388 <argp_parse@@Base+0x1aa0>
   1d514:	ldr	r2, [r5, #8]
   1d518:	mov	r0, r6
   1d51c:	movw	r1, #5900	; 0x170c
   1d520:	movt	r1, #2
   1d524:	ldr	ip, [r5, #12]
   1d528:	ldr	r3, [r5, #28]
   1d52c:	str	r2, [sp]
   1d530:	ldr	r2, [r5, #16]
   1d534:	str	r3, [sp, #20]
   1d538:	ldr	r3, [r5, #24]
   1d53c:	str	ip, [sp, #4]
   1d540:	ldr	ip, [r5, #20]
   1d544:	str	r2, [sp, #8]
   1d548:	ldr	r2, [r5]
   1d54c:	str	r3, [sp, #16]
   1d550:	ldr	r3, [r5, #4]
   1d554:	str	ip, [sp, #12]
   1d558:	bl	1190c <fprintf@plt>
   1d55c:	b	1d388 <argp_parse@@Base+0x1aa0>
   1d560:	movw	r1, #6000	; 0x1770
   1d564:	movt	r1, #2
   1d568:	ldr	ip, [r5, #8]
   1d56c:	mov	r0, r6
   1d570:	b	1d348 <argp_parse@@Base+0x1a60>
   1d574:	strd	r4, [sp, #-12]!
   1d578:	mov	r4, r0
   1d57c:	mov	r0, r3
   1d580:	str	lr, [sp, #8]
   1d584:	sub	sp, sp, #76	; 0x4c
   1d588:	ldr	ip, [sp, #88]	; 0x58
   1d58c:	ldr	r3, [ip]
   1d590:	cmp	r3, #0
   1d594:	str	r3, [sp, #32]
   1d598:	beq	1d8b8 <argp_parse@@Base+0x1fd0>
   1d59c:	ldr	r3, [ip, #4]
   1d5a0:	cmp	r3, #0
   1d5a4:	str	r3, [sp, #36]	; 0x24
   1d5a8:	beq	1d8c0 <argp_parse@@Base+0x1fd8>
   1d5ac:	ldr	r3, [ip, #8]
   1d5b0:	cmp	r3, #0
   1d5b4:	str	r3, [sp, #40]	; 0x28
   1d5b8:	beq	1d8c8 <argp_parse@@Base+0x1fe0>
   1d5bc:	ldr	r3, [ip, #12]
   1d5c0:	cmp	r3, #0
   1d5c4:	str	r3, [sp, #44]	; 0x2c
   1d5c8:	beq	1d8d0 <argp_parse@@Base+0x1fe8>
   1d5cc:	ldr	r3, [ip, #16]
   1d5d0:	cmp	r3, #0
   1d5d4:	str	r3, [sp, #48]	; 0x30
   1d5d8:	beq	1d8d8 <argp_parse@@Base+0x1ff0>
   1d5dc:	ldr	r3, [ip, #20]
   1d5e0:	cmp	r3, #0
   1d5e4:	str	r3, [sp, #52]	; 0x34
   1d5e8:	beq	1d8e0 <argp_parse@@Base+0x1ff8>
   1d5ec:	ldr	r3, [ip, #24]
   1d5f0:	cmp	r3, #0
   1d5f4:	str	r3, [sp, #56]	; 0x38
   1d5f8:	beq	1d8e8 <argp_parse@@Base+0x2000>
   1d5fc:	ldr	r3, [ip, #28]
   1d600:	cmp	r3, #0
   1d604:	str	r3, [sp, #60]	; 0x3c
   1d608:	beq	1d8f0 <argp_parse@@Base+0x2008>
   1d60c:	ldr	r3, [ip, #32]
   1d610:	cmp	r3, #0
   1d614:	str	r3, [sp, #64]	; 0x40
   1d618:	beq	1d8f8 <argp_parse@@Base+0x2010>
   1d61c:	ldr	r3, [ip, #36]	; 0x24
   1d620:	cmp	r3, #0
   1d624:	movne	r5, #10
   1d628:	moveq	r5, #9
   1d62c:	cmp	r1, #0
   1d630:	beq	1d72c <argp_parse@@Base+0x1e44>
   1d634:	mov	r3, r2
   1d638:	mov	r2, r1
   1d63c:	str	r0, [sp]
   1d640:	movw	r1, #5448	; 0x1548
   1d644:	movt	r1, #2
   1d648:	mov	r0, r4
   1d64c:	bl	1190c <fprintf@plt>
   1d650:	movw	r3, #2022	; 0x7e6
   1d654:	movw	r2, #5468	; 0x155c
   1d658:	movt	r2, #2
   1d65c:	movw	r1, #6236	; 0x185c
   1d660:	movt	r1, #2
   1d664:	mov	r0, r4
   1d668:	bl	1190c <fprintf@plt>
   1d66c:	mov	r1, r4
   1d670:	mov	r0, #10
   1d674:	bl	11a08 <fputc@plt>
   1d678:	movw	r2, #5472	; 0x1560
   1d67c:	movt	r2, #2
   1d680:	movw	r1, #5508	; 0x1584
   1d684:	movt	r1, #2
   1d688:	mov	r0, r4
   1d68c:	bl	1190c <fprintf@plt>
   1d690:	mov	r1, r4
   1d694:	mov	r0, #10
   1d698:	bl	11a08 <fputc@plt>
   1d69c:	cmp	r5, #9
   1d6a0:	ldrls	pc, [pc, r5, lsl #2]
   1d6a4:	b	1d900 <argp_parse@@Base+0x2018>
   1d6a8:	andeq	sp, r1, ip, lsl r7
   1d6ac:	andeq	sp, r1, r4, asr #14
   1d6b0:	andeq	sp, r1, r8, ror #14
   1d6b4:	andeq	sp, r1, ip, lsl #15
   1d6b8:			; <UNDEFINED> instruction: 0x0001d7b8
   1d6bc:	andeq	sp, r1, r0, ror #15
   1d6c0:	andeq	sp, r1, r8, lsl #16
   1d6c4:	andeq	sp, r1, r0, asr #16
   1d6c8:	andeq	sp, r1, r0, lsl #17
   1d6cc:	ldrdeq	sp, [r1], -r0
   1d6d0:	ldr	ip, [sp, #40]	; 0x28
   1d6d4:	movw	r1, #5948	; 0x173c
   1d6d8:	movt	r1, #2
   1d6dc:	mov	r0, r4
   1d6e0:	str	ip, [sp]
   1d6e4:	ldr	r2, [sp, #44]	; 0x2c
   1d6e8:	ldr	ip, [sp, #48]	; 0x30
   1d6ec:	ldr	r3, [sp, #64]	; 0x40
   1d6f0:	str	r2, [sp, #4]
   1d6f4:	ldr	r2, [sp, #52]	; 0x34
   1d6f8:	str	ip, [sp, #8]
   1d6fc:	ldr	ip, [sp, #56]	; 0x38
   1d700:	str	r3, [sp, #24]
   1d704:	ldr	r3, [sp, #60]	; 0x3c
   1d708:	str	r2, [sp, #12]
   1d70c:	str	ip, [sp, #16]
   1d710:	str	r3, [sp, #20]
   1d714:	ldrd	r2, [sp, #32]
   1d718:	bl	1190c <fprintf@plt>
   1d71c:	add	sp, sp, #76	; 0x4c
   1d720:	ldrd	r4, [sp]
   1d724:	add	sp, sp, #8
   1d728:	pop	{pc}		; (ldr pc, [sp], #4)
   1d72c:	mov	r3, r0
   1d730:	movw	r1, #5460	; 0x1554
   1d734:	movt	r1, #2
   1d738:	mov	r0, r4
   1d73c:	bl	1190c <fprintf@plt>
   1d740:	b	1d650 <argp_parse@@Base+0x1d68>
   1d744:	ldr	r2, [sp, #32]
   1d748:	mov	r0, r4
   1d74c:	movw	r1, #5680	; 0x1630
   1d750:	movt	r1, #2
   1d754:	add	sp, sp, #76	; 0x4c
   1d758:	ldrd	r4, [sp]
   1d75c:	ldr	lr, [sp, #8]
   1d760:	add	sp, sp, #12
   1d764:	b	1190c <fprintf@plt>
   1d768:	ldrd	r2, [sp, #32]
   1d76c:	mov	r0, r4
   1d770:	movw	r1, #5696	; 0x1640
   1d774:	movt	r1, #2
   1d778:	add	sp, sp, #76	; 0x4c
   1d77c:	ldrd	r4, [sp]
   1d780:	ldr	lr, [sp, #8]
   1d784:	add	sp, sp, #12
   1d788:	b	1190c <fprintf@plt>
   1d78c:	ldrd	r2, [sp, #32]
   1d790:	mov	r0, r4
   1d794:	movw	r1, #5720	; 0x1658
   1d798:	movt	r1, #2
   1d79c:	ldr	ip, [sp, #40]	; 0x28
   1d7a0:	str	ip, [sp, #88]	; 0x58
   1d7a4:	add	sp, sp, #76	; 0x4c
   1d7a8:	ldrd	r4, [sp]
   1d7ac:	ldr	lr, [sp, #8]
   1d7b0:	add	sp, sp, #12
   1d7b4:	b	1190c <fprintf@plt>
   1d7b8:	mov	r0, r4
   1d7bc:	movw	r1, #5748	; 0x1674
   1d7c0:	movt	r1, #2
   1d7c4:	ldr	r3, [sp, #40]	; 0x28
   1d7c8:	ldr	ip, [sp, #44]	; 0x2c
   1d7cc:	ldr	r2, [sp, #32]
   1d7d0:	stm	sp, {r3, ip}
   1d7d4:	ldr	r3, [sp, #36]	; 0x24
   1d7d8:	bl	1190c <fprintf@plt>
   1d7dc:	b	1d71c <argp_parse@@Base+0x1e34>
   1d7e0:	ldrd	r2, [sp, #40]	; 0x28
   1d7e4:	mov	r0, r4
   1d7e8:	movw	r1, #5780	; 0x1694
   1d7ec:	movt	r1, #2
   1d7f0:	ldr	ip, [sp, #48]	; 0x30
   1d7f4:	strd	r2, [sp]
   1d7f8:	ldrd	r2, [sp, #32]
   1d7fc:	str	ip, [sp, #8]
   1d800:	bl	1190c <fprintf@plt>
   1d804:	b	1d71c <argp_parse@@Base+0x1e34>
   1d808:	ldr	ip, [sp, #40]	; 0x28
   1d80c:	mov	r0, r4
   1d810:	movw	r1, #5816	; 0x16b8
   1d814:	movt	r1, #2
   1d818:	ldr	r2, [sp, #44]	; 0x2c
   1d81c:	ldr	r3, [sp, #52]	; 0x34
   1d820:	str	ip, [sp]
   1d824:	ldr	ip, [sp, #48]	; 0x30
   1d828:	str	r2, [sp, #4]
   1d82c:	str	ip, [sp, #8]
   1d830:	str	r3, [sp, #12]
   1d834:	ldrd	r2, [sp, #32]
   1d838:	bl	1190c <fprintf@plt>
   1d83c:	b	1d71c <argp_parse@@Base+0x1e34>
   1d840:	ldr	r3, [sp, #40]	; 0x28
   1d844:	mov	r0, r4
   1d848:	movw	r1, #5856	; 0x16e0
   1d84c:	movt	r1, #2
   1d850:	ldr	ip, [sp, #44]	; 0x2c
   1d854:	ldr	r2, [sp, #56]	; 0x38
   1d858:	stm	sp, {r3, ip}
   1d85c:	ldr	r3, [sp, #48]	; 0x30
   1d860:	ldr	ip, [sp, #52]	; 0x34
   1d864:	str	r3, [sp, #8]
   1d868:	str	r2, [sp, #16]
   1d86c:	str	ip, [sp, #12]
   1d870:	ldr	r2, [sp, #32]
   1d874:	ldr	r3, [sp, #36]	; 0x24
   1d878:	bl	1190c <fprintf@plt>
   1d87c:	b	1d71c <argp_parse@@Base+0x1e34>
   1d880:	ldrd	r2, [sp, #40]	; 0x28
   1d884:	mov	r0, r4
   1d888:	movw	r1, #5900	; 0x170c
   1d88c:	movt	r1, #2
   1d890:	ldr	ip, [sp, #60]	; 0x3c
   1d894:	strd	r2, [sp]
   1d898:	ldrd	r2, [sp, #48]	; 0x30
   1d89c:	str	ip, [sp, #20]
   1d8a0:	ldr	ip, [sp, #56]	; 0x38
   1d8a4:	strd	r2, [sp, #8]
   1d8a8:	ldrd	r2, [sp, #32]
   1d8ac:	str	ip, [sp, #16]
   1d8b0:	bl	1190c <fprintf@plt>
   1d8b4:	b	1d71c <argp_parse@@Base+0x1e34>
   1d8b8:	mov	r5, r3
   1d8bc:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8c0:	mov	r5, #1
   1d8c4:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8c8:	mov	r5, #2
   1d8cc:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8d0:	mov	r5, #3
   1d8d4:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8d8:	mov	r5, #4
   1d8dc:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8e0:	mov	r5, #5
   1d8e4:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8e8:	mov	r5, #6
   1d8ec:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8f0:	mov	r5, #7
   1d8f4:	b	1d62c <argp_parse@@Base+0x1d44>
   1d8f8:	mov	r5, #8
   1d8fc:	b	1d62c <argp_parse@@Base+0x1d44>
   1d900:	movw	r1, #6000	; 0x1770
   1d904:	movt	r1, #2
   1d908:	ldr	ip, [sp, #40]	; 0x28
   1d90c:	mov	r0, r4
   1d910:	b	1d6e0 <argp_parse@@Base+0x1df8>
   1d914:	push	{r3}		; (str r3, [sp, #-4]!)
   1d918:	push	{lr}		; (str lr, [sp, #-4]!)
   1d91c:	sub	sp, sp, #56	; 0x38
   1d920:	ldr	ip, [sp, #64]	; 0x40
   1d924:	add	r3, sp, #64	; 0x40
   1d928:	str	r3, [sp, #12]
   1d92c:	cmp	ip, #0
   1d930:	str	ip, [sp, #16]
   1d934:	beq	1d9cc <argp_parse@@Base+0x20e4>
   1d938:	ldr	ip, [sp, #68]	; 0x44
   1d93c:	cmp	ip, #0
   1d940:	str	ip, [sp, #20]
   1d944:	beq	1d9f0 <argp_parse@@Base+0x2108>
   1d948:	ldr	ip, [sp, #72]	; 0x48
   1d94c:	cmp	ip, #0
   1d950:	str	ip, [sp, #24]
   1d954:	beq	1d9f8 <argp_parse@@Base+0x2110>
   1d958:	ldr	ip, [sp, #76]	; 0x4c
   1d95c:	cmp	ip, #0
   1d960:	str	ip, [sp, #28]
   1d964:	beq	1da00 <argp_parse@@Base+0x2118>
   1d968:	ldr	ip, [sp, #80]	; 0x50
   1d96c:	cmp	ip, #0
   1d970:	str	ip, [sp, #32]
   1d974:	beq	1da08 <argp_parse@@Base+0x2120>
   1d978:	ldr	ip, [sp, #84]	; 0x54
   1d97c:	cmp	ip, #0
   1d980:	str	ip, [sp, #36]	; 0x24
   1d984:	beq	1da10 <argp_parse@@Base+0x2128>
   1d988:	ldr	ip, [sp, #88]	; 0x58
   1d98c:	cmp	ip, #0
   1d990:	str	ip, [sp, #40]	; 0x28
   1d994:	beq	1da18 <argp_parse@@Base+0x2130>
   1d998:	ldr	ip, [sp, #92]	; 0x5c
   1d99c:	cmp	ip, #0
   1d9a0:	str	ip, [sp, #44]	; 0x2c
   1d9a4:	beq	1da20 <argp_parse@@Base+0x2138>
   1d9a8:	ldr	ip, [sp, #96]	; 0x60
   1d9ac:	cmp	ip, #0
   1d9b0:	str	ip, [sp, #48]	; 0x30
   1d9b4:	beq	1da28 <argp_parse@@Base+0x2140>
   1d9b8:	ldr	r3, [sp, #100]	; 0x64
   1d9bc:	cmp	r3, #0
   1d9c0:	str	r3, [sp, #52]	; 0x34
   1d9c4:	movne	ip, #10
   1d9c8:	moveq	ip, #9
   1d9cc:	ldr	r3, [sp, #60]	; 0x3c
   1d9d0:	add	lr, sp, #16
   1d9d4:	str	lr, [sp]
   1d9d8:	str	ip, [sp, #4]
   1d9dc:	bl	1cf50 <argp_parse@@Base+0x1668>
   1d9e0:	add	sp, sp, #56	; 0x38
   1d9e4:	pop	{lr}		; (ldr lr, [sp], #4)
   1d9e8:	add	sp, sp, #4
   1d9ec:	bx	lr
   1d9f0:	mov	ip, #1
   1d9f4:	b	1d9cc <argp_parse@@Base+0x20e4>
   1d9f8:	mov	ip, #2
   1d9fc:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da00:	mov	ip, #3
   1da04:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da08:	mov	ip, #4
   1da0c:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da10:	mov	ip, #5
   1da14:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da18:	mov	ip, #6
   1da1c:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da20:	mov	ip, #7
   1da24:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da28:	mov	ip, #8
   1da2c:	b	1d9cc <argp_parse@@Base+0x20e4>
   1da30:	movw	r3, #9668	; 0x25c4
   1da34:	movt	r3, #3
   1da38:	str	r4, [sp, #-8]!
   1da3c:	mov	r0, #10
   1da40:	ldr	r1, [r3]
   1da44:	str	lr, [sp, #4]
   1da48:	bl	11a08 <fputc@plt>
   1da4c:	movw	r1, #6060	; 0x17ac
   1da50:	movt	r1, #2
   1da54:	movw	r0, #6084	; 0x17c4
   1da58:	movt	r0, #2
   1da5c:	bl	11684 <printf@plt>
   1da60:	movw	r2, #6104	; 0x17d8
   1da64:	movt	r2, #2
   1da68:	movw	r1, #5364	; 0x14f4
   1da6c:	movt	r1, #2
   1da70:	movw	r0, #6144	; 0x1800
   1da74:	movt	r0, #2
   1da78:	bl	11684 <printf@plt>
   1da7c:	movw	r1, #6164	; 0x1814
   1da80:	movt	r1, #2
   1da84:	ldr	r4, [sp]
   1da88:	movw	r0, #6196	; 0x1834
   1da8c:	movt	r0, #2
   1da90:	ldr	lr, [sp, #4]
   1da94:	add	sp, sp, #8
   1da98:	b	11684 <printf@plt>
   1da9c:	strd	r4, [sp, #-16]!
   1daa0:	mov	r4, r0
   1daa4:	mov	r5, r2
   1daa8:	str	r6, [sp, #8]
   1daac:	mov	r6, r1
   1dab0:	str	lr, [sp, #12]
   1dab4:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dab8:	cmp	r0, #0
   1dabc:	beq	1dad0 <argp_parse@@Base+0x21e8>
   1dac0:	ldrd	r4, [sp]
   1dac4:	ldr	r6, [sp, #8]
   1dac8:	add	sp, sp, #12
   1dacc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dad0:	cmp	r4, #0
   1dad4:	beq	1dae4 <argp_parse@@Base+0x21fc>
   1dad8:	cmp	r6, #0
   1dadc:	cmpne	r5, #0
   1dae0:	beq	1dac0 <argp_parse@@Base+0x21d8>
   1dae4:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dae8:	str	r4, [sp, #-8]!
   1daec:	str	lr, [sp, #4]
   1daf0:	bl	1e144 <argp_parse@@Base+0x285c>
   1daf4:	cmp	r0, #0
   1daf8:	beq	1db08 <argp_parse@@Base+0x2220>
   1dafc:	ldr	r4, [sp]
   1db00:	add	sp, sp, #4
   1db04:	pop	{pc}		; (ldr pc, [sp], #4)
   1db08:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1db0c:	str	r4, [sp, #-8]!
   1db10:	str	lr, [sp, #4]
   1db14:	bl	1e144 <argp_parse@@Base+0x285c>
   1db18:	cmp	r0, #0
   1db1c:	beq	1db2c <argp_parse@@Base+0x2244>
   1db20:	ldr	r4, [sp]
   1db24:	add	sp, sp, #4
   1db28:	pop	{pc}		; (ldr pc, [sp], #4)
   1db2c:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1db30:	str	r4, [sp, #-8]!
   1db34:	str	lr, [sp, #4]
   1db38:	bl	1e144 <argp_parse@@Base+0x285c>
   1db3c:	cmp	r0, #0
   1db40:	beq	1db50 <argp_parse@@Base+0x2268>
   1db44:	ldr	r4, [sp]
   1db48:	add	sp, sp, #4
   1db4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1db50:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1db54:	strd	r4, [sp, #-16]!
   1db58:	mov	r5, r0
   1db5c:	mov	r4, r1
   1db60:	str	r6, [sp, #8]
   1db64:	str	lr, [sp, #12]
   1db68:	bl	1e180 <argp_parse@@Base+0x2898>
   1db6c:	cmp	r0, #0
   1db70:	beq	1db84 <argp_parse@@Base+0x229c>
   1db74:	ldrd	r4, [sp]
   1db78:	ldr	r6, [sp, #8]
   1db7c:	add	sp, sp, #12
   1db80:	pop	{pc}		; (ldr pc, [sp], #4)
   1db84:	adds	r4, r4, #0
   1db88:	movne	r4, #1
   1db8c:	cmp	r5, #0
   1db90:	moveq	r4, #1
   1db94:	cmp	r4, #0
   1db98:	beq	1db74 <argp_parse@@Base+0x228c>
   1db9c:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dba0:	cmp	r1, #0
   1dba4:	orreq	r1, r1, #1
   1dba8:	str	r4, [sp, #-8]!
   1dbac:	str	lr, [sp, #4]
   1dbb0:	bl	1e180 <argp_parse@@Base+0x2898>
   1dbb4:	cmp	r0, #0
   1dbb8:	beq	1dbc8 <argp_parse@@Base+0x22e0>
   1dbbc:	ldr	r4, [sp]
   1dbc0:	add	sp, sp, #4
   1dbc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dbc8:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dbcc:	strd	r4, [sp, #-16]!
   1dbd0:	mov	r4, r0
   1dbd4:	mov	r5, r2
   1dbd8:	str	r6, [sp, #8]
   1dbdc:	mov	r6, r1
   1dbe0:	str	lr, [sp, #12]
   1dbe4:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dbe8:	cmp	r0, #0
   1dbec:	beq	1dc00 <argp_parse@@Base+0x2318>
   1dbf0:	ldrd	r4, [sp]
   1dbf4:	ldr	r6, [sp, #8]
   1dbf8:	add	sp, sp, #12
   1dbfc:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc00:	cmp	r4, #0
   1dc04:	beq	1dc14 <argp_parse@@Base+0x232c>
   1dc08:	cmp	r6, #0
   1dc0c:	cmpne	r5, #0
   1dc10:	beq	1dbf0 <argp_parse@@Base+0x2308>
   1dc14:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dc18:	cmp	r2, #0
   1dc1c:	cmpne	r1, #0
   1dc20:	str	r4, [sp, #-8]!
   1dc24:	moveq	r2, #1
   1dc28:	str	lr, [sp, #4]
   1dc2c:	moveq	r1, r2
   1dc30:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dc34:	cmp	r0, #0
   1dc38:	beq	1dc48 <argp_parse@@Base+0x2360>
   1dc3c:	ldr	r4, [sp]
   1dc40:	add	sp, sp, #4
   1dc44:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc48:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dc4c:	mov	r2, r1
   1dc50:	mov	r1, r0
   1dc54:	str	r4, [sp, #-8]!
   1dc58:	mov	r0, #0
   1dc5c:	str	lr, [sp, #4]
   1dc60:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dc64:	cmp	r0, #0
   1dc68:	beq	1dc78 <argp_parse@@Base+0x2390>
   1dc6c:	ldr	r4, [sp]
   1dc70:	add	sp, sp, #4
   1dc74:	pop	{pc}		; (ldr pc, [sp], #4)
   1dc78:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dc7c:	cmp	r1, #0
   1dc80:	cmpne	r0, #0
   1dc84:	str	r4, [sp, #-8]!
   1dc88:	moveq	r2, #1
   1dc8c:	movne	r2, r1
   1dc90:	str	lr, [sp, #4]
   1dc94:	movne	r1, r0
   1dc98:	moveq	r1, r2
   1dc9c:	mov	r0, #0
   1dca0:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dca4:	cmp	r0, #0
   1dca8:	beq	1dcb8 <argp_parse@@Base+0x23d0>
   1dcac:	ldr	r4, [sp]
   1dcb0:	add	sp, sp, #4
   1dcb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dcb8:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dcbc:	cmp	r0, #0
   1dcc0:	strd	r4, [sp, #-16]!
   1dcc4:	mov	r5, r1
   1dcc8:	ldr	r4, [r1]
   1dccc:	str	r6, [sp, #8]
   1dcd0:	str	lr, [sp, #12]
   1dcd4:	beq	1dd1c <argp_parse@@Base+0x2434>
   1dcd8:	lsr	r3, r4, #1
   1dcdc:	add	r3, r3, #1
   1dce0:	adds	r4, r4, r3
   1dce4:	bcs	1dd18 <argp_parse@@Base+0x2430>
   1dce8:	mov	r2, #1
   1dcec:	mov	r1, r4
   1dcf0:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dcf4:	cmp	r0, #0
   1dcf8:	beq	1dd10 <argp_parse@@Base+0x2428>
   1dcfc:	ldr	r6, [sp, #8]
   1dd00:	str	r4, [r5]
   1dd04:	ldrd	r4, [sp]
   1dd08:	add	sp, sp, #12
   1dd0c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd10:	cmp	r4, #0
   1dd14:	beq	1dcfc <argp_parse@@Base+0x2414>
   1dd18:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dd1c:	cmp	r4, #0
   1dd20:	mov	r2, #1
   1dd24:	moveq	r4, #64	; 0x40
   1dd28:	mov	r1, r4
   1dd2c:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dd30:	cmp	r0, #0
   1dd34:	bne	1dcfc <argp_parse@@Base+0x2414>
   1dd38:	b	1dd18 <argp_parse@@Base+0x2430>
   1dd3c:	cmp	r0, #0
   1dd40:	strd	r4, [sp, #-16]!
   1dd44:	mov	r5, r1
   1dd48:	ldr	r4, [r1]
   1dd4c:	str	r6, [sp, #8]
   1dd50:	mov	r6, r2
   1dd54:	str	lr, [sp, #12]
   1dd58:	beq	1dda0 <argp_parse@@Base+0x24b8>
   1dd5c:	lsr	r3, r4, #1
   1dd60:	add	r3, r3, #1
   1dd64:	adds	r4, r4, r3
   1dd68:	bcs	1dd9c <argp_parse@@Base+0x24b4>
   1dd6c:	mov	r1, r4
   1dd70:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1dd74:	cmp	r0, #0
   1dd78:	beq	1dd90 <argp_parse@@Base+0x24a8>
   1dd7c:	ldr	r6, [sp, #8]
   1dd80:	str	r4, [r5]
   1dd84:	ldrd	r4, [sp]
   1dd88:	add	sp, sp, #12
   1dd8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dd90:	cmp	r4, #0
   1dd94:	cmpne	r6, #0
   1dd98:	beq	1dd7c <argp_parse@@Base+0x2494>
   1dd9c:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dda0:	cmp	r4, #0
   1dda4:	bne	1ddb8 <argp_parse@@Base+0x24d0>
   1dda8:	mov	r4, #64	; 0x40
   1ddac:	udiv	r4, r4, r2
   1ddb0:	cmp	r2, #64	; 0x40
   1ddb4:	addhi	r4, r4, #1
   1ddb8:	mov	r2, r6
   1ddbc:	mov	r1, r4
   1ddc0:	mov	r0, #0
   1ddc4:	bl	1fd90 <argp_parse@@Base+0x44a8>
   1ddc8:	cmp	r0, #0
   1ddcc:	bne	1dd7c <argp_parse@@Base+0x2494>
   1ddd0:	b	1dd9c <argp_parse@@Base+0x24b4>
   1ddd4:	ldr	ip, [r1]
   1ddd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1dddc:	strd	r6, [sp, #8]
   1dde0:	mov	r7, r1
   1dde4:	mov	r6, r0
   1dde8:	str	r8, [sp, #16]
   1ddec:	mvn	r8, r3
   1ddf0:	lsr	r8, r8, #31
   1ddf4:	str	lr, [sp, #20]
   1ddf8:	asr	r1, ip, #1
   1ddfc:	ldr	lr, [sp, #24]
   1de00:	adds	r4, ip, r1
   1de04:	mvnvs	r4, #-2147483648	; 0x80000000
   1de08:	cmp	r3, r4
   1de0c:	movge	r1, #0
   1de10:	andlt	r1, r8, #1
   1de14:	cmp	r1, #0
   1de18:	movne	r4, r3
   1de1c:	smull	r0, r1, r4, lr
   1de20:	cmp	r1, r0, asr #31
   1de24:	bne	1ded4 <argp_parse@@Base+0x25ec>
   1de28:	cmp	r0, #63	; 0x3f
   1de2c:	mov	r5, r0
   1de30:	ble	1dea0 <argp_parse@@Base+0x25b8>
   1de34:	cmp	r6, #0
   1de38:	sub	r1, r4, ip
   1de3c:	streq	r6, [r7]
   1de40:	cmp	r1, r2
   1de44:	bge	1de74 <argp_parse@@Base+0x258c>
   1de48:	adds	r4, ip, r2
   1de4c:	bvs	1ded0 <argp_parse@@Base+0x25e8>
   1de50:	cmp	r4, r3
   1de54:	movle	r3, #0
   1de58:	andgt	r3, r8, #1
   1de5c:	cmp	r3, #0
   1de60:	bne	1ded0 <argp_parse@@Base+0x25e8>
   1de64:	smull	r0, r1, r4, lr
   1de68:	cmp	r1, r0, asr #31
   1de6c:	mov	r5, r0
   1de70:	bne	1ded0 <argp_parse@@Base+0x25e8>
   1de74:	mov	r1, r5
   1de78:	mov	r0, r6
   1de7c:	bl	1e180 <argp_parse@@Base+0x2898>
   1de80:	cmp	r0, #0
   1de84:	beq	1deb4 <argp_parse@@Base+0x25cc>
   1de88:	ldr	r8, [sp, #16]
   1de8c:	str	r4, [r7]
   1de90:	ldrd	r4, [sp]
   1de94:	ldrd	r6, [sp, #8]
   1de98:	add	sp, sp, #20
   1de9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1dea0:	mov	r0, #64	; 0x40
   1dea4:	sdiv	r4, r0, lr
   1dea8:	mls	r5, lr, r4, r0
   1deac:	sub	r5, r0, r5
   1deb0:	b	1de34 <argp_parse@@Base+0x254c>
   1deb4:	adds	r5, r5, #0
   1deb8:	movne	r5, #1
   1debc:	cmp	r6, #0
   1dec0:	movne	r6, r5
   1dec4:	moveq	r6, #1
   1dec8:	cmp	r6, #0
   1decc:	beq	1de88 <argp_parse@@Base+0x25a0>
   1ded0:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1ded4:	mvn	r0, #-2147483648	; 0x80000000
   1ded8:	b	1dea4 <argp_parse@@Base+0x25bc>
   1dedc:	mov	r1, #1
   1dee0:	str	r4, [sp, #-8]!
   1dee4:	str	lr, [sp, #4]
   1dee8:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   1deec:	cmp	r0, #0
   1def0:	beq	1df00 <argp_parse@@Base+0x2618>
   1def4:	ldr	r4, [sp]
   1def8:	add	sp, sp, #4
   1defc:	pop	{pc}		; (ldr pc, [sp], #4)
   1df00:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1df04:	mov	r1, #1
   1df08:	str	r4, [sp, #-8]!
   1df0c:	str	lr, [sp, #4]
   1df10:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   1df14:	cmp	r0, #0
   1df18:	beq	1df28 <argp_parse@@Base+0x2640>
   1df1c:	ldr	r4, [sp]
   1df20:	add	sp, sp, #4
   1df24:	pop	{pc}		; (ldr pc, [sp], #4)
   1df28:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1df2c:	str	r4, [sp, #-8]!
   1df30:	str	lr, [sp, #4]
   1df34:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   1df38:	cmp	r0, #0
   1df3c:	beq	1df4c <argp_parse@@Base+0x2664>
   1df40:	ldr	r4, [sp]
   1df44:	add	sp, sp, #4
   1df48:	pop	{pc}		; (ldr pc, [sp], #4)
   1df4c:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1df50:	str	r4, [sp, #-8]!
   1df54:	str	lr, [sp, #4]
   1df58:	bl	1e0d0 <argp_parse@@Base+0x27e8>
   1df5c:	cmp	r0, #0
   1df60:	beq	1df70 <argp_parse@@Base+0x2688>
   1df64:	ldr	r4, [sp]
   1df68:	add	sp, sp, #4
   1df6c:	pop	{pc}		; (ldr pc, [sp], #4)
   1df70:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1df74:	strd	r4, [sp, #-16]!
   1df78:	mov	r4, r1
   1df7c:	str	r6, [sp, #8]
   1df80:	mov	r6, r0
   1df84:	mov	r0, r1
   1df88:	str	lr, [sp, #12]
   1df8c:	bl	1e144 <argp_parse@@Base+0x285c>
   1df90:	subs	r5, r0, #0
   1df94:	beq	1dfb8 <argp_parse@@Base+0x26d0>
   1df98:	mov	r2, r4
   1df9c:	mov	r1, r6
   1dfa0:	bl	11714 <memcpy@plt>
   1dfa4:	mov	r0, r5
   1dfa8:	ldrd	r4, [sp]
   1dfac:	ldr	r6, [sp, #8]
   1dfb0:	add	sp, sp, #12
   1dfb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1dfb8:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1dfbc:	strd	r4, [sp, #-16]!
   1dfc0:	mov	r4, r1
   1dfc4:	str	r6, [sp, #8]
   1dfc8:	mov	r6, r0
   1dfcc:	mov	r0, r1
   1dfd0:	str	lr, [sp, #12]
   1dfd4:	bl	1e144 <argp_parse@@Base+0x285c>
   1dfd8:	subs	r5, r0, #0
   1dfdc:	beq	1e000 <argp_parse@@Base+0x2718>
   1dfe0:	mov	r2, r4
   1dfe4:	mov	r1, r6
   1dfe8:	bl	11714 <memcpy@plt>
   1dfec:	mov	r0, r5
   1dff0:	ldrd	r4, [sp]
   1dff4:	ldr	r6, [sp, #8]
   1dff8:	add	sp, sp, #12
   1dffc:	pop	{pc}		; (ldr pc, [sp], #4)
   1e000:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1e004:	strd	r4, [sp, #-16]!
   1e008:	mov	r4, r1
   1e00c:	str	r6, [sp, #8]
   1e010:	mov	r6, r0
   1e014:	add	r0, r1, #1
   1e018:	str	lr, [sp, #12]
   1e01c:	bl	1e144 <argp_parse@@Base+0x285c>
   1e020:	subs	r5, r0, #0
   1e024:	beq	1e050 <argp_parse@@Base+0x2768>
   1e028:	mov	r3, #0
   1e02c:	mov	r1, r6
   1e030:	mov	r2, r4
   1e034:	strb	r3, [r5, r4]
   1e038:	bl	11714 <memcpy@plt>
   1e03c:	mov	r0, r5
   1e040:	ldrd	r4, [sp]
   1e044:	ldr	r6, [sp, #8]
   1e048:	add	sp, sp, #12
   1e04c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e050:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1e054:	strd	r4, [sp, #-16]!
   1e058:	str	r6, [sp, #8]
   1e05c:	mov	r6, r0
   1e060:	str	lr, [sp, #12]
   1e064:	bl	118e8 <strlen@plt>
   1e068:	add	r4, r0, #1
   1e06c:	mov	r0, r4
   1e070:	bl	1e144 <argp_parse@@Base+0x285c>
   1e074:	subs	r5, r0, #0
   1e078:	beq	1e09c <argp_parse@@Base+0x27b4>
   1e07c:	mov	r2, r4
   1e080:	mov	r1, r6
   1e084:	bl	11714 <memcpy@plt>
   1e088:	mov	r0, r5
   1e08c:	ldrd	r4, [sp]
   1e090:	ldr	r6, [sp, #8]
   1e094:	add	sp, sp, #12
   1e098:	pop	{pc}		; (ldr pc, [sp], #4)
   1e09c:	bl	1e0a0 <argp_parse@@Base+0x27b8>
   1e0a0:	movw	r3, #9640	; 0x25a8
   1e0a4:	movt	r3, #3
   1e0a8:	str	r4, [sp, #-8]!
   1e0ac:	movw	r2, #3824	; 0xef0
   1e0b0:	movt	r2, #2
   1e0b4:	ldr	r0, [r3]
   1e0b8:	mov	r1, #0
   1e0bc:	movw	r3, #6284	; 0x188c
   1e0c0:	movt	r3, #2
   1e0c4:	str	lr, [sp, #4]
   1e0c8:	bl	11828 <error@plt>
   1e0cc:	bl	11ab0 <abort@plt>
   1e0d0:	cmp	r1, #0
   1e0d4:	cmpne	r0, #0
   1e0d8:	beq	1e124 <argp_parse@@Base+0x283c>
   1e0dc:	strd	r4, [sp, #-16]!
   1e0e0:	umull	r4, r5, r0, r1
   1e0e4:	str	r6, [sp, #8]
   1e0e8:	str	lr, [sp, #12]
   1e0ec:	adds	r3, r5, #0
   1e0f0:	movne	r3, #1
   1e0f4:	cmp	r4, #0
   1e0f8:	blt	1e104 <argp_parse@@Base+0x281c>
   1e0fc:	cmp	r3, #0
   1e100:	beq	1e130 <argp_parse@@Base+0x2848>
   1e104:	bl	11918 <__errno_location@plt>
   1e108:	mov	r3, #12
   1e10c:	ldrd	r4, [sp]
   1e110:	ldr	r6, [sp, #8]
   1e114:	add	sp, sp, #12
   1e118:	str	r3, [r0]
   1e11c:	mov	r0, #0
   1e120:	pop	{pc}		; (ldr pc, [sp], #4)
   1e124:	mov	r1, #1
   1e128:	mov	r0, r1
   1e12c:	b	11630 <calloc@plt>
   1e130:	ldrd	r4, [sp]
   1e134:	ldr	r6, [sp, #8]
   1e138:	ldr	lr, [sp, #12]
   1e13c:	add	sp, sp, #16
   1e140:	b	11630 <calloc@plt>
   1e144:	cmp	r0, #0
   1e148:	beq	1e154 <argp_parse@@Base+0x286c>
   1e14c:	blt	1e15c <argp_parse@@Base+0x2874>
   1e150:	b	11864 <malloc@plt>
   1e154:	mov	r0, #1
   1e158:	b	11864 <malloc@plt>
   1e15c:	str	r4, [sp, #-8]!
   1e160:	str	lr, [sp, #4]
   1e164:	bl	11918 <__errno_location@plt>
   1e168:	mov	r3, #12
   1e16c:	ldr	r4, [sp]
   1e170:	add	sp, sp, #4
   1e174:	str	r3, [r0]
   1e178:	mov	r0, #0
   1e17c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e180:	cmp	r0, #0
   1e184:	beq	1e1ac <argp_parse@@Base+0x28c4>
   1e188:	cmp	r1, #0
   1e18c:	str	r4, [sp, #-8]!
   1e190:	str	lr, [sp, #4]
   1e194:	beq	1e1b4 <argp_parse@@Base+0x28cc>
   1e198:	blt	1e1c8 <argp_parse@@Base+0x28e0>
   1e19c:	ldr	r4, [sp]
   1e1a0:	ldr	lr, [sp, #4]
   1e1a4:	add	sp, sp, #8
   1e1a8:	b	117bc <realloc@plt>
   1e1ac:	mov	r0, r1
   1e1b0:	b	1e144 <argp_parse@@Base+0x285c>
   1e1b4:	bl	1cb08 <argp_parse@@Base+0x1220>
   1e1b8:	ldr	r4, [sp]
   1e1bc:	add	sp, sp, #4
   1e1c0:	mov	r0, #0
   1e1c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e1c8:	bl	11918 <__errno_location@plt>
   1e1cc:	mov	r3, #12
   1e1d0:	str	r3, [r0]
   1e1d4:	b	1e1b8 <argp_parse@@Base+0x28d0>
   1e1d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1e1dc:	mov	r5, r3
   1e1e0:	strd	r6, [sp, #8]
   1e1e4:	mov	r7, r1
   1e1e8:	mov	r6, r2
   1e1ec:	str	r8, [sp, #16]
   1e1f0:	mov	r8, r0
   1e1f4:	mov	r0, #36	; 0x24
   1e1f8:	str	lr, [sp, #20]
   1e1fc:	bl	1e144 <argp_parse@@Base+0x285c>
   1e200:	subs	r4, r0, #0
   1e204:	beq	1e248 <argp_parse@@Base+0x2960>
   1e208:	mov	r3, #0
   1e20c:	mov	r0, #200	; 0xc8
   1e210:	str	r8, [r4]
   1e214:	str	r7, [r4, #4]
   1e218:	str	r6, [r4, #8]
   1e21c:	str	r5, [r4, #12]
   1e220:	str	r3, [r4, #16]
   1e224:	str	r3, [r4, #20]
   1e228:	bl	1e144 <argp_parse@@Base+0x285c>
   1e22c:	cmp	r0, #0
   1e230:	mov	r3, r0
   1e234:	str	r0, [r4, #24]
   1e238:	addne	r2, r0, #200	; 0xc8
   1e23c:	strne	r0, [r4, #28]
   1e240:	strne	r2, [r4, #32]
   1e244:	beq	1e260 <argp_parse@@Base+0x2978>
   1e248:	mov	r0, r4
   1e24c:	ldrd	r4, [sp]
   1e250:	ldrd	r6, [sp, #8]
   1e254:	ldr	r8, [sp, #16]
   1e258:	add	sp, sp, #20
   1e25c:	pop	{pc}		; (ldr pc, [sp], #4)
   1e260:	mov	r0, r4
   1e264:	mov	r4, r3
   1e268:	bl	1cb08 <argp_parse@@Base+0x1220>
   1e26c:	b	1e248 <argp_parse@@Base+0x2960>
   1e270:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e274:	mov	r5, r0
   1e278:	ldr	r4, [r0, #16]
   1e27c:	ldr	r3, [r0, #24]
   1e280:	strd	r6, [sp, #8]
   1e284:	strd	r8, [sp, #16]
   1e288:	ldr	r8, [r0, #28]
   1e28c:	strd	sl, [sp, #24]
   1e290:	add	r4, r3, r4
   1e294:	str	lr, [sp, #32]
   1e298:	sub	sp, sp, #12
   1e29c:	cmp	r4, r8
   1e2a0:	bcc	1e31c <argp_parse@@Base+0x2a34>
   1e2a4:	b	1e578 <argp_parse@@Base+0x2c90>
   1e2a8:	sub	r2, fp, r4
   1e2ac:	add	r2, r2, r6
   1e2b0:	cmp	r2, r3
   1e2b4:	blt	1e5b8 <argp_parse@@Base+0x2cd0>
   1e2b8:	ldr	sl, [r5, #12]
   1e2bc:	sub	r7, r3, #1
   1e2c0:	str	r3, [sp, #4]
   1e2c4:	cmp	sl, #0
   1e2c8:	bge	1e3d8 <argp_parse@@Base+0x2af0>
   1e2cc:	cmp	r8, fp
   1e2d0:	bls	1e750 <argp_parse@@Base+0x2e68>
   1e2d4:	sub	r0, r7, r6
   1e2d8:	sub	r2, r8, fp
   1e2dc:	add	r0, r4, r0
   1e2e0:	mov	r1, fp
   1e2e4:	bl	116c0 <memmove@plt>
   1e2e8:	ldr	r2, [r5, #20]
   1e2ec:	mov	r3, #0
   1e2f0:	str	r3, [r5, #20]
   1e2f4:	ldr	r3, [sp, #4]
   1e2f8:	ldr	r8, [r5, #28]
   1e2fc:	sub	r7, r7, r2
   1e300:	add	r7, r4, r7
   1e304:	sub	fp, r7, fp
   1e308:	add	r4, r4, r3
   1e30c:	sub	r8, r8, fp
   1e310:	str	r8, [r5, #28]
   1e314:	cmp	r4, r8
   1e318:	bcs	1e574 <argp_parse@@Base+0x2c8c>
   1e31c:	ldr	r6, [r5, #20]
   1e320:	cmp	r6, #0
   1e324:	bne	1e384 <argp_parse@@Base+0x2a9c>
   1e328:	ldr	r7, [r5, #4]
   1e32c:	cmp	r7, #0
   1e330:	beq	1e59c <argp_parse@@Base+0x2cb4>
   1e334:	ldr	r2, [r5, #32]
   1e338:	add	r3, r8, r7
   1e33c:	cmp	r2, r3
   1e340:	bls	1e6c4 <argp_parse@@Base+0x2ddc>
   1e344:	add	r6, r4, r7
   1e348:	sub	r2, r8, r4
   1e34c:	mov	r1, r4
   1e350:	mov	r0, r6
   1e354:	bl	116c0 <memmove@plt>
   1e358:	ldr	r3, [r5, #28]
   1e35c:	mov	r0, r4
   1e360:	mov	r2, r7
   1e364:	mov	r1, #32
   1e368:	mov	r4, r6
   1e36c:	add	r3, r3, r7
   1e370:	str	r3, [r5, #28]
   1e374:	bl	11954 <memset@plt>
   1e378:	ldr	r8, [r5, #28]
   1e37c:	mov	r6, r7
   1e380:	str	r7, [r5, #20]
   1e384:	sub	r9, r8, r4
   1e388:	mov	r1, #10
   1e38c:	mov	r2, r9
   1e390:	mov	r0, r4
   1e394:	bl	11978 <memchr@plt>
   1e398:	cmp	r6, #0
   1e39c:	mov	fp, r0
   1e3a0:	bge	1e3ac <argp_parse@@Base+0x2ac4>
   1e3a4:	mov	r6, #0
   1e3a8:	str	r6, [r5, #20]
   1e3ac:	cmp	fp, #0
   1e3b0:	ldr	r3, [r5, #8]
   1e3b4:	bne	1e2a8 <argp_parse@@Base+0x29c0>
   1e3b8:	add	r1, r6, r9
   1e3bc:	cmp	r1, r3
   1e3c0:	bcc	1e7c0 <argp_parse@@Base+0x2ed8>
   1e3c4:	ldr	sl, [r5, #12]
   1e3c8:	sub	r7, r3, #1
   1e3cc:	cmp	sl, #0
   1e3d0:	blt	1e754 <argp_parse@@Base+0x2e6c>
   1e3d4:	mov	fp, r8
   1e3d8:	add	r7, r7, #1
   1e3dc:	sub	r6, r7, r6
   1e3e0:	adds	r6, r4, r6
   1e3e4:	bcs	1e5fc <argp_parse@@Base+0x2d14>
   1e3e8:	bl	118c4 <__ctype_b_loc@plt>
   1e3ec:	mov	r3, r6
   1e3f0:	ldr	ip, [r0]
   1e3f4:	b	1e404 <argp_parse@@Base+0x2b1c>
   1e3f8:	cmp	r4, r0
   1e3fc:	mov	r3, r0
   1e400:	bhi	1e600 <argp_parse@@Base+0x2d18>
   1e404:	ldrb	r1, [r3]
   1e408:	mov	r7, r3
   1e40c:	sub	r0, r3, #1
   1e410:	lsl	r1, r1, #1
   1e414:	ldrh	r1, [ip, r1]
   1e418:	tst	r1, #1
   1e41c:	beq	1e3f8 <argp_parse@@Base+0x2b10>
   1e420:	add	r0, r3, #1
   1e424:	cmp	r4, r0
   1e428:	bcs	1e610 <argp_parse@@Base+0x2d28>
   1e42c:	cmp	r4, r3
   1e430:	movhi	r6, r0
   1e434:	movhi	r7, r6
   1e438:	bls	1e454 <argp_parse@@Base+0x2b6c>
   1e43c:	b	1e468 <argp_parse@@Base+0x2b80>
   1e440:	ldrb	r1, [r6, #-1]
   1e444:	lsl	r1, r1, #1
   1e448:	ldrh	r1, [ip, r1]
   1e44c:	tst	r1, #1
   1e450:	beq	1e464 <argp_parse@@Base+0x2b7c>
   1e454:	cmp	r4, r3
   1e458:	mov	r6, r3
   1e45c:	sub	r3, r3, #1
   1e460:	bne	1e440 <argp_parse@@Base+0x2b58>
   1e464:	mov	r7, r0
   1e468:	add	r3, r9, #1
   1e46c:	add	r3, r4, r3
   1e470:	cmp	r7, r3
   1e474:	beq	1e5cc <argp_parse@@Base+0x2ce4>
   1e478:	add	r1, r6, #1
   1e47c:	sub	r3, r7, r1
   1e480:	cmp	r3, sl
   1e484:	bge	1e5e4 <argp_parse@@Base+0x2cfc>
   1e488:	cmp	r7, r8
   1e48c:	bcs	1e5dc <argp_parse@@Base+0x2cf4>
   1e490:	ldr	r3, [r5, #32]
   1e494:	add	sl, sl, #1
   1e498:	sub	r3, r3, r8
   1e49c:	cmp	r3, sl
   1e4a0:	bgt	1e76c <argp_parse@@Base+0x2e84>
   1e4a4:	ldr	r3, [r5]
   1e4a8:	ldr	r0, [r5, #24]
   1e4ac:	cmp	r0, r6
   1e4b0:	bcs	1e4c4 <argp_parse@@Base+0x2bdc>
   1e4b4:	sub	r2, r6, r0
   1e4b8:	mov	r1, #1
   1e4bc:	bl	11738 <fwrite_unlocked@plt>
   1e4c0:	ldr	r3, [r5]
   1e4c4:	ldr	r2, [r3, #20]
   1e4c8:	ldr	r1, [r3, #24]
   1e4cc:	cmp	r2, r1
   1e4d0:	addcc	r1, r2, #1
   1e4d4:	strcc	r1, [r3, #20]
   1e4d8:	movcc	r3, #10
   1e4dc:	strbcc	r3, [r2]
   1e4e0:	bcs	1e7b0 <argp_parse@@Base+0x2ec8>
   1e4e4:	ldr	fp, [r5, #24]
   1e4e8:	sub	r4, r4, fp
   1e4ec:	sub	r3, r7, fp
   1e4f0:	add	r9, r9, r4
   1e4f4:	mov	r8, r3
   1e4f8:	mov	r4, fp
   1e4fc:	ldr	r2, [r5, #12]
   1e500:	cmp	r2, r3
   1e504:	ble	1e528 <argp_parse@@Base+0x2c40>
   1e508:	add	r3, r9, #1
   1e50c:	add	r3, fp, r3
   1e510:	cmp	r7, r3
   1e514:	bne	1e644 <argp_parse@@Base+0x2d5c>
   1e518:	ldr	r3, [r5, #32]
   1e51c:	sub	r3, r3, r7
   1e520:	cmp	r2, r3
   1e524:	bgt	1e644 <argp_parse@@Base+0x2d5c>
   1e528:	cmp	r2, #0
   1e52c:	ble	1e54c <argp_parse@@Base+0x2c64>
   1e530:	mov	r3, #0
   1e534:	mov	r1, #32
   1e538:	strb	r1, [r4], #1
   1e53c:	add	r3, r3, #1
   1e540:	ldr	r2, [r5, #12]
   1e544:	cmp	r2, r3
   1e548:	bgt	1e538 <argp_parse@@Base+0x2c50>
   1e54c:	cmp	r4, r7
   1e550:	bcc	1e6a8 <argp_parse@@Base+0x2dc0>
   1e554:	cmp	r2, #0
   1e558:	sub	r8, r9, r8
   1e55c:	add	r8, r4, r8
   1e560:	mvneq	r2, #0
   1e564:	cmp	r4, r8
   1e568:	str	r2, [r5, #20]
   1e56c:	str	r8, [r5, #28]
   1e570:	bcc	1e31c <argp_parse@@Base+0x2a34>
   1e574:	ldr	r3, [r5, #24]
   1e578:	sub	r8, r8, r3
   1e57c:	str	r8, [r5, #16]
   1e580:	add	sp, sp, #12
   1e584:	ldrd	r4, [sp]
   1e588:	ldrd	r6, [sp, #8]
   1e58c:	ldrd	r8, [sp, #16]
   1e590:	ldrd	sl, [sp, #24]
   1e594:	add	sp, sp, #32
   1e598:	pop	{pc}		; (ldr pc, [sp], #4)
   1e59c:	sub	r9, r8, r4
   1e5a0:	mov	r1, #10
   1e5a4:	mov	r2, r9
   1e5a8:	mov	r0, r4
   1e5ac:	bl	11978 <memchr@plt>
   1e5b0:	mov	fp, r0
   1e5b4:	b	1e3ac <argp_parse@@Base+0x2ac4>
   1e5b8:	mov	r3, #0
   1e5bc:	add	r4, fp, #1
   1e5c0:	ldr	r8, [r5, #28]
   1e5c4:	str	r3, [r5, #20]
   1e5c8:	b	1e314 <argp_parse@@Base+0x2a2c>
   1e5cc:	ldr	r3, [r5, #32]
   1e5d0:	sub	r3, r3, r6
   1e5d4:	cmp	r3, sl
   1e5d8:	ble	1e488 <argp_parse@@Base+0x2ba0>
   1e5dc:	add	r1, r6, #1
   1e5e0:	sub	r3, r7, r1
   1e5e4:	mov	r2, #10
   1e5e8:	sub	r8, r7, r4
   1e5ec:	mov	fp, r4
   1e5f0:	mov	r4, r1
   1e5f4:	strb	r2, [r6]
   1e5f8:	b	1e4fc <argp_parse@@Base+0x2c14>
   1e5fc:	add	r7, r6, #1
   1e600:	cmp	r4, r7
   1e604:	bcs	1e610 <argp_parse@@Base+0x2d28>
   1e608:	mov	r6, r7
   1e60c:	b	1e468 <argp_parse@@Base+0x2b80>
   1e610:	cmp	r6, fp
   1e614:	bcc	1e718 <argp_parse@@Base+0x2e30>
   1e618:	cmp	r6, fp
   1e61c:	beq	1e704 <argp_parse@@Base+0x2e1c>
   1e620:	bl	118c4 <__ctype_b_loc@plt>
   1e624:	ldr	r1, [r0]
   1e628:	mov	r7, r6
   1e62c:	ldrb	r3, [r7, #1]!
   1e630:	lsl	r3, r3, #1
   1e634:	ldrh	r3, [r1, r3]
   1e638:	tst	r3, #1
   1e63c:	bne	1e62c <argp_parse@@Base+0x2d44>
   1e640:	b	1e468 <argp_parse@@Base+0x2b80>
   1e644:	cmp	r2, #0
   1e648:	movgt	r6, #0
   1e64c:	movgt	sl, #32
   1e650:	bgt	1e670 <argp_parse@@Base+0x2d88>
   1e654:	b	1e54c <argp_parse@@Base+0x2c64>
   1e658:	str	ip, [r0, #20]
   1e65c:	add	r6, r6, #1
   1e660:	strb	sl, [r2]
   1e664:	ldr	r2, [r5, #12]
   1e668:	cmp	r2, r6
   1e66c:	ble	1e54c <argp_parse@@Base+0x2c64>
   1e670:	ldr	r0, [r5]
   1e674:	ldr	r2, [r0, #20]
   1e678:	ldr	r1, [r0, #24]
   1e67c:	add	ip, r2, #1
   1e680:	cmp	r2, r1
   1e684:	bcc	1e658 <argp_parse@@Base+0x2d70>
   1e688:	mov	r1, #32
   1e68c:	add	r6, r6, #1
   1e690:	bl	119c0 <__overflow@plt>
   1e694:	ldr	r2, [r5, #12]
   1e698:	cmp	r6, r2
   1e69c:	blt	1e670 <argp_parse@@Base+0x2d88>
   1e6a0:	cmp	r4, r7
   1e6a4:	bcs	1e554 <argp_parse@@Base+0x2c6c>
   1e6a8:	add	r2, fp, r9
   1e6ac:	mov	r1, r7
   1e6b0:	sub	r2, r2, r7
   1e6b4:	mov	r0, r4
   1e6b8:	bl	116c0 <memmove@plt>
   1e6bc:	ldr	r2, [r5, #12]
   1e6c0:	b	1e554 <argp_parse@@Base+0x2c6c>
   1e6c4:	mov	r8, #32
   1e6c8:	b	1e6d8 <argp_parse@@Base+0x2df0>
   1e6cc:	add	r6, r6, #1
   1e6d0:	cmp	r7, r6
   1e6d4:	beq	1e378 <argp_parse@@Base+0x2a90>
   1e6d8:	ldr	r0, [r5]
   1e6dc:	ldr	r3, [r0, #20]
   1e6e0:	ldr	r2, [r0, #24]
   1e6e4:	add	r1, r3, #1
   1e6e8:	cmp	r3, r2
   1e6ec:	strcc	r1, [r0, #20]
   1e6f0:	strbcc	r8, [r3]
   1e6f4:	bcc	1e6cc <argp_parse@@Base+0x2de4>
   1e6f8:	mov	r1, #32
   1e6fc:	bl	119c0 <__overflow@plt>
   1e700:	b	1e6cc <argp_parse@@Base+0x2de4>
   1e704:	mov	r3, #0
   1e708:	add	r4, r6, #1
   1e70c:	ldr	r8, [r5, #28]
   1e710:	str	r3, [r5, #20]
   1e714:	b	1e314 <argp_parse@@Base+0x2a2c>
   1e718:	add	r7, r6, #1
   1e71c:	b	1e740 <argp_parse@@Base+0x2e58>
   1e720:	bl	118c4 <__ctype_b_loc@plt>
   1e724:	ldrb	r3, [r7]
   1e728:	add	r7, r7, #1
   1e72c:	ldr	r1, [r0]
   1e730:	lsl	r3, r3, #1
   1e734:	ldrh	r3, [r1, r3]
   1e738:	tst	r3, #1
   1e73c:	bne	1e628 <argp_parse@@Base+0x2d40>
   1e740:	cmp	fp, r7
   1e744:	mov	r6, r7
   1e748:	bne	1e720 <argp_parse@@Base+0x2e38>
   1e74c:	b	1e618 <argp_parse@@Base+0x2d30>
   1e750:	add	r1, r9, r6
   1e754:	sub	r7, r7, r1
   1e758:	str	r1, [r5, #20]
   1e75c:	add	r8, r8, r7
   1e760:	ldr	r3, [r5, #24]
   1e764:	str	r8, [r5, #28]
   1e768:	b	1e578 <argp_parse@@Base+0x2c90>
   1e76c:	sub	r8, r8, r7
   1e770:	mov	r1, r7
   1e774:	mov	r2, r8
   1e778:	add	r0, r6, sl
   1e77c:	bl	116c0 <memmove@plt>
   1e780:	ldr	r3, [r5, #12]
   1e784:	mov	r2, r6
   1e788:	mov	r1, #10
   1e78c:	mov	fp, r4
   1e790:	strb	r1, [r2], #1
   1e794:	add	r7, r3, #1
   1e798:	add	r7, r6, r7
   1e79c:	add	r9, r7, r8
   1e7a0:	sub	r8, r7, r4
   1e7a4:	sub	r9, r9, r4
   1e7a8:	mov	r4, r2
   1e7ac:	b	1e4fc <argp_parse@@Base+0x2c14>
   1e7b0:	mov	r0, r3
   1e7b4:	mov	r1, #10
   1e7b8:	bl	119c0 <__overflow@plt>
   1e7bc:	b	1e4e4 <argp_parse@@Base+0x2bfc>
   1e7c0:	str	r1, [r5, #20]
   1e7c4:	ldr	r3, [r5, #24]
   1e7c8:	ldr	r8, [r5, #28]
   1e7cc:	b	1e578 <argp_parse@@Base+0x2c90>
   1e7d0:	str	r4, [sp, #-8]!
   1e7d4:	mov	r4, r0
   1e7d8:	str	lr, [sp, #4]
   1e7dc:	bl	1e270 <argp_parse@@Base+0x2988>
   1e7e0:	ldr	r0, [r4, #24]
   1e7e4:	ldr	r2, [r4, #28]
   1e7e8:	cmp	r2, r0
   1e7ec:	bls	1e804 <argp_parse@@Base+0x2f1c>
   1e7f0:	sub	r2, r2, r0
   1e7f4:	mov	r1, #1
   1e7f8:	ldr	r3, [r4]
   1e7fc:	bl	11738 <fwrite_unlocked@plt>
   1e800:	ldr	r0, [r4, #24]
   1e804:	bl	1cb08 <argp_parse@@Base+0x1220>
   1e808:	mov	r0, r4
   1e80c:	ldr	r4, [sp]
   1e810:	ldr	lr, [sp, #4]
   1e814:	add	sp, sp, #8
   1e818:	b	1cb08 <argp_parse@@Base+0x1220>
   1e81c:	strd	r4, [sp, #-16]!
   1e820:	mov	r4, r0
   1e824:	mov	r5, r1
   1e828:	str	r6, [sp, #8]
   1e82c:	str	lr, [sp, #12]
   1e830:	bl	1e270 <argp_parse@@Base+0x2988>
   1e834:	mov	r1, #1
   1e838:	ldr	r3, [r4]
   1e83c:	ldr	r2, [r4, #24]
   1e840:	ldr	ip, [r4, #28]
   1e844:	mov	r0, r2
   1e848:	sub	r2, ip, r2
   1e84c:	bl	11738 <fwrite_unlocked@plt>
   1e850:	mov	ip, r0
   1e854:	ldr	r0, [r4, #24]
   1e858:	ldr	r3, [r4, #28]
   1e85c:	sub	r2, r3, r0
   1e860:	cmp	ip, r2
   1e864:	bne	1e8c4 <argp_parse@@Base+0x2fdc>
   1e868:	ldr	r1, [r4, #32]
   1e86c:	mov	r3, #0
   1e870:	str	r3, [r4, #16]
   1e874:	str	r0, [r4, #28]
   1e878:	sub	r1, r1, r0
   1e87c:	cmp	r1, r5
   1e880:	movcs	r3, #1
   1e884:	bcs	1e8b0 <argp_parse@@Base+0x2fc8>
   1e888:	adds	r5, r1, r5
   1e88c:	bcs	1e8ec <argp_parse@@Base+0x3004>
   1e890:	mov	r1, r5
   1e894:	bl	1e180 <argp_parse@@Base+0x2898>
   1e898:	cmp	r0, #0
   1e89c:	beq	1e8ec <argp_parse@@Base+0x3004>
   1e8a0:	add	r1, r0, r5
   1e8a4:	mov	r3, #1
   1e8a8:	str	r0, [r4, #24]
   1e8ac:	strd	r0, [r4, #28]
   1e8b0:	ldrd	r4, [sp]
   1e8b4:	mov	r0, r3
   1e8b8:	ldr	r6, [sp, #8]
   1e8bc:	add	sp, sp, #12
   1e8c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1e8c4:	ldr	lr, [r4, #16]
   1e8c8:	sub	r3, r3, ip
   1e8cc:	add	r1, r0, ip
   1e8d0:	sub	r2, r3, r0
   1e8d4:	str	r3, [r4, #28]
   1e8d8:	sub	ip, lr, ip
   1e8dc:	str	ip, [r4, #16]
   1e8e0:	bl	116c0 <memmove@plt>
   1e8e4:	mov	r3, #0
   1e8e8:	b	1e8b0 <argp_parse@@Base+0x2fc8>
   1e8ec:	bl	11918 <__errno_location@plt>
   1e8f0:	mov	r2, #12
   1e8f4:	mov	r3, #0
   1e8f8:	str	r2, [r0]
   1e8fc:	b	1e8b0 <argp_parse@@Base+0x2fc8>
   1e900:	ldr	ip, [r0, #28]
   1e904:	ldr	r3, [r0, #32]
   1e908:	sub	r3, r3, ip
   1e90c:	cmp	r3, r1
   1e910:	bcc	1e91c <argp_parse@@Base+0x3034>
   1e914:	mov	r0, #1
   1e918:	bx	lr
   1e91c:	b	1e81c <argp_parse@@Base+0x2f34>
   1e920:	push	{r1, r2, r3}
   1e924:	mov	r1, #150	; 0x96
   1e928:	strd	r4, [sp, #-20]!	; 0xffffffec
   1e92c:	mov	r5, r0
   1e930:	strd	r6, [sp, #8]
   1e934:	str	lr, [sp, #16]
   1e938:	sub	sp, sp, #8
   1e93c:	ldr	r7, [sp, #28]
   1e940:	add	r6, sp, #32
   1e944:	ldr	r0, [r5, #28]
   1e948:	ldr	r3, [r5, #32]
   1e94c:	sub	r2, r3, r0
   1e950:	cmp	r1, r2
   1e954:	bhi	1e9a4 <argp_parse@@Base+0x30bc>
   1e958:	sub	r4, r3, r0
   1e95c:	mov	r2, r7
   1e960:	str	r6, [sp, #4]
   1e964:	mov	r1, r4
   1e968:	mov	r3, r6
   1e96c:	bl	11a2c <vsnprintf@plt>
   1e970:	cmp	r0, r4
   1e974:	add	r1, r0, #1
   1e978:	bcs	1e944 <argp_parse@@Base+0x305c>
   1e97c:	ldr	r3, [r5, #28]
   1e980:	add	r3, r3, r0
   1e984:	str	r3, [r5, #28]
   1e988:	add	sp, sp, #8
   1e98c:	ldrd	r4, [sp]
   1e990:	ldrd	r6, [sp, #8]
   1e994:	ldr	lr, [sp, #16]
   1e998:	add	sp, sp, #20
   1e99c:	add	sp, sp, #12
   1e9a0:	bx	lr
   1e9a4:	mov	r0, r5
   1e9a8:	bl	1e81c <argp_parse@@Base+0x2f34>
   1e9ac:	cmp	r0, #0
   1e9b0:	beq	1e9c0 <argp_parse@@Base+0x30d8>
   1e9b4:	ldr	r0, [r5, #28]
   1e9b8:	ldr	r3, [r5, #32]
   1e9bc:	b	1e958 <argp_parse@@Base+0x3070>
   1e9c0:	mvn	r0, #0
   1e9c4:	b	1e988 <argp_parse@@Base+0x30a0>
   1e9c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1e9cc:	ldr	r2, [r1]
   1e9d0:	ldr	ip, [r1, #32]
   1e9d4:	strd	r6, [sp, #8]
   1e9d8:	strd	r8, [sp, #16]
   1e9dc:	strd	sl, [sp, #24]
   1e9e0:	str	lr, [sp, #32]
   1e9e4:	sub	sp, sp, #36	; 0x24
   1e9e8:	str	r2, [sp, #24]
   1e9ec:	str	r1, [sp, #28]
   1e9f0:	ldr	r1, [r1, #28]
   1e9f4:	cmp	r1, ip
   1e9f8:	cmplt	ip, r2
   1e9fc:	str	r1, [sp, #20]
   1ea00:	bge	1eb00 <argp_parse@@Base+0x3218>
   1ea04:	mov	r3, r1
   1ea08:	lsl	r1, ip, #2
   1ea0c:	mov	lr, r2
   1ea10:	mov	r2, r1
   1ea14:	add	r2, r2, #8
   1ea18:	str	r1, [sp, #8]
   1ea1c:	add	r1, r0, r1
   1ea20:	str	r1, [sp, #4]
   1ea24:	str	r2, [sp, #12]
   1ea28:	sub	r2, r1, #8
   1ea2c:	str	r2, [sp, #16]
   1ea30:	sub	r1, lr, ip
   1ea34:	sub	r8, ip, r3
   1ea38:	cmp	r1, r8
   1ea3c:	ble	1eb38 <argp_parse@@Base+0x3250>
   1ea40:	lsl	r2, r3, #2
   1ea44:	sub	lr, lr, r8
   1ea48:	sub	r5, r8, #1
   1ea4c:	add	r1, lr, #2
   1ea50:	lsl	r6, lr, #2
   1ea54:	cmp	r2, r1, lsl #2
   1ea58:	add	r7, r2, #8
   1ea5c:	add	r2, r0, r2
   1ea60:	add	r1, r0, r6
   1ea64:	movge	r4, #1
   1ea68:	movlt	r4, #0
   1ea6c:	cmp	r6, r7
   1ea70:	orrge	r4, r4, #1
   1ea74:	orr	r9, r1, r2
   1ea78:	cmp	r5, #3
   1ea7c:	movls	r4, #0
   1ea80:	andhi	r4, r4, #1
   1ea84:	tst	r9, #7
   1ea88:	movne	r4, #0
   1ea8c:	cmp	r4, #0
   1ea90:	beq	1ec0c <argp_parse@@Base+0x3324>
   1ea94:	lsr	fp, r8, #1
   1ea98:	sub	r2, r2, #8
   1ea9c:	sub	sl, r1, #8
   1eaa0:	mov	r9, r2
   1eaa4:	add	fp, r1, fp, lsl #3
   1eaa8:	ldrd	r4, [r2, #8]!
   1eaac:	ldrd	r6, [sl, #8]!
   1eab0:	strd	r6, [r9, #8]!
   1eab4:	strd	r4, [r1], #8
   1eab8:	cmp	r1, fp
   1eabc:	bne	1eaa8 <argp_parse@@Base+0x31c0>
   1eac0:	bic	r2, r8, #1
   1eac4:	cmp	r8, r2
   1eac8:	beq	1eae4 <argp_parse@@Base+0x31fc>
   1eacc:	add	r1, r3, r2
   1ead0:	add	r2, lr, r2
   1ead4:	ldr	r4, [r0, r1, lsl #2]
   1ead8:	ldr	r5, [r0, r2, lsl #2]
   1eadc:	str	r5, [r0, r1, lsl #2]
   1eae0:	str	r4, [r0, r2, lsl #2]
   1eae4:	cmp	lr, ip
   1eae8:	movle	r2, #0
   1eaec:	movgt	r2, #1
   1eaf0:	cmp	r3, ip
   1eaf4:	movge	r2, #0
   1eaf8:	cmp	r2, #0
   1eafc:	bne	1ea30 <argp_parse@@Base+0x3148>
   1eb00:	ldr	r3, [sp, #24]
   1eb04:	ldr	r2, [sp, #28]
   1eb08:	sub	ip, r3, ip
   1eb0c:	str	r3, [r2, #32]
   1eb10:	ldr	r3, [sp, #20]
   1eb14:	add	ip, ip, r3
   1eb18:	str	ip, [r2, #28]
   1eb1c:	add	sp, sp, #36	; 0x24
   1eb20:	ldrd	r4, [sp]
   1eb24:	ldrd	r6, [sp, #8]
   1eb28:	ldrd	r8, [sp, #16]
   1eb2c:	ldrd	sl, [sp, #24]
   1eb30:	add	sp, sp, #32
   1eb34:	pop	{pc}		; (ldr pc, [sp], #4)
   1eb38:	ldr	r4, [sp, #8]
   1eb3c:	lsl	r5, r3, #2
   1eb40:	sub	r7, r1, #1
   1eb44:	ldr	r8, [sp, #12]
   1eb48:	mov	r6, r5
   1eb4c:	add	r5, r5, #8
   1eb50:	add	r2, r0, r6
   1eb54:	cmp	r8, r6
   1eb58:	cmpgt	r5, r4
   1eb5c:	ldr	r8, [sp, #4]
   1eb60:	movle	r5, #1
   1eb64:	movgt	r5, #0
   1eb68:	cmp	r7, #3
   1eb6c:	movls	r4, #0
   1eb70:	andhi	r4, r5, #1
   1eb74:	orr	r6, r2, r8
   1eb78:	tst	r6, #7
   1eb7c:	movne	r4, #0
   1eb80:	cmp	r4, #0
   1eb84:	beq	1ebe4 <argp_parse@@Base+0x32fc>
   1eb88:	lsr	fp, r1, #1
   1eb8c:	ldr	sl, [sp, #16]
   1eb90:	sub	r2, r2, #8
   1eb94:	mov	r9, r2
   1eb98:	add	fp, r8, fp, lsl #3
   1eb9c:	ldrd	r4, [r2, #8]!
   1eba0:	ldrd	r6, [sl, #8]!
   1eba4:	strd	r6, [r9, #8]!
   1eba8:	strd	r4, [r8], #8
   1ebac:	cmp	r8, fp
   1ebb0:	bne	1eb9c <argp_parse@@Base+0x32b4>
   1ebb4:	bic	r2, r1, #1
   1ebb8:	cmp	r1, r2
   1ebbc:	addeq	r3, r1, r3
   1ebc0:	beq	1eae4 <argp_parse@@Base+0x31fc>
   1ebc4:	add	r4, r3, r2
   1ebc8:	add	r2, ip, r2
   1ebcc:	ldr	r5, [r0, r4, lsl #2]
   1ebd0:	add	r3, r1, r3
   1ebd4:	ldr	r6, [r0, r2, lsl #2]
   1ebd8:	str	r6, [r0, r4, lsl #2]
   1ebdc:	str	r5, [r0, r2, lsl #2]
   1ebe0:	b	1eae4 <argp_parse@@Base+0x31fc>
   1ebe4:	add	r3, r1, r3
   1ebe8:	ldr	r1, [sp, #4]
   1ebec:	add	r6, r0, r3, lsl #2
   1ebf0:	ldr	r5, [r1]
   1ebf4:	ldr	r4, [r2]
   1ebf8:	str	r5, [r2], #4
   1ebfc:	cmp	r2, r6
   1ec00:	str	r4, [r1], #4
   1ec04:	bne	1ebf0 <argp_parse@@Base+0x3308>
   1ec08:	b	1eae4 <argp_parse@@Base+0x31fc>
   1ec0c:	add	r8, r3, r8
   1ec10:	add	r8, r0, r8, lsl #2
   1ec14:	ldr	r5, [r1]
   1ec18:	ldr	r4, [r2]
   1ec1c:	str	r5, [r2], #4
   1ec20:	cmp	r8, r2
   1ec24:	str	r4, [r1], #4
   1ec28:	bne	1ec14 <argp_parse@@Base+0x332c>
   1ec2c:	b	1eae4 <argp_parse@@Base+0x31fc>
   1ec30:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1ec34:	strd	r6, [sp, #8]
   1ec38:	strd	r8, [sp, #16]
   1ec3c:	strd	sl, [sp, #24]
   1ec40:	str	lr, [sp, #32]
   1ec44:	sub	sp, sp, #52	; 0x34
   1ec48:	str	r3, [sp, #8]
   1ec4c:	ldr	r3, [sp, #96]	; 0x60
   1ec50:	str	r1, [sp, #20]
   1ec54:	str	r2, [sp, #28]
   1ec58:	str	r0, [sp, #32]
   1ec5c:	ldr	r9, [r3, #20]
   1ec60:	ldrb	r5, [r9]
   1ec64:	mov	r8, r9
   1ec68:	str	r9, [sp, #24]
   1ec6c:	cmp	r5, #61	; 0x3d
   1ec70:	cmpne	r5, #0
   1ec74:	movne	r5, #1
   1ec78:	moveq	r5, #0
   1ec7c:	beq	1ec94 <argp_parse@@Base+0x33ac>
   1ec80:	ldrb	r3, [r8, #1]!
   1ec84:	cmp	r3, #0
   1ec88:	cmpne	r3, #61	; 0x3d
   1ec8c:	bne	1ec80 <argp_parse@@Base+0x3398>
   1ec90:	sub	r5, r8, r9
   1ec94:	ldr	r3, [sp, #8]
   1ec98:	ldr	r3, [r3]
   1ec9c:	cmp	r3, #0
   1eca0:	str	r3, [sp, #12]
   1eca4:	beq	1ee98 <argp_parse@@Base+0x35b0>
   1eca8:	ldr	fp, [sp, #8]
   1ecac:	mov	r4, r3
   1ecb0:	mov	r6, #0
   1ecb4:	str	fp, [sp, #16]
   1ecb8:	b	1ecc0 <argp_parse@@Base+0x33d8>
   1ecbc:	mov	r6, r7
   1ecc0:	mov	r2, r5
   1ecc4:	mov	r1, r9
   1ecc8:	mov	r0, r4
   1eccc:	add	r7, r6, #1
   1ecd0:	bl	11aa4 <strncmp@plt>
   1ecd4:	cmp	r0, #0
   1ecd8:	mov	sl, fp
   1ecdc:	mov	r0, r4
   1ece0:	bne	1ecf0 <argp_parse@@Base+0x3408>
   1ece4:	bl	118e8 <strlen@plt>
   1ece8:	cmp	r0, r5
   1ecec:	beq	1ee10 <argp_parse@@Base+0x3528>
   1ecf0:	ldr	r4, [fp, #16]!
   1ecf4:	cmp	r4, #0
   1ecf8:	bne	1ecbc <argp_parse@@Base+0x33d4>
   1ecfc:	ldr	r3, [sp, #100]	; 0x64
   1ed00:	cmp	r3, #0
   1ed04:	ldr	r3, [sp, #92]	; 0x5c
   1ed08:	beq	1eda4 <argp_parse@@Base+0x34bc>
   1ed0c:	cmp	r3, #0
   1ed10:	bne	1ef10 <argp_parse@@Base+0x3628>
   1ed14:	ldr	r0, [sp, #12]
   1ed18:	mov	r9, r3
   1ed1c:	mov	sl, r3
   1ed20:	mov	fp, #1
   1ed24:	str	r3, [sp, #40]	; 0x28
   1ed28:	ldr	r1, [sp, #24]
   1ed2c:	str	r7, [sp, #24]
   1ed30:	mov	r7, r5
   1ed34:	ldr	r5, [sp, #16]
   1ed38:	str	r6, [sp, #16]
   1ed3c:	ldr	r6, [sp, #96]	; 0x60
   1ed40:	str	r3, [sp, #44]	; 0x2c
   1ed44:	mvn	r3, #0
   1ed48:	str	r3, [sp, #36]	; 0x24
   1ed4c:	mov	r2, r7
   1ed50:	bl	11aa4 <strncmp@plt>
   1ed54:	cmp	r0, #0
   1ed58:	bne	1ed8c <argp_parse@@Base+0x34a4>
   1ed5c:	cmp	sl, #0
   1ed60:	beq	1f0f4 <argp_parse@@Base+0x380c>
   1ed64:	ldr	r2, [r5, #4]
   1ed68:	ldr	r1, [sl, #4]
   1ed6c:	cmp	r1, r2
   1ed70:	beq	1f214 <argp_parse@@Base+0x392c>
   1ed74:	ldr	r3, [sp, #40]	; 0x28
   1ed78:	cmp	r3, #0
   1ed7c:	bne	1ed8c <argp_parse@@Base+0x34a4>
   1ed80:	cmp	r4, #0
   1ed84:	beq	1f18c <argp_parse@@Base+0x38a4>
   1ed88:	strb	fp, [r4, r9]
   1ed8c:	ldr	r0, [r5, #16]!
   1ed90:	add	r9, r9, #1
   1ed94:	cmp	r0, #0
   1ed98:	beq	1f024 <argp_parse@@Base+0x373c>
   1ed9c:	ldr	r1, [r6, #20]
   1eda0:	b	1ed4c <argp_parse@@Base+0x3464>
   1eda4:	cmp	r3, #0
   1eda8:	beq	1ef88 <argp_parse@@Base+0x36a0>
   1edac:	ldr	r0, [sp, #12]
   1edb0:	mvn	r3, #0
   1edb4:	ldr	r6, [sp, #100]	; 0x64
   1edb8:	str	r3, [sp, #36]	; 0x24
   1edbc:	ldr	sl, [sp, #16]
   1edc0:	mov	r7, r6
   1edc4:	mov	r2, r5
   1edc8:	mov	r1, r9
   1edcc:	bl	11aa4 <strncmp@plt>
   1edd0:	cmp	r0, #0
   1edd4:	bne	1ede8 <argp_parse@@Base+0x3500>
   1edd8:	cmp	r4, #0
   1eddc:	moveq	r4, sl
   1ede0:	movne	r6, #1
   1ede4:	streq	r7, [sp, #36]	; 0x24
   1ede8:	ldr	r0, [sl, #16]!
   1edec:	add	r7, r7, #1
   1edf0:	cmp	r0, #0
   1edf4:	bne	1edc4 <argp_parse@@Base+0x34dc>
   1edf8:	cmp	r6, #0
   1edfc:	moveq	sl, r4
   1ee00:	bne	1f08c <argp_parse@@Base+0x37a4>
   1ee04:	cmp	sl, #0
   1ee08:	ldrne	r6, [sp, #36]	; 0x24
   1ee0c:	beq	1ee98 <argp_parse@@Base+0x35b0>
   1ee10:	ldr	r3, [sp, #96]	; 0x60
   1ee14:	mov	r2, #0
   1ee18:	ldr	r1, [sp, #96]	; 0x60
   1ee1c:	ldr	r0, [sl, #4]
   1ee20:	ldr	r3, [r3]
   1ee24:	str	r2, [r1, #20]
   1ee28:	add	r2, r3, #1
   1ee2c:	str	r2, [r1]
   1ee30:	ldrb	r1, [r8]
   1ee34:	cmp	r1, #0
   1ee38:	bne	1ee80 <argp_parse@@Base+0x3598>
   1ee3c:	cmp	r0, #1
   1ee40:	beq	1f0c0 <argp_parse@@Base+0x37d8>
   1ee44:	ldr	r3, [sp, #88]	; 0x58
   1ee48:	cmp	r3, #0
   1ee4c:	strne	r6, [r3]
   1ee50:	ldr	r3, [sl, #8]
   1ee54:	ldr	r0, [sl, #12]
   1ee58:	cmp	r3, #0
   1ee5c:	strne	r0, [r3]
   1ee60:	movne	r0, #0
   1ee64:	add	sp, sp, #52	; 0x34
   1ee68:	ldrd	r4, [sp]
   1ee6c:	ldrd	r6, [sp, #8]
   1ee70:	ldrd	r8, [sp, #16]
   1ee74:	ldrd	sl, [sp, #24]
   1ee78:	add	sp, sp, #32
   1ee7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ee80:	cmp	r0, #0
   1ee84:	beq	1f100 <argp_parse@@Base+0x3818>
   1ee88:	ldr	r3, [sp, #96]	; 0x60
   1ee8c:	add	r8, r8, #1
   1ee90:	str	r8, [r3, #12]
   1ee94:	b	1ee44 <argp_parse@@Base+0x355c>
   1ee98:	ldr	r3, [sp, #92]	; 0x5c
   1ee9c:	cmp	r3, #0
   1eea0:	beq	1eedc <argp_parse@@Base+0x35f4>
   1eea4:	ldr	r2, [sp, #20]
   1eea8:	ldr	r3, [sp, #96]	; 0x60
   1eeac:	ldr	r3, [r3]
   1eeb0:	ldr	r3, [r2, r3, lsl #2]
   1eeb4:	ldrb	r3, [r3, #1]
   1eeb8:	cmp	r3, #45	; 0x2d
   1eebc:	beq	1eedc <argp_parse@@Base+0x35f4>
   1eec0:	ldr	r0, [sp, #28]
   1eec4:	ldr	r3, [sp, #96]	; 0x60
   1eec8:	ldr	r3, [r3, #20]
   1eecc:	ldrb	r1, [r3]
   1eed0:	bl	11900 <strchr@plt>
   1eed4:	cmp	r0, #0
   1eed8:	bne	1f150 <argp_parse@@Base+0x3868>
   1eedc:	ldr	r3, [sp, #100]	; 0x64
   1eee0:	cmp	r3, #0
   1eee4:	bne	1eff0 <argp_parse@@Base+0x3708>
   1eee8:	ldr	r3, [sp, #96]	; 0x60
   1eeec:	mov	r2, #0
   1eef0:	mov	r0, #63	; 0x3f
   1eef4:	ldr	r1, [sp, #96]	; 0x60
   1eef8:	ldr	r3, [r3]
   1eefc:	str	r2, [r1, #8]
   1ef00:	str	r2, [r1, #20]
   1ef04:	add	r3, r3, #1
   1ef08:	str	r3, [r1]
   1ef0c:	b	1ee64 <argp_parse@@Base+0x357c>
   1ef10:	ldr	r0, [sp, #12]
   1ef14:	mvn	r3, #0
   1ef18:	mov	sl, r4
   1ef1c:	mov	r9, r4
   1ef20:	ldr	fp, [sp, #16]
   1ef24:	str	r3, [sp, #36]	; 0x24
   1ef28:	ldr	r1, [sp, #24]
   1ef2c:	str	r7, [sp, #24]
   1ef30:	ldr	r7, [sp, #96]	; 0x60
   1ef34:	str	r4, [sp, #40]	; 0x28
   1ef38:	str	r4, [sp, #44]	; 0x2c
   1ef3c:	mov	r2, r5
   1ef40:	bl	11aa4 <strncmp@plt>
   1ef44:	cmp	r0, #0
   1ef48:	bne	1ef70 <argp_parse@@Base+0x3688>
   1ef4c:	cmp	sl, #0
   1ef50:	beq	1f0e8 <argp_parse@@Base+0x3800>
   1ef54:	ldr	r3, [sp, #40]	; 0x28
   1ef58:	cmp	r3, #0
   1ef5c:	bne	1ef70 <argp_parse@@Base+0x3688>
   1ef60:	cmp	r4, #0
   1ef64:	beq	1f158 <argp_parse@@Base+0x3870>
   1ef68:	mov	r3, #1
   1ef6c:	strb	r3, [r4, r9]
   1ef70:	ldr	r0, [fp, #16]!
   1ef74:	add	r9, r9, #1
   1ef78:	cmp	r0, #0
   1ef7c:	beq	1f028 <argp_parse@@Base+0x3740>
   1ef80:	ldr	r1, [r7, #20]
   1ef84:	b	1ef3c <argp_parse@@Base+0x3654>
   1ef88:	mov	r6, r3
   1ef8c:	mov	r7, r3
   1ef90:	ldr	r0, [sp, #12]
   1ef94:	mvn	r3, #0
   1ef98:	ldr	sl, [sp, #16]
   1ef9c:	str	r3, [sp, #36]	; 0x24
   1efa0:	b	1efc8 <argp_parse@@Base+0x36e0>
   1efa4:	ldr	r2, [r4, #4]
   1efa8:	ldr	r3, [sl, #4]
   1efac:	cmp	r2, r3
   1efb0:	beq	1f1f0 <argp_parse@@Base+0x3908>
   1efb4:	mov	r6, #1
   1efb8:	ldr	r0, [sl, #16]!
   1efbc:	add	r7, r7, #1
   1efc0:	cmp	r0, #0
   1efc4:	beq	1edf8 <argp_parse@@Base+0x3510>
   1efc8:	mov	r2, r5
   1efcc:	mov	r1, r9
   1efd0:	bl	11aa4 <strncmp@plt>
   1efd4:	cmp	r0, #0
   1efd8:	bne	1efb8 <argp_parse@@Base+0x36d0>
   1efdc:	cmp	r4, #0
   1efe0:	bne	1efa4 <argp_parse@@Base+0x36bc>
   1efe4:	mov	r4, sl
   1efe8:	str	r7, [sp, #36]	; 0x24
   1efec:	b	1efb8 <argp_parse@@Base+0x36d0>
   1eff0:	ldr	r3, [sp, #96]	; 0x60
   1eff4:	movw	r0, #9664	; 0x25c0
   1eff8:	movt	r0, #3
   1effc:	movw	r1, #6392	; 0x18f8
   1f000:	movt	r1, #2
   1f004:	ldr	r0, [r0]
   1f008:	ldr	ip, [r3, #20]
   1f00c:	ldr	r3, [sp, #20]
   1f010:	ldr	r2, [r3]
   1f014:	str	ip, [sp]
   1f018:	ldr	r3, [sp, #104]	; 0x68
   1f01c:	bl	1190c <fprintf@plt>
   1f020:	b	1eee8 <argp_parse@@Base+0x3600>
   1f024:	ldr	r6, [sp, #16]
   1f028:	ldr	r3, [sp, #40]	; 0x28
   1f02c:	orrs	r3, r4, r3
   1f030:	beq	1ee04 <argp_parse@@Base+0x351c>
   1f034:	ldr	r3, [sp, #40]	; 0x28
   1f038:	movw	r5, #9664	; 0x25c0
   1f03c:	movt	r5, #3
   1f040:	ldr	r0, [r5]
   1f044:	cmp	r3, #0
   1f048:	beq	1f238 <argp_parse@@Base+0x3950>
   1f04c:	ldr	r2, [sp, #20]
   1f050:	movw	r1, #6304	; 0x18a0
   1f054:	movt	r1, #2
   1f058:	ldr	r3, [sp, #96]	; 0x60
   1f05c:	ldr	r2, [r2]
   1f060:	ldr	ip, [r3, #20]
   1f064:	ldr	r3, [sp, #104]	; 0x68
   1f068:	str	ip, [sp]
   1f06c:	bl	1190c <fprintf@plt>
   1f070:	ldr	r3, [sp, #44]	; 0x2c
   1f074:	cmp	r3, #0
   1f078:	beq	1f084 <argp_parse@@Base+0x379c>
   1f07c:	mov	r0, r4
   1f080:	bl	1cb08 <argp_parse@@Base+0x1220>
   1f084:	ldr	r3, [sp, #96]	; 0x60
   1f088:	ldr	r9, [r3, #20]
   1f08c:	mov	r0, r9
   1f090:	bl	118e8 <strlen@plt>
   1f094:	ldr	r3, [sp, #96]	; 0x60
   1f098:	add	r9, r9, r0
   1f09c:	mov	r2, #0
   1f0a0:	mov	r0, #63	; 0x3f
   1f0a4:	ldr	r1, [sp, #96]	; 0x60
   1f0a8:	ldr	r3, [r3]
   1f0ac:	str	r2, [r1, #8]
   1f0b0:	str	r9, [r1, #20]
   1f0b4:	add	r3, r3, #1
   1f0b8:	str	r3, [r1]
   1f0bc:	b	1ee64 <argp_parse@@Base+0x357c>
   1f0c0:	ldr	r1, [sp, #32]
   1f0c4:	cmp	r2, r1
   1f0c8:	bge	1f1c0 <argp_parse@@Base+0x38d8>
   1f0cc:	ldr	r1, [sp, #20]
   1f0d0:	add	r3, r3, #2
   1f0d4:	ldr	r2, [r1, r2, lsl #2]
   1f0d8:	ldr	r1, [sp, #96]	; 0x60
   1f0dc:	str	r3, [r1]
   1f0e0:	str	r2, [r1, #12]
   1f0e4:	b	1ee44 <argp_parse@@Base+0x355c>
   1f0e8:	mov	sl, fp
   1f0ec:	str	r9, [sp, #36]	; 0x24
   1f0f0:	b	1ef70 <argp_parse@@Base+0x3688>
   1f0f4:	mov	sl, r5
   1f0f8:	str	r9, [sp, #36]	; 0x24
   1f0fc:	b	1ed8c <argp_parse@@Base+0x34a4>
   1f100:	ldr	r3, [sp, #100]	; 0x64
   1f104:	cmp	r3, #0
   1f108:	bne	1f120 <argp_parse@@Base+0x3838>
   1f10c:	ldr	r3, [sl, #12]
   1f110:	mov	r0, #63	; 0x3f
   1f114:	ldr	r2, [sp, #96]	; 0x60
   1f118:	str	r3, [r2, #8]
   1f11c:	b	1ee64 <argp_parse@@Base+0x357c>
   1f120:	ldr	ip, [sl]
   1f124:	movw	r0, #9664	; 0x25c0
   1f128:	movt	r0, #3
   1f12c:	movw	r1, #6424	; 0x1918
   1f130:	movt	r1, #2
   1f134:	ldr	r3, [sp, #20]
   1f138:	ldr	r0, [r0]
   1f13c:	ldr	r2, [r3]
   1f140:	str	ip, [sp]
   1f144:	ldr	r3, [sp, #104]	; 0x68
   1f148:	bl	1190c <fprintf@plt>
   1f14c:	b	1f10c <argp_parse@@Base+0x3824>
   1f150:	mvn	r0, #0
   1f154:	b	1ee64 <argp_parse@@Base+0x357c>
   1f158:	ldr	r0, [sp, #24]
   1f15c:	bl	1e144 <argp_parse@@Base+0x285c>
   1f160:	subs	r4, r0, #0
   1f164:	beq	1f2fc <argp_parse@@Base+0x3a14>
   1f168:	ldr	r2, [sp, #24]
   1f16c:	ldr	r1, [sp, #40]	; 0x28
   1f170:	bl	11954 <memset@plt>
   1f174:	mov	r3, #1
   1f178:	mov	r2, #1
   1f17c:	str	r3, [sp, #44]	; 0x2c
   1f180:	ldr	r3, [sp, #36]	; 0x24
   1f184:	strb	r2, [r4, r3]
   1f188:	b	1ef68 <argp_parse@@Base+0x3680>
   1f18c:	ldr	r0, [sp, #24]
   1f190:	bl	1e144 <argp_parse@@Base+0x285c>
   1f194:	subs	r4, r0, #0
   1f198:	mov	r3, #1
   1f19c:	streq	r3, [sp, #40]	; 0x28
   1f1a0:	beq	1ed8c <argp_parse@@Base+0x34a4>
   1f1a4:	ldr	r2, [sp, #24]
   1f1a8:	str	r3, [sp, #44]	; 0x2c
   1f1ac:	ldr	r1, [sp, #40]	; 0x28
   1f1b0:	bl	11954 <memset@plt>
   1f1b4:	ldr	r3, [sp, #36]	; 0x24
   1f1b8:	strb	fp, [r4, r3]
   1f1bc:	b	1ed88 <argp_parse@@Base+0x34a0>
   1f1c0:	ldr	r3, [sp, #100]	; 0x64
   1f1c4:	cmp	r3, #0
   1f1c8:	bne	1f2cc <argp_parse@@Base+0x39e4>
   1f1cc:	ldr	r3, [sl, #12]
   1f1d0:	ldr	r2, [sp, #96]	; 0x60
   1f1d4:	str	r3, [r2, #8]
   1f1d8:	ldr	r3, [sp, #28]
   1f1dc:	ldrb	r3, [r3]
   1f1e0:	cmp	r3, #58	; 0x3a
   1f1e4:	moveq	r0, #58	; 0x3a
   1f1e8:	movne	r0, #63	; 0x3f
   1f1ec:	b	1ee64 <argp_parse@@Base+0x357c>
   1f1f0:	ldr	r2, [r4, #8]
   1f1f4:	ldr	r3, [sl, #8]
   1f1f8:	cmp	r2, r3
   1f1fc:	bne	1efb4 <argp_parse@@Base+0x36cc>
   1f200:	ldr	r2, [r4, #12]
   1f204:	ldr	r3, [sl, #12]
   1f208:	cmp	r2, r3
   1f20c:	movne	r6, #1
   1f210:	b	1efb8 <argp_parse@@Base+0x36d0>
   1f214:	ldr	r2, [r5, #8]
   1f218:	ldr	r1, [sl, #8]
   1f21c:	cmp	r1, r2
   1f220:	bne	1ed74 <argp_parse@@Base+0x348c>
   1f224:	ldr	r2, [r5, #12]
   1f228:	ldr	r1, [sl, #12]
   1f22c:	cmp	r1, r2
   1f230:	bne	1ed74 <argp_parse@@Base+0x348c>
   1f234:	b	1ed8c <argp_parse@@Base+0x34a4>
   1f238:	bl	11a20 <flockfile@plt>
   1f23c:	ldr	r2, [sp, #20]
   1f240:	movw	r1, #6336	; 0x18c0
   1f244:	movt	r1, #2
   1f248:	movw	r7, #6384	; 0x18f0
   1f24c:	movt	r7, #2
   1f250:	ldr	r3, [sp, #96]	; 0x60
   1f254:	add	r6, r4, r6
   1f258:	sub	r8, r4, #1
   1f25c:	ldr	r2, [r2]
   1f260:	ldr	r0, [r3, #20]
   1f264:	ldr	r3, [sp, #104]	; 0x68
   1f268:	str	r0, [sp]
   1f26c:	ldr	r0, [r5]
   1f270:	bl	1190c <fprintf@plt>
   1f274:	ldr	r0, [r5]
   1f278:	ldr	sl, [sp, #8]
   1f27c:	ldr	r9, [sp, #40]	; 0x28
   1f280:	b	1f290 <argp_parse@@Base+0x39a8>
   1f284:	cmp	r6, r8
   1f288:	add	r9, r9, #1
   1f28c:	beq	1f2b4 <argp_parse@@Base+0x39cc>
   1f290:	ldrb	r3, [r8, #1]!
   1f294:	cmp	r3, #0
   1f298:	beq	1f284 <argp_parse@@Base+0x399c>
   1f29c:	mov	r1, r7
   1f2a0:	ldr	r3, [sl, r9, lsl #4]
   1f2a4:	ldr	r2, [sp, #104]	; 0x68
   1f2a8:	bl	1190c <fprintf@plt>
   1f2ac:	ldr	r0, [r5]
   1f2b0:	b	1f284 <argp_parse@@Base+0x399c>
   1f2b4:	mov	r1, r0
   1f2b8:	mov	r0, #10
   1f2bc:	bl	11a08 <fputc@plt>
   1f2c0:	ldr	r0, [r5]
   1f2c4:	bl	117e0 <funlockfile@plt>
   1f2c8:	b	1f070 <argp_parse@@Base+0x3788>
   1f2cc:	ldr	ip, [sl]
   1f2d0:	movw	r0, #9664	; 0x25c0
   1f2d4:	movt	r0, #3
   1f2d8:	movw	r1, #6472	; 0x1948
   1f2dc:	movt	r1, #2
   1f2e0:	ldr	r3, [sp, #20]
   1f2e4:	ldr	r0, [r0]
   1f2e8:	ldr	r2, [r3]
   1f2ec:	str	ip, [sp]
   1f2f0:	ldr	r3, [sp, #104]	; 0x68
   1f2f4:	bl	1190c <fprintf@plt>
   1f2f8:	b	1f1cc <argp_parse@@Base+0x38e4>
   1f2fc:	mov	r3, #1
   1f300:	str	r3, [sp, #40]	; 0x28
   1f304:	b	1ef70 <argp_parse@@Base+0x3688>
   1f308:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f30c:	subs	r5, r0, #0
   1f310:	strd	r6, [sp, #8]
   1f314:	strd	r8, [sp, #16]
   1f318:	strd	sl, [sp, #24]
   1f31c:	str	lr, [sp, #32]
   1f320:	sub	sp, sp, #36	; 0x24
   1f324:	ldr	r4, [sp, #80]	; 0x50
   1f328:	ldr	r7, [r4, #4]
   1f32c:	ble	1f520 <argp_parse@@Base+0x3c38>
   1f330:	mov	r6, r2
   1f334:	mov	sl, r3
   1f338:	ldr	r2, [r4]
   1f33c:	mov	r3, #0
   1f340:	mov	r9, r1
   1f344:	str	r3, [r4, #12]
   1f348:	cmp	r2, r3
   1f34c:	beq	1f5c8 <argp_parse@@Base+0x3ce0>
   1f350:	ldr	r3, [r4, #16]
   1f354:	cmp	r3, #0
   1f358:	bne	1f4ec <argp_parse@@Base+0x3c04>
   1f35c:	mov	r3, #0
   1f360:	str	r3, [r4, #20]
   1f364:	str	r2, [r4, #28]
   1f368:	str	r2, [r4, #32]
   1f36c:	ldrb	r2, [r6]
   1f370:	cmp	r2, #45	; 0x2d
   1f374:	moveq	r2, #2
   1f378:	addeq	r6, r6, #1
   1f37c:	streq	r2, [r4, #24]
   1f380:	beq	1f3a8 <argp_parse@@Base+0x3ac0>
   1f384:	cmp	r2, #43	; 0x2b
   1f388:	addeq	r6, r6, #1
   1f38c:	streq	r3, [r4, #24]
   1f390:	beq	1f3a8 <argp_parse@@Base+0x3ac0>
   1f394:	ldr	r2, [sp, #84]	; 0x54
   1f398:	cmp	r2, #0
   1f39c:	beq	1f6f8 <argp_parse@@Base+0x3e10>
   1f3a0:	mov	r2, #0
   1f3a4:	str	r2, [r4, #24]
   1f3a8:	mov	r2, #1
   1f3ac:	str	r2, [r4, #16]
   1f3b0:	ldrb	r2, [r6]
   1f3b4:	cmp	r2, #58	; 0x3a
   1f3b8:	moveq	r7, #0
   1f3bc:	cmp	r3, #0
   1f3c0:	beq	1f454 <argp_parse@@Base+0x3b6c>
   1f3c4:	ldrb	r2, [r3]
   1f3c8:	cmp	r2, #0
   1f3cc:	beq	1f454 <argp_parse@@Base+0x3b6c>
   1f3d0:	add	fp, r3, #1
   1f3d4:	mov	r0, r6
   1f3d8:	str	r3, [sp, #28]
   1f3dc:	str	fp, [r4, #20]
   1f3e0:	ldrb	r8, [r3]
   1f3e4:	mov	r1, r8
   1f3e8:	str	r8, [sp, #24]
   1f3ec:	bl	11900 <strchr@plt>
   1f3f0:	ldrd	r2, [sp, #24]
   1f3f4:	ldrb	r1, [r3, #1]
   1f3f8:	cmp	r1, #0
   1f3fc:	bne	1f40c <argp_parse@@Base+0x3b24>
   1f400:	ldr	r1, [r4]
   1f404:	add	r1, r1, #1
   1f408:	str	r1, [r4]
   1f40c:	sub	r1, r8, #58	; 0x3a
   1f410:	cmp	r0, #0
   1f414:	cmpne	r1, #1
   1f418:	bls	1f770 <argp_parse@@Base+0x3e88>
   1f41c:	ldrb	ip, [r0]
   1f420:	ldrb	r1, [r0, #1]
   1f424:	cmp	ip, #87	; 0x57
   1f428:	beq	1f678 <argp_parse@@Base+0x3d90>
   1f42c:	cmp	r1, #58	; 0x3a
   1f430:	beq	1f71c <argp_parse@@Base+0x3e34>
   1f434:	mov	r0, r2
   1f438:	add	sp, sp, #36	; 0x24
   1f43c:	ldrd	r4, [sp]
   1f440:	ldrd	r6, [sp, #8]
   1f444:	ldrd	r8, [sp, #16]
   1f448:	ldrd	sl, [sp, #24]
   1f44c:	add	sp, sp, #32
   1f450:	pop	{pc}		; (ldr pc, [sp], #4)
   1f454:	ldr	r8, [r4]
   1f458:	ldr	r2, [r4, #28]
   1f45c:	ldr	r3, [r4, #32]
   1f460:	cmp	r3, r8
   1f464:	ldr	r3, [r4, #24]
   1f468:	strgt	r8, [r4, #32]
   1f46c:	cmp	r8, r2
   1f470:	movlt	r2, r8
   1f474:	strlt	r8, [r4, #28]
   1f478:	cmp	r3, #1
   1f47c:	beq	1f528 <argp_parse@@Base+0x3c40>
   1f480:	cmp	r5, r8
   1f484:	beq	1f508 <argp_parse@@Base+0x3c20>
   1f488:	ldr	r3, [r9, r8, lsl #2]
   1f48c:	movw	fp, #476	; 0x1dc
   1f490:	movt	fp, #2
   1f494:	mov	r1, fp
   1f498:	mov	r0, r3
   1f49c:	str	r3, [sp, #24]
   1f4a0:	bl	11654 <strcmp@plt>
   1f4a4:	cmp	r0, #0
   1f4a8:	ldr	r3, [sp, #24]
   1f4ac:	bne	1f59c <argp_parse@@Base+0x3cb4>
   1f4b0:	ldr	r3, [r4, #28]
   1f4b4:	add	r8, r8, #1
   1f4b8:	ldr	r2, [r4, #32]
   1f4bc:	str	r8, [r4]
   1f4c0:	cmp	r3, r2
   1f4c4:	beq	1f784 <argp_parse@@Base+0x3e9c>
   1f4c8:	cmp	r8, r2
   1f4cc:	beq	1f4e0 <argp_parse@@Base+0x3bf8>
   1f4d0:	mov	r0, r9
   1f4d4:	mov	r1, r4
   1f4d8:	bl	1e9c8 <argp_parse@@Base+0x30e0>
   1f4dc:	ldr	r3, [r4, #28]
   1f4e0:	str	r5, [r4]
   1f4e4:	str	r5, [r4, #32]
   1f4e8:	b	1f510 <argp_parse@@Base+0x3c28>
   1f4ec:	ldrb	r2, [r6]
   1f4f0:	ldr	r3, [r4, #20]
   1f4f4:	sub	r1, r2, #43	; 0x2b
   1f4f8:	tst	r1, #253	; 0xfd
   1f4fc:	ldrbeq	r2, [r6, #1]
   1f500:	addeq	r6, r6, #1
   1f504:	b	1f3b4 <argp_parse@@Base+0x3acc>
   1f508:	ldr	r3, [r4, #28]
   1f50c:	ldr	r5, [r4, #32]
   1f510:	cmp	r5, r3
   1f514:	mvnne	r2, #0
   1f518:	strne	r3, [r4]
   1f51c:	bne	1f434 <argp_parse@@Base+0x3b4c>
   1f520:	mvn	r2, #0
   1f524:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f528:	ldr	r3, [r4, #32]
   1f52c:	cmp	r3, r2
   1f530:	beq	1f75c <argp_parse@@Base+0x3e74>
   1f534:	cmp	r8, r3
   1f538:	beq	1f54c <argp_parse@@Base+0x3c64>
   1f53c:	mov	r1, r4
   1f540:	mov	r0, r9
   1f544:	bl	1e9c8 <argp_parse@@Base+0x30e0>
   1f548:	ldr	r3, [r4]
   1f54c:	cmp	r5, r3
   1f550:	ble	1f588 <argp_parse@@Base+0x3ca0>
   1f554:	add	r1, r9, r3, lsl #2
   1f558:	b	1f56c <argp_parse@@Base+0x3c84>
   1f55c:	add	r3, r3, #1
   1f560:	cmp	r3, r5
   1f564:	str	r3, [r4]
   1f568:	beq	1f588 <argp_parse@@Base+0x3ca0>
   1f56c:	ldr	r2, [r1], #4
   1f570:	ldrb	r0, [r2]
   1f574:	cmp	r0, #45	; 0x2d
   1f578:	bne	1f55c <argp_parse@@Base+0x3c74>
   1f57c:	ldrb	r2, [r2, #1]
   1f580:	cmp	r2, #0
   1f584:	beq	1f55c <argp_parse@@Base+0x3c74>
   1f588:	mov	r8, r3
   1f58c:	str	r3, [r4, #32]
   1f590:	cmp	r5, r8
   1f594:	bne	1f488 <argp_parse@@Base+0x3ba0>
   1f598:	b	1f508 <argp_parse@@Base+0x3c20>
   1f59c:	ldrb	r2, [r3]
   1f5a0:	cmp	r2, #45	; 0x2d
   1f5a4:	beq	1f5d8 <argp_parse@@Base+0x3cf0>
   1f5a8:	ldr	r2, [r4, #24]
   1f5ac:	cmp	r2, #0
   1f5b0:	beq	1f520 <argp_parse@@Base+0x3c38>
   1f5b4:	add	r8, r8, #1
   1f5b8:	mov	r2, #1
   1f5bc:	str	r8, [r4]
   1f5c0:	str	r3, [r4, #12]
   1f5c4:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f5c8:	mov	r3, #1
   1f5cc:	mov	r2, r3
   1f5d0:	str	r3, [r4]
   1f5d4:	b	1f35c <argp_parse@@Base+0x3a74>
   1f5d8:	ldrb	r1, [r3, #1]
   1f5dc:	cmp	r1, #0
   1f5e0:	beq	1f5a8 <argp_parse@@Base+0x3cc0>
   1f5e4:	cmp	sl, #0
   1f5e8:	beq	1f670 <argp_parse@@Base+0x3d88>
   1f5ec:	cmp	r1, #45	; 0x2d
   1f5f0:	beq	1f808 <argp_parse@@Base+0x3f20>
   1f5f4:	ldr	r2, [sp, #76]	; 0x4c
   1f5f8:	cmp	r2, #0
   1f5fc:	beq	1f670 <argp_parse@@Base+0x3d88>
   1f600:	ldrb	r2, [r3, #2]
   1f604:	cmp	r2, #0
   1f608:	bne	1f624 <argp_parse@@Base+0x3d3c>
   1f60c:	mov	r0, r6
   1f610:	str	r3, [sp, #24]
   1f614:	bl	11900 <strchr@plt>
   1f618:	cmp	r0, #0
   1f61c:	ldr	r3, [sp, #24]
   1f620:	bne	1f670 <argp_parse@@Base+0x3d88>
   1f624:	ldr	r2, [sp, #72]	; 0x48
   1f628:	add	ip, r3, #1
   1f62c:	movw	r0, #6528	; 0x1980
   1f630:	movt	r0, #2
   1f634:	mov	r3, sl
   1f638:	ldr	r1, [sp, #76]	; 0x4c
   1f63c:	str	r2, [sp]
   1f640:	mov	r2, r6
   1f644:	str	r0, [sp, #16]
   1f648:	mov	r0, r5
   1f64c:	stmib	sp, {r1, r4, r7}
   1f650:	mov	r1, r9
   1f654:	str	ip, [r4, #20]
   1f658:	bl	1ec30 <argp_parse@@Base+0x3348>
   1f65c:	cmn	r0, #1
   1f660:	mov	r2, r0
   1f664:	bne	1f434 <argp_parse@@Base+0x3b4c>
   1f668:	ldr	r3, [r4]
   1f66c:	ldr	r3, [r9, r3, lsl #2]
   1f670:	add	r3, r3, #1
   1f674:	b	1f3d0 <argp_parse@@Base+0x3ae8>
   1f678:	sub	ip, r1, #59	; 0x3b
   1f67c:	cmp	sl, #0
   1f680:	clz	ip, ip
   1f684:	lsr	ip, ip, #5
   1f688:	moveq	ip, #0
   1f68c:	cmp	ip, #0
   1f690:	beq	1f42c <argp_parse@@Base+0x3b44>
   1f694:	ldrb	r3, [r3, #1]
   1f698:	cmp	r3, #0
   1f69c:	bne	1f6b0 <argp_parse@@Base+0x3dc8>
   1f6a0:	ldr	r3, [r4]
   1f6a4:	cmp	r3, r5
   1f6a8:	beq	1f83c <argp_parse@@Base+0x3f54>
   1f6ac:	ldr	fp, [r9, r3, lsl #2]
   1f6b0:	mov	lr, #0
   1f6b4:	movw	ip, #6604	; 0x19cc
   1f6b8:	movt	ip, #2
   1f6bc:	ldr	r3, [sp, #72]	; 0x48
   1f6c0:	mov	r2, r6
   1f6c4:	mov	r1, r9
   1f6c8:	mov	r0, r5
   1f6cc:	str	r3, [sp]
   1f6d0:	mov	r3, sl
   1f6d4:	str	r4, [sp, #8]
   1f6d8:	str	r7, [sp, #12]
   1f6dc:	str	ip, [sp, #16]
   1f6e0:	str	fp, [r4, #20]
   1f6e4:	str	lr, [sp, #4]
   1f6e8:	str	lr, [r4, #12]
   1f6ec:	bl	1ec30 <argp_parse@@Base+0x3348>
   1f6f0:	mov	r2, r0
   1f6f4:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f6f8:	movw	r0, #6512	; 0x1970
   1f6fc:	movt	r0, #2
   1f700:	bl	11858 <getenv@plt>
   1f704:	cmp	r0, #0
   1f708:	ldr	r3, [r4, #20]
   1f70c:	bne	1f3a0 <argp_parse@@Base+0x3ab8>
   1f710:	mov	r2, #1
   1f714:	str	r2, [r4, #24]
   1f718:	b	1f3a8 <argp_parse@@Base+0x3ac0>
   1f71c:	ldrb	r1, [r0, #2]
   1f720:	ldrb	r3, [r3, #1]
   1f724:	cmp	r1, #58	; 0x3a
   1f728:	beq	1f7c4 <argp_parse@@Base+0x3edc>
   1f72c:	cmp	r3, #0
   1f730:	ldr	r3, [r4]
   1f734:	bne	1f790 <argp_parse@@Base+0x3ea8>
   1f738:	cmp	r5, r3
   1f73c:	beq	1f7e8 <argp_parse@@Base+0x3f00>
   1f740:	ldr	r1, [r9, r3, lsl #2]
   1f744:	add	r3, r3, #1
   1f748:	str	r3, [r4]
   1f74c:	str	r1, [r4, #12]
   1f750:	mov	r3, #0
   1f754:	str	r3, [r4, #20]
   1f758:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f75c:	cmp	r8, r2
   1f760:	movne	r3, r8
   1f764:	moveq	r3, r2
   1f768:	strne	r8, [r4, #28]
   1f76c:	b	1f54c <argp_parse@@Base+0x3c64>
   1f770:	cmp	r7, #0
   1f774:	bne	1f7a0 <argp_parse@@Base+0x3eb8>
   1f778:	mov	r2, #63	; 0x3f
   1f77c:	str	r8, [r4, #8]
   1f780:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f784:	mov	r3, r8
   1f788:	str	r8, [r4, #28]
   1f78c:	b	1f4e0 <argp_parse@@Base+0x3bf8>
   1f790:	add	r3, r3, #1
   1f794:	str	r3, [r4]
   1f798:	str	fp, [r4, #12]
   1f79c:	b	1f750 <argp_parse@@Base+0x3e68>
   1f7a0:	movw	r0, #9664	; 0x25c0
   1f7a4:	movt	r0, #3
   1f7a8:	ldr	r2, [r9]
   1f7ac:	movw	r1, #6532	; 0x1984
   1f7b0:	movt	r1, #2
   1f7b4:	mov	r3, r8
   1f7b8:	ldr	r0, [r0]
   1f7bc:	bl	1190c <fprintf@plt>
   1f7c0:	b	1f778 <argp_parse@@Base+0x3e90>
   1f7c4:	cmp	r3, #0
   1f7c8:	ldrne	r3, [r4]
   1f7cc:	moveq	fp, r3
   1f7d0:	str	fp, [r4, #12]
   1f7d4:	addne	r3, r3, #1
   1f7d8:	strne	r3, [r4]
   1f7dc:	mov	r3, #0
   1f7e0:	str	r3, [r4, #20]
   1f7e4:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f7e8:	cmp	r7, #0
   1f7ec:	bne	1f85c <argp_parse@@Base+0x3f74>
   1f7f0:	str	r8, [r4, #8]
   1f7f4:	ldrb	r3, [r6]
   1f7f8:	cmp	r3, #58	; 0x3a
   1f7fc:	moveq	r2, #58	; 0x3a
   1f800:	movne	r2, #63	; 0x3f
   1f804:	b	1f750 <argp_parse@@Base+0x3e68>
   1f808:	ldr	r2, [sp, #72]	; 0x48
   1f80c:	add	ip, r3, #2
   1f810:	mov	r1, r9
   1f814:	mov	r3, sl
   1f818:	ldr	r0, [sp, #76]	; 0x4c
   1f81c:	str	r2, [sp]
   1f820:	mov	r2, r6
   1f824:	stmib	sp, {r0, r4, r7, fp}
   1f828:	mov	r0, r5
   1f82c:	str	ip, [r4, #20]
   1f830:	bl	1ec30 <argp_parse@@Base+0x3348>
   1f834:	mov	r2, r0
   1f838:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f83c:	cmp	r7, #0
   1f840:	bne	1f880 <argp_parse@@Base+0x3f98>
   1f844:	str	r8, [r4, #8]
   1f848:	ldrb	r3, [r6]
   1f84c:	cmp	r3, #58	; 0x3a
   1f850:	moveq	r2, #58	; 0x3a
   1f854:	movne	r2, #63	; 0x3f
   1f858:	b	1f434 <argp_parse@@Base+0x3b4c>
   1f85c:	movw	r0, #9664	; 0x25c0
   1f860:	movt	r0, #3
   1f864:	ldr	r2, [r9]
   1f868:	movw	r1, #6560	; 0x19a0
   1f86c:	movt	r1, #2
   1f870:	mov	r3, r8
   1f874:	ldr	r0, [r0]
   1f878:	bl	1190c <fprintf@plt>
   1f87c:	b	1f7f0 <argp_parse@@Base+0x3f08>
   1f880:	movw	r0, #9664	; 0x25c0
   1f884:	movt	r0, #3
   1f888:	ldr	r2, [r9]
   1f88c:	movw	r1, #6560	; 0x19a0
   1f890:	movt	r1, #2
   1f894:	mov	r3, r8
   1f898:	ldr	r0, [r0]
   1f89c:	bl	1190c <fprintf@plt>
   1f8a0:	b	1f844 <argp_parse@@Base+0x3f5c>
   1f8a4:	strd	r4, [sp, #-16]!
   1f8a8:	movw	r5, #9644	; 0x25ac
   1f8ac:	movt	r5, #3
   1f8b0:	str	r6, [sp, #8]
   1f8b4:	movw	r4, #10776	; 0x2a18
   1f8b8:	movt	r4, #3
   1f8bc:	str	lr, [sp, #12]
   1f8c0:	sub	sp, sp, #16
   1f8c4:	ldr	lr, [sp, #32]
   1f8c8:	ldr	ip, [r5]
   1f8cc:	ldr	r6, [sp, #36]	; 0x24
   1f8d0:	str	lr, [sp]
   1f8d4:	ldr	lr, [sp, #40]	; 0x28
   1f8d8:	str	ip, [r4]
   1f8dc:	ldr	ip, [r5, #4]
   1f8e0:	str	r6, [sp, #4]
   1f8e4:	str	r4, [sp, #8]
   1f8e8:	str	lr, [sp, #12]
   1f8ec:	str	ip, [r4, #4]
   1f8f0:	bl	1f308 <argp_parse@@Base+0x3a20>
   1f8f4:	ldr	ip, [r4]
   1f8f8:	movw	r3, #12436	; 0x3094
   1f8fc:	movt	r3, #3
   1f900:	ldr	r1, [r4, #8]
   1f904:	ldr	r2, [r4, #12]
   1f908:	str	ip, [r5]
   1f90c:	str	r1, [r5, #8]
   1f910:	str	r2, [r3]
   1f914:	add	sp, sp, #16
   1f918:	ldrd	r4, [sp]
   1f91c:	ldr	r6, [sp, #8]
   1f920:	add	sp, sp, #12
   1f924:	pop	{pc}		; (ldr pc, [sp], #4)
   1f928:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1f92c:	movw	r4, #10776	; 0x2a18
   1f930:	movt	r4, #3
   1f934:	strd	r6, [sp, #8]
   1f938:	movw	r6, #9644	; 0x25ac
   1f93c:	movt	r6, #3
   1f940:	strd	r8, [sp, #16]
   1f944:	subs	r9, r0, #0
   1f948:	strd	sl, [sp, #24]
   1f94c:	ldm	r6, {r5, sl}
   1f950:	str	lr, [sp, #32]
   1f954:	sub	sp, sp, #20
   1f958:	str	r1, [sp, #4]
   1f95c:	stm	r4, {r5, sl}
   1f960:	ble	1fd34 <argp_parse@@Base+0x444c>
   1f964:	mov	r3, #0
   1f968:	mov	r8, r2
   1f96c:	cmp	r5, r3
   1f970:	str	r3, [r4, #12]
   1f974:	beq	1fa44 <argp_parse@@Base+0x415c>
   1f978:	ldr	r3, [r4, #16]
   1f97c:	cmp	r3, #0
   1f980:	beq	1fa50 <argp_parse@@Base+0x4168>
   1f984:	ldrb	r3, [r2]
   1f988:	sub	r2, r3, #43	; 0x2b
   1f98c:	tst	r2, #253	; 0xfd
   1f990:	ldrbeq	r3, [r8, #1]
   1f994:	addeq	r8, r8, #1
   1f998:	cmp	r3, #58	; 0x3a
   1f99c:	ldr	r3, [r4, #20]
   1f9a0:	moveq	sl, #0
   1f9a4:	cmp	r3, #0
   1f9a8:	beq	1fa90 <argp_parse@@Base+0x41a8>
   1f9ac:	ldrb	r2, [r3]
   1f9b0:	cmp	r2, #0
   1f9b4:	beq	1fa90 <argp_parse@@Base+0x41a8>
   1f9b8:	add	r7, r3, #1
   1f9bc:	mov	r0, r8
   1f9c0:	str	r3, [sp, #12]
   1f9c4:	str	r7, [r4, #20]
   1f9c8:	ldrb	fp, [r3]
   1f9cc:	mov	r1, fp
   1f9d0:	str	fp, [sp, #8]
   1f9d4:	bl	11900 <strchr@plt>
   1f9d8:	ldrd	r2, [sp, #8]
   1f9dc:	ldrb	r1, [r3, #1]
   1f9e0:	cmp	r1, #0
   1f9e4:	sub	r1, fp, #58	; 0x3a
   1f9e8:	addeq	r5, r5, #1
   1f9ec:	streq	r5, [r4]
   1f9f0:	cmp	r0, #0
   1f9f4:	cmpne	r1, #1
   1f9f8:	bls	1fc5c <argp_parse@@Base+0x4374>
   1f9fc:	ldrb	r1, [r0, #1]
   1fa00:	cmp	r1, #58	; 0x3a
   1fa04:	beq	1fc78 <argp_parse@@Base+0x4390>
   1fa08:	ldr	r1, [r4, #8]
   1fa0c:	ldr	r7, [r4, #12]
   1fa10:	mov	r0, r2
   1fa14:	movw	r3, #12436	; 0x3094
   1fa18:	movt	r3, #3
   1fa1c:	str	r5, [r6]
   1fa20:	str	r1, [r6, #8]
   1fa24:	str	r7, [r3]
   1fa28:	add	sp, sp, #20
   1fa2c:	ldrd	r4, [sp]
   1fa30:	ldrd	r6, [sp, #8]
   1fa34:	ldrd	r8, [sp, #16]
   1fa38:	ldrd	sl, [sp, #24]
   1fa3c:	add	sp, sp, #32
   1fa40:	pop	{pc}		; (ldr pc, [sp], #4)
   1fa44:	mov	r3, #1
   1fa48:	mov	r5, r3
   1fa4c:	str	r3, [r4]
   1fa50:	mov	r3, #0
   1fa54:	str	r3, [r4, #20]
   1fa58:	str	r5, [r4, #28]
   1fa5c:	str	r5, [r4, #32]
   1fa60:	ldrb	r2, [r8]
   1fa64:	cmp	r2, #45	; 0x2d
   1fa68:	beq	1fb38 <argp_parse@@Base+0x4250>
   1fa6c:	cmp	r2, #43	; 0x2b
   1fa70:	mov	r1, r3
   1fa74:	str	r3, [r4, #24]
   1fa78:	addeq	r8, r8, #1
   1fa7c:	mov	r3, #1
   1fa80:	str	r3, [r4, #16]
   1fa84:	ldrb	r3, [r8]
   1fa88:	cmp	r3, #58	; 0x3a
   1fa8c:	beq	1fb7c <argp_parse@@Base+0x4294>
   1fa90:	mov	r2, r5
   1fa94:	ldr	r1, [r4, #24]
   1fa98:	ldr	r3, [r4, #32]
   1fa9c:	ldr	r0, [r4, #28]
   1faa0:	cmp	r3, r5
   1faa4:	movgt	r3, r5
   1faa8:	strgt	r5, [r4, #32]
   1faac:	cmp	r5, r0
   1fab0:	movge	r5, r0
   1fab4:	strlt	r5, [r4, #28]
   1fab8:	cmp	r1, #1
   1fabc:	beq	1fb90 <argp_parse@@Base+0x42a8>
   1fac0:	cmp	r9, r2
   1fac4:	beq	1fc04 <argp_parse@@Base+0x431c>
   1fac8:	ldr	fp, [sp, #4]
   1facc:	movw	r1, #476	; 0x1dc
   1fad0:	movt	r1, #2
   1fad4:	strd	r2, [sp, #8]
   1fad8:	ldr	r7, [fp, r2, lsl #2]
   1fadc:	mov	r0, r7
   1fae0:	bl	11654 <strcmp@plt>
   1fae4:	cmp	r0, #0
   1fae8:	ldr	r2, [sp, #8]
   1faec:	bne	1fb4c <argp_parse@@Base+0x4264>
   1faf0:	ldr	r3, [sp, #12]
   1faf4:	add	r2, r2, #1
   1faf8:	ldr	r5, [r4, #28]
   1fafc:	str	r2, [r4]
   1fb00:	cmp	r5, r3
   1fb04:	beq	1fcc0 <argp_parse@@Base+0x43d8>
   1fb08:	cmp	r2, r3
   1fb0c:	beq	1fb24 <argp_parse@@Base+0x423c>
   1fb10:	mov	r0, fp
   1fb14:	movw	r1, #10776	; 0x2a18
   1fb18:	movt	r1, #3
   1fb1c:	bl	1e9c8 <argp_parse@@Base+0x30e0>
   1fb20:	ldr	r5, [r4, #28]
   1fb24:	mov	r2, r9
   1fb28:	mov	r3, r9
   1fb2c:	str	r9, [r4]
   1fb30:	str	r9, [r4, #32]
   1fb34:	b	1fc08 <argp_parse@@Base+0x4320>
   1fb38:	mov	r3, #2
   1fb3c:	add	r8, r8, #1
   1fb40:	mov	r1, r3
   1fb44:	str	r3, [r4, #24]
   1fb48:	b	1fa7c <argp_parse@@Base+0x4194>
   1fb4c:	ldrb	r3, [r7]
   1fb50:	cmp	r3, #45	; 0x2d
   1fb54:	beq	1fc28 <argp_parse@@Base+0x4340>
   1fb58:	ldr	r3, [r4, #24]
   1fb5c:	cmp	r3, #0
   1fb60:	beq	1fd30 <argp_parse@@Base+0x4448>
   1fb64:	add	r5, r2, #1
   1fb68:	mov	r2, #1
   1fb6c:	ldr	r1, [r4, #8]
   1fb70:	str	r5, [r4]
   1fb74:	str	r7, [r4, #12]
   1fb78:	b	1fa10 <argp_parse@@Base+0x4128>
   1fb7c:	cmp	r1, #1
   1fb80:	mov	r3, r5
   1fb84:	mov	r2, r5
   1fb88:	mov	sl, #0
   1fb8c:	bne	1fac0 <argp_parse@@Base+0x41d8>
   1fb90:	cmp	r5, r3
   1fb94:	beq	1fc40 <argp_parse@@Base+0x4358>
   1fb98:	cmp	r2, r3
   1fb9c:	beq	1fbb4 <argp_parse@@Base+0x42cc>
   1fba0:	movw	r1, #10776	; 0x2a18
   1fba4:	movt	r1, #3
   1fba8:	ldr	r0, [sp, #4]
   1fbac:	bl	1e9c8 <argp_parse@@Base+0x30e0>
   1fbb0:	ldr	r3, [r4]
   1fbb4:	cmp	r9, r3
   1fbb8:	ble	1fbf4 <argp_parse@@Base+0x430c>
   1fbbc:	ldr	r2, [sp, #4]
   1fbc0:	add	r1, r2, r3, lsl #2
   1fbc4:	b	1fbd8 <argp_parse@@Base+0x42f0>
   1fbc8:	add	r3, r3, #1
   1fbcc:	cmp	r9, r3
   1fbd0:	str	r3, [r4]
   1fbd4:	beq	1fc54 <argp_parse@@Base+0x436c>
   1fbd8:	ldr	r2, [r1], #4
   1fbdc:	ldrb	r0, [r2]
   1fbe0:	cmp	r0, #45	; 0x2d
   1fbe4:	bne	1fbc8 <argp_parse@@Base+0x42e0>
   1fbe8:	ldrb	r2, [r2, #1]
   1fbec:	cmp	r2, #0
   1fbf0:	beq	1fbc8 <argp_parse@@Base+0x42e0>
   1fbf4:	mov	r2, r3
   1fbf8:	cmp	r9, r2
   1fbfc:	str	r3, [r4, #32]
   1fc00:	bne	1fac8 <argp_parse@@Base+0x41e0>
   1fc04:	ldr	r5, [r4, #28]
   1fc08:	cmp	r3, r5
   1fc0c:	moveq	r5, r2
   1fc10:	mvnne	r2, #0
   1fc14:	ldr	r1, [r4, #8]
   1fc18:	strne	r5, [r4]
   1fc1c:	mvneq	r2, #0
   1fc20:	ldr	r7, [r4, #12]
   1fc24:	b	1fa10 <argp_parse@@Base+0x4128>
   1fc28:	ldrb	r3, [r7, #1]
   1fc2c:	cmp	r3, #0
   1fc30:	beq	1fb58 <argp_parse@@Base+0x4270>
   1fc34:	add	r3, r7, #1
   1fc38:	mov	r5, r2
   1fc3c:	b	1f9b8 <argp_parse@@Base+0x40d0>
   1fc40:	cmp	r2, r3
   1fc44:	beq	1fbb4 <argp_parse@@Base+0x42cc>
   1fc48:	mov	r3, r2
   1fc4c:	str	r2, [r4, #28]
   1fc50:	b	1fbb4 <argp_parse@@Base+0x42cc>
   1fc54:	mov	r2, r9
   1fc58:	b	1fbf8 <argp_parse@@Base+0x4310>
   1fc5c:	cmp	sl, #0
   1fc60:	bne	1fce0 <argp_parse@@Base+0x43f8>
   1fc64:	mov	r1, fp
   1fc68:	mov	r2, #63	; 0x3f
   1fc6c:	str	fp, [r4, #8]
   1fc70:	ldr	r7, [r4, #12]
   1fc74:	b	1fa10 <argp_parse@@Base+0x4128>
   1fc78:	ldrb	r1, [r0, #2]
   1fc7c:	ldrb	r3, [r3, #1]
   1fc80:	cmp	r1, #58	; 0x3a
   1fc84:	beq	1fd0c <argp_parse@@Base+0x4424>
   1fc88:	cmp	r3, #0
   1fc8c:	bne	1fccc <argp_parse@@Base+0x43e4>
   1fc90:	cmp	r9, r5
   1fc94:	beq	1fd3c <argp_parse@@Base+0x4454>
   1fc98:	ldr	r3, [sp, #4]
   1fc9c:	ldr	r1, [r4, #8]
   1fca0:	ldr	r7, [r3, r5, lsl #2]
   1fca4:	add	r3, r5, #1
   1fca8:	mov	r5, r3
   1fcac:	str	r3, [r4]
   1fcb0:	str	r7, [r4, #12]
   1fcb4:	mov	r3, #0
   1fcb8:	str	r3, [r4, #20]
   1fcbc:	b	1fa10 <argp_parse@@Base+0x4128>
   1fcc0:	mov	r5, r2
   1fcc4:	str	r2, [r4, #28]
   1fcc8:	b	1fb24 <argp_parse@@Base+0x423c>
   1fccc:	add	r5, r5, #1
   1fcd0:	ldr	r1, [r4, #8]
   1fcd4:	str	r5, [r4]
   1fcd8:	str	r7, [r4, #12]
   1fcdc:	b	1fcb4 <argp_parse@@Base+0x43cc>
   1fce0:	ldr	r3, [sp, #4]
   1fce4:	movw	r0, #9664	; 0x25c0
   1fce8:	movt	r0, #3
   1fcec:	movw	r1, #6532	; 0x1984
   1fcf0:	movt	r1, #2
   1fcf4:	ldr	r0, [r0]
   1fcf8:	ldr	r2, [r3]
   1fcfc:	mov	r3, fp
   1fd00:	bl	1190c <fprintf@plt>
   1fd04:	ldr	r5, [r4]
   1fd08:	b	1fc64 <argp_parse@@Base+0x437c>
   1fd0c:	cmp	r3, #0
   1fd10:	ldr	r1, [r4, #8]
   1fd14:	moveq	r7, r3
   1fd18:	addne	r5, r5, #1
   1fd1c:	mov	r3, #0
   1fd20:	strne	r5, [r4]
   1fd24:	str	r7, [r4, #12]
   1fd28:	str	r3, [r4, #20]
   1fd2c:	b	1fa10 <argp_parse@@Base+0x4128>
   1fd30:	mov	r5, r2
   1fd34:	mvn	r2, #0
   1fd38:	b	1fa08 <argp_parse@@Base+0x4120>
   1fd3c:	cmp	sl, #0
   1fd40:	bne	1fd64 <argp_parse@@Base+0x447c>
   1fd44:	str	fp, [r4, #8]
   1fd48:	mov	r1, fp
   1fd4c:	ldrb	r3, [r8]
   1fd50:	ldr	r7, [r4, #12]
   1fd54:	cmp	r3, #58	; 0x3a
   1fd58:	moveq	r2, #58	; 0x3a
   1fd5c:	movne	r2, #63	; 0x3f
   1fd60:	b	1fcb4 <argp_parse@@Base+0x43cc>
   1fd64:	ldr	r3, [sp, #4]
   1fd68:	movw	r0, #9664	; 0x25c0
   1fd6c:	movt	r0, #3
   1fd70:	movw	r1, #6560	; 0x19a0
   1fd74:	movt	r1, #2
   1fd78:	ldr	r0, [r0]
   1fd7c:	ldr	r2, [r3]
   1fd80:	mov	r3, fp
   1fd84:	bl	1190c <fprintf@plt>
   1fd88:	ldr	r5, [r4]
   1fd8c:	b	1fd44 <argp_parse@@Base+0x445c>
   1fd90:	umull	r2, r3, r1, r2
   1fd94:	cmp	r3, #0
   1fd98:	bne	1fda4 <argp_parse@@Base+0x44bc>
   1fd9c:	mov	r1, r2
   1fda0:	b	1e180 <argp_parse@@Base+0x2898>
   1fda4:	str	r4, [sp, #-8]!
   1fda8:	str	lr, [sp, #4]
   1fdac:	bl	11918 <__errno_location@plt>
   1fdb0:	mov	r3, #12
   1fdb4:	ldr	r4, [sp]
   1fdb8:	add	sp, sp, #4
   1fdbc:	str	r3, [r0]
   1fdc0:	mov	r0, #0
   1fdc4:	pop	{pc}		; (ldr pc, [sp], #4)
   1fdc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fdcc:	mov	r7, r0
   1fdd0:	ldr	r6, [pc, #72]	; 1fe20 <argp_parse@@Base+0x4538>
   1fdd4:	ldr	r5, [pc, #72]	; 1fe24 <argp_parse@@Base+0x453c>
   1fdd8:	add	r6, pc, r6
   1fddc:	add	r5, pc, r5
   1fde0:	sub	r6, r6, r5
   1fde4:	mov	r8, r1
   1fde8:	mov	r9, r2
   1fdec:	bl	11610 <calloc@plt-0x20>
   1fdf0:	asrs	r6, r6, #2
   1fdf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fdf8:	mov	r4, #0
   1fdfc:	add	r4, r4, #1
   1fe00:	ldr	r3, [r5], #4
   1fe04:	mov	r2, r9
   1fe08:	mov	r1, r8
   1fe0c:	mov	r0, r7
   1fe10:	blx	r3
   1fe14:	cmp	r6, r4
   1fe18:	bne	1fdfc <argp_parse@@Base+0x4514>
   1fe1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe20:	andeq	r2, r1, ip, lsr #2
   1fe24:	andeq	r2, r1, r4, lsr #2
   1fe28:	bx	lr

Disassembly of section .fini:

0001fe2c <.fini>:
   1fe2c:	push	{r3, lr}
   1fe30:	pop	{r3, pc}
