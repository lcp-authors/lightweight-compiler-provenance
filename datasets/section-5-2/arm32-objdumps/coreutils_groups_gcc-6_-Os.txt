
../repos/coreutils/src/groups:     file format elf32-littlearm


Disassembly of section .init:

00010c44 <.init>:
   10c44:	push	{r3, lr}
   10c48:	bl	111e4 <putchar_unlocked@plt+0x310>
   10c4c:	pop	{r3, pc}

Disassembly of section .plt:

00010c50 <calloc@plt-0x14>:
   10c50:	push	{lr}		; (str lr, [sp, #-4]!)
   10c54:	ldr	lr, [pc, #4]	; 10c60 <calloc@plt-0x4>
   10c58:	add	lr, pc, lr
   10c5c:	ldr	pc, [lr, #8]!
   10c60:	andeq	r4, r1, r0, lsr #7

00010c64 <calloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #928]!	; 0x3a0

00010c70 <fputs_unlocked@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #920]!	; 0x398

00010c7c <raise@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #912]!	; 0x390

00010c88 <getpwnam@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #904]!	; 0x388

00010c94 <strcmp@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #896]!	; 0x380

00010ca0 <getpwuid@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #888]!	; 0x378

00010cac <fflush@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #880]!	; 0x370

00010cb8 <getuid@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #872]!	; 0x368

00010cc4 <free@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #864]!	; 0x360

00010cd0 <_exit@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #856]!	; 0x358

00010cdc <memcpy@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #848]!	; 0x350

00010ce8 <mbsinit@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #840]!	; 0x348

00010cf4 <memcmp@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #832]!	; 0x340

00010d00 <fputc_unlocked@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #824]!	; 0x338

00010d0c <dcgettext@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #816]!	; 0x330

00010d18 <realloc@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #808]!	; 0x328

00010d24 <textdomain@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #800]!	; 0x320

00010d30 <iswprint@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #792]!	; 0x318

00010d3c <getegid@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #784]!	; 0x310

00010d48 <lseek64@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #776]!	; 0x308

00010d54 <__ctype_get_mb_cur_max@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #768]!	; 0x300

00010d60 <__fpending@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #760]!	; 0x2f8

00010d6c <ferror_unlocked@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #752]!	; 0x2f0

00010d78 <mbrtowc@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #744]!	; 0x2e8

00010d84 <error@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d90 <malloc@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #728]!	; 0x2d8

00010d9c <__libc_start_main@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #720]!	; 0x2d0

00010da8 <__freading@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #712]!	; 0x2c8

00010db4 <__gmon_start__@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc0 <getopt_long@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #696]!	; 0x2b8

00010dcc <__ctype_b_loc@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #688]!	; 0x2b0

00010dd8 <exit@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #680]!	; 0x2a8

00010de4 <strlen@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #672]!	; 0x2a0

00010df0 <__errno_location@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #664]!	; 0x298

00010dfc <__cxa_atexit@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #656]!	; 0x290

00010e08 <getgid@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #648]!	; 0x288

00010e14 <getgrouplist@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #640]!	; 0x280

00010e20 <memset@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #632]!	; 0x278

00010e2c <__printf_chk@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #624]!	; 0x270

00010e38 <fileno@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #616]!	; 0x268

00010e44 <__fprintf_chk@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #608]!	; 0x260

00010e50 <fclose@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #600]!	; 0x258

00010e5c <fseeko64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #592]!	; 0x250

00010e68 <setlocale@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #584]!	; 0x248

00010e74 <strrchr@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #576]!	; 0x240

00010e80 <nl_langinfo@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #568]!	; 0x238

00010e8c <getgroups@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #560]!	; 0x230

00010e98 <bindtextdomain@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #552]!	; 0x228

00010ea4 <fputs@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #544]!	; 0x220

00010eb0 <strncmp@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #536]!	; 0x218

00010ebc <abort@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #528]!	; 0x210

00010ec8 <getgrgid@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #520]!	; 0x208

00010ed4 <putchar_unlocked@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #512]!	; 0x200

Disassembly of section .text:

00010ee0 <.text>:
   10ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ee4:	mov	r8, r0
   10ee8:	sub	sp, sp, #20
   10eec:	ldr	r0, [r1]
   10ef0:	mov	r6, r1
   10ef4:	bl	11890 <putchar_unlocked@plt+0x9bc>
   10ef8:	ldr	r1, [pc, #612]	; 11164 <putchar_unlocked@plt+0x290>
   10efc:	mov	r0, #6
   10f00:	bl	10e68 <setlocale@plt>
   10f04:	ldr	r1, [pc, #604]	; 11168 <putchar_unlocked@plt+0x294>
   10f08:	ldr	r0, [pc, #604]	; 1116c <putchar_unlocked@plt+0x298>
   10f0c:	bl	10e98 <bindtextdomain@plt>
   10f10:	ldr	r0, [pc, #596]	; 1116c <putchar_unlocked@plt+0x298>
   10f14:	bl	10d24 <textdomain@plt>
   10f18:	mov	r5, #0
   10f1c:	ldr	r0, [pc, #588]	; 11170 <putchar_unlocked@plt+0x29c>
   10f20:	bl	14560 <putchar_unlocked@plt+0x368c>
   10f24:	str	r5, [sp]
   10f28:	ldr	r3, [pc, #580]	; 11174 <putchar_unlocked@plt+0x2a0>
   10f2c:	ldr	r2, [pc, #560]	; 11164 <putchar_unlocked@plt+0x290>
   10f30:	mov	r1, r6
   10f34:	mov	r0, r8
   10f38:	bl	10dc0 <getopt_long@plt>
   10f3c:	cmn	r0, #1
   10f40:	beq	10f94 <putchar_unlocked@plt+0xc0>
   10f44:	cmn	r0, #3
   10f48:	beq	10f5c <putchar_unlocked@plt+0x88>
   10f4c:	cmn	r0, #2
   10f50:	moveq	r0, r5
   10f54:	movne	r0, #1
   10f58:	bl	112d0 <putchar_unlocked@plt+0x3fc>
   10f5c:	ldr	r3, [pc, #532]	; 11178 <putchar_unlocked@plt+0x2a4>
   10f60:	ldr	r0, [pc, #532]	; 1117c <putchar_unlocked@plt+0x2a8>
   10f64:	str	r3, [sp, #4]
   10f68:	ldr	r3, [pc, #528]	; 11180 <putchar_unlocked@plt+0x2ac>
   10f6c:	str	r5, [sp, #8]
   10f70:	str	r3, [sp]
   10f74:	ldr	r3, [pc, #520]	; 11184 <putchar_unlocked@plt+0x2b0>
   10f78:	ldr	r0, [r0]
   10f7c:	ldr	r2, [pc, #516]	; 11188 <putchar_unlocked@plt+0x2b4>
   10f80:	ldr	r3, [r3]
   10f84:	ldr	r1, [pc, #512]	; 1118c <putchar_unlocked@plt+0x2b8>
   10f88:	bl	13310 <putchar_unlocked@plt+0x243c>
   10f8c:	mov	r0, r5
   10f90:	bl	10dd8 <exit@plt>
   10f94:	ldr	r4, [pc, #500]	; 11190 <putchar_unlocked@plt+0x2bc>
   10f98:	ldr	r3, [r4]
   10f9c:	cmp	r8, r3
   10fa0:	beq	11010 <putchar_unlocked@plt+0x13c>
   10fa4:	ldr	sl, [pc, #488]	; 11194 <putchar_unlocked@plt+0x2c0>
   10fa8:	mov	r5, #1
   10fac:	mov	r9, #32
   10fb0:	ldr	r3, [r4]
   10fb4:	cmp	r8, r3
   10fb8:	ble	11100 <putchar_unlocked@plt+0x22c>
   10fbc:	ldr	r0, [r6, r3, lsl #2]
   10fc0:	bl	10c88 <getpwnam@plt>
   10fc4:	subs	r7, r0, #0
   10fc8:	bne	11110 <putchar_unlocked@plt+0x23c>
   10fcc:	mov	r2, #5
   10fd0:	mov	r1, sl
   10fd4:	bl	10d0c <dcgettext@plt>
   10fd8:	ldr	r3, [r4]
   10fdc:	mov	r5, r0
   10fe0:	ldr	r0, [r6, r3, lsl #2]
   10fe4:	bl	12ec0 <putchar_unlocked@plt+0x1fec>
   10fe8:	mov	r2, r5
   10fec:	mov	r1, r7
   10ff0:	mov	r5, r7
   10ff4:	mov	r3, r0
   10ff8:	mov	r0, r7
   10ffc:	bl	10d84 <error@plt>
   11000:	ldr	r3, [r4]
   11004:	add	r3, r3, #1
   11008:	str	r3, [r4]
   1100c:	b	10fb0 <putchar_unlocked@plt+0xdc>
   11010:	bl	10df0 <__errno_location@plt>
   11014:	str	r5, [r0]
   11018:	mov	r4, r0
   1101c:	bl	10cb8 <getuid@plt>
   11020:	cmn	r0, #1
   11024:	mov	r6, r0
   11028:	bne	11058 <putchar_unlocked@plt+0x184>
   1102c:	ldr	r7, [r4]
   11030:	cmp	r7, #0
   11034:	beq	11058 <putchar_unlocked@plt+0x184>
   11038:	mov	r2, #5
   1103c:	ldr	r1, [pc, #340]	; 11198 <putchar_unlocked@plt+0x2c4>
   11040:	mov	r0, r5
   11044:	bl	10d0c <dcgettext@plt>
   11048:	mov	r1, r7
   1104c:	mov	r2, r0
   11050:	mov	r0, #1
   11054:	bl	10d84 <error@plt>
   11058:	mov	r5, #0
   1105c:	str	r5, [r4]
   11060:	bl	10d3c <getegid@plt>
   11064:	mov	r3, r5
   11068:	cmn	r0, #1
   1106c:	mov	r7, r0
   11070:	bne	1109c <putchar_unlocked@plt+0x1c8>
   11074:	ldr	r8, [r4]
   11078:	cmp	r8, r5
   1107c:	beq	1109c <putchar_unlocked@plt+0x1c8>
   11080:	mov	r2, #5
   11084:	ldr	r1, [pc, #272]	; 1119c <putchar_unlocked@plt+0x2c8>
   11088:	mov	r0, r5
   1108c:	bl	10d0c <dcgettext@plt>
   11090:	mov	r1, r8
   11094:	mov	r2, r0
   11098:	b	11050 <putchar_unlocked@plt+0x17c>
   1109c:	str	r3, [r4]
   110a0:	bl	10e08 <getgid@plt>
   110a4:	cmn	r0, #1
   110a8:	mov	r2, r0
   110ac:	bne	110d8 <putchar_unlocked@plt+0x204>
   110b0:	ldr	r4, [r4]
   110b4:	cmp	r4, #0
   110b8:	beq	110d8 <putchar_unlocked@plt+0x204>
   110bc:	mov	r2, #5
   110c0:	ldr	r1, [pc, #216]	; 111a0 <putchar_unlocked@plt+0x2cc>
   110c4:	mov	r0, #0
   110c8:	bl	10d0c <dcgettext@plt>
   110cc:	mov	r1, r4
   110d0:	mov	r2, r0
   110d4:	b	11050 <putchar_unlocked@plt+0x17c>
   110d8:	mov	r1, #1
   110dc:	mov	r3, #32
   110e0:	mov	r0, #0
   110e4:	stm	sp, {r1, r3}
   110e8:	mov	r3, r7
   110ec:	mov	r1, r6
   110f0:	bl	1156c <putchar_unlocked@plt+0x698>
   110f4:	mov	r5, r0
   110f8:	mov	r0, #10
   110fc:	bl	10ed4 <putchar_unlocked@plt>
   11100:	eor	r0, r5, #1
   11104:	uxtb	r0, r0
   11108:	add	sp, sp, #20
   1110c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11110:	ldr	r3, [r4]
   11114:	ldr	r1, [pc, #136]	; 111a4 <putchar_unlocked@plt+0x2d0>
   11118:	mov	r0, #1
   1111c:	ldr	r2, [r6, r3, lsl #2]
   11120:	ldr	fp, [r7, #8]
   11124:	ldr	r7, [r7, #12]
   11128:	bl	10e2c <__printf_chk@plt>
   1112c:	ldr	r0, [r4]
   11130:	mov	r3, #1
   11134:	str	r3, [sp]
   11138:	str	r9, [sp, #4]
   1113c:	mov	r3, r7
   11140:	mov	r2, r7
   11144:	mov	r1, fp
   11148:	ldr	r0, [r6, r0, lsl #2]
   1114c:	bl	1156c <putchar_unlocked@plt+0x698>
   11150:	cmp	r0, #0
   11154:	mov	r0, #10
   11158:	moveq	r5, #0
   1115c:	bl	10ed4 <putchar_unlocked@plt>
   11160:	b	11000 <putchar_unlocked@plt+0x12c>
   11164:	andeq	r4, r1, r2, lsr #16
   11168:	andeq	r4, r1, r3, lsr #16
   1116c:	andeq	r4, r1, r0, lsl #15
   11170:	strdeq	r1, [r1], -r0
   11174:			; <UNDEFINED> instruction: 0x000145bc
   11178:	andeq	r4, r1, fp, lsr r8
   1117c:	andeq	r5, r2, ip, asr #2
   11180:	andeq	r4, r1, sl, asr #16
   11184:	andeq	r5, r2, ip, ror #1
   11188:	andeq	r4, r1, ip, ror r7
   1118c:	andeq	r4, r1, ip, ror #11
   11190:	andeq	r5, r2, r0, asr #2
   11194:	muleq	r1, fp, r8
   11198:	andeq	r4, r1, sl, asr r8
   1119c:	andeq	r4, r1, lr, ror #16
   111a0:	andeq	r4, r1, r7, lsl #17
   111a4:	andeq	r4, r1, ip, lsr #17
   111a8:	mov	fp, #0
   111ac:	mov	lr, #0
   111b0:	pop	{r1}		; (ldr r1, [sp], #4)
   111b4:	mov	r2, sp
   111b8:	push	{r2}		; (str r2, [sp, #-4]!)
   111bc:	push	{r0}		; (str r0, [sp, #-4]!)
   111c0:	ldr	ip, [pc, #16]	; 111d8 <putchar_unlocked@plt+0x304>
   111c4:	push	{ip}		; (str ip, [sp, #-4]!)
   111c8:	ldr	r0, [pc, #12]	; 111dc <putchar_unlocked@plt+0x308>
   111cc:	ldr	r3, [pc, #12]	; 111e0 <putchar_unlocked@plt+0x30c>
   111d0:	bl	10d9c <__libc_start_main@plt>
   111d4:	bl	10ebc <abort@plt>
   111d8:	andeq	r4, r1, ip, asr r5
   111dc:	andeq	r0, r1, r0, ror #29
   111e0:	strdeq	r4, [r1], -ip
   111e4:	ldr	r3, [pc, #20]	; 11200 <putchar_unlocked@plt+0x32c>
   111e8:	ldr	r2, [pc, #20]	; 11204 <putchar_unlocked@plt+0x330>
   111ec:	add	r3, pc, r3
   111f0:	ldr	r2, [r3, r2]
   111f4:	cmp	r2, #0
   111f8:	bxeq	lr
   111fc:	b	10db4 <__gmon_start__@plt>
   11200:	andeq	r3, r1, ip, lsl #28
   11204:	andeq	r0, r0, r0, ror #1
   11208:	ldr	r3, [pc, #28]	; 1122c <putchar_unlocked@plt+0x358>
   1120c:	ldr	r0, [pc, #28]	; 11230 <putchar_unlocked@plt+0x35c>
   11210:	sub	r3, r3, r0
   11214:	cmp	r3, #6
   11218:	bxls	lr
   1121c:	ldr	r3, [pc, #16]	; 11234 <putchar_unlocked@plt+0x360>
   11220:	cmp	r3, #0
   11224:	bxeq	lr
   11228:	bx	r3
   1122c:	andeq	r5, r2, r7, lsr r1
   11230:	andeq	r5, r2, r4, lsr r1
   11234:	andeq	r0, r0, r0
   11238:	ldr	r1, [pc, #36]	; 11264 <putchar_unlocked@plt+0x390>
   1123c:	ldr	r0, [pc, #36]	; 11268 <putchar_unlocked@plt+0x394>
   11240:	sub	r1, r1, r0
   11244:	asr	r1, r1, #2
   11248:	add	r1, r1, r1, lsr #31
   1124c:	asrs	r1, r1, #1
   11250:	bxeq	lr
   11254:	ldr	r3, [pc, #16]	; 1126c <putchar_unlocked@plt+0x398>
   11258:	cmp	r3, #0
   1125c:	bxeq	lr
   11260:	bx	r3
   11264:	andeq	r5, r2, r4, lsr r1
   11268:	andeq	r5, r2, r4, lsr r1
   1126c:	andeq	r0, r0, r0
   11270:	push	{r4, lr}
   11274:	ldr	r4, [pc, #24]	; 11294 <putchar_unlocked@plt+0x3c0>
   11278:	ldrb	r3, [r4]
   1127c:	cmp	r3, #0
   11280:	popne	{r4, pc}
   11284:	bl	11208 <putchar_unlocked@plt+0x334>
   11288:	mov	r3, #1
   1128c:	strb	r3, [r4]
   11290:	pop	{r4, pc}
   11294:	andeq	r5, r2, r0, asr r1
   11298:	ldr	r0, [pc, #40]	; 112c8 <putchar_unlocked@plt+0x3f4>
   1129c:	ldr	r3, [r0]
   112a0:	cmp	r3, #0
   112a4:	bne	112ac <putchar_unlocked@plt+0x3d8>
   112a8:	b	11238 <putchar_unlocked@plt+0x364>
   112ac:	ldr	r3, [pc, #24]	; 112cc <putchar_unlocked@plt+0x3f8>
   112b0:	cmp	r3, #0
   112b4:	beq	112a8 <putchar_unlocked@plt+0x3d4>
   112b8:	push	{r4, lr}
   112bc:	blx	r3
   112c0:	pop	{r4, lr}
   112c4:	b	11238 <putchar_unlocked@plt+0x364>
   112c8:	andeq	r4, r2, r4, lsl pc
   112cc:	andeq	r0, r0, r0
   112d0:	subs	r5, r0, #0
   112d4:	push	{r7, lr}
   112d8:	sub	sp, sp, #56	; 0x38
   112dc:	ldr	r4, [pc, #452]	; 114a8 <putchar_unlocked@plt+0x5d4>
   112e0:	beq	11318 <putchar_unlocked@plt+0x444>
   112e4:	ldr	r3, [pc, #448]	; 114ac <putchar_unlocked@plt+0x5d8>
   112e8:	mov	r2, #5
   112ec:	ldr	r1, [pc, #444]	; 114b0 <putchar_unlocked@plt+0x5dc>
   112f0:	mov	r0, #0
   112f4:	ldr	r6, [r3]
   112f8:	bl	10d0c <dcgettext@plt>
   112fc:	ldr	r3, [r4]
   11300:	mov	r1, #1
   11304:	mov	r2, r0
   11308:	mov	r0, r6
   1130c:	bl	10e44 <__fprintf_chk@plt>
   11310:	mov	r0, r5
   11314:	bl	10dd8 <exit@plt>
   11318:	mov	r2, #5
   1131c:	ldr	r1, [pc, #400]	; 114b4 <putchar_unlocked@plt+0x5e0>
   11320:	bl	10d0c <dcgettext@plt>
   11324:	ldr	r2, [r4]
   11328:	ldr	r4, [pc, #392]	; 114b8 <putchar_unlocked@plt+0x5e4>
   1132c:	ldr	r8, [pc, #392]	; 114bc <putchar_unlocked@plt+0x5e8>
   11330:	mov	r6, r5
   11334:	mov	r1, r0
   11338:	mov	r0, #1
   1133c:	bl	10e2c <__printf_chk@plt>
   11340:	mov	r2, #5
   11344:	ldr	r1, [pc, #372]	; 114c0 <putchar_unlocked@plt+0x5ec>
   11348:	mov	r0, r5
   1134c:	bl	10d0c <dcgettext@plt>
   11350:	ldr	r1, [r4]
   11354:	bl	10c70 <fputs_unlocked@plt>
   11358:	mov	r2, #5
   1135c:	ldr	r1, [pc, #352]	; 114c4 <putchar_unlocked@plt+0x5f0>
   11360:	mov	r0, r5
   11364:	bl	10d0c <dcgettext@plt>
   11368:	ldr	r1, [r4]
   1136c:	bl	10c70 <fputs_unlocked@plt>
   11370:	mov	r2, #5
   11374:	ldr	r1, [pc, #332]	; 114c8 <putchar_unlocked@plt+0x5f4>
   11378:	mov	r0, r5
   1137c:	bl	10d0c <dcgettext@plt>
   11380:	ldr	r1, [r4]
   11384:	bl	10c70 <fputs_unlocked@plt>
   11388:	ldr	lr, [pc, #316]	; 114cc <putchar_unlocked@plt+0x5f8>
   1138c:	mov	ip, sp
   11390:	ldm	lr!, {r0, r1, r2, r3}
   11394:	stmia	ip!, {r0, r1, r2, r3}
   11398:	ldm	lr!, {r0, r1, r2, r3}
   1139c:	stmia	ip!, {r0, r1, r2, r3}
   113a0:	ldm	lr!, {r0, r1, r2, r3}
   113a4:	stmia	ip!, {r0, r1, r2, r3}
   113a8:	ldm	lr, {r0, r1}
   113ac:	stm	ip, {r0, r1}
   113b0:	ldr	r1, [sp, r6]
   113b4:	add	r7, sp, r6
   113b8:	cmp	r1, #0
   113bc:	bne	11460 <putchar_unlocked@plt+0x58c>
   113c0:	ldr	r6, [r7, #4]
   113c4:	ldr	r7, [pc, #240]	; 114bc <putchar_unlocked@plt+0x5e8>
   113c8:	cmp	r6, #0
   113cc:	mov	r2, #5
   113d0:	ldr	r1, [pc, #248]	; 114d0 <putchar_unlocked@plt+0x5fc>
   113d4:	mov	r0, #0
   113d8:	moveq	r6, r7
   113dc:	bl	10d0c <dcgettext@plt>
   113e0:	ldr	r3, [pc, #236]	; 114d4 <putchar_unlocked@plt+0x600>
   113e4:	ldr	r2, [pc, #236]	; 114d8 <putchar_unlocked@plt+0x604>
   113e8:	mov	r1, r0
   113ec:	mov	r0, #1
   113f0:	bl	10e2c <__printf_chk@plt>
   113f4:	mov	r1, #0
   113f8:	mov	r0, #5
   113fc:	bl	10e68 <setlocale@plt>
   11400:	cmp	r0, #0
   11404:	bne	11478 <putchar_unlocked@plt+0x5a4>
   11408:	mov	r2, #5
   1140c:	ldr	r1, [pc, #200]	; 114dc <putchar_unlocked@plt+0x608>
   11410:	mov	r0, #0
   11414:	bl	10d0c <dcgettext@plt>
   11418:	ldr	r3, [pc, #156]	; 114bc <putchar_unlocked@plt+0x5e8>
   1141c:	ldr	r2, [pc, #176]	; 114d4 <putchar_unlocked@plt+0x600>
   11420:	mov	r1, r0
   11424:	mov	r0, #1
   11428:	bl	10e2c <__printf_chk@plt>
   1142c:	mov	r2, #5
   11430:	ldr	r1, [pc, #168]	; 114e0 <putchar_unlocked@plt+0x60c>
   11434:	mov	r0, #0
   11438:	bl	10d0c <dcgettext@plt>
   1143c:	ldr	r2, [pc, #160]	; 114e4 <putchar_unlocked@plt+0x610>
   11440:	cmp	r6, r7
   11444:	ldr	r3, [pc, #156]	; 114e8 <putchar_unlocked@plt+0x614>
   11448:	moveq	r3, r2
   1144c:	mov	r2, r6
   11450:	mov	r1, r0
   11454:	mov	r0, #1
   11458:	bl	10e2c <__printf_chk@plt>
   1145c:	b	11310 <putchar_unlocked@plt+0x43c>
   11460:	mov	r0, r8
   11464:	bl	10c94 <strcmp@plt>
   11468:	add	r6, r6, #8
   1146c:	cmp	r0, #0
   11470:	bne	113b0 <putchar_unlocked@plt+0x4dc>
   11474:	b	113c0 <putchar_unlocked@plt+0x4ec>
   11478:	mov	r2, #3
   1147c:	ldr	r1, [pc, #104]	; 114ec <putchar_unlocked@plt+0x618>
   11480:	bl	10eb0 <strncmp@plt>
   11484:	cmp	r0, #0
   11488:	beq	11408 <putchar_unlocked@plt+0x534>
   1148c:	mov	r2, #5
   11490:	ldr	r1, [pc, #88]	; 114f0 <putchar_unlocked@plt+0x61c>
   11494:	mov	r0, #0
   11498:	bl	10d0c <dcgettext@plt>
   1149c:	ldr	r1, [r4]
   114a0:	bl	10c70 <fputs_unlocked@plt>
   114a4:	b	11408 <putchar_unlocked@plt+0x534>
   114a8:	andeq	r5, r2, r0, ror r1
   114ac:	andeq	r5, r2, r8, asr #2
   114b0:	strdeq	r4, [r1], -r3
   114b4:	andeq	r4, r1, sl, lsl r6
   114b8:	andeq	r5, r2, ip, asr #2
   114bc:	andeq	r4, r1, ip, ror #11
   114c0:	andeq	r4, r1, pc, lsr r6
   114c4:	ldrdeq	r4, [r1], -sl
   114c8:	andeq	r4, r1, r7, lsl #14
   114cc:	andeq	r4, r1, r4, lsl #11
   114d0:	andeq	r4, r1, sp, lsr r7
   114d4:	andeq	r4, r1, r4, asr r7
   114d8:	andeq	r4, r1, ip, ror r7
   114dc:	ldrdeq	r4, [r1], -r5
   114e0:	strdeq	r4, [r1], -r0
   114e4:	andeq	r4, r1, lr, asr #17
   114e8:	andeq	r4, r1, r2, lsr #16
   114ec:	andeq	r4, r1, sl, lsl #15
   114f0:	andeq	r4, r1, lr, lsl #15
   114f4:	push	{r4, r5, r6, lr}
   114f8:	subs	r5, r1, #0
   114fc:	mov	r6, r0
   11500:	moveq	r5, #1
   11504:	beq	1153c <putchar_unlocked@plt+0x668>
   11508:	bl	10ec8 <getgrgid@plt>
   1150c:	subs	r4, r0, #0
   11510:	ldrne	r0, [r4]
   11514:	bne	1154c <putchar_unlocked@plt+0x678>
   11518:	mov	r2, #5
   1151c:	ldr	r1, [pc, #60]	; 11560 <putchar_unlocked@plt+0x68c>
   11520:	bl	10d0c <dcgettext@plt>
   11524:	mov	r3, r6
   11528:	mov	r1, r4
   1152c:	mov	r5, r4
   11530:	mov	r2, r0
   11534:	mov	r0, r4
   11538:	bl	10d84 <error@plt>
   1153c:	ldr	r2, [pc, #32]	; 11564 <putchar_unlocked@plt+0x690>
   11540:	mov	r0, r6
   11544:	mov	r1, #0
   11548:	bl	11828 <putchar_unlocked@plt+0x954>
   1154c:	ldr	r3, [pc, #20]	; 11568 <putchar_unlocked@plt+0x694>
   11550:	ldr	r1, [r3]
   11554:	bl	10c70 <fputs_unlocked@plt>
   11558:	mov	r0, r5
   1155c:	pop	{r4, r5, r6, pc}
   11560:	andeq	r4, r1, lr, lsl r9
   11564:	andeq	r5, r2, r1, asr r1
   11568:	andeq	r5, r2, ip, asr #2
   1156c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11570:	subs	r5, r0, #0
   11574:	mov	r8, r2
   11578:	mov	r6, r3
   1157c:	ldrb	r9, [sp, #40]	; 0x28
   11580:	ldrb	sl, [sp, #44]	; 0x2c
   11584:	moveq	r7, r5
   11588:	moveq	r4, #1
   1158c:	beq	115a4 <putchar_unlocked@plt+0x6d0>
   11590:	mov	r0, r1
   11594:	bl	10ca0 <getpwuid@plt>
   11598:	adds	r4, r0, #0
   1159c:	mov	r7, r0
   115a0:	movne	r4, #1
   115a4:	mov	r1, r9
   115a8:	mov	r0, r8
   115ac:	bl	114f4 <putchar_unlocked@plt+0x620>
   115b0:	cmp	r0, #0
   115b4:	moveq	r4, #0
   115b8:	cmp	r8, r6
   115bc:	beq	115dc <putchar_unlocked@plt+0x708>
   115c0:	mov	r0, sl
   115c4:	bl	10ed4 <putchar_unlocked@plt>
   115c8:	mov	r1, r9
   115cc:	mov	r0, r6
   115d0:	bl	114f4 <putchar_unlocked@plt+0x620>
   115d4:	cmp	r0, #0
   115d8:	moveq	r4, #0
   115dc:	cmp	r7, #0
   115e0:	moveq	r1, r6
   115e4:	ldrne	r1, [r7, #12]
   115e8:	mov	r0, r5
   115ec:	add	r2, sp, #4
   115f0:	bl	138ac <putchar_unlocked@plt+0x29d8>
   115f4:	subs	r7, r0, #0
   115f8:	movge	r5, #0
   115fc:	bge	116b4 <putchar_unlocked@plt+0x7e0>
   11600:	cmp	r5, #0
   11604:	beq	11650 <putchar_unlocked@plt+0x77c>
   11608:	bl	10df0 <__errno_location@plt>
   1160c:	mov	r2, #5
   11610:	ldr	r1, [pc, #176]	; 116c8 <putchar_unlocked@plt+0x7f4>
   11614:	ldr	r4, [r0]
   11618:	mov	r0, #0
   1161c:	bl	10d0c <dcgettext@plt>
   11620:	mov	r6, r0
   11624:	mov	r0, r5
   11628:	bl	12ec0 <putchar_unlocked@plt+0x1fec>
   1162c:	mov	r2, r6
   11630:	mov	r1, r4
   11634:	mov	r3, r0
   11638:	mov	r0, #0
   1163c:	bl	10d84 <error@plt>
   11640:	mov	r4, #0
   11644:	mov	r0, r4
   11648:	add	sp, sp, #8
   1164c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11650:	bl	10df0 <__errno_location@plt>
   11654:	mov	r2, #5
   11658:	ldr	r1, [pc, #108]	; 116cc <putchar_unlocked@plt+0x7f8>
   1165c:	ldr	r4, [r0]
   11660:	mov	r0, r5
   11664:	bl	10d0c <dcgettext@plt>
   11668:	mov	r1, r4
   1166c:	mov	r2, r0
   11670:	mov	r0, r5
   11674:	bl	10d84 <error@plt>
   11678:	b	11640 <putchar_unlocked@plt+0x76c>
   1167c:	ldr	r3, [sp, #4]
   11680:	ldr	r3, [r3, r5, lsl #2]
   11684:	cmp	r6, r3
   11688:	cmpne	r8, r3
   1168c:	beq	116b0 <putchar_unlocked@plt+0x7dc>
   11690:	mov	r0, sl
   11694:	bl	10ed4 <putchar_unlocked@plt>
   11698:	ldr	r3, [sp, #4]
   1169c:	mov	r1, r9
   116a0:	ldr	r0, [r3, r5, lsl #2]
   116a4:	bl	114f4 <putchar_unlocked@plt+0x620>
   116a8:	cmp	r0, #0
   116ac:	moveq	r4, #0
   116b0:	add	r5, r5, #1
   116b4:	cmp	r5, r7
   116b8:	bne	1167c <putchar_unlocked@plt+0x7a8>
   116bc:	ldr	r0, [sp, #4]
   116c0:	bl	117d4 <putchar_unlocked@plt+0x900>
   116c4:	b	11644 <putchar_unlocked@plt+0x770>
   116c8:	andeq	r4, r1, r0, asr #18
   116cc:	andeq	r4, r1, r1, ror #18
   116d0:	ldr	r3, [pc, #4]	; 116dc <putchar_unlocked@plt+0x808>
   116d4:	str	r0, [r3]
   116d8:	bx	lr
   116dc:	andeq	r5, r2, r8, ror #2
   116e0:	ldr	r3, [pc, #4]	; 116ec <putchar_unlocked@plt+0x818>
   116e4:	strb	r0, [r3, #4]
   116e8:	bx	lr
   116ec:	andeq	r5, r2, r8, ror #2
   116f0:	ldr	r3, [pc, #192]	; 117b8 <putchar_unlocked@plt+0x8e4>
   116f4:	push	{r0, r1, r4, r5, r6, lr}
   116f8:	ldr	r0, [r3]
   116fc:	bl	139c0 <putchar_unlocked@plt+0x2aec>
   11700:	cmp	r0, #0
   11704:	beq	1179c <putchar_unlocked@plt+0x8c8>
   11708:	ldr	r3, [pc, #172]	; 117bc <putchar_unlocked@plt+0x8e8>
   1170c:	mov	r4, r3
   11710:	ldrb	r2, [r3, #4]
   11714:	cmp	r2, #0
   11718:	beq	1172c <putchar_unlocked@plt+0x858>
   1171c:	bl	10df0 <__errno_location@plt>
   11720:	ldr	r3, [r0]
   11724:	cmp	r3, #32
   11728:	beq	1179c <putchar_unlocked@plt+0x8c8>
   1172c:	mov	r2, #5
   11730:	ldr	r1, [pc, #136]	; 117c0 <putchar_unlocked@plt+0x8ec>
   11734:	mov	r0, #0
   11738:	bl	10d0c <dcgettext@plt>
   1173c:	ldr	r4, [r4]
   11740:	cmp	r4, #0
   11744:	mov	r5, r0
   11748:	beq	11780 <putchar_unlocked@plt+0x8ac>
   1174c:	bl	10df0 <__errno_location@plt>
   11750:	ldr	r6, [r0]
   11754:	mov	r0, r4
   11758:	bl	12d70 <putchar_unlocked@plt+0x1e9c>
   1175c:	str	r5, [sp]
   11760:	ldr	r2, [pc, #92]	; 117c4 <putchar_unlocked@plt+0x8f0>
   11764:	mov	r1, r6
   11768:	mov	r3, r0
   1176c:	mov	r0, #0
   11770:	bl	10d84 <error@plt>
   11774:	ldr	r3, [pc, #76]	; 117c8 <putchar_unlocked@plt+0x8f4>
   11778:	ldr	r0, [r3]
   1177c:	bl	10cd0 <_exit@plt>
   11780:	bl	10df0 <__errno_location@plt>
   11784:	mov	r3, r5
   11788:	ldr	r2, [pc, #60]	; 117cc <putchar_unlocked@plt+0x8f8>
   1178c:	ldr	r1, [r0]
   11790:	mov	r0, r4
   11794:	bl	10d84 <error@plt>
   11798:	b	11774 <putchar_unlocked@plt+0x8a0>
   1179c:	ldr	r3, [pc, #44]	; 117d0 <putchar_unlocked@plt+0x8fc>
   117a0:	ldr	r0, [r3]
   117a4:	bl	139c0 <putchar_unlocked@plt+0x2aec>
   117a8:	cmp	r0, #0
   117ac:	bne	11774 <putchar_unlocked@plt+0x8a0>
   117b0:	add	sp, sp, #8
   117b4:	pop	{r4, r5, r6, pc}
   117b8:	andeq	r5, r2, ip, asr #2
   117bc:	andeq	r5, r2, r8, ror #2
   117c0:	muleq	r1, sp, r9
   117c4:	andeq	r4, r1, r9, lsr #19
   117c8:	strdeq	r5, [r2], -r0
   117cc:	andeq	r4, r1, sp, lsr #19
   117d0:	andeq	r5, r2, r8, asr #2
   117d4:	push	{r0, r1, r2, r4, r5, lr}
   117d8:	mov	r5, r0
   117dc:	bl	10df0 <__errno_location@plt>
   117e0:	ldr	r3, [r0]
   117e4:	mov	r4, r0
   117e8:	str	r3, [sp]
   117ec:	str	r3, [sp, #4]
   117f0:	mov	r3, #0
   117f4:	str	r3, [r0]
   117f8:	mov	r0, r5
   117fc:	bl	10cc4 <free@plt>
   11800:	ldr	r3, [r4]
   11804:	add	r2, sp, #8
   11808:	cmp	r3, #0
   1180c:	moveq	r3, #4
   11810:	movne	r3, #0
   11814:	add	r3, r2, r3
   11818:	ldr	r3, [r3, #-8]
   1181c:	str	r3, [r4]
   11820:	add	sp, sp, #12
   11824:	pop	{r4, r5, pc}
   11828:	push	{r4, r5, r6, r8, r9, lr}
   1182c:	mov	r4, r0
   11830:	mov	r5, r1
   11834:	add	r6, r2, #20
   11838:	mov	r8, #10
   1183c:	mov	r9, #0
   11840:	mov	r3, #0
   11844:	strb	r3, [r2, #20]
   11848:	mov	r0, r4
   1184c:	mov	r1, r5
   11850:	mov	r2, r8
   11854:	mov	r3, r9
   11858:	bl	14388 <putchar_unlocked@plt+0x34b4>
   1185c:	mov	r3, r9
   11860:	mov	r0, r4
   11864:	mov	r1, r5
   11868:	add	r2, r2, #48	; 0x30
   1186c:	strb	r2, [r6, #-1]!
   11870:	mov	r2, r8
   11874:	bl	14388 <putchar_unlocked@plt+0x34b4>
   11878:	mov	r4, r0
   1187c:	mov	r5, r1
   11880:	orrs	r3, r4, r5
   11884:	bne	11848 <putchar_unlocked@plt+0x974>
   11888:	mov	r0, r6
   1188c:	pop	{r4, r5, r6, r8, r9, pc}
   11890:	push	{r4, r5, r6, lr}
   11894:	subs	r5, r0, #0
   11898:	bne	118b0 <putchar_unlocked@plt+0x9dc>
   1189c:	ldr	r3, [pc, #124]	; 11920 <putchar_unlocked@plt+0xa4c>
   118a0:	ldr	r0, [pc, #124]	; 11924 <putchar_unlocked@plt+0xa50>
   118a4:	ldr	r1, [r3]
   118a8:	bl	10ea4 <fputs@plt>
   118ac:	bl	10ebc <abort@plt>
   118b0:	mov	r1, #47	; 0x2f
   118b4:	bl	10e74 <strrchr@plt>
   118b8:	cmp	r0, #0
   118bc:	addne	r4, r0, #1
   118c0:	moveq	r4, r5
   118c4:	sub	r3, r4, r5
   118c8:	cmp	r3, #6
   118cc:	ble	1190c <putchar_unlocked@plt+0xa38>
   118d0:	mov	r2, #7
   118d4:	ldr	r1, [pc, #76]	; 11928 <putchar_unlocked@plt+0xa54>
   118d8:	sub	r0, r4, #7
   118dc:	bl	10eb0 <strncmp@plt>
   118e0:	cmp	r0, #0
   118e4:	bne	1190c <putchar_unlocked@plt+0xa38>
   118e8:	mov	r2, #3
   118ec:	ldr	r1, [pc, #56]	; 1192c <putchar_unlocked@plt+0xa58>
   118f0:	mov	r0, r4
   118f4:	bl	10eb0 <strncmp@plt>
   118f8:	cmp	r0, #0
   118fc:	movne	r5, r4
   11900:	ldreq	r3, [pc, #40]	; 11930 <putchar_unlocked@plt+0xa5c>
   11904:	addeq	r5, r4, #3
   11908:	streq	r5, [r3]
   1190c:	ldr	r3, [pc, #32]	; 11934 <putchar_unlocked@plt+0xa60>
   11910:	str	r5, [r3]
   11914:	ldr	r3, [pc, #28]	; 11938 <putchar_unlocked@plt+0xa64>
   11918:	str	r5, [r3]
   1191c:	pop	{r4, r5, r6, pc}
   11920:	andeq	r5, r2, r8, asr #2
   11924:			; <UNDEFINED> instruction: 0x000149b0
   11928:	andeq	r4, r1, r8, ror #19
   1192c:	strdeq	r4, [r1], -r0
   11930:	andeq	r5, r2, r8, lsr r1
   11934:	andeq	r5, r2, r0, ror r1
   11938:	andeq	r5, r2, ip, lsr r1
   1193c:	push	{r4, r5, r6, lr}
   11940:	mov	r2, #48	; 0x30
   11944:	mov	r5, r1
   11948:	mov	r1, #0
   1194c:	mov	r4, r0
   11950:	bl	10e20 <memset@plt>
   11954:	cmp	r5, #10
   11958:	bne	11960 <putchar_unlocked@plt+0xa8c>
   1195c:	bl	10ebc <abort@plt>
   11960:	str	r5, [r4]
   11964:	mov	r0, r4
   11968:	pop	{r4, r5, r6, pc}
   1196c:	push	{r4, r5, r6, lr}
   11970:	mov	r4, r0
   11974:	mov	r5, r1
   11978:	bl	13bbc <putchar_unlocked@plt+0x2ce8>
   1197c:	ldrb	r3, [r0]
   11980:	bic	r3, r3, #32
   11984:	cmp	r3, #85	; 0x55
   11988:	bne	119f8 <putchar_unlocked@plt+0xb24>
   1198c:	ldrb	r3, [r0, #1]
   11990:	bic	r3, r3, #32
   11994:	cmp	r3, #84	; 0x54
   11998:	bne	119d0 <putchar_unlocked@plt+0xafc>
   1199c:	ldrb	r3, [r0, #2]
   119a0:	bic	r3, r3, #32
   119a4:	cmp	r3, #70	; 0x46
   119a8:	bne	119d0 <putchar_unlocked@plt+0xafc>
   119ac:	ldrb	r3, [r0, #3]
   119b0:	cmp	r3, #45	; 0x2d
   119b4:	bne	119d0 <putchar_unlocked@plt+0xafc>
   119b8:	ldrb	r3, [r0, #4]
   119bc:	cmp	r3, #56	; 0x38
   119c0:	bne	119d0 <putchar_unlocked@plt+0xafc>
   119c4:	ldrb	r3, [r0, #5]
   119c8:	cmp	r3, #0
   119cc:	beq	119e4 <putchar_unlocked@plt+0xb10>
   119d0:	ldr	r1, [pc, #144]	; 11a68 <putchar_unlocked@plt+0xb94>
   119d4:	ldr	r0, [pc, #144]	; 11a6c <putchar_unlocked@plt+0xb98>
   119d8:	cmp	r5, #9
   119dc:	movne	r0, r1
   119e0:	pop	{r4, r5, r6, pc}
   119e4:	ldrb	r3, [r4]
   119e8:	ldr	r1, [pc, #128]	; 11a70 <putchar_unlocked@plt+0xb9c>
   119ec:	ldr	r0, [pc, #128]	; 11a74 <putchar_unlocked@plt+0xba0>
   119f0:	cmp	r3, #96	; 0x60
   119f4:	b	119dc <putchar_unlocked@plt+0xb08>
   119f8:	cmp	r3, #71	; 0x47
   119fc:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a00:	ldrb	r3, [r0, #1]
   11a04:	bic	r3, r3, #32
   11a08:	cmp	r3, #66	; 0x42
   11a0c:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a10:	ldrb	r3, [r0, #2]
   11a14:	cmp	r3, #49	; 0x31
   11a18:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a1c:	ldrb	r3, [r0, #3]
   11a20:	cmp	r3, #56	; 0x38
   11a24:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a28:	ldrb	r3, [r0, #4]
   11a2c:	cmp	r3, #48	; 0x30
   11a30:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a34:	ldrb	r3, [r0, #5]
   11a38:	cmp	r3, #51	; 0x33
   11a3c:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a40:	ldrb	r3, [r0, #6]
   11a44:	cmp	r3, #48	; 0x30
   11a48:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a4c:	ldrb	r3, [r0, #7]
   11a50:	cmp	r3, #0
   11a54:	bne	119d0 <putchar_unlocked@plt+0xafc>
   11a58:	ldrb	r3, [r4]
   11a5c:	ldr	r1, [pc, #20]	; 11a78 <putchar_unlocked@plt+0xba4>
   11a60:	ldr	r0, [pc, #20]	; 11a7c <putchar_unlocked@plt+0xba8>
   11a64:	b	119f0 <putchar_unlocked@plt+0xb1c>
   11a68:	andeq	r4, r1, r9, asr sl
   11a6c:	andeq	r4, r1, r7, asr sl
   11a70:	andeq	r4, r1, ip, asr #20
   11a74:	andeq	r4, r1, r8, asr #20
   11a78:	andeq	r4, r1, r4, asr sl
   11a7c:	andeq	r4, r1, r0, asr sl
   11a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a84:	sub	sp, sp, #108	; 0x6c
   11a88:	mov	r8, r0
   11a8c:	str	r3, [sp, #36]	; 0x24
   11a90:	mov	r5, r1
   11a94:	str	r2, [sp, #44]	; 0x2c
   11a98:	ldr	sl, [sp, #144]	; 0x90
   11a9c:	bl	10d54 <__ctype_get_mb_cur_max@plt>
   11aa0:	ldr	r3, [sp, #148]	; 0x94
   11aa4:	mov	r7, #0
   11aa8:	str	r7, [sp, #48]	; 0x30
   11aac:	lsr	r6, r3, #1
   11ab0:	and	r6, r6, #1
   11ab4:	mov	r3, #1
   11ab8:	str	r3, [sp, #72]	; 0x48
   11abc:	str	r7, [sp, #24]
   11ac0:	str	r7, [sp, #32]
   11ac4:	str	r7, [sp, #40]	; 0x28
   11ac8:	str	r7, [sp, #60]	; 0x3c
   11acc:	str	r0, [sp, #76]	; 0x4c
   11ad0:	cmp	sl, #10
   11ad4:	ldrls	pc, [pc, sl, lsl #2]
   11ad8:	b	11d14 <putchar_unlocked@plt+0xe40>
   11adc:	andeq	r1, r1, r8, lsl #22
   11ae0:	muleq	r1, ip, r7
   11ae4:	andeq	r1, r1, r0, ror #25
   11ae8:	andeq	r1, r1, ip, lsr #26
   11aec:			; <UNDEFINED> instruction: 0x00011cbc
   11af0:	andeq	r1, r1, r4, lsl fp
   11af4:	andeq	r2, r1, ip, ror r7
   11af8:	andeq	r1, r1, r8, lsl sp
   11afc:	andeq	r1, r1, ip, lsl #24
   11b00:	andeq	r1, r1, ip, lsl #24
   11b04:	andeq	r1, r1, ip, lsl #24
   11b08:	mov	r6, #0
   11b0c:	mov	r4, #0
   11b10:	b	11b40 <putchar_unlocked@plt+0xc6c>
   11b14:	cmp	r6, #0
   11b18:	bne	11d3c <putchar_unlocked@plt+0xe68>
   11b1c:	cmp	r5, #0
   11b20:	movne	r3, #34	; 0x22
   11b24:	strbne	r3, [r8]
   11b28:	mov	r3, #1
   11b2c:	str	r3, [sp, #24]
   11b30:	str	r3, [sp, #32]
   11b34:	mov	r4, #1
   11b38:	ldr	r3, [pc, #3172]	; 127a4 <putchar_unlocked@plt+0x18d0>
   11b3c:	str	r3, [sp, #40]	; 0x28
   11b40:	mov	r9, r5
   11b44:	mov	r3, #0
   11b48:	str	r7, [sp, #68]	; 0x44
   11b4c:	str	r3, [sp, #28]
   11b50:	ldr	r3, [sp, #36]	; 0x24
   11b54:	cmn	r3, #1
   11b58:	bne	126e8 <putchar_unlocked@plt+0x1814>
   11b5c:	ldr	r3, [sp, #44]	; 0x2c
   11b60:	ldr	r2, [sp, #28]
   11b64:	ldrb	r3, [r3, r2]
   11b68:	adds	r3, r3, #0
   11b6c:	movne	r3, #1
   11b70:	str	r3, [sp, #52]	; 0x34
   11b74:	ldr	r3, [sp, #52]	; 0x34
   11b78:	cmp	r3, #0
   11b7c:	bne	11d64 <putchar_unlocked@plt+0xe90>
   11b80:	sub	r2, sl, #2
   11b84:	clz	r2, r2
   11b88:	lsr	r2, r2, #5
   11b8c:	and	r3, r6, r2
   11b90:	cmp	r4, #0
   11b94:	movne	r3, #0
   11b98:	andeq	r3, r3, #1
   11b9c:	cmp	r3, #0
   11ba0:	bne	11f2c <putchar_unlocked@plt+0x1058>
   11ba4:	eor	r3, r6, #1
   11ba8:	ands	r2, r2, r3
   11bac:	beq	12720 <putchar_unlocked@plt+0x184c>
   11bb0:	ldr	r3, [sp, #68]	; 0x44
   11bb4:	cmp	r3, #0
   11bb8:	beq	12758 <putchar_unlocked@plt+0x1884>
   11bbc:	ldr	r3, [sp, #72]	; 0x48
   11bc0:	cmp	r3, #0
   11bc4:	beq	126fc <putchar_unlocked@plt+0x1828>
   11bc8:	ldr	r3, [sp, #160]	; 0xa0
   11bcc:	ldr	r2, [sp, #44]	; 0x2c
   11bd0:	str	r3, [sp, #16]
   11bd4:	ldr	r3, [sp, #156]	; 0x9c
   11bd8:	ldr	r1, [sp, #60]	; 0x3c
   11bdc:	str	r3, [sp, #12]
   11be0:	ldr	r3, [sp, #152]	; 0x98
   11be4:	str	r3, [sp, #8]
   11be8:	ldr	r3, [sp, #148]	; 0x94
   11bec:	str	r3, [sp, #4]
   11bf0:	mov	r3, #5
   11bf4:	str	r3, [sp]
   11bf8:	ldr	r3, [sp, #36]	; 0x24
   11bfc:	mov	r0, r8
   11c00:	bl	11a80 <putchar_unlocked@plt+0xbac>
   11c04:	mov	r4, r0
   11c08:	b	1274c <putchar_unlocked@plt+0x1878>
   11c0c:	cmp	sl, #10
   11c10:	beq	11c6c <putchar_unlocked@plt+0xd98>
   11c14:	ldr	r4, [pc, #2956]	; 127a8 <putchar_unlocked@plt+0x18d4>
   11c18:	mov	r2, #5
   11c1c:	mov	r1, r4
   11c20:	mov	r0, #0
   11c24:	bl	10d0c <dcgettext@plt>
   11c28:	cmp	r0, r4
   11c2c:	str	r0, [sp, #156]	; 0x9c
   11c30:	bne	11c40 <putchar_unlocked@plt+0xd6c>
   11c34:	mov	r1, sl
   11c38:	bl	1196c <putchar_unlocked@plt+0xa98>
   11c3c:	str	r0, [sp, #156]	; 0x9c
   11c40:	ldr	r4, [pc, #2916]	; 127ac <putchar_unlocked@plt+0x18d8>
   11c44:	mov	r2, #5
   11c48:	mov	r1, r4
   11c4c:	mov	r0, #0
   11c50:	bl	10d0c <dcgettext@plt>
   11c54:	cmp	r0, r4
   11c58:	str	r0, [sp, #160]	; 0xa0
   11c5c:	bne	11c6c <putchar_unlocked@plt+0xd98>
   11c60:	mov	r1, sl
   11c64:	bl	1196c <putchar_unlocked@plt+0xa98>
   11c68:	str	r0, [sp, #160]	; 0xa0
   11c6c:	cmp	r6, #0
   11c70:	moveq	r4, r6
   11c74:	beq	11c8c <putchar_unlocked@plt+0xdb8>
   11c78:	mov	r4, #0
   11c7c:	b	11c9c <putchar_unlocked@plt+0xdc8>
   11c80:	cmp	r5, r4
   11c84:	strbhi	r3, [r8, r4]
   11c88:	add	r4, r4, #1
   11c8c:	ldr	r3, [sp, #156]	; 0x9c
   11c90:	ldrb	r3, [r3, r4]
   11c94:	cmp	r3, #0
   11c98:	bne	11c80 <putchar_unlocked@plt+0xdac>
   11c9c:	ldr	r0, [sp, #160]	; 0xa0
   11ca0:	bl	10de4 <strlen@plt>
   11ca4:	ldr	r3, [sp, #160]	; 0xa0
   11ca8:	str	r3, [sp, #40]	; 0x28
   11cac:	mov	r3, #1
   11cb0:	str	r3, [sp, #24]
   11cb4:	str	r0, [sp, #32]
   11cb8:	b	11b40 <putchar_unlocked@plt+0xc6c>
   11cbc:	mov	r3, #1
   11cc0:	cmp	r6, #0
   11cc4:	streq	r3, [sp, #24]
   11cc8:	beq	11ce8 <putchar_unlocked@plt+0xe14>
   11ccc:	str	r3, [sp, #32]
   11cd0:	ldr	r3, [pc, #2772]	; 127ac <putchar_unlocked@plt+0x18d8>
   11cd4:	mov	r4, #0
   11cd8:	str	r3, [sp, #40]	; 0x28
   11cdc:	b	11d0c <putchar_unlocked@plt+0xe38>
   11ce0:	cmp	r6, #0
   11ce4:	bne	11d54 <putchar_unlocked@plt+0xe80>
   11ce8:	cmp	r5, #0
   11cec:	movne	r3, #39	; 0x27
   11cf0:	strbne	r3, [r8]
   11cf4:	mov	r3, #1
   11cf8:	str	r3, [sp, #32]
   11cfc:	mov	r6, #0
   11d00:	ldr	r3, [pc, #2724]	; 127ac <putchar_unlocked@plt+0x18d8>
   11d04:	mov	r4, #1
   11d08:	str	r3, [sp, #40]	; 0x28
   11d0c:	mov	sl, #2
   11d10:	b	11b40 <putchar_unlocked@plt+0xc6c>
   11d14:	bl	10ebc <abort@plt>
   11d18:	mov	r6, #0
   11d1c:	mov	r3, #1
   11d20:	str	r3, [sp, #24]
   11d24:	mov	r4, r6
   11d28:	b	11b40 <putchar_unlocked@plt+0xc6c>
   11d2c:	mov	r6, #1
   11d30:	str	r6, [sp, #24]
   11d34:	str	r6, [sp, #32]
   11d38:	b	11cd0 <putchar_unlocked@plt+0xdfc>
   11d3c:	mov	r3, #1
   11d40:	str	r3, [sp, #32]
   11d44:	ldr	r3, [pc, #2648]	; 127a4 <putchar_unlocked@plt+0x18d0>
   11d48:	str	r6, [sp, #24]
   11d4c:	str	r3, [sp, #40]	; 0x28
   11d50:	b	11b0c <putchar_unlocked@plt+0xc38>
   11d54:	mov	r3, #1
   11d58:	str	r3, [sp, #32]
   11d5c:	ldr	r3, [pc, #2632]	; 127ac <putchar_unlocked@plt+0x18d8>
   11d60:	b	11d4c <putchar_unlocked@plt+0xe78>
   11d64:	ldr	r3, [sp, #32]
   11d68:	ldr	fp, [sp, #24]
   11d6c:	cmp	sl, #2
   11d70:	moveq	fp, #0
   11d74:	andne	fp, fp, #1
   11d78:	adds	r5, r3, #0
   11d7c:	movne	r5, #1
   11d80:	ands	r3, r5, fp
   11d84:	str	r3, [sp, #64]	; 0x40
   11d88:	beq	11e58 <putchar_unlocked@plt+0xf84>
   11d8c:	ldr	r2, [sp, #32]
   11d90:	ldr	r3, [sp, #28]
   11d94:	add	r7, r3, r2
   11d98:	mov	r3, r2
   11d9c:	ldr	r2, [sp, #36]	; 0x24
   11da0:	cmp	r3, #1
   11da4:	movls	r3, #0
   11da8:	movhi	r3, #1
   11dac:	cmn	r2, #1
   11db0:	movne	r3, #0
   11db4:	cmp	r3, #0
   11db8:	beq	11dc8 <putchar_unlocked@plt+0xef4>
   11dbc:	ldr	r0, [sp, #44]	; 0x2c
   11dc0:	bl	10de4 <strlen@plt>
   11dc4:	str	r0, [sp, #36]	; 0x24
   11dc8:	ldr	r3, [sp, #36]	; 0x24
   11dcc:	cmp	r3, r7
   11dd0:	bcc	11e50 <putchar_unlocked@plt+0xf7c>
   11dd4:	ldr	r3, [sp, #44]	; 0x2c
   11dd8:	ldr	r0, [sp, #28]
   11ddc:	ldr	r2, [sp, #32]
   11de0:	ldr	r1, [sp, #40]	; 0x28
   11de4:	add	r0, r3, r0
   11de8:	bl	10cf4 <memcmp@plt>
   11dec:	cmp	r0, #0
   11df0:	bne	11e50 <putchar_unlocked@plt+0xf7c>
   11df4:	cmp	r6, #0
   11df8:	beq	11e58 <putchar_unlocked@plt+0xf84>
   11dfc:	str	r6, [sp, #24]
   11e00:	ldr	r3, [sp, #24]
   11e04:	ldr	r2, [sp, #44]	; 0x2c
   11e08:	cmp	sl, #2
   11e0c:	movne	r3, #0
   11e10:	andeq	r3, r3, #1
   11e14:	cmp	r3, #0
   11e18:	ldr	r3, [sp, #160]	; 0xa0
   11e1c:	movne	sl, #4
   11e20:	str	r3, [sp, #16]
   11e24:	ldr	r3, [sp, #156]	; 0x9c
   11e28:	str	sl, [sp]
   11e2c:	str	r3, [sp, #12]
   11e30:	mov	r3, #0
   11e34:	str	r3, [sp, #8]
   11e38:	ldr	r3, [sp, #148]	; 0x94
   11e3c:	mov	r1, r9
   11e40:	bic	r3, r3, #2
   11e44:	str	r3, [sp, #4]
   11e48:	ldr	r3, [sp, #36]	; 0x24
   11e4c:	b	11bfc <putchar_unlocked@plt+0xd28>
   11e50:	mov	r3, #0
   11e54:	str	r3, [sp, #64]	; 0x40
   11e58:	ldr	r2, [sp, #28]
   11e5c:	ldr	r3, [sp, #44]	; 0x2c
   11e60:	add	r3, r3, r2
   11e64:	str	r3, [sp, #80]	; 0x50
   11e68:	ldr	r3, [sp, #44]	; 0x2c
   11e6c:	ldrb	r7, [r3, r2]
   11e70:	cmp	r7, #58	; 0x3a
   11e74:	bhi	11fdc <putchar_unlocked@plt+0x1108>
   11e78:	cmp	r7, #43	; 0x2b
   11e7c:	bcs	12030 <putchar_unlocked@plt+0x115c>
   11e80:	cmp	r7, #32
   11e84:	beq	12088 <putchar_unlocked@plt+0x11b4>
   11e88:	bhi	11f34 <putchar_unlocked@plt+0x1060>
   11e8c:	cmp	r7, #9
   11e90:	beq	1233c <putchar_unlocked@plt+0x1468>
   11e94:	bhi	11ef8 <putchar_unlocked@plt+0x1024>
   11e98:	cmp	r7, #7
   11e9c:	beq	123e8 <putchar_unlocked@plt+0x1514>
   11ea0:	bhi	120a4 <putchar_unlocked@plt+0x11d0>
   11ea4:	cmp	r7, #0
   11ea8:	beq	120c0 <putchar_unlocked@plt+0x11ec>
   11eac:	ldr	r3, [sp, #76]	; 0x4c
   11eb0:	cmp	r3, #1
   11eb4:	bne	1242c <putchar_unlocked@plt+0x1558>
   11eb8:	bl	10dcc <__ctype_b_loc@plt>
   11ebc:	sxth	r3, r7
   11ec0:	lsl	r3, r3, #1
   11ec4:	ldr	r2, [r0]
   11ec8:	ldrh	r5, [r2, r3]
   11ecc:	ldr	r3, [sp, #76]	; 0x4c
   11ed0:	str	r3, [sp, #56]	; 0x38
   11ed4:	lsr	r5, r5, #14
   11ed8:	and	r5, r5, #1
   11edc:	ldr	r3, [sp, #24]
   11ee0:	eor	fp, r5, #1
   11ee4:	and	fp, fp, r3
   11ee8:	ands	fp, fp, #255	; 0xff
   11eec:	beq	12274 <putchar_unlocked@plt+0x13a0>
   11ef0:	mov	r5, #0
   11ef4:	b	124d8 <putchar_unlocked@plt+0x1604>
   11ef8:	cmp	r7, #11
   11efc:	beq	12344 <putchar_unlocked@plt+0x1470>
   11f00:	bcc	123e0 <putchar_unlocked@plt+0x150c>
   11f04:	cmp	r7, #12
   11f08:	beq	123f0 <putchar_unlocked@plt+0x151c>
   11f0c:	cmp	r7, #13
   11f10:	moveq	r3, #114	; 0x72
   11f14:	bne	11eac <putchar_unlocked@plt+0xfd8>
   11f18:	cmp	sl, #2
   11f1c:	movne	r2, #0
   11f20:	andeq	r2, r6, #1
   11f24:	cmp	r2, #0
   11f28:	beq	120a8 <putchar_unlocked@plt+0x11d4>
   11f2c:	mov	sl, #2
   11f30:	b	11e00 <putchar_unlocked@plt+0xf2c>
   11f34:	cmp	r7, #37	; 0x25
   11f38:	beq	12030 <putchar_unlocked@plt+0x115c>
   11f3c:	bhi	11f50 <putchar_unlocked@plt+0x107c>
   11f40:	cmp	r7, #35	; 0x23
   11f44:	beq	1207c <putchar_unlocked@plt+0x11a8>
   11f48:	mov	r5, #0
   11f4c:	b	1208c <putchar_unlocked@plt+0x11b8>
   11f50:	cmp	r7, #39	; 0x27
   11f54:	bne	11f48 <putchar_unlocked@plt+0x1074>
   11f58:	cmp	sl, #2
   11f5c:	ldrne	r5, [sp, #52]	; 0x34
   11f60:	movne	r3, r5
   11f64:	strne	r3, [sp, #68]	; 0x44
   11f68:	bne	12034 <putchar_unlocked@plt+0x1160>
   11f6c:	cmp	r6, #0
   11f70:	bne	11e00 <putchar_unlocked@plt+0xf2c>
   11f74:	ldr	r2, [sp, #60]	; 0x3c
   11f78:	adds	r3, r9, #0
   11f7c:	movne	r3, #1
   11f80:	cmp	r2, #0
   11f84:	movne	r3, #0
   11f88:	cmp	r3, #0
   11f8c:	strne	r9, [sp, #60]	; 0x3c
   11f90:	movne	r9, #0
   11f94:	bne	11fa4 <putchar_unlocked@plt+0x10d0>
   11f98:	cmp	r9, r4
   11f9c:	movhi	r3, #39	; 0x27
   11fa0:	strbhi	r3, [r8, r4]
   11fa4:	add	r3, r4, #1
   11fa8:	cmp	r3, r9
   11fac:	movcc	r2, #92	; 0x5c
   11fb0:	strbcc	r2, [r8, r3]
   11fb4:	add	r3, r4, #2
   11fb8:	cmp	r3, r9
   11fbc:	ldr	r5, [sp, #52]	; 0x34
   11fc0:	movcc	r2, #39	; 0x27
   11fc4:	strbcc	r2, [r8, r3]
   11fc8:	add	r4, r4, #3
   11fcc:	mov	fp, r6
   11fd0:	str	r5, [sp, #68]	; 0x44
   11fd4:	str	r6, [sp, #48]	; 0x30
   11fd8:	b	12274 <putchar_unlocked@plt+0x13a0>
   11fdc:	cmp	r7, #94	; 0x5e
   11fe0:	beq	11f48 <putchar_unlocked@plt+0x1074>
   11fe4:	bhi	1203c <putchar_unlocked@plt+0x1168>
   11fe8:	cmp	r7, #90	; 0x5a
   11fec:	bhi	12024 <putchar_unlocked@plt+0x1150>
   11ff0:	cmp	r7, #65	; 0x41
   11ff4:	bcs	12030 <putchar_unlocked@plt+0x115c>
   11ff8:	cmp	r7, #62	; 0x3e
   11ffc:	bls	11f48 <putchar_unlocked@plt+0x1074>
   12000:	cmp	r7, #63	; 0x3f
   12004:	bne	11eac <putchar_unlocked@plt+0xfd8>
   12008:	cmp	sl, #2
   1200c:	beq	121b0 <putchar_unlocked@plt+0x12dc>
   12010:	cmp	sl, #5
   12014:	beq	121c0 <putchar_unlocked@plt+0x12ec>
   12018:	mov	fp, #0
   1201c:	mov	r5, fp
   12020:	b	12274 <putchar_unlocked@plt+0x13a0>
   12024:	cmp	r7, #92	; 0x5c
   12028:	beq	1234c <putchar_unlocked@plt+0x1478>
   1202c:	bls	11f48 <putchar_unlocked@plt+0x1074>
   12030:	ldr	r5, [sp, #52]	; 0x34
   12034:	mov	fp, #0
   12038:	b	12274 <putchar_unlocked@plt+0x13a0>
   1203c:	cmp	r7, #122	; 0x7a
   12040:	bhi	12060 <putchar_unlocked@plt+0x118c>
   12044:	cmp	r7, #97	; 0x61
   12048:	bcs	12030 <putchar_unlocked@plt+0x115c>
   1204c:	cmp	r7, #95	; 0x5f
   12050:	beq	12030 <putchar_unlocked@plt+0x115c>
   12054:	cmp	r7, #96	; 0x60
   12058:	bne	11eac <putchar_unlocked@plt+0xfd8>
   1205c:	b	11f48 <putchar_unlocked@plt+0x1074>
   12060:	cmp	r7, #124	; 0x7c
   12064:	beq	11f48 <putchar_unlocked@plt+0x1074>
   12068:	bcc	123f8 <putchar_unlocked@plt+0x1524>
   1206c:	cmp	r7, #125	; 0x7d
   12070:	beq	123f8 <putchar_unlocked@plt+0x1524>
   12074:	cmp	r7, #126	; 0x7e
   12078:	bne	11eac <putchar_unlocked@plt+0xfd8>
   1207c:	ldr	r3, [sp, #28]
   12080:	cmp	r3, #0
   12084:	bne	121b8 <putchar_unlocked@plt+0x12e4>
   12088:	ldr	r5, [sp, #52]	; 0x34
   1208c:	cmp	sl, #2
   12090:	movne	fp, #0
   12094:	andeq	fp, r6, #1
   12098:	cmp	fp, #0
   1209c:	beq	12274 <putchar_unlocked@plt+0x13a0>
   120a0:	b	11f2c <putchar_unlocked@plt+0x1058>
   120a4:	mov	r3, #98	; 0x62
   120a8:	ldr	r2, [sp, #24]
   120ac:	cmp	r2, #0
   120b0:	beq	121b8 <putchar_unlocked@plt+0x12e4>
   120b4:	mov	r7, r3
   120b8:	mov	r5, #0
   120bc:	b	122cc <putchar_unlocked@plt+0x13f8>
   120c0:	ldr	r3, [sp, #24]
   120c4:	cmp	r3, #0
   120c8:	beq	12194 <putchar_unlocked@plt+0x12c0>
   120cc:	cmp	r6, #0
   120d0:	bne	11dfc <putchar_unlocked@plt+0xf28>
   120d4:	ldr	r3, [sp, #48]	; 0x30
   120d8:	eor	r2, r3, #1
   120dc:	cmp	sl, #2
   120e0:	movne	r2, #0
   120e4:	andeq	r2, r2, #1
   120e8:	cmp	r2, #0
   120ec:	moveq	r3, r4
   120f0:	beq	12128 <putchar_unlocked@plt+0x1254>
   120f4:	cmp	r9, r4
   120f8:	movhi	r3, #39	; 0x27
   120fc:	strbhi	r3, [r8, r4]
   12100:	add	r3, r4, #1
   12104:	cmp	r9, r3
   12108:	movhi	r1, #36	; 0x24
   1210c:	strbhi	r1, [r8, r3]
   12110:	add	r3, r4, #2
   12114:	cmp	r9, r3
   12118:	movhi	r1, #39	; 0x27
   1211c:	strbhi	r1, [r8, r3]
   12120:	add	r3, r4, #3
   12124:	str	r2, [sp, #48]	; 0x30
   12128:	cmp	r9, r3
   1212c:	movhi	r2, #92	; 0x5c
   12130:	strbhi	r2, [r8, r3]
   12134:	cmp	fp, #0
   12138:	add	r4, r3, #1
   1213c:	beq	126cc <putchar_unlocked@plt+0x17f8>
   12140:	ldr	r2, [sp, #28]
   12144:	ldr	r1, [sp, #36]	; 0x24
   12148:	add	r2, r2, #1
   1214c:	cmp	r1, r2
   12150:	bls	1218c <putchar_unlocked@plt+0x12b8>
   12154:	ldr	r1, [sp, #44]	; 0x2c
   12158:	mov	r7, #48	; 0x30
   1215c:	ldrb	r2, [r1, r2]
   12160:	sub	r2, r2, #48	; 0x30
   12164:	cmp	r2, #9
   12168:	movhi	r5, r6
   1216c:	bhi	12274 <putchar_unlocked@plt+0x13a0>
   12170:	cmp	r9, r4
   12174:	add	r2, r3, #2
   12178:	strbhi	r7, [r8, r4]
   1217c:	cmp	r9, r2
   12180:	add	r4, r3, #3
   12184:	movhi	r1, #48	; 0x30
   12188:	strbhi	r1, [r8, r2]
   1218c:	mov	r5, r6
   12190:	b	126d4 <putchar_unlocked@plt+0x1800>
   12194:	ldr	r3, [sp, #148]	; 0x94
   12198:	tst	r3, #1
   1219c:	ldreq	r5, [sp, #24]
   121a0:	beq	126e0 <putchar_unlocked@plt+0x180c>
   121a4:	ldr	r3, [sp, #28]
   121a8:	add	r3, r3, #1
   121ac:	b	11b4c <putchar_unlocked@plt+0xc78>
   121b0:	cmp	r6, #0
   121b4:	bne	11e00 <putchar_unlocked@plt+0xf2c>
   121b8:	mov	r5, #0
   121bc:	b	12034 <putchar_unlocked@plt+0x1160>
   121c0:	ldr	r3, [sp, #148]	; 0x94
   121c4:	tst	r3, #4
   121c8:	beq	121b8 <putchar_unlocked@plt+0x12e4>
   121cc:	ldr	r3, [sp, #28]
   121d0:	add	r2, r3, #2
   121d4:	ldr	r3, [sp, #36]	; 0x24
   121d8:	cmp	r3, r2
   121dc:	bls	121b8 <putchar_unlocked@plt+0x12e4>
   121e0:	ldr	r3, [sp, #44]	; 0x2c
   121e4:	ldr	r1, [sp, #28]
   121e8:	add	r3, r3, r1
   121ec:	ldrb	r0, [r3, #1]
   121f0:	cmp	r0, #63	; 0x3f
   121f4:	bne	121b8 <putchar_unlocked@plt+0x12e4>
   121f8:	ldr	r3, [sp, #44]	; 0x2c
   121fc:	ldrb	r1, [r3, r2]
   12200:	sub	r3, r1, #33	; 0x21
   12204:	uxtb	r3, r3
   12208:	cmp	r3, #29
   1220c:	bhi	126dc <putchar_unlocked@plt+0x1808>
   12210:	mov	ip, #1
   12214:	ldr	r5, [pc, #1428]	; 127b0 <putchar_unlocked@plt+0x18dc>
   12218:	ands	r5, r5, ip, lsl r3
   1221c:	beq	12034 <putchar_unlocked@plt+0x1160>
   12220:	cmp	r6, #0
   12224:	bne	11e00 <putchar_unlocked@plt+0xf2c>
   12228:	add	r3, r4, #1
   1222c:	cmp	r9, r4
   12230:	strbhi	r0, [r8, r4]
   12234:	cmp	r9, r3
   12238:	movhi	r0, #34	; 0x22
   1223c:	strbhi	r0, [r8, r3]
   12240:	add	r3, r4, #2
   12244:	cmp	r9, r3
   12248:	movhi	r0, #34	; 0x22
   1224c:	strbhi	r0, [r8, r3]
   12250:	add	r3, r4, #3
   12254:	cmp	r9, r3
   12258:	add	r4, r4, #4
   1225c:	mov	r5, r6
   12260:	mov	fp, r6
   12264:	mov	r7, r1
   12268:	movhi	r0, #63	; 0x3f
   1226c:	strbhi	r0, [r8, r3]
   12270:	str	r2, [sp, #28]
   12274:	ldr	r3, [sp, #24]
   12278:	eor	r3, r3, #1
   1227c:	cmp	sl, #2
   12280:	orreq	r3, r3, #1
   12284:	eor	r3, r3, #1
   12288:	orr	r3, r6, r3
   1228c:	tst	r3, #255	; 0xff
   12290:	beq	122c0 <putchar_unlocked@plt+0x13ec>
   12294:	ldr	r3, [sp, #152]	; 0x98
   12298:	cmp	r3, #0
   1229c:	beq	122c0 <putchar_unlocked@plt+0x13ec>
   122a0:	lsr	r2, r7, #5
   122a4:	ldr	r1, [sp, #152]	; 0x98
   122a8:	uxtb	r2, r2
   122ac:	and	r3, r7, #31
   122b0:	ldr	r2, [r1, r2, lsl #2]
   122b4:	lsr	r3, r2, r3
   122b8:	tst	r3, #1
   122bc:	bne	122cc <putchar_unlocked@plt+0x13f8>
   122c0:	ldr	r3, [sp, #64]	; 0x40
   122c4:	cmp	r3, #0
   122c8:	beq	12364 <putchar_unlocked@plt+0x1490>
   122cc:	cmp	r6, #0
   122d0:	bne	11e00 <putchar_unlocked@plt+0xf2c>
   122d4:	ldr	r3, [sp, #48]	; 0x30
   122d8:	eor	r3, r3, #1
   122dc:	cmp	sl, #2
   122e0:	movne	r3, #0
   122e4:	andeq	r3, r3, #1
   122e8:	cmp	r3, #0
   122ec:	beq	12324 <putchar_unlocked@plt+0x1450>
   122f0:	cmp	r9, r4
   122f4:	movhi	r2, #39	; 0x27
   122f8:	strbhi	r2, [r8, r4]
   122fc:	add	r2, r4, #1
   12300:	cmp	r9, r2
   12304:	movhi	r1, #36	; 0x24
   12308:	strbhi	r1, [r8, r2]
   1230c:	add	r2, r4, #2
   12310:	cmp	r9, r2
   12314:	add	r4, r4, #3
   12318:	movhi	r1, #39	; 0x27
   1231c:	strbhi	r1, [r8, r2]
   12320:	str	r3, [sp, #48]	; 0x30
   12324:	cmp	r9, r4
   12328:	movhi	r3, #92	; 0x5c
   1232c:	strbhi	r3, [r8, r4]
   12330:	ldr	fp, [sp, #52]	; 0x34
   12334:	add	r4, r4, #1
   12338:	b	12364 <putchar_unlocked@plt+0x1490>
   1233c:	mov	r3, #116	; 0x74
   12340:	b	11f18 <putchar_unlocked@plt+0x1044>
   12344:	mov	r3, #118	; 0x76
   12348:	b	120a8 <putchar_unlocked@plt+0x11d4>
   1234c:	cmp	sl, #2
   12350:	bne	123c0 <putchar_unlocked@plt+0x14ec>
   12354:	cmp	r6, #0
   12358:	bne	11e00 <putchar_unlocked@plt+0xf2c>
   1235c:	mov	r5, r6
   12360:	mov	fp, r6
   12364:	ldr	r3, [sp, #48]	; 0x30
   12368:	eor	fp, fp, #1
   1236c:	and	fp, fp, r3
   12370:	tst	fp, #255	; 0xff
   12374:	beq	123a0 <putchar_unlocked@plt+0x14cc>
   12378:	cmp	r9, r4
   1237c:	movhi	r3, #39	; 0x27
   12380:	strbhi	r3, [r8, r4]
   12384:	add	r3, r4, #1
   12388:	cmp	r9, r3
   1238c:	movhi	r2, #39	; 0x27
   12390:	add	r4, r4, #2
   12394:	strbhi	r2, [r8, r3]
   12398:	mov	r3, #0
   1239c:	str	r3, [sp, #48]	; 0x30
   123a0:	cmp	r9, r4
   123a4:	strbhi	r7, [r8, r4]
   123a8:	ldr	r3, [sp, #72]	; 0x48
   123ac:	cmp	r5, #0
   123b0:	moveq	r3, #0
   123b4:	add	r4, r4, #1
   123b8:	str	r3, [sp, #72]	; 0x48
   123bc:	b	121a4 <putchar_unlocked@plt+0x12d0>
   123c0:	ldr	r3, [sp, #24]
   123c4:	and	r3, r3, r6
   123c8:	tst	r5, r3
   123cc:	moveq	r3, r7
   123d0:	beq	11f18 <putchar_unlocked@plt+0x1044>
   123d4:	mov	fp, #0
   123d8:	mov	r5, fp
   123dc:	b	12364 <putchar_unlocked@plt+0x1490>
   123e0:	mov	r3, #110	; 0x6e
   123e4:	b	11f18 <putchar_unlocked@plt+0x1044>
   123e8:	mov	r3, #97	; 0x61
   123ec:	b	120a8 <putchar_unlocked@plt+0x11d4>
   123f0:	mov	r3, #102	; 0x66
   123f4:	b	120a8 <putchar_unlocked@plt+0x11d4>
   123f8:	ldr	r3, [sp, #36]	; 0x24
   123fc:	cmn	r3, #1
   12400:	bne	12420 <putchar_unlocked@plt+0x154c>
   12404:	ldr	r3, [sp, #44]	; 0x2c
   12408:	ldrb	r3, [r3, #1]
   1240c:	adds	r3, r3, #0
   12410:	movne	r3, #1
   12414:	cmp	r3, #0
   12418:	bne	121b8 <putchar_unlocked@plt+0x12e4>
   1241c:	b	1207c <putchar_unlocked@plt+0x11a8>
   12420:	ldr	r3, [sp, #36]	; 0x24
   12424:	subs	r3, r3, #1
   12428:	b	12410 <putchar_unlocked@plt+0x153c>
   1242c:	mov	r3, #0
   12430:	str	r3, [sp, #96]	; 0x60
   12434:	str	r3, [sp, #100]	; 0x64
   12438:	ldr	r3, [sp, #36]	; 0x24
   1243c:	cmn	r3, #1
   12440:	bne	12450 <putchar_unlocked@plt+0x157c>
   12444:	ldr	r0, [sp, #44]	; 0x2c
   12448:	bl	10de4 <strlen@plt>
   1244c:	str	r0, [sp, #36]	; 0x24
   12450:	ldr	r5, [sp, #52]	; 0x34
   12454:	mov	r3, #0
   12458:	str	r3, [sp, #56]	; 0x38
   1245c:	ldr	r3, [sp, #28]
   12460:	ldr	r2, [sp, #56]	; 0x38
   12464:	ldr	r1, [sp, #36]	; 0x24
   12468:	add	r2, r3, r2
   1246c:	ldr	r3, [sp, #44]	; 0x2c
   12470:	add	r0, sp, #92	; 0x5c
   12474:	add	fp, r3, r2
   12478:	sub	r2, r1, r2
   1247c:	add	r3, sp, #96	; 0x60
   12480:	mov	r1, fp
   12484:	bl	13bf0 <putchar_unlocked@plt+0x2d1c>
   12488:	subs	r2, r0, #0
   1248c:	beq	124cc <putchar_unlocked@plt+0x15f8>
   12490:	cmn	r2, #1
   12494:	beq	126a4 <putchar_unlocked@plt+0x17d0>
   12498:	cmn	r2, #2
   1249c:	bne	12614 <putchar_unlocked@plt+0x1740>
   124a0:	ldr	r2, [sp, #56]	; 0x38
   124a4:	ldr	r3, [sp, #28]
   124a8:	add	r3, r3, r2
   124ac:	ldr	r2, [sp, #36]	; 0x24
   124b0:	cmp	r2, r3
   124b4:	bls	126a4 <putchar_unlocked@plt+0x17d0>
   124b8:	ldr	r3, [sp, #80]	; 0x50
   124bc:	ldr	r2, [sp, #56]	; 0x38
   124c0:	ldrb	r5, [r3, r2]
   124c4:	cmp	r5, #0
   124c8:	bne	12604 <putchar_unlocked@plt+0x1730>
   124cc:	ldr	r3, [sp, #56]	; 0x38
   124d0:	cmp	r3, #1
   124d4:	bls	11edc <putchar_unlocked@plt+0x1008>
   124d8:	ldr	r2, [sp, #56]	; 0x38
   124dc:	ldr	r3, [sp, #28]
   124e0:	mov	fp, #0
   124e4:	add	r3, r3, r2
   124e8:	ldr	r2, [sp, #24]
   124ec:	str	r3, [sp, #52]	; 0x34
   124f0:	eor	r3, r5, #1
   124f4:	and	r3, r3, r2
   124f8:	mov	ip, #92	; 0x5c
   124fc:	uxtb	r3, r3
   12500:	mov	r2, #39	; 0x27
   12504:	cmp	r3, #0
   12508:	beq	126ac <putchar_unlocked@plt+0x17d8>
   1250c:	cmp	r6, #0
   12510:	bne	11dfc <putchar_unlocked@plt+0xf28>
   12514:	ldr	r1, [sp, #48]	; 0x30
   12518:	eor	r1, r1, #1
   1251c:	cmp	sl, #2
   12520:	movne	r1, #0
   12524:	andeq	r1, r1, #1
   12528:	cmp	r1, #0
   1252c:	beq	1255c <putchar_unlocked@plt+0x1688>
   12530:	add	r0, r4, #1
   12534:	cmp	r9, r4
   12538:	strbhi	r2, [r8, r4]
   1253c:	cmp	r9, r0
   12540:	movhi	lr, #36	; 0x24
   12544:	strbhi	lr, [r8, r0]
   12548:	add	r0, r4, #2
   1254c:	add	r4, r4, #3
   12550:	cmp	r9, r0
   12554:	strbhi	r2, [r8, r0]
   12558:	str	r1, [sp, #48]	; 0x30
   1255c:	add	r0, r4, #1
   12560:	cmp	r9, r4
   12564:	strbhi	ip, [r8, r4]
   12568:	cmp	r9, r0
   1256c:	lsrhi	r1, r7, #6
   12570:	addhi	r1, r1, #48	; 0x30
   12574:	strbhi	r1, [r8, r0]
   12578:	add	r0, r4, #2
   1257c:	cmp	r9, r0
   12580:	lsrhi	r1, r7, #3
   12584:	and	r7, r7, #7
   12588:	andhi	r1, r1, #7
   1258c:	add	r4, r4, #3
   12590:	add	r7, r7, #48	; 0x30
   12594:	mov	fp, r3
   12598:	addhi	r1, r1, #48	; 0x30
   1259c:	strbhi	r1, [r8, r0]
   125a0:	ldr	r1, [sp, #28]
   125a4:	ldr	r0, [sp, #52]	; 0x34
   125a8:	add	r1, r1, #1
   125ac:	cmp	r0, r1
   125b0:	bls	12364 <putchar_unlocked@plt+0x1490>
   125b4:	ldr	lr, [sp, #48]	; 0x30
   125b8:	eor	r0, fp, #1
   125bc:	and	r0, r0, lr
   125c0:	tst	r0, #255	; 0xff
   125c4:	beq	125e8 <putchar_unlocked@plt+0x1714>
   125c8:	add	r0, r4, #1
   125cc:	cmp	r9, r4
   125d0:	strbhi	r2, [r8, r4]
   125d4:	cmp	r9, r0
   125d8:	add	r4, r4, #2
   125dc:	strbhi	r2, [r8, r0]
   125e0:	mov	r0, #0
   125e4:	str	r0, [sp, #48]	; 0x30
   125e8:	ldr	r0, [sp, #44]	; 0x2c
   125ec:	cmp	r9, r4
   125f0:	strbhi	r7, [r8, r4]
   125f4:	str	r1, [sp, #28]
   125f8:	add	r4, r4, #1
   125fc:	ldrb	r7, [r0, r1]
   12600:	b	12504 <putchar_unlocked@plt+0x1630>
   12604:	ldr	r3, [sp, #56]	; 0x38
   12608:	add	r3, r3, #1
   1260c:	str	r3, [sp, #56]	; 0x38
   12610:	b	124a0 <putchar_unlocked@plt+0x15cc>
   12614:	cmp	sl, #2
   12618:	movne	r3, #0
   1261c:	andeq	r3, r6, #1
   12620:	cmp	r3, #0
   12624:	movne	r1, #1
   12628:	bne	12684 <putchar_unlocked@plt+0x17b0>
   1262c:	ldr	r0, [sp, #92]	; 0x5c
   12630:	str	r2, [sp, #84]	; 0x54
   12634:	bl	10d30 <iswprint@plt>
   12638:	ldr	r3, [sp, #56]	; 0x38
   1263c:	ldr	r2, [sp, #84]	; 0x54
   12640:	add	r3, r3, r2
   12644:	str	r3, [sp, #56]	; 0x38
   12648:	cmp	r0, #0
   1264c:	add	r0, sp, #96	; 0x60
   12650:	moveq	r5, #0
   12654:	bl	10ce8 <mbsinit@plt>
   12658:	cmp	r0, #0
   1265c:	beq	1245c <putchar_unlocked@plt+0x1588>
   12660:	b	124cc <putchar_unlocked@plt+0x15f8>
   12664:	ldrb	r3, [fp, r1]
   12668:	cmp	r3, #94	; 0x5e
   1266c:	beq	11f2c <putchar_unlocked@plt+0x1058>
   12670:	bhi	12690 <putchar_unlocked@plt+0x17bc>
   12674:	sub	r3, r3, #91	; 0x5b
   12678:	cmp	r3, #1
   1267c:	bls	11f2c <putchar_unlocked@plt+0x1058>
   12680:	add	r1, r1, #1
   12684:	cmp	r1, r2
   12688:	bne	12664 <putchar_unlocked@plt+0x1790>
   1268c:	b	1262c <putchar_unlocked@plt+0x1758>
   12690:	cmp	r3, #96	; 0x60
   12694:	beq	11f2c <putchar_unlocked@plt+0x1058>
   12698:	cmp	r3, #124	; 0x7c
   1269c:	bne	12680 <putchar_unlocked@plt+0x17ac>
   126a0:	b	11f2c <putchar_unlocked@plt+0x1058>
   126a4:	mov	r5, #0
   126a8:	b	124cc <putchar_unlocked@plt+0x15f8>
   126ac:	ldr	r1, [sp, #64]	; 0x40
   126b0:	cmp	r1, #0
   126b4:	beq	125a0 <putchar_unlocked@plt+0x16cc>
   126b8:	cmp	r9, r4
   126bc:	strbhi	ip, [r8, r4]
   126c0:	str	r3, [sp, #64]	; 0x40
   126c4:	add	r4, r4, #1
   126c8:	b	125a0 <putchar_unlocked@plt+0x16cc>
   126cc:	mov	r5, fp
   126d0:	ldr	fp, [sp, #24]
   126d4:	mov	r7, #48	; 0x30
   126d8:	b	12274 <putchar_unlocked@plt+0x13a0>
   126dc:	mov	r5, #0
   126e0:	mov	fp, r5
   126e4:	b	12274 <putchar_unlocked@plt+0x13a0>
   126e8:	ldr	r3, [sp, #36]	; 0x24
   126ec:	ldr	r2, [sp, #28]
   126f0:	subs	r3, r3, r2
   126f4:	movne	r3, #1
   126f8:	b	11b70 <putchar_unlocked@plt+0xc9c>
   126fc:	ldr	r3, [sp, #60]	; 0x3c
   12700:	clz	r7, r9
   12704:	cmp	r3, #0
   12708:	lsr	r7, r7, #5
   1270c:	moveq	r7, #0
   12710:	cmp	r7, #0
   12714:	mov	r5, r3
   12718:	bne	11ad0 <putchar_unlocked@plt+0xbfc>
   1271c:	ldr	r3, [sp, #68]	; 0x44
   12720:	ldr	r2, [sp, #40]	; 0x28
   12724:	cmp	r2, #0
   12728:	moveq	r3, #0
   1272c:	andne	r3, r3, #1
   12730:	cmp	r3, #0
   12734:	movne	r3, r2
   12738:	subne	r2, r3, #1
   1273c:	bne	1276c <putchar_unlocked@plt+0x1898>
   12740:	cmp	r9, r4
   12744:	movhi	r3, #0
   12748:	strbhi	r3, [r8, r4]
   1274c:	mov	r0, r4
   12750:	add	sp, sp, #108	; 0x6c
   12754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12758:	mov	r3, r2
   1275c:	b	12720 <putchar_unlocked@plt+0x184c>
   12760:	cmp	r9, r4
   12764:	strbhi	r3, [r8, r4]
   12768:	add	r4, r4, #1
   1276c:	ldrb	r3, [r2, #1]!
   12770:	cmp	r3, #0
   12774:	bne	12760 <putchar_unlocked@plt+0x188c>
   12778:	b	12740 <putchar_unlocked@plt+0x186c>
   1277c:	ldr	r3, [pc, #32]	; 127a4 <putchar_unlocked@plt+0x18d0>
   12780:	mov	r6, #1
   12784:	str	r6, [sp, #24]
   12788:	str	r6, [sp, #32]
   1278c:	str	r3, [sp, #40]	; 0x28
   12790:	mov	r4, #0
   12794:	mov	sl, #5
   12798:	b	11b40 <putchar_unlocked@plt+0xc6c>
   1279c:	mov	r6, #1
   127a0:	b	11d34 <putchar_unlocked@plt+0xe60>
   127a4:	andeq	r4, r1, r7, asr sl
   127a8:	andeq	r4, r1, fp, asr sl
   127ac:	andeq	r4, r1, r9, asr sl
   127b0:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   127b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127b8:	sub	sp, sp, #52	; 0x34
   127bc:	mov	r6, r0
   127c0:	mov	r5, r3
   127c4:	mov	r8, r1
   127c8:	mov	r9, r2
   127cc:	bl	10df0 <__errno_location@plt>
   127d0:	ldr	r7, [pc, #380]	; 12954 <putchar_unlocked@plt+0x1a80>
   127d4:	cmn	r6, #-2147483647	; 0x80000001
   127d8:	ldr	r4, [r7]
   127dc:	ldr	r3, [r0]
   127e0:	str	r0, [sp, #24]
   127e4:	str	r3, [sp, #32]
   127e8:	movne	r3, #0
   127ec:	moveq	r3, #1
   127f0:	orrs	r3, r3, r6, lsr #31
   127f4:	beq	127fc <putchar_unlocked@plt+0x1928>
   127f8:	bl	10ebc <abort@plt>
   127fc:	ldr	r2, [r7, #4]
   12800:	cmp	r6, r2
   12804:	blt	12874 <putchar_unlocked@plt+0x19a0>
   12808:	add	r1, sp, #48	; 0x30
   1280c:	add	sl, r7, #8
   12810:	str	r2, [r1, #-4]!
   12814:	cmp	r4, sl
   12818:	mov	r3, #8
   1281c:	sub	r2, r6, r2
   12820:	movne	r0, r4
   12824:	str	r3, [sp]
   12828:	add	r2, r2, #1
   1282c:	mvn	r3, #-2147483648	; 0x80000000
   12830:	moveq	r0, #0
   12834:	bl	13548 <putchar_unlocked@plt+0x2674>
   12838:	cmp	r4, sl
   1283c:	ldr	r2, [sp, #44]	; 0x2c
   12840:	mov	fp, r0
   12844:	str	r0, [r7]
   12848:	ldmeq	r4, {r0, r1}
   1284c:	mov	r4, fp
   12850:	stmeq	fp, {r0, r1}
   12854:	ldr	r0, [r7, #4]
   12858:	mov	r1, #0
   1285c:	sub	r2, r2, r0
   12860:	add	r0, fp, r0, lsl #3
   12864:	lsl	r2, r2, #3
   12868:	bl	10e20 <memset@plt>
   1286c:	ldr	r3, [sp, #44]	; 0x2c
   12870:	str	r3, [r7, #4]
   12874:	ldr	r3, [r5, #4]
   12878:	add	sl, r4, r6, lsl #3
   1287c:	orr	r3, r3, #1
   12880:	str	r3, [sp, #28]
   12884:	add	r3, r5, #8
   12888:	str	r3, [sp, #36]	; 0x24
   1288c:	ldr	r3, [r5, #44]	; 0x2c
   12890:	ldr	fp, [r4, r6, lsl #3]
   12894:	ldr	r7, [sl, #4]
   12898:	str	r3, [sp, #16]
   1289c:	ldr	r3, [r5, #40]	; 0x28
   128a0:	mov	r2, r8
   128a4:	str	r3, [sp, #12]
   128a8:	add	r3, r5, #8
   128ac:	str	r3, [sp, #8]
   128b0:	ldr	r3, [sp, #28]
   128b4:	mov	r1, fp
   128b8:	str	r3, [sp, #4]
   128bc:	ldr	r3, [r5]
   128c0:	mov	r0, r7
   128c4:	str	r3, [sp]
   128c8:	mov	r3, r9
   128cc:	bl	11a80 <putchar_unlocked@plt+0xbac>
   128d0:	cmp	fp, r0
   128d4:	bhi	1293c <putchar_unlocked@plt+0x1a68>
   128d8:	ldr	r3, [pc, #120]	; 12958 <putchar_unlocked@plt+0x1a84>
   128dc:	add	fp, r0, #1
   128e0:	cmp	r7, r3
   128e4:	str	fp, [r4, r6, lsl #3]
   128e8:	beq	128f4 <putchar_unlocked@plt+0x1a20>
   128ec:	mov	r0, r7
   128f0:	bl	117d4 <putchar_unlocked@plt+0x900>
   128f4:	mov	r0, fp
   128f8:	bl	13400 <putchar_unlocked@plt+0x252c>
   128fc:	ldr	r3, [r5, #44]	; 0x2c
   12900:	mov	r2, r8
   12904:	mov	r1, fp
   12908:	str	r0, [sl, #4]
   1290c:	str	r3, [sp, #16]
   12910:	ldr	r3, [r5, #40]	; 0x28
   12914:	mov	r7, r0
   12918:	str	r3, [sp, #12]
   1291c:	add	r3, r5, #8
   12920:	str	r3, [sp, #8]
   12924:	ldr	r3, [sp, #28]
   12928:	str	r3, [sp, #4]
   1292c:	ldr	r3, [r5]
   12930:	str	r3, [sp]
   12934:	mov	r3, r9
   12938:	bl	11a80 <putchar_unlocked@plt+0xbac>
   1293c:	ldr	r3, [sp, #24]
   12940:	ldr	r2, [sp, #32]
   12944:	mov	r0, r7
   12948:	str	r2, [r3]
   1294c:	add	sp, sp, #52	; 0x34
   12950:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12954:	strdeq	r5, [r2], -r4
   12958:	andeq	r5, r2, r4, ror r1
   1295c:	push	{r4, r5, r6, lr}
   12960:	mov	r5, r0
   12964:	bl	10df0 <__errno_location@plt>
   12968:	cmp	r5, #0
   1296c:	mov	r1, #48	; 0x30
   12970:	ldr	r6, [r0]
   12974:	mov	r4, r0
   12978:	ldr	r0, [pc, #12]	; 1298c <putchar_unlocked@plt+0x1ab8>
   1297c:	movne	r0, r5
   12980:	bl	137dc <putchar_unlocked@plt+0x2908>
   12984:	str	r6, [r4]
   12988:	pop	{r4, r5, r6, pc}
   1298c:	andeq	r5, r2, r4, ror r2
   12990:	ldr	r3, [pc, #12]	; 129a4 <putchar_unlocked@plt+0x1ad0>
   12994:	cmp	r0, #0
   12998:	moveq	r0, r3
   1299c:	ldr	r0, [r0]
   129a0:	bx	lr
   129a4:	andeq	r5, r2, r4, ror r2
   129a8:	ldr	r3, [pc, #12]	; 129bc <putchar_unlocked@plt+0x1ae8>
   129ac:	cmp	r0, #0
   129b0:	moveq	r0, r3
   129b4:	str	r1, [r0]
   129b8:	bx	lr
   129bc:	andeq	r5, r2, r4, ror r2
   129c0:	ldr	r3, [pc, #52]	; 129fc <putchar_unlocked@plt+0x1b28>
   129c4:	cmp	r0, #0
   129c8:	moveq	r0, r3
   129cc:	add	r3, r0, #8
   129d0:	push	{lr}		; (str lr, [sp, #-4]!)
   129d4:	lsr	lr, r1, #5
   129d8:	and	r1, r1, #31
   129dc:	ldr	ip, [r3, lr, lsl #2]
   129e0:	lsr	r0, ip, r1
   129e4:	eor	r2, r2, r0
   129e8:	and	r2, r2, #1
   129ec:	and	r0, r0, #1
   129f0:	eor	r1, ip, r2, lsl r1
   129f4:	str	r1, [r3, lr, lsl #2]
   129f8:	pop	{pc}		; (ldr pc, [sp], #4)
   129fc:	andeq	r5, r2, r4, ror r2
   12a00:	ldr	r3, [pc, #16]	; 12a18 <putchar_unlocked@plt+0x1b44>
   12a04:	cmp	r0, #0
   12a08:	movne	r3, r0
   12a0c:	ldr	r0, [r3, #4]
   12a10:	str	r1, [r3, #4]
   12a14:	bx	lr
   12a18:	andeq	r5, r2, r4, ror r2
   12a1c:	ldr	r3, [pc, #44]	; 12a50 <putchar_unlocked@plt+0x1b7c>
   12a20:	cmp	r0, #0
   12a24:	moveq	r0, r3
   12a28:	mov	r3, #10
   12a2c:	cmp	r2, #0
   12a30:	cmpne	r1, #0
   12a34:	str	r3, [r0]
   12a38:	bne	12a44 <putchar_unlocked@plt+0x1b70>
   12a3c:	push	{r4, lr}
   12a40:	bl	10ebc <abort@plt>
   12a44:	str	r1, [r0, #40]	; 0x28
   12a48:	str	r2, [r0, #44]	; 0x2c
   12a4c:	bx	lr
   12a50:	andeq	r5, r2, r4, ror r2
   12a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a58:	sub	sp, sp, #24
   12a5c:	mov	sl, r3
   12a60:	ldr	r4, [sp, #56]	; 0x38
   12a64:	ldr	r3, [pc, #100]	; 12ad0 <putchar_unlocked@plt+0x1bfc>
   12a68:	cmp	r4, #0
   12a6c:	moveq	r4, r3
   12a70:	mov	r7, r0
   12a74:	mov	r8, r1
   12a78:	mov	r9, r2
   12a7c:	bl	10df0 <__errno_location@plt>
   12a80:	ldr	r3, [r4, #44]	; 0x2c
   12a84:	mov	r2, r9
   12a88:	mov	r1, r8
   12a8c:	ldr	r6, [r0]
   12a90:	str	r3, [sp, #16]
   12a94:	ldr	r3, [r4, #40]	; 0x28
   12a98:	mov	r5, r0
   12a9c:	str	r3, [sp, #12]
   12aa0:	add	r3, r4, #8
   12aa4:	str	r3, [sp, #8]
   12aa8:	ldr	r3, [r4, #4]
   12aac:	mov	r0, r7
   12ab0:	str	r3, [sp, #4]
   12ab4:	ldr	r3, [r4]
   12ab8:	str	r3, [sp]
   12abc:	mov	r3, sl
   12ac0:	bl	11a80 <putchar_unlocked@plt+0xbac>
   12ac4:	str	r6, [r5]
   12ac8:	add	sp, sp, #24
   12acc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ad0:	andeq	r5, r2, r4, ror r2
   12ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ad8:	cmp	r3, #0
   12adc:	sub	sp, sp, #44	; 0x2c
   12ae0:	ldr	r4, [pc, #188]	; 12ba4 <putchar_unlocked@plt+0x1cd0>
   12ae4:	mov	r6, r2
   12ae8:	movne	r4, r3
   12aec:	mov	sl, r1
   12af0:	mov	r9, r0
   12af4:	bl	10df0 <__errno_location@plt>
   12af8:	ldr	r5, [r4, #4]
   12afc:	add	fp, r4, #8
   12b00:	cmp	r6, #0
   12b04:	orreq	r5, r5, #1
   12b08:	mov	r1, #0
   12b0c:	mov	r2, r9
   12b10:	ldr	r3, [r0]
   12b14:	mov	r8, r0
   12b18:	str	r3, [sp, #28]
   12b1c:	ldr	r3, [r4, #44]	; 0x2c
   12b20:	mov	r0, r1
   12b24:	str	r3, [sp, #16]
   12b28:	ldr	r3, [r4, #40]	; 0x28
   12b2c:	stmib	sp, {r5, fp}
   12b30:	str	r3, [sp, #12]
   12b34:	ldr	r3, [r4]
   12b38:	str	r3, [sp]
   12b3c:	mov	r3, sl
   12b40:	bl	11a80 <putchar_unlocked@plt+0xbac>
   12b44:	add	r1, r0, #1
   12b48:	mov	r7, r0
   12b4c:	mov	r0, r1
   12b50:	str	r1, [sp, #36]	; 0x24
   12b54:	bl	13400 <putchar_unlocked@plt+0x252c>
   12b58:	ldr	r3, [r4, #44]	; 0x2c
   12b5c:	mov	r2, r9
   12b60:	str	r3, [sp, #16]
   12b64:	ldr	r3, [r4, #40]	; 0x28
   12b68:	stmib	sp, {r5, fp}
   12b6c:	str	r3, [sp, #12]
   12b70:	ldr	r3, [r4]
   12b74:	ldr	r1, [sp, #36]	; 0x24
   12b78:	str	r3, [sp]
   12b7c:	mov	r3, sl
   12b80:	str	r0, [sp, #32]
   12b84:	bl	11a80 <putchar_unlocked@plt+0xbac>
   12b88:	ldr	r3, [sp, #28]
   12b8c:	cmp	r6, #0
   12b90:	str	r3, [r8]
   12b94:	ldr	r0, [sp, #32]
   12b98:	strne	r7, [r6]
   12b9c:	add	sp, sp, #44	; 0x2c
   12ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba4:	andeq	r5, r2, r4, ror r2
   12ba8:	mov	r3, r2
   12bac:	mov	r2, #0
   12bb0:	b	12ad4 <putchar_unlocked@plt+0x1c00>
   12bb4:	push	{r4, r5, r6, r7, r8, lr}
   12bb8:	mov	r6, #1
   12bbc:	ldr	r4, [pc, #104]	; 12c2c <putchar_unlocked@plt+0x1d58>
   12bc0:	ldr	r5, [r4]
   12bc4:	add	r7, r5, #12
   12bc8:	ldr	r3, [r4, #4]
   12bcc:	add	r7, r7, #8
   12bd0:	cmp	r6, r3
   12bd4:	blt	12c1c <putchar_unlocked@plt+0x1d48>
   12bd8:	ldr	r0, [r5, #4]
   12bdc:	ldr	r6, [pc, #76]	; 12c30 <putchar_unlocked@plt+0x1d5c>
   12be0:	cmp	r0, r6
   12be4:	beq	12bf8 <putchar_unlocked@plt+0x1d24>
   12be8:	bl	117d4 <putchar_unlocked@plt+0x900>
   12bec:	mov	r3, #256	; 0x100
   12bf0:	str	r3, [r4, #8]
   12bf4:	str	r6, [r4, #12]
   12bf8:	ldr	r6, [pc, #52]	; 12c34 <putchar_unlocked@plt+0x1d60>
   12bfc:	cmp	r5, r6
   12c00:	beq	12c10 <putchar_unlocked@plt+0x1d3c>
   12c04:	mov	r0, r5
   12c08:	bl	117d4 <putchar_unlocked@plt+0x900>
   12c0c:	str	r6, [r4]
   12c10:	mov	r3, #1
   12c14:	str	r3, [r4, #4]
   12c18:	pop	{r4, r5, r6, r7, r8, pc}
   12c1c:	ldr	r0, [r7, #-8]
   12c20:	bl	117d4 <putchar_unlocked@plt+0x900>
   12c24:	add	r6, r6, #1
   12c28:	b	12bc8 <putchar_unlocked@plt+0x1cf4>
   12c2c:	strdeq	r5, [r2], -r4
   12c30:	andeq	r5, r2, r4, ror r1
   12c34:	strdeq	r5, [r2], -ip
   12c38:	ldr	r3, [pc, #4]	; 12c44 <putchar_unlocked@plt+0x1d70>
   12c3c:	mvn	r2, #0
   12c40:	b	127b4 <putchar_unlocked@plt+0x18e0>
   12c44:	andeq	r5, r2, r4, ror r2
   12c48:	ldr	r3, [pc]	; 12c50 <putchar_unlocked@plt+0x1d7c>
   12c4c:	b	127b4 <putchar_unlocked@plt+0x18e0>
   12c50:	andeq	r5, r2, r4, ror r2
   12c54:	mov	r1, r0
   12c58:	mov	r0, #0
   12c5c:	b	12c38 <putchar_unlocked@plt+0x1d64>
   12c60:	mov	r2, r1
   12c64:	mov	r1, r0
   12c68:	mov	r0, #0
   12c6c:	b	12c48 <putchar_unlocked@plt+0x1d74>
   12c70:	push	{r4, r5, lr}
   12c74:	sub	sp, sp, #52	; 0x34
   12c78:	mov	r5, r2
   12c7c:	mov	r4, r0
   12c80:	mov	r0, sp
   12c84:	bl	1193c <putchar_unlocked@plt+0xa68>
   12c88:	mov	r3, sp
   12c8c:	mvn	r2, #0
   12c90:	mov	r1, r5
   12c94:	mov	r0, r4
   12c98:	bl	127b4 <putchar_unlocked@plt+0x18e0>
   12c9c:	add	sp, sp, #52	; 0x34
   12ca0:	pop	{r4, r5, pc}
   12ca4:	push	{r4, r5, r6, lr}
   12ca8:	sub	sp, sp, #48	; 0x30
   12cac:	mov	r5, r2
   12cb0:	mov	r6, r3
   12cb4:	mov	r4, r0
   12cb8:	mov	r0, sp
   12cbc:	bl	1193c <putchar_unlocked@plt+0xa68>
   12cc0:	mov	r3, sp
   12cc4:	mov	r2, r6
   12cc8:	mov	r1, r5
   12ccc:	mov	r0, r4
   12cd0:	bl	127b4 <putchar_unlocked@plt+0x18e0>
   12cd4:	add	sp, sp, #48	; 0x30
   12cd8:	pop	{r4, r5, r6, pc}
   12cdc:	mov	r2, r1
   12ce0:	mov	r1, r0
   12ce4:	mov	r0, #0
   12ce8:	b	12c70 <putchar_unlocked@plt+0x1d9c>
   12cec:	mov	r3, r2
   12cf0:	mov	r2, r1
   12cf4:	mov	r1, r0
   12cf8:	mov	r0, #0
   12cfc:	b	12ca4 <putchar_unlocked@plt+0x1dd0>
   12d00:	push	{r4, r5, r6, lr}
   12d04:	mov	r4, r0
   12d08:	ldr	lr, [pc, #80]	; 12d60 <putchar_unlocked@plt+0x1e8c>
   12d0c:	mov	r5, r1
   12d10:	mov	r6, r2
   12d14:	ldm	lr!, {r0, r1, r2, r3}
   12d18:	sub	sp, sp, #48	; 0x30
   12d1c:	mov	ip, sp
   12d20:	stmia	ip!, {r0, r1, r2, r3}
   12d24:	ldm	lr!, {r0, r1, r2, r3}
   12d28:	stmia	ip!, {r0, r1, r2, r3}
   12d2c:	ldm	lr, {r0, r1, r2, r3}
   12d30:	stm	ip, {r0, r1, r2, r3}
   12d34:	mov	r1, r6
   12d38:	mov	r2, #1
   12d3c:	mov	r0, sp
   12d40:	bl	129c0 <putchar_unlocked@plt+0x1aec>
   12d44:	mov	r3, sp
   12d48:	mov	r2, r5
   12d4c:	mov	r1, r4
   12d50:	mov	r0, #0
   12d54:	bl	127b4 <putchar_unlocked@plt+0x18e0>
   12d58:	add	sp, sp, #48	; 0x30
   12d5c:	pop	{r4, r5, r6, pc}
   12d60:	andeq	r5, r2, r4, ror r2
   12d64:	mov	r2, r1
   12d68:	mvn	r1, #0
   12d6c:	b	12d00 <putchar_unlocked@plt+0x1e2c>
   12d70:	mov	r1, #58	; 0x3a
   12d74:	b	12d64 <putchar_unlocked@plt+0x1e90>
   12d78:	mov	r2, #58	; 0x3a
   12d7c:	b	12d00 <putchar_unlocked@plt+0x1e2c>
   12d80:	push	{r4, r5, lr}
   12d84:	sub	sp, sp, #100	; 0x64
   12d88:	mov	r4, r0
   12d8c:	mov	r0, sp
   12d90:	mov	r5, r2
   12d94:	bl	1193c <putchar_unlocked@plt+0xa68>
   12d98:	mov	ip, sp
   12d9c:	add	lr, sp, #48	; 0x30
   12da0:	ldm	ip!, {r0, r1, r2, r3}
   12da4:	stmia	lr!, {r0, r1, r2, r3}
   12da8:	ldm	ip!, {r0, r1, r2, r3}
   12dac:	stmia	lr!, {r0, r1, r2, r3}
   12db0:	ldm	ip, {r0, r1, r2, r3}
   12db4:	stm	lr, {r0, r1, r2, r3}
   12db8:	mov	r2, #1
   12dbc:	mov	r1, #58	; 0x3a
   12dc0:	add	r0, sp, #48	; 0x30
   12dc4:	bl	129c0 <putchar_unlocked@plt+0x1aec>
   12dc8:	add	r3, sp, #48	; 0x30
   12dcc:	mvn	r2, #0
   12dd0:	mov	r1, r5
   12dd4:	mov	r0, r4
   12dd8:	bl	127b4 <putchar_unlocked@plt+0x18e0>
   12ddc:	add	sp, sp, #100	; 0x64
   12de0:	pop	{r4, r5, pc}
   12de4:	push	{r4, r5, r6, r7, lr}
   12de8:	mov	r4, r0
   12dec:	ldr	lr, [pc, #84]	; 12e48 <putchar_unlocked@plt+0x1f74>
   12df0:	mov	r6, r1
   12df4:	mov	r7, r2
   12df8:	mov	r5, r3
   12dfc:	ldm	lr!, {r0, r1, r2, r3}
   12e00:	sub	sp, sp, #52	; 0x34
   12e04:	mov	ip, sp
   12e08:	stmia	ip!, {r0, r1, r2, r3}
   12e0c:	ldm	lr!, {r0, r1, r2, r3}
   12e10:	stmia	ip!, {r0, r1, r2, r3}
   12e14:	ldm	lr, {r0, r1, r2, r3}
   12e18:	stm	ip, {r0, r1, r2, r3}
   12e1c:	mov	r2, r7
   12e20:	mov	r1, r6
   12e24:	mov	r0, sp
   12e28:	bl	12a1c <putchar_unlocked@plt+0x1b48>
   12e2c:	mov	r3, sp
   12e30:	ldr	r2, [sp, #72]	; 0x48
   12e34:	mov	r1, r5
   12e38:	mov	r0, r4
   12e3c:	bl	127b4 <putchar_unlocked@plt+0x18e0>
   12e40:	add	sp, sp, #52	; 0x34
   12e44:	pop	{r4, r5, r6, r7, pc}
   12e48:	andeq	r5, r2, r4, ror r2
   12e4c:	mvn	ip, #0
   12e50:	push	{r0, r1, r2, lr}
   12e54:	str	ip, [sp]
   12e58:	bl	12de4 <putchar_unlocked@plt+0x1f10>
   12e5c:	add	sp, sp, #12
   12e60:	pop	{pc}		; (ldr pc, [sp], #4)
   12e64:	mov	r3, r2
   12e68:	mov	r2, r1
   12e6c:	mov	r1, r0
   12e70:	mov	r0, #0
   12e74:	b	12e4c <putchar_unlocked@plt+0x1f78>
   12e78:	push	{r0, r1, r2, lr}
   12e7c:	str	r3, [sp]
   12e80:	mov	r3, r2
   12e84:	mov	r2, r1
   12e88:	mov	r1, r0
   12e8c:	mov	r0, #0
   12e90:	bl	12de4 <putchar_unlocked@plt+0x1f10>
   12e94:	add	sp, sp, #12
   12e98:	pop	{pc}		; (ldr pc, [sp], #4)
   12e9c:	ldr	r3, [pc]	; 12ea4 <putchar_unlocked@plt+0x1fd0>
   12ea0:	b	127b4 <putchar_unlocked@plt+0x18e0>
   12ea4:	andeq	r5, r2, r4, lsl #2
   12ea8:	mov	r2, r1
   12eac:	mov	r1, r0
   12eb0:	mov	r0, #0
   12eb4:	b	12e9c <putchar_unlocked@plt+0x1fc8>
   12eb8:	mvn	r2, #0
   12ebc:	b	12e9c <putchar_unlocked@plt+0x1fc8>
   12ec0:	mov	r1, r0
   12ec4:	mov	r0, #0
   12ec8:	b	12eb8 <putchar_unlocked@plt+0x1fe4>
   12ecc:	push	{r4, r5, r6, lr}
   12ed0:	sub	sp, sp, #32
   12ed4:	cmp	r1, #0
   12ed8:	mov	r5, r0
   12edc:	ldr	r4, [sp, #48]	; 0x30
   12ee0:	ldr	r6, [sp, #52]	; 0x34
   12ee4:	beq	12f98 <putchar_unlocked@plt+0x20c4>
   12ee8:	stm	sp, {r2, r3}
   12eec:	mov	r3, r1
   12ef0:	ldr	r2, [pc, #860]	; 13254 <putchar_unlocked@plt+0x2380>
   12ef4:	mov	r1, #1
   12ef8:	bl	10e44 <__fprintf_chk@plt>
   12efc:	mov	r2, #5
   12f00:	ldr	r1, [pc, #848]	; 13258 <putchar_unlocked@plt+0x2384>
   12f04:	mov	r0, #0
   12f08:	bl	10d0c <dcgettext@plt>
   12f0c:	ldr	r3, [pc, #840]	; 1325c <putchar_unlocked@plt+0x2388>
   12f10:	ldr	r2, [pc, #840]	; 13260 <putchar_unlocked@plt+0x238c>
   12f14:	str	r3, [sp]
   12f18:	mov	r1, #1
   12f1c:	mov	r3, r0
   12f20:	mov	r0, r5
   12f24:	bl	10e44 <__fprintf_chk@plt>
   12f28:	mov	r1, r5
   12f2c:	mov	r0, #10
   12f30:	bl	10d00 <fputc_unlocked@plt>
   12f34:	mov	r2, #5
   12f38:	ldr	r1, [pc, #804]	; 13264 <putchar_unlocked@plt+0x2390>
   12f3c:	mov	r0, #0
   12f40:	bl	10d0c <dcgettext@plt>
   12f44:	mov	r1, #1
   12f48:	ldr	r3, [pc, #792]	; 13268 <putchar_unlocked@plt+0x2394>
   12f4c:	mov	r2, r0
   12f50:	mov	r0, r5
   12f54:	bl	10e44 <__fprintf_chk@plt>
   12f58:	mov	r1, r5
   12f5c:	mov	r0, #10
   12f60:	bl	10d00 <fputc_unlocked@plt>
   12f64:	cmp	r6, #9
   12f68:	ldrls	pc, [pc, r6, lsl #2]
   12f6c:	b	13248 <putchar_unlocked@plt+0x2374>
   12f70:	andeq	r3, r1, r8, lsl #1
   12f74:			; <UNDEFINED> instruction: 0x00012fb0
   12f78:	ldrdeq	r2, [r1], -ip
   12f7c:	andeq	r3, r1, r0, lsl r0
   12f80:	andeq	r3, r1, ip, asr #32
   12f84:	muleq	r1, r0, r0
   12f88:	ldrdeq	r3, [r1], -r8
   12f8c:	andeq	r3, r1, r8, lsr #2
   12f90:	andeq	r3, r1, r0, lsl #3
   12f94:	andeq	r3, r1, r0, ror #3
   12f98:	str	r3, [sp]
   12f9c:	mov	r1, #1
   12fa0:	mov	r3, r2
   12fa4:	ldr	r2, [pc, #704]	; 1326c <putchar_unlocked@plt+0x2398>
   12fa8:	bl	10e44 <__fprintf_chk@plt>
   12fac:	b	12efc <putchar_unlocked@plt+0x2028>
   12fb0:	mov	r2, #5
   12fb4:	ldr	r1, [pc, #692]	; 13270 <putchar_unlocked@plt+0x239c>
   12fb8:	mov	r0, #0
   12fbc:	bl	10d0c <dcgettext@plt>
   12fc0:	ldr	r3, [r4]
   12fc4:	mov	r1, #1
   12fc8:	mov	r2, r0
   12fcc:	mov	r0, r5
   12fd0:	add	sp, sp, #32
   12fd4:	pop	{r4, r5, r6, lr}
   12fd8:	b	10e44 <__fprintf_chk@plt>
   12fdc:	mov	r2, #5
   12fe0:	ldr	r1, [pc, #652]	; 13274 <putchar_unlocked@plt+0x23a0>
   12fe4:	mov	r0, #0
   12fe8:	bl	10d0c <dcgettext@plt>
   12fec:	ldr	r3, [r4, #4]
   12ff0:	mov	r1, #1
   12ff4:	str	r3, [sp, #48]	; 0x30
   12ff8:	ldr	r3, [r4]
   12ffc:	mov	r2, r0
   13000:	mov	r0, r5
   13004:	add	sp, sp, #32
   13008:	pop	{r4, r5, r6, lr}
   1300c:	b	10e44 <__fprintf_chk@plt>
   13010:	mov	r2, #5
   13014:	ldr	r1, [pc, #604]	; 13278 <putchar_unlocked@plt+0x23a4>
   13018:	mov	r0, #0
   1301c:	bl	10d0c <dcgettext@plt>
   13020:	ldr	r3, [r4, #8]
   13024:	mov	r1, #1
   13028:	str	r3, [sp, #52]	; 0x34
   1302c:	ldr	r3, [r4, #4]
   13030:	str	r3, [sp, #48]	; 0x30
   13034:	ldr	r3, [r4]
   13038:	mov	r2, r0
   1303c:	mov	r0, r5
   13040:	add	sp, sp, #32
   13044:	pop	{r4, r5, r6, lr}
   13048:	b	10e44 <__fprintf_chk@plt>
   1304c:	mov	r2, #5
   13050:	ldr	r1, [pc, #548]	; 1327c <putchar_unlocked@plt+0x23a8>
   13054:	mov	r0, #0
   13058:	bl	10d0c <dcgettext@plt>
   1305c:	ldr	r3, [r4, #12]
   13060:	mov	r1, #1
   13064:	str	r3, [sp, #8]
   13068:	ldr	r3, [r4, #8]
   1306c:	str	r3, [sp, #4]
   13070:	ldr	r3, [r4, #4]
   13074:	str	r3, [sp]
   13078:	ldr	r3, [r4]
   1307c:	mov	r2, r0
   13080:	mov	r0, r5
   13084:	bl	10e44 <__fprintf_chk@plt>
   13088:	add	sp, sp, #32
   1308c:	pop	{r4, r5, r6, pc}
   13090:	mov	r2, #5
   13094:	ldr	r1, [pc, #484]	; 13280 <putchar_unlocked@plt+0x23ac>
   13098:	mov	r0, #0
   1309c:	bl	10d0c <dcgettext@plt>
   130a0:	ldr	r3, [r4, #16]
   130a4:	mov	r1, #1
   130a8:	str	r3, [sp, #12]
   130ac:	ldr	r3, [r4, #12]
   130b0:	str	r3, [sp, #8]
   130b4:	ldr	r3, [r4, #8]
   130b8:	str	r3, [sp, #4]
   130bc:	ldr	r3, [r4, #4]
   130c0:	str	r3, [sp]
   130c4:	ldr	r3, [r4]
   130c8:	mov	r2, r0
   130cc:	mov	r0, r5
   130d0:	bl	10e44 <__fprintf_chk@plt>
   130d4:	b	13088 <putchar_unlocked@plt+0x21b4>
   130d8:	mov	r2, #5
   130dc:	ldr	r1, [pc, #416]	; 13284 <putchar_unlocked@plt+0x23b0>
   130e0:	mov	r0, #0
   130e4:	bl	10d0c <dcgettext@plt>
   130e8:	ldr	r3, [r4, #20]
   130ec:	mov	r1, #1
   130f0:	str	r3, [sp, #16]
   130f4:	ldr	r3, [r4, #16]
   130f8:	str	r3, [sp, #12]
   130fc:	ldr	r3, [r4, #12]
   13100:	str	r3, [sp, #8]
   13104:	ldr	r3, [r4, #8]
   13108:	str	r3, [sp, #4]
   1310c:	ldr	r3, [r4, #4]
   13110:	str	r3, [sp]
   13114:	ldr	r3, [r4]
   13118:	mov	r2, r0
   1311c:	mov	r0, r5
   13120:	bl	10e44 <__fprintf_chk@plt>
   13124:	b	13088 <putchar_unlocked@plt+0x21b4>
   13128:	mov	r2, #5
   1312c:	ldr	r1, [pc, #340]	; 13288 <putchar_unlocked@plt+0x23b4>
   13130:	mov	r0, #0
   13134:	bl	10d0c <dcgettext@plt>
   13138:	ldr	r3, [r4, #24]
   1313c:	mov	r1, #1
   13140:	str	r3, [sp, #20]
   13144:	ldr	r3, [r4, #20]
   13148:	str	r3, [sp, #16]
   1314c:	ldr	r3, [r4, #16]
   13150:	str	r3, [sp, #12]
   13154:	ldr	r3, [r4, #12]
   13158:	str	r3, [sp, #8]
   1315c:	ldr	r3, [r4, #8]
   13160:	str	r3, [sp, #4]
   13164:	ldr	r3, [r4, #4]
   13168:	str	r3, [sp]
   1316c:	ldr	r3, [r4]
   13170:	mov	r2, r0
   13174:	mov	r0, r5
   13178:	bl	10e44 <__fprintf_chk@plt>
   1317c:	b	13088 <putchar_unlocked@plt+0x21b4>
   13180:	mov	r2, #5
   13184:	ldr	r1, [pc, #256]	; 1328c <putchar_unlocked@plt+0x23b8>
   13188:	mov	r0, #0
   1318c:	bl	10d0c <dcgettext@plt>
   13190:	ldr	r3, [r4, #28]
   13194:	mov	r1, #1
   13198:	str	r3, [sp, #24]
   1319c:	ldr	r3, [r4, #24]
   131a0:	str	r3, [sp, #20]
   131a4:	ldr	r3, [r4, #20]
   131a8:	str	r3, [sp, #16]
   131ac:	ldr	r3, [r4, #16]
   131b0:	str	r3, [sp, #12]
   131b4:	ldr	r3, [r4, #12]
   131b8:	str	r3, [sp, #8]
   131bc:	ldr	r3, [r4, #8]
   131c0:	str	r3, [sp, #4]
   131c4:	ldr	r3, [r4, #4]
   131c8:	str	r3, [sp]
   131cc:	ldr	r3, [r4]
   131d0:	mov	r2, r0
   131d4:	mov	r0, r5
   131d8:	bl	10e44 <__fprintf_chk@plt>
   131dc:	b	13088 <putchar_unlocked@plt+0x21b4>
   131e0:	ldr	r1, [pc, #168]	; 13290 <putchar_unlocked@plt+0x23bc>
   131e4:	mov	r2, #5
   131e8:	mov	r0, #0
   131ec:	bl	10d0c <dcgettext@plt>
   131f0:	ldr	r3, [r4, #32]
   131f4:	mov	r1, #1
   131f8:	str	r3, [sp, #28]
   131fc:	ldr	r3, [r4, #28]
   13200:	str	r3, [sp, #24]
   13204:	ldr	r3, [r4, #24]
   13208:	str	r3, [sp, #20]
   1320c:	ldr	r3, [r4, #20]
   13210:	str	r3, [sp, #16]
   13214:	ldr	r3, [r4, #16]
   13218:	str	r3, [sp, #12]
   1321c:	ldr	r3, [r4, #12]
   13220:	str	r3, [sp, #8]
   13224:	ldr	r3, [r4, #8]
   13228:	str	r3, [sp, #4]
   1322c:	ldr	r3, [r4, #4]
   13230:	str	r3, [sp]
   13234:	ldr	r3, [r4]
   13238:	mov	r2, r0
   1323c:	mov	r0, r5
   13240:	bl	10e44 <__fprintf_chk@plt>
   13244:	b	13088 <putchar_unlocked@plt+0x21b4>
   13248:	mov	r2, #5
   1324c:	ldr	r1, [pc, #64]	; 13294 <putchar_unlocked@plt+0x23c0>
   13250:	b	131e8 <putchar_unlocked@plt+0x2314>
   13254:	andeq	r4, r1, fp, lsr #21
   13258:			; <UNDEFINED> instruction: 0x00014abe
   1325c:	andeq	r0, r0, r6, ror #15
   13260:	andeq	r4, r1, ip, lsl #27
   13264:	andeq	r4, r1, r2, asr #21
   13268:	andeq	r4, r1, sp, ror #22
   1326c:			; <UNDEFINED> instruction: 0x00014ab7
   13270:	andeq	r4, r1, pc, lsl #23
   13274:	muleq	r1, pc, fp	; <UNPREDICTABLE>
   13278:			; <UNDEFINED> instruction: 0x00014bb6
   1327c:	ldrdeq	r4, [r1], -r2
   13280:	strdeq	r4, [r1], -r2
   13284:	andeq	r4, r1, r6, lsl ip
   13288:	andeq	r4, r1, lr, lsr ip
   1328c:	andeq	r4, r1, sl, ror #24
   13290:	muleq	r1, sl, ip
   13294:	andeq	r4, r1, lr, asr #25
   13298:	push	{r0, r1, r4, lr}
   1329c:	mov	ip, #0
   132a0:	ldr	lr, [sp, #16]
   132a4:	ldr	r4, [lr, ip, lsl #2]
   132a8:	cmp	r4, #0
   132ac:	bne	132c4 <putchar_unlocked@plt+0x23f0>
   132b0:	str	ip, [sp, #4]
   132b4:	str	lr, [sp]
   132b8:	bl	12ecc <putchar_unlocked@plt+0x1ff8>
   132bc:	add	sp, sp, #8
   132c0:	pop	{r4, pc}
   132c4:	add	ip, ip, #1
   132c8:	b	132a4 <putchar_unlocked@plt+0x23d0>
   132cc:	push	{r4, r5, lr}
   132d0:	sub	sp, sp, #52	; 0x34
   132d4:	mov	ip, #0
   132d8:	ldr	r5, [sp, #64]	; 0x40
   132dc:	add	lr, sp, #8
   132e0:	ldr	r4, [r5, ip, lsl #2]
   132e4:	cmp	r4, #0
   132e8:	str	r4, [lr, ip, lsl #2]
   132ec:	beq	132fc <putchar_unlocked@plt+0x2428>
   132f0:	add	ip, ip, #1
   132f4:	cmp	ip, #10
   132f8:	bne	132e0 <putchar_unlocked@plt+0x240c>
   132fc:	str	ip, [sp, #4]
   13300:	str	lr, [sp]
   13304:	bl	12ecc <putchar_unlocked@plt+0x1ff8>
   13308:	add	sp, sp, #52	; 0x34
   1330c:	pop	{r4, r5, pc}
   13310:	push	{r3}		; (str r3, [sp, #-4]!)
   13314:	push	{r0, r1, r2, r3, lr}
   13318:	add	r3, sp, #24
   1331c:	str	r3, [sp, #12]
   13320:	str	r3, [sp]
   13324:	ldr	r3, [sp, #20]
   13328:	bl	132cc <putchar_unlocked@plt+0x23f8>
   1332c:	add	sp, sp, #16
   13330:	pop	{lr}		; (ldr lr, [sp], #4)
   13334:	add	sp, sp, #4
   13338:	bx	lr
   1333c:	ldr	r3, [pc, #116]	; 133b8 <putchar_unlocked@plt+0x24e4>
   13340:	push	{r4, lr}
   13344:	mov	r0, #10
   13348:	ldr	r1, [r3]
   1334c:	bl	10d00 <fputc_unlocked@plt>
   13350:	mov	r2, #5
   13354:	ldr	r1, [pc, #96]	; 133bc <putchar_unlocked@plt+0x24e8>
   13358:	mov	r0, #0
   1335c:	bl	10d0c <dcgettext@plt>
   13360:	ldr	r2, [pc, #88]	; 133c0 <putchar_unlocked@plt+0x24ec>
   13364:	mov	r1, r0
   13368:	mov	r0, #1
   1336c:	bl	10e2c <__printf_chk@plt>
   13370:	mov	r2, #5
   13374:	ldr	r1, [pc, #72]	; 133c4 <putchar_unlocked@plt+0x24f0>
   13378:	mov	r0, #0
   1337c:	bl	10d0c <dcgettext@plt>
   13380:	ldr	r3, [pc, #64]	; 133c8 <putchar_unlocked@plt+0x24f4>
   13384:	ldr	r2, [pc, #64]	; 133cc <putchar_unlocked@plt+0x24f8>
   13388:	mov	r1, r0
   1338c:	mov	r0, #1
   13390:	bl	10e2c <__printf_chk@plt>
   13394:	mov	r2, #5
   13398:	ldr	r1, [pc, #48]	; 133d0 <putchar_unlocked@plt+0x24fc>
   1339c:	mov	r0, #0
   133a0:	bl	10d0c <dcgettext@plt>
   133a4:	ldr	r2, [pc, #40]	; 133d4 <putchar_unlocked@plt+0x2500>
   133a8:	pop	{r4, lr}
   133ac:	mov	r1, r0
   133b0:	mov	r0, #1
   133b4:	b	10e2c <__printf_chk@plt>
   133b8:	andeq	r5, r2, ip, asr #2
   133bc:	andeq	r4, r1, sl, lsl #26
   133c0:	andeq	r4, r1, lr, lsl sp
   133c4:	andeq	r4, r1, r4, lsr sp
   133c8:	andeq	r4, r1, r4, asr r7
   133cc:	andeq	r4, r1, ip, ror r7
   133d0:	andeq	r4, r1, r8, asr #26
   133d4:	andeq	r4, r1, pc, ror #26
   133d8:	push	{r4, lr}
   133dc:	bl	13924 <putchar_unlocked@plt+0x2a50>
   133e0:	cmp	r0, #0
   133e4:	popne	{r4, pc}
   133e8:	bl	1386c <putchar_unlocked@plt+0x2998>
   133ec:	push	{r4, lr}
   133f0:	bl	13924 <putchar_unlocked@plt+0x2a50>
   133f4:	cmp	r0, #0
   133f8:	popne	{r4, pc}
   133fc:	bl	1386c <putchar_unlocked@plt+0x2998>
   13400:	b	133d8 <putchar_unlocked@plt+0x2504>
   13404:	push	{r4, r5, r6, lr}
   13408:	mov	r5, r0
   1340c:	mov	r4, r1
   13410:	bl	13964 <putchar_unlocked@plt+0x2a90>
   13414:	cmp	r0, #0
   13418:	popne	{r4, r5, r6, pc}
   1341c:	adds	r4, r4, #0
   13420:	movne	r4, #1
   13424:	cmp	r5, #0
   13428:	orreq	r4, r4, #1
   1342c:	cmp	r4, #0
   13430:	popeq	{r4, r5, r6, pc}
   13434:	bl	1386c <putchar_unlocked@plt+0x2998>
   13438:	push	{r4, lr}
   1343c:	cmp	r1, #0
   13440:	orreq	r1, r1, #1
   13444:	bl	13964 <putchar_unlocked@plt+0x2a90>
   13448:	cmp	r0, #0
   1344c:	popne	{r4, pc}
   13450:	bl	1386c <putchar_unlocked@plt+0x2998>
   13454:	push	{r4, r5, r6, lr}
   13458:	mov	r6, r0
   1345c:	mov	r5, r1
   13460:	mov	r4, r2
   13464:	bl	13e10 <putchar_unlocked@plt+0x2f3c>
   13468:	cmp	r0, #0
   1346c:	popne	{r4, r5, r6, pc}
   13470:	cmp	r6, #0
   13474:	beq	13484 <putchar_unlocked@plt+0x25b0>
   13478:	cmp	r5, #0
   1347c:	cmpne	r4, #0
   13480:	popeq	{r4, r5, r6, pc}
   13484:	bl	1386c <putchar_unlocked@plt+0x2998>
   13488:	b	13454 <putchar_unlocked@plt+0x2580>
   1348c:	cmp	r2, #0
   13490:	cmpne	r1, #0
   13494:	moveq	r2, #1
   13498:	moveq	r1, r2
   1349c:	push	{r4, lr}
   134a0:	bl	13e10 <putchar_unlocked@plt+0x2f3c>
   134a4:	cmp	r0, #0
   134a8:	popne	{r4, pc}
   134ac:	bl	1386c <putchar_unlocked@plt+0x2998>
   134b0:	mov	r2, r1
   134b4:	mov	r1, r0
   134b8:	mov	r0, #0
   134bc:	b	13454 <putchar_unlocked@plt+0x2580>
   134c0:	mov	r2, r1
   134c4:	mov	r1, r0
   134c8:	mov	r0, #0
   134cc:	b	1348c <putchar_unlocked@plt+0x25b8>
   134d0:	push	{r4, r5, r6, r7, r8, lr}
   134d4:	subs	r7, r0, #0
   134d8:	mov	r5, r1
   134dc:	mov	r6, r2
   134e0:	ldr	r4, [r1]
   134e4:	bne	13520 <putchar_unlocked@plt+0x264c>
   134e8:	cmp	r4, #0
   134ec:	bne	13508 <putchar_unlocked@plt+0x2634>
   134f0:	mov	r1, r2
   134f4:	mov	r0, #64	; 0x40
   134f8:	bl	13f3c <putchar_unlocked@plt+0x3068>
   134fc:	cmp	r0, #0
   13500:	movne	r4, r0
   13504:	addeq	r4, r0, #1
   13508:	mov	r2, r6
   1350c:	mov	r1, r4
   13510:	mov	r0, r7
   13514:	bl	13454 <putchar_unlocked@plt+0x2580>
   13518:	str	r4, [r5]
   1351c:	pop	{r4, r5, r6, r7, r8, pc}
   13520:	lsr	r2, r4, #1
   13524:	add	r3, r2, #1
   13528:	mvn	r3, r3
   1352c:	cmp	r4, r3
   13530:	addls	r4, r4, #1
   13534:	addls	r4, r4, r2
   13538:	bls	13508 <putchar_unlocked@plt+0x2634>
   1353c:	bl	1386c <putchar_unlocked@plt+0x2998>
   13540:	mov	r2, #1
   13544:	b	134d0 <putchar_unlocked@plt+0x25fc>
   13548:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1354c:	mov	sl, r0
   13550:	ldr	r8, [r1]
   13554:	mov	fp, r1
   13558:	mov	r5, r2
   1355c:	asrs	r4, r8, #1
   13560:	mov	r9, r3
   13564:	ldr	r7, [sp, #48]	; 0x30
   13568:	bpl	13604 <putchar_unlocked@plt+0x2730>
   1356c:	rsb	r2, r4, #-2147483648	; 0x80000000
   13570:	cmp	r8, r2
   13574:	movge	r2, #0
   13578:	movlt	r2, #1
   1357c:	mvn	r3, r9
   13580:	cmp	r2, #0
   13584:	lsr	r3, r3, #31
   13588:	addeq	r4, r4, r8
   1358c:	mvnne	r4, #-2147483648	; 0x80000000
   13590:	mov	r0, r3
   13594:	cmp	r9, r4
   13598:	movge	r0, #0
   1359c:	andlt	r0, r0, #1
   135a0:	cmp	r0, #0
   135a4:	str	r3, [sp, #4]
   135a8:	bne	13778 <putchar_unlocked@plt+0x28a4>
   135ac:	cmp	r7, #0
   135b0:	bge	136c4 <putchar_unlocked@plt+0x27f0>
   135b4:	cmp	r4, #0
   135b8:	bge	1361c <putchar_unlocked@plt+0x2748>
   135bc:	mov	r1, r7
   135c0:	mvn	r0, #-2147483648	; 0x80000000
   135c4:	bl	14148 <putchar_unlocked@plt+0x3274>
   135c8:	cmp	r0, r4
   135cc:	movle	r0, #0
   135d0:	movgt	r0, #1
   135d4:	cmp	r0, #0
   135d8:	mvnne	r6, #-2147483648	; 0x80000000
   135dc:	beq	1362c <putchar_unlocked@plt+0x2758>
   135e0:	mov	r1, r7
   135e4:	mov	r0, r6
   135e8:	bl	14148 <putchar_unlocked@plt+0x3274>
   135ec:	mov	r1, r7
   135f0:	mov	r4, r0
   135f4:	mov	r0, r6
   135f8:	bl	14368 <putchar_unlocked@plt+0x3494>
   135fc:	sub	r1, r6, r1
   13600:	b	1363c <putchar_unlocked@plt+0x2768>
   13604:	mvn	r2, #-2147483648	; 0x80000000
   13608:	sub	r2, r2, r4
   1360c:	cmp	r8, r2
   13610:	movle	r2, #0
   13614:	movgt	r2, #1
   13618:	b	1357c <putchar_unlocked@plt+0x26a8>
   1361c:	cmn	r7, #1
   13620:	movne	r1, r7
   13624:	movne	r0, #-2147483648	; 0x80000000
   13628:	bne	13790 <putchar_unlocked@plt+0x28bc>
   1362c:	mul	r1, r7, r4
   13630:	cmp	r1, #63	; 0x3f
   13634:	movle	r6, #64	; 0x40
   13638:	ble	135e0 <putchar_unlocked@plt+0x270c>
   1363c:	cmp	sl, #0
   13640:	sub	r2, r4, r8
   13644:	streq	sl, [fp]
   13648:	cmp	r2, r5
   1364c:	bge	13720 <putchar_unlocked@plt+0x284c>
   13650:	cmp	r5, #0
   13654:	bge	136ec <putchar_unlocked@plt+0x2818>
   13658:	rsb	r2, r5, #-2147483648	; 0x80000000
   1365c:	cmp	r8, r2
   13660:	movge	r2, #0
   13664:	movlt	r2, #1
   13668:	cmp	r2, #0
   1366c:	bne	136c0 <putchar_unlocked@plt+0x27ec>
   13670:	ldr	r0, [sp, #4]
   13674:	add	r5, r8, r5
   13678:	cmp	r9, r5
   1367c:	movge	r0, #0
   13680:	andlt	r0, r0, #1
   13684:	cmp	r0, #0
   13688:	mov	r4, r5
   1368c:	bne	136c0 <putchar_unlocked@plt+0x27ec>
   13690:	cmp	r7, #0
   13694:	bge	13734 <putchar_unlocked@plt+0x2860>
   13698:	cmp	r5, #0
   1369c:	bge	1370c <putchar_unlocked@plt+0x2838>
   136a0:	mov	r1, r7
   136a4:	mvn	r0, #-2147483648	; 0x80000000
   136a8:	bl	14148 <putchar_unlocked@plt+0x3274>
   136ac:	cmp	r5, r0
   136b0:	movge	r0, #0
   136b4:	movlt	r0, #1
   136b8:	cmp	r0, #0
   136bc:	beq	1371c <putchar_unlocked@plt+0x2848>
   136c0:	bl	1386c <putchar_unlocked@plt+0x2998>
   136c4:	beq	1362c <putchar_unlocked@plt+0x2758>
   136c8:	cmp	r4, #0
   136cc:	bge	13788 <putchar_unlocked@plt+0x28b4>
   136d0:	cmn	r4, #1
   136d4:	beq	1362c <putchar_unlocked@plt+0x2758>
   136d8:	mov	r1, r4
   136dc:	mov	r0, #-2147483648	; 0x80000000
   136e0:	bl	14148 <putchar_unlocked@plt+0x3274>
   136e4:	cmp	r7, r0
   136e8:	b	135cc <putchar_unlocked@plt+0x26f8>
   136ec:	cmp	r8, #0
   136f0:	blt	13670 <putchar_unlocked@plt+0x279c>
   136f4:	mvn	r2, #-2147483648	; 0x80000000
   136f8:	sub	r2, r2, r5
   136fc:	cmp	r8, r2
   13700:	movle	r2, #0
   13704:	movgt	r2, #1
   13708:	b	13668 <putchar_unlocked@plt+0x2794>
   1370c:	cmn	r7, #1
   13710:	movne	r1, r7
   13714:	movne	r0, #-2147483648	; 0x80000000
   13718:	bne	1376c <putchar_unlocked@plt+0x2898>
   1371c:	mul	r1, r5, r7
   13720:	mov	r0, sl
   13724:	bl	13404 <putchar_unlocked@plt+0x2530>
   13728:	str	r4, [fp]
   1372c:	add	sp, sp, #12
   13730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13734:	beq	1371c <putchar_unlocked@plt+0x2848>
   13738:	cmp	r5, #0
   1373c:	movge	r1, r7
   13740:	mvnge	r0, #-2147483648	; 0x80000000
   13744:	bge	1376c <putchar_unlocked@plt+0x2898>
   13748:	cmn	r5, #1
   1374c:	beq	1371c <putchar_unlocked@plt+0x2848>
   13750:	mov	r1, r5
   13754:	mov	r0, #-2147483648	; 0x80000000
   13758:	bl	14148 <putchar_unlocked@plt+0x3274>
   1375c:	cmp	r7, r0
   13760:	movle	r0, #0
   13764:	movgt	r0, #1
   13768:	b	136b8 <putchar_unlocked@plt+0x27e4>
   1376c:	bl	14148 <putchar_unlocked@plt+0x3274>
   13770:	cmp	r5, r0
   13774:	b	13760 <putchar_unlocked@plt+0x288c>
   13778:	cmp	r7, #0
   1377c:	mov	r4, r9
   13780:	blt	1361c <putchar_unlocked@plt+0x2748>
   13784:	beq	1362c <putchar_unlocked@plt+0x2758>
   13788:	mov	r1, r7
   1378c:	mvn	r0, #-2147483648	; 0x80000000
   13790:	bl	14148 <putchar_unlocked@plt+0x3274>
   13794:	cmp	r0, r4
   13798:	movge	r0, #0
   1379c:	movlt	r0, #1
   137a0:	b	135d4 <putchar_unlocked@plt+0x2700>
   137a4:	push	{r4, lr}
   137a8:	bl	138dc <putchar_unlocked@plt+0x2a08>
   137ac:	cmp	r0, #0
   137b0:	popne	{r4, pc}
   137b4:	bl	1386c <putchar_unlocked@plt+0x2998>
   137b8:	mov	r1, #1
   137bc:	b	137a4 <putchar_unlocked@plt+0x28d0>
   137c0:	push	{r4, lr}
   137c4:	bl	138dc <putchar_unlocked@plt+0x2a08>
   137c8:	cmp	r0, #0
   137cc:	popne	{r4, pc}
   137d0:	bl	1386c <putchar_unlocked@plt+0x2998>
   137d4:	mov	r1, #1
   137d8:	b	137c0 <putchar_unlocked@plt+0x28ec>
   137dc:	push	{r4, r5, r6, lr}
   137e0:	mov	r4, r1
   137e4:	mov	r5, r0
   137e8:	mov	r0, r1
   137ec:	bl	133d8 <putchar_unlocked@plt+0x2504>
   137f0:	mov	r2, r4
   137f4:	mov	r1, r5
   137f8:	pop	{r4, r5, r6, lr}
   137fc:	b	10cdc <memcpy@plt>
   13800:	push	{r4, r5, r6, lr}
   13804:	mov	r4, r1
   13808:	mov	r5, r0
   1380c:	mov	r0, r1
   13810:	bl	133ec <putchar_unlocked@plt+0x2518>
   13814:	mov	r2, r4
   13818:	mov	r1, r5
   1381c:	pop	{r4, r5, r6, lr}
   13820:	b	10cdc <memcpy@plt>
   13824:	push	{r4, r5, r6, lr}
   13828:	mov	r5, r0
   1382c:	add	r0, r1, #1
   13830:	mov	r4, r1
   13834:	bl	133ec <putchar_unlocked@plt+0x2518>
   13838:	mov	r2, #0
   1383c:	mov	r1, r5
   13840:	strb	r2, [r0, r4]
   13844:	mov	r2, r4
   13848:	pop	{r4, r5, r6, lr}
   1384c:	b	10cdc <memcpy@plt>
   13850:	push	{r4, lr}
   13854:	mov	r4, r0
   13858:	bl	10de4 <strlen@plt>
   1385c:	add	r1, r0, #1
   13860:	mov	r0, r4
   13864:	pop	{r4, lr}
   13868:	b	137dc <putchar_unlocked@plt+0x2908>
   1386c:	ldr	r3, [pc, #44]	; 138a0 <putchar_unlocked@plt+0x29cc>
   13870:	push	{r4, lr}
   13874:	mov	r2, #5
   13878:	ldr	r1, [pc, #36]	; 138a4 <putchar_unlocked@plt+0x29d0>
   1387c:	mov	r0, #0
   13880:	ldr	r4, [r3]
   13884:	bl	10d0c <dcgettext@plt>
   13888:	ldr	r2, [pc, #24]	; 138a8 <putchar_unlocked@plt+0x29d4>
   1388c:	mov	r1, #0
   13890:	mov	r3, r0
   13894:	mov	r0, r4
   13898:	bl	10d84 <error@plt>
   1389c:	bl	10ebc <abort@plt>
   138a0:	strdeq	r5, [r2], -r0
   138a4:			; <UNDEFINED> instruction: 0x00014dbb
   138a8:	andeq	r4, r1, sp, lsr #19
   138ac:	push	{r4, lr}
   138b0:	bl	13c78 <putchar_unlocked@plt+0x2da4>
   138b4:	cmn	r0, #1
   138b8:	mov	r4, r0
   138bc:	bne	138d4 <putchar_unlocked@plt+0x2a00>
   138c0:	bl	10df0 <__errno_location@plt>
   138c4:	ldr	r3, [r0]
   138c8:	cmp	r3, #12
   138cc:	bne	138d4 <putchar_unlocked@plt+0x2a00>
   138d0:	bl	1386c <putchar_unlocked@plt+0x2998>
   138d4:	mov	r0, r4
   138d8:	pop	{r4, pc}
   138dc:	cmp	r1, #0
   138e0:	cmpne	r0, #0
   138e4:	moveq	r1, #1
   138e8:	moveq	r0, r1
   138ec:	umull	r2, r3, r0, r1
   138f0:	adds	r3, r3, #0
   138f4:	movne	r3, #1
   138f8:	cmp	r2, #0
   138fc:	blt	1390c <putchar_unlocked@plt+0x2a38>
   13900:	cmp	r3, #0
   13904:	bne	1390c <putchar_unlocked@plt+0x2a38>
   13908:	b	10c64 <calloc@plt>
   1390c:	push	{r4, lr}
   13910:	bl	10df0 <__errno_location@plt>
   13914:	mov	r3, #12
   13918:	str	r3, [r0]
   1391c:	mov	r0, #0
   13920:	pop	{r4, pc}
   13924:	cmp	r0, #0
   13928:	mov	r3, #0
   1392c:	moveq	r0, #1
   13930:	adds	r3, r3, #0
   13934:	movne	r3, #1
   13938:	cmp	r0, #0
   1393c:	blt	1394c <putchar_unlocked@plt+0x2a78>
   13940:	cmp	r3, #0
   13944:	bne	1394c <putchar_unlocked@plt+0x2a78>
   13948:	b	10d90 <malloc@plt>
   1394c:	push	{r4, lr}
   13950:	bl	10df0 <__errno_location@plt>
   13954:	mov	r3, #12
   13958:	str	r3, [r0]
   1395c:	mov	r0, #0
   13960:	pop	{r4, pc}
   13964:	cmp	r0, #0
   13968:	push	{r4, lr}
   1396c:	mov	r4, r1
   13970:	bne	13980 <putchar_unlocked@plt+0x2aac>
   13974:	mov	r0, r1
   13978:	pop	{r4, lr}
   1397c:	b	13924 <putchar_unlocked@plt+0x2a50>
   13980:	cmp	r1, #0
   13984:	bne	13994 <putchar_unlocked@plt+0x2ac0>
   13988:	bl	117d4 <putchar_unlocked@plt+0x900>
   1398c:	mov	r0, #0
   13990:	pop	{r4, pc}
   13994:	cmp	r1, #0
   13998:	blt	139a8 <putchar_unlocked@plt+0x2ad4>
   1399c:	mov	r3, #0
   139a0:	cmp	r3, r3
   139a4:	beq	139b8 <putchar_unlocked@plt+0x2ae4>
   139a8:	bl	10df0 <__errno_location@plt>
   139ac:	mov	r3, #12
   139b0:	str	r3, [r0]
   139b4:	b	1398c <putchar_unlocked@plt+0x2ab8>
   139b8:	pop	{r4, lr}
   139bc:	b	10d18 <realloc@plt>
   139c0:	push	{r4, r5, r6, lr}
   139c4:	mov	r4, r0
   139c8:	bl	10d60 <__fpending@plt>
   139cc:	mov	r5, r0
   139d0:	mov	r0, r4
   139d4:	bl	10d6c <ferror_unlocked@plt>
   139d8:	mov	r6, r0
   139dc:	mov	r0, r4
   139e0:	bl	13a30 <putchar_unlocked@plt+0x2b5c>
   139e4:	cmp	r6, #0
   139e8:	mov	r4, r0
   139ec:	bne	13a18 <putchar_unlocked@plt+0x2b44>
   139f0:	cmp	r0, #0
   139f4:	beq	13a10 <putchar_unlocked@plt+0x2b3c>
   139f8:	cmp	r5, #0
   139fc:	bne	13a28 <putchar_unlocked@plt+0x2b54>
   13a00:	bl	10df0 <__errno_location@plt>
   13a04:	ldr	r4, [r0]
   13a08:	subs	r4, r4, #9
   13a0c:	mvnne	r4, #0
   13a10:	mov	r0, r4
   13a14:	pop	{r4, r5, r6, pc}
   13a18:	cmp	r0, #0
   13a1c:	bne	13a28 <putchar_unlocked@plt+0x2b54>
   13a20:	bl	10df0 <__errno_location@plt>
   13a24:	str	r4, [r0]
   13a28:	mvn	r4, #0
   13a2c:	b	13a10 <putchar_unlocked@plt+0x2b3c>
   13a30:	push	{r0, r1, r2, r4, r5, lr}
   13a34:	mov	r4, r0
   13a38:	bl	10e38 <fileno@plt>
   13a3c:	cmp	r0, #0
   13a40:	mov	r0, r4
   13a44:	bge	13a54 <putchar_unlocked@plt+0x2b80>
   13a48:	add	sp, sp, #12
   13a4c:	pop	{r4, r5, lr}
   13a50:	b	10e50 <fclose@plt>
   13a54:	bl	10da8 <__freading@plt>
   13a58:	cmp	r0, #0
   13a5c:	bne	13a98 <putchar_unlocked@plt+0x2bc4>
   13a60:	mov	r0, r4
   13a64:	bl	13ad8 <putchar_unlocked@plt+0x2c04>
   13a68:	cmp	r0, #0
   13a6c:	bne	13acc <putchar_unlocked@plt+0x2bf8>
   13a70:	mov	r5, #0
   13a74:	mov	r0, r4
   13a78:	bl	10e50 <fclose@plt>
   13a7c:	cmp	r5, #0
   13a80:	beq	13a90 <putchar_unlocked@plt+0x2bbc>
   13a84:	bl	10df0 <__errno_location@plt>
   13a88:	str	r5, [r0]
   13a8c:	mvn	r0, #0
   13a90:	add	sp, sp, #12
   13a94:	pop	{r4, r5, pc}
   13a98:	mov	r0, r4
   13a9c:	bl	10e38 <fileno@plt>
   13aa0:	mov	r3, #1
   13aa4:	str	r3, [sp]
   13aa8:	mov	r2, #0
   13aac:	mov	r3, #0
   13ab0:	bl	10d48 <lseek64@plt>
   13ab4:	mvn	r3, #0
   13ab8:	mvn	r2, #0
   13abc:	cmp	r1, r3
   13ac0:	cmpeq	r0, r2
   13ac4:	bne	13a60 <putchar_unlocked@plt+0x2b8c>
   13ac8:	b	13a70 <putchar_unlocked@plt+0x2b9c>
   13acc:	bl	10df0 <__errno_location@plt>
   13ad0:	ldr	r5, [r0]
   13ad4:	b	13a74 <putchar_unlocked@plt+0x2ba0>
   13ad8:	push	{r0, r1, r4, lr}
   13adc:	subs	r4, r0, #0
   13ae0:	bne	13af4 <putchar_unlocked@plt+0x2c20>
   13ae4:	mov	r0, r4
   13ae8:	add	sp, sp, #8
   13aec:	pop	{r4, lr}
   13af0:	b	10cac <fflush@plt>
   13af4:	bl	10da8 <__freading@plt>
   13af8:	cmp	r0, #0
   13afc:	beq	13ae4 <putchar_unlocked@plt+0x2c10>
   13b00:	ldr	r3, [r4]
   13b04:	tst	r3, #256	; 0x100
   13b08:	beq	13ae4 <putchar_unlocked@plt+0x2c10>
   13b0c:	mov	r3, #1
   13b10:	str	r3, [sp]
   13b14:	mov	r2, #0
   13b18:	mov	r3, #0
   13b1c:	mov	r0, r4
   13b20:	bl	13b28 <putchar_unlocked@plt+0x2c54>
   13b24:	b	13ae4 <putchar_unlocked@plt+0x2c10>
   13b28:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   13b2c:	mov	r4, r0
   13b30:	ldmib	r0, {ip, lr}
   13b34:	ldr	r8, [sp, #32]
   13b38:	cmp	lr, ip
   13b3c:	bne	13ba8 <putchar_unlocked@plt+0x2cd4>
   13b40:	ldr	lr, [r0, #20]
   13b44:	ldr	ip, [r0, #16]
   13b48:	cmp	lr, ip
   13b4c:	bne	13ba8 <putchar_unlocked@plt+0x2cd4>
   13b50:	ldr	r5, [r0, #36]	; 0x24
   13b54:	cmp	r5, #0
   13b58:	bne	13ba8 <putchar_unlocked@plt+0x2cd4>
   13b5c:	mov	r6, r2
   13b60:	mov	r7, r3
   13b64:	bl	10e38 <fileno@plt>
   13b68:	mov	r2, r6
   13b6c:	mov	r3, r7
   13b70:	str	r8, [sp]
   13b74:	bl	10d48 <lseek64@plt>
   13b78:	mvn	r3, #0
   13b7c:	mvn	r2, #0
   13b80:	cmp	r1, r3
   13b84:	cmpeq	r0, r2
   13b88:	mvneq	r0, #0
   13b8c:	ldrne	r3, [r4]
   13b90:	strdne	r0, [r4, #80]	; 0x50
   13b94:	movne	r0, r5
   13b98:	bicne	r3, r3, #16
   13b9c:	strne	r3, [r4]
   13ba0:	add	sp, sp, #8
   13ba4:	pop	{r4, r5, r6, r7, r8, pc}
   13ba8:	str	r8, [sp, #32]
   13bac:	mov	r0, r4
   13bb0:	add	sp, sp, #8
   13bb4:	pop	{r4, r5, r6, r7, r8, lr}
   13bb8:	b	10e5c <fseeko64@plt>
   13bbc:	push	{r4, lr}
   13bc0:	mov	r0, #14
   13bc4:	bl	10e80 <nl_langinfo@plt>
   13bc8:	ldr	r3, [pc, #24]	; 13be8 <putchar_unlocked@plt+0x2d14>
   13bcc:	cmp	r0, #0
   13bd0:	moveq	r0, r3
   13bd4:	ldr	r3, [pc, #16]	; 13bec <putchar_unlocked@plt+0x2d18>
   13bd8:	ldrb	r2, [r0]
   13bdc:	cmp	r2, #0
   13be0:	moveq	r0, r3
   13be4:	pop	{r4, pc}
   13be8:	andeq	r4, r1, r2, lsr #16
   13bec:	andeq	r4, r1, ip, asr #27
   13bf0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   13bf4:	subs	r5, r0, #0
   13bf8:	addeq	r5, sp, #4
   13bfc:	mov	r0, r5
   13c00:	mov	r7, r2
   13c04:	mov	r6, r1
   13c08:	bl	10d78 <mbrtowc@plt>
   13c0c:	cmp	r7, #0
   13c10:	cmnne	r0, #3
   13c14:	mov	r4, r0
   13c18:	bls	13c34 <putchar_unlocked@plt+0x2d60>
   13c1c:	mov	r0, #0
   13c20:	bl	13e5c <putchar_unlocked@plt+0x2f88>
   13c24:	cmp	r0, #0
   13c28:	moveq	r4, #1
   13c2c:	ldrbeq	r3, [r6]
   13c30:	streq	r3, [r5]
   13c34:	mov	r0, r4
   13c38:	add	sp, sp, #12
   13c3c:	pop	{r4, r5, r6, r7, pc}
   13c40:	lsrs	r3, r1, #30
   13c44:	movne	r3, #1
   13c48:	moveq	r3, #0
   13c4c:	lsls	r1, r1, #2
   13c50:	bmi	13c60 <putchar_unlocked@plt+0x2d8c>
   13c54:	cmp	r3, #0
   13c58:	bne	13c60 <putchar_unlocked@plt+0x2d8c>
   13c5c:	b	13964 <putchar_unlocked@plt+0x2a90>
   13c60:	push	{r4, lr}
   13c64:	bl	10df0 <__errno_location@plt>
   13c68:	mov	r3, #12
   13c6c:	str	r3, [r0]
   13c70:	mov	r0, #0
   13c74:	pop	{r4, pc}
   13c78:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   13c7c:	subs	r8, r0, #0
   13c80:	mov	r5, r1
   13c84:	mov	r7, r2
   13c88:	beq	13d18 <putchar_unlocked@plt+0x2e44>
   13c8c:	mov	r1, #10
   13c90:	mov	r0, #0
   13c94:	str	r1, [sp, #4]
   13c98:	bl	13c40 <putchar_unlocked@plt+0x2d6c>
   13c9c:	subs	r4, r0, #0
   13ca0:	bne	13cb0 <putchar_unlocked@plt+0x2ddc>
   13ca4:	mvn	r0, #0
   13ca8:	add	sp, sp, #12
   13cac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13cb0:	add	r3, sp, #4
   13cb4:	mov	r2, r4
   13cb8:	mov	r1, r5
   13cbc:	mov	r0, r8
   13cc0:	ldr	r6, [sp, #4]
   13cc4:	bl	10e14 <getgrouplist@plt>
   13cc8:	subs	r9, r0, #0
   13ccc:	bge	13ce0 <putchar_unlocked@plt+0x2e0c>
   13cd0:	ldr	r3, [sp, #4]
   13cd4:	cmp	r6, r3
   13cd8:	lsleq	r6, r6, #1
   13cdc:	streq	r6, [sp, #4]
   13ce0:	ldr	r1, [sp, #4]
   13ce4:	mov	r0, r4
   13ce8:	bl	13c40 <putchar_unlocked@plt+0x2d6c>
   13cec:	cmp	r0, #0
   13cf0:	bne	13d00 <putchar_unlocked@plt+0x2e2c>
   13cf4:	mov	r0, r4
   13cf8:	bl	117d4 <putchar_unlocked@plt+0x900>
   13cfc:	b	13ca4 <putchar_unlocked@plt+0x2dd0>
   13d00:	cmp	r9, #0
   13d04:	mov	r4, r0
   13d08:	blt	13cb0 <putchar_unlocked@plt+0x2ddc>
   13d0c:	str	r0, [r7]
   13d10:	ldr	r0, [sp, #4]
   13d14:	b	13ca8 <putchar_unlocked@plt+0x2dd4>
   13d18:	mov	r1, r8
   13d1c:	bl	10e8c <getgroups@plt>
   13d20:	cmp	r0, #0
   13d24:	str	r0, [sp, #4]
   13d28:	bge	13d64 <putchar_unlocked@plt+0x2e90>
   13d2c:	bl	10df0 <__errno_location@plt>
   13d30:	ldr	r3, [r0]
   13d34:	cmp	r3, #38	; 0x26
   13d38:	bne	13ca4 <putchar_unlocked@plt+0x2dd0>
   13d3c:	mov	r1, #1
   13d40:	mov	r0, r8
   13d44:	bl	13c40 <putchar_unlocked@plt+0x2d6c>
   13d48:	cmp	r0, #0
   13d4c:	beq	13ca4 <putchar_unlocked@plt+0x2dd0>
   13d50:	str	r0, [r7]
   13d54:	str	r5, [r0]
   13d58:	adds	r0, r5, #1
   13d5c:	movne	r0, #1
   13d60:	b	13ca8 <putchar_unlocked@plt+0x2dd4>
   13d64:	adds	r6, r5, #1
   13d68:	movne	r6, #1
   13d6c:	cmp	r0, #0
   13d70:	movne	r3, r6
   13d74:	orreq	r3, r6, #1
   13d78:	cmp	r3, #0
   13d7c:	addne	r0, r0, #1
   13d80:	strne	r0, [sp, #4]
   13d84:	mov	r0, #0
   13d88:	ldr	r1, [sp, #4]
   13d8c:	bl	13c40 <putchar_unlocked@plt+0x2d6c>
   13d90:	subs	r4, r0, #0
   13d94:	beq	13ca4 <putchar_unlocked@plt+0x2dd0>
   13d98:	cmn	r5, #1
   13d9c:	ldr	r0, [sp, #4]
   13da0:	movne	r1, #4
   13da4:	moveq	r1, #0
   13da8:	add	r1, r4, r1
   13dac:	sub	r0, r0, r6
   13db0:	bl	10e8c <getgroups@plt>
   13db4:	cmp	r0, #0
   13db8:	blt	13cf4 <putchar_unlocked@plt+0x2e20>
   13dbc:	cmn	r5, #1
   13dc0:	addne	r0, r0, #1
   13dc4:	strne	r5, [r4]
   13dc8:	cmp	r0, #1
   13dcc:	str	r4, [r7]
   13dd0:	ldrgt	ip, [r4]
   13dd4:	addgt	r1, r4, r0, lsl #2
   13dd8:	addgt	r3, r4, #4
   13ddc:	ble	13ca8 <putchar_unlocked@plt+0x2dd4>
   13de0:	cmp	r1, r3
   13de4:	bls	13ca8 <putchar_unlocked@plt+0x2dd4>
   13de8:	ldr	r2, [r3], #4
   13dec:	cmp	ip, r2
   13df0:	beq	13e08 <putchar_unlocked@plt+0x2f34>
   13df4:	ldr	lr, [r4]
   13df8:	cmp	r2, lr
   13dfc:	strne	r2, [r4, #4]
   13e00:	addne	r4, r4, #4
   13e04:	bne	13de0 <putchar_unlocked@plt+0x2f0c>
   13e08:	sub	r0, r0, #1
   13e0c:	b	13de0 <putchar_unlocked@plt+0x2f0c>
   13e10:	push	{r4, r5, r6, lr}
   13e14:	subs	r4, r2, #0
   13e18:	mov	r6, r0
   13e1c:	mov	r5, r1
   13e20:	beq	13e38 <putchar_unlocked@plt+0x2f64>
   13e24:	mov	r1, r4
   13e28:	mvn	r0, #0
   13e2c:	bl	13f3c <putchar_unlocked@plt+0x3068>
   13e30:	cmp	r0, r5
   13e34:	bcc	13e48 <putchar_unlocked@plt+0x2f74>
   13e38:	mul	r1, r5, r4
   13e3c:	mov	r0, r6
   13e40:	pop	{r4, r5, r6, lr}
   13e44:	b	13964 <putchar_unlocked@plt+0x2a90>
   13e48:	bl	10df0 <__errno_location@plt>
   13e4c:	mov	r3, #12
   13e50:	str	r3, [r0]
   13e54:	mov	r0, #0
   13e58:	pop	{r4, r5, r6, pc}
   13e5c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e60:	sub	sp, sp, #268	; 0x10c
   13e64:	ldr	r2, [pc, #64]	; 13eac <putchar_unlocked@plt+0x2fd8>
   13e68:	add	r1, sp, #4
   13e6c:	bl	13eb8 <putchar_unlocked@plt+0x2fe4>
   13e70:	cmp	r0, #0
   13e74:	movne	r0, #0
   13e78:	bne	13ea4 <putchar_unlocked@plt+0x2fd0>
   13e7c:	ldr	r1, [pc, #44]	; 13eb0 <putchar_unlocked@plt+0x2fdc>
   13e80:	add	r0, sp, #4
   13e84:	bl	10c94 <strcmp@plt>
   13e88:	cmp	r0, #0
   13e8c:	beq	13ea4 <putchar_unlocked@plt+0x2fd0>
   13e90:	ldr	r1, [pc, #28]	; 13eb4 <putchar_unlocked@plt+0x2fe0>
   13e94:	add	r0, sp, #4
   13e98:	bl	10c94 <strcmp@plt>
   13e9c:	adds	r0, r0, #0
   13ea0:	movne	r0, #1
   13ea4:	add	sp, sp, #268	; 0x10c
   13ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   13eac:	andeq	r0, r0, r1, lsl #2
   13eb0:	ldrdeq	r4, [r1], -r2
   13eb4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13eb8:	push	{r4, r5, r6, lr}
   13ebc:	mov	r5, r1
   13ec0:	mov	r1, #0
   13ec4:	mov	r4, r2
   13ec8:	bl	10e68 <setlocale@plt>
   13ecc:	subs	r6, r0, #0
   13ed0:	bne	13ee4 <putchar_unlocked@plt+0x3010>
   13ed4:	cmp	r4, #0
   13ed8:	strbne	r6, [r5]
   13edc:	mov	r0, #22
   13ee0:	pop	{r4, r5, r6, pc}
   13ee4:	bl	10de4 <strlen@plt>
   13ee8:	cmp	r4, r0
   13eec:	bls	13f08 <putchar_unlocked@plt+0x3034>
   13ef0:	add	r2, r0, #1
   13ef4:	mov	r1, r6
   13ef8:	mov	r0, r5
   13efc:	bl	10cdc <memcpy@plt>
   13f00:	mov	r0, #0
   13f04:	pop	{r4, r5, r6, pc}
   13f08:	cmp	r4, #0
   13f0c:	beq	13f2c <putchar_unlocked@plt+0x3058>
   13f10:	sub	r4, r4, #1
   13f14:	mov	r2, r4
   13f18:	mov	r1, r6
   13f1c:	mov	r0, r5
   13f20:	bl	10cdc <memcpy@plt>
   13f24:	mov	r3, #0
   13f28:	strb	r3, [r5, r4]
   13f2c:	mov	r0, #34	; 0x22
   13f30:	pop	{r4, r5, r6, pc}
   13f34:	mov	r1, #0
   13f38:	b	10e68 <setlocale@plt>
   13f3c:	subs	r2, r1, #1
   13f40:	bxeq	lr
   13f44:	bcc	1411c <putchar_unlocked@plt+0x3248>
   13f48:	cmp	r0, r1
   13f4c:	bls	14100 <putchar_unlocked@plt+0x322c>
   13f50:	tst	r1, r2
   13f54:	beq	1410c <putchar_unlocked@plt+0x3238>
   13f58:	clz	r3, r0
   13f5c:	clz	r2, r1
   13f60:	sub	r3, r2, r3
   13f64:	rsbs	r3, r3, #31
   13f68:	addne	r3, r3, r3, lsl #1
   13f6c:	mov	r2, #0
   13f70:	addne	pc, pc, r3, lsl #2
   13f74:	nop			; (mov r0, r0)
   13f78:	cmp	r0, r1, lsl #31
   13f7c:	adc	r2, r2, r2
   13f80:	subcs	r0, r0, r1, lsl #31
   13f84:	cmp	r0, r1, lsl #30
   13f88:	adc	r2, r2, r2
   13f8c:	subcs	r0, r0, r1, lsl #30
   13f90:	cmp	r0, r1, lsl #29
   13f94:	adc	r2, r2, r2
   13f98:	subcs	r0, r0, r1, lsl #29
   13f9c:	cmp	r0, r1, lsl #28
   13fa0:	adc	r2, r2, r2
   13fa4:	subcs	r0, r0, r1, lsl #28
   13fa8:	cmp	r0, r1, lsl #27
   13fac:	adc	r2, r2, r2
   13fb0:	subcs	r0, r0, r1, lsl #27
   13fb4:	cmp	r0, r1, lsl #26
   13fb8:	adc	r2, r2, r2
   13fbc:	subcs	r0, r0, r1, lsl #26
   13fc0:	cmp	r0, r1, lsl #25
   13fc4:	adc	r2, r2, r2
   13fc8:	subcs	r0, r0, r1, lsl #25
   13fcc:	cmp	r0, r1, lsl #24
   13fd0:	adc	r2, r2, r2
   13fd4:	subcs	r0, r0, r1, lsl #24
   13fd8:	cmp	r0, r1, lsl #23
   13fdc:	adc	r2, r2, r2
   13fe0:	subcs	r0, r0, r1, lsl #23
   13fe4:	cmp	r0, r1, lsl #22
   13fe8:	adc	r2, r2, r2
   13fec:	subcs	r0, r0, r1, lsl #22
   13ff0:	cmp	r0, r1, lsl #21
   13ff4:	adc	r2, r2, r2
   13ff8:	subcs	r0, r0, r1, lsl #21
   13ffc:	cmp	r0, r1, lsl #20
   14000:	adc	r2, r2, r2
   14004:	subcs	r0, r0, r1, lsl #20
   14008:	cmp	r0, r1, lsl #19
   1400c:	adc	r2, r2, r2
   14010:	subcs	r0, r0, r1, lsl #19
   14014:	cmp	r0, r1, lsl #18
   14018:	adc	r2, r2, r2
   1401c:	subcs	r0, r0, r1, lsl #18
   14020:	cmp	r0, r1, lsl #17
   14024:	adc	r2, r2, r2
   14028:	subcs	r0, r0, r1, lsl #17
   1402c:	cmp	r0, r1, lsl #16
   14030:	adc	r2, r2, r2
   14034:	subcs	r0, r0, r1, lsl #16
   14038:	cmp	r0, r1, lsl #15
   1403c:	adc	r2, r2, r2
   14040:	subcs	r0, r0, r1, lsl #15
   14044:	cmp	r0, r1, lsl #14
   14048:	adc	r2, r2, r2
   1404c:	subcs	r0, r0, r1, lsl #14
   14050:	cmp	r0, r1, lsl #13
   14054:	adc	r2, r2, r2
   14058:	subcs	r0, r0, r1, lsl #13
   1405c:	cmp	r0, r1, lsl #12
   14060:	adc	r2, r2, r2
   14064:	subcs	r0, r0, r1, lsl #12
   14068:	cmp	r0, r1, lsl #11
   1406c:	adc	r2, r2, r2
   14070:	subcs	r0, r0, r1, lsl #11
   14074:	cmp	r0, r1, lsl #10
   14078:	adc	r2, r2, r2
   1407c:	subcs	r0, r0, r1, lsl #10
   14080:	cmp	r0, r1, lsl #9
   14084:	adc	r2, r2, r2
   14088:	subcs	r0, r0, r1, lsl #9
   1408c:	cmp	r0, r1, lsl #8
   14090:	adc	r2, r2, r2
   14094:	subcs	r0, r0, r1, lsl #8
   14098:	cmp	r0, r1, lsl #7
   1409c:	adc	r2, r2, r2
   140a0:	subcs	r0, r0, r1, lsl #7
   140a4:	cmp	r0, r1, lsl #6
   140a8:	adc	r2, r2, r2
   140ac:	subcs	r0, r0, r1, lsl #6
   140b0:	cmp	r0, r1, lsl #5
   140b4:	adc	r2, r2, r2
   140b8:	subcs	r0, r0, r1, lsl #5
   140bc:	cmp	r0, r1, lsl #4
   140c0:	adc	r2, r2, r2
   140c4:	subcs	r0, r0, r1, lsl #4
   140c8:	cmp	r0, r1, lsl #3
   140cc:	adc	r2, r2, r2
   140d0:	subcs	r0, r0, r1, lsl #3
   140d4:	cmp	r0, r1, lsl #2
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #2
   140e0:	cmp	r0, r1, lsl #1
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #1
   140ec:	cmp	r0, r1
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1
   140f8:	mov	r0, r2
   140fc:	bx	lr
   14100:	moveq	r0, #1
   14104:	movne	r0, #0
   14108:	bx	lr
   1410c:	clz	r2, r1
   14110:	rsb	r2, r2, #31
   14114:	lsr	r0, r0, r2
   14118:	bx	lr
   1411c:	cmp	r0, #0
   14120:	mvnne	r0, #0
   14124:	b	143c4 <putchar_unlocked@plt+0x34f0>
   14128:	cmp	r1, #0
   1412c:	beq	1411c <putchar_unlocked@plt+0x3248>
   14130:	push	{r0, r1, lr}
   14134:	bl	13f3c <putchar_unlocked@plt+0x3068>
   14138:	pop	{r1, r2, lr}
   1413c:	mul	r3, r2, r0
   14140:	sub	r1, r1, r3
   14144:	bx	lr
   14148:	cmp	r1, #0
   1414c:	beq	14358 <putchar_unlocked@plt+0x3484>
   14150:	eor	ip, r0, r1
   14154:	rsbmi	r1, r1, #0
   14158:	subs	r2, r1, #1
   1415c:	beq	14324 <putchar_unlocked@plt+0x3450>
   14160:	movs	r3, r0
   14164:	rsbmi	r3, r0, #0
   14168:	cmp	r3, r1
   1416c:	bls	14330 <putchar_unlocked@plt+0x345c>
   14170:	tst	r1, r2
   14174:	beq	14340 <putchar_unlocked@plt+0x346c>
   14178:	clz	r2, r3
   1417c:	clz	r0, r1
   14180:	sub	r2, r0, r2
   14184:	rsbs	r2, r2, #31
   14188:	addne	r2, r2, r2, lsl #1
   1418c:	mov	r0, #0
   14190:	addne	pc, pc, r2, lsl #2
   14194:	nop			; (mov r0, r0)
   14198:	cmp	r3, r1, lsl #31
   1419c:	adc	r0, r0, r0
   141a0:	subcs	r3, r3, r1, lsl #31
   141a4:	cmp	r3, r1, lsl #30
   141a8:	adc	r0, r0, r0
   141ac:	subcs	r3, r3, r1, lsl #30
   141b0:	cmp	r3, r1, lsl #29
   141b4:	adc	r0, r0, r0
   141b8:	subcs	r3, r3, r1, lsl #29
   141bc:	cmp	r3, r1, lsl #28
   141c0:	adc	r0, r0, r0
   141c4:	subcs	r3, r3, r1, lsl #28
   141c8:	cmp	r3, r1, lsl #27
   141cc:	adc	r0, r0, r0
   141d0:	subcs	r3, r3, r1, lsl #27
   141d4:	cmp	r3, r1, lsl #26
   141d8:	adc	r0, r0, r0
   141dc:	subcs	r3, r3, r1, lsl #26
   141e0:	cmp	r3, r1, lsl #25
   141e4:	adc	r0, r0, r0
   141e8:	subcs	r3, r3, r1, lsl #25
   141ec:	cmp	r3, r1, lsl #24
   141f0:	adc	r0, r0, r0
   141f4:	subcs	r3, r3, r1, lsl #24
   141f8:	cmp	r3, r1, lsl #23
   141fc:	adc	r0, r0, r0
   14200:	subcs	r3, r3, r1, lsl #23
   14204:	cmp	r3, r1, lsl #22
   14208:	adc	r0, r0, r0
   1420c:	subcs	r3, r3, r1, lsl #22
   14210:	cmp	r3, r1, lsl #21
   14214:	adc	r0, r0, r0
   14218:	subcs	r3, r3, r1, lsl #21
   1421c:	cmp	r3, r1, lsl #20
   14220:	adc	r0, r0, r0
   14224:	subcs	r3, r3, r1, lsl #20
   14228:	cmp	r3, r1, lsl #19
   1422c:	adc	r0, r0, r0
   14230:	subcs	r3, r3, r1, lsl #19
   14234:	cmp	r3, r1, lsl #18
   14238:	adc	r0, r0, r0
   1423c:	subcs	r3, r3, r1, lsl #18
   14240:	cmp	r3, r1, lsl #17
   14244:	adc	r0, r0, r0
   14248:	subcs	r3, r3, r1, lsl #17
   1424c:	cmp	r3, r1, lsl #16
   14250:	adc	r0, r0, r0
   14254:	subcs	r3, r3, r1, lsl #16
   14258:	cmp	r3, r1, lsl #15
   1425c:	adc	r0, r0, r0
   14260:	subcs	r3, r3, r1, lsl #15
   14264:	cmp	r3, r1, lsl #14
   14268:	adc	r0, r0, r0
   1426c:	subcs	r3, r3, r1, lsl #14
   14270:	cmp	r3, r1, lsl #13
   14274:	adc	r0, r0, r0
   14278:	subcs	r3, r3, r1, lsl #13
   1427c:	cmp	r3, r1, lsl #12
   14280:	adc	r0, r0, r0
   14284:	subcs	r3, r3, r1, lsl #12
   14288:	cmp	r3, r1, lsl #11
   1428c:	adc	r0, r0, r0
   14290:	subcs	r3, r3, r1, lsl #11
   14294:	cmp	r3, r1, lsl #10
   14298:	adc	r0, r0, r0
   1429c:	subcs	r3, r3, r1, lsl #10
   142a0:	cmp	r3, r1, lsl #9
   142a4:	adc	r0, r0, r0
   142a8:	subcs	r3, r3, r1, lsl #9
   142ac:	cmp	r3, r1, lsl #8
   142b0:	adc	r0, r0, r0
   142b4:	subcs	r3, r3, r1, lsl #8
   142b8:	cmp	r3, r1, lsl #7
   142bc:	adc	r0, r0, r0
   142c0:	subcs	r3, r3, r1, lsl #7
   142c4:	cmp	r3, r1, lsl #6
   142c8:	adc	r0, r0, r0
   142cc:	subcs	r3, r3, r1, lsl #6
   142d0:	cmp	r3, r1, lsl #5
   142d4:	adc	r0, r0, r0
   142d8:	subcs	r3, r3, r1, lsl #5
   142dc:	cmp	r3, r1, lsl #4
   142e0:	adc	r0, r0, r0
   142e4:	subcs	r3, r3, r1, lsl #4
   142e8:	cmp	r3, r1, lsl #3
   142ec:	adc	r0, r0, r0
   142f0:	subcs	r3, r3, r1, lsl #3
   142f4:	cmp	r3, r1, lsl #2
   142f8:	adc	r0, r0, r0
   142fc:	subcs	r3, r3, r1, lsl #2
   14300:	cmp	r3, r1, lsl #1
   14304:	adc	r0, r0, r0
   14308:	subcs	r3, r3, r1, lsl #1
   1430c:	cmp	r3, r1
   14310:	adc	r0, r0, r0
   14314:	subcs	r3, r3, r1
   14318:	cmp	ip, #0
   1431c:	rsbmi	r0, r0, #0
   14320:	bx	lr
   14324:	teq	ip, r0
   14328:	rsbmi	r0, r0, #0
   1432c:	bx	lr
   14330:	movcc	r0, #0
   14334:	asreq	r0, ip, #31
   14338:	orreq	r0, r0, #1
   1433c:	bx	lr
   14340:	clz	r2, r1
   14344:	rsb	r2, r2, #31
   14348:	cmp	ip, #0
   1434c:	lsr	r0, r3, r2
   14350:	rsbmi	r0, r0, #0
   14354:	bx	lr
   14358:	cmp	r0, #0
   1435c:	mvngt	r0, #-2147483648	; 0x80000000
   14360:	movlt	r0, #-2147483648	; 0x80000000
   14364:	b	143c4 <putchar_unlocked@plt+0x34f0>
   14368:	cmp	r1, #0
   1436c:	beq	14358 <putchar_unlocked@plt+0x3484>
   14370:	push	{r0, r1, lr}
   14374:	bl	14150 <putchar_unlocked@plt+0x327c>
   14378:	pop	{r1, r2, lr}
   1437c:	mul	r3, r2, r0
   14380:	sub	r1, r1, r3
   14384:	bx	lr
   14388:	cmp	r3, #0
   1438c:	cmpeq	r2, #0
   14390:	bne	143a8 <putchar_unlocked@plt+0x34d4>
   14394:	cmp	r1, #0
   14398:	cmpeq	r0, #0
   1439c:	mvnne	r1, #0
   143a0:	mvnne	r0, #0
   143a4:	b	143c4 <putchar_unlocked@plt+0x34f0>
   143a8:	sub	sp, sp, #8
   143ac:	push	{sp, lr}
   143b0:	bl	143d4 <putchar_unlocked@plt+0x3500>
   143b4:	ldr	lr, [sp, #4]
   143b8:	add	sp, sp, #8
   143bc:	pop	{r2, r3}
   143c0:	bx	lr
   143c4:	push	{r1, lr}
   143c8:	mov	r0, #8
   143cc:	bl	10c7c <raise@plt>
   143d0:	pop	{r1, pc}
   143d4:	cmp	r1, r3
   143d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   143dc:	cmpeq	r0, r2
   143e0:	mov	r4, r0
   143e4:	mov	r5, r1
   143e8:	ldr	r9, [sp, #28]
   143ec:	movcc	r0, #0
   143f0:	movcc	r1, #0
   143f4:	bcc	144ec <putchar_unlocked@plt+0x3618>
   143f8:	cmp	r3, #0
   143fc:	clzeq	ip, r2
   14400:	clzne	ip, r3
   14404:	addeq	ip, ip, #32
   14408:	cmp	r5, #0
   1440c:	clzeq	r1, r4
   14410:	addeq	r1, r1, #32
   14414:	clzne	r1, r5
   14418:	sub	ip, ip, r1
   1441c:	sub	lr, ip, #32
   14420:	lsl	r7, r3, ip
   14424:	rsb	r8, ip, #32
   14428:	orr	r7, r7, r2, lsl lr
   1442c:	orr	r7, r7, r2, lsr r8
   14430:	lsl	r6, r2, ip
   14434:	cmp	r5, r7
   14438:	cmpeq	r4, r6
   1443c:	movcc	r0, #0
   14440:	movcc	r1, #0
   14444:	bcc	14460 <putchar_unlocked@plt+0x358c>
   14448:	mov	r3, #1
   1444c:	subs	r4, r4, r6
   14450:	lsl	r1, r3, lr
   14454:	lsl	r0, r3, ip
   14458:	orr	r1, r1, r3, lsr r8
   1445c:	sbc	r5, r5, r7
   14460:	cmp	ip, #0
   14464:	beq	144ec <putchar_unlocked@plt+0x3618>
   14468:	lsrs	r3, r7, #1
   1446c:	rrx	r2, r6
   14470:	mov	r6, ip
   14474:	b	14498 <putchar_unlocked@plt+0x35c4>
   14478:	subs	r4, r4, r2
   1447c:	sbc	r5, r5, r3
   14480:	adds	r4, r4, r4
   14484:	adc	r5, r5, r5
   14488:	adds	r4, r4, #1
   1448c:	adc	r5, r5, #0
   14490:	subs	r6, r6, #1
   14494:	beq	144b4 <putchar_unlocked@plt+0x35e0>
   14498:	cmp	r5, r3
   1449c:	cmpeq	r4, r2
   144a0:	bcs	14478 <putchar_unlocked@plt+0x35a4>
   144a4:	adds	r4, r4, r4
   144a8:	adc	r5, r5, r5
   144ac:	subs	r6, r6, #1
   144b0:	bne	14498 <putchar_unlocked@plt+0x35c4>
   144b4:	lsr	r6, r4, ip
   144b8:	lsr	r7, r5, ip
   144bc:	orr	r6, r6, r5, lsl r8
   144c0:	adds	r2, r0, r4
   144c4:	orr	r6, r6, r5, lsr lr
   144c8:	adc	r3, r1, r5
   144cc:	lsl	r1, r7, ip
   144d0:	orr	r1, r1, r6, lsl lr
   144d4:	lsl	r0, r6, ip
   144d8:	orr	r1, r1, r6, lsr r8
   144dc:	subs	r0, r2, r0
   144e0:	mov	r4, r6
   144e4:	mov	r5, r7
   144e8:	sbc	r1, r3, r1
   144ec:	cmp	r9, #0
   144f0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   144f4:	strd	r4, [r9]
   144f8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   144fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14500:	mov	r7, r0
   14504:	ldr	r6, [pc, #72]	; 14554 <putchar_unlocked@plt+0x3680>
   14508:	ldr	r5, [pc, #72]	; 14558 <putchar_unlocked@plt+0x3684>
   1450c:	add	r6, pc, r6
   14510:	add	r5, pc, r5
   14514:	sub	r6, r6, r5
   14518:	mov	r8, r1
   1451c:	mov	r9, r2
   14520:	bl	10c44 <calloc@plt-0x20>
   14524:	asrs	r6, r6, #2
   14528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1452c:	mov	r4, #0
   14530:	add	r4, r4, #1
   14534:	ldr	r3, [r5], #4
   14538:	mov	r2, r9
   1453c:	mov	r1, r8
   14540:	mov	r0, r7
   14544:	blx	r3
   14548:	cmp	r6, r4
   1454c:	bne	14530 <putchar_unlocked@plt+0x365c>
   14550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14554:	strdeq	r0, [r1], -ip
   14558:	strdeq	r0, [r1], -r4
   1455c:	bx	lr
   14560:	ldr	r3, [pc, #12]	; 14574 <putchar_unlocked@plt+0x36a0>
   14564:	mov	r1, #0
   14568:	add	r3, pc, r3
   1456c:	ldr	r2, [r3]
   14570:	b	10dfc <__cxa_atexit@plt>
   14574:	andeq	r0, r1, r8, ror fp

Disassembly of section .fini:

00014578 <.fini>:
   14578:	push	{r3, lr}
   1457c:	pop	{r3, pc}
