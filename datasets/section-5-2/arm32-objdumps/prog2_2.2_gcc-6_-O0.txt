
../repos/prog2/2.2:     file format elf32-littlearm


Disassembly of section .init:

000106d0 <.init>:
   106d0:	push	{r3, lr}
   106d4:	bl	107c8 <_start@@Base+0x3c>
   106d8:	pop	{r3, pc}

Disassembly of section .plt:

000106dc <printf@plt-0x14>:
   106dc:	push	{lr}		; (str lr, [sp, #-4]!)
   106e0:	ldr	lr, [pc, #4]	; 106ec <printf@plt-0x4>
   106e4:	add	lr, pc, lr
   106e8:	ldr	pc, [lr, #8]!
   106ec:	andeq	r0, r1, r4, lsl r9

000106f0 <printf@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2324]!	; 0x914

000106fc <free@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2316]!	; 0x90c

00010708 <fgets@plt>:
   10708:	add	ip, pc, #0, 12
   1070c:	add	ip, ip, #16, 20	; 0x10000
   10710:	ldr	pc, [ip, #2308]!	; 0x904

00010714 <getchar@plt>:
   10714:	add	ip, pc, #0, 12
   10718:	add	ip, ip, #16, 20	; 0x10000
   1071c:	ldr	pc, [ip, #2300]!	; 0x8fc

00010720 <realloc@plt>:
   10720:	add	ip, pc, #0, 12
   10724:	add	ip, ip, #16, 20	; 0x10000
   10728:	ldr	pc, [ip, #2292]!	; 0x8f4

0001072c <strcpy@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #16, 20	; 0x10000
   10734:	ldr	pc, [ip, #2284]!	; 0x8ec

00010738 <puts@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #16, 20	; 0x10000
   10740:	ldr	pc, [ip, #2276]!	; 0x8e4

00010744 <malloc@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2268]!	; 0x8dc

00010750 <__libc_start_main@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2260]!	; 0x8d4

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2252]!	; 0x8cc

00010768 <strlen@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2244]!	; 0x8c4

00010774 <__isoc99_scanf@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010780 <abort@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2228]!	; 0x8b4

Disassembly of section .text:

0001078c <_start@@Base>:
   1078c:	mov	fp, #0
   10790:	mov	lr, #0
   10794:	pop	{r1}		; (ldr r1, [sp], #4)
   10798:	mov	r2, sp
   1079c:	push	{r2}		; (str r2, [sp, #-4]!)
   107a0:	push	{r0}		; (str r0, [sp, #-4]!)
   107a4:	ldr	ip, [pc, #16]	; 107bc <_start@@Base+0x30>
   107a8:	push	{ip}		; (str ip, [sp, #-4]!)
   107ac:	ldr	r0, [pc, #12]	; 107c0 <_start@@Base+0x34>
   107b0:	ldr	r3, [pc, #12]	; 107c4 <_start@@Base+0x38>
   107b4:	bl	10750 <__libc_start_main@plt>
   107b8:	bl	10780 <abort@plt>
   107bc:	muleq	r1, ip, fp
   107c0:			; <UNDEFINED> instruction: 0x000108b4
   107c4:	andeq	r0, r1, ip, lsr fp
   107c8:	ldr	r3, [pc, #20]	; 107e4 <_start@@Base+0x58>
   107cc:	ldr	r2, [pc, #20]	; 107e8 <_start@@Base+0x5c>
   107d0:	add	r3, pc, r3
   107d4:	ldr	r2, [r3, r2]
   107d8:	cmp	r2, #0
   107dc:	bxeq	lr
   107e0:	b	1075c <__gmon_start__@plt>
   107e4:	andeq	r0, r1, r8, lsr #16
   107e8:	andeq	r0, r0, r0, asr #32
   107ec:	ldr	r3, [pc, #28]	; 10810 <_start@@Base+0x84>
   107f0:	ldr	r0, [pc, #28]	; 10814 <_start@@Base+0x88>
   107f4:	sub	r3, r3, r0
   107f8:	cmp	r3, #6
   107fc:	bxls	lr
   10800:	ldr	r3, [pc, #16]	; 10818 <_start@@Base+0x8c>
   10804:	cmp	r3, #0
   10808:	bxeq	lr
   1080c:	bx	r3
   10810:	andeq	r1, r2, r3, asr r0
   10814:	andeq	r1, r2, r0, asr r0
   10818:	andeq	r0, r0, r0
   1081c:	ldr	r1, [pc, #36]	; 10848 <_start@@Base+0xbc>
   10820:	ldr	r0, [pc, #36]	; 1084c <_start@@Base+0xc0>
   10824:	sub	r1, r1, r0
   10828:	asr	r1, r1, #2
   1082c:	add	r1, r1, r1, lsr #31
   10830:	asrs	r1, r1, #1
   10834:	bxeq	lr
   10838:	ldr	r3, [pc, #16]	; 10850 <_start@@Base+0xc4>
   1083c:	cmp	r3, #0
   10840:	bxeq	lr
   10844:	bx	r3
   10848:	andeq	r1, r2, r0, asr r0
   1084c:	andeq	r1, r2, r0, asr r0
   10850:	andeq	r0, r0, r0
   10854:	push	{r4, lr}
   10858:	ldr	r4, [pc, #24]	; 10878 <_start@@Base+0xec>
   1085c:	ldrb	r3, [r4]
   10860:	cmp	r3, #0
   10864:	popne	{r4, pc}
   10868:	bl	107ec <_start@@Base+0x60>
   1086c:	mov	r3, #1
   10870:	strb	r3, [r4]
   10874:	pop	{r4, pc}
   10878:	andeq	r1, r2, r0, asr r0
   1087c:	ldr	r0, [pc, #40]	; 108ac <_start@@Base+0x120>
   10880:	ldr	r3, [r0]
   10884:	cmp	r3, #0
   10888:	bne	10890 <_start@@Base+0x104>
   1088c:	b	1081c <_start@@Base+0x90>
   10890:	ldr	r3, [pc, #24]	; 108b0 <_start@@Base+0x124>
   10894:	cmp	r3, #0
   10898:	beq	1088c <_start@@Base+0x100>
   1089c:	push	{r4, lr}
   108a0:	blx	r3
   108a4:	pop	{r4, lr}
   108a8:	b	1081c <_start@@Base+0x90>
   108ac:	andeq	r0, r2, r4, lsl pc
   108b0:	andeq	r0, r0, r0

000108b4 <main@@Base>:
   108b4:	push	{r4, r5, r6, fp, lr}
   108b8:	add	fp, sp, #16
   108bc:	sub	sp, sp, #100	; 0x64
   108c0:	ldr	r5, [pc, #600]	; 10b20 <main@@Base+0x26c>
   108c4:	add	r5, pc, r5
   108c8:	mov	r0, #12
   108cc:	bl	10744 <malloc@plt>
   108d0:	mov	r3, r0
   108d4:	str	r3, [fp, #-28]	; 0xffffffe4
   108d8:	mov	r3, #0
   108dc:	str	r3, [fp, #-24]	; 0xffffffe8
   108e0:	b	10908 <main@@Base+0x54>
   108e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108e8:	lsl	r3, r3, #2
   108ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   108f0:	add	r3, r2, r3
   108f4:	mov	r2, #0
   108f8:	str	r2, [r3]
   108fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10900:	add	r3, r3, #1
   10904:	str	r3, [fp, #-24]	; 0xffffffe8
   10908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1090c:	cmp	r3, #2
   10910:	ble	108e4 <main@@Base+0x30>
   10914:	mov	r3, #0
   10918:	str	r3, [fp, #-24]	; 0xffffffe8
   1091c:	b	10994 <main@@Base+0xe0>
   10920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10924:	add	r3, r3, #1
   10928:	mov	r1, r3
   1092c:	ldr	r3, [pc, #496]	; 10b24 <main@@Base+0x270>
   10930:	add	r3, pc, r3
   10934:	mov	r0, r3
   10938:	bl	106f0 <printf@plt>
   1093c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10940:	lsl	r3, r3, #2
   10944:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10948:	add	r3, r2, r3
   1094c:	ldr	r3, [r3]
   10950:	cmp	r3, #0
   10954:	bne	1096c <main@@Base+0xb8>
   10958:	ldr	r3, [pc, #456]	; 10b28 <main@@Base+0x274>
   1095c:	add	r3, pc, r3
   10960:	mov	r0, r3
   10964:	bl	10738 <puts@plt>
   10968:	b	10988 <main@@Base+0xd4>
   1096c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10970:	lsl	r3, r3, #2
   10974:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10978:	add	r3, r2, r3
   1097c:	ldr	r3, [r3]
   10980:	mov	r0, r3
   10984:	bl	10738 <puts@plt>
   10988:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1098c:	add	r3, r3, #1
   10990:	str	r3, [fp, #-24]	; 0xffffffe8
   10994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10998:	cmp	r3, #2
   1099c:	ble	10920 <main@@Base+0x6c>
   109a0:	mov	r1, #3
   109a4:	ldr	r3, [pc, #384]	; 10b2c <main@@Base+0x278>
   109a8:	add	r3, pc, r3
   109ac:	mov	r0, r3
   109b0:	bl	106f0 <printf@plt>
   109b4:	sub	r3, fp, #112	; 0x70
   109b8:	mov	r1, r3
   109bc:	ldr	r3, [pc, #364]	; 10b30 <main@@Base+0x27c>
   109c0:	add	r3, pc, r3
   109c4:	mov	r0, r3
   109c8:	bl	10774 <__isoc99_scanf@plt>
   109cc:	bl	10714 <getchar@plt>
   109d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   109d4:	cmp	r3, #0
   109d8:	blt	109a0 <main@@Base+0xec>
   109dc:	ldr	r3, [fp, #-112]	; 0xffffff90
   109e0:	cmp	r3, #3
   109e4:	bgt	109a0 <main@@Base+0xec>
   109e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   109ec:	cmp	r3, #0
   109f0:	beq	10ac4 <main@@Base+0x210>
   109f4:	ldr	r3, [pc, #312]	; 10b34 <main@@Base+0x280>
   109f8:	add	r3, pc, r3
   109fc:	mov	r0, r3
   10a00:	bl	106f0 <printf@plt>
   10a04:	ldr	r3, [pc, #300]	; 10b38 <main@@Base+0x284>
   10a08:	ldr	r3, [r5, r3]
   10a0c:	ldr	r2, [r3]
   10a10:	sub	r3, fp, #108	; 0x6c
   10a14:	mov	r1, #80	; 0x50
   10a18:	mov	r0, r3
   10a1c:	bl	10708 <fgets@plt>
   10a20:	sub	r3, fp, #108	; 0x6c
   10a24:	mov	r0, r3
   10a28:	bl	10768 <strlen@plt>
   10a2c:	mov	r3, r0
   10a30:	sub	r3, r3, #1
   10a34:	sub	r2, fp, #20
   10a38:	add	r3, r2, r3
   10a3c:	mov	r2, #0
   10a40:	strb	r2, [r3, #-88]	; 0xffffffa8
   10a44:	ldr	r3, [fp, #-112]	; 0xffffff90
   10a48:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a4c:	lsl	r3, r3, #2
   10a50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a54:	add	r4, r2, r3
   10a58:	ldr	r3, [fp, #-112]	; 0xffffff90
   10a5c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10a60:	lsl	r3, r3, #2
   10a64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a68:	add	r3, r2, r3
   10a6c:	ldr	r6, [r3]
   10a70:	sub	r3, fp, #108	; 0x6c
   10a74:	mov	r0, r3
   10a78:	bl	10768 <strlen@plt>
   10a7c:	mov	r3, r0
   10a80:	add	r3, r3, #1
   10a84:	mov	r1, r3
   10a88:	mov	r0, r6
   10a8c:	bl	10720 <realloc@plt>
   10a90:	mov	r3, r0
   10a94:	str	r3, [r4]
   10a98:	ldr	r3, [fp, #-112]	; 0xffffff90
   10a9c:	sub	r3, r3, #-1073741823	; 0xc0000001
   10aa0:	lsl	r3, r3, #2
   10aa4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10aa8:	add	r3, r2, r3
   10aac:	ldr	r3, [r3]
   10ab0:	sub	r2, fp, #108	; 0x6c
   10ab4:	mov	r1, r2
   10ab8:	mov	r0, r3
   10abc:	bl	1072c <strcpy@plt>
   10ac0:	b	10914 <main@@Base+0x60>
   10ac4:	nop			; (mov r0, r0)
   10ac8:	mov	r3, #0
   10acc:	str	r3, [fp, #-24]	; 0xffffffe8
   10ad0:	b	10afc <main@@Base+0x248>
   10ad4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ad8:	lsl	r3, r3, #2
   10adc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ae0:	add	r3, r2, r3
   10ae4:	ldr	r3, [r3]
   10ae8:	mov	r0, r3
   10aec:	bl	106fc <free@plt>
   10af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10af4:	add	r3, r3, #1
   10af8:	str	r3, [fp, #-24]	; 0xffffffe8
   10afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b00:	cmp	r3, #2
   10b04:	ble	10ad4 <main@@Base+0x220>
   10b08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b0c:	bl	106fc <free@plt>
   10b10:	mov	r3, #0
   10b14:	mov	r0, r3
   10b18:	sub	sp, fp, #16
   10b1c:	pop	{r4, r5, r6, fp, pc}
   10b20:	andeq	r0, r1, r4, lsr r7
   10b24:	andeq	r0, r0, r4, ror r2
   10b28:	andeq	r0, r0, r0, asr r2
   10b2c:	andeq	r0, r0, ip, lsl #4
   10b30:	andeq	r0, r0, r8, lsl r2
   10b34:	andeq	r0, r0, r4, ror #3
   10b38:	andeq	r0, r0, r4, asr #32

00010b3c <__libc_csu_init@@Base>:
   10b3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b40:	mov	r7, r0
   10b44:	ldr	r6, [pc, #72]	; 10b94 <__libc_csu_init@@Base+0x58>
   10b48:	ldr	r5, [pc, #72]	; 10b98 <__libc_csu_init@@Base+0x5c>
   10b4c:	add	r6, pc, r6
   10b50:	add	r5, pc, r5
   10b54:	sub	r6, r6, r5
   10b58:	mov	r8, r1
   10b5c:	mov	r9, r2
   10b60:	bl	106d0 <printf@plt-0x20>
   10b64:	asrs	r6, r6, #2
   10b68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b6c:	mov	r4, #0
   10b70:	add	r4, r4, #1
   10b74:	ldr	r3, [r5], #4
   10b78:	mov	r2, r9
   10b7c:	mov	r1, r8
   10b80:	mov	r0, r7
   10b84:	blx	r3
   10b88:	cmp	r6, r4
   10b8c:	bne	10b70 <__libc_csu_init@@Base+0x34>
   10b90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b94:			; <UNDEFINED> instruction: 0x000103bc
   10b98:			; <UNDEFINED> instruction: 0x000103b4

00010b9c <__libc_csu_fini@@Base>:
   10b9c:	bx	lr

Disassembly of section .fini:

00010ba0 <.fini>:
   10ba0:	push	{r3, lr}
   10ba4:	pop	{r3, pc}
