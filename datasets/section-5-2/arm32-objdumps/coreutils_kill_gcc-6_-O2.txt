
../repos/coreutils/src/kill:     file format elf32-littlearm


Disassembly of section .init:

00010c7c <.init>:
   10c7c:	push	{r3, lr}
   10c80:	bl	1169c <abort@plt+0x790>
   10c84:	pop	{r3, pc}

Disassembly of section .plt:

00010c88 <calloc@plt-0x14>:
   10c88:	push	{lr}		; (str lr, [sp, #-4]!)
   10c8c:	ldr	lr, [pc, #4]	; 10c98 <calloc@plt-0x4>
   10c90:	add	lr, pc, lr
   10c94:	ldr	pc, [lr, #8]!
   10c98:	andeq	r6, r1, r8, ror #6

00010c9c <calloc@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #90112	; 0x16000
   10ca4:	ldr	pc, [ip, #872]!	; 0x368

00010ca8 <fputs_unlocked@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #90112	; 0x16000
   10cb0:	ldr	pc, [ip, #864]!	; 0x360

00010cb4 <raise@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #90112	; 0x16000
   10cbc:	ldr	pc, [ip, #856]!	; 0x358

00010cc0 <strcmp@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #90112	; 0x16000
   10cc8:	ldr	pc, [ip, #848]!	; 0x350

00010ccc <strtol@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #90112	; 0x16000
   10cd4:	ldr	pc, [ip, #840]!	; 0x348

00010cd8 <fflush@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #90112	; 0x16000
   10ce0:	ldr	pc, [ip, #832]!	; 0x340

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #90112	; 0x16000
   10cec:	ldr	pc, [ip, #824]!	; 0x338

00010cf0 <_exit@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #90112	; 0x16000
   10cf8:	ldr	pc, [ip, #816]!	; 0x330

00010cfc <memcpy@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #90112	; 0x16000
   10d04:	ldr	pc, [ip, #808]!	; 0x328

00010d08 <mbsinit@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #90112	; 0x16000
   10d10:	ldr	pc, [ip, #800]!	; 0x320

00010d14 <memcmp@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #90112	; 0x16000
   10d1c:	ldr	pc, [ip, #792]!	; 0x318

00010d20 <fputc_unlocked@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #90112	; 0x16000
   10d28:	ldr	pc, [ip, #784]!	; 0x310

00010d2c <dcgettext@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #90112	; 0x16000
   10d34:	ldr	pc, [ip, #776]!	; 0x308

00010d38 <realloc@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #90112	; 0x16000
   10d40:	ldr	pc, [ip, #768]!	; 0x300

00010d44 <textdomain@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #90112	; 0x16000
   10d4c:	ldr	pc, [ip, #760]!	; 0x2f8

00010d50 <strsignal@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #90112	; 0x16000
   10d58:	ldr	pc, [ip, #752]!	; 0x2f0

00010d5c <iswprint@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #90112	; 0x16000
   10d64:	ldr	pc, [ip, #744]!	; 0x2e8

00010d68 <fwrite@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #90112	; 0x16000
   10d70:	ldr	pc, [ip, #736]!	; 0x2e0

00010d74 <lseek64@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #90112	; 0x16000
   10d7c:	ldr	pc, [ip, #728]!	; 0x2d8

00010d80 <__ctype_get_mb_cur_max@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #90112	; 0x16000
   10d88:	ldr	pc, [ip, #720]!	; 0x2d0

00010d8c <strcpy@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #90112	; 0x16000
   10d94:	ldr	pc, [ip, #712]!	; 0x2c8

00010d98 <__fpending@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #90112	; 0x16000
   10da0:	ldr	pc, [ip, #704]!	; 0x2c0

00010da4 <mbrtowc@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #90112	; 0x16000
   10dac:	ldr	pc, [ip, #696]!	; 0x2b8

00010db0 <error@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #90112	; 0x16000
   10db8:	ldr	pc, [ip, #688]!	; 0x2b0

00010dbc <puts@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #90112	; 0x16000
   10dc4:	ldr	pc, [ip, #680]!	; 0x2a8

00010dc8 <malloc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #90112	; 0x16000
   10dd0:	ldr	pc, [ip, #672]!	; 0x2a0

00010dd4 <__libc_start_main@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #90112	; 0x16000
   10ddc:	ldr	pc, [ip, #664]!	; 0x298

00010de0 <__freading@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #90112	; 0x16000
   10de8:	ldr	pc, [ip, #656]!	; 0x290

00010dec <__gmon_start__@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #90112	; 0x16000
   10df4:	ldr	pc, [ip, #648]!	; 0x288

00010df8 <getopt_long@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #90112	; 0x16000
   10e00:	ldr	pc, [ip, #640]!	; 0x280

00010e04 <kill@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #90112	; 0x16000
   10e0c:	ldr	pc, [ip, #632]!	; 0x278

00010e10 <__ctype_b_loc@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #90112	; 0x16000
   10e18:	ldr	pc, [ip, #624]!	; 0x270

00010e1c <exit@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #90112	; 0x16000
   10e24:	ldr	pc, [ip, #616]!	; 0x268

00010e28 <strlen@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #90112	; 0x16000
   10e30:	ldr	pc, [ip, #608]!	; 0x260

00010e34 <__libc_current_sigrtmax@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #90112	; 0x16000
   10e3c:	ldr	pc, [ip, #600]!	; 0x258

00010e40 <strchr@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #90112	; 0x16000
   10e48:	ldr	pc, [ip, #592]!	; 0x250

00010e4c <__errno_location@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #90112	; 0x16000
   10e54:	ldr	pc, [ip, #584]!	; 0x248

00010e58 <__sprintf_chk@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #90112	; 0x16000
   10e60:	ldr	pc, [ip, #576]!	; 0x240

00010e64 <__cxa_atexit@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #90112	; 0x16000
   10e6c:	ldr	pc, [ip, #568]!	; 0x238

00010e70 <memset@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #90112	; 0x16000
   10e78:	ldr	pc, [ip, #560]!	; 0x230

00010e7c <__printf_chk@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #90112	; 0x16000
   10e84:	ldr	pc, [ip, #552]!	; 0x228

00010e88 <fileno@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #90112	; 0x16000
   10e90:	ldr	pc, [ip, #544]!	; 0x220

00010e94 <__fprintf_chk@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #90112	; 0x16000
   10e9c:	ldr	pc, [ip, #536]!	; 0x218

00010ea0 <fclose@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #90112	; 0x16000
   10ea8:	ldr	pc, [ip, #528]!	; 0x210

00010eac <fseeko64@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #90112	; 0x16000
   10eb4:	ldr	pc, [ip, #520]!	; 0x208

00010eb8 <setlocale@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #90112	; 0x16000
   10ec0:	ldr	pc, [ip, #512]!	; 0x200

00010ec4 <strrchr@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #90112	; 0x16000
   10ecc:	ldr	pc, [ip, #504]!	; 0x1f8

00010ed0 <nl_langinfo@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #90112	; 0x16000
   10ed8:	ldr	pc, [ip, #496]!	; 0x1f0

00010edc <__strtoll_internal@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #90112	; 0x16000
   10ee4:	ldr	pc, [ip, #488]!	; 0x1e8

00010ee8 <bindtextdomain@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #90112	; 0x16000
   10ef0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ef4 <__libc_current_sigrtmin@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #90112	; 0x16000
   10efc:	ldr	pc, [ip, #472]!	; 0x1d8

00010f00 <strncmp@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #90112	; 0x16000
   10f08:	ldr	pc, [ip, #464]!	; 0x1d0

00010f0c <abort@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #90112	; 0x16000
   10f14:	ldr	pc, [ip, #456]!	; 0x1c8

Disassembly of section .text:

00010f18 <.text>:
   10f18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f1c:	mov	r7, r0
   10f20:	sub	sp, sp, #76	; 0x4c
   10f24:	ldr	r0, [r1]
   10f28:	mov	r4, r1
   10f2c:	bl	11dc8 <abort@plt+0xebc>
   10f30:	ldr	r1, [pc, #1740]	; 11604 <abort@plt+0x6f8>
   10f34:	mov	r0, #6
   10f38:	bl	10eb8 <setlocale@plt>
   10f3c:	mov	r5, #0
   10f40:	ldr	r1, [pc, #1728]	; 11608 <abort@plt+0x6fc>
   10f44:	ldr	r0, [pc, #1728]	; 1160c <abort@plt+0x700>
   10f48:	ldr	r8, [pc, #1728]	; 11610 <abort@plt+0x704>
   10f4c:	ldr	r6, [pc, #1728]	; 11614 <abort@plt+0x708>
   10f50:	ldr	fp, [pc, #1728]	; 11618 <abort@plt+0x70c>
   10f54:	bl	10ee8 <bindtextdomain@plt>
   10f58:	mov	r9, r5
   10f5c:	ldr	r0, [pc, #1704]	; 1160c <abort@plt+0x700>
   10f60:	mvn	sl, #0
   10f64:	bl	10d44 <textdomain@plt>
   10f68:	ldr	r0, [pc, #1708]	; 1161c <abort@plt+0x710>
   10f6c:	bl	15328 <abort@plt+0x441c>
   10f70:	str	r5, [sp, #20]
   10f74:	mov	r3, r8
   10f78:	str	r9, [sp]
   10f7c:	ldr	r2, [pc, #1692]	; 11620 <abort@plt+0x714>
   10f80:	mov	r1, r4
   10f84:	mov	r0, r7
   10f88:	bl	10df8 <getopt_long@plt>
   10f8c:	cmn	r0, #1
   10f90:	mov	r3, r0
   10f94:	beq	11274 <abort@plt+0x368>
   10f98:	add	r2, r3, #3
   10f9c:	cmp	r2, #119	; 0x77
   10fa0:	ldrls	pc, [pc, r2, lsl #2]
   10fa4:	b	111e0 <abort@plt+0x2d4>
   10fa8:	andeq	r1, r1, ip, lsl #4
   10fac:	andeq	r1, r1, r4, lsl #4
   10fb0:	andeq	r1, r1, r0, ror #3
   10fb4:	andeq	r1, r1, r0, ror #3
   10fb8:	andeq	r1, r1, r0, ror #3
   10fbc:	andeq	r1, r1, r0, ror #3
   10fc0:	andeq	r1, r1, r0, ror #3
   10fc4:	andeq	r1, r1, r0, ror #3
   10fc8:	andeq	r1, r1, r0, ror #3
   10fcc:	andeq	r1, r1, r0, ror #3
   10fd0:	andeq	r1, r1, r0, ror #3
   10fd4:	andeq	r1, r1, r0, ror #3
   10fd8:	andeq	r1, r1, r0, ror #3
   10fdc:	andeq	r1, r1, r0, ror #3
   10fe0:	andeq	r1, r1, r0, ror #3
   10fe4:	andeq	r1, r1, r0, ror #3
   10fe8:	andeq	r1, r1, r0, ror #3
   10fec:	andeq	r1, r1, r0, ror #3
   10ff0:	andeq	r1, r1, r0, ror #3
   10ff4:	andeq	r1, r1, r0, ror #3
   10ff8:	andeq	r1, r1, r0, ror #3
   10ffc:	andeq	r1, r1, r0, ror #3
   11000:	andeq	r1, r1, r0, ror #3
   11004:	andeq	r1, r1, r0, ror #3
   11008:	andeq	r1, r1, r0, ror #3
   1100c:	andeq	r1, r1, r0, ror #3
   11010:	andeq	r1, r1, r0, ror #3
   11014:	andeq	r1, r1, r0, ror #3
   11018:	andeq	r1, r1, r0, ror #3
   1101c:	andeq	r1, r1, r0, ror #3
   11020:	andeq	r1, r1, r0, ror #3
   11024:	andeq	r1, r1, r0, ror #3
   11028:	andeq	r1, r1, r0, ror #3
   1102c:	andeq	r1, r1, r0, ror #3
   11030:	andeq	r1, r1, r0, ror #3
   11034:	andeq	r1, r1, r0, ror #3
   11038:	andeq	r1, r1, r0, ror #3
   1103c:	andeq	r1, r1, r0, ror #3
   11040:	andeq	r1, r1, r0, ror #3
   11044:	andeq	r1, r1, r0, ror #3
   11048:	andeq	r1, r1, r0, ror #3
   1104c:	andeq	r1, r1, r0, ror #3
   11050:	andeq	r1, r1, r0, ror #3
   11054:	andeq	r1, r1, r0, ror #3
   11058:	andeq	r1, r1, r0, ror #3
   1105c:	andeq	r1, r1, r0, ror #3
   11060:	andeq	r1, r1, r0, ror #3
   11064:	andeq	r1, r1, r0, ror #3
   11068:	andeq	r1, r1, r0, ror #3
   1106c:	andeq	r1, r1, r0, ror #3
   11070:	andeq	r1, r1, r0, ror #3
   11074:	andeq	r1, r1, r8, lsl #3
   11078:	andeq	r1, r1, r8, lsl #3
   1107c:	andeq	r1, r1, r8, lsl #3
   11080:	andeq	r1, r1, r8, lsl #3
   11084:	andeq	r1, r1, r8, lsl #3
   11088:	andeq	r1, r1, r8, lsl #3
   1108c:	andeq	r1, r1, r8, lsl #3
   11090:	andeq	r1, r1, r8, lsl #3
   11094:	andeq	r1, r1, r8, lsl #3
   11098:	andeq	r1, r1, r8, lsl #3
   1109c:	andeq	r1, r1, r0, ror #3
   110a0:	andeq	r1, r1, r0, ror #3
   110a4:	andeq	r1, r1, r0, ror #3
   110a8:	andeq	r1, r1, r0, ror #3
   110ac:	andeq	r1, r1, r0, ror #3
   110b0:	andeq	r1, r1, r0, ror #3
   110b4:	andeq	r1, r1, r0, ror #3
   110b8:	muleq	r1, r4, r1
   110bc:	muleq	r1, r4, r1
   110c0:	muleq	r1, r4, r1
   110c4:	muleq	r1, r4, r1
   110c8:	muleq	r1, r4, r1
   110cc:	muleq	r1, r4, r1
   110d0:	muleq	r1, r4, r1
   110d4:	muleq	r1, r4, r1
   110d8:	muleq	r1, r4, r1
   110dc:	muleq	r1, r4, r1
   110e0:	muleq	r1, r4, r1
   110e4:	andeq	r1, r1, r8, ror #3
   110e8:	muleq	r1, r4, r1
   110ec:	muleq	r1, r4, r1
   110f0:	muleq	r1, r4, r1
   110f4:	muleq	r1, r4, r1
   110f8:	muleq	r1, r4, r1
   110fc:	muleq	r1, r4, r1
   11100:	muleq	r1, r4, r1
   11104:	muleq	r1, r4, r1
   11108:	muleq	r1, r4, r1
   1110c:	muleq	r1, r4, r1
   11110:	muleq	r1, r4, r1
   11114:	muleq	r1, r4, r1
   11118:	muleq	r1, r4, r1
   1111c:	muleq	r1, r4, r1
   11120:	andeq	r1, r1, r0, ror #3
   11124:	andeq	r1, r1, r0, ror #3
   11128:	andeq	r1, r1, r0, ror #3
   1112c:	andeq	r1, r1, r0, ror #3
   11130:	andeq	r1, r1, r0, ror #3
   11134:	andeq	r1, r1, r0, ror #3
   11138:	andeq	r1, r1, r0, ror #3
   1113c:	andeq	r1, r1, r0, ror #3
   11140:	andeq	r1, r1, r0, ror #3
   11144:	andeq	r1, r1, r0, ror #3
   11148:	andeq	r1, r1, r0, ror #3
   1114c:	andeq	r1, r1, r0, ror #3
   11150:	andeq	r1, r1, r0, ror #3
   11154:	andeq	r1, r1, r0, ror #3
   11158:	andeq	r1, r1, r0, ror #3
   1115c:	andeq	r1, r1, r0, ror #3
   11160:	andeq	r1, r1, r0, ror #3
   11164:	andeq	r1, r1, ip, ror #3
   11168:	andeq	r1, r1, r0, ror #3
   1116c:	andeq	r1, r1, r4, asr #3
   11170:	andeq	r1, r1, r0, ror #3
   11174:	andeq	r1, r1, r0, ror #3
   11178:	andeq	r1, r1, r0, ror #3
   1117c:	andeq	r1, r1, r0, ror #3
   11180:	andeq	r1, r1, r4, asr #3
   11184:	andeq	r1, r1, r8, ror #3
   11188:	ldr	r2, [fp]
   1118c:	cmp	r2, #2
   11190:	bne	1126c <abort@plt+0x360>
   11194:	ldr	r2, [r6]
   11198:	cmp	r2, #0
   1119c:	beq	1123c <abort@plt+0x330>
   111a0:	ldr	r2, [fp]
   111a4:	ldr	r0, [r6]
   111a8:	sub	r2, r2, #-1073741823	; 0xc0000001
   111ac:	ldr	r2, [r4, r2, lsl #2]
   111b0:	add	r1, r2, #2
   111b4:	cmp	r0, r1
   111b8:	bne	11574 <abort@plt+0x668>
   111bc:	add	r2, r2, #1
   111c0:	str	r2, [r6]
   111c4:	cmn	sl, #1
   111c8:	bne	115c8 <abort@plt+0x6bc>
   111cc:	add	r1, sp, #32
   111d0:	ldr	r0, [r6]
   111d4:	bl	11ad0 <abort@plt+0xbc4>
   111d8:	subs	sl, r0, #0
   111dc:	bge	10f74 <abort@plt+0x68>
   111e0:	mov	r0, #1
   111e4:	bl	11788 <abort@plt+0x87c>
   111e8:	mov	r5, #1
   111ec:	ldr	r3, [sp, #20]
   111f0:	cmp	r3, #0
   111f4:	bne	115a4 <abort@plt+0x698>
   111f8:	mov	r3, #1
   111fc:	str	r3, [sp, #20]
   11200:	b	10f74 <abort@plt+0x68>
   11204:	mov	r0, #0
   11208:	bl	11788 <abort@plt+0x87c>
   1120c:	ldr	r1, [pc, #1040]	; 11624 <abort@plt+0x718>
   11210:	ldr	r2, [pc, #1040]	; 11628 <abort@plt+0x71c>
   11214:	ldr	r3, [pc, #1040]	; 1162c <abort@plt+0x720>
   11218:	mov	r4, #0
   1121c:	ldr	r0, [r1]
   11220:	ldr	r3, [r3]
   11224:	ldr	r1, [pc, #1028]	; 11630 <abort@plt+0x724>
   11228:	stm	sp, {r2, r4}
   1122c:	ldr	r2, [pc, #1024]	; 11634 <abort@plt+0x728>
   11230:	bl	14330 <abort@plt+0x3424>
   11234:	mov	r0, r4
   11238:	bl	10e1c <exit@plt>
   1123c:	ldr	r2, [fp]
   11240:	str	r3, [sp, #28]
   11244:	sub	r2, r2, #-1073741823	; 0xc0000001
   11248:	ldr	r2, [r4, r2, lsl #2]
   1124c:	mov	r0, r2
   11250:	str	r2, [sp, #24]
   11254:	bl	10e28 <strlen@plt>
   11258:	ldr	r2, [sp, #24]
   1125c:	ldr	r3, [sp, #28]
   11260:	add	r0, r2, r0
   11264:	str	r0, [r6]
   11268:	b	111a0 <abort@plt+0x294>
   1126c:	sub	r2, r2, #1
   11270:	str	r2, [fp]
   11274:	cmn	sl, #1
   11278:	ldr	r3, [sp, #20]
   1127c:	beq	11388 <abort@plt+0x47c>
   11280:	cmp	r3, #0
   11284:	movne	r2, #5
   11288:	ldrne	r1, [pc, #936]	; 11638 <abort@plt+0x72c>
   1128c:	bne	115ac <abort@plt+0x6a0>
   11290:	ldr	r3, [pc, #896]	; 11618 <abort@plt+0x70c>
   11294:	ldr	r3, [r3]
   11298:	cmp	r7, r3
   1129c:	ble	115f0 <abort@plt+0x6e4>
   112a0:	add	r8, r4, r3, lsl #2
   112a4:	ldr	r6, [r4, r3, lsl #2]
   112a8:	bl	10e4c <__errno_location@plt>
   112ac:	mov	r5, #0
   112b0:	mov	r7, r5
   112b4:	add	r4, sp, #52	; 0x34
   112b8:	mov	fp, #1
   112bc:	mov	r9, r0
   112c0:	b	11304 <abort@plt+0x3f8>
   112c4:	mov	r2, #5
   112c8:	ldr	r1, [pc, #876]	; 1163c <abort@plt+0x730>
   112cc:	mov	r0, r7
   112d0:	bl	10d2c <dcgettext@plt>
   112d4:	mov	r5, r0
   112d8:	mov	r0, r6
   112dc:	bl	13c88 <abort@plt+0x2d7c>
   112e0:	mov	r2, r5
   112e4:	mov	r1, r7
   112e8:	mov	r5, fp
   112ec:	mov	r3, r0
   112f0:	mov	r0, #0
   112f4:	bl	10db0 <error@plt>
   112f8:	ldr	r6, [r8, #4]!
   112fc:	cmp	r6, #0
   11300:	beq	11414 <abort@plt+0x508>
   11304:	mov	r3, #0
   11308:	str	r7, [r9]
   1130c:	mov	r2, #10
   11310:	mov	r1, r4
   11314:	mov	r0, r6
   11318:	bl	10edc <__strtoll_internal@plt>
   1131c:	ldr	r3, [r9]
   11320:	cmp	r3, #34	; 0x22
   11324:	beq	112c4 <abort@plt+0x3b8>
   11328:	asr	r3, r0, #31
   1132c:	cmp	r1, r3
   11330:	cmpeq	r0, r0
   11334:	bne	112c4 <abort@plt+0x3b8>
   11338:	ldr	r3, [sp, #52]	; 0x34
   1133c:	cmp	r6, r3
   11340:	beq	112c4 <abort@plt+0x3b8>
   11344:	ldrb	r3, [r3]
   11348:	cmp	r3, #0
   1134c:	bne	112c4 <abort@plt+0x3b8>
   11350:	mov	r1, sl
   11354:	bl	10e04 <kill@plt>
   11358:	cmp	r0, #0
   1135c:	beq	112f8 <abort@plt+0x3ec>
   11360:	mov	r0, r6
   11364:	ldr	r5, [r9]
   11368:	bl	13c88 <abort@plt+0x2d7c>
   1136c:	mov	r1, r5
   11370:	ldr	r2, [pc, #712]	; 11640 <abort@plt+0x734>
   11374:	mov	r5, fp
   11378:	mov	r3, r0
   1137c:	mov	r0, r7
   11380:	bl	10db0 <error@plt>
   11384:	b	112f8 <abort@plt+0x3ec>
   11388:	cmp	r3, #0
   1138c:	beq	115fc <abort@plt+0x6f0>
   11390:	ldr	r3, [pc, #640]	; 11618 <abort@plt+0x70c>
   11394:	ldr	r3, [r3]
   11398:	cmp	r7, r3
   1139c:	ble	114c8 <abort@plt+0x5bc>
   113a0:	cmp	r5, #0
   113a4:	add	r7, r4, r3, lsl #2
   113a8:	bne	11420 <abort@plt+0x514>
   113ac:	cmp	r7, #0
   113b0:	beq	114d4 <abort@plt+0x5c8>
   113b4:	mov	r4, #1
   113b8:	ldr	r6, [pc, #644]	; 11644 <abort@plt+0x738>
   113bc:	b	113cc <abort@plt+0x4c0>
   113c0:	add	r0, sp, #52	; 0x34
   113c4:	bl	10dbc <puts@plt>
   113c8:	add	r7, r7, #4
   113cc:	ldr	r0, [r7]
   113d0:	cmp	r0, #0
   113d4:	beq	11414 <abort@plt+0x508>
   113d8:	add	r1, sp, #52	; 0x34
   113dc:	bl	11ad0 <abort@plt+0xbc4>
   113e0:	subs	r2, r0, #0
   113e4:	movlt	r5, r4
   113e8:	blt	113c8 <abort@plt+0x4bc>
   113ec:	ldr	r3, [r7]
   113f0:	ldrb	r3, [r3]
   113f4:	sub	r3, r3, #48	; 0x30
   113f8:	cmp	r3, #9
   113fc:	bls	113c0 <abort@plt+0x4b4>
   11400:	mov	r1, r6
   11404:	mov	r0, r4
   11408:	bl	10e7c <__printf_chk@plt>
   1140c:	b	113c8 <abort@plt+0x4bc>
   11410:	mov	r5, #0
   11414:	mov	r0, r5
   11418:	add	sp, sp, #76	; 0x4c
   1141c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11420:	mov	r6, #0
   11424:	mov	r5, #1
   11428:	add	r4, sp, #52	; 0x34
   1142c:	mov	r1, r4
   11430:	mov	r0, r5
   11434:	bl	13e1c <abort@plt+0x2f10>
   11438:	cmp	r0, #0
   1143c:	bne	11450 <abort@plt+0x544>
   11440:	mov	r0, r4
   11444:	bl	10e28 <strlen@plt>
   11448:	cmp	r6, r0
   1144c:	movcc	r6, r0
   11450:	add	r5, r5, #1
   11454:	cmp	r5, #65	; 0x41
   11458:	bne	1142c <abort@plt+0x520>
   1145c:	cmp	r7, #0
   11460:	beq	1150c <abort@plt+0x600>
   11464:	ldr	sl, [pc, #476]	; 11648 <abort@plt+0x73c>
   11468:	ldr	r9, [pc, #476]	; 1164c <abort@plt+0x740>
   1146c:	sub	r7, r7, #4
   11470:	mov	r5, #0
   11474:	mov	r8, #1
   11478:	ldr	r0, [r7, #4]!
   1147c:	cmp	r0, #0
   11480:	beq	11414 <abort@plt+0x508>
   11484:	mov	r1, r4
   11488:	bl	11ad0 <abort@plt+0xbc4>
   1148c:	subs	fp, r0, #0
   11490:	movlt	r5, r8
   11494:	blt	11478 <abort@plt+0x56c>
   11498:	bl	10d50 <strsignal@plt>
   1149c:	str	r4, [sp, #4]
   114a0:	str	r6, [sp]
   114a4:	mov	r3, fp
   114a8:	mov	r2, #2
   114ac:	mov	r1, r9
   114b0:	cmp	r0, #0
   114b4:	moveq	r0, sl
   114b8:	str	r0, [sp, #8]
   114bc:	mov	r0, r8
   114c0:	bl	10e7c <__printf_chk@plt>
   114c4:	b	11478 <abort@plt+0x56c>
   114c8:	cmp	r5, #0
   114cc:	movne	r7, #0
   114d0:	bne	11420 <abort@plt+0x514>
   114d4:	mov	r5, #1
   114d8:	add	r4, sp, #52	; 0x34
   114dc:	b	114ec <abort@plt+0x5e0>
   114e0:	add	r5, r5, #1
   114e4:	cmp	r5, #65	; 0x41
   114e8:	beq	11410 <abort@plt+0x504>
   114ec:	mov	r1, r4
   114f0:	mov	r0, r5
   114f4:	bl	13e1c <abort@plt+0x2f10>
   114f8:	cmp	r0, #0
   114fc:	bne	114e0 <abort@plt+0x5d4>
   11500:	mov	r0, r4
   11504:	bl	10dbc <puts@plt>
   11508:	b	114e0 <abort@plt+0x5d4>
   1150c:	ldr	r9, [pc, #308]	; 11648 <abort@plt+0x73c>
   11510:	ldr	r8, [pc, #308]	; 1164c <abort@plt+0x740>
   11514:	mov	r5, #1
   11518:	mov	r7, #2
   1151c:	b	1152c <abort@plt+0x620>
   11520:	add	r5, r5, #1
   11524:	cmp	r5, #65	; 0x41
   11528:	beq	11410 <abort@plt+0x504>
   1152c:	mov	r1, r4
   11530:	mov	r0, r5
   11534:	bl	13e1c <abort@plt+0x2f10>
   11538:	cmp	r0, #0
   1153c:	bne	11520 <abort@plt+0x614>
   11540:	mov	r0, r5
   11544:	bl	10d50 <strsignal@plt>
   11548:	str	r4, [sp, #4]
   1154c:	str	r6, [sp]
   11550:	mov	r3, r5
   11554:	mov	r2, r7
   11558:	mov	r1, r8
   1155c:	cmp	r0, #0
   11560:	moveq	r0, r9
   11564:	str	r0, [sp, #8]
   11568:	mov	r0, #1
   1156c:	bl	10e7c <__printf_chk@plt>
   11570:	b	11520 <abort@plt+0x614>
   11574:	mov	r2, #5
   11578:	ldr	r1, [pc, #208]	; 11650 <abort@plt+0x744>
   1157c:	mov	r0, #0
   11580:	str	r3, [sp, #20]
   11584:	bl	10d2c <dcgettext@plt>
   11588:	ldr	r3, [sp, #20]
   1158c:	mov	r2, r0
   11590:	mov	r1, #0
   11594:	mov	r0, r1
   11598:	bl	10db0 <error@plt>
   1159c:	mov	r0, #1
   115a0:	bl	11788 <abort@plt+0x87c>
   115a4:	ldr	r1, [pc, #168]	; 11654 <abort@plt+0x748>
   115a8:	mov	r2, #5
   115ac:	mov	r0, #0
   115b0:	bl	10d2c <dcgettext@plt>
   115b4:	mov	r1, #0
   115b8:	mov	r2, r0
   115bc:	mov	r0, r1
   115c0:	bl	10db0 <error@plt>
   115c4:	b	111e0 <abort@plt+0x2d4>
   115c8:	mov	r2, #5
   115cc:	ldr	r1, [pc, #132]	; 11658 <abort@plt+0x74c>
   115d0:	mov	r0, #0
   115d4:	bl	10d2c <dcgettext@plt>
   115d8:	mov	r4, r0
   115dc:	ldr	r0, [r6]
   115e0:	bl	13c88 <abort@plt+0x2d7c>
   115e4:	mov	r2, r4
   115e8:	mov	r3, r0
   115ec:	b	11590 <abort@plt+0x684>
   115f0:	mov	r2, #5
   115f4:	ldr	r1, [pc, #96]	; 1165c <abort@plt+0x750>
   115f8:	b	115ac <abort@plt+0x6a0>
   115fc:	mov	sl, #15
   11600:	b	11290 <abort@plt+0x384>
   11604:	andeq	r5, r1, r0, ror r7
   11608:	andeq	r5, r1, r4, lsr #18
   1160c:	andeq	r5, r1, r8, ror r8
   11610:	andeq	r5, r1, r4, lsl #7
   11614:	strdeq	r7, [r2], -r0
   11618:	andeq	r7, r2, r0, ror #5
   1161c:	andeq	r1, r1, ip, lsl #25
   11620:	andeq	r5, r1, r4, ror #7
   11624:	andeq	r7, r2, ip, ror #5
   11628:	muleq	r1, r8, r9
   1162c:	andeq	r7, r2, ip, ror #1
   11630:	andeq	r5, r1, r8, asr r4
   11634:	andeq	r5, r1, r4, ror r8
   11638:	andeq	r5, r1, r4, lsr #19
   1163c:	strdeq	r5, [r1], -r4
   11640:	andeq	r5, r1, r8, ror #21
   11644:	strdeq	r5, [r1], -r0
   11648:	andeq	r5, r1, r0, lsr #18
   1164c:	andeq	r5, r1, r0, ror #19
   11650:	andeq	r5, r1, ip, lsr r9
   11654:	andeq	r5, r1, r4, ror r9
   11658:	andeq	r5, r1, r4, asr r9
   1165c:	andeq	r5, r1, r8, asr #19
   11660:	mov	fp, #0
   11664:	mov	lr, #0
   11668:	pop	{r1}		; (ldr r1, [sp], #4)
   1166c:	mov	r2, sp
   11670:	push	{r2}		; (str r2, [sp, #-4]!)
   11674:	push	{r0}		; (str r0, [sp, #-4]!)
   11678:	ldr	ip, [pc, #16]	; 11690 <abort@plt+0x784>
   1167c:	push	{ip}		; (str ip, [sp, #-4]!)
   11680:	ldr	r0, [pc, #12]	; 11694 <abort@plt+0x788>
   11684:	ldr	r3, [pc, #12]	; 11698 <abort@plt+0x78c>
   11688:	bl	10dd4 <__libc_start_main@plt>
   1168c:	bl	10f0c <abort@plt>
   11690:	andeq	r5, r1, r4, lsr #6
   11694:	andeq	r0, r1, r8, lsl pc
   11698:	andeq	r5, r1, r4, asr #5
   1169c:	ldr	r3, [pc, #20]	; 116b8 <abort@plt+0x7ac>
   116a0:	ldr	r2, [pc, #20]	; 116bc <abort@plt+0x7b0>
   116a4:	add	r3, pc, r3
   116a8:	ldr	r2, [r3, r2]
   116ac:	cmp	r2, #0
   116b0:	bxeq	lr
   116b4:	b	10dec <__gmon_start__@plt>
   116b8:	andeq	r5, r1, r4, asr r9
   116bc:	andeq	r0, r0, r0, ror #1
   116c0:	ldr	r3, [pc, #28]	; 116e4 <abort@plt+0x7d8>
   116c4:	ldr	r0, [pc, #28]	; 116e8 <abort@plt+0x7dc>
   116c8:	sub	r3, r3, r0
   116cc:	cmp	r3, #6
   116d0:	bxls	lr
   116d4:	ldr	r3, [pc, #16]	; 116ec <abort@plt+0x7e0>
   116d8:	cmp	r3, #0
   116dc:	bxeq	lr
   116e0:	bx	r3
   116e4:	ldrdeq	r7, [r2], -fp
   116e8:	ldrdeq	r7, [r2], -r8
   116ec:	andeq	r0, r0, r0
   116f0:	ldr	r1, [pc, #36]	; 1171c <abort@plt+0x810>
   116f4:	ldr	r0, [pc, #36]	; 11720 <abort@plt+0x814>
   116f8:	sub	r1, r1, r0
   116fc:	asr	r1, r1, #2
   11700:	add	r1, r1, r1, lsr #31
   11704:	asrs	r1, r1, #1
   11708:	bxeq	lr
   1170c:	ldr	r3, [pc, #16]	; 11724 <abort@plt+0x818>
   11710:	cmp	r3, #0
   11714:	bxeq	lr
   11718:	bx	r3
   1171c:	ldrdeq	r7, [r2], -r8
   11720:	ldrdeq	r7, [r2], -r8
   11724:	andeq	r0, r0, r0
   11728:	push	{r4, lr}
   1172c:	ldr	r4, [pc, #24]	; 1174c <abort@plt+0x840>
   11730:	ldrb	r3, [r4]
   11734:	cmp	r3, #0
   11738:	popne	{r4, pc}
   1173c:	bl	116c0 <abort@plt+0x7b4>
   11740:	mov	r3, #1
   11744:	strb	r3, [r4]
   11748:	pop	{r4, pc}
   1174c:	strdeq	r7, [r2], -r4
   11750:	ldr	r0, [pc, #40]	; 11780 <abort@plt+0x874>
   11754:	ldr	r3, [r0]
   11758:	cmp	r3, #0
   1175c:	bne	11764 <abort@plt+0x858>
   11760:	b	116f0 <abort@plt+0x7e4>
   11764:	ldr	r3, [pc, #24]	; 11784 <abort@plt+0x878>
   11768:	cmp	r3, #0
   1176c:	beq	11760 <abort@plt+0x854>
   11770:	push	{r4, lr}
   11774:	blx	r3
   11778:	pop	{r4, lr}
   1177c:	b	116f0 <abort@plt+0x7e4>
   11780:	andeq	r6, r2, r4, lsl pc
   11784:	andeq	r0, r0, r0
   11788:	subs	r6, r0, #0
   1178c:	push	{r7, lr}
   11790:	sub	sp, sp, #64	; 0x40
   11794:	beq	117d0 <abort@plt+0x8c4>
   11798:	ldr	r3, [pc, #724]	; 11a74 <abort@plt+0xb68>
   1179c:	mov	r2, #5
   117a0:	ldr	r1, [pc, #720]	; 11a78 <abort@plt+0xb6c>
   117a4:	mov	r0, #0
   117a8:	ldr	r4, [r3]
   117ac:	bl	10d2c <dcgettext@plt>
   117b0:	ldr	r3, [pc, #708]	; 11a7c <abort@plt+0xb70>
   117b4:	mov	r1, #1
   117b8:	ldr	r3, [r3]
   117bc:	mov	r2, r0
   117c0:	mov	r0, r4
   117c4:	bl	10e94 <__fprintf_chk@plt>
   117c8:	mov	r0, r6
   117cc:	bl	10e1c <exit@plt>
   117d0:	mov	r2, #5
   117d4:	ldr	r1, [pc, #676]	; 11a80 <abort@plt+0xb74>
   117d8:	bl	10d2c <dcgettext@plt>
   117dc:	ldr	r3, [pc, #664]	; 11a7c <abort@plt+0xb70>
   117e0:	ldr	r7, [pc, #668]	; 11a84 <abort@plt+0xb78>
   117e4:	ldr	r4, [pc, #668]	; 11a88 <abort@plt+0xb7c>
   117e8:	ldr	r3, [r3]
   117ec:	mov	r2, r3
   117f0:	str	r3, [sp]
   117f4:	mov	r1, r0
   117f8:	mov	r0, #1
   117fc:	bl	10e7c <__printf_chk@plt>
   11800:	mov	r2, #5
   11804:	ldr	r1, [pc, #640]	; 11a8c <abort@plt+0xb80>
   11808:	mov	r0, r6
   1180c:	bl	10d2c <dcgettext@plt>
   11810:	ldr	r1, [r7]
   11814:	bl	10ca8 <fputs_unlocked@plt>
   11818:	mov	r2, #5
   1181c:	ldr	r1, [pc, #620]	; 11a90 <abort@plt+0xb84>
   11820:	mov	r0, r6
   11824:	bl	10d2c <dcgettext@plt>
   11828:	ldr	r1, [r7]
   1182c:	bl	10ca8 <fputs_unlocked@plt>
   11830:	mov	r2, #5
   11834:	ldr	r1, [pc, #600]	; 11a94 <abort@plt+0xb88>
   11838:	mov	r0, r6
   1183c:	bl	10d2c <dcgettext@plt>
   11840:	ldr	r1, [r7]
   11844:	bl	10ca8 <fputs_unlocked@plt>
   11848:	mov	r2, #5
   1184c:	ldr	r1, [pc, #580]	; 11a98 <abort@plt+0xb8c>
   11850:	mov	r0, r6
   11854:	bl	10d2c <dcgettext@plt>
   11858:	ldr	r1, [r7]
   1185c:	bl	10ca8 <fputs_unlocked@plt>
   11860:	mov	r2, #5
   11864:	ldr	r1, [pc, #560]	; 11a9c <abort@plt+0xb90>
   11868:	mov	r0, r6
   1186c:	bl	10d2c <dcgettext@plt>
   11870:	ldr	r1, [r7]
   11874:	bl	10ca8 <fputs_unlocked@plt>
   11878:	mov	r2, #5
   1187c:	ldr	r1, [pc, #540]	; 11aa0 <abort@plt+0xb94>
   11880:	mov	r0, r6
   11884:	bl	10d2c <dcgettext@plt>
   11888:	ldr	r1, [r7]
   1188c:	bl	10ca8 <fputs_unlocked@plt>
   11890:	mov	r2, #5
   11894:	ldr	r1, [pc, #520]	; 11aa4 <abort@plt+0xb98>
   11898:	mov	r0, r6
   1189c:	bl	10d2c <dcgettext@plt>
   118a0:	ldr	r2, [pc, #512]	; 11aa8 <abort@plt+0xb9c>
   118a4:	mov	r1, r0
   118a8:	mov	r0, #1
   118ac:	bl	10e7c <__printf_chk@plt>
   118b0:	ldm	r4!, {r0, r1, r2, r3}
   118b4:	add	lr, sp, #8
   118b8:	stmia	lr!, {r0, r1, r2, r3}
   118bc:	ldm	r4!, {r0, r1, r2, r3}
   118c0:	ldr	ip, [sp, #8]
   118c4:	stmia	lr!, {r0, r1, r2, r3}
   118c8:	cmp	ip, #0
   118cc:	ldm	r4!, {r0, r1, r2, r3}
   118d0:	stmia	lr!, {r0, r1, r2, r3}
   118d4:	ldm	r4, {r0, r1}
   118d8:	addeq	r4, sp, #8
   118dc:	stm	lr, {r0, r1}
   118e0:	beq	11910 <abort@plt+0xa04>
   118e4:	ldr	r5, [pc, #444]	; 11aa8 <abort@plt+0xb9c>
   118e8:	add	r4, sp, #8
   118ec:	b	118fc <abort@plt+0x9f0>
   118f0:	ldr	ip, [r4, #8]!
   118f4:	cmp	ip, #0
   118f8:	beq	11910 <abort@plt+0xa04>
   118fc:	mov	r1, ip
   11900:	mov	r0, r5
   11904:	bl	10cc0 <strcmp@plt>
   11908:	cmp	r0, #0
   1190c:	bne	118f0 <abort@plt+0x9e4>
   11910:	ldr	r4, [r4, #4]
   11914:	mov	r2, #5
   11918:	cmp	r4, #0
   1191c:	ldr	r1, [pc, #392]	; 11aac <abort@plt+0xba0>
   11920:	beq	119c8 <abort@plt+0xabc>
   11924:	mov	r0, #0
   11928:	bl	10d2c <dcgettext@plt>
   1192c:	ldr	r3, [pc, #380]	; 11ab0 <abort@plt+0xba4>
   11930:	ldr	r2, [pc, #380]	; 11ab4 <abort@plt+0xba8>
   11934:	mov	r1, r0
   11938:	mov	r0, #1
   1193c:	bl	10e7c <__printf_chk@plt>
   11940:	mov	r1, #0
   11944:	mov	r0, #5
   11948:	bl	10eb8 <setlocale@plt>
   1194c:	cmp	r0, #0
   11950:	ldreq	r5, [pc, #336]	; 11aa8 <abort@plt+0xb9c>
   11954:	beq	11970 <abort@plt+0xa64>
   11958:	mov	r2, #3
   1195c:	ldr	r1, [pc, #340]	; 11ab8 <abort@plt+0xbac>
   11960:	bl	10f00 <strncmp@plt>
   11964:	ldr	r5, [pc, #316]	; 11aa8 <abort@plt+0xb9c>
   11968:	cmp	r0, #0
   1196c:	bne	11a58 <abort@plt+0xb4c>
   11970:	mov	r2, #5
   11974:	ldr	r1, [pc, #320]	; 11abc <abort@plt+0xbb0>
   11978:	mov	r0, #0
   1197c:	bl	10d2c <dcgettext@plt>
   11980:	ldr	r3, [pc, #288]	; 11aa8 <abort@plt+0xb9c>
   11984:	ldr	r2, [pc, #292]	; 11ab0 <abort@plt+0xba4>
   11988:	mov	r1, r0
   1198c:	mov	r0, #1
   11990:	bl	10e7c <__printf_chk@plt>
   11994:	mov	r2, #5
   11998:	ldr	r1, [pc, #288]	; 11ac0 <abort@plt+0xbb4>
   1199c:	mov	r0, #0
   119a0:	bl	10d2c <dcgettext@plt>
   119a4:	ldr	r2, [pc, #280]	; 11ac4 <abort@plt+0xbb8>
   119a8:	cmp	r4, r5
   119ac:	ldr	r3, [pc, #276]	; 11ac8 <abort@plt+0xbbc>
   119b0:	movne	r3, r2
   119b4:	mov	r1, r0
   119b8:	mov	r2, r4
   119bc:	mov	r0, #1
   119c0:	bl	10e7c <__printf_chk@plt>
   119c4:	b	117c8 <abort@plt+0x8bc>
   119c8:	mov	r0, r4
   119cc:	bl	10d2c <dcgettext@plt>
   119d0:	ldr	r3, [pc, #216]	; 11ab0 <abort@plt+0xba4>
   119d4:	ldr	r2, [pc, #216]	; 11ab4 <abort@plt+0xba8>
   119d8:	mov	r1, r0
   119dc:	mov	r0, #1
   119e0:	bl	10e7c <__printf_chk@plt>
   119e4:	mov	r1, r4
   119e8:	mov	r0, #5
   119ec:	bl	10eb8 <setlocale@plt>
   119f0:	cmp	r0, #0
   119f4:	beq	11a0c <abort@plt+0xb00>
   119f8:	mov	r2, #3
   119fc:	ldr	r1, [pc, #180]	; 11ab8 <abort@plt+0xbac>
   11a00:	bl	10f00 <strncmp@plt>
   11a04:	cmp	r0, #0
   11a08:	bne	11a50 <abort@plt+0xb44>
   11a0c:	mov	r2, #5
   11a10:	ldr	r1, [pc, #164]	; 11abc <abort@plt+0xbb0>
   11a14:	mov	r0, #0
   11a18:	bl	10d2c <dcgettext@plt>
   11a1c:	ldr	r3, [pc, #132]	; 11aa8 <abort@plt+0xb9c>
   11a20:	ldr	r2, [pc, #136]	; 11ab0 <abort@plt+0xba4>
   11a24:	mov	r4, r3
   11a28:	mov	r1, r0
   11a2c:	mov	r0, #1
   11a30:	bl	10e7c <__printf_chk@plt>
   11a34:	ldr	r1, [pc, #132]	; 11ac0 <abort@plt+0xbb4>
   11a38:	mov	r2, #5
   11a3c:	mov	r0, #0
   11a40:	bl	10d2c <dcgettext@plt>
   11a44:	ldr	r3, [pc, #124]	; 11ac8 <abort@plt+0xbbc>
   11a48:	mov	r1, r0
   11a4c:	b	119b8 <abort@plt+0xaac>
   11a50:	ldr	r5, [pc, #80]	; 11aa8 <abort@plt+0xb9c>
   11a54:	mov	r4, r5
   11a58:	mov	r2, #5
   11a5c:	ldr	r1, [pc, #104]	; 11acc <abort@plt+0xbc0>
   11a60:	mov	r0, #0
   11a64:	bl	10d2c <dcgettext@plt>
   11a68:	ldr	r1, [r7]
   11a6c:	bl	10ca8 <fputs_unlocked@plt>
   11a70:	b	11970 <abort@plt+0xa64>
   11a74:	andeq	r7, r2, r8, ror #5
   11a78:	andeq	r5, r1, r0, ror #8
   11a7c:	andeq	r7, r2, r0, lsl #6
   11a80:	andeq	r5, r1, r8, lsl #9
   11a84:	andeq	r7, r2, ip, ror #5
   11a88:	andeq	r5, r1, ip, asr #6
   11a8c:	andeq	r5, r1, r4, ror #9
   11a90:	andeq	r5, r1, r4, lsl r5
   11a94:	andeq	r5, r1, r0, ror #10
   11a98:	andeq	r5, r1, ip, asr #12
   11a9c:	andeq	r5, r1, ip, ror r6
   11aa0:			; <UNDEFINED> instruction: 0x000156b4
   11aa4:	andeq	r5, r1, r4, ror r7
   11aa8:	andeq	r5, r1, r8, asr r4
   11aac:	andeq	r5, r1, r4, lsr r8
   11ab0:	andeq	r5, r1, ip, asr #16
   11ab4:	andeq	r5, r1, r4, ror r8
   11ab8:	andeq	r5, r1, r4, lsl #17
   11abc:	ldrdeq	r5, [r1], -r0
   11ac0:	andeq	r5, r1, ip, ror #17
   11ac4:	andeq	r5, r1, r0, ror r7
   11ac8:	andeq	r5, r1, r4, lsl sl
   11acc:	andeq	r5, r1, r8, lsl #17
   11ad0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ad4:	mov	r7, r0
   11ad8:	ldrb	r3, [r0]
   11adc:	sub	sp, sp, #12
   11ae0:	mov	r8, r1
   11ae4:	sub	r3, r3, #48	; 0x30
   11ae8:	cmp	r3, #9
   11aec:	bhi	11b58 <abort@plt+0xc4c>
   11af0:	bl	10e4c <__errno_location@plt>
   11af4:	mov	r3, #0
   11af8:	mov	r2, #10
   11afc:	add	r1, sp, #4
   11b00:	str	r3, [r0]
   11b04:	mov	r4, r0
   11b08:	mov	r0, r7
   11b0c:	bl	10ccc <strtol@plt>
   11b10:	ldr	r3, [sp, #4]
   11b14:	cmp	r7, r3
   11b18:	beq	11bf4 <abort@plt+0xce8>
   11b1c:	ldrb	r3, [r3]
   11b20:	cmp	r3, #0
   11b24:	bne	11bf4 <abort@plt+0xce8>
   11b28:	ldr	r3, [r4]
   11b2c:	cmp	r3, #0
   11b30:	bne	11bf4 <abort@plt+0xce8>
   11b34:	cmn	r0, #1
   11b38:	streq	r0, [sp]
   11b3c:	beq	11bfc <abort@plt+0xcf0>
   11b40:	cmp	r0, #254	; 0xfe
   11b44:	movle	r3, #127	; 0x7f
   11b48:	movgt	r3, #255	; 0xff
   11b4c:	and	r0, r0, r3
   11b50:	str	r0, [sp]
   11b54:	b	11bb8 <abort@plt+0xcac>
   11b58:	bl	14958 <abort@plt+0x3a4c>
   11b5c:	ldrb	r4, [r0]
   11b60:	mov	r9, r0
   11b64:	cmp	r4, #0
   11b68:	movne	r5, r0
   11b6c:	ldrne	r6, [pc, #240]	; 11c64 <abort@plt+0xd58>
   11b70:	beq	11b98 <abort@plt+0xc8c>
   11b74:	mov	r1, r4
   11b78:	mov	r0, r6
   11b7c:	bl	10e40 <strchr@plt>
   11b80:	sub	r4, r4, #32
   11b84:	cmp	r0, #0
   11b88:	strbne	r4, [r5]
   11b8c:	ldrb	r4, [r5, #1]!
   11b90:	cmp	r4, #0
   11b94:	bne	11b74 <abort@plt+0xc68>
   11b98:	mov	r1, sp
   11b9c:	mov	r0, r9
   11ba0:	bl	13ca0 <abort@plt+0x2d94>
   11ba4:	cmp	r0, #0
   11ba8:	bne	11bdc <abort@plt+0xcd0>
   11bac:	mov	r0, r9
   11bb0:	bl	11d70 <abort@plt+0xe64>
   11bb4:	ldr	r0, [sp]
   11bb8:	cmp	r0, #0
   11bbc:	blt	11bfc <abort@plt+0xcf0>
   11bc0:	mov	r1, r8
   11bc4:	bl	13e1c <abort@plt+0x2f10>
   11bc8:	cmp	r0, #0
   11bcc:	bne	11bfc <abort@plt+0xcf0>
   11bd0:	ldr	r0, [sp]
   11bd4:	add	sp, sp, #12
   11bd8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11bdc:	ldrb	r3, [r9]
   11be0:	cmp	r3, #83	; 0x53
   11be4:	beq	11c34 <abort@plt+0xd28>
   11be8:	mvn	r3, #0
   11bec:	str	r3, [sp]
   11bf0:	b	11bac <abort@plt+0xca0>
   11bf4:	mvn	r3, #0
   11bf8:	str	r3, [sp]
   11bfc:	mov	r2, #5
   11c00:	ldr	r1, [pc, #96]	; 11c68 <abort@plt+0xd5c>
   11c04:	mov	r0, #0
   11c08:	bl	10d2c <dcgettext@plt>
   11c0c:	mov	r4, r0
   11c10:	mov	r0, r7
   11c14:	bl	13c88 <abort@plt+0x2d7c>
   11c18:	mov	r1, #0
   11c1c:	mov	r2, r4
   11c20:	mov	r3, r0
   11c24:	mov	r0, r1
   11c28:	bl	10db0 <error@plt>
   11c2c:	mvn	r0, #0
   11c30:	b	11bd4 <abort@plt+0xcc8>
   11c34:	ldrb	r3, [r9, #1]
   11c38:	cmp	r3, #73	; 0x49
   11c3c:	bne	11be8 <abort@plt+0xcdc>
   11c40:	ldrb	r3, [r9, #2]
   11c44:	cmp	r3, #71	; 0x47
   11c48:	bne	11be8 <abort@plt+0xcdc>
   11c4c:	mov	r1, sp
   11c50:	add	r0, r9, #3
   11c54:	bl	13ca0 <abort@plt+0x2d94>
   11c58:	cmp	r0, #0
   11c5c:	bne	11be8 <abort@plt+0xcdc>
   11c60:	b	11bac <abort@plt+0xca0>
   11c64:	muleq	r1, r8, sl
   11c68:			; <UNDEFINED> instruction: 0x00015ab4
   11c6c:	ldr	r3, [pc, #4]	; 11c78 <abort@plt+0xd6c>
   11c70:	str	r0, [r3]
   11c74:	bx	lr
   11c78:	strdeq	r7, [r2], -r8
   11c7c:	ldr	r3, [pc, #4]	; 11c88 <abort@plt+0xd7c>
   11c80:	strb	r0, [r3, #4]
   11c84:	bx	lr
   11c88:	strdeq	r7, [r2], -r8
   11c8c:	ldr	r3, [pc, #192]	; 11d54 <abort@plt+0xe48>
   11c90:	push	{r4, r5, r6, lr}
   11c94:	sub	sp, sp, #8
   11c98:	ldr	r0, [r3]
   11c9c:	bl	14a84 <abort@plt+0x3b78>
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cc8 <abort@plt+0xdbc>
   11ca8:	ldr	r4, [pc, #168]	; 11d58 <abort@plt+0xe4c>
   11cac:	ldrb	r3, [r4, #4]
   11cb0:	cmp	r3, #0
   11cb4:	beq	11ce4 <abort@plt+0xdd8>
   11cb8:	bl	10e4c <__errno_location@plt>
   11cbc:	ldr	r3, [r0]
   11cc0:	cmp	r3, #32
   11cc4:	bne	11ce4 <abort@plt+0xdd8>
   11cc8:	ldr	r3, [pc, #140]	; 11d5c <abort@plt+0xe50>
   11ccc:	ldr	r0, [r3]
   11cd0:	bl	14a84 <abort@plt+0x3b78>
   11cd4:	cmp	r0, #0
   11cd8:	bne	11d2c <abort@plt+0xe20>
   11cdc:	add	sp, sp, #8
   11ce0:	pop	{r4, r5, r6, pc}
   11ce4:	mov	r2, #5
   11ce8:	ldr	r1, [pc, #112]	; 11d60 <abort@plt+0xe54>
   11cec:	mov	r0, #0
   11cf0:	bl	10d2c <dcgettext@plt>
   11cf4:	ldr	r4, [r4]
   11cf8:	cmp	r4, #0
   11cfc:	mov	r5, r0
   11d00:	beq	11d38 <abort@plt+0xe2c>
   11d04:	bl	10e4c <__errno_location@plt>
   11d08:	ldr	r6, [r0]
   11d0c:	mov	r0, r4
   11d10:	bl	13af0 <abort@plt+0x2be4>
   11d14:	mov	r1, r6
   11d18:	str	r5, [sp]
   11d1c:	ldr	r2, [pc, #64]	; 11d64 <abort@plt+0xe58>
   11d20:	mov	r3, r0
   11d24:	mov	r0, #0
   11d28:	bl	10db0 <error@plt>
   11d2c:	ldr	r3, [pc, #52]	; 11d68 <abort@plt+0xe5c>
   11d30:	ldr	r0, [r3]
   11d34:	bl	10cf0 <_exit@plt>
   11d38:	bl	10e4c <__errno_location@plt>
   11d3c:	mov	r3, r5
   11d40:	ldr	r2, [pc, #36]	; 11d6c <abort@plt+0xe60>
   11d44:	ldr	r1, [r0]
   11d48:	mov	r0, r4
   11d4c:	bl	10db0 <error@plt>
   11d50:	b	11d2c <abort@plt+0xe20>
   11d54:	andeq	r7, r2, ip, ror #5
   11d58:	strdeq	r7, [r2], -r8
   11d5c:	andeq	r7, r2, r8, ror #5
   11d60:	ldrdeq	r5, [r1], -r8
   11d64:	andeq	r5, r1, r4, ror #21
   11d68:	strdeq	r7, [r2], -r0
   11d6c:	andeq	r5, r1, r8, ror #21
   11d70:	push	{r4, r5, lr}
   11d74:	sub	sp, sp, #12
   11d78:	mov	r5, r0
   11d7c:	bl	10e4c <__errno_location@plt>
   11d80:	mov	r2, #0
   11d84:	mov	r4, r0
   11d88:	ldr	r3, [r0]
   11d8c:	str	r2, [r4]
   11d90:	mov	r0, r5
   11d94:	str	r3, [sp]
   11d98:	str	r3, [sp, #4]
   11d9c:	bl	10ce4 <free@plt>
   11da0:	ldr	r3, [r4]
   11da4:	add	r2, sp, #8
   11da8:	cmp	r3, #0
   11dac:	moveq	r3, #4
   11db0:	movne	r3, #0
   11db4:	add	r3, r2, r3
   11db8:	ldr	r3, [r3, #-8]
   11dbc:	str	r3, [r4]
   11dc0:	add	sp, sp, #12
   11dc4:	pop	{r4, r5, pc}
   11dc8:	push	{r4, r5, r6, lr}
   11dcc:	subs	r4, r0, #0
   11dd0:	beq	11e44 <abort@plt+0xf38>
   11dd4:	mov	r1, #47	; 0x2f
   11dd8:	bl	10ec4 <strrchr@plt>
   11ddc:	subs	r5, r0, #0
   11de0:	beq	11e30 <abort@plt+0xf24>
   11de4:	add	r6, r5, #1
   11de8:	sub	r3, r6, r4
   11dec:	cmp	r3, #6
   11df0:	ble	11e30 <abort@plt+0xf24>
   11df4:	mov	r2, #7
   11df8:	ldr	r1, [pc, #96]	; 11e60 <abort@plt+0xf54>
   11dfc:	sub	r0, r5, #6
   11e00:	bl	10f00 <strncmp@plt>
   11e04:	cmp	r0, #0
   11e08:	bne	11e30 <abort@plt+0xf24>
   11e0c:	mov	r2, #3
   11e10:	ldr	r1, [pc, #76]	; 11e64 <abort@plt+0xf58>
   11e14:	mov	r0, r6
   11e18:	bl	10f00 <strncmp@plt>
   11e1c:	cmp	r0, #0
   11e20:	movne	r4, r6
   11e24:	ldreq	r3, [pc, #60]	; 11e68 <abort@plt+0xf5c>
   11e28:	addeq	r4, r5, #4
   11e2c:	streq	r4, [r3]
   11e30:	ldr	r2, [pc, #52]	; 11e6c <abort@plt+0xf60>
   11e34:	ldr	r3, [pc, #52]	; 11e70 <abort@plt+0xf64>
   11e38:	str	r4, [r2]
   11e3c:	str	r4, [r3]
   11e40:	pop	{r4, r5, r6, pc}
   11e44:	ldr	r3, [pc, #40]	; 11e74 <abort@plt+0xf68>
   11e48:	mov	r2, #55	; 0x37
   11e4c:	mov	r1, #1
   11e50:	ldr	r3, [r3]
   11e54:	ldr	r0, [pc, #28]	; 11e78 <abort@plt+0xf6c>
   11e58:	bl	10d68 <fwrite@plt>
   11e5c:	bl	10f0c <abort@plt>
   11e60:	andeq	r5, r1, r4, lsr #22
   11e64:	andeq	r5, r1, ip, lsr #22
   11e68:	ldrdeq	r7, [r2], -r8
   11e6c:	andeq	r7, r2, r0, lsl #6
   11e70:	ldrdeq	r7, [r2], -ip
   11e74:	andeq	r7, r2, r8, ror #5
   11e78:	andeq	r5, r1, ip, ror #21
   11e7c:	push	{r4, r5, r6, lr}
   11e80:	mov	r2, #48	; 0x30
   11e84:	mov	r4, r1
   11e88:	mov	r1, #0
   11e8c:	mov	r5, r0
   11e90:	bl	10e70 <memset@plt>
   11e94:	cmp	r4, #10
   11e98:	beq	11ea8 <abort@plt+0xf9c>
   11e9c:	str	r4, [r5]
   11ea0:	mov	r0, r5
   11ea4:	pop	{r4, r5, r6, pc}
   11ea8:	bl	10f0c <abort@plt>
   11eac:	push	{r4, r5, r6, lr}
   11eb0:	mov	r4, r0
   11eb4:	mov	r5, r1
   11eb8:	bl	14ca0 <abort@plt+0x3d94>
   11ebc:	ldrb	r3, [r0]
   11ec0:	bic	r3, r3, #32
   11ec4:	cmp	r3, #85	; 0x55
   11ec8:	bne	11f28 <abort@plt+0x101c>
   11ecc:	ldrb	r3, [r0, #1]
   11ed0:	bic	r3, r3, #32
   11ed4:	cmp	r3, #84	; 0x54
   11ed8:	bne	11f64 <abort@plt+0x1058>
   11edc:	ldrb	r3, [r0, #2]
   11ee0:	bic	r3, r3, #32
   11ee4:	cmp	r3, #70	; 0x46
   11ee8:	bne	11f64 <abort@plt+0x1058>
   11eec:	ldrb	r3, [r0, #3]
   11ef0:	cmp	r3, #45	; 0x2d
   11ef4:	bne	11f64 <abort@plt+0x1058>
   11ef8:	ldrb	r3, [r0, #4]
   11efc:	cmp	r3, #56	; 0x38
   11f00:	bne	11f64 <abort@plt+0x1058>
   11f04:	ldrb	r3, [r0, #5]
   11f08:	cmp	r3, #0
   11f0c:	bne	11f64 <abort@plt+0x1058>
   11f10:	ldrb	r2, [r4]
   11f14:	ldr	r3, [pc, #152]	; 11fb4 <abort@plt+0x10a8>
   11f18:	ldr	r0, [pc, #152]	; 11fb8 <abort@plt+0x10ac>
   11f1c:	cmp	r2, #96	; 0x60
   11f20:	movne	r0, r3
   11f24:	pop	{r4, r5, r6, pc}
   11f28:	cmp	r3, #71	; 0x47
   11f2c:	bne	11f64 <abort@plt+0x1058>
   11f30:	ldrb	r3, [r0, #1]
   11f34:	bic	r3, r3, #32
   11f38:	cmp	r3, #66	; 0x42
   11f3c:	bne	11f64 <abort@plt+0x1058>
   11f40:	ldrb	r3, [r0, #2]
   11f44:	cmp	r3, #49	; 0x31
   11f48:	bne	11f64 <abort@plt+0x1058>
   11f4c:	ldrb	r3, [r0, #3]
   11f50:	cmp	r3, #56	; 0x38
   11f54:	bne	11f64 <abort@plt+0x1058>
   11f58:	ldrb	r3, [r0, #4]
   11f5c:	cmp	r3, #48	; 0x30
   11f60:	beq	11f78 <abort@plt+0x106c>
   11f64:	ldr	r3, [pc, #80]	; 11fbc <abort@plt+0x10b0>
   11f68:	cmp	r5, #9
   11f6c:	ldr	r0, [pc, #76]	; 11fc0 <abort@plt+0x10b4>
   11f70:	movne	r0, r3
   11f74:	pop	{r4, r5, r6, pc}
   11f78:	ldrb	r3, [r0, #5]
   11f7c:	cmp	r3, #51	; 0x33
   11f80:	bne	11f64 <abort@plt+0x1058>
   11f84:	ldrb	r3, [r0, #6]
   11f88:	cmp	r3, #48	; 0x30
   11f8c:	bne	11f64 <abort@plt+0x1058>
   11f90:	ldrb	r3, [r0, #7]
   11f94:	cmp	r3, #0
   11f98:	bne	11f64 <abort@plt+0x1058>
   11f9c:	ldrb	r2, [r4]
   11fa0:	ldr	r3, [pc, #28]	; 11fc4 <abort@plt+0x10b8>
   11fa4:	ldr	r0, [pc, #28]	; 11fc8 <abort@plt+0x10bc>
   11fa8:	cmp	r2, #96	; 0x60
   11fac:	movne	r0, r3
   11fb0:	pop	{r4, r5, r6, pc}
   11fb4:	andeq	r5, r1, r8, lsl #23
   11fb8:	andeq	r5, r1, r4, lsl #23
   11fbc:	muleq	r1, r8, fp
   11fc0:	muleq	r1, r4, fp
   11fc4:	muleq	r1, r0, fp
   11fc8:	andeq	r5, r1, ip, lsl #23
   11fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fd0:	sub	sp, sp, #116	; 0x74
   11fd4:	mov	sl, r0
   11fd8:	str	r3, [sp, #24]
   11fdc:	mov	r3, #1
   11fe0:	mov	r8, r1
   11fe4:	str	r2, [sp, #56]	; 0x38
   11fe8:	str	r3, [sp, #36]	; 0x24
   11fec:	bl	10d80 <__ctype_get_mb_cur_max@plt>
   11ff0:	ldr	r3, [sp, #156]	; 0x9c
   11ff4:	mov	fp, r8
   11ff8:	mov	r2, #0
   11ffc:	lsr	r3, r3, #1
   12000:	and	r3, r3, #1
   12004:	str	r2, [sp, #68]	; 0x44
   12008:	str	r3, [sp, #28]
   1200c:	str	r2, [sp, #40]	; 0x28
   12010:	str	r2, [sp, #44]	; 0x2c
   12014:	str	r2, [sp, #52]	; 0x34
   12018:	str	r2, [sp, #64]	; 0x40
   1201c:	str	r2, [sp, #72]	; 0x48
   12020:	str	sl, [sp, #32]
   12024:	str	r0, [sp, #76]	; 0x4c
   12028:	ldr	r3, [sp, #152]	; 0x98
   1202c:	cmp	r3, #10
   12030:	ldrls	pc, [pc, r3, lsl #2]
   12034:	b	131f4 <abort@plt+0x22e8>
   12038:	andeq	r2, r1, r4, rrx
   1203c:	andeq	r2, r1, ip, asr #6
   12040:	andeq	r2, r1, r0, ror r3
   12044:	muleq	r1, r4, r3
   12048:	andeq	r2, r1, r0, asr #9
   1204c:	muleq	r1, r4, r4
   12050:	andeq	r2, r1, ip, ror #8
   12054:	andeq	r2, r1, r8, lsr #7
   12058:	andeq	r2, r1, r0, asr #7
   1205c:	andeq	r2, r1, r0, asr #7
   12060:	andeq	r2, r1, r0, asr #7
   12064:	mov	r3, #0
   12068:	mov	r7, r3
   1206c:	str	r3, [sp, #28]
   12070:	ldr	r3, [sp, #44]	; 0x2c
   12074:	mov	sl, #0
   12078:	eor	r3, r3, #1
   1207c:	str	r3, [sp, #60]	; 0x3c
   12080:	ldr	r3, [sp, #24]
   12084:	cmn	r3, #1
   12088:	beq	125ec <abort@plt+0x16e0>
   1208c:	ldr	r3, [sp, #24]
   12090:	subs	r5, r3, sl
   12094:	movne	r5, #1
   12098:	cmp	r5, #0
   1209c:	beq	12604 <abort@plt+0x16f8>
   120a0:	ldr	r3, [sp, #152]	; 0x98
   120a4:	ldr	r8, [sp, #44]	; 0x2c
   120a8:	cmp	r3, #2
   120ac:	moveq	r8, #0
   120b0:	andne	r8, r8, #1
   120b4:	ldr	r3, [sp, #52]	; 0x34
   120b8:	adds	r9, r3, #0
   120bc:	movne	r9, #1
   120c0:	ands	r6, r9, r8
   120c4:	beq	12a6c <abort@plt+0x1b60>
   120c8:	ldr	r2, [sp, #52]	; 0x34
   120cc:	ldr	r1, [sp, #24]
   120d0:	cmp	r2, #1
   120d4:	mov	r3, r2
   120d8:	movls	r3, #0
   120dc:	movhi	r3, #1
   120e0:	cmn	r1, #1
   120e4:	movne	r3, #0
   120e8:	cmp	r3, #0
   120ec:	add	r4, sl, r2
   120f0:	beq	12100 <abort@plt+0x11f4>
   120f4:	ldr	r0, [sp, #56]	; 0x38
   120f8:	bl	10e28 <strlen@plt>
   120fc:	str	r0, [sp, #24]
   12100:	ldr	r3, [sp, #24]
   12104:	cmp	r3, r4
   12108:	ldr	r3, [sp, #56]	; 0x38
   1210c:	add	r3, r3, sl
   12110:	str	r3, [sp, #48]	; 0x30
   12114:	bcc	12a78 <abort@plt+0x1b6c>
   12118:	mov	r0, r3
   1211c:	ldr	r2, [sp, #52]	; 0x34
   12120:	ldr	r1, [sp, #64]	; 0x40
   12124:	bl	10d14 <memcmp@plt>
   12128:	cmp	r0, #0
   1212c:	bne	12a78 <abort@plt+0x1b6c>
   12130:	ldr	r3, [sp, #28]
   12134:	cmp	r3, #0
   12138:	bne	132f4 <abort@plt+0x23e8>
   1213c:	ldr	r3, [sp, #48]	; 0x30
   12140:	ldrb	r4, [r3]
   12144:	cmp	r4, #126	; 0x7e
   12148:	ldrls	pc, [pc, r4, lsl #2]
   1214c:	b	12a0c <abort@plt+0x1b00>
   12150:	andeq	r2, r1, r0, lsr r8
   12154:	andeq	r2, r1, ip, lsl #20
   12158:	andeq	r2, r1, ip, lsl #20
   1215c:	andeq	r2, r1, ip, lsl #20
   12160:	andeq	r2, r1, ip, lsl #20
   12164:	andeq	r2, r1, ip, lsl #20
   12168:	andeq	r2, r1, ip, lsl #20
   1216c:	andeq	r2, r1, r4, lsl r8
   12170:	strdeq	r2, [r1], -r8
   12174:	strdeq	r2, [r1], -r4
   12178:	andeq	r2, r1, r8, asr r7
   1217c:	andeq	r2, r1, ip, lsr r7
   12180:	ldrdeq	r2, [r1], -r0
   12184:	andeq	r2, r1, ip, lsr #19
   12188:	andeq	r2, r1, ip, lsl #20
   1218c:	andeq	r2, r1, ip, lsl #20
   12190:	andeq	r2, r1, ip, lsl #20
   12194:	andeq	r2, r1, ip, lsl #20
   12198:	andeq	r2, r1, ip, lsl #20
   1219c:	andeq	r2, r1, ip, lsl #20
   121a0:	andeq	r2, r1, ip, lsl #20
   121a4:	andeq	r2, r1, ip, lsl #20
   121a8:	andeq	r2, r1, ip, lsl #20
   121ac:	andeq	r2, r1, ip, lsl #20
   121b0:	andeq	r2, r1, ip, lsl #20
   121b4:	andeq	r2, r1, ip, lsl #20
   121b8:	andeq	r2, r1, ip, lsl #20
   121bc:	andeq	r2, r1, ip, lsl #20
   121c0:	andeq	r2, r1, ip, lsl #20
   121c4:	andeq	r2, r1, ip, lsl #20
   121c8:	andeq	r2, r1, ip, lsl #20
   121cc:	andeq	r2, r1, ip, lsl #20
   121d0:	andeq	r2, r1, ip, ror #19
   121d4:	andeq	r2, r1, r0, lsr #18
   121d8:	andeq	r2, r1, r0, lsr #18
   121dc:	andeq	r2, r1, r0, lsr r5
   121e0:	andeq	r2, r1, r0, lsr #18
   121e4:			; <UNDEFINED> instruction: 0x000129b8
   121e8:	andeq	r2, r1, r0, lsr #18
   121ec:	andeq	r2, r1, ip, lsl #19
   121f0:	andeq	r2, r1, r0, lsr #18
   121f4:	andeq	r2, r1, r0, lsr #18
   121f8:	andeq	r2, r1, r0, lsr #18
   121fc:			; <UNDEFINED> instruction: 0x000129b8
   12200:			; <UNDEFINED> instruction: 0x000129b8
   12204:			; <UNDEFINED> instruction: 0x000129b8
   12208:			; <UNDEFINED> instruction: 0x000129b8
   1220c:			; <UNDEFINED> instruction: 0x000129b8
   12210:			; <UNDEFINED> instruction: 0x000129b8
   12214:			; <UNDEFINED> instruction: 0x000129b8
   12218:			; <UNDEFINED> instruction: 0x000129b8
   1221c:			; <UNDEFINED> instruction: 0x000129b8
   12220:			; <UNDEFINED> instruction: 0x000129b8
   12224:			; <UNDEFINED> instruction: 0x000129b8
   12228:			; <UNDEFINED> instruction: 0x000129b8
   1222c:			; <UNDEFINED> instruction: 0x000129b8
   12230:			; <UNDEFINED> instruction: 0x000129b8
   12234:			; <UNDEFINED> instruction: 0x000129b8
   12238:			; <UNDEFINED> instruction: 0x000129b8
   1223c:	andeq	r2, r1, r0, lsr #18
   12240:	andeq	r2, r1, r0, lsr #18
   12244:	andeq	r2, r1, r0, lsr #18
   12248:	andeq	r2, r1, r0, lsr #18
   1224c:	andeq	r2, r1, ip, asr r9
   12250:	andeq	r2, r1, ip, lsl #20
   12254:			; <UNDEFINED> instruction: 0x000129b8
   12258:			; <UNDEFINED> instruction: 0x000129b8
   1225c:			; <UNDEFINED> instruction: 0x000129b8
   12260:			; <UNDEFINED> instruction: 0x000129b8
   12264:			; <UNDEFINED> instruction: 0x000129b8
   12268:			; <UNDEFINED> instruction: 0x000129b8
   1226c:			; <UNDEFINED> instruction: 0x000129b8
   12270:			; <UNDEFINED> instruction: 0x000129b8
   12274:			; <UNDEFINED> instruction: 0x000129b8
   12278:			; <UNDEFINED> instruction: 0x000129b8
   1227c:			; <UNDEFINED> instruction: 0x000129b8
   12280:			; <UNDEFINED> instruction: 0x000129b8
   12284:			; <UNDEFINED> instruction: 0x000129b8
   12288:			; <UNDEFINED> instruction: 0x000129b8
   1228c:			; <UNDEFINED> instruction: 0x000129b8
   12290:			; <UNDEFINED> instruction: 0x000129b8
   12294:			; <UNDEFINED> instruction: 0x000129b8
   12298:			; <UNDEFINED> instruction: 0x000129b8
   1229c:			; <UNDEFINED> instruction: 0x000129b8
   122a0:			; <UNDEFINED> instruction: 0x000129b8
   122a4:			; <UNDEFINED> instruction: 0x000129b8
   122a8:			; <UNDEFINED> instruction: 0x000129b8
   122ac:			; <UNDEFINED> instruction: 0x000129b8
   122b0:			; <UNDEFINED> instruction: 0x000129b8
   122b4:			; <UNDEFINED> instruction: 0x000129b8
   122b8:			; <UNDEFINED> instruction: 0x000129b8
   122bc:	andeq	r2, r1, r0, lsr #18
   122c0:	andeq	r2, r1, ip, ror r6
   122c4:			; <UNDEFINED> instruction: 0x000129b8
   122c8:	andeq	r2, r1, r0, lsr #18
   122cc:			; <UNDEFINED> instruction: 0x000129b8
   122d0:	andeq	r2, r1, r0, lsr #18
   122d4:			; <UNDEFINED> instruction: 0x000129b8
   122d8:			; <UNDEFINED> instruction: 0x000129b8
   122dc:			; <UNDEFINED> instruction: 0x000129b8
   122e0:			; <UNDEFINED> instruction: 0x000129b8
   122e4:			; <UNDEFINED> instruction: 0x000129b8
   122e8:			; <UNDEFINED> instruction: 0x000129b8
   122ec:			; <UNDEFINED> instruction: 0x000129b8
   122f0:			; <UNDEFINED> instruction: 0x000129b8
   122f4:			; <UNDEFINED> instruction: 0x000129b8
   122f8:			; <UNDEFINED> instruction: 0x000129b8
   122fc:			; <UNDEFINED> instruction: 0x000129b8
   12300:			; <UNDEFINED> instruction: 0x000129b8
   12304:			; <UNDEFINED> instruction: 0x000129b8
   12308:			; <UNDEFINED> instruction: 0x000129b8
   1230c:			; <UNDEFINED> instruction: 0x000129b8
   12310:			; <UNDEFINED> instruction: 0x000129b8
   12314:			; <UNDEFINED> instruction: 0x000129b8
   12318:			; <UNDEFINED> instruction: 0x000129b8
   1231c:			; <UNDEFINED> instruction: 0x000129b8
   12320:			; <UNDEFINED> instruction: 0x000129b8
   12324:			; <UNDEFINED> instruction: 0x000129b8
   12328:			; <UNDEFINED> instruction: 0x000129b8
   1232c:			; <UNDEFINED> instruction: 0x000129b8
   12330:			; <UNDEFINED> instruction: 0x000129b8
   12334:			; <UNDEFINED> instruction: 0x000129b8
   12338:			; <UNDEFINED> instruction: 0x000129b8
   1233c:	andeq	r2, r1, r0, lsl r5
   12340:	andeq	r2, r1, r0, lsr #18
   12344:	andeq	r2, r1, r0, lsl r5
   12348:	andeq	r2, r1, r0, lsr r5
   1234c:	mov	r3, #1
   12350:	str	r3, [sp, #28]
   12354:	str	r3, [sp, #52]	; 0x34
   12358:	ldr	r3, [pc, #4000]	; 13300 <abort@plt+0x23f4>
   1235c:	mov	r7, #0
   12360:	str	r3, [sp, #64]	; 0x40
   12364:	mov	r3, #2
   12368:	str	r3, [sp, #152]	; 0x98
   1236c:	b	12070 <abort@plt+0x1164>
   12370:	ldr	r3, [sp, #28]
   12374:	cmp	r3, #0
   12378:	beq	124d4 <abort@plt+0x15c8>
   1237c:	mov	r3, #1
   12380:	str	r3, [sp, #52]	; 0x34
   12384:	ldr	r3, [pc, #3956]	; 13300 <abort@plt+0x23f4>
   12388:	mov	r7, #0
   1238c:	str	r3, [sp, #64]	; 0x40
   12390:	b	12070 <abort@plt+0x1164>
   12394:	mov	r3, #1
   12398:	str	r3, [sp, #44]	; 0x2c
   1239c:	str	r3, [sp, #52]	; 0x34
   123a0:	str	r3, [sp, #28]
   123a4:	b	12358 <abort@plt+0x144c>
   123a8:	mov	r3, #0
   123ac:	str	r3, [sp, #28]
   123b0:	mov	r3, #1
   123b4:	str	r3, [sp, #44]	; 0x2c
   123b8:	mov	r7, #0
   123bc:	b	12070 <abort@plt+0x1164>
   123c0:	ldr	r3, [sp, #152]	; 0x98
   123c4:	cmp	r3, #10
   123c8:	beq	1240c <abort@plt+0x1500>
   123cc:	mov	r2, #5
   123d0:	ldr	r1, [pc, #3884]	; 13304 <abort@plt+0x23f8>
   123d4:	mov	r0, #0
   123d8:	bl	10d2c <dcgettext@plt>
   123dc:	ldr	r2, [pc, #3872]	; 13304 <abort@plt+0x23f8>
   123e0:	cmp	r0, r2
   123e4:	str	r0, [sp, #164]	; 0xa4
   123e8:	beq	133f0 <abort@plt+0x24e4>
   123ec:	mov	r2, #5
   123f0:	ldr	r1, [pc, #3848]	; 13300 <abort@plt+0x23f4>
   123f4:	mov	r0, #0
   123f8:	bl	10d2c <dcgettext@plt>
   123fc:	ldr	r2, [pc, #3836]	; 13300 <abort@plt+0x23f4>
   12400:	cmp	r0, r2
   12404:	str	r0, [sp, #168]	; 0xa8
   12408:	beq	133e0 <abort@plt+0x24d4>
   1240c:	ldr	r7, [sp, #28]
   12410:	cmp	r7, #0
   12414:	movne	r7, #0
   12418:	bne	1244c <abort@plt+0x1540>
   1241c:	ldr	r3, [sp, #164]	; 0xa4
   12420:	ldrb	r3, [r3]
   12424:	cmp	r3, #0
   12428:	beq	13400 <abort@plt+0x24f4>
   1242c:	ldr	r2, [sp, #164]	; 0xa4
   12430:	ldr	r1, [sp, #32]
   12434:	cmp	fp, r7
   12438:	strbhi	r3, [r1, r7]
   1243c:	ldrb	r3, [r2, #1]!
   12440:	add	r7, r7, #1
   12444:	cmp	r3, #0
   12448:	bne	12434 <abort@plt+0x1528>
   1244c:	ldr	r0, [sp, #168]	; 0xa8
   12450:	bl	10e28 <strlen@plt>
   12454:	ldr	r3, [sp, #168]	; 0xa8
   12458:	str	r3, [sp, #64]	; 0x40
   1245c:	mov	r3, #1
   12460:	str	r3, [sp, #44]	; 0x2c
   12464:	str	r0, [sp, #52]	; 0x34
   12468:	b	12070 <abort@plt+0x1164>
   1246c:	mov	r3, #1
   12470:	str	r3, [sp, #44]	; 0x2c
   12474:	str	r3, [sp, #52]	; 0x34
   12478:	str	r3, [sp, #28]
   1247c:	ldr	r3, [pc, #3716]	; 13308 <abort@plt+0x23fc>
   12480:	mov	r7, #0
   12484:	str	r3, [sp, #64]	; 0x40
   12488:	mov	r3, #5
   1248c:	str	r3, [sp, #152]	; 0x98
   12490:	b	12070 <abort@plt+0x1164>
   12494:	ldr	r3, [sp, #28]
   12498:	cmp	r3, #0
   1249c:	beq	1319c <abort@plt+0x2290>
   124a0:	ldr	r3, [sp, #28]
   124a4:	mov	r7, #0
   124a8:	str	r3, [sp, #44]	; 0x2c
   124ac:	mov	r3, #1
   124b0:	str	r3, [sp, #52]	; 0x34
   124b4:	ldr	r3, [pc, #3660]	; 13308 <abort@plt+0x23fc>
   124b8:	str	r3, [sp, #64]	; 0x40
   124bc:	b	12070 <abort@plt+0x1164>
   124c0:	ldr	r3, [sp, #28]
   124c4:	cmp	r3, #0
   124c8:	mov	r3, #1
   124cc:	streq	r3, [sp, #44]	; 0x2c
   124d0:	bne	12354 <abort@plt+0x1448>
   124d4:	cmp	fp, #0
   124d8:	beq	131cc <abort@plt+0x22c0>
   124dc:	ldr	r3, [sp, #32]
   124e0:	mov	r2, #39	; 0x27
   124e4:	mov	r7, #1
   124e8:	strb	r2, [r3]
   124ec:	mov	r3, #0
   124f0:	str	r3, [sp, #28]
   124f4:	mov	r3, #1
   124f8:	str	r3, [sp, #52]	; 0x34
   124fc:	ldr	r3, [pc, #3580]	; 13300 <abort@plt+0x23f4>
   12500:	str	r3, [sp, #64]	; 0x40
   12504:	mov	r3, #2
   12508:	str	r3, [sp, #152]	; 0x98
   1250c:	b	12070 <abort@plt+0x1164>
   12510:	ldr	r3, [sp, #24]
   12514:	cmn	r3, #1
   12518:	beq	13130 <abort@plt+0x2224>
   1251c:	ldr	r3, [sp, #24]
   12520:	subs	r3, r3, #1
   12524:	movne	r3, #1
   12528:	cmp	r3, #0
   1252c:	bne	12538 <abort@plt+0x162c>
   12530:	cmp	sl, #0
   12534:	beq	12924 <abort@plt+0x1a18>
   12538:	ldr	r3, [sp, #152]	; 0x98
   1253c:	mov	r5, #0
   12540:	sub	r2, r3, #2
   12544:	mov	r8, r5
   12548:	clz	r2, r2
   1254c:	lsr	r2, r2, #5
   12550:	ldr	r3, [sp, #60]	; 0x3c
   12554:	ldr	r1, [sp, #28]
   12558:	orr	r3, r2, r3
   1255c:	eor	r3, r3, #1
   12560:	orr	r3, r1, r3
   12564:	tst	r3, #255	; 0xff
   12568:	bne	12c94 <abort@plt+0x1d88>
   1256c:	cmp	r6, #0
   12570:	bne	126c0 <abort@plt+0x17b4>
   12574:	ldr	r3, [sp, #40]	; 0x28
   12578:	eor	r8, r8, #1
   1257c:	and	r8, r8, r3
   12580:	add	sl, sl, #1
   12584:	uxtb	r6, r8
   12588:	cmp	r6, #0
   1258c:	beq	125c0 <abort@plt+0x16b4>
   12590:	cmp	fp, r7
   12594:	movhi	r2, #39	; 0x27
   12598:	ldrhi	r3, [sp, #32]
   1259c:	strbhi	r2, [r3, r7]
   125a0:	add	r3, r7, #1
   125a4:	cmp	fp, r3
   125a8:	movhi	r1, #39	; 0x27
   125ac:	ldrhi	r2, [sp, #32]
   125b0:	add	r7, r7, #2
   125b4:	strbhi	r1, [r2, r3]
   125b8:	mov	r3, #0
   125bc:	str	r3, [sp, #40]	; 0x28
   125c0:	cmp	r7, fp
   125c4:	ldrcc	r3, [sp, #32]
   125c8:	strbcc	r4, [r3, r7]
   125cc:	ldr	r3, [sp, #36]	; 0x24
   125d0:	cmp	r5, #0
   125d4:	moveq	r3, #0
   125d8:	str	r3, [sp, #36]	; 0x24
   125dc:	ldr	r3, [sp, #24]
   125e0:	add	r7, r7, #1
   125e4:	cmn	r3, #1
   125e8:	bne	1208c <abort@plt+0x1180>
   125ec:	ldr	r3, [sp, #56]	; 0x38
   125f0:	ldrb	r5, [r3, sl]
   125f4:	adds	r5, r5, #0
   125f8:	movne	r5, #1
   125fc:	cmp	r5, #0
   12600:	bne	120a0 <abort@plt+0x1194>
   12604:	ldr	r3, [sp, #152]	; 0x98
   12608:	ldr	r1, [sp, #28]
   1260c:	sub	r3, r3, #2
   12610:	clz	r3, r3
   12614:	lsr	r3, r3, #5
   12618:	and	r9, r1, r3
   1261c:	cmp	r7, #0
   12620:	movne	r2, #0
   12624:	andeq	r2, r9, #1
   12628:	cmp	r2, #0
   1262c:	bne	13008 <abort@plt+0x20fc>
   12630:	eor	r2, r1, #1
   12634:	ands	r3, r3, r2
   12638:	beq	134c4 <abort@plt+0x25b8>
   1263c:	ldr	r2, [sp, #68]	; 0x44
   12640:	cmp	r2, #0
   12644:	beq	134b0 <abort@plt+0x25a4>
   12648:	ldr	r3, [sp, #36]	; 0x24
   1264c:	cmp	r3, #0
   12650:	bne	13468 <abort@plt+0x255c>
   12654:	ldr	r2, [sp, #72]	; 0x48
   12658:	clz	r3, fp
   1265c:	cmp	r2, #0
   12660:	lsr	r3, r3, #5
   12664:	moveq	r3, #0
   12668:	cmp	r3, #0
   1266c:	beq	13408 <abort@plt+0x24fc>
   12670:	str	r3, [sp, #68]	; 0x44
   12674:	ldr	fp, [sp, #72]	; 0x48
   12678:	b	12028 <abort@plt+0x111c>
   1267c:	ldr	r3, [sp, #152]	; 0x98
   12680:	cmp	r3, #2
   12684:	beq	12cd8 <abort@plt+0x1dcc>
   12688:	ldr	r3, [sp, #44]	; 0x2c
   1268c:	ldr	r2, [sp, #28]
   12690:	and	r2, r3, r2
   12694:	ands	r2, r9, r2
   12698:	bne	12ce4 <abort@plt+0x1dd8>
   1269c:	mov	r4, #92	; 0x5c
   126a0:	mov	r3, r4
   126a4:	ldr	r1, [sp, #44]	; 0x2c
   126a8:	cmp	r1, #0
   126ac:	moveq	r5, #0
   126b0:	moveq	r8, r1
   126b4:	beq	12550 <abort@plt+0x1644>
   126b8:	mov	r4, r3
   126bc:	mov	r5, #0
   126c0:	ldr	r3, [sp, #28]
   126c4:	cmp	r3, #0
   126c8:	bne	12ccc <abort@plt+0x1dc0>
   126cc:	ldr	r3, [sp, #40]	; 0x28
   126d0:	eor	r9, r3, #1
   126d4:	and	r9, r9, r2
   126d8:	ands	r9, r9, #255	; 0xff
   126dc:	beq	12720 <abort@plt+0x1814>
   126e0:	cmp	fp, r7
   126e4:	movhi	r2, #39	; 0x27
   126e8:	ldrhi	r3, [sp, #32]
   126ec:	str	r9, [sp, #40]	; 0x28
   126f0:	strbhi	r2, [r3, r7]
   126f4:	add	r3, r7, #1
   126f8:	cmp	fp, r3
   126fc:	movhi	r1, #36	; 0x24
   12700:	ldrhi	r2, [sp, #32]
   12704:	strbhi	r1, [r2, r3]
   12708:	add	r3, r7, #2
   1270c:	cmp	fp, r3
   12710:	add	r7, r7, #3
   12714:	ldrhi	r2, [sp, #32]
   12718:	movhi	r1, #39	; 0x27
   1271c:	strbhi	r1, [r2, r3]
   12720:	cmp	fp, r7
   12724:	movhi	r2, #92	; 0x5c
   12728:	ldrhi	r3, [sp, #32]
   1272c:	add	sl, sl, #1
   12730:	strbhi	r2, [r3, r7]
   12734:	add	r7, r7, #1
   12738:	b	125c0 <abort@plt+0x16b4>
   1273c:	ldr	r3, [sp, #152]	; 0x98
   12740:	mov	r4, #11
   12744:	sub	r2, r3, #2
   12748:	mov	r3, #118	; 0x76
   1274c:	clz	r2, r2
   12750:	lsr	r2, r2, #5
   12754:	b	126a4 <abort@plt+0x1798>
   12758:	mov	r4, #10
   1275c:	mov	r3, #110	; 0x6e
   12760:	ldr	r2, [sp, #152]	; 0x98
   12764:	ldr	r1, [sp, #28]
   12768:	sub	r2, r2, #2
   1276c:	clz	r2, r2
   12770:	lsr	r2, r2, #5
   12774:	ands	r1, r1, r2
   12778:	beq	126a4 <abort@plt+0x1798>
   1277c:	ldr	sl, [sp, #32]
   12780:	mov	r8, fp
   12784:	mov	r2, r1
   12788:	mov	r3, #2
   1278c:	str	r3, [sp, #152]	; 0x98
   12790:	ldr	r9, [sp, #44]	; 0x2c
   12794:	ldr	r3, [sp, #152]	; 0x98
   12798:	and	r9, r9, r2
   1279c:	tst	r9, #255	; 0xff
   127a0:	movne	r3, #4
   127a4:	str	r3, [sp, #152]	; 0x98
   127a8:	ldr	r3, [sp, #156]	; 0x9c
   127ac:	mov	ip, #0
   127b0:	bic	r3, r3, #2
   127b4:	str	r3, [sp, #4]
   127b8:	ldr	r3, [sp, #168]	; 0xa8
   127bc:	ldr	r2, [sp, #56]	; 0x38
   127c0:	str	r3, [sp, #16]
   127c4:	ldr	r3, [sp, #164]	; 0xa4
   127c8:	mov	r1, r8
   127cc:	str	r3, [sp, #12]
   127d0:	ldr	r3, [sp, #152]	; 0x98
   127d4:	mov	r0, sl
   127d8:	str	r3, [sp]
   127dc:	str	ip, [sp, #8]
   127e0:	ldr	r3, [sp, #24]
   127e4:	bl	11fcc <abort@plt+0x10c0>
   127e8:	mov	fp, r0
   127ec:	mov	r0, fp
   127f0:	add	sp, sp, #116	; 0x74
   127f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127f8:	ldr	r3, [sp, #152]	; 0x98
   127fc:	mov	r4, #8
   12800:	sub	r2, r3, #2
   12804:	mov	r3, #98	; 0x62
   12808:	clz	r2, r2
   1280c:	lsr	r2, r2, #5
   12810:	b	126a4 <abort@plt+0x1798>
   12814:	ldr	r3, [sp, #152]	; 0x98
   12818:	mov	r4, #7
   1281c:	sub	r2, r3, #2
   12820:	mov	r3, #97	; 0x61
   12824:	clz	r2, r2
   12828:	lsr	r2, r2, #5
   1282c:	b	126a4 <abort@plt+0x1798>
   12830:	ldr	r3, [sp, #44]	; 0x2c
   12834:	cmp	r3, #0
   12838:	beq	1301c <abort@plt+0x2110>
   1283c:	ldr	r3, [sp, #28]
   12840:	cmp	r3, #0
   12844:	bne	132f4 <abort@plt+0x23e8>
   12848:	ldr	r3, [sp, #152]	; 0x98
   1284c:	sub	r2, r3, #2
   12850:	ldr	r3, [sp, #40]	; 0x28
   12854:	clz	r2, r2
   12858:	eor	r3, r3, #1
   1285c:	lsr	r2, r2, #5
   12860:	ands	r3, r2, r3
   12864:	moveq	r1, r7
   12868:	beq	128ac <abort@plt+0x19a0>
   1286c:	cmp	fp, r7
   12870:	movhi	r0, #39	; 0x27
   12874:	ldrhi	r1, [sp, #32]
   12878:	str	r3, [sp, #40]	; 0x28
   1287c:	strbhi	r0, [r1, r7]
   12880:	add	r1, r7, #1
   12884:	cmp	fp, r1
   12888:	movhi	ip, #36	; 0x24
   1288c:	ldrhi	r0, [sp, #32]
   12890:	strbhi	ip, [r0, r1]
   12894:	add	r1, r7, #2
   12898:	cmp	fp, r1
   1289c:	movhi	ip, #39	; 0x27
   128a0:	ldrhi	r0, [sp, #32]
   128a4:	strbhi	ip, [r0, r1]
   128a8:	add	r1, r7, #3
   128ac:	cmp	fp, r1
   128b0:	movhi	r0, #92	; 0x5c
   128b4:	ldrhi	r3, [sp, #32]
   128b8:	add	r7, r1, #1
   128bc:	strbhi	r0, [r3, r1]
   128c0:	cmp	r8, #0
   128c4:	beq	13208 <abort@plt+0x22fc>
   128c8:	ldr	r0, [sp, #24]
   128cc:	add	r3, sl, #1
   128d0:	cmp	r3, r0
   128d4:	bcs	13144 <abort@plt+0x2238>
   128d8:	ldr	r0, [sp, #56]	; 0x38
   128dc:	ldrb	r3, [r0, r3]
   128e0:	sub	r3, r3, #48	; 0x30
   128e4:	cmp	r3, #9
   128e8:	bhi	13144 <abort@plt+0x2238>
   128ec:	cmp	fp, r7
   128f0:	movhi	r3, #48	; 0x30
   128f4:	ldrhi	r0, [sp, #32]
   128f8:	ldr	r5, [sp, #28]
   128fc:	mov	r4, #48	; 0x30
   12900:	strbhi	r3, [r0, r7]
   12904:	add	r3, r1, #2
   12908:	cmp	fp, r3
   1290c:	movhi	r0, #48	; 0x30
   12910:	ldrhi	ip, [sp, #32]
   12914:	add	r7, r1, #3
   12918:	strbhi	r0, [ip, r3]
   1291c:	b	12550 <abort@plt+0x1644>
   12920:	mov	r5, #0
   12924:	ldr	r3, [sp, #152]	; 0x98
   12928:	sub	r2, r3, #2
   1292c:	ldr	r3, [sp, #28]
   12930:	clz	r2, r2
   12934:	lsr	r2, r2, #5
   12938:	ands	r8, r3, r2
   1293c:	beq	12550 <abort@plt+0x1644>
   12940:	mov	r3, r8
   12944:	mov	r2, r3
   12948:	mov	r3, #2
   1294c:	ldr	sl, [sp, #32]
   12950:	mov	r8, fp
   12954:	str	r3, [sp, #152]	; 0x98
   12958:	b	12790 <abort@plt+0x1884>
   1295c:	ldr	r3, [sp, #152]	; 0x98
   12960:	cmp	r3, #2
   12964:	beq	13088 <abort@plt+0x217c>
   12968:	cmp	r3, #5
   1296c:	beq	13048 <abort@plt+0x213c>
   12970:	mov	r5, #0
   12974:	sub	r2, r3, #2
   12978:	mov	r8, r5
   1297c:	clz	r2, r2
   12980:	mov	r4, #63	; 0x3f
   12984:	lsr	r2, r2, #5
   12988:	b	12550 <abort@plt+0x1644>
   1298c:	ldr	r3, [sp, #152]	; 0x98
   12990:	cmp	r3, #2
   12994:	beq	130a8 <abort@plt+0x219c>
   12998:	mov	r2, #0
   1299c:	str	r5, [sp, #68]	; 0x44
   129a0:	mov	r8, r2
   129a4:	mov	r4, #39	; 0x27
   129a8:	b	12550 <abort@plt+0x1644>
   129ac:	mov	r4, #13
   129b0:	mov	r3, #114	; 0x72
   129b4:	b	12760 <abort@plt+0x1854>
   129b8:	ldr	r3, [sp, #152]	; 0x98
   129bc:	mov	r8, #0
   129c0:	sub	r2, r3, #2
   129c4:	clz	r2, r2
   129c8:	lsr	r2, r2, #5
   129cc:	b	12550 <abort@plt+0x1644>
   129d0:	ldr	r3, [sp, #152]	; 0x98
   129d4:	mov	r4, #12
   129d8:	sub	r2, r3, #2
   129dc:	mov	r3, #102	; 0x66
   129e0:	clz	r2, r2
   129e4:	lsr	r2, r2, #5
   129e8:	b	126a4 <abort@plt+0x1798>
   129ec:	mov	r5, r6
   129f0:	b	12924 <abort@plt+0x1a18>
   129f4:	ldr	r3, [sp, #152]	; 0x98
   129f8:	sub	r2, r3, #2
   129fc:	mov	r3, #116	; 0x74
   12a00:	clz	r2, r2
   12a04:	lsr	r2, r2, #5
   12a08:	b	126a4 <abort@plt+0x1798>
   12a0c:	ldr	r8, [sp, #76]	; 0x4c
   12a10:	cmp	r8, #1
   12a14:	bne	12ec4 <abort@plt+0x1fb8>
   12a18:	bl	10e10 <__ctype_b_loc@plt>
   12a1c:	sxth	r3, r4
   12a20:	mov	ip, r8
   12a24:	lsl	r3, r3, #1
   12a28:	ldr	r2, [r0]
   12a2c:	ldrh	r3, [r2, r3]
   12a30:	and	r3, r3, #16384	; 0x4000
   12a34:	cmp	r3, #0
   12a38:	movne	r5, #1
   12a3c:	moveq	r5, #0
   12a40:	moveq	r3, #1
   12a44:	movne	r3, #0
   12a48:	ldr	r2, [sp, #44]	; 0x2c
   12a4c:	and	r3, r3, r2
   12a50:	ands	r8, r3, #255	; 0xff
   12a54:	bne	12d58 <abort@plt+0x1e4c>
   12a58:	ldr	r3, [sp, #152]	; 0x98
   12a5c:	sub	r2, r3, #2
   12a60:	clz	r2, r2
   12a64:	lsr	r2, r2, #5
   12a68:	b	12550 <abort@plt+0x1644>
   12a6c:	ldr	r3, [sp, #56]	; 0x38
   12a70:	add	r3, r3, sl
   12a74:	str	r3, [sp, #48]	; 0x30
   12a78:	ldr	r3, [sp, #48]	; 0x30
   12a7c:	mov	r6, #0
   12a80:	ldrb	r4, [r3]
   12a84:	cmp	r4, #126	; 0x7e
   12a88:	ldrls	pc, [pc, r4, lsl #2]
   12a8c:	b	12a0c <abort@plt+0x1b00>
   12a90:	andeq	r2, r1, r0, lsr r8
   12a94:	andeq	r2, r1, ip, lsl #20
   12a98:	andeq	r2, r1, ip, lsl #20
   12a9c:	andeq	r2, r1, ip, lsl #20
   12aa0:	andeq	r2, r1, ip, lsl #20
   12aa4:	andeq	r2, r1, ip, lsl #20
   12aa8:	andeq	r2, r1, ip, lsl #20
   12aac:	andeq	r2, r1, r4, lsl r8
   12ab0:	strdeq	r2, [r1], -r8
   12ab4:	andeq	r2, r1, ip, lsl #25
   12ab8:	andeq	r2, r1, r8, asr r7
   12abc:	andeq	r2, r1, ip, lsr r7
   12ac0:	ldrdeq	r2, [r1], -r0
   12ac4:	andeq	r2, r1, ip, lsr #19
   12ac8:	andeq	r2, r1, ip, lsl #20
   12acc:	andeq	r2, r1, ip, lsl #20
   12ad0:	andeq	r2, r1, ip, lsl #20
   12ad4:	andeq	r2, r1, ip, lsl #20
   12ad8:	andeq	r2, r1, ip, lsl #20
   12adc:	andeq	r2, r1, ip, lsl #20
   12ae0:	andeq	r2, r1, ip, lsl #20
   12ae4:	andeq	r2, r1, ip, lsl #20
   12ae8:	andeq	r2, r1, ip, lsl #20
   12aec:	andeq	r2, r1, ip, lsl #20
   12af0:	andeq	r2, r1, ip, lsl #20
   12af4:	andeq	r2, r1, ip, lsl #20
   12af8:	andeq	r2, r1, ip, lsl #20
   12afc:	andeq	r2, r1, ip, lsl #20
   12b00:	andeq	r2, r1, ip, lsl #20
   12b04:	andeq	r2, r1, ip, lsl #20
   12b08:	andeq	r2, r1, ip, lsl #20
   12b0c:	andeq	r2, r1, ip, lsl #20
   12b10:	andeq	r2, r1, r4, lsr #18
   12b14:	andeq	r2, r1, r0, lsr #18
   12b18:	andeq	r2, r1, r0, lsr #18
   12b1c:	andeq	r2, r1, r0, lsr r5
   12b20:	andeq	r2, r1, r0, lsr #18
   12b24:			; <UNDEFINED> instruction: 0x000129b8
   12b28:	andeq	r2, r1, r0, lsr #18
   12b2c:	andeq	r2, r1, ip, lsl #19
   12b30:	andeq	r2, r1, r0, lsr #18
   12b34:	andeq	r2, r1, r0, lsr #18
   12b38:	andeq	r2, r1, r0, lsr #18
   12b3c:			; <UNDEFINED> instruction: 0x000129b8
   12b40:			; <UNDEFINED> instruction: 0x000129b8
   12b44:			; <UNDEFINED> instruction: 0x000129b8
   12b48:			; <UNDEFINED> instruction: 0x000129b8
   12b4c:			; <UNDEFINED> instruction: 0x000129b8
   12b50:			; <UNDEFINED> instruction: 0x000129b8
   12b54:			; <UNDEFINED> instruction: 0x000129b8
   12b58:			; <UNDEFINED> instruction: 0x000129b8
   12b5c:			; <UNDEFINED> instruction: 0x000129b8
   12b60:			; <UNDEFINED> instruction: 0x000129b8
   12b64:			; <UNDEFINED> instruction: 0x000129b8
   12b68:			; <UNDEFINED> instruction: 0x000129b8
   12b6c:			; <UNDEFINED> instruction: 0x000129b8
   12b70:			; <UNDEFINED> instruction: 0x000129b8
   12b74:			; <UNDEFINED> instruction: 0x000129b8
   12b78:			; <UNDEFINED> instruction: 0x000129b8
   12b7c:	andeq	r2, r1, r0, lsr #18
   12b80:	andeq	r2, r1, r0, lsr #18
   12b84:	andeq	r2, r1, r0, lsr #18
   12b88:	andeq	r2, r1, r0, lsr #18
   12b8c:	andeq	r2, r1, ip, asr r9
   12b90:	andeq	r2, r1, ip, lsl #20
   12b94:			; <UNDEFINED> instruction: 0x000129b8
   12b98:			; <UNDEFINED> instruction: 0x000129b8
   12b9c:			; <UNDEFINED> instruction: 0x000129b8
   12ba0:			; <UNDEFINED> instruction: 0x000129b8
   12ba4:			; <UNDEFINED> instruction: 0x000129b8
   12ba8:			; <UNDEFINED> instruction: 0x000129b8
   12bac:			; <UNDEFINED> instruction: 0x000129b8
   12bb0:			; <UNDEFINED> instruction: 0x000129b8
   12bb4:			; <UNDEFINED> instruction: 0x000129b8
   12bb8:			; <UNDEFINED> instruction: 0x000129b8
   12bbc:			; <UNDEFINED> instruction: 0x000129b8
   12bc0:			; <UNDEFINED> instruction: 0x000129b8
   12bc4:			; <UNDEFINED> instruction: 0x000129b8
   12bc8:			; <UNDEFINED> instruction: 0x000129b8
   12bcc:			; <UNDEFINED> instruction: 0x000129b8
   12bd0:			; <UNDEFINED> instruction: 0x000129b8
   12bd4:			; <UNDEFINED> instruction: 0x000129b8
   12bd8:			; <UNDEFINED> instruction: 0x000129b8
   12bdc:			; <UNDEFINED> instruction: 0x000129b8
   12be0:			; <UNDEFINED> instruction: 0x000129b8
   12be4:			; <UNDEFINED> instruction: 0x000129b8
   12be8:			; <UNDEFINED> instruction: 0x000129b8
   12bec:			; <UNDEFINED> instruction: 0x000129b8
   12bf0:			; <UNDEFINED> instruction: 0x000129b8
   12bf4:			; <UNDEFINED> instruction: 0x000129b8
   12bf8:			; <UNDEFINED> instruction: 0x000129b8
   12bfc:	andeq	r2, r1, r0, lsr #18
   12c00:	andeq	r2, r1, ip, ror r6
   12c04:			; <UNDEFINED> instruction: 0x000129b8
   12c08:	andeq	r2, r1, r0, lsr #18
   12c0c:			; <UNDEFINED> instruction: 0x000129b8
   12c10:	andeq	r2, r1, r0, lsr #18
   12c14:			; <UNDEFINED> instruction: 0x000129b8
   12c18:			; <UNDEFINED> instruction: 0x000129b8
   12c1c:			; <UNDEFINED> instruction: 0x000129b8
   12c20:			; <UNDEFINED> instruction: 0x000129b8
   12c24:			; <UNDEFINED> instruction: 0x000129b8
   12c28:			; <UNDEFINED> instruction: 0x000129b8
   12c2c:			; <UNDEFINED> instruction: 0x000129b8
   12c30:			; <UNDEFINED> instruction: 0x000129b8
   12c34:			; <UNDEFINED> instruction: 0x000129b8
   12c38:			; <UNDEFINED> instruction: 0x000129b8
   12c3c:			; <UNDEFINED> instruction: 0x000129b8
   12c40:			; <UNDEFINED> instruction: 0x000129b8
   12c44:			; <UNDEFINED> instruction: 0x000129b8
   12c48:			; <UNDEFINED> instruction: 0x000129b8
   12c4c:			; <UNDEFINED> instruction: 0x000129b8
   12c50:			; <UNDEFINED> instruction: 0x000129b8
   12c54:			; <UNDEFINED> instruction: 0x000129b8
   12c58:			; <UNDEFINED> instruction: 0x000129b8
   12c5c:			; <UNDEFINED> instruction: 0x000129b8
   12c60:			; <UNDEFINED> instruction: 0x000129b8
   12c64:			; <UNDEFINED> instruction: 0x000129b8
   12c68:			; <UNDEFINED> instruction: 0x000129b8
   12c6c:			; <UNDEFINED> instruction: 0x000129b8
   12c70:			; <UNDEFINED> instruction: 0x000129b8
   12c74:			; <UNDEFINED> instruction: 0x000129b8
   12c78:			; <UNDEFINED> instruction: 0x000129b8
   12c7c:	andeq	r2, r1, r0, lsl r5
   12c80:	andeq	r2, r1, r0, lsr #18
   12c84:	andeq	r2, r1, r0, lsl r5
   12c88:	andeq	r2, r1, r0, lsr r5
   12c8c:	mov	r3, #116	; 0x74
   12c90:	b	12760 <abort@plt+0x1854>
   12c94:	ldr	r3, [sp, #160]	; 0xa0
   12c98:	cmp	r3, #0
   12c9c:	beq	1256c <abort@plt+0x1660>
   12ca0:	lsr	r3, r4, #5
   12ca4:	ldr	r0, [sp, #160]	; 0xa0
   12ca8:	uxtb	r3, r3
   12cac:	and	r1, r4, #31
   12cb0:	ldr	r0, [r0, r3, lsl #2]
   12cb4:	lsr	r3, r0, r1
   12cb8:	tst	r3, #1
   12cbc:	beq	1256c <abort@plt+0x1660>
   12cc0:	ldr	r3, [sp, #28]
   12cc4:	cmp	r3, #0
   12cc8:	beq	126cc <abort@plt+0x17c0>
   12ccc:	ldr	sl, [sp, #32]
   12cd0:	mov	r8, fp
   12cd4:	b	12790 <abort@plt+0x1884>
   12cd8:	ldr	r3, [sp, #28]
   12cdc:	cmp	r3, #0
   12ce0:	bne	13234 <abort@plt+0x2328>
   12ce4:	add	sl, sl, #1
   12ce8:	ldr	r6, [sp, #40]	; 0x28
   12cec:	mov	r5, #0
   12cf0:	mov	r4, #92	; 0x5c
   12cf4:	b	12588 <abort@plt+0x167c>
   12cf8:	cmp	r9, r8
   12cfc:	bne	12f6c <abort@plt+0x2060>
   12d00:	ldr	r0, [sp, #100]	; 0x64
   12d04:	bl	10d5c <iswprint@plt>
   12d08:	add	r5, r5, r4
   12d0c:	cmp	r0, #0
   12d10:	add	r0, sp, #104	; 0x68
   12d14:	moveq	r6, #0
   12d18:	bl	10d08 <mbsinit@plt>
   12d1c:	cmp	r0, #0
   12d20:	beq	12f00 <abort@plt+0x1ff4>
   12d24:	mov	r2, r6
   12d28:	mov	ip, r5
   12d2c:	eor	r5, r2, #1
   12d30:	ldr	r4, [sp, #80]	; 0x50
   12d34:	ldr	r6, [sp, #84]	; 0x54
   12d38:	ldr	r7, [sp, #88]	; 0x58
   12d3c:	uxtb	r5, r5
   12d40:	cmp	ip, #1
   12d44:	bls	13244 <abort@plt+0x2338>
   12d48:	ldr	r3, [sp, #44]	; 0x2c
   12d4c:	and	r8, r3, r5
   12d50:	mov	r5, r2
   12d54:	uxtb	r8, r8
   12d58:	add	r2, sl, ip
   12d5c:	ldr	r0, [sp, #48]	; 0x30
   12d60:	mov	r1, #0
   12d64:	str	r5, [sp, #48]	; 0x30
   12d68:	ldr	r9, [sp, #28]
   12d6c:	ldr	ip, [sp, #40]	; 0x28
   12d70:	ldr	r3, [sp, #32]
   12d74:	ldr	r5, [sp, #152]	; 0x98
   12d78:	b	12e34 <abort@plt+0x1f28>
   12d7c:	cmp	r9, #0
   12d80:	bne	13158 <abort@plt+0x224c>
   12d84:	eor	r1, ip, #1
   12d88:	cmp	r5, #2
   12d8c:	movne	r1, #0
   12d90:	andeq	r1, r1, #1
   12d94:	cmp	r1, #0
   12d98:	beq	12dd0 <abort@plt+0x1ec4>
   12d9c:	cmp	fp, r7
   12da0:	movhi	ip, #39	; 0x27
   12da4:	strbhi	ip, [r3, r7]
   12da8:	add	ip, r7, #1
   12dac:	cmp	fp, ip
   12db0:	movhi	lr, #36	; 0x24
   12db4:	strbhi	lr, [r3, ip]
   12db8:	add	ip, r7, #2
   12dbc:	cmp	fp, ip
   12dc0:	movhi	lr, #39	; 0x27
   12dc4:	strbhi	lr, [r3, ip]
   12dc8:	add	r7, r7, #3
   12dcc:	mov	ip, r1
   12dd0:	cmp	fp, r7
   12dd4:	movhi	r1, #92	; 0x5c
   12dd8:	strbhi	r1, [r3, r7]
   12ddc:	add	r1, r7, #1
   12de0:	cmp	fp, r1
   12de4:	lsrhi	lr, r4, #6
   12de8:	addhi	lr, lr, #48	; 0x30
   12dec:	strbhi	lr, [r3, r1]
   12df0:	add	lr, r7, #2
   12df4:	cmp	fp, lr
   12df8:	lsrhi	r1, r4, #3
   12dfc:	andhi	r1, r1, #7
   12e00:	addhi	r1, r1, #48	; 0x30
   12e04:	add	sl, sl, #1
   12e08:	strbhi	r1, [r3, lr]
   12e0c:	and	r4, r4, #7
   12e10:	cmp	r2, sl
   12e14:	add	r4, r4, #48	; 0x30
   12e18:	add	r7, r7, #3
   12e1c:	bls	1317c <abort@plt+0x2270>
   12e20:	mov	r1, r8
   12e24:	cmp	fp, r7
   12e28:	strbhi	r4, [r3, r7]
   12e2c:	ldrb	r4, [r0, #1]!
   12e30:	add	r7, r7, #1
   12e34:	cmp	r8, #0
   12e38:	bne	12d7c <abort@plt+0x1e70>
   12e3c:	cmp	r6, #0
   12e40:	bne	12e90 <abort@plt+0x1f84>
   12e44:	eor	r6, r1, #1
   12e48:	and	r6, r6, ip
   12e4c:	add	sl, sl, #1
   12e50:	cmp	r2, sl
   12e54:	uxtb	r6, r6
   12e58:	bls	12eb8 <abort@plt+0x1fac>
   12e5c:	cmp	r6, #0
   12e60:	beq	12e24 <abort@plt+0x1f18>
   12e64:	cmp	fp, r7
   12e68:	movhi	ip, #39	; 0x27
   12e6c:	strbhi	ip, [r3, r7]
   12e70:	add	ip, r7, #1
   12e74:	cmp	fp, ip
   12e78:	movhi	lr, #39	; 0x27
   12e7c:	strbhi	lr, [r3, ip]
   12e80:	add	r7, r7, #2
   12e84:	mov	r6, r8
   12e88:	mov	ip, r8
   12e8c:	b	12e24 <abort@plt+0x1f18>
   12e90:	cmp	fp, r7
   12e94:	eor	r6, r1, #1
   12e98:	movhi	lr, #92	; 0x5c
   12e9c:	and	r6, r6, ip
   12ea0:	add	sl, sl, #1
   12ea4:	strbhi	lr, [r3, r7]
   12ea8:	cmp	r2, sl
   12eac:	add	r7, r7, #1
   12eb0:	uxtb	r6, r6
   12eb4:	bhi	12e5c <abort@plt+0x1f50>
   12eb8:	str	ip, [sp, #40]	; 0x28
   12ebc:	ldr	r5, [sp, #48]	; 0x30
   12ec0:	b	12588 <abort@plt+0x167c>
   12ec4:	ldr	r3, [sp, #24]
   12ec8:	cmn	r3, #1
   12ecc:	mov	r3, #0
   12ed0:	str	r3, [sp, #104]	; 0x68
   12ed4:	str	r3, [sp, #108]	; 0x6c
   12ed8:	beq	131f8 <abort@plt+0x22ec>
   12edc:	mov	r2, r5
   12ee0:	mov	r3, #0
   12ee4:	str	r7, [sp, #88]	; 0x58
   12ee8:	ldr	r7, [sp, #152]	; 0x98
   12eec:	str	r5, [sp, #92]	; 0x5c
   12ef0:	str	r6, [sp, #84]	; 0x54
   12ef4:	mov	r5, r3
   12ef8:	mov	r6, r2
   12efc:	str	r4, [sp, #80]	; 0x50
   12f00:	ldr	r3, [sp, #56]	; 0x38
   12f04:	add	r9, sl, r5
   12f08:	add	r8, r3, r9
   12f0c:	ldr	r3, [sp, #24]
   12f10:	mov	r1, r8
   12f14:	sub	r2, r3, r9
   12f18:	add	r0, sp, #100	; 0x64
   12f1c:	add	r3, sp, #104	; 0x68
   12f20:	bl	14cd4 <abort@plt+0x3dc8>
   12f24:	subs	r4, r0, #0
   12f28:	beq	132d0 <abort@plt+0x23c4>
   12f2c:	cmn	r4, #1
   12f30:	beq	132b0 <abort@plt+0x23a4>
   12f34:	cmn	r4, #2
   12f38:	beq	13250 <abort@plt+0x2344>
   12f3c:	ldr	r2, [sp, #28]
   12f40:	cmp	r7, #2
   12f44:	movne	r2, #0
   12f48:	andeq	r2, r2, #1
   12f4c:	cmp	r2, #0
   12f50:	beq	12d00 <abort@plt+0x1df4>
   12f54:	cmp	r4, #1
   12f58:	beq	12d00 <abort@plt+0x1df4>
   12f5c:	sub	r3, r4, #1
   12f60:	add	r9, r3, r9
   12f64:	ldr	r3, [sp, #56]	; 0x38
   12f68:	add	r9, r3, r9
   12f6c:	ldrb	r3, [r8, #1]!
   12f70:	sub	r3, r3, #91	; 0x5b
   12f74:	cmp	r3, #33	; 0x21
   12f78:	ldrls	pc, [pc, r3, lsl #2]
   12f7c:	b	12cf8 <abort@plt+0x1dec>
   12f80:	andeq	r3, r1, r8
   12f84:	andeq	r3, r1, r8
   12f88:	strdeq	r2, [r1], -r8
   12f8c:	andeq	r3, r1, r8
   12f90:	strdeq	r2, [r1], -r8
   12f94:	andeq	r3, r1, r8
   12f98:	strdeq	r2, [r1], -r8
   12f9c:	strdeq	r2, [r1], -r8
   12fa0:	strdeq	r2, [r1], -r8
   12fa4:	strdeq	r2, [r1], -r8
   12fa8:	strdeq	r2, [r1], -r8
   12fac:	strdeq	r2, [r1], -r8
   12fb0:	strdeq	r2, [r1], -r8
   12fb4:	strdeq	r2, [r1], -r8
   12fb8:	strdeq	r2, [r1], -r8
   12fbc:	strdeq	r2, [r1], -r8
   12fc0:	strdeq	r2, [r1], -r8
   12fc4:	strdeq	r2, [r1], -r8
   12fc8:	strdeq	r2, [r1], -r8
   12fcc:	strdeq	r2, [r1], -r8
   12fd0:	strdeq	r2, [r1], -r8
   12fd4:	strdeq	r2, [r1], -r8
   12fd8:	strdeq	r2, [r1], -r8
   12fdc:	strdeq	r2, [r1], -r8
   12fe0:	strdeq	r2, [r1], -r8
   12fe4:	strdeq	r2, [r1], -r8
   12fe8:	strdeq	r2, [r1], -r8
   12fec:	strdeq	r2, [r1], -r8
   12ff0:	strdeq	r2, [r1], -r8
   12ff4:	strdeq	r2, [r1], -r8
   12ff8:	strdeq	r2, [r1], -r8
   12ffc:	strdeq	r2, [r1], -r8
   13000:	strdeq	r2, [r1], -r8
   13004:	andeq	r3, r1, r8
   13008:	mov	r3, #2
   1300c:	ldr	sl, [sp, #32]
   13010:	mov	r8, fp
   13014:	str	r3, [sp, #152]	; 0x98
   13018:	b	12790 <abort@plt+0x1884>
   1301c:	ldr	r3, [sp, #156]	; 0x9c
   13020:	tst	r3, #1
   13024:	bne	13150 <abort@plt+0x2244>
   13028:	ldr	r3, [sp, #152]	; 0x98
   1302c:	ldr	r4, [sp, #44]	; 0x2c
   13030:	sub	r2, r3, #2
   13034:	mov	r5, #0
   13038:	clz	r2, r2
   1303c:	mov	r8, r4
   13040:	lsr	r2, r2, #5
   13044:	b	12550 <abort@plt+0x1644>
   13048:	ldr	r3, [sp, #156]	; 0x9c
   1304c:	ands	r9, r3, #4
   13050:	beq	13188 <abort@plt+0x227c>
   13054:	ldr	r2, [sp, #24]
   13058:	add	r3, sl, #2
   1305c:	cmp	r3, r2
   13060:	bcs	13074 <abort@plt+0x2168>
   13064:	ldr	r2, [sp, #48]	; 0x30
   13068:	ldrb	r4, [r2, #1]
   1306c:	cmp	r4, #63	; 0x3f
   13070:	beq	13310 <abort@plt+0x2404>
   13074:	mov	r2, #0
   13078:	mov	r8, r2
   1307c:	mov	r5, r2
   13080:	mov	r4, #63	; 0x3f
   13084:	b	12550 <abort@plt+0x1644>
   13088:	ldr	r3, [sp, #28]
   1308c:	cmp	r3, #0
   13090:	bne	133b4 <abort@plt+0x24a8>
   13094:	mov	r2, r5
   13098:	mov	r8, r3
   1309c:	mov	r5, #0
   130a0:	mov	r4, #63	; 0x3f
   130a4:	b	12550 <abort@plt+0x1644>
   130a8:	ldr	r3, [sp, #28]
   130ac:	cmp	r3, #0
   130b0:	bne	133b4 <abort@plt+0x24a8>
   130b4:	ldr	r2, [sp, #72]	; 0x48
   130b8:	adds	r3, fp, #0
   130bc:	movne	r3, #1
   130c0:	cmp	r2, #0
   130c4:	movne	r3, #0
   130c8:	cmp	r3, #0
   130cc:	strne	fp, [sp, #72]	; 0x48
   130d0:	movne	fp, #0
   130d4:	bne	13110 <abort@plt+0x2204>
   130d8:	cmp	fp, r7
   130dc:	movhi	r2, #39	; 0x27
   130e0:	ldrhi	r3, [sp, #32]
   130e4:	strbhi	r2, [r3, r7]
   130e8:	add	r3, r7, #1
   130ec:	cmp	fp, r3
   130f0:	movhi	r1, #92	; 0x5c
   130f4:	ldrhi	r2, [sp, #32]
   130f8:	strbhi	r1, [r2, r3]
   130fc:	add	r3, r7, #2
   13100:	cmp	fp, r3
   13104:	movhi	r1, #39	; 0x27
   13108:	ldrhi	r2, [sp, #32]
   1310c:	strbhi	r1, [r2, r3]
   13110:	ldr	r3, [sp, #28]
   13114:	add	r7, r7, #3
   13118:	mov	r2, r5
   1311c:	mov	r8, r3
   13120:	str	r5, [sp, #68]	; 0x44
   13124:	str	r3, [sp, #40]	; 0x28
   13128:	mov	r4, #39	; 0x27
   1312c:	b	12550 <abort@plt+0x1644>
   13130:	ldr	r3, [sp, #56]	; 0x38
   13134:	ldrb	r3, [r3, #1]
   13138:	adds	r3, r3, #0
   1313c:	movne	r3, #1
   13140:	b	12528 <abort@plt+0x161c>
   13144:	ldr	r5, [sp, #28]
   13148:	mov	r4, #48	; 0x30
   1314c:	b	12550 <abort@plt+0x1644>
   13150:	add	sl, sl, #1
   13154:	b	12080 <abort@plt+0x1174>
   13158:	mov	sl, r3
   1315c:	ldr	r3, [sp, #28]
   13160:	mov	r8, fp
   13164:	str	r3, [sp, #44]	; 0x2c
   13168:	ldr	r3, [sp, #152]	; 0x98
   1316c:	sub	r2, r3, #2
   13170:	clz	r2, r2
   13174:	lsr	r2, r2, #5
   13178:	b	12790 <abort@plt+0x1884>
   1317c:	str	ip, [sp, #40]	; 0x28
   13180:	ldr	r5, [sp, #48]	; 0x30
   13184:	b	125c0 <abort@plt+0x16b4>
   13188:	mov	r2, r9
   1318c:	mov	r8, r9
   13190:	mov	r5, #0
   13194:	mov	r4, #63	; 0x3f
   13198:	b	12550 <abort@plt+0x1644>
   1319c:	cmp	fp, #0
   131a0:	beq	13218 <abort@plt+0x230c>
   131a4:	ldr	r1, [sp, #32]
   131a8:	mov	r3, #34	; 0x22
   131ac:	mov	r2, #1
   131b0:	strb	r3, [r1]
   131b4:	ldr	r3, [pc, #332]	; 13308 <abort@plt+0x23fc>
   131b8:	str	r2, [sp, #52]	; 0x34
   131bc:	mov	r7, r2
   131c0:	str	r2, [sp, #44]	; 0x2c
   131c4:	str	r3, [sp, #64]	; 0x40
   131c8:	b	12070 <abort@plt+0x1164>
   131cc:	ldr	r3, [pc, #300]	; 13300 <abort@plt+0x23f4>
   131d0:	str	r3, [sp, #64]	; 0x40
   131d4:	mov	r3, #0
   131d8:	str	r3, [sp, #28]
   131dc:	mov	r3, #1
   131e0:	str	r3, [sp, #52]	; 0x34
   131e4:	mov	r7, r3
   131e8:	mov	r3, #2
   131ec:	str	r3, [sp, #152]	; 0x98
   131f0:	b	12070 <abort@plt+0x1164>
   131f4:	bl	10f0c <abort@plt>
   131f8:	ldr	r0, [sp, #56]	; 0x38
   131fc:	bl	10e28 <strlen@plt>
   13200:	str	r0, [sp, #24]
   13204:	b	12edc <abort@plt+0x1fd0>
   13208:	mov	r5, r8
   1320c:	mov	r4, #48	; 0x30
   13210:	ldr	r8, [sp, #44]	; 0x2c
   13214:	b	12550 <abort@plt+0x1644>
   13218:	mov	r3, #1
   1321c:	str	r3, [sp, #52]	; 0x34
   13220:	mov	r7, r3
   13224:	str	r3, [sp, #44]	; 0x2c
   13228:	ldr	r3, [pc, #216]	; 13308 <abort@plt+0x23fc>
   1322c:	str	r3, [sp, #64]	; 0x40
   13230:	b	12070 <abort@plt+0x1164>
   13234:	ldr	sl, [sp, #32]
   13238:	mov	r8, fp
   1323c:	mov	r2, r3
   13240:	b	12790 <abort@plt+0x1884>
   13244:	mov	r3, r5
   13248:	mov	r5, r2
   1324c:	b	12a48 <abort@plt+0x1b3c>
   13250:	ldr	r1, [sp, #24]
   13254:	mov	r2, r5
   13258:	cmp	r1, r9
   1325c:	mov	ip, r5
   13260:	ldr	r4, [sp, #80]	; 0x50
   13264:	ldr	r5, [sp, #92]	; 0x5c
   13268:	ldr	r6, [sp, #84]	; 0x54
   1326c:	ldr	r7, [sp, #88]	; 0x58
   13270:	bls	132a4 <abort@plt+0x2398>
   13274:	ldrb	r3, [r8]
   13278:	cmp	r3, #0
   1327c:	bne	13290 <abort@plt+0x2384>
   13280:	b	132a8 <abort@plt+0x239c>
   13284:	ldrb	r3, [r8, #1]!
   13288:	cmp	r3, #0
   1328c:	beq	133a8 <abort@plt+0x249c>
   13290:	add	r2, r2, #1
   13294:	add	r3, sl, r2
   13298:	cmp	r1, r3
   1329c:	bhi	13284 <abort@plt+0x2378>
   132a0:	mov	ip, r2
   132a4:	mov	r3, #0
   132a8:	mov	r2, r3
   132ac:	b	12d40 <abort@plt+0x1e34>
   132b0:	mov	r3, #0
   132b4:	mov	ip, r5
   132b8:	ldr	r4, [sp, #80]	; 0x50
   132bc:	ldr	r5, [sp, #92]	; 0x5c
   132c0:	ldr	r6, [sp, #84]	; 0x54
   132c4:	ldr	r7, [sp, #88]	; 0x58
   132c8:	mov	r2, r3
   132cc:	b	12d40 <abort@plt+0x1e34>
   132d0:	mov	r3, r6
   132d4:	mov	ip, r5
   132d8:	eor	r5, r3, #1
   132dc:	mov	r2, r6
   132e0:	ldr	r4, [sp, #80]	; 0x50
   132e4:	ldr	r6, [sp, #84]	; 0x54
   132e8:	ldr	r7, [sp, #88]	; 0x58
   132ec:	uxtb	r5, r5
   132f0:	b	12d40 <abort@plt+0x1e34>
   132f4:	ldr	sl, [sp, #32]
   132f8:	mov	r8, fp
   132fc:	b	13164 <abort@plt+0x2258>
   13300:	muleq	r1, r8, fp
   13304:	muleq	r1, ip, fp
   13308:	muleq	r1, r4, fp
   1330c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   13310:	ldr	r2, [sp, #56]	; 0x38
   13314:	ldrb	r1, [r2, r3]
   13318:	sub	r2, r1, #33	; 0x21
   1331c:	uxtb	r2, r2
   13320:	cmp	r2, #29
   13324:	bhi	133c4 <abort@plt+0x24b8>
   13328:	ldr	r0, [pc, #-36]	; 1330c <abort@plt+0x2400>
   1332c:	mov	ip, #1
   13330:	ands	r2, r0, ip, lsl r2
   13334:	beq	133d4 <abort@plt+0x24c8>
   13338:	ldr	r2, [sp, #28]
   1333c:	cmp	r2, #0
   13340:	bne	134d4 <abort@plt+0x25c8>
   13344:	cmp	fp, r7
   13348:	ldr	r8, [sp, #28]
   1334c:	ldrhi	r2, [sp, #32]
   13350:	mov	sl, r3
   13354:	mov	r5, r8
   13358:	strbhi	r4, [r2, r7]
   1335c:	add	r2, r7, #1
   13360:	cmp	fp, r2
   13364:	movhi	r0, #34	; 0x22
   13368:	ldrhi	ip, [sp, #32]
   1336c:	mov	r4, r1
   13370:	strbhi	r0, [ip, r2]
   13374:	add	r2, r7, #2
   13378:	cmp	fp, r2
   1337c:	movhi	r0, #34	; 0x22
   13380:	ldrhi	ip, [sp, #32]
   13384:	strbhi	r0, [ip, r2]
   13388:	add	r2, r7, #3
   1338c:	cmp	fp, r2
   13390:	movhi	r0, #63	; 0x3f
   13394:	ldrhi	ip, [sp, #32]
   13398:	add	r7, r7, #4
   1339c:	strbhi	r0, [ip, r2]
   133a0:	mov	r2, r8
   133a4:	b	12550 <abort@plt+0x1644>
   133a8:	mov	ip, r2
   133ac:	mov	r2, r3
   133b0:	b	12d40 <abort@plt+0x1e34>
   133b4:	ldr	sl, [sp, #32]
   133b8:	mov	r8, fp
   133bc:	ldr	r2, [sp, #28]
   133c0:	b	12790 <abort@plt+0x1884>
   133c4:	mov	r2, #0
   133c8:	mov	r8, r2
   133cc:	mov	r5, r2
   133d0:	b	12550 <abort@plt+0x1644>
   133d4:	mov	r8, r2
   133d8:	mov	r5, #0
   133dc:	b	12550 <abort@plt+0x1644>
   133e0:	ldr	r1, [sp, #152]	; 0x98
   133e4:	bl	11eac <abort@plt+0xfa0>
   133e8:	str	r0, [sp, #168]	; 0xa8
   133ec:	b	1240c <abort@plt+0x1500>
   133f0:	ldr	r1, [sp, #152]	; 0x98
   133f4:	bl	11eac <abort@plt+0xfa0>
   133f8:	str	r0, [sp, #164]	; 0xa4
   133fc:	b	123ec <abort@plt+0x14e0>
   13400:	ldr	r7, [sp, #28]
   13404:	b	1244c <abort@plt+0x1540>
   13408:	ldr	sl, [sp, #32]
   1340c:	ldr	r2, [sp, #68]	; 0x44
   13410:	mov	r8, fp
   13414:	mov	fp, r7
   13418:	ldr	r3, [sp, #64]	; 0x40
   1341c:	cmp	r3, #0
   13420:	moveq	r2, #0
   13424:	andne	r2, r2, #1
   13428:	cmp	r2, #0
   1342c:	beq	13458 <abort@plt+0x254c>
   13430:	mov	r2, r3
   13434:	ldrb	r3, [r3]
   13438:	cmp	r3, #0
   1343c:	beq	13458 <abort@plt+0x254c>
   13440:	cmp	r8, fp
   13444:	strbhi	r3, [sl, fp]
   13448:	ldrb	r3, [r2, #1]!
   1344c:	add	fp, fp, #1
   13450:	cmp	r3, #0
   13454:	bne	13440 <abort@plt+0x2534>
   13458:	cmp	r8, fp
   1345c:	movhi	r3, #0
   13460:	strbhi	r3, [sl, fp]
   13464:	b	127ec <abort@plt+0x18e0>
   13468:	ldr	r3, [sp, #168]	; 0xa8
   1346c:	ldr	sl, [sp, #32]
   13470:	str	r3, [sp, #16]
   13474:	ldr	r3, [sp, #164]	; 0xa4
   13478:	mov	ip, #5
   1347c:	str	r3, [sp, #12]
   13480:	ldr	r3, [sp, #160]	; 0xa0
   13484:	ldr	r2, [sp, #56]	; 0x38
   13488:	str	r3, [sp, #8]
   1348c:	ldr	r3, [sp, #156]	; 0x9c
   13490:	ldr	r1, [sp, #72]	; 0x48
   13494:	str	r3, [sp, #4]
   13498:	mov	r0, sl
   1349c:	ldr	r3, [sp, #24]
   134a0:	str	ip, [sp]
   134a4:	bl	11fcc <abort@plt+0x10c0>
   134a8:	mov	fp, r0
   134ac:	b	127ec <abort@plt+0x18e0>
   134b0:	mov	r8, fp
   134b4:	ldr	sl, [sp, #32]
   134b8:	mov	fp, r7
   134bc:	mov	r2, r3
   134c0:	b	13418 <abort@plt+0x250c>
   134c4:	mov	r8, fp
   134c8:	ldr	sl, [sp, #32]
   134cc:	mov	fp, r7
   134d0:	b	13418 <abort@plt+0x250c>
   134d4:	ldr	sl, [sp, #32]
   134d8:	mov	r8, fp
   134dc:	b	127a8 <abort@plt+0x189c>
   134e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134e4:	sub	sp, sp, #52	; 0x34
   134e8:	mov	r4, r0
   134ec:	mov	r5, r3
   134f0:	mov	sl, r1
   134f4:	mov	fp, r2
   134f8:	bl	10e4c <__errno_location@plt>
   134fc:	ldr	r7, [pc, #412]	; 136a0 <abort@plt+0x2794>
   13500:	cmn	r4, #-2147483647	; 0x80000001
   13504:	ldr	r6, [r7]
   13508:	mov	r8, r0
   1350c:	movne	r0, #0
   13510:	moveq	r0, #1
   13514:	ldr	r3, [r8]
   13518:	orrs	r0, r0, r4, lsr #31
   1351c:	str	r3, [sp, #24]
   13520:	bne	1369c <abort@plt+0x2790>
   13524:	ldr	r2, [r7, #4]
   13528:	cmp	r4, r2
   1352c:	blt	1358c <abort@plt+0x2680>
   13530:	add	r9, r7, #8
   13534:	cmp	r6, r9
   13538:	str	r2, [sp, #44]	; 0x2c
   1353c:	beq	1366c <abort@plt+0x2760>
   13540:	mov	r3, #8
   13544:	sub	r2, r4, r2
   13548:	mov	r0, r6
   1354c:	str	r3, [sp]
   13550:	add	r2, r2, #1
   13554:	mvn	r3, #-2147483648	; 0x80000000
   13558:	add	r1, sp, #44	; 0x2c
   1355c:	bl	145b8 <abort@plt+0x36ac>
   13560:	mov	r6, r0
   13564:	str	r0, [r7]
   13568:	ldr	r0, [r7, #4]
   1356c:	ldr	r2, [sp, #44]	; 0x2c
   13570:	mov	r1, #0
   13574:	sub	r2, r2, r0
   13578:	add	r0, r6, r0, lsl #3
   1357c:	lsl	r2, r2, #3
   13580:	bl	10e70 <memset@plt>
   13584:	ldr	r3, [sp, #44]	; 0x2c
   13588:	str	r3, [r7, #4]
   1358c:	add	r3, r6, r4, lsl #3
   13590:	ldr	r1, [r5, #4]
   13594:	ldr	r7, [r3, #4]
   13598:	ldr	r9, [r6, r4, lsl #3]
   1359c:	ldr	r2, [r5, #40]	; 0x28
   135a0:	ldr	ip, [r5, #44]	; 0x2c
   135a4:	add	r0, r5, #8
   135a8:	str	r3, [sp, #28]
   135ac:	ldr	r3, [r5]
   135b0:	orr	r1, r1, #1
   135b4:	mov	lr, r0
   135b8:	str	r1, [sp, #32]
   135bc:	str	r0, [sp, #36]	; 0x24
   135c0:	str	r1, [sp, #4]
   135c4:	str	r2, [sp, #12]
   135c8:	str	r3, [sp]
   135cc:	mov	r0, r7
   135d0:	mov	r1, r9
   135d4:	str	ip, [sp, #16]
   135d8:	str	lr, [sp, #8]
   135dc:	mov	r3, fp
   135e0:	mov	r2, sl
   135e4:	bl	11fcc <abort@plt+0x10c0>
   135e8:	cmp	r9, r0
   135ec:	bhi	13658 <abort@plt+0x274c>
   135f0:	ldr	r3, [pc, #172]	; 136a4 <abort@plt+0x2798>
   135f4:	add	r9, r0, #1
   135f8:	cmp	r7, r3
   135fc:	str	r9, [r6, r4, lsl #3]
   13600:	beq	1360c <abort@plt+0x2700>
   13604:	mov	r0, r7
   13608:	bl	11d70 <abort@plt+0xe64>
   1360c:	mov	r0, r9
   13610:	bl	14454 <abort@plt+0x3548>
   13614:	ldr	lr, [sp, #28]
   13618:	ldr	ip, [r5, #44]	; 0x2c
   1361c:	ldr	r4, [r5, #40]	; 0x28
   13620:	mov	r3, fp
   13624:	mov	r2, sl
   13628:	mov	r1, r9
   1362c:	str	r0, [lr, #4]
   13630:	ldr	lr, [r5]
   13634:	ldr	r5, [sp, #36]	; 0x24
   13638:	str	ip, [sp, #16]
   1363c:	str	r5, [sp, #8]
   13640:	ldr	r5, [sp, #32]
   13644:	str	r4, [sp, #12]
   13648:	str	r5, [sp, #4]
   1364c:	str	lr, [sp]
   13650:	mov	r7, r0
   13654:	bl	11fcc <abort@plt+0x10c0>
   13658:	ldr	r3, [sp, #24]
   1365c:	mov	r0, r7
   13660:	str	r3, [r8]
   13664:	add	sp, sp, #52	; 0x34
   13668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1366c:	mov	r3, #8
   13670:	sub	r2, r4, r2
   13674:	str	r3, [sp]
   13678:	add	r1, sp, #44	; 0x2c
   1367c:	add	r2, r2, #1
   13680:	mvn	r3, #-2147483648	; 0x80000000
   13684:	bl	145b8 <abort@plt+0x36ac>
   13688:	mov	r6, r0
   1368c:	ldm	r9, {r0, r1}
   13690:	str	r6, [r7]
   13694:	stm	r6, {r0, r1}
   13698:	b	13568 <abort@plt+0x265c>
   1369c:	bl	10f0c <abort@plt>
   136a0:	strdeq	r7, [r2], -r4
   136a4:	andeq	r7, r2, r4, lsl #6
   136a8:	push	{r4, r5, r6, lr}
   136ac:	mov	r5, r0
   136b0:	bl	10e4c <__errno_location@plt>
   136b4:	cmp	r5, #0
   136b8:	mov	r1, #48	; 0x30
   136bc:	mov	r4, r0
   136c0:	ldr	r0, [pc, #16]	; 136d8 <abort@plt+0x27cc>
   136c4:	ldr	r6, [r4]
   136c8:	movne	r0, r5
   136cc:	bl	148b4 <abort@plt+0x39a8>
   136d0:	str	r6, [r4]
   136d4:	pop	{r4, r5, r6, pc}
   136d8:	andeq	r7, r2, r4, lsl #8
   136dc:	ldr	r3, [pc, #12]	; 136f0 <abort@plt+0x27e4>
   136e0:	cmp	r0, #0
   136e4:	moveq	r0, r3
   136e8:	ldr	r0, [r0]
   136ec:	bx	lr
   136f0:	andeq	r7, r2, r4, lsl #8
   136f4:	ldr	r3, [pc, #12]	; 13708 <abort@plt+0x27fc>
   136f8:	cmp	r0, #0
   136fc:	moveq	r0, r3
   13700:	str	r1, [r0]
   13704:	bx	lr
   13708:	andeq	r7, r2, r4, lsl #8
   1370c:	ldr	r3, [pc, #52]	; 13748 <abort@plt+0x283c>
   13710:	cmp	r0, #0
   13714:	moveq	r0, r3
   13718:	add	r3, r0, #8
   1371c:	push	{lr}		; (str lr, [sp, #-4]!)
   13720:	lsr	lr, r1, #5
   13724:	and	r1, r1, #31
   13728:	ldr	ip, [r3, lr, lsl #2]
   1372c:	lsr	r0, ip, r1
   13730:	eor	r2, r2, r0
   13734:	and	r2, r2, #1
   13738:	and	r0, r0, #1
   1373c:	eor	r1, ip, r2, lsl r1
   13740:	str	r1, [r3, lr, lsl #2]
   13744:	pop	{pc}		; (ldr pc, [sp], #4)
   13748:	andeq	r7, r2, r4, lsl #8
   1374c:	ldr	r3, [pc, #16]	; 13764 <abort@plt+0x2858>
   13750:	cmp	r0, #0
   13754:	movne	r3, r0
   13758:	ldr	r0, [r3, #4]
   1375c:	str	r1, [r3, #4]
   13760:	bx	lr
   13764:	andeq	r7, r2, r4, lsl #8
   13768:	ldr	r3, [pc, #44]	; 1379c <abort@plt+0x2890>
   1376c:	cmp	r0, #0
   13770:	moveq	r0, r3
   13774:	mov	ip, #10
   13778:	cmp	r2, #0
   1377c:	cmpne	r1, #0
   13780:	str	ip, [r0]
   13784:	beq	13794 <abort@plt+0x2888>
   13788:	str	r1, [r0, #40]	; 0x28
   1378c:	str	r2, [r0, #44]	; 0x2c
   13790:	bx	lr
   13794:	push	{r4, lr}
   13798:	bl	10f0c <abort@plt>
   1379c:	andeq	r7, r2, r4, lsl #8
   137a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137a4:	sub	sp, sp, #24
   137a8:	ldr	ip, [pc, #108]	; 1381c <abort@plt+0x2910>
   137ac:	ldr	r4, [sp, #56]	; 0x38
   137b0:	mov	r9, r2
   137b4:	cmp	r4, #0
   137b8:	moveq	r4, ip
   137bc:	mov	sl, r3
   137c0:	mov	r7, r0
   137c4:	mov	r8, r1
   137c8:	bl	10e4c <__errno_location@plt>
   137cc:	ldr	r3, [r4, #44]	; 0x2c
   137d0:	mov	r1, r8
   137d4:	ldr	r6, [r0]
   137d8:	str	r3, [sp, #16]
   137dc:	ldr	r2, [r4, #40]	; 0x28
   137e0:	add	r3, r4, #8
   137e4:	str	r3, [sp, #8]
   137e8:	str	r2, [sp, #12]
   137ec:	ldr	r2, [r4, #4]
   137f0:	mov	r5, r0
   137f4:	str	r2, [sp, #4]
   137f8:	ldr	ip, [r4]
   137fc:	mov	r3, sl
   13800:	mov	r2, r9
   13804:	mov	r0, r7
   13808:	str	ip, [sp]
   1380c:	bl	11fcc <abort@plt+0x10c0>
   13810:	str	r6, [r5]
   13814:	add	sp, sp, #24
   13818:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1381c:	andeq	r7, r2, r4, lsl #8
   13820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13824:	cmp	r3, #0
   13828:	sub	sp, sp, #44	; 0x2c
   1382c:	ldr	r4, [pc, #192]	; 138f4 <abort@plt+0x29e8>
   13830:	mov	r6, r2
   13834:	movne	r4, r3
   13838:	mov	r9, r1
   1383c:	mov	r8, r0
   13840:	bl	10e4c <__errno_location@plt>
   13844:	ldr	r3, [r4, #44]	; 0x2c
   13848:	ldr	r5, [r4, #4]
   1384c:	add	sl, r4, #8
   13850:	cmp	r6, #0
   13854:	orreq	r5, r5, #1
   13858:	mov	r1, #0
   1385c:	ldr	r2, [r0]
   13860:	str	r3, [sp, #16]
   13864:	ldr	r3, [r4, #40]	; 0x28
   13868:	stmib	sp, {r5, sl}
   1386c:	str	r3, [sp, #12]
   13870:	ldr	r3, [r4]
   13874:	mov	r7, r0
   13878:	str	r2, [sp, #28]
   1387c:	str	r3, [sp]
   13880:	mov	r2, r8
   13884:	mov	r3, r9
   13888:	mov	r0, r1
   1388c:	bl	11fcc <abort@plt+0x10c0>
   13890:	add	r1, r0, #1
   13894:	mov	fp, r0
   13898:	mov	r0, r1
   1389c:	str	r1, [sp, #36]	; 0x24
   138a0:	bl	14454 <abort@plt+0x3548>
   138a4:	ldr	r3, [r4, #44]	; 0x2c
   138a8:	mov	r2, r8
   138ac:	str	r3, [sp, #16]
   138b0:	ldr	r3, [r4, #40]	; 0x28
   138b4:	str	r5, [sp, #4]
   138b8:	str	r3, [sp, #12]
   138bc:	str	sl, [sp, #8]
   138c0:	ldr	ip, [r4]
   138c4:	ldr	r1, [sp, #36]	; 0x24
   138c8:	mov	r3, r9
   138cc:	str	ip, [sp]
   138d0:	str	r0, [sp, #32]
   138d4:	bl	11fcc <abort@plt+0x10c0>
   138d8:	ldr	r2, [sp, #28]
   138dc:	cmp	r6, #0
   138e0:	str	r2, [r7]
   138e4:	ldr	r0, [sp, #32]
   138e8:	strne	fp, [r6]
   138ec:	add	sp, sp, #44	; 0x2c
   138f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138f4:	andeq	r7, r2, r4, lsl #8
   138f8:	mov	r3, r2
   138fc:	mov	r2, #0
   13900:	b	13820 <abort@plt+0x2914>
   13904:	push	{r4, r5, r6, r7, r8, lr}
   13908:	ldr	r6, [pc, #116]	; 13984 <abort@plt+0x2a78>
   1390c:	ldr	r3, [r6, #4]
   13910:	ldr	r7, [r6]
   13914:	cmp	r3, #1
   13918:	movgt	r5, r7
   1391c:	movgt	r4, #1
   13920:	ble	13940 <abort@plt+0x2a34>
   13924:	ldr	r0, [r5, #12]
   13928:	bl	11d70 <abort@plt+0xe64>
   1392c:	ldr	r3, [r6, #4]
   13930:	add	r4, r4, #1
   13934:	cmp	r3, r4
   13938:	add	r5, r5, #8
   1393c:	bgt	13924 <abort@plt+0x2a18>
   13940:	ldr	r0, [r7, #4]
   13944:	ldr	r4, [pc, #60]	; 13988 <abort@plt+0x2a7c>
   13948:	cmp	r0, r4
   1394c:	beq	13960 <abort@plt+0x2a54>
   13950:	bl	11d70 <abort@plt+0xe64>
   13954:	mov	r3, #256	; 0x100
   13958:	str	r4, [r6, #12]
   1395c:	str	r3, [r6, #8]
   13960:	ldr	r4, [pc, #36]	; 1398c <abort@plt+0x2a80>
   13964:	cmp	r7, r4
   13968:	beq	13978 <abort@plt+0x2a6c>
   1396c:	mov	r0, r7
   13970:	bl	11d70 <abort@plt+0xe64>
   13974:	str	r4, [r6]
   13978:	mov	r3, #1
   1397c:	str	r3, [r6, #4]
   13980:	pop	{r4, r5, r6, r7, r8, pc}
   13984:	strdeq	r7, [r2], -r4
   13988:	andeq	r7, r2, r4, lsl #6
   1398c:	strdeq	r7, [r2], -ip
   13990:	ldr	r3, [pc, #4]	; 1399c <abort@plt+0x2a90>
   13994:	mvn	r2, #0
   13998:	b	134e0 <abort@plt+0x25d4>
   1399c:	andeq	r7, r2, r4, lsl #8
   139a0:	ldr	r3, [pc]	; 139a8 <abort@plt+0x2a9c>
   139a4:	b	134e0 <abort@plt+0x25d4>
   139a8:	andeq	r7, r2, r4, lsl #8
   139ac:	mov	r1, r0
   139b0:	ldr	r3, [pc, #8]	; 139c0 <abort@plt+0x2ab4>
   139b4:	mvn	r2, #0
   139b8:	mov	r0, #0
   139bc:	b	134e0 <abort@plt+0x25d4>
   139c0:	andeq	r7, r2, r4, lsl #8
   139c4:	mov	r2, r1
   139c8:	ldr	r3, [pc, #8]	; 139d8 <abort@plt+0x2acc>
   139cc:	mov	r1, r0
   139d0:	mov	r0, #0
   139d4:	b	134e0 <abort@plt+0x25d4>
   139d8:	andeq	r7, r2, r4, lsl #8
   139dc:	push	{r4, r5, lr}
   139e0:	sub	sp, sp, #52	; 0x34
   139e4:	mov	r5, r2
   139e8:	mov	r4, r0
   139ec:	mov	r0, sp
   139f0:	bl	11e7c <abort@plt+0xf70>
   139f4:	mov	r3, sp
   139f8:	mov	r1, r5
   139fc:	mov	r0, r4
   13a00:	mvn	r2, #0
   13a04:	bl	134e0 <abort@plt+0x25d4>
   13a08:	add	sp, sp, #52	; 0x34
   13a0c:	pop	{r4, r5, pc}
   13a10:	push	{r4, r5, r6, lr}
   13a14:	sub	sp, sp, #48	; 0x30
   13a18:	mov	r5, r2
   13a1c:	mov	r6, r3
   13a20:	mov	r4, r0
   13a24:	mov	r0, sp
   13a28:	bl	11e7c <abort@plt+0xf70>
   13a2c:	mov	r3, sp
   13a30:	mov	r2, r6
   13a34:	mov	r1, r5
   13a38:	mov	r0, r4
   13a3c:	bl	134e0 <abort@plt+0x25d4>
   13a40:	add	sp, sp, #48	; 0x30
   13a44:	pop	{r4, r5, r6, pc}
   13a48:	mov	r2, r1
   13a4c:	mov	r1, r0
   13a50:	mov	r0, #0
   13a54:	b	139dc <abort@plt+0x2ad0>
   13a58:	mov	r3, r2
   13a5c:	mov	r2, r1
   13a60:	mov	r1, r0
   13a64:	mov	r0, #0
   13a68:	b	13a10 <abort@plt+0x2b04>
   13a6c:	push	{r4, r5, r6, r7, r8, lr}
   13a70:	mov	r7, r0
   13a74:	ldr	lr, [pc, #100]	; 13ae0 <abort@plt+0x2bd4>
   13a78:	mov	r8, r1
   13a7c:	mov	r4, r2
   13a80:	ldm	lr!, {r0, r1, r2, r3}
   13a84:	sub	sp, sp, #48	; 0x30
   13a88:	mov	ip, sp
   13a8c:	lsr	r5, r4, #5
   13a90:	stmia	ip!, {r0, r1, r2, r3}
   13a94:	add	r6, sp, #8
   13a98:	ldm	lr!, {r0, r1, r2, r3}
   13a9c:	and	r4, r4, #31
   13aa0:	stmia	ip!, {r0, r1, r2, r3}
   13aa4:	ldm	lr, {r0, r1, r2, r3}
   13aa8:	stm	ip, {r0, r1, r2, r3}
   13aac:	mov	r2, r8
   13ab0:	ldr	lr, [r6, r5, lsl #2]
   13ab4:	mov	r1, r7
   13ab8:	mov	r3, sp
   13abc:	lsr	ip, lr, r4
   13ac0:	eor	ip, ip, #1
   13ac4:	and	ip, ip, #1
   13ac8:	mov	r0, #0
   13acc:	eor	r4, lr, ip, lsl r4
   13ad0:	str	r4, [r6, r5, lsl #2]
   13ad4:	bl	134e0 <abort@plt+0x25d4>
   13ad8:	add	sp, sp, #48	; 0x30
   13adc:	pop	{r4, r5, r6, r7, r8, pc}
   13ae0:	andeq	r7, r2, r4, lsl #8
   13ae4:	mov	r2, r1
   13ae8:	mvn	r1, #0
   13aec:	b	13a6c <abort@plt+0x2b60>
   13af0:	mov	r2, #58	; 0x3a
   13af4:	mvn	r1, #0
   13af8:	b	13a6c <abort@plt+0x2b60>
   13afc:	mov	r2, #58	; 0x3a
   13b00:	b	13a6c <abort@plt+0x2b60>
   13b04:	push	{r4, r5, r6, r7, lr}
   13b08:	sub	sp, sp, #100	; 0x64
   13b0c:	mov	r6, r0
   13b10:	mov	r0, sp
   13b14:	mov	r7, r2
   13b18:	bl	11e7c <abort@plt+0xf70>
   13b1c:	mov	ip, sp
   13b20:	add	lr, sp, #48	; 0x30
   13b24:	ldm	ip!, {r0, r1, r2, r3}
   13b28:	stmia	lr!, {r0, r1, r2, r3}
   13b2c:	ldm	ip!, {r0, r1, r2, r3}
   13b30:	ldr	r5, [sp, #60]	; 0x3c
   13b34:	stmia	lr!, {r0, r1, r2, r3}
   13b38:	mvn	r4, r5
   13b3c:	ldm	ip, {r0, r1, r2, r3}
   13b40:	and	ip, r4, #67108864	; 0x4000000
   13b44:	eor	ip, ip, r5
   13b48:	str	ip, [sp, #60]	; 0x3c
   13b4c:	stm	lr, {r0, r1, r2, r3}
   13b50:	mov	r1, r7
   13b54:	mov	r0, r6
   13b58:	add	r3, sp, #48	; 0x30
   13b5c:	mvn	r2, #0
   13b60:	bl	134e0 <abort@plt+0x25d4>
   13b64:	add	sp, sp, #100	; 0x64
   13b68:	pop	{r4, r5, r6, r7, pc}
   13b6c:	push	{r4, r5, r6, r7, r8, lr}
   13b70:	mov	r5, r1
   13b74:	ldr	lr, [pc, #100]	; 13be0 <abort@plt+0x2cd4>
   13b78:	mov	r4, r2
   13b7c:	mov	r7, r0
   13b80:	mov	r8, r3
   13b84:	ldm	lr!, {r0, r1, r2, r3}
   13b88:	sub	sp, sp, #48	; 0x30
   13b8c:	mov	ip, sp
   13b90:	mov	r6, #10
   13b94:	stmia	ip!, {r0, r1, r2, r3}
   13b98:	cmp	r4, #0
   13b9c:	cmpne	r5, #0
   13ba0:	ldm	lr!, {r0, r1, r2, r3}
   13ba4:	str	r6, [sp]
   13ba8:	stmia	ip!, {r0, r1, r2, r3}
   13bac:	ldm	lr, {r0, r1, r2, r3}
   13bb0:	stm	ip, {r0, r1, r2, r3}
   13bb4:	beq	13bdc <abort@plt+0x2cd0>
   13bb8:	mov	r3, sp
   13bbc:	mov	r1, r8
   13bc0:	mov	r0, r7
   13bc4:	ldr	r2, [sp, #72]	; 0x48
   13bc8:	str	r5, [sp, #40]	; 0x28
   13bcc:	str	r4, [sp, #44]	; 0x2c
   13bd0:	bl	134e0 <abort@plt+0x25d4>
   13bd4:	add	sp, sp, #48	; 0x30
   13bd8:	pop	{r4, r5, r6, r7, r8, pc}
   13bdc:	bl	10f0c <abort@plt>
   13be0:	andeq	r7, r2, r4, lsl #8
   13be4:	push	{lr}		; (str lr, [sp, #-4]!)
   13be8:	sub	sp, sp, #12
   13bec:	mvn	ip, #0
   13bf0:	str	ip, [sp]
   13bf4:	bl	13b6c <abort@plt+0x2c60>
   13bf8:	add	sp, sp, #12
   13bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   13c00:	push	{lr}		; (str lr, [sp, #-4]!)
   13c04:	sub	sp, sp, #12
   13c08:	mvn	ip, #0
   13c0c:	mov	r3, r2
   13c10:	str	ip, [sp]
   13c14:	mov	r2, r1
   13c18:	mov	r1, r0
   13c1c:	mov	r0, #0
   13c20:	bl	13b6c <abort@plt+0x2c60>
   13c24:	add	sp, sp, #12
   13c28:	pop	{pc}		; (ldr pc, [sp], #4)
   13c2c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c30:	sub	sp, sp, #12
   13c34:	str	r3, [sp]
   13c38:	mov	r3, r2
   13c3c:	mov	r2, r1
   13c40:	mov	r1, r0
   13c44:	mov	r0, #0
   13c48:	bl	13b6c <abort@plt+0x2c60>
   13c4c:	add	sp, sp, #12
   13c50:	pop	{pc}		; (ldr pc, [sp], #4)
   13c54:	ldr	r3, [pc]	; 13c5c <abort@plt+0x2d50>
   13c58:	b	134e0 <abort@plt+0x25d4>
   13c5c:	andeq	r7, r2, r4, lsl #2
   13c60:	mov	r2, r1
   13c64:	ldr	r3, [pc, #8]	; 13c74 <abort@plt+0x2d68>
   13c68:	mov	r1, r0
   13c6c:	mov	r0, #0
   13c70:	b	134e0 <abort@plt+0x25d4>
   13c74:	andeq	r7, r2, r4, lsl #2
   13c78:	ldr	r3, [pc, #4]	; 13c84 <abort@plt+0x2d78>
   13c7c:	mvn	r2, #0
   13c80:	b	134e0 <abort@plt+0x25d4>
   13c84:	andeq	r7, r2, r4, lsl #2
   13c88:	mov	r1, r0
   13c8c:	ldr	r3, [pc, #8]	; 13c9c <abort@plt+0x2d90>
   13c90:	mvn	r2, #0
   13c94:	mov	r0, #0
   13c98:	b	134e0 <abort@plt+0x25d4>
   13c9c:	andeq	r7, r2, r4, lsl #2
   13ca0:	push	{r4, r5, r6, r7, lr}
   13ca4:	mov	r7, r1
   13ca8:	ldrb	r3, [r0]
   13cac:	sub	sp, sp, #12
   13cb0:	sub	r3, r3, #48	; 0x30
   13cb4:	cmp	r3, #9
   13cb8:	bls	13d0c <abort@plt+0x2e00>
   13cbc:	mov	r6, r0
   13cc0:	ldr	r5, [pc, #324]	; 13e0c <abort@plt+0x2f00>
   13cc4:	mov	r4, #0
   13cc8:	b	13cd8 <abort@plt+0x2dcc>
   13ccc:	add	r4, r4, #1
   13cd0:	cmp	r4, #35	; 0x23
   13cd4:	beq	13d3c <abort@plt+0x2e30>
   13cd8:	mov	r0, r5
   13cdc:	mov	r1, r6
   13ce0:	bl	10cc0 <strcmp@plt>
   13ce4:	add	r5, r5, #12
   13ce8:	cmp	r0, #0
   13cec:	bne	13ccc <abort@plt+0x2dc0>
   13cf0:	ldr	r3, [pc, #280]	; 13e10 <abort@plt+0x2f04>
   13cf4:	add	r4, r4, r4, lsl #1
   13cf8:	ldr	r0, [r3, r4, lsl #2]
   13cfc:	str	r0, [r7]
   13d00:	asr	r0, r0, #31
   13d04:	add	sp, sp, #12
   13d08:	pop	{r4, r5, r6, r7, pc}
   13d0c:	mov	r2, #10
   13d10:	add	r1, sp, #4
   13d14:	bl	10ccc <strtol@plt>
   13d18:	ldr	r3, [sp, #4]
   13d1c:	ldrb	r3, [r3]
   13d20:	cmp	r0, #64	; 0x40
   13d24:	cmple	r3, #0
   13d28:	beq	13cfc <abort@plt+0x2df0>
   13d2c:	mvn	r3, #0
   13d30:	mov	r0, r3
   13d34:	str	r3, [r7]
   13d38:	b	13d04 <abort@plt+0x2df8>
   13d3c:	bl	10ef4 <__libc_current_sigrtmin@plt>
   13d40:	mov	r5, r0
   13d44:	bl	10e34 <__libc_current_sigrtmax@plt>
   13d48:	cmp	r5, #0
   13d4c:	mov	r4, r0
   13d50:	ble	13d6c <abort@plt+0x2e60>
   13d54:	mov	r2, #5
   13d58:	ldr	r1, [pc, #180]	; 13e14 <abort@plt+0x2f08>
   13d5c:	mov	r0, r6
   13d60:	bl	10f00 <strncmp@plt>
   13d64:	cmp	r0, #0
   13d68:	beq	13dd4 <abort@plt+0x2ec8>
   13d6c:	cmp	r4, #0
   13d70:	ble	13d2c <abort@plt+0x2e20>
   13d74:	mov	r2, #5
   13d78:	ldr	r1, [pc, #152]	; 13e18 <abort@plt+0x2f0c>
   13d7c:	mov	r0, r6
   13d80:	bl	10f00 <strncmp@plt>
   13d84:	cmp	r0, #0
   13d88:	bne	13d2c <abort@plt+0x2e20>
   13d8c:	add	r0, r6, #5
   13d90:	mov	r2, #10
   13d94:	add	r1, sp, #4
   13d98:	bl	10ccc <strtol@plt>
   13d9c:	ldr	r3, [sp, #4]
   13da0:	ldrb	r3, [r3]
   13da4:	cmp	r3, #0
   13da8:	bne	13d2c <abort@plt+0x2e20>
   13dac:	sub	r5, r5, r4
   13db0:	cmp	r0, r5
   13db4:	movlt	r5, #0
   13db8:	movge	r5, #1
   13dbc:	cmp	r0, #0
   13dc0:	movgt	r5, #0
   13dc4:	cmp	r5, #0
   13dc8:	beq	13d2c <abort@plt+0x2e20>
   13dcc:	add	r0, r4, r0
   13dd0:	b	13cfc <abort@plt+0x2df0>
   13dd4:	add	r0, r6, #5
   13dd8:	mov	r2, #10
   13ddc:	add	r1, sp, #4
   13de0:	bl	10ccc <strtol@plt>
   13de4:	ldr	r3, [sp, #4]
   13de8:	ldrb	r3, [r3]
   13dec:	cmp	r0, #0
   13df0:	cmpge	r3, #0
   13df4:	bne	13d2c <abort@plt+0x2e20>
   13df8:	sub	r4, r4, r5
   13dfc:	cmp	r0, r4
   13e00:	bgt	13d2c <abort@plt+0x2e20>
   13e04:	add	r0, r5, r0
   13e08:	b	13cfc <abort@plt+0x2df0>
   13e0c:	andeq	r7, r2, r8, lsr r1
   13e10:	andeq	r7, r2, r4, lsr r1
   13e14:	andeq	r5, r1, r8, lsl #24
   13e18:	andeq	r5, r1, r0, lsl ip
   13e1c:	mov	r3, #0
   13e20:	push	{r4, r5, r6, lr}
   13e24:	mov	r2, r3
   13e28:	sub	sp, sp, #8
   13e2c:	ldr	lr, [pc, #200]	; 13efc <abort@plt+0x2ff0>
   13e30:	mov	r4, r0
   13e34:	mov	r5, r1
   13e38:	b	13e48 <abort@plt+0x2f3c>
   13e3c:	add	r2, r2, #1
   13e40:	cmp	r2, #35	; 0x23
   13e44:	beq	13e78 <abort@plt+0x2f6c>
   13e48:	ldr	ip, [lr, r3]
   13e4c:	add	r3, r3, #12
   13e50:	cmp	ip, r4
   13e54:	bne	13e3c <abort@plt+0x2f30>
   13e58:	add	r2, r2, r2, lsl #1
   13e5c:	mov	r0, r5
   13e60:	add	r2, lr, r2, lsl #2
   13e64:	add	r1, r2, #4
   13e68:	bl	10d8c <strcpy@plt>
   13e6c:	mov	r0, #0
   13e70:	add	sp, sp, #8
   13e74:	pop	{r4, r5, r6, pc}
   13e78:	bl	10ef4 <__libc_current_sigrtmin@plt>
   13e7c:	mov	r6, r0
   13e80:	bl	10e34 <__libc_current_sigrtmax@plt>
   13e84:	cmp	r4, r0
   13e88:	movle	r3, #0
   13e8c:	movgt	r3, #1
   13e90:	cmp	r4, r6
   13e94:	orrlt	r3, r3, #1
   13e98:	cmp	r3, #0
   13e9c:	bne	13ef4 <abort@plt+0x2fe8>
   13ea0:	sub	r3, r0, r6
   13ea4:	add	r3, r6, r3, asr #1
   13ea8:	cmp	r4, r3
   13eac:	movgt	r6, r0
   13eb0:	ldrle	r3, [pc, #72]	; 13f00 <abort@plt+0x2ff4>
   13eb4:	ldrgt	r3, [pc, #72]	; 13f04 <abort@plt+0x2ff8>
   13eb8:	ldr	r0, [r3]
   13ebc:	ldrh	r2, [r3, #4]
   13ec0:	str	r0, [r5]
   13ec4:	subs	r0, r4, r6
   13ec8:	strh	r2, [r5, #4]
   13ecc:	beq	13e70 <abort@plt+0x2f64>
   13ed0:	str	r0, [sp]
   13ed4:	ldr	r3, [pc, #44]	; 13f08 <abort@plt+0x2ffc>
   13ed8:	add	r0, r5, #5
   13edc:	mvn	r2, #0
   13ee0:	mov	r1, #1
   13ee4:	bl	10e58 <__sprintf_chk@plt>
   13ee8:	mov	r0, #0
   13eec:	add	sp, sp, #8
   13ef0:	pop	{r4, r5, r6, pc}
   13ef4:	mvn	r0, #0
   13ef8:	b	13e70 <abort@plt+0x2f64>
   13efc:	andeq	r7, r2, r4, lsr r1
   13f00:	andeq	r5, r1, r8, lsl #24
   13f04:	andeq	r5, r1, r0, lsl ip
   13f08:	andeq	r5, r1, r8, lsl ip
   13f0c:	push	{r4, r5, r6, lr}
   13f10:	sub	sp, sp, #32
   13f14:	cmp	r1, #0
   13f18:	mov	r4, r0
   13f1c:	ldr	r5, [sp, #48]	; 0x30
   13f20:	ldr	r6, [sp, #52]	; 0x34
   13f24:	beq	1423c <abort@plt+0x3330>
   13f28:	stm	sp, {r2, r3}
   13f2c:	mov	r3, r1
   13f30:	ldr	r2, [pc, #808]	; 14260 <abort@plt+0x3354>
   13f34:	mov	r1, #1
   13f38:	bl	10e94 <__fprintf_chk@plt>
   13f3c:	mov	r2, #5
   13f40:	ldr	r1, [pc, #796]	; 14264 <abort@plt+0x3358>
   13f44:	mov	r0, #0
   13f48:	bl	10d2c <dcgettext@plt>
   13f4c:	ldr	r3, [pc, #788]	; 14268 <abort@plt+0x335c>
   13f50:	ldr	r2, [pc, #788]	; 1426c <abort@plt+0x3360>
   13f54:	str	r3, [sp]
   13f58:	mov	r1, #1
   13f5c:	mov	r3, r0
   13f60:	mov	r0, r4
   13f64:	bl	10e94 <__fprintf_chk@plt>
   13f68:	mov	r1, r4
   13f6c:	mov	r0, #10
   13f70:	bl	10d20 <fputc_unlocked@plt>
   13f74:	mov	r2, #5
   13f78:	ldr	r1, [pc, #752]	; 14270 <abort@plt+0x3364>
   13f7c:	mov	r0, #0
   13f80:	bl	10d2c <dcgettext@plt>
   13f84:	mov	r1, #1
   13f88:	ldr	r3, [pc, #740]	; 14274 <abort@plt+0x3368>
   13f8c:	mov	r2, r0
   13f90:	mov	r0, r4
   13f94:	bl	10e94 <__fprintf_chk@plt>
   13f98:	mov	r1, r4
   13f9c:	mov	r0, #10
   13fa0:	bl	10d20 <fputc_unlocked@plt>
   13fa4:	cmp	r6, #9
   13fa8:	ldrls	pc, [pc, r6, lsl #2]
   13fac:	b	14254 <abort@plt+0x3348>
   13fb0:	andeq	r4, r1, r4, lsr r0
   13fb4:	andeq	r4, r1, ip, lsr r0
   13fb8:	andeq	r4, r1, r8, rrx
   13fbc:	muleq	r1, ip, r0
   13fc0:	ldrdeq	r4, [r1], -r8
   13fc4:	andeq	r4, r1, r4, lsl r1
   13fc8:	andeq	r4, r1, r0, asr r1
   13fcc:	muleq	r1, r4, r1
   13fd0:	andeq	r4, r1, r4, ror #3
   13fd4:	ldrdeq	r3, [r1], -r8
   13fd8:	ldr	r1, [pc, #664]	; 14278 <abort@plt+0x336c>
   13fdc:	mov	r2, #5
   13fe0:	mov	r0, #0
   13fe4:	bl	10d2c <dcgettext@plt>
   13fe8:	ldr	ip, [r5, #32]
   13fec:	ldr	r1, [r5, #28]
   13ff0:	ldr	r2, [r5, #24]
   13ff4:	ldr	r3, [r5]
   13ff8:	ldr	r6, [r5, #20]
   13ffc:	str	ip, [sp, #28]
   14000:	ldr	lr, [r5, #16]
   14004:	str	r1, [sp, #24]
   14008:	ldr	ip, [r5, #12]
   1400c:	str	r2, [sp, #20]
   14010:	ldr	r1, [r5, #8]
   14014:	ldr	r2, [r5, #4]
   14018:	str	r6, [sp, #16]
   1401c:	stmib	sp, {r1, ip, lr}
   14020:	mov	r1, #1
   14024:	str	r2, [sp]
   14028:	mov	r2, r0
   1402c:	mov	r0, r4
   14030:	bl	10e94 <__fprintf_chk@plt>
   14034:	add	sp, sp, #32
   14038:	pop	{r4, r5, r6, pc}
   1403c:	mov	r2, #5
   14040:	ldr	r1, [pc, #564]	; 1427c <abort@plt+0x3370>
   14044:	mov	r0, #0
   14048:	bl	10d2c <dcgettext@plt>
   1404c:	ldr	r3, [r5]
   14050:	mov	r1, #1
   14054:	mov	r2, r0
   14058:	mov	r0, r4
   1405c:	add	sp, sp, #32
   14060:	pop	{r4, r5, r6, lr}
   14064:	b	10e94 <__fprintf_chk@plt>
   14068:	mov	r2, #5
   1406c:	ldr	r1, [pc, #524]	; 14280 <abort@plt+0x3374>
   14070:	mov	r0, #0
   14074:	bl	10d2c <dcgettext@plt>
   14078:	ldr	r2, [r5, #4]
   1407c:	ldr	r3, [r5]
   14080:	mov	r1, #1
   14084:	str	r2, [sp, #48]	; 0x30
   14088:	mov	r2, r0
   1408c:	mov	r0, r4
   14090:	add	sp, sp, #32
   14094:	pop	{r4, r5, r6, lr}
   14098:	b	10e94 <__fprintf_chk@plt>
   1409c:	mov	r2, #5
   140a0:	ldr	r1, [pc, #476]	; 14284 <abort@plt+0x3378>
   140a4:	mov	r0, #0
   140a8:	bl	10d2c <dcgettext@plt>
   140ac:	ldr	r1, [r5, #8]
   140b0:	ldr	r2, [r5, #4]
   140b4:	ldr	r3, [r5]
   140b8:	str	r1, [sp, #52]	; 0x34
   140bc:	str	r2, [sp, #48]	; 0x30
   140c0:	mov	r1, #1
   140c4:	mov	r2, r0
   140c8:	mov	r0, r4
   140cc:	add	sp, sp, #32
   140d0:	pop	{r4, r5, r6, lr}
   140d4:	b	10e94 <__fprintf_chk@plt>
   140d8:	mov	r2, #5
   140dc:	ldr	r1, [pc, #420]	; 14288 <abort@plt+0x337c>
   140e0:	mov	r0, #0
   140e4:	bl	10d2c <dcgettext@plt>
   140e8:	ldr	r1, [r5, #8]
   140ec:	ldr	ip, [r5, #12]
   140f0:	ldr	r2, [r5, #4]
   140f4:	ldr	r3, [r5]
   140f8:	stmib	sp, {r1, ip}
   140fc:	str	r2, [sp]
   14100:	mov	r1, #1
   14104:	mov	r2, r0
   14108:	mov	r0, r4
   1410c:	bl	10e94 <__fprintf_chk@plt>
   14110:	b	14034 <abort@plt+0x3128>
   14114:	mov	r2, #5
   14118:	ldr	r1, [pc, #364]	; 1428c <abort@plt+0x3380>
   1411c:	mov	r0, #0
   14120:	bl	10d2c <dcgettext@plt>
   14124:	add	r1, r5, #8
   14128:	ldr	r2, [r5, #4]
   1412c:	ldm	r1, {r1, ip, lr}
   14130:	ldr	r3, [r5]
   14134:	str	r2, [sp]
   14138:	stmib	sp, {r1, ip, lr}
   1413c:	mov	r1, #1
   14140:	mov	r2, r0
   14144:	mov	r0, r4
   14148:	bl	10e94 <__fprintf_chk@plt>
   1414c:	b	14034 <abort@plt+0x3128>
   14150:	mov	r2, #5
   14154:	ldr	r1, [pc, #308]	; 14290 <abort@plt+0x3384>
   14158:	mov	r0, #0
   1415c:	bl	10d2c <dcgettext@plt>
   14160:	add	r1, r5, #8
   14164:	ldr	r2, [r5, #4]
   14168:	ldm	r1, {r1, ip, lr}
   1416c:	ldr	r6, [r5, #20]
   14170:	ldr	r3, [r5]
   14174:	stmib	sp, {r1, ip, lr}
   14178:	mov	r1, #1
   1417c:	str	r2, [sp]
   14180:	str	r6, [sp, #16]
   14184:	mov	r2, r0
   14188:	mov	r0, r4
   1418c:	bl	10e94 <__fprintf_chk@plt>
   14190:	b	14034 <abort@plt+0x3128>
   14194:	mov	r2, #5
   14198:	ldr	r1, [pc, #244]	; 14294 <abort@plt+0x3388>
   1419c:	mov	r0, #0
   141a0:	bl	10d2c <dcgettext@plt>
   141a4:	ldr	r2, [r5, #24]
   141a8:	ldr	r3, [r5]
   141ac:	ldr	r6, [r5, #20]
   141b0:	ldr	lr, [r5, #16]
   141b4:	ldr	ip, [r5, #12]
   141b8:	str	r2, [sp, #20]
   141bc:	ldr	r1, [r5, #8]
   141c0:	ldr	r2, [r5, #4]
   141c4:	str	r6, [sp, #16]
   141c8:	stmib	sp, {r1, ip, lr}
   141cc:	mov	r1, #1
   141d0:	str	r2, [sp]
   141d4:	mov	r2, r0
   141d8:	mov	r0, r4
   141dc:	bl	10e94 <__fprintf_chk@plt>
   141e0:	b	14034 <abort@plt+0x3128>
   141e4:	mov	r2, #5
   141e8:	ldr	r1, [pc, #168]	; 14298 <abort@plt+0x338c>
   141ec:	mov	r0, #0
   141f0:	bl	10d2c <dcgettext@plt>
   141f4:	ldr	r1, [r5, #28]
   141f8:	ldr	r2, [r5, #24]
   141fc:	ldr	r3, [r5]
   14200:	ldr	r6, [r5, #20]
   14204:	ldr	lr, [r5, #16]
   14208:	str	r1, [sp, #24]
   1420c:	ldr	ip, [r5, #12]
   14210:	str	r2, [sp, #20]
   14214:	ldr	r1, [r5, #8]
   14218:	ldr	r2, [r5, #4]
   1421c:	str	r6, [sp, #16]
   14220:	stmib	sp, {r1, ip, lr}
   14224:	mov	r1, #1
   14228:	str	r2, [sp]
   1422c:	mov	r2, r0
   14230:	mov	r0, r4
   14234:	bl	10e94 <__fprintf_chk@plt>
   14238:	b	14034 <abort@plt+0x3128>
   1423c:	str	r3, [sp]
   14240:	mov	r1, #1
   14244:	mov	r3, r2
   14248:	ldr	r2, [pc, #76]	; 1429c <abort@plt+0x3390>
   1424c:	bl	10e94 <__fprintf_chk@plt>
   14250:	b	13f3c <abort@plt+0x3030>
   14254:	mov	r2, #5
   14258:	ldr	r1, [pc, #64]	; 142a0 <abort@plt+0x3394>
   1425c:	b	13fe0 <abort@plt+0x30d4>
   14260:	andeq	r5, r1, ip, lsl ip
   14264:	andeq	r5, r1, r0, lsr ip
   14268:	andeq	r0, r0, r6, ror #15
   1426c:	andeq	r5, r1, r8, lsl #30
   14270:	andeq	r5, r1, r4, lsr ip
   14274:	andeq	r5, r1, r0, ror #25
   14278:	andeq	r5, r1, r0, lsl lr
   1427c:	andeq	r5, r1, r4, lsl #26
   14280:	andeq	r5, r1, r4, lsl sp
   14284:	andeq	r5, r1, ip, lsr #26
   14288:	andeq	r5, r1, r8, asr #26
   1428c:	andeq	r5, r1, r8, ror #26
   14290:	andeq	r5, r1, ip, lsl #27
   14294:			; <UNDEFINED> instruction: 0x00015db4
   14298:	andeq	r5, r1, r0, ror #27
   1429c:	andeq	r5, r1, r8, lsr #24
   142a0:	andeq	r5, r1, r4, asr #28
   142a4:	push	{r4, r5, lr}
   142a8:	sub	sp, sp, #12
   142ac:	ldr	r5, [sp, #24]
   142b0:	ldr	ip, [r5]
   142b4:	cmp	ip, #0
   142b8:	beq	142d4 <abort@plt+0x33c8>
   142bc:	mov	lr, r5
   142c0:	mov	ip, #0
   142c4:	ldr	r4, [lr, #4]!
   142c8:	add	ip, ip, #1
   142cc:	cmp	r4, #0
   142d0:	bne	142c4 <abort@plt+0x33b8>
   142d4:	stm	sp, {r5, ip}
   142d8:	bl	13f0c <abort@plt+0x3000>
   142dc:	add	sp, sp, #12
   142e0:	pop	{r4, r5, pc}
   142e4:	push	{r4, r5, lr}
   142e8:	sub	sp, sp, #52	; 0x34
   142ec:	add	r5, sp, #4
   142f0:	ldr	r4, [sp, #64]	; 0x40
   142f4:	mov	ip, #0
   142f8:	sub	r4, r4, #4
   142fc:	ldr	lr, [r4, #4]!
   14300:	cmp	lr, #0
   14304:	str	lr, [r5, #4]!
   14308:	beq	14318 <abort@plt+0x340c>
   1430c:	add	ip, ip, #1
   14310:	cmp	ip, #10
   14314:	bne	142fc <abort@plt+0x33f0>
   14318:	add	lr, sp, #8
   1431c:	str	ip, [sp, #4]
   14320:	str	lr, [sp]
   14324:	bl	13f0c <abort@plt+0x3000>
   14328:	add	sp, sp, #52	; 0x34
   1432c:	pop	{r4, r5, pc}
   14330:	push	{r3}		; (str r3, [sp, #-4]!)
   14334:	push	{r4, lr}
   14338:	sub	sp, sp, #60	; 0x3c
   1433c:	add	lr, sp, #56	; 0x38
   14340:	add	r3, sp, #72	; 0x48
   14344:	str	r3, [lr, #-44]!	; 0xffffffd4
   14348:	add	r4, sp, #68	; 0x44
   1434c:	mov	r3, #0
   14350:	ldr	ip, [r4, #4]!
   14354:	cmp	ip, #0
   14358:	str	ip, [lr, #4]!
   1435c:	beq	1436c <abort@plt+0x3460>
   14360:	add	r3, r3, #1
   14364:	cmp	r3, #10
   14368:	bne	14350 <abort@plt+0x3444>
   1436c:	add	ip, sp, #16
   14370:	str	r3, [sp, #4]
   14374:	str	ip, [sp]
   14378:	ldr	r3, [sp, #68]	; 0x44
   1437c:	bl	13f0c <abort@plt+0x3000>
   14380:	add	sp, sp, #60	; 0x3c
   14384:	pop	{r4, lr}
   14388:	add	sp, sp, #4
   1438c:	bx	lr
   14390:	ldr	r3, [pc, #116]	; 1440c <abort@plt+0x3500>
   14394:	push	{r4, lr}
   14398:	mov	r0, #10
   1439c:	ldr	r1, [r3]
   143a0:	bl	10d20 <fputc_unlocked@plt>
   143a4:	mov	r2, #5
   143a8:	ldr	r1, [pc, #96]	; 14410 <abort@plt+0x3504>
   143ac:	mov	r0, #0
   143b0:	bl	10d2c <dcgettext@plt>
   143b4:	ldr	r2, [pc, #88]	; 14414 <abort@plt+0x3508>
   143b8:	mov	r1, r0
   143bc:	mov	r0, #1
   143c0:	bl	10e7c <__printf_chk@plt>
   143c4:	mov	r2, #5
   143c8:	ldr	r1, [pc, #72]	; 14418 <abort@plt+0x350c>
   143cc:	mov	r0, #0
   143d0:	bl	10d2c <dcgettext@plt>
   143d4:	ldr	r3, [pc, #64]	; 1441c <abort@plt+0x3510>
   143d8:	ldr	r2, [pc, #64]	; 14420 <abort@plt+0x3514>
   143dc:	mov	r1, r0
   143e0:	mov	r0, #1
   143e4:	bl	10e7c <__printf_chk@plt>
   143e8:	mov	r2, #5
   143ec:	ldr	r1, [pc, #48]	; 14424 <abort@plt+0x3518>
   143f0:	mov	r0, #0
   143f4:	bl	10d2c <dcgettext@plt>
   143f8:	ldr	r2, [pc, #40]	; 14428 <abort@plt+0x351c>
   143fc:	pop	{r4, lr}
   14400:	mov	r1, r0
   14404:	mov	r0, #1
   14408:	b	10e7c <__printf_chk@plt>
   1440c:	andeq	r7, r2, ip, ror #5
   14410:	andeq	r5, r1, r0, lsl #29
   14414:	muleq	r1, r4, lr
   14418:	andeq	r5, r1, ip, lsr #29
   1441c:	andeq	r5, r1, ip, asr #16
   14420:	andeq	r5, r1, r4, ror r8
   14424:	andeq	r5, r1, r0, asr #29
   14428:	andeq	r5, r1, r8, ror #29
   1442c:	push	{r4, lr}
   14430:	bl	149fc <abort@plt+0x3af0>
   14434:	cmp	r0, #0
   14438:	popne	{r4, pc}
   1443c:	bl	14974 <abort@plt+0x3a68>
   14440:	push	{r4, lr}
   14444:	bl	149fc <abort@plt+0x3af0>
   14448:	cmp	r0, #0
   1444c:	popne	{r4, pc}
   14450:	bl	14974 <abort@plt+0x3a68>
   14454:	push	{r4, lr}
   14458:	bl	149fc <abort@plt+0x3af0>
   1445c:	cmp	r0, #0
   14460:	popne	{r4, pc}
   14464:	bl	14974 <abort@plt+0x3a68>
   14468:	push	{r4, r5, r6, lr}
   1446c:	mov	r5, r0
   14470:	mov	r4, r1
   14474:	bl	14a28 <abort@plt+0x3b1c>
   14478:	cmp	r0, #0
   1447c:	popne	{r4, r5, r6, pc}
   14480:	adds	r4, r4, #0
   14484:	movne	r4, #1
   14488:	cmp	r5, #0
   1448c:	orreq	r4, r4, #1
   14490:	cmp	r4, #0
   14494:	popeq	{r4, r5, r6, pc}
   14498:	bl	14974 <abort@plt+0x3a68>
   1449c:	push	{r4, lr}
   144a0:	cmp	r1, #0
   144a4:	orreq	r1, r1, #1
   144a8:	bl	14a28 <abort@plt+0x3b1c>
   144ac:	cmp	r0, #0
   144b0:	popne	{r4, pc}
   144b4:	bl	14974 <abort@plt+0x3a68>
   144b8:	push	{r4, r5, r6, lr}
   144bc:	mov	r6, r0
   144c0:	mov	r5, r1
   144c4:	mov	r4, r2
   144c8:	bl	14d28 <abort@plt+0x3e1c>
   144cc:	cmp	r0, #0
   144d0:	popne	{r4, r5, r6, pc}
   144d4:	cmp	r6, #0
   144d8:	beq	144e8 <abort@plt+0x35dc>
   144dc:	cmp	r5, #0
   144e0:	cmpne	r4, #0
   144e4:	popeq	{r4, r5, r6, pc}
   144e8:	bl	14974 <abort@plt+0x3a68>
   144ec:	b	144b8 <abort@plt+0x35ac>
   144f0:	cmp	r2, #0
   144f4:	cmpne	r1, #0
   144f8:	moveq	r2, #1
   144fc:	moveq	r1, r2
   14500:	push	{r4, lr}
   14504:	bl	14d28 <abort@plt+0x3e1c>
   14508:	cmp	r0, #0
   1450c:	popne	{r4, pc}
   14510:	bl	14974 <abort@plt+0x3a68>
   14514:	mov	r2, r1
   14518:	mov	r1, r0
   1451c:	mov	r0, #0
   14520:	b	144b8 <abort@plt+0x35ac>
   14524:	mov	r2, r1
   14528:	mov	r1, r0
   1452c:	mov	r0, #0
   14530:	b	144f0 <abort@plt+0x35e4>
   14534:	push	{r4, r5, r6, lr}
   14538:	subs	r6, r0, #0
   1453c:	sub	sp, sp, #8
   14540:	mov	r5, r1
   14544:	ldr	r4, [r1]
   14548:	beq	14584 <abort@plt+0x3678>
   1454c:	lsr	r1, r4, #1
   14550:	add	r3, r1, #1
   14554:	mvn	r3, r3
   14558:	cmp	r4, r3
   1455c:	bhi	14580 <abort@plt+0x3674>
   14560:	add	r4, r4, #1
   14564:	add	r4, r4, r1
   14568:	mov	r0, r6
   1456c:	mov	r1, r4
   14570:	bl	144b8 <abort@plt+0x35ac>
   14574:	str	r4, [r5]
   14578:	add	sp, sp, #8
   1457c:	pop	{r4, r5, r6, pc}
   14580:	bl	14974 <abort@plt+0x3a68>
   14584:	cmp	r4, #0
   14588:	bne	14568 <abort@plt+0x365c>
   1458c:	mov	r1, r2
   14590:	mov	r0, #64	; 0x40
   14594:	str	r2, [sp, #4]
   14598:	bl	14e68 <abort@plt+0x3f5c>
   1459c:	ldr	r2, [sp, #4]
   145a0:	cmp	r0, #0
   145a4:	movne	r4, r0
   145a8:	addeq	r4, r0, #1
   145ac:	b	14568 <abort@plt+0x365c>
   145b0:	mov	r2, #1
   145b4:	b	14534 <abort@plt+0x3628>
   145b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145bc:	sub	sp, sp, #12
   145c0:	ldr	r6, [r1]
   145c4:	mov	sl, r1
   145c8:	mov	r9, r0
   145cc:	asrs	r4, r6, #1
   145d0:	mov	r5, r2
   145d4:	mov	fp, r3
   145d8:	ldr	r7, [sp, #48]	; 0x30
   145dc:	bmi	14748 <abort@plt+0x383c>
   145e0:	mvn	r3, #-2147483648	; 0x80000000
   145e4:	sub	r3, r3, r4
   145e8:	cmp	r6, r3
   145ec:	movle	r3, #0
   145f0:	movgt	r3, #1
   145f4:	mvn	r8, fp
   145f8:	cmp	r3, #0
   145fc:	addeq	r4, r4, r6
   14600:	mvnne	r4, #-2147483648	; 0x80000000
   14604:	lsr	r8, r8, #31
   14608:	cmp	fp, r4
   1460c:	movge	r3, #0
   14610:	andlt	r3, r8, #1
   14614:	cmp	r3, #0
   14618:	beq	14700 <abort@plt+0x37f4>
   1461c:	cmp	r7, #0
   14620:	blt	147d0 <abort@plt+0x38c4>
   14624:	bne	147c8 <abort@plt+0x38bc>
   14628:	mov	r2, #64	; 0x40
   1462c:	mov	r1, r7
   14630:	mov	r0, r2
   14634:	str	r2, [sp, #4]
   14638:	bl	15074 <abort@plt+0x4168>
   1463c:	ldr	r2, [sp, #4]
   14640:	mov	r1, r7
   14644:	mov	r4, r0
   14648:	mov	r0, r2
   1464c:	bl	15294 <abort@plt+0x4388>
   14650:	ldr	r2, [sp, #4]
   14654:	sub	r1, r2, r1
   14658:	cmp	r9, #0
   1465c:	sub	r3, r4, r6
   14660:	streq	r9, [sl]
   14664:	cmp	r3, r5
   14668:	bge	146ec <abort@plt+0x37e0>
   1466c:	cmp	r5, #0
   14670:	blt	1475c <abort@plt+0x3850>
   14674:	cmp	r6, #0
   14678:	blt	14698 <abort@plt+0x378c>
   1467c:	mvn	r3, #-2147483648	; 0x80000000
   14680:	sub	r3, r3, r5
   14684:	cmp	r6, r3
   14688:	movle	r3, #0
   1468c:	movgt	r3, #1
   14690:	cmp	r3, #0
   14694:	bne	14858 <abort@plt+0x394c>
   14698:	add	r5, r6, r5
   1469c:	cmp	fp, r5
   146a0:	movge	r8, #0
   146a4:	andlt	r8, r8, #1
   146a8:	cmp	r8, #0
   146ac:	mov	r4, r5
   146b0:	bne	14858 <abort@plt+0x394c>
   146b4:	cmp	r7, #0
   146b8:	blt	14770 <abort@plt+0x3864>
   146bc:	beq	146e8 <abort@plt+0x37dc>
   146c0:	cmp	r5, #0
   146c4:	blt	14818 <abort@plt+0x390c>
   146c8:	mov	r1, r7
   146cc:	mvn	r0, #-2147483648	; 0x80000000
   146d0:	bl	15074 <abort@plt+0x4168>
   146d4:	cmp	r5, r0
   146d8:	movle	r0, #0
   146dc:	movgt	r0, #1
   146e0:	cmp	r0, #0
   146e4:	bne	14858 <abort@plt+0x394c>
   146e8:	mul	r1, r5, r7
   146ec:	mov	r0, r9
   146f0:	bl	14468 <abort@plt+0x355c>
   146f4:	str	r4, [sl]
   146f8:	add	sp, sp, #12
   146fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14700:	cmp	r7, #0
   14704:	blt	1479c <abort@plt+0x3890>
   14708:	beq	14628 <abort@plt+0x371c>
   1470c:	cmp	r4, #0
   14710:	blt	147d8 <abort@plt+0x38cc>
   14714:	mov	r1, r7
   14718:	mvn	r0, #-2147483648	; 0x80000000
   1471c:	bl	15074 <abort@plt+0x4168>
   14720:	cmp	r0, r4
   14724:	movge	r0, #0
   14728:	movlt	r0, #1
   1472c:	cmp	r0, #0
   14730:	mvnne	r2, #-2147483648	; 0x80000000
   14734:	bne	1462c <abort@plt+0x3720>
   14738:	mul	r1, r7, r4
   1473c:	cmp	r1, #63	; 0x3f
   14740:	bgt	14658 <abort@plt+0x374c>
   14744:	b	14628 <abort@plt+0x371c>
   14748:	rsb	r3, r4, #-2147483648	; 0x80000000
   1474c:	cmp	r6, r3
   14750:	movge	r3, #0
   14754:	movlt	r3, #1
   14758:	b	145f4 <abort@plt+0x36e8>
   1475c:	rsb	r3, r5, #-2147483648	; 0x80000000
   14760:	cmp	r6, r3
   14764:	movge	r3, #0
   14768:	movlt	r3, #1
   1476c:	b	14690 <abort@plt+0x3784>
   14770:	cmp	r5, #0
   14774:	blt	147fc <abort@plt+0x38f0>
   14778:	cmn	r7, #1
   1477c:	beq	146e8 <abort@plt+0x37dc>
   14780:	mov	r1, r7
   14784:	mov	r0, #-2147483648	; 0x80000000
   14788:	bl	15074 <abort@plt+0x4168>
   1478c:	cmp	r5, r0
   14790:	movle	r0, #0
   14794:	movgt	r0, #1
   14798:	b	146e0 <abort@plt+0x37d4>
   1479c:	cmp	r4, #0
   147a0:	blt	1483c <abort@plt+0x3930>
   147a4:	cmn	r7, #1
   147a8:	beq	14738 <abort@plt+0x382c>
   147ac:	mov	r1, r7
   147b0:	mov	r0, #-2147483648	; 0x80000000
   147b4:	bl	15074 <abort@plt+0x4168>
   147b8:	cmp	r0, r4
   147bc:	movge	r0, #0
   147c0:	movlt	r0, #1
   147c4:	b	1472c <abort@plt+0x3820>
   147c8:	mov	r4, fp
   147cc:	b	14714 <abort@plt+0x3808>
   147d0:	mov	r4, fp
   147d4:	b	147a4 <abort@plt+0x3898>
   147d8:	cmn	r4, #1
   147dc:	beq	14738 <abort@plt+0x382c>
   147e0:	mov	r1, r4
   147e4:	mov	r0, #-2147483648	; 0x80000000
   147e8:	bl	15074 <abort@plt+0x4168>
   147ec:	cmp	r7, r0
   147f0:	movle	r0, #0
   147f4:	movgt	r0, #1
   147f8:	b	1472c <abort@plt+0x3820>
   147fc:	mov	r1, r7
   14800:	mvn	r0, #-2147483648	; 0x80000000
   14804:	bl	15074 <abort@plt+0x4168>
   14808:	cmp	r5, r0
   1480c:	movge	r0, #0
   14810:	movlt	r0, #1
   14814:	b	146e0 <abort@plt+0x37d4>
   14818:	cmn	r5, #1
   1481c:	beq	146e8 <abort@plt+0x37dc>
   14820:	mov	r1, r5
   14824:	mov	r0, #-2147483648	; 0x80000000
   14828:	bl	15074 <abort@plt+0x4168>
   1482c:	cmp	r7, r0
   14830:	movle	r0, #0
   14834:	movgt	r0, #1
   14838:	b	146e0 <abort@plt+0x37d4>
   1483c:	mov	r1, r7
   14840:	mvn	r0, #-2147483648	; 0x80000000
   14844:	bl	15074 <abort@plt+0x4168>
   14848:	cmp	r0, r4
   1484c:	movle	r0, #0
   14850:	movgt	r0, #1
   14854:	b	1472c <abort@plt+0x3820>
   14858:	bl	14974 <abort@plt+0x3a68>
   1485c:	push	{r4, lr}
   14860:	mov	r1, #1
   14864:	bl	149b4 <abort@plt+0x3aa8>
   14868:	cmp	r0, #0
   1486c:	popne	{r4, pc}
   14870:	bl	14974 <abort@plt+0x3a68>
   14874:	push	{r4, lr}
   14878:	mov	r1, #1
   1487c:	bl	149b4 <abort@plt+0x3aa8>
   14880:	cmp	r0, #0
   14884:	popne	{r4, pc}
   14888:	bl	14974 <abort@plt+0x3a68>
   1488c:	push	{r4, lr}
   14890:	bl	149b4 <abort@plt+0x3aa8>
   14894:	cmp	r0, #0
   14898:	popne	{r4, pc}
   1489c:	bl	14974 <abort@plt+0x3a68>
   148a0:	push	{r4, lr}
   148a4:	bl	149b4 <abort@plt+0x3aa8>
   148a8:	cmp	r0, #0
   148ac:	popne	{r4, pc}
   148b0:	bl	14974 <abort@plt+0x3a68>
   148b4:	push	{r4, r5, r6, lr}
   148b8:	mov	r6, r0
   148bc:	mov	r0, r1
   148c0:	mov	r4, r1
   148c4:	bl	149fc <abort@plt+0x3af0>
   148c8:	subs	r5, r0, #0
   148cc:	beq	148e4 <abort@plt+0x39d8>
   148d0:	mov	r2, r4
   148d4:	mov	r1, r6
   148d8:	bl	10cfc <memcpy@plt>
   148dc:	mov	r0, r5
   148e0:	pop	{r4, r5, r6, pc}
   148e4:	bl	14974 <abort@plt+0x3a68>
   148e8:	push	{r4, r5, r6, lr}
   148ec:	mov	r6, r0
   148f0:	mov	r0, r1
   148f4:	mov	r4, r1
   148f8:	bl	149fc <abort@plt+0x3af0>
   148fc:	subs	r5, r0, #0
   14900:	beq	14918 <abort@plt+0x3a0c>
   14904:	mov	r2, r4
   14908:	mov	r1, r6
   1490c:	bl	10cfc <memcpy@plt>
   14910:	mov	r0, r5
   14914:	pop	{r4, r5, r6, pc}
   14918:	bl	14974 <abort@plt+0x3a68>
   1491c:	push	{r4, r5, r6, lr}
   14920:	mov	r6, r0
   14924:	add	r0, r1, #1
   14928:	mov	r4, r1
   1492c:	bl	149fc <abort@plt+0x3af0>
   14930:	subs	r5, r0, #0
   14934:	beq	14954 <abort@plt+0x3a48>
   14938:	mov	r3, #0
   1493c:	mov	r1, r6
   14940:	strb	r3, [r5, r4]
   14944:	mov	r2, r4
   14948:	bl	10cfc <memcpy@plt>
   1494c:	mov	r0, r5
   14950:	pop	{r4, r5, r6, pc}
   14954:	bl	14974 <abort@plt+0x3a68>
   14958:	push	{r4, lr}
   1495c:	mov	r4, r0
   14960:	bl	10e28 <strlen@plt>
   14964:	add	r1, r0, #1
   14968:	mov	r0, r4
   1496c:	pop	{r4, lr}
   14970:	b	148b4 <abort@plt+0x39a8>
   14974:	ldr	r3, [pc, #44]	; 149a8 <abort@plt+0x3a9c>
   14978:	push	{r4, lr}
   1497c:	mov	r2, #5
   14980:	ldr	r1, [pc, #36]	; 149ac <abort@plt+0x3aa0>
   14984:	mov	r0, #0
   14988:	ldr	r4, [r3]
   1498c:	bl	10d2c <dcgettext@plt>
   14990:	ldr	r2, [pc, #24]	; 149b0 <abort@plt+0x3aa4>
   14994:	mov	r1, #0
   14998:	mov	r3, r0
   1499c:	mov	r0, r4
   149a0:	bl	10db0 <error@plt>
   149a4:	bl	10f0c <abort@plt>
   149a8:	strdeq	r7, [r2], -r0
   149ac:	andeq	r5, r1, r8, lsr pc
   149b0:	andeq	r5, r1, r8, ror #21
   149b4:	cmp	r1, #0
   149b8:	cmpne	r0, #0
   149bc:	moveq	r1, #1
   149c0:	moveq	r0, r1
   149c4:	umull	r2, r3, r0, r1
   149c8:	adds	r3, r3, #0
   149cc:	movne	r3, #1
   149d0:	cmp	r2, #0
   149d4:	blt	149e4 <abort@plt+0x3ad8>
   149d8:	cmp	r3, #0
   149dc:	bne	149e4 <abort@plt+0x3ad8>
   149e0:	b	10c9c <calloc@plt>
   149e4:	push	{r4, lr}
   149e8:	bl	10e4c <__errno_location@plt>
   149ec:	mov	r3, #12
   149f0:	str	r3, [r0]
   149f4:	mov	r0, #0
   149f8:	pop	{r4, pc}
   149fc:	cmp	r0, #0
   14a00:	moveq	r0, #1
   14a04:	cmp	r0, #0
   14a08:	blt	14a10 <abort@plt+0x3b04>
   14a0c:	b	10dc8 <malloc@plt>
   14a10:	push	{r4, lr}
   14a14:	bl	10e4c <__errno_location@plt>
   14a18:	mov	r3, #12
   14a1c:	str	r3, [r0]
   14a20:	mov	r0, #0
   14a24:	pop	{r4, pc}
   14a28:	cmp	r0, #0
   14a2c:	beq	14a50 <abort@plt+0x3b44>
   14a30:	cmp	r1, #0
   14a34:	push	{lr}		; (str lr, [sp, #-4]!)
   14a38:	sub	sp, sp, #12
   14a3c:	beq	14a58 <abort@plt+0x3b4c>
   14a40:	blt	14a70 <abort@plt+0x3b64>
   14a44:	add	sp, sp, #12
   14a48:	pop	{lr}		; (ldr lr, [sp], #4)
   14a4c:	b	10d38 <realloc@plt>
   14a50:	mov	r0, r1
   14a54:	b	149fc <abort@plt+0x3af0>
   14a58:	str	r1, [sp, #4]
   14a5c:	bl	11d70 <abort@plt+0xe64>
   14a60:	ldr	r3, [sp, #4]
   14a64:	mov	r0, r3
   14a68:	add	sp, sp, #12
   14a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a70:	bl	10e4c <__errno_location@plt>
   14a74:	mov	r2, #12
   14a78:	mov	r3, #0
   14a7c:	str	r2, [r0]
   14a80:	b	14a64 <abort@plt+0x3b58>
   14a84:	push	{r4, r5, r6, lr}
   14a88:	mov	r4, r0
   14a8c:	bl	10d98 <__fpending@plt>
   14a90:	ldr	r5, [r4]
   14a94:	and	r5, r5, #32
   14a98:	mov	r6, r0
   14a9c:	mov	r0, r4
   14aa0:	bl	14b00 <abort@plt+0x3bf4>
   14aa4:	cmp	r5, #0
   14aa8:	mov	r4, r0
   14aac:	bne	14acc <abort@plt+0x3bc0>
   14ab0:	cmp	r0, #0
   14ab4:	beq	14ac4 <abort@plt+0x3bb8>
   14ab8:	cmp	r6, #0
   14abc:	beq	14ae8 <abort@plt+0x3bdc>
   14ac0:	mvn	r4, #0
   14ac4:	mov	r0, r4
   14ac8:	pop	{r4, r5, r6, pc}
   14acc:	cmp	r0, #0
   14ad0:	bne	14ac0 <abort@plt+0x3bb4>
   14ad4:	bl	10e4c <__errno_location@plt>
   14ad8:	str	r4, [r0]
   14adc:	mvn	r4, #0
   14ae0:	mov	r0, r4
   14ae4:	pop	{r4, r5, r6, pc}
   14ae8:	bl	10e4c <__errno_location@plt>
   14aec:	ldr	r4, [r0]
   14af0:	subs	r4, r4, #9
   14af4:	mvnne	r4, #0
   14af8:	mov	r0, r4
   14afc:	pop	{r4, r5, r6, pc}
   14b00:	push	{r4, r5, lr}
   14b04:	sub	sp, sp, #12
   14b08:	mov	r4, r0
   14b0c:	bl	10e88 <fileno@plt>
   14b10:	cmp	r0, #0
   14b14:	mov	r0, r4
   14b18:	blt	14b94 <abort@plt+0x3c88>
   14b1c:	bl	10de0 <__freading@plt>
   14b20:	cmp	r0, #0
   14b24:	bne	14b60 <abort@plt+0x3c54>
   14b28:	mov	r0, r4
   14b2c:	bl	14ba0 <abort@plt+0x3c94>
   14b30:	cmp	r0, #0
   14b34:	beq	14b90 <abort@plt+0x3c84>
   14b38:	bl	10e4c <__errno_location@plt>
   14b3c:	mov	r5, r0
   14b40:	mov	r0, r4
   14b44:	ldr	r4, [r5]
   14b48:	bl	10ea0 <fclose@plt>
   14b4c:	cmp	r4, #0
   14b50:	mvnne	r0, #0
   14b54:	strne	r4, [r5]
   14b58:	add	sp, sp, #12
   14b5c:	pop	{r4, r5, pc}
   14b60:	mov	r0, r4
   14b64:	bl	10e88 <fileno@plt>
   14b68:	mov	r3, #1
   14b6c:	str	r3, [sp]
   14b70:	mov	r2, #0
   14b74:	mov	r3, #0
   14b78:	bl	10d74 <lseek64@plt>
   14b7c:	mvn	r3, #0
   14b80:	mvn	r2, #0
   14b84:	cmp	r1, r3
   14b88:	cmpeq	r0, r2
   14b8c:	bne	14b28 <abort@plt+0x3c1c>
   14b90:	mov	r0, r4
   14b94:	add	sp, sp, #12
   14b98:	pop	{r4, r5, lr}
   14b9c:	b	10ea0 <fclose@plt>
   14ba0:	push	{r4, lr}
   14ba4:	subs	r4, r0, #0
   14ba8:	sub	sp, sp, #8
   14bac:	beq	14bc8 <abort@plt+0x3cbc>
   14bb0:	bl	10de0 <__freading@plt>
   14bb4:	cmp	r0, #0
   14bb8:	beq	14bc8 <abort@plt+0x3cbc>
   14bbc:	ldr	r3, [r4]
   14bc0:	tst	r3, #256	; 0x100
   14bc4:	bne	14bd8 <abort@plt+0x3ccc>
   14bc8:	mov	r0, r4
   14bcc:	add	sp, sp, #8
   14bd0:	pop	{r4, lr}
   14bd4:	b	10cd8 <fflush@plt>
   14bd8:	mov	r3, #1
   14bdc:	str	r3, [sp]
   14be0:	mov	r2, #0
   14be4:	mov	r3, #0
   14be8:	mov	r0, r4
   14bec:	bl	14c00 <abort@plt+0x3cf4>
   14bf0:	mov	r0, r4
   14bf4:	add	sp, sp, #8
   14bf8:	pop	{r4, lr}
   14bfc:	b	10cd8 <fflush@plt>
   14c00:	push	{r4, r5, r6, r7, r8, lr}
   14c04:	sub	sp, sp, #8
   14c08:	ldmib	r0, {ip, lr}
   14c0c:	mov	r4, r0
   14c10:	ldr	r5, [sp, #32]
   14c14:	cmp	lr, ip
   14c18:	beq	14c30 <abort@plt+0x3d24>
   14c1c:	str	r5, [sp, #32]
   14c20:	mov	r0, r4
   14c24:	add	sp, sp, #8
   14c28:	pop	{r4, r5, r6, r7, r8, lr}
   14c2c:	b	10eac <fseeko64@plt>
   14c30:	ldr	lr, [r0, #20]
   14c34:	ldr	ip, [r0, #16]
   14c38:	cmp	lr, ip
   14c3c:	bne	14c1c <abort@plt+0x3d10>
   14c40:	ldr	r8, [r0, #36]	; 0x24
   14c44:	cmp	r8, #0
   14c48:	bne	14c1c <abort@plt+0x3d10>
   14c4c:	mov	r6, r2
   14c50:	mov	r7, r3
   14c54:	bl	10e88 <fileno@plt>
   14c58:	mov	r2, r6
   14c5c:	mov	r3, r7
   14c60:	str	r5, [sp]
   14c64:	bl	10d74 <lseek64@plt>
   14c68:	mvn	r3, #0
   14c6c:	mvn	r2, #0
   14c70:	cmp	r1, r3
   14c74:	cmpeq	r0, r2
   14c78:	beq	14c98 <abort@plt+0x3d8c>
   14c7c:	ldr	r3, [r4]
   14c80:	strd	r0, [r4, #80]	; 0x50
   14c84:	mov	r0, r8
   14c88:	bic	r3, r3, #16
   14c8c:	str	r3, [r4]
   14c90:	add	sp, sp, #8
   14c94:	pop	{r4, r5, r6, r7, r8, pc}
   14c98:	mvn	r0, #0
   14c9c:	b	14c90 <abort@plt+0x3d84>
   14ca0:	push	{r4, lr}
   14ca4:	mov	r0, #14
   14ca8:	bl	10ed0 <nl_langinfo@plt>
   14cac:	cmp	r0, #0
   14cb0:	beq	14cc8 <abort@plt+0x3dbc>
   14cb4:	ldrb	r2, [r0]
   14cb8:	ldr	r3, [pc, #16]	; 14cd0 <abort@plt+0x3dc4>
   14cbc:	cmp	r2, #0
   14cc0:	moveq	r0, r3
   14cc4:	pop	{r4, pc}
   14cc8:	ldr	r0, [pc]	; 14cd0 <abort@plt+0x3dc4>
   14ccc:	pop	{r4, pc}
   14cd0:	andeq	r5, r1, ip, asr #30
   14cd4:	push	{r4, r5, r6, r7, lr}
   14cd8:	subs	r6, r0, #0
   14cdc:	sub	sp, sp, #12
   14ce0:	addeq	r6, sp, #4
   14ce4:	mov	r0, r6
   14ce8:	mov	r5, r2
   14cec:	mov	r7, r1
   14cf0:	bl	10da4 <mbrtowc@plt>
   14cf4:	cmp	r5, #0
   14cf8:	cmnne	r0, #3
   14cfc:	mov	r4, r0
   14d00:	bls	14d1c <abort@plt+0x3e10>
   14d04:	mov	r0, #0
   14d08:	bl	14d74 <abort@plt+0x3e68>
   14d0c:	cmp	r0, #0
   14d10:	moveq	r4, #1
   14d14:	ldrbeq	r3, [r7]
   14d18:	streq	r3, [r6]
   14d1c:	mov	r0, r4
   14d20:	add	sp, sp, #12
   14d24:	pop	{r4, r5, r6, r7, pc}
   14d28:	push	{r4, r5, r6, lr}
   14d2c:	subs	r4, r2, #0
   14d30:	mov	r6, r0
   14d34:	mov	r5, r1
   14d38:	beq	14d64 <abort@plt+0x3e58>
   14d3c:	mov	r1, r4
   14d40:	mvn	r0, #0
   14d44:	bl	14e68 <abort@plt+0x3f5c>
   14d48:	cmp	r0, r5
   14d4c:	bcs	14d64 <abort@plt+0x3e58>
   14d50:	bl	10e4c <__errno_location@plt>
   14d54:	mov	r3, #12
   14d58:	str	r3, [r0]
   14d5c:	mov	r0, #0
   14d60:	pop	{r4, r5, r6, pc}
   14d64:	mul	r1, r5, r4
   14d68:	mov	r0, r6
   14d6c:	pop	{r4, r5, r6, lr}
   14d70:	b	14a28 <abort@plt+0x3b1c>
   14d74:	push	{lr}		; (str lr, [sp, #-4]!)
   14d78:	sub	sp, sp, #268	; 0x10c
   14d7c:	add	r1, sp, #4
   14d80:	ldr	r2, [pc, #60]	; 14dc4 <abort@plt+0x3eb8>
   14d84:	bl	14dd0 <abort@plt+0x3ec4>
   14d88:	cmp	r0, #0
   14d8c:	movne	r0, #0
   14d90:	bne	14dbc <abort@plt+0x3eb0>
   14d94:	ldr	r1, [pc, #44]	; 14dc8 <abort@plt+0x3ebc>
   14d98:	add	r0, sp, #4
   14d9c:	bl	10cc0 <strcmp@plt>
   14da0:	cmp	r0, #0
   14da4:	beq	14dbc <abort@plt+0x3eb0>
   14da8:	add	r0, sp, #4
   14dac:	ldr	r1, [pc, #24]	; 14dcc <abort@plt+0x3ec0>
   14db0:	bl	10cc0 <strcmp@plt>
   14db4:	adds	r0, r0, #0
   14db8:	movne	r0, #1
   14dbc:	add	sp, sp, #268	; 0x10c
   14dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc4:	andeq	r0, r0, r1, lsl #2
   14dc8:	andeq	r5, r1, r4, asr pc
   14dcc:	andeq	r5, r1, r8, asr pc
   14dd0:	push	{r4, r5, r6, lr}
   14dd4:	mov	r5, r1
   14dd8:	mov	r1, #0
   14ddc:	mov	r4, r2
   14de0:	bl	10eb8 <setlocale@plt>
   14de4:	subs	r6, r0, #0
   14de8:	beq	14e44 <abort@plt+0x3f38>
   14dec:	bl	10e28 <strlen@plt>
   14df0:	cmp	r4, r0
   14df4:	bhi	14e2c <abort@plt+0x3f20>
   14df8:	cmp	r4, #0
   14dfc:	bne	14e08 <abort@plt+0x3efc>
   14e00:	mov	r0, #34	; 0x22
   14e04:	pop	{r4, r5, r6, pc}
   14e08:	sub	r4, r4, #1
   14e0c:	mov	r1, r6
   14e10:	mov	r2, r4
   14e14:	mov	r0, r5
   14e18:	bl	10cfc <memcpy@plt>
   14e1c:	mov	r3, #0
   14e20:	strb	r3, [r5, r4]
   14e24:	mov	r0, #34	; 0x22
   14e28:	pop	{r4, r5, r6, pc}
   14e2c:	add	r2, r0, #1
   14e30:	mov	r1, r6
   14e34:	mov	r0, r5
   14e38:	bl	10cfc <memcpy@plt>
   14e3c:	mov	r0, #0
   14e40:	pop	{r4, r5, r6, pc}
   14e44:	cmp	r4, #0
   14e48:	beq	14e58 <abort@plt+0x3f4c>
   14e4c:	strb	r6, [r5]
   14e50:	mov	r0, #22
   14e54:	pop	{r4, r5, r6, pc}
   14e58:	mov	r0, #22
   14e5c:	pop	{r4, r5, r6, pc}
   14e60:	mov	r1, #0
   14e64:	b	10eb8 <setlocale@plt>
   14e68:	subs	r2, r1, #1
   14e6c:	bxeq	lr
   14e70:	bcc	15048 <abort@plt+0x413c>
   14e74:	cmp	r0, r1
   14e78:	bls	1502c <abort@plt+0x4120>
   14e7c:	tst	r1, r2
   14e80:	beq	15038 <abort@plt+0x412c>
   14e84:	clz	r3, r0
   14e88:	clz	r2, r1
   14e8c:	sub	r3, r2, r3
   14e90:	rsbs	r3, r3, #31
   14e94:	addne	r3, r3, r3, lsl #1
   14e98:	mov	r2, #0
   14e9c:	addne	pc, pc, r3, lsl #2
   14ea0:	nop			; (mov r0, r0)
   14ea4:	cmp	r0, r1, lsl #31
   14ea8:	adc	r2, r2, r2
   14eac:	subcs	r0, r0, r1, lsl #31
   14eb0:	cmp	r0, r1, lsl #30
   14eb4:	adc	r2, r2, r2
   14eb8:	subcs	r0, r0, r1, lsl #30
   14ebc:	cmp	r0, r1, lsl #29
   14ec0:	adc	r2, r2, r2
   14ec4:	subcs	r0, r0, r1, lsl #29
   14ec8:	cmp	r0, r1, lsl #28
   14ecc:	adc	r2, r2, r2
   14ed0:	subcs	r0, r0, r1, lsl #28
   14ed4:	cmp	r0, r1, lsl #27
   14ed8:	adc	r2, r2, r2
   14edc:	subcs	r0, r0, r1, lsl #27
   14ee0:	cmp	r0, r1, lsl #26
   14ee4:	adc	r2, r2, r2
   14ee8:	subcs	r0, r0, r1, lsl #26
   14eec:	cmp	r0, r1, lsl #25
   14ef0:	adc	r2, r2, r2
   14ef4:	subcs	r0, r0, r1, lsl #25
   14ef8:	cmp	r0, r1, lsl #24
   14efc:	adc	r2, r2, r2
   14f00:	subcs	r0, r0, r1, lsl #24
   14f04:	cmp	r0, r1, lsl #23
   14f08:	adc	r2, r2, r2
   14f0c:	subcs	r0, r0, r1, lsl #23
   14f10:	cmp	r0, r1, lsl #22
   14f14:	adc	r2, r2, r2
   14f18:	subcs	r0, r0, r1, lsl #22
   14f1c:	cmp	r0, r1, lsl #21
   14f20:	adc	r2, r2, r2
   14f24:	subcs	r0, r0, r1, lsl #21
   14f28:	cmp	r0, r1, lsl #20
   14f2c:	adc	r2, r2, r2
   14f30:	subcs	r0, r0, r1, lsl #20
   14f34:	cmp	r0, r1, lsl #19
   14f38:	adc	r2, r2, r2
   14f3c:	subcs	r0, r0, r1, lsl #19
   14f40:	cmp	r0, r1, lsl #18
   14f44:	adc	r2, r2, r2
   14f48:	subcs	r0, r0, r1, lsl #18
   14f4c:	cmp	r0, r1, lsl #17
   14f50:	adc	r2, r2, r2
   14f54:	subcs	r0, r0, r1, lsl #17
   14f58:	cmp	r0, r1, lsl #16
   14f5c:	adc	r2, r2, r2
   14f60:	subcs	r0, r0, r1, lsl #16
   14f64:	cmp	r0, r1, lsl #15
   14f68:	adc	r2, r2, r2
   14f6c:	subcs	r0, r0, r1, lsl #15
   14f70:	cmp	r0, r1, lsl #14
   14f74:	adc	r2, r2, r2
   14f78:	subcs	r0, r0, r1, lsl #14
   14f7c:	cmp	r0, r1, lsl #13
   14f80:	adc	r2, r2, r2
   14f84:	subcs	r0, r0, r1, lsl #13
   14f88:	cmp	r0, r1, lsl #12
   14f8c:	adc	r2, r2, r2
   14f90:	subcs	r0, r0, r1, lsl #12
   14f94:	cmp	r0, r1, lsl #11
   14f98:	adc	r2, r2, r2
   14f9c:	subcs	r0, r0, r1, lsl #11
   14fa0:	cmp	r0, r1, lsl #10
   14fa4:	adc	r2, r2, r2
   14fa8:	subcs	r0, r0, r1, lsl #10
   14fac:	cmp	r0, r1, lsl #9
   14fb0:	adc	r2, r2, r2
   14fb4:	subcs	r0, r0, r1, lsl #9
   14fb8:	cmp	r0, r1, lsl #8
   14fbc:	adc	r2, r2, r2
   14fc0:	subcs	r0, r0, r1, lsl #8
   14fc4:	cmp	r0, r1, lsl #7
   14fc8:	adc	r2, r2, r2
   14fcc:	subcs	r0, r0, r1, lsl #7
   14fd0:	cmp	r0, r1, lsl #6
   14fd4:	adc	r2, r2, r2
   14fd8:	subcs	r0, r0, r1, lsl #6
   14fdc:	cmp	r0, r1, lsl #5
   14fe0:	adc	r2, r2, r2
   14fe4:	subcs	r0, r0, r1, lsl #5
   14fe8:	cmp	r0, r1, lsl #4
   14fec:	adc	r2, r2, r2
   14ff0:	subcs	r0, r0, r1, lsl #4
   14ff4:	cmp	r0, r1, lsl #3
   14ff8:	adc	r2, r2, r2
   14ffc:	subcs	r0, r0, r1, lsl #3
   15000:	cmp	r0, r1, lsl #2
   15004:	adc	r2, r2, r2
   15008:	subcs	r0, r0, r1, lsl #2
   1500c:	cmp	r0, r1, lsl #1
   15010:	adc	r2, r2, r2
   15014:	subcs	r0, r0, r1, lsl #1
   15018:	cmp	r0, r1
   1501c:	adc	r2, r2, r2
   15020:	subcs	r0, r0, r1
   15024:	mov	r0, r2
   15028:	bx	lr
   1502c:	moveq	r0, #1
   15030:	movne	r0, #0
   15034:	bx	lr
   15038:	clz	r2, r1
   1503c:	rsb	r2, r2, #31
   15040:	lsr	r0, r0, r2
   15044:	bx	lr
   15048:	cmp	r0, #0
   1504c:	mvnne	r0, #0
   15050:	b	152b4 <abort@plt+0x43a8>
   15054:	cmp	r1, #0
   15058:	beq	15048 <abort@plt+0x413c>
   1505c:	push	{r0, r1, lr}
   15060:	bl	14e68 <abort@plt+0x3f5c>
   15064:	pop	{r1, r2, lr}
   15068:	mul	r3, r2, r0
   1506c:	sub	r1, r1, r3
   15070:	bx	lr
   15074:	cmp	r1, #0
   15078:	beq	15284 <abort@plt+0x4378>
   1507c:	eor	ip, r0, r1
   15080:	rsbmi	r1, r1, #0
   15084:	subs	r2, r1, #1
   15088:	beq	15250 <abort@plt+0x4344>
   1508c:	movs	r3, r0
   15090:	rsbmi	r3, r0, #0
   15094:	cmp	r3, r1
   15098:	bls	1525c <abort@plt+0x4350>
   1509c:	tst	r1, r2
   150a0:	beq	1526c <abort@plt+0x4360>
   150a4:	clz	r2, r3
   150a8:	clz	r0, r1
   150ac:	sub	r2, r0, r2
   150b0:	rsbs	r2, r2, #31
   150b4:	addne	r2, r2, r2, lsl #1
   150b8:	mov	r0, #0
   150bc:	addne	pc, pc, r2, lsl #2
   150c0:	nop			; (mov r0, r0)
   150c4:	cmp	r3, r1, lsl #31
   150c8:	adc	r0, r0, r0
   150cc:	subcs	r3, r3, r1, lsl #31
   150d0:	cmp	r3, r1, lsl #30
   150d4:	adc	r0, r0, r0
   150d8:	subcs	r3, r3, r1, lsl #30
   150dc:	cmp	r3, r1, lsl #29
   150e0:	adc	r0, r0, r0
   150e4:	subcs	r3, r3, r1, lsl #29
   150e8:	cmp	r3, r1, lsl #28
   150ec:	adc	r0, r0, r0
   150f0:	subcs	r3, r3, r1, lsl #28
   150f4:	cmp	r3, r1, lsl #27
   150f8:	adc	r0, r0, r0
   150fc:	subcs	r3, r3, r1, lsl #27
   15100:	cmp	r3, r1, lsl #26
   15104:	adc	r0, r0, r0
   15108:	subcs	r3, r3, r1, lsl #26
   1510c:	cmp	r3, r1, lsl #25
   15110:	adc	r0, r0, r0
   15114:	subcs	r3, r3, r1, lsl #25
   15118:	cmp	r3, r1, lsl #24
   1511c:	adc	r0, r0, r0
   15120:	subcs	r3, r3, r1, lsl #24
   15124:	cmp	r3, r1, lsl #23
   15128:	adc	r0, r0, r0
   1512c:	subcs	r3, r3, r1, lsl #23
   15130:	cmp	r3, r1, lsl #22
   15134:	adc	r0, r0, r0
   15138:	subcs	r3, r3, r1, lsl #22
   1513c:	cmp	r3, r1, lsl #21
   15140:	adc	r0, r0, r0
   15144:	subcs	r3, r3, r1, lsl #21
   15148:	cmp	r3, r1, lsl #20
   1514c:	adc	r0, r0, r0
   15150:	subcs	r3, r3, r1, lsl #20
   15154:	cmp	r3, r1, lsl #19
   15158:	adc	r0, r0, r0
   1515c:	subcs	r3, r3, r1, lsl #19
   15160:	cmp	r3, r1, lsl #18
   15164:	adc	r0, r0, r0
   15168:	subcs	r3, r3, r1, lsl #18
   1516c:	cmp	r3, r1, lsl #17
   15170:	adc	r0, r0, r0
   15174:	subcs	r3, r3, r1, lsl #17
   15178:	cmp	r3, r1, lsl #16
   1517c:	adc	r0, r0, r0
   15180:	subcs	r3, r3, r1, lsl #16
   15184:	cmp	r3, r1, lsl #15
   15188:	adc	r0, r0, r0
   1518c:	subcs	r3, r3, r1, lsl #15
   15190:	cmp	r3, r1, lsl #14
   15194:	adc	r0, r0, r0
   15198:	subcs	r3, r3, r1, lsl #14
   1519c:	cmp	r3, r1, lsl #13
   151a0:	adc	r0, r0, r0
   151a4:	subcs	r3, r3, r1, lsl #13
   151a8:	cmp	r3, r1, lsl #12
   151ac:	adc	r0, r0, r0
   151b0:	subcs	r3, r3, r1, lsl #12
   151b4:	cmp	r3, r1, lsl #11
   151b8:	adc	r0, r0, r0
   151bc:	subcs	r3, r3, r1, lsl #11
   151c0:	cmp	r3, r1, lsl #10
   151c4:	adc	r0, r0, r0
   151c8:	subcs	r3, r3, r1, lsl #10
   151cc:	cmp	r3, r1, lsl #9
   151d0:	adc	r0, r0, r0
   151d4:	subcs	r3, r3, r1, lsl #9
   151d8:	cmp	r3, r1, lsl #8
   151dc:	adc	r0, r0, r0
   151e0:	subcs	r3, r3, r1, lsl #8
   151e4:	cmp	r3, r1, lsl #7
   151e8:	adc	r0, r0, r0
   151ec:	subcs	r3, r3, r1, lsl #7
   151f0:	cmp	r3, r1, lsl #6
   151f4:	adc	r0, r0, r0
   151f8:	subcs	r3, r3, r1, lsl #6
   151fc:	cmp	r3, r1, lsl #5
   15200:	adc	r0, r0, r0
   15204:	subcs	r3, r3, r1, lsl #5
   15208:	cmp	r3, r1, lsl #4
   1520c:	adc	r0, r0, r0
   15210:	subcs	r3, r3, r1, lsl #4
   15214:	cmp	r3, r1, lsl #3
   15218:	adc	r0, r0, r0
   1521c:	subcs	r3, r3, r1, lsl #3
   15220:	cmp	r3, r1, lsl #2
   15224:	adc	r0, r0, r0
   15228:	subcs	r3, r3, r1, lsl #2
   1522c:	cmp	r3, r1, lsl #1
   15230:	adc	r0, r0, r0
   15234:	subcs	r3, r3, r1, lsl #1
   15238:	cmp	r3, r1
   1523c:	adc	r0, r0, r0
   15240:	subcs	r3, r3, r1
   15244:	cmp	ip, #0
   15248:	rsbmi	r0, r0, #0
   1524c:	bx	lr
   15250:	teq	ip, r0
   15254:	rsbmi	r0, r0, #0
   15258:	bx	lr
   1525c:	movcc	r0, #0
   15260:	asreq	r0, ip, #31
   15264:	orreq	r0, r0, #1
   15268:	bx	lr
   1526c:	clz	r2, r1
   15270:	rsb	r2, r2, #31
   15274:	cmp	ip, #0
   15278:	lsr	r0, r3, r2
   1527c:	rsbmi	r0, r0, #0
   15280:	bx	lr
   15284:	cmp	r0, #0
   15288:	mvngt	r0, #-2147483648	; 0x80000000
   1528c:	movlt	r0, #-2147483648	; 0x80000000
   15290:	b	152b4 <abort@plt+0x43a8>
   15294:	cmp	r1, #0
   15298:	beq	15284 <abort@plt+0x4378>
   1529c:	push	{r0, r1, lr}
   152a0:	bl	1507c <abort@plt+0x4170>
   152a4:	pop	{r1, r2, lr}
   152a8:	mul	r3, r2, r0
   152ac:	sub	r1, r1, r3
   152b0:	bx	lr
   152b4:	push	{r1, lr}
   152b8:	mov	r0, #8
   152bc:	bl	10cb4 <raise@plt>
   152c0:	pop	{r1, pc}
   152c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152c8:	mov	r7, r0
   152cc:	ldr	r6, [pc, #72]	; 1531c <abort@plt+0x4410>
   152d0:	ldr	r5, [pc, #72]	; 15320 <abort@plt+0x4414>
   152d4:	add	r6, pc, r6
   152d8:	add	r5, pc, r5
   152dc:	sub	r6, r6, r5
   152e0:	mov	r8, r1
   152e4:	mov	r9, r2
   152e8:	bl	10c7c <calloc@plt-0x20>
   152ec:	asrs	r6, r6, #2
   152f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   152f4:	mov	r4, #0
   152f8:	add	r4, r4, #1
   152fc:	ldr	r3, [r5], #4
   15300:	mov	r2, r9
   15304:	mov	r1, r8
   15308:	mov	r0, r7
   1530c:	blx	r3
   15310:	cmp	r6, r4
   15314:	bne	152f8 <abort@plt+0x43ec>
   15318:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1531c:	andeq	r1, r1, r4, lsr ip
   15320:	andeq	r1, r1, ip, lsr #24
   15324:	bx	lr
   15328:	ldr	r3, [pc, #12]	; 1533c <abort@plt+0x4430>
   1532c:	mov	r1, #0
   15330:	add	r3, pc, r3
   15334:	ldr	r2, [r3]
   15338:	b	10e64 <__cxa_atexit@plt>
   1533c:			; <UNDEFINED> instruction: 0x00011db0

Disassembly of section .fini:

00015340 <.fini>:
   15340:	push	{r3, lr}
   15344:	pop	{r3, pc}
