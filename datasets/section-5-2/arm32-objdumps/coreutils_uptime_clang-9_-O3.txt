
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00011168 <.init>:
   11168:	push	{r3, lr}
   1116c:	bl	114f4 <dcngettext@plt+0x48>
   11170:	pop	{r3, pc}

Disassembly of section .plt:

00011174 <calloc@plt-0x14>:
   11174:	push	{lr}		; (str lr, [sp, #-4]!)
   11178:	ldr	lr, [pc, #4]	; 11184 <calloc@plt-0x4>
   1117c:	add	lr, pc, lr
   11180:	ldr	pc, [lr, #8]!
   11184:	andeq	r7, r1, ip, ror lr

00011188 <calloc@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3708]!	; 0xe7c

00011194 <fputs_unlocked@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3700]!	; 0xe74

000111a0 <gmtime_r@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111ac <strcmp@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3684]!	; 0xe64

000111b8 <mktime@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3676]!	; 0xe5c

000111c4 <fflush@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3668]!	; 0xe54

000111d0 <utmpxname@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3660]!	; 0xe4c

000111dc <free@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3652]!	; 0xe44

000111e8 <_exit@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3644]!	; 0xe3c

000111f4 <memcpy@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3636]!	; 0xe34

00011200 <mbsinit@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3628]!	; 0xe2c

0001120c <time@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3620]!	; 0xe24

00011218 <dcgettext@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3612]!	; 0xe1c

00011224 <setutxent@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3604]!	; 0xe14

00011230 <realloc@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3596]!	; 0xe0c

0001123c <localtime_r@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3588]!	; 0xe04

00011248 <textdomain@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3580]!	; 0xdfc

00011254 <iswprint@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3572]!	; 0xdf4

00011260 <tzset@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3564]!	; 0xdec

0001126c <fwrite@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3556]!	; 0xde4

00011278 <lseek64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3548]!	; 0xddc

00011284 <__ctype_get_mb_cur_max@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3540]!	; 0xdd4

00011290 <__fpending@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3532]!	; 0xdcc

0001129c <mbrtowc@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112a8 <error@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3516]!	; 0xdbc

000112b4 <getenv@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3508]!	; 0xdb4

000112c0 <malloc@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3500]!	; 0xdac

000112cc <__libc_start_main@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3492]!	; 0xda4

000112d8 <strftime@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3484]!	; 0xd9c

000112e4 <__freading@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3476]!	; 0xd94

000112f0 <localtime@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3468]!	; 0xd8c

000112fc <__ctype_tolower_loc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3460]!	; 0xd84

00011308 <__ctype_toupper_loc@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3452]!	; 0xd7c

00011314 <__gmon_start__@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3444]!	; 0xd74

00011320 <getopt_long@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3436]!	; 0xd6c

0001132c <kill@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3428]!	; 0xd64

00011338 <__ctype_b_loc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3420]!	; 0xd5c

00011344 <exit@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3412]!	; 0xd54

00011350 <bcmp@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3404]!	; 0xd4c

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3396]!	; 0xd44

00011368 <setenv@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3388]!	; 0xd3c

00011374 <__errno_location@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3380]!	; 0xd34

00011380 <__cxa_atexit@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3372]!	; 0xd2c

0001138c <memset@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3364]!	; 0xd24

00011398 <strncpy@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3356]!	; 0xd1c

000113a4 <__printf_chk@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3348]!	; 0xd14

000113b0 <fileno@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3340]!	; 0xd0c

000113bc <__fprintf_chk@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3332]!	; 0xd04

000113c8 <fclose@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3324]!	; 0xcfc

000113d4 <fseeko64@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3316]!	; 0xcf4

000113e0 <getloadavg@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3308]!	; 0xcec

000113ec <strtod_l@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3300]!	; 0xce4

000113f8 <endutxent@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3292]!	; 0xcdc

00011404 <__overflow@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3284]!	; 0xcd4

00011410 <setlocale@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3276]!	; 0xccc

0001141c <strrchr@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3268]!	; 0xcc4

00011428 <nl_langinfo@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3260]!	; 0xcbc

00011434 <fputc@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #94208	; 0x17000
   1143c:	ldr	pc, [ip, #3252]!	; 0xcb4

00011440 <newlocale@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #94208	; 0x17000
   11448:	ldr	pc, [ip, #3244]!	; 0xcac

0001144c <timegm@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #94208	; 0x17000
   11454:	ldr	pc, [ip, #3236]!	; 0xca4

00011458 <fopen64@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #94208	; 0x17000
   11460:	ldr	pc, [ip, #3228]!	; 0xc9c

00011464 <fgets_unlocked@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #94208	; 0x17000
   1146c:	ldr	pc, [ip, #3220]!	; 0xc94

00011470 <bindtextdomain@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #94208	; 0x17000
   11478:	ldr	pc, [ip, #3212]!	; 0xc8c

0001147c <unsetenv@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #94208	; 0x17000
   11484:	ldr	pc, [ip, #3204]!	; 0xc84

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #94208	; 0x17000
   11490:	ldr	pc, [ip, #3196]!	; 0xc7c

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #3188]!	; 0xc74

000114a0 <getutxent@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #3180]!	; 0xc6c

000114ac <dcngettext@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #94208	; 0x17000
   114b4:	ldr	pc, [ip, #3172]!	; 0xc64

Disassembly of section .text:

000114b8 <.text>:
   114b8:	mov	fp, #0
   114bc:	mov	lr, #0
   114c0:	pop	{r1}		; (ldr r1, [sp], #4)
   114c4:	mov	r2, sp
   114c8:	push	{r2}		; (str r2, [sp, #-4]!)
   114cc:	push	{r0}		; (str r0, [sp, #-4]!)
   114d0:	ldr	ip, [pc, #16]	; 114e8 <dcngettext@plt+0x3c>
   114d4:	push	{ip}		; (str ip, [sp, #-4]!)
   114d8:	ldr	r0, [pc, #12]	; 114ec <dcngettext@plt+0x40>
   114dc:	ldr	r3, [pc, #12]	; 114f0 <dcngettext@plt+0x44>
   114e0:	bl	112cc <__libc_start_main@plt>
   114e4:	bl	11494 <abort@plt>
   114e8:	andeq	r7, r1, r8, lsr #14
   114ec:	andeq	r1, r1, r0, asr #16
   114f0:	andeq	r7, r1, r8, asr #13
   114f4:	ldr	r3, [pc, #20]	; 11510 <dcngettext@plt+0x64>
   114f8:	ldr	r2, [pc, #20]	; 11514 <dcngettext@plt+0x68>
   114fc:	add	r3, pc, r3
   11500:	ldr	r2, [r3, r2]
   11504:	cmp	r2, #0
   11508:	bxeq	lr
   1150c:	b	11314 <__gmon_start__@plt>
   11510:	strdeq	r7, [r1], -ip
   11514:	andeq	r0, r0, ip, lsl r1
   11518:	ldr	r0, [pc, #24]	; 11538 <dcngettext@plt+0x8c>
   1151c:	ldr	r3, [pc, #24]	; 1153c <dcngettext@plt+0x90>
   11520:	cmp	r3, r0
   11524:	bxeq	lr
   11528:	ldr	r3, [pc, #16]	; 11540 <dcngettext@plt+0x94>
   1152c:	cmp	r3, #0
   11530:	bxeq	lr
   11534:	bx	r3
   11538:	andeq	r9, r2, r0, ror r1
   1153c:	andeq	r9, r2, r0, ror r1
   11540:	andeq	r0, r0, r0
   11544:	ldr	r0, [pc, #36]	; 11570 <dcngettext@plt+0xc4>
   11548:	ldr	r1, [pc, #36]	; 11574 <dcngettext@plt+0xc8>
   1154c:	sub	r1, r1, r0
   11550:	asr	r1, r1, #2
   11554:	add	r1, r1, r1, lsr #31
   11558:	asrs	r1, r1, #1
   1155c:	bxeq	lr
   11560:	ldr	r3, [pc, #16]	; 11578 <dcngettext@plt+0xcc>
   11564:	cmp	r3, #0
   11568:	bxeq	lr
   1156c:	bx	r3
   11570:	andeq	r9, r2, r0, ror r1
   11574:	andeq	r9, r2, r0, ror r1
   11578:	andeq	r0, r0, r0
   1157c:	push	{r4, lr}
   11580:	ldr	r4, [pc, #24]	; 115a0 <dcngettext@plt+0xf4>
   11584:	ldrb	r3, [r4]
   11588:	cmp	r3, #0
   1158c:	popne	{r4, pc}
   11590:	bl	11518 <dcngettext@plt+0x6c>
   11594:	mov	r3, #1
   11598:	strb	r3, [r4]
   1159c:	pop	{r4, pc}
   115a0:	andeq	r9, r2, ip, lsl #3
   115a4:	b	11544 <dcngettext@plt+0x98>
   115a8:	push	{fp, lr}
   115ac:	mov	fp, sp
   115b0:	sub	sp, sp, #56	; 0x38
   115b4:	mov	r4, r0
   115b8:	cmp	r0, #0
   115bc:	bne	117fc <dcngettext@plt+0x350>
   115c0:	movw	r1, #30587	; 0x777b
   115c4:	mov	r0, #0
   115c8:	mov	r2, #5
   115cc:	movt	r1, #1
   115d0:	bl	11218 <dcgettext@plt>
   115d4:	mov	r1, r0
   115d8:	movw	r0, #37276	; 0x919c
   115dc:	movt	r0, #2
   115e0:	ldr	r2, [r0]
   115e4:	mov	r0, #1
   115e8:	bl	113a4 <__printf_chk@plt>
   115ec:	movw	r1, #30617	; 0x7799
   115f0:	mov	r0, #0
   115f4:	mov	r2, #5
   115f8:	movt	r1, #1
   115fc:	bl	11218 <dcgettext@plt>
   11600:	mov	r1, r0
   11604:	mov	r0, #1
   11608:	bl	113a4 <__printf_chk@plt>
   1160c:	movw	r1, #30802	; 0x7852
   11610:	mov	r0, #0
   11614:	mov	r2, #5
   11618:	movt	r1, #1
   1161c:	bl	11218 <dcgettext@plt>
   11620:	mov	r1, r0
   11624:	mov	r0, #1
   11628:	bl	113a4 <__printf_chk@plt>
   1162c:	movw	r1, #30886	; 0x78a6
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	movt	r1, #1
   1163c:	bl	11218 <dcgettext@plt>
   11640:	movw	r2, #30945	; 0x78e1
   11644:	movw	r3, #30959	; 0x78ef
   11648:	mov	r1, r0
   1164c:	mov	r0, #1
   11650:	movt	r2, #1
   11654:	movt	r3, #1
   11658:	bl	113a4 <__printf_chk@plt>
   1165c:	movw	r1, #30973	; 0x78fd
   11660:	mov	r0, #0
   11664:	mov	r2, #5
   11668:	movt	r1, #1
   1166c:	bl	11218 <dcgettext@plt>
   11670:	movw	r7, #37252	; 0x9184
   11674:	movt	r7, #2
   11678:	ldr	r1, [r7]
   1167c:	bl	11194 <fputs_unlocked@plt>
   11680:	movw	r1, #31018	; 0x792a
   11684:	mov	r0, #0
   11688:	mov	r2, #5
   1168c:	movt	r1, #1
   11690:	bl	11218 <dcgettext@plt>
   11694:	ldr	r1, [r7]
   11698:	bl	11194 <fputs_unlocked@plt>
   1169c:	movw	r0, #31680	; 0x7bc0
   116a0:	mov	r2, #48	; 0x30
   116a4:	mov	r6, sp
   116a8:	movw	r5, #31489	; 0x7b01
   116ac:	movt	r0, #1
   116b0:	movt	r5, #1
   116b4:	add	r1, r0, #32
   116b8:	add	r3, r0, #16
   116bc:	vld1.64	{d18-d19}, [r0], r2
   116c0:	vld1.64	{d16-d17}, [r1]
   116c4:	vld1.64	{d20-d21}, [r3]
   116c8:	vldr	d22, [r0]
   116cc:	add	r1, r6, #32
   116d0:	add	r0, r6, #16
   116d4:	vst1.64	{d16-d17}, [r1]
   116d8:	movw	r1, #31172	; 0x79c4
   116dc:	vst1.64	{d20-d21}, [r0]
   116e0:	mov	r0, r6
   116e4:	movt	r1, #1
   116e8:	vst1.64	{d18-d19}, [r0], r2
   116ec:	vstr	d22, [r0]
   116f0:	mov	r0, r5
   116f4:	bl	111ac <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	ldrne	r1, [r6, #8]!
   11700:	cmpne	r1, #0
   11704:	bne	116f0 <dcngettext@plt+0x244>
   11708:	movw	r1, #31267	; 0x7a23
   1170c:	ldr	r6, [r6, #4]
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	11218 <dcgettext@plt>
   11720:	movw	r2, #31096	; 0x7978
   11724:	movw	r3, #31290	; 0x7a3a
   11728:	mov	r1, r0
   1172c:	mov	r0, #1
   11730:	movt	r2, #1
   11734:	movt	r3, #1
   11738:	bl	113a4 <__printf_chk@plt>
   1173c:	cmp	r6, #0
   11740:	mov	r0, #5
   11744:	mov	r1, #0
   11748:	moveq	r6, r5
   1174c:	bl	11410 <setlocale@plt>
   11750:	cmp	r0, #0
   11754:	beq	1178c <dcngettext@plt+0x2e0>
   11758:	movw	r1, #31330	; 0x7a62
   1175c:	mov	r2, #3
   11760:	movt	r1, #1
   11764:	bl	11488 <strncmp@plt>
   11768:	cmp	r0, #0
   1176c:	beq	1178c <dcngettext@plt+0x2e0>
   11770:	movw	r1, #31334	; 0x7a66
   11774:	mov	r0, #0
   11778:	mov	r2, #5
   1177c:	movt	r1, #1
   11780:	bl	11218 <dcgettext@plt>
   11784:	ldr	r1, [r7]
   11788:	bl	11194 <fputs_unlocked@plt>
   1178c:	movw	r1, #31405	; 0x7aad
   11790:	mov	r0, #0
   11794:	mov	r2, #5
   11798:	movt	r1, #1
   1179c:	bl	11218 <dcgettext@plt>
   117a0:	movw	r2, #31290	; 0x7a3a
   117a4:	mov	r1, r0
   117a8:	mov	r0, #1
   117ac:	mov	r3, r5
   117b0:	movt	r2, #1
   117b4:	bl	113a4 <__printf_chk@plt>
   117b8:	movw	r1, #31432	; 0x7ac8
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #1
   117c8:	bl	11218 <dcgettext@plt>
   117cc:	mov	r1, r0
   117d0:	movw	r0, #31200	; 0x79e0
   117d4:	movw	r3, #30944	; 0x78e0
   117d8:	cmp	r6, r5
   117dc:	mov	r2, r6
   117e0:	movt	r0, #1
   117e4:	movt	r3, #1
   117e8:	moveq	r3, r0
   117ec:	mov	r0, #1
   117f0:	bl	113a4 <__printf_chk@plt>
   117f4:	mov	r0, r4
   117f8:	bl	11344 <exit@plt>
   117fc:	movw	r0, #37248	; 0x9180
   11800:	movw	r1, #30548	; 0x7754
   11804:	mov	r2, #5
   11808:	movt	r0, #2
   1180c:	movt	r1, #1
   11810:	ldr	r5, [r0]
   11814:	mov	r0, #0
   11818:	bl	11218 <dcgettext@plt>
   1181c:	mov	r2, r0
   11820:	movw	r0, #37276	; 0x919c
   11824:	mov	r1, #1
   11828:	movt	r0, #2
   1182c:	ldr	r3, [r0]
   11830:	mov	r0, r5
   11834:	bl	113bc <__fprintf_chk@plt>
   11838:	mov	r0, r4
   1183c:	bl	11344 <exit@plt>
   11840:	push	{r4, r5, r6, sl, fp, lr}
   11844:	add	fp, sp, #16
   11848:	sub	sp, sp, #32
   1184c:	mov	r5, r0
   11850:	ldr	r0, [r1]
   11854:	mov	r4, r1
   11858:	bl	13cec <dcngettext@plt+0x2840>
   1185c:	movw	r1, #30944	; 0x78e0
   11860:	mov	r0, #6
   11864:	movt	r1, #1
   11868:	bl	11410 <setlocale@plt>
   1186c:	movw	r6, #31100	; 0x797c
   11870:	movw	r1, #31072	; 0x7960
   11874:	movt	r6, #1
   11878:	movt	r1, #1
   1187c:	mov	r0, r6
   11880:	bl	11470 <bindtextdomain@plt>
   11884:	mov	r0, r6
   11888:	bl	11248 <textdomain@plt>
   1188c:	movw	r0, #7748	; 0x1e44
   11890:	movt	r0, #1
   11894:	bl	1772c <dcngettext@plt+0x6280>
   11898:	movw	r0, #37160	; 0x9128
   1189c:	movw	r3, #31127	; 0x7997
   118a0:	movw	r1, #5544	; 0x15a8
   118a4:	movw	lr, #31143	; 0x79a7
   118a8:	movw	r6, #31110	; 0x7986
   118ac:	mov	r2, #1
   118b0:	mov	ip, #0
   118b4:	movt	r0, #2
   118b8:	movt	r3, #1
   118bc:	movt	r1, #1
   118c0:	movt	lr, #1
   118c4:	movt	r6, #1
   118c8:	ldr	r0, [r0]
   118cc:	stm	sp, {r0, r2}
   118d0:	movw	r2, #31489	; 0x7b01
   118d4:	str	r3, [sp, #16]
   118d8:	movw	r3, #31096	; 0x7978
   118dc:	str	r1, [sp, #8]
   118e0:	mov	r0, r5
   118e4:	mov	r1, r4
   118e8:	str	r6, [sp, #12]
   118ec:	str	lr, [sp, #20]
   118f0:	str	ip, [sp, #24]
   118f4:	movt	r2, #1
   118f8:	movt	r3, #1
   118fc:	bl	13c28 <dcngettext@plt+0x277c>
   11900:	movw	r6, #37240	; 0x9178
   11904:	movt	r6, #2
   11908:	ldr	r0, [r6]
   1190c:	sub	r1, r5, r0
   11910:	cmp	r1, #1
   11914:	beq	11930 <dcngettext@plt+0x484>
   11918:	cmp	r1, #0
   1191c:	bne	1193c <dcngettext@plt+0x490>
   11920:	movw	r0, #30945	; 0x78e1
   11924:	mov	r1, #1
   11928:	movt	r0, #1
   1192c:	bl	11980 <dcngettext@plt+0x4d4>
   11930:	ldr	r0, [r4, r0, lsl #2]
   11934:	mov	r1, #0
   11938:	bl	11980 <dcngettext@plt+0x4d4>
   1193c:	movw	r1, #31155	; 0x79b3
   11940:	mov	r0, #0
   11944:	mov	r2, #5
   11948:	movt	r1, #1
   1194c:	bl	11218 <dcgettext@plt>
   11950:	mov	r5, r0
   11954:	ldr	r0, [r6]
   11958:	add	r0, r4, r0, lsl #2
   1195c:	ldr	r0, [r0, #4]
   11960:	bl	15cb0 <dcngettext@plt+0x4804>
   11964:	mov	r3, r0
   11968:	mov	r0, #0
   1196c:	mov	r1, #0
   11970:	mov	r2, r5
   11974:	bl	112a8 <error@plt>
   11978:	mov	r0, #1
   1197c:	bl	115a8 <dcngettext@plt+0xfc>
   11980:	push	{fp, lr}
   11984:	mov	fp, sp
   11988:	sub	sp, sp, #8
   1198c:	mov	r4, r0
   11990:	mov	r0, #0
   11994:	mov	r3, r1
   11998:	add	r1, sp, #4
   1199c:	mov	r2, sp
   119a0:	str	r0, [sp]
   119a4:	mov	r0, r4
   119a8:	bl	15d2c <dcngettext@plt+0x4880>
   119ac:	cmp	r0, #0
   119b0:	bne	119c8 <dcngettext@plt+0x51c>
   119b4:	ldr	r1, [sp]
   119b8:	ldr	r0, [sp, #4]
   119bc:	bl	119f8 <dcngettext@plt+0x54c>
   119c0:	mov	r0, #0
   119c4:	bl	11344 <exit@plt>
   119c8:	bl	11374 <__errno_location@plt>
   119cc:	ldr	r5, [r0]
   119d0:	mov	r0, #0
   119d4:	mov	r1, #3
   119d8:	mov	r2, r4
   119dc:	bl	15a04 <dcngettext@plt+0x4558>
   119e0:	movw	r2, #31769	; 0x7c19
   119e4:	mov	r3, r0
   119e8:	mov	r0, #1
   119ec:	mov	r1, r5
   119f0:	movt	r2, #1
   119f4:	bl	112a8 <error@plt>
   119f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119fc:	add	fp, sp, #28
   11a00:	sub	sp, sp, #20
   11a04:	sub	sp, sp, #8192	; 0x2000
   11a08:	mov	r5, r1
   11a0c:	movw	r1, #31634	; 0x7b92
   11a10:	mov	r6, r0
   11a14:	movw	r0, #31483	; 0x7afb
   11a18:	movt	r0, #1
   11a1c:	movt	r1, #1
   11a20:	bl	11458 <fopen64@plt>
   11a24:	mov	r7, #0
   11a28:	cmp	r0, #0
   11a2c:	mov	sl, #0
   11a30:	beq	11aa8 <dcngettext@plt+0x5fc>
   11a34:	mov	r4, r0
   11a38:	add	r8, sp, #8
   11a3c:	mov	r1, #8192	; 0x2000
   11a40:	mov	r0, r8
   11a44:	mov	r2, r4
   11a48:	bl	11464 <fgets_unlocked@plt>
   11a4c:	mov	sl, #0
   11a50:	cmp	r0, r8
   11a54:	bne	11aa0 <dcngettext@plt+0x5f4>
   11a58:	sub	r1, fp, #36	; 0x24
   11a5c:	mov	r0, r8
   11a60:	bl	11db0 <dcngettext@plt+0x904>
   11a64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a68:	cmp	r8, r0
   11a6c:	beq	11a9c <dcngettext@plt+0x5f0>
   11a70:	vldr	d16, [pc, #816]	; 11da8 <dcngettext@plt+0x8fc>
   11a74:	vcvt.s32.f64	s2, d0
   11a78:	mvn	r0, #0
   11a7c:	vcmpe.f64	d0, d16
   11a80:	vmov	sl, s2
   11a84:	vmrs	APSR_nzcv, fpscr
   11a88:	vcmpe.f64	d0, #0.0
   11a8c:	movpl	sl, r0
   11a90:	vmrs	APSR_nzcv, fpscr
   11a94:	movlt	sl, r0
   11a98:	b	11aa0 <dcngettext@plt+0x5f4>
   11a9c:	mov	sl, #0
   11aa0:	mov	r0, r4
   11aa4:	bl	11f30 <dcngettext@plt+0xa84>
   11aa8:	cmp	r6, #0
   11aac:	mov	r4, #0
   11ab0:	beq	11af8 <dcngettext@plt+0x64c>
   11ab4:	mov	r4, #0
   11ab8:	mov	r7, #0
   11abc:	ldrb	r0, [r5, #44]	; 0x2c
   11ac0:	ldrh	r1, [r5]
   11ac4:	sub	r6, r6, #1
   11ac8:	cmp	r0, #0
   11acc:	sub	r2, r1, #7
   11ad0:	movwne	r0, #1
   11ad4:	cmp	r1, #2
   11ad8:	clz	r2, r2
   11adc:	ldreq	r7, [r5, #340]	; 0x154
   11ae0:	lsr	r2, r2, #5
   11ae4:	add	r5, r5, #384	; 0x180
   11ae8:	cmp	r6, #0
   11aec:	and	r0, r2, r0
   11af0:	add	r4, r4, r0
   11af4:	bne	11abc <dcngettext@plt+0x610>
   11af8:	mov	r0, #0
   11afc:	bl	1120c <time@plt>
   11b00:	cmp	sl, #0
   11b04:	str	r0, [fp, #-36]	; 0xffffffdc
   11b08:	bne	11b18 <dcngettext@plt+0x66c>
   11b0c:	cmp	r7, #0
   11b10:	beq	11d7c <dcngettext@plt+0x8d0>
   11b14:	sub	sl, r0, r7
   11b18:	sub	r0, fp, #36	; 0x24
   11b1c:	bl	112f0 <localtime@plt>
   11b20:	movw	r8, #37252	; 0x9184
   11b24:	cmp	r0, #0
   11b28:	movt	r8, #2
   11b2c:	beq	11c10 <dcngettext@plt+0x764>
   11b30:	movw	r1, #31519	; 0x7b1f
   11b34:	ldr	r6, [r8]
   11b38:	mov	r5, r0
   11b3c:	mov	r0, #0
   11b40:	mov	r2, #5
   11b44:	mov	r7, #0
   11b48:	movt	r1, #1
   11b4c:	bl	11218 <dcgettext@plt>
   11b50:	mov	r1, r0
   11b54:	mov	r0, r6
   11b58:	mov	r2, r5
   11b5c:	mov	r3, #0
   11b60:	str	r7, [sp]
   11b64:	bl	12028 <dcngettext@plt+0xb7c>
   11b68:	cmn	sl, #1
   11b6c:	beq	11c38 <dcngettext@plt+0x78c>
   11b70:	movw	r0, #17671	; 0x4507
   11b74:	movt	r0, #49710	; 0xc22e
   11b78:	smmla	r0, sl, r0, sl
   11b7c:	asr	r1, r0, #16
   11b80:	add	r6, r1, r0, lsr #31
   11b84:	movw	r0, #44672	; 0xae80
   11b88:	movw	r1, #46021	; 0xb3c5
   11b8c:	movt	r0, #65534	; 0xfffe
   11b90:	movt	r1, #37282	; 0x91a2
   11b94:	mla	r0, r6, r0, sl
   11b98:	smmla	r1, r0, r1, r0
   11b9c:	asr	r2, r1, #11
   11ba0:	add	r5, r2, r1, lsr #31
   11ba4:	movw	r1, #61936	; 0xf1f0
   11ba8:	movt	r1, #65535	; 0xffff
   11bac:	mla	r0, r5, r1, r0
   11bb0:	movw	r1, #34953	; 0x8889
   11bb4:	movt	r1, #34952	; 0x8888
   11bb8:	smmla	r0, r0, r1, r0
   11bbc:	asr	r1, r0, #5
   11bc0:	add	r9, r1, r0, lsr #31
   11bc4:	movw	r0, #20864	; 0x5180
   11bc8:	movt	r0, #1
   11bcc:	cmp	sl, r0
   11bd0:	blt	11c5c <dcngettext@plt+0x7b0>
   11bd4:	movw	r1, #31564	; 0x7b4c
   11bd8:	movw	r2, #31587	; 0x7b63
   11bdc:	mov	r0, #5
   11be0:	mov	r3, r6
   11be4:	movt	r1, #1
   11be8:	movt	r2, #1
   11bec:	str	r0, [sp]
   11bf0:	mov	r0, #0
   11bf4:	bl	114ac <dcngettext@plt>
   11bf8:	mov	r1, r0
   11bfc:	str	r9, [sp]
   11c00:	mov	r0, #1
   11c04:	mov	r2, r6
   11c08:	mov	r3, r5
   11c0c:	b	11c80 <dcngettext@plt+0x7d4>
   11c10:	movw	r1, #31531	; 0x7b2b
   11c14:	mov	r0, #0
   11c18:	mov	r2, #5
   11c1c:	movt	r1, #1
   11c20:	bl	11218 <dcgettext@plt>
   11c24:	mov	r1, r0
   11c28:	mov	r0, #1
   11c2c:	bl	113a4 <__printf_chk@plt>
   11c30:	cmn	sl, #1
   11c34:	bne	11b70 <dcngettext@plt+0x6c4>
   11c38:	movw	r1, #31542	; 0x7b36
   11c3c:	mov	r0, #0
   11c40:	mov	r2, #5
   11c44:	movt	r1, #1
   11c48:	bl	11218 <dcgettext@plt>
   11c4c:	mov	r1, r0
   11c50:	mov	r0, #1
   11c54:	bl	113a4 <__printf_chk@plt>
   11c58:	b	11c84 <dcngettext@plt+0x7d8>
   11c5c:	movw	r1, #31611	; 0x7b7b
   11c60:	mov	r0, #0
   11c64:	mov	r2, #5
   11c68:	movt	r1, #1
   11c6c:	bl	11218 <dcgettext@plt>
   11c70:	mov	r1, r0
   11c74:	mov	r0, #1
   11c78:	mov	r2, r5
   11c7c:	mov	r3, r9
   11c80:	bl	113a4 <__printf_chk@plt>
   11c84:	movw	r1, #31627	; 0x7b8b
   11c88:	movw	r2, #31636	; 0x7b94
   11c8c:	mov	r0, #5
   11c90:	mov	r3, r4
   11c94:	movt	r1, #1
   11c98:	movt	r2, #1
   11c9c:	str	r0, [sp]
   11ca0:	mov	r0, #0
   11ca4:	bl	114ac <dcngettext@plt>
   11ca8:	mov	r1, r0
   11cac:	mov	r0, #1
   11cb0:	mov	r2, r4
   11cb4:	bl	113a4 <__printf_chk@plt>
   11cb8:	add	r0, sp, #8
   11cbc:	mov	r1, #3
   11cc0:	bl	113e0 <getloadavg@plt>
   11cc4:	cmn	r0, #1
   11cc8:	beq	11d40 <dcngettext@plt+0x894>
   11ccc:	mov	r4, r0
   11cd0:	cmp	r0, #1
   11cd4:	blt	11d64 <dcngettext@plt+0x8b8>
   11cd8:	movw	r1, #31646	; 0x7b9e
   11cdc:	mov	r0, #0
   11ce0:	mov	r2, #5
   11ce4:	movt	r1, #1
   11ce8:	bl	11218 <dcgettext@plt>
   11cec:	vldr	d16, [sp, #8]
   11cf0:	mov	r1, r0
   11cf4:	mov	r0, #1
   11cf8:	vmov	r2, r3, d16
   11cfc:	bl	113a4 <__printf_chk@plt>
   11d00:	cmp	r4, #1
   11d04:	beq	11d40 <dcngettext@plt+0x894>
   11d08:	vldr	d16, [sp, #16]
   11d0c:	movw	r1, #31668	; 0x7bb4
   11d10:	mov	r0, #1
   11d14:	movt	r1, #1
   11d18:	vmov	r2, r3, d16
   11d1c:	bl	113a4 <__printf_chk@plt>
   11d20:	cmp	r4, #3
   11d24:	blt	11d40 <dcngettext@plt+0x894>
   11d28:	vldr	d16, [sp, #24]
   11d2c:	movw	r1, #31668	; 0x7bb4
   11d30:	mov	r0, #1
   11d34:	movt	r1, #1
   11d38:	vmov	r2, r3, d16
   11d3c:	bl	113a4 <__printf_chk@plt>
   11d40:	ldr	r0, [r8]
   11d44:	ldr	r1, [r0, #20]
   11d48:	ldr	r2, [r0, #24]
   11d4c:	cmp	r1, r2
   11d50:	bcs	11d6c <dcngettext@plt+0x8c0>
   11d54:	add	r2, r1, #1
   11d58:	str	r2, [r0, #20]
   11d5c:	mov	r0, #10
   11d60:	strb	r0, [r1]
   11d64:	sub	sp, fp, #28
   11d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d6c:	mov	r1, #10
   11d70:	bl	11404 <__overflow@plt>
   11d74:	sub	sp, fp, #28
   11d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d7c:	bl	11374 <__errno_location@plt>
   11d80:	movw	r1, #31496	; 0x7b08
   11d84:	ldr	r4, [r0]
   11d88:	mov	r0, #0
   11d8c:	mov	r2, #5
   11d90:	movt	r1, #1
   11d94:	bl	11218 <dcgettext@plt>
   11d98:	mov	r2, r0
   11d9c:	mov	r0, #1
   11da0:	mov	r1, r4
   11da4:	bl	112a8 <error@plt>
   11da8:			; <UNDEFINED> instruction: 0xffc00000
   11dac:	ldrshmi	pc, [pc, #255]	; 11eb3 <dcngettext@plt+0xa07>	; <UNPREDICTABLE>
   11db0:	push	{r4, r5, r6, sl, fp, lr}
   11db4:	add	fp, sp, #16
   11db8:	movw	r6, #37264	; 0x9190
   11dbc:	mov	r5, r0
   11dc0:	mov	r4, r1
   11dc4:	movt	r6, #2
   11dc8:	ldr	r0, [r6]
   11dcc:	cmp	r0, #0
   11dd0:	beq	11df0 <dcngettext@plt+0x944>
   11dd4:	ldr	r2, [r6]
   11dd8:	cmp	r2, #0
   11ddc:	beq	11e14 <dcngettext@plt+0x968>
   11de0:	mov	r0, r5
   11de4:	mov	r1, r4
   11de8:	pop	{r4, r5, r6, sl, fp, lr}
   11dec:	b	113ec <strtod_l@plt>
   11df0:	movw	r1, #31751	; 0x7c07
   11df4:	movw	r0, #8127	; 0x1fbf
   11df8:	mov	r2, #0
   11dfc:	movt	r1, #1
   11e00:	bl	11440 <newlocale@plt>
   11e04:	str	r0, [r6]
   11e08:	ldr	r2, [r6]
   11e0c:	cmp	r2, #0
   11e10:	bne	11de0 <dcngettext@plt+0x934>
   11e14:	vmov.i32	d0, #0	; 0x00000000
   11e18:	cmp	r4, #0
   11e1c:	strne	r5, [r4]
   11e20:	pop	{r4, r5, r6, sl, fp, pc}
   11e24:	movw	r1, #37268	; 0x9194
   11e28:	movt	r1, #2
   11e2c:	str	r0, [r1, #4]
   11e30:	bx	lr
   11e34:	movw	r1, #37268	; 0x9194
   11e38:	movt	r1, #2
   11e3c:	strb	r0, [r1]
   11e40:	bx	lr
   11e44:	push	{r4, r5, r6, sl, fp, lr}
   11e48:	add	fp, sp, #16
   11e4c:	sub	sp, sp, #8
   11e50:	movw	r0, #37252	; 0x9184
   11e54:	movt	r0, #2
   11e58:	ldr	r0, [r0]
   11e5c:	bl	17438 <dcngettext@plt+0x5f8c>
   11e60:	cmp	r0, #0
   11e64:	beq	11e8c <dcngettext@plt+0x9e0>
   11e68:	movw	r5, #37268	; 0x9194
   11e6c:	movt	r5, #2
   11e70:	ldrb	r0, [r5]
   11e74:	cmp	r0, #0
   11e78:	beq	11eb8 <dcngettext@plt+0xa0c>
   11e7c:	bl	11374 <__errno_location@plt>
   11e80:	ldr	r0, [r0]
   11e84:	cmp	r0, #32
   11e88:	bne	11eb8 <dcngettext@plt+0xa0c>
   11e8c:	movw	r0, #37248	; 0x9180
   11e90:	movt	r0, #2
   11e94:	ldr	r0, [r0]
   11e98:	bl	17438 <dcngettext@plt+0x5f8c>
   11e9c:	cmp	r0, #0
   11ea0:	subeq	sp, fp, #16
   11ea4:	popeq	{r4, r5, r6, sl, fp, pc}
   11ea8:	movw	r0, #37164	; 0x912c
   11eac:	movt	r0, #2
   11eb0:	ldr	r0, [r0]
   11eb4:	bl	111e8 <_exit@plt>
   11eb8:	movw	r1, #31753	; 0x7c09
   11ebc:	mov	r0, #0
   11ec0:	mov	r2, #5
   11ec4:	movt	r1, #1
   11ec8:	bl	11218 <dcgettext@plt>
   11ecc:	ldr	r6, [r5, #4]
   11ed0:	mov	r4, r0
   11ed4:	bl	11374 <__errno_location@plt>
   11ed8:	ldr	r5, [r0]
   11edc:	cmp	r6, #0
   11ee0:	bne	11efc <dcngettext@plt+0xa50>
   11ee4:	movw	r2, #31769	; 0x7c19
   11ee8:	mov	r0, #0
   11eec:	mov	r1, r5
   11ef0:	mov	r3, r4
   11ef4:	movt	r2, #1
   11ef8:	b	11f1c <dcngettext@plt+0xa70>
   11efc:	mov	r0, r6
   11f00:	bl	15928 <dcngettext@plt+0x447c>
   11f04:	movw	r2, #31765	; 0x7c15
   11f08:	mov	r3, r0
   11f0c:	str	r4, [sp]
   11f10:	mov	r0, #0
   11f14:	mov	r1, r5
   11f18:	movt	r2, #1
   11f1c:	bl	112a8 <error@plt>
   11f20:	movw	r0, #37164	; 0x912c
   11f24:	movt	r0, #2
   11f28:	ldr	r0, [r0]
   11f2c:	bl	111e8 <_exit@plt>
   11f30:	push	{r4, r5, r6, sl, fp, lr}
   11f34:	add	fp, sp, #16
   11f38:	sub	sp, sp, #8
   11f3c:	mov	r4, r0
   11f40:	bl	113b0 <fileno@plt>
   11f44:	cmn	r0, #1
   11f48:	ble	11fbc <dcngettext@plt+0xb10>
   11f4c:	mov	r0, r4
   11f50:	bl	112e4 <__freading@plt>
   11f54:	cmp	r0, #0
   11f58:	beq	11f84 <dcngettext@plt+0xad8>
   11f5c:	mov	r0, r4
   11f60:	bl	113b0 <fileno@plt>
   11f64:	mov	r1, #1
   11f68:	mov	r2, #0
   11f6c:	mov	r3, #0
   11f70:	str	r1, [sp]
   11f74:	bl	11278 <lseek64@plt>
   11f78:	and	r0, r0, r1
   11f7c:	cmn	r0, #1
   11f80:	beq	11fbc <dcngettext@plt+0xb10>
   11f84:	mov	r0, r4
   11f88:	bl	11fcc <dcngettext@plt+0xb20>
   11f8c:	cmp	r0, #0
   11f90:	beq	11fbc <dcngettext@plt+0xb10>
   11f94:	bl	11374 <__errno_location@plt>
   11f98:	ldr	r6, [r0]
   11f9c:	mov	r5, r0
   11fa0:	mov	r0, r4
   11fa4:	bl	113c8 <fclose@plt>
   11fa8:	cmp	r6, #0
   11fac:	strne	r6, [r5]
   11fb0:	mvnne	r0, #0
   11fb4:	sub	sp, fp, #16
   11fb8:	pop	{r4, r5, r6, sl, fp, pc}
   11fbc:	mov	r0, r4
   11fc0:	sub	sp, fp, #16
   11fc4:	pop	{r4, r5, r6, sl, fp, lr}
   11fc8:	b	113c8 <fclose@plt>
   11fcc:	push	{r4, sl, fp, lr}
   11fd0:	add	fp, sp, #8
   11fd4:	sub	sp, sp, #8
   11fd8:	mov	r4, r0
   11fdc:	cmp	r0, #0
   11fe0:	beq	12018 <dcngettext@plt+0xb6c>
   11fe4:	mov	r0, r4
   11fe8:	bl	112e4 <__freading@plt>
   11fec:	cmp	r0, #0
   11ff0:	beq	12018 <dcngettext@plt+0xb6c>
   11ff4:	ldrb	r0, [r4, #1]
   11ff8:	tst	r0, #1
   11ffc:	beq	12018 <dcngettext@plt+0xb6c>
   12000:	mov	r0, #1
   12004:	mov	r2, #0
   12008:	mov	r3, #0
   1200c:	str	r0, [sp]
   12010:	mov	r0, r4
   12014:	bl	13ad0 <dcngettext@plt+0x2624>
   12018:	mov	r0, r4
   1201c:	sub	sp, fp, #8
   12020:	pop	{r4, sl, fp, lr}
   12024:	b	111c4 <fflush@plt>
   12028:	push	{fp, lr}
   1202c:	mov	fp, sp
   12030:	sub	sp, sp, #16
   12034:	str	r3, [sp, #8]
   12038:	mvn	r3, #0
   1203c:	str	r3, [sp, #4]
   12040:	mov	r3, #0
   12044:	str	r3, [sp]
   12048:	ldr	r3, [fp, #8]
   1204c:	str	r3, [sp, #12]
   12050:	mov	r3, #0
   12054:	bl	12060 <dcngettext@plt+0xbb4>
   12058:	mov	sp, fp
   1205c:	pop	{fp, pc}
   12060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12064:	add	fp, sp, #28
   12068:	sub	sp, sp, #124	; 0x7c
   1206c:	sub	sp, sp, #1024	; 0x400
   12070:	str	r3, [sp, #76]	; 0x4c
   12074:	mov	r4, r2
   12078:	mov	sl, r1
   1207c:	mov	r7, r0
   12080:	bl	11374 <__errno_location@plt>
   12084:	mov	r2, r4
   12088:	movw	r3, #30944	; 0x78e0
   1208c:	str	r0, [sp, #56]	; 0x38
   12090:	ldr	r1, [r2, #8]!
   12094:	movt	r3, #1
   12098:	cmp	r1, #0
   1209c:	mov	r6, r1
   120a0:	movweq	r6, #12
   120a4:	cmp	r1, #12
   120a8:	subgt	r6, r1, #12
   120ac:	ldr	r1, [r2, #32]
   120b0:	cmp	r1, #0
   120b4:	movne	r3, r1
   120b8:	ldr	r1, [r0]
   120bc:	str	r3, [sp, #44]	; 0x2c
   120c0:	ldrb	r3, [sl]
   120c4:	str	r1, [sp, #52]	; 0x34
   120c8:	cmp	r3, #0
   120cc:	beq	13a90 <dcngettext@plt+0x25e4>
   120d0:	sub	r0, fp, #46	; 0x2e
   120d4:	mvn	r1, #13
   120d8:	str	r6, [sp, #32]
   120dc:	ldr	r6, [fp, #12]
   120e0:	str	r2, [sp, #36]	; 0x24
   120e4:	mov	ip, #0
   120e8:	str	r4, [sp, #68]	; 0x44
   120ec:	str	r7, [sp, #80]	; 0x50
   120f0:	sub	r1, r1, r0
   120f4:	str	r1, [sp, #24]
   120f8:	add	r1, r0, #13
   120fc:	add	r0, r0, #14
   12100:	str	r1, [sp, #20]
   12104:	add	r1, sp, #96	; 0x60
   12108:	str	r0, [sp, #60]	; 0x3c
   1210c:	add	r1, r1, #1
   12110:	str	r1, [sp, #40]	; 0x28
   12114:	sub	r1, fp, #51	; 0x33
   12118:	add	r2, r1, #3
   1211c:	add	r1, r1, #2
   12120:	str	r1, [sp, #64]	; 0x40
   12124:	add	r1, r4, #12
   12128:	str	r2, [sp, #48]	; 0x30
   1212c:	str	r1, [sp, #28]
   12130:	uxtb	r1, r3
   12134:	mov	r8, sl
   12138:	cmp	r1, #37	; 0x25
   1213c:	beq	12184 <dcngettext@plt+0xcd8>
   12140:	b	1222c <dcngettext@plt+0xd80>
   12144:	ldr	r7, [sp, #80]	; 0x50
   12148:	mov	r0, r8
   1214c:	mov	r1, r5
   12150:	mov	r2, #1
   12154:	mov	r3, r7
   12158:	bl	1126c <fwrite@plt>
   1215c:	ldr	ip, [sp, #92]	; 0x5c
   12160:	add	ip, r4, ip
   12164:	ldrb	r3, [sl, #1]!
   12168:	mvn	r6, #0
   1216c:	cmp	r3, #0
   12170:	beq	13a94 <dcngettext@plt+0x25e8>
   12174:	uxtb	r1, r3
   12178:	mov	r8, sl
   1217c:	cmp	r1, #37	; 0x25
   12180:	bne	1222c <dcngettext@plt+0xd80>
   12184:	ldr	lr, [sp, #76]	; 0x4c
   12188:	mov	r4, #0
   1218c:	mov	r7, #0
   12190:	mov	sl, r8
   12194:	add	r1, sl, #2
   12198:	add	sl, sl, #1
   1219c:	ldrb	r9, [sl]
   121a0:	sub	r2, r9, #35	; 0x23
   121a4:	cmp	r2, #13
   121a8:	bhi	121ec <dcngettext@plt+0xd40>
   121ac:	add	r3, pc, #0
   121b0:	ldr	pc, [r3, r2, lsl #2]
   121b4:	andeq	r2, r1, r4, lsr #4
   121b8:	andeq	r2, r1, ip, lsr #5
   121bc:	andeq	r2, r1, ip, lsr #5
   121c0:	andeq	r2, r1, ip, lsr #5
   121c4:	andeq	r2, r1, ip, lsr #5
   121c8:	andeq	r2, r1, ip, lsr #5
   121cc:	andeq	r2, r1, ip, lsr #5
   121d0:	andeq	r2, r1, ip, lsr #5
   121d4:	strdeq	r2, [r1], -r4
   121d8:	andeq	r2, r1, ip, lsr #5
   121dc:	strdeq	r2, [r1], -r4
   121e0:	andeq	r2, r1, ip, lsr #5
   121e4:	andeq	r2, r1, ip, lsr #5
   121e8:	strdeq	r2, [r1], -r4
   121ec:	cmp	r9, #95	; 0x5f
   121f0:	bne	12214 <dcngettext@plt+0xd68>
   121f4:	add	r1, r1, #1
   121f8:	add	sl, sl, #1
   121fc:	mov	r7, r9
   12200:	ldrb	r9, [sl]
   12204:	sub	r2, r9, #35	; 0x23
   12208:	cmp	r2, #13
   1220c:	bls	121ac <dcngettext@plt+0xd00>
   12210:	b	121ec <dcngettext@plt+0xd40>
   12214:	cmp	r9, #94	; 0x5e
   12218:	bne	122ac <dcngettext@plt+0xe00>
   1221c:	mov	lr, #1
   12220:	b	12194 <dcngettext@plt+0xce8>
   12224:	mov	r4, #1
   12228:	b	12194 <dcngettext@plt+0xce8>
   1222c:	bic	r1, r6, r6, asr #31
   12230:	mov	r4, #1
   12234:	mvn	r2, ip
   12238:	cmp	r1, #1
   1223c:	movhi	r4, r1
   12240:	cmp	r4, r2
   12244:	bcs	13aac <dcngettext@plt+0x2600>
   12248:	cmp	r7, #0
   1224c:	beq	12290 <dcngettext@plt+0xde4>
   12250:	mov	r9, ip
   12254:	cmp	r1, #2
   12258:	bcc	12280 <dcngettext@plt+0xdd4>
   1225c:	sub	r5, r1, #1
   12260:	mov	r6, #0
   12264:	mov	r0, #32
   12268:	mov	r1, r7
   1226c:	bl	11434 <fputc@plt>
   12270:	add	r6, r6, #1
   12274:	cmp	r6, r5
   12278:	bcc	12264 <dcngettext@plt+0xdb8>
   1227c:	ldrb	r3, [r8]
   12280:	uxtb	r0, r3
   12284:	mov	r1, r7
   12288:	bl	11434 <fputc@plt>
   1228c:	mov	ip, r9
   12290:	add	ip, r4, ip
   12294:	mov	sl, r8
   12298:	ldrb	r3, [sl, #1]!
   1229c:	mvn	r6, #0
   122a0:	cmp	r3, #0
   122a4:	bne	12174 <dcngettext@plt+0xcc8>
   122a8:	b	13a94 <dcngettext@plt+0x25e8>
   122ac:	sub	r2, r9, #48	; 0x30
   122b0:	cmp	r2, #9
   122b4:	bhi	12348 <dcngettext@plt+0xe9c>
   122b8:	movw	r5, #52428	; 0xcccc
   122bc:	str	lr, [sp, #88]	; 0x58
   122c0:	mov	lr, r7
   122c4:	mov	r6, #0
   122c8:	mov	r7, #-2147483648	; 0x80000000
   122cc:	movt	r5, #3276	; 0xccc
   122d0:	cmn	r6, #1
   122d4:	bgt	1230c <dcngettext@plt+0xe60>
   122d8:	b	12318 <dcngettext@plt+0xe6c>
   122dc:	add	r2, r6, r6, lsl #2
   122e0:	lsl	r3, r2, #1
   122e4:	uxtab	r0, r3, r9
   122e8:	sub	r6, r0, #48	; 0x30
   122ec:	cmp	r6, r2, lsl #1
   122f0:	mvnvs	r6, #-2147483648	; 0x80000000
   122f4:	ldrb	r9, [r1], #1
   122f8:	sub	r2, r9, #48	; 0x30
   122fc:	cmp	r2, #10
   12300:	bcs	1233c <dcngettext@plt+0xe90>
   12304:	cmn	r6, #1
   12308:	ble	12318 <dcngettext@plt+0xe6c>
   1230c:	cmp	r6, r5
   12310:	ble	122dc <dcngettext@plt+0xe30>
   12314:	b	12328 <dcngettext@plt+0xe7c>
   12318:	beq	122dc <dcngettext@plt+0xe30>
   1231c:	sdiv	r2, r7, r6
   12320:	cmp	r2, #10
   12324:	bge	122dc <dcngettext@plt+0xe30>
   12328:	mvn	r6, #-2147483648	; 0x80000000
   1232c:	ldrb	r9, [r1], #1
   12330:	sub	r2, r9, #48	; 0x30
   12334:	cmp	r2, #10
   12338:	bcc	12304 <dcngettext@plt+0xe58>
   1233c:	mov	r7, lr
   12340:	ldr	lr, [sp, #88]	; 0x58
   12344:	sub	sl, r1, #1
   12348:	cmp	r9, #79	; 0x4f
   1234c:	cmpne	r9, #69	; 0x45
   12350:	bne	12368 <dcngettext@plt+0xebc>
   12354:	ldrb	r1, [sl, #1]!
   12358:	cmp	r1, #122	; 0x7a
   1235c:	str	ip, [sp, #92]	; 0x5c
   12360:	bls	1237c <dcngettext@plt+0xed0>
   12364:	b	12e2c <dcngettext@plt+0x1980>
   12368:	mov	r1, r9
   1236c:	mov	r9, #0
   12370:	cmp	r1, #122	; 0x7a
   12374:	str	ip, [sp, #92]	; 0x5c
   12378:	bhi	12e2c <dcngettext@plt+0x1980>
   1237c:	movw	r5, #31790	; 0x7c2e
   12380:	str	r7, [sp, #84]	; 0x54
   12384:	str	r4, [sp, #72]	; 0x48
   12388:	add	r2, pc, #12
   1238c:	mov	r7, #0
   12390:	mvn	r4, #0
   12394:	movt	r5, #1
   12398:	ldr	pc, [r2, r1, lsl #2]
   1239c:	strdeq	r2, [r1], -ip
   123a0:	andeq	r2, r1, r4, lsr #28
   123a4:	andeq	r2, r1, r4, lsr #28
   123a8:	andeq	r2, r1, r4, lsr #28
   123ac:	andeq	r2, r1, r4, lsr #28
   123b0:	andeq	r2, r1, r4, lsr #28
   123b4:	andeq	r2, r1, r4, lsr #28
   123b8:	andeq	r2, r1, r4, lsr #28
   123bc:	andeq	r2, r1, r4, lsr #28
   123c0:	andeq	r2, r1, r4, lsr #28
   123c4:	andeq	r2, r1, r4, lsr #28
   123c8:	andeq	r2, r1, r4, lsr #28
   123cc:	andeq	r2, r1, r4, lsr #28
   123d0:	andeq	r2, r1, r4, lsr #28
   123d4:	andeq	r2, r1, r4, lsr #28
   123d8:	andeq	r2, r1, r4, lsr #28
   123dc:	andeq	r2, r1, r4, lsr #28
   123e0:	andeq	r2, r1, r4, lsr #28
   123e4:	andeq	r2, r1, r4, lsr #28
   123e8:	andeq	r2, r1, r4, lsr #28
   123ec:	andeq	r2, r1, r4, lsr #28
   123f0:	andeq	r2, r1, r4, lsr #28
   123f4:	andeq	r2, r1, r4, lsr #28
   123f8:	andeq	r2, r1, r4, lsr #28
   123fc:	andeq	r2, r1, r4, lsr #28
   12400:	andeq	r2, r1, r4, lsr #28
   12404:	andeq	r2, r1, r4, lsr #28
   12408:	andeq	r2, r1, r4, lsr #28
   1240c:	andeq	r2, r1, r4, lsr #28
   12410:	andeq	r2, r1, r4, lsr #28
   12414:	andeq	r2, r1, r4, lsr #28
   12418:	andeq	r2, r1, r4, lsr #28
   1241c:	andeq	r2, r1, r4, lsr #28
   12420:	andeq	r2, r1, r4, lsr #28
   12424:	andeq	r2, r1, r4, lsr #28
   12428:	andeq	r2, r1, r4, lsr #28
   1242c:	andeq	r2, r1, r4, lsr #28
   12430:	strdeq	r2, [r1], -r0
   12434:	andeq	r2, r1, r4, lsr #28
   12438:	andeq	r2, r1, r4, lsr #28
   1243c:	andeq	r2, r1, r4, lsr #28
   12440:	andeq	r2, r1, r4, lsr #28
   12444:	andeq	r2, r1, r4, lsr #28
   12448:	andeq	r2, r1, r4, lsr #28
   1244c:	andeq	r2, r1, r4, lsr #28
   12450:	andeq	r2, r1, r4, lsr #28
   12454:	andeq	r2, r1, r4, lsr #28
   12458:	andeq	r2, r1, r4, lsr #28
   1245c:	andeq	r2, r1, r4, lsr #28
   12460:	andeq	r2, r1, r4, lsr #28
   12464:	andeq	r2, r1, r4, lsr #28
   12468:	andeq	r2, r1, r4, lsr #28
   1246c:	andeq	r2, r1, r4, lsr #28
   12470:	andeq	r2, r1, r4, lsr #28
   12474:	andeq	r2, r1, r4, lsr #28
   12478:	andeq	r2, r1, r4, lsr #28
   1247c:	andeq	r2, r1, r4, lsr #28
   12480:	andeq	r2, r1, r4, lsr #28
   12484:	andeq	r2, r1, r4, lsl #14
   12488:	andeq	r2, r1, r4, lsr #28
   1248c:	andeq	r2, r1, r4, lsr #28
   12490:	andeq	r2, r1, r4, lsr #28
   12494:	andeq	r2, r1, r4, lsr #28
   12498:	andeq	r2, r1, r4, lsr #28
   1249c:	andeq	r2, r1, r4, lsr #28
   124a0:	andeq	r2, r1, r0, lsl #15
   124a4:	muleq	r1, ip, r7
   124a8:			; <UNDEFINED> instruction: 0x000127b8
   124ac:	andeq	r2, r1, ip, asr #15
   124b0:	andeq	r2, r1, r4, lsr #28
   124b4:	andeq	r2, r1, r0, ror #15
   124b8:	andeq	r2, r1, r8, lsl #11
   124bc:	andeq	r2, r1, r4, lsl r8
   124c0:	andeq	r2, r1, ip, lsr #16
   124c4:	andeq	r2, r1, r4, lsr #28
   124c8:	andeq	r2, r1, r4, lsr #28
   124cc:	andeq	r2, r1, r4, lsr #28
   124d0:	andeq	r2, r1, r4, asr #16
   124d4:	andeq	r2, r1, ip, asr r8
   124d8:	andeq	r2, r1, r4, lsr #28
   124dc:	ldrdeq	r2, [r1], -ip
   124e0:	andeq	r2, r1, r4, lsr #28
   124e4:	andeq	r2, r1, r8, lsl r9
   124e8:	strdeq	r2, [r1], -r8
   124ec:	andeq	r2, r1, r0, lsl r9
   124f0:	andeq	r2, r1, r8, asr #19
   124f4:	andeq	r2, r1, r8, lsl #11
   124f8:	strdeq	r2, [r1], -r8
   124fc:	andeq	r2, r1, r8, asr #20
   12500:	andeq	r2, r1, ip, asr sl
   12504:	muleq	r1, ip, sl
   12508:	andeq	r2, r1, r4, lsr #28
   1250c:	andeq	r2, r1, r4, lsr #28
   12510:	andeq	r2, r1, r4, lsr #28
   12514:	andeq	r2, r1, r4, lsr #28
   12518:	andeq	r2, r1, r4, lsr #28
   1251c:	andeq	r2, r1, r4, lsr #28
   12520:	andeq	r2, r1, r4, lsr #22
   12524:	ldrdeq	r2, [r1], -r8
   12528:	andeq	r2, r1, r0, asr #22
   1252c:	andeq	r2, r1, r4, asr fp
   12530:	andeq	r2, r1, ip, ror #22
   12534:	andeq	r2, r1, r4, lsr #28
   12538:	andeq	r2, r1, r8, lsl #11
   1253c:	ldrdeq	r2, [r1], -r8
   12540:	andeq	r2, r1, r4, lsr #28
   12544:	andeq	r2, r1, ip, ror fp
   12548:	andeq	r2, r1, r8, lsr #23
   1254c:	andeq	r2, r1, r0, asr #23
   12550:	andeq	r2, r1, ip, ror #23
   12554:	andeq	r2, r1, r8, lsl ip
   12558:	andeq	r2, r1, r4, lsr #28
   1255c:	andeq	r2, r1, r0, ror #17
   12560:	muleq	r1, r0, ip
   12564:	andeq	r3, r1, r4, lsr r6
   12568:			; <UNDEFINED> instruction: 0x00012cb4
   1256c:	andeq	r2, r1, r0, asr sp
   12570:	andeq	r2, r1, r8, asr #27
   12574:	andeq	r2, r1, r4, lsr #28
   12578:	andeq	r2, r1, r0, lsl #28
   1257c:	andeq	r2, r1, ip, lsl lr
   12580:	andeq	r2, r1, r0, lsl pc
   12584:	andeq	r2, r1, r0, lsr r7
   12588:	cmp	r9, #69	; 0x45
   1258c:	beq	12e24 <dcngettext@plt+0x1978>
   12590:	ldr	r2, [sp, #68]	; 0x44
   12594:	str	lr, [sp, #88]	; 0x58
   12598:	movw	ip, #9363	; 0x2493
   1259c:	movw	r7, #382	; 0x17e
   125a0:	movt	ip, #37449	; 0x9249
   125a4:	ldr	lr, [r2, #24]
   125a8:	ldr	r5, [r2, #28]
   125ac:	ldr	r8, [r2, #20]
   125b0:	sub	r2, r5, lr
   125b4:	cmp	r8, #0
   125b8:	add	r2, r2, r7
   125bc:	smmla	r7, r2, ip, r2
   125c0:	asr	r4, r7, #2
   125c4:	add	r7, r4, r7, lsr #31
   125c8:	rsb	r7, r7, r7, lsl #3
   125cc:	sub	r2, r7, r2
   125d0:	add	r2, r5, r2
   125d4:	add	r4, r2, #3
   125d8:	mvn	r2, #99	; 0x63
   125dc:	movwmi	r2, #300	; 0x12c
   125e0:	add	r2, r2, r8
   125e4:	cmn	r4, #1
   125e8:	ble	12f24 <dcngettext@plt+0x1a78>
   125ec:	movw	r7, #365	; 0x16d
   125f0:	tst	r2, #3
   125f4:	bne	12640 <dcngettext@plt+0x1194>
   125f8:	movw	r7, #34079	; 0x851f
   125fc:	mov	r0, ip
   12600:	mov	ip, #100	; 0x64
   12604:	movt	r7, #20971	; 0x51eb
   12608:	smmul	r7, r2, r7
   1260c:	asr	r3, r7, #5
   12610:	add	r3, r3, r7, lsr #31
   12614:	mls	ip, r3, ip, r2
   12618:	asr	r3, r7, #7
   1261c:	add	r3, r3, r7, lsr #31
   12620:	mov	r7, #400	; 0x190
   12624:	mls	r2, r3, r7, r2
   12628:	movw	r7, #365	; 0x16d
   1262c:	cmp	r2, #0
   12630:	movweq	r7, #366	; 0x16e
   12634:	cmp	ip, #0
   12638:	mov	ip, r0
   1263c:	movwne	r7, #366	; 0x16e
   12640:	add	r2, lr, r7
   12644:	movw	r3, #382	; 0x17e
   12648:	sub	r2, r5, r2
   1264c:	add	r2, r2, r3
   12650:	smmla	r2, r2, ip, r2
   12654:	asr	r3, r2, #2
   12658:	add	r2, r3, r2, lsr #31
   1265c:	movw	r3, #379	; 0x17b
   12660:	rsb	r2, r2, r2, lsl #3
   12664:	add	r2, lr, r2
   12668:	sub	r2, r2, r3
   1266c:	cmn	r2, #1
   12670:	movgt	r4, r2
   12674:	mvn	r2, r2
   12678:	lsr	r3, r2, #31
   1267c:	ldr	r0, [sp, #84]	; 0x54
   12680:	cmp	r1, #71	; 0x47
   12684:	beq	12fac <dcngettext@plt+0x1b00>
   12688:	cmp	r1, #103	; 0x67
   1268c:	bne	12fd8 <dcngettext@plt+0x1b2c>
   12690:	movw	r2, #34079	; 0x851f
   12694:	mov	ip, #2
   12698:	mov	lr, #0
   1269c:	movt	r2, #20971	; 0x51eb
   126a0:	smmul	r7, r8, r2
   126a4:	asr	r5, r7, #5
   126a8:	add	r7, r5, r7, lsr #31
   126ac:	mov	r5, #100	; 0x64
   126b0:	mls	r7, r7, r5, r8
   126b4:	add	r7, r3, r7
   126b8:	smmul	r2, r7, r2
   126bc:	asr	r4, r2, #5
   126c0:	add	r2, r4, r2, lsr #31
   126c4:	mls	r2, r2, r5, r7
   126c8:	cmn	r2, #1
   126cc:	ble	1358c <dcngettext@plt+0x20e0>
   126d0:	mov	r3, r2
   126d4:	b	135d0 <dcngettext@plt+0x2124>
   126d8:	ldr	r2, [sp, #72]	; 0x48
   126dc:	mov	r7, #0
   126e0:	cmp	r9, #69	; 0x45
   126e4:	orr	lr, r2, lr
   126e8:	beq	12e24 <dcngettext@plt+0x1978>
   126ec:	b	13634 <dcngettext@plt+0x2188>
   126f0:	sub	r0, sl, #1
   126f4:	cmp	r0, r8
   126f8:	beq	133bc <dcngettext@plt+0x1f10>
   126fc:	sub	sl, sl, #1
   12700:	b	12e24 <dcngettext@plt+0x1978>
   12704:	mov	r7, #1
   12708:	ldrb	r2, [sl, r7]
   1270c:	cmp	r2, #58	; 0x3a
   12710:	bne	12724 <dcngettext@plt+0x1278>
   12714:	add	r7, r7, #1
   12718:	ldrb	r2, [sl, r7]
   1271c:	cmp	r2, #58	; 0x3a
   12720:	beq	12714 <dcngettext@plt+0x1268>
   12724:	cmp	r2, #122	; 0x7a
   12728:	bne	12e24 <dcngettext@plt+0x1978>
   1272c:	add	sl, sl, r7
   12730:	ldr	r3, [sp, #68]	; 0x44
   12734:	ldr	r2, [r3, #32]
   12738:	cmp	r2, #0
   1273c:	bmi	136f8 <dcngettext@plt+0x224c>
   12740:	ldr	r2, [r3, #36]	; 0x24
   12744:	str	lr, [sp, #88]	; 0x58
   12748:	cmp	r2, #0
   1274c:	bmi	13484 <dcngettext@plt+0x1fd8>
   12750:	mov	lr, #0
   12754:	bne	13488 <dcngettext@plt+0x1fdc>
   12758:	ldr	r3, [sp, #44]	; 0x2c
   1275c:	ldrb	r3, [r3]
   12760:	sub	r3, r3, #45	; 0x2d
   12764:	clz	r3, r3
   12768:	lsr	lr, r3, #5
   1276c:	cmp	r7, #3
   12770:	bls	13490 <dcngettext@plt+0x1fe4>
   12774:	ldr	ip, [sp, #92]	; 0x5c
   12778:	ldr	lr, [sp, #88]	; 0x58
   1277c:	b	12e28 <dcngettext@plt+0x197c>
   12780:	cmp	r9, #0
   12784:	bne	12e24 <dcngettext@plt+0x1978>
   12788:	ldr	r1, [sp, #72]	; 0x48
   1278c:	mov	r7, #0
   12790:	orr	lr, r1, lr
   12794:	mov	r1, #65	; 0x41
   12798:	b	13634 <dcngettext@plt+0x2188>
   1279c:	cmp	r9, #69	; 0x45
   127a0:	beq	12e24 <dcngettext@plt+0x1978>
   127a4:	ldr	r1, [sp, #72]	; 0x48
   127a8:	mov	r7, #0
   127ac:	orr	lr, r1, lr
   127b0:	mov	r1, #66	; 0x42
   127b4:	b	13634 <dcngettext@plt+0x2188>
   127b8:	cmp	r9, #69	; 0x45
   127bc:	bne	13260 <dcngettext@plt+0x1db4>
   127c0:	mov	r7, #0
   127c4:	mov	r1, #67	; 0x43
   127c8:	b	13634 <dcngettext@plt+0x2188>
   127cc:	cmp	r9, #0
   127d0:	bne	12e24 <dcngettext@plt+0x1978>
   127d4:	movw	r5, #31772	; 0x7c1c
   127d8:	movt	r5, #1
   127dc:	b	12918 <dcngettext@plt+0x146c>
   127e0:	cmp	r9, #0
   127e4:	bne	12e24 <dcngettext@plt+0x1978>
   127e8:	ldr	r0, [sp, #84]	; 0x54
   127ec:	movw	r5, #31781	; 0x7c25
   127f0:	movt	r5, #1
   127f4:	cmp	r0, #0
   127f8:	bne	135a8 <dcngettext@plt+0x20fc>
   127fc:	cmp	r6, #0
   12800:	bpl	135a8 <dcngettext@plt+0x20fc>
   12804:	mov	r0, #43	; 0x2b
   12808:	mov	r4, #4
   1280c:	str	r0, [sp, #84]	; 0x54
   12810:	b	12918 <dcngettext@plt+0x146c>
   12814:	cmp	r9, #69	; 0x45
   12818:	beq	12e24 <dcngettext@plt+0x1978>
   1281c:	ldr	r2, [sp, #36]	; 0x24
   12820:	str	lr, [sp, #88]	; 0x58
   12824:	ldr	r3, [r2]
   12828:	b	12fe8 <dcngettext@plt+0x1b3c>
   1282c:	mov	ip, #2
   12830:	cmp	r9, #69	; 0x45
   12834:	beq	12e24 <dcngettext@plt+0x1978>
   12838:	ldr	r3, [sp, #32]
   1283c:	str	lr, [sp, #88]	; 0x58
   12840:	b	12fec <dcngettext@plt+0x1b40>
   12844:	cmp	r9, #69	; 0x45
   12848:	beq	12e24 <dcngettext@plt+0x1978>
   1284c:	ldr	r2, [sp, #68]	; 0x44
   12850:	str	lr, [sp, #88]	; 0x58
   12854:	ldr	r3, [r2, #4]
   12858:	b	12fe8 <dcngettext@plt+0x1b3c>
   1285c:	cmp	r9, #69	; 0x45
   12860:	beq	12e24 <dcngettext@plt+0x1978>
   12864:	ldr	r2, [fp, #20]
   12868:	cmp	r6, #1
   1286c:	mov	r7, #0
   12870:	mov	r0, #8
   12874:	movwlt	r6, #9
   12878:	add	r1, r7, #9
   1287c:	cmp	r6, r1
   12880:	blt	128b0 <dcngettext@plt+0x1404>
   12884:	movw	r3, #26215	; 0x6667
   12888:	cmp	r1, #2
   1288c:	movt	r3, #26214	; 0x6666
   12890:	blt	132b8 <dcngettext@plt+0x1e0c>
   12894:	smmul	r5, r2, r3
   12898:	asr	r4, r5, #2
   1289c:	add	r5, r4, r5, lsr #31
   128a0:	add	r5, r5, r5, lsl #2
   128a4:	sub	r5, r2, r5, lsl #1
   128a8:	cmp	r5, #0
   128ac:	bne	132b8 <dcngettext@plt+0x1e0c>
   128b0:	movw	r1, #26215	; 0x6667
   128b4:	sub	r0, r0, #1
   128b8:	sub	r7, r7, #1
   128bc:	movt	r1, #26214	; 0x6666
   128c0:	smmul	r1, r2, r1
   128c4:	asr	r2, r1, #2
   128c8:	add	r2, r2, r1, lsr #31
   128cc:	add	r1, r7, #9
   128d0:	cmp	r6, r1
   128d4:	blt	128b0 <dcngettext@plt+0x1404>
   128d8:	b	12884 <dcngettext@plt+0x13d8>
   128dc:	mov	r7, #1
   128e0:	ldr	r1, [sp, #72]	; 0x48
   128e4:	orr	r7, r1, r7
   128e8:	eor	r1, r1, #1
   128ec:	and	lr, lr, r1
   128f0:	mov	r1, #112	; 0x70
   128f4:	b	13634 <dcngettext@plt+0x2188>
   128f8:	cmp	r9, #69	; 0x45
   128fc:	beq	12e24 <dcngettext@plt+0x1978>
   12900:	ldr	r2, [sp, #68]	; 0x44
   12904:	str	lr, [sp, #88]	; 0x58
   12908:	ldr	r3, [r2]
   1290c:	b	12fe8 <dcngettext@plt+0x1b3c>
   12910:	movw	r5, #31796	; 0x7c34
   12914:	movt	r5, #1
   12918:	ldr	r0, [sp, #84]	; 0x54
   1291c:	ldr	r2, [sp, #68]	; 0x44
   12920:	and	r9, lr, #1
   12924:	mov	r1, r5
   12928:	mov	r3, r9
   1292c:	mov	r7, r0
   12930:	stm	sp, {r0, r4}
   12934:	ldr	r0, [fp, #16]
   12938:	str	r0, [sp, #8]
   1293c:	ldr	r0, [fp, #20]
   12940:	str	r0, [sp, #12]
   12944:	mov	r0, #0
   12948:	bl	12060 <dcngettext@plt+0xbb4>
   1294c:	subs	r1, r7, #45	; 0x2d
   12950:	ldr	ip, [sp, #92]	; 0x5c
   12954:	movne	r1, r6
   12958:	cmp	r6, #0
   1295c:	mov	r6, r0
   12960:	movwmi	r1, #0
   12964:	cmp	r1, r0
   12968:	movhi	r6, r1
   1296c:	mvn	r2, ip
   12970:	cmp	r6, r2
   12974:	bcs	13aac <dcngettext@plt+0x2600>
   12978:	ldr	r2, [sp, #80]	; 0x50
   1297c:	cmp	r2, #0
   12980:	beq	13570 <dcngettext@plt+0x20c4>
   12984:	ldr	r8, [sp, #80]	; 0x50
   12988:	cmp	r1, r0
   1298c:	bls	13540 <dcngettext@plt+0x2094>
   12990:	sub	r7, r1, r0
   12994:	ldr	r0, [sp, #84]	; 0x54
   12998:	cmp	r0, #43	; 0x2b
   1299c:	cmpne	r0, #48	; 0x30
   129a0:	bne	13520 <dcngettext@plt+0x2074>
   129a4:	ldr	r8, [sp, #80]	; 0x50
   129a8:	cmp	r7, #0
   129ac:	beq	13540 <dcngettext@plt+0x2094>
   129b0:	mov	r0, #48	; 0x30
   129b4:	mov	r1, r8
   129b8:	bl	11434 <fputc@plt>
   129bc:	subs	r7, r7, #1
   129c0:	bne	129b0 <dcngettext@plt+0x1504>
   129c4:	b	13540 <dcngettext@plt+0x2094>
   129c8:	cmp	r9, #69	; 0x45
   129cc:	beq	12e24 <dcngettext@plt+0x1978>
   129d0:	ldr	r3, [sp, #68]	; 0x44
   129d4:	str	lr, [sp, #88]	; 0x58
   129d8:	ldr	r2, [r3, #24]
   129dc:	ldr	r3, [r3, #28]
   129e0:	sub	r2, r3, r2
   129e4:	movw	r3, #9363	; 0x2493
   129e8:	movt	r3, #37449	; 0x9249
   129ec:	add	r2, r2, #7
   129f0:	smmla	r2, r2, r3, r2
   129f4:	b	12a3c <dcngettext@plt+0x1590>
   129f8:	cmp	r9, #69	; 0x45
   129fc:	beq	12e24 <dcngettext@plt+0x1978>
   12a00:	ldr	r3, [sp, #68]	; 0x44
   12a04:	movw	r7, #9363	; 0x2493
   12a08:	str	lr, [sp, #88]	; 0x58
   12a0c:	movt	r7, #37449	; 0x9249
   12a10:	ldr	r2, [r3, #24]
   12a14:	ldr	r3, [r3, #28]
   12a18:	add	r2, r2, #6
   12a1c:	smmla	r5, r2, r7, r2
   12a20:	asr	r4, r5, #2
   12a24:	add	r5, r4, r5, lsr #31
   12a28:	rsb	r5, r5, r5, lsl #3
   12a2c:	sub	r2, r5, r2
   12a30:	add	r2, r3, r2
   12a34:	add	r2, r2, #7
   12a38:	smmla	r2, r2, r7, r2
   12a3c:	asr	r3, r2, #2
   12a40:	add	r3, r3, r2, lsr #31
   12a44:	b	12fe8 <dcngettext@plt+0x1b3c>
   12a48:	cmp	r9, #79	; 0x4f
   12a4c:	beq	12e24 <dcngettext@plt+0x1978>
   12a50:	mov	r7, #0
   12a54:	mov	r1, #88	; 0x58
   12a58:	b	13634 <dcngettext@plt+0x2188>
   12a5c:	cmp	r9, #69	; 0x45
   12a60:	beq	13514 <dcngettext@plt+0x2068>
   12a64:	cmp	r9, #79	; 0x4f
   12a68:	beq	12e24 <dcngettext@plt+0x1978>
   12a6c:	ldr	r2, [sp, #68]	; 0x44
   12a70:	movw	r3, #63636	; 0xf894
   12a74:	str	lr, [sp, #88]	; 0x58
   12a78:	mov	lr, #0
   12a7c:	mov	ip, #4
   12a80:	movt	r3, #65535	; 0xffff
   12a84:	ldr	r2, [r2, #20]
   12a88:	cmp	r2, r3
   12a8c:	movw	r3, #1900	; 0x76c
   12a90:	movwlt	lr, #1
   12a94:	add	r3, r2, r3
   12a98:	b	135d0 <dcngettext@plt+0x2124>
   12a9c:	ldr	r0, [sp, #84]	; 0x54
   12aa0:	str	lr, [sp, #88]	; 0x58
   12aa4:	subs	r4, r0, #45	; 0x2d
   12aa8:	ldr	r0, [sp, #44]	; 0x2c
   12aac:	bicne	r4, r6, r6, asr #31
   12ab0:	bl	1135c <strlen@plt>
   12ab4:	mov	r5, r0
   12ab8:	cmp	r4, r0
   12abc:	mov	r8, r0
   12ac0:	ldr	r0, [sp, #92]	; 0x5c
   12ac4:	movhi	r8, r4
   12ac8:	mvn	r0, r0
   12acc:	cmp	r8, r0
   12ad0:	bcs	13aac <dcngettext@plt+0x2600>
   12ad4:	ldr	r7, [sp, #80]	; 0x50
   12ad8:	cmp	r7, #0
   12adc:	beq	139b8 <dcngettext@plt+0x250c>
   12ae0:	cmp	r4, r5
   12ae4:	bls	13910 <dcngettext@plt+0x2464>
   12ae8:	ldr	r0, [sp, #84]	; 0x54
   12aec:	sub	r4, r4, r5
   12af0:	uxtb	r0, r0
   12af4:	cmp	r0, #43	; 0x2b
   12af8:	cmpne	r0, #48	; 0x30
   12afc:	bne	138f0 <dcngettext@plt+0x2444>
   12b00:	ldr	r6, [sp, #80]	; 0x50
   12b04:	cmp	r4, #0
   12b08:	beq	13910 <dcngettext@plt+0x2464>
   12b0c:	mov	r0, #48	; 0x30
   12b10:	mov	r1, r6
   12b14:	bl	11434 <fputc@plt>
   12b18:	subs	r4, r4, #1
   12b1c:	bne	12b0c <dcngettext@plt+0x1660>
   12b20:	b	13910 <dcngettext@plt+0x2464>
   12b24:	cmp	r9, #0
   12b28:	bne	12e24 <dcngettext@plt+0x1978>
   12b2c:	ldr	r1, [sp, #72]	; 0x48
   12b30:	mov	r7, #0
   12b34:	orr	lr, r1, lr
   12b38:	mov	r1, #97	; 0x61
   12b3c:	b	13634 <dcngettext@plt+0x2188>
   12b40:	cmp	r9, #79	; 0x4f
   12b44:	beq	12e24 <dcngettext@plt+0x1978>
   12b48:	mov	r7, #0
   12b4c:	mov	r1, #99	; 0x63
   12b50:	b	13634 <dcngettext@plt+0x2188>
   12b54:	cmp	r9, #69	; 0x45
   12b58:	beq	12e24 <dcngettext@plt+0x1978>
   12b5c:	ldr	r2, [sp, #28]
   12b60:	str	lr, [sp, #88]	; 0x58
   12b64:	ldr	r3, [r2]
   12b68:	b	12fe8 <dcngettext@plt+0x1b3c>
   12b6c:	ldr	r2, [sp, #28]
   12b70:	cmp	r9, #69	; 0x45
   12b74:	bne	12bb4 <dcngettext@plt+0x1708>
   12b78:	b	12e24 <dcngettext@plt+0x1978>
   12b7c:	cmp	r9, #69	; 0x45
   12b80:	beq	12e24 <dcngettext@plt+0x1978>
   12b84:	ldr	r2, [sp, #68]	; 0x44
   12b88:	str	lr, [sp, #88]	; 0x58
   12b8c:	mov	lr, #0
   12b90:	mov	ip, #3
   12b94:	ldr	r2, [r2, #28]
   12b98:	cmn	r2, #1
   12b9c:	add	r3, r2, #1
   12ba0:	movwlt	lr, #1
   12ba4:	b	12ff0 <dcngettext@plt+0x1b44>
   12ba8:	ldr	r2, [sp, #36]	; 0x24
   12bac:	cmp	r9, #69	; 0x45
   12bb0:	beq	12e24 <dcngettext@plt+0x1978>
   12bb4:	ldr	r3, [r2]
   12bb8:	ldr	r7, [sp, #84]	; 0x54
   12bbc:	b	12bd8 <dcngettext@plt+0x172c>
   12bc0:	ldr	r3, [sp, #32]
   12bc4:	ldr	r7, [sp, #84]	; 0x54
   12bc8:	cmp	r9, #69	; 0x45
   12bcc:	bne	12bd8 <dcngettext@plt+0x172c>
   12bd0:	ldr	ip, [sp, #92]	; 0x5c
   12bd4:	b	12e2c <dcngettext@plt+0x1980>
   12bd8:	cmp	r7, #0
   12bdc:	str	lr, [sp, #88]	; 0x58
   12be0:	movweq	r7, #95	; 0x5f
   12be4:	str	r7, [sp, #84]	; 0x54
   12be8:	b	12fe8 <dcngettext@plt+0x1b3c>
   12bec:	cmp	r9, #69	; 0x45
   12bf0:	beq	12e24 <dcngettext@plt+0x1978>
   12bf4:	ldr	r2, [sp, #68]	; 0x44
   12bf8:	str	lr, [sp, #88]	; 0x58
   12bfc:	mov	lr, #0
   12c00:	mov	ip, #2
   12c04:	ldr	r2, [r2, #16]
   12c08:	cmn	r2, #1
   12c0c:	add	r3, r2, #1
   12c10:	movwlt	lr, #1
   12c14:	b	12ff0 <dcngettext@plt+0x1b44>
   12c18:	ldr	r0, [sp, #84]	; 0x54
   12c1c:	ldr	ip, [sp, #92]	; 0x5c
   12c20:	subs	r0, r0, #45	; 0x2d
   12c24:	mvn	r1, ip
   12c28:	bicne	r0, r6, r6, asr #31
   12c2c:	cmp	r0, #1
   12c30:	mov	r4, r0
   12c34:	movls	r4, #1
   12c38:	cmp	r4, r1
   12c3c:	bcs	13aac <dcngettext@plt+0x2600>
   12c40:	ldr	r1, [sp, #80]	; 0x50
   12c44:	cmp	r1, #0
   12c48:	beq	13a6c <dcngettext@plt+0x25c0>
   12c4c:	ldr	r6, [sp, #80]	; 0x50
   12c50:	mov	r7, ip
   12c54:	cmp	r0, #2
   12c58:	bcc	139ec <dcngettext@plt+0x2540>
   12c5c:	ldr	r1, [sp, #84]	; 0x54
   12c60:	sub	r5, r0, #1
   12c64:	uxtb	r1, r1
   12c68:	cmp	r1, #43	; 0x2b
   12c6c:	cmpne	r1, #48	; 0x30
   12c70:	bne	139d4 <dcngettext@plt+0x2528>
   12c74:	ldr	r6, [sp, #80]	; 0x50
   12c78:	mov	r0, #48	; 0x30
   12c7c:	mov	r1, r6
   12c80:	bl	11434 <fputc@plt>
   12c84:	subs	r5, r5, #1
   12c88:	bne	12c78 <dcngettext@plt+0x17cc>
   12c8c:	b	139ec <dcngettext@plt+0x2540>
   12c90:	ldr	r2, [sp, #68]	; 0x44
   12c94:	mov	r3, #11
   12c98:	mov	ip, #1
   12c9c:	str	lr, [sp, #88]	; 0x58
   12ca0:	mov	lr, #0
   12ca4:	ldr	r2, [r2, #16]
   12ca8:	mul	r2, r2, r3
   12cac:	add	r3, ip, r2, asr #5
   12cb0:	b	12ff0 <dcngettext@plt+0x1b44>
   12cb4:	ldr	r2, [sp, #68]	; 0x44
   12cb8:	mov	r0, #28
   12cbc:	add	r1, sp, #96	; 0x60
   12cc0:	str	lr, [sp, #88]	; 0x58
   12cc4:	mov	r4, r1
   12cc8:	mov	r3, r2
   12ccc:	add	r2, r2, #16
   12cd0:	vld1.32	{d16-d17}, [r3], r0
   12cd4:	vld1.32	{d18-d19}, [r2]
   12cd8:	add	r2, r1, #16
   12cdc:	vld1.32	{d20-d21}, [r3]
   12ce0:	vst1.64	{d16-d17}, [r4], r0
   12ce4:	mvn	r0, #0
   12ce8:	vst1.64	{d18-d19}, [r2]
   12cec:	vst1.32	{d20-d21}, [r4]
   12cf0:	str	r0, [r4]
   12cf4:	ldr	r0, [fp, #16]
   12cf8:	bl	16440 <dcngettext@plt+0x4f94>
   12cfc:	ldr	r1, [r4]
   12d00:	cmp	r1, #0
   12d04:	bmi	13ac8 <dcngettext@plt+0x261c>
   12d08:	movw	r1, #26215	; 0x6667
   12d0c:	cmp	r0, #0
   12d10:	movt	r1, #26214	; 0x6666
   12d14:	bmi	13434 <dcngettext@plt+0x1f88>
   12d18:	ldr	r2, [sp, #20]
   12d1c:	mov	r3, r0
   12d20:	smmul	r7, r3, r1
   12d24:	asr	r5, r7, #2
   12d28:	add	r7, r5, r7, lsr #31
   12d2c:	add	r5, r7, r7, lsl #2
   12d30:	sub	r5, r3, r5, lsl #1
   12d34:	add	r3, r3, #9
   12d38:	cmp	r3, #18
   12d3c:	mov	r3, r7
   12d40:	add	r5, r5, #48	; 0x30
   12d44:	strb	r5, [r2], #-1
   12d48:	bhi	12d20 <dcngettext@plt+0x1874>
   12d4c:	b	13468 <dcngettext@plt+0x1fbc>
   12d50:	ldr	r0, [sp, #84]	; 0x54
   12d54:	ldr	ip, [sp, #92]	; 0x5c
   12d58:	subs	r0, r0, #45	; 0x2d
   12d5c:	mvn	r1, ip
   12d60:	bicne	r0, r6, r6, asr #31
   12d64:	cmp	r0, #1
   12d68:	mov	r4, r0
   12d6c:	movls	r4, #1
   12d70:	cmp	r4, r1
   12d74:	bcs	13aac <dcngettext@plt+0x2600>
   12d78:	ldr	r1, [sp, #80]	; 0x50
   12d7c:	cmp	r1, #0
   12d80:	beq	13a6c <dcngettext@plt+0x25c0>
   12d84:	ldr	r6, [sp, #80]	; 0x50
   12d88:	mov	r7, ip
   12d8c:	cmp	r0, #2
   12d90:	bcc	13a0c <dcngettext@plt+0x2560>
   12d94:	ldr	r1, [sp, #84]	; 0x54
   12d98:	sub	r5, r0, #1
   12d9c:	uxtb	r1, r1
   12da0:	cmp	r1, #43	; 0x2b
   12da4:	cmpne	r1, #48	; 0x30
   12da8:	bne	139f4 <dcngettext@plt+0x2548>
   12dac:	ldr	r6, [sp, #80]	; 0x50
   12db0:	mov	r0, #48	; 0x30
   12db4:	mov	r1, r6
   12db8:	bl	11434 <fputc@plt>
   12dbc:	subs	r5, r5, #1
   12dc0:	bne	12db0 <dcngettext@plt+0x1904>
   12dc4:	b	13a0c <dcngettext@plt+0x2560>
   12dc8:	ldr	r2, [sp, #68]	; 0x44
   12dcc:	movw	r3, #9363	; 0x2493
   12dd0:	str	lr, [sp, #88]	; 0x58
   12dd4:	mov	ip, #1
   12dd8:	movt	r3, #37449	; 0x9249
   12ddc:	ldr	r2, [r2, #24]
   12de0:	add	r2, r2, #6
   12de4:	smmla	r3, r2, r3, r2
   12de8:	asr	r7, r3, #2
   12dec:	add	r3, r7, r3, lsr #31
   12df0:	rsb	r3, r3, r3, lsl #3
   12df4:	sub	r2, r2, r3
   12df8:	add	r3, r2, #1
   12dfc:	b	12fec <dcngettext@plt+0x1b40>
   12e00:	cmp	r9, #69	; 0x45
   12e04:	beq	12e24 <dcngettext@plt+0x1978>
   12e08:	ldr	r2, [sp, #68]	; 0x44
   12e0c:	str	lr, [sp, #88]	; 0x58
   12e10:	mov	ip, #1
   12e14:	ldr	r3, [r2, #24]
   12e18:	b	12fec <dcngettext@plt+0x1b40>
   12e1c:	cmp	r9, #79	; 0x4f
   12e20:	bne	13370 <dcngettext@plt+0x1ec4>
   12e24:	ldr	ip, [sp, #92]	; 0x5c
   12e28:	ldr	r7, [sp, #84]	; 0x54
   12e2c:	subs	r0, r7, #45	; 0x2d
   12e30:	sub	r1, sl, r8
   12e34:	bicne	r0, r6, r6, asr #31
   12e38:	add	r5, r1, #1
   12e3c:	mvn	r1, ip
   12e40:	mov	r4, r5
   12e44:	cmp	r0, r5
   12e48:	movhi	r4, r0
   12e4c:	cmp	r4, r1
   12e50:	bcs	13aac <dcngettext@plt+0x2600>
   12e54:	mov	r1, r7
   12e58:	ldr	r7, [sp, #80]	; 0x50
   12e5c:	cmp	r7, #0
   12e60:	beq	1215c <dcngettext@plt+0xcb0>
   12e64:	cmp	r0, r5
   12e68:	str	lr, [sp, #88]	; 0x58
   12e6c:	bls	12ec8 <dcngettext@plt+0x1a1c>
   12e70:	sub	r6, r0, r5
   12e74:	uxtb	r0, r1
   12e78:	cmp	r0, #43	; 0x2b
   12e7c:	cmpne	r0, #48	; 0x30
   12e80:	bne	12ea8 <dcngettext@plt+0x19fc>
   12e84:	ldr	r7, [sp, #80]	; 0x50
   12e88:	cmp	r6, #0
   12e8c:	beq	12ec8 <dcngettext@plt+0x1a1c>
   12e90:	mov	r0, #48	; 0x30
   12e94:	mov	r1, r7
   12e98:	bl	11434 <fputc@plt>
   12e9c:	subs	r6, r6, #1
   12ea0:	bne	12e90 <dcngettext@plt+0x19e4>
   12ea4:	b	12ec8 <dcngettext@plt+0x1a1c>
   12ea8:	ldr	r7, [sp, #80]	; 0x50
   12eac:	cmp	r6, #0
   12eb0:	beq	12ec8 <dcngettext@plt+0x1a1c>
   12eb4:	mov	r0, #32
   12eb8:	mov	r1, r7
   12ebc:	bl	11434 <fputc@plt>
   12ec0:	subs	r6, r6, #1
   12ec4:	bne	12eb4 <dcngettext@plt+0x1a08>
   12ec8:	ldr	r0, [sp, #88]	; 0x58
   12ecc:	tst	r0, #1
   12ed0:	beq	12144 <dcngettext@plt+0xc98>
   12ed4:	ldr	r7, [sp, #80]	; 0x50
   12ed8:	cmp	r5, #0
   12edc:	beq	1215c <dcngettext@plt+0xcb0>
   12ee0:	mvn	r0, sl
   12ee4:	add	r6, r0, r8
   12ee8:	bl	11308 <__ctype_toupper_loc@plt>
   12eec:	mov	r5, r0
   12ef0:	ldrb	r0, [r8], #1
   12ef4:	ldr	r1, [r5]
   12ef8:	ldr	r0, [r1, r0, lsl #2]
   12efc:	mov	r1, r7
   12f00:	bl	11434 <fputc@plt>
   12f04:	adds	r6, r6, #1
   12f08:	bcc	12ef0 <dcngettext@plt+0x1a44>
   12f0c:	b	1215c <dcngettext@plt+0xcb0>
   12f10:	cmp	r9, #69	; 0x45
   12f14:	bne	1337c <dcngettext@plt+0x1ed0>
   12f18:	mov	r7, #0
   12f1c:	mov	r1, #121	; 0x79
   12f20:	b	13634 <dcngettext@plt+0x2188>
   12f24:	sub	r2, r2, #1
   12f28:	movw	r4, #365	; 0x16d
   12f2c:	tst	r2, #3
   12f30:	bne	12f74 <dcngettext@plt+0x1ac8>
   12f34:	movw	r7, #34079	; 0x851f
   12f38:	movt	r7, #20971	; 0x51eb
   12f3c:	smmul	r7, r2, r7
   12f40:	asr	r4, r7, #5
   12f44:	add	r3, r4, r7, lsr #31
   12f48:	mov	r4, #100	; 0x64
   12f4c:	mls	r3, r3, r4, r2
   12f50:	asr	r4, r7, #7
   12f54:	add	r4, r4, r7, lsr #31
   12f58:	mov	r7, #400	; 0x190
   12f5c:	mls	r2, r4, r7, r2
   12f60:	movw	r4, #365	; 0x16d
   12f64:	cmp	r2, #0
   12f68:	movweq	r4, #366	; 0x16e
   12f6c:	cmp	r3, #0
   12f70:	movwne	r4, #366	; 0x16e
   12f74:	movw	r7, #382	; 0x17e
   12f78:	add	r2, r4, r5
   12f7c:	sub	r3, r7, lr
   12f80:	add	r2, r3, r2
   12f84:	smmla	r2, r2, ip, r2
   12f88:	asr	r7, r2, #2
   12f8c:	add	r2, r7, r2, lsr #31
   12f90:	rsb	r2, r2, r2, lsl #3
   12f94:	sub	r2, r2, r3
   12f98:	mvn	r3, #0
   12f9c:	add	r4, r2, #3
   12fa0:	ldr	r0, [sp, #84]	; 0x54
   12fa4:	cmp	r1, #71	; 0x47
   12fa8:	bne	12688 <dcngettext@plt+0x11dc>
   12fac:	movw	r2, #63636	; 0xf894
   12fb0:	mov	lr, #0
   12fb4:	mov	ip, #4
   12fb8:	movt	r2, #65535	; 0xffff
   12fbc:	sub	r2, r2, r3
   12fc0:	cmp	r8, r2
   12fc4:	add	r2, r8, r3
   12fc8:	movw	r3, #1900	; 0x76c
   12fcc:	movwlt	lr, #1
   12fd0:	add	r3, r2, r3
   12fd4:	b	135d4 <dcngettext@plt+0x2128>
   12fd8:	smmla	r2, r4, ip, r4
   12fdc:	asr	r3, r2, #2
   12fe0:	add	r2, r3, r2, lsr #31
   12fe4:	add	r3, r2, #1
   12fe8:	mov	ip, #2
   12fec:	lsr	lr, r3, #31
   12ff0:	cmp	lr, #0
   12ff4:	mov	r2, #0
   12ff8:	mov	r0, #0
   12ffc:	movwne	lr, #1
   13000:	cmp	r9, #79	; 0x4f
   13004:	moveq	r7, #0
   13008:	cmpeq	lr, #0
   1300c:	beq	13630 <dcngettext@plt+0x2184>
   13010:	ldr	r5, [sp, #60]	; 0x3c
   13014:	ldr	r7, [sp, #84]	; 0x54
   13018:	cmp	lr, #0
   1301c:	rsbne	r3, r3, #0
   13020:	tst	r2, #1
   13024:	asr	r2, r2, #1
   13028:	movne	r1, #58	; 0x3a
   1302c:	strbne	r1, [r5, #-1]!
   13030:	movw	r1, #52429	; 0xcccd
   13034:	cmp	r3, #9
   13038:	movt	r1, #52428	; 0xcccc
   1303c:	umull	r4, r1, r3, r1
   13040:	lsr	r4, r1, #3
   13044:	add	r1, r4, r4, lsl #2
   13048:	sub	r1, r3, r1, lsl #1
   1304c:	mov	r3, r4
   13050:	orr	r1, r1, #48	; 0x30
   13054:	strb	r1, [r5, #-1]!
   13058:	bhi	13020 <dcngettext@plt+0x1b74>
   1305c:	cmp	r2, #0
   13060:	mov	r3, r4
   13064:	bne	13020 <dcngettext@plt+0x1b74>
   13068:	cmp	r6, #0
   1306c:	movmi	r6, ip
   13070:	cmp	r0, #0
   13074:	movwne	r0, #43	; 0x2b
   13078:	cmp	r7, #0
   1307c:	movweq	r7, #48	; 0x30
   13080:	ldr	r1, [sp, #60]	; 0x3c
   13084:	cmp	lr, #0
   13088:	mov	r2, r6
   1308c:	movwne	r0, #45	; 0x2d
   13090:	cmp	r0, #0
   13094:	subne	r2, r2, #1
   13098:	sub	r8, r1, r5
   1309c:	sub	r1, r2, r8
   130a0:	mov	r2, r7
   130a4:	cmp	r1, #1
   130a8:	movwlt	r1, #0
   130ac:	subs	r7, r7, #45	; 0x2d
   130b0:	movne	r7, r1
   130b4:	cmp	r0, #0
   130b8:	beq	13134 <dcngettext@plt+0x1c88>
   130bc:	mov	r9, r2
   130c0:	cmp	r2, #95	; 0x5f
   130c4:	bne	131b0 <dcngettext@plt+0x1d04>
   130c8:	str	r8, [sp, #72]	; 0x48
   130cc:	ldr	r8, [sp, #80]	; 0x50
   130d0:	str	r0, [sp, #84]	; 0x54
   130d4:	cmp	r8, #0
   130d8:	cmpne	r7, #0
   130dc:	beq	130f8 <dcngettext@plt+0x1c4c>
   130e0:	mov	r4, r7
   130e4:	mov	r0, #32
   130e8:	mov	r1, r8
   130ec:	bl	11434 <fputc@plt>
   130f0:	subs	r4, r4, #1
   130f4:	bne	130e4 <dcngettext@plt+0x1c38>
   130f8:	ldr	r0, [sp, #92]	; 0x5c
   130fc:	sub	r6, r6, r7
   13100:	ldr	r8, [sp, #72]	; 0x48
   13104:	add	r0, r7, r0
   13108:	mov	r7, r0
   1310c:	ldr	r0, [sp, #84]	; 0x54
   13110:	cmn	r7, #3
   13114:	bhi	13aac <dcngettext@plt+0x2600>
   13118:	ldr	r1, [sp, #80]	; 0x50
   1311c:	cmp	r1, #0
   13120:	beq	13128 <dcngettext@plt+0x1c7c>
   13124:	bl	11434 <fputc@plt>
   13128:	sub	r6, r6, #1
   1312c:	add	r7, r7, #1
   13130:	b	1313c <dcngettext@plt+0x1c90>
   13134:	ldr	r7, [sp, #92]	; 0x5c
   13138:	mov	r9, r2
   1313c:	subs	r0, r9, #45	; 0x2d
   13140:	mov	r4, r8
   13144:	mvn	r1, r7
   13148:	bicne	r0, r6, r6, asr #31
   1314c:	cmp	r0, r8
   13150:	movhi	r4, r0
   13154:	cmp	r4, r1
   13158:	bcs	13aac <dcngettext@plt+0x2600>
   1315c:	mov	r1, r8
   13160:	ldr	r8, [sp, #80]	; 0x50
   13164:	str	r7, [sp, #92]	; 0x5c
   13168:	cmp	r8, #0
   1316c:	beq	13240 <dcngettext@plt+0x1d94>
   13170:	mov	r8, r1
   13174:	cmp	r0, r1
   13178:	bls	131e0 <dcngettext@plt+0x1d34>
   1317c:	cmp	r9, #43	; 0x2b
   13180:	sub	r6, r0, r8
   13184:	cmpne	r9, #48	; 0x30
   13188:	bne	131c0 <dcngettext@plt+0x1d14>
   1318c:	ldr	r7, [sp, #80]	; 0x50
   13190:	cmp	r6, #0
   13194:	beq	131e0 <dcngettext@plt+0x1d34>
   13198:	mov	r0, #48	; 0x30
   1319c:	mov	r1, r7
   131a0:	bl	11434 <fputc@plt>
   131a4:	subs	r6, r6, #1
   131a8:	bne	13198 <dcngettext@plt+0x1cec>
   131ac:	b	131e0 <dcngettext@plt+0x1d34>
   131b0:	ldr	r7, [sp, #92]	; 0x5c
   131b4:	cmn	r7, #3
   131b8:	bls	13118 <dcngettext@plt+0x1c6c>
   131bc:	b	13aac <dcngettext@plt+0x2600>
   131c0:	ldr	r7, [sp, #80]	; 0x50
   131c4:	cmp	r6, #0
   131c8:	beq	131e0 <dcngettext@plt+0x1d34>
   131cc:	mov	r0, #32
   131d0:	mov	r1, r7
   131d4:	bl	11434 <fputc@plt>
   131d8:	subs	r6, r6, #1
   131dc:	bne	131cc <dcngettext@plt+0x1d20>
   131e0:	ldr	r0, [sp, #88]	; 0x58
   131e4:	tst	r0, #1
   131e8:	beq	13228 <dcngettext@plt+0x1d7c>
   131ec:	cmp	r8, #0
   131f0:	ldr	r8, [sp, #80]	; 0x50
   131f4:	beq	13240 <dcngettext@plt+0x1d94>
   131f8:	ldr	r0, [sp, #24]
   131fc:	add	r7, r0, r5
   13200:	bl	11308 <__ctype_toupper_loc@plt>
   13204:	mov	r6, r0
   13208:	ldrb	r0, [r5], #1
   1320c:	ldr	r1, [r6]
   13210:	ldr	r0, [r1, r0, lsl #2]
   13214:	mov	r1, r8
   13218:	bl	11434 <fputc@plt>
   1321c:	adds	r7, r7, #1
   13220:	bcc	13208 <dcngettext@plt+0x1d5c>
   13224:	b	13240 <dcngettext@plt+0x1d94>
   13228:	mov	r1, r8
   1322c:	ldr	r8, [sp, #80]	; 0x50
   13230:	mov	r0, r5
   13234:	mov	r2, #1
   13238:	mov	r3, r8
   1323c:	bl	1126c <fwrite@plt>
   13240:	ldr	ip, [sp, #92]	; 0x5c
   13244:	mov	r7, r8
   13248:	add	ip, r4, ip
   1324c:	ldrb	r3, [sl, #1]!
   13250:	mvn	r6, #0
   13254:	cmp	r3, #0
   13258:	bne	12174 <dcngettext@plt+0xcc8>
   1325c:	b	13a94 <dcngettext@plt+0x25e8>
   13260:	ldr	r2, [sp, #68]	; 0x44
   13264:	movw	r7, #63636	; 0xf894
   13268:	mov	r3, #0
   1326c:	mvn	r5, #98	; 0x62
   13270:	str	lr, [sp, #88]	; 0x58
   13274:	mov	lr, #0
   13278:	mov	ip, #2
   1327c:	movt	r7, #65535	; 0xffff
   13280:	ldr	r2, [r2, #20]
   13284:	cmp	r2, r7
   13288:	movwge	r3, #1
   1328c:	cmp	r2, r7
   13290:	and	r3, r3, r2, lsr #31
   13294:	movwlt	lr, #1
   13298:	smlabb	r3, r3, r5, r2
   1329c:	movw	r5, #34079	; 0x851f
   132a0:	movt	r5, #20971	; 0x51eb
   132a4:	smmul	r3, r3, r5
   132a8:	asr	r5, r3, #5
   132ac:	add	r3, r5, r3, lsr #31
   132b0:	add	r3, r3, #19
   132b4:	b	135d0 <dcngettext@plt+0x2124>
   132b8:	cmp	r1, #1
   132bc:	sub	ip, fp, #46	; 0x2e
   132c0:	blt	132f4 <dcngettext@plt+0x1e48>
   132c4:	smmul	r5, r2, r3
   132c8:	cmp	r0, #0
   132cc:	asr	r4, r5, #2
   132d0:	add	r5, r4, r5, lsr #31
   132d4:	add	r4, r5, r5, lsl #2
   132d8:	sub	r2, r2, r4, lsl #1
   132dc:	add	r2, r2, #48	; 0x30
   132e0:	strb	r2, [ip, r0]
   132e4:	sub	r2, r0, #1
   132e8:	mov	r0, r2
   132ec:	mov	r2, r5
   132f0:	bgt	132c4 <dcngettext@plt+0x1e18>
   132f4:	ldr	r0, [sp, #84]	; 0x54
   132f8:	cmp	r0, #0
   132fc:	movweq	r0, #48	; 0x30
   13300:	str	r0, [sp, #84]	; 0x54
   13304:	ldr	r0, [sp, #92]	; 0x5c
   13308:	mvn	r0, r0
   1330c:	cmp	r1, r0
   13310:	bcs	13aac <dcngettext@plt+0x2600>
   13314:	ldr	r0, [sp, #80]	; 0x50
   13318:	cmp	r0, #0
   1331c:	beq	13838 <dcngettext@plt+0x238c>
   13320:	tst	lr, #1
   13324:	beq	13828 <dcngettext@plt+0x237c>
   13328:	ldr	r8, [sp, #80]	; 0x50
   1332c:	cmn	r7, #9
   13330:	sub	r9, fp, #46	; 0x2e
   13334:	beq	13838 <dcngettext@plt+0x238c>
   13338:	mov	r4, #0
   1333c:	bl	11308 <__ctype_toupper_loc@plt>
   13340:	mov	r1, r8
   13344:	mov	r5, r0
   13348:	ldrb	r0, [r9, -r4]
   1334c:	ldr	r2, [r5]
   13350:	ldr	r0, [r2, r0, lsl #2]
   13354:	bl	11434 <fputc@plt>
   13358:	sub	r4, r4, #1
   1335c:	mov	r1, r8
   13360:	add	r0, r7, r4
   13364:	cmn	r0, #9
   13368:	bne	13348 <dcngettext@plt+0x1e9c>
   1336c:	b	13838 <dcngettext@plt+0x238c>
   13370:	mov	r7, #0
   13374:	mov	r1, #120	; 0x78
   13378:	b	13634 <dcngettext@plt+0x2188>
   1337c:	ldr	r2, [sp, #68]	; 0x44
   13380:	movw	r3, #34079	; 0x851f
   13384:	str	lr, [sp, #88]	; 0x58
   13388:	mov	ip, #2
   1338c:	mov	lr, #0
   13390:	movt	r3, #20971	; 0x51eb
   13394:	ldr	r2, [r2, #20]
   13398:	smmul	r3, r2, r3
   1339c:	asr	r7, r3, #5
   133a0:	add	r3, r7, r3, lsr #31
   133a4:	mov	r7, #100	; 0x64
   133a8:	mls	r4, r3, r7, r2
   133ac:	cmn	r4, #1
   133b0:	ble	135bc <dcngettext@plt+0x2110>
   133b4:	mov	r3, r4
   133b8:	b	135d0 <dcngettext@plt+0x2124>
   133bc:	ldr	r0, [sp, #84]	; 0x54
   133c0:	ldr	ip, [sp, #92]	; 0x5c
   133c4:	subs	r0, r0, #45	; 0x2d
   133c8:	mvn	r1, ip
   133cc:	bicne	r0, r6, r6, asr #31
   133d0:	cmp	r0, #1
   133d4:	mov	r4, r0
   133d8:	movls	r4, #1
   133dc:	cmp	r4, r1
   133e0:	bcs	13aac <dcngettext@plt+0x2600>
   133e4:	ldr	r1, [sp, #80]	; 0x50
   133e8:	cmp	r1, #0
   133ec:	beq	13a6c <dcngettext@plt+0x25c0>
   133f0:	ldr	r6, [sp, #80]	; 0x50
   133f4:	mov	r7, ip
   133f8:	cmp	r0, #2
   133fc:	bcc	13a5c <dcngettext@plt+0x25b0>
   13400:	ldr	r1, [sp, #84]	; 0x54
   13404:	sub	r5, r0, #1
   13408:	uxtb	r1, r1
   1340c:	cmp	r1, #43	; 0x2b
   13410:	cmpne	r1, #48	; 0x30
   13414:	bne	13a44 <dcngettext@plt+0x2598>
   13418:	ldr	r6, [sp, #80]	; 0x50
   1341c:	mov	r0, #48	; 0x30
   13420:	mov	r1, r6
   13424:	bl	11434 <fputc@plt>
   13428:	subs	r5, r5, #1
   1342c:	bne	1341c <dcngettext@plt+0x1f70>
   13430:	b	13a5c <dcngettext@plt+0x25b0>
   13434:	ldr	r2, [sp, #20]
   13438:	mov	r3, r0
   1343c:	smmul	r7, r3, r1
   13440:	asr	r5, r7, #2
   13444:	add	r7, r5, r7, lsr #31
   13448:	add	r5, r7, r7, lsl #2
   1344c:	rsb	r5, r3, r5, lsl #1
   13450:	add	r3, r3, #9
   13454:	cmp	r3, #18
   13458:	mov	r3, r7
   1345c:	add	r5, r5, #48	; 0x30
   13460:	strb	r5, [r2], #-1
   13464:	bhi	1343c <dcngettext@plt+0x1f90>
   13468:	ldr	r7, [sp, #84]	; 0x54
   1346c:	cmp	r6, #0
   13470:	lsr	lr, r0, #31
   13474:	add	r5, r2, #1
   13478:	mov	r0, #0
   1347c:	movwmi	r6, #1
   13480:	b	13078 <dcngettext@plt+0x1bcc>
   13484:	mov	lr, #1
   13488:	cmp	r7, #3
   1348c:	bhi	12774 <dcngettext@plt+0x12c8>
   13490:	movw	r3, #34953	; 0x8889
   13494:	movt	r3, #34952	; 0x8888
   13498:	smmla	r5, r2, r3, r2
   1349c:	asr	r4, r5, #5
   134a0:	add	r4, r4, r5, lsr #31
   134a4:	smmla	r3, r4, r3, r4
   134a8:	asr	r5, r3, #5
   134ac:	add	r3, r5, r3, lsr #31
   134b0:	rsb	r3, r3, r3, lsl #4
   134b4:	sub	ip, r4, r3, lsl #2
   134b8:	movw	r3, #46021	; 0xb3c5
   134bc:	rsb	r4, r4, r4, lsl #4
   134c0:	movt	r3, #37282	; 0x91a2
   134c4:	smmla	r3, r2, r3, r2
   134c8:	sub	r2, r2, r4, lsl #2
   134cc:	add	r4, pc, #8
   134d0:	asr	r5, r3, #11
   134d4:	add	r3, r5, r3, lsr #31
   134d8:	ldr	pc, [r4, r7, lsl #2]
   134dc:	andeq	r3, r1, ip, ror #9
   134e0:	andeq	r3, r1, ip, lsl sl
   134e4:	strdeq	r3, [r1], -r8
   134e8:	strdeq	r3, [r1], -r0
   134ec:	mov	r2, #100	; 0x64
   134f0:	mla	r3, r3, r2, ip
   134f4:	mov	ip, #5
   134f8:	mov	r0, #1
   134fc:	mov	r2, #0
   13500:	cmp	r9, #79	; 0x4f
   13504:	moveq	r7, #0
   13508:	cmpeq	lr, #0
   1350c:	bne	13010 <dcngettext@plt+0x1b64>
   13510:	b	13630 <dcngettext@plt+0x2184>
   13514:	mov	r7, #0
   13518:	mov	r1, #89	; 0x59
   1351c:	b	13634 <dcngettext@plt+0x2188>
   13520:	ldr	r8, [sp, #80]	; 0x50
   13524:	cmp	r7, #0
   13528:	beq	13540 <dcngettext@plt+0x2094>
   1352c:	mov	r0, #32
   13530:	mov	r1, r8
   13534:	bl	11434 <fputc@plt>
   13538:	subs	r7, r7, #1
   1353c:	bne	1352c <dcngettext@plt+0x2080>
   13540:	ldr	r0, [sp, #84]	; 0x54
   13544:	ldr	r2, [sp, #68]	; 0x44
   13548:	mov	r1, r5
   1354c:	mov	r3, r9
   13550:	stm	sp, {r0, r4}
   13554:	ldr	r0, [fp, #16]
   13558:	str	r0, [sp, #8]
   1355c:	ldr	r0, [fp, #20]
   13560:	str	r0, [sp, #12]
   13564:	mov	r0, r8
   13568:	bl	12060 <dcngettext@plt+0xbb4>
   1356c:	ldr	ip, [sp, #92]	; 0x5c
   13570:	ldr	r7, [sp, #80]	; 0x50
   13574:	add	ip, r6, ip
   13578:	ldrb	r3, [sl, #1]!
   1357c:	mvn	r6, #0
   13580:	cmp	r3, #0
   13584:	bne	12174 <dcngettext@plt+0xcc8>
   13588:	b	13a94 <dcngettext@plt+0x25e8>
   1358c:	movw	r4, #63636	; 0xf894
   13590:	movt	r4, #65535	; 0xffff
   13594:	sub	r4, r4, r3
   13598:	add	r3, r2, #100	; 0x64
   1359c:	cmp	r8, r4
   135a0:	rsblt	r3, r2, #0
   135a4:	b	135d0 <dcngettext@plt+0x2124>
   135a8:	cmp	r6, #6
   135ac:	mov	r0, r6
   135b0:	movle	r0, #6
   135b4:	sub	r4, r0, #6
   135b8:	b	12918 <dcngettext@plt+0x146c>
   135bc:	movw	r5, #63636	; 0xf894
   135c0:	add	r3, r4, #100	; 0x64
   135c4:	movt	r5, #65535	; 0xffff
   135c8:	cmp	r2, r5
   135cc:	rsblt	r3, r4, #0
   135d0:	ldr	r0, [sp, #84]	; 0x54
   135d4:	ldr	r2, [fp, #8]
   135d8:	cmp	r0, #0
   135dc:	moveq	r0, r2
   135e0:	mov	r2, #0
   135e4:	mov	r4, r0
   135e8:	str	r0, [sp, #84]	; 0x54
   135ec:	cmp	r0, #43	; 0x2b
   135f0:	mov	r0, #0
   135f4:	bne	13000 <dcngettext@plt+0x1b54>
   135f8:	cmp	ip, r6
   135fc:	mov	r5, #0
   13600:	movw	r7, #9999	; 0x270f
   13604:	mov	r4, #0
   13608:	movwlt	r5, #1
   1360c:	cmp	ip, #2
   13610:	movweq	r7, #99	; 0x63
   13614:	cmp	r7, r3
   13618:	movwcc	r4, #1
   1361c:	orr	r0, r5, r4
   13620:	cmp	r9, #79	; 0x4f
   13624:	moveq	r7, #0
   13628:	cmpeq	lr, #0
   1362c:	bne	13010 <dcngettext@plt+0x1b64>
   13630:	ldr	lr, [sp, #88]	; 0x58
   13634:	movw	r2, #9504	; 0x2520
   13638:	cmp	r9, #0
   1363c:	ldr	r3, [sp, #68]	; 0x44
   13640:	mov	r0, #0
   13644:	str	lr, [sp, #88]	; 0x58
   13648:	strh	r2, [fp, #-51]	; 0xffffffcd
   1364c:	ldr	r2, [sp, #64]	; 0x40
   13650:	ldrne	r2, [sp, #48]	; 0x30
   13654:	strbne	r9, [fp, #-49]	; 0xffffffcf
   13658:	strb	r0, [r2, #1]
   1365c:	strb	r1, [r2]
   13660:	add	r0, sp, #96	; 0x60
   13664:	sub	r2, fp, #51	; 0x33
   13668:	mov	r1, #1024	; 0x400
   1366c:	bl	112d8 <strftime@plt>
   13670:	cmp	r0, #0
   13674:	beq	136f8 <dcngettext@plt+0x224c>
   13678:	ldr	r1, [sp, #84]	; 0x54
   1367c:	sub	r5, r0, #1
   13680:	ldr	r0, [sp, #92]	; 0x5c
   13684:	mov	r8, r5
   13688:	subs	r1, r1, #45	; 0x2d
   1368c:	mvn	r0, r0
   13690:	movne	r1, r6
   13694:	cmp	r6, #0
   13698:	movwmi	r1, #0
   1369c:	cmp	r1, r5
   136a0:	movhi	r8, r1
   136a4:	cmp	r8, r0
   136a8:	bcs	13aac <dcngettext@plt+0x2600>
   136ac:	ldr	r4, [sp, #80]	; 0x50
   136b0:	cmp	r4, #0
   136b4:	beq	137d0 <dcngettext@plt+0x2324>
   136b8:	cmp	r1, r5
   136bc:	bls	13734 <dcngettext@plt+0x2288>
   136c0:	ldr	r0, [sp, #84]	; 0x54
   136c4:	sub	r6, r1, r5
   136c8:	cmp	r0, #43	; 0x2b
   136cc:	cmpne	r0, #48	; 0x30
   136d0:	bne	13714 <dcngettext@plt+0x2268>
   136d4:	ldr	r4, [sp, #80]	; 0x50
   136d8:	cmp	r6, #0
   136dc:	beq	13734 <dcngettext@plt+0x2288>
   136e0:	mov	r0, #48	; 0x30
   136e4:	mov	r1, r4
   136e8:	bl	11434 <fputc@plt>
   136ec:	subs	r6, r6, #1
   136f0:	bne	136e0 <dcngettext@plt+0x2234>
   136f4:	b	13734 <dcngettext@plt+0x2288>
   136f8:	ldr	ip, [sp, #92]	; 0x5c
   136fc:	ldr	r7, [sp, #80]	; 0x50
   13700:	ldrb	r3, [sl, #1]!
   13704:	mvn	r6, #0
   13708:	cmp	r3, #0
   1370c:	bne	12174 <dcngettext@plt+0xcc8>
   13710:	b	13a94 <dcngettext@plt+0x25e8>
   13714:	ldr	r4, [sp, #80]	; 0x50
   13718:	cmp	r6, #0
   1371c:	beq	13734 <dcngettext@plt+0x2288>
   13720:	mov	r0, #32
   13724:	mov	r1, r4
   13728:	bl	11434 <fputc@plt>
   1372c:	subs	r6, r6, #1
   13730:	bne	13720 <dcngettext@plt+0x2274>
   13734:	tst	r7, #1
   13738:	beq	13774 <dcngettext@plt+0x22c8>
   1373c:	ldr	r4, [sp, #80]	; 0x50
   13740:	cmp	r5, #0
   13744:	beq	137d0 <dcngettext@plt+0x2324>
   13748:	bl	112fc <__ctype_tolower_loc@plt>
   1374c:	ldr	r7, [sp, #40]	; 0x28
   13750:	mov	r6, r0
   13754:	ldrb	r0, [r7], #1
   13758:	ldr	r1, [r6]
   1375c:	ldr	r0, [r1, r0, lsl #2]
   13760:	mov	r1, r4
   13764:	bl	11434 <fputc@plt>
   13768:	subs	r5, r5, #1
   1376c:	bne	13754 <dcngettext@plt+0x22a8>
   13770:	b	137d0 <dcngettext@plt+0x2324>
   13774:	ldr	r0, [sp, #88]	; 0x58
   13778:	tst	r0, #1
   1377c:	beq	137b8 <dcngettext@plt+0x230c>
   13780:	ldr	r4, [sp, #80]	; 0x50
   13784:	cmp	r5, #0
   13788:	beq	137d0 <dcngettext@plt+0x2324>
   1378c:	bl	11308 <__ctype_toupper_loc@plt>
   13790:	ldr	r7, [sp, #40]	; 0x28
   13794:	mov	r6, r0
   13798:	ldrb	r0, [r7], #1
   1379c:	ldr	r1, [r6]
   137a0:	ldr	r0, [r1, r0, lsl #2]
   137a4:	mov	r1, r4
   137a8:	bl	11434 <fputc@plt>
   137ac:	subs	r5, r5, #1
   137b0:	bne	13798 <dcngettext@plt+0x22ec>
   137b4:	b	137d0 <dcngettext@plt+0x2324>
   137b8:	ldr	r4, [sp, #80]	; 0x50
   137bc:	ldr	r0, [sp, #40]	; 0x28
   137c0:	mov	r1, r5
   137c4:	mov	r2, #1
   137c8:	mov	r3, r4
   137cc:	bl	1126c <fwrite@plt>
   137d0:	ldr	ip, [sp, #92]	; 0x5c
   137d4:	mov	r7, r4
   137d8:	add	ip, r8, ip
   137dc:	ldrb	r3, [sl, #1]!
   137e0:	mvn	r6, #0
   137e4:	cmp	r3, #0
   137e8:	bne	12174 <dcngettext@plt+0xcc8>
   137ec:	b	13a94 <dcngettext@plt+0x25e8>
   137f0:	cmp	r2, #0
   137f4:	beq	13a14 <dcngettext@plt+0x2568>
   137f8:	movw	r4, #10000	; 0x2710
   137fc:	mov	r0, #1
   13800:	mla	r2, r3, r4, r2
   13804:	mov	r3, #100	; 0x64
   13808:	mla	r3, ip, r3, r2
   1380c:	mov	ip, #9
   13810:	mov	r2, #20
   13814:	cmp	r9, #79	; 0x4f
   13818:	moveq	r7, #0
   1381c:	cmpeq	lr, #0
   13820:	bne	13010 <dcngettext@plt+0x1b64>
   13824:	b	13630 <dcngettext@plt+0x2184>
   13828:	ldr	r3, [sp, #80]	; 0x50
   1382c:	sub	r0, fp, #46	; 0x2e
   13830:	mov	r2, #1
   13834:	bl	1126c <fwrite@plt>
   13838:	ldr	r0, [sp, #84]	; 0x54
   1383c:	mov	r4, #0
   13840:	mvn	r1, #9
   13844:	cmp	r0, #45	; 0x2d
   13848:	subne	r0, r6, r7
   1384c:	subne	r0, r0, #9
   13850:	bicne	r4, r0, r0, asr #31
   13854:	ldr	r0, [sp, #92]	; 0x5c
   13858:	add	r0, r0, r7
   1385c:	sub	r0, r1, r0
   13860:	cmp	r4, r0
   13864:	bcs	13aac <dcngettext@plt+0x2600>
   13868:	ldr	r6, [sp, #80]	; 0x50
   1386c:	cmp	r6, #0
   13870:	cmpne	r4, #0
   13874:	bne	138a0 <dcngettext@plt+0x23f4>
   13878:	ldr	r0, [sp, #92]	; 0x5c
   1387c:	add	r0, r0, r4
   13880:	add	r0, r0, r7
   13884:	mov	r7, r6
   13888:	add	ip, r0, #9
   1388c:	ldrb	r3, [sl, #1]!
   13890:	mvn	r6, #0
   13894:	cmp	r3, #0
   13898:	bne	12174 <dcngettext@plt+0xcc8>
   1389c:	b	13a94 <dcngettext@plt+0x25e8>
   138a0:	ldr	r0, [sp, #84]	; 0x54
   138a4:	uxtb	r0, r0
   138a8:	cmp	r0, #43	; 0x2b
   138ac:	beq	138bc <dcngettext@plt+0x2410>
   138b0:	cmp	r0, #48	; 0x30
   138b4:	mov	r5, r4
   138b8:	bne	138d8 <dcngettext@plt+0x242c>
   138bc:	mov	r5, r4
   138c0:	mov	r0, #48	; 0x30
   138c4:	mov	r1, r6
   138c8:	bl	11434 <fputc@plt>
   138cc:	subs	r5, r5, #1
   138d0:	bne	138c0 <dcngettext@plt+0x2414>
   138d4:	b	13878 <dcngettext@plt+0x23cc>
   138d8:	mov	r0, #32
   138dc:	mov	r1, r6
   138e0:	bl	11434 <fputc@plt>
   138e4:	subs	r5, r5, #1
   138e8:	bne	138d8 <dcngettext@plt+0x242c>
   138ec:	b	13878 <dcngettext@plt+0x23cc>
   138f0:	ldr	r6, [sp, #80]	; 0x50
   138f4:	cmp	r4, #0
   138f8:	beq	13910 <dcngettext@plt+0x2464>
   138fc:	mov	r0, #32
   13900:	mov	r1, r6
   13904:	bl	11434 <fputc@plt>
   13908:	subs	r4, r4, #1
   1390c:	bne	138fc <dcngettext@plt+0x2450>
   13910:	ldr	r0, [sp, #72]	; 0x48
   13914:	tst	r0, #1
   13918:	beq	13954 <dcngettext@plt+0x24a8>
   1391c:	ldr	r7, [sp, #80]	; 0x50
   13920:	cmp	r5, #0
   13924:	beq	139b8 <dcngettext@plt+0x250c>
   13928:	bl	112fc <__ctype_tolower_loc@plt>
   1392c:	ldr	r4, [sp, #44]	; 0x2c
   13930:	mov	r6, r0
   13934:	ldrb	r0, [r4], #1
   13938:	ldr	r1, [r6]
   1393c:	ldr	r0, [r1, r0, lsl #2]
   13940:	mov	r1, r7
   13944:	bl	11434 <fputc@plt>
   13948:	subs	r5, r5, #1
   1394c:	bne	13934 <dcngettext@plt+0x2488>
   13950:	b	139b8 <dcngettext@plt+0x250c>
   13954:	ldr	r1, [sp, #88]	; 0x58
   13958:	eor	r0, r0, #1
   1395c:	and	r0, r1, r0
   13960:	tst	r0, #1
   13964:	beq	139a0 <dcngettext@plt+0x24f4>
   13968:	ldr	r7, [sp, #80]	; 0x50
   1396c:	cmp	r5, #0
   13970:	beq	139b8 <dcngettext@plt+0x250c>
   13974:	bl	11308 <__ctype_toupper_loc@plt>
   13978:	ldr	r4, [sp, #44]	; 0x2c
   1397c:	mov	r6, r0
   13980:	ldrb	r0, [r4], #1
   13984:	ldr	r1, [r6]
   13988:	ldr	r0, [r1, r0, lsl #2]
   1398c:	mov	r1, r7
   13990:	bl	11434 <fputc@plt>
   13994:	subs	r5, r5, #1
   13998:	bne	13980 <dcngettext@plt+0x24d4>
   1399c:	b	139b8 <dcngettext@plt+0x250c>
   139a0:	ldr	r7, [sp, #80]	; 0x50
   139a4:	ldr	r0, [sp, #44]	; 0x2c
   139a8:	mov	r1, r5
   139ac:	mov	r2, #1
   139b0:	mov	r3, r7
   139b4:	bl	1126c <fwrite@plt>
   139b8:	ldr	ip, [sp, #92]	; 0x5c
   139bc:	add	ip, r8, ip
   139c0:	ldrb	r3, [sl, #1]!
   139c4:	mvn	r6, #0
   139c8:	cmp	r3, #0
   139cc:	bne	12174 <dcngettext@plt+0xcc8>
   139d0:	b	13a94 <dcngettext@plt+0x25e8>
   139d4:	ldr	r6, [sp, #80]	; 0x50
   139d8:	mov	r0, #32
   139dc:	mov	r1, r6
   139e0:	bl	11434 <fputc@plt>
   139e4:	subs	r5, r5, #1
   139e8:	bne	139d8 <dcngettext@plt+0x252c>
   139ec:	mov	r0, #10
   139f0:	b	13a60 <dcngettext@plt+0x25b4>
   139f4:	ldr	r6, [sp, #80]	; 0x50
   139f8:	mov	r0, #32
   139fc:	mov	r1, r6
   13a00:	bl	11434 <fputc@plt>
   13a04:	subs	r5, r5, #1
   13a08:	bne	139f8 <dcngettext@plt+0x254c>
   13a0c:	mov	r0, #9
   13a10:	b	13a60 <dcngettext@plt+0x25b4>
   13a14:	cmp	ip, #0
   13a18:	beq	13a88 <dcngettext@plt+0x25dc>
   13a1c:	mov	r2, #100	; 0x64
   13a20:	mov	r0, #1
   13a24:	mla	r3, r3, r2, ip
   13a28:	mov	ip, #6
   13a2c:	mov	r2, #4
   13a30:	cmp	r9, #79	; 0x4f
   13a34:	moveq	r7, #0
   13a38:	cmpeq	lr, #0
   13a3c:	bne	13010 <dcngettext@plt+0x1b64>
   13a40:	b	13630 <dcngettext@plt+0x2184>
   13a44:	ldr	r6, [sp, #80]	; 0x50
   13a48:	mov	r0, #32
   13a4c:	mov	r1, r6
   13a50:	bl	11434 <fputc@plt>
   13a54:	subs	r5, r5, #1
   13a58:	bne	13a48 <dcngettext@plt+0x259c>
   13a5c:	ldrb	r0, [sl]
   13a60:	mov	r1, r6
   13a64:	bl	11434 <fputc@plt>
   13a68:	mov	ip, r7
   13a6c:	ldr	r7, [sp, #80]	; 0x50
   13a70:	add	ip, r4, ip
   13a74:	ldrb	r3, [sl, #1]!
   13a78:	mvn	r6, #0
   13a7c:	cmp	r3, #0
   13a80:	bne	12174 <dcngettext@plt+0xcc8>
   13a84:	b	13a94 <dcngettext@plt+0x25e8>
   13a88:	mov	ip, #3
   13a8c:	b	134f8 <dcngettext@plt+0x204c>
   13a90:	mov	ip, #0
   13a94:	ldr	r0, [sp, #56]	; 0x38
   13a98:	ldr	r1, [sp, #52]	; 0x34
   13a9c:	str	r1, [r0]
   13aa0:	mov	r0, ip
   13aa4:	sub	sp, fp, #28
   13aa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13aac:	mov	r0, #34	; 0x22
   13ab0:	ldr	r1, [sp, #56]	; 0x38
   13ab4:	mov	ip, #0
   13ab8:	str	r0, [r1]
   13abc:	mov	r0, ip
   13ac0:	sub	sp, fp, #28
   13ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ac8:	mov	r0, #75	; 0x4b
   13acc:	b	13ab0 <dcngettext@plt+0x2604>
   13ad0:	push	{r4, r5, r6, r7, fp, lr}
   13ad4:	add	fp, sp, #16
   13ad8:	sub	sp, sp, #8
   13adc:	mov	r4, r0
   13ae0:	ldr	r0, [r0, #4]
   13ae4:	mov	r5, r3
   13ae8:	mov	r6, r2
   13aec:	ldr	r1, [r4, #8]
   13af0:	cmp	r1, r0
   13af4:	bne	13b10 <dcngettext@plt+0x2664>
   13af8:	ldrd	r0, [r4, #16]
   13afc:	cmp	r1, r0
   13b00:	bne	13b10 <dcngettext@plt+0x2664>
   13b04:	ldr	r0, [r4, #36]	; 0x24
   13b08:	cmp	r0, #0
   13b0c:	beq	13b28 <dcngettext@plt+0x267c>
   13b10:	mov	r0, r4
   13b14:	mov	r2, r6
   13b18:	mov	r3, r5
   13b1c:	sub	sp, fp, #16
   13b20:	pop	{r4, r5, r6, r7, fp, lr}
   13b24:	b	113d4 <fseeko64@plt>
   13b28:	ldr	r7, [fp, #8]
   13b2c:	mov	r0, r4
   13b30:	bl	113b0 <fileno@plt>
   13b34:	mov	r2, r6
   13b38:	mov	r3, r5
   13b3c:	str	r7, [sp]
   13b40:	bl	11278 <lseek64@plt>
   13b44:	and	r2, r0, r1
   13b48:	cmn	r2, #1
   13b4c:	beq	13b6c <dcngettext@plt+0x26c0>
   13b50:	strd	r0, [r4, #80]	; 0x50
   13b54:	ldr	r0, [r4]
   13b58:	bic	r0, r0, #16
   13b5c:	str	r0, [r4]
   13b60:	mov	r0, #0
   13b64:	sub	sp, fp, #16
   13b68:	pop	{r4, r5, r6, r7, fp, pc}
   13b6c:	mvn	r0, #0
   13b70:	sub	sp, fp, #16
   13b74:	pop	{r4, r5, r6, r7, fp, pc}
   13b78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b7c:	add	fp, sp, #24
   13b80:	sub	sp, sp, #8
   13b84:	movw	r6, #37256	; 0x9188
   13b88:	mov	r4, #0
   13b8c:	cmp	r0, #2
   13b90:	movt	r6, #2
   13b94:	ldr	r7, [r6]
   13b98:	str	r4, [r6]
   13b9c:	bne	13c10 <dcngettext@plt+0x2764>
   13ba0:	mov	r8, r3
   13ba4:	movw	r3, #31820	; 0x7c4c
   13ba8:	mov	r5, r2
   13bac:	movw	r2, #31805	; 0x7c3d
   13bb0:	mov	r0, #2
   13bb4:	str	r4, [sp]
   13bb8:	movt	r2, #1
   13bbc:	movt	r3, #1
   13bc0:	bl	11320 <getopt_long@plt>
   13bc4:	cmp	r0, #104	; 0x68
   13bc8:	beq	13c04 <dcngettext@plt+0x2758>
   13bcc:	cmp	r0, #118	; 0x76
   13bd0:	bne	13c10 <dcngettext@plt+0x2764>
   13bd4:	movw	r0, #37252	; 0x9184
   13bd8:	ldr	r3, [fp, #8]
   13bdc:	add	r1, fp, #16
   13be0:	mov	r2, r8
   13be4:	movt	r0, #2
   13be8:	str	r1, [sp, #4]
   13bec:	str	r1, [sp]
   13bf0:	mov	r1, r5
   13bf4:	ldr	r0, [r0]
   13bf8:	bl	16a98 <dcngettext@plt+0x55ec>
   13bfc:	mov	r0, #0
   13c00:	bl	11344 <exit@plt>
   13c04:	ldr	r1, [fp, #12]
   13c08:	mov	r0, #0
   13c0c:	blx	r1
   13c10:	movw	r0, #37240	; 0x9178
   13c14:	str	r7, [r6]
   13c18:	movt	r0, #2
   13c1c:	str	r4, [r0]
   13c20:	sub	sp, fp, #24
   13c24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c2c:	add	fp, sp, #24
   13c30:	sub	sp, sp, #8
   13c34:	mov	r8, r3
   13c38:	ldr	r3, [fp, #12]
   13c3c:	movw	r7, #37256	; 0x9188
   13c40:	movw	r5, #30944	; 0x78e0
   13c44:	mov	r9, r2
   13c48:	mov	r2, #1
   13c4c:	mov	r6, #0
   13c50:	movt	r7, #2
   13c54:	movt	r5, #1
   13c58:	str	r6, [sp]
   13c5c:	ldr	r4, [r7]
   13c60:	str	r2, [r7]
   13c64:	movw	r2, #31805	; 0x7c3d
   13c68:	cmp	r3, #0
   13c6c:	movw	r3, #31820	; 0x7c4c
   13c70:	movt	r2, #1
   13c74:	movt	r3, #1
   13c78:	movne	r2, r5
   13c7c:	bl	11320 <getopt_long@plt>
   13c80:	cmn	r0, #1
   13c84:	beq	13cb0 <dcngettext@plt+0x2804>
   13c88:	cmp	r0, #104	; 0x68
   13c8c:	beq	13ca4 <dcngettext@plt+0x27f8>
   13c90:	cmp	r0, #118	; 0x76
   13c94:	beq	13cbc <dcngettext@plt+0x2810>
   13c98:	movw	r0, #37164	; 0x912c
   13c9c:	movt	r0, #2
   13ca0:	ldr	r6, [r0]
   13ca4:	ldr	r1, [fp, #16]
   13ca8:	mov	r0, r6
   13cac:	blx	r1
   13cb0:	str	r4, [r7]
   13cb4:	sub	sp, fp, #24
   13cb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cbc:	movw	r0, #37252	; 0x9184
   13cc0:	ldr	r3, [fp, #8]
   13cc4:	add	r1, fp, #20
   13cc8:	mov	r2, r8
   13ccc:	movt	r0, #2
   13cd0:	str	r1, [sp, #4]
   13cd4:	str	r1, [sp]
   13cd8:	mov	r1, r9
   13cdc:	ldr	r0, [r0]
   13ce0:	bl	16a98 <dcngettext@plt+0x55ec>
   13ce4:	mov	r0, #0
   13ce8:	bl	11344 <exit@plt>
   13cec:	push	{r4, r5, fp, lr}
   13cf0:	add	fp, sp, #8
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d8c <dcngettext@plt+0x28e0>
   13cfc:	mov	r1, #47	; 0x2f
   13d00:	mov	r4, r0
   13d04:	bl	1141c <strrchr@plt>
   13d08:	cmp	r0, #0
   13d0c:	mov	r5, r4
   13d10:	addne	r5, r0, #1
   13d14:	sub	r0, r5, r4
   13d18:	cmp	r0, #7
   13d1c:	blt	13d70 <dcngettext@plt+0x28c4>
   13d20:	movw	r1, #31924	; 0x7cb4
   13d24:	sub	r0, r5, #7
   13d28:	mov	r2, #7
   13d2c:	movt	r1, #1
   13d30:	bl	11488 <strncmp@plt>
   13d34:	cmp	r0, #0
   13d38:	bne	13d70 <dcngettext@plt+0x28c4>
   13d3c:	movw	r1, #31932	; 0x7cbc
   13d40:	mov	r0, r5
   13d44:	mov	r2, #3
   13d48:	movt	r1, #1
   13d4c:	bl	11488 <strncmp@plt>
   13d50:	cmp	r0, #0
   13d54:	beq	13d60 <dcngettext@plt+0x28b4>
   13d58:	mov	r4, r5
   13d5c:	b	13d70 <dcngettext@plt+0x28c4>
   13d60:	movw	r0, #37232	; 0x9170
   13d64:	add	r4, r5, #3
   13d68:	movt	r0, #2
   13d6c:	str	r4, [r0]
   13d70:	movw	r0, #37236	; 0x9174
   13d74:	movt	r0, #2
   13d78:	str	r4, [r0]
   13d7c:	movw	r0, #37276	; 0x919c
   13d80:	movt	r0, #2
   13d84:	str	r4, [r0]
   13d88:	pop	{r4, r5, fp, pc}
   13d8c:	movw	r0, #37248	; 0x9180
   13d90:	mov	r1, #55	; 0x37
   13d94:	mov	r2, #1
   13d98:	movt	r0, #2
   13d9c:	ldr	r3, [r0]
   13da0:	movw	r0, #31868	; 0x7c7c
   13da4:	movt	r0, #1
   13da8:	bl	1126c <fwrite@plt>
   13dac:	bl	11494 <abort@plt>
   13db0:	push	{r4, r5, r6, sl, fp, lr}
   13db4:	add	fp, sp, #16
   13db8:	mov	r4, r0
   13dbc:	movw	r0, #37280	; 0x91a0
   13dc0:	movt	r0, #2
   13dc4:	cmp	r4, #0
   13dc8:	moveq	r4, r0
   13dcc:	bl	11374 <__errno_location@plt>
   13dd0:	ldr	r6, [r0]
   13dd4:	mov	r5, r0
   13dd8:	mov	r0, r4
   13ddc:	mov	r1, #48	; 0x30
   13de0:	bl	17240 <dcngettext@plt+0x5d94>
   13de4:	str	r6, [r5]
   13de8:	pop	{r4, r5, r6, sl, fp, pc}
   13dec:	movw	r1, #37280	; 0x91a0
   13df0:	cmp	r0, #0
   13df4:	movt	r1, #2
   13df8:	movne	r1, r0
   13dfc:	ldr	r0, [r1]
   13e00:	bx	lr
   13e04:	movw	r2, #37280	; 0x91a0
   13e08:	cmp	r0, #0
   13e0c:	movt	r2, #2
   13e10:	movne	r2, r0
   13e14:	str	r1, [r2]
   13e18:	bx	lr
   13e1c:	movw	r3, #37280	; 0x91a0
   13e20:	cmp	r0, #0
   13e24:	and	r2, r2, #1
   13e28:	movt	r3, #2
   13e2c:	movne	r3, r0
   13e30:	ubfx	r0, r1, #5, #3
   13e34:	and	r1, r1, #31
   13e38:	add	ip, r3, r0, lsl #2
   13e3c:	mov	r0, #1
   13e40:	ldr	r3, [ip, #8]
   13e44:	and	r0, r0, r3, lsr r1
   13e48:	eor	r2, r0, r2
   13e4c:	eor	r1, r3, r2, lsl r1
   13e50:	str	r1, [ip, #8]
   13e54:	bx	lr
   13e58:	movw	r2, #37280	; 0x91a0
   13e5c:	cmp	r0, #0
   13e60:	movt	r2, #2
   13e64:	movne	r2, r0
   13e68:	ldr	r0, [r2, #4]
   13e6c:	str	r1, [r2, #4]
   13e70:	bx	lr
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	movw	r3, #37280	; 0x91a0
   13e80:	cmp	r0, #0
   13e84:	movt	r3, #2
   13e88:	movne	r3, r0
   13e8c:	cmp	r1, #0
   13e90:	mov	r0, #10
   13e94:	cmpne	r2, #0
   13e98:	str	r0, [r3]
   13e9c:	bne	13ea4 <dcngettext@plt+0x29f8>
   13ea0:	bl	11494 <abort@plt>
   13ea4:	str	r1, [r3, #40]	; 0x28
   13ea8:	str	r2, [r3, #44]	; 0x2c
   13eac:	pop	{fp, pc}
   13eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13eb4:	add	fp, sp, #28
   13eb8:	sub	sp, sp, #20
   13ebc:	mov	r7, r0
   13ec0:	ldr	r0, [fp, #8]
   13ec4:	movw	r5, #37280	; 0x91a0
   13ec8:	mov	r8, r3
   13ecc:	mov	r9, r2
   13ed0:	mov	sl, r1
   13ed4:	movt	r5, #2
   13ed8:	cmp	r0, #0
   13edc:	movne	r5, r0
   13ee0:	bl	11374 <__errno_location@plt>
   13ee4:	ldr	r2, [r5, #40]	; 0x28
   13ee8:	ldr	r3, [r5, #44]	; 0x2c
   13eec:	mov	r4, r0
   13ef0:	ldm	r5, {r0, r1}
   13ef4:	add	r5, r5, #8
   13ef8:	ldr	r6, [r4]
   13efc:	stm	sp, {r0, r1, r5}
   13f00:	mov	r0, r7
   13f04:	mov	r1, sl
   13f08:	str	r2, [sp, #12]
   13f0c:	str	r3, [sp, #16]
   13f10:	mov	r2, r9
   13f14:	mov	r3, r8
   13f18:	bl	13f28 <dcngettext@plt+0x2a7c>
   13f1c:	str	r6, [r4]
   13f20:	sub	sp, fp, #28
   13f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f2c:	add	fp, sp, #28
   13f30:	sub	sp, sp, #156	; 0x9c
   13f34:	str	r0, [fp, #-84]	; 0xffffffac
   13f38:	add	r0, r2, #1
   13f3c:	mov	r6, r1
   13f40:	mov	r7, r3
   13f44:	str	r2, [fp, #-80]	; 0xffffffb0
   13f48:	str	r0, [sp, #80]	; 0x50
   13f4c:	ldr	r0, [fp, #12]
   13f50:	and	r1, r0, #1
   13f54:	str	r1, [sp, #36]	; 0x24
   13f58:	and	r1, r0, #4
   13f5c:	str	r1, [sp, #32]
   13f60:	ubfx	r8, r0, #1, #1
   13f64:	bl	11284 <__ctype_get_mb_cur_max@plt>
   13f68:	str	r0, [sp, #40]	; 0x28
   13f6c:	ldr	r0, [fp, #24]
   13f70:	ldr	r4, [fp, #8]
   13f74:	mov	r1, #0
   13f78:	str	r1, [fp, #-52]	; 0xffffffcc
   13f7c:	mov	r1, #0
   13f80:	str	r1, [sp, #60]	; 0x3c
   13f84:	mov	r1, #1
   13f88:	str	r1, [sp, #84]	; 0x54
   13f8c:	str	r0, [sp, #76]	; 0x4c
   13f90:	ldr	r0, [fp, #20]
   13f94:	str	r0, [sp, #72]	; 0x48
   13f98:	mov	r0, #0
   13f9c:	str	r0, [sp, #56]	; 0x38
   13fa0:	mov	r0, #0
   13fa4:	str	r0, [fp, #-88]	; 0xffffffa8
   13fa8:	mov	r0, #0
   13fac:	str	r0, [fp, #-72]	; 0xffffffb8
   13fb0:	mov	r0, #0
   13fb4:	cmp	r4, #10
   13fb8:	bhi	152d4 <dcngettext@plt+0x3e28>
   13fbc:	add	r1, pc, #24
   13fc0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13fc4:	ldr	lr, [fp, #-80]	; 0xffffffb0
   13fc8:	mov	r5, r6
   13fcc:	mov	r9, #0
   13fd0:	mov	r2, #1
   13fd4:	mov	r3, #0
   13fd8:	ldr	pc, [r1, r4, lsl #2]
   13fdc:	andeq	r4, r1, r4, lsr #1
   13fe0:	andeq	r4, r1, r0, ror #1
   13fe4:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13fe8:	muleq	r1, ip, r0
   13fec:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ff0:	andeq	r4, r1, r8, lsr r1
   13ff4:	andeq	r4, r1, r4, asr #1
   13ff8:			; <UNDEFINED> instruction: 0x000143b0
   13ffc:	andeq	r4, r1, r8
   14000:	andeq	r4, r1, r8
   14004:	andeq	r4, r1, r0, asr #4
   14008:	movw	r6, #32016	; 0x7d10
   1400c:	mov	r0, #0
   14010:	mov	r2, #5
   14014:	movt	r6, #1
   14018:	mov	r1, r6
   1401c:	bl	11218 <dcgettext@plt>
   14020:	cmp	r0, r6
   14024:	str	r0, [sp, #72]	; 0x48
   14028:	bne	14218 <dcngettext@plt+0x2d6c>
   1402c:	bl	174e4 <dcngettext@plt+0x6038>
   14030:	ldrb	r1, [r0]
   14034:	and	r1, r1, #223	; 0xdf
   14038:	cmp	r1, #71	; 0x47
   1403c:	beq	14198 <dcngettext@plt+0x2cec>
   14040:	cmp	r1, #85	; 0x55
   14044:	bne	141fc <dcngettext@plt+0x2d50>
   14048:	ldrb	r1, [r0, #1]
   1404c:	and	r1, r1, #223	; 0xdf
   14050:	cmp	r1, #84	; 0x54
   14054:	bne	141fc <dcngettext@plt+0x2d50>
   14058:	ldrb	r1, [r0, #2]
   1405c:	and	r1, r1, #223	; 0xdf
   14060:	cmp	r1, #70	; 0x46
   14064:	bne	141fc <dcngettext@plt+0x2d50>
   14068:	ldrb	r1, [r0, #3]
   1406c:	cmp	r1, #45	; 0x2d
   14070:	bne	141fc <dcngettext@plt+0x2d50>
   14074:	ldrb	r1, [r0, #4]
   14078:	cmp	r1, #56	; 0x38
   1407c:	bne	141fc <dcngettext@plt+0x2d50>
   14080:	ldrb	r0, [r0, #5]
   14084:	cmp	r0, #0
   14088:	movw	r0, #32020	; 0x7d14
   1408c:	movt	r0, #1
   14090:	str	r0, [sp, #72]	; 0x48
   14094:	bne	141fc <dcngettext@plt+0x2d50>
   14098:	b	14218 <dcngettext@plt+0x2d6c>
   1409c:	mov	r0, #1
   140a0:	b	140e0 <dcngettext@plt+0x2c34>
   140a4:	mov	r4, #0
   140a8:	mov	r9, #0
   140ac:	mov	r2, r0
   140b0:	b	14130 <dcngettext@plt+0x2c84>
   140b4:	tst	r8, #1
   140b8:	bne	140e0 <dcngettext@plt+0x2c34>
   140bc:	mov	r2, r0
   140c0:	b	14108 <dcngettext@plt+0x2c5c>
   140c4:	mov	r0, #1
   140c8:	mov	r9, #0
   140cc:	mov	r4, #5
   140d0:	b	1414c <dcngettext@plt+0x2ca0>
   140d4:	mov	r2, #1
   140d8:	tst	r8, #1
   140dc:	beq	14108 <dcngettext@plt+0x2c5c>
   140e0:	mov	r1, #1
   140e4:	mov	r9, #0
   140e8:	mov	r4, #2
   140ec:	mov	r2, r0
   140f0:	mov	r3, #1
   140f4:	str	r1, [fp, #-72]	; 0xffffffb8
   140f8:	movw	r1, #32018	; 0x7d12
   140fc:	movt	r1, #1
   14100:	str	r1, [fp, #-88]	; 0xffffffa8
   14104:	b	143b0 <dcngettext@plt+0x2f04>
   14108:	cmp	r5, #0
   1410c:	mov	r9, #1
   14110:	mov	r4, #2
   14114:	movne	r0, #39	; 0x27
   14118:	strbne	r0, [ip]
   1411c:	movw	r0, #32018	; 0x7d12
   14120:	movt	r0, #1
   14124:	str	r0, [fp, #-88]	; 0xffffffa8
   14128:	mov	r0, #1
   1412c:	str	r0, [fp, #-72]	; 0xffffffb8
   14130:	mov	r3, #0
   14134:	b	143b0 <dcngettext@plt+0x2f04>
   14138:	mov	r4, #5
   1413c:	tst	r8, #1
   14140:	beq	14168 <dcngettext@plt+0x2cbc>
   14144:	mov	r0, #1
   14148:	mov	r9, #0
   1414c:	str	r0, [fp, #-72]	; 0xffffffb8
   14150:	movw	r0, #32014	; 0x7d0e
   14154:	mov	r2, #1
   14158:	mov	r3, #1
   1415c:	movt	r0, #1
   14160:	str	r0, [fp, #-88]	; 0xffffffa8
   14164:	b	143b0 <dcngettext@plt+0x2f04>
   14168:	cmp	r5, #0
   1416c:	mov	r3, #0
   14170:	mov	r9, #1
   14174:	mov	r2, #1
   14178:	movne	r0, #34	; 0x22
   1417c:	strbne	r0, [ip]
   14180:	movw	r0, #32014	; 0x7d0e
   14184:	movt	r0, #1
   14188:	str	r0, [fp, #-88]	; 0xffffffa8
   1418c:	mov	r0, #1
   14190:	str	r0, [fp, #-72]	; 0xffffffb8
   14194:	b	143b0 <dcngettext@plt+0x2f04>
   14198:	ldrb	r1, [r0, #1]
   1419c:	and	r1, r1, #223	; 0xdf
   141a0:	cmp	r1, #66	; 0x42
   141a4:	bne	141fc <dcngettext@plt+0x2d50>
   141a8:	ldrb	r1, [r0, #2]
   141ac:	cmp	r1, #49	; 0x31
   141b0:	bne	141fc <dcngettext@plt+0x2d50>
   141b4:	ldrb	r1, [r0, #3]
   141b8:	cmp	r1, #56	; 0x38
   141bc:	bne	141fc <dcngettext@plt+0x2d50>
   141c0:	ldrb	r1, [r0, #4]
   141c4:	cmp	r1, #48	; 0x30
   141c8:	bne	141fc <dcngettext@plt+0x2d50>
   141cc:	ldrb	r1, [r0, #5]
   141d0:	cmp	r1, #51	; 0x33
   141d4:	bne	141fc <dcngettext@plt+0x2d50>
   141d8:	ldrb	r1, [r0, #6]
   141dc:	cmp	r1, #48	; 0x30
   141e0:	bne	141fc <dcngettext@plt+0x2d50>
   141e4:	ldrb	r0, [r0, #7]
   141e8:	cmp	r0, #0
   141ec:	movw	r0, #32028	; 0x7d1c
   141f0:	movt	r0, #1
   141f4:	str	r0, [sp, #72]	; 0x48
   141f8:	beq	14218 <dcngettext@plt+0x2d6c>
   141fc:	movw	r1, #32014	; 0x7d0e
   14200:	movw	r0, #32018	; 0x7d12
   14204:	cmp	r4, #9
   14208:	movt	r1, #1
   1420c:	movt	r0, #1
   14210:	moveq	r0, r1
   14214:	str	r0, [sp, #72]	; 0x48
   14218:	movw	r6, #32018	; 0x7d12
   1421c:	mov	r0, #0
   14220:	mov	r2, #5
   14224:	movt	r6, #1
   14228:	mov	r1, r6
   1422c:	bl	11218 <dcgettext@plt>
   14230:	cmp	r0, r6
   14234:	str	r0, [sp, #76]	; 0x4c
   14238:	beq	14284 <dcngettext@plt+0x2dd8>
   1423c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14240:	mov	r9, #0
   14244:	tst	r8, #1
   14248:	bne	1438c <dcngettext@plt+0x2ee0>
   1424c:	ldr	r0, [sp, #72]	; 0x48
   14250:	ldrb	r0, [r0]
   14254:	cmp	r0, #0
   14258:	beq	1438c <dcngettext@plt+0x2ee0>
   1425c:	ldr	r1, [sp, #72]	; 0x48
   14260:	mov	r9, #0
   14264:	add	r1, r1, #1
   14268:	cmp	r9, r5
   1426c:	strbcc	r0, [ip, r9]
   14270:	ldrb	r0, [r1, r9]
   14274:	add	r9, r9, #1
   14278:	cmp	r0, #0
   1427c:	bne	14268 <dcngettext@plt+0x2dbc>
   14280:	b	1438c <dcngettext@plt+0x2ee0>
   14284:	bl	174e4 <dcngettext@plt+0x6038>
   14288:	ldrb	r1, [r0]
   1428c:	and	r1, r1, #223	; 0xdf
   14290:	cmp	r1, #71	; 0x47
   14294:	beq	14304 <dcngettext@plt+0x2e58>
   14298:	ldr	ip, [fp, #-84]	; 0xffffffac
   1429c:	cmp	r1, #85	; 0x55
   142a0:	bne	14360 <dcngettext@plt+0x2eb4>
   142a4:	ldrb	r1, [r0, #1]
   142a8:	and	r1, r1, #223	; 0xdf
   142ac:	cmp	r1, #84	; 0x54
   142b0:	bne	14360 <dcngettext@plt+0x2eb4>
   142b4:	ldrb	r1, [r0, #2]
   142b8:	and	r1, r1, #223	; 0xdf
   142bc:	cmp	r1, #70	; 0x46
   142c0:	bne	14360 <dcngettext@plt+0x2eb4>
   142c4:	ldrb	r1, [r0, #3]
   142c8:	cmp	r1, #45	; 0x2d
   142cc:	bne	14360 <dcngettext@plt+0x2eb4>
   142d0:	ldrb	r1, [r0, #4]
   142d4:	cmp	r1, #56	; 0x38
   142d8:	bne	14360 <dcngettext@plt+0x2eb4>
   142dc:	ldrb	r0, [r0, #5]
   142e0:	cmp	r0, #0
   142e4:	bne	14360 <dcngettext@plt+0x2eb4>
   142e8:	movw	r0, #32024	; 0x7d18
   142ec:	movt	r0, #1
   142f0:	str	r0, [sp, #76]	; 0x4c
   142f4:	mov	r9, #0
   142f8:	tst	r8, #1
   142fc:	beq	1424c <dcngettext@plt+0x2da0>
   14300:	b	1438c <dcngettext@plt+0x2ee0>
   14304:	ldrb	r1, [r0, #1]
   14308:	ldr	ip, [fp, #-84]	; 0xffffffac
   1430c:	and	r1, r1, #223	; 0xdf
   14310:	cmp	r1, #66	; 0x42
   14314:	bne	14360 <dcngettext@plt+0x2eb4>
   14318:	ldrb	r1, [r0, #2]
   1431c:	cmp	r1, #49	; 0x31
   14320:	bne	14360 <dcngettext@plt+0x2eb4>
   14324:	ldrb	r1, [r0, #3]
   14328:	cmp	r1, #56	; 0x38
   1432c:	bne	14360 <dcngettext@plt+0x2eb4>
   14330:	ldrb	r1, [r0, #4]
   14334:	cmp	r1, #48	; 0x30
   14338:	bne	14360 <dcngettext@plt+0x2eb4>
   1433c:	ldrb	r1, [r0, #5]
   14340:	cmp	r1, #51	; 0x33
   14344:	bne	14360 <dcngettext@plt+0x2eb4>
   14348:	ldrb	r1, [r0, #6]
   1434c:	cmp	r1, #48	; 0x30
   14350:	bne	14360 <dcngettext@plt+0x2eb4>
   14354:	ldrb	r0, [r0, #7]
   14358:	cmp	r0, #0
   1435c:	beq	15174 <dcngettext@plt+0x3cc8>
   14360:	movw	r0, #32018	; 0x7d12
   14364:	cmp	r4, #9
   14368:	movt	r0, #1
   1436c:	mov	r1, r0
   14370:	movw	r0, #32014	; 0x7d0e
   14374:	movt	r0, #1
   14378:	moveq	r1, r0
   1437c:	str	r1, [sp, #76]	; 0x4c
   14380:	mov	r9, #0
   14384:	tst	r8, #1
   14388:	beq	1424c <dcngettext@plt+0x2da0>
   1438c:	ldr	r6, [sp, #76]	; 0x4c
   14390:	mov	r0, r6
   14394:	bl	1135c <strlen@plt>
   14398:	ldr	ip, [fp, #-84]	; 0xffffffac
   1439c:	ldr	lr, [fp, #-80]	; 0xffffffb0
   143a0:	str	r0, [fp, #-72]	; 0xffffffb8
   143a4:	str	r6, [fp, #-88]	; 0xffffffa8
   143a8:	mov	r2, #1
   143ac:	mov	r3, r8
   143b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143b4:	str	r4, [fp, #-64]	; 0xffffffc0
   143b8:	mov	sl, #0
   143bc:	str	r3, [fp, #-76]	; 0xffffffb4
   143c0:	str	r2, [sp, #88]	; 0x58
   143c4:	cmp	r0, #0
   143c8:	movwne	r0, #1
   143cc:	and	r1, r0, r3
   143d0:	and	r1, r2, r1
   143d4:	str	r1, [sp, #48]	; 0x30
   143d8:	sub	r1, r4, #2
   143dc:	clz	r1, r1
   143e0:	lsr	r1, r1, #5
   143e4:	and	r1, r1, r3
   143e8:	str	r1, [sp, #44]	; 0x2c
   143ec:	subs	r1, r4, #2
   143f0:	eor	r4, r3, #1
   143f4:	movwne	r1, #1
   143f8:	str	r4, [sp, #92]	; 0x5c
   143fc:	orr	r4, r1, r4
   14400:	and	r1, r1, r2
   14404:	and	r0, r0, r1
   14408:	str	r4, [sp, #64]	; 0x40
   1440c:	ldr	r4, [sp, #84]	; 0x54
   14410:	str	r0, [fp, #-60]	; 0xffffffc4
   14414:	orr	r0, r1, r3
   14418:	ldr	r1, [fp, #16]
   1441c:	eor	r0, r0, #1
   14420:	clz	r1, r1
   14424:	lsr	r1, r1, #5
   14428:	orr	r0, r1, r0
   1442c:	str	r0, [fp, #-68]	; 0xffffffbc
   14430:	eor	r0, r2, #1
   14434:	str	r0, [sp, #52]	; 0x34
   14438:	cmn	r7, #1
   1443c:	beq	1444c <dcngettext@plt+0x2fa0>
   14440:	cmp	sl, r7
   14444:	bne	14458 <dcngettext@plt+0x2fac>
   14448:	b	150ec <dcngettext@plt+0x3c40>
   1444c:	ldrb	r0, [lr, sl]
   14450:	cmp	r0, #0
   14454:	beq	150f4 <dcngettext@plt+0x3c48>
   14458:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1445c:	cmp	r0, #0
   14460:	beq	144c0 <dcngettext@plt+0x3014>
   14464:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14468:	mov	r6, r5
   1446c:	add	r5, sl, r0
   14470:	cmp	r0, #2
   14474:	bcc	144e0 <dcngettext@plt+0x3034>
   14478:	mov	r0, #0
   1447c:	cmn	r7, #1
   14480:	str	r0, [fp, #-56]	; 0xffffffc8
   14484:	bne	1449c <dcngettext@plt+0x2ff0>
   14488:	mov	r0, lr
   1448c:	bl	1135c <strlen@plt>
   14490:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14494:	ldr	ip, [fp, #-84]	; 0xffffffac
   14498:	mov	r7, r0
   1449c:	cmp	r5, r7
   144a0:	bls	144f0 <dcngettext@plt+0x3044>
   144a4:	mov	r0, #0
   144a8:	mov	r5, r6
   144ac:	str	r0, [fp, #-48]	; 0xffffffd0
   144b0:	ldrb	r6, [lr, sl]
   144b4:	cmp	r6, #126	; 0x7e
   144b8:	bls	14540 <dcngettext@plt+0x3094>
   144bc:	b	14a9c <dcngettext@plt+0x35f0>
   144c0:	mov	r0, #0
   144c4:	str	r0, [fp, #-56]	; 0xffffffc8
   144c8:	mov	r0, #0
   144cc:	str	r0, [fp, #-48]	; 0xffffffd0
   144d0:	ldrb	r6, [lr, sl]
   144d4:	cmp	r6, #126	; 0x7e
   144d8:	bls	14540 <dcngettext@plt+0x3094>
   144dc:	b	14a9c <dcngettext@plt+0x35f0>
   144e0:	mov	r0, #0
   144e4:	str	r0, [fp, #-56]	; 0xffffffc8
   144e8:	cmp	r5, r7
   144ec:	bhi	144a4 <dcngettext@plt+0x2ff8>
   144f0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   144f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   144f8:	add	r0, lr, sl
   144fc:	bl	11350 <bcmp@plt>
   14500:	ldr	r2, [sp, #92]	; 0x5c
   14504:	cmp	r0, #0
   14508:	mov	r1, r0
   1450c:	mov	r5, r6
   14510:	movwne	r1, #1
   14514:	orr	r1, r1, r2
   14518:	tst	r1, #1
   1451c:	beq	151b4 <dcngettext@plt+0x3d08>
   14520:	ldr	ip, [fp, #-84]	; 0xffffffac
   14524:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14528:	clz	r0, r0
   1452c:	lsr	r0, r0, #5
   14530:	str	r0, [fp, #-48]	; 0xffffffd0
   14534:	ldrb	r6, [lr, sl]
   14538:	cmp	r6, #126	; 0x7e
   1453c:	bhi	14a9c <dcngettext@plt+0x35f0>
   14540:	add	r3, pc, #16
   14544:	mov	r8, #1
   14548:	mov	r2, #110	; 0x6e
   1454c:	mov	r0, #97	; 0x61
   14550:	mov	r1, #0
   14554:	ldr	pc, [r3, r6, lsl #2]
   14558:	andeq	r4, r1, r4, asr r8
   1455c:	muleq	r1, ip, sl
   14560:	muleq	r1, ip, sl
   14564:	muleq	r1, ip, sl
   14568:	muleq	r1, ip, sl
   1456c:	muleq	r1, ip, sl
   14570:	muleq	r1, ip, sl
   14574:	andeq	r4, r1, r0, asr fp
   14578:	andeq	r4, r1, r4, lsr r8
   1457c:	andeq	r4, r1, ip, lsr #16
   14580:	andeq	r4, r1, r0, asr #16
   14584:	andeq	r4, r1, r0, ror r9
   14588:	andeq	r4, r1, r4, lsr #16
   1458c:	andeq	r4, r1, ip, lsr r8
   14590:	muleq	r1, ip, sl
   14594:	muleq	r1, ip, sl
   14598:	muleq	r1, ip, sl
   1459c:	muleq	r1, ip, sl
   145a0:	muleq	r1, ip, sl
   145a4:	muleq	r1, ip, sl
   145a8:	muleq	r1, ip, sl
   145ac:	muleq	r1, ip, sl
   145b0:	muleq	r1, ip, sl
   145b4:	muleq	r1, ip, sl
   145b8:	muleq	r1, ip, sl
   145bc:	muleq	r1, ip, sl
   145c0:	muleq	r1, ip, sl
   145c4:	muleq	r1, ip, sl
   145c8:	muleq	r1, ip, sl
   145cc:	muleq	r1, ip, sl
   145d0:	muleq	r1, ip, sl
   145d4:	muleq	r1, ip, sl
   145d8:	andeq	r4, r1, r8, asr #15
   145dc:	andeq	r4, r1, ip, asr #15
   145e0:	andeq	r4, r1, ip, asr #15
   145e4:			; <UNDEFINED> instruction: 0x000147bc
   145e8:	andeq	r4, r1, ip, asr #15
   145ec:	andeq	r4, r1, r4, asr r7
   145f0:	andeq	r4, r1, ip, asr #15
   145f4:	andeq	r4, r1, r8, ror r9
   145f8:	andeq	r4, r1, ip, asr #15
   145fc:	andeq	r4, r1, ip, asr #15
   14600:	andeq	r4, r1, ip, asr #15
   14604:	andeq	r4, r1, r4, asr r7
   14608:	andeq	r4, r1, r4, asr r7
   1460c:	andeq	r4, r1, r4, asr r7
   14610:	andeq	r4, r1, r4, asr r7
   14614:	andeq	r4, r1, r4, asr r7
   14618:	andeq	r4, r1, r4, asr r7
   1461c:	andeq	r4, r1, r4, asr r7
   14620:	andeq	r4, r1, r4, asr r7
   14624:	andeq	r4, r1, r4, asr r7
   14628:	andeq	r4, r1, r4, asr r7
   1462c:	andeq	r4, r1, r4, asr r7
   14630:	andeq	r4, r1, r4, asr r7
   14634:	andeq	r4, r1, r4, asr r7
   14638:	andeq	r4, r1, r4, asr r7
   1463c:	andeq	r4, r1, r4, asr r7
   14640:	andeq	r4, r1, r4, asr r7
   14644:	andeq	r4, r1, ip, asr #15
   14648:	andeq	r4, r1, ip, asr #15
   1464c:	andeq	r4, r1, ip, asr #15
   14650:	andeq	r4, r1, ip, asr #15
   14654:	andeq	r4, r1, ip, lsr r9
   14658:	muleq	r1, ip, sl
   1465c:	andeq	r4, r1, r4, asr r7
   14660:	andeq	r4, r1, r4, asr r7
   14664:	andeq	r4, r1, r4, asr r7
   14668:	andeq	r4, r1, r4, asr r7
   1466c:	andeq	r4, r1, r4, asr r7
   14670:	andeq	r4, r1, r4, asr r7
   14674:	andeq	r4, r1, r4, asr r7
   14678:	andeq	r4, r1, r4, asr r7
   1467c:	andeq	r4, r1, r4, asr r7
   14680:	andeq	r4, r1, r4, asr r7
   14684:	andeq	r4, r1, r4, asr r7
   14688:	andeq	r4, r1, r4, asr r7
   1468c:	andeq	r4, r1, r4, asr r7
   14690:	andeq	r4, r1, r4, asr r7
   14694:	andeq	r4, r1, r4, asr r7
   14698:	andeq	r4, r1, r4, asr r7
   1469c:	andeq	r4, r1, r4, asr r7
   146a0:	andeq	r4, r1, r4, asr r7
   146a4:	andeq	r4, r1, r4, asr r7
   146a8:	andeq	r4, r1, r4, asr r7
   146ac:	andeq	r4, r1, r4, asr r7
   146b0:	andeq	r4, r1, r4, asr r7
   146b4:	andeq	r4, r1, r4, asr r7
   146b8:	andeq	r4, r1, r4, asr r7
   146bc:	andeq	r4, r1, r4, asr r7
   146c0:	andeq	r4, r1, r4, asr r7
   146c4:	andeq	r4, r1, ip, asr #15
   146c8:	andeq	r4, r1, r0, lsl #16
   146cc:	andeq	r4, r1, r4, asr r7
   146d0:	andeq	r4, r1, ip, asr #15
   146d4:	andeq	r4, r1, r4, asr r7
   146d8:	andeq	r4, r1, ip, asr #15
   146dc:	andeq	r4, r1, r4, asr r7
   146e0:	andeq	r4, r1, r4, asr r7
   146e4:	andeq	r4, r1, r4, asr r7
   146e8:	andeq	r4, r1, r4, asr r7
   146ec:	andeq	r4, r1, r4, asr r7
   146f0:	andeq	r4, r1, r4, asr r7
   146f4:	andeq	r4, r1, r4, asr r7
   146f8:	andeq	r4, r1, r4, asr r7
   146fc:	andeq	r4, r1, r4, asr r7
   14700:	andeq	r4, r1, r4, asr r7
   14704:	andeq	r4, r1, r4, asr r7
   14708:	andeq	r4, r1, r4, asr r7
   1470c:	andeq	r4, r1, r4, asr r7
   14710:	andeq	r4, r1, r4, asr r7
   14714:	andeq	r4, r1, r4, asr r7
   14718:	andeq	r4, r1, r4, asr r7
   1471c:	andeq	r4, r1, r4, asr r7
   14720:	andeq	r4, r1, r4, asr r7
   14724:	andeq	r4, r1, r4, asr r7
   14728:	andeq	r4, r1, r4, asr r7
   1472c:	andeq	r4, r1, r4, asr r7
   14730:	andeq	r4, r1, r4, asr r7
   14734:	andeq	r4, r1, r4, asr r7
   14738:	andeq	r4, r1, r4, asr r7
   1473c:	andeq	r4, r1, r4, asr r7
   14740:	andeq	r4, r1, r4, asr r7
   14744:	muleq	r1, r4, r7
   14748:	andeq	r4, r1, ip, asr #15
   1474c:	muleq	r1, r4, r7
   14750:			; <UNDEFINED> instruction: 0x000147bc
   14754:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14758:	tst	r0, #1
   1475c:	bne	14a14 <dcngettext@plt+0x3568>
   14760:	ldr	r1, [fp, #16]
   14764:	ubfx	r0, r6, #5, #3
   14768:	mov	r2, #1
   1476c:	ldr	r0, [r1, r0, lsl #2]
   14770:	and	r1, r6, #31
   14774:	tst	r0, r2, lsl r1
   14778:	beq	14a14 <dcngettext@plt+0x3568>
   1477c:	mov	r0, r6
   14780:	mov	r1, r8
   14784:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14788:	tst	r2, #1
   1478c:	beq	14a34 <dcngettext@plt+0x3588>
   14790:	b	15190 <dcngettext@plt+0x3ce4>
   14794:	cmp	r7, #1
   14798:	beq	147bc <dcngettext@plt+0x3310>
   1479c:	mov	r8, #0
   147a0:	cmn	r7, #1
   147a4:	bne	14a00 <dcngettext@plt+0x3554>
   147a8:	ldrb	r0, [lr, #1]
   147ac:	cmp	r0, #0
   147b0:	beq	147bc <dcngettext@plt+0x3310>
   147b4:	mvn	r7, #0
   147b8:	b	14a00 <dcngettext@plt+0x3554>
   147bc:	mov	r8, #0
   147c0:	cmp	sl, #0
   147c4:	bne	14a00 <dcngettext@plt+0x3554>
   147c8:	mov	r1, #1
   147cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   147d0:	cmp	r0, #2
   147d4:	bne	147ec <dcngettext@plt+0x3340>
   147d8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   147dc:	mov	r8, r1
   147e0:	tst	r0, #1
   147e4:	beq	14754 <dcngettext@plt+0x32a8>
   147e8:	b	15190 <dcngettext@plt+0x3ce4>
   147ec:	mov	r8, r1
   147f0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   147f4:	tst	r0, #1
   147f8:	beq	14760 <dcngettext@plt+0x32b4>
   147fc:	b	14a14 <dcngettext@plt+0x3568>
   14800:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14804:	cmp	r0, #2
   14808:	bne	14ac8 <dcngettext@plt+0x361c>
   1480c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14810:	tst	r0, #1
   14814:	bne	15190 <dcngettext@plt+0x3ce4>
   14818:	mov	r0, #0
   1481c:	str	r0, [fp, #-56]	; 0xffffffc8
   14820:	b	14ae0 <dcngettext@plt+0x3634>
   14824:	mov	r0, #102	; 0x66
   14828:	b	14b50 <dcngettext@plt+0x36a4>
   1482c:	mov	r2, #116	; 0x74
   14830:	b	14840 <dcngettext@plt+0x3394>
   14834:	mov	r0, #98	; 0x62
   14838:	b	14b50 <dcngettext@plt+0x36a4>
   1483c:	mov	r2, #114	; 0x72
   14840:	ldr	r0, [sp, #64]	; 0x40
   14844:	tst	r0, #1
   14848:	mov	r0, r2
   1484c:	bne	14b50 <dcngettext@plt+0x36a4>
   14850:	b	15190 <dcngettext@plt+0x3ce4>
   14854:	ldr	r0, [sp, #88]	; 0x58
   14858:	tst	r0, #1
   1485c:	beq	14b70 <dcngettext@plt+0x36c4>
   14860:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14864:	tst	r0, #1
   14868:	bne	152cc <dcngettext@plt+0x3e20>
   1486c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14870:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14874:	subs	r0, r0, #2
   14878:	movwne	r0, #1
   1487c:	orr	r0, r0, r1
   14880:	tst	r0, #1
   14884:	bne	148c0 <dcngettext@plt+0x3414>
   14888:	cmp	r9, r5
   1488c:	movcc	r0, #39	; 0x27
   14890:	strbcc	r0, [ip, r9]
   14894:	add	r0, r9, #1
   14898:	cmp	r0, r5
   1489c:	movcc	r1, #36	; 0x24
   148a0:	strbcc	r1, [ip, r0]
   148a4:	add	r0, r9, #2
   148a8:	add	r9, r9, #3
   148ac:	cmp	r0, r5
   148b0:	movcc	r1, #39	; 0x27
   148b4:	strbcc	r1, [ip, r0]
   148b8:	mov	r0, #1
   148bc:	str	r0, [fp, #-52]	; 0xffffffcc
   148c0:	mov	r1, #1
   148c4:	cmp	r9, r5
   148c8:	mov	r8, #0
   148cc:	mov	r6, #48	; 0x30
   148d0:	str	r1, [fp, #-56]	; 0xffffffc8
   148d4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   148d8:	movcc	r0, #92	; 0x5c
   148dc:	strbcc	r0, [ip, r9]
   148e0:	add	r0, r9, #1
   148e4:	cmp	r1, #2
   148e8:	beq	14d3c <dcngettext@plt+0x3890>
   148ec:	add	r1, sl, #1
   148f0:	cmp	r1, r7
   148f4:	bcs	14d3c <dcngettext@plt+0x3890>
   148f8:	ldrb	r1, [lr, r1]
   148fc:	sub	r1, r1, #48	; 0x30
   14900:	uxtb	r1, r1
   14904:	cmp	r1, #9
   14908:	bhi	14d3c <dcngettext@plt+0x3890>
   1490c:	cmp	r0, r5
   14910:	movcc	r1, #48	; 0x30
   14914:	strbcc	r1, [ip, r0]
   14918:	add	r0, r9, #2
   1491c:	add	r9, r9, #3
   14920:	cmp	r0, r5
   14924:	movcc	r1, #48	; 0x30
   14928:	strbcc	r1, [ip, r0]
   1492c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14930:	tst	r0, #1
   14934:	beq	14760 <dcngettext@plt+0x32b4>
   14938:	b	14a14 <dcngettext@plt+0x3568>
   1493c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14940:	mov	r6, #63	; 0x3f
   14944:	cmp	r0, #5
   14948:	beq	14d50 <dcngettext@plt+0x38a4>
   1494c:	mov	r1, #0
   14950:	cmp	r0, #2
   14954:	str	r1, [fp, #-56]	; 0xffffffc8
   14958:	bne	14e18 <dcngettext@plt+0x396c>
   1495c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14960:	mov	r8, #0
   14964:	tst	r0, #1
   14968:	beq	14754 <dcngettext@plt+0x32a8>
   1496c:	b	15190 <dcngettext@plt+0x3ce4>
   14970:	mov	r0, #118	; 0x76
   14974:	b	14b50 <dcngettext@plt+0x36a4>
   14978:	mov	r0, #1
   1497c:	mov	r6, #39	; 0x27
   14980:	str	r0, [sp, #60]	; 0x3c
   14984:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14988:	cmp	r0, #2
   1498c:	bne	14b90 <dcngettext@plt+0x36e4>
   14990:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14994:	tst	r0, #1
   14998:	bne	15190 <dcngettext@plt+0x3ce4>
   1499c:	ldr	r2, [sp, #56]	; 0x38
   149a0:	clz	r1, r5
   149a4:	mov	r8, #1
   149a8:	lsr	r1, r1, #5
   149ac:	cmp	r2, #0
   149b0:	mov	r0, r2
   149b4:	movwne	r0, #1
   149b8:	orrs	r0, r0, r1
   149bc:	moveq	r2, r5
   149c0:	moveq	r5, r0
   149c4:	cmp	r9, r5
   149c8:	str	r2, [sp, #56]	; 0x38
   149cc:	movcc	r0, #39	; 0x27
   149d0:	strbcc	r0, [ip, r9]
   149d4:	add	r0, r9, #1
   149d8:	cmp	r0, r5
   149dc:	movcc	r1, #92	; 0x5c
   149e0:	strbcc	r1, [ip, r0]
   149e4:	add	r0, r9, #2
   149e8:	add	r9, r9, #3
   149ec:	cmp	r0, r5
   149f0:	movcc	r1, #39	; 0x27
   149f4:	strbcc	r1, [ip, r0]
   149f8:	mov	r0, #0
   149fc:	str	r0, [fp, #-52]	; 0xffffffcc
   14a00:	mov	r0, #0
   14a04:	str	r0, [fp, #-56]	; 0xffffffc8
   14a08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14a0c:	tst	r0, #1
   14a10:	beq	14760 <dcngettext@plt+0x32b4>
   14a14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a18:	mov	r1, r8
   14a1c:	cmp	r0, #0
   14a20:	mov	r0, r6
   14a24:	beq	14ae8 <dcngettext@plt+0x363c>
   14a28:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14a2c:	tst	r2, #1
   14a30:	bne	15190 <dcngettext@plt+0x3ce4>
   14a34:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14a38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14a3c:	subs	r2, r2, #2
   14a40:	movwne	r2, #1
   14a44:	orr	r2, r2, r3
   14a48:	tst	r2, #1
   14a4c:	bne	14a88 <dcngettext@plt+0x35dc>
   14a50:	cmp	r9, r5
   14a54:	movcc	r2, #39	; 0x27
   14a58:	strbcc	r2, [ip, r9]
   14a5c:	add	r2, r9, #1
   14a60:	cmp	r2, r5
   14a64:	movcc	r3, #36	; 0x24
   14a68:	strbcc	r3, [ip, r2]
   14a6c:	add	r2, r9, #2
   14a70:	add	r9, r9, #3
   14a74:	cmp	r2, r5
   14a78:	movcc	r3, #39	; 0x27
   14a7c:	strbcc	r3, [ip, r2]
   14a80:	mov	r2, #1
   14a84:	str	r2, [fp, #-52]	; 0xffffffcc
   14a88:	cmp	r9, r5
   14a8c:	movcc	r2, #92	; 0x5c
   14a90:	strbcc	r2, [ip, r9]
   14a94:	add	r9, r9, #1
   14a98:	b	14b30 <dcngettext@plt+0x3684>
   14a9c:	ldr	r0, [sp, #40]	; 0x28
   14aa0:	cmp	r0, #1
   14aa4:	bne	14ba4 <dcngettext@plt+0x36f8>
   14aa8:	bl	11338 <__ctype_b_loc@plt>
   14aac:	ldr	r0, [r0]
   14ab0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14ab4:	mov	r1, #1
   14ab8:	add	r0, r0, r6, lsl #1
   14abc:	ldrb	r0, [r0, #1]
   14ac0:	ubfx	r8, r0, #6, #1
   14ac4:	b	14efc <dcngettext@plt+0x3a50>
   14ac8:	ldr	r1, [sp, #48]	; 0x30
   14acc:	mov	r0, #0
   14ad0:	str	r0, [fp, #-56]	; 0xffffffc8
   14ad4:	mov	r0, #92	; 0x5c
   14ad8:	cmp	r1, #0
   14adc:	beq	14b50 <dcngettext@plt+0x36a4>
   14ae0:	mov	r6, #92	; 0x5c
   14ae4:	mov	r8, #0
   14ae8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14aec:	cmp	r0, #0
   14af0:	bne	14b28 <dcngettext@plt+0x367c>
   14af4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14af8:	tst	r0, #1
   14afc:	beq	14b28 <dcngettext@plt+0x367c>
   14b00:	cmp	r9, r5
   14b04:	movcc	r0, #39	; 0x27
   14b08:	strbcc	r0, [ip, r9]
   14b0c:	add	r0, r9, #1
   14b10:	add	r9, r9, #2
   14b14:	cmp	r0, r5
   14b18:	movcc	r1, #39	; 0x27
   14b1c:	strbcc	r1, [ip, r0]
   14b20:	mov	r0, #0
   14b24:	str	r0, [fp, #-52]	; 0xffffffcc
   14b28:	mov	r1, r8
   14b2c:	mov	r0, r6
   14b30:	cmp	r9, r5
   14b34:	and	r4, r4, r1
   14b38:	strbcc	r0, [ip, r9]
   14b3c:	add	r9, r9, #1
   14b40:	add	sl, sl, #1
   14b44:	cmn	r7, #1
   14b48:	bne	14440 <dcngettext@plt+0x2f94>
   14b4c:	b	1444c <dcngettext@plt+0x2fa0>
   14b50:	mov	r1, #0
   14b54:	mov	r8, #0
   14b58:	str	r1, [fp, #-56]	; 0xffffffc8
   14b5c:	ldr	r1, [sp, #88]	; 0x58
   14b60:	tst	r1, #1
   14b64:	mov	r1, #0
   14b68:	beq	14754 <dcngettext@plt+0x32a8>
   14b6c:	b	14a28 <dcngettext@plt+0x357c>
   14b70:	ldr	r0, [sp, #36]	; 0x24
   14b74:	mov	r6, #0
   14b78:	mov	r8, #0
   14b7c:	cmp	r0, #0
   14b80:	mov	r0, #0
   14b84:	str	r0, [fp, #-56]	; 0xffffffc8
   14b88:	bne	14b40 <dcngettext@plt+0x3694>
   14b8c:	b	14754 <dcngettext@plt+0x32a8>
   14b90:	mov	r8, #1
   14b94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14b98:	tst	r0, #1
   14b9c:	beq	14760 <dcngettext@plt+0x32b4>
   14ba0:	b	14a14 <dcngettext@plt+0x3568>
   14ba4:	mov	r0, #0
   14ba8:	cmn	r7, #1
   14bac:	str	r0, [fp, #-36]	; 0xffffffdc
   14bb0:	str	r0, [fp, #-40]	; 0xffffffd8
   14bb4:	bne	14bc8 <dcngettext@plt+0x371c>
   14bb8:	mov	r0, lr
   14bbc:	bl	1135c <strlen@plt>
   14bc0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14bc4:	mov	r7, r0
   14bc8:	ldr	r0, [sp, #44]	; 0x2c
   14bcc:	str	r4, [sp, #84]	; 0x54
   14bd0:	str	r5, [sp, #28]
   14bd4:	cmp	r0, #0
   14bd8:	beq	14e2c <dcngettext@plt+0x3980>
   14bdc:	ldr	r0, [sp, #80]	; 0x50
   14be0:	mov	r8, #1
   14be4:	mov	r5, #0
   14be8:	add	r0, r0, sl
   14bec:	str	r0, [sp, #24]
   14bf0:	sub	r0, fp, #40	; 0x28
   14bf4:	mov	r3, r0
   14bf8:	b	14c34 <dcngettext@plt+0x3788>
   14bfc:	ldr	r5, [sp, #68]	; 0x44
   14c00:	add	r5, r0, r5
   14c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c08:	bl	11254 <iswprint@plt>
   14c0c:	cmp	r0, #0
   14c10:	sub	r4, fp, #40	; 0x28
   14c14:	movwne	r0, #1
   14c18:	and	r8, r8, r0
   14c1c:	mov	r0, r4
   14c20:	bl	11200 <mbsinit@plt>
   14c24:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14c28:	mov	r3, r4
   14c2c:	cmp	r0, #0
   14c30:	bne	14ef0 <dcngettext@plt+0x3a44>
   14c34:	str	r5, [sp, #68]	; 0x44
   14c38:	add	r5, r5, sl
   14c3c:	sub	r0, fp, #44	; 0x2c
   14c40:	add	r1, lr, r5
   14c44:	sub	r2, r7, r5
   14c48:	bl	1751c <dcngettext@plt+0x6070>
   14c4c:	cmn	r0, #2
   14c50:	beq	14eb0 <dcngettext@plt+0x3a04>
   14c54:	ldr	ip, [fp, #-84]	; 0xffffffac
   14c58:	cmn	r0, #1
   14c5c:	beq	14ea4 <dcngettext@plt+0x39f8>
   14c60:	cmp	r0, #0
   14c64:	beq	14ea8 <dcngettext@plt+0x39fc>
   14c68:	cmp	r0, #2
   14c6c:	bcc	14bfc <dcngettext@plt+0x3750>
   14c70:	ldr	r1, [sp, #68]	; 0x44
   14c74:	ldr	r2, [sp, #24]
   14c78:	add	r1, r2, r1
   14c7c:	sub	r2, r0, #1
   14c80:	ldrb	r3, [r1]
   14c84:	sub	r3, r3, #91	; 0x5b
   14c88:	cmp	r3, #33	; 0x21
   14c8c:	bls	14cac <dcngettext@plt+0x3800>
   14c90:	add	r1, r1, #1
   14c94:	subs	r2, r2, #1
   14c98:	beq	14bfc <dcngettext@plt+0x3750>
   14c9c:	ldrb	r3, [r1]
   14ca0:	sub	r3, r3, #91	; 0x5b
   14ca4:	cmp	r3, #33	; 0x21
   14ca8:	bhi	14c90 <dcngettext@plt+0x37e4>
   14cac:	add	r5, pc, #0
   14cb0:	ldr	pc, [r5, r3, lsl #2]
   14cb4:	andeq	r5, r1, r8, asr #3
   14cb8:	andeq	r5, r1, r8, asr #3
   14cbc:	muleq	r1, r0, ip
   14cc0:	andeq	r5, r1, r8, asr #3
   14cc4:	muleq	r1, r0, ip
   14cc8:	andeq	r5, r1, r8, asr #3
   14ccc:	muleq	r1, r0, ip
   14cd0:	muleq	r1, r0, ip
   14cd4:	muleq	r1, r0, ip
   14cd8:	muleq	r1, r0, ip
   14cdc:	muleq	r1, r0, ip
   14ce0:	muleq	r1, r0, ip
   14ce4:	muleq	r1, r0, ip
   14ce8:	muleq	r1, r0, ip
   14cec:	muleq	r1, r0, ip
   14cf0:	muleq	r1, r0, ip
   14cf4:	muleq	r1, r0, ip
   14cf8:	muleq	r1, r0, ip
   14cfc:	muleq	r1, r0, ip
   14d00:	muleq	r1, r0, ip
   14d04:	muleq	r1, r0, ip
   14d08:	muleq	r1, r0, ip
   14d0c:	muleq	r1, r0, ip
   14d10:	muleq	r1, r0, ip
   14d14:	muleq	r1, r0, ip
   14d18:	muleq	r1, r0, ip
   14d1c:	muleq	r1, r0, ip
   14d20:	muleq	r1, r0, ip
   14d24:	muleq	r1, r0, ip
   14d28:	muleq	r1, r0, ip
   14d2c:	muleq	r1, r0, ip
   14d30:	muleq	r1, r0, ip
   14d34:	muleq	r1, r0, ip
   14d38:	andeq	r5, r1, r8, asr #3
   14d3c:	mov	r9, r0
   14d40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14d44:	tst	r0, #1
   14d48:	beq	14760 <dcngettext@plt+0x32b4>
   14d4c:	b	14a14 <dcngettext@plt+0x3568>
   14d50:	mov	r0, #0
   14d54:	str	r0, [fp, #-56]	; 0xffffffc8
   14d58:	ldr	r0, [sp, #32]
   14d5c:	cmp	r0, #0
   14d60:	beq	14e18 <dcngettext@plt+0x396c>
   14d64:	add	r0, sl, #2
   14d68:	mov	r1, r7
   14d6c:	cmp	r0, r7
   14d70:	bcs	14e18 <dcngettext@plt+0x396c>
   14d74:	add	r1, sl, lr
   14d78:	ldrb	r1, [r1, #1]
   14d7c:	cmp	r1, #63	; 0x3f
   14d80:	bne	14e18 <dcngettext@plt+0x396c>
   14d84:	ldrb	r8, [lr, r0]
   14d88:	sub	r2, r8, #33	; 0x21
   14d8c:	cmp	r2, #29
   14d90:	bhi	14e18 <dcngettext@plt+0x396c>
   14d94:	mov	r1, r4
   14d98:	movw	r4, #20929	; 0x51c1
   14d9c:	mov	r3, #1
   14da0:	movt	r4, #14336	; 0x3800
   14da4:	tst	r4, r3, lsl r2
   14da8:	beq	150d4 <dcngettext@plt+0x3c28>
   14dac:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14db0:	tst	r2, #1
   14db4:	bne	15190 <dcngettext@plt+0x3ce4>
   14db8:	cmp	r9, r5
   14dbc:	mov	r6, r8
   14dc0:	mov	r4, r1
   14dc4:	mov	sl, r0
   14dc8:	mov	r8, #0
   14dcc:	movcc	r2, #63	; 0x3f
   14dd0:	strbcc	r2, [ip, r9]
   14dd4:	add	r2, r9, #1
   14dd8:	cmp	r2, r5
   14ddc:	movcc	r3, #34	; 0x22
   14de0:	strbcc	r3, [ip, r2]
   14de4:	add	r2, r9, #2
   14de8:	cmp	r2, r5
   14dec:	movcc	r3, #34	; 0x22
   14df0:	strbcc	r3, [ip, r2]
   14df4:	add	r2, r9, #3
   14df8:	add	r9, r9, #4
   14dfc:	cmp	r2, r5
   14e00:	movcc	r3, #63	; 0x3f
   14e04:	strbcc	r3, [ip, r2]
   14e08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14e0c:	tst	r0, #1
   14e10:	beq	14760 <dcngettext@plt+0x32b4>
   14e14:	b	14a14 <dcngettext@plt+0x3568>
   14e18:	mov	r8, #0
   14e1c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14e20:	tst	r0, #1
   14e24:	beq	14760 <dcngettext@plt+0x32b4>
   14e28:	b	14a14 <dcngettext@plt+0x3568>
   14e2c:	mov	r8, #1
   14e30:	mov	r5, #0
   14e34:	sub	r4, fp, #40	; 0x28
   14e38:	str	r5, [sp, #68]	; 0x44
   14e3c:	add	r5, r5, sl
   14e40:	sub	r0, fp, #44	; 0x2c
   14e44:	mov	r3, r4
   14e48:	add	r1, lr, r5
   14e4c:	sub	r2, r7, r5
   14e50:	bl	1751c <dcngettext@plt+0x6070>
   14e54:	cmn	r0, #2
   14e58:	beq	14eb0 <dcngettext@plt+0x3a04>
   14e5c:	cmn	r0, #1
   14e60:	beq	14ea4 <dcngettext@plt+0x39f8>
   14e64:	ldr	r5, [sp, #68]	; 0x44
   14e68:	cmp	r0, #0
   14e6c:	beq	14eec <dcngettext@plt+0x3a40>
   14e70:	add	r5, r0, r5
   14e74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14e78:	bl	11254 <iswprint@plt>
   14e7c:	cmp	r0, #0
   14e80:	sub	r4, fp, #40	; 0x28
   14e84:	movwne	r0, #1
   14e88:	and	r8, r8, r0
   14e8c:	mov	r0, r4
   14e90:	bl	11200 <mbsinit@plt>
   14e94:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14e98:	cmp	r0, #0
   14e9c:	beq	14e38 <dcngettext@plt+0x398c>
   14ea0:	b	14ef0 <dcngettext@plt+0x3a44>
   14ea4:	mov	r8, #0
   14ea8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14eac:	b	14ee4 <dcngettext@plt+0x3a38>
   14eb0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14eb4:	mov	r8, #0
   14eb8:	cmp	r5, r7
   14ebc:	bcs	14ee4 <dcngettext@plt+0x3a38>
   14ec0:	ldrb	r0, [lr, r5]
   14ec4:	cmp	r0, #0
   14ec8:	beq	14ee4 <dcngettext@plt+0x3a38>
   14ecc:	ldr	r0, [sp, #68]	; 0x44
   14ed0:	add	r0, r0, #1
   14ed4:	add	r5, r0, sl
   14ed8:	str	r0, [sp, #68]	; 0x44
   14edc:	cmp	r5, r7
   14ee0:	bcc	14ec0 <dcngettext@plt+0x3a14>
   14ee4:	ldr	r5, [sp, #68]	; 0x44
   14ee8:	b	14ef0 <dcngettext@plt+0x3a44>
   14eec:	ldr	lr, [fp, #-80]	; 0xffffffb0
   14ef0:	mov	r1, r5
   14ef4:	ldr	r5, [sp, #28]
   14ef8:	ldr	r4, [sp, #84]	; 0x54
   14efc:	ldr	r0, [sp, #52]	; 0x34
   14f00:	ldr	ip, [fp, #-84]	; 0xffffffac
   14f04:	cmp	r1, #1
   14f08:	orr	r2, r8, r0
   14f0c:	mov	r0, r1
   14f10:	bhi	14f1c <dcngettext@plt+0x3a70>
   14f14:	tst	r2, #1
   14f18:	bne	14754 <dcngettext@plt+0x32a8>
   14f1c:	add	r0, r0, sl
   14f20:	str	r2, [sp, #84]	; 0x54
   14f24:	str	r0, [fp, #-56]	; 0xffffffc8
   14f28:	mov	r0, #0
   14f2c:	tst	r2, #1
   14f30:	bne	15010 <dcngettext@plt+0x3b64>
   14f34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14f38:	tst	r1, #1
   14f3c:	bne	15190 <dcngettext@plt+0x3ce4>
   14f40:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14f44:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14f48:	subs	r2, r1, #2
   14f4c:	movwne	r2, #1
   14f50:	orr	r2, r2, r0
   14f54:	tst	r2, #1
   14f58:	bne	14f94 <dcngettext@plt+0x3ae8>
   14f5c:	cmp	r9, r5
   14f60:	add	r2, r9, #1
   14f64:	mov	r0, #1
   14f68:	movcc	r1, #39	; 0x27
   14f6c:	str	r0, [fp, #-52]	; 0xffffffcc
   14f70:	strbcc	r1, [ip, r9]
   14f74:	cmp	r2, r5
   14f78:	movcc	r1, #36	; 0x24
   14f7c:	strbcc	r1, [ip, r2]
   14f80:	add	r2, r9, #2
   14f84:	add	r9, r9, #3
   14f88:	cmp	r2, r5
   14f8c:	movcc	r1, #39	; 0x27
   14f90:	strbcc	r1, [ip, r2]
   14f94:	cmp	r9, r5
   14f98:	add	r2, r9, #1
   14f9c:	movcc	r1, #92	; 0x5c
   14fa0:	strbcc	r1, [ip, r9]
   14fa4:	cmp	r2, r5
   14fa8:	bcs	14fbc <dcngettext@plt+0x3b10>
   14fac:	uxtb	r3, r6
   14fb0:	mov	r1, #48	; 0x30
   14fb4:	orr	r3, r1, r3, lsr #6
   14fb8:	strb	r3, [ip, r2]
   14fbc:	add	r2, r9, #2
   14fc0:	add	r9, r9, #3
   14fc4:	cmp	r2, r5
   14fc8:	lsrcc	r3, r6, #3
   14fcc:	movcc	r1, #6
   14fd0:	bficc	r3, r1, #3, #29
   14fd4:	mov	r1, #6
   14fd8:	bfi	r6, r1, #3, #29
   14fdc:	strbcc	r3, [ip, r2]
   14fe0:	mov	r2, #1
   14fe4:	b	15044 <dcngettext@plt+0x3b98>
   14fe8:	ldr	r1, [sp, #80]	; 0x50
   14fec:	cmp	r9, r2
   14ff0:	mov	r5, r2
   14ff4:	ldr	r2, [sp, #84]	; 0x54
   14ff8:	strbcc	r6, [ip, r9]
   14ffc:	add	r9, r9, #1
   15000:	ldrb	r6, [r1, sl]
   15004:	mov	sl, r3
   15008:	tst	r2, #1
   1500c:	beq	14f34 <dcngettext@plt+0x3a88>
   15010:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15014:	tst	r1, #1
   15018:	beq	15038 <dcngettext@plt+0x3b8c>
   1501c:	cmp	r9, r5
   15020:	mov	r2, r0
   15024:	movcc	r1, #92	; 0x5c
   15028:	strbcc	r1, [ip, r9]
   1502c:	add	r9, r9, #1
   15030:	mov	r1, #0
   15034:	b	15040 <dcngettext@plt+0x3b94>
   15038:	mov	r1, #0
   1503c:	mov	r2, r0
   15040:	str	r1, [fp, #-48]	; 0xffffffd0
   15044:	mov	r0, r2
   15048:	and	r1, r2, #1
   1504c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15050:	add	r3, sl, #1
   15054:	cmp	r2, r3
   15058:	bls	150b8 <dcngettext@plt+0x3c0c>
   1505c:	mov	r2, r5
   15060:	ldr	r5, [fp, #-52]	; 0xffffffcc
   15064:	cmp	r1, #0
   15068:	movwne	r1, #1
   1506c:	mvn	r5, r5
   15070:	orr	r5, r5, r1
   15074:	tst	r5, #1
   15078:	bne	14fe8 <dcngettext@plt+0x3b3c>
   1507c:	cmp	r9, r2
   15080:	movcc	r5, r4
   15084:	movcc	r4, #39	; 0x27
   15088:	strbcc	r4, [ip, r9]
   1508c:	movcc	r4, r5
   15090:	add	r5, r9, #1
   15094:	add	r9, r9, #2
   15098:	cmp	r5, r2
   1509c:	movcc	r1, r4
   150a0:	movcc	r4, #39	; 0x27
   150a4:	strbcc	r4, [ip, r5]
   150a8:	movcc	r4, r1
   150ac:	mov	r1, #0
   150b0:	str	r1, [fp, #-52]	; 0xffffffcc
   150b4:	b	14fe8 <dcngettext@plt+0x3b3c>
   150b8:	cmp	r1, #0
   150bc:	movwne	r1, #1
   150c0:	str	r1, [fp, #-56]	; 0xffffffc8
   150c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   150c8:	cmp	r0, #0
   150cc:	beq	14af4 <dcngettext@plt+0x3648>
   150d0:	b	14b28 <dcngettext@plt+0x367c>
   150d4:	mov	r8, #0
   150d8:	mov	r4, r1
   150dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   150e0:	tst	r0, #1
   150e4:	beq	14760 <dcngettext@plt+0x32b4>
   150e8:	b	14a14 <dcngettext@plt+0x3568>
   150ec:	mov	r7, sl
   150f0:	b	150f8 <dcngettext@plt+0x3c4c>
   150f4:	mvn	r7, #0
   150f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   150fc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15100:	ldr	r2, [sp, #88]	; 0x58
   15104:	eor	r0, r1, #2
   15108:	orr	r0, r0, r9
   1510c:	clz	r0, r0
   15110:	lsr	r0, r0, #5
   15114:	tst	r3, r0
   15118:	bne	15190 <dcngettext@plt+0x3ce4>
   1511c:	subs	r0, r1, #2
   15120:	movwne	r0, #1
   15124:	orr	r0, r3, r0
   15128:	tst	r0, #1
   1512c:	ldreq	r0, [sp, #60]	; 0x3c
   15130:	eoreq	r0, r0, #1
   15134:	tsteq	r0, #1
   15138:	bne	1526c <dcngettext@plt+0x3dc0>
   1513c:	tst	r4, #1
   15140:	bne	15230 <dcngettext@plt+0x3d84>
   15144:	ldr	r6, [sp, #56]	; 0x38
   15148:	mov	r8, #0
   1514c:	cmp	r6, #0
   15150:	beq	15268 <dcngettext@plt+0x3dbc>
   15154:	mov	r1, #0
   15158:	mov	r4, #2
   1515c:	cmp	r5, #0
   15160:	mov	r0, r2
   15164:	mov	r3, #0
   15168:	str	r1, [sp, #84]	; 0x54
   1516c:	beq	13fb4 <dcngettext@plt+0x2b08>
   15170:	b	1526c <dcngettext@plt+0x3dc0>
   15174:	movw	r0, #32032	; 0x7d20
   15178:	movt	r0, #1
   1517c:	str	r0, [sp, #76]	; 0x4c
   15180:	mov	r9, #0
   15184:	tst	r8, #1
   15188:	beq	1424c <dcngettext@plt+0x2da0>
   1518c:	b	1438c <dcngettext@plt+0x2ee0>
   15190:	ldr	r1, [sp, #88]	; 0x58
   15194:	mov	r0, #2
   15198:	tst	r1, #1
   1519c:	movwne	r0, #4
   151a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   151a4:	ldr	r1, [fp, #12]
   151a8:	cmp	r2, #2
   151ac:	moveq	r2, r0
   151b0:	b	151e8 <dcngettext@plt+0x3d3c>
   151b4:	ldr	ip, [fp, #-84]	; 0xffffffac
   151b8:	ldr	lr, [fp, #-80]	; 0xffffffb0
   151bc:	ldr	r1, [fp, #12]
   151c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   151c4:	b	151e8 <dcngettext@plt+0x3d3c>
   151c8:	ldr	r1, [sp, #88]	; 0x58
   151cc:	ldr	lr, [fp, #-80]	; 0xffffffb0
   151d0:	ldr	r5, [sp, #28]
   151d4:	mov	r0, #2
   151d8:	tst	r1, #1
   151dc:	ldr	r1, [fp, #12]
   151e0:	movwne	r0, #4
   151e4:	mov	r2, r0
   151e8:	mov	r0, #0
   151ec:	bic	r1, r1, #2
   151f0:	str	r2, [sp]
   151f4:	mov	r2, lr
   151f8:	str	r0, [sp, #8]
   151fc:	ldr	r0, [sp, #72]	; 0x48
   15200:	str	r1, [sp, #4]
   15204:	mov	r1, r5
   15208:	str	r0, [sp, #12]
   1520c:	ldr	r0, [sp, #76]	; 0x4c
   15210:	str	r0, [sp, #16]
   15214:	mov	r0, ip
   15218:	mov	r3, r7
   1521c:	bl	13f28 <dcngettext@plt+0x2a7c>
   15220:	mov	r9, r0
   15224:	mov	r0, r9
   15228:	sub	sp, fp, #28
   1522c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15230:	mov	r0, #5
   15234:	ldr	r1, [sp, #56]	; 0x38
   15238:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1523c:	str	r0, [sp]
   15240:	ldr	r0, [fp, #12]
   15244:	str	r0, [sp, #4]
   15248:	ldr	r0, [fp, #16]
   1524c:	str	r0, [sp, #8]
   15250:	ldr	r0, [sp, #72]	; 0x48
   15254:	str	r0, [sp, #12]
   15258:	ldr	r0, [sp, #76]	; 0x4c
   1525c:	str	r0, [sp, #16]
   15260:	ldr	r0, [fp, #-84]	; 0xffffffac
   15264:	b	15218 <dcngettext@plt+0x3d6c>
   15268:	mov	r3, #0
   1526c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15270:	cmp	r1, #0
   15274:	beq	152b0 <dcngettext@plt+0x3e04>
   15278:	ldr	r2, [fp, #-84]	; 0xffffffac
   1527c:	tst	r3, #1
   15280:	bne	152b4 <dcngettext@plt+0x3e08>
   15284:	ldrb	r0, [r1]
   15288:	cmp	r0, #0
   1528c:	beq	152b4 <dcngettext@plt+0x3e08>
   15290:	add	r1, r1, #1
   15294:	cmp	r9, r5
   15298:	strbcc	r0, [r2, r9]
   1529c:	add	r9, r9, #1
   152a0:	ldrb	r0, [r1], #1
   152a4:	cmp	r0, #0
   152a8:	bne	15294 <dcngettext@plt+0x3de8>
   152ac:	b	152b4 <dcngettext@plt+0x3e08>
   152b0:	ldr	r2, [fp, #-84]	; 0xffffffac
   152b4:	cmp	r9, r5
   152b8:	movcc	r0, #0
   152bc:	strbcc	r0, [r2, r9]
   152c0:	mov	r0, r9
   152c4:	sub	sp, fp, #28
   152c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152cc:	mov	r0, #4
   152d0:	b	151a0 <dcngettext@plt+0x3cf4>
   152d4:	bl	11494 <abort@plt>
   152d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152dc:	add	fp, sp, #28
   152e0:	sub	sp, sp, #28
   152e4:	movw	r5, #37280	; 0x91a0
   152e8:	cmp	r2, #0
   152ec:	mov	r4, r1
   152f0:	mov	r7, r0
   152f4:	str	r0, [sp, #20]
   152f8:	movt	r5, #2
   152fc:	movne	r5, r2
   15300:	bl	11374 <__errno_location@plt>
   15304:	mov	sl, r0
   15308:	ldr	r2, [r5, #40]	; 0x28
   1530c:	ldr	r3, [r5, #44]	; 0x2c
   15310:	ldm	r5, {r0, r1}
   15314:	orr	r8, r1, #1
   15318:	add	r9, r5, #8
   1531c:	mov	r1, #0
   15320:	ldr	r6, [sl]
   15324:	stm	sp, {r0, r8, r9}
   15328:	mov	r0, #0
   1532c:	str	r2, [sp, #12]
   15330:	str	r3, [sp, #16]
   15334:	mov	r2, r7
   15338:	mov	r3, r4
   1533c:	str	r6, [sp, #24]
   15340:	mov	r6, r4
   15344:	bl	13f28 <dcngettext@plt+0x2a7c>
   15348:	add	r7, r0, #1
   1534c:	mov	r0, r7
   15350:	bl	16e10 <dcngettext@plt+0x5964>
   15354:	mov	r4, r0
   15358:	ldr	r0, [r5]
   1535c:	ldr	r2, [r5, #44]	; 0x2c
   15360:	ldr	r1, [r5, #40]	; 0x28
   15364:	mov	r3, r6
   15368:	stm	sp, {r0, r8, r9}
   1536c:	str	r2, [sp, #16]
   15370:	ldr	r2, [sp, #20]
   15374:	str	r1, [sp, #12]
   15378:	mov	r0, r4
   1537c:	mov	r1, r7
   15380:	bl	13f28 <dcngettext@plt+0x2a7c>
   15384:	ldr	r0, [sp, #24]
   15388:	str	r0, [sl]
   1538c:	mov	r0, r4
   15390:	sub	sp, fp, #28
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1539c:	add	fp, sp, #28
   153a0:	sub	sp, sp, #36	; 0x24
   153a4:	movw	r8, #37280	; 0x91a0
   153a8:	cmp	r3, #0
   153ac:	mov	r4, r2
   153b0:	str	r2, [sp, #24]
   153b4:	mov	r5, r1
   153b8:	mov	r6, r0
   153bc:	str	r0, [sp, #20]
   153c0:	movt	r8, #2
   153c4:	movne	r8, r3
   153c8:	bl	11374 <__errno_location@plt>
   153cc:	str	r0, [sp, #28]
   153d0:	ldr	r1, [r8, #40]	; 0x28
   153d4:	ldr	r2, [r8, #44]	; 0x2c
   153d8:	ldr	r7, [r0]
   153dc:	cmp	r4, #0
   153e0:	add	sl, r8, #8
   153e4:	mov	r0, #0
   153e8:	ldm	r8, {r3, r9}
   153ec:	orreq	r9, r9, #1
   153f0:	stm	sp, {r3, r9, sl}
   153f4:	str	r1, [sp, #12]
   153f8:	str	r2, [sp, #16]
   153fc:	mov	r1, #0
   15400:	mov	r2, r6
   15404:	mov	r3, r5
   15408:	str	r7, [sp, #32]
   1540c:	mov	r7, r5
   15410:	bl	13f28 <dcngettext@plt+0x2a7c>
   15414:	add	r4, r0, #1
   15418:	mov	r5, r0
   1541c:	mov	r0, r4
   15420:	bl	16e10 <dcngettext@plt+0x5964>
   15424:	mov	r6, r0
   15428:	ldr	r0, [r8]
   1542c:	ldr	r2, [r8, #44]	; 0x2c
   15430:	ldr	r1, [r8, #40]	; 0x28
   15434:	mov	r3, r7
   15438:	stm	sp, {r0, r9, sl}
   1543c:	str	r2, [sp, #16]
   15440:	ldr	r2, [sp, #20]
   15444:	str	r1, [sp, #12]
   15448:	mov	r0, r6
   1544c:	mov	r1, r4
   15450:	bl	13f28 <dcngettext@plt+0x2a7c>
   15454:	ldr	r0, [sp, #24]
   15458:	ldr	r1, [sp, #32]
   1545c:	ldr	r2, [sp, #28]
   15460:	cmp	r0, #0
   15464:	str	r1, [r2]
   15468:	strne	r5, [r0]
   1546c:	mov	r0, r6
   15470:	sub	sp, fp, #28
   15474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15478:	push	{r4, r5, r6, r7, fp, lr}
   1547c:	add	fp, sp, #16
   15480:	movw	r4, #37216	; 0x9160
   15484:	movt	r4, #2
   15488:	ldrd	r6, [r4]
   1548c:	cmp	r7, #2
   15490:	blt	154bc <dcngettext@plt+0x4010>
   15494:	add	r5, r6, #12
   15498:	mov	r7, #0
   1549c:	ldr	r0, [r5, r7, lsl #3]
   154a0:	bl	174bc <dcngettext@plt+0x6010>
   154a4:	ldr	r1, [r4, #4]
   154a8:	add	r2, r7, #2
   154ac:	add	r0, r7, #1
   154b0:	mov	r7, r0
   154b4:	cmp	r2, r1
   154b8:	blt	1549c <dcngettext@plt+0x3ff0>
   154bc:	ldr	r0, [r6, #4]
   154c0:	movw	r5, #37328	; 0x91d0
   154c4:	movt	r5, #2
   154c8:	cmp	r0, r5
   154cc:	beq	154e0 <dcngettext@plt+0x4034>
   154d0:	bl	174bc <dcngettext@plt+0x6010>
   154d4:	mov	r0, #256	; 0x100
   154d8:	str	r0, [r4, #8]
   154dc:	str	r5, [r4, #12]
   154e0:	add	r5, r4, #8
   154e4:	cmp	r6, r5
   154e8:	beq	154f8 <dcngettext@plt+0x404c>
   154ec:	mov	r0, r6
   154f0:	bl	174bc <dcngettext@plt+0x6010>
   154f4:	str	r5, [r4]
   154f8:	mov	r0, #1
   154fc:	str	r0, [r4, #4]
   15500:	pop	{r4, r5, r6, r7, fp, pc}
   15504:	movw	r3, #37280	; 0x91a0
   15508:	mvn	r2, #0
   1550c:	movt	r3, #2
   15510:	b	15514 <dcngettext@plt+0x4068>
   15514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15518:	add	fp, sp, #28
   1551c:	sub	sp, sp, #44	; 0x2c
   15520:	mov	r7, r3
   15524:	str	r2, [sp, #36]	; 0x24
   15528:	str	r1, [sp, #32]
   1552c:	mov	r5, r0
   15530:	bl	11374 <__errno_location@plt>
   15534:	cmp	r5, #0
   15538:	bmi	156a0 <dcngettext@plt+0x41f4>
   1553c:	cmn	r5, #-2147483647	; 0x80000001
   15540:	beq	156a0 <dcngettext@plt+0x41f4>
   15544:	movw	r8, #37216	; 0x9160
   15548:	mov	r4, r0
   1554c:	ldr	r0, [r0]
   15550:	movt	r8, #2
   15554:	str	r4, [sp, #28]
   15558:	ldr	r1, [r8, #4]
   1555c:	ldr	r6, [r8]
   15560:	str	r0, [sp, #24]
   15564:	cmp	r1, r5
   15568:	ble	15574 <dcngettext@plt+0x40c8>
   1556c:	mov	sl, r6
   15570:	b	155dc <dcngettext@plt+0x4130>
   15574:	mov	r0, #8
   15578:	add	r9, r8, #8
   1557c:	str	r1, [fp, #-32]	; 0xffffffe0
   15580:	sub	r1, r5, r1
   15584:	mvn	r3, #-2147483648	; 0x80000000
   15588:	str	r0, [sp]
   1558c:	subs	r0, r6, r9
   15590:	add	r2, r1, #1
   15594:	sub	r1, fp, #32
   15598:	movne	r0, r6
   1559c:	bl	17010 <dcngettext@plt+0x5b64>
   155a0:	mov	sl, r0
   155a4:	cmp	r6, r9
   155a8:	str	r0, [r8]
   155ac:	bne	155b8 <dcngettext@plt+0x410c>
   155b0:	ldrd	r0, [r8, #8]
   155b4:	stm	sl, {r0, r1}
   155b8:	ldr	r1, [r8, #4]
   155bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155c0:	add	r0, sl, r1, lsl #3
   155c4:	sub	r1, r2, r1
   155c8:	lsl	r2, r1, #3
   155cc:	mov	r1, #0
   155d0:	bl	1138c <memset@plt>
   155d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155d8:	str	r0, [r8, #4]
   155dc:	mov	r9, sl
   155e0:	ldm	r7, {r0, r1}
   155e4:	orr	r8, r1, #1
   155e8:	add	r1, r7, #8
   155ec:	ldr	r2, [r7, #40]	; 0x28
   155f0:	ldr	r3, [r7, #44]	; 0x2c
   155f4:	ldr	r6, [r9, r5, lsl #3]!
   155f8:	str	r1, [sp, #20]
   155fc:	ldr	r4, [r9, #4]!
   15600:	stm	sp, {r0, r8}
   15604:	add	r0, sp, #8
   15608:	stm	r0, {r1, r2, r3}
   1560c:	ldr	r2, [sp, #32]
   15610:	ldr	r3, [sp, #36]	; 0x24
   15614:	mov	r1, r6
   15618:	mov	r0, r4
   1561c:	bl	13f28 <dcngettext@plt+0x2a7c>
   15620:	cmp	r6, r0
   15624:	bhi	15688 <dcngettext@plt+0x41dc>
   15628:	add	r6, r0, #1
   1562c:	movw	r0, #37328	; 0x91d0
   15630:	movt	r0, #2
   15634:	str	r6, [sl, r5, lsl #3]
   15638:	cmp	r4, r0
   1563c:	beq	15648 <dcngettext@plt+0x419c>
   15640:	mov	r0, r4
   15644:	bl	174bc <dcngettext@plt+0x6010>
   15648:	mov	r0, r6
   1564c:	bl	16e10 <dcngettext@plt+0x5964>
   15650:	str	r0, [r9]
   15654:	mov	r4, r0
   15658:	add	r3, sp, #8
   1565c:	ldr	r0, [r7]
   15660:	ldr	r1, [r7, #40]	; 0x28
   15664:	ldr	r2, [r7, #44]	; 0x2c
   15668:	stm	sp, {r0, r8}
   1566c:	ldr	r0, [sp, #20]
   15670:	stm	r3, {r0, r1, r2}
   15674:	ldr	r2, [sp, #32]
   15678:	ldr	r3, [sp, #36]	; 0x24
   1567c:	mov	r0, r4
   15680:	mov	r1, r6
   15684:	bl	13f28 <dcngettext@plt+0x2a7c>
   15688:	ldr	r1, [sp, #24]
   1568c:	ldr	r0, [sp, #28]
   15690:	str	r1, [r0]
   15694:	mov	r0, r4
   15698:	sub	sp, fp, #28
   1569c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156a0:	bl	11494 <abort@plt>
   156a4:	movw	r3, #37280	; 0x91a0
   156a8:	movt	r3, #2
   156ac:	b	15514 <dcngettext@plt+0x4068>
   156b0:	movw	r3, #37280	; 0x91a0
   156b4:	mov	r1, r0
   156b8:	mov	r0, #0
   156bc:	mvn	r2, #0
   156c0:	movt	r3, #2
   156c4:	b	15514 <dcngettext@plt+0x4068>
   156c8:	movw	r3, #37280	; 0x91a0
   156cc:	mov	r2, r1
   156d0:	mov	r1, r0
   156d4:	mov	r0, #0
   156d8:	movt	r3, #2
   156dc:	b	15514 <dcngettext@plt+0x4068>
   156e0:	push	{fp, lr}
   156e4:	mov	fp, sp
   156e8:	sub	sp, sp, #48	; 0x30
   156ec:	vmov.i32	q8, #0	; 0x00000000
   156f0:	mov	ip, #32
   156f4:	mov	r3, sp
   156f8:	mov	lr, r2
   156fc:	cmp	r1, #10
   15700:	add	r2, r3, #16
   15704:	vst1.64	{d16-d17}, [r3], ip
   15708:	vst1.64	{d16-d17}, [r2]
   1570c:	vst1.64	{d16-d17}, [r3]
   15710:	beq	15730 <dcngettext@plt+0x4284>
   15714:	str	r1, [sp]
   15718:	mov	r3, sp
   1571c:	mov	r1, lr
   15720:	mvn	r2, #0
   15724:	bl	15514 <dcngettext@plt+0x4068>
   15728:	mov	sp, fp
   1572c:	pop	{fp, pc}
   15730:	bl	11494 <abort@plt>
   15734:	push	{r4, sl, fp, lr}
   15738:	add	fp, sp, #8
   1573c:	sub	sp, sp, #48	; 0x30
   15740:	vmov.i32	q8, #0	; 0x00000000
   15744:	mov	ip, r3
   15748:	mov	r3, sp
   1574c:	mov	lr, #32
   15750:	cmp	r1, #10
   15754:	add	r4, r3, #16
   15758:	vst1.64	{d16-d17}, [r3], lr
   1575c:	vst1.64	{d16-d17}, [r4]
   15760:	vst1.64	{d16-d17}, [r3]
   15764:	beq	15784 <dcngettext@plt+0x42d8>
   15768:	str	r1, [sp]
   1576c:	mov	r1, r2
   15770:	mov	r3, sp
   15774:	mov	r2, ip
   15778:	bl	15514 <dcngettext@plt+0x4068>
   1577c:	sub	sp, fp, #8
   15780:	pop	{r4, sl, fp, pc}
   15784:	bl	11494 <abort@plt>
   15788:	push	{fp, lr}
   1578c:	mov	fp, sp
   15790:	sub	sp, sp, #48	; 0x30
   15794:	vmov.i32	q8, #0	; 0x00000000
   15798:	mov	r3, sp
   1579c:	mov	ip, #32
   157a0:	cmp	r0, #10
   157a4:	add	r2, r3, #16
   157a8:	vst1.64	{d16-d17}, [r3], ip
   157ac:	vst1.64	{d16-d17}, [r2]
   157b0:	vst1.64	{d16-d17}, [r3]
   157b4:	beq	157d4 <dcngettext@plt+0x4328>
   157b8:	str	r0, [sp]
   157bc:	mov	r3, sp
   157c0:	mov	r0, #0
   157c4:	mvn	r2, #0
   157c8:	bl	15514 <dcngettext@plt+0x4068>
   157cc:	mov	sp, fp
   157d0:	pop	{fp, pc}
   157d4:	bl	11494 <abort@plt>
   157d8:	push	{fp, lr}
   157dc:	mov	fp, sp
   157e0:	sub	sp, sp, #48	; 0x30
   157e4:	vmov.i32	q8, #0	; 0x00000000
   157e8:	mov	r3, sp
   157ec:	mov	ip, #32
   157f0:	cmp	r0, #10
   157f4:	add	lr, r3, #16
   157f8:	vst1.64	{d16-d17}, [r3], ip
   157fc:	vst1.64	{d16-d17}, [lr]
   15800:	vst1.64	{d16-d17}, [r3]
   15804:	beq	15820 <dcngettext@plt+0x4374>
   15808:	str	r0, [sp]
   1580c:	mov	r3, sp
   15810:	mov	r0, #0
   15814:	bl	15514 <dcngettext@plt+0x4068>
   15818:	mov	sp, fp
   1581c:	pop	{fp, pc}
   15820:	bl	11494 <abort@plt>
   15824:	push	{r4, sl, fp, lr}
   15828:	add	fp, sp, #8
   1582c:	sub	sp, sp, #48	; 0x30
   15830:	mov	lr, r0
   15834:	movw	r0, #37280	; 0x91a0
   15838:	mov	ip, r1
   1583c:	mov	r1, #32
   15840:	mov	r4, #1
   15844:	movt	r0, #2
   15848:	add	r3, r0, #16
   1584c:	vld1.64	{d16-d17}, [r0], r1
   15850:	vld1.64	{d20-d21}, [r0]
   15854:	vld1.64	{d18-d19}, [r3]
   15858:	mov	r3, sp
   1585c:	add	r0, r3, #32
   15860:	add	r1, r3, #16
   15864:	vst1.64	{d20-d21}, [r0]
   15868:	mov	r0, #28
   1586c:	vst1.64	{d18-d19}, [r1]
   15870:	mov	r1, r3
   15874:	and	r0, r0, r2, lsr #3
   15878:	and	r2, r2, #31
   1587c:	vst1.64	{d16-d17}, [r1], r0
   15880:	ldr	r0, [r1, #8]
   15884:	bic	r4, r4, r0, lsr r2
   15888:	eor	r0, r0, r4, lsl r2
   1588c:	mov	r2, ip
   15890:	str	r0, [r1, #8]
   15894:	mov	r0, #0
   15898:	mov	r1, lr
   1589c:	bl	15514 <dcngettext@plt+0x4068>
   158a0:	sub	sp, fp, #8
   158a4:	pop	{r4, sl, fp, pc}
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	sub	sp, sp, #48	; 0x30
   158b4:	mov	ip, r0
   158b8:	movw	r0, #37280	; 0x91a0
   158bc:	mov	r2, #32
   158c0:	movt	r0, #2
   158c4:	add	r3, r0, #16
   158c8:	vld1.64	{d16-d17}, [r0], r2
   158cc:	vld1.64	{d20-d21}, [r0]
   158d0:	vld1.64	{d18-d19}, [r3]
   158d4:	mov	r3, sp
   158d8:	add	r0, r3, #32
   158dc:	add	r2, r3, #16
   158e0:	vst1.64	{d20-d21}, [r0]
   158e4:	mov	r0, #28
   158e8:	vst1.64	{d18-d19}, [r2]
   158ec:	mov	r2, r3
   158f0:	and	r0, r0, r1, lsr #3
   158f4:	and	r1, r1, #31
   158f8:	vst1.64	{d16-d17}, [r2], r0
   158fc:	mov	r0, #1
   15900:	ldr	lr, [r2, #8]
   15904:	bic	r0, r0, lr, lsr r1
   15908:	eor	r0, lr, r0, lsl r1
   1590c:	mov	r1, ip
   15910:	str	r0, [r2, #8]
   15914:	mov	r0, #0
   15918:	mvn	r2, #0
   1591c:	bl	15514 <dcngettext@plt+0x4068>
   15920:	mov	sp, fp
   15924:	pop	{fp, pc}
   15928:	push	{fp, lr}
   1592c:	mov	fp, sp
   15930:	sub	sp, sp, #48	; 0x30
   15934:	mov	r1, r0
   15938:	movw	r0, #37280	; 0x91a0
   1593c:	mov	r3, #32
   15940:	movt	r0, #2
   15944:	add	r2, r0, #16
   15948:	vld1.64	{d16-d17}, [r0], r3
   1594c:	mov	r3, sp
   15950:	vld1.64	{d18-d19}, [r2]
   15954:	vld1.64	{d20-d21}, [r0]
   15958:	add	r2, r3, #16
   1595c:	add	r0, r3, #32
   15960:	vst1.64	{d18-d19}, [r2]
   15964:	vst1.64	{d20-d21}, [r0]
   15968:	mov	r0, #12
   1596c:	mov	r2, r3
   15970:	vst1.64	{d16-d17}, [r2], r0
   15974:	ldr	r0, [r2]
   15978:	orr	r0, r0, #67108864	; 0x4000000
   1597c:	str	r0, [r2]
   15980:	mov	r0, #0
   15984:	mvn	r2, #0
   15988:	bl	15514 <dcngettext@plt+0x4068>
   1598c:	mov	sp, fp
   15990:	pop	{fp, pc}
   15994:	push	{fp, lr}
   15998:	mov	fp, sp
   1599c:	sub	sp, sp, #48	; 0x30
   159a0:	mov	ip, r1
   159a4:	mov	r1, r0
   159a8:	movw	r0, #37280	; 0x91a0
   159ac:	mov	r2, #32
   159b0:	movt	r0, #2
   159b4:	add	r3, r0, #16
   159b8:	vld1.64	{d16-d17}, [r0], r2
   159bc:	vld1.64	{d18-d19}, [r3]
   159c0:	vld1.64	{d20-d21}, [r0]
   159c4:	mov	r3, sp
   159c8:	add	r2, r3, #16
   159cc:	add	r0, r3, #32
   159d0:	vst1.64	{d18-d19}, [r2]
   159d4:	vst1.64	{d20-d21}, [r0]
   159d8:	mov	r0, #12
   159dc:	mov	r2, r3
   159e0:	vst1.64	{d16-d17}, [r2], r0
   159e4:	ldr	r0, [r2]
   159e8:	orr	r0, r0, #67108864	; 0x4000000
   159ec:	str	r0, [r2]
   159f0:	mov	r0, #0
   159f4:	mov	r2, ip
   159f8:	bl	15514 <dcngettext@plt+0x4068>
   159fc:	mov	sp, fp
   15a00:	pop	{fp, pc}
   15a04:	push	{r4, sl, fp, lr}
   15a08:	add	fp, sp, #8
   15a0c:	sub	sp, sp, #96	; 0x60
   15a10:	vmov.i32	q8, #0	; 0x00000000
   15a14:	mov	ip, r2
   15a18:	mov	r2, sp
   15a1c:	mov	r4, #28
   15a20:	cmp	r1, #10
   15a24:	mov	r3, r2
   15a28:	add	lr, r2, #16
   15a2c:	vst1.64	{d16-d17}, [r3], r4
   15a30:	vst1.64	{d16-d17}, [lr]
   15a34:	vst1.32	{d16-d17}, [r3]
   15a38:	beq	15a88 <dcngettext@plt+0x45dc>
   15a3c:	vld1.64	{d16-d17}, [r2], r4
   15a40:	vld1.64	{d18-d19}, [lr]
   15a44:	add	r3, sp, #48	; 0x30
   15a48:	vld1.32	{d20-d21}, [r2]
   15a4c:	add	r2, r3, #20
   15a50:	add	r4, r3, #4
   15a54:	vst1.32	{d18-d19}, [r2]
   15a58:	add	r2, r3, #32
   15a5c:	vst1.32	{d16-d17}, [r4]
   15a60:	vst1.32	{d20-d21}, [r2]
   15a64:	str	r1, [sp, #48]	; 0x30
   15a68:	mvn	r2, #0
   15a6c:	ldr	r1, [sp, #60]	; 0x3c
   15a70:	orr	r1, r1, #67108864	; 0x4000000
   15a74:	str	r1, [sp, #60]	; 0x3c
   15a78:	mov	r1, ip
   15a7c:	bl	15514 <dcngettext@plt+0x4068>
   15a80:	sub	sp, fp, #8
   15a84:	pop	{r4, sl, fp, pc}
   15a88:	bl	11494 <abort@plt>
   15a8c:	push	{r4, r5, r6, sl, fp, lr}
   15a90:	add	fp, sp, #16
   15a94:	sub	sp, sp, #48	; 0x30
   15a98:	mov	ip, r3
   15a9c:	movw	r3, #37280	; 0x91a0
   15aa0:	mov	r6, #32
   15aa4:	cmp	r1, #0
   15aa8:	mov	r4, sp
   15aac:	movt	r3, #2
   15ab0:	cmpne	r2, #0
   15ab4:	add	r5, r4, #16
   15ab8:	add	lr, r3, #16
   15abc:	vld1.64	{d16-d17}, [r3], r6
   15ac0:	vld1.64	{d18-d19}, [lr]
   15ac4:	vld1.64	{d20-d21}, [r3]
   15ac8:	mov	r3, #10
   15acc:	vst1.64	{d16-d17}, [r4], r6
   15ad0:	vst1.64	{d18-d19}, [r5]
   15ad4:	vst1.64	{d20-d21}, [r4]
   15ad8:	str	r3, [sp]
   15adc:	bne	15ae4 <dcngettext@plt+0x4638>
   15ae0:	bl	11494 <abort@plt>
   15ae4:	str	r2, [sp, #44]	; 0x2c
   15ae8:	str	r1, [sp, #40]	; 0x28
   15aec:	mov	r3, sp
   15af0:	mov	r1, ip
   15af4:	mvn	r2, #0
   15af8:	bl	15514 <dcngettext@plt+0x4068>
   15afc:	sub	sp, fp, #16
   15b00:	pop	{r4, r5, r6, sl, fp, pc}
   15b04:	push	{r4, r5, r6, sl, fp, lr}
   15b08:	add	fp, sp, #16
   15b0c:	sub	sp, sp, #48	; 0x30
   15b10:	mov	lr, r3
   15b14:	movw	r3, #37280	; 0x91a0
   15b18:	mov	r6, #32
   15b1c:	cmp	r1, #0
   15b20:	mov	r4, sp
   15b24:	movt	r3, #2
   15b28:	cmpne	r2, #0
   15b2c:	add	r5, r4, #16
   15b30:	add	ip, r3, #16
   15b34:	vld1.64	{d16-d17}, [r3], r6
   15b38:	vld1.64	{d18-d19}, [ip]
   15b3c:	vld1.64	{d20-d21}, [r3]
   15b40:	mov	r3, #10
   15b44:	vst1.64	{d16-d17}, [r4], r6
   15b48:	vst1.64	{d18-d19}, [r5]
   15b4c:	vst1.64	{d20-d21}, [r4]
   15b50:	str	r3, [sp]
   15b54:	bne	15b5c <dcngettext@plt+0x46b0>
   15b58:	bl	11494 <abort@plt>
   15b5c:	ldr	ip, [fp, #8]
   15b60:	str	r2, [sp, #44]	; 0x2c
   15b64:	str	r1, [sp, #40]	; 0x28
   15b68:	mov	r3, sp
   15b6c:	mov	r1, lr
   15b70:	mov	r2, ip
   15b74:	bl	15514 <dcngettext@plt+0x4068>
   15b78:	sub	sp, fp, #16
   15b7c:	pop	{r4, r5, r6, sl, fp, pc}
   15b80:	push	{r4, sl, fp, lr}
   15b84:	add	fp, sp, #8
   15b88:	sub	sp, sp, #48	; 0x30
   15b8c:	movw	r3, #37280	; 0x91a0
   15b90:	mov	lr, #32
   15b94:	mov	ip, r2
   15b98:	cmp	r0, #0
   15b9c:	movt	r3, #2
   15ba0:	cmpne	r1, #0
   15ba4:	add	r2, r3, #16
   15ba8:	vld1.64	{d16-d17}, [r3], lr
   15bac:	vld1.64	{d20-d21}, [r3]
   15bb0:	vld1.64	{d18-d19}, [r2]
   15bb4:	mov	r2, sp
   15bb8:	add	r4, r2, #16
   15bbc:	vst1.64	{d16-d17}, [r2], lr
   15bc0:	vst1.64	{d20-d21}, [r2]
   15bc4:	mov	r2, #10
   15bc8:	vst1.64	{d18-d19}, [r4]
   15bcc:	str	r2, [sp]
   15bd0:	bne	15bd8 <dcngettext@plt+0x472c>
   15bd4:	bl	11494 <abort@plt>
   15bd8:	str	r1, [sp, #44]	; 0x2c
   15bdc:	str	r0, [sp, #40]	; 0x28
   15be0:	mov	r3, sp
   15be4:	mov	r0, #0
   15be8:	mov	r1, ip
   15bec:	mvn	r2, #0
   15bf0:	bl	15514 <dcngettext@plt+0x4068>
   15bf4:	sub	sp, fp, #8
   15bf8:	pop	{r4, sl, fp, pc}
   15bfc:	push	{r4, r5, fp, lr}
   15c00:	add	fp, sp, #8
   15c04:	sub	sp, sp, #48	; 0x30
   15c08:	mov	ip, r3
   15c0c:	movw	r3, #37280	; 0x91a0
   15c10:	mov	r4, #32
   15c14:	mov	lr, r2
   15c18:	cmp	r0, #0
   15c1c:	movt	r3, #2
   15c20:	cmpne	r1, #0
   15c24:	add	r2, r3, #16
   15c28:	vld1.64	{d16-d17}, [r3], r4
   15c2c:	vld1.64	{d20-d21}, [r3]
   15c30:	vld1.64	{d18-d19}, [r2]
   15c34:	mov	r2, sp
   15c38:	add	r5, r2, #16
   15c3c:	vst1.64	{d16-d17}, [r2], r4
   15c40:	vst1.64	{d20-d21}, [r2]
   15c44:	mov	r2, #10
   15c48:	vst1.64	{d18-d19}, [r5]
   15c4c:	str	r2, [sp]
   15c50:	bne	15c58 <dcngettext@plt+0x47ac>
   15c54:	bl	11494 <abort@plt>
   15c58:	str	r1, [sp, #44]	; 0x2c
   15c5c:	str	r0, [sp, #40]	; 0x28
   15c60:	mov	r3, sp
   15c64:	mov	r0, #0
   15c68:	mov	r1, lr
   15c6c:	mov	r2, ip
   15c70:	bl	15514 <dcngettext@plt+0x4068>
   15c74:	sub	sp, fp, #8
   15c78:	pop	{r4, r5, fp, pc}
   15c7c:	movw	r3, #37168	; 0x9130
   15c80:	movt	r3, #2
   15c84:	b	15514 <dcngettext@plt+0x4068>
   15c88:	movw	r3, #37168	; 0x9130
   15c8c:	mov	r2, r1
   15c90:	mov	r1, r0
   15c94:	mov	r0, #0
   15c98:	movt	r3, #2
   15c9c:	b	15514 <dcngettext@plt+0x4068>
   15ca0:	movw	r3, #37168	; 0x9130
   15ca4:	mvn	r2, #0
   15ca8:	movt	r3, #2
   15cac:	b	15514 <dcngettext@plt+0x4068>
   15cb0:	movw	r3, #37168	; 0x9130
   15cb4:	mov	r1, r0
   15cb8:	mov	r0, #0
   15cbc:	mvn	r2, #0
   15cc0:	movt	r3, #2
   15cc4:	b	15514 <dcngettext@plt+0x4068>
   15cc8:	push	{r4, r5, fp, lr}
   15ccc:	add	fp, sp, #8
   15cd0:	mov	r5, r0
   15cd4:	mov	r0, #33	; 0x21
   15cd8:	bl	16de0 <dcngettext@plt+0x5934>
   15cdc:	add	r1, r5, #44	; 0x2c
   15ce0:	mov	r2, #32
   15ce4:	mov	r4, r0
   15ce8:	bl	11398 <strncpy@plt>
   15cec:	mov	r5, #0
   15cf0:	strb	r5, [r0, #32]
   15cf4:	bl	1135c <strlen@plt>
   15cf8:	cmp	r0, #1
   15cfc:	blt	15d24 <dcngettext@plt+0x4878>
   15d00:	add	r1, r4, r0
   15d04:	mov	r0, r1
   15d08:	ldrb	r2, [r0, #-1]!
   15d0c:	cmp	r2, #32
   15d10:	bne	15d24 <dcngettext@plt+0x4878>
   15d14:	strb	r5, [r1, #-1]
   15d18:	cmp	r4, r0
   15d1c:	mov	r1, r0
   15d20:	bcc	15d08 <dcngettext@plt+0x485c>
   15d24:	mov	r0, r4
   15d28:	pop	{r4, r5, fp, pc}
   15d2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d30:	add	fp, sp, #28
   15d34:	sub	sp, sp, #12
   15d38:	mov	r6, #0
   15d3c:	mov	r4, r3
   15d40:	str	r2, [sp, #4]
   15d44:	mov	sl, r1
   15d48:	str	r6, [sp, #8]
   15d4c:	bl	111d0 <utmpxname@plt>
   15d50:	bl	11224 <setutxent@plt>
   15d54:	bl	114a0 <getutxent@plt>
   15d58:	cmp	r0, #0
   15d5c:	beq	15e20 <dcngettext@plt+0x4974>
   15d60:	mov	r7, r0
   15d64:	and	r8, r4, #1
   15d68:	mov	r5, #0
   15d6c:	tst	r4, #2
   15d70:	bne	15e28 <dcngettext@plt+0x497c>
   15d74:	mov	r9, #384	; 0x180
   15d78:	add	r4, sp, #8
   15d7c:	mov	r6, #0
   15d80:	ldrb	r0, [r7, #44]	; 0x2c
   15d84:	cmp	r0, #0
   15d88:	cmpne	r8, #0
   15d8c:	bne	15de4 <dcngettext@plt+0x4938>
   15d90:	ldr	r0, [sp, #8]
   15d94:	cmp	r5, r0
   15d98:	bne	15db8 <dcngettext@plt+0x490c>
   15d9c:	mov	r0, r6
   15da0:	mov	r1, r4
   15da4:	mov	r2, #1
   15da8:	mvn	r3, #0
   15dac:	str	r9, [sp]
   15db0:	bl	17010 <dcngettext@plt+0x5b64>
   15db4:	mov	r6, r0
   15db8:	add	r0, r5, r5, lsl #1
   15dbc:	mov	r1, r7
   15dc0:	mov	r2, #384	; 0x180
   15dc4:	add	r0, r6, r0, lsl #7
   15dc8:	bl	111f4 <memcpy@plt>
   15dcc:	add	r5, r5, #1
   15dd0:	bl	114a0 <getutxent@plt>
   15dd4:	mov	r7, r0
   15dd8:	cmp	r0, #0
   15ddc:	bne	15d80 <dcngettext@plt+0x48d4>
   15de0:	b	15f6c <dcngettext@plt+0x4ac0>
   15de4:	ldrh	r0, [r7]
   15de8:	cmp	r0, #7
   15dec:	bne	15d90 <dcngettext@plt+0x48e4>
   15df0:	ldr	r0, [r7, #4]
   15df4:	cmp	r0, #1
   15df8:	blt	15d90 <dcngettext@plt+0x48e4>
   15dfc:	mov	r1, #0
   15e00:	bl	1132c <kill@plt>
   15e04:	cmn	r0, #1
   15e08:	bgt	15d90 <dcngettext@plt+0x48e4>
   15e0c:	bl	11374 <__errno_location@plt>
   15e10:	ldr	r0, [r0]
   15e14:	cmp	r0, #3
   15e18:	bne	15d90 <dcngettext@plt+0x48e4>
   15e1c:	b	15dd0 <dcngettext@plt+0x4924>
   15e20:	mov	r5, #0
   15e24:	b	15f6c <dcngettext@plt+0x4ac0>
   15e28:	cmp	r8, #0
   15e2c:	bne	15eb8 <dcngettext@plt+0x4a0c>
   15e30:	mov	r8, #384	; 0x180
   15e34:	add	r4, sp, #8
   15e38:	mov	r6, #0
   15e3c:	ldrb	r0, [r7, #44]	; 0x2c
   15e40:	cmp	r0, #0
   15e44:	bne	15e80 <dcngettext@plt+0x49d4>
   15e48:	b	15e64 <dcngettext@plt+0x49b8>
   15e4c:	add	r0, r5, r5, lsl #1
   15e50:	mov	r1, r7
   15e54:	mov	r2, #384	; 0x180
   15e58:	add	r0, r6, r0, lsl #7
   15e5c:	bl	111f4 <memcpy@plt>
   15e60:	add	r5, r5, #1
   15e64:	bl	114a0 <getutxent@plt>
   15e68:	mov	r7, r0
   15e6c:	cmp	r0, #0
   15e70:	beq	15f6c <dcngettext@plt+0x4ac0>
   15e74:	ldrb	r0, [r7, #44]	; 0x2c
   15e78:	cmp	r0, #0
   15e7c:	beq	15e64 <dcngettext@plt+0x49b8>
   15e80:	ldrh	r0, [r7]
   15e84:	cmp	r0, #7
   15e88:	bne	15e64 <dcngettext@plt+0x49b8>
   15e8c:	ldr	r0, [sp, #8]
   15e90:	cmp	r5, r0
   15e94:	bne	15e4c <dcngettext@plt+0x49a0>
   15e98:	mov	r0, r6
   15e9c:	mov	r1, r4
   15ea0:	mov	r2, #1
   15ea4:	mvn	r3, #0
   15ea8:	str	r8, [sp]
   15eac:	bl	17010 <dcngettext@plt+0x5b64>
   15eb0:	mov	r6, r0
   15eb4:	b	15e4c <dcngettext@plt+0x49a0>
   15eb8:	mov	r4, #384	; 0x180
   15ebc:	add	r8, sp, #8
   15ec0:	mov	r6, #0
   15ec4:	ldrb	r0, [r7, #44]	; 0x2c
   15ec8:	cmp	r0, #0
   15ecc:	bne	15f08 <dcngettext@plt+0x4a5c>
   15ed0:	b	15eec <dcngettext@plt+0x4a40>
   15ed4:	add	r0, r5, r5, lsl #1
   15ed8:	mov	r1, r7
   15edc:	mov	r2, #384	; 0x180
   15ee0:	add	r0, r6, r0, lsl #7
   15ee4:	bl	111f4 <memcpy@plt>
   15ee8:	add	r5, r5, #1
   15eec:	bl	114a0 <getutxent@plt>
   15ef0:	mov	r7, r0
   15ef4:	cmp	r0, #0
   15ef8:	beq	15f6c <dcngettext@plt+0x4ac0>
   15efc:	ldrb	r0, [r7, #44]	; 0x2c
   15f00:	cmp	r0, #0
   15f04:	beq	15eec <dcngettext@plt+0x4a40>
   15f08:	ldrh	r0, [r7]
   15f0c:	cmp	r0, #7
   15f10:	bne	15eec <dcngettext@plt+0x4a40>
   15f14:	ldr	r0, [r7, #4]
   15f18:	cmp	r0, #1
   15f1c:	blt	15f40 <dcngettext@plt+0x4a94>
   15f20:	mov	r1, #0
   15f24:	bl	1132c <kill@plt>
   15f28:	cmn	r0, #1
   15f2c:	bgt	15f40 <dcngettext@plt+0x4a94>
   15f30:	bl	11374 <__errno_location@plt>
   15f34:	ldr	r0, [r0]
   15f38:	cmp	r0, #3
   15f3c:	beq	15eec <dcngettext@plt+0x4a40>
   15f40:	ldr	r0, [sp, #8]
   15f44:	cmp	r5, r0
   15f48:	bne	15ed4 <dcngettext@plt+0x4a28>
   15f4c:	mov	r0, r6
   15f50:	mov	r1, r8
   15f54:	mov	r2, #1
   15f58:	mvn	r3, #0
   15f5c:	str	r4, [sp]
   15f60:	bl	17010 <dcngettext@plt+0x5b64>
   15f64:	mov	r6, r0
   15f68:	b	15ed4 <dcngettext@plt+0x4a28>
   15f6c:	bl	113f8 <endutxent@plt>
   15f70:	ldr	r0, [sp, #4]
   15f74:	str	r5, [sl]
   15f78:	str	r6, [r0]
   15f7c:	mov	r0, #0
   15f80:	sub	sp, fp, #28
   15f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f88:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15f8c:	add	fp, sp, #24
   15f90:	mov	r4, r0
   15f94:	cmp	r0, #0
   15f98:	beq	15fcc <dcngettext@plt+0x4b20>
   15f9c:	mov	r0, r4
   15fa0:	bl	1135c <strlen@plt>
   15fa4:	add	r5, r0, #1
   15fa8:	cmp	r5, #58	; 0x3a
   15fac:	bls	15fd0 <dcngettext@plt+0x4b24>
   15fb0:	add	r0, r0, #10
   15fb4:	bic	r0, r0, #3
   15fb8:	bl	173b4 <dcngettext@plt+0x5f08>
   15fbc:	mov	r6, r0
   15fc0:	cmp	r0, #0
   15fc4:	bne	15fe4 <dcngettext@plt+0x4b38>
   15fc8:	b	1601c <dcngettext@plt+0x4b70>
   15fcc:	mov	r5, #0
   15fd0:	mov	r0, #64	; 0x40
   15fd4:	bl	173b4 <dcngettext@plt+0x5f08>
   15fd8:	mov	r6, r0
   15fdc:	cmp	r0, #0
   15fe0:	beq	1601c <dcngettext@plt+0x4b70>
   15fe4:	cmp	r4, #0
   15fe8:	mov	r0, r4
   15fec:	mov	r8, #0
   15ff0:	mov	r7, r6
   15ff4:	movwne	r0, #1
   15ff8:	str	r8, [r6]
   15ffc:	strb	r0, [r6, #4]
   16000:	strb	r8, [r7, #5]!
   16004:	beq	1601c <dcngettext@plt+0x4b70>
   16008:	mov	r0, r7
   1600c:	mov	r1, r4
   16010:	mov	r2, r5
   16014:	bl	111f4 <memcpy@plt>
   16018:	strb	r8, [r7, r5]
   1601c:	mov	r0, r6
   16020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16024:	push	{r4, sl, fp, lr}
   16028:	add	fp, sp, #8
   1602c:	cmp	r0, #2
   16030:	popcc	{r4, sl, fp, pc}
   16034:	ldr	r4, [r0]
   16038:	bl	174bc <dcngettext@plt+0x6010>
   1603c:	cmp	r4, #0
   16040:	mov	r0, r4
   16044:	bne	16034 <dcngettext@plt+0x4b88>
   16048:	pop	{r4, sl, fp, pc}
   1604c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16050:	add	fp, sp, #28
   16054:	sub	sp, sp, #4
   16058:	mov	r7, r2
   1605c:	mov	r5, r1
   16060:	cmp	r0, #0
   16064:	beq	160e0 <dcngettext@plt+0x4c34>
   16068:	mov	r6, r0
   1606c:	movw	r0, #32120	; 0x7d78
   16070:	movt	r0, #1
   16074:	bl	112b4 <getenv@plt>
   16078:	mov	r9, r0
   1607c:	ldrb	r0, [r6, #4]
   16080:	cmp	r9, #0
   16084:	beq	160f4 <dcngettext@plt+0x4c48>
   16088:	cmp	r0, #0
   1608c:	beq	160a4 <dcngettext@plt+0x4bf8>
   16090:	add	r0, r6, #5
   16094:	mov	r1, r9
   16098:	bl	111ac <strcmp@plt>
   1609c:	cmp	r0, #0
   160a0:	beq	161e4 <dcngettext@plt+0x4d38>
   160a4:	mov	r0, r9
   160a8:	str	r7, [sp]
   160ac:	bl	1135c <strlen@plt>
   160b0:	add	sl, r0, #1
   160b4:	mov	r8, #1
   160b8:	cmp	sl, #58	; 0x3a
   160bc:	bls	16108 <dcngettext@plt+0x4c5c>
   160c0:	add	r0, r0, #10
   160c4:	bic	r0, r0, #3
   160c8:	bl	173b4 <dcngettext@plt+0x5f08>
   160cc:	cmp	r0, #0
   160d0:	bne	16118 <dcngettext@plt+0x4c6c>
   160d4:	mov	r0, #0
   160d8:	sub	sp, fp, #28
   160dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160e0:	mov	r0, r5
   160e4:	mov	r1, r7
   160e8:	sub	sp, fp, #28
   160ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160f0:	b	111a0 <gmtime_r@plt>
   160f4:	mov	r8, #0
   160f8:	cmp	r0, #0
   160fc:	mov	sl, #0
   16100:	str	r7, [sp]
   16104:	beq	161e0 <dcngettext@plt+0x4d34>
   16108:	mov	r0, #64	; 0x40
   1610c:	bl	173b4 <dcngettext@plt+0x5f08>
   16110:	cmp	r0, #0
   16114:	beq	160d4 <dcngettext@plt+0x4c28>
   16118:	mov	r4, r0
   1611c:	mov	r7, r5
   16120:	strb	r8, [r0, #4]
   16124:	mov	r0, #0
   16128:	cmp	r8, #0
   1612c:	mov	r5, r4
   16130:	str	r0, [r4]
   16134:	strb	r0, [r5, #5]!
   16138:	beq	16154 <dcngettext@plt+0x4ca8>
   1613c:	mov	r0, r5
   16140:	mov	r1, r9
   16144:	mov	r2, sl
   16148:	mov	r8, #0
   1614c:	bl	111f4 <memcpy@plt>
   16150:	strb	r8, [r5, sl]
   16154:	ldrb	r0, [r6, #4]
   16158:	mov	r5, r7
   1615c:	cmp	r0, #0
   16160:	beq	161c0 <dcngettext@plt+0x4d14>
   16164:	movw	r0, #32120	; 0x7d78
   16168:	add	r1, r6, #5
   1616c:	mov	r2, #1
   16170:	movt	r0, #1
   16174:	bl	11368 <setenv@plt>
   16178:	ldr	r7, [sp]
   1617c:	cmp	r0, #0
   16180:	beq	161d8 <dcngettext@plt+0x4d2c>
   16184:	bl	11374 <__errno_location@plt>
   16188:	ldr	r6, [r0]
   1618c:	mov	r5, r0
   16190:	cmp	r4, #2
   16194:	bcc	161b0 <dcngettext@plt+0x4d04>
   16198:	ldr	r7, [r4]
   1619c:	mov	r0, r4
   161a0:	bl	174bc <dcngettext@plt+0x6010>
   161a4:	cmp	r7, #0
   161a8:	mov	r4, r7
   161ac:	bne	16198 <dcngettext@plt+0x4cec>
   161b0:	str	r6, [r5]
   161b4:	mov	r0, #0
   161b8:	sub	sp, fp, #28
   161bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161c0:	movw	r0, #32120	; 0x7d78
   161c4:	movt	r0, #1
   161c8:	bl	1147c <unsetenv@plt>
   161cc:	ldr	r7, [sp]
   161d0:	cmp	r0, #0
   161d4:	bne	16184 <dcngettext@plt+0x4cd8>
   161d8:	bl	11260 <tzset@plt>
   161dc:	b	161e8 <dcngettext@plt+0x4d3c>
   161e0:	ldr	r7, [sp]
   161e4:	mov	r4, #1
   161e8:	mov	r0, r5
   161ec:	mov	r1, r7
   161f0:	bl	1123c <localtime_r@plt>
   161f4:	mov	sl, #1
   161f8:	cmp	r0, #0
   161fc:	mov	r9, #1
   16200:	beq	16214 <dcngettext@plt+0x4d68>
   16204:	mov	r0, r6
   16208:	mov	r1, r7
   1620c:	bl	162c0 <dcngettext@plt+0x4e14>
   16210:	eor	r9, r0, #1
   16214:	cmp	r4, #1
   16218:	beq	1627c <dcngettext@plt+0x4dd0>
   1621c:	bl	11374 <__errno_location@plt>
   16220:	mov	r6, r0
   16224:	ldr	r8, [r0]
   16228:	ldrb	r0, [r4, #4]
   1622c:	cmp	r0, #0
   16230:	beq	16298 <dcngettext@plt+0x4dec>
   16234:	movw	r0, #32120	; 0x7d78
   16238:	add	r1, r4, #5
   1623c:	mov	r2, #1
   16240:	movt	r0, #1
   16244:	bl	11368 <setenv@plt>
   16248:	cmp	r0, #0
   1624c:	beq	162ac <dcngettext@plt+0x4e00>
   16250:	ldr	r8, [r6]
   16254:	mov	sl, #0
   16258:	cmp	r4, #2
   1625c:	bcc	16278 <dcngettext@plt+0x4dcc>
   16260:	ldr	r5, [r4]
   16264:	mov	r0, r4
   16268:	bl	174bc <dcngettext@plt+0x6010>
   1626c:	cmp	r5, #0
   16270:	mov	r4, r5
   16274:	bne	16260 <dcngettext@plt+0x4db4>
   16278:	str	r8, [r6]
   1627c:	cmp	sl, #0
   16280:	moveq	r7, sl
   16284:	cmp	r9, #0
   16288:	movwne	r7, #0
   1628c:	mov	r0, r7
   16290:	sub	sp, fp, #28
   16294:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16298:	movw	r0, #32120	; 0x7d78
   1629c:	movt	r0, #1
   162a0:	bl	1147c <unsetenv@plt>
   162a4:	cmp	r0, #0
   162a8:	bne	16250 <dcngettext@plt+0x4da4>
   162ac:	bl	11260 <tzset@plt>
   162b0:	mov	sl, #1
   162b4:	cmp	r4, #2
   162b8:	bcs	16260 <dcngettext@plt+0x4db4>
   162bc:	b	16278 <dcngettext@plt+0x4dcc>
   162c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   162c4:	add	fp, sp, #28
   162c8:	sub	sp, sp, #4
   162cc:	ldr	r7, [r1, #40]	; 0x28
   162d0:	mov	r8, #1
   162d4:	cmp	r7, #0
   162d8:	beq	16378 <dcngettext@plt+0x4ecc>
   162dc:	mov	r5, r1
   162e0:	mov	r6, r0
   162e4:	cmp	r7, r1
   162e8:	bcc	162f8 <dcngettext@plt+0x4e4c>
   162ec:	add	r0, r5, #44	; 0x2c
   162f0:	cmp	r7, r0
   162f4:	bcc	16378 <dcngettext@plt+0x4ecc>
   162f8:	ldrb	r0, [r7]
   162fc:	cmp	r0, #0
   16300:	beq	1636c <dcngettext@plt+0x4ec0>
   16304:	add	r4, r6, #5
   16308:	mov	r0, r4
   1630c:	mov	r1, r7
   16310:	bl	111ac <strcmp@plt>
   16314:	cmp	r0, #0
   16318:	beq	1641c <dcngettext@plt+0x4f70>
   1631c:	ldrb	r0, [r4]
   16320:	cmp	r0, #0
   16324:	bne	16340 <dcngettext@plt+0x4e94>
   16328:	add	r0, r6, #5
   1632c:	cmp	r4, r0
   16330:	bne	16384 <dcngettext@plt+0x4ed8>
   16334:	ldrb	r0, [r6, #4]
   16338:	cmp	r0, #0
   1633c:	beq	16384 <dcngettext@plt+0x4ed8>
   16340:	mov	r0, r4
   16344:	bl	1135c <strlen@plt>
   16348:	add	r4, r0, r4
   1634c:	ldrb	r0, [r4, #1]!
   16350:	cmp	r0, #0
   16354:	bne	16308 <dcngettext@plt+0x4e5c>
   16358:	ldr	r0, [r6]
   1635c:	cmp	r0, #0
   16360:	addne	r4, r0, #5
   16364:	movne	r6, r0
   16368:	b	16308 <dcngettext@plt+0x4e5c>
   1636c:	movw	r4, #30944	; 0x78e0
   16370:	movt	r4, #1
   16374:	str	r4, [r5, #40]	; 0x28
   16378:	mov	r0, r8
   1637c:	sub	sp, fp, #28
   16380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16384:	sub	r0, r6, r4
   16388:	add	sl, r0, #64	; 0x40
   1638c:	mov	r0, r7
   16390:	bl	1135c <strlen@plt>
   16394:	add	r9, r0, #1
   16398:	cmp	r9, sl
   1639c:	bge	163c8 <dcngettext@plt+0x4f1c>
   163a0:	mov	r0, r4
   163a4:	mov	r1, r7
   163a8:	mov	r2, r9
   163ac:	bl	111f4 <memcpy@plt>
   163b0:	mov	r0, #0
   163b4:	strb	r0, [r4, r9]
   163b8:	str	r4, [r5, #40]	; 0x28
   163bc:	mov	r0, r8
   163c0:	sub	sp, fp, #28
   163c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163c8:	add	r0, r0, #10
   163cc:	cmp	r9, #59	; 0x3b
   163d0:	bic	r0, r0, #3
   163d4:	movwcc	r0, #64	; 0x40
   163d8:	bl	173b4 <dcngettext@plt+0x5f08>
   163dc:	cmp	r0, #0
   163e0:	beq	1642c <dcngettext@plt+0x4f80>
   163e4:	mov	sl, r0
   163e8:	mov	r0, #1
   163ec:	mov	r1, r7
   163f0:	mov	r2, r9
   163f4:	strh	r0, [sl, #4]
   163f8:	mov	r0, #0
   163fc:	add	r4, sl, #5
   16400:	str	r0, [sl]
   16404:	mov	r0, r4
   16408:	bl	111f4 <memcpy@plt>
   1640c:	mov	r0, #0
   16410:	strb	r0, [r4, r9]
   16414:	str	sl, [r6]
   16418:	strb	r0, [sl, #4]
   1641c:	str	r4, [r5, #40]	; 0x28
   16420:	mov	r0, r8
   16424:	sub	sp, fp, #28
   16428:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1642c:	mov	r8, #0
   16430:	str	r8, [r6]
   16434:	mov	r0, r8
   16438:	sub	sp, fp, #28
   1643c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16444:	add	fp, sp, #28
   16448:	sub	sp, sp, #52	; 0x34
   1644c:	mov	r9, r1
   16450:	cmp	r0, #0
   16454:	beq	164d0 <dcngettext@plt+0x5024>
   16458:	mov	r7, r0
   1645c:	movw	r0, #32120	; 0x7d78
   16460:	movt	r0, #1
   16464:	bl	112b4 <getenv@plt>
   16468:	mov	r5, r0
   1646c:	ldrb	r0, [r7, #4]
   16470:	cmp	r5, #0
   16474:	beq	164e0 <dcngettext@plt+0x5034>
   16478:	cmp	r0, #0
   1647c:	beq	16494 <dcngettext@plt+0x4fe8>
   16480:	add	r0, r7, #5
   16484:	mov	r1, r5
   16488:	bl	111ac <strcmp@plt>
   1648c:	cmp	r0, #0
   16490:	beq	165a4 <dcngettext@plt+0x50f8>
   16494:	mov	r0, r5
   16498:	bl	1135c <strlen@plt>
   1649c:	add	sl, r0, #1
   164a0:	mov	r8, #1
   164a4:	cmp	sl, #58	; 0x3a
   164a8:	bls	164f0 <dcngettext@plt+0x5044>
   164ac:	add	r0, r0, #10
   164b0:	bic	r0, r0, #3
   164b4:	bl	173b4 <dcngettext@plt+0x5f08>
   164b8:	mvn	r6, #0
   164bc:	cmp	r0, #0
   164c0:	bne	16504 <dcngettext@plt+0x5058>
   164c4:	mov	r0, r6
   164c8:	sub	sp, fp, #28
   164cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164d0:	mov	r0, r9
   164d4:	sub	sp, fp, #28
   164d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164dc:	b	1144c <timegm@plt>
   164e0:	mov	r8, #0
   164e4:	cmp	r0, #0
   164e8:	mov	sl, #0
   164ec:	beq	165a4 <dcngettext@plt+0x50f8>
   164f0:	mov	r0, #64	; 0x40
   164f4:	bl	173b4 <dcngettext@plt+0x5f08>
   164f8:	mvn	r6, #0
   164fc:	cmp	r0, #0
   16500:	beq	164c4 <dcngettext@plt+0x5018>
   16504:	mov	r4, r0
   16508:	strb	r8, [r0, #4]
   1650c:	mov	r0, #0
   16510:	cmp	r8, #0
   16514:	mov	r6, r4
   16518:	str	r0, [r4]
   1651c:	strb	r0, [r6, #5]!
   16520:	beq	1653c <dcngettext@plt+0x5090>
   16524:	mov	r0, r6
   16528:	mov	r1, r5
   1652c:	mov	r2, sl
   16530:	mov	r8, #0
   16534:	bl	111f4 <memcpy@plt>
   16538:	strb	r8, [r6, sl]
   1653c:	ldrb	r0, [r7, #4]
   16540:	cmp	r0, #0
   16544:	beq	165ac <dcngettext@plt+0x5100>
   16548:	movw	r0, #32120	; 0x7d78
   1654c:	add	r1, r7, #5
   16550:	mov	r2, #1
   16554:	movt	r0, #1
   16558:	bl	11368 <setenv@plt>
   1655c:	cmp	r0, #0
   16560:	beq	165c0 <dcngettext@plt+0x5114>
   16564:	bl	11374 <__errno_location@plt>
   16568:	ldr	r5, [r0]
   1656c:	mov	r6, r0
   16570:	cmp	r4, #2
   16574:	bcc	16590 <dcngettext@plt+0x50e4>
   16578:	ldr	r7, [r4]
   1657c:	mov	r0, r4
   16580:	bl	174bc <dcngettext@plt+0x6010>
   16584:	cmp	r7, #0
   16588:	mov	r4, r7
   1658c:	bne	16578 <dcngettext@plt+0x50cc>
   16590:	str	r5, [r6]
   16594:	mvn	r6, #0
   16598:	mov	r0, r6
   1659c:	sub	sp, fp, #28
   165a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165a4:	mov	r4, #1
   165a8:	b	165c4 <dcngettext@plt+0x5118>
   165ac:	movw	r0, #32120	; 0x7d78
   165b0:	movt	r0, #1
   165b4:	bl	1147c <unsetenv@plt>
   165b8:	cmp	r0, #0
   165bc:	bne	16564 <dcngettext@plt+0x50b8>
   165c0:	bl	11260 <tzset@plt>
   165c4:	mov	r0, #32
   165c8:	mov	r1, r9
   165cc:	add	r5, sp, #8
   165d0:	vld1.32	{d16-d17}, [r1], r0
   165d4:	mov	r2, r5
   165d8:	vst1.32	{d16-d17}, [r2], r0
   165dc:	ldr	r0, [r9, #16]
   165e0:	ldr	r3, [r9, #20]
   165e4:	str	r0, [sp, #24]
   165e8:	mvn	r0, #0
   165ec:	str	r0, [sp, #36]	; 0x24
   165f0:	str	r3, [sp, #28]
   165f4:	ldr	r0, [r1]
   165f8:	str	r0, [r2]
   165fc:	mov	r0, r5
   16600:	bl	111b8 <mktime@plt>
   16604:	mov	r6, r0
   16608:	ldr	r0, [sp, #36]	; 0x24
   1660c:	mov	sl, #1
   16610:	mov	r8, #1
   16614:	cmp	r0, #0
   16618:	bmi	1662c <dcngettext@plt+0x5180>
   1661c:	add	r1, sp, #8
   16620:	mov	r0, r7
   16624:	bl	162c0 <dcngettext@plt+0x4e14>
   16628:	eor	r8, r0, #1
   1662c:	cmp	r4, #1
   16630:	beq	166a4 <dcngettext@plt+0x51f8>
   16634:	bl	11374 <__errno_location@plt>
   16638:	mov	r7, r0
   1663c:	ldr	sl, [r0]
   16640:	ldrb	r0, [r4, #4]
   16644:	cmp	r0, #0
   16648:	beq	166f0 <dcngettext@plt+0x5244>
   1664c:	movw	r0, #32120	; 0x7d78
   16650:	add	r1, r4, #5
   16654:	mov	r2, #1
   16658:	movt	r0, #1
   1665c:	bl	11368 <setenv@plt>
   16660:	cmp	r0, #0
   16664:	str	r6, [sp, #4]
   16668:	beq	16708 <dcngettext@plt+0x525c>
   1666c:	ldr	r0, [r7]
   16670:	mov	sl, #0
   16674:	str	r0, [sp]
   16678:	cmp	r4, #2
   1667c:	bcc	16698 <dcngettext@plt+0x51ec>
   16680:	ldr	r6, [r4]
   16684:	mov	r0, r4
   16688:	bl	174bc <dcngettext@plt+0x6010>
   1668c:	cmp	r6, #0
   16690:	mov	r4, r6
   16694:	bne	16680 <dcngettext@plt+0x51d4>
   16698:	ldr	r0, [sp]
   1669c:	ldr	r6, [sp, #4]
   166a0:	str	r0, [r7]
   166a4:	eor	r0, sl, #1
   166a8:	orrs	r0, r8, r0
   166ac:	beq	166c0 <dcngettext@plt+0x5214>
   166b0:	mvn	r6, #0
   166b4:	mov	r0, r6
   166b8:	sub	sp, fp, #28
   166bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166c0:	mov	r0, #28
   166c4:	add	r1, r5, #16
   166c8:	vld1.32	{d16-d17}, [r5], r0
   166cc:	vld1.64	{d18-d19}, [r1]
   166d0:	add	r1, r9, #16
   166d4:	vld1.32	{d20-d21}, [r5]
   166d8:	vst1.32	{d16-d17}, [r9], r0
   166dc:	vst1.32	{d18-d19}, [r1]
   166e0:	vst1.32	{d20-d21}, [r9]
   166e4:	mov	r0, r6
   166e8:	sub	sp, fp, #28
   166ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f0:	movw	r0, #32120	; 0x7d78
   166f4:	movt	r0, #1
   166f8:	bl	1147c <unsetenv@plt>
   166fc:	cmp	r0, #0
   16700:	str	r6, [sp, #4]
   16704:	bne	1666c <dcngettext@plt+0x51c0>
   16708:	str	sl, [sp]
   1670c:	bl	11260 <tzset@plt>
   16710:	mov	sl, #1
   16714:	cmp	r4, #2
   16718:	bcs	16680 <dcngettext@plt+0x51d4>
   1671c:	b	16698 <dcngettext@plt+0x51ec>
   16720:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16724:	add	fp, sp, #24
   16728:	sub	sp, sp, #32
   1672c:	ldr	r6, [fp, #12]
   16730:	ldr	r7, [fp, #8]
   16734:	mov	r4, r2
   16738:	mov	r8, r0
   1673c:	cmp	r1, #0
   16740:	beq	16768 <dcngettext@plt+0x52bc>
   16744:	movw	r2, #32123	; 0x7d7b
   16748:	mov	r5, r1
   1674c:	str	r3, [sp, #4]
   16750:	str	r4, [sp]
   16754:	mov	r0, r8
   16758:	mov	r1, #1
   1675c:	movt	r2, #1
   16760:	mov	r3, r5
   16764:	b	16780 <dcngettext@plt+0x52d4>
   16768:	movw	r2, #32135	; 0x7d87
   1676c:	str	r3, [sp]
   16770:	mov	r0, r8
   16774:	mov	r1, #1
   16778:	mov	r3, r4
   1677c:	movt	r2, #1
   16780:	bl	113bc <__fprintf_chk@plt>
   16784:	movw	r1, #32142	; 0x7d8e
   16788:	mov	r0, #0
   1678c:	mov	r2, #5
   16790:	movt	r1, #1
   16794:	bl	11218 <dcgettext@plt>
   16798:	movw	r2, #32860	; 0x805c
   1679c:	mov	r3, r0
   167a0:	movw	r0, #2022	; 0x7e6
   167a4:	mov	r1, #1
   167a8:	movt	r2, #1
   167ac:	str	r0, [sp]
   167b0:	mov	r0, r8
   167b4:	bl	113bc <__fprintf_chk@plt>
   167b8:	movw	r4, #30943	; 0x78df
   167bc:	mov	r1, r8
   167c0:	movt	r4, #1
   167c4:	mov	r0, r4
   167c8:	bl	11194 <fputs_unlocked@plt>
   167cc:	movw	r1, #32146	; 0x7d92
   167d0:	mov	r0, #0
   167d4:	mov	r2, #5
   167d8:	movt	r1, #1
   167dc:	bl	11218 <dcgettext@plt>
   167e0:	movw	r3, #32317	; 0x7e3d
   167e4:	mov	r2, r0
   167e8:	mov	r0, r8
   167ec:	mov	r1, #1
   167f0:	movt	r3, #1
   167f4:	bl	113bc <__fprintf_chk@plt>
   167f8:	mov	r0, r4
   167fc:	mov	r1, r8
   16800:	bl	11194 <fputs_unlocked@plt>
   16804:	cmp	r6, #9
   16808:	bhi	16844 <dcngettext@plt+0x5398>
   1680c:	add	r0, pc, #0
   16810:	ldr	pc, [r0, r6, lsl #2]
   16814:	andeq	r6, r1, ip, lsr r8
   16818:	andeq	r6, r1, r0, asr r8
   1681c:	andeq	r6, r1, r0, lsl #17
   16820:	andeq	r6, r1, r8, lsr #17
   16824:	ldrdeq	r6, [r1], -r0
   16828:	strdeq	r6, [r1], -r8
   1682c:	andeq	r6, r1, r0, lsr #18
   16830:	andeq	r6, r1, r8, asr r9
   16834:	andeq	r6, r1, r0, lsl #20
   16838:	andeq	r6, r1, r8, lsr #19
   1683c:	sub	sp, fp, #24
   16840:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16844:	movw	r1, #32670	; 0x7f9e
   16848:	movt	r1, #1
   1684c:	b	169b0 <dcngettext@plt+0x5504>
   16850:	movw	r1, #32351	; 0x7e5f
   16854:	mov	r0, #0
   16858:	mov	r2, #5
   1685c:	movt	r1, #1
   16860:	bl	11218 <dcgettext@plt>
   16864:	ldr	r3, [r7]
   16868:	mov	r2, r0
   1686c:	mov	r0, r8
   16870:	mov	r1, #1
   16874:	sub	sp, fp, #24
   16878:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1687c:	b	113bc <__fprintf_chk@plt>
   16880:	movw	r1, #32367	; 0x7e6f
   16884:	mov	r0, #0
   16888:	mov	r2, #5
   1688c:	movt	r1, #1
   16890:	bl	11218 <dcgettext@plt>
   16894:	mov	r2, r0
   16898:	ldr	r3, [r7]
   1689c:	ldr	r0, [r7, #4]
   168a0:	str	r0, [sp]
   168a4:	b	16994 <dcngettext@plt+0x54e8>
   168a8:	movw	r1, #32390	; 0x7e86
   168ac:	mov	r0, #0
   168b0:	mov	r2, #5
   168b4:	movt	r1, #1
   168b8:	bl	11218 <dcgettext@plt>
   168bc:	mov	r2, r0
   168c0:	ldr	r3, [r7]
   168c4:	ldmib	r7, {r0, r1}
   168c8:	stm	sp, {r0, r1}
   168cc:	b	16994 <dcngettext@plt+0x54e8>
   168d0:	movw	r1, #32418	; 0x7ea2
   168d4:	mov	r0, #0
   168d8:	mov	r2, #5
   168dc:	movt	r1, #1
   168e0:	bl	11218 <dcgettext@plt>
   168e4:	ldr	r3, [r7]
   168e8:	mov	r2, r0
   168ec:	ldmib	r7, {r0, r1, r7}
   168f0:	stm	sp, {r0, r1, r7}
   168f4:	b	16994 <dcngettext@plt+0x54e8>
   168f8:	movw	r1, #32450	; 0x7ec2
   168fc:	mov	r0, #0
   16900:	mov	r2, #5
   16904:	movt	r1, #1
   16908:	bl	11218 <dcgettext@plt>
   1690c:	ldr	r3, [r7]
   16910:	mov	r2, r0
   16914:	ldmib	r7, {r0, r1, r6, r7}
   16918:	stm	sp, {r0, r1, r6, r7}
   1691c:	b	16994 <dcngettext@plt+0x54e8>
   16920:	movw	r1, #32486	; 0x7ee6
   16924:	mov	r0, #0
   16928:	mov	r2, #5
   1692c:	movt	r1, #1
   16930:	bl	11218 <dcgettext@plt>
   16934:	mov	r2, r0
   16938:	ldr	r3, [r7]
   1693c:	ldmib	r7, {r0, r1, r6}
   16940:	ldr	r5, [r7, #16]
   16944:	ldr	r7, [r7, #20]
   16948:	stm	sp, {r0, r1, r6}
   1694c:	str	r5, [sp, #12]
   16950:	str	r7, [sp, #16]
   16954:	b	16994 <dcngettext@plt+0x54e8>
   16958:	movw	r1, #32526	; 0x7f0e
   1695c:	mov	r0, #0
   16960:	mov	r2, #5
   16964:	movt	r1, #1
   16968:	bl	11218 <dcgettext@plt>
   1696c:	mov	r2, r0
   16970:	ldr	r3, [r7]
   16974:	ldmib	r7, {r0, r1, r6}
   16978:	ldr	r5, [r7, #16]
   1697c:	ldr	r4, [r7, #20]
   16980:	ldr	r7, [r7, #24]
   16984:	stm	sp, {r0, r1, r6}
   16988:	str	r5, [sp, #12]
   1698c:	str	r4, [sp, #16]
   16990:	str	r7, [sp, #20]
   16994:	mov	r0, r8
   16998:	mov	r1, #1
   1699c:	bl	113bc <__fprintf_chk@plt>
   169a0:	sub	sp, fp, #24
   169a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   169a8:	movw	r1, #32618	; 0x7f6a
   169ac:	movt	r1, #1
   169b0:	mov	r0, #0
   169b4:	mov	r2, #5
   169b8:	bl	11218 <dcgettext@plt>
   169bc:	mov	ip, r0
   169c0:	ldr	r3, [r7]
   169c4:	ldr	r0, [r7, #4]
   169c8:	ldr	r1, [r7, #8]
   169cc:	ldr	r6, [r7, #12]
   169d0:	ldr	r5, [r7, #16]
   169d4:	ldr	r4, [r7, #20]
   169d8:	ldr	r2, [r7, #24]
   169dc:	ldr	lr, [r7, #28]
   169e0:	ldr	r7, [r7, #32]
   169e4:	stm	sp, {r0, r1, r6}
   169e8:	str	r5, [sp, #12]
   169ec:	str	r4, [sp, #16]
   169f0:	str	r2, [sp, #20]
   169f4:	str	lr, [sp, #24]
   169f8:	str	r7, [sp, #28]
   169fc:	b	16a44 <dcngettext@plt+0x5598>
   16a00:	movw	r1, #32570	; 0x7f3a
   16a04:	mov	r0, #0
   16a08:	mov	r2, #5
   16a0c:	movt	r1, #1
   16a10:	bl	11218 <dcgettext@plt>
   16a14:	mov	ip, r0
   16a18:	ldr	r3, [r7]
   16a1c:	ldmib	r7, {r0, r1, r6}
   16a20:	ldr	r5, [r7, #16]
   16a24:	ldr	r4, [r7, #20]
   16a28:	ldr	r2, [r7, #24]
   16a2c:	ldr	r7, [r7, #28]
   16a30:	stm	sp, {r0, r1, r6}
   16a34:	str	r5, [sp, #12]
   16a38:	str	r4, [sp, #16]
   16a3c:	str	r2, [sp, #20]
   16a40:	str	r7, [sp, #24]
   16a44:	mov	r0, r8
   16a48:	mov	r1, #1
   16a4c:	mov	r2, ip
   16a50:	bl	113bc <__fprintf_chk@plt>
   16a54:	sub	sp, fp, #24
   16a58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16a5c:	push	{r4, sl, fp, lr}
   16a60:	add	fp, sp, #8
   16a64:	sub	sp, sp, #8
   16a68:	ldr	ip, [fp, #8]
   16a6c:	mov	lr, #0
   16a70:	ldr	r4, [ip, lr, lsl #2]
   16a74:	add	lr, lr, #1
   16a78:	cmp	r4, #0
   16a7c:	bne	16a70 <dcngettext@plt+0x55c4>
   16a80:	sub	r4, lr, #1
   16a84:	str	ip, [sp]
   16a88:	str	r4, [sp, #4]
   16a8c:	bl	16720 <dcngettext@plt+0x5274>
   16a90:	sub	sp, fp, #8
   16a94:	pop	{r4, sl, fp, pc}
   16a98:	push	{fp, lr}
   16a9c:	mov	fp, sp
   16aa0:	sub	sp, sp, #48	; 0x30
   16aa4:	ldr	ip, [fp, #8]
   16aa8:	ldr	lr, [ip]
   16aac:	cmp	lr, #0
   16ab0:	str	lr, [sp, #8]
   16ab4:	beq	16b50 <dcngettext@plt+0x56a4>
   16ab8:	ldr	lr, [ip, #4]
   16abc:	cmp	lr, #0
   16ac0:	str	lr, [sp, #12]
   16ac4:	beq	16b58 <dcngettext@plt+0x56ac>
   16ac8:	ldr	lr, [ip, #8]
   16acc:	cmp	lr, #0
   16ad0:	str	lr, [sp, #16]
   16ad4:	beq	16b60 <dcngettext@plt+0x56b4>
   16ad8:	ldr	lr, [ip, #12]
   16adc:	cmp	lr, #0
   16ae0:	str	lr, [sp, #20]
   16ae4:	beq	16b68 <dcngettext@plt+0x56bc>
   16ae8:	ldr	lr, [ip, #16]
   16aec:	cmp	lr, #0
   16af0:	str	lr, [sp, #24]
   16af4:	beq	16b70 <dcngettext@plt+0x56c4>
   16af8:	ldr	lr, [ip, #20]
   16afc:	cmp	lr, #0
   16b00:	str	lr, [sp, #28]
   16b04:	beq	16b78 <dcngettext@plt+0x56cc>
   16b08:	ldr	lr, [ip, #24]
   16b0c:	cmp	lr, #0
   16b10:	str	lr, [sp, #32]
   16b14:	beq	16b80 <dcngettext@plt+0x56d4>
   16b18:	ldr	lr, [ip, #28]
   16b1c:	cmp	lr, #0
   16b20:	str	lr, [sp, #36]	; 0x24
   16b24:	beq	16b88 <dcngettext@plt+0x56dc>
   16b28:	ldr	lr, [ip, #32]
   16b2c:	cmp	lr, #0
   16b30:	str	lr, [sp, #40]	; 0x28
   16b34:	beq	16b90 <dcngettext@plt+0x56e4>
   16b38:	ldr	lr, [ip, #36]	; 0x24
   16b3c:	mov	ip, #10
   16b40:	cmp	lr, #0
   16b44:	str	lr, [sp, #44]	; 0x2c
   16b48:	movweq	ip, #9
   16b4c:	b	16b94 <dcngettext@plt+0x56e8>
   16b50:	mov	ip, #0
   16b54:	b	16b94 <dcngettext@plt+0x56e8>
   16b58:	mov	ip, #1
   16b5c:	b	16b94 <dcngettext@plt+0x56e8>
   16b60:	mov	ip, #2
   16b64:	b	16b94 <dcngettext@plt+0x56e8>
   16b68:	mov	ip, #3
   16b6c:	b	16b94 <dcngettext@plt+0x56e8>
   16b70:	mov	ip, #4
   16b74:	b	16b94 <dcngettext@plt+0x56e8>
   16b78:	mov	ip, #5
   16b7c:	b	16b94 <dcngettext@plt+0x56e8>
   16b80:	mov	ip, #6
   16b84:	b	16b94 <dcngettext@plt+0x56e8>
   16b88:	mov	ip, #7
   16b8c:	b	16b94 <dcngettext@plt+0x56e8>
   16b90:	mov	ip, #8
   16b94:	add	lr, sp, #8
   16b98:	str	ip, [sp, #4]
   16b9c:	str	lr, [sp]
   16ba0:	bl	16720 <dcngettext@plt+0x5274>
   16ba4:	mov	sp, fp
   16ba8:	pop	{fp, pc}
   16bac:	push	{fp, lr}
   16bb0:	mov	fp, sp
   16bb4:	sub	sp, sp, #56	; 0x38
   16bb8:	add	ip, fp, #8
   16bbc:	str	ip, [sp, #12]
   16bc0:	ldr	lr, [fp, #8]
   16bc4:	cmp	lr, #0
   16bc8:	str	lr, [sp, #16]
   16bcc:	beq	16c68 <dcngettext@plt+0x57bc>
   16bd0:	ldr	lr, [ip, #4]
   16bd4:	cmp	lr, #0
   16bd8:	str	lr, [sp, #20]
   16bdc:	beq	16c70 <dcngettext@plt+0x57c4>
   16be0:	ldr	lr, [ip, #8]
   16be4:	cmp	lr, #0
   16be8:	str	lr, [sp, #24]
   16bec:	beq	16c78 <dcngettext@plt+0x57cc>
   16bf0:	ldr	lr, [ip, #12]
   16bf4:	cmp	lr, #0
   16bf8:	str	lr, [sp, #28]
   16bfc:	beq	16c80 <dcngettext@plt+0x57d4>
   16c00:	ldr	lr, [ip, #16]
   16c04:	cmp	lr, #0
   16c08:	str	lr, [sp, #32]
   16c0c:	beq	16c88 <dcngettext@plt+0x57dc>
   16c10:	ldr	lr, [ip, #20]
   16c14:	cmp	lr, #0
   16c18:	str	lr, [sp, #36]	; 0x24
   16c1c:	beq	16c90 <dcngettext@plt+0x57e4>
   16c20:	ldr	lr, [ip, #24]
   16c24:	cmp	lr, #0
   16c28:	str	lr, [sp, #40]	; 0x28
   16c2c:	beq	16c98 <dcngettext@plt+0x57ec>
   16c30:	ldr	lr, [ip, #28]
   16c34:	cmp	lr, #0
   16c38:	str	lr, [sp, #44]	; 0x2c
   16c3c:	beq	16ca0 <dcngettext@plt+0x57f4>
   16c40:	ldr	lr, [ip, #32]
   16c44:	cmp	lr, #0
   16c48:	str	lr, [sp, #48]	; 0x30
   16c4c:	beq	16ca8 <dcngettext@plt+0x57fc>
   16c50:	ldr	lr, [ip, #36]	; 0x24
   16c54:	mov	ip, #10
   16c58:	cmp	lr, #0
   16c5c:	str	lr, [sp, #52]	; 0x34
   16c60:	movweq	ip, #9
   16c64:	b	16cac <dcngettext@plt+0x5800>
   16c68:	mov	ip, #0
   16c6c:	b	16cac <dcngettext@plt+0x5800>
   16c70:	mov	ip, #1
   16c74:	b	16cac <dcngettext@plt+0x5800>
   16c78:	mov	ip, #2
   16c7c:	b	16cac <dcngettext@plt+0x5800>
   16c80:	mov	ip, #3
   16c84:	b	16cac <dcngettext@plt+0x5800>
   16c88:	mov	ip, #4
   16c8c:	b	16cac <dcngettext@plt+0x5800>
   16c90:	mov	ip, #5
   16c94:	b	16cac <dcngettext@plt+0x5800>
   16c98:	mov	ip, #6
   16c9c:	b	16cac <dcngettext@plt+0x5800>
   16ca0:	mov	ip, #7
   16ca4:	b	16cac <dcngettext@plt+0x5800>
   16ca8:	mov	ip, #8
   16cac:	add	lr, sp, #16
   16cb0:	str	ip, [sp, #4]
   16cb4:	str	lr, [sp]
   16cb8:	bl	16720 <dcngettext@plt+0x5274>
   16cbc:	mov	sp, fp
   16cc0:	pop	{fp, pc}
   16cc4:	push	{fp, lr}
   16cc8:	mov	fp, sp
   16ccc:	movw	r0, #37252	; 0x9184
   16cd0:	movt	r0, #2
   16cd4:	ldr	r1, [r0]
   16cd8:	movw	r0, #30943	; 0x78df
   16cdc:	movt	r0, #1
   16ce0:	bl	11194 <fputs_unlocked@plt>
   16ce4:	movw	r1, #32730	; 0x7fda
   16ce8:	mov	r0, #0
   16cec:	mov	r2, #5
   16cf0:	movt	r1, #1
   16cf4:	bl	11218 <dcgettext@plt>
   16cf8:	movw	r2, #32750	; 0x7fee
   16cfc:	mov	r1, r0
   16d00:	mov	r0, #1
   16d04:	movt	r2, #1
   16d08:	bl	113a4 <__printf_chk@plt>
   16d0c:	movw	r1, #32772	; 0x8004
   16d10:	mov	r0, #0
   16d14:	mov	r2, #5
   16d18:	movt	r1, #1
   16d1c:	bl	11218 <dcgettext@plt>
   16d20:	movw	r2, #31096	; 0x7978
   16d24:	movw	r3, #31290	; 0x7a3a
   16d28:	mov	r1, r0
   16d2c:	mov	r0, #1
   16d30:	movt	r2, #1
   16d34:	movt	r3, #1
   16d38:	bl	113a4 <__printf_chk@plt>
   16d3c:	movw	r1, #32792	; 0x8018
   16d40:	mov	r0, #0
   16d44:	mov	r2, #5
   16d48:	movt	r1, #1
   16d4c:	bl	11218 <dcgettext@plt>
   16d50:	movw	r2, #32831	; 0x803f
   16d54:	mov	r1, r0
   16d58:	mov	r0, #1
   16d5c:	movt	r2, #1
   16d60:	pop	{fp, lr}
   16d64:	b	113a4 <__printf_chk@plt>
   16d68:	push	{r4, r5, r6, sl, fp, lr}
   16d6c:	add	fp, sp, #16
   16d70:	mov	r4, r2
   16d74:	mov	r5, r1
   16d78:	mov	r6, r0
   16d7c:	bl	17580 <dcngettext@plt+0x60d4>
   16d80:	cmp	r0, #0
   16d84:	popne	{r4, r5, r6, sl, fp, pc}
   16d88:	cmp	r6, #0
   16d8c:	beq	16da0 <dcngettext@plt+0x58f4>
   16d90:	cmp	r5, #0
   16d94:	cmpne	r4, #0
   16d98:	bne	16da0 <dcngettext@plt+0x58f4>
   16d9c:	pop	{r4, r5, r6, sl, fp, pc}
   16da0:	bl	1731c <dcngettext@plt+0x5e70>
   16da4:	push	{r4, r5, r6, sl, fp, lr}
   16da8:	add	fp, sp, #16
   16dac:	mov	r4, r2
   16db0:	mov	r5, r1
   16db4:	mov	r6, r0
   16db8:	bl	17580 <dcngettext@plt+0x60d4>
   16dbc:	cmp	r0, #0
   16dc0:	popne	{r4, r5, r6, sl, fp, pc}
   16dc4:	cmp	r6, #0
   16dc8:	beq	16ddc <dcngettext@plt+0x5930>
   16dcc:	cmp	r5, #0
   16dd0:	cmpne	r4, #0
   16dd4:	bne	16ddc <dcngettext@plt+0x5930>
   16dd8:	pop	{r4, r5, r6, sl, fp, pc}
   16ddc:	bl	1731c <dcngettext@plt+0x5e70>
   16de0:	push	{fp, lr}
   16de4:	mov	fp, sp
   16de8:	bl	173b4 <dcngettext@plt+0x5f08>
   16dec:	cmp	r0, #0
   16df0:	popne	{fp, pc}
   16df4:	bl	1731c <dcngettext@plt+0x5e70>
   16df8:	push	{fp, lr}
   16dfc:	mov	fp, sp
   16e00:	bl	173b4 <dcngettext@plt+0x5f08>
   16e04:	cmp	r0, #0
   16e08:	popne	{fp, pc}
   16e0c:	bl	1731c <dcngettext@plt+0x5e70>
   16e10:	push	{fp, lr}
   16e14:	mov	fp, sp
   16e18:	bl	173b4 <dcngettext@plt+0x5f08>
   16e1c:	cmp	r0, #0
   16e20:	popne	{fp, pc}
   16e24:	bl	1731c <dcngettext@plt+0x5e70>
   16e28:	push	{r4, r5, fp, lr}
   16e2c:	add	fp, sp, #8
   16e30:	mov	r4, r1
   16e34:	mov	r5, r0
   16e38:	bl	173e4 <dcngettext@plt+0x5f38>
   16e3c:	cmp	r0, #0
   16e40:	popne	{r4, r5, fp, pc}
   16e44:	cmp	r5, #0
   16e48:	beq	16e58 <dcngettext@plt+0x59ac>
   16e4c:	cmp	r4, #0
   16e50:	bne	16e58 <dcngettext@plt+0x59ac>
   16e54:	pop	{r4, r5, fp, pc}
   16e58:	bl	1731c <dcngettext@plt+0x5e70>
   16e5c:	push	{fp, lr}
   16e60:	mov	fp, sp
   16e64:	cmp	r1, #0
   16e68:	orreq	r1, r1, #1
   16e6c:	bl	173e4 <dcngettext@plt+0x5f38>
   16e70:	cmp	r0, #0
   16e74:	popne	{fp, pc}
   16e78:	bl	1731c <dcngettext@plt+0x5e70>
   16e7c:	push	{fp, lr}
   16e80:	mov	fp, sp
   16e84:	clz	r3, r2
   16e88:	lsr	ip, r3, #5
   16e8c:	clz	r3, r1
   16e90:	lsr	r3, r3, #5
   16e94:	orrs	r3, r3, ip
   16e98:	movwne	r1, #1
   16e9c:	movwne	r2, #1
   16ea0:	bl	17580 <dcngettext@plt+0x60d4>
   16ea4:	cmp	r0, #0
   16ea8:	popne	{fp, pc}
   16eac:	bl	1731c <dcngettext@plt+0x5e70>
   16eb0:	push	{fp, lr}
   16eb4:	mov	fp, sp
   16eb8:	mov	r2, r1
   16ebc:	mov	r1, r0
   16ec0:	mov	r0, #0
   16ec4:	bl	17580 <dcngettext@plt+0x60d4>
   16ec8:	cmp	r0, #0
   16ecc:	popne	{fp, pc}
   16ed0:	bl	1731c <dcngettext@plt+0x5e70>
   16ed4:	push	{fp, lr}
   16ed8:	mov	fp, sp
   16edc:	mov	r2, r1
   16ee0:	mov	r1, r0
   16ee4:	clz	r0, r2
   16ee8:	clz	r3, r1
   16eec:	lsr	r0, r0, #5
   16ef0:	lsr	r3, r3, #5
   16ef4:	orrs	r0, r3, r0
   16ef8:	mov	r0, #0
   16efc:	movwne	r1, #1
   16f00:	movwne	r2, #1
   16f04:	bl	17580 <dcngettext@plt+0x60d4>
   16f08:	cmp	r0, #0
   16f0c:	popne	{fp, pc}
   16f10:	bl	1731c <dcngettext@plt+0x5e70>
   16f14:	push	{r4, r5, r6, sl, fp, lr}
   16f18:	add	fp, sp, #16
   16f1c:	ldr	r5, [r1]
   16f20:	mov	r4, r1
   16f24:	mov	r6, r0
   16f28:	cmp	r0, #0
   16f2c:	beq	16f44 <dcngettext@plt+0x5a98>
   16f30:	mov	r0, #1
   16f34:	add	r0, r0, r5, lsr #1
   16f38:	adds	r5, r5, r0
   16f3c:	bcc	16f4c <dcngettext@plt+0x5aa0>
   16f40:	b	16f88 <dcngettext@plt+0x5adc>
   16f44:	cmp	r5, #0
   16f48:	movweq	r5, #64	; 0x40
   16f4c:	mov	r0, r6
   16f50:	mov	r1, r5
   16f54:	mov	r2, #1
   16f58:	bl	17580 <dcngettext@plt+0x60d4>
   16f5c:	cmp	r5, #0
   16f60:	mov	r1, r5
   16f64:	movwne	r1, #1
   16f68:	cmp	r0, #0
   16f6c:	bne	16f80 <dcngettext@plt+0x5ad4>
   16f70:	clz	r2, r6
   16f74:	lsr	r2, r2, #5
   16f78:	orrs	r1, r2, r1
   16f7c:	bne	16f88 <dcngettext@plt+0x5adc>
   16f80:	str	r5, [r4]
   16f84:	pop	{r4, r5, r6, sl, fp, pc}
   16f88:	bl	1731c <dcngettext@plt+0x5e70>
   16f8c:	push	{r4, r5, r6, r7, fp, lr}
   16f90:	add	fp, sp, #16
   16f94:	ldr	r5, [r1]
   16f98:	mov	r6, r2
   16f9c:	mov	r4, r1
   16fa0:	mov	r7, r0
   16fa4:	cmp	r0, #0
   16fa8:	beq	16fc0 <dcngettext@plt+0x5b14>
   16fac:	mov	r0, #1
   16fb0:	add	r0, r0, r5, lsr #1
   16fb4:	adds	r5, r5, r0
   16fb8:	bcc	16fd8 <dcngettext@plt+0x5b2c>
   16fbc:	b	1700c <dcngettext@plt+0x5b60>
   16fc0:	cmp	r5, #0
   16fc4:	bne	16fd8 <dcngettext@plt+0x5b2c>
   16fc8:	mov	r0, #64	; 0x40
   16fcc:	cmp	r6, #64	; 0x40
   16fd0:	udiv	r5, r0, r6
   16fd4:	addhi	r5, r5, #1
   16fd8:	mov	r0, r7
   16fdc:	mov	r1, r5
   16fe0:	mov	r2, r6
   16fe4:	bl	17580 <dcngettext@plt+0x60d4>
   16fe8:	cmp	r0, #0
   16fec:	bne	17004 <dcngettext@plt+0x5b58>
   16ff0:	cmp	r7, #0
   16ff4:	beq	1700c <dcngettext@plt+0x5b60>
   16ff8:	cmp	r6, #0
   16ffc:	cmpne	r5, #0
   17000:	bne	1700c <dcngettext@plt+0x5b60>
   17004:	str	r5, [r4]
   17008:	pop	{r4, r5, r6, r7, fp, pc}
   1700c:	bl	1731c <dcngettext@plt+0x5e70>
   17010:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17014:	add	fp, sp, #24
   17018:	mov	r8, r1
   1701c:	ldr	r1, [r1]
   17020:	mov	r5, r0
   17024:	add	r0, r1, r1, asr #1
   17028:	cmp	r0, r1
   1702c:	mvnvs	r0, #-2147483648	; 0x80000000
   17030:	cmp	r0, r3
   17034:	mov	r7, r0
   17038:	movgt	r7, r3
   1703c:	cmn	r3, #1
   17040:	movle	r7, r0
   17044:	ldr	r0, [fp, #8]
   17048:	cmn	r0, #1
   1704c:	ble	17074 <dcngettext@plt+0x5bc8>
   17050:	cmp	r0, #0
   17054:	beq	170c8 <dcngettext@plt+0x5c1c>
   17058:	cmn	r7, #1
   1705c:	ble	1709c <dcngettext@plt+0x5bf0>
   17060:	mvn	r4, #-2147483648	; 0x80000000
   17064:	udiv	r6, r4, r0
   17068:	cmp	r6, r7
   1706c:	bge	170c8 <dcngettext@plt+0x5c1c>
   17070:	b	170d8 <dcngettext@plt+0x5c2c>
   17074:	cmn	r7, #1
   17078:	ble	170b8 <dcngettext@plt+0x5c0c>
   1707c:	cmn	r0, #1
   17080:	beq	170c8 <dcngettext@plt+0x5c1c>
   17084:	mov	r6, #-2147483648	; 0x80000000
   17088:	mvn	r4, #-2147483648	; 0x80000000
   1708c:	sdiv	r6, r6, r0
   17090:	cmp	r6, r7
   17094:	bge	170c8 <dcngettext@plt+0x5c1c>
   17098:	b	170d8 <dcngettext@plt+0x5c2c>
   1709c:	beq	170c8 <dcngettext@plt+0x5c1c>
   170a0:	mov	r6, #-2147483648	; 0x80000000
   170a4:	mvn	r4, #-2147483648	; 0x80000000
   170a8:	sdiv	r6, r6, r7
   170ac:	cmp	r6, r0
   170b0:	bge	170c8 <dcngettext@plt+0x5c1c>
   170b4:	b	170d8 <dcngettext@plt+0x5c2c>
   170b8:	mvn	r4, #-2147483648	; 0x80000000
   170bc:	sdiv	r6, r4, r0
   170c0:	cmp	r7, r6
   170c4:	blt	170d8 <dcngettext@plt+0x5c2c>
   170c8:	mul	r6, r7, r0
   170cc:	mov	r4, #64	; 0x40
   170d0:	cmp	r6, #63	; 0x3f
   170d4:	bgt	170e0 <dcngettext@plt+0x5c34>
   170d8:	sdiv	r7, r4, r0
   170dc:	mul	r6, r7, r0
   170e0:	cmp	r5, #0
   170e4:	moveq	r4, #0
   170e8:	streq	r4, [r8]
   170ec:	sub	r4, r7, r1
   170f0:	cmp	r4, r2
   170f4:	bge	171a0 <dcngettext@plt+0x5cf4>
   170f8:	add	r7, r1, r2
   170fc:	mov	r6, #0
   17100:	mov	r2, #0
   17104:	cmp	r7, r3
   17108:	movwgt	r6, #1
   1710c:	cmn	r3, #1
   17110:	movwgt	r2, #1
   17114:	cmp	r7, r1
   17118:	bvs	171d4 <dcngettext@plt+0x5d28>
   1711c:	ands	r1, r2, r6
   17120:	bne	171d4 <dcngettext@plt+0x5d28>
   17124:	cmn	r0, #1
   17128:	ble	17150 <dcngettext@plt+0x5ca4>
   1712c:	cmp	r0, #0
   17130:	beq	1719c <dcngettext@plt+0x5cf0>
   17134:	cmn	r7, #1
   17138:	ble	17174 <dcngettext@plt+0x5cc8>
   1713c:	mvn	r1, #-2147483648	; 0x80000000
   17140:	udiv	r1, r1, r0
   17144:	cmp	r1, r7
   17148:	bge	1719c <dcngettext@plt+0x5cf0>
   1714c:	b	171d4 <dcngettext@plt+0x5d28>
   17150:	cmn	r7, #1
   17154:	ble	1718c <dcngettext@plt+0x5ce0>
   17158:	cmn	r0, #1
   1715c:	beq	1719c <dcngettext@plt+0x5cf0>
   17160:	mov	r1, #-2147483648	; 0x80000000
   17164:	sdiv	r1, r1, r0
   17168:	cmp	r1, r7
   1716c:	bge	1719c <dcngettext@plt+0x5cf0>
   17170:	b	171d4 <dcngettext@plt+0x5d28>
   17174:	beq	1719c <dcngettext@plt+0x5cf0>
   17178:	mov	r1, #-2147483648	; 0x80000000
   1717c:	sdiv	r1, r1, r7
   17180:	cmp	r1, r0
   17184:	bge	1719c <dcngettext@plt+0x5cf0>
   17188:	b	171d4 <dcngettext@plt+0x5d28>
   1718c:	mvn	r1, #-2147483648	; 0x80000000
   17190:	sdiv	r1, r1, r0
   17194:	cmp	r7, r1
   17198:	blt	171d4 <dcngettext@plt+0x5d28>
   1719c:	mul	r6, r7, r0
   171a0:	mov	r0, r5
   171a4:	mov	r1, r6
   171a8:	bl	173e4 <dcngettext@plt+0x5f38>
   171ac:	cmp	r6, #0
   171b0:	movwne	r6, #1
   171b4:	cmp	r0, #0
   171b8:	bne	171cc <dcngettext@plt+0x5d20>
   171bc:	clz	r1, r5
   171c0:	lsr	r1, r1, #5
   171c4:	orrs	r1, r1, r6
   171c8:	bne	171d4 <dcngettext@plt+0x5d28>
   171cc:	str	r7, [r8]
   171d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   171d4:	bl	1731c <dcngettext@plt+0x5e70>
   171d8:	push	{fp, lr}
   171dc:	mov	fp, sp
   171e0:	mov	r1, #1
   171e4:	bl	17360 <dcngettext@plt+0x5eb4>
   171e8:	cmp	r0, #0
   171ec:	popne	{fp, pc}
   171f0:	bl	1731c <dcngettext@plt+0x5e70>
   171f4:	push	{fp, lr}
   171f8:	mov	fp, sp
   171fc:	bl	17360 <dcngettext@plt+0x5eb4>
   17200:	cmp	r0, #0
   17204:	popne	{fp, pc}
   17208:	bl	1731c <dcngettext@plt+0x5e70>
   1720c:	push	{fp, lr}
   17210:	mov	fp, sp
   17214:	mov	r1, #1
   17218:	bl	17360 <dcngettext@plt+0x5eb4>
   1721c:	cmp	r0, #0
   17220:	popne	{fp, pc}
   17224:	bl	1731c <dcngettext@plt+0x5e70>
   17228:	push	{fp, lr}
   1722c:	mov	fp, sp
   17230:	bl	17360 <dcngettext@plt+0x5eb4>
   17234:	cmp	r0, #0
   17238:	popne	{fp, pc}
   1723c:	bl	1731c <dcngettext@plt+0x5e70>
   17240:	push	{r4, r5, fp, lr}
   17244:	add	fp, sp, #8
   17248:	mov	r5, r0
   1724c:	mov	r0, r1
   17250:	mov	r4, r1
   17254:	bl	173b4 <dcngettext@plt+0x5f08>
   17258:	cmp	r0, #0
   1725c:	beq	17270 <dcngettext@plt+0x5dc4>
   17260:	mov	r1, r5
   17264:	mov	r2, r4
   17268:	pop	{r4, r5, fp, lr}
   1726c:	b	111f4 <memcpy@plt>
   17270:	bl	1731c <dcngettext@plt+0x5e70>
   17274:	push	{r4, r5, fp, lr}
   17278:	add	fp, sp, #8
   1727c:	mov	r5, r0
   17280:	mov	r0, r1
   17284:	mov	r4, r1
   17288:	bl	173b4 <dcngettext@plt+0x5f08>
   1728c:	cmp	r0, #0
   17290:	beq	172a4 <dcngettext@plt+0x5df8>
   17294:	mov	r1, r5
   17298:	mov	r2, r4
   1729c:	pop	{r4, r5, fp, lr}
   172a0:	b	111f4 <memcpy@plt>
   172a4:	bl	1731c <dcngettext@plt+0x5e70>
   172a8:	push	{r4, r5, fp, lr}
   172ac:	add	fp, sp, #8
   172b0:	mov	r5, r0
   172b4:	add	r0, r1, #1
   172b8:	mov	r4, r1
   172bc:	bl	173b4 <dcngettext@plt+0x5f08>
   172c0:	cmp	r0, #0
   172c4:	beq	172e0 <dcngettext@plt+0x5e34>
   172c8:	mov	r1, #0
   172cc:	mov	r2, r4
   172d0:	strb	r1, [r0, r4]
   172d4:	mov	r1, r5
   172d8:	pop	{r4, r5, fp, lr}
   172dc:	b	111f4 <memcpy@plt>
   172e0:	bl	1731c <dcngettext@plt+0x5e70>
   172e4:	push	{r4, r5, fp, lr}
   172e8:	add	fp, sp, #8
   172ec:	mov	r4, r0
   172f0:	bl	1135c <strlen@plt>
   172f4:	add	r5, r0, #1
   172f8:	mov	r0, r5
   172fc:	bl	173b4 <dcngettext@plt+0x5f08>
   17300:	cmp	r0, #0
   17304:	beq	17318 <dcngettext@plt+0x5e6c>
   17308:	mov	r1, r4
   1730c:	mov	r2, r5
   17310:	pop	{r4, r5, fp, lr}
   17314:	b	111f4 <memcpy@plt>
   17318:	bl	1731c <dcngettext@plt+0x5e70>
   1731c:	push	{fp, lr}
   17320:	mov	fp, sp
   17324:	movw	r0, #37164	; 0x912c
   17328:	movw	r1, #32907	; 0x808b
   1732c:	mov	r2, #5
   17330:	movt	r0, #2
   17334:	movt	r1, #1
   17338:	ldr	r4, [r0]
   1733c:	mov	r0, #0
   17340:	bl	11218 <dcgettext@plt>
   17344:	movw	r2, #31769	; 0x7c19
   17348:	mov	r3, r0
   1734c:	mov	r0, r4
   17350:	mov	r1, #0
   17354:	movt	r2, #1
   17358:	bl	112a8 <error@plt>
   1735c:	bl	11494 <abort@plt>
   17360:	clz	r2, r1
   17364:	clz	r3, r0
   17368:	lsr	r2, r2, #5
   1736c:	lsr	r3, r3, #5
   17370:	orrs	r2, r3, r2
   17374:	movwne	r1, #1
   17378:	movwne	r0, #1
   1737c:	cmp	r1, #0
   17380:	beq	173b0 <dcngettext@plt+0x5f04>
   17384:	mvn	r2, #-2147483648	; 0x80000000
   17388:	udiv	r2, r2, r1
   1738c:	cmp	r2, r0
   17390:	bcs	173b0 <dcngettext@plt+0x5f04>
   17394:	push	{fp, lr}
   17398:	mov	fp, sp
   1739c:	bl	11374 <__errno_location@plt>
   173a0:	mov	r1, #12
   173a4:	str	r1, [r0]
   173a8:	mov	r0, #0
   173ac:	pop	{fp, pc}
   173b0:	b	11188 <calloc@plt>
   173b4:	cmp	r0, #0
   173b8:	movweq	r0, #1
   173bc:	cmn	r0, #1
   173c0:	ble	173c8 <dcngettext@plt+0x5f1c>
   173c4:	b	112c0 <malloc@plt>
   173c8:	push	{fp, lr}
   173cc:	mov	fp, sp
   173d0:	bl	11374 <__errno_location@plt>
   173d4:	mov	r1, #12
   173d8:	str	r1, [r0]
   173dc:	mov	r0, #0
   173e0:	pop	{fp, pc}
   173e4:	push	{fp, lr}
   173e8:	mov	fp, sp
   173ec:	cmp	r0, #0
   173f0:	beq	1740c <dcngettext@plt+0x5f60>
   173f4:	cmp	r1, #0
   173f8:	beq	17418 <dcngettext@plt+0x5f6c>
   173fc:	cmn	r1, #1
   17400:	ble	17424 <dcngettext@plt+0x5f78>
   17404:	pop	{fp, lr}
   17408:	b	11230 <realloc@plt>
   1740c:	mov	r0, r1
   17410:	pop	{fp, lr}
   17414:	b	173b4 <dcngettext@plt+0x5f08>
   17418:	bl	174bc <dcngettext@plt+0x6010>
   1741c:	mov	r0, #0
   17420:	pop	{fp, pc}
   17424:	bl	11374 <__errno_location@plt>
   17428:	mov	r1, #12
   1742c:	str	r1, [r0]
   17430:	mov	r0, #0
   17434:	pop	{fp, pc}
   17438:	push	{r4, r5, r6, sl, fp, lr}
   1743c:	add	fp, sp, #16
   17440:	mov	r4, r0
   17444:	bl	11290 <__fpending@plt>
   17448:	ldr	r6, [r4]
   1744c:	mov	r5, r0
   17450:	mov	r0, r4
   17454:	bl	11f30 <dcngettext@plt+0xa84>
   17458:	tst	r6, #32
   1745c:	bne	17494 <dcngettext@plt+0x5fe8>
   17460:	cmp	r0, #0
   17464:	mov	r4, r0
   17468:	mvnne	r4, #0
   1746c:	cmp	r5, #0
   17470:	bne	174a0 <dcngettext@plt+0x5ff4>
   17474:	cmp	r0, #0
   17478:	beq	174a0 <dcngettext@plt+0x5ff4>
   1747c:	bl	11374 <__errno_location@plt>
   17480:	ldr	r0, [r0]
   17484:	subs	r4, r0, #9
   17488:	mvnne	r4, #0
   1748c:	mov	r0, r4
   17490:	pop	{r4, r5, r6, sl, fp, pc}
   17494:	mvn	r4, #0
   17498:	cmp	r0, #0
   1749c:	beq	174a8 <dcngettext@plt+0x5ffc>
   174a0:	mov	r0, r4
   174a4:	pop	{r4, r5, r6, sl, fp, pc}
   174a8:	bl	11374 <__errno_location@plt>
   174ac:	mov	r1, #0
   174b0:	str	r1, [r0]
   174b4:	mov	r0, r4
   174b8:	pop	{r4, r5, r6, sl, fp, pc}
   174bc:	push	{r4, r5, r6, sl, fp, lr}
   174c0:	add	fp, sp, #16
   174c4:	mov	r4, r0
   174c8:	bl	11374 <__errno_location@plt>
   174cc:	ldr	r6, [r0]
   174d0:	mov	r5, r0
   174d4:	mov	r0, r4
   174d8:	bl	111dc <free@plt>
   174dc:	str	r6, [r5]
   174e0:	pop	{r4, r5, r6, sl, fp, pc}
   174e4:	push	{fp, lr}
   174e8:	mov	fp, sp
   174ec:	mov	r0, #14
   174f0:	bl	11428 <nl_langinfo@plt>
   174f4:	movw	r1, #30944	; 0x78e0
   174f8:	cmp	r0, #0
   174fc:	movt	r1, #1
   17500:	movne	r1, r0
   17504:	movw	r0, #32924	; 0x809c
   17508:	ldrb	r2, [r1]
   1750c:	movt	r0, #1
   17510:	cmp	r2, #0
   17514:	movne	r0, r1
   17518:	pop	{fp, pc}
   1751c:	push	{r4, r5, r6, r7, fp, lr}
   17520:	add	fp, sp, #16
   17524:	sub	sp, sp, #8
   17528:	cmp	r0, #0
   1752c:	add	r5, sp, #4
   17530:	mov	r7, r2
   17534:	mov	r4, r1
   17538:	movne	r5, r0
   1753c:	mov	r0, r5
   17540:	bl	1129c <mbrtowc@plt>
   17544:	mov	r6, r0
   17548:	cmp	r7, #0
   1754c:	beq	17574 <dcngettext@plt+0x60c8>
   17550:	cmn	r6, #2
   17554:	bcc	17574 <dcngettext@plt+0x60c8>
   17558:	mov	r0, #0
   1755c:	bl	175bc <dcngettext@plt+0x6110>
   17560:	cmp	r0, #0
   17564:	bne	17574 <dcngettext@plt+0x60c8>
   17568:	ldrb	r0, [r4]
   1756c:	mov	r6, #1
   17570:	str	r0, [r5]
   17574:	mov	r0, r6
   17578:	sub	sp, fp, #16
   1757c:	pop	{r4, r5, r6, r7, fp, pc}
   17580:	cmp	r2, #0
   17584:	beq	175b4 <dcngettext@plt+0x6108>
   17588:	mvn	r3, #0
   1758c:	udiv	r3, r3, r2
   17590:	cmp	r3, r1
   17594:	bcs	175b4 <dcngettext@plt+0x6108>
   17598:	push	{fp, lr}
   1759c:	mov	fp, sp
   175a0:	bl	11374 <__errno_location@plt>
   175a4:	mov	r1, #12
   175a8:	str	r1, [r0]
   175ac:	mov	r0, #0
   175b0:	pop	{fp, pc}
   175b4:	mul	r1, r2, r1
   175b8:	b	173e4 <dcngettext@plt+0x5f38>
   175bc:	push	{r4, sl, fp, lr}
   175c0:	add	fp, sp, #8
   175c4:	sub	sp, sp, #264	; 0x108
   175c8:	add	r1, sp, #7
   175cc:	movw	r2, #257	; 0x101
   175d0:	bl	17628 <dcngettext@plt+0x617c>
   175d4:	mov	r4, #0
   175d8:	cmp	r0, #0
   175dc:	bne	1761c <dcngettext@plt+0x6170>
   175e0:	movw	r1, #31751	; 0x7c07
   175e4:	add	r0, sp, #7
   175e8:	mov	r2, #2
   175ec:	movt	r1, #1
   175f0:	bl	11350 <bcmp@plt>
   175f4:	cmp	r0, #0
   175f8:	beq	1761c <dcngettext@plt+0x6170>
   175fc:	movw	r1, #32930	; 0x80a2
   17600:	add	r0, sp, #7
   17604:	mov	r2, #6
   17608:	movt	r1, #1
   1760c:	bl	11350 <bcmp@plt>
   17610:	cmp	r0, #0
   17614:	mov	r4, r0
   17618:	movwne	r4, #1
   1761c:	mov	r0, r4
   17620:	sub	sp, fp, #8
   17624:	pop	{r4, sl, fp, pc}
   17628:	push	{r4, r5, r6, r7, fp, lr}
   1762c:	add	fp, sp, #16
   17630:	mov	r4, r1
   17634:	mov	r1, #0
   17638:	mov	r6, r2
   1763c:	bl	11410 <setlocale@plt>
   17640:	cmp	r0, #0
   17644:	beq	17674 <dcngettext@plt+0x61c8>
   17648:	mov	r7, r0
   1764c:	bl	1135c <strlen@plt>
   17650:	cmp	r0, r6
   17654:	bcs	17690 <dcngettext@plt+0x61e4>
   17658:	add	r2, r0, #1
   1765c:	mov	r0, r4
   17660:	mov	r1, r7
   17664:	bl	111f4 <memcpy@plt>
   17668:	mov	r5, #0
   1766c:	mov	r0, r5
   17670:	pop	{r4, r5, r6, r7, fp, pc}
   17674:	mov	r5, #22
   17678:	cmp	r6, #0
   1767c:	beq	176b8 <dcngettext@plt+0x620c>
   17680:	mov	r0, #0
   17684:	strb	r0, [r4]
   17688:	mov	r0, r5
   1768c:	pop	{r4, r5, r6, r7, fp, pc}
   17690:	mov	r5, #34	; 0x22
   17694:	cmp	r6, #0
   17698:	beq	176b8 <dcngettext@plt+0x620c>
   1769c:	sub	r6, r6, #1
   176a0:	mov	r0, r4
   176a4:	mov	r1, r7
   176a8:	mov	r2, r6
   176ac:	bl	111f4 <memcpy@plt>
   176b0:	mov	r0, #0
   176b4:	strb	r0, [r4, r6]
   176b8:	mov	r0, r5
   176bc:	pop	{r4, r5, r6, r7, fp, pc}
   176c0:	mov	r1, #0
   176c4:	b	11410 <setlocale@plt>
   176c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   176cc:	mov	r7, r0
   176d0:	ldr	r6, [pc, #72]	; 17720 <dcngettext@plt+0x6274>
   176d4:	ldr	r5, [pc, #72]	; 17724 <dcngettext@plt+0x6278>
   176d8:	add	r6, pc, r6
   176dc:	add	r5, pc, r5
   176e0:	sub	r6, r6, r5
   176e4:	mov	r8, r1
   176e8:	mov	r9, r2
   176ec:	bl	11168 <calloc@plt-0x20>
   176f0:	asrs	r6, r6, #2
   176f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   176f8:	mov	r4, #0
   176fc:	add	r4, r4, #1
   17700:	ldr	r3, [r5], #4
   17704:	mov	r2, r9
   17708:	mov	r1, r8
   1770c:	mov	r0, r7
   17710:	blx	r3
   17714:	cmp	r6, r4
   17718:	bne	176fc <dcngettext@plt+0x6250>
   1771c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17720:	andeq	r1, r1, ip, lsr #16
   17724:	andeq	r1, r1, r4, lsr #16
   17728:	bx	lr
   1772c:	ldr	r3, [pc, #12]	; 17740 <dcngettext@plt+0x6294>
   17730:	mov	r1, #0
   17734:	add	r3, pc, r3
   17738:	ldr	r2, [r3]
   1773c:	b	11380 <__cxa_atexit@plt>
   17740:	andeq	r1, r1, r8, ror #19

Disassembly of section .fini:

00017744 <.fini>:
   17744:	push	{r3, lr}
   17748:	pop	{r3, pc}
