
../repos/charybdis/modules/.libs/sno_routing.so:     file format elf32-littlearm


Disassembly of section .init:

0000036c <_init>:
 36c:	push	{r3, lr}
 370:	bl	3b0 <call_weak_fn>
 374:	pop	{r3, pc}

Disassembly of section .plt:

00000378 <.plt>:
 378:	push	{lr}		; (str lr, [sp, #-4]!)
 37c:	ldr	lr, [pc, #4]	; 388 <.plt+0x10>
 380:	add	lr, pc, lr
 384:	ldr	pc, [lr, #8]!
 388:	.word	0x00010c78

0000038c <__cxa_finalize@plt>:
 38c:	add	ip, pc, #0, 12
 390:	add	ip, ip, #16, 20	; 0x10000
 394:	ldr	pc, [ip, #3192]!	; 0xc78

00000398 <sendto_realops_snomask@plt>:
 398:	add	ip, pc, #0, 12
 39c:	add	ip, ip, #16, 20	; 0x10000
 3a0:	ldr	pc, [ip, #3184]!	; 0xc70

000003a4 <__gmon_start__@plt>:
 3a4:	add	ip, pc, #0, 12
 3a8:	add	ip, ip, #16, 20	; 0x10000
 3ac:	ldr	pc, [ip, #3176]!	; 0xc68

Disassembly of section .text:

000003b0 <call_weak_fn>:
 3b0:	ldr	r3, [pc, #20]	; 3cc <call_weak_fn+0x1c>
 3b4:	ldr	r2, [pc, #20]	; 3d0 <call_weak_fn+0x20>
 3b8:	add	r3, pc, r3
 3bc:	ldr	r2, [r3, r2]
 3c0:	cmp	r2, #0
 3c4:	bxeq	lr
 3c8:	b	3a4 <__gmon_start__@plt>
 3cc:	.word	0x00010c40
 3d0:	.word	0x00000020

000003d4 <deregister_tm_clones>:
 3d4:	ldr	r0, [pc, #44]	; 408 <deregister_tm_clones+0x34>
 3d8:	ldr	r3, [pc, #44]	; 40c <deregister_tm_clones+0x38>
 3dc:	add	r0, pc, r0
 3e0:	add	r3, pc, r3
 3e4:	cmp	r3, r0
 3e8:	ldr	r3, [pc, #32]	; 410 <deregister_tm_clones+0x3c>
 3ec:	add	r3, pc, r3
 3f0:	bxeq	lr
 3f4:	ldr	r2, [pc, #24]	; 414 <deregister_tm_clones+0x40>
 3f8:	ldr	r3, [r3, r2]
 3fc:	cmp	r3, #0
 400:	bxeq	lr
 404:	bx	r3
 408:	.word	0x00010c94
 40c:	.word	0x00010c90
 410:	.word	0x00010c0c
 414:	.word	0x0000001c

00000418 <register_tm_clones>:
 418:	ldr	r0, [pc, #56]	; 458 <register_tm_clones+0x40>
 41c:	ldr	r3, [pc, #56]	; 45c <register_tm_clones+0x44>
 420:	add	r0, pc, r0
 424:	add	r3, pc, r3
 428:	sub	r1, r3, r0
 42c:	ldr	r3, [pc, #44]	; 460 <register_tm_clones+0x48>
 430:	asr	r1, r1, #2
 434:	add	r3, pc, r3
 438:	add	r1, r1, r1, lsr #31
 43c:	asrs	r1, r1, #1
 440:	bxeq	lr
 444:	ldr	r2, [pc, #24]	; 464 <register_tm_clones+0x4c>
 448:	ldr	r3, [r3, r2]
 44c:	cmp	r3, #0
 450:	bxeq	lr
 454:	bx	r3
 458:	.word	0x00010c50
 45c:	.word	0x00010c4c
 460:	.word	0x00010bc4
 464:	.word	0x00000024

00000468 <__do_global_dtors_aux>:
 468:	ldr	r3, [pc, #76]	; 4bc <__do_global_dtors_aux+0x54>
 46c:	ldr	r2, [pc, #76]	; 4c0 <__do_global_dtors_aux+0x58>
 470:	add	r3, pc, r3
 474:	add	r2, pc, r2
 478:	ldrb	r3, [r3]
 47c:	cmp	r3, #0
 480:	bxne	lr
 484:	ldr	r3, [pc, #56]	; 4c4 <__do_global_dtors_aux+0x5c>
 488:	push	{r4, lr}
 48c:	ldr	r3, [r2, r3]
 490:	cmp	r3, #0
 494:	beq	4a4 <__do_global_dtors_aux+0x3c>
 498:	ldr	r3, [pc, #40]	; 4c8 <__do_global_dtors_aux+0x60>
 49c:	ldr	r0, [pc, r3]
 4a0:	bl	38c <__cxa_finalize@plt>
 4a4:	bl	3d4 <deregister_tm_clones>
 4a8:	ldr	r3, [pc, #28]	; 4cc <__do_global_dtors_aux+0x64>
 4ac:	mov	r2, #1
 4b0:	add	r3, pc, r3
 4b4:	strb	r2, [r3]
 4b8:	pop	{r4, pc}
 4bc:	.word	0x00010c00
 4c0:	.word	0x00010b84
 4c4:	.word	0x00000018
 4c8:	.word	0x00010b84
 4cc:	.word	0x00010bc0

000004d0 <frame_dummy>:
 4d0:	b	418 <register_tm_clones>

000004d4 <count_mark_downlinks.isra.0>:
 4d4:	strd	r4, [sp, #-16]!
 4d8:	mov	r5, r3
 4dc:	ldr	ip, [r1]
 4e0:	ldr	r4, [r0, #36]	; 0x24
 4e4:	str	r6, [sp, #8]
 4e8:	mov	r6, r2
 4ec:	ldr	r2, [r2]
 4f0:	orr	ip, ip, #256	; 0x100
 4f4:	str	lr, [sp, #12]
 4f8:	ldr	lr, [r0, #56]	; 0x38
 4fc:	str	ip, [r1]
 500:	cmp	r4, #0
 504:	add	r2, r2, #1
 508:	str	r2, [r6]
 50c:	ldr	r3, [r3]
 510:	add	r3, r3, lr
 514:	str	r3, [r5]
 518:	beq	540 <count_mark_downlinks.isra.0+0x6c>
 51c:	ldr	r0, [r4]
 520:	mov	r3, r5
 524:	mov	r2, r6
 528:	add	r1, r0, #64	; 0x40
 52c:	ldr	r0, [r0, #28]
 530:	bl	4d4 <count_mark_downlinks.isra.0>
 534:	ldr	r4, [r4, #8]
 538:	cmp	r4, #0
 53c:	bne	51c <count_mark_downlinks.isra.0+0x48>
 540:	ldrd	r4, [sp]
 544:	ldr	r6, [sp, #8]
 548:	add	sp, sp, #12
 54c:	pop	{pc}		; (ldr pc, [sp], #4)

00000550 <h_nn_client_exit>:
 550:	strd	r4, [sp, #-24]!	; 0xffffffe8
 554:	mov	r3, #0
 558:	ldr	r5, [r0, #4]
 55c:	ldr	r4, [r0, #8]
 560:	ldrh	r2, [r4, #80]	; 0x50
 564:	strd	r6, [sp, #8]
 568:	str	r8, [sp, #16]
 56c:	str	lr, [sp, #20]
 570:	sub	sp, sp, #40	; 0x28
 574:	cmp	r2, #64	; 0x40
 578:	str	r3, [sp, #32]
 57c:	movne	r4, r3
 580:	str	r3, [sp, #36]	; 0x24
 584:	addeq	r4, r4, #88	; 0x58
 588:	ldrh	r3, [r5, #80]	; 0x50
 58c:	cmp	r3, #32
 590:	bne	604 <h_nn_client_exit+0xb4>
 594:	ldr	r1, [r5, #64]	; 0x40
 598:	mov	r3, #0
 59c:	mov	r6, r0
 5a0:	and	r2, r1, #4096	; 0x1000
 5a4:	orrs	r3, r2, r3
 5a8:	bne	61c <h_nn_client_exit+0xcc>
 5ac:	ldr	r3, [r5, #32]
 5b0:	cmp	r3, #0
 5b4:	addne	r3, r3, #88	; 0x58
 5b8:	beq	6a4 <h_nn_client_exit+0x154>
 5bc:	cmp	r4, #0
 5c0:	add	r2, r5, #88	; 0x58
 5c4:	beq	690 <h_nn_client_exit+0x140>
 5c8:	ldr	r5, [pc, #256]	; 6d0 <h_nn_client_exit+0x180>
 5cc:	ldr	lr, [pc, #256]	; 6d4 <h_nn_client_exit+0x184>
 5d0:	add	r5, pc, r5
 5d4:	add	lr, pc, lr
 5d8:	str	r2, [sp]
 5dc:	mov	r1, #0
 5e0:	mov	r0, #256	; 0x100
 5e4:	ldr	r2, [pc, #236]	; 6d8 <h_nn_client_exit+0x188>
 5e8:	ldr	ip, [r6, #12]
 5ec:	str	r5, [sp, #4]
 5f0:	str	r4, [sp, #8]
 5f4:	add	r2, pc, r2
 5f8:	str	lr, [sp, #12]
 5fc:	str	ip, [sp, #16]
 600:	bl	398 <sendto_realops_snomask@plt>
 604:	add	sp, sp, #40	; 0x28
 608:	ldrd	r4, [sp]
 60c:	ldrd	r6, [sp, #8]
 610:	ldr	r8, [sp, #16]
 614:	add	sp, sp, #20
 618:	pop	{pc}		; (ldr pc, [sp], #4)
 61c:	add	r3, sp, #36	; 0x24
 620:	add	r2, sp, #32
 624:	ldr	r0, [r5, #28]
 628:	add	r1, r5, #64	; 0x40
 62c:	bl	4d4 <count_mark_downlinks.isra.0>
 630:	ldr	r3, [r5, #32]
 634:	cmp	r3, #0
 638:	addne	r3, r3, #88	; 0x58
 63c:	beq	6b0 <h_nn_client_exit+0x160>
 640:	cmp	r4, #0
 644:	add	r2, r5, #88	; 0x58
 648:	ldr	r7, [sp, #32]
 64c:	ldr	lr, [sp, #36]	; 0x24
 650:	beq	6bc <h_nn_client_exit+0x16c>
 654:	ldr	r8, [pc, #128]	; 6dc <h_nn_client_exit+0x18c>
 658:	ldr	r5, [pc, #128]	; 6e0 <h_nn_client_exit+0x190>
 65c:	add	r8, pc, r8
 660:	add	r5, pc, r5
 664:	ldr	ip, [r6, #12]
 668:	mov	r1, #0
 66c:	mov	r0, #256	; 0x100
 670:	stm	sp, {r2, r7, lr}
 674:	ldr	r2, [pc, #104]	; 6e4 <h_nn_client_exit+0x194>
 678:	str	r8, [sp, #12]
 67c:	strd	r4, [sp, #16]
 680:	str	ip, [sp, #24]
 684:	add	r2, pc, r2
 688:	bl	398 <sendto_realops_snomask@plt>
 68c:	b	604 <h_nn_client_exit+0xb4>
 690:	ldr	r4, [pc, #80]	; 6e8 <h_nn_client_exit+0x198>
 694:	add	r4, pc, r4
 698:	mov	r5, r4
 69c:	mov	lr, r4
 6a0:	b	5d8 <h_nn_client_exit+0x88>
 6a4:	ldr	r3, [pc, #64]	; 6ec <h_nn_client_exit+0x19c>
 6a8:	add	r3, pc, r3
 6ac:	b	5bc <h_nn_client_exit+0x6c>
 6b0:	ldr	r3, [pc, #56]	; 6f0 <h_nn_client_exit+0x1a0>
 6b4:	add	r3, pc, r3
 6b8:	b	640 <h_nn_client_exit+0xf0>
 6bc:	ldr	r4, [pc, #48]	; 6f4 <h_nn_client_exit+0x1a4>
 6c0:	add	r4, pc, r4
 6c4:	mov	r8, r4
 6c8:	mov	r5, r4
 6cc:	b	664 <h_nn_client_exit+0x114>
 6d0:	.word	0x00000208
 6d4:	.word	0x00000208
 6d8:	.word	0x00000214
 6dc:	.word	0x0000017c
 6e0:	.word	0x0000017c
 6e4:	.word	0x0000015c
 6e8:	.word	0x000001a0
 6ec:	.word	0x0000012c
 6f0:	.word	0x00000120
 6f4:	.word	0x00000174

000006f8 <h_nn_server_eob>:
 6f8:	ldr	ip, [r0, #64]	; 0x40
 6fc:	mov	r1, #0
 700:	mov	r3, r1
 704:	str	r4, [sp, #-8]!
 708:	str	lr, [sp, #4]
 70c:	sub	sp, sp, #24
 710:	str	r1, [sp, #16]
 714:	and	r2, ip, #256	; 0x100
 718:	str	r1, [sp, #20]
 71c:	orrs	r3, r2, r3
 720:	beq	734 <h_nn_server_eob+0x3c>
 724:	add	sp, sp, #24
 728:	ldr	r4, [sp]
 72c:	add	sp, sp, #4
 730:	pop	{pc}		; (ldr pc, [sp], #4)
 734:	mov	r4, r0
 738:	add	r3, sp, #20
 73c:	add	r1, r0, #64	; 0x40
 740:	add	r2, sp, #16
 744:	ldr	r0, [r0, #28]
 748:	bl	4d4 <count_mark_downlinks.isra.0>
 74c:	ldr	r3, [r4, #32]
 750:	cmp	r3, #0
 754:	addne	r3, r3, #88	; 0x58
 758:	beq	794 <h_nn_server_eob+0x9c>
 75c:	ldr	r2, [pc, #60]	; 7a0 <h_nn_server_eob+0xa8>
 760:	add	r4, r4, #88	; 0x58
 764:	mov	r1, #0
 768:	mov	r0, #256	; 0x100
 76c:	ldr	lr, [sp, #16]
 770:	ldr	ip, [sp, #20]
 774:	add	r2, pc, r2
 778:	stm	sp, {r4, lr}
 77c:	str	ip, [sp, #8]
 780:	bl	398 <sendto_realops_snomask@plt>
 784:	add	sp, sp, #24
 788:	ldr	r4, [sp]
 78c:	add	sp, sp, #4
 790:	pop	{pc}		; (ldr pc, [sp], #4)
 794:	ldr	r3, [pc, #8]	; 7a4 <h_nn_server_eob+0xac>
 798:	add	r3, pc, r3
 79c:	b	75c <h_nn_server_eob+0x64>
 7a0:	.word	0x000000c4
 7a4:	.word	0x0000003c

Disassembly of section .fini:

000007a8 <_fini>:
 7a8:	push	{r3, lr}
 7ac:	pop	{r3, pc}
