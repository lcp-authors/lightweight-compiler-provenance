
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000bb4 <_init>:
 bb4:	push	{r3, lr}
 bb8:	bl	e04 <call_weak_fn>
 bbc:	pop	{r3, pc}

Disassembly of section .plt:

00000bc0 <.plt>:
 bc0:	push	{lr}		; (str lr, [sp, #-4]!)
 bc4:	ldr	lr, [pc, #4]	; bd0 <.plt+0x10>
 bc8:	add	lr, pc, lr
 bcc:	ldr	pc, [lr, #8]!
 bd0:	.word	0x00012430

00000bd4 <propagate_generic@plt>:
 bd4:	add	ip, pc, #0, 12
 bd8:	add	ip, ip, #73728	; 0x12000
 bdc:	ldr	pc, [ip, #1072]!	; 0x430

00000be0 <make_conf@plt>:
 be0:	add	ip, pc, #0, 12
 be4:	add	ip, ip, #73728	; 0x12000
 be8:	ldr	pc, [ip, #1064]!	; 0x428

00000bec <raise@plt>:
 bec:	add	ip, pc, #0, 12
 bf0:	add	ip, ip, #73728	; 0x12000
 bf4:	ldr	pc, [ip, #1056]!	; 0x420

00000bf8 <rb_current_time@plt>:
 bf8:	add	ip, pc, #0, 12
 bfc:	add	ip, ip, #73728	; 0x12000
 c00:	ldr	pc, [ip, #1048]!	; 0x418

00000c04 <add_to_resv_hash@plt>:
 c04:	add	ip, pc, #0, 12
 c08:	add	ip, ip, #73728	; 0x12000
 c0c:	ldr	pc, [ip, #1040]!	; 0x410

00000c10 <sendto_match_servs@plt>:
 c10:	add	ip, pc, #0, 12
 c14:	add	ip, ip, #73728	; 0x12000
 c18:	ldr	pc, [ip, #1032]!	; 0x408

00000c1c <__cxa_finalize@plt>:
 c1c:	add	ip, pc, #0, 12
 c20:	add	ip, ip, #73728	; 0x12000
 c24:	ldr	pc, [ip, #1024]!	; 0x400

00000c28 <sendto_one@plt>:
 c28:	add	ip, pc, #0, 12
 c2c:	add	ip, ip, #73728	; 0x12000
 c30:	ldr	pc, [ip, #1016]!	; 0x3f8

00000c34 <replace_old_ban@plt>:
 c34:	add	ip, pc, #0, 12
 c38:	add	ip, ip, #73728	; 0x12000
 c3c:	ldr	pc, [ip, #1008]!	; 0x3f0

00000c40 <rb_outofmemory@plt>:
 c40:	add	ip, pc, #0, 12
 c44:	add	ip, ip, #73728	; 0x12000
 c48:	ldr	pc, [ip, #1000]!	; 0x3e8

00000c4c <resv_nick_fnc@plt>:
 c4c:	add	ip, pc, #0, 12
 c50:	add	ip, ip, #73728	; 0x12000
 c54:	ldr	pc, [ip, #992]!	; 0x3e0

00000c58 <operhash_delete@plt>:
 c58:	add	ip, pc, #0, 12
 c5c:	add	ip, ip, #73728	; 0x12000
 c60:	ldr	pc, [ip, #984]!	; 0x3d8

00000c64 <sendto_realops_snomask@plt>:
 c64:	add	ip, pc, #0, 12
 c68:	add	ip, ip, #73728	; 0x12000
 c6c:	ldr	pc, [ip, #976]!	; 0x3d0

00000c70 <bandb_add@plt>:
 c70:	add	ip, pc, #0, 12
 c74:	add	ip, ip, #73728	; 0x12000
 c78:	ldr	pc, [ip, #968]!	; 0x3c8

00000c7c <resv_chan_forcepart@plt>:
 c7c:	add	ip, pc, #0, 12
 c80:	add	ip, ip, #73728	; 0x12000
 c84:	ldr	pc, [ip, #960]!	; 0x3c0

00000c88 <deactivate_conf@plt>:
 c88:	add	ip, pc, #0, 12
 c8c:	add	ip, ip, #73728	; 0x12000
 c90:	ldr	pc, [ip, #952]!	; 0x3b8

00000c94 <get_oper_name@plt>:
 c94:	add	ip, pc, #0, 12
 c98:	add	ip, ip, #73728	; 0x12000
 c9c:	ldr	pc, [ip, #944]!	; 0x3b0

00000ca0 <rb_free_rb_dlink_node@plt>:
 ca0:	add	ip, pc, #0, 12
 ca4:	add	ip, ip, #73728	; 0x12000
 ca8:	ldr	pc, [ip, #936]!	; 0x3a8

00000cac <cluster_generic@plt>:
 cac:	add	ip, pc, #0, 12
 cb0:	add	ip, ip, #73728	; 0x12000
 cb4:	ldr	pc, [ip, #928]!	; 0x3a0

00000cb8 <operhash_add@plt>:
 cb8:	add	ip, pc, #0, 12
 cbc:	add	ip, ip, #73728	; 0x12000
 cc0:	ldr	pc, [ip, #920]!	; 0x398

00000cc4 <strcpy@plt>:
 cc4:	add	ip, pc, #0, 12
 cc8:	add	ip, ip, #73728	; 0x12000
 ccc:	ldr	pc, [ip, #912]!	; 0x390

00000cd0 <sendto_server@plt>:
 cd0:	add	ip, pc, #0, 12
 cd4:	add	ip, ip, #73728	; 0x12000
 cd8:	ldr	pc, [ip, #904]!	; 0x388

00000cdc <malloc@plt>:
 cdc:	add	ip, pc, #0, 12
 ce0:	add	ip, ip, #73728	; 0x12000
 ce4:	ldr	pc, [ip, #896]!	; 0x380

00000ce8 <__gmon_start__@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #73728	; 0x12000
 cf0:	ldr	pc, [ip, #888]!	; 0x378

00000cf4 <free_conf@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #73728	; 0x12000
 cfc:	ldr	pc, [ip, #880]!	; 0x370

00000d00 <rb_make_rb_dlink_node@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #73728	; 0x12000
 d08:	ldr	pc, [ip, #872]!	; 0x368

00000d0c <strlen@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #73728	; 0x12000
 d14:	ldr	pc, [ip, #864]!	; 0x360

00000d18 <ilog@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #73728	; 0x12000
 d20:	ldr	pc, [ip, #856]!	; 0x358

00000d24 <match@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #73728	; 0x12000
 d2c:	ldr	pc, [ip, #848]!	; 0x350

00000d30 <del_from_resv_hash@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #73728	; 0x12000
 d38:	ldr	pc, [ip, #840]!	; 0x348

00000d3c <find_nick_resv_mask@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #73728	; 0x12000
 d44:	ldr	pc, [ip, #832]!	; 0x340

00000d48 <valid_temp_time@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #73728	; 0x12000
 d50:	ldr	pc, [ip, #824]!	; 0x338

00000d54 <sendto_one_notice@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #73728	; 0x12000
 d5c:	ldr	pc, [ip, #816]!	; 0x330

00000d60 <bandb_del@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #73728	; 0x12000
 d68:	ldr	pc, [ip, #808]!	; 0x328

00000d6c <atoi@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #73728	; 0x12000
 d74:	ldr	pc, [ip, #800]!	; 0x320

00000d78 <valid_wild_card_simple@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #73728	; 0x12000
 d80:	ldr	pc, [ip, #792]!	; 0x318

00000d84 <find_shared_conf@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #73728	; 0x12000
 d8c:	ldr	pc, [ip, #784]!	; 0x310

00000d90 <privilegeset_in_set@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #73728	; 0x12000
 d98:	ldr	pc, [ip, #776]!	; 0x308

00000d9c <hash_find_resv@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #73728	; 0x12000
 da4:	ldr	pc, [ip, #768]!	; 0x300

00000da8 <irccmp@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #73728	; 0x12000
 db0:	ldr	pc, [ip, #760]!	; 0x2f8

00000db4 <clean_resv_nick@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #73728	; 0x12000
 dbc:	ldr	pc, [ip, #752]!	; 0x2f0

00000dc0 <__assert_fail@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #73728	; 0x12000
 dc8:	ldr	pc, [ip, #744]!	; 0x2e8

Disassembly of section .text:

00000dcc <rb_dlinkFind.part.4>:
     dcc:	ldr	r3, [pc, #32]	; df4 <rb_dlinkFind.part.4+0x28>
     dd0:	ldr	r1, [pc, #32]	; df8 <rb_dlinkFind.part.4+0x2c>
     dd4:	ldr	r0, [pc, #32]	; dfc <rb_dlinkFind.part.4+0x30>
     dd8:	add	r3, pc, r3
     ddc:	push	{r4, lr}
     de0:	add	r3, r3, #12
     de4:	ldr	r2, [pc, #20]	; e00 <rb_dlinkFind.part.4+0x34>
     de8:	add	r1, pc, r1
     dec:	add	r0, pc, r0
     df0:	bl	dc0 <__assert_fail@plt>
     df4:	.word	0x00001a88
     df8:	.word	0x00001b00
     dfc:	.word	0x00001b18
     e00:	.word	0x00000137

00000e04 <call_weak_fn>:
     e04:	ldr	r3, [pc, #20]	; e20 <call_weak_fn+0x1c>
     e08:	ldr	r2, [pc, #20]	; e24 <call_weak_fn+0x20>
     e0c:	add	r3, pc, r3
     e10:	ldr	r2, [r3, r2]
     e14:	cmp	r2, #0
     e18:	bxeq	lr
     e1c:	b	ce8 <__gmon_start__@plt>
     e20:	.word	0x000121ec
     e24:	.word	0x000000d0

00000e28 <deregister_tm_clones>:
     e28:	ldr	r3, [pc, #52]	; e64 <deregister_tm_clones+0x3c>
     e2c:	ldr	r0, [pc, #52]	; e68 <deregister_tm_clones+0x40>
     e30:	add	r3, pc, r3
     e34:	add	r0, pc, r0
     e38:	add	r3, r3, #3
     e3c:	sub	r3, r3, r0
     e40:	cmp	r3, #6
     e44:	ldr	r3, [pc, #32]	; e6c <deregister_tm_clones+0x44>
     e48:	add	r3, pc, r3
     e4c:	bxls	lr
     e50:	ldr	r2, [pc, #24]	; e70 <deregister_tm_clones+0x48>
     e54:	ldr	r3, [r3, r2]
     e58:	cmp	r3, #0
     e5c:	bxeq	lr
     e60:	bx	r3
     e64:	.word	0x00012378
     e68:	.word	0x00012374
     e6c:	.word	0x000121b0
     e70:	.word	0x000000b8

00000e74 <register_tm_clones>:
     e74:	ldr	r1, [pc, #56]	; eb4 <register_tm_clones+0x40>
     e78:	ldr	r0, [pc, #56]	; eb8 <register_tm_clones+0x44>
     e7c:	add	r1, pc, r1
     e80:	add	r0, pc, r0
     e84:	sub	r1, r1, r0
     e88:	ldr	r3, [pc, #44]	; ebc <register_tm_clones+0x48>
     e8c:	asr	r1, r1, #2
     e90:	add	r3, pc, r3
     e94:	add	r1, r1, r1, lsr #31
     e98:	asrs	r1, r1, #1
     e9c:	bxeq	lr
     ea0:	ldr	r2, [pc, #24]	; ec0 <register_tm_clones+0x4c>
     ea4:	ldr	r3, [r3, r2]
     ea8:	cmp	r3, #0
     eac:	bxeq	lr
     eb0:	bx	r3
     eb4:	.word	0x0001232c
     eb8:	.word	0x00012328
     ebc:	.word	0x00012168
     ec0:	.word	0x000000e0

00000ec4 <__do_global_dtors_aux>:
     ec4:	ldr	r3, [pc, #76]	; f18 <__do_global_dtors_aux+0x54>
     ec8:	ldr	r2, [pc, #76]	; f1c <__do_global_dtors_aux+0x58>
     ecc:	add	r3, pc, r3
     ed0:	add	r2, pc, r2
     ed4:	ldrb	r3, [r3]
     ed8:	cmp	r3, #0
     edc:	bxne	lr
     ee0:	ldr	r3, [pc, #56]	; f20 <__do_global_dtors_aux+0x5c>
     ee4:	push	{r4, lr}
     ee8:	ldr	r3, [r2, r3]
     eec:	cmp	r3, #0
     ef0:	beq	f00 <__do_global_dtors_aux+0x3c>
     ef4:	ldr	r3, [pc, #40]	; f24 <__do_global_dtors_aux+0x60>
     ef8:	ldr	r0, [pc, r3]
     efc:	bl	c1c <__cxa_finalize@plt>
     f00:	bl	e28 <deregister_tm_clones>
     f04:	ldr	r3, [pc, #28]	; f28 <__do_global_dtors_aux+0x64>
     f08:	mov	r2, #1
     f0c:	add	r3, pc, r3
     f10:	strb	r2, [r3]
     f14:	pop	{r4, pc}
     f18:	.word	0x000122dc
     f1c:	.word	0x00012128
     f20:	.word	0x000000b4
     f24:	.word	0x000121f0
     f28:	.word	0x0001229c

00000f2c <frame_dummy>:
     f2c:	ldr	r0, [pc, #56]	; f6c <frame_dummy+0x40>
     f30:	ldr	r3, [pc, #56]	; f70 <frame_dummy+0x44>
     f34:	add	r0, pc, r0
     f38:	ldr	r2, [r0]
     f3c:	add	r3, pc, r3
     f40:	cmp	r2, #0
     f44:	bne	f4c <frame_dummy+0x20>
     f48:	b	e74 <register_tm_clones>
     f4c:	ldr	r2, [pc, #32]	; f74 <frame_dummy+0x48>
     f50:	ldr	r3, [r3, r2]
     f54:	cmp	r3, #0
     f58:	beq	f48 <frame_dummy+0x1c>
     f5c:	push	{r4, lr}
     f60:	blx	r3
     f64:	pop	{r4, lr}
     f68:	b	e74 <register_tm_clones>
     f6c:	.word	0x00011fc0
     f70:	.word	0x000120bc
     f74:	.word	0x000000dc

00000f78 <rb_strdup>:
     f78:	push	{r4, r5, r6, lr}
     f7c:	mov	r5, r0
     f80:	bl	d0c <strlen@plt>
     f84:	add	r0, r0, #1
     f88:	bl	cdc <malloc@plt>
     f8c:	subs	r4, r0, #0
     f90:	bne	f98 <rb_strdup+0x20>
     f94:	bl	c40 <rb_outofmemory@plt>
     f98:	mov	r1, r5
     f9c:	bl	cc4 <strcpy@plt>
     fa0:	mov	r0, r4
     fa4:	pop	{r4, r5, r6, pc}

00000fa8 <propagate_resv.part.0>:
     fa8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
     fac:	mov	r7, r3
     fb0:	ldr	r5, [pc, #116]	; 102c <propagate_resv.part.0+0x84>
     fb4:	ldr	r3, [pc, #116]	; 1030 <propagate_resv.part.0+0x88>
     fb8:	sub	sp, sp, #24
     fbc:	add	r5, pc, r5
     fc0:	ldr	r8, [sp, #56]	; 0x38
     fc4:	ldr	r6, [r5, r3]
     fc8:	ldr	r3, [pc, #100]	; 1034 <propagate_resv.part.0+0x8c>
     fcc:	mov	r4, r1
     fd0:	add	r3, pc, r3
     fd4:	str	r3, [sp]
     fd8:	mov	sl, r2
     fdc:	stmib	sp, {r4, r7, r8}
     fe0:	mov	r3, #0
     fe4:	ldr	r2, [r6]
     fe8:	mov	r9, r0
     fec:	bl	c10 <sendto_match_servs@plt>
     ff0:	ldr	r3, [pc, #64]	; 1038 <propagate_resv.part.0+0x90>
     ff4:	mov	r1, r4
     ff8:	mov	r0, r9
     ffc:	ldr	r2, [r5, r3]
    1000:	ldr	r3, [pc, #52]	; 103c <propagate_resv.part.0+0x94>
    1004:	str	r8, [sp, #16]
    1008:	add	r3, pc, r3
    100c:	str	r7, [sp, #12]
    1010:	stmib	sp, {r4, sl}
    1014:	str	r3, [sp]
    1018:	ldr	r3, [r6]
    101c:	ldr	r2, [r2]
    1020:	bl	c10 <sendto_match_servs@plt>
    1024:	add	sp, sp, #24
    1028:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    102c:	.word	0x0001203c
    1030:	.word	0x000000c4
    1034:	.word	0x000018ef
    1038:	.word	0x000000e8
    103c:	.word	0x000018c6

00001040 <rb_dlinkAdd>:
    1040:	cmp	r0, #0
    1044:	push	{r4, lr}
    1048:	bne	106c <rb_dlinkAdd+0x2c>
    104c:	ldr	r3, [pc, #168]	; 10fc <rb_dlinkAdd+0xbc>
    1050:	ldr	r1, [pc, #168]	; 1100 <rb_dlinkAdd+0xc0>
    1054:	ldr	r0, [pc, #168]	; 1104 <rb_dlinkAdd+0xc4>
    1058:	add	r3, pc, r3
    105c:	mov	r2, #143	; 0x8f
    1060:	add	r1, pc, r1
    1064:	add	r0, pc, r0
    1068:	bl	dc0 <__assert_fail@plt>
    106c:	cmp	r1, #0
    1070:	bne	1094 <rb_dlinkAdd+0x54>
    1074:	ldr	r3, [pc, #140]	; 1108 <rb_dlinkAdd+0xc8>
    1078:	ldr	r1, [pc, #140]	; 110c <rb_dlinkAdd+0xcc>
    107c:	ldr	r0, [pc, #140]	; 1110 <rb_dlinkAdd+0xd0>
    1080:	add	r3, pc, r3
    1084:	mov	r2, #144	; 0x90
    1088:	add	r1, pc, r1
    108c:	add	r0, pc, r0
    1090:	b	1068 <rb_dlinkAdd+0x28>
    1094:	cmp	r2, #0
    1098:	bne	10bc <rb_dlinkAdd+0x7c>
    109c:	ldr	r3, [pc, #112]	; 1114 <rb_dlinkAdd+0xd4>
    10a0:	ldr	r1, [pc, #112]	; 1118 <rb_dlinkAdd+0xd8>
    10a4:	ldr	r0, [pc, #112]	; 111c <rb_dlinkAdd+0xdc>
    10a8:	add	r3, pc, r3
    10ac:	mov	r2, #145	; 0x91
    10b0:	add	r1, pc, r1
    10b4:	add	r0, pc, r0
    10b8:	b	1068 <rb_dlinkAdd+0x28>
    10bc:	mov	r3, #0
    10c0:	str	r3, [r1, #4]
    10c4:	ldr	r3, [r2]
    10c8:	str	r0, [r1]
    10cc:	cmp	r3, #0
    10d0:	str	r3, [r1, #8]
    10d4:	strne	r1, [r3, #4]
    10d8:	bne	10e8 <rb_dlinkAdd+0xa8>
    10dc:	ldr	r3, [r2, #4]
    10e0:	cmp	r3, #0
    10e4:	streq	r1, [r2, #4]
    10e8:	ldr	r3, [r2, #8]
    10ec:	str	r1, [r2]
    10f0:	add	r3, r3, #1
    10f4:	str	r3, [r2, #8]
    10f8:	pop	{r4, pc}
    10fc:	.word	0x00001808
    1100:	.word	0x00001888
    1104:	.word	0x000018a0
    1108:	.word	0x000017e0
    110c:	.word	0x00001860
    1110:	.word	0x00001885
    1114:	.word	0x000017b8
    1118:	.word	0x00001838
    111c:	.word	0x00001867

00001120 <parse_resv>:
    1120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1124:	mov	r7, r2
    1128:	mov	r8, r3
    112c:	ldrd	r2, [r0, #64]	; 0x40
    1130:	sub	sp, sp, #44	; 0x2c
    1134:	ldr	sl, [pc, #1708]	; 17e8 <parse_resv+0x6c8>
    1138:	and	r2, r2, #8192	; 0x2000
    113c:	mov	r3, #0
    1140:	orrs	r3, r2, r3
    1144:	add	sl, pc, sl
    1148:	mov	r4, r0
    114c:	mov	r5, r1
    1150:	ldr	r9, [sp, #80]	; 0x50
    1154:	beq	11b4 <parse_resv+0x94>
    1158:	ldrh	r3, [r0, #80]	; 0x50
    115c:	cmp	r3, #64	; 0x40
    1160:	bne	11b4 <parse_resv+0x94>
    1164:	cmp	r5, #0
    1168:	bne	11e4 <parse_resv+0xc4>
    116c:	mov	r0, r5
    1170:	bl	db4 <clean_resv_nick@plt>
    1174:	cmp	r0, #0
    1178:	beq	17d8 <parse_resv+0x6b8>
    117c:	mov	r0, r5
    1180:	bl	d0c <strlen@plt>
    1184:	cmp	r0, #64	; 0x40
    1188:	bhi	123c <parse_resv+0x11c>
    118c:	mov	r0, r5
    1190:	bl	d78 <valid_wild_card_simple@plt>
    1194:	cmp	r0, #0
    1198:	bne	14fc <parse_resv+0x3dc>
    119c:	ldr	r3, [pc, #1608]	; 17ec <parse_resv+0x6cc>
    11a0:	ldr	r1, [pc, #1608]	; 17f0 <parse_resv+0x6d0>
    11a4:	ldr	r3, [sl, r3]
    11a8:	add	r1, pc, r1
    11ac:	ldr	r2, [r3, #240]	; 0xf0
    11b0:	b	121c <parse_resv+0xfc>
    11b4:	ldr	r2, [r4, #32]
    11b8:	cmp	r8, #0
    11bc:	movgt	r3, #128	; 0x80
    11c0:	movle	r3, #256	; 0x100
    11c4:	add	r2, r2, #88	; 0x58
    11c8:	add	r1, r4, #163	; 0xa3
    11cc:	add	r0, r4, #152	; 0x98
    11d0:	bl	d84 <find_shared_conf@plt>
    11d4:	cmp	r0, #0
    11d8:	bne	1164 <parse_resv+0x44>
    11dc:	add	sp, sp, #44	; 0x2c
    11e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    11e4:	ldr	r3, [pc, #1544]	; 17f4 <parse_resv+0x6d4>
    11e8:	ldrb	r2, [r5]
    11ec:	ldr	r3, [sl, r3]
    11f0:	ldr	r3, [r3, r2, lsl #2]
    11f4:	tst	r3, #512	; 0x200
    11f8:	beq	116c <parse_resv+0x4c>
    11fc:	mov	r0, r5
    1200:	bl	d9c <hash_find_resv@plt>
    1204:	subs	r3, r0, #0
    1208:	str	r3, [sp, #32]
    120c:	beq	122c <parse_resv+0x10c>
    1210:	ldr	r1, [pc, #1504]	; 17f8 <parse_resv+0x6d8>
    1214:	mov	r2, r5
    1218:	add	r1, pc, r1
    121c:	mov	r0, r4
    1220:	add	sp, sp, #44	; 0x2c
    1224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1228:	b	d54 <sendto_one_notice@plt>
    122c:	mov	r0, r5
    1230:	bl	d0c <strlen@plt>
    1234:	cmp	r0, #200	; 0xc8
    1238:	bls	124c <parse_resv+0x12c>
    123c:	ldr	r1, [pc, #1464]	; 17fc <parse_resv+0x6dc>
    1240:	mov	r2, r5
    1244:	add	r1, pc, r1
    1248:	b	121c <parse_resv+0xfc>
    124c:	bl	be0 <make_conf@plt>
    1250:	ldr	r3, [sp, #32]
    1254:	mov	fp, #256	; 0x100
    1258:	str	r3, [r0, #32]
    125c:	str	fp, [r0]
    1260:	mov	r6, r0
    1264:	bl	bf8 <rb_current_time@plt>
    1268:	str	r0, [r6, #40]	; 0x28
    126c:	mov	r0, r5
    1270:	bl	f78 <rb_strdup>
    1274:	str	r0, [r6, #16]
    1278:	mov	r0, r7
    127c:	bl	f78 <rb_strdup>
    1280:	str	r0, [r6, #20]
    1284:	mov	r0, r4
    1288:	bl	c94 <get_oper_name@plt>
    128c:	bl	cb8 <operhash_add@plt>
    1290:	cmp	r9, #0
    1294:	str	r0, [r6, #12]
    1298:	beq	13e8 <parse_resv+0x2c8>
    129c:	ldr	r3, [r6, #4]
    12a0:	orr	r3, r3, #8912896	; 0x880000
    12a4:	str	r3, [r6, #4]
    12a8:	bl	bf8 <rb_current_time@plt>
    12ac:	add	r0, r8, r0
    12b0:	str	r0, [r6, #36]	; 0x24
    12b4:	str	r0, [r6, #44]	; 0x2c
    12b8:	mov	r0, r6
    12bc:	bl	c34 <replace_old_ban@plt>
    12c0:	bl	d00 <rb_make_rb_dlink_node@plt>
    12c4:	ldr	r3, [pc, #1332]	; 1800 <parse_resv+0x6e0>
    12c8:	ldr	r3, [sl, r3]
    12cc:	mov	r2, r3
    12d0:	str	r3, [sp, #36]	; 0x24
    12d4:	mov	r1, r0
    12d8:	mov	r0, r6
    12dc:	bl	1040 <rb_dlinkAdd>
    12e0:	mov	r0, r4
    12e4:	bl	c94 <get_oper_name@plt>
    12e8:	mov	r1, #60	; 0x3c
    12ec:	str	r0, [sp, #36]	; 0x24
    12f0:	mov	r0, r8
    12f4:	bl	2610 <__divsi3>
    12f8:	ldr	r2, [pc, #1284]	; 1804 <parse_resv+0x6e4>
    12fc:	ldr	r3, [sp, #36]	; 0x24
    1300:	add	r2, pc, r2
    1304:	ldr	r1, [sp, #32]
    1308:	stmib	sp, {r5, r7}
    130c:	mov	r9, r0
    1310:	str	r0, [sp]
    1314:	mov	r0, fp
    1318:	bl	c64 <sendto_realops_snomask@plt>
    131c:	mov	r0, r4
    1320:	bl	c94 <get_oper_name@plt>
    1324:	ldr	r1, [pc, #1244]	; 1808 <parse_resv+0x6e8>
    1328:	mov	r3, r9
    132c:	add	r1, pc, r1
    1330:	stm	sp, {r5, r7}
    1334:	mov	r2, r0
    1338:	mov	r0, #7
    133c:	bl	d18 <ilog@plt>
    1340:	ldr	r1, [pc, #1220]	; 180c <parse_resv+0x6ec>
    1344:	mov	r0, r4
    1348:	mov	r3, r5
    134c:	mov	r2, r9
    1350:	add	r1, pc, r1
    1354:	bl	d54 <sendto_one_notice@plt>
    1358:	ldr	r2, [pc, #1200]	; 1810 <parse_resv+0x6f0>
    135c:	ldr	r3, [r6, #40]	; 0x28
    1360:	add	r4, r4, #396	; 0x18c
    1364:	ldr	r1, [sl, r2]
    1368:	ldr	r2, [pc, #1188]	; 1814 <parse_resv+0x6f4>
    136c:	ldr	r0, [r1]
    1370:	ldr	r2, [sl, r2]
    1374:	ldr	r2, [r2]
    1378:	str	r7, [sp, #24]
    137c:	ldr	r1, [r6, #44]	; 0x2c
    1380:	orr	r2, r0, r2
    1384:	sub	r1, r1, r3
    1388:	str	r1, [sp, #20]
    138c:	ldr	r1, [r6, #36]	; 0x24
    1390:	str	r3, [sp, #12]
    1394:	sub	r1, r1, r3
    1398:	str	r1, [sp, #16]
    139c:	ldr	r3, [r6, #16]
    13a0:	str	r4, [sp, #4]
    13a4:	str	r3, [sp, #8]
    13a8:	ldr	r3, [pc, #1128]	; 1818 <parse_resv+0x6f8>
    13ac:	add	r3, pc, r3
    13b0:	str	r3, [sp]
    13b4:	ldr	r3, [sp, #32]
    13b8:	mov	r1, r3
    13bc:	mov	r0, r3
    13c0:	bl	cd0 <sendto_server@plt>
    13c4:	mov	r1, r6
    13c8:	ldr	r0, [r6, #16]
    13cc:	bl	c04 <add_to_resv_hash@plt>
    13d0:	mov	r2, r8
    13d4:	ldr	r1, [r6, #20]
    13d8:	ldr	r0, [r6, #16]
    13dc:	add	sp, sp, #44	; 0x2c
    13e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    13e4:	b	c7c <resv_chan_forcepart@plt>
    13e8:	cmp	r8, #0
    13ec:	ble	1478 <parse_resv+0x358>
    13f0:	bl	bf8 <rb_current_time@plt>
    13f4:	add	r0, r8, r0
    13f8:	str	r0, [r6, #36]	; 0x24
    13fc:	mov	r0, r4
    1400:	bl	c94 <get_oper_name@plt>
    1404:	mov	r1, #60	; 0x3c
    1408:	str	r0, [sp, #32]
    140c:	mov	r0, r8
    1410:	bl	2610 <__divsi3>
    1414:	ldr	r2, [pc, #1024]	; 181c <parse_resv+0x6fc>
    1418:	ldr	r3, [sp, #32]
    141c:	mov	r1, r9
    1420:	add	r2, pc, r2
    1424:	stmib	sp, {r5, r7}
    1428:	mov	sl, r0
    142c:	str	r0, [sp]
    1430:	mov	r0, fp
    1434:	bl	c64 <sendto_realops_snomask@plt>
    1438:	mov	r0, r4
    143c:	bl	c94 <get_oper_name@plt>
    1440:	ldr	r1, [pc, #984]	; 1820 <parse_resv+0x700>
    1444:	mov	r3, sl
    1448:	stm	sp, {r5, r7}
    144c:	add	r1, pc, r1
    1450:	mov	r2, r0
    1454:	mov	r0, #7
    1458:	bl	d18 <ilog@plt>
    145c:	ldr	r1, [pc, #960]	; 1824 <parse_resv+0x704>
    1460:	mov	r3, r5
    1464:	mov	r2, sl
    1468:	add	r1, pc, r1
    146c:	mov	r0, r4
    1470:	bl	d54 <sendto_one_notice@plt>
    1474:	b	13c4 <parse_resv+0x2a4>
    1478:	mov	r0, r4
    147c:	bl	c94 <get_oper_name@plt>
    1480:	ldr	r2, [pc, #928]	; 1828 <parse_resv+0x708>
    1484:	mov	r1, r9
    1488:	add	r2, pc, r2
    148c:	stm	sp, {r5, r7}
    1490:	mov	r3, r0
    1494:	mov	r0, fp
    1498:	bl	c64 <sendto_realops_snomask@plt>
    149c:	mov	r0, r4
    14a0:	bl	c94 <get_oper_name@plt>
    14a4:	ldr	r1, [pc, #896]	; 182c <parse_resv+0x70c>
    14a8:	mov	r3, r5
    14ac:	str	r7, [sp]
    14b0:	add	r1, pc, r1
    14b4:	mov	r2, r0
    14b8:	mov	r0, #7
    14bc:	bl	d18 <ilog@plt>
    14c0:	ldr	r1, [pc, #872]	; 1830 <parse_resv+0x710>
    14c4:	mov	r2, r5
    14c8:	mov	r0, r4
    14cc:	add	r1, pc, r1
    14d0:	bl	d54 <sendto_one_notice@plt>
    14d4:	str	r9, [sp, #8]
    14d8:	str	r9, [sp, #4]
    14dc:	ldr	r3, [r6, #20]
    14e0:	mov	r1, r4
    14e4:	str	r3, [sp]
    14e8:	mov	r0, #3
    14ec:	mov	r3, r9
    14f0:	ldr	r2, [r6, #16]
    14f4:	bl	c70 <bandb_add@plt>
    14f8:	b	13c4 <parse_resv+0x2a4>
    14fc:	mov	r0, r5
    1500:	bl	d3c <find_nick_resv_mask@plt>
    1504:	subs	fp, r0, #0
    1508:	ldrne	r1, [pc, #804]	; 1834 <parse_resv+0x714>
    150c:	movne	r2, r5
    1510:	addne	r1, pc, r1
    1514:	bne	121c <parse_resv+0xfc>
    1518:	bl	be0 <make_conf@plt>
    151c:	mov	r3, #512	; 0x200
    1520:	str	r3, [r0]
    1524:	str	fp, [r0, #32]
    1528:	mov	r6, r0
    152c:	bl	bf8 <rb_current_time@plt>
    1530:	str	r0, [r6, #40]	; 0x28
    1534:	mov	r0, r5
    1538:	bl	f78 <rb_strdup>
    153c:	str	r0, [r6, #16]
    1540:	mov	r0, r7
    1544:	bl	f78 <rb_strdup>
    1548:	str	r0, [r6, #20]
    154c:	mov	r0, r4
    1550:	bl	c94 <get_oper_name@plt>
    1554:	bl	cb8 <operhash_add@plt>
    1558:	cmp	r9, #0
    155c:	str	r0, [r6, #12]
    1560:	beq	16c4 <parse_resv+0x5a4>
    1564:	ldr	r3, [r6, #4]
    1568:	orr	r3, r3, #8912896	; 0x880000
    156c:	str	r3, [r6, #4]
    1570:	bl	bf8 <rb_current_time@plt>
    1574:	add	r0, r8, r0
    1578:	str	r0, [r6, #36]	; 0x24
    157c:	str	r0, [r6, #44]	; 0x2c
    1580:	mov	r0, r6
    1584:	bl	c34 <replace_old_ban@plt>
    1588:	bl	d00 <rb_make_rb_dlink_node@plt>
    158c:	ldr	r3, [pc, #620]	; 1800 <parse_resv+0x6e0>
    1590:	ldr	r3, [sl, r3]
    1594:	mov	r2, r3
    1598:	str	r3, [sp, #32]
    159c:	mov	r1, r0
    15a0:	mov	r0, r6
    15a4:	bl	1040 <rb_dlinkAdd>
    15a8:	mov	r0, r4
    15ac:	bl	c94 <get_oper_name@plt>
    15b0:	mov	r1, #60	; 0x3c
    15b4:	str	r0, [sp, #32]
    15b8:	mov	r0, r8
    15bc:	bl	2610 <__divsi3>
    15c0:	ldr	r2, [pc, #624]	; 1838 <parse_resv+0x718>
    15c4:	ldr	r3, [sp, #32]
    15c8:	add	r2, pc, r2
    15cc:	mov	r1, fp
    15d0:	stmib	sp, {r5, r7}
    15d4:	mov	r9, r0
    15d8:	str	r0, [sp]
    15dc:	mov	r0, #256	; 0x100
    15e0:	bl	c64 <sendto_realops_snomask@plt>
    15e4:	mov	r0, r4
    15e8:	bl	c94 <get_oper_name@plt>
    15ec:	ldr	r1, [pc, #584]	; 183c <parse_resv+0x71c>
    15f0:	mov	r3, r9
    15f4:	add	r1, pc, r1
    15f8:	stm	sp, {r5, r7}
    15fc:	mov	r2, r0
    1600:	mov	r0, #7
    1604:	bl	d18 <ilog@plt>
    1608:	ldr	r1, [pc, #560]	; 1840 <parse_resv+0x720>
    160c:	mov	r0, r4
    1610:	mov	r3, r5
    1614:	mov	r2, r9
    1618:	add	r1, pc, r1
    161c:	bl	d54 <sendto_one_notice@plt>
    1620:	ldr	r2, [pc, #488]	; 1810 <parse_resv+0x6f0>
    1624:	ldr	r3, [r6, #40]	; 0x28
    1628:	add	r4, r4, #396	; 0x18c
    162c:	ldr	r1, [sl, r2]
    1630:	ldr	r2, [pc, #476]	; 1814 <parse_resv+0x6f4>
    1634:	ldr	r0, [r1]
    1638:	ldr	r2, [sl, r2]
    163c:	ldr	r2, [r2]
    1640:	str	r7, [sp, #24]
    1644:	ldr	r1, [r6, #44]	; 0x2c
    1648:	orr	r2, r0, r2
    164c:	sub	r1, r1, r3
    1650:	str	r1, [sp, #20]
    1654:	ldr	r1, [r6, #36]	; 0x24
    1658:	str	r3, [sp, #12]
    165c:	sub	r1, r1, r3
    1660:	str	r1, [sp, #16]
    1664:	ldr	r3, [r6, #16]
    1668:	mov	r1, fp
    166c:	str	r3, [sp, #8]
    1670:	ldr	r3, [pc, #460]	; 1844 <parse_resv+0x724>
    1674:	str	r4, [sp, #4]
    1678:	add	r3, pc, r3
    167c:	str	r3, [sp]
    1680:	mov	r0, fp
    1684:	mov	r3, fp
    1688:	bl	cd0 <sendto_server@plt>
    168c:	bl	d00 <rb_make_rb_dlink_node@plt>
    1690:	ldr	r3, [pc, #432]	; 1848 <parse_resv+0x728>
    1694:	ldr	r3, [sl, r3]
    1698:	mov	r2, r3
    169c:	str	r3, [sp, #32]
    16a0:	mov	r1, r0
    16a4:	mov	r0, r6
    16a8:	bl	1040 <rb_dlinkAdd>
    16ac:	mov	r2, r8
    16b0:	ldr	r1, [r6, #20]
    16b4:	ldr	r0, [r6, #16]
    16b8:	add	sp, sp, #44	; 0x2c
    16bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16c0:	b	c4c <resv_nick_fnc@plt>
    16c4:	cmp	r8, #0
    16c8:	ble	1754 <parse_resv+0x634>
    16cc:	bl	bf8 <rb_current_time@plt>
    16d0:	add	r0, r8, r0
    16d4:	str	r0, [r6, #36]	; 0x24
    16d8:	mov	r0, r4
    16dc:	bl	c94 <get_oper_name@plt>
    16e0:	mov	r1, #60	; 0x3c
    16e4:	str	r0, [sp, #32]
    16e8:	mov	r0, r8
    16ec:	bl	2610 <__divsi3>
    16f0:	ldr	r2, [pc, #340]	; 184c <parse_resv+0x72c>
    16f4:	ldr	r3, [sp, #32]
    16f8:	mov	r1, r9
    16fc:	add	r2, pc, r2
    1700:	stmib	sp, {r5, r7}
    1704:	mov	fp, r0
    1708:	str	r0, [sp]
    170c:	mov	r0, #256	; 0x100
    1710:	bl	c64 <sendto_realops_snomask@plt>
    1714:	mov	r0, r4
    1718:	bl	c94 <get_oper_name@plt>
    171c:	ldr	r1, [pc, #300]	; 1850 <parse_resv+0x730>
    1720:	mov	r3, fp
    1724:	stm	sp, {r5, r7}
    1728:	add	r1, pc, r1
    172c:	mov	r2, r0
    1730:	mov	r0, #7
    1734:	bl	d18 <ilog@plt>
    1738:	ldr	r1, [pc, #276]	; 1854 <parse_resv+0x734>
    173c:	mov	r3, r5
    1740:	mov	r2, fp
    1744:	add	r1, pc, r1
    1748:	mov	r0, r4
    174c:	bl	d54 <sendto_one_notice@plt>
    1750:	b	168c <parse_resv+0x56c>
    1754:	mov	r0, r4
    1758:	bl	c94 <get_oper_name@plt>
    175c:	ldr	r2, [pc, #244]	; 1858 <parse_resv+0x738>
    1760:	mov	r1, r9
    1764:	add	r2, pc, r2
    1768:	stm	sp, {r5, r7}
    176c:	mov	r3, r0
    1770:	mov	r0, #256	; 0x100
    1774:	bl	c64 <sendto_realops_snomask@plt>
    1778:	mov	r0, r4
    177c:	bl	c94 <get_oper_name@plt>
    1780:	ldr	r1, [pc, #212]	; 185c <parse_resv+0x73c>
    1784:	mov	r3, r5
    1788:	str	r7, [sp]
    178c:	add	r1, pc, r1
    1790:	mov	r2, r0
    1794:	mov	r0, #7
    1798:	bl	d18 <ilog@plt>
    179c:	ldr	r1, [pc, #188]	; 1860 <parse_resv+0x740>
    17a0:	mov	r2, r5
    17a4:	mov	r0, r4
    17a8:	add	r1, pc, r1
    17ac:	bl	d54 <sendto_one_notice@plt>
    17b0:	str	r9, [sp, #8]
    17b4:	str	r9, [sp, #4]
    17b8:	ldr	r3, [r6, #20]
    17bc:	mov	r1, r4
    17c0:	str	r3, [sp]
    17c4:	mov	r0, #3
    17c8:	mov	r3, r9
    17cc:	ldr	r2, [r6, #16]
    17d0:	bl	c70 <bandb_add@plt>
    17d4:	b	168c <parse_resv+0x56c>
    17d8:	ldr	r1, [pc, #132]	; 1864 <parse_resv+0x744>
    17dc:	mov	r2, r5
    17e0:	add	r1, pc, r1
    17e4:	b	121c <parse_resv+0xfc>
    17e8:	.word	0x00011eb4
    17ec:	.word	0x000000ec
    17f0:	.word	0x000018cb
    17f4:	.word	0x000000d8
    17f8:	.word	0x00001710
    17fc:	.word	0x00001713
    1800:	.word	0x000000c0
    1804:	.word	0x00001670
    1808:	.word	0x0000166f
    180c:	.word	0x00001659
    1810:	.word	0x000000c8
    1814:	.word	0x000000cc
    1818:	.word	0x0000161d
    181c:	.word	0x000015c8
    1820:	.word	0x0000154f
    1824:	.word	0x000015ae
    1828:	.word	0x000015b1
    182c:	.word	0x000015a5
    1830:	.word	0x00001596
    1834:	.word	0x000015a5
    1838:	.word	0x000013a8
    183c:	.word	0x000013a7
    1840:	.word	0x00001391
    1844:	.word	0x00001351
    1848:	.word	0x000000bc
    184c:	.word	0x000012ec
    1850:	.word	0x00001273
    1854:	.word	0x000012d2
    1858:	.word	0x000012d5
    185c:	.word	0x000012c9
    1860:	.word	0x000012ba
    1864:	.word	0x00001301

00001868 <mo_resv>:
    1868:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    186c:	sub	sp, sp, #44	; 0x2c
    1870:	ldr	r5, [pc, #868]	; 1bdc <mo_resv+0x374>
    1874:	str	r3, [sp, #28]
    1878:	ldr	r3, [r2, #24]
    187c:	add	r5, pc, r5
    1880:	cmp	r3, #0
    1884:	mov	r4, r2
    1888:	ldr	r9, [sp, #80]	; 0x50
    188c:	bne	18c4 <mo_resv+0x5c>
    1890:	ldr	r3, [pc, #840]	; 1be0 <mo_resv+0x378>
    1894:	ldr	r1, [pc, #840]	; 1be4 <mo_resv+0x37c>
    1898:	ldr	r2, [r5, r3]
    189c:	ldr	r3, [pc, #836]	; 1be8 <mo_resv+0x380>
    18a0:	add	r2, r2, #88	; 0x58
    18a4:	add	r3, pc, r3
    18a8:	str	r3, [sp, #80]	; 0x50
    18ac:	add	r1, pc, r1
    18b0:	add	r3, r4, #88	; 0x58
    18b4:	mov	r0, r4
    18b8:	add	sp, sp, #44	; 0x2c
    18bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18c0:	b	c28 <sendto_one@plt>
    18c4:	ldr	r0, [r3, #36]	; 0x24
    18c8:	cmp	r0, #0
    18cc:	beq	1890 <mo_resv+0x28>
    18d0:	ldr	r3, [pc, #788]	; 1bec <mo_resv+0x384>
    18d4:	ldr	r1, [pc, #788]	; 1bf0 <mo_resv+0x388>
    18d8:	ldr	r3, [r5, r3]
    18dc:	add	r1, pc, r1
    18e0:	ldr	r3, [r3, #324]	; 0x144
    18e4:	str	r3, [sp, #24]
    18e8:	bl	d90 <privilegeset_in_set@plt>
    18ec:	cmp	r0, #0
    18f0:	beq	1890 <mo_resv+0x28>
    18f4:	ldr	r0, [r9, #4]
    18f8:	bl	d48 <valid_temp_time@plt>
    18fc:	ldr	r2, [sp, #28]
    1900:	subs	r6, r0, #0
    1904:	movge	r8, #2
    1908:	movlt	r8, #1
    190c:	add	r3, r8, #2
    1910:	movlt	r6, #0
    1914:	cmp	r3, r2
    1918:	lsl	r7, r8, #2
    191c:	ldr	sl, [r9, r8, lsl #2]
    1920:	add	fp, r8, #1
    1924:	movge	r7, #0
    1928:	bge	19a8 <mo_resv+0x140>
    192c:	add	r7, r9, r7
    1930:	ldr	r1, [pc, #700]	; 1bf4 <mo_resv+0x38c>
    1934:	ldr	r0, [r7, #4]
    1938:	add	r1, pc, r1
    193c:	bl	da8 <irccmp@plt>
    1940:	subs	r3, r0, #0
    1944:	bne	19dc <mo_resv+0x174>
    1948:	ldr	r2, [r4, #24]
    194c:	cmp	r2, #0
    1950:	bne	197c <mo_resv+0x114>
    1954:	ldr	r3, [pc, #644]	; 1be0 <mo_resv+0x378>
    1958:	ldr	r1, [pc, #664]	; 1bf8 <mo_resv+0x390>
    195c:	ldr	r2, [r5, r3]
    1960:	ldr	r3, [pc, #660]	; 1bfc <mo_resv+0x394>
    1964:	add	r2, r2, #88	; 0x58
    1968:	add	r3, pc, r3
    196c:	str	r3, [sp, #80]	; 0x50
    1970:	add	r1, pc, r1
    1974:	add	r3, r4, #88	; 0x58
    1978:	b	18b4 <mo_resv+0x4c>
    197c:	ldr	r0, [r2, #36]	; 0x24
    1980:	str	r3, [sp, #24]
    1984:	cmp	r0, #0
    1988:	beq	1954 <mo_resv+0xec>
    198c:	ldr	r1, [pc, #620]	; 1c00 <mo_resv+0x398>
    1990:	add	r1, pc, r1
    1994:	bl	d90 <privilegeset_in_set@plt>
    1998:	cmp	r0, #0
    199c:	addne	fp, r8, #3
    19a0:	ldrne	r7, [r7, #8]
    19a4:	beq	1954 <mo_resv+0xec>
    19a8:	ldr	r3, [sp, #28]
    19ac:	cmp	fp, r3
    19b0:	blt	19e0 <mo_resv+0x178>
    19b4:	ldr	r3, [pc, #548]	; 1be0 <mo_resv+0x378>
    19b8:	ldr	r1, [pc, #580]	; 1c04 <mo_resv+0x39c>
    19bc:	ldr	r2, [r5, r3]
    19c0:	ldr	r3, [pc, #576]	; 1c08 <mo_resv+0x3a0>
    19c4:	add	r2, r2, #88	; 0x58
    19c8:	add	r3, pc, r3
    19cc:	str	r3, [sp, #80]	; 0x50
    19d0:	add	r1, pc, r1
    19d4:	add	r3, r4, #88	; 0x58
    19d8:	b	18b4 <mo_resv+0x4c>
    19dc:	mov	r7, #0
    19e0:	ldr	r8, [r9, fp, lsl #2]
    19e4:	cmp	r8, #0
    19e8:	beq	19b4 <mo_resv+0x14c>
    19ec:	ldrb	r3, [r8]
    19f0:	cmp	r3, #0
    19f4:	beq	19b4 <mo_resv+0x14c>
    19f8:	cmp	r7, #0
    19fc:	beq	1aac <mo_resv+0x244>
    1a00:	cmp	r6, #0
    1a04:	bne	1a70 <mo_resv+0x208>
    1a08:	str	r8, [sp]
    1a0c:	mov	r3, sl
    1a10:	mov	r2, r6
    1a14:	mov	r1, r7
    1a18:	mov	r0, r4
    1a1c:	bl	fa8 <propagate_resv.part.0>
    1a20:	ldr	r3, [pc, #440]	; 1be0 <mo_resv+0x378>
    1a24:	mov	r0, r7
    1a28:	ldr	r1, [r5, r3]
    1a2c:	add	r1, r1, #88	; 0x58
    1a30:	bl	d24 <match@plt>
    1a34:	cmp	r0, #0
    1a38:	beq	1bd4 <mo_resv+0x36c>
    1a3c:	ldr	r3, [sp, #24]
    1a40:	adds	r3, r3, #0
    1a44:	movne	r3, #1
    1a48:	cmp	r6, #0
    1a4c:	movne	r3, #0
    1a50:	cmp	r3, #0
    1a54:	beq	1bb0 <mo_resv+0x348>
    1a58:	ldr	r1, [pc, #428]	; 1c0c <mo_resv+0x3a4>
    1a5c:	mov	r0, r4
    1a60:	add	r1, pc, r1
    1a64:	add	sp, sp, #44	; 0x2c
    1a68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1a6c:	b	d54 <sendto_one_notice@plt>
    1a70:	ldr	r3, [pc, #408]	; 1c10 <mo_resv+0x3a8>
    1a74:	mov	r1, r7
    1a78:	mov	r0, r4
    1a7c:	ldr	r2, [r5, r3]
    1a80:	ldr	r3, [pc, #396]	; 1c14 <mo_resv+0x3ac>
    1a84:	str	r8, [sp, #16]
    1a88:	add	r3, pc, r3
    1a8c:	str	r3, [sp]
    1a90:	str	sl, [sp, #12]
    1a94:	str	r6, [sp, #8]
    1a98:	str	r7, [sp, #4]
    1a9c:	mov	r3, #0
    1aa0:	ldr	r2, [r2]
    1aa4:	bl	c10 <sendto_match_servs@plt>
    1aa8:	b	1a20 <mo_resv+0x1b8>
    1aac:	ldr	r3, [sp, #24]
    1ab0:	cmp	r3, #0
    1ab4:	bne	1a3c <mo_resv+0x1d4>
    1ab8:	ldr	r3, [pc, #344]	; 1c18 <mo_resv+0x3b0>
    1abc:	ldr	r3, [r5, r3]
    1ac0:	ldr	r2, [r3, #8]
    1ac4:	cmp	r2, #0
    1ac8:	beq	1a3c <mo_resv+0x1d4>
    1acc:	ldr	r7, [r3]
    1ad0:	ldr	r3, [pc, #324]	; 1c1c <mo_resv+0x3b4>
    1ad4:	ldr	fp, [pc, #324]	; 1c20 <mo_resv+0x3b8>
    1ad8:	add	r3, pc, r3
    1adc:	str	r3, [sp, #32]
    1ae0:	ldr	r3, [pc, #316]	; 1c24 <mo_resv+0x3bc>
    1ae4:	add	fp, pc, fp
    1ae8:	add	r3, pc, r3
    1aec:	str	r3, [sp, #36]	; 0x24
    1af0:	cmp	r7, #0
    1af4:	beq	1a3c <mo_resv+0x1d4>
    1af8:	ldr	r9, [r7]
    1afc:	cmp	r6, #0
    1b00:	ldr	r3, [r9, #12]
    1b04:	bne	1b78 <mo_resv+0x310>
    1b08:	tst	r3, #256	; 0x100
    1b0c:	beq	1b70 <mo_resv+0x308>
    1b10:	ldr	r3, [pc, #272]	; 1c28 <mo_resv+0x3c0>
    1b14:	ldr	r1, [r9, #8]
    1b18:	mov	r0, r4
    1b1c:	ldr	r3, [r5, r3]
    1b20:	stmib	sp, {r1, sl}
    1b24:	str	r3, [sp, #28]
    1b28:	ldr	r2, [sp, #28]
    1b2c:	str	r8, [sp, #12]
    1b30:	str	fp, [sp]
    1b34:	mov	r3, r6
    1b38:	ldr	r2, [r2]
    1b3c:	bl	c10 <sendto_match_servs@plt>
    1b40:	ldr	r3, [pc, #200]	; 1c10 <mo_resv+0x3a8>
    1b44:	ldr	r1, [r9, #8]
    1b48:	mov	r0, r4
    1b4c:	ldr	r2, [r5, r3]
    1b50:	ldr	r3, [sp, #36]	; 0x24
    1b54:	str	r8, [sp, #12]
    1b58:	str	r3, [sp]
    1b5c:	ldr	r3, [sp, #28]
    1b60:	stmib	sp, {r1, sl}
    1b64:	ldr	r2, [r2]
    1b68:	ldr	r3, [r3]
    1b6c:	bl	c10 <sendto_match_servs@plt>
    1b70:	ldr	r7, [r7, #8]
    1b74:	b	1af0 <mo_resv+0x288>
    1b78:	tst	r3, #128	; 0x80
    1b7c:	beq	1b70 <mo_resv+0x308>
    1b80:	ldr	r3, [pc, #136]	; 1c10 <mo_resv+0x3a8>
    1b84:	ldr	r1, [r9, #8]
    1b88:	mov	r0, r4
    1b8c:	ldr	r2, [r5, r3]
    1b90:	ldr	r3, [sp, #32]
    1b94:	str	r8, [sp, #16]
    1b98:	str	r3, [sp]
    1b9c:	stmib	sp, {r1, r6, sl}
    1ba0:	mov	r3, #0
    1ba4:	ldr	r2, [r2]
    1ba8:	bl	c10 <sendto_match_servs@plt>
    1bac:	b	1b70 <mo_resv+0x308>
    1bb0:	ldr	r3, [sp, #24]
    1bb4:	mov	r2, r8
    1bb8:	str	r3, [sp, #80]	; 0x50
    1bbc:	mov	r1, sl
    1bc0:	mov	r3, r6
    1bc4:	mov	r0, r4
    1bc8:	add	sp, sp, #44	; 0x2c
    1bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1bd0:	b	1120 <parse_resv>
    1bd4:	add	sp, sp, #44	; 0x2c
    1bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1bdc:	.word	0x0001177c
    1be0:	.word	0x000000e4
    1be4:	.word	0x0000125f
    1be8:	.word	0x0000120c
    1bec:	.word	0x000000ec
    1bf0:	.word	0x00001256
    1bf4:	.word	0x00001204
    1bf8:	.word	0x0000119b
    1bfc:	.word	0x000011dc
    1c00:	.word	0x000011af
    1c04:	.word	0x0000117e
    1c08:	.word	0x000011e9
    1c0c:	.word	0x0000112c
    1c10:	.word	0x000000e8
    1c14:	.word	0x00000e46
    1c18:	.word	0x000000d4
    1c1c:	.word	0x00000df6
    1c20:	.word	0x00000ddb
    1c24:	.word	0x0000108b
    1c28:	.word	0x000000c4

00001c2c <ms_resv>:
    1c2c:	push	{r0, r1, r4, r5, r6, lr}
    1c30:	mov	r5, r2
    1c34:	ldr	r4, [sp, #24]
    1c38:	mov	r2, #0
    1c3c:	mov	r0, r5
    1c40:	ldr	r3, [r4, #12]
    1c44:	ldr	r6, [pc, #108]	; 1cb8 <ms_resv+0x8c>
    1c48:	str	r3, [sp]
    1c4c:	ldr	r3, [r4, #8]
    1c50:	ldr	r1, [r4, #4]
    1c54:	bl	fa8 <propagate_resv.part.0>
    1c58:	ldr	r3, [pc, #92]	; 1cbc <ms_resv+0x90>
    1c5c:	add	r6, pc, r6
    1c60:	ldr	r0, [r4, #4]
    1c64:	ldr	r1, [r6, r3]
    1c68:	add	r1, r1, #88	; 0x58
    1c6c:	bl	d24 <match@plt>
    1c70:	cmp	r0, #0
    1c74:	beq	1cb0 <ms_resv+0x84>
    1c78:	ldrh	r3, [r5, #80]	; 0x50
    1c7c:	cmp	r3, #64	; 0x40
    1c80:	bne	1cb0 <ms_resv+0x84>
    1c84:	ldr	r3, [r5, #24]
    1c88:	cmp	r3, #0
    1c8c:	beq	1cb0 <ms_resv+0x84>
    1c90:	mov	r3, #0
    1c94:	str	r3, [sp, #24]
    1c98:	mov	r0, r5
    1c9c:	ldr	r2, [r4, #12]
    1ca0:	ldr	r1, [r4, #8]
    1ca4:	add	sp, sp, #8
    1ca8:	pop	{r4, r5, r6, lr}
    1cac:	b	1120 <parse_resv>
    1cb0:	add	sp, sp, #8
    1cb4:	pop	{r4, r5, r6, pc}
    1cb8:	.word	0x0001139c
    1cbc:	.word	0x000000e4

00001cc0 <me_resv>:
    1cc0:	ldrh	r3, [r2, #80]	; 0x50
    1cc4:	push	{r4, r5, r6, lr}
    1cc8:	cmp	r3, #64	; 0x40
    1ccc:	ldr	r5, [sp, #16]
    1cd0:	popne	{r4, r5, r6, pc}
    1cd4:	ldr	r3, [r2, #24]
    1cd8:	cmp	r3, #0
    1cdc:	popeq	{r4, r5, r6, pc}
    1ce0:	ldr	r0, [r5, #4]
    1ce4:	mov	r4, r2
    1ce8:	bl	d6c <atoi@plt>
    1cec:	mov	r3, #0
    1cf0:	str	r3, [sp, #16]
    1cf4:	ldr	r2, [r5, #16]
    1cf8:	ldr	r1, [r5, #8]
    1cfc:	mov	r3, r0
    1d00:	mov	r0, r4
    1d04:	pop	{r4, r5, r6, lr}
    1d08:	b	1120 <parse_resv>

00001d0c <remove_resv>:
    1d0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1d10:	subs	r6, r1, #0
    1d14:	ldr	r7, [pc, #1488]	; 22ec <remove_resv+0x5e0>
    1d18:	sub	sp, sp, #24
    1d1c:	add	r7, pc, r7
    1d20:	mov	r5, r0
    1d24:	mov	r9, r2
    1d28:	beq	1f08 <remove_resv+0x1fc>
    1d2c:	ldr	r3, [pc, #1468]	; 22f0 <remove_resv+0x5e4>
    1d30:	ldrb	r2, [r6]
    1d34:	ldr	r3, [r7, r3]
    1d38:	ldr	r3, [r3, r2, lsl #2]
    1d3c:	tst	r3, #512	; 0x200
    1d40:	beq	1f08 <remove_resv+0x1fc>
    1d44:	mov	r0, r6
    1d48:	bl	d9c <hash_find_resv@plt>
    1d4c:	subs	r4, r0, #0
    1d50:	bne	1dbc <remove_resv+0xb0>
    1d54:	cmp	r9, #0
    1d58:	beq	1da0 <remove_resv+0x94>
    1d5c:	ldr	r3, [pc, #1424]	; 22f4 <remove_resv+0x5e8>
    1d60:	ldr	r3, [r7, r3]
    1d64:	ldr	r3, [r3, #8]
    1d68:	cmp	r3, #0
    1d6c:	beq	1da0 <remove_resv+0x94>
    1d70:	ldr	r3, [pc, #1408]	; 22f8 <remove_resv+0x5ec>
    1d74:	ldr	r2, [pc, #1408]	; 22fc <remove_resv+0x5f0>
    1d78:	ldr	r1, [pc, #1408]	; 2300 <remove_resv+0x5f4>
    1d7c:	ldr	r3, [r7, r3]
    1d80:	add	r2, pc, r2
    1d84:	str	r2, [sp]
    1d88:	str	r6, [sp, #4]
    1d8c:	ldr	r3, [r3]
    1d90:	mov	r2, #512	; 0x200
    1d94:	add	r1, pc, r1
    1d98:	mov	r0, r5
    1d9c:	bl	cac <cluster_generic@plt>
    1da0:	ldr	r1, [pc, #1372]	; 2304 <remove_resv+0x5f8>
    1da4:	mov	r2, r6
    1da8:	add	r1, pc, r1
    1dac:	mov	r0, r5
    1db0:	add	sp, sp, #24
    1db4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1db8:	b	d54 <sendto_one_notice@plt>
    1dbc:	ldr	r3, [r4, #44]	; 0x2c
    1dc0:	cmp	r3, #0
    1dc4:	beq	1e10 <remove_resv+0x104>
    1dc8:	cmp	r9, #0
    1dcc:	bne	1de0 <remove_resv+0xd4>
    1dd0:	ldr	r1, [pc, #1328]	; 2308 <remove_resv+0x5fc>
    1dd4:	mov	r2, r6
    1dd8:	add	r1, pc, r1
    1ddc:	b	1dac <remove_resv+0xa0>
    1de0:	ldr	r3, [pc, #1316]	; 230c <remove_resv+0x600>
    1de4:	ldr	r3, [r7, r3]
    1de8:	ldr	r8, [r3]
    1dec:	cmp	r8, #0
    1df0:	bne	1dfc <remove_resv+0xf0>
    1df4:	add	sp, sp, #24
    1df8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1dfc:	ldr	r3, [r8]
    1e00:	cmp	r4, r3
    1e04:	beq	1fd0 <remove_resv+0x2c4>
    1e08:	ldr	r8, [r8, #8]
    1e0c:	b	1dec <remove_resv+0xe0>
    1e10:	cmp	r9, #0
    1e14:	beq	1e5c <remove_resv+0x150>
    1e18:	ldr	r3, [pc, #1236]	; 22f4 <remove_resv+0x5e8>
    1e1c:	ldr	r3, [r7, r3]
    1e20:	ldr	r3, [r3, #8]
    1e24:	cmp	r3, #0
    1e28:	beq	1e5c <remove_resv+0x150>
    1e2c:	ldr	r3, [pc, #1220]	; 22f8 <remove_resv+0x5ec>
    1e30:	ldr	r2, [pc, #1240]	; 2310 <remove_resv+0x604>
    1e34:	ldr	r1, [pc, #1240]	; 2314 <remove_resv+0x608>
    1e38:	ldr	r3, [r7, r3]
    1e3c:	add	r2, pc, r2
    1e40:	str	r2, [sp]
    1e44:	str	r6, [sp, #4]
    1e48:	mov	r2, #512	; 0x200
    1e4c:	ldr	r3, [r3]
    1e50:	add	r1, pc, r1
    1e54:	mov	r0, r5
    1e58:	bl	cac <cluster_generic@plt>
    1e5c:	ldr	r1, [pc, #1204]	; 2318 <remove_resv+0x60c>
    1e60:	mov	r2, r6
    1e64:	add	r1, pc, r1
    1e68:	mov	r0, r5
    1e6c:	bl	d54 <sendto_one_notice@plt>
    1e70:	mov	r0, r5
    1e74:	bl	c94 <get_oper_name@plt>
    1e78:	ldr	r1, [pc, #1180]	; 231c <remove_resv+0x610>
    1e7c:	mov	r3, r6
    1e80:	add	r1, pc, r1
    1e84:	mov	r2, r0
    1e88:	mov	r0, #7
    1e8c:	bl	d18 <ilog@plt>
    1e90:	ldr	r7, [r4, #36]	; 0x24
    1e94:	cmp	r7, #0
    1e98:	bne	1eec <remove_resv+0x1e0>
    1e9c:	mov	r2, r7
    1ea0:	ldr	r1, [r4, #16]
    1ea4:	mov	r0, #3
    1ea8:	bl	d60 <bandb_del@plt>
    1eac:	mov	r0, r5
    1eb0:	bl	c94 <get_oper_name@plt>
    1eb4:	ldr	r2, [pc, #1124]	; 2320 <remove_resv+0x614>
    1eb8:	str	r6, [sp]
    1ebc:	add	r2, pc, r2
    1ec0:	mov	r3, r0
    1ec4:	mov	r1, #0
    1ec8:	mov	r0, #256	; 0x100
    1ecc:	bl	c64 <sendto_realops_snomask@plt>
    1ed0:	mov	r1, r4
    1ed4:	mov	r0, r6
    1ed8:	bl	d30 <del_from_resv_hash@plt>
    1edc:	mov	r0, r4
    1ee0:	add	sp, sp, #24
    1ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1ee8:	b	cf4 <free_conf@plt>
    1eec:	mov	r0, r5
    1ef0:	bl	c94 <get_oper_name@plt>
    1ef4:	ldr	r2, [pc, #1064]	; 2324 <remove_resv+0x618>
    1ef8:	str	r6, [sp]
    1efc:	add	r2, pc, r2
    1f00:	mov	r3, r0
    1f04:	b	1ec4 <remove_resv+0x1b8>
    1f08:	ldr	r3, [pc, #1048]	; 2328 <remove_resv+0x61c>
    1f0c:	ldr	sl, [r7, r3]
    1f10:	ldr	r8, [sl]
    1f14:	cmp	r8, #0
    1f18:	bne	1f64 <remove_resv+0x258>
    1f1c:	cmp	r9, #0
    1f20:	beq	1da0 <remove_resv+0x94>
    1f24:	ldr	r3, [pc, #968]	; 22f4 <remove_resv+0x5e8>
    1f28:	ldr	r3, [r7, r3]
    1f2c:	ldr	r3, [r3, #8]
    1f30:	cmp	r3, #0
    1f34:	beq	1da0 <remove_resv+0x94>
    1f38:	ldr	r3, [pc, #952]	; 22f8 <remove_resv+0x5ec>
    1f3c:	ldr	r2, [pc, #1000]	; 232c <remove_resv+0x620>
    1f40:	ldr	r1, [pc, #1000]	; 2330 <remove_resv+0x624>
    1f44:	ldr	r3, [r7, r3]
    1f48:	add	r2, pc, r2
    1f4c:	str	r2, [sp]
    1f50:	str	r6, [sp, #4]
    1f54:	mov	r2, #512	; 0x200
    1f58:	ldr	r3, [r3]
    1f5c:	add	r1, pc, r1
    1f60:	b	1d98 <remove_resv+0x8c>
    1f64:	ldr	r4, [r8]
    1f68:	mov	r1, r6
    1f6c:	ldr	r0, [r4, #16]
    1f70:	bl	da8 <irccmp@plt>
    1f74:	cmp	r0, #0
    1f78:	beq	20e8 <remove_resv+0x3dc>
    1f7c:	ldr	r8, [r8, #8]
    1f80:	b	1f14 <remove_resv+0x208>
    1f84:	cmp	r9, #0
    1f88:	beq	1dd0 <remove_resv+0xc4>
    1f8c:	ldr	r3, [pc, #888]	; 230c <remove_resv+0x600>
    1f90:	ldr	r3, [r7, r3]
    1f94:	ldr	r8, [r3]
    1f98:	cmp	r8, #0
    1f9c:	beq	1df4 <remove_resv+0xe8>
    1fa0:	ldr	r3, [r8]
    1fa4:	cmp	r4, r3
    1fa8:	beq	21fc <remove_resv+0x4f0>
    1fac:	ldr	r8, [r8, #8]
    1fb0:	b	1f98 <remove_resv+0x28c>
    1fb4:	mov	r0, r5
    1fb8:	bl	c94 <get_oper_name@plt>
    1fbc:	ldr	r2, [pc, #880]	; 2334 <remove_resv+0x628>
    1fc0:	str	r6, [sp]
    1fc4:	add	r2, pc, r2
    1fc8:	mov	r3, r0
    1fcc:	b	21a8 <remove_resv+0x49c>
    1fd0:	ldr	r1, [pc, #864]	; 2338 <remove_resv+0x62c>
    1fd4:	mov	r2, r6
    1fd8:	add	r1, pc, r1
    1fdc:	mov	r0, r5
    1fe0:	bl	d54 <sendto_one_notice@plt>
    1fe4:	mov	r0, r5
    1fe8:	bl	c94 <get_oper_name@plt>
    1fec:	ldr	r2, [pc, #840]	; 233c <remove_resv+0x630>
    1ff0:	mov	r1, #0
    1ff4:	add	r2, pc, r2
    1ff8:	str	r6, [sp]
    1ffc:	mov	r3, r0
    2000:	mov	r0, #256	; 0x100
    2004:	bl	c64 <sendto_realops_snomask@plt>
    2008:	mov	r0, r5
    200c:	bl	c94 <get_oper_name@plt>
    2010:	ldr	r1, [pc, #808]	; 2340 <remove_resv+0x634>
    2014:	mov	r3, r6
    2018:	add	r1, pc, r1
    201c:	mov	r2, r0
    2020:	mov	r0, #7
    2024:	bl	d18 <ilog@plt>
    2028:	bl	bf8 <rb_current_time@plt>
    202c:	ldr	r3, [r4, #40]	; 0x28
    2030:	cmp	r0, r3
    2034:	mov	r6, r0
    2038:	strgt	r0, [r4, #40]	; 0x28
    203c:	addle	r3, r3, #1
    2040:	strle	r3, [r4, #40]	; 0x28
    2044:	ldr	r3, [r4, #40]	; 0x28
    2048:	ldr	r0, [r4, #12]
    204c:	str	r3, [r4, #36]	; 0x24
    2050:	bl	c58 <operhash_delete@plt>
    2054:	mov	r0, r5
    2058:	bl	c94 <get_oper_name@plt>
    205c:	bl	cb8 <operhash_add@plt>
    2060:	ldr	r3, [r4, #4]
    2064:	ldr	r1, [r4, #40]	; 0x28
    2068:	orr	r3, r3, #8912896	; 0x880000
    206c:	str	r3, [r4, #4]
    2070:	ldr	r3, [pc, #716]	; 2344 <remove_resv+0x638>
    2074:	add	r5, r5, #396	; 0x18c
    2078:	str	r0, [r4, #12]
    207c:	ldr	r2, [r7, r3]
    2080:	ldr	r3, [pc, #704]	; 2348 <remove_resv+0x63c>
    2084:	ldr	r0, [r2]
    2088:	ldr	r3, [r7, r3]
    208c:	ldr	r2, [r3]
    2090:	ldr	r3, [r4, #44]	; 0x2c
    2094:	str	r1, [sp, #12]
    2098:	sub	r3, r3, r1
    209c:	str	r3, [sp, #20]
    20a0:	mov	r3, #0
    20a4:	str	r3, [sp, #16]
    20a8:	ldr	r1, [r4, #16]
    20ac:	str	r5, [sp, #4]
    20b0:	str	r1, [sp, #8]
    20b4:	ldr	r1, [pc, #656]	; 234c <remove_resv+0x640>
    20b8:	add	r1, pc, r1
    20bc:	str	r1, [sp]
    20c0:	orr	r2, r0, r2
    20c4:	mov	r1, r3
    20c8:	mov	r0, r3
    20cc:	bl	cd0 <sendto_server@plt>
    20d0:	mov	r2, r6
    20d4:	mov	r1, r8
    20d8:	mov	r0, r4
    20dc:	add	sp, sp, #24
    20e0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    20e4:	b	c88 <deactivate_conf@plt>
    20e8:	ldr	r3, [r4, #44]	; 0x2c
    20ec:	cmp	r3, #0
    20f0:	bne	1f84 <remove_resv+0x278>
    20f4:	cmp	r9, #0
    20f8:	beq	2140 <remove_resv+0x434>
    20fc:	ldr	r3, [pc, #496]	; 22f4 <remove_resv+0x5e8>
    2100:	ldr	r3, [r7, r3]
    2104:	ldr	r3, [r3, #8]
    2108:	cmp	r3, #0
    210c:	beq	2140 <remove_resv+0x434>
    2110:	ldr	r3, [pc, #480]	; 22f8 <remove_resv+0x5ec>
    2114:	ldr	r2, [pc, #564]	; 2350 <remove_resv+0x644>
    2118:	ldr	r1, [pc, #564]	; 2354 <remove_resv+0x648>
    211c:	ldr	r3, [r7, r3]
    2120:	add	r2, pc, r2
    2124:	str	r2, [sp]
    2128:	str	r6, [sp, #4]
    212c:	mov	r2, #512	; 0x200
    2130:	ldr	r3, [r3]
    2134:	add	r1, pc, r1
    2138:	mov	r0, r5
    213c:	bl	cac <cluster_generic@plt>
    2140:	ldr	r1, [pc, #528]	; 2358 <remove_resv+0x64c>
    2144:	mov	r2, r6
    2148:	add	r1, pc, r1
    214c:	mov	r0, r5
    2150:	bl	d54 <sendto_one_notice@plt>
    2154:	mov	r0, r5
    2158:	bl	c94 <get_oper_name@plt>
    215c:	ldr	r1, [pc, #504]	; 235c <remove_resv+0x650>
    2160:	mov	r3, r6
    2164:	add	r1, pc, r1
    2168:	mov	r2, r0
    216c:	mov	r0, #7
    2170:	bl	d18 <ilog@plt>
    2174:	ldr	r7, [r4, #36]	; 0x24
    2178:	cmp	r7, #0
    217c:	bne	1fb4 <remove_resv+0x2a8>
    2180:	mov	r2, r7
    2184:	ldr	r1, [r4, #16]
    2188:	mov	r0, #3
    218c:	bl	d60 <bandb_del@plt>
    2190:	mov	r0, r5
    2194:	bl	c94 <get_oper_name@plt>
    2198:	ldr	r2, [pc, #448]	; 2360 <remove_resv+0x654>
    219c:	str	r6, [sp]
    21a0:	add	r2, pc, r2
    21a4:	mov	r3, r0
    21a8:	mov	r1, #0
    21ac:	mov	r0, #256	; 0x100
    21b0:	bl	c64 <sendto_realops_snomask@plt>
    21b4:	ldr	r3, [r8, #8]
    21b8:	ldr	r2, [r8, #4]
    21bc:	cmp	r3, #0
    21c0:	strne	r2, [r3, #4]
    21c4:	streq	r2, [sl, #4]
    21c8:	ldr	r2, [r8, #4]
    21cc:	mov	r0, r8
    21d0:	cmp	r2, #0
    21d4:	strne	r3, [r2, #8]
    21d8:	streq	r3, [sl]
    21dc:	mov	r3, #0
    21e0:	str	r3, [r8, #4]
    21e4:	str	r3, [r8, #8]
    21e8:	ldr	r3, [sl, #8]
    21ec:	sub	r3, r3, #1
    21f0:	str	r3, [sl, #8]
    21f4:	bl	ca0 <rb_free_rb_dlink_node@plt>
    21f8:	b	1edc <remove_resv+0x1d0>
    21fc:	ldr	r1, [pc, #352]	; 2364 <remove_resv+0x658>
    2200:	mov	r2, r6
    2204:	add	r1, pc, r1
    2208:	mov	r0, r5
    220c:	bl	d54 <sendto_one_notice@plt>
    2210:	mov	r0, r5
    2214:	bl	c94 <get_oper_name@plt>
    2218:	ldr	r2, [pc, #328]	; 2368 <remove_resv+0x65c>
    221c:	mov	r1, #0
    2220:	add	r2, pc, r2
    2224:	str	r6, [sp]
    2228:	mov	r3, r0
    222c:	mov	r0, #256	; 0x100
    2230:	bl	c64 <sendto_realops_snomask@plt>
    2234:	mov	r0, r5
    2238:	bl	c94 <get_oper_name@plt>
    223c:	ldr	r1, [pc, #296]	; 236c <remove_resv+0x660>
    2240:	mov	r3, r6
    2244:	add	r1, pc, r1
    2248:	mov	r2, r0
    224c:	mov	r0, #7
    2250:	bl	d18 <ilog@plt>
    2254:	bl	bf8 <rb_current_time@plt>
    2258:	ldr	r3, [r4, #40]	; 0x28
    225c:	cmp	r0, r3
    2260:	mov	r6, r0
    2264:	strgt	r0, [r4, #40]	; 0x28
    2268:	addle	r3, r3, #1
    226c:	strle	r3, [r4, #40]	; 0x28
    2270:	ldr	r3, [r4, #40]	; 0x28
    2274:	ldr	r0, [r4, #12]
    2278:	str	r3, [r4, #36]	; 0x24
    227c:	bl	c58 <operhash_delete@plt>
    2280:	mov	r0, r5
    2284:	bl	c94 <get_oper_name@plt>
    2288:	bl	cb8 <operhash_add@plt>
    228c:	ldr	r3, [r4, #4]
    2290:	ldr	r1, [r4, #40]	; 0x28
    2294:	orr	r3, r3, #8912896	; 0x880000
    2298:	str	r3, [r4, #4]
    229c:	ldr	r3, [pc, #160]	; 2344 <remove_resv+0x638>
    22a0:	add	r5, r5, #396	; 0x18c
    22a4:	str	r0, [r4, #12]
    22a8:	ldr	r2, [r7, r3]
    22ac:	ldr	r3, [pc, #148]	; 2348 <remove_resv+0x63c>
    22b0:	ldr	r0, [r2]
    22b4:	ldr	r3, [r7, r3]
    22b8:	ldr	r2, [r3]
    22bc:	ldr	r3, [r4, #44]	; 0x2c
    22c0:	str	r1, [sp, #12]
    22c4:	sub	r3, r3, r1
    22c8:	str	r3, [sp, #20]
    22cc:	mov	r3, #0
    22d0:	str	r3, [sp, #16]
    22d4:	ldr	r1, [r4, #16]
    22d8:	str	r5, [sp, #4]
    22dc:	str	r1, [sp, #8]
    22e0:	ldr	r1, [pc, #136]	; 2370 <remove_resv+0x664>
    22e4:	add	r1, pc, r1
    22e8:	b	20bc <remove_resv+0x3b0>
    22ec:	.word	0x000112dc
    22f0:	.word	0x000000d8
    22f4:	.word	0x000000d4
    22f8:	.word	0x000000c4
    22fc:	.word	0x00000bed
    2300:	.word	0x00000e1b
    2304:	.word	0x00000e0e
    2308:	.word	0x00000dee
    230c:	.word	0x000000c0
    2310:	.word	0x00000b31
    2314:	.word	0x00000d5f
    2318:	.word	0x00000db2
    231c:	.word	0x00000db0
    2320:	.word	0x00000d7d
    2324:	.word	0x00000d5f
    2328:	.word	0x000000bc
    232c:	.word	0x00000a25
    2330:	.word	0x00000c53
    2334:	.word	0x00000c97
    2338:	.word	0x00000c3e
    233c:	.word	0x00000c93
    2340:	.word	0x00000c18
    2344:	.word	0x000000c8
    2348:	.word	0x000000cc
    234c:	.word	0x00000b40
    2350:	.word	0x0000084d
    2354:	.word	0x00000a7b
    2358:	.word	0x00000ace
    235c:	.word	0x00000acc
    2360:	.word	0x00000a99
    2364:	.word	0x00000a12
    2368:	.word	0x00000a67
    236c:	.word	0x000009ec
    2370:	.word	0x00000914

00002374 <mo_unresv>:
    2374:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
    2378:	mov	r4, r2
    237c:	ldr	r2, [r2, #24]
    2380:	ldr	r6, [pc, #324]	; 24cc <mo_unresv+0x158>
    2384:	cmp	r2, #0
    2388:	add	r6, pc, r6
    238c:	ldr	r5, [sp, #32]
    2390:	bne	23c8 <mo_unresv+0x54>
    2394:	ldr	r3, [pc, #308]	; 24d0 <mo_unresv+0x15c>
    2398:	ldr	r1, [pc, #308]	; 24d4 <mo_unresv+0x160>
    239c:	ldr	r2, [r6, r3]
    23a0:	ldr	r3, [pc, #304]	; 24d8 <mo_unresv+0x164>
    23a4:	add	r2, r2, #88	; 0x58
    23a8:	add	r3, pc, r3
    23ac:	str	r3, [sp, #32]
    23b0:	add	r1, pc, r1
    23b4:	add	r3, r4, #88	; 0x58
    23b8:	mov	r0, r4
    23bc:	add	sp, sp, #8
    23c0:	pop	{r4, r5, r6, r7, r8, lr}
    23c4:	b	c28 <sendto_one@plt>
    23c8:	ldr	r0, [r2, #36]	; 0x24
    23cc:	cmp	r0, #0
    23d0:	beq	2394 <mo_unresv+0x20>
    23d4:	ldr	r1, [pc, #256]	; 24dc <mo_unresv+0x168>
    23d8:	mov	r7, r3
    23dc:	add	r1, pc, r1
    23e0:	bl	d90 <privilegeset_in_set@plt>
    23e4:	cmp	r0, #0
    23e8:	beq	2394 <mo_unresv+0x20>
    23ec:	cmp	r7, #4
    23f0:	beq	2410 <mo_unresv+0x9c>
    23f4:	mov	r7, #1
    23f8:	mov	r2, r7
    23fc:	ldr	r1, [r5, #4]
    2400:	mov	r0, r4
    2404:	add	sp, sp, #8
    2408:	pop	{r4, r5, r6, r7, r8, lr}
    240c:	b	1d0c <remove_resv>
    2410:	ldr	r1, [pc, #200]	; 24e0 <mo_unresv+0x16c>
    2414:	ldr	r0, [r5, #8]
    2418:	add	r1, pc, r1
    241c:	bl	da8 <irccmp@plt>
    2420:	subs	r7, r0, #0
    2424:	bne	23f4 <mo_unresv+0x80>
    2428:	ldr	r3, [r4, #24]
    242c:	ldr	r2, [pc, #156]	; 24d0 <mo_unresv+0x15c>
    2430:	cmp	r3, #0
    2434:	ldr	r8, [r6, r2]
    2438:	bne	245c <mo_unresv+0xe8>
    243c:	ldr	r3, [pc, #160]	; 24e4 <mo_unresv+0x170>
    2440:	ldr	r1, [pc, #160]	; 24e8 <mo_unresv+0x174>
    2444:	add	r3, pc, r3
    2448:	str	r3, [sp, #32]
    244c:	add	r2, r8, #88	; 0x58
    2450:	add	r3, r4, #88	; 0x58
    2454:	add	r1, pc, r1
    2458:	b	23b8 <mo_unresv+0x44>
    245c:	ldr	r0, [r3, #36]	; 0x24
    2460:	cmp	r0, #0
    2464:	beq	243c <mo_unresv+0xc8>
    2468:	ldr	r1, [pc, #124]	; 24ec <mo_unresv+0x178>
    246c:	add	r1, pc, r1
    2470:	bl	d90 <privilegeset_in_set@plt>
    2474:	cmp	r0, #0
    2478:	beq	243c <mo_unresv+0xc8>
    247c:	ldr	r3, [pc, #108]	; 24f0 <mo_unresv+0x17c>
    2480:	ldr	r2, [r5, #4]
    2484:	ldr	r1, [pc, #104]	; 24f4 <mo_unresv+0x180>
    2488:	ldr	r3, [r6, r3]
    248c:	str	r2, [sp, #4]
    2490:	ldr	r2, [pc, #96]	; 24f8 <mo_unresv+0x184>
    2494:	add	r1, pc, r1
    2498:	add	r2, pc, r2
    249c:	str	r2, [sp]
    24a0:	mov	r0, r4
    24a4:	ldr	r3, [r3]
    24a8:	ldr	r2, [r5, #12]
    24ac:	bl	bd4 <propagate_generic@plt>
    24b0:	add	r1, r8, #88	; 0x58
    24b4:	ldr	r0, [r5, #12]
    24b8:	bl	d24 <match@plt>
    24bc:	cmp	r0, #0
    24c0:	bne	23f8 <mo_unresv+0x84>
    24c4:	add	sp, sp, #8
    24c8:	pop	{r4, r5, r6, r7, r8, pc}
    24cc:	.word	0x00010c70
    24d0:	.word	0x000000e4
    24d4:	.word	0x0000075b
    24d8:	.word	0x00000708
    24dc:	.word	0x00000756
    24e0:	.word	0x00000724
    24e4:	.word	0x00000700
    24e8:	.word	0x000006b7
    24ec:	.word	0x000006d3
    24f0:	.word	0x000000c4
    24f4:	.word	0x0000071b
    24f8:	.word	0x000004d5

000024fc <handle_remote_unresv>:
    24fc:	ldr	r2, [r0, #32]
    2500:	push	{r4, r5, r6, lr}
    2504:	mov	r3, #512	; 0x200
    2508:	mov	r4, r0
    250c:	mov	r5, r1
    2510:	add	r2, r2, #88	; 0x58
    2514:	add	r1, r0, #163	; 0xa3
    2518:	add	r0, r0, #152	; 0x98
    251c:	bl	d84 <find_shared_conf@plt>
    2520:	cmp	r0, #0
    2524:	popeq	{r4, r5, r6, pc}
    2528:	mov	r1, r5
    252c:	mov	r0, r4
    2530:	mov	r2, #0
    2534:	pop	{r4, r5, r6, lr}
    2538:	b	1d0c <remove_resv>

0000253c <me_unresv>:
    253c:	ldrh	r1, [r2, #80]	; 0x50
    2540:	ldr	r3, [sp]
    2544:	cmp	r1, #64	; 0x40
    2548:	bxne	lr
    254c:	ldr	r1, [r2, #24]
    2550:	cmp	r1, #0
    2554:	bxeq	lr
    2558:	ldr	r1, [r3, #4]
    255c:	mov	r0, r2
    2560:	b	24fc <handle_remote_unresv>

00002564 <ms_unresv>:
    2564:	push	{r0, r1, r4, r5, r6, lr}
    2568:	mov	r4, r2
    256c:	ldr	r5, [sp, #24]
    2570:	ldr	r6, [pc, #132]	; 25fc <ms_unresv+0x98>
    2574:	ldr	r3, [pc, #132]	; 2600 <ms_unresv+0x9c>
    2578:	ldr	r2, [r5, #8]
    257c:	add	r6, pc, r6
    2580:	ldr	r1, [pc, #124]	; 2604 <ms_unresv+0xa0>
    2584:	ldr	r3, [r6, r3]
    2588:	str	r2, [sp, #4]
    258c:	ldr	r2, [pc, #116]	; 2608 <ms_unresv+0xa4>
    2590:	add	r1, pc, r1
    2594:	add	r2, pc, r2
    2598:	str	r2, [sp]
    259c:	mov	r0, r4
    25a0:	ldr	r3, [r3]
    25a4:	ldr	r2, [r5, #4]
    25a8:	bl	bd4 <propagate_generic@plt>
    25ac:	ldr	r3, [pc, #88]	; 260c <ms_unresv+0xa8>
    25b0:	ldr	r0, [r5, #4]
    25b4:	ldr	r1, [r6, r3]
    25b8:	add	r1, r1, #88	; 0x58
    25bc:	bl	d24 <match@plt>
    25c0:	cmp	r0, #0
    25c4:	beq	25f4 <ms_unresv+0x90>
    25c8:	ldrh	r3, [r4, #80]	; 0x50
    25cc:	cmp	r3, #64	; 0x40
    25d0:	bne	25f4 <ms_unresv+0x90>
    25d4:	ldr	r3, [r4, #24]
    25d8:	cmp	r3, #0
    25dc:	beq	25f4 <ms_unresv+0x90>
    25e0:	ldr	r1, [r5, #8]
    25e4:	mov	r0, r4
    25e8:	add	sp, sp, #8
    25ec:	pop	{r4, r5, r6, lr}
    25f0:	b	24fc <handle_remote_unresv>
    25f4:	add	sp, sp, #8
    25f8:	pop	{r4, r5, r6, pc}
    25fc:	.word	0x00010a7c
    2600:	.word	0x000000c4
    2604:	.word	0x0000061f
    2608:	.word	0x000003d9
    260c:	.word	0x000000e4

00002610 <__divsi3>:
    2610:	cmp	r1, #0
    2614:	beq	2820 <.divsi3_skip_div0_test+0x208>

00002618 <.divsi3_skip_div0_test>:
    2618:	eor	ip, r0, r1
    261c:	rsbmi	r1, r1, #0
    2620:	subs	r2, r1, #1
    2624:	beq	27ec <.divsi3_skip_div0_test+0x1d4>
    2628:	movs	r3, r0
    262c:	rsbmi	r3, r0, #0
    2630:	cmp	r3, r1
    2634:	bls	27f8 <.divsi3_skip_div0_test+0x1e0>
    2638:	tst	r1, r2
    263c:	beq	2808 <.divsi3_skip_div0_test+0x1f0>
    2640:	clz	r2, r3
    2644:	clz	r0, r1
    2648:	sub	r2, r0, r2
    264c:	rsbs	r2, r2, #31
    2650:	addne	r2, r2, r2, lsl #1
    2654:	mov	r0, #0
    2658:	addne	pc, pc, r2, lsl #2
    265c:	nop			; (mov r0, r0)
    2660:	cmp	r3, r1, lsl #31
    2664:	adc	r0, r0, r0
    2668:	subcs	r3, r3, r1, lsl #31
    266c:	cmp	r3, r1, lsl #30
    2670:	adc	r0, r0, r0
    2674:	subcs	r3, r3, r1, lsl #30
    2678:	cmp	r3, r1, lsl #29
    267c:	adc	r0, r0, r0
    2680:	subcs	r3, r3, r1, lsl #29
    2684:	cmp	r3, r1, lsl #28
    2688:	adc	r0, r0, r0
    268c:	subcs	r3, r3, r1, lsl #28
    2690:	cmp	r3, r1, lsl #27
    2694:	adc	r0, r0, r0
    2698:	subcs	r3, r3, r1, lsl #27
    269c:	cmp	r3, r1, lsl #26
    26a0:	adc	r0, r0, r0
    26a4:	subcs	r3, r3, r1, lsl #26
    26a8:	cmp	r3, r1, lsl #25
    26ac:	adc	r0, r0, r0
    26b0:	subcs	r3, r3, r1, lsl #25
    26b4:	cmp	r3, r1, lsl #24
    26b8:	adc	r0, r0, r0
    26bc:	subcs	r3, r3, r1, lsl #24
    26c0:	cmp	r3, r1, lsl #23
    26c4:	adc	r0, r0, r0
    26c8:	subcs	r3, r3, r1, lsl #23
    26cc:	cmp	r3, r1, lsl #22
    26d0:	adc	r0, r0, r0
    26d4:	subcs	r3, r3, r1, lsl #22
    26d8:	cmp	r3, r1, lsl #21
    26dc:	adc	r0, r0, r0
    26e0:	subcs	r3, r3, r1, lsl #21
    26e4:	cmp	r3, r1, lsl #20
    26e8:	adc	r0, r0, r0
    26ec:	subcs	r3, r3, r1, lsl #20
    26f0:	cmp	r3, r1, lsl #19
    26f4:	adc	r0, r0, r0
    26f8:	subcs	r3, r3, r1, lsl #19
    26fc:	cmp	r3, r1, lsl #18
    2700:	adc	r0, r0, r0
    2704:	subcs	r3, r3, r1, lsl #18
    2708:	cmp	r3, r1, lsl #17
    270c:	adc	r0, r0, r0
    2710:	subcs	r3, r3, r1, lsl #17
    2714:	cmp	r3, r1, lsl #16
    2718:	adc	r0, r0, r0
    271c:	subcs	r3, r3, r1, lsl #16
    2720:	cmp	r3, r1, lsl #15
    2724:	adc	r0, r0, r0
    2728:	subcs	r3, r3, r1, lsl #15
    272c:	cmp	r3, r1, lsl #14
    2730:	adc	r0, r0, r0
    2734:	subcs	r3, r3, r1, lsl #14
    2738:	cmp	r3, r1, lsl #13
    273c:	adc	r0, r0, r0
    2740:	subcs	r3, r3, r1, lsl #13
    2744:	cmp	r3, r1, lsl #12
    2748:	adc	r0, r0, r0
    274c:	subcs	r3, r3, r1, lsl #12
    2750:	cmp	r3, r1, lsl #11
    2754:	adc	r0, r0, r0
    2758:	subcs	r3, r3, r1, lsl #11
    275c:	cmp	r3, r1, lsl #10
    2760:	adc	r0, r0, r0
    2764:	subcs	r3, r3, r1, lsl #10
    2768:	cmp	r3, r1, lsl #9
    276c:	adc	r0, r0, r0
    2770:	subcs	r3, r3, r1, lsl #9
    2774:	cmp	r3, r1, lsl #8
    2778:	adc	r0, r0, r0
    277c:	subcs	r3, r3, r1, lsl #8
    2780:	cmp	r3, r1, lsl #7
    2784:	adc	r0, r0, r0
    2788:	subcs	r3, r3, r1, lsl #7
    278c:	cmp	r3, r1, lsl #6
    2790:	adc	r0, r0, r0
    2794:	subcs	r3, r3, r1, lsl #6
    2798:	cmp	r3, r1, lsl #5
    279c:	adc	r0, r0, r0
    27a0:	subcs	r3, r3, r1, lsl #5
    27a4:	cmp	r3, r1, lsl #4
    27a8:	adc	r0, r0, r0
    27ac:	subcs	r3, r3, r1, lsl #4
    27b0:	cmp	r3, r1, lsl #3
    27b4:	adc	r0, r0, r0
    27b8:	subcs	r3, r3, r1, lsl #3
    27bc:	cmp	r3, r1, lsl #2
    27c0:	adc	r0, r0, r0
    27c4:	subcs	r3, r3, r1, lsl #2
    27c8:	cmp	r3, r1, lsl #1
    27cc:	adc	r0, r0, r0
    27d0:	subcs	r3, r3, r1, lsl #1
    27d4:	cmp	r3, r1
    27d8:	adc	r0, r0, r0
    27dc:	subcs	r3, r3, r1
    27e0:	cmp	ip, #0
    27e4:	rsbmi	r0, r0, #0
    27e8:	bx	lr
    27ec:	teq	ip, r0
    27f0:	rsbmi	r0, r0, #0
    27f4:	bx	lr
    27f8:	movcc	r0, #0
    27fc:	asreq	r0, ip, #31
    2800:	orreq	r0, r0, #1
    2804:	bx	lr
    2808:	clz	r2, r1
    280c:	rsb	r2, r2, #31
    2810:	cmp	ip, #0
    2814:	lsr	r0, r3, r2
    2818:	rsbmi	r0, r0, #0
    281c:	bx	lr
    2820:	cmp	r0, #0
    2824:	mvngt	r0, #-2147483648	; 0x80000000
    2828:	movlt	r0, #-2147483648	; 0x80000000
    282c:	b	2850 <__aeabi_idiv0>

00002830 <__aeabi_idivmod>:
    2830:	cmp	r1, #0
    2834:	beq	2820 <.divsi3_skip_div0_test+0x208>
    2838:	push	{r0, r1, lr}
    283c:	bl	2618 <.divsi3_skip_div0_test>
    2840:	pop	{r1, r2, lr}
    2844:	mul	r3, r2, r0
    2848:	sub	r1, r1, r3
    284c:	bx	lr

00002850 <__aeabi_idiv0>:
    2850:	push	{r1, lr}
    2854:	mov	r0, #8
    2858:	bl	bec <raise@plt>
    285c:	pop	{r1, pc}

Disassembly of section .fini:

00002860 <_fini>:
    2860:	push	{r3, lr}
    2864:	pop	{r3, pc}
