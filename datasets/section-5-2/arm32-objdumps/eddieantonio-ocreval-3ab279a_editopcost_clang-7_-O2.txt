
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

00010778 <.init>:
   10778:	push	{r3, lr}
   1077c:	bl	108dc <abort@plt+0x48>
   10780:	pop	{r3, pc}

Disassembly of section .plt:

00010784 <calloc@plt-0x14>:
   10784:	push	{lr}		; (str lr, [sp, #-4]!)
   10788:	ldr	lr, [pc, #4]	; 10794 <calloc@plt-0x4>
   1078c:	add	lr, pc, lr
   10790:	ldr	pc, [lr, #8]!
   10794:	andeq	r1, r1, ip, ror #16

00010798 <calloc@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2156]!	; 0x86c

000107a4 <strcmp@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2148]!	; 0x864

000107b0 <printf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2140]!	; 0x85c

000107bc <fopen@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2132]!	; 0x854

000107c8 <free@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2124]!	; 0x84c

000107d4 <fgets@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2116]!	; 0x844

000107e0 <strdup@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2108]!	; 0x83c

000107ec <unlink@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2100]!	; 0x834

000107f8 <__xstat@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2092]!	; 0x82c

00010804 <fwrite@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2084]!	; 0x824

00010810 <__libc_start_main@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2076]!	; 0x81c

0001081c <__sysv_signal@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2068]!	; 0x814

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2060]!	; 0x80c

00010834 <getpid@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2052]!	; 0x804

00010840 <exit@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2044]!	; 0x7fc

0001084c <strlen@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2036]!	; 0x7f4

00010858 <fprintf@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2028]!	; 0x7ec

00010864 <__isoc99_sscanf@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2020]!	; 0x7e4

00010870 <fclose@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #69632	; 0x11000
   10878:	ldr	pc, [ip, #2012]!	; 0x7dc

0001087c <sprintf@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #69632	; 0x11000
   10884:	ldr	pc, [ip, #2004]!	; 0x7d4

00010888 <strncmp@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #69632	; 0x11000
   10890:	ldr	pc, [ip, #1996]!	; 0x7cc

00010894 <abort@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #69632	; 0x11000
   1089c:	ldr	pc, [ip, #1988]!	; 0x7c4

Disassembly of section .text:

000108a0 <error@@Base-0xb54>:
   108a0:	mov	fp, #0
   108a4:	mov	lr, #0
   108a8:	pop	{r1}		; (ldr r1, [sp], #4)
   108ac:	mov	r2, sp
   108b0:	push	{r2}		; (str r2, [sp, #-4]!)
   108b4:	push	{r0}		; (str r0, [sp, #-4]!)
   108b8:	ldr	ip, [pc, #16]	; 108d0 <abort@plt+0x3c>
   108bc:	push	{ip}		; (str ip, [sp, #-4]!)
   108c0:	ldr	r0, [pc, #12]	; 108d4 <abort@plt+0x40>
   108c4:	ldr	r3, [pc, #12]	; 108d8 <abort@plt+0x44>
   108c8:	bl	10810 <__libc_start_main@plt>
   108cc:	bl	10894 <abort@plt>
   108d0:	andeq	r1, r1, ip, ror r6
   108d4:	andeq	r0, r1, r4, asr sl
   108d8:	andeq	r1, r1, ip, lsl r6
   108dc:	ldr	r3, [pc, #20]	; 108f8 <abort@plt+0x64>
   108e0:	ldr	r2, [pc, #20]	; 108fc <abort@plt+0x68>
   108e4:	add	r3, pc, r3
   108e8:	ldr	r2, [r3, r2]
   108ec:	cmp	r2, #0
   108f0:	bxeq	lr
   108f4:	b	10828 <__gmon_start__@plt>
   108f8:	andeq	r1, r1, r4, lsl r7
   108fc:	andeq	r0, r0, r4, ror r0
   10900:	ldr	r0, [pc, #24]	; 10920 <abort@plt+0x8c>
   10904:	ldr	r3, [pc, #24]	; 10924 <abort@plt+0x90>
   10908:	cmp	r3, r0
   1090c:	bxeq	lr
   10910:	ldr	r3, [pc, #16]	; 10928 <abort@plt+0x94>
   10914:	cmp	r3, #0
   10918:	bxeq	lr
   1091c:	bx	r3
   10920:	andeq	r2, r2, r0, lsr #1
   10924:	andeq	r2, r2, r0, lsr #1
   10928:	andeq	r0, r0, r0
   1092c:	ldr	r0, [pc, #36]	; 10958 <abort@plt+0xc4>
   10930:	ldr	r1, [pc, #36]	; 1095c <abort@plt+0xc8>
   10934:	sub	r1, r1, r0
   10938:	asr	r1, r1, #2
   1093c:	add	r1, r1, r1, lsr #31
   10940:	asrs	r1, r1, #1
   10944:	bxeq	lr
   10948:	ldr	r3, [pc, #16]	; 10960 <abort@plt+0xcc>
   1094c:	cmp	r3, #0
   10950:	bxeq	lr
   10954:	bx	r3
   10958:	andeq	r2, r2, r0, lsr #1
   1095c:	andeq	r2, r2, r0, lsr #1
   10960:	andeq	r0, r0, r0
   10964:	push	{r4, lr}
   10968:	ldr	r4, [pc, #24]	; 10988 <abort@plt+0xf4>
   1096c:	ldrb	r3, [r4]
   10970:	cmp	r3, #0
   10974:	popne	{r4, pc}
   10978:	bl	10900 <abort@plt+0x6c>
   1097c:	mov	r3, #1
   10980:	strb	r3, [r4]
   10984:	pop	{r4, pc}
   10988:	andeq	r2, r2, r0, lsr #1
   1098c:	b	1092c <abort@plt+0x98>
   10990:	push	{r4, r5, fp, lr}
   10994:	add	fp, sp, #8
   10998:	ldr	r0, [pc, #80]	; 109f0 <abort@plt+0x15c>
   1099c:	ldr	r0, [pc, r0]
   109a0:	ldr	lr, [r0]
   109a4:	ldmib	r0, {r3, ip}
   109a8:	ldr	r1, [pc, #68]	; 109f4 <abort@plt+0x160>
   109ac:	ldr	r1, [pc, r1]
   109b0:	ldm	r1, {r2, r4, r5}
   109b4:	sub	r2, r2, lr
   109b8:	sub	r3, r4, r3
   109bc:	sub	r5, r5, ip
   109c0:	stm	r1, {r2, r3, r5}
   109c4:	mov	r2, #16
   109c8:	add	r3, r1, r2
   109cc:	add	r5, r0, r2
   109d0:	add	r2, r2, #16
   109d4:	vld1.32	{d16-d17}, [r5]
   109d8:	vld1.32	{d18-d19}, [r3]
   109dc:	cmp	r2, #416	; 0x1a0
   109e0:	vsub.i32	q8, q9, q8
   109e4:	vst1.32	{d16-d17}, [r3]
   109e8:	bne	109c8 <abort@plt+0x134>
   109ec:	pop	{r4, r5, fp, pc}
   109f0:	andeq	r1, r1, r0, asr #13
   109f4:	ldrdeq	r1, [r1], -r0
   109f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   109fc:	add	fp, sp, #24
   10a00:	ldr	r8, [pc, #68]	; 10a4c <abort@plt+0x1b8>
   10a04:	mov	r4, #0
   10a08:	ldr	r8, [pc, r8]
   10a0c:	ldr	r7, [r8]
   10a10:	ldr	r6, [r8, #8]
   10a14:	ldr	r5, [pc, #52]	; 10a50 <abort@plt+0x1bc>
   10a18:	add	r5, pc, r5
   10a1c:	mla	r2, r4, r6, r7
   10a20:	mov	r0, r5
   10a24:	mov	r1, r4
   10a28:	bl	107b0 <printf@plt>
   10a2c:	add	r0, r8, r4, lsl #2
   10a30:	ldr	r0, [r0, #12]
   10a34:	mla	r7, r0, r4, r7
   10a38:	add	r4, r4, #1
   10a3c:	sub	r6, r6, r0
   10a40:	cmp	r4, #101	; 0x65
   10a44:	bne	10a1c <abort@plt+0x188>
   10a48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10a4c:	andeq	r1, r1, r4, ror r6
   10a50:	andeq	r0, r0, ip, ror #24
   10a54:	push	{fp, lr}
   10a58:	mov	fp, sp
   10a5c:	sub	sp, sp, #8
   10a60:	str	r0, [sp, #4]
   10a64:	add	r0, sp, #4
   10a68:	mov	r3, #0
   10a6c:	mov	r5, r1
   10a70:	ldr	r2, [pc, #168]	; 10b20 <abort@plt+0x28c>
   10a74:	add	r2, pc, r2
   10a78:	bl	1116c <abort@plt+0x8d8>
   10a7c:	ldr	r0, [sp, #4]
   10a80:	sub	r0, r0, #1
   10a84:	cmp	r0, #2
   10a88:	bcs	10b14 <abort@plt+0x280>
   10a8c:	ldr	r1, [r5]
   10a90:	ldr	r4, [pc, #140]	; 10b24 <abort@plt+0x290>
   10a94:	ldr	r4, [pc, r4]
   10a98:	mov	r0, r4
   10a9c:	bl	10b30 <abort@plt+0x29c>
   10aa0:	ldr	r0, [sp, #4]
   10aa4:	cmp	r0, #2
   10aa8:	bne	10b0c <abort@plt+0x278>
   10aac:	ldr	r1, [r5, #4]
   10ab0:	ldr	r5, [pc, #112]	; 10b28 <abort@plt+0x294>
   10ab4:	ldr	r5, [pc, r5]
   10ab8:	mov	r0, r5
   10abc:	bl	10b30 <abort@plt+0x29c>
   10ac0:	ldm	r5, {ip, lr}
   10ac4:	ldr	r3, [r4]
   10ac8:	ldr	r2, [r5, #8]
   10acc:	ldmib	r4, {r0, r1}
   10ad0:	sub	r3, r3, ip
   10ad4:	sub	r0, r0, lr
   10ad8:	sub	r1, r1, r2
   10adc:	str	r3, [r4]
   10ae0:	stmib	r4, {r0, r1}
   10ae4:	mov	r0, #16
   10ae8:	add	r1, r4, r0
   10aec:	add	r2, r5, r0
   10af0:	add	r0, r0, #16
   10af4:	vld1.32	{d16-d17}, [r2]
   10af8:	vld1.32	{d18-d19}, [r1]
   10afc:	cmp	r0, #416	; 0x1a0
   10b00:	vsub.i32	q8, q9, q8
   10b04:	vst1.32	{d16-d17}, [r1]
   10b08:	bne	10ae8 <abort@plt+0x254>
   10b0c:	bl	109f8 <abort@plt+0x164>
   10b10:	bl	113b0 <abort@plt+0xb1c>
   10b14:	ldr	r0, [pc, #16]	; 10b2c <abort@plt+0x298>
   10b18:	add	r0, pc, r0
   10b1c:	bl	113f4 <error@@Base>
   10b20:	andeq	r0, r0, ip, lsl ip
   10b24:	andeq	r1, r1, r8, ror #11
   10b28:	andeq	r1, r1, r8, lsr #11
   10b2c:	muleq	r0, pc, fp	; <UNPREDICTABLE>
   10b30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10b34:	add	fp, sp, #24
   10b38:	sub	sp, sp, #16
   10b3c:	mov	r6, r1
   10b40:	ldr	r1, [pc, #624]	; 10db8 <abort@plt+0x524>
   10b44:	mov	r4, r0
   10b48:	mov	r0, r6
   10b4c:	add	r1, pc, r1
   10b50:	bl	10fd4 <abort@plt+0x740>
   10b54:	mov	r5, r0
   10b58:	ldr	r0, [pc, #604]	; 10dbc <abort@plt+0x528>
   10b5c:	mov	r1, #99	; 0x63
   10b60:	mov	r2, r5
   10b64:	add	r0, pc, r0
   10b68:	bl	107d4 <fgets@plt>
   10b6c:	cmp	r0, #0
   10b70:	beq	10d9c <abort@plt+0x508>
   10b74:	ldr	r0, [pc, #580]	; 10dc0 <abort@plt+0x52c>
   10b78:	ldr	r1, [pc, #580]	; 10dc4 <abort@plt+0x530>
   10b7c:	mov	r2, #42	; 0x2a
   10b80:	add	r0, pc, r0
   10b84:	add	r1, pc, r1
   10b88:	bl	10888 <strncmp@plt>
   10b8c:	cmp	r0, #0
   10b90:	bne	10d9c <abort@plt+0x508>
   10b94:	ldr	r0, [pc, #556]	; 10dc8 <abort@plt+0x534>
   10b98:	mov	r1, #99	; 0x63
   10b9c:	mov	r2, r5
   10ba0:	add	r0, pc, r0
   10ba4:	bl	107d4 <fgets@plt>
   10ba8:	cmp	r0, #0
   10bac:	beq	10d9c <abort@plt+0x508>
   10bb0:	ldr	r0, [pc, #532]	; 10dcc <abort@plt+0x538>
   10bb4:	ldr	r1, [pc, #532]	; 10dd0 <abort@plt+0x53c>
   10bb8:	add	r0, pc, r0
   10bbc:	add	r1, pc, r1
   10bc0:	bl	107a4 <strcmp@plt>
   10bc4:	cmp	r0, #0
   10bc8:	bne	10d9c <abort@plt+0x508>
   10bcc:	ldr	r0, [pc, #512]	; 10dd4 <abort@plt+0x540>
   10bd0:	mov	r1, #99	; 0x63
   10bd4:	mov	r2, r5
   10bd8:	add	r0, pc, r0
   10bdc:	bl	107d4 <fgets@plt>
   10be0:	cmp	r0, #0
   10be4:	beq	10d9c <abort@plt+0x508>
   10be8:	ldr	r0, [pc, #488]	; 10dd8 <abort@plt+0x544>
   10bec:	ldr	r1, [pc, #488]	; 10ddc <abort@plt+0x548>
   10bf0:	add	r2, sp, #8
   10bf4:	add	r0, pc, r0
   10bf8:	add	r1, pc, r1
   10bfc:	bl	10864 <__isoc99_sscanf@plt>
   10c00:	cmp	r0, #1
   10c04:	bne	10d9c <abort@plt+0x508>
   10c08:	ldr	r0, [r4]
   10c0c:	ldr	r1, [sp, #8]
   10c10:	mov	r2, r5
   10c14:	add	r0, r0, r1
   10c18:	mov	r1, #99	; 0x63
   10c1c:	str	r0, [r4]
   10c20:	ldr	r0, [pc, #440]	; 10de0 <abort@plt+0x54c>
   10c24:	add	r0, pc, r0
   10c28:	bl	107d4 <fgets@plt>
   10c2c:	cmp	r0, #0
   10c30:	beq	10d9c <abort@plt+0x508>
   10c34:	ldr	r0, [pc, #424]	; 10de4 <abort@plt+0x550>
   10c38:	ldr	r1, [pc, #424]	; 10de8 <abort@plt+0x554>
   10c3c:	add	r2, sp, #8
   10c40:	add	r0, pc, r0
   10c44:	add	r1, pc, r1
   10c48:	bl	10864 <__isoc99_sscanf@plt>
   10c4c:	cmp	r0, #1
   10c50:	bne	10d9c <abort@plt+0x508>
   10c54:	ldr	r0, [r4, #4]
   10c58:	ldr	r1, [sp, #8]
   10c5c:	mov	r2, r5
   10c60:	add	r0, r0, r1
   10c64:	mov	r1, #99	; 0x63
   10c68:	str	r0, [r4, #4]
   10c6c:	ldr	r0, [pc, #376]	; 10dec <abort@plt+0x558>
   10c70:	add	r0, pc, r0
   10c74:	bl	107d4 <fgets@plt>
   10c78:	cmp	r0, #0
   10c7c:	beq	10d9c <abort@plt+0x508>
   10c80:	ldr	r0, [pc, #360]	; 10df0 <abort@plt+0x55c>
   10c84:	ldr	r1, [pc, #360]	; 10df4 <abort@plt+0x560>
   10c88:	add	r2, sp, #12
   10c8c:	add	r0, pc, r0
   10c90:	add	r1, pc, r1
   10c94:	bl	10864 <__isoc99_sscanf@plt>
   10c98:	cmp	r0, #1
   10c9c:	bne	10d9c <abort@plt+0x508>
   10ca0:	ldr	r1, [sp, #12]
   10ca4:	ldr	r0, [r4, #8]
   10ca8:	add	r0, r0, r1
   10cac:	cmp	r1, #1
   10cb0:	str	r0, [r4, #8]
   10cb4:	blt	10d8c <abort@plt+0x4f8>
   10cb8:	ldr	r0, [pc, #312]	; 10df8 <abort@plt+0x564>
   10cbc:	mov	r1, #99	; 0x63
   10cc0:	mov	r2, r5
   10cc4:	add	r0, pc, r0
   10cc8:	bl	107d4 <fgets@plt>
   10ccc:	cmp	r0, #0
   10cd0:	beq	10d8c <abort@plt+0x4f8>
   10cd4:	ldr	r0, [pc, #288]	; 10dfc <abort@plt+0x568>
   10cd8:	mov	r1, #99	; 0x63
   10cdc:	mov	r2, r5
   10ce0:	add	r0, pc, r0
   10ce4:	bl	107d4 <fgets@plt>
   10ce8:	cmp	r0, #0
   10cec:	beq	10d8c <abort@plt+0x4f8>
   10cf0:	ldr	r0, [pc, #264]	; 10e00 <abort@plt+0x56c>
   10cf4:	mov	r1, #99	; 0x63
   10cf8:	mov	r2, r5
   10cfc:	add	r0, pc, r0
   10d00:	bl	107d4 <fgets@plt>
   10d04:	cmp	r0, #0
   10d08:	beq	10d8c <abort@plt+0x4f8>
   10d0c:	ldr	r0, [pc, #240]	; 10e04 <abort@plt+0x570>
   10d10:	mov	r1, #99	; 0x63
   10d14:	mov	r2, r5
   10d18:	add	r0, pc, r0
   10d1c:	bl	107d4 <fgets@plt>
   10d20:	cmp	r0, #0
   10d24:	beq	10d8c <abort@plt+0x4f8>
   10d28:	ldr	r6, [pc, #216]	; 10e08 <abort@plt+0x574>
   10d2c:	ldr	r8, [pc, #216]	; 10e0c <abort@plt+0x578>
   10d30:	add	r9, sp, #8
   10d34:	add	r7, sp, #4
   10d38:	add	r6, pc, r6
   10d3c:	add	r8, pc, r8
   10d40:	mov	r0, r6
   10d44:	mov	r1, r8
   10d48:	mov	r2, r9
   10d4c:	mov	r3, r7
   10d50:	bl	10864 <__isoc99_sscanf@plt>
   10d54:	cmp	r0, #2
   10d58:	bne	10d8c <abort@plt+0x4f8>
   10d5c:	ldr	r0, [sp, #4]
   10d60:	ldr	r2, [sp, #8]
   10d64:	add	r0, r4, r0, lsl #2
   10d68:	ldr	r1, [r0, #12]
   10d6c:	add	r1, r1, r2
   10d70:	mov	r2, r5
   10d74:	str	r1, [r0, #12]
   10d78:	mov	r0, r6
   10d7c:	mov	r1, #99	; 0x63
   10d80:	bl	107d4 <fgets@plt>
   10d84:	cmp	r0, #0
   10d88:	bne	10d40 <abort@plt+0x4ac>
   10d8c:	mov	r0, r5
   10d90:	bl	1105c <abort@plt+0x7c8>
   10d94:	sub	sp, fp, #24
   10d98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10d9c:	ldr	r1, [pc, #108]	; 10e10 <abort@plt+0x57c>
   10da0:	ldr	r0, [pc, #108]	; 10e14 <abort@plt+0x580>
   10da4:	cmp	r6, #0
   10da8:	add	r1, pc, r1
   10dac:	add	r0, pc, r0
   10db0:	movne	r1, r6
   10db4:	bl	11444 <error@@Base+0x50>
   10db8:	andeq	r0, r0, r3, lsl #23
   10dbc:	andeq	r1, r1, r5, lsr r5
   10dc0:	andeq	r1, r1, r9, lsl r5
   10dc4:	andeq	r0, r0, sp, asr #22
   10dc8:	strdeq	r1, [r1], -r9
   10dcc:	andeq	r1, r1, r1, ror #9
   10dd0:	andeq	r0, r0, r2, asr #22
   10dd4:	andeq	r1, r1, r1, asr #9
   10dd8:	andeq	r1, r1, r5, lsr #9
   10ddc:	andeq	r0, r0, fp, lsl #23
   10de0:	andeq	r1, r1, r5, ror r4
   10de4:	andeq	r1, r1, r9, asr r4
   10de8:	andeq	r0, r0, pc, lsr fp
   10dec:	andeq	r1, r1, r9, lsr #8
   10df0:	andeq	r1, r1, sp, lsl #8
   10df4:	strdeq	r0, [r0], -r3
   10df8:	ldrdeq	r1, [r1], -r5
   10dfc:			; <UNDEFINED> instruction: 0x000113b9
   10e00:	muleq	r1, sp, r3
   10e04:	andeq	r1, r1, r1, lsl #7
   10e08:	andeq	r1, r1, r1, ror #6
   10e0c:	andeq	r0, r0, r3, asr #20
   10e10:	muleq	r0, r5, r9
   10e14:	andeq	r0, r0, pc, ror r9
   10e18:	push	{r4, r5, r6, r7, fp, lr}
   10e1c:	add	fp, sp, #16
   10e20:	mov	r2, r1
   10e24:	ldr	r1, [pc, #224]	; 10f0c <abort@plt+0x678>
   10e28:	mov	r4, r0
   10e2c:	mov	r0, r2
   10e30:	add	r1, pc, r1
   10e34:	bl	10fd4 <abort@plt+0x740>
   10e38:	ldr	r1, [pc, #208]	; 10f10 <abort@plt+0x67c>
   10e3c:	ldr	r2, [pc, #208]	; 10f14 <abort@plt+0x680>
   10e40:	ldr	r3, [pc, #208]	; 10f18 <abort@plt+0x684>
   10e44:	mov	r5, r0
   10e48:	add	r1, pc, r1
   10e4c:	add	r2, pc, r2
   10e50:	add	r3, pc, r3
   10e54:	bl	10858 <fprintf@plt>
   10e58:	ldr	r2, [r4]
   10e5c:	ldr	r6, [pc, #184]	; 10f1c <abort@plt+0x688>
   10e60:	ldr	r3, [pc, #184]	; 10f20 <abort@plt+0x68c>
   10e64:	mov	r0, r5
   10e68:	add	r6, pc, r6
   10e6c:	add	r3, pc, r3
   10e70:	mov	r1, r6
   10e74:	bl	10858 <fprintf@plt>
   10e78:	ldr	r2, [r4, #4]
   10e7c:	ldr	r3, [pc, #160]	; 10f24 <abort@plt+0x690>
   10e80:	mov	r0, r5
   10e84:	mov	r1, r6
   10e88:	add	r3, pc, r3
   10e8c:	bl	10858 <fprintf@plt>
   10e90:	ldr	r2, [r4, #8]
   10e94:	ldr	r3, [pc, #140]	; 10f28 <abort@plt+0x694>
   10e98:	mov	r0, r5
   10e9c:	mov	r1, r6
   10ea0:	add	r3, pc, r3
   10ea4:	bl	10858 <fprintf@plt>
   10ea8:	ldr	r0, [r4, #8]
   10eac:	cmp	r0, #1
   10eb0:	blt	10f00 <abort@plt+0x66c>
   10eb4:	ldr	r0, [pc, #112]	; 10f2c <abort@plt+0x698>
   10eb8:	mov	r1, #25
   10ebc:	mov	r2, #1
   10ec0:	mov	r3, r5
   10ec4:	add	r0, pc, r0
   10ec8:	bl	10804 <fwrite@plt>
   10ecc:	ldr	r6, [pc, #92]	; 10f30 <abort@plt+0x69c>
   10ed0:	mov	r7, #4
   10ed4:	add	r6, pc, r6
   10ed8:	ldr	r2, [r4, r7, lsl #2]
   10edc:	cmp	r2, #1
   10ee0:	blt	10ef4 <abort@plt+0x660>
   10ee4:	sub	r3, r7, #3
   10ee8:	mov	r0, r5
   10eec:	mov	r1, r6
   10ef0:	bl	10858 <fprintf@plt>
   10ef4:	add	r7, r7, #1
   10ef8:	cmp	r7, #104	; 0x68
   10efc:	bne	10ed8 <abort@plt+0x644>
   10f00:	mov	r0, r5
   10f04:	pop	{r4, r5, r6, r7, fp, lr}
   10f08:	b	1105c <abort@plt+0x7c8>
   10f0c:	andeq	r0, r0, r3, lsl r9
   10f10:	strdeq	r0, [r0], -sp
   10f14:	andeq	r0, r0, r5, lsl #17
   10f18:	andeq	r0, r0, lr, lsr #17
   10f1c:	andeq	r0, r0, pc, lsl r9
   10f20:	ldrdeq	r0, [r0], -lr
   10f24:	andeq	r0, r0, sp, asr #17
   10f28:			; <UNDEFINED> instruction: 0x000008bf
   10f2c:	andeq	r0, r0, r1, lsr #17
   10f30:			; <UNDEFINED> instruction: 0x000008be
   10f34:	push	{fp, lr}
   10f38:	mov	fp, sp
   10f3c:	bl	10798 <calloc@plt>
   10f40:	cmp	r0, #0
   10f44:	popne	{fp, pc}
   10f48:	ldr	r0, [pc, #4]	; 10f54 <abort@plt+0x6c0>
   10f4c:	add	r0, pc, r0
   10f50:	bl	113f4 <error@@Base>
   10f54:	andeq	r0, r0, r1, asr r8
   10f58:	push	{r4, r5, r6, sl, fp, lr}
   10f5c:	add	fp, sp, #16
   10f60:	ldrb	r3, [r0]
   10f64:	ldrb	ip, [r1]
   10f68:	mov	r2, r0
   10f6c:	mov	r0, #0
   10f70:	cmp	r3, #0
   10f74:	beq	10fac <abort@plt+0x718>
   10f78:	add	r6, r2, #1
   10f7c:	add	lr, r1, #1
   10f80:	mov	r2, #0
   10f84:	uxtb	r4, ip
   10f88:	uxtb	r5, r3
   10f8c:	cmp	r5, r4
   10f90:	bne	10fbc <abort@plt+0x728>
   10f94:	ldrb	r3, [r6, r2]
   10f98:	ldrb	ip, [lr, r2]
   10f9c:	add	r2, r2, #1
   10fa0:	cmp	r3, #0
   10fa4:	bne	10f84 <abort@plt+0x6f0>
   10fa8:	b	10fb0 <abort@plt+0x71c>
   10fac:	mov	r2, #0
   10fb0:	cmp	ip, #0
   10fb4:	popeq	{r4, r5, r6, sl, fp, pc}
   10fb8:	mov	r3, #0
   10fbc:	ldrb	r1, [r1, r2]
   10fc0:	uxtb	r2, r3
   10fc4:	mov	r0, #1
   10fc8:	cmp	r2, r1
   10fcc:	mvncc	r0, #0
   10fd0:	pop	{r4, r5, r6, sl, fp, pc}
   10fd4:	push	{r4, r5, fp, lr}
   10fd8:	add	fp, sp, #8
   10fdc:	mov	r5, r1
   10fe0:	cmp	r0, #0
   10fe4:	beq	11018 <abort@plt+0x784>
   10fe8:	mov	r1, r5
   10fec:	mov	r4, r0
   10ff0:	bl	107bc <fopen@plt>
   10ff4:	cmp	r0, #0
   10ff8:	popne	{r4, r5, fp, pc}
   10ffc:	ldrb	r0, [r5]
   11000:	cmp	r0, #119	; 0x77
   11004:	bne	1103c <abort@plt+0x7a8>
   11008:	ldr	r0, [pc, #72]	; 11058 <abort@plt+0x7c4>
   1100c:	mov	r1, r4
   11010:	add	r0, pc, r0
   11014:	bl	11444 <error@@Base+0x50>
   11018:	ldrb	r0, [r5]
   1101c:	ldr	r1, [pc, #40]	; 1104c <abort@plt+0x7b8>
   11020:	ldr	r1, [pc, r1]
   11024:	ldr	r2, [pc, #36]	; 11050 <abort@plt+0x7bc>
   11028:	cmp	r0, #114	; 0x72
   1102c:	ldr	r2, [pc, r2]
   11030:	moveq	r2, r1
   11034:	ldr	r0, [r2]
   11038:	pop	{r4, r5, fp, pc}
   1103c:	ldr	r0, [pc, #16]	; 11054 <abort@plt+0x7c0>
   11040:	mov	r1, r4
   11044:	add	r0, pc, r0
   11048:	bl	11444 <error@@Base+0x50>
   1104c:	andeq	r1, r1, r8, asr r0
   11050:	andeq	r1, r1, r4, asr r0
   11054:	andeq	r0, r0, r9, lsl #15
   11058:	andeq	r0, r0, r7, lsr #15
   1105c:	ldr	r1, [pc, #32]	; 11084 <abort@plt+0x7f0>
   11060:	ldr	r1, [pc, r1]
   11064:	ldr	r1, [r1]
   11068:	cmp	r1, r0
   1106c:	ldrne	r1, [pc, #20]	; 11088 <abort@plt+0x7f4>
   11070:	ldrne	r1, [pc, r1]
   11074:	ldrne	r1, [r1]
   11078:	cmpne	r1, r0
   1107c:	bxeq	lr
   11080:	b	10870 <fclose@plt>
   11084:	andeq	r1, r1, r8, lsl r0
   11088:	andeq	r1, r1, r0, lsl r0
   1108c:	push	{fp, lr}
   11090:	mov	fp, sp
   11094:	sub	sp, sp, #88	; 0x58
   11098:	mov	r1, r0
   1109c:	mov	r2, sp
   110a0:	mov	r0, #3
   110a4:	bl	107f8 <__xstat@plt>
   110a8:	clz	r0, r0
   110ac:	lsr	r0, r0, #5
   110b0:	mov	sp, fp
   110b4:	pop	{fp, pc}
   110b8:	push	{r4, r5, fp, lr}
   110bc:	add	fp, sp, #8
   110c0:	sub	sp, sp, #104	; 0x68
   110c4:	ldr	r0, [pc, #92]	; 11128 <abort@plt+0x894>
   110c8:	add	r0, pc, r0
   110cc:	ldrh	r1, [r0]
   110d0:	add	r5, r1, #1
   110d4:	strh	r5, [r0]
   110d8:	ldr	r0, [pc, #76]	; 1112c <abort@plt+0x898>
   110dc:	ldr	r0, [pc, r0]
   110e0:	ldr	r4, [r0]
   110e4:	bl	10834 <getpid@plt>
   110e8:	mov	r3, r0
   110ec:	sxth	r0, r5
   110f0:	add	r5, sp, #4
   110f4:	mov	r2, r4
   110f8:	str	r0, [sp]
   110fc:	mov	r0, r5
   11100:	ldr	r1, [pc, #40]	; 11130 <abort@plt+0x89c>
   11104:	add	r1, pc, r1
   11108:	bl	1087c <sprintf@plt>
   1110c:	mov	r0, r5
   11110:	bl	107e0 <strdup@plt>
   11114:	mov	r4, r0
   11118:	bl	107ec <unlink@plt>
   1111c:	mov	r0, r4
   11120:	sub	sp, fp, #8
   11124:	pop	{r4, r5, fp, pc}
   11128:	andeq	r1, r1, r6, lsr r0
   1112c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11130:	strdeq	r0, [r0], -r2
   11134:	push	{r4, sl, fp, lr}
   11138:	add	fp, sp, #8
   1113c:	mov	r4, r0
   11140:	bl	1084c <strlen@plt>
   11144:	sub	r0, r0, #1
   11148:	sxth	r0, r0
   1114c:	cmp	r0, #0
   11150:	blt	11160 <abort@plt+0x8cc>
   11154:	ldrb	r1, [r4, r0]
   11158:	cmp	r1, #47	; 0x2f
   1115c:	bne	11144 <abort@plt+0x8b0>
   11160:	add	r0, r4, r0
   11164:	add	r0, r0, #1
   11168:	pop	{r4, sl, fp, pc}
   1116c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11170:	add	fp, sp, #28
   11174:	sub	sp, sp, #12
   11178:	str	r2, [sp]
   1117c:	stmib	sp, {r0, r1}
   11180:	mov	r6, r3
   11184:	ldr	r4, [r1]
   11188:	mov	r0, r4
   1118c:	bl	1084c <strlen@plt>
   11190:	sub	r0, r0, #1
   11194:	sxth	r0, r0
   11198:	cmp	r0, #0
   1119c:	blt	111ac <abort@plt+0x918>
   111a0:	ldrb	r1, [r4, r0]
   111a4:	cmp	r1, #47	; 0x2f
   111a8:	bne	11190 <abort@plt+0x8fc>
   111ac:	ldr	r1, [pc, #484]	; 11398 <abort@plt+0xb04>
   111b0:	add	r0, r4, r0
   111b4:	add	r0, r0, #1
   111b8:	ldr	r1, [pc, r1]
   111bc:	str	r0, [r1]
   111c0:	mov	r0, #2
   111c4:	ldr	r4, [pc, #464]	; 1139c <abort@plt+0xb08>
   111c8:	add	r4, pc, r4
   111cc:	mov	r1, r4
   111d0:	bl	1081c <__sysv_signal@plt>
   111d4:	mov	r0, #15
   111d8:	mov	r1, r4
   111dc:	bl	1081c <__sysv_signal@plt>
   111e0:	ldr	r0, [sp, #4]
   111e4:	ldr	r5, [r0]
   111e8:	cmp	r5, #1
   111ec:	bne	11204 <abort@plt+0x970>
   111f0:	ldr	r0, [pc, #424]	; 113a0 <abort@plt+0xb0c>
   111f4:	ldr	r0, [pc, r0]
   111f8:	ldrb	r0, [r0]
   111fc:	cmp	r0, #0
   11200:	bne	11380 <abort@plt+0xaec>
   11204:	ldr	ip, [sp, #8]
   11208:	mov	r8, #0
   1120c:	cmp	r5, #2
   11210:	blt	1135c <abort@plt+0xac8>
   11214:	mov	r8, #0
   11218:	mov	r7, #1
   1121c:	mov	r9, #1
   11220:	ldr	r4, [ip, r7, lsl #2]
   11224:	ldrb	r0, [r4]
   11228:	cmp	r0, #45	; 0x2d
   1122c:	bne	11304 <abort@plt+0xa70>
   11230:	ldrb	sl, [r4, #1]
   11234:	cmp	sl, #0
   11238:	beq	11304 <abort@plt+0xa70>
   1123c:	mov	r0, r4
   11240:	bl	1084c <strlen@plt>
   11244:	mov	r2, r0
   11248:	ldr	r0, [pc, #340]	; 113a4 <abort@plt+0xb10>
   1124c:	mov	r1, r4
   11250:	add	r0, pc, r0
   11254:	bl	10888 <strncmp@plt>
   11258:	cmp	r0, #0
   1125c:	beq	11380 <abort@plt+0xaec>
   11260:	ldr	ip, [sp, #8]
   11264:	add	r1, r7, #1
   11268:	mov	r0, #0
   1126c:	cmp	r1, r5
   11270:	ldrlt	r0, [ip, r1, lsl #2]
   11274:	cmp	r6, #0
   11278:	ldrbne	r2, [r6]
   1127c:	cmpne	r2, #0
   11280:	beq	11370 <abort@plt+0xadc>
   11284:	mov	r1, #0
   11288:	cmp	sl, r2
   1128c:	beq	112b4 <abort@plt+0xa20>
   11290:	mov	r2, #1
   11294:	sxth	r1, r2
   11298:	add	r3, r1, r1, lsl #1
   1129c:	ldrb	r3, [r6, r3, lsl #2]
   112a0:	cmp	r3, #0
   112a4:	beq	11370 <abort@plt+0xadc>
   112a8:	add	r2, r2, #1
   112ac:	cmp	sl, r3
   112b0:	bne	11294 <abort@plt+0xa00>
   112b4:	add	r1, r1, r1, lsl #1
   112b8:	add	r3, r6, r1, lsl #2
   112bc:	ldr	r1, [r3, #4]
   112c0:	cmp	r1, #0
   112c4:	beq	11324 <abort@plt+0xa90>
   112c8:	mov	r2, r4
   112cc:	cmp	r0, #0
   112d0:	ldrb	r7, [r2, #2]!
   112d4:	cmpeq	r7, #0
   112d8:	beq	11324 <abort@plt+0xa90>
   112dc:	ldr	r3, [r1]
   112e0:	cmp	r3, #0
   112e4:	bne	11388 <abort@plt+0xaf4>
   112e8:	cmp	r7, #0
   112ec:	movne	r0, r2
   112f0:	str	r0, [r1]
   112f4:	ldrb	r0, [r2]
   112f8:	cmp	r0, #0
   112fc:	addeq	r9, r9, #1
   11300:	b	11310 <abort@plt+0xa7c>
   11304:	sxth	r0, r8
   11308:	add	r8, r8, #1
   1130c:	str	r4, [ip, r0, lsl #2]
   11310:	add	r9, r9, #1
   11314:	sxth	r7, r9
   11318:	cmp	r5, r7
   1131c:	bgt	11220 <abort@plt+0x98c>
   11320:	b	1135c <abort@plt+0xac8>
   11324:	ldr	r0, [r3, #8]
   11328:	cmp	r0, #0
   1132c:	beq	11370 <abort@plt+0xadc>
   11330:	ldrb	r1, [r4, #2]
   11334:	cmp	r1, #0
   11338:	bne	11370 <abort@plt+0xadc>
   1133c:	ldrb	r1, [r0]
   11340:	cmp	r1, #0
   11344:	bne	11388 <abort@plt+0xaf4>
   11348:	mov	r1, #1
   1134c:	strb	r1, [r0]
   11350:	ldr	r0, [sp, #4]
   11354:	ldr	r5, [r0]
   11358:	b	11310 <abort@plt+0xa7c>
   1135c:	ldr	r1, [sp, #4]
   11360:	sxth	r0, r8
   11364:	str	r0, [r1]
   11368:	sub	sp, fp, #28
   1136c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11370:	ldr	r0, [pc, #52]	; 113ac <abort@plt+0xb18>
   11374:	mov	r1, r4
   11378:	add	r0, pc, r0
   1137c:	bl	11444 <error@@Base+0x50>
   11380:	ldr	r0, [sp]
   11384:	bl	11520 <error@@Base+0x12c>
   11388:	ldr	r0, [pc, #24]	; 113a8 <abort@plt+0xb14>
   1138c:	mov	r1, r4
   11390:	add	r0, pc, r0
   11394:	bl	11444 <error@@Base+0x50>
   11398:			; <UNDEFINED> instruction: 0x00010eb8
   1139c:	andeq	r0, r0, r8, lsl r3
   113a0:	andeq	r0, r1, ip, ror #28
   113a4:	andeq	r0, r0, r3, asr #11
   113a8:	andeq	r0, r0, r7, lsr #9
   113ac:			; <UNDEFINED> instruction: 0x000004b0
   113b0:	push	{fp, lr}
   113b4:	mov	fp, sp
   113b8:	mov	r0, #0
   113bc:	bl	113c0 <abort@plt+0xb2c>
   113c0:	push	{fp, lr}
   113c4:	mov	fp, sp
   113c8:	mov	r4, r0
   113cc:	ldr	r0, [pc, #28]	; 113f0 <abort@plt+0xb5c>
   113d0:	ldr	r0, [pc, r0]
   113d4:	ldr	r0, [r0]
   113d8:	cmp	r0, #0
   113dc:	beq	113e4 <abort@plt+0xb50>
   113e0:	blx	r0
   113e4:	bl	11580 <error@@Base+0x18c>
   113e8:	mov	r0, r4
   113ec:	bl	10840 <exit@plt>
   113f0:	andeq	r0, r1, r4, lsr #25

000113f4 <error@@Base>:
   113f4:	push	{fp, lr}
   113f8:	mov	fp, sp
   113fc:	mov	r3, r0
   11400:	ldr	r0, [pc, #44]	; 11434 <error@@Base+0x40>
   11404:	ldr	r0, [pc, r0]
   11408:	ldr	r2, [r0]
   1140c:	ldr	r0, [pc, #36]	; 11438 <error@@Base+0x44>
   11410:	ldr	r0, [pc, r0]
   11414:	ldr	r0, [r0]
   11418:	ldr	r1, [pc, #28]	; 1143c <error@@Base+0x48>
   1141c:	add	r1, pc, r1
   11420:	bl	10858 <fprintf@plt>
   11424:	ldr	r0, [pc, #20]	; 11440 <error@@Base+0x4c>
   11428:	ldr	r0, [pc, r0]
   1142c:	ldr	r0, [r0]
   11430:	bl	113c0 <abort@plt+0xb2c>
   11434:	andeq	r0, r1, ip, ror #24
   11438:	andeq	r0, r1, r8, asr ip
   1143c:	andeq	r0, r0, r5, asr #7
   11440:	andeq	r0, r1, ip, asr ip
   11444:	push	{fp, lr}
   11448:	mov	fp, sp
   1144c:	sub	sp, sp, #8
   11450:	mov	r3, r0
   11454:	ldr	r0, [pc, #48]	; 1148c <error@@Base+0x98>
   11458:	ldr	r0, [pc, r0]
   1145c:	ldr	r2, [r0]
   11460:	ldr	r0, [pc, #40]	; 11490 <error@@Base+0x9c>
   11464:	ldr	r0, [pc, r0]
   11468:	str	r1, [sp]
   1146c:	ldr	r0, [r0]
   11470:	ldr	r1, [pc, #28]	; 11494 <error@@Base+0xa0>
   11474:	add	r1, pc, r1
   11478:	bl	10858 <fprintf@plt>
   1147c:	ldr	r0, [pc, #20]	; 11498 <error@@Base+0xa4>
   11480:	ldr	r0, [pc, r0]
   11484:	ldr	r0, [r0]
   11488:	bl	113c0 <abort@plt+0xb2c>
   1148c:	andeq	r0, r1, r8, lsl ip
   11490:	andeq	r0, r1, r4, lsl #24
   11494:	andeq	r0, r0, r5, ror r3
   11498:	andeq	r0, r1, r4, lsl #24
   1149c:	push	{fp, lr}
   114a0:	mov	fp, sp
   114a4:	sub	sp, sp, #8
   114a8:	mov	r3, r0
   114ac:	ldr	r0, [pc, #40]	; 114dc <error@@Base+0xe8>
   114b0:	ldr	r0, [pc, r0]
   114b4:	ldr	r2, [r0]
   114b8:	ldr	r0, [pc, #32]	; 114e0 <error@@Base+0xec>
   114bc:	ldr	r0, [pc, r0]
   114c0:	str	r1, [sp]
   114c4:	ldr	r0, [r0]
   114c8:	ldr	r1, [pc, #20]	; 114e4 <error@@Base+0xf0>
   114cc:	add	r1, pc, r1
   114d0:	bl	10858 <fprintf@plt>
   114d4:	mov	sp, fp
   114d8:	pop	{fp, pc}
   114dc:	andeq	r0, r1, r0, asr #23
   114e0:	andeq	r0, r1, ip, lsr #23
   114e4:	andeq	r0, r0, sp, lsl r3
   114e8:	ldr	r0, [pc, #40]	; 11518 <error@@Base+0x124>
   114ec:	add	r0, pc, r0
   114f0:	ldrb	r1, [r0]
   114f4:	cmp	r1, #1
   114f8:	bxeq	lr
   114fc:	push	{fp, lr}
   11500:	mov	fp, sp
   11504:	mov	r1, #1
   11508:	strb	r1, [r0]
   1150c:	ldr	r0, [pc, #8]	; 1151c <error@@Base+0x128>
   11510:	add	r0, pc, r0
   11514:	bl	113f4 <error@@Base>
   11518:	andeq	r0, r1, r4, lsl ip
   1151c:	strdeq	r0, [r0], -r4
   11520:	push	{fp, lr}
   11524:	mov	fp, sp
   11528:	mov	r3, r0
   1152c:	ldr	r0, [pc, #60]	; 11570 <error@@Base+0x17c>
   11530:	ldr	r0, [pc, r0]
   11534:	ldr	r0, [r0]
   11538:	cmp	r0, #0
   1153c:	bne	11568 <error@@Base+0x174>
   11540:	ldr	r0, [pc, #44]	; 11574 <error@@Base+0x180>
   11544:	ldr	r0, [pc, r0]
   11548:	ldr	r2, [r0]
   1154c:	ldr	r0, [pc, #36]	; 11578 <error@@Base+0x184>
   11550:	ldr	r0, [pc, r0]
   11554:	ldr	r0, [r0]
   11558:	ldr	r1, [pc, #28]	; 1157c <error@@Base+0x188>
   1155c:	add	r1, pc, r1
   11560:	bl	10858 <fprintf@plt>
   11564:	bl	113b0 <abort@plt+0xb1c>
   11568:	blx	r0
   1156c:	bl	113b0 <abort@plt+0xb1c>
   11570:	andeq	r0, r1, r4, lsr fp
   11574:	andeq	r0, r1, ip, lsr #22
   11578:	andeq	r0, r1, r8, lsl fp
   1157c:			; <UNDEFINED> instruction: 0x000002bd
   11580:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11584:	add	fp, sp, #24
   11588:	sub	sp, sp, #104	; 0x68
   1158c:	ldr	r8, [pc, #124]	; 11610 <error@@Base+0x21c>
   11590:	add	r8, pc, r8
   11594:	ldrsh	r0, [r8]
   11598:	cmp	r0, #1
   1159c:	blt	11608 <error@@Base+0x214>
   115a0:	ldr	r9, [pc, #108]	; 11614 <error@@Base+0x220>
   115a4:	mov	r7, #1
   115a8:	add	r4, sp, #4
   115ac:	ldr	r9, [pc, r9]
   115b0:	ldr	r5, [pc, #96]	; 11618 <error@@Base+0x224>
   115b4:	add	r5, pc, r5
   115b8:	ldr	r6, [r9]
   115bc:	bl	10834 <getpid@plt>
   115c0:	mov	r3, r0
   115c4:	sxth	r0, r7
   115c8:	mov	r1, r5
   115cc:	mov	r2, r6
   115d0:	str	r0, [sp]
   115d4:	mov	r0, r4
   115d8:	bl	1087c <sprintf@plt>
   115dc:	mov	r0, r4
   115e0:	bl	107e0 <strdup@plt>
   115e4:	mov	r6, r0
   115e8:	bl	107ec <unlink@plt>
   115ec:	mov	r0, r6
   115f0:	bl	107c8 <free@plt>
   115f4:	add	r0, r7, #1
   115f8:	sxth	r7, r0
   115fc:	ldrsh	r0, [r8]
   11600:	cmp	r7, r0
   11604:	ble	115b8 <error@@Base+0x1c4>
   11608:	sub	sp, fp, #24
   1160c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11610:	andeq	r0, r1, lr, ror #22
   11614:	andeq	r0, r1, r4, asr #21
   11618:	andeq	r0, r0, r2, asr #4
   1161c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11620:	mov	r7, r0
   11624:	ldr	r6, [pc, #72]	; 11674 <error@@Base+0x280>
   11628:	ldr	r5, [pc, #72]	; 11678 <error@@Base+0x284>
   1162c:	add	r6, pc, r6
   11630:	add	r5, pc, r5
   11634:	sub	r6, r6, r5
   11638:	mov	r8, r1
   1163c:	mov	r9, r2
   11640:	bl	10778 <calloc@plt-0x20>
   11644:	asrs	r6, r6, #2
   11648:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1164c:	mov	r4, #0
   11650:	add	r4, r4, #1
   11654:	ldr	r3, [r5], #4
   11658:	mov	r2, r9
   1165c:	mov	r1, r8
   11660:	mov	r0, r7
   11664:	blx	r3
   11668:	cmp	r6, r4
   1166c:	bne	11650 <error@@Base+0x25c>
   11670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11674:	andeq	r0, r1, r8, asr #17
   11678:	andeq	r0, r1, r0, asr #17
   1167c:	bx	lr

Disassembly of section .fini:

00011680 <.fini>:
   11680:	push	{r3, lr}
   11684:	pop	{r3, pc}
