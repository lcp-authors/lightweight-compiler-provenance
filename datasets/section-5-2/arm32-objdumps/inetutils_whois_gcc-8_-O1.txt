
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

00011074 <.init>:
   11074:	push	{r3, lr}
   11078:	bl	113d0 <__assert_fail@plt+0x48>
   1107c:	pop	{r3, pc}

Disassembly of section .plt:

00011080 <fdopen@plt-0x14>:
   11080:	push	{lr}		; (str lr, [sp, #-4]!)
   11084:	ldr	lr, [pc, #4]	; 11090 <fdopen@plt-0x4>
   11088:	add	lr, pc, lr
   1108c:	ldr	pc, [lr, #8]!
   11090:	andeq	fp, r1, r0, ror pc

00011094 <fdopen@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #110592	; 0x1b000
   1109c:	ldr	pc, [ip, #3952]!	; 0xf70

000110a0 <calloc@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #110592	; 0x1b000
   110a8:	ldr	pc, [ip, #3944]!	; 0xf68

000110ac <fputs_unlocked@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #110592	; 0x1b000
   110b4:	ldr	pc, [ip, #3936]!	; 0xf60

000110b8 <inet_aton@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #110592	; 0x1b000
   110c0:	ldr	pc, [ip, #3928]!	; 0xf58

000110c4 <strcmp@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #110592	; 0x1b000
   110cc:	ldr	pc, [ip, #3920]!	; 0xf50

000110d0 <strtol@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #110592	; 0x1b000
   110d8:	ldr	pc, [ip, #3912]!	; 0xf48

000110dc <printf@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #110592	; 0x1b000
   110e4:	ldr	pc, [ip, #3904]!	; 0xf40

000110e8 <memmove@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #110592	; 0x1b000
   110f0:	ldr	pc, [ip, #3896]!	; 0xf38

000110f4 <strchrnul@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #110592	; 0x1b000
   110fc:	ldr	pc, [ip, #3888]!	; 0xf30

00011100 <free@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #110592	; 0x1b000
   11108:	ldr	pc, [ip, #3880]!	; 0xf28

0001110c <gai_strerror@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #110592	; 0x1b000
   11114:	ldr	pc, [ip, #3872]!	; 0xf20

00011118 <fgets@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #110592	; 0x1b000
   11120:	ldr	pc, [ip, #3864]!	; 0xf18

00011124 <ferror@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #110592	; 0x1b000
   1112c:	ldr	pc, [ip, #3856]!	; 0xf10

00011130 <strndup@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #110592	; 0x1b000
   11138:	ldr	pc, [ip, #3848]!	; 0xf08

0001113c <memcpy@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #110592	; 0x1b000
   11144:	ldr	pc, [ip, #3840]!	; 0xf00

00011148 <signal@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #110592	; 0x1b000
   11150:	ldr	pc, [ip, #3832]!	; 0xef8

00011154 <fwrite_unlocked@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #110592	; 0x1b000
   1115c:	ldr	pc, [ip, #3824]!	; 0xef0

00011160 <sleep@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #110592	; 0x1b000
   11168:	ldr	pc, [ip, #3816]!	; 0xee8

0001116c <realloc@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #110592	; 0x1b000
   11174:	ldr	pc, [ip, #3808]!	; 0xee0

00011178 <strcasecmp@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #110592	; 0x1b000
   11180:	ldr	pc, [ip, #3800]!	; 0xed8

00011184 <funlockfile@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #110592	; 0x1b000
   1118c:	ldr	pc, [ip, #3792]!	; 0xed0

00011190 <fwrite@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #110592	; 0x1b000
   11198:	ldr	pc, [ip, #3784]!	; 0xec8

0001119c <strcat@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #110592	; 0x1b000
   111a4:	ldr	pc, [ip, #3776]!	; 0xec0

000111a8 <strcpy@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #110592	; 0x1b000
   111b0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111b4 <error@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #110592	; 0x1b000
   111bc:	ldr	pc, [ip, #3760]!	; 0xeb0

000111c0 <getenv@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #110592	; 0x1b000
   111c8:	ldr	pc, [ip, #3752]!	; 0xea8

000111cc <puts@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #110592	; 0x1b000
   111d4:	ldr	pc, [ip, #3744]!	; 0xea0

000111d8 <malloc@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #110592	; 0x1b000
   111e0:	ldr	pc, [ip, #3736]!	; 0xe98

000111e4 <__libc_start_main@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #110592	; 0x1b000
   111ec:	ldr	pc, [ip, #3728]!	; 0xe90

000111f0 <strerror@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #110592	; 0x1b000
   111f8:	ldr	pc, [ip, #3720]!	; 0xe88

000111fc <__ctype_tolower_loc@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #110592	; 0x1b000
   11204:	ldr	pc, [ip, #3712]!	; 0xe80

00011208 <__gmon_start__@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #110592	; 0x1b000
   11210:	ldr	pc, [ip, #3704]!	; 0xe78

00011214 <mempcpy@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #110592	; 0x1b000
   1121c:	ldr	pc, [ip, #3696]!	; 0xe70

00011220 <__ctype_b_loc@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #110592	; 0x1b000
   11228:	ldr	pc, [ip, #3688]!	; 0xe68

0001122c <exit@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #110592	; 0x1b000
   11234:	ldr	pc, [ip, #3680]!	; 0xe60

00011238 <strlen@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #110592	; 0x1b000
   11240:	ldr	pc, [ip, #3672]!	; 0xe58

00011244 <strchr@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #110592	; 0x1b000
   1124c:	ldr	pc, [ip, #3664]!	; 0xe50

00011250 <fprintf@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #110592	; 0x1b000
   11258:	ldr	pc, [ip, #3656]!	; 0xe48

0001125c <__errno_location@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #110592	; 0x1b000
   11264:	ldr	pc, [ip, #3648]!	; 0xe40

00011268 <strncasecmp@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #110592	; 0x1b000
   11270:	ldr	pc, [ip, #3640]!	; 0xe38

00011274 <strerror_r@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #110592	; 0x1b000
   1127c:	ldr	pc, [ip, #3632]!	; 0xe30

00011280 <memset@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #110592	; 0x1b000
   11288:	ldr	pc, [ip, #3624]!	; 0xe28

0001128c <write@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #110592	; 0x1b000
   11294:	ldr	pc, [ip, #3616]!	; 0xe20

00011298 <memchr@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #110592	; 0x1b000
   112a0:	ldr	pc, [ip, #3608]!	; 0xe18

000112a4 <__overflow@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #110592	; 0x1b000
   112ac:	ldr	pc, [ip, #3600]!	; 0xe10

000112b0 <strrchr@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #110592	; 0x1b000
   112b8:	ldr	pc, [ip, #3592]!	; 0xe08

000112bc <vfprintf@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #110592	; 0x1b000
   112c4:	ldr	pc, [ip, #3584]!	; 0xe00

000112c8 <fputc@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #110592	; 0x1b000
   112d0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112d4 <sscanf@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #110592	; 0x1b000
   112dc:	ldr	pc, [ip, #3568]!	; 0xdf0

000112e0 <sprintf@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #110592	; 0x1b000
   112e8:	ldr	pc, [ip, #3560]!	; 0xde8

000112ec <flockfile@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #110592	; 0x1b000
   112f4:	ldr	pc, [ip, #3552]!	; 0xde0

000112f8 <vsnprintf@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #110592	; 0x1b000
   11300:	ldr	pc, [ip, #3544]!	; 0xdd8

00011304 <qsort@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #110592	; 0x1b000
   1130c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011310 <strpbrk@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #110592	; 0x1b000
   11318:	ldr	pc, [ip, #3528]!	; 0xdc8

0001131c <freeaddrinfo@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #110592	; 0x1b000
   11324:	ldr	pc, [ip, #3520]!	; 0xdc0

00011328 <getaddrinfo@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #110592	; 0x1b000
   11330:	ldr	pc, [ip, #3512]!	; 0xdb8

00011334 <socket@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #110592	; 0x1b000
   1133c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011340 <gethostbyname@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #110592	; 0x1b000
   11348:	ldr	pc, [ip, #3496]!	; 0xda8

0001134c <fputs@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #110592	; 0x1b000
   11354:	ldr	pc, [ip, #3488]!	; 0xda0

00011358 <strncmp@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #110592	; 0x1b000
   11360:	ldr	pc, [ip, #3480]!	; 0xd98

00011364 <abort@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #110592	; 0x1b000
   1136c:	ldr	pc, [ip, #3472]!	; 0xd90

00011370 <close@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #110592	; 0x1b000
   11378:	ldr	pc, [ip, #3464]!	; 0xd88

0001137c <connect@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #110592	; 0x1b000
   11384:	ldr	pc, [ip, #3456]!	; 0xd80

00011388 <__assert_fail@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #110592	; 0x1b000
   11390:	ldr	pc, [ip, #3448]!	; 0xd78

Disassembly of section .text:

00011394 <argp_parse@@Base-0x2040>:
   11394:	mov	fp, #0
   11398:	mov	lr, #0
   1139c:	pop	{r1}		; (ldr r1, [sp], #4)
   113a0:	mov	r2, sp
   113a4:	push	{r2}		; (str r2, [sp, #-4]!)
   113a8:	push	{r0}		; (str r0, [sp, #-4]!)
   113ac:	ldr	ip, [pc, #16]	; 113c4 <__assert_fail@plt+0x3c>
   113b0:	push	{ip}		; (str ip, [sp, #-4]!)
   113b4:	ldr	r0, [pc, #12]	; 113c8 <__assert_fail@plt+0x40>
   113b8:	ldr	r3, [pc, #12]	; 113cc <__assert_fail@plt+0x44>
   113bc:	bl	111e4 <__libc_start_main@plt>
   113c0:	bl	11364 <abort@plt>
   113c4:	andeq	r9, r1, ip, lsr #19
   113c8:	ldrdeq	r2, [r1], -r4
   113cc:	andeq	r9, r1, ip, asr #18
   113d0:	ldr	r3, [pc, #20]	; 113ec <__assert_fail@plt+0x64>
   113d4:	ldr	r2, [pc, #20]	; 113f0 <__assert_fail@plt+0x68>
   113d8:	add	r3, pc, r3
   113dc:	ldr	r2, [r3, r2]
   113e0:	cmp	r2, #0
   113e4:	bxeq	lr
   113e8:	b	11208 <__gmon_start__@plt>
   113ec:	andeq	fp, r1, r0, lsr #24
   113f0:	andeq	r0, r0, ip, lsl #2
   113f4:	ldr	r0, [pc, #24]	; 11414 <__assert_fail@plt+0x8c>
   113f8:	ldr	r3, [pc, #24]	; 11418 <__assert_fail@plt+0x90>
   113fc:	cmp	r3, r0
   11400:	bxeq	lr
   11404:	ldr	r3, [pc, #16]	; 1141c <__assert_fail@plt+0x94>
   11408:	cmp	r3, #0
   1140c:	bxeq	lr
   11410:	bx	r3
   11414:	andeq	r0, r3, ip, lsr #17
   11418:	andeq	r0, r3, ip, lsr #17
   1141c:	andeq	r0, r0, r0
   11420:	ldr	r0, [pc, #36]	; 1144c <__assert_fail@plt+0xc4>
   11424:	ldr	r1, [pc, #36]	; 11450 <__assert_fail@plt+0xc8>
   11428:	sub	r1, r1, r0
   1142c:	asr	r1, r1, #2
   11430:	add	r1, r1, r1, lsr #31
   11434:	asrs	r1, r1, #1
   11438:	bxeq	lr
   1143c:	ldr	r3, [pc, #16]	; 11454 <__assert_fail@plt+0xcc>
   11440:	cmp	r3, #0
   11444:	bxeq	lr
   11448:	bx	r3
   1144c:	andeq	r0, r3, ip, lsr #17
   11450:	andeq	r0, r3, ip, lsr #17
   11454:	andeq	r0, r0, r0
   11458:	push	{r4, lr}
   1145c:	ldr	r4, [pc, #24]	; 1147c <__assert_fail@plt+0xf4>
   11460:	ldrb	r3, [r4]
   11464:	cmp	r3, #0
   11468:	popne	{r4, pc}
   1146c:	bl	113f4 <__assert_fail@plt+0x6c>
   11470:	mov	r3, #1
   11474:	strb	r3, [r4]
   11478:	pop	{r4, pc}
   1147c:	andeq	r0, r3, r0, asr #17
   11480:	b	11420 <__assert_fail@plt+0x98>
   11484:	sub	r3, r0, #1
   11488:	cmp	r3, #126	; 0x7e
   1148c:	bls	11498 <__assert_fail@plt+0x110>
   11490:	mov	r0, #7
   11494:	bx	lr
   11498:	strd	r4, [sp, #-16]!
   1149c:	str	r6, [sp, #8]
   114a0:	str	lr, [sp, #12]
   114a4:	bic	r3, r0, #2
   114a8:	cmp	r0, #113	; 0x71
   114ac:	cmpne	r3, #116	; 0x74
   114b0:	bne	114c4 <__assert_fail@plt+0x13c>
   114b4:	movw	r3, #2244	; 0x8c4
   114b8:	movt	r3, #3
   114bc:	mov	r2, #1
   114c0:	str	r2, [r3]
   114c4:	mov	r5, r1
   114c8:	mov	r4, r0
   114cc:	movw	r3, #2316	; 0x90c
   114d0:	movt	r3, #3
   114d4:	ldr	r2, [r3, #16]
   114d8:	ldr	r3, [r3, #12]
   114dc:	cmp	r2, r3
   114e0:	beq	115c0 <__assert_fail@plt+0x238>
   114e4:	movw	r3, #2316	; 0x90c
   114e8:	movt	r3, #3
   114ec:	ldr	r2, [r3, #12]
   114f0:	add	r1, r2, #1
   114f4:	str	r1, [r3, #12]
   114f8:	mov	r1, #45	; 0x2d
   114fc:	strb	r1, [r2]
   11500:	ldr	r2, [r3, #16]
   11504:	ldr	r3, [r3, #12]
   11508:	cmp	r2, r3
   1150c:	beq	115d4 <__assert_fail@plt+0x24c>
   11510:	movw	r3, #2316	; 0x90c
   11514:	movt	r3, #3
   11518:	ldr	r2, [r3, #12]
   1151c:	add	r1, r2, #1
   11520:	str	r1, [r3, #12]
   11524:	strb	r4, [r2]
   11528:	cmp	r5, #0
   1152c:	moveq	r0, #0
   11530:	beq	115b0 <__assert_fail@plt+0x228>
   11534:	movw	r3, #2316	; 0x90c
   11538:	movt	r3, #3
   1153c:	ldr	r2, [r3, #16]
   11540:	ldr	r3, [r3, #12]
   11544:	cmp	r2, r3
   11548:	beq	115e8 <__assert_fail@plt+0x260>
   1154c:	movw	r4, #2316	; 0x90c
   11550:	movt	r4, #3
   11554:	ldr	r3, [r4, #12]
   11558:	add	r2, r3, #1
   1155c:	str	r2, [r4, #12]
   11560:	mov	r2, #32
   11564:	strb	r2, [r3]
   11568:	mov	r0, r5
   1156c:	bl	11238 <strlen@plt>
   11570:	mov	r6, r0
   11574:	ldr	r3, [r4, #16]
   11578:	ldr	r2, [r4, #12]
   1157c:	sub	r3, r3, r2
   11580:	cmp	r0, r3
   11584:	bhi	115fc <__assert_fail@plt+0x274>
   11588:	movw	r4, #2316	; 0x90c
   1158c:	movt	r4, #3
   11590:	mov	r2, r6
   11594:	mov	r1, r5
   11598:	ldr	r0, [r4, #12]
   1159c:	bl	1113c <memcpy@plt>
   115a0:	ldr	r3, [r4, #12]
   115a4:	add	r6, r3, r6
   115a8:	str	r6, [r4, #12]
   115ac:	mov	r0, #0
   115b0:	ldrd	r4, [sp]
   115b4:	ldr	r6, [sp, #8]
   115b8:	add	sp, sp, #12
   115bc:	pop	{pc}		; (ldr pc, [sp], #4)
   115c0:	mov	r1, #1
   115c4:	movw	r0, #2316	; 0x90c
   115c8:	movt	r0, #3
   115cc:	bl	14380 <_obstack_newchunk@@Base>
   115d0:	b	114e4 <__assert_fail@plt+0x15c>
   115d4:	mov	r1, #1
   115d8:	movw	r0, #2316	; 0x90c
   115dc:	movt	r0, #3
   115e0:	bl	14380 <_obstack_newchunk@@Base>
   115e4:	b	11510 <__assert_fail@plt+0x188>
   115e8:	mov	r1, #1
   115ec:	movw	r0, #2316	; 0x90c
   115f0:	movt	r0, #3
   115f4:	bl	14380 <_obstack_newchunk@@Base>
   115f8:	b	1154c <__assert_fail@plt+0x1c4>
   115fc:	mov	r1, r0
   11600:	mov	r0, r4
   11604:	bl	14380 <_obstack_newchunk@@Base>
   11608:	b	11588 <__assert_fail@plt+0x200>
   1160c:	strd	r4, [sp, #-16]!
   11610:	str	r6, [sp, #8]
   11614:	str	lr, [sp, #12]
   11618:	mov	r6, r1
   1161c:	sub	r0, r0, #72	; 0x48
   11620:	cmp	r0, #40	; 0x28
   11624:	ldrls	pc, [pc, r0, lsl #2]
   11628:	b	1179c <__assert_fail@plt+0x414>
   1162c:	andeq	r1, r1, ip, asr r7
   11630:	muleq	r1, ip, r7
   11634:	muleq	r1, ip, r7
   11638:	muleq	r1, ip, r7
   1163c:	muleq	r1, ip, r7
   11640:	muleq	r1, ip, r7
   11644:	muleq	r1, ip, r7
   11648:	muleq	r1, ip, r7
   1164c:	muleq	r1, ip, r7
   11650:	muleq	r1, ip, r7
   11654:	muleq	r1, ip, r7
   11658:	muleq	r1, ip, r7
   1165c:	muleq	r1, ip, r7
   11660:	muleq	r1, ip, r7
   11664:	andeq	r1, r1, r4, lsl #15
   11668:	muleq	r1, ip, r7
   1166c:	muleq	r1, ip, r7
   11670:	muleq	r1, ip, r7
   11674:	muleq	r1, ip, r7
   11678:	muleq	r1, ip, r7
   1167c:	muleq	r1, ip, r7
   11680:	muleq	r1, ip, r7
   11684:	muleq	r1, ip, r7
   11688:	muleq	r1, ip, r7
   1168c:	muleq	r1, ip, r7
   11690:	muleq	r1, ip, r7
   11694:	muleq	r1, ip, r7
   11698:	muleq	r1, ip, r7
   1169c:	muleq	r1, ip, r7
   116a0:	muleq	r1, ip, r7
   116a4:	muleq	r1, ip, r7
   116a8:	muleq	r1, ip, r7
   116ac:	ldrdeq	r1, [r1], -r0
   116b0:	muleq	r1, ip, r7
   116b4:	muleq	r1, ip, r7
   116b8:	muleq	r1, ip, r7
   116bc:	muleq	r1, ip, r7
   116c0:	muleq	r1, ip, r7
   116c4:	muleq	r1, ip, r7
   116c8:	muleq	r1, ip, r7
   116cc:	andeq	r1, r1, r0, ror r7
   116d0:	mov	r0, r1
   116d4:	bl	11238 <strlen@plt>
   116d8:	add	r0, r0, #1
   116dc:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   116e0:	mov	r5, r0
   116e4:	movw	r3, #2244	; 0x8c4
   116e8:	movt	r3, #3
   116ec:	str	r0, [r3, #4]
   116f0:	ldrb	r4, [r6]
   116f4:	cmp	r4, #0
   116f8:	cmpne	r4, #58	; 0x3a
   116fc:	beq	11728 <__assert_fail@plt+0x3a0>
   11700:	bl	111fc <__ctype_tolower_loc@plt>
   11704:	ldr	r1, [r0]
   11708:	add	r3, r6, #1
   1170c:	mov	r6, r3
   11710:	ldr	r2, [r1, r4, lsl #2]
   11714:	strb	r2, [r5], #1
   11718:	ldrb	r4, [r3], #1
   1171c:	cmp	r4, #0
   11720:	cmpne	r4, #58	; 0x3a
   11724:	bne	1170c <__assert_fail@plt+0x384>
   11728:	cmp	r4, #58	; 0x3a
   1172c:	beq	11748 <__assert_fail@plt+0x3c0>
   11730:	mov	r0, #0
   11734:	strb	r0, [r5]
   11738:	ldrd	r4, [sp]
   1173c:	ldr	r6, [sp, #8]
   11740:	add	sp, sp, #12
   11744:	pop	{pc}		; (ldr pc, [sp], #4)
   11748:	movw	r3, #2244	; 0x8c4
   1174c:	movt	r3, #3
   11750:	add	r6, r6, #1
   11754:	str	r6, [r3, #8]
   11758:	b	11730 <__assert_fail@plt+0x3a8>
   1175c:	movw	r3, #53528	; 0xd118
   11760:	movt	r3, #2
   11764:	mov	r0, #0
   11768:	str	r0, [r3]
   1176c:	b	11738 <__assert_fail@plt+0x3b0>
   11770:	movw	r3, #2244	; 0x8c4
   11774:	movt	r3, #3
   11778:	str	r1, [r3, #8]
   1177c:	mov	r0, #0
   11780:	b	11738 <__assert_fail@plt+0x3b0>
   11784:	movw	r3, #2244	; 0x8c4
   11788:	movt	r3, #3
   1178c:	mov	r2, #1
   11790:	str	r2, [r3, #12]
   11794:	mov	r0, #0
   11798:	b	11738 <__assert_fail@plt+0x3b0>
   1179c:	mov	r0, #7
   117a0:	b	11738 <__assert_fail@plt+0x3b0>
   117a4:	strd	r4, [sp, #-16]!
   117a8:	str	r6, [sp, #8]
   117ac:	str	lr, [sp, #12]
   117b0:	mov	r5, r0
   117b4:	mov	r4, r1
   117b8:	movw	r3, #5071	; 0x13cf
   117bc:	movt	r3, #6
   117c0:	cmp	r0, r3
   117c4:	bgt	117dc <__assert_fail@plt+0x454>
   117c8:	ldr	r0, [r4, #4]
   117cc:	cmp	r0, #0
   117d0:	beq	11830 <__assert_fail@plt+0x4a8>
   117d4:	add	r1, r4, #8
   117d8:	b	117fc <__assert_fail@plt+0x474>
   117dc:	movw	r0, #39372	; 0x99cc
   117e0:	movt	r0, #1
   117e4:	bl	111cc <puts@plt>
   117e8:	b	117c8 <__assert_fail@plt+0x440>
   117ec:	add	r1, r1, #8
   117f0:	ldr	r0, [r1, #-4]
   117f4:	cmp	r0, #0
   117f8:	beq	11818 <__assert_fail@plt+0x490>
   117fc:	ldrh	r3, [r1, #-8]
   11800:	cmp	r3, r5
   11804:	bgt	117ec <__assert_fail@plt+0x464>
   11808:	ldrh	r3, [r1, #-6]
   1180c:	cmp	r3, r5
   11810:	blt	117ec <__assert_fail@plt+0x464>
   11814:	b	11820 <__assert_fail@plt+0x498>
   11818:	movw	r0, #39356	; 0x99bc
   1181c:	movt	r0, #1
   11820:	ldrd	r4, [sp]
   11824:	ldr	r6, [sp, #8]
   11828:	add	sp, sp, #12
   1182c:	pop	{pc}		; (ldr pc, [sp], #4)
   11830:	movw	r0, #39356	; 0x99bc
   11834:	movt	r0, #1
   11838:	b	11820 <__assert_fail@plt+0x498>
   1183c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11840:	strd	r6, [sp, #8]
   11844:	str	lr, [sp, #16]
   11848:	sub	sp, sp, #12
   1184c:	mov	r5, r0
   11850:	mov	r6, r1
   11854:	add	r1, sp, #4
   11858:	mov	r0, r6
   1185c:	bl	110b8 <inet_aton@plt>
   11860:	mov	r7, r0
   11864:	ldr	r4, [r5]
   11868:	cmp	r4, #0
   1186c:	bne	11884 <__assert_fail@plt+0x4fc>
   11870:	mov	r0, #0
   11874:	b	118ec <__assert_fail@plt+0x564>
   11878:	ldr	r4, [r5, #4]!
   1187c:	cmp	r4, #0
   11880:	beq	11900 <__assert_fail@plt+0x578>
   11884:	mov	r1, r6
   11888:	mov	r0, r4
   1188c:	bl	110c4 <strcmp@plt>
   11890:	cmp	r0, #0
   11894:	beq	11908 <__assert_fail@plt+0x580>
   11898:	cmp	r7, #0
   1189c:	beq	11878 <__assert_fail@plt+0x4f0>
   118a0:	mov	r0, r4
   118a4:	bl	11340 <gethostbyname@plt>
   118a8:	cmp	r0, #0
   118ac:	beq	11878 <__assert_fail@plt+0x4f0>
   118b0:	ldr	r2, [r0, #16]
   118b4:	ldr	r3, [r2]
   118b8:	cmp	r3, #0
   118bc:	beq	11878 <__assert_fail@plt+0x4f0>
   118c0:	ldr	r1, [sp, #4]
   118c4:	ldr	r3, [r3]
   118c8:	cmp	r3, r1
   118cc:	beq	11910 <__assert_fail@plt+0x588>
   118d0:	ldr	r3, [r2, #4]!
   118d4:	cmp	r3, #0
   118d8:	beq	11878 <__assert_fail@plt+0x4f0>
   118dc:	ldr	r3, [r3]
   118e0:	cmp	r3, r1
   118e4:	bne	118d0 <__assert_fail@plt+0x548>
   118e8:	mov	r0, #1
   118ec:	add	sp, sp, #12
   118f0:	ldrd	r4, [sp]
   118f4:	ldrd	r6, [sp, #8]
   118f8:	add	sp, sp, #16
   118fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11900:	mov	r0, #0
   11904:	b	118ec <__assert_fail@plt+0x564>
   11908:	mov	r0, #1
   1190c:	b	118ec <__assert_fail@plt+0x564>
   11910:	mov	r0, #1
   11914:	b	118ec <__assert_fail@plt+0x564>
   11918:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1191c:	strd	r6, [sp, #8]
   11920:	str	r8, [sp, #16]
   11924:	str	lr, [sp, #20]
   11928:	mov	r5, r0
   1192c:	mov	r7, r1
   11930:	mov	r6, r2
   11934:	mov	r0, r1
   11938:	bl	11238 <strlen@plt>
   1193c:	mov	r4, r0
   11940:	mov	r0, r6
   11944:	bl	11238 <strlen@plt>
   11948:	add	r0, r4, r0
   1194c:	add	r0, r0, #13
   11950:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   11954:	mov	r4, r0
   11958:	mov	r3, #0
   1195c:	strb	r3, [r0]
   11960:	mov	r1, r5
   11964:	ldr	r0, [pc, #544]	; 11b8c <__assert_fail@plt+0x804>
   11968:	bl	1183c <__assert_fail@plt+0x4b4>
   1196c:	cmp	r0, #0
   11970:	bne	11988 <__assert_fail@plt+0x600>
   11974:	mov	r1, r5
   11978:	ldr	r0, [pc, #528]	; 11b90 <__assert_fail@plt+0x808>
   1197c:	bl	1183c <__assert_fail@plt+0x4b4>
   11980:	cmp	r0, #0
   11984:	beq	11a54 <__assert_fail@plt+0x6cc>
   11988:	mov	r0, r4
   1198c:	bl	11238 <strlen@plt>
   11990:	add	r2, r4, r0
   11994:	movw	r3, #39420	; 0x99fc
   11998:	movt	r3, #1
   1199c:	ldr	ip, [r3]
   119a0:	ldr	r1, [r3, #4]
   119a4:	str	ip, [r4, r0]
   119a8:	str	r1, [r2, #4]
   119ac:	ldrb	r3, [r3, #8]
   119b0:	strb	r3, [r2, #8]
   119b4:	ldrb	r3, [r7]
   119b8:	cmp	r3, #0
   119bc:	bne	119f4 <__assert_fail@plt+0x66c>
   119c0:	mov	r1, r6
   119c4:	mov	r0, r4
   119c8:	bl	1119c <strcat@plt>
   119cc:	mov	r0, r4
   119d0:	ldrd	r4, [sp]
   119d4:	ldrd	r6, [sp, #8]
   119d8:	ldr	r8, [sp, #16]
   119dc:	add	sp, sp, #20
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)
   119e4:	movw	r0, #39452	; 0x9a1c
   119e8:	movt	r0, #1
   119ec:	bl	111cc <puts@plt>
   119f0:	b	11a8c <__assert_fail@plt+0x704>
   119f4:	mov	r8, #1
   119f8:	b	11a78 <__assert_fail@plt+0x6f0>
   119fc:	add	r2, r6, #2
   11a00:	movw	r1, #39528	; 0x9a68
   11a04:	movt	r1, #1
   11a08:	mov	r0, r4
   11a0c:	bl	112e0 <sprintf@plt>
   11a10:	b	119cc <__assert_fail@plt+0x644>
   11a14:	mov	r2, r6
   11a18:	movw	r1, #39536	; 0x9a70
   11a1c:	movt	r1, #1
   11a20:	mov	r0, r4
   11a24:	bl	112e0 <sprintf@plt>
   11a28:	b	119cc <__assert_fail@plt+0x644>
   11a2c:	mov	r2, r6
   11a30:	movw	r1, #39572	; 0x9a94
   11a34:	movt	r1, #1
   11a38:	mov	r0, r4
   11a3c:	bl	112e0 <sprintf@plt>
   11a40:	b	119cc <__assert_fail@plt+0x644>
   11a44:	mov	r1, r6
   11a48:	mov	r0, r4
   11a4c:	bl	1119c <strcat@plt>
   11a50:	b	119cc <__assert_fail@plt+0x644>
   11a54:	ldrb	r3, [r7]
   11a58:	cmp	r3, #0
   11a5c:	beq	11a8c <__assert_fail@plt+0x704>
   11a60:	movw	r1, #39432	; 0x9a08
   11a64:	movt	r1, #1
   11a68:	mov	r0, r5
   11a6c:	bl	110c4 <strcmp@plt>
   11a70:	subs	r8, r0, #0
   11a74:	bne	119e4 <__assert_fail@plt+0x65c>
   11a78:	mov	r1, r7
   11a7c:	mov	r0, r4
   11a80:	bl	1119c <strcat@plt>
   11a84:	cmp	r8, #0
   11a88:	bne	119c0 <__assert_fail@plt+0x638>
   11a8c:	movw	r1, #39356	; 0x99bc
   11a90:	movt	r1, #1
   11a94:	mov	r0, r5
   11a98:	bl	110c4 <strcmp@plt>
   11a9c:	cmp	r0, #0
   11aa0:	beq	11abc <__assert_fail@plt+0x734>
   11aa4:	movw	r1, #39508	; 0x9a54
   11aa8:	movt	r1, #1
   11aac:	mov	r0, r5
   11ab0:	bl	110c4 <strcmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	bne	11aec <__assert_fail@plt+0x764>
   11abc:	mov	r2, #2
   11ac0:	movw	r1, #39524	; 0x9a64
   11ac4:	movt	r1, #1
   11ac8:	mov	r0, r6
   11acc:	bl	11268 <strncasecmp@plt>
   11ad0:	cmp	r0, #0
   11ad4:	bne	11aec <__assert_fail@plt+0x764>
   11ad8:	ldrb	r3, [r6, #2]
   11adc:	sub	r3, r3, #48	; 0x30
   11ae0:	uxtb	r3, r3
   11ae4:	cmp	r3, #9
   11ae8:	bls	119fc <__assert_fail@plt+0x674>
   11aec:	movw	r1, #39432	; 0x9a08
   11af0:	movt	r1, #1
   11af4:	mov	r0, r5
   11af8:	bl	110c4 <strcmp@plt>
   11afc:	cmp	r0, #0
   11b00:	beq	11a14 <__assert_fail@plt+0x68c>
   11b04:	movw	r1, #39552	; 0x9a80
   11b08:	movt	r1, #1
   11b0c:	mov	r0, r5
   11b10:	bl	110c4 <strcmp@plt>
   11b14:	cmp	r0, #0
   11b18:	bne	11b30 <__assert_fail@plt+0x7a8>
   11b1c:	mov	r1, #32
   11b20:	mov	r0, r6
   11b24:	bl	11244 <strchr@plt>
   11b28:	cmp	r0, #0
   11b2c:	beq	11a2c <__assert_fail@plt+0x6a4>
   11b30:	movw	r1, #39584	; 0x9aa0
   11b34:	movt	r1, #1
   11b38:	mov	r0, r5
   11b3c:	bl	110c4 <strcmp@plt>
   11b40:	cmp	r0, #0
   11b44:	bne	119c0 <__assert_fail@plt+0x638>
   11b48:	movw	r0, #39600	; 0x9ab0
   11b4c:	movt	r0, #1
   11b50:	bl	111c0 <getenv@plt>
   11b54:	cmp	r0, #0
   11b58:	beq	11b74 <__assert_fail@plt+0x7ec>
   11b5c:	mov	r2, #2
   11b60:	movw	r1, #39608	; 0x9ab8
   11b64:	movt	r1, #1
   11b68:	bl	11358 <strncmp@plt>
   11b6c:	cmp	r0, #0
   11b70:	beq	11a44 <__assert_fail@plt+0x6bc>
   11b74:	mov	r2, r6
   11b78:	movw	r1, #39612	; 0x9abc
   11b7c:	movt	r1, #1
   11b80:	mov	r0, r4
   11b84:	bl	112e0 <sprintf@plt>
   11b88:	b	119cc <__assert_fail@plt+0x644>
   11b8c:	andeq	sp, r2, ip, lsl r1
   11b90:	andeq	sp, r2, r8, asr r1
   11b94:	str	r4, [sp, #-8]!
   11b98:	str	lr, [sp, #4]
   11b9c:	bl	11370 <close@plt>
   11ba0:	ldr	r4, [sp]
   11ba4:	add	sp, sp, #4
   11ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11bb0:	strd	r6, [sp, #8]
   11bb4:	str	r8, [sp, #16]
   11bb8:	str	lr, [sp, #20]
   11bbc:	ldrb	r3, [r0]
   11bc0:	cmp	r3, #0
   11bc4:	beq	11c5c <__assert_fail@plt+0x8d4>
   11bc8:	mov	r2, r0
   11bcc:	ldrb	r3, [r2, #1]!
   11bd0:	cmp	r3, #0
   11bd4:	bne	11bcc <__assert_fail@plt+0x844>
   11bd8:	sub	r7, r2, #1
   11bdc:	ldrb	r3, [r1]
   11be0:	cmp	r3, #0
   11be4:	beq	11c64 <__assert_fail@plt+0x8dc>
   11be8:	mov	r4, r1
   11bec:	ldrb	r3, [r4, #1]!
   11bf0:	cmp	r3, #0
   11bf4:	bne	11bec <__assert_fail@plt+0x864>
   11bf8:	sub	r3, r4, #1
   11bfc:	cmp	r1, r3
   11c00:	cmpls	r0, r7
   11c04:	bhi	11c84 <__assert_fail@plt+0x8fc>
   11c08:	mov	r5, r1
   11c0c:	mov	r6, r0
   11c10:	bl	111fc <__ctype_tolower_loc@plt>
   11c14:	ldr	r0, [r0]
   11c18:	mov	r2, r7
   11c1c:	mov	r3, r4
   11c20:	ldrb	r1, [r2], #-1
   11c24:	sub	ip, r3, #1
   11c28:	ldrb	lr, [r3, #-1]
   11c2c:	ldr	r1, [r0, r1, lsl #2]
   11c30:	cmp	lr, r1
   11c34:	bne	11c6c <__assert_fail@plt+0x8e4>
   11c38:	cmp	r5, ip
   11c3c:	beq	11c8c <__assert_fail@plt+0x904>
   11c40:	sub	r1, r3, #2
   11c44:	mov	r3, ip
   11c48:	cmp	r5, r1
   11c4c:	cmpls	r6, r2
   11c50:	bls	11c20 <__assert_fail@plt+0x898>
   11c54:	mov	r0, #0
   11c58:	b	11c70 <__assert_fail@plt+0x8e8>
   11c5c:	mov	r2, r0
   11c60:	b	11bd8 <__assert_fail@plt+0x850>
   11c64:	mov	r4, r1
   11c68:	b	11bf8 <__assert_fail@plt+0x870>
   11c6c:	mov	r0, #0
   11c70:	ldrd	r4, [sp]
   11c74:	ldrd	r6, [sp, #8]
   11c78:	ldr	r8, [sp, #16]
   11c7c:	add	sp, sp, #20
   11c80:	pop	{pc}		; (ldr pc, [sp], #4)
   11c84:	mov	r0, #0
   11c88:	b	11c70 <__assert_fail@plt+0x8e8>
   11c8c:	mov	r0, #1
   11c90:	b	11c70 <__assert_fail@plt+0x8e8>
   11c94:	strd	r4, [sp, #-16]!
   11c98:	str	r6, [sp, #8]
   11c9c:	str	lr, [sp, #12]
   11ca0:	mov	r4, r1
   11ca4:	ldr	r1, [r1]
   11ca8:	cmp	r1, #0
   11cac:	beq	11cd4 <__assert_fail@plt+0x94c>
   11cb0:	mov	r5, r0
   11cb4:	mov	r0, r5
   11cb8:	bl	11bac <__assert_fail@plt+0x824>
   11cbc:	cmp	r0, #0
   11cc0:	bne	11cdc <__assert_fail@plt+0x954>
   11cc4:	ldr	r1, [r4, #4]!
   11cc8:	cmp	r1, #0
   11ccc:	bne	11cb4 <__assert_fail@plt+0x92c>
   11cd0:	b	11ce0 <__assert_fail@plt+0x958>
   11cd4:	mov	r0, #0
   11cd8:	b	11ce0 <__assert_fail@plt+0x958>
   11cdc:	mov	r0, #1
   11ce0:	ldrd	r4, [sp]
   11ce4:	ldr	r6, [sp, #8]
   11ce8:	add	sp, sp, #12
   11cec:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d58 <__assert_fail@plt+0x9d0>
   11cf8:	push	{lr}		; (str lr, [sp, #-4]!)
   11cfc:	sub	sp, sp, #28
   11d00:	add	r3, sp, #8
   11d04:	str	r3, [sp, #4]
   11d08:	add	r3, sp, #12
   11d0c:	str	r3, [sp]
   11d10:	add	r3, sp, #16
   11d14:	add	r2, sp, #20
   11d18:	movw	r1, #39620	; 0x9ac4
   11d1c:	movt	r1, #1
   11d20:	bl	112d4 <sscanf@plt>
   11d24:	cmp	r0, #4
   11d28:	movne	r0, #0
   11d2c:	bne	11d50 <__assert_fail@plt+0x9c8>
   11d30:	ldr	r0, [sp, #16]
   11d34:	lsl	r0, r0, #16
   11d38:	ldr	r3, [sp, #20]
   11d3c:	add	r0, r0, r3, lsl #24
   11d40:	ldr	r3, [sp, #12]
   11d44:	add	r0, r0, r3, lsl #8
   11d48:	ldr	r3, [sp, #8]
   11d4c:	add	r0, r0, r3
   11d50:	add	sp, sp, #28
   11d54:	pop	{pc}		; (ldr pc, [sp], #4)
   11d58:	mov	r0, #0
   11d5c:	bx	lr
   11d60:	ldrb	r3, [r0]
   11d64:	cmp	r3, #0
   11d68:	beq	12148 <__assert_fail@plt+0xdc0>
   11d6c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11d70:	strd	r6, [sp, #8]
   11d74:	str	lr, [sp, #16]
   11d78:	sub	sp, sp, #12
   11d7c:	mov	r4, r0
   11d80:	ldrb	r3, [r0, #1]
   11d84:	cmp	r3, #32
   11d88:	bne	11da4 <__assert_fail@plt+0xa1c>
   11d8c:	ldrb	r3, [r4, #2]!
   11d90:	cmp	r3, #0
   11d94:	beq	12154 <__assert_fail@plt+0xdcc>
   11d98:	ldrb	r3, [r4, #1]
   11d9c:	cmp	r3, #32
   11da0:	beq	11d8c <__assert_fail@plt+0xa04>
   11da4:	mov	r1, #64	; 0x40
   11da8:	mov	r0, r4
   11dac:	bl	11244 <strchr@plt>
   11db0:	cmp	r0, #0
   11db4:	movwne	r0, #40580	; 0x9e84
   11db8:	movtne	r0, #1
   11dbc:	beq	11dd4 <__assert_fail@plt+0xa4c>
   11dc0:	add	sp, sp, #12
   11dc4:	ldrd	r4, [sp]
   11dc8:	ldrd	r6, [sp, #8]
   11dcc:	add	sp, sp, #16
   11dd0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dd4:	movw	r1, #39648	; 0x9ae0
   11dd8:	movt	r1, #1
   11ddc:	mov	r0, r4
   11de0:	bl	11310 <strpbrk@plt>
   11de4:	cmp	r0, #0
   11de8:	beq	11e94 <__assert_fail@plt+0xb0c>
   11dec:	mov	r1, #58	; 0x3a
   11df0:	mov	r0, r4
   11df4:	bl	11244 <strchr@plt>
   11df8:	cmp	r0, #0
   11dfc:	beq	11f7c <__assert_fail@plt+0xbf4>
   11e00:	mov	r3, #0
   11e04:	str	r3, [sp]
   11e08:	str	r3, [sp, #4]
   11e0c:	add	r3, sp, #4
   11e10:	mov	r2, sp
   11e14:	movw	r1, #39660	; 0x9aec
   11e18:	movt	r1, #1
   11e1c:	mov	r0, r4
   11e20:	bl	112d4 <sscanf@plt>
   11e24:	cmp	r0, #0
   11e28:	beq	11f70 <__assert_fail@plt+0xbe8>
   11e2c:	ldrh	ip, [sp, #4]
   11e30:	ldr	r3, [sp]
   11e34:	orr	ip, ip, r3, lsl #16
   11e38:	movw	r3, #53528	; 0xd118
   11e3c:	movt	r3, #2
   11e40:	ldr	r0, [r3, #328]	; 0x148
   11e44:	cmp	r0, #0
   11e48:	beq	11f3c <__assert_fail@plt+0xbb4>
   11e4c:	movw	r3, #53528	; 0xd118
   11e50:	movt	r3, #2
   11e54:	ldr	r2, [r3, #324]	; 0x144
   11e58:	and	r2, r2, ip
   11e5c:	ldr	r3, [r3, #320]	; 0x140
   11e60:	cmp	r2, r3
   11e64:	beq	11dc0 <__assert_fail@plt+0xa38>
   11e68:	ldr	r3, [pc, #752]	; 12160 <__assert_fail@plt+0xdd8>
   11e6c:	mov	r2, r3
   11e70:	ldr	r0, [r3, #20]
   11e74:	cmp	r0, #0
   11e78:	beq	11f3c <__assert_fail@plt+0xbb4>
   11e7c:	ldr	r2, [r2, #16]
   11e80:	and	r2, r2, ip
   11e84:	ldr	r1, [r3, #12]!
   11e88:	cmp	r2, r1
   11e8c:	bne	11e6c <__assert_fail@plt+0xae4>
   11e90:	b	11dc0 <__assert_fail@plt+0xa38>
   11e94:	ldrb	r3, [r4]
   11e98:	cmp	r3, #0
   11e9c:	beq	11f18 <__assert_fail@plt+0xb90>
   11ea0:	mov	r5, r4
   11ea4:	ldrb	r3, [r5, #1]!
   11ea8:	cmp	r3, #0
   11eac:	bne	11ea4 <__assert_fail@plt+0xb1c>
   11eb0:	mov	r2, #2
   11eb4:	movw	r1, #39652	; 0x9ae4
   11eb8:	movt	r1, #1
   11ebc:	mov	r0, r4
   11ec0:	bl	11268 <strncasecmp@plt>
   11ec4:	cmp	r0, #0
   11ec8:	bne	11ee4 <__assert_fail@plt+0xb5c>
   11ecc:	ldrb	r2, [r4, #2]
   11ed0:	sub	r3, r2, #48	; 0x30
   11ed4:	uxtb	r3, r3
   11ed8:	cmp	r2, #32
   11edc:	cmpne	r3, #9
   11ee0:	bls	11f20 <__assert_fail@plt+0xb98>
   11ee4:	mov	r2, #2
   11ee8:	movw	r1, #39656	; 0x9ae8
   11eec:	movt	r1, #1
   11ef0:	sub	r0, r5, #2
   11ef4:	bl	11268 <strncasecmp@plt>
   11ef8:	movw	r2, #39584	; 0x9aa0
   11efc:	movt	r2, #1
   11f00:	movw	r3, #40580	; 0x9e84
   11f04:	movt	r3, #1
   11f08:	cmp	r0, #0
   11f0c:	moveq	r0, r2
   11f10:	movne	r0, r3
   11f14:	b	11dc0 <__assert_fail@plt+0xa38>
   11f18:	mov	r5, r4
   11f1c:	b	11eb0 <__assert_fail@plt+0xb28>
   11f20:	mov	r2, #10
   11f24:	mov	r1, #0
   11f28:	add	r0, r4, #2
   11f2c:	bl	110d0 <strtol@plt>
   11f30:	ldr	r1, [pc, #556]	; 12164 <__assert_fail@plt+0xddc>
   11f34:	bl	117a4 <__assert_fail@plt+0x41c>
   11f38:	b	11dc0 <__assert_fail@plt+0xa38>
   11f3c:	movw	r3, #2244	; 0x8c4
   11f40:	movt	r3, #3
   11f44:	ldr	r3, [r3, #12]
   11f48:	cmp	r3, #0
   11f4c:	movweq	r0, #39356	; 0x99bc
   11f50:	movteq	r0, #1
   11f54:	beq	11dc0 <__assert_fail@plt+0xa38>
   11f58:	movw	r0, #39668	; 0x9af4
   11f5c:	movt	r0, #1
   11f60:	bl	111cc <puts@plt>
   11f64:	movw	r0, #39356	; 0x99bc
   11f68:	movt	r0, #1
   11f6c:	b	11dc0 <__assert_fail@plt+0xa38>
   11f70:	movw	r0, #40580	; 0x9e84
   11f74:	movt	r0, #1
   11f78:	b	11dc0 <__assert_fail@plt+0xa38>
   11f7c:	mov	r0, r4
   11f80:	bl	11cf0 <__assert_fail@plt+0x968>
   11f84:	subs	r6, r0, #0
   11f88:	bne	12010 <__assert_fail@plt+0xc88>
   11f8c:	movw	r3, #53528	; 0xd118
   11f90:	movt	r3, #2
   11f94:	ldr	r1, [r3, #608]	; 0x260
   11f98:	cmp	r1, #0
   11f9c:	movne	r5, r6
   11fa0:	ldrne	r7, [pc, #448]	; 12168 <__assert_fail@plt+0xde0>
   11fa4:	beq	11fc8 <__assert_fail@plt+0xc40>
   11fa8:	mov	r0, r4
   11fac:	bl	11bac <__assert_fail@plt+0x824>
   11fb0:	cmp	r0, #0
   11fb4:	bne	120a4 <__assert_fail@plt+0xd1c>
   11fb8:	add	r5, r5, #2
   11fbc:	ldr	r1, [r7, r5, lsl #2]
   11fc0:	cmp	r1, #0
   11fc4:	bne	11fa8 <__assert_fail@plt+0xc20>
   11fc8:	mov	r1, #46	; 0x2e
   11fcc:	mov	r0, r4
   11fd0:	bl	11244 <strchr@plt>
   11fd4:	cmp	r0, #0
   11fd8:	beq	120b8 <__assert_fail@plt+0xd30>
   11fdc:	movw	r3, #2244	; 0x8c4
   11fe0:	movt	r3, #3
   11fe4:	ldr	r3, [r3, #12]
   11fe8:	cmp	r3, #0
   11fec:	movweq	r0, #40580	; 0x9e84
   11ff0:	movteq	r0, #1
   11ff4:	beq	11dc0 <__assert_fail@plt+0xa38>
   11ff8:	movw	r0, #39916	; 0x9bec
   11ffc:	movt	r0, #1
   12000:	bl	111cc <puts@plt>
   12004:	movw	r0, #40580	; 0x9e84
   12008:	movt	r0, #1
   1200c:	b	11dc0 <__assert_fail@plt+0xa38>
   12010:	movw	r3, #56976	; 0xde90
   12014:	movt	r3, #2
   12018:	ldr	r0, [r3, #8]
   1201c:	cmp	r0, #0
   12020:	beq	12070 <__assert_fail@plt+0xce8>
   12024:	movw	r3, #56976	; 0xde90
   12028:	movt	r3, #2
   1202c:	ldr	r2, [r3, #4]
   12030:	and	r2, r2, r6
   12034:	ldr	r3, [r3]
   12038:	cmp	r2, r3
   1203c:	beq	11dc0 <__assert_fail@plt+0xa38>
   12040:	movw	r3, #56976	; 0xde90
   12044:	movt	r3, #2
   12048:	mov	r2, r3
   1204c:	ldr	r0, [r3, #20]
   12050:	cmp	r0, #0
   12054:	beq	12070 <__assert_fail@plt+0xce8>
   12058:	ldr	r2, [r2, #16]
   1205c:	and	r2, r2, r6
   12060:	ldr	r1, [r3, #12]!
   12064:	cmp	r2, r1
   12068:	bne	12048 <__assert_fail@plt+0xcc0>
   1206c:	b	11dc0 <__assert_fail@plt+0xa38>
   12070:	movw	r3, #2244	; 0x8c4
   12074:	movt	r3, #3
   12078:	ldr	r3, [r3, #12]
   1207c:	cmp	r3, #0
   12080:	movweq	r0, #39356	; 0x99bc
   12084:	movteq	r0, #1
   12088:	beq	11dc0 <__assert_fail@plt+0xa38>
   1208c:	movw	r0, #39760	; 0x9b50
   12090:	movt	r0, #1
   12094:	bl	111cc <puts@plt>
   12098:	movw	r0, #39356	; 0x99bc
   1209c:	movt	r0, #1
   120a0:	b	11dc0 <__assert_fail@plt+0xa38>
   120a4:	movw	r3, #53528	; 0xd118
   120a8:	movt	r3, #2
   120ac:	add	r3, r3, r5, lsl #2
   120b0:	ldr	r0, [r3, #612]	; 0x264
   120b4:	b	11dc0 <__assert_fail@plt+0xa38>
   120b8:	movw	r3, #53528	; 0xd118
   120bc:	movt	r3, #2
   120c0:	ldr	r5, [r3, #2600]	; 0xa28
   120c4:	cmp	r5, #0
   120c8:	beq	12100 <__assert_fail@plt+0xd78>
   120cc:	ldr	r7, [pc, #152]	; 1216c <__assert_fail@plt+0xde4>
   120d0:	mov	r0, r5
   120d4:	bl	11238 <strlen@plt>
   120d8:	mov	r2, r0
   120dc:	mov	r1, r5
   120e0:	mov	r0, r4
   120e4:	bl	11268 <strncasecmp@plt>
   120e8:	cmp	r0, #0
   120ec:	beq	12134 <__assert_fail@plt+0xdac>
   120f0:	add	r6, r6, #2
   120f4:	ldr	r5, [r7, r6, lsl #2]
   120f8:	cmp	r5, #0
   120fc:	bne	120d0 <__assert_fail@plt+0xd48>
   12100:	movw	r3, #2244	; 0x8c4
   12104:	movt	r3, #3
   12108:	ldr	r3, [r3, #12]
   1210c:	cmp	r3, #0
   12110:	movweq	r0, #39356	; 0x99bc
   12114:	movteq	r0, #1
   12118:	beq	11dc0 <__assert_fail@plt+0xa38>
   1211c:	movw	r0, #39848	; 0x9ba8
   12120:	movt	r0, #1
   12124:	bl	111cc <puts@plt>
   12128:	movw	r0, #39356	; 0x99bc
   1212c:	movt	r0, #1
   12130:	b	11dc0 <__assert_fail@plt+0xa38>
   12134:	movw	r3, #53528	; 0xd118
   12138:	movt	r3, #2
   1213c:	add	r3, r3, r6, lsl #2
   12140:	ldr	r0, [r3, #2604]	; 0xa2c
   12144:	b	11dc0 <__assert_fail@plt+0xa38>
   12148:	movw	r0, #39632	; 0x9ad0
   1214c:	movt	r0, #1
   12150:	bx	lr
   12154:	movw	r0, #39632	; 0x9ad0
   12158:	movt	r0, #1
   1215c:	b	11dc0 <__assert_fail@plt+0xa38>
   12160:	andeq	sp, r2, r8, asr r2
   12164:	andeq	sp, r2, r8, ror r1
   12168:	andeq	sp, r2, r8, ror r3
   1216c:	andeq	sp, r2, r0, asr #22
   12170:	push	{r0, r1, r2, r3}
   12174:	push	{lr}		; (str lr, [sp, #-4]!)
   12178:	sub	sp, sp, #12
   1217c:	add	r2, sp, #20
   12180:	str	r2, [sp, #4]
   12184:	movw	r4, #2232	; 0x8b8
   12188:	movt	r4, #3
   1218c:	ldr	r1, [sp, #16]
   12190:	ldr	r0, [r4]
   12194:	bl	112bc <vfprintf@plt>
   12198:	ldr	r4, [r4]
   1219c:	bl	1125c <__errno_location@plt>
   121a0:	ldr	r0, [r0]
   121a4:	bl	111f0 <strerror@plt>
   121a8:	mov	r2, r0
   121ac:	movw	r1, #39976	; 0x9c28
   121b0:	movt	r1, #1
   121b4:	mov	r0, r4
   121b8:	bl	11250 <fprintf@plt>
   121bc:	mov	r0, #1
   121c0:	bl	1122c <exit@plt>
   121c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   121c8:	strd	r6, [sp, #8]
   121cc:	strd	r8, [sp, #16]
   121d0:	str	lr, [sp, #24]
   121d4:	sub	sp, sp, #108	; 0x6c
   121d8:	mov	r4, r0
   121dc:	mov	r5, r1
   121e0:	mov	r0, r1
   121e4:	bl	11238 <strlen@plt>
   121e8:	add	r0, r0, #4
   121ec:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   121f0:	mov	r9, r0
   121f4:	mov	r3, #61	; 0x3d
   121f8:	strb	r3, [r0], #1
   121fc:	mov	r1, r5
   12200:	bl	111a8 <strcpy@plt>
   12204:	mov	r0, r9
   12208:	bl	11238 <strlen@plt>
   1220c:	add	r2, r9, r0
   12210:	movw	r3, #39984	; 0x9c30
   12214:	movt	r3, #1
   12218:	ldrh	r1, [r3]
   1221c:	strh	r1, [r9, r0]
   12220:	ldrb	r3, [r3, #2]
   12224:	strb	r3, [r2, #2]
   12228:	movw	r1, #49084	; 0xbfbc
   1222c:	movt	r1, #1
   12230:	mov	r0, r4
   12234:	bl	11094 <fdopen@plt>
   12238:	mov	r6, r0
   1223c:	mov	r0, r9
   12240:	bl	11238 <strlen@plt>
   12244:	mov	r2, r0
   12248:	mov	r1, r9
   1224c:	mov	r0, r4
   12250:	bl	1128c <write@plt>
   12254:	cmp	r0, #0
   12258:	blt	12274 <__assert_fail@plt+0xeec>
   1225c:	mov	r5, #0
   12260:	movw	r8, #39996	; 0x9c3c
   12264:	movt	r8, #1
   12268:	movw	r7, #2236	; 0x8bc
   1226c:	movt	r7, #3
   12270:	b	122f8 <__assert_fail@plt+0xf70>
   12274:	movw	r0, #39988	; 0x9c34
   12278:	movt	r0, #1
   1227c:	bl	12170 <__assert_fail@plt+0xde8>
   12280:	ldrb	r2, [r3, #1]!
   12284:	cmp	r2, #58	; 0x3a
   12288:	bne	12280 <__assert_fail@plt+0xef8>
   1228c:	add	r4, r3, #1
   12290:	ldrb	r3, [r3, #1]
   12294:	cmp	r3, #32
   12298:	bne	122a8 <__assert_fail@plt+0xf20>
   1229c:	ldrb	r3, [r4, #1]!
   122a0:	cmp	r3, #32
   122a4:	beq	1229c <__assert_fail@plt+0xf14>
   122a8:	mov	r0, r4
   122ac:	bl	11238 <strlen@plt>
   122b0:	add	r0, r0, #1
   122b4:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   122b8:	mov	r5, r0
   122bc:	ldrb	r3, [r4]
   122c0:	cmp	r3, #10
   122c4:	cmpne	r3, #13
   122c8:	beq	12344 <__assert_fail@plt+0xfbc>
   122cc:	mov	r2, r0
   122d0:	strb	r3, [r2], #1
   122d4:	ldrb	r3, [r4, #1]!
   122d8:	cmp	r3, #10
   122dc:	cmpne	r3, #13
   122e0:	bne	122d0 <__assert_fail@plt+0xf48>
   122e4:	mov	r3, #0
   122e8:	strb	r3, [r2]
   122ec:	ldr	r1, [r7]
   122f0:	add	r0, sp, #4
   122f4:	bl	1134c <fputs@plt>
   122f8:	mov	r2, r6
   122fc:	mov	r1, #100	; 0x64
   12300:	add	r0, sp, #4
   12304:	bl	11118 <fgets@plt>
   12308:	cmp	r0, #0
   1230c:	beq	1234c <__assert_fail@plt+0xfc4>
   12310:	mov	r2, #16
   12314:	mov	r1, r8
   12318:	add	r0, sp, #4
   1231c:	bl	11358 <strncmp@plt>
   12320:	orrs	r3, r5, r0
   12324:	bne	122ec <__assert_fail@plt+0xf64>
   12328:	ldrb	r3, [sp, #4]
   1232c:	cmp	r3, #58	; 0x3a
   12330:	beq	1233c <__assert_fail@plt+0xfb4>
   12334:	add	r3, sp, #4
   12338:	b	12280 <__assert_fail@plt+0xef8>
   1233c:	add	r3, sp, #4
   12340:	b	1228c <__assert_fail@plt+0xf04>
   12344:	mov	r2, r0
   12348:	b	122e4 <__assert_fail@plt+0xf5c>
   1234c:	mov	r0, r6
   12350:	bl	11124 <ferror@plt>
   12354:	cmp	r0, #0
   12358:	bne	12380 <__assert_fail@plt+0xff8>
   1235c:	mov	r0, r9
   12360:	bl	140ac <argp_parse@@Base+0xcd8>
   12364:	mov	r0, r5
   12368:	add	sp, sp, #108	; 0x6c
   1236c:	ldrd	r4, [sp]
   12370:	ldrd	r6, [sp, #8]
   12374:	ldrd	r8, [sp, #16]
   12378:	add	sp, sp, #24
   1237c:	pop	{pc}		; (ldr pc, [sp], #4)
   12380:	movw	r0, #40016	; 0x9c50
   12384:	movt	r0, #1
   12388:	bl	12170 <__assert_fail@plt+0xde8>
   1238c:	push	{r0, r1, r2, r3}
   12390:	push	{lr}		; (str lr, [sp, #-4]!)
   12394:	sub	sp, sp, #12
   12398:	add	r2, sp, #20
   1239c:	str	r2, [sp, #4]
   123a0:	movw	r4, #2232	; 0x8b8
   123a4:	movt	r4, #3
   123a8:	ldr	r1, [sp, #16]
   123ac:	ldr	r0, [r4]
   123b0:	bl	112bc <vfprintf@plt>
   123b4:	ldr	r1, [r4]
   123b8:	mov	r0, #10
   123bc:	bl	112c8 <fputc@plt>
   123c0:	mov	r0, #1
   123c4:	bl	1122c <exit@plt>
   123c8:	strd	r4, [sp, #-12]!
   123cc:	str	lr, [sp, #8]
   123d0:	sub	sp, sp, #44	; 0x2c
   123d4:	mov	r5, r0
   123d8:	mov	r2, #0
   123dc:	mov	r3, #0
   123e0:	strd	r2, [sp, #8]
   123e4:	strd	r2, [sp, #16]
   123e8:	strd	r2, [sp, #24]
   123ec:	strd	r2, [sp, #32]
   123f0:	mov	r3, #1
   123f4:	str	r3, [sp, #16]
   123f8:	subs	r4, r1, #0
   123fc:	beq	124e4 <__assert_fail@plt+0x115c>
   12400:	add	r3, sp, #4
   12404:	add	r2, sp, #8
   12408:	mov	r1, r4
   1240c:	bl	11328 <getaddrinfo@plt>
   12410:	cmp	r0, #0
   12414:	beq	12434 <__assert_fail@plt+0x10ac>
   12418:	add	r3, sp, #4
   1241c:	add	r2, sp, #8
   12420:	mov	r1, r4
   12424:	mov	r0, r5
   12428:	bl	11328 <getaddrinfo@plt>
   1242c:	cmp	r0, #0
   12430:	bne	12448 <__assert_fail@plt+0x10c0>
   12434:	ldr	r5, [sp, #4]
   12438:	cmp	r5, #0
   1243c:	beq	124d8 <__assert_fail@plt+0x1150>
   12440:	mov	r3, r5
   12444:	b	12470 <__assert_fail@plt+0x10e8>
   12448:	bl	1110c <gai_strerror@plt>
   1244c:	mov	r1, r0
   12450:	movw	r0, #40032	; 0x9c60
   12454:	movt	r0, #1
   12458:	bl	1238c <__assert_fail@plt+0x1004>
   1245c:	ldr	r3, [sp, #4]
   12460:	ldr	r3, [r3, #28]
   12464:	str	r3, [sp, #4]
   12468:	cmp	r3, #0
   1246c:	beq	124d8 <__assert_fail@plt+0x1150>
   12470:	ldr	r2, [r3, #12]
   12474:	ldr	r1, [r3, #8]
   12478:	ldr	r0, [r3, #4]
   1247c:	bl	11334 <socket@plt>
   12480:	subs	r4, r0, #0
   12484:	blt	1245c <__assert_fail@plt+0x10d4>
   12488:	ldr	r3, [sp, #4]
   1248c:	ldr	r2, [r3, #16]
   12490:	ldr	r1, [r3, #20]
   12494:	mov	r0, r4
   12498:	bl	1137c <connect@plt>
   1249c:	cmp	r0, #0
   124a0:	beq	124b0 <__assert_fail@plt+0x1128>
   124a4:	mov	r0, r4
   124a8:	bl	11370 <close@plt>
   124ac:	b	1245c <__assert_fail@plt+0x10d4>
   124b0:	ldr	r3, [sp, #4]
   124b4:	cmp	r3, #0
   124b8:	beq	124d8 <__assert_fail@plt+0x1150>
   124bc:	mov	r0, r5
   124c0:	bl	1131c <freeaddrinfo@plt>
   124c4:	mov	r0, r4
   124c8:	add	sp, sp, #44	; 0x2c
   124cc:	ldrd	r4, [sp]
   124d0:	add	sp, sp, #8
   124d4:	pop	{pc}		; (ldr pc, [sp], #4)
   124d8:	movw	r0, #40048	; 0x9c70
   124dc:	movt	r0, #1
   124e0:	bl	12170 <__assert_fail@plt+0xde8>
   124e4:	add	r3, sp, #4
   124e8:	add	r2, sp, #8
   124ec:	movw	r1, #40056	; 0x9c78
   124f0:	movt	r1, #1
   124f4:	bl	11328 <getaddrinfo@plt>
   124f8:	cmp	r0, #0
   124fc:	beq	12434 <__assert_fail@plt+0x10ac>
   12500:	movw	r4, #40024	; 0x9c58
   12504:	movt	r4, #1
   12508:	b	12418 <__assert_fail@plt+0x1090>
   1250c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12510:	strd	r6, [sp, #8]
   12514:	strd	r8, [sp, #16]
   12518:	str	sl, [sp, #24]
   1251c:	str	lr, [sp, #28]
   12520:	sub	sp, sp, #1504	; 0x5e0
   12524:	mov	r6, r0
   12528:	mov	r4, r1
   1252c:	movw	r3, #53528	; 0xd118
   12530:	movt	r3, #2
   12534:	ldr	r5, [r3]
   12538:	movw	r1, #49084	; 0xbfbc
   1253c:	movt	r1, #1
   12540:	bl	11094 <fdopen@plt>
   12544:	mov	r7, r0
   12548:	mov	r0, r4
   1254c:	bl	11238 <strlen@plt>
   12550:	mov	r2, r0
   12554:	mov	r1, r4
   12558:	mov	r0, r6
   1255c:	bl	1128c <write@plt>
   12560:	cmp	r0, #0
   12564:	movge	r4, #0
   12568:	movwge	r8, #53528	; 0xd118
   1256c:	movtge	r8, #2
   12570:	addge	r6, r8, #2672	; 0xa70
   12574:	bge	12694 <__assert_fail@plt+0x130c>
   12578:	movw	r0, #39988	; 0x9c34
   1257c:	movt	r0, #1
   12580:	bl	12170 <__assert_fail@plt+0xde8>
   12584:	add	r3, r8, r4, lsl #2
   12588:	ldr	r5, [r3, #2676]	; 0xa74
   1258c:	mov	r0, r5
   12590:	bl	11238 <strlen@plt>
   12594:	mov	r2, r0
   12598:	mov	r1, r5
   1259c:	add	r0, sp, #1296	; 0x510
   125a0:	add	r0, r0, #8
   125a4:	bl	11358 <strncmp@plt>
   125a8:	adds	r5, r0, #0
   125ac:	movne	r5, #1
   125b0:	b	12694 <__assert_fail@plt+0x130c>
   125b4:	ldr	r9, [r8, #2672]	; 0xa70
   125b8:	cmp	r9, #0
   125bc:	beq	127cc <__assert_fail@plt+0x1444>
   125c0:	mov	r4, r5
   125c4:	mov	r0, r9
   125c8:	bl	11238 <strlen@plt>
   125cc:	mov	r2, r0
   125d0:	mov	r1, r9
   125d4:	add	r0, sp, #1296	; 0x510
   125d8:	add	r0, r0, #8
   125dc:	bl	11358 <strncmp@plt>
   125e0:	cmp	r0, #0
   125e4:	beq	12778 <__assert_fail@plt+0x13f0>
   125e8:	add	r4, r4, #2
   125ec:	ldr	r9, [r6, r4, lsl #2]
   125f0:	cmp	r9, #0
   125f4:	bne	125c4 <__assert_fail@plt+0x123c>
   125f8:	b	126c0 <__assert_fail@plt+0x1338>
   125fc:	add	r2, sp, #24
   12600:	add	r1, sp, #280	; 0x118
   12604:	movw	r0, #40124	; 0x9cbc
   12608:	movt	r0, #1
   1260c:	bl	110dc <printf@plt>
   12610:	b	12720 <__assert_fail@plt+0x1398>
   12614:	ldrb	r2, [sp, #1304]	; 0x518
   12618:	subs	r3, r2, #13
   1261c:	movne	r3, #1
   12620:	cmp	r2, #0
   12624:	moveq	r3, #0
   12628:	cmp	r2, #10
   1262c:	moveq	r3, #0
   12630:	andne	r3, r3, #1
   12634:	cmp	r3, #0
   12638:	beq	1276c <__assert_fail@plt+0x13e4>
   1263c:	add	r1, sp, #1296	; 0x510
   12640:	add	r1, r1, #8
   12644:	ldrb	r2, [r1, #1]!
   12648:	subs	r3, r2, #13
   1264c:	movne	r3, #1
   12650:	cmp	r2, #0
   12654:	moveq	r3, #0
   12658:	cmp	r2, #10
   1265c:	moveq	r3, #0
   12660:	andne	r3, r3, #1
   12664:	cmp	r3, #0
   12668:	bne	12644 <__assert_fail@plt+0x12bc>
   1266c:	mov	r3, #0
   12670:	strb	r3, [r1]
   12674:	movw	r3, #2236	; 0x8bc
   12678:	movt	r3, #3
   1267c:	add	r2, sp, #1296	; 0x510
   12680:	add	r2, r2, #8
   12684:	movw	r1, #47684	; 0xba44
   12688:	movt	r1, #1
   1268c:	ldr	r0, [r3]
   12690:	bl	11250 <fprintf@plt>
   12694:	mov	r2, r7
   12698:	mov	r1, #200	; 0xc8
   1269c:	add	r0, sp, #1296	; 0x510
   126a0:	add	r0, r0, #8
   126a4:	bl	11118 <fgets@plt>
   126a8:	cmp	r0, #0
   126ac:	beq	12780 <__assert_fail@plt+0x13f8>
   126b0:	cmp	r5, #1
   126b4:	beq	12584 <__assert_fail@plt+0x11fc>
   126b8:	cmp	r5, #0
   126bc:	beq	125b4 <__assert_fail@plt+0x122c>
   126c0:	mov	r2, #10
   126c4:	movw	r1, #40064	; 0x9c80
   126c8:	movt	r1, #1
   126cc:	add	r0, sp, #1296	; 0x510
   126d0:	add	r0, r0, #8
   126d4:	bl	11358 <strncmp@plt>
   126d8:	cmp	r0, #0
   126dc:	bne	12614 <__assert_fail@plt+0x128c>
   126e0:	add	r3, sp, #280	; 0x118
   126e4:	str	r3, [sp]
   126e8:	add	r3, sp, #8
   126ec:	add	r2, sp, #24
   126f0:	movw	r1, #40076	; 0x9c8c
   126f4:	movt	r1, #1
   126f8:	add	r0, sp, #1296	; 0x510
   126fc:	add	r0, r0, #8
   12700:	bl	112d4 <sscanf@plt>
   12704:	cmp	r0, #3
   12708:	bne	12614 <__assert_fail@plt+0x128c>
   1270c:	movw	r3, #2244	; 0x8c4
   12710:	movt	r3, #3
   12714:	ldr	r3, [r3, #12]
   12718:	cmp	r3, #0
   1271c:	bne	125fc <__assert_fail@plt+0x1274>
   12720:	add	r9, sp, #280	; 0x118
   12724:	mov	r0, r9
   12728:	bl	11238 <strlen@plt>
   1272c:	add	r2, r9, r0
   12730:	movw	r3, #39984	; 0x9c30
   12734:	movt	r3, #1
   12738:	ldrh	r1, [r3]
   1273c:	strh	r1, [r9, r0]
   12740:	ldrb	r3, [r3, #2]
   12744:	strb	r3, [r2, #2]
   12748:	add	r1, sp, #8
   1274c:	add	r0, sp, #24
   12750:	bl	123c8 <__assert_fail@plt+0x1040>
   12754:	mov	sl, r0
   12758:	mov	r1, r9
   1275c:	bl	1250c <__assert_fail@plt+0x1184>
   12760:	mov	r0, sl
   12764:	bl	11370 <close@plt>
   12768:	b	12694 <__assert_fail@plt+0x130c>
   1276c:	add	r1, sp, #1296	; 0x510
   12770:	add	r1, r1, #8
   12774:	b	1266c <__assert_fail@plt+0x12e4>
   12778:	mov	r5, #1
   1277c:	b	12694 <__assert_fail@plt+0x130c>
   12780:	mov	r0, r7
   12784:	bl	11124 <ferror@plt>
   12788:	cmp	r0, #0
   1278c:	bne	127b4 <__assert_fail@plt+0x142c>
   12790:	cmp	r5, #1
   12794:	beq	127c0 <__assert_fail@plt+0x1438>
   12798:	add	sp, sp, #1504	; 0x5e0
   1279c:	ldrd	r4, [sp]
   127a0:	ldrd	r6, [sp, #8]
   127a4:	ldrd	r8, [sp, #16]
   127a8:	ldr	sl, [sp, #24]
   127ac:	add	sp, sp, #28
   127b0:	pop	{pc}		; (ldr pc, [sp], #4)
   127b4:	movw	r0, #40016	; 0x9c50
   127b8:	movt	r0, #1
   127bc:	bl	12170 <__assert_fail@plt+0xde8>
   127c0:	movw	r0, #40156	; 0x9cdc
   127c4:	movt	r0, #1
   127c8:	bl	1238c <__assert_fail@plt+0x1004>
   127cc:	mov	r4, r5
   127d0:	b	126c0 <__assert_fail@plt+0x1338>
   127d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   127d8:	strd	r6, [sp, #8]
   127dc:	strd	r8, [sp, #16]
   127e0:	strd	sl, [sp, #24]
   127e4:	str	lr, [sp, #32]
   127e8:	sub	sp, sp, #20
   127ec:	mov	sl, r0
   127f0:	mov	r6, r1
   127f4:	ldr	r0, [r1]
   127f8:	bl	14590 <_obstack_memory_used@@Base+0x34>
   127fc:	movw	r4, #2316	; 0x90c
   12800:	movt	r4, #3
   12804:	movw	r3, #16556	; 0x40ac
   12808:	movt	r3, #1
   1280c:	str	r3, [sp]
   12810:	movw	r3, #20456	; 0x4fe8
   12814:	movt	r3, #1
   12818:	mov	r2, #0
   1281c:	mov	r1, r2
   12820:	mov	r0, r4
   12824:	bl	14318 <_obstack_begin@@Base>
   12828:	movw	r3, #2364	; 0x93c
   1282c:	movt	r3, #3
   12830:	movw	r2, #40240	; 0x9d30
   12834:	movt	r2, #1
   12838:	str	r2, [r3]
   1283c:	movw	r5, #53528	; 0xd118
   12840:	movt	r5, #2
   12844:	add	r1, r5, #2768	; 0xad0
   12848:	add	r1, r1, #8
   1284c:	movw	r0, #40056	; 0x9c78
   12850:	movt	r0, #1
   12854:	bl	13fc0 <argp_parse@@Base+0xbec>
   12858:	mov	r3, #0
   1285c:	str	r3, [sp, #4]
   12860:	add	r3, sp, #12
   12864:	str	r3, [sp]
   12868:	mov	r3, #8
   1286c:	mov	r2, r6
   12870:	mov	r1, sl
   12874:	add	r0, r5, #2784	; 0xae0
   12878:	bl	133d4 <argp_parse@@Base>
   1287c:	ldr	r2, [r4, #16]
   12880:	ldr	r3, [r4, #12]
   12884:	cmp	r2, r3
   12888:	beq	12a90 <__assert_fail@plt+0x1708>
   1288c:	movw	r3, #2316	; 0x90c
   12890:	movt	r3, #3
   12894:	ldr	r2, [r3, #12]
   12898:	add	r1, r2, #1
   1289c:	str	r1, [r3, #12]
   128a0:	mov	r1, #0
   128a4:	strb	r1, [r2]
   128a8:	ldr	r8, [r3, #8]
   128ac:	ldr	r3, [r3, #12]
   128b0:	cmp	r3, r8
   128b4:	beq	12aa0 <__assert_fail@plt+0x1718>
   128b8:	movw	r2, #2316	; 0x90c
   128bc:	movt	r2, #3
   128c0:	ldr	r1, [r2, #24]
   128c4:	add	r3, r3, r1
   128c8:	bic	r3, r3, r1
   128cc:	str	r3, [r2, #12]
   128d0:	ldr	r1, [r2, #4]
   128d4:	ldr	r2, [r2, #16]
   128d8:	sub	r3, r3, r1
   128dc:	sub	r1, r2, r1
   128e0:	cmp	r3, r1
   128e4:	bls	128f4 <__assert_fail@plt+0x156c>
   128e8:	movw	r3, #2316	; 0x90c
   128ec:	movt	r3, #3
   128f0:	str	r2, [r3, #12]
   128f4:	movw	r3, #2316	; 0x90c
   128f8:	movt	r3, #3
   128fc:	ldr	r2, [r3, #12]
   12900:	str	r2, [r3, #8]
   12904:	ldr	r4, [sp, #12]
   12908:	subs	sl, sl, r4
   1290c:	bne	12acc <__assert_fail@plt+0x1744>
   12910:	movw	r3, #2244	; 0x8c4
   12914:	movt	r3, #3
   12918:	ldr	r3, [r3]
   1291c:	cmp	r3, #0
   12920:	beq	12ab8 <__assert_fail@plt+0x1730>
   12924:	movw	r3, #2316	; 0x90c
   12928:	movt	r3, #3
   1292c:	ldr	r2, [r3, #16]
   12930:	ldr	r3, [r3, #12]
   12934:	cmp	r2, r3
   12938:	beq	12b8c <__assert_fail@plt+0x1804>
   1293c:	movw	r3, #2316	; 0x90c
   12940:	movt	r3, #3
   12944:	ldr	r2, [r3, #12]
   12948:	add	r1, r2, #1
   1294c:	str	r1, [r3, #12]
   12950:	mov	r1, #0
   12954:	strb	r1, [r2]
   12958:	ldr	r4, [r3, #8]
   1295c:	ldr	r3, [r3, #12]
   12960:	cmp	r3, r4
   12964:	beq	12ba0 <__assert_fail@plt+0x1818>
   12968:	movw	r2, #2316	; 0x90c
   1296c:	movt	r2, #3
   12970:	ldr	r1, [r2, #24]
   12974:	add	r3, r3, r1
   12978:	bic	r3, r3, r1
   1297c:	str	r3, [r2, #12]
   12980:	ldr	r1, [r2, #4]
   12984:	ldr	r2, [r2, #16]
   12988:	sub	r3, r3, r1
   1298c:	sub	r1, r2, r1
   12990:	cmp	r3, r1
   12994:	bls	129a4 <__assert_fail@plt+0x161c>
   12998:	movw	r3, #2316	; 0x90c
   1299c:	movt	r3, #3
   129a0:	str	r2, [r3, #12]
   129a4:	movw	r3, #2316	; 0x90c
   129a8:	movt	r3, #3
   129ac:	ldr	r2, [r3, #12]
   129b0:	str	r2, [r3, #8]
   129b4:	movw	r3, #2244	; 0x8c4
   129b8:	movt	r3, #3
   129bc:	ldr	r3, [r3, #4]
   129c0:	cmp	r3, #0
   129c4:	beq	12bb8 <__assert_fail@plt+0x1830>
   129c8:	movw	r0, #40548	; 0x9e64
   129cc:	movt	r0, #1
   129d0:	bl	111c0 <getenv@plt>
   129d4:	cmp	r0, #0
   129d8:	beq	129ec <__assert_fail@plt+0x1664>
   129dc:	movw	r3, #53528	; 0xd118
   129e0:	movt	r3, #2
   129e4:	mov	r2, #0
   129e8:	str	r2, [r3]
   129ec:	movw	r5, #2244	; 0x8c4
   129f0:	movt	r5, #3
   129f4:	mov	r2, r4
   129f8:	mov	r1, r8
   129fc:	ldr	r0, [r5, #4]
   12a00:	bl	11918 <__assert_fail@plt+0x590>
   12a04:	mov	r4, r0
   12a08:	ldr	r3, [r5, #12]
   12a0c:	cmp	r3, #0
   12a10:	bne	12d4c <__assert_fail@plt+0x19c4>
   12a14:	mov	r0, r4
   12a18:	bl	11238 <strlen@plt>
   12a1c:	add	r2, r4, r0
   12a20:	movw	r3, #39984	; 0x9c30
   12a24:	movt	r3, #1
   12a28:	ldrh	r1, [r3]
   12a2c:	strh	r1, [r4, r0]
   12a30:	ldrb	r3, [r3, #2]
   12a34:	strb	r3, [r2, #2]
   12a38:	movw	r5, #11620	; 0x2d64
   12a3c:	movt	r5, #1
   12a40:	mov	r1, r5
   12a44:	mov	r0, #15
   12a48:	bl	11148 <signal@plt>
   12a4c:	mov	r1, r5
   12a50:	mov	r0, #2
   12a54:	bl	11148 <signal@plt>
   12a58:	movw	r3, #2244	; 0x8c4
   12a5c:	movt	r3, #3
   12a60:	ldr	r1, [r3, #8]
   12a64:	ldr	r0, [r3, #4]
   12a68:	bl	123c8 <__assert_fail@plt+0x1040>
   12a6c:	movw	r5, #2360	; 0x938
   12a70:	movt	r5, #3
   12a74:	str	r0, [r5]
   12a78:	mov	r1, r4
   12a7c:	bl	1250c <__assert_fail@plt+0x1184>
   12a80:	ldr	r0, [r5]
   12a84:	bl	11370 <close@plt>
   12a88:	mov	r0, #0
   12a8c:	bl	1122c <exit@plt>
   12a90:	mov	r1, #1
   12a94:	mov	r0, r4
   12a98:	bl	14380 <_obstack_newchunk@@Base>
   12a9c:	b	1288c <__assert_fail@plt+0x1504>
   12aa0:	movw	r2, #2316	; 0x90c
   12aa4:	movt	r2, #3
   12aa8:	ldrb	r1, [r2, #40]	; 0x28
   12aac:	orr	r1, r1, #2
   12ab0:	strb	r1, [r2, #40]	; 0x28
   12ab4:	b	128b8 <__assert_fail@plt+0x1530>
   12ab8:	movw	r2, #40264	; 0x9d48
   12abc:	movt	r2, #1
   12ac0:	mov	r1, #0
   12ac4:	mov	r0, #1
   12ac8:	bl	111b4 <error@plt>
   12acc:	movw	r3, #2244	; 0x8c4
   12ad0:	movt	r3, #3
   12ad4:	ldr	r3, [r3]
   12ad8:	cmp	r3, #0
   12adc:	bne	12924 <__assert_fail@plt+0x159c>
   12ae0:	add	r6, r6, r4, lsl #2
   12ae4:	movw	r4, #2316	; 0x90c
   12ae8:	movt	r4, #3
   12aec:	mov	r7, #32
   12af0:	mov	r9, #1
   12af4:	b	12b1c <__assert_fail@plt+0x1794>
   12af8:	mov	r1, r0
   12afc:	mov	r0, r4
   12b00:	bl	14380 <_obstack_newchunk@@Base>
   12b04:	b	12b4c <__assert_fail@plt+0x17c4>
   12b08:	ldr	r3, [r4, #12]
   12b0c:	add	r2, r3, #1
   12b10:	str	r2, [r4, #12]
   12b14:	strb	r7, [r3]
   12b18:	mov	sl, r5
   12b1c:	sub	r5, sl, #1
   12b20:	cmp	sl, #0
   12b24:	beq	12924 <__assert_fail@plt+0x159c>
   12b28:	ldr	fp, [r6], #4
   12b2c:	mov	r0, fp
   12b30:	bl	11238 <strlen@plt>
   12b34:	mov	sl, r0
   12b38:	ldr	r3, [r4, #16]
   12b3c:	ldr	r2, [r4, #12]
   12b40:	sub	r3, r3, r2
   12b44:	cmp	r0, r3
   12b48:	bhi	12af8 <__assert_fail@plt+0x1770>
   12b4c:	mov	r2, sl
   12b50:	mov	r1, fp
   12b54:	ldr	r0, [r4, #12]
   12b58:	bl	1113c <memcpy@plt>
   12b5c:	ldr	r0, [r4, #12]
   12b60:	add	r0, r0, sl
   12b64:	str	r0, [r4, #12]
   12b68:	cmp	r5, #0
   12b6c:	beq	12b18 <__assert_fail@plt+0x1790>
   12b70:	ldr	r3, [r4, #16]
   12b74:	cmp	r0, r3
   12b78:	bne	12b08 <__assert_fail@plt+0x1780>
   12b7c:	mov	r1, r9
   12b80:	mov	r0, r4
   12b84:	bl	14380 <_obstack_newchunk@@Base>
   12b88:	b	12b08 <__assert_fail@plt+0x1780>
   12b8c:	mov	r1, #1
   12b90:	movw	r0, #2316	; 0x90c
   12b94:	movt	r0, #3
   12b98:	bl	14380 <_obstack_newchunk@@Base>
   12b9c:	b	1293c <__assert_fail@plt+0x15b4>
   12ba0:	movw	r2, #2316	; 0x90c
   12ba4:	movt	r2, #3
   12ba8:	ldrb	r1, [r2, #40]	; 0x28
   12bac:	orr	r1, r1, #2
   12bb0:	strb	r1, [r2, #40]	; 0x28
   12bb4:	b	12968 <__assert_fail@plt+0x15e0>
   12bb8:	ldr	r1, [pc, #416]	; 12d60 <__assert_fail@plt+0x19d8>
   12bbc:	mov	r0, r4
   12bc0:	bl	11c94 <__assert_fail@plt+0x90c>
   12bc4:	cmp	r0, #0
   12bc8:	beq	12c44 <__assert_fail@plt+0x18bc>
   12bcc:	movw	r3, #2244	; 0x8c4
   12bd0:	movt	r3, #3
   12bd4:	ldr	r3, [r3, #12]
   12bd8:	cmp	r3, #0
   12bdc:	bne	12c78 <__assert_fail@plt+0x18f0>
   12be0:	mov	r1, #0
   12be4:	movw	r0, #40324	; 0x9d84
   12be8:	movt	r0, #1
   12bec:	bl	123c8 <__assert_fail@plt+0x1040>
   12bf0:	movw	r6, #2360	; 0x938
   12bf4:	movt	r6, #3
   12bf8:	str	r0, [r6]
   12bfc:	mov	r1, r4
   12c00:	bl	121c4 <__assert_fail@plt+0xe3c>
   12c04:	movw	r5, #2244	; 0x8c4
   12c08:	movt	r5, #3
   12c0c:	str	r0, [r5, #4]
   12c10:	ldr	r0, [r6]
   12c14:	bl	11370 <close@plt>
   12c18:	ldr	r1, [r5, #4]
   12c1c:	cmp	r1, #0
   12c20:	beq	12c88 <__assert_fail@plt+0x1900>
   12c24:	movw	r0, #40344	; 0x9d98
   12c28:	movt	r0, #1
   12c2c:	bl	110dc <printf@plt>
   12c30:	movw	r3, #2244	; 0x8c4
   12c34:	movt	r3, #3
   12c38:	ldr	r3, [r3, #4]
   12c3c:	cmp	r3, #0
   12c40:	bne	129c8 <__assert_fail@plt+0x1640>
   12c44:	mov	r0, r4
   12c48:	bl	11d60 <__assert_fail@plt+0x9d8>
   12c4c:	movw	r3, #2244	; 0x8c4
   12c50:	movt	r3, #3
   12c54:	str	r0, [r3, #4]
   12c58:	ldrb	r3, [r0]
   12c5c:	cmp	r3, #3
   12c60:	ldrls	pc, [pc, r3, lsl #2]
   12c64:	b	12d24 <__assert_fail@plt+0x199c>
   12c68:	muleq	r1, r0, ip
   12c6c:	andeq	r2, r1, r8, ror #25
   12c70:	strdeq	r2, [r1], -r4
   12c74:	andeq	r2, r1, r0, lsl sp
   12c78:	movw	r0, #40288	; 0x9d60
   12c7c:	movt	r0, #1
   12c80:	bl	111cc <puts@plt>
   12c84:	b	12be0 <__assert_fail@plt+0x1858>
   12c88:	mov	r0, #0
   12c8c:	bl	1122c <exit@plt>
   12c90:	movw	r0, #40380	; 0x9dbc
   12c94:	movt	r0, #1
   12c98:	bl	111c0 <getenv@plt>
   12c9c:	cmp	r0, #0
   12ca0:	movw	r3, #2244	; 0x8c4
   12ca4:	movt	r3, #3
   12ca8:	strne	r0, [r3, #4]
   12cac:	movweq	r2, #40324	; 0x9d84
   12cb0:	movteq	r2, #1
   12cb4:	streq	r2, [r3, #4]
   12cb8:	movw	r3, #2244	; 0x8c4
   12cbc:	movt	r3, #3
   12cc0:	ldr	r3, [r3, #12]
   12cc4:	cmp	r3, #0
   12cc8:	beq	129c8 <__assert_fail@plt+0x1640>
   12ccc:	movw	r3, #2244	; 0x8c4
   12cd0:	movt	r3, #3
   12cd4:	ldr	r1, [r3, #4]
   12cd8:	movw	r0, #40396	; 0x9dcc
   12cdc:	movt	r0, #1
   12ce0:	bl	110dc <printf@plt>
   12ce4:	b	129c8 <__assert_fail@plt+0x1640>
   12ce8:	movw	r0, #40424	; 0x9de8
   12cec:	movt	r0, #1
   12cf0:	bl	111cc <puts@plt>
   12cf4:	movw	r3, #2244	; 0x8c4
   12cf8:	movt	r3, #3
   12cfc:	ldr	r0, [r3, #4]
   12d00:	add	r0, r0, #1
   12d04:	bl	111cc <puts@plt>
   12d08:	mov	r0, #0
   12d0c:	bl	1122c <exit@plt>
   12d10:	movw	r0, #40496	; 0x9e30
   12d14:	movt	r0, #1
   12d18:	bl	111cc <puts@plt>
   12d1c:	mov	r0, #0
   12d20:	bl	1122c <exit@plt>
   12d24:	movw	r3, #2244	; 0x8c4
   12d28:	movt	r3, #3
   12d2c:	ldr	r3, [r3, #12]
   12d30:	cmp	r3, #0
   12d34:	beq	129c8 <__assert_fail@plt+0x1640>
   12d38:	mov	r1, r0
   12d3c:	movw	r0, #40528	; 0x9e50
   12d40:	movt	r0, #1
   12d44:	bl	110dc <printf@plt>
   12d48:	b	129c8 <__assert_fail@plt+0x1640>
   12d4c:	mov	r1, r0
   12d50:	movw	r0, #40560	; 0x9e70
   12d54:	movt	r0, #1
   12d58:	bl	110dc <printf@plt>
   12d5c:	b	12a14 <__assert_fail@plt+0x168c>
   12d60:	andeq	sp, r2, r4, lsl ip
   12d64:	str	r4, [sp, #-8]!
   12d68:	str	lr, [sp, #4]
   12d6c:	mov	r4, r0
   12d70:	movw	r3, #2360	; 0x938
   12d74:	movt	r3, #3
   12d78:	ldr	r0, [r3]
   12d7c:	bl	11370 <close@plt>
   12d80:	mov	r1, r4
   12d84:	movw	r0, #40584	; 0x9e88
   12d88:	movt	r0, #1
   12d8c:	bl	1238c <__assert_fail@plt+0x1004>
   12d90:	ldr	ip, [r0]
   12d94:	cmp	ip, #0
   12d98:	beq	12e00 <__assert_fail@plt+0x1a78>
   12d9c:	strd	r4, [sp, #-16]!
   12da0:	str	r6, [sp, #8]
   12da4:	str	lr, [sp, #12]
   12da8:	mov	ip, r2
   12dac:	mov	r5, r1
   12db0:	mov	r4, r0
   12db4:	ldr	r2, [r0, #32]
   12db8:	str	r2, [r1, #36]	; 0x24
   12dbc:	ldr	r2, [r0, #24]
   12dc0:	str	r2, [r1, #28]
   12dc4:	ldr	r2, [r0, #28]
   12dc8:	str	r2, [r1, #32]
   12dcc:	ldr	r2, [r0, #12]
   12dd0:	str	r2, [r1, #20]
   12dd4:	ldr	r6, [r0]
   12dd8:	mov	r2, r1
   12ddc:	mov	r1, r3
   12de0:	mov	r0, ip
   12de4:	blx	r6
   12de8:	ldr	r3, [r5, #36]	; 0x24
   12dec:	str	r3, [r4, #32]
   12df0:	ldrd	r4, [sp]
   12df4:	ldr	r6, [sp, #8]
   12df8:	add	sp, sp, #12
   12dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   12e00:	mov	r0, #7
   12e04:	bx	lr
   12e08:	strd	r4, [sp, #-16]!
   12e0c:	str	r6, [sp, #8]
   12e10:	str	lr, [sp, #12]
   12e14:	ldr	r5, [r0, #16]
   12e18:	ldr	r3, [r0]
   12e1c:	cmp	r3, #0
   12e20:	beq	12e38 <__assert_fail@plt+0x1ab0>
   12e24:	ldr	r2, [r1, #8]
   12e28:	add	r2, r2, #1
   12e2c:	str	r2, [r1, #8]
   12e30:	mov	r2, #0
   12e34:	b	12e58 <__assert_fail@plt+0x1ad0>
   12e38:	ldr	r3, [r0, #4]
   12e3c:	cmp	r3, #0
   12e40:	beq	12ea8 <__assert_fail@plt+0x1b20>
   12e44:	ldr	r3, [r1, #8]
   12e48:	add	r3, r3, #1
   12e4c:	str	r3, [r1, #8]
   12e50:	b	12ea8 <__assert_fail@plt+0x1b20>
   12e54:	add	r2, r2, #1
   12e58:	add	r3, r3, #24
   12e5c:	ldr	r0, [r3, #-20]	; 0xffffffec
   12e60:	cmp	r0, #0
   12e64:	bne	12e54 <__assert_fail@plt+0x1acc>
   12e68:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12e6c:	cmp	r0, #0
   12e70:	bne	12e54 <__assert_fail@plt+0x1acc>
   12e74:	ldr	r0, [r3, #-8]
   12e78:	cmp	r0, #0
   12e7c:	bne	12e54 <__assert_fail@plt+0x1acc>
   12e80:	ldr	r0, [r3, #-4]
   12e84:	cmp	r0, #0
   12e88:	bne	12e54 <__assert_fail@plt+0x1acc>
   12e8c:	add	r0, r2, r2, lsl #1
   12e90:	ldr	r3, [r1]
   12e94:	add	r3, r3, r0
   12e98:	str	r3, [r1]
   12e9c:	ldr	r3, [r1, #4]
   12ea0:	add	r2, r3, r2
   12ea4:	str	r2, [r1, #4]
   12ea8:	cmp	r5, #0
   12eac:	beq	12ee0 <__assert_fail@plt+0x1b58>
   12eb0:	ldr	r0, [r5]
   12eb4:	cmp	r0, #0
   12eb8:	beq	12ee0 <__assert_fail@plt+0x1b58>
   12ebc:	mov	r4, r1
   12ec0:	mov	r1, r4
   12ec4:	bl	12e08 <__assert_fail@plt+0x1a80>
   12ec8:	ldr	r3, [r4, #12]
   12ecc:	add	r3, r3, #1
   12ed0:	str	r3, [r4, #12]
   12ed4:	ldr	r0, [r5, #16]!
   12ed8:	cmp	r0, #0
   12edc:	bne	12ec0 <__assert_fail@plt+0x1b38>
   12ee0:	ldrd	r4, [sp]
   12ee4:	ldr	r6, [sp, #8]
   12ee8:	add	sp, sp, #12
   12eec:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef0:	cmp	r0, #86	; 0x56
   12ef4:	beq	12f00 <__assert_fail@plt+0x1b78>
   12ef8:	mov	r0, #7
   12efc:	bx	lr
   12f00:	str	r4, [sp, #-8]!
   12f04:	str	lr, [sp, #4]
   12f08:	mov	r4, r2
   12f0c:	movw	r3, #2264	; 0x8d8
   12f10:	movt	r3, #3
   12f14:	ldr	r3, [r3]
   12f18:	cmp	r3, #0
   12f1c:	beq	12f48 <__assert_fail@plt+0x1bc0>
   12f20:	mov	r1, r2
   12f24:	ldr	r0, [r2, #48]	; 0x30
   12f28:	blx	r3
   12f2c:	ldr	r3, [r4, #16]
   12f30:	tst	r3, #32
   12f34:	beq	12f8c <__assert_fail@plt+0x1c04>
   12f38:	mov	r0, #0
   12f3c:	ldr	r4, [sp]
   12f40:	add	sp, sp, #4
   12f44:	pop	{pc}		; (ldr pc, [sp], #4)
   12f48:	movw	r3, #2368	; 0x940
   12f4c:	movt	r3, #3
   12f50:	ldr	r2, [r3]
   12f54:	cmp	r2, #0
   12f58:	beq	12f70 <__assert_fail@plt+0x1be8>
   12f5c:	movw	r1, #47684	; 0xba44
   12f60:	movt	r1, #1
   12f64:	ldr	r0, [r4, #48]	; 0x30
   12f68:	bl	11250 <fprintf@plt>
   12f6c:	b	12f2c <__assert_fail@plt+0x1ba4>
   12f70:	movw	r2, #47248	; 0xb890
   12f74:	movt	r2, #1
   12f78:	movw	r1, #47284	; 0xb8b4
   12f7c:	movt	r1, #1
   12f80:	mov	r0, r4
   12f84:	bl	1836c <argp_error@@Base>
   12f88:	b	12f2c <__assert_fail@plt+0x1ba4>
   12f8c:	mov	r0, #0
   12f90:	bl	1122c <exit@plt>
   12f94:	strd	r4, [sp, #-16]!
   12f98:	str	r6, [sp, #8]
   12f9c:	str	lr, [sp, #12]
   12fa0:	mov	r4, r2
   12fa4:	cmn	r0, #3
   12fa8:	beq	13060 <__assert_fail@plt+0x1cd8>
   12fac:	mov	r5, r1
   12fb0:	ble	12fec <__assert_fail@plt+0x1c64>
   12fb4:	cmn	r0, #2
   12fb8:	beq	13078 <__assert_fail@plt+0x1cf0>
   12fbc:	cmp	r0, #63	; 0x3f
   12fc0:	movne	r0, #7
   12fc4:	bne	12fdc <__assert_fail@plt+0x1c54>
   12fc8:	movw	r2, #634	; 0x27a
   12fcc:	ldr	r1, [r4, #48]	; 0x30
   12fd0:	mov	r0, r4
   12fd4:	bl	182a4 <argp_state_help@@Base>
   12fd8:	mov	r0, #0
   12fdc:	ldrd	r4, [sp]
   12fe0:	ldr	r6, [sp, #8]
   12fe4:	add	sp, sp, #12
   12fe8:	pop	{pc}		; (ldr pc, [sp], #4)
   12fec:	cmn	r0, #4
   12ff0:	movne	r0, #7
   12ff4:	bne	12fdc <__assert_fail@plt+0x1c54>
   12ff8:	movw	r0, #47288	; 0xb8b8
   12ffc:	movt	r0, #1
   13000:	mov	r2, #10
   13004:	mov	r1, #0
   13008:	cmp	r5, r1
   1300c:	movne	r0, r5
   13010:	bl	110d0 <strtol@plt>
   13014:	movw	r3, #2260	; 0x8d4
   13018:	movt	r3, #3
   1301c:	str	r0, [r3]
   13020:	ldr	r2, [r3]
   13024:	sub	r1, r2, #1
   13028:	str	r1, [r3]
   1302c:	cmp	r2, #0
   13030:	ble	130c0 <__assert_fail@plt+0x1d38>
   13034:	mov	r5, #1
   13038:	mov	r4, r3
   1303c:	mov	r0, r5
   13040:	bl	11160 <sleep@plt>
   13044:	ldr	r3, [r4]
   13048:	sub	r2, r3, #1
   1304c:	str	r2, [r4]
   13050:	cmp	r3, #0
   13054:	bgt	1303c <__assert_fail@plt+0x1cb4>
   13058:	mov	r0, #0
   1305c:	b	12fdc <__assert_fail@plt+0x1c54>
   13060:	movw	r2, #513	; 0x201
   13064:	ldr	r1, [r4, #48]	; 0x30
   13068:	mov	r0, r4
   1306c:	bl	182a4 <argp_state_help@@Base>
   13070:	mov	r0, #0
   13074:	b	12fdc <__assert_fail@plt+0x1c54>
   13078:	movw	r3, #2228	; 0x8b4
   1307c:	movt	r3, #3
   13080:	str	r1, [r3]
   13084:	mov	r0, r1
   13088:	bl	13fe8 <argp_parse@@Base+0xc14>
   1308c:	str	r0, [r4, #40]	; 0x28
   13090:	movw	r3, #2224	; 0x8b0
   13094:	movt	r3, #3
   13098:	str	r0, [r3]
   1309c:	ldr	r3, [r4, #16]
   130a0:	and	r3, r3, #3
   130a4:	cmp	r3, #1
   130a8:	movne	r0, #0
   130ac:	bne	12fdc <__assert_fail@plt+0x1c54>
   130b0:	ldr	r3, [r4, #8]
   130b4:	str	r5, [r3]
   130b8:	mov	r0, #0
   130bc:	b	12fdc <__assert_fail@plt+0x1c54>
   130c0:	mov	r0, #0
   130c4:	b	12fdc <__assert_fail@plt+0x1c54>
   130c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   130cc:	strd	r6, [sp, #8]
   130d0:	strd	r8, [sp, #16]
   130d4:	strd	sl, [sp, #24]
   130d8:	str	lr, [sp, #32]
   130dc:	sub	sp, sp, #36	; 0x24
   130e0:	str	r0, [sp, #16]
   130e4:	str	r1, [sp, #20]
   130e8:	str	r2, [sp, #24]
   130ec:	str	r3, [sp, #8]
   130f0:	ldr	r8, [sp, #72]	; 0x48
   130f4:	ldr	r6, [r0]
   130f8:	ldr	sl, [r0, #16]
   130fc:	cmp	r6, #0
   13100:	beq	1311c <__assert_fail@plt+0x1d94>
   13104:	mov	r4, r6
   13108:	movw	r3, #36409	; 0x8e39
   1310c:	movt	r3, #14563	; 0x38e3
   13110:	str	r3, [sp, #12]
   13114:	str	sl, [sp, #28]
   13118:	b	13160 <__assert_fail@plt+0x1dd8>
   1311c:	ldr	r3, [r0, #4]
   13120:	cmp	r3, #0
   13124:	bne	132ec <__assert_fail@plt+0x1f64>
   13128:	ldr	r0, [sp, #8]
   1312c:	str	r6, [sp, #8]
   13130:	b	13370 <__assert_fail@plt+0x1fe8>
   13134:	ldr	r0, [r7, #16]!
   13138:	cmp	r0, #0
   1313c:	beq	13240 <__assert_fail@plt+0x1eb8>
   13140:	mov	r1, r9
   13144:	bl	110c4 <strcmp@plt>
   13148:	cmp	r0, #0
   1314c:	bne	13134 <__assert_fail@plt+0x1dac>
   13150:	sub	sl, r7, fp
   13154:	cmp	sl, #0
   13158:	blt	13240 <__assert_fail@plt+0x1eb8>
   1315c:	add	r4, r4, #24
   13160:	ldr	r7, [r4, #4]
   13164:	cmp	r7, #0
   13168:	bne	13178 <__assert_fail@plt+0x1df0>
   1316c:	ldr	r3, [r4]
   13170:	cmp	r3, #0
   13174:	beq	132d0 <__assert_fail@plt+0x1f48>
   13178:	ldr	r3, [r4, #12]
   1317c:	and	r2, r3, #4
   13180:	cmp	r2, #0
   13184:	moveq	r6, r4
   13188:	ldr	r5, [r6, #12]
   1318c:	ands	r5, r5, #8
   13190:	bne	1315c <__assert_fail@plt+0x1dd4>
   13194:	tst	r3, #8
   13198:	bne	13218 <__assert_fail@plt+0x1e90>
   1319c:	sub	r3, r7, #1
   131a0:	cmp	r3, #254	; 0xfe
   131a4:	bhi	13218 <__assert_fail@plt+0x1e90>
   131a8:	bl	11220 <__ctype_b_loc@plt>
   131ac:	ldr	r2, [r0]
   131b0:	lsl	r3, r7, #1
   131b4:	ldrh	r3, [r2, r3]
   131b8:	tst	r3, #16384	; 0x4000
   131bc:	beq	13218 <__assert_fail@plt+0x1e90>
   131c0:	ldr	r3, [r8, #4]
   131c4:	add	r2, r3, #1
   131c8:	str	r2, [r8, #4]
   131cc:	strb	r7, [r3]
   131d0:	ldr	r3, [r6, #8]
   131d4:	cmp	r3, #0
   131d8:	beq	1320c <__assert_fail@plt+0x1e84>
   131dc:	ldr	r3, [r8, #4]
   131e0:	add	r2, r3, #1
   131e4:	str	r2, [r8, #4]
   131e8:	mov	r1, #58	; 0x3a
   131ec:	strb	r1, [r3]
   131f0:	ldr	r3, [r6, #12]
   131f4:	tst	r3, #1
   131f8:	beq	1320c <__assert_fail@plt+0x1e84>
   131fc:	ldr	r3, [r8, #4]
   13200:	add	r2, r3, #1
   13204:	str	r2, [r8, #4]
   13208:	strb	r1, [r3]
   1320c:	ldr	r3, [r8, #4]
   13210:	mov	r2, #0
   13214:	strb	r2, [r3]
   13218:	ldr	r9, [r4]
   1321c:	cmp	r9, #0
   13220:	beq	1315c <__assert_fail@plt+0x1dd4>
   13224:	ldr	r3, [r8]
   13228:	ldr	fp, [r3, #8]
   1322c:	ldr	r0, [fp]
   13230:	cmp	r0, #0
   13234:	beq	13240 <__assert_fail@plt+0x1eb8>
   13238:	mov	r7, fp
   1323c:	b	13140 <__assert_fail@plt+0x1db8>
   13240:	ldr	r3, [r8, #8]
   13244:	str	r9, [r3]
   13248:	ldr	r3, [r6, #8]
   1324c:	cmp	r3, #0
   13250:	beq	13268 <__assert_fail@plt+0x1ee0>
   13254:	ldr	r3, [r6, #12]
   13258:	and	r3, r3, #1
   1325c:	cmp	r3, #0
   13260:	movne	r5, #2
   13264:	moveq	r5, #1
   13268:	ldr	r3, [r8, #8]
   1326c:	str	r5, [r3, #4]
   13270:	ldr	r3, [r8, #8]
   13274:	mov	r2, #0
   13278:	str	r2, [r3, #8]
   1327c:	ldr	r3, [r4, #4]
   13280:	cmp	r3, r2
   13284:	ldreq	r3, [r6, #4]
   13288:	bic	r2, r3, #-16777216	; 0xff000000
   1328c:	ldr	r1, [r8, #8]
   13290:	ldr	r3, [r8]
   13294:	ldr	r3, [r3, #48]	; 0x30
   13298:	ldr	r0, [sp, #8]
   1329c:	sub	r3, r0, r3
   132a0:	asr	r3, r3, #2
   132a4:	ldr	r0, [sp, #12]
   132a8:	mul	r3, r0, r3
   132ac:	add	r3, r3, #1
   132b0:	add	r3, r2, r3, lsl #24
   132b4:	str	r3, [r1, #12]
   132b8:	ldr	r3, [r8, #8]
   132bc:	add	r2, r3, #16
   132c0:	str	r2, [r8, #8]
   132c4:	mov	r2, #0
   132c8:	str	r2, [r3, #16]
   132cc:	b	1315c <__assert_fail@plt+0x1dd4>
   132d0:	ldr	r3, [r4, #16]
   132d4:	cmp	r3, #0
   132d8:	bne	13178 <__assert_fail@plt+0x1df0>
   132dc:	ldr	r3, [r4, #20]
   132e0:	cmp	r3, #0
   132e4:	bne	13178 <__assert_fail@plt+0x1df0>
   132e8:	ldr	sl, [sp, #28]
   132ec:	ldr	r1, [sp, #16]
   132f0:	ldr	r3, [r1, #4]
   132f4:	ldr	r2, [sp, #8]
   132f8:	str	r3, [r2]
   132fc:	str	r1, [r2, #4]
   13300:	ldr	r3, [r8, #4]
   13304:	str	r3, [r2, #8]
   13308:	mov	r3, #0
   1330c:	str	r3, [r2, #12]
   13310:	ldr	r1, [sp, #20]
   13314:	str	r1, [r2, #16]
   13318:	ldr	r1, [sp, #24]
   1331c:	str	r1, [r2, #20]
   13320:	str	r3, [r2, #24]
   13324:	str	r3, [r2, #32]
   13328:	str	r3, [r2, #28]
   1332c:	cmp	sl, r3
   13330:	beq	13368 <__assert_fail@plt+0x1fe0>
   13334:	ldr	r3, [sl]
   13338:	cmp	r3, #0
   1333c:	beq	133cc <__assert_fail@plt+0x2044>
   13340:	mov	r3, #0
   13344:	add	r3, r3, #1
   13348:	ldr	r2, [sl, r3, lsl #4]
   1334c:	cmp	r2, #0
   13350:	bne	13344 <__assert_fail@plt+0x1fbc>
   13354:	ldr	r2, [r8, #12]
   13358:	ldr	r1, [sp, #8]
   1335c:	str	r2, [r1, #28]
   13360:	add	r3, r2, r3, lsl #2
   13364:	str	r3, [r8, #12]
   13368:	ldr	r3, [sp, #8]
   1336c:	add	r0, r3, #36	; 0x24
   13370:	cmp	sl, #0
   13374:	beq	133b0 <__assert_fail@plt+0x2028>
   13378:	ldr	ip, [sl]
   1337c:	cmp	ip, #0
   13380:	beq	133b0 <__assert_fail@plt+0x2028>
   13384:	mov	r2, #0
   13388:	add	r4, r2, #1
   1338c:	str	r8, [sp]
   13390:	mov	r3, r0
   13394:	ldr	r1, [sp, #8]
   13398:	mov	r0, ip
   1339c:	bl	130c8 <__assert_fail@plt+0x1d40>
   133a0:	ldr	ip, [sl, r4, lsl #4]
   133a4:	mov	r2, r4
   133a8:	cmp	ip, #0
   133ac:	bne	13388 <__assert_fail@plt+0x2000>
   133b0:	add	sp, sp, #36	; 0x24
   133b4:	ldrd	r4, [sp]
   133b8:	ldrd	r6, [sp, #8]
   133bc:	ldrd	r8, [sp, #16]
   133c0:	ldrd	sl, [sp, #24]
   133c4:	add	sp, sp, #32
   133c8:	pop	{pc}		; (ldr pc, [sp], #4)
   133cc:	mov	r3, #0
   133d0:	b	13354 <__assert_fail@plt+0x1fcc>

000133d4 <argp_parse@@Base>:
   133d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   133d8:	strd	r6, [sp, #8]
   133dc:	strd	r8, [sp, #16]
   133e0:	strd	sl, [sp, #24]
   133e4:	str	lr, [sp, #32]
   133e8:	add	fp, sp, #32
   133ec:	sub	sp, sp, #228	; 0xe4
   133f0:	mov	r8, r0
   133f4:	str	r1, [fp, #-240]	; 0xffffff10
   133f8:	str	r2, [fp, #-232]	; 0xffffff18
   133fc:	mov	r7, r3
   13400:	tst	r3, #1
   13404:	bne	13430 <argp_parse@@Base+0x5c>
   13408:	movw	r3, #2228	; 0x8b4
   1340c:	movt	r3, #3
   13410:	ldr	r3, [r3]
   13414:	cmp	r3, #0
   13418:	beq	13488 <argp_parse@@Base+0xb4>
   1341c:	movw	r3, #2224	; 0x8b0
   13420:	movt	r3, #3
   13424:	ldr	r3, [r3]
   13428:	cmp	r3, #0
   1342c:	beq	1349c <argp_parse@@Base+0xc8>
   13430:	tst	r7, #16
   13434:	beq	134b8 <argp_parse@@Base+0xe4>
   13438:	str	r7, [fp, #-244]	; 0xffffff0c
   1343c:	mov	r3, #0
   13440:	str	r3, [fp, #-188]	; 0xffffff44
   13444:	str	r3, [fp, #-184]	; 0xffffff48
   13448:	str	r3, [fp, #-180]	; 0xffffff4c
   1344c:	str	r3, [fp, #-176]	; 0xffffff50
   13450:	str	r3, [fp, #-172]	; 0xffffff54
   13454:	str	r3, [fp, #-168]	; 0xffffff58
   13458:	str	r3, [fp, #-164]	; 0xffffff5c
   1345c:	ands	r2, r7, #4
   13460:	str	r2, [fp, #-248]	; 0xffffff08
   13464:	moveq	r2, #1
   13468:	movne	r2, r3
   1346c:	str	r2, [fp, #-228]	; 0xffffff1c
   13470:	str	r3, [fp, #-224]	; 0xffffff20
   13474:	str	r3, [fp, #-220]	; 0xffffff24
   13478:	str	r3, [fp, #-216]	; 0xffffff28
   1347c:	cmp	r8, r3
   13480:	beq	13584 <argp_parse@@Base+0x1b0>
   13484:	b	13578 <argp_parse@@Base+0x1a4>
   13488:	ldr	r2, [r2]
   1348c:	movw	r3, #2228	; 0x8b4
   13490:	movt	r3, #3
   13494:	str	r2, [r3]
   13498:	b	1341c <argp_parse@@Base+0x48>
   1349c:	ldr	r3, [fp, #-232]	; 0xffffff18
   134a0:	ldr	r0, [r3]
   134a4:	bl	13fe8 <argp_parse@@Base+0xc14>
   134a8:	movw	r3, #2224	; 0x8b0
   134ac:	movt	r3, #3
   134b0:	str	r0, [r3]
   134b4:	b	13430 <argp_parse@@Base+0x5c>
   134b8:	sub	sp, sp, #64	; 0x40
   134bc:	add	r5, sp, #8
   134c0:	sub	sp, sp, #32
   134c4:	add	r4, sp, #8
   134c8:	mov	r1, #0
   134cc:	str	r1, [r4]
   134d0:	str	r1, [r4, #4]
   134d4:	str	r1, [r4, #8]
   134d8:	str	r1, [r4, #12]
   134dc:	str	r1, [r4, #20]
   134e0:	str	r1, [r4, #24]
   134e4:	str	r5, [r4, #16]
   134e8:	mov	r2, #64	; 0x40
   134ec:	mov	r0, r5
   134f0:	bl	11280 <memset@plt>
   134f4:	cmp	r8, #0
   134f8:	mov	r0, r5
   134fc:	strne	r8, [r0], #16
   13500:	movw	r3, #46968	; 0xb778
   13504:	movt	r3, #1
   13508:	str	r3, [r0]
   1350c:	movw	r3, #2368	; 0x940
   13510:	movt	r3, #3
   13514:	ldr	r3, [r3]
   13518:	cmp	r3, #0
   1351c:	beq	13744 <argp_parse@@Base+0x370>
   13520:	add	r2, r0, #32
   13524:	ldr	r3, [pc, #2548]	; 13f20 <argp_parse@@Base+0xb4c>
   13528:	str	r3, [r0, #16]
   1352c:	mov	r3, #0
   13530:	str	r3, [r2]
   13534:	str	r7, [fp, #-244]	; 0xffffff0c
   13538:	str	r3, [fp, #-188]	; 0xffffff44
   1353c:	str	r3, [fp, #-184]	; 0xffffff48
   13540:	str	r3, [fp, #-180]	; 0xffffff4c
   13544:	str	r3, [fp, #-176]	; 0xffffff50
   13548:	str	r3, [fp, #-172]	; 0xffffff54
   1354c:	str	r3, [fp, #-168]	; 0xffffff58
   13550:	str	r3, [fp, #-164]	; 0xffffff5c
   13554:	ands	r2, r7, #4
   13558:	str	r2, [fp, #-248]	; 0xffffff08
   1355c:	moveq	r2, #1
   13560:	movne	r2, r3
   13564:	str	r2, [fp, #-228]	; 0xffffff1c
   13568:	str	r3, [fp, #-224]	; 0xffffff20
   1356c:	str	r3, [fp, #-220]	; 0xffffff24
   13570:	str	r3, [fp, #-216]	; 0xffffff28
   13574:	mov	r8, r4
   13578:	sub	r1, fp, #228	; 0xe4
   1357c:	mov	r0, r8
   13580:	bl	12e08 <__assert_fail@plt+0x1a80>
   13584:	ldr	r4, [fp, #-220]	; 0xffffff24
   13588:	add	r4, r4, #1
   1358c:	add	r4, r4, r4, lsl #3
   13590:	lsl	r4, r4, #2
   13594:	ldr	r3, [fp, #-216]	; 0xffffff28
   13598:	lsl	r3, r3, #2
   1359c:	str	r3, [fp, #-236]	; 0xffffff14
   135a0:	add	r9, r3, r4
   135a4:	ldr	r5, [fp, #-224]	; 0xffffff20
   135a8:	add	r5, r5, #1
   135ac:	add	r5, r9, r5, lsl #4
   135b0:	ldr	r0, [fp, #-228]	; 0xffffff1c
   135b4:	add	r0, r0, #1
   135b8:	add	r0, r0, r5
   135bc:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   135c0:	mov	r6, r0
   135c4:	str	r0, [fp, #-40]	; 0xffffffd8
   135c8:	cmp	r0, #0
   135cc:	moveq	r4, #12
   135d0:	beq	13d40 <argp_parse@@Base+0x96c>
   135d4:	str	r0, [fp, #-112]	; 0xffffff90
   135d8:	add	r4, r0, r4
   135dc:	str	r4, [fp, #-104]	; 0xffffff98
   135e0:	add	r9, r0, r9
   135e4:	str	r9, [fp, #-152]	; 0xffffff68
   135e8:	add	sl, r0, r5
   135ec:	str	sl, [fp, #-156]	; 0xffffff64
   135f0:	mov	r3, #1
   135f4:	str	r3, [fp, #-196]	; 0xffffff3c
   135f8:	str	r3, [fp, #-192]	; 0xffffff40
   135fc:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   13600:	strd	r2, [fp, #-148]	; 0xffffff6c
   13604:	ldrd	r2, [fp, #-188]	; 0xffffff44
   13608:	strd	r2, [fp, #-140]	; 0xffffff74
   1360c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   13610:	strd	r2, [fp, #-132]	; 0xffffff7c
   13614:	ldrd	r2, [fp, #-172]	; 0xffffff54
   13618:	strd	r2, [fp, #-124]	; 0xffffff84
   1361c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   13620:	str	r3, [fp, #-116]	; 0xffffff8c
   13624:	ldr	r2, [fp, #-236]	; 0xffffff14
   13628:	mov	r1, #0
   1362c:	mov	r0, r4
   13630:	bl	11280 <memset@plt>
   13634:	sub	r3, fp, #160	; 0xa0
   13638:	str	r3, [fp, #-212]	; 0xffffff2c
   1363c:	str	sl, [fp, #-208]	; 0xffffff30
   13640:	str	r9, [fp, #-204]	; 0xffffff34
   13644:	str	r4, [fp, #-200]	; 0xffffff38
   13648:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1364c:	tst	r3, #8
   13650:	beq	13760 <argp_parse@@Base+0x38c>
   13654:	add	sl, sl, #1
   13658:	str	sl, [fp, #-208]	; 0xffffff30
   1365c:	mov	r3, #45	; 0x2d
   13660:	strb	r3, [r6, r5]
   13664:	mov	r3, #0
   13668:	ldr	r2, [fp, #-208]	; 0xffffff30
   1366c:	strb	r3, [r2]
   13670:	ldr	r2, [fp, #-204]	; 0xffffff34
   13674:	str	r3, [r2]
   13678:	str	r8, [fp, #-160]	; 0xffffff60
   1367c:	cmp	r8, r3
   13680:	beq	13780 <argp_parse@@Base+0x3ac>
   13684:	sub	r3, fp, #212	; 0xd4
   13688:	str	r3, [sp]
   1368c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13690:	mov	r2, #0
   13694:	mov	r1, r2
   13698:	mov	r0, r8
   1369c:	bl	130c8 <__assert_fail@plt+0x1d40>
   136a0:	str	r0, [fp, #-108]	; 0xffffff94
   136a4:	mov	r2, #0
   136a8:	mov	r3, #0
   136ac:	strd	r2, [fp, #-76]	; 0xffffffb4
   136b0:	strd	r2, [fp, #-68]	; 0xffffffbc
   136b4:	strd	r2, [fp, #-60]	; 0xffffffc4
   136b8:	ldr	r3, [fp, #-160]	; 0xffffff60
   136bc:	str	r3, [fp, #-96]	; 0xffffffa0
   136c0:	ldr	r3, [fp, #-240]	; 0xffffff10
   136c4:	str	r3, [fp, #-92]	; 0xffffffa4
   136c8:	ldr	r3, [fp, #-232]	; 0xffffff18
   136cc:	str	r3, [fp, #-88]	; 0xffffffa8
   136d0:	str	r7, [fp, #-80]	; 0xffffffb0
   136d4:	movw	r3, #2232	; 0x8b8
   136d8:	movt	r3, #3
   136dc:	ldr	r3, [r3]
   136e0:	str	r3, [fp, #-52]	; 0xffffffcc
   136e4:	movw	r3, #2236	; 0x8bc
   136e8:	movt	r3, #3
   136ec:	ldr	r3, [r3]
   136f0:	str	r3, [fp, #-48]	; 0xffffffd0
   136f4:	mov	r3, #0
   136f8:	str	r3, [fp, #-84]	; 0xffffffac
   136fc:	sub	r3, fp, #160	; 0xa0
   13700:	str	r3, [fp, #-44]	; 0xffffffd4
   13704:	mov	r3, #1
   13708:	str	r3, [fp, #-100]	; 0xffffff9c
   1370c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13710:	ldr	r2, [fp, #-108]	; 0xffffff94
   13714:	cmp	r3, r2
   13718:	bcs	1382c <argp_parse@@Base+0x458>
   1371c:	ldr	r2, [fp, #8]
   13720:	str	r2, [r3, #24]
   13724:	ldr	r5, [fp, #-112]	; 0xffffff90
   13728:	ldr	r3, [fp, #-108]	; 0xffffff94
   1372c:	cmp	r5, r3
   13730:	bcs	1382c <argp_parse@@Base+0x458>
   13734:	mov	r6, #3
   13738:	movt	r6, #256	; 0x100
   1373c:	mov	r7, #0
   13740:	b	137c8 <argp_parse@@Base+0x3f4>
   13744:	movw	r3, #2264	; 0x8d8
   13748:	movt	r3, #3
   1374c:	ldr	r3, [r3]
   13750:	cmp	r3, #0
   13754:	addeq	r2, r0, #16
   13758:	bne	13520 <argp_parse@@Base+0x14c>
   1375c:	b	1352c <argp_parse@@Base+0x158>
   13760:	ldr	r3, [fp, #-248]	; 0xffffff08
   13764:	cmp	r3, #0
   13768:	beq	13664 <argp_parse@@Base+0x290>
   1376c:	add	sl, sl, #1
   13770:	str	sl, [fp, #-208]	; 0xffffff30
   13774:	mov	r3, #43	; 0x2b
   13778:	strb	r3, [r6, r5]
   1377c:	b	13664 <argp_parse@@Base+0x290>
   13780:	ldr	r3, [fp, #-112]	; 0xffffff90
   13784:	str	r3, [fp, #-108]	; 0xffffff94
   13788:	b	136a4 <argp_parse@@Base+0x2d0>
   1378c:	ldr	r3, [r5]
   13790:	cmp	r3, #0
   13794:	beq	137e8 <argp_parse@@Base+0x414>
   13798:	mov	r3, r7
   1379c:	mov	r2, r6
   137a0:	sub	r1, fp, #96	; 0x60
   137a4:	mov	r0, r5
   137a8:	bl	12d90 <__assert_fail@plt+0x1a08>
   137ac:	add	r5, r5, #36	; 0x24
   137b0:	ldr	r3, [fp, #-108]	; 0xffffff94
   137b4:	cmp	r5, r3
   137b8:	bcs	1381c <argp_parse@@Base+0x448>
   137bc:	cmp	r0, #7
   137c0:	cmpne	r0, #0
   137c4:	bne	13814 <argp_parse@@Base+0x440>
   137c8:	ldr	r3, [r5, #16]
   137cc:	cmp	r3, #0
   137d0:	beq	1378c <argp_parse@@Base+0x3b8>
   137d4:	ldr	r2, [r5, #20]
   137d8:	ldr	r3, [r3, #28]
   137dc:	ldr	r3, [r3, r2, lsl #2]
   137e0:	str	r3, [r5, #24]
   137e4:	b	1378c <argp_parse@@Base+0x3b8>
   137e8:	ldr	r3, [r5, #4]
   137ec:	ldr	r3, [r3, #16]
   137f0:	cmp	r3, #0
   137f4:	beq	13798 <argp_parse@@Base+0x3c4>
   137f8:	ldr	r3, [r3]
   137fc:	cmp	r3, #0
   13800:	beq	13798 <argp_parse@@Base+0x3c4>
   13804:	ldr	r3, [r5, #28]
   13808:	ldr	r2, [r5, #24]
   1380c:	str	r2, [r3]
   13810:	b	13798 <argp_parse@@Base+0x3c4>
   13814:	mov	r4, r0
   13818:	b	13d40 <argp_parse@@Base+0x96c>
   1381c:	mov	r4, r0
   13820:	cmp	r0, #7
   13824:	cmpne	r0, #0
   13828:	bne	13d40 <argp_parse@@Base+0x96c>
   1382c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13830:	tst	r3, #2
   13834:	moveq	r3, #1
   13838:	streq	r3, [fp, #-144]	; 0xffffff70
   1383c:	beq	13868 <argp_parse@@Base+0x494>
   13840:	mov	r2, #0
   13844:	str	r2, [fp, #-144]	; 0xffffff70
   13848:	tst	r3, #1
   1384c:	beq	13868 <argp_parse@@Base+0x494>
   13850:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13854:	sub	r3, r3, #4
   13858:	str	r3, [fp, #-88]	; 0xffffffa8
   1385c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13860:	add	r3, r3, #1
   13864:	str	r3, [fp, #-92]	; 0xffffffa4
   13868:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1386c:	ldr	r2, [fp, #-232]	; 0xffffff18
   13870:	cmp	r2, r3
   13874:	beq	1389c <argp_parse@@Base+0x4c8>
   13878:	movw	r3, #2224	; 0x8b0
   1387c:	movt	r3, #3
   13880:	ldr	r3, [r3]
   13884:	str	r3, [fp, #-56]	; 0xffffffc8
   13888:	movw	sl, #47300	; 0xb8c4
   1388c:	movt	sl, #1
   13890:	mov	r9, #6
   13894:	movt	r9, #256	; 0x100
   13898:	b	13964 <argp_parse@@Base+0x590>
   1389c:	ldr	r0, [r2]
   138a0:	cmp	r0, #0
   138a4:	beq	13878 <argp_parse@@Base+0x4a4>
   138a8:	bl	13fe8 <argp_parse@@Base+0xc14>
   138ac:	str	r0, [fp, #-56]	; 0xffffffc8
   138b0:	b	13888 <argp_parse@@Base+0x4b4>
   138b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   138b8:	str	r3, [fp, #-148]	; 0xffffff6c
   138bc:	mvn	r3, #0
   138c0:	str	r3, [fp, #-140]	; 0xffffff74
   138c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   138c8:	tst	r3, #64	; 0x40
   138cc:	beq	139e8 <argp_parse@@Base+0x614>
   138d0:	sub	r3, fp, #148	; 0x94
   138d4:	str	r3, [sp, #4]
   138d8:	mov	r3, #0
   138dc:	str	r3, [sp]
   138e0:	ldr	r3, [fp, #-152]	; 0xffffff68
   138e4:	ldr	r2, [fp, #-156]	; 0xffffff64
   138e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   138ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   138f0:	bl	14190 <argp_parse@@Base+0xdbc>
   138f4:	mov	r5, r0
   138f8:	ldr	r4, [fp, #-148]	; 0xffffff6c
   138fc:	str	r4, [fp, #-84]	; 0xffffffac
   13900:	cmn	r5, #1
   13904:	beq	13a14 <argp_parse@@Base+0x640>
   13908:	cmp	r5, #63	; 0x3f
   1390c:	beq	13a44 <argp_parse@@Base+0x670>
   13910:	cmp	r5, #1
   13914:	beq	139c0 <argp_parse@@Base+0x5ec>
   13918:	ldr	r4, [fp, #-136]	; 0xffffff78
   1391c:	asrs	r3, r5, #24
   13920:	beq	13a54 <argp_parse@@Base+0x680>
   13924:	ands	r1, r5, #8388608	; 0x800000
   13928:	movne	r1, #-16777216	; 0xff000000
   1392c:	bic	r2, r5, #-16777216	; 0xff000000
   13930:	add	r0, r3, r3, lsl #3
   13934:	lsl	r0, r0, #2
   13938:	sub	r0, r0, #36	; 0x24
   1393c:	mov	r3, r4
   13940:	orr	r2, r2, r1
   13944:	sub	r1, fp, #96	; 0x60
   13948:	ldr	ip, [fp, #-112]	; 0xffffff90
   1394c:	add	r0, ip, r0
   13950:	bl	12d90 <__assert_fail@plt+0x1a08>
   13954:	cmp	r0, #7
   13958:	beq	13c1c <argp_parse@@Base+0x848>
   1395c:	cmp	r0, #0
   13960:	bne	13ca0 <argp_parse@@Base+0x8cc>
   13964:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13968:	cmp	r3, #0
   1396c:	beq	13984 <argp_parse@@Base+0x5b0>
   13970:	ldr	r2, [fp, #-84]	; 0xffffffac
   13974:	cmp	r3, r2
   13978:	movgt	r3, #0
   1397c:	strgt	r3, [fp, #-72]	; 0xffffffb8
   13980:	ble	13990 <argp_parse@@Base+0x5bc>
   13984:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13988:	cmp	r3, #0
   1398c:	bne	138b4 <argp_parse@@Base+0x4e0>
   13990:	ldr	r3, [fp, #-84]	; 0xffffffac
   13994:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13998:	cmp	r3, r2
   1399c:	bge	13f10 <argp_parse@@Base+0xb3c>
   139a0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   139a4:	tst	r2, #4
   139a8:	bne	13f18 <argp_parse@@Base+0xb44>
   139ac:	add	r2, r3, #1
   139b0:	str	r2, [fp, #-84]	; 0xffffffac
   139b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   139b8:	ldr	r3, [r2, r3, lsl #2]
   139bc:	str	r3, [fp, #-136]	; 0xffffff78
   139c0:	ldr	r7, [fp, #-136]	; 0xffffff78
   139c4:	ldr	r4, [fp, #-84]	; 0xffffffac
   139c8:	sub	r4, r4, #1
   139cc:	str	r4, [fp, #-84]	; 0xffffffac
   139d0:	ldr	r5, [fp, #-112]	; 0xffffff90
   139d4:	ldr	r3, [fp, #-108]	; 0xffffff94
   139d8:	cmp	r3, r5
   139dc:	bls	13c98 <argp_parse@@Base+0x8c4>
   139e0:	mov	r6, #0
   139e4:	b	13b14 <argp_parse@@Base+0x740>
   139e8:	sub	r3, fp, #148	; 0x94
   139ec:	str	r3, [sp, #4]
   139f0:	mov	r3, #0
   139f4:	str	r3, [sp]
   139f8:	ldr	r3, [fp, #-152]	; 0xffffff68
   139fc:	ldr	r2, [fp, #-156]	; 0xffffff64
   13a00:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13a04:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13a08:	bl	14134 <argp_parse@@Base+0xd60>
   13a0c:	mov	r5, r0
   13a10:	b	138f8 <argp_parse@@Base+0x524>
   13a14:	mov	r3, #0
   13a18:	str	r3, [fp, #-100]	; 0xffffff9c
   13a1c:	cmp	r4, #1
   13a20:	ble	13990 <argp_parse@@Base+0x5bc>
   13a24:	sub	r3, r4, #-1073741823	; 0xc0000001
   13a28:	mov	r1, sl
   13a2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13a30:	ldr	r0, [r2, r3, lsl #2]
   13a34:	bl	110c4 <strcmp@plt>
   13a38:	cmp	r0, #0
   13a3c:	streq	r4, [fp, #-72]	; 0xffffffb8
   13a40:	b	13990 <argp_parse@@Base+0x5bc>
   13a44:	ldr	r3, [fp, #-140]	; 0xffffff74
   13a48:	cmn	r3, #1
   13a4c:	bne	13f08 <argp_parse@@Base+0xb34>
   13a50:	ldr	r4, [fp, #-136]	; 0xffffff78
   13a54:	mov	r1, r5
   13a58:	ldr	r0, [fp, #-156]	; 0xffffff64
   13a5c:	bl	11244 <strchr@plt>
   13a60:	subs	r1, r0, #0
   13a64:	beq	13ab4 <argp_parse@@Base+0x6e0>
   13a68:	ldr	r0, [fp, #-112]	; 0xffffff90
   13a6c:	ldr	r2, [fp, #-108]	; 0xffffff94
   13a70:	cmp	r2, r0
   13a74:	bls	13ab4 <argp_parse@@Base+0x6e0>
   13a78:	ldr	r3, [r0, #8]
   13a7c:	cmp	r1, r3
   13a80:	bcc	13a9c <argp_parse@@Base+0x6c8>
   13a84:	add	r0, r0, #36	; 0x24
   13a88:	cmp	r2, r0
   13a8c:	bls	13ab4 <argp_parse@@Base+0x6e0>
   13a90:	ldr	r3, [r0, #8]
   13a94:	cmp	r1, r3
   13a98:	bcs	13a84 <argp_parse@@Base+0x6b0>
   13a9c:	mov	r3, r4
   13aa0:	mov	r2, r5
   13aa4:	sub	r1, fp, #96	; 0x60
   13aa8:	bl	12d90 <__assert_fail@plt+0x1a08>
   13aac:	cmp	r0, #7
   13ab0:	bne	1395c <argp_parse@@Base+0x588>
   13ab4:	ldr	r3, [pc, #1128]	; 13f24 <argp_parse@@Base+0xb50>
   13ab8:	mov	r2, r5
   13abc:	movw	r1, #47304	; 0xb8c8
   13ac0:	movt	r1, #1
   13ac4:	sub	r0, fp, #96	; 0x60
   13ac8:	bl	1836c <argp_error@@Base>
   13acc:	b	13b54 <argp_parse@@Base+0x780>
   13ad0:	ldr	r3, [fp, #-84]	; 0xffffffac
   13ad4:	sub	r3, r3, #1
   13ad8:	str	r3, [fp, #-84]	; 0xffffffac
   13adc:	mov	r3, r6
   13ae0:	mov	r2, r9
   13ae4:	sub	r1, fp, #96	; 0x60
   13ae8:	mov	r0, r5
   13aec:	bl	12d90 <__assert_fail@plt+0x1a08>
   13af0:	add	r5, r5, #36	; 0x24
   13af4:	ldr	r2, [fp, #-108]	; 0xffffff94
   13af8:	cmp	r5, r2
   13afc:	movcs	r3, #0
   13b00:	movcc	r3, #1
   13b04:	cmp	r0, #7
   13b08:	movne	r3, #0
   13b0c:	cmp	r3, #0
   13b10:	beq	13be4 <argp_parse@@Base+0x810>
   13b14:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b18:	add	r3, r3, #1
   13b1c:	str	r3, [fp, #-84]	; 0xffffffac
   13b20:	mov	r3, r7
   13b24:	mov	r2, r6
   13b28:	sub	r1, fp, #96	; 0x60
   13b2c:	mov	r0, r5
   13b30:	bl	12d90 <__assert_fail@plt+0x1a08>
   13b34:	cmp	r0, #7
   13b38:	beq	13ad0 <argp_parse@@Base+0x6fc>
   13b3c:	add	r5, r5, #36	; 0x24
   13b40:	cmp	r0, #0
   13b44:	beq	13bf4 <argp_parse@@Base+0x820>
   13b48:	cmp	r0, #7
   13b4c:	bne	1395c <argp_parse@@Base+0x588>
   13b50:	mov	r5, #1
   13b54:	add	r5, r5, #1
   13b58:	bics	r3, r5, #2
   13b5c:	moveq	r3, #1
   13b60:	movne	r3, #0
   13b64:	cmp	r3, #0
   13b68:	beq	13eac <argp_parse@@Base+0xad8>
   13b6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13b70:	ldr	r2, [fp, #-92]	; 0xffffffa4
   13b74:	cmp	r3, r2
   13b78:	beq	13d60 <argp_parse@@Base+0x98c>
   13b7c:	ldr	r2, [fp, #4]
   13b80:	cmp	r2, #0
   13b84:	strne	r3, [r2]
   13b88:	beq	13e84 <argp_parse@@Base+0xab0>
   13b8c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13b90:	sub	r5, r5, #36	; 0x24
   13b94:	ldr	r3, [fp, #-112]	; 0xffffff90
   13b98:	cmp	r5, r3
   13b9c:	bcc	13eec <argp_parse@@Base+0xb18>
   13ba0:	mov	r6, #4
   13ba4:	movt	r6, #256	; 0x100
   13ba8:	mov	r7, #0
   13bac:	mov	r3, r7
   13bb0:	mov	r2, r6
   13bb4:	sub	r1, fp, #96	; 0x60
   13bb8:	mov	r0, r5
   13bbc:	bl	12d90 <__assert_fail@plt+0x1a08>
   13bc0:	sub	r5, r5, #36	; 0x24
   13bc4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13bc8:	cmp	r5, r3
   13bcc:	bcc	13ec4 <argp_parse@@Base+0xaf0>
   13bd0:	cmp	r0, #7
   13bd4:	cmpne	r0, #0
   13bd8:	beq	13bac <argp_parse@@Base+0x7d8>
   13bdc:	mov	r4, r0
   13be0:	b	13ed4 <argp_parse@@Base+0xb00>
   13be4:	cmp	r0, #0
   13be8:	bne	13b48 <argp_parse@@Base+0x774>
   13bec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13bf0:	str	r3, [fp, #-84]	; 0xffffffac
   13bf4:	ldr	r3, [fp, #-84]	; 0xffffffac
   13bf8:	cmp	r4, r3
   13bfc:	movge	r3, #1
   13c00:	strge	r3, [fp, #-100]	; 0xffffff9c
   13c04:	bge	13964 <argp_parse@@Base+0x590>
   13c08:	sub	r4, r3, r4
   13c0c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   13c10:	add	r4, r3, r4
   13c14:	str	r4, [r5, #-24]	; 0xffffffe8
   13c18:	b	13964 <argp_parse@@Base+0x590>
   13c1c:	ldr	r3, [fp, #-152]	; 0xffffff68
   13c20:	ldr	r2, [r3, #12]
   13c24:	cmp	r2, r5
   13c28:	beq	13c60 <argp_parse@@Base+0x88c>
   13c2c:	ldr	r2, [r3]
   13c30:	cmp	r2, #0
   13c34:	beq	13c8c <argp_parse@@Base+0x8b8>
   13c38:	add	r3, r3, #16
   13c3c:	ldr	r2, [r3, #12]
   13c40:	cmp	r5, r2
   13c44:	beq	13c60 <argp_parse@@Base+0x88c>
   13c48:	ldr	r2, [r3]
   13c4c:	cmp	r2, #0
   13c50:	bne	13c38 <argp_parse@@Base+0x864>
   13c54:	movw	r2, #47296	; 0xb8c0
   13c58:	movt	r2, #1
   13c5c:	b	13c74 <argp_parse@@Base+0x8a0>
   13c60:	ldr	r2, [r3]
   13c64:	movw	r3, #47296	; 0xb8c0
   13c68:	movt	r3, #1
   13c6c:	cmp	r2, #0
   13c70:	moveq	r2, r3
   13c74:	ldr	r3, [pc, #680]	; 13f24 <argp_parse@@Base+0xb50>
   13c78:	movw	r1, #47312	; 0xb8d0
   13c7c:	movt	r1, #1
   13c80:	sub	r0, fp, #96	; 0x60
   13c84:	bl	1836c <argp_error@@Base>
   13c88:	b	13b54 <argp_parse@@Base+0x780>
   13c8c:	movw	r2, #47296	; 0xb8c0
   13c90:	movt	r2, #1
   13c94:	b	13c74 <argp_parse@@Base+0x8a0>
   13c98:	mov	r5, #1
   13c9c:	b	13b54 <argp_parse@@Base+0x780>
   13ca0:	mov	r4, r0
   13ca4:	cmp	r4, #7
   13ca8:	beq	13eac <argp_parse@@Base+0xad8>
   13cac:	ldr	r5, [fp, #-112]	; 0xffffff90
   13cb0:	ldr	r3, [fp, #-108]	; 0xffffff94
   13cb4:	cmp	r5, r3
   13cb8:	bcs	13cec <argp_parse@@Base+0x918>
   13cbc:	mov	r6, #5
   13cc0:	movt	r6, #256	; 0x100
   13cc4:	mov	r7, #0
   13cc8:	mov	r3, r7
   13ccc:	mov	r2, r6
   13cd0:	sub	r1, fp, #96	; 0x60
   13cd4:	mov	r0, r5
   13cd8:	bl	12d90 <__assert_fail@plt+0x1a08>
   13cdc:	add	r5, r5, #36	; 0x24
   13ce0:	ldr	r3, [fp, #-108]	; 0xffffff94
   13ce4:	cmp	r5, r3
   13ce8:	bcc	13cc8 <argp_parse@@Base+0x8f4>
   13cec:	ldr	r5, [fp, #-108]	; 0xffffff94
   13cf0:	sub	r5, r5, #36	; 0x24
   13cf4:	ldr	r3, [fp, #-112]	; 0xffffff90
   13cf8:	cmp	r3, r5
   13cfc:	bhi	13d30 <argp_parse@@Base+0x95c>
   13d00:	mov	r6, #7
   13d04:	movt	r6, #256	; 0x100
   13d08:	mov	r7, #0
   13d0c:	mov	r3, r7
   13d10:	mov	r2, r6
   13d14:	sub	r1, fp, #96	; 0x60
   13d18:	mov	r0, r5
   13d1c:	bl	12d90 <__assert_fail@plt+0x1a08>
   13d20:	sub	r5, r5, #36	; 0x24
   13d24:	ldr	r3, [fp, #-112]	; 0xffffff90
   13d28:	cmp	r5, r3
   13d2c:	bcs	13d0c <argp_parse@@Base+0x938>
   13d30:	cmp	r4, #7
   13d34:	moveq	r4, #22
   13d38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d3c:	bl	140ac <argp_parse@@Base+0xcd8>
   13d40:	mov	r0, r4
   13d44:	sub	sp, fp, #32
   13d48:	ldrd	r4, [sp]
   13d4c:	ldrd	r6, [sp, #8]
   13d50:	ldrd	r8, [sp, #16]
   13d54:	ldrd	sl, [sp, #24]
   13d58:	add	sp, sp, #32
   13d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d60:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d64:	ldr	r5, [fp, #-108]	; 0xffffff94
   13d68:	cmp	r5, r6
   13d6c:	bls	13ef4 <argp_parse@@Base+0xb20>
   13d70:	mov	r4, #0
   13d74:	mov	r7, #2
   13d78:	movt	r7, #256	; 0x100
   13d7c:	mov	r8, r4
   13d80:	mov	r0, r4
   13d84:	b	13da4 <argp_parse@@Base+0x9d0>
   13d88:	add	r6, r6, #36	; 0x24
   13d8c:	ldr	r5, [fp, #-108]	; 0xffffff94
   13d90:	cmp	r6, r5
   13d94:	bcs	13de0 <argp_parse@@Base+0xa0c>
   13d98:	cmp	r0, #7
   13d9c:	cmpne	r0, #0
   13da0:	bne	13dc8 <argp_parse@@Base+0x9f4>
   13da4:	ldr	r3, [r6, #12]
   13da8:	cmp	r3, #0
   13dac:	bne	13d88 <argp_parse@@Base+0x9b4>
   13db0:	mov	r3, r8
   13db4:	mov	r2, r7
   13db8:	sub	r1, fp, #96	; 0x60
   13dbc:	mov	r0, r6
   13dc0:	bl	12d90 <__assert_fail@plt+0x1a08>
   13dc4:	b	13d88 <argp_parse@@Base+0x9b4>
   13dc8:	mov	r4, r0
   13dcc:	sub	r5, r5, #36	; 0x24
   13dd0:	ldr	r3, [fp, #-112]	; 0xffffff90
   13dd4:	cmp	r3, r5
   13dd8:	bls	13df4 <argp_parse@@Base+0xa20>
   13ddc:	b	13e40 <argp_parse@@Base+0xa6c>
   13de0:	mov	r4, r0
   13de4:	sub	r5, r5, #36	; 0x24
   13de8:	ldr	r3, [fp, #-112]	; 0xffffff90
   13dec:	cmp	r3, r5
   13df0:	bhi	13e68 <argp_parse@@Base+0xa94>
   13df4:	cmp	r4, #7
   13df8:	cmpne	r4, #0
   13dfc:	bne	13e40 <argp_parse@@Base+0xa6c>
   13e00:	mov	r6, #1
   13e04:	movt	r6, #256	; 0x100
   13e08:	mov	r7, #0
   13e0c:	mov	r3, r7
   13e10:	mov	r2, r6
   13e14:	sub	r1, fp, #96	; 0x60
   13e18:	mov	r0, r5
   13e1c:	bl	12d90 <__assert_fail@plt+0x1a08>
   13e20:	sub	r5, r5, #36	; 0x24
   13e24:	ldr	r3, [fp, #-112]	; 0xffffff90
   13e28:	cmp	r5, r3
   13e2c:	bcc	13e64 <argp_parse@@Base+0xa90>
   13e30:	cmp	r0, #7
   13e34:	cmpne	r0, #0
   13e38:	beq	13e0c <argp_parse@@Base+0xa38>
   13e3c:	mov	r4, r0
   13e40:	ldr	r3, [fp, #4]
   13e44:	cmp	r3, #0
   13e48:	beq	13e58 <argp_parse@@Base+0xa84>
   13e4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e50:	ldr	r2, [fp, #4]
   13e54:	str	r3, [r2]
   13e58:	cmp	r4, #0
   13e5c:	beq	13b8c <argp_parse@@Base+0x7b8>
   13e60:	b	13ca4 <argp_parse@@Base+0x8d0>
   13e64:	mov	r4, r0
   13e68:	cmp	r4, #7
   13e6c:	bne	13e40 <argp_parse@@Base+0xa6c>
   13e70:	ldr	r3, [fp, #4]
   13e74:	cmp	r3, #0
   13e78:	movne	r4, #0
   13e7c:	bne	13e4c <argp_parse@@Base+0xa78>
   13e80:	b	13b8c <argp_parse@@Base+0x7b8>
   13e84:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e88:	tst	r3, #2
   13e8c:	bne	13eac <argp_parse@@Base+0xad8>
   13e90:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13e94:	cmp	r0, #0
   13e98:	beq	13eac <argp_parse@@Base+0xad8>
   13e9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13ea0:	movw	r1, #47324	; 0xb8dc
   13ea4:	movt	r1, #1
   13ea8:	bl	11250 <fprintf@plt>
   13eac:	mov	r2, #260	; 0x104
   13eb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13eb4:	sub	r0, fp, #96	; 0x60
   13eb8:	bl	182a4 <argp_state_help@@Base>
   13ebc:	mov	r4, #7
   13ec0:	b	13cac <argp_parse@@Base+0x8d8>
   13ec4:	mov	r4, r0
   13ec8:	cmp	r0, #7
   13ecc:	movne	r4, r0
   13ed0:	moveq	r4, #0
   13ed4:	ldr	r5, [fp, #-108]	; 0xffffff94
   13ed8:	sub	r5, r5, #36	; 0x24
   13edc:	ldr	r3, [fp, #-112]	; 0xffffff90
   13ee0:	cmp	r3, r5
   13ee4:	bls	13d00 <argp_parse@@Base+0x92c>
   13ee8:	b	13d38 <argp_parse@@Base+0x964>
   13eec:	mov	r4, #0
   13ef0:	b	13d38 <argp_parse@@Base+0x964>
   13ef4:	sub	r5, r5, #36	; 0x24
   13ef8:	cmp	r5, r6
   13efc:	movcc	r4, #0
   13f00:	bcs	13e00 <argp_parse@@Base+0xa2c>
   13f04:	b	13e40 <argp_parse@@Base+0xa6c>
   13f08:	mov	r3, #0
   13f0c:	b	13b64 <argp_parse@@Base+0x790>
   13f10:	mov	r3, #1
   13f14:	b	13b64 <argp_parse@@Base+0x790>
   13f18:	mov	r3, #1
   13f1c:	b	13b64 <argp_parse@@Base+0x790>
   13f20:	muleq	r1, r4, r7
   13f24:			; <UNDEFINED> instruction: 0x0001b7b0
   13f28:	cmp	r1, #0
   13f2c:	beq	13f78 <argp_parse@@Base+0xba4>
   13f30:	ldr	r2, [r1, #52]	; 0x34
   13f34:	ldr	r3, [r2, #48]	; 0x30
   13f38:	ldr	r1, [r2, #52]	; 0x34
   13f3c:	cmp	r3, r1
   13f40:	bcs	13f80 <argp_parse@@Base+0xbac>
   13f44:	ldr	r2, [r3, #4]
   13f48:	cmp	r0, r2
   13f4c:	beq	13f68 <argp_parse@@Base+0xb94>
   13f50:	add	r3, r3, #36	; 0x24
   13f54:	cmp	r3, r1
   13f58:	bcs	13f70 <argp_parse@@Base+0xb9c>
   13f5c:	ldr	r2, [r3, #4]
   13f60:	cmp	r2, r0
   13f64:	bne	13f50 <argp_parse@@Base+0xb7c>
   13f68:	ldr	r0, [r3, #24]
   13f6c:	bx	lr
   13f70:	mov	r0, #0
   13f74:	bx	lr
   13f78:	mov	r0, r1
   13f7c:	bx	lr
   13f80:	mov	r0, #0
   13f84:	bx	lr
   13f88:	push	{lr}		; (str lr, [sp, #-4]!)
   13f8c:	sub	sp, sp, #12
   13f90:	movw	r1, #2268	; 0x8dc
   13f94:	movt	r1, #3
   13f98:	ldr	r3, [r1, #4]
   13f9c:	str	r3, [sp]
   13fa0:	movw	r3, #47556	; 0xb9c4
   13fa4:	movt	r3, #1
   13fa8:	movw	r2, #47572	; 0xb9d4
   13fac:	movt	r2, #1
   13fb0:	ldr	r1, [r1]
   13fb4:	bl	14968 <_obstack_memory_used@@Base+0x40c>
   13fb8:	add	sp, sp, #12
   13fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   13fc0:	movw	r3, #2264	; 0x8d8
   13fc4:	movt	r3, #3
   13fc8:	movw	r2, #16264	; 0x3f88
   13fcc:	movt	r2, #1
   13fd0:	str	r2, [r3]
   13fd4:	movw	r3, #2268	; 0x8dc
   13fd8:	movt	r3, #3
   13fdc:	str	r0, [r3]
   13fe0:	str	r1, [r3, #4]
   13fe4:	bx	lr
   13fe8:	ldrb	r3, [r0]
   13fec:	cmp	r3, #47	; 0x2f
   13ff0:	bne	14000 <argp_parse@@Base+0xc2c>
   13ff4:	ldrb	r3, [r0, #1]!
   13ff8:	cmp	r3, #47	; 0x2f
   13ffc:	beq	13ff4 <argp_parse@@Base+0xc20>
   14000:	ldrb	r2, [r0]
   14004:	cmp	r2, #0
   14008:	bxeq	lr
   1400c:	push	{lr}		; (str lr, [sp, #-4]!)
   14010:	mov	r1, r0
   14014:	mov	r3, #0
   14018:	mov	lr, #1
   1401c:	mov	ip, r3
   14020:	b	1403c <argp_parse@@Base+0xc68>
   14024:	cmp	r3, #0
   14028:	movne	r0, r1
   1402c:	movne	r3, ip
   14030:	ldrb	r2, [r1, #1]!
   14034:	cmp	r2, #0
   14038:	beq	1404c <argp_parse@@Base+0xc78>
   1403c:	cmp	r2, #47	; 0x2f
   14040:	moveq	r3, lr
   14044:	bne	14024 <argp_parse@@Base+0xc50>
   14048:	b	14030 <argp_parse@@Base+0xc5c>
   1404c:	pop	{pc}		; (ldr pc, [sp], #4)
   14050:	str	r4, [sp, #-8]!
   14054:	str	lr, [sp, #4]
   14058:	mov	r4, r0
   1405c:	bl	11238 <strlen@plt>
   14060:	cmp	r0, #1
   14064:	bls	14084 <argp_parse@@Base+0xcb0>
   14068:	add	r3, r4, r0
   1406c:	ldrb	r3, [r3, #-1]
   14070:	cmp	r3, #47	; 0x2f
   14074:	subeq	r0, r0, #2
   14078:	addeq	r3, r4, r0
   1407c:	rsbeq	r1, r4, #1
   14080:	beq	14090 <argp_parse@@Base+0xcbc>
   14084:	ldr	r4, [sp]
   14088:	add	sp, sp, #4
   1408c:	pop	{pc}		; (ldr pc, [sp], #4)
   14090:	add	r0, r1, r3
   14094:	cmp	r3, r4
   14098:	beq	14084 <argp_parse@@Base+0xcb0>
   1409c:	ldrb	r2, [r3], #-1
   140a0:	cmp	r2, #47	; 0x2f
   140a4:	bne	14084 <argp_parse@@Base+0xcb0>
   140a8:	b	14090 <argp_parse@@Base+0xcbc>
   140ac:	strd	r4, [sp, #-12]!
   140b0:	str	lr, [sp, #8]
   140b4:	sub	sp, sp, #12
   140b8:	mov	r5, r0
   140bc:	bl	1125c <__errno_location@plt>
   140c0:	mov	r4, r0
   140c4:	ldr	r3, [r0]
   140c8:	str	r3, [sp]
   140cc:	str	r3, [sp, #4]
   140d0:	mov	r3, #0
   140d4:	str	r3, [r0]
   140d8:	mov	r0, r5
   140dc:	bl	11100 <free@plt>
   140e0:	ldr	r3, [r4]
   140e4:	clz	r3, r3
   140e8:	lsr	r3, r3, #5
   140ec:	add	r2, sp, #8
   140f0:	add	r3, r2, r3, lsl #2
   140f4:	ldr	r3, [r3, #-8]
   140f8:	str	r3, [r4]
   140fc:	add	sp, sp, #12
   14100:	ldrd	r4, [sp]
   14104:	add	sp, sp, #8
   14108:	pop	{pc}		; (ldr pc, [sp], #4)
   1410c:	push	{lr}		; (str lr, [sp, #-4]!)
   14110:	sub	sp, sp, #20
   14114:	mov	ip, #0
   14118:	str	ip, [sp, #8]
   1411c:	str	ip, [sp, #4]
   14120:	ldr	ip, [sp, #24]
   14124:	str	ip, [sp]
   14128:	bl	190cc <argp_error@@Base+0xd60>
   1412c:	add	sp, sp, #20
   14130:	pop	{pc}		; (ldr pc, [sp], #4)
   14134:	push	{lr}		; (str lr, [sp, #-4]!)
   14138:	sub	sp, sp, #20
   1413c:	mov	ip, #0
   14140:	str	ip, [sp, #12]
   14144:	ldr	lr, [sp, #28]
   14148:	str	lr, [sp, #8]
   1414c:	str	ip, [sp, #4]
   14150:	ldr	ip, [sp, #24]
   14154:	str	ip, [sp]
   14158:	bl	18b10 <argp_error@@Base+0x7a4>
   1415c:	add	sp, sp, #20
   14160:	pop	{pc}		; (ldr pc, [sp], #4)
   14164:	push	{lr}		; (str lr, [sp, #-4]!)
   14168:	sub	sp, sp, #20
   1416c:	mov	ip, #0
   14170:	str	ip, [sp, #8]
   14174:	mov	ip, #1
   14178:	str	ip, [sp, #4]
   1417c:	ldr	ip, [sp, #24]
   14180:	str	ip, [sp]
   14184:	bl	190cc <argp_error@@Base+0xd60>
   14188:	add	sp, sp, #20
   1418c:	pop	{pc}		; (ldr pc, [sp], #4)
   14190:	push	{lr}		; (str lr, [sp, #-4]!)
   14194:	sub	sp, sp, #20
   14198:	mov	ip, #0
   1419c:	str	ip, [sp, #12]
   141a0:	ldr	ip, [sp, #28]
   141a4:	str	ip, [sp, #8]
   141a8:	mov	ip, #1
   141ac:	str	ip, [sp, #4]
   141b0:	ldr	ip, [sp, #24]
   141b4:	str	ip, [sp]
   141b8:	bl	18b10 <argp_error@@Base+0x7a4>
   141bc:	add	sp, sp, #20
   141c0:	pop	{pc}		; (ldr pc, [sp], #4)
   141c4:	str	r4, [sp, #-8]!
   141c8:	str	lr, [sp, #4]
   141cc:	ldrb	r3, [r0, #40]	; 0x28
   141d0:	tst	r3, #1
   141d4:	beq	141f0 <argp_parse@@Base+0xe1c>
   141d8:	ldr	r3, [r0, #28]
   141dc:	ldr	r0, [r0, #36]	; 0x24
   141e0:	blx	r3
   141e4:	ldr	r4, [sp]
   141e8:	add	sp, sp, #4
   141ec:	pop	{pc}		; (ldr pc, [sp], #4)
   141f0:	ldr	r3, [r0, #28]
   141f4:	mov	r0, r1
   141f8:	blx	r3
   141fc:	b	141e4 <argp_parse@@Base+0xe10>
   14200:	str	r4, [sp, #-8]!
   14204:	str	lr, [sp, #4]
   14208:	ldrb	r3, [r0, #40]	; 0x28
   1420c:	tst	r3, #1
   14210:	beq	1422c <argp_parse@@Base+0xe58>
   14214:	ldr	r3, [r0, #32]
   14218:	ldr	r0, [r0, #36]	; 0x24
   1421c:	blx	r3
   14220:	ldr	r4, [sp]
   14224:	add	sp, sp, #4
   14228:	pop	{pc}		; (ldr pc, [sp], #4)
   1422c:	ldr	r3, [r0, #32]
   14230:	mov	r0, r1
   14234:	blx	r3
   14238:	b	14220 <argp_parse@@Base+0xe4c>
   1423c:	strd	r4, [sp, #-16]!
   14240:	str	r6, [sp, #8]
   14244:	str	lr, [sp, #12]
   14248:	mov	r4, r0
   1424c:	subs	r5, r2, #0
   14250:	moveq	r5, #8
   14254:	movw	r3, #4072	; 0xfe8
   14258:	cmp	r1, #0
   1425c:	moveq	r1, r3
   14260:	str	r1, [r0]
   14264:	sub	r6, r5, #1
   14268:	str	r6, [r0, #24]
   1426c:	bl	141c4 <argp_parse@@Base+0xdf0>
   14270:	str	r0, [r4, #4]
   14274:	cmp	r0, #0
   14278:	beq	142d0 <argp_parse@@Base+0xefc>
   1427c:	add	r3, r0, #8
   14280:	add	r3, r3, r6
   14284:	rsb	r5, r5, #0
   14288:	and	r5, r5, r3
   1428c:	str	r5, [r4, #8]
   14290:	str	r5, [r4, #12]
   14294:	ldr	r3, [r4]
   14298:	add	r3, r0, r3
   1429c:	str	r3, [r0]
   142a0:	str	r3, [r4, #16]
   142a4:	mov	r2, #0
   142a8:	str	r2, [r0, #4]
   142ac:	ldrb	r3, [r4, #40]	; 0x28
   142b0:	and	r3, r3, #253	; 0xfd
   142b4:	bfi	r3, r2, #2, #1
   142b8:	strb	r3, [r4, #40]	; 0x28
   142bc:	mov	r0, #1
   142c0:	ldrd	r4, [sp]
   142c4:	ldr	r6, [sp, #8]
   142c8:	add	sp, sp, #12
   142cc:	pop	{pc}		; (ldr pc, [sp], #4)
   142d0:	movw	r3, #2156	; 0x86c
   142d4:	movt	r3, #3
   142d8:	ldr	r3, [r3]
   142dc:	blx	r3
   142e0:	str	r4, [sp, #-8]!
   142e4:	str	lr, [sp, #4]
   142e8:	movw	r3, #2232	; 0x8b8
   142ec:	movt	r3, #3
   142f0:	movw	r2, #47588	; 0xb9e4
   142f4:	movt	r2, #1
   142f8:	movw	r1, #47684	; 0xba44
   142fc:	movt	r1, #1
   14300:	ldr	r0, [r3]
   14304:	bl	11250 <fprintf@plt>
   14308:	movw	r3, #2200	; 0x898
   1430c:	movt	r3, #3
   14310:	ldr	r0, [r3]
   14314:	bl	1122c <exit@plt>

00014318 <_obstack_begin@@Base>:
   14318:	str	r4, [sp, #-8]!
   1431c:	str	lr, [sp, #4]
   14320:	str	r3, [r0, #28]
   14324:	ldr	r3, [sp, #8]
   14328:	str	r3, [r0, #32]
   1432c:	ldrb	r3, [r0, #40]	; 0x28
   14330:	bfc	r3, #0, #1
   14334:	strb	r3, [r0, #40]	; 0x28
   14338:	bl	1423c <argp_parse@@Base+0xe68>
   1433c:	ldr	r4, [sp]
   14340:	add	sp, sp, #4
   14344:	pop	{pc}		; (ldr pc, [sp], #4)

00014348 <_obstack_begin_1@@Base>:
   14348:	str	r4, [sp, #-8]!
   1434c:	str	lr, [sp, #4]
   14350:	str	r3, [r0, #28]
   14354:	ldr	r3, [sp, #8]
   14358:	str	r3, [r0, #32]
   1435c:	ldr	r3, [sp, #12]
   14360:	str	r3, [r0, #36]	; 0x24
   14364:	ldrb	r3, [r0, #40]	; 0x28
   14368:	orr	r3, r3, #1
   1436c:	strb	r3, [r0, #40]	; 0x28
   14370:	bl	1423c <argp_parse@@Base+0xe68>
   14374:	ldr	r4, [sp]
   14378:	add	sp, sp, #4
   1437c:	pop	{pc}		; (ldr pc, [sp], #4)

00014380 <_obstack_newchunk@@Base>:
   14380:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14384:	strd	r6, [sp, #8]
   14388:	str	r8, [sp, #16]
   1438c:	str	lr, [sp, #20]
   14390:	ldr	r7, [r0, #4]
   14394:	ldr	r6, [r0, #12]
   14398:	ldr	r3, [r0, #8]
   1439c:	sub	r6, r6, r3
   143a0:	add	r1, r6, r1
   143a4:	ldr	r2, [r0, #24]
   143a8:	add	r2, r1, r2
   143ac:	add	r5, r2, r6, lsr #3
   143b0:	add	r5, r5, #100	; 0x64
   143b4:	ldr	r3, [r0]
   143b8:	cmp	r2, r3
   143bc:	movcs	r3, r2
   143c0:	cmp	r3, r5
   143c4:	movcs	r5, r3
   143c8:	cmp	r6, r1
   143cc:	cmpls	r1, r2
   143d0:	bhi	14470 <_obstack_newchunk@@Base+0xf0>
   143d4:	mov	r4, r0
   143d8:	mov	r1, r5
   143dc:	bl	141c4 <argp_parse@@Base+0xdf0>
   143e0:	subs	r8, r0, #0
   143e4:	beq	14470 <_obstack_newchunk@@Base+0xf0>
   143e8:	str	r8, [r4, #4]
   143ec:	str	r7, [r8, #4]
   143f0:	add	r3, r8, r5
   143f4:	str	r3, [r4, #16]
   143f8:	mov	r5, r8
   143fc:	str	r3, [r5], #8
   14400:	ldr	r3, [r4, #24]
   14404:	add	r5, r5, r3
   14408:	bic	r5, r5, r3
   1440c:	mov	r2, r6
   14410:	ldr	r1, [r4, #8]
   14414:	mov	r0, r5
   14418:	bl	1113c <memcpy@plt>
   1441c:	ldrb	r3, [r4, #40]	; 0x28
   14420:	tst	r3, #2
   14424:	bne	14444 <_obstack_newchunk@@Base+0xc4>
   14428:	ldr	r2, [r4, #24]
   1442c:	add	r3, r7, #8
   14430:	add	r3, r3, r2
   14434:	bic	r3, r3, r2
   14438:	ldr	r2, [r4, #8]
   1443c:	cmp	r2, r3
   14440:	beq	14480 <_obstack_newchunk@@Base+0x100>
   14444:	str	r5, [r4, #8]
   14448:	add	r5, r5, r6
   1444c:	str	r5, [r4, #12]
   14450:	ldrb	r3, [r4, #40]	; 0x28
   14454:	bfc	r3, #1, #1
   14458:	strb	r3, [r4, #40]	; 0x28
   1445c:	ldrd	r4, [sp]
   14460:	ldrd	r6, [sp, #8]
   14464:	ldr	r8, [sp, #16]
   14468:	add	sp, sp, #20
   1446c:	pop	{pc}		; (ldr pc, [sp], #4)
   14470:	movw	r3, #2156	; 0x86c
   14474:	movt	r3, #3
   14478:	ldr	r3, [r3]
   1447c:	blx	r3
   14480:	ldr	r3, [r7, #4]
   14484:	str	r3, [r8, #4]
   14488:	mov	r1, r7
   1448c:	mov	r0, r4
   14490:	bl	14200 <argp_parse@@Base+0xe2c>
   14494:	b	14444 <_obstack_newchunk@@Base+0xc4>

00014498 <_obstack_allocated_p@@Base>:
   14498:	ldr	r0, [r0, #4]
   1449c:	cmp	r0, #0
   144a0:	bne	144b4 <_obstack_allocated_p@@Base+0x1c>
   144a4:	b	144c8 <_obstack_allocated_p@@Base+0x30>
   144a8:	ldr	r0, [r0, #4]
   144ac:	cmp	r0, #0
   144b0:	beq	144c8 <_obstack_allocated_p@@Base+0x30>
   144b4:	cmp	r1, r0
   144b8:	bls	144a8 <_obstack_allocated_p@@Base+0x10>
   144bc:	ldr	r3, [r0]
   144c0:	cmp	r3, r1
   144c4:	bcc	144a8 <_obstack_allocated_p@@Base+0x10>
   144c8:	adds	r0, r0, #0
   144cc:	movne	r0, #1
   144d0:	bx	lr

000144d4 <_obstack_free@@Base>:
   144d4:	strd	r4, [sp, #-16]!
   144d8:	str	r6, [sp, #8]
   144dc:	str	lr, [sp, #12]
   144e0:	mov	r4, r0
   144e4:	mov	r6, r1
   144e8:	ldr	r1, [r0, #4]
   144ec:	cmp	r1, #0
   144f0:	bne	14524 <_obstack_free@@Base+0x50>
   144f4:	cmp	r6, #0
   144f8:	beq	1454c <_obstack_free@@Base+0x78>
   144fc:	bl	11364 <abort@plt>
   14500:	ldr	r5, [r1, #4]
   14504:	mov	r0, r4
   14508:	bl	14200 <argp_parse@@Base+0xe2c>
   1450c:	ldrb	r3, [r4, #40]	; 0x28
   14510:	orr	r3, r3, #2
   14514:	strb	r3, [r4, #40]	; 0x28
   14518:	mov	r1, r5
   1451c:	cmp	r5, #0
   14520:	beq	144f4 <_obstack_free@@Base+0x20>
   14524:	cmp	r6, r1
   14528:	bls	14500 <_obstack_free@@Base+0x2c>
   1452c:	ldr	r3, [r1]
   14530:	cmp	r3, r6
   14534:	bcc	14500 <_obstack_free@@Base+0x2c>
   14538:	str	r6, [r4, #12]
   1453c:	str	r6, [r4, #8]
   14540:	ldr	r3, [r1]
   14544:	str	r3, [r4, #16]
   14548:	str	r1, [r4, #4]
   1454c:	ldrd	r4, [sp]
   14550:	ldr	r6, [sp, #8]
   14554:	add	sp, sp, #12
   14558:	pop	{pc}		; (ldr pc, [sp], #4)

0001455c <_obstack_memory_used@@Base>:
   1455c:	ldr	r3, [r0, #4]
   14560:	cmp	r3, #0
   14564:	beq	14588 <_obstack_memory_used@@Base+0x2c>
   14568:	mov	r0, #0
   1456c:	ldr	r2, [r3]
   14570:	sub	r2, r2, r3
   14574:	add	r0, r0, r2
   14578:	ldr	r3, [r3, #4]
   1457c:	cmp	r3, #0
   14580:	bne	1456c <_obstack_memory_used@@Base+0x10>
   14584:	bx	lr
   14588:	mov	r0, #0
   1458c:	bx	lr
   14590:	strd	r4, [sp, #-16]!
   14594:	str	r6, [sp, #8]
   14598:	str	lr, [sp, #12]
   1459c:	subs	r4, r0, #0
   145a0:	beq	1463c <_obstack_memory_used@@Base+0xe0>
   145a4:	mov	r1, #47	; 0x2f
   145a8:	mov	r0, r4
   145ac:	bl	112b0 <strrchr@plt>
   145b0:	subs	r5, r0, #0
   145b4:	beq	14614 <_obstack_memory_used@@Base+0xb8>
   145b8:	add	r6, r5, #1
   145bc:	sub	r3, r6, r4
   145c0:	cmp	r3, #6
   145c4:	ble	14614 <_obstack_memory_used@@Base+0xb8>
   145c8:	mov	r2, #7
   145cc:	movw	r1, #47664	; 0xba30
   145d0:	movt	r1, #1
   145d4:	sub	r0, r5, #6
   145d8:	bl	11358 <strncmp@plt>
   145dc:	cmp	r0, #0
   145e0:	bne	14614 <_obstack_memory_used@@Base+0xb8>
   145e4:	mov	r2, #3
   145e8:	movw	r1, #47672	; 0xba38
   145ec:	movt	r1, #1
   145f0:	mov	r0, r6
   145f4:	bl	11358 <strncmp@plt>
   145f8:	cmp	r0, #0
   145fc:	movne	r4, r6
   14600:	bne	14614 <_obstack_memory_used@@Base+0xb8>
   14604:	add	r4, r5, #4
   14608:	movw	r3, #2224	; 0x8b0
   1460c:	movt	r3, #3
   14610:	str	r4, [r3]
   14614:	movw	r3, #2276	; 0x8e4
   14618:	movt	r3, #3
   1461c:	str	r4, [r3]
   14620:	movw	r3, #2228	; 0x8b4
   14624:	movt	r3, #3
   14628:	str	r4, [r3]
   1462c:	ldrd	r4, [sp]
   14630:	ldr	r6, [sp, #8]
   14634:	add	sp, sp, #12
   14638:	pop	{pc}		; (ldr pc, [sp], #4)
   1463c:	movw	r3, #2232	; 0x8b8
   14640:	movt	r3, #3
   14644:	ldr	r3, [r3]
   14648:	mov	r2, #55	; 0x37
   1464c:	mov	r1, #1
   14650:	movw	r0, #47608	; 0xb9f8
   14654:	movt	r0, #1
   14658:	bl	11190 <fwrite@plt>
   1465c:	bl	11364 <abort@plt>
   14660:	strd	r4, [sp, #-16]!
   14664:	str	r6, [sp, #8]
   14668:	str	lr, [sp, #12]
   1466c:	sub	sp, sp, #32
   14670:	mov	r4, r0
   14674:	ldr	r5, [sp, #48]	; 0x30
   14678:	ldr	r6, [sp, #52]	; 0x34
   1467c:	cmp	r1, #0
   14680:	beq	1471c <_obstack_memory_used@@Base+0x1c0>
   14684:	str	r3, [sp]
   14688:	mov	r3, r2
   1468c:	mov	r2, r1
   14690:	movw	r1, #47676	; 0xba3c
   14694:	movt	r1, #1
   14698:	bl	11250 <fprintf@plt>
   1469c:	movw	r3, #2022	; 0x7e6
   146a0:	movw	r2, #47696	; 0xba50
   146a4:	movt	r2, #1
   146a8:	movw	r1, #48464	; 0xbd50
   146ac:	movt	r1, #1
   146b0:	mov	r0, r4
   146b4:	bl	11250 <fprintf@plt>
   146b8:	mov	r1, r4
   146bc:	mov	r0, #10
   146c0:	bl	112c8 <fputc@plt>
   146c4:	movw	r2, #47700	; 0xba54
   146c8:	movt	r2, #1
   146cc:	movw	r1, #47736	; 0xba78
   146d0:	movt	r1, #1
   146d4:	mov	r0, r4
   146d8:	bl	11250 <fprintf@plt>
   146dc:	mov	r1, r4
   146e0:	mov	r0, #10
   146e4:	bl	112c8 <fputc@plt>
   146e8:	cmp	r6, #9
   146ec:	ldrls	pc, [pc, r6, lsl #2]
   146f0:	b	14914 <_obstack_memory_used@@Base+0x3b8>
   146f4:	andeq	r4, r1, r0, asr #14
   146f8:	andeq	r4, r1, ip, lsr #14
   146fc:	andeq	r4, r1, r4, asr r7
   14700:	andeq	r4, r1, r0, ror r7
   14704:	muleq	r1, r4, r7
   14708:	andeq	r4, r1, r0, asr #15
   1470c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14710:	andeq	r4, r1, r0, lsr r8
   14714:	andeq	r4, r1, r4, ror r8
   14718:	andeq	r4, r1, r0, asr #17
   1471c:	movw	r1, #47688	; 0xba48
   14720:	movt	r1, #1
   14724:	bl	11250 <fprintf@plt>
   14728:	b	1469c <_obstack_memory_used@@Base+0x140>
   1472c:	ldr	r2, [r5]
   14730:	movw	r1, #47908	; 0xbb24
   14734:	movt	r1, #1
   14738:	mov	r0, r4
   1473c:	bl	11250 <fprintf@plt>
   14740:	add	sp, sp, #32
   14744:	ldrd	r4, [sp]
   14748:	ldr	r6, [sp, #8]
   1474c:	add	sp, sp, #12
   14750:	pop	{pc}		; (ldr pc, [sp], #4)
   14754:	ldr	r3, [r5, #4]
   14758:	ldr	r2, [r5]
   1475c:	movw	r1, #47924	; 0xbb34
   14760:	movt	r1, #1
   14764:	mov	r0, r4
   14768:	bl	11250 <fprintf@plt>
   1476c:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14770:	ldr	r3, [r5, #8]
   14774:	str	r3, [sp]
   14778:	ldr	r3, [r5, #4]
   1477c:	ldr	r2, [r5]
   14780:	movw	r1, #47948	; 0xbb4c
   14784:	movt	r1, #1
   14788:	mov	r0, r4
   1478c:	bl	11250 <fprintf@plt>
   14790:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14794:	ldr	r3, [r5, #12]
   14798:	str	r3, [sp, #4]
   1479c:	ldr	r3, [r5, #8]
   147a0:	str	r3, [sp]
   147a4:	ldr	r3, [r5, #4]
   147a8:	ldr	r2, [r5]
   147ac:	movw	r1, #47976	; 0xbb68
   147b0:	movt	r1, #1
   147b4:	mov	r0, r4
   147b8:	bl	11250 <fprintf@plt>
   147bc:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   147c0:	ldr	r3, [r5, #16]
   147c4:	str	r3, [sp, #8]
   147c8:	ldr	r3, [r5, #12]
   147cc:	str	r3, [sp, #4]
   147d0:	ldr	r3, [r5, #8]
   147d4:	str	r3, [sp]
   147d8:	ldr	r3, [r5, #4]
   147dc:	ldr	r2, [r5]
   147e0:	movw	r1, #48008	; 0xbb88
   147e4:	movt	r1, #1
   147e8:	mov	r0, r4
   147ec:	bl	11250 <fprintf@plt>
   147f0:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   147f4:	ldr	r3, [r5, #20]
   147f8:	str	r3, [sp, #12]
   147fc:	ldr	r3, [r5, #16]
   14800:	str	r3, [sp, #8]
   14804:	ldr	r3, [r5, #12]
   14808:	str	r3, [sp, #4]
   1480c:	ldr	r3, [r5, #8]
   14810:	str	r3, [sp]
   14814:	ldr	r3, [r5, #4]
   14818:	ldr	r2, [r5]
   1481c:	movw	r1, #48044	; 0xbbac
   14820:	movt	r1, #1
   14824:	mov	r0, r4
   14828:	bl	11250 <fprintf@plt>
   1482c:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14830:	ldr	r3, [r5, #24]
   14834:	str	r3, [sp, #16]
   14838:	ldr	r3, [r5, #20]
   1483c:	str	r3, [sp, #12]
   14840:	ldr	r3, [r5, #16]
   14844:	str	r3, [sp, #8]
   14848:	ldr	r3, [r5, #12]
   1484c:	str	r3, [sp, #4]
   14850:	ldr	r3, [r5, #8]
   14854:	str	r3, [sp]
   14858:	ldr	r3, [r5, #4]
   1485c:	ldr	r2, [r5]
   14860:	movw	r1, #48084	; 0xbbd4
   14864:	movt	r1, #1
   14868:	mov	r0, r4
   1486c:	bl	11250 <fprintf@plt>
   14870:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14874:	ldr	r3, [r5, #28]
   14878:	str	r3, [sp, #20]
   1487c:	ldr	r3, [r5, #24]
   14880:	str	r3, [sp, #16]
   14884:	ldr	r3, [r5, #20]
   14888:	str	r3, [sp, #12]
   1488c:	ldr	r3, [r5, #16]
   14890:	str	r3, [sp, #8]
   14894:	ldr	r3, [r5, #12]
   14898:	str	r3, [sp, #4]
   1489c:	ldr	r3, [r5, #8]
   148a0:	str	r3, [sp]
   148a4:	ldr	r3, [r5, #4]
   148a8:	ldr	r2, [r5]
   148ac:	movw	r1, #48128	; 0xbc00
   148b0:	movt	r1, #1
   148b4:	mov	r0, r4
   148b8:	bl	11250 <fprintf@plt>
   148bc:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   148c0:	ldr	r3, [r5, #32]
   148c4:	str	r3, [sp, #24]
   148c8:	ldr	r3, [r5, #28]
   148cc:	str	r3, [sp, #20]
   148d0:	ldr	r3, [r5, #24]
   148d4:	str	r3, [sp, #16]
   148d8:	ldr	r3, [r5, #20]
   148dc:	str	r3, [sp, #12]
   148e0:	ldr	r3, [r5, #16]
   148e4:	str	r3, [sp, #8]
   148e8:	ldr	r3, [r5, #12]
   148ec:	str	r3, [sp, #4]
   148f0:	ldr	r3, [r5, #8]
   148f4:	str	r3, [sp]
   148f8:	ldr	r3, [r5, #4]
   148fc:	ldr	r2, [r5]
   14900:	movw	r1, #48176	; 0xbc30
   14904:	movt	r1, #1
   14908:	mov	r0, r4
   1490c:	bl	11250 <fprintf@plt>
   14910:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14914:	ldr	r3, [r5, #32]
   14918:	str	r3, [sp, #24]
   1491c:	ldr	r3, [r5, #28]
   14920:	str	r3, [sp, #20]
   14924:	ldr	r3, [r5, #24]
   14928:	str	r3, [sp, #16]
   1492c:	ldr	r3, [r5, #20]
   14930:	str	r3, [sp, #12]
   14934:	ldr	r3, [r5, #16]
   14938:	str	r3, [sp, #8]
   1493c:	ldr	r3, [r5, #12]
   14940:	str	r3, [sp, #4]
   14944:	ldr	r3, [r5, #8]
   14948:	str	r3, [sp]
   1494c:	ldr	r3, [r5, #4]
   14950:	ldr	r2, [r5]
   14954:	movw	r1, #48228	; 0xbc64
   14958:	movt	r1, #1
   1495c:	mov	r0, r4
   14960:	bl	11250 <fprintf@plt>
   14964:	b	14740 <_obstack_memory_used@@Base+0x1e4>
   14968:	strd	r4, [sp, #-12]!
   1496c:	str	lr, [sp, #8]
   14970:	sub	sp, sp, #12
   14974:	ldr	r5, [sp, #24]
   14978:	ldr	ip, [r5]
   1497c:	cmp	ip, #0
   14980:	beq	149b8 <_obstack_memory_used@@Base+0x45c>
   14984:	mov	lr, r5
   14988:	mov	ip, #0
   1498c:	add	ip, ip, #1
   14990:	ldr	r4, [lr, #4]!
   14994:	cmp	r4, #0
   14998:	bne	1498c <_obstack_memory_used@@Base+0x430>
   1499c:	str	ip, [sp, #4]
   149a0:	str	r5, [sp]
   149a4:	bl	14660 <_obstack_memory_used@@Base+0x104>
   149a8:	add	sp, sp, #12
   149ac:	ldrd	r4, [sp]
   149b0:	add	sp, sp, #8
   149b4:	pop	{pc}		; (ldr pc, [sp], #4)
   149b8:	mov	ip, #0
   149bc:	b	1499c <_obstack_memory_used@@Base+0x440>
   149c0:	strd	r4, [sp, #-12]!
   149c4:	str	lr, [sp, #8]
   149c8:	sub	sp, sp, #52	; 0x34
   149cc:	ldr	r5, [sp, #64]	; 0x40
   149d0:	add	r4, sp, #8
   149d4:	mov	ip, #0
   149d8:	ldr	lr, [r5], #4
   149dc:	str	lr, [r4], #4
   149e0:	cmp	lr, #0
   149e4:	beq	149f4 <_obstack_memory_used@@Base+0x498>
   149e8:	add	ip, ip, #1
   149ec:	cmp	ip, #10
   149f0:	bne	149d8 <_obstack_memory_used@@Base+0x47c>
   149f4:	str	ip, [sp, #4]
   149f8:	add	ip, sp, #8
   149fc:	str	ip, [sp]
   14a00:	bl	14660 <_obstack_memory_used@@Base+0x104>
   14a04:	add	sp, sp, #52	; 0x34
   14a08:	ldrd	r4, [sp]
   14a0c:	add	sp, sp, #8
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)
   14a14:	push	{r3}		; (str r3, [sp, #-4]!)
   14a18:	push	{lr}		; (str lr, [sp, #-4]!)
   14a1c:	sub	sp, sp, #16
   14a20:	add	r3, sp, #24
   14a24:	str	r3, [sp, #12]
   14a28:	str	r3, [sp]
   14a2c:	ldr	r3, [sp, #20]
   14a30:	bl	149c0 <_obstack_memory_used@@Base+0x464>
   14a34:	add	sp, sp, #16
   14a38:	pop	{lr}		; (ldr lr, [sp], #4)
   14a3c:	add	sp, sp, #4
   14a40:	bx	lr
   14a44:	str	r4, [sp, #-8]!
   14a48:	str	lr, [sp, #4]
   14a4c:	movw	r3, #2236	; 0x8bc
   14a50:	movt	r3, #3
   14a54:	ldr	r1, [r3]
   14a58:	mov	r0, #10
   14a5c:	bl	112c8 <fputc@plt>
   14a60:	movw	r1, #48288	; 0xbca0
   14a64:	movt	r1, #1
   14a68:	movw	r0, #48312	; 0xbcb8
   14a6c:	movt	r0, #1
   14a70:	bl	110dc <printf@plt>
   14a74:	movw	r2, #48332	; 0xbccc
   14a78:	movt	r2, #1
   14a7c:	movw	r1, #47572	; 0xb9d4
   14a80:	movt	r1, #1
   14a84:	movw	r0, #48372	; 0xbcf4
   14a88:	movt	r0, #1
   14a8c:	bl	110dc <printf@plt>
   14a90:	movw	r1, #48392	; 0xbd08
   14a94:	movt	r1, #1
   14a98:	movw	r0, #48424	; 0xbd28
   14a9c:	movt	r0, #1
   14aa0:	bl	110dc <printf@plt>
   14aa4:	ldr	r4, [sp]
   14aa8:	add	sp, sp, #4
   14aac:	pop	{pc}		; (ldr pc, [sp], #4)
   14ab0:	str	r4, [sp, #-8]!
   14ab4:	str	lr, [sp, #4]
   14ab8:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   14abc:	cmp	r0, #0
   14ac0:	beq	14ad0 <_obstack_memory_used@@Base+0x574>
   14ac4:	ldr	r4, [sp]
   14ac8:	add	sp, sp, #4
   14acc:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad0:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14ad4:	str	r4, [sp, #-8]!
   14ad8:	str	lr, [sp, #4]
   14adc:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   14ae0:	cmp	r0, #0
   14ae4:	beq	14af4 <_obstack_memory_used@@Base+0x598>
   14ae8:	ldr	r4, [sp]
   14aec:	add	sp, sp, #4
   14af0:	pop	{pc}		; (ldr pc, [sp], #4)
   14af4:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14af8:	str	r4, [sp, #-8]!
   14afc:	str	lr, [sp, #4]
   14b00:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   14b04:	ldr	r4, [sp]
   14b08:	add	sp, sp, #4
   14b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b10:	strd	r4, [sp, #-16]!
   14b14:	str	r6, [sp, #8]
   14b18:	str	lr, [sp, #12]
   14b1c:	mov	r5, r0
   14b20:	mov	r4, r1
   14b24:	bl	15024 <_obstack_memory_used@@Base+0xac8>
   14b28:	cmp	r0, #0
   14b2c:	beq	14b40 <_obstack_memory_used@@Base+0x5e4>
   14b30:	ldrd	r4, [sp]
   14b34:	ldr	r6, [sp, #8]
   14b38:	add	sp, sp, #12
   14b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b40:	adds	r4, r4, #0
   14b44:	movne	r4, #1
   14b48:	cmp	r5, #0
   14b4c:	moveq	r4, #1
   14b50:	cmp	r4, #0
   14b54:	beq	14b30 <_obstack_memory_used@@Base+0x5d4>
   14b58:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14b5c:	str	r4, [sp, #-8]!
   14b60:	str	lr, [sp, #4]
   14b64:	cmp	r1, #0
   14b68:	orreq	r1, r1, #1
   14b6c:	bl	15024 <_obstack_memory_used@@Base+0xac8>
   14b70:	cmp	r0, #0
   14b74:	beq	14b84 <_obstack_memory_used@@Base+0x628>
   14b78:	ldr	r4, [sp]
   14b7c:	add	sp, sp, #4
   14b80:	pop	{pc}		; (ldr pc, [sp], #4)
   14b84:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14b88:	strd	r4, [sp, #-16]!
   14b8c:	str	r6, [sp, #8]
   14b90:	str	lr, [sp, #12]
   14b94:	mov	r4, r0
   14b98:	mov	r6, r1
   14b9c:	mov	r5, r2
   14ba0:	bl	19170 <argp_error@@Base+0xe04>
   14ba4:	cmp	r0, #0
   14ba8:	beq	14bbc <_obstack_memory_used@@Base+0x660>
   14bac:	ldrd	r4, [sp]
   14bb0:	ldr	r6, [sp, #8]
   14bb4:	add	sp, sp, #12
   14bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bbc:	cmp	r4, #0
   14bc0:	beq	14bd0 <_obstack_memory_used@@Base+0x674>
   14bc4:	cmp	r6, #0
   14bc8:	cmpne	r5, #0
   14bcc:	beq	14bac <_obstack_memory_used@@Base+0x650>
   14bd0:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14bd4:	str	r4, [sp, #-8]!
   14bd8:	str	lr, [sp, #4]
   14bdc:	bl	14b88 <_obstack_memory_used@@Base+0x62c>
   14be0:	ldr	r4, [sp]
   14be4:	add	sp, sp, #4
   14be8:	pop	{pc}		; (ldr pc, [sp], #4)
   14bec:	str	r4, [sp, #-8]!
   14bf0:	str	lr, [sp, #4]
   14bf4:	mov	ip, r1
   14bf8:	mov	r3, r2
   14bfc:	cmp	r2, #0
   14c00:	cmpne	r1, #0
   14c04:	moveq	r3, #1
   14c08:	moveq	ip, r3
   14c0c:	mov	r2, r3
   14c10:	mov	r1, ip
   14c14:	bl	19170 <argp_error@@Base+0xe04>
   14c18:	cmp	r0, #0
   14c1c:	beq	14c2c <_obstack_memory_used@@Base+0x6d0>
   14c20:	ldr	r4, [sp]
   14c24:	add	sp, sp, #4
   14c28:	pop	{pc}		; (ldr pc, [sp], #4)
   14c2c:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14c30:	str	r4, [sp, #-8]!
   14c34:	str	lr, [sp, #4]
   14c38:	mov	r2, r1
   14c3c:	mov	r1, r0
   14c40:	mov	r0, #0
   14c44:	bl	14b88 <_obstack_memory_used@@Base+0x62c>
   14c48:	ldr	r4, [sp]
   14c4c:	add	sp, sp, #4
   14c50:	pop	{pc}		; (ldr pc, [sp], #4)
   14c54:	str	r4, [sp, #-8]!
   14c58:	str	lr, [sp, #4]
   14c5c:	mov	r2, r1
   14c60:	mov	r1, r0
   14c64:	mov	r0, #0
   14c68:	bl	14bec <_obstack_memory_used@@Base+0x690>
   14c6c:	ldr	r4, [sp]
   14c70:	add	sp, sp, #4
   14c74:	pop	{pc}		; (ldr pc, [sp], #4)
   14c78:	strd	r4, [sp, #-16]!
   14c7c:	str	r6, [sp, #8]
   14c80:	str	lr, [sp, #12]
   14c84:	mov	r5, r1
   14c88:	ldr	r4, [r1]
   14c8c:	cmp	r0, #0
   14c90:	beq	14cc0 <_obstack_memory_used@@Base+0x764>
   14c94:	lsr	r3, r4, #1
   14c98:	add	r3, r3, #1
   14c9c:	adds	r4, r4, r3
   14ca0:	bcs	14cdc <_obstack_memory_used@@Base+0x780>
   14ca4:	mov	r1, r4
   14ca8:	bl	14b88 <_obstack_memory_used@@Base+0x62c>
   14cac:	str	r4, [r5]
   14cb0:	ldrd	r4, [sp]
   14cb4:	ldr	r6, [sp, #8]
   14cb8:	add	sp, sp, #12
   14cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc0:	cmp	r4, #0
   14cc4:	bne	14ca4 <_obstack_memory_used@@Base+0x748>
   14cc8:	mov	r4, #64	; 0x40
   14ccc:	udiv	r4, r4, r2
   14cd0:	cmp	r2, #64	; 0x40
   14cd4:	addhi	r4, r4, #1
   14cd8:	b	14ca4 <_obstack_memory_used@@Base+0x748>
   14cdc:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14ce0:	str	r4, [sp, #-8]!
   14ce4:	str	lr, [sp, #4]
   14ce8:	mov	r2, #1
   14cec:	bl	14c78 <_obstack_memory_used@@Base+0x71c>
   14cf0:	ldr	r4, [sp]
   14cf4:	add	sp, sp, #4
   14cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   14cfc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14d00:	strd	r6, [sp, #8]
   14d04:	str	r8, [sp, #16]
   14d08:	str	lr, [sp, #20]
   14d0c:	mov	r5, r1
   14d10:	ldr	lr, [sp, #24]
   14d14:	ldr	ip, [r1]
   14d18:	asr	r4, ip, #1
   14d1c:	adds	r4, ip, r4
   14d20:	movvs	r1, #1
   14d24:	movvc	r1, #0
   14d28:	cmp	r1, #0
   14d2c:	mvnne	r4, #-2147483648	; 0x80000000
   14d30:	mvn	r8, r3
   14d34:	lsr	r8, r8, #31
   14d38:	cmp	r3, r4
   14d3c:	movge	r1, #0
   14d40:	andlt	r1, r8, #1
   14d44:	cmp	r1, #0
   14d48:	movne	r4, r3
   14d4c:	smull	r6, r7, r4, lr
   14d50:	asr	r1, r6, #31
   14d54:	cmp	r1, r7
   14d58:	bne	14d70 <_obstack_memory_used@@Base+0x814>
   14d5c:	mov	r1, r6
   14d60:	cmp	r6, #63	; 0x3f
   14d64:	movle	r1, #64	; 0x40
   14d68:	ble	14d74 <_obstack_memory_used@@Base+0x818>
   14d6c:	b	14d80 <_obstack_memory_used@@Base+0x824>
   14d70:	mvn	r1, #-2147483648	; 0x80000000
   14d74:	sdiv	r4, r1, lr
   14d78:	mls	r6, lr, r4, r1
   14d7c:	sub	r1, r1, r6
   14d80:	cmp	r0, #0
   14d84:	moveq	r6, #0
   14d88:	streq	r6, [r5]
   14d8c:	sub	r6, r4, ip
   14d90:	cmp	r6, r2
   14d94:	bge	14dcc <_obstack_memory_used@@Base+0x870>
   14d98:	adds	r2, ip, r2
   14d9c:	mov	r4, r2
   14da0:	bvs	14de8 <_obstack_memory_used@@Base+0x88c>
   14da4:	cmp	r2, r3
   14da8:	movle	r3, #0
   14dac:	andgt	r3, r8, #1
   14db0:	cmp	r3, #0
   14db4:	bne	14de8 <_obstack_memory_used@@Base+0x88c>
   14db8:	smull	r2, r3, r2, lr
   14dbc:	asr	ip, r2, #31
   14dc0:	mov	r1, r2
   14dc4:	cmp	ip, r3
   14dc8:	bne	14de8 <_obstack_memory_used@@Base+0x88c>
   14dcc:	bl	14b10 <_obstack_memory_used@@Base+0x5b4>
   14dd0:	str	r4, [r5]
   14dd4:	ldrd	r4, [sp]
   14dd8:	ldrd	r6, [sp, #8]
   14ddc:	ldr	r8, [sp, #16]
   14de0:	add	sp, sp, #20
   14de4:	pop	{pc}		; (ldr pc, [sp], #4)
   14de8:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14dec:	str	r4, [sp, #-8]!
   14df0:	str	lr, [sp, #4]
   14df4:	bl	14f74 <_obstack_memory_used@@Base+0xa18>
   14df8:	cmp	r0, #0
   14dfc:	beq	14e0c <_obstack_memory_used@@Base+0x8b0>
   14e00:	ldr	r4, [sp]
   14e04:	add	sp, sp, #4
   14e08:	pop	{pc}		; (ldr pc, [sp], #4)
   14e0c:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14e10:	str	r4, [sp, #-8]!
   14e14:	str	lr, [sp, #4]
   14e18:	mov	r1, #1
   14e1c:	bl	14dec <_obstack_memory_used@@Base+0x890>
   14e20:	ldr	r4, [sp]
   14e24:	add	sp, sp, #4
   14e28:	pop	{pc}		; (ldr pc, [sp], #4)
   14e2c:	str	r4, [sp, #-8]!
   14e30:	str	lr, [sp, #4]
   14e34:	bl	14f74 <_obstack_memory_used@@Base+0xa18>
   14e38:	cmp	r0, #0
   14e3c:	beq	14e4c <_obstack_memory_used@@Base+0x8f0>
   14e40:	ldr	r4, [sp]
   14e44:	add	sp, sp, #4
   14e48:	pop	{pc}		; (ldr pc, [sp], #4)
   14e4c:	bl	14f44 <_obstack_memory_used@@Base+0x9e8>
   14e50:	str	r4, [sp, #-8]!
   14e54:	str	lr, [sp, #4]
   14e58:	mov	r1, #1
   14e5c:	bl	14e2c <_obstack_memory_used@@Base+0x8d0>
   14e60:	ldr	r4, [sp]
   14e64:	add	sp, sp, #4
   14e68:	pop	{pc}		; (ldr pc, [sp], #4)
   14e6c:	strd	r4, [sp, #-16]!
   14e70:	str	r6, [sp, #8]
   14e74:	str	lr, [sp, #12]
   14e78:	mov	r5, r0
   14e7c:	mov	r4, r1
   14e80:	mov	r0, r1
   14e84:	bl	14ab0 <_obstack_memory_used@@Base+0x554>
   14e88:	mov	r2, r4
   14e8c:	mov	r1, r5
   14e90:	bl	1113c <memcpy@plt>
   14e94:	ldrd	r4, [sp]
   14e98:	ldr	r6, [sp, #8]
   14e9c:	add	sp, sp, #12
   14ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ea4:	strd	r4, [sp, #-16]!
   14ea8:	str	r6, [sp, #8]
   14eac:	str	lr, [sp, #12]
   14eb0:	mov	r5, r0
   14eb4:	mov	r4, r1
   14eb8:	mov	r0, r1
   14ebc:	bl	14ad4 <_obstack_memory_used@@Base+0x578>
   14ec0:	mov	r2, r4
   14ec4:	mov	r1, r5
   14ec8:	bl	1113c <memcpy@plt>
   14ecc:	ldrd	r4, [sp]
   14ed0:	ldr	r6, [sp, #8]
   14ed4:	add	sp, sp, #12
   14ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   14edc:	strd	r4, [sp, #-16]!
   14ee0:	str	r6, [sp, #8]
   14ee4:	str	lr, [sp, #12]
   14ee8:	mov	r5, r0
   14eec:	mov	r4, r1
   14ef0:	add	r0, r1, #1
   14ef4:	bl	14ad4 <_obstack_memory_used@@Base+0x578>
   14ef8:	mov	r2, #0
   14efc:	strb	r2, [r0, r4]
   14f00:	mov	r2, r4
   14f04:	mov	r1, r5
   14f08:	bl	1113c <memcpy@plt>
   14f0c:	ldrd	r4, [sp]
   14f10:	ldr	r6, [sp, #8]
   14f14:	add	sp, sp, #12
   14f18:	pop	{pc}		; (ldr pc, [sp], #4)
   14f1c:	str	r4, [sp, #-8]!
   14f20:	str	lr, [sp, #4]
   14f24:	mov	r4, r0
   14f28:	bl	11238 <strlen@plt>
   14f2c:	add	r1, r0, #1
   14f30:	mov	r0, r4
   14f34:	bl	14e6c <_obstack_memory_used@@Base+0x910>
   14f38:	ldr	r4, [sp]
   14f3c:	add	sp, sp, #4
   14f40:	pop	{pc}		; (ldr pc, [sp], #4)
   14f44:	str	r4, [sp, #-8]!
   14f48:	str	lr, [sp, #4]
   14f4c:	movw	r3, #2200	; 0x898
   14f50:	movt	r3, #3
   14f54:	ldr	r0, [r3]
   14f58:	movw	r3, #47588	; 0xb9e4
   14f5c:	movt	r3, #1
   14f60:	movw	r2, #47284	; 0xb8b4
   14f64:	movt	r2, #1
   14f68:	mov	r1, #0
   14f6c:	bl	111b4 <error@plt>
   14f70:	bl	11364 <abort@plt>
   14f74:	strd	r4, [sp, #-16]!
   14f78:	str	r6, [sp, #8]
   14f7c:	str	lr, [sp, #12]
   14f80:	cmp	r1, #0
   14f84:	cmpne	r0, #0
   14f88:	beq	14fc4 <_obstack_memory_used@@Base+0xa68>
   14f8c:	mov	r2, r0
   14f90:	mov	r3, r1
   14f94:	umull	r4, r5, r0, r1
   14f98:	adds	r1, r5, #0
   14f9c:	movne	r1, #1
   14fa0:	cmp	r4, #0
   14fa4:	movlt	r1, #1
   14fa8:	cmp	r1, #0
   14fac:	beq	14fcc <_obstack_memory_used@@Base+0xa70>
   14fb0:	bl	1125c <__errno_location@plt>
   14fb4:	mov	r3, #12
   14fb8:	str	r3, [r0]
   14fbc:	mov	r0, #0
   14fc0:	b	14fd8 <_obstack_memory_used@@Base+0xa7c>
   14fc4:	mov	r3, #1
   14fc8:	mov	r2, r3
   14fcc:	mov	r1, r3
   14fd0:	mov	r0, r2
   14fd4:	bl	110a0 <calloc@plt>
   14fd8:	ldrd	r4, [sp]
   14fdc:	ldr	r6, [sp, #8]
   14fe0:	add	sp, sp, #12
   14fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   14fe8:	str	r4, [sp, #-8]!
   14fec:	str	lr, [sp, #4]
   14ff0:	cmp	r0, #0
   14ff4:	beq	15010 <_obstack_memory_used@@Base+0xab4>
   14ff8:	bge	15014 <_obstack_memory_used@@Base+0xab8>
   14ffc:	bl	1125c <__errno_location@plt>
   15000:	mov	r3, #12
   15004:	str	r3, [r0]
   15008:	mov	r0, #0
   1500c:	b	15018 <_obstack_memory_used@@Base+0xabc>
   15010:	mov	r0, #1
   15014:	bl	111d8 <malloc@plt>
   15018:	ldr	r4, [sp]
   1501c:	add	sp, sp, #4
   15020:	pop	{pc}		; (ldr pc, [sp], #4)
   15024:	str	r4, [sp, #-8]!
   15028:	str	lr, [sp, #4]
   1502c:	cmp	r0, #0
   15030:	beq	15054 <_obstack_memory_used@@Base+0xaf8>
   15034:	cmp	r1, #0
   15038:	beq	15060 <_obstack_memory_used@@Base+0xb04>
   1503c:	cmp	r1, #0
   15040:	blt	1506c <_obstack_memory_used@@Base+0xb10>
   15044:	bl	1116c <realloc@plt>
   15048:	ldr	r4, [sp]
   1504c:	add	sp, sp, #4
   15050:	pop	{pc}		; (ldr pc, [sp], #4)
   15054:	mov	r0, r1
   15058:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   1505c:	b	15048 <_obstack_memory_used@@Base+0xaec>
   15060:	bl	140ac <argp_parse@@Base+0xcd8>
   15064:	mov	r0, #0
   15068:	b	15048 <_obstack_memory_used@@Base+0xaec>
   1506c:	bl	1125c <__errno_location@plt>
   15070:	mov	r3, #12
   15074:	str	r3, [r0]
   15078:	mov	r0, #0
   1507c:	b	15048 <_obstack_memory_used@@Base+0xaec>
   15080:	ldr	r3, [r0]
   15084:	ldr	r2, [r0, #4]
   15088:	cmp	r2, #0
   1508c:	beq	150c8 <_obstack_memory_used@@Base+0xb6c>
   15090:	add	r3, r3, #24
   15094:	b	150a4 <_obstack_memory_used@@Base+0xb48>
   15098:	add	r3, r3, #24
   1509c:	subs	r2, r2, #1
   150a0:	beq	150c0 <_obstack_memory_used@@Base+0xb64>
   150a4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   150a8:	cmp	r0, #0
   150ac:	beq	15098 <_obstack_memory_used@@Base+0xb3c>
   150b0:	ldr	r1, [r3, #-12]
   150b4:	tst	r1, #2
   150b8:	bne	15098 <_obstack_memory_used@@Base+0xb3c>
   150bc:	bx	lr
   150c0:	mov	r0, #0
   150c4:	bx	lr
   150c8:	mov	r0, #0
   150cc:	b	150bc <_obstack_memory_used@@Base+0xb60>
   150d0:	ldr	r2, [r0, #8]
   150d4:	cmp	r2, #0
   150d8:	beq	150e4 <_obstack_memory_used@@Base+0xb88>
   150dc:	mov	r0, #0
   150e0:	bx	lr
   150e4:	ldr	r2, [r1, #8]
   150e8:	cmp	r2, #0
   150ec:	bne	150dc <_obstack_memory_used@@Base+0xb80>
   150f0:	ldr	r2, [r0, #12]
   150f4:	ldr	r1, [r1, #12]
   150f8:	orr	r2, r2, r1
   150fc:	tst	r2, #16
   15100:	bne	150dc <_obstack_memory_used@@Base+0xb80>
   15104:	ldr	r1, [r0, #4]
   15108:	ldr	r2, [r3]
   1510c:	add	r0, r2, #1
   15110:	str	r0, [r3]
   15114:	strb	r1, [r2]
   15118:	b	150dc <_obstack_memory_used@@Base+0xb80>
   1511c:	str	r4, [sp, #-8]!
   15120:	str	lr, [sp, #4]
   15124:	mov	r4, r0
   15128:	bl	11220 <__ctype_b_loc@plt>
   1512c:	ldr	r3, [r4]
   15130:	ldrb	r2, [r3]
   15134:	ldr	ip, [r0]
   15138:	lsl	r1, r2, #1
   1513c:	ldrh	r1, [ip, r1]
   15140:	tst	r1, #8192	; 0x2000
   15144:	beq	15154 <_obstack_memory_used@@Base+0xbf8>
   15148:	add	r3, r3, #1
   1514c:	str	r3, [r4]
   15150:	b	1512c <_obstack_memory_used@@Base+0xbd0>
   15154:	subs	ip, r2, #45	; 0x2d
   15158:	movne	ip, #1
   1515c:	cmp	r2, #0
   15160:	beq	15194 <_obstack_memory_used@@Base+0xc38>
   15164:	tst	r1, #8
   15168:	bne	15194 <_obstack_memory_used@@Base+0xc38>
   1516c:	add	r3, r3, #1
   15170:	str	r3, [r4]
   15174:	ldrb	r2, [r3]
   15178:	cmp	r2, #0
   1517c:	beq	15194 <_obstack_memory_used@@Base+0xc38>
   15180:	ldr	r1, [r0]
   15184:	lsl	r2, r2, #1
   15188:	ldrh	r2, [r1, r2]
   1518c:	tst	r2, #8
   15190:	beq	1516c <_obstack_memory_used@@Base+0xc10>
   15194:	mov	r0, ip
   15198:	ldr	r4, [sp]
   1519c:	add	sp, sp, #4
   151a0:	pop	{pc}		; (ldr pc, [sp], #4)
   151a4:	strd	r4, [sp, #-16]!
   151a8:	str	r6, [sp, #8]
   151ac:	str	lr, [sp, #12]
   151b0:	mov	r5, r0
   151b4:	ldr	r0, [r0, #12]
   151b8:	cmp	r0, #0
   151bc:	beq	151d4 <_obstack_memory_used@@Base+0xc78>
   151c0:	ldr	r4, [r0, #24]
   151c4:	bl	140ac <argp_parse@@Base+0xcd8>
   151c8:	mov	r0, r4
   151cc:	cmp	r4, #0
   151d0:	bne	151c0 <_obstack_memory_used@@Base+0xc64>
   151d4:	ldr	r3, [r5, #4]
   151d8:	cmp	r3, #0
   151dc:	bne	151f8 <_obstack_memory_used@@Base+0xc9c>
   151e0:	mov	r0, r5
   151e4:	bl	140ac <argp_parse@@Base+0xcd8>
   151e8:	ldrd	r4, [sp]
   151ec:	ldr	r6, [sp, #8]
   151f0:	add	sp, sp, #12
   151f4:	pop	{pc}		; (ldr pc, [sp], #4)
   151f8:	ldr	r0, [r5]
   151fc:	bl	140ac <argp_parse@@Base+0xcd8>
   15200:	ldr	r0, [r5, #8]
   15204:	bl	140ac <argp_parse@@Base+0xcd8>
   15208:	b	151e0 <_obstack_memory_used@@Base+0xc84>
   1520c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15210:	strd	r6, [sp, #8]
   15214:	str	r8, [sp, #16]
   15218:	str	lr, [sp, #20]
   1521c:	mov	r6, r1
   15220:	ldr	r7, [r0]
   15224:	ldr	r3, [r0, #4]
   15228:	sub	r8, r3, #1
   1522c:	cmp	r3, #0
   15230:	bne	1529c <_obstack_memory_used@@Base+0xd40>
   15234:	mov	r7, #0
   15238:	b	15274 <_obstack_memory_used@@Base+0xd18>
   1523c:	sub	r5, r5, #1
   15240:	add	r4, r4, #24
   15244:	cmn	r5, #1
   15248:	beq	1528c <_obstack_memory_used@@Base+0xd30>
   1524c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   15250:	cmp	r0, #0
   15254:	beq	1523c <_obstack_memory_used@@Base+0xce0>
   15258:	ldr	r3, [r4, #-12]
   1525c:	tst	r3, #2
   15260:	bne	1523c <_obstack_memory_used@@Base+0xce0>
   15264:	mov	r1, r6
   15268:	bl	110c4 <strcmp@plt>
   1526c:	cmp	r0, #0
   15270:	bne	1523c <_obstack_memory_used@@Base+0xce0>
   15274:	mov	r0, r7
   15278:	ldrd	r4, [sp]
   1527c:	ldrd	r6, [sp, #8]
   15280:	ldr	r8, [sp, #16]
   15284:	add	sp, sp, #20
   15288:	pop	{pc}		; (ldr pc, [sp], #4)
   1528c:	add	r7, r7, #28
   15290:	sub	r8, r8, #1
   15294:	cmn	r8, #1
   15298:	beq	152b8 <_obstack_memory_used@@Base+0xd5c>
   1529c:	ldr	r4, [r7]
   152a0:	ldr	r3, [r7, #4]
   152a4:	sub	r5, r3, #1
   152a8:	cmp	r3, #0
   152ac:	beq	1528c <_obstack_memory_used@@Base+0xd30>
   152b0:	add	r4, r4, #24
   152b4:	b	1524c <_obstack_memory_used@@Base+0xcf0>
   152b8:	mov	r7, #0
   152bc:	b	15274 <_obstack_memory_used@@Base+0xd18>
   152c0:	strd	r4, [sp, #-16]!
   152c4:	str	r6, [sp, #8]
   152c8:	str	lr, [sp, #12]
   152cc:	ldr	r4, [r0, #16]
   152d0:	ldr	r0, [r0, #8]
   152d4:	cmp	r0, #0
   152d8:	moveq	r5, #0
   152dc:	beq	152f0 <_obstack_memory_used@@Base+0xd94>
   152e0:	mov	r1, #10
   152e4:	bl	11244 <strchr@plt>
   152e8:	adds	r5, r0, #0
   152ec:	movne	r5, #1
   152f0:	cmp	r4, #0
   152f4:	beq	15318 <_obstack_memory_used@@Base+0xdbc>
   152f8:	ldr	r0, [r4]
   152fc:	cmp	r0, #0
   15300:	beq	15318 <_obstack_memory_used@@Base+0xdbc>
   15304:	bl	152c0 <_obstack_memory_used@@Base+0xd64>
   15308:	add	r5, r5, r0
   1530c:	ldr	r0, [r4, #16]!
   15310:	cmp	r0, #0
   15314:	bne	15304 <_obstack_memory_used@@Base+0xda8>
   15318:	mov	r0, r5
   1531c:	ldrd	r4, [sp]
   15320:	ldr	r6, [sp, #8]
   15324:	add	sp, sp, #12
   15328:	pop	{pc}		; (ldr pc, [sp], #4)
   1532c:	strd	r4, [sp, #-16]!
   15330:	str	r6, [sp, #8]
   15334:	str	lr, [sp, #12]
   15338:	mov	r4, r0
   1533c:	subs	r5, r2, #0
   15340:	beq	15378 <_obstack_memory_used@@Base+0xe1c>
   15344:	mov	r6, r1
   15348:	ldr	r2, [r5, #20]
   1534c:	cmp	r2, #0
   15350:	beq	15378 <_obstack_memory_used@@Base+0xe1c>
   15354:	mov	r1, r3
   15358:	mov	r0, r5
   1535c:	bl	13f28 <argp_parse@@Base+0xb54>
   15360:	ldr	r3, [r5, #20]
   15364:	mov	r2, r0
   15368:	mov	r1, r4
   1536c:	mov	r0, r6
   15370:	blx	r3
   15374:	mov	r4, r0
   15378:	mov	r0, r4
   1537c:	ldrd	r4, [sp]
   15380:	ldr	r6, [sp, #8]
   15384:	add	sp, sp, #12
   15388:	pop	{pc}		; (ldr pc, [sp], #4)
   1538c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15390:	strd	r6, [sp, #8]
   15394:	strd	r8, [sp, #16]
   15398:	strd	sl, [sp, #24]
   1539c:	str	lr, [sp, #32]
   153a0:	sub	sp, sp, #20
   153a4:	ldr	r4, [r0]
   153a8:	ldr	r9, [r0, #8]
   153ac:	ldr	r6, [r0, #4]
   153b0:	cmp	r6, #0
   153b4:	beq	15408 <_obstack_memory_used@@Base+0xeac>
   153b8:	str	r3, [sp, #12]
   153bc:	str	r2, [sp, #8]
   153c0:	str	r1, [sp, #4]
   153c4:	mov	fp, r4
   153c8:	mov	sl, #0
   153cc:	b	15458 <_obstack_memory_used@@Base+0xefc>
   153d0:	and	r3, r5, #4
   153d4:	cmp	r3, #0
   153d8:	moveq	fp, r4
   153dc:	tst	r5, #2
   153e0:	bne	15400 <_obstack_memory_used@@Base+0xea4>
   153e4:	ldr	r3, [sp, #12]
   153e8:	ldr	r2, [sp, #8]
   153ec:	mov	r1, fp
   153f0:	mov	r0, r4
   153f4:	ldr	ip, [sp, #4]
   153f8:	blx	ip
   153fc:	mov	r7, r0
   15400:	add	r9, r9, #1
   15404:	b	15438 <_obstack_memory_used@@Base+0xedc>
   15408:	mov	r7, #0
   1540c:	mov	r0, r7
   15410:	add	sp, sp, #20
   15414:	ldrd	r4, [sp]
   15418:	ldrd	r6, [sp, #8]
   1541c:	ldrd	r8, [sp, #16]
   15420:	ldrd	sl, [sp, #24]
   15424:	add	sp, sp, #32
   15428:	pop	{pc}		; (ldr pc, [sp], #4)
   1542c:	ldrb	r3, [r9]
   15430:	cmp	r3, r8
   15434:	beq	153d0 <_obstack_memory_used@@Base+0xe74>
   15438:	add	r4, r4, #24
   1543c:	subs	r6, r6, #1
   15440:	movne	r3, #1
   15444:	moveq	r3, #0
   15448:	cmp	r7, #0
   1544c:	movne	r3, #0
   15450:	cmp	r3, #0
   15454:	beq	1540c <_obstack_memory_used@@Base+0xeb0>
   15458:	ldr	r5, [r4, #12]
   1545c:	ands	r7, r5, #8
   15460:	movne	r7, sl
   15464:	bne	15438 <_obstack_memory_used@@Base+0xedc>
   15468:	ldr	r8, [r4, #4]
   1546c:	sub	r3, r8, #1
   15470:	cmp	r3, #254	; 0xfe
   15474:	bhi	15438 <_obstack_memory_used@@Base+0xedc>
   15478:	bl	11220 <__ctype_b_loc@plt>
   1547c:	ldr	r2, [r0]
   15480:	lsl	r3, r8, #1
   15484:	ldrh	r3, [r2, r3]
   15488:	tst	r3, #16384	; 0x4000
   1548c:	bne	1542c <_obstack_memory_used@@Base+0xed0>
   15490:	b	15438 <_obstack_memory_used@@Base+0xedc>
   15494:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15498:	strd	r6, [sp, #8]
   1549c:	strd	r8, [sp, #16]
   154a0:	strd	sl, [sp, #24]
   154a4:	str	lr, [sp, #32]
   154a8:	add	fp, sp, #32
   154ac:	sub	sp, sp, #20
   154b0:	ldr	r5, [r0, #4]
   154b4:	cmp	r5, #0
   154b8:	beq	15660 <_obstack_memory_used@@Base+0x1104>
   154bc:	str	r1, [fp, #-48]	; 0xffffffd0
   154c0:	mov	r6, r0
   154c4:	ldr	r0, [r0, #8]
   154c8:	bl	11238 <strlen@plt>
   154cc:	add	r3, r0, #8
   154d0:	bic	r3, r3, #7
   154d4:	sub	sp, sp, r3
   154d8:	mov	r8, sp
   154dc:	str	r8, [fp, #-40]	; 0xffffffd8
   154e0:	ldr	r4, [r6]
   154e4:	movw	r7, #20688	; 0x50d0
   154e8:	movt	r7, #1
   154ec:	ldr	r2, [r4, #20]
   154f0:	sub	r3, fp, #40	; 0x28
   154f4:	ldr	r2, [r2, #24]
   154f8:	mov	r1, r7
   154fc:	mov	r0, r4
   15500:	bl	1538c <_obstack_memory_used@@Base+0xe30>
   15504:	add	r4, r4, #28
   15508:	subs	r5, r5, #1
   1550c:	bne	154ec <_obstack_memory_used@@Base+0xf90>
   15510:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15514:	cmp	r3, r8
   15518:	bhi	1558c <_obstack_memory_used@@Base+0x1030>
   1551c:	ldr	r4, [r6]
   15520:	ldr	r5, [r6, #4]
   15524:	cmp	r5, #0
   15528:	beq	15660 <_obstack_memory_used@@Base+0x1104>
   1552c:	movw	r7, #22616	; 0x5858
   15530:	movt	r7, #1
   15534:	ldr	r2, [r4, #20]
   15538:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1553c:	ldr	r2, [r2, #24]
   15540:	mov	r1, r7
   15544:	mov	r0, r4
   15548:	bl	1538c <_obstack_memory_used@@Base+0xe30>
   1554c:	add	r4, r4, #28
   15550:	subs	r5, r5, #1
   15554:	bne	15534 <_obstack_memory_used@@Base+0xfd8>
   15558:	ldr	r7, [r6]
   1555c:	ldr	r8, [r6, #4]
   15560:	cmp	r8, #0
   15564:	beq	15660 <_obstack_memory_used@@Base+0x1104>
   15568:	add	r7, r7, #28
   1556c:	movw	sl, #48704	; 0xbe40
   15570:	movt	sl, #1
   15574:	movw	r9, #48688	; 0xbe30
   15578:	movt	r9, #1
   1557c:	movw	r3, #48716	; 0xbe4c
   15580:	movt	r3, #1
   15584:	str	r3, [fp, #-52]	; 0xffffffcc
   15588:	b	15648 <_obstack_memory_used@@Base+0x10ec>
   1558c:	add	r2, r3, #1
   15590:	str	r2, [fp, #-40]	; 0xffffffd8
   15594:	mov	r2, #0
   15598:	strb	r2, [r3]
   1559c:	mov	r2, r8
   155a0:	movw	r1, #48680	; 0xbe28
   155a4:	movt	r1, #1
   155a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155ac:	bl	198bc <argp_error@@Base+0x1550>
   155b0:	b	1551c <_obstack_memory_used@@Base+0xfc0>
   155b4:	tst	r1, #16
   155b8:	bne	155ec <_obstack_memory_used@@Base+0x1090>
   155bc:	ldr	r3, [r6, #8]
   155c0:	cmp	r3, #0
   155c4:	bne	155d8 <_obstack_memory_used@@Base+0x107c>
   155c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   155cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155d0:	bl	198bc <argp_error@@Base+0x1550>
   155d4:	b	155ec <_obstack_memory_used@@Base+0x1090>
   155d8:	tst	r1, #1
   155dc:	movne	r1, r9
   155e0:	moveq	r1, sl
   155e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   155e8:	bl	198bc <argp_error@@Base+0x1550>
   155ec:	add	r4, r4, #24
   155f0:	subs	r5, r5, #1
   155f4:	beq	1563c <_obstack_memory_used@@Base+0x10e0>
   155f8:	ldr	r2, [r4]
   155fc:	cmp	r2, #0
   15600:	beq	155ec <_obstack_memory_used@@Base+0x1090>
   15604:	ldr	r1, [r4, #12]
   15608:	and	r3, r1, #4
   1560c:	cmp	r3, #0
   15610:	moveq	r6, r4
   15614:	tst	r1, #2
   15618:	bne	155ec <_obstack_memory_used@@Base+0x1090>
   1561c:	ldr	r3, [r4, #8]
   15620:	ldr	r0, [r6, #12]
   15624:	orr	r1, r1, r0
   15628:	cmp	r3, #0
   1562c:	beq	155b4 <_obstack_memory_used@@Base+0x1058>
   15630:	tst	r1, #16
   15634:	beq	155d8 <_obstack_memory_used@@Base+0x107c>
   15638:	b	155ec <_obstack_memory_used@@Base+0x1090>
   1563c:	add	r7, r7, #28
   15640:	subs	r8, r8, #1
   15644:	beq	15660 <_obstack_memory_used@@Base+0x1104>
   15648:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1564c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   15650:	cmp	r5, #0
   15654:	beq	1563c <_obstack_memory_used@@Base+0x10e0>
   15658:	mov	r6, r4
   1565c:	b	155f8 <_obstack_memory_used@@Base+0x109c>
   15660:	sub	sp, fp, #32
   15664:	ldrd	r4, [sp]
   15668:	ldrd	r6, [sp, #8]
   1566c:	ldrd	r8, [sp, #16]
   15670:	ldrd	sl, [sp, #24]
   15674:	add	sp, sp, #32
   15678:	pop	{pc}		; (ldr pc, [sp], #4)
   1567c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15680:	strd	r6, [sp, #8]
   15684:	str	r8, [sp, #16]
   15688:	str	lr, [sp, #20]
   1568c:	mov	r4, r0
   15690:	mov	r5, r1
   15694:	ldr	r3, [r0, #28]
   15698:	ldr	r2, [r0, #24]
   1569c:	sub	r3, r3, r2
   156a0:	ldr	r2, [r0, #16]
   156a4:	cmp	r3, r2
   156a8:	bhi	156c4 <_obstack_memory_used@@Base+0x1168>
   156ac:	ldr	r3, [r4, #20]
   156b0:	cmp	r3, #0
   156b4:	subge	r5, r5, r3
   156b8:	mov	r6, #32
   156bc:	mov	r7, #1
   156c0:	b	156e0 <_obstack_memory_used@@Base+0x1184>
   156c4:	bl	19244 <argp_error@@Base+0xed8>
   156c8:	b	156ac <_obstack_memory_used@@Base+0x1150>
   156cc:	ldr	r3, [r4, #28]
   156d0:	add	r2, r3, #1
   156d4:	str	r2, [r4, #28]
   156d8:	strb	r6, [r3]
   156dc:	sub	r5, r5, #1
   156e0:	cmp	r5, #0
   156e4:	ble	15710 <_obstack_memory_used@@Base+0x11b4>
   156e8:	ldr	r2, [r4, #28]
   156ec:	ldr	r3, [r4, #32]
   156f0:	cmp	r2, r3
   156f4:	bcc	156cc <_obstack_memory_used@@Base+0x1170>
   156f8:	mov	r1, r7
   156fc:	mov	r0, r4
   15700:	bl	197bc <argp_error@@Base+0x1450>
   15704:	cmp	r0, #0
   15708:	bne	156cc <_obstack_memory_used@@Base+0x1170>
   1570c:	b	156dc <_obstack_memory_used@@Base+0x1180>
   15710:	ldrd	r4, [sp]
   15714:	ldrd	r6, [sp, #8]
   15718:	ldr	r8, [sp, #16]
   1571c:	add	sp, sp, #20
   15720:	pop	{pc}		; (ldr pc, [sp], #4)
   15724:	strd	r4, [sp, #-16]!
   15728:	str	r6, [sp, #8]
   1572c:	str	lr, [sp, #12]
   15730:	ldr	r4, [r0, #12]
   15734:	ands	r4, r4, #8
   15738:	movne	r4, #0
   1573c:	bne	1576c <_obstack_memory_used@@Base+0x1210>
   15740:	ldr	r5, [r0, #4]
   15744:	sub	r3, r5, #1
   15748:	cmp	r3, #254	; 0xfe
   1574c:	bhi	1576c <_obstack_memory_used@@Base+0x1210>
   15750:	bl	11220 <__ctype_b_loc@plt>
   15754:	ldr	r2, [r0]
   15758:	lsl	r3, r5, #1
   1575c:	ldrh	r3, [r2, r3]
   15760:	and	r3, r3, #16384	; 0x4000
   15764:	cmp	r3, #0
   15768:	movne	r4, r5
   1576c:	mov	r0, r4
   15770:	ldrd	r4, [sp]
   15774:	ldr	r6, [sp, #8]
   15778:	add	sp, sp, #12
   1577c:	pop	{pc}		; (ldr pc, [sp], #4)
   15780:	strd	r4, [sp, #-16]!
   15784:	str	r6, [sp, #8]
   15788:	str	lr, [sp, #12]
   1578c:	mov	r4, r0
   15790:	mov	r5, r1
   15794:	ldr	r3, [r0, #28]
   15798:	ldr	r2, [r0, #24]
   1579c:	sub	r3, r3, r2
   157a0:	ldr	r2, [r0, #16]
   157a4:	cmp	r3, r2
   157a8:	bhi	157f8 <_obstack_memory_used@@Base+0x129c>
   157ac:	ldr	r3, [r4, #20]
   157b0:	cmp	r3, #0
   157b4:	addge	r5, r5, r3
   157b8:	ldr	r3, [r4, #8]
   157bc:	cmp	r5, r3
   157c0:	bcc	15818 <_obstack_memory_used@@Base+0x12bc>
   157c4:	ldr	r2, [r4, #28]
   157c8:	ldr	r3, [r4, #32]
   157cc:	cmp	r2, r3
   157d0:	bcs	15800 <_obstack_memory_used@@Base+0x12a4>
   157d4:	ldr	r3, [r4, #28]
   157d8:	add	r2, r3, #1
   157dc:	str	r2, [r4, #28]
   157e0:	mov	r2, #10
   157e4:	strb	r2, [r3]
   157e8:	ldrd	r4, [sp]
   157ec:	ldr	r6, [sp, #8]
   157f0:	add	sp, sp, #12
   157f4:	pop	{pc}		; (ldr pc, [sp], #4)
   157f8:	bl	19244 <argp_error@@Base+0xed8>
   157fc:	b	157ac <_obstack_memory_used@@Base+0x1250>
   15800:	mov	r1, #1
   15804:	mov	r0, r4
   15808:	bl	197bc <argp_error@@Base+0x1450>
   1580c:	cmp	r0, #0
   15810:	bne	157d4 <_obstack_memory_used@@Base+0x1278>
   15814:	b	157e8 <_obstack_memory_used@@Base+0x128c>
   15818:	ldr	r2, [r4, #28]
   1581c:	ldr	r3, [r4, #32]
   15820:	cmp	r2, r3
   15824:	bcs	15840 <_obstack_memory_used@@Base+0x12e4>
   15828:	ldr	r3, [r4, #28]
   1582c:	add	r2, r3, #1
   15830:	str	r2, [r4, #28]
   15834:	mov	r2, #32
   15838:	strb	r2, [r3]
   1583c:	b	157e8 <_obstack_memory_used@@Base+0x128c>
   15840:	mov	r1, #1
   15844:	mov	r0, r4
   15848:	bl	197bc <argp_error@@Base+0x1450>
   1584c:	cmp	r0, #0
   15850:	bne	15828 <_obstack_memory_used@@Base+0x12cc>
   15854:	b	157e8 <_obstack_memory_used@@Base+0x128c>
   15858:	strd	r4, [sp, #-16]!
   1585c:	str	r6, [sp, #8]
   15860:	str	lr, [sp, #12]
   15864:	ldr	r5, [r0, #8]
   15868:	cmp	r5, #0
   1586c:	beq	158b0 <_obstack_memory_used@@Base+0x1354>
   15870:	ldr	r2, [r0, #12]
   15874:	ldr	r1, [r1, #12]
   15878:	orr	r2, r2, r1
   1587c:	tst	r2, #16
   15880:	bne	158bc <_obstack_memory_used@@Base+0x1360>
   15884:	mov	r6, r3
   15888:	mov	r4, r0
   1588c:	tst	r2, #1
   15890:	beq	158d0 <_obstack_memory_used@@Base+0x1374>
   15894:	mov	r3, r5
   15898:	ldr	r2, [r0, #4]
   1589c:	movw	r1, #48724	; 0xbe54
   158a0:	movt	r1, #1
   158a4:	mov	r0, r6
   158a8:	bl	198bc <argp_error@@Base+0x1550>
   158ac:	b	158bc <_obstack_memory_used@@Base+0x1360>
   158b0:	ldr	r5, [r1, #8]
   158b4:	cmp	r5, #0
   158b8:	bne	15870 <_obstack_memory_used@@Base+0x1314>
   158bc:	mov	r0, #0
   158c0:	ldrd	r4, [sp]
   158c4:	ldr	r6, [sp, #8]
   158c8:	add	sp, sp, #12
   158cc:	pop	{pc}		; (ldr pc, [sp], #4)
   158d0:	mov	r0, r5
   158d4:	bl	11238 <strlen@plt>
   158d8:	add	r1, r0, #6
   158dc:	mov	r0, r6
   158e0:	bl	15780 <_obstack_memory_used@@Base+0x1224>
   158e4:	mov	r3, r5
   158e8:	ldr	r2, [r4, #4]
   158ec:	movw	r1, #48736	; 0xbe60
   158f0:	movt	r1, #1
   158f4:	mov	r0, r6
   158f8:	bl	198bc <argp_error@@Base+0x1550>
   158fc:	b	158bc <_obstack_memory_used@@Base+0x1360>
   15900:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15904:	strd	r6, [sp, #8]
   15908:	strd	r8, [sp, #16]
   1590c:	strd	sl, [sp, #24]
   15910:	str	lr, [sp, #32]
   15914:	sub	sp, sp, #28
   15918:	str	r1, [sp, #8]
   1591c:	mov	sl, r2
   15920:	mov	r4, r3
   15924:	ldr	r9, [sp, #64]	; 0x40
   15928:	ldr	r6, [r2]
   1592c:	str	r6, [sp, #20]
   15930:	ldr	r7, [r0, #16]
   15934:	ldr	r2, [r0, #8]
   15938:	mov	ip, r2
   1593c:	str	r2, [sp, #16]
   15940:	mov	r3, r1
   15944:	mov	r2, r0
   15948:	mov	r1, #6
   1594c:	movt	r1, #512	; 0x200
   15950:	mov	r0, ip
   15954:	bl	1532c <_obstack_memory_used@@Base+0xdd0>
   15958:	cmp	r0, #0
   1595c:	str	r0, [sp, #12]
   15960:	beq	15af0 <_obstack_memory_used@@Base+0x1594>
   15964:	mov	r1, #10
   15968:	bl	110f4 <strchrnul@plt>
   1596c:	mov	r5, r0
   15970:	ldrb	r3, [r0]
   15974:	cmp	r3, #0
   15978:	beq	15ac0 <_obstack_memory_used@@Base+0x1564>
   1597c:	ldrb	fp, [r6]
   15980:	cmp	fp, #0
   15984:	ble	15ab8 <_obstack_memory_used@@Base+0x155c>
   15988:	mov	r6, #0
   1598c:	add	r8, r0, #1
   15990:	mov	r1, #10
   15994:	mov	r0, r8
   15998:	bl	110f4 <strchrnul@plt>
   1599c:	add	r6, r6, #1
   159a0:	cmp	r6, fp
   159a4:	bne	1598c <_obstack_memory_used@@Base+0x1430>
   159a8:	mov	r5, r0
   159ac:	ldr	r3, [sl]
   159b0:	add	r3, r3, #1
   159b4:	str	r3, [sl]
   159b8:	mov	fp, #1
   159bc:	add	r1, r5, #1
   159c0:	sub	r1, r1, r8
   159c4:	mov	r0, r9
   159c8:	bl	15780 <_obstack_memory_used@@Base+0x1224>
   159cc:	sub	r6, r5, r8
   159d0:	ldr	r3, [r9, #28]
   159d4:	add	r3, r3, r6
   159d8:	ldr	r2, [r9, #32]
   159dc:	cmp	r2, r3
   159e0:	bcs	159f8 <_obstack_memory_used@@Base+0x149c>
   159e4:	mov	r1, r6
   159e8:	mov	r0, r9
   159ec:	bl	197bc <argp_error@@Base+0x1450>
   159f0:	cmp	r0, #0
   159f4:	beq	15a14 <_obstack_memory_used@@Base+0x14b8>
   159f8:	mov	r2, r6
   159fc:	mov	r1, r8
   15a00:	ldr	r0, [r9, #28]
   15a04:	bl	1113c <memcpy@plt>
   15a08:	ldr	r3, [r9, #28]
   15a0c:	add	r6, r3, r6
   15a10:	str	r6, [r9, #28]
   15a14:	ldr	r2, [sp, #16]
   15a18:	ldr	r3, [sp, #12]
   15a1c:	cmp	r2, r3
   15a20:	bne	15acc <_obstack_memory_used@@Base+0x1570>
   15a24:	cmp	r7, #0
   15a28:	beq	15a64 <_obstack_memory_used@@Base+0x1508>
   15a2c:	ldr	r0, [r7]
   15a30:	cmp	r0, #0
   15a34:	beq	15a64 <_obstack_memory_used@@Base+0x1508>
   15a38:	mov	r3, r4
   15a3c:	str	r9, [sp]
   15a40:	mov	r2, sl
   15a44:	ldr	r1, [sp, #8]
   15a48:	bl	15900 <_obstack_memory_used@@Base+0x13a4>
   15a4c:	clz	r3, r0
   15a50:	lsr	r3, r3, #5
   15a54:	ldr	r0, [r7, #16]!
   15a58:	cmp	r0, #0
   15a5c:	bne	15a3c <_obstack_memory_used@@Base+0x14e0>
   15a60:	mov	r4, r3
   15a64:	cmp	r4, #0
   15a68:	moveq	fp, #0
   15a6c:	cmp	fp, #0
   15a70:	beq	15a94 <_obstack_memory_used@@Base+0x1538>
   15a74:	ldrb	r3, [r5]
   15a78:	cmp	r3, #0
   15a7c:	beq	15ad8 <_obstack_memory_used@@Base+0x157c>
   15a80:	ldr	r2, [sp, #20]
   15a84:	ldrb	r3, [r2]
   15a88:	add	r3, r3, #1
   15a8c:	strb	r3, [r2]
   15a90:	mov	r4, #0
   15a94:	clz	r0, r4
   15a98:	lsr	r0, r0, #5
   15a9c:	add	sp, sp, #28
   15aa0:	ldrd	r4, [sp]
   15aa4:	ldrd	r6, [sp, #8]
   15aa8:	ldrd	r8, [sp, #16]
   15aac:	ldrd	sl, [sp, #24]
   15ab0:	add	sp, sp, #32
   15ab4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ab8:	ldr	r8, [sp, #12]
   15abc:	b	159ac <_obstack_memory_used@@Base+0x1450>
   15ac0:	ldr	r8, [sp, #12]
   15ac4:	mov	fp, #0
   15ac8:	b	159bc <_obstack_memory_used@@Base+0x1460>
   15acc:	mov	r0, r3
   15ad0:	bl	140ac <argp_parse@@Base+0xcd8>
   15ad4:	b	15a24 <_obstack_memory_used@@Base+0x14c8>
   15ad8:	ldr	r2, [sp, #20]
   15adc:	ldrb	r3, [r2]
   15ae0:	cmp	r3, #0
   15ae4:	movne	r3, #0
   15ae8:	strbne	r3, [r2]
   15aec:	b	15a94 <_obstack_memory_used@@Base+0x1538>
   15af0:	cmp	r7, #0
   15af4:	beq	15a94 <_obstack_memory_used@@Base+0x1538>
   15af8:	ldr	r5, [sp, #12]
   15afc:	mov	fp, #0
   15b00:	b	15a2c <_obstack_memory_used@@Base+0x14d0>
   15b04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15b08:	strd	r6, [sp, #8]
   15b0c:	str	r8, [sp, #16]
   15b10:	str	lr, [sp, #20]
   15b14:	mov	r6, r0
   15b18:	mov	r4, r2
   15b1c:	ldr	r3, [r2, #16]
   15b20:	mov	r2, r1
   15b24:	mov	r1, #3
   15b28:	movt	r1, #512	; 0x200
   15b2c:	bl	1532c <_obstack_memory_used@@Base+0xdd0>
   15b30:	subs	r5, r0, #0
   15b34:	beq	15c48 <_obstack_memory_used@@Base+0x16ec>
   15b38:	ldrb	r3, [r5]
   15b3c:	cmp	r3, #0
   15b40:	beq	15c3c <_obstack_memory_used@@Base+0x16e0>
   15b44:	ldr	r3, [r4, #8]
   15b48:	ldr	r3, [r3]
   15b4c:	cmp	r3, #0
   15b50:	beq	15b7c <_obstack_memory_used@@Base+0x1620>
   15b54:	ldr	r7, [r4, #4]
   15b58:	ldr	r2, [r7, #28]
   15b5c:	ldr	r3, [r7, #32]
   15b60:	cmp	r2, r3
   15b64:	bcs	15c6c <_obstack_memory_used@@Base+0x1710>
   15b68:	ldr	r3, [r7, #28]
   15b6c:	add	r2, r3, #1
   15b70:	str	r2, [r7, #28]
   15b74:	mov	r2, #10
   15b78:	strb	r2, [r3]
   15b7c:	movw	r8, #2160	; 0x870
   15b80:	movt	r8, #3
   15b84:	ldr	r1, [r8, #24]
   15b88:	ldr	r0, [r4, #4]
   15b8c:	bl	1567c <_obstack_memory_used@@Base+0x1120>
   15b90:	ldr	r7, [r4, #4]
   15b94:	ldr	r8, [r8, #24]
   15b98:	ldr	r3, [r7, #28]
   15b9c:	ldr	r2, [r7, #24]
   15ba0:	sub	r3, r3, r2
   15ba4:	ldr	r2, [r7, #16]
   15ba8:	cmp	r3, r2
   15bac:	bhi	15c84 <_obstack_memory_used@@Base+0x1728>
   15bb0:	str	r8, [r7, #4]
   15bb4:	ldr	r7, [r4, #4]
   15bb8:	movw	r3, #2160	; 0x870
   15bbc:	movt	r3, #3
   15bc0:	ldr	r8, [r3, #24]
   15bc4:	ldr	r3, [r7, #28]
   15bc8:	ldr	r2, [r7, #24]
   15bcc:	sub	r3, r3, r2
   15bd0:	ldr	r2, [r7, #16]
   15bd4:	cmp	r3, r2
   15bd8:	bhi	15c90 <_obstack_memory_used@@Base+0x1734>
   15bdc:	str	r8, [r7, #12]
   15be0:	mov	r0, r5
   15be4:	bl	11238 <strlen@plt>
   15be8:	subs	r7, r0, #0
   15bec:	bne	15c9c <_obstack_memory_used@@Base+0x1740>
   15bf0:	ldr	r7, [r4, #4]
   15bf4:	ldr	r3, [r7, #28]
   15bf8:	ldr	r2, [r7, #24]
   15bfc:	sub	r3, r3, r2
   15c00:	ldr	r2, [r7, #16]
   15c04:	cmp	r3, r2
   15c08:	bhi	15ce8 <_obstack_memory_used@@Base+0x178c>
   15c0c:	mov	r3, #0
   15c10:	str	r3, [r7, #4]
   15c14:	ldr	r7, [r4, #4]
   15c18:	ldr	r2, [r7, #28]
   15c1c:	ldr	r3, [r7, #32]
   15c20:	cmp	r2, r3
   15c24:	bcs	15cf4 <_obstack_memory_used@@Base+0x1798>
   15c28:	ldr	r3, [r7, #28]
   15c2c:	add	r2, r3, #1
   15c30:	str	r2, [r7, #28]
   15c34:	mov	r2, #10
   15c38:	strb	r2, [r3]
   15c3c:	ldr	r3, [r4, #8]
   15c40:	mov	r2, #1
   15c44:	str	r2, [r3, #4]
   15c48:	cmp	r6, r5
   15c4c:	beq	15c58 <_obstack_memory_used@@Base+0x16fc>
   15c50:	mov	r0, r5
   15c54:	bl	140ac <argp_parse@@Base+0xcd8>
   15c58:	ldrd	r4, [sp]
   15c5c:	ldrd	r6, [sp, #8]
   15c60:	ldr	r8, [sp, #16]
   15c64:	add	sp, sp, #20
   15c68:	pop	{pc}		; (ldr pc, [sp], #4)
   15c6c:	mov	r1, #1
   15c70:	mov	r0, r7
   15c74:	bl	197bc <argp_error@@Base+0x1450>
   15c78:	cmp	r0, #0
   15c7c:	bne	15b68 <_obstack_memory_used@@Base+0x160c>
   15c80:	b	15b7c <_obstack_memory_used@@Base+0x1620>
   15c84:	mov	r0, r7
   15c88:	bl	19244 <argp_error@@Base+0xed8>
   15c8c:	b	15bb0 <_obstack_memory_used@@Base+0x1654>
   15c90:	mov	r0, r7
   15c94:	bl	19244 <argp_error@@Base+0xed8>
   15c98:	b	15bdc <_obstack_memory_used@@Base+0x1680>
   15c9c:	ldr	r8, [r4, #4]
   15ca0:	ldr	r3, [r8, #28]
   15ca4:	add	r3, r3, r7
   15ca8:	ldr	r2, [r8, #32]
   15cac:	cmp	r2, r3
   15cb0:	bcs	15cc8 <_obstack_memory_used@@Base+0x176c>
   15cb4:	mov	r1, r7
   15cb8:	mov	r0, r8
   15cbc:	bl	197bc <argp_error@@Base+0x1450>
   15cc0:	cmp	r0, #0
   15cc4:	beq	15bf0 <_obstack_memory_used@@Base+0x1694>
   15cc8:	mov	r2, r7
   15ccc:	mov	r1, r5
   15cd0:	ldr	r0, [r8, #28]
   15cd4:	bl	1113c <memcpy@plt>
   15cd8:	ldr	r3, [r8, #28]
   15cdc:	add	r7, r3, r7
   15ce0:	str	r7, [r8, #28]
   15ce4:	b	15bf0 <_obstack_memory_used@@Base+0x1694>
   15ce8:	mov	r0, r7
   15cec:	bl	19244 <argp_error@@Base+0xed8>
   15cf0:	b	15c0c <_obstack_memory_used@@Base+0x16b0>
   15cf4:	mov	r1, #1
   15cf8:	mov	r0, r7
   15cfc:	bl	197bc <argp_error@@Base+0x1450>
   15d00:	cmp	r0, #0
   15d04:	bne	15c28 <_obstack_memory_used@@Base+0x16cc>
   15d08:	b	15c3c <_obstack_memory_used@@Base+0x16e0>
   15d0c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15d10:	strd	r6, [sp, #8]
   15d14:	str	r8, [sp, #16]
   15d18:	str	lr, [sp, #20]
   15d1c:	mov	r6, r0
   15d20:	mov	r4, r1
   15d24:	ldr	r3, [r1, #12]
   15d28:	cmp	r3, #0
   15d2c:	beq	15e60 <_obstack_memory_used@@Base+0x1904>
   15d30:	ldr	r3, [r1, #8]
   15d34:	ldr	r7, [r3]
   15d38:	ldr	r2, [r1]
   15d3c:	ldr	r5, [r2, #16]
   15d40:	ldr	r3, [r3, #4]
   15d44:	cmp	r3, #0
   15d48:	cmpne	r7, #0
   15d4c:	bne	15e00 <_obstack_memory_used@@Base+0x18a4>
   15d50:	cmp	r5, #0
   15d54:	beq	15dd8 <_obstack_memory_used@@Base+0x187c>
   15d58:	ldr	r0, [r5]
   15d5c:	cmp	r0, #0
   15d60:	beq	15dd8 <_obstack_memory_used@@Base+0x187c>
   15d64:	ldrb	r3, [r0]
   15d68:	cmp	r3, #0
   15d6c:	beq	15dd8 <_obstack_memory_used@@Base+0x187c>
   15d70:	cmp	r7, #0
   15d74:	beq	15da4 <_obstack_memory_used@@Base+0x1848>
   15d78:	ldr	r3, [r7, #16]
   15d7c:	cmp	r3, r5
   15d80:	beq	15dd8 <_obstack_memory_used@@Base+0x187c>
   15d84:	cmp	r3, #0
   15d88:	beq	15da4 <_obstack_memory_used@@Base+0x1848>
   15d8c:	ldr	r3, [r3, #12]
   15d90:	cmp	r3, #0
   15d94:	cmpne	r5, r3
   15d98:	bne	15d8c <_obstack_memory_used@@Base+0x1830>
   15d9c:	cmp	r5, r3
   15da0:	beq	15dd8 <_obstack_memory_used@@Base+0x187c>
   15da4:	ldr	r3, [r4, #4]
   15da8:	ldr	r7, [r3, #12]
   15dac:	mov	r2, r4
   15db0:	ldr	r1, [r5, #16]
   15db4:	bl	15b04 <_obstack_memory_used@@Base+0x15a8>
   15db8:	ldr	r5, [r4, #4]
   15dbc:	ldr	r3, [r5, #28]
   15dc0:	ldr	r2, [r5, #24]
   15dc4:	sub	r3, r3, r2
   15dc8:	ldr	r2, [r5, #16]
   15dcc:	cmp	r3, r2
   15dd0:	bhi	15e54 <_obstack_memory_used@@Base+0x18f8>
   15dd4:	str	r7, [r5, #12]
   15dd8:	mov	r3, #0
   15ddc:	str	r3, [r4, #12]
   15de0:	mov	r1, r6
   15de4:	ldr	r0, [r4, #4]
   15de8:	bl	1567c <_obstack_memory_used@@Base+0x1120>
   15dec:	ldrd	r4, [sp]
   15df0:	ldrd	r6, [sp, #8]
   15df4:	ldr	r8, [sp, #16]
   15df8:	add	sp, sp, #20
   15dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   15e00:	ldr	r2, [r2, #12]
   15e04:	ldr	r3, [r7, #12]
   15e08:	cmp	r2, r3
   15e0c:	beq	15d50 <_obstack_memory_used@@Base+0x17f4>
   15e10:	ldr	r8, [r1, #4]
   15e14:	ldr	r2, [r8, #28]
   15e18:	ldr	r3, [r8, #32]
   15e1c:	cmp	r2, r3
   15e20:	bcs	15e3c <_obstack_memory_used@@Base+0x18e0>
   15e24:	ldr	r3, [r8, #28]
   15e28:	add	r2, r3, #1
   15e2c:	str	r2, [r8, #28]
   15e30:	mov	r2, #10
   15e34:	strb	r2, [r3]
   15e38:	b	15d50 <_obstack_memory_used@@Base+0x17f4>
   15e3c:	mov	r1, #1
   15e40:	mov	r0, r8
   15e44:	bl	197bc <argp_error@@Base+0x1450>
   15e48:	cmp	r0, #0
   15e4c:	bne	15e24 <_obstack_memory_used@@Base+0x18c8>
   15e50:	b	15d50 <_obstack_memory_used@@Base+0x17f4>
   15e54:	mov	r0, r5
   15e58:	bl	19244 <argp_error@@Base+0xed8>
   15e5c:	b	15dd4 <_obstack_memory_used@@Base+0x1878>
   15e60:	ldr	r5, [r1, #4]
   15e64:	ldr	r3, [r5, #28]
   15e68:	add	r3, r3, #2
   15e6c:	ldr	r2, [r5, #32]
   15e70:	cmp	r2, r3
   15e74:	bcs	15e8c <_obstack_memory_used@@Base+0x1930>
   15e78:	mov	r1, #2
   15e7c:	mov	r0, r5
   15e80:	bl	197bc <argp_error@@Base+0x1450>
   15e84:	cmp	r0, #0
   15e88:	beq	15de0 <_obstack_memory_used@@Base+0x1884>
   15e8c:	ldr	r2, [r5, #28]
   15e90:	movw	r3, #48748	; 0xbe6c
   15e94:	movt	r3, #1
   15e98:	ldrh	r3, [r3]
   15e9c:	strh	r3, [r2]
   15ea0:	ldr	r3, [r5, #28]
   15ea4:	add	r3, r3, #2
   15ea8:	str	r3, [r5, #28]
   15eac:	b	15de0 <_obstack_memory_used@@Base+0x1884>
   15eb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15eb4:	strd	r6, [sp, #8]
   15eb8:	strd	r8, [sp, #16]
   15ebc:	strd	sl, [sp, #24]
   15ec0:	str	lr, [sp, #32]
   15ec4:	sub	sp, sp, #28
   15ec8:	mov	r8, r0
   15ecc:	str	r1, [sp, #12]
   15ed0:	str	r2, [sp, #8]
   15ed4:	mov	fp, r3
   15ed8:	ldr	sl, [sp, #64]	; 0x40
   15edc:	ldr	r4, [sp, #68]	; 0x44
   15ee0:	ldr	r6, [r0, #12]
   15ee4:	ldr	r9, [r0, #16]
   15ee8:	cmp	r6, #0
   15eec:	beq	16368 <_obstack_memory_used@@Base+0x1e0c>
   15ef0:	mov	r5, r2
   15ef4:	mov	r1, #11
   15ef8:	mov	r0, r6
   15efc:	bl	11244 <strchr@plt>
   15f00:	cmp	r5, #0
   15f04:	beq	15f44 <_obstack_memory_used@@Base+0x19e8>
   15f08:	cmp	r0, #0
   15f0c:	addne	r6, r0, #1
   15f10:	beq	163b0 <_obstack_memory_used@@Base+0x1e54>
   15f14:	ldr	r3, [r8, #20]
   15f18:	cmp	r3, #0
   15f1c:	beq	163b8 <_obstack_memory_used@@Base+0x1e5c>
   15f20:	ldr	r1, [sp, #12]
   15f24:	mov	r0, r8
   15f28:	bl	13f28 <argp_parse@@Base+0xb54>
   15f2c:	str	r0, [sp, #16]
   15f30:	ldr	r3, [r8, #20]
   15f34:	mov	r7, #0
   15f38:	mov	r0, #2
   15f3c:	movt	r0, #512	; 0x200
   15f40:	b	15f90 <_obstack_memory_used@@Base+0x1a34>
   15f44:	cmp	r0, #0
   15f48:	beq	163d4 <_obstack_memory_used@@Base+0x1e78>
   15f4c:	sub	r7, r0, r6
   15f50:	ldr	r3, [r8, #20]
   15f54:	cmp	r3, #0
   15f58:	beq	16178 <_obstack_memory_used@@Base+0x1c1c>
   15f5c:	cmp	r7, #0
   15f60:	beq	15f74 <_obstack_memory_used@@Base+0x1a18>
   15f64:	mov	r1, r7
   15f68:	mov	r0, r6
   15f6c:	bl	11130 <strndup@plt>
   15f70:	mov	r6, r0
   15f74:	ldr	r1, [sp, #12]
   15f78:	mov	r0, r8
   15f7c:	bl	13f28 <argp_parse@@Base+0xb54>
   15f80:	str	r0, [sp, #16]
   15f84:	ldr	r3, [r8, #20]
   15f88:	mov	r0, #1
   15f8c:	movt	r0, #512	; 0x200
   15f90:	ldr	r2, [sp, #16]
   15f94:	mov	r1, r6
   15f98:	blx	r3
   15f9c:	subs	r5, r0, #0
   15fa0:	beq	16284 <_obstack_memory_used@@Base+0x1d28>
   15fa4:	cmp	fp, #0
   15fa8:	bne	16188 <_obstack_memory_used@@Base+0x1c2c>
   15fac:	cmp	r5, r6
   15fb0:	movne	r3, #0
   15fb4:	moveq	r3, #1
   15fb8:	cmp	r7, #0
   15fbc:	moveq	r3, #0
   15fc0:	cmp	r3, #0
   15fc4:	beq	161c8 <_obstack_memory_used@@Base+0x1c6c>
   15fc8:	ldr	r3, [r4, #28]
   15fcc:	add	r3, r3, r7
   15fd0:	ldr	r2, [r4, #32]
   15fd4:	cmp	r2, r3
   15fd8:	bcs	15ff0 <_obstack_memory_used@@Base+0x1a94>
   15fdc:	mov	r1, r7
   15fe0:	mov	r0, r4
   15fe4:	bl	197bc <argp_error@@Base+0x1450>
   15fe8:	cmp	r0, #0
   15fec:	beq	1600c <_obstack_memory_used@@Base+0x1ab0>
   15ff0:	mov	r2, r7
   15ff4:	mov	r1, r6
   15ff8:	ldr	r0, [r4, #28]
   15ffc:	bl	1113c <memcpy@plt>
   16000:	ldr	r3, [r4, #28]
   16004:	add	r3, r3, r7
   16008:	str	r3, [r4, #28]
   1600c:	ldr	r3, [r4, #28]
   16010:	ldr	r2, [r4, #24]
   16014:	sub	r3, r3, r2
   16018:	ldr	r2, [r4, #16]
   1601c:	cmp	r3, r2
   16020:	bhi	16228 <_obstack_memory_used@@Base+0x1ccc>
   16024:	ldr	r3, [r4, #20]
   16028:	bic	r3, r3, r3, asr #31
   1602c:	ldr	r2, [r4, #4]
   16030:	cmp	r2, r3
   16034:	bcc	16234 <_obstack_memory_used@@Base+0x1cd8>
   16038:	cmp	r5, r6
   1603c:	moveq	r5, #1
   16040:	bne	16274 <_obstack_memory_used@@Base+0x1d18>
   16044:	cmp	r6, #0
   16048:	cmpne	r7, #0
   1604c:	beq	16064 <_obstack_memory_used@@Base+0x1b08>
   16050:	ldr	r3, [r8, #20]
   16054:	cmp	r3, #0
   16058:	beq	160e8 <_obstack_memory_used@@Base+0x1b8c>
   1605c:	mov	r0, r6
   16060:	bl	140ac <argp_parse@@Base+0xcd8>
   16064:	ldr	r3, [sp, #8]
   16068:	cmp	r3, #0
   1606c:	beq	160e8 <_obstack_memory_used@@Base+0x1b8c>
   16070:	ldr	r3, [r8, #20]
   16074:	cmp	r3, #0
   16078:	beq	160e8 <_obstack_memory_used@@Base+0x1b8c>
   1607c:	ldr	r2, [sp, #16]
   16080:	mov	r1, #0
   16084:	mov	r0, #4
   16088:	movt	r0, #512	; 0x200
   1608c:	blx	r3
   16090:	subs	r6, r0, #0
   16094:	beq	160e8 <_obstack_memory_used@@Base+0x1b8c>
   16098:	orrs	r3, fp, r5
   1609c:	bne	1628c <_obstack_memory_used@@Base+0x1d30>
   160a0:	mov	r0, r6
   160a4:	bl	11238 <strlen@plt>
   160a8:	subs	r5, r0, #0
   160ac:	bne	162cc <_obstack_memory_used@@Base+0x1d70>
   160b0:	mov	r0, r6
   160b4:	bl	140ac <argp_parse@@Base+0xcd8>
   160b8:	ldr	r3, [r4, #28]
   160bc:	ldr	r2, [r4, #24]
   160c0:	sub	r3, r3, r2
   160c4:	ldr	r2, [r4, #16]
   160c8:	cmp	r3, r2
   160cc:	bhi	16314 <_obstack_memory_used@@Base+0x1db8>
   160d0:	ldr	r3, [r4, #20]
   160d4:	bic	r3, r3, r3, asr #31
   160d8:	ldr	r2, [r4, #4]
   160dc:	cmp	r2, r3
   160e0:	movcs	r5, #1
   160e4:	bcc	16320 <_obstack_memory_used@@Base+0x1dc4>
   160e8:	cmp	r9, #0
   160ec:	beq	16158 <_obstack_memory_used@@Base+0x1bfc>
   160f0:	ldr	r0, [r9]
   160f4:	cmp	r0, #0
   160f8:	beq	16158 <_obstack_memory_used@@Base+0x1bfc>
   160fc:	clz	r6, sl
   16100:	lsr	r6, r6, #5
   16104:	cmp	sl, #0
   16108:	cmpne	r5, #0
   1610c:	bne	16158 <_obstack_memory_used@@Base+0x1bfc>
   16110:	orrs	r3, fp, r5
   16114:	str	r4, [sp, #4]
   16118:	str	sl, [sp]
   1611c:	movne	r3, #1
   16120:	moveq	r3, #0
   16124:	ldr	r2, [sp, #8]
   16128:	ldr	r1, [sp, #12]
   1612c:	bl	15eb0 <_obstack_memory_used@@Base+0x1954>
   16130:	orr	r5, r5, r0
   16134:	ldr	r0, [r9, #16]
   16138:	cmp	r0, #0
   1613c:	beq	16158 <_obstack_memory_used@@Base+0x1bfc>
   16140:	add	r9, r9, #16
   16144:	cmp	r5, #0
   16148:	movne	r3, r6
   1614c:	moveq	r3, #1
   16150:	cmp	r3, #0
   16154:	bne	16110 <_obstack_memory_used@@Base+0x1bb4>
   16158:	mov	r0, r5
   1615c:	add	sp, sp, #28
   16160:	ldrd	r4, [sp]
   16164:	ldrd	r6, [sp, #8]
   16168:	ldrd	r8, [sp, #16]
   1616c:	ldrd	sl, [sp, #24]
   16170:	add	sp, sp, #32
   16174:	pop	{pc}		; (ldr pc, [sp], #4)
   16178:	mov	r5, r6
   1617c:	mov	r3, #0
   16180:	str	r3, [sp, #16]
   16184:	b	15fa4 <_obstack_memory_used@@Base+0x1a48>
   16188:	ldr	r2, [r4, #28]
   1618c:	ldr	r3, [r4, #32]
   16190:	cmp	r2, r3
   16194:	bcs	161b0 <_obstack_memory_used@@Base+0x1c54>
   16198:	ldr	r3, [r4, #28]
   1619c:	add	r2, r3, #1
   161a0:	str	r2, [r4, #28]
   161a4:	mov	r2, #10
   161a8:	strb	r2, [r3]
   161ac:	b	15fac <_obstack_memory_used@@Base+0x1a50>
   161b0:	mov	r1, #1
   161b4:	mov	r0, r4
   161b8:	bl	197bc <argp_error@@Base+0x1450>
   161bc:	cmp	r0, #0
   161c0:	bne	16198 <_obstack_memory_used@@Base+0x1c3c>
   161c4:	b	15fac <_obstack_memory_used@@Base+0x1a50>
   161c8:	mov	r0, r5
   161cc:	bl	11238 <strlen@plt>
   161d0:	subs	r3, r0, #0
   161d4:	str	r3, [sp, #20]
   161d8:	beq	1600c <_obstack_memory_used@@Base+0x1ab0>
   161dc:	ldr	r3, [r4, #28]
   161e0:	mov	r1, r0
   161e4:	add	r3, r3, r0
   161e8:	ldr	r2, [r4, #32]
   161ec:	cmp	r2, r3
   161f0:	bcs	16204 <_obstack_memory_used@@Base+0x1ca8>
   161f4:	mov	r0, r4
   161f8:	bl	197bc <argp_error@@Base+0x1450>
   161fc:	cmp	r0, #0
   16200:	beq	1600c <_obstack_memory_used@@Base+0x1ab0>
   16204:	ldr	r2, [sp, #20]
   16208:	mov	r1, r5
   1620c:	ldr	r0, [r4, #28]
   16210:	bl	1113c <memcpy@plt>
   16214:	ldr	r3, [r4, #28]
   16218:	ldr	r2, [sp, #20]
   1621c:	add	r3, r3, r2
   16220:	str	r3, [r4, #28]
   16224:	b	1600c <_obstack_memory_used@@Base+0x1ab0>
   16228:	mov	r0, r4
   1622c:	bl	19244 <argp_error@@Base+0xed8>
   16230:	b	16024 <_obstack_memory_used@@Base+0x1ac8>
   16234:	ldr	r2, [r4, #28]
   16238:	ldr	r3, [r4, #32]
   1623c:	cmp	r2, r3
   16240:	bcs	1625c <_obstack_memory_used@@Base+0x1d00>
   16244:	ldr	r3, [r4, #28]
   16248:	add	r2, r3, #1
   1624c:	str	r2, [r4, #28]
   16250:	mov	r2, #10
   16254:	strb	r2, [r3]
   16258:	b	16038 <_obstack_memory_used@@Base+0x1adc>
   1625c:	mov	r1, #1
   16260:	mov	r0, r4
   16264:	bl	197bc <argp_error@@Base+0x1450>
   16268:	cmp	r0, #0
   1626c:	bne	16244 <_obstack_memory_used@@Base+0x1ce8>
   16270:	b	16038 <_obstack_memory_used@@Base+0x1adc>
   16274:	mov	r0, r5
   16278:	bl	140ac <argp_parse@@Base+0xcd8>
   1627c:	mov	r5, #1
   16280:	b	16044 <_obstack_memory_used@@Base+0x1ae8>
   16284:	mov	r5, #0
   16288:	b	16044 <_obstack_memory_used@@Base+0x1ae8>
   1628c:	ldr	r2, [r4, #28]
   16290:	ldr	r3, [r4, #32]
   16294:	cmp	r2, r3
   16298:	bcs	162b4 <_obstack_memory_used@@Base+0x1d58>
   1629c:	ldr	r3, [r4, #28]
   162a0:	add	r2, r3, #1
   162a4:	str	r2, [r4, #28]
   162a8:	mov	r2, #10
   162ac:	strb	r2, [r3]
   162b0:	b	160a0 <_obstack_memory_used@@Base+0x1b44>
   162b4:	mov	r1, #1
   162b8:	mov	r0, r4
   162bc:	bl	197bc <argp_error@@Base+0x1450>
   162c0:	cmp	r0, #0
   162c4:	bne	1629c <_obstack_memory_used@@Base+0x1d40>
   162c8:	b	160a0 <_obstack_memory_used@@Base+0x1b44>
   162cc:	ldr	r3, [r4, #28]
   162d0:	add	r3, r3, r5
   162d4:	ldr	r2, [r4, #32]
   162d8:	cmp	r2, r3
   162dc:	bcs	162f4 <_obstack_memory_used@@Base+0x1d98>
   162e0:	mov	r1, r5
   162e4:	mov	r0, r4
   162e8:	bl	197bc <argp_error@@Base+0x1450>
   162ec:	cmp	r0, #0
   162f0:	beq	160b0 <_obstack_memory_used@@Base+0x1b54>
   162f4:	mov	r2, r5
   162f8:	mov	r1, r6
   162fc:	ldr	r0, [r4, #28]
   16300:	bl	1113c <memcpy@plt>
   16304:	ldr	r3, [r4, #28]
   16308:	add	r5, r3, r5
   1630c:	str	r5, [r4, #28]
   16310:	b	160b0 <_obstack_memory_used@@Base+0x1b54>
   16314:	mov	r0, r4
   16318:	bl	19244 <argp_error@@Base+0xed8>
   1631c:	b	160d0 <_obstack_memory_used@@Base+0x1b74>
   16320:	ldr	r2, [r4, #28]
   16324:	ldr	r3, [r4, #32]
   16328:	cmp	r2, r3
   1632c:	bcs	1634c <_obstack_memory_used@@Base+0x1df0>
   16330:	ldr	r3, [r4, #28]
   16334:	add	r2, r3, #1
   16338:	str	r2, [r4, #28]
   1633c:	mov	r2, #10
   16340:	strb	r2, [r3]
   16344:	mov	r5, #1
   16348:	b	160e8 <_obstack_memory_used@@Base+0x1b8c>
   1634c:	mov	r1, #1
   16350:	mov	r0, r4
   16354:	bl	197bc <argp_error@@Base+0x1450>
   16358:	cmp	r0, #0
   1635c:	bne	16330 <_obstack_memory_used@@Base+0x1dd4>
   16360:	mov	r5, #1
   16364:	b	160e8 <_obstack_memory_used@@Base+0x1b8c>
   16368:	ldr	r3, [r0, #20]
   1636c:	cmp	r3, #0
   16370:	moveq	r5, r6
   16374:	beq	163bc <_obstack_memory_used@@Base+0x1e60>
   16378:	ldr	r1, [sp, #12]
   1637c:	mov	r0, r8
   16380:	bl	13f28 <argp_parse@@Base+0xb54>
   16384:	str	r0, [sp, #16]
   16388:	ldr	r3, [r8, #20]
   1638c:	mov	r7, #0
   16390:	mov	r0, #2
   16394:	movt	r0, #512	; 0x200
   16398:	mov	r2, #1
   1639c:	movt	r2, #512	; 0x200
   163a0:	ldr	r1, [sp, #8]
   163a4:	cmp	r1, r7
   163a8:	moveq	r0, r2
   163ac:	b	15f90 <_obstack_memory_used@@Base+0x1a34>
   163b0:	mov	r6, r0
   163b4:	b	15f14 <_obstack_memory_used@@Base+0x19b8>
   163b8:	mov	r5, r6
   163bc:	cmp	r5, #0
   163c0:	streq	r5, [sp, #16]
   163c4:	beq	16064 <_obstack_memory_used@@Base+0x1b08>
   163c8:	mov	r7, #0
   163cc:	str	r7, [sp, #16]
   163d0:	b	15fa4 <_obstack_memory_used@@Base+0x1a48>
   163d4:	ldr	r3, [r8, #20]
   163d8:	cmp	r3, #0
   163dc:	moveq	r5, r6
   163e0:	beq	163bc <_obstack_memory_used@@Base+0x1e60>
   163e4:	ldr	r1, [sp, #12]
   163e8:	mov	r0, r8
   163ec:	bl	13f28 <argp_parse@@Base+0xb54>
   163f0:	str	r0, [sp, #16]
   163f4:	ldr	r3, [r8, #20]
   163f8:	mov	r7, #0
   163fc:	mov	r0, #1
   16400:	movt	r0, #512	; 0x200
   16404:	b	15f90 <_obstack_memory_used@@Base+0x1a34>
   16408:	ldr	r3, [r0, #12]
   1640c:	ldr	r2, [r1, #12]
   16410:	cmp	r3, r2
   16414:	beq	16484 <_obstack_memory_used@@Base+0x1f28>
   16418:	strd	r4, [sp, #-16]!
   1641c:	str	r6, [sp, #8]
   16420:	str	lr, [sp, #12]
   16424:	mov	r5, r1
   16428:	mov	r4, r0
   1642c:	mov	r1, r2
   16430:	mov	r0, r3
   16434:	bl	16408 <_obstack_memory_used@@Base+0x1eac>
   16438:	subs	r3, r0, #0
   1643c:	bne	16470 <_obstack_memory_used@@Base+0x1f14>
   16440:	ldr	r0, [r4, #8]
   16444:	ldr	r3, [r5, #8]
   16448:	mvn	r2, r3
   1644c:	lsr	r2, r2, #31
   16450:	cmp	r2, r0, lsr #31
   16454:	subne	r3, r0, r3
   16458:	subeq	r3, r3, r0
   1645c:	cmp	r3, #0
   16460:	bne	16470 <_obstack_memory_used@@Base+0x1f14>
   16464:	ldr	r3, [r5, #4]
   16468:	ldr	r0, [r4, #4]
   1646c:	sub	r3, r3, r0
   16470:	mov	r0, r3
   16474:	ldrd	r4, [sp]
   16478:	ldr	r6, [sp, #8]
   1647c:	add	sp, sp, #12
   16480:	pop	{pc}		; (ldr pc, [sp], #4)
   16484:	ldr	r2, [r0, #8]
   16488:	ldr	r3, [r1, #8]
   1648c:	mvn	ip, r3
   16490:	lsr	ip, ip, #31
   16494:	cmp	ip, r2, lsr #31
   16498:	subne	r3, r2, r3
   1649c:	subeq	r3, r3, r2
   164a0:	cmp	r3, #0
   164a4:	bne	164b4 <_obstack_memory_used@@Base+0x1f58>
   164a8:	ldr	r3, [r1, #4]
   164ac:	ldr	r0, [r0, #4]
   164b0:	sub	r3, r3, r0
   164b4:	mov	r0, r3
   164b8:	bx	lr
   164bc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   164c0:	strd	r6, [sp, #8]
   164c4:	str	r8, [sp, #16]
   164c8:	str	lr, [sp, #20]
   164cc:	sub	sp, sp, #8
   164d0:	ldr	lr, [r0, #16]
   164d4:	cmp	lr, #0
   164d8:	movne	r3, lr
   164dc:	bne	164ec <_obstack_memory_used@@Base+0x1f90>
   164e0:	ldr	ip, [r0, #12]
   164e4:	b	164fc <_obstack_memory_used@@Base+0x1fa0>
   164e8:	mov	r3, r2
   164ec:	ldr	r2, [r3, #12]
   164f0:	cmp	r2, #0
   164f4:	bne	164e8 <_obstack_memory_used@@Base+0x1f8c>
   164f8:	ldr	ip, [r3, #8]
   164fc:	ldr	r5, [r1, #16]
   16500:	cmp	r5, #0
   16504:	movne	r3, r5
   16508:	bne	16518 <_obstack_memory_used@@Base+0x1fbc>
   1650c:	ldr	r4, [r1, #12]
   16510:	b	16528 <_obstack_memory_used@@Base+0x1fcc>
   16514:	mov	r3, r2
   16518:	ldr	r2, [r3, #12]
   1651c:	cmp	r2, #0
   16520:	bne	16514 <_obstack_memory_used@@Base+0x1fb8>
   16524:	ldr	r4, [r3, #8]
   16528:	mvn	r3, r4
   1652c:	lsr	r3, r3, #31
   16530:	cmp	r3, ip, lsr #31
   16534:	subne	r4, ip, r4
   16538:	subeq	r4, r4, ip
   1653c:	cmp	r4, #0
   16540:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16544:	adds	r4, r5, #0
   16548:	movne	r4, #1
   1654c:	cmp	lr, #0
   16550:	rsbeq	r4, r4, #0
   16554:	rsbne	r4, r4, #1
   16558:	cmp	r4, #0
   1655c:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16560:	mov	r7, r1
   16564:	mov	r6, r0
   16568:	cmp	lr, #0
   1656c:	beq	165ec <_obstack_memory_used@@Base+0x2090>
   16570:	ldr	r1, [lr, #20]
   16574:	ldr	r2, [r5, #20]
   16578:	cmp	r1, r2
   1657c:	ble	165a8 <_obstack_memory_used@@Base+0x204c>
   16580:	ldr	lr, [lr, #12]
   16584:	ldr	r3, [lr, #20]
   16588:	cmp	r2, r3
   1658c:	blt	16580 <_obstack_memory_used@@Base+0x2024>
   16590:	mov	r1, r5
   16594:	mov	r0, lr
   16598:	bl	16408 <_obstack_memory_used@@Base+0x1eac>
   1659c:	subs	r4, r0, #0
   165a0:	moveq	r4, #1
   165a4:	b	16680 <_obstack_memory_used@@Base+0x2124>
   165a8:	cmp	r1, r2
   165ac:	bge	165d8 <_obstack_memory_used@@Base+0x207c>
   165b0:	ldr	r5, [r5, #12]
   165b4:	ldr	r3, [r5, #20]
   165b8:	cmp	r1, r3
   165bc:	blt	165b0 <_obstack_memory_used@@Base+0x2054>
   165c0:	mov	r1, r5
   165c4:	mov	r0, lr
   165c8:	bl	16408 <_obstack_memory_used@@Base+0x1eac>
   165cc:	subs	r4, r0, #0
   165d0:	mvneq	r4, #0
   165d4:	b	16680 <_obstack_memory_used@@Base+0x2124>
   165d8:	mov	r1, r5
   165dc:	mov	r0, lr
   165e0:	bl	16408 <_obstack_memory_used@@Base+0x1eac>
   165e4:	subs	r4, r0, #0
   165e8:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   165ec:	ldr	r3, [r6, #12]
   165f0:	ldr	r4, [r7, #12]
   165f4:	mvn	r2, r4
   165f8:	lsr	r2, r2, #31
   165fc:	cmp	r2, r3, lsr #31
   16600:	subne	r4, r3, r4
   16604:	subeq	r4, r4, r3
   16608:	cmp	r4, #0
   1660c:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16610:	mov	r0, r6
   16614:	bl	15080 <_obstack_memory_used@@Base+0xb24>
   16618:	mov	r5, r0
   1661c:	str	r0, [sp]
   16620:	mov	r0, r7
   16624:	bl	15080 <_obstack_memory_used@@Base+0xb24>
   16628:	str	r0, [sp, #4]
   1662c:	ldr	r3, [r6]
   16630:	ldr	r0, [r3, #12]
   16634:	ubfx	r0, r0, #3, #1
   16638:	cmp	r5, #0
   1663c:	moveq	r0, #0
   16640:	cmp	r0, #0
   16644:	bne	1669c <_obstack_memory_used@@Base+0x2140>
   16648:	ldr	r3, [r7]
   1664c:	ldr	r3, [r3, #12]
   16650:	tst	r3, #8
   16654:	beq	166d4 <_obstack_memory_used@@Base+0x2178>
   16658:	ldr	r3, [sp, #4]
   1665c:	cmp	r3, #0
   16660:	beq	166d4 <_obstack_memory_used@@Base+0x2178>
   16664:	add	r0, sp, #4
   16668:	bl	1511c <_obstack_memory_used@@Base+0xbc0>
   1666c:	adds	r3, r0, #0
   16670:	movne	r3, #1
   16674:	mov	r0, r4
   16678:	subs	r4, r0, r3
   1667c:	beq	166d4 <_obstack_memory_used@@Base+0x2178>
   16680:	mov	r0, r4
   16684:	add	sp, sp, #8
   16688:	ldrd	r4, [sp]
   1668c:	ldrd	r6, [sp, #8]
   16690:	ldr	r8, [sp, #16]
   16694:	add	sp, sp, #20
   16698:	pop	{pc}		; (ldr pc, [sp], #4)
   1669c:	mov	r0, sp
   166a0:	bl	1511c <_obstack_memory_used@@Base+0xbc0>
   166a4:	adds	r0, r0, #0
   166a8:	movne	r0, #1
   166ac:	ldr	r3, [r7]
   166b0:	ldr	r3, [r3, #12]
   166b4:	ands	r3, r3, #8
   166b8:	beq	16678 <_obstack_memory_used@@Base+0x211c>
   166bc:	ldr	r3, [sp, #4]
   166c0:	cmp	r3, #0
   166c4:	moveq	r3, r4
   166c8:	beq	16678 <_obstack_memory_used@@Base+0x211c>
   166cc:	mov	r4, r0
   166d0:	b	16664 <_obstack_memory_used@@Base+0x2108>
   166d4:	ldr	r2, [r6, #20]
   166d8:	movw	r4, #22308	; 0x5724
   166dc:	movt	r4, #1
   166e0:	mov	r3, #0
   166e4:	ldr	r2, [r2, #24]
   166e8:	mov	r1, r4
   166ec:	mov	r0, r6
   166f0:	bl	1538c <_obstack_memory_used@@Base+0xe30>
   166f4:	mov	r5, r0
   166f8:	uxtb	r8, r0
   166fc:	ldr	r2, [r7, #20]
   16700:	mov	r3, #0
   16704:	ldr	r2, [r2, #24]
   16708:	mov	r1, r4
   1670c:	mov	r0, r7
   16710:	bl	1538c <_obstack_memory_used@@Base+0xe30>
   16714:	uxtb	r7, r0
   16718:	cmp	r8, #0
   1671c:	movne	r5, r8
   16720:	bne	16734 <_obstack_memory_used@@Base+0x21d8>
   16724:	ldr	r3, [sp]
   16728:	cmp	r3, #0
   1672c:	ldrbne	r5, [r3]
   16730:	moveq	r5, #0
   16734:	cmp	r7, #0
   16738:	uxtbne	r6, r0
   1673c:	bne	16750 <_obstack_memory_used@@Base+0x21f4>
   16740:	ldr	r3, [sp, #4]
   16744:	cmp	r3, #0
   16748:	ldrbne	r6, [r3]
   1674c:	moveq	r6, #0
   16750:	bl	111fc <__ctype_tolower_loc@plt>
   16754:	ldr	r3, [r0]
   16758:	ldr	r4, [r3, r5, lsl #2]
   1675c:	ldr	r3, [r3, r6, lsl #2]
   16760:	subs	r4, r4, r3
   16764:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16768:	subs	r4, r6, r5
   1676c:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16770:	adds	r4, r7, #0
   16774:	movne	r4, #1
   16778:	cmp	r8, #0
   1677c:	rsbeq	r4, r4, #0
   16780:	rsbne	r4, r4, #1
   16784:	cmp	r4, #0
   16788:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   1678c:	cmp	r8, #0
   16790:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   16794:	ldr	r0, [sp]
   16798:	ldr	r1, [sp, #4]
   1679c:	adds	r4, r1, #0
   167a0:	movne	r4, #1
   167a4:	cmp	r0, #0
   167a8:	rsbeq	r4, r4, #0
   167ac:	rsbne	r4, r4, #1
   167b0:	cmp	r4, #0
   167b4:	bne	16680 <_obstack_memory_used@@Base+0x2124>
   167b8:	cmp	r0, #0
   167bc:	beq	16680 <_obstack_memory_used@@Base+0x2124>
   167c0:	bl	11178 <strcasecmp@plt>
   167c4:	mov	r4, r0
   167c8:	b	16680 <_obstack_memory_used@@Base+0x2124>
   167cc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   167d0:	strd	r6, [sp, #8]
   167d4:	strd	r8, [sp, #16]
   167d8:	strd	sl, [sp, #24]
   167dc:	str	lr, [sp, #32]
   167e0:	sub	sp, sp, #52	; 0x34
   167e4:	str	r0, [sp, #12]
   167e8:	str	r1, [sp, #4]
   167ec:	ldr	fp, [r0, #16]
   167f0:	ldr	r4, [r0]
   167f4:	mov	r0, #16
   167f8:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   167fc:	subs	sl, r0, #0
   16800:	beq	16830 <_obstack_memory_used@@Base+0x22d4>
   16804:	mov	r3, #0
   16808:	str	r3, [sl, #4]
   1680c:	str	r3, [sl, #12]
   16810:	cmp	r4, r3
   16814:	beq	16a3c <_obstack_memory_used@@Base+0x24e0>
   16818:	ldr	r3, [r4, #12]
   1681c:	tst	r3, #4
   16820:	bne	16850 <_obstack_memory_used@@Base+0x22f4>
   16824:	add	r5, r4, #24
   16828:	mov	r6, #0
   1682c:	b	16874 <_obstack_memory_used@@Base+0x2318>
   16830:	movw	r3, #48512	; 0xbd80
   16834:	movt	r3, #1
   16838:	movw	r2, #450	; 0x1c2
   1683c:	movw	r1, #48752	; 0xbe70
   16840:	movt	r1, #1
   16844:	movw	r0, #48764	; 0xbe7c
   16848:	movt	r0, #1
   1684c:	bl	11388 <__assert_fail@plt>
   16850:	movw	r3, #48512	; 0xbd80
   16854:	movt	r3, #1
   16858:	mov	r2, #460	; 0x1cc
   1685c:	movw	r1, #48752	; 0xbe70
   16860:	movt	r1, #1
   16864:	movw	r0, #48768	; 0xbe80
   16868:	movt	r0, #1
   1686c:	bl	11388 <__assert_fail@plt>
   16870:	add	r5, r5, #24
   16874:	mov	r3, r5
   16878:	ldr	r2, [r5, #-20]	; 0xffffffec
   1687c:	cmp	r2, #0
   16880:	bne	16890 <_obstack_memory_used@@Base+0x2334>
   16884:	ldr	r2, [r5, #-24]	; 0xffffffe8
   16888:	cmp	r2, #0
   1688c:	beq	168e0 <_obstack_memory_used@@Base+0x2384>
   16890:	ldr	r2, [r3, #-12]
   16894:	tst	r2, #4
   16898:	bne	168a8 <_obstack_memory_used@@Base+0x234c>
   1689c:	ldr	r2, [sl, #4]
   168a0:	add	r2, r2, #1
   168a4:	str	r2, [sl, #4]
   168a8:	ldr	r2, [r3, #-12]
   168ac:	tst	r2, #8
   168b0:	bne	16870 <_obstack_memory_used@@Base+0x2314>
   168b4:	ldr	r7, [r3, #-20]	; 0xffffffec
   168b8:	sub	r3, r7, #1
   168bc:	cmp	r3, #254	; 0xfe
   168c0:	bhi	16870 <_obstack_memory_used@@Base+0x2314>
   168c4:	bl	11220 <__ctype_b_loc@plt>
   168c8:	ldr	r3, [r0]
   168cc:	lsl	r7, r7, #1
   168d0:	ldrh	r3, [r3, r7]
   168d4:	tst	r3, #16384	; 0x4000
   168d8:	addne	r6, r6, #1
   168dc:	b	16870 <_obstack_memory_used@@Base+0x2314>
   168e0:	ldr	r2, [r5, #-8]
   168e4:	cmp	r2, #0
   168e8:	bne	16890 <_obstack_memory_used@@Base+0x2334>
   168ec:	ldr	r9, [r5, #-4]
   168f0:	cmp	r9, #0
   168f4:	bne	16890 <_obstack_memory_used@@Base+0x2334>
   168f8:	ldr	r0, [sl, #4]
   168fc:	rsb	r0, r0, r0, lsl #3
   16900:	lsl	r0, r0, #2
   16904:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   16908:	str	r0, [sl]
   1690c:	add	r0, r6, #1
   16910:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   16914:	mov	r5, r0
   16918:	str	r0, [sl, #8]
   1691c:	ldr	r7, [sl]
   16920:	cmp	r0, #0
   16924:	cmpne	r7, #0
   16928:	beq	16950 <_obstack_memory_used@@Base+0x23f4>
   1692c:	movw	r3, #37449	; 0x9249
   16930:	movt	r3, #2340	; 0x924
   16934:	ldr	r2, [sl, #4]
   16938:	cmp	r2, r3
   1693c:	bhi	16970 <_obstack_memory_used@@Base+0x2414>
   16940:	add	r7, r7, #28
   16944:	str	fp, [sp, #8]
   16948:	ldr	fp, [sp, #12]
   1694c:	b	169bc <_obstack_memory_used@@Base+0x2460>
   16950:	movw	r3, #48512	; 0xbd80
   16954:	movt	r3, #1
   16958:	movw	r2, #474	; 0x1da
   1695c:	movw	r1, #48752	; 0xbe70
   16960:	movt	r1, #1
   16964:	movw	r0, #48784	; 0xbe90
   16968:	movt	r0, #1
   1696c:	bl	11388 <__assert_fail@plt>
   16970:	movw	r3, #48512	; 0xbd80
   16974:	movt	r3, #1
   16978:	mov	r2, #476	; 0x1dc
   1697c:	movw	r1, #48752	; 0xbe70
   16980:	movt	r1, #1
   16984:	movw	r0, #48820	; 0xbeb4
   16988:	movt	r0, #1
   1698c:	bl	11388 <__assert_fail@plt>
   16990:	ldr	r3, [r4, #4]
   16994:	cmp	r3, #0
   16998:	addeq	r9, r9, #1
   1699c:	b	16a04 <_obstack_memory_used@@Base+0x24a8>
   169a0:	ldr	r3, [r4, #16]
   169a4:	cmp	r3, #0
   169a8:	bne	16ddc <_obstack_memory_used@@Base+0x2880>
   169ac:	ldr	r3, [r4, #20]
   169b0:	cmp	r3, #0
   169b4:	bne	16ddc <_obstack_memory_used@@Base+0x2880>
   169b8:	add	r7, r7, #28
   169bc:	ldr	r3, [r4, #4]
   169c0:	cmp	r3, #0
   169c4:	bne	169d4 <_obstack_memory_used@@Base+0x2478>
   169c8:	ldr	r3, [r4]
   169cc:	cmp	r3, #0
   169d0:	beq	16a18 <_obstack_memory_used@@Base+0x24bc>
   169d4:	mov	r8, r7
   169d8:	str	r4, [r7, #-28]	; 0xffffffe4
   169dc:	mov	r3, #0
   169e0:	str	r3, [r7, #-24]	; 0xffffffe8
   169e4:	str	r5, [r7, #-20]	; 0xffffffec
   169e8:	ldr	r3, [r4, #20]
   169ec:	cmp	r3, #0
   169f0:	movne	r9, r3
   169f4:	bne	16a04 <_obstack_memory_used@@Base+0x24a8>
   169f8:	ldr	r3, [r4]
   169fc:	cmp	r3, #0
   16a00:	beq	16990 <_obstack_memory_used@@Base+0x2434>
   16a04:	str	r9, [r8, #-16]
   16a08:	ldr	r3, [sp, #4]
   16a0c:	str	r3, [r8, #-12]
   16a10:	str	fp, [r8, #-8]
   16a14:	b	16de8 <_obstack_memory_used@@Base+0x288c>
   16a18:	ldr	r3, [r4, #16]
   16a1c:	cmp	r3, #0
   16a20:	bne	169d4 <_obstack_memory_used@@Base+0x2478>
   16a24:	ldr	r3, [r4, #20]
   16a28:	cmp	r3, #0
   16a2c:	bne	169d4 <_obstack_memory_used@@Base+0x2478>
   16a30:	ldr	fp, [sp, #8]
   16a34:	mov	r3, #0
   16a38:	strb	r3, [r5]
   16a3c:	cmp	fp, #0
   16a40:	beq	16e60 <_obstack_memory_used@@Base+0x2904>
   16a44:	ldr	r3, [fp]
   16a48:	cmp	r3, #0
   16a4c:	beq	16e60 <_obstack_memory_used@@Base+0x2904>
   16a50:	movw	r3, #37449	; 0x9249
   16a54:	movt	r3, #2340	; 0x924
   16a58:	str	r3, [sp, #32]
   16a5c:	b	16ad0 <_obstack_memory_used@@Base+0x2574>
   16a60:	ldr	r1, [sp, #4]
   16a64:	b	16b48 <_obstack_memory_used@@Base+0x25ec>
   16a68:	mov	r3, r2
   16a6c:	ldr	r2, [r3, #24]
   16a70:	cmp	r2, #0
   16a74:	bne	16a68 <_obstack_memory_used@@Base+0x250c>
   16a78:	add	r3, r3, #24
   16a7c:	ldr	r2, [r5, #12]
   16a80:	str	r2, [r3]
   16a84:	mov	r1, #0
   16a88:	str	r1, [r5, #12]
   16a8c:	ldr	r3, [r5, #4]
   16a90:	cmp	r3, r1
   16a94:	beq	16abc <_obstack_memory_used@@Base+0x2560>
   16a98:	ldr	r2, [sl, #4]
   16a9c:	cmp	r2, r1
   16aa0:	bne	16b68 <_obstack_memory_used@@Base+0x260c>
   16aa4:	str	r3, [sl, #4]
   16aa8:	ldr	r3, [r5]
   16aac:	str	r3, [sl]
   16ab0:	ldr	r3, [r5, #8]
   16ab4:	str	r3, [sl, #8]
   16ab8:	str	r1, [r5, #4]
   16abc:	mov	r0, r5
   16ac0:	bl	151a4 <_obstack_memory_used@@Base+0xc48>
   16ac4:	ldr	r3, [fp, #16]!
   16ac8:	cmp	r3, #0
   16acc:	beq	16e60 <_obstack_memory_used@@Base+0x2904>
   16ad0:	mov	r5, fp
   16ad4:	ldr	r6, [fp, #12]
   16ad8:	cmp	r6, #0
   16adc:	bne	16aec <_obstack_memory_used@@Base+0x2590>
   16ae0:	ldr	r3, [fp, #8]
   16ae4:	cmp	r3, #0
   16ae8:	beq	16a60 <_obstack_memory_used@@Base+0x2504>
   16aec:	ldr	r7, [r5, #8]
   16af0:	ldr	r8, [sp, #12]
   16af4:	ldr	r4, [r8, #16]
   16af8:	mov	r0, #28
   16afc:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   16b00:	subs	r1, r0, #0
   16b04:	beq	16b48 <_obstack_memory_used@@Base+0x25ec>
   16b08:	str	r6, [r1, #8]
   16b0c:	str	r7, [r1]
   16b10:	sub	r4, r5, r4
   16b14:	asr	r4, r4, #4
   16b18:	str	r4, [r1, #4]
   16b1c:	ldr	r3, [sp, #4]
   16b20:	str	r3, [r1, #12]
   16b24:	str	r8, [r1, #16]
   16b28:	cmp	r3, #0
   16b2c:	ldrne	r3, [r3, #20]
   16b30:	addne	r3, r3, #1
   16b34:	moveq	r3, #0
   16b38:	str	r3, [r1, #20]
   16b3c:	ldr	r3, [sl, #12]
   16b40:	str	r3, [r1, #24]
   16b44:	str	r1, [sl, #12]
   16b48:	ldr	r0, [r5]
   16b4c:	bl	167cc <_obstack_memory_used@@Base+0x2270>
   16b50:	mov	r5, r0
   16b54:	ldr	r3, [sl, #12]
   16b58:	cmp	r3, #0
   16b5c:	bne	16a6c <_obstack_memory_used@@Base+0x2510>
   16b60:	add	r3, sl, #12
   16b64:	b	16a7c <_obstack_memory_used@@Base+0x2520>
   16b68:	add	r3, r3, r2
   16b6c:	str	r3, [sp, #24]
   16b70:	rsb	r0, r3, r3, lsl #3
   16b74:	lsl	r0, r0, #2
   16b78:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   16b7c:	mov	r4, r0
   16b80:	str	r0, [sp, #20]
   16b84:	ldr	r0, [sl, #8]
   16b88:	bl	11238 <strlen@plt>
   16b8c:	mov	r7, r0
   16b90:	ldr	r0, [r5, #8]
   16b94:	bl	11238 <strlen@plt>
   16b98:	add	r0, r7, r0
   16b9c:	add	r0, r0, #1
   16ba0:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   16ba4:	mov	r9, r0
   16ba8:	cmp	r4, #0
   16bac:	cmpne	r0, #0
   16bb0:	beq	16c7c <_obstack_memory_used@@Base+0x2720>
   16bb4:	ldr	r3, [sp, #24]
   16bb8:	ldr	r2, [sp, #32]
   16bbc:	cmp	r3, r2
   16bc0:	bhi	16c98 <_obstack_memory_used@@Base+0x273c>
   16bc4:	ldr	r1, [sl]
   16bc8:	str	r1, [sp, #28]
   16bcc:	ldr	r4, [sl, #4]
   16bd0:	rsb	r8, r4, r4, lsl #3
   16bd4:	lsl	r8, r8, #2
   16bd8:	mov	r2, r8
   16bdc:	ldr	r0, [sp, #20]
   16be0:	bl	11214 <mempcpy@plt>
   16be4:	ldr	r3, [r5, #4]
   16be8:	str	r3, [sp, #16]
   16bec:	rsb	r2, r3, r3, lsl #3
   16bf0:	lsl	r2, r2, #2
   16bf4:	ldr	r1, [r5]
   16bf8:	bl	1113c <memcpy@plt>
   16bfc:	ldr	r6, [sl, #8]
   16c00:	mov	r2, r7
   16c04:	mov	r1, r6
   16c08:	mov	r0, r9
   16c0c:	bl	1113c <memcpy@plt>
   16c10:	cmp	r4, #0
   16c14:	beq	16cb4 <_obstack_memory_used@@Base+0x2758>
   16c18:	ldr	r2, [sp, #20]
   16c1c:	ldr	r3, [r2, #8]
   16c20:	sub	r3, r3, r6
   16c24:	add	r3, r9, r3
   16c28:	str	r3, [r2, #8]
   16c2c:	add	r2, r2, #28
   16c30:	subs	r4, r4, #1
   16c34:	bne	16c1c <_obstack_memory_used@@Base+0x26c0>
   16c38:	ldr	r3, [sp, #20]
   16c3c:	add	r4, r3, r8
   16c40:	add	r3, r9, r7
   16c44:	str	r3, [sp, #8]
   16c48:	ldr	r1, [r5, #8]
   16c4c:	ldr	r8, [sp, #16]
   16c50:	cmp	r8, #0
   16c54:	beq	16d58 <_obstack_memory_used@@Base+0x27fc>
   16c58:	add	r4, r4, #28
   16c5c:	sub	r2, r3, #1
   16c60:	str	r2, [sp, #16]
   16c64:	str	r5, [sp, #36]	; 0x24
   16c68:	str	fp, [sp, #40]	; 0x28
   16c6c:	mov	fp, r3
   16c70:	str	sl, [sp, #44]	; 0x2c
   16c74:	mov	sl, r1
   16c78:	b	16d00 <_obstack_memory_used@@Base+0x27a4>
   16c7c:	ldr	r3, [pc, #508]	; 16e80 <_obstack_memory_used@@Base+0x2924>
   16c80:	movw	r2, #970	; 0x3ca
   16c84:	movw	r1, #48752	; 0xbe70
   16c88:	movt	r1, #1
   16c8c:	movw	r0, #48880	; 0xbef0
   16c90:	movt	r0, #1
   16c94:	bl	11388 <__assert_fail@plt>
   16c98:	ldr	r3, [pc, #480]	; 16e80 <_obstack_memory_used@@Base+0x2924>
   16c9c:	mov	r2, #972	; 0x3cc
   16ca0:	movw	r1, #48752	; 0xbe70
   16ca4:	movt	r1, #1
   16ca8:	movw	r0, #48908	; 0xbf0c
   16cac:	movt	r0, #1
   16cb0:	bl	11388 <__assert_fail@plt>
   16cb4:	ldr	r4, [sp, #20]
   16cb8:	b	16c40 <_obstack_memory_used@@Base+0x26e4>
   16cbc:	ldr	r2, [sp, #8]
   16cc0:	cmp	r9, r2
   16cc4:	bcs	16d60 <_obstack_memory_used@@Base+0x2804>
   16cc8:	ldrb	r2, [r9]
   16ccc:	cmp	r2, r3
   16cd0:	beq	16d64 <_obstack_memory_used@@Base+0x2808>
   16cd4:	mov	r2, r9
   16cd8:	ldr	r1, [sp, #16]
   16cdc:	cmp	r1, r2
   16ce0:	beq	16d60 <_obstack_memory_used@@Base+0x2804>
   16ce4:	ldrb	r1, [r2, #1]!
   16ce8:	cmp	r1, r3
   16cec:	bne	16cd8 <_obstack_memory_used@@Base+0x277c>
   16cf0:	b	16d64 <_obstack_memory_used@@Base+0x2808>
   16cf4:	add	r4, r4, #28
   16cf8:	subs	r8, r8, #1
   16cfc:	beq	16d18 <_obstack_memory_used@@Base+0x27bc>
   16d00:	str	fp, [r4, #-20]	; 0xffffffec
   16d04:	ldr	r5, [r4, #-24]	; 0xffffffe8
   16d08:	ldr	r6, [r4, #-28]	; 0xffffffe4
   16d0c:	cmp	r5, #0
   16d10:	bne	16d84 <_obstack_memory_used@@Base+0x2828>
   16d14:	b	16cf4 <_obstack_memory_used@@Base+0x2798>
   16d18:	ldr	r5, [sp, #36]	; 0x24
   16d1c:	mov	r3, fp
   16d20:	ldr	fp, [sp, #40]	; 0x28
   16d24:	ldr	sl, [sp, #44]	; 0x2c
   16d28:	mov	r2, #0
   16d2c:	strb	r2, [r3]
   16d30:	ldr	r0, [sp, #28]
   16d34:	bl	140ac <argp_parse@@Base+0xcd8>
   16d38:	ldr	r0, [sl, #8]
   16d3c:	bl	140ac <argp_parse@@Base+0xcd8>
   16d40:	ldr	r3, [sp, #20]
   16d44:	str	r3, [sl]
   16d48:	ldr	r3, [sp, #24]
   16d4c:	str	r3, [sl, #4]
   16d50:	str	r9, [sl, #8]
   16d54:	b	16abc <_obstack_memory_used@@Base+0x2560>
   16d58:	ldr	r3, [sp, #8]
   16d5c:	b	16d28 <_obstack_memory_used@@Base+0x27cc>
   16d60:	strb	r3, [fp], #1
   16d64:	add	sl, sl, #1
   16d68:	b	16d78 <_obstack_memory_used@@Base+0x281c>
   16d6c:	ldrb	r3, [sl]
   16d70:	cmp	r3, r7
   16d74:	beq	16cbc <_obstack_memory_used@@Base+0x2760>
   16d78:	add	r6, r6, #24
   16d7c:	subs	r5, r5, #1
   16d80:	beq	16cf4 <_obstack_memory_used@@Base+0x2798>
   16d84:	ldr	r3, [r6, #12]
   16d88:	tst	r3, #8
   16d8c:	bne	16d78 <_obstack_memory_used@@Base+0x281c>
   16d90:	ldr	r7, [r6, #4]
   16d94:	sub	r3, r7, #1
   16d98:	cmp	r3, #254	; 0xfe
   16d9c:	bhi	16d78 <_obstack_memory_used@@Base+0x281c>
   16da0:	bl	11220 <__ctype_b_loc@plt>
   16da4:	ldr	r2, [r0]
   16da8:	lsl	r3, r7, #1
   16dac:	ldrh	r3, [r2, r3]
   16db0:	tst	r3, #16384	; 0x4000
   16db4:	bne	16d6c <_obstack_memory_used@@Base+0x2810>
   16db8:	b	16d78 <_obstack_memory_used@@Base+0x281c>
   16dbc:	strb	r6, [r5], #1
   16dc0:	add	r4, r4, #24
   16dc4:	ldr	r3, [r4, #4]
   16dc8:	cmp	r3, #0
   16dcc:	bne	16ddc <_obstack_memory_used@@Base+0x2880>
   16dd0:	ldr	r3, [r4]
   16dd4:	cmp	r3, #0
   16dd8:	beq	169a0 <_obstack_memory_used@@Base+0x2444>
   16ddc:	ldr	r3, [r4, #12]
   16de0:	tst	r3, #4
   16de4:	beq	169b8 <_obstack_memory_used@@Base+0x245c>
   16de8:	ldr	r3, [r8, #-24]	; 0xffffffe8
   16dec:	add	r3, r3, #1
   16df0:	str	r3, [r8, #-24]	; 0xffffffe8
   16df4:	ldr	r3, [r4, #12]
   16df8:	tst	r3, #8
   16dfc:	bne	16dc0 <_obstack_memory_used@@Base+0x2864>
   16e00:	ldr	r6, [r4, #4]
   16e04:	sub	r3, r6, #1
   16e08:	cmp	r3, #254	; 0xfe
   16e0c:	bhi	16dc0 <_obstack_memory_used@@Base+0x2864>
   16e10:	bl	11220 <__ctype_b_loc@plt>
   16e14:	ldr	r2, [r0]
   16e18:	lsl	r3, r6, #1
   16e1c:	ldrh	r3, [r2, r3]
   16e20:	tst	r3, #16384	; 0x4000
   16e24:	beq	16dc0 <_obstack_memory_used@@Base+0x2864>
   16e28:	uxtb	r6, r6
   16e2c:	ldr	r3, [sl, #8]
   16e30:	cmp	r3, r5
   16e34:	bcs	16dbc <_obstack_memory_used@@Base+0x2860>
   16e38:	ldrb	r2, [r3]
   16e3c:	cmp	r2, r6
   16e40:	beq	16dc0 <_obstack_memory_used@@Base+0x2864>
   16e44:	sub	r2, r5, #1
   16e48:	cmp	r3, r2
   16e4c:	beq	16dbc <_obstack_memory_used@@Base+0x2860>
   16e50:	ldrb	r1, [r3, #1]!
   16e54:	cmp	r1, r6
   16e58:	bne	16e48 <_obstack_memory_used@@Base+0x28ec>
   16e5c:	b	16dc0 <_obstack_memory_used@@Base+0x2864>
   16e60:	mov	r0, sl
   16e64:	add	sp, sp, #52	; 0x34
   16e68:	ldrd	r4, [sp]
   16e6c:	ldrd	r6, [sp, #8]
   16e70:	ldrd	r8, [sp, #16]
   16e74:	ldrd	sl, [sp, #24]
   16e78:	add	sp, sp, #32
   16e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e80:	andeq	fp, r1, ip, lsl #27

00016e84 <argp_failure@@Base>:
   16e84:	push	{r3}		; (str r3, [sp, #-4]!)
   16e88:	strd	r4, [sp, #-20]!	; 0xffffffec
   16e8c:	strd	r6, [sp, #8]
   16e90:	str	lr, [sp, #16]
   16e94:	sub	sp, sp, #200	; 0xc8
   16e98:	mov	r7, r1
   16e9c:	mov	r6, r2
   16ea0:	subs	r5, r0, #0
   16ea4:	beq	17000 <argp_failure@@Base+0x17c>
   16ea8:	ldr	r3, [r5, #16]
   16eac:	tst	r3, #2
   16eb0:	bne	16fe4 <argp_failure@@Base+0x160>
   16eb4:	ldr	r4, [r5, #44]	; 0x2c
   16eb8:	cmp	r4, #0
   16ebc:	beq	16fe4 <argp_failure@@Base+0x160>
   16ec0:	mov	r0, r4
   16ec4:	bl	112ec <flockfile@plt>
   16ec8:	ldr	r0, [r5, #40]	; 0x28
   16ecc:	mov	r1, r4
   16ed0:	bl	110ac <fputs_unlocked@plt>
   16ed4:	ldr	r3, [sp, #220]	; 0xdc
   16ed8:	cmp	r3, #0
   16edc:	beq	16f38 <argp_failure@@Base+0xb4>
   16ee0:	add	r3, sp, #224	; 0xe0
   16ee4:	str	r3, [sp]
   16ee8:	ldr	r3, [r4, #20]
   16eec:	ldr	r2, [r4, #24]
   16ef0:	cmp	r3, r2
   16ef4:	addcc	r2, r3, #1
   16ef8:	strcc	r2, [r4, #20]
   16efc:	movcc	r2, #58	; 0x3a
   16f00:	strbcc	r2, [r3]
   16f04:	bcs	1702c <argp_failure@@Base+0x1a8>
   16f08:	ldr	r3, [r4, #20]
   16f0c:	ldr	r2, [r4, #24]
   16f10:	cmp	r3, r2
   16f14:	addcc	r2, r3, #1
   16f18:	strcc	r2, [r4, #20]
   16f1c:	movcc	r2, #32
   16f20:	strbcc	r2, [r3]
   16f24:	bcs	1703c <argp_failure@@Base+0x1b8>
   16f28:	ldr	r2, [sp]
   16f2c:	ldr	r1, [sp, #220]	; 0xdc
   16f30:	mov	r0, r4
   16f34:	bl	112bc <vfprintf@plt>
   16f38:	cmp	r6, #0
   16f3c:	beq	16fa0 <argp_failure@@Base+0x11c>
   16f40:	ldr	r3, [r4, #20]
   16f44:	ldr	r2, [r4, #24]
   16f48:	cmp	r3, r2
   16f4c:	addcc	r2, r3, #1
   16f50:	strcc	r2, [r4, #20]
   16f54:	movcc	r2, #58	; 0x3a
   16f58:	strbcc	r2, [r3]
   16f5c:	bcs	1704c <argp_failure@@Base+0x1c8>
   16f60:	ldr	r3, [r4, #20]
   16f64:	ldr	r2, [r4, #24]
   16f68:	cmp	r3, r2
   16f6c:	addcc	r2, r3, #1
   16f70:	strcc	r2, [r4, #20]
   16f74:	movcc	r2, #32
   16f78:	strbcc	r2, [r3]
   16f7c:	bcs	1705c <argp_failure@@Base+0x1d8>
   16f80:	mov	r2, #200	; 0xc8
   16f84:	mov	r1, sp
   16f88:	mov	r0, r6
   16f8c:	bl	11274 <strerror_r@plt>
   16f90:	cmp	r0, #0
   16f94:	beq	1706c <argp_failure@@Base+0x1e8>
   16f98:	mov	r1, r4
   16f9c:	bl	110ac <fputs_unlocked@plt>
   16fa0:	ldr	r3, [r4, #20]
   16fa4:	ldr	r2, [r4, #24]
   16fa8:	cmp	r3, r2
   16fac:	addcc	r2, r3, #1
   16fb0:	strcc	r2, [r4, #20]
   16fb4:	movcc	r2, #10
   16fb8:	strbcc	r2, [r3]
   16fbc:	bcs	17088 <argp_failure@@Base+0x204>
   16fc0:	mov	r0, r4
   16fc4:	bl	11184 <funlockfile@plt>
   16fc8:	cmp	r7, #0
   16fcc:	beq	16fe4 <argp_failure@@Base+0x160>
   16fd0:	cmp	r5, #0
   16fd4:	beq	17098 <argp_failure@@Base+0x214>
   16fd8:	ldr	r3, [r5, #16]
   16fdc:	tst	r3, #32
   16fe0:	beq	17098 <argp_failure@@Base+0x214>
   16fe4:	add	sp, sp, #200	; 0xc8
   16fe8:	ldrd	r4, [sp]
   16fec:	ldrd	r6, [sp, #8]
   16ff0:	ldr	lr, [sp, #16]
   16ff4:	add	sp, sp, #20
   16ff8:	add	sp, sp, #4
   16ffc:	bx	lr
   17000:	movw	r3, #2232	; 0x8b8
   17004:	movt	r3, #3
   17008:	ldr	r4, [r3]
   1700c:	cmp	r4, #0
   17010:	beq	16fe4 <argp_failure@@Base+0x160>
   17014:	mov	r0, r4
   17018:	bl	112ec <flockfile@plt>
   1701c:	movw	r3, #2224	; 0x8b0
   17020:	movt	r3, #3
   17024:	ldr	r0, [r3]
   17028:	b	16ecc <argp_failure@@Base+0x48>
   1702c:	mov	r1, #58	; 0x3a
   17030:	mov	r0, r4
   17034:	bl	112a4 <__overflow@plt>
   17038:	b	16f08 <argp_failure@@Base+0x84>
   1703c:	mov	r1, #32
   17040:	mov	r0, r4
   17044:	bl	112a4 <__overflow@plt>
   17048:	b	16f28 <argp_failure@@Base+0xa4>
   1704c:	mov	r1, #58	; 0x3a
   17050:	mov	r0, r4
   17054:	bl	112a4 <__overflow@plt>
   17058:	b	16f60 <argp_failure@@Base+0xdc>
   1705c:	mov	r1, #32
   17060:	mov	r0, r4
   17064:	bl	112a4 <__overflow@plt>
   17068:	b	16f80 <argp_failure@@Base+0xfc>
   1706c:	mov	r0, r6
   17070:	bl	111f0 <strerror@plt>
   17074:	movw	r3, #48960	; 0xbf40
   17078:	movt	r3, #1
   1707c:	cmp	r0, #0
   17080:	moveq	r0, r3
   17084:	b	16f98 <argp_failure@@Base+0x114>
   17088:	mov	r1, #10
   1708c:	mov	r0, r4
   17090:	bl	112a4 <__overflow@plt>
   17094:	b	16fc0 <argp_failure@@Base+0x13c>
   17098:	mov	r0, r7
   1709c:	bl	1122c <exit@plt>
   170a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   170a4:	strd	r6, [sp, #8]
   170a8:	strd	r8, [sp, #16]
   170ac:	strd	sl, [sp, #24]
   170b0:	str	lr, [sp, #32]
   170b4:	add	fp, sp, #32
   170b8:	sub	sp, sp, #124	; 0x7c
   170bc:	str	r0, [fp, #-108]	; 0xffffff94
   170c0:	str	r1, [fp, #-104]	; 0xffffff98
   170c4:	str	r3, [fp, #-100]	; 0xffffff9c
   170c8:	subs	r3, r2, #0
   170cc:	str	r3, [fp, #-132]	; 0xffffff7c
   170d0:	beq	180b8 <argp_failure@@Base+0x1234>
   170d4:	mov	r0, r3
   170d8:	bl	112ec <flockfile@plt>
   170dc:	movw	r3, #2160	; 0x870
   170e0:	movt	r3, #3
   170e4:	ldr	r9, [r3, #36]	; 0x24
   170e8:	cmp	r9, #0
   170ec:	beq	171c4 <argp_failure@@Base+0x340>
   170f0:	movw	r2, #2160	; 0x870
   170f4:	movt	r2, #3
   170f8:	mov	r3, #0
   170fc:	ldr	r2, [r2, #32]
   17100:	mov	r1, r3
   17104:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17108:	bl	191ac <argp_error@@Base+0xe40>
   1710c:	subs	sl, r0, #0
   17110:	beq	175a0 <argp_failure@@Base+0x71c>
   17114:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17118:	tst	r3, #11
   1711c:	moveq	r3, #0
   17120:	streq	r3, [fp, #-128]	; 0xffffff80
   17124:	bne	175ac <argp_failure@@Base+0x728>
   17128:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1712c:	tst	r3, #3
   17130:	moveq	r4, #0
   17134:	bne	1763c <argp_failure@@Base+0x7b8>
   17138:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1713c:	tst	r3, #16
   17140:	bne	17860 <argp_failure@@Base+0x9dc>
   17144:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17148:	tst	r3, #4
   1714c:	bne	17888 <argp_failure@@Base+0xa04>
   17150:	ldr	r3, [fp, #-100]	; 0xffffff9c
   17154:	tst	r3, #8
   17158:	beq	18044 <argp_failure@@Base+0x11c0>
   1715c:	ldr	r3, [fp, #-128]	; 0xffffff80
   17160:	ldr	r3, [r3, #4]
   17164:	cmp	r3, #0
   17168:	beq	18044 <argp_failure@@Base+0x11c0>
   1716c:	cmp	r4, #0
   17170:	bne	178a8 <argp_failure@@Base+0xa24>
   17174:	mov	r3, #0
   17178:	str	r3, [fp, #-88]	; 0xffffffa8
   1717c:	str	r3, [fp, #-84]	; 0xffffffac
   17180:	str	r3, [fp, #-80]	; 0xffffffb0
   17184:	ldr	r3, [fp, #-128]	; 0xffffff80
   17188:	ldr	r9, [r3]
   1718c:	ldr	r3, [r3, #4]
   17190:	str	r3, [fp, #-116]	; 0xffffff8c
   17194:	cmp	r3, #0
   17198:	beq	18040 <argp_failure@@Base+0x11bc>
   1719c:	movw	r3, #2160	; 0x870
   171a0:	movt	r3, #3
   171a4:	str	r3, [fp, #-96]	; 0xffffffa0
   171a8:	movw	r3, #49276	; 0xc07c
   171ac:	movt	r3, #1
   171b0:	str	r3, [fp, #-140]	; 0xffffff74
   171b4:	movw	r3, #47308	; 0xb8cc
   171b8:	movt	r3, #1
   171bc:	str	r3, [fp, #-144]	; 0xffffff70
   171c0:	b	17ec0 <argp_failure@@Base+0x103c>
   171c4:	movw	r0, #48984	; 0xbf58
   171c8:	movt	r0, #1
   171cc:	bl	111c0 <getenv@plt>
   171d0:	movw	r1, #2160	; 0x870
   171d4:	movt	r1, #3
   171d8:	ldrd	r2, [r1]
   171dc:	strd	r2, [fp, #-76]	; 0xffffffb4
   171e0:	ldrd	r2, [r1, #8]
   171e4:	strd	r2, [fp, #-68]	; 0xffffffbc
   171e8:	ldrd	r2, [r1, #16]
   171ec:	strd	r2, [fp, #-60]	; 0xffffffc4
   171f0:	ldrd	r2, [r1, #24]
   171f4:	strd	r2, [fp, #-52]	; 0xffffffcc
   171f8:	ldrd	r2, [r1, #32]
   171fc:	strd	r2, [fp, #-44]	; 0xffffffd4
   17200:	subs	r6, r0, #0
   17204:	beq	170f0 <argp_failure@@Base+0x26c>
   17208:	movw	sl, #48512	; 0xbd80
   1720c:	movt	sl, #1
   17210:	add	r8, sl, #168	; 0xa8
   17214:	b	17470 <argp_failure@@Base+0x5ec>
   17218:	cmp	r0, #45	; 0x2d
   1721c:	cmpne	r0, #95	; 0x5f
   17220:	moveq	r3, #1
   17224:	movne	r3, #0
   17228:	ubfx	r1, r1, #3, #1
   1722c:	orrs	r3, r3, r1
   17230:	beq	1821c <argp_failure@@Base+0x1398>
   17234:	mov	r4, r6
   17238:	ldrb	r3, [r4, #1]!
   1723c:	lsl	r1, r3, #1
   17240:	ldrh	r1, [r2, r1]
   17244:	ubfx	r1, r1, #3, #1
   17248:	cmp	r3, #95	; 0x5f
   1724c:	cmpne	r3, #45	; 0x2d
   17250:	moveq	r3, #1
   17254:	movne	r3, #0
   17258:	orrs	r3, r1, r3
   1725c:	bne	17238 <argp_failure@@Base+0x3b4>
   17260:	sub	r7, r4, r6
   17264:	ldrb	r3, [r4]
   17268:	lsl	r1, r3, #1
   1726c:	ldrh	r1, [r2, r1]
   17270:	tst	r1, #8192	; 0x2000
   17274:	beq	1728c <argp_failure@@Base+0x408>
   17278:	ldrb	r3, [r4, #1]!
   1727c:	lsl	r1, r3, #1
   17280:	ldrh	r1, [r2, r1]
   17284:	tst	r1, #8192	; 0x2000
   17288:	bne	17278 <argp_failure@@Base+0x3f4>
   1728c:	cmp	r3, #44	; 0x2c
   17290:	cmpne	r3, #0
   17294:	beq	172f8 <argp_failure@@Base+0x474>
   17298:	cmp	r3, #61	; 0x3d
   1729c:	beq	172c4 <argp_failure@@Base+0x440>
   172a0:	ldrb	r3, [r4]
   172a4:	lsl	r3, r3, #1
   172a8:	ldrh	r3, [r2, r3]
   172ac:	tst	r3, #2048	; 0x800
   172b0:	streq	r9, [fp, #-96]	; 0xffffffa0
   172b4:	streq	r9, [fp, #-112]	; 0xffffff90
   172b8:	bne	1735c <argp_failure@@Base+0x4d8>
   172bc:	add	r5, sl, #24
   172c0:	b	17404 <argp_failure@@Base+0x580>
   172c4:	add	r1, r4, #1
   172c8:	ldrb	r3, [r4, #1]
   172cc:	lsl	r3, r3, #1
   172d0:	ldrh	r3, [r2, r3]
   172d4:	tst	r3, #8192	; 0x2000
   172d8:	beq	17354 <argp_failure@@Base+0x4d0>
   172dc:	ldrb	r3, [r1, #1]!
   172e0:	lsl	r3, r3, #1
   172e4:	ldrh	r3, [r2, r3]
   172e8:	tst	r3, #8192	; 0x2000
   172ec:	bne	172dc <argp_failure@@Base+0x458>
   172f0:	mov	r4, r1
   172f4:	b	172a0 <argp_failure@@Base+0x41c>
   172f8:	cmp	r0, #110	; 0x6e
   172fc:	movne	r3, #1
   17300:	strne	r3, [fp, #-96]	; 0xffffffa0
   17304:	strne	r3, [fp, #-112]	; 0xffffff90
   17308:	bne	172bc <argp_failure@@Base+0x438>
   1730c:	ldrb	r3, [r6, #1]
   17310:	cmp	r3, #111	; 0x6f
   17314:	movne	r3, #1
   17318:	strne	r3, [fp, #-96]	; 0xffffffa0
   1731c:	strne	r3, [fp, #-112]	; 0xffffff90
   17320:	bne	172bc <argp_failure@@Base+0x438>
   17324:	ldrb	r3, [r6, #2]
   17328:	cmp	r3, #45	; 0x2d
   1732c:	movne	r3, #1
   17330:	strne	r3, [fp, #-96]	; 0xffffffa0
   17334:	strne	r3, [fp, #-112]	; 0xffffff90
   17338:	bne	172bc <argp_failure@@Base+0x438>
   1733c:	add	r6, r6, #3
   17340:	sub	r7, r7, #3
   17344:	str	r9, [fp, #-112]	; 0xffffff90
   17348:	mov	r3, #1
   1734c:	str	r3, [fp, #-96]	; 0xffffffa0
   17350:	b	172bc <argp_failure@@Base+0x438>
   17354:	mov	r4, r1
   17358:	b	172a0 <argp_failure@@Base+0x41c>
   1735c:	mov	r2, #10
   17360:	mov	r1, #0
   17364:	mov	r0, r4
   17368:	bl	110d0 <strtol@plt>
   1736c:	str	r0, [fp, #-112]	; 0xffffff90
   17370:	ldr	r2, [r5]
   17374:	ldrb	r3, [r4]
   17378:	lsl	r3, r3, #1
   1737c:	ldrh	r3, [r2, r3]
   17380:	tst	r3, #2048	; 0x800
   17384:	beq	1739c <argp_failure@@Base+0x518>
   17388:	ldrb	r3, [r4, #1]!
   1738c:	lsl	r3, r3, #1
   17390:	ldrh	r3, [r2, r3]
   17394:	tst	r3, #2048	; 0x800
   17398:	bne	17388 <argp_failure@@Base+0x504>
   1739c:	ldrb	r3, [r4]
   173a0:	lsl	r3, r3, #1
   173a4:	ldrh	r3, [r2, r3]
   173a8:	tst	r3, #8192	; 0x2000
   173ac:	beq	173cc <argp_failure@@Base+0x548>
   173b0:	ldrb	r3, [r4, #1]!
   173b4:	lsl	r3, r3, #1
   173b8:	ldrh	r3, [r2, r3]
   173bc:	tst	r3, #8192	; 0x2000
   173c0:	bne	173b0 <argp_failure@@Base+0x52c>
   173c4:	str	r9, [fp, #-96]	; 0xffffffa0
   173c8:	b	172bc <argp_failure@@Base+0x438>
   173cc:	str	r9, [fp, #-96]	; 0xffffffa0
   173d0:	b	172bc <argp_failure@@Base+0x438>
   173d4:	str	r6, [sp, #4]
   173d8:	str	r7, [sp]
   173dc:	movw	r3, #49000	; 0xbf68
   173e0:	movt	r3, #1
   173e4:	mov	r2, #0
   173e8:	mov	r1, r2
   173ec:	ldr	r0, [fp, #-104]	; 0xffffff98
   173f0:	bl	16e84 <argp_failure@@Base>
   173f4:	b	17458 <argp_failure@@Base+0x5d4>
   173f8:	add	r5, r5, #16
   173fc:	cmp	r5, r8
   17400:	beq	17540 <argp_failure@@Base+0x6bc>
   17404:	mov	r0, r5
   17408:	bl	11238 <strlen@plt>
   1740c:	cmp	r0, r7
   17410:	bne	173f8 <argp_failure@@Base+0x574>
   17414:	mov	r2, r7
   17418:	mov	r1, r5
   1741c:	mov	r0, r6
   17420:	bl	11358 <strncmp@plt>
   17424:	cmp	r0, #0
   17428:	bne	173f8 <argp_failure@@Base+0x574>
   1742c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17430:	cmp	r3, #0
   17434:	beq	17444 <argp_failure@@Base+0x5c0>
   17438:	ldrb	r3, [r5, #14]
   1743c:	cmp	r3, #0
   17440:	beq	173d4 <argp_failure@@Base+0x550>
   17444:	ldrb	r3, [r5, #15]
   17448:	sub	r2, fp, #36	; 0x24
   1744c:	add	r3, r2, r3
   17450:	ldr	r2, [fp, #-112]	; 0xffffff90
   17454:	str	r2, [r3, #-40]	; 0xffffffd8
   17458:	cmp	r5, r8
   1745c:	beq	17540 <argp_failure@@Base+0x6bc>
   17460:	ldrb	r3, [r4]
   17464:	cmp	r3, #44	; 0x2c
   17468:	addeq	r6, r4, #1
   1746c:	movne	r6, r4
   17470:	ldrb	r3, [r6]
   17474:	cmp	r3, #0
   17478:	beq	174d0 <argp_failure@@Base+0x64c>
   1747c:	bl	11220 <__ctype_b_loc@plt>
   17480:	mov	r5, r0
   17484:	ldr	r2, [r0]
   17488:	mov	r3, r6
   1748c:	mov	r6, r3
   17490:	ldrb	r0, [r3], #1
   17494:	lsl	r1, r0, #1
   17498:	ldrh	r1, [r2, r1]
   1749c:	tst	r1, #8192	; 0x2000
   174a0:	bne	1748c <argp_failure@@Base+0x608>
   174a4:	tst	r1, #1024	; 0x400
   174a8:	bne	17218 <argp_failure@@Base+0x394>
   174ac:	cmp	r0, #0
   174b0:	beq	17470 <argp_failure@@Base+0x5ec>
   174b4:	str	r6, [sp]
   174b8:	movw	r3, #49088	; 0xbfc0
   174bc:	movt	r3, #1
   174c0:	mov	r2, #0
   174c4:	mov	r1, r2
   174c8:	ldr	r0, [fp, #-104]	; 0xffffff98
   174cc:	bl	16e84 <argp_failure@@Base>
   174d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174d4:	ldr	r3, [pc, #3488]	; 1827c <argp_failure@@Base+0x13f8>
   174d8:	add	r1, r3, #144	; 0x90
   174dc:	add	r3, r3, #16
   174e0:	cmp	r3, r1
   174e4:	beq	17564 <argp_failure@@Base+0x6e0>
   174e8:	ldrb	r2, [r3, #14]
   174ec:	cmp	r2, #0
   174f0:	bne	174dc <argp_failure@@Base+0x658>
   174f4:	ldrb	r2, [r3, #15]
   174f8:	cmp	r2, #32
   174fc:	beq	174dc <argp_failure@@Base+0x658>
   17500:	sub	ip, fp, #36	; 0x24
   17504:	add	r2, ip, r2
   17508:	ldr	r2, [r2, #-40]	; 0xffffffd8
   1750c:	cmp	r2, r0
   17510:	blt	174dc <argp_failure@@Base+0x658>
   17514:	str	r3, [sp, #4]
   17518:	movw	r3, #49172	; 0xc014
   1751c:	movt	r3, #1
   17520:	str	r3, [sp]
   17524:	movw	r3, #49120	; 0xbfe0
   17528:	movt	r3, #1
   1752c:	mov	r2, #0
   17530:	mov	r1, r2
   17534:	ldr	r0, [fp, #-104]	; 0xffffff98
   17538:	bl	16e84 <argp_failure@@Base>
   1753c:	b	170f0 <argp_failure@@Base+0x26c>
   17540:	str	r6, [sp, #4]
   17544:	str	r7, [sp]
   17548:	movw	r3, #49048	; 0xbf98
   1754c:	movt	r3, #1
   17550:	mov	r2, #0
   17554:	mov	r1, r2
   17558:	ldr	r0, [fp, #-104]	; 0xffffff98
   1755c:	bl	16e84 <argp_failure@@Base>
   17560:	b	17460 <argp_failure@@Base+0x5dc>
   17564:	movw	r1, #2160	; 0x870
   17568:	movt	r1, #3
   1756c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17570:	strd	r2, [r1]
   17574:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   17578:	strd	r2, [r1, #8]
   1757c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   17580:	strd	r2, [r1, #16]
   17584:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   17588:	strd	r2, [r1, #24]
   1758c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17590:	strd	r2, [r1, #32]
   17594:	mov	r3, #1
   17598:	str	r3, [r1, #36]	; 0x24
   1759c:	b	170f0 <argp_failure@@Base+0x26c>
   175a0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   175a4:	bl	11184 <funlockfile@plt>
   175a8:	b	180b8 <argp_failure@@Base+0x1234>
   175ac:	mov	r1, #0
   175b0:	ldr	r0, [fp, #-108]	; 0xffffff94
   175b4:	bl	167cc <_obstack_memory_used@@Base+0x2270>
   175b8:	str	r0, [fp, #-128]	; 0xffffff80
   175bc:	movw	r1, #47388	; 0xb91c
   175c0:	movt	r1, #1
   175c4:	bl	1520c <_obstack_memory_used@@Base+0xcb0>
   175c8:	cmp	r0, #0
   175cc:	mvnne	r3, #0
   175d0:	strne	r3, [r0, #12]
   175d4:	movw	r1, #47356	; 0xb8fc
   175d8:	movt	r1, #1
   175dc:	ldr	r0, [fp, #-128]	; 0xffffff80
   175e0:	bl	1520c <_obstack_memory_used@@Base+0xcb0>
   175e4:	cmp	r0, #0
   175e8:	mvnne	r3, #0
   175ec:	strne	r3, [r0, #12]
   175f0:	ldr	r0, [fp, #-128]	; 0xffffff80
   175f4:	ldr	r3, [r0, #4]
   175f8:	cmp	r3, #0
   175fc:	beq	17128 <argp_failure@@Base+0x2a4>
   17600:	ldr	r2, [r0]
   17604:	mov	r3, #0
   17608:	str	r3, [r2, #24]
   1760c:	add	r3, r3, #1
   17610:	add	r2, r2, #28
   17614:	ldr	r1, [r0, #4]
   17618:	cmp	r3, r1
   1761c:	bcc	17608 <argp_failure@@Base+0x784>
   17620:	movw	r3, #25788	; 0x64bc
   17624:	movt	r3, #1
   17628:	mov	r2, #28
   1762c:	ldr	r0, [fp, #-128]	; 0xffffff80
   17630:	ldr	r0, [r0]
   17634:	bl	11304 <qsort@plt>
   17638:	b	17128 <argp_failure@@Base+0x2a4>
   1763c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17640:	bl	152c0 <_obstack_memory_used@@Base+0xd64>
   17644:	mov	r2, r0
   17648:	add	r3, r0, #7
   1764c:	bic	r3, r3, #7
   17650:	sub	sp, sp, r3
   17654:	add	r9, sp, #8
   17658:	mov	r1, #0
   1765c:	mov	r0, r9
   17660:	bl	11280 <memset@plt>
   17664:	mov	r5, #1
   17668:	movw	r4, #2160	; 0x870
   1766c:	movt	r4, #3
   17670:	movw	r3, #49196	; 0xc02c
   17674:	movt	r3, #1
   17678:	str	r3, [fp, #-116]	; 0xffffff8c
   1767c:	movw	r8, #49188	; 0xc024
   17680:	movt	r8, #1
   17684:	str	r9, [fp, #-96]	; 0xffffffa0
   17688:	ldr	r9, [fp, #-128]	; 0xffffff80
   1768c:	str	r8, [fp, #-112]	; 0xffffff90
   17690:	ldr	r8, [fp, #-100]	; 0xffffff9c
   17694:	b	17744 <argp_failure@@Base+0x8c0>
   17698:	mov	r0, sl
   1769c:	bl	19244 <argp_error@@Base+0xed8>
   176a0:	b	17760 <argp_failure@@Base+0x8dc>
   176a4:	mov	r0, sl
   176a8:	bl	19244 <argp_error@@Base+0xed8>
   176ac:	b	177ac <argp_failure@@Base+0x928>
   176b0:	mov	r1, sl
   176b4:	mov	r0, r9
   176b8:	bl	15494 <_obstack_memory_used@@Base+0xf38>
   176bc:	orr	r8, r8, #2
   176c0:	str	sl, [sp]
   176c4:	mov	r3, #1
   176c8:	sub	r2, fp, #76	; 0x4c
   176cc:	ldr	r1, [fp, #-104]	; 0xffffff98
   176d0:	ldr	r0, [fp, #-108]	; 0xffffff94
   176d4:	bl	15900 <_obstack_memory_used@@Base+0x13a4>
   176d8:	mov	r6, r0
   176dc:	ldr	r3, [sl, #28]
   176e0:	ldr	r2, [sl, #24]
   176e4:	sub	r3, r3, r2
   176e8:	ldr	r2, [sl, #16]
   176ec:	cmp	r3, r2
   176f0:	bhi	17824 <argp_failure@@Base+0x9a0>
   176f4:	str	r7, [sl, #12]
   176f8:	ldr	r3, [sl, #28]
   176fc:	ldr	r2, [sl, #24]
   17700:	sub	r3, r3, r2
   17704:	ldr	r2, [sl, #16]
   17708:	cmp	r3, r2
   1770c:	bhi	17830 <argp_failure@@Base+0x9ac>
   17710:	str	r5, [sl, #4]
   17714:	ldr	r2, [sl, #28]
   17718:	ldr	r3, [sl, #32]
   1771c:	cmp	r2, r3
   17720:	bcs	1783c <argp_failure@@Base+0x9b8>
   17724:	ldr	r3, [sl, #28]
   17728:	add	r2, r3, #1
   1772c:	str	r2, [sl, #28]
   17730:	mov	r2, #10
   17734:	strb	r2, [r3]
   17738:	mov	r5, #0
   1773c:	cmp	r6, r5
   17740:	beq	17854 <argp_failure@@Base+0x9d0>
   17744:	ldr	r6, [r4, #28]
   17748:	ldr	r3, [sl, #28]
   1774c:	ldr	r2, [sl, #24]
   17750:	sub	r3, r3, r2
   17754:	ldr	r2, [sl, #16]
   17758:	cmp	r3, r2
   1775c:	bhi	17698 <argp_failure@@Base+0x814>
   17760:	ldr	r7, [sl, #12]
   17764:	str	r6, [sl, #12]
   17768:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1776c:	str	r3, [fp, #-76]	; 0xffffffb4
   17770:	cmp	r5, #0
   17774:	ldr	r3, [fp, #4]
   17778:	movwne	r2, #49180	; 0xc01c
   1777c:	movtne	r2, #1
   17780:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   17784:	ldr	r1, [fp, #-112]	; 0xffffff90
   17788:	mov	r0, sl
   1778c:	bl	198bc <argp_error@@Base+0x1550>
   17790:	ldr	r6, [r4, #28]
   17794:	ldr	r3, [sl, #28]
   17798:	ldr	r2, [sl, #24]
   1779c:	sub	r3, r3, r2
   177a0:	ldr	r2, [sl, #16]
   177a4:	cmp	r3, r2
   177a8:	bhi	176a4 <argp_failure@@Base+0x820>
   177ac:	ldr	r5, [sl, #4]
   177b0:	str	r6, [sl, #4]
   177b4:	tst	r8, #2
   177b8:	beq	176b0 <argp_failure@@Base+0x82c>
   177bc:	ldr	r3, [r9, #4]
   177c0:	cmp	r3, #0
   177c4:	beq	176c0 <argp_failure@@Base+0x83c>
   177c8:	ldr	r3, [sl, #28]
   177cc:	add	r3, r3, #12
   177d0:	ldr	r2, [sl, #32]
   177d4:	cmp	r2, r3
   177d8:	bcs	177f0 <argp_failure@@Base+0x96c>
   177dc:	mov	r1, #12
   177e0:	mov	r0, sl
   177e4:	bl	197bc <argp_error@@Base+0x1450>
   177e8:	cmp	r0, #0
   177ec:	beq	176c0 <argp_failure@@Base+0x83c>
   177f0:	ldr	r2, [sl, #28]
   177f4:	movw	r3, #49204	; 0xc034
   177f8:	movt	r3, #1
   177fc:	ldr	r0, [r3]
   17800:	ldr	r1, [r3, #4]
   17804:	str	r0, [r2]
   17808:	str	r1, [r2, #4]
   1780c:	ldr	r3, [r3, #8]
   17810:	str	r3, [r2, #8]
   17814:	ldr	r3, [sl, #28]
   17818:	add	r3, r3, #12
   1781c:	str	r3, [sl, #28]
   17820:	b	176c0 <argp_failure@@Base+0x83c>
   17824:	mov	r0, sl
   17828:	bl	19244 <argp_error@@Base+0xed8>
   1782c:	b	176f4 <argp_failure@@Base+0x870>
   17830:	mov	r0, sl
   17834:	bl	19244 <argp_error@@Base+0xed8>
   17838:	b	17710 <argp_failure@@Base+0x88c>
   1783c:	mov	r1, #1
   17840:	mov	r0, sl
   17844:	bl	197bc <argp_error@@Base+0x1450>
   17848:	cmp	r0, #0
   1784c:	bne	17724 <argp_failure@@Base+0x8a0>
   17850:	b	17738 <argp_failure@@Base+0x8b4>
   17854:	str	r8, [fp, #-100]	; 0xffffff9c
   17858:	mov	r4, #1
   1785c:	b	17138 <argp_failure@@Base+0x2b4>
   17860:	str	sl, [sp, #4]
   17864:	mov	r3, #1
   17868:	str	r3, [sp]
   1786c:	mov	r3, #0
   17870:	mov	r2, r3
   17874:	ldr	r1, [fp, #-104]	; 0xffffff98
   17878:	ldr	r0, [fp, #-108]	; 0xffffff94
   1787c:	bl	15eb0 <_obstack_memory_used@@Base+0x1954>
   17880:	orr	r4, r4, r0
   17884:	b	17144 <argp_failure@@Base+0x2c0>
   17888:	ldr	r3, [fp, #4]
   1788c:	mov	r2, r3
   17890:	movw	r1, #49220	; 0xc044
   17894:	movt	r1, #1
   17898:	mov	r0, sl
   1789c:	bl	198bc <argp_error@@Base+0x1550>
   178a0:	mov	r4, #1
   178a4:	b	17150 <argp_failure@@Base+0x2cc>
   178a8:	ldr	r2, [sl, #28]
   178ac:	ldr	r3, [sl, #32]
   178b0:	cmp	r2, r3
   178b4:	bcs	178d0 <argp_failure@@Base+0xa4c>
   178b8:	ldr	r3, [sl, #28]
   178bc:	add	r2, r3, #1
   178c0:	str	r2, [sl, #28]
   178c4:	mov	r2, #10
   178c8:	strb	r2, [r3]
   178cc:	b	17174 <argp_failure@@Base+0x2f0>
   178d0:	mov	r1, #1
   178d4:	mov	r0, sl
   178d8:	bl	197bc <argp_error@@Base+0x1450>
   178dc:	cmp	r0, #0
   178e0:	bne	178b8 <argp_failure@@Base+0xa34>
   178e4:	b	17174 <argp_failure@@Base+0x2f0>
   178e8:	mov	r0, sl
   178ec:	bl	19244 <argp_error@@Base+0xed8>
   178f0:	b	17ee0 <argp_failure@@Base+0x105c>
   178f4:	add	r3, r3, #24
   178f8:	subs	r2, r2, #1
   178fc:	beq	17920 <argp_failure@@Base+0xa9c>
   17900:	ldr	r1, [r3, #-24]	; 0xffffffe8
   17904:	cmp	r1, #0
   17908:	beq	178f4 <argp_failure@@Base+0xa70>
   1790c:	ldr	r1, [r3, #-12]
   17910:	tst	r1, #2
   17914:	bne	178f4 <argp_failure@@Base+0xa70>
   17918:	mov	r3, #1
   1791c:	str	r3, [fp, #-112]	; 0xffffff90
   17920:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17924:	ldr	r5, [r3, #8]
   17928:	ldr	r3, [sl, #28]
   1792c:	ldr	r2, [sl, #24]
   17930:	sub	r3, r3, r2
   17934:	ldr	r2, [sl, #16]
   17938:	cmp	r3, r2
   1793c:	bhi	1795c <argp_failure@@Base+0xad8>
   17940:	str	r5, [sl, #12]
   17944:	ldr	r6, [r9, #4]
   17948:	cmp	r6, #0
   1794c:	beq	17a5c <argp_failure@@Base+0xbd8>
   17950:	mov	r5, r4
   17954:	str	r9, [fp, #-136]	; 0xffffff78
   17958:	b	18244 <argp_failure@@Base+0x13c0>
   1795c:	mov	r0, sl
   17960:	bl	19244 <argp_error@@Base+0xed8>
   17964:	b	17940 <argp_failure@@Base+0xabc>
   17968:	tst	r9, #2
   1796c:	beq	17978 <argp_failure@@Base+0xaf4>
   17970:	add	r8, r8, #1
   17974:	b	18238 <argp_failure@@Base+0x13b4>
   17978:	sub	r1, fp, #76	; 0x4c
   1797c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17980:	ldr	r0, [r3, #8]
   17984:	bl	15d0c <_obstack_memory_used@@Base+0x17b0>
   17988:	ldr	r2, [sl, #28]
   1798c:	ldr	r3, [sl, #32]
   17990:	cmp	r2, r3
   17994:	bcs	17a14 <argp_failure@@Base+0xb90>
   17998:	ldr	r3, [sl, #28]
   1799c:	add	r2, r3, #1
   179a0:	str	r2, [sl, #28]
   179a4:	mov	r2, #45	; 0x2d
   179a8:	strb	r2, [r3]
   179ac:	ldrb	r7, [r8]
   179b0:	ldr	r2, [sl, #28]
   179b4:	ldr	r3, [sl, #32]
   179b8:	cmp	r2, r3
   179bc:	bcs	17a2c <argp_failure@@Base+0xba8>
   179c0:	ldr	r3, [sl, #28]
   179c4:	add	r2, r3, #1
   179c8:	str	r2, [sl, #28]
   179cc:	strb	r7, [r3]
   179d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   179d4:	cmp	r3, #0
   179d8:	beq	179ec <argp_failure@@Base+0xb68>
   179dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   179e0:	ldr	r3, [r3]
   179e4:	cmp	r3, #0
   179e8:	beq	17a44 <argp_failure@@Base+0xbc0>
   179ec:	ldr	r2, [r4, #8]
   179f0:	cmp	r2, #0
   179f4:	beq	17970 <argp_failure@@Base+0xaec>
   179f8:	ldr	r3, [r4, #12]
   179fc:	tst	r3, #1
   17a00:	ldrne	r1, [fp, #-140]	; 0xffffff74
   17a04:	ldreq	r1, [fp, #-144]	; 0xffffff70
   17a08:	mov	r0, sl
   17a0c:	bl	198bc <argp_error@@Base+0x1550>
   17a10:	b	17970 <argp_failure@@Base+0xaec>
   17a14:	mov	r1, #1
   17a18:	mov	r0, sl
   17a1c:	bl	197bc <argp_error@@Base+0x1450>
   17a20:	cmp	r0, #0
   17a24:	bne	17998 <argp_failure@@Base+0xb14>
   17a28:	b	179ac <argp_failure@@Base+0xb28>
   17a2c:	mov	r1, #1
   17a30:	mov	r0, sl
   17a34:	bl	197bc <argp_error@@Base+0x1450>
   17a38:	cmp	r0, #0
   17a3c:	bne	179c0 <argp_failure@@Base+0xb3c>
   17a40:	b	179d0 <argp_failure@@Base+0xb4c>
   17a44:	ldr	r3, [r4, #8]
   17a48:	cmp	r3, #0
   17a4c:	movne	r3, #1
   17a50:	strne	r3, [fp, #-80]	; 0xffffffb0
   17a54:	b	17970 <argp_failure@@Base+0xaec>
   17a58:	ldr	r9, [fp, #-136]	; 0xffffff78
   17a5c:	ldr	r3, [r4, #12]
   17a60:	tst	r3, #8
   17a64:	beq	17b3c <argp_failure@@Base+0xcb8>
   17a68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17a6c:	ldr	r5, [r3, #16]
   17a70:	ldr	r3, [sl, #28]
   17a74:	ldr	r2, [sl, #24]
   17a78:	sub	r3, r3, r2
   17a7c:	ldr	r2, [sl, #16]
   17a80:	cmp	r3, r2
   17a84:	bhi	17aa0 <argp_failure@@Base+0xc1c>
   17a88:	str	r5, [sl, #12]
   17a8c:	ldr	r6, [r9, #4]
   17a90:	cmp	r6, #0
   17a94:	beq	17c04 <argp_failure@@Base+0xd80>
   17a98:	add	r5, r4, #24
   17a9c:	b	17ad4 <argp_failure@@Base+0xc50>
   17aa0:	mov	r0, sl
   17aa4:	bl	19244 <argp_error@@Base+0xed8>
   17aa8:	b	17a88 <argp_failure@@Base+0xc04>
   17aac:	mov	r2, r8
   17ab0:	mov	r1, r7
   17ab4:	ldr	r0, [sl, #28]
   17ab8:	bl	1113c <memcpy@plt>
   17abc:	ldr	r3, [sl, #28]
   17ac0:	add	r8, r3, r8
   17ac4:	str	r8, [sl, #28]
   17ac8:	add	r5, r5, #24
   17acc:	subs	r6, r6, #1
   17ad0:	beq	17c04 <argp_failure@@Base+0xd80>
   17ad4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17ad8:	cmp	r3, #0
   17adc:	beq	17ac8 <argp_failure@@Base+0xc44>
   17ae0:	ldr	r3, [r5, #-12]
   17ae4:	tst	r3, #2
   17ae8:	bne	17ac8 <argp_failure@@Base+0xc44>
   17aec:	sub	r1, fp, #76	; 0x4c
   17af0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17af4:	ldr	r0, [r3, #16]
   17af8:	bl	15d0c <_obstack_memory_used@@Base+0x17b0>
   17afc:	ldr	r7, [r5, #-24]	; 0xffffffe8
   17b00:	mov	r0, r7
   17b04:	bl	11238 <strlen@plt>
   17b08:	subs	r8, r0, #0
   17b0c:	beq	17ac8 <argp_failure@@Base+0xc44>
   17b10:	ldr	r3, [sl, #28]
   17b14:	add	r3, r3, r8
   17b18:	ldr	r2, [sl, #32]
   17b1c:	cmp	r2, r3
   17b20:	bcs	17aac <argp_failure@@Base+0xc28>
   17b24:	mov	r1, r8
   17b28:	mov	r0, sl
   17b2c:	bl	197bc <argp_error@@Base+0x1450>
   17b30:	cmp	r0, #0
   17b34:	beq	17ac8 <argp_failure@@Base+0xc44>
   17b38:	b	17aac <argp_failure@@Base+0xc28>
   17b3c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17b40:	ldr	r5, [r3, #12]
   17b44:	ldr	r3, [sl, #28]
   17b48:	ldr	r2, [sl, #24]
   17b4c:	sub	r3, r3, r2
   17b50:	ldr	r2, [sl, #16]
   17b54:	cmp	r3, r2
   17b58:	bhi	17b88 <argp_failure@@Base+0xd04>
   17b5c:	str	r5, [sl, #12]
   17b60:	ldr	r6, [r9, #4]
   17b64:	cmp	r6, #0
   17b68:	beq	17c04 <argp_failure@@Base+0xd80>
   17b6c:	add	r5, r4, #24
   17b70:	movw	r8, #49284	; 0xc084
   17b74:	movt	r8, #1
   17b78:	movw	r7, #49300	; 0xc094
   17b7c:	movt	r7, #1
   17b80:	str	r7, [fp, #-112]	; 0xffffff90
   17b84:	b	17ba0 <argp_failure@@Base+0xd1c>
   17b88:	mov	r0, sl
   17b8c:	bl	19244 <argp_error@@Base+0xed8>
   17b90:	b	17b5c <argp_failure@@Base+0xcd8>
   17b94:	add	r5, r5, #24
   17b98:	subs	r6, r6, #1
   17b9c:	beq	17c04 <argp_failure@@Base+0xd80>
   17ba0:	ldr	r3, [r5, #-24]	; 0xffffffe8
   17ba4:	cmp	r3, #0
   17ba8:	beq	17b94 <argp_failure@@Base+0xd10>
   17bac:	ldr	r3, [r5, #-12]
   17bb0:	tst	r3, #2
   17bb4:	bne	17b94 <argp_failure@@Base+0xd10>
   17bb8:	sub	r1, fp, #76	; 0x4c
   17bbc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17bc0:	ldr	r0, [r3, #12]
   17bc4:	bl	15d0c <_obstack_memory_used@@Base+0x17b0>
   17bc8:	ldr	r2, [r5, #-24]	; 0xffffffe8
   17bcc:	mov	r1, r8
   17bd0:	mov	r0, sl
   17bd4:	bl	198bc <argp_error@@Base+0x1550>
   17bd8:	ldr	r2, [r4, #8]
   17bdc:	cmp	r2, #0
   17be0:	beq	17b94 <argp_failure@@Base+0xd10>
   17be4:	ldr	r3, [r4, #12]
   17be8:	tst	r3, #1
   17bec:	movwne	r1, #49292	; 0xc08c
   17bf0:	movtne	r1, #1
   17bf4:	ldreq	r1, [fp, #-112]	; 0xffffff90
   17bf8:	mov	r0, sl
   17bfc:	bl	198bc <argp_error@@Base+0x1550>
   17c00:	b	17b94 <argp_failure@@Base+0xd10>
   17c04:	ldr	r3, [sl, #28]
   17c08:	ldr	r2, [sl, #24]
   17c0c:	sub	r3, r3, r2
   17c10:	ldr	r2, [sl, #16]
   17c14:	cmp	r3, r2
   17c18:	bhi	17c84 <argp_failure@@Base+0xe00>
   17c1c:	mov	r3, #0
   17c20:	str	r3, [sl, #4]
   17c24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17c28:	cmp	r3, #0
   17c2c:	beq	17c90 <argp_failure@@Base+0xe0c>
   17c30:	ldr	r3, [r4, #12]
   17c34:	tst	r3, #8
   17c38:	bne	17c64 <argp_failure@@Base+0xde0>
   17c3c:	ldr	r5, [r4, #4]
   17c40:	sub	r3, r5, #1
   17c44:	cmp	r3, #254	; 0xfe
   17c48:	bhi	17c64 <argp_failure@@Base+0xde0>
   17c4c:	bl	11220 <__ctype_b_loc@plt>
   17c50:	ldr	r3, [r0]
   17c54:	lsl	r5, r5, #1
   17c58:	ldrh	r3, [r3, r5]
   17c5c:	tst	r3, #16384	; 0x4000
   17c60:	bne	17e6c <argp_failure@@Base+0xfe8>
   17c64:	ldr	r3, [r4]
   17c68:	cmp	r3, #0
   17c6c:	bne	17e6c <argp_failure@@Base+0xfe8>
   17c70:	sub	r2, fp, #76	; 0x4c
   17c74:	ldr	r1, [r9, #20]
   17c78:	ldr	r0, [r4, #16]
   17c7c:	bl	15b04 <_obstack_memory_used@@Base+0x15a8>
   17c80:	b	17e68 <argp_failure@@Base+0xfe4>
   17c84:	mov	r0, sl
   17c88:	bl	19244 <argp_error@@Base+0xed8>
   17c8c:	b	17c1c <argp_failure@@Base+0xd98>
   17c90:	ldr	r5, [r4, #16]
   17c94:	ldr	r3, [fp, #-104]	; 0xffffff98
   17c98:	ldr	r2, [r9, #20]
   17c9c:	ldr	r1, [r4, #4]
   17ca0:	mov	r0, r5
   17ca4:	bl	1532c <_obstack_memory_used@@Base+0xdd0>
   17ca8:	subs	r4, r0, #0
   17cac:	beq	17e24 <argp_failure@@Base+0xfa0>
   17cb0:	ldrb	r3, [r4]
   17cb4:	cmp	r3, #0
   17cb8:	beq	17e1c <argp_failure@@Base+0xf98>
   17cbc:	ldr	r3, [sl, #28]
   17cc0:	ldr	r2, [sl, #24]
   17cc4:	sub	r3, r3, r2
   17cc8:	ldr	r2, [sl, #16]
   17ccc:	cmp	r3, r2
   17cd0:	bhi	17d7c <argp_failure@@Base+0xef8>
   17cd4:	ldr	r6, [sl, #20]
   17cd8:	bic	r6, r6, r6, asr #31
   17cdc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17ce0:	ldr	r7, [r3, #20]
   17ce4:	str	r7, [sl, #4]
   17ce8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17cec:	ldr	r7, [r3, #20]
   17cf0:	ldr	r3, [sl, #28]
   17cf4:	ldr	r2, [sl, #24]
   17cf8:	sub	r3, r3, r2
   17cfc:	ldr	r2, [sl, #16]
   17d00:	cmp	r3, r2
   17d04:	bhi	17db8 <argp_failure@@Base+0xf34>
   17d08:	str	r7, [sl, #12]
   17d0c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d10:	ldr	r1, [r3, #20]
   17d14:	add	r3, r1, #3
   17d18:	cmp	r6, r3
   17d1c:	bhi	17dc4 <argp_failure@@Base+0xf40>
   17d20:	cmp	r6, r1
   17d24:	bcc	17e04 <argp_failure@@Base+0xf80>
   17d28:	ldr	r3, [sl, #28]
   17d2c:	add	r3, r3, #3
   17d30:	ldr	r2, [sl, #32]
   17d34:	cmp	r2, r3
   17d38:	bcs	17d50 <argp_failure@@Base+0xecc>
   17d3c:	mov	r1, #3
   17d40:	mov	r0, sl
   17d44:	bl	197bc <argp_error@@Base+0x1450>
   17d48:	cmp	r0, #0
   17d4c:	beq	17e0c <argp_failure@@Base+0xf88>
   17d50:	ldr	r2, [sl, #28]
   17d54:	movw	r3, #49304	; 0xc098
   17d58:	movt	r3, #1
   17d5c:	ldrh	r1, [r3]
   17d60:	strh	r1, [r2]
   17d64:	ldrb	r3, [r3, #2]
   17d68:	strb	r3, [r2, #2]
   17d6c:	ldr	r3, [sl, #28]
   17d70:	add	r3, r3, #3
   17d74:	str	r3, [sl, #28]
   17d78:	b	17e0c <argp_failure@@Base+0xf88>
   17d7c:	mov	r0, sl
   17d80:	bl	19244 <argp_error@@Base+0xed8>
   17d84:	ldr	r6, [sl, #20]
   17d88:	bic	r6, r6, r6, asr #31
   17d8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17d90:	ldr	r7, [r3, #20]
   17d94:	ldr	r3, [sl, #28]
   17d98:	ldr	r2, [sl, #24]
   17d9c:	sub	r3, r3, r2
   17da0:	ldr	r2, [sl, #16]
   17da4:	cmp	r3, r2
   17da8:	bls	17ce4 <argp_failure@@Base+0xe60>
   17dac:	mov	r0, sl
   17db0:	bl	19244 <argp_error@@Base+0xed8>
   17db4:	b	17ce4 <argp_failure@@Base+0xe60>
   17db8:	mov	r0, sl
   17dbc:	bl	19244 <argp_error@@Base+0xed8>
   17dc0:	b	17d08 <argp_failure@@Base+0xe84>
   17dc4:	ldr	r2, [sl, #28]
   17dc8:	ldr	r3, [sl, #32]
   17dcc:	cmp	r2, r3
   17dd0:	bcs	17dec <argp_failure@@Base+0xf68>
   17dd4:	ldr	r3, [sl, #28]
   17dd8:	add	r2, r3, #1
   17ddc:	str	r2, [sl, #28]
   17de0:	mov	r2, #10
   17de4:	strb	r2, [r3]
   17de8:	b	17e0c <argp_failure@@Base+0xf88>
   17dec:	mov	r1, #1
   17df0:	mov	r0, sl
   17df4:	bl	197bc <argp_error@@Base+0x1450>
   17df8:	cmp	r0, #0
   17dfc:	bne	17dd4 <argp_failure@@Base+0xf50>
   17e00:	b	17e0c <argp_failure@@Base+0xf88>
   17e04:	mov	r0, sl
   17e08:	bl	1567c <_obstack_memory_used@@Base+0x1120>
   17e0c:	mov	r0, r4
   17e10:	bl	11238 <strlen@plt>
   17e14:	subs	r6, r0, #0
   17e18:	bne	17f44 <argp_failure@@Base+0x10c0>
   17e1c:	cmp	r5, r4
   17e20:	bne	17f8c <argp_failure@@Base+0x1108>
   17e24:	ldr	r3, [sl, #28]
   17e28:	ldr	r2, [sl, #24]
   17e2c:	sub	r3, r3, r2
   17e30:	ldr	r2, [sl, #16]
   17e34:	cmp	r3, r2
   17e38:	bhi	17f98 <argp_failure@@Base+0x1114>
   17e3c:	mov	r3, #0
   17e40:	str	r3, [sl, #4]
   17e44:	ldr	r2, [sl, #28]
   17e48:	ldr	r3, [sl, #32]
   17e4c:	cmp	r2, r3
   17e50:	bcs	17fa4 <argp_failure@@Base+0x1120>
   17e54:	ldr	r3, [sl, #28]
   17e58:	add	r2, r3, #1
   17e5c:	str	r2, [sl, #28]
   17e60:	mov	r2, #10
   17e64:	strb	r2, [r3]
   17e68:	str	r9, [fp, #-88]	; 0xffffffa8
   17e6c:	ldr	r3, [sl, #28]
   17e70:	ldr	r2, [sl, #24]
   17e74:	sub	r3, r3, r2
   17e78:	ldr	r2, [sl, #16]
   17e7c:	cmp	r3, r2
   17e80:	bhi	17fbc <argp_failure@@Base+0x1138>
   17e84:	ldr	r3, [fp, #-120]	; 0xffffff88
   17e88:	str	r3, [sl, #4]
   17e8c:	ldr	r3, [sl, #28]
   17e90:	ldr	r2, [sl, #24]
   17e94:	sub	r3, r3, r2
   17e98:	ldr	r2, [sl, #16]
   17e9c:	cmp	r3, r2
   17ea0:	bhi	17fc8 <argp_failure@@Base+0x1144>
   17ea4:	ldr	r3, [fp, #-124]	; 0xffffff84
   17ea8:	str	r3, [sl, #12]
   17eac:	add	r9, r9, #28
   17eb0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   17eb4:	subs	r3, r3, #1
   17eb8:	str	r3, [fp, #-116]	; 0xffffff8c
   17ebc:	beq	17fd4 <argp_failure@@Base+0x1150>
   17ec0:	ldr	r4, [r9]
   17ec4:	ldr	r8, [r9, #8]
   17ec8:	ldr	r3, [sl, #28]
   17ecc:	ldr	r2, [sl, #24]
   17ed0:	sub	r3, r3, r2
   17ed4:	ldr	r2, [sl, #16]
   17ed8:	cmp	r3, r2
   17edc:	bhi	178e8 <argp_failure@@Base+0xa64>
   17ee0:	ldr	r3, [sl, #4]
   17ee4:	str	r3, [fp, #-120]	; 0xffffff88
   17ee8:	mov	r3, #0
   17eec:	str	r3, [sl, #4]
   17ef0:	ldr	r3, [sl, #12]
   17ef4:	str	r3, [fp, #-124]	; 0xffffff84
   17ef8:	str	r9, [fp, #-76]	; 0xffffffb4
   17efc:	str	sl, [fp, #-72]	; 0xffffffb8
   17f00:	sub	r3, fp, #88	; 0x58
   17f04:	str	r3, [fp, #-68]	; 0xffffffbc
   17f08:	mov	r3, #1
   17f0c:	str	r3, [fp, #-64]	; 0xffffffc0
   17f10:	ldr	r3, [fp, #-104]	; 0xffffff98
   17f14:	str	r3, [fp, #-60]	; 0xffffffc4
   17f18:	ldr	r3, [r4, #12]
   17f1c:	ands	r3, r3, #8
   17f20:	str	r3, [fp, #-112]	; 0xffffff90
   17f24:	movne	r3, #0
   17f28:	strne	r3, [fp, #-112]	; 0xffffff90
   17f2c:	bne	17920 <argp_failure@@Base+0xa9c>
   17f30:	ldr	r2, [r9, #4]
   17f34:	cmp	r2, #0
   17f38:	beq	17920 <argp_failure@@Base+0xa9c>
   17f3c:	add	r3, r4, #24
   17f40:	b	17900 <argp_failure@@Base+0xa7c>
   17f44:	ldr	r3, [sl, #28]
   17f48:	add	r3, r3, r6
   17f4c:	ldr	r2, [sl, #32]
   17f50:	cmp	r2, r3
   17f54:	bcs	17f6c <argp_failure@@Base+0x10e8>
   17f58:	mov	r1, r6
   17f5c:	mov	r0, sl
   17f60:	bl	197bc <argp_error@@Base+0x1450>
   17f64:	cmp	r0, #0
   17f68:	beq	17e1c <argp_failure@@Base+0xf98>
   17f6c:	mov	r2, r6
   17f70:	mov	r1, r4
   17f74:	ldr	r0, [sl, #28]
   17f78:	bl	1113c <memcpy@plt>
   17f7c:	ldr	r3, [sl, #28]
   17f80:	add	r6, r3, r6
   17f84:	str	r6, [sl, #28]
   17f88:	b	17e1c <argp_failure@@Base+0xf98>
   17f8c:	mov	r0, r4
   17f90:	bl	140ac <argp_parse@@Base+0xcd8>
   17f94:	b	17e24 <argp_failure@@Base+0xfa0>
   17f98:	mov	r0, sl
   17f9c:	bl	19244 <argp_error@@Base+0xed8>
   17fa0:	b	17e3c <argp_failure@@Base+0xfb8>
   17fa4:	mov	r1, #1
   17fa8:	mov	r0, sl
   17fac:	bl	197bc <argp_error@@Base+0x1450>
   17fb0:	cmp	r0, #0
   17fb4:	bne	17e54 <argp_failure@@Base+0xfd0>
   17fb8:	b	17e68 <argp_failure@@Base+0xfe4>
   17fbc:	mov	r0, sl
   17fc0:	bl	19244 <argp_error@@Base+0xed8>
   17fc4:	b	17e84 <argp_failure@@Base+0x1000>
   17fc8:	mov	r0, sl
   17fcc:	bl	19244 <argp_error@@Base+0xed8>
   17fd0:	b	17ea4 <argp_failure@@Base+0x1020>
   17fd4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17fd8:	cmp	r3, #0
   17fdc:	beq	18040 <argp_failure@@Base+0x11bc>
   17fe0:	movw	r3, #2160	; 0x870
   17fe4:	movt	r3, #3
   17fe8:	ldr	r3, [r3, #4]
   17fec:	cmp	r3, #0
   17ff0:	beq	18040 <argp_failure@@Base+0x11bc>
   17ff4:	ldr	r3, [fp, #-104]	; 0xffffff98
   17ff8:	cmp	r3, #0
   17ffc:	ldrne	r2, [r3]
   18000:	ldreq	r2, [fp, #-104]	; 0xffffff98
   18004:	ldr	r3, [fp, #-104]	; 0xffffff98
   18008:	mov	r1, #5
   1800c:	movt	r1, #512	; 0x200
   18010:	movw	r0, #49308	; 0xc09c
   18014:	movt	r0, #1
   18018:	bl	1532c <_obstack_memory_used@@Base+0xdd0>
   1801c:	subs	r4, r0, #0
   18020:	beq	18040 <argp_failure@@Base+0x11bc>
   18024:	ldrb	r3, [r4]
   18028:	cmp	r3, #0
   1802c:	bne	180d4 <argp_failure@@Base+0x1250>
   18030:	movw	r3, #49308	; 0xc09c
   18034:	movt	r3, #1
   18038:	cmp	r4, r3
   1803c:	bne	181a8 <argp_failure@@Base+0x1324>
   18040:	mov	r4, #1
   18044:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18048:	tst	r3, #32
   1804c:	bne	181b4 <argp_failure@@Base+0x1330>
   18050:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18054:	tst	r3, #64	; 0x40
   18058:	beq	18094 <argp_failure@@Base+0x1210>
   1805c:	movw	r3, #2364	; 0x93c
   18060:	movt	r3, #3
   18064:	ldr	r3, [r3]
   18068:	cmp	r3, #0
   1806c:	beq	18094 <argp_failure@@Base+0x1210>
   18070:	cmp	r4, #0
   18074:	bne	181dc <argp_failure@@Base+0x1358>
   18078:	movw	r3, #2364	; 0x93c
   1807c:	movt	r3, #3
   18080:	ldr	r2, [r3]
   18084:	movw	r1, #49424	; 0xc110
   18088:	movt	r1, #1
   1808c:	mov	r0, sl
   18090:	bl	198bc <argp_error@@Base+0x1550>
   18094:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18098:	bl	11184 <funlockfile@plt>
   1809c:	ldr	r3, [fp, #-128]	; 0xffffff80
   180a0:	cmp	r3, #0
   180a4:	beq	180b0 <argp_failure@@Base+0x122c>
   180a8:	mov	r0, r3
   180ac:	bl	151a4 <_obstack_memory_used@@Base+0xc48>
   180b0:	mov	r0, sl
   180b4:	bl	19770 <argp_error@@Base+0x1404>
   180b8:	sub	sp, fp, #32
   180bc:	ldrd	r4, [sp]
   180c0:	ldrd	r6, [sp, #8]
   180c4:	ldrd	r8, [sp, #16]
   180c8:	ldrd	sl, [sp, #24]
   180cc:	add	sp, sp, #32
   180d0:	pop	{pc}		; (ldr pc, [sp], #4)
   180d4:	ldr	r2, [sl, #28]
   180d8:	ldr	r3, [sl, #32]
   180dc:	cmp	r2, r3
   180e0:	bcs	18130 <argp_failure@@Base+0x12ac>
   180e4:	ldr	r3, [sl, #28]
   180e8:	add	r2, r3, #1
   180ec:	str	r2, [sl, #28]
   180f0:	mov	r2, #10
   180f4:	strb	r2, [r3]
   180f8:	mov	r0, r4
   180fc:	bl	11238 <strlen@plt>
   18100:	subs	r5, r0, #0
   18104:	bne	18148 <argp_failure@@Base+0x12c4>
   18108:	ldr	r2, [sl, #28]
   1810c:	ldr	r3, [sl, #32]
   18110:	cmp	r2, r3
   18114:	bcs	18190 <argp_failure@@Base+0x130c>
   18118:	ldr	r3, [sl, #28]
   1811c:	add	r2, r3, #1
   18120:	str	r2, [sl, #28]
   18124:	mov	r2, #10
   18128:	strb	r2, [r3]
   1812c:	b	18030 <argp_failure@@Base+0x11ac>
   18130:	mov	r1, #1
   18134:	mov	r0, sl
   18138:	bl	197bc <argp_error@@Base+0x1450>
   1813c:	cmp	r0, #0
   18140:	bne	180e4 <argp_failure@@Base+0x1260>
   18144:	b	180f8 <argp_failure@@Base+0x1274>
   18148:	ldr	r3, [sl, #28]
   1814c:	add	r3, r3, r5
   18150:	ldr	r2, [sl, #32]
   18154:	cmp	r2, r3
   18158:	bcs	18170 <argp_failure@@Base+0x12ec>
   1815c:	mov	r1, r5
   18160:	mov	r0, sl
   18164:	bl	197bc <argp_error@@Base+0x1450>
   18168:	cmp	r0, #0
   1816c:	beq	18108 <argp_failure@@Base+0x1284>
   18170:	mov	r2, r5
   18174:	mov	r1, r4
   18178:	ldr	r0, [sl, #28]
   1817c:	bl	1113c <memcpy@plt>
   18180:	ldr	r3, [sl, #28]
   18184:	add	r5, r3, r5
   18188:	str	r5, [sl, #28]
   1818c:	b	18108 <argp_failure@@Base+0x1284>
   18190:	mov	r1, #1
   18194:	mov	r0, sl
   18198:	bl	197bc <argp_error@@Base+0x1450>
   1819c:	cmp	r0, #0
   181a0:	bne	18118 <argp_failure@@Base+0x1294>
   181a4:	b	18030 <argp_failure@@Base+0x11ac>
   181a8:	mov	r0, r4
   181ac:	bl	140ac <argp_parse@@Base+0xcd8>
   181b0:	b	18040 <argp_failure@@Base+0x11bc>
   181b4:	str	sl, [sp, #4]
   181b8:	mov	r3, #0
   181bc:	str	r3, [sp]
   181c0:	mov	r3, r4
   181c4:	mov	r2, #1
   181c8:	ldr	r1, [fp, #-104]	; 0xffffff98
   181cc:	ldr	r0, [fp, #-108]	; 0xffffff94
   181d0:	bl	15eb0 <_obstack_memory_used@@Base+0x1954>
   181d4:	orr	r4, r4, r0
   181d8:	b	18050 <argp_failure@@Base+0x11cc>
   181dc:	ldr	r2, [sl, #28]
   181e0:	ldr	r3, [sl, #32]
   181e4:	cmp	r2, r3
   181e8:	bcs	18204 <argp_failure@@Base+0x1380>
   181ec:	ldr	r3, [sl, #28]
   181f0:	add	r2, r3, #1
   181f4:	str	r2, [sl, #28]
   181f8:	mov	r2, #10
   181fc:	strb	r2, [r3]
   18200:	b	18078 <argp_failure@@Base+0x11f4>
   18204:	mov	r1, #1
   18208:	mov	r0, sl
   1820c:	bl	197bc <argp_error@@Base+0x1450>
   18210:	cmp	r0, #0
   18214:	bne	181ec <argp_failure@@Base+0x1368>
   18218:	b	18078 <argp_failure@@Base+0x11f4>
   1821c:	ldrb	r3, [r6]
   18220:	mov	r4, r6
   18224:	mov	r7, #0
   18228:	b	1728c <argp_failure@@Base+0x408>
   1822c:	ldrb	r3, [r8]
   18230:	cmp	r3, r7
   18234:	beq	17968 <argp_failure@@Base+0xae4>
   18238:	add	r5, r5, #24
   1823c:	subs	r6, r6, #1
   18240:	beq	17a58 <argp_failure@@Base+0xbd4>
   18244:	ldr	r9, [r5, #12]
   18248:	tst	r9, #8
   1824c:	bne	18238 <argp_failure@@Base+0x13b4>
   18250:	ldr	r7, [r5, #4]
   18254:	sub	r3, r7, #1
   18258:	cmp	r3, #254	; 0xfe
   1825c:	bhi	18238 <argp_failure@@Base+0x13b4>
   18260:	bl	11220 <__ctype_b_loc@plt>
   18264:	ldr	r2, [r0]
   18268:	lsl	r3, r7, #1
   1826c:	ldrh	r3, [r2, r3]
   18270:	tst	r3, #16384	; 0x4000
   18274:	bne	1822c <argp_failure@@Base+0x13a8>
   18278:	b	18238 <argp_failure@@Base+0x13b4>
   1827c:	muleq	r1, r8, sp

00018280 <argp_help@@Base>:
   18280:	push	{lr}		; (str lr, [sp, #-4]!)
   18284:	sub	sp, sp, #12
   18288:	str	r3, [sp]
   1828c:	mov	r3, r2
   18290:	mov	r2, r1
   18294:	mov	r1, #0
   18298:	bl	170a0 <argp_failure@@Base+0x21c>
   1829c:	add	sp, sp, #12
   182a0:	pop	{pc}		; (ldr pc, [sp], #4)

000182a4 <argp_state_help@@Base>:
   182a4:	strd	r4, [sp, #-12]!
   182a8:	str	lr, [sp, #8]
   182ac:	sub	sp, sp, #12
   182b0:	mov	r5, r2
   182b4:	subs	r4, r0, #0
   182b8:	beq	182d8 <argp_state_help@@Base+0x34>
   182bc:	ldr	r3, [r4, #16]
   182c0:	tst	r3, #2
   182c4:	beq	18318 <argp_state_help@@Base+0x74>
   182c8:	add	sp, sp, #12
   182cc:	ldrd	r4, [sp]
   182d0:	add	sp, sp, #8
   182d4:	pop	{pc}		; (ldr pc, [sp], #4)
   182d8:	cmp	r1, #0
   182dc:	beq	182c8 <argp_state_help@@Base+0x24>
   182e0:	movw	r3, #2224	; 0x8b0
   182e4:	movt	r3, #3
   182e8:	ldr	r3, [r3]
   182ec:	str	r3, [sp]
   182f0:	mov	r3, r2
   182f4:	mov	r2, r1
   182f8:	mov	r1, #0
   182fc:	mov	r0, r1
   18300:	bl	170a0 <argp_failure@@Base+0x21c>
   18304:	b	18354 <argp_state_help@@Base+0xb0>
   18308:	movw	r3, #2216	; 0x8a8
   1830c:	movt	r3, #3
   18310:	ldr	r0, [r3]
   18314:	bl	1122c <exit@plt>
   18318:	cmp	r1, #0
   1831c:	beq	182c8 <argp_state_help@@Base+0x24>
   18320:	ldr	r3, [r4, #16]
   18324:	tst	r3, #64	; 0x40
   18328:	orrne	r5, r5, #128	; 0x80
   1832c:	ldr	r3, [r4, #40]	; 0x28
   18330:	str	r3, [sp]
   18334:	mov	r3, r5
   18338:	mov	r2, r1
   1833c:	mov	r1, r4
   18340:	ldr	r0, [r4]
   18344:	bl	170a0 <argp_failure@@Base+0x21c>
   18348:	ldr	r3, [r4, #16]
   1834c:	tst	r3, #32
   18350:	bne	182c8 <argp_state_help@@Base+0x24>
   18354:	tst	r5, #256	; 0x100
   18358:	bne	18308 <argp_state_help@@Base+0x64>
   1835c:	tst	r5, #512	; 0x200
   18360:	beq	182c8 <argp_state_help@@Base+0x24>
   18364:	mov	r0, #0
   18368:	bl	1122c <exit@plt>

0001836c <argp_error@@Base>:
   1836c:	push	{r1, r2, r3}
   18370:	strd	r4, [sp, #-12]!
   18374:	str	lr, [sp, #8]
   18378:	sub	sp, sp, #8
   1837c:	subs	r5, r0, #0
   18380:	beq	18458 <argp_error@@Base+0xec>
   18384:	ldr	r3, [r5, #16]
   18388:	tst	r3, #2
   1838c:	bne	18440 <argp_error@@Base+0xd4>
   18390:	ldr	r4, [r5, #44]	; 0x2c
   18394:	cmp	r4, #0
   18398:	beq	18440 <argp_error@@Base+0xd4>
   1839c:	mov	r0, r4
   183a0:	bl	112ec <flockfile@plt>
   183a4:	add	r3, sp, #24
   183a8:	str	r3, [sp, #4]
   183ac:	ldr	r0, [r5, #40]	; 0x28
   183b0:	mov	r1, r4
   183b4:	bl	110ac <fputs_unlocked@plt>
   183b8:	ldr	r3, [r4, #20]
   183bc:	ldr	r2, [r4, #24]
   183c0:	cmp	r3, r2
   183c4:	addcc	r2, r3, #1
   183c8:	strcc	r2, [r4, #20]
   183cc:	movcc	r2, #58	; 0x3a
   183d0:	strbcc	r2, [r3]
   183d4:	bcs	1848c <argp_error@@Base+0x120>
   183d8:	ldr	r3, [r4, #20]
   183dc:	ldr	r2, [r4, #24]
   183e0:	cmp	r3, r2
   183e4:	addcc	r2, r3, #1
   183e8:	strcc	r2, [r4, #20]
   183ec:	movcc	r2, #32
   183f0:	strbcc	r2, [r3]
   183f4:	bcs	1849c <argp_error@@Base+0x130>
   183f8:	ldr	r2, [sp, #4]
   183fc:	ldr	r1, [sp, #20]
   18400:	mov	r0, r4
   18404:	bl	112bc <vfprintf@plt>
   18408:	ldr	r3, [r4, #20]
   1840c:	ldr	r2, [r4, #24]
   18410:	cmp	r3, r2
   18414:	addcc	r2, r3, #1
   18418:	strcc	r2, [r4, #20]
   1841c:	movcc	r2, #10
   18420:	strbcc	r2, [r3]
   18424:	bcs	184ac <argp_error@@Base+0x140>
   18428:	mov	r2, #260	; 0x104
   1842c:	mov	r1, r4
   18430:	mov	r0, r5
   18434:	bl	182a4 <argp_state_help@@Base>
   18438:	mov	r0, r4
   1843c:	bl	11184 <funlockfile@plt>
   18440:	add	sp, sp, #8
   18444:	ldrd	r4, [sp]
   18448:	ldr	lr, [sp, #8]
   1844c:	add	sp, sp, #12
   18450:	add	sp, sp, #12
   18454:	bx	lr
   18458:	movw	r3, #2232	; 0x8b8
   1845c:	movt	r3, #3
   18460:	ldr	r4, [r3]
   18464:	cmp	r4, #0
   18468:	beq	18440 <argp_error@@Base+0xd4>
   1846c:	mov	r0, r4
   18470:	bl	112ec <flockfile@plt>
   18474:	add	r3, sp, #24
   18478:	str	r3, [sp, #4]
   1847c:	movw	r3, #2224	; 0x8b0
   18480:	movt	r3, #3
   18484:	ldr	r0, [r3]
   18488:	b	183b0 <argp_error@@Base+0x44>
   1848c:	mov	r1, #58	; 0x3a
   18490:	mov	r0, r4
   18494:	bl	112a4 <__overflow@plt>
   18498:	b	183d8 <argp_error@@Base+0x6c>
   1849c:	mov	r1, #32
   184a0:	mov	r0, r4
   184a4:	bl	112a4 <__overflow@plt>
   184a8:	b	183f8 <argp_error@@Base+0x8c>
   184ac:	mov	r1, #10
   184b0:	mov	r0, r4
   184b4:	bl	112a4 <__overflow@plt>
   184b8:	b	18428 <argp_error@@Base+0xbc>
   184bc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   184c0:	strd	r6, [sp, #8]
   184c4:	strd	r8, [sp, #16]
   184c8:	str	lr, [sp, #24]
   184cc:	ldr	r5, [r1, #28]
   184d0:	ldr	r6, [r1, #32]
   184d4:	ldr	r8, [r1]
   184d8:	add	r7, r0, r6, lsl #2
   184dc:	b	1850c <argp_error@@Base+0x1a0>
   184e0:	add	r3, r0, r5, lsl #2
   184e4:	add	r4, r9, r5
   184e8:	add	r4, r0, r4, lsl #2
   184ec:	mov	r2, r7
   184f0:	ldr	ip, [r3]
   184f4:	ldr	lr, [r2]
   184f8:	str	lr, [r3], #4
   184fc:	str	ip, [r2], #4
   18500:	cmp	r3, r4
   18504:	bne	184f0 <argp_error@@Base+0x184>
   18508:	add	r5, r5, r9
   1850c:	cmp	r8, r6
   18510:	movle	r3, #0
   18514:	movgt	r3, #1
   18518:	cmp	r5, r6
   1851c:	movge	r3, #0
   18520:	cmp	r3, #0
   18524:	beq	18568 <argp_error@@Base+0x1fc>
   18528:	sub	r9, r8, r6
   1852c:	sub	r3, r6, r5
   18530:	cmp	r9, r3
   18534:	ble	184e0 <argp_error@@Base+0x174>
   18538:	add	r2, r0, r5, lsl #2
   1853c:	sub	r9, r8, r3
   18540:	add	r3, r0, r9, lsl #2
   18544:	add	r4, r0, r8, lsl #2
   18548:	ldr	ip, [r2]
   1854c:	ldr	lr, [r3]
   18550:	str	lr, [r2], #4
   18554:	str	ip, [r3], #4
   18558:	cmp	r3, r4
   1855c:	bne	18548 <argp_error@@Base+0x1dc>
   18560:	mov	r8, r9
   18564:	b	1850c <argp_error@@Base+0x1a0>
   18568:	ldr	r0, [r1]
   1856c:	ldr	r3, [r1, #32]
   18570:	sub	r2, r0, r3
   18574:	ldr	r3, [r1, #28]
   18578:	add	r3, r3, r2
   1857c:	str	r3, [r1, #28]
   18580:	str	r0, [r1, #32]
   18584:	ldrd	r4, [sp]
   18588:	ldrd	r6, [sp, #8]
   1858c:	ldrd	r8, [sp, #16]
   18590:	add	sp, sp, #24
   18594:	pop	{pc}		; (ldr pc, [sp], #4)
   18598:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1859c:	strd	r6, [sp, #8]
   185a0:	strd	r8, [sp, #16]
   185a4:	strd	sl, [sp, #24]
   185a8:	str	lr, [sp, #32]
   185ac:	sub	sp, sp, #52	; 0x34
   185b0:	str	r0, [sp, #32]
   185b4:	str	r1, [sp, #20]
   185b8:	str	r2, [sp, #28]
   185bc:	str	r3, [sp, #16]
   185c0:	ldr	fp, [sp, #96]	; 0x60
   185c4:	ldr	r9, [fp, #20]
   185c8:	ldrb	r3, [r9]
   185cc:	cmp	r3, #0
   185d0:	cmpne	r3, #61	; 0x3d
   185d4:	beq	1860c <argp_error@@Base+0x2a0>
   185d8:	mov	r8, r9
   185dc:	ldrb	r3, [r8, #1]!
   185e0:	cmp	r3, #0
   185e4:	cmpne	r3, #61	; 0x3d
   185e8:	bne	185dc <argp_error@@Base+0x270>
   185ec:	sub	r7, r8, r9
   185f0:	ldr	r5, [sp, #16]
   185f4:	ldr	sl, [r5]
   185f8:	cmp	sl, #0
   185fc:	beq	18ad0 <argp_error@@Base+0x764>
   18600:	mov	r4, sl
   18604:	mov	r6, #0
   18608:	b	18624 <argp_error@@Base+0x2b8>
   1860c:	mov	r8, r9
   18610:	b	185ec <argp_error@@Base+0x280>
   18614:	add	r6, r6, #1
   18618:	ldr	r4, [r5, #16]!
   1861c:	cmp	r4, #0
   18620:	beq	18ad4 <argp_error@@Base+0x768>
   18624:	str	r5, [sp, #12]
   18628:	mov	r2, r7
   1862c:	mov	r1, r9
   18630:	mov	r0, r4
   18634:	bl	11358 <strncmp@plt>
   18638:	cmp	r0, #0
   1863c:	bne	18614 <argp_error@@Base+0x2a8>
   18640:	mov	r0, r4
   18644:	bl	11238 <strlen@plt>
   18648:	cmp	r0, r7
   1864c:	bne	18614 <argp_error@@Base+0x2a8>
   18650:	cmp	r5, #0
   18654:	beq	18adc <argp_error@@Base+0x770>
   18658:	ldr	r3, [fp]
   1865c:	add	r2, r3, #1
   18660:	str	r2, [fp]
   18664:	mov	r1, #0
   18668:	str	r1, [fp, #20]
   1866c:	ldrb	r1, [r8]
   18670:	cmp	r1, #0
   18674:	beq	18a24 <argp_error@@Base+0x6b8>
   18678:	ldr	r3, [sp, #12]
   1867c:	ldr	r3, [r3, #4]
   18680:	cmp	r3, #0
   18684:	beq	189d0 <argp_error@@Base+0x664>
   18688:	add	r8, r8, #1
   1868c:	str	r8, [fp, #12]
   18690:	ldr	r3, [sp, #88]	; 0x58
   18694:	cmp	r3, #0
   18698:	strne	r6, [r3]
   1869c:	ldr	r2, [sp, #12]
   186a0:	ldr	r3, [r2, #8]
   186a4:	cmp	r3, #0
   186a8:	beq	18abc <argp_error@@Base+0x750>
   186ac:	ldr	r2, [r2, #12]
   186b0:	str	r2, [r3]
   186b4:	mov	r0, #0
   186b8:	add	sp, sp, #52	; 0x34
   186bc:	ldrd	r4, [sp]
   186c0:	ldrd	r6, [sp, #8]
   186c4:	ldrd	r8, [sp, #16]
   186c8:	ldrd	sl, [sp, #24]
   186cc:	add	sp, sp, #32
   186d0:	pop	{pc}		; (ldr pc, [sp], #4)
   186d4:	ldr	r2, [sl, #8]
   186d8:	ldr	r3, [r9, #8]
   186dc:	cmp	r2, r3
   186e0:	bne	187a0 <argp_error@@Base+0x434>
   186e4:	ldr	r2, [sl, #12]
   186e8:	ldr	r3, [r9, #12]
   186ec:	cmp	r2, r3
   186f0:	bne	187a0 <argp_error@@Base+0x434>
   186f4:	b	18758 <argp_error@@Base+0x3ec>
   186f8:	mov	r0, r6
   186fc:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   18700:	subs	r3, r0, #0
   18704:	str	r3, [sp, #24]
   18708:	beq	187d0 <argp_error@@Base+0x464>
   1870c:	mov	r2, r6
   18710:	mov	r1, #0
   18714:	ldr	r7, [sp, #24]
   18718:	mov	r0, r7
   1871c:	bl	11280 <memset@plt>
   18720:	ldr	r2, [sp, #36]	; 0x24
   18724:	mov	r1, #1
   18728:	strb	r1, [r7, r2]
   1872c:	ldr	r3, [sp, #44]	; 0x2c
   18730:	str	r3, [sp, #40]	; 0x28
   18734:	b	187c0 <argp_error@@Base+0x454>
   18738:	ldr	r3, [sp, #24]
   1873c:	cmp	r3, #0
   18740:	moveq	r5, #1
   18744:	beq	18758 <argp_error@@Base+0x3ec>
   18748:	mov	r5, #1
   1874c:	b	187c0 <argp_error@@Base+0x454>
   18750:	str	r4, [sp, #36]	; 0x24
   18754:	mov	sl, r9
   18758:	add	r4, r4, #1
   1875c:	ldr	r0, [r9, #16]!
   18760:	cmp	r0, #0
   18764:	beq	187d8 <argp_error@@Base+0x46c>
   18768:	ldr	r2, [sp, #12]
   1876c:	ldr	r1, [fp, #20]
   18770:	bl	11358 <strncmp@plt>
   18774:	cmp	r0, #0
   18778:	bne	18758 <argp_error@@Base+0x3ec>
   1877c:	cmp	sl, #0
   18780:	beq	18750 <argp_error@@Base+0x3e4>
   18784:	ldr	r3, [sp, #92]	; 0x5c
   18788:	cmp	r3, #0
   1878c:	bne	187a0 <argp_error@@Base+0x434>
   18790:	ldr	r2, [sl, #4]
   18794:	ldr	r3, [r9, #4]
   18798:	cmp	r2, r3
   1879c:	beq	186d4 <argp_error@@Base+0x368>
   187a0:	cmp	r5, #0
   187a4:	bne	18758 <argp_error@@Base+0x3ec>
   187a8:	ldr	r3, [sp, #100]	; 0x64
   187ac:	cmp	r3, #0
   187b0:	beq	18738 <argp_error@@Base+0x3cc>
   187b4:	ldr	r3, [sp, #24]
   187b8:	cmp	r3, #0
   187bc:	beq	186f8 <argp_error@@Base+0x38c>
   187c0:	ldr	r3, [sp, #24]
   187c4:	mov	r2, #1
   187c8:	strb	r2, [r3, r4]
   187cc:	b	18758 <argp_error@@Base+0x3ec>
   187d0:	mov	r5, #1
   187d4:	b	18758 <argp_error@@Base+0x3ec>
   187d8:	str	sl, [sp, #12]
   187dc:	ldr	r3, [sp, #24]
   187e0:	orrs	r3, r3, r5
   187e4:	bne	1885c <argp_error@@Base+0x4f0>
   187e8:	ldr	r3, [sp, #12]
   187ec:	cmp	r3, #0
   187f0:	bne	189c8 <argp_error@@Base+0x65c>
   187f4:	ldr	r3, [sp, #92]	; 0x5c
   187f8:	cmp	r3, #0
   187fc:	beq	18830 <argp_error@@Base+0x4c4>
   18800:	ldr	r3, [fp]
   18804:	ldr	r2, [sp, #20]
   18808:	ldr	r3, [r2, r3, lsl #2]
   1880c:	ldrb	r3, [r3, #1]
   18810:	cmp	r3, #45	; 0x2d
   18814:	beq	18830 <argp_error@@Base+0x4c4>
   18818:	ldr	r3, [fp, #20]
   1881c:	ldrb	r1, [r3]
   18820:	ldr	r0, [sp, #28]
   18824:	bl	11244 <strchr@plt>
   18828:	cmp	r0, #0
   1882c:	bne	18ac8 <argp_error@@Base+0x75c>
   18830:	ldr	r3, [sp, #100]	; 0x64
   18834:	cmp	r3, #0
   18838:	bne	18998 <argp_error@@Base+0x62c>
   1883c:	mov	r2, #0
   18840:	str	r2, [fp, #20]
   18844:	ldr	r3, [fp]
   18848:	add	r3, r3, #1
   1884c:	str	r3, [fp]
   18850:	str	r2, [fp, #8]
   18854:	mov	r0, #63	; 0x3f
   18858:	b	186b8 <argp_error@@Base+0x34c>
   1885c:	ldr	r3, [sp, #100]	; 0x64
   18860:	cmp	r3, #0
   18864:	beq	1889c <argp_error@@Base+0x530>
   18868:	cmp	r5, #0
   1886c:	beq	188d8 <argp_error@@Base+0x56c>
   18870:	movw	r0, #2232	; 0x8b8
   18874:	movt	r0, #3
   18878:	ldr	r3, [fp, #20]
   1887c:	str	r3, [sp]
   18880:	ldr	r3, [sp, #104]	; 0x68
   18884:	ldr	r2, [sp, #20]
   18888:	ldr	r2, [r2]
   1888c:	movw	r1, #49444	; 0xc124
   18890:	movt	r1, #1
   18894:	ldr	r0, [r0]
   18898:	bl	11250 <fprintf@plt>
   1889c:	ldr	r3, [sp, #40]	; 0x28
   188a0:	cmp	r3, #0
   188a4:	bne	1898c <argp_error@@Base+0x620>
   188a8:	ldr	r4, [fp, #20]
   188ac:	mov	r0, r4
   188b0:	bl	11238 <strlen@plt>
   188b4:	add	r0, r4, r0
   188b8:	str	r0, [fp, #20]
   188bc:	ldr	r3, [fp]
   188c0:	add	r3, r3, #1
   188c4:	str	r3, [fp]
   188c8:	mov	r3, #0
   188cc:	str	r3, [fp, #8]
   188d0:	mov	r0, #63	; 0x3f
   188d4:	b	186b8 <argp_error@@Base+0x34c>
   188d8:	movw	r4, #2232	; 0x8b8
   188dc:	movt	r4, #3
   188e0:	ldr	r0, [r4]
   188e4:	bl	112ec <flockfile@plt>
   188e8:	ldr	r3, [fp, #20]
   188ec:	str	r3, [sp]
   188f0:	ldr	r3, [sp, #104]	; 0x68
   188f4:	ldr	r2, [sp, #20]
   188f8:	ldr	r2, [r2]
   188fc:	movw	r1, #49476	; 0xc144
   18900:	movt	r1, #1
   18904:	ldr	r0, [r4]
   18908:	bl	11250 <fprintf@plt>
   1890c:	cmp	r6, #0
   18910:	ble	1896c <argp_error@@Base+0x600>
   18914:	ldr	r2, [sp, #24]
   18918:	sub	r4, r2, #1
   1891c:	sub	r3, r6, #1
   18920:	add	r8, r2, r3
   18924:	movw	r7, #49524	; 0xc174
   18928:	movt	r7, #1
   1892c:	movw	r6, #2232	; 0x8b8
   18930:	movt	r6, #3
   18934:	ldr	r9, [sp, #16]
   18938:	b	18948 <argp_error@@Base+0x5dc>
   1893c:	add	r5, r5, #1
   18940:	cmp	r8, r4
   18944:	beq	1896c <argp_error@@Base+0x600>
   18948:	ldrb	r3, [r4, #1]!
   1894c:	cmp	r3, #0
   18950:	beq	1893c <argp_error@@Base+0x5d0>
   18954:	ldr	r3, [r9, r5, lsl #4]
   18958:	ldr	r2, [sp, #104]	; 0x68
   1895c:	mov	r1, r7
   18960:	ldr	r0, [r6]
   18964:	bl	11250 <fprintf@plt>
   18968:	b	1893c <argp_error@@Base+0x5d0>
   1896c:	movw	r4, #2232	; 0x8b8
   18970:	movt	r4, #3
   18974:	ldr	r1, [r4]
   18978:	mov	r0, #10
   1897c:	bl	112c8 <fputc@plt>
   18980:	ldr	r0, [r4]
   18984:	bl	11184 <funlockfile@plt>
   18988:	b	1889c <argp_error@@Base+0x530>
   1898c:	ldr	r0, [sp, #24]
   18990:	bl	140ac <argp_parse@@Base+0xcd8>
   18994:	b	188a8 <argp_error@@Base+0x53c>
   18998:	movw	r0, #2232	; 0x8b8
   1899c:	movt	r0, #3
   189a0:	ldr	r3, [fp, #20]
   189a4:	str	r3, [sp]
   189a8:	ldr	r3, [sp, #104]	; 0x68
   189ac:	ldr	r2, [sp, #20]
   189b0:	ldr	r2, [r2]
   189b4:	movw	r1, #49532	; 0xc17c
   189b8:	movt	r1, #1
   189bc:	ldr	r0, [r0]
   189c0:	bl	11250 <fprintf@plt>
   189c4:	b	1883c <argp_error@@Base+0x4d0>
   189c8:	ldr	r6, [sp, #36]	; 0x24
   189cc:	b	18658 <argp_error@@Base+0x2ec>
   189d0:	ldr	r3, [sp, #100]	; 0x64
   189d4:	cmp	r3, #0
   189d8:	bne	189f0 <argp_error@@Base+0x684>
   189dc:	ldr	r3, [sp, #12]
   189e0:	ldr	r3, [r3, #12]
   189e4:	str	r3, [fp, #8]
   189e8:	mov	r0, #63	; 0x3f
   189ec:	b	186b8 <argp_error@@Base+0x34c>
   189f0:	movw	r0, #2232	; 0x8b8
   189f4:	movt	r0, #3
   189f8:	ldr	r3, [sp, #12]
   189fc:	ldr	r3, [r3]
   18a00:	str	r3, [sp]
   18a04:	ldr	r3, [sp, #104]	; 0x68
   18a08:	ldr	r2, [sp, #20]
   18a0c:	ldr	r2, [r2]
   18a10:	movw	r1, #49564	; 0xc19c
   18a14:	movt	r1, #1
   18a18:	ldr	r0, [r0]
   18a1c:	bl	11250 <fprintf@plt>
   18a20:	b	189dc <argp_error@@Base+0x670>
   18a24:	ldr	r1, [sp, #12]
   18a28:	ldr	r1, [r1, #4]
   18a2c:	cmp	r1, #1
   18a30:	bne	18690 <argp_error@@Base+0x324>
   18a34:	ldr	r1, [sp, #32]
   18a38:	cmp	r2, r1
   18a3c:	bge	18a58 <argp_error@@Base+0x6ec>
   18a40:	add	r3, r3, #2
   18a44:	str	r3, [fp]
   18a48:	ldr	r3, [sp, #20]
   18a4c:	ldr	r3, [r3, r2, lsl #2]
   18a50:	str	r3, [fp, #12]
   18a54:	b	18690 <argp_error@@Base+0x324>
   18a58:	ldr	r3, [sp, #100]	; 0x64
   18a5c:	cmp	r3, #0
   18a60:	bne	18a88 <argp_error@@Base+0x71c>
   18a64:	ldr	r3, [sp, #12]
   18a68:	ldr	r3, [r3, #12]
   18a6c:	str	r3, [fp, #8]
   18a70:	ldr	r3, [sp, #28]
   18a74:	ldrb	r3, [r3]
   18a78:	cmp	r3, #58	; 0x3a
   18a7c:	moveq	r0, #58	; 0x3a
   18a80:	movne	r0, #63	; 0x3f
   18a84:	b	186b8 <argp_error@@Base+0x34c>
   18a88:	movw	r0, #2232	; 0x8b8
   18a8c:	movt	r0, #3
   18a90:	ldr	r3, [sp, #12]
   18a94:	ldr	r3, [r3]
   18a98:	str	r3, [sp]
   18a9c:	ldr	r3, [sp, #104]	; 0x68
   18aa0:	ldr	r2, [sp, #20]
   18aa4:	ldr	r2, [r2]
   18aa8:	movw	r1, #49612	; 0xc1cc
   18aac:	movt	r1, #1
   18ab0:	ldr	r0, [r0]
   18ab4:	bl	11250 <fprintf@plt>
   18ab8:	b	18a64 <argp_error@@Base+0x6f8>
   18abc:	ldr	r3, [sp, #12]
   18ac0:	ldr	r0, [r3, #12]
   18ac4:	b	186b8 <argp_error@@Base+0x34c>
   18ac8:	mvn	r0, #0
   18acc:	b	186b8 <argp_error@@Base+0x34c>
   18ad0:	mov	r6, #0
   18ad4:	cmp	sl, #0
   18ad8:	beq	187f4 <argp_error@@Base+0x488>
   18adc:	ldr	r9, [sp, #16]
   18ae0:	mvn	r3, #0
   18ae4:	str	r3, [sp, #36]	; 0x24
   18ae8:	mov	r5, #0
   18aec:	str	r5, [sp, #40]	; 0x28
   18af0:	str	r5, [sp, #24]
   18af4:	mov	r4, r5
   18af8:	mov	r3, #1
   18afc:	str	r3, [sp, #44]	; 0x2c
   18b00:	mov	r0, sl
   18b04:	mov	sl, r5
   18b08:	str	r7, [sp, #12]
   18b0c:	b	18768 <argp_error@@Base+0x3fc>
   18b10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18b14:	strd	r6, [sp, #8]
   18b18:	strd	r8, [sp, #16]
   18b1c:	strd	sl, [sp, #24]
   18b20:	str	lr, [sp, #32]
   18b24:	sub	sp, sp, #36	; 0x24
   18b28:	str	r3, [sp, #24]
   18b2c:	ldr	r4, [sp, #80]	; 0x50
   18b30:	ldr	r8, [r4, #4]
   18b34:	subs	r5, r0, #0
   18b38:	ble	19074 <argp_error@@Base+0xd08>
   18b3c:	mov	r9, r1
   18b40:	mov	r6, r2
   18b44:	mov	r3, #0
   18b48:	str	r3, [r4, #12]
   18b4c:	ldr	r3, [r4]
   18b50:	cmp	r3, #0
   18b54:	beq	18b78 <argp_error@@Base+0x80c>
   18b58:	ldr	r3, [r4, #16]
   18b5c:	cmp	r3, #0
   18b60:	beq	18b80 <argp_error@@Base+0x814>
   18b64:	ldrb	r3, [r2]
   18b68:	sub	r3, r3, #43	; 0x2b
   18b6c:	tst	r3, #253	; 0xfd
   18b70:	addeq	r6, r2, #1
   18b74:	b	18bdc <argp_error@@Base+0x870>
   18b78:	mov	r3, #1
   18b7c:	str	r3, [r4]
   18b80:	ldr	r3, [r4]
   18b84:	str	r3, [r4, #32]
   18b88:	str	r3, [r4, #28]
   18b8c:	mov	r3, #0
   18b90:	str	r3, [r4, #20]
   18b94:	ldrb	r3, [r6]
   18b98:	cmp	r3, #45	; 0x2d
   18b9c:	moveq	r3, #2
   18ba0:	streq	r3, [r4, #24]
   18ba4:	addeq	r6, r6, #1
   18ba8:	beq	18bd4 <argp_error@@Base+0x868>
   18bac:	cmp	r3, #43	; 0x2b
   18bb0:	moveq	r3, #0
   18bb4:	streq	r3, [r4, #24]
   18bb8:	addeq	r6, r6, #1
   18bbc:	beq	18bd4 <argp_error@@Base+0x868>
   18bc0:	ldr	r3, [sp, #84]	; 0x54
   18bc4:	cmp	r3, #0
   18bc8:	beq	18c9c <argp_error@@Base+0x930>
   18bcc:	mov	r3, #0
   18bd0:	str	r3, [r4, #24]
   18bd4:	mov	r3, #1
   18bd8:	str	r3, [r4, #16]
   18bdc:	ldrb	r3, [r6]
   18be0:	cmp	r3, #58	; 0x3a
   18be4:	moveq	r8, #0
   18be8:	ldr	r3, [r4, #20]
   18bec:	cmp	r3, #0
   18bf0:	beq	18c00 <argp_error@@Base+0x894>
   18bf4:	ldrb	r3, [r3]
   18bf8:	cmp	r3, #0
   18bfc:	bne	18da0 <argp_error@@Base+0xa34>
   18c00:	ldr	r3, [r4]
   18c04:	ldr	r2, [r4, #32]
   18c08:	cmp	r2, r3
   18c0c:	strgt	r3, [r4, #32]
   18c10:	ldr	r2, [r4, #28]
   18c14:	cmp	r3, r2
   18c18:	strlt	r3, [r4, #28]
   18c1c:	ldr	r2, [r4, #24]
   18c20:	cmp	r2, #1
   18c24:	beq	18cbc <argp_error@@Base+0x950>
   18c28:	ldr	r7, [r4]
   18c2c:	cmp	r7, r5
   18c30:	beq	18c7c <argp_error@@Base+0x910>
   18c34:	ldr	sl, [r9, r7, lsl #2]
   18c38:	movw	r1, #47300	; 0xb8c4
   18c3c:	movt	r1, #1
   18c40:	mov	r0, sl
   18c44:	bl	110c4 <strcmp@plt>
   18c48:	cmp	r0, #0
   18c4c:	bne	19084 <argp_error@@Base+0xd18>
   18c50:	add	r7, r7, #1
   18c54:	str	r7, [r4]
   18c58:	ldr	r2, [r4, #28]
   18c5c:	ldr	r3, [r4, #32]
   18c60:	cmp	r2, r3
   18c64:	cmpne	r7, r3
   18c68:	bne	18d38 <argp_error@@Base+0x9cc>
   18c6c:	cmp	r2, r3
   18c70:	streq	r7, [r4, #28]
   18c74:	str	r5, [r4, #32]
   18c78:	str	r5, [r4]
   18c7c:	ldr	r3, [r4, #28]
   18c80:	ldr	r2, [r4, #32]
   18c84:	cmp	r3, r2
   18c88:	mvneq	r0, #0
   18c8c:	beq	190b0 <argp_error@@Base+0xd44>
   18c90:	str	r3, [r4]
   18c94:	mvn	r0, #0
   18c98:	b	190b0 <argp_error@@Base+0xd44>
   18c9c:	movw	r0, #49652	; 0xc1f4
   18ca0:	movt	r0, #1
   18ca4:	bl	111c0 <getenv@plt>
   18ca8:	cmp	r0, #0
   18cac:	bne	18bcc <argp_error@@Base+0x860>
   18cb0:	mov	r3, #1
   18cb4:	str	r3, [r4, #24]
   18cb8:	b	18bd4 <argp_error@@Base+0x868>
   18cbc:	ldr	r2, [r4, #32]
   18cc0:	ldr	r1, [r4, #28]
   18cc4:	cmp	r1, r2
   18cc8:	cmpne	r3, r2
   18ccc:	bne	18cec <argp_error@@Base+0x980>
   18cd0:	cmp	r3, r2
   18cd4:	strne	r3, [r4, #28]
   18cd8:	ldr	r3, [r4]
   18cdc:	cmp	r5, r3
   18ce0:	ble	18d30 <argp_error@@Base+0x9c4>
   18ce4:	add	r1, r9, r3, lsl #2
   18ce8:	b	18d0c <argp_error@@Base+0x9a0>
   18cec:	mov	r1, r4
   18cf0:	mov	r0, r9
   18cf4:	bl	184bc <argp_error@@Base+0x150>
   18cf8:	b	18cd8 <argp_error@@Base+0x96c>
   18cfc:	add	r3, r3, #1
   18d00:	str	r3, [r4]
   18d04:	cmp	r3, r5
   18d08:	beq	18d2c <argp_error@@Base+0x9c0>
   18d0c:	ldr	r2, [r1], #4
   18d10:	ldrb	r0, [r2]
   18d14:	cmp	r0, #45	; 0x2d
   18d18:	bne	18cfc <argp_error@@Base+0x990>
   18d1c:	ldrb	r2, [r2, #1]
   18d20:	cmp	r2, #0
   18d24:	beq	18cfc <argp_error@@Base+0x990>
   18d28:	b	18d30 <argp_error@@Base+0x9c4>
   18d2c:	mov	r3, r5
   18d30:	str	r3, [r4, #32]
   18d34:	b	18c28 <argp_error@@Base+0x8bc>
   18d38:	mov	r1, r4
   18d3c:	mov	r0, r9
   18d40:	bl	184bc <argp_error@@Base+0x150>
   18d44:	b	18c74 <argp_error@@Base+0x908>
   18d48:	ldrb	r1, [sl, #1]
   18d4c:	cmp	r1, #0
   18d50:	beq	19090 <argp_error@@Base+0xd24>
   18d54:	ldr	r3, [sp, #24]
   18d58:	cmp	r3, #0
   18d5c:	beq	18d90 <argp_error@@Base+0xa24>
   18d60:	cmp	r1, #45	; 0x2d
   18d64:	beq	18e0c <argp_error@@Base+0xaa0>
   18d68:	ldr	r3, [sp, #76]	; 0x4c
   18d6c:	cmp	r3, #0
   18d70:	beq	18d90 <argp_error@@Base+0xa24>
   18d74:	ldrb	r3, [sl, #2]
   18d78:	cmp	r3, #0
   18d7c:	bne	18e50 <argp_error@@Base+0xae4>
   18d80:	mov	r0, r6
   18d84:	bl	11244 <strchr@plt>
   18d88:	cmp	r0, #0
   18d8c:	beq	18e50 <argp_error@@Base+0xae4>
   18d90:	ldr	r3, [r4]
   18d94:	ldr	r3, [r9, r3, lsl #2]
   18d98:	add	r3, r3, #1
   18d9c:	str	r3, [r4, #20]
   18da0:	ldr	sl, [r4, #20]
   18da4:	add	fp, sl, #1
   18da8:	str	fp, [r4, #20]
   18dac:	ldrb	r7, [sl]
   18db0:	str	r7, [sp, #28]
   18db4:	mov	r1, r7
   18db8:	mov	r0, r6
   18dbc:	bl	11244 <strchr@plt>
   18dc0:	ldrb	r3, [sl, #1]
   18dc4:	cmp	r3, #0
   18dc8:	bne	18dd8 <argp_error@@Base+0xa6c>
   18dcc:	ldr	r3, [r4]
   18dd0:	add	r3, r3, #1
   18dd4:	str	r3, [r4]
   18dd8:	sub	r3, r7, #58	; 0x3a
   18ddc:	uxtb	r3, r3
   18de0:	cmp	r0, #0
   18de4:	cmpne	r3, #1
   18de8:	bls	18e9c <argp_error@@Base+0xb30>
   18dec:	ldrb	r3, [r0]
   18df0:	cmp	r3, #87	; 0x57
   18df4:	beq	18ed8 <argp_error@@Base+0xb6c>
   18df8:	ldrb	r3, [r0, #1]
   18dfc:	cmp	r3, #58	; 0x3a
   18e00:	beq	18fac <argp_error@@Base+0xc40>
   18e04:	mov	r0, r7
   18e08:	b	190b0 <argp_error@@Base+0xd44>
   18e0c:	add	sl, sl, #2
   18e10:	str	sl, [r4, #20]
   18e14:	movw	r3, #47300	; 0xb8c4
   18e18:	movt	r3, #1
   18e1c:	str	r3, [sp, #16]
   18e20:	str	r8, [sp, #12]
   18e24:	str	r4, [sp, #8]
   18e28:	ldr	r3, [sp, #76]	; 0x4c
   18e2c:	str	r3, [sp, #4]
   18e30:	ldr	r3, [sp, #72]	; 0x48
   18e34:	str	r3, [sp]
   18e38:	ldr	r3, [sp, #24]
   18e3c:	mov	r2, r6
   18e40:	mov	r1, r9
   18e44:	mov	r0, r5
   18e48:	bl	18598 <argp_error@@Base+0x22c>
   18e4c:	b	190b0 <argp_error@@Base+0xd44>
   18e50:	add	sl, sl, #1
   18e54:	str	sl, [r4, #20]
   18e58:	movw	r3, #46316	; 0xb4ec
   18e5c:	movt	r3, #1
   18e60:	str	r3, [sp, #16]
   18e64:	str	r8, [sp, #12]
   18e68:	str	r4, [sp, #8]
   18e6c:	ldr	r3, [sp, #76]	; 0x4c
   18e70:	str	r3, [sp, #4]
   18e74:	ldr	r3, [sp, #72]	; 0x48
   18e78:	str	r3, [sp]
   18e7c:	ldr	r3, [sp, #24]
   18e80:	mov	r2, r6
   18e84:	mov	r1, r9
   18e88:	mov	r0, r5
   18e8c:	bl	18598 <argp_error@@Base+0x22c>
   18e90:	cmn	r0, #1
   18e94:	bne	190b0 <argp_error@@Base+0xd44>
   18e98:	b	18d90 <argp_error@@Base+0xa24>
   18e9c:	cmp	r8, #0
   18ea0:	bne	18eb4 <argp_error@@Base+0xb48>
   18ea4:	ldr	r3, [sp, #28]
   18ea8:	str	r3, [r4, #8]
   18eac:	mov	r0, #63	; 0x3f
   18eb0:	b	190b0 <argp_error@@Base+0xd44>
   18eb4:	movw	r0, #2232	; 0x8b8
   18eb8:	movt	r0, #3
   18ebc:	ldr	r3, [sp, #28]
   18ec0:	ldr	r2, [r9]
   18ec4:	movw	r1, #49668	; 0xc204
   18ec8:	movt	r1, #1
   18ecc:	ldr	r0, [r0]
   18ed0:	bl	11250 <fprintf@plt>
   18ed4:	b	18ea4 <argp_error@@Base+0xb38>
   18ed8:	ldrb	r1, [r0, #1]
   18edc:	ldr	r2, [sp, #24]
   18ee0:	cmp	r1, #59	; 0x3b
   18ee4:	movne	r3, #0
   18ee8:	moveq	r3, #1
   18eec:	cmp	r2, #0
   18ef0:	moveq	r3, #0
   18ef4:	cmp	r3, #0
   18ef8:	beq	18df8 <argp_error@@Base+0xa8c>
   18efc:	ldrb	r3, [sl, #1]
   18f00:	cmp	r3, #0
   18f04:	strne	fp, [r4, #12]
   18f08:	bne	18f20 <argp_error@@Base+0xbb4>
   18f0c:	ldr	r3, [r4]
   18f10:	cmp	r3, r5
   18f14:	beq	18f68 <argp_error@@Base+0xbfc>
   18f18:	ldr	r3, [r9, r3, lsl #2]
   18f1c:	str	r3, [r4, #12]
   18f20:	ldr	r3, [r4, #12]
   18f24:	str	r3, [r4, #20]
   18f28:	mov	r2, #0
   18f2c:	str	r2, [r4, #12]
   18f30:	movw	r3, #49740	; 0xc24c
   18f34:	movt	r3, #1
   18f38:	str	r3, [sp, #16]
   18f3c:	str	r8, [sp, #12]
   18f40:	str	r4, [sp, #8]
   18f44:	str	r2, [sp, #4]
   18f48:	ldr	r3, [sp, #72]	; 0x48
   18f4c:	str	r3, [sp]
   18f50:	ldr	r3, [sp, #24]
   18f54:	mov	r2, r6
   18f58:	mov	r1, r9
   18f5c:	mov	r0, r5
   18f60:	bl	18598 <argp_error@@Base+0x22c>
   18f64:	b	190b0 <argp_error@@Base+0xd44>
   18f68:	cmp	r8, #0
   18f6c:	bne	18f88 <argp_error@@Base+0xc1c>
   18f70:	ldr	r3, [sp, #28]
   18f74:	str	r3, [r4, #8]
   18f78:	ldrb	r0, [r6]
   18f7c:	cmp	r0, #58	; 0x3a
   18f80:	movne	r0, #63	; 0x3f
   18f84:	b	190b0 <argp_error@@Base+0xd44>
   18f88:	movw	r0, #2232	; 0x8b8
   18f8c:	movt	r0, #3
   18f90:	ldr	r3, [sp, #28]
   18f94:	ldr	r2, [r9]
   18f98:	movw	r1, #49696	; 0xc220
   18f9c:	movt	r1, #1
   18fa0:	ldr	r0, [r0]
   18fa4:	bl	11250 <fprintf@plt>
   18fa8:	b	18f70 <argp_error@@Base+0xc04>
   18fac:	ldrb	r3, [r0, #2]
   18fb0:	cmp	r3, #58	; 0x3a
   18fb4:	beq	18fe0 <argp_error@@Base+0xc74>
   18fb8:	ldrb	r3, [sl, #1]
   18fbc:	cmp	r3, #0
   18fc0:	beq	19010 <argp_error@@Base+0xca4>
   18fc4:	str	fp, [r4, #12]
   18fc8:	ldr	r3, [r4]
   18fcc:	add	r3, r3, #1
   18fd0:	str	r3, [r4]
   18fd4:	mov	r3, #0
   18fd8:	str	r3, [r4, #20]
   18fdc:	b	18e04 <argp_error@@Base+0xa98>
   18fe0:	ldrb	r3, [sl, #1]
   18fe4:	cmp	r3, #0
   18fe8:	moveq	r3, #0
   18fec:	streq	r3, [r4, #12]
   18ff0:	beq	19004 <argp_error@@Base+0xc98>
   18ff4:	str	fp, [r4, #12]
   18ff8:	ldr	r3, [r4]
   18ffc:	add	r3, r3, #1
   19000:	str	r3, [r4]
   19004:	mov	r3, #0
   19008:	str	r3, [r4, #20]
   1900c:	b	18e04 <argp_error@@Base+0xa98>
   19010:	ldr	r3, [r4]
   19014:	cmp	r3, r5
   19018:	beq	19030 <argp_error@@Base+0xcc4>
   1901c:	add	r2, r3, #1
   19020:	str	r2, [r4]
   19024:	ldr	r3, [r9, r3, lsl #2]
   19028:	str	r3, [r4, #12]
   1902c:	b	18fd4 <argp_error@@Base+0xc68>
   19030:	cmp	r8, #0
   19034:	bne	19050 <argp_error@@Base+0xce4>
   19038:	ldr	r3, [sp, #28]
   1903c:	str	r3, [r4, #8]
   19040:	ldrb	r7, [r6]
   19044:	cmp	r7, #58	; 0x3a
   19048:	movne	r7, #63	; 0x3f
   1904c:	b	18fd4 <argp_error@@Base+0xc68>
   19050:	movw	r0, #2232	; 0x8b8
   19054:	movt	r0, #3
   19058:	ldr	r3, [sp, #28]
   1905c:	ldr	r2, [r9]
   19060:	movw	r1, #49696	; 0xc220
   19064:	movt	r1, #1
   19068:	ldr	r0, [r0]
   1906c:	bl	11250 <fprintf@plt>
   19070:	b	19038 <argp_error@@Base+0xccc>
   19074:	mvn	r0, #0
   19078:	b	190b0 <argp_error@@Base+0xd44>
   1907c:	mvn	r0, #0
   19080:	b	190b0 <argp_error@@Base+0xd44>
   19084:	ldrb	r3, [sl]
   19088:	cmp	r3, #45	; 0x2d
   1908c:	beq	18d48 <argp_error@@Base+0x9dc>
   19090:	ldr	r3, [r4, #24]
   19094:	cmp	r3, #0
   19098:	beq	1907c <argp_error@@Base+0xd10>
   1909c:	add	r3, r7, #1
   190a0:	str	r3, [r4]
   190a4:	ldr	r3, [r9, r7, lsl #2]
   190a8:	str	r3, [r4, #12]
   190ac:	mov	r0, #1
   190b0:	add	sp, sp, #36	; 0x24
   190b4:	ldrd	r4, [sp]
   190b8:	ldrd	r6, [sp, #8]
   190bc:	ldrd	r8, [sp, #16]
   190c0:	ldrd	sl, [sp, #24]
   190c4:	add	sp, sp, #32
   190c8:	pop	{pc}		; (ldr pc, [sp], #4)
   190cc:	strd	r4, [sp, #-12]!
   190d0:	str	lr, [sp, #8]
   190d4:	sub	sp, sp, #20
   190d8:	movw	r4, #2280	; 0x8e8
   190dc:	movt	r4, #3
   190e0:	movw	r5, #2204	; 0x89c
   190e4:	movt	r5, #3
   190e8:	ldr	ip, [r5]
   190ec:	str	ip, [r4]
   190f0:	ldr	ip, [r5, #4]
   190f4:	str	ip, [r4, #4]
   190f8:	ldr	ip, [sp, #40]	; 0x28
   190fc:	str	ip, [sp, #12]
   19100:	str	r4, [sp, #8]
   19104:	ldr	ip, [sp, #36]	; 0x24
   19108:	str	ip, [sp, #4]
   1910c:	ldr	ip, [sp, #32]
   19110:	str	ip, [sp]
   19114:	bl	18b10 <argp_error@@Base+0x7a4>
   19118:	ldr	r3, [r4]
   1911c:	str	r3, [r5]
   19120:	movw	r3, #2372	; 0x944
   19124:	movt	r3, #3
   19128:	ldr	r2, [r4, #12]
   1912c:	str	r2, [r3]
   19130:	ldr	r3, [r4, #8]
   19134:	str	r3, [r5, #8]
   19138:	add	sp, sp, #20
   1913c:	ldrd	r4, [sp]
   19140:	add	sp, sp, #8
   19144:	pop	{pc}		; (ldr pc, [sp], #4)
   19148:	push	{lr}		; (str lr, [sp, #-4]!)
   1914c:	sub	sp, sp, #20
   19150:	mov	r3, #1
   19154:	str	r3, [sp, #8]
   19158:	mov	r3, #0
   1915c:	str	r3, [sp, #4]
   19160:	str	r3, [sp]
   19164:	bl	190cc <argp_error@@Base+0xd60>
   19168:	add	sp, sp, #20
   1916c:	pop	{pc}		; (ldr pc, [sp], #4)
   19170:	str	r4, [sp, #-8]!
   19174:	str	lr, [sp, #4]
   19178:	umull	r2, r3, r1, r2
   1917c:	cmp	r3, #0
   19180:	bne	19198 <argp_error@@Base+0xe2c>
   19184:	mov	r1, r2
   19188:	bl	15024 <_obstack_memory_used@@Base+0xac8>
   1918c:	ldr	r4, [sp]
   19190:	add	sp, sp, #4
   19194:	pop	{pc}		; (ldr pc, [sp], #4)
   19198:	bl	1125c <__errno_location@plt>
   1919c:	mov	r3, #12
   191a0:	str	r3, [r0]
   191a4:	mov	r0, #0
   191a8:	b	1918c <argp_error@@Base+0xe20>
   191ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   191b0:	strd	r6, [sp, #8]
   191b4:	str	r8, [sp, #16]
   191b8:	str	lr, [sp, #20]
   191bc:	mov	r8, r0
   191c0:	mov	r7, r1
   191c4:	mov	r6, r2
   191c8:	mov	r5, r3
   191cc:	mov	r0, #36	; 0x24
   191d0:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   191d4:	subs	r4, r0, #0
   191d8:	beq	1921c <argp_error@@Base+0xeb0>
   191dc:	str	r8, [r4]
   191e0:	str	r7, [r4, #4]
   191e4:	str	r6, [r4, #8]
   191e8:	str	r5, [r4, #12]
   191ec:	mov	r3, #0
   191f0:	str	r3, [r4, #20]
   191f4:	str	r3, [r4, #16]
   191f8:	mov	r0, #200	; 0xc8
   191fc:	bl	14fe8 <_obstack_memory_used@@Base+0xa8c>
   19200:	mov	r5, r0
   19204:	str	r0, [r4, #24]
   19208:	cmp	r0, #0
   1920c:	strne	r0, [r4, #28]
   19210:	addne	r5, r0, #200	; 0xc8
   19214:	strne	r5, [r4, #32]
   19218:	beq	19234 <argp_error@@Base+0xec8>
   1921c:	mov	r0, r4
   19220:	ldrd	r4, [sp]
   19224:	ldrd	r6, [sp, #8]
   19228:	ldr	r8, [sp, #16]
   1922c:	add	sp, sp, #20
   19230:	pop	{pc}		; (ldr pc, [sp], #4)
   19234:	mov	r0, r4
   19238:	bl	140ac <argp_parse@@Base+0xcd8>
   1923c:	mov	r4, r5
   19240:	b	1921c <argp_error@@Base+0xeb0>
   19244:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19248:	strd	r6, [sp, #8]
   1924c:	strd	r8, [sp, #16]
   19250:	strd	sl, [sp, #24]
   19254:	str	lr, [sp, #32]
   19258:	sub	sp, sp, #20
   1925c:	mov	r4, r0
   19260:	ldr	r5, [r0, #24]
   19264:	ldr	r3, [r0, #16]
   19268:	add	r5, r5, r3
   1926c:	mov	sl, #32
   19270:	str	sl, [sp, #8]
   19274:	b	1935c <argp_error@@Base+0xff0>
   19278:	mov	r7, #0
   1927c:	ldr	r0, [r4]
   19280:	ldr	r3, [r0, #20]
   19284:	ldr	r2, [r0, #24]
   19288:	cmp	r3, r2
   1928c:	addcc	r2, r3, #1
   19290:	strcc	r2, [r0, #20]
   19294:	strbcc	sl, [r3]
   19298:	bcs	193c8 <argp_error@@Base+0x105c>
   1929c:	add	r7, r7, #1
   192a0:	cmp	r6, r7
   192a4:	bne	1927c <argp_error@@Base+0xf10>
   192a8:	str	r6, [r4, #20]
   192ac:	ldr	r8, [r4, #28]
   192b0:	sub	fp, r8, r5
   192b4:	mov	r2, fp
   192b8:	mov	r1, #10
   192bc:	mov	r0, r5
   192c0:	bl	11298 <memchr@plt>
   192c4:	mov	r6, r0
   192c8:	ldr	r3, [r4, #20]
   192cc:	cmp	r3, #0
   192d0:	movlt	r3, #0
   192d4:	strlt	r3, [r4, #20]
   192d8:	cmp	r6, #0
   192dc:	beq	193d4 <argp_error@@Base+0x1068>
   192e0:	ldr	r0, [r4, #20]
   192e4:	ldr	r9, [r4, #8]
   192e8:	sub	r3, r6, r5
   192ec:	add	r3, r3, r0
   192f0:	cmp	r3, r9
   192f4:	movlt	r3, #0
   192f8:	strlt	r3, [r4, #20]
   192fc:	addlt	r5, r6, #1
   19300:	blt	1935c <argp_error@@Base+0xff0>
   19304:	sub	r7, r9, #1
   19308:	ldr	r3, [r4, #12]
   1930c:	str	r3, [sp, #4]
   19310:	cmp	r3, #0
   19314:	bge	19400 <argp_error@@Base+0x1094>
   19318:	cmp	r8, r6
   1931c:	bls	19490 <argp_error@@Base+0x1124>
   19320:	sub	r0, r7, r0
   19324:	sub	r2, r8, r6
   19328:	mov	r1, r6
   1932c:	add	r0, r5, r0
   19330:	bl	110e8 <memmove@plt>
   19334:	ldr	r3, [r4, #20]
   19338:	sub	r7, r7, r3
   1933c:	add	r7, r5, r7
   19340:	sub	r6, r7, r6
   19344:	ldr	r3, [r4, #28]
   19348:	sub	r6, r3, r6
   1934c:	str	r6, [r4, #28]
   19350:	mov	r3, #0
   19354:	str	r3, [r4, #20]
   19358:	add	r5, r5, r9
   1935c:	ldr	r8, [r4, #28]
   19360:	cmp	r8, r5
   19364:	bls	194a8 <argp_error@@Base+0x113c>
   19368:	ldr	r3, [r4, #20]
   1936c:	cmp	r3, #0
   19370:	bne	192ac <argp_error@@Base+0xf40>
   19374:	ldr	r6, [r4, #4]
   19378:	cmp	r6, #0
   1937c:	beq	19754 <argp_error@@Base+0x13e8>
   19380:	add	r3, r8, r6
   19384:	ldr	r2, [r4, #32]
   19388:	cmp	r2, r3
   1938c:	bls	19278 <argp_error@@Base+0xf0c>
   19390:	add	r7, r5, r6
   19394:	sub	r2, r8, r5
   19398:	mov	r1, r5
   1939c:	mov	r0, r7
   193a0:	bl	110e8 <memmove@plt>
   193a4:	ldr	r3, [r4, #28]
   193a8:	add	r3, r3, r6
   193ac:	str	r3, [r4, #28]
   193b0:	mov	r2, r6
   193b4:	mov	r1, sl
   193b8:	mov	r0, r5
   193bc:	bl	11280 <memset@plt>
   193c0:	mov	r5, r7
   193c4:	b	192a8 <argp_error@@Base+0xf3c>
   193c8:	ldr	r1, [sp, #8]
   193cc:	bl	112a4 <__overflow@plt>
   193d0:	b	1929c <argp_error@@Base+0xf30>
   193d4:	ldr	r3, [r4, #20]
   193d8:	add	r3, fp, r3
   193dc:	ldr	r7, [r4, #8]
   193e0:	cmp	r3, r7
   193e4:	bcc	19488 <argp_error@@Base+0x111c>
   193e8:	sub	r7, r7, #1
   193ec:	ldr	r3, [r4, #12]
   193f0:	str	r3, [sp, #4]
   193f4:	cmp	r3, #0
   193f8:	blt	19490 <argp_error@@Base+0x1124>
   193fc:	mov	r6, r8
   19400:	ldr	r3, [r4, #20]
   19404:	rsb	r3, r3, #1
   19408:	add	r7, r3, r7
   1940c:	adds	r7, r5, r7
   19410:	bcs	1974c <argp_error@@Base+0x13e0>
   19414:	bl	11220 <__ctype_b_loc@plt>
   19418:	ldr	r0, [r0]
   1941c:	mov	r3, r7
   19420:	mov	r1, r3
   19424:	sub	r3, r3, #1
   19428:	ldrb	r2, [r1]
   1942c:	lsl	r2, r2, #1
   19430:	ldrh	r2, [r0, r2]
   19434:	tst	r2, #1
   19438:	bne	194d4 <argp_error@@Base+0x1168>
   1943c:	mov	r1, r3
   19440:	cmp	r3, r5
   19444:	bcs	19420 <argp_error@@Base+0x10b4>
   19448:	add	r9, r1, #1
   1944c:	cmp	r9, r5
   19450:	bhi	19510 <argp_error@@Base+0x11a4>
   19454:	cmp	r6, r7
   19458:	bhi	195ac <argp_error@@Base+0x1240>
   1945c:	cmp	r7, r6
   19460:	beq	195ec <argp_error@@Base+0x1280>
   19464:	bl	11220 <__ctype_b_loc@plt>
   19468:	ldr	r2, [r0]
   1946c:	mov	r9, r7
   19470:	ldrb	r3, [r9, #1]!
   19474:	lsl	r3, r3, #1
   19478:	ldrh	r3, [r2, r3]
   1947c:	tst	r3, #1
   19480:	bne	19470 <argp_error@@Base+0x1104>
   19484:	b	19514 <argp_error@@Base+0x11a8>
   19488:	str	r3, [r4, #20]
   1948c:	b	194a8 <argp_error@@Base+0x113c>
   19490:	ldr	r3, [r4, #20]
   19494:	add	r3, fp, r3
   19498:	str	r3, [r4, #20]
   1949c:	sub	r3, r7, r3
   194a0:	add	r8, r8, r3
   194a4:	str	r8, [r4, #28]
   194a8:	ldr	r3, [r4, #28]
   194ac:	ldr	r2, [r4, #24]
   194b0:	sub	r3, r3, r2
   194b4:	str	r3, [r4, #16]
   194b8:	add	sp, sp, #20
   194bc:	ldrd	r4, [sp]
   194c0:	ldrd	r6, [sp, #8]
   194c4:	ldrd	r8, [sp, #16]
   194c8:	ldrd	sl, [sp, #24]
   194cc:	add	sp, sp, #32
   194d0:	pop	{pc}		; (ldr pc, [sp], #4)
   194d4:	add	r9, r1, #1
   194d8:	cmp	r9, r5
   194dc:	bls	19454 <argp_error@@Base+0x10e8>
   194e0:	cmp	r5, r1
   194e4:	bhi	19510 <argp_error@@Base+0x11a4>
   194e8:	sub	ip, r5, #1
   194ec:	mov	r1, r3
   194f0:	cmp	r3, ip
   194f4:	beq	19510 <argp_error@@Base+0x11a4>
   194f8:	sub	r3, r3, #1
   194fc:	ldrb	r2, [r1]
   19500:	lsl	r2, r2, #1
   19504:	ldrh	r2, [r0, r2]
   19508:	tst	r2, #1
   1950c:	bne	194ec <argp_error@@Base+0x1180>
   19510:	add	r7, r1, #1
   19514:	add	r3, fp, #1
   19518:	add	r3, r5, r3
   1951c:	cmp	r9, r3
   19520:	beq	195fc <argp_error@@Base+0x1290>
   19524:	add	r3, r7, #1
   19528:	sub	r3, r9, r3
   1952c:	ldr	r2, [sp, #4]
   19530:	cmp	r3, r2
   19534:	bge	19610 <argp_error@@Base+0x12a4>
   19538:	cmp	r9, r8
   1953c:	bcs	19610 <argp_error@@Base+0x12a4>
   19540:	ldr	r3, [r4, #32]
   19544:	sub	r3, r3, r8
   19548:	ldr	r2, [sp, #4]
   1954c:	add	r2, r2, #1
   19550:	cmp	r3, r2
   19554:	bgt	196b8 <argp_error@@Base+0x134c>
   19558:	ldr	r0, [r4, #24]
   1955c:	cmp	r0, r7
   19560:	bcs	19574 <argp_error@@Base+0x1208>
   19564:	ldr	r3, [r4]
   19568:	sub	r2, r7, r0
   1956c:	mov	r1, #1
   19570:	bl	11154 <fwrite_unlocked@plt>
   19574:	ldr	r0, [r4]
   19578:	ldr	r3, [r0, #20]
   1957c:	ldr	r2, [r0, #24]
   19580:	cmp	r3, r2
   19584:	addcc	r2, r3, #1
   19588:	strcc	r2, [r0, #20]
   1958c:	movcc	r2, #10
   19590:	strbcc	r2, [r3]
   19594:	bcs	196f8 <argp_error@@Base+0x138c>
   19598:	ldr	r8, [r4, #24]
   1959c:	sub	r5, r5, r8
   195a0:	add	fp, fp, r5
   195a4:	mov	r5, r8
   195a8:	b	19620 <argp_error@@Base+0x12b4>
   195ac:	add	r9, r7, #1
   195b0:	str	r6, [sp, #12]
   195b4:	mov	r7, r9
   195b8:	cmp	r9, r6
   195bc:	beq	195e4 <argp_error@@Base+0x1278>
   195c0:	bl	11220 <__ctype_b_loc@plt>
   195c4:	add	r9, r9, #1
   195c8:	ldrb	r3, [r7]
   195cc:	ldr	r2, [r0]
   195d0:	lsl	r3, r3, #1
   195d4:	ldrh	r3, [r2, r3]
   195d8:	tst	r3, #1
   195dc:	beq	195b4 <argp_error@@Base+0x1248>
   195e0:	b	19464 <argp_error@@Base+0x10f8>
   195e4:	ldr	r6, [sp, #12]
   195e8:	b	1945c <argp_error@@Base+0x10f0>
   195ec:	mov	r3, #0
   195f0:	str	r3, [r4, #20]
   195f4:	add	r5, r6, #1
   195f8:	b	1935c <argp_error@@Base+0xff0>
   195fc:	ldr	r3, [r4, #32]
   19600:	sub	r3, r3, r7
   19604:	ldr	r2, [sp, #4]
   19608:	cmp	r3, r2
   1960c:	ble	19538 <argp_error@@Base+0x11cc>
   19610:	mov	r3, #10
   19614:	strb	r3, [r7], #1
   19618:	mov	r8, r5
   1961c:	mov	r5, r7
   19620:	ldr	r3, [r4, #12]
   19624:	sub	r2, r9, r5
   19628:	cmp	r2, r3
   1962c:	bge	19704 <argp_error@@Base+0x1398>
   19630:	add	r2, fp, #1
   19634:	add	r2, r8, r2
   19638:	cmp	r9, r2
   1963c:	bne	19650 <argp_error@@Base+0x12e4>
   19640:	ldr	r2, [r4, #32]
   19644:	sub	r2, r2, r9
   19648:	cmp	r3, r2
   1964c:	ble	19704 <argp_error@@Base+0x1398>
   19650:	cmp	r3, #0
   19654:	movgt	r6, #0
   19658:	ble	1968c <argp_error@@Base+0x1320>
   1965c:	ldr	r0, [r4]
   19660:	ldr	r3, [r0, #20]
   19664:	ldr	r2, [r0, #24]
   19668:	cmp	r3, r2
   1966c:	addcc	r2, r3, #1
   19670:	strcc	r2, [r0, #20]
   19674:	strbcc	sl, [r3]
   19678:	bcs	19728 <argp_error@@Base+0x13bc>
   1967c:	add	r6, r6, #1
   19680:	ldr	r3, [r4, #12]
   19684:	cmp	r3, r6
   19688:	bgt	1965c <argp_error@@Base+0x12f0>
   1968c:	cmp	r5, r9
   19690:	bcc	19734 <argp_error@@Base+0x13c8>
   19694:	sub	r9, r9, r8
   19698:	sub	fp, fp, r9
   1969c:	add	fp, r5, fp
   196a0:	str	fp, [r4, #28]
   196a4:	ldr	r3, [r4, #12]
   196a8:	cmp	r3, #0
   196ac:	mvneq	r3, #0
   196b0:	str	r3, [r4, #20]
   196b4:	b	1935c <argp_error@@Base+0xff0>
   196b8:	sub	r8, r8, r9
   196bc:	mov	r0, r2
   196c0:	mov	r2, r8
   196c4:	mov	r1, r9
   196c8:	add	r0, r7, r0
   196cc:	bl	110e8 <memmove@plt>
   196d0:	ldr	r9, [r4, #12]
   196d4:	add	r9, r9, #1
   196d8:	add	r9, r7, r9
   196dc:	add	r8, r9, r8
   196e0:	sub	fp, r8, r5
   196e4:	mov	r3, #10
   196e8:	strb	r3, [r7], #1
   196ec:	mov	r8, r5
   196f0:	mov	r5, r7
   196f4:	b	19620 <argp_error@@Base+0x12b4>
   196f8:	mov	r1, #10
   196fc:	bl	112a4 <__overflow@plt>
   19700:	b	19598 <argp_error@@Base+0x122c>
   19704:	cmp	r3, #0
   19708:	movgt	r3, #0
   1970c:	ble	1968c <argp_error@@Base+0x1320>
   19710:	strb	sl, [r5], #1
   19714:	add	r3, r3, #1
   19718:	ldr	r2, [r4, #12]
   1971c:	cmp	r2, r3
   19720:	bgt	19710 <argp_error@@Base+0x13a4>
   19724:	b	1968c <argp_error@@Base+0x1320>
   19728:	ldr	r1, [sp, #8]
   1972c:	bl	112a4 <__overflow@plt>
   19730:	b	1967c <argp_error@@Base+0x1310>
   19734:	add	r2, r8, fp
   19738:	sub	r2, r2, r9
   1973c:	mov	r1, r9
   19740:	mov	r0, r5
   19744:	bl	110e8 <memmove@plt>
   19748:	b	19694 <argp_error@@Base+0x1328>
   1974c:	mov	r1, r7
   19750:	b	19448 <argp_error@@Base+0x10dc>
   19754:	sub	fp, r8, r5
   19758:	mov	r2, fp
   1975c:	mov	r1, #10
   19760:	mov	r0, r5
   19764:	bl	11298 <memchr@plt>
   19768:	mov	r6, r0
   1976c:	b	192d8 <argp_error@@Base+0xf6c>
   19770:	str	r4, [sp, #-8]!
   19774:	str	lr, [sp, #4]
   19778:	mov	r4, r0
   1977c:	bl	19244 <argp_error@@Base+0xed8>
   19780:	ldr	r2, [r4, #28]
   19784:	ldr	r0, [r4, #24]
   19788:	cmp	r2, r0
   1978c:	bls	197a0 <argp_error@@Base+0x1434>
   19790:	ldr	r3, [r4]
   19794:	sub	r2, r2, r0
   19798:	mov	r1, #1
   1979c:	bl	11154 <fwrite_unlocked@plt>
   197a0:	ldr	r0, [r4, #24]
   197a4:	bl	140ac <argp_parse@@Base+0xcd8>
   197a8:	mov	r0, r4
   197ac:	bl	140ac <argp_parse@@Base+0xcd8>
   197b0:	ldr	r4, [sp]
   197b4:	add	sp, sp, #4
   197b8:	pop	{pc}		; (ldr pc, [sp], #4)
   197bc:	ldr	r3, [r0, #32]
   197c0:	ldr	r2, [r0, #28]
   197c4:	sub	r3, r3, r2
   197c8:	cmp	r3, r1
   197cc:	bcc	197d8 <argp_error@@Base+0x146c>
   197d0:	mov	r0, #1
   197d4:	bx	lr
   197d8:	strd	r4, [sp, #-16]!
   197dc:	str	r6, [sp, #8]
   197e0:	str	lr, [sp, #12]
   197e4:	mov	r5, r1
   197e8:	mov	r4, r0
   197ec:	bl	19244 <argp_error@@Base+0xed8>
   197f0:	ldr	r0, [r4, #24]
   197f4:	ldr	r2, [r4, #28]
   197f8:	ldr	r3, [r4]
   197fc:	sub	r2, r2, r0
   19800:	mov	r1, #1
   19804:	bl	11154 <fwrite_unlocked@plt>
   19808:	ldr	r2, [r4, #28]
   1980c:	ldr	r3, [r4, #24]
   19810:	sub	r1, r2, r3
   19814:	cmp	r1, r0
   19818:	bne	19858 <argp_error@@Base+0x14ec>
   1981c:	str	r3, [r4, #28]
   19820:	mov	r2, #0
   19824:	str	r2, [r4, #16]
   19828:	ldr	r1, [r4, #32]
   1982c:	sub	r1, r1, r3
   19830:	cmp	r1, r5
   19834:	movcs	r0, #1
   19838:	bcs	19880 <argp_error@@Base+0x1514>
   1983c:	adds	r5, r1, r5
   19840:	bcc	19890 <argp_error@@Base+0x1524>
   19844:	bl	1125c <__errno_location@plt>
   19848:	mov	r3, #12
   1984c:	str	r3, [r0]
   19850:	mov	r0, #0
   19854:	b	19880 <argp_error@@Base+0x1514>
   19858:	sub	r2, r2, r0
   1985c:	str	r2, [r4, #28]
   19860:	ldr	r1, [r4, #16]
   19864:	sub	r1, r1, r0
   19868:	str	r1, [r4, #16]
   1986c:	sub	r2, r2, r3
   19870:	add	r1, r3, r0
   19874:	mov	r0, r3
   19878:	bl	110e8 <memmove@plt>
   1987c:	mov	r0, #0
   19880:	ldrd	r4, [sp]
   19884:	ldr	r6, [sp, #8]
   19888:	add	sp, sp, #12
   1988c:	pop	{pc}		; (ldr pc, [sp], #4)
   19890:	mov	r1, r5
   19894:	mov	r0, r3
   19898:	bl	15024 <_obstack_memory_used@@Base+0xac8>
   1989c:	cmp	r0, #0
   198a0:	beq	19844 <argp_error@@Base+0x14d8>
   198a4:	str	r0, [r4, #24]
   198a8:	add	r5, r0, r5
   198ac:	str	r5, [r4, #32]
   198b0:	str	r0, [r4, #28]
   198b4:	mov	r0, #1
   198b8:	b	19880 <argp_error@@Base+0x1514>
   198bc:	push	{r1, r2, r3}
   198c0:	strd	r4, [sp, #-16]!
   198c4:	str	r6, [sp, #8]
   198c8:	str	lr, [sp, #12]
   198cc:	sub	sp, sp, #12
   198d0:	mov	r5, r0
   198d4:	mov	r1, #150	; 0x96
   198d8:	add	r6, sp, #32
   198dc:	mov	r0, r5
   198e0:	bl	197bc <argp_error@@Base+0x1450>
   198e4:	cmp	r0, #0
   198e8:	beq	1991c <argp_error@@Base+0x15b0>
   198ec:	str	r6, [sp, #4]
   198f0:	ldr	r0, [r5, #28]
   198f4:	ldr	r4, [r5, #32]
   198f8:	sub	r4, r4, r0
   198fc:	mov	r3, r6
   19900:	ldr	r2, [sp, #28]
   19904:	mov	r1, r4
   19908:	bl	112f8 <vsnprintf@plt>
   1990c:	cmp	r0, r4
   19910:	bcc	1993c <argp_error@@Base+0x15d0>
   19914:	add	r1, r0, #1
   19918:	b	198dc <argp_error@@Base+0x1570>
   1991c:	mvn	r0, #0
   19920:	add	sp, sp, #12
   19924:	ldrd	r4, [sp]
   19928:	ldr	r6, [sp, #8]
   1992c:	ldr	lr, [sp, #12]
   19930:	add	sp, sp, #16
   19934:	add	sp, sp, #12
   19938:	bx	lr
   1993c:	ldr	r2, [r5, #28]
   19940:	add	r3, r2, r0
   19944:	str	r3, [r5, #28]
   19948:	b	19920 <argp_error@@Base+0x15b4>
   1994c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19950:	mov	r7, r0
   19954:	ldr	r6, [pc, #72]	; 199a4 <argp_error@@Base+0x1638>
   19958:	ldr	r5, [pc, #72]	; 199a8 <argp_error@@Base+0x163c>
   1995c:	add	r6, pc, r6
   19960:	add	r5, pc, r5
   19964:	sub	r6, r6, r5
   19968:	mov	r8, r1
   1996c:	mov	r9, r2
   19970:	bl	11074 <fdopen@plt-0x20>
   19974:	asrs	r6, r6, #2
   19978:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1997c:	mov	r4, #0
   19980:	add	r4, r4, #1
   19984:	ldr	r3, [r5], #4
   19988:	mov	r2, r9
   1998c:	mov	r1, r8
   19990:	mov	r0, r7
   19994:	blx	r3
   19998:	cmp	r6, r4
   1999c:	bne	19980 <argp_error@@Base+0x1614>
   199a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   199a4:			; <UNDEFINED> instruction: 0x000135b0
   199a8:	andeq	r3, r1, r8, lsr #11
   199ac:	bx	lr

Disassembly of section .fini:

000199b0 <.fini>:
   199b0:	push	{r3, lr}
   199b4:	pop	{r3, pc}
