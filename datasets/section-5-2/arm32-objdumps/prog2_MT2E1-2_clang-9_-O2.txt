
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a0 <.init>:
   110a0:	push	{r3, lr}
   110a4:	bl	111ec <_start@@Base+0x3c>
   110a8:	pop	{r3, pc}

Disassembly of section .plt:

000110ac <calloc@plt-0x14>:
   110ac:	push	{lr}		; (str lr, [sp, #-4]!)
   110b0:	ldr	lr, [pc, #4]	; 110bc <calloc@plt-0x4>
   110b4:	add	lr, pc, lr
   110b8:	ldr	pc, [lr, #8]!
   110bc:	andeq	r1, r1, r4, asr #30

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3908]!	; 0xf44

000110cc <strcmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110d8 <strtol@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3892]!	; 0xf34

000110e4 <printf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f0 <__isoc99_fscanf@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3876]!	; 0xf24

000110fc <fopen@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3868]!	; 0xf1c

00011108 <free@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3860]!	; 0xf14

00011114 <realloc@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011120 <strcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #69632	; 0x11000
   11128:	ldr	pc, [ip, #3844]!	; 0xf04

0001112c <puts@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #69632	; 0x11000
   11134:	ldr	pc, [ip, #3836]!	; 0xefc

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #69632	; 0x11000
   11140:	ldr	pc, [ip, #3828]!	; 0xef4

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #69632	; 0x11000
   1114c:	ldr	pc, [ip, #3820]!	; 0xeec

00011150 <__gmon_start__@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #69632	; 0x11000
   11158:	ldr	pc, [ip, #3812]!	; 0xee4

0001115c <strlen@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #69632	; 0x11000
   11164:	ldr	pc, [ip, #3804]!	; 0xedc

00011168 <setvbuf@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #69632	; 0x11000
   11170:	ldr	pc, [ip, #3796]!	; 0xed4

00011174 <memset@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #69632	; 0x11000
   1117c:	ldr	pc, [ip, #3788]!	; 0xecc

00011180 <putchar@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #69632	; 0x11000
   11188:	ldr	pc, [ip, #3780]!	; 0xec4

0001118c <fclose@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #69632	; 0x11000
   11194:	ldr	pc, [ip, #3772]!	; 0xebc

00011198 <getline@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #69632	; 0x11000
   111a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #69632	; 0x11000
   111ac:	ldr	pc, [ip, #3756]!	; 0xeac

Disassembly of section .text:

000111b0 <_start@@Base>:
   111b0:	mov	fp, #0
   111b4:	mov	lr, #0
   111b8:	pop	{r1}		; (ldr r1, [sp], #4)
   111bc:	mov	r2, sp
   111c0:	push	{r2}		; (str r2, [sp, #-4]!)
   111c4:	push	{r0}		; (str r0, [sp, #-4]!)
   111c8:	ldr	ip, [pc, #16]	; 111e0 <_start@@Base+0x30>
   111cc:	push	{ip}		; (str ip, [sp, #-4]!)
   111d0:	ldr	r0, [pc, #12]	; 111e4 <_start@@Base+0x34>
   111d4:	ldr	r3, [pc, #12]	; 111e8 <_start@@Base+0x38>
   111d8:	bl	11144 <__libc_start_main@plt>
   111dc:	bl	111a4 <abort@plt>
   111e0:	andeq	r2, r1, r0, lsr #26
   111e4:	andeq	r1, r1, ip, asr #11
   111e8:	andeq	r2, r1, r0, asr #25
   111ec:	ldr	r3, [pc, #20]	; 11208 <_start@@Base+0x58>
   111f0:	ldr	r2, [pc, #20]	; 1120c <_start@@Base+0x5c>
   111f4:	add	r3, pc, r3
   111f8:	ldr	r2, [r3, r2]
   111fc:	cmp	r2, #0
   11200:	bxeq	lr
   11204:	b	11150 <__gmon_start__@plt>
   11208:	andeq	r1, r1, r4, lsl #28
   1120c:	andeq	r0, r0, ip, asr r0
   11210:	ldr	r0, [pc, #24]	; 11230 <_start@@Base+0x80>
   11214:	ldr	r3, [pc, #24]	; 11234 <_start@@Base+0x84>
   11218:	cmp	r3, r0
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0x88>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, ip, rrx
   11234:	andeq	r3, r2, ip, rrx
   11238:	andeq	r0, r0, r0
   1123c:	ldr	r0, [pc, #36]	; 11268 <_start@@Base+0xb8>
   11240:	ldr	r1, [pc, #36]	; 1126c <_start@@Base+0xbc>
   11244:	sub	r1, r1, r0
   11248:	asr	r1, r1, #2
   1124c:	add	r1, r1, r1, lsr #31
   11250:	asrs	r1, r1, #1
   11254:	bxeq	lr
   11258:	ldr	r3, [pc, #16]	; 11270 <_start@@Base+0xc0>
   1125c:	cmp	r3, #0
   11260:	bxeq	lr
   11264:	bx	r3
   11268:	andeq	r3, r2, ip, rrx
   1126c:	andeq	r3, r2, ip, rrx
   11270:	andeq	r0, r0, r0
   11274:	push	{r4, lr}
   11278:	ldr	r4, [pc, #24]	; 11298 <_start@@Base+0xe8>
   1127c:	ldrb	r3, [r4]
   11280:	cmp	r3, #0
   11284:	popne	{r4, pc}
   11288:	bl	11210 <_start@@Base+0x60>
   1128c:	mov	r3, #1
   11290:	strb	r3, [r4]
   11294:	pop	{r4, pc}
   11298:	andeq	r3, r2, ip, rrx
   1129c:	b	1123c <_start@@Base+0x8c>

000112a0 <proximas_n_chegadas@@Base>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a4:	add	fp, sp, #28
   112a8:	sub	sp, sp, #4
   112ac:	mov	r5, r0
   112b0:	ldr	r0, [r2, #8]
   112b4:	ldr	r6, [r2]
   112b8:	mov	r8, r3
   112bc:	mov	sl, r2
   112c0:	mov	r4, r1
   112c4:	lsl	r0, r0, #2
   112c8:	bl	11138 <malloc@plt>
   112cc:	mov	r9, r0
   112d0:	cmp	r6, #0
   112d4:	beq	112fc <proximas_n_chegadas@@Base+0x5c>
   112d8:	mov	r7, r9
   112dc:	mov	r0, #200	; 0xc8
   112e0:	bl	11138 <malloc@plt>
   112e4:	str	r0, [r7], #4
   112e8:	ldr	r1, [r6]
   112ec:	bl	11120 <strcpy@plt>
   112f0:	ldr	r6, [r6, #4]
   112f4:	cmp	r6, #0
   112f8:	bne	112dc <proximas_n_chegadas@@Base+0x3c>
   112fc:	ldr	r0, [r5, #8]
   11300:	bl	1207c <heap_nova@@Base>
   11304:	ldr	r6, [r5]
   11308:	mov	r7, r0
   1130c:	cmp	r6, #0
   11310:	beq	11358 <proximas_n_chegadas@@Base+0xb8>
   11314:	ldr	r4, [r4]
   11318:	mov	r1, #0
   1131c:	mov	r2, #10
   11320:	ldr	r0, [r4], #4
   11324:	bl	110d8 <strtol@plt>
   11328:	ldr	r5, [r9, r0, lsl #2]
   1132c:	ldr	r0, [r6]
   11330:	mov	r1, #0
   11334:	mov	r2, #10
   11338:	bl	110d8 <strtol@plt>
   1133c:	mov	r2, r0
   11340:	mov	r0, r7
   11344:	mov	r1, r5
   11348:	bl	121b8 <heap_insere@@Base>
   1134c:	ldr	r6, [r6, #4]
   11350:	cmp	r6, #0
   11354:	bne	11314 <proximas_n_chegadas@@Base+0x74>
   11358:	ldr	r0, [sl, #8]
   1135c:	cmp	r0, #1
   11360:	blt	11380 <proximas_n_chegadas@@Base+0xe0>
   11364:	mov	r4, #0
   11368:	ldr	r0, [r9, r4, lsl #2]
   1136c:	bl	11108 <free@plt>
   11370:	ldr	r0, [sl, #8]
   11374:	add	r4, r4, #1
   11378:	cmp	r4, r0
   1137c:	blt	11368 <proximas_n_chegadas@@Base+0xc8>
   11380:	mov	r0, r9
   11384:	bl	11108 <free@plt>
   11388:	cmp	r8, #1
   1138c:	blt	113cc <proximas_n_chegadas@@Base+0x12c>
   11390:	ldr	r5, [pc, #72]	; 113e0 <proximas_n_chegadas@@Base+0x140>
   11394:	mov	r4, #0
   11398:	add	r5, pc, r5
   1139c:	mov	r0, r7
   113a0:	bl	122d4 <heap_remove@@Base>
   113a4:	mov	r6, r0
   113a8:	add	r4, r4, #1
   113ac:	mov	r0, r5
   113b0:	mov	r1, r4
   113b4:	mov	r2, r6
   113b8:	bl	110e4 <printf@plt>
   113bc:	mov	r0, r6
   113c0:	bl	11108 <free@plt>
   113c4:	cmp	r8, r4
   113c8:	bne	1139c <proximas_n_chegadas@@Base+0xfc>
   113cc:	mov	r0, r7
   113d0:	bl	120d8 <heap_apaga@@Base>
   113d4:	mov	r0, #1
   113d8:	sub	sp, fp, #28
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	muleq	r0, r0, r9

000113e4 <pesquisa_destinos@@Base>:
   113e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113e8:	add	fp, sp, #28
   113ec:	sub	sp, sp, #4
   113f0:	mov	r7, r2
   113f4:	mov	sl, r1
   113f8:	mov	r8, r0
   113fc:	bl	12514 <lista_nova@@Base>
   11400:	ldr	r4, [sl]
   11404:	mov	r9, r0
   11408:	mov	r6, #0
   1140c:	cmp	r4, #0
   11410:	beq	11438 <pesquisa_destinos@@Base+0x54>
   11414:	ldr	r0, [r4]
   11418:	mov	r1, r7
   1141c:	bl	110cc <strcmp@plt>
   11420:	cmp	r0, #0
   11424:	beq	11438 <pesquisa_destinos@@Base+0x54>
   11428:	ldr	r4, [r4, #4]
   1142c:	add	r6, r6, #1
   11430:	cmp	r4, #0
   11434:	bne	11414 <pesquisa_destinos@@Base+0x30>
   11438:	mov	r0, r8
   1143c:	mov	r1, r6
   11440:	bl	11bb8 <v_sucessores@@Base>
   11444:	mov	r6, r0
   11448:	ldr	r0, [r0]
   1144c:	cmp	r0, #1
   11450:	blt	114b8 <pesquisa_destinos@@Base+0xd4>
   11454:	mov	r7, #0
   11458:	b	1147c <pesquisa_destinos@@Base+0x98>
   1145c:	ldr	r1, [r4]
   11460:	mov	r0, r9
   11464:	mov	r2, #0
   11468:	bl	125b8 <lista_insere@@Base>
   1146c:	ldr	r0, [r6]
   11470:	add	r7, r7, #1
   11474:	cmp	r7, r0
   11478:	bge	114b8 <pesquisa_destinos@@Base+0xd4>
   1147c:	ldr	r4, [sl]
   11480:	mov	r0, r6
   11484:	mov	r1, r7
   11488:	bl	12990 <vetor_elemento@@Base>
   1148c:	cmp	r0, #1
   11490:	blt	1145c <pesquisa_destinos@@Base+0x78>
   11494:	mov	r5, #0
   11498:	ldr	r4, [r4, #4]
   1149c:	mov	r0, r6
   114a0:	mov	r1, r7
   114a4:	bl	12990 <vetor_elemento@@Base>
   114a8:	add	r5, r5, #1
   114ac:	cmp	r5, r0
   114b0:	blt	11498 <pesquisa_destinos@@Base+0xb4>
   114b4:	b	1145c <pesquisa_destinos@@Base+0x78>
   114b8:	mov	r0, r6
   114bc:	bl	12924 <vetor_apaga@@Base>
   114c0:	mov	r0, r9
   114c4:	sub	sp, fp, #28
   114c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114cc <carrega_rotas@@Base>:
   114cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114d0:	add	fp, sp, #24
   114d4:	sub	sp, sp, #8
   114d8:	cmp	r1, #0
   114dc:	beq	115a8 <carrega_rotas@@Base+0xdc>
   114e0:	mov	r4, r1
   114e4:	ldr	r1, [pc, #204]	; 115b8 <carrega_rotas@@Base+0xec>
   114e8:	mov	r6, r0
   114ec:	mov	r0, r4
   114f0:	add	r1, pc, r1
   114f4:	bl	110fc <fopen@plt>
   114f8:	cmp	r0, #0
   114fc:	beq	11588 <carrega_rotas@@Base+0xbc>
   11500:	mov	r5, r0
   11504:	mov	r0, r6
   11508:	bl	12588 <lista_tamanho@@Base>
   1150c:	mov	r1, #0
   11510:	bl	11880 <grafo_novo@@Base>
   11514:	cmp	r0, #0
   11518:	beq	1159c <carrega_rotas@@Base+0xd0>
   1151c:	ldr	r1, [pc, #156]	; 115c0 <carrega_rotas@@Base+0xf4>
   11520:	mov	r4, r0
   11524:	add	r2, sp, #4
   11528:	mov	r3, sp
   1152c:	mov	r0, r5
   11530:	add	r1, pc, r1
   11534:	bl	110f0 <__isoc99_fscanf@plt>
   11538:	cmp	r0, #2
   1153c:	bne	1157c <carrega_rotas@@Base+0xb0>
   11540:	ldr	r8, [pc, #124]	; 115c4 <carrega_rotas@@Base+0xf8>
   11544:	add	r7, sp, #4
   11548:	mov	r6, sp
   1154c:	add	r8, pc, r8
   11550:	ldr	r2, [sp]
   11554:	ldr	r1, [sp, #4]
   11558:	mov	r0, r4
   1155c:	bl	1196c <grafo_adiciona@@Base>
   11560:	mov	r0, r5
   11564:	mov	r1, r8
   11568:	mov	r2, r7
   1156c:	mov	r3, r6
   11570:	bl	110f0 <__isoc99_fscanf@plt>
   11574:	cmp	r0, #2
   11578:	beq	11550 <carrega_rotas@@Base+0x84>
   1157c:	mov	r0, r5
   11580:	bl	1118c <fclose@plt>
   11584:	b	115ac <carrega_rotas@@Base+0xe0>
   11588:	ldr	r0, [pc, #44]	; 115bc <carrega_rotas@@Base+0xf0>
   1158c:	mov	r1, r4
   11590:	add	r0, pc, r0
   11594:	bl	110e4 <printf@plt>
   11598:	b	115a8 <carrega_rotas@@Base+0xdc>
   1159c:	ldr	r0, [pc, #36]	; 115c8 <carrega_rotas@@Base+0xfc>
   115a0:	add	r0, pc, r0
   115a4:	bl	1112c <puts@plt>
   115a8:	mov	r4, #0
   115ac:	mov	r0, r4
   115b0:	sub	sp, fp, #24
   115b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115b8:	andeq	r1, r0, r2, asr #16
   115bc:	andeq	r1, r0, r4, lsr #15
   115c0:	andeq	r1, r0, r5, lsr #16
   115c4:	andeq	r1, r0, r9, lsl #16
   115c8:	andeq	r1, r0, sp, lsr r8

000115cc <main@@Base>:
   115cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115d0:	add	fp, sp, #28
   115d4:	sub	sp, sp, #28
   115d8:	ldr	r0, [pc, #568]	; 11818 <main@@Base+0x24c>
   115dc:	mov	r1, #0
   115e0:	mov	r2, #2
   115e4:	mov	r3, #0
   115e8:	mov	r8, #0
   115ec:	ldr	r0, [pc, r0]
   115f0:	ldr	r0, [r0]
   115f4:	bl	11168 <setvbuf@plt>
   115f8:	ldr	r0, [pc, #540]	; 1181c <main@@Base+0x250>
   115fc:	ldr	r1, [pc, #540]	; 11820 <main@@Base+0x254>
   11600:	add	r0, pc, r0
   11604:	add	r1, pc, r1
   11608:	bl	110fc <fopen@plt>
   1160c:	mov	r5, r0
   11610:	bl	12514 <lista_nova@@Base>
   11614:	mov	r9, r0
   11618:	add	r0, sp, #24
   1161c:	add	r1, sp, #20
   11620:	mov	r2, r5
   11624:	str	r8, [sp, #24]
   11628:	str	r8, [sp, #20]
   1162c:	bl	11198 <getline@plt>
   11630:	ldr	r4, [sp, #24]
   11634:	cmn	r0, #1
   11638:	beq	11680 <main@@Base+0xb4>
   1163c:	add	r6, sp, #24
   11640:	add	r7, sp, #20
   11644:	mov	r0, r4
   11648:	bl	1115c <strlen@plt>
   1164c:	add	r0, r0, r4
   11650:	mov	r2, #0
   11654:	strb	r8, [r0, #-1]
   11658:	mov	r0, r9
   1165c:	ldr	r1, [sp, #24]
   11660:	bl	125b8 <lista_insere@@Base>
   11664:	mov	r0, r6
   11668:	mov	r1, r7
   1166c:	mov	r2, r5
   11670:	bl	11198 <getline@plt>
   11674:	ldr	r4, [sp, #24]
   11678:	cmn	r0, #1
   1167c:	bne	11644 <main@@Base+0x78>
   11680:	mov	r0, r4
   11684:	bl	11108 <free@plt>
   11688:	mov	r0, r5
   1168c:	bl	1118c <fclose@plt>
   11690:	ldr	r1, [pc, #396]	; 11824 <main@@Base+0x258>
   11694:	mov	r0, r9
   11698:	add	r1, pc, r1
   1169c:	bl	114cc <carrega_rotas@@Base>
   116a0:	str	r0, [sp]
   116a4:	ldr	r0, [pc, #380]	; 11828 <main@@Base+0x25c>
   116a8:	add	r0, pc, r0
   116ac:	bl	1112c <puts@plt>
   116b0:	ldr	r0, [pc, #372]	; 1182c <main@@Base+0x260>
   116b4:	ldr	r1, [pc, #372]	; 11830 <main@@Base+0x264>
   116b8:	add	r0, pc, r0
   116bc:	add	r1, pc, r1
   116c0:	bl	110fc <fopen@plt>
   116c4:	mov	sl, r0
   116c8:	bl	12514 <lista_nova@@Base>
   116cc:	mov	r7, r0
   116d0:	bl	12514 <lista_nova@@Base>
   116d4:	ldr	r1, [pc, #344]	; 11834 <main@@Base+0x268>
   116d8:	mov	r5, r0
   116dc:	add	r2, sp, #15
   116e0:	add	r3, sp, #5
   116e4:	mov	r0, sl
   116e8:	add	r1, pc, r1
   116ec:	bl	110f0 <__isoc99_fscanf@plt>
   116f0:	cmp	r0, #2
   116f4:	bne	11744 <main@@Base+0x178>
   116f8:	ldr	r8, [pc, #312]	; 11838 <main@@Base+0x26c>
   116fc:	add	r4, sp, #15
   11700:	add	r6, sp, #5
   11704:	add	r8, pc, r8
   11708:	mov	r0, r7
   1170c:	mov	r1, r4
   11710:	mov	r2, #0
   11714:	bl	125b8 <lista_insere@@Base>
   11718:	mov	r0, r5
   1171c:	mov	r1, r6
   11720:	mov	r2, #0
   11724:	bl	125b8 <lista_insere@@Base>
   11728:	mov	r0, sl
   1172c:	mov	r1, r8
   11730:	mov	r2, r4
   11734:	mov	r3, r6
   11738:	bl	110f0 <__isoc99_fscanf@plt>
   1173c:	cmp	r0, #2
   11740:	beq	11708 <main@@Base+0x13c>
   11744:	mov	r0, r7
   11748:	mov	r1, r5
   1174c:	mov	r2, r9
   11750:	mov	r3, #5
   11754:	bl	112a0 <proximas_n_chegadas@@Base>
   11758:	mov	r0, r7
   1175c:	bl	12540 <lista_apaga@@Base>
   11760:	mov	r0, r5
   11764:	bl	12540 <lista_apaga@@Base>
   11768:	mov	r0, sl
   1176c:	bl	1118c <fclose@plt>
   11770:	ldr	r0, [pc, #196]	; 1183c <main@@Base+0x270>
   11774:	add	r0, pc, r0
   11778:	bl	1112c <puts@plt>
   1177c:	ldr	r2, [pc, #188]	; 11840 <main@@Base+0x274>
   11780:	ldr	r6, [sp]
   11784:	mov	r1, r9
   11788:	add	r2, pc, r2
   1178c:	mov	r0, r6
   11790:	bl	113e4 <pesquisa_destinos@@Base>
   11794:	cmp	r0, #0
   11798:	beq	117e8 <main@@Base+0x21c>
   1179c:	mov	r5, r0
   117a0:	bl	12588 <lista_tamanho@@Base>
   117a4:	mov	r2, r0
   117a8:	ldr	r0, [pc, #156]	; 1184c <main@@Base+0x280>
   117ac:	ldr	r1, [pc, #156]	; 11850 <main@@Base+0x284>
   117b0:	add	r0, pc, r0
   117b4:	add	r1, pc, r1
   117b8:	bl	110e4 <printf@plt>
   117bc:	ldr	r4, [r5]
   117c0:	cmp	r4, #0
   117c4:	beq	117dc <main@@Base+0x210>
   117c8:	ldr	r0, [r4]
   117cc:	bl	1112c <puts@plt>
   117d0:	ldr	r4, [r4, #4]
   117d4:	cmp	r4, #0
   117d8:	bne	117c8 <main@@Base+0x1fc>
   117dc:	mov	r0, r5
   117e0:	bl	12540 <lista_apaga@@Base>
   117e4:	b	117fc <main@@Base+0x230>
   117e8:	ldr	r0, [pc, #84]	; 11844 <main@@Base+0x278>
   117ec:	ldr	r1, [pc, #84]	; 11848 <main@@Base+0x27c>
   117f0:	add	r0, pc, r0
   117f4:	add	r1, pc, r1
   117f8:	bl	110e4 <printf@plt>
   117fc:	mov	r0, r6
   11800:	bl	118e0 <grafo_apaga@@Base>
   11804:	mov	r0, r9
   11808:	bl	12540 <lista_apaga@@Base>
   1180c:	mov	r0, #0
   11810:	sub	sp, fp, #28
   11814:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11818:	andeq	r1, r1, ip, ror #20
   1181c:	andeq	r1, r0, fp, asr r7
   11820:	andeq	r1, r0, lr, lsr #14
   11824:	ldrdeq	r1, [r0], -r2
   11828:	andeq	r1, r0, lr, asr #14
   1182c:			; <UNDEFINED> instruction: 0x000016bc
   11830:	andeq	r1, r0, r6, ror r6
   11834:	muleq	r0, r9, r6
   11838:	andeq	r1, r0, sp, ror r6
   1183c:	muleq	r0, r3, r6
   11840:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11844:	andeq	r1, r0, r2, lsr #11
   11848:	muleq	r0, r3, r5
   1184c:	andeq	r1, r0, r7, lsl #12
   11850:	ldrdeq	r1, [r0], -r3

00011854 <cria_no@@Base>:
   11854:	push	{r4, sl, fp, lr}
   11858:	add	fp, sp, #8
   1185c:	mov	r4, r0
   11860:	mov	r0, #8
   11864:	bl	11138 <malloc@plt>
   11868:	cmp	r0, #0
   1186c:	moveq	r0, #0
   11870:	movne	r1, #0
   11874:	strne	r4, [r0]
   11878:	strne	r1, [r0, #4]
   1187c:	pop	{r4, sl, fp, pc}

00011880 <grafo_novo@@Base>:
   11880:	push	{r4, r5, r6, sl, fp, lr}
   11884:	add	fp, sp, #16
   11888:	mov	r5, r0
   1188c:	mov	r0, #12
   11890:	mov	r6, r1
   11894:	bl	11138 <malloc@plt>
   11898:	cmp	r0, #0
   1189c:	beq	118d4 <grafo_novo@@Base+0x54>
   118a0:	str	r6, [r0]
   118a4:	mov	r4, r0
   118a8:	str	r5, [r0, #4]
   118ac:	mov	r0, r5
   118b0:	mov	r1, #8
   118b4:	bl	110c0 <calloc@plt>
   118b8:	cmp	r0, #0
   118bc:	str	r0, [r4, #8]
   118c0:	beq	118cc <grafo_novo@@Base+0x4c>
   118c4:	mov	r0, r4
   118c8:	pop	{r4, r5, r6, sl, fp, pc}
   118cc:	mov	r0, r4
   118d0:	bl	11108 <free@plt>
   118d4:	mov	r4, #0
   118d8:	mov	r0, r4
   118dc:	pop	{r4, r5, r6, sl, fp, pc}

000118e0 <grafo_apaga@@Base>:
   118e0:	cmp	r0, #0
   118e4:	bxeq	lr
   118e8:	push	{r4, r5, fp, lr}
   118ec:	add	fp, sp, #8
   118f0:	mov	r4, r0
   118f4:	ldr	r0, [r0, #8]
   118f8:	cmp	r0, #0
   118fc:	beq	11960 <grafo_apaga@@Base+0x80>
   11900:	ldr	r2, [r4, #4]
   11904:	cmp	r2, #1
   11908:	blt	1195c <grafo_apaga@@Base+0x7c>
   1190c:	mov	r5, #0
   11910:	b	11920 <grafo_apaga@@Base+0x40>
   11914:	add	r5, r5, #1
   11918:	cmp	r5, r2
   1191c:	bge	1195c <grafo_apaga@@Base+0x7c>
   11920:	add	r3, r0, r5, lsl #3
   11924:	ldr	r1, [r3, #4]!
   11928:	cmp	r1, #0
   1192c:	beq	11914 <grafo_apaga@@Base+0x34>
   11930:	ldr	r0, [r1, #4]
   11934:	str	r0, [r3]
   11938:	mov	r0, r1
   1193c:	bl	11108 <free@plt>
   11940:	ldr	r0, [r4, #8]
   11944:	add	r3, r0, r5, lsl #3
   11948:	ldr	r1, [r3, #4]!
   1194c:	cmp	r1, #0
   11950:	bne	11930 <grafo_apaga@@Base+0x50>
   11954:	ldr	r2, [r4, #4]
   11958:	b	11914 <grafo_apaga@@Base+0x34>
   1195c:	bl	11108 <free@plt>
   11960:	mov	r0, r4
   11964:	pop	{r4, r5, fp, lr}
   11968:	b	11108 <free@plt>

0001196c <grafo_adiciona@@Base>:
   1196c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11970:	add	fp, sp, #24
   11974:	cmp	r0, #0
   11978:	beq	11a0c <grafo_adiciona@@Base+0xa0>
   1197c:	ldr	r8, [r0, #8]
   11980:	mov	r6, r0
   11984:	mov	r4, r2
   11988:	mov	r5, r1
   1198c:	add	r7, r8, r1, lsl #3
   11990:	ldr	r0, [r7, #4]!
   11994:	cmp	r0, #0
   11998:	beq	119b4 <grafo_adiciona@@Base+0x48>
   1199c:	ldr	r1, [r0]
   119a0:	cmp	r1, r4
   119a4:	beq	11a0c <grafo_adiciona@@Base+0xa0>
   119a8:	ldr	r0, [r0, #4]
   119ac:	cmp	r0, #0
   119b0:	bne	1199c <grafo_adiciona@@Base+0x30>
   119b4:	mov	r0, #8
   119b8:	bl	11138 <malloc@plt>
   119bc:	str	r4, [r0]
   119c0:	ldr	r1, [r7]
   119c4:	str	r1, [r0, #4]
   119c8:	str	r0, [r7]
   119cc:	ldr	r0, [r8, r5, lsl #3]
   119d0:	add	r0, r0, #1
   119d4:	str	r0, [r8, r5, lsl #3]
   119d8:	ldr	r0, [r6]
   119dc:	cmp	r0, #0
   119e0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   119e4:	mov	r0, #8
   119e8:	bl	11138 <malloc@plt>
   119ec:	add	r1, r8, r4, lsl #3
   119f0:	str	r5, [r0]
   119f4:	ldr	r2, [r1, #4]
   119f8:	str	r2, [r0, #4]
   119fc:	ldr	r2, [r8, r4, lsl #3]
   11a00:	add	r2, r2, #1
   11a04:	str	r2, [r8, r4, lsl #3]
   11a08:	str	r0, [r1, #4]
   11a0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011a10 <grafo_aresta@@Base>:
   11a10:	mov	r3, r0
   11a14:	mov	r0, #0
   11a18:	cmp	r3, #0
   11a1c:	beq	11a44 <grafo_aresta@@Base+0x34>
   11a20:	ldr	r3, [r3, #8]
   11a24:	add	r1, r3, r1, lsl #3
   11a28:	ldr	r1, [r1, #4]
   11a2c:	cmp	r1, #0
   11a30:	bxeq	lr
   11a34:	ldr	r3, [r1]
   11a38:	cmp	r3, r2
   11a3c:	bne	11a28 <grafo_aresta@@Base+0x18>
   11a40:	mov	r0, #1
   11a44:	bx	lr

00011a48 <grafo_remove@@Base>:
   11a48:	push	{r4, r5, r6, sl, fp, lr}
   11a4c:	add	fp, sp, #16
   11a50:	cmp	r0, #0
   11a54:	beq	11b10 <grafo_remove@@Base+0xc8>
   11a58:	mov	r6, r0
   11a5c:	ldr	r0, [r0, #8]
   11a60:	mov	r4, r1
   11a64:	add	r1, r0, r1, lsl #3
   11a68:	ldr	r0, [r1, #4]!
   11a6c:	cmp	r0, #0
   11a70:	beq	11b10 <grafo_remove@@Base+0xc8>
   11a74:	mov	r5, r2
   11a78:	ldr	r2, [r0]
   11a7c:	cmp	r2, r5
   11a80:	beq	11aa4 <grafo_remove@@Base+0x5c>
   11a84:	mov	r1, r0
   11a88:	ldr	r0, [r0, #4]
   11a8c:	cmp	r0, #0
   11a90:	beq	11ab0 <grafo_remove@@Base+0x68>
   11a94:	ldr	r2, [r0]
   11a98:	cmp	r2, r5
   11a9c:	bne	11a84 <grafo_remove@@Base+0x3c>
   11aa0:	add	r1, r1, #4
   11aa4:	ldr	r2, [r0, #4]
   11aa8:	str	r2, [r1]
   11aac:	bl	11108 <free@plt>
   11ab0:	ldr	r0, [r6]
   11ab4:	cmp	r0, #0
   11ab8:	popne	{r4, r5, r6, sl, fp, pc}
   11abc:	ldr	r0, [r6, #8]
   11ac0:	add	r1, r0, r5, lsl #3
   11ac4:	ldr	r0, [r1, #4]!
   11ac8:	ldr	r2, [r0]
   11acc:	cmp	r2, r4
   11ad0:	bne	11ae4 <grafo_remove@@Base+0x9c>
   11ad4:	ldr	r2, [r0, #4]
   11ad8:	str	r2, [r1]
   11adc:	pop	{r4, r5, r6, sl, fp, lr}
   11ae0:	b	11108 <free@plt>
   11ae4:	mov	r1, r0
   11ae8:	ldr	r0, [r0, #4]
   11aec:	cmp	r0, #0
   11af0:	beq	11b10 <grafo_remove@@Base+0xc8>
   11af4:	ldr	r2, [r0]
   11af8:	cmp	r2, r4
   11afc:	bne	11ae4 <grafo_remove@@Base+0x9c>
   11b00:	ldr	r2, [r0, #4]
   11b04:	str	r2, [r1, #4]
   11b08:	pop	{r4, r5, r6, sl, fp, lr}
   11b0c:	b	11108 <free@plt>
   11b10:	pop	{r4, r5, r6, sl, fp, pc}

00011b14 <grafo_imprime@@Base>:
   11b14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11b18:	add	fp, sp, #24
   11b1c:	mov	r4, r0
   11b20:	ldr	r0, [r0, #4]
   11b24:	cmp	r0, #1
   11b28:	blt	11ba8 <grafo_imprime@@Base+0x94>
   11b2c:	ldr	r9, [pc, #120]	; 11bac <grafo_imprime@@Base+0x98>
   11b30:	ldr	r8, [pc, #120]	; 11bb0 <grafo_imprime@@Base+0x9c>
   11b34:	ldr	r7, [pc, #120]	; 11bb4 <grafo_imprime@@Base+0xa0>
   11b38:	mov	r5, #0
   11b3c:	add	r9, pc, r9
   11b40:	add	r8, pc, r8
   11b44:	add	r7, pc, r7
   11b48:	b	11b64 <grafo_imprime@@Base+0x50>
   11b4c:	mov	r0, #10
   11b50:	bl	11180 <putchar@plt>
   11b54:	ldr	r0, [r4, #4]
   11b58:	add	r5, r5, #1
   11b5c:	cmp	r5, r0
   11b60:	bge	11ba8 <grafo_imprime@@Base+0x94>
   11b64:	ldr	r0, [r4, #8]
   11b68:	mov	r1, r5
   11b6c:	add	r0, r0, r5, lsl #3
   11b70:	ldr	r6, [r0, #4]
   11b74:	mov	r0, r9
   11b78:	bl	110e4 <printf@plt>
   11b7c:	cmp	r6, #0
   11b80:	beq	11b4c <grafo_imprime@@Base+0x38>
   11b84:	ldr	r1, [r6]
   11b88:	mov	r0, r8
   11b8c:	bl	110e4 <printf@plt>
   11b90:	ldr	r6, [r6, #4]
   11b94:	cmp	r6, #0
   11b98:	beq	11b4c <grafo_imprime@@Base+0x38>
   11b9c:	ldr	r1, [r6]
   11ba0:	mov	r0, r7
   11ba4:	b	11b8c <grafo_imprime@@Base+0x78>
   11ba8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11bac:	ldrdeq	r1, [r0], -sp
   11bb0:	andeq	r1, r0, r8, lsl r2
   11bb4:	ldrdeq	r1, [r0], -sl

00011bb8 <v_sucessores@@Base>:
   11bb8:	push	{r4, r5, r6, r7, fp, lr}
   11bbc:	add	fp, sp, #16
   11bc0:	mov	r4, #0
   11bc4:	cmp	r0, #0
   11bc8:	beq	11c48 <v_sucessores@@Base+0x90>
   11bcc:	mov	r5, r1
   11bd0:	cmp	r1, #0
   11bd4:	bmi	11c48 <v_sucessores@@Base+0x90>
   11bd8:	mov	r6, r0
   11bdc:	ldr	r0, [r0, #4]
   11be0:	cmp	r0, r5
   11be4:	ble	11c48 <v_sucessores@@Base+0x90>
   11be8:	bl	128f8 <vetor_novo@@Base>
   11bec:	mov	r4, r0
   11bf0:	ldr	r0, [r6, #4]
   11bf4:	cmp	r0, #1
   11bf8:	blt	11c48 <v_sucessores@@Base+0x90>
   11bfc:	mov	r7, #0
   11c00:	b	11c10 <v_sucessores@@Base+0x58>
   11c04:	add	r7, r7, #1
   11c08:	cmp	r7, r0
   11c0c:	bge	11c48 <v_sucessores@@Base+0x90>
   11c10:	ldr	r1, [r6, #8]
   11c14:	add	r1, r1, r5, lsl #3
   11c18:	ldr	r1, [r1, #4]
   11c1c:	cmp	r1, #0
   11c20:	beq	11c04 <v_sucessores@@Base+0x4c>
   11c24:	ldr	r2, [r1]
   11c28:	cmp	r2, r7
   11c2c:	bne	11c18 <v_sucessores@@Base+0x60>
   11c30:	mov	r0, r4
   11c34:	mov	r1, r7
   11c38:	mvn	r2, #0
   11c3c:	bl	129c0 <vetor_insere@@Base>
   11c40:	ldr	r0, [r6, #4]
   11c44:	b	11c04 <v_sucessores@@Base+0x4c>
   11c48:	mov	r0, r4
   11c4c:	pop	{r4, r5, r6, r7, fp, pc}

00011c50 <v_antecessores@@Base>:
   11c50:	push	{r4, r5, r6, r7, fp, lr}
   11c54:	add	fp, sp, #16
   11c58:	mov	r4, #0
   11c5c:	cmp	r0, #0
   11c60:	beq	11ce0 <v_antecessores@@Base+0x90>
   11c64:	mov	r5, r1
   11c68:	cmp	r1, #0
   11c6c:	bmi	11ce0 <v_antecessores@@Base+0x90>
   11c70:	mov	r6, r0
   11c74:	ldr	r0, [r0, #4]
   11c78:	cmp	r0, r5
   11c7c:	ble	11ce0 <v_antecessores@@Base+0x90>
   11c80:	bl	128f8 <vetor_novo@@Base>
   11c84:	mov	r4, r0
   11c88:	ldr	r0, [r6, #4]
   11c8c:	cmp	r0, #1
   11c90:	blt	11ce0 <v_antecessores@@Base+0x90>
   11c94:	mov	r7, #0
   11c98:	b	11ca8 <v_antecessores@@Base+0x58>
   11c9c:	add	r7, r7, #1
   11ca0:	cmp	r7, r0
   11ca4:	bge	11ce0 <v_antecessores@@Base+0x90>
   11ca8:	ldr	r1, [r6, #8]
   11cac:	add	r1, r1, r7, lsl #3
   11cb0:	ldr	r1, [r1, #4]
   11cb4:	cmp	r1, #0
   11cb8:	beq	11c9c <v_antecessores@@Base+0x4c>
   11cbc:	ldr	r2, [r1]
   11cc0:	cmp	r2, r5
   11cc4:	bne	11cb0 <v_antecessores@@Base+0x60>
   11cc8:	mov	r0, r4
   11ccc:	mov	r1, r7
   11cd0:	mvn	r2, #0
   11cd4:	bl	129c0 <vetor_insere@@Base>
   11cd8:	ldr	r0, [r6, #4]
   11cdc:	b	11c9c <v_antecessores@@Base+0x4c>
   11ce0:	mov	r0, r4
   11ce4:	pop	{r4, r5, r6, r7, fp, pc}

00011ce8 <dfs_helper@@Base>:
   11ce8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11cec:	add	fp, sp, #24
   11cf0:	sub	sp, sp, #8
   11cf4:	ldr	r9, [fp, #8]
   11cf8:	mov	r4, r1
   11cfc:	mov	r6, r0
   11d00:	mov	r0, #0
   11d04:	ldr	r1, [r9, r1, lsl #2]
   11d08:	cmp	r1, #0
   11d0c:	beq	11d18 <dfs_helper@@Base+0x30>
   11d10:	sub	sp, fp, #24
   11d14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d18:	mov	r5, r2
   11d1c:	cmp	r4, r2
   11d20:	str	r3, [r9, r4, lsl #2]
   11d24:	bne	11d34 <dfs_helper@@Base+0x4c>
   11d28:	mov	r0, r3
   11d2c:	sub	sp, fp, #24
   11d30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d34:	ldr	r0, [r6, #4]
   11d38:	cmp	r0, #1
   11d3c:	blt	11da0 <dfs_helper@@Base+0xb8>
   11d40:	add	r8, r3, #1
   11d44:	mov	r7, #0
   11d48:	b	11d58 <dfs_helper@@Base+0x70>
   11d4c:	add	r7, r7, #1
   11d50:	cmp	r7, r0
   11d54:	bge	11da0 <dfs_helper@@Base+0xb8>
   11d58:	ldr	r1, [r6, #8]
   11d5c:	add	r1, r1, r4, lsl #3
   11d60:	ldr	r1, [r1, #4]
   11d64:	cmp	r1, #0
   11d68:	beq	11d4c <dfs_helper@@Base+0x64>
   11d6c:	ldr	r2, [r1]
   11d70:	cmp	r2, r7
   11d74:	bne	11d60 <dfs_helper@@Base+0x78>
   11d78:	mov	r0, r6
   11d7c:	mov	r1, r7
   11d80:	mov	r2, r5
   11d84:	mov	r3, r8
   11d88:	str	r9, [sp]
   11d8c:	bl	11ce8 <dfs_helper@@Base>
   11d90:	cmp	r0, #0
   11d94:	bne	11d10 <dfs_helper@@Base+0x28>
   11d98:	ldr	r0, [r6, #4]
   11d9c:	b	11d4c <dfs_helper@@Base+0x64>
   11da0:	mov	r0, #0
   11da4:	str	r0, [r9, r4, lsl #2]
   11da8:	sub	sp, fp, #24
   11dac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011db0 <grafo_dfs@@Base>:
   11db0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11db4:	add	fp, sp, #24
   11db8:	sub	sp, sp, #8
   11dbc:	cmp	r0, #0
   11dc0:	beq	11e74 <grafo_dfs@@Base+0xc4>
   11dc4:	mov	r4, r0
   11dc8:	ldr	r0, [r0, #4]
   11dcc:	mov	r7, r1
   11dd0:	mov	r1, #4
   11dd4:	mov	r8, r3
   11dd8:	mov	r6, r2
   11ddc:	bl	110c0 <calloc@plt>
   11de0:	mov	r5, r0
   11de4:	str	r0, [sp]
   11de8:	mov	r0, r4
   11dec:	mov	r1, r7
   11df0:	mov	r2, r6
   11df4:	mov	r3, #1
   11df8:	bl	11ce8 <dfs_helper@@Base>
   11dfc:	cmp	r0, #0
   11e00:	beq	11e7c <grafo_dfs@@Base+0xcc>
   11e04:	mov	r1, #4
   11e08:	mov	r7, r0
   11e0c:	bl	110c0 <calloc@plt>
   11e10:	mov	r6, r0
   11e14:	cmp	r7, #1
   11e18:	blt	11e64 <grafo_dfs@@Base+0xb4>
   11e1c:	ldr	r0, [r4, #4]
   11e20:	mov	r1, #0
   11e24:	b	11e34 <grafo_dfs@@Base+0x84>
   11e28:	str	r3, [r6, r2, lsl #2]
   11e2c:	cmp	r1, r7
   11e30:	beq	11e64 <grafo_dfs@@Base+0xb4>
   11e34:	mov	r2, r1
   11e38:	add	r1, r1, #1
   11e3c:	cmp	r0, #1
   11e40:	blt	11e2c <grafo_dfs@@Base+0x7c>
   11e44:	mov	r3, #0
   11e48:	ldr	r4, [r5, r3, lsl #2]
   11e4c:	cmp	r4, r1
   11e50:	beq	11e28 <grafo_dfs@@Base+0x78>
   11e54:	add	r3, r3, #1
   11e58:	cmp	r3, r0
   11e5c:	blt	11e48 <grafo_dfs@@Base+0x98>
   11e60:	b	11e2c <grafo_dfs@@Base+0x7c>
   11e64:	mov	r0, r5
   11e68:	str	r7, [r8]
   11e6c:	bl	11108 <free@plt>
   11e70:	b	11e8c <grafo_dfs@@Base+0xdc>
   11e74:	mov	r6, #0
   11e78:	b	11e8c <grafo_dfs@@Base+0xdc>
   11e7c:	mov	r0, r5
   11e80:	bl	11108 <free@plt>
   11e84:	mov	r6, #0
   11e88:	str	r6, [r8]
   11e8c:	mov	r0, r6
   11e90:	sub	sp, fp, #24
   11e94:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e98 <grafo_bfs@@Base>:
   11e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e9c:	add	fp, sp, #28
   11ea0:	sub	sp, sp, #12
   11ea4:	cmp	r0, #0
   11ea8:	beq	11fbc <grafo_bfs@@Base+0x124>
   11eac:	ldr	r7, [r0, #4]
   11eb0:	mov	r8, r1
   11eb4:	mov	sl, r0
   11eb8:	mov	r1, #4
   11ebc:	str	r2, [sp, #8]
   11ec0:	str	r3, [sp, #4]
   11ec4:	mov	r0, r7
   11ec8:	bl	110c0 <calloc@plt>
   11ecc:	mov	r5, r0
   11ed0:	mov	r0, r7
   11ed4:	mov	r1, #4
   11ed8:	bl	110c0 <calloc@plt>
   11edc:	mov	r9, r0
   11ee0:	cmp	r7, #1
   11ee4:	blt	11ef8 <grafo_bfs@@Base+0x60>
   11ee8:	lsl	r2, r7, #2
   11eec:	mov	r0, r5
   11ef0:	mov	r1, #255	; 0xff
   11ef4:	bl	11174 <memset@plt>
   11ef8:	ldr	ip, [sp, #8]
   11efc:	str	r8, [r5, r8, lsl #2]
   11f00:	str	r8, [r9]
   11f04:	mov	r0, #0
   11f08:	mov	r1, #1
   11f0c:	add	r0, r0, #1
   11f10:	cmp	r7, #1
   11f14:	sdiv	r2, r0, r7
   11f18:	mls	r0, r2, r7, r0
   11f1c:	blt	11f8c <grafo_bfs@@Base+0xf4>
   11f20:	ldr	r2, [sl, #8]
   11f24:	mov	r3, #0
   11f28:	add	r2, r2, r8, lsl #3
   11f2c:	ldr	r6, [r2, #4]
   11f30:	b	11f4c <grafo_bfs@@Base+0xb4>
   11f34:	ldr	r2, [r5, r3, lsl #2]
   11f38:	cmn	r2, #1
   11f3c:	beq	11f74 <grafo_bfs@@Base+0xdc>
   11f40:	add	r3, r3, #1
   11f44:	cmp	r3, r7
   11f48:	beq	11f8c <grafo_bfs@@Base+0xf4>
   11f4c:	cmp	r6, #0
   11f50:	mov	r2, r6
   11f54:	beq	11f40 <grafo_bfs@@Base+0xa8>
   11f58:	ldr	r4, [r2]
   11f5c:	cmp	r4, r3
   11f60:	beq	11f34 <grafo_bfs@@Base+0x9c>
   11f64:	ldr	r2, [r2, #4]
   11f68:	cmp	r2, #0
   11f6c:	bne	11f58 <grafo_bfs@@Base+0xc0>
   11f70:	b	11f40 <grafo_bfs@@Base+0xa8>
   11f74:	str	r3, [r9, r1, lsl #2]
   11f78:	add	r1, r1, #1
   11f7c:	str	r8, [r5, r3, lsl #2]
   11f80:	sdiv	r2, r1, r7
   11f84:	mls	r1, r2, r7, r1
   11f88:	b	11f40 <grafo_bfs@@Base+0xa8>
   11f8c:	cmp	r0, r1
   11f90:	beq	11f9c <grafo_bfs@@Base+0x104>
   11f94:	ldr	r8, [r9, r0, lsl #2]
   11f98:	b	11f0c <grafo_bfs@@Base+0x74>
   11f9c:	ldr	r4, [r5, ip, lsl #2]
   11fa0:	cmp	r4, #0
   11fa4:	bmi	11fc4 <grafo_bfs@@Base+0x12c>
   11fa8:	cmp	r4, ip
   11fac:	bne	11fcc <grafo_bfs@@Base+0x134>
   11fb0:	mov	r8, #2
   11fb4:	mov	r7, #1
   11fb8:	b	11fec <grafo_bfs@@Base+0x154>
   11fbc:	mov	sl, #0
   11fc0:	b	12070 <grafo_bfs@@Base+0x1d8>
   11fc4:	mov	r7, #0
   11fc8:	b	12058 <grafo_bfs@@Base+0x1c0>
   11fcc:	mov	r7, #1
   11fd0:	mov	r0, r4
   11fd4:	ldr	r1, [r5, r0, lsl #2]
   11fd8:	add	r7, r7, #1
   11fdc:	cmp	r1, r0
   11fe0:	mov	r0, r1
   11fe4:	bne	11fd4 <grafo_bfs@@Base+0x13c>
   11fe8:	add	r8, r7, #1
   11fec:	lsl	r0, r7, #2
   11ff0:	bl	11138 <malloc@plt>
   11ff4:	mov	sl, r0
   11ff8:	add	r3, r0, r7, lsl #2
   11ffc:	ldr	r0, [sp, #8]
   12000:	cmp	r8, #2
   12004:	str	r0, [r3, #-4]
   12008:	beq	12058 <grafo_bfs@@Base+0x1c0>
   1200c:	sub	r0, r8, #2
   12010:	mov	r1, #2
   12014:	cmp	r8, #3
   12018:	and	r0, r0, #1
   1201c:	beq	1204c <grafo_bfs@@Base+0x1b4>
   12020:	sub	r2, r8, r0
   12024:	sub	r3, r3, #12
   12028:	mov	r1, #2
   1202c:	ldr	r6, [r5, r4, lsl #2]
   12030:	str	r4, [r3, #4]
   12034:	add	r1, r1, #2
   12038:	cmp	r2, r1
   1203c:	ldr	r4, [r5, r6, lsl #2]
   12040:	str	r6, [r3]
   12044:	sub	r3, r3, #8
   12048:	bne	1202c <grafo_bfs@@Base+0x194>
   1204c:	cmp	r0, #0
   12050:	subne	r0, r7, r1
   12054:	strne	r4, [sl, r0, lsl #2]
   12058:	mov	r0, r9
   1205c:	bl	11108 <free@plt>
   12060:	mov	r0, r5
   12064:	bl	11108 <free@plt>
   12068:	ldr	r0, [sp, #4]
   1206c:	str	r7, [r0]
   12070:	mov	r0, sl
   12074:	sub	sp, fp, #28
   12078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001207c <heap_nova@@Base>:
   1207c:	push	{r4, r5, fp, lr}
   12080:	add	fp, sp, #8
   12084:	mov	r5, r0
   12088:	mov	r0, #12
   1208c:	bl	11138 <malloc@plt>
   12090:	cmp	r0, #0
   12094:	beq	120cc <heap_nova@@Base+0x50>
   12098:	mov	r4, r0
   1209c:	mov	r0, #0
   120a0:	mov	r1, #4
   120a4:	stm	r4, {r0, r5}
   120a8:	mov	r0, r5
   120ac:	bl	110c0 <calloc@plt>
   120b0:	cmp	r0, #0
   120b4:	str	r0, [r4, #8]
   120b8:	beq	120c4 <heap_nova@@Base+0x48>
   120bc:	mov	r0, r4
   120c0:	pop	{r4, r5, fp, pc}
   120c4:	mov	r0, r4
   120c8:	bl	11108 <free@plt>
   120cc:	mov	r4, #0
   120d0:	mov	r0, r4
   120d4:	pop	{r4, r5, fp, pc}

000120d8 <heap_apaga@@Base>:
   120d8:	cmp	r0, #0
   120dc:	bxeq	lr
   120e0:	push	{r4, r5, r6, sl, fp, lr}
   120e4:	add	fp, sp, #16
   120e8:	ldr	r1, [r0]
   120ec:	mov	r4, r0
   120f0:	ldr	r0, [r0, #8]
   120f4:	cmp	r1, #1
   120f8:	blt	12138 <heap_apaga@@Base+0x60>
   120fc:	mov	r5, #0
   12100:	mov	r6, #0
   12104:	ldr	r0, [r0, r6, lsl #2]
   12108:	ldr	r0, [r0, #4]
   1210c:	bl	11108 <free@plt>
   12110:	ldr	r0, [r4, #8]
   12114:	ldr	r0, [r0, r6, lsl #2]
   12118:	bl	11108 <free@plt>
   1211c:	ldr	r0, [r4, #8]
   12120:	str	r5, [r0, r6, lsl #2]
   12124:	add	r6, r6, #1
   12128:	ldr	r1, [r4]
   1212c:	ldr	r0, [r4, #8]
   12130:	cmp	r6, r1
   12134:	blt	12104 <heap_apaga@@Base+0x2c>
   12138:	bl	11108 <free@plt>
   1213c:	mov	r0, r4
   12140:	pop	{r4, r5, r6, sl, fp, lr}
   12144:	b	11108 <free@plt>

00012148 <elemento_cria@@Base>:
   12148:	push	{r4, r5, r6, r7, fp, lr}
   1214c:	add	fp, sp, #16
   12150:	mov	r4, r0
   12154:	mov	r0, #8
   12158:	mov	r7, r1
   1215c:	bl	11138 <malloc@plt>
   12160:	mov	r5, #0
   12164:	cmp	r0, #0
   12168:	beq	121a0 <elemento_cria@@Base+0x58>
   1216c:	mov	r6, r0
   12170:	mov	r0, r7
   12174:	bl	1115c <strlen@plt>
   12178:	add	r0, r0, #1
   1217c:	mov	r1, #1
   12180:	bl	110c0 <calloc@plt>
   12184:	cmp	r0, #0
   12188:	str	r0, [r6, #4]
   1218c:	beq	121a8 <elemento_cria@@Base+0x60>
   12190:	mov	r1, r7
   12194:	bl	11120 <strcpy@plt>
   12198:	mov	r5, r6
   1219c:	str	r4, [r6]
   121a0:	mov	r0, r5
   121a4:	pop	{r4, r5, r6, r7, fp, pc}
   121a8:	mov	r0, r6
   121ac:	bl	11108 <free@plt>
   121b0:	mov	r0, r5
   121b4:	pop	{r4, r5, r6, r7, fp, pc}

000121b8 <heap_insere@@Base>:
   121b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121bc:	add	fp, sp, #24
   121c0:	mov	r4, r0
   121c4:	mov	r7, r1
   121c8:	ldr	r0, [r0]
   121cc:	mov	r5, #0
   121d0:	ldr	r1, [r4, #4]
   121d4:	cmp	r0, r1
   121d8:	bge	1228c <heap_insere@@Base+0xd4>
   121dc:	mov	r0, #8
   121e0:	mov	r8, r2
   121e4:	bl	11138 <malloc@plt>
   121e8:	cmp	r0, #0
   121ec:	beq	1228c <heap_insere@@Base+0xd4>
   121f0:	mov	r6, r0
   121f4:	mov	r0, r7
   121f8:	bl	1115c <strlen@plt>
   121fc:	add	r0, r0, #1
   12200:	mov	r1, #1
   12204:	bl	110c0 <calloc@plt>
   12208:	cmp	r0, #0
   1220c:	str	r0, [r6, #4]
   12210:	beq	12294 <heap_insere@@Base+0xdc>
   12214:	mov	r1, r7
   12218:	bl	11120 <strcpy@plt>
   1221c:	str	r8, [r6]
   12220:	ldr	r0, [r4]
   12224:	ldr	r1, [r4, #8]
   12228:	str	r6, [r1, r0, lsl #2]
   1222c:	add	r1, r0, #1
   12230:	cmp	r0, #0
   12234:	str	r1, [r4]
   12238:	beq	12288 <heap_insere@@Base+0xd0>
   1223c:	ldr	r1, [r4, #8]
   12240:	ldr	r2, [r1, r0, lsl #2]
   12244:	cmp	r2, #0
   12248:	subne	r3, r0, #1
   1224c:	addne	r3, r3, r3, lsr #31
   12250:	asrne	r3, r3, #1
   12254:	ldrne	r7, [r1, r3, lsl #2]
   12258:	cmpne	r7, #0
   1225c:	beq	12288 <heap_insere@@Base+0xd0>
   12260:	ldr	r6, [r7]
   12264:	ldr	r5, [r2]
   12268:	cmp	r5, r6
   1226c:	bge	12288 <heap_insere@@Base+0xd0>
   12270:	str	r2, [r1, r3, lsl #2]
   12274:	cmp	r0, #2
   12278:	ldr	r1, [r4, #8]
   1227c:	str	r7, [r1, r0, lsl #2]
   12280:	mov	r0, r3
   12284:	bhi	1223c <heap_insere@@Base+0x84>
   12288:	mov	r5, #1
   1228c:	mov	r0, r5
   12290:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12294:	mov	r0, r6
   12298:	bl	11108 <free@plt>
   1229c:	mov	r0, r5
   122a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000122a4 <menor_que@@Base>:
   122a4:	mov	r2, r0
   122a8:	mov	r0, #0
   122ac:	cmp	r2, #0
   122b0:	cmpne	r1, #0
   122b4:	bne	122bc <menor_que@@Base+0x18>
   122b8:	bx	lr
   122bc:	ldr	r1, [r1]
   122c0:	ldr	r2, [r2]
   122c4:	mov	r0, #0
   122c8:	cmp	r2, r1
   122cc:	movwlt	r0, #1
   122d0:	bx	lr

000122d4 <heap_remove@@Base>:
   122d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122d8:	add	fp, sp, #24
   122dc:	mov	r8, #0
   122e0:	cmp	r0, #0
   122e4:	beq	123c4 <heap_remove@@Base+0xf0>
   122e8:	mov	r5, r0
   122ec:	ldr	r0, [r0]
   122f0:	cmp	r0, #1
   122f4:	blt	123c4 <heap_remove@@Base+0xf0>
   122f8:	ldr	r0, [r5, #8]
   122fc:	ldr	r0, [r0]
   12300:	ldr	r8, [r0, #4]
   12304:	bl	11108 <free@plt>
   12308:	ldr	r0, [r5]
   1230c:	ldr	r1, [r5, #8]
   12310:	sub	lr, r0, #1
   12314:	str	lr, [r5]
   12318:	cmp	lr, #2
   1231c:	ldr	r2, [r1, lr, lsl #2]
   12320:	str	r2, [r1]
   12324:	mov	r1, #0
   12328:	ldr	r2, [r5, #8]
   1232c:	str	r1, [r2, lr, lsl #2]
   12330:	blt	123c4 <heap_remove@@Base+0xf0>
   12334:	mov	ip, #1
   12338:	mov	r4, #1
   1233c:	mov	r2, #0
   12340:	add	r3, r1, #2
   12344:	ldr	r1, [r5, #8]
   12348:	cmp	r3, lr
   1234c:	bge	12364 <heap_remove@@Base+0x90>
   12350:	ldr	r6, [r1, r3, lsl #2]
   12354:	cmp	r6, #0
   12358:	ldrne	r7, [r1, r4, lsl #2]
   1235c:	cmpne	r7, #0
   12360:	bne	123b0 <heap_remove@@Base+0xdc>
   12364:	mov	r3, r4
   12368:	ldr	r4, [r1, r3, lsl #2]
   1236c:	cmp	r4, #0
   12370:	ldrne	r6, [r1, r2, lsl #2]
   12374:	cmpne	r6, #0
   12378:	beq	123c4 <heap_remove@@Base+0xf0>
   1237c:	ldr	r7, [r6]
   12380:	ldr	r0, [r4]
   12384:	cmp	r0, r7
   12388:	bge	123c4 <heap_remove@@Base+0xf0>
   1238c:	str	r6, [r1, r3, lsl #2]
   12390:	lsl	r1, r3, #1
   12394:	ldr	r0, [r5, #8]
   12398:	str	r4, [r0, r2, lsl #2]
   1239c:	orr	r4, ip, r3, lsl #1
   123a0:	mov	r2, r3
   123a4:	cmp	r4, lr
   123a8:	blt	12340 <heap_remove@@Base+0x6c>
   123ac:	b	123c4 <heap_remove@@Base+0xf0>
   123b0:	ldr	r7, [r7]
   123b4:	ldr	r6, [r6]
   123b8:	cmp	r6, r7
   123bc:	movge	r3, r4
   123c0:	b	12368 <heap_remove@@Base+0x94>
   123c4:	mov	r0, r8
   123c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000123cc <mostraHeap@@Base>:
   123cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123d0:	add	fp, sp, #28
   123d4:	sub	sp, sp, #4
   123d8:	mov	r9, r0
   123dc:	ldr	r0, [r0]
   123e0:	cmp	r0, r1
   123e4:	ble	1248c <mostraHeap@@Base+0xc0>
   123e8:	mov	sl, r1
   123ec:	mov	r7, #0
   123f0:	cmp	r1, #1
   123f4:	blt	12414 <mostraHeap@@Base+0x48>
   123f8:	mov	r0, sl
   123fc:	sub	r1, r0, #1
   12400:	add	r7, r7, #1
   12404:	add	r0, r1, r1, lsr #31
   12408:	cmp	r1, #1
   1240c:	asr	r0, r0, #1
   12410:	bgt	123fc <mostraHeap@@Base+0x30>
   12414:	mov	r0, #1
   12418:	orr	r1, r0, sl, lsl #1
   1241c:	mov	r0, r9
   12420:	bl	123cc <mostraHeap@@Base>
   12424:	lsl	r8, sl, #1
   12428:	cmp	r7, #0
   1242c:	beq	12454 <mostraHeap@@Base+0x88>
   12430:	ldr	r6, [pc, #100]	; 1249c <mostraHeap@@Base+0xd0>
   12434:	add	r4, r7, r7, lsl #1
   12438:	mov	r5, #0
   1243c:	add	r6, pc, r6
   12440:	mov	r0, r6
   12444:	bl	110e4 <printf@plt>
   12448:	add	r5, r5, #1
   1244c:	cmp	r5, r4
   12450:	bcc	12440 <mostraHeap@@Base+0x74>
   12454:	ldr	r0, [r9, #8]
   12458:	ldr	r0, [r0, sl, lsl #2]
   1245c:	ldr	r2, [r0]
   12460:	ldr	r1, [r0, #4]
   12464:	ldr	r0, [pc, #52]	; 124a0 <mostraHeap@@Base+0xd4>
   12468:	add	r0, pc, r0
   1246c:	bl	110e4 <printf@plt>
   12470:	add	r1, r8, #2
   12474:	mov	r0, r9
   12478:	bl	123cc <mostraHeap@@Base>
   1247c:	cmp	r7, #0
   12480:	beq	1248c <mostraHeap@@Base+0xc0>
   12484:	sub	sp, fp, #28
   12488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1248c:	mov	r0, #10
   12490:	sub	sp, fp, #28
   12494:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12498:	b	11180 <putchar@plt>
   1249c:	andeq	r0, r0, r7, ror #19
   124a0:	andeq	r0, r0, r1, asr #19

000124a4 <novo_str@@Base>:
   124a4:	push	{r4, r5, r6, sl, fp, lr}
   124a8:	add	fp, sp, #16
   124ac:	mov	r6, r0
   124b0:	mov	r0, #12
   124b4:	bl	11138 <malloc@plt>
   124b8:	mov	r5, #0
   124bc:	cmp	r0, #0
   124c0:	beq	124fc <novo_str@@Base+0x58>
   124c4:	mov	r4, r0
   124c8:	mov	r0, r6
   124cc:	bl	1115c <strlen@plt>
   124d0:	add	r0, r0, #1
   124d4:	bl	11138 <malloc@plt>
   124d8:	cmp	r0, #0
   124dc:	str	r0, [r4]
   124e0:	beq	12504 <novo_str@@Base+0x60>
   124e4:	mov	r1, r6
   124e8:	bl	11120 <strcpy@plt>
   124ec:	mov	r0, #0
   124f0:	mov	r5, r4
   124f4:	str	r0, [r4, #4]
   124f8:	str	r0, [r4, #8]
   124fc:	mov	r0, r5
   12500:	pop	{r4, r5, r6, sl, fp, pc}
   12504:	mov	r0, r4
   12508:	bl	11108 <free@plt>
   1250c:	mov	r0, r5
   12510:	pop	{r4, r5, r6, sl, fp, pc}

00012514 <lista_nova@@Base>:
   12514:	push	{fp, lr}
   12518:	mov	fp, sp
   1251c:	mov	r0, #12
   12520:	bl	11138 <malloc@plt>
   12524:	cmp	r0, #0
   12528:	moveq	r0, #0
   1252c:	movne	r1, #0
   12530:	strne	r1, [r0]
   12534:	strne	r1, [r0, #4]
   12538:	strne	r1, [r0, #8]
   1253c:	pop	{fp, pc}

00012540 <lista_apaga@@Base>:
   12540:	cmp	r0, #0
   12544:	bxeq	lr
   12548:	push	{r4, r5, fp, lr}
   1254c:	add	fp, sp, #8
   12550:	mov	r4, r0
   12554:	ldr	r5, [r4]
   12558:	cmp	r5, #0
   1255c:	beq	1257c <lista_apaga@@Base+0x3c>
   12560:	ldr	r0, [r5, #4]
   12564:	str	r0, [r4]
   12568:	ldr	r0, [r5]
   1256c:	bl	11108 <free@plt>
   12570:	mov	r0, r5
   12574:	bl	11108 <free@plt>
   12578:	b	12554 <lista_apaga@@Base+0x14>
   1257c:	mov	r0, r4
   12580:	pop	{r4, r5, fp, lr}
   12584:	b	11108 <free@plt>

00012588 <lista_tamanho@@Base>:
   12588:	cmp	r0, #0
   1258c:	ldrne	r0, [r0, #8]
   12590:	mvneq	r0, #0
   12594:	bx	lr

00012598 <lista_inicio@@Base>:
   12598:	cmp	r0, #0
   1259c:	ldrne	r0, [r0]
   125a0:	moveq	r0, #0
   125a4:	bx	lr

000125a8 <lista_fim@@Base>:
   125a8:	cmp	r0, #0
   125ac:	ldrne	r0, [r0, #4]
   125b0:	moveq	r0, #0
   125b4:	bx	lr

000125b8 <lista_insere@@Base>:
   125b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   125bc:	add	fp, sp, #24
   125c0:	cmp	r0, #0
   125c4:	mov	r7, #0
   125c8:	movne	r6, r1
   125cc:	cmpne	r1, #0
   125d0:	bne	125dc <lista_insere@@Base+0x24>
   125d4:	mov	r0, r7
   125d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125dc:	mov	r5, r0
   125e0:	mov	r0, #12
   125e4:	mov	r8, r2
   125e8:	bl	11138 <malloc@plt>
   125ec:	cmp	r0, #0
   125f0:	beq	125d4 <lista_insere@@Base+0x1c>
   125f4:	mov	r4, r0
   125f8:	mov	r0, r6
   125fc:	bl	1115c <strlen@plt>
   12600:	add	r0, r0, #1
   12604:	bl	11138 <malloc@plt>
   12608:	cmp	r0, #0
   1260c:	str	r0, [r4]
   12610:	beq	12660 <lista_insere@@Base+0xa8>
   12614:	mov	r1, r6
   12618:	bl	11120 <strcpy@plt>
   1261c:	mov	r0, #0
   12620:	cmp	r8, #0
   12624:	str	r0, [r4, #4]
   12628:	str	r0, [r4, #8]
   1262c:	ldr	r1, [r5, #8]
   12630:	ldr	r0, [r5]
   12634:	add	r1, r1, #1
   12638:	str	r1, [r5, #8]
   1263c:	beq	12670 <lista_insere@@Base+0xb8>
   12640:	cmp	r0, r8
   12644:	beq	12688 <lista_insere@@Base+0xd0>
   12648:	ldr	r0, [r8, #8]
   1264c:	str	r8, [r4, #4]
   12650:	str	r0, [r4, #8]
   12654:	str	r4, [r0, #4]
   12658:	str	r4, [r8, #8]
   1265c:	b	126a0 <lista_insere@@Base+0xe8>
   12660:	mov	r0, r4
   12664:	bl	11108 <free@plt>
   12668:	mov	r0, r7
   1266c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12670:	cmp	r0, #0
   12674:	beq	12698 <lista_insere@@Base+0xe0>
   12678:	ldr	r0, [r5, #4]
   1267c:	str	r0, [r4, #8]
   12680:	str	r4, [r0, #4]
   12684:	b	1269c <lista_insere@@Base+0xe4>
   12688:	str	r8, [r4, #4]
   1268c:	str	r4, [r8, #8]
   12690:	str	r4, [r5]
   12694:	b	126a0 <lista_insere@@Base+0xe8>
   12698:	str	r4, [r5]
   1269c:	str	r4, [r5, #4]
   126a0:	mov	r7, r4
   126a4:	mov	r0, r7
   126a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000126ac <lista_remove@@Base>:
   126ac:	push	{r4, r5, fp, lr}
   126b0:	add	fp, sp, #8
   126b4:	cmp	r0, #0
   126b8:	mov	r4, #0
   126bc:	movne	r5, r1
   126c0:	cmpne	r1, #0
   126c4:	bne	126d0 <lista_remove@@Base+0x24>
   126c8:	mov	r0, r4
   126cc:	pop	{r4, r5, fp, pc}
   126d0:	ldr	r1, [r0, #8]
   126d4:	sub	r1, r1, #1
   126d8:	str	r1, [r0, #8]
   126dc:	ldr	r1, [r5, #8]
   126e0:	ldr	r4, [r5, #4]
   126e4:	cmp	r1, #0
   126e8:	beq	126f8 <lista_remove@@Base+0x4c>
   126ec:	str	r4, [r1, #4]
   126f0:	ldr	r4, [r5, #4]
   126f4:	b	126fc <lista_remove@@Base+0x50>
   126f8:	str	r4, [r0]
   126fc:	cmp	r4, #0
   12700:	add	r2, r4, #8
   12704:	addeq	r2, r0, #4
   12708:	str	r1, [r2]
   1270c:	ldr	r0, [r5]
   12710:	bl	11108 <free@plt>
   12714:	mov	r0, r5
   12718:	bl	11108 <free@plt>
   1271c:	mov	r0, r4
   12720:	pop	{r4, r5, fp, pc}

00012724 <lista_pesquisa@@Base>:
   12724:	push	{r4, r5, r6, sl, fp, lr}
   12728:	add	fp, sp, #16
   1272c:	cmp	r0, #0
   12730:	mov	r4, #0
   12734:	movne	r5, r1
   12738:	cmpne	r1, #0
   1273c:	bne	12748 <lista_pesquisa@@Base+0x24>
   12740:	mov	r0, r4
   12744:	pop	{r4, r5, r6, sl, fp, pc}
   12748:	cmp	r2, #1
   1274c:	bhi	12740 <lista_pesquisa@@Base+0x1c>
   12750:	cmp	r2, #0
   12754:	beq	12788 <lista_pesquisa@@Base+0x64>
   12758:	ldr	r6, [r0, #4]
   1275c:	cmp	r6, #0
   12760:	beq	12740 <lista_pesquisa@@Base+0x1c>
   12764:	ldr	r0, [r6]
   12768:	mov	r1, r5
   1276c:	bl	110cc <strcmp@plt>
   12770:	cmp	r0, #0
   12774:	beq	127b8 <lista_pesquisa@@Base+0x94>
   12778:	ldr	r6, [r6, #8]
   1277c:	cmp	r6, #0
   12780:	bne	12764 <lista_pesquisa@@Base+0x40>
   12784:	b	12740 <lista_pesquisa@@Base+0x1c>
   12788:	ldr	r6, [r0]
   1278c:	cmp	r6, #0
   12790:	beq	12740 <lista_pesquisa@@Base+0x1c>
   12794:	ldr	r0, [r6]
   12798:	mov	r1, r5
   1279c:	bl	110cc <strcmp@plt>
   127a0:	cmp	r0, #0
   127a4:	beq	127b8 <lista_pesquisa@@Base+0x94>
   127a8:	ldr	r6, [r6, #4]
   127ac:	cmp	r6, #0
   127b0:	bne	12794 <lista_pesquisa@@Base+0x70>
   127b4:	b	12740 <lista_pesquisa@@Base+0x1c>
   127b8:	mov	r4, r6
   127bc:	mov	r0, r4
   127c0:	pop	{r4, r5, r6, sl, fp, pc}

000127c4 <lista_ordena@@Base>:
   127c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   127c8:	add	fp, sp, #24
   127cc:	cmp	r0, #0
   127d0:	beq	12848 <lista_ordena@@Base+0x84>
   127d4:	ldr	r1, [r0, #8]
   127d8:	mov	r8, #0
   127dc:	cmp	r1, #0
   127e0:	beq	1284c <lista_ordena@@Base+0x88>
   127e4:	ldr	r0, [r0]
   127e8:	mov	r5, r0
   127ec:	ldr	r4, [r5, #4]!
   127f0:	cmp	r4, #0
   127f4:	beq	1284c <lista_ordena@@Base+0x88>
   127f8:	mov	r9, r0
   127fc:	mov	r7, r0
   12800:	mov	r6, r4
   12804:	ldr	r1, [r7]
   12808:	ldr	r0, [r6]
   1280c:	bl	110cc <strcmp@plt>
   12810:	cmp	r0, #0
   12814:	movmi	r7, r6
   12818:	ldr	r6, [r6, #4]
   1281c:	cmp	r6, #0
   12820:	bne	12804 <lista_ordena@@Base+0x40>
   12824:	cmp	r7, r9
   12828:	mov	r0, r4
   1282c:	beq	127e8 <lista_ordena@@Base+0x24>
   12830:	ldr	r0, [r9]
   12834:	ldr	r1, [r7]
   12838:	str	r1, [r9]
   1283c:	str	r0, [r7]
   12840:	ldr	r0, [r5]
   12844:	b	127e8 <lista_ordena@@Base+0x24>
   12848:	mvn	r8, #0
   1284c:	mov	r0, r8
   12850:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012854 <lista_inverte@@Base>:
   12854:	push	{fp, lr}
   12858:	mov	fp, sp
   1285c:	cmp	r0, #0
   12860:	beq	128bc <lista_inverte@@Base+0x68>
   12864:	ldr	r2, [r0, #8]
   12868:	mov	r1, #0
   1286c:	cmp	r2, #2
   12870:	blt	128f0 <lista_inverte@@Base+0x9c>
   12874:	sub	r1, r2, #2
   12878:	cmp	r1, #0
   1287c:	ble	128c8 <lista_inverte@@Base+0x74>
   12880:	ldr	ip, [r0]
   12884:	ldr	r3, [ip, #4]
   12888:	mov	r2, r3
   1288c:	ldr	r3, [r3, #4]
   12890:	subs	r1, r1, #1
   12894:	ldr	lr, [r2, #8]
   12898:	str	r3, [lr, #4]
   1289c:	ldr	r3, [r2, #4]
   128a0:	str	lr, [r3, #8]
   128a4:	str	ip, [r2, #4]
   128a8:	str	r2, [ip, #8]
   128ac:	mov	ip, r2
   128b0:	bne	12888 <lista_inverte@@Base+0x34>
   128b4:	str	r2, [r0]
   128b8:	b	128cc <lista_inverte@@Base+0x78>
   128bc:	mvn	r1, #0
   128c0:	mov	r0, r1
   128c4:	pop	{fp, pc}
   128c8:	ldr	r2, [r0]
   128cc:	ldr	r3, [r0, #4]
   128d0:	mov	r1, #0
   128d4:	ldr	ip, [r3, #8]
   128d8:	str	ip, [r0, #4]
   128dc:	str	r1, [ip, #4]
   128e0:	str	r2, [r3, #4]
   128e4:	str	r1, [r3, #8]
   128e8:	str	r3, [r2, #8]
   128ec:	str	r3, [r0]
   128f0:	mov	r0, r1
   128f4:	pop	{fp, pc}

000128f8 <vetor_novo@@Base>:
   128f8:	push	{fp, lr}
   128fc:	mov	fp, sp
   12900:	mov	r0, #12
   12904:	bl	11138 <malloc@plt>
   12908:	cmp	r0, #0
   1290c:	moveq	r0, #0
   12910:	movne	r1, #0
   12914:	strne	r1, [r0]
   12918:	strne	r1, [r0, #4]
   1291c:	strne	r1, [r0, #8]
   12920:	pop	{fp, pc}

00012924 <vetor_apaga@@Base>:
   12924:	cmp	r0, #0
   12928:	bxeq	lr
   1292c:	push	{r4, sl, fp, lr}
   12930:	add	fp, sp, #8
   12934:	mov	r4, r0
   12938:	ldr	r0, [r0, #8]
   1293c:	bl	11108 <free@plt>
   12940:	mov	r0, r4
   12944:	pop	{r4, sl, fp, lr}
   12948:	b	11108 <free@plt>

0001294c <vetor_atribui@@Base>:
   1294c:	mov	ip, r0
   12950:	mvn	r0, #0
   12954:	cmp	ip, #0
   12958:	beq	1297c <vetor_atribui@@Base+0x30>
   1295c:	cmp	r1, #0
   12960:	bmi	1297c <vetor_atribui@@Base+0x30>
   12964:	ldr	r3, [ip]
   12968:	cmp	r3, r1
   1296c:	bxle	lr
   12970:	ldr	r0, [ip, #8]
   12974:	str	r2, [r0, r1, lsl #2]
   12978:	mov	r0, r1
   1297c:	bx	lr

00012980 <vetor_tamanho@@Base>:
   12980:	cmp	r0, #0
   12984:	ldrne	r0, [r0]
   12988:	mvneq	r0, #0
   1298c:	bx	lr

00012990 <vetor_elemento@@Base>:
   12990:	mov	r2, r0
   12994:	mov	r0, #-2147483648	; 0x80000000
   12998:	cmp	r2, #0
   1299c:	beq	129bc <vetor_elemento@@Base+0x2c>
   129a0:	cmp	r1, #0
   129a4:	bmi	129bc <vetor_elemento@@Base+0x2c>
   129a8:	ldr	r3, [r2]
   129ac:	cmp	r3, r1
   129b0:	bxle	lr
   129b4:	ldr	r0, [r2, #8]
   129b8:	ldr	r0, [r0, r1, lsl #2]
   129bc:	bx	lr

000129c0 <vetor_insere@@Base>:
   129c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129c4:	add	fp, sp, #24
   129c8:	mvn	r7, #0
   129cc:	cmp	r0, #0
   129d0:	beq	12ad0 <vetor_insere@@Base+0x110>
   129d4:	mov	r4, r2
   129d8:	cmn	r2, #1
   129dc:	blt	12ad0 <vetor_insere@@Base+0x110>
   129e0:	ldr	lr, [r0]
   129e4:	mov	r9, r0
   129e8:	cmp	lr, r4
   129ec:	blt	12ad0 <vetor_insere@@Base+0x110>
   129f0:	ldr	r0, [r9, #4]
   129f4:	cmn	r4, #1
   129f8:	mov	r8, r1
   129fc:	moveq	r4, lr
   12a00:	cmp	lr, r0
   12a04:	bne	12a40 <vetor_insere@@Base+0x80>
   12a08:	cmp	lr, #0
   12a0c:	lsl	r0, lr, #1
   12a10:	movweq	r0, #1
   12a14:	str	r0, [r9, #4]
   12a18:	lsl	r1, r0, #2
   12a1c:	ldr	r0, [r9, #8]
   12a20:	bl	11114 <realloc@plt>
   12a24:	cmp	r0, #0
   12a28:	str	r0, [r9, #8]
   12a2c:	beq	12ad0 <vetor_insere@@Base+0x110>
   12a30:	ldr	lr, [r9]
   12a34:	cmp	lr, r4
   12a38:	bgt	12a4c <vetor_insere@@Base+0x8c>
   12a3c:	b	12ac0 <vetor_insere@@Base+0x100>
   12a40:	ldr	r0, [r9, #8]
   12a44:	cmp	lr, r4
   12a48:	ble	12ac0 <vetor_insere@@Base+0x100>
   12a4c:	mvn	r2, r4
   12a50:	add	ip, lr, r2
   12a54:	sub	r2, lr, r4
   12a58:	ands	r7, r2, #3
   12a5c:	mov	r2, lr
   12a60:	beq	12a88 <vetor_insere@@Base+0xc8>
   12a64:	add	r6, r0, lr, lsl #2
   12a68:	mov	r2, lr
   12a6c:	mov	r3, r6
   12a70:	ldr	r1, [r3, #-4]!
   12a74:	subs	r7, r7, #1
   12a78:	sub	r2, r2, #1
   12a7c:	str	r1, [r6]
   12a80:	mov	r6, r3
   12a84:	bne	12a70 <vetor_insere@@Base+0xb0>
   12a88:	cmp	ip, #3
   12a8c:	bcc	12ac0 <vetor_insere@@Base+0x100>
   12a90:	add	r1, r0, r2, lsl #2
   12a94:	sub	r3, r1, #8
   12a98:	ldr	r6, [r3]
   12a9c:	ldr	r5, [r3, #4]
   12aa0:	ldmdb	r3, {r1, r7}
   12aa4:	sub	r2, r2, #4
   12aa8:	cmp	r2, r4
   12aac:	stmda	r3, {r1, r7}
   12ab0:	str	r6, [r3, #4]
   12ab4:	str	r5, [r3, #8]
   12ab8:	sub	r3, r3, #16
   12abc:	bgt	12a98 <vetor_insere@@Base+0xd8>
   12ac0:	str	r8, [r0, r4, lsl #2]
   12ac4:	add	r0, lr, #1
   12ac8:	mov	r7, r4
   12acc:	str	r0, [r9]
   12ad0:	mov	r0, r7
   12ad4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ad8 <vetor_remove@@Base>:
   12ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12adc:	add	fp, sp, #28
   12ae0:	mvn	r2, #0
   12ae4:	cmp	r0, #0
   12ae8:	beq	12bcc <vetor_remove@@Base+0xf4>
   12aec:	cmp	r1, #0
   12af0:	bmi	12bcc <vetor_remove@@Base+0xf4>
   12af4:	ldr	ip, [r0]
   12af8:	cmp	ip, r1
   12afc:	ble	12bcc <vetor_remove@@Base+0xf4>
   12b00:	add	r8, r1, #1
   12b04:	cmp	r8, ip
   12b08:	bge	12bc0 <vetor_remove@@Base+0xe8>
   12b0c:	mvn	r3, r1
   12b10:	add	lr, ip, r3
   12b14:	ldr	r3, [r0, #8]
   12b18:	cmp	lr, #4
   12b1c:	bcc	12ba4 <vetor_remove@@Base+0xcc>
   12b20:	bic	r9, lr, #3
   12b24:	mov	r5, #1
   12b28:	subs	r4, r9, #4
   12b2c:	add	r4, r5, r4, lsr #2
   12b30:	and	r2, r4, #1
   12b34:	beq	12bd4 <vetor_remove@@Base+0xfc>
   12b38:	add	r6, r3, r1, lsl #2
   12b3c:	sub	r7, r2, r4
   12b40:	mov	r5, #0
   12b44:	mov	sl, #20
   12b48:	add	r4, r6, #4
   12b4c:	adds	r7, r7, #2
   12b50:	add	r5, r5, #8
   12b54:	vld1.32	{d16-d17}, [r4]
   12b58:	mov	r4, r6
   12b5c:	vst1.32	{d16-d17}, [r4], sl
   12b60:	vld1.32	{d16-d17}, [r4]
   12b64:	add	r4, r6, #16
   12b68:	add	r6, r6, #32
   12b6c:	vst1.32	{d16-d17}, [r4]
   12b70:	bne	12b48 <vetor_remove@@Base+0x70>
   12b74:	cmp	r2, #0
   12b78:	beq	12b94 <vetor_remove@@Base+0xbc>
   12b7c:	add	r4, r8, r5
   12b80:	add	r4, r3, r4, lsl #2
   12b84:	vld1.32	{d16-d17}, [r4]
   12b88:	add	r4, r5, r1
   12b8c:	add	r4, r3, r4, lsl #2
   12b90:	vst1.32	{d16-d17}, [r4]
   12b94:	cmp	lr, r9
   12b98:	beq	12bc0 <vetor_remove@@Base+0xe8>
   12b9c:	add	r1, r9, r1
   12ba0:	add	r8, r8, r9
   12ba4:	ldr	r7, [r3, r8, lsl #2]
   12ba8:	mov	r2, r8
   12bac:	add	r8, r8, #1
   12bb0:	cmp	ip, r8
   12bb4:	str	r7, [r3, r1, lsl #2]
   12bb8:	mov	r1, r2
   12bbc:	bne	12ba4 <vetor_remove@@Base+0xcc>
   12bc0:	sub	r1, ip, #1
   12bc4:	mov	r2, #0
   12bc8:	str	r1, [r0]
   12bcc:	mov	r0, r2
   12bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bd4:	mov	r5, #0
   12bd8:	cmp	r2, #0
   12bdc:	bne	12b7c <vetor_remove@@Base+0xa4>
   12be0:	b	12b94 <vetor_remove@@Base+0xbc>

00012be4 <vetor_pesquisa@@Base>:
   12be4:	push	{fp, lr}
   12be8:	mov	fp, sp
   12bec:	mov	r2, r0
   12bf0:	mvn	r0, #0
   12bf4:	cmp	r2, #0
   12bf8:	beq	12c28 <vetor_pesquisa@@Base+0x44>
   12bfc:	ldr	ip, [r2]
   12c00:	cmp	ip, #1
   12c04:	poplt	{fp, pc}
   12c08:	ldr	lr, [r2, #8]
   12c0c:	mov	r2, #0
   12c10:	ldr	r3, [lr, r2, lsl #2]
   12c14:	cmp	r3, r1
   12c18:	beq	12c2c <vetor_pesquisa@@Base+0x48>
   12c1c:	add	r2, r2, #1
   12c20:	cmp	r2, ip
   12c24:	blt	12c10 <vetor_pesquisa@@Base+0x2c>
   12c28:	pop	{fp, pc}
   12c2c:	mov	r0, r2
   12c30:	pop	{fp, pc}

00012c34 <vetor_ordena@@Base>:
   12c34:	push	{r4, r5, fp, lr}
   12c38:	add	fp, sp, #8
   12c3c:	cmp	r0, #0
   12c40:	beq	12cb8 <vetor_ordena@@Base+0x84>
   12c44:	ldr	ip, [r0]
   12c48:	mov	r1, r0
   12c4c:	mov	r0, #0
   12c50:	cmp	ip, #2
   12c54:	poplt	{r4, r5, fp, pc}
   12c58:	ldr	lr, [r1, #8]
   12c5c:	mov	r1, #1
   12c60:	mov	r3, lr
   12c64:	b	12c80 <vetor_ordena@@Base+0x4c>
   12c68:	add	r4, r1, r0
   12c6c:	add	r1, r1, #1
   12c70:	add	r3, r3, #4
   12c74:	str	r2, [lr, r4, lsl #2]
   12c78:	cmp	r1, ip
   12c7c:	bge	12cb0 <vetor_ordena@@Base+0x7c>
   12c80:	ldr	r2, [lr, r1, lsl #2]
   12c84:	mov	r0, #0
   12c88:	ldr	r4, [r3, r0, lsl #2]
   12c8c:	cmp	r2, r4
   12c90:	bge	12c68 <vetor_ordena@@Base+0x34>
   12c94:	add	r5, r3, r0, lsl #2
   12c98:	sub	r0, r0, #1
   12c9c:	str	r4, [r5, #4]
   12ca0:	add	r4, r1, r0
   12ca4:	cmp	r4, #0
   12ca8:	bgt	12c88 <vetor_ordena@@Base+0x54>
   12cac:	b	12c6c <vetor_ordena@@Base+0x38>
   12cb0:	mov	r0, #0
   12cb4:	pop	{r4, r5, fp, pc}
   12cb8:	mvn	r0, #0
   12cbc:	pop	{r4, r5, fp, pc}

00012cc0 <__libc_csu_init@@Base>:
   12cc0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12cc4:	mov	r7, r0
   12cc8:	ldr	r6, [pc, #72]	; 12d18 <__libc_csu_init@@Base+0x58>
   12ccc:	ldr	r5, [pc, #72]	; 12d1c <__libc_csu_init@@Base+0x5c>
   12cd0:	add	r6, pc, r6
   12cd4:	add	r5, pc, r5
   12cd8:	sub	r6, r6, r5
   12cdc:	mov	r8, r1
   12ce0:	mov	r9, r2
   12ce4:	bl	110a0 <calloc@plt-0x20>
   12ce8:	asrs	r6, r6, #2
   12cec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cf0:	mov	r4, #0
   12cf4:	add	r4, r4, #1
   12cf8:	ldr	r3, [r5], #4
   12cfc:	mov	r2, r9
   12d00:	mov	r1, r8
   12d04:	mov	r0, r7
   12d08:	blx	r3
   12d0c:	cmp	r6, r4
   12d10:	bne	12cf4 <__libc_csu_init@@Base+0x34>
   12d14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d18:	andeq	r0, r1, r4, lsr r2
   12d1c:	andeq	r0, r1, ip, lsr #4

00012d20 <__libc_csu_fini@@Base>:
   12d20:	bx	lr

Disassembly of section .fini:

00012d24 <.fini>:
   12d24:	push	{r3, lr}
   12d28:	pop	{r3, pc}
