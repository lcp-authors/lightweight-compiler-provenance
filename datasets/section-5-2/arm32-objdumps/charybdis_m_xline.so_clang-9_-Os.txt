
../repos/charybdis/modules/.libs/m_xline.so:     file format elf32-littlearm


Disassembly of section .init:

00000c54 <_init>:
 c54:	push	{r3, lr}
 c58:	bl	e3c <call_weak_fn>
 c5c:	pop	{r3, pc}

Disassembly of section .plt:

00000c60 <.plt>:
 c60:	push	{lr}		; (str lr, [sp, #-4]!)
 c64:	ldr	lr, [pc, #4]	; c70 <.plt+0x10>
 c68:	add	lr, pc, lr
 c6c:	ldr	pc, [lr, #8]!
 c70:	.word	0x00012390

00000c74 <propagate_generic@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #73728	; 0x12000
 c7c:	ldr	pc, [ip, #912]!	; 0x390

00000c80 <make_conf@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #73728	; 0x12000
 c88:	ldr	pc, [ip, #904]!	; 0x388

00000c8c <rb_current_time@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #73728	; 0x12000
 c94:	ldr	pc, [ip, #896]!	; 0x380

00000c98 <sendto_match_servs@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #73728	; 0x12000
 ca0:	ldr	pc, [ip, #888]!	; 0x378

00000ca4 <__cxa_finalize@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #73728	; 0x12000
 cac:	ldr	pc, [ip, #880]!	; 0x370

00000cb0 <sendto_one@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #73728	; 0x12000
 cb8:	ldr	pc, [ip, #872]!	; 0x368

00000cbc <replace_old_ban@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #73728	; 0x12000
 cc4:	ldr	pc, [ip, #864]!	; 0x360

00000cc8 <rb_outofmemory@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #73728	; 0x12000
 cd0:	ldr	pc, [ip, #856]!	; 0x358

00000cd4 <operhash_delete@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #73728	; 0x12000
 cdc:	ldr	pc, [ip, #848]!	; 0x350

00000ce0 <sendto_realops_snomask@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #73728	; 0x12000
 ce8:	ldr	pc, [ip, #840]!	; 0x348

00000cec <bandb_add@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #73728	; 0x12000
 cf4:	ldr	pc, [ip, #832]!	; 0x340

00000cf8 <deactivate_conf@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #73728	; 0x12000
 d00:	ldr	pc, [ip, #824]!	; 0x338

00000d04 <check_xlines@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #73728	; 0x12000
 d0c:	ldr	pc, [ip, #816]!	; 0x330

00000d10 <get_oper_name@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #73728	; 0x12000
 d18:	ldr	pc, [ip, #808]!	; 0x328

00000d1c <rb_free_rb_dlink_node@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #73728	; 0x12000
 d24:	ldr	pc, [ip, #800]!	; 0x320

00000d28 <cluster_generic@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #73728	; 0x12000
 d30:	ldr	pc, [ip, #792]!	; 0x318

00000d34 <operhash_add@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #73728	; 0x12000
 d3c:	ldr	pc, [ip, #784]!	; 0x310

00000d40 <strcpy@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #73728	; 0x12000
 d48:	ldr	pc, [ip, #776]!	; 0x308

00000d4c <sendto_server@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #73728	; 0x12000
 d54:	ldr	pc, [ip, #768]!	; 0x300

00000d58 <malloc@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #73728	; 0x12000
 d60:	ldr	pc, [ip, #760]!	; 0x2f8

00000d64 <__gmon_start__@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #73728	; 0x12000
 d6c:	ldr	pc, [ip, #752]!	; 0x2f0

00000d70 <free_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #73728	; 0x12000
 d78:	ldr	pc, [ip, #744]!	; 0x2e8

00000d7c <rb_make_rb_dlink_node@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #73728	; 0x12000
 d84:	ldr	pc, [ip, #736]!	; 0x2e0

00000d88 <strlen@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #73728	; 0x12000
 d90:	ldr	pc, [ip, #728]!	; 0x2d8

00000d94 <find_xline_mask@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #73728	; 0x12000
 d9c:	ldr	pc, [ip, #720]!	; 0x2d0

00000da0 <ilog@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #73728	; 0x12000
 da8:	ldr	pc, [ip, #712]!	; 0x2c8

00000dac <collapse@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #73728	; 0x12000
 db4:	ldr	pc, [ip, #704]!	; 0x2c0

00000db8 <match@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #73728	; 0x12000
 dc0:	ldr	pc, [ip, #696]!	; 0x2b8

00000dc4 <valid_temp_time@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #73728	; 0x12000
 dcc:	ldr	pc, [ip, #688]!	; 0x2b0

00000dd0 <remove_reject_mask@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #73728	; 0x12000
 dd8:	ldr	pc, [ip, #680]!	; 0x2a8

00000ddc <sendto_one_notice@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #73728	; 0x12000
 de4:	ldr	pc, [ip, #672]!	; 0x2a0

00000de8 <bandb_del@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #73728	; 0x12000
 df0:	ldr	pc, [ip, #664]!	; 0x298

00000df4 <atoi@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #73728	; 0x12000
 dfc:	ldr	pc, [ip, #656]!	; 0x290

00000e00 <valid_wild_card_simple@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #73728	; 0x12000
 e08:	ldr	pc, [ip, #648]!	; 0x288

00000e0c <find_shared_conf@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #73728	; 0x12000
 e14:	ldr	pc, [ip, #640]!	; 0x280

00000e18 <privilegeset_in_set@plt>:
 e18:	add	ip, pc, #0, 12
 e1c:	add	ip, ip, #73728	; 0x12000
 e20:	ldr	pc, [ip, #632]!	; 0x278

00000e24 <irccmp@plt>:
 e24:	add	ip, pc, #0, 12
 e28:	add	ip, ip, #73728	; 0x12000
 e2c:	ldr	pc, [ip, #624]!	; 0x270

00000e30 <__assert_fail@plt>:
 e30:	add	ip, pc, #0, 12
 e34:	add	ip, ip, #73728	; 0x12000
 e38:	ldr	pc, [ip, #616]!	; 0x268

Disassembly of section .text:

00000e3c <call_weak_fn>:
     e3c:	ldr	r3, [pc, #20]	; e58 <call_weak_fn+0x1c>
     e40:	ldr	r2, [pc, #20]	; e5c <call_weak_fn+0x20>
     e44:	add	r3, pc, r3
     e48:	ldr	r2, [r3, r2]
     e4c:	cmp	r2, #0
     e50:	bxeq	lr
     e54:	b	d64 <__gmon_start__@plt>
     e58:	.word	0x000121b4
     e5c:	.word	0x000000c0

00000e60 <deregister_tm_clones>:
     e60:	ldr	r0, [pc, #44]	; e94 <deregister_tm_clones+0x34>
     e64:	ldr	r3, [pc, #44]	; e98 <deregister_tm_clones+0x38>
     e68:	add	r0, pc, r0
     e6c:	add	r3, pc, r3
     e70:	cmp	r3, r0
     e74:	ldr	r3, [pc, #32]	; e9c <deregister_tm_clones+0x3c>
     e78:	add	r3, pc, r3
     e7c:	bxeq	lr
     e80:	ldr	r2, [pc, #24]	; ea0 <deregister_tm_clones+0x40>
     e84:	ldr	r3, [r3, r2]
     e88:	cmp	r3, #0
     e8c:	bxeq	lr
     e90:	bx	r3
     e94:	.word	0x00012328
     e98:	.word	0x00012324
     e9c:	.word	0x00012180
     ea0:	.word	0x000000a8

00000ea4 <register_tm_clones>:
     ea4:	ldr	r0, [pc, #56]	; ee4 <register_tm_clones+0x40>
     ea8:	ldr	r3, [pc, #56]	; ee8 <register_tm_clones+0x44>
     eac:	add	r0, pc, r0
     eb0:	add	r3, pc, r3
     eb4:	sub	r1, r3, r0
     eb8:	ldr	r3, [pc, #44]	; eec <register_tm_clones+0x48>
     ebc:	asr	r1, r1, #2
     ec0:	add	r3, pc, r3
     ec4:	add	r1, r1, r1, lsr #31
     ec8:	asrs	r1, r1, #1
     ecc:	bxeq	lr
     ed0:	ldr	r2, [pc, #24]	; ef0 <register_tm_clones+0x4c>
     ed4:	ldr	r3, [r3, r2]
     ed8:	cmp	r3, #0
     edc:	bxeq	lr
     ee0:	bx	r3
     ee4:	.word	0x000122e4
     ee8:	.word	0x000122e0
     eec:	.word	0x00012138
     ef0:	.word	0x000000c8

00000ef4 <__do_global_dtors_aux>:
     ef4:	ldr	r3, [pc, #76]	; f48 <__do_global_dtors_aux+0x54>
     ef8:	ldr	r2, [pc, #76]	; f4c <__do_global_dtors_aux+0x58>
     efc:	add	r3, pc, r3
     f00:	add	r2, pc, r2
     f04:	ldrb	r3, [r3]
     f08:	cmp	r3, #0
     f0c:	bxne	lr
     f10:	ldr	r3, [pc, #56]	; f50 <__do_global_dtors_aux+0x5c>
     f14:	push	{r4, lr}
     f18:	ldr	r3, [r2, r3]
     f1c:	cmp	r3, #0
     f20:	beq	f30 <__do_global_dtors_aux+0x3c>
     f24:	ldr	r3, [pc, #40]	; f54 <__do_global_dtors_aux+0x60>
     f28:	ldr	r0, [pc, r3]
     f2c:	bl	ca4 <__cxa_finalize@plt>
     f30:	bl	e60 <deregister_tm_clones>
     f34:	ldr	r3, [pc, #28]	; f58 <__do_global_dtors_aux+0x64>
     f38:	mov	r2, #1
     f3c:	add	r3, pc, r3
     f40:	strb	r2, [r3]
     f44:	pop	{r4, pc}
     f48:	.word	0x00012294
     f4c:	.word	0x000120f8
     f50:	.word	0x000000a4
     f54:	.word	0x000121a8
     f58:	.word	0x00012254

00000f5c <frame_dummy>:
     f5c:	b	ea4 <register_tm_clones>

00000f60 <ms_xline>:
     f60:	push	{r4, r5, fp, lr}
     f64:	add	fp, sp, #8
     f68:	sub	sp, sp, #8
     f6c:	ldr	r5, [fp, #8]
     f70:	mov	r4, r2
     f74:	ldr	r0, [r5, #12]
     f78:	ldmib	r5, {r1, r3}
     f7c:	ldr	r2, [r5, #16]
     f80:	stm	sp, {r0, r2}
     f84:	mov	r0, r4
     f88:	mov	r2, #0
     f8c:	bl	164c <propagate_xline>
     f90:	ldrh	r0, [r4, #80]	; 0x50
     f94:	cmp	r0, #64	; 0x40
     f98:	bne	fe0 <ms_xline+0x80>
     f9c:	ldr	r0, [r4, #24]
     fa0:	cmp	r0, #0
     fa4:	beq	fe0 <ms_xline+0x80>
     fa8:	ldr	r0, [r5, #4]
     fac:	ldr	r1, [pc, #52]	; fe8 <ms_xline+0x88>
     fb0:	ldr	r1, [pc, r1]
     fb4:	add	r1, r1, #88	; 0x58
     fb8:	bl	db8 <match@plt>
     fbc:	cmp	r0, #0
     fc0:	beq	fe0 <ms_xline+0x80>
     fc4:	ldr	r2, [r5, #8]
     fc8:	ldr	r3, [r5, #16]
     fcc:	mov	r0, r4
     fd0:	mov	r1, #0
     fd4:	sub	sp, fp, #8
     fd8:	pop	{r4, r5, fp, lr}
     fdc:	b	1c1c <handle_remote_xline>
     fe0:	sub	sp, fp, #8
     fe4:	pop	{r4, r5, fp, pc}
     fe8:	.word	0x00012114

00000fec <me_xline>:
     fec:	push	{r4, r5, fp, lr}
     ff0:	add	fp, sp, #8
     ff4:	ldrh	r0, [r2, #80]	; 0x50
     ff8:	cmp	r0, #64	; 0x40
     ffc:	popne	{r4, r5, fp, pc}
    1000:	ldr	r0, [r2, #24]
    1004:	mov	r4, r2
    1008:	cmp	r0, #0
    100c:	beq	1034 <me_xline+0x48>
    1010:	ldr	r5, [fp, #8]
    1014:	ldr	r0, [r5, #4]
    1018:	bl	df4 <atoi@plt>
    101c:	ldr	r2, [r5, #8]
    1020:	ldr	r3, [r5, #16]
    1024:	mov	r1, r0
    1028:	mov	r0, r4
    102c:	pop	{r4, r5, fp, lr}
    1030:	b	1c1c <handle_remote_xline>
    1034:	pop	{r4, r5, fp, pc}

00001038 <mo_xline>:
    1038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    103c:	add	fp, sp, #28
    1040:	sub	sp, sp, #36	; 0x24
    1044:	ldr	r0, [r2, #24]
    1048:	ldr	r1, [pc, #860]	; 13ac <mo_xline+0x374>
    104c:	mov	r4, r2
    1050:	ldr	r1, [pc, r1]
    1054:	ldr	r5, [r1, #324]	; 0x144
    1058:	cmp	r5, #0
    105c:	mov	r6, r5
    1060:	movwne	r6, #1
    1064:	cmp	r0, #0
    1068:	beq	1168 <mo_xline+0x130>
    106c:	ldr	r0, [r0, #36]	; 0x24
    1070:	cmp	r0, #0
    1074:	beq	1168 <mo_xline+0x130>
    1078:	ldr	r8, [fp, #8]
    107c:	ldr	r1, [pc, #812]	; 13b0 <mo_xline+0x378>
    1080:	mov	r7, r3
    1084:	add	r1, pc, r1
    1088:	bl	e18 <privilegeset_in_set@plt>
    108c:	cmp	r0, #0
    1090:	beq	1168 <mo_xline+0x130>
    1094:	ldr	r0, [r8, #4]
    1098:	bl	dc4 <valid_temp_time@plt>
    109c:	cmn	r0, #1
    10a0:	mov	r9, #1
    10a4:	mov	r3, r0
    10a8:	mov	r1, #0
    10ac:	movwgt	r9, #2
    10b0:	movle	r3, r1
    10b4:	ldr	r0, [r8, r9, lsl #2]
    10b8:	add	sl, r9, #1
    10bc:	str	r0, [sp, #32]
    10c0:	add	r0, r9, #3
    10c4:	cmp	r0, r7
    10c8:	bgt	10f4 <mo_xline+0xbc>
    10cc:	str	r0, [sp, #24]
    10d0:	ldr	r0, [r8, sl, lsl #2]
    10d4:	ldr	r1, [pc, #740]	; 13c0 <mo_xline+0x388>
    10d8:	str	r3, [sp, #28]
    10dc:	add	r1, pc, r1
    10e0:	bl	e24 <irccmp@plt>
    10e4:	ldr	r3, [sp, #28]
    10e8:	mov	r1, #0
    10ec:	cmp	r0, #0
    10f0:	beq	11c4 <mo_xline+0x18c>
    10f4:	cmp	sl, r7
    10f8:	bge	119c <mo_xline+0x164>
    10fc:	ldr	r9, [r8, sl, lsl #2]
    1100:	cmp	r9, #0
    1104:	beq	119c <mo_xline+0x164>
    1108:	ldrb	r0, [r9]
    110c:	cmp	r0, #0
    1110:	beq	119c <mo_xline+0x164>
    1114:	cmp	r1, #0
    1118:	beq	1210 <mo_xline+0x1d8>
    111c:	ldr	r0, [pc, #692]	; 13d8 <mo_xline+0x3a0>
    1120:	mov	r5, r3
    1124:	mov	r2, r3
    1128:	mov	r6, r1
    112c:	add	r0, pc, r0
    1130:	stm	sp, {r0, r9}
    1134:	mov	r0, r4
    1138:	ldr	r8, [sp, #32]
    113c:	mov	r3, r8
    1140:	bl	164c <propagate_xline>
    1144:	ldr	r0, [pc, #656]	; 13dc <mo_xline+0x3a4>
    1148:	ldr	r0, [pc, r0]
    114c:	add	r1, r0, #88	; 0x58
    1150:	mov	r0, r6
    1154:	bl	db8 <match@plt>
    1158:	mov	r6, #0
    115c:	cmp	r0, #0
    1160:	bne	1308 <mo_xline+0x2d0>
    1164:	b	1194 <mo_xline+0x15c>
    1168:	ldr	r0, [pc, #580]	; 13b4 <mo_xline+0x37c>
    116c:	add	r0, pc, r0
    1170:	str	r0, [sp]
    1174:	add	r3, r4, #88	; 0x58
    1178:	ldr	r0, [pc, #568]	; 13b8 <mo_xline+0x380>
    117c:	ldr	r0, [pc, r0]
    1180:	ldr	r1, [pc, #564]	; 13bc <mo_xline+0x384>
    1184:	add	r2, r0, #88	; 0x58
    1188:	add	r1, pc, r1
    118c:	mov	r0, r4
    1190:	bl	cb0 <sendto_one@plt>
    1194:	sub	sp, fp, #28
    1198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    119c:	ldr	r0, [pc, #552]	; 13cc <mo_xline+0x394>
    11a0:	add	r3, r4, #88	; 0x58
    11a4:	add	r0, pc, r0
    11a8:	str	r0, [sp]
    11ac:	ldr	r0, [pc, #540]	; 13d0 <mo_xline+0x398>
    11b0:	ldr	r0, [pc, r0]
    11b4:	ldr	r1, [pc, #536]	; 13d4 <mo_xline+0x39c>
    11b8:	add	r2, r0, #88	; 0x58
    11bc:	add	r1, pc, r1
    11c0:	b	118c <mo_xline+0x154>
    11c4:	ldr	r0, [r4, #24]
    11c8:	cmp	r0, #0
    11cc:	beq	1204 <mo_xline+0x1cc>
    11d0:	ldr	r0, [r0, #36]	; 0x24
    11d4:	cmp	r0, #0
    11d8:	beq	1204 <mo_xline+0x1cc>
    11dc:	ldr	r1, [pc, #480]	; 13c4 <mo_xline+0x38c>
    11e0:	add	r1, pc, r1
    11e4:	bl	e18 <privilegeset_in_set@plt>
    11e8:	ldr	r3, [sp, #28]
    11ec:	cmp	r0, #0
    11f0:	beq	1204 <mo_xline+0x1cc>
    11f4:	add	r0, r8, r9, lsl #2
    11f8:	ldr	sl, [sp, #24]
    11fc:	ldr	r1, [r0, #8]
    1200:	b	10f4 <mo_xline+0xbc>
    1204:	ldr	r0, [pc, #444]	; 13c8 <mo_xline+0x390>
    1208:	add	r0, pc, r0
    120c:	b	1170 <mo_xline+0x138>
    1210:	ldr	r0, [pc, #456]	; 13e0 <mo_xline+0x3a8>
    1214:	ldr	r0, [pc, r0]
    1218:	ldr	r8, [sp, #32]
    121c:	ldr	r1, [r0, #8]
    1220:	cmp	r1, #0
    1224:	beq	1304 <mo_xline+0x2cc>
    1228:	cmp	r5, #0
    122c:	bne	1304 <mo_xline+0x2cc>
    1230:	ldr	r5, [r0]
    1234:	cmp	r5, #0
    1238:	beq	1304 <mo_xline+0x2cc>
    123c:	ldr	sl, [pc, #416]	; 13e4 <mo_xline+0x3ac>
    1240:	ldr	sl, [pc, sl]
    1244:	ldr	r7, [r5]
    1248:	cmp	r3, #0
    124c:	ldr	r0, [r7, #12]
    1250:	beq	1288 <mo_xline+0x250>
    1254:	tst	r0, #16
    1258:	beq	12f8 <mo_xline+0x2c0>
    125c:	ldr	r1, [r7, #8]
    1260:	ldr	r2, [sl]
    1264:	ldr	r0, [pc, #396]	; 13f8 <mo_xline+0x3c0>
    1268:	mov	r7, r3
    126c:	add	r0, pc, r0
    1270:	stm	sp, {r0, r1, r3, r8, r9}
    1274:	mov	r0, r4
    1278:	mov	r3, #0
    127c:	bl	c98 <sendto_match_servs@plt>
    1280:	mov	r3, r7
    1284:	b	12f8 <mo_xline+0x2c0>
    1288:	tst	r0, #32
    128c:	beq	12f8 <mo_xline+0x2c0>
    1290:	ldr	r0, [pc, #336]	; 13e8 <mo_xline+0x3b0>
    1294:	ldr	r0, [pc, r0]
    1298:	ldr	r1, [r7, #8]
    129c:	ldr	r2, [r0]
    12a0:	ldr	r0, [pc, #324]	; 13ec <mo_xline+0x3b4>
    12a4:	add	r0, pc, r0
    12a8:	stm	sp, {r0, r1, r8, r9}
    12ac:	mov	r8, r3
    12b0:	mov	r0, r4
    12b4:	mov	r3, #0
    12b8:	bl	c98 <sendto_match_servs@plt>
    12bc:	ldr	r0, [pc, #300]	; 13f0 <mo_xline+0x3b8>
    12c0:	ldr	r0, [pc, r0]
    12c4:	ldr	r2, [sl]
    12c8:	ldr	r1, [r7, #8]
    12cc:	ldr	r3, [r0]
    12d0:	ldr	r0, [pc, #284]	; 13f4 <mo_xline+0x3bc>
    12d4:	add	r0, pc, r0
    12d8:	stm	sp, {r0, r1}
    12dc:	ldr	r0, [sp, #32]
    12e0:	str	r9, [sp, #12]
    12e4:	str	r0, [sp, #8]
    12e8:	mov	r0, r4
    12ec:	bl	c98 <sendto_match_servs@plt>
    12f0:	mov	r3, r8
    12f4:	ldr	r8, [sp, #32]
    12f8:	ldr	r5, [r5, #8]
    12fc:	cmp	r5, #0
    1300:	bne	1244 <mo_xline+0x20c>
    1304:	mov	r5, r3
    1308:	mov	r0, r8
    130c:	bl	d94 <find_xline_mask@plt>
    1310:	cmp	r0, #0
    1314:	beq	1348 <mo_xline+0x310>
    1318:	ldr	r1, [r0, #16]
    131c:	ldr	r0, [r0, #20]
    1320:	str	r8, [sp]
    1324:	add	r3, r4, #88	; 0x58
    1328:	str	r1, [sp, #4]
    132c:	str	r0, [sp, #8]
    1330:	ldr	r0, [pc, #196]	; 13fc <mo_xline+0x3c4>
    1334:	ldr	r0, [pc, r0]
    1338:	ldr	r1, [pc, #192]	; 1400 <mo_xline+0x3c8>
    133c:	add	r2, r0, #88	; 0x58
    1340:	add	r1, pc, r1
    1344:	b	118c <mo_xline+0x154>
    1348:	mov	r0, r4
    134c:	mov	r1, r8
    1350:	mov	r2, r9
    1354:	bl	1734 <valid_xline>
    1358:	cmp	r0, #0
    135c:	beq	1194 <mo_xline+0x15c>
    1360:	cmp	r5, #0
    1364:	mov	r1, r5
    1368:	eor	r0, r6, #1
    136c:	movwne	r1, #1
    1370:	orrs	r0, r1, r0
    1374:	bne	1390 <mo_xline+0x358>
    1378:	ldr	r1, [pc, #132]	; 1404 <mo_xline+0x3cc>
    137c:	mov	r0, r4
    1380:	add	r1, pc, r1
    1384:	sub	sp, fp, #28
    1388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    138c:	b	ddc <sendto_one_notice@plt>
    1390:	mov	r3, r5
    1394:	mov	r0, r4
    1398:	mov	r1, r8
    139c:	mov	r2, r9
    13a0:	str	r6, [sp]
    13a4:	bl	1824 <apply_xline>
    13a8:	b	1194 <mo_xline+0x15c>
    13ac:	.word	0x0001207c
    13b0:	.word	0x00001094
    13b4:	.word	0x0000111e
    13b8:	.word	0x00011f48
    13bc:	.word	0x00000f9b
    13c0:	.word	0x0000106e
    13c4:	.word	0x00000f6d
    13c8:	.word	0x00000f4a
    13cc:	.word	0x00000f6e
    13d0:	.word	0x00011f14
    13d4:	.word	0x00000fa0
    13d8:	.word	0x00001055
    13dc:	.word	0x00011f7c
    13e0:	.word	0x00011ea8
    13e4:	.word	0x00011e88
    13e8:	.word	0x00011e18
    13ec:	.word	0x00000f7d
    13f0:	.word	0x00011dec
    13f4:	.word	0x00000f5f
    13f8:	.word	0x00000f7e
    13fc:	.word	0x00011d90
    1400:	.word	0x00000e43
    1404:	.word	0x00000e34

00001408 <ms_unxline>:
    1408:	push	{r4, r5, fp, lr}
    140c:	add	fp, sp, #8
    1410:	sub	sp, sp, #8
    1414:	ldr	r0, [pc, #132]	; 14a0 <ms_unxline+0x98>
    1418:	mov	r4, r2
    141c:	ldr	r0, [pc, r0]
    1420:	ldr	r5, [fp, #8]
    1424:	ldr	r3, [r0]
    1428:	ldr	r2, [r5, #4]
    142c:	ldr	r0, [r5, #8]
    1430:	ldr	r1, [pc, #108]	; 14a4 <ms_unxline+0x9c>
    1434:	add	r1, pc, r1
    1438:	str	r0, [sp, #4]
    143c:	mov	r0, r4
    1440:	str	r1, [sp]
    1444:	ldr	r1, [pc, #92]	; 14a8 <ms_unxline+0xa0>
    1448:	add	r1, pc, r1
    144c:	bl	c74 <propagate_generic@plt>
    1450:	ldr	r0, [r5, #4]
    1454:	ldr	r1, [pc, #80]	; 14ac <ms_unxline+0xa4>
    1458:	ldr	r1, [pc, r1]
    145c:	add	r1, r1, #88	; 0x58
    1460:	bl	db8 <match@plt>
    1464:	cmp	r0, #0
    1468:	beq	1498 <ms_unxline+0x90>
    146c:	ldrh	r0, [r4, #80]	; 0x50
    1470:	cmp	r0, #64	; 0x40
    1474:	bne	1498 <ms_unxline+0x90>
    1478:	ldr	r0, [r4, #24]
    147c:	cmp	r0, #0
    1480:	beq	1498 <ms_unxline+0x90>
    1484:	ldr	r1, [r5, #8]
    1488:	mov	r0, r4
    148c:	sub	sp, fp, #8
    1490:	pop	{r4, r5, fp, lr}
    1494:	b	20cc <handle_remote_unxline>
    1498:	sub	sp, fp, #8
    149c:	pop	{r4, r5, fp, pc}
    14a0:	.word	0x00011c90
    14a4:	.word	0x00000d7d
    14a8:	.word	0x00000cc8
    14ac:	.word	0x00011c6c

000014b0 <me_unxline>:
    14b0:	ldrh	r0, [r2, #80]	; 0x50
    14b4:	cmp	r0, #64	; 0x40
    14b8:	bxne	lr
    14bc:	ldr	r0, [r2, #24]
    14c0:	cmp	r0, #0
    14c4:	beq	14d8 <me_unxline+0x28>
    14c8:	ldr	r0, [sp]
    14cc:	ldr	r1, [r0, #4]
    14d0:	mov	r0, r2
    14d4:	b	20cc <handle_remote_unxline>
    14d8:	bx	lr

000014dc <mo_unxline>:
    14dc:	push	{r4, r5, r6, r7, fp, lr}
    14e0:	add	fp, sp, #16
    14e4:	sub	sp, sp, #8
    14e8:	ldr	r0, [r2, #24]
    14ec:	mov	r4, r2
    14f0:	cmp	r0, #0
    14f4:	beq	155c <mo_unxline+0x80>
    14f8:	ldr	r0, [r0, #36]	; 0x24
    14fc:	cmp	r0, #0
    1500:	beq	155c <mo_unxline+0x80>
    1504:	ldr	r7, [fp, #8]
    1508:	ldr	r1, [pc, #272]	; 1620 <mo_unxline+0x144>
    150c:	mov	r6, r3
    1510:	add	r1, pc, r1
    1514:	bl	e18 <privilegeset_in_set@plt>
    1518:	cmp	r0, #0
    151c:	beq	155c <mo_unxline+0x80>
    1520:	mov	r5, #1
    1524:	cmp	r6, #4
    1528:	bne	1544 <mo_unxline+0x68>
    152c:	ldr	r0, [r7, #8]
    1530:	ldr	r1, [pc, #248]	; 1630 <mo_unxline+0x154>
    1534:	add	r1, pc, r1
    1538:	bl	e24 <irccmp@plt>
    153c:	cmp	r0, #0
    1540:	beq	1590 <mo_unxline+0xb4>
    1544:	ldr	r1, [r7, #4]
    1548:	mov	r0, r4
    154c:	mov	r2, r5
    1550:	sub	sp, fp, #16
    1554:	pop	{r4, r5, r6, r7, fp, lr}
    1558:	b	1cd4 <remove_xline>
    155c:	ldr	r0, [pc, #192]	; 1624 <mo_unxline+0x148>
    1560:	add	r0, pc, r0
    1564:	str	r0, [sp]
    1568:	add	r3, r4, #88	; 0x58
    156c:	ldr	r0, [pc, #180]	; 1628 <mo_unxline+0x14c>
    1570:	ldr	r0, [pc, r0]
    1574:	ldr	r1, [pc, #176]	; 162c <mo_unxline+0x150>
    1578:	add	r2, r0, #88	; 0x58
    157c:	add	r1, pc, r1
    1580:	mov	r0, r4
    1584:	bl	cb0 <sendto_one@plt>
    1588:	sub	sp, fp, #16
    158c:	pop	{r4, r5, r6, r7, fp, pc}
    1590:	ldr	r0, [r4, #24]
    1594:	cmp	r0, #0
    1598:	beq	1614 <mo_unxline+0x138>
    159c:	ldr	r0, [r0, #36]	; 0x24
    15a0:	cmp	r0, #0
    15a4:	beq	1614 <mo_unxline+0x138>
    15a8:	ldr	r1, [pc, #132]	; 1634 <mo_unxline+0x158>
    15ac:	add	r1, pc, r1
    15b0:	bl	e18 <privilegeset_in_set@plt>
    15b4:	cmp	r0, #0
    15b8:	beq	1614 <mo_unxline+0x138>
    15bc:	ldr	r0, [pc, #120]	; 163c <mo_unxline+0x160>
    15c0:	ldr	r0, [pc, r0]
    15c4:	ldr	r2, [r7, #12]
    15c8:	ldr	r3, [r0]
    15cc:	ldr	r0, [r7, #4]
    15d0:	ldr	r1, [pc, #104]	; 1640 <mo_unxline+0x164>
    15d4:	add	r1, pc, r1
    15d8:	str	r0, [sp, #4]
    15dc:	mov	r0, r4
    15e0:	str	r1, [sp]
    15e4:	ldr	r1, [pc, #88]	; 1644 <mo_unxline+0x168>
    15e8:	add	r1, pc, r1
    15ec:	bl	c74 <propagate_generic@plt>
    15f0:	ldr	r0, [r7, #12]
    15f4:	ldr	r1, [pc, #76]	; 1648 <mo_unxline+0x16c>
    15f8:	ldr	r1, [pc, r1]
    15fc:	add	r1, r1, #88	; 0x58
    1600:	bl	db8 <match@plt>
    1604:	mov	r5, #0
    1608:	cmp	r0, #0
    160c:	bne	1544 <mo_unxline+0x68>
    1610:	b	1588 <mo_unxline+0xac>
    1614:	ldr	r0, [pc, #28]	; 1638 <mo_unxline+0x15c>
    1618:	add	r0, pc, r0
    161c:	b	1564 <mo_unxline+0x88>
    1620:	.word	0x00000c08
    1624:	.word	0x00000d2a
    1628:	.word	0x00011b54
    162c:	.word	0x00000ba7
    1630:	.word	0x00000c16
    1634:	.word	0x00000ba1
    1638:	.word	0x00000b3a
    163c:	.word	0x00011aec
    1640:	.word	0x00000bdd
    1644:	.word	0x00000b28
    1648:	.word	0x00011acc

0000164c <propagate_xline>:
    164c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1650:	add	fp, sp, #24
    1654:	sub	sp, sp, #24
    1658:	mov	r5, r0
    165c:	ldr	r7, [fp, #12]
    1660:	ldr	r0, [fp, #8]
    1664:	mov	r6, r3
    1668:	mov	r4, r1
    166c:	cmp	r2, #0
    1670:	beq	16b0 <propagate_xline+0x64>
    1674:	ldr	r1, [pc, #176]	; 172c <propagate_xline+0xe0>
    1678:	ldr	r1, [pc, r1]
    167c:	ldr	r3, [r1]
    1680:	ldr	r1, [pc, #168]	; 1730 <propagate_xline+0xe4>
    1684:	add	r1, pc, r1
    1688:	stm	sp, {r1, r4}
    168c:	str	r2, [sp, #8]
    1690:	str	r0, [sp, #16]
    1694:	mov	r2, r3
    1698:	mov	r0, r5
    169c:	mov	r1, r4
    16a0:	mov	r3, #0
    16a4:	str	r6, [sp, #12]
    16a8:	str	r7, [sp, #20]
    16ac:	b	1710 <propagate_xline+0xc4>
    16b0:	ldr	r8, [pc, #100]	; 171c <propagate_xline+0xd0>
    16b4:	mov	r3, #0
    16b8:	mov	r9, #0
    16bc:	ldr	r8, [pc, r8]
    16c0:	ldr	r2, [r8]
    16c4:	ldr	r1, [pc, #84]	; 1720 <propagate_xline+0xd4>
    16c8:	add	r1, pc, r1
    16cc:	stm	sp, {r1, r4, r6}
    16d0:	str	r0, [sp, #12]
    16d4:	mov	r0, r5
    16d8:	mov	r1, r4
    16dc:	str	r7, [sp, #16]
    16e0:	bl	c98 <sendto_match_servs@plt>
    16e4:	ldr	r3, [r8]
    16e8:	ldr	r0, [pc, #52]	; 1724 <propagate_xline+0xd8>
    16ec:	mov	r1, r4
    16f0:	ldr	r0, [pc, r0]
    16f4:	ldr	r2, [r0]
    16f8:	ldr	r0, [pc, #40]	; 1728 <propagate_xline+0xdc>
    16fc:	add	r0, pc, r0
    1700:	stm	sp, {r0, r4, r9}
    1704:	str	r6, [sp, #12]
    1708:	str	r7, [sp, #16]
    170c:	mov	r0, r5
    1710:	bl	c98 <sendto_match_servs@plt>
    1714:	sub	sp, fp, #24
    1718:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    171c:	.word	0x000119f0
    1720:	.word	0x00000b0f
    1724:	.word	0x000119d8
    1728:	.word	0x00000aee
    172c:	.word	0x00011a50
    1730:	.word	0x00000b81

00001734 <valid_xline>:
    1734:	push	{r4, sl, fp, lr}
    1738:	add	fp, sp, #8
    173c:	sub	sp, sp, #8
    1740:	mov	r4, r0
    1744:	cmp	r2, #0
    1748:	beq	1790 <valid_xline+0x5c>
    174c:	ldrb	r0, [r2]
    1750:	cmp	r0, #0
    1754:	beq	1790 <valid_xline+0x5c>
    1758:	mov	r0, r1
    175c:	bl	e00 <valid_wild_card_simple@plt>
    1760:	mov	r1, r0
    1764:	mov	r0, #1
    1768:	cmp	r1, #0
    176c:	bne	1804 <valid_xline+0xd0>
    1770:	ldr	r0, [pc, #164]	; 181c <valid_xline+0xe8>
    1774:	ldr	r0, [pc, r0]
    1778:	ldr	r2, [r0, #240]	; 0xf0
    177c:	ldr	r1, [pc, #156]	; 1820 <valid_xline+0xec>
    1780:	mov	r0, r4
    1784:	add	r1, pc, r1
    1788:	bl	ddc <sendto_one_notice@plt>
    178c:	b	1800 <valid_xline+0xcc>
    1790:	ldr	r0, [r4, #36]	; 0x24
    1794:	ldrh	r1, [r0, #80]	; 0x50
    1798:	cmp	r1, #32
    179c:	bne	17d4 <valid_xline+0xa0>
    17a0:	ldrb	r0, [r0, #396]	; 0x18c
    17a4:	cmp	r0, #0
    17a8:	beq	17d4 <valid_xline+0xa0>
    17ac:	mov	r3, r4
    17b0:	ldrb	r0, [r3, #396]!	; 0x18c
    17b4:	ldr	r2, [pc, #80]	; 180c <valid_xline+0xd8>
    17b8:	ldr	r2, [pc, r2]
    17bc:	cmp	r0, #0
    17c0:	subeq	r3, r3, #308	; 0x134
    17c4:	ldrb	r0, [r2, #396]!	; 0x18c
    17c8:	cmp	r0, #0
    17cc:	subeq	r2, r2, #308	; 0x134
    17d0:	b	17e4 <valid_xline+0xb0>
    17d4:	ldr	r0, [pc, #52]	; 1810 <valid_xline+0xdc>
    17d8:	add	r3, r4, #88	; 0x58
    17dc:	ldr	r0, [pc, r0]
    17e0:	add	r2, r0, #88	; 0x58
    17e4:	ldr	r0, [pc, #40]	; 1814 <valid_xline+0xe0>
    17e8:	add	r0, pc, r0
    17ec:	str	r0, [sp]
    17f0:	mov	r0, r4
    17f4:	ldr	r1, [pc, #28]	; 1818 <valid_xline+0xe4>
    17f8:	add	r1, pc, r1
    17fc:	bl	cb0 <sendto_one@plt>
    1800:	mov	r0, #0
    1804:	sub	sp, fp, #8
    1808:	pop	{r4, sl, fp, pc}
    180c:	.word	0x0001190c
    1810:	.word	0x000118e8
    1814:	.word	0x0000092a
    1818:	.word	0x00000964
    181c:	.word	0x00011958
    1820:	.word	0x00000ac9

00001824 <apply_xline>:
    1824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1828:	add	fp, sp, #28
    182c:	sub	sp, sp, #28
    1830:	mov	r9, r3
    1834:	mov	r8, r2
    1838:	mov	r5, r1
    183c:	mov	sl, r0
    1840:	bl	c80 <make_conf@plt>
    1844:	mov	r4, r0
    1848:	mov	r0, #128	; 0x80
    184c:	str	r0, [r4]
    1850:	bl	c8c <rb_current_time@plt>
    1854:	str	r0, [r4, #40]	; 0x28
    1858:	mov	r0, r5
    185c:	bl	d88 <strlen@plt>
    1860:	add	r0, r0, #1
    1864:	bl	d58 <malloc@plt>
    1868:	cmp	r0, #0
    186c:	beq	1bb4 <apply_xline+0x390>
    1870:	ldr	r6, [fp, #8]
    1874:	mov	r1, r5
    1878:	bl	d40 <strcpy@plt>
    187c:	str	r0, [r4, #16]
    1880:	mov	r0, r8
    1884:	bl	d88 <strlen@plt>
    1888:	add	r0, r0, #1
    188c:	bl	d58 <malloc@plt>
    1890:	cmp	r0, #0
    1894:	beq	1bb4 <apply_xline+0x390>
    1898:	mov	r1, r8
    189c:	bl	d40 <strcpy@plt>
    18a0:	str	r0, [r4, #20]
    18a4:	ldr	r0, [r4, #16]
    18a8:	bl	dac <collapse@plt>
    18ac:	mov	r0, sl
    18b0:	bl	d10 <get_oper_name@plt>
    18b4:	bl	d34 <operhash_add@plt>
    18b8:	cmp	r6, #0
    18bc:	str	r0, [r4, #12]
    18c0:	beq	1924 <apply_xline+0x100>
    18c4:	ldr	r0, [r4, #4]
    18c8:	orr	r0, r0, #8912896	; 0x880000
    18cc:	str	r0, [r4, #4]
    18d0:	bl	c8c <rb_current_time@plt>
    18d4:	add	r0, r0, r9
    18d8:	str	r0, [r4, #44]	; 0x2c
    18dc:	str	r0, [r4, #36]	; 0x24
    18e0:	mov	r0, r4
    18e4:	bl	cbc <replace_old_ban@plt>
    18e8:	bl	d7c <rb_make_rb_dlink_node@plt>
    18ec:	cmp	r0, #0
    18f0:	beq	1bb8 <apply_xline+0x394>
    18f4:	mov	r1, #0
    18f8:	str	r1, [r0, #4]
    18fc:	str	r4, [r0]
    1900:	ldr	r1, [pc, #720]	; 1bd8 <apply_xline+0x3b4>
    1904:	ldr	r1, [pc, r1]
    1908:	ldr	r2, [r1]
    190c:	cmp	r2, #0
    1910:	str	r2, [r0, #8]
    1914:	beq	1a48 <apply_xline+0x224>
    1918:	add	r2, r2, #4
    191c:	str	r0, [r2]
    1920:	b	1a58 <apply_xline+0x234>
    1924:	cmp	r9, #1
    1928:	blt	19b4 <apply_xline+0x190>
    192c:	bl	c8c <rb_current_time@plt>
    1930:	add	r0, r0, r9
    1934:	str	r0, [r4, #36]	; 0x24
    1938:	mov	r0, sl
    193c:	bl	d10 <get_oper_name@plt>
    1940:	movw	r1, #34953	; 0x8889
    1944:	mov	r3, r0
    1948:	ldr	r0, [r4, #16]
    194c:	movt	r1, #34952	; 0x8888
    1950:	umull	r1, r2, r9, r1
    1954:	mov	r1, #0
    1958:	lsr	r6, r2, #5
    195c:	str	r6, [sp]
    1960:	stmib	sp, {r0, r8}
    1964:	mov	r0, #256	; 0x100
    1968:	ldr	r2, [pc, #644]	; 1bf4 <apply_xline+0x3d0>
    196c:	add	r2, pc, r2
    1970:	bl	ce0 <sendto_realops_snomask@plt>
    1974:	mov	r0, sl
    1978:	bl	d10 <get_oper_name@plt>
    197c:	stm	sp, {r5, r8}
    1980:	mov	r2, r0
    1984:	mov	r0, #7
    1988:	mov	r3, r6
    198c:	ldr	r1, [pc, #612]	; 1bf8 <apply_xline+0x3d4>
    1990:	add	r1, pc, r1
    1994:	bl	da0 <ilog@plt>
    1998:	ldr	r3, [r4, #16]
    199c:	ldr	r1, [pc, #600]	; 1bfc <apply_xline+0x3d8>
    19a0:	mov	r0, sl
    19a4:	mov	r2, r6
    19a8:	add	r1, pc, r1
    19ac:	bl	ddc <sendto_one_notice@plt>
    19b0:	b	1b4c <apply_xline+0x328>
    19b4:	mov	r0, sl
    19b8:	bl	d10 <get_oper_name@plt>
    19bc:	mov	r3, r0
    19c0:	ldr	r0, [r4, #16]
    19c4:	ldr	r1, [r4, #20]
    19c8:	mov	r6, #0
    19cc:	stm	sp, {r0, r1}
    19d0:	mov	r0, #256	; 0x100
    19d4:	mov	r1, #0
    19d8:	ldr	r2, [pc, #544]	; 1c00 <apply_xline+0x3dc>
    19dc:	add	r2, pc, r2
    19e0:	bl	ce0 <sendto_realops_snomask@plt>
    19e4:	ldr	r2, [r4, #16]
    19e8:	ldr	r3, [r4, #20]
    19ec:	ldr	r1, [pc, #528]	; 1c04 <apply_xline+0x3e0>
    19f0:	mov	r0, sl
    19f4:	add	r1, pc, r1
    19f8:	bl	ddc <sendto_one_notice@plt>
    19fc:	ldr	r0, [r4, #20]
    1a00:	ldr	r2, [r4, #16]
    1a04:	mov	r1, sl
    1a08:	mov	r3, #0
    1a0c:	stm	sp, {r0, r6}
    1a10:	mov	r0, #2
    1a14:	str	r6, [sp, #8]
    1a18:	bl	cec <bandb_add@plt>
    1a1c:	mov	r0, sl
    1a20:	bl	d10 <get_oper_name@plt>
    1a24:	mov	r2, r0
    1a28:	ldr	r0, [r4, #20]
    1a2c:	mov	r3, r5
    1a30:	str	r0, [sp]
    1a34:	mov	r0, #7
    1a38:	ldr	r1, [pc, #456]	; 1c08 <apply_xline+0x3e4>
    1a3c:	add	r1, pc, r1
    1a40:	bl	da0 <ilog@plt>
    1a44:	b	1b4c <apply_xline+0x328>
    1a48:	mov	r2, r1
    1a4c:	ldr	r3, [r2, #4]!
    1a50:	cmp	r3, #0
    1a54:	streq	r0, [r2]
    1a58:	str	r0, [r1]
    1a5c:	ldr	r0, [r1, #8]
    1a60:	add	r0, r0, #1
    1a64:	str	r0, [r1, #8]
    1a68:	mov	r0, sl
    1a6c:	bl	d10 <get_oper_name@plt>
    1a70:	movw	r1, #34953	; 0x8889
    1a74:	mov	r3, r0
    1a78:	ldr	r0, [r4, #16]
    1a7c:	movt	r1, #34952	; 0x8888
    1a80:	smmla	r1, r9, r1, r9
    1a84:	asr	r2, r1, #5
    1a88:	add	r6, r2, r1, lsr #31
    1a8c:	mov	r1, #0
    1a90:	str	r6, [sp]
    1a94:	stmib	sp, {r0, r8}
    1a98:	mov	r0, #256	; 0x100
    1a9c:	ldr	r2, [pc, #312]	; 1bdc <apply_xline+0x3b8>
    1aa0:	add	r2, pc, r2
    1aa4:	bl	ce0 <sendto_realops_snomask@plt>
    1aa8:	mov	r0, sl
    1aac:	bl	d10 <get_oper_name@plt>
    1ab0:	stm	sp, {r5, r8}
    1ab4:	mov	r2, r0
    1ab8:	mov	r0, #7
    1abc:	mov	r3, r6
    1ac0:	ldr	r1, [pc, #280]	; 1be0 <apply_xline+0x3bc>
    1ac4:	add	r1, pc, r1
    1ac8:	bl	da0 <ilog@plt>
    1acc:	ldr	r3, [r4, #16]
    1ad0:	ldr	r1, [pc, #268]	; 1be4 <apply_xline+0x3c0>
    1ad4:	mov	r0, sl
    1ad8:	mov	r2, r6
    1adc:	add	r1, pc, r1
    1ae0:	bl	ddc <sendto_one_notice@plt>
    1ae4:	ldr	r0, [pc, #252]	; 1be8 <apply_xline+0x3c4>
    1ae8:	add	r7, sl, #396	; 0x18c
    1aec:	ldr	r0, [pc, r0]
    1af0:	ldr	r0, [r0]
    1af4:	ldr	r1, [pc, #240]	; 1bec <apply_xline+0x3c8>
    1af8:	ldr	r1, [pc, r1]
    1afc:	ldr	r2, [r4, #16]
    1b00:	ldr	r3, [r4, #36]	; 0x24
    1b04:	ldr	r6, [r4, #40]	; 0x28
    1b08:	ldr	r5, [r4, #44]	; 0x2c
    1b0c:	ldr	r1, [r1]
    1b10:	ldr	ip, [pc, #216]	; 1bf0 <apply_xline+0x3cc>
    1b14:	str	r2, [sp, #8]
    1b18:	sub	r3, r3, r6
    1b1c:	add	r2, sp, #16
    1b20:	sub	r5, r5, r6
    1b24:	str	r7, [sp, #4]
    1b28:	str	r6, [sp, #12]
    1b2c:	add	ip, pc, ip
    1b30:	str	ip, [sp]
    1b34:	stm	r2, {r3, r5, r8}
    1b38:	orr	r2, r0, r1
    1b3c:	mov	r0, #0
    1b40:	mov	r1, #0
    1b44:	mov	r3, #0
    1b48:	bl	d4c <sendto_server@plt>
    1b4c:	bl	d7c <rb_make_rb_dlink_node@plt>
    1b50:	cmp	r0, #0
    1b54:	beq	1bb8 <apply_xline+0x394>
    1b58:	mov	r1, #0
    1b5c:	str	r1, [r0, #4]
    1b60:	str	r4, [r0]
    1b64:	ldr	r1, [pc, #160]	; 1c0c <apply_xline+0x3e8>
    1b68:	ldr	r1, [pc, r1]
    1b6c:	ldr	r2, [r1]
    1b70:	cmp	r2, #0
    1b74:	str	r2, [r0, #8]
    1b78:	beq	1b88 <apply_xline+0x364>
    1b7c:	add	r2, r2, #4
    1b80:	str	r0, [r2]
    1b84:	b	1b98 <apply_xline+0x374>
    1b88:	mov	r2, r1
    1b8c:	ldr	r3, [r2, #4]!
    1b90:	cmp	r3, #0
    1b94:	streq	r0, [r2]
    1b98:	str	r0, [r1]
    1b9c:	ldr	r0, [r1, #8]
    1ba0:	add	r0, r0, #1
    1ba4:	str	r0, [r1, #8]
    1ba8:	sub	sp, fp, #28
    1bac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1bb0:	b	d04 <check_xlines@plt>
    1bb4:	bl	cc8 <rb_outofmemory@plt>
    1bb8:	ldr	r0, [pc, #80]	; 1c10 <apply_xline+0x3ec>
    1bbc:	ldr	r1, [pc, #80]	; 1c14 <apply_xline+0x3f0>
    1bc0:	ldr	r3, [pc, #80]	; 1c18 <apply_xline+0x3f4>
    1bc4:	mov	r2, #144	; 0x90
    1bc8:	add	r0, pc, r0
    1bcc:	add	r1, pc, r1
    1bd0:	add	r3, pc, r3
    1bd4:	bl	e30 <__assert_fail@plt>
    1bd8:	.word	0x000117a0
    1bdc:	.word	0x000007f0
    1be0:	.word	0x000007f9
    1be4:	.word	0x000007ef
    1be8:	.word	0x000115c8
    1bec:	.word	0x000115b8
    1bf0:	.word	0x000007c1
    1bf4:	.word	0x000009a0
    1bf8:	.word	0x0000092d
    1bfc:	.word	0x00000994
    1c00:	.word	0x00000985
    1c04:	.word	0x0000098b
    1c08:	.word	0x0000095f
    1c0c:	.word	0x00011540
    1c10:	.word	0x00000837
    1c14:	.word	0x000007dc
    1c18:	.word	0x000007f4

00001c1c <handle_remote_xline>:
    1c1c:	push	{r4, r5, r6, r7, fp, lr}
    1c20:	add	fp, sp, #16
    1c24:	sub	sp, sp, #8
    1c28:	mov	r4, r2
    1c2c:	ldr	r2, [r0, #32]
    1c30:	mov	r5, r0
    1c34:	cmp	r1, #0
    1c38:	mov	r6, r3
    1c3c:	mov	r3, #32
    1c40:	mov	r7, r1
    1c44:	add	r0, r0, #152	; 0x98
    1c48:	movwgt	r3, #16
    1c4c:	add	r1, r5, #163	; 0xa3
    1c50:	add	r2, r2, #88	; 0x58
    1c54:	bl	e0c <find_shared_conf@plt>
    1c58:	cmp	r0, #0
    1c5c:	beq	1cc8 <handle_remote_xline+0xac>
    1c60:	mov	r0, r5
    1c64:	mov	r1, r4
    1c68:	mov	r2, r6
    1c6c:	bl	1734 <valid_xline>
    1c70:	cmp	r0, #0
    1c74:	beq	1cc8 <handle_remote_xline+0xac>
    1c78:	mov	r0, r4
    1c7c:	bl	d94 <find_xline_mask@plt>
    1c80:	cmp	r0, #0
    1c84:	beq	1cac <handle_remote_xline+0x90>
    1c88:	ldr	r3, [r0, #16]
    1c8c:	ldr	r0, [r0, #20]
    1c90:	mov	r2, r4
    1c94:	str	r0, [sp]
    1c98:	mov	r0, r5
    1c9c:	ldr	r1, [pc, #44]	; 1cd0 <handle_remote_xline+0xb4>
    1ca0:	add	r1, pc, r1
    1ca4:	bl	ddc <sendto_one_notice@plt>
    1ca8:	b	1cc8 <handle_remote_xline+0xac>
    1cac:	mov	r0, #0
    1cb0:	mov	r1, r4
    1cb4:	mov	r2, r6
    1cb8:	mov	r3, r7
    1cbc:	str	r0, [sp]
    1cc0:	mov	r0, r5
    1cc4:	bl	1824 <apply_xline>
    1cc8:	sub	sp, fp, #16
    1ccc:	pop	{r4, r5, r6, r7, fp, pc}
    1cd0:	.word	0x000004f1

00001cd4 <remove_xline>:
    1cd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1cd8:	add	fp, sp, #28
    1cdc:	sub	sp, sp, #28
    1ce0:	ldr	r9, [pc, #900]	; 206c <remove_xline+0x398>
    1ce4:	mov	r5, r2
    1ce8:	mov	r6, r1
    1cec:	mov	r8, r0
    1cf0:	ldr	r9, [pc, r9]
    1cf4:	ldr	r7, [r9]
    1cf8:	cmp	r7, #0
    1cfc:	beq	1d20 <remove_xline+0x4c>
    1d00:	ldr	r4, [r7]
    1d04:	mov	r1, r6
    1d08:	ldr	r0, [r4, #16]
    1d0c:	bl	e24 <irccmp@plt>
    1d10:	cmp	r0, #0
    1d14:	beq	1d80 <remove_xline+0xac>
    1d18:	ldr	r7, [r7, #8]
    1d1c:	b	1cf8 <remove_xline+0x24>
    1d20:	ldr	r0, [pc, #912]	; 20b8 <remove_xline+0x3e4>
    1d24:	ldr	r0, [pc, r0]
    1d28:	ldr	r0, [r0, #8]
    1d2c:	cmp	r0, #0
    1d30:	cmpne	r5, #0
    1d34:	beq	1d64 <remove_xline+0x90>
    1d38:	ldr	r0, [pc, #892]	; 20bc <remove_xline+0x3e8>
    1d3c:	mov	r2, #64	; 0x40
    1d40:	ldr	r0, [pc, r0]
    1d44:	ldr	r3, [r0]
    1d48:	ldr	r0, [pc, #880]	; 20c0 <remove_xline+0x3ec>
    1d4c:	add	r0, pc, r0
    1d50:	stm	sp, {r0, r6}
    1d54:	mov	r0, r8
    1d58:	ldr	r1, [pc, #868]	; 20c4 <remove_xline+0x3f0>
    1d5c:	add	r1, pc, r1
    1d60:	bl	d28 <cluster_generic@plt>
    1d64:	ldr	r1, [pc, #860]	; 20c8 <remove_xline+0x3f4>
    1d68:	add	r1, pc, r1
    1d6c:	mov	r0, r8
    1d70:	mov	r2, r6
    1d74:	sub	sp, fp, #28
    1d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d7c:	b	ddc <sendto_one_notice@plt>
    1d80:	ldr	r0, [r4, #44]	; 0x2c
    1d84:	cmp	r0, #0
    1d88:	beq	1dbc <remove_xline+0xe8>
    1d8c:	cmp	r5, #0
    1d90:	beq	1e64 <remove_xline+0x190>
    1d94:	ldr	r0, [pc, #728]	; 2074 <remove_xline+0x3a0>
    1d98:	ldr	r0, [pc, r0]
    1d9c:	ldr	r7, [r0]
    1da0:	cmp	r7, #0
    1da4:	beq	1e70 <remove_xline+0x19c>
    1da8:	ldr	r0, [r7]
    1dac:	cmp	r0, r4
    1db0:	beq	1f50 <remove_xline+0x27c>
    1db4:	ldr	r7, [r7, #8]
    1db8:	b	1da0 <remove_xline+0xcc>
    1dbc:	ldr	r0, [pc, #716]	; 2090 <remove_xline+0x3bc>
    1dc0:	ldr	r0, [pc, r0]
    1dc4:	ldr	r0, [r0, #8]
    1dc8:	cmp	r0, #0
    1dcc:	cmpne	r5, #0
    1dd0:	beq	1e00 <remove_xline+0x12c>
    1dd4:	ldr	r0, [pc, #696]	; 2094 <remove_xline+0x3c0>
    1dd8:	mov	r2, #64	; 0x40
    1ddc:	ldr	r0, [pc, r0]
    1de0:	ldr	r3, [r0]
    1de4:	ldr	r0, [pc, #684]	; 2098 <remove_xline+0x3c4>
    1de8:	add	r0, pc, r0
    1dec:	stm	sp, {r0, r6}
    1df0:	mov	r0, r8
    1df4:	ldr	r1, [pc, #672]	; 209c <remove_xline+0x3c8>
    1df8:	add	r1, pc, r1
    1dfc:	bl	d28 <cluster_generic@plt>
    1e00:	ldr	r0, [r4, #36]	; 0x24
    1e04:	cmp	r0, #0
    1e08:	beq	1e78 <remove_xline+0x1a4>
    1e0c:	ldr	r1, [pc, #664]	; 20ac <remove_xline+0x3d8>
    1e10:	mov	r0, r8
    1e14:	mov	r2, r6
    1e18:	add	r1, pc, r1
    1e1c:	bl	ddc <sendto_one_notice@plt>
    1e20:	mov	r0, r8
    1e24:	bl	d10 <get_oper_name@plt>
    1e28:	str	r6, [sp]
    1e2c:	mov	r3, r0
    1e30:	mov	r0, #256	; 0x100
    1e34:	mov	r1, #0
    1e38:	ldr	r2, [pc, #624]	; 20b0 <remove_xline+0x3dc>
    1e3c:	add	r2, pc, r2
    1e40:	bl	ce0 <sendto_realops_snomask@plt>
    1e44:	mov	r0, r8
    1e48:	bl	d10 <get_oper_name@plt>
    1e4c:	ldr	r1, [pc, #608]	; 20b4 <remove_xline+0x3e0>
    1e50:	mov	r2, r0
    1e54:	mov	r0, #7
    1e58:	mov	r3, r6
    1e5c:	add	r1, pc, r1
    1e60:	b	1ee0 <remove_xline+0x20c>
    1e64:	ldr	r1, [pc, #516]	; 2070 <remove_xline+0x39c>
    1e68:	add	r1, pc, r1
    1e6c:	b	1d6c <remove_xline+0x98>
    1e70:	sub	sp, fp, #28
    1e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e78:	ldr	r1, [r4, #16]
    1e7c:	mov	r0, #2
    1e80:	mov	r2, #0
    1e84:	bl	de8 <bandb_del@plt>
    1e88:	ldr	r2, [r4, #16]
    1e8c:	ldr	r1, [pc, #524]	; 20a0 <remove_xline+0x3cc>
    1e90:	mov	r0, r8
    1e94:	add	r1, pc, r1
    1e98:	bl	ddc <sendto_one_notice@plt>
    1e9c:	mov	r0, r8
    1ea0:	bl	d10 <get_oper_name@plt>
    1ea4:	mov	r3, r0
    1ea8:	ldr	r0, [r4, #16]
    1eac:	mov	r1, #0
    1eb0:	str	r0, [sp]
    1eb4:	mov	r0, #256	; 0x100
    1eb8:	ldr	r2, [pc, #484]	; 20a4 <remove_xline+0x3d0>
    1ebc:	add	r2, pc, r2
    1ec0:	bl	ce0 <sendto_realops_snomask@plt>
    1ec4:	mov	r0, r8
    1ec8:	bl	d10 <get_oper_name@plt>
    1ecc:	ldr	r3, [r4, #16]
    1ed0:	ldr	r1, [pc, #464]	; 20a8 <remove_xline+0x3d4>
    1ed4:	mov	r2, r0
    1ed8:	mov	r0, #7
    1edc:	add	r1, pc, r1
    1ee0:	bl	da0 <ilog@plt>
    1ee4:	ldr	r0, [r4, #16]
    1ee8:	mov	r1, #0
    1eec:	bl	dd0 <remove_reject_mask@plt>
    1ef0:	mov	r0, r4
    1ef4:	bl	d70 <free_conf@plt>
    1ef8:	ldr	r0, [r7, #8]
    1efc:	ldr	r1, [r7, #4]
    1f00:	cmp	r0, #0
    1f04:	beq	1f14 <remove_xline+0x240>
    1f08:	str	r1, [r0, #4]
    1f0c:	ldr	r1, [r7, #4]
    1f10:	b	1f18 <remove_xline+0x244>
    1f14:	str	r1, [r9, #4]
    1f18:	cmp	r1, #0
    1f1c:	mov	r2, r9
    1f20:	addne	r2, r1, #8
    1f24:	str	r0, [r2]
    1f28:	mov	r0, #0
    1f2c:	str	r0, [r7, #4]
    1f30:	str	r0, [r7, #8]
    1f34:	ldr	r0, [r9, #8]
    1f38:	sub	r0, r0, #1
    1f3c:	str	r0, [r9, #8]
    1f40:	mov	r0, r7
    1f44:	sub	sp, fp, #28
    1f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1f4c:	b	d1c <rb_free_rb_dlink_node@plt>
    1f50:	ldr	r1, [pc, #288]	; 2078 <remove_xline+0x3a4>
    1f54:	mov	r0, r8
    1f58:	mov	r2, r6
    1f5c:	add	r1, pc, r1
    1f60:	bl	ddc <sendto_one_notice@plt>
    1f64:	mov	r0, r8
    1f68:	bl	d10 <get_oper_name@plt>
    1f6c:	str	r6, [sp]
    1f70:	mov	r3, r0
    1f74:	mov	r0, #256	; 0x100
    1f78:	mov	r1, #0
    1f7c:	mov	r9, #0
    1f80:	ldr	r2, [pc, #244]	; 207c <remove_xline+0x3a8>
    1f84:	add	r2, pc, r2
    1f88:	bl	ce0 <sendto_realops_snomask@plt>
    1f8c:	mov	r0, r8
    1f90:	bl	d10 <get_oper_name@plt>
    1f94:	ldr	r1, [pc, #228]	; 2080 <remove_xline+0x3ac>
    1f98:	mov	r2, r0
    1f9c:	mov	r0, #7
    1fa0:	mov	r3, r6
    1fa4:	add	r1, pc, r1
    1fa8:	bl	da0 <ilog@plt>
    1fac:	bl	c8c <rb_current_time@plt>
    1fb0:	ldr	r1, [r4, #40]	; 0x28
    1fb4:	mov	sl, r0
    1fb8:	ldr	r0, [r4, #12]
    1fbc:	mov	r2, sl
    1fc0:	cmp	r1, sl
    1fc4:	addge	r2, r1, #1
    1fc8:	str	r2, [r4, #36]	; 0x24
    1fcc:	str	r2, [r4, #40]	; 0x28
    1fd0:	bl	cd4 <operhash_delete@plt>
    1fd4:	mov	r0, r8
    1fd8:	bl	d10 <get_oper_name@plt>
    1fdc:	bl	d34 <operhash_add@plt>
    1fe0:	str	r0, [r4, #12]
    1fe4:	add	r6, r8, #396	; 0x18c
    1fe8:	ldr	r0, [r4, #4]
    1fec:	ldr	ip, [r4, #16]
    1ff0:	ldr	r2, [r4, #40]	; 0x28
    1ff4:	ldr	r3, [r4, #44]	; 0x2c
    1ff8:	orr	r0, r0, #8912896	; 0x880000
    1ffc:	sub	r3, r3, r2
    2000:	str	r0, [r4, #4]
    2004:	ldr	r0, [pc, #120]	; 2084 <remove_xline+0x3b0>
    2008:	ldr	r0, [pc, r0]
    200c:	ldr	r0, [r0]
    2010:	ldr	r5, [pc, #112]	; 2088 <remove_xline+0x3b4>
    2014:	ldr	r5, [pc, r5]
    2018:	ldr	r5, [r5]
    201c:	ldr	r1, [pc, #104]	; 208c <remove_xline+0x3b8>
    2020:	add	r1, pc, r1
    2024:	stm	sp, {r1, r6, ip}
    2028:	str	r2, [sp, #12]
    202c:	str	r3, [sp, #20]
    2030:	orr	r2, r5, r0
    2034:	mov	r0, #0
    2038:	mov	r1, #0
    203c:	mov	r3, #0
    2040:	str	r9, [sp, #16]
    2044:	bl	d4c <sendto_server@plt>
    2048:	ldr	r0, [r4, #16]
    204c:	mov	r1, #0
    2050:	bl	dd0 <remove_reject_mask@plt>
    2054:	mov	r0, r4
    2058:	mov	r1, r7
    205c:	mov	r2, sl
    2060:	sub	sp, fp, #28
    2064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2068:	b	cf8 <deactivate_conf@plt>
    206c:	.word	0x000113b8
    2070:	.word	0x000005a1
    2074:	.word	0x0001130c
    2078:	.word	0x000004e1
    207c:	.word	0x000004d5
    2080:	.word	0x000004e0
    2084:	.word	0x000110a8
    2088:	.word	0x000110a0
    208c:	.word	0x0000046d
    2090:	.word	0x000112fc
    2094:	.word	0x000112d0
    2098:	.word	0x000003c9
    209c:	.word	0x00000318
    20a0:	.word	0x000005a9
    20a4:	.word	0x000005ef
    20a8:	.word	0x000005a8
    20ac:	.word	0x00000625
    20b0:	.word	0x00000693
    20b4:	.word	0x00000628
    20b8:	.word	0x00011398
    20bc:	.word	0x0001136c
    20c0:	.word	0x00000465
    20c4:	.word	0x000003b4
    20c8:	.word	0x00000795

000020cc <handle_remote_unxline>:
    20cc:	push	{r4, r5, fp, lr}
    20d0:	add	fp, sp, #8
    20d4:	ldr	r2, [r0, #32]
    20d8:	mov	r5, r0
    20dc:	mov	r4, r1
    20e0:	add	r0, r0, #152	; 0x98
    20e4:	mov	r3, #64	; 0x40
    20e8:	add	r1, r5, #163	; 0xa3
    20ec:	add	r2, r2, #88	; 0x58
    20f0:	bl	e0c <find_shared_conf@plt>
    20f4:	cmp	r0, #0
    20f8:	popeq	{r4, r5, fp, pc}
    20fc:	mov	r0, r5
    2100:	mov	r1, r4
    2104:	mov	r2, #0
    2108:	pop	{r4, r5, fp, lr}
    210c:	b	1cd4 <remove_xline>

Disassembly of section .fini:

00002110 <_fini>:
    2110:	push	{r3, lr}
    2114:	pop	{r3, pc}
