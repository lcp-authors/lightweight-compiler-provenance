
../repos/coreutils/src/paste:     file format elf32-littlearm


Disassembly of section .init:

00010c20 <.init>:
   10c20:	push	{r3, lr}
   10c24:	bl	10ed4 <putchar_unlocked@plt+0x48>
   10c28:	pop	{r3, pc}

Disassembly of section .plt:

00010c2c <calloc@plt-0x14>:
   10c2c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c30:	ldr	lr, [pc, #4]	; 10c3c <calloc@plt-0x4>
   10c34:	add	lr, pc, lr
   10c38:	ldr	pc, [lr, #8]!
   10c3c:	andeq	r8, r1, r4, asr #7

00010c40 <calloc@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #24, 20	; 0x18000
   10c48:	ldr	pc, [ip, #964]!	; 0x3c4

00010c4c <fputs_unlocked@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #24, 20	; 0x18000
   10c54:	ldr	pc, [ip, #956]!	; 0x3bc

00010c58 <raise@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #24, 20	; 0x18000
   10c60:	ldr	pc, [ip, #948]!	; 0x3b4

00010c64 <strcmp@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #24, 20	; 0x18000
   10c6c:	ldr	pc, [ip, #940]!	; 0x3ac

00010c70 <posix_fadvise64@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #24, 20	; 0x18000
   10c78:	ldr	pc, [ip, #932]!	; 0x3a4

00010c7c <printf@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #24, 20	; 0x18000
   10c84:	ldr	pc, [ip, #924]!	; 0x39c

00010c88 <fflush@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #24, 20	; 0x18000
   10c90:	ldr	pc, [ip, #916]!	; 0x394

00010c94 <free@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #24, 20	; 0x18000
   10c9c:	ldr	pc, [ip, #908]!	; 0x38c

00010ca0 <_exit@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #24, 20	; 0x18000
   10ca8:	ldr	pc, [ip, #900]!	; 0x384

00010cac <memcpy@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #24, 20	; 0x18000
   10cb4:	ldr	pc, [ip, #892]!	; 0x37c

00010cb8 <mbsinit@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #24, 20	; 0x18000
   10cc0:	ldr	pc, [ip, #884]!	; 0x374

00010cc4 <fwrite_unlocked@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #24, 20	; 0x18000
   10ccc:	ldr	pc, [ip, #876]!	; 0x36c

00010cd0 <memcmp@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #24, 20	; 0x18000
   10cd8:	ldr	pc, [ip, #868]!	; 0x364

00010cdc <fputc_unlocked@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #24, 20	; 0x18000
   10ce4:	ldr	pc, [ip, #860]!	; 0x35c

00010ce8 <getc_unlocked@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #24, 20	; 0x18000
   10cf0:	ldr	pc, [ip, #852]!	; 0x354

00010cf4 <realloc@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #24, 20	; 0x18000
   10cfc:	ldr	pc, [ip, #844]!	; 0x34c

00010d00 <textdomain@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #24, 20	; 0x18000
   10d08:	ldr	pc, [ip, #836]!	; 0x344

00010d0c <iswprint@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #24, 20	; 0x18000
   10d14:	ldr	pc, [ip, #828]!	; 0x33c

00010d18 <fwrite@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #24, 20	; 0x18000
   10d20:	ldr	pc, [ip, #820]!	; 0x334

00010d24 <lseek64@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #24, 20	; 0x18000
   10d2c:	ldr	pc, [ip, #812]!	; 0x32c

00010d30 <__ctype_get_mb_cur_max@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #24, 20	; 0x18000
   10d38:	ldr	pc, [ip, #804]!	; 0x324

00010d3c <__fpending@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #24, 20	; 0x18000
   10d44:	ldr	pc, [ip, #796]!	; 0x31c

00010d48 <ferror_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #24, 20	; 0x18000
   10d50:	ldr	pc, [ip, #788]!	; 0x314

00010d54 <mbrtowc@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #24, 20	; 0x18000
   10d5c:	ldr	pc, [ip, #780]!	; 0x30c

00010d60 <error@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #24, 20	; 0x18000
   10d68:	ldr	pc, [ip, #772]!	; 0x304

00010d6c <malloc@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #24, 20	; 0x18000
   10d74:	ldr	pc, [ip, #764]!	; 0x2fc

00010d78 <__libc_start_main@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #24, 20	; 0x18000
   10d80:	ldr	pc, [ip, #756]!	; 0x2f4

00010d84 <__freading@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #24, 20	; 0x18000
   10d8c:	ldr	pc, [ip, #748]!	; 0x2ec

00010d90 <__gmon_start__@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #24, 20	; 0x18000
   10d98:	ldr	pc, [ip, #740]!	; 0x2e4

00010d9c <getopt_long@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #24, 20	; 0x18000
   10da4:	ldr	pc, [ip, #732]!	; 0x2dc

00010da8 <__ctype_b_loc@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #24, 20	; 0x18000
   10db0:	ldr	pc, [ip, #724]!	; 0x2d4

00010db4 <exit@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #24, 20	; 0x18000
   10dbc:	ldr	pc, [ip, #716]!	; 0x2cc

00010dc0 <gettext@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #24, 20	; 0x18000
   10dc8:	ldr	pc, [ip, #708]!	; 0x2c4

00010dcc <strlen@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #24, 20	; 0x18000
   10dd4:	ldr	pc, [ip, #700]!	; 0x2bc

00010dd8 <fprintf@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #24, 20	; 0x18000
   10de0:	ldr	pc, [ip, #692]!	; 0x2b4

00010de4 <__errno_location@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #24, 20	; 0x18000
   10dec:	ldr	pc, [ip, #684]!	; 0x2ac

00010df0 <__cxa_atexit@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #24, 20	; 0x18000
   10df8:	ldr	pc, [ip, #676]!	; 0x2a4

00010dfc <memset@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #24, 20	; 0x18000
   10e04:	ldr	pc, [ip, #668]!	; 0x29c

00010e08 <fileno@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #24, 20	; 0x18000
   10e10:	ldr	pc, [ip, #660]!	; 0x294

00010e14 <fclose@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #24, 20	; 0x18000
   10e1c:	ldr	pc, [ip, #652]!	; 0x28c

00010e20 <fseeko64@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #24, 20	; 0x18000
   10e28:	ldr	pc, [ip, #644]!	; 0x284

00010e2c <setlocale@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #24, 20	; 0x18000
   10e34:	ldr	pc, [ip, #636]!	; 0x27c

00010e38 <strrchr@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #24, 20	; 0x18000
   10e40:	ldr	pc, [ip, #628]!	; 0x274

00010e44 <nl_langinfo@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #24, 20	; 0x18000
   10e4c:	ldr	pc, [ip, #620]!	; 0x26c

00010e50 <clearerr_unlocked@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #24, 20	; 0x18000
   10e58:	ldr	pc, [ip, #612]!	; 0x264

00010e5c <fopen64@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #24, 20	; 0x18000
   10e64:	ldr	pc, [ip, #604]!	; 0x25c

00010e68 <bindtextdomain@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #24, 20	; 0x18000
   10e70:	ldr	pc, [ip, #596]!	; 0x254

00010e74 <strncmp@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #24, 20	; 0x18000
   10e7c:	ldr	pc, [ip, #588]!	; 0x24c

00010e80 <abort@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #24, 20	; 0x18000
   10e88:	ldr	pc, [ip, #580]!	; 0x244

00010e8c <putchar_unlocked@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #24, 20	; 0x18000
   10e94:	ldr	pc, [ip, #572]!	; 0x23c

Disassembly of section .text:

00010e98 <.text>:
   10e98:	mov	fp, #0
   10e9c:	mov	lr, #0
   10ea0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea4:	mov	r2, sp
   10ea8:	push	{r2}		; (str r2, [sp, #-4]!)
   10eac:	push	{r0}		; (str r0, [sp, #-4]!)
   10eb0:	ldr	ip, [pc, #16]	; 10ec8 <putchar_unlocked@plt+0x3c>
   10eb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10eb8:	ldr	r0, [pc, #12]	; 10ecc <putchar_unlocked@plt+0x40>
   10ebc:	ldr	r3, [pc, #12]	; 10ed0 <putchar_unlocked@plt+0x44>
   10ec0:	bl	10d78 <__libc_start_main@plt>
   10ec4:	bl	10e80 <abort@plt>
   10ec8:	andeq	r7, r1, ip, asr #9
   10ecc:	andeq	r1, r1, r4, ror pc
   10ed0:	andeq	r7, r1, ip, ror #8
   10ed4:	ldr	r3, [pc, #20]	; 10ef0 <putchar_unlocked@plt+0x64>
   10ed8:	ldr	r2, [pc, #20]	; 10ef4 <putchar_unlocked@plt+0x68>
   10edc:	add	r3, pc, r3
   10ee0:	ldr	r2, [r3, r2]
   10ee4:	cmp	r2, #0
   10ee8:	bxeq	lr
   10eec:	b	10d90 <__gmon_start__@plt>
   10ef0:	andeq	r8, r1, ip, lsl r1
   10ef4:	ldrdeq	r0, [r0], -r4
   10ef8:	ldr	r3, [pc, #28]	; 10f1c <putchar_unlocked@plt+0x90>
   10efc:	ldr	r0, [pc, #28]	; 10f20 <putchar_unlocked@plt+0x94>
   10f00:	sub	r3, r3, r0
   10f04:	cmp	r3, #6
   10f08:	bxls	lr
   10f0c:	ldr	r3, [pc, #16]	; 10f24 <putchar_unlocked@plt+0x98>
   10f10:	cmp	r3, #0
   10f14:	bxeq	lr
   10f18:	bx	r3
   10f1c:	andeq	r9, r2, pc, lsr #2
   10f20:	andeq	r9, r2, ip, lsr #2
   10f24:	andeq	r0, r0, r0
   10f28:	ldr	r1, [pc, #36]	; 10f54 <putchar_unlocked@plt+0xc8>
   10f2c:	ldr	r0, [pc, #36]	; 10f58 <putchar_unlocked@plt+0xcc>
   10f30:	sub	r1, r1, r0
   10f34:	asr	r1, r1, #2
   10f38:	add	r1, r1, r1, lsr #31
   10f3c:	asrs	r1, r1, #1
   10f40:	bxeq	lr
   10f44:	ldr	r3, [pc, #16]	; 10f5c <putchar_unlocked@plt+0xd0>
   10f48:	cmp	r3, #0
   10f4c:	bxeq	lr
   10f50:	bx	r3
   10f54:	andeq	r9, r2, ip, lsr #2
   10f58:	andeq	r9, r2, ip, lsr #2
   10f5c:	andeq	r0, r0, r0
   10f60:	push	{r4, lr}
   10f64:	ldr	r4, [pc, #24]	; 10f84 <putchar_unlocked@plt+0xf8>
   10f68:	ldrb	r3, [r4]
   10f6c:	cmp	r3, #0
   10f70:	popne	{r4, pc}
   10f74:	bl	10ef8 <putchar_unlocked@plt+0x6c>
   10f78:	mov	r3, #1
   10f7c:	strb	r3, [r4]
   10f80:	pop	{r4, pc}
   10f84:	andeq	r9, r2, r4, asr r1
   10f88:	ldr	r0, [pc, #40]	; 10fb8 <putchar_unlocked@plt+0x12c>
   10f8c:	ldr	r3, [r0]
   10f90:	cmp	r3, #0
   10f94:	bne	10f9c <putchar_unlocked@plt+0x110>
   10f98:	b	10f28 <putchar_unlocked@plt+0x9c>
   10f9c:	ldr	r3, [pc, #24]	; 10fbc <putchar_unlocked@plt+0x130>
   10fa0:	cmp	r3, #0
   10fa4:	beq	10f98 <putchar_unlocked@plt+0x10c>
   10fa8:	push	{r4, lr}
   10fac:	blx	r3
   10fb0:	pop	{r4, lr}
   10fb4:	b	10f28 <putchar_unlocked@plt+0x9c>
   10fb8:	andeq	r8, r2, r4, lsl pc
   10fbc:	andeq	r0, r0, r0
   10fc0:	push	{fp, lr}
   10fc4:	add	fp, sp, #4
   10fc8:	ldr	r0, [pc, #32]	; 10ff0 <putchar_unlocked@plt+0x164>
   10fcc:	bl	10dc0 <gettext@plt>
   10fd0:	mov	r2, r0
   10fd4:	ldr	r3, [pc, #24]	; 10ff4 <putchar_unlocked@plt+0x168>
   10fd8:	ldr	r3, [r3]
   10fdc:	mov	r1, r3
   10fe0:	mov	r0, r2
   10fe4:	bl	10c4c <fputs_unlocked@plt>
   10fe8:	nop			; (mov r0, r0)
   10fec:	pop	{fp, pc}
   10ff0:	strdeq	r7, [r1], -r4
   10ff4:	andeq	r9, r2, ip, asr #2
   10ff8:	push	{fp, lr}
   10ffc:	add	fp, sp, #4
   11000:	ldr	r0, [pc, #32]	; 11028 <putchar_unlocked@plt+0x19c>
   11004:	bl	10dc0 <gettext@plt>
   11008:	mov	r2, r0
   1100c:	ldr	r3, [pc, #24]	; 1102c <putchar_unlocked@plt+0x1a0>
   11010:	ldr	r3, [r3]
   11014:	mov	r1, r3
   11018:	mov	r0, r2
   1101c:	bl	10c4c <fputs_unlocked@plt>
   11020:	nop			; (mov r0, r0)
   11024:	pop	{fp, pc}
   11028:	andeq	r7, r1, ip, lsr #10
   1102c:	andeq	r9, r2, ip, asr #2
   11030:	push	{fp, lr}
   11034:	add	fp, sp, #4
   11038:	sub	sp, sp, #80	; 0x50
   1103c:	str	r0, [fp, #-80]	; 0xffffffb0
   11040:	ldr	r3, [pc, #348]	; 111a4 <putchar_unlocked@plt+0x318>
   11044:	sub	ip, fp, #72	; 0x48
   11048:	mov	lr, r3
   1104c:	ldm	lr!, {r0, r1, r2, r3}
   11050:	stmia	ip!, {r0, r1, r2, r3}
   11054:	ldm	lr!, {r0, r1, r2, r3}
   11058:	stmia	ip!, {r0, r1, r2, r3}
   1105c:	ldm	lr!, {r0, r1, r2, r3}
   11060:	stmia	ip!, {r0, r1, r2, r3}
   11064:	ldm	lr, {r0, r1}
   11068:	stm	ip, {r0, r1}
   1106c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11070:	str	r3, [fp, #-8]
   11074:	sub	r3, fp, #72	; 0x48
   11078:	str	r3, [fp, #-12]
   1107c:	b	1108c <putchar_unlocked@plt+0x200>
   11080:	ldr	r3, [fp, #-12]
   11084:	add	r3, r3, #8
   11088:	str	r3, [fp, #-12]
   1108c:	ldr	r3, [fp, #-12]
   11090:	ldr	r3, [r3]
   11094:	cmp	r3, #0
   11098:	beq	110bc <putchar_unlocked@plt+0x230>
   1109c:	ldr	r3, [fp, #-12]
   110a0:	ldr	r3, [r3]
   110a4:	mov	r1, r3
   110a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   110ac:	bl	10c64 <strcmp@plt>
   110b0:	mov	r3, r0
   110b4:	cmp	r3, #0
   110b8:	bne	11080 <putchar_unlocked@plt+0x1f4>
   110bc:	ldr	r3, [fp, #-12]
   110c0:	ldr	r3, [r3, #4]
   110c4:	cmp	r3, #0
   110c8:	beq	110d8 <putchar_unlocked@plt+0x24c>
   110cc:	ldr	r3, [fp, #-12]
   110d0:	ldr	r3, [r3, #4]
   110d4:	str	r3, [fp, #-8]
   110d8:	ldr	r0, [pc, #200]	; 111a8 <putchar_unlocked@plt+0x31c>
   110dc:	bl	10dc0 <gettext@plt>
   110e0:	mov	r3, r0
   110e4:	ldr	r2, [pc, #192]	; 111ac <putchar_unlocked@plt+0x320>
   110e8:	ldr	r1, [pc, #192]	; 111b0 <putchar_unlocked@plt+0x324>
   110ec:	mov	r0, r3
   110f0:	bl	10c7c <printf@plt>
   110f4:	mov	r1, #0
   110f8:	mov	r0, #5
   110fc:	bl	10e2c <setlocale@plt>
   11100:	str	r0, [fp, #-16]
   11104:	ldr	r3, [fp, #-16]
   11108:	cmp	r3, #0
   1110c:	beq	1114c <putchar_unlocked@plt+0x2c0>
   11110:	mov	r2, #3
   11114:	ldr	r1, [pc, #152]	; 111b4 <putchar_unlocked@plt+0x328>
   11118:	ldr	r0, [fp, #-16]
   1111c:	bl	10e74 <strncmp@plt>
   11120:	mov	r3, r0
   11124:	cmp	r3, #0
   11128:	beq	1114c <putchar_unlocked@plt+0x2c0>
   1112c:	ldr	r0, [pc, #132]	; 111b8 <putchar_unlocked@plt+0x32c>
   11130:	bl	10dc0 <gettext@plt>
   11134:	mov	r2, r0
   11138:	ldr	r3, [pc, #124]	; 111bc <putchar_unlocked@plt+0x330>
   1113c:	ldr	r3, [r3]
   11140:	mov	r1, r3
   11144:	mov	r0, r2
   11148:	bl	10c4c <fputs_unlocked@plt>
   1114c:	ldr	r0, [pc, #108]	; 111c0 <putchar_unlocked@plt+0x334>
   11150:	bl	10dc0 <gettext@plt>
   11154:	mov	r3, r0
   11158:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1115c:	ldr	r1, [pc, #72]	; 111ac <putchar_unlocked@plt+0x320>
   11160:	mov	r0, r3
   11164:	bl	10c7c <printf@plt>
   11168:	ldr	r0, [pc, #84]	; 111c4 <putchar_unlocked@plt+0x338>
   1116c:	bl	10dc0 <gettext@plt>
   11170:	ldr	r2, [fp, #-8]
   11174:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11178:	cmp	r2, r3
   1117c:	bne	11188 <putchar_unlocked@plt+0x2fc>
   11180:	ldr	r3, [pc, #64]	; 111c8 <putchar_unlocked@plt+0x33c>
   11184:	b	1118c <putchar_unlocked@plt+0x300>
   11188:	ldr	r3, [pc, #60]	; 111cc <putchar_unlocked@plt+0x340>
   1118c:	mov	r2, r3
   11190:	ldr	r1, [fp, #-8]
   11194:	bl	10c7c <printf@plt>
   11198:	nop			; (mov r0, r0)
   1119c:	sub	sp, fp, #4
   111a0:	pop	{fp, pc}
   111a4:	andeq	r7, r1, ip, ror #13
   111a8:	andeq	r7, r1, r8, ror r5
   111ac:	muleq	r1, r0, r5
   111b0:			; <UNDEFINED> instruction: 0x000175b8
   111b4:	andeq	r7, r1, r8, asr #11
   111b8:	andeq	r7, r1, ip, asr #11
   111bc:	andeq	r9, r2, ip, asr #2
   111c0:	andeq	r7, r1, r4, lsl r6
   111c4:	andeq	r7, r1, r0, lsr r6
   111c8:	andeq	r7, r1, r4, ror #12
   111cc:	andeq	r7, r1, r0, ror r6
   111d0:	push	{fp}		; (str fp, [sp, #-4]!)
   111d4:	add	fp, sp, #0
   111d8:	sub	sp, sp, #12
   111dc:	str	r0, [fp, #-8]
   111e0:	ldr	r3, [fp, #-8]
   111e4:	mov	r0, r3
   111e8:	add	sp, fp, #0
   111ec:	pop	{fp}		; (ldr fp, [sp], #4)
   111f0:	bx	lr
   111f4:	push	{fp, lr}
   111f8:	add	fp, sp, #4
   111fc:	sub	sp, sp, #16
   11200:	str	r0, [fp, #-16]
   11204:	ldr	r0, [fp, #-16]
   11208:	bl	16200 <putchar_unlocked@plt+0x5374>
   1120c:	mov	r3, r0
   11210:	str	r3, [fp, #-8]
   11214:	mov	r3, #0
   11218:	strb	r3, [fp, #-9]
   1121c:	ldr	r2, [pc, #480]	; 11404 <putchar_unlocked@plt+0x578>
   11220:	ldr	r3, [fp, #-8]
   11224:	str	r3, [r2]
   11228:	b	113d8 <putchar_unlocked@plt+0x54c>
   1122c:	ldr	r3, [fp, #-16]
   11230:	ldrb	r3, [r3]
   11234:	cmp	r3, #92	; 0x5c
   11238:	beq	11260 <putchar_unlocked@plt+0x3d4>
   1123c:	ldr	r3, [fp, #-8]
   11240:	add	r2, r3, #1
   11244:	str	r2, [fp, #-8]
   11248:	ldr	r2, [fp, #-16]
   1124c:	add	r1, r2, #1
   11250:	str	r1, [fp, #-16]
   11254:	ldrb	r2, [r2]
   11258:	strb	r2, [r3]
   1125c:	b	113d8 <putchar_unlocked@plt+0x54c>
   11260:	ldr	r3, [fp, #-16]
   11264:	add	r3, r3, #1
   11268:	str	r3, [fp, #-16]
   1126c:	ldr	r3, [fp, #-16]
   11270:	ldrb	r3, [r3]
   11274:	cmp	r3, #102	; 0x66
   11278:	beq	11314 <putchar_unlocked@plt+0x488>
   1127c:	cmp	r3, #102	; 0x66
   11280:	bgt	112b4 <putchar_unlocked@plt+0x428>
   11284:	cmp	r3, #48	; 0x30
   11288:	beq	112e4 <putchar_unlocked@plt+0x458>
   1128c:	cmp	r3, #48	; 0x30
   11290:	bgt	112a0 <putchar_unlocked@plt+0x414>
   11294:	cmp	r3, #0
   11298:	beq	113a4 <putchar_unlocked@plt+0x518>
   1129c:	b	113b0 <putchar_unlocked@plt+0x524>
   112a0:	cmp	r3, #92	; 0x5c
   112a4:	beq	1138c <putchar_unlocked@plt+0x500>
   112a8:	cmp	r3, #98	; 0x62
   112ac:	beq	112fc <putchar_unlocked@plt+0x470>
   112b0:	b	113b0 <putchar_unlocked@plt+0x524>
   112b4:	cmp	r3, #114	; 0x72
   112b8:	beq	11344 <putchar_unlocked@plt+0x4b8>
   112bc:	cmp	r3, #114	; 0x72
   112c0:	bgt	112d0 <putchar_unlocked@plt+0x444>
   112c4:	cmp	r3, #110	; 0x6e
   112c8:	beq	1132c <putchar_unlocked@plt+0x4a0>
   112cc:	b	113b0 <putchar_unlocked@plt+0x524>
   112d0:	cmp	r3, #116	; 0x74
   112d4:	beq	1135c <putchar_unlocked@plt+0x4d0>
   112d8:	cmp	r3, #118	; 0x76
   112dc:	beq	11374 <putchar_unlocked@plt+0x4e8>
   112e0:	b	113b0 <putchar_unlocked@plt+0x524>
   112e4:	ldr	r3, [fp, #-8]
   112e8:	add	r2, r3, #1
   112ec:	str	r2, [fp, #-8]
   112f0:	mov	r2, #0
   112f4:	strb	r2, [r3]
   112f8:	b	113cc <putchar_unlocked@plt+0x540>
   112fc:	ldr	r3, [fp, #-8]
   11300:	add	r2, r3, #1
   11304:	str	r2, [fp, #-8]
   11308:	mov	r2, #8
   1130c:	strb	r2, [r3]
   11310:	b	113cc <putchar_unlocked@plt+0x540>
   11314:	ldr	r3, [fp, #-8]
   11318:	add	r2, r3, #1
   1131c:	str	r2, [fp, #-8]
   11320:	mov	r2, #12
   11324:	strb	r2, [r3]
   11328:	b	113cc <putchar_unlocked@plt+0x540>
   1132c:	ldr	r3, [fp, #-8]
   11330:	add	r2, r3, #1
   11334:	str	r2, [fp, #-8]
   11338:	mov	r2, #10
   1133c:	strb	r2, [r3]
   11340:	b	113cc <putchar_unlocked@plt+0x540>
   11344:	ldr	r3, [fp, #-8]
   11348:	add	r2, r3, #1
   1134c:	str	r2, [fp, #-8]
   11350:	mov	r2, #13
   11354:	strb	r2, [r3]
   11358:	b	113cc <putchar_unlocked@plt+0x540>
   1135c:	ldr	r3, [fp, #-8]
   11360:	add	r2, r3, #1
   11364:	str	r2, [fp, #-8]
   11368:	mov	r2, #9
   1136c:	strb	r2, [r3]
   11370:	b	113cc <putchar_unlocked@plt+0x540>
   11374:	ldr	r3, [fp, #-8]
   11378:	add	r2, r3, #1
   1137c:	str	r2, [fp, #-8]
   11380:	mov	r2, #11
   11384:	strb	r2, [r3]
   11388:	b	113cc <putchar_unlocked@plt+0x540>
   1138c:	ldr	r3, [fp, #-8]
   11390:	add	r2, r3, #1
   11394:	str	r2, [fp, #-8]
   11398:	mov	r2, #92	; 0x5c
   1139c:	strb	r2, [r3]
   113a0:	b	113cc <putchar_unlocked@plt+0x540>
   113a4:	mov	r3, #1
   113a8:	strb	r3, [fp, #-9]
   113ac:	b	113e8 <putchar_unlocked@plt+0x55c>
   113b0:	ldr	r3, [fp, #-8]
   113b4:	add	r2, r3, #1
   113b8:	str	r2, [fp, #-8]
   113bc:	ldr	r2, [fp, #-16]
   113c0:	ldrb	r2, [r2]
   113c4:	strb	r2, [r3]
   113c8:	nop			; (mov r0, r0)
   113cc:	ldr	r3, [fp, #-16]
   113d0:	add	r3, r3, #1
   113d4:	str	r3, [fp, #-16]
   113d8:	ldr	r3, [fp, #-16]
   113dc:	ldrb	r3, [r3]
   113e0:	cmp	r3, #0
   113e4:	bne	1122c <putchar_unlocked@plt+0x3a0>
   113e8:	ldr	r2, [pc, #24]	; 11408 <putchar_unlocked@plt+0x57c>
   113ec:	ldr	r3, [fp, #-8]
   113f0:	str	r3, [r2]
   113f4:	ldrb	r3, [fp, #-9]
   113f8:	mov	r0, r3
   113fc:	sub	sp, fp, #4
   11400:	pop	{fp, pc}
   11404:	andeq	r9, r2, ip, asr r1
   11408:	andeq	r9, r2, r0, ror #2
   1140c:	push	{r4, r5, fp, lr}
   11410:	add	fp, sp, #12
   11414:	bl	10de4 <__errno_location@plt>
   11418:	mov	r3, r0
   1141c:	ldr	r4, [r3]
   11420:	ldr	r0, [pc, #20]	; 1143c <putchar_unlocked@plt+0x5b0>
   11424:	bl	10dc0 <gettext@plt>
   11428:	mov	r3, r0
   1142c:	mov	r2, r3
   11430:	mov	r1, r4
   11434:	mov	r0, #1
   11438:	bl	10d60 <error@plt>
   1143c:			; <UNDEFINED> instruction: 0x000177b8
   11440:	push	{fp, lr}
   11444:	add	fp, sp, #4
   11448:	sub	sp, sp, #8
   1144c:	mov	r3, r0
   11450:	strb	r3, [fp, #-5]
   11454:	ldrb	r3, [fp, #-5]
   11458:	mov	r0, r3
   1145c:	bl	10e8c <putchar_unlocked@plt>
   11460:	mov	r3, r0
   11464:	cmp	r3, #0
   11468:	bge	11470 <putchar_unlocked@plt+0x5e4>
   1146c:	bl	1140c <putchar_unlocked@plt+0x580>
   11470:	nop			; (mov r0, r0)
   11474:	sub	sp, fp, #4
   11478:	pop	{fp, pc}
   1147c:	push	{r4, fp, lr}
   11480:	add	fp, sp, #8
   11484:	sub	sp, sp, #60	; 0x3c
   11488:	str	r0, [fp, #-64]	; 0xffffffc0
   1148c:	str	r1, [fp, #-68]	; 0xffffffbc
   11490:	mov	r3, #1
   11494:	strb	r3, [fp, #-13]
   11498:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1149c:	add	r3, r3, #2
   114a0:	mov	r0, r3
   114a4:	bl	15720 <putchar_unlocked@plt+0x4894>
   114a8:	mov	r3, r0
   114ac:	str	r3, [fp, #-52]	; 0xffffffcc
   114b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   114b4:	add	r3, r3, #1
   114b8:	mov	r1, #4
   114bc:	mov	r0, r3
   114c0:	bl	158fc <putchar_unlocked@plt+0x4a70>
   114c4:	mov	r3, r0
   114c8:	str	r3, [fp, #-56]	; 0xffffffc8
   114cc:	mov	r3, #0
   114d0:	strb	r3, [fp, #-21]	; 0xffffffeb
   114d4:	mov	r3, #0
   114d8:	str	r3, [fp, #-20]	; 0xffffffec
   114dc:	b	1162c <putchar_unlocked@plt+0x7a0>
   114e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   114e4:	lsl	r3, r3, #2
   114e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   114ec:	add	r3, r2, r3
   114f0:	ldr	r3, [r3]
   114f4:	ldr	r1, [pc, #1552]	; 11b0c <putchar_unlocked@plt+0xc80>
   114f8:	mov	r0, r3
   114fc:	bl	10c64 <strcmp@plt>
   11500:	mov	r3, r0
   11504:	cmp	r3, #0
   11508:	bne	11538 <putchar_unlocked@plt+0x6ac>
   1150c:	ldr	r3, [pc, #1532]	; 11b10 <putchar_unlocked@plt+0xc84>
   11510:	mov	r2, #1
   11514:	strb	r2, [r3]
   11518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1151c:	lsl	r3, r3, #2
   11520:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11524:	add	r3, r2, r3
   11528:	ldr	r2, [pc, #1508]	; 11b14 <putchar_unlocked@plt+0xc88>
   1152c:	ldr	r2, [r2]
   11530:	str	r2, [r3]
   11534:	b	11620 <putchar_unlocked@plt+0x794>
   11538:	ldr	r3, [fp, #-20]	; 0xffffffec
   1153c:	lsl	r3, r3, #2
   11540:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11544:	add	r4, r2, r3
   11548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1154c:	lsl	r3, r3, #2
   11550:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11554:	add	r3, r2, r3
   11558:	ldr	r3, [r3]
   1155c:	ldr	r1, [pc, #1460]	; 11b18 <putchar_unlocked@plt+0xc8c>
   11560:	mov	r0, r3
   11564:	bl	10e5c <fopen64@plt>
   11568:	mov	r3, r0
   1156c:	str	r3, [r4]
   11570:	ldr	r3, [fp, #-20]	; 0xffffffec
   11574:	lsl	r3, r3, #2
   11578:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1157c:	add	r3, r2, r3
   11580:	ldr	r3, [r3]
   11584:	cmp	r3, #0
   11588:	bne	115d0 <putchar_unlocked@plt+0x744>
   1158c:	bl	10de4 <__errno_location@plt>
   11590:	mov	r3, r0
   11594:	ldr	r4, [r3]
   11598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1159c:	lsl	r3, r3, #2
   115a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   115a4:	add	r3, r2, r3
   115a8:	ldr	r3, [r3]
   115ac:	mov	r2, r3
   115b0:	mov	r1, #3
   115b4:	mov	r0, #0
   115b8:	bl	14c98 <putchar_unlocked@plt+0x3e0c>
   115bc:	mov	r3, r0
   115c0:	ldr	r2, [pc, #1364]	; 11b1c <putchar_unlocked@plt+0xc90>
   115c4:	mov	r1, r4
   115c8:	mov	r0, #1
   115cc:	bl	10d60 <error@plt>
   115d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   115d4:	lsl	r3, r3, #2
   115d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   115dc:	add	r3, r2, r3
   115e0:	ldr	r3, [r3]
   115e4:	mov	r0, r3
   115e8:	bl	10e08 <fileno@plt>
   115ec:	mov	r3, r0
   115f0:	cmp	r3, #0
   115f4:	bne	11600 <putchar_unlocked@plt+0x774>
   115f8:	mov	r3, #1
   115fc:	strb	r3, [fp, #-21]	; 0xffffffeb
   11600:	ldr	r3, [fp, #-20]	; 0xffffffec
   11604:	lsl	r3, r3, #2
   11608:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1160c:	add	r3, r2, r3
   11610:	ldr	r3, [r3]
   11614:	mov	r1, #2
   11618:	mov	r0, r3
   1161c:	bl	1246c <putchar_unlocked@plt+0x15e0>
   11620:	ldr	r3, [fp, #-20]	; 0xffffffec
   11624:	add	r3, r3, #1
   11628:	str	r3, [fp, #-20]	; 0xffffffec
   1162c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11630:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11634:	cmp	r2, r3
   11638:	bcc	114e0 <putchar_unlocked@plt+0x654>
   1163c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11640:	cmp	r3, #0
   11644:	beq	11ae0 <putchar_unlocked@plt+0xc54>
   11648:	ldr	r3, [pc, #1216]	; 11b10 <putchar_unlocked@plt+0xc84>
   1164c:	ldrb	r3, [r3]
   11650:	cmp	r3, #0
   11654:	beq	11ae0 <putchar_unlocked@plt+0xc54>
   11658:	ldr	r0, [pc, #1216]	; 11b20 <putchar_unlocked@plt+0xc94>
   1165c:	bl	10dc0 <gettext@plt>
   11660:	mov	r3, r0
   11664:	mov	r2, r3
   11668:	mov	r1, #0
   1166c:	mov	r0, #1
   11670:	bl	10d60 <error@plt>
   11674:	mov	r3, #0
   11678:	strb	r3, [fp, #-22]	; 0xffffffea
   1167c:	ldr	r3, [pc, #1184]	; 11b24 <putchar_unlocked@plt+0xc98>
   11680:	ldr	r3, [r3]
   11684:	str	r3, [fp, #-28]	; 0xffffffe4
   11688:	mov	r3, #0
   1168c:	str	r3, [fp, #-32]	; 0xffffffe0
   11690:	mov	r3, #0
   11694:	str	r3, [fp, #-36]	; 0xffffffdc
   11698:	b	11ac4 <putchar_unlocked@plt+0xc38>
   1169c:	mov	r3, #0
   116a0:	strb	r3, [fp, #-45]	; 0xffffffd3
   116a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   116a8:	lsl	r3, r3, #2
   116ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   116b0:	add	r3, r2, r3
   116b4:	ldr	r3, [r3]
   116b8:	cmp	r3, #0
   116bc:	beq	117b4 <putchar_unlocked@plt+0x928>
   116c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   116c4:	lsl	r3, r3, #2
   116c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   116cc:	add	r3, r2, r3
   116d0:	ldr	r3, [r3]
   116d4:	mov	r0, r3
   116d8:	bl	10ce8 <getc_unlocked@plt>
   116dc:	str	r0, [fp, #-40]	; 0xffffffd8
   116e0:	bl	10de4 <__errno_location@plt>
   116e4:	mov	r3, r0
   116e8:	ldr	r3, [r3]
   116ec:	str	r3, [fp, #-44]	; 0xffffffd4
   116f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   116f4:	cmn	r3, #1
   116f8:	beq	117a0 <putchar_unlocked@plt+0x914>
   116fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11700:	cmp	r3, #0
   11704:	beq	117a0 <putchar_unlocked@plt+0x914>
   11708:	ldr	r3, [pc, #1048]	; 11b28 <putchar_unlocked@plt+0xc9c>
   1170c:	ldr	r3, [r3]
   11710:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11714:	mov	r1, #1
   11718:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1171c:	bl	10cc4 <fwrite_unlocked@plt>
   11720:	mov	r2, r0
   11724:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11728:	cmp	r2, r3
   1172c:	beq	11734 <putchar_unlocked@plt+0x8a8>
   11730:	bl	1140c <putchar_unlocked@plt+0x580>
   11734:	mov	r3, #0
   11738:	str	r3, [fp, #-32]	; 0xffffffe0
   1173c:	b	117a0 <putchar_unlocked@plt+0x914>
   11740:	mov	r3, #1
   11744:	strb	r3, [fp, #-45]	; 0xffffffd3
   11748:	ldr	r3, [pc, #988]	; 11b2c <putchar_unlocked@plt+0xca0>
   1174c:	ldrb	r3, [r3]
   11750:	mov	r2, r3
   11754:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11758:	cmp	r2, r3
   1175c:	beq	117b0 <putchar_unlocked@plt+0x924>
   11760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11764:	uxtb	r3, r3
   11768:	mov	r0, r3
   1176c:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11774:	lsl	r3, r3, #2
   11778:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1177c:	add	r3, r2, r3
   11780:	ldr	r3, [r3]
   11784:	mov	r0, r3
   11788:	bl	10ce8 <getc_unlocked@plt>
   1178c:	str	r0, [fp, #-40]	; 0xffffffd8
   11790:	bl	10de4 <__errno_location@plt>
   11794:	mov	r3, r0
   11798:	ldr	r3, [r3]
   1179c:	str	r3, [fp, #-44]	; 0xffffffd4
   117a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   117a4:	cmn	r3, #1
   117a8:	bne	11740 <putchar_unlocked@plt+0x8b4>
   117ac:	b	117b4 <putchar_unlocked@plt+0x928>
   117b0:	nop			; (mov r0, r0)
   117b4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   117b8:	eor	r3, r3, #1
   117bc:	uxtb	r3, r3
   117c0:	cmp	r3, #0
   117c4:	beq	119e0 <putchar_unlocked@plt+0xb54>
   117c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117cc:	lsl	r3, r3, #2
   117d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   117d4:	add	r3, r2, r3
   117d8:	ldr	r3, [r3]
   117dc:	cmp	r3, #0
   117e0:	beq	1190c <putchar_unlocked@plt+0xa80>
   117e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   117e8:	lsl	r3, r3, #2
   117ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   117f0:	add	r3, r2, r3
   117f4:	ldr	r3, [r3]
   117f8:	mov	r0, r3
   117fc:	bl	10d48 <ferror_unlocked@plt>
   11800:	mov	r3, r0
   11804:	cmp	r3, #0
   11808:	bne	11814 <putchar_unlocked@plt+0x988>
   1180c:	mov	r3, #0
   11810:	str	r3, [fp, #-44]	; 0xffffffd4
   11814:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11818:	lsl	r3, r3, #2
   1181c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11820:	add	r3, r2, r3
   11824:	ldr	r2, [r3]
   11828:	ldr	r3, [pc, #740]	; 11b14 <putchar_unlocked@plt+0xc88>
   1182c:	ldr	r3, [r3]
   11830:	cmp	r2, r3
   11834:	bne	11858 <putchar_unlocked@plt+0x9cc>
   11838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1183c:	lsl	r3, r3, #2
   11840:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11844:	add	r3, r2, r3
   11848:	ldr	r3, [r3]
   1184c:	mov	r0, r3
   11850:	bl	10e50 <clearerr_unlocked@plt>
   11854:	b	1189c <putchar_unlocked@plt+0xa10>
   11858:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1185c:	lsl	r3, r3, #2
   11860:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11864:	add	r3, r2, r3
   11868:	ldr	r3, [r3]
   1186c:	mov	r0, r3
   11870:	bl	124c8 <putchar_unlocked@plt+0x163c>
   11874:	mov	r3, r0
   11878:	cmn	r3, #1
   1187c:	bne	1189c <putchar_unlocked@plt+0xa10>
   11880:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11884:	cmp	r3, #0
   11888:	bne	1189c <putchar_unlocked@plt+0xa10>
   1188c:	bl	10de4 <__errno_location@plt>
   11890:	mov	r3, r0
   11894:	ldr	r3, [r3]
   11898:	str	r3, [fp, #-44]	; 0xffffffd4
   1189c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   118a0:	cmp	r3, #0
   118a4:	beq	118e8 <putchar_unlocked@plt+0xa5c>
   118a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118ac:	lsl	r3, r3, #2
   118b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   118b4:	add	r3, r2, r3
   118b8:	ldr	r3, [r3]
   118bc:	mov	r2, r3
   118c0:	mov	r1, #3
   118c4:	mov	r0, #0
   118c8:	bl	14c98 <putchar_unlocked@plt+0x3e0c>
   118cc:	mov	r3, r0
   118d0:	ldr	r2, [pc, #580]	; 11b1c <putchar_unlocked@plt+0xc90>
   118d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   118d8:	mov	r0, #0
   118dc:	bl	10d60 <error@plt>
   118e0:	mov	r3, #0
   118e4:	strb	r3, [fp, #-13]
   118e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118ec:	lsl	r3, r3, #2
   118f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   118f4:	add	r3, r2, r3
   118f8:	mov	r2, #0
   118fc:	str	r2, [r3]
   11900:	ldr	r3, [fp, #-20]	; 0xffffffec
   11904:	sub	r3, r3, #1
   11908:	str	r3, [fp, #-20]	; 0xffffffec
   1190c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11910:	add	r2, r3, #1
   11914:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11918:	cmp	r2, r3
   1191c:	bne	11980 <putchar_unlocked@plt+0xaf4>
   11920:	ldrb	r3, [fp, #-22]	; 0xffffffea
   11924:	cmp	r3, #0
   11928:	beq	11ab4 <putchar_unlocked@plt+0xc28>
   1192c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11930:	cmp	r3, #0
   11934:	beq	1196c <putchar_unlocked@plt+0xae0>
   11938:	ldr	r3, [pc, #488]	; 11b28 <putchar_unlocked@plt+0xc9c>
   1193c:	ldr	r3, [r3]
   11940:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11944:	mov	r1, #1
   11948:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1194c:	bl	10cc4 <fwrite_unlocked@plt>
   11950:	mov	r2, r0
   11954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11958:	cmp	r2, r3
   1195c:	beq	11964 <putchar_unlocked@plt+0xad8>
   11960:	bl	1140c <putchar_unlocked@plt+0x580>
   11964:	mov	r3, #0
   11968:	str	r3, [fp, #-32]	; 0xffffffe0
   1196c:	ldr	r3, [pc, #440]	; 11b2c <putchar_unlocked@plt+0xca0>
   11970:	ldrb	r3, [r3]
   11974:	mov	r0, r3
   11978:	bl	11440 <putchar_unlocked@plt+0x5b4>
   1197c:	b	11ab4 <putchar_unlocked@plt+0xc28>
   11980:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11984:	ldrb	r3, [r3]
   11988:	cmp	r3, #0
   1198c:	beq	119b0 <putchar_unlocked@plt+0xb24>
   11990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11994:	add	r2, r3, #1
   11998:	str	r2, [fp, #-32]	; 0xffffffe0
   1199c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   119a0:	add	r3, r2, r3
   119a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   119a8:	ldrb	r2, [r2]
   119ac:	strb	r2, [r3]
   119b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119b4:	add	r3, r3, #1
   119b8:	str	r3, [fp, #-28]	; 0xffffffe4
   119bc:	ldr	r3, [pc, #364]	; 11b30 <putchar_unlocked@plt+0xca4>
   119c0:	ldr	r3, [r3]
   119c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   119c8:	cmp	r2, r3
   119cc:	bne	11ab8 <putchar_unlocked@plt+0xc2c>
   119d0:	ldr	r3, [pc, #332]	; 11b24 <putchar_unlocked@plt+0xc98>
   119d4:	ldr	r3, [r3]
   119d8:	str	r3, [fp, #-28]	; 0xffffffe4
   119dc:	b	11ab8 <putchar_unlocked@plt+0xc2c>
   119e0:	mov	r3, #1
   119e4:	strb	r3, [fp, #-22]	; 0xffffffea
   119e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   119ec:	add	r2, r3, #1
   119f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   119f4:	cmp	r2, r3
   119f8:	beq	11a80 <putchar_unlocked@plt+0xbf4>
   119fc:	ldr	r3, [pc, #296]	; 11b2c <putchar_unlocked@plt+0xca0>
   11a00:	ldrb	r3, [r3]
   11a04:	mov	r2, r3
   11a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a0c:	cmp	r2, r3
   11a10:	beq	11a30 <putchar_unlocked@plt+0xba4>
   11a14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a18:	cmn	r3, #1
   11a1c:	beq	11a30 <putchar_unlocked@plt+0xba4>
   11a20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a24:	uxtb	r3, r3
   11a28:	mov	r0, r3
   11a2c:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a34:	ldrb	r3, [r3]
   11a38:	cmp	r3, #0
   11a3c:	beq	11a50 <putchar_unlocked@plt+0xbc4>
   11a40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a44:	ldrb	r3, [r3]
   11a48:	mov	r0, r3
   11a4c:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11a50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a54:	add	r3, r3, #1
   11a58:	str	r3, [fp, #-28]	; 0xffffffe4
   11a5c:	ldr	r3, [pc, #204]	; 11b30 <putchar_unlocked@plt+0xca4>
   11a60:	ldr	r3, [r3]
   11a64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a68:	cmp	r2, r3
   11a6c:	bne	11ab8 <putchar_unlocked@plt+0xc2c>
   11a70:	ldr	r3, [pc, #172]	; 11b24 <putchar_unlocked@plt+0xc98>
   11a74:	ldr	r3, [r3]
   11a78:	str	r3, [fp, #-28]	; 0xffffffe4
   11a7c:	b	11ab8 <putchar_unlocked@plt+0xc2c>
   11a80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a84:	cmn	r3, #1
   11a88:	beq	11a98 <putchar_unlocked@plt+0xc0c>
   11a8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11a90:	uxtb	r3, r3
   11a94:	b	11aa0 <putchar_unlocked@plt+0xc14>
   11a98:	ldr	r3, [pc, #140]	; 11b2c <putchar_unlocked@plt+0xca0>
   11a9c:	ldrb	r3, [r3]
   11aa0:	strb	r3, [fp, #-57]	; 0xffffffc7
   11aa4:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   11aa8:	mov	r0, r3
   11aac:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11ab0:	b	11ab8 <putchar_unlocked@plt+0xc2c>
   11ab4:	nop			; (mov r0, r0)
   11ab8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11abc:	add	r3, r3, #1
   11ac0:	str	r3, [fp, #-36]	; 0xffffffdc
   11ac4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ac8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11acc:	cmp	r2, r3
   11ad0:	bcs	11ae0 <putchar_unlocked@plt+0xc54>
   11ad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ad8:	cmp	r3, #0
   11adc:	bne	1169c <putchar_unlocked@plt+0x810>
   11ae0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ae4:	cmp	r3, #0
   11ae8:	bne	11674 <putchar_unlocked@plt+0x7e8>
   11aec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11af0:	bl	12668 <putchar_unlocked@plt+0x17dc>
   11af4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11af8:	bl	12668 <putchar_unlocked@plt+0x17dc>
   11afc:	ldrb	r3, [fp, #-13]
   11b00:	mov	r0, r3
   11b04:	sub	sp, fp, #8
   11b08:	pop	{r4, fp, pc}
   11b0c:	andeq	r7, r1, r4, asr #15
   11b10:	andeq	r9, r2, r8, asr r1
   11b14:	andeq	r9, r2, r8, asr #2
   11b18:	andeq	r7, r1, r8, asr #15
   11b1c:	andeq	r7, r1, ip, asr #15
   11b20:	ldrdeq	r7, [r1], -r0
   11b24:	andeq	r9, r2, ip, asr r1
   11b28:	andeq	r9, r2, ip, asr #2
   11b2c:	andeq	r9, r2, r0, ror #1
   11b30:	andeq	r9, r2, r0, ror #2
   11b34:	push	{r4, fp, lr}
   11b38:	add	fp, sp, #8
   11b3c:	sub	sp, sp, #44	; 0x2c
   11b40:	str	r0, [fp, #-48]	; 0xffffffd0
   11b44:	str	r1, [fp, #-52]	; 0xffffffcc
   11b48:	mov	r3, #1
   11b4c:	strb	r3, [fp, #-13]
   11b50:	b	11dec <putchar_unlocked@plt+0xf60>
   11b54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11b58:	ldr	r3, [r3]
   11b5c:	ldr	r1, [pc, #676]	; 11e08 <putchar_unlocked@plt+0xf7c>
   11b60:	mov	r0, r3
   11b64:	bl	10c64 <strcmp@plt>
   11b68:	mov	r3, r0
   11b6c:	cmp	r3, #0
   11b70:	moveq	r3, #1
   11b74:	movne	r3, #0
   11b78:	strb	r3, [fp, #-33]	; 0xffffffdf
   11b7c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   11b80:	cmp	r3, #0
   11b84:	beq	11ba4 <putchar_unlocked@plt+0xd18>
   11b88:	ldr	r3, [pc, #636]	; 11e0c <putchar_unlocked@plt+0xf80>
   11b8c:	mov	r2, #1
   11b90:	strb	r2, [r3]
   11b94:	ldr	r3, [pc, #628]	; 11e10 <putchar_unlocked@plt+0xf84>
   11b98:	ldr	r3, [r3]
   11b9c:	str	r3, [fp, #-28]	; 0xffffffe4
   11ba0:	b	11c18 <putchar_unlocked@plt+0xd8c>
   11ba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11ba8:	ldr	r3, [r3]
   11bac:	ldr	r1, [pc, #608]	; 11e14 <putchar_unlocked@plt+0xf88>
   11bb0:	mov	r0, r3
   11bb4:	bl	10e5c <fopen64@plt>
   11bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   11bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11bc0:	cmp	r3, #0
   11bc4:	bne	11c0c <putchar_unlocked@plt+0xd80>
   11bc8:	bl	10de4 <__errno_location@plt>
   11bcc:	mov	r3, r0
   11bd0:	ldr	r4, [r3]
   11bd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11bd8:	ldr	r3, [r3]
   11bdc:	mov	r2, r3
   11be0:	mov	r1, #3
   11be4:	mov	r0, #0
   11be8:	bl	14c98 <putchar_unlocked@plt+0x3e0c>
   11bec:	mov	r3, r0
   11bf0:	ldr	r2, [pc, #544]	; 11e18 <putchar_unlocked@plt+0xf8c>
   11bf4:	mov	r1, r4
   11bf8:	mov	r0, #0
   11bfc:	bl	10d60 <error@plt>
   11c00:	mov	r3, #0
   11c04:	strb	r3, [fp, #-13]
   11c08:	b	11dd4 <putchar_unlocked@plt+0xf48>
   11c0c:	mov	r1, #2
   11c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c14:	bl	1246c <putchar_unlocked@plt+0x15e0>
   11c18:	ldr	r3, [pc, #508]	; 11e1c <putchar_unlocked@plt+0xf90>
   11c1c:	ldr	r3, [r3]
   11c20:	str	r3, [fp, #-24]	; 0xffffffe8
   11c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c28:	bl	10ce8 <getc_unlocked@plt>
   11c2c:	str	r0, [fp, #-20]	; 0xffffffec
   11c30:	bl	10de4 <__errno_location@plt>
   11c34:	mov	r3, r0
   11c38:	ldr	r3, [r3]
   11c3c:	str	r3, [fp, #-32]	; 0xffffffe0
   11c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c44:	cmn	r3, #1
   11c48:	beq	11d08 <putchar_unlocked@plt+0xe7c>
   11c4c:	b	11cd0 <putchar_unlocked@plt+0xe44>
   11c50:	ldr	r3, [pc, #456]	; 11e20 <putchar_unlocked@plt+0xf94>
   11c54:	ldrb	r3, [r3]
   11c58:	mov	r2, r3
   11c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c60:	cmp	r2, r3
   11c64:	bne	11cb8 <putchar_unlocked@plt+0xe2c>
   11c68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c6c:	ldrb	r3, [r3]
   11c70:	cmp	r3, #0
   11c74:	beq	11c88 <putchar_unlocked@plt+0xdfc>
   11c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c7c:	ldrb	r3, [r3]
   11c80:	mov	r0, r3
   11c84:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c8c:	add	r3, r3, #1
   11c90:	str	r3, [fp, #-24]	; 0xffffffe8
   11c94:	ldr	r3, [pc, #392]	; 11e24 <putchar_unlocked@plt+0xf98>
   11c98:	ldr	r3, [r3]
   11c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11ca0:	cmp	r2, r3
   11ca4:	bne	11cc8 <putchar_unlocked@plt+0xe3c>
   11ca8:	ldr	r3, [pc, #364]	; 11e1c <putchar_unlocked@plt+0xf90>
   11cac:	ldr	r3, [r3]
   11cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   11cb4:	b	11cc8 <putchar_unlocked@plt+0xe3c>
   11cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cbc:	uxtb	r3, r3
   11cc0:	mov	r0, r3
   11cc4:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ccc:	str	r3, [fp, #-20]	; 0xffffffec
   11cd0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cd4:	bl	10ce8 <getc_unlocked@plt>
   11cd8:	str	r0, [fp, #-40]	; 0xffffffd8
   11cdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11ce0:	cmn	r3, #1
   11ce4:	bne	11c50 <putchar_unlocked@plt+0xdc4>
   11ce8:	bl	10de4 <__errno_location@plt>
   11cec:	mov	r3, r0
   11cf0:	ldr	r3, [r3]
   11cf4:	str	r3, [fp, #-32]	; 0xffffffe0
   11cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cfc:	uxtb	r3, r3
   11d00:	mov	r0, r3
   11d04:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11d08:	ldr	r3, [pc, #272]	; 11e20 <putchar_unlocked@plt+0xf94>
   11d0c:	ldrb	r3, [r3]
   11d10:	mov	r2, r3
   11d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d18:	cmp	r2, r3
   11d1c:	beq	11d30 <putchar_unlocked@plt+0xea4>
   11d20:	ldr	r3, [pc, #248]	; 11e20 <putchar_unlocked@plt+0xf94>
   11d24:	ldrb	r3, [r3]
   11d28:	mov	r0, r3
   11d2c:	bl	11440 <putchar_unlocked@plt+0x5b4>
   11d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d34:	bl	10d48 <ferror_unlocked@plt>
   11d38:	mov	r3, r0
   11d3c:	cmp	r3, #0
   11d40:	bne	11d4c <putchar_unlocked@plt+0xec0>
   11d44:	mov	r3, #0
   11d48:	str	r3, [fp, #-32]	; 0xffffffe0
   11d4c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   11d50:	cmp	r3, #0
   11d54:	beq	11d64 <putchar_unlocked@plt+0xed8>
   11d58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d5c:	bl	10e50 <clearerr_unlocked@plt>
   11d60:	b	11d94 <putchar_unlocked@plt+0xf08>
   11d64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d68:	bl	124c8 <putchar_unlocked@plt+0x163c>
   11d6c:	mov	r3, r0
   11d70:	cmp	r3, #0
   11d74:	beq	11d94 <putchar_unlocked@plt+0xf08>
   11d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d7c:	cmp	r3, #0
   11d80:	bne	11d94 <putchar_unlocked@plt+0xf08>
   11d84:	bl	10de4 <__errno_location@plt>
   11d88:	mov	r3, r0
   11d8c:	ldr	r3, [r3]
   11d90:	str	r3, [fp, #-32]	; 0xffffffe0
   11d94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d98:	cmp	r3, #0
   11d9c:	beq	11dd4 <putchar_unlocked@plt+0xf48>
   11da0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11da4:	ldr	r3, [r3]
   11da8:	mov	r2, r3
   11dac:	mov	r1, #3
   11db0:	mov	r0, #0
   11db4:	bl	14c98 <putchar_unlocked@plt+0x3e0c>
   11db8:	mov	r3, r0
   11dbc:	ldr	r2, [pc, #84]	; 11e18 <putchar_unlocked@plt+0xf8c>
   11dc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dc4:	mov	r0, #0
   11dc8:	bl	10d60 <error@plt>
   11dcc:	mov	r3, #0
   11dd0:	strb	r3, [fp, #-13]
   11dd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11dd8:	sub	r3, r3, #1
   11ddc:	str	r3, [fp, #-48]	; 0xffffffd0
   11de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11de4:	add	r3, r3, #4
   11de8:	str	r3, [fp, #-52]	; 0xffffffcc
   11dec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11df0:	cmp	r3, #0
   11df4:	bne	11b54 <putchar_unlocked@plt+0xcc8>
   11df8:	ldrb	r3, [fp, #-13]
   11dfc:	mov	r0, r3
   11e00:	sub	sp, fp, #8
   11e04:	pop	{r4, fp, pc}
   11e08:	andeq	r7, r1, r4, asr #15
   11e0c:	andeq	r9, r2, r8, asr r1
   11e10:	andeq	r9, r2, r8, asr #2
   11e14:	andeq	r7, r1, r8, asr #15
   11e18:	andeq	r7, r1, ip, asr #15
   11e1c:	andeq	r9, r2, ip, asr r1
   11e20:	andeq	r9, r2, r0, ror #1
   11e24:	andeq	r9, r2, r0, ror #2
   11e28:	push	{r4, fp, lr}
   11e2c:	add	fp, sp, #8
   11e30:	sub	sp, sp, #12
   11e34:	str	r0, [fp, #-16]
   11e38:	ldr	r3, [fp, #-16]
   11e3c:	cmp	r3, #0
   11e40:	beq	11e70 <putchar_unlocked@plt+0xfe4>
   11e44:	ldr	r3, [pc, #252]	; 11f48 <putchar_unlocked@plt+0x10bc>
   11e48:	ldr	r4, [r3]
   11e4c:	ldr	r0, [pc, #248]	; 11f4c <putchar_unlocked@plt+0x10c0>
   11e50:	bl	10dc0 <gettext@plt>
   11e54:	mov	r1, r0
   11e58:	ldr	r3, [pc, #240]	; 11f50 <putchar_unlocked@plt+0x10c4>
   11e5c:	ldr	r3, [r3]
   11e60:	mov	r2, r3
   11e64:	mov	r0, r4
   11e68:	bl	10dd8 <fprintf@plt>
   11e6c:	b	11f40 <putchar_unlocked@plt+0x10b4>
   11e70:	ldr	r0, [pc, #220]	; 11f54 <putchar_unlocked@plt+0x10c8>
   11e74:	bl	10dc0 <gettext@plt>
   11e78:	mov	r2, r0
   11e7c:	ldr	r3, [pc, #204]	; 11f50 <putchar_unlocked@plt+0x10c4>
   11e80:	ldr	r3, [r3]
   11e84:	mov	r1, r3
   11e88:	mov	r0, r2
   11e8c:	bl	10c7c <printf@plt>
   11e90:	ldr	r0, [pc, #192]	; 11f58 <putchar_unlocked@plt+0x10cc>
   11e94:	bl	10dc0 <gettext@plt>
   11e98:	mov	r2, r0
   11e9c:	ldr	r3, [pc, #184]	; 11f5c <putchar_unlocked@plt+0x10d0>
   11ea0:	ldr	r3, [r3]
   11ea4:	mov	r1, r3
   11ea8:	mov	r0, r2
   11eac:	bl	10c4c <fputs_unlocked@plt>
   11eb0:	bl	10fc0 <putchar_unlocked@plt+0x134>
   11eb4:	bl	10ff8 <putchar_unlocked@plt+0x16c>
   11eb8:	ldr	r0, [pc, #160]	; 11f60 <putchar_unlocked@plt+0x10d4>
   11ebc:	bl	10dc0 <gettext@plt>
   11ec0:	mov	r2, r0
   11ec4:	ldr	r3, [pc, #144]	; 11f5c <putchar_unlocked@plt+0x10d0>
   11ec8:	ldr	r3, [r3]
   11ecc:	mov	r1, r3
   11ed0:	mov	r0, r2
   11ed4:	bl	10c4c <fputs_unlocked@plt>
   11ed8:	ldr	r0, [pc, #132]	; 11f64 <putchar_unlocked@plt+0x10d8>
   11edc:	bl	10dc0 <gettext@plt>
   11ee0:	mov	r2, r0
   11ee4:	ldr	r3, [pc, #112]	; 11f5c <putchar_unlocked@plt+0x10d0>
   11ee8:	ldr	r3, [r3]
   11eec:	mov	r1, r3
   11ef0:	mov	r0, r2
   11ef4:	bl	10c4c <fputs_unlocked@plt>
   11ef8:	ldr	r0, [pc, #104]	; 11f68 <putchar_unlocked@plt+0x10dc>
   11efc:	bl	10dc0 <gettext@plt>
   11f00:	mov	r2, r0
   11f04:	ldr	r3, [pc, #80]	; 11f5c <putchar_unlocked@plt+0x10d0>
   11f08:	ldr	r3, [r3]
   11f0c:	mov	r1, r3
   11f10:	mov	r0, r2
   11f14:	bl	10c4c <fputs_unlocked@plt>
   11f18:	ldr	r0, [pc, #76]	; 11f6c <putchar_unlocked@plt+0x10e0>
   11f1c:	bl	10dc0 <gettext@plt>
   11f20:	mov	r2, r0
   11f24:	ldr	r3, [pc, #48]	; 11f5c <putchar_unlocked@plt+0x10d0>
   11f28:	ldr	r3, [r3]
   11f2c:	mov	r1, r3
   11f30:	mov	r0, r2
   11f34:	bl	10c4c <fputs_unlocked@plt>
   11f38:	ldr	r0, [pc, #48]	; 11f70 <putchar_unlocked@plt+0x10e4>
   11f3c:	bl	11030 <putchar_unlocked@plt+0x1a4>
   11f40:	ldr	r0, [fp, #-16]
   11f44:	bl	10db4 <exit@plt>
   11f48:	andeq	r9, r2, r0, asr #2
   11f4c:	andeq	r7, r1, ip, ror #15
   11f50:	andeq	r9, r2, ip, ror #2
   11f54:	andeq	r7, r1, r4, lsl r8
   11f58:	andeq	r7, r1, r8, lsr r8
   11f5c:	andeq	r9, r2, ip, asr #2
   11f60:			; <UNDEFINED> instruction: 0x000178b0
   11f64:	andeq	r7, r1, r0, asr #18
   11f68:	andeq	r7, r1, r0, lsl #19
   11f6c:			; <UNDEFINED> instruction: 0x000179b0
   11f70:	andeq	r7, r1, r8, ror #19
   11f74:	push	{r4, fp, lr}
   11f78:	add	fp, sp, #8
   11f7c:	sub	sp, sp, #44	; 0x2c
   11f80:	str	r0, [fp, #-32]	; 0xffffffe0
   11f84:	str	r1, [fp, #-36]	; 0xffffffdc
   11f88:	ldr	r3, [pc, #672]	; 12230 <putchar_unlocked@plt+0x13a4>
   11f8c:	str	r3, [fp, #-16]
   11f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11f94:	ldr	r3, [r3]
   11f98:	mov	r0, r3
   11f9c:	bl	127d8 <putchar_unlocked@plt+0x194c>
   11fa0:	ldr	r1, [pc, #652]	; 12234 <putchar_unlocked@plt+0x13a8>
   11fa4:	mov	r0, #6
   11fa8:	bl	10e2c <setlocale@plt>
   11fac:	ldr	r1, [pc, #644]	; 12238 <putchar_unlocked@plt+0x13ac>
   11fb0:	ldr	r0, [pc, #644]	; 1223c <putchar_unlocked@plt+0x13b0>
   11fb4:	bl	10e68 <bindtextdomain@plt>
   11fb8:	ldr	r0, [pc, #636]	; 1223c <putchar_unlocked@plt+0x13b0>
   11fbc:	bl	10d00 <textdomain@plt>
   11fc0:	ldr	r0, [pc, #632]	; 12240 <putchar_unlocked@plt+0x13b4>
   11fc4:	bl	174d0 <putchar_unlocked@plt+0x6644>
   11fc8:	ldr	r3, [pc, #628]	; 12244 <putchar_unlocked@plt+0x13b8>
   11fcc:	mov	r2, #0
   11fd0:	strb	r2, [r3]
   11fd4:	ldr	r3, [pc, #620]	; 12248 <putchar_unlocked@plt+0x13bc>
   11fd8:	mov	r2, #0
   11fdc:	strb	r2, [r3]
   11fe0:	b	120bc <putchar_unlocked@plt+0x1230>
   11fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fe8:	cmp	r3, #100	; 0x64
   11fec:	beq	12020 <putchar_unlocked@plt+0x1194>
   11ff0:	cmp	r3, #100	; 0x64
   11ff4:	bgt	1200c <putchar_unlocked@plt+0x1180>
   11ff8:	cmn	r3, #3
   11ffc:	beq	12074 <putchar_unlocked@plt+0x11e8>
   12000:	cmn	r3, #2
   12004:	beq	1206c <putchar_unlocked@plt+0x11e0>
   12008:	b	120b4 <putchar_unlocked@plt+0x1228>
   1200c:	cmp	r3, #115	; 0x73
   12010:	beq	1204c <putchar_unlocked@plt+0x11c0>
   12014:	cmp	r3, #122	; 0x7a
   12018:	beq	1205c <putchar_unlocked@plt+0x11d0>
   1201c:	b	120b4 <putchar_unlocked@plt+0x1228>
   12020:	ldr	r3, [pc, #548]	; 1224c <putchar_unlocked@plt+0x13c0>
   12024:	ldr	r3, [r3]
   12028:	ldrb	r3, [r3]
   1202c:	cmp	r3, #0
   12030:	beq	12040 <putchar_unlocked@plt+0x11b4>
   12034:	ldr	r3, [pc, #528]	; 1224c <putchar_unlocked@plt+0x13c0>
   12038:	ldr	r3, [r3]
   1203c:	b	12044 <putchar_unlocked@plt+0x11b8>
   12040:	ldr	r3, [pc, #520]	; 12250 <putchar_unlocked@plt+0x13c4>
   12044:	str	r3, [fp, #-16]
   12048:	b	120bc <putchar_unlocked@plt+0x1230>
   1204c:	ldr	r3, [pc, #500]	; 12248 <putchar_unlocked@plt+0x13bc>
   12050:	mov	r2, #1
   12054:	strb	r2, [r3]
   12058:	b	120bc <putchar_unlocked@plt+0x1230>
   1205c:	ldr	r3, [pc, #496]	; 12254 <putchar_unlocked@plt+0x13c8>
   12060:	mov	r2, #0
   12064:	strb	r2, [r3]
   12068:	b	120bc <putchar_unlocked@plt+0x1230>
   1206c:	mov	r0, #0
   12070:	bl	11e28 <putchar_unlocked@plt+0xf9c>
   12074:	ldr	r3, [pc, #476]	; 12258 <putchar_unlocked@plt+0x13cc>
   12078:	ldr	r0, [r3]
   1207c:	ldr	r3, [pc, #472]	; 1225c <putchar_unlocked@plt+0x13d0>
   12080:	ldr	r2, [r3]
   12084:	mov	r3, #0
   12088:	str	r3, [sp, #8]
   1208c:	ldr	r3, [pc, #460]	; 12260 <putchar_unlocked@plt+0x13d4>
   12090:	str	r3, [sp, #4]
   12094:	ldr	r3, [pc, #456]	; 12264 <putchar_unlocked@plt+0x13d8>
   12098:	str	r3, [sp]
   1209c:	mov	r3, r2
   120a0:	ldr	r2, [pc, #448]	; 12268 <putchar_unlocked@plt+0x13dc>
   120a4:	ldr	r1, [pc, #448]	; 1226c <putchar_unlocked@plt+0x13e0>
   120a8:	bl	155d4 <putchar_unlocked@plt+0x4748>
   120ac:	mov	r0, #0
   120b0:	bl	10db4 <exit@plt>
   120b4:	mov	r0, #1
   120b8:	bl	11e28 <putchar_unlocked@plt+0xf9c>
   120bc:	mov	r3, #0
   120c0:	str	r3, [sp]
   120c4:	ldr	r3, [pc, #420]	; 12270 <putchar_unlocked@plt+0x13e4>
   120c8:	ldr	r2, [pc, #420]	; 12274 <putchar_unlocked@plt+0x13e8>
   120cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   120d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120d4:	bl	10d9c <getopt_long@plt>
   120d8:	str	r0, [fp, #-24]	; 0xffffffe8
   120dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120e0:	cmn	r3, #1
   120e4:	bne	11fe4 <putchar_unlocked@plt+0x1158>
   120e8:	ldr	r3, [pc, #392]	; 12278 <putchar_unlocked@plt+0x13ec>
   120ec:	ldr	r3, [r3]
   120f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   120f4:	sub	r3, r2, r3
   120f8:	str	r3, [fp, #-20]	; 0xffffffec
   120fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12100:	cmp	r3, #0
   12104:	bne	12138 <putchar_unlocked@plt+0x12ac>
   12108:	ldr	r3, [pc, #360]	; 12278 <putchar_unlocked@plt+0x13ec>
   1210c:	ldr	r3, [r3]
   12110:	lsl	r3, r3, #2
   12114:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12118:	add	r4, r2, r3
   1211c:	ldr	r0, [pc, #344]	; 1227c <putchar_unlocked@plt+0x13f0>
   12120:	bl	111d0 <putchar_unlocked@plt+0x344>
   12124:	mov	r3, r0
   12128:	str	r3, [r4]
   1212c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12130:	add	r3, r3, #1
   12134:	str	r3, [fp, #-20]	; 0xffffffec
   12138:	ldr	r0, [fp, #-16]
   1213c:	bl	111f4 <putchar_unlocked@plt+0x368>
   12140:	mov	r3, r0
   12144:	cmp	r3, #0
   12148:	beq	1217c <putchar_unlocked@plt+0x12f0>
   1214c:	ldr	r0, [pc, #300]	; 12280 <putchar_unlocked@plt+0x13f4>
   12150:	bl	10dc0 <gettext@plt>
   12154:	mov	r4, r0
   12158:	ldr	r2, [fp, #-16]
   1215c:	mov	r1, #6
   12160:	mov	r0, #0
   12164:	bl	14c98 <putchar_unlocked@plt+0x3e0c>
   12168:	mov	r3, r0
   1216c:	mov	r2, r4
   12170:	mov	r1, #0
   12174:	mov	r0, #1
   12178:	bl	10d60 <error@plt>
   1217c:	ldr	r3, [pc, #196]	; 12248 <putchar_unlocked@plt+0x13bc>
   12180:	ldrb	r3, [r3]
   12184:	cmp	r3, #0
   12188:	beq	12194 <putchar_unlocked@plt+0x1308>
   1218c:	ldr	r3, [pc, #240]	; 12284 <putchar_unlocked@plt+0x13f8>
   12190:	b	12198 <putchar_unlocked@plt+0x130c>
   12194:	ldr	r3, [pc, #236]	; 12288 <putchar_unlocked@plt+0x13fc>
   12198:	ldr	r0, [fp, #-20]	; 0xffffffec
   1219c:	ldr	r2, [pc, #212]	; 12278 <putchar_unlocked@plt+0x13ec>
   121a0:	ldr	r2, [r2]
   121a4:	lsl	r2, r2, #2
   121a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   121ac:	add	r2, r1, r2
   121b0:	mov	r1, r2
   121b4:	blx	r3
   121b8:	mov	r3, r0
   121bc:	strb	r3, [fp, #-25]	; 0xffffffe7
   121c0:	ldr	r3, [pc, #196]	; 1228c <putchar_unlocked@plt+0x1400>
   121c4:	ldr	r3, [r3]
   121c8:	mov	r0, r3
   121cc:	bl	12668 <putchar_unlocked@plt+0x17dc>
   121d0:	ldr	r3, [pc, #108]	; 12244 <putchar_unlocked@plt+0x13b8>
   121d4:	ldrb	r3, [r3]
   121d8:	cmp	r3, #0
   121dc:	beq	12218 <putchar_unlocked@plt+0x138c>
   121e0:	ldr	r3, [pc, #168]	; 12290 <putchar_unlocked@plt+0x1404>
   121e4:	ldr	r3, [r3]
   121e8:	mov	r0, r3
   121ec:	bl	124c8 <putchar_unlocked@plt+0x163c>
   121f0:	mov	r3, r0
   121f4:	cmn	r3, #1
   121f8:	bne	12218 <putchar_unlocked@plt+0x138c>
   121fc:	bl	10de4 <__errno_location@plt>
   12200:	mov	r3, r0
   12204:	ldr	r3, [r3]
   12208:	ldr	r2, [pc, #108]	; 1227c <putchar_unlocked@plt+0x13f0>
   1220c:	mov	r1, r3
   12210:	mov	r0, #1
   12214:	bl	10d60 <error@plt>
   12218:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1221c:	eor	r3, r3, #1
   12220:	uxtb	r3, r3
   12224:	mov	r0, r3
   12228:	sub	sp, fp, #8
   1222c:	pop	{r4, fp, pc}
   12230:	strdeq	r7, [r1], -r0
   12234:	andeq	r7, r1, r0, ror r6
   12238:	strdeq	r7, [r1], -r4
   1223c:	andeq	r7, r1, r8, lsl #13
   12240:	strdeq	r2, [r1], -r8
   12244:	andeq	r9, r2, r8, asr r1
   12248:	andeq	r9, r2, r9, asr r1
   1224c:	andeq	r9, r2, r0, asr r1
   12250:	andeq	r7, r1, ip, lsl #20
   12254:	andeq	r9, r2, r0, ror #1
   12258:	andeq	r9, r2, ip, asr #2
   1225c:	andeq	r9, r2, r4, ror #1
   12260:	andeq	r7, r1, r0, lsl sl
   12264:	andeq	r7, r1, r0, lsr #20
   12268:			; <UNDEFINED> instruction: 0x000175b8
   1226c:	andeq	r7, r1, r8, ror #19
   12270:	andeq	r7, r1, r8, asr r7
   12274:	andeq	r7, r1, r0, lsr sl
   12278:	andeq	r9, r2, r8, lsr r1
   1227c:	andeq	r7, r1, r4, asr #15
   12280:	andeq	r7, r1, r8, lsr sl
   12284:	andeq	r1, r1, r4, lsr fp
   12288:	andeq	r1, r1, ip, ror r4
   1228c:	andeq	r9, r2, ip, asr r1
   12290:	andeq	r9, r2, r8, asr #2
   12294:	push	{fp}		; (str fp, [sp, #-4]!)
   12298:	add	fp, sp, #0
   1229c:	sub	sp, sp, #12
   122a0:	str	r0, [fp, #-8]
   122a4:	ldr	r2, [pc, #20]	; 122c0 <putchar_unlocked@plt+0x1434>
   122a8:	ldr	r3, [fp, #-8]
   122ac:	str	r3, [r2]
   122b0:	nop			; (mov r0, r0)
   122b4:	add	sp, fp, #0
   122b8:	pop	{fp}		; (ldr fp, [sp], #4)
   122bc:	bx	lr
   122c0:	andeq	r9, r2, r4, ror #2
   122c4:	push	{fp}		; (str fp, [sp, #-4]!)
   122c8:	add	fp, sp, #0
   122cc:	sub	sp, sp, #12
   122d0:	mov	r3, r0
   122d4:	strb	r3, [fp, #-5]
   122d8:	ldr	r2, [pc, #20]	; 122f4 <putchar_unlocked@plt+0x1468>
   122dc:	ldrb	r3, [fp, #-5]
   122e0:	strb	r3, [r2]
   122e4:	nop			; (mov r0, r0)
   122e8:	add	sp, fp, #0
   122ec:	pop	{fp}		; (ldr fp, [sp], #4)
   122f0:	bx	lr
   122f4:	andeq	r9, r2, r8, ror #2
   122f8:	push	{r4, fp, lr}
   122fc:	add	fp, sp, #8
   12300:	sub	sp, sp, #20
   12304:	ldr	r3, [pc, #256]	; 1240c <putchar_unlocked@plt+0x1580>
   12308:	ldr	r3, [r3]
   1230c:	mov	r0, r3
   12310:	bl	1654c <putchar_unlocked@plt+0x56c0>
   12314:	mov	r3, r0
   12318:	cmp	r3, #0
   1231c:	beq	123d4 <putchar_unlocked@plt+0x1548>
   12320:	ldr	r3, [pc, #232]	; 12410 <putchar_unlocked@plt+0x1584>
   12324:	ldrb	r3, [r3]
   12328:	eor	r3, r3, #1
   1232c:	uxtb	r3, r3
   12330:	cmp	r3, #0
   12334:	bne	1234c <putchar_unlocked@plt+0x14c0>
   12338:	bl	10de4 <__errno_location@plt>
   1233c:	mov	r3, r0
   12340:	ldr	r3, [r3]
   12344:	cmp	r3, #32
   12348:	beq	123d4 <putchar_unlocked@plt+0x1548>
   1234c:	ldr	r0, [pc, #192]	; 12414 <putchar_unlocked@plt+0x1588>
   12350:	bl	10dc0 <gettext@plt>
   12354:	str	r0, [fp, #-16]
   12358:	ldr	r3, [pc, #184]	; 12418 <putchar_unlocked@plt+0x158c>
   1235c:	ldr	r3, [r3]
   12360:	cmp	r3, #0
   12364:	beq	123a8 <putchar_unlocked@plt+0x151c>
   12368:	bl	10de4 <__errno_location@plt>
   1236c:	mov	r3, r0
   12370:	ldr	r4, [r3]
   12374:	ldr	r3, [pc, #156]	; 12418 <putchar_unlocked@plt+0x158c>
   12378:	ldr	r3, [r3]
   1237c:	mov	r0, r3
   12380:	bl	14c38 <putchar_unlocked@plt+0x3dac>
   12384:	mov	r2, r0
   12388:	ldr	r3, [fp, #-16]
   1238c:	str	r3, [sp]
   12390:	mov	r3, r2
   12394:	ldr	r2, [pc, #128]	; 1241c <putchar_unlocked@plt+0x1590>
   12398:	mov	r1, r4
   1239c:	mov	r0, #0
   123a0:	bl	10d60 <error@plt>
   123a4:	b	123c4 <putchar_unlocked@plt+0x1538>
   123a8:	bl	10de4 <__errno_location@plt>
   123ac:	mov	r3, r0
   123b0:	ldr	r1, [r3]
   123b4:	ldr	r3, [fp, #-16]
   123b8:	ldr	r2, [pc, #96]	; 12420 <putchar_unlocked@plt+0x1594>
   123bc:	mov	r0, #0
   123c0:	bl	10d60 <error@plt>
   123c4:	ldr	r3, [pc, #88]	; 12424 <putchar_unlocked@plt+0x1598>
   123c8:	ldr	r3, [r3]
   123cc:	mov	r0, r3
   123d0:	bl	10ca0 <_exit@plt>
   123d4:	ldr	r3, [pc, #76]	; 12428 <putchar_unlocked@plt+0x159c>
   123d8:	ldr	r3, [r3]
   123dc:	mov	r0, r3
   123e0:	bl	1654c <putchar_unlocked@plt+0x56c0>
   123e4:	mov	r3, r0
   123e8:	cmp	r3, #0
   123ec:	beq	12400 <putchar_unlocked@plt+0x1574>
   123f0:	ldr	r3, [pc, #44]	; 12424 <putchar_unlocked@plt+0x1598>
   123f4:	ldr	r3, [r3]
   123f8:	mov	r0, r3
   123fc:	bl	10ca0 <_exit@plt>
   12400:	nop			; (mov r0, r0)
   12404:	sub	sp, fp, #8
   12408:	pop	{r4, fp, pc}
   1240c:	andeq	r9, r2, ip, asr #2
   12410:	andeq	r9, r2, r8, ror #2
   12414:	andeq	r7, r1, ip, ror sl
   12418:	andeq	r9, r2, r4, ror #2
   1241c:	andeq	r7, r1, r8, lsl #21
   12420:	muleq	r1, r0, sl
   12424:	andeq	r9, r2, r8, ror #1
   12428:	andeq	r9, r2, r0, asr #2
   1242c:	push	{fp, lr}
   12430:	add	fp, sp, #4
   12434:	sub	sp, sp, #40	; 0x28
   12438:	str	r0, [fp, #-16]
   1243c:	strd	r2, [fp, #-28]	; 0xffffffe4
   12440:	ldr	r3, [fp, #12]
   12444:	str	r3, [sp, #8]
   12448:	ldrd	r2, [fp, #4]
   1244c:	strd	r2, [sp]
   12450:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12454:	ldr	r0, [fp, #-16]
   12458:	bl	10c70 <posix_fadvise64@plt>
   1245c:	str	r0, [fp, #-8]
   12460:	nop			; (mov r0, r0)
   12464:	sub	sp, fp, #4
   12468:	pop	{fp, pc}
   1246c:	push	{fp, lr}
   12470:	add	fp, sp, #4
   12474:	sub	sp, sp, #24
   12478:	str	r0, [fp, #-8]
   1247c:	str	r1, [fp, #-12]
   12480:	ldr	r3, [fp, #-8]
   12484:	cmp	r3, #0
   12488:	beq	124bc <putchar_unlocked@plt+0x1630>
   1248c:	ldr	r0, [fp, #-8]
   12490:	bl	10e08 <fileno@plt>
   12494:	mov	r1, r0
   12498:	ldr	r3, [fp, #-12]
   1249c:	str	r3, [sp, #8]
   124a0:	mov	r2, #0
   124a4:	mov	r3, #0
   124a8:	strd	r2, [sp]
   124ac:	mov	r2, #0
   124b0:	mov	r3, #0
   124b4:	mov	r0, r1
   124b8:	bl	1242c <putchar_unlocked@plt+0x15a0>
   124bc:	nop			; (mov r0, r0)
   124c0:	sub	sp, fp, #4
   124c4:	pop	{fp, pc}
   124c8:	push	{fp, lr}
   124cc:	add	fp, sp, #4
   124d0:	sub	sp, sp, #32
   124d4:	str	r0, [fp, #-24]	; 0xffffffe8
   124d8:	mov	r3, #0
   124dc:	str	r3, [fp, #-8]
   124e0:	mov	r3, #0
   124e4:	str	r3, [fp, #-12]
   124e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124ec:	bl	10e08 <fileno@plt>
   124f0:	str	r0, [fp, #-16]
   124f4:	ldr	r3, [fp, #-16]
   124f8:	cmp	r3, #0
   124fc:	bge	12510 <putchar_unlocked@plt+0x1684>
   12500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12504:	bl	10e14 <fclose@plt>
   12508:	mov	r3, r0
   1250c:	b	125b4 <putchar_unlocked@plt+0x1728>
   12510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12514:	bl	10d84 <__freading@plt>
   12518:	mov	r3, r0
   1251c:	cmp	r3, #0
   12520:	beq	1255c <putchar_unlocked@plt+0x16d0>
   12524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12528:	bl	10e08 <fileno@plt>
   1252c:	mov	r1, r0
   12530:	mov	r3, #1
   12534:	str	r3, [sp]
   12538:	mov	r2, #0
   1253c:	mov	r3, #0
   12540:	mov	r0, r1
   12544:	bl	10d24 <lseek64@plt>
   12548:	mvn	r2, #0
   1254c:	mvn	r3, #0
   12550:	cmp	r1, r3
   12554:	cmpeq	r0, r2
   12558:	beq	12580 <putchar_unlocked@plt+0x16f4>
   1255c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12560:	bl	12608 <putchar_unlocked@plt+0x177c>
   12564:	mov	r3, r0
   12568:	cmp	r3, #0
   1256c:	beq	12580 <putchar_unlocked@plt+0x16f4>
   12570:	bl	10de4 <__errno_location@plt>
   12574:	mov	r3, r0
   12578:	ldr	r3, [r3]
   1257c:	str	r3, [fp, #-8]
   12580:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12584:	bl	10e14 <fclose@plt>
   12588:	str	r0, [fp, #-12]
   1258c:	ldr	r3, [fp, #-8]
   12590:	cmp	r3, #0
   12594:	beq	125b0 <putchar_unlocked@plt+0x1724>
   12598:	bl	10de4 <__errno_location@plt>
   1259c:	mov	r2, r0
   125a0:	ldr	r3, [fp, #-8]
   125a4:	str	r3, [r2]
   125a8:	mvn	r3, #0
   125ac:	str	r3, [fp, #-12]
   125b0:	ldr	r3, [fp, #-12]
   125b4:	mov	r0, r3
   125b8:	sub	sp, fp, #4
   125bc:	pop	{fp, pc}
   125c0:	push	{fp, lr}
   125c4:	add	fp, sp, #4
   125c8:	sub	sp, sp, #16
   125cc:	str	r0, [fp, #-8]
   125d0:	ldr	r3, [fp, #-8]
   125d4:	ldr	r3, [r3]
   125d8:	and	r3, r3, #256	; 0x100
   125dc:	cmp	r3, #0
   125e0:	beq	125fc <putchar_unlocked@plt+0x1770>
   125e4:	mov	r3, #1
   125e8:	str	r3, [sp]
   125ec:	mov	r2, #0
   125f0:	mov	r3, #0
   125f4:	ldr	r0, [fp, #-8]
   125f8:	bl	126f4 <putchar_unlocked@plt+0x1868>
   125fc:	nop			; (mov r0, r0)
   12600:	sub	sp, fp, #4
   12604:	pop	{fp, pc}
   12608:	push	{fp, lr}
   1260c:	add	fp, sp, #4
   12610:	sub	sp, sp, #8
   12614:	str	r0, [fp, #-8]
   12618:	ldr	r3, [fp, #-8]
   1261c:	cmp	r3, #0
   12620:	beq	12638 <putchar_unlocked@plt+0x17ac>
   12624:	ldr	r0, [fp, #-8]
   12628:	bl	10d84 <__freading@plt>
   1262c:	mov	r3, r0
   12630:	cmp	r3, #0
   12634:	bne	12648 <putchar_unlocked@plt+0x17bc>
   12638:	ldr	r0, [fp, #-8]
   1263c:	bl	10c88 <fflush@plt>
   12640:	mov	r3, r0
   12644:	b	1265c <putchar_unlocked@plt+0x17d0>
   12648:	ldr	r0, [fp, #-8]
   1264c:	bl	125c0 <putchar_unlocked@plt+0x1734>
   12650:	ldr	r0, [fp, #-8]
   12654:	bl	10c88 <fflush@plt>
   12658:	mov	r3, r0
   1265c:	mov	r0, r3
   12660:	sub	sp, fp, #4
   12664:	pop	{fp, pc}
   12668:	push	{r4, fp, lr}
   1266c:	add	fp, sp, #8
   12670:	sub	sp, sp, #20
   12674:	str	r0, [fp, #-24]	; 0xffffffe8
   12678:	bl	10de4 <__errno_location@plt>
   1267c:	mov	r3, r0
   12680:	ldr	r3, [r3]
   12684:	str	r3, [fp, #-20]	; 0xffffffec
   12688:	bl	10de4 <__errno_location@plt>
   1268c:	mov	r3, r0
   12690:	ldr	r3, [r3]
   12694:	str	r3, [fp, #-16]
   12698:	bl	10de4 <__errno_location@plt>
   1269c:	mov	r2, r0
   126a0:	mov	r3, #0
   126a4:	str	r3, [r2]
   126a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   126ac:	bl	10c94 <free@plt>
   126b0:	bl	10de4 <__errno_location@plt>
   126b4:	mov	r4, r0
   126b8:	bl	10de4 <__errno_location@plt>
   126bc:	mov	r3, r0
   126c0:	ldr	r3, [r3]
   126c4:	cmp	r3, #0
   126c8:	moveq	r3, #1
   126cc:	movne	r3, #0
   126d0:	uxtb	r3, r3
   126d4:	lsl	r3, r3, #2
   126d8:	sub	r2, fp, #12
   126dc:	add	r3, r2, r3
   126e0:	ldr	r3, [r3, #-8]
   126e4:	str	r3, [r4]
   126e8:	nop			; (mov r0, r0)
   126ec:	sub	sp, fp, #8
   126f0:	pop	{r4, fp, pc}
   126f4:	push	{fp, lr}
   126f8:	add	fp, sp, #4
   126fc:	sub	sp, sp, #32
   12700:	str	r0, [fp, #-16]
   12704:	strd	r2, [fp, #-28]	; 0xffffffe4
   12708:	ldr	r3, [fp, #-16]
   1270c:	ldr	r2, [r3, #8]
   12710:	ldr	r3, [fp, #-16]
   12714:	ldr	r3, [r3, #4]
   12718:	cmp	r2, r3
   1271c:	bne	127b4 <putchar_unlocked@plt+0x1928>
   12720:	ldr	r3, [fp, #-16]
   12724:	ldr	r2, [r3, #20]
   12728:	ldr	r3, [fp, #-16]
   1272c:	ldr	r3, [r3, #16]
   12730:	cmp	r2, r3
   12734:	bne	127b4 <putchar_unlocked@plt+0x1928>
   12738:	ldr	r3, [fp, #-16]
   1273c:	ldr	r3, [r3, #36]	; 0x24
   12740:	cmp	r3, #0
   12744:	bne	127b4 <putchar_unlocked@plt+0x1928>
   12748:	ldr	r0, [fp, #-16]
   1274c:	bl	10e08 <fileno@plt>
   12750:	mov	r1, r0
   12754:	ldr	r3, [fp, #4]
   12758:	str	r3, [sp]
   1275c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   12760:	mov	r0, r1
   12764:	bl	10d24 <lseek64@plt>
   12768:	strd	r0, [fp, #-12]
   1276c:	ldrd	r2, [fp, #-12]
   12770:	mvn	r0, #0
   12774:	mvn	r1, #0
   12778:	cmp	r3, r1
   1277c:	cmpeq	r2, r0
   12780:	bne	1278c <putchar_unlocked@plt+0x1900>
   12784:	mvn	r3, #0
   12788:	b	127cc <putchar_unlocked@plt+0x1940>
   1278c:	ldr	r3, [fp, #-16]
   12790:	ldr	r3, [r3]
   12794:	bic	r2, r3, #16
   12798:	ldr	r3, [fp, #-16]
   1279c:	str	r2, [r3]
   127a0:	ldr	r1, [fp, #-16]
   127a4:	ldrd	r2, [fp, #-12]
   127a8:	strd	r2, [r1, #80]	; 0x50
   127ac:	mov	r3, #0
   127b0:	b	127cc <putchar_unlocked@plt+0x1940>
   127b4:	ldr	r3, [fp, #4]
   127b8:	str	r3, [sp]
   127bc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   127c0:	ldr	r0, [fp, #-16]
   127c4:	bl	10e20 <fseeko64@plt>
   127c8:	mov	r3, r0
   127cc:	mov	r0, r3
   127d0:	sub	sp, fp, #4
   127d4:	pop	{fp, pc}
   127d8:	push	{fp, lr}
   127dc:	add	fp, sp, #4
   127e0:	sub	sp, sp, #16
   127e4:	str	r0, [fp, #-16]
   127e8:	ldr	r3, [fp, #-16]
   127ec:	cmp	r3, #0
   127f0:	bne	12810 <putchar_unlocked@plt+0x1984>
   127f4:	ldr	r3, [pc, #220]	; 128d8 <putchar_unlocked@plt+0x1a4c>
   127f8:	ldr	r3, [r3]
   127fc:	mov	r2, #55	; 0x37
   12800:	mov	r1, #1
   12804:	ldr	r0, [pc, #208]	; 128dc <putchar_unlocked@plt+0x1a50>
   12808:	bl	10d18 <fwrite@plt>
   1280c:	bl	10e80 <abort@plt>
   12810:	mov	r1, #47	; 0x2f
   12814:	ldr	r0, [fp, #-16]
   12818:	bl	10e38 <strrchr@plt>
   1281c:	str	r0, [fp, #-8]
   12820:	ldr	r3, [fp, #-8]
   12824:	cmp	r3, #0
   12828:	beq	12838 <putchar_unlocked@plt+0x19ac>
   1282c:	ldr	r3, [fp, #-8]
   12830:	add	r3, r3, #1
   12834:	b	1283c <putchar_unlocked@plt+0x19b0>
   12838:	ldr	r3, [fp, #-16]
   1283c:	str	r3, [fp, #-12]
   12840:	ldr	r2, [fp, #-12]
   12844:	ldr	r3, [fp, #-16]
   12848:	sub	r3, r2, r3
   1284c:	cmp	r3, #6
   12850:	ble	128b4 <putchar_unlocked@plt+0x1a28>
   12854:	ldr	r3, [fp, #-12]
   12858:	sub	r3, r3, #7
   1285c:	mov	r2, #7
   12860:	ldr	r1, [pc, #120]	; 128e0 <putchar_unlocked@plt+0x1a54>
   12864:	mov	r0, r3
   12868:	bl	10e74 <strncmp@plt>
   1286c:	mov	r3, r0
   12870:	cmp	r3, #0
   12874:	bne	128b4 <putchar_unlocked@plt+0x1a28>
   12878:	ldr	r3, [fp, #-12]
   1287c:	str	r3, [fp, #-16]
   12880:	mov	r2, #3
   12884:	ldr	r1, [pc, #88]	; 128e4 <putchar_unlocked@plt+0x1a58>
   12888:	ldr	r0, [fp, #-12]
   1288c:	bl	10e74 <strncmp@plt>
   12890:	mov	r3, r0
   12894:	cmp	r3, #0
   12898:	bne	128b4 <putchar_unlocked@plt+0x1a28>
   1289c:	ldr	r3, [fp, #-12]
   128a0:	add	r3, r3, #3
   128a4:	str	r3, [fp, #-16]
   128a8:	ldr	r2, [pc, #56]	; 128e8 <putchar_unlocked@plt+0x1a5c>
   128ac:	ldr	r3, [fp, #-16]
   128b0:	str	r3, [r2]
   128b4:	ldr	r2, [pc, #48]	; 128ec <putchar_unlocked@plt+0x1a60>
   128b8:	ldr	r3, [fp, #-16]
   128bc:	str	r3, [r2]
   128c0:	ldr	r2, [pc, #40]	; 128f0 <putchar_unlocked@plt+0x1a64>
   128c4:	ldr	r3, [fp, #-16]
   128c8:	str	r3, [r2]
   128cc:	nop			; (mov r0, r0)
   128d0:	sub	sp, fp, #4
   128d4:	pop	{fp, pc}
   128d8:	andeq	r9, r2, r0, asr #2
   128dc:	muleq	r1, r4, sl
   128e0:	andeq	r7, r1, ip, asr #21
   128e4:	ldrdeq	r7, [r1], -r4
   128e8:	andeq	r9, r2, r0, lsr r1
   128ec:	andeq	r9, r2, ip, ror #2
   128f0:	andeq	r9, r2, r4, lsr r1
   128f4:	push	{fp, lr}
   128f8:	add	fp, sp, #4
   128fc:	sub	sp, sp, #16
   12900:	str	r0, [fp, #-16]
   12904:	bl	10de4 <__errno_location@plt>
   12908:	mov	r3, r0
   1290c:	ldr	r3, [r3]
   12910:	str	r3, [fp, #-8]
   12914:	ldr	r3, [fp, #-16]
   12918:	cmp	r3, #0
   1291c:	beq	12928 <putchar_unlocked@plt+0x1a9c>
   12920:	ldr	r3, [fp, #-16]
   12924:	b	1292c <putchar_unlocked@plt+0x1aa0>
   12928:	ldr	r3, [pc, #48]	; 12960 <putchar_unlocked@plt+0x1ad4>
   1292c:	mov	r1, #48	; 0x30
   12930:	mov	r0, r3
   12934:	bl	16118 <putchar_unlocked@plt+0x528c>
   12938:	mov	r3, r0
   1293c:	str	r3, [fp, #-12]
   12940:	bl	10de4 <__errno_location@plt>
   12944:	mov	r2, r0
   12948:	ldr	r3, [fp, #-8]
   1294c:	str	r3, [r2]
   12950:	ldr	r3, [fp, #-12]
   12954:	mov	r0, r3
   12958:	sub	sp, fp, #4
   1295c:	pop	{fp, pc}
   12960:	andeq	r9, r2, r0, ror r1
   12964:	push	{fp}		; (str fp, [sp, #-4]!)
   12968:	add	fp, sp, #0
   1296c:	sub	sp, sp, #12
   12970:	str	r0, [fp, #-8]
   12974:	ldr	r3, [fp, #-8]
   12978:	cmp	r3, #0
   1297c:	beq	12988 <putchar_unlocked@plt+0x1afc>
   12980:	ldr	r3, [fp, #-8]
   12984:	b	1298c <putchar_unlocked@plt+0x1b00>
   12988:	ldr	r3, [pc, #16]	; 129a0 <putchar_unlocked@plt+0x1b14>
   1298c:	ldr	r3, [r3]
   12990:	mov	r0, r3
   12994:	add	sp, fp, #0
   12998:	pop	{fp}		; (ldr fp, [sp], #4)
   1299c:	bx	lr
   129a0:	andeq	r9, r2, r0, ror r1
   129a4:	push	{fp}		; (str fp, [sp, #-4]!)
   129a8:	add	fp, sp, #0
   129ac:	sub	sp, sp, #12
   129b0:	str	r0, [fp, #-8]
   129b4:	str	r1, [fp, #-12]
   129b8:	ldr	r3, [fp, #-8]
   129bc:	cmp	r3, #0
   129c0:	beq	129cc <putchar_unlocked@plt+0x1b40>
   129c4:	ldr	r3, [fp, #-8]
   129c8:	b	129d0 <putchar_unlocked@plt+0x1b44>
   129cc:	ldr	r3, [pc, #20]	; 129e8 <putchar_unlocked@plt+0x1b5c>
   129d0:	ldr	r2, [fp, #-12]
   129d4:	str	r2, [r3]
   129d8:	nop			; (mov r0, r0)
   129dc:	add	sp, fp, #0
   129e0:	pop	{fp}		; (ldr fp, [sp], #4)
   129e4:	bx	lr
   129e8:	andeq	r9, r2, r0, ror r1
   129ec:	push	{fp}		; (str fp, [sp, #-4]!)
   129f0:	add	fp, sp, #0
   129f4:	sub	sp, sp, #36	; 0x24
   129f8:	str	r0, [fp, #-24]	; 0xffffffe8
   129fc:	mov	r3, r1
   12a00:	str	r2, [fp, #-32]	; 0xffffffe0
   12a04:	strb	r3, [fp, #-25]	; 0xffffffe7
   12a08:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   12a0c:	strb	r3, [fp, #-5]
   12a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a14:	cmp	r3, #0
   12a18:	beq	12a24 <putchar_unlocked@plt+0x1b98>
   12a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a20:	b	12a28 <putchar_unlocked@plt+0x1b9c>
   12a24:	ldr	r3, [pc, #124]	; 12aa8 <putchar_unlocked@plt+0x1c1c>
   12a28:	add	r2, r3, #8
   12a2c:	ldrb	r3, [fp, #-5]
   12a30:	lsr	r3, r3, #5
   12a34:	uxtb	r3, r3
   12a38:	lsl	r3, r3, #2
   12a3c:	add	r3, r2, r3
   12a40:	str	r3, [fp, #-12]
   12a44:	ldrb	r3, [fp, #-5]
   12a48:	and	r3, r3, #31
   12a4c:	str	r3, [fp, #-16]
   12a50:	ldr	r3, [fp, #-12]
   12a54:	ldr	r2, [r3]
   12a58:	ldr	r3, [fp, #-16]
   12a5c:	lsr	r3, r2, r3
   12a60:	and	r3, r3, #1
   12a64:	str	r3, [fp, #-20]	; 0xffffffec
   12a68:	ldr	r3, [fp, #-12]
   12a6c:	ldr	r3, [r3]
   12a70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a74:	and	r1, r2, #1
   12a78:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a7c:	eor	r1, r1, r2
   12a80:	ldr	r2, [fp, #-16]
   12a84:	lsl	r2, r1, r2
   12a88:	eor	r2, r2, r3
   12a8c:	ldr	r3, [fp, #-12]
   12a90:	str	r2, [r3]
   12a94:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a98:	mov	r0, r3
   12a9c:	add	sp, fp, #0
   12aa0:	pop	{fp}		; (ldr fp, [sp], #4)
   12aa4:	bx	lr
   12aa8:	andeq	r9, r2, r0, ror r1
   12aac:	push	{fp}		; (str fp, [sp, #-4]!)
   12ab0:	add	fp, sp, #0
   12ab4:	sub	sp, sp, #20
   12ab8:	str	r0, [fp, #-16]
   12abc:	str	r1, [fp, #-20]	; 0xffffffec
   12ac0:	ldr	r3, [fp, #-16]
   12ac4:	cmp	r3, #0
   12ac8:	bne	12ad4 <putchar_unlocked@plt+0x1c48>
   12acc:	ldr	r3, [pc, #44]	; 12b00 <putchar_unlocked@plt+0x1c74>
   12ad0:	str	r3, [fp, #-16]
   12ad4:	ldr	r3, [fp, #-16]
   12ad8:	ldr	r3, [r3, #4]
   12adc:	str	r3, [fp, #-8]
   12ae0:	ldr	r3, [fp, #-16]
   12ae4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ae8:	str	r2, [r3, #4]
   12aec:	ldr	r3, [fp, #-8]
   12af0:	mov	r0, r3
   12af4:	add	sp, fp, #0
   12af8:	pop	{fp}		; (ldr fp, [sp], #4)
   12afc:	bx	lr
   12b00:	andeq	r9, r2, r0, ror r1
   12b04:	push	{fp, lr}
   12b08:	add	fp, sp, #4
   12b0c:	sub	sp, sp, #16
   12b10:	str	r0, [fp, #-8]
   12b14:	str	r1, [fp, #-12]
   12b18:	str	r2, [fp, #-16]
   12b1c:	ldr	r3, [fp, #-8]
   12b20:	cmp	r3, #0
   12b24:	bne	12b30 <putchar_unlocked@plt+0x1ca4>
   12b28:	ldr	r3, [pc, #76]	; 12b7c <putchar_unlocked@plt+0x1cf0>
   12b2c:	str	r3, [fp, #-8]
   12b30:	ldr	r3, [fp, #-8]
   12b34:	mov	r2, #10
   12b38:	str	r2, [r3]
   12b3c:	ldr	r3, [fp, #-12]
   12b40:	cmp	r3, #0
   12b44:	beq	12b54 <putchar_unlocked@plt+0x1cc8>
   12b48:	ldr	r3, [fp, #-16]
   12b4c:	cmp	r3, #0
   12b50:	bne	12b58 <putchar_unlocked@plt+0x1ccc>
   12b54:	bl	10e80 <abort@plt>
   12b58:	ldr	r3, [fp, #-8]
   12b5c:	ldr	r2, [fp, #-12]
   12b60:	str	r2, [r3, #40]	; 0x28
   12b64:	ldr	r3, [fp, #-8]
   12b68:	ldr	r2, [fp, #-16]
   12b6c:	str	r2, [r3, #44]	; 0x2c
   12b70:	nop			; (mov r0, r0)
   12b74:	sub	sp, fp, #4
   12b78:	pop	{fp, pc}
   12b7c:	andeq	r9, r2, r0, ror r1
   12b80:	push	{fp, lr}
   12b84:	add	fp, sp, #4
   12b88:	sub	sp, sp, #56	; 0x38
   12b8c:	str	r0, [fp, #-56]	; 0xffffffc8
   12b90:	str	r1, [fp, #-60]	; 0xffffffc4
   12b94:	sub	r3, fp, #52	; 0x34
   12b98:	mov	r2, #48	; 0x30
   12b9c:	mov	r1, #0
   12ba0:	mov	r0, r3
   12ba4:	bl	10dfc <memset@plt>
   12ba8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bac:	cmp	r3, #10
   12bb0:	bne	12bb8 <putchar_unlocked@plt+0x1d2c>
   12bb4:	bl	10e80 <abort@plt>
   12bb8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bbc:	str	r3, [fp, #-52]	; 0xffffffcc
   12bc0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12bc4:	mov	lr, r3
   12bc8:	sub	ip, fp, #52	; 0x34
   12bcc:	ldm	ip!, {r0, r1, r2, r3}
   12bd0:	stmia	lr!, {r0, r1, r2, r3}
   12bd4:	ldm	ip!, {r0, r1, r2, r3}
   12bd8:	stmia	lr!, {r0, r1, r2, r3}
   12bdc:	ldm	ip, {r0, r1, r2, r3}
   12be0:	stm	lr, {r0, r1, r2, r3}
   12be4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12be8:	sub	sp, fp, #4
   12bec:	pop	{fp, pc}
   12bf0:	push	{fp, lr}
   12bf4:	add	fp, sp, #4
   12bf8:	sub	sp, sp, #16
   12bfc:	str	r0, [fp, #-16]
   12c00:	str	r1, [fp, #-20]	; 0xffffffec
   12c04:	ldr	r0, [fp, #-16]
   12c08:	bl	10dc0 <gettext@plt>
   12c0c:	str	r0, [fp, #-8]
   12c10:	ldr	r2, [fp, #-8]
   12c14:	ldr	r3, [fp, #-16]
   12c18:	cmp	r2, r3
   12c1c:	beq	12c28 <putchar_unlocked@plt+0x1d9c>
   12c20:	ldr	r3, [fp, #-8]
   12c24:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12c28:	bl	16760 <putchar_unlocked@plt+0x58d4>
   12c2c:	str	r0, [fp, #-12]
   12c30:	ldr	r1, [pc, #140]	; 12cc4 <putchar_unlocked@plt+0x1e38>
   12c34:	ldr	r0, [fp, #-12]
   12c38:	bl	164b4 <putchar_unlocked@plt+0x5628>
   12c3c:	mov	r3, r0
   12c40:	cmp	r3, #0
   12c44:	bne	12c68 <putchar_unlocked@plt+0x1ddc>
   12c48:	ldr	r3, [fp, #-16]
   12c4c:	ldrb	r3, [r3]
   12c50:	cmp	r3, #96	; 0x60
   12c54:	bne	12c60 <putchar_unlocked@plt+0x1dd4>
   12c58:	ldr	r3, [pc, #104]	; 12cc8 <putchar_unlocked@plt+0x1e3c>
   12c5c:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12c60:	ldr	r3, [pc, #100]	; 12ccc <putchar_unlocked@plt+0x1e40>
   12c64:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12c68:	ldr	r1, [pc, #96]	; 12cd0 <putchar_unlocked@plt+0x1e44>
   12c6c:	ldr	r0, [fp, #-12]
   12c70:	bl	164b4 <putchar_unlocked@plt+0x5628>
   12c74:	mov	r3, r0
   12c78:	cmp	r3, #0
   12c7c:	bne	12ca0 <putchar_unlocked@plt+0x1e14>
   12c80:	ldr	r3, [fp, #-16]
   12c84:	ldrb	r3, [r3]
   12c88:	cmp	r3, #96	; 0x60
   12c8c:	bne	12c98 <putchar_unlocked@plt+0x1e0c>
   12c90:	ldr	r3, [pc, #60]	; 12cd4 <putchar_unlocked@plt+0x1e48>
   12c94:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12c98:	ldr	r3, [pc, #56]	; 12cd8 <putchar_unlocked@plt+0x1e4c>
   12c9c:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ca4:	cmp	r3, #9
   12ca8:	bne	12cb4 <putchar_unlocked@plt+0x1e28>
   12cac:	ldr	r3, [pc, #40]	; 12cdc <putchar_unlocked@plt+0x1e50>
   12cb0:	b	12cb8 <putchar_unlocked@plt+0x1e2c>
   12cb4:	ldr	r3, [pc, #36]	; 12ce0 <putchar_unlocked@plt+0x1e54>
   12cb8:	mov	r0, r3
   12cbc:	sub	sp, fp, #4
   12cc0:	pop	{fp, pc}
   12cc4:	muleq	r1, r4, fp
   12cc8:	muleq	r1, ip, fp
   12ccc:	andeq	r7, r1, r0, lsr #23
   12cd0:	andeq	r7, r1, r4, lsr #23
   12cd4:	andeq	r7, r1, ip, lsr #23
   12cd8:			; <UNDEFINED> instruction: 0x00017bb0
   12cdc:			; <UNDEFINED> instruction: 0x00017bb4
   12ce0:			; <UNDEFINED> instruction: 0x00017bb8
   12ce4:	push	{r4, fp, lr}
   12ce8:	add	fp, sp, #8
   12cec:	sub	sp, sp, #116	; 0x74
   12cf0:	str	r0, [fp, #-88]	; 0xffffffa8
   12cf4:	str	r1, [fp, #-92]	; 0xffffffa4
   12cf8:	str	r2, [fp, #-96]	; 0xffffffa0
   12cfc:	str	r3, [fp, #-100]	; 0xffffff9c
   12d00:	mov	r3, #0
   12d04:	str	r3, [fp, #-20]	; 0xffffffec
   12d08:	mov	r3, #0
   12d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   12d10:	mov	r3, #0
   12d14:	str	r3, [fp, #-28]	; 0xffffffe4
   12d18:	mov	r3, #0
   12d1c:	str	r3, [fp, #-32]	; 0xffffffe0
   12d20:	mov	r3, #0
   12d24:	strb	r3, [fp, #-33]	; 0xffffffdf
   12d28:	bl	10d30 <__ctype_get_mb_cur_max@plt>
   12d2c:	mov	r3, r0
   12d30:	cmp	r3, #1
   12d34:	moveq	r3, #1
   12d38:	movne	r3, #0
   12d3c:	strb	r3, [fp, #-57]	; 0xffffffc7
   12d40:	ldr	r3, [fp, #8]
   12d44:	and	r3, r3, #2
   12d48:	cmp	r3, #0
   12d4c:	movne	r3, #1
   12d50:	moveq	r3, #0
   12d54:	strb	r3, [fp, #-34]	; 0xffffffde
   12d58:	mov	r3, #0
   12d5c:	strb	r3, [fp, #-35]	; 0xffffffdd
   12d60:	mov	r3, #0
   12d64:	strb	r3, [fp, #-36]	; 0xffffffdc
   12d68:	mov	r3, #1
   12d6c:	strb	r3, [fp, #-37]	; 0xffffffdb
   12d70:	ldr	r3, [fp, #4]
   12d74:	cmp	r3, #10
   12d78:	ldrls	pc, [pc, r3, lsl #2]
   12d7c:	b	12f84 <putchar_unlocked@plt+0x20f8>
   12d80:	andeq	r2, r1, r8, ror pc
   12d84:	strdeq	r2, [r1], -r4
   12d88:	andeq	r2, r1, r8, lsl pc
   12d8c:	andeq	r2, r1, ip, ror #29
   12d90:	strdeq	r2, [r1], -ip
   12d94:			; <UNDEFINED> instruction: 0x00012dbc
   12d98:	andeq	r2, r1, ip, lsr #27
   12d9c:	andeq	r2, r1, ip, lsl lr
   12da0:	andeq	r2, r1, r0, lsr lr
   12da4:	andeq	r2, r1, r0, lsr lr
   12da8:	andeq	r2, r1, r0, lsr lr
   12dac:	mov	r3, #5
   12db0:	str	r3, [fp, #4]
   12db4:	mov	r3, #1
   12db8:	strb	r3, [fp, #-34]	; 0xffffffde
   12dbc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12dc0:	eor	r3, r3, #1
   12dc4:	uxtb	r3, r3
   12dc8:	cmp	r3, #0
   12dcc:	beq	12e00 <putchar_unlocked@plt+0x1f74>
   12dd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12dd4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12dd8:	cmp	r2, r3
   12ddc:	bcs	12df4 <putchar_unlocked@plt+0x1f68>
   12de0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12de4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12de8:	add	r3, r2, r3
   12dec:	mov	r2, #34	; 0x22
   12df0:	strb	r2, [r3]
   12df4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12df8:	add	r3, r3, #1
   12dfc:	str	r3, [fp, #-20]	; 0xffffffec
   12e00:	mov	r3, #1
   12e04:	strb	r3, [fp, #-33]	; 0xffffffdf
   12e08:	ldr	r3, [pc, #3872]	; 13d30 <putchar_unlocked@plt+0x2ea4>
   12e0c:	str	r3, [fp, #-28]	; 0xffffffe4
   12e10:	mov	r3, #1
   12e14:	str	r3, [fp, #-32]	; 0xffffffe0
   12e18:	b	12f88 <putchar_unlocked@plt+0x20fc>
   12e1c:	mov	r3, #1
   12e20:	strb	r3, [fp, #-33]	; 0xffffffdf
   12e24:	mov	r3, #0
   12e28:	strb	r3, [fp, #-34]	; 0xffffffde
   12e2c:	b	12f88 <putchar_unlocked@plt+0x20fc>
   12e30:	ldr	r3, [fp, #4]
   12e34:	cmp	r3, #10
   12e38:	beq	12e5c <putchar_unlocked@plt+0x1fd0>
   12e3c:	ldr	r1, [fp, #4]
   12e40:	ldr	r0, [pc, #3820]	; 13d34 <putchar_unlocked@plt+0x2ea8>
   12e44:	bl	12bf0 <putchar_unlocked@plt+0x1d64>
   12e48:	str	r0, [fp, #16]
   12e4c:	ldr	r1, [fp, #4]
   12e50:	ldr	r0, [pc, #3808]	; 13d38 <putchar_unlocked@plt+0x2eac>
   12e54:	bl	12bf0 <putchar_unlocked@plt+0x1d64>
   12e58:	str	r0, [fp, #20]
   12e5c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12e60:	eor	r3, r3, #1
   12e64:	uxtb	r3, r3
   12e68:	cmp	r3, #0
   12e6c:	beq	12ecc <putchar_unlocked@plt+0x2040>
   12e70:	ldr	r3, [fp, #16]
   12e74:	str	r3, [fp, #-28]	; 0xffffffe4
   12e78:	b	12ebc <putchar_unlocked@plt+0x2030>
   12e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e84:	cmp	r2, r3
   12e88:	bcs	12ea4 <putchar_unlocked@plt+0x2018>
   12e8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e94:	add	r3, r2, r3
   12e98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e9c:	ldrb	r2, [r2]
   12ea0:	strb	r2, [r3]
   12ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ea8:	add	r3, r3, #1
   12eac:	str	r3, [fp, #-20]	; 0xffffffec
   12eb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12eb4:	add	r3, r3, #1
   12eb8:	str	r3, [fp, #-28]	; 0xffffffe4
   12ebc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ec0:	ldrb	r3, [r3]
   12ec4:	cmp	r3, #0
   12ec8:	bne	12e7c <putchar_unlocked@plt+0x1ff0>
   12ecc:	mov	r3, #1
   12ed0:	strb	r3, [fp, #-33]	; 0xffffffdf
   12ed4:	ldr	r3, [fp, #20]
   12ed8:	str	r3, [fp, #-28]	; 0xffffffe4
   12edc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12ee0:	bl	10dcc <strlen@plt>
   12ee4:	str	r0, [fp, #-32]	; 0xffffffe0
   12ee8:	b	12f88 <putchar_unlocked@plt+0x20fc>
   12eec:	mov	r3, #1
   12ef0:	strb	r3, [fp, #-33]	; 0xffffffdf
   12ef4:	mov	r3, #1
   12ef8:	strb	r3, [fp, #-34]	; 0xffffffde
   12efc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12f00:	eor	r3, r3, #1
   12f04:	uxtb	r3, r3
   12f08:	cmp	r3, #0
   12f0c:	beq	12f18 <putchar_unlocked@plt+0x208c>
   12f10:	mov	r3, #1
   12f14:	strb	r3, [fp, #-33]	; 0xffffffdf
   12f18:	mov	r3, #2
   12f1c:	str	r3, [fp, #4]
   12f20:	ldrb	r3, [fp, #-34]	; 0xffffffde
   12f24:	eor	r3, r3, #1
   12f28:	uxtb	r3, r3
   12f2c:	cmp	r3, #0
   12f30:	beq	12f64 <putchar_unlocked@plt+0x20d8>
   12f34:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12f3c:	cmp	r2, r3
   12f40:	bcs	12f58 <putchar_unlocked@plt+0x20cc>
   12f44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f4c:	add	r3, r2, r3
   12f50:	mov	r2, #39	; 0x27
   12f54:	strb	r2, [r3]
   12f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f5c:	add	r3, r3, #1
   12f60:	str	r3, [fp, #-20]	; 0xffffffec
   12f64:	ldr	r3, [pc, #3532]	; 13d38 <putchar_unlocked@plt+0x2eac>
   12f68:	str	r3, [fp, #-28]	; 0xffffffe4
   12f6c:	mov	r3, #1
   12f70:	str	r3, [fp, #-32]	; 0xffffffe0
   12f74:	b	12f88 <putchar_unlocked@plt+0x20fc>
   12f78:	mov	r3, #0
   12f7c:	strb	r3, [fp, #-34]	; 0xffffffde
   12f80:	b	12f88 <putchar_unlocked@plt+0x20fc>
   12f84:	bl	10e80 <abort@plt>
   12f88:	mov	r3, #0
   12f8c:	str	r3, [fp, #-16]
   12f90:	b	14120 <putchar_unlocked@plt+0x3294>
   12f94:	mov	r3, #0
   12f98:	strb	r3, [fp, #-40]	; 0xffffffd8
   12f9c:	mov	r3, #0
   12fa0:	strb	r3, [fp, #-41]	; 0xffffffd7
   12fa4:	mov	r3, #0
   12fa8:	strb	r3, [fp, #-42]	; 0xffffffd6
   12fac:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   12fb0:	cmp	r3, #0
   12fb4:	beq	13050 <putchar_unlocked@plt+0x21c4>
   12fb8:	ldr	r3, [fp, #4]
   12fbc:	cmp	r3, #2
   12fc0:	beq	13050 <putchar_unlocked@plt+0x21c4>
   12fc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fc8:	cmp	r3, #0
   12fcc:	beq	13050 <putchar_unlocked@plt+0x21c4>
   12fd0:	ldr	r2, [fp, #-16]
   12fd4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fd8:	add	r4, r2, r3
   12fdc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12fe0:	cmn	r3, #1
   12fe4:	bne	13008 <putchar_unlocked@plt+0x217c>
   12fe8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12fec:	cmp	r3, #1
   12ff0:	bls	13008 <putchar_unlocked@plt+0x217c>
   12ff4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   12ff8:	bl	10dcc <strlen@plt>
   12ffc:	str	r0, [fp, #-100]	; 0xffffff9c
   13000:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13004:	b	1300c <putchar_unlocked@plt+0x2180>
   13008:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1300c:	cmp	r4, r3
   13010:	bhi	13050 <putchar_unlocked@plt+0x21c4>
   13014:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13018:	ldr	r3, [fp, #-16]
   1301c:	add	r3, r2, r3
   13020:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13024:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13028:	mov	r0, r3
   1302c:	bl	10cd0 <memcmp@plt>
   13030:	mov	r3, r0
   13034:	cmp	r3, #0
   13038:	bne	13050 <putchar_unlocked@plt+0x21c4>
   1303c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13040:	cmp	r3, #0
   13044:	bne	142dc <putchar_unlocked@plt+0x3450>
   13048:	mov	r3, #1
   1304c:	strb	r3, [fp, #-40]	; 0xffffffd8
   13050:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13054:	ldr	r3, [fp, #-16]
   13058:	add	r3, r2, r3
   1305c:	ldrb	r3, [r3]
   13060:	strb	r3, [fp, #-38]	; 0xffffffda
   13064:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13068:	cmp	r3, #126	; 0x7e
   1306c:	ldrls	pc, [pc, r3, lsl #2]
   13070:	b	1389c <putchar_unlocked@plt+0x2a10>
   13074:	andeq	r3, r1, r0, ror r2
   13078:	muleq	r1, ip, r8
   1307c:	muleq	r1, ip, r8
   13080:	muleq	r1, ip, r8
   13084:	muleq	r1, ip, r8
   13088:	muleq	r1, ip, r8
   1308c:	muleq	r1, ip, r8
   13090:	andeq	r3, r1, r0, ror #12
   13094:	andeq	r3, r1, ip, ror #12
   13098:	muleq	r1, ip, r6
   1309c:	andeq	r3, r1, r4, lsl #13
   130a0:	andeq	r3, r1, r8, lsr #13
   130a4:	andeq	r3, r1, r8, ror r6
   130a8:	muleq	r1, r0, r6
   130ac:	muleq	r1, ip, r8
   130b0:	muleq	r1, ip, r8
   130b4:	muleq	r1, ip, r8
   130b8:	muleq	r1, ip, r8
   130bc:	muleq	r1, ip, r8
   130c0:	muleq	r1, ip, r8
   130c4:	muleq	r1, ip, r8
   130c8:	muleq	r1, ip, r8
   130cc:	muleq	r1, ip, r8
   130d0:	muleq	r1, ip, r8
   130d4:	muleq	r1, ip, r8
   130d8:	muleq	r1, ip, r8
   130dc:	muleq	r1, ip, r8
   130e0:	muleq	r1, ip, r8
   130e4:	muleq	r1, ip, r8
   130e8:	muleq	r1, ip, r8
   130ec:	muleq	r1, ip, r8
   130f0:	muleq	r1, ip, r8
   130f4:	andeq	r3, r1, r0, lsl #15
   130f8:	andeq	r3, r1, r8, lsl #15
   130fc:	andeq	r3, r1, r8, lsl #15
   13100:	andeq	r3, r1, r4, ror r7
   13104:	andeq	r3, r1, r8, lsl #15
   13108:	muleq	r1, r0, r8
   1310c:	andeq	r3, r1, r8, lsl #15
   13110:	andeq	r3, r1, r4, lsr #15
   13114:	andeq	r3, r1, r8, lsl #15
   13118:	andeq	r3, r1, r8, lsl #15
   1311c:	andeq	r3, r1, r8, lsl #15
   13120:	muleq	r1, r0, r8
   13124:	muleq	r1, r0, r8
   13128:	muleq	r1, r0, r8
   1312c:	muleq	r1, r0, r8
   13130:	muleq	r1, r0, r8
   13134:	muleq	r1, r0, r8
   13138:	muleq	r1, r0, r8
   1313c:	muleq	r1, r0, r8
   13140:	muleq	r1, r0, r8
   13144:	muleq	r1, r0, r8
   13148:	muleq	r1, r0, r8
   1314c:	muleq	r1, r0, r8
   13150:	muleq	r1, r0, r8
   13154:	muleq	r1, r0, r8
   13158:	muleq	r1, r0, r8
   1315c:	muleq	r1, r0, r8
   13160:	andeq	r3, r1, r8, lsl #15
   13164:	andeq	r3, r1, r8, lsl #15
   13168:	andeq	r3, r1, r8, lsl #15
   1316c:	andeq	r3, r1, r8, lsl #15
   13170:	andeq	r3, r1, r0, asr r4
   13174:	muleq	r1, ip, r8
   13178:	muleq	r1, r0, r8
   1317c:	muleq	r1, r0, r8
   13180:	muleq	r1, r0, r8
   13184:	muleq	r1, r0, r8
   13188:	muleq	r1, r0, r8
   1318c:	muleq	r1, r0, r8
   13190:	muleq	r1, r0, r8
   13194:	muleq	r1, r0, r8
   13198:	muleq	r1, r0, r8
   1319c:	muleq	r1, r0, r8
   131a0:	muleq	r1, r0, r8
   131a4:	muleq	r1, r0, r8
   131a8:	muleq	r1, r0, r8
   131ac:	muleq	r1, r0, r8
   131b0:	muleq	r1, r0, r8
   131b4:	muleq	r1, r0, r8
   131b8:	muleq	r1, r0, r8
   131bc:	muleq	r1, r0, r8
   131c0:	muleq	r1, r0, r8
   131c4:	muleq	r1, r0, r8
   131c8:	muleq	r1, r0, r8
   131cc:	muleq	r1, r0, r8
   131d0:	muleq	r1, r0, r8
   131d4:	muleq	r1, r0, r8
   131d8:	muleq	r1, r0, r8
   131dc:	muleq	r1, r0, r8
   131e0:	andeq	r3, r1, r8, lsl #15
   131e4:			; <UNDEFINED> instruction: 0x000136b4
   131e8:	muleq	r1, r0, r8
   131ec:	andeq	r3, r1, r8, lsl #15
   131f0:	muleq	r1, r0, r8
   131f4:	andeq	r3, r1, r8, lsl #15
   131f8:	muleq	r1, r0, r8
   131fc:	muleq	r1, r0, r8
   13200:	muleq	r1, r0, r8
   13204:	muleq	r1, r0, r8
   13208:	muleq	r1, r0, r8
   1320c:	muleq	r1, r0, r8
   13210:	muleq	r1, r0, r8
   13214:	muleq	r1, r0, r8
   13218:	muleq	r1, r0, r8
   1321c:	muleq	r1, r0, r8
   13220:	muleq	r1, r0, r8
   13224:	muleq	r1, r0, r8
   13228:	muleq	r1, r0, r8
   1322c:	muleq	r1, r0, r8
   13230:	muleq	r1, r0, r8
   13234:	muleq	r1, r0, r8
   13238:	muleq	r1, r0, r8
   1323c:	muleq	r1, r0, r8
   13240:	muleq	r1, r0, r8
   13244:	muleq	r1, r0, r8
   13248:	muleq	r1, r0, r8
   1324c:	muleq	r1, r0, r8
   13250:	muleq	r1, r0, r8
   13254:	muleq	r1, r0, r8
   13258:	muleq	r1, r0, r8
   1325c:	muleq	r1, r0, r8
   13260:	andeq	r3, r1, ip, lsr #14
   13264:	andeq	r3, r1, r8, lsl #15
   13268:	andeq	r3, r1, ip, lsr #14
   1326c:	andeq	r3, r1, r4, ror r7
   13270:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13274:	cmp	r3, #0
   13278:	beq	1343c <putchar_unlocked@plt+0x25b0>
   1327c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13280:	cmp	r3, #0
   13284:	bne	142e4 <putchar_unlocked@plt+0x3458>
   13288:	mov	r3, #1
   1328c:	strb	r3, [fp, #-41]	; 0xffffffd7
   13290:	ldr	r3, [fp, #4]
   13294:	cmp	r3, #2
   13298:	bne	13348 <putchar_unlocked@plt+0x24bc>
   1329c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   132a0:	eor	r3, r3, #1
   132a4:	uxtb	r3, r3
   132a8:	cmp	r3, #0
   132ac:	beq	13348 <putchar_unlocked@plt+0x24bc>
   132b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132b8:	cmp	r2, r3
   132bc:	bcs	132d4 <putchar_unlocked@plt+0x2448>
   132c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132c8:	add	r3, r2, r3
   132cc:	mov	r2, #39	; 0x27
   132d0:	strb	r2, [r3]
   132d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132d8:	add	r3, r3, #1
   132dc:	str	r3, [fp, #-20]	; 0xffffffec
   132e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   132e8:	cmp	r2, r3
   132ec:	bcs	13304 <putchar_unlocked@plt+0x2478>
   132f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   132f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132f8:	add	r3, r2, r3
   132fc:	mov	r2, #36	; 0x24
   13300:	strb	r2, [r3]
   13304:	ldr	r3, [fp, #-20]	; 0xffffffec
   13308:	add	r3, r3, #1
   1330c:	str	r3, [fp, #-20]	; 0xffffffec
   13310:	ldr	r2, [fp, #-20]	; 0xffffffec
   13314:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13318:	cmp	r2, r3
   1331c:	bcs	13334 <putchar_unlocked@plt+0x24a8>
   13320:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13324:	ldr	r3, [fp, #-20]	; 0xffffffec
   13328:	add	r3, r2, r3
   1332c:	mov	r2, #39	; 0x27
   13330:	strb	r2, [r3]
   13334:	ldr	r3, [fp, #-20]	; 0xffffffec
   13338:	add	r3, r3, #1
   1333c:	str	r3, [fp, #-20]	; 0xffffffec
   13340:	mov	r3, #1
   13344:	strb	r3, [fp, #-35]	; 0xffffffdd
   13348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1334c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13350:	cmp	r2, r3
   13354:	bcs	1336c <putchar_unlocked@plt+0x24e0>
   13358:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1335c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13360:	add	r3, r2, r3
   13364:	mov	r2, #92	; 0x5c
   13368:	strb	r2, [r3]
   1336c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13370:	add	r3, r3, #1
   13374:	str	r3, [fp, #-20]	; 0xffffffec
   13378:	ldr	r3, [fp, #4]
   1337c:	cmp	r3, #2
   13380:	beq	13430 <putchar_unlocked@plt+0x25a4>
   13384:	ldr	r3, [fp, #-16]
   13388:	add	r2, r3, #1
   1338c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13390:	cmp	r2, r3
   13394:	bcs	13430 <putchar_unlocked@plt+0x25a4>
   13398:	ldr	r3, [fp, #-16]
   1339c:	add	r3, r3, #1
   133a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   133a4:	add	r3, r2, r3
   133a8:	ldrb	r3, [r3]
   133ac:	cmp	r3, #47	; 0x2f
   133b0:	bls	13430 <putchar_unlocked@plt+0x25a4>
   133b4:	ldr	r3, [fp, #-16]
   133b8:	add	r3, r3, #1
   133bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   133c0:	add	r3, r2, r3
   133c4:	ldrb	r3, [r3]
   133c8:	cmp	r3, #57	; 0x39
   133cc:	bhi	13430 <putchar_unlocked@plt+0x25a4>
   133d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133d4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   133d8:	cmp	r2, r3
   133dc:	bcs	133f4 <putchar_unlocked@plt+0x2568>
   133e0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   133e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133e8:	add	r3, r2, r3
   133ec:	mov	r2, #48	; 0x30
   133f0:	strb	r2, [r3]
   133f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   133f8:	add	r3, r3, #1
   133fc:	str	r3, [fp, #-20]	; 0xffffffec
   13400:	ldr	r2, [fp, #-20]	; 0xffffffec
   13404:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13408:	cmp	r2, r3
   1340c:	bcs	13424 <putchar_unlocked@plt+0x2598>
   13410:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13414:	ldr	r3, [fp, #-20]	; 0xffffffec
   13418:	add	r3, r2, r3
   1341c:	mov	r2, #48	; 0x30
   13420:	strb	r2, [r3]
   13424:	ldr	r3, [fp, #-20]	; 0xffffffec
   13428:	add	r3, r3, #1
   1342c:	str	r3, [fp, #-20]	; 0xffffffec
   13430:	mov	r3, #48	; 0x30
   13434:	strb	r3, [fp, #-38]	; 0xffffffda
   13438:	b	13e78 <putchar_unlocked@plt+0x2fec>
   1343c:	ldr	r3, [fp, #8]
   13440:	and	r3, r3, #1
   13444:	cmp	r3, #0
   13448:	beq	13e78 <putchar_unlocked@plt+0x2fec>
   1344c:	b	14114 <putchar_unlocked@plt+0x3288>
   13450:	ldr	r3, [fp, #4]
   13454:	cmp	r3, #2
   13458:	beq	13468 <putchar_unlocked@plt+0x25dc>
   1345c:	cmp	r3, #5
   13460:	beq	13478 <putchar_unlocked@plt+0x25ec>
   13464:	b	1365c <putchar_unlocked@plt+0x27d0>
   13468:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1346c:	cmp	r3, #0
   13470:	beq	13650 <putchar_unlocked@plt+0x27c4>
   13474:	b	14320 <putchar_unlocked@plt+0x3494>
   13478:	ldr	r3, [fp, #8]
   1347c:	and	r3, r3, #4
   13480:	cmp	r3, #0
   13484:	beq	13658 <putchar_unlocked@plt+0x27cc>
   13488:	ldr	r3, [fp, #-16]
   1348c:	add	r2, r3, #2
   13490:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13494:	cmp	r2, r3
   13498:	bcs	13658 <putchar_unlocked@plt+0x27cc>
   1349c:	ldr	r3, [fp, #-16]
   134a0:	add	r3, r3, #1
   134a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   134a8:	add	r3, r2, r3
   134ac:	ldrb	r3, [r3]
   134b0:	cmp	r3, #63	; 0x3f
   134b4:	bne	13658 <putchar_unlocked@plt+0x27cc>
   134b8:	ldr	r3, [fp, #-16]
   134bc:	add	r3, r3, #2
   134c0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   134c4:	add	r3, r2, r3
   134c8:	ldrb	r3, [r3]
   134cc:	sub	r3, r3, #33	; 0x21
   134d0:	cmp	r3, #29
   134d4:	ldrls	pc, [pc, r3, lsl #2]
   134d8:	b	13648 <putchar_unlocked@plt+0x27bc>
   134dc:	andeq	r3, r1, r4, asr r5
   134e0:	andeq	r3, r1, r8, asr #12
   134e4:	andeq	r3, r1, r8, asr #12
   134e8:	andeq	r3, r1, r8, asr #12
   134ec:	andeq	r3, r1, r8, asr #12
   134f0:	andeq	r3, r1, r8, asr #12
   134f4:	andeq	r3, r1, r4, asr r5
   134f8:	andeq	r3, r1, r4, asr r5
   134fc:	andeq	r3, r1, r4, asr r5
   13500:	andeq	r3, r1, r8, asr #12
   13504:	andeq	r3, r1, r8, asr #12
   13508:	andeq	r3, r1, r8, asr #12
   1350c:	andeq	r3, r1, r4, asr r5
   13510:	andeq	r3, r1, r8, asr #12
   13514:	andeq	r3, r1, r4, asr r5
   13518:	andeq	r3, r1, r8, asr #12
   1351c:	andeq	r3, r1, r8, asr #12
   13520:	andeq	r3, r1, r8, asr #12
   13524:	andeq	r3, r1, r8, asr #12
   13528:	andeq	r3, r1, r8, asr #12
   1352c:	andeq	r3, r1, r8, asr #12
   13530:	andeq	r3, r1, r8, asr #12
   13534:	andeq	r3, r1, r8, asr #12
   13538:	andeq	r3, r1, r8, asr #12
   1353c:	andeq	r3, r1, r8, asr #12
   13540:	andeq	r3, r1, r8, asr #12
   13544:	andeq	r3, r1, r8, asr #12
   13548:	andeq	r3, r1, r4, asr r5
   1354c:	andeq	r3, r1, r4, asr r5
   13550:	andeq	r3, r1, r4, asr r5
   13554:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13558:	cmp	r3, #0
   1355c:	bne	142ec <putchar_unlocked@plt+0x3460>
   13560:	ldr	r3, [fp, #-16]
   13564:	add	r3, r3, #2
   13568:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1356c:	add	r3, r2, r3
   13570:	ldrb	r3, [r3]
   13574:	strb	r3, [fp, #-38]	; 0xffffffda
   13578:	ldr	r3, [fp, #-16]
   1357c:	add	r3, r3, #2
   13580:	str	r3, [fp, #-16]
   13584:	ldr	r2, [fp, #-20]	; 0xffffffec
   13588:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1358c:	cmp	r2, r3
   13590:	bcs	135a8 <putchar_unlocked@plt+0x271c>
   13594:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1359c:	add	r3, r2, r3
   135a0:	mov	r2, #63	; 0x3f
   135a4:	strb	r2, [r3]
   135a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135ac:	add	r3, r3, #1
   135b0:	str	r3, [fp, #-20]	; 0xffffffec
   135b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   135b8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   135bc:	cmp	r2, r3
   135c0:	bcs	135d8 <putchar_unlocked@plt+0x274c>
   135c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   135c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135cc:	add	r3, r2, r3
   135d0:	mov	r2, #34	; 0x22
   135d4:	strb	r2, [r3]
   135d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135dc:	add	r3, r3, #1
   135e0:	str	r3, [fp, #-20]	; 0xffffffec
   135e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   135e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   135ec:	cmp	r2, r3
   135f0:	bcs	13608 <putchar_unlocked@plt+0x277c>
   135f4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   135f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135fc:	add	r3, r2, r3
   13600:	mov	r2, #34	; 0x22
   13604:	strb	r2, [r3]
   13608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1360c:	add	r3, r3, #1
   13610:	str	r3, [fp, #-20]	; 0xffffffec
   13614:	ldr	r2, [fp, #-20]	; 0xffffffec
   13618:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1361c:	cmp	r2, r3
   13620:	bcs	13638 <putchar_unlocked@plt+0x27ac>
   13624:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13628:	ldr	r3, [fp, #-20]	; 0xffffffec
   1362c:	add	r3, r2, r3
   13630:	mov	r2, #63	; 0x3f
   13634:	strb	r2, [r3]
   13638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1363c:	add	r3, r3, #1
   13640:	str	r3, [fp, #-20]	; 0xffffffec
   13644:	b	1364c <putchar_unlocked@plt+0x27c0>
   13648:	nop			; (mov r0, r0)
   1364c:	b	13658 <putchar_unlocked@plt+0x27cc>
   13650:	nop			; (mov r0, r0)
   13654:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13658:	nop			; (mov r0, r0)
   1365c:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13660:	mov	r3, #97	; 0x61
   13664:	strb	r3, [fp, #-39]	; 0xffffffd9
   13668:	b	13714 <putchar_unlocked@plt+0x2888>
   1366c:	mov	r3, #98	; 0x62
   13670:	strb	r3, [fp, #-39]	; 0xffffffd9
   13674:	b	13714 <putchar_unlocked@plt+0x2888>
   13678:	mov	r3, #102	; 0x66
   1367c:	strb	r3, [fp, #-39]	; 0xffffffd9
   13680:	b	13714 <putchar_unlocked@plt+0x2888>
   13684:	mov	r3, #110	; 0x6e
   13688:	strb	r3, [fp, #-39]	; 0xffffffd9
   1368c:	b	136fc <putchar_unlocked@plt+0x2870>
   13690:	mov	r3, #114	; 0x72
   13694:	strb	r3, [fp, #-39]	; 0xffffffd9
   13698:	b	136fc <putchar_unlocked@plt+0x2870>
   1369c:	mov	r3, #116	; 0x74
   136a0:	strb	r3, [fp, #-39]	; 0xffffffd9
   136a4:	b	136fc <putchar_unlocked@plt+0x2870>
   136a8:	mov	r3, #118	; 0x76
   136ac:	strb	r3, [fp, #-39]	; 0xffffffd9
   136b0:	b	13714 <putchar_unlocked@plt+0x2888>
   136b4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   136b8:	strb	r3, [fp, #-39]	; 0xffffffd9
   136bc:	ldr	r3, [fp, #4]
   136c0:	cmp	r3, #2
   136c4:	bne	136d8 <putchar_unlocked@plt+0x284c>
   136c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   136cc:	cmp	r3, #0
   136d0:	beq	1402c <putchar_unlocked@plt+0x31a0>
   136d4:	b	14320 <putchar_unlocked@plt+0x3494>
   136d8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   136dc:	cmp	r3, #0
   136e0:	beq	136fc <putchar_unlocked@plt+0x2870>
   136e4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   136e8:	cmp	r3, #0
   136ec:	beq	136fc <putchar_unlocked@plt+0x2870>
   136f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136f4:	cmp	r3, #0
   136f8:	bne	14034 <putchar_unlocked@plt+0x31a8>
   136fc:	ldr	r3, [fp, #4]
   13700:	cmp	r3, #2
   13704:	bne	13714 <putchar_unlocked@plt+0x2888>
   13708:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1370c:	cmp	r3, #0
   13710:	bne	142f4 <putchar_unlocked@plt+0x3468>
   13714:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13718:	cmp	r3, #0
   1371c:	beq	13e80 <putchar_unlocked@plt+0x2ff4>
   13720:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   13724:	strb	r3, [fp, #-38]	; 0xffffffda
   13728:	b	13f2c <putchar_unlocked@plt+0x30a0>
   1372c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   13730:	cmn	r3, #1
   13734:	bne	13758 <putchar_unlocked@plt+0x28cc>
   13738:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1373c:	add	r3, r3, #1
   13740:	ldrb	r3, [r3]
   13744:	cmp	r3, #0
   13748:	movne	r3, #1
   1374c:	moveq	r3, #0
   13750:	uxtb	r3, r3
   13754:	b	1376c <putchar_unlocked@plt+0x28e0>
   13758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1375c:	cmp	r3, #1
   13760:	movne	r3, #1
   13764:	moveq	r3, #0
   13768:	uxtb	r3, r3
   1376c:	cmp	r3, #0
   13770:	bne	13e88 <putchar_unlocked@plt+0x2ffc>
   13774:	ldr	r3, [fp, #-16]
   13778:	cmp	r3, #0
   1377c:	bne	13e90 <putchar_unlocked@plt+0x3004>
   13780:	mov	r3, #1
   13784:	strb	r3, [fp, #-42]	; 0xffffffd6
   13788:	ldr	r3, [fp, #4]
   1378c:	cmp	r3, #2
   13790:	bne	13e98 <putchar_unlocked@plt+0x300c>
   13794:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13798:	cmp	r3, #0
   1379c:	beq	13e98 <putchar_unlocked@plt+0x300c>
   137a0:	b	14320 <putchar_unlocked@plt+0x3494>
   137a4:	mov	r3, #1
   137a8:	strb	r3, [fp, #-36]	; 0xffffffdc
   137ac:	mov	r3, #1
   137b0:	strb	r3, [fp, #-42]	; 0xffffffd6
   137b4:	ldr	r3, [fp, #4]
   137b8:	cmp	r3, #2
   137bc:	bne	13ea0 <putchar_unlocked@plt+0x3014>
   137c0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   137c4:	cmp	r3, #0
   137c8:	bne	142fc <putchar_unlocked@plt+0x3470>
   137cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   137d0:	cmp	r3, #0
   137d4:	beq	137f4 <putchar_unlocked@plt+0x2968>
   137d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   137dc:	cmp	r3, #0
   137e0:	bne	137f4 <putchar_unlocked@plt+0x2968>
   137e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   137e8:	str	r3, [fp, #-24]	; 0xffffffe8
   137ec:	mov	r3, #0
   137f0:	str	r3, [fp, #-92]	; 0xffffffa4
   137f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   137f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   137fc:	cmp	r2, r3
   13800:	bcs	13818 <putchar_unlocked@plt+0x298c>
   13804:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1380c:	add	r3, r2, r3
   13810:	mov	r2, #39	; 0x27
   13814:	strb	r2, [r3]
   13818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1381c:	add	r3, r3, #1
   13820:	str	r3, [fp, #-20]	; 0xffffffec
   13824:	ldr	r2, [fp, #-20]	; 0xffffffec
   13828:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1382c:	cmp	r2, r3
   13830:	bcs	13848 <putchar_unlocked@plt+0x29bc>
   13834:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13838:	ldr	r3, [fp, #-20]	; 0xffffffec
   1383c:	add	r3, r2, r3
   13840:	mov	r2, #92	; 0x5c
   13844:	strb	r2, [r3]
   13848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1384c:	add	r3, r3, #1
   13850:	str	r3, [fp, #-20]	; 0xffffffec
   13854:	ldr	r2, [fp, #-20]	; 0xffffffec
   13858:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1385c:	cmp	r2, r3
   13860:	bcs	13878 <putchar_unlocked@plt+0x29ec>
   13864:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13868:	ldr	r3, [fp, #-20]	; 0xffffffec
   1386c:	add	r3, r2, r3
   13870:	mov	r2, #39	; 0x27
   13874:	strb	r2, [r3]
   13878:	ldr	r3, [fp, #-20]	; 0xffffffec
   1387c:	add	r3, r3, #1
   13880:	str	r3, [fp, #-20]	; 0xffffffec
   13884:	mov	r3, #0
   13888:	strb	r3, [fp, #-35]	; 0xffffffdd
   1388c:	b	13ea0 <putchar_unlocked@plt+0x3014>
   13890:	mov	r3, #1
   13894:	strb	r3, [fp, #-42]	; 0xffffffd6
   13898:	b	13ea4 <putchar_unlocked@plt+0x3018>
   1389c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   138a0:	cmp	r3, #0
   138a4:	beq	138e4 <putchar_unlocked@plt+0x2a58>
   138a8:	mov	r3, #1
   138ac:	str	r3, [fp, #-48]	; 0xffffffd0
   138b0:	bl	10da8 <__ctype_b_loc@plt>
   138b4:	mov	r3, r0
   138b8:	ldr	r2, [r3]
   138bc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   138c0:	lsl	r3, r3, #1
   138c4:	add	r3, r2, r3
   138c8:	ldrh	r3, [r3]
   138cc:	and	r3, r3, #16384	; 0x4000
   138d0:	cmp	r3, #0
   138d4:	movne	r3, #1
   138d8:	moveq	r3, #0
   138dc:	strb	r3, [fp, #-49]	; 0xffffffcf
   138e0:	b	13b30 <putchar_unlocked@plt+0x2ca4>
   138e4:	sub	r3, fp, #76	; 0x4c
   138e8:	mov	r2, #8
   138ec:	mov	r1, #0
   138f0:	mov	r0, r3
   138f4:	bl	10dfc <memset@plt>
   138f8:	mov	r3, #0
   138fc:	str	r3, [fp, #-48]	; 0xffffffd0
   13900:	mov	r3, #1
   13904:	strb	r3, [fp, #-49]	; 0xffffffcf
   13908:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1390c:	cmn	r3, #1
   13910:	bne	13920 <putchar_unlocked@plt+0x2a94>
   13914:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13918:	bl	10dcc <strlen@plt>
   1391c:	str	r0, [fp, #-100]	; 0xffffff9c
   13920:	ldr	r2, [fp, #-16]
   13924:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13928:	add	r3, r2, r3
   1392c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13930:	add	r1, r2, r3
   13934:	ldr	r2, [fp, #-16]
   13938:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1393c:	add	r3, r2, r3
   13940:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13944:	sub	r2, r2, r3
   13948:	sub	r3, fp, #76	; 0x4c
   1394c:	sub	r0, fp, #80	; 0x50
   13950:	bl	167bc <putchar_unlocked@plt+0x5930>
   13954:	str	r0, [fp, #-64]	; 0xffffffc0
   13958:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1395c:	cmp	r3, #0
   13960:	beq	13b24 <putchar_unlocked@plt+0x2c98>
   13964:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13968:	cmn	r3, #1
   1396c:	bne	1397c <putchar_unlocked@plt+0x2af0>
   13970:	mov	r3, #0
   13974:	strb	r3, [fp, #-49]	; 0xffffffcf
   13978:	b	13b30 <putchar_unlocked@plt+0x2ca4>
   1397c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13980:	cmn	r3, #2
   13984:	bne	139dc <putchar_unlocked@plt+0x2b50>
   13988:	mov	r3, #0
   1398c:	strb	r3, [fp, #-49]	; 0xffffffcf
   13990:	b	139a0 <putchar_unlocked@plt+0x2b14>
   13994:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13998:	add	r3, r3, #1
   1399c:	str	r3, [fp, #-48]	; 0xffffffd0
   139a0:	ldr	r2, [fp, #-16]
   139a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139a8:	add	r2, r2, r3
   139ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   139b0:	cmp	r2, r3
   139b4:	bcs	13b2c <putchar_unlocked@plt+0x2ca0>
   139b8:	ldr	r2, [fp, #-16]
   139bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   139c0:	add	r3, r2, r3
   139c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   139c8:	add	r3, r2, r3
   139cc:	ldrb	r3, [r3]
   139d0:	cmp	r3, #0
   139d4:	bne	13994 <putchar_unlocked@plt+0x2b08>
   139d8:	b	13b2c <putchar_unlocked@plt+0x2ca0>
   139dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   139e0:	cmp	r3, #0
   139e4:	beq	13ad8 <putchar_unlocked@plt+0x2c4c>
   139e8:	ldr	r3, [fp, #4]
   139ec:	cmp	r3, #2
   139f0:	bne	13ad8 <putchar_unlocked@plt+0x2c4c>
   139f4:	mov	r3, #1
   139f8:	str	r3, [fp, #-56]	; 0xffffffc8
   139fc:	b	13ac8 <putchar_unlocked@plt+0x2c3c>
   13a00:	ldr	r2, [fp, #-16]
   13a04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a08:	add	r2, r2, r3
   13a0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13a10:	add	r3, r2, r3
   13a14:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13a18:	add	r3, r2, r3
   13a1c:	ldrb	r3, [r3]
   13a20:	sub	r3, r3, #91	; 0x5b
   13a24:	cmp	r3, #33	; 0x21
   13a28:	ldrls	pc, [pc, r3, lsl #2]
   13a2c:	b	13ab8 <putchar_unlocked@plt+0x2c2c>
   13a30:	andeq	r4, r1, r4, lsl #6
   13a34:	andeq	r4, r1, r4, lsl #6
   13a38:			; <UNDEFINED> instruction: 0x00013ab8
   13a3c:	andeq	r4, r1, r4, lsl #6
   13a40:			; <UNDEFINED> instruction: 0x00013ab8
   13a44:	andeq	r4, r1, r4, lsl #6
   13a48:			; <UNDEFINED> instruction: 0x00013ab8
   13a4c:			; <UNDEFINED> instruction: 0x00013ab8
   13a50:			; <UNDEFINED> instruction: 0x00013ab8
   13a54:			; <UNDEFINED> instruction: 0x00013ab8
   13a58:			; <UNDEFINED> instruction: 0x00013ab8
   13a5c:			; <UNDEFINED> instruction: 0x00013ab8
   13a60:			; <UNDEFINED> instruction: 0x00013ab8
   13a64:			; <UNDEFINED> instruction: 0x00013ab8
   13a68:			; <UNDEFINED> instruction: 0x00013ab8
   13a6c:			; <UNDEFINED> instruction: 0x00013ab8
   13a70:			; <UNDEFINED> instruction: 0x00013ab8
   13a74:			; <UNDEFINED> instruction: 0x00013ab8
   13a78:			; <UNDEFINED> instruction: 0x00013ab8
   13a7c:			; <UNDEFINED> instruction: 0x00013ab8
   13a80:			; <UNDEFINED> instruction: 0x00013ab8
   13a84:			; <UNDEFINED> instruction: 0x00013ab8
   13a88:			; <UNDEFINED> instruction: 0x00013ab8
   13a8c:			; <UNDEFINED> instruction: 0x00013ab8
   13a90:			; <UNDEFINED> instruction: 0x00013ab8
   13a94:			; <UNDEFINED> instruction: 0x00013ab8
   13a98:			; <UNDEFINED> instruction: 0x00013ab8
   13a9c:			; <UNDEFINED> instruction: 0x00013ab8
   13aa0:			; <UNDEFINED> instruction: 0x00013ab8
   13aa4:			; <UNDEFINED> instruction: 0x00013ab8
   13aa8:			; <UNDEFINED> instruction: 0x00013ab8
   13aac:			; <UNDEFINED> instruction: 0x00013ab8
   13ab0:			; <UNDEFINED> instruction: 0x00013ab8
   13ab4:	andeq	r4, r1, r4, lsl #6
   13ab8:	nop			; (mov r0, r0)
   13abc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13ac0:	add	r3, r3, #1
   13ac4:	str	r3, [fp, #-56]	; 0xffffffc8
   13ac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13acc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13ad0:	cmp	r2, r3
   13ad4:	bcc	13a00 <putchar_unlocked@plt+0x2b74>
   13ad8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13adc:	mov	r0, r3
   13ae0:	bl	10d0c <iswprint@plt>
   13ae4:	mov	r3, r0
   13ae8:	cmp	r3, #0
   13aec:	bne	13af8 <putchar_unlocked@plt+0x2c6c>
   13af0:	mov	r3, #0
   13af4:	strb	r3, [fp, #-49]	; 0xffffffcf
   13af8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13afc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13b00:	add	r3, r2, r3
   13b04:	str	r3, [fp, #-48]	; 0xffffffd0
   13b08:	sub	r3, fp, #76	; 0x4c
   13b0c:	mov	r0, r3
   13b10:	bl	10cb8 <mbsinit@plt>
   13b14:	mov	r3, r0
   13b18:	cmp	r3, #0
   13b1c:	beq	13920 <putchar_unlocked@plt+0x2a94>
   13b20:	b	13b30 <putchar_unlocked@plt+0x2ca4>
   13b24:	nop			; (mov r0, r0)
   13b28:	b	13b30 <putchar_unlocked@plt+0x2ca4>
   13b2c:	nop			; (mov r0, r0)
   13b30:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13b34:	strb	r3, [fp, #-42]	; 0xffffffd6
   13b38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b3c:	cmp	r3, #1
   13b40:	bhi	13b64 <putchar_unlocked@plt+0x2cd8>
   13b44:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13b48:	cmp	r3, #0
   13b4c:	beq	13ea4 <putchar_unlocked@plt+0x3018>
   13b50:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13b54:	eor	r3, r3, #1
   13b58:	uxtb	r3, r3
   13b5c:	cmp	r3, #0
   13b60:	beq	13ea4 <putchar_unlocked@plt+0x3018>
   13b64:	ldr	r2, [fp, #-16]
   13b68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13b6c:	add	r3, r2, r3
   13b70:	str	r3, [fp, #-68]	; 0xffffffbc
   13b74:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13b78:	cmp	r3, #0
   13b7c:	beq	13d3c <putchar_unlocked@plt+0x2eb0>
   13b80:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   13b84:	eor	r3, r3, #1
   13b88:	uxtb	r3, r3
   13b8c:	cmp	r3, #0
   13b90:	beq	13d3c <putchar_unlocked@plt+0x2eb0>
   13b94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13b98:	cmp	r3, #0
   13b9c:	bne	1430c <putchar_unlocked@plt+0x3480>
   13ba0:	mov	r3, #1
   13ba4:	strb	r3, [fp, #-41]	; 0xffffffd7
   13ba8:	ldr	r3, [fp, #4]
   13bac:	cmp	r3, #2
   13bb0:	bne	13c60 <putchar_unlocked@plt+0x2dd4>
   13bb4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13bb8:	eor	r3, r3, #1
   13bbc:	uxtb	r3, r3
   13bc0:	cmp	r3, #0
   13bc4:	beq	13c60 <putchar_unlocked@plt+0x2dd4>
   13bc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13bcc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13bd0:	cmp	r2, r3
   13bd4:	bcs	13bec <putchar_unlocked@plt+0x2d60>
   13bd8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13be0:	add	r3, r2, r3
   13be4:	mov	r2, #39	; 0x27
   13be8:	strb	r2, [r3]
   13bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bf0:	add	r3, r3, #1
   13bf4:	str	r3, [fp, #-20]	; 0xffffffec
   13bf8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13bfc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c00:	cmp	r2, r3
   13c04:	bcs	13c1c <putchar_unlocked@plt+0x2d90>
   13c08:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c10:	add	r3, r2, r3
   13c14:	mov	r2, #36	; 0x24
   13c18:	strb	r2, [r3]
   13c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c20:	add	r3, r3, #1
   13c24:	str	r3, [fp, #-20]	; 0xffffffec
   13c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c30:	cmp	r2, r3
   13c34:	bcs	13c4c <putchar_unlocked@plt+0x2dc0>
   13c38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c40:	add	r3, r2, r3
   13c44:	mov	r2, #39	; 0x27
   13c48:	strb	r2, [r3]
   13c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c50:	add	r3, r3, #1
   13c54:	str	r3, [fp, #-20]	; 0xffffffec
   13c58:	mov	r3, #1
   13c5c:	strb	r3, [fp, #-35]	; 0xffffffdd
   13c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c68:	cmp	r2, r3
   13c6c:	bcs	13c84 <putchar_unlocked@plt+0x2df8>
   13c70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c78:	add	r3, r2, r3
   13c7c:	mov	r2, #92	; 0x5c
   13c80:	strb	r2, [r3]
   13c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c88:	add	r3, r3, #1
   13c8c:	str	r3, [fp, #-20]	; 0xffffffec
   13c90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c98:	cmp	r2, r3
   13c9c:	bcs	13cc4 <putchar_unlocked@plt+0x2e38>
   13ca0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ca8:	add	r3, r2, r3
   13cac:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13cb0:	lsr	r2, r2, #6
   13cb4:	uxtb	r2, r2
   13cb8:	add	r2, r2, #48	; 0x30
   13cbc:	uxtb	r2, r2
   13cc0:	strb	r2, [r3]
   13cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cc8:	add	r3, r3, #1
   13ccc:	str	r3, [fp, #-20]	; 0xffffffec
   13cd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cd4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13cd8:	cmp	r2, r3
   13cdc:	bcs	13d0c <putchar_unlocked@plt+0x2e80>
   13ce0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ce8:	add	r3, r2, r3
   13cec:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13cf0:	lsr	r2, r2, #3
   13cf4:	uxtb	r2, r2
   13cf8:	and	r2, r2, #7
   13cfc:	uxtb	r2, r2
   13d00:	add	r2, r2, #48	; 0x30
   13d04:	uxtb	r2, r2
   13d08:	strb	r2, [r3]
   13d0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d10:	add	r3, r3, #1
   13d14:	str	r3, [fp, #-20]	; 0xffffffec
   13d18:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13d1c:	and	r3, r3, #7
   13d20:	uxtb	r3, r3
   13d24:	add	r3, r3, #48	; 0x30
   13d28:	strb	r3, [fp, #-38]	; 0xffffffda
   13d2c:	b	13d80 <putchar_unlocked@plt+0x2ef4>
   13d30:			; <UNDEFINED> instruction: 0x00017bb4
   13d34:			; <UNDEFINED> instruction: 0x00017bbc
   13d38:			; <UNDEFINED> instruction: 0x00017bb8
   13d3c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   13d40:	cmp	r3, #0
   13d44:	beq	13d80 <putchar_unlocked@plt+0x2ef4>
   13d48:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d4c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13d50:	cmp	r2, r3
   13d54:	bcs	13d6c <putchar_unlocked@plt+0x2ee0>
   13d58:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d60:	add	r3, r2, r3
   13d64:	mov	r2, #92	; 0x5c
   13d68:	strb	r2, [r3]
   13d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d70:	add	r3, r3, #1
   13d74:	str	r3, [fp, #-20]	; 0xffffffec
   13d78:	mov	r3, #0
   13d7c:	strb	r3, [fp, #-40]	; 0xffffffd8
   13d80:	ldr	r3, [fp, #-16]
   13d84:	add	r2, r3, #1
   13d88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13d8c:	cmp	r2, r3
   13d90:	bcs	13e70 <putchar_unlocked@plt+0x2fe4>
   13d94:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13d98:	cmp	r3, #0
   13d9c:	beq	13e1c <putchar_unlocked@plt+0x2f90>
   13da0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   13da4:	eor	r3, r3, #1
   13da8:	uxtb	r3, r3
   13dac:	cmp	r3, #0
   13db0:	beq	13e1c <putchar_unlocked@plt+0x2f90>
   13db4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13db8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13dbc:	cmp	r2, r3
   13dc0:	bcs	13dd8 <putchar_unlocked@plt+0x2f4c>
   13dc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13dcc:	add	r3, r2, r3
   13dd0:	mov	r2, #39	; 0x27
   13dd4:	strb	r2, [r3]
   13dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ddc:	add	r3, r3, #1
   13de0:	str	r3, [fp, #-20]	; 0xffffffec
   13de4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13de8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13dec:	cmp	r2, r3
   13df0:	bcs	13e08 <putchar_unlocked@plt+0x2f7c>
   13df4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13df8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13dfc:	add	r3, r2, r3
   13e00:	mov	r2, #39	; 0x27
   13e04:	strb	r2, [r3]
   13e08:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e0c:	add	r3, r3, #1
   13e10:	str	r3, [fp, #-20]	; 0xffffffec
   13e14:	mov	r3, #0
   13e18:	strb	r3, [fp, #-35]	; 0xffffffdd
   13e1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13e24:	cmp	r2, r3
   13e28:	bcs	13e40 <putchar_unlocked@plt+0x2fb4>
   13e2c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13e30:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e34:	add	r3, r2, r3
   13e38:	ldrb	r2, [fp, #-38]	; 0xffffffda
   13e3c:	strb	r2, [r3]
   13e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e44:	add	r3, r3, #1
   13e48:	str	r3, [fp, #-20]	; 0xffffffec
   13e4c:	ldr	r3, [fp, #-16]
   13e50:	add	r3, r3, #1
   13e54:	str	r3, [fp, #-16]
   13e58:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13e5c:	ldr	r3, [fp, #-16]
   13e60:	add	r3, r2, r3
   13e64:	ldrb	r3, [r3]
   13e68:	strb	r3, [fp, #-38]	; 0xffffffda
   13e6c:	b	13b74 <putchar_unlocked@plt+0x2ce8>
   13e70:	nop			; (mov r0, r0)
   13e74:	b	14040 <putchar_unlocked@plt+0x31b4>
   13e78:	nop			; (mov r0, r0)
   13e7c:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13e80:	nop			; (mov r0, r0)
   13e84:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13e88:	nop			; (mov r0, r0)
   13e8c:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13e90:	nop			; (mov r0, r0)
   13e94:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13e98:	nop			; (mov r0, r0)
   13e9c:	b	13ea4 <putchar_unlocked@plt+0x3018>
   13ea0:	nop			; (mov r0, r0)
   13ea4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13ea8:	eor	r3, r3, #1
   13eac:	uxtb	r3, r3
   13eb0:	cmp	r3, #0
   13eb4:	bne	13ec4 <putchar_unlocked@plt+0x3038>
   13eb8:	ldr	r3, [fp, #4]
   13ebc:	cmp	r3, #2
   13ec0:	bne	13ed8 <putchar_unlocked@plt+0x304c>
   13ec4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13ec8:	eor	r3, r3, #1
   13ecc:	uxtb	r3, r3
   13ed0:	cmp	r3, #0
   13ed4:	bne	13f18 <putchar_unlocked@plt+0x308c>
   13ed8:	ldr	r3, [fp, #12]
   13edc:	cmp	r3, #0
   13ee0:	beq	13f18 <putchar_unlocked@plt+0x308c>
   13ee4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13ee8:	lsr	r3, r3, #5
   13eec:	uxtb	r3, r3
   13ef0:	lsl	r3, r3, #2
   13ef4:	ldr	r2, [fp, #12]
   13ef8:	add	r3, r2, r3
   13efc:	ldr	r2, [r3]
   13f00:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13f04:	and	r3, r3, #31
   13f08:	lsr	r3, r2, r3
   13f0c:	and	r3, r3, #1
   13f10:	cmp	r3, #0
   13f14:	bne	13f2c <putchar_unlocked@plt+0x30a0>
   13f18:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   13f1c:	eor	r3, r3, #1
   13f20:	uxtb	r3, r3
   13f24:	cmp	r3, #0
   13f28:	bne	1403c <putchar_unlocked@plt+0x31b0>
   13f2c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13f30:	cmp	r3, #0
   13f34:	bne	14314 <putchar_unlocked@plt+0x3488>
   13f38:	mov	r3, #1
   13f3c:	strb	r3, [fp, #-41]	; 0xffffffd7
   13f40:	ldr	r3, [fp, #4]
   13f44:	cmp	r3, #2
   13f48:	bne	13ff8 <putchar_unlocked@plt+0x316c>
   13f4c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13f50:	eor	r3, r3, #1
   13f54:	uxtb	r3, r3
   13f58:	cmp	r3, #0
   13f5c:	beq	13ff8 <putchar_unlocked@plt+0x316c>
   13f60:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f68:	cmp	r2, r3
   13f6c:	bcs	13f84 <putchar_unlocked@plt+0x30f8>
   13f70:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f74:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f78:	add	r3, r2, r3
   13f7c:	mov	r2, #39	; 0x27
   13f80:	strb	r2, [r3]
   13f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f88:	add	r3, r3, #1
   13f8c:	str	r3, [fp, #-20]	; 0xffffffec
   13f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f98:	cmp	r2, r3
   13f9c:	bcs	13fb4 <putchar_unlocked@plt+0x3128>
   13fa0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fa8:	add	r3, r2, r3
   13fac:	mov	r2, #36	; 0x24
   13fb0:	strb	r2, [r3]
   13fb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fb8:	add	r3, r3, #1
   13fbc:	str	r3, [fp, #-20]	; 0xffffffec
   13fc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13fc4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13fc8:	cmp	r2, r3
   13fcc:	bcs	13fe4 <putchar_unlocked@plt+0x3158>
   13fd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fd8:	add	r3, r2, r3
   13fdc:	mov	r2, #39	; 0x27
   13fe0:	strb	r2, [r3]
   13fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fe8:	add	r3, r3, #1
   13fec:	str	r3, [fp, #-20]	; 0xffffffec
   13ff0:	mov	r3, #1
   13ff4:	strb	r3, [fp, #-35]	; 0xffffffdd
   13ff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ffc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14000:	cmp	r2, r3
   14004:	bcs	1401c <putchar_unlocked@plt+0x3190>
   14008:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14010:	add	r3, r2, r3
   14014:	mov	r2, #92	; 0x5c
   14018:	strb	r2, [r3]
   1401c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14020:	add	r3, r3, #1
   14024:	str	r3, [fp, #-20]	; 0xffffffec
   14028:	b	14040 <putchar_unlocked@plt+0x31b4>
   1402c:	nop			; (mov r0, r0)
   14030:	b	14040 <putchar_unlocked@plt+0x31b4>
   14034:	nop			; (mov r0, r0)
   14038:	b	14040 <putchar_unlocked@plt+0x31b4>
   1403c:	nop			; (mov r0, r0)
   14040:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14044:	cmp	r3, #0
   14048:	beq	140c8 <putchar_unlocked@plt+0x323c>
   1404c:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14050:	eor	r3, r3, #1
   14054:	uxtb	r3, r3
   14058:	cmp	r3, #0
   1405c:	beq	140c8 <putchar_unlocked@plt+0x323c>
   14060:	ldr	r2, [fp, #-20]	; 0xffffffec
   14064:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14068:	cmp	r2, r3
   1406c:	bcs	14084 <putchar_unlocked@plt+0x31f8>
   14070:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14074:	ldr	r3, [fp, #-20]	; 0xffffffec
   14078:	add	r3, r2, r3
   1407c:	mov	r2, #39	; 0x27
   14080:	strb	r2, [r3]
   14084:	ldr	r3, [fp, #-20]	; 0xffffffec
   14088:	add	r3, r3, #1
   1408c:	str	r3, [fp, #-20]	; 0xffffffec
   14090:	ldr	r2, [fp, #-20]	; 0xffffffec
   14094:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14098:	cmp	r2, r3
   1409c:	bcs	140b4 <putchar_unlocked@plt+0x3228>
   140a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   140a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   140a8:	add	r3, r2, r3
   140ac:	mov	r2, #39	; 0x27
   140b0:	strb	r2, [r3]
   140b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   140b8:	add	r3, r3, #1
   140bc:	str	r3, [fp, #-20]	; 0xffffffec
   140c0:	mov	r3, #0
   140c4:	strb	r3, [fp, #-35]	; 0xffffffdd
   140c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   140cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140d0:	cmp	r2, r3
   140d4:	bcs	140ec <putchar_unlocked@plt+0x3260>
   140d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   140dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   140e0:	add	r3, r2, r3
   140e4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   140e8:	strb	r2, [r3]
   140ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   140f0:	add	r3, r3, #1
   140f4:	str	r3, [fp, #-20]	; 0xffffffec
   140f8:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   140fc:	eor	r3, r3, #1
   14100:	uxtb	r3, r3
   14104:	cmp	r3, #0
   14108:	beq	14114 <putchar_unlocked@plt+0x3288>
   1410c:	mov	r3, #0
   14110:	strb	r3, [fp, #-37]	; 0xffffffdb
   14114:	ldr	r3, [fp, #-16]
   14118:	add	r3, r3, #1
   1411c:	str	r3, [fp, #-16]
   14120:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14124:	cmn	r3, #1
   14128:	bne	14150 <putchar_unlocked@plt+0x32c4>
   1412c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14130:	ldr	r3, [fp, #-16]
   14134:	add	r3, r2, r3
   14138:	ldrb	r3, [r3]
   1413c:	cmp	r3, #0
   14140:	movne	r3, #1
   14144:	moveq	r3, #0
   14148:	uxtb	r3, r3
   1414c:	b	14168 <putchar_unlocked@plt+0x32dc>
   14150:	ldr	r2, [fp, #-16]
   14154:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14158:	cmp	r2, r3
   1415c:	movne	r3, #1
   14160:	moveq	r3, #0
   14164:	uxtb	r3, r3
   14168:	cmp	r3, #0
   1416c:	bne	12f94 <putchar_unlocked@plt+0x2108>
   14170:	ldr	r3, [fp, #-20]	; 0xffffffec
   14174:	cmp	r3, #0
   14178:	bne	14194 <putchar_unlocked@plt+0x3308>
   1417c:	ldr	r3, [fp, #4]
   14180:	cmp	r3, #2
   14184:	bne	14194 <putchar_unlocked@plt+0x3308>
   14188:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1418c:	cmp	r3, #0
   14190:	bne	1431c <putchar_unlocked@plt+0x3490>
   14194:	ldr	r3, [fp, #4]
   14198:	cmp	r3, #2
   1419c:	bne	1423c <putchar_unlocked@plt+0x33b0>
   141a0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   141a4:	eor	r3, r3, #1
   141a8:	uxtb	r3, r3
   141ac:	cmp	r3, #0
   141b0:	beq	1423c <putchar_unlocked@plt+0x33b0>
   141b4:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   141b8:	cmp	r3, #0
   141bc:	beq	1423c <putchar_unlocked@plt+0x33b0>
   141c0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   141c4:	cmp	r3, #0
   141c8:	beq	14210 <putchar_unlocked@plt+0x3384>
   141cc:	ldr	r3, [fp, #20]
   141d0:	str	r3, [sp, #16]
   141d4:	ldr	r3, [fp, #16]
   141d8:	str	r3, [sp, #12]
   141dc:	ldr	r3, [fp, #12]
   141e0:	str	r3, [sp, #8]
   141e4:	ldr	r3, [fp, #8]
   141e8:	str	r3, [sp, #4]
   141ec:	mov	r3, #5
   141f0:	str	r3, [sp]
   141f4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   141f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   141fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14200:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14204:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   14208:	mov	r3, r0
   1420c:	b	14384 <putchar_unlocked@plt+0x34f8>
   14210:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14214:	cmp	r3, #0
   14218:	bne	1423c <putchar_unlocked@plt+0x33b0>
   1421c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14220:	cmp	r3, #0
   14224:	beq	1423c <putchar_unlocked@plt+0x33b0>
   14228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1422c:	str	r3, [fp, #-92]	; 0xffffffa4
   14230:	mov	r3, #0
   14234:	str	r3, [fp, #-20]	; 0xffffffec
   14238:	b	12d70 <putchar_unlocked@plt+0x1ee4>
   1423c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14240:	cmp	r3, #0
   14244:	beq	142b0 <putchar_unlocked@plt+0x3424>
   14248:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1424c:	eor	r3, r3, #1
   14250:	uxtb	r3, r3
   14254:	cmp	r3, #0
   14258:	beq	142b0 <putchar_unlocked@plt+0x3424>
   1425c:	b	142a0 <putchar_unlocked@plt+0x3414>
   14260:	ldr	r2, [fp, #-20]	; 0xffffffec
   14264:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14268:	cmp	r2, r3
   1426c:	bcs	14288 <putchar_unlocked@plt+0x33fc>
   14270:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14274:	ldr	r3, [fp, #-20]	; 0xffffffec
   14278:	add	r3, r2, r3
   1427c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14280:	ldrb	r2, [r2]
   14284:	strb	r2, [r3]
   14288:	ldr	r3, [fp, #-20]	; 0xffffffec
   1428c:	add	r3, r3, #1
   14290:	str	r3, [fp, #-20]	; 0xffffffec
   14294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14298:	add	r3, r3, #1
   1429c:	str	r3, [fp, #-28]	; 0xffffffe4
   142a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142a4:	ldrb	r3, [r3]
   142a8:	cmp	r3, #0
   142ac:	bne	14260 <putchar_unlocked@plt+0x33d4>
   142b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   142b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   142b8:	cmp	r2, r3
   142bc:	bcs	142d4 <putchar_unlocked@plt+0x3448>
   142c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   142c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   142c8:	add	r3, r2, r3
   142cc:	mov	r2, #0
   142d0:	strb	r2, [r3]
   142d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   142d8:	b	14384 <putchar_unlocked@plt+0x34f8>
   142dc:	nop			; (mov r0, r0)
   142e0:	b	14320 <putchar_unlocked@plt+0x3494>
   142e4:	nop			; (mov r0, r0)
   142e8:	b	14320 <putchar_unlocked@plt+0x3494>
   142ec:	nop			; (mov r0, r0)
   142f0:	b	14320 <putchar_unlocked@plt+0x3494>
   142f4:	nop			; (mov r0, r0)
   142f8:	b	14320 <putchar_unlocked@plt+0x3494>
   142fc:	nop			; (mov r0, r0)
   14300:	b	14320 <putchar_unlocked@plt+0x3494>
   14304:	nop			; (mov r0, r0)
   14308:	b	14320 <putchar_unlocked@plt+0x3494>
   1430c:	nop			; (mov r0, r0)
   14310:	b	14320 <putchar_unlocked@plt+0x3494>
   14314:	nop			; (mov r0, r0)
   14318:	b	14320 <putchar_unlocked@plt+0x3494>
   1431c:	nop			; (mov r0, r0)
   14320:	ldr	r3, [fp, #4]
   14324:	cmp	r3, #2
   14328:	bne	14340 <putchar_unlocked@plt+0x34b4>
   1432c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14330:	cmp	r3, #0
   14334:	beq	14340 <putchar_unlocked@plt+0x34b4>
   14338:	mov	r3, #4
   1433c:	str	r3, [fp, #4]
   14340:	ldr	r3, [fp, #8]
   14344:	bic	r3, r3, #2
   14348:	ldr	r2, [fp, #20]
   1434c:	str	r2, [sp, #16]
   14350:	ldr	r2, [fp, #16]
   14354:	str	r2, [sp, #12]
   14358:	mov	r2, #0
   1435c:	str	r2, [sp, #8]
   14360:	str	r3, [sp, #4]
   14364:	ldr	r3, [fp, #4]
   14368:	str	r3, [sp]
   1436c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14370:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14374:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14378:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1437c:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   14380:	mov	r3, r0
   14384:	mov	r0, r3
   14388:	sub	sp, fp, #8
   1438c:	pop	{r4, fp, pc}
   14390:	push	{fp, lr}
   14394:	add	fp, sp, #4
   14398:	sub	sp, sp, #56	; 0x38
   1439c:	str	r0, [fp, #-24]	; 0xffffffe8
   143a0:	str	r1, [fp, #-28]	; 0xffffffe4
   143a4:	str	r2, [fp, #-32]	; 0xffffffe0
   143a8:	str	r3, [fp, #-36]	; 0xffffffdc
   143ac:	ldr	r3, [fp, #4]
   143b0:	cmp	r3, #0
   143b4:	beq	143c0 <putchar_unlocked@plt+0x3534>
   143b8:	ldr	r3, [fp, #4]
   143bc:	b	143c4 <putchar_unlocked@plt+0x3538>
   143c0:	ldr	r3, [pc, #132]	; 1444c <putchar_unlocked@plt+0x35c0>
   143c4:	str	r3, [fp, #-8]
   143c8:	bl	10de4 <__errno_location@plt>
   143cc:	mov	r3, r0
   143d0:	ldr	r3, [r3]
   143d4:	str	r3, [fp, #-12]
   143d8:	ldr	r3, [fp, #-8]
   143dc:	ldr	r3, [r3]
   143e0:	ldr	r2, [fp, #-8]
   143e4:	ldr	r2, [r2, #4]
   143e8:	ldr	r1, [fp, #-8]
   143ec:	add	r1, r1, #8
   143f0:	ldr	r0, [fp, #-8]
   143f4:	ldr	r0, [r0, #40]	; 0x28
   143f8:	ldr	ip, [fp, #-8]
   143fc:	ldr	ip, [ip, #44]	; 0x2c
   14400:	str	ip, [sp, #16]
   14404:	str	r0, [sp, #12]
   14408:	str	r1, [sp, #8]
   1440c:	str	r2, [sp, #4]
   14410:	str	r3, [sp]
   14414:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14418:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1441c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14424:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   14428:	str	r0, [fp, #-16]
   1442c:	bl	10de4 <__errno_location@plt>
   14430:	mov	r2, r0
   14434:	ldr	r3, [fp, #-12]
   14438:	str	r3, [r2]
   1443c:	ldr	r3, [fp, #-16]
   14440:	mov	r0, r3
   14444:	sub	sp, fp, #4
   14448:	pop	{fp, pc}
   1444c:	andeq	r9, r2, r0, ror r1
   14450:	push	{fp, lr}
   14454:	add	fp, sp, #4
   14458:	sub	sp, sp, #16
   1445c:	str	r0, [fp, #-8]
   14460:	str	r1, [fp, #-12]
   14464:	str	r2, [fp, #-16]
   14468:	ldr	r3, [fp, #-16]
   1446c:	mov	r2, #0
   14470:	ldr	r1, [fp, #-12]
   14474:	ldr	r0, [fp, #-8]
   14478:	bl	1448c <putchar_unlocked@plt+0x3600>
   1447c:	mov	r3, r0
   14480:	mov	r0, r3
   14484:	sub	sp, fp, #4
   14488:	pop	{fp, pc}
   1448c:	push	{fp, lr}
   14490:	add	fp, sp, #4
   14494:	sub	sp, sp, #64	; 0x40
   14498:	str	r0, [fp, #-32]	; 0xffffffe0
   1449c:	str	r1, [fp, #-36]	; 0xffffffdc
   144a0:	str	r2, [fp, #-40]	; 0xffffffd8
   144a4:	str	r3, [fp, #-44]	; 0xffffffd4
   144a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   144ac:	cmp	r3, #0
   144b0:	beq	144bc <putchar_unlocked@plt+0x3630>
   144b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   144b8:	b	144c0 <putchar_unlocked@plt+0x3634>
   144bc:	ldr	r3, [pc, #292]	; 145e8 <putchar_unlocked@plt+0x375c>
   144c0:	str	r3, [fp, #-8]
   144c4:	bl	10de4 <__errno_location@plt>
   144c8:	mov	r3, r0
   144cc:	ldr	r3, [r3]
   144d0:	str	r3, [fp, #-12]
   144d4:	ldr	r3, [fp, #-8]
   144d8:	ldr	r3, [r3, #4]
   144dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144e0:	cmp	r2, #0
   144e4:	moveq	r2, #1
   144e8:	movne	r2, #0
   144ec:	uxtb	r2, r2
   144f0:	orr	r3, r3, r2
   144f4:	str	r3, [fp, #-16]
   144f8:	ldr	r3, [fp, #-8]
   144fc:	ldr	r3, [r3]
   14500:	ldr	r2, [fp, #-8]
   14504:	add	r2, r2, #8
   14508:	ldr	r1, [fp, #-8]
   1450c:	ldr	r1, [r1, #40]	; 0x28
   14510:	ldr	r0, [fp, #-8]
   14514:	ldr	r0, [r0, #44]	; 0x2c
   14518:	str	r0, [sp, #16]
   1451c:	str	r1, [sp, #12]
   14520:	str	r2, [sp, #8]
   14524:	ldr	r2, [fp, #-16]
   14528:	str	r2, [sp, #4]
   1452c:	str	r3, [sp]
   14530:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14534:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14538:	mov	r1, #0
   1453c:	mov	r0, #0
   14540:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   14544:	mov	r3, r0
   14548:	add	r3, r3, #1
   1454c:	str	r3, [fp, #-20]	; 0xffffffec
   14550:	ldr	r0, [fp, #-20]	; 0xffffffec
   14554:	bl	15788 <putchar_unlocked@plt+0x48fc>
   14558:	mov	r3, r0
   1455c:	str	r3, [fp, #-24]	; 0xffffffe8
   14560:	ldr	r3, [fp, #-8]
   14564:	ldr	r3, [r3]
   14568:	ldr	r2, [fp, #-8]
   1456c:	add	r2, r2, #8
   14570:	ldr	r1, [fp, #-8]
   14574:	ldr	r1, [r1, #40]	; 0x28
   14578:	ldr	r0, [fp, #-8]
   1457c:	ldr	r0, [r0, #44]	; 0x2c
   14580:	str	r0, [sp, #16]
   14584:	str	r1, [sp, #12]
   14588:	str	r2, [sp, #8]
   1458c:	ldr	r2, [fp, #-16]
   14590:	str	r2, [sp, #4]
   14594:	str	r3, [sp]
   14598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1459c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   145a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   145a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145a8:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   145ac:	bl	10de4 <__errno_location@plt>
   145b0:	mov	r2, r0
   145b4:	ldr	r3, [fp, #-12]
   145b8:	str	r3, [r2]
   145bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   145c0:	cmp	r3, #0
   145c4:	beq	145d8 <putchar_unlocked@plt+0x374c>
   145c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   145cc:	sub	r2, r3, #1
   145d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   145d4:	str	r2, [r3]
   145d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   145dc:	mov	r0, r3
   145e0:	sub	sp, fp, #4
   145e4:	pop	{fp, pc}
   145e8:	andeq	r9, r2, r0, ror r1
   145ec:	push	{fp, lr}
   145f0:	add	fp, sp, #4
   145f4:	sub	sp, sp, #8
   145f8:	ldr	r3, [pc, #196]	; 146c4 <putchar_unlocked@plt+0x3838>
   145fc:	ldr	r3, [r3]
   14600:	str	r3, [fp, #-12]
   14604:	mov	r3, #1
   14608:	str	r3, [fp, #-8]
   1460c:	b	14638 <putchar_unlocked@plt+0x37ac>
   14610:	ldr	r3, [fp, #-8]
   14614:	lsl	r3, r3, #3
   14618:	ldr	r2, [fp, #-12]
   1461c:	add	r3, r2, r3
   14620:	ldr	r3, [r3, #4]
   14624:	mov	r0, r3
   14628:	bl	12668 <putchar_unlocked@plt+0x17dc>
   1462c:	ldr	r3, [fp, #-8]
   14630:	add	r3, r3, #1
   14634:	str	r3, [fp, #-8]
   14638:	ldr	r3, [pc, #136]	; 146c8 <putchar_unlocked@plt+0x383c>
   1463c:	ldr	r3, [r3]
   14640:	ldr	r2, [fp, #-8]
   14644:	cmp	r2, r3
   14648:	blt	14610 <putchar_unlocked@plt+0x3784>
   1464c:	ldr	r3, [fp, #-12]
   14650:	ldr	r3, [r3, #4]
   14654:	ldr	r2, [pc, #112]	; 146cc <putchar_unlocked@plt+0x3840>
   14658:	cmp	r3, r2
   1465c:	beq	14688 <putchar_unlocked@plt+0x37fc>
   14660:	ldr	r3, [fp, #-12]
   14664:	ldr	r3, [r3, #4]
   14668:	mov	r0, r3
   1466c:	bl	12668 <putchar_unlocked@plt+0x17dc>
   14670:	ldr	r3, [pc, #88]	; 146d0 <putchar_unlocked@plt+0x3844>
   14674:	mov	r2, #256	; 0x100
   14678:	str	r2, [r3]
   1467c:	ldr	r3, [pc, #76]	; 146d0 <putchar_unlocked@plt+0x3844>
   14680:	ldr	r2, [pc, #68]	; 146cc <putchar_unlocked@plt+0x3840>
   14684:	str	r2, [r3, #4]
   14688:	ldr	r3, [fp, #-12]
   1468c:	ldr	r2, [pc, #60]	; 146d0 <putchar_unlocked@plt+0x3844>
   14690:	cmp	r3, r2
   14694:	beq	146ac <putchar_unlocked@plt+0x3820>
   14698:	ldr	r0, [fp, #-12]
   1469c:	bl	12668 <putchar_unlocked@plt+0x17dc>
   146a0:	ldr	r3, [pc, #28]	; 146c4 <putchar_unlocked@plt+0x3838>
   146a4:	ldr	r2, [pc, #36]	; 146d0 <putchar_unlocked@plt+0x3844>
   146a8:	str	r2, [r3]
   146ac:	ldr	r3, [pc, #20]	; 146c8 <putchar_unlocked@plt+0x383c>
   146b0:	mov	r2, #1
   146b4:	str	r2, [r3]
   146b8:	nop			; (mov r0, r0)
   146bc:	sub	sp, fp, #4
   146c0:	pop	{fp, pc}
   146c4:	strdeq	r9, [r2], -r8
   146c8:	andeq	r9, r2, ip, ror #1
   146cc:	andeq	r9, r2, r0, lsr #3
   146d0:	strdeq	r9, [r2], -r0
   146d4:	push	{r4, fp, lr}
   146d8:	add	fp, sp, #8
   146dc:	sub	sp, sp, #84	; 0x54
   146e0:	str	r0, [fp, #-56]	; 0xffffffc8
   146e4:	str	r1, [fp, #-60]	; 0xffffffc4
   146e8:	str	r2, [fp, #-64]	; 0xffffffc0
   146ec:	str	r3, [fp, #-68]	; 0xffffffbc
   146f0:	bl	10de4 <__errno_location@plt>
   146f4:	mov	r3, r0
   146f8:	ldr	r3, [r3]
   146fc:	str	r3, [fp, #-24]	; 0xffffffe8
   14700:	ldr	r3, [pc, #640]	; 14988 <putchar_unlocked@plt+0x3afc>
   14704:	ldr	r3, [r3]
   14708:	str	r3, [fp, #-16]
   1470c:	mvn	r3, #-2147483648	; 0x80000000
   14710:	str	r3, [fp, #-28]	; 0xffffffe4
   14714:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14718:	cmp	r3, #0
   1471c:	blt	14730 <putchar_unlocked@plt+0x38a4>
   14720:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14724:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14728:	cmp	r2, r3
   1472c:	blt	14734 <putchar_unlocked@plt+0x38a8>
   14730:	bl	10e80 <abort@plt>
   14734:	ldr	r3, [pc, #592]	; 1498c <putchar_unlocked@plt+0x3b00>
   14738:	ldr	r2, [r3]
   1473c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14740:	cmp	r2, r3
   14744:	bgt	14818 <putchar_unlocked@plt+0x398c>
   14748:	ldr	r3, [fp, #-16]
   1474c:	ldr	r2, [pc, #572]	; 14990 <putchar_unlocked@plt+0x3b04>
   14750:	cmp	r3, r2
   14754:	moveq	r3, #1
   14758:	movne	r3, #0
   1475c:	strb	r3, [fp, #-29]	; 0xffffffe3
   14760:	ldr	r3, [pc, #548]	; 1498c <putchar_unlocked@plt+0x3b00>
   14764:	ldr	r3, [r3]
   14768:	str	r3, [fp, #-48]	; 0xffffffd0
   1476c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   14770:	cmp	r3, #0
   14774:	beq	14780 <putchar_unlocked@plt+0x38f4>
   14778:	mov	r0, #0
   1477c:	b	14784 <putchar_unlocked@plt+0x38f8>
   14780:	ldr	r0, [fp, #-16]
   14784:	ldr	r3, [pc, #512]	; 1498c <putchar_unlocked@plt+0x3b00>
   14788:	ldr	r3, [r3]
   1478c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14790:	sub	r3, r2, r3
   14794:	add	r2, r3, #1
   14798:	sub	r1, fp, #48	; 0x30
   1479c:	mov	r3, #8
   147a0:	str	r3, [sp]
   147a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   147a8:	bl	15aa8 <putchar_unlocked@plt+0x4c1c>
   147ac:	str	r0, [fp, #-16]
   147b0:	ldr	r2, [pc, #464]	; 14988 <putchar_unlocked@plt+0x3afc>
   147b4:	ldr	r3, [fp, #-16]
   147b8:	str	r3, [r2]
   147bc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   147c0:	cmp	r3, #0
   147c4:	beq	147d8 <putchar_unlocked@plt+0x394c>
   147c8:	ldr	r3, [fp, #-16]
   147cc:	ldr	r2, [pc, #444]	; 14990 <putchar_unlocked@plt+0x3b04>
   147d0:	ldm	r2, {r0, r1}
   147d4:	stm	r3, {r0, r1}
   147d8:	ldr	r3, [pc, #428]	; 1498c <putchar_unlocked@plt+0x3b00>
   147dc:	ldr	r3, [r3]
   147e0:	lsl	r3, r3, #3
   147e4:	ldr	r2, [fp, #-16]
   147e8:	add	r0, r2, r3
   147ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   147f0:	ldr	r3, [pc, #404]	; 1498c <putchar_unlocked@plt+0x3b00>
   147f4:	ldr	r3, [r3]
   147f8:	sub	r3, r2, r3
   147fc:	lsl	r3, r3, #3
   14800:	mov	r2, r3
   14804:	mov	r1, #0
   14808:	bl	10dfc <memset@plt>
   1480c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14810:	ldr	r2, [pc, #372]	; 1498c <putchar_unlocked@plt+0x3b00>
   14814:	str	r3, [r2]
   14818:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1481c:	lsl	r3, r3, #3
   14820:	ldr	r2, [fp, #-16]
   14824:	add	r3, r2, r3
   14828:	ldr	r3, [r3]
   1482c:	str	r3, [fp, #-36]	; 0xffffffdc
   14830:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14834:	lsl	r3, r3, #3
   14838:	ldr	r2, [fp, #-16]
   1483c:	add	r3, r2, r3
   14840:	ldr	r3, [r3, #4]
   14844:	str	r3, [fp, #-20]	; 0xffffffec
   14848:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1484c:	ldr	r3, [r3, #4]
   14850:	orr	r3, r3, #1
   14854:	str	r3, [fp, #-40]	; 0xffffffd8
   14858:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1485c:	ldr	r3, [r3]
   14860:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14864:	add	r2, r2, #8
   14868:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1486c:	ldr	r1, [r1, #40]	; 0x28
   14870:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14874:	ldr	r0, [r0, #44]	; 0x2c
   14878:	str	r0, [sp, #16]
   1487c:	str	r1, [sp, #12]
   14880:	str	r2, [sp, #8]
   14884:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14888:	str	r2, [sp, #4]
   1488c:	str	r3, [sp]
   14890:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14894:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14898:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1489c:	ldr	r0, [fp, #-20]	; 0xffffffec
   148a0:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   148a4:	str	r0, [fp, #-44]	; 0xffffffd4
   148a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   148ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   148b0:	cmp	r2, r3
   148b4:	bhi	14968 <putchar_unlocked@plt+0x3adc>
   148b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   148bc:	lsl	r3, r3, #3
   148c0:	ldr	r2, [fp, #-16]
   148c4:	add	r3, r2, r3
   148c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   148cc:	add	r2, r2, #1
   148d0:	str	r2, [fp, #-36]	; 0xffffffdc
   148d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   148d8:	str	r2, [r3]
   148dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   148e0:	ldr	r2, [pc, #172]	; 14994 <putchar_unlocked@plt+0x3b08>
   148e4:	cmp	r3, r2
   148e8:	beq	148f4 <putchar_unlocked@plt+0x3a68>
   148ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   148f0:	bl	12668 <putchar_unlocked@plt+0x17dc>
   148f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   148f8:	lsl	r3, r3, #3
   148fc:	ldr	r2, [fp, #-16]
   14900:	add	r4, r2, r3
   14904:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14908:	bl	15788 <putchar_unlocked@plt+0x48fc>
   1490c:	mov	r3, r0
   14910:	str	r3, [fp, #-20]	; 0xffffffec
   14914:	ldr	r3, [fp, #-20]	; 0xffffffec
   14918:	str	r3, [r4, #4]
   1491c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14920:	ldr	r3, [r3]
   14924:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14928:	add	r2, r2, #8
   1492c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14930:	ldr	r1, [r1, #40]	; 0x28
   14934:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14938:	ldr	r0, [r0, #44]	; 0x2c
   1493c:	str	r0, [sp, #16]
   14940:	str	r1, [sp, #12]
   14944:	str	r2, [sp, #8]
   14948:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1494c:	str	r2, [sp, #4]
   14950:	str	r3, [sp]
   14954:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14958:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1495c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14960:	ldr	r0, [fp, #-20]	; 0xffffffec
   14964:	bl	12ce4 <putchar_unlocked@plt+0x1e58>
   14968:	bl	10de4 <__errno_location@plt>
   1496c:	mov	r2, r0
   14970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14974:	str	r3, [r2]
   14978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1497c:	mov	r0, r3
   14980:	sub	sp, fp, #8
   14984:	pop	{r4, fp, pc}
   14988:	strdeq	r9, [r2], -r8
   1498c:	andeq	r9, r2, ip, ror #1
   14990:	strdeq	r9, [r2], -r0
   14994:	andeq	r9, r2, r0, lsr #3
   14998:	push	{fp, lr}
   1499c:	add	fp, sp, #4
   149a0:	sub	sp, sp, #8
   149a4:	str	r0, [fp, #-8]
   149a8:	str	r1, [fp, #-12]
   149ac:	ldr	r3, [pc, #28]	; 149d0 <putchar_unlocked@plt+0x3b44>
   149b0:	mvn	r2, #0
   149b4:	ldr	r1, [fp, #-12]
   149b8:	ldr	r0, [fp, #-8]
   149bc:	bl	146d4 <putchar_unlocked@plt+0x3848>
   149c0:	mov	r3, r0
   149c4:	mov	r0, r3
   149c8:	sub	sp, fp, #4
   149cc:	pop	{fp, pc}
   149d0:	andeq	r9, r2, r0, ror r1
   149d4:	push	{fp, lr}
   149d8:	add	fp, sp, #4
   149dc:	sub	sp, sp, #16
   149e0:	str	r0, [fp, #-8]
   149e4:	str	r1, [fp, #-12]
   149e8:	str	r2, [fp, #-16]
   149ec:	ldr	r3, [pc, #28]	; 14a10 <putchar_unlocked@plt+0x3b84>
   149f0:	ldr	r2, [fp, #-16]
   149f4:	ldr	r1, [fp, #-12]
   149f8:	ldr	r0, [fp, #-8]
   149fc:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14a00:	mov	r3, r0
   14a04:	mov	r0, r3
   14a08:	sub	sp, fp, #4
   14a0c:	pop	{fp, pc}
   14a10:	andeq	r9, r2, r0, ror r1
   14a14:	push	{fp, lr}
   14a18:	add	fp, sp, #4
   14a1c:	sub	sp, sp, #8
   14a20:	str	r0, [fp, #-8]
   14a24:	ldr	r1, [fp, #-8]
   14a28:	mov	r0, #0
   14a2c:	bl	14998 <putchar_unlocked@plt+0x3b0c>
   14a30:	mov	r3, r0
   14a34:	mov	r0, r3
   14a38:	sub	sp, fp, #4
   14a3c:	pop	{fp, pc}
   14a40:	push	{fp, lr}
   14a44:	add	fp, sp, #4
   14a48:	sub	sp, sp, #8
   14a4c:	str	r0, [fp, #-8]
   14a50:	str	r1, [fp, #-12]
   14a54:	ldr	r2, [fp, #-12]
   14a58:	ldr	r1, [fp, #-8]
   14a5c:	mov	r0, #0
   14a60:	bl	149d4 <putchar_unlocked@plt+0x3b48>
   14a64:	mov	r3, r0
   14a68:	mov	r0, r3
   14a6c:	sub	sp, fp, #4
   14a70:	pop	{fp, pc}
   14a74:	push	{fp, lr}
   14a78:	add	fp, sp, #4
   14a7c:	sub	sp, sp, #64	; 0x40
   14a80:	str	r0, [fp, #-56]	; 0xffffffc8
   14a84:	str	r1, [fp, #-60]	; 0xffffffc4
   14a88:	str	r2, [fp, #-64]	; 0xffffffc0
   14a8c:	sub	r3, fp, #52	; 0x34
   14a90:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14a94:	mov	r0, r3
   14a98:	bl	12b80 <putchar_unlocked@plt+0x1cf4>
   14a9c:	sub	r3, fp, #52	; 0x34
   14aa0:	mvn	r2, #0
   14aa4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14aa8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14aac:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14ab0:	mov	r3, r0
   14ab4:	mov	r0, r3
   14ab8:	sub	sp, fp, #4
   14abc:	pop	{fp, pc}
   14ac0:	push	{fp, lr}
   14ac4:	add	fp, sp, #4
   14ac8:	sub	sp, sp, #64	; 0x40
   14acc:	str	r0, [fp, #-56]	; 0xffffffc8
   14ad0:	str	r1, [fp, #-60]	; 0xffffffc4
   14ad4:	str	r2, [fp, #-64]	; 0xffffffc0
   14ad8:	str	r3, [fp, #-68]	; 0xffffffbc
   14adc:	sub	r3, fp, #52	; 0x34
   14ae0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14ae4:	mov	r0, r3
   14ae8:	bl	12b80 <putchar_unlocked@plt+0x1cf4>
   14aec:	sub	r3, fp, #52	; 0x34
   14af0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14af4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14af8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14afc:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14b00:	mov	r3, r0
   14b04:	mov	r0, r3
   14b08:	sub	sp, fp, #4
   14b0c:	pop	{fp, pc}
   14b10:	push	{fp, lr}
   14b14:	add	fp, sp, #4
   14b18:	sub	sp, sp, #8
   14b1c:	str	r0, [fp, #-8]
   14b20:	str	r1, [fp, #-12]
   14b24:	ldr	r2, [fp, #-12]
   14b28:	ldr	r1, [fp, #-8]
   14b2c:	mov	r0, #0
   14b30:	bl	14a74 <putchar_unlocked@plt+0x3be8>
   14b34:	mov	r3, r0
   14b38:	mov	r0, r3
   14b3c:	sub	sp, fp, #4
   14b40:	pop	{fp, pc}
   14b44:	push	{fp, lr}
   14b48:	add	fp, sp, #4
   14b4c:	sub	sp, sp, #16
   14b50:	str	r0, [fp, #-8]
   14b54:	str	r1, [fp, #-12]
   14b58:	str	r2, [fp, #-16]
   14b5c:	ldr	r3, [fp, #-16]
   14b60:	ldr	r2, [fp, #-12]
   14b64:	ldr	r1, [fp, #-8]
   14b68:	mov	r0, #0
   14b6c:	bl	14ac0 <putchar_unlocked@plt+0x3c34>
   14b70:	mov	r3, r0
   14b74:	mov	r0, r3
   14b78:	sub	sp, fp, #4
   14b7c:	pop	{fp, pc}
   14b80:	push	{fp, lr}
   14b84:	add	fp, sp, #4
   14b88:	sub	sp, sp, #64	; 0x40
   14b8c:	str	r0, [fp, #-56]	; 0xffffffc8
   14b90:	str	r1, [fp, #-60]	; 0xffffffc4
   14b94:	mov	r3, r2
   14b98:	strb	r3, [fp, #-61]	; 0xffffffc3
   14b9c:	ldr	r3, [pc, #84]	; 14bf8 <putchar_unlocked@plt+0x3d6c>
   14ba0:	sub	ip, fp, #52	; 0x34
   14ba4:	mov	lr, r3
   14ba8:	ldm	lr!, {r0, r1, r2, r3}
   14bac:	stmia	ip!, {r0, r1, r2, r3}
   14bb0:	ldm	lr!, {r0, r1, r2, r3}
   14bb4:	stmia	ip!, {r0, r1, r2, r3}
   14bb8:	ldm	lr, {r0, r1, r2, r3}
   14bbc:	stm	ip, {r0, r1, r2, r3}
   14bc0:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   14bc4:	sub	r3, fp, #52	; 0x34
   14bc8:	mov	r2, #1
   14bcc:	mov	r0, r3
   14bd0:	bl	129ec <putchar_unlocked@plt+0x1b60>
   14bd4:	sub	r3, fp, #52	; 0x34
   14bd8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14bdc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14be0:	mov	r0, #0
   14be4:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14be8:	mov	r3, r0
   14bec:	mov	r0, r3
   14bf0:	sub	sp, fp, #4
   14bf4:	pop	{fp, pc}
   14bf8:	andeq	r9, r2, r0, ror r1
   14bfc:	push	{fp, lr}
   14c00:	add	fp, sp, #4
   14c04:	sub	sp, sp, #8
   14c08:	str	r0, [fp, #-8]
   14c0c:	mov	r3, r1
   14c10:	strb	r3, [fp, #-9]
   14c14:	ldrb	r3, [fp, #-9]
   14c18:	mov	r2, r3
   14c1c:	mvn	r1, #0
   14c20:	ldr	r0, [fp, #-8]
   14c24:	bl	14b80 <putchar_unlocked@plt+0x3cf4>
   14c28:	mov	r3, r0
   14c2c:	mov	r0, r3
   14c30:	sub	sp, fp, #4
   14c34:	pop	{fp, pc}
   14c38:	push	{fp, lr}
   14c3c:	add	fp, sp, #4
   14c40:	sub	sp, sp, #8
   14c44:	str	r0, [fp, #-8]
   14c48:	mov	r1, #58	; 0x3a
   14c4c:	ldr	r0, [fp, #-8]
   14c50:	bl	14bfc <putchar_unlocked@plt+0x3d70>
   14c54:	mov	r3, r0
   14c58:	mov	r0, r3
   14c5c:	sub	sp, fp, #4
   14c60:	pop	{fp, pc}
   14c64:	push	{fp, lr}
   14c68:	add	fp, sp, #4
   14c6c:	sub	sp, sp, #8
   14c70:	str	r0, [fp, #-8]
   14c74:	str	r1, [fp, #-12]
   14c78:	mov	r2, #58	; 0x3a
   14c7c:	ldr	r1, [fp, #-12]
   14c80:	ldr	r0, [fp, #-8]
   14c84:	bl	14b80 <putchar_unlocked@plt+0x3cf4>
   14c88:	mov	r3, r0
   14c8c:	mov	r0, r3
   14c90:	sub	sp, fp, #4
   14c94:	pop	{fp, pc}
   14c98:	push	{fp, lr}
   14c9c:	add	fp, sp, #4
   14ca0:	sub	sp, sp, #112	; 0x70
   14ca4:	str	r0, [fp, #-56]	; 0xffffffc8
   14ca8:	str	r1, [fp, #-60]	; 0xffffffc4
   14cac:	str	r2, [fp, #-64]	; 0xffffffc0
   14cb0:	sub	r3, fp, #116	; 0x74
   14cb4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14cb8:	mov	r0, r3
   14cbc:	bl	12b80 <putchar_unlocked@plt+0x1cf4>
   14cc0:	sub	ip, fp, #52	; 0x34
   14cc4:	sub	lr, fp, #116	; 0x74
   14cc8:	ldm	lr!, {r0, r1, r2, r3}
   14ccc:	stmia	ip!, {r0, r1, r2, r3}
   14cd0:	ldm	lr!, {r0, r1, r2, r3}
   14cd4:	stmia	ip!, {r0, r1, r2, r3}
   14cd8:	ldm	lr, {r0, r1, r2, r3}
   14cdc:	stm	ip, {r0, r1, r2, r3}
   14ce0:	sub	r3, fp, #52	; 0x34
   14ce4:	mov	r2, #1
   14ce8:	mov	r1, #58	; 0x3a
   14cec:	mov	r0, r3
   14cf0:	bl	129ec <putchar_unlocked@plt+0x1b60>
   14cf4:	sub	r3, fp, #52	; 0x34
   14cf8:	mvn	r2, #0
   14cfc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14d00:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14d04:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14d08:	mov	r3, r0
   14d0c:	mov	r0, r3
   14d10:	sub	sp, fp, #4
   14d14:	pop	{fp, pc}
   14d18:	push	{fp, lr}
   14d1c:	add	fp, sp, #4
   14d20:	sub	sp, sp, #24
   14d24:	str	r0, [fp, #-8]
   14d28:	str	r1, [fp, #-12]
   14d2c:	str	r2, [fp, #-16]
   14d30:	str	r3, [fp, #-20]	; 0xffffffec
   14d34:	mvn	r3, #0
   14d38:	str	r3, [sp]
   14d3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d40:	ldr	r2, [fp, #-16]
   14d44:	ldr	r1, [fp, #-12]
   14d48:	ldr	r0, [fp, #-8]
   14d4c:	bl	14d60 <putchar_unlocked@plt+0x3ed4>
   14d50:	mov	r3, r0
   14d54:	mov	r0, r3
   14d58:	sub	sp, fp, #4
   14d5c:	pop	{fp, pc}
   14d60:	push	{fp, lr}
   14d64:	add	fp, sp, #4
   14d68:	sub	sp, sp, #64	; 0x40
   14d6c:	str	r0, [fp, #-56]	; 0xffffffc8
   14d70:	str	r1, [fp, #-60]	; 0xffffffc4
   14d74:	str	r2, [fp, #-64]	; 0xffffffc0
   14d78:	str	r3, [fp, #-68]	; 0xffffffbc
   14d7c:	ldr	r3, [pc, #84]	; 14dd8 <putchar_unlocked@plt+0x3f4c>
   14d80:	sub	ip, fp, #52	; 0x34
   14d84:	mov	lr, r3
   14d88:	ldm	lr!, {r0, r1, r2, r3}
   14d8c:	stmia	ip!, {r0, r1, r2, r3}
   14d90:	ldm	lr!, {r0, r1, r2, r3}
   14d94:	stmia	ip!, {r0, r1, r2, r3}
   14d98:	ldm	lr, {r0, r1, r2, r3}
   14d9c:	stm	ip, {r0, r1, r2, r3}
   14da0:	sub	r3, fp, #52	; 0x34
   14da4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   14da8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14dac:	mov	r0, r3
   14db0:	bl	12b04 <putchar_unlocked@plt+0x1c78>
   14db4:	sub	r3, fp, #52	; 0x34
   14db8:	ldr	r2, [fp, #4]
   14dbc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   14dc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14dc4:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14dc8:	mov	r3, r0
   14dcc:	mov	r0, r3
   14dd0:	sub	sp, fp, #4
   14dd4:	pop	{fp, pc}
   14dd8:	andeq	r9, r2, r0, ror r1
   14ddc:	push	{fp, lr}
   14de0:	add	fp, sp, #4
   14de4:	sub	sp, sp, #16
   14de8:	str	r0, [fp, #-8]
   14dec:	str	r1, [fp, #-12]
   14df0:	str	r2, [fp, #-16]
   14df4:	ldr	r3, [fp, #-16]
   14df8:	ldr	r2, [fp, #-12]
   14dfc:	ldr	r1, [fp, #-8]
   14e00:	mov	r0, #0
   14e04:	bl	14d18 <putchar_unlocked@plt+0x3e8c>
   14e08:	mov	r3, r0
   14e0c:	mov	r0, r3
   14e10:	sub	sp, fp, #4
   14e14:	pop	{fp, pc}
   14e18:	push	{fp, lr}
   14e1c:	add	fp, sp, #4
   14e20:	sub	sp, sp, #24
   14e24:	str	r0, [fp, #-8]
   14e28:	str	r1, [fp, #-12]
   14e2c:	str	r2, [fp, #-16]
   14e30:	str	r3, [fp, #-20]	; 0xffffffec
   14e34:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e38:	str	r3, [sp]
   14e3c:	ldr	r3, [fp, #-16]
   14e40:	ldr	r2, [fp, #-12]
   14e44:	ldr	r1, [fp, #-8]
   14e48:	mov	r0, #0
   14e4c:	bl	14d60 <putchar_unlocked@plt+0x3ed4>
   14e50:	mov	r3, r0
   14e54:	mov	r0, r3
   14e58:	sub	sp, fp, #4
   14e5c:	pop	{fp, pc}
   14e60:	push	{fp, lr}
   14e64:	add	fp, sp, #4
   14e68:	sub	sp, sp, #16
   14e6c:	str	r0, [fp, #-8]
   14e70:	str	r1, [fp, #-12]
   14e74:	str	r2, [fp, #-16]
   14e78:	ldr	r3, [pc, #28]	; 14e9c <putchar_unlocked@plt+0x4010>
   14e7c:	ldr	r2, [fp, #-16]
   14e80:	ldr	r1, [fp, #-12]
   14e84:	ldr	r0, [fp, #-8]
   14e88:	bl	146d4 <putchar_unlocked@plt+0x3848>
   14e8c:	mov	r3, r0
   14e90:	mov	r0, r3
   14e94:	sub	sp, fp, #4
   14e98:	pop	{fp, pc}
   14e9c:	strdeq	r9, [r2], -ip
   14ea0:	push	{fp, lr}
   14ea4:	add	fp, sp, #4
   14ea8:	sub	sp, sp, #8
   14eac:	str	r0, [fp, #-8]
   14eb0:	str	r1, [fp, #-12]
   14eb4:	ldr	r2, [fp, #-12]
   14eb8:	ldr	r1, [fp, #-8]
   14ebc:	mov	r0, #0
   14ec0:	bl	14e60 <putchar_unlocked@plt+0x3fd4>
   14ec4:	mov	r3, r0
   14ec8:	mov	r0, r3
   14ecc:	sub	sp, fp, #4
   14ed0:	pop	{fp, pc}
   14ed4:	push	{fp, lr}
   14ed8:	add	fp, sp, #4
   14edc:	sub	sp, sp, #8
   14ee0:	str	r0, [fp, #-8]
   14ee4:	str	r1, [fp, #-12]
   14ee8:	mvn	r2, #0
   14eec:	ldr	r1, [fp, #-12]
   14ef0:	ldr	r0, [fp, #-8]
   14ef4:	bl	14e60 <putchar_unlocked@plt+0x3fd4>
   14ef8:	mov	r3, r0
   14efc:	mov	r0, r3
   14f00:	sub	sp, fp, #4
   14f04:	pop	{fp, pc}
   14f08:	push	{fp, lr}
   14f0c:	add	fp, sp, #4
   14f10:	sub	sp, sp, #8
   14f14:	str	r0, [fp, #-8]
   14f18:	ldr	r1, [fp, #-8]
   14f1c:	mov	r0, #0
   14f20:	bl	14ed4 <putchar_unlocked@plt+0x4048>
   14f24:	mov	r3, r0
   14f28:	mov	r0, r3
   14f2c:	sub	sp, fp, #4
   14f30:	pop	{fp, pc}
   14f34:	push	{r4, r5, r6, r7, fp, lr}
   14f38:	add	fp, sp, #20
   14f3c:	sub	sp, sp, #48	; 0x30
   14f40:	str	r0, [fp, #-24]	; 0xffffffe8
   14f44:	str	r1, [fp, #-28]	; 0xffffffe4
   14f48:	str	r2, [fp, #-32]	; 0xffffffe0
   14f4c:	str	r3, [fp, #-36]	; 0xffffffdc
   14f50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f54:	cmp	r3, #0
   14f58:	beq	14f7c <putchar_unlocked@plt+0x40f0>
   14f5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f60:	str	r3, [sp]
   14f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14f68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14f6c:	ldr	r1, [pc, #1260]	; 15460 <putchar_unlocked@plt+0x45d4>
   14f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f74:	bl	10dd8 <fprintf@plt>
   14f78:	b	14f90 <putchar_unlocked@plt+0x4104>
   14f7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14f84:	ldr	r1, [pc, #1240]	; 15464 <putchar_unlocked@plt+0x45d8>
   14f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f8c:	bl	10dd8 <fprintf@plt>
   14f90:	ldr	r0, [pc, #1232]	; 15468 <putchar_unlocked@plt+0x45dc>
   14f94:	bl	10dc0 <gettext@plt>
   14f98:	mov	r2, r0
   14f9c:	ldr	r3, [pc, #1224]	; 1546c <putchar_unlocked@plt+0x45e0>
   14fa0:	ldr	r1, [pc, #1224]	; 15470 <putchar_unlocked@plt+0x45e4>
   14fa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fa8:	bl	10dd8 <fprintf@plt>
   14fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fb0:	mov	r0, #10
   14fb4:	bl	10cdc <fputc_unlocked@plt>
   14fb8:	ldr	r0, [pc, #1204]	; 15474 <putchar_unlocked@plt+0x45e8>
   14fbc:	bl	10dc0 <gettext@plt>
   14fc0:	mov	r3, r0
   14fc4:	ldr	r2, [pc, #1196]	; 15478 <putchar_unlocked@plt+0x45ec>
   14fc8:	mov	r1, r3
   14fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fd0:	bl	10dd8 <fprintf@plt>
   14fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fd8:	mov	r0, #10
   14fdc:	bl	10cdc <fputc_unlocked@plt>
   14fe0:	ldr	r3, [fp, #8]
   14fe4:	cmp	r3, #9
   14fe8:	ldrls	pc, [pc, r3, lsl #2]
   14fec:	b	153a8 <putchar_unlocked@plt+0x451c>
   14ff0:	andeq	r5, r1, r0, asr r4
   14ff4:	andeq	r5, r1, r8, lsl r0
   14ff8:	andeq	r5, r1, ip, lsr r0
   14ffc:	andeq	r5, r1, r8, rrx
   15000:	andeq	r5, r1, r8, lsr #1
   15004:	andeq	r5, r1, r0, lsl #2
   15008:	andeq	r5, r1, r8, ror #2
   1500c:	andeq	r5, r1, r0, ror #3
   15010:	andeq	r5, r1, r8, ror #4
   15014:	andeq	r5, r1, r0, lsl #6
   15018:	ldr	r0, [pc, #1116]	; 1547c <putchar_unlocked@plt+0x45f0>
   1501c:	bl	10dc0 <gettext@plt>
   15020:	mov	r1, r0
   15024:	ldr	r3, [fp, #4]
   15028:	ldr	r3, [r3]
   1502c:	mov	r2, r3
   15030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15034:	bl	10dd8 <fprintf@plt>
   15038:	b	15454 <putchar_unlocked@plt+0x45c8>
   1503c:	ldr	r0, [pc, #1084]	; 15480 <putchar_unlocked@plt+0x45f4>
   15040:	bl	10dc0 <gettext@plt>
   15044:	mov	r1, r0
   15048:	ldr	r3, [fp, #4]
   1504c:	ldr	r2, [r3]
   15050:	ldr	r3, [fp, #4]
   15054:	add	r3, r3, #4
   15058:	ldr	r3, [r3]
   1505c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15060:	bl	10dd8 <fprintf@plt>
   15064:	b	15454 <putchar_unlocked@plt+0x45c8>
   15068:	ldr	r0, [pc, #1044]	; 15484 <putchar_unlocked@plt+0x45f8>
   1506c:	bl	10dc0 <gettext@plt>
   15070:	ldr	r3, [fp, #4]
   15074:	ldr	r2, [r3]
   15078:	ldr	r3, [fp, #4]
   1507c:	add	r3, r3, #4
   15080:	ldr	r1, [r3]
   15084:	ldr	r3, [fp, #4]
   15088:	add	r3, r3, #8
   1508c:	ldr	r3, [r3]
   15090:	str	r3, [sp]
   15094:	mov	r3, r1
   15098:	mov	r1, r0
   1509c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150a0:	bl	10dd8 <fprintf@plt>
   150a4:	b	15454 <putchar_unlocked@plt+0x45c8>
   150a8:	ldr	r0, [pc, #984]	; 15488 <putchar_unlocked@plt+0x45fc>
   150ac:	bl	10dc0 <gettext@plt>
   150b0:	mov	ip, r0
   150b4:	ldr	r3, [fp, #4]
   150b8:	ldr	r1, [r3]
   150bc:	ldr	r3, [fp, #4]
   150c0:	add	r3, r3, #4
   150c4:	ldr	r0, [r3]
   150c8:	ldr	r3, [fp, #4]
   150cc:	add	r3, r3, #8
   150d0:	ldr	r3, [r3]
   150d4:	ldr	r2, [fp, #4]
   150d8:	add	r2, r2, #12
   150dc:	ldr	r2, [r2]
   150e0:	str	r2, [sp, #4]
   150e4:	str	r3, [sp]
   150e8:	mov	r3, r0
   150ec:	mov	r2, r1
   150f0:	mov	r1, ip
   150f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   150f8:	bl	10dd8 <fprintf@plt>
   150fc:	b	15454 <putchar_unlocked@plt+0x45c8>
   15100:	ldr	r0, [pc, #900]	; 1548c <putchar_unlocked@plt+0x4600>
   15104:	bl	10dc0 <gettext@plt>
   15108:	mov	lr, r0
   1510c:	ldr	r3, [fp, #4]
   15110:	ldr	r0, [r3]
   15114:	ldr	r3, [fp, #4]
   15118:	add	r3, r3, #4
   1511c:	ldr	ip, [r3]
   15120:	ldr	r3, [fp, #4]
   15124:	add	r3, r3, #8
   15128:	ldr	r3, [r3]
   1512c:	ldr	r2, [fp, #4]
   15130:	add	r2, r2, #12
   15134:	ldr	r2, [r2]
   15138:	ldr	r1, [fp, #4]
   1513c:	add	r1, r1, #16
   15140:	ldr	r1, [r1]
   15144:	str	r1, [sp, #8]
   15148:	str	r2, [sp, #4]
   1514c:	str	r3, [sp]
   15150:	mov	r3, ip
   15154:	mov	r2, r0
   15158:	mov	r1, lr
   1515c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15160:	bl	10dd8 <fprintf@plt>
   15164:	b	15454 <putchar_unlocked@plt+0x45c8>
   15168:	ldr	r0, [pc, #800]	; 15490 <putchar_unlocked@plt+0x4604>
   1516c:	bl	10dc0 <gettext@plt>
   15170:	mov	r4, r0
   15174:	ldr	r3, [fp, #4]
   15178:	ldr	ip, [r3]
   1517c:	ldr	r3, [fp, #4]
   15180:	add	r3, r3, #4
   15184:	ldr	lr, [r3]
   15188:	ldr	r3, [fp, #4]
   1518c:	add	r3, r3, #8
   15190:	ldr	r3, [r3]
   15194:	ldr	r2, [fp, #4]
   15198:	add	r2, r2, #12
   1519c:	ldr	r2, [r2]
   151a0:	ldr	r1, [fp, #4]
   151a4:	add	r1, r1, #16
   151a8:	ldr	r1, [r1]
   151ac:	ldr	r0, [fp, #4]
   151b0:	add	r0, r0, #20
   151b4:	ldr	r0, [r0]
   151b8:	str	r0, [sp, #12]
   151bc:	str	r1, [sp, #8]
   151c0:	str	r2, [sp, #4]
   151c4:	str	r3, [sp]
   151c8:	mov	r3, lr
   151cc:	mov	r2, ip
   151d0:	mov	r1, r4
   151d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   151d8:	bl	10dd8 <fprintf@plt>
   151dc:	b	15454 <putchar_unlocked@plt+0x45c8>
   151e0:	ldr	r0, [pc, #684]	; 15494 <putchar_unlocked@plt+0x4608>
   151e4:	bl	10dc0 <gettext@plt>
   151e8:	mov	r5, r0
   151ec:	ldr	r3, [fp, #4]
   151f0:	ldr	lr, [r3]
   151f4:	ldr	r3, [fp, #4]
   151f8:	add	r3, r3, #4
   151fc:	ldr	r4, [r3]
   15200:	ldr	r3, [fp, #4]
   15204:	add	r3, r3, #8
   15208:	ldr	r3, [r3]
   1520c:	ldr	r2, [fp, #4]
   15210:	add	r2, r2, #12
   15214:	ldr	r2, [r2]
   15218:	ldr	r1, [fp, #4]
   1521c:	add	r1, r1, #16
   15220:	ldr	r1, [r1]
   15224:	ldr	r0, [fp, #4]
   15228:	add	r0, r0, #20
   1522c:	ldr	r0, [r0]
   15230:	ldr	ip, [fp, #4]
   15234:	add	ip, ip, #24
   15238:	ldr	ip, [ip]
   1523c:	str	ip, [sp, #16]
   15240:	str	r0, [sp, #12]
   15244:	str	r1, [sp, #8]
   15248:	str	r2, [sp, #4]
   1524c:	str	r3, [sp]
   15250:	mov	r3, r4
   15254:	mov	r2, lr
   15258:	mov	r1, r5
   1525c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15260:	bl	10dd8 <fprintf@plt>
   15264:	b	15454 <putchar_unlocked@plt+0x45c8>
   15268:	ldr	r0, [pc, #552]	; 15498 <putchar_unlocked@plt+0x460c>
   1526c:	bl	10dc0 <gettext@plt>
   15270:	mov	r6, r0
   15274:	ldr	r3, [fp, #4]
   15278:	ldr	r4, [r3]
   1527c:	ldr	r3, [fp, #4]
   15280:	add	r3, r3, #4
   15284:	ldr	r5, [r3]
   15288:	ldr	r3, [fp, #4]
   1528c:	add	r3, r3, #8
   15290:	ldr	r3, [r3]
   15294:	ldr	r2, [fp, #4]
   15298:	add	r2, r2, #12
   1529c:	ldr	r2, [r2]
   152a0:	ldr	r1, [fp, #4]
   152a4:	add	r1, r1, #16
   152a8:	ldr	r1, [r1]
   152ac:	ldr	r0, [fp, #4]
   152b0:	add	r0, r0, #20
   152b4:	ldr	r0, [r0]
   152b8:	ldr	ip, [fp, #4]
   152bc:	add	ip, ip, #24
   152c0:	ldr	ip, [ip]
   152c4:	ldr	lr, [fp, #4]
   152c8:	add	lr, lr, #28
   152cc:	ldr	lr, [lr]
   152d0:	str	lr, [sp, #20]
   152d4:	str	ip, [sp, #16]
   152d8:	str	r0, [sp, #12]
   152dc:	str	r1, [sp, #8]
   152e0:	str	r2, [sp, #4]
   152e4:	str	r3, [sp]
   152e8:	mov	r3, r5
   152ec:	mov	r2, r4
   152f0:	mov	r1, r6
   152f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   152f8:	bl	10dd8 <fprintf@plt>
   152fc:	b	15454 <putchar_unlocked@plt+0x45c8>
   15300:	ldr	r0, [pc, #404]	; 1549c <putchar_unlocked@plt+0x4610>
   15304:	bl	10dc0 <gettext@plt>
   15308:	mov	r7, r0
   1530c:	ldr	r3, [fp, #4]
   15310:	ldr	r5, [r3]
   15314:	ldr	r3, [fp, #4]
   15318:	add	r3, r3, #4
   1531c:	ldr	r6, [r3]
   15320:	ldr	r3, [fp, #4]
   15324:	add	r3, r3, #8
   15328:	ldr	r3, [r3]
   1532c:	ldr	r2, [fp, #4]
   15330:	add	r2, r2, #12
   15334:	ldr	r2, [r2]
   15338:	ldr	r1, [fp, #4]
   1533c:	add	r1, r1, #16
   15340:	ldr	r1, [r1]
   15344:	ldr	r0, [fp, #4]
   15348:	add	r0, r0, #20
   1534c:	ldr	r0, [r0]
   15350:	ldr	ip, [fp, #4]
   15354:	add	ip, ip, #24
   15358:	ldr	ip, [ip]
   1535c:	ldr	lr, [fp, #4]
   15360:	add	lr, lr, #28
   15364:	ldr	lr, [lr]
   15368:	ldr	r4, [fp, #4]
   1536c:	add	r4, r4, #32
   15370:	ldr	r4, [r4]
   15374:	str	r4, [sp, #24]
   15378:	str	lr, [sp, #20]
   1537c:	str	ip, [sp, #16]
   15380:	str	r0, [sp, #12]
   15384:	str	r1, [sp, #8]
   15388:	str	r2, [sp, #4]
   1538c:	str	r3, [sp]
   15390:	mov	r3, r6
   15394:	mov	r2, r5
   15398:	mov	r1, r7
   1539c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153a0:	bl	10dd8 <fprintf@plt>
   153a4:	b	15454 <putchar_unlocked@plt+0x45c8>
   153a8:	ldr	r0, [pc, #240]	; 154a0 <putchar_unlocked@plt+0x4614>
   153ac:	bl	10dc0 <gettext@plt>
   153b0:	mov	r7, r0
   153b4:	ldr	r3, [fp, #4]
   153b8:	ldr	r5, [r3]
   153bc:	ldr	r3, [fp, #4]
   153c0:	add	r3, r3, #4
   153c4:	ldr	r6, [r3]
   153c8:	ldr	r3, [fp, #4]
   153cc:	add	r3, r3, #8
   153d0:	ldr	r3, [r3]
   153d4:	ldr	r2, [fp, #4]
   153d8:	add	r2, r2, #12
   153dc:	ldr	r2, [r2]
   153e0:	ldr	r1, [fp, #4]
   153e4:	add	r1, r1, #16
   153e8:	ldr	r1, [r1]
   153ec:	ldr	r0, [fp, #4]
   153f0:	add	r0, r0, #20
   153f4:	ldr	r0, [r0]
   153f8:	ldr	ip, [fp, #4]
   153fc:	add	ip, ip, #24
   15400:	ldr	ip, [ip]
   15404:	ldr	lr, [fp, #4]
   15408:	add	lr, lr, #28
   1540c:	ldr	lr, [lr]
   15410:	ldr	r4, [fp, #4]
   15414:	add	r4, r4, #32
   15418:	ldr	r4, [r4]
   1541c:	str	r4, [sp, #24]
   15420:	str	lr, [sp, #20]
   15424:	str	ip, [sp, #16]
   15428:	str	r0, [sp, #12]
   1542c:	str	r1, [sp, #8]
   15430:	str	r2, [sp, #4]
   15434:	str	r3, [sp]
   15438:	mov	r3, r6
   1543c:	mov	r2, r5
   15440:	mov	r1, r7
   15444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15448:	bl	10dd8 <fprintf@plt>
   1544c:	b	15454 <putchar_unlocked@plt+0x45c8>
   15450:	nop			; (mov r0, r0)
   15454:	nop			; (mov r0, r0)
   15458:	sub	sp, fp, #20
   1545c:	pop	{r4, r5, r6, r7, fp, pc}
   15460:	andeq	r7, r1, r0, asr #23
   15464:	andeq	r7, r1, ip, asr #23
   15468:	ldrdeq	r7, [r1], -r4
   1546c:	andeq	r0, r0, r6, ror #15
   15470:	andeq	r7, r1, r4, ror #29
   15474:	ldrdeq	r7, [r1], -r8
   15478:	andeq	r7, r1, r4, lsl #25
   1547c:	andeq	r7, r1, r8, lsr #25
   15480:			; <UNDEFINED> instruction: 0x00017cb8
   15484:	ldrdeq	r7, [r1], -r0
   15488:	andeq	r7, r1, ip, ror #25
   1548c:	andeq	r7, r1, ip, lsl #26
   15490:	andeq	r7, r1, r0, lsr sp
   15494:	andeq	r7, r1, r8, asr sp
   15498:	andeq	r7, r1, r4, lsl #27
   1549c:			; <UNDEFINED> instruction: 0x00017db4
   154a0:	andeq	r7, r1, r8, ror #27
   154a4:	push	{fp, lr}
   154a8:	add	fp, sp, #4
   154ac:	sub	sp, sp, #32
   154b0:	str	r0, [fp, #-16]
   154b4:	str	r1, [fp, #-20]	; 0xffffffec
   154b8:	str	r2, [fp, #-24]	; 0xffffffe8
   154bc:	str	r3, [fp, #-28]	; 0xffffffe4
   154c0:	mov	r3, #0
   154c4:	str	r3, [fp, #-8]
   154c8:	b	154d8 <putchar_unlocked@plt+0x464c>
   154cc:	ldr	r3, [fp, #-8]
   154d0:	add	r3, r3, #1
   154d4:	str	r3, [fp, #-8]
   154d8:	ldr	r3, [fp, #-8]
   154dc:	lsl	r3, r3, #2
   154e0:	ldr	r2, [fp, #4]
   154e4:	add	r3, r2, r3
   154e8:	ldr	r3, [r3]
   154ec:	cmp	r3, #0
   154f0:	bne	154cc <putchar_unlocked@plt+0x4640>
   154f4:	ldr	r3, [fp, #-8]
   154f8:	str	r3, [sp, #4]
   154fc:	ldr	r3, [fp, #4]
   15500:	str	r3, [sp]
   15504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15508:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1550c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15510:	ldr	r0, [fp, #-16]
   15514:	bl	14f34 <putchar_unlocked@plt+0x40a8>
   15518:	nop			; (mov r0, r0)
   1551c:	sub	sp, fp, #4
   15520:	pop	{fp, pc}
   15524:	push	{fp, lr}
   15528:	add	fp, sp, #4
   1552c:	sub	sp, sp, #72	; 0x48
   15530:	str	r0, [fp, #-56]	; 0xffffffc8
   15534:	str	r1, [fp, #-60]	; 0xffffffc4
   15538:	str	r2, [fp, #-64]	; 0xffffffc0
   1553c:	str	r3, [fp, #-68]	; 0xffffffbc
   15540:	mov	r3, #0
   15544:	str	r3, [fp, #-8]
   15548:	b	15558 <putchar_unlocked@plt+0x46cc>
   1554c:	ldr	r3, [fp, #-8]
   15550:	add	r3, r3, #1
   15554:	str	r3, [fp, #-8]
   15558:	ldr	r3, [fp, #-8]
   1555c:	cmp	r3, #9
   15560:	bhi	155a4 <putchar_unlocked@plt+0x4718>
   15564:	ldr	r3, [fp, #4]
   15568:	add	r2, r3, #4
   1556c:	str	r2, [fp, #4]
   15570:	ldr	r2, [r3]
   15574:	ldr	r3, [fp, #-8]
   15578:	lsl	r3, r3, #2
   1557c:	sub	r1, fp, #4
   15580:	add	r3, r1, r3
   15584:	str	r2, [r3, #-44]	; 0xffffffd4
   15588:	ldr	r3, [fp, #-8]
   1558c:	lsl	r3, r3, #2
   15590:	sub	r2, fp, #4
   15594:	add	r3, r2, r3
   15598:	ldr	r3, [r3, #-44]	; 0xffffffd4
   1559c:	cmp	r3, #0
   155a0:	bne	1554c <putchar_unlocked@plt+0x46c0>
   155a4:	ldr	r3, [fp, #-8]
   155a8:	str	r3, [sp, #4]
   155ac:	sub	r3, fp, #48	; 0x30
   155b0:	str	r3, [sp]
   155b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   155b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   155bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   155c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155c4:	bl	14f34 <putchar_unlocked@plt+0x40a8>
   155c8:	nop			; (mov r0, r0)
   155cc:	sub	sp, fp, #4
   155d0:	pop	{fp, pc}
   155d4:	push	{r3}		; (str r3, [sp, #-4]!)
   155d8:	push	{fp, lr}
   155dc:	add	fp, sp, #4
   155e0:	sub	sp, sp, #36	; 0x24
   155e4:	str	r0, [fp, #-20]	; 0xffffffec
   155e8:	str	r1, [fp, #-24]	; 0xffffffe8
   155ec:	str	r2, [fp, #-28]	; 0xffffffe4
   155f0:	add	r3, fp, #8
   155f4:	str	r3, [fp, #-12]
   155f8:	ldr	r3, [fp, #-12]
   155fc:	str	r3, [sp]
   15600:	ldr	r3, [fp, #4]
   15604:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1560c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15610:	bl	15524 <putchar_unlocked@plt+0x4698>
   15614:	nop			; (mov r0, r0)
   15618:	sub	sp, fp, #4
   1561c:	pop	{fp, lr}
   15620:	add	sp, sp, #4
   15624:	bx	lr
   15628:	push	{fp, lr}
   1562c:	add	fp, sp, #4
   15630:	ldr	r3, [pc, #96]	; 15698 <putchar_unlocked@plt+0x480c>
   15634:	ldr	r3, [r3]
   15638:	mov	r1, r3
   1563c:	mov	r0, #10
   15640:	bl	10cdc <fputc_unlocked@plt>
   15644:	ldr	r0, [pc, #80]	; 1569c <putchar_unlocked@plt+0x4810>
   15648:	bl	10dc0 <gettext@plt>
   1564c:	mov	r3, r0
   15650:	ldr	r1, [pc, #72]	; 156a0 <putchar_unlocked@plt+0x4814>
   15654:	mov	r0, r3
   15658:	bl	10c7c <printf@plt>
   1565c:	ldr	r0, [pc, #64]	; 156a4 <putchar_unlocked@plt+0x4818>
   15660:	bl	10dc0 <gettext@plt>
   15664:	mov	r3, r0
   15668:	ldr	r2, [pc, #56]	; 156a8 <putchar_unlocked@plt+0x481c>
   1566c:	ldr	r1, [pc, #56]	; 156ac <putchar_unlocked@plt+0x4820>
   15670:	mov	r0, r3
   15674:	bl	10c7c <printf@plt>
   15678:	ldr	r0, [pc, #48]	; 156b0 <putchar_unlocked@plt+0x4824>
   1567c:	bl	10dc0 <gettext@plt>
   15680:	mov	r3, r0
   15684:	ldr	r1, [pc, #40]	; 156b4 <putchar_unlocked@plt+0x4828>
   15688:	mov	r0, r3
   1568c:	bl	10c7c <printf@plt>
   15690:	nop			; (mov r0, r0)
   15694:	pop	{fp, pc}
   15698:	andeq	r9, r2, ip, asr #2
   1569c:	andeq	r7, r1, r4, lsr #28
   156a0:	andeq	r7, r1, r8, lsr lr
   156a4:	andeq	r7, r1, r0, asr lr
   156a8:	andeq	r7, r1, r4, ror #28
   156ac:	andeq	r7, r1, ip, lsl #29
   156b0:	muleq	r1, ip, lr
   156b4:	andeq	r7, r1, r4, asr #29
   156b8:	push	{fp, lr}
   156bc:	add	fp, sp, #4
   156c0:	sub	sp, sp, #16
   156c4:	str	r0, [fp, #-8]
   156c8:	str	r1, [fp, #-12]
   156cc:	str	r2, [fp, #-16]
   156d0:	ldr	r2, [fp, #-16]
   156d4:	ldr	r1, [fp, #-12]
   156d8:	ldr	r0, [fp, #-8]
   156dc:	bl	15848 <putchar_unlocked@plt+0x49bc>
   156e0:	mov	r3, r0
   156e4:	mov	r0, r3
   156e8:	sub	sp, fp, #4
   156ec:	pop	{fp, pc}
   156f0:	push	{fp, lr}
   156f4:	add	fp, sp, #4
   156f8:	sub	sp, sp, #8
   156fc:	str	r0, [fp, #-8]
   15700:	ldr	r3, [fp, #-8]
   15704:	cmp	r3, #0
   15708:	bne	15710 <putchar_unlocked@plt+0x4884>
   1570c:	bl	1623c <putchar_unlocked@plt+0x53b0>
   15710:	ldr	r3, [fp, #-8]
   15714:	mov	r0, r3
   15718:	sub	sp, fp, #4
   1571c:	pop	{fp, pc}
   15720:	push	{fp, lr}
   15724:	add	fp, sp, #4
   15728:	sub	sp, sp, #8
   1572c:	str	r0, [fp, #-8]
   15730:	ldr	r0, [fp, #-8]
   15734:	bl	1633c <putchar_unlocked@plt+0x54b0>
   15738:	mov	r3, r0
   1573c:	mov	r0, r3
   15740:	bl	156f0 <putchar_unlocked@plt+0x4864>
   15744:	mov	r3, r0
   15748:	mov	r0, r3
   1574c:	sub	sp, fp, #4
   15750:	pop	{fp, pc}
   15754:	push	{fp, lr}
   15758:	add	fp, sp, #4
   1575c:	sub	sp, sp, #8
   15760:	str	r0, [fp, #-8]
   15764:	ldr	r0, [fp, #-8]
   15768:	bl	16648 <putchar_unlocked@plt+0x57bc>
   1576c:	mov	r3, r0
   15770:	mov	r0, r3
   15774:	bl	156f0 <putchar_unlocked@plt+0x4864>
   15778:	mov	r3, r0
   1577c:	mov	r0, r3
   15780:	sub	sp, fp, #4
   15784:	pop	{fp, pc}
   15788:	push	{fp, lr}
   1578c:	add	fp, sp, #4
   15790:	sub	sp, sp, #8
   15794:	str	r0, [fp, #-8]
   15798:	ldr	r0, [fp, #-8]
   1579c:	bl	15720 <putchar_unlocked@plt+0x4894>
   157a0:	mov	r3, r0
   157a4:	mov	r0, r3
   157a8:	sub	sp, fp, #4
   157ac:	pop	{fp, pc}
   157b0:	push	{fp, lr}
   157b4:	add	fp, sp, #4
   157b8:	sub	sp, sp, #16
   157bc:	str	r0, [fp, #-16]
   157c0:	str	r1, [fp, #-20]	; 0xffffffec
   157c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   157c8:	ldr	r0, [fp, #-16]
   157cc:	bl	163e4 <putchar_unlocked@plt+0x5558>
   157d0:	str	r0, [fp, #-8]
   157d4:	ldr	r3, [fp, #-8]
   157d8:	cmp	r3, #0
   157dc:	bne	157fc <putchar_unlocked@plt+0x4970>
   157e0:	ldr	r3, [fp, #-16]
   157e4:	cmp	r3, #0
   157e8:	beq	157f8 <putchar_unlocked@plt+0x496c>
   157ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   157f0:	cmp	r3, #0
   157f4:	beq	157fc <putchar_unlocked@plt+0x4970>
   157f8:	bl	1623c <putchar_unlocked@plt+0x53b0>
   157fc:	ldr	r3, [fp, #-8]
   15800:	mov	r0, r3
   15804:	sub	sp, fp, #4
   15808:	pop	{fp, pc}
   1580c:	push	{fp, lr}
   15810:	add	fp, sp, #4
   15814:	sub	sp, sp, #8
   15818:	str	r0, [fp, #-8]
   1581c:	str	r1, [fp, #-12]
   15820:	ldr	r1, [fp, #-12]
   15824:	ldr	r0, [fp, #-8]
   15828:	bl	16674 <putchar_unlocked@plt+0x57e8>
   1582c:	mov	r3, r0
   15830:	mov	r0, r3
   15834:	bl	156f0 <putchar_unlocked@plt+0x4864>
   15838:	mov	r3, r0
   1583c:	mov	r0, r3
   15840:	sub	sp, fp, #4
   15844:	pop	{fp, pc}
   15848:	push	{fp, lr}
   1584c:	add	fp, sp, #4
   15850:	sub	sp, sp, #24
   15854:	str	r0, [fp, #-16]
   15858:	str	r1, [fp, #-20]	; 0xffffffec
   1585c:	str	r2, [fp, #-24]	; 0xffffffe8
   15860:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15864:	ldr	r1, [fp, #-20]	; 0xffffffec
   15868:	ldr	r0, [fp, #-16]
   1586c:	bl	16868 <putchar_unlocked@plt+0x59dc>
   15870:	str	r0, [fp, #-8]
   15874:	ldr	r3, [fp, #-8]
   15878:	cmp	r3, #0
   1587c:	bne	158a8 <putchar_unlocked@plt+0x4a1c>
   15880:	ldr	r3, [fp, #-16]
   15884:	cmp	r3, #0
   15888:	beq	158a4 <putchar_unlocked@plt+0x4a18>
   1588c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15890:	cmp	r3, #0
   15894:	beq	158a8 <putchar_unlocked@plt+0x4a1c>
   15898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1589c:	cmp	r3, #0
   158a0:	beq	158a8 <putchar_unlocked@plt+0x4a1c>
   158a4:	bl	1623c <putchar_unlocked@plt+0x53b0>
   158a8:	ldr	r3, [fp, #-8]
   158ac:	mov	r0, r3
   158b0:	sub	sp, fp, #4
   158b4:	pop	{fp, pc}
   158b8:	push	{fp, lr}
   158bc:	add	fp, sp, #4
   158c0:	sub	sp, sp, #16
   158c4:	str	r0, [fp, #-8]
   158c8:	str	r1, [fp, #-12]
   158cc:	str	r2, [fp, #-16]
   158d0:	ldr	r2, [fp, #-16]
   158d4:	ldr	r1, [fp, #-12]
   158d8:	ldr	r0, [fp, #-8]
   158dc:	bl	166fc <putchar_unlocked@plt+0x5870>
   158e0:	mov	r3, r0
   158e4:	mov	r0, r3
   158e8:	bl	156f0 <putchar_unlocked@plt+0x4864>
   158ec:	mov	r3, r0
   158f0:	mov	r0, r3
   158f4:	sub	sp, fp, #4
   158f8:	pop	{fp, pc}
   158fc:	push	{fp, lr}
   15900:	add	fp, sp, #4
   15904:	sub	sp, sp, #8
   15908:	str	r0, [fp, #-8]
   1590c:	str	r1, [fp, #-12]
   15910:	ldr	r2, [fp, #-12]
   15914:	ldr	r1, [fp, #-8]
   15918:	mov	r0, #0
   1591c:	bl	15848 <putchar_unlocked@plt+0x49bc>
   15920:	mov	r3, r0
   15924:	mov	r0, r3
   15928:	sub	sp, fp, #4
   1592c:	pop	{fp, pc}
   15930:	push	{fp, lr}
   15934:	add	fp, sp, #4
   15938:	sub	sp, sp, #8
   1593c:	str	r0, [fp, #-8]
   15940:	str	r1, [fp, #-12]
   15944:	ldr	r2, [fp, #-12]
   15948:	ldr	r1, [fp, #-8]
   1594c:	mov	r0, #0
   15950:	bl	158b8 <putchar_unlocked@plt+0x4a2c>
   15954:	mov	r3, r0
   15958:	mov	r0, r3
   1595c:	sub	sp, fp, #4
   15960:	pop	{fp, pc}
   15964:	push	{fp, lr}
   15968:	add	fp, sp, #4
   1596c:	sub	sp, sp, #8
   15970:	str	r0, [fp, #-8]
   15974:	str	r1, [fp, #-12]
   15978:	mov	r2, #1
   1597c:	ldr	r1, [fp, #-12]
   15980:	ldr	r0, [fp, #-8]
   15984:	bl	15998 <putchar_unlocked@plt+0x4b0c>
   15988:	mov	r3, r0
   1598c:	mov	r0, r3
   15990:	sub	sp, fp, #4
   15994:	pop	{fp, pc}
   15998:	push	{fp, lr}
   1599c:	add	fp, sp, #4
   159a0:	sub	sp, sp, #24
   159a4:	str	r0, [fp, #-16]
   159a8:	str	r1, [fp, #-20]	; 0xffffffec
   159ac:	str	r2, [fp, #-24]	; 0xffffffe8
   159b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   159b4:	ldr	r3, [r3]
   159b8:	str	r3, [fp, #-8]
   159bc:	ldr	r3, [fp, #-16]
   159c0:	cmp	r3, #0
   159c4:	bne	15a10 <putchar_unlocked@plt+0x4b84>
   159c8:	ldr	r3, [fp, #-8]
   159cc:	cmp	r3, #0
   159d0:	bne	15a74 <putchar_unlocked@plt+0x4be8>
   159d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159d8:	mov	r0, #64	; 0x40
   159dc:	bl	17010 <putchar_unlocked@plt+0x6184>
   159e0:	mov	r3, r0
   159e4:	str	r3, [fp, #-8]
   159e8:	ldr	r3, [fp, #-8]
   159ec:	cmp	r3, #0
   159f0:	moveq	r3, #1
   159f4:	movne	r3, #0
   159f8:	uxtb	r3, r3
   159fc:	mov	r2, r3
   15a00:	ldr	r3, [fp, #-8]
   15a04:	add	r3, r2, r3
   15a08:	str	r3, [fp, #-8]
   15a0c:	b	15a74 <putchar_unlocked@plt+0x4be8>
   15a10:	ldr	r3, [fp, #-8]
   15a14:	lsr	r3, r3, #1
   15a18:	add	r3, r3, #1
   15a1c:	mvn	r2, r3
   15a20:	ldr	r3, [fp, #-8]
   15a24:	cmp	r2, r3
   15a28:	bcs	15a4c <putchar_unlocked@plt+0x4bc0>
   15a2c:	ldr	r3, [fp, #-8]
   15a30:	lsr	r2, r3, #1
   15a34:	ldr	r3, [fp, #-8]
   15a38:	add	r3, r2, r3
   15a3c:	add	r3, r3, #1
   15a40:	str	r3, [fp, #-8]
   15a44:	mov	r3, #1
   15a48:	b	15a68 <putchar_unlocked@plt+0x4bdc>
   15a4c:	ldr	r3, [fp, #-8]
   15a50:	lsr	r2, r3, #1
   15a54:	ldr	r3, [fp, #-8]
   15a58:	add	r3, r2, r3
   15a5c:	add	r3, r3, #1
   15a60:	str	r3, [fp, #-8]
   15a64:	mov	r3, #0
   15a68:	cmp	r3, #0
   15a6c:	beq	15a74 <putchar_unlocked@plt+0x4be8>
   15a70:	bl	1623c <putchar_unlocked@plt+0x53b0>
   15a74:	ldr	r3, [fp, #-8]
   15a78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a7c:	mov	r1, r3
   15a80:	ldr	r0, [fp, #-16]
   15a84:	bl	15848 <putchar_unlocked@plt+0x49bc>
   15a88:	str	r0, [fp, #-16]
   15a8c:	ldr	r2, [fp, #-8]
   15a90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a94:	str	r2, [r3]
   15a98:	ldr	r3, [fp, #-16]
   15a9c:	mov	r0, r3
   15aa0:	sub	sp, fp, #4
   15aa4:	pop	{fp, pc}
   15aa8:	push	{fp, lr}
   15aac:	add	fp, sp, #4
   15ab0:	sub	sp, sp, #32
   15ab4:	str	r0, [fp, #-24]	; 0xffffffe8
   15ab8:	str	r1, [fp, #-28]	; 0xffffffe4
   15abc:	str	r2, [fp, #-32]	; 0xffffffe0
   15ac0:	str	r3, [fp, #-36]	; 0xffffffdc
   15ac4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ac8:	ldr	r3, [r3]
   15acc:	str	r3, [fp, #-8]
   15ad0:	ldr	r3, [fp, #-8]
   15ad4:	asr	r3, r3, #1
   15ad8:	cmp	r3, #0
   15adc:	bge	15b04 <putchar_unlocked@plt+0x4c78>
   15ae0:	ldr	r3, [fp, #-8]
   15ae4:	asr	r3, r3, #1
   15ae8:	rsb	r2, r3, #-2147483648	; 0x80000000
   15aec:	ldr	r3, [fp, #-8]
   15af0:	cmp	r2, r3
   15af4:	movgt	r3, #1
   15af8:	movle	r3, #0
   15afc:	uxtb	r3, r3
   15b00:	b	15b58 <putchar_unlocked@plt+0x4ccc>
   15b04:	ldr	r3, [fp, #-8]
   15b08:	cmp	r3, #0
   15b0c:	bge	15b34 <putchar_unlocked@plt+0x4ca8>
   15b10:	ldr	r3, [fp, #-8]
   15b14:	asr	r2, r3, #1
   15b18:	ldr	r3, [fp, #-8]
   15b1c:	rsb	r3, r3, #-2147483648	; 0x80000000
   15b20:	cmp	r2, r3
   15b24:	movlt	r3, #1
   15b28:	movge	r3, #0
   15b2c:	uxtb	r3, r3
   15b30:	b	15b58 <putchar_unlocked@plt+0x4ccc>
   15b34:	ldr	r3, [fp, #-8]
   15b38:	asr	r2, r3, #1
   15b3c:	mvn	r3, #-2147483648	; 0x80000000
   15b40:	sub	r3, r3, r2
   15b44:	ldr	r2, [fp, #-8]
   15b48:	cmp	r3, r2
   15b4c:	movlt	r3, #1
   15b50:	movge	r3, #0
   15b54:	uxtb	r3, r3
   15b58:	cmp	r3, #0
   15b5c:	beq	15b80 <putchar_unlocked@plt+0x4cf4>
   15b60:	ldr	r3, [fp, #-8]
   15b64:	asr	r3, r3, #1
   15b68:	mov	r2, r3
   15b6c:	ldr	r3, [fp, #-8]
   15b70:	add	r3, r2, r3
   15b74:	str	r3, [fp, #-16]
   15b78:	mov	r3, #1
   15b7c:	b	15b9c <putchar_unlocked@plt+0x4d10>
   15b80:	ldr	r3, [fp, #-8]
   15b84:	asr	r3, r3, #1
   15b88:	mov	r2, r3
   15b8c:	ldr	r3, [fp, #-8]
   15b90:	add	r3, r2, r3
   15b94:	str	r3, [fp, #-16]
   15b98:	mov	r3, #0
   15b9c:	cmp	r3, #0
   15ba0:	beq	15bac <putchar_unlocked@plt+0x4d20>
   15ba4:	mvn	r3, #-2147483648	; 0x80000000
   15ba8:	str	r3, [fp, #-16]
   15bac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15bb0:	cmp	r3, #0
   15bb4:	blt	15bd0 <putchar_unlocked@plt+0x4d44>
   15bb8:	ldr	r3, [fp, #-16]
   15bbc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15bc0:	cmp	r2, r3
   15bc4:	bge	15bd0 <putchar_unlocked@plt+0x4d44>
   15bc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15bcc:	str	r3, [fp, #-16]
   15bd0:	ldr	r3, [fp, #4]
   15bd4:	cmp	r3, #0
   15bd8:	bge	15c68 <putchar_unlocked@plt+0x4ddc>
   15bdc:	ldr	r3, [fp, #-16]
   15be0:	cmp	r3, #0
   15be4:	bge	15c14 <putchar_unlocked@plt+0x4d88>
   15be8:	ldr	r1, [fp, #4]
   15bec:	mvn	r0, #-2147483648	; 0x80000000
   15bf0:	bl	1721c <putchar_unlocked@plt+0x6390>
   15bf4:	mov	r3, r0
   15bf8:	mov	r2, r3
   15bfc:	ldr	r3, [fp, #-16]
   15c00:	cmp	r2, r3
   15c04:	movgt	r3, #1
   15c08:	movle	r3, #0
   15c0c:	uxtb	r3, r3
   15c10:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15c14:	ldr	r3, [fp, #4]
   15c18:	cmn	r3, #1
   15c1c:	bne	15c3c <putchar_unlocked@plt+0x4db0>
   15c20:	ldr	r3, [fp, #-16]
   15c24:	add	r3, r3, #-2147483648	; 0x80000000
   15c28:	cmp	r3, #0
   15c2c:	movgt	r3, #1
   15c30:	movle	r3, #0
   15c34:	uxtb	r3, r3
   15c38:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15c3c:	ldr	r1, [fp, #4]
   15c40:	mov	r0, #-2147483648	; 0x80000000
   15c44:	bl	1721c <putchar_unlocked@plt+0x6390>
   15c48:	mov	r3, r0
   15c4c:	mov	r2, r3
   15c50:	ldr	r3, [fp, #-16]
   15c54:	cmp	r2, r3
   15c58:	movlt	r3, #1
   15c5c:	movge	r3, #0
   15c60:	uxtb	r3, r3
   15c64:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15c68:	ldr	r3, [fp, #4]
   15c6c:	cmp	r3, #0
   15c70:	beq	15d04 <putchar_unlocked@plt+0x4e78>
   15c74:	ldr	r3, [fp, #-16]
   15c78:	cmp	r3, #0
   15c7c:	bge	15cd8 <putchar_unlocked@plt+0x4e4c>
   15c80:	ldr	r3, [fp, #-16]
   15c84:	cmn	r3, #1
   15c88:	bne	15ca8 <putchar_unlocked@plt+0x4e1c>
   15c8c:	ldr	r3, [fp, #4]
   15c90:	add	r3, r3, #-2147483648	; 0x80000000
   15c94:	cmp	r3, #0
   15c98:	movgt	r3, #1
   15c9c:	movle	r3, #0
   15ca0:	uxtb	r3, r3
   15ca4:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15ca8:	ldr	r3, [fp, #-16]
   15cac:	mov	r1, r3
   15cb0:	mov	r0, #-2147483648	; 0x80000000
   15cb4:	bl	1721c <putchar_unlocked@plt+0x6390>
   15cb8:	mov	r3, r0
   15cbc:	mov	r2, r3
   15cc0:	ldr	r3, [fp, #4]
   15cc4:	cmp	r2, r3
   15cc8:	movlt	r3, #1
   15ccc:	movge	r3, #0
   15cd0:	uxtb	r3, r3
   15cd4:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15cd8:	ldr	r1, [fp, #4]
   15cdc:	mvn	r0, #-2147483648	; 0x80000000
   15ce0:	bl	1721c <putchar_unlocked@plt+0x6390>
   15ce4:	mov	r3, r0
   15ce8:	mov	r2, r3
   15cec:	ldr	r3, [fp, #-16]
   15cf0:	cmp	r2, r3
   15cf4:	movlt	r3, #1
   15cf8:	movge	r3, #0
   15cfc:	uxtb	r3, r3
   15d00:	b	15d08 <putchar_unlocked@plt+0x4e7c>
   15d04:	mov	r3, #0
   15d08:	cmp	r3, #0
   15d0c:	beq	15d2c <putchar_unlocked@plt+0x4ea0>
   15d10:	ldr	r3, [fp, #-16]
   15d14:	mov	r2, r3
   15d18:	ldr	r3, [fp, #4]
   15d1c:	mul	r3, r3, r2
   15d20:	str	r3, [fp, #-20]	; 0xffffffec
   15d24:	mov	r3, #1
   15d28:	b	15d44 <putchar_unlocked@plt+0x4eb8>
   15d2c:	ldr	r3, [fp, #-16]
   15d30:	mov	r2, r3
   15d34:	ldr	r3, [fp, #4]
   15d38:	mul	r3, r3, r2
   15d3c:	str	r3, [fp, #-20]	; 0xffffffec
   15d40:	mov	r3, #0
   15d44:	cmp	r3, #0
   15d48:	beq	15d54 <putchar_unlocked@plt+0x4ec8>
   15d4c:	mvn	r3, #-2147483648	; 0x80000000
   15d50:	b	15d6c <putchar_unlocked@plt+0x4ee0>
   15d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d58:	cmp	r3, #63	; 0x3f
   15d5c:	bgt	15d68 <putchar_unlocked@plt+0x4edc>
   15d60:	mov	r3, #64	; 0x40
   15d64:	b	15d6c <putchar_unlocked@plt+0x4ee0>
   15d68:	mov	r3, #0
   15d6c:	str	r3, [fp, #-12]
   15d70:	ldr	r3, [fp, #-12]
   15d74:	cmp	r3, #0
   15d78:	beq	15db4 <putchar_unlocked@plt+0x4f28>
   15d7c:	ldr	r1, [fp, #4]
   15d80:	ldr	r0, [fp, #-12]
   15d84:	bl	1721c <putchar_unlocked@plt+0x6390>
   15d88:	mov	r3, r0
   15d8c:	str	r3, [fp, #-16]
   15d90:	ldr	r3, [fp, #-12]
   15d94:	ldr	r1, [fp, #4]
   15d98:	mov	r0, r3
   15d9c:	bl	1743c <putchar_unlocked@plt+0x65b0>
   15da0:	mov	r3, r1
   15da4:	mov	r2, r3
   15da8:	ldr	r3, [fp, #-12]
   15dac:	sub	r3, r3, r2
   15db0:	str	r3, [fp, #-20]	; 0xffffffec
   15db4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15db8:	cmp	r3, #0
   15dbc:	bne	15dcc <putchar_unlocked@plt+0x4f40>
   15dc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15dc4:	mov	r2, #0
   15dc8:	str	r2, [r3]
   15dcc:	ldr	r2, [fp, #-16]
   15dd0:	ldr	r3, [fp, #-8]
   15dd4:	sub	r2, r2, r3
   15dd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ddc:	cmp	r2, r3
   15de0:	bge	16018 <putchar_unlocked@plt+0x518c>
   15de4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15de8:	cmp	r3, #0
   15dec:	bge	15e10 <putchar_unlocked@plt+0x4f84>
   15df0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15df4:	rsb	r2, r3, #-2147483648	; 0x80000000
   15df8:	ldr	r3, [fp, #-8]
   15dfc:	cmp	r2, r3
   15e00:	movgt	r3, #1
   15e04:	movle	r3, #0
   15e08:	uxtb	r3, r3
   15e0c:	b	15e5c <putchar_unlocked@plt+0x4fd0>
   15e10:	ldr	r3, [fp, #-8]
   15e14:	cmp	r3, #0
   15e18:	bge	15e3c <putchar_unlocked@plt+0x4fb0>
   15e1c:	ldr	r3, [fp, #-8]
   15e20:	rsb	r2, r3, #-2147483648	; 0x80000000
   15e24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e28:	cmp	r2, r3
   15e2c:	movgt	r3, #1
   15e30:	movle	r3, #0
   15e34:	uxtb	r3, r3
   15e38:	b	15e5c <putchar_unlocked@plt+0x4fd0>
   15e3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15e40:	mvn	r3, #-2147483648	; 0x80000000
   15e44:	sub	r3, r3, r2
   15e48:	ldr	r2, [fp, #-8]
   15e4c:	cmp	r3, r2
   15e50:	movlt	r3, #1
   15e54:	movge	r3, #0
   15e58:	uxtb	r3, r3
   15e5c:	cmp	r3, #0
   15e60:	beq	15e78 <putchar_unlocked@plt+0x4fec>
   15e64:	ldr	r2, [fp, #-8]
   15e68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e6c:	add	r3, r2, r3
   15e70:	str	r3, [fp, #-16]
   15e74:	b	16014 <putchar_unlocked@plt+0x5188>
   15e78:	ldr	r2, [fp, #-8]
   15e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e80:	add	r3, r2, r3
   15e84:	str	r3, [fp, #-16]
   15e88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e8c:	cmp	r3, #0
   15e90:	blt	15ea4 <putchar_unlocked@plt+0x5018>
   15e94:	ldr	r3, [fp, #-16]
   15e98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15e9c:	cmp	r2, r3
   15ea0:	blt	16014 <putchar_unlocked@plt+0x5188>
   15ea4:	ldr	r3, [fp, #4]
   15ea8:	cmp	r3, #0
   15eac:	bge	15f3c <putchar_unlocked@plt+0x50b0>
   15eb0:	ldr	r3, [fp, #-16]
   15eb4:	cmp	r3, #0
   15eb8:	bge	15ee8 <putchar_unlocked@plt+0x505c>
   15ebc:	ldr	r1, [fp, #4]
   15ec0:	mvn	r0, #-2147483648	; 0x80000000
   15ec4:	bl	1721c <putchar_unlocked@plt+0x6390>
   15ec8:	mov	r3, r0
   15ecc:	mov	r2, r3
   15ed0:	ldr	r3, [fp, #-16]
   15ed4:	cmp	r2, r3
   15ed8:	movgt	r3, #1
   15edc:	movle	r3, #0
   15ee0:	uxtb	r3, r3
   15ee4:	b	15fdc <putchar_unlocked@plt+0x5150>
   15ee8:	ldr	r3, [fp, #4]
   15eec:	cmn	r3, #1
   15ef0:	bne	15f10 <putchar_unlocked@plt+0x5084>
   15ef4:	ldr	r3, [fp, #-16]
   15ef8:	add	r3, r3, #-2147483648	; 0x80000000
   15efc:	cmp	r3, #0
   15f00:	movgt	r3, #1
   15f04:	movle	r3, #0
   15f08:	uxtb	r3, r3
   15f0c:	b	15fdc <putchar_unlocked@plt+0x5150>
   15f10:	ldr	r1, [fp, #4]
   15f14:	mov	r0, #-2147483648	; 0x80000000
   15f18:	bl	1721c <putchar_unlocked@plt+0x6390>
   15f1c:	mov	r3, r0
   15f20:	mov	r2, r3
   15f24:	ldr	r3, [fp, #-16]
   15f28:	cmp	r2, r3
   15f2c:	movlt	r3, #1
   15f30:	movge	r3, #0
   15f34:	uxtb	r3, r3
   15f38:	b	15fdc <putchar_unlocked@plt+0x5150>
   15f3c:	ldr	r3, [fp, #4]
   15f40:	cmp	r3, #0
   15f44:	beq	15fd8 <putchar_unlocked@plt+0x514c>
   15f48:	ldr	r3, [fp, #-16]
   15f4c:	cmp	r3, #0
   15f50:	bge	15fac <putchar_unlocked@plt+0x5120>
   15f54:	ldr	r3, [fp, #-16]
   15f58:	cmn	r3, #1
   15f5c:	bne	15f7c <putchar_unlocked@plt+0x50f0>
   15f60:	ldr	r3, [fp, #4]
   15f64:	add	r3, r3, #-2147483648	; 0x80000000
   15f68:	cmp	r3, #0
   15f6c:	movgt	r3, #1
   15f70:	movle	r3, #0
   15f74:	uxtb	r3, r3
   15f78:	b	15fdc <putchar_unlocked@plt+0x5150>
   15f7c:	ldr	r3, [fp, #-16]
   15f80:	mov	r1, r3
   15f84:	mov	r0, #-2147483648	; 0x80000000
   15f88:	bl	1721c <putchar_unlocked@plt+0x6390>
   15f8c:	mov	r3, r0
   15f90:	mov	r2, r3
   15f94:	ldr	r3, [fp, #4]
   15f98:	cmp	r2, r3
   15f9c:	movlt	r3, #1
   15fa0:	movge	r3, #0
   15fa4:	uxtb	r3, r3
   15fa8:	b	15fdc <putchar_unlocked@plt+0x5150>
   15fac:	ldr	r1, [fp, #4]
   15fb0:	mvn	r0, #-2147483648	; 0x80000000
   15fb4:	bl	1721c <putchar_unlocked@plt+0x6390>
   15fb8:	mov	r3, r0
   15fbc:	mov	r2, r3
   15fc0:	ldr	r3, [fp, #-16]
   15fc4:	cmp	r2, r3
   15fc8:	movlt	r3, #1
   15fcc:	movge	r3, #0
   15fd0:	uxtb	r3, r3
   15fd4:	b	15fdc <putchar_unlocked@plt+0x5150>
   15fd8:	mov	r3, #0
   15fdc:	cmp	r3, #0
   15fe0:	beq	15ffc <putchar_unlocked@plt+0x5170>
   15fe4:	ldr	r3, [fp, #-16]
   15fe8:	mov	r2, r3
   15fec:	ldr	r3, [fp, #4]
   15ff0:	mul	r3, r3, r2
   15ff4:	str	r3, [fp, #-20]	; 0xffffffec
   15ff8:	b	16014 <putchar_unlocked@plt+0x5188>
   15ffc:	ldr	r3, [fp, #-16]
   16000:	mov	r2, r3
   16004:	ldr	r3, [fp, #4]
   16008:	mul	r3, r3, r2
   1600c:	str	r3, [fp, #-20]	; 0xffffffec
   16010:	b	16018 <putchar_unlocked@plt+0x518c>
   16014:	bl	1623c <putchar_unlocked@plt+0x53b0>
   16018:	ldr	r3, [fp, #-20]	; 0xffffffec
   1601c:	mov	r1, r3
   16020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16024:	bl	157b0 <putchar_unlocked@plt+0x4924>
   16028:	str	r0, [fp, #-24]	; 0xffffffe8
   1602c:	ldr	r2, [fp, #-16]
   16030:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16034:	str	r2, [r3]
   16038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1603c:	mov	r0, r3
   16040:	sub	sp, fp, #4
   16044:	pop	{fp, pc}
   16048:	push	{fp, lr}
   1604c:	add	fp, sp, #4
   16050:	sub	sp, sp, #8
   16054:	str	r0, [fp, #-8]
   16058:	mov	r1, #1
   1605c:	ldr	r0, [fp, #-8]
   16060:	bl	160a0 <putchar_unlocked@plt+0x5214>
   16064:	mov	r3, r0
   16068:	mov	r0, r3
   1606c:	sub	sp, fp, #4
   16070:	pop	{fp, pc}
   16074:	push	{fp, lr}
   16078:	add	fp, sp, #4
   1607c:	sub	sp, sp, #8
   16080:	str	r0, [fp, #-8]
   16084:	mov	r1, #1
   16088:	ldr	r0, [fp, #-8]
   1608c:	bl	160dc <putchar_unlocked@plt+0x5250>
   16090:	mov	r3, r0
   16094:	mov	r0, r3
   16098:	sub	sp, fp, #4
   1609c:	pop	{fp, pc}
   160a0:	push	{fp, lr}
   160a4:	add	fp, sp, #4
   160a8:	sub	sp, sp, #8
   160ac:	str	r0, [fp, #-8]
   160b0:	str	r1, [fp, #-12]
   160b4:	ldr	r1, [fp, #-12]
   160b8:	ldr	r0, [fp, #-8]
   160bc:	bl	16278 <putchar_unlocked@plt+0x53ec>
   160c0:	mov	r3, r0
   160c4:	mov	r0, r3
   160c8:	bl	156f0 <putchar_unlocked@plt+0x4864>
   160cc:	mov	r3, r0
   160d0:	mov	r0, r3
   160d4:	sub	sp, fp, #4
   160d8:	pop	{fp, pc}
   160dc:	push	{fp, lr}
   160e0:	add	fp, sp, #4
   160e4:	sub	sp, sp, #8
   160e8:	str	r0, [fp, #-8]
   160ec:	str	r1, [fp, #-12]
   160f0:	ldr	r1, [fp, #-12]
   160f4:	ldr	r0, [fp, #-8]
   160f8:	bl	166c4 <putchar_unlocked@plt+0x5838>
   160fc:	mov	r3, r0
   16100:	mov	r0, r3
   16104:	bl	156f0 <putchar_unlocked@plt+0x4864>
   16108:	mov	r3, r0
   1610c:	mov	r0, r3
   16110:	sub	sp, fp, #4
   16114:	pop	{fp, pc}
   16118:	push	{fp, lr}
   1611c:	add	fp, sp, #4
   16120:	sub	sp, sp, #8
   16124:	str	r0, [fp, #-8]
   16128:	str	r1, [fp, #-12]
   1612c:	ldr	r0, [fp, #-12]
   16130:	bl	15720 <putchar_unlocked@plt+0x4894>
   16134:	mov	r3, r0
   16138:	ldr	r2, [fp, #-12]
   1613c:	ldr	r1, [fp, #-8]
   16140:	mov	r0, r3
   16144:	bl	10cac <memcpy@plt>
   16148:	mov	r3, r0
   1614c:	mov	r0, r3
   16150:	sub	sp, fp, #4
   16154:	pop	{fp, pc}
   16158:	push	{fp, lr}
   1615c:	add	fp, sp, #4
   16160:	sub	sp, sp, #8
   16164:	str	r0, [fp, #-8]
   16168:	str	r1, [fp, #-12]
   1616c:	ldr	r0, [fp, #-12]
   16170:	bl	15754 <putchar_unlocked@plt+0x48c8>
   16174:	mov	r3, r0
   16178:	mov	r0, r3
   1617c:	ldr	r3, [fp, #-12]
   16180:	mov	r2, r3
   16184:	ldr	r1, [fp, #-8]
   16188:	bl	10cac <memcpy@plt>
   1618c:	mov	r3, r0
   16190:	mov	r0, r3
   16194:	sub	sp, fp, #4
   16198:	pop	{fp, pc}
   1619c:	push	{fp, lr}
   161a0:	add	fp, sp, #4
   161a4:	sub	sp, sp, #16
   161a8:	str	r0, [fp, #-16]
   161ac:	str	r1, [fp, #-20]	; 0xffffffec
   161b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   161b4:	add	r3, r3, #1
   161b8:	mov	r0, r3
   161bc:	bl	15754 <putchar_unlocked@plt+0x48c8>
   161c0:	mov	r3, r0
   161c4:	str	r3, [fp, #-8]
   161c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   161cc:	ldr	r2, [fp, #-8]
   161d0:	add	r3, r2, r3
   161d4:	mov	r2, #0
   161d8:	strb	r2, [r3]
   161dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   161e0:	mov	r2, r3
   161e4:	ldr	r1, [fp, #-16]
   161e8:	ldr	r0, [fp, #-8]
   161ec:	bl	10cac <memcpy@plt>
   161f0:	mov	r3, r0
   161f4:	mov	r0, r3
   161f8:	sub	sp, fp, #4
   161fc:	pop	{fp, pc}
   16200:	push	{fp, lr}
   16204:	add	fp, sp, #4
   16208:	sub	sp, sp, #8
   1620c:	str	r0, [fp, #-8]
   16210:	ldr	r0, [fp, #-8]
   16214:	bl	10dcc <strlen@plt>
   16218:	mov	r3, r0
   1621c:	add	r3, r3, #1
   16220:	mov	r1, r3
   16224:	ldr	r0, [fp, #-8]
   16228:	bl	16118 <putchar_unlocked@plt+0x528c>
   1622c:	mov	r3, r0
   16230:	mov	r0, r3
   16234:	sub	sp, fp, #4
   16238:	pop	{fp, pc}
   1623c:	push	{r4, r5, fp, lr}
   16240:	add	fp, sp, #12
   16244:	ldr	r3, [pc, #32]	; 1626c <putchar_unlocked@plt+0x53e0>
   16248:	ldr	r4, [r3]
   1624c:	ldr	r0, [pc, #28]	; 16270 <putchar_unlocked@plt+0x53e4>
   16250:	bl	10dc0 <gettext@plt>
   16254:	mov	r3, r0
   16258:	ldr	r2, [pc, #20]	; 16274 <putchar_unlocked@plt+0x53e8>
   1625c:	mov	r1, #0
   16260:	mov	r0, r4
   16264:	bl	10d60 <error@plt>
   16268:	bl	10e80 <abort@plt>
   1626c:	andeq	r9, r2, r8, ror #1
   16270:	andeq	r7, r1, r4, lsl pc
   16274:	andeq	r7, r1, r8, lsr #30
   16278:	push	{r4, r5, fp, lr}
   1627c:	add	fp, sp, #12
   16280:	sub	sp, sp, #16
   16284:	str	r0, [fp, #-24]	; 0xffffffe8
   16288:	str	r1, [fp, #-28]	; 0xffffffe4
   1628c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16290:	cmp	r3, #0
   16294:	beq	162a4 <putchar_unlocked@plt+0x5418>
   16298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1629c:	cmp	r3, #0
   162a0:	bne	162b4 <putchar_unlocked@plt+0x5428>
   162a4:	mov	r3, #1
   162a8:	str	r3, [fp, #-28]	; 0xffffffe4
   162ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162b0:	str	r3, [fp, #-24]	; 0xffffffe8
   162b4:	mov	r1, #0
   162b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162c0:	umull	r2, r3, r2, r3
   162c4:	mov	r4, r3
   162c8:	mov	r5, #0
   162cc:	cmp	r4, #0
   162d0:	beq	162d8 <putchar_unlocked@plt+0x544c>
   162d4:	mov	r1, #1
   162d8:	cmp	r2, #0
   162dc:	bge	162e4 <putchar_unlocked@plt+0x5458>
   162e0:	mov	r1, #1
   162e4:	mov	r3, r2
   162e8:	str	r3, [fp, #-20]	; 0xffffffec
   162ec:	mov	r3, r1
   162f0:	and	r3, r3, #1
   162f4:	uxtb	r3, r3
   162f8:	cmp	r3, #0
   162fc:	beq	16318 <putchar_unlocked@plt+0x548c>
   16300:	bl	10de4 <__errno_location@plt>
   16304:	mov	r2, r0
   16308:	mov	r3, #12
   1630c:	str	r3, [r2]
   16310:	mov	r3, #0
   16314:	b	16330 <putchar_unlocked@plt+0x54a4>
   16318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1631c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16320:	bl	10c40 <calloc@plt>
   16324:	mov	r3, r0
   16328:	str	r3, [fp, #-16]
   1632c:	ldr	r3, [fp, #-16]
   16330:	mov	r0, r3
   16334:	sub	sp, fp, #12
   16338:	pop	{r4, r5, fp, pc}
   1633c:	push	{r4, r5, fp, lr}
   16340:	add	fp, sp, #12
   16344:	sub	sp, sp, #16
   16348:	str	r0, [fp, #-24]	; 0xffffffe8
   1634c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16350:	cmp	r3, #0
   16354:	bne	16360 <putchar_unlocked@plt+0x54d4>
   16358:	mov	r3, #1
   1635c:	str	r3, [fp, #-24]	; 0xffffffe8
   16360:	mov	r1, #0
   16364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16368:	mov	r2, r3
   1636c:	mov	r3, #0
   16370:	mov	r4, r3
   16374:	mov	r5, #0
   16378:	cmp	r4, #0
   1637c:	beq	16384 <putchar_unlocked@plt+0x54f8>
   16380:	mov	r1, #1
   16384:	cmp	r2, #0
   16388:	bge	16390 <putchar_unlocked@plt+0x5504>
   1638c:	mov	r1, #1
   16390:	mov	r3, r2
   16394:	str	r3, [fp, #-20]	; 0xffffffec
   16398:	mov	r3, r1
   1639c:	and	r3, r3, #1
   163a0:	uxtb	r3, r3
   163a4:	cmp	r3, #0
   163a8:	beq	163c4 <putchar_unlocked@plt+0x5538>
   163ac:	bl	10de4 <__errno_location@plt>
   163b0:	mov	r2, r0
   163b4:	mov	r3, #12
   163b8:	str	r3, [r2]
   163bc:	mov	r3, #0
   163c0:	b	163d8 <putchar_unlocked@plt+0x554c>
   163c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163c8:	bl	10d6c <malloc@plt>
   163cc:	mov	r3, r0
   163d0:	str	r3, [fp, #-16]
   163d4:	ldr	r3, [fp, #-16]
   163d8:	mov	r0, r3
   163dc:	sub	sp, fp, #12
   163e0:	pop	{r4, r5, fp, pc}
   163e4:	push	{r4, r5, fp, lr}
   163e8:	add	fp, sp, #12
   163ec:	sub	sp, sp, #16
   163f0:	str	r0, [fp, #-24]	; 0xffffffe8
   163f4:	str	r1, [fp, #-28]	; 0xffffffe4
   163f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163fc:	cmp	r3, #0
   16400:	bne	16414 <putchar_unlocked@plt+0x5588>
   16404:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16408:	bl	1633c <putchar_unlocked@plt+0x54b0>
   1640c:	mov	r3, r0
   16410:	b	164a8 <putchar_unlocked@plt+0x561c>
   16414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16418:	cmp	r3, #0
   1641c:	bne	16430 <putchar_unlocked@plt+0x55a4>
   16420:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16424:	bl	12668 <putchar_unlocked@plt+0x17dc>
   16428:	mov	r3, #0
   1642c:	b	164a8 <putchar_unlocked@plt+0x561c>
   16430:	mov	r1, #0
   16434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16438:	mov	r2, r3
   1643c:	mov	r3, #0
   16440:	mov	r4, r3
   16444:	mov	r5, #0
   16448:	cmp	r4, #0
   1644c:	beq	16454 <putchar_unlocked@plt+0x55c8>
   16450:	mov	r1, #1
   16454:	cmp	r2, #0
   16458:	bge	16460 <putchar_unlocked@plt+0x55d4>
   1645c:	mov	r1, #1
   16460:	mov	r3, r2
   16464:	str	r3, [fp, #-20]	; 0xffffffec
   16468:	mov	r3, r1
   1646c:	and	r3, r3, #1
   16470:	uxtb	r3, r3
   16474:	cmp	r3, #0
   16478:	beq	16494 <putchar_unlocked@plt+0x5608>
   1647c:	bl	10de4 <__errno_location@plt>
   16480:	mov	r2, r0
   16484:	mov	r3, #12
   16488:	str	r3, [r2]
   1648c:	mov	r3, #0
   16490:	b	164a8 <putchar_unlocked@plt+0x561c>
   16494:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1649c:	bl	10cf4 <realloc@plt>
   164a0:	str	r0, [fp, #-16]
   164a4:	ldr	r3, [fp, #-16]
   164a8:	mov	r0, r3
   164ac:	sub	sp, fp, #12
   164b0:	pop	{r4, r5, fp, pc}
   164b4:	push	{r4, r5, fp, lr}
   164b8:	add	fp, sp, #12
   164bc:	sub	sp, sp, #16
   164c0:	str	r0, [fp, #-24]	; 0xffffffe8
   164c4:	str	r1, [fp, #-28]	; 0xffffffe4
   164c8:	ldr	r5, [fp, #-24]	; 0xffffffe8
   164cc:	ldr	r4, [fp, #-28]	; 0xffffffe4
   164d0:	cmp	r5, r4
   164d4:	bne	164e0 <putchar_unlocked@plt+0x5654>
   164d8:	mov	r3, #0
   164dc:	b	16540 <putchar_unlocked@plt+0x56b4>
   164e0:	ldrb	r3, [r5]
   164e4:	mov	r0, r3
   164e8:	bl	16d8c <putchar_unlocked@plt+0x5f00>
   164ec:	mov	r3, r0
   164f0:	strb	r3, [fp, #-13]
   164f4:	ldrb	r3, [r4]
   164f8:	mov	r0, r3
   164fc:	bl	16d8c <putchar_unlocked@plt+0x5f00>
   16500:	mov	r3, r0
   16504:	strb	r3, [fp, #-14]
   16508:	ldrb	r3, [fp, #-13]
   1650c:	cmp	r3, #0
   16510:	beq	16530 <putchar_unlocked@plt+0x56a4>
   16514:	add	r5, r5, #1
   16518:	add	r4, r4, #1
   1651c:	ldrb	r2, [fp, #-13]
   16520:	ldrb	r3, [fp, #-14]
   16524:	cmp	r2, r3
   16528:	beq	164e0 <putchar_unlocked@plt+0x5654>
   1652c:	b	16534 <putchar_unlocked@plt+0x56a8>
   16530:	nop			; (mov r0, r0)
   16534:	ldrb	r2, [fp, #-13]
   16538:	ldrb	r3, [fp, #-14]
   1653c:	sub	r3, r2, r3
   16540:	mov	r0, r3
   16544:	sub	sp, fp, #12
   16548:	pop	{r4, r5, fp, pc}
   1654c:	push	{fp, lr}
   16550:	add	fp, sp, #4
   16554:	sub	sp, sp, #16
   16558:	str	r0, [fp, #-16]
   1655c:	ldr	r0, [fp, #-16]
   16560:	bl	10d3c <__fpending@plt>
   16564:	mov	r3, r0
   16568:	cmp	r3, #0
   1656c:	movne	r3, #1
   16570:	moveq	r3, #0
   16574:	strb	r3, [fp, #-5]
   16578:	ldr	r0, [fp, #-16]
   1657c:	bl	10d48 <ferror_unlocked@plt>
   16580:	mov	r3, r0
   16584:	cmp	r3, #0
   16588:	movne	r3, #1
   1658c:	moveq	r3, #0
   16590:	strb	r3, [fp, #-6]
   16594:	ldr	r0, [fp, #-16]
   16598:	bl	124c8 <putchar_unlocked@plt+0x163c>
   1659c:	mov	r3, r0
   165a0:	cmp	r3, #0
   165a4:	movne	r3, #1
   165a8:	moveq	r3, #0
   165ac:	strb	r3, [fp, #-7]
   165b0:	ldrb	r3, [fp, #-6]
   165b4:	cmp	r3, #0
   165b8:	bne	165e8 <putchar_unlocked@plt+0x575c>
   165bc:	ldrb	r3, [fp, #-7]
   165c0:	cmp	r3, #0
   165c4:	beq	16614 <putchar_unlocked@plt+0x5788>
   165c8:	ldrb	r3, [fp, #-5]
   165cc:	cmp	r3, #0
   165d0:	bne	165e8 <putchar_unlocked@plt+0x575c>
   165d4:	bl	10de4 <__errno_location@plt>
   165d8:	mov	r3, r0
   165dc:	ldr	r3, [r3]
   165e0:	cmp	r3, #9
   165e4:	beq	16614 <putchar_unlocked@plt+0x5788>
   165e8:	ldrb	r3, [fp, #-7]
   165ec:	eor	r3, r3, #1
   165f0:	uxtb	r3, r3
   165f4:	cmp	r3, #0
   165f8:	beq	1660c <putchar_unlocked@plt+0x5780>
   165fc:	bl	10de4 <__errno_location@plt>
   16600:	mov	r2, r0
   16604:	mov	r3, #0
   16608:	str	r3, [r2]
   1660c:	mvn	r3, #0
   16610:	b	16618 <putchar_unlocked@plt+0x578c>
   16614:	mov	r3, #0
   16618:	mov	r0, r3
   1661c:	sub	sp, fp, #4
   16620:	pop	{fp, pc}
   16624:	push	{fp, lr}
   16628:	add	fp, sp, #4
   1662c:	bl	10de4 <__errno_location@plt>
   16630:	mov	r2, r0
   16634:	mov	r3, #12
   16638:	str	r3, [r2]
   1663c:	mov	r3, #0
   16640:	mov	r0, r3
   16644:	pop	{fp, pc}
   16648:	push	{fp, lr}
   1664c:	add	fp, sp, #4
   16650:	sub	sp, sp, #8
   16654:	str	r0, [fp, #-8]
   16658:	ldr	r3, [fp, #-8]
   1665c:	mov	r0, r3
   16660:	bl	1633c <putchar_unlocked@plt+0x54b0>
   16664:	mov	r3, r0
   16668:	mov	r0, r3
   1666c:	sub	sp, fp, #4
   16670:	pop	{fp, pc}
   16674:	push	{fp, lr}
   16678:	add	fp, sp, #4
   1667c:	sub	sp, sp, #8
   16680:	str	r0, [fp, #-8]
   16684:	str	r1, [fp, #-12]
   16688:	ldr	r3, [fp, #-12]
   1668c:	cmp	r3, #0
   16690:	moveq	r3, #1
   16694:	movne	r3, #0
   16698:	uxtb	r3, r3
   1669c:	mov	r2, r3
   166a0:	ldr	r3, [fp, #-12]
   166a4:	orr	r3, r2, r3
   166a8:	mov	r1, r3
   166ac:	ldr	r0, [fp, #-8]
   166b0:	bl	163e4 <putchar_unlocked@plt+0x5558>
   166b4:	mov	r3, r0
   166b8:	mov	r0, r3
   166bc:	sub	sp, fp, #4
   166c0:	pop	{fp, pc}
   166c4:	push	{fp, lr}
   166c8:	add	fp, sp, #4
   166cc:	sub	sp, sp, #8
   166d0:	str	r0, [fp, #-8]
   166d4:	str	r1, [fp, #-12]
   166d8:	ldr	r3, [fp, #-8]
   166dc:	ldr	r2, [fp, #-12]
   166e0:	mov	r1, r2
   166e4:	mov	r0, r3
   166e8:	bl	16278 <putchar_unlocked@plt+0x53ec>
   166ec:	mov	r3, r0
   166f0:	mov	r0, r3
   166f4:	sub	sp, fp, #4
   166f8:	pop	{fp, pc}
   166fc:	push	{fp, lr}
   16700:	add	fp, sp, #4
   16704:	sub	sp, sp, #16
   16708:	str	r0, [fp, #-8]
   1670c:	str	r1, [fp, #-12]
   16710:	str	r2, [fp, #-16]
   16714:	ldr	r3, [fp, #-12]
   16718:	cmp	r3, #0
   1671c:	beq	1672c <putchar_unlocked@plt+0x58a0>
   16720:	ldr	r3, [fp, #-16]
   16724:	cmp	r3, #0
   16728:	bne	1673c <putchar_unlocked@plt+0x58b0>
   1672c:	mov	r3, #1
   16730:	str	r3, [fp, #-16]
   16734:	ldr	r3, [fp, #-16]
   16738:	str	r3, [fp, #-12]
   1673c:	ldr	r3, [fp, #-12]
   16740:	ldr	r2, [fp, #-16]
   16744:	mov	r1, r3
   16748:	ldr	r0, [fp, #-8]
   1674c:	bl	16868 <putchar_unlocked@plt+0x59dc>
   16750:	mov	r3, r0
   16754:	mov	r0, r3
   16758:	sub	sp, fp, #4
   1675c:	pop	{fp, pc}
   16760:	push	{fp, lr}
   16764:	add	fp, sp, #4
   16768:	sub	sp, sp, #8
   1676c:	mov	r0, #14
   16770:	bl	10e44 <nl_langinfo@plt>
   16774:	str	r0, [fp, #-8]
   16778:	ldr	r3, [fp, #-8]
   1677c:	cmp	r3, #0
   16780:	bne	1678c <putchar_unlocked@plt+0x5900>
   16784:	ldr	r3, [pc, #40]	; 167b4 <putchar_unlocked@plt+0x5928>
   16788:	str	r3, [fp, #-8]
   1678c:	ldr	r3, [fp, #-8]
   16790:	ldrb	r3, [r3]
   16794:	cmp	r3, #0
   16798:	bne	167a4 <putchar_unlocked@plt+0x5918>
   1679c:	ldr	r3, [pc, #20]	; 167b8 <putchar_unlocked@plt+0x592c>
   167a0:	str	r3, [fp, #-8]
   167a4:	ldr	r3, [fp, #-8]
   167a8:	mov	r0, r3
   167ac:	sub	sp, fp, #4
   167b0:	pop	{fp, pc}
   167b4:	andeq	r7, r1, ip, lsr #30
   167b8:	andeq	r7, r1, r0, lsr pc
   167bc:	push	{fp, lr}
   167c0:	add	fp, sp, #4
   167c4:	sub	sp, sp, #32
   167c8:	str	r0, [fp, #-24]	; 0xffffffe8
   167cc:	str	r1, [fp, #-28]	; 0xffffffe4
   167d0:	str	r2, [fp, #-32]	; 0xffffffe0
   167d4:	str	r3, [fp, #-36]	; 0xffffffdc
   167d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   167dc:	cmp	r3, #0
   167e0:	bne	167ec <putchar_unlocked@plt+0x5960>
   167e4:	sub	r3, fp, #16
   167e8:	str	r3, [fp, #-24]	; 0xffffffe8
   167ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   167f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   167f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167fc:	bl	10d54 <mbrtowc@plt>
   16800:	str	r0, [fp, #-8]
   16804:	ldr	r3, [fp, #-8]
   16808:	cmn	r3, #3
   1680c:	bls	16858 <putchar_unlocked@plt+0x59cc>
   16810:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16814:	cmp	r3, #0
   16818:	beq	16858 <putchar_unlocked@plt+0x59cc>
   1681c:	mov	r0, #0
   16820:	bl	16e0c <putchar_unlocked@plt+0x5f80>
   16824:	mov	r3, r0
   16828:	eor	r3, r3, #1
   1682c:	uxtb	r3, r3
   16830:	cmp	r3, #0
   16834:	beq	16858 <putchar_unlocked@plt+0x59cc>
   16838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1683c:	ldrb	r3, [r3]
   16840:	strb	r3, [fp, #-9]
   16844:	ldrb	r2, [fp, #-9]
   16848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1684c:	str	r2, [r3]
   16850:	mov	r3, #1
   16854:	b	1685c <putchar_unlocked@plt+0x59d0>
   16858:	ldr	r3, [fp, #-8]
   1685c:	mov	r0, r3
   16860:	sub	sp, fp, #4
   16864:	pop	{fp, pc}
   16868:	push	{fp, lr}
   1686c:	add	fp, sp, #4
   16870:	sub	sp, sp, #24
   16874:	str	r0, [fp, #-16]
   16878:	str	r1, [fp, #-20]	; 0xffffffec
   1687c:	str	r2, [fp, #-24]	; 0xffffffe8
   16880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16884:	cmp	r3, #0
   16888:	beq	168c4 <putchar_unlocked@plt+0x5a38>
   1688c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16890:	mvn	r0, #0
   16894:	bl	17010 <putchar_unlocked@plt+0x6184>
   16898:	mov	r3, r0
   1689c:	mov	r2, r3
   168a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   168a4:	cmp	r2, r3
   168a8:	bcs	168c4 <putchar_unlocked@plt+0x5a38>
   168ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   168b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168b4:	mul	r3, r2, r3
   168b8:	str	r3, [fp, #-8]
   168bc:	mov	r3, #1
   168c0:	b	168d8 <putchar_unlocked@plt+0x5a4c>
   168c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   168c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168cc:	mul	r3, r2, r3
   168d0:	str	r3, [fp, #-8]
   168d4:	mov	r3, #0
   168d8:	cmp	r3, #0
   168dc:	beq	168f8 <putchar_unlocked@plt+0x5a6c>
   168e0:	bl	10de4 <__errno_location@plt>
   168e4:	mov	r2, r0
   168e8:	mov	r3, #12
   168ec:	str	r3, [r2]
   168f0:	mov	r3, #0
   168f4:	b	1690c <putchar_unlocked@plt+0x5a80>
   168f8:	ldr	r3, [fp, #-8]
   168fc:	mov	r1, r3
   16900:	ldr	r0, [fp, #-16]
   16904:	bl	163e4 <putchar_unlocked@plt+0x5558>
   16908:	mov	r3, r0
   1690c:	mov	r0, r3
   16910:	sub	sp, fp, #4
   16914:	pop	{fp, pc}
   16918:	push	{fp}		; (str fp, [sp, #-4]!)
   1691c:	add	fp, sp, #0
   16920:	sub	sp, sp, #12
   16924:	str	r0, [fp, #-8]
   16928:	ldr	r3, [fp, #-8]
   1692c:	cmp	r3, #90	; 0x5a
   16930:	bgt	1694c <putchar_unlocked@plt+0x5ac0>
   16934:	cmp	r3, #65	; 0x41
   16938:	bge	16958 <putchar_unlocked@plt+0x5acc>
   1693c:	sub	r3, r3, #48	; 0x30
   16940:	cmp	r3, #9
   16944:	bhi	16960 <putchar_unlocked@plt+0x5ad4>
   16948:	b	16958 <putchar_unlocked@plt+0x5acc>
   1694c:	sub	r3, r3, #97	; 0x61
   16950:	cmp	r3, #25
   16954:	bhi	16960 <putchar_unlocked@plt+0x5ad4>
   16958:	mov	r3, #1
   1695c:	b	16964 <putchar_unlocked@plt+0x5ad8>
   16960:	mov	r3, #0
   16964:	mov	r0, r3
   16968:	add	sp, fp, #0
   1696c:	pop	{fp}		; (ldr fp, [sp], #4)
   16970:	bx	lr
   16974:	push	{fp}		; (str fp, [sp, #-4]!)
   16978:	add	fp, sp, #0
   1697c:	sub	sp, sp, #12
   16980:	str	r0, [fp, #-8]
   16984:	ldr	r3, [fp, #-8]
   16988:	cmp	r3, #65	; 0x41
   1698c:	blt	169ac <putchar_unlocked@plt+0x5b20>
   16990:	cmp	r3, #90	; 0x5a
   16994:	ble	169a4 <putchar_unlocked@plt+0x5b18>
   16998:	sub	r3, r3, #97	; 0x61
   1699c:	cmp	r3, #25
   169a0:	bhi	169ac <putchar_unlocked@plt+0x5b20>
   169a4:	mov	r3, #1
   169a8:	b	169b0 <putchar_unlocked@plt+0x5b24>
   169ac:	mov	r3, #0
   169b0:	mov	r0, r3
   169b4:	add	sp, fp, #0
   169b8:	pop	{fp}		; (ldr fp, [sp], #4)
   169bc:	bx	lr
   169c0:	push	{fp}		; (str fp, [sp, #-4]!)
   169c4:	add	fp, sp, #0
   169c8:	sub	sp, sp, #12
   169cc:	str	r0, [fp, #-8]
   169d0:	ldr	r3, [fp, #-8]
   169d4:	add	r3, r3, #0
   169d8:	cmp	r3, #127	; 0x7f
   169dc:	bhi	169e8 <putchar_unlocked@plt+0x5b5c>
   169e0:	mov	r3, #1
   169e4:	b	169ec <putchar_unlocked@plt+0x5b60>
   169e8:	mov	r3, #0
   169ec:	mov	r0, r3
   169f0:	add	sp, fp, #0
   169f4:	pop	{fp}		; (ldr fp, [sp], #4)
   169f8:	bx	lr
   169fc:	push	{fp}		; (str fp, [sp, #-4]!)
   16a00:	add	fp, sp, #0
   16a04:	sub	sp, sp, #12
   16a08:	str	r0, [fp, #-8]
   16a0c:	ldr	r3, [fp, #-8]
   16a10:	cmp	r3, #32
   16a14:	beq	16a24 <putchar_unlocked@plt+0x5b98>
   16a18:	ldr	r3, [fp, #-8]
   16a1c:	cmp	r3, #9
   16a20:	bne	16a2c <putchar_unlocked@plt+0x5ba0>
   16a24:	mov	r3, #1
   16a28:	b	16a30 <putchar_unlocked@plt+0x5ba4>
   16a2c:	mov	r3, #0
   16a30:	and	r3, r3, #1
   16a34:	uxtb	r3, r3
   16a38:	mov	r0, r3
   16a3c:	add	sp, fp, #0
   16a40:	pop	{fp}		; (ldr fp, [sp], #4)
   16a44:	bx	lr
   16a48:	push	{fp}		; (str fp, [sp, #-4]!)
   16a4c:	add	fp, sp, #0
   16a50:	sub	sp, sp, #12
   16a54:	str	r0, [fp, #-8]
   16a58:	ldr	r3, [fp, #-8]
   16a5c:	cmp	r3, #0
   16a60:	blt	16a7c <putchar_unlocked@plt+0x5bf0>
   16a64:	cmp	r3, #31
   16a68:	ble	16a74 <putchar_unlocked@plt+0x5be8>
   16a6c:	cmp	r3, #127	; 0x7f
   16a70:	bne	16a7c <putchar_unlocked@plt+0x5bf0>
   16a74:	mov	r3, #1
   16a78:	b	16a80 <putchar_unlocked@plt+0x5bf4>
   16a7c:	mov	r3, #0
   16a80:	mov	r0, r3
   16a84:	add	sp, fp, #0
   16a88:	pop	{fp}		; (ldr fp, [sp], #4)
   16a8c:	bx	lr
   16a90:	push	{fp}		; (str fp, [sp, #-4]!)
   16a94:	add	fp, sp, #0
   16a98:	sub	sp, sp, #12
   16a9c:	str	r0, [fp, #-8]
   16aa0:	ldr	r3, [fp, #-8]
   16aa4:	sub	r3, r3, #48	; 0x30
   16aa8:	cmp	r3, #9
   16aac:	bhi	16ab8 <putchar_unlocked@plt+0x5c2c>
   16ab0:	mov	r3, #1
   16ab4:	b	16abc <putchar_unlocked@plt+0x5c30>
   16ab8:	mov	r3, #0
   16abc:	mov	r0, r3
   16ac0:	add	sp, fp, #0
   16ac4:	pop	{fp}		; (ldr fp, [sp], #4)
   16ac8:	bx	lr
   16acc:	push	{fp}		; (str fp, [sp, #-4]!)
   16ad0:	add	fp, sp, #0
   16ad4:	sub	sp, sp, #12
   16ad8:	str	r0, [fp, #-8]
   16adc:	ldr	r3, [fp, #-8]
   16ae0:	sub	r3, r3, #33	; 0x21
   16ae4:	cmp	r3, #93	; 0x5d
   16ae8:	bhi	16af4 <putchar_unlocked@plt+0x5c68>
   16aec:	mov	r3, #1
   16af0:	b	16af8 <putchar_unlocked@plt+0x5c6c>
   16af4:	mov	r3, #0
   16af8:	mov	r0, r3
   16afc:	add	sp, fp, #0
   16b00:	pop	{fp}		; (ldr fp, [sp], #4)
   16b04:	bx	lr
   16b08:	push	{fp}		; (str fp, [sp, #-4]!)
   16b0c:	add	fp, sp, #0
   16b10:	sub	sp, sp, #12
   16b14:	str	r0, [fp, #-8]
   16b18:	ldr	r3, [fp, #-8]
   16b1c:	sub	r3, r3, #97	; 0x61
   16b20:	cmp	r3, #25
   16b24:	bhi	16b30 <putchar_unlocked@plt+0x5ca4>
   16b28:	mov	r3, #1
   16b2c:	b	16b34 <putchar_unlocked@plt+0x5ca8>
   16b30:	mov	r3, #0
   16b34:	mov	r0, r3
   16b38:	add	sp, fp, #0
   16b3c:	pop	{fp}		; (ldr fp, [sp], #4)
   16b40:	bx	lr
   16b44:	push	{fp}		; (str fp, [sp, #-4]!)
   16b48:	add	fp, sp, #0
   16b4c:	sub	sp, sp, #12
   16b50:	str	r0, [fp, #-8]
   16b54:	ldr	r3, [fp, #-8]
   16b58:	sub	r3, r3, #32
   16b5c:	cmp	r3, #94	; 0x5e
   16b60:	bhi	16b6c <putchar_unlocked@plt+0x5ce0>
   16b64:	mov	r3, #1
   16b68:	b	16b70 <putchar_unlocked@plt+0x5ce4>
   16b6c:	mov	r3, #0
   16b70:	mov	r0, r3
   16b74:	add	sp, fp, #0
   16b78:	pop	{fp}		; (ldr fp, [sp], #4)
   16b7c:	bx	lr
   16b80:	push	{fp}		; (str fp, [sp, #-4]!)
   16b84:	add	fp, sp, #0
   16b88:	sub	sp, sp, #12
   16b8c:	str	r0, [fp, #-8]
   16b90:	ldr	r3, [fp, #-8]
   16b94:	cmp	r3, #64	; 0x40
   16b98:	bgt	16bb4 <putchar_unlocked@plt+0x5d28>
   16b9c:	cmp	r3, #58	; 0x3a
   16ba0:	bge	16bd0 <putchar_unlocked@plt+0x5d44>
   16ba4:	sub	r3, r3, #33	; 0x21
   16ba8:	cmp	r3, #14
   16bac:	bhi	16bd8 <putchar_unlocked@plt+0x5d4c>
   16bb0:	b	16bd0 <putchar_unlocked@plt+0x5d44>
   16bb4:	cmp	r3, #91	; 0x5b
   16bb8:	blt	16bd8 <putchar_unlocked@plt+0x5d4c>
   16bbc:	cmp	r3, #96	; 0x60
   16bc0:	ble	16bd0 <putchar_unlocked@plt+0x5d44>
   16bc4:	sub	r3, r3, #123	; 0x7b
   16bc8:	cmp	r3, #3
   16bcc:	bhi	16bd8 <putchar_unlocked@plt+0x5d4c>
   16bd0:	mov	r3, #1
   16bd4:	b	16bdc <putchar_unlocked@plt+0x5d50>
   16bd8:	mov	r3, #0
   16bdc:	mov	r0, r3
   16be0:	add	sp, fp, #0
   16be4:	pop	{fp}		; (ldr fp, [sp], #4)
   16be8:	bx	lr
   16bec:	push	{fp}		; (str fp, [sp, #-4]!)
   16bf0:	add	fp, sp, #0
   16bf4:	sub	sp, sp, #12
   16bf8:	str	r0, [fp, #-8]
   16bfc:	ldr	r3, [fp, #-8]
   16c00:	cmp	r3, #9
   16c04:	blt	16c20 <putchar_unlocked@plt+0x5d94>
   16c08:	cmp	r3, #13
   16c0c:	ble	16c18 <putchar_unlocked@plt+0x5d8c>
   16c10:	cmp	r3, #32
   16c14:	bne	16c20 <putchar_unlocked@plt+0x5d94>
   16c18:	mov	r3, #1
   16c1c:	b	16c24 <putchar_unlocked@plt+0x5d98>
   16c20:	mov	r3, #0
   16c24:	mov	r0, r3
   16c28:	add	sp, fp, #0
   16c2c:	pop	{fp}		; (ldr fp, [sp], #4)
   16c30:	bx	lr
   16c34:	push	{fp}		; (str fp, [sp, #-4]!)
   16c38:	add	fp, sp, #0
   16c3c:	sub	sp, sp, #12
   16c40:	str	r0, [fp, #-8]
   16c44:	ldr	r3, [fp, #-8]
   16c48:	sub	r3, r3, #65	; 0x41
   16c4c:	cmp	r3, #25
   16c50:	bhi	16c5c <putchar_unlocked@plt+0x5dd0>
   16c54:	mov	r3, #1
   16c58:	b	16c60 <putchar_unlocked@plt+0x5dd4>
   16c5c:	mov	r3, #0
   16c60:	mov	r0, r3
   16c64:	add	sp, fp, #0
   16c68:	pop	{fp}		; (ldr fp, [sp], #4)
   16c6c:	bx	lr
   16c70:	push	{fp}		; (str fp, [sp, #-4]!)
   16c74:	add	fp, sp, #0
   16c78:	sub	sp, sp, #12
   16c7c:	str	r0, [fp, #-8]
   16c80:	ldr	r3, [fp, #-8]
   16c84:	sub	r3, r3, #48	; 0x30
   16c88:	cmp	r3, #54	; 0x36
   16c8c:	addls	pc, pc, r3, lsl #2
   16c90:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16c94:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16c98:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16c9c:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ca0:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ca4:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ca8:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cac:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cb0:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cb4:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cb8:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cbc:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cc0:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cc4:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cc8:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16ccc:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cd0:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cd4:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cd8:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cdc:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ce0:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ce4:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16ce8:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cec:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16cf0:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cf4:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cf8:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16cfc:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d00:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d04:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d08:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d0c:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d10:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d14:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d18:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d1c:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d20:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d24:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d28:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d2c:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d30:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d34:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d38:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d3c:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d40:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d44:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d48:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d4c:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d50:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d54:	b	16d78 <putchar_unlocked@plt+0x5eec>
   16d58:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d5c:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d60:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d64:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d68:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d6c:	b	16d70 <putchar_unlocked@plt+0x5ee4>
   16d70:	mov	r3, #1
   16d74:	b	16d7c <putchar_unlocked@plt+0x5ef0>
   16d78:	mov	r3, #0
   16d7c:	mov	r0, r3
   16d80:	add	sp, fp, #0
   16d84:	pop	{fp}		; (ldr fp, [sp], #4)
   16d88:	bx	lr
   16d8c:	push	{fp}		; (str fp, [sp, #-4]!)
   16d90:	add	fp, sp, #0
   16d94:	sub	sp, sp, #12
   16d98:	str	r0, [fp, #-8]
   16d9c:	ldr	r3, [fp, #-8]
   16da0:	sub	r3, r3, #65	; 0x41
   16da4:	cmp	r3, #25
   16da8:	bhi	16db8 <putchar_unlocked@plt+0x5f2c>
   16dac:	ldr	r3, [fp, #-8]
   16db0:	add	r3, r3, #32
   16db4:	b	16dbc <putchar_unlocked@plt+0x5f30>
   16db8:	ldr	r3, [fp, #-8]
   16dbc:	mov	r0, r3
   16dc0:	add	sp, fp, #0
   16dc4:	pop	{fp}		; (ldr fp, [sp], #4)
   16dc8:	bx	lr
   16dcc:	push	{fp}		; (str fp, [sp, #-4]!)
   16dd0:	add	fp, sp, #0
   16dd4:	sub	sp, sp, #12
   16dd8:	str	r0, [fp, #-8]
   16ddc:	ldr	r3, [fp, #-8]
   16de0:	sub	r3, r3, #97	; 0x61
   16de4:	cmp	r3, #25
   16de8:	bhi	16df8 <putchar_unlocked@plt+0x5f6c>
   16dec:	ldr	r3, [fp, #-8]
   16df0:	sub	r3, r3, #32
   16df4:	b	16dfc <putchar_unlocked@plt+0x5f70>
   16df8:	ldr	r3, [fp, #-8]
   16dfc:	mov	r0, r3
   16e00:	add	sp, fp, #0
   16e04:	pop	{fp}		; (ldr fp, [sp], #4)
   16e08:	bx	lr
   16e0c:	push	{fp, lr}
   16e10:	add	fp, sp, #4
   16e14:	sub	sp, sp, #272	; 0x110
   16e18:	str	r0, [fp, #-272]	; 0xfffffef0
   16e1c:	sub	r3, fp, #264	; 0x108
   16e20:	ldr	r2, [pc, #116]	; 16e9c <putchar_unlocked@plt+0x6010>
   16e24:	mov	r1, r3
   16e28:	ldr	r0, [fp, #-272]	; 0xfffffef0
   16e2c:	bl	16fb0 <putchar_unlocked@plt+0x6124>
   16e30:	mov	r3, r0
   16e34:	cmp	r3, #0
   16e38:	beq	16e44 <putchar_unlocked@plt+0x5fb8>
   16e3c:	mov	r3, #0
   16e40:	b	16e90 <putchar_unlocked@plt+0x6004>
   16e44:	sub	r3, fp, #264	; 0x108
   16e48:	ldr	r1, [pc, #80]	; 16ea0 <putchar_unlocked@plt+0x6014>
   16e4c:	mov	r0, r3
   16e50:	bl	10c64 <strcmp@plt>
   16e54:	mov	r3, r0
   16e58:	cmp	r3, #0
   16e5c:	beq	16e84 <putchar_unlocked@plt+0x5ff8>
   16e60:	sub	r3, fp, #264	; 0x108
   16e64:	ldr	r1, [pc, #56]	; 16ea4 <putchar_unlocked@plt+0x6018>
   16e68:	mov	r0, r3
   16e6c:	bl	10c64 <strcmp@plt>
   16e70:	mov	r3, r0
   16e74:	cmp	r3, #0
   16e78:	beq	16e84 <putchar_unlocked@plt+0x5ff8>
   16e7c:	mov	r3, #1
   16e80:	b	16e88 <putchar_unlocked@plt+0x5ffc>
   16e84:	mov	r3, #0
   16e88:	and	r3, r3, #1
   16e8c:	uxtb	r3, r3
   16e90:	mov	r0, r3
   16e94:	sub	sp, fp, #4
   16e98:	pop	{fp, pc}
   16e9c:	andeq	r0, r0, r1, lsl #2
   16ea0:	andeq	r7, r1, r8, lsr pc
   16ea4:	andeq	r7, r1, ip, lsr pc
   16ea8:	push	{fp, lr}
   16eac:	add	fp, sp, #4
   16eb0:	sub	sp, sp, #16
   16eb4:	str	r0, [fp, #-16]
   16eb8:	mov	r1, #0
   16ebc:	ldr	r0, [fp, #-16]
   16ec0:	bl	10e2c <setlocale@plt>
   16ec4:	str	r0, [fp, #-8]
   16ec8:	ldr	r3, [fp, #-8]
   16ecc:	mov	r0, r3
   16ed0:	sub	sp, fp, #4
   16ed4:	pop	{fp, pc}
   16ed8:	push	{fp, lr}
   16edc:	add	fp, sp, #4
   16ee0:	sub	sp, sp, #24
   16ee4:	str	r0, [fp, #-16]
   16ee8:	str	r1, [fp, #-20]	; 0xffffffec
   16eec:	str	r2, [fp, #-24]	; 0xffffffe8
   16ef0:	ldr	r0, [fp, #-16]
   16ef4:	bl	16ea8 <putchar_unlocked@plt+0x601c>
   16ef8:	str	r0, [fp, #-8]
   16efc:	ldr	r3, [fp, #-8]
   16f00:	cmp	r3, #0
   16f04:	bne	16f28 <putchar_unlocked@plt+0x609c>
   16f08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f0c:	cmp	r3, #0
   16f10:	beq	16f20 <putchar_unlocked@plt+0x6094>
   16f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f18:	mov	r2, #0
   16f1c:	strb	r2, [r3]
   16f20:	mov	r3, #22
   16f24:	b	16fa4 <putchar_unlocked@plt+0x6118>
   16f28:	ldr	r0, [fp, #-8]
   16f2c:	bl	10dcc <strlen@plt>
   16f30:	str	r0, [fp, #-12]
   16f34:	ldr	r2, [fp, #-12]
   16f38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f3c:	cmp	r2, r3
   16f40:	bcs	16f64 <putchar_unlocked@plt+0x60d8>
   16f44:	ldr	r3, [fp, #-12]
   16f48:	add	r3, r3, #1
   16f4c:	mov	r2, r3
   16f50:	ldr	r1, [fp, #-8]
   16f54:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f58:	bl	10cac <memcpy@plt>
   16f5c:	mov	r3, #0
   16f60:	b	16fa4 <putchar_unlocked@plt+0x6118>
   16f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f68:	cmp	r3, #0
   16f6c:	beq	16fa0 <putchar_unlocked@plt+0x6114>
   16f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f74:	sub	r3, r3, #1
   16f78:	mov	r2, r3
   16f7c:	ldr	r1, [fp, #-8]
   16f80:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f84:	bl	10cac <memcpy@plt>
   16f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f8c:	sub	r3, r3, #1
   16f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   16f94:	add	r3, r2, r3
   16f98:	mov	r2, #0
   16f9c:	strb	r2, [r3]
   16fa0:	mov	r3, #34	; 0x22
   16fa4:	mov	r0, r3
   16fa8:	sub	sp, fp, #4
   16fac:	pop	{fp, pc}
   16fb0:	push	{fp, lr}
   16fb4:	add	fp, sp, #4
   16fb8:	sub	sp, sp, #16
   16fbc:	str	r0, [fp, #-8]
   16fc0:	str	r1, [fp, #-12]
   16fc4:	str	r2, [fp, #-16]
   16fc8:	ldr	r2, [fp, #-16]
   16fcc:	ldr	r1, [fp, #-12]
   16fd0:	ldr	r0, [fp, #-8]
   16fd4:	bl	16ed8 <putchar_unlocked@plt+0x604c>
   16fd8:	mov	r3, r0
   16fdc:	mov	r0, r3
   16fe0:	sub	sp, fp, #4
   16fe4:	pop	{fp, pc}
   16fe8:	push	{fp, lr}
   16fec:	add	fp, sp, #4
   16ff0:	sub	sp, sp, #8
   16ff4:	str	r0, [fp, #-8]
   16ff8:	ldr	r0, [fp, #-8]
   16ffc:	bl	16ea8 <putchar_unlocked@plt+0x601c>
   17000:	mov	r3, r0
   17004:	mov	r0, r3
   17008:	sub	sp, fp, #4
   1700c:	pop	{fp, pc}
   17010:	subs	r2, r1, #1
   17014:	bxeq	lr
   17018:	bcc	171f0 <putchar_unlocked@plt+0x6364>
   1701c:	cmp	r0, r1
   17020:	bls	171d4 <putchar_unlocked@plt+0x6348>
   17024:	tst	r1, r2
   17028:	beq	171e0 <putchar_unlocked@plt+0x6354>
   1702c:	clz	r3, r0
   17030:	clz	r2, r1
   17034:	sub	r3, r2, r3
   17038:	rsbs	r3, r3, #31
   1703c:	addne	r3, r3, r3, lsl #1
   17040:	mov	r2, #0
   17044:	addne	pc, pc, r3, lsl #2
   17048:	nop			; (mov r0, r0)
   1704c:	cmp	r0, r1, lsl #31
   17050:	adc	r2, r2, r2
   17054:	subcs	r0, r0, r1, lsl #31
   17058:	cmp	r0, r1, lsl #30
   1705c:	adc	r2, r2, r2
   17060:	subcs	r0, r0, r1, lsl #30
   17064:	cmp	r0, r1, lsl #29
   17068:	adc	r2, r2, r2
   1706c:	subcs	r0, r0, r1, lsl #29
   17070:	cmp	r0, r1, lsl #28
   17074:	adc	r2, r2, r2
   17078:	subcs	r0, r0, r1, lsl #28
   1707c:	cmp	r0, r1, lsl #27
   17080:	adc	r2, r2, r2
   17084:	subcs	r0, r0, r1, lsl #27
   17088:	cmp	r0, r1, lsl #26
   1708c:	adc	r2, r2, r2
   17090:	subcs	r0, r0, r1, lsl #26
   17094:	cmp	r0, r1, lsl #25
   17098:	adc	r2, r2, r2
   1709c:	subcs	r0, r0, r1, lsl #25
   170a0:	cmp	r0, r1, lsl #24
   170a4:	adc	r2, r2, r2
   170a8:	subcs	r0, r0, r1, lsl #24
   170ac:	cmp	r0, r1, lsl #23
   170b0:	adc	r2, r2, r2
   170b4:	subcs	r0, r0, r1, lsl #23
   170b8:	cmp	r0, r1, lsl #22
   170bc:	adc	r2, r2, r2
   170c0:	subcs	r0, r0, r1, lsl #22
   170c4:	cmp	r0, r1, lsl #21
   170c8:	adc	r2, r2, r2
   170cc:	subcs	r0, r0, r1, lsl #21
   170d0:	cmp	r0, r1, lsl #20
   170d4:	adc	r2, r2, r2
   170d8:	subcs	r0, r0, r1, lsl #20
   170dc:	cmp	r0, r1, lsl #19
   170e0:	adc	r2, r2, r2
   170e4:	subcs	r0, r0, r1, lsl #19
   170e8:	cmp	r0, r1, lsl #18
   170ec:	adc	r2, r2, r2
   170f0:	subcs	r0, r0, r1, lsl #18
   170f4:	cmp	r0, r1, lsl #17
   170f8:	adc	r2, r2, r2
   170fc:	subcs	r0, r0, r1, lsl #17
   17100:	cmp	r0, r1, lsl #16
   17104:	adc	r2, r2, r2
   17108:	subcs	r0, r0, r1, lsl #16
   1710c:	cmp	r0, r1, lsl #15
   17110:	adc	r2, r2, r2
   17114:	subcs	r0, r0, r1, lsl #15
   17118:	cmp	r0, r1, lsl #14
   1711c:	adc	r2, r2, r2
   17120:	subcs	r0, r0, r1, lsl #14
   17124:	cmp	r0, r1, lsl #13
   17128:	adc	r2, r2, r2
   1712c:	subcs	r0, r0, r1, lsl #13
   17130:	cmp	r0, r1, lsl #12
   17134:	adc	r2, r2, r2
   17138:	subcs	r0, r0, r1, lsl #12
   1713c:	cmp	r0, r1, lsl #11
   17140:	adc	r2, r2, r2
   17144:	subcs	r0, r0, r1, lsl #11
   17148:	cmp	r0, r1, lsl #10
   1714c:	adc	r2, r2, r2
   17150:	subcs	r0, r0, r1, lsl #10
   17154:	cmp	r0, r1, lsl #9
   17158:	adc	r2, r2, r2
   1715c:	subcs	r0, r0, r1, lsl #9
   17160:	cmp	r0, r1, lsl #8
   17164:	adc	r2, r2, r2
   17168:	subcs	r0, r0, r1, lsl #8
   1716c:	cmp	r0, r1, lsl #7
   17170:	adc	r2, r2, r2
   17174:	subcs	r0, r0, r1, lsl #7
   17178:	cmp	r0, r1, lsl #6
   1717c:	adc	r2, r2, r2
   17180:	subcs	r0, r0, r1, lsl #6
   17184:	cmp	r0, r1, lsl #5
   17188:	adc	r2, r2, r2
   1718c:	subcs	r0, r0, r1, lsl #5
   17190:	cmp	r0, r1, lsl #4
   17194:	adc	r2, r2, r2
   17198:	subcs	r0, r0, r1, lsl #4
   1719c:	cmp	r0, r1, lsl #3
   171a0:	adc	r2, r2, r2
   171a4:	subcs	r0, r0, r1, lsl #3
   171a8:	cmp	r0, r1, lsl #2
   171ac:	adc	r2, r2, r2
   171b0:	subcs	r0, r0, r1, lsl #2
   171b4:	cmp	r0, r1, lsl #1
   171b8:	adc	r2, r2, r2
   171bc:	subcs	r0, r0, r1, lsl #1
   171c0:	cmp	r0, r1
   171c4:	adc	r2, r2, r2
   171c8:	subcs	r0, r0, r1
   171cc:	mov	r0, r2
   171d0:	bx	lr
   171d4:	moveq	r0, #1
   171d8:	movne	r0, #0
   171dc:	bx	lr
   171e0:	clz	r2, r1
   171e4:	rsb	r2, r2, #31
   171e8:	lsr	r0, r0, r2
   171ec:	bx	lr
   171f0:	cmp	r0, #0
   171f4:	mvnne	r0, #0
   171f8:	b	1745c <putchar_unlocked@plt+0x65d0>
   171fc:	cmp	r1, #0
   17200:	beq	171f0 <putchar_unlocked@plt+0x6364>
   17204:	push	{r0, r1, lr}
   17208:	bl	17010 <putchar_unlocked@plt+0x6184>
   1720c:	pop	{r1, r2, lr}
   17210:	mul	r3, r2, r0
   17214:	sub	r1, r1, r3
   17218:	bx	lr
   1721c:	cmp	r1, #0
   17220:	beq	1742c <putchar_unlocked@plt+0x65a0>
   17224:	eor	ip, r0, r1
   17228:	rsbmi	r1, r1, #0
   1722c:	subs	r2, r1, #1
   17230:	beq	173f8 <putchar_unlocked@plt+0x656c>
   17234:	movs	r3, r0
   17238:	rsbmi	r3, r0, #0
   1723c:	cmp	r3, r1
   17240:	bls	17404 <putchar_unlocked@plt+0x6578>
   17244:	tst	r1, r2
   17248:	beq	17414 <putchar_unlocked@plt+0x6588>
   1724c:	clz	r2, r3
   17250:	clz	r0, r1
   17254:	sub	r2, r0, r2
   17258:	rsbs	r2, r2, #31
   1725c:	addne	r2, r2, r2, lsl #1
   17260:	mov	r0, #0
   17264:	addne	pc, pc, r2, lsl #2
   17268:	nop			; (mov r0, r0)
   1726c:	cmp	r3, r1, lsl #31
   17270:	adc	r0, r0, r0
   17274:	subcs	r3, r3, r1, lsl #31
   17278:	cmp	r3, r1, lsl #30
   1727c:	adc	r0, r0, r0
   17280:	subcs	r3, r3, r1, lsl #30
   17284:	cmp	r3, r1, lsl #29
   17288:	adc	r0, r0, r0
   1728c:	subcs	r3, r3, r1, lsl #29
   17290:	cmp	r3, r1, lsl #28
   17294:	adc	r0, r0, r0
   17298:	subcs	r3, r3, r1, lsl #28
   1729c:	cmp	r3, r1, lsl #27
   172a0:	adc	r0, r0, r0
   172a4:	subcs	r3, r3, r1, lsl #27
   172a8:	cmp	r3, r1, lsl #26
   172ac:	adc	r0, r0, r0
   172b0:	subcs	r3, r3, r1, lsl #26
   172b4:	cmp	r3, r1, lsl #25
   172b8:	adc	r0, r0, r0
   172bc:	subcs	r3, r3, r1, lsl #25
   172c0:	cmp	r3, r1, lsl #24
   172c4:	adc	r0, r0, r0
   172c8:	subcs	r3, r3, r1, lsl #24
   172cc:	cmp	r3, r1, lsl #23
   172d0:	adc	r0, r0, r0
   172d4:	subcs	r3, r3, r1, lsl #23
   172d8:	cmp	r3, r1, lsl #22
   172dc:	adc	r0, r0, r0
   172e0:	subcs	r3, r3, r1, lsl #22
   172e4:	cmp	r3, r1, lsl #21
   172e8:	adc	r0, r0, r0
   172ec:	subcs	r3, r3, r1, lsl #21
   172f0:	cmp	r3, r1, lsl #20
   172f4:	adc	r0, r0, r0
   172f8:	subcs	r3, r3, r1, lsl #20
   172fc:	cmp	r3, r1, lsl #19
   17300:	adc	r0, r0, r0
   17304:	subcs	r3, r3, r1, lsl #19
   17308:	cmp	r3, r1, lsl #18
   1730c:	adc	r0, r0, r0
   17310:	subcs	r3, r3, r1, lsl #18
   17314:	cmp	r3, r1, lsl #17
   17318:	adc	r0, r0, r0
   1731c:	subcs	r3, r3, r1, lsl #17
   17320:	cmp	r3, r1, lsl #16
   17324:	adc	r0, r0, r0
   17328:	subcs	r3, r3, r1, lsl #16
   1732c:	cmp	r3, r1, lsl #15
   17330:	adc	r0, r0, r0
   17334:	subcs	r3, r3, r1, lsl #15
   17338:	cmp	r3, r1, lsl #14
   1733c:	adc	r0, r0, r0
   17340:	subcs	r3, r3, r1, lsl #14
   17344:	cmp	r3, r1, lsl #13
   17348:	adc	r0, r0, r0
   1734c:	subcs	r3, r3, r1, lsl #13
   17350:	cmp	r3, r1, lsl #12
   17354:	adc	r0, r0, r0
   17358:	subcs	r3, r3, r1, lsl #12
   1735c:	cmp	r3, r1, lsl #11
   17360:	adc	r0, r0, r0
   17364:	subcs	r3, r3, r1, lsl #11
   17368:	cmp	r3, r1, lsl #10
   1736c:	adc	r0, r0, r0
   17370:	subcs	r3, r3, r1, lsl #10
   17374:	cmp	r3, r1, lsl #9
   17378:	adc	r0, r0, r0
   1737c:	subcs	r3, r3, r1, lsl #9
   17380:	cmp	r3, r1, lsl #8
   17384:	adc	r0, r0, r0
   17388:	subcs	r3, r3, r1, lsl #8
   1738c:	cmp	r3, r1, lsl #7
   17390:	adc	r0, r0, r0
   17394:	subcs	r3, r3, r1, lsl #7
   17398:	cmp	r3, r1, lsl #6
   1739c:	adc	r0, r0, r0
   173a0:	subcs	r3, r3, r1, lsl #6
   173a4:	cmp	r3, r1, lsl #5
   173a8:	adc	r0, r0, r0
   173ac:	subcs	r3, r3, r1, lsl #5
   173b0:	cmp	r3, r1, lsl #4
   173b4:	adc	r0, r0, r0
   173b8:	subcs	r3, r3, r1, lsl #4
   173bc:	cmp	r3, r1, lsl #3
   173c0:	adc	r0, r0, r0
   173c4:	subcs	r3, r3, r1, lsl #3
   173c8:	cmp	r3, r1, lsl #2
   173cc:	adc	r0, r0, r0
   173d0:	subcs	r3, r3, r1, lsl #2
   173d4:	cmp	r3, r1, lsl #1
   173d8:	adc	r0, r0, r0
   173dc:	subcs	r3, r3, r1, lsl #1
   173e0:	cmp	r3, r1
   173e4:	adc	r0, r0, r0
   173e8:	subcs	r3, r3, r1
   173ec:	cmp	ip, #0
   173f0:	rsbmi	r0, r0, #0
   173f4:	bx	lr
   173f8:	teq	ip, r0
   173fc:	rsbmi	r0, r0, #0
   17400:	bx	lr
   17404:	movcc	r0, #0
   17408:	asreq	r0, ip, #31
   1740c:	orreq	r0, r0, #1
   17410:	bx	lr
   17414:	clz	r2, r1
   17418:	rsb	r2, r2, #31
   1741c:	cmp	ip, #0
   17420:	lsr	r0, r3, r2
   17424:	rsbmi	r0, r0, #0
   17428:	bx	lr
   1742c:	cmp	r0, #0
   17430:	mvngt	r0, #-2147483648	; 0x80000000
   17434:	movlt	r0, #-2147483648	; 0x80000000
   17438:	b	1745c <putchar_unlocked@plt+0x65d0>
   1743c:	cmp	r1, #0
   17440:	beq	1742c <putchar_unlocked@plt+0x65a0>
   17444:	push	{r0, r1, lr}
   17448:	bl	17224 <putchar_unlocked@plt+0x6398>
   1744c:	pop	{r1, r2, lr}
   17450:	mul	r3, r2, r0
   17454:	sub	r1, r1, r3
   17458:	bx	lr
   1745c:	push	{r1, lr}
   17460:	mov	r0, #8
   17464:	bl	10c58 <raise@plt>
   17468:	pop	{r1, pc}
   1746c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17470:	mov	r7, r0
   17474:	ldr	r6, [pc, #72]	; 174c4 <putchar_unlocked@plt+0x6638>
   17478:	ldr	r5, [pc, #72]	; 174c8 <putchar_unlocked@plt+0x663c>
   1747c:	add	r6, pc, r6
   17480:	add	r5, pc, r5
   17484:	sub	r6, r6, r5
   17488:	mov	r8, r1
   1748c:	mov	r9, r2
   17490:	bl	10c20 <calloc@plt-0x20>
   17494:	asrs	r6, r6, #2
   17498:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1749c:	mov	r4, #0
   174a0:	add	r4, r4, #1
   174a4:	ldr	r3, [r5], #4
   174a8:	mov	r2, r9
   174ac:	mov	r1, r8
   174b0:	mov	r0, r7
   174b4:	blx	r3
   174b8:	cmp	r6, r4
   174bc:	bne	174a0 <putchar_unlocked@plt+0x6614>
   174c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   174c4:	andeq	r1, r1, ip, lsl #21
   174c8:	andeq	r1, r1, r4, lsl #21
   174cc:	bx	lr
   174d0:	ldr	r3, [pc, #12]	; 174e4 <putchar_unlocked@plt+0x6658>
   174d4:	mov	r1, #0
   174d8:	add	r3, pc, r3
   174dc:	ldr	r2, [r3]
   174e0:	b	10df0 <__cxa_atexit@plt>
   174e4:	strdeq	r1, [r1], -ip

Disassembly of section .fini:

000174e8 <.fini>:
   174e8:	push	{r3, lr}
   174ec:	pop	{r3, pc}
