
../repos/charybdis/modules/.libs/chm_nocolour.so:     file format elf32-littlearm


Disassembly of section .init:

000003f4 <_init>:
 3f4:	push	{r3, lr}
 3f8:	bl	450 <call_weak_fn>
 3fc:	pop	{r3, pc}

Disassembly of section .plt:

00000400 <.plt>:
 400:	push	{lr}		; (str lr, [sp, #-4]!)
 404:	ldr	lr, [pc, #4]	; 410 <.plt+0x10>
 408:	add	lr, pc, lr
 40c:	ldr	pc, [lr, #8]!
 410:	.word	0x00010bf0

00000414 <cflag_add@plt>:
 414:	add	ip, pc, #0, 12
 418:	add	ip, ip, #16, 20	; 0x10000
 41c:	ldr	pc, [ip, #3056]!	; 0xbf0

00000420 <__cxa_finalize@plt>:
 420:	add	ip, pc, #0, 12
 424:	add	ip, ip, #16, 20	; 0x10000
 428:	ldr	pc, [ip, #3048]!	; 0xbe8

0000042c <__gmon_start__@plt>:
 42c:	add	ip, pc, #0, 12
 430:	add	ip, ip, #16, 20	; 0x10000
 434:	ldr	pc, [ip, #3040]!	; 0xbe0

00000438 <rb_strlcpy@plt>:
 438:	add	ip, pc, #0, 12
 43c:	add	ip, ip, #16, 20	; 0x10000
 440:	ldr	pc, [ip, #3032]!	; 0xbd8

00000444 <cflag_orphan@plt>:
 444:	add	ip, pc, #0, 12
 448:	add	ip, ip, #16, 20	; 0x10000
 44c:	ldr	pc, [ip, #3024]!	; 0xbd0

Disassembly of section .text:

00000450 <call_weak_fn>:
 450:	ldr	r3, [pc, #20]	; 46c <call_weak_fn+0x1c>
 454:	ldr	r2, [pc, #20]	; 470 <call_weak_fn+0x20>
 458:	add	r3, pc, r3
 45c:	ldr	r2, [r3, r2]
 460:	cmp	r2, #0
 464:	bxeq	lr
 468:	b	42c <__gmon_start__@plt>
 46c:	.word	0x00010ba0
 470:	.word	0x0000002c

00000474 <deregister_tm_clones>:
 474:	ldr	r0, [pc, #44]	; 4a8 <deregister_tm_clones+0x34>
 478:	ldr	r3, [pc, #44]	; 4ac <deregister_tm_clones+0x38>
 47c:	add	r0, pc, r0
 480:	add	r3, pc, r3
 484:	cmp	r3, r0
 488:	ldr	r3, [pc, #32]	; 4b0 <deregister_tm_clones+0x3c>
 48c:	add	r3, pc, r3
 490:	bxeq	lr
 494:	ldr	r2, [pc, #24]	; 4b4 <deregister_tm_clones+0x40>
 498:	ldr	r3, [r3, r2]
 49c:	cmp	r3, #0
 4a0:	bxeq	lr
 4a4:	bx	r3
 4a8:	.word	0x00010bf8
 4ac:	.word	0x00010bf4
 4b0:	.word	0x00010b6c
 4b4:	.word	0x00000024

000004b8 <register_tm_clones>:
 4b8:	ldr	r0, [pc, #56]	; 4f8 <register_tm_clones+0x40>
 4bc:	ldr	r3, [pc, #56]	; 4fc <register_tm_clones+0x44>
 4c0:	add	r0, pc, r0
 4c4:	add	r3, pc, r3
 4c8:	sub	r1, r3, r0
 4cc:	ldr	r3, [pc, #44]	; 500 <register_tm_clones+0x48>
 4d0:	asr	r1, r1, #2
 4d4:	add	r3, pc, r3
 4d8:	add	r1, r1, r1, lsr #31
 4dc:	asrs	r1, r1, #1
 4e0:	bxeq	lr
 4e4:	ldr	r2, [pc, #24]	; 504 <register_tm_clones+0x4c>
 4e8:	ldr	r3, [r3, r2]
 4ec:	cmp	r3, #0
 4f0:	bxeq	lr
 4f4:	bx	r3
 4f8:	.word	0x00010bb4
 4fc:	.word	0x00010bb0
 500:	.word	0x00010b24
 504:	.word	0x00000034

00000508 <__do_global_dtors_aux>:
 508:	ldr	r3, [pc, #76]	; 55c <__do_global_dtors_aux+0x54>
 50c:	ldr	r2, [pc, #76]	; 560 <__do_global_dtors_aux+0x58>
 510:	add	r3, pc, r3
 514:	add	r2, pc, r2
 518:	ldrb	r3, [r3]
 51c:	cmp	r3, #0
 520:	bxne	lr
 524:	ldr	r3, [pc, #56]	; 564 <__do_global_dtors_aux+0x5c>
 528:	push	{r4, lr}
 52c:	ldr	r3, [r2, r3]
 530:	cmp	r3, #0
 534:	beq	544 <__do_global_dtors_aux+0x3c>
 538:	ldr	r3, [pc, #40]	; 568 <__do_global_dtors_aux+0x60>
 53c:	ldr	r0, [pc, r3]
 540:	bl	420 <__cxa_finalize@plt>
 544:	bl	474 <deregister_tm_clones>
 548:	ldr	r3, [pc, #28]	; 56c <__do_global_dtors_aux+0x64>
 54c:	mov	r2, #1
 550:	add	r3, pc, r3
 554:	strb	r2, [r3]
 558:	pop	{r4, pc}
 55c:	.word	0x00010b64
 560:	.word	0x00010ae4
 564:	.word	0x00000020
 568:	.word	0x00010af4
 56c:	.word	0x00010b24

00000570 <frame_dummy>:
 570:	b	4b8 <register_tm_clones>

00000574 <strip_colour>:
 574:	push	{fp}		; (str fp, [sp, #-4]!)
 578:	add	fp, sp, #0
 57c:	sub	sp, sp, #28
 580:	str	r0, [fp, #-24]	; 0xffffffe8
 584:	ldr	r3, [pc, #580]	; 7d0 <strip_colour+0x25c>
 588:	add	r3, pc, r3
 58c:	ldr	r2, [fp, #-24]	; 0xffffffe8
 590:	str	r2, [fp, #-8]
 594:	ldr	r2, [fp, #-24]	; 0xffffffe8
 598:	str	r2, [fp, #-12]
 59c:	mov	r2, #0
 5a0:	str	r2, [fp, #-16]
 5a4:	b	77c <strip_colour+0x208>
 5a8:	ldr	r2, [fp, #-8]
 5ac:	ldrb	r2, [r2]
 5b0:	sub	r2, r2, #2
 5b4:	cmp	r2, #30
 5b8:	addls	pc, pc, r2, lsl #2
 5bc:	b	740 <strip_colour+0x1cc>
 5c0:	b	764 <strip_colour+0x1f0>
 5c4:	b	63c <strip_colour+0xc8>
 5c8:	b	764 <strip_colour+0x1f0>
 5cc:	b	740 <strip_colour+0x1cc>
 5d0:	b	764 <strip_colour+0x1f0>
 5d4:	b	764 <strip_colour+0x1f0>
 5d8:	b	740 <strip_colour+0x1cc>
 5dc:	b	740 <strip_colour+0x1cc>
 5e0:	b	740 <strip_colour+0x1cc>
 5e4:	b	740 <strip_colour+0x1cc>
 5e8:	b	740 <strip_colour+0x1cc>
 5ec:	b	740 <strip_colour+0x1cc>
 5f0:	b	740 <strip_colour+0x1cc>
 5f4:	b	764 <strip_colour+0x1f0>
 5f8:	b	740 <strip_colour+0x1cc>
 5fc:	b	740 <strip_colour+0x1cc>
 600:	b	740 <strip_colour+0x1cc>
 604:	b	740 <strip_colour+0x1cc>
 608:	b	740 <strip_colour+0x1cc>
 60c:	b	740 <strip_colour+0x1cc>
 610:	b	764 <strip_colour+0x1f0>
 614:	b	764 <strip_colour+0x1f0>
 618:	b	740 <strip_colour+0x1cc>
 61c:	b	740 <strip_colour+0x1cc>
 620:	b	740 <strip_colour+0x1cc>
 624:	b	764 <strip_colour+0x1f0>
 628:	b	740 <strip_colour+0x1cc>
 62c:	b	764 <strip_colour+0x1f0>
 630:	b	740 <strip_colour+0x1cc>
 634:	b	764 <strip_colour+0x1f0>
 638:	b	724 <strip_colour+0x1b0>
 63c:	ldr	r2, [fp, #-8]
 640:	add	r2, r2, #1
 644:	ldrb	r2, [r2]
 648:	mov	r1, r2
 64c:	ldr	r2, [pc, #384]	; 7d4 <strip_colour+0x260>
 650:	ldr	r2, [r3, r2]
 654:	ldr	r2, [r2, r1, lsl #2]
 658:	and	r2, r2, #16
 65c:	cmp	r2, #0
 660:	beq	76c <strip_colour+0x1f8>
 664:	ldr	r2, [fp, #-8]
 668:	add	r2, r2, #1
 66c:	str	r2, [fp, #-8]
 670:	ldr	r2, [fp, #-8]
 674:	add	r2, r2, #1
 678:	ldrb	r2, [r2]
 67c:	mov	r1, r2
 680:	ldr	r2, [pc, #332]	; 7d4 <strip_colour+0x260>
 684:	ldr	r2, [r3, r2]
 688:	ldr	r2, [r2, r1, lsl #2]
 68c:	and	r2, r2, #16
 690:	cmp	r2, #0
 694:	beq	6a4 <strip_colour+0x130>
 698:	ldr	r2, [fp, #-8]
 69c:	add	r2, r2, #1
 6a0:	str	r2, [fp, #-8]
 6a4:	ldr	r2, [fp, #-8]
 6a8:	add	r2, r2, #1
 6ac:	ldrb	r2, [r2]
 6b0:	cmp	r2, #44	; 0x2c
 6b4:	bne	76c <strip_colour+0x1f8>
 6b8:	ldr	r2, [fp, #-8]
 6bc:	add	r2, r2, #2
 6c0:	ldrb	r2, [r2]
 6c4:	mov	r1, r2
 6c8:	ldr	r2, [pc, #260]	; 7d4 <strip_colour+0x260>
 6cc:	ldr	r2, [r3, r2]
 6d0:	ldr	r2, [r2, r1, lsl #2]
 6d4:	and	r2, r2, #16
 6d8:	cmp	r2, #0
 6dc:	beq	76c <strip_colour+0x1f8>
 6e0:	ldr	r2, [fp, #-8]
 6e4:	add	r2, r2, #2
 6e8:	str	r2, [fp, #-8]
 6ec:	ldr	r2, [fp, #-8]
 6f0:	add	r2, r2, #1
 6f4:	ldrb	r2, [r2]
 6f8:	mov	r1, r2
 6fc:	ldr	r2, [pc, #208]	; 7d4 <strip_colour+0x260>
 700:	ldr	r2, [r3, r2]
 704:	ldr	r2, [r2, r1, lsl #2]
 708:	and	r2, r2, #16
 70c:	cmp	r2, #0
 710:	beq	76c <strip_colour+0x1f8>
 714:	ldr	r2, [fp, #-8]
 718:	add	r2, r2, #1
 71c:	str	r2, [fp, #-8]
 720:	b	76c <strip_colour+0x1f8>
 724:	ldr	r2, [fp, #-12]
 728:	add	r1, r2, #1
 72c:	str	r1, [fp, #-12]
 730:	ldr	r1, [fp, #-8]
 734:	ldrb	r1, [r1]
 738:	strb	r1, [r2]
 73c:	b	770 <strip_colour+0x1fc>
 740:	ldr	r2, [fp, #-12]
 744:	add	r1, r2, #1
 748:	str	r1, [fp, #-12]
 74c:	ldr	r1, [fp, #-8]
 750:	ldrb	r1, [r1]
 754:	strb	r1, [r2]
 758:	ldr	r2, [fp, #-12]
 75c:	str	r2, [fp, #-16]
 760:	b	770 <strip_colour+0x1fc>
 764:	nop	{0}
 768:	b	770 <strip_colour+0x1fc>
 76c:	nop	{0}
 770:	ldr	r2, [fp, #-8]
 774:	add	r2, r2, #1
 778:	str	r2, [fp, #-8]
 77c:	ldr	r2, [fp, #-8]
 780:	cmp	r2, #0
 784:	beq	798 <strip_colour+0x224>
 788:	ldr	r2, [fp, #-8]
 78c:	ldrb	r2, [r2]
 790:	cmp	r2, #0
 794:	bne	5a8 <strip_colour+0x34>
 798:	ldr	r3, [fp, #-12]
 79c:	mov	r2, #0
 7a0:	strb	r2, [r3]
 7a4:	ldr	r3, [fp, #-16]
 7a8:	cmp	r3, #0
 7ac:	beq	7bc <strip_colour+0x248>
 7b0:	ldr	r3, [fp, #-16]
 7b4:	mov	r2, #0
 7b8:	strb	r2, [r3]
 7bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7c0:	mov	r0, r3
 7c4:	add	sp, fp, #0
 7c8:	pop	{fp}		; (ldr fp, [sp], #4)
 7cc:	bx	lr
 7d0:	.word	0x00010a70
 7d4:	.word	0x00000030

000007d8 <chm_nocolour_process>:
 7d8:	str	fp, [sp, #-8]!
 7dc:	str	lr, [sp, #4]
 7e0:	add	fp, sp, #4
 7e4:	sub	sp, sp, #8
 7e8:	str	r0, [fp, #-8]
 7ec:	ldr	r3, [fp, #-8]
 7f0:	ldr	r3, [r3, #16]
 7f4:	cmp	r3, #0
 7f8:	bne	864 <chm_nocolour_process+0x8c>
 7fc:	ldr	r3, [fp, #-8]
 800:	ldr	r3, [r3, #8]
 804:	ldr	r2, [r3, #12]
 808:	ldr	r3, [pc, #104]	; 878 <chm_nocolour_process+0xa0>
 80c:	add	r3, pc, r3
 810:	ldr	r3, [r3]
 814:	and	r3, r3, r2
 818:	cmp	r3, #0
 81c:	beq	868 <chm_nocolour_process+0x90>
 820:	ldr	r3, [fp, #-8]
 824:	ldr	r3, [r3, #12]
 828:	mov	r2, #512	; 0x200
 82c:	mov	r1, r3
 830:	ldr	r3, [pc, #68]	; 87c <chm_nocolour_process+0xa4>
 834:	add	r3, pc, r3
 838:	mov	r0, r3
 83c:	bl	438 <rb_strlcpy@plt>
 840:	ldr	r3, [pc, #56]	; 880 <chm_nocolour_process+0xa8>
 844:	add	r3, pc, r3
 848:	mov	r0, r3
 84c:	bl	574 <strip_colour>
 850:	ldr	r3, [fp, #-8]
 854:	ldr	r2, [pc, #40]	; 884 <chm_nocolour_process+0xac>
 858:	add	r2, pc, r2
 85c:	str	r2, [r3, #12]
 860:	b	868 <chm_nocolour_process+0x90>
 864:	nop	{0}
 868:	sub	sp, fp, #4
 86c:	ldr	fp, [sp]
 870:	add	sp, sp, #4
 874:	pop	{pc}		; (ldr pc, [sp], #4)
 878:	.word	0x00010a6c
 87c:	.word	0x00010844
 880:	.word	0x00010834
 884:	.word	0x00010820

00000888 <_modinit>:
 888:	str	fp, [sp, #-8]!
 88c:	str	lr, [sp, #4]
 890:	add	fp, sp, #4
 894:	ldr	r2, [pc, #88]	; 8f4 <_modinit+0x6c>
 898:	add	r2, pc, r2
 89c:	ldr	r3, [pc, #84]	; 8f8 <_modinit+0x70>
 8a0:	ldr	r3, [r2, r3]
 8a4:	mov	r1, r3
 8a8:	mov	r0, #99	; 0x63
 8ac:	bl	414 <cflag_add@plt>
 8b0:	mov	r2, r0
 8b4:	ldr	r3, [pc, #64]	; 8fc <_modinit+0x74>
 8b8:	add	r3, pc, r3
 8bc:	str	r2, [r3]
 8c0:	ldr	r3, [pc, #56]	; 900 <_modinit+0x78>
 8c4:	add	r3, pc, r3
 8c8:	ldr	r3, [r3]
 8cc:	cmp	r3, #0
 8d0:	bne	8dc <_modinit+0x54>
 8d4:	mvn	r3, #0
 8d8:	b	8e0 <_modinit+0x58>
 8dc:	mov	r3, #0
 8e0:	mov	r0, r3
 8e4:	sub	sp, fp, #4
 8e8:	ldr	fp, [sp]
 8ec:	add	sp, sp, #4
 8f0:	pop	{pc}		; (ldr pc, [sp], #4)
 8f4:	.word	0x00010760
 8f8:	.word	0x00000028
 8fc:	.word	0x000109c0
 900:	.word	0x000109b4

00000904 <_moddeinit>:
 904:	str	fp, [sp, #-8]!
 908:	str	lr, [sp, #4]
 90c:	add	fp, sp, #4
 910:	mov	r0, #99	; 0x63
 914:	bl	444 <cflag_orphan@plt>
 918:	nop	{0}
 91c:	sub	sp, fp, #4
 920:	ldr	fp, [sp]
 924:	add	sp, sp, #4
 928:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

0000092c <_fini>:
 92c:	push	{r3, lr}
 930:	pop	{r3, pc}
