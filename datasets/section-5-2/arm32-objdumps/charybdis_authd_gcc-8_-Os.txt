
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

00011204 <.init>:
   11204:	push	{r3, lr}
   11208:	bl	11708 <fputs@plt+0x100>
   1120c:	pop	{r3, pc}

Disassembly of section .plt:

00011210 <sigemptyset@plt-0x14>:
   11210:	push	{lr}		; (str lr, [sp, #-4]!)
   11214:	ldr	lr, [pc, #4]	; 11220 <sigemptyset@plt-0x4>
   11218:	add	lr, pc, lr
   1121c:	ldr	pc, [lr, #8]!
   11220:	andeq	r7, r1, r0, ror #27

00011224 <sigemptyset@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3552]!	; 0xde0

00011230 <strerror@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3544]!	; 0xdd8

0001123c <rb_helper_loop@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3536]!	; 0xdd0

00011248 <abort@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3528]!	; 0xdc8

00011254 <rb_event_addish@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3520]!	; 0xdc0

00011260 <getsockname@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3512]!	; 0xdb8

0001126c <rb_ignore_errno@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3504]!	; 0xdb0

00011278 <rb_connect_tcp_ssl@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3496]!	; 0xda8

00011284 <rb_connect_tcp@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3488]!	; 0xda0

00011290 <memcmp@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3480]!	; 0xd98

0001129c <__libc_start_main@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3472]!	; 0xd90

000112a8 <rb_event_delete@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3464]!	; 0xd88

000112b4 <rb_setselect@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3456]!	; 0xd80

000112c0 <rb_get_fd@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3448]!	; 0xd78

000112cc <__gmon_start__@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3440]!	; 0xd70

000112d8 <vsnprintf@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3432]!	; 0xd68

000112e4 <rb_socket@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3424]!	; 0xd60

000112f0 <fclose@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3416]!	; 0xd58

000112fc <fgets@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3408]!	; 0xd50

00011308 <rb_strtok_r@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3400]!	; 0xd48

00011314 <strchr@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3392]!	; 0xd40

00011320 <rb_dictionary_foreach_cur@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3384]!	; 0xd38

0001132c <strcasecmp@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3376]!	; 0xd30

00011338 <calloc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3368]!	; 0xd28

00011344 <rb_helper_child@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3360]!	; 0xd20

00011350 <sendto@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3352]!	; 0xd18

0001135c <fopen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #94208	; 0x17000
   11364:	ldr	pc, [ip, #3344]!	; 0xd10

00011368 <memset@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #94208	; 0x17000
   11370:	ldr	pc, [ip, #3336]!	; 0xd08

00011374 <freeaddrinfo@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #94208	; 0x17000
   1137c:	ldr	pc, [ip, #3328]!	; 0xd00

00011380 <strrchr@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #94208	; 0x17000
   11388:	ldr	pc, [ip, #3320]!	; 0xcf8

0001138c <rb_write@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #94208	; 0x17000
   11394:	ldr	pc, [ip, #3312]!	; 0xcf0

00011398 <__assert_fail@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #94208	; 0x17000
   113a0:	ldr	pc, [ip, #3304]!	; 0xce8

000113a4 <rb_strlcpy@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #94208	; 0x17000
   113ac:	ldr	pc, [ip, #3296]!	; 0xce0

000113b0 <strtoull@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #94208	; 0x17000
   113b8:	ldr	pc, [ip, #3288]!	; 0xcd8

000113bc <rb_dictionary_foreach_next@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #94208	; 0x17000
   113c4:	ldr	pc, [ip, #3280]!	; 0xcd0

000113c8 <free@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #94208	; 0x17000
   113d0:	ldr	pc, [ip, #3272]!	; 0xcc8

000113d4 <rb_string_to_array@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #94208	; 0x17000
   113dc:	ldr	pc, [ip, #3264]!	; 0xcc0

000113e0 <rb_read@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #94208	; 0x17000
   113e8:	ldr	pc, [ip, #3256]!	; 0xcb8

000113ec <rb_strcasecmp@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #94208	; 0x17000
   113f4:	ldr	pc, [ip, #3248]!	; 0xcb0

000113f8 <getaddrinfo@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #94208	; 0x17000
   11400:	ldr	pc, [ip, #3240]!	; 0xca8

00011404 <rb_dictionary_foreach_start@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #94208	; 0x17000
   1140c:	ldr	pc, [ip, #3232]!	; 0xca0

00011410 <rb_inet_pton_sock@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #94208	; 0x17000
   11418:	ldr	pc, [ip, #3224]!	; 0xc98

0001141c <strlen@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #94208	; 0x17000
   11424:	ldr	pc, [ip, #3216]!	; 0xc90

00011428 <rb_current_time@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #94208	; 0x17000
   11430:	ldr	pc, [ip, #3208]!	; 0xc88

00011434 <rb_dictionary_delete@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #94208	; 0x17000
   1143c:	ldr	pc, [ip, #3200]!	; 0xc80

00011440 <memcpy@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #94208	; 0x17000
   11448:	ldr	pc, [ip, #3192]!	; 0xc78

0001144c <rb_free_rb_dlink_node@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #94208	; 0x17000
   11454:	ldr	pc, [ip, #3184]!	; 0xc70

00011458 <rb_close@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #94208	; 0x17000
   11460:	ldr	pc, [ip, #3176]!	; 0xc68

00011464 <strtol@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #94208	; 0x17000
   1146c:	ldr	pc, [ip, #3168]!	; 0xc60

00011470 <sigaddset@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #94208	; 0x17000
   11478:	ldr	pc, [ip, #3160]!	; 0xc58

0001147c <strcpy@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #94208	; 0x17000
   11484:	ldr	pc, [ip, #3152]!	; 0xc50

00011488 <atoi@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #94208	; 0x17000
   11490:	ldr	pc, [ip, #3144]!	; 0xc48

00011494 <rb_dictionary_destroy@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #94208	; 0x17000
   1149c:	ldr	pc, [ip, #3136]!	; 0xc40

000114a0 <bind@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #94208	; 0x17000
   114a8:	ldr	pc, [ip, #3128]!	; 0xc38

000114ac <strstr@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #94208	; 0x17000
   114b4:	ldr	pc, [ip, #3120]!	; 0xc30

000114b8 <rb_init_prng@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #94208	; 0x17000
   114c0:	ldr	pc, [ip, #3112]!	; 0xc28

000114c4 <rb_dictionary_retrieve@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #94208	; 0x17000
   114cc:	ldr	pc, [ip, #3104]!	; 0xc20

000114d0 <rb_outofmemory@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #94208	; 0x17000
   114d8:	ldr	pc, [ip, #3096]!	; 0xc18

000114dc <__ctype_b_loc@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #94208	; 0x17000
   114e4:	ldr	pc, [ip, #3088]!	; 0xc10

000114e8 <rb_dictionary_add@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #94208	; 0x17000
   114f0:	ldr	pc, [ip, #3080]!	; 0xc08

000114f4 <rb_set_time@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #94208	; 0x17000
   114fc:	ldr	pc, [ip, #3072]!	; 0xc00

00011500 <malloc@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #94208	; 0x17000
   11508:	ldr	pc, [ip, #3064]!	; 0xbf8

0001150c <sigaction@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #94208	; 0x17000
   11514:	ldr	pc, [ip, #3056]!	; 0xbf0

00011518 <rb_helper_read@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #94208	; 0x17000
   11520:	ldr	pc, [ip, #3048]!	; 0xbe8

00011524 <rb_inet_ntop_sock@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #94208	; 0x17000
   1152c:	ldr	pc, [ip, #3040]!	; 0xbe0

00011530 <rb_dictionary_find@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #94208	; 0x17000
   11538:	ldr	pc, [ip, #3032]!	; 0xbd8

0001153c <rb_dictionary_create@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #94208	; 0x17000
   11544:	ldr	pc, [ip, #3024]!	; 0xbd0

00011548 <memmove@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #94208	; 0x17000
   11550:	ldr	pc, [ip, #3016]!	; 0xbc8

00011554 <rb_accept_tcp@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #94208	; 0x17000
   1155c:	ldr	pc, [ip, #3008]!	; 0xbc0

00011560 <rb_helper_write@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #94208	; 0x17000
   11568:	ldr	pc, [ip, #3000]!	; 0xbb8

0001156c <rb_event_add@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #94208	; 0x17000
   11574:	ldr	pc, [ip, #2992]!	; 0xbb0

00011578 <rb_get_random@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #94208	; 0x17000
   11580:	ldr	pc, [ip, #2984]!	; 0xba8

00011584 <rb_make_rb_dlink_node@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #94208	; 0x17000
   1158c:	ldr	pc, [ip, #2976]!	; 0xba0

00011590 <snprintf@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #94208	; 0x17000
   11598:	ldr	pc, [ip, #2968]!	; 0xb98

0001159c <rb_listen@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #94208	; 0x17000
   115a4:	ldr	pc, [ip, #2960]!	; 0xb90

000115a8 <strncmp@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #94208	; 0x17000
   115b0:	ldr	pc, [ip, #2952]!	; 0xb88

000115b4 <recvfrom@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #94208	; 0x17000
   115bc:	ldr	pc, [ip, #2944]!	; 0xb80

000115c0 <setsockopt@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #94208	; 0x17000
   115c8:	ldr	pc, [ip, #2936]!	; 0xb78

000115cc <strpbrk@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #94208	; 0x17000
   115d4:	ldr	pc, [ip, #2928]!	; 0xb70

000115d8 <strcmp@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #94208	; 0x17000
   115e0:	ldr	pc, [ip, #2920]!	; 0xb68

000115e4 <exit@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #94208	; 0x17000
   115ec:	ldr	pc, [ip, #2912]!	; 0xb60

000115f0 <__errno_location@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #94208	; 0x17000
   115f8:	ldr	pc, [ip, #2904]!	; 0xb58

000115fc <sprintf@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #94208	; 0x17000
   11604:	ldr	pc, [ip, #2896]!	; 0xb50

00011608 <fputs@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #94208	; 0x17000
   11610:	ldr	pc, [ip, #2888]!	; 0xb48

Disassembly of section .text:

00011614 <.text>:
   11614:	push	{r0, r1, r2, r3, r4, lr}
   11618:	mov	r4, #0
   1161c:	bl	1183c <fputs@plt+0x234>
   11620:	ldr	r5, [pc, #132]	; 116ac <fputs@plt+0xa4>
   11624:	mov	r3, #256	; 0x100
   11628:	mov	r2, r4
   1162c:	str	r4, [sp]
   11630:	ldr	r1, [pc, #120]	; 116b0 <fputs@plt+0xa8>
   11634:	str	r3, [sp, #4]
   11638:	ldr	r0, [pc, #116]	; 116b4 <fputs@plt+0xac>
   1163c:	str	r3, [sp, #8]
   11640:	str	r3, [sp, #12]
   11644:	mov	r3, r4
   11648:	bl	11344 <rb_helper_child@plt>
   1164c:	cmp	r0, r4
   11650:	str	r0, [r5, #44]	; 0x2c
   11654:	bne	11670 <fputs@plt+0x68>
   11658:	ldr	r3, [pc, #88]	; 116b8 <fputs@plt+0xb0>
   1165c:	ldr	r0, [pc, #88]	; 116bc <fputs@plt+0xb4>
   11660:	ldr	r1, [r3]
   11664:	bl	11608 <fputs@plt>
   11668:	mov	r0, #1
   1166c:	bl	115e4 <exit@plt>
   11670:	bl	114f4 <rb_set_time@plt>
   11674:	bl	1183c <fputs@plt+0x234>
   11678:	ldr	r1, [pc, #64]	; 116c0 <fputs@plt+0xb8>
   1167c:	ldr	r0, [pc, #64]	; 116c4 <fputs@plt+0xbc>
   11680:	bl	1153c <rb_dictionary_create@plt>
   11684:	ldr	r3, [pc, #60]	; 116c8 <fputs@plt+0xc0>
   11688:	str	r0, [r3]
   1168c:	bl	12fe8 <fputs@plt+0x19e0>
   11690:	bl	1239c <fputs@plt+0xd94>
   11694:	mov	r1, #1
   11698:	mov	r0, r4
   1169c:	bl	114b8 <rb_init_prng@plt>
   116a0:	mov	r1, r4
   116a4:	ldr	r0, [r5, #44]	; 0x2c
   116a8:	bl	1123c <rb_helper_loop@plt>
   116ac:	andeq	r9, r2, r0, asr pc
   116b0:	andeq	r1, r1, r0, asr #15
   116b4:	andeq	r1, r1, ip, asr #15
   116b8:	andeq	r9, r2, r8, asr #30
   116bc:	andeq	r7, r1, r3, lsl r2
   116c0:	andeq	r1, r1, ip, ror #7
   116c4:	andeq	r7, r1, r2, asr #4
   116c8:	andeq	lr, r2, r4, ror r1
   116cc:	mov	fp, #0
   116d0:	mov	lr, #0
   116d4:	pop	{r1}		; (ldr r1, [sp], #4)
   116d8:	mov	r2, sp
   116dc:	push	{r2}		; (str r2, [sp, #-4]!)
   116e0:	push	{r0}		; (str r0, [sp, #-4]!)
   116e4:	ldr	ip, [pc, #16]	; 116fc <fputs@plt+0xf4>
   116e8:	push	{ip}		; (str ip, [sp, #-4]!)
   116ec:	ldr	r0, [pc, #12]	; 11700 <fputs@plt+0xf8>
   116f0:	ldr	r3, [pc, #12]	; 11704 <fputs@plt+0xfc>
   116f4:	bl	1129c <__libc_start_main@plt>
   116f8:	bl	11248 <abort@plt>
   116fc:	strheq	r7, [r1], -ip
   11700:	andeq	r1, r1, r4, lsl r6
   11704:	andeq	r7, r1, ip, asr r0
   11708:	ldr	r3, [pc, #20]	; 11724 <fputs@plt+0x11c>
   1170c:	ldr	r2, [pc, #20]	; 11728 <fputs@plt+0x120>
   11710:	add	r3, pc, r3
   11714:	ldr	r2, [r3, r2]
   11718:	cmp	r2, #0
   1171c:	bxeq	lr
   11720:	b	112cc <__gmon_start__@plt>
   11724:	andeq	r7, r1, r8, ror #17
   11728:	andeq	r0, r0, ip, asr r1
   1172c:	ldr	r0, [pc, #24]	; 1174c <fputs@plt+0x144>
   11730:	ldr	r3, [pc, #24]	; 11750 <fputs@plt+0x148>
   11734:	cmp	r3, r0
   11738:	bxeq	lr
   1173c:	ldr	r3, [pc, #16]	; 11754 <fputs@plt+0x14c>
   11740:	cmp	r3, #0
   11744:	bxeq	lr
   11748:	bx	r3
   1174c:	andeq	r9, r2, r4, asr #30
   11750:	andeq	r9, r2, r4, asr #30
   11754:	andeq	r0, r0, r0
   11758:	ldr	r0, [pc, #36]	; 11784 <fputs@plt+0x17c>
   1175c:	ldr	r1, [pc, #36]	; 11788 <fputs@plt+0x180>
   11760:	sub	r1, r1, r0
   11764:	asr	r1, r1, #2
   11768:	add	r1, r1, r1, lsr #31
   1176c:	asrs	r1, r1, #1
   11770:	bxeq	lr
   11774:	ldr	r3, [pc, #16]	; 1178c <fputs@plt+0x184>
   11778:	cmp	r3, #0
   1177c:	bxeq	lr
   11780:	bx	r3
   11784:	andeq	r9, r2, r4, asr #30
   11788:	andeq	r9, r2, r4, asr #30
   1178c:	andeq	r0, r0, r0
   11790:	push	{r4, lr}
   11794:	ldr	r4, [pc, #24]	; 117b4 <fputs@plt+0x1ac>
   11798:	ldrb	r3, [r4]
   1179c:	cmp	r3, #0
   117a0:	popne	{r4, pc}
   117a4:	bl	1172c <fputs@plt+0x124>
   117a8:	mov	r3, #1
   117ac:	strb	r3, [r4]
   117b0:	pop	{r4, pc}
   117b4:	andeq	r9, r2, ip, asr #30
   117b8:	b	11758 <fputs@plt+0x150>
   117bc:	bx	lr
   117c0:	push	{r4, lr}
   117c4:	mov	r0, #1
   117c8:	bl	115e4 <exit@plt>
   117cc:	push	{r4, r5, r6, r7, r8, lr}
   117d0:	mov	r6, r0
   117d4:	ldr	r4, [pc, #84]	; 11830 <fputs@plt+0x228>
   117d8:	ldr	r5, [pc, #84]	; 11834 <fputs@plt+0x22c>
   117dc:	ldr	r7, [pc, #84]	; 11838 <fputs@plt+0x230>
   117e0:	mov	r2, #16384	; 0x4000
   117e4:	mov	r1, r4
   117e8:	mov	r0, r6
   117ec:	bl	11518 <rb_helper_read@plt>
   117f0:	cmp	r0, #0
   117f4:	pople	{r4, r5, r6, r7, r8, pc}
   117f8:	mov	r2, #10
   117fc:	mov	r0, r4
   11800:	ldr	r1, [pc, #44]	; 11834 <fputs@plt+0x22c>
   11804:	bl	113d4 <rb_string_to_array@plt>
   11808:	cmp	r0, #0
   1180c:	ble	117e0 <fputs@plt+0x1d8>
   11810:	ldr	r3, [r5]
   11814:	ldrb	r3, [r3]
   11818:	ldr	r3, [r7, r3, lsl #2]
   1181c:	cmp	r3, #0
   11820:	beq	117e0 <fputs@plt+0x1d8>
   11824:	mov	r1, r5
   11828:	blx	r3
   1182c:	b	117e0 <fputs@plt+0x1d8>
   11830:	andeq	r9, r2, r0, lsl #31
   11834:	andeq	r9, r2, r0, asr pc
   11838:	andeq	r9, r2, r8, ror #2
   1183c:	push	{r4, lr}
   11840:	mov	r3, #1
   11844:	sub	sp, sp, #144	; 0x90
   11848:	mov	r4, #0
   1184c:	add	r0, sp, #8
   11850:	str	r3, [sp, #4]
   11854:	str	r4, [sp, #136]	; 0x88
   11858:	bl	11224 <sigemptyset@plt>
   1185c:	mov	r1, #13
   11860:	add	r0, sp, #8
   11864:	bl	11470 <sigaddset@plt>
   11868:	mov	r1, #14
   1186c:	add	r0, sp, #8
   11870:	bl	11470 <sigaddset@plt>
   11874:	mov	r1, #5
   11878:	add	r0, sp, #8
   1187c:	bl	11470 <sigaddset@plt>
   11880:	mov	r1, #28
   11884:	add	r0, sp, #8
   11888:	bl	11470 <sigaddset@plt>
   1188c:	mov	r2, r4
   11890:	add	r1, sp, #4
   11894:	mov	r0, #28
   11898:	bl	1150c <sigaction@plt>
   1189c:	mov	r2, r4
   118a0:	add	r1, sp, #4
   118a4:	mov	r0, #13
   118a8:	bl	1150c <sigaction@plt>
   118ac:	mov	r2, r4
   118b0:	add	r1, sp, #4
   118b4:	mov	r0, #5
   118b8:	bl	1150c <sigaction@plt>
   118bc:	ldr	r3, [pc, #24]	; 118dc <fputs@plt+0x2d4>
   118c0:	mov	r2, r4
   118c4:	add	r1, sp, #4
   118c8:	mov	r0, #14
   118cc:	str	r3, [sp, #4]
   118d0:	bl	1150c <sigaction@plt>
   118d4:	add	sp, sp, #144	; 0x90
   118d8:	pop	{r4, pc}
   118dc:			; <UNDEFINED> instruction: 0x000117bc
   118e0:	cmp	r0, #2
   118e4:	bgt	11918 <fputs@plt+0x310>
   118e8:	push	{r4, r5, r6, lr}
   118ec:	mov	r4, #0
   118f0:	ldr	r5, [pc, #64]	; 11938 <fputs@plt+0x330>
   118f4:	ldr	r3, [r5], #4
   118f8:	cmp	r3, #0
   118fc:	beq	11908 <fputs@plt+0x300>
   11900:	mov	r0, #0
   11904:	blx	r3
   11908:	add	r4, r4, #1
   1190c:	cmp	r4, #256	; 0x100
   11910:	bne	118f4 <fputs@plt+0x2ec>
   11914:	pop	{r4, r5, r6, pc}
   11918:	ldr	r3, [r1, #4]
   1191c:	ldrb	r0, [r3]
   11920:	ldr	r3, [pc, #20]	; 1193c <fputs@plt+0x334>
   11924:	add	r3, r3, r0, lsl #2
   11928:	ldr	r3, [r3, #1024]	; 0x400
   1192c:	cmp	r3, #0
   11930:	bxeq	lr
   11934:	bx	r3
   11938:	andeq	r9, r2, r8, ror #10
   1193c:	andeq	r9, r2, r8, ror #2
   11940:	cmp	r0, #2
   11944:	bgt	11958 <fputs@plt+0x350>
   11948:	ldr	r1, [pc, #124]	; 119cc <fputs@plt+0x3c4>
   1194c:	mov	r2, r0
   11950:	mov	r0, #67	; 0x43
   11954:	b	12080 <fputs@plt+0xa78>
   11958:	push	{r4, r6, r7, lr}
   1195c:	mov	r4, r1
   11960:	mov	r2, #16
   11964:	mov	r1, #0
   11968:	ldr	r0, [r4, #4]
   1196c:	bl	113b0 <strtoull@plt>
   11970:	mov	r3, #0
   11974:	mvn	r2, #0
   11978:	cmp	r1, r3
   1197c:	mov	r6, r0
   11980:	cmpeq	r0, r2
   11984:	mov	r7, r1
   11988:	bls	119a0 <fputs@plt+0x398>
   1198c:	ldr	r1, [pc, #60]	; 119d0 <fputs@plt+0x3c8>
   11990:	mov	r0, #67	; 0x43
   11994:	ldr	r2, [r4, #4]
   11998:	pop	{r4, r6, r7, lr}
   1199c:	b	11954 <fputs@plt+0x34c>
   119a0:	ldr	r3, [r4, #8]
   119a4:	ldrb	r2, [r3]
   119a8:	ldr	r3, [pc, #36]	; 119d4 <fputs@plt+0x3cc>
   119ac:	add	r3, r3, r2, lsl #2
   119b0:	ldr	r3, [r3, #2048]	; 0x800
   119b4:	cmp	r3, #0
   119b8:	popeq	{r4, r6, r7, pc}
   119bc:	mov	r0, r6
   119c0:	mov	r1, r2
   119c4:	pop	{r4, r6, r7, lr}
   119c8:	bx	r3
   119cc:	andeq	r7, r1, ip, asr #1
   119d0:	andeq	r7, r1, r7, lsl r1
   119d4:	andeq	r9, r2, r8, ror #2
   119d8:	cmp	r0, #1
   119dc:	mov	r2, r0
   119e0:	ldrle	r1, [pc, #120]	; 11a60 <fputs@plt+0x458>
   119e4:	movle	r0, #67	; 0x43
   119e8:	ble	11a20 <fputs@plt+0x418>
   119ec:	push	{r4, r5, r6, lr}
   119f0:	mov	r5, r1
   119f4:	mov	r4, r2
   119f8:	ldr	r3, [pc, #100]	; 11a64 <fputs@plt+0x45c>
   119fc:	ldr	r1, [r1, #4]
   11a00:	ldr	r0, [r3]
   11a04:	bl	114c4 <rb_dictionary_retrieve@plt>
   11a08:	cmp	r0, #0
   11a0c:	bne	11a24 <fputs@plt+0x41c>
   11a10:	ldr	r1, [pc, #80]	; 11a68 <fputs@plt+0x460>
   11a14:	mov	r0, #67	; 0x43
   11a18:	ldr	r2, [r5, #4]
   11a1c:	pop	{r4, r5, r6, lr}
   11a20:	b	12080 <fputs@plt+0xa78>
   11a24:	ldr	r2, [r0, #4]
   11a28:	sub	r3, r4, #1
   11a2c:	cmp	r3, r2
   11a30:	bgt	11a48 <fputs@plt+0x440>
   11a34:	mov	r3, r4
   11a38:	ldr	r1, [pc, #44]	; 11a6c <fputs@plt+0x464>
   11a3c:	mov	r0, #67	; 0x43
   11a40:	pop	{r4, r5, r6, lr}
   11a44:	b	12080 <fputs@plt+0xa78>
   11a48:	add	r2, r5, #8
   11a4c:	sub	r1, r4, #2
   11a50:	ldr	r3, [r0, #8]
   11a54:	ldr	r0, [r5, #4]
   11a58:	pop	{r4, r5, r6, lr}
   11a5c:	bx	r3
   11a60:	andeq	r7, r1, r9, asr #2
   11a64:	andeq	lr, r2, r4, ror r1
   11a68:	muleq	r1, r7, r1
   11a6c:	andeq	r7, r1, r4, asr #3
   11a70:	cmp	r0, #0
   11a74:	bxeq	lr
   11a78:	b	113c8 <free@plt>
   11a7c:	push	{r4, r5, lr}
   11a80:	mov	r3, #42	; 0x2a
   11a84:	sub	sp, sp, #60	; 0x3c
   11a88:	mov	r4, r0
   11a8c:	mov	r5, r1
   11a90:	mov	r2, #49	; 0x31
   11a94:	mov	r1, #0
   11a98:	add	r0, sp, #4
   11a9c:	str	r3, [sp]
   11aa0:	bl	11368 <memset@plt>
   11aa4:	cmp	r4, #0
   11aa8:	bne	11ac0 <fputs@plt+0x4b8>
   11aac:	ldr	r1, [pc, #216]	; 11b8c <fputs@plt+0x584>
   11ab0:	mov	r0, #67	; 0x43
   11ab4:	bl	12080 <fputs@plt+0xa78>
   11ab8:	mov	r0, #2
   11abc:	bl	115e4 <exit@plt>
   11ac0:	cmp	r5, #0
   11ac4:	beq	11b08 <fputs@plt+0x500>
   11ac8:	ldr	r2, [r4, #8]
   11acc:	cmp	r2, #52	; 0x34
   11ad0:	beq	11aec <fputs@plt+0x4e4>
   11ad4:	cmp	r2, #54	; 0x36
   11ad8:	beq	11b40 <fputs@plt+0x538>
   11adc:	ldr	r1, [pc, #172]	; 11b90 <fputs@plt+0x588>
   11ae0:	mov	r0, #67	; 0x43
   11ae4:	bl	12080 <fputs@plt+0xa78>
   11ae8:	b	11ab8 <fputs@plt+0x4b0>
   11aec:	ldrh	r3, [r5, #4]
   11af0:	cmp	r3, #2
   11af4:	bne	11b08 <fputs@plt+0x500>
   11af8:	mov	r2, #53	; 0x35
   11afc:	mov	r1, sp
   11b00:	add	r0, r5, #4
   11b04:	bl	11524 <rb_inet_ntop_sock@plt>
   11b08:	ldr	r5, [r4, #152]	; 0x98
   11b0c:	cmp	r5, #0
   11b10:	beq	11b30 <fputs@plt+0x528>
   11b14:	ldrb	r1, [sp]
   11b18:	mov	r0, sp
   11b1c:	ldr	r2, [r4, #8]
   11b20:	ldr	r3, [r4, #156]	; 0x9c
   11b24:	subs	r1, r1, #42	; 0x2a
   11b28:	movne	r1, #1
   11b2c:	blx	r5
   11b30:	mov	r0, r4
   11b34:	bl	11a70 <fputs@plt+0x468>
   11b38:	add	sp, sp, #60	; 0x3c
   11b3c:	pop	{r4, r5, pc}
   11b40:	ldrh	r3, [r5, #4]
   11b44:	cmp	r3, #10
   11b48:	bne	11b08 <fputs@plt+0x500>
   11b4c:	mov	r2, #53	; 0x35
   11b50:	mov	r1, sp
   11b54:	add	r0, r5, #4
   11b58:	bl	11524 <rb_inet_ntop_sock@plt>
   11b5c:	ldrb	r3, [sp]
   11b60:	cmp	r3, #58	; 0x3a
   11b64:	bne	11b08 <fputs@plt+0x500>
   11b68:	mov	r0, sp
   11b6c:	bl	1141c <strlen@plt>
   11b70:	mov	r2, r0
   11b74:	mov	r1, sp
   11b78:	add	r0, sp, #1
   11b7c:	bl	11548 <memmove@plt>
   11b80:	mov	r3, #48	; 0x30
   11b84:	strb	r3, [sp]
   11b88:	b	11b08 <fputs@plt+0x500>
   11b8c:	andeq	r7, r1, r9, asr r2
   11b90:	andeq	r7, r1, r5, lsl #5
   11b94:	push	{r4, r5, r6, lr}
   11b98:	subs	r5, r0, #0
   11b9c:	bne	11bb4 <fputs@plt+0x5ac>
   11ba0:	ldr	r1, [pc, #152]	; 11c40 <fputs@plt+0x638>
   11ba4:	mov	r0, #67	; 0x43
   11ba8:	bl	12080 <fputs@plt+0xa78>
   11bac:	mov	r0, #2
   11bb0:	bl	115e4 <exit@plt>
   11bb4:	cmp	r1, #0
   11bb8:	mov	r4, r1
   11bbc:	beq	11be0 <fputs@plt+0x5d8>
   11bc0:	ldr	r2, [r5, #8]
   11bc4:	cmp	r2, #82	; 0x52
   11bc8:	bne	11c10 <fputs@plt+0x608>
   11bcc:	ldr	r3, [r1, #8]
   11bd0:	ldr	r2, [r5, #16]
   11bd4:	cmp	r2, r3
   11bd8:	ldreq	r4, [r4]
   11bdc:	movne	r4, #0
   11be0:	ldr	r6, [r5, #152]	; 0x98
   11be4:	cmp	r6, #0
   11be8:	beq	11c04 <fputs@plt+0x5fc>
   11bec:	adds	r1, r4, #0
   11bf0:	mov	r0, r4
   11bf4:	ldr	r2, [r5, #8]
   11bf8:	movne	r1, #1
   11bfc:	ldr	r3, [r5, #156]	; 0x9c
   11c00:	blx	r6
   11c04:	mov	r0, r5
   11c08:	pop	{r4, r5, r6, lr}
   11c0c:	b	11a70 <fputs@plt+0x468>
   11c10:	cmp	r2, #83	; 0x53
   11c14:	bne	11c30 <fputs@plt+0x628>
   11c18:	mov	r2, #16
   11c1c:	add	r1, r1, #12
   11c20:	add	r0, r5, #20
   11c24:	bl	11290 <memcmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	b	11bd8 <fputs@plt+0x5d0>
   11c30:	ldr	r1, [pc, #12]	; 11c44 <fputs@plt+0x63c>
   11c34:	mov	r0, #67	; 0x43
   11c38:	bl	12080 <fputs@plt+0xa78>
   11c3c:	b	11bac <fputs@plt+0x5a4>
   11c40:			; <UNDEFINED> instruction: 0x000172b8
   11c44:	andeq	r7, r1, sl, ror #5
   11c48:	cmp	r2, #0
   11c4c:	cmpne	r3, #0
   11c50:	push	{r0, r1, r4, lr}
   11c54:	mov	r4, r3
   11c58:	bne	11c70 <fputs@plt+0x668>
   11c5c:	mov	r0, #67	; 0x43
   11c60:	ldr	r1, [pc, #92]	; 11cc4 <fputs@plt+0x6bc>
   11c64:	bl	12080 <fputs@plt+0xa78>
   11c68:	mov	r0, #2
   11c6c:	bl	115e4 <exit@plt>
   11c70:	mov	r3, r2
   11c74:	ldr	r2, [pc, #76]	; 11cc8 <fputs@plt+0x6c0>
   11c78:	eor	r1, r1, #1
   11c7c:	cmp	r0, #0
   11c80:	orreq	r1, r1, #1
   11c84:	mov	ip, r0
   11c88:	cmp	r1, #0
   11c8c:	ldr	r0, [r2]
   11c90:	beq	11cb0 <fputs@plt+0x6a8>
   11c94:	mov	r2, r4
   11c98:	ldr	r1, [pc, #44]	; 11ccc <fputs@plt+0x6c4>
   11c9c:	bl	11560 <rb_helper_write@plt>
   11ca0:	mov	r0, r4
   11ca4:	add	sp, sp, #8
   11ca8:	pop	{r4, lr}
   11cac:	b	11a70 <fputs@plt+0x468>
   11cb0:	mov	r2, r4
   11cb4:	ldr	r1, [pc, #20]	; 11cd0 <fputs@plt+0x6c8>
   11cb8:	str	ip, [sp]
   11cbc:	bl	11560 <rb_helper_write@plt>
   11cc0:	b	11ca0 <fputs@plt+0x698>
   11cc4:	andeq	r7, r1, r3, lsr #6
   11cc8:	andeq	r9, r2, ip, ror pc
   11ccc:	andeq	r7, r1, lr, asr #6
   11cd0:	andeq	r7, r1, sl, asr r3
   11cd4:	push	{r4, r5, r6, r7, r8, lr}
   11cd8:	mov	r6, r0
   11cdc:	mov	r5, r1
   11ce0:	mov	r0, #1
   11ce4:	mov	r1, #160	; 0xa0
   11ce8:	mov	r8, r2
   11cec:	mov	r7, r3
   11cf0:	bl	11338 <calloc@plt>
   11cf4:	subs	r4, r0, #0
   11cf8:	bne	11d00 <fputs@plt+0x6f8>
   11cfc:	bl	114d0 <rb_outofmemory@plt>
   11d00:	cmp	r5, #2
   11d04:	moveq	r3, #52	; 0x34
   11d08:	moveq	r2, #1
   11d0c:	streq	r3, [r4, #8]
   11d10:	beq	11d38 <fputs@plt+0x730>
   11d14:	cmp	r5, #10
   11d18:	moveq	r3, #54	; 0x36
   11d1c:	moveq	r2, #28
   11d20:	streq	r3, [r4, #8]
   11d24:	beq	11d38 <fputs@plt+0x730>
   11d28:	mov	r4, #0
   11d2c:	bl	11a70 <fputs@plt+0x468>
   11d30:	mov	r0, r4
   11d34:	pop	{r4, r5, r6, r7, r8, pc}
   11d38:	ldr	r0, [pc, #60]	; 11d7c <fputs@plt+0x774>
   11d3c:	str	r4, [r4]
   11d40:	str	r8, [r4, #152]	; 0x98
   11d44:	str	r7, [r4, #156]	; 0x9c
   11d48:	ldm	r0, {r1, ip}
   11d4c:	adds	lr, r1, #1
   11d50:	str	r1, [r4, #144]	; 0x90
   11d54:	mov	r1, r4
   11d58:	adc	r3, ip, #0
   11d5c:	str	ip, [r4, #148]	; 0x94
   11d60:	str	lr, [r0]
   11d64:	str	r3, [r0, #4]
   11d68:	mov	r0, r6
   11d6c:	ldr	r3, [pc, #12]	; 11d80 <fputs@plt+0x778>
   11d70:	str	r3, [r4, #4]
   11d74:	bl	13018 <fputs@plt+0x1a10>
   11d78:	b	11d30 <fputs@plt+0x728>
   11d7c:	andeq	sp, r2, r0, lsl #31
   11d80:	andeq	r1, r1, ip, ror sl
   11d84:	push	{r4, r5, r6, r7, r8, lr}
   11d88:	mov	r8, r0
   11d8c:	mov	r7, r1
   11d90:	mov	r0, #1
   11d94:	mov	r1, #160	; 0xa0
   11d98:	mov	r6, r2
   11d9c:	bl	11338 <calloc@plt>
   11da0:	subs	r4, r0, #0
   11da4:	bne	11dac <fputs@plt+0x7a4>
   11da8:	bl	114d0 <rb_outofmemory@plt>
   11dac:	add	r5, r4, #12
   11db0:	mov	r0, r8
   11db4:	mov	r1, r5
   11db8:	bl	11410 <rb_inet_pton_sock@plt>
   11dbc:	subs	r8, r0, #0
   11dc0:	bne	11dd4 <fputs@plt+0x7cc>
   11dc4:	mov	r0, r4
   11dc8:	mov	r4, #0
   11dcc:	bl	11a70 <fputs@plt+0x468>
   11dd0:	b	11e38 <fputs@plt+0x830>
   11dd4:	ldrh	r3, [r4, #12]
   11dd8:	cmp	r3, #2
   11ddc:	moveq	r3, #82	; 0x52
   11de0:	beq	11df0 <fputs@plt+0x7e8>
   11de4:	cmp	r3, #10
   11de8:	bne	11dc4 <fputs@plt+0x7bc>
   11dec:	mov	r3, #83	; 0x53
   11df0:	ldr	r2, [pc, #72]	; 11e40 <fputs@plt+0x838>
   11df4:	str	r4, [r4]
   11df8:	str	r3, [r4, #8]
   11dfc:	str	r7, [r4, #152]	; 0x98
   11e00:	str	r6, [r4, #156]	; 0x9c
   11e04:	ldr	r3, [r2]
   11e08:	ldr	r1, [r2, #4]
   11e0c:	adds	ip, r3, #1
   11e10:	str	r3, [r4, #144]	; 0x90
   11e14:	ldr	r3, [pc, #40]	; 11e44 <fputs@plt+0x83c>
   11e18:	adc	r0, r1, #0
   11e1c:	str	ip, [r2]
   11e20:	str	r0, [r2, #4]
   11e24:	mov	r0, r5
   11e28:	str	r3, [r4, #4]
   11e2c:	str	r1, [r4, #148]	; 0x94
   11e30:	mov	r1, r4
   11e34:	bl	138d8 <fputs@plt+0x22d0>
   11e38:	mov	r0, r4
   11e3c:	pop	{r4, r5, r6, r7, r8, pc}
   11e40:	andeq	sp, r2, r0, lsl #31
   11e44:	muleq	r1, r4, fp
   11e48:	mov	r3, #0
   11e4c:	str	r3, [r0, #152]	; 0x98
   11e50:	str	r3, [r0, #156]	; 0x9c
   11e54:	bx	lr
   11e58:	push	{r4, r5, r6, lr}
   11e5c:	mov	r5, r1
   11e60:	ldr	r4, [r1, #4]
   11e64:	mov	r0, r4
   11e68:	bl	1141c <strlen@plt>
   11e6c:	add	r0, r0, #1
   11e70:	bl	11500 <malloc@plt>
   11e74:	subs	r6, r0, #0
   11e78:	bne	11e80 <fputs@plt+0x878>
   11e7c:	bl	114d0 <rb_outofmemory@plt>
   11e80:	mov	r1, r4
   11e84:	bl	1147c <strcpy@plt>
   11e88:	ldr	r3, [r5, #8]
   11e8c:	ldr	r0, [r5, #12]
   11e90:	ldrb	r4, [r3]
   11e94:	cmp	r4, #54	; 0x36
   11e98:	beq	11ee0 <fputs@plt+0x8d8>
   11e9c:	bhi	11ec4 <fputs@plt+0x8bc>
   11ea0:	cmp	r4, #52	; 0x34
   11ea4:	moveq	r1, #2
   11ea8:	beq	11ee4 <fputs@plt+0x8dc>
   11eac:	mov	r0, #67	; 0x43
   11eb0:	mov	r2, r4
   11eb4:	ldr	r1, [pc, #76]	; 11f08 <fputs@plt+0x900>
   11eb8:	bl	12080 <fputs@plt+0xa78>
   11ebc:	mov	r0, #2
   11ec0:	bl	115e4 <exit@plt>
   11ec4:	sub	r3, r4, #82	; 0x52
   11ec8:	cmp	r3, #1
   11ecc:	bhi	11eac <fputs@plt+0x8a4>
   11ed0:	mov	r2, r6
   11ed4:	ldr	r1, [pc, #48]	; 11f0c <fputs@plt+0x904>
   11ed8:	bl	11d84 <fputs@plt+0x77c>
   11edc:	b	11ef0 <fputs@plt+0x8e8>
   11ee0:	mov	r1, #10
   11ee4:	mov	r3, r6
   11ee8:	ldr	r2, [pc, #28]	; 11f0c <fputs@plt+0x904>
   11eec:	bl	11cd4 <fputs@plt+0x6cc>
   11ef0:	subs	r3, r0, #0
   11ef4:	popne	{r4, r5, r6, pc}
   11ef8:	mov	r2, r4
   11efc:	mov	r1, r3
   11f00:	pop	{r4, r5, r6, lr}
   11f04:	b	11c48 <fputs@plt+0x640>
   11f08:	andeq	r7, r1, r7, ror #6
   11f0c:	andeq	r1, r1, r8, asr #24
   11f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f14:	mov	r7, r0
   11f18:	sub	sp, sp, #604	; 0x25c
   11f1c:	mov	r8, r1
   11f20:	ldr	r6, [pc, #220]	; 12004 <fputs@plt+0x9fc>
   11f24:	ldr	r3, [r6]
   11f28:	cmp	r3, #0
   11f2c:	bne	11ff0 <fputs@plt+0x9e8>
   11f30:	ldr	r1, [pc, #208]	; 12008 <fputs@plt+0xa00>
   11f34:	mov	r0, #67	; 0x43
   11f38:	bl	12080 <fputs@plt+0xa78>
   11f3c:	ldr	r2, [pc, #200]	; 1200c <fputs@plt+0xa04>
   11f40:	mov	r0, r7
   11f44:	mov	r1, r8
   11f48:	bl	1213c <fputs@plt+0xb34>
   11f4c:	mov	r0, #2
   11f50:	bl	115e4 <exit@plt>
   11f54:	mov	r2, #53	; 0x35
   11f58:	add	r1, sp, #4
   11f5c:	add	r0, sl, r5, lsl #7
   11f60:	bl	11524 <rb_inet_ntop_sock@plt>
   11f64:	ldrb	r3, [sp, #4]
   11f68:	cmp	r3, #0
   11f6c:	bne	11f84 <fputs@plt+0x97c>
   11f70:	ldr	r1, [pc, #152]	; 12010 <fputs@plt+0xa08>
   11f74:	mov	r0, #67	; 0x43
   11f78:	bl	12080 <fputs@plt+0xa78>
   11f7c:	ldr	r2, [pc, #144]	; 12014 <fputs@plt+0xa0c>
   11f80:	b	11f40 <fputs@plt+0x938>
   11f84:	add	r0, sp, #4
   11f88:	add	r5, r5, #1
   11f8c:	bl	1141c <strlen@plt>
   11f90:	mov	r9, r0
   11f94:	add	r0, sp, #60	; 0x3c
   11f98:	add	r9, r9, #1
   11f9c:	rsb	r1, r4, #540	; 0x21c
   11fa0:	add	r0, r0, r4
   11fa4:	add	r3, sp, #4
   11fa8:	mov	r2, fp
   11fac:	add	r4, r4, r9
   11fb0:	bl	11590 <snprintf@plt>
   11fb4:	ldr	r3, [r6]
   11fb8:	cmp	r3, r5
   11fbc:	bgt	11f54 <fputs@plt+0x94c>
   11fc0:	cmp	r4, #0
   11fc4:	ldr	r2, [pc, #76]	; 12018 <fputs@plt+0xa10>
   11fc8:	mov	r1, r8
   11fcc:	addne	r3, sp, #600	; 0x258
   11fd0:	mov	r0, r7
   11fd4:	addne	r4, r3, r4
   11fd8:	movne	r3, #0
   11fdc:	strbne	r3, [r4, #-541]	; 0xfffffde3
   11fe0:	add	r3, sp, #60	; 0x3c
   11fe4:	bl	120d8 <fputs@plt+0xad0>
   11fe8:	add	sp, sp, #604	; 0x25c
   11fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ff0:	mov	r5, #0
   11ff4:	ldr	sl, [pc, #32]	; 1201c <fputs@plt+0xa14>
   11ff8:	mov	r4, r5
   11ffc:	ldr	fp, [pc, #28]	; 12020 <fputs@plt+0xa18>
   12000:	b	11fb4 <fputs@plt+0x9ac>
   12004:	ldrdeq	sp, [r2], -ip
   12008:	muleq	r1, r8, r3
   1200c:	andeq	r7, r1, lr, lsr #7
   12010:			; <UNDEFINED> instruction: 0x000173bc
   12014:	ldrdeq	r7, [r1], -r1
   12018:	andeq	r7, r1, fp, asr #29
   1201c:	muleq	r2, ip, r2
   12020:	andeq	r7, r1, r3, ror #7
   12024:	b	12fec <fputs@plt+0x19e4>
   12028:	push	{r1, r2, r3}
   1202c:	mov	r1, #512	; 0x200
   12030:	push	{r4, lr}
   12034:	sub	sp, sp, #524	; 0x20c
   12038:	mov	r4, r0
   1203c:	add	r3, sp, #536	; 0x218
   12040:	add	r0, sp, #8
   12044:	ldr	r2, [sp, #532]	; 0x214
   12048:	str	r3, [sp, #4]
   1204c:	bl	112d8 <vsnprintf@plt>
   12050:	ldr	r0, [pc, #32]	; 12078 <fputs@plt+0xa70>
   12054:	add	r3, sp, #8
   12058:	mov	r2, r4
   1205c:	ldr	r1, [pc, #24]	; 1207c <fputs@plt+0xa74>
   12060:	ldr	r0, [r0]
   12064:	bl	11560 <rb_helper_write@plt>
   12068:	add	sp, sp, #524	; 0x20c
   1206c:	pop	{r4, lr}
   12070:	add	sp, sp, #12
   12074:	bx	lr
   12078:	andeq	r9, r2, ip, ror pc
   1207c:	andeq	r7, r1, r7, ror #7
   12080:	push	{r1, r2, r3}
   12084:	mov	r1, #512	; 0x200
   12088:	push	{r4, lr}
   1208c:	sub	sp, sp, #524	; 0x20c
   12090:	mov	r4, r0
   12094:	add	r3, sp, #536	; 0x218
   12098:	add	r0, sp, #8
   1209c:	ldr	r2, [sp, #532]	; 0x214
   120a0:	str	r3, [sp, #4]
   120a4:	bl	112d8 <vsnprintf@plt>
   120a8:	ldr	r0, [pc, #32]	; 120d0 <fputs@plt+0xac8>
   120ac:	add	r3, sp, #8
   120b0:	mov	r2, r4
   120b4:	ldr	r1, [pc, #24]	; 120d4 <fputs@plt+0xacc>
   120b8:	ldr	r0, [r0]
   120bc:	bl	11560 <rb_helper_write@plt>
   120c0:	add	sp, sp, #524	; 0x20c
   120c4:	pop	{r4, lr}
   120c8:	add	sp, sp, #12
   120cc:	bx	lr
   120d0:	andeq	r9, r2, ip, ror pc
   120d4:	strdeq	r7, [r1], -r0
   120d8:	push	{r2, r3}
   120dc:	push	{r4, r5, r6, lr}
   120e0:	sub	sp, sp, #528	; 0x210
   120e4:	mov	r5, r0
   120e8:	add	r3, sp, #548	; 0x224
   120ec:	add	r4, sp, #16
   120f0:	mov	r6, r1
   120f4:	mov	r0, r4
   120f8:	mov	r1, #512	; 0x200
   120fc:	ldr	r2, [sp, #544]	; 0x220
   12100:	str	r3, [sp, #12]
   12104:	bl	112d8 <vsnprintf@plt>
   12108:	ldr	r0, [pc, #36]	; 12134 <fputs@plt+0xb2c>
   1210c:	mov	r3, r6
   12110:	mov	r2, r5
   12114:	str	r4, [sp]
   12118:	ldr	r1, [pc, #24]	; 12138 <fputs@plt+0xb30>
   1211c:	ldr	r0, [r0]
   12120:	bl	11560 <rb_helper_write@plt>
   12124:	add	sp, sp, #528	; 0x210
   12128:	pop	{r4, r5, r6, lr}
   1212c:	add	sp, sp, #8
   12130:	bx	lr
   12134:	andeq	r9, r2, ip, ror pc
   12138:	strdeq	r7, [r1], -r9
   1213c:	push	{r2, r3}
   12140:	push	{r4, r5, r6, lr}
   12144:	sub	sp, sp, #528	; 0x210
   12148:	mov	r5, r0
   1214c:	add	r3, sp, #548	; 0x224
   12150:	add	r4, sp, #16
   12154:	mov	r6, r1
   12158:	mov	r0, r4
   1215c:	mov	r1, #512	; 0x200
   12160:	ldr	r2, [sp, #544]	; 0x220
   12164:	str	r3, [sp, #12]
   12168:	bl	112d8 <vsnprintf@plt>
   1216c:	ldr	r0, [pc, #36]	; 12198 <fputs@plt+0xb90>
   12170:	mov	r3, r6
   12174:	mov	r2, r5
   12178:	str	r4, [sp]
   1217c:	ldr	r1, [pc, #24]	; 1219c <fputs@plt+0xb94>
   12180:	ldr	r0, [r0]
   12184:	bl	11560 <rb_helper_write@plt>
   12188:	add	sp, sp, #528	; 0x210
   1218c:	pop	{r4, r5, r6, lr}
   12190:	add	sp, sp, #8
   12194:	bx	lr
   12198:	andeq	r9, r2, ip, ror pc
   1219c:	andeq	r7, r1, r4, lsl #8
   121a0:	mov	r2, r0
   121a4:	ldr	r0, [pc, #12]	; 121b8 <fputs@plt+0xbb0>
   121a8:	mov	r3, r1
   121ac:	ldr	r1, [pc, #8]	; 121bc <fputs@plt+0xbb4>
   121b0:	ldr	r0, [r0]
   121b4:	b	11560 <rb_helper_write@plt>
   121b8:	andeq	r9, r2, ip, ror pc
   121bc:	andeq	r7, r1, pc, lsl #8
   121c0:	sub	r0, r1, r0
   121c4:	bx	lr
   121c8:	cmp	r0, #0
   121cc:	bne	121e8 <fputs@plt+0xbe0>
   121d0:	push	{r4, lr}
   121d4:	mov	r2, #235	; 0xeb
   121d8:	ldr	r3, [pc, #68]	; 12224 <fputs@plt+0xc1c>
   121dc:	ldr	r1, [pc, #68]	; 12228 <fputs@plt+0xc20>
   121e0:	ldr	r0, [pc, #68]	; 1222c <fputs@plt+0xc24>
   121e4:	bl	11398 <__assert_fail@plt>
   121e8:	ldrd	r2, [r0, #4]
   121ec:	cmp	r3, #0
   121f0:	strne	r2, [r3, #4]
   121f4:	streq	r2, [r1, #4]
   121f8:	ldr	r2, [r0, #4]
   121fc:	cmp	r2, #0
   12200:	strne	r3, [r2, #8]
   12204:	streq	r3, [r1]
   12208:	mov	r3, #0
   1220c:	str	r3, [r0, #4]
   12210:	str	r3, [r0, #8]
   12214:	ldr	r3, [r1, #8]
   12218:	sub	r3, r3, #1
   1221c:	str	r3, [r1, #8]
   12220:	bx	lr
   12224:	andeq	r7, r1, r7, lsl r4
   12228:	andeq	r7, r1, r2, lsr r4
   1222c:	andeq	r7, r1, lr, asr #8
   12230:	cmp	r0, #0
   12234:	push	{r4, lr}
   12238:	bne	12250 <fputs@plt+0xc48>
   1223c:	ldr	r3, [pc, #100]	; 122a8 <fputs@plt+0xca0>
   12240:	mov	r2, #143	; 0x8f
   12244:	ldr	r1, [pc, #96]	; 122ac <fputs@plt+0xca4>
   12248:	ldr	r0, [pc, #96]	; 122b0 <fputs@plt+0xca8>
   1224c:	bl	11398 <__assert_fail@plt>
   12250:	cmp	r1, #0
   12254:	bne	1226c <fputs@plt+0xc64>
   12258:	ldr	r3, [pc, #72]	; 122a8 <fputs@plt+0xca0>
   1225c:	mov	r2, #144	; 0x90
   12260:	ldr	r1, [pc, #68]	; 122ac <fputs@plt+0xca4>
   12264:	ldr	r0, [pc, #72]	; 122b4 <fputs@plt+0xcac>
   12268:	b	1224c <fputs@plt+0xc44>
   1226c:	mov	r3, #0
   12270:	stm	r1, {r0, r3}
   12274:	ldr	r3, [r2]
   12278:	cmp	r3, #0
   1227c:	str	r3, [r1, #8]
   12280:	strne	r1, [r3, #4]
   12284:	bne	12294 <fputs@plt+0xc8c>
   12288:	ldr	r3, [r2, #4]
   1228c:	cmp	r3, #0
   12290:	streq	r1, [r2, #4]
   12294:	ldr	r3, [r2, #8]
   12298:	str	r1, [r2]
   1229c:	add	r3, r3, #1
   122a0:	str	r3, [r2, #8]
   122a4:	pop	{r4, pc}
   122a8:	andeq	r7, r1, r6, lsr #8
   122ac:	andeq	r7, r1, r2, lsr r4
   122b0:	andeq	r7, r1, r8, asr r4
   122b4:	andeq	r7, r1, lr, asr #8
   122b8:	push	{r4, r5, r6, lr}
   122bc:	mov	r4, r0
   122c0:	ldr	r5, [pc, #192]	; 12388 <fputs@plt+0xd80>
   122c4:	ldr	r3, [r5, #8]
   122c8:	cmp	r3, #0
   122cc:	beq	1232c <fputs@plt+0xd24>
   122d0:	ldr	r0, [r5]
   122d4:	mov	r1, r5
   122d8:	ldr	r3, [r0]
   122dc:	str	r3, [r4, #12]
   122e0:	bl	121c8 <fputs@plt+0xbc0>
   122e4:	ldr	r0, [r5]
   122e8:	bl	1144c <rb_free_rb_dlink_node@plt>
   122ec:	ldr	r5, [r4, #56]	; 0x38
   122f0:	cmp	r5, #0
   122f4:	ldrne	r6, [pc, #144]	; 1238c <fputs@plt+0xd84>
   122f8:	bne	12368 <fputs@plt+0xd60>
   122fc:	ldrb	r3, [r4, #48]	; 0x30
   12300:	cmp	r3, #0
   12304:	bne	12378 <fputs@plt+0xd70>
   12308:	ldr	r3, [r4, #24]
   1230c:	cmp	r3, #0
   12310:	beq	12318 <fputs@plt+0xd10>
   12314:	blx	r3
   12318:	mov	r1, r4
   1231c:	mov	r0, r4
   12320:	ldr	r2, [pc, #104]	; 12390 <fputs@plt+0xd88>
   12324:	pop	{r4, r5, r6, lr}
   12328:	b	12230 <fputs@plt+0xc28>
   1232c:	ldr	r3, [r5, #12]
   12330:	cmn	r3, #1
   12334:	cmpne	r3, #32
   12338:	addne	r2, r3, #1
   1233c:	strne	r3, [r0, #12]
   12340:	strne	r2, [r5, #12]
   12344:	bne	122ec <fputs@plt+0xce4>
   12348:	ldr	r1, [pc, #68]	; 12394 <fputs@plt+0xd8c>
   1234c:	mov	r0, #87	; 0x57
   12350:	pop	{r4, r5, r6, lr}
   12354:	b	12080 <fputs@plt+0xa78>
   12358:	mov	r2, r5
   1235c:	ldr	r0, [r6]
   12360:	add	r5, r5, #12
   12364:	bl	114e8 <rb_dictionary_add@plt>
   12368:	ldr	r1, [r5]
   1236c:	cmp	r1, #0
   12370:	bne	12358 <fputs@plt+0xd50>
   12374:	b	122fc <fputs@plt+0xcf4>
   12378:	ldr	r2, [pc, #24]	; 12398 <fputs@plt+0xd90>
   1237c:	ldr	r1, [r4, #52]	; 0x34
   12380:	str	r1, [r2, r3, lsl #2]
   12384:	b	12308 <fputs@plt+0xd00>
   12388:	andeq	sp, r2, r8, lsl #31
   1238c:	andeq	lr, r2, r4, ror r1
   12390:	andeq	lr, r2, ip, ror r1
   12394:	andeq	r7, r1, r5, ror #8
   12398:	andeq	r9, r2, r8, ror #18
   1239c:	push	{r4, lr}
   123a0:	ldr	r1, [pc, #76]	; 123f4 <fputs@plt+0xdec>
   123a4:	ldr	r0, [pc, #76]	; 123f8 <fputs@plt+0xdf0>
   123a8:	bl	1153c <rb_dictionary_create@plt>
   123ac:	ldr	r3, [pc, #72]	; 123fc <fputs@plt+0xdf4>
   123b0:	mov	r2, #0
   123b4:	ldr	r1, [pc, #68]	; 12400 <fputs@plt+0xdf8>
   123b8:	str	r0, [r3]
   123bc:	mov	r3, #1
   123c0:	ldr	r0, [pc, #60]	; 12404 <fputs@plt+0xdfc>
   123c4:	bl	11254 <rb_event_addish@plt>
   123c8:	ldr	r3, [pc, #56]	; 12408 <fputs@plt+0xe00>
   123cc:	str	r0, [r3, #16]
   123d0:	ldr	r0, [pc, #52]	; 1240c <fputs@plt+0xe04>
   123d4:	bl	122b8 <fputs@plt+0xcb0>
   123d8:	ldr	r0, [pc, #48]	; 12410 <fputs@plt+0xe08>
   123dc:	bl	122b8 <fputs@plt+0xcb0>
   123e0:	ldr	r0, [pc, #44]	; 12414 <fputs@plt+0xe0c>
   123e4:	bl	122b8 <fputs@plt+0xcb0>
   123e8:	ldr	r0, [pc, #40]	; 12418 <fputs@plt+0xe10>
   123ec:	pop	{r4, lr}
   123f0:	b	122b8 <fputs@plt+0xcb0>
   123f4:	andeq	r2, r1, r0, asr #3
   123f8:	muleq	r1, r3, r4
   123fc:	andeq	lr, r2, r8, ror r1
   12400:	andeq	r2, r1, r8, lsl #10
   12404:	andeq	r7, r1, r8, lsr #9
   12408:	andeq	sp, r2, r8, lsl #31
   1240c:	andeq	r9, r2, ip, ror #26
   12410:	andeq	r9, r2, r4, lsr #29
   12414:	andeq	r9, r2, r0, asr lr
   12418:	andeq	r9, r2, ip, ror #27
   1241c:	push	{r4, r5, r6, lr}
   12420:	mov	r5, r0
   12424:	ldr	r4, [r0, #56]	; 0x38
   12428:	cmp	r4, #0
   1242c:	addne	r4, r4, #12
   12430:	ldrne	r6, [pc, #112]	; 124a8 <fputs@plt+0xea0>
   12434:	bne	12484 <fputs@plt+0xe7c>
   12438:	ldrb	r3, [r5, #48]	; 0x30
   1243c:	cmp	r3, #0
   12440:	bne	12498 <fputs@plt+0xe90>
   12444:	ldr	r3, [r5, #28]
   12448:	cmp	r3, #0
   1244c:	beq	12454 <fputs@plt+0xe4c>
   12450:	blx	r3
   12454:	ldr	r1, [pc, #80]	; 124ac <fputs@plt+0xea4>
   12458:	mov	r0, r5
   1245c:	bl	121c8 <fputs@plt+0xbc0>
   12460:	ldr	r4, [r5, #12]
   12464:	bl	11584 <rb_make_rb_dlink_node@plt>
   12468:	mov	r1, r0
   1246c:	ldr	r2, [pc, #60]	; 124b0 <fputs@plt+0xea8>
   12470:	mov	r0, r4
   12474:	pop	{r4, r5, r6, lr}
   12478:	b	12230 <fputs@plt+0xc28>
   1247c:	ldr	r0, [r6]
   12480:	bl	11434 <rb_dictionary_delete@plt>
   12484:	add	r4, r4, #12
   12488:	ldr	r1, [r4, #-24]	; 0xffffffe8
   1248c:	cmp	r1, #0
   12490:	bne	1247c <fputs@plt+0xe74>
   12494:	b	12438 <fputs@plt+0xe30>
   12498:	ldr	r2, [pc, #20]	; 124b4 <fputs@plt+0xeac>
   1249c:	mov	r1, #0
   124a0:	str	r1, [r2, r3, lsl #2]
   124a4:	b	12444 <fputs@plt+0xe3c>
   124a8:	andeq	lr, r2, r4, ror r1
   124ac:	andeq	lr, r2, ip, ror r1
   124b0:	andeq	sp, r2, r8, lsl #31
   124b4:	andeq	r9, r2, r8, ror #18
   124b8:	ldr	r3, [pc, #44]	; 124ec <fputs@plt+0xee4>
   124bc:	push	{r4, lr}
   124c0:	mov	r4, r0
   124c4:	ldr	r1, [r0]
   124c8:	ldr	r0, [r3]
   124cc:	bl	11434 <rb_dictionary_delete@plt>
   124d0:	ldr	r0, [r4, #464]	; 0x1d0
   124d4:	cmp	r0, #0
   124d8:	beq	124e0 <fputs@plt+0xed8>
   124dc:	bl	113c8 <free@plt>
   124e0:	mov	r0, r4
   124e4:	pop	{r4, lr}
   124e8:	b	113c8 <free@plt>
   124ec:	andeq	lr, r2, r8, ror r1
   124f0:	ldr	r3, [r0, #460]	; 0x1cc
   124f4:	sub	r3, r3, #1
   124f8:	cmp	r3, #0
   124fc:	str	r3, [r0, #460]	; 0x1cc
   12500:	bxne	lr
   12504:	b	124b8 <fputs@plt+0xeb0>
   12508:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1250c:	ldr	r5, [pc, #168]	; 125bc <fputs@plt+0xfb4>
   12510:	bl	11428 <rb_current_time@plt>
   12514:	mov	r7, r0
   12518:	mov	r1, sp
   1251c:	ldr	r8, [pc, #156]	; 125c0 <fputs@plt+0xfb8>
   12520:	ldr	r0, [r5]
   12524:	bl	11404 <rb_dictionary_foreach_start@plt>
   12528:	mov	r1, sp
   1252c:	ldr	r0, [r5]
   12530:	bl	11320 <rb_dictionary_foreach_cur@plt>
   12534:	subs	r4, r0, #0
   12538:	bne	12544 <fputs@plt+0xf3c>
   1253c:	add	sp, sp, #8
   12540:	pop	{r4, r5, r6, r7, r8, pc}
   12544:	ldr	r3, [r4, #460]	; 0x1cc
   12548:	ldr	r6, [r8]
   1254c:	add	r3, r3, #1
   12550:	str	r3, [r4, #460]	; 0x1cc
   12554:	cmp	r6, #0
   12558:	bne	12574 <fputs@plt+0xf6c>
   1255c:	mov	r0, r4
   12560:	bl	124f0 <fputs@plt+0xee8>
   12564:	mov	r1, sp
   12568:	ldr	r0, [r5]
   1256c:	bl	113bc <rb_dictionary_foreach_next@plt>
   12570:	b	12528 <fputs@plt+0xf20>
   12574:	ldr	r2, [r6]
   12578:	ldr	r3, [r4, #464]	; 0x1d0
   1257c:	ldr	r1, [r2, #12]
   12580:	add	r3, r3, r1, lsl #4
   12584:	ldr	r1, [r3, #12]
   12588:	cmp	r1, #1
   1258c:	bne	125b4 <fputs@plt+0xfac>
   12590:	ldr	r2, [r2, #40]	; 0x28
   12594:	cmp	r2, #0
   12598:	beq	125b4 <fputs@plt+0xfac>
   1259c:	ldr	r3, [r3, #4]
   125a0:	cmp	r3, #0
   125a4:	cmpgt	r7, r3
   125a8:	ble	125b4 <fputs@plt+0xfac>
   125ac:	mov	r0, r4
   125b0:	blx	r2
   125b4:	ldr	r6, [r6, #8]
   125b8:	b	12554 <fputs@plt+0xf4c>
   125bc:	andeq	lr, r2, r8, ror r1
   125c0:	andeq	lr, r2, ip, ror r1
   125c4:	ldrb	r3, [r0, #452]	; 0x1c4
   125c8:	cmp	r3, #0
   125cc:	bxne	lr
   125d0:	mov	r3, #1
   125d4:	strb	r3, [r0, #452]	; 0x1c4
   125d8:	ldr	r3, [r0, #456]	; 0x1c8
   125dc:	cmp	r3, #0
   125e0:	bxeq	lr
   125e4:	push	{r4, r5, r6, lr}
   125e8:	mov	r4, r0
   125ec:	ldr	r3, [pc, #64]	; 12634 <fputs@plt+0x102c>
   125f0:	ldr	r5, [r3]
   125f4:	cmp	r5, #0
   125f8:	popeq	{r4, r5, r6, pc}
   125fc:	ldr	r3, [r5]
   12600:	ldr	r2, [r3, #36]	; 0x24
   12604:	cmp	r2, #0
   12608:	beq	1262c <fputs@plt+0x1024>
   1260c:	ldr	r1, [r3, #12]
   12610:	ldr	r3, [r4, #464]	; 0x1d0
   12614:	add	r3, r3, r1, lsl #4
   12618:	ldr	r3, [r3, #12]
   1261c:	cmp	r3, #1
   12620:	bne	1262c <fputs@plt+0x1024>
   12624:	mov	r0, r4
   12628:	blx	r2
   1262c:	ldr	r5, [r5, #8]
   12630:	b	125f4 <fputs@plt+0xfec>
   12634:	andeq	lr, r2, ip, ror r1
   12638:	push	{r3}		; (str r3, [sp, #-4]!)
   1263c:	push	{r4, r5, r6, r7, lr}
   12640:	sub	sp, sp, #536	; 0x218
   12644:	mov	r4, r0
   12648:	add	r3, sp, #560	; 0x230
   1264c:	add	r7, sp, #24
   12650:	mov	r5, r1
   12654:	mov	r6, r2
   12658:	mov	r1, #512	; 0x200
   1265c:	mov	r0, r7
   12660:	ldr	r2, [sp, #556]	; 0x22c
   12664:	str	r3, [sp, #20]
   12668:	bl	112d8 <vsnprintf@plt>
   1266c:	ldr	r3, [pc, #120]	; 126ec <fputs@plt+0x10e4>
   12670:	cmn	r5, #1
   12674:	add	r1, r4, #440	; 0x1b8
   12678:	add	ip, r4, #376	; 0x178
   1267c:	ldr	lr, [pc, #108]	; 126f0 <fputs@plt+0x10e8>
   12680:	ldr	r2, [r4]
   12684:	ldr	r0, [r3]
   12688:	moveq	r3, #42	; 0x2a
   1268c:	ldrne	r3, [r4, #464]	; 0x1d0
   12690:	ldrne	r3, [r3, r5, lsl #4]
   12694:	ldrbne	r3, [r3, #20]
   12698:	cmp	r6, #0
   1269c:	moveq	r6, lr
   126a0:	stm	sp, {r1, ip}
   126a4:	ldr	r1, [pc, #72]	; 126f4 <fputs@plt+0x10ec>
   126a8:	strd	r6, [sp, #8]
   126ac:	bl	11560 <rb_helper_write@plt>
   126b0:	cmn	r5, #1
   126b4:	beq	126d4 <fputs@plt+0x10cc>
   126b8:	ldr	r3, [r4, #464]	; 0x1d0
   126bc:	add	r5, r3, r5, lsl #4
   126c0:	mov	r3, #2
   126c4:	str	r3, [r5, #12]
   126c8:	ldr	r3, [r4, #456]	; 0x1c8
   126cc:	sub	r3, r3, #1
   126d0:	str	r3, [r4, #456]	; 0x1c8
   126d4:	mov	r0, r4
   126d8:	bl	125c4 <fputs@plt+0xfbc>
   126dc:	add	sp, sp, #536	; 0x218
   126e0:	pop	{r4, r5, r6, r7, lr}
   126e4:	add	sp, sp, #4
   126e8:	bx	lr
   126ec:	andeq	r9, r2, ip, ror pc
   126f0:	andeq	r7, r1, r8, asr r3
   126f4:			; <UNDEFINED> instruction: 0x000174bf
   126f8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   126fc:	mov	r1, sp
   12700:	ldr	r4, [pc, #196]	; 127cc <fputs@plt+0x11c4>
   12704:	ldr	r6, [pc, #196]	; 127d0 <fputs@plt+0x11c8>
   12708:	ldr	r7, [pc, #196]	; 127d4 <fputs@plt+0x11cc>
   1270c:	ldr	r0, [r4]
   12710:	bl	11404 <rb_dictionary_foreach_start@plt>
   12714:	mov	r1, sp
   12718:	ldr	r0, [r4]
   1271c:	bl	11320 <rb_dictionary_foreach_cur@plt>
   12720:	subs	r5, r0, #0
   12724:	bne	12764 <fputs@plt+0x115c>
   12728:	ldr	r1, [pc, #168]	; 127d8 <fputs@plt+0x11d0>
   1272c:	ldr	r5, [r1]
   12730:	cmp	r5, #0
   12734:	movne	r7, r1
   12738:	ldrne	r6, [r5, #8]
   1273c:	bne	12798 <fputs@plt+0x1190>
   12740:	mov	r2, #0
   12744:	mov	r1, r2
   12748:	ldr	r0, [r4]
   1274c:	bl	11494 <rb_dictionary_destroy@plt>
   12750:	ldr	r3, [pc, #132]	; 127dc <fputs@plt+0x11d4>
   12754:	ldr	r0, [r3, #16]
   12758:	bl	112a8 <rb_event_delete@plt>
   1275c:	add	sp, sp, #12
   12760:	pop	{r4, r5, r6, r7, pc}
   12764:	ldr	r3, [r5, #460]	; 0x1cc
   12768:	mov	r2, r7
   1276c:	mvn	r1, #0
   12770:	add	r3, r3, #1
   12774:	str	r3, [r5, #460]	; 0x1cc
   12778:	mov	r3, r6
   1277c:	bl	12638 <fputs@plt+0x1030>
   12780:	mov	r0, r5
   12784:	bl	124f0 <fputs@plt+0xee8>
   12788:	mov	r1, sp
   1278c:	ldr	r0, [r4]
   12790:	bl	113bc <rb_dictionary_foreach_next@plt>
   12794:	b	12714 <fputs@plt+0x110c>
   12798:	ldr	r3, [r5]
   1279c:	ldr	r3, [r3, #28]
   127a0:	cmp	r3, #0
   127a4:	beq	127ac <fputs@plt+0x11a4>
   127a8:	blx	r3
   127ac:	mov	r1, r7
   127b0:	mov	r0, r5
   127b4:	bl	121c8 <fputs@plt+0xbc0>
   127b8:	cmp	r6, #0
   127bc:	beq	12740 <fputs@plt+0x1138>
   127c0:	mov	r5, r6
   127c4:	ldr	r6, [r6, #8]
   127c8:	b	12798 <fputs@plt+0x1190>
   127cc:	andeq	lr, r2, r8, ror r1
   127d0:	ldrdeq	r7, [r1], -r4
   127d4:	andeq	r7, r1, r7, lsl r5
   127d8:	andeq	lr, r2, ip, ror r1
   127dc:	andeq	sp, r2, r8, lsl #31
   127e0:	push	{r0, r1, r4, lr}
   127e4:	add	r3, r0, #376	; 0x178
   127e8:	mov	r4, r0
   127ec:	ldr	r0, [pc, #36]	; 12818 <fputs@plt+0x1210>
   127f0:	ldr	r1, [pc, #36]	; 1281c <fputs@plt+0x1214>
   127f4:	ldr	r2, [r4]
   127f8:	str	r3, [sp]
   127fc:	add	r3, r4, #440	; 0x1b8
   12800:	ldr	r0, [r0]
   12804:	bl	11560 <rb_helper_write@plt>
   12808:	mov	r0, r4
   1280c:	add	sp, sp, #8
   12810:	pop	{r4, lr}
   12814:	b	125c4 <fputs@plt+0xfbc>
   12818:	andeq	r9, r2, ip, ror pc
   1281c:	andeq	r7, r1, pc, lsl r5
   12820:	ldr	r2, [r0, #464]	; 0x1d0
   12824:	mov	ip, #2
   12828:	push	{r4, r5, r6, lr}
   1282c:	mov	r4, r0
   12830:	add	r2, r2, r1, lsl #4
   12834:	str	ip, [r2, #12]
   12838:	ldr	r2, [r0, #456]	; 0x1c8
   1283c:	sub	r2, r2, #1
   12840:	cmp	r2, #0
   12844:	str	r2, [r0, #456]	; 0x1c8
   12848:	bne	12860 <fputs@plt+0x1258>
   1284c:	ldrb	r2, [r0, #451]	; 0x1c3
   12850:	cmp	r2, #0
   12854:	bne	12860 <fputs@plt+0x1258>
   12858:	pop	{r4, r5, r6, lr}
   1285c:	b	127e0 <fputs@plt+0x11d8>
   12860:	ldr	r3, [pc, #72]	; 128b0 <fputs@plt+0x12a8>
   12864:	mov	r6, r1
   12868:	ldr	r5, [r3]
   1286c:	cmp	r5, #0
   12870:	popeq	{r4, r5, r6, pc}
   12874:	ldr	r3, [r5]
   12878:	ldr	r2, [r3, #44]	; 0x2c
   1287c:	cmp	r2, #0
   12880:	beq	128a8 <fputs@plt+0x12a0>
   12884:	ldr	r1, [r3, #12]
   12888:	ldr	r3, [r4, #464]	; 0x1d0
   1288c:	add	r3, r3, r1, lsl #4
   12890:	ldr	r3, [r3, #12]
   12894:	cmp	r3, #1
   12898:	bne	128a8 <fputs@plt+0x12a0>
   1289c:	mov	r1, r6
   128a0:	mov	r0, r4
   128a4:	blx	r2
   128a8:	ldr	r5, [r5, #8]
   128ac:	b	1286c <fputs@plt+0x1264>
   128b0:	andeq	lr, r2, ip, ror r1
   128b4:	cmp	r0, #5
   128b8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128bc:	mov	r2, r0
   128c0:	ldrle	r1, [pc, #536]	; 12ae0 <fputs@plt+0x14d8>
   128c4:	ble	12ac0 <fputs@plt+0x14b8>
   128c8:	ldmib	r1, {r5, r6, fp}
   128cc:	cmp	r0, #6
   128d0:	mov	r2, #16
   128d4:	ldrne	r7, [r1, #24]
   128d8:	mov	r0, r5
   128dc:	ldr	r4, [r1, #16]
   128e0:	ldr	sl, [r1, #20]
   128e4:	mov	r1, #0
   128e8:	ldreq	r7, [pc, #500]	; 12ae4 <fputs@plt+0x14dc>
   128ec:	bl	113b0 <strtoull@plt>
   128f0:	subs	r8, r0, #1
   128f4:	mov	r3, r0
   128f8:	sbc	r9, r1, #0
   128fc:	mov	r1, #0
   12900:	mvn	r0, #1
   12904:	cmp	r9, r1
   12908:	str	r3, [sp, #4]
   1290c:	cmpeq	r8, r0
   12910:	bhi	12ad8 <fputs@plt+0x14d0>
   12914:	mov	r1, #468	; 0x1d4
   12918:	mov	r0, #1
   1291c:	bl	11338 <calloc@plt>
   12920:	subs	r8, r0, #0
   12924:	ldr	r3, [sp, #4]
   12928:	bne	12930 <fputs@plt+0x1328>
   1292c:	bl	114d0 <rb_outofmemory@plt>
   12930:	ldr	r2, [r8, #460]	; 0x1cc
   12934:	mov	r1, r3
   12938:	str	r3, [r8]
   1293c:	ldr	r9, [pc, #420]	; 12ae8 <fputs@plt+0x14e0>
   12940:	add	r2, r2, #1
   12944:	str	r2, [r8, #460]	; 0x1cc
   12948:	ldr	r0, [r9]
   1294c:	bl	11530 <rb_dictionary_find@plt>
   12950:	subs	r3, r0, #0
   12954:	str	r3, [sp, #4]
   12958:	bne	12ab8 <fputs@plt+0x14b0>
   1295c:	mov	r2, r8
   12960:	ldr	r1, [r8]
   12964:	ldr	r0, [r9]
   12968:	bl	114e8 <rb_dictionary_add@plt>
   1296c:	ldr	r3, [sp, #4]
   12970:	mov	r2, #16
   12974:	mov	r0, r7
   12978:	mov	r1, r3
   1297c:	bl	113b0 <strtoull@plt>
   12980:	mov	r2, #54	; 0x36
   12984:	mov	r1, r6
   12988:	str	r0, [r8, #4]
   1298c:	add	r0, r8, #8
   12990:	bl	113a4 <rb_strlcpy@plt>
   12994:	mov	r0, fp
   12998:	bl	11488 <atoi@plt>
   1299c:	add	r1, r8, #64	; 0x40
   129a0:	strh	r0, [r8, #62]	; 0x3e
   129a4:	mov	r0, r6
   129a8:	bl	11410 <rb_inet_pton_sock@plt>
   129ac:	ldrh	r3, [r8, #62]	; 0x3e
   129b0:	mov	r2, #54	; 0x36
   129b4:	mov	r1, r4
   129b8:	add	r0, r8, #192	; 0xc0
   129bc:	rev16	r3, r3
   129c0:	strh	r3, [r8, #66]	; 0x42
   129c4:	bl	113a4 <rb_strlcpy@plt>
   129c8:	mov	r0, sl
   129cc:	bl	11488 <atoi@plt>
   129d0:	add	r1, r8, #248	; 0xf8
   129d4:	strh	r0, [r8, #246]	; 0xf6
   129d8:	mov	r0, r4
   129dc:	bl	11410 <rb_inet_pton_sock@plt>
   129e0:	ldrh	r3, [r8, #246]	; 0xf6
   129e4:	mov	r2, #64	; 0x40
   129e8:	add	r0, r8, #376	; 0x178
   129ec:	ldr	r1, [pc, #248]	; 12aec <fputs@plt+0x14e4>
   129f0:	rev16	r3, r3
   129f4:	strh	r3, [r8, #250]	; 0xfa
   129f8:	bl	113a4 <rb_strlcpy@plt>
   129fc:	mov	r2, #11
   12a00:	ldr	r1, [pc, #228]	; 12aec <fputs@plt+0x14e4>
   12a04:	add	r0, r8, #440	; 0x1b8
   12a08:	bl	113a4 <rb_strlcpy@plt>
   12a0c:	ldr	r3, [pc, #220]	; 12af0 <fputs@plt+0x14e8>
   12a10:	mov	r0, #1
   12a14:	ldr	r1, [r3, #12]
   12a18:	lsl	r1, r1, #4
   12a1c:	bl	11338 <calloc@plt>
   12a20:	cmp	r0, #0
   12a24:	beq	1292c <fputs@plt+0x1324>
   12a28:	ldr	r2, [pc, #196]	; 12af4 <fputs@plt+0x14ec>
   12a2c:	mov	r3, #1
   12a30:	mov	r5, r3
   12a34:	strb	r3, [r8, #451]	; 0x1c3
   12a38:	str	r0, [r8, #464]	; 0x1d0
   12a3c:	ldr	r4, [r2]
   12a40:	cmp	r4, #0
   12a44:	ldr	r3, [r8, #456]	; 0x1c8
   12a48:	beq	12a8c <fputs@plt+0x1484>
   12a4c:	add	r3, r3, #1
   12a50:	ldr	r2, [r4]
   12a54:	ldr	r1, [r8, #464]	; 0x1d0
   12a58:	ldr	r0, [r2, #12]
   12a5c:	add	ip, r1, r0, lsl #4
   12a60:	str	r2, [r1, r0, lsl #4]
   12a64:	mov	r0, r8
   12a68:	str	r3, [r8, #456]	; 0x1c8
   12a6c:	ldr	r3, [r2, #32]
   12a70:	str	r5, [ip, #12]
   12a74:	blx	r3
   12a78:	cmp	r0, #0
   12a7c:	beq	12aa8 <fputs@plt+0x14a0>
   12a80:	ldrb	r3, [r8, #452]	; 0x1c4
   12a84:	cmp	r3, #0
   12a88:	beq	12ad0 <fputs@plt+0x14c8>
   12a8c:	mov	r3, #0
   12a90:	strb	r3, [r8, #451]	; 0x1c3
   12a94:	ldr	r3, [r8, #456]	; 0x1c8
   12a98:	cmp	r3, #0
   12a9c:	bne	12aa8 <fputs@plt+0x14a0>
   12aa0:	mov	r0, r8
   12aa4:	bl	127e0 <fputs@plt+0x11d8>
   12aa8:	mov	r0, r8
   12aac:	add	sp, sp, #12
   12ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab4:	b	124f0 <fputs@plt+0xee8>
   12ab8:	ldr	r1, [pc, #56]	; 12af8 <fputs@plt+0x14f0>
   12abc:	mov	r2, r5
   12ac0:	mov	r0, #67	; 0x43
   12ac4:	bl	12080 <fputs@plt+0xa78>
   12ac8:	mov	r0, #3
   12acc:	bl	115e4 <exit@plt>
   12ad0:	ldr	r4, [r4, #8]
   12ad4:	b	12a40 <fputs@plt+0x1438>
   12ad8:	add	sp, sp, #12
   12adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ae0:	andeq	r7, r1, sl, lsr #10
   12ae4:	andeq	r7, r1, r9, lsr #13
   12ae8:	andeq	lr, r2, r8, ror r1
   12aec:	andeq	r7, r1, r8, asr r3
   12af0:	andeq	sp, r2, r8, lsl #31
   12af4:	andeq	lr, r2, ip, ror r1
   12af8:	andeq	r7, r1, r4, ror r5
   12afc:	cmp	r0, #1
   12b00:	push	{r4, r6, r7, lr}
   12b04:	movle	r2, r0
   12b08:	ldrle	r1, [pc, #124]	; 12b8c <fputs@plt+0x1584>
   12b0c:	ble	12b48 <fputs@plt+0x1540>
   12b10:	mov	r4, r1
   12b14:	mov	r2, #16
   12b18:	mov	r1, #0
   12b1c:	ldr	r0, [r4, #4]
   12b20:	bl	113b0 <strtoull@plt>
   12b24:	subs	r6, r0, #1
   12b28:	mov	r3, #0
   12b2c:	sbc	r7, r1, #0
   12b30:	mvn	r2, #1
   12b34:	cmp	r7, r3
   12b38:	cmpeq	r6, r2
   12b3c:	bls	12b58 <fputs@plt+0x1550>
   12b40:	ldr	r1, [pc, #72]	; 12b90 <fputs@plt+0x1588>
   12b44:	ldr	r2, [r4, #4]
   12b48:	mov	r0, #67	; 0x43
   12b4c:	bl	12080 <fputs@plt+0xa78>
   12b50:	mov	r0, #3
   12b54:	bl	115e4 <exit@plt>
   12b58:	ldr	r3, [pc, #52]	; 12b94 <fputs@plt+0x158c>
   12b5c:	mov	r1, r0
   12b60:	ldr	r0, [r3]
   12b64:	bl	114c4 <rb_dictionary_retrieve@plt>
   12b68:	subs	r4, r0, #0
   12b6c:	popeq	{r4, r6, r7, pc}
   12b70:	ldr	r3, [r4, #460]	; 0x1cc
   12b74:	add	r3, r3, #1
   12b78:	str	r3, [r4, #460]	; 0x1cc
   12b7c:	bl	125c4 <fputs@plt+0xfbc>
   12b80:	mov	r0, r4
   12b84:	pop	{r4, r6, r7, lr}
   12b88:	b	124f0 <fputs@plt+0xee8>
   12b8c:	andeq	r7, r1, r8, lsr #11
   12b90:	strdeq	r7, [r1], -r2
   12b94:	andeq	lr, r2, r8, ror r1
   12b98:	cmp	r0, #0
   12b9c:	bxeq	lr
   12ba0:	b	113c8 <free@plt>
   12ba4:	push	{r4, lr}
   12ba8:	mov	r1, r0
   12bac:	mov	r0, #1
   12bb0:	bl	11338 <calloc@plt>
   12bb4:	cmp	r0, #0
   12bb8:	popne	{r4, pc}
   12bbc:	bl	114d0 <rb_outofmemory@plt>
   12bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bc4:	sub	sp, sp, #1024	; 0x400
   12bc8:	mov	r4, #1024	; 0x400
   12bcc:	sub	sp, sp, #12
   12bd0:	mov	r7, r0
   12bd4:	mov	r2, r4
   12bd8:	mov	r1, #0
   12bdc:	add	r0, sp, #8
   12be0:	bl	11368 <memset@plt>
   12be4:	ldrb	r2, [r7, #20]
   12be8:	add	r3, sp, #8
   12bec:	mov	r1, #1
   12bf0:	add	r0, r7, #21
   12bf4:	str	r4, [sp]
   12bf8:	bl	14098 <fputs@plt+0x2a90>
   12bfc:	subs	r8, r0, #0
   12c00:	ble	12c60 <fputs@plt+0x1658>
   12c04:	ldr	r5, [pc, #348]	; 12d68 <fputs@plt+0x1760>
   12c08:	mov	r9, #0
   12c0c:	ldr	r3, [r7, #12]
   12c10:	ldrb	r6, [r7, #278]	; 0x116
   12c14:	ldr	sl, [pc, #336]	; 12d6c <fputs@plt+0x1764>
   12c18:	strh	r3, [sp, #8]
   12c1c:	ldr	r3, [r5]
   12c20:	add	r6, r6, #1
   12c24:	ldr	fp, [pc, #324]	; 12d70 <fputs@plt+0x1768>
   12c28:	uxtb	r6, r6
   12c2c:	strb	r6, [r7, #278]	; 0x116
   12c30:	add	r3, r3, #1
   12c34:	str	r3, [r5]
   12c38:	ldr	r2, [sl]
   12c3c:	cmp	r9, r2
   12c40:	blt	12c6c <fputs@plt+0x1664>
   12c44:	ldr	sl, [pc, #292]	; 12d70 <fputs@plt+0x1768>
   12c48:	mov	r9, #0
   12c4c:	sub	r6, r6, #1
   12c50:	ldr	r3, [pc, #276]	; 12d6c <fputs@plt+0x1764>
   12c54:	ldr	r3, [r3]
   12c58:	cmp	r9, r3
   12c5c:	blt	12d04 <fputs@plt+0x16fc>
   12c60:	add	sp, sp, #1024	; 0x400
   12c64:	add	sp, sp, #12
   12c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c6c:	sub	r3, r6, #1
   12c70:	add	r3, r3, r9
   12c74:	sdiv	r4, r3, r2
   12c78:	mls	r4, r2, r4, r3
   12c7c:	add	r3, r5, r4, lsl #2
   12c80:	ldr	r3, [r3, #4]
   12c84:	cmp	r3, #0
   12c88:	beq	12cbc <fputs@plt+0x16b4>
   12c8c:	sub	r3, r3, #1
   12c90:	ldr	r1, [r5]
   12c94:	cmp	r3, #3
   12c98:	ldrls	r2, [pc, #212]	; 12d74 <fputs@plt+0x176c>
   12c9c:	movhi	r2, #243	; 0xf3
   12ca0:	ldrsbls	r2, [r2, r3]
   12ca4:	sdiv	r3, r1, r2
   12ca8:	mls	r3, r2, r3, r1
   12cac:	cmp	r3, #0
   12cb0:	beq	12cbc <fputs@plt+0x16b4>
   12cb4:	add	r9, r9, #1
   12cb8:	b	12c38 <fputs@plt+0x1630>
   12cbc:	ldr	r0, [r5, #44]	; 0x2c
   12cc0:	bl	112c0 <rb_get_fd@plt>
   12cc4:	lsl	r3, r4, #7
   12cc8:	add	r1, sp, #8
   12ccc:	add	r2, r3, fp
   12cd0:	ldrh	r3, [r3, fp]
   12cd4:	cmp	r3, #2
   12cd8:	moveq	r3, #16
   12cdc:	movne	r3, #28
   12ce0:	strd	r2, [sp]
   12ce4:	mov	r3, #0
   12ce8:	mov	r2, r8
   12cec:	bl	11350 <sendto@plt>
   12cf0:	cmp	r8, r0
   12cf4:	bne	12cb4 <fputs@plt+0x16ac>
   12cf8:	cmn	r4, #1
   12cfc:	strne	r4, [r7, #288]	; 0x120
   12d00:	b	12c60 <fputs@plt+0x1658>
   12d04:	add	r2, r6, r9
   12d08:	sdiv	r4, r2, r3
   12d0c:	mls	r4, r3, r4, r2
   12d10:	add	r3, r5, r4, lsl #2
   12d14:	ldr	r3, [r3, #4]
   12d18:	cmp	r3, #0
   12d1c:	bne	12d28 <fputs@plt+0x1720>
   12d20:	add	r9, r9, #1
   12d24:	b	12c50 <fputs@plt+0x1648>
   12d28:	ldr	r0, [r5, #44]	; 0x2c
   12d2c:	bl	112c0 <rb_get_fd@plt>
   12d30:	lsl	r3, r4, #7
   12d34:	add	r1, sp, #8
   12d38:	add	r2, r3, sl
   12d3c:	ldrh	r3, [r3, sl]
   12d40:	cmp	r3, #2
   12d44:	moveq	r3, #16
   12d48:	movne	r3, #28
   12d4c:	strd	r2, [sp]
   12d50:	mov	r3, #0
   12d54:	mov	r2, r8
   12d58:	bl	11350 <sendto@plt>
   12d5c:	cmp	r8, r0
   12d60:	bne	12d20 <fputs@plt+0x1718>
   12d64:	b	12cf8 <fputs@plt+0x16f0>
   12d68:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12d6c:	ldrdeq	sp, [r2], -ip
   12d70:	muleq	r2, ip, r2
   12d74:	andeq	r7, r1, r6, lsr r6
   12d78:	push	{r4, r5, r6, lr}
   12d7c:	bl	139d8 <fputs@plt+0x23d0>
   12d80:	ldr	r3, [pc, #128]	; 12e08 <fputs@plt+0x1800>
   12d84:	ldr	r2, [pc, #128]	; 12e0c <fputs@plt+0x1804>
   12d88:	ldr	r1, [r3]
   12d8c:	mov	r3, #0
   12d90:	mov	r0, r3
   12d94:	cmp	r1, r3
   12d98:	bgt	12dfc <fputs@plt+0x17f4>
   12d9c:	ldr	r5, [pc, #108]	; 12e10 <fputs@plt+0x1808>
   12da0:	ldr	r4, [r5, #44]	; 0x2c
   12da4:	cmp	r4, #0
   12da8:	popne	{r4, r5, r6, pc}
   12dac:	mov	r2, r4
   12db0:	mov	r1, #2
   12db4:	ldr	r0, [pc, #88]	; 12e14 <fputs@plt+0x180c>
   12db8:	ldr	r3, [pc, #88]	; 12e18 <fputs@plt+0x1810>
   12dbc:	ldrh	r0, [r0]
   12dc0:	bl	112e4 <rb_socket@plt>
   12dc4:	cmp	r0, #0
   12dc8:	str	r0, [r5, #44]	; 0x2c
   12dcc:	popeq	{r4, r5, r6, pc}
   12dd0:	mov	r3, r4
   12dd4:	mov	r1, #1
   12dd8:	ldr	r2, [pc, #60]	; 12e1c <fputs@plt+0x1814>
   12ddc:	bl	112b4 <rb_setselect@plt>
   12de0:	mov	r3, #1
   12de4:	mov	r2, r4
   12de8:	ldr	r1, [pc, #48]	; 12e20 <fputs@plt+0x1818>
   12dec:	ldr	r0, [pc, #48]	; 12e24 <fputs@plt+0x181c>
   12df0:	bl	1156c <rb_event_add@plt>
   12df4:	str	r0, [r5, #48]	; 0x30
   12df8:	pop	{r4, r5, r6, pc}
   12dfc:	add	r3, r3, #1
   12e00:	str	r0, [r2], #4
   12e04:	b	12d94 <fputs@plt+0x178c>
   12e08:	ldrdeq	sp, [r2], -ip
   12e0c:	andeq	sp, r2, r0, lsr #31
   12e10:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12e14:	muleq	r2, ip, r2
   12e18:	andeq	r7, r1, r6, ror r6
   12e1c:	andeq	r3, r1, r8, lsr #17
   12e20:	andeq	r3, r1, r8, ror #6
   12e24:	andeq	r7, r1, sl, lsl #13
   12e28:	push	{r4, lr}
   12e2c:	movw	r2, #425	; 0x1a9
   12e30:	ldr	r3, [pc, #8]	; 12e40 <fputs@plt+0x1838>
   12e34:	ldr	r1, [pc, #8]	; 12e44 <fputs@plt+0x183c>
   12e38:	ldr	r0, [pc, #8]	; 12e48 <fputs@plt+0x1840>
   12e3c:	bl	11398 <__assert_fail@plt>
   12e40:	andeq	r7, r1, sl, lsr r6
   12e44:	muleq	r1, fp, r6
   12e48:	andeq	r7, r1, r1, lsr #13
   12e4c:	push	{r4, lr}
   12e50:	subs	r4, r0, #0
   12e54:	bne	12e6c <fputs@plt+0x1864>
   12e58:	ldr	r3, [pc, #92]	; 12ebc <fputs@plt+0x18b4>
   12e5c:	mov	r2, #235	; 0xeb
   12e60:	ldr	r1, [pc, #88]	; 12ec0 <fputs@plt+0x18b8>
   12e64:	ldr	r0, [pc, #88]	; 12ec4 <fputs@plt+0x18bc>
   12e68:	bl	11398 <__assert_fail@plt>
   12e6c:	ldmib	r4, {r1, r2}
   12e70:	ldr	r3, [pc, #80]	; 12ec8 <fputs@plt+0x18c0>
   12e74:	ldr	r0, [r4, #420]	; 0x1a4
   12e78:	cmp	r2, #0
   12e7c:	strne	r1, [r2, #4]
   12e80:	streq	r1, [r3, #56]	; 0x38
   12e84:	ldr	r1, [r4, #4]
   12e88:	cmp	r1, #0
   12e8c:	strne	r2, [r1, #8]
   12e90:	streq	r2, [r3, #52]	; 0x34
   12e94:	mov	r2, #0
   12e98:	str	r2, [r4, #4]
   12e9c:	str	r2, [r4, #8]
   12ea0:	ldr	r2, [r3, #60]	; 0x3c
   12ea4:	sub	r2, r2, #1
   12ea8:	str	r2, [r3, #60]	; 0x3c
   12eac:	bl	12b98 <fputs@plt+0x1590>
   12eb0:	mov	r0, r4
   12eb4:	pop	{r4, lr}
   12eb8:	b	12b98 <fputs@plt+0x1590>
   12ebc:	andeq	r7, r1, r3, asr r6
   12ec0:	andeq	r7, r1, r2, lsr r4
   12ec4:	andeq	r7, r1, lr, asr #8
   12ec8:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12ecc:	push	{r0, r1, r4, r5, r6, lr}
   12ed0:	mov	r5, r0
   12ed4:	mov	r0, #428	; 0x1ac
   12ed8:	ldr	r6, [pc, #160]	; 12f80 <fputs@plt+0x1978>
   12edc:	bl	12ba4 <fputs@plt+0x159c>
   12ee0:	mov	r4, r0
   12ee4:	bl	11428 <rb_current_time@plt>
   12ee8:	mov	r3, #3
   12eec:	str	r5, [r4, #424]	; 0x1a8
   12ef0:	mov	r5, r6
   12ef4:	strb	r3, [r4, #277]	; 0x115
   12ef8:	mov	r3, #4
   12efc:	str	r0, [r4, #280]	; 0x118
   12f00:	str	r3, [r4, #284]	; 0x11c
   12f04:	mov	r1, #2
   12f08:	add	r0, sp, #6
   12f0c:	bl	11578 <rb_get_random@plt>
   12f10:	ldr	r2, [r6, #52]	; 0x34
   12f14:	ldrh	r1, [sp, #6]
   12f18:	mov	r3, r2
   12f1c:	cmp	r3, #0
   12f20:	bne	12f68 <fputs@plt+0x1960>
   12f24:	cmp	r2, #0
   12f28:	str	r4, [r4]
   12f2c:	str	r3, [r4, #4]
   12f30:	str	r2, [r4, #8]
   12f34:	str	r1, [r4, #12]
   12f38:	strne	r4, [r2, #4]
   12f3c:	bne	12f4c <fputs@plt+0x1944>
   12f40:	ldr	r3, [r5, #56]	; 0x38
   12f44:	cmp	r3, #0
   12f48:	streq	r4, [r5, #56]	; 0x38
   12f4c:	ldr	r3, [r5, #60]	; 0x3c
   12f50:	mov	r0, r4
   12f54:	str	r4, [r5, #52]	; 0x34
   12f58:	add	r3, r3, #1
   12f5c:	str	r3, [r5, #60]	; 0x3c
   12f60:	add	sp, sp, #8
   12f64:	pop	{r4, r5, r6, pc}
   12f68:	ldr	r0, [r3]
   12f6c:	ldr	r0, [r0, #12]
   12f70:	cmp	r1, r0
   12f74:	beq	12f04 <fputs@plt+0x18fc>
   12f78:	ldr	r3, [r3, #8]
   12f7c:	b	12f1c <fputs@plt+0x1914>
   12f80:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   12f84:	push	{r4, r5, r6, r7, r8, lr}
   12f88:	subs	r4, r2, #0
   12f8c:	mov	r5, r1
   12f90:	mov	r6, r3
   12f94:	bne	12fc8 <fputs@plt+0x19c0>
   12f98:	bl	12ecc <fputs@plt+0x18c4>
   12f9c:	mov	r4, r0
   12fa0:	mov	r0, r5
   12fa4:	bl	1141c <strlen@plt>
   12fa8:	add	r0, r0, #1
   12fac:	bl	11500 <malloc@plt>
   12fb0:	subs	r7, r0, #0
   12fb4:	bne	12fbc <fputs@plt+0x19b4>
   12fb8:	bl	114d0 <rb_outofmemory@plt>
   12fbc:	mov	r1, r5
   12fc0:	bl	1147c <strcpy@plt>
   12fc4:	str	r7, [r4, #420]	; 0x1a4
   12fc8:	mov	r1, r5
   12fcc:	add	r0, r4, #21
   12fd0:	mov	r2, #256	; 0x100
   12fd4:	bl	113a4 <rb_strlcpy@plt>
   12fd8:	mov	r0, r4
   12fdc:	strb	r6, [r4, #20]
   12fe0:	pop	{r4, r5, r6, r7, r8, lr}
   12fe4:	b	12bc0 <fputs@plt+0x15b8>
   12fe8:	b	12d78 <fputs@plt+0x1770>
   12fec:	push	{r4, lr}
   12ff0:	ldr	r4, [pc, #28]	; 13014 <fputs@plt+0x1a0c>
   12ff4:	ldr	r0, [r4, #44]	; 0x2c
   12ff8:	bl	11458 <rb_close@plt>
   12ffc:	mov	r3, #0
   13000:	ldr	r0, [r4, #48]	; 0x30
   13004:	str	r3, [r4, #44]	; 0x2c
   13008:	bl	112a8 <rb_event_delete@plt>
   1300c:	pop	{r4, lr}
   13010:	b	12d78 <fputs@plt+0x1770>
   13014:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   13018:	push	{r4, r5, r6, r7, lr}
   1301c:	mov	r6, r1
   13020:	subs	r1, r0, #0
   13024:	sub	sp, sp, #260	; 0x104
   13028:	bne	13040 <fputs@plt+0x1a38>
   1302c:	ldr	r3, [pc, #160]	; 130d4 <fputs@plt+0x1acc>
   13030:	mov	r2, #412	; 0x19c
   13034:	ldr	r1, [pc, #156]	; 130d8 <fputs@plt+0x1ad0>
   13038:	ldr	r0, [pc, #156]	; 130dc <fputs@plt+0x1ad4>
   1303c:	bl	11398 <__assert_fail@plt>
   13040:	mov	r7, r2
   13044:	mov	r0, sp
   13048:	mov	r2, #256	; 0x100
   1304c:	bl	113a4 <rb_strlcpy@plt>
   13050:	mov	r1, #46	; 0x2e
   13054:	mov	r0, sp
   13058:	bl	11314 <strchr@plt>
   1305c:	cmp	r0, #0
   13060:	bne	130b8 <fputs@plt+0x1ab0>
   13064:	ldr	r5, [pc, #116]	; 130e0 <fputs@plt+0x1ad8>
   13068:	ldrb	r3, [r5]
   1306c:	cmp	r3, #0
   13070:	beq	130b8 <fputs@plt+0x1ab0>
   13074:	mov	r0, sp
   13078:	bl	1141c <strlen@plt>
   1307c:	mov	r4, r0
   13080:	mov	r0, r5
   13084:	bl	1141c <strlen@plt>
   13088:	add	r0, r4, r0
   1308c:	add	r0, r0, #2
   13090:	cmp	r0, #254	; 0xfe
   13094:	bhi	130b8 <fputs@plt+0x1ab0>
   13098:	add	r3, sp, #256	; 0x100
   1309c:	mov	r2, #46	; 0x2e
   130a0:	add	r3, r3, r4
   130a4:	add	r0, r4, #1
   130a8:	mov	r1, r5
   130ac:	add	r0, sp, r0
   130b0:	strb	r2, [r3, #-256]	; 0xffffff00
   130b4:	bl	1147c <strcpy@plt>
   130b8:	mov	r3, r7
   130bc:	mov	r2, #0
   130c0:	mov	r1, sp
   130c4:	mov	r0, r6
   130c8:	bl	12f84 <fputs@plt+0x197c>
   130cc:	add	sp, sp, #260	; 0x104
   130d0:	pop	{r4, r5, r6, r7, pc}
   130d4:	andeq	r7, r1, r2, ror #12
   130d8:	muleq	r1, fp, r6
   130dc:	andeq	r7, r1, r1, lsr #13
   130e0:	muleq	r2, ip, r1
   130e4:	ldrh	ip, [r2]
   130e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130ec:	sub	sp, sp, #132	; 0x84
   130f0:	cmp	ip, #2
   130f4:	bne	13130 <fputs@plt+0x1b28>
   130f8:	ldr	r5, [pc, #396]	; 1328c <fputs@plt+0x1c84>
   130fc:	cmp	r3, #0
   13100:	ldrb	ip, [r2, #6]
   13104:	ldrb	lr, [r2, #5]
   13108:	moveq	r3, r5
   1310c:	ldrb	r4, [r2, #4]
   13110:	stm	sp, {ip, lr}
   13114:	str	r3, [sp, #12]
   13118:	str	r4, [sp, #8]
   1311c:	ldrb	r3, [r2, #7]
   13120:	ldr	r2, [pc, #360]	; 13290 <fputs@plt+0x1c88>
   13124:	bl	11590 <snprintf@plt>
   13128:	add	sp, sp, #132	; 0x84
   1312c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13130:	cmp	ip, #10
   13134:	bne	13128 <fputs@plt+0x1b20>
   13138:	ldrb	r6, [r2, #23]
   1313c:	cmp	r3, #0
   13140:	ldr	fp, [pc, #332]	; 13294 <fputs@plt+0x1c8c>
   13144:	lsr	ip, r6, #4
   13148:	moveq	r3, fp
   1314c:	str	ip, [sp]
   13150:	ldrb	ip, [r2, #22]
   13154:	and	lr, ip, #15
   13158:	lsr	ip, ip, #4
   1315c:	str	lr, [sp, #4]
   13160:	str	ip, [sp, #8]
   13164:	ldrb	ip, [r2, #21]
   13168:	and	lr, ip, #15
   1316c:	lsr	ip, ip, #4
   13170:	str	lr, [sp, #12]
   13174:	str	ip, [sp, #16]
   13178:	ldrb	ip, [r2, #20]
   1317c:	and	lr, ip, #15
   13180:	lsr	ip, ip, #4
   13184:	str	lr, [sp, #20]
   13188:	str	ip, [sp, #24]
   1318c:	ldrb	ip, [r2, #19]
   13190:	and	lr, ip, #15
   13194:	lsr	ip, ip, #4
   13198:	str	lr, [sp, #28]
   1319c:	str	ip, [sp, #32]
   131a0:	ldrb	ip, [r2, #18]
   131a4:	and	lr, ip, #15
   131a8:	lsr	ip, ip, #4
   131ac:	str	lr, [sp, #36]	; 0x24
   131b0:	str	ip, [sp, #40]	; 0x28
   131b4:	ldrb	ip, [r2, #17]
   131b8:	and	lr, ip, #15
   131bc:	lsr	ip, ip, #4
   131c0:	str	lr, [sp, #44]	; 0x2c
   131c4:	str	ip, [sp, #48]	; 0x30
   131c8:	ldrb	ip, [r2, #16]
   131cc:	and	lr, ip, #15
   131d0:	lsr	ip, ip, #4
   131d4:	str	lr, [sp, #52]	; 0x34
   131d8:	str	ip, [sp, #56]	; 0x38
   131dc:	ldrb	ip, [r2, #15]
   131e0:	and	lr, ip, #15
   131e4:	lsr	ip, ip, #4
   131e8:	str	lr, [sp, #60]	; 0x3c
   131ec:	str	ip, [sp, #64]	; 0x40
   131f0:	ldrb	ip, [r2, #14]
   131f4:	and	lr, ip, #15
   131f8:	lsr	ip, ip, #4
   131fc:	str	lr, [sp, #68]	; 0x44
   13200:	str	ip, [sp, #72]	; 0x48
   13204:	ldrb	ip, [r2, #13]
   13208:	and	lr, ip, #15
   1320c:	lsr	ip, ip, #4
   13210:	str	lr, [sp, #76]	; 0x4c
   13214:	str	ip, [sp, #80]	; 0x50
   13218:	ldrb	ip, [r2, #12]
   1321c:	and	lr, ip, #15
   13220:	lsr	ip, ip, #4
   13224:	str	lr, [sp, #84]	; 0x54
   13228:	ldrb	lr, [r2, #11]
   1322c:	ldrb	r4, [r2, #10]
   13230:	ldrb	r5, [r2, #9]
   13234:	and	r7, lr, #15
   13238:	lsr	lr, lr, #4
   1323c:	ldrb	r2, [r2, #8]
   13240:	and	r8, r4, #15
   13244:	lsr	r4, r4, #4
   13248:	str	ip, [sp, #88]	; 0x58
   1324c:	str	r7, [sp, #92]	; 0x5c
   13250:	and	r9, r5, #15
   13254:	lsr	r5, r5, #4
   13258:	str	lr, [sp, #96]	; 0x60
   1325c:	str	r8, [sp, #100]	; 0x64
   13260:	and	sl, r2, #15
   13264:	lsr	r2, r2, #4
   13268:	str	r4, [sp, #104]	; 0x68
   1326c:	str	r9, [sp, #108]	; 0x6c
   13270:	str	r5, [sp, #112]	; 0x70
   13274:	str	sl, [sp, #116]	; 0x74
   13278:	strd	r2, [sp, #120]	; 0x78
   1327c:	and	r3, r6, #15
   13280:	ldr	r2, [pc, #16]	; 13298 <fputs@plt+0x1c90>
   13284:	bl	11590 <snprintf@plt>
   13288:	b	13128 <fputs@plt+0x1b20>
   1328c:	andeq	r7, r1, fp, lsr #13
   13290:	andeq	r7, r1, r1, asr #13
   13294:			; <UNDEFINED> instruction: 0x000176b8
   13298:	ldrdeq	r7, [r1], -r0
   1329c:	push	{r4, r5, r6, lr}
   132a0:	subs	r4, r2, #0
   132a4:	mov	r5, r1
   132a8:	bne	132d0 <fputs@plt+0x1cc8>
   132ac:	bl	12ecc <fputs@plt+0x18c4>
   132b0:	mov	r4, r0
   132b4:	mov	r2, #128	; 0x80
   132b8:	mov	r1, r5
   132bc:	add	r0, r0, #292	; 0x124
   132c0:	bl	11440 <memcpy@plt>
   132c4:	mov	r0, #256	; 0x100
   132c8:	bl	12ba4 <fputs@plt+0x159c>
   132cc:	str	r0, [r4, #420]	; 0x1a4
   132d0:	add	r0, r4, #21
   132d4:	mov	r3, #0
   132d8:	mov	r2, r5
   132dc:	mov	r1, #256	; 0x100
   132e0:	bl	130e4 <fputs@plt+0x1adc>
   132e4:	mov	r3, #12
   132e8:	mov	r0, r4
   132ec:	strb	r3, [r4, #20]
   132f0:	pop	{r4, r5, r6, lr}
   132f4:	b	12bc0 <fputs@plt+0x15b8>
   132f8:	ldrb	r1, [r0, #277]	; 0x115
   132fc:	mov	r2, r0
   13300:	sub	r1, r1, #1
   13304:	uxtb	r1, r1
   13308:	cmp	r1, #0
   1330c:	strb	r1, [r0, #277]	; 0x115
   13310:	bne	13334 <fputs@plt+0x1d2c>
   13314:	ldr	r3, [r0, #424]	; 0x1a8
   13318:	push	{r4, lr}
   1331c:	mov	r4, r0
   13320:	ldm	r3, {r0, r2}
   13324:	blx	r2
   13328:	mov	r0, r4
   1332c:	pop	{r4, lr}
   13330:	b	12e4c <fputs@plt+0x1844>
   13334:	ldrb	r3, [r0, #20]
   13338:	cmp	r3, #12
   1333c:	beq	1335c <fputs@plt+0x1d54>
   13340:	cmp	r3, #28
   13344:	beq	13350 <fputs@plt+0x1d48>
   13348:	cmp	r3, #1
   1334c:	bxne	lr
   13350:	mov	r0, #0
   13354:	ldr	r1, [r2, #420]	; 0x1a4
   13358:	b	12f84 <fputs@plt+0x197c>
   1335c:	add	r1, r0, #292	; 0x124
   13360:	mov	r0, #0
   13364:	b	1329c <fputs@plt+0x1c94>
   13368:	push	{r4, r5, r6, lr}
   1336c:	ldr	r5, [pc, #100]	; 133d8 <fputs@plt+0x1dd0>
   13370:	bl	11428 <rb_current_time@plt>
   13374:	ldr	r3, [r5, #52]	; 0x34
   13378:	cmp	r3, #0
   1337c:	popeq	{r4, r5, r6, pc}
   13380:	mov	r6, r0
   13384:	ldr	r4, [r3, #8]
   13388:	ldr	r0, [r3]
   1338c:	ldr	r2, [r0, #280]	; 0x118
   13390:	ldr	r3, [r0, #284]	; 0x11c
   13394:	add	r2, r3, r2
   13398:	cmp	r6, r2
   1339c:	blt	133c4 <fputs@plt+0x1dbc>
   133a0:	ldr	r2, [r0, #288]	; 0x120
   133a4:	lsl	r3, r3, #1
   133a8:	str	r6, [r0, #280]	; 0x118
   133ac:	str	r3, [r0, #284]	; 0x11c
   133b0:	add	r2, r5, r2, lsl #2
   133b4:	ldr	r1, [r2, #4]
   133b8:	add	r1, r1, #1
   133bc:	str	r1, [r2, #4]
   133c0:	bl	132f8 <fputs@plt+0x1cf0>
   133c4:	cmp	r4, #0
   133c8:	popeq	{r4, r5, r6, pc}
   133cc:	mov	r3, r4
   133d0:	ldr	r4, [r4, #8]
   133d4:	b	13388 <fputs@plt+0x1d80>
   133d8:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   133dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133e0:	sub	sp, sp, #1552	; 0x610
   133e4:	mov	r3, #128	; 0x80
   133e8:	sub	sp, sp, #4
   133ec:	add	r9, sp, #32
   133f0:	add	r5, sp, #516	; 0x204
   133f4:	str	r3, [sp, #28]
   133f8:	bl	112c0 <rb_get_fd@plt>
   133fc:	sub	r3, r9, #4
   13400:	movw	r2, #1036	; 0x40c
   13404:	str	r9, [sp]
   13408:	mov	r1, r5
   1340c:	str	r3, [sp, #4]
   13410:	mov	r3, #0
   13414:	bl	115b4 <recvfrom@plt>
   13418:	add	r3, r0, #1
   1341c:	cmp	r3, #1
   13420:	movls	r0, #0
   13424:	bls	13438 <fputs@plt+0x1e30>
   13428:	cmp	r0, #12
   1342c:	mov	r6, r0
   13430:	bgt	13444 <fputs@plt+0x1e3c>
   13434:	mov	r0, #1
   13438:	add	sp, sp, #1552	; 0x610
   1343c:	add	sp, sp, #4
   13440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13444:	ldrh	r3, [r5, #6]
   13448:	ldr	r7, [pc, #1096]	; 13898 <fputs@plt+0x2290>
   1344c:	rev16	r3, r3
   13450:	strh	r3, [r5, #6]
   13454:	ldrh	r3, [r5, #4]
   13458:	rev16	r3, r3
   1345c:	uxth	r2, r3
   13460:	strh	r3, [r5, #4]
   13464:	ldrh	r3, [r5, #8]
   13468:	str	r2, [sp, #8]
   1346c:	ldrh	r2, [r5]
   13470:	rev16	r3, r3
   13474:	strh	r3, [r5, #8]
   13478:	ldrh	r3, [r5, #10]
   1347c:	rev16	r3, r3
   13480:	strh	r3, [r5, #10]
   13484:	ldr	r3, [r7, #52]	; 0x34
   13488:	cmp	r3, #0
   1348c:	beq	13434 <fputs@plt+0x1e2c>
   13490:	ldr	r4, [r3]
   13494:	ldr	r1, [r4, #12]
   13498:	cmp	r2, r1
   1349c:	bne	13584 <fputs@plt+0x1f7c>
   134a0:	ldr	r3, [pc, #1012]	; 1389c <fputs@plt+0x2294>
   134a4:	mov	sl, #0
   134a8:	add	r9, r9, #8
   134ac:	ldr	r8, [pc, #1004]	; 138a0 <fputs@plt+0x2298>
   134b0:	ldrh	fp, [r9, #-6]
   134b4:	ldr	r3, [r3]
   134b8:	str	r3, [sp, #20]
   134bc:	ldrh	r3, [r9, #-8]
   134c0:	str	r3, [sp, #12]
   134c4:	ldr	r3, [sp, #36]	; 0x24
   134c8:	str	r3, [sp, #16]
   134cc:	ldr	r3, [sp, #20]
   134d0:	cmp	sl, r3
   134d4:	blt	1358c <fputs@plt+0x1f84>
   134d8:	mov	r8, #0
   134dc:	ldr	r3, [r4, #288]	; 0x120
   134e0:	cmp	r3, r8
   134e4:	beq	134fc <fputs@plt+0x1ef4>
   134e8:	ldr	r3, [pc, #936]	; 13898 <fputs@plt+0x2290>
   134ec:	add	r3, r3, r8, lsl #2
   134f0:	ldr	r2, [r3, #4]
   134f4:	add	r2, r2, #3
   134f8:	str	r2, [r3, #4]
   134fc:	ldr	r3, [sp, #8]
   13500:	cmp	r3, #1
   13504:	bne	13434 <fputs@plt+0x1e2c>
   13508:	mov	r3, #256	; 0x100
   1350c:	add	r6, r5, r6
   13510:	add	r2, sp, #528	; 0x210
   13514:	mov	r1, r6
   13518:	mov	r0, r5
   1351c:	str	r3, [sp]
   13520:	add	r3, sp, #160	; 0xa0
   13524:	bl	13b78 <fputs@plt+0x2570>
   13528:	cmp	r0, #0
   1352c:	ble	13434 <fputs@plt+0x1e2c>
   13530:	add	r1, r4, #21
   13534:	add	r0, sp, #160	; 0xa0
   13538:	bl	113ec <rb_strcasecmp@plt>
   1353c:	cmp	r0, #0
   13540:	bne	13434 <fputs@plt+0x1e2c>
   13544:	ldrb	r3, [sp, #519]	; 0x207
   13548:	ands	r3, r3, #15
   1354c:	bne	1362c <fputs@plt+0x2024>
   13550:	ldrh	r3, [r5, #6]
   13554:	cmp	r3, #0
   13558:	addne	r5, sp, #528	; 0x210
   1355c:	movne	r3, r5
   13560:	subne	r9, r3, #12
   13564:	bne	136a8 <fputs@plt+0x20a0>
   13568:	ldr	r3, [r4, #424]	; 0x1a8
   1356c:	mov	r1, #0
   13570:	ldm	r3, {r0, r2}
   13574:	blx	r2
   13578:	mov	r0, r4
   1357c:	bl	12e4c <fputs@plt+0x1844>
   13580:	b	13434 <fputs@plt+0x1e2c>
   13584:	ldr	r3, [r3, #8]
   13588:	b	13488 <fputs@plt+0x1e80>
   1358c:	ldrh	r2, [r8, #-8]
   13590:	cmp	r2, #2
   13594:	beq	135f4 <fputs@plt+0x1fec>
   13598:	cmp	r2, #10
   1359c:	bne	135e8 <fputs@plt+0x1fe0>
   135a0:	ldr	r3, [sp, #12]
   135a4:	cmp	r3, #10
   135a8:	bne	135e8 <fputs@plt+0x1fe0>
   135ac:	ldrh	r2, [r8, #-6]
   135b0:	cmp	r2, fp
   135b4:	bne	135e8 <fputs@plt+0x1fe0>
   135b8:	mov	r2, #16
   135bc:	mov	r1, r9
   135c0:	mov	r0, r8
   135c4:	bl	11290 <memcmp@plt>
   135c8:	cmp	r0, #0
   135cc:	beq	13624 <fputs@plt+0x201c>
   135d0:	mov	r2, #16
   135d4:	ldr	r1, [pc, #712]	; 138a4 <fputs@plt+0x229c>
   135d8:	mov	r0, r8
   135dc:	bl	11290 <memcmp@plt>
   135e0:	cmp	r0, #0
   135e4:	beq	13624 <fputs@plt+0x201c>
   135e8:	add	sl, sl, #1
   135ec:	add	r8, r8, #128	; 0x80
   135f0:	b	134cc <fputs@plt+0x1ec4>
   135f4:	ldr	r3, [sp, #12]
   135f8:	cmp	r3, #2
   135fc:	bne	135e8 <fputs@plt+0x1fe0>
   13600:	ldrh	r2, [r8, #-6]
   13604:	cmp	r2, fp
   13608:	bne	135e8 <fputs@plt+0x1fe0>
   1360c:	ldr	r2, [r8, #-4]
   13610:	cmp	r2, #0
   13614:	beq	13624 <fputs@plt+0x201c>
   13618:	ldr	r3, [sp, #16]
   1361c:	cmp	r2, r3
   13620:	b	135e4 <fputs@plt+0x1fdc>
   13624:	mov	r8, #1
   13628:	b	134dc <fputs@plt+0x1ed4>
   1362c:	sub	r2, r3, #4
   13630:	cmp	r3, #2
   13634:	cmpne	r2, #1
   13638:	bhi	13658 <fputs@plt+0x2050>
   1363c:	add	r7, r7, r8, lsl #2
   13640:	mov	r0, r4
   13644:	ldr	r3, [r7, #4]
   13648:	add	r3, r3, #1
   1364c:	str	r3, [r7, #4]
   13650:	bl	132f8 <fputs@plt+0x1cf0>
   13654:	b	13434 <fputs@plt+0x1e2c>
   13658:	cmp	r3, #3
   1365c:	bne	13568 <fputs@plt+0x1f60>
   13660:	add	r7, r7, r8, lsl #2
   13664:	ldr	r3, [r7, #4]
   13668:	add	r2, r3, #3
   1366c:	cmp	r3, #0
   13670:	movlt	r3, r2
   13674:	asr	r3, r3, #2
   13678:	str	r3, [r7, #4]
   1367c:	b	13568 <fputs@plt+0x1f60>
   13680:	mov	r1, r6
   13684:	mov	r0, r5
   13688:	bl	13fc8 <fputs@plt+0x29c0>
   1368c:	cmp	r0, #0
   13690:	blt	1363c <fputs@plt+0x2034>
   13694:	ldrh	r3, [r9, #4]
   13698:	add	r0, r0, #4
   1369c:	add	r5, r5, r0
   136a0:	sub	r3, r3, #1
   136a4:	strh	r3, [r9, #4]
   136a8:	ldrh	sl, [r9, #4]
   136ac:	cmp	sl, #0
   136b0:	bne	13680 <fputs@plt+0x2078>
   136b4:	add	r9, sp, #516	; 0x204
   136b8:	movw	fp, #355	; 0x163
   136bc:	ldrh	r3, [r9, #6]
   136c0:	cmp	r3, #0
   136c4:	cmpne	r6, r5
   136c8:	bls	13830 <fputs@plt+0x2228>
   136cc:	sub	r3, r3, #1
   136d0:	mov	r2, r5
   136d4:	mov	r1, r6
   136d8:	mov	r0, r9
   136dc:	strh	r3, [r9, #6]
   136e0:	add	r3, sp, #160	; 0xa0
   136e4:	str	fp, [sp]
   136e8:	bl	13b78 <fputs@plt+0x2570>
   136ec:	cmp	r0, #0
   136f0:	ble	1363c <fputs@plt+0x2034>
   136f4:	add	r5, r5, r0
   136f8:	strb	sl, [sp, #415]	; 0x19f
   136fc:	add	r2, r5, #10
   13700:	cmp	r6, r2
   13704:	str	r2, [sp, #12]
   13708:	bls	13830 <fputs@plt+0x2228>
   1370c:	mov	r0, r5
   13710:	bl	1404c <fputs@plt+0x2a44>
   13714:	mov	r3, r0
   13718:	add	r0, r5, #2
   1371c:	str	r3, [sp, #8]
   13720:	bl	1404c <fputs@plt+0x2a44>
   13724:	add	r0, r5, #4
   13728:	bl	1405c <fputs@plt+0x2a54>
   1372c:	str	r0, [r4, #16]
   13730:	add	r0, r5, #8
   13734:	bl	1404c <fputs@plt+0x2a44>
   13738:	ldr	r3, [sp, #8]
   1373c:	ldr	r2, [sp, #12]
   13740:	cmp	r3, #12
   13744:	beq	137f8 <fputs@plt+0x21f0>
   13748:	cmp	r3, #28
   1374c:	beq	137bc <fputs@plt+0x21b4>
   13750:	cmp	r3, #1
   13754:	bne	13890 <fputs@plt+0x2288>
   13758:	ldrb	r3, [r4, #20]
   1375c:	cmp	r3, #1
   13760:	bne	1363c <fputs@plt+0x2034>
   13764:	cmp	r0, #4
   13768:	bne	1363c <fputs@plt+0x2034>
   1376c:	add	r3, r4, #292	; 0x124
   13770:	mov	r2, #2
   13774:	strh	r2, [r3]
   13778:	ldr	r3, [r5, #10]
   1377c:	str	r3, [r4, #296]	; 0x128
   13780:	mov	r0, #132	; 0x84
   13784:	bl	12ba4 <fputs@plt+0x159c>
   13788:	ldr	r3, [r4, #420]	; 0x1a4
   1378c:	mov	r5, r0
   13790:	add	r1, r4, #292	; 0x124
   13794:	mov	r2, #128	; 0x80
   13798:	str	r3, [r0], #4
   1379c:	bl	11440 <memcpy@plt>
   137a0:	ldr	r3, [r4, #424]	; 0x1a8
   137a4:	mov	r1, r5
   137a8:	ldm	r3, {r0, r2}
   137ac:	blx	r2
   137b0:	mov	r0, r5
   137b4:	bl	12b98 <fputs@plt+0x1590>
   137b8:	b	13868 <fputs@plt+0x2260>
   137bc:	ldrb	r3, [r4, #20]
   137c0:	cmp	r3, #28
   137c4:	bne	1363c <fputs@plt+0x2034>
   137c8:	cmp	r0, #16
   137cc:	bne	1363c <fputs@plt+0x2034>
   137d0:	add	r3, r4, #292	; 0x124
   137d4:	mov	r1, #10
   137d8:	add	r0, r5, #26
   137dc:	strh	r1, [r3]
   137e0:	add	r3, r4, #300	; 0x12c
   137e4:	ldr	r1, [r2], #4
   137e8:	cmp	r2, r0
   137ec:	str	r1, [r3], #4
   137f0:	bne	137e4 <fputs@plt+0x21dc>
   137f4:	b	13780 <fputs@plt+0x2178>
   137f8:	ldrb	r3, [r4, #20]
   137fc:	cmp	r3, #12
   13800:	bne	1363c <fputs@plt+0x2034>
   13804:	add	r3, sp, #160	; 0xa0
   13808:	mov	r1, r6
   1380c:	str	fp, [sp]
   13810:	mov	r0, r9
   13814:	bl	13b78 <fputs@plt+0x2570>
   13818:	cmp	r0, #0
   1381c:	ble	1363c <fputs@plt+0x2034>
   13820:	mov	r2, #256	; 0x100
   13824:	add	r1, sp, #160	; 0xa0
   13828:	ldr	r0, [r4, #420]	; 0x1a4
   1382c:	bl	113a4 <rb_strlcpy@plt>
   13830:	ldrb	r3, [r4, #20]
   13834:	cmp	r3, #12
   13838:	bne	13780 <fputs@plt+0x2178>
   1383c:	ldr	r1, [r4, #420]	; 0x1a4
   13840:	cmp	r1, #0
   13844:	beq	1363c <fputs@plt+0x2034>
   13848:	add	r3, r4, #292	; 0x124
   1384c:	mov	r2, #0
   13850:	ldr	r0, [r4, #424]	; 0x1a8
   13854:	ldrh	r3, [r3]
   13858:	cmp	r3, #10
   1385c:	moveq	r3, #28
   13860:	movne	r3, #1
   13864:	bl	12f84 <fputs@plt+0x197c>
   13868:	add	r7, r7, r8, lsl #2
   1386c:	mov	r0, r4
   13870:	bl	12e4c <fputs@plt+0x1844>
   13874:	ldr	r3, [r7, #4]
   13878:	add	r2, r3, #3
   1387c:	cmp	r3, #0
   13880:	movlt	r3, r2
   13884:	asr	r3, r3, #2
   13888:	str	r3, [r7, #4]
   1388c:	b	13434 <fputs@plt+0x1e2c>
   13890:	add	r5, r2, r0
   13894:	b	136bc <fputs@plt+0x20b4>
   13898:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   1389c:	ldrdeq	sp, [r2], -ip
   138a0:	andeq	lr, r2, r4, lsr #5
   138a4:	strdeq	r8, [r2], -r0
   138a8:	push	{r4, lr}
   138ac:	mov	r4, r0
   138b0:	mov	r0, r4
   138b4:	bl	133dc <fputs@plt+0x1dd4>
   138b8:	subs	r3, r0, #0
   138bc:	bne	138b0 <fputs@plt+0x22a8>
   138c0:	mov	r0, r4
   138c4:	ldr	r2, [pc, #8]	; 138d4 <fputs@plt+0x22cc>
   138c8:	mov	r1, #1
   138cc:	pop	{r4, lr}
   138d0:	b	112b4 <rb_setselect@plt>
   138d4:	andeq	r3, r1, r8, lsr #17
   138d8:	mov	r3, r1
   138dc:	mov	r2, #0
   138e0:	mov	r1, r0
   138e4:	mov	r0, r3
   138e8:	b	1329c <fputs@plt+0x1c94>
   138ec:	push	{r4, r5, r6, lr}
   138f0:	sub	sp, sp, #40	; 0x28
   138f4:	ldr	r6, [pc, #132]	; 13980 <fputs@plt+0x2378>
   138f8:	ldr	r3, [r6]
   138fc:	cmp	r3, #9
   13900:	bgt	13978 <fputs@plt+0x2370>
   13904:	mov	r4, r0
   13908:	mov	r2, #28
   1390c:	mov	r1, #0
   13910:	add	r0, sp, #12
   13914:	bl	11368 <memset@plt>
   13918:	mov	r3, #2
   1391c:	add	r2, sp, #8
   13920:	ldr	r1, [pc, #92]	; 13984 <fputs@plt+0x237c>
   13924:	mov	r0, r4
   13928:	str	r3, [sp, #16]
   1392c:	mov	r3, #5
   13930:	str	r3, [sp, #8]
   13934:	add	r3, sp, #4
   13938:	bl	113f8 <getaddrinfo@plt>
   1393c:	cmp	r0, #0
   13940:	bne	13978 <fputs@plt+0x2370>
   13944:	ldr	r4, [sp, #4]
   13948:	cmp	r4, #0
   1394c:	beq	13978 <fputs@plt+0x2370>
   13950:	ldr	r0, [pc, #48]	; 13988 <fputs@plt+0x2380>
   13954:	ldr	r5, [r6]
   13958:	ldr	r2, [r4, #16]
   1395c:	ldr	r1, [r4, #20]
   13960:	add	r0, r0, r5, lsl #7
   13964:	add	r5, r5, #1
   13968:	bl	11440 <memcpy@plt>
   1396c:	mov	r0, r4
   13970:	str	r5, [r6]
   13974:	bl	11374 <freeaddrinfo@plt>
   13978:	add	sp, sp, #40	; 0x28
   1397c:	pop	{r4, r5, r6, pc}
   13980:	ldrdeq	sp, [r2], -ip
   13984:	andeq	r7, r1, lr, lsr r8
   13988:	muleq	r2, ip, r2
   1398c:	ldrb	r3, [r0]
   13990:	and	r2, r3, #192	; 0xc0
   13994:	cmp	r2, #192	; 0xc0
   13998:	beq	139d0 <fputs@plt+0x23c8>
   1399c:	cmp	r2, #64	; 0x40
   139a0:	beq	139ac <fputs@plt+0x23a4>
   139a4:	mov	r0, r3
   139a8:	bx	lr
   139ac:	cmp	r3, #65	; 0x41
   139b0:	bne	139d0 <fputs@plt+0x23c8>
   139b4:	ldrb	r0, [r0, #1]
   139b8:	cmp	r0, #0
   139bc:	moveq	r0, #256	; 0x100
   139c0:	add	r0, r0, #7
   139c4:	asr	r0, r0, #3
   139c8:	add	r0, r0, #1
   139cc:	bx	lr
   139d0:	mvn	r0, #0
   139d4:	bx	lr
   139d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   139dc:	mov	r3, #0
   139e0:	sub	sp, sp, #132	; 0x84
   139e4:	ldr	r4, [pc, #360]	; 13b54 <fputs@plt+0x254c>
   139e8:	ldr	r1, [pc, #360]	; 13b58 <fputs@plt+0x2550>
   139ec:	ldr	r0, [pc, #360]	; 13b5c <fputs@plt+0x2554>
   139f0:	str	r3, [r4]
   139f4:	bl	1135c <fopen@plt>
   139f8:	subs	r5, r0, #0
   139fc:	beq	13a2c <fputs@plt+0x2424>
   13a00:	ldr	r7, [pc, #344]	; 13b60 <fputs@plt+0x2558>
   13a04:	ldr	r8, [pc, #344]	; 13b64 <fputs@plt+0x255c>
   13a08:	ldr	r9, [pc, #344]	; 13b68 <fputs@plt+0x2560>
   13a0c:	mov	r2, r5
   13a10:	mov	r1, #128	; 0x80
   13a14:	mov	r0, sp
   13a18:	bl	112fc <fgets@plt>
   13a1c:	cmp	r0, #0
   13a20:	bne	13a4c <fputs@plt+0x2444>
   13a24:	mov	r0, r5
   13a28:	bl	112f0 <fclose@plt>
   13a2c:	ldr	r3, [r4]
   13a30:	cmp	r3, #0
   13a34:	bne	13a40 <fputs@plt+0x2438>
   13a38:	ldr	r0, [pc, #300]	; 13b6c <fputs@plt+0x2564>
   13a3c:	bl	138ec <fputs@plt+0x22e4>
   13a40:	mov	r0, #0
   13a44:	add	sp, sp, #132	; 0x84
   13a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a4c:	mov	r1, r7
   13a50:	mov	r0, sp
   13a54:	bl	115cc <strpbrk@plt>
   13a58:	cmp	r0, #0
   13a5c:	movne	r3, #0
   13a60:	strbne	r3, [r0]
   13a64:	bl	114dc <__ctype_b_loc@plt>
   13a68:	ldr	r1, [r0]
   13a6c:	mov	r3, sp
   13a70:	mov	r0, r3
   13a74:	mov	r6, r3
   13a78:	ldrb	r2, [r0], #1
   13a7c:	lsl	ip, r2, #1
   13a80:	ldrh	ip, [r1, ip]
   13a84:	tst	ip, #8192	; 0x2000
   13a88:	bne	13ac4 <fputs@plt+0x24bc>
   13a8c:	cmp	r2, #0
   13a90:	beq	13a0c <fputs@plt+0x2404>
   13a94:	cmp	r2, #59	; 0x3b
   13a98:	cmpne	r2, #35	; 0x23
   13a9c:	beq	13a0c <fputs@plt+0x2404>
   13aa0:	mov	r2, r3
   13aa4:	ldrb	r0, [r3], #1
   13aa8:	lsl	ip, r0, #1
   13aac:	ldrh	ip, [r1, ip]
   13ab0:	tst	ip, #8192	; 0x2000
   13ab4:	bne	13acc <fputs@plt+0x24c4>
   13ab8:	cmp	r0, #0
   13abc:	bne	13aa0 <fputs@plt+0x2498>
   13ac0:	b	13a0c <fputs@plt+0x2404>
   13ac4:	mov	r3, r0
   13ac8:	b	13a70 <fputs@plt+0x2468>
   13acc:	cmp	r0, #0
   13ad0:	beq	13a0c <fputs@plt+0x2404>
   13ad4:	mov	r3, r2
   13ad8:	mov	r2, #0
   13adc:	strb	r2, [r3], #1
   13ae0:	mov	sl, r3
   13ae4:	ldrb	r2, [r3], #1
   13ae8:	lsl	r2, r2, #1
   13aec:	ldrh	r2, [r1, r2]
   13af0:	ands	fp, r2, #8192	; 0x2000
   13af4:	bne	13ae0 <fputs@plt+0x24d8>
   13af8:	mov	r1, r8
   13afc:	mov	r0, sl
   13b00:	bl	115cc <strpbrk@plt>
   13b04:	cmp	r0, #0
   13b08:	mov	r1, r9
   13b0c:	strbne	fp, [r0]
   13b10:	mov	r0, r6
   13b14:	bl	113ec <rb_strcasecmp@plt>
   13b18:	cmp	r0, #0
   13b1c:	bne	13b34 <fputs@plt+0x252c>
   13b20:	mov	r2, #256	; 0x100
   13b24:	mov	r1, sl
   13b28:	ldr	r0, [pc, #64]	; 13b70 <fputs@plt+0x2568>
   13b2c:	bl	113a4 <rb_strlcpy@plt>
   13b30:	b	13a0c <fputs@plt+0x2404>
   13b34:	ldr	r1, [pc, #56]	; 13b74 <fputs@plt+0x256c>
   13b38:	mov	r0, r6
   13b3c:	bl	113ec <rb_strcasecmp@plt>
   13b40:	cmp	r0, #0
   13b44:	bne	13a0c <fputs@plt+0x2404>
   13b48:	mov	r0, sl
   13b4c:	bl	138ec <fputs@plt+0x22e4>
   13b50:	b	13a0c <fputs@plt+0x2404>
   13b54:	ldrdeq	sp, [r2], -ip
   13b58:	andeq	r8, r1, r4, lsr #1
   13b5c:	andeq	r7, r1, r5, asr #16
   13b60:	andeq	r7, r1, lr, lsl #30
   13b64:	andeq	r7, r1, r6, asr r8
   13b68:	andeq	r7, r1, lr, lsr r8
   13b6c:	andeq	r7, r1, r4, ror #16
   13b70:	muleq	r2, ip, r1
   13b74:	andeq	r7, r1, r9, asr r8
   13b78:	cmp	r0, r2
   13b7c:	cmpls	r2, r1
   13b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b84:	sub	sp, sp, #276	; 0x114
   13b88:	movcs	r6, #1
   13b8c:	movcc	r6, #0
   13b90:	bcc	13d00 <fputs@plt+0x26f8>
   13b94:	bl	115f0 <__errno_location@plt>
   13b98:	mov	r3, #90	; 0x5a
   13b9c:	b	13de8 <fputs@plt+0x27e0>
   13ba0:	and	r0, r2, #192	; 0xc0
   13ba4:	cmp	r0, #64	; 0x40
   13ba8:	beq	13bbc <fputs@plt+0x25b4>
   13bac:	cmp	r0, #192	; 0xc0
   13bb0:	beq	13cac <fputs@plt+0x26a4>
   13bb4:	cmp	r0, #0
   13bb8:	bne	13b94 <fputs@plt+0x258c>
   13bbc:	mov	r0, r5
   13bc0:	str	r3, [sp, #8]
   13bc4:	str	r2, [sp, #12]
   13bc8:	bl	1398c <fputs@plt+0x2384>
   13bcc:	subs	fp, r0, #0
   13bd0:	ldr	r3, [sp, #8]
   13bd4:	ldr	r2, [sp, #12]
   13bd8:	blt	13b94 <fputs@plt+0x258c>
   13bdc:	add	r0, fp, #1
   13be0:	add	lr, sp, #268	; 0x10c
   13be4:	add	ip, r3, r0
   13be8:	add	lr, lr, #3
   13bec:	cmp	lr, ip
   13bf0:	bls	13b94 <fputs@plt+0x258c>
   13bf4:	add	r5, r1, fp
   13bf8:	cmp	sl, r5
   13bfc:	bls	13b94 <fputs@plt+0x258c>
   13c00:	add	r6, r6, r0
   13c04:	strb	r2, [r3], #1
   13c08:	mov	r2, fp
   13c0c:	mov	r0, r3
   13c10:	bl	11440 <memcpy@plt>
   13c14:	add	r3, r0, fp
   13c18:	mov	r1, r5
   13c1c:	ldrb	r2, [r1], #1
   13c20:	cmp	r2, #0
   13c24:	bne	13ba0 <fputs@plt+0x2598>
   13c28:	cmp	r8, #0
   13c2c:	strb	r2, [r3]
   13c30:	bge	13c40 <fputs@plt+0x2638>
   13c34:	sub	r8, r1, r4
   13c38:	cmn	r8, #1
   13c3c:	beq	13dec <fputs@plt+0x27e4>
   13c40:	ldr	r7, [sp, #312]	; 0x138
   13c44:	mov	r5, r9
   13c48:	add	fp, sp, #16
   13c4c:	add	r7, r9, r7
   13c50:	ldrb	r1, [fp]
   13c54:	cmp	r1, #0
   13c58:	bne	13d28 <fputs@plt+0x2720>
   13c5c:	cmp	r9, r5
   13c60:	bne	13c78 <fputs@plt+0x2670>
   13c64:	cmp	r7, r9
   13c68:	movhi	r5, r9
   13c6c:	movhi	r3, #46	; 0x2e
   13c70:	strbhi	r3, [r5], #1
   13c74:	bls	13b94 <fputs@plt+0x258c>
   13c78:	cmp	r7, r5
   13c7c:	bls	13b94 <fputs@plt+0x258c>
   13c80:	mov	r3, #0
   13c84:	strb	r3, [r5], #1
   13c88:	sub	r5, r5, r9
   13c8c:	cmn	r5, #1
   13c90:	beq	13dec <fputs@plt+0x27e4>
   13c94:	cmp	r8, #0
   13c98:	ble	13df0 <fputs@plt+0x27e8>
   13c9c:	ldrb	r2, [r9]
   13ca0:	cmp	r2, #46	; 0x2e
   13ca4:	strbeq	r3, [r9]
   13ca8:	b	13df0 <fputs@plt+0x27e8>
   13cac:	cmp	sl, r1
   13cb0:	bls	13b94 <fputs@plt+0x258c>
   13cb4:	ldrb	r5, [r5, #1]
   13cb8:	lsl	r2, r2, #8
   13cbc:	cmp	r8, #0
   13cc0:	sublt	r1, r1, r4
   13cc4:	and	r2, r2, #16128	; 0x3f00
   13cc8:	addlt	r8, r1, #1
   13ccc:	orr	r5, r2, r5
   13cd0:	adds	r5, r7, r5
   13cd4:	movcs	r2, #1
   13cd8:	movcc	r2, #0
   13cdc:	cmp	sl, r5
   13ce0:	orrls	r2, r2, #1
   13ce4:	cmp	r2, #0
   13ce8:	bne	13b94 <fputs@plt+0x258c>
   13cec:	ldr	r2, [sp, #4]
   13cf0:	add	r6, r6, #2
   13cf4:	cmp	r6, r2
   13cf8:	blt	13c18 <fputs@plt+0x2610>
   13cfc:	b	13b94 <fputs@plt+0x258c>
   13d00:	mov	r4, r2
   13d04:	mov	r5, r2
   13d08:	sub	r2, r1, r0
   13d0c:	mov	r9, r3
   13d10:	mov	r7, r0
   13d14:	mov	sl, r1
   13d18:	mvn	r8, #0
   13d1c:	add	r3, sp, #16
   13d20:	str	r2, [sp, #4]
   13d24:	b	13c18 <fputs@plt+0x2610>
   13d28:	and	r4, r1, #192	; 0xc0
   13d2c:	cmp	r4, #192	; 0xc0
   13d30:	beq	13b94 <fputs@plt+0x258c>
   13d34:	cmp	r9, r5
   13d38:	beq	13d4c <fputs@plt+0x2744>
   13d3c:	cmp	r7, r5
   13d40:	bls	13b94 <fputs@plt+0x258c>
   13d44:	mov	r3, #46	; 0x2e
   13d48:	strb	r3, [r5], #1
   13d4c:	mov	r0, fp
   13d50:	bl	1398c <fputs@plt+0x2384>
   13d54:	cmp	r0, #0
   13d58:	blt	13b94 <fputs@plt+0x258c>
   13d5c:	add	r3, r5, r0
   13d60:	cmp	r7, r3
   13d64:	bls	13b94 <fputs@plt+0x258c>
   13d68:	cmp	r4, #64	; 0x40
   13d6c:	beq	13dd8 <fputs@plt+0x27d0>
   13d70:	add	r0, r0, #2
   13d74:	mov	r4, r5
   13d78:	add	r1, fp, r0
   13d7c:	mov	r5, #92	; 0x5c
   13d80:	add	fp, fp, #1
   13d84:	mov	r6, #100	; 0x64
   13d88:	mov	lr, #10
   13d8c:	mov	ip, fp
   13d90:	ldrb	r3, [ip], #1
   13d94:	cmp	r1, ip
   13d98:	beq	13eb8 <fputs@plt+0x28b0>
   13d9c:	cmp	r3, #41	; 0x29
   13da0:	bhi	13f18 <fputs@plt+0x2910>
   13da4:	cmp	r3, #40	; 0x28
   13da8:	bcs	13f3c <fputs@plt+0x2934>
   13dac:	cmp	r3, #34	; 0x22
   13db0:	beq	13f3c <fputs@plt+0x2934>
   13db4:	cmp	r3, #36	; 0x24
   13db8:	beq	13f3c <fputs@plt+0x2934>
   13dbc:	sub	r2, r3, #33	; 0x21
   13dc0:	cmp	r2, #93	; 0x5d
   13dc4:	bhi	13f60 <fputs@plt+0x2958>
   13dc8:	cmp	r7, r4
   13dcc:	bls	13b94 <fputs@plt+0x258c>
   13dd0:	strb	r3, [r4], #1
   13dd4:	b	13f58 <fputs@plt+0x2950>
   13dd8:	cmp	r1, #65	; 0x41
   13ddc:	beq	13dfc <fputs@plt+0x27f4>
   13de0:	bl	115f0 <__errno_location@plt>
   13de4:	mov	r3, #22
   13de8:	str	r3, [r0]
   13dec:	mvn	r8, #0
   13df0:	mov	r0, r8
   13df4:	add	sp, sp, #276	; 0x114
   13df8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dfc:	ldrb	r6, [fp, #1]
   13e00:	cmp	r6, #0
   13e04:	moveq	r6, #256	; 0x100
   13e08:	add	r3, r6, #3
   13e0c:	cmp	r6, #99	; 0x63
   13e10:	asr	r3, r3, #2
   13e14:	movgt	r2, #9
   13e18:	bgt	13e28 <fputs@plt+0x2820>
   13e1c:	cmp	r6, #9
   13e20:	movgt	r2, #8
   13e24:	movle	r2, #7
   13e28:	add	r3, r3, r2
   13e2c:	add	r3, r5, r3
   13e30:	cmp	r7, r3
   13e34:	bls	13b94 <fputs@plt+0x258c>
   13e38:	add	sl, fp, #2
   13e3c:	ldr	r1, [pc, #368]	; 13fb4 <fputs@plt+0x29ac>
   13e40:	mov	r0, r5
   13e44:	bl	1147c <strcpy@plt>
   13e48:	add	r4, r5, #3
   13e4c:	mov	fp, r6
   13e50:	mov	r3, sl
   13e54:	cmp	fp, #7
   13e58:	bgt	13ec0 <fputs@plt+0x28b8>
   13e5c:	lsr	r2, r6, #3
   13e60:	mvn	r3, #7
   13e64:	add	fp, sl, r2
   13e68:	mla	r3, r3, r2, r6
   13e6c:	cmp	r3, #4
   13e70:	ble	13ee4 <fputs@plt+0x28dc>
   13e74:	ldrb	r2, [sl, r6, lsr #3]
   13e78:	rsb	r3, r3, #8
   13e7c:	mov	r1, #255	; 0xff
   13e80:	mov	r0, r4
   13e84:	add	fp, fp, #1
   13e88:	add	r4, r4, #2
   13e8c:	and	r2, r2, r1, lsl r3
   13e90:	ldr	r1, [pc, #288]	; 13fb8 <fputs@plt+0x29b0>
   13e94:	bl	115fc <sprintf@plt>
   13e98:	mov	r0, r4
   13e9c:	mov	r2, r6
   13ea0:	ldr	r1, [pc, #276]	; 13fbc <fputs@plt+0x29b4>
   13ea4:	bl	115fc <sprintf@plt>
   13ea8:	add	r4, r4, r0
   13eac:	sub	r5, r4, r5
   13eb0:	cmp	r5, #0
   13eb4:	blt	13b94 <fputs@plt+0x258c>
   13eb8:	mov	r5, r4
   13ebc:	b	13c50 <fputs@plt+0x2648>
   13ec0:	ldrb	r2, [r3], #1
   13ec4:	mov	r0, r4
   13ec8:	sub	fp, fp, #8
   13ecc:	add	r4, r4, #2
   13ed0:	ldr	r1, [pc, #224]	; 13fb8 <fputs@plt+0x29b0>
   13ed4:	str	r3, [sp, #4]
   13ed8:	bl	115fc <sprintf@plt>
   13edc:	ldr	r3, [sp, #4]
   13ee0:	b	13e54 <fputs@plt+0x284c>
   13ee4:	cmp	r3, #0
   13ee8:	beq	13e98 <fputs@plt+0x2890>
   13eec:	ldrb	r2, [sl, r2]
   13ef0:	mov	r1, #15
   13ef4:	rsb	r3, r3, #4
   13ef8:	lsl	r3, r1, r3
   13efc:	mov	r0, r4
   13f00:	add	fp, fp, #1
   13f04:	ldr	r1, [pc, #180]	; 13fc0 <fputs@plt+0x29b8>
   13f08:	add	r4, r4, #1
   13f0c:	and	r2, r3, r2, lsr #4
   13f10:	bl	115fc <sprintf@plt>
   13f14:	b	13e98 <fputs@plt+0x2890>
   13f18:	cmp	r3, #59	; 0x3b
   13f1c:	beq	13f3c <fputs@plt+0x2934>
   13f20:	bhi	13f2c <fputs@plt+0x2924>
   13f24:	cmp	r3, #46	; 0x2e
   13f28:	b	13db8 <fputs@plt+0x27b0>
   13f2c:	cmp	r3, #64	; 0x40
   13f30:	beq	13f3c <fputs@plt+0x2934>
   13f34:	cmp	r3, #92	; 0x5c
   13f38:	b	13db8 <fputs@plt+0x27b0>
   13f3c:	add	r2, r4, #1
   13f40:	cmp	r7, r2
   13f44:	bls	13b94 <fputs@plt+0x258c>
   13f48:	mov	r2, r4
   13f4c:	strb	r5, [r2], #2
   13f50:	strb	r3, [r4, #1]
   13f54:	mov	r4, r2
   13f58:	mov	fp, ip
   13f5c:	b	13d8c <fputs@plt+0x2784>
   13f60:	add	r2, r4, #3
   13f64:	cmp	r7, r2
   13f68:	bls	13b94 <fputs@plt+0x258c>
   13f6c:	udiv	r2, r3, r6
   13f70:	ldr	sl, [pc, #76]	; 13fc4 <fputs@plt+0x29bc>
   13f74:	add	r4, r4, #4
   13f78:	strb	r5, [r4, #-4]
   13f7c:	uxtb	r0, r2
   13f80:	mls	r2, r6, r2, r3
   13f84:	ldrb	r0, [sl, r0]
   13f88:	uxtb	r2, r2
   13f8c:	udiv	r2, r2, lr
   13f90:	strb	r0, [r4, #-3]
   13f94:	ldrb	r2, [sl, r2]
   13f98:	strb	r2, [r4, #-2]
   13f9c:	udiv	r2, r3, lr
   13fa0:	mls	r3, lr, r2, r3
   13fa4:	uxtb	r3, r3
   13fa8:	ldrb	r3, [sl, r3]
   13fac:	strb	r3, [r4, #-1]
   13fb0:	b	13f58 <fputs@plt+0x2950>
   13fb4:	andeq	r7, r1, lr, ror #16
   13fb8:	andeq	r7, r1, r2, ror r8
   13fbc:	andeq	r7, r1, fp, ror r8
   13fc0:	andeq	r7, r1, r7, ror r8
   13fc4:	andeq	r7, r1, r3, lsr r7
   13fc8:	push	{r4, r5, r6, lr}
   13fcc:	mov	r5, r0
   13fd0:	cmp	r1, r0
   13fd4:	bls	1403c <fputs@plt+0x2a34>
   13fd8:	mov	r4, r0
   13fdc:	ldrb	r3, [r4], #1
   13fe0:	cmp	r3, #0
   13fe4:	moveq	r0, r4
   13fe8:	beq	1403c <fputs@plt+0x2a34>
   13fec:	and	r2, r3, #192	; 0xc0
   13ff0:	cmp	r2, #64	; 0x40
   13ff4:	beq	14010 <fputs@plt+0x2a08>
   13ff8:	cmp	r2, #192	; 0xc0
   13ffc:	beq	14038 <fputs@plt+0x2a30>
   14000:	cmp	r2, #0
   14004:	bne	1401c <fputs@plt+0x2a14>
   14008:	add	r0, r4, r3
   1400c:	b	13fd0 <fputs@plt+0x29c8>
   14010:	bl	1398c <fputs@plt+0x2384>
   14014:	cmp	r0, #0
   14018:	bge	14030 <fputs@plt+0x2a28>
   1401c:	bl	115f0 <__errno_location@plt>
   14020:	mov	r3, #90	; 0x5a
   14024:	str	r3, [r0]
   14028:	mvn	r0, #0
   1402c:	pop	{r4, r5, r6, pc}
   14030:	add	r0, r4, r0
   14034:	b	13fd0 <fputs@plt+0x29c8>
   14038:	add	r0, r0, #2
   1403c:	cmp	r1, r0
   14040:	bcc	1401c <fputs@plt+0x2a14>
   14044:	sub	r0, r0, r5
   14048:	pop	{r4, r5, r6, pc}
   1404c:	ldrh	r0, [r0]
   14050:	rev16	r0, r0
   14054:	uxth	r0, r0
   14058:	bx	lr
   1405c:	ldr	r0, [r0]
   14060:	rev	r0, r0
   14064:	bx	lr
   14068:	ubfx	r3, r0, #8, #8
   1406c:	strb	r3, [r1]
   14070:	strb	r0, [r1, #1]
   14074:	bx	lr
   14078:	lsr	r3, r0, #24
   1407c:	strb	r3, [r1]
   14080:	lsr	r3, r0, #16
   14084:	strb	r0, [r1, #3]
   14088:	strb	r3, [r1, #1]
   1408c:	lsr	r3, r0, #8
   14090:	strb	r3, [r1, #2]
   14094:	bx	lr
   14098:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1409c:	sub	sp, sp, #388	; 0x184
   140a0:	str	r1, [sp, #24]
   140a4:	ldr	r1, [sp, #424]	; 0x1a8
   140a8:	str	r2, [sp, #28]
   140ac:	cmp	r1, #11
   140b0:	movgt	r2, #0
   140b4:	movle	r2, #1
   140b8:	cmp	r3, #0
   140bc:	moveq	r2, #1
   140c0:	cmp	r2, #0
   140c4:	beq	140d4 <fputs@plt+0x2acc>
   140c8:	mvn	r0, #0
   140cc:	add	sp, sp, #388	; 0x184
   140d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140d4:	mov	r7, r3
   140d8:	str	r2, [r3, #2]
   140dc:	str	r2, [r3, #6]
   140e0:	strh	r2, [r3, #10]
   140e4:	ldr	r3, [r3]
   140e8:	str	r7, [sp, #48]	; 0x30
   140ec:	str	r2, [sp, #52]	; 0x34
   140f0:	bic	r3, r3, #258998272	; 0xf700000
   140f4:	bic	r3, r3, #524288	; 0x80000
   140f8:	lsr	r3, r3, #17
   140fc:	lsl	r3, r3, #17
   14100:	orr	r3, r3, #65536	; 0x10000
   14104:	str	r3, [r7]
   14108:	subs	r3, r1, #16
   1410c:	str	r3, [sp, #16]
   14110:	bmi	140c8 <fputs@plt+0x2ac0>
   14114:	ldr	sl, [pc, #1740]	; 147e8 <fputs@plt+0x31e0>
   14118:	add	fp, sp, #380	; 0x17c
   1411c:	add	r3, sp, #129	; 0x81
   14120:	mov	r4, r0
   14124:	add	r8, sp, #128	; 0x80
   14128:	add	fp, fp, #3
   1412c:	str	r3, [sp, #40]	; 0x28
   14130:	mov	r5, r4
   14134:	ldrb	r6, [r5], #1
   14138:	cmp	r6, #0
   1413c:	bne	1416c <fputs@plt+0x2b64>
   14140:	ldr	r3, [sp, #40]	; 0x28
   14144:	sub	r3, r3, r8
   14148:	sub	r3, r3, #1
   1414c:	tst	r3, #192	; 0xc0
   14150:	bne	14438 <fputs@plt+0x2e30>
   14154:	add	r2, sp, #380	; 0x17c
   14158:	add	r2, r2, #3
   1415c:	cmp	r8, r2
   14160:	movcc	r4, r8
   14164:	bcc	14334 <fputs@plt+0x2d2c>
   14168:	b	14438 <fputs@plt+0x2e30>
   1416c:	cmp	r2, #0
   14170:	beq	1449c <fputs@plt+0x2e94>
   14174:	cmp	r6, #91	; 0x5b
   14178:	bne	143fc <fputs@plt+0x2df4>
   1417c:	mov	r1, #93	; 0x5d
   14180:	mov	r0, r5
   14184:	str	r2, [sp, #4]
   14188:	bl	11314 <strchr@plt>
   1418c:	cmp	r0, #0
   14190:	ldr	r2, [sp, #4]
   14194:	bne	141a8 <fputs@plt+0x2ba0>
   14198:	bl	115f0 <__errno_location@plt>
   1419c:	mov	r3, #22
   141a0:	str	r3, [r0]
   141a4:	b	140c8 <fputs@plt+0x2ac0>
   141a8:	add	r3, r0, #2
   141ac:	mov	r6, #0
   141b0:	sub	r5, r3, r5
   141b4:	cmp	r5, #1
   141b8:	str	r3, [sp, #8]
   141bc:	str	r6, [sp, #44]	; 0x2c
   141c0:	bgt	141d4 <fputs@plt+0x2bcc>
   141c4:	mov	r4, #22
   141c8:	bl	115f0 <__errno_location@plt>
   141cc:	str	r4, [r0]
   141d0:	b	140c8 <fputs@plt+0x2ac0>
   141d4:	ldrb	r3, [r4, #1]
   141d8:	str	r2, [sp, #20]
   141dc:	cmp	r3, #120	; 0x78
   141e0:	bne	141c4 <fputs@plt+0x2bbc>
   141e4:	bl	114dc <__ctype_b_loc@plt>
   141e8:	ldr	r3, [r0]
   141ec:	mov	r0, r3
   141f0:	ldrb	r3, [r4, #2]
   141f4:	lsl	r3, r3, #1
   141f8:	ldrh	r3, [r0, r3]
   141fc:	tst	r3, #4096	; 0x1000
   14200:	beq	141c4 <fputs@plt+0x2bbc>
   14204:	ldr	r2, [sp, #20]
   14208:	add	r3, r4, #2
   1420c:	mov	r9, r6
   14210:	add	r4, sp, #44	; 0x2c
   14214:	mov	r1, r6
   14218:	str	r6, [sp, #4]
   1421c:	str	r3, [sp, #12]
   14220:	mov	r3, r6
   14224:	ldr	ip, [sp, #8]
   14228:	ldr	r5, [sp, #12]
   1422c:	cmp	ip, r5
   14230:	movls	ip, #0
   14234:	movhi	ip, #1
   14238:	cmp	r4, fp
   1423c:	movcs	ip, #0
   14240:	cmp	ip, #0
   14244:	moveq	r1, ip
   14248:	beq	142bc <fputs@plt+0x2cb4>
   1424c:	ldr	ip, [sp, #12]
   14250:	add	lr, r5, #1
   14254:	str	lr, [sp, #12]
   14258:	ldrb	ip, [ip]
   1425c:	cmp	ip, #47	; 0x2f
   14260:	beq	143cc <fputs@plt+0x2dc4>
   14264:	cmp	ip, #93	; 0x5d
   14268:	bne	14364 <fputs@plt+0x2d5c>
   1426c:	cmp	r1, #0
   14270:	beq	142ac <fputs@plt+0x2ca4>
   14274:	str	r3, [sp, #12]
   14278:	ldr	r3, [sp, #4]
   1427c:	cmp	r3, #0
   14280:	beq	141c4 <fputs@plt+0x2bbc>
   14284:	mov	r2, #10
   14288:	add	r1, sp, #44	; 0x2c
   1428c:	mov	r0, r3
   14290:	bl	11464 <strtol@plt>
   14294:	mov	r1, r0
   14298:	ldr	r3, [sp, #12]
   1429c:	ldr	r2, [sp, #44]	; 0x2c
   142a0:	ldrb	r2, [r2]
   142a4:	cmp	r2, #93	; 0x5d
   142a8:	bne	141c4 <fputs@plt+0x2bbc>
   142ac:	cmp	r3, #0
   142b0:	add	r5, r5, #1
   142b4:	lslne	r3, r9, #4
   142b8:	strbne	r3, [r4], #1
   142bc:	ldr	r3, [sp, #8]
   142c0:	cmp	r4, fp
   142c4:	movcc	r0, #0
   142c8:	movcs	r0, #1
   142cc:	cmp	r3, r5
   142d0:	orrls	r0, r0, #1
   142d4:	cmp	r0, #0
   142d8:	bne	143dc <fputs@plt+0x2dd4>
   142dc:	cmp	r1, #0
   142e0:	ble	143d4 <fputs@plt+0x2dcc>
   142e4:	add	r3, r1, #3
   142e8:	bic	r3, r3, #3
   142ec:	cmp	r6, r3
   142f0:	bne	141c4 <fputs@plt+0x2bbc>
   142f4:	sub	r6, r6, r1
   142f8:	rsb	r6, r6, #8
   142fc:	lsl	r9, r9, r6
   14300:	tst	r9, #255	; 0xff
   14304:	bne	141c4 <fputs@plt+0x2bbc>
   14308:	mov	r3, #65	; 0x41
   1430c:	cmp	r1, #256	; 0x100
   14310:	moveq	r1, #0
   14314:	strb	r3, [r8]
   14318:	ldr	r3, [sp, #40]	; 0x28
   1431c:	strb	r1, [r3]
   14320:	add	r3, r4, #1
   14324:	str	r3, [sp, #40]	; 0x28
   14328:	ldrb	r3, [r5]
   1432c:	cmp	r3, #0
   14330:	bne	143e4 <fputs@plt+0x2ddc>
   14334:	cmp	r3, #0
   14338:	strb	r3, [r4]
   1433c:	beq	144f8 <fputs@plt+0x2ef0>
   14340:	ldr	r3, [sp, #40]	; 0x28
   14344:	add	r2, sp, #380	; 0x17c
   14348:	add	r2, r2, #3
   1434c:	cmp	r3, r2
   14350:	addcc	r2, r3, #1
   14354:	strcc	r2, [sp, #40]	; 0x28
   14358:	movcc	r2, #0
   1435c:	bcc	144f4 <fputs@plt+0x2eec>
   14360:	b	14438 <fputs@plt+0x2e30>
   14364:	lsl	lr, ip, #1
   14368:	cmp	r1, #0
   1436c:	ldrh	lr, [r0, lr]
   14370:	beq	14398 <fputs@plt+0x2d90>
   14374:	tst	lr, #2048	; 0x800
   14378:	beq	141c4 <fputs@plt+0x2bbc>
   1437c:	ldr	lr, [sp, #4]
   14380:	cmp	lr, #0
   14384:	bne	14224 <fputs@plt+0x2c1c>
   14388:	cmp	ip, #48	; 0x30
   1438c:	beq	141c4 <fputs@plt+0x2bbc>
   14390:	str	r5, [sp, #4]
   14394:	b	14224 <fputs@plt+0x2c1c>
   14398:	tst	lr, #4096	; 0x1000
   1439c:	beq	141c4 <fputs@plt+0x2bbc>
   143a0:	add	ip, sl, ip
   143a4:	add	r6, r6, #4
   143a8:	ldrb	ip, [ip, #11]
   143ac:	cmp	r6, #256	; 0x100
   143b0:	add	r3, r3, #4
   143b4:	add	r9, ip, r9, lsl #4
   143b8:	bgt	141c4 <fputs@plt+0x2bbc>
   143bc:	cmp	r3, #8
   143c0:	moveq	r3, r1
   143c4:	strbeq	r9, [r4], #1
   143c8:	b	14224 <fputs@plt+0x2c1c>
   143cc:	mov	r1, r2
   143d0:	b	14224 <fputs@plt+0x2c1c>
   143d4:	mov	r1, r6
   143d8:	b	14308 <fputs@plt+0x2d00>
   143dc:	mov	r4, #90	; 0x5a
   143e0:	b	141c8 <fputs@plt+0x2bc0>
   143e4:	cmp	r3, #46	; 0x2e
   143e8:	bne	14198 <fputs@plt+0x2b90>
   143ec:	add	r5, r5, #1
   143f0:	mov	r8, r4
   143f4:	mov	r2, #0
   143f8:	b	1460c <fputs@plt+0x3004>
   143fc:	mov	r1, r6
   14400:	ldr	r0, [pc, #992]	; 147e8 <fputs@plt+0x31e0>
   14404:	bl	11314 <strchr@plt>
   14408:	cmp	r0, #0
   1440c:	beq	14480 <fputs@plt+0x2e78>
   14410:	ldrb	r1, [r4, #1]
   14414:	sub	r0, r0, sl
   14418:	mov	r9, #100	; 0x64
   1441c:	mul	r5, r9, r0
   14420:	cmp	r1, #0
   14424:	beq	14438 <fputs@plt+0x2e30>
   14428:	mov	r0, sl
   1442c:	bl	11314 <strchr@plt>
   14430:	subs	r6, r0, #0
   14434:	bne	14444 <fputs@plt+0x2e3c>
   14438:	bl	115f0 <__errno_location@plt>
   1443c:	mov	r3, #90	; 0x5a
   14440:	b	141a0 <fputs@plt+0x2b98>
   14444:	ldrb	r1, [r4, #2]
   14448:	sub	r6, r6, sl
   1444c:	mov	r9, #10
   14450:	mla	r9, r9, r6, r5
   14454:	add	r5, r4, #3
   14458:	cmp	r1, #0
   1445c:	beq	14438 <fputs@plt+0x2e30>
   14460:	mov	r0, sl
   14464:	bl	11314 <strchr@plt>
   14468:	subs	r6, r0, #0
   1446c:	beq	14438 <fputs@plt+0x2e30>
   14470:	sub	r6, r6, sl
   14474:	add	r6, r6, r9
   14478:	cmp	r6, #255	; 0xff
   1447c:	bgt	14438 <fputs@plt+0x2e30>
   14480:	ldr	r3, [sp, #40]	; 0x28
   14484:	cmp	r3, fp
   14488:	bcs	14438 <fputs@plt+0x2e30>
   1448c:	add	r2, r3, #1
   14490:	str	r2, [sp, #40]	; 0x28
   14494:	strb	r6, [r3]
   14498:	b	143f4 <fputs@plt+0x2dec>
   1449c:	cmp	r6, #92	; 0x5c
   144a0:	beq	14614 <fputs@plt+0x300c>
   144a4:	cmp	r6, #46	; 0x2e
   144a8:	bne	14480 <fputs@plt+0x2e78>
   144ac:	ldr	r3, [sp, #40]	; 0x28
   144b0:	sub	r3, r3, r8
   144b4:	sub	r3, r3, #1
   144b8:	ands	r2, r3, #192	; 0xc0
   144bc:	bne	14438 <fputs@plt+0x2e30>
   144c0:	cmp	r8, fp
   144c4:	bcs	14438 <fputs@plt+0x2e30>
   144c8:	strb	r3, [r8]
   144cc:	ldrb	r1, [r4, #1]
   144d0:	cmp	r1, #0
   144d4:	bne	145f4 <fputs@plt+0x2fec>
   144d8:	cmp	r3, #0
   144dc:	beq	144f8 <fputs@plt+0x2ef0>
   144e0:	ldr	r3, [sp, #40]	; 0x28
   144e4:	cmp	r3, fp
   144e8:	addcc	r1, r3, #1
   144ec:	strcc	r1, [sp, #40]	; 0x28
   144f0:	bcs	14438 <fputs@plt+0x2e30>
   144f4:	strb	r2, [r3]
   144f8:	ldr	r3, [sp, #40]	; 0x28
   144fc:	add	r2, sp, #128	; 0x80
   14500:	sub	r3, r3, r2
   14504:	cmp	r3, #255	; 0xff
   14508:	addle	r3, sp, #52	; 0x34
   1450c:	bgt	14438 <fputs@plt+0x2e30>
   14510:	str	r3, [sp, #4]
   14514:	ldr	r4, [r3], #4
   14518:	cmp	r4, #0
   1451c:	bne	14510 <fputs@plt+0x2f08>
   14520:	add	r6, sp, #128	; 0x80
   14524:	mov	r5, r6
   14528:	ldrb	r1, [r6]
   1452c:	and	r3, r1, #192	; 0xc0
   14530:	cmp	r3, #192	; 0xc0
   14534:	beq	14438 <fputs@plt+0x2e30>
   14538:	mov	r0, r6
   1453c:	bl	1398c <fputs@plt+0x2384>
   14540:	cmp	r0, #0
   14544:	blt	14198 <fputs@plt+0x2b90>
   14548:	add	r0, r0, #1
   1454c:	add	r4, r4, r0
   14550:	cmp	r4, #255	; 0xff
   14554:	bgt	14438 <fputs@plt+0x2e30>
   14558:	cmp	r1, #0
   1455c:	add	r6, r6, r0
   14560:	bne	14528 <fputs@plt+0x2f20>
   14564:	add	r6, r7, #12
   14568:	ldr	r9, [sp, #4]
   1456c:	mov	r4, r6
   14570:	str	r1, [sp, #32]
   14574:	ldr	r3, [sp, #16]
   14578:	add	r3, r6, r3
   1457c:	str	r3, [sp, #12]
   14580:	mov	r3, #1
   14584:	str	r3, [sp, #20]
   14588:	ldrb	r3, [r5]
   1458c:	cmp	r3, #0
   14590:	str	r3, [sp, #16]
   14594:	addne	r3, sp, #52	; 0x34
   14598:	strne	r3, [sp, #8]
   1459c:	bne	14648 <fputs@plt+0x3040>
   145a0:	ldr	r3, [sp, #16]
   145a4:	and	r3, r3, #192	; 0xc0
   145a8:	cmp	r3, #192	; 0xc0
   145ac:	beq	14438 <fputs@plt+0x2e30>
   145b0:	mov	r0, r5
   145b4:	bl	1398c <fputs@plt+0x2384>
   145b8:	ldr	r3, [sp, #12]
   145bc:	add	r8, r0, #1
   145c0:	mov	sl, r0
   145c4:	add	fp, r4, r8
   145c8:	cmp	r3, fp
   145cc:	bls	14438 <fputs@plt+0x2e30>
   145d0:	mov	r1, r5
   145d4:	mov	r0, r4
   145d8:	mov	r2, r8
   145dc:	add	r5, r5, r8
   145e0:	bl	11440 <memcpy@plt>
   145e4:	cmp	sl, #0
   145e8:	mov	r4, fp
   145ec:	bne	14588 <fputs@plt+0x2f80>
   145f0:	b	146dc <fputs@plt+0x30d4>
   145f4:	cmp	r1, #46	; 0x2e
   145f8:	cmpne	r3, #0
   145fc:	beq	14438 <fputs@plt+0x2e30>
   14600:	ldr	r8, [sp, #40]	; 0x28
   14604:	add	r3, r8, #1
   14608:	str	r3, [sp, #40]	; 0x28
   1460c:	mov	r4, r5
   14610:	b	14130 <fputs@plt+0x2b28>
   14614:	mov	r2, #1
   14618:	b	1460c <fputs@plt+0x3004>
   1461c:	ldr	r3, [sp, #8]
   14620:	ldr	r8, [r3], #4
   14624:	str	r3, [sp, #8]
   14628:	ldrb	sl, [r8]
   1462c:	cmp	sl, #0
   14630:	beq	14648 <fputs@plt+0x3040>
   14634:	tst	sl, #192	; 0xc0
   14638:	bne	14648 <fputs@plt+0x3040>
   1463c:	sub	fp, r8, r7
   14640:	cmp	fp, #16384	; 0x4000
   14644:	blt	147dc <fputs@plt+0x31d4>
   14648:	ldr	r3, [sp, #4]
   1464c:	ldr	r2, [sp, #8]
   14650:	cmp	r3, r2
   14654:	bhi	1461c <fputs@plt+0x3014>
   14658:	bl	115f0 <__errno_location@plt>
   1465c:	mov	r3, #2
   14660:	b	14794 <fputs@plt+0x318c>
   14664:	mov	r0, r1
   14668:	str	r2, [sp, #36]	; 0x24
   1466c:	bl	1398c <fputs@plt+0x2384>
   14670:	ldr	r2, [sp, #36]	; 0x24
   14674:	mov	ip, r2
   14678:	ldrb	r3, [ip], #1
   1467c:	cmp	r0, r3
   14680:	bne	14750 <fputs@plt+0x3148>
   14684:	add	r0, r0, #1
   14688:	add	r1, r1, #1
   1468c:	add	r2, r2, r0
   14690:	cmp	ip, r2
   14694:	ldrb	r3, [ip]
   14698:	bne	14728 <fputs@plt+0x3120>
   1469c:	cmp	r3, #0
   146a0:	bne	14770 <fputs@plt+0x3168>
   146a4:	ldrb	r3, [r1]
   146a8:	cmp	r3, #0
   146ac:	bne	14750 <fputs@plt+0x3148>
   146b0:	cmp	fp, #0
   146b4:	blt	14798 <fputs@plt+0x3190>
   146b8:	ldr	r2, [sp, #12]
   146bc:	add	r3, r4, #1
   146c0:	cmp	r2, r3
   146c4:	bls	14438 <fputs@plt+0x2e30>
   146c8:	mvn	r3, #63	; 0x3f
   146cc:	add	r4, r4, #2
   146d0:	strb	fp, [r4, #-1]
   146d4:	orr	r3, r3, fp, asr #8
   146d8:	strb	r3, [r4, #-2]
   146dc:	sub	r4, r4, r6
   146e0:	cmp	r4, #0
   146e4:	blt	140c8 <fputs@plt+0x2ac0>
   146e8:	ldr	r3, [sp, #28]
   146ec:	add	r0, r6, r4
   146f0:	add	r0, r0, #4
   146f4:	ubfx	r3, r3, #8, #8
   146f8:	strb	r3, [r6, r4]
   146fc:	ldr	r3, [sp, #28]
   14700:	strb	r3, [r0, #-3]
   14704:	ldr	r3, [sp, #24]
   14708:	ubfx	r3, r3, #8, #8
   1470c:	strb	r3, [r0, #-2]
   14710:	ldr	r3, [sp, #24]
   14714:	strb	r3, [r0, #-1]
   14718:	mov	r3, #256	; 0x100
   1471c:	sub	r0, r0, r7
   14720:	strh	r3, [r7, #4]
   14724:	b	140cc <fputs@plt+0x2ac4>
   14728:	sub	r0, r3, #65	; 0x41
   1472c:	add	ip, ip, #1
   14730:	cmp	r0, #25
   14734:	ldrb	r0, [r1], #1
   14738:	addls	r3, r3, #32
   1473c:	sub	lr, r0, #65	; 0x41
   14740:	cmp	lr, #25
   14744:	addls	r0, r0, #32
   14748:	cmp	r0, r3
   1474c:	beq	14690 <fputs@plt+0x3088>
   14750:	add	sl, sl, #1
   14754:	add	r8, r8, sl
   14758:	b	14628 <fputs@plt+0x3020>
   1475c:	ldrb	r1, [r1, #1]
   14760:	lsl	r3, r3, #8
   14764:	and	r3, r3, #16128	; 0x3f00
   14768:	orr	r1, r3, r1
   1476c:	add	r1, r7, r1
   14770:	ldrb	r3, [r1]
   14774:	cmp	r3, #0
   14778:	beq	14750 <fputs@plt+0x3148>
   1477c:	ands	r0, r3, #192	; 0xc0
   14780:	beq	14664 <fputs@plt+0x305c>
   14784:	cmp	r0, #192	; 0xc0
   14788:	beq	1475c <fputs@plt+0x3154>
   1478c:	bl	115f0 <__errno_location@plt>
   14790:	mov	r3, #90	; 0x5a
   14794:	str	r3, [r0]
   14798:	add	r3, sp, #124	; 0x7c
   1479c:	cmp	r9, r3
   147a0:	bcs	145a0 <fputs@plt+0x2f98>
   147a4:	sub	r3, r4, r7
   147a8:	cmp	r3, #16384	; 0x4000
   147ac:	bge	145a0 <fputs@plt+0x2f98>
   147b0:	ldr	r3, [sp, #20]
   147b4:	cmp	r3, #0
   147b8:	beq	145a0 <fputs@plt+0x2f98>
   147bc:	ldr	r2, [sp, #32]
   147c0:	mov	r3, r9
   147c4:	str	r4, [r3], #4
   147c8:	str	r2, [r9, #4]
   147cc:	mov	r9, r3
   147d0:	mov	r3, #0
   147d4:	str	r3, [sp, #20]
   147d8:	b	145a0 <fputs@plt+0x2f98>
   147dc:	mov	r1, r8
   147e0:	mov	r2, r5
   147e4:	b	14770 <fputs@plt+0x3168>
   147e8:	andeq	r7, r1, r3, lsr r7
   147ec:	push	{r4, lr}
   147f0:	ldr	r0, [r2]
   147f4:	bl	11488 <atoi@plt>
   147f8:	subs	r2, r0, #0
   147fc:	bge	14814 <fputs@plt+0x320c>
   14800:	mov	r0, #67	; 0x43
   14804:	ldr	r1, [pc, #20]	; 14820 <fputs@plt+0x3218>
   14808:	bl	12080 <fputs@plt+0xa78>
   1480c:	mov	r0, #3
   14810:	bl	115e4 <exit@plt>
   14814:	ldr	r3, [pc, #8]	; 14824 <fputs@plt+0x321c>
   14818:	str	r2, [r3]
   1481c:	pop	{r4, pc}
   14820:	andeq	r7, r1, pc, lsr #17
   14824:	andeq	r9, r2, r8, ror #26
   14828:	cmp	r0, #0
   1482c:	bxeq	lr
   14830:	b	113c8 <free@plt>
   14834:	ldr	r3, [pc, #60]	; 14878 <fputs@plt+0x3270>
   14838:	push	{r4, r5, r6, lr}
   1483c:	mov	r6, r0
   14840:	ldr	r4, [r3]
   14844:	cmp	r4, #0
   14848:	bne	14858 <fputs@plt+0x3250>
   1484c:	mov	r5, r4
   14850:	mov	r0, r5
   14854:	pop	{r4, r5, r6, pc}
   14858:	ldr	r5, [r4]
   1485c:	mov	r1, r6
   14860:	mov	r0, r5
   14864:	bl	1132c <strcasecmp@plt>
   14868:	cmp	r0, #0
   1486c:	beq	14850 <fputs@plt+0x3248>
   14870:	ldr	r4, [r4, #8]
   14874:	b	14844 <fputs@plt+0x323c>
   14878:	andeq	sp, r2, r0, ror #31
   1487c:	ldr	r3, [pc, #88]	; 148dc <fputs@plt+0x32d4>
   14880:	push	{r4, r5, r6, r7, r8, lr}
   14884:	mov	r6, r0
   14888:	mov	r7, r1
   1488c:	ldr	r4, [r3]
   14890:	cmp	r4, #0
   14894:	bne	148a0 <fputs@plt+0x3298>
   14898:	mov	r0, #1
   1489c:	pop	{r4, r5, r6, r7, r8, pc}
   148a0:	ldr	r5, [r4]
   148a4:	mov	r1, r7
   148a8:	ldr	r0, [r5, #16]
   148ac:	bl	1132c <strcasecmp@plt>
   148b0:	cmp	r0, #0
   148b4:	ldrne	r4, [r4, #8]
   148b8:	bne	14890 <fputs@plt+0x3288>
   148bc:	ldr	r2, [r5, #12]
   148c0:	ldr	r3, [r6, #464]	; 0x1d0
   148c4:	add	r3, r3, r2, lsl #4
   148c8:	ldr	r0, [r3, #12]
   148cc:	sub	r0, r0, #2
   148d0:	clz	r0, r0
   148d4:	lsr	r0, r0, #5
   148d8:	pop	{r4, r5, r6, r7, r8, pc}
   148dc:	andeq	lr, r2, ip, ror r1
   148e0:	push	{r4, lr}
   148e4:	mov	r1, r0
   148e8:	mov	r0, #1
   148ec:	bl	11338 <calloc@plt>
   148f0:	cmp	r0, #0
   148f4:	popne	{r4, pc}
   148f8:	bl	114d0 <rb_outofmemory@plt>
   148fc:	cmp	r0, #0
   14900:	push	{r4, lr}
   14904:	bne	1491c <fputs@plt+0x3314>
   14908:	ldr	r3, [pc, #128]	; 14990 <fputs@plt+0x3388>
   1490c:	mov	r2, #143	; 0x8f
   14910:	ldr	r1, [pc, #124]	; 14994 <fputs@plt+0x338c>
   14914:	ldr	r0, [pc, #124]	; 14998 <fputs@plt+0x3390>
   14918:	bl	11398 <__assert_fail@plt>
   1491c:	cmp	r1, #0
   14920:	bne	14938 <fputs@plt+0x3330>
   14924:	ldr	r3, [pc, #100]	; 14990 <fputs@plt+0x3388>
   14928:	mov	r2, #144	; 0x90
   1492c:	ldr	r1, [pc, #96]	; 14994 <fputs@plt+0x338c>
   14930:	ldr	r0, [pc, #100]	; 1499c <fputs@plt+0x3394>
   14934:	b	14918 <fputs@plt+0x3310>
   14938:	cmp	r2, #0
   1493c:	bne	14954 <fputs@plt+0x334c>
   14940:	ldr	r3, [pc, #72]	; 14990 <fputs@plt+0x3388>
   14944:	mov	r2, #145	; 0x91
   14948:	ldr	r1, [pc, #68]	; 14994 <fputs@plt+0x338c>
   1494c:	ldr	r0, [pc, #76]	; 149a0 <fputs@plt+0x3398>
   14950:	b	14918 <fputs@plt+0x3310>
   14954:	mov	r3, #0
   14958:	stm	r1, {r0, r3}
   1495c:	ldr	r3, [r2]
   14960:	cmp	r3, #0
   14964:	str	r3, [r1, #8]
   14968:	strne	r1, [r3, #4]
   1496c:	bne	1497c <fputs@plt+0x3374>
   14970:	ldr	r3, [r2, #4]
   14974:	cmp	r3, #0
   14978:	streq	r1, [r2, #4]
   1497c:	ldr	r3, [r2, #8]
   14980:	str	r1, [r2]
   14984:	add	r3, r3, #1
   14988:	str	r3, [r2, #8]
   1498c:	pop	{r4, pc}
   14990:	andeq	r7, r1, r0, lsl #17
   14994:	andeq	r7, r1, r2, lsr r4
   14998:	andeq	r7, r1, r8, asr r4
   1499c:	andeq	r7, r1, lr, asr #8
   149a0:	ldrdeq	r7, [r1], -r4
   149a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149a8:	mov	r3, #0
   149ac:	sub	sp, sp, #28
   149b0:	mov	r6, r2
   149b4:	ldr	r4, [r2, #8]
   149b8:	str	r3, [sp, #12]
   149bc:	str	r3, [sp, #16]
   149c0:	str	r3, [sp, #20]
   149c4:	mov	r0, r4
   149c8:	bl	1141c <strlen@plt>
   149cc:	add	r0, r0, #1
   149d0:	bl	11500 <malloc@plt>
   149d4:	subs	r8, r0, #0
   149d8:	bne	149e0 <fputs@plt+0x33d8>
   149dc:	bl	114d0 <rb_outofmemory@plt>
   149e0:	mov	r1, r4
   149e4:	bl	1147c <strcpy@plt>
   149e8:	ldrb	r3, [r8]
   149ec:	cmp	r3, #42	; 0x2a
   149f0:	bne	14a38 <fputs@plt+0x3430>
   149f4:	mov	r0, r8
   149f8:	bl	14828 <fputs@plt+0x3220>
   149fc:	ldr	r0, [r6, #4]
   14a00:	bl	11488 <atoi@plt>
   14a04:	ldr	r7, [r6]
   14a08:	ldr	r6, [r6, #12]
   14a0c:	cmp	r7, #0
   14a10:	clz	r3, r6
   14a14:	lsr	r3, r3, #5
   14a18:	moveq	r3, #1
   14a1c:	ands	r8, r0, #3
   14a20:	moveq	r5, #1
   14a24:	movne	r5, r3
   14a28:	cmp	r5, #0
   14a2c:	beq	14b30 <fputs@plt+0x3528>
   14a30:	ldr	r1, [pc, #420]	; 14bdc <fputs@plt+0x35d4>
   14a34:	b	14aa8 <fputs@plt+0x34a0>
   14a38:	ldr	sl, [pc, #416]	; 14be0 <fputs@plt+0x35d8>
   14a3c:	add	r2, sp, #8
   14a40:	mov	r0, r8
   14a44:	ldr	r1, [pc, #404]	; 14be0 <fputs@plt+0x35d8>
   14a48:	bl	11308 <rb_strtok_r@plt>
   14a4c:	mov	r7, r0
   14a50:	cmp	r7, #0
   14a54:	beq	149f4 <fputs@plt+0x33ec>
   14a58:	mov	r0, #72	; 0x48
   14a5c:	mov	fp, #2
   14a60:	bl	148e0 <fputs@plt+0x32d8>
   14a64:	mov	r9, r0
   14a68:	sub	r2, r7, #1
   14a6c:	mov	r4, #0
   14a70:	ldrb	r5, [r2, #1]!
   14a74:	cmp	r5, #0
   14a78:	bne	14a90 <fputs@plt+0x3488>
   14a7c:	sub	r4, r4, #1
   14a80:	cmp	r4, #1
   14a84:	bhi	14af4 <fputs@plt+0x34ec>
   14a88:	ldr	r1, [pc, #340]	; 14be4 <fputs@plt+0x35dc>
   14a8c:	b	14aa8 <fputs@plt+0x34a0>
   14a90:	cmp	r5, #46	; 0x2e
   14a94:	bne	14ab4 <fputs@plt+0x34ac>
   14a98:	add	r4, r4, #1
   14a9c:	cmp	r4, #3
   14aa0:	ble	14aec <fputs@plt+0x34e4>
   14aa4:	ldr	r1, [pc, #316]	; 14be8 <fputs@plt+0x35e0>
   14aa8:	mov	r0, #67	; 0x43
   14aac:	bl	12080 <fputs@plt+0xa78>
   14ab0:	b	14ae4 <fputs@plt+0x34dc>
   14ab4:	str	r2, [sp, #4]
   14ab8:	bl	114dc <__ctype_b_loc@plt>
   14abc:	ldr	r1, [r0]
   14ac0:	lsl	r3, r5, #1
   14ac4:	ldr	r2, [sp, #4]
   14ac8:	ldrh	r3, [r1, r3]
   14acc:	tst	r3, #2048	; 0x800
   14ad0:	bne	14a70 <fputs@plt+0x3468>
   14ad4:	mov	r2, r5
   14ad8:	ldr	r1, [pc, #268]	; 14bec <fputs@plt+0x35e4>
   14adc:	mov	r0, #67	; 0x43
   14ae0:	bl	12080 <fputs@plt+0xa78>
   14ae4:	mov	r0, #3
   14ae8:	bl	115e4 <exit@plt>
   14aec:	mov	fp, #1
   14af0:	b	14a70 <fputs@plt+0x3468>
   14af4:	mov	r0, r9
   14af8:	mov	r1, r7
   14afc:	mov	r2, #53	; 0x35
   14b00:	str	fp, [r0], #4
   14b04:	bl	113a4 <rb_strlcpy@plt>
   14b08:	add	r2, sp, #12
   14b0c:	add	r1, r9, #60	; 0x3c
   14b10:	mov	r0, r9
   14b14:	bl	148fc <fputs@plt+0x32f4>
   14b18:	add	r2, sp, #8
   14b1c:	mov	r1, sl
   14b20:	mov	r0, r5
   14b24:	bl	11308 <rb_strtok_r@plt>
   14b28:	mov	r7, r0
   14b2c:	b	14a50 <fputs@plt+0x3448>
   14b30:	mov	r0, r7
   14b34:	bl	14834 <fputs@plt+0x322c>
   14b38:	subs	r4, r0, #0
   14b3c:	strbne	r5, [r4, #784]	; 0x310
   14b40:	bne	14b64 <fputs@plt+0x355c>
   14b44:	mov	r0, #800	; 0x320
   14b48:	bl	148e0 <fputs@plt+0x32d8>
   14b4c:	mov	r4, r0
   14b50:	bl	11584 <rb_make_rb_dlink_node@plt>
   14b54:	mov	r1, r0
   14b58:	ldr	r2, [pc, #144]	; 14bf0 <fputs@plt+0x35e8>
   14b5c:	mov	r0, r4
   14b60:	bl	148fc <fputs@plt+0x32f4>
   14b64:	mov	r2, #256	; 0x100
   14b68:	mov	r1, r7
   14b6c:	mov	r0, r4
   14b70:	bl	113a4 <rb_strlcpy@plt>
   14b74:	mov	r2, #512	; 0x200
   14b78:	mov	r1, r6
   14b7c:	add	r0, r4, #256	; 0x100
   14b80:	bl	113a4 <rb_strlcpy@plt>
   14b84:	ldr	r2, [sp, #12]
   14b88:	strb	r8, [r4, #768]	; 0x300
   14b8c:	cmp	r2, #0
   14b90:	beq	14bcc <fputs@plt+0x35c4>
   14b94:	ldr	r1, [r4, #772]	; 0x304
   14b98:	ldr	r0, [sp, #16]
   14b9c:	ldr	ip, [sp, #20]
   14ba0:	cmp	r1, #0
   14ba4:	streq	r2, [r4, #772]	; 0x304
   14ba8:	streq	r0, [r4, #776]	; 0x308
   14bac:	streq	ip, [r4, #780]	; 0x30c
   14bb0:	beq	14bcc <fputs@plt+0x35c4>
   14bb4:	ldr	r3, [r4, #780]	; 0x30c
   14bb8:	str	r1, [r0, #8]
   14bbc:	str	r0, [r1, #4]
   14bc0:	str	r2, [r4, #772]	; 0x304
   14bc4:	add	r3, r3, ip
   14bc8:	str	r3, [r4, #780]	; 0x30c
   14bcc:	mov	r3, #0
   14bd0:	str	r3, [r4, #796]	; 0x31c
   14bd4:	add	sp, sp, #28
   14bd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bdc:	andeq	r7, r1, fp, lsr #19
   14be0:	andeq	r7, r1, r1, ror #17
   14be4:	andeq	r7, r1, sp, ror #18
   14be8:	andeq	r7, r1, r3, ror #17
   14bec:	andeq	r7, r1, sp, lsl r9
   14bf0:	andeq	sp, r2, r0, ror #31
   14bf4:	cmp	r0, #0
   14bf8:	push	{r4, lr}
   14bfc:	bne	14c14 <fputs@plt+0x360c>
   14c00:	ldr	r3, [pc, #100]	; 14c6c <fputs@plt+0x3664>
   14c04:	mov	r2, #235	; 0xeb
   14c08:	ldr	r1, [pc, #96]	; 14c70 <fputs@plt+0x3668>
   14c0c:	ldr	r0, [pc, #96]	; 14c74 <fputs@plt+0x366c>
   14c10:	bl	11398 <__assert_fail@plt>
   14c14:	cmp	r1, #0
   14c18:	bne	14c30 <fputs@plt+0x3628>
   14c1c:	ldr	r3, [pc, #72]	; 14c6c <fputs@plt+0x3664>
   14c20:	mov	r2, #236	; 0xec
   14c24:	ldr	r1, [pc, #68]	; 14c70 <fputs@plt+0x3668>
   14c28:	ldr	r0, [pc, #72]	; 14c78 <fputs@plt+0x3670>
   14c2c:	b	14c10 <fputs@plt+0x3608>
   14c30:	ldrd	r2, [r0, #4]
   14c34:	cmp	r3, #0
   14c38:	strne	r2, [r3, #4]
   14c3c:	streq	r2, [r1, #4]
   14c40:	ldr	r2, [r0, #4]
   14c44:	cmp	r2, #0
   14c48:	strne	r3, [r2, #8]
   14c4c:	streq	r3, [r1]
   14c50:	mov	r3, #0
   14c54:	str	r3, [r0, #4]
   14c58:	str	r3, [r0, #8]
   14c5c:	ldr	r3, [r1, #8]
   14c60:	sub	r3, r3, #1
   14c64:	str	r3, [r1, #8]
   14c68:	pop	{r4, pc}
   14c6c:	andeq	r7, r1, ip, lsl #17
   14c70:	andeq	r7, r1, r2, lsr r4
   14c74:	andeq	r7, r1, lr, asr #8
   14c78:	ldrdeq	r7, [r1], -r4
   14c7c:	ldrh	r3, [r0, #248]	; 0xf8
   14c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c84:	sub	sp, sp, #268	; 0x10c
   14c88:	cmp	r3, #2
   14c8c:	beq	14ca4 <fputs@plt+0x369c>
   14c90:	cmp	r3, #10
   14c94:	beq	14d18 <fputs@plt+0x3710>
   14c98:	mov	r0, #0
   14c9c:	add	sp, sp, #268	; 0x10c
   14ca0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ca4:	mov	fp, #1
   14ca8:	ldr	r7, [pc, #320]	; 14df0 <fputs@plt+0x37e8>
   14cac:	mov	r4, r0
   14cb0:	mov	r9, r0
   14cb4:	ldr	r3, [r4, #464]	; 0x1d0
   14cb8:	ldr	r1, [pc, #308]	; 14df4 <fputs@plt+0x37ec>
   14cbc:	ldr	r2, [r7, #16]
   14cc0:	ldr	r0, [r9], #248	; 0xf8
   14cc4:	add	r3, r3, r2, lsl #4
   14cc8:	ldr	sl, [r3, #8]
   14ccc:	mov	r3, #1
   14cd0:	strb	r3, [sl]
   14cd4:	bl	12028 <fputs@plt+0xa20>
   14cd8:	ldr	r3, [pc, #280]	; 14df8 <fputs@plt+0x37f0>
   14cdc:	ldr	r8, [r3]
   14ce0:	cmp	r8, #0
   14ce4:	bne	14d20 <fputs@plt+0x3718>
   14ce8:	ldr	r3, [sl, #12]
   14cec:	cmp	r3, #0
   14cf0:	beq	14c98 <fputs@plt+0x3690>
   14cf4:	ldr	r5, [r7]
   14cf8:	ldr	r6, [r7, #16]
   14cfc:	bl	11428 <rb_current_time@plt>
   14d00:	ldr	r3, [r4, #464]	; 0x1d0
   14d04:	add	r0, r5, r0
   14d08:	add	r3, r3, r6, lsl #4
   14d0c:	str	r0, [r3, #4]
   14d10:	mov	r0, #1
   14d14:	b	14c9c <fputs@plt+0x3694>
   14d18:	mov	fp, #2
   14d1c:	b	14ca8 <fputs@plt+0x36a0>
   14d20:	ldr	r5, [r8]
   14d24:	ldrb	r3, [r5, #784]	; 0x310
   14d28:	cmp	r3, #0
   14d2c:	bne	14d84 <fputs@plt+0x377c>
   14d30:	ldrb	r3, [r5, #768]	; 0x300
   14d34:	tst	r3, fp
   14d38:	beq	14d84 <fputs@plt+0x377c>
   14d3c:	mov	r0, #24
   14d40:	bl	148e0 <fputs@plt+0x32d8>
   14d44:	ldr	r2, [r7, #16]
   14d48:	mov	r6, r0
   14d4c:	ldr	r3, [r4, #464]	; 0x1d0
   14d50:	add	r3, r3, r2, lsl #4
   14d54:	ldr	r3, [r3, #8]
   14d58:	str	r5, [r0]
   14d5c:	str	r4, [r0, #4]
   14d60:	str	r3, [sp, #4]
   14d64:	ldrh	r3, [r4, #248]	; 0xf8
   14d68:	cmp	r3, #2
   14d6c:	bne	14d8c <fputs@plt+0x3784>
   14d70:	ldrb	r3, [r5, #768]	; 0x300
   14d74:	tst	r3, #1
   14d78:	bne	14da0 <fputs@plt+0x3798>
   14d7c:	mov	r0, r6
   14d80:	bl	14828 <fputs@plt+0x3220>
   14d84:	ldr	r8, [r8, #8]
   14d88:	b	14ce0 <fputs@plt+0x36d8>
   14d8c:	cmp	r3, #10
   14d90:	bne	14da0 <fputs@plt+0x3798>
   14d94:	ldrb	r3, [r5, #768]	; 0x300
   14d98:	tst	r3, #2
   14d9c:	b	14d78 <fputs@plt+0x3770>
   14da0:	mov	r3, r5
   14da4:	mov	r2, r9
   14da8:	mov	r1, #256	; 0x100
   14dac:	add	r0, sp, #8
   14db0:	bl	130e4 <fputs@plt+0x1adc>
   14db4:	mov	r3, r6
   14db8:	ldr	r2, [pc, #60]	; 14dfc <fputs@plt+0x37f4>
   14dbc:	mov	r1, #2
   14dc0:	add	r0, sp, #8
   14dc4:	bl	11cd4 <fputs@plt+0x6cc>
   14dc8:	ldr	r3, [sp, #4]
   14dcc:	add	r1, r6, #12
   14dd0:	str	r0, [r6, #8]
   14dd4:	mov	r0, r6
   14dd8:	add	r2, r3, #4
   14ddc:	bl	148fc <fputs@plt+0x32f4>
   14de0:	ldr	r3, [r5, #788]	; 0x314
   14de4:	add	r3, r3, #1
   14de8:	str	r3, [r5, #788]	; 0x314
   14dec:	b	14d84 <fputs@plt+0x377c>
   14df0:	andeq	r9, r2, r8, ror #26
   14df4:	ldrdeq	r7, [r1], -r8
   14df8:	andeq	sp, r2, r0, ror #31
   14dfc:	andeq	r5, r1, r4, ror r1
   14e00:	subs	r1, r0, #0
   14e04:	push	{r4, lr}
   14e08:	ldrne	r3, [pc, #120]	; 14e88 <fputs@plt+0x3880>
   14e0c:	ldrne	r0, [r3]
   14e10:	bne	14e2c <fputs@plt+0x3824>
   14e14:	ldr	r3, [pc, #112]	; 14e8c <fputs@plt+0x3884>
   14e18:	mov	r2, #288	; 0x120
   14e1c:	ldr	r1, [pc, #108]	; 14e90 <fputs@plt+0x3888>
   14e20:	ldr	r0, [pc, #108]	; 14e94 <fputs@plt+0x388c>
   14e24:	bl	11398 <__assert_fail@plt>
   14e28:	mov	r0, r2
   14e2c:	cmp	r0, #0
   14e30:	popeq	{r4, pc}
   14e34:	ldr	ip, [r0]
   14e38:	ldr	r2, [r0, #8]
   14e3c:	cmp	r1, ip
   14e40:	bne	14e28 <fputs@plt+0x3820>
   14e44:	ldr	r1, [r0, #4]
   14e48:	cmp	r2, #0
   14e4c:	strne	r1, [r2, #4]
   14e50:	streq	r1, [r3, #4]
   14e54:	ldr	r1, [r0, #4]
   14e58:	cmp	r1, #0
   14e5c:	strne	r2, [r1, #8]
   14e60:	streq	r2, [r3]
   14e64:	mov	r2, #0
   14e68:	str	r2, [r0, #4]
   14e6c:	str	r2, [r0, #8]
   14e70:	ldr	r2, [r3, #8]
   14e74:	sub	r2, r2, #1
   14e78:	str	r2, [r3, #8]
   14e7c:	bl	1144c <rb_free_rb_dlink_node@plt>
   14e80:	mov	r0, #1
   14e84:	pop	{r4, pc}
   14e88:	andeq	sp, r2, r0, ror #31
   14e8c:	muleq	r1, fp, r8
   14e90:	andeq	r7, r1, r2, lsr r4
   14e94:	andeq	r7, r1, r8, asr r4
   14e98:	ldr	r3, [r0, #788]	; 0x314
   14e9c:	ldrb	r2, [r0, #784]	; 0x310
   14ea0:	sub	r3, r3, #1
   14ea4:	str	r3, [r0, #788]	; 0x314
   14ea8:	cmp	r3, #0
   14eac:	movgt	r3, #0
   14eb0:	andle	r3, r2, #1
   14eb4:	cmp	r3, #0
   14eb8:	bxeq	lr
   14ebc:	push	{r4, r5, r6, r7, r8, lr}
   14ec0:	mov	r4, r0
   14ec4:	ldr	r5, [r0, #772]	; 0x304
   14ec8:	cmp	r5, #0
   14ecc:	addne	r7, r0, #772	; 0x304
   14ed0:	ldrne	r6, [r5, #8]
   14ed4:	bne	14eec <fputs@plt+0x38e4>
   14ed8:	mov	r0, r4
   14edc:	bl	14e00 <fputs@plt+0x37f8>
   14ee0:	mov	r0, r4
   14ee4:	pop	{r4, r5, r6, r7, r8, lr}
   14ee8:	b	14828 <fputs@plt+0x3220>
   14eec:	mov	r1, r7
   14ef0:	mov	r0, r5
   14ef4:	bl	14bf4 <fputs@plt+0x35ec>
   14ef8:	mov	r0, r5
   14efc:	bl	14828 <fputs@plt+0x3220>
   14f00:	cmp	r6, #0
   14f04:	beq	14ed8 <fputs@plt+0x38d0>
   14f08:	mov	r5, r6
   14f0c:	ldr	r6, [r6, #8]
   14f10:	b	14eec <fputs@plt+0x38e4>
   14f14:	push	{r4, r5, r6, lr}
   14f18:	ldr	r5, [r2]
   14f1c:	mov	r0, r5
   14f20:	bl	14834 <fputs@plt+0x322c>
   14f24:	subs	r4, r0, #0
   14f28:	bne	14f40 <fputs@plt+0x3938>
   14f2c:	mov	r2, r5
   14f30:	ldr	r1, [pc, #48]	; 14f68 <fputs@plt+0x3960>
   14f34:	mov	r0, #87	; 0x57
   14f38:	pop	{r4, r5, r6, lr}
   14f3c:	b	12080 <fputs@plt+0xa78>
   14f40:	ldr	r3, [r4, #788]	; 0x314
   14f44:	cmp	r3, #0
   14f48:	ble	14f58 <fputs@plt+0x3950>
   14f4c:	mov	r3, #1
   14f50:	strb	r3, [r4, #784]	; 0x310
   14f54:	pop	{r4, r5, r6, pc}
   14f58:	bl	14e00 <fputs@plt+0x37f8>
   14f5c:	mov	r0, r4
   14f60:	pop	{r4, r5, r6, lr}
   14f64:	b	14828 <fputs@plt+0x3220>
   14f68:	strdeq	r7, [r1], -ip
   14f6c:	ldr	r3, [pc, #76]	; 14fc0 <fputs@plt+0x39b8>
   14f70:	ldr	r3, [r3]
   14f74:	cmp	r3, #0
   14f78:	bxeq	lr
   14f7c:	push	{r4, r5, r6, lr}
   14f80:	mov	r6, #1
   14f84:	ldr	r4, [r3, #8]
   14f88:	ldr	r5, [r3]
   14f8c:	ldr	r3, [r5, #788]	; 0x314
   14f90:	cmp	r3, #0
   14f94:	strbgt	r6, [r5, #784]	; 0x310
   14f98:	bgt	14fac <fputs@plt+0x39a4>
   14f9c:	mov	r0, r5
   14fa0:	bl	14e00 <fputs@plt+0x37f8>
   14fa4:	mov	r0, r5
   14fa8:	bl	14828 <fputs@plt+0x3220>
   14fac:	cmp	r4, #0
   14fb0:	popeq	{r4, r5, r6, pc}
   14fb4:	mov	r3, r4
   14fb8:	ldr	r4, [r4, #8]
   14fbc:	b	14f88 <fputs@plt+0x3980>
   14fc0:	andeq	sp, r2, r0, ror #31
   14fc4:	b	14f6c <fputs@plt+0x3964>
   14fc8:	ldr	r2, [pc, #220]	; 150ac <fputs@plt+0x3aa4>
   14fcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fd0:	ldr	r3, [r0, #464]	; 0x1d0
   14fd4:	ldr	ip, [r2, #16]
   14fd8:	add	r3, r3, ip, lsl #4
   14fdc:	ldr	r5, [r3, #8]
   14fe0:	cmp	r5, #0
   14fe4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14fe8:	mov	r9, r2
   14fec:	mov	r4, r0
   14ff0:	ldr	r3, [r5, #12]
   14ff4:	cmp	r3, #0
   14ff8:	bne	15050 <fputs@plt+0x3a48>
   14ffc:	mov	r0, r5
   15000:	bl	14828 <fputs@plt+0x3220>
   15004:	ldr	r1, [r9, #16]
   15008:	mov	r0, #0
   1500c:	ldr	r2, [r4, #464]	; 0x1d0
   15010:	lsl	ip, r1, #4
   15014:	add	r2, r2, ip
   15018:	str	r0, [r2, #8]
   1501c:	ldr	r3, [r4, #464]	; 0x1d0
   15020:	add	r3, r3, ip
   15024:	str	r0, [r3, #4]
   15028:	mov	r0, r4
   1502c:	bl	12820 <fputs@plt+0x1218>
   15030:	ldr	r3, [r4, #460]	; 0x1cc
   15034:	sub	r3, r3, #1
   15038:	cmp	r3, #0
   1503c:	str	r3, [r4, #460]	; 0x1cc
   15040:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   15044:	mov	r0, r4
   15048:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1504c:	b	124b8 <fputs@plt+0xeb0>
   15050:	ldr	r0, [r0]
   15054:	bl	12028 <fputs@plt+0xa20>
   15058:	ldr	r3, [r5, #4]
   1505c:	cmp	r3, #0
   15060:	beq	14ffc <fputs@plt+0x39f4>
   15064:	ldr	r6, [r3, #8]
   15068:	add	sl, r5, #4
   1506c:	ldr	r7, [r3]
   15070:	mov	r8, r7
   15074:	ldr	r0, [r7, #8]
   15078:	bl	11e48 <fputs@plt+0x840>
   1507c:	ldr	r0, [r8], #12
   15080:	bl	14e98 <fputs@plt+0x3890>
   15084:	mov	r1, sl
   15088:	mov	r0, r8
   1508c:	bl	14bf4 <fputs@plt+0x35ec>
   15090:	mov	r0, r7
   15094:	bl	14828 <fputs@plt+0x3220>
   15098:	cmp	r6, #0
   1509c:	beq	14ffc <fputs@plt+0x39f4>
   150a0:	mov	r3, r6
   150a4:	ldr	r6, [r6, #8]
   150a8:	b	1506c <fputs@plt+0x3a64>
   150ac:	andeq	r9, r2, r8, ror #26
   150b0:	ldr	r3, [pc, #144]	; 15148 <fputs@plt+0x3b40>
   150b4:	push	{r4, r5, r6, lr}
   150b8:	ldr	r5, [r3, #16]
   150bc:	ldr	r3, [pc, #136]	; 1514c <fputs@plt+0x3b44>
   150c0:	ldr	r3, [r3, #8]
   150c4:	cmp	r3, #0
   150c8:	bne	150dc <fputs@plt+0x3ad4>
   150cc:	mov	r1, r5
   150d0:	bl	12820 <fputs@plt+0x1218>
   150d4:	mov	r0, #1
   150d8:	pop	{r4, r5, r6, pc}
   150dc:	mov	r4, r0
   150e0:	mov	r0, #16
   150e4:	ldr	r2, [r4, #460]	; 0x1cc
   150e8:	add	r2, r2, #1
   150ec:	str	r2, [r4, #460]	; 0x1cc
   150f0:	bl	148e0 <fputs@plt+0x32d8>
   150f4:	ldr	r3, [r4, #464]	; 0x1d0
   150f8:	ldr	r1, [pc, #80]	; 15150 <fputs@plt+0x3b48>
   150fc:	add	r3, r3, r5, lsl #4
   15100:	str	r0, [r3, #8]
   15104:	mov	r0, r4
   15108:	bl	1487c <fputs@plt+0x3274>
   1510c:	cmp	r0, #0
   15110:	beq	150d4 <fputs@plt+0x3acc>
   15114:	ldr	r1, [pc, #56]	; 15154 <fputs@plt+0x3b4c>
   15118:	mov	r0, r4
   1511c:	bl	1487c <fputs@plt+0x3274>
   15120:	cmp	r0, #0
   15124:	beq	150d4 <fputs@plt+0x3acc>
   15128:	mov	r0, r4
   1512c:	bl	14c7c <fputs@plt+0x3674>
   15130:	cmp	r0, #0
   15134:	bne	150d4 <fputs@plt+0x3acc>
   15138:	ldr	r1, [pc, #24]	; 15158 <fputs@plt+0x3b50>
   1513c:	mov	r0, r4
   15140:	bl	14fc8 <fputs@plt+0x39c0>
   15144:	b	150d4 <fputs@plt+0x3acc>
   15148:	andeq	r9, r2, r8, ror #26
   1514c:	andeq	sp, r2, r0, ror #31
   15150:	andeq	r7, r1, r8, lsr #20
   15154:	muleq	r1, r2, fp
   15158:	andeq	r7, r1, sp, lsr #20
   1515c:	ldr	r1, [pc]	; 15164 <fputs@plt+0x3b5c>
   15160:	b	14fc8 <fputs@plt+0x39c0>
   15164:	andeq	r7, r1, r8, asr #20
   15168:	ldr	r1, [pc]	; 15170 <fputs@plt+0x3b68>
   1516c:	b	14fc8 <fputs@plt+0x39c0>
   15170:	andeq	r7, r1, r4, ror #20
   15174:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15178:	ldr	r8, [pc, #452]	; 15344 <fputs@plt+0x3d3c>
   1517c:	ldr	r5, [r3, #4]
   15180:	ldr	sl, [r8, #16]
   15184:	ldr	r2, [r5, #464]	; 0x1d0
   15188:	add	r2, r2, sl, lsl #4
   1518c:	ldr	r9, [r2, #8]
   15190:	cmp	r9, #0
   15194:	beq	1533c <fputs@plt+0x3d34>
   15198:	cmp	r0, #0
   1519c:	moveq	r1, #0
   151a0:	andne	r1, r1, #1
   151a4:	mov	r7, r0
   151a8:	ldr	r4, [r3]
   151ac:	cmp	r1, #0
   151b0:	mov	r6, r3
   151b4:	beq	15274 <fputs@plt+0x3c6c>
   151b8:	ldr	r3, [r4, #780]	; 0x30c
   151bc:	cmp	r3, #0
   151c0:	beq	1530c <fputs@plt+0x3d04>
   151c4:	mov	r1, #46	; 0x2e
   151c8:	bl	11380 <strrchr@plt>
   151cc:	cmp	r0, #0
   151d0:	beq	151e8 <fputs@plt+0x3be0>
   151d4:	ldrb	r3, [r0, #1]
   151d8:	cmp	r3, #0
   151dc:	addne	r2, r0, #1
   151e0:	ldrne	fp, [r4, #772]	; 0x304
   151e4:	bne	1526c <fputs@plt+0x3c64>
   151e8:	ldr	sl, [r4, #796]	; 0x31c
   151ec:	bl	11428 <rb_current_time@plt>
   151f0:	add	sl, sl, #3600	; 0xe10
   151f4:	cmp	sl, r0
   151f8:	bge	15274 <fputs@plt+0x3c6c>
   151fc:	mov	r3, r7
   15200:	mov	r2, r4
   15204:	ldr	r1, [pc, #316]	; 15348 <fputs@plt+0x3d40>
   15208:	mov	r0, #87	; 0x57
   1520c:	bl	12080 <fputs@plt+0xa78>
   15210:	bl	11428 <rb_current_time@plt>
   15214:	str	r0, [r4, #796]	; 0x31c
   15218:	b	15274 <fputs@plt+0x3c6c>
   1521c:	ldr	r1, [fp]
   15220:	ldr	r3, [r1]
   15224:	cmp	r3, #1
   15228:	beq	1524c <fputs@plt+0x3c44>
   1522c:	cmp	r3, #2
   15230:	beq	15304 <fputs@plt+0x3cfc>
   15234:	mov	r0, #67	; 0x43
   15238:	mov	r2, r4
   1523c:	ldr	r1, [pc, #264]	; 1534c <fputs@plt+0x3d44>
   15240:	bl	12080 <fputs@plt+0xa78>
   15244:	mov	r0, #3
   15248:	bl	115e4 <exit@plt>
   1524c:	mov	r0, r7
   15250:	add	r1, r1, #4
   15254:	str	r2, [sp, #4]
   15258:	bl	115d8 <strcmp@plt>
   1525c:	cmp	r0, #0
   15260:	beq	1530c <fputs@plt+0x3d04>
   15264:	ldr	r2, [sp, #4]
   15268:	ldr	fp, [fp, #8]
   1526c:	cmp	fp, #0
   15270:	bne	1521c <fputs@plt+0x3c14>
   15274:	mov	r0, r4
   15278:	bl	14e98 <fputs@plt+0x3890>
   1527c:	ldr	r0, [r6, #8]
   15280:	bl	11e48 <fputs@plt+0x840>
   15284:	add	r1, r9, #4
   15288:	add	r0, r6, #12
   1528c:	bl	14bf4 <fputs@plt+0x35ec>
   15290:	mov	r0, r6
   15294:	bl	14828 <fputs@plt+0x3220>
   15298:	ldr	r4, [r9, #12]
   1529c:	cmp	r4, #0
   152a0:	bne	1533c <fputs@plt+0x3d34>
   152a4:	ldr	r1, [pc, #164]	; 15350 <fputs@plt+0x3d48>
   152a8:	ldr	r0, [r5]
   152ac:	bl	12028 <fputs@plt+0xa20>
   152b0:	mov	r0, r9
   152b4:	bl	14828 <fputs@plt+0x3220>
   152b8:	ldr	r1, [r8, #16]
   152bc:	ldr	r2, [r5, #464]	; 0x1d0
   152c0:	lsl	r0, r1, #4
   152c4:	add	r2, r2, r0
   152c8:	str	r4, [r2, #8]
   152cc:	ldr	r3, [r5, #464]	; 0x1d0
   152d0:	add	r3, r3, r0
   152d4:	mov	r0, r5
   152d8:	str	r4, [r3, #4]
   152dc:	bl	12820 <fputs@plt+0x1218>
   152e0:	ldr	r3, [r5, #460]	; 0x1cc
   152e4:	sub	r3, r3, #1
   152e8:	cmp	r3, #0
   152ec:	str	r3, [r5, #460]	; 0x1cc
   152f0:	bne	1533c <fputs@plt+0x3d34>
   152f4:	mov	r0, r5
   152f8:	add	sp, sp, #12
   152fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15300:	b	124b8 <fputs@plt+0xeb0>
   15304:	mov	r0, r2
   15308:	b	15250 <fputs@plt+0x3c48>
   1530c:	ldr	r3, [r4, #792]	; 0x318
   15310:	mov	r0, r5
   15314:	mov	r2, r4
   15318:	mov	r1, sl
   1531c:	add	r3, r3, #1
   15320:	str	r3, [r4, #792]	; 0x318
   15324:	add	r3, r4, #256	; 0x100
   15328:	bl	12638 <fputs@plt+0x1030>
   1532c:	mov	r0, r5
   15330:	add	sp, sp, #12
   15334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15338:	b	15168 <fputs@plt+0x3b60>
   1533c:	add	sp, sp, #12
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	andeq	r9, r2, r8, ror #26
   15348:	andeq	r7, r1, sp, lsr #21
   1534c:	andeq	r7, r1, lr, ror sl
   15350:	andeq	r7, r1, ip, ror #21
   15354:	push	{r0, r1, r4, lr}
   15358:	mov	r1, sp
   1535c:	ldr	r4, [pc, #56]	; 1539c <fputs@plt+0x3d94>
   15360:	ldr	r0, [r4]
   15364:	bl	11404 <rb_dictionary_foreach_start@plt>
   15368:	mov	r1, sp
   1536c:	ldr	r0, [r4]
   15370:	bl	11320 <rb_dictionary_foreach_cur@plt>
   15374:	cmp	r0, #0
   15378:	bne	15388 <fputs@plt+0x3d80>
   1537c:	bl	14f6c <fputs@plt+0x3964>
   15380:	add	sp, sp, #8
   15384:	pop	{r4, pc}
   15388:	bl	15168 <fputs@plt+0x3b60>
   1538c:	mov	r1, sp
   15390:	ldr	r0, [r4]
   15394:	bl	113bc <rb_dictionary_foreach_next@plt>
   15398:	b	15368 <fputs@plt+0x3d60>
   1539c:	andeq	lr, r2, r8, ror r1
   153a0:	ldr	r3, [pc, #108]	; 15414 <fputs@plt+0x3e0c>
   153a4:	ldr	r2, [r3, #16]
   153a8:	ldr	r3, [r0, #464]	; 0x1d0
   153ac:	add	r3, r3, r2, lsl #4
   153b0:	ldr	r3, [r3, #8]
   153b4:	cmp	r3, #0
   153b8:	bxeq	lr
   153bc:	ldrb	r3, [r3]
   153c0:	cmp	r3, #0
   153c4:	bxne	lr
   153c8:	push	{r4, lr}
   153cc:	mov	r4, r0
   153d0:	ldr	r1, [pc, #64]	; 15418 <fputs@plt+0x3e10>
   153d4:	bl	1487c <fputs@plt+0x3274>
   153d8:	cmp	r0, #0
   153dc:	popeq	{r4, pc}
   153e0:	mov	r0, r4
   153e4:	ldr	r1, [pc, #48]	; 1541c <fputs@plt+0x3e14>
   153e8:	bl	1487c <fputs@plt+0x3274>
   153ec:	cmp	r0, #0
   153f0:	popeq	{r4, pc}
   153f4:	mov	r0, r4
   153f8:	bl	14c7c <fputs@plt+0x3674>
   153fc:	cmp	r0, #0
   15400:	popne	{r4, pc}
   15404:	mov	r0, r4
   15408:	pop	{r4, lr}
   1540c:	ldr	r1, [pc, #12]	; 15420 <fputs@plt+0x3e18>
   15410:	b	14fc8 <fputs@plt+0x39c0>
   15414:	andeq	r9, r2, r8, ror #26
   15418:	andeq	r7, r1, r8, lsr #20
   1541c:	muleq	r1, r2, fp
   15420:	andeq	r7, r1, sp, lsr #20
   15424:	ldr	r3, [r2]
   15428:	ldr	r2, [pc, #20]	; 15444 <fputs@plt+0x3e3c>
   1542c:	ldrb	r3, [r3]
   15430:	sub	r3, r3, #49	; 0x31
   15434:	clz	r3, r3
   15438:	lsr	r3, r3, #5
   1543c:	strb	r3, [r2]
   15440:	bx	lr
   15444:	andeq	r9, r2, r4, ror #27
   15448:	push	{r4, lr}
   1544c:	ldr	r0, [r2]
   15450:	bl	11488 <atoi@plt>
   15454:	subs	r2, r0, #0
   15458:	bge	15470 <fputs@plt+0x3e68>
   1545c:	mov	r0, #67	; 0x43
   15460:	ldr	r1, [pc, #20]	; 1547c <fputs@plt+0x3e74>
   15464:	bl	12080 <fputs@plt+0xa78>
   15468:	mov	r0, #3
   1546c:	bl	115e4 <exit@plt>
   15470:	ldr	r3, [pc, #8]	; 15480 <fputs@plt+0x3e78>
   15474:	str	r2, [r3, #4]
   15478:	pop	{r4, pc}
   1547c:	andeq	r7, r1, ip, asr #22
   15480:	andeq	r9, r2, r4, ror #27
   15484:	cmp	r0, #0
   15488:	bxeq	lr
   1548c:	b	113c8 <free@plt>
   15490:	push	{r4, r5, r6, r7, r8, lr}
   15494:	mov	r4, r0
   15498:	mov	r6, r1
   1549c:	add	r0, r0, #440	; 0x1b8
   154a0:	ldr	r5, [pc, #144]	; 15538 <fputs@plt+0x3f30>
   154a4:	ldr	r3, [r0, #24]
   154a8:	ldr	r1, [pc, #140]	; 1553c <fputs@plt+0x3f34>
   154ac:	ldr	r2, [r5, #20]
   154b0:	add	r3, r3, r2, lsl #4
   154b4:	mov	r2, #11
   154b8:	ldr	r7, [r3, #8]
   154bc:	bl	113a4 <rb_strlcpy@plt>
   154c0:	ldr	r0, [r7]
   154c4:	cmp	r0, #0
   154c8:	beq	154d0 <fputs@plt+0x3ec8>
   154cc:	bl	11458 <rb_close@plt>
   154d0:	mov	r0, r7
   154d4:	bl	15484 <fputs@plt+0x3e7c>
   154d8:	ldr	r3, [r5, #20]
   154dc:	mov	r1, #0
   154e0:	ldr	r0, [r4]
   154e4:	ldr	r2, [r4, #464]	; 0x1d0
   154e8:	lsl	r3, r3, #4
   154ec:	add	r2, r2, r3
   154f0:	str	r1, [r2, #8]
   154f4:	ldr	r2, [r4, #464]	; 0x1d0
   154f8:	add	r3, r2, r3
   154fc:	str	r1, [r3, #4]
   15500:	ldr	r3, [pc, #56]	; 15540 <fputs@plt+0x3f38>
   15504:	ldr	r1, [r3, r6, lsl #2]
   15508:	bl	12028 <fputs@plt+0xa20>
   1550c:	mov	r0, r4
   15510:	ldr	r1, [r5, #20]
   15514:	bl	12820 <fputs@plt+0x1218>
   15518:	ldr	r3, [r4, #460]	; 0x1cc
   1551c:	sub	r3, r3, #1
   15520:	cmp	r3, #0
   15524:	str	r3, [r4, #460]	; 0x1cc
   15528:	popne	{r4, r5, r6, r7, r8, pc}
   1552c:	mov	r0, r4
   15530:	pop	{r4, r5, r6, r7, r8, lr}
   15534:	b	124b8 <fputs@plt+0xeb0>
   15538:	andeq	r9, r2, r4, ror #27
   1553c:	andeq	r7, r1, r8, asr r3
   15540:	andeq	r7, r1, r8, lsr fp
   15544:	ldr	r3, [pc, #28]	; 15568 <fputs@plt+0x3f60>
   15548:	ldr	r2, [r3, #20]
   1554c:	ldr	r3, [r0, #464]	; 0x1d0
   15550:	add	r3, r3, r2, lsl #4
   15554:	ldr	r3, [r3, #8]
   15558:	cmp	r3, #0
   1555c:	bxeq	lr
   15560:	mov	r1, #2
   15564:	b	15490 <fputs@plt+0x3e88>
   15568:	andeq	r9, r2, r4, ror #27
   1556c:	push	{r0, r1, r2, r4, r5, lr}
   15570:	mov	r1, sp
   15574:	ldr	r4, [pc, #84]	; 155d0 <fputs@plt+0x3fc8>
   15578:	ldr	r5, [pc, #84]	; 155d4 <fputs@plt+0x3fcc>
   1557c:	ldr	r0, [r4]
   15580:	bl	11404 <rb_dictionary_foreach_start@plt>
   15584:	mov	r1, sp
   15588:	ldr	r0, [r4]
   1558c:	bl	11320 <rb_dictionary_foreach_cur@plt>
   15590:	subs	r2, r0, #0
   15594:	bne	155a0 <fputs@plt+0x3f98>
   15598:	add	sp, sp, #12
   1559c:	pop	{r4, r5, pc}
   155a0:	ldr	r1, [r5, #20]
   155a4:	ldr	r3, [r2, #464]	; 0x1d0
   155a8:	add	r3, r3, r1, lsl #4
   155ac:	ldr	r3, [r3, #8]
   155b0:	cmp	r3, #0
   155b4:	beq	155c0 <fputs@plt+0x3fb8>
   155b8:	mov	r1, #2
   155bc:	bl	15490 <fputs@plt+0x3e88>
   155c0:	mov	r1, sp
   155c4:	ldr	r0, [r4]
   155c8:	bl	113bc <rb_dictionary_foreach_next@plt>
   155cc:	b	15584 <fputs@plt+0x3f7c>
   155d0:	andeq	lr, r2, r8, ror r1
   155d4:	andeq	r9, r2, r4, ror #27
   155d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   155dc:	mov	r1, #4
   155e0:	sub	sp, sp, #268	; 0x10c
   155e4:	mov	r4, r0
   155e8:	mov	r0, #1
   155ec:	bl	11338 <calloc@plt>
   155f0:	subs	r7, r0, #0
   155f4:	bne	155fc <fputs@plt+0x3ff4>
   155f8:	bl	114d0 <rb_outofmemory@plt>
   155fc:	ldr	r5, [pc, #288]	; 15724 <fputs@plt+0x411c>
   15600:	ldrb	r3, [r5]
   15604:	mov	r8, r5
   15608:	cmp	r3, #0
   1560c:	bne	15638 <fputs@plt+0x4030>
   15610:	bl	15484 <fputs@plt+0x3e7c>
   15614:	ldr	r1, [pc, #268]	; 15728 <fputs@plt+0x4120>
   15618:	ldr	r0, [r4]
   1561c:	bl	12028 <fputs@plt+0xa20>
   15620:	mov	r0, r4
   15624:	ldr	r1, [r5, #20]
   15628:	bl	12820 <fputs@plt+0x1218>
   1562c:	mov	r0, #1
   15630:	add	sp, sp, #268	; 0x10c
   15634:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15638:	ldr	r1, [pc, #236]	; 1572c <fputs@plt+0x4124>
   1563c:	ldr	r3, [r4, #460]	; 0x1cc
   15640:	ldr	r0, [r4]
   15644:	ldrh	r9, [r4, #248]	; 0xf8
   15648:	add	r3, r3, #1
   1564c:	str	r3, [r4, #460]	; 0x1cc
   15650:	bl	12028 <fputs@plt+0xa20>
   15654:	ldr	r6, [r5, #20]
   15658:	ldr	r3, [r4, #464]	; 0x1d0
   1565c:	ldr	r5, [r5, #4]
   15660:	lsl	r6, r6, #4
   15664:	add	r3, r3, r6
   15668:	str	r7, [r3, #8]
   1566c:	bl	11428 <rb_current_time@plt>
   15670:	add	r0, r5, r0
   15674:	mov	r1, #1
   15678:	ldr	r2, [r4, #4]
   1567c:	ldr	r3, [r4, #464]	; 0x1d0
   15680:	add	r6, r3, r6
   15684:	ldr	r3, [pc, #164]	; 15730 <fputs@plt+0x4128>
   15688:	str	r0, [r6, #4]
   1568c:	mov	r0, r9
   15690:	bl	112e4 <rb_socket@plt>
   15694:	cmp	r0, #0
   15698:	mov	r5, r0
   1569c:	str	r0, [r7]
   156a0:	bne	156d0 <fputs@plt+0x40c8>
   156a4:	bl	115f0 <__errno_location@plt>
   156a8:	ldr	r0, [r0]
   156ac:	bl	11230 <strerror@plt>
   156b0:	mov	r2, r0
   156b4:	ldr	r1, [pc, #120]	; 15734 <fputs@plt+0x412c>
   156b8:	mov	r0, #68	; 0x44
   156bc:	bl	12080 <fputs@plt+0xa78>
   156c0:	mov	r1, #2
   156c4:	mov	r0, r4
   156c8:	bl	15490 <fputs@plt+0x3e88>
   156cc:	b	1562c <fputs@plt+0x4024>
   156d0:	add	r1, r4, #64	; 0x40
   156d4:	mov	r2, #128	; 0x80
   156d8:	add	r0, sp, #8
   156dc:	bl	11440 <memcpy@plt>
   156e0:	add	r1, r4, #248	; 0xf8
   156e4:	mov	r2, #128	; 0x80
   156e8:	add	r0, sp, #136	; 0x88
   156ec:	bl	11440 <memcpy@plt>
   156f0:	mov	r3, #0
   156f4:	add	r2, sp, #8
   156f8:	add	r1, sp, #136	; 0x88
   156fc:	mov	r0, r5
   15700:	strh	r3, [sp, #10]
   15704:	mov	r3, #28928	; 0x7100
   15708:	strh	r3, [sp, #138]	; 0x8a
   1570c:	ldr	r3, [r8, #4]
   15710:	str	r4, [sp]
   15714:	str	r3, [sp, #4]
   15718:	ldr	r3, [pc, #24]	; 15738 <fputs@plt+0x4130>
   1571c:	bl	11284 <rb_connect_tcp@plt>
   15720:	b	1562c <fputs@plt+0x4024>
   15724:	andeq	r9, r2, r4, ror #27
   15728:	andeq	r7, r1, r1, ror fp
   1572c:	muleq	r1, r8, fp
   15730:	muleq	r1, r2, fp
   15734:	andeq	r7, r1, fp, lsr #23
   15738:	andeq	r5, r1, r0, lsl #19
   1573c:	push	{r4, r5, r6, r7, r8, lr}
   15740:	sub	sp, sp, #136	; 0x88
   15744:	mov	r5, r0
   15748:	mov	r2, #129	; 0x81
   1574c:	mov	r4, r1
   15750:	add	r0, sp, #4
   15754:	mov	r1, #0
   15758:	bl	11368 <memset@plt>
   1575c:	mov	r2, #128	; 0x80
   15760:	add	r1, sp, #4
   15764:	mov	r0, r5
   15768:	bl	113e0 <rb_read@plt>
   1576c:	cmp	r0, #0
   15770:	bge	157a4 <fputs@plt+0x419c>
   15774:	bl	115f0 <__errno_location@plt>
   15778:	ldr	r0, [r0]
   1577c:	bl	1126c <rb_ignore_errno@plt>
   15780:	cmp	r0, #0
   15784:	beq	15960 <fputs@plt+0x4358>
   15788:	mov	r3, r4
   1578c:	ldr	r2, [pc, #476]	; 15970 <fputs@plt+0x4368>
   15790:	mov	r1, #1
   15794:	mov	r0, r5
   15798:	bl	112b4 <rb_setselect@plt>
   1579c:	add	sp, sp, #136	; 0x88
   157a0:	pop	{r4, r5, r6, r7, r8, pc}
   157a4:	beq	15960 <fputs@plt+0x4358>
   157a8:	mov	r1, #58	; 0x3a
   157ac:	add	r0, sp, #4
   157b0:	bl	11314 <strchr@plt>
   157b4:	subs	r5, r0, #0
   157b8:	bne	157cc <fputs@plt+0x41c4>
   157bc:	mov	r1, #3
   157c0:	mov	r0, r4
   157c4:	bl	15490 <fputs@plt+0x3e88>
   157c8:	b	1579c <fputs@plt+0x4194>
   157cc:	mov	r7, #0
   157d0:	mov	r1, #58	; 0x3a
   157d4:	strb	r7, [r5], #1
   157d8:	mov	r0, r5
   157dc:	bl	11314 <strchr@plt>
   157e0:	subs	r8, r0, #0
   157e4:	beq	157bc <fputs@plt+0x41b4>
   157e8:	mov	r1, #44	; 0x2c
   157ec:	add	r0, sp, #4
   157f0:	strb	r7, [r8]
   157f4:	bl	11314 <strchr@plt>
   157f8:	subs	r6, r0, #0
   157fc:	beq	157bc <fputs@plt+0x41b4>
   15800:	add	r0, sp, #4
   15804:	strb	r7, [r6], #1
   15808:	bl	11488 <atoi@plt>
   1580c:	cmp	r0, r7
   15810:	beq	157bc <fputs@plt+0x41b4>
   15814:	mov	r0, r6
   15818:	bl	11488 <atoi@plt>
   1581c:	cmp	r0, r7
   15820:	beq	157bc <fputs@plt+0x41b4>
   15824:	ldr	r1, [pc, #328]	; 15974 <fputs@plt+0x436c>
   15828:	mov	r0, r5
   1582c:	bl	114ac <strstr@plt>
   15830:	cmp	r0, r7
   15834:	beq	157bc <fputs@plt+0x41b4>
   15838:	mov	r1, #58	; 0x3a
   1583c:	add	r0, r8, #1
   15840:	bl	11314 <strchr@plt>
   15844:	cmp	r0, #0
   15848:	beq	157bc <fputs@plt+0x41b4>
   1584c:	strb	r7, [r0], #1
   15850:	cmp	r0, r7
   15854:	beq	157bc <fputs@plt+0x41b4>
   15858:	add	r3, r4, #440	; 0x1b8
   1585c:	mov	r1, r0
   15860:	add	r0, r0, #1
   15864:	ldrb	r2, [r1]
   15868:	and	r2, r2, #223	; 0xdf
   1586c:	cmp	r2, #94	; 0x5e
   15870:	beq	1585c <fputs@plt+0x4254>
   15874:	sub	r1, r1, #1
   15878:	mov	ip, #10
   1587c:	ldrb	r2, [r1, #1]!
   15880:	tst	r2, #191	; 0xbf
   15884:	movne	r0, #1
   15888:	moveq	r0, #0
   1588c:	cmp	ip, #0
   15890:	moveq	r0, #0
   15894:	cmp	r0, #0
   15898:	beq	158a8 <fputs@plt+0x42a0>
   1589c:	cmp	r2, #10
   158a0:	cmpne	r2, #13
   158a4:	bne	15934 <fputs@plt+0x432c>
   158a8:	ldr	r5, [pc, #200]	; 15978 <fputs@plt+0x4370>
   158ac:	mov	r2, #0
   158b0:	strb	r2, [r3]
   158b4:	ldr	r3, [r4, #464]	; 0x1d0
   158b8:	ldr	r2, [r5, #20]
   158bc:	add	r3, r3, r2, lsl #4
   158c0:	ldr	r6, [r3, #8]
   158c4:	ldr	r0, [r6]
   158c8:	cmp	r0, #0
   158cc:	bne	15968 <fputs@plt+0x4360>
   158d0:	mov	r0, r6
   158d4:	bl	15484 <fputs@plt+0x3e7c>
   158d8:	ldr	r3, [r5, #20]
   158dc:	mov	r1, #0
   158e0:	ldr	r0, [r4]
   158e4:	ldr	r2, [r4, #464]	; 0x1d0
   158e8:	lsl	r3, r3, #4
   158ec:	add	r2, r2, r3
   158f0:	str	r1, [r2, #8]
   158f4:	ldr	r2, [r4, #464]	; 0x1d0
   158f8:	add	r3, r2, r3
   158fc:	str	r1, [r3, #4]
   15900:	ldr	r1, [pc, #116]	; 1597c <fputs@plt+0x4374>
   15904:	bl	12028 <fputs@plt+0xa20>
   15908:	mov	r0, r4
   1590c:	ldr	r1, [r5, #20]
   15910:	bl	12820 <fputs@plt+0x1218>
   15914:	ldr	r3, [r4, #460]	; 0x1cc
   15918:	sub	r3, r3, #1
   1591c:	cmp	r3, #0
   15920:	str	r3, [r4, #460]	; 0x1cc
   15924:	bne	1579c <fputs@plt+0x4194>
   15928:	mov	r0, r4
   1592c:	bl	124b8 <fputs@plt+0xeb0>
   15930:	b	1579c <fputs@plt+0x4194>
   15934:	cmp	r2, #32
   15938:	cmpne	r2, #58	; 0x3a
   1593c:	movne	r0, #1
   15940:	moveq	r0, #0
   15944:	cmp	r2, #91	; 0x5b
   15948:	moveq	r0, #0
   1594c:	andne	r0, r0, #1
   15950:	cmp	r0, #0
   15954:	subne	ip, ip, #1
   15958:	strbne	r2, [r3], #1
   1595c:	b	1587c <fputs@plt+0x4274>
   15960:	mov	r1, #2
   15964:	b	157c0 <fputs@plt+0x41b8>
   15968:	bl	11458 <rb_close@plt>
   1596c:	b	158d0 <fputs@plt+0x42c8>
   15970:	andeq	r5, r1, ip, lsr r7
   15974:	andeq	r7, r1, sp, asr #23
   15978:	andeq	r9, r2, r4, ror #27
   1597c:	ldrdeq	r7, [r1], -r4
   15980:	cmp	r1, #0
   15984:	push	{r4, r5, r6, lr}
   15988:	mov	r4, r2
   1598c:	sub	sp, sp, #40	; 0x28
   15990:	beq	159a8 <fputs@plt+0x43a0>
   15994:	mov	r1, #2
   15998:	mov	r0, r4
   1599c:	bl	15490 <fputs@plt+0x3e88>
   159a0:	add	sp, sp, #40	; 0x28
   159a4:	pop	{r4, r5, r6, pc}
   159a8:	ldr	r3, [pc, #92]	; 15a0c <fputs@plt+0x4404>
   159ac:	mov	r1, #32
   159b0:	add	r0, sp, #8
   159b4:	ldr	r2, [r3, #20]
   159b8:	ldr	r3, [r4, #464]	; 0x1d0
   159bc:	add	r3, r3, r2, lsl #4
   159c0:	ldr	r2, [pc, #72]	; 15a10 <fputs@plt+0x4408>
   159c4:	ldr	r5, [r3, #8]
   159c8:	ldrh	r3, [r4, #62]	; 0x3e
   159cc:	str	r3, [sp]
   159d0:	ldrh	r3, [r4, #246]	; 0xf6
   159d4:	bl	11590 <snprintf@plt>
   159d8:	add	r0, sp, #8
   159dc:	bl	1141c <strlen@plt>
   159e0:	mov	r6, r0
   159e4:	mov	r2, r0
   159e8:	ldr	r0, [r5]
   159ec:	add	r1, sp, #8
   159f0:	bl	1138c <rb_write@plt>
   159f4:	cmp	r0, r6
   159f8:	bne	15994 <fputs@plt+0x438c>
   159fc:	mov	r1, r4
   15a00:	ldr	r0, [r5]
   15a04:	bl	1573c <fputs@plt+0x4134>
   15a08:	b	159a0 <fputs@plt+0x4398>
   15a0c:	andeq	r9, r2, r4, ror #27
   15a10:	andeq	r7, r1, fp, ror #23
   15a14:	push	{r4, lr}
   15a18:	ldr	r0, [r2]
   15a1c:	bl	11488 <atoi@plt>
   15a20:	subs	r2, r0, #0
   15a24:	bge	15a3c <fputs@plt+0x4434>
   15a28:	mov	r0, #67	; 0x43
   15a2c:	ldr	r1, [pc, #20]	; 15a48 <fputs@plt+0x4440>
   15a30:	bl	12080 <fputs@plt+0xa78>
   15a34:	mov	r0, #3
   15a38:	bl	115e4 <exit@plt>
   15a3c:	ldr	r3, [pc, #8]	; 15a4c <fputs@plt+0x4444>
   15a40:	str	r2, [r3]
   15a44:	pop	{r4, pc}
   15a48:	andeq	r7, r1, r4, ror #24
   15a4c:	andeq	r9, r2, ip, asr #28
   15a50:	push	{r4, r5, r6, r7, r8, lr}
   15a54:	mov	r4, r0
   15a58:	mov	r7, r1
   15a5c:	add	r0, r0, #376	; 0x178
   15a60:	ldr	r5, [pc, #132]	; 15aec <fputs@plt+0x44e4>
   15a64:	ldr	r3, [r0, #88]	; 0x58
   15a68:	ldr	r1, [pc, #128]	; 15af0 <fputs@plt+0x44e8>
   15a6c:	ldr	r2, [r5, #16]
   15a70:	add	r3, r3, r2, lsl #4
   15a74:	mov	r2, #64	; 0x40
   15a78:	ldr	r6, [r3, #8]
   15a7c:	bl	113a4 <rb_strlcpy@plt>
   15a80:	ldr	r3, [pc, #108]	; 15af4 <fputs@plt+0x44ec>
   15a84:	ldr	r0, [r4]
   15a88:	ldr	r1, [r3, r7, lsl #2]
   15a8c:	bl	12028 <fputs@plt+0xa20>
   15a90:	ldr	r0, [r6]
   15a94:	bl	11e48 <fputs@plt+0x840>
   15a98:	mov	r0, r6
   15a9c:	bl	113c8 <free@plt>
   15aa0:	ldr	r1, [r5, #16]
   15aa4:	mov	r0, #0
   15aa8:	ldr	r2, [r4, #464]	; 0x1d0
   15aac:	lsl	ip, r1, #4
   15ab0:	add	r2, r2, ip
   15ab4:	str	r0, [r2, #8]
   15ab8:	ldr	r3, [r4, #464]	; 0x1d0
   15abc:	add	r3, r3, ip
   15ac0:	str	r0, [r3, #4]
   15ac4:	mov	r0, r4
   15ac8:	bl	12820 <fputs@plt+0x1218>
   15acc:	ldr	r3, [r4, #460]	; 0x1cc
   15ad0:	sub	r3, r3, #1
   15ad4:	cmp	r3, #0
   15ad8:	str	r3, [r4, #460]	; 0x1cc
   15adc:	popne	{r4, r5, r6, r7, r8, pc}
   15ae0:	mov	r0, r4
   15ae4:	pop	{r4, r5, r6, r7, r8, lr}
   15ae8:	b	124b8 <fputs@plt+0xeb0>
   15aec:	andeq	r9, r2, ip, asr #28
   15af0:	andeq	r7, r1, r8, asr r3
   15af4:	andeq	r7, r1, r8, asr ip
   15af8:	ldr	r3, [pc, #28]	; 15b1c <fputs@plt+0x4514>
   15afc:	ldr	r2, [r3, #16]
   15b00:	ldr	r3, [r0, #464]	; 0x1d0
   15b04:	add	r3, r3, r2, lsl #4
   15b08:	ldr	r3, [r3, #8]
   15b0c:	cmp	r3, #0
   15b10:	bxeq	lr
   15b14:	mov	r1, #1
   15b18:	b	15a50 <fputs@plt+0x4448>
   15b1c:	andeq	r9, r2, ip, asr #28
   15b20:	push	{r0, r1, r2, r4, r5, lr}
   15b24:	mov	r1, sp
   15b28:	ldr	r4, [pc, #84]	; 15b84 <fputs@plt+0x457c>
   15b2c:	ldr	r5, [pc, #84]	; 15b88 <fputs@plt+0x4580>
   15b30:	ldr	r0, [r4]
   15b34:	bl	11404 <rb_dictionary_foreach_start@plt>
   15b38:	mov	r1, sp
   15b3c:	ldr	r0, [r4]
   15b40:	bl	11320 <rb_dictionary_foreach_cur@plt>
   15b44:	subs	r2, r0, #0
   15b48:	bne	15b54 <fputs@plt+0x454c>
   15b4c:	add	sp, sp, #12
   15b50:	pop	{r4, r5, pc}
   15b54:	ldr	r1, [r5, #16]
   15b58:	ldr	r3, [r2, #464]	; 0x1d0
   15b5c:	add	r3, r3, r1, lsl #4
   15b60:	ldr	r3, [r3, #8]
   15b64:	cmp	r3, #0
   15b68:	beq	15b74 <fputs@plt+0x456c>
   15b6c:	mov	r1, #1
   15b70:	bl	15a50 <fputs@plt+0x4448>
   15b74:	mov	r1, sp
   15b78:	ldr	r0, [r4]
   15b7c:	bl	113bc <rb_dictionary_foreach_next@plt>
   15b80:	b	15b38 <fputs@plt+0x4530>
   15b84:	andeq	lr, r2, r8, ror r1
   15b88:	andeq	r9, r2, ip, asr #28
   15b8c:	push	{r4, r5, r6, r7, r8, lr}
   15b90:	mov	r1, #4
   15b94:	mov	r4, r0
   15b98:	mov	r0, #1
   15b9c:	bl	11338 <calloc@plt>
   15ba0:	subs	r7, r0, #0
   15ba4:	bne	15bac <fputs@plt+0x45a4>
   15ba8:	bl	114d0 <rb_outofmemory@plt>
   15bac:	ldr	r2, [pc, #92]	; 15c10 <fputs@plt+0x4608>
   15bb0:	ldr	r3, [r4, #460]	; 0x1cc
   15bb4:	ldr	r6, [r2]
   15bb8:	add	r3, r3, #1
   15bbc:	ldr	r5, [r2, #16]
   15bc0:	str	r3, [r4, #460]	; 0x1cc
   15bc4:	ldr	r3, [r4, #464]	; 0x1d0
   15bc8:	lsl	r5, r5, #4
   15bcc:	add	r3, r3, r5
   15bd0:	str	r7, [r3, #8]
   15bd4:	bl	11428 <rb_current_time@plt>
   15bd8:	ldr	r3, [r4, #464]	; 0x1d0
   15bdc:	add	r0, r6, r0
   15be0:	mov	r2, r4
   15be4:	ldr	r1, [pc, #40]	; 15c14 <fputs@plt+0x460c>
   15be8:	add	r5, r3, r5
   15bec:	str	r0, [r5, #4]
   15bf0:	add	r0, r4, #192	; 0xc0
   15bf4:	bl	11d84 <fputs@plt+0x77c>
   15bf8:	ldr	r1, [pc, #24]	; 15c18 <fputs@plt+0x4610>
   15bfc:	str	r0, [r7]
   15c00:	ldr	r0, [r4]
   15c04:	bl	12028 <fputs@plt+0xa20>
   15c08:	mov	r0, #1
   15c0c:	pop	{r4, r5, r6, r7, r8, pc}
   15c10:	andeq	r9, r2, ip, asr #28
   15c14:	andeq	r5, r1, ip, lsl ip
   15c18:	andeq	r7, r1, r6, lsl #25
   15c1c:	eor	r1, r1, #1
   15c20:	push	{r4, r5, r6, r7, r8, lr}
   15c24:	cmp	r0, #0
   15c28:	movne	r5, r1
   15c2c:	orreq	r5, r1, #1
   15c30:	cmp	r5, #0
   15c34:	movne	r1, #1
   15c38:	movne	r0, r3
   15c3c:	bne	15c5c <fputs@plt+0x4654>
   15c40:	mov	r7, r0
   15c44:	mov	r4, r3
   15c48:	bl	1141c <strlen@plt>
   15c4c:	cmp	r0, #63	; 0x3f
   15c50:	bls	15c64 <fputs@plt+0x465c>
   15c54:	mov	r1, #2
   15c58:	mov	r0, r4
   15c5c:	pop	{r4, r5, r6, r7, r8, lr}
   15c60:	b	15a50 <fputs@plt+0x4448>
   15c64:	mov	r1, r7
   15c68:	ldr	r7, [pc, #132]	; 15cf4 <fputs@plt+0x46ec>
   15c6c:	add	r6, r4, #376	; 0x178
   15c70:	mov	r2, #64	; 0x40
   15c74:	mov	r0, r6
   15c78:	bl	113a4 <rb_strlcpy@plt>
   15c7c:	ldr	r1, [pc, #116]	; 15cf8 <fputs@plt+0x46f0>
   15c80:	ldr	r2, [r7, #16]
   15c84:	ldr	r3, [r4, #464]	; 0x1d0
   15c88:	ldr	r0, [r4]
   15c8c:	add	r3, r3, r2, lsl #4
   15c90:	mov	r2, r6
   15c94:	ldr	r8, [r3, #8]
   15c98:	bl	12028 <fputs@plt+0xa20>
   15c9c:	ldr	r0, [r8]
   15ca0:	bl	11e48 <fputs@plt+0x840>
   15ca4:	mov	r0, r8
   15ca8:	bl	113c8 <free@plt>
   15cac:	ldr	r1, [r7, #16]
   15cb0:	ldr	r2, [r4, #464]	; 0x1d0
   15cb4:	lsl	r0, r1, #4
   15cb8:	add	r2, r2, r0
   15cbc:	str	r5, [r2, #8]
   15cc0:	ldr	r3, [r4, #464]	; 0x1d0
   15cc4:	add	r3, r3, r0
   15cc8:	mov	r0, r4
   15ccc:	str	r5, [r3, #4]
   15cd0:	bl	12820 <fputs@plt+0x1218>
   15cd4:	ldr	r3, [r4, #460]	; 0x1cc
   15cd8:	sub	r3, r3, #1
   15cdc:	cmp	r3, #0
   15ce0:	str	r3, [r4, #460]	; 0x1cc
   15ce4:	popne	{r4, r5, r6, r7, r8, pc}
   15ce8:	mov	r0, r4
   15cec:	pop	{r4, r5, r6, r7, r8, lr}
   15cf0:	b	124b8 <fputs@plt+0xeb0>
   15cf4:	andeq	r9, r2, ip, asr #28
   15cf8:	andeq	r7, r1, r6, lsr #25
   15cfc:	cmp	r0, #0
   15d00:	bxeq	lr
   15d04:	b	113c8 <free@plt>
   15d08:	ldr	r3, [pc, #184]	; 15dc8 <fputs@plt+0x47c0>
   15d0c:	push	{r4, r5, r6, r7, r8, lr}
   15d10:	ldr	r2, [r0, #464]	; 0x1d0
   15d14:	ldr	r1, [r3, #12]
   15d18:	add	r2, r2, r1, lsl #4
   15d1c:	ldr	r7, [r2, #8]
   15d20:	cmp	r7, #0
   15d24:	popeq	{r4, r5, r6, r7, r8, pc}
   15d28:	mov	r4, r0
   15d2c:	mov	r6, r3
   15d30:	ldr	r1, [pc, #148]	; 15dcc <fputs@plt+0x47c4>
   15d34:	ldr	r0, [r0]
   15d38:	bl	12028 <fputs@plt+0xa20>
   15d3c:	ldr	r3, [r7]
   15d40:	cmp	r3, #0
   15d44:	ldrne	r5, [r3, #8]
   15d48:	bne	15da0 <fputs@plt+0x4798>
   15d4c:	mov	r0, r7
   15d50:	bl	15cfc <fputs@plt+0x46f4>
   15d54:	ldr	r1, [r6, #12]
   15d58:	mov	r0, #0
   15d5c:	ldr	r2, [r4, #464]	; 0x1d0
   15d60:	lsl	ip, r1, #4
   15d64:	add	r2, r2, ip
   15d68:	str	r0, [r2, #8]
   15d6c:	ldr	r3, [r4, #464]	; 0x1d0
   15d70:	add	r3, r3, ip
   15d74:	str	r0, [r3, #4]
   15d78:	mov	r0, r4
   15d7c:	bl	12820 <fputs@plt+0x1218>
   15d80:	ldr	r3, [r4, #460]	; 0x1cc
   15d84:	sub	r3, r3, #1
   15d88:	cmp	r3, #0
   15d8c:	str	r3, [r4, #460]	; 0x1cc
   15d90:	popne	{r4, r5, r6, r7, r8, pc}
   15d94:	mov	r0, r4
   15d98:	pop	{r4, r5, r6, r7, r8, lr}
   15d9c:	b	124b8 <fputs@plt+0xeb0>
   15da0:	ldr	r8, [r3]
   15da4:	ldr	r0, [r8, #4]
   15da8:	bl	11458 <rb_close@plt>
   15dac:	mov	r0, r8
   15db0:	bl	15cfc <fputs@plt+0x46f4>
   15db4:	cmp	r5, #0
   15db8:	beq	15d4c <fputs@plt+0x4744>
   15dbc:	mov	r3, r5
   15dc0:	ldr	r5, [r5, #8]
   15dc4:	b	15da0 <fputs@plt+0x4798>
   15dc8:	andeq	r9, r2, r4, lsr #29
   15dcc:	andeq	r7, r1, r5, asr #26
   15dd0:	push	{r0, r1, r4, lr}
   15dd4:	mov	r1, sp
   15dd8:	ldr	r4, [pc, #52]	; 15e14 <fputs@plt+0x480c>
   15ddc:	ldr	r0, [r4]
   15de0:	bl	11404 <rb_dictionary_foreach_start@plt>
   15de4:	mov	r1, sp
   15de8:	ldr	r0, [r4]
   15dec:	bl	11320 <rb_dictionary_foreach_cur@plt>
   15df0:	cmp	r0, #0
   15df4:	bne	15e00 <fputs@plt+0x47f8>
   15df8:	add	sp, sp, #8
   15dfc:	pop	{r4, pc}
   15e00:	bl	15d08 <fputs@plt+0x4700>
   15e04:	mov	r1, sp
   15e08:	ldr	r0, [r4]
   15e0c:	bl	113bc <rb_dictionary_foreach_next@plt>
   15e10:	b	15de4 <fputs@plt+0x47dc>
   15e14:	andeq	lr, r2, r8, ror r1
   15e18:	push	{r4, lr}
   15e1c:	ldr	r0, [r2]
   15e20:	bl	11488 <atoi@plt>
   15e24:	subs	r2, r0, #0
   15e28:	bge	15e3c <fputs@plt+0x4834>
   15e2c:	ldr	r1, [pc, #20]	; 15e48 <fputs@plt+0x4840>
   15e30:	mov	r0, #67	; 0x43
   15e34:	pop	{r4, lr}
   15e38:	b	12080 <fputs@plt+0xa78>
   15e3c:	ldr	r3, [pc, #8]	; 15e4c <fputs@plt+0x4844>
   15e40:	str	r2, [r3, #60]	; 0x3c
   15e44:	pop	{r4, pc}
   15e48:	andeq	r7, r1, r5, ror #26
   15e4c:	andeq	r9, r2, r4, lsr #29
   15e50:	ldr	r3, [pc, #88]	; 15eb0 <fputs@plt+0x48a8>
   15e54:	push	{r4, r5, r6, r7, r8, lr}
   15e58:	mov	r6, r0
   15e5c:	mov	r7, r1
   15e60:	ldr	r4, [r3]
   15e64:	cmp	r4, #0
   15e68:	bne	15e74 <fputs@plt+0x486c>
   15e6c:	mov	r0, #1
   15e70:	pop	{r4, r5, r6, r7, r8, pc}
   15e74:	ldr	r5, [r4]
   15e78:	mov	r1, r7
   15e7c:	ldr	r0, [r5, #16]
   15e80:	bl	1132c <strcasecmp@plt>
   15e84:	cmp	r0, #0
   15e88:	ldrne	r4, [r4, #8]
   15e8c:	bne	15e64 <fputs@plt+0x485c>
   15e90:	ldr	r2, [r5, #12]
   15e94:	ldr	r3, [r6, #464]	; 0x1d0
   15e98:	add	r3, r3, r2, lsl #4
   15e9c:	ldr	r0, [r3, #12]
   15ea0:	sub	r0, r0, #2
   15ea4:	clz	r0, r0
   15ea8:	lsr	r0, r0, #5
   15eac:	pop	{r4, r5, r6, r7, r8, pc}
   15eb0:	andeq	lr, r2, ip, ror r1
   15eb4:	push	{r4, lr}
   15eb8:	mov	r1, r0
   15ebc:	mov	r0, #1
   15ec0:	bl	11338 <calloc@plt>
   15ec4:	cmp	r0, #0
   15ec8:	popne	{r4, pc}
   15ecc:	bl	114d0 <rb_outofmemory@plt>
   15ed0:	ldr	r3, [pc, #56]	; 15f10 <fputs@plt+0x4908>
   15ed4:	push	{r4, lr}
   15ed8:	ldr	r0, [r3, #184]	; 0xb8
   15edc:	mov	r4, r3
   15ee0:	cmp	r0, #0
   15ee4:	beq	15eec <fputs@plt+0x48e4>
   15ee8:	bl	11458 <rb_close@plt>
   15eec:	ldr	r0, [r4, #372]	; 0x174
   15ef0:	cmp	r0, #0
   15ef4:	beq	15efc <fputs@plt+0x48f4>
   15ef8:	bl	11458 <rb_close@plt>
   15efc:	mov	r2, #376	; 0x178
   15f00:	mov	r1, #0
   15f04:	ldr	r0, [pc, #4]	; 15f10 <fputs@plt+0x4908>
   15f08:	pop	{r4, lr}
   15f0c:	b	11368 <memset@plt>
   15f10:	andeq	sp, r2, ip, ror #31
   15f14:	push	{r4, r5, lr}
   15f18:	mov	r3, #128	; 0x80
   15f1c:	sub	sp, sp, #148	; 0x94
   15f20:	cmp	r1, #0
   15f24:	mov	r5, r0
   15f28:	movne	r1, #1
   15f2c:	str	r3, [sp, #4]
   15f30:	ldr	r3, [sp, #160]	; 0xa0
   15f34:	clz	r3, r3
   15f38:	lsr	r3, r3, #5
   15f3c:	moveq	r1, r3
   15f40:	cmp	r1, #0
   15f44:	beq	15f54 <fputs@plt+0x494c>
   15f48:	mov	r0, r5
   15f4c:	bl	11458 <rb_close@plt>
   15f50:	b	15fe4 <fputs@plt+0x49dc>
   15f54:	bl	112c0 <rb_get_fd@plt>
   15f58:	add	r2, sp, #4
   15f5c:	add	r1, sp, #16
   15f60:	bl	11260 <getsockname@plt>
   15f64:	cmp	r0, #0
   15f68:	bne	15f48 <fputs@plt+0x4940>
   15f6c:	ldr	r4, [pc, #192]	; 16034 <fputs@plt+0x4a2c>
   15f70:	add	r1, sp, #8
   15f74:	ldr	r0, [r4]
   15f78:	bl	11404 <rb_dictionary_foreach_start@plt>
   15f7c:	add	r1, sp, #8
   15f80:	ldr	r0, [r4]
   15f84:	bl	11320 <rb_dictionary_foreach_cur@plt>
   15f88:	subs	r3, r0, #0
   15f8c:	beq	15f48 <fputs@plt+0x4940>
   15f90:	ldrh	r1, [sp, #16]
   15f94:	ldrh	r2, [r3, #248]	; 0xf8
   15f98:	cmp	r2, r1
   15f9c:	bne	16024 <fputs@plt+0x4a1c>
   15fa0:	cmp	r2, #2
   15fa4:	beq	15fc4 <fputs@plt+0x49bc>
   15fa8:	cmp	r2, #10
   15fac:	beq	15fec <fputs@plt+0x49e4>
   15fb0:	mov	r0, #67	; 0x43
   15fb4:	ldr	r1, [pc, #124]	; 16038 <fputs@plt+0x4a30>
   15fb8:	bl	12080 <fputs@plt+0xa78>
   15fbc:	mov	r0, #3
   15fc0:	bl	115e4 <exit@plt>
   15fc4:	ldr	r1, [sp, #20]
   15fc8:	ldr	r2, [r3, #252]	; 0xfc
   15fcc:	cmp	r1, r2
   15fd0:	bne	16024 <fputs@plt+0x4a1c>
   15fd4:	ldr	r2, [pc, #96]	; 1603c <fputs@plt+0x4a34>
   15fd8:	mov	r1, #1
   15fdc:	mov	r0, r5
   15fe0:	bl	112b4 <rb_setselect@plt>
   15fe4:	add	sp, sp, #148	; 0x94
   15fe8:	pop	{r4, r5, pc}
   15fec:	ldr	r1, [sp, #24]
   15ff0:	ldr	r2, [r3, #256]	; 0x100
   15ff4:	cmp	r1, r2
   15ff8:	bne	16024 <fputs@plt+0x4a1c>
   15ffc:	ldr	r1, [sp, #28]
   16000:	ldr	r2, [r3, #260]	; 0x104
   16004:	cmp	r1, r2
   16008:	bne	16024 <fputs@plt+0x4a1c>
   1600c:	ldr	r1, [sp, #32]
   16010:	ldr	r2, [r3, #264]	; 0x108
   16014:	cmp	r1, r2
   16018:	ldreq	r1, [sp, #36]	; 0x24
   1601c:	ldreq	r2, [r3, #268]	; 0x10c
   16020:	beq	15fcc <fputs@plt+0x49c4>
   16024:	add	r1, sp, #8
   16028:	ldr	r0, [r4]
   1602c:	bl	113bc <rb_dictionary_foreach_next@plt>
   16030:	b	15f7c <fputs@plt+0x4974>
   16034:	andeq	lr, r2, r8, ror r1
   16038:	andeq	r7, r1, r6, lsl #27
   1603c:	andeq	r6, r1, r0, asr #32
   16040:	push	{r4, r5, r6, r7, r8, r9, lr}
   16044:	sub	sp, sp, #132	; 0x84
   16048:	mov	r7, r1
   1604c:	mov	r6, r0
   16050:	ldr	r5, [pc, #244]	; 1614c <fputs@plt+0x4b44>
   16054:	ldr	r3, [r1, #464]	; 0x1d0
   16058:	mov	r1, sp
   1605c:	ldr	r2, [r5, #12]
   16060:	add	r3, r3, r2, lsl #4
   16064:	mov	r2, #128	; 0x80
   16068:	ldr	r8, [r3, #8]
   1606c:	bl	113e0 <rb_read@plt>
   16070:	cmp	r0, #0
   16074:	bge	160b4 <fputs@plt+0x4aac>
   16078:	bl	115f0 <__errno_location@plt>
   1607c:	ldr	r0, [r0]
   16080:	bl	1126c <rb_ignore_errno@plt>
   16084:	cmp	r0, #0
   16088:	bne	16098 <fputs@plt+0x4a90>
   1608c:	mov	r0, r6
   16090:	bl	11458 <rb_close@plt>
   16094:	b	160ac <fputs@plt+0x4aa4>
   16098:	mov	r3, r7
   1609c:	ldr	r2, [pc, #172]	; 16150 <fputs@plt+0x4b48>
   160a0:	mov	r1, #1
   160a4:	mov	r0, r6
   160a8:	bl	112b4 <rb_setselect@plt>
   160ac:	add	sp, sp, #132	; 0x84
   160b0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   160b4:	ldrne	r3, [pc, #152]	; 16154 <fputs@plt+0x4b4c>
   160b8:	ldrne	r4, [r3, #376]	; 0x178
   160bc:	beq	1608c <fputs@plt+0x4a84>
   160c0:	cmp	r4, #0
   160c4:	beq	1608c <fputs@plt+0x4a84>
   160c8:	ldr	r9, [r4]
   160cc:	mov	r0, r9
   160d0:	bl	1141c <strlen@plt>
   160d4:	mov	r2, r0
   160d8:	mov	r1, sp
   160dc:	mov	r0, r9
   160e0:	bl	115a8 <strncmp@plt>
   160e4:	cmp	r0, #0
   160e8:	bne	16144 <fputs@plt+0x4b3c>
   160ec:	ldr	r3, [r8]
   160f0:	cmp	r3, #0
   160f4:	ldrne	r4, [r3, #8]
   160f8:	bne	1611c <fputs@plt+0x4b14>
   160fc:	mov	r0, r8
   16100:	bl	15cfc <fputs@plt+0x46f4>
   16104:	ldr	r3, [pc, #76]	; 16158 <fputs@plt+0x4b50>
   16108:	mov	r2, sp
   1610c:	mov	r0, r7
   16110:	ldr	r1, [r5, #12]
   16114:	bl	12638 <fputs@plt+0x1030>
   16118:	b	1608c <fputs@plt+0x4a84>
   1611c:	ldr	r9, [r3]
   16120:	ldr	r0, [r9, #4]
   16124:	bl	11458 <rb_close@plt>
   16128:	mov	r0, r9
   1612c:	bl	15cfc <fputs@plt+0x46f4>
   16130:	cmp	r4, #0
   16134:	beq	160fc <fputs@plt+0x4af4>
   16138:	mov	r3, r4
   1613c:	ldr	r4, [r4, #8]
   16140:	b	1611c <fputs@plt+0x4b14>
   16144:	ldr	r4, [r4, #8]
   16148:	b	160c0 <fputs@plt+0x4ab8>
   1614c:	andeq	r9, r2, r4, lsr #29
   16150:	andeq	r6, r1, r0, asr #32
   16154:	andeq	sp, r2, ip, ror #31
   16158:			; <UNDEFINED> instruction: 0x00017db3
   1615c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16160:	mov	r3, #1
   16164:	sub	sp, sp, #152	; 0x98
   16168:	mov	r8, r1
   1616c:	add	r1, sp, #24
   16170:	mov	r9, r0
   16174:	str	r3, [sp, #12]
   16178:	bl	11410 <rb_inet_pton_sock@plt>
   1617c:	cmp	r0, #0
   16180:	bne	161a0 <fputs@plt+0x4b98>
   16184:	mov	r3, r8
   16188:	mov	r2, r9
   1618c:	ldr	r1, [pc, #608]	; 163f4 <fputs@plt+0x4dec>
   16190:	mov	r0, #67	; 0x43
   16194:	bl	12080 <fputs@plt+0xa78>
   16198:	mov	r0, #3
   1619c:	bl	115e4 <exit@plt>
   161a0:	ldrh	r0, [sp, #24]
   161a4:	rev16	r3, r8
   161a8:	uxth	r2, r3
   161ac:	ldr	r4, [pc, #580]	; 163f8 <fputs@plt+0x4df0>
   161b0:	strh	r3, [sp, #26]
   161b4:	cmp	r0, #2
   161b8:	bne	161ec <fputs@plt+0x4be4>
   161bc:	ldr	r1, [sp, #28]
   161c0:	ldr	r3, [r4, #60]	; 0x3c
   161c4:	cmp	r1, r3
   161c8:	bne	161e4 <fputs@plt+0x4bdc>
   161cc:	ldrh	r3, [r4, #58]	; 0x3a
   161d0:	cmp	r2, r3
   161d4:	bne	161e4 <fputs@plt+0x4bdc>
   161d8:	ldr	r3, [r4, #184]	; 0xb8
   161dc:	cmp	r3, #0
   161e0:	bne	1624c <fputs@plt+0x4c44>
   161e4:	ldr	r5, [pc, #524]	; 163f8 <fputs@plt+0x4df0>
   161e8:	b	1625c <fputs@plt+0x4c54>
   161ec:	cmp	r0, #10
   161f0:	bne	161bc <fputs@plt+0x4bb4>
   161f4:	ldr	r1, [sp, #32]
   161f8:	ldr	r3, [r4, #252]	; 0xfc
   161fc:	cmp	r1, r3
   16200:	bne	16258 <fputs@plt+0x4c50>
   16204:	ldr	r1, [sp, #36]	; 0x24
   16208:	ldr	r3, [r4, #256]	; 0x100
   1620c:	cmp	r1, r3
   16210:	bne	16258 <fputs@plt+0x4c50>
   16214:	ldr	r1, [sp, #40]	; 0x28
   16218:	ldr	r3, [r4, #260]	; 0x104
   1621c:	cmp	r1, r3
   16220:	bne	16258 <fputs@plt+0x4c50>
   16224:	ldr	r1, [sp, #44]	; 0x2c
   16228:	ldr	r3, [r4, #264]	; 0x108
   1622c:	cmp	r1, r3
   16230:	bne	16258 <fputs@plt+0x4c50>
   16234:	ldrh	r3, [r4, #246]	; 0xf6
   16238:	cmp	r3, r2
   1623c:	bne	16258 <fputs@plt+0x4c50>
   16240:	ldr	r3, [r4, #372]	; 0x174
   16244:	cmp	r3, #0
   16248:	beq	16258 <fputs@plt+0x4c50>
   1624c:	mov	r0, #0
   16250:	add	sp, sp, #152	; 0x98
   16254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16258:	add	r5, r4, #188	; 0xbc
   1625c:	ldr	r3, [pc, #408]	; 163fc <fputs@plt+0x4df4>
   16260:	mov	r2, #0
   16264:	mov	r1, #1
   16268:	bl	112e4 <rb_socket@plt>
   1626c:	subs	r7, r0, #0
   16270:	bne	16294 <fputs@plt+0x4c8c>
   16274:	bl	115f0 <__errno_location@plt>
   16278:	ldr	r0, [r0]
   1627c:	bl	11230 <strerror@plt>
   16280:	ldr	r1, [pc, #376]	; 16400 <fputs@plt+0x4df8>
   16284:	mov	r2, r0
   16288:	mov	r0, #67	; 0x43
   1628c:	bl	12080 <fputs@plt+0xa78>
   16290:	b	16198 <fputs@plt+0x4b90>
   16294:	bl	112c0 <rb_get_fd@plt>
   16298:	mov	r3, #4
   1629c:	mov	r2, #2
   162a0:	mov	r1, #1
   162a4:	str	r3, [sp]
   162a8:	add	r3, sp, #12
   162ac:	bl	115c0 <setsockopt@plt>
   162b0:	subs	sl, r0, #0
   162b4:	beq	162d0 <fputs@plt+0x4cc8>
   162b8:	bl	115f0 <__errno_location@plt>
   162bc:	ldr	r0, [r0]
   162c0:	bl	11230 <strerror@plt>
   162c4:	mov	r2, r0
   162c8:	ldr	r1, [pc, #308]	; 16404 <fputs@plt+0x4dfc>
   162cc:	b	16288 <fputs@plt+0x4c80>
   162d0:	mov	r0, r7
   162d4:	bl	112c0 <rb_get_fd@plt>
   162d8:	ldrh	r3, [sp, #24]
   162dc:	add	r1, sp, #24
   162e0:	cmp	r3, #2
   162e4:	moveq	r2, #16
   162e8:	movne	r2, #28
   162ec:	bl	114a0 <bind@plt>
   162f0:	subs	r6, r0, #0
   162f4:	beq	16320 <fputs@plt+0x4d18>
   162f8:	bl	115f0 <__errno_location@plt>
   162fc:	ldr	r0, [r0]
   16300:	bl	11230 <strerror@plt>
   16304:	mov	r2, r0
   16308:	ldr	r1, [pc, #248]	; 16408 <fputs@plt+0x4e00>
   1630c:	mov	r0, #87	; 0x57
   16310:	bl	12080 <fputs@plt+0xa78>
   16314:	mov	r0, r7
   16318:	bl	11458 <rb_close@plt>
   1631c:	b	1624c <fputs@plt+0x4c44>
   16320:	mov	r2, r6
   16324:	mov	r1, #128	; 0x80
   16328:	mov	r0, r7
   1632c:	bl	1159c <rb_listen@plt>
   16330:	cmp	r0, #0
   16334:	beq	16364 <fputs@plt+0x4d5c>
   16338:	bl	115f0 <__errno_location@plt>
   1633c:	ldr	r0, [r0]
   16340:	bl	11230 <strerror@plt>
   16344:	mov	r2, r0
   16348:	ldr	r1, [pc, #188]	; 1640c <fputs@plt+0x4e04>
   1634c:	mov	r0, #87	; 0x57
   16350:	bl	12080 <fputs@plt+0xa78>
   16354:	mov	r0, r7
   16358:	bl	11458 <rb_close@plt>
   1635c:	mov	r0, r6
   16360:	b	16250 <fputs@plt+0x4c48>
   16364:	ldr	r0, [r5, #184]	; 0xb8
   16368:	cmp	r0, #0
   1636c:	beq	16374 <fputs@plt+0x4d6c>
   16370:	bl	11458 <rb_close@plt>
   16374:	ldr	r6, [pc, #148]	; 16410 <fputs@plt+0x4e08>
   16378:	add	r1, sp, #16
   1637c:	str	r7, [r5, #184]	; 0xb8
   16380:	ldr	r0, [r6]
   16384:	bl	11404 <rb_dictionary_foreach_start@plt>
   16388:	add	r1, sp, #16
   1638c:	ldr	r0, [r6]
   16390:	bl	11320 <rb_dictionary_foreach_cur@plt>
   16394:	subs	r7, r0, #0
   16398:	bne	163e0 <fputs@plt+0x4dd8>
   1639c:	mov	r1, r9
   163a0:	mov	r2, #53	; 0x35
   163a4:	mov	r0, r5
   163a8:	mov	r6, #1
   163ac:	bl	113a4 <rb_strlcpy@plt>
   163b0:	add	r1, sp, #24
   163b4:	mov	r2, #128	; 0x80
   163b8:	strh	r8, [r5, #54]	; 0x36
   163bc:	add	r0, r5, #56	; 0x38
   163c0:	bl	11440 <memcpy@plt>
   163c4:	mov	r3, r5
   163c8:	ldr	r2, [pc, #68]	; 16414 <fputs@plt+0x4e0c>
   163cc:	mov	r1, r7
   163d0:	strb	r6, [r4, #388]	; 0x184
   163d4:	ldr	r0, [r5, #184]	; 0xb8
   163d8:	bl	11554 <rb_accept_tcp@plt>
   163dc:	b	1635c <fputs@plt+0x4d54>
   163e0:	bl	15d08 <fputs@plt+0x4700>
   163e4:	add	r1, sp, #16
   163e8:	ldr	r0, [r6]
   163ec:	bl	113bc <rb_dictionary_foreach_next@plt>
   163f0:	b	16388 <fputs@plt+0x4d80>
   163f4:	andeq	r7, r1, r7, asr #27
   163f8:	andeq	sp, r2, ip, ror #31
   163fc:	andeq	r7, r1, r7, ror #27
   16400:	strdeq	r7, [r1], -fp
   16404:	andeq	r7, r1, r9, lsl lr
   16408:	andeq	r7, r1, pc, lsr lr
   1640c:	andeq	r7, r1, lr, asr lr
   16410:	andeq	lr, r2, r8, ror r1
   16414:	andeq	r5, r1, r4, lsl pc
   16418:	push	{r4, r5, r6, lr}
   1641c:	ldrd	r4, [r2]
   16420:	mov	r0, r5
   16424:	bl	11488 <atoi@plt>
   16428:	sub	r2, r0, #1
   1642c:	movw	r3, #65534	; 0xfffe
   16430:	cmp	r2, r3
   16434:	bls	16454 <fputs@plt+0x4e4c>
   16438:	mov	r0, #67	; 0x43
   1643c:	mov	r3, r5
   16440:	ldr	r1, [pc, #28]	; 16464 <fputs@plt+0x4e5c>
   16444:	mov	r2, r4
   16448:	bl	12080 <fputs@plt+0xa78>
   1644c:	mov	r0, #3
   16450:	bl	115e4 <exit@plt>
   16454:	uxth	r1, r0
   16458:	mov	r0, r4
   1645c:	pop	{r4, r5, r6, lr}
   16460:	b	1615c <fputs@plt+0x4b54>
   16464:	andeq	r7, r1, pc, ror lr
   16468:	ldr	r3, [r2]
   1646c:	push	{r0, r1, r4, r5, r6, lr}
   16470:	ldr	r4, [pc, #232]	; 16560 <fputs@plt+0x4f58>
   16474:	ldrb	r3, [r3]
   16478:	cmp	r3, #49	; 0x31
   1647c:	moveq	r6, #1
   16480:	movne	r6, #0
   16484:	beq	16504 <fputs@plt+0x4efc>
   16488:	ldr	r0, [r4, #184]	; 0xb8
   1648c:	cmp	r0, #0
   16490:	bne	164ac <fputs@plt+0x4ea4>
   16494:	ldr	r3, [r4, #372]	; 0x174
   16498:	cmp	r3, #0
   1649c:	bne	164b0 <fputs@plt+0x4ea8>
   164a0:	strb	r6, [r4, #388]	; 0x184
   164a4:	add	sp, sp, #8
   164a8:	pop	{r4, r5, r6, pc}
   164ac:	bl	11458 <rb_close@plt>
   164b0:	ldr	r0, [r4, #372]	; 0x174
   164b4:	cmp	r0, #0
   164b8:	beq	164c0 <fputs@plt+0x4eb8>
   164bc:	bl	11458 <rb_close@plt>
   164c0:	ldr	r5, [pc, #156]	; 16564 <fputs@plt+0x4f5c>
   164c4:	mov	r3, #0
   164c8:	mov	r1, sp
   164cc:	str	r3, [r4, #184]	; 0xb8
   164d0:	str	r3, [r4, #372]	; 0x174
   164d4:	ldr	r0, [r5]
   164d8:	bl	11404 <rb_dictionary_foreach_start@plt>
   164dc:	mov	r1, sp
   164e0:	ldr	r0, [r5]
   164e4:	bl	11320 <rb_dictionary_foreach_cur@plt>
   164e8:	cmp	r0, #0
   164ec:	beq	164a0 <fputs@plt+0x4e98>
   164f0:	bl	15d08 <fputs@plt+0x4700>
   164f4:	mov	r1, sp
   164f8:	ldr	r0, [r5]
   164fc:	bl	113bc <rb_dictionary_foreach_next@plt>
   16500:	b	164dc <fputs@plt+0x4ed4>
   16504:	ldrb	r3, [r4]
   16508:	cmp	r3, #0
   1650c:	beq	16530 <fputs@plt+0x4f28>
   16510:	ldrh	r1, [r4, #54]	; 0x36
   16514:	cmp	r1, #0
   16518:	beq	16530 <fputs@plt+0x4f28>
   1651c:	ldr	r3, [r4, #184]	; 0xb8
   16520:	cmp	r3, #0
   16524:	bne	16530 <fputs@plt+0x4f28>
   16528:	mov	r0, r4
   1652c:	bl	1615c <fputs@plt+0x4b54>
   16530:	ldrb	r3, [r4, #188]	; 0xbc
   16534:	cmp	r3, #0
   16538:	beq	164a0 <fputs@plt+0x4e98>
   1653c:	ldrh	r1, [r4, #242]	; 0xf2
   16540:	cmp	r1, #0
   16544:	beq	164a0 <fputs@plt+0x4e98>
   16548:	ldr	r3, [r4, #372]	; 0x174
   1654c:	cmp	r3, #0
   16550:	bne	164a0 <fputs@plt+0x4e98>
   16554:	ldr	r0, [pc, #12]	; 16568 <fputs@plt+0x4f60>
   16558:	bl	1615c <fputs@plt+0x4b54>
   1655c:	b	164a0 <fputs@plt+0x4e98>
   16560:	andeq	sp, r2, ip, ror #31
   16564:	andeq	lr, r2, r8, ror r1
   16568:	andeq	lr, r2, r8, lsr #1
   1656c:	cmp	r0, #0
   16570:	push	{r4, lr}
   16574:	bne	1658c <fputs@plt+0x4f84>
   16578:	ldr	r3, [pc, #100]	; 165e4 <fputs@plt+0x4fdc>
   1657c:	mov	r2, #235	; 0xeb
   16580:	ldr	r1, [pc, #96]	; 165e8 <fputs@plt+0x4fe0>
   16584:	ldr	r0, [pc, #96]	; 165ec <fputs@plt+0x4fe4>
   16588:	bl	11398 <__assert_fail@plt>
   1658c:	cmp	r1, #0
   16590:	bne	165a8 <fputs@plt+0x4fa0>
   16594:	ldr	r3, [pc, #72]	; 165e4 <fputs@plt+0x4fdc>
   16598:	mov	r2, #236	; 0xec
   1659c:	ldr	r1, [pc, #68]	; 165e8 <fputs@plt+0x4fe0>
   165a0:	ldr	r0, [pc, #72]	; 165f0 <fputs@plt+0x4fe8>
   165a4:	b	16588 <fputs@plt+0x4f80>
   165a8:	ldrd	r2, [r0, #4]
   165ac:	cmp	r3, #0
   165b0:	strne	r2, [r3, #4]
   165b4:	streq	r2, [r1, #4]
   165b8:	ldr	r2, [r0, #4]
   165bc:	cmp	r2, #0
   165c0:	strne	r3, [r2, #8]
   165c4:	streq	r3, [r1]
   165c8:	mov	r3, #0
   165cc:	str	r3, [r0, #4]
   165d0:	str	r3, [r0, #8]
   165d4:	ldr	r3, [r1, #8]
   165d8:	sub	r3, r3, #1
   165dc:	str	r3, [r1, #8]
   165e0:	pop	{r4, pc}
   165e4:	andeq	r7, r1, r3, lsr #26
   165e8:	andeq	r7, r1, r2, lsr r4
   165ec:	andeq	r7, r1, lr, asr #8
   165f0:	ldrdeq	r7, [r1], -r4
   165f4:	ldr	r3, [pc, #152]	; 16694 <fputs@plt+0x508c>
   165f8:	cmp	r1, #0
   165fc:	push	{r4, r5, r6, lr}
   16600:	mov	r4, r2
   16604:	ldr	r0, [r2]
   16608:	ldr	r2, [r3, #12]
   1660c:	ldr	r3, [r0, #464]	; 0x1d0
   16610:	add	r3, r3, r2, lsl #4
   16614:	ldr	r5, [r3, #8]
   16618:	bne	16644 <fputs@plt+0x503c>
   1661c:	ldr	r3, [pc, #116]	; 16698 <fputs@plt+0x5090>
   16620:	ldrb	r2, [r3, #388]	; 0x184
   16624:	cmp	r2, #0
   16628:	beq	16644 <fputs@plt+0x503c>
   1662c:	ldrh	r1, [r0, #248]	; 0xf8
   16630:	ldr	r2, [r4, #8]
   16634:	cmp	r1, #2
   16638:	beq	16664 <fputs@plt+0x505c>
   1663c:	cmp	r1, #10
   16640:	beq	16680 <fputs@plt+0x5078>
   16644:	ldr	r0, [r4, #4]
   16648:	bl	11458 <rb_close@plt>
   1664c:	add	r0, r4, #16
   16650:	mov	r1, r5
   16654:	bl	1656c <fputs@plt+0x4f64>
   16658:	mov	r0, r4
   1665c:	pop	{r4, r5, r6, lr}
   16660:	b	15cfc <fputs@plt+0x46f4>
   16664:	ldr	r3, [r3, #184]	; 0xb8
   16668:	cmp	r3, #0
   1666c:	beq	16644 <fputs@plt+0x503c>
   16670:	mov	r0, r4
   16674:	ldr	r3, [r2, #24]
   16678:	blx	r3
   1667c:	b	16644 <fputs@plt+0x503c>
   16680:	ldrb	r1, [r2, #23]
   16684:	cmp	r1, #0
   16688:	beq	16644 <fputs@plt+0x503c>
   1668c:	ldr	r3, [r3, #372]	; 0x174
   16690:	b	16668 <fputs@plt+0x5060>
   16694:	andeq	r9, r2, r4, lsr #29
   16698:	andeq	sp, r2, ip, ror #31
   1669c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   166a0:	ldr	r4, [pc, #124]	; 16724 <fputs@plt+0x511c>
   166a4:	ldr	r5, [r4, #376]	; 0x178
   166a8:	cmp	r5, #0
   166ac:	addne	r7, r4, #376	; 0x178
   166b0:	ldrne	r6, [r5, #8]
   166b4:	bne	166e8 <fputs@plt+0x50e0>
   166b8:	mov	r1, sp
   166bc:	ldr	r5, [pc, #100]	; 16728 <fputs@plt+0x5120>
   166c0:	ldr	r0, [r5]
   166c4:	bl	11404 <rb_dictionary_foreach_start@plt>
   166c8:	mov	r1, sp
   166cc:	ldr	r0, [r5]
   166d0:	bl	11320 <rb_dictionary_foreach_cur@plt>
   166d4:	subs	r3, r0, #0
   166d8:	bne	16710 <fputs@plt+0x5108>
   166dc:	strb	r3, [r4, #388]	; 0x184
   166e0:	add	sp, sp, #12
   166e4:	pop	{r4, r5, r6, r7, pc}
   166e8:	ldr	r0, [r5]
   166ec:	bl	15cfc <fputs@plt+0x46f4>
   166f0:	mov	r1, r7
   166f4:	mov	r0, r5
   166f8:	bl	1656c <fputs@plt+0x4f64>
   166fc:	cmp	r6, #0
   16700:	beq	166b8 <fputs@plt+0x50b0>
   16704:	mov	r5, r6
   16708:	ldr	r6, [r6, #8]
   1670c:	b	166e8 <fputs@plt+0x50e0>
   16710:	bl	15d08 <fputs@plt+0x4700>
   16714:	mov	r1, sp
   16718:	ldr	r0, [r5]
   1671c:	bl	113bc <rb_dictionary_foreach_next@plt>
   16720:	b	166c8 <fputs@plt+0x50c0>
   16724:	andeq	sp, r2, ip, ror #31
   16728:	andeq	lr, r2, r8, ror r1
   1672c:	cmp	r0, #0
   16730:	push	{r4, lr}
   16734:	bne	1674c <fputs@plt+0x5144>
   16738:	ldr	r3, [pc, #100]	; 167a4 <fputs@plt+0x519c>
   1673c:	mov	r2, #143	; 0x8f
   16740:	ldr	r1, [pc, #96]	; 167a8 <fputs@plt+0x51a0>
   16744:	ldr	r0, [pc, #96]	; 167ac <fputs@plt+0x51a4>
   16748:	bl	11398 <__assert_fail@plt>
   1674c:	cmp	r2, #0
   16750:	bne	16768 <fputs@plt+0x5160>
   16754:	ldr	r3, [pc, #72]	; 167a4 <fputs@plt+0x519c>
   16758:	mov	r2, #145	; 0x91
   1675c:	ldr	r1, [pc, #68]	; 167a8 <fputs@plt+0x51a0>
   16760:	ldr	r0, [pc, #72]	; 167b0 <fputs@plt+0x51a8>
   16764:	b	16748 <fputs@plt+0x5140>
   16768:	mov	r3, #0
   1676c:	stm	r1, {r0, r3}
   16770:	ldr	r3, [r2]
   16774:	cmp	r3, #0
   16778:	str	r3, [r1, #8]
   1677c:	strne	r1, [r3, #4]
   16780:	bne	16790 <fputs@plt+0x5188>
   16784:	ldr	r3, [r2, #4]
   16788:	cmp	r3, #0
   1678c:	streq	r1, [r2, #4]
   16790:	ldr	r3, [r2, #8]
   16794:	str	r1, [r2]
   16798:	add	r3, r3, #1
   1679c:	str	r3, [r2, #8]
   167a0:	pop	{r4, pc}
   167a4:	andeq	r7, r1, r2, lsr sp
   167a8:	andeq	r7, r1, r2, lsr r4
   167ac:	andeq	r7, r1, r8, asr r4
   167b0:	ldrdeq	r7, [r1], -r4
   167b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   167b8:	mov	r8, r0
   167bc:	sub	sp, sp, #272	; 0x110
   167c0:	mov	r5, r1
   167c4:	ldr	r6, [pc, #328]	; 16914 <fputs@plt+0x530c>
   167c8:	ldr	r3, [r0, #464]	; 0x1d0
   167cc:	mov	r0, #28
   167d0:	ldr	r2, [r6, #12]
   167d4:	add	r3, r3, r2, lsl #4
   167d8:	ldr	r9, [r3, #8]
   167dc:	bl	15eb4 <fputs@plt+0x48ac>
   167e0:	ldrh	sl, [r8, #248]	; 0xf8
   167e4:	mov	r3, #1
   167e8:	mov	r4, r0
   167ec:	str	r3, [sp, #12]
   167f0:	cmp	sl, #10
   167f4:	ldrne	r7, [pc, #284]	; 16918 <fputs@plt+0x5310>
   167f8:	bne	16818 <fputs@plt+0x5210>
   167fc:	ldr	r3, [r5, #16]
   16800:	cmp	r3, #1
   16804:	ldrne	r7, [pc, #272]	; 1691c <fputs@plt+0x5314>
   16808:	bne	16818 <fputs@plt+0x5210>
   1680c:	bl	15cfc <fputs@plt+0x46f4>
   16810:	add	sp, sp, #272	; 0x110
   16814:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16818:	ldr	r3, [r7, #184]	; 0xb8
   1681c:	cmp	r3, #0
   16820:	bne	1682c <fputs@plt+0x5224>
   16824:	mov	r0, r4
   16828:	b	1680c <fputs@plt+0x5204>
   1682c:	mov	r2, #128	; 0x80
   16830:	add	r1, r8, #248	; 0xf8
   16834:	add	r0, sp, #16
   16838:	bl	11440 <memcpy@plt>
   1683c:	mov	r2, #128	; 0x80
   16840:	add	r1, r7, #56	; 0x38
   16844:	add	r0, sp, #144	; 0x90
   16848:	bl	11440 <memcpy@plt>
   1684c:	mov	r3, r5
   16850:	mov	r2, #0
   16854:	str	r8, [r4]
   16858:	mov	r1, #1
   1685c:	mov	r0, sl
   16860:	str	r5, [r4, #8]
   16864:	str	r7, [r4, #12]
   16868:	bl	112e4 <rb_socket@plt>
   1686c:	cmp	r0, #0
   16870:	str	r0, [r4, #4]
   16874:	bne	1689c <fputs@plt+0x5294>
   16878:	bl	115f0 <__errno_location@plt>
   1687c:	ldr	r0, [r0]
   16880:	bl	11230 <strerror@plt>
   16884:	mov	r3, r0
   16888:	mov	r2, r5
   1688c:	ldr	r1, [pc, #140]	; 16920 <fputs@plt+0x5318>
   16890:	mov	r0, #87	; 0x57
   16894:	bl	12080 <fputs@plt+0xa78>
   16898:	b	16824 <fputs@plt+0x521c>
   1689c:	bl	112c0 <rb_get_fd@plt>
   168a0:	mov	r3, #4
   168a4:	mov	r2, #1
   168a8:	mov	r1, #6
   168ac:	str	r3, [sp]
   168b0:	add	r3, sp, #12
   168b4:	bl	115c0 <setsockopt@plt>
   168b8:	mov	r3, #0
   168bc:	mov	r2, r9
   168c0:	add	r1, r4, #16
   168c4:	mov	r0, r4
   168c8:	strh	r3, [sp, #146]	; 0x92
   168cc:	ldrh	r3, [r5, #20]
   168d0:	rev16	r3, r3
   168d4:	strh	r3, [sp, #18]
   168d8:	bl	1672c <fputs@plt+0x5124>
   168dc:	ldrb	r2, [r5, #22]
   168e0:	add	r1, sp, #16
   168e4:	str	r4, [sp]
   168e8:	ldr	r3, [r6, #60]	; 0x3c
   168ec:	ldr	r0, [r4, #4]
   168f0:	cmp	r2, #0
   168f4:	add	r2, sp, #144	; 0x90
   168f8:	str	r3, [sp, #4]
   168fc:	ldr	r3, [pc, #32]	; 16924 <fputs@plt+0x531c>
   16900:	bne	1690c <fputs@plt+0x5304>
   16904:	bl	11284 <rb_connect_tcp@plt>
   16908:	b	16810 <fputs@plt+0x5208>
   1690c:	bl	11278 <rb_connect_tcp_ssl@plt>
   16910:	b	16810 <fputs@plt+0x5208>
   16914:	andeq	r9, r2, r4, lsr #29
   16918:	andeq	sp, r2, ip, ror #31
   1691c:	andeq	lr, r2, r8, lsr #1
   16920:	muleq	r1, lr, lr
   16924:	strdeq	r6, [r1], -r4
   16928:	push	{r4, lr}
   1692c:	mov	r4, r0
   16930:	ldr	r1, [pc, #100]	; 1699c <fputs@plt+0x5394>
   16934:	bl	1132c <strcasecmp@plt>
   16938:	cmp	r0, #0
   1693c:	beq	16984 <fputs@plt+0x537c>
   16940:	ldr	r1, [pc, #88]	; 169a0 <fputs@plt+0x5398>
   16944:	mov	r0, r4
   16948:	bl	1132c <strcasecmp@plt>
   1694c:	cmp	r0, #0
   16950:	beq	1698c <fputs@plt+0x5384>
   16954:	ldr	r1, [pc, #72]	; 169a4 <fputs@plt+0x539c>
   16958:	mov	r0, r4
   1695c:	bl	1132c <strcasecmp@plt>
   16960:	cmp	r0, #0
   16964:	beq	16994 <fputs@plt+0x538c>
   16968:	ldr	r1, [pc, #56]	; 169a8 <fputs@plt+0x53a0>
   1696c:	mov	r0, r4
   16970:	bl	1132c <strcasecmp@plt>
   16974:	cmp	r0, #0
   16978:	moveq	r0, #4
   1697c:	movne	r0, #0
   16980:	pop	{r4, pc}
   16984:	mov	r0, #1
   16988:	pop	{r4, pc}
   1698c:	mov	r0, #2
   16990:	pop	{r4, pc}
   16994:	mov	r0, #3
   16998:	pop	{r4, pc}
   1699c:	andeq	r7, r1, lr, asr #29
   169a0:	ldrdeq	r7, [r1], -r5
   169a4:	ldrdeq	r7, [r1], -ip
   169a8:	andeq	r7, r1, r8, ror #29
   169ac:	ldr	r3, [r0, #12]
   169b0:	mov	r1, #128	; 0x80
   169b4:	push	{r4, r5, lr}
   169b8:	sub	sp, sp, #140	; 0x8c
   169bc:	mov	r4, r0
   169c0:	add	r0, sp, #8
   169c4:	ldrh	r2, [r3, #54]	; 0x36
   169c8:	str	r2, [sp]
   169cc:	ldr	r2, [pc, #92]	; 16a30 <fputs@plt+0x5428>
   169d0:	bl	11590 <snprintf@plt>
   169d4:	add	r0, sp, #8
   169d8:	bl	1141c <strlen@plt>
   169dc:	mov	r2, r0
   169e0:	add	r1, sp, #8
   169e4:	ldr	r0, [r4, #4]
   169e8:	bl	1138c <rb_write@plt>
   169ec:	cmp	r0, #0
   169f0:	ble	16a28 <fputs@plt+0x5420>
   169f4:	ldr	r5, [r4, #8]
   169f8:	mov	r0, r5
   169fc:	bl	1141c <strlen@plt>
   16a00:	add	r2, r0, #1
   16a04:	mov	r1, r5
   16a08:	ldr	r0, [r4, #4]
   16a0c:	bl	1138c <rb_write@plt>
   16a10:	cmp	r0, #0
   16a14:	ble	16a28 <fputs@plt+0x5420>
   16a18:	mov	r2, #2
   16a1c:	ldr	r1, [pc, #16]	; 16a34 <fputs@plt+0x542c>
   16a20:	ldr	r0, [r4, #4]
   16a24:	bl	1138c <rb_write@plt>
   16a28:	add	sp, sp, #140	; 0x8c
   16a2c:	pop	{r4, r5, pc}
   16a30:	strdeq	r7, [r1], -r5
   16a34:	andeq	r7, r1, lr, lsl #30
   16a38:	ldr	r2, [pc, #204]	; 16b0c <fputs@plt+0x5504>
   16a3c:	mov	r3, r0
   16a40:	push	{r4, r5, lr}
   16a44:	sub	sp, sp, #36	; 0x24
   16a48:	add	r1, sp, #4
   16a4c:	ldr	ip, [r0]
   16a50:	ldr	r0, [r2]
   16a54:	ldrh	r2, [r2, #4]
   16a58:	str	r0, [sp, #4]
   16a5c:	strh	r2, [r1, #4]
   16a60:	ldrh	r2, [ip, #248]	; 0xf8
   16a64:	cmp	r2, #2
   16a68:	beq	16a7c <fputs@plt+0x5474>
   16a6c:	cmp	r2, #10
   16a70:	beq	16ad4 <fputs@plt+0x54cc>
   16a74:	add	sp, sp, #36	; 0x24
   16a78:	pop	{r4, r5, pc}
   16a7c:	mov	r2, #1
   16a80:	strb	r2, [sp, #10]
   16a84:	ldr	r2, [r3, #12]
   16a88:	ldr	r0, [r2, #60]	; 0x3c
   16a8c:	ldrh	r2, [r2, #58]	; 0x3a
   16a90:	str	r0, [sp, #11]
   16a94:	strh	r2, [sp, #15]
   16a98:	add	r2, sp, #17
   16a9c:	sub	r2, r1, r2
   16aa0:	ldr	r0, [r3, #4]
   16aa4:	mov	r4, r3
   16aa8:	bl	1138c <rb_write@plt>
   16aac:	cmp	r0, #0
   16ab0:	ble	16a74 <fputs@plt+0x546c>
   16ab4:	ldr	r5, [r4, #8]
   16ab8:	mov	r0, r5
   16abc:	bl	1141c <strlen@plt>
   16ac0:	add	r2, r0, #1
   16ac4:	mov	r1, r5
   16ac8:	ldr	r0, [r4, #4]
   16acc:	bl	1138c <rb_write@plt>
   16ad0:	b	16a74 <fputs@plt+0x546c>
   16ad4:	mov	r2, #4
   16ad8:	add	ip, sp, #11
   16adc:	strb	r2, [sp, #10]
   16ae0:	ldr	r2, [r3, #12]
   16ae4:	add	r0, r2, #64	; 0x40
   16ae8:	add	lr, r2, #80	; 0x50
   16aec:	ldr	r4, [r0], #4
   16af0:	cmp	r0, lr
   16af4:	str	r4, [ip], #4
   16af8:	bne	16aec <fputs@plt+0x54e4>
   16afc:	ldrh	r2, [r2, #58]	; 0x3a
   16b00:	strh	r2, [sp, #27]
   16b04:	add	r2, sp, #29
   16b08:	b	16a9c <fputs@plt+0x5494>
   16b0c:	andeq	r7, r1, lr, lsr sp
   16b10:	push	{r4, r5, lr}
   16b14:	mov	r3, #260	; 0x104
   16b18:	sub	sp, sp, #20
   16b1c:	mov	r4, r0
   16b20:	add	r1, sp, #4
   16b24:	strh	r3, [sp, #4]
   16b28:	ldr	r3, [r0, #12]
   16b2c:	ldr	r0, [r0, #4]
   16b30:	ldrh	r2, [r3, #58]	; 0x3a
   16b34:	ldr	r3, [r3, #60]	; 0x3c
   16b38:	strh	r2, [sp, #6]
   16b3c:	mov	r2, #9
   16b40:	str	r3, [sp, #8]
   16b44:	mov	r3, #0
   16b48:	strb	r3, [sp, #12]
   16b4c:	bl	1138c <rb_write@plt>
   16b50:	cmp	r0, #0
   16b54:	blt	16b74 <fputs@plt+0x556c>
   16b58:	ldr	r5, [r4, #8]
   16b5c:	mov	r0, r5
   16b60:	bl	1141c <strlen@plt>
   16b64:	add	r2, r0, #1
   16b68:	mov	r1, r5
   16b6c:	ldr	r0, [r4, #4]
   16b70:	bl	1138c <rb_write@plt>
   16b74:	add	sp, sp, #20
   16b78:	pop	{r4, r5, pc}
   16b7c:	push	{r4, r5, r6, r7, r8, lr}
   16b80:	mov	r4, r0
   16b84:	ldr	r1, [pc, #116]	; 16c00 <fputs@plt+0x55f8>
   16b88:	bl	15e50 <fputs@plt+0x4848>
   16b8c:	cmp	r0, #0
   16b90:	popeq	{r4, r5, r6, r7, r8, pc}
   16b94:	ldr	r2, [pc, #104]	; 16c04 <fputs@plt+0x55fc>
   16b98:	ldr	r3, [r4, #464]	; 0x1d0
   16b9c:	ldr	r5, [r2, #12]
   16ba0:	ldr	r6, [r2, #60]	; 0x3c
   16ba4:	lsl	r5, r5, #4
   16ba8:	add	r3, r3, r5
   16bac:	ldr	r7, [r3, #8]
   16bb0:	bl	11428 <rb_current_time@plt>
   16bb4:	ldr	r3, [r4, #464]	; 0x1d0
   16bb8:	add	r0, r6, r0
   16bbc:	add	r5, r3, r5
   16bc0:	mov	r3, #1
   16bc4:	str	r0, [r5, #4]
   16bc8:	strb	r3, [r7, #12]
   16bcc:	ldr	r3, [pc, #52]	; 16c08 <fputs@plt+0x5600>
   16bd0:	ldr	r5, [r3, #376]	; 0x178
   16bd4:	cmp	r5, #0
   16bd8:	bne	16bec <fputs@plt+0x55e4>
   16bdc:	ldr	r1, [pc, #40]	; 16c0c <fputs@plt+0x5604>
   16be0:	ldr	r0, [r4]
   16be4:	pop	{r4, r5, r6, r7, r8, lr}
   16be8:	b	12028 <fputs@plt+0xa20>
   16bec:	mov	r0, r4
   16bf0:	ldr	r1, [r5]
   16bf4:	bl	167b4 <fputs@plt+0x51ac>
   16bf8:	ldr	r5, [r5, #8]
   16bfc:	b	16bd4 <fputs@plt+0x55cc>
   16c00:	muleq	r1, r2, fp
   16c04:	andeq	r9, r2, r4, lsr #29
   16c08:	andeq	sp, r2, ip, ror #31
   16c0c:	andeq	r7, r1, r1, lsl pc
   16c10:	ldr	r2, [pc, #68]	; 16c5c <fputs@plt+0x5654>
   16c14:	ldr	r1, [r2, #12]
   16c18:	ldr	r2, [r0, #464]	; 0x1d0
   16c1c:	add	r2, r2, r1, lsl #4
   16c20:	ldr	r2, [r2, #8]
   16c24:	cmp	r2, #0
   16c28:	bxeq	lr
   16c2c:	ldrb	r2, [r2, #12]
   16c30:	cmp	r2, #0
   16c34:	bxne	lr
   16c38:	push	{r4, lr}
   16c3c:	mov	r4, r0
   16c40:	ldr	r1, [pc, #24]	; 16c60 <fputs@plt+0x5658>
   16c44:	bl	15e50 <fputs@plt+0x4848>
   16c48:	cmp	r0, #0
   16c4c:	popeq	{r4, pc}
   16c50:	mov	r0, r4
   16c54:	pop	{r4, lr}
   16c58:	b	16b7c <fputs@plt+0x5574>
   16c5c:	andeq	r9, r2, r4, lsr #29
   16c60:	andeq	r7, r1, r8, lsr #20
   16c64:	ldr	r3, [pc, #120]	; 16ce4 <fputs@plt+0x56dc>
   16c68:	push	{r4, r5, r6, lr}
   16c6c:	mov	r4, r0
   16c70:	ldr	r5, [r3, #12]
   16c74:	ldr	r3, [pc, #108]	; 16ce8 <fputs@plt+0x56e0>
   16c78:	ldrb	r2, [r3, #388]	; 0x184
   16c7c:	cmp	r2, #0
   16c80:	beq	16c90 <fputs@plt+0x5688>
   16c84:	ldr	r3, [r3, #384]	; 0x180
   16c88:	cmp	r3, #0
   16c8c:	bne	16ca4 <fputs@plt+0x569c>
   16c90:	mov	r1, r5
   16c94:	mov	r0, r4
   16c98:	bl	12820 <fputs@plt+0x1218>
   16c9c:	mov	r0, #1
   16ca0:	pop	{r4, r5, r6, pc}
   16ca4:	ldr	r2, [r4, #460]	; 0x1cc
   16ca8:	mov	r0, #16
   16cac:	add	r2, r2, #1
   16cb0:	str	r2, [r4, #460]	; 0x1cc
   16cb4:	bl	15eb4 <fputs@plt+0x48ac>
   16cb8:	ldr	r3, [r4, #464]	; 0x1d0
   16cbc:	ldr	r1, [pc, #40]	; 16cec <fputs@plt+0x56e4>
   16cc0:	add	r3, r3, r5, lsl #4
   16cc4:	str	r0, [r3, #8]
   16cc8:	mov	r0, r4
   16ccc:	bl	15e50 <fputs@plt+0x4848>
   16cd0:	cmp	r0, #0
   16cd4:	beq	16c9c <fputs@plt+0x5694>
   16cd8:	mov	r0, r4
   16cdc:	bl	16b7c <fputs@plt+0x5574>
   16ce0:	b	16c9c <fputs@plt+0x5694>
   16ce4:	andeq	r9, r2, r4, lsr #29
   16ce8:	andeq	sp, r2, ip, ror #31
   16cec:	andeq	r7, r1, r8, lsr #20
   16cf0:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   16cf4:	mov	r5, r2
   16cf8:	ldr	r4, [r2]
   16cfc:	mov	r0, r4
   16d00:	bl	16928 <fputs@plt+0x5320>
   16d04:	ldr	r5, [r5, #4]
   16d08:	mov	r6, r0
   16d0c:	mov	r0, r5
   16d10:	bl	11488 <atoi@plt>
   16d14:	sub	r1, r0, #1
   16d18:	movw	r2, #65534	; 0xfffe
   16d1c:	cmp	r1, r2
   16d20:	bls	16d40 <fputs@plt+0x5738>
   16d24:	ldr	r1, [pc, #364]	; 16e98 <fputs@plt+0x5890>
   16d28:	mov	r3, r5
   16d2c:	mov	r2, r4
   16d30:	mov	r0, #67	; 0x43
   16d34:	bl	12080 <fputs@plt+0xa78>
   16d38:	mov	r0, #3
   16d3c:	bl	115e4 <exit@plt>
   16d40:	cmp	r6, #0
   16d44:	mov	r3, r0
   16d48:	moveq	r2, r4
   16d4c:	ldreq	r1, [pc, #328]	; 16e9c <fputs@plt+0x5894>
   16d50:	beq	16d30 <fputs@plt+0x5728>
   16d54:	ldr	r7, [pc, #324]	; 16ea0 <fputs@plt+0x5898>
   16d58:	uxth	r1, r0
   16d5c:	ldr	r2, [r7, #376]	; 0x178
   16d60:	cmp	r2, #0
   16d64:	moveq	r2, r4
   16d68:	ldreq	r1, [pc, #308]	; 16ea4 <fputs@plt+0x589c>
   16d6c:	beq	16d30 <fputs@plt+0x5728>
   16d70:	ldr	r5, [r2]
   16d74:	ldr	r0, [r5, #16]
   16d78:	cmp	r6, r0
   16d7c:	bne	16d8c <fputs@plt+0x5784>
   16d80:	ldrh	r0, [r5, #20]
   16d84:	cmp	r0, r1
   16d88:	beq	16e80 <fputs@plt+0x5878>
   16d8c:	ldr	r2, [r2, #8]
   16d90:	b	16d60 <fputs@plt+0x5758>
   16d94:	ldr	r2, [r8, #12]
   16d98:	ldr	r3, [r4, #464]	; 0x1d0
   16d9c:	add	r3, r3, r2, lsl #4
   16da0:	ldr	r9, [r3, #8]
   16da4:	cmp	r9, #0
   16da8:	beq	16e30 <fputs@plt+0x5828>
   16dac:	ldr	r3, [r4, #460]	; 0x1cc
   16db0:	add	r3, r3, #1
   16db4:	str	r3, [r4, #460]	; 0x1cc
   16db8:	ldr	r3, [r9]
   16dbc:	cmp	r3, #0
   16dc0:	beq	16e14 <fputs@plt+0x580c>
   16dc4:	ldr	sl, [r3]
   16dc8:	ldrh	r1, [r5, #20]
   16dcc:	ldr	r2, [sl, #8]
   16dd0:	ldrh	r0, [r2, #20]
   16dd4:	cmp	r0, r1
   16dd8:	bne	16e78 <fputs@plt+0x5870>
   16ddc:	ldr	r1, [r2, #16]
   16de0:	ldr	r2, [r5, #16]
   16de4:	cmp	r1, r2
   16de8:	bne	16e78 <fputs@plt+0x5870>
   16dec:	mov	r1, r9
   16df0:	add	r0, sl, #16
   16df4:	bl	1656c <fputs@plt+0x4f64>
   16df8:	mov	r0, sl
   16dfc:	bl	15cfc <fputs@plt+0x46f4>
   16e00:	ldr	r3, [r9, #8]
   16e04:	cmp	r3, #0
   16e08:	bne	16e14 <fputs@plt+0x580c>
   16e0c:	mov	r0, r4
   16e10:	bl	15d08 <fputs@plt+0x4700>
   16e14:	ldr	r3, [r4, #460]	; 0x1cc
   16e18:	sub	r3, r3, #1
   16e1c:	cmp	r3, #0
   16e20:	str	r3, [r4, #460]	; 0x1cc
   16e24:	bne	16e30 <fputs@plt+0x5828>
   16e28:	mov	r0, r4
   16e2c:	bl	124b8 <fputs@plt+0xeb0>
   16e30:	mov	r1, sp
   16e34:	ldr	r0, [r6]
   16e38:	bl	113bc <rb_dictionary_foreach_next@plt>
   16e3c:	mov	r1, sp
   16e40:	ldr	r0, [r6]
   16e44:	bl	11320 <rb_dictionary_foreach_cur@plt>
   16e48:	subs	r4, r0, #0
   16e4c:	bne	16d94 <fputs@plt+0x578c>
   16e50:	ldr	r1, [pc, #80]	; 16ea8 <fputs@plt+0x58a0>
   16e54:	add	r0, r5, #28
   16e58:	bl	1656c <fputs@plt+0x4f64>
   16e5c:	mov	r0, r5
   16e60:	bl	15cfc <fputs@plt+0x46f4>
   16e64:	ldr	r3, [r7, #384]	; 0x180
   16e68:	cmp	r3, #0
   16e6c:	strbeq	r3, [r7, #388]	; 0x184
   16e70:	add	sp, sp, #8
   16e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e78:	ldr	r3, [r3, #8]
   16e7c:	b	16dbc <fputs@plt+0x57b4>
   16e80:	ldr	r6, [pc, #36]	; 16eac <fputs@plt+0x58a4>
   16e84:	mov	r1, sp
   16e88:	ldr	r8, [pc, #32]	; 16eb0 <fputs@plt+0x58a8>
   16e8c:	ldr	r0, [r6]
   16e90:	bl	11404 <rb_dictionary_foreach_start@plt>
   16e94:	b	16e3c <fputs@plt+0x5834>
   16e98:	andeq	r7, r1, r2, lsr pc
   16e9c:	andeq	r7, r1, r1, ror #30
   16ea0:	andeq	sp, r2, ip, ror #31
   16ea4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   16ea8:	andeq	lr, r2, r4, ror #2
   16eac:	andeq	lr, r2, r8, ror r1
   16eb0:	andeq	r9, r2, r4, lsr #29
   16eb4:	push	{r4, r5, r6, r7, r8, lr}
   16eb8:	mov	r6, r2
   16ebc:	ldr	r0, [r2, #4]
   16ec0:	bl	11488 <atoi@plt>
   16ec4:	mov	r5, r0
   16ec8:	mov	r0, #40	; 0x28
   16ecc:	bl	15eb4 <fputs@plt+0x48ac>
   16ed0:	sub	r2, r5, #1
   16ed4:	movw	r3, #65534	; 0xfffe
   16ed8:	cmp	r2, r3
   16edc:	ldrhi	r1, [pc, #328]	; 1702c <fputs@plt+0x5a24>
   16ee0:	ldrdhi	r2, [r6]
   16ee4:	bhi	16fdc <fputs@plt+0x59d4>
   16ee8:	mov	r4, r0
   16eec:	ldr	r7, [r6]
   16ef0:	strh	r5, [r4, #20]
   16ef4:	mov	r0, r7
   16ef8:	bl	16928 <fputs@plt+0x5320>
   16efc:	str	r0, [r4, #16]
   16f00:	sub	r0, r0, #1
   16f04:	mov	r3, r5
   16f08:	cmp	r0, #3
   16f0c:	ldrls	pc, [pc, r0, lsl #2]
   16f10:	b	16fd4 <fputs@plt+0x59cc>
   16f14:	andeq	r6, r1, r4, lsr #30
   16f18:	andeq	r6, r1, r0, ror pc
   16f1c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   16f20:			; <UNDEFINED> instruction: 0x00016fb0
   16f24:	ldr	r2, [pc, #260]	; 17030 <fputs@plt+0x5a28>
   16f28:	mov	r1, #16
   16f2c:	mov	r0, r4
   16f30:	bl	11590 <snprintf@plt>
   16f34:	mov	r3, #0
   16f38:	strb	r3, [r4, #22]
   16f3c:	ldr	r3, [pc, #240]	; 17034 <fputs@plt+0x5a2c>
   16f40:	str	r3, [r4, #24]
   16f44:	ldr	r2, [pc, #236]	; 17038 <fputs@plt+0x5a30>
   16f48:	ldrh	r3, [r4, #20]
   16f4c:	ldr	r0, [r4, #16]
   16f50:	ldr	r2, [r2, #376]	; 0x178
   16f54:	cmp	r2, #0
   16f58:	bne	16fec <fputs@plt+0x59e4>
   16f5c:	add	r1, r4, #28
   16f60:	mov	r0, r4
   16f64:	ldr	r2, [pc, #208]	; 1703c <fputs@plt+0x5a34>
   16f68:	pop	{r4, r5, r6, r7, r8, lr}
   16f6c:	b	1672c <fputs@plt+0x5124>
   16f70:	ldr	r2, [pc, #200]	; 17040 <fputs@plt+0x5a38>
   16f74:	mov	r1, #16
   16f78:	mov	r0, r4
   16f7c:	bl	11590 <snprintf@plt>
   16f80:	mov	r3, #0
   16f84:	strb	r3, [r4, #22]
   16f88:	ldr	r3, [pc, #180]	; 17044 <fputs@plt+0x5a3c>
   16f8c:	b	16f40 <fputs@plt+0x5938>
   16f90:	ldr	r2, [pc, #176]	; 17048 <fputs@plt+0x5a40>
   16f94:	mov	r1, #16
   16f98:	mov	r0, r4
   16f9c:	bl	11590 <snprintf@plt>
   16fa0:	mov	r3, #0
   16fa4:	strb	r3, [r4, #22]
   16fa8:	ldr	r3, [pc, #156]	; 1704c <fputs@plt+0x5a44>
   16fac:	b	16f40 <fputs@plt+0x5938>
   16fb0:	ldr	r2, [pc, #152]	; 17050 <fputs@plt+0x5a48>
   16fb4:	mov	r1, #16
   16fb8:	mov	r0, r4
   16fbc:	bl	11590 <snprintf@plt>
   16fc0:	ldr	r3, [pc, #132]	; 1704c <fputs@plt+0x5a44>
   16fc4:	str	r3, [r4, #24]
   16fc8:	mov	r3, #1
   16fcc:	strb	r3, [r4, #22]
   16fd0:	b	16f44 <fputs@plt+0x593c>
   16fd4:	ldr	r1, [pc, #120]	; 17054 <fputs@plt+0x5a4c>
   16fd8:	mov	r2, r7
   16fdc:	mov	r0, #67	; 0x43
   16fe0:	bl	12080 <fputs@plt+0xa78>
   16fe4:	mov	r0, #3
   16fe8:	bl	115e4 <exit@plt>
   16fec:	ldr	r1, [r2]
   16ff0:	ldr	ip, [r1, #16]
   16ff4:	cmp	r0, ip
   16ff8:	bne	17008 <fputs@plt+0x5a00>
   16ffc:	ldrh	r1, [r1, #20]
   17000:	cmp	r1, r3
   17004:	beq	17010 <fputs@plt+0x5a08>
   17008:	ldr	r2, [r2, #8]
   1700c:	b	16f54 <fputs@plt+0x594c>
   17010:	mov	r0, #67	; 0x43
   17014:	ldr	r1, [pc, #60]	; 17058 <fputs@plt+0x5a50>
   17018:	ldr	r2, [r6]
   1701c:	bl	12080 <fputs@plt+0xa78>
   17020:	mov	r0, r4
   17024:	pop	{r4, r5, r6, r7, r8, lr}
   17028:	b	15cfc <fputs@plt+0x46f4>
   1702c:	andeq	r7, r1, r7, asr #31
   17030:	andeq	r7, r1, ip, ror #31
   17034:	andeq	r6, r1, r0, lsl fp
   17038:	andeq	sp, r2, ip, ror #31
   1703c:	andeq	lr, r2, r4, ror #2
   17040:	strdeq	r7, [r1], -r7	; <UNPREDICTABLE>
   17044:	andeq	r6, r1, r8, lsr sl
   17048:	andeq	r8, r1, r2
   1704c:	andeq	r6, r1, ip, lsr #19
   17050:	andeq	r8, r1, r2, lsl r0
   17054:	andeq	r8, r1, r3, lsr #32
   17058:	andeq	r8, r1, r1, asr r0
   1705c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17060:	mov	r7, r0
   17064:	ldr	r6, [pc, #72]	; 170b4 <fputs@plt+0x5aac>
   17068:	ldr	r5, [pc, #72]	; 170b8 <fputs@plt+0x5ab0>
   1706c:	add	r6, pc, r6
   17070:	add	r5, pc, r5
   17074:	sub	r6, r6, r5
   17078:	mov	r8, r1
   1707c:	mov	r9, r2
   17080:	bl	11204 <sigemptyset@plt-0x20>
   17084:	asrs	r6, r6, #2
   17088:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1708c:	mov	r4, #0
   17090:	add	r4, r4, #1
   17094:	ldr	r3, [r5], #4
   17098:	mov	r2, r9
   1709c:	mov	r1, r8
   170a0:	mov	r0, r7
   170a4:	blx	r3
   170a8:	cmp	r6, r4
   170ac:	bne	17090 <fputs@plt+0x5a88>
   170b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   170b4:	andeq	r1, r1, r8, ror lr
   170b8:	andeq	r1, r1, r0, ror lr
   170bc:	bx	lr

Disassembly of section .fini:

000170c0 <.fini>:
   170c0:	push	{r3, lr}
   170c4:	pop	{r3, pc}
