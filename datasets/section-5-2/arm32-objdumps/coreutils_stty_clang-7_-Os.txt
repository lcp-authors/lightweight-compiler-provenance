
../repos/coreutils/src/stty:     file format elf32-littlearm


Disassembly of section .init:

000110c8 <.init>:
   110c8:	push	{r3, lr}
   110cc:	bl	1140c <tcgetattr@plt+0x48>
   110d0:	pop	{r3, pc}

Disassembly of section .plt:

000110d4 <calloc@plt-0x14>:
   110d4:	push	{lr}		; (str lr, [sp, #-4]!)
   110d8:	ldr	lr, [pc, #4]	; 110e4 <calloc@plt-0x4>
   110dc:	add	lr, pc, lr
   110e0:	ldr	pc, [lr, #8]!
   110e4:	andeq	r9, r1, ip, lsl pc

000110e8 <calloc@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #102400	; 0x19000
   110f0:	ldr	pc, [ip, #3868]!	; 0xf1c

000110f4 <fputs_unlocked@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #102400	; 0x19000
   110fc:	ldr	pc, [ip, #3860]!	; 0xf14

00011100 <raise@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #102400	; 0x19000
   11108:	ldr	pc, [ip, #3852]!	; 0xf0c

0001110c <strcmp@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #102400	; 0x19000
   11114:	ldr	pc, [ip, #3844]!	; 0xf04

00011118 <strtol@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #102400	; 0x19000
   11120:	ldr	pc, [ip, #3836]!	; 0xefc

00011124 <fflush@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #102400	; 0x19000
   1112c:	ldr	pc, [ip, #3828]!	; 0xef4

00011130 <free@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #102400	; 0x19000
   11138:	ldr	pc, [ip, #3820]!	; 0xeec

0001113c <_exit@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #102400	; 0x19000
   11144:	ldr	pc, [ip, #3812]!	; 0xee4

00011148 <memcpy@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #102400	; 0x19000
   11150:	ldr	pc, [ip, #3804]!	; 0xedc

00011154 <mbsinit@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #102400	; 0x19000
   1115c:	ldr	pc, [ip, #3796]!	; 0xed4

00011160 <memcmp@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #102400	; 0x19000
   11168:	ldr	pc, [ip, #3788]!	; 0xecc

0001116c <dcgettext@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #102400	; 0x19000
   11174:	ldr	pc, [ip, #3780]!	; 0xec4

00011178 <cfgetispeed@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #102400	; 0x19000
   11180:	ldr	pc, [ip, #3772]!	; 0xebc

00011184 <dup2@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #102400	; 0x19000
   1118c:	ldr	pc, [ip, #3764]!	; 0xeb4

00011190 <realloc@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #102400	; 0x19000
   11198:	ldr	pc, [ip, #3756]!	; 0xeac

0001119c <textdomain@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #102400	; 0x19000
   111a4:	ldr	pc, [ip, #3748]!	; 0xea4

000111a8 <iswprint@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #102400	; 0x19000
   111b0:	ldr	pc, [ip, #3740]!	; 0xe9c

000111b4 <cfsetospeed@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #102400	; 0x19000
   111bc:	ldr	pc, [ip, #3732]!	; 0xe94

000111c0 <ioctl@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #102400	; 0x19000
   111c8:	ldr	pc, [ip, #3724]!	; 0xe8c

000111cc <lseek64@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #102400	; 0x19000
   111d4:	ldr	pc, [ip, #3716]!	; 0xe84

000111d8 <__ctype_get_mb_cur_max@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #102400	; 0x19000
   111e0:	ldr	pc, [ip, #3708]!	; 0xe7c

000111e4 <tcsetattr@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #102400	; 0x19000
   111ec:	ldr	pc, [ip, #3700]!	; 0xe74

000111f0 <__fpending@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #102400	; 0x19000
   111f8:	ldr	pc, [ip, #3692]!	; 0xe6c

000111fc <ferror_unlocked@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #102400	; 0x19000
   11204:	ldr	pc, [ip, #3684]!	; 0xe64

00011208 <mbrtowc@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #102400	; 0x19000
   11210:	ldr	pc, [ip, #3676]!	; 0xe5c

00011214 <error@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #102400	; 0x19000
   1121c:	ldr	pc, [ip, #3668]!	; 0xe54

00011220 <open64@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #102400	; 0x19000
   11228:	ldr	pc, [ip, #3660]!	; 0xe4c

0001122c <getenv@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #102400	; 0x19000
   11234:	ldr	pc, [ip, #3652]!	; 0xe44

00011238 <malloc@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #102400	; 0x19000
   11240:	ldr	pc, [ip, #3644]!	; 0xe3c

00011244 <__libc_start_main@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #102400	; 0x19000
   1124c:	ldr	pc, [ip, #3636]!	; 0xe34

00011250 <__freading@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #102400	; 0x19000
   11258:	ldr	pc, [ip, #3628]!	; 0xe2c

0001125c <__gmon_start__@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #102400	; 0x19000
   11264:	ldr	pc, [ip, #3620]!	; 0xe24

00011268 <getopt_long@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #102400	; 0x19000
   11270:	ldr	pc, [ip, #3612]!	; 0xe1c

00011274 <__ctype_b_loc@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #102400	; 0x19000
   1127c:	ldr	pc, [ip, #3604]!	; 0xe14

00011280 <exit@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #102400	; 0x19000
   11288:	ldr	pc, [ip, #3596]!	; 0xe0c

0001128c <strtoul@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #102400	; 0x19000
   11294:	ldr	pc, [ip, #3588]!	; 0xe04

00011298 <strlen@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #102400	; 0x19000
   112a0:	ldr	pc, [ip, #3580]!	; 0xdfc

000112a4 <strchr@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #102400	; 0x19000
   112ac:	ldr	pc, [ip, #3572]!	; 0xdf4

000112b0 <cfsetispeed@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #102400	; 0x19000
   112b8:	ldr	pc, [ip, #3564]!	; 0xdec

000112bc <cfgetospeed@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #102400	; 0x19000
   112c4:	ldr	pc, [ip, #3556]!	; 0xde4

000112c8 <__errno_location@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #102400	; 0x19000
   112d0:	ldr	pc, [ip, #3548]!	; 0xddc

000112d4 <__cxa_atexit@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #102400	; 0x19000
   112dc:	ldr	pc, [ip, #3540]!	; 0xdd4

000112e0 <__vasprintf_chk@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #102400	; 0x19000
   112e8:	ldr	pc, [ip, #3532]!	; 0xdcc

000112ec <memset@plt>:
   112ec:	add	ip, pc, #0, 12
   112f0:	add	ip, ip, #102400	; 0x19000
   112f4:	ldr	pc, [ip, #3524]!	; 0xdc4

000112f8 <__printf_chk@plt>:
   112f8:	add	ip, pc, #0, 12
   112fc:	add	ip, ip, #102400	; 0x19000
   11300:	ldr	pc, [ip, #3516]!	; 0xdbc

00011304 <fileno@plt>:
   11304:	add	ip, pc, #0, 12
   11308:	add	ip, ip, #102400	; 0x19000
   1130c:	ldr	pc, [ip, #3508]!	; 0xdb4

00011310 <strtoumax@plt>:
   11310:	add	ip, pc, #0, 12
   11314:	add	ip, ip, #102400	; 0x19000
   11318:	ldr	pc, [ip, #3500]!	; 0xdac

0001131c <__fprintf_chk@plt>:
   1131c:	add	ip, pc, #0, 12
   11320:	add	ip, ip, #102400	; 0x19000
   11324:	ldr	pc, [ip, #3492]!	; 0xda4

00011328 <fclose@plt>:
   11328:	add	ip, pc, #0, 12
   1132c:	add	ip, ip, #102400	; 0x19000
   11330:	ldr	pc, [ip, #3484]!	; 0xd9c

00011334 <fseeko64@plt>:
   11334:	add	ip, pc, #0, 12
   11338:	add	ip, ip, #102400	; 0x19000
   1133c:	ldr	pc, [ip, #3476]!	; 0xd94

00011340 <fcntl64@plt>:
   11340:	add	ip, pc, #0, 12
   11344:	add	ip, ip, #102400	; 0x19000
   11348:	ldr	pc, [ip, #3468]!	; 0xd8c

0001134c <setlocale@plt>:
   1134c:	add	ip, pc, #0, 12
   11350:	add	ip, ip, #102400	; 0x19000
   11354:	ldr	pc, [ip, #3460]!	; 0xd84

00011358 <strrchr@plt>:
   11358:	add	ip, pc, #0, 12
   1135c:	add	ip, ip, #102400	; 0x19000
   11360:	ldr	pc, [ip, #3452]!	; 0xd7c

00011364 <nl_langinfo@plt>:
   11364:	add	ip, pc, #0, 12
   11368:	add	ip, ip, #102400	; 0x19000
   1136c:	ldr	pc, [ip, #3444]!	; 0xd74

00011370 <bindtextdomain@plt>:
   11370:	add	ip, pc, #0, 12
   11374:	add	ip, ip, #102400	; 0x19000
   11378:	ldr	pc, [ip, #3436]!	; 0xd6c

0001137c <fputs@plt>:
   1137c:	add	ip, pc, #0, 12
   11380:	add	ip, ip, #102400	; 0x19000
   11384:	ldr	pc, [ip, #3428]!	; 0xd64

00011388 <strncmp@plt>:
   11388:	add	ip, pc, #0, 12
   1138c:	add	ip, ip, #102400	; 0x19000
   11390:	ldr	pc, [ip, #3420]!	; 0xd5c

00011394 <abort@plt>:
   11394:	add	ip, pc, #0, 12
   11398:	add	ip, ip, #102400	; 0x19000
   1139c:	ldr	pc, [ip, #3412]!	; 0xd54

000113a0 <close@plt>:
   113a0:	add	ip, pc, #0, 12
   113a4:	add	ip, ip, #102400	; 0x19000
   113a8:	ldr	pc, [ip, #3404]!	; 0xd4c

000113ac <putchar_unlocked@plt>:
   113ac:	add	ip, pc, #0, 12
   113b0:	add	ip, ip, #102400	; 0x19000
   113b4:	ldr	pc, [ip, #3396]!	; 0xd44

000113b8 <__assert_fail@plt>:
   113b8:	add	ip, pc, #0, 12
   113bc:	add	ip, ip, #102400	; 0x19000
   113c0:	ldr	pc, [ip, #3388]!	; 0xd3c

000113c4 <tcgetattr@plt>:
   113c4:	add	ip, pc, #0, 12
   113c8:	add	ip, ip, #102400	; 0x19000
   113cc:	ldr	pc, [ip, #3380]!	; 0xd34

Disassembly of section .text:

000113d0 <.text>:
   113d0:	mov	fp, #0
   113d4:	mov	lr, #0
   113d8:	pop	{r1}		; (ldr r1, [sp], #4)
   113dc:	mov	r2, sp
   113e0:	push	{r2}		; (str r2, [sp, #-4]!)
   113e4:	push	{r0}		; (str r0, [sp, #-4]!)
   113e8:	ldr	ip, [pc, #16]	; 11400 <tcgetattr@plt+0x3c>
   113ec:	push	{ip}		; (str ip, [sp, #-4]!)
   113f0:	ldr	r0, [pc, #12]	; 11404 <tcgetattr@plt+0x40>
   113f4:	ldr	r3, [pc, #12]	; 11408 <tcgetattr@plt+0x44>
   113f8:	bl	11244 <__libc_start_main@plt>
   113fc:	bl	11394 <abort@plt>
   11400:	andeq	r7, r1, r0, ror r8
   11404:	andeq	r2, r1, ip, asr #32
   11408:	andeq	r7, r1, r0, lsl r8
   1140c:	ldr	r3, [pc, #20]	; 11428 <tcgetattr@plt+0x64>
   11410:	ldr	r2, [pc, #20]	; 1142c <tcgetattr@plt+0x68>
   11414:	add	r3, pc, r3
   11418:	ldr	r2, [r3, r2]
   1141c:	cmp	r2, #0
   11420:	bxeq	lr
   11424:	b	1125c <__gmon_start__@plt>
   11428:	andeq	r9, r1, r4, ror #23
   1142c:	andeq	r0, r0, r4, lsl #2
   11430:	ldr	r0, [pc, #24]	; 11450 <tcgetattr@plt+0x8c>
   11434:	ldr	r3, [pc, #24]	; 11454 <tcgetattr@plt+0x90>
   11438:	cmp	r3, r0
   1143c:	bxeq	lr
   11440:	ldr	r3, [pc, #16]	; 11458 <tcgetattr@plt+0x94>
   11444:	cmp	r3, #0
   11448:	bxeq	lr
   1144c:	bx	r3
   11450:	andeq	fp, r2, r0, ror #2
   11454:	andeq	fp, r2, r0, ror #2
   11458:	andeq	r0, r0, r0
   1145c:	ldr	r0, [pc, #36]	; 11488 <tcgetattr@plt+0xc4>
   11460:	ldr	r1, [pc, #36]	; 1148c <tcgetattr@plt+0xc8>
   11464:	sub	r1, r1, r0
   11468:	asr	r1, r1, #2
   1146c:	add	r1, r1, r1, lsr #31
   11470:	asrs	r1, r1, #1
   11474:	bxeq	lr
   11478:	ldr	r3, [pc, #16]	; 11490 <tcgetattr@plt+0xcc>
   1147c:	cmp	r3, #0
   11480:	bxeq	lr
   11484:	bx	r3
   11488:	andeq	fp, r2, r0, ror #2
   1148c:	andeq	fp, r2, r0, ror #2
   11490:	andeq	r0, r0, r0
   11494:	push	{r4, lr}
   11498:	ldr	r4, [pc, #24]	; 114b8 <tcgetattr@plt+0xf4>
   1149c:	ldrb	r3, [r4]
   114a0:	cmp	r3, #0
   114a4:	popne	{r4, pc}
   114a8:	bl	11430 <tcgetattr@plt+0x6c>
   114ac:	mov	r3, #1
   114b0:	strb	r3, [r4]
   114b4:	pop	{r4, pc}
   114b8:	andeq	fp, r2, r4, lsl #3
   114bc:	b	1145c <tcgetattr@plt+0x98>
   114c0:	push	{fp, lr}
   114c4:	mov	fp, sp
   114c8:	sub	sp, sp, #64	; 0x40
   114cc:	mov	r8, r0
   114d0:	cmp	r0, #0
   114d4:	bne	1200c <tcgetattr@plt+0xc48>
   114d8:	movw	r1, #30923	; 0x78cb
   114dc:	mov	r0, #0
   114e0:	mov	r2, #5
   114e4:	movt	r1, #1
   114e8:	bl	1116c <dcgettext@plt>
   114ec:	mov	r1, r0
   114f0:	movw	r0, #45660	; 0xb25c
   114f4:	movt	r0, #2
   114f8:	ldr	r2, [r0]
   114fc:	mov	r0, #1
   11500:	mov	r3, r2
   11504:	str	r2, [sp]
   11508:	bl	112f8 <__printf_chk@plt>
   1150c:	movw	r1, #31074	; 0x7962
   11510:	mov	r0, #0
   11514:	mov	r2, #5
   11518:	movt	r1, #1
   1151c:	bl	1116c <dcgettext@plt>
   11520:	movw	r9, #45428	; 0xb174
   11524:	movt	r9, #2
   11528:	ldr	r1, [r9]
   1152c:	bl	110f4 <fputs_unlocked@plt>
   11530:	movw	r1, #39087	; 0x98af
   11534:	mov	r0, #0
   11538:	mov	r2, #5
   1153c:	movt	r1, #1
   11540:	bl	1116c <dcgettext@plt>
   11544:	ldr	r1, [r9]
   11548:	bl	110f4 <fputs_unlocked@plt>
   1154c:	movw	r1, #31117	; 0x798d
   11550:	mov	r0, #0
   11554:	mov	r2, #5
   11558:	movt	r1, #1
   1155c:	bl	1116c <dcgettext@plt>
   11560:	ldr	r1, [r9]
   11564:	bl	110f4 <fputs_unlocked@plt>
   11568:	movw	r1, #31333	; 0x7a65
   1156c:	mov	r0, #0
   11570:	mov	r2, #5
   11574:	movt	r1, #1
   11578:	bl	1116c <dcgettext@plt>
   1157c:	ldr	r1, [r9]
   11580:	bl	110f4 <fputs_unlocked@plt>
   11584:	movw	r1, #31378	; 0x7a92
   11588:	mov	r0, #0
   1158c:	mov	r2, #5
   11590:	movt	r1, #1
   11594:	bl	1116c <dcgettext@plt>
   11598:	ldr	r1, [r9]
   1159c:	bl	110f4 <fputs_unlocked@plt>
   115a0:	movw	r1, #31432	; 0x7ac8
   115a4:	mov	r0, #0
   115a8:	mov	r2, #5
   115ac:	movt	r1, #1
   115b0:	bl	1116c <dcgettext@plt>
   115b4:	ldr	r1, [r9]
   115b8:	bl	110f4 <fputs_unlocked@plt>
   115bc:	movw	r1, #31573	; 0x7b55
   115c0:	mov	r0, #0
   115c4:	mov	r2, #5
   115c8:	movt	r1, #1
   115cc:	bl	1116c <dcgettext@plt>
   115d0:	ldr	r1, [r9]
   115d4:	bl	110f4 <fputs_unlocked@plt>
   115d8:	movw	r1, #31595	; 0x7b6b
   115dc:	mov	r0, #0
   115e0:	mov	r2, #5
   115e4:	movt	r1, #1
   115e8:	bl	1116c <dcgettext@plt>
   115ec:	ldr	r1, [r9]
   115f0:	bl	110f4 <fputs_unlocked@plt>
   115f4:	movw	r1, #31651	; 0x7ba3
   115f8:	mov	r0, #0
   115fc:	mov	r2, #5
   11600:	movt	r1, #1
   11604:	bl	1116c <dcgettext@plt>
   11608:	ldr	r1, [r9]
   1160c:	bl	110f4 <fputs_unlocked@plt>
   11610:	movw	r1, #31761	; 0x7c11
   11614:	mov	r0, #0
   11618:	mov	r2, #5
   1161c:	movt	r1, #1
   11620:	bl	1116c <dcgettext@plt>
   11624:	ldr	r1, [r9]
   11628:	bl	110f4 <fputs_unlocked@plt>
   1162c:	movw	r1, #31814	; 0x7c46
   11630:	mov	r0, #0
   11634:	mov	r2, #5
   11638:	movt	r1, #1
   1163c:	bl	1116c <dcgettext@plt>
   11640:	ldr	r1, [r9]
   11644:	bl	110f4 <fputs_unlocked@plt>
   11648:	movw	r1, #31975	; 0x7ce7
   1164c:	mov	r0, #0
   11650:	mov	r2, #5
   11654:	movt	r1, #1
   11658:	bl	1116c <dcgettext@plt>
   1165c:	ldr	r1, [r9]
   11660:	bl	110f4 <fputs_unlocked@plt>
   11664:	movw	r1, #32035	; 0x7d23
   11668:	mov	r0, #0
   1166c:	mov	r2, #5
   11670:	movt	r1, #1
   11674:	bl	1116c <dcgettext@plt>
   11678:	ldr	r1, [r9]
   1167c:	bl	110f4 <fputs_unlocked@plt>
   11680:	movw	r1, #32082	; 0x7d52
   11684:	mov	r0, #0
   11688:	mov	r2, #5
   1168c:	movt	r1, #1
   11690:	bl	1116c <dcgettext@plt>
   11694:	ldr	r1, [r9]
   11698:	bl	110f4 <fputs_unlocked@plt>
   1169c:	movw	r1, #32134	; 0x7d86
   116a0:	mov	r0, #0
   116a4:	mov	r2, #5
   116a8:	movt	r1, #1
   116ac:	bl	1116c <dcgettext@plt>
   116b0:	ldr	r1, [r9]
   116b4:	bl	110f4 <fputs_unlocked@plt>
   116b8:	movw	r1, #32297	; 0x7e29
   116bc:	mov	r0, #0
   116c0:	mov	r2, #5
   116c4:	movt	r1, #1
   116c8:	bl	1116c <dcgettext@plt>
   116cc:	ldr	r1, [r9]
   116d0:	bl	110f4 <fputs_unlocked@plt>
   116d4:	movw	r1, #32359	; 0x7e67
   116d8:	mov	r0, #0
   116dc:	mov	r2, #5
   116e0:	movt	r1, #1
   116e4:	bl	1116c <dcgettext@plt>
   116e8:	ldr	r1, [r9]
   116ec:	bl	110f4 <fputs_unlocked@plt>
   116f0:	movw	r1, #32413	; 0x7e9d
   116f4:	mov	r0, #0
   116f8:	mov	r2, #5
   116fc:	movt	r1, #1
   11700:	bl	1116c <dcgettext@plt>
   11704:	ldr	r1, [r9]
   11708:	bl	110f4 <fputs_unlocked@plt>
   1170c:	movw	r1, #32493	; 0x7eed
   11710:	mov	r0, #0
   11714:	mov	r2, #5
   11718:	movt	r1, #1
   1171c:	bl	1116c <dcgettext@plt>
   11720:	ldr	r1, [r9]
   11724:	bl	110f4 <fputs_unlocked@plt>
   11728:	movw	r1, #32591	; 0x7f4f
   1172c:	mov	r0, #0
   11730:	mov	r2, #5
   11734:	movt	r1, #1
   11738:	bl	1116c <dcgettext@plt>
   1173c:	mov	r5, r0
   11740:	movw	r0, #45328	; 0xb110
   11744:	movw	r2, #39497	; 0x9a49
   11748:	movw	r1, #39753	; 0x9b49
   1174c:	movt	r0, #2
   11750:	movt	r2, #1
   11754:	movt	r1, #1
   11758:	ldr	r0, [r0]
   1175c:	cmp	r0, #1
   11760:	mov	r0, #0
   11764:	moveq	r1, r2
   11768:	mov	r2, #5
   1176c:	bl	1116c <dcgettext@plt>
   11770:	mov	r2, r0
   11774:	mov	r0, #1
   11778:	mov	r1, r5
   1177c:	bl	112f8 <__printf_chk@plt>
   11780:	movw	r1, #32672	; 0x7fa0
   11784:	mov	r0, #0
   11788:	mov	r2, #5
   1178c:	movt	r1, #1
   11790:	bl	1116c <dcgettext@plt>
   11794:	ldr	r1, [r9]
   11798:	bl	110f4 <fputs_unlocked@plt>
   1179c:	movw	r1, #32715	; 0x7fcb
   117a0:	mov	r0, #0
   117a4:	mov	r2, #5
   117a8:	movt	r1, #1
   117ac:	bl	1116c <dcgettext@plt>
   117b0:	ldr	r1, [r9]
   117b4:	bl	110f4 <fputs_unlocked@plt>
   117b8:	movw	r1, #32755	; 0x7ff3
   117bc:	mov	r0, #0
   117c0:	mov	r2, #5
   117c4:	movt	r1, #1
   117c8:	bl	1116c <dcgettext@plt>
   117cc:	ldr	r1, [r9]
   117d0:	bl	110f4 <fputs_unlocked@plt>
   117d4:	movw	r1, #32876	; 0x806c
   117d8:	mov	r0, #0
   117dc:	mov	r2, #5
   117e0:	movt	r1, #1
   117e4:	bl	1116c <dcgettext@plt>
   117e8:	ldr	r1, [r9]
   117ec:	bl	110f4 <fputs_unlocked@plt>
   117f0:	movw	r1, #33017	; 0x80f9
   117f4:	mov	r0, #0
   117f8:	mov	r2, #5
   117fc:	movt	r1, #1
   11800:	bl	1116c <dcgettext@plt>
   11804:	ldr	r1, [r9]
   11808:	bl	110f4 <fputs_unlocked@plt>
   1180c:	movw	r1, #33132	; 0x816c
   11810:	mov	r0, #0
   11814:	mov	r2, #5
   11818:	movt	r1, #1
   1181c:	bl	1116c <dcgettext@plt>
   11820:	ldr	r1, [r9]
   11824:	bl	110f4 <fputs_unlocked@plt>
   11828:	movw	r1, #33243	; 0x81db
   1182c:	mov	r0, #0
   11830:	mov	r2, #5
   11834:	movt	r1, #1
   11838:	bl	1116c <dcgettext@plt>
   1183c:	ldr	r1, [r9]
   11840:	bl	110f4 <fputs_unlocked@plt>
   11844:	movw	r1, #33288	; 0x8208
   11848:	mov	r0, #0
   1184c:	mov	r2, #5
   11850:	movt	r1, #1
   11854:	bl	1116c <dcgettext@plt>
   11858:	ldr	r1, [r9]
   1185c:	bl	110f4 <fputs_unlocked@plt>
   11860:	movw	r1, #33348	; 0x8244
   11864:	mov	r0, #0
   11868:	mov	r2, #5
   1186c:	movt	r1, #1
   11870:	bl	1116c <dcgettext@plt>
   11874:	ldr	r1, [r9]
   11878:	bl	110f4 <fputs_unlocked@plt>
   1187c:	movw	r1, #33656	; 0x8378
   11880:	mov	r0, #0
   11884:	mov	r2, #5
   11888:	movt	r1, #1
   1188c:	bl	1116c <dcgettext@plt>
   11890:	ldr	r1, [r9]
   11894:	bl	110f4 <fputs_unlocked@plt>
   11898:	movw	r1, #33706	; 0x83aa
   1189c:	mov	r0, #0
   118a0:	mov	r2, #5
   118a4:	movt	r1, #1
   118a8:	bl	1116c <dcgettext@plt>
   118ac:	ldr	r1, [r9]
   118b0:	bl	110f4 <fputs_unlocked@plt>
   118b4:	movw	r1, #33963	; 0x84ab
   118b8:	mov	r0, #0
   118bc:	mov	r2, #5
   118c0:	movt	r1, #1
   118c4:	bl	1116c <dcgettext@plt>
   118c8:	ldr	r1, [r9]
   118cc:	bl	110f4 <fputs_unlocked@plt>
   118d0:	movw	r1, #34038	; 0x84f6
   118d4:	mov	r0, #0
   118d8:	mov	r2, #5
   118dc:	movt	r1, #1
   118e0:	bl	1116c <dcgettext@plt>
   118e4:	ldr	r1, [r9]
   118e8:	bl	110f4 <fputs_unlocked@plt>
   118ec:	movw	r1, #34197	; 0x8595
   118f0:	mov	r0, #0
   118f4:	mov	r2, #5
   118f8:	movt	r1, #1
   118fc:	bl	1116c <dcgettext@plt>
   11900:	ldr	r1, [r9]
   11904:	bl	110f4 <fputs_unlocked@plt>
   11908:	movw	r1, #34257	; 0x85d1
   1190c:	mov	r0, #0
   11910:	mov	r2, #5
   11914:	movt	r1, #1
   11918:	bl	1116c <dcgettext@plt>
   1191c:	ldr	r1, [r9]
   11920:	bl	110f4 <fputs_unlocked@plt>
   11924:	movw	r1, #34319	; 0x860f
   11928:	mov	r0, #0
   1192c:	mov	r2, #5
   11930:	movt	r1, #1
   11934:	bl	1116c <dcgettext@plt>
   11938:	ldr	r1, [r9]
   1193c:	bl	110f4 <fputs_unlocked@plt>
   11940:	movw	r1, #34396	; 0x865c
   11944:	mov	r0, #0
   11948:	mov	r2, #5
   1194c:	movt	r1, #1
   11950:	bl	1116c <dcgettext@plt>
   11954:	ldr	r1, [r9]
   11958:	bl	110f4 <fputs_unlocked@plt>
   1195c:	movw	r1, #34604	; 0x872c
   11960:	mov	r0, #0
   11964:	mov	r2, #5
   11968:	movt	r1, #1
   1196c:	bl	1116c <dcgettext@plt>
   11970:	ldr	r1, [r9]
   11974:	bl	110f4 <fputs_unlocked@plt>
   11978:	movw	r1, #34623	; 0x873f
   1197c:	mov	r0, #0
   11980:	mov	r2, #5
   11984:	movt	r1, #1
   11988:	bl	1116c <dcgettext@plt>
   1198c:	ldr	r1, [r9]
   11990:	bl	110f4 <fputs_unlocked@plt>
   11994:	movw	r1, #34676	; 0x8774
   11998:	mov	r0, #0
   1199c:	mov	r2, #5
   119a0:	movt	r1, #1
   119a4:	bl	1116c <dcgettext@plt>
   119a8:	ldr	r1, [r9]
   119ac:	bl	110f4 <fputs_unlocked@plt>
   119b0:	movw	r1, #34735	; 0x87af
   119b4:	mov	r0, #0
   119b8:	mov	r2, #5
   119bc:	movt	r1, #1
   119c0:	bl	1116c <dcgettext@plt>
   119c4:	ldr	r1, [r9]
   119c8:	bl	110f4 <fputs_unlocked@plt>
   119cc:	movw	r1, #34788	; 0x87e4
   119d0:	mov	r0, #0
   119d4:	mov	r2, #5
   119d8:	movt	r1, #1
   119dc:	bl	1116c <dcgettext@plt>
   119e0:	ldr	r1, [r9]
   119e4:	bl	110f4 <fputs_unlocked@plt>
   119e8:	movw	r1, #34839	; 0x8817
   119ec:	mov	r0, #0
   119f0:	mov	r2, #5
   119f4:	movt	r1, #1
   119f8:	bl	1116c <dcgettext@plt>
   119fc:	ldr	r1, [r9]
   11a00:	bl	110f4 <fputs_unlocked@plt>
   11a04:	movw	r1, #34894	; 0x884e
   11a08:	mov	r0, #0
   11a0c:	mov	r2, #5
   11a10:	movt	r1, #1
   11a14:	bl	1116c <dcgettext@plt>
   11a18:	ldr	r1, [r9]
   11a1c:	bl	110f4 <fputs_unlocked@plt>
   11a20:	movw	r1, #34969	; 0x8899
   11a24:	mov	r0, #0
   11a28:	mov	r2, #5
   11a2c:	movt	r1, #1
   11a30:	bl	1116c <dcgettext@plt>
   11a34:	ldr	r1, [r9]
   11a38:	bl	110f4 <fputs_unlocked@plt>
   11a3c:	movw	r1, #35046	; 0x88e6
   11a40:	mov	r0, #0
   11a44:	mov	r2, #5
   11a48:	movt	r1, #1
   11a4c:	bl	1116c <dcgettext@plt>
   11a50:	ldr	r1, [r9]
   11a54:	bl	110f4 <fputs_unlocked@plt>
   11a58:	movw	r1, #35108	; 0x8924
   11a5c:	mov	r0, #0
   11a60:	mov	r2, #5
   11a64:	movt	r1, #1
   11a68:	bl	1116c <dcgettext@plt>
   11a6c:	ldr	r1, [r9]
   11a70:	bl	110f4 <fputs_unlocked@plt>
   11a74:	movw	r1, #35171	; 0x8963
   11a78:	mov	r0, #0
   11a7c:	mov	r2, #5
   11a80:	movt	r1, #1
   11a84:	bl	1116c <dcgettext@plt>
   11a88:	ldr	r1, [r9]
   11a8c:	bl	110f4 <fputs_unlocked@plt>
   11a90:	movw	r1, #35224	; 0x8998
   11a94:	mov	r0, #0
   11a98:	mov	r2, #5
   11a9c:	movt	r1, #1
   11aa0:	bl	1116c <dcgettext@plt>
   11aa4:	ldr	r1, [r9]
   11aa8:	bl	110f4 <fputs_unlocked@plt>
   11aac:	movw	r1, #35292	; 0x89dc
   11ab0:	mov	r0, #0
   11ab4:	mov	r2, #5
   11ab8:	movt	r1, #1
   11abc:	bl	1116c <dcgettext@plt>
   11ac0:	ldr	r1, [r9]
   11ac4:	bl	110f4 <fputs_unlocked@plt>
   11ac8:	movw	r1, #35329	; 0x8a01
   11acc:	mov	r0, #0
   11ad0:	mov	r2, #5
   11ad4:	movt	r1, #1
   11ad8:	bl	1116c <dcgettext@plt>
   11adc:	ldr	r1, [r9]
   11ae0:	bl	110f4 <fputs_unlocked@plt>
   11ae4:	movw	r1, #35447	; 0x8a77
   11ae8:	mov	r0, #0
   11aec:	mov	r2, #5
   11af0:	movt	r1, #1
   11af4:	bl	1116c <dcgettext@plt>
   11af8:	ldr	r1, [r9]
   11afc:	bl	110f4 <fputs_unlocked@plt>
   11b00:	movw	r1, #35503	; 0x8aaf
   11b04:	mov	r0, #0
   11b08:	mov	r2, #5
   11b0c:	movt	r1, #1
   11b10:	bl	1116c <dcgettext@plt>
   11b14:	ldr	r1, [r9]
   11b18:	bl	110f4 <fputs_unlocked@plt>
   11b1c:	movw	r1, #35589	; 0x8b05
   11b20:	mov	r0, #0
   11b24:	mov	r2, #5
   11b28:	movt	r1, #1
   11b2c:	bl	1116c <dcgettext@plt>
   11b30:	ldr	r1, [r9]
   11b34:	bl	110f4 <fputs_unlocked@plt>
   11b38:	movw	r1, #35736	; 0x8b98
   11b3c:	mov	r0, #0
   11b40:	mov	r2, #5
   11b44:	movt	r1, #1
   11b48:	bl	1116c <dcgettext@plt>
   11b4c:	ldr	r1, [r9]
   11b50:	bl	110f4 <fputs_unlocked@plt>
   11b54:	movw	r1, #35801	; 0x8bd9
   11b58:	mov	r0, #0
   11b5c:	mov	r2, #5
   11b60:	movt	r1, #1
   11b64:	bl	1116c <dcgettext@plt>
   11b68:	ldr	r1, [r9]
   11b6c:	bl	110f4 <fputs_unlocked@plt>
   11b70:	movw	r1, #35841	; 0x8c01
   11b74:	mov	r0, #0
   11b78:	mov	r2, #5
   11b7c:	movt	r1, #1
   11b80:	bl	1116c <dcgettext@plt>
   11b84:	ldr	r1, [r9]
   11b88:	bl	110f4 <fputs_unlocked@plt>
   11b8c:	movw	r1, #35878	; 0x8c26
   11b90:	mov	r0, #0
   11b94:	mov	r2, #5
   11b98:	movt	r1, #1
   11b9c:	bl	1116c <dcgettext@plt>
   11ba0:	ldr	r1, [r9]
   11ba4:	bl	110f4 <fputs_unlocked@plt>
   11ba8:	movw	r1, #35971	; 0x8c83
   11bac:	mov	r0, #0
   11bb0:	mov	r2, #5
   11bb4:	movt	r1, #1
   11bb8:	bl	1116c <dcgettext@plt>
   11bbc:	ldr	r1, [r9]
   11bc0:	bl	110f4 <fputs_unlocked@plt>
   11bc4:	movw	r1, #36008	; 0x8ca8
   11bc8:	mov	r0, #0
   11bcc:	mov	r2, #5
   11bd0:	movt	r1, #1
   11bd4:	bl	1116c <dcgettext@plt>
   11bd8:	ldr	r1, [r9]
   11bdc:	bl	110f4 <fputs_unlocked@plt>
   11be0:	movw	r1, #36076	; 0x8cec
   11be4:	mov	r0, #0
   11be8:	mov	r2, #5
   11bec:	movt	r1, #1
   11bf0:	bl	1116c <dcgettext@plt>
   11bf4:	ldr	r1, [r9]
   11bf8:	bl	110f4 <fputs_unlocked@plt>
   11bfc:	movw	r1, #36147	; 0x8d33
   11c00:	mov	r0, #0
   11c04:	mov	r2, #5
   11c08:	movt	r1, #1
   11c0c:	bl	1116c <dcgettext@plt>
   11c10:	ldr	r1, [r9]
   11c14:	bl	110f4 <fputs_unlocked@plt>
   11c18:	movw	r1, #36215	; 0x8d77
   11c1c:	mov	r0, #0
   11c20:	mov	r2, #5
   11c24:	movt	r1, #1
   11c28:	bl	1116c <dcgettext@plt>
   11c2c:	ldr	r1, [r9]
   11c30:	bl	110f4 <fputs_unlocked@plt>
   11c34:	movw	r1, #36248	; 0x8d98
   11c38:	mov	r0, #0
   11c3c:	mov	r2, #5
   11c40:	movt	r1, #1
   11c44:	bl	1116c <dcgettext@plt>
   11c48:	movw	r2, #36349	; 0x8dfd
   11c4c:	mov	r1, r0
   11c50:	mov	r0, #1
   11c54:	movt	r2, #1
   11c58:	bl	112f8 <__printf_chk@plt>
   11c5c:	movw	r1, #36376	; 0x8e18
   11c60:	mov	r0, #0
   11c64:	mov	r2, #5
   11c68:	movt	r1, #1
   11c6c:	bl	1116c <dcgettext@plt>
   11c70:	ldr	r1, [r9]
   11c74:	bl	110f4 <fputs_unlocked@plt>
   11c78:	movw	r1, #36527	; 0x8eaf
   11c7c:	mov	r0, #0
   11c80:	mov	r2, #5
   11c84:	movt	r1, #1
   11c88:	bl	1116c <dcgettext@plt>
   11c8c:	ldr	r1, [r9]
   11c90:	bl	110f4 <fputs_unlocked@plt>
   11c94:	movw	r1, #36564	; 0x8ed4
   11c98:	mov	r0, #0
   11c9c:	mov	r2, #5
   11ca0:	movt	r1, #1
   11ca4:	bl	1116c <dcgettext@plt>
   11ca8:	ldr	r1, [r9]
   11cac:	bl	110f4 <fputs_unlocked@plt>
   11cb0:	movw	r1, #36637	; 0x8f1d
   11cb4:	mov	r0, #0
   11cb8:	mov	r2, #5
   11cbc:	movt	r1, #1
   11cc0:	bl	1116c <dcgettext@plt>
   11cc4:	ldr	r1, [r9]
   11cc8:	bl	110f4 <fputs_unlocked@plt>
   11ccc:	movw	r1, #36709	; 0x8f65
   11cd0:	mov	r0, #0
   11cd4:	mov	r2, #5
   11cd8:	movt	r1, #1
   11cdc:	bl	1116c <dcgettext@plt>
   11ce0:	ldr	r1, [r9]
   11ce4:	bl	110f4 <fputs_unlocked@plt>
   11ce8:	movw	r1, #36733	; 0x8f7d
   11cec:	mov	r0, #0
   11cf0:	mov	r2, #5
   11cf4:	movt	r1, #1
   11cf8:	bl	1116c <dcgettext@plt>
   11cfc:	ldr	r1, [r9]
   11d00:	bl	110f4 <fputs_unlocked@plt>
   11d04:	movw	r1, #36768	; 0x8fa0
   11d08:	mov	r0, #0
   11d0c:	mov	r2, #5
   11d10:	movt	r1, #1
   11d14:	bl	1116c <dcgettext@plt>
   11d18:	ldr	r1, [r9]
   11d1c:	bl	110f4 <fputs_unlocked@plt>
   11d20:	movw	r1, #36834	; 0x8fe2
   11d24:	mov	r0, #0
   11d28:	mov	r2, #5
   11d2c:	movt	r1, #1
   11d30:	bl	1116c <dcgettext@plt>
   11d34:	ldr	r1, [r9]
   11d38:	bl	110f4 <fputs_unlocked@plt>
   11d3c:	movw	r1, #37004	; 0x908c
   11d40:	mov	r0, #0
   11d44:	mov	r2, #5
   11d48:	movt	r1, #1
   11d4c:	bl	1116c <dcgettext@plt>
   11d50:	movw	r2, #37033	; 0x90a9
   11d54:	mov	r1, r0
   11d58:	mov	r0, #1
   11d5c:	movt	r2, #1
   11d60:	bl	112f8 <__printf_chk@plt>
   11d64:	movw	r1, #37054	; 0x90be
   11d68:	mov	r0, #0
   11d6c:	mov	r2, #5
   11d70:	movt	r1, #1
   11d74:	bl	1116c <dcgettext@plt>
   11d78:	movw	r2, #37127	; 0x9107
   11d7c:	mov	r1, r0
   11d80:	mov	r0, #1
   11d84:	movt	r2, #1
   11d88:	bl	112f8 <__printf_chk@plt>
   11d8c:	movw	r1, #37155	; 0x9123
   11d90:	mov	r0, #0
   11d94:	mov	r2, #5
   11d98:	movt	r1, #1
   11d9c:	bl	1116c <dcgettext@plt>
   11da0:	ldr	r1, [r9]
   11da4:	bl	110f4 <fputs_unlocked@plt>
   11da8:	movw	r1, #37190	; 0x9146
   11dac:	mov	r0, #0
   11db0:	mov	r2, #5
   11db4:	movt	r1, #1
   11db8:	bl	1116c <dcgettext@plt>
   11dbc:	ldr	r1, [r9]
   11dc0:	bl	110f4 <fputs_unlocked@plt>
   11dc4:	movw	r1, #37339	; 0x91db
   11dc8:	mov	r0, #0
   11dcc:	mov	r2, #5
   11dd0:	movt	r1, #1
   11dd4:	bl	1116c <dcgettext@plt>
   11dd8:	ldr	r1, [r9]
   11ddc:	bl	110f4 <fputs_unlocked@plt>
   11de0:	movw	r1, #37383	; 0x9207
   11de4:	mov	r0, #0
   11de8:	mov	r2, #5
   11dec:	movt	r1, #1
   11df0:	bl	1116c <dcgettext@plt>
   11df4:	ldr	r1, [r9]
   11df8:	bl	110f4 <fputs_unlocked@plt>
   11dfc:	movw	r1, #37485	; 0x926d
   11e00:	mov	r0, #0
   11e04:	mov	r2, #5
   11e08:	movt	r1, #1
   11e0c:	bl	1116c <dcgettext@plt>
   11e10:	movw	r2, #37542	; 0x92a6
   11e14:	movw	r3, #37556	; 0x92b4
   11e18:	mov	r1, r0
   11e1c:	mov	r0, #1
   11e20:	movt	r2, #1
   11e24:	movt	r3, #1
   11e28:	bl	112f8 <__printf_chk@plt>
   11e2c:	movw	r1, #37597	; 0x92dd
   11e30:	mov	r0, #0
   11e34:	mov	r2, #5
   11e38:	movt	r1, #1
   11e3c:	bl	1116c <dcgettext@plt>
   11e40:	ldr	r1, [r9]
   11e44:	bl	110f4 <fputs_unlocked@plt>
   11e48:	movw	r1, #37800	; 0x93a8
   11e4c:	mov	r0, #0
   11e50:	mov	r2, #5
   11e54:	movt	r1, #1
   11e58:	bl	1116c <dcgettext@plt>
   11e5c:	movw	r2, #38009	; 0x9479
   11e60:	mov	r1, r0
   11e64:	mov	r0, #1
   11e68:	movt	r2, #1
   11e6c:	bl	112f8 <__printf_chk@plt>
   11e70:	movw	r1, #38040	; 0x9498
   11e74:	mov	r0, #0
   11e78:	mov	r2, #5
   11e7c:	movt	r1, #1
   11e80:	bl	1116c <dcgettext@plt>
   11e84:	mov	r1, r0
   11e88:	movw	r0, #38412	; 0x960c
   11e8c:	movw	r2, #38296	; 0x9598
   11e90:	movw	r3, #38353	; 0x95d1
   11e94:	movt	r0, #1
   11e98:	movt	r2, #1
   11e9c:	movt	r3, #1
   11ea0:	str	r0, [sp]
   11ea4:	mov	r0, #1
   11ea8:	bl	112f8 <__printf_chk@plt>
   11eac:	movw	r1, #38473	; 0x9649
   11eb0:	mov	r0, #0
   11eb4:	mov	r2, #5
   11eb8:	movt	r1, #1
   11ebc:	bl	1116c <dcgettext@plt>
   11ec0:	ldr	r1, [r9]
   11ec4:	bl	110f4 <fputs_unlocked@plt>
   11ec8:	movw	r0, #40816	; 0x9f70
   11ecc:	add	r6, sp, #8
   11ed0:	movt	r0, #1
   11ed4:	mov	r1, r6
   11ed8:	ldm	r0!, {r2, r3, r4, r5}
   11edc:	stmia	r1!, {r2, r3, r4, r5}
   11ee0:	ldm	r0!, {r2, r3, r4, r5, r7}
   11ee4:	stmia	r1!, {r2, r3, r4, r5, r7}
   11ee8:	ldm	r0, {r2, r3, r4, r5, r7}
   11eec:	stm	r1, {r2, r3, r4, r5, r7}
   11ef0:	movw	r1, #39162	; 0x98fa
   11ef4:	movw	r5, #38750	; 0x975e
   11ef8:	movt	r1, #1
   11efc:	movt	r5, #1
   11f00:	mov	r0, r5
   11f04:	bl	1110c <strcmp@plt>
   11f08:	cmp	r0, #0
   11f0c:	ldrne	r1, [r6, #8]!
   11f10:	cmpne	r1, #0
   11f14:	bne	11f00 <tcgetattr@plt+0xb3c>
   11f18:	ldr	r6, [r6, #4]
   11f1c:	movw	r1, #39257	; 0x9959
   11f20:	mov	r0, #0
   11f24:	mov	r2, #5
   11f28:	movt	r1, #1
   11f2c:	bl	1116c <dcgettext@plt>
   11f30:	movw	r2, #38818	; 0x97a2
   11f34:	movw	r3, #39280	; 0x9970
   11f38:	mov	r1, r0
   11f3c:	mov	r0, #1
   11f40:	movt	r2, #1
   11f44:	movt	r3, #1
   11f48:	bl	112f8 <__printf_chk@plt>
   11f4c:	cmp	r6, #0
   11f50:	mov	r0, #5
   11f54:	mov	r1, #0
   11f58:	moveq	r6, r5
   11f5c:	bl	1134c <setlocale@plt>
   11f60:	cmp	r0, #0
   11f64:	beq	11f9c <tcgetattr@plt+0xbd8>
   11f68:	movw	r1, #39320	; 0x9998
   11f6c:	mov	r2, #3
   11f70:	movt	r1, #1
   11f74:	bl	11388 <strncmp@plt>
   11f78:	cmp	r0, #0
   11f7c:	beq	11f9c <tcgetattr@plt+0xbd8>
   11f80:	movw	r1, #39324	; 0x999c
   11f84:	mov	r0, #0
   11f88:	mov	r2, #5
   11f8c:	movt	r1, #1
   11f90:	bl	1116c <dcgettext@plt>
   11f94:	ldr	r1, [r9]
   11f98:	bl	110f4 <fputs_unlocked@plt>
   11f9c:	movw	r1, #39395	; 0x99e3
   11fa0:	mov	r0, #0
   11fa4:	mov	r2, #5
   11fa8:	movt	r1, #1
   11fac:	bl	1116c <dcgettext@plt>
   11fb0:	movw	r2, #39280	; 0x9970
   11fb4:	mov	r1, r0
   11fb8:	mov	r0, #1
   11fbc:	mov	r3, r5
   11fc0:	movt	r2, #1
   11fc4:	bl	112f8 <__printf_chk@plt>
   11fc8:	movw	r1, #39422	; 0x99fe
   11fcc:	mov	r0, #0
   11fd0:	mov	r2, #5
   11fd4:	movt	r1, #1
   11fd8:	bl	1116c <dcgettext@plt>
   11fdc:	movw	r3, #36146	; 0x8d32
   11fe0:	mov	r1, r0
   11fe4:	movw	r0, #39190	; 0x9916
   11fe8:	cmp	r6, r5
   11fec:	mov	r2, r6
   11ff0:	movt	r0, #1
   11ff4:	movt	r3, #1
   11ff8:	moveq	r3, r0
   11ffc:	mov	r0, #1
   12000:	bl	112f8 <__printf_chk@plt>
   12004:	mov	r0, r8
   12008:	bl	11280 <exit@plt>
   1200c:	movw	r0, #45424	; 0xb170
   12010:	movw	r1, #30884	; 0x78a4
   12014:	mov	r2, #5
   12018:	movt	r0, #2
   1201c:	movt	r1, #1
   12020:	ldr	r5, [r0]
   12024:	mov	r0, #0
   12028:	bl	1116c <dcgettext@plt>
   1202c:	mov	r2, r0
   12030:	movw	r0, #45660	; 0xb25c
   12034:	mov	r1, #1
   12038:	movt	r0, #2
   1203c:	ldr	r3, [r0]
   12040:	mov	r0, r5
   12044:	bl	1131c <__fprintf_chk@plt>
   12048:	b	12004 <tcgetattr@plt+0xc40>
   1204c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12050:	add	fp, sp, #28
   12054:	sub	sp, sp, #28
   12058:	str	r0, [sp, #20]
   1205c:	ldr	r0, [r1]
   12060:	mov	r5, r1
   12064:	bl	14068 <tcgetattr@plt+0x2ca4>
   12068:	movw	r1, #36146	; 0x8d32
   1206c:	mov	r0, #6
   12070:	movt	r1, #1
   12074:	bl	1134c <setlocale@plt>
   12078:	movw	r6, #38822	; 0x97a6
   1207c:	movw	r1, #38755	; 0x9763
   12080:	movt	r6, #1
   12084:	movt	r1, #1
   12088:	mov	r0, r6
   1208c:	bl	11370 <bindtextdomain@plt>
   12090:	mov	r0, r6
   12094:	bl	1119c <textdomain@plt>
   12098:	movw	r0, #15640	; 0x3d18
   1209c:	movt	r0, #1
   120a0:	bl	17874 <tcgetattr@plt+0x64b0>
   120a4:	movw	r0, #45432	; 0xb178
   120a8:	mov	r1, #0
   120ac:	mov	r6, #1
   120b0:	mov	r4, #0
   120b4:	mov	r7, #0
   120b8:	mov	sl, #0
   120bc:	mov	r9, #0
   120c0:	movt	r0, #2
   120c4:	str	r1, [r0]
   120c8:	mov	r0, #1
   120cc:	str	r0, [sp, #16]
   120d0:	mov	r0, #0
   120d4:	str	r0, [sp, #12]
   120d8:	b	121dc <tcgetattr@plt+0xe18>
   120dc:	cmn	r0, #3
   120e0:	beq	12898 <tcgetattr@plt+0x14d4>
   120e4:	cmn	r0, #2
   120e8:	bne	12114 <tcgetattr@plt+0xd50>
   120ec:	b	128e0 <tcgetattr@plt+0x151c>
   120f0:	cmp	r0, #70	; 0x46
   120f4:	beq	12174 <tcgetattr@plt+0xdb0>
   120f8:	cmp	r0, #97	; 0x61
   120fc:	beq	1218c <tcgetattr@plt+0xdc8>
   12100:	cmp	r0, #103	; 0x67
   12104:	bne	12114 <tcgetattr@plt+0xd50>
   12108:	mov	r0, #2
   1210c:	mov	sl, #1
   12110:	b	12194 <tcgetattr@plt+0xdd0>
   12114:	add	r4, r6, r4
   12118:	movw	r1, #38848	; 0x97c0
   1211c:	ldr	r6, [r5, r4, lsl #2]
   12120:	movt	r1, #1
   12124:	mov	r0, r6
   12128:	bl	1110c <strcmp@plt>
   1212c:	cmp	r0, #0
   12130:	beq	12158 <tcgetattr@plt+0xd94>
   12134:	movw	r1, #38849	; 0x97c1
   12138:	mov	r0, r6
   1213c:	movt	r1, #1
   12140:	bl	1110c <strcmp@plt>
   12144:	ldr	r1, [sp, #16]
   12148:	clz	r0, r0
   1214c:	lsr	r0, r0, #5
   12150:	and	r1, r1, r0
   12154:	str	r1, [sp, #16]
   12158:	movw	r1, #45416	; 0xb168
   1215c:	mov	r0, #0
   12160:	mov	r6, #1
   12164:	movt	r1, #2
   12168:	str	r0, [r1]
   1216c:	mov	r0, r1
   12170:	b	121a0 <tcgetattr@plt+0xddc>
   12174:	cmp	r9, #0
   12178:	bne	1299c <tcgetattr@plt+0x15d8>
   1217c:	movw	r0, #45440	; 0xb180
   12180:	movt	r0, #2
   12184:	ldr	r9, [r0]
   12188:	b	12198 <tcgetattr@plt+0xdd4>
   1218c:	mov	r7, #1
   12190:	mov	r0, #1
   12194:	str	r0, [sp, #12]
   12198:	movw	r0, #45416	; 0xb168
   1219c:	movt	r0, #2
   121a0:	ldr	r8, [r0]
   121a4:	cmp	r6, r8
   121a8:	bge	121dc <tcgetattr@plt+0xe18>
   121ac:	add	r1, r6, #1
   121b0:	add	r0, r4, r6
   121b4:	cmp	r8, r1
   121b8:	add	r0, r5, r0, lsl #2
   121bc:	movgt	r1, r8
   121c0:	sub	r1, r1, r6
   121c4:	lsl	r2, r1, #2
   121c8:	mov	r1, #0
   121cc:	bl	112ec <memset@plt>
   121d0:	add	r6, r6, #1
   121d4:	cmp	r6, r8
   121d8:	blt	121d0 <tcgetattr@plt+0xe0c>
   121dc:	mov	r0, #0
   121e0:	movw	r2, #38779	; 0x977b
   121e4:	movw	r3, #40720	; 0x9f10
   121e8:	add	r1, r5, r4, lsl #2
   121ec:	str	r0, [sp]
   121f0:	ldr	r0, [sp, #20]
   121f4:	movt	r2, #1
   121f8:	movt	r3, #1
   121fc:	sub	r0, r0, r4
   12200:	bl	11268 <getopt_long@plt>
   12204:	cmp	r0, #69	; 0x45
   12208:	bgt	120f0 <tcgetattr@plt+0xd2c>
   1220c:	cmn	r0, #1
   12210:	bne	120dc <tcgetattr@plt+0xd18>
   12214:	ldr	r6, [sp, #16]
   12218:	and	r0, r7, sl
   1221c:	tst	r0, #1
   12220:	bne	129a8 <tcgetattr@plt+0x15e4>
   12224:	orr	r4, r7, sl
   12228:	tst	r4, #1
   1222c:	eorne	r0, r6, #1
   12230:	tstne	r0, #1
   12234:	bne	129b4 <tcgetattr@plt+0x15f0>
   12238:	cmp	r9, #0
   1223c:	mov	r8, r9
   12240:	bne	1225c <tcgetattr@plt+0xe98>
   12244:	movw	r1, #38988	; 0x984c
   12248:	mov	r0, #0
   1224c:	mov	r2, #5
   12250:	movt	r1, #1
   12254:	bl	1116c <dcgettext@plt>
   12258:	mov	r8, r0
   1225c:	orr	r0, r7, r6
   12260:	orr	r0, sl, r0
   12264:	tst	r0, #1
   12268:	bne	1229c <tcgetattr@plt+0xed8>
   1226c:	ldr	r3, [sp, #20]
   12270:	movw	r2, #45508	; 0xb1c4
   12274:	add	r0, sp, #27
   12278:	add	r1, sp, #26
   1227c:	movt	r2, #2
   12280:	str	r1, [sp, #4]
   12284:	str	r0, [sp, #8]
   12288:	mov	r0, #1
   1228c:	mov	r1, r8
   12290:	str	r2, [sp]
   12294:	mov	r2, r5
   12298:	bl	129d8 <tcgetattr@plt+0x1614>
   1229c:	cmp	r9, #0
   122a0:	beq	122ec <tcgetattr@plt+0xf28>
   122a4:	mov	r0, #0
   122a8:	mov	r1, r8
   122ac:	mov	r2, #2048	; 0x800
   122b0:	mov	r3, #0
   122b4:	bl	13fd8 <tcgetattr@plt+0x2c14>
   122b8:	cmn	r0, #1
   122bc:	ble	128e8 <tcgetattr@plt+0x1524>
   122c0:	mov	r0, #0
   122c4:	mov	r1, #3
   122c8:	bl	13e00 <tcgetattr@plt+0x2a3c>
   122cc:	cmn	r0, #1
   122d0:	beq	12958 <tcgetattr@plt+0x1594>
   122d4:	bic	r2, r0, #2048	; 0x800
   122d8:	mov	r0, #0
   122dc:	mov	r1, #4
   122e0:	bl	13e00 <tcgetattr@plt+0x2a3c>
   122e4:	cmn	r0, #1
   122e8:	ble	12958 <tcgetattr@plt+0x1594>
   122ec:	movw	r9, #45448	; 0xb188
   122f0:	mov	r0, #0
   122f4:	movt	r9, #2
   122f8:	mov	r1, r9
   122fc:	bl	113c4 <tcgetattr@plt>
   12300:	cmp	r0, #0
   12304:	bne	128e8 <tcgetattr@plt+0x1524>
   12308:	orr	r0, r4, r6
   1230c:	tst	r0, #1
   12310:	beq	12438 <tcgetattr@plt+0x1074>
   12314:	bl	137ac <tcgetattr@plt+0x23e8>
   12318:	movw	r1, #45568	; 0xb200
   1231c:	mov	r5, #0
   12320:	movt	r1, #2
   12324:	str	r0, [r1]
   12328:	movw	r0, #45572	; 0xb204
   1232c:	movt	r0, #2
   12330:	str	r5, [r0]
   12334:	ldr	r0, [sp, #12]
   12338:	cmp	r0, #2
   1233c:	beq	1270c <tcgetattr@plt+0x1348>
   12340:	cmp	r0, #1
   12344:	beq	12554 <tcgetattr@plt+0x1190>
   12348:	cmp	r0, #0
   1234c:	bne	1288c <tcgetattr@plt+0x14c8>
   12350:	mov	r0, r9
   12354:	mov	r1, #1
   12358:	mov	sl, #1
   1235c:	bl	139e4 <tcgetattr@plt+0x2620>
   12360:	ldrb	r1, [r9, #16]
   12364:	movw	r0, #40537	; 0x9e59
   12368:	movt	r0, #1
   1236c:	bl	13b74 <tcgetattr@plt+0x27b0>
   12370:	mov	r0, #10
   12374:	bl	113ac <putchar_unlocked@plt>
   12378:	movw	r1, #45572	; 0xb204
   1237c:	mov	r0, #0
   12380:	movw	r6, #40128	; 0x9cc0
   12384:	movw	r4, #40195	; 0x9d03
   12388:	movw	r7, #40181	; 0x9cf5
   1238c:	movt	r1, #2
   12390:	movt	r6, #1
   12394:	movt	r4, #1
   12398:	movt	r7, #1
   1239c:	str	r0, [r1]
   123a0:	movw	r0, #42672	; 0xa6b0
   123a4:	movt	r0, #1
   123a8:	add	r8, r0, #8
   123ac:	ldr	r0, [r8]
   123b0:	add	r0, r9, r0
   123b4:	ldrb	r5, [r0, #17]
   123b8:	ldrb	r0, [r8, #-4]
   123bc:	cmp	r5, r0
   123c0:	beq	123f8 <tcgetattr@plt+0x1034>
   123c4:	mov	r0, r6
   123c8:	mov	r1, r7
   123cc:	bl	1110c <strcmp@plt>
   123d0:	cmp	r0, #0
   123d4:	beq	123f8 <tcgetattr@plt+0x1034>
   123d8:	mov	r0, r5
   123dc:	bl	13c40 <tcgetattr@plt+0x287c>
   123e0:	mov	r2, r0
   123e4:	movw	r0, #40548	; 0x9e64
   123e8:	mov	r1, r6
   123ec:	movt	r0, #1
   123f0:	bl	13b74 <tcgetattr@plt+0x27b0>
   123f4:	mov	sl, #0
   123f8:	ldr	r6, [r8, #4]
   123fc:	mov	r1, r4
   12400:	mov	r0, r6
   12404:	bl	1110c <strcmp@plt>
   12408:	add	r8, r8, #12
   1240c:	cmp	r0, #0
   12410:	bne	123ac <tcgetattr@plt+0xfe8>
   12414:	ldrb	r0, [r9, #12]
   12418:	tst	r0, #2
   1241c:	bne	12760 <tcgetattr@plt+0x139c>
   12420:	ldrb	r2, [r9, #22]
   12424:	ldrb	r1, [r9, #23]
   12428:	movw	r0, #40557	; 0x9e6d
   1242c:	movt	r0, #1
   12430:	bl	13b74 <tcgetattr@plt+0x27b0>
   12434:	b	12770 <tcgetattr@plt+0x13ac>
   12438:	ldr	r3, [sp, #20]
   1243c:	mov	r0, #0
   12440:	add	r1, sp, #26
   12444:	mov	r2, r5
   12448:	str	r9, [sp]
   1244c:	strb	r0, [sp, #27]
   12450:	strb	r0, [sp, #26]
   12454:	add	r0, sp, #27
   12458:	str	r1, [sp, #4]
   1245c:	mov	r1, r8
   12460:	str	r0, [sp, #8]
   12464:	mov	r0, #0
   12468:	bl	129d8 <tcgetattr@plt+0x1614>
   1246c:	ldrb	r0, [sp, #27]
   12470:	cmp	r0, #0
   12474:	beq	1288c <tcgetattr@plt+0x14c8>
   12478:	movw	r0, #45328	; 0xb110
   1247c:	movw	r2, #45448	; 0xb188
   12480:	movt	r0, #2
   12484:	movt	r2, #2
   12488:	ldr	r1, [r0]
   1248c:	mov	r0, #0
   12490:	bl	111e4 <tcsetattr@plt>
   12494:	cmp	r0, #0
   12498:	bne	128e8 <tcgetattr@plt+0x1524>
   1249c:	movw	r1, #45576	; 0xb208
   124a0:	mov	r0, #0
   124a4:	movt	r1, #2
   124a8:	bl	113c4 <tcgetattr@plt>
   124ac:	cmp	r0, #0
   124b0:	bne	128e8 <tcgetattr@plt+0x1524>
   124b4:	movw	r4, #45576	; 0xb208
   124b8:	movw	r0, #45448	; 0xb188
   124bc:	mov	r2, #60	; 0x3c
   124c0:	movt	r4, #2
   124c4:	movt	r0, #2
   124c8:	mov	r1, r4
   124cc:	bl	11160 <memcmp@plt>
   124d0:	cmp	r0, #0
   124d4:	beq	1288c <tcgetattr@plt+0x14c8>
   124d8:	ldr	r0, [r4, #8]
   124dc:	movw	r1, #65535	; 0xffff
   124e0:	movt	r1, #61424	; 0xeff0
   124e4:	and	r0, r0, r1
   124e8:	str	r0, [r4, #8]
   124ec:	ldrb	r0, [sp, #26]
   124f0:	cmp	r0, #0
   124f4:	bne	12518 <tcgetattr@plt+0x1154>
   124f8:	movw	r0, #45448	; 0xb188
   124fc:	movw	r1, #45576	; 0xb208
   12500:	mov	r2, #60	; 0x3c
   12504:	movt	r0, #2
   12508:	movt	r1, #2
   1250c:	bl	11160 <memcmp@plt>
   12510:	cmp	r0, #0
   12514:	beq	1288c <tcgetattr@plt+0x14c8>
   12518:	movw	r1, #39040	; 0x9880
   1251c:	mov	r0, #0
   12520:	mov	r2, #5
   12524:	movt	r1, #1
   12528:	bl	1116c <dcgettext@plt>
   1252c:	mov	r4, r0
   12530:	mov	r0, #0
   12534:	mov	r1, #3
   12538:	mov	r2, r8
   1253c:	bl	158d8 <tcgetattr@plt+0x4514>
   12540:	mov	r3, r0
   12544:	mov	r0, #1
   12548:	mov	r1, #0
   1254c:	mov	r2, r4
   12550:	bl	11214 <error@plt>
   12554:	mov	r0, r9
   12558:	mov	r1, #1
   1255c:	bl	139e4 <tcgetattr@plt+0x2620>
   12560:	mov	r0, #1
   12564:	mov	r1, r8
   12568:	bl	138fc <tcgetattr@plt+0x2538>
   1256c:	ldrb	r1, [r9, #16]
   12570:	movw	r0, #40537	; 0x9e59
   12574:	movt	r0, #1
   12578:	bl	13b74 <tcgetattr@plt+0x27b0>
   1257c:	mov	r0, #10
   12580:	bl	113ac <putchar_unlocked@plt>
   12584:	movw	r1, #45572	; 0xb204
   12588:	mov	r0, #0
   1258c:	movw	r6, #40128	; 0x9cc0
   12590:	movw	r4, #40181	; 0x9cf5
   12594:	movw	r5, #40195	; 0x9d03
   12598:	movw	r8, #40548	; 0x9e64
   1259c:	movt	r1, #2
   125a0:	movt	r6, #1
   125a4:	movt	r4, #1
   125a8:	movt	r5, #1
   125ac:	movt	r8, #1
   125b0:	str	r0, [r1]
   125b4:	movw	r0, #42672	; 0xa6b0
   125b8:	movt	r0, #1
   125bc:	add	r7, r0, #8
   125c0:	mov	r0, r6
   125c4:	mov	r1, r4
   125c8:	bl	1110c <strcmp@plt>
   125cc:	cmp	r0, #0
   125d0:	beq	125f4 <tcgetattr@plt+0x1230>
   125d4:	ldr	r0, [r7]
   125d8:	add	r0, r9, r0
   125dc:	ldrb	r0, [r0, #17]
   125e0:	bl	13c40 <tcgetattr@plt+0x287c>
   125e4:	mov	r2, r0
   125e8:	mov	r0, r8
   125ec:	mov	r1, r6
   125f0:	bl	13b74 <tcgetattr@plt+0x27b0>
   125f4:	ldr	r6, [r7, #4]
   125f8:	mov	r1, r5
   125fc:	mov	r0, r6
   12600:	bl	1110c <strcmp@plt>
   12604:	add	r7, r7, #12
   12608:	cmp	r0, #0
   1260c:	bne	125c0 <tcgetattr@plt+0x11fc>
   12610:	ldrb	r2, [r9, #22]
   12614:	ldrb	r1, [r9, #23]
   12618:	movw	r0, #40632	; 0x9eb8
   1261c:	movt	r0, #1
   12620:	bl	13b74 <tcgetattr@plt+0x27b0>
   12624:	movw	r0, #45572	; 0xb204
   12628:	movt	r0, #2
   1262c:	ldr	r0, [r0]
   12630:	cmp	r0, #0
   12634:	beq	12640 <tcgetattr@plt+0x127c>
   12638:	mov	r0, #10
   1263c:	bl	113ac <putchar_unlocked@plt>
   12640:	movw	r0, #45572	; 0xb204
   12644:	movw	r5, #63756	; 0xf90c
   12648:	movw	r4, #40872	; 0x9fa8
   1264c:	mov	r1, #0
   12650:	mvn	r7, #71	; 0x47
   12654:	mov	r8, #0
   12658:	movt	r0, #2
   1265c:	movt	r5, #65535	; 0xffff
   12660:	movt	r4, #1
   12664:	str	r1, [r0]
   12668:	add	r9, r4, r5
   1266c:	ldrb	sl, [r9, #1788]	; 0x6fc
   12670:	tst	sl, #8
   12674:	bne	126fc <tcgetattr@plt+0x1338>
   12678:	ldr	r6, [r9, #1784]	; 0x6f8
   1267c:	cmp	r6, r8
   12680:	beq	126a0 <tcgetattr@plt+0x12dc>
   12684:	mov	r0, #10
   12688:	bl	113ac <putchar_unlocked@plt>
   1268c:	movw	r0, #45572	; 0xb204
   12690:	mov	r8, r6
   12694:	mov	r1, #0
   12698:	movt	r0, #2
   1269c:	str	r1, [r0]
   126a0:	ldr	r0, [r9, #1796]	; 0x704
   126a4:	cmp	r0, #0
   126a8:	ldreq	r0, [r9, #1792]	; 0x700
   126ac:	cmp	r7, #16
   126b0:	bls	12918 <tcgetattr@plt+0x1554>
   126b4:	movw	r1, #43328	; 0xa940
   126b8:	movt	r1, #1
   126bc:	ldr	r1, [r1, r6, lsl #2]
   126c0:	ldr	r1, [r1]
   126c4:	and	r0, r1, r0
   126c8:	ldr	r1, [r9, #1792]	; 0x700
   126cc:	cmp	r0, r1
   126d0:	bne	126e4 <tcgetattr@plt+0x1320>
   126d4:	ldr	r1, [r9, #1780]	; 0x6f4
   126d8:	movw	r0, #43379	; 0xa973
   126dc:	movt	r0, #1
   126e0:	b	126f8 <tcgetattr@plt+0x1334>
   126e4:	tst	sl, #4
   126e8:	beq	126fc <tcgetattr@plt+0x1338>
   126ec:	ldr	r1, [r9, #1780]	; 0x6f4
   126f0:	movw	r0, #40620	; 0x9eac
   126f4:	movt	r0, #1
   126f8:	bl	13b74 <tcgetattr@plt+0x27b0>
   126fc:	add	r7, r7, #1
   12700:	adds	r5, r5, #20
   12704:	bne	12668 <tcgetattr@plt+0x12a4>
   12708:	b	12874 <tcgetattr@plt+0x14b0>
   1270c:	ldm	r9, {r2, r3}
   12710:	ldr	r0, [r9, #8]
   12714:	ldr	r1, [r9, #12]
   12718:	stm	sp, {r0, r1}
   1271c:	movw	r1, #40704	; 0x9f00
   12720:	mov	r0, #1
   12724:	movt	r1, #1
   12728:	bl	112f8 <__printf_chk@plt>
   1272c:	movw	r4, #40715	; 0x9f0b
   12730:	movt	r4, #1
   12734:	add	r0, r9, r5
   12738:	mov	r1, r4
   1273c:	ldrb	r2, [r0, #17]
   12740:	mov	r0, #1
   12744:	bl	112f8 <__printf_chk@plt>
   12748:	add	r5, r5, #1
   1274c:	cmp	r5, #32
   12750:	bne	12734 <tcgetattr@plt+0x1370>
   12754:	mov	r0, #10
   12758:	bl	113ac <putchar_unlocked@plt>
   1275c:	b	1288c <tcgetattr@plt+0x14c8>
   12760:	tst	sl, #1
   12764:	bne	12770 <tcgetattr@plt+0x13ac>
   12768:	mov	r0, #10
   1276c:	bl	113ac <putchar_unlocked@plt>
   12770:	movw	r0, #45572	; 0xb204
   12774:	movw	r4, #63756	; 0xf90c
   12778:	movw	r5, #40872	; 0x9fa8
   1277c:	movw	r8, #43328	; 0xa940
   12780:	mov	r1, #0
   12784:	mvn	r7, #71	; 0x47
   12788:	movt	r0, #2
   1278c:	movt	r4, #65535	; 0xffff
   12790:	movt	r5, #1
   12794:	movt	r8, #1
   12798:	str	r1, [r0]
   1279c:	mov	r0, #1
   127a0:	mov	r1, #0
   127a4:	add	r9, r5, r4
   127a8:	ldrb	sl, [r9, #1788]	; 0x6fc
   127ac:	tst	sl, #8
   127b0:	bne	12860 <tcgetattr@plt+0x149c>
   127b4:	ldr	r6, [r9, #1784]	; 0x6f8
   127b8:	subs	r1, r6, r1
   127bc:	clz	r2, r1
   127c0:	movwne	r1, #1
   127c4:	lsr	r2, r2, #5
   127c8:	orr	r2, r0, r2
   127cc:	tst	r2, #1
   127d0:	beq	127dc <tcgetattr@plt+0x1418>
   127d4:	orr	r0, r0, r1
   127d8:	b	127f8 <tcgetattr@plt+0x1434>
   127dc:	mov	r0, #10
   127e0:	bl	113ac <putchar_unlocked@plt>
   127e4:	movw	r0, #45572	; 0xb204
   127e8:	mov	r1, #0
   127ec:	movt	r0, #2
   127f0:	str	r1, [r0]
   127f4:	mov	r0, #1
   127f8:	ldr	r1, [r9, #1796]	; 0x704
   127fc:	cmp	r1, #0
   12800:	ldreq	r1, [r9, #1792]	; 0x700
   12804:	cmp	r7, #16
   12808:	bls	12938 <tcgetattr@plt+0x1574>
   1280c:	ldr	r2, [r8, r6, lsl #2]
   12810:	ldr	r2, [r2]
   12814:	and	r1, r2, r1
   12818:	ldr	r2, [r9, #1792]	; 0x700
   1281c:	cmp	r1, r2
   12820:	bne	1283c <tcgetattr@plt+0x1478>
   12824:	tst	sl, #2
   12828:	beq	1285c <tcgetattr@plt+0x1498>
   1282c:	ldr	r1, [r9, #1780]	; 0x6f4
   12830:	movw	r0, #43379	; 0xa973
   12834:	movt	r0, #1
   12838:	b	12854 <tcgetattr@plt+0x1490>
   1283c:	and	r1, sl, #5
   12840:	cmp	r1, #5
   12844:	bne	1285c <tcgetattr@plt+0x1498>
   12848:	ldr	r1, [r9, #1780]	; 0x6f4
   1284c:	movw	r0, #40620	; 0x9eac
   12850:	movt	r0, #1
   12854:	bl	13b74 <tcgetattr@plt+0x27b0>
   12858:	mov	r0, #0
   1285c:	mov	r1, r6
   12860:	add	r7, r7, #1
   12864:	adds	r4, r4, #20
   12868:	bne	127a4 <tcgetattr@plt+0x13e0>
   1286c:	tst	r0, #1
   12870:	bne	1287c <tcgetattr@plt+0x14b8>
   12874:	mov	r0, #10
   12878:	bl	113ac <putchar_unlocked@plt>
   1287c:	movw	r1, #45572	; 0xb204
   12880:	mov	r0, #0
   12884:	movt	r1, #2
   12888:	str	r0, [r1]
   1288c:	mov	r0, #0
   12890:	sub	sp, fp, #28
   12894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12898:	movw	r0, #45332	; 0xb114
   1289c:	movw	r2, #38832	; 0x97b0
   128a0:	mov	r1, #0
   128a4:	movt	r0, #2
   128a8:	movt	r2, #1
   128ac:	str	r1, [sp, #4]
   128b0:	movw	r1, #38750	; 0x975e
   128b4:	ldr	r3, [r0]
   128b8:	movw	r0, #45428	; 0xb174
   128bc:	str	r2, [sp]
   128c0:	movw	r2, #38818	; 0x97a2
   128c4:	movt	r1, #1
   128c8:	movt	r0, #2
   128cc:	movt	r2, #1
   128d0:	ldr	r0, [r0]
   128d4:	bl	15f58 <tcgetattr@plt+0x4b94>
   128d8:	mov	r0, #0
   128dc:	bl	11280 <exit@plt>
   128e0:	mov	r0, #0
   128e4:	bl	114c0 <tcgetattr@plt+0xfc>
   128e8:	bl	112c8 <__errno_location@plt>
   128ec:	ldr	r4, [r0]
   128f0:	mov	r0, #0
   128f4:	mov	r1, #3
   128f8:	mov	r2, r8
   128fc:	bl	158d8 <tcgetattr@plt+0x4514>
   12900:	movw	r2, #43379	; 0xa973
   12904:	mov	r3, r0
   12908:	mov	r0, #1
   1290c:	mov	r1, r4
   12910:	movt	r2, #1
   12914:	bl	11214 <error@plt>
   12918:	movw	r0, #40078	; 0x9c8e
   1291c:	movw	r1, #40084	; 0x9c94
   12920:	movw	r3, #40655	; 0x9ecf
   12924:	movw	r2, #2037	; 0x7f5
   12928:	movt	r0, #1
   1292c:	movt	r1, #1
   12930:	movt	r3, #1
   12934:	bl	113b8 <__assert_fail@plt>
   12938:	movw	r0, #40078	; 0x9c8e
   1293c:	movw	r1, #40084	; 0x9c94
   12940:	movw	r3, #40581	; 0x9e85
   12944:	movw	r2, #1953	; 0x7a1
   12948:	movt	r0, #1
   1294c:	movt	r1, #1
   12950:	movt	r3, #1
   12954:	bl	113b8 <__assert_fail@plt>
   12958:	bl	112c8 <__errno_location@plt>
   1295c:	ldr	r4, [r0]
   12960:	movw	r1, #39003	; 0x985b
   12964:	mov	r0, #0
   12968:	mov	r2, #5
   1296c:	movt	r1, #1
   12970:	bl	1116c <dcgettext@plt>
   12974:	mov	r5, r0
   12978:	mov	r0, #0
   1297c:	mov	r1, #3
   12980:	mov	r2, r8
   12984:	bl	158d8 <tcgetattr@plt+0x4514>
   12988:	mov	r3, r0
   1298c:	mov	r0, #1
   12990:	mov	r1, r4
   12994:	mov	r2, r5
   12998:	bl	11214 <error@plt>
   1299c:	movw	r1, #38785	; 0x9781
   129a0:	movt	r1, #1
   129a4:	b	129bc <tcgetattr@plt+0x15f8>
   129a8:	movw	r1, #38855	; 0x97c7
   129ac:	movt	r1, #1
   129b0:	b	129bc <tcgetattr@plt+0x15f8>
   129b4:	movw	r1, #38934	; 0x9816
   129b8:	movt	r1, #1
   129bc:	mov	r0, #0
   129c0:	mov	r2, #5
   129c4:	bl	1116c <dcgettext@plt>
   129c8:	mov	r2, r0
   129cc:	mov	r0, #1
   129d0:	mov	r1, #0
   129d4:	bl	11214 <error@plt>
   129d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129dc:	add	fp, sp, #28
   129e0:	sub	sp, sp, #92	; 0x5c
   129e4:	bfc	sp, #0, #4
   129e8:	cmp	r3, #2
   129ec:	str	r1, [sp, #36]	; 0x24
   129f0:	str	r0, [sp, #40]	; 0x28
   129f4:	blt	136f8 <tcgetattr@plt+0x2334>
   129f8:	ldr	r0, [fp, #8]
   129fc:	mov	r6, r3
   12a00:	mov	r9, r2
   12a04:	mov	r5, #1
   12a08:	str	r3, [sp, #52]	; 0x34
   12a0c:	str	r2, [sp, #56]	; 0x38
   12a10:	add	r1, r0, #17
   12a14:	str	r1, [sp, #24]
   12a18:	sub	r1, r3, #1
   12a1c:	str	r1, [sp, #44]	; 0x2c
   12a20:	add	r1, r0, #12
   12a24:	str	r1, [sp, #32]
   12a28:	add	r1, r0, #4
   12a2c:	add	r0, r0, #8
   12a30:	str	r1, [sp, #28]
   12a34:	str	r0, [sp, #48]	; 0x30
   12a38:	ldr	r0, [r9, r5, lsl #2]
   12a3c:	cmp	r0, #0
   12a40:	beq	12fd4 <tcgetattr@plt+0x1c10>
   12a44:	mov	sl, r0
   12a48:	movw	r1, #38849	; 0x97c1
   12a4c:	ldrb	r7, [sl], #1
   12a50:	movt	r1, #1
   12a54:	cmp	r7, #45	; 0x2d
   12a58:	movne	sl, r0
   12a5c:	mov	r0, sl
   12a60:	bl	1110c <strcmp@plt>
   12a64:	cmp	r0, #0
   12a68:	beq	12abc <tcgetattr@plt+0x16f8>
   12a6c:	ldr	r6, [fp, #8]
   12a70:	movw	r4, #63756	; 0xf90c
   12a74:	movw	r8, #39612	; 0x9abc
   12a78:	movt	r4, #65535	; 0xffff
   12a7c:	movt	r8, #1
   12a80:	mov	r9, r6
   12a84:	mov	r0, sl
   12a88:	mov	r1, r8
   12a8c:	bl	1110c <strcmp@plt>
   12a90:	cmp	r0, #0
   12a94:	beq	12ad4 <tcgetattr@plt+0x1710>
   12a98:	movw	r0, #40872	; 0x9fa8
   12a9c:	movt	r0, #1
   12aa0:	add	r0, r0, r4
   12aa4:	adds	r4, r4, #20
   12aa8:	ldr	r8, [r0, #1800]	; 0x708
   12aac:	bne	12a84 <tcgetattr@plt+0x16c0>
   12ab0:	mov	r1, #0
   12ab4:	mov	r6, r7
   12ab8:	b	12d44 <tcgetattr@plt+0x1980>
   12abc:	subs	r0, r7, #45	; 0x2d
   12ac0:	movw	r1, #45328	; 0xb110
   12ac4:	movwne	r0, #1
   12ac8:	movt	r1, #2
   12acc:	str	r0, [r1]
   12ad0:	b	12fd4 <tcgetattr@plt+0x1c10>
   12ad4:	mov	r6, r7
   12ad8:	cmp	r7, #45	; 0x2d
   12adc:	bne	12afc <tcgetattr@plt+0x1738>
   12ae0:	movw	r0, #40872	; 0x9fa8
   12ae4:	mov	r1, #0
   12ae8:	movt	r0, #1
   12aec:	add	r0, r0, r4
   12af0:	ldrb	r0, [r0, #1788]	; 0x6fc
   12af4:	tst	r0, #4
   12af8:	beq	12d38 <tcgetattr@plt+0x1974>
   12afc:	movw	r0, #40872	; 0x9fa8
   12b00:	movt	r0, #1
   12b04:	add	r0, r0, r4
   12b08:	ldr	r2, [r0, #1784]	; 0x6f8
   12b0c:	cmp	r2, #4
   12b10:	bhi	13788 <tcgetattr@plt+0x23c4>
   12b14:	add	r3, pc, #4
   12b18:	ldr	r1, [sp, #48]	; 0x30
   12b1c:	ldr	pc, [r3, r2, lsl #2]
   12b20:	andeq	r2, r1, r4, lsl sp
   12b24:	andeq	r2, r1, r4, lsr fp
   12b28:	andeq	r2, r1, r0, lsl sp
   12b2c:	andeq	r2, r1, r8, lsl #26
   12b30:	andeq	r2, r1, r0, asr #22
   12b34:	cmp	r9, #0
   12b38:	mov	r1, r9
   12b3c:	bne	12d14 <tcgetattr@plt+0x1950>
   12b40:	movw	r1, #39988	; 0x9c34
   12b44:	mov	r0, r8
   12b48:	movt	r1, #1
   12b4c:	bl	1110c <strcmp@plt>
   12b50:	cmp	r0, #0
   12b54:	beq	13020 <tcgetattr@plt+0x1c5c>
   12b58:	movw	r1, #39994	; 0x9c3a
   12b5c:	mov	r0, r8
   12b60:	movt	r1, #1
   12b64:	bl	1110c <strcmp@plt>
   12b68:	cmp	r0, #0
   12b6c:	beq	13020 <tcgetattr@plt+0x1c5c>
   12b70:	movw	r1, #40001	; 0x9c41
   12b74:	mov	r0, r8
   12b78:	movt	r1, #1
   12b7c:	bl	1110c <strcmp@plt>
   12b80:	cmp	r0, #0
   12b84:	beq	13194 <tcgetattr@plt+0x1dd0>
   12b88:	movw	r1, #39922	; 0x9bf2
   12b8c:	mov	r0, r8
   12b90:	movt	r1, #1
   12b94:	bl	1110c <strcmp@plt>
   12b98:	cmp	r0, #0
   12b9c:	beq	131b4 <tcgetattr@plt+0x1df0>
   12ba0:	movw	r1, #40006	; 0x9c46
   12ba4:	mov	r0, r8
   12ba8:	movt	r1, #1
   12bac:	bl	1110c <strcmp@plt>
   12bb0:	cmp	r0, #0
   12bb4:	beq	1321c <tcgetattr@plt+0x1e58>
   12bb8:	movw	r1, #40009	; 0x9c49
   12bbc:	mov	r0, r8
   12bc0:	movt	r1, #1
   12bc4:	bl	1110c <strcmp@plt>
   12bc8:	cmp	r0, #0
   12bcc:	beq	132fc <tcgetattr@plt+0x1f38>
   12bd0:	movw	r1, #40038	; 0x9c66
   12bd4:	mov	r0, r8
   12bd8:	movt	r1, #1
   12bdc:	bl	1110c <strcmp@plt>
   12be0:	cmp	r0, #0
   12be4:	beq	13448 <tcgetattr@plt+0x2084>
   12be8:	movw	r1, #40025	; 0x9c59
   12bec:	mov	r0, r8
   12bf0:	movt	r1, #1
   12bf4:	bl	1110c <strcmp@plt>
   12bf8:	cmp	r0, #0
   12bfc:	beq	13554 <tcgetattr@plt+0x2190>
   12c00:	movw	r1, #40031	; 0x9c5f
   12c04:	mov	r0, r8
   12c08:	movt	r1, #1
   12c0c:	bl	1110c <strcmp@plt>
   12c10:	cmp	r0, #0
   12c14:	beq	135d0 <tcgetattr@plt+0x220c>
   12c18:	movw	r1, #40021	; 0x9c55
   12c1c:	mov	r0, r8
   12c20:	movt	r1, #1
   12c24:	bl	1110c <strcmp@plt>
   12c28:	cmp	r0, #0
   12c2c:	beq	13580 <tcgetattr@plt+0x21bc>
   12c30:	movw	r1, #40014	; 0x9c4e
   12c34:	mov	r0, r8
   12c38:	movt	r1, #1
   12c3c:	bl	1110c <strcmp@plt>
   12c40:	cmp	r0, #0
   12c44:	beq	13580 <tcgetattr@plt+0x21bc>
   12c48:	movw	r1, #40045	; 0x9c6d
   12c4c:	mov	r0, r8
   12c50:	movt	r1, #1
   12c54:	bl	1110c <strcmp@plt>
   12c58:	cmp	r0, #0
   12c5c:	beq	13660 <tcgetattr@plt+0x229c>
   12c60:	movw	r1, #40053	; 0x9c75
   12c64:	mov	r0, r8
   12c68:	movt	r1, #1
   12c6c:	bl	1110c <strcmp@plt>
   12c70:	cmp	r0, #0
   12c74:	beq	136a8 <tcgetattr@plt+0x22e4>
   12c78:	movw	r1, #40058	; 0x9c7a
   12c7c:	mov	r0, r8
   12c80:	movt	r1, #1
   12c84:	bl	1110c <strcmp@plt>
   12c88:	cmp	r0, #0
   12c8c:	beq	1367c <tcgetattr@plt+0x22b8>
   12c90:	movw	r1, #40064	; 0x9c80
   12c94:	mov	r0, r8
   12c98:	movt	r1, #1
   12c9c:	bl	1110c <strcmp@plt>
   12ca0:	cmp	r0, #0
   12ca4:	beq	1367c <tcgetattr@plt+0x22b8>
   12ca8:	movw	r1, #40070	; 0x9c86
   12cac:	mov	r0, r8
   12cb0:	movt	r1, #1
   12cb4:	bl	1110c <strcmp@plt>
   12cb8:	cmp	r0, #0
   12cbc:	beq	136e4 <tcgetattr@plt+0x2320>
   12cc0:	movw	r1, #40074	; 0x9c8a
   12cc4:	mov	r0, r8
   12cc8:	movt	r1, #1
   12ccc:	bl	1110c <strcmp@plt>
   12cd0:	mov	r1, #1
   12cd4:	cmp	r0, #0
   12cd8:	bne	13228 <tcgetattr@plt+0x1e64>
   12cdc:	mov	r0, #3
   12ce0:	strb	r0, [r9, #17]
   12ce4:	movw	r0, #5503	; 0x157f
   12ce8:	strh	r0, [r9, #19]
   12cec:	ldr	r0, [r9]
   12cf0:	ldr	r2, [r9, #12]
   12cf4:	orr	r2, r2, #2576	; 0xa10
   12cf8:	bic	r0, r0, #2048	; 0x800
   12cfc:	str	r2, [r9, #12]
   12d00:	str	r0, [r9]
   12d04:	b	13228 <tcgetattr@plt+0x1e64>
   12d08:	ldr	r1, [sp, #32]
   12d0c:	b	12d14 <tcgetattr@plt+0x1950>
   12d10:	ldr	r1, [sp, #28]
   12d14:	ldr	r2, [r0, #1792]	; 0x700
   12d18:	ldr	r0, [r0, #1796]	; 0x704
   12d1c:	ldr	r3, [r1]
   12d20:	cmp	r6, #45	; 0x2d
   12d24:	bic	r0, r3, r0
   12d28:	orrne	r0, r0, r2
   12d2c:	biceq	r0, r0, r2
   12d30:	str	r0, [r1]
   12d34:	mov	r1, #1
   12d38:	ldr	r0, [fp, #16]
   12d3c:	mov	r2, #1
   12d40:	strb	r2, [r0]
   12d44:	ldr	r9, [sp, #56]	; 0x38
   12d48:	cmp	r1, #0
   12d4c:	cmpeq	r6, #45	; 0x2d
   12d50:	beq	1373c <tcgetattr@plt+0x2378>
   12d54:	movw	r6, #42672	; 0xa6b0
   12d58:	cmp	r1, #0
   12d5c:	movt	r6, #1
   12d60:	beq	12d6c <tcgetattr@plt+0x19a8>
   12d64:	ldr	r6, [sp, #52]	; 0x34
   12d68:	b	12fd4 <tcgetattr@plt+0x1c10>
   12d6c:	movw	r7, #40128	; 0x9cc0
   12d70:	mov	r4, #0
   12d74:	movt	r7, #1
   12d78:	mov	r0, sl
   12d7c:	mov	r1, r7
   12d80:	bl	1110c <strcmp@plt>
   12d84:	cmp	r0, #0
   12d88:	beq	12ea8 <tcgetattr@plt+0x1ae4>
   12d8c:	add	r0, r6, r4
   12d90:	add	r4, r4, #12
   12d94:	ldr	r7, [r0, #12]
   12d98:	cmp	r4, #216	; 0xd8
   12d9c:	bne	12d78 <tcgetattr@plt+0x19b4>
   12da0:	movw	r1, #39543	; 0x9a77
   12da4:	mov	r0, sl
   12da8:	movt	r1, #1
   12dac:	bl	1110c <strcmp@plt>
   12db0:	cmp	r0, #0
   12db4:	beq	12fe4 <tcgetattr@plt+0x1c20>
   12db8:	movw	r1, #39550	; 0x9a7e
   12dbc:	mov	r0, sl
   12dc0:	movt	r1, #1
   12dc4:	bl	1110c <strcmp@plt>
   12dc8:	ldr	r6, [sp, #52]	; 0x34
   12dcc:	cmp	r0, #0
   12dd0:	beq	13040 <tcgetattr@plt+0x1c7c>
   12dd4:	movw	r1, #39557	; 0x9a85
   12dd8:	mov	r0, sl
   12ddc:	movt	r1, #1
   12de0:	bl	1110c <strcmp@plt>
   12de4:	cmp	r0, #0
   12de8:	beq	13100 <tcgetattr@plt+0x1d3c>
   12dec:	movw	r1, #39562	; 0x9a8a
   12df0:	mov	r0, sl
   12df4:	movt	r1, #1
   12df8:	bl	1110c <strcmp@plt>
   12dfc:	cmp	r0, #0
   12e00:	beq	13084 <tcgetattr@plt+0x1cc0>
   12e04:	movw	r1, #39567	; 0x9a8f
   12e08:	mov	r0, sl
   12e0c:	movt	r1, #1
   12e10:	bl	1110c <strcmp@plt>
   12e14:	cmp	r0, #0
   12e18:	beq	13084 <tcgetattr@plt+0x1cc0>
   12e1c:	movw	r1, #39575	; 0x9a97
   12e20:	mov	r0, sl
   12e24:	movt	r1, #1
   12e28:	bl	1110c <strcmp@plt>
   12e2c:	cmp	r0, #0
   12e30:	beq	131e0 <tcgetattr@plt+0x1e1c>
   12e34:	movw	r1, #39580	; 0x9a9c
   12e38:	mov	r0, sl
   12e3c:	movt	r1, #1
   12e40:	bl	1110c <strcmp@plt>
   12e44:	cmp	r0, #0
   12e48:	beq	13230 <tcgetattr@plt+0x1e6c>
   12e4c:	movw	r1, #39544	; 0x9a78
   12e50:	mov	r0, sl
   12e54:	movt	r1, #1
   12e58:	bl	1110c <strcmp@plt>
   12e5c:	cmp	r0, #0
   12e60:	beq	1341c <tcgetattr@plt+0x2058>
   12e64:	mov	r0, sl
   12e68:	bl	13b28 <tcgetattr@plt+0x2764>
   12e6c:	cmn	r0, #1
   12e70:	beq	13464 <tcgetattr@plt+0x20a0>
   12e74:	ldr	r0, [sp, #40]	; 0x28
   12e78:	cmp	r0, #0
   12e7c:	bne	12fd4 <tcgetattr@plt+0x1c10>
   12e80:	mov	r0, sl
   12e84:	bl	13b28 <tcgetattr@plt+0x2764>
   12e88:	ldr	r8, [fp, #8]
   12e8c:	mov	r4, r0
   12e90:	mov	r1, r4
   12e94:	mov	r0, r8
   12e98:	bl	112b0 <cfsetispeed@plt>
   12e9c:	mov	r0, r8
   12ea0:	mov	r1, r4
   12ea4:	b	13070 <tcgetattr@plt+0x1cac>
   12ea8:	ldr	r0, [sp, #44]	; 0x2c
   12eac:	cmp	r5, r0
   12eb0:	addne	r5, r5, #1
   12eb4:	ldrne	r6, [r9, r5, lsl #2]
   12eb8:	cmpne	r6, #0
   12ebc:	beq	13700 <tcgetattr@plt+0x233c>
   12ec0:	movw	r1, #40195	; 0x9d03
   12ec4:	mov	r0, r7
   12ec8:	movt	r1, #1
   12ecc:	bl	1110c <strcmp@plt>
   12ed0:	cmp	r0, #0
   12ed4:	beq	12f54 <tcgetattr@plt+0x1b90>
   12ed8:	movw	r1, #40199	; 0x9d07
   12edc:	mov	r0, r7
   12ee0:	movt	r1, #1
   12ee4:	bl	1110c <strcmp@plt>
   12ee8:	cmp	r0, #0
   12eec:	beq	12f54 <tcgetattr@plt+0x1b90>
   12ef0:	ldrb	r8, [r6]
   12ef4:	mov	r7, #0
   12ef8:	cmp	r8, #0
   12efc:	beq	12fa4 <tcgetattr@plt+0x1be0>
   12f00:	ldrb	sl, [r6, #1]
   12f04:	cmp	sl, #0
   12f08:	beq	1318c <tcgetattr@plt+0x1dc8>
   12f0c:	movw	r1, #40204	; 0x9d0c
   12f10:	mov	r0, r6
   12f14:	movt	r1, #1
   12f18:	bl	1110c <strcmp@plt>
   12f1c:	cmp	r0, #0
   12f20:	beq	12fa4 <tcgetattr@plt+0x1be0>
   12f24:	movw	r1, #40207	; 0x9d0f
   12f28:	mov	r0, r6
   12f2c:	movt	r1, #1
   12f30:	bl	1110c <strcmp@plt>
   12f34:	cmp	r0, #0
   12f38:	beq	12fa4 <tcgetattr@plt+0x1be0>
   12f3c:	cmp	r8, #94	; 0x5e
   12f40:	bne	12f54 <tcgetattr@plt+0x1b90>
   12f44:	and	r7, sl, #159	; 0x9f
   12f48:	cmp	sl, #63	; 0x3f
   12f4c:	movweq	r7, #127	; 0x7f
   12f50:	b	12fa4 <tcgetattr@plt+0x1be0>
   12f54:	movw	r1, #40216	; 0x9d18
   12f58:	mov	r0, #0
   12f5c:	mov	r2, #5
   12f60:	movt	r1, #1
   12f64:	bl	1116c <dcgettext@plt>
   12f68:	movw	r2, #40213	; 0x9d15
   12f6c:	mov	r1, #255	; 0xff
   12f70:	str	r0, [sp, #12]
   12f74:	mov	r0, r6
   12f78:	mov	r3, #0
   12f7c:	str	r1, [sp]
   12f80:	mov	r1, #0
   12f84:	movt	r2, #1
   12f88:	str	r2, [sp, #8]
   12f8c:	str	r1, [sp, #4]
   12f90:	str	r1, [sp, #16]
   12f94:	mov	r1, #0
   12f98:	mov	r2, #0
   12f9c:	bl	164f4 <tcgetattr@plt+0x5130>
   12fa0:	mov	r7, r0
   12fa4:	movw	r0, #42672	; 0xa6b0
   12fa8:	ldr	r1, [fp, #8]
   12fac:	ldr	r6, [sp, #52]	; 0x34
   12fb0:	ldr	r9, [sp, #56]	; 0x38
   12fb4:	movt	r0, #1
   12fb8:	add	r0, r0, r4
   12fbc:	ldr	r0, [r0, #8]
   12fc0:	add	r0, r1, r0
   12fc4:	mov	r1, #1
   12fc8:	strb	r7, [r0, #17]
   12fcc:	ldr	r0, [fp, #16]
   12fd0:	strb	r1, [r0]
   12fd4:	add	r5, r5, #1
   12fd8:	cmp	r5, r6
   12fdc:	blt	12a38 <tcgetattr@plt+0x1674>
   12fe0:	b	136f8 <tcgetattr@plt+0x2334>
   12fe4:	ldr	r0, [sp, #44]	; 0x2c
   12fe8:	ldr	r6, [sp, #52]	; 0x34
   12fec:	cmp	r5, r0
   12ff0:	addne	r5, r5, #1
   12ff4:	ldrne	r0, [r9, r5, lsl #2]
   12ff8:	cmpne	r0, #0
   12ffc:	beq	13700 <tcgetattr@plt+0x233c>
   13000:	ldr	r1, [sp, #40]	; 0x28
   13004:	cmp	r1, #0
   13008:	bne	12fd4 <tcgetattr@plt+0x1c10>
   1300c:	bl	13b28 <tcgetattr@plt+0x2764>
   13010:	mov	r1, r0
   13014:	ldr	r0, [fp, #8]
   13018:	bl	112b0 <cfsetispeed@plt>
   1301c:	b	13074 <tcgetattr@plt+0x1cb0>
   13020:	ldr	r1, [sp, #48]	; 0x30
   13024:	mov	r6, r7
   13028:	cmp	r7, #45	; 0x2d
   1302c:	ldr	r0, [r1]
   13030:	bne	13180 <tcgetattr@plt+0x1dbc>
   13034:	bic	r0, r0, #304	; 0x130
   13038:	orr	r0, r0, #48	; 0x30
   1303c:	b	12d30 <tcgetattr@plt+0x196c>
   13040:	ldr	r0, [sp, #44]	; 0x2c
   13044:	cmp	r5, r0
   13048:	addne	r5, r5, #1
   1304c:	ldrne	r0, [r9, r5, lsl #2]
   13050:	cmpne	r0, #0
   13054:	beq	13700 <tcgetattr@plt+0x233c>
   13058:	ldr	r1, [sp, #40]	; 0x28
   1305c:	cmp	r1, #0
   13060:	bne	12fd4 <tcgetattr@plt+0x1c10>
   13064:	bl	13b28 <tcgetattr@plt+0x2764>
   13068:	mov	r1, r0
   1306c:	ldr	r0, [fp, #8]
   13070:	bl	111b4 <cfsetospeed@plt>
   13074:	ldr	r0, [fp, #12]
   13078:	mov	r1, #1
   1307c:	strb	r1, [r0]
   13080:	b	12fcc <tcgetattr@plt+0x1c08>
   13084:	ldr	r0, [sp, #44]	; 0x2c
   13088:	cmp	r5, r0
   1308c:	addne	r5, r5, #1
   13090:	ldrne	r4, [r9, r5, lsl #2]
   13094:	cmpne	r4, #0
   13098:	beq	13700 <tcgetattr@plt+0x233c>
   1309c:	ldr	r0, [sp, #40]	; 0x28
   130a0:	cmp	r0, #0
   130a4:	bne	12fd4 <tcgetattr@plt+0x1c10>
   130a8:	movw	r1, #40216	; 0x9d18
   130ac:	mov	r0, #0
   130b0:	mov	r2, #5
   130b4:	movt	r1, #1
   130b8:	bl	1116c <dcgettext@plt>
   130bc:	movw	r2, #40213	; 0x9d15
   130c0:	mvn	r1, #-2147483648	; 0x80000000
   130c4:	str	r0, [sp, #12]
   130c8:	mov	r0, r4
   130cc:	mov	r3, #0
   130d0:	str	r1, [sp]
   130d4:	mov	r1, #0
   130d8:	movt	r2, #1
   130dc:	str	r2, [sp, #8]
   130e0:	str	r1, [sp, #4]
   130e4:	str	r1, [sp, #16]
   130e8:	mov	r1, #0
   130ec:	mov	r2, #0
   130f0:	bl	164f4 <tcgetattr@plt+0x5130>
   130f4:	mov	r1, r0
   130f8:	mvn	r0, #0
   130fc:	b	13174 <tcgetattr@plt+0x1db0>
   13100:	ldr	r0, [sp, #44]	; 0x2c
   13104:	cmp	r5, r0
   13108:	addne	r5, r5, #1
   1310c:	ldrne	r4, [r9, r5, lsl #2]
   13110:	cmpne	r4, #0
   13114:	beq	13700 <tcgetattr@plt+0x233c>
   13118:	ldr	r0, [sp, #40]	; 0x28
   1311c:	cmp	r0, #0
   13120:	bne	12fd4 <tcgetattr@plt+0x1c10>
   13124:	movw	r1, #40216	; 0x9d18
   13128:	mov	r0, #0
   1312c:	mov	r2, #5
   13130:	movt	r1, #1
   13134:	bl	1116c <dcgettext@plt>
   13138:	movw	r2, #40213	; 0x9d15
   1313c:	mvn	r1, #-2147483648	; 0x80000000
   13140:	str	r0, [sp, #12]
   13144:	mov	r0, r4
   13148:	mov	r3, #0
   1314c:	str	r1, [sp]
   13150:	mov	r1, #0
   13154:	movt	r2, #1
   13158:	str	r2, [sp, #8]
   1315c:	str	r1, [sp, #4]
   13160:	str	r1, [sp, #16]
   13164:	mov	r1, #0
   13168:	mov	r2, #0
   1316c:	bl	164f4 <tcgetattr@plt+0x5130>
   13170:	mvn	r1, #0
   13174:	ldr	r2, [sp, #36]	; 0x24
   13178:	bl	13830 <tcgetattr@plt+0x246c>
   1317c:	b	12fd4 <tcgetattr@plt+0x1c10>
   13180:	bic	r0, r0, #816	; 0x330
   13184:	orr	r0, r0, #288	; 0x120
   13188:	b	12d30 <tcgetattr@plt+0x196c>
   1318c:	mov	r7, r8
   13190:	b	12fa4 <tcgetattr@plt+0x1be0>
   13194:	ldr	r1, [sp, #48]	; 0x30
   13198:	mov	r6, r7
   1319c:	cmp	r7, #45	; 0x2d
   131a0:	ldr	r0, [r1]
   131a4:	beq	13034 <tcgetattr@plt+0x1c70>
   131a8:	bic	r0, r0, #816	; 0x330
   131ac:	orr	r0, r0, #800	; 0x320
   131b0:	b	12d30 <tcgetattr@plt+0x196c>
   131b4:	ldr	r0, [r9]
   131b8:	mov	r6, r7
   131bc:	cmp	r7, #45	; 0x2d
   131c0:	bne	132e4 <tcgetattr@plt+0x1f20>
   131c4:	mov	r1, #4
   131c8:	bfi	r0, r1, #6, #3
   131cc:	str	r0, [r9]
   131d0:	ldr	r0, [r9, #4]
   131d4:	bic	r0, r0, #44	; 0x2c
   131d8:	orr	r0, r0, #4
   131dc:	b	132f4 <tcgetattr@plt+0x1f30>
   131e0:	ldr	r0, [sp, #40]	; 0x28
   131e4:	cmp	r0, #0
   131e8:	bne	12fd4 <tcgetattr@plt+0x1c10>
   131ec:	bl	137ac <tcgetattr@plt+0x23e8>
   131f0:	movw	r1, #45568	; 0xb200
   131f4:	movt	r1, #2
   131f8:	str	r0, [r1]
   131fc:	movw	r1, #45572	; 0xb204
   13200:	mov	r0, #0
   13204:	movt	r1, #2
   13208:	str	r0, [r1]
   1320c:	ldr	r1, [sp, #36]	; 0x24
   13210:	mov	r0, #0
   13214:	bl	138fc <tcgetattr@plt+0x2538>
   13218:	b	12fd4 <tcgetattr@plt+0x1c10>
   1321c:	movw	r0, #5503	; 0x157f
   13220:	strh	r0, [r9, #19]
   13224:	mov	r1, #1
   13228:	mov	r6, r7
   1322c:	b	12d38 <tcgetattr@plt+0x1974>
   13230:	ldr	r0, [sp, #44]	; 0x2c
   13234:	cmp	r5, r0
   13238:	addne	r5, r5, #1
   1323c:	ldrne	r4, [r9, r5, lsl #2]
   13240:	cmpne	r4, #0
   13244:	beq	13700 <tcgetattr@plt+0x233c>
   13248:	movw	r1, #40216	; 0x9d18
   1324c:	mov	r0, #0
   13250:	mov	r2, #5
   13254:	movt	r1, #1
   13258:	bl	1116c <dcgettext@plt>
   1325c:	movw	r2, #40213	; 0x9d15
   13260:	mvn	r1, #0
   13264:	str	r0, [sp, #12]
   13268:	mov	r0, r4
   1326c:	mov	r3, #0
   13270:	str	r1, [sp]
   13274:	mov	r1, #0
   13278:	movt	r2, #1
   1327c:	str	r2, [sp, #8]
   13280:	str	r1, [sp, #4]
   13284:	str	r1, [sp, #16]
   13288:	mov	r1, #0
   1328c:	mov	r2, #0
   13290:	bl	164f4 <tcgetattr@plt+0x5130>
   13294:	ldr	r1, [fp, #8]
   13298:	cmp	r0, #256	; 0x100
   1329c:	strb	r0, [r1, #16]
   132a0:	bcc	132d8 <tcgetattr@plt+0x1f14>
   132a4:	movw	r1, #39585	; 0x9aa1
   132a8:	mov	r0, #0
   132ac:	mov	r2, #5
   132b0:	movt	r1, #1
   132b4:	bl	1116c <dcgettext@plt>
   132b8:	mov	r4, r0
   132bc:	ldr	r0, [r9, r5, lsl #2]
   132c0:	bl	15a6c <tcgetattr@plt+0x46a8>
   132c4:	mov	r3, r0
   132c8:	mov	r0, #0
   132cc:	mov	r1, #0
   132d0:	mov	r2, r4
   132d4:	bl	11214 <error@plt>
   132d8:	ldr	r0, [fp, #16]
   132dc:	mov	r1, #1
   132e0:	b	12fd0 <tcgetattr@plt+0x1c0c>
   132e4:	bic	r0, r0, #256	; 0x100
   132e8:	str	r0, [r9]
   132ec:	ldr	r0, [r9, #4]
   132f0:	bic	r0, r0, #4
   132f4:	str	r0, [r9, #4]
   132f8:	b	12d34 <tcgetattr@plt+0x1970>
   132fc:	movw	r3, #42672	; 0xa6b0
   13300:	mov	r0, #0
   13304:	movt	r3, #1
   13308:	add	r1, r3, r0
   1330c:	add	r0, r0, #12
   13310:	ldr	r2, [r1, #8]
   13314:	ldrb	r1, [r1, #4]
   13318:	cmp	r0, #216	; 0xd8
   1331c:	add	r2, r9, r2
   13320:	strb	r1, [r2, #17]
   13324:	bne	13308 <tcgetattr@plt+0x1f44>
   13328:	movw	r0, #63756	; 0xf90c
   1332c:	mov	r6, r7
   13330:	movt	r0, #65535	; 0xffff
   13334:	movw	r1, #40872	; 0x9fa8
   13338:	movt	r1, #1
   1333c:	add	r1, r1, r0
   13340:	ldrb	r2, [r1, #1788]	; 0x6fc
   13344:	tst	r2, #16
   13348:	bne	1340c <tcgetattr@plt+0x2048>
   1334c:	tst	r2, #1
   13350:	bne	13390 <tcgetattr@plt+0x1fcc>
   13354:	tst	r2, #2
   13358:	beq	1340c <tcgetattr@plt+0x2048>
   1335c:	ldr	r3, [r1, #1784]	; 0x6f8
   13360:	cmp	r3, #4
   13364:	bhi	13788 <tcgetattr@plt+0x23c4>
   13368:	add	r7, pc, #4
   1336c:	ldr	r2, [sp, #48]	; 0x30
   13370:	ldr	pc, [r7, r3, lsl #2]
   13374:	strdeq	r3, [r1], -r4
   13378:	andeq	r3, r1, r8, lsl #7
   1337c:	andeq	r3, r1, r8, ror #7
   13380:	strdeq	r3, [r1], -r0
   13384:	andeq	r3, r1, r8, ror #14
   13388:	mov	r2, r9
   1338c:	b	133f4 <tcgetattr@plt+0x2030>
   13390:	ldr	r3, [r1, #1784]	; 0x6f8
   13394:	cmp	r3, #4
   13398:	bhi	13788 <tcgetattr@plt+0x23c4>
   1339c:	add	r7, pc, #4
   133a0:	ldr	r2, [sp, #48]	; 0x30
   133a4:	ldr	pc, [r7, r3, lsl #2]
   133a8:	ldrdeq	r3, [r1], -r0
   133ac:			; <UNDEFINED> instruction: 0x000133bc
   133b0:	andeq	r3, r1, r4, asr #7
   133b4:	andeq	r3, r1, ip, asr #7
   133b8:	andeq	r3, r1, ip, lsl #15
   133bc:	mov	r2, r9
   133c0:	b	133d0 <tcgetattr@plt+0x200c>
   133c4:	ldr	r2, [sp, #28]
   133c8:	b	133d0 <tcgetattr@plt+0x200c>
   133cc:	ldr	r2, [sp, #32]
   133d0:	ldr	r3, [r1, #1792]	; 0x700
   133d4:	ldr	r1, [r1, #1796]	; 0x704
   133d8:	ldr	r7, [r2]
   133dc:	bic	r1, r7, r1
   133e0:	orr	r1, r1, r3
   133e4:	b	13408 <tcgetattr@plt+0x2044>
   133e8:	ldr	r2, [sp, #28]
   133ec:	b	133f4 <tcgetattr@plt+0x2030>
   133f0:	ldr	r2, [sp, #32]
   133f4:	ldr	r3, [r1, #1792]	; 0x700
   133f8:	ldr	r1, [r1, #1796]	; 0x704
   133fc:	ldr	r7, [r2]
   13400:	bic	r1, r7, r1
   13404:	bic	r1, r1, r3
   13408:	str	r1, [r2]
   1340c:	adds	r0, r0, #20
   13410:	mov	r1, #1
   13414:	bne	13334 <tcgetattr@plt+0x1f70>
   13418:	b	12d38 <tcgetattr@plt+0x1974>
   1341c:	ldr	r0, [sp, #40]	; 0x28
   13420:	cmp	r0, #0
   13424:	bne	12fd4 <tcgetattr@plt+0x1c10>
   13428:	bl	137ac <tcgetattr@plt+0x23e8>
   1342c:	movw	r1, #45568	; 0xb200
   13430:	movt	r1, #2
   13434:	str	r0, [r1]
   13438:	ldr	r0, [fp, #8]
   1343c:	mov	r1, #0
   13440:	bl	139e4 <tcgetattr@plt+0x2620>
   13444:	b	12fd4 <tcgetattr@plt+0x1c10>
   13448:	ldr	r1, [sp, #32]
   1344c:	cmp	r7, #45	; 0x2d
   13450:	mov	r6, r7
   13454:	ldr	r0, [r1]
   13458:	bicne	r0, r0, #2
   1345c:	orreq	r0, r0, #2
   13460:	b	12d30 <tcgetattr@plt+0x196c>
   13464:	mov	r4, #0
   13468:	bl	112c8 <__errno_location@plt>
   1346c:	mov	r8, r0
   13470:	mov	r7, sl
   13474:	mov	r0, #0
   13478:	add	r1, sp, #60	; 0x3c
   1347c:	mov	r2, #16
   13480:	str	r0, [r8]
   13484:	mov	r0, r7
   13488:	bl	1128c <strtoul@plt>
   1348c:	ldr	r1, [r8]
   13490:	cmp	r1, #0
   13494:	bne	1375c <tcgetattr@plt+0x2398>
   13498:	ldr	r1, [sp, #60]	; 0x3c
   1349c:	cmp	r1, r7
   134a0:	beq	1375c <tcgetattr@plt+0x2398>
   134a4:	ldrb	r2, [r1]
   134a8:	cmp	r2, #58	; 0x3a
   134ac:	bne	1375c <tcgetattr@plt+0x2398>
   134b0:	add	r2, sp, #64	; 0x40
   134b4:	add	r7, r1, #1
   134b8:	str	r0, [r2, r4, lsl #2]
   134bc:	add	r4, r4, #1
   134c0:	cmp	r4, #4
   134c4:	bcc	13474 <tcgetattr@plt+0x20b0>
   134c8:	add	r0, sp, #64	; 0x40
   134cc:	mov	r4, #0
   134d0:	vld1.64	{d16-d17}, [r0 :128]
   134d4:	ldr	r0, [fp, #8]
   134d8:	vst1.32	{d16-d17}, [r0]
   134dc:	mov	r0, #0
   134e0:	add	r1, sp, #60	; 0x3c
   134e4:	mov	r2, #16
   134e8:	str	r0, [r8]
   134ec:	mov	r0, r7
   134f0:	bl	1128c <strtoul@plt>
   134f4:	ldr	r1, [r8]
   134f8:	cmp	r1, #0
   134fc:	bne	1375c <tcgetattr@plt+0x2398>
   13500:	subs	r2, r4, #31
   13504:	movwne	r2, #58	; 0x3a
   13508:	cmp	r0, #255	; 0xff
   1350c:	bhi	1375c <tcgetattr@plt+0x2398>
   13510:	ldr	r1, [sp, #60]	; 0x3c
   13514:	cmp	r1, r7
   13518:	beq	1375c <tcgetattr@plt+0x2398>
   1351c:	ldrb	r3, [r1]
   13520:	uxtb	r2, r2
   13524:	cmp	r3, r2
   13528:	bne	1375c <tcgetattr@plt+0x2398>
   1352c:	ldr	r2, [sp, #24]
   13530:	add	r7, r1, #1
   13534:	strb	r0, [r2, r4]
   13538:	add	r4, r4, #1
   1353c:	cmp	r4, #32
   13540:	bcc	134dc <tcgetattr@plt+0x2118>
   13544:	ldr	r0, [fp, #16]
   13548:	mov	r1, #1
   1354c:	strb	r1, [r0]
   13550:	b	12d64 <tcgetattr@plt+0x19a0>
   13554:	ldr	r0, [sp, #48]	; 0x30
   13558:	mov	r6, r7
   1355c:	cmp	r7, #45	; 0x2d
   13560:	ldr	r0, [r0]
   13564:	bic	r0, r0, #304	; 0x130
   13568:	bne	13604 <tcgetattr@plt+0x2240>
   1356c:	orr	r0, r0, #288	; 0x120
   13570:	str	r0, [r9, #8]
   13574:	ldr	r0, [r9]
   13578:	orr	r0, r0, #32
   1357c:	b	13674 <tcgetattr@plt+0x22b0>
   13580:	ldrb	r1, [r8]
   13584:	eor	r2, r7, #45	; 0x2d
   13588:	mov	r6, r7
   1358c:	subs	r0, r1, #99	; 0x63
   13590:	eor	r1, r1, #114	; 0x72
   13594:	movwne	r0, #1
   13598:	orrs	r1, r1, r2
   1359c:	subne	r1, r6, #45	; 0x2d
   135a0:	clzne	r1, r1
   135a4:	lsrne	r1, r1, #5
   135a8:	orrsne	r0, r1, r0
   135ac:	bne	13618 <tcgetattr@plt+0x2254>
   135b0:	ldm	r9, {r0, r1}
   135b4:	ldr	r2, [r9, #12]
   135b8:	movw	r3, #1318	; 0x526
   135bc:	orr	r0, r0, r3
   135c0:	orr	r1, r1, #1
   135c4:	stm	r9, {r0, r1}
   135c8:	orr	r0, r2, #3
   135cc:	b	1363c <tcgetattr@plt+0x2278>
   135d0:	ldr	r0, [sp, #48]	; 0x30
   135d4:	mov	r6, r7
   135d8:	cmp	r7, #45	; 0x2d
   135dc:	ldr	r0, [r0]
   135e0:	bic	r0, r0, #304	; 0x130
   135e4:	bne	13644 <tcgetattr@plt+0x2280>
   135e8:	orr	r0, r0, #288	; 0x120
   135ec:	str	r0, [r9, #8]
   135f0:	ldm	r9, {r0, r1}
   135f4:	orr	r0, r0, #32
   135f8:	str	r0, [r9]
   135fc:	orr	r0, r1, #1
   13600:	b	132f4 <tcgetattr@plt+0x1f30>
   13604:	orr	r0, r0, #48	; 0x30
   13608:	str	r0, [r9, #8]
   1360c:	ldr	r0, [r9]
   13610:	bic	r0, r0, #32
   13614:	b	13674 <tcgetattr@plt+0x22b0>
   13618:	mov	r0, #0
   1361c:	str	r0, [r9]
   13620:	mov	r0, #256	; 0x100
   13624:	strh	r0, [r9, #22]
   13628:	ldr	r0, [r9, #4]
   1362c:	ldr	r1, [r9, #12]
   13630:	bic	r0, r0, #1
   13634:	str	r0, [r9, #4]
   13638:	bic	r0, r1, #7
   1363c:	str	r0, [r9, #12]
   13640:	b	12d34 <tcgetattr@plt+0x1970>
   13644:	orr	r0, r0, #48	; 0x30
   13648:	str	r0, [r9, #8]
   1364c:	ldm	r9, {r0, r1}
   13650:	bic	r0, r0, #32
   13654:	str	r0, [r9]
   13658:	bic	r0, r1, #1
   1365c:	b	132f4 <tcgetattr@plt+0x1f30>
   13660:	ldr	r0, [r9]
   13664:	cmp	r7, #45	; 0x2d
   13668:	mov	r6, r7
   1366c:	orreq	r0, r0, #2048	; 0x800
   13670:	bicne	r0, r0, #2048	; 0x800
   13674:	str	r0, [r9]
   13678:	b	12d34 <tcgetattr@plt+0x1970>
   1367c:	ldr	r0, [sp, #32]
   13680:	mov	r6, r7
   13684:	cmp	r7, #45	; 0x2d
   13688:	ldr	r0, [r0]
   1368c:	bne	136c4 <tcgetattr@plt+0x2300>
   13690:	bic	r0, r0, #4
   13694:	str	r0, [r9, #12]
   13698:	ldm	r9, {r0, r1}
   1369c:	bic	r0, r0, #512	; 0x200
   136a0:	bic	r1, r1, #2
   136a4:	b	136d8 <tcgetattr@plt+0x2314>
   136a8:	ldr	r1, [sp, #28]
   136ac:	cmp	r7, #45	; 0x2d
   136b0:	mov	r6, r7
   136b4:	ldr	r0, [r1]
   136b8:	bicne	r0, r0, #6144	; 0x1800
   136bc:	orreq	r0, r0, #6144	; 0x1800
   136c0:	b	12d30 <tcgetattr@plt+0x196c>
   136c4:	orr	r0, r0, #4
   136c8:	str	r0, [r9, #12]
   136cc:	ldm	r9, {r0, r1}
   136d0:	orr	r0, r0, #512	; 0x200
   136d4:	orr	r1, r1, #2
   136d8:	str	r0, [r9]
   136dc:	str	r1, [r9, #4]
   136e0:	b	12d34 <tcgetattr@plt+0x1970>
   136e4:	ldr	r1, [sp, #32]
   136e8:	ldr	r0, [r1]
   136ec:	orr	r0, r0, #2576	; 0xa10
   136f0:	str	r0, [r1]
   136f4:	b	13224 <tcgetattr@plt+0x1e60>
   136f8:	sub	sp, fp, #28
   136fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13700:	movw	r1, #39520	; 0x9a60
   13704:	movt	r1, #1
   13708:	mov	r0, #0
   1370c:	mov	r2, #5
   13710:	bl	1116c <dcgettext@plt>
   13714:	mov	r4, r0
   13718:	mov	r0, sl
   1371c:	bl	15a6c <tcgetattr@plt+0x46a8>
   13720:	mov	r3, r0
   13724:	mov	r0, #0
   13728:	mov	r1, #0
   1372c:	mov	r2, r4
   13730:	bl	11214 <error@plt>
   13734:	mov	r0, #1
   13738:	bl	114c0 <tcgetattr@plt+0xfc>
   1373c:	movw	r1, #39500	; 0x9a4c
   13740:	mov	r0, #0
   13744:	mov	r2, #5
   13748:	movt	r1, #1
   1374c:	bl	1116c <dcgettext@plt>
   13750:	mov	r4, r0
   13754:	sub	r0, sl, #1
   13758:	b	1371c <tcgetattr@plt+0x2358>
   1375c:	movw	r1, #39500	; 0x9a4c
   13760:	movt	r1, #1
   13764:	b	13708 <tcgetattr@plt+0x2344>
   13768:	movw	r0, #40078	; 0x9c8e
   1376c:	movw	r1, #40084	; 0x9c94
   13770:	movw	r3, #40095	; 0x9c9f
   13774:	movw	r2, #2258	; 0x8d2
   13778:	movt	r0, #1
   1377c:	movt	r1, #1
   13780:	movt	r3, #1
   13784:	bl	113b8 <__assert_fail@plt>
   13788:	bl	11394 <abort@plt>
   1378c:	movw	r0, #40078	; 0x9c8e
   13790:	movw	r1, #40084	; 0x9c94
   13794:	movw	r3, #40095	; 0x9c9f
   13798:	movw	r2, #2252	; 0x8cc
   1379c:	movt	r0, #1
   137a0:	movt	r1, #1
   137a4:	movt	r3, #1
   137a8:	bl	113b8 <__assert_fail@plt>
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	sub	sp, sp, #16
   137b8:	add	r2, sp, #8
   137bc:	mov	r0, #1
   137c0:	movw	r1, #21523	; 0x5413
   137c4:	bl	111c0 <ioctl@plt>
   137c8:	cmp	r0, #0
   137cc:	bne	137dc <tcgetattr@plt+0x2418>
   137d0:	ldrh	r0, [sp, #10]
   137d4:	cmp	r0, #0
   137d8:	bne	13828 <tcgetattr@plt+0x2464>
   137dc:	movw	r0, #40529	; 0x9e51
   137e0:	movt	r0, #1
   137e4:	bl	1122c <getenv@plt>
   137e8:	cmp	r0, #0
   137ec:	beq	13820 <tcgetattr@plt+0x245c>
   137f0:	movw	r1, #36146	; 0x8d32
   137f4:	add	r3, sp, #4
   137f8:	mov	r2, #0
   137fc:	movt	r1, #1
   13800:	str	r1, [sp]
   13804:	mov	r1, #0
   13808:	bl	165f4 <tcgetattr@plt+0x5230>
   1380c:	cmp	r0, #0
   13810:	bne	13820 <tcgetattr@plt+0x245c>
   13814:	ldr	r0, [sp, #4]
   13818:	cmp	r0, #0
   1381c:	bgt	13828 <tcgetattr@plt+0x2464>
   13820:	mov	r0, #80	; 0x50
   13824:	str	r0, [sp, #4]
   13828:	mov	sp, fp
   1382c:	pop	{fp, pc}
   13830:	push	{r4, r5, r6, r7, fp, lr}
   13834:	add	fp, sp, #16
   13838:	sub	sp, sp, #8
   1383c:	mov	r4, r2
   13840:	mov	r5, r1
   13844:	mov	r6, r0
   13848:	mov	r2, sp
   1384c:	mov	r0, #0
   13850:	movw	r1, #21523	; 0x5413
   13854:	bl	111c0 <ioctl@plt>
   13858:	cmp	r0, #0
   1385c:	beq	1387c <tcgetattr@plt+0x24b8>
   13860:	bl	112c8 <__errno_location@plt>
   13864:	ldr	r7, [r0]
   13868:	mov	r0, #0
   1386c:	cmp	r7, #22
   13870:	bne	138d8 <tcgetattr@plt+0x2514>
   13874:	str	r0, [sp, #4]
   13878:	str	r0, [sp]
   1387c:	cmp	r6, #0
   13880:	mov	r2, sp
   13884:	mov	r0, #0
   13888:	movw	r1, #21524	; 0x5414
   1388c:	strhge	r6, [sp]
   13890:	cmp	r5, #0
   13894:	strhge	r5, [sp, #2]
   13898:	bl	111c0 <ioctl@plt>
   1389c:	cmp	r0, #0
   138a0:	subeq	sp, fp, #16
   138a4:	popeq	{r4, r5, r6, r7, fp, pc}
   138a8:	bl	112c8 <__errno_location@plt>
   138ac:	ldr	r5, [r0]
   138b0:	mov	r0, #0
   138b4:	mov	r1, #3
   138b8:	mov	r2, r4
   138bc:	bl	158d8 <tcgetattr@plt+0x4514>
   138c0:	movw	r2, #43379	; 0xa973
   138c4:	mov	r3, r0
   138c8:	mov	r0, #1
   138cc:	mov	r1, r5
   138d0:	movt	r2, #1
   138d4:	bl	11214 <error@plt>
   138d8:	mov	r1, #3
   138dc:	mov	r2, r4
   138e0:	bl	158d8 <tcgetattr@plt+0x4514>
   138e4:	movw	r2, #43379	; 0xa973
   138e8:	mov	r3, r0
   138ec:	mov	r0, #1
   138f0:	mov	r1, r7
   138f4:	movt	r2, #1
   138f8:	bl	11214 <error@plt>
   138fc:	push	{r4, r5, r6, sl, fp, lr}
   13900:	add	fp, sp, #16
   13904:	sub	sp, sp, #8
   13908:	mov	r4, r1
   1390c:	mov	r5, r0
   13910:	mov	r2, sp
   13914:	mov	r0, #0
   13918:	movw	r1, #21523	; 0x5413
   1391c:	bl	111c0 <ioctl@plt>
   13920:	cmp	r0, #0
   13924:	beq	1397c <tcgetattr@plt+0x25b8>
   13928:	bl	112c8 <__errno_location@plt>
   1392c:	ldr	r6, [r0]
   13930:	cmp	r6, #22
   13934:	bne	139bc <tcgetattr@plt+0x25f8>
   13938:	cmp	r5, #0
   1393c:	bne	139b4 <tcgetattr@plt+0x25f0>
   13940:	movw	r1, #40241	; 0x9d31
   13944:	mov	r0, #0
   13948:	mov	r2, #5
   1394c:	movt	r1, #1
   13950:	bl	1116c <dcgettext@plt>
   13954:	mov	r5, r0
   13958:	mov	r0, #0
   1395c:	mov	r1, #3
   13960:	mov	r2, r4
   13964:	bl	158d8 <tcgetattr@plt+0x4514>
   13968:	mov	r3, r0
   1396c:	mov	r0, #1
   13970:	mov	r1, #0
   13974:	mov	r2, r5
   13978:	bl	11214 <error@plt>
   1397c:	movw	r1, #40281	; 0x9d59
   13980:	movw	r0, #40302	; 0x9d6e
   13984:	cmp	r5, #0
   13988:	ldrh	r2, [sp, #2]
   1398c:	movt	r1, #1
   13990:	movt	r0, #1
   13994:	movne	r0, r1
   13998:	ldrh	r1, [sp]
   1399c:	bl	13b74 <tcgetattr@plt+0x27b0>
   139a0:	cmp	r5, #0
   139a4:	movweq	r0, #45572	; 0xb204
   139a8:	moveq	r1, #0
   139ac:	movteq	r0, #2
   139b0:	streq	r1, [r0]
   139b4:	sub	sp, fp, #16
   139b8:	pop	{r4, r5, r6, sl, fp, pc}
   139bc:	mov	r0, #0
   139c0:	mov	r1, #3
   139c4:	mov	r2, r4
   139c8:	bl	158d8 <tcgetattr@plt+0x4514>
   139cc:	movw	r2, #43379	; 0xa973
   139d0:	mov	r3, r0
   139d4:	mov	r0, #1
   139d8:	mov	r1, r6
   139dc:	movt	r2, #1
   139e0:	bl	11214 <error@plt>
   139e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139e8:	add	fp, sp, #24
   139ec:	mov	r4, r1
   139f0:	mov	r5, r0
   139f4:	bl	11178 <cfgetispeed@plt>
   139f8:	cmp	r0, #0
   139fc:	beq	13a1c <tcgetattr@plt+0x2658>
   13a00:	mov	r0, r5
   13a04:	bl	11178 <cfgetispeed@plt>
   13a08:	mov	r6, r0
   13a0c:	mov	r0, r5
   13a10:	bl	112bc <cfgetospeed@plt>
   13a14:	cmp	r6, r0
   13a18:	bne	13a7c <tcgetattr@plt+0x26b8>
   13a1c:	movw	r0, #40327	; 0x9d87
   13a20:	movw	r6, #40347	; 0x9d9b
   13a24:	cmp	r4, #0
   13a28:	movt	r0, #1
   13a2c:	movt	r6, #1
   13a30:	movne	r6, r0
   13a34:	mov	r0, r5
   13a38:	bl	112bc <cfgetospeed@plt>
   13a3c:	movw	r2, #42900	; 0xa794
   13a40:	mov	r1, #0
   13a44:	movt	r2, #1
   13a48:	add	r3, r2, r1
   13a4c:	ldr	r7, [r3, #4]
   13a50:	cmp	r7, r0
   13a54:	beq	13a6c <tcgetattr@plt+0x26a8>
   13a58:	add	r1, r1, #12
   13a5c:	cmp	r1, #408	; 0x198
   13a60:	bne	13a48 <tcgetattr@plt+0x2684>
   13a64:	mov	r1, #0
   13a68:	b	13a70 <tcgetattr@plt+0x26ac>
   13a6c:	ldr	r1, [r3, #8]
   13a70:	mov	r0, r6
   13a74:	bl	13b74 <tcgetattr@plt+0x27b0>
   13a78:	b	13b10 <tcgetattr@plt+0x274c>
   13a7c:	movw	r0, #40309	; 0x9d75
   13a80:	movw	r6, #40343	; 0x9d97
   13a84:	cmp	r4, #0
   13a88:	movt	r0, #1
   13a8c:	movt	r6, #1
   13a90:	movne	r6, r0
   13a94:	mov	r0, r5
   13a98:	bl	11178 <cfgetispeed@plt>
   13a9c:	movw	r7, #42900	; 0xa794
   13aa0:	mov	r1, #0
   13aa4:	movt	r7, #1
   13aa8:	add	r2, r7, r1
   13aac:	ldr	r3, [r2, #4]
   13ab0:	cmp	r3, r0
   13ab4:	beq	13acc <tcgetattr@plt+0x2708>
   13ab8:	add	r1, r1, #12
   13abc:	cmp	r1, #408	; 0x198
   13ac0:	bne	13aa8 <tcgetattr@plt+0x26e4>
   13ac4:	mov	r8, #0
   13ac8:	b	13ad0 <tcgetattr@plt+0x270c>
   13acc:	ldr	r8, [r2, #8]
   13ad0:	mov	r0, r5
   13ad4:	bl	112bc <cfgetospeed@plt>
   13ad8:	mov	r1, #0
   13adc:	add	r2, r7, r1
   13ae0:	ldr	r3, [r2, #4]
   13ae4:	cmp	r3, r0
   13ae8:	beq	13b00 <tcgetattr@plt+0x273c>
   13aec:	add	r1, r1, #12
   13af0:	cmp	r1, #408	; 0x198
   13af4:	bne	13adc <tcgetattr@plt+0x2718>
   13af8:	mov	r2, #0
   13afc:	b	13b04 <tcgetattr@plt+0x2740>
   13b00:	ldr	r2, [r2, #8]
   13b04:	mov	r0, r6
   13b08:	mov	r1, r8
   13b0c:	bl	13b74 <tcgetattr@plt+0x27b0>
   13b10:	cmp	r4, #0
   13b14:	movweq	r0, #45572	; 0xb204
   13b18:	moveq	r1, #0
   13b1c:	movteq	r0, #2
   13b20:	streq	r1, [r0]
   13b24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b28:	push	{r4, r5, r6, sl, fp, lr}
   13b2c:	add	fp, sp, #16
   13b30:	movw	r6, #42900	; 0xa794
   13b34:	mov	r4, r0
   13b38:	mov	r5, #0
   13b3c:	movt	r6, #1
   13b40:	b	13b54 <tcgetattr@plt+0x2790>
   13b44:	add	r5, r5, #12
   13b48:	cmp	r5, #408	; 0x198
   13b4c:	mvneq	r0, #0
   13b50:	popeq	{r4, r5, r6, sl, fp, pc}
   13b54:	ldr	r1, [r6, r5]
   13b58:	mov	r0, r4
   13b5c:	bl	1110c <strcmp@plt>
   13b60:	cmp	r0, #0
   13b64:	bne	13b44 <tcgetattr@plt+0x2780>
   13b68:	add	r0, r6, r5
   13b6c:	ldr	r0, [r0, #4]
   13b70:	pop	{r4, r5, r6, sl, fp, pc}
   13b74:	sub	sp, sp, #12
   13b78:	push	{r4, r5, fp, lr}
   13b7c:	add	fp, sp, #8
   13b80:	sub	sp, sp, #12
   13b84:	mov	r4, r0
   13b88:	add	r0, fp, #8
   13b8c:	stm	r0, {r1, r2, r3}
   13b90:	add	r3, fp, #8
   13b94:	add	r0, sp, #4
   13b98:	mov	r1, #1
   13b9c:	mov	r2, r4
   13ba0:	str	r3, [sp, #8]
   13ba4:	bl	112e0 <__vasprintf_chk@plt>
   13ba8:	cmn	r0, #1
   13bac:	ble	13c3c <tcgetattr@plt+0x2878>
   13bb0:	movw	r5, #45572	; 0xb204
   13bb4:	mov	r4, r0
   13bb8:	movt	r5, #2
   13bbc:	ldr	r0, [r5]
   13bc0:	cmp	r0, #1
   13bc4:	blt	13c04 <tcgetattr@plt+0x2840>
   13bc8:	movw	r1, #45568	; 0xb200
   13bcc:	movt	r1, #2
   13bd0:	ldr	r1, [r1]
   13bd4:	sub	r0, r1, r0
   13bd8:	cmp	r0, r4
   13bdc:	bge	13bf0 <tcgetattr@plt+0x282c>
   13be0:	mov	r0, #10
   13be4:	bl	113ac <putchar_unlocked@plt>
   13be8:	mov	r0, #0
   13bec:	b	13c00 <tcgetattr@plt+0x283c>
   13bf0:	mov	r0, #32
   13bf4:	bl	113ac <putchar_unlocked@plt>
   13bf8:	ldr	r0, [r5]
   13bfc:	add	r0, r0, #1
   13c00:	str	r0, [r5]
   13c04:	movw	r0, #45428	; 0xb174
   13c08:	movt	r0, #2
   13c0c:	ldr	r1, [r0]
   13c10:	ldr	r0, [sp, #4]
   13c14:	bl	110f4 <fputs_unlocked@plt>
   13c18:	ldr	r0, [sp, #4]
   13c1c:	bl	14040 <tcgetattr@plt+0x2c7c>
   13c20:	ldr	r0, [r5]
   13c24:	add	r0, r0, r4
   13c28:	str	r0, [r5]
   13c2c:	sub	sp, fp, #8
   13c30:	pop	{r4, r5, fp, lr}
   13c34:	add	sp, sp, #12
   13c38:	bx	lr
   13c3c:	bl	164b0 <tcgetattr@plt+0x50ec>
   13c40:	cmp	r0, #0
   13c44:	movweq	r0, #40624	; 0x9eb0
   13c48:	movteq	r0, #1
   13c4c:	bxeq	lr
   13c50:	movw	r1, #45636	; 0xb244
   13c54:	cmp	r0, #32
   13c58:	movt	r1, #2
   13c5c:	bcc	13c70 <tcgetattr@plt+0x28ac>
   13c60:	cmp	r0, #126	; 0x7e
   13c64:	bhi	13c98 <tcgetattr@plt+0x28d4>
   13c68:	strb	r0, [r1], #1
   13c6c:	b	13c84 <tcgetattr@plt+0x28c0>
   13c70:	mov	r2, #94	; 0x5e
   13c74:	add	r0, r0, #64	; 0x40
   13c78:	strb	r2, [r1]
   13c7c:	strb	r0, [r1, #1]
   13c80:	add	r1, r1, #2
   13c84:	mov	r0, #0
   13c88:	strb	r0, [r1]
   13c8c:	movw	r0, #45636	; 0xb244
   13c90:	movt	r0, #2
   13c94:	bx	lr
   13c98:	cmp	r0, #127	; 0x7f
   13c9c:	bne	13cac <tcgetattr@plt+0x28e8>
   13ca0:	movw	r0, #16222	; 0x3f5e
   13ca4:	strh	r0, [r1], #2
   13ca8:	b	13c84 <tcgetattr@plt+0x28c0>
   13cac:	movw	r2, #11597	; 0x2d4d
   13cb0:	cmp	r0, #160	; 0xa0
   13cb4:	strh	r2, [r1]
   13cb8:	bcc	13cd4 <tcgetattr@plt+0x2910>
   13cbc:	cmp	r0, #255	; 0xff
   13cc0:	beq	13ce8 <tcgetattr@plt+0x2924>
   13cc4:	eor	r0, r0, #128	; 0x80
   13cc8:	strb	r0, [r1, #2]
   13ccc:	add	r1, r1, #3
   13cd0:	b	13c84 <tcgetattr@plt+0x28c0>
   13cd4:	mov	r2, #94	; 0x5e
   13cd8:	sub	r0, r0, #64	; 0x40
   13cdc:	strb	r2, [r1, #2]
   13ce0:	strb	r0, [r1, #3]
   13ce4:	b	13cf0 <tcgetattr@plt+0x292c>
   13ce8:	movw	r0, #16222	; 0x3f5e
   13cec:	strh	r0, [r1, #2]
   13cf0:	add	r1, r1, #4
   13cf4:	b	13c84 <tcgetattr@plt+0x28c0>
   13cf8:	movw	r1, #45648	; 0xb250
   13cfc:	movt	r1, #2
   13d00:	str	r0, [r1]
   13d04:	bx	lr
   13d08:	movw	r1, #45652	; 0xb254
   13d0c:	movt	r1, #2
   13d10:	strb	r0, [r1]
   13d14:	bx	lr
   13d18:	push	{r4, r5, r6, sl, fp, lr}
   13d1c:	add	fp, sp, #16
   13d20:	sub	sp, sp, #8
   13d24:	movw	r0, #45428	; 0xb174
   13d28:	movt	r0, #2
   13d2c:	ldr	r0, [r0]
   13d30:	bl	172b4 <tcgetattr@plt+0x5ef0>
   13d34:	cmp	r0, #0
   13d38:	beq	13d60 <tcgetattr@plt+0x299c>
   13d3c:	movw	r0, #45652	; 0xb254
   13d40:	movt	r0, #2
   13d44:	ldrb	r0, [r0]
   13d48:	cmp	r0, #0
   13d4c:	beq	13d80 <tcgetattr@plt+0x29bc>
   13d50:	bl	112c8 <__errno_location@plt>
   13d54:	ldr	r0, [r0]
   13d58:	cmp	r0, #32
   13d5c:	bne	13d80 <tcgetattr@plt+0x29bc>
   13d60:	movw	r0, #45424	; 0xb170
   13d64:	movt	r0, #2
   13d68:	ldr	r0, [r0]
   13d6c:	bl	172b4 <tcgetattr@plt+0x5ef0>
   13d70:	cmp	r0, #0
   13d74:	subeq	sp, fp, #16
   13d78:	popeq	{r4, r5, r6, sl, fp, pc}
   13d7c:	b	13df0 <tcgetattr@plt+0x2a2c>
   13d80:	movw	r1, #43363	; 0xa963
   13d84:	mov	r0, #0
   13d88:	mov	r2, #5
   13d8c:	movt	r1, #1
   13d90:	bl	1116c <dcgettext@plt>
   13d94:	mov	r4, r0
   13d98:	movw	r0, #45648	; 0xb250
   13d9c:	movt	r0, #2
   13da0:	ldr	r6, [r0]
   13da4:	bl	112c8 <__errno_location@plt>
   13da8:	ldr	r5, [r0]
   13dac:	cmp	r6, #0
   13db0:	bne	13dcc <tcgetattr@plt+0x2a08>
   13db4:	movw	r2, #43379	; 0xa973
   13db8:	mov	r0, #0
   13dbc:	mov	r1, r5
   13dc0:	mov	r3, r4
   13dc4:	movt	r2, #1
   13dc8:	b	13dec <tcgetattr@plt+0x2a28>
   13dcc:	mov	r0, r6
   13dd0:	bl	1582c <tcgetattr@plt+0x4468>
   13dd4:	movw	r2, #43375	; 0xa96f
   13dd8:	mov	r3, r0
   13ddc:	str	r4, [sp]
   13de0:	mov	r0, #0
   13de4:	mov	r1, r5
   13de8:	movt	r2, #1
   13dec:	bl	11214 <error@plt>
   13df0:	movw	r0, #45336	; 0xb118
   13df4:	movt	r0, #2
   13df8:	ldr	r0, [r0]
   13dfc:	bl	1113c <_exit@plt>
   13e00:	sub	sp, sp, #8
   13e04:	push	{r4, r5, r6, r7, fp, lr}
   13e08:	add	fp, sp, #16
   13e0c:	sub	sp, sp, #8
   13e10:	mov	r5, r0
   13e14:	add	r0, fp, #8
   13e18:	cmp	r1, #11
   13e1c:	str	r3, [fp, #12]
   13e20:	str	r2, [fp, #8]
   13e24:	str	r0, [sp, #4]
   13e28:	bhi	13e64 <tcgetattr@plt+0x2aa0>
   13e2c:	mov	r0, #1
   13e30:	movw	r2, #1300	; 0x514
   13e34:	tst	r2, r0, lsl r1
   13e38:	bne	13f1c <tcgetattr@plt+0x2b58>
   13e3c:	movw	r2, #2570	; 0xa0a
   13e40:	tst	r2, r0, lsl r1
   13e44:	bne	13e8c <tcgetattr@plt+0x2ac8>
   13e48:	cmp	r1, #0
   13e4c:	bne	13e64 <tcgetattr@plt+0x2aa0>
   13e50:	ldr	r0, [sp, #4]
   13e54:	add	r1, r0, #4
   13e58:	str	r1, [sp, #4]
   13e5c:	mov	r1, #0
   13e60:	b	13f28 <tcgetattr@plt+0x2b64>
   13e64:	sub	r0, r1, #1024	; 0x400
   13e68:	cmp	r0, #10
   13e6c:	bhi	13f1c <tcgetattr@plt+0x2b58>
   13e70:	mov	r2, #1
   13e74:	movw	r3, #645	; 0x285
   13e78:	tst	r3, r2, lsl r0
   13e7c:	bne	13f1c <tcgetattr@plt+0x2b58>
   13e80:	movw	r3, #1282	; 0x502
   13e84:	tst	r3, r2, lsl r0
   13e88:	beq	13e98 <tcgetattr@plt+0x2ad4>
   13e8c:	mov	r0, r5
   13e90:	bl	11340 <fcntl64@plt>
   13e94:	b	13f34 <tcgetattr@plt+0x2b70>
   13e98:	cmp	r0, #6
   13e9c:	bne	13f1c <tcgetattr@plt+0x2b58>
   13ea0:	ldr	r0, [sp, #4]
   13ea4:	movw	r7, #45656	; 0xb258
   13ea8:	movt	r7, #2
   13eac:	add	r1, r0, #4
   13eb0:	str	r1, [sp, #4]
   13eb4:	ldr	r6, [r0]
   13eb8:	ldr	r0, [r7]
   13ebc:	cmp	r0, #0
   13ec0:	blt	13f58 <tcgetattr@plt+0x2b94>
   13ec4:	mov	r0, r5
   13ec8:	movw	r1, #1030	; 0x406
   13ecc:	mov	r2, r6
   13ed0:	bl	11340 <fcntl64@plt>
   13ed4:	mov	r4, r0
   13ed8:	cmn	r0, #1
   13edc:	bgt	13f4c <tcgetattr@plt+0x2b88>
   13ee0:	bl	112c8 <__errno_location@plt>
   13ee4:	ldr	r0, [r0]
   13ee8:	cmp	r0, #22
   13eec:	bne	13f4c <tcgetattr@plt+0x2b88>
   13ef0:	mov	r0, r5
   13ef4:	mov	r1, #0
   13ef8:	mov	r2, r6
   13efc:	bl	11340 <fcntl64@plt>
   13f00:	mov	r4, r0
   13f04:	cmp	r0, #0
   13f08:	blt	13f38 <tcgetattr@plt+0x2b74>
   13f0c:	mvn	r0, #0
   13f10:	str	r0, [r7]
   13f14:	mov	r0, #1
   13f18:	b	13f7c <tcgetattr@plt+0x2bb8>
   13f1c:	ldr	r0, [sp, #4]
   13f20:	add	r2, r0, #4
   13f24:	str	r2, [sp, #4]
   13f28:	ldr	r2, [r0]
   13f2c:	mov	r0, r5
   13f30:	bl	11340 <fcntl64@plt>
   13f34:	mov	r4, r0
   13f38:	mov	r0, r4
   13f3c:	sub	sp, fp, #16
   13f40:	pop	{r4, r5, r6, r7, fp, lr}
   13f44:	add	sp, sp, #8
   13f48:	bx	lr
   13f4c:	mov	r0, #1
   13f50:	str	r0, [r7]
   13f54:	b	13f38 <tcgetattr@plt+0x2b74>
   13f58:	mov	r0, r5
   13f5c:	mov	r1, #0
   13f60:	mov	r2, r6
   13f64:	bl	11340 <fcntl64@plt>
   13f68:	mov	r4, r0
   13f6c:	ldr	r0, [r7]
   13f70:	add	r0, r0, #1
   13f74:	clz	r0, r0
   13f78:	lsr	r0, r0, #5
   13f7c:	cmp	r0, #0
   13f80:	beq	13f38 <tcgetattr@plt+0x2b74>
   13f84:	cmp	r4, #0
   13f88:	blt	13f38 <tcgetattr@plt+0x2b74>
   13f8c:	mov	r0, r4
   13f90:	mov	r1, #1
   13f94:	bl	11340 <fcntl64@plt>
   13f98:	cmp	r0, #0
   13f9c:	blt	13fb8 <tcgetattr@plt+0x2bf4>
   13fa0:	orr	r2, r0, #1
   13fa4:	mov	r0, r4
   13fa8:	mov	r1, #2
   13fac:	bl	11340 <fcntl64@plt>
   13fb0:	cmn	r0, #1
   13fb4:	bne	13f38 <tcgetattr@plt+0x2b74>
   13fb8:	bl	112c8 <__errno_location@plt>
   13fbc:	ldr	r6, [r0]
   13fc0:	mov	r5, r0
   13fc4:	mov	r0, r4
   13fc8:	bl	113a0 <close@plt>
   13fcc:	str	r6, [r5]
   13fd0:	mvn	r4, #0
   13fd4:	b	13f38 <tcgetattr@plt+0x2b74>
   13fd8:	push	{r4, r5, r6, r7, fp, lr}
   13fdc:	add	fp, sp, #16
   13fe0:	mov	r5, r0
   13fe4:	mov	r0, r1
   13fe8:	mov	r1, r2
   13fec:	mov	r2, r3
   13ff0:	bl	11220 <open64@plt>
   13ff4:	mov	r4, r0
   13ff8:	cmp	r0, r5
   13ffc:	beq	14038 <tcgetattr@plt+0x2c74>
   14000:	cmp	r4, #0
   14004:	blt	14038 <tcgetattr@plt+0x2c74>
   14008:	mov	r0, r4
   1400c:	mov	r1, r5
   14010:	bl	11184 <dup2@plt>
   14014:	mov	r5, r0
   14018:	bl	112c8 <__errno_location@plt>
   1401c:	ldr	r7, [r0]
   14020:	mov	r6, r0
   14024:	mov	r0, r4
   14028:	bl	113a0 <close@plt>
   1402c:	mov	r0, r5
   14030:	str	r7, [r6]
   14034:	pop	{r4, r5, r6, r7, fp, pc}
   14038:	mov	r0, r4
   1403c:	pop	{r4, r5, r6, r7, fp, pc}
   14040:	push	{r4, r5, r6, sl, fp, lr}
   14044:	add	fp, sp, #16
   14048:	mov	r4, r0
   1404c:	bl	112c8 <__errno_location@plt>
   14050:	ldr	r6, [r0]
   14054:	mov	r5, r0
   14058:	mov	r0, r4
   1405c:	bl	11130 <free@plt>
   14060:	str	r6, [r5]
   14064:	pop	{r4, r5, r6, sl, fp, pc}
   14068:	push	{r4, r5, fp, lr}
   1406c:	add	fp, sp, #8
   14070:	cmp	r0, #0
   14074:	beq	14108 <tcgetattr@plt+0x2d44>
   14078:	mov	r1, #47	; 0x2f
   1407c:	mov	r4, r0
   14080:	bl	11358 <strrchr@plt>
   14084:	cmp	r0, #0
   14088:	mov	r5, r4
   1408c:	addne	r5, r0, #1
   14090:	sub	r0, r5, r4
   14094:	cmp	r0, #7
   14098:	blt	140ec <tcgetattr@plt+0x2d28>
   1409c:	movw	r1, #43438	; 0xa9ae
   140a0:	sub	r0, r5, #7
   140a4:	mov	r2, #7
   140a8:	movt	r1, #1
   140ac:	bl	11388 <strncmp@plt>
   140b0:	cmp	r0, #0
   140b4:	bne	140ec <tcgetattr@plt+0x2d28>
   140b8:	movw	r1, #43446	; 0xa9b6
   140bc:	mov	r0, r5
   140c0:	mov	r2, #3
   140c4:	movt	r1, #1
   140c8:	bl	11388 <strncmp@plt>
   140cc:	cmp	r0, #0
   140d0:	beq	140dc <tcgetattr@plt+0x2d18>
   140d4:	mov	r4, r5
   140d8:	b	140ec <tcgetattr@plt+0x2d28>
   140dc:	movw	r0, #45408	; 0xb160
   140e0:	add	r4, r5, #3
   140e4:	movt	r0, #2
   140e8:	str	r4, [r0]
   140ec:	movw	r0, #45412	; 0xb164
   140f0:	movt	r0, #2
   140f4:	str	r4, [r0]
   140f8:	movw	r0, #45660	; 0xb25c
   140fc:	movt	r0, #2
   14100:	str	r4, [r0]
   14104:	pop	{r4, r5, fp, pc}
   14108:	movw	r0, #45424	; 0xb170
   1410c:	movt	r0, #2
   14110:	ldr	r1, [r0]
   14114:	movw	r0, #43382	; 0xa976
   14118:	movt	r0, #1
   1411c:	bl	1137c <fputs@plt>
   14120:	bl	11394 <abort@plt>
   14124:	push	{r4, r5, r6, sl, fp, lr}
   14128:	add	fp, sp, #16
   1412c:	mov	r4, r0
   14130:	movw	r0, #45664	; 0xb260
   14134:	movt	r0, #2
   14138:	cmp	r4, #0
   1413c:	moveq	r4, r0
   14140:	bl	112c8 <__errno_location@plt>
   14144:	ldr	r6, [r0]
   14148:	mov	r5, r0
   1414c:	mov	r0, r4
   14150:	mov	r1, #48	; 0x30
   14154:	bl	163b0 <tcgetattr@plt+0x4fec>
   14158:	str	r6, [r5]
   1415c:	pop	{r4, r5, r6, sl, fp, pc}
   14160:	movw	r1, #45664	; 0xb260
   14164:	cmp	r0, #0
   14168:	movt	r1, #2
   1416c:	movne	r1, r0
   14170:	ldr	r0, [r1]
   14174:	bx	lr
   14178:	movw	r2, #45664	; 0xb260
   1417c:	cmp	r0, #0
   14180:	movt	r2, #2
   14184:	movne	r2, r0
   14188:	str	r1, [r2]
   1418c:	bx	lr
   14190:	movw	r3, #45664	; 0xb260
   14194:	cmp	r0, #0
   14198:	movt	r3, #2
   1419c:	movne	r3, r0
   141a0:	ubfx	r0, r1, #5, #3
   141a4:	and	r1, r1, #31
   141a8:	add	r0, r3, r0, lsl #2
   141ac:	ldr	r3, [r0, #8]
   141b0:	eor	r2, r2, r3, lsr r1
   141b4:	and	r2, r2, #1
   141b8:	eor	r2, r3, r2, lsl r1
   141bc:	str	r2, [r0, #8]
   141c0:	mov	r0, #1
   141c4:	and	r0, r0, r3, lsr r1
   141c8:	bx	lr
   141cc:	movw	r2, #45664	; 0xb260
   141d0:	cmp	r0, #0
   141d4:	movt	r2, #2
   141d8:	movne	r2, r0
   141dc:	ldr	r0, [r2, #4]
   141e0:	str	r1, [r2, #4]
   141e4:	bx	lr
   141e8:	movw	r3, #45664	; 0xb260
   141ec:	cmp	r0, #0
   141f0:	movt	r3, #2
   141f4:	movne	r3, r0
   141f8:	cmp	r1, #0
   141fc:	mov	r0, #10
   14200:	cmpne	r2, #0
   14204:	str	r0, [r3]
   14208:	bne	14218 <tcgetattr@plt+0x2e54>
   1420c:	push	{fp, lr}
   14210:	mov	fp, sp
   14214:	bl	11394 <abort@plt>
   14218:	str	r1, [r3, #40]	; 0x28
   1421c:	str	r2, [r3, #44]	; 0x2c
   14220:	bx	lr
   14224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14228:	add	fp, sp, #28
   1422c:	sub	sp, sp, #20
   14230:	mov	r7, r0
   14234:	ldr	r0, [fp, #8]
   14238:	movw	r5, #45664	; 0xb260
   1423c:	mov	r8, r3
   14240:	mov	r9, r2
   14244:	mov	sl, r1
   14248:	movt	r5, #2
   1424c:	cmp	r0, #0
   14250:	movne	r5, r0
   14254:	bl	112c8 <__errno_location@plt>
   14258:	mov	r4, r0
   1425c:	ldm	r5, {r0, r1}
   14260:	ldr	r2, [r5, #40]	; 0x28
   14264:	ldr	r3, [r5, #44]	; 0x2c
   14268:	add	r5, r5, #8
   1426c:	ldr	r6, [r4]
   14270:	stm	sp, {r0, r1, r5}
   14274:	str	r2, [sp, #12]
   14278:	str	r3, [sp, #16]
   1427c:	mov	r0, r7
   14280:	mov	r1, sl
   14284:	mov	r2, r9
   14288:	mov	r3, r8
   1428c:	bl	1429c <tcgetattr@plt+0x2ed8>
   14290:	str	r6, [r4]
   14294:	sub	sp, fp, #28
   14298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1429c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142a0:	add	fp, sp, #28
   142a4:	sub	sp, sp, #156	; 0x9c
   142a8:	str	r0, [fp, #-56]	; 0xffffffc8
   142ac:	ldr	r0, [fp, #12]
   142b0:	mov	r4, r1
   142b4:	str	r3, [sp, #80]	; 0x50
   142b8:	str	r2, [fp, #-84]	; 0xffffffac
   142bc:	and	r1, r0, #4
   142c0:	str	r1, [sp, #24]
   142c4:	and	r1, r0, #1
   142c8:	str	r1, [sp, #28]
   142cc:	ubfx	r7, r0, #1, #1
   142d0:	bl	111d8 <__ctype_get_mb_cur_max@plt>
   142d4:	str	r0, [sp, #32]
   142d8:	ldr	r0, [fp, #24]
   142dc:	ldr	r9, [fp, #8]
   142e0:	mov	r2, #0
   142e4:	mov	r1, #0
   142e8:	mov	r5, #0
   142ec:	str	r2, [sp, #52]	; 0x34
   142f0:	mov	r2, #1
   142f4:	str	r0, [sp, #72]	; 0x48
   142f8:	ldr	r0, [fp, #20]
   142fc:	str	r0, [sp, #64]	; 0x40
   14300:	mov	r0, #0
   14304:	str	r0, [sp, #92]	; 0x5c
   14308:	mov	r0, #0
   1430c:	str	r0, [fp, #-76]	; 0xffffffb4
   14310:	mov	r0, #0
   14314:	cmp	r9, #10
   14318:	str	r1, [sp, #68]	; 0x44
   1431c:	bhi	1531c <tcgetattr@plt+0x3f58>
   14320:	add	r1, pc, #28
   14324:	ldr	ip, [fp, #-84]	; 0xffffffac
   14328:	ldr	lr, [sp, #80]	; 0x50
   1432c:	mov	r6, r4
   14330:	mov	r8, #0
   14334:	mov	r3, #1
   14338:	mov	sl, #0
   1433c:	mov	r4, r2
   14340:	ldr	pc, [r1, r9, lsl #2]
   14344:	andeq	r4, r1, r4, lsl r4
   14348:	andeq	r4, r1, r0, asr r4
   1434c:	andeq	r4, r1, r4, lsr #8
   14350:	andeq	r4, r1, ip, lsl #8
   14354:	andeq	r4, r1, r4, asr #8
   14358:	muleq	r1, ip, r4
   1435c:	andeq	r4, r1, r4, lsr r4
   14360:	strdeq	r4, [r1], -ip
   14364:	andeq	r4, r1, r0, ror r3
   14368:	andeq	r4, r1, r0, ror r3
   1436c:	muleq	r1, r8, r3
   14370:	movw	r0, #43528	; 0xaa08
   14374:	mov	r1, r9
   14378:	movt	r0, #1
   1437c:	bl	15a84 <tcgetattr@plt+0x46c0>
   14380:	str	r0, [sp, #64]	; 0x40
   14384:	movw	r0, #43530	; 0xaa0a
   14388:	mov	r1, r9
   1438c:	movt	r0, #1
   14390:	bl	15a84 <tcgetattr@plt+0x46c0>
   14394:	str	r0, [sp, #72]	; 0x48
   14398:	mov	r8, #0
   1439c:	mov	sl, r7
   143a0:	tst	r7, #1
   143a4:	str	r5, [fp, #-48]	; 0xffffffd0
   143a8:	bne	143e4 <tcgetattr@plt+0x3020>
   143ac:	ldr	r0, [sp, #64]	; 0x40
   143b0:	ldrb	r0, [r0]
   143b4:	cmp	r0, #0
   143b8:	beq	143e4 <tcgetattr@plt+0x3020>
   143bc:	ldr	r1, [sp, #64]	; 0x40
   143c0:	mov	r8, #0
   143c4:	add	r1, r1, #1
   143c8:	cmp	r8, r6
   143cc:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   143d0:	strbcc	r0, [r2, r8]
   143d4:	ldrb	r0, [r1, r8]
   143d8:	add	r8, r8, #1
   143dc:	cmp	r0, #0
   143e0:	bne	143c8 <tcgetattr@plt+0x3004>
   143e4:	ldr	r7, [sp, #72]	; 0x48
   143e8:	mov	r0, r7
   143ec:	bl	11298 <strlen@plt>
   143f0:	ldr	ip, [fp, #-84]	; 0xffffffac
   143f4:	ldr	lr, [sp, #80]	; 0x50
   143f8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   143fc:	str	r0, [fp, #-76]	; 0xffffffb4
   14400:	str	r7, [sp, #92]	; 0x5c
   14404:	mov	r3, #1
   14408:	b	144fc <tcgetattr@plt+0x3138>
   1440c:	mov	r0, #1
   14410:	b	14450 <tcgetattr@plt+0x308c>
   14414:	mov	r9, #0
   14418:	mov	r8, #0
   1441c:	mov	r3, r0
   14420:	b	144f8 <tcgetattr@plt+0x3134>
   14424:	tst	r7, #1
   14428:	bne	14450 <tcgetattr@plt+0x308c>
   1442c:	mov	r3, r0
   14430:	b	14478 <tcgetattr@plt+0x30b4>
   14434:	mov	r0, #1
   14438:	mov	r8, #0
   1443c:	mov	r9, #5
   14440:	b	144b0 <tcgetattr@plt+0x30ec>
   14444:	mov	r3, #1
   14448:	tst	r7, #1
   1444c:	beq	14478 <tcgetattr@plt+0x30b4>
   14450:	mov	r1, #1
   14454:	mov	r8, #0
   14458:	mov	r9, #2
   1445c:	mov	r3, r0
   14460:	mov	sl, #1
   14464:	str	r1, [fp, #-76]	; 0xffffffb4
   14468:	movw	r1, #43530	; 0xaa0a
   1446c:	movt	r1, #1
   14470:	str	r1, [sp, #92]	; 0x5c
   14474:	b	144fc <tcgetattr@plt+0x3138>
   14478:	cmp	r6, #0
   1447c:	mov	r8, #1
   14480:	mov	r9, #2
   14484:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   14488:	movne	r0, #39	; 0x27
   1448c:	strbne	r0, [r1]
   14490:	movw	r0, #43530	; 0xaa0a
   14494:	movt	r0, #1
   14498:	b	144ec <tcgetattr@plt+0x3128>
   1449c:	mov	r9, #5
   144a0:	tst	r7, #1
   144a4:	beq	144cc <tcgetattr@plt+0x3108>
   144a8:	mov	r0, #1
   144ac:	mov	r8, #0
   144b0:	str	r0, [fp, #-76]	; 0xffffffb4
   144b4:	movw	r0, #43526	; 0xaa06
   144b8:	mov	r3, #1
   144bc:	mov	sl, #1
   144c0:	movt	r0, #1
   144c4:	str	r0, [sp, #92]	; 0x5c
   144c8:	b	144fc <tcgetattr@plt+0x3138>
   144cc:	cmp	r6, #0
   144d0:	mov	r8, #1
   144d4:	mov	r3, #1
   144d8:	ldrne	r1, [fp, #-56]	; 0xffffffc8
   144dc:	movne	r0, #34	; 0x22
   144e0:	strbne	r0, [r1]
   144e4:	movw	r0, #43526	; 0xaa06
   144e8:	movt	r0, #1
   144ec:	str	r0, [sp, #92]	; 0x5c
   144f0:	mov	r0, #1
   144f4:	str	r0, [fp, #-76]	; 0xffffffb4
   144f8:	mov	sl, #0
   144fc:	ldr	r0, [fp, #16]
   14500:	mov	r7, #0
   14504:	str	r9, [fp, #-64]	; 0xffffffc0
   14508:	str	sl, [fp, #-72]	; 0xffffffb8
   1450c:	str	r3, [sp, #84]	; 0x54
   14510:	cmp	r0, #0
   14514:	movwne	r0, #1
   14518:	and	r0, r0, sl
   1451c:	str	r0, [fp, #-88]	; 0xffffffa8
   14520:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14524:	cmp	r0, #0
   14528:	movwne	r0, #1
   1452c:	subs	r2, r9, #2
   14530:	and	r1, r0, sl
   14534:	str	r2, [fp, #-80]	; 0xffffffb0
   14538:	and	r1, r3, r1
   1453c:	str	r1, [sp, #44]	; 0x2c
   14540:	clz	r1, r2
   14544:	lsr	r1, r1, #5
   14548:	and	r1, r1, sl
   1454c:	str	r1, [sp, #56]	; 0x38
   14550:	mov	r1, r2
   14554:	eor	r2, sl, #1
   14558:	movwne	r1, #1
   1455c:	str	r2, [sp, #88]	; 0x58
   14560:	orr	r2, r1, r2
   14564:	and	r1, r1, r3
   14568:	and	r0, r0, r1
   1456c:	str	r2, [sp, #60]	; 0x3c
   14570:	str	r1, [fp, #-68]	; 0xffffffbc
   14574:	str	r0, [fp, #-60]	; 0xffffffc4
   14578:	eor	r0, r3, #1
   1457c:	str	r0, [sp, #48]	; 0x30
   14580:	cmn	lr, #1
   14584:	beq	14594 <tcgetattr@plt+0x31d0>
   14588:	cmp	r7, lr
   1458c:	bne	145a0 <tcgetattr@plt+0x31dc>
   14590:	b	1514c <tcgetattr@plt+0x3d88>
   14594:	ldrb	r0, [ip, r7]
   14598:	cmp	r0, #0
   1459c:	beq	15154 <tcgetattr@plt+0x3d90>
   145a0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   145a4:	mov	r9, #0
   145a8:	str	r5, [fp, #-48]	; 0xffffffd0
   145ac:	str	r6, [fp, #-52]	; 0xffffffcc
   145b0:	cmp	r0, #0
   145b4:	beq	145f4 <tcgetattr@plt+0x3230>
   145b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   145bc:	mov	r5, r4
   145c0:	add	r4, r7, r0
   145c4:	cmp	r0, #2
   145c8:	bcc	145e4 <tcgetattr@plt+0x3220>
   145cc:	cmn	lr, #1
   145d0:	bne	145e4 <tcgetattr@plt+0x3220>
   145d4:	mov	r0, ip
   145d8:	bl	11298 <strlen@plt>
   145dc:	ldr	ip, [fp, #-84]	; 0xffffffac
   145e0:	mov	lr, r0
   145e4:	cmp	r4, lr
   145e8:	bls	145fc <tcgetattr@plt+0x3238>
   145ec:	mov	r6, #0
   145f0:	b	1463c <tcgetattr@plt+0x3278>
   145f4:	mov	r6, #0
   145f8:	b	14640 <tcgetattr@plt+0x327c>
   145fc:	ldr	r1, [sp, #92]	; 0x5c
   14600:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14604:	add	r0, ip, r7
   14608:	mov	r4, lr
   1460c:	bl	11160 <memcmp@plt>
   14610:	ldr	r2, [sp, #88]	; 0x58
   14614:	cmp	r0, #0
   14618:	mov	r1, r0
   1461c:	movwne	r1, #1
   14620:	orr	r1, r1, r2
   14624:	tst	r1, #1
   14628:	beq	151e8 <tcgetattr@plt+0x3e24>
   1462c:	ldr	ip, [fp, #-84]	; 0xffffffac
   14630:	clz	r0, r0
   14634:	mov	lr, r4
   14638:	lsr	r6, r0, #5
   1463c:	mov	r4, r5
   14640:	ldrb	r5, [ip, r7]
   14644:	cmp	r5, #126	; 0x7e
   14648:	bhi	14a10 <tcgetattr@plt+0x364c>
   1464c:	add	r3, pc, #16
   14650:	mov	sl, #1
   14654:	mov	r2, #110	; 0x6e
   14658:	mov	r0, #97	; 0x61
   1465c:	mov	r1, #0
   14660:	ldr	pc, [r3, r5, lsl #2]
   14664:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14668:	andeq	r4, r1, r0, lsl sl
   1466c:	andeq	r4, r1, r0, lsl sl
   14670:	andeq	r4, r1, r0, lsl sl
   14674:	andeq	r4, r1, r0, lsl sl
   14678:	andeq	r4, r1, r0, lsl sl
   1467c:	andeq	r4, r1, r0, lsl sl
   14680:			; <UNDEFINED> instruction: 0x00014ab4
   14684:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14688:	andeq	r4, r1, ip, asr #17
   1468c:	andeq	r4, r1, r0, ror #17
   14690:	andeq	r4, r1, r4, ror #18
   14694:	andeq	r4, r1, r4, asr #17
   14698:	ldrdeq	r4, [r1], -ip
   1469c:	andeq	r4, r1, r0, lsl sl
   146a0:	andeq	r4, r1, r0, lsl sl
   146a4:	andeq	r4, r1, r0, lsl sl
   146a8:	andeq	r4, r1, r0, lsl sl
   146ac:	andeq	r4, r1, r0, lsl sl
   146b0:	andeq	r4, r1, r0, lsl sl
   146b4:	andeq	r4, r1, r0, lsl sl
   146b8:	andeq	r4, r1, r0, lsl sl
   146bc:	andeq	r4, r1, r0, lsl sl
   146c0:	andeq	r4, r1, r0, lsl sl
   146c4:	andeq	r4, r1, r0, lsl sl
   146c8:	andeq	r4, r1, r0, lsl sl
   146cc:	andeq	r4, r1, r0, lsl sl
   146d0:	andeq	r4, r1, r0, lsl sl
   146d4:	andeq	r4, r1, r0, lsl sl
   146d8:	andeq	r4, r1, r0, lsl sl
   146dc:	andeq	r4, r1, r0, lsl sl
   146e0:	andeq	r4, r1, r0, lsl sl
   146e4:	andeq	r4, r1, r4, ror sl
   146e8:	andeq	r4, r1, r8, ror sl
   146ec:	andeq	r4, r1, r8, ror sl
   146f0:	andeq	r4, r1, r4, ror r8
   146f4:	andeq	r4, r1, r8, ror sl
   146f8:	andeq	r4, r1, r0, ror #16
   146fc:	andeq	r4, r1, r8, ror sl
   14700:	andeq	r4, r1, ip, ror #18
   14704:	andeq	r4, r1, r8, ror sl
   14708:	andeq	r4, r1, r8, ror sl
   1470c:	andeq	r4, r1, r8, ror sl
   14710:	andeq	r4, r1, r0, ror #16
   14714:	andeq	r4, r1, r0, ror #16
   14718:	andeq	r4, r1, r0, ror #16
   1471c:	andeq	r4, r1, r0, ror #16
   14720:	andeq	r4, r1, r0, ror #16
   14724:	andeq	r4, r1, r0, ror #16
   14728:	andeq	r4, r1, r0, ror #16
   1472c:	andeq	r4, r1, r0, ror #16
   14730:	andeq	r4, r1, r0, ror #16
   14734:	andeq	r4, r1, r0, ror #16
   14738:	andeq	r4, r1, r0, ror #16
   1473c:	andeq	r4, r1, r0, ror #16
   14740:	andeq	r4, r1, r0, ror #16
   14744:	andeq	r4, r1, r0, ror #16
   14748:	andeq	r4, r1, r0, ror #16
   1474c:	andeq	r4, r1, r0, ror #16
   14750:	andeq	r4, r1, r8, ror sl
   14754:	andeq	r4, r1, r8, ror sl
   14758:	andeq	r4, r1, r8, ror sl
   1475c:	andeq	r4, r1, r8, ror sl
   14760:	andeq	r4, r1, r8, lsr r9
   14764:	andeq	r4, r1, r0, lsl sl
   14768:	andeq	r4, r1, r0, ror #16
   1476c:	andeq	r4, r1, r0, ror #16
   14770:	andeq	r4, r1, r0, ror #16
   14774:	andeq	r4, r1, r0, ror #16
   14778:	andeq	r4, r1, r0, ror #16
   1477c:	andeq	r4, r1, r0, ror #16
   14780:	andeq	r4, r1, r0, ror #16
   14784:	andeq	r4, r1, r0, ror #16
   14788:	andeq	r4, r1, r0, ror #16
   1478c:	andeq	r4, r1, r0, ror #16
   14790:	andeq	r4, r1, r0, ror #16
   14794:	andeq	r4, r1, r0, ror #16
   14798:	andeq	r4, r1, r0, ror #16
   1479c:	andeq	r4, r1, r0, ror #16
   147a0:	andeq	r4, r1, r0, ror #16
   147a4:	andeq	r4, r1, r0, ror #16
   147a8:	andeq	r4, r1, r0, ror #16
   147ac:	andeq	r4, r1, r0, ror #16
   147b0:	andeq	r4, r1, r0, ror #16
   147b4:	andeq	r4, r1, r0, ror #16
   147b8:	andeq	r4, r1, r0, ror #16
   147bc:	andeq	r4, r1, r0, ror #16
   147c0:	andeq	r4, r1, r0, ror #16
   147c4:	andeq	r4, r1, r0, ror #16
   147c8:	andeq	r4, r1, r0, ror #16
   147cc:	andeq	r4, r1, r0, ror #16
   147d0:	andeq	r4, r1, r8, ror sl
   147d4:	andeq	r4, r1, r0, lsr #17
   147d8:	andeq	r4, r1, r0, ror #16
   147dc:	andeq	r4, r1, r8, ror sl
   147e0:	andeq	r4, r1, r0, ror #16
   147e4:	andeq	r4, r1, r8, ror sl
   147e8:	andeq	r4, r1, r0, ror #16
   147ec:	andeq	r4, r1, r0, ror #16
   147f0:	andeq	r4, r1, r0, ror #16
   147f4:	andeq	r4, r1, r0, ror #16
   147f8:	andeq	r4, r1, r0, ror #16
   147fc:	andeq	r4, r1, r0, ror #16
   14800:	andeq	r4, r1, r0, ror #16
   14804:	andeq	r4, r1, r0, ror #16
   14808:	andeq	r4, r1, r0, ror #16
   1480c:	andeq	r4, r1, r0, ror #16
   14810:	andeq	r4, r1, r0, ror #16
   14814:	andeq	r4, r1, r0, ror #16
   14818:	andeq	r4, r1, r0, ror #16
   1481c:	andeq	r4, r1, r0, ror #16
   14820:	andeq	r4, r1, r0, ror #16
   14824:	andeq	r4, r1, r0, ror #16
   14828:	andeq	r4, r1, r0, ror #16
   1482c:	andeq	r4, r1, r0, ror #16
   14830:	andeq	r4, r1, r0, ror #16
   14834:	andeq	r4, r1, r0, ror #16
   14838:	andeq	r4, r1, r0, ror #16
   1483c:	andeq	r4, r1, r0, ror #16
   14840:	andeq	r4, r1, r0, ror #16
   14844:	andeq	r4, r1, r0, ror #16
   14848:	andeq	r4, r1, r0, ror #16
   1484c:	andeq	r4, r1, r0, ror #16
   14850:	andeq	r4, r1, r4, lsl #17
   14854:	andeq	r4, r1, r8, ror sl
   14858:	andeq	r4, r1, r4, lsl #17
   1485c:	andeq	r4, r1, r4, ror r8
   14860:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14864:	cmp	r0, #0
   14868:	beq	14ac8 <tcgetattr@plt+0x3704>
   1486c:	ldr	r0, [fp, #16]
   14870:	b	14acc <tcgetattr@plt+0x3708>
   14874:	mov	sl, #0
   14878:	cmp	r7, #0
   1487c:	bne	14ce4 <tcgetattr@plt+0x3920>
   14880:	b	14a74 <tcgetattr@plt+0x36b0>
   14884:	mov	sl, #0
   14888:	cmn	lr, #1
   1488c:	beq	14a60 <tcgetattr@plt+0x369c>
   14890:	cmp	r7, #0
   14894:	cmpeq	lr, #1
   14898:	bne	14ce4 <tcgetattr@plt+0x3920>
   1489c:	b	14a74 <tcgetattr@plt+0x36b0>
   148a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   148a4:	cmp	r0, #2
   148a8:	bne	14a98 <tcgetattr@plt+0x36d4>
   148ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   148b0:	tst	r0, #1
   148b4:	bne	15204 <tcgetattr@plt+0x3e40>
   148b8:	mov	r9, #0
   148bc:	mov	r0, #92	; 0x5c
   148c0:	b	14aac <tcgetattr@plt+0x36e8>
   148c4:	mov	r0, #102	; 0x66
   148c8:	b	14ab4 <tcgetattr@plt+0x36f0>
   148cc:	mov	r2, #116	; 0x74
   148d0:	b	148e0 <tcgetattr@plt+0x351c>
   148d4:	mov	r0, #98	; 0x62
   148d8:	b	14ab4 <tcgetattr@plt+0x36f0>
   148dc:	mov	r2, #114	; 0x72
   148e0:	ldr	r0, [sp, #60]	; 0x3c
   148e4:	tst	r0, #1
   148e8:	mov	r0, r2
   148ec:	bne	14ab4 <tcgetattr@plt+0x36f0>
   148f0:	b	15204 <tcgetattr@plt+0x3e40>
   148f4:	ldr	r0, [sp, #84]	; 0x54
   148f8:	tst	r0, #1
   148fc:	beq	14ba0 <tcgetattr@plt+0x37dc>
   14900:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14904:	tst	r0, #1
   14908:	bne	1530c <tcgetattr@plt+0x3f48>
   1490c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14910:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14914:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14918:	cmp	r0, #2
   1491c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   14920:	movwne	r0, #1
   14924:	orr	r0, r0, r3
   14928:	tst	r0, #1
   1492c:	beq	15020 <tcgetattr@plt+0x3c5c>
   14930:	mov	r0, r8
   14934:	b	15060 <tcgetattr@plt+0x3c9c>
   14938:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1493c:	mov	r9, #0
   14940:	mov	r5, #63	; 0x3f
   14944:	cmp	r0, #5
   14948:	beq	14cec <tcgetattr@plt+0x3928>
   1494c:	cmp	r0, #2
   14950:	bne	14dac <tcgetattr@plt+0x39e8>
   14954:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14958:	tst	r0, #1
   1495c:	beq	14db0 <tcgetattr@plt+0x39ec>
   14960:	b	15204 <tcgetattr@plt+0x3e40>
   14964:	mov	r0, #118	; 0x76
   14968:	b	14ab4 <tcgetattr@plt+0x36f0>
   1496c:	mov	r0, #1
   14970:	mov	r5, #39	; 0x27
   14974:	str	r0, [sp, #52]	; 0x34
   14978:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1497c:	cmp	r0, #2
   14980:	bne	14a08 <tcgetattr@plt+0x3644>
   14984:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14988:	tst	r0, #1
   1498c:	bne	15204 <tcgetattr@plt+0x3e40>
   14990:	ldr	r3, [sp, #68]	; 0x44
   14994:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14998:	mov	r9, #0
   1499c:	clz	r1, r2
   149a0:	cmp	r3, #0
   149a4:	mov	r0, r3
   149a8:	movwne	r0, #1
   149ac:	lsr	r1, r1, #5
   149b0:	orrs	r0, r0, r1
   149b4:	moveq	r3, r2
   149b8:	moveq	r2, r0
   149bc:	cmp	r8, r2
   149c0:	str	r3, [sp, #68]	; 0x44
   149c4:	str	r2, [fp, #-52]	; 0xffffffcc
   149c8:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   149cc:	movcc	r0, #39	; 0x27
   149d0:	strbcc	r0, [r1, r8]
   149d4:	add	r0, r8, #1
   149d8:	cmp	r0, r2
   149dc:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   149e0:	movcc	r1, #92	; 0x5c
   149e4:	strbcc	r1, [r3, r0]
   149e8:	add	r0, r8, #2
   149ec:	add	r8, r8, #3
   149f0:	cmp	r0, r2
   149f4:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   149f8:	movcc	r1, #39	; 0x27
   149fc:	strbcc	r1, [r2, r0]
   14a00:	mov	r0, #0
   14a04:	str	r0, [fp, #-48]	; 0xffffffd0
   14a08:	mov	sl, #1
   14a0c:	b	14860 <tcgetattr@plt+0x349c>
   14a10:	ldr	r0, [sp, #32]
   14a14:	cmp	r0, #1
   14a18:	bne	14bc4 <tcgetattr@plt+0x3800>
   14a1c:	str	lr, [sp, #80]	; 0x50
   14a20:	bl	11274 <__ctype_b_loc@plt>
   14a24:	ldr	r0, [r0]
   14a28:	ldr	ip, [fp, #-84]	; 0xffffffac
   14a2c:	mov	r1, #1
   14a30:	add	r0, r0, r5, lsl #1
   14a34:	ldrb	r0, [r0, #1]
   14a38:	ubfx	sl, r0, #6, #1
   14a3c:	ldr	r0, [sp, #48]	; 0x30
   14a40:	mov	r2, r1
   14a44:	cmp	r1, #1
   14a48:	orr	r0, sl, r0
   14a4c:	bhi	14db8 <tcgetattr@plt+0x39f4>
   14a50:	tst	r0, #1
   14a54:	beq	14db8 <tcgetattr@plt+0x39f4>
   14a58:	ldr	lr, [sp, #80]	; 0x50
   14a5c:	b	14860 <tcgetattr@plt+0x349c>
   14a60:	cmp	r7, #0
   14a64:	bne	14ce0 <tcgetattr@plt+0x391c>
   14a68:	ldrb	r0, [ip, #1]
   14a6c:	cmp	r0, #0
   14a70:	bne	14ce0 <tcgetattr@plt+0x391c>
   14a74:	mov	r1, #1
   14a78:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14a7c:	cmp	r0, #2
   14a80:	bne	14a90 <tcgetattr@plt+0x36cc>
   14a84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14a88:	tst	r0, #1
   14a8c:	bne	15204 <tcgetattr@plt+0x3e40>
   14a90:	mov	sl, r1
   14a94:	b	14860 <tcgetattr@plt+0x349c>
   14a98:	ldr	r1, [sp, #44]	; 0x2c
   14a9c:	mov	r9, #0
   14aa0:	mov	r0, #92	; 0x5c
   14aa4:	cmp	r1, #0
   14aa8:	beq	14ab4 <tcgetattr@plt+0x36f0>
   14aac:	mov	sl, #0
   14ab0:	b	14fcc <tcgetattr@plt+0x3c08>
   14ab4:	ldr	r1, [sp, #84]	; 0x54
   14ab8:	mov	sl, #0
   14abc:	mov	r9, #0
   14ac0:	tst	r1, #1
   14ac4:	bne	14b00 <tcgetattr@plt+0x373c>
   14ac8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14acc:	cmp	r0, #0
   14ad0:	mov	r0, r5
   14ad4:	beq	14af8 <tcgetattr@plt+0x3734>
   14ad8:	ldr	r1, [fp, #16]
   14adc:	ubfx	r0, r5, #5, #3
   14ae0:	mov	r2, #1
   14ae4:	ldr	r0, [r1, r0, lsl #2]
   14ae8:	and	r1, r5, #31
   14aec:	tst	r0, r2, lsl r1
   14af0:	mov	r0, r5
   14af4:	bne	14b00 <tcgetattr@plt+0x373c>
   14af8:	cmp	r6, #0
   14afc:	beq	14fcc <tcgetattr@plt+0x3c08>
   14b00:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14b04:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14b08:	tst	r1, #1
   14b0c:	bne	151e0 <tcgetattr@plt+0x3e1c>
   14b10:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14b14:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14b18:	cmp	r1, #2
   14b1c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   14b20:	movwne	r1, #1
   14b24:	orr	r1, r1, r5
   14b28:	tst	r1, #1
   14b2c:	bne	14b70 <tcgetattr@plt+0x37ac>
   14b30:	cmp	r8, r6
   14b34:	mov	r5, #1
   14b38:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14b3c:	movcc	r1, #39	; 0x27
   14b40:	strbcc	r1, [r2, r8]
   14b44:	add	r1, r8, #1
   14b48:	cmp	r1, r6
   14b4c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14b50:	movcc	r2, #36	; 0x24
   14b54:	strbcc	r2, [r3, r1]
   14b58:	add	r1, r8, #2
   14b5c:	add	r8, r8, #3
   14b60:	cmp	r1, r6
   14b64:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14b68:	movcc	r2, #39	; 0x27
   14b6c:	strbcc	r2, [r3, r1]
   14b70:	cmp	r8, r6
   14b74:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14b78:	movcc	r1, #92	; 0x5c
   14b7c:	strbcc	r1, [r2, r8]
   14b80:	add	r8, r8, #1
   14b84:	cmp	r8, r6
   14b88:	and	r4, r4, sl
   14b8c:	ldrcc	r1, [fp, #-56]	; 0xffffffc8
   14b90:	strbcc	r0, [r1, r8]
   14b94:	add	r8, r8, #1
   14b98:	add	r7, r7, #1
   14b9c:	b	14580 <tcgetattr@plt+0x31bc>
   14ba0:	ldr	r0, [sp, #28]
   14ba4:	mov	sl, #0
   14ba8:	mov	r9, #0
   14bac:	mov	r5, #0
   14bb0:	cmp	r0, #0
   14bb4:	beq	14ac8 <tcgetattr@plt+0x3704>
   14bb8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14bbc:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14bc0:	b	14b98 <tcgetattr@plt+0x37d4>
   14bc4:	mov	r0, #0
   14bc8:	cmn	lr, #1
   14bcc:	str	r6, [sp, #76]	; 0x4c
   14bd0:	str	r4, [sp, #20]
   14bd4:	str	r0, [fp, #-36]	; 0xffffffdc
   14bd8:	str	r0, [fp, #-40]	; 0xffffffd8
   14bdc:	bne	14bf0 <tcgetattr@plt+0x382c>
   14be0:	mov	r0, ip
   14be4:	bl	11298 <strlen@plt>
   14be8:	ldr	ip, [fp, #-84]	; 0xffffffac
   14bec:	mov	lr, r0
   14bf0:	add	r0, ip, r7
   14bf4:	mov	sl, #1
   14bf8:	mov	r6, #0
   14bfc:	sub	r4, fp, #40	; 0x28
   14c00:	str	lr, [sp, #80]	; 0x50
   14c04:	str	r0, [sp, #36]	; 0x24
   14c08:	str	r6, [sp, #40]	; 0x28
   14c0c:	add	r6, r6, r7
   14c10:	sub	r0, fp, #44	; 0x2c
   14c14:	mov	r3, r4
   14c18:	add	r1, ip, r6
   14c1c:	sub	r2, lr, r6
   14c20:	bl	17508 <tcgetattr@plt+0x6144>
   14c24:	cmp	r0, #0
   14c28:	beq	15134 <tcgetattr@plt+0x3d70>
   14c2c:	cmn	r0, #1
   14c30:	beq	150f4 <tcgetattr@plt+0x3d30>
   14c34:	ldr	lr, [sp, #80]	; 0x50
   14c38:	cmn	r0, #2
   14c3c:	beq	150fc <tcgetattr@plt+0x3d38>
   14c40:	ldr	r2, [sp, #56]	; 0x38
   14c44:	cmp	r0, #2
   14c48:	mov	r1, #0
   14c4c:	movwcc	r1, #1
   14c50:	eor	r2, r2, #1
   14c54:	orrs	r1, r2, r1
   14c58:	bne	14ca4 <tcgetattr@plt+0x38e0>
   14c5c:	ldr	r1, [sp, #40]	; 0x28
   14c60:	ldr	r2, [sp, #36]	; 0x24
   14c64:	add	ip, r2, r1
   14c68:	mov	r2, #1
   14c6c:	ldrb	r3, [ip, r2]
   14c70:	sub	r6, r3, #94	; 0x5e
   14c74:	cmp	r6, #30
   14c78:	bhi	14c8c <tcgetattr@plt+0x38c8>
   14c7c:	mov	r4, #1
   14c80:	mov	r1, #1073741829	; 0x40000005
   14c84:	tst	r1, r4, lsl r6
   14c88:	bne	15200 <tcgetattr@plt+0x3e3c>
   14c8c:	sub	r3, r3, #91	; 0x5b
   14c90:	cmp	r3, #2
   14c94:	bcc	15200 <tcgetattr@plt+0x3e3c>
   14c98:	add	r2, r2, #1
   14c9c:	cmp	r2, r0
   14ca0:	bcc	14c6c <tcgetattr@plt+0x38a8>
   14ca4:	ldr	r6, [sp, #40]	; 0x28
   14ca8:	add	r6, r0, r6
   14cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14cb0:	bl	111a8 <iswprint@plt>
   14cb4:	cmp	r0, #0
   14cb8:	sub	r4, fp, #40	; 0x28
   14cbc:	movwne	r0, #1
   14cc0:	and	sl, sl, r0
   14cc4:	mov	r0, r4
   14cc8:	bl	11154 <mbsinit@plt>
   14ccc:	ldr	lr, [sp, #80]	; 0x50
   14cd0:	ldr	ip, [fp, #-84]	; 0xffffffac
   14cd4:	cmp	r0, #0
   14cd8:	beq	14c08 <tcgetattr@plt+0x3844>
   14cdc:	b	1513c <tcgetattr@plt+0x3d78>
   14ce0:	mvn	lr, #0
   14ce4:	mov	r9, #0
   14ce8:	b	14860 <tcgetattr@plt+0x349c>
   14cec:	ldr	r0, [sp, #24]
   14cf0:	cmp	r0, #0
   14cf4:	beq	14dac <tcgetattr@plt+0x39e8>
   14cf8:	add	r0, r7, #2
   14cfc:	cmp	r0, lr
   14d00:	bcs	14dac <tcgetattr@plt+0x39e8>
   14d04:	add	r1, ip, r7
   14d08:	ldrb	r1, [r1, #1]
   14d0c:	cmp	r1, #63	; 0x3f
   14d10:	bne	14dac <tcgetattr@plt+0x39e8>
   14d14:	ldrb	r5, [ip, r0]
   14d18:	sub	r1, r5, #33	; 0x21
   14d1c:	cmp	r1, #29
   14d20:	bhi	14dac <tcgetattr@plt+0x39e8>
   14d24:	movw	r3, #20929	; 0x51c1
   14d28:	mov	r2, #1
   14d2c:	movt	r3, #14336	; 0x3800
   14d30:	tst	r3, r2, lsl r1
   14d34:	beq	14dac <tcgetattr@plt+0x39e8>
   14d38:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14d3c:	tst	r1, #1
   14d40:	bne	15314 <tcgetattr@plt+0x3f50>
   14d44:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14d48:	mov	r7, r0
   14d4c:	cmp	r8, r1
   14d50:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14d54:	movcc	r1, #63	; 0x3f
   14d58:	strbcc	r1, [r2, r8]
   14d5c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d60:	add	r1, r8, #1
   14d64:	cmp	r1, r2
   14d68:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14d6c:	movcc	r2, #34	; 0x22
   14d70:	strbcc	r2, [r3, r1]
   14d74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d78:	add	r1, r8, #2
   14d7c:	cmp	r1, r2
   14d80:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14d84:	movcc	r2, #34	; 0x22
   14d88:	strbcc	r2, [r3, r1]
   14d8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d90:	add	r1, r8, #3
   14d94:	add	r8, r8, #4
   14d98:	cmp	r1, r2
   14d9c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   14da0:	movcc	r2, #63	; 0x3f
   14da4:	strbcc	r2, [r3, r1]
   14da8:	b	14db0 <tcgetattr@plt+0x39ec>
   14dac:	mov	r5, #63	; 0x3f
   14db0:	mov	sl, #0
   14db4:	b	14860 <tcgetattr@plt+0x349c>
   14db8:	str	r0, [sp, #40]	; 0x28
   14dbc:	add	r0, r2, r7
   14dc0:	str	r6, [sp, #76]	; 0x4c
   14dc4:	add	r1, r7, #1
   14dc8:	ldr	lr, [sp, #80]	; 0x50
   14dcc:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14dd0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14dd4:	mov	r3, #0
   14dd8:	str	r0, [sp, #36]	; 0x24
   14ddc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14de0:	b	14e74 <tcgetattr@plt+0x3ab0>
   14de4:	str	r0, [sp, #76]	; 0x4c
   14de8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14dec:	cmp	r9, #0
   14df0:	movwne	r9, #1
   14df4:	mvn	r7, r0
   14df8:	orr	r7, r7, r9
   14dfc:	tst	r7, #1
   14e00:	bne	14e50 <tcgetattr@plt+0x3a8c>
   14e04:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14e08:	cmp	r8, r6
   14e0c:	bcs	14e24 <tcgetattr@plt+0x3a60>
   14e10:	ldr	r7, [fp, #-56]	; 0xffffffc8
   14e14:	mov	r2, r4
   14e18:	mov	r4, #39	; 0x27
   14e1c:	strb	r4, [r7, r8]
   14e20:	mov	r4, r2
   14e24:	add	r7, r8, #1
   14e28:	cmp	r7, r6
   14e2c:	bcs	14e44 <tcgetattr@plt+0x3a80>
   14e30:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14e34:	mov	r2, r4
   14e38:	mov	r4, #39	; 0x27
   14e3c:	strb	r4, [r0, r7]
   14e40:	mov	r4, r2
   14e44:	add	r8, r8, #2
   14e48:	mov	r0, #0
   14e4c:	b	14e58 <tcgetattr@plt+0x3a94>
   14e50:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14e58:	cmp	r8, r6
   14e5c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   14e60:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14e64:	strbcc	r5, [r2, r8]
   14e68:	add	r8, r8, #1
   14e6c:	ldrb	r5, [ip, r1]
   14e70:	add	r1, r1, #1
   14e74:	ldr	r2, [sp, #40]	; 0x28
   14e78:	tst	r2, #1
   14e7c:	beq	14eb8 <tcgetattr@plt+0x3af4>
   14e80:	ldr	r2, [sp, #76]	; 0x4c
   14e84:	str	r0, [fp, #-48]	; 0xffffffd0
   14e88:	tst	r2, #1
   14e8c:	beq	14eb0 <tcgetattr@plt+0x3aec>
   14e90:	cmp	r8, r6
   14e94:	bcs	14eac <tcgetattr@plt+0x3ae8>
   14e98:	ldr	r6, [fp, #-56]	; 0xffffffc8
   14e9c:	mov	r2, r4
   14ea0:	mov	r4, #92	; 0x5c
   14ea4:	strb	r4, [r6, r8]
   14ea8:	mov	r4, r2
   14eac:	add	r8, r8, #1
   14eb0:	mov	r0, #0
   14eb4:	b	14fac <tcgetattr@plt+0x3be8>
   14eb8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14ebc:	tst	r2, #1
   14ec0:	bne	1520c <tcgetattr@plt+0x3e48>
   14ec4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14ec8:	cmp	r7, #2
   14ecc:	movwne	r3, #1
   14ed0:	orr	r3, r3, r0
   14ed4:	tst	r3, #1
   14ed8:	bne	14f34 <tcgetattr@plt+0x3b70>
   14edc:	cmp	r8, r6
   14ee0:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14ee4:	movcc	r3, #39	; 0x27
   14ee8:	strbcc	r3, [r2, r8]
   14eec:	add	r3, r8, #1
   14ef0:	cmp	r3, r6
   14ef4:	bcs	14f0c <tcgetattr@plt+0x3b48>
   14ef8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14efc:	mov	r7, r4
   14f00:	mov	r4, #36	; 0x24
   14f04:	strb	r4, [r2, r3]
   14f08:	mov	r4, r7
   14f0c:	add	r3, r8, #2
   14f10:	cmp	r3, r6
   14f14:	bcs	14f2c <tcgetattr@plt+0x3b68>
   14f18:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f1c:	mov	r7, r4
   14f20:	mov	r4, #39	; 0x27
   14f24:	strb	r4, [r2, r3]
   14f28:	mov	r4, r7
   14f2c:	add	r8, r8, #3
   14f30:	mov	r0, #1
   14f34:	cmp	r8, r6
   14f38:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14f3c:	movcc	r3, #92	; 0x5c
   14f40:	strbcc	r3, [r2, r8]
   14f44:	add	r3, r8, #1
   14f48:	cmp	r3, r6
   14f4c:	bcs	14f6c <tcgetattr@plt+0x3ba8>
   14f50:	mov	r2, r4
   14f54:	and	r7, r5, #192	; 0xc0
   14f58:	mov	r4, #48	; 0x30
   14f5c:	orr	r7, r4, r7, lsr #6
   14f60:	mov	r4, r2
   14f64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f68:	strb	r7, [r2, r3]
   14f6c:	add	r3, r8, #2
   14f70:	cmp	r3, r6
   14f74:	bcs	14f94 <tcgetattr@plt+0x3bd0>
   14f78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14f7c:	mov	r6, r4
   14f80:	lsr	r7, r5, #3
   14f84:	mov	r4, #6
   14f88:	bfi	r7, r4, #3, #29
   14f8c:	mov	r4, r6
   14f90:	strb	r7, [r2, r3]
   14f94:	str	r0, [fp, #-48]	; 0xffffffd0
   14f98:	ldr	r0, [sp, #76]	; 0x4c
   14f9c:	mov	r3, #6
   14fa0:	add	r8, r8, #3
   14fa4:	bfi	r5, r3, #3, #29
   14fa8:	mov	r3, #1
   14fac:	ldr	r2, [sp, #36]	; 0x24
   14fb0:	and	r9, r3, #1
   14fb4:	cmp	r2, r1
   14fb8:	bhi	14de4 <tcgetattr@plt+0x3a20>
   14fbc:	cmp	r9, #0
   14fc0:	sub	r7, r1, #1
   14fc4:	mov	r0, r5
   14fc8:	movwne	r9, #1
   14fcc:	cmp	r9, #0
   14fd0:	bne	15014 <tcgetattr@plt+0x3c50>
   14fd4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   14fd8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   14fdc:	tst	r5, #1
   14fe0:	beq	14b84 <tcgetattr@plt+0x37c0>
   14fe4:	cmp	r8, r6
   14fe8:	mov	r5, #0
   14fec:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   14ff0:	movcc	r1, #39	; 0x27
   14ff4:	strbcc	r1, [r2, r8]
   14ff8:	add	r1, r8, #1
   14ffc:	add	r8, r8, #2
   15000:	cmp	r1, r6
   15004:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   15008:	movcc	r2, #39	; 0x27
   1500c:	strbcc	r2, [r3, r1]
   15010:	b	14b84 <tcgetattr@plt+0x37c0>
   15014:	ldr	r6, [fp, #-52]	; 0xffffffcc
   15018:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1501c:	b	14b84 <tcgetattr@plt+0x37c0>
   15020:	cmp	r8, r1
   15024:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   15028:	movcc	r0, #39	; 0x27
   1502c:	strbcc	r0, [r2, r8]
   15030:	add	r0, r8, #1
   15034:	cmp	r0, r1
   15038:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   1503c:	movcc	r2, #36	; 0x24
   15040:	strbcc	r2, [r3, r0]
   15044:	add	r0, r8, #2
   15048:	cmp	r0, r1
   1504c:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   15050:	movcc	r2, #39	; 0x27
   15054:	strbcc	r2, [r3, r0]
   15058:	add	r0, r8, #3
   1505c:	mov	r3, #1
   15060:	cmp	r0, r1
   15064:	add	r8, r0, #1
   15068:	str	r3, [fp, #-48]	; 0xffffffd0
   1506c:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   15070:	movcc	r1, #92	; 0x5c
   15074:	strbcc	r1, [r2, r0]
   15078:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1507c:	cmp	r1, #2
   15080:	beq	150e4 <tcgetattr@plt+0x3d20>
   15084:	add	r1, r7, #1
   15088:	mov	sl, #0
   1508c:	mov	r9, #1
   15090:	mov	r5, #48	; 0x30
   15094:	cmp	r1, lr
   15098:	bcs	14860 <tcgetattr@plt+0x349c>
   1509c:	ldrb	r1, [ip, r1]
   150a0:	sub	r1, r1, #48	; 0x30
   150a4:	uxtb	r1, r1
   150a8:	cmp	r1, #9
   150ac:	bhi	14860 <tcgetattr@plt+0x349c>
   150b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   150b4:	cmp	r8, r1
   150b8:	ldrcc	r2, [fp, #-56]	; 0xffffffc8
   150bc:	movcc	r1, #48	; 0x30
   150c0:	strbcc	r1, [r2, r8]
   150c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   150c8:	add	r1, r0, #2
   150cc:	add	r8, r0, #3
   150d0:	cmp	r1, r2
   150d4:	ldrcc	r3, [fp, #-56]	; 0xffffffc8
   150d8:	movcc	r2, #48	; 0x30
   150dc:	strbcc	r2, [r3, r1]
   150e0:	b	14860 <tcgetattr@plt+0x349c>
   150e4:	mov	r0, #48	; 0x30
   150e8:	mov	r9, #1
   150ec:	mov	sl, #0
   150f0:	b	14af8 <tcgetattr@plt+0x3734>
   150f4:	mov	sl, #0
   150f8:	b	15134 <tcgetattr@plt+0x3d70>
   150fc:	mov	sl, #0
   15100:	cmp	lr, r6
   15104:	bls	15134 <tcgetattr@plt+0x3d70>
   15108:	ldr	ip, [fp, #-84]	; 0xffffffac
   1510c:	ldr	r6, [sp, #40]	; 0x28
   15110:	ldr	r0, [sp, #36]	; 0x24
   15114:	ldrb	r0, [r0, r6]
   15118:	cmp	r0, #0
   1511c:	beq	1513c <tcgetattr@plt+0x3d78>
   15120:	add	r6, r6, #1
   15124:	add	r0, r7, r6
   15128:	cmp	r0, lr
   1512c:	bcc	15110 <tcgetattr@plt+0x3d4c>
   15130:	b	1513c <tcgetattr@plt+0x3d78>
   15134:	ldr	ip, [fp, #-84]	; 0xffffffac
   15138:	ldr	r6, [sp, #40]	; 0x28
   1513c:	mov	r1, r6
   15140:	ldr	r4, [sp, #20]
   15144:	ldr	r6, [sp, #76]	; 0x4c
   15148:	b	14a3c <tcgetattr@plt+0x3678>
   1514c:	mov	lr, r7
   15150:	b	15158 <tcgetattr@plt+0x3d94>
   15154:	mvn	lr, #0
   15158:	ldr	r9, [fp, #-64]	; 0xffffffc0
   1515c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15160:	eor	r0, r9, #2
   15164:	orr	r0, r0, r8
   15168:	clz	r0, r0
   1516c:	lsr	r0, r0, #5
   15170:	tst	r1, r0
   15174:	bne	15270 <tcgetattr@plt+0x3eac>
   15178:	mov	r0, r1
   1517c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   15180:	cmp	r9, #2
   15184:	movwne	r1, #1
   15188:	orr	r0, r0, r1
   1518c:	tst	r0, #1
   15190:	bne	152b0 <tcgetattr@plt+0x3eec>
   15194:	ldr	r0, [sp, #52]	; 0x34
   15198:	ldr	r1, [sp, #68]	; 0x44
   1519c:	str	lr, [sp, #80]	; 0x50
   151a0:	eor	r0, r0, #1
   151a4:	tst	r0, #1
   151a8:	bne	152b0 <tcgetattr@plt+0x3eec>
   151ac:	tst	r4, #1
   151b0:	bne	15278 <tcgetattr@plt+0x3eb4>
   151b4:	mov	r7, #0
   151b8:	cmp	r1, #0
   151bc:	beq	152a8 <tcgetattr@plt+0x3ee4>
   151c0:	ldr	r0, [sp, #84]	; 0x54
   151c4:	mov	r3, #0
   151c8:	cmp	r6, #0
   151cc:	mov	r2, #0
   151d0:	mov	r4, r1
   151d4:	str	r3, [fp, #-72]	; 0xffffffb8
   151d8:	beq	14314 <tcgetattr@plt+0x2f50>
   151dc:	b	152b0 <tcgetattr@plt+0x3eec>
   151e0:	ldr	r7, [fp, #-64]	; 0xffffffc0
   151e4:	b	1520c <tcgetattr@plt+0x3e48>
   151e8:	ldr	ip, [fp, #-84]	; 0xffffffac
   151ec:	mov	r2, #1
   151f0:	mov	lr, r4
   151f4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   151f8:	ldr	r6, [fp, #-52]	; 0xffffffcc
   151fc:	b	15210 <tcgetattr@plt+0x3e4c>
   15200:	ldr	ip, [fp, #-84]	; 0xffffffac
   15204:	mov	r7, #2
   15208:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1520c:	ldr	r2, [sp, #84]	; 0x54
   15210:	mov	r0, #0
   15214:	ldr	r1, [fp, #12]
   15218:	tst	r2, #1
   1521c:	mov	r2, r7
   15220:	mov	r3, lr
   15224:	str	r0, [sp, #8]
   15228:	ldr	r0, [sp, #64]	; 0x40
   1522c:	movwne	r2, #4
   15230:	cmp	r7, #2
   15234:	movne	r2, r7
   15238:	str	r2, [sp]
   1523c:	mov	r2, ip
   15240:	bic	r1, r1, #2
   15244:	str	r0, [sp, #12]
   15248:	ldr	r0, [sp, #72]	; 0x48
   1524c:	str	r1, [sp, #4]
   15250:	mov	r1, r6
   15254:	str	r0, [sp, #16]
   15258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1525c:	bl	1429c <tcgetattr@plt+0x2ed8>
   15260:	mov	r8, r0
   15264:	mov	r0, r8
   15268:	sub	sp, fp, #28
   1526c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15270:	mov	r7, #2
   15274:	b	1520c <tcgetattr@plt+0x3e48>
   15278:	mov	r0, #5
   1527c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15280:	ldr	r3, [sp, #80]	; 0x50
   15284:	str	r0, [sp]
   15288:	ldr	r0, [fp, #12]
   1528c:	str	r0, [sp, #4]
   15290:	ldr	r0, [fp, #16]
   15294:	str	r0, [sp, #8]
   15298:	ldr	r0, [sp, #64]	; 0x40
   1529c:	str	r0, [sp, #12]
   152a0:	ldr	r0, [sp, #72]	; 0x48
   152a4:	b	15254 <tcgetattr@plt+0x3e90>
   152a8:	mov	r0, #0
   152ac:	str	r0, [fp, #-72]	; 0xffffffb8
   152b0:	ldr	r1, [sp, #92]	; 0x5c
   152b4:	cmp	r1, #0
   152b8:	beq	152f8 <tcgetattr@plt+0x3f34>
   152bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   152c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   152c4:	tst	r0, #1
   152c8:	bne	152fc <tcgetattr@plt+0x3f38>
   152cc:	ldrb	r0, [r1]
   152d0:	cmp	r0, #0
   152d4:	beq	152fc <tcgetattr@plt+0x3f38>
   152d8:	add	r1, r1, #1
   152dc:	cmp	r8, r6
   152e0:	strbcc	r0, [r2, r8]
   152e4:	add	r8, r8, #1
   152e8:	ldrb	r0, [r1], #1
   152ec:	cmp	r0, #0
   152f0:	bne	152dc <tcgetattr@plt+0x3f18>
   152f4:	b	152fc <tcgetattr@plt+0x3f38>
   152f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   152fc:	cmp	r8, r6
   15300:	movcc	r0, #0
   15304:	strbcc	r0, [r2, r8]
   15308:	b	15264 <tcgetattr@plt+0x3ea0>
   1530c:	mov	r2, #1
   15310:	b	151f4 <tcgetattr@plt+0x3e30>
   15314:	mov	r7, #5
   15318:	b	15208 <tcgetattr@plt+0x3e44>
   1531c:	bl	11394 <abort@plt>
   15320:	mov	r3, r2
   15324:	mov	r2, #0
   15328:	b	1532c <tcgetattr@plt+0x3f68>
   1532c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15330:	add	fp, sp, #28
   15334:	sub	sp, sp, #36	; 0x24
   15338:	movw	r8, #45664	; 0xb260
   1533c:	cmp	r3, #0
   15340:	mov	r4, r2
   15344:	str	r2, [sp, #24]
   15348:	mov	r5, r1
   1534c:	mov	r6, r0
   15350:	str	r0, [sp, #20]
   15354:	movt	r8, #2
   15358:	movne	r8, r3
   1535c:	bl	112c8 <__errno_location@plt>
   15360:	str	r0, [sp, #28]
   15364:	cmp	r4, #0
   15368:	add	sl, r8, #8
   1536c:	ldm	r8, {r3, r9}
   15370:	ldr	r7, [r0]
   15374:	ldr	r1, [r8, #40]	; 0x28
   15378:	ldr	r2, [r8, #44]	; 0x2c
   1537c:	mov	r0, #0
   15380:	orreq	r9, r9, #1
   15384:	str	r7, [sp, #32]
   15388:	mov	r7, r5
   1538c:	stm	sp, {r3, r9, sl}
   15390:	str	r1, [sp, #12]
   15394:	str	r2, [sp, #16]
   15398:	mov	r1, #0
   1539c:	mov	r2, r6
   153a0:	mov	r3, r5
   153a4:	bl	1429c <tcgetattr@plt+0x2ed8>
   153a8:	add	r4, r0, #1
   153ac:	mov	r5, r0
   153b0:	mov	r0, r4
   153b4:	bl	16090 <tcgetattr@plt+0x4ccc>
   153b8:	mov	r6, r0
   153bc:	ldr	r0, [r8]
   153c0:	ldr	r2, [r8, #44]	; 0x2c
   153c4:	ldr	r1, [r8, #40]	; 0x28
   153c8:	mov	r3, r7
   153cc:	stm	sp, {r0, r9, sl}
   153d0:	str	r2, [sp, #16]
   153d4:	str	r1, [sp, #12]
   153d8:	mov	r0, r6
   153dc:	mov	r1, r4
   153e0:	ldr	r2, [sp, #20]
   153e4:	bl	1429c <tcgetattr@plt+0x2ed8>
   153e8:	ldr	r0, [sp, #24]
   153ec:	ldr	r1, [sp, #32]
   153f0:	ldr	r2, [sp, #28]
   153f4:	cmp	r0, #0
   153f8:	str	r1, [r2]
   153fc:	strne	r5, [r0]
   15400:	mov	r0, r6
   15404:	sub	sp, fp, #28
   15408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1540c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15410:	add	fp, sp, #24
   15414:	movw	r5, #45348	; 0xb124
   15418:	movw	r8, #45344	; 0xb120
   1541c:	movt	r5, #2
   15420:	movt	r8, #2
   15424:	ldr	r0, [r5]
   15428:	ldr	r4, [r8]
   1542c:	cmp	r0, #2
   15430:	blt	1545c <tcgetattr@plt+0x4098>
   15434:	add	r7, r4, #12
   15438:	mov	r6, #0
   1543c:	ldr	r0, [r7, r6, lsl #3]
   15440:	bl	14040 <tcgetattr@plt+0x2c7c>
   15444:	ldr	r1, [r5]
   15448:	add	r2, r6, #2
   1544c:	add	r0, r6, #1
   15450:	mov	r6, r0
   15454:	cmp	r2, r1
   15458:	blt	1543c <tcgetattr@plt+0x4078>
   1545c:	ldr	r0, [r4, #4]
   15460:	movw	r7, #45712	; 0xb290
   15464:	movt	r7, #2
   15468:	cmp	r0, r7
   1546c:	beq	15484 <tcgetattr@plt+0x40c0>
   15470:	bl	14040 <tcgetattr@plt+0x2c7c>
   15474:	movw	r0, #45352	; 0xb128
   15478:	mov	r6, #256	; 0x100
   1547c:	movt	r0, #2
   15480:	strd	r6, [r0]
   15484:	movw	r6, #45352	; 0xb128
   15488:	movt	r6, #2
   1548c:	cmp	r4, r6
   15490:	beq	154a0 <tcgetattr@plt+0x40dc>
   15494:	mov	r0, r4
   15498:	bl	14040 <tcgetattr@plt+0x2c7c>
   1549c:	str	r6, [r8]
   154a0:	mov	r0, #1
   154a4:	str	r0, [r5]
   154a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   154ac:	movw	r3, #45664	; 0xb260
   154b0:	mvn	r2, #0
   154b4:	movt	r3, #2
   154b8:	b	154bc <tcgetattr@plt+0x40f8>
   154bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154c0:	add	fp, sp, #28
   154c4:	sub	sp, sp, #44	; 0x2c
   154c8:	mov	r7, r3
   154cc:	str	r2, [sp, #36]	; 0x24
   154d0:	str	r1, [sp, #32]
   154d4:	mov	r5, r0
   154d8:	bl	112c8 <__errno_location@plt>
   154dc:	cmp	r5, #0
   154e0:	blt	1564c <tcgetattr@plt+0x4288>
   154e4:	cmn	r5, #-2147483647	; 0x80000001
   154e8:	beq	1564c <tcgetattr@plt+0x4288>
   154ec:	movw	r8, #45348	; 0xb124
   154f0:	movw	r4, #45344	; 0xb120
   154f4:	str	r0, [sp, #28]
   154f8:	ldr	r0, [r0]
   154fc:	movt	r8, #2
   15500:	movt	r4, #2
   15504:	ldr	r1, [r8]
   15508:	ldr	r6, [r4]
   1550c:	str	r0, [sp, #24]
   15510:	cmp	r1, r5
   15514:	ble	15520 <tcgetattr@plt+0x415c>
   15518:	mov	sl, r6
   1551c:	b	15588 <tcgetattr@plt+0x41c4>
   15520:	movw	r9, #45352	; 0xb128
   15524:	mov	r0, #8
   15528:	add	r2, r5, #1
   1552c:	str	r1, [fp, #-32]	; 0xffffffe0
   15530:	mvn	r3, #-2147483648	; 0x80000000
   15534:	movt	r9, #2
   15538:	str	r0, [sp]
   1553c:	sub	r2, r2, r1
   15540:	sub	r1, fp, #32
   15544:	subs	r0, r6, r9
   15548:	movne	r0, r6
   1554c:	bl	161c0 <tcgetattr@plt+0x4dfc>
   15550:	cmp	r6, r9
   15554:	mov	sl, r0
   15558:	str	r0, [r4]
   1555c:	ldrdeq	r0, [r9]
   15560:	stmeq	sl, {r0, r1}
   15564:	ldr	r1, [r8]
   15568:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1556c:	add	r0, sl, r1, lsl #3
   15570:	sub	r1, r2, r1
   15574:	lsl	r2, r1, #3
   15578:	mov	r1, #0
   1557c:	bl	112ec <memset@plt>
   15580:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15584:	str	r0, [r8]
   15588:	mov	r9, sl
   1558c:	ldr	r6, [r9, r5, lsl #3]!
   15590:	ldr	r4, [r9, #4]!
   15594:	ldm	r7, {r0, r1}
   15598:	ldr	r2, [r7, #40]	; 0x28
   1559c:	ldr	r3, [r7, #44]	; 0x2c
   155a0:	orr	r8, r1, #1
   155a4:	add	r1, r7, #8
   155a8:	stm	sp, {r0, r8}
   155ac:	add	r0, sp, #8
   155b0:	str	r1, [sp, #20]
   155b4:	stm	r0, {r1, r2, r3}
   155b8:	mov	r0, r4
   155bc:	mov	r1, r6
   155c0:	ldr	r2, [sp, #32]
   155c4:	ldr	r3, [sp, #36]	; 0x24
   155c8:	bl	1429c <tcgetattr@plt+0x2ed8>
   155cc:	cmp	r6, r0
   155d0:	bhi	15634 <tcgetattr@plt+0x4270>
   155d4:	add	r6, r0, #1
   155d8:	movw	r0, #45712	; 0xb290
   155dc:	movt	r0, #2
   155e0:	str	r6, [sl, r5, lsl #3]
   155e4:	cmp	r4, r0
   155e8:	beq	155f4 <tcgetattr@plt+0x4230>
   155ec:	mov	r0, r4
   155f0:	bl	14040 <tcgetattr@plt+0x2c7c>
   155f4:	mov	r0, r6
   155f8:	bl	16090 <tcgetattr@plt+0x4ccc>
   155fc:	str	r0, [r9]
   15600:	mov	r4, r0
   15604:	add	r3, sp, #8
   15608:	ldr	r0, [r7]
   1560c:	ldr	r1, [r7, #40]	; 0x28
   15610:	ldr	r2, [r7, #44]	; 0x2c
   15614:	stm	sp, {r0, r8}
   15618:	ldr	r0, [sp, #20]
   1561c:	stm	r3, {r0, r1, r2}
   15620:	mov	r0, r4
   15624:	mov	r1, r6
   15628:	ldr	r2, [sp, #32]
   1562c:	ldr	r3, [sp, #36]	; 0x24
   15630:	bl	1429c <tcgetattr@plt+0x2ed8>
   15634:	ldr	r0, [sp, #28]
   15638:	ldr	r1, [sp, #24]
   1563c:	str	r1, [r0]
   15640:	mov	r0, r4
   15644:	sub	sp, fp, #28
   15648:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1564c:	bl	11394 <abort@plt>
   15650:	movw	r3, #45664	; 0xb260
   15654:	movt	r3, #2
   15658:	b	154bc <tcgetattr@plt+0x40f8>
   1565c:	movw	r3, #45664	; 0xb260
   15660:	mov	r1, r0
   15664:	mov	r0, #0
   15668:	mvn	r2, #0
   1566c:	movt	r3, #2
   15670:	b	154bc <tcgetattr@plt+0x40f8>
   15674:	movw	r3, #45664	; 0xb260
   15678:	mov	r2, r1
   1567c:	mov	r1, r0
   15680:	mov	r0, #0
   15684:	movt	r3, #2
   15688:	b	154bc <tcgetattr@plt+0x40f8>
   1568c:	push	{fp, lr}
   15690:	mov	fp, sp
   15694:	sub	sp, sp, #48	; 0x30
   15698:	vmov.i32	q8, #0	; 0x00000000
   1569c:	mov	ip, #32
   156a0:	mov	r3, sp
   156a4:	mov	lr, r2
   156a8:	cmp	r1, #10
   156ac:	add	r2, r3, #16
   156b0:	vst1.64	{d16-d17}, [r3], ip
   156b4:	vst1.64	{d16-d17}, [r3]
   156b8:	vst1.64	{d16-d17}, [r2]
   156bc:	beq	156dc <tcgetattr@plt+0x4318>
   156c0:	str	r1, [sp]
   156c4:	mov	r3, sp
   156c8:	mov	r1, lr
   156cc:	mvn	r2, #0
   156d0:	bl	154bc <tcgetattr@plt+0x40f8>
   156d4:	mov	sp, fp
   156d8:	pop	{fp, pc}
   156dc:	bl	11394 <abort@plt>
   156e0:	push	{r4, sl, fp, lr}
   156e4:	add	fp, sp, #8
   156e8:	sub	sp, sp, #48	; 0x30
   156ec:	mov	ip, r3
   156f0:	mov	r3, sp
   156f4:	vmov.i32	q8, #0	; 0x00000000
   156f8:	mov	lr, #32
   156fc:	cmp	r1, #10
   15700:	add	r4, r3, #16
   15704:	vst1.64	{d16-d17}, [r3], lr
   15708:	vst1.64	{d16-d17}, [r3]
   1570c:	vst1.64	{d16-d17}, [r4]
   15710:	beq	15730 <tcgetattr@plt+0x436c>
   15714:	str	r1, [sp]
   15718:	mov	r1, r2
   1571c:	mov	r3, sp
   15720:	mov	r2, ip
   15724:	bl	154bc <tcgetattr@plt+0x40f8>
   15728:	sub	sp, fp, #8
   1572c:	pop	{r4, sl, fp, pc}
   15730:	bl	11394 <abort@plt>
   15734:	mov	r2, r1
   15738:	mov	r1, r0
   1573c:	mov	r0, #0
   15740:	b	1568c <tcgetattr@plt+0x42c8>
   15744:	mov	r3, r2
   15748:	mov	r2, r1
   1574c:	mov	r1, r0
   15750:	mov	r0, #0
   15754:	b	156e0 <tcgetattr@plt+0x431c>
   15758:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1575c:	add	fp, sp, #24
   15760:	sub	sp, sp, #48	; 0x30
   15764:	movw	r8, #45664	; 0xb260
   15768:	mov	lr, r0
   1576c:	mov	r3, sp
   15770:	mov	ip, r1
   15774:	movt	r8, #2
   15778:	mov	r1, r3
   1577c:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   15780:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   15784:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   15788:	stm	r1, {r0, r4, r5, r6, r7, r9}
   1578c:	ubfx	r0, r2, #5, #3
   15790:	and	r2, r2, #31
   15794:	mov	r4, #1
   15798:	add	r0, r3, r0, lsl #2
   1579c:	ldr	r1, [r0, #8]
   157a0:	bic	r4, r4, r1, lsr r2
   157a4:	eor	r1, r1, r4, lsl r2
   157a8:	mov	r2, ip
   157ac:	str	r1, [r0, #8]
   157b0:	mov	r0, #0
   157b4:	mov	r1, lr
   157b8:	bl	154bc <tcgetattr@plt+0x40f8>
   157bc:	sub	sp, fp, #24
   157c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157c8:	add	fp, sp, #24
   157cc:	sub	sp, sp, #48	; 0x30
   157d0:	movw	lr, #45664	; 0xb260
   157d4:	mov	ip, r0
   157d8:	mov	r3, sp
   157dc:	movt	lr, #2
   157e0:	mov	r2, r3
   157e4:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   157e8:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   157ec:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   157f0:	stm	r2, {r0, r4, r5, r6, r7, r8}
   157f4:	ubfx	r0, r1, #5, #3
   157f8:	and	r1, r1, #31
   157fc:	mov	r7, #1
   15800:	add	r0, r3, r0, lsl #2
   15804:	ldr	r2, [r0, #8]
   15808:	bic	r7, r7, r2, lsr r1
   1580c:	eor	r1, r2, r7, lsl r1
   15810:	mvn	r2, #0
   15814:	str	r1, [r0, #8]
   15818:	mov	r0, #0
   1581c:	mov	r1, ip
   15820:	bl	154bc <tcgetattr@plt+0x40f8>
   15824:	sub	sp, fp, #24
   15828:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1582c:	push	{r4, r5, r6, r7, fp, lr}
   15830:	add	fp, sp, #16
   15834:	sub	sp, sp, #48	; 0x30
   15838:	movw	lr, #45664	; 0xb260
   1583c:	mov	ip, r0
   15840:	mov	r3, sp
   15844:	movt	lr, #2
   15848:	mov	r2, r3
   1584c:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   15850:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   15854:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   15858:	stm	r2, {r0, r1, r4, r5, r6, r7}
   1585c:	mov	r1, ip
   15860:	mvn	r2, #0
   15864:	ldr	r0, [sp, #12]
   15868:	orr	r0, r0, #67108864	; 0x4000000
   1586c:	str	r0, [sp, #12]
   15870:	mov	r0, #0
   15874:	bl	154bc <tcgetattr@plt+0x40f8>
   15878:	sub	sp, fp, #16
   1587c:	pop	{r4, r5, r6, r7, fp, pc}
   15880:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15884:	add	fp, sp, #24
   15888:	sub	sp, sp, #48	; 0x30
   1588c:	movw	r8, #45664	; 0xb260
   15890:	mov	ip, r1
   15894:	mov	lr, r0
   15898:	mov	r3, sp
   1589c:	movt	r8, #2
   158a0:	mov	r2, r3
   158a4:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   158a8:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   158ac:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   158b0:	stm	r2, {r0, r1, r4, r5, r6, r7}
   158b4:	mov	r1, lr
   158b8:	mov	r2, ip
   158bc:	ldr	r0, [sp, #12]
   158c0:	orr	r0, r0, #67108864	; 0x4000000
   158c4:	str	r0, [sp, #12]
   158c8:	mov	r0, #0
   158cc:	bl	154bc <tcgetattr@plt+0x40f8>
   158d0:	sub	sp, fp, #24
   158d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   158d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   158dc:	add	fp, sp, #24
   158e0:	sub	sp, sp, #96	; 0x60
   158e4:	mov	lr, sp
   158e8:	vmov.i32	q8, #0	; 0x00000000
   158ec:	mov	ip, r2
   158f0:	cmp	r1, #10
   158f4:	add	r3, lr, #16
   158f8:	mov	r2, lr
   158fc:	vst1.64	{d16-d17}, [r3]
   15900:	mov	r3, #28
   15904:	vst1.64	{d16-d17}, [r2], r3
   15908:	vst1.32	{d16-d17}, [r2]
   1590c:	beq	1594c <tcgetattr@plt+0x4588>
   15910:	str	r1, [sp, #48]	; 0x30
   15914:	add	r3, sp, #48	; 0x30
   15918:	ldm	lr!, {r2, r4, r5, r6, r7}
   1591c:	add	r1, r3, #4
   15920:	stmia	r1!, {r2, r4, r5, r6, r7}
   15924:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   15928:	stm	r1, {r2, r4, r5, r6, r7, r8}
   1592c:	mvn	r2, #0
   15930:	ldr	r1, [sp, #60]	; 0x3c
   15934:	orr	r1, r1, #67108864	; 0x4000000
   15938:	str	r1, [sp, #60]	; 0x3c
   1593c:	mov	r1, ip
   15940:	bl	154bc <tcgetattr@plt+0x40f8>
   15944:	sub	sp, fp, #24
   15948:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1594c:	bl	11394 <abort@plt>
   15950:	push	{fp, lr}
   15954:	mov	fp, sp
   15958:	sub	sp, sp, #8
   1595c:	mvn	ip, #0
   15960:	str	ip, [sp]
   15964:	bl	15970 <tcgetattr@plt+0x45ac>
   15968:	mov	sp, fp
   1596c:	pop	{fp, pc}
   15970:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15974:	add	fp, sp, #24
   15978:	sub	sp, sp, #48	; 0x30
   1597c:	movw	ip, #45664	; 0xb260
   15980:	mov	lr, r3
   15984:	mov	r3, sp
   15988:	cmp	r1, #0
   1598c:	movt	ip, #2
   15990:	cmpne	r2, #0
   15994:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   15998:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   1599c:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   159a0:	stm	r3, {r4, r5, r6, r7, r8, r9}
   159a4:	mov	r3, #10
   159a8:	str	r3, [sp]
   159ac:	bne	159b4 <tcgetattr@plt+0x45f0>
   159b0:	bl	11394 <abort@plt>
   159b4:	ldr	ip, [fp, #8]
   159b8:	str	r2, [sp, #44]	; 0x2c
   159bc:	str	r1, [sp, #40]	; 0x28
   159c0:	mov	r3, sp
   159c4:	mov	r1, lr
   159c8:	mov	r2, ip
   159cc:	bl	154bc <tcgetattr@plt+0x40f8>
   159d0:	sub	sp, fp, #24
   159d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   159d8:	push	{fp, lr}
   159dc:	mov	fp, sp
   159e0:	sub	sp, sp, #8
   159e4:	mov	r3, r2
   159e8:	mov	r2, r1
   159ec:	mov	r1, r0
   159f0:	mvn	r0, #0
   159f4:	str	r0, [sp]
   159f8:	mov	r0, #0
   159fc:	bl	15970 <tcgetattr@plt+0x45ac>
   15a00:	mov	sp, fp
   15a04:	pop	{fp, pc}
   15a08:	push	{fp, lr}
   15a0c:	mov	fp, sp
   15a10:	sub	sp, sp, #8
   15a14:	mov	ip, r2
   15a18:	mov	r2, r1
   15a1c:	mov	r1, r0
   15a20:	str	r3, [sp]
   15a24:	mov	r0, #0
   15a28:	mov	r3, ip
   15a2c:	bl	15970 <tcgetattr@plt+0x45ac>
   15a30:	mov	sp, fp
   15a34:	pop	{fp, pc}
   15a38:	movw	r3, #45360	; 0xb130
   15a3c:	movt	r3, #2
   15a40:	b	154bc <tcgetattr@plt+0x40f8>
   15a44:	movw	r3, #45360	; 0xb130
   15a48:	mov	r2, r1
   15a4c:	mov	r1, r0
   15a50:	mov	r0, #0
   15a54:	movt	r3, #2
   15a58:	b	154bc <tcgetattr@plt+0x40f8>
   15a5c:	movw	r3, #45360	; 0xb130
   15a60:	mvn	r2, #0
   15a64:	movt	r3, #2
   15a68:	b	154bc <tcgetattr@plt+0x40f8>
   15a6c:	movw	r3, #45360	; 0xb130
   15a70:	mov	r1, r0
   15a74:	mov	r0, #0
   15a78:	mvn	r2, #0
   15a7c:	movt	r3, #2
   15a80:	b	154bc <tcgetattr@plt+0x40f8>
   15a84:	push	{r4, r5, fp, lr}
   15a88:	add	fp, sp, #8
   15a8c:	mov	r5, r0
   15a90:	mov	r4, r1
   15a94:	mov	r0, #0
   15a98:	mov	r2, #5
   15a9c:	mov	r1, r5
   15aa0:	bl	1116c <dcgettext@plt>
   15aa4:	cmp	r0, r5
   15aa8:	popne	{r4, r5, fp, pc}
   15aac:	bl	174d0 <tcgetattr@plt+0x610c>
   15ab0:	ldrb	r1, [r0]
   15ab4:	and	r1, r1, #223	; 0xdf
   15ab8:	cmp	r1, #71	; 0x47
   15abc:	beq	15b24 <tcgetattr@plt+0x4760>
   15ac0:	cmp	r1, #85	; 0x55
   15ac4:	bne	15b48 <tcgetattr@plt+0x4784>
   15ac8:	ldrb	r1, [r0, #1]
   15acc:	and	r1, r1, #223	; 0xdf
   15ad0:	cmp	r1, #84	; 0x54
   15ad4:	bne	15b48 <tcgetattr@plt+0x4784>
   15ad8:	ldrb	r1, [r0, #2]
   15adc:	and	r1, r1, #223	; 0xdf
   15ae0:	cmp	r1, #70	; 0x46
   15ae4:	ldrbeq	r1, [r0, #3]
   15ae8:	cmpeq	r1, #45	; 0x2d
   15aec:	bne	15b48 <tcgetattr@plt+0x4784>
   15af0:	ldrb	r1, [r0, #4]
   15af4:	cmp	r1, #56	; 0x38
   15af8:	ldrbeq	r0, [r0, #5]
   15afc:	cmpeq	r0, #0
   15b00:	bne	15b48 <tcgetattr@plt+0x4784>
   15b04:	ldrb	r1, [r5]
   15b08:	movw	r2, #43532	; 0xaa0c
   15b0c:	movw	r0, #43536	; 0xaa10
   15b10:	movt	r2, #1
   15b14:	movt	r0, #1
   15b18:	cmp	r1, #96	; 0x60
   15b1c:	moveq	r0, r2
   15b20:	pop	{r4, r5, fp, pc}
   15b24:	ldrb	r1, [r0, #1]
   15b28:	and	r1, r1, #223	; 0xdf
   15b2c:	cmp	r1, #66	; 0x42
   15b30:	bne	15b48 <tcgetattr@plt+0x4784>
   15b34:	ldrb	r1, [r0, #2]
   15b38:	cmp	r1, #49	; 0x31
   15b3c:	ldrbeq	r1, [r0, #3]
   15b40:	cmpeq	r1, #56	; 0x38
   15b44:	beq	15b64 <tcgetattr@plt+0x47a0>
   15b48:	movw	r1, #43526	; 0xaa06
   15b4c:	movw	r0, #43530	; 0xaa0a
   15b50:	cmp	r4, #9
   15b54:	movt	r1, #1
   15b58:	movt	r0, #1
   15b5c:	moveq	r0, r1
   15b60:	pop	{r4, r5, fp, pc}
   15b64:	ldrb	r1, [r0, #4]
   15b68:	cmp	r1, #48	; 0x30
   15b6c:	ldrbeq	r1, [r0, #5]
   15b70:	cmpeq	r1, #51	; 0x33
   15b74:	bne	15b48 <tcgetattr@plt+0x4784>
   15b78:	ldrb	r1, [r0, #6]
   15b7c:	cmp	r1, #48	; 0x30
   15b80:	ldrbeq	r0, [r0, #7]
   15b84:	cmpeq	r0, #0
   15b88:	bne	15b48 <tcgetattr@plt+0x4784>
   15b8c:	ldrb	r1, [r5]
   15b90:	movw	r2, #43540	; 0xaa14
   15b94:	movw	r0, #43544	; 0xaa18
   15b98:	movt	r2, #1
   15b9c:	movt	r0, #1
   15ba0:	b	15b18 <tcgetattr@plt+0x4754>
   15ba4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15ba8:	add	fp, sp, #24
   15bac:	sub	sp, sp, #32
   15bb0:	ldr	r6, [fp, #12]
   15bb4:	ldr	r7, [fp, #8]
   15bb8:	mov	r4, r2
   15bbc:	mov	r8, r0
   15bc0:	cmp	r1, #0
   15bc4:	beq	15bec <tcgetattr@plt+0x4828>
   15bc8:	movw	r2, #43632	; 0xaa70
   15bcc:	mov	r5, r1
   15bd0:	str	r3, [sp, #4]
   15bd4:	str	r4, [sp]
   15bd8:	mov	r0, r8
   15bdc:	mov	r1, #1
   15be0:	movt	r2, #1
   15be4:	mov	r3, r5
   15be8:	b	15c04 <tcgetattr@plt+0x4840>
   15bec:	movw	r2, #43644	; 0xaa7c
   15bf0:	str	r3, [sp]
   15bf4:	mov	r0, r8
   15bf8:	mov	r1, #1
   15bfc:	mov	r3, r4
   15c00:	movt	r2, #1
   15c04:	bl	1131c <__fprintf_chk@plt>
   15c08:	movw	r1, #43651	; 0xaa83
   15c0c:	mov	r0, #0
   15c10:	mov	r2, #5
   15c14:	movt	r1, #1
   15c18:	bl	1116c <dcgettext@plt>
   15c1c:	movw	r2, #44369	; 0xad51
   15c20:	mov	r3, r0
   15c24:	movw	r0, #2022	; 0x7e6
   15c28:	mov	r1, #1
   15c2c:	str	r0, [sp]
   15c30:	movt	r2, #1
   15c34:	mov	r0, r8
   15c38:	bl	1131c <__fprintf_chk@plt>
   15c3c:	movw	r4, #36145	; 0x8d31
   15c40:	mov	r1, r8
   15c44:	movt	r4, #1
   15c48:	mov	r0, r4
   15c4c:	bl	110f4 <fputs_unlocked@plt>
   15c50:	movw	r1, #43655	; 0xaa87
   15c54:	mov	r0, #0
   15c58:	mov	r2, #5
   15c5c:	movt	r1, #1
   15c60:	bl	1116c <dcgettext@plt>
   15c64:	movw	r3, #43826	; 0xab32
   15c68:	mov	r2, r0
   15c6c:	mov	r0, r8
   15c70:	mov	r1, #1
   15c74:	movt	r3, #1
   15c78:	bl	1131c <__fprintf_chk@plt>
   15c7c:	mov	r0, r4
   15c80:	mov	r1, r8
   15c84:	bl	110f4 <fputs_unlocked@plt>
   15c88:	cmp	r6, #9
   15c8c:	bhi	15cf0 <tcgetattr@plt+0x492c>
   15c90:	add	r0, pc, #0
   15c94:	ldr	pc, [r0, r6, lsl #2]
   15c98:	andeq	r5, r1, r8, asr #29
   15c9c:	andeq	r5, r1, r0, asr #25
   15ca0:	strdeq	r5, [r1], -ip
   15ca4:	andeq	r5, r1, r4, lsr #26
   15ca8:	andeq	r5, r1, ip, asr #26
   15cac:	andeq	r5, r1, r4, ror sp
   15cb0:	muleq	r1, ip, sp
   15cb4:	ldrdeq	r5, [r1], -r4
   15cb8:	andeq	r5, r1, r4, ror lr
   15cbc:	andeq	r5, r1, ip, lsl lr
   15cc0:	movw	r1, #43860	; 0xab54
   15cc4:	mov	r0, #0
   15cc8:	mov	r2, #5
   15ccc:	movt	r1, #1
   15cd0:	bl	1116c <dcgettext@plt>
   15cd4:	ldr	r3, [r7]
   15cd8:	mov	r2, r0
   15cdc:	mov	r0, r8
   15ce0:	mov	r1, #1
   15ce4:	sub	sp, fp, #24
   15ce8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15cec:	b	1131c <__fprintf_chk@plt>
   15cf0:	movw	r1, #44179	; 0xac93
   15cf4:	movt	r1, #1
   15cf8:	b	15e24 <tcgetattr@plt+0x4a60>
   15cfc:	movw	r1, #43876	; 0xab64
   15d00:	mov	r0, #0
   15d04:	mov	r2, #5
   15d08:	movt	r1, #1
   15d0c:	bl	1116c <dcgettext@plt>
   15d10:	mov	r2, r0
   15d14:	ldr	r3, [r7]
   15d18:	ldr	r0, [r7, #4]
   15d1c:	str	r0, [sp]
   15d20:	b	15e10 <tcgetattr@plt+0x4a4c>
   15d24:	movw	r1, #43899	; 0xab7b
   15d28:	mov	r0, #0
   15d2c:	mov	r2, #5
   15d30:	movt	r1, #1
   15d34:	bl	1116c <dcgettext@plt>
   15d38:	ldr	r3, [r7]
   15d3c:	mov	r2, r0
   15d40:	ldmib	r7, {r0, r1}
   15d44:	stm	sp, {r0, r1}
   15d48:	b	15e10 <tcgetattr@plt+0x4a4c>
   15d4c:	movw	r1, #43927	; 0xab97
   15d50:	mov	r0, #0
   15d54:	mov	r2, #5
   15d58:	movt	r1, #1
   15d5c:	bl	1116c <dcgettext@plt>
   15d60:	ldr	r3, [r7]
   15d64:	mov	r2, r0
   15d68:	ldmib	r7, {r0, r1, r7}
   15d6c:	stm	sp, {r0, r1, r7}
   15d70:	b	15e10 <tcgetattr@plt+0x4a4c>
   15d74:	movw	r1, #43959	; 0xabb7
   15d78:	mov	r0, #0
   15d7c:	mov	r2, #5
   15d80:	movt	r1, #1
   15d84:	bl	1116c <dcgettext@plt>
   15d88:	ldr	r3, [r7]
   15d8c:	mov	r2, r0
   15d90:	ldmib	r7, {r0, r1, r6, r7}
   15d94:	stm	sp, {r0, r1, r6, r7}
   15d98:	b	15e10 <tcgetattr@plt+0x4a4c>
   15d9c:	movw	r1, #43995	; 0xabdb
   15da0:	mov	r0, #0
   15da4:	mov	r2, #5
   15da8:	movt	r1, #1
   15dac:	bl	1116c <dcgettext@plt>
   15db0:	ldr	r3, [r7]
   15db4:	mov	r2, r0
   15db8:	ldmib	r7, {r0, r1, r6}
   15dbc:	ldr	r5, [r7, #16]
   15dc0:	ldr	r7, [r7, #20]
   15dc4:	stm	sp, {r0, r1, r6}
   15dc8:	str	r5, [sp, #12]
   15dcc:	str	r7, [sp, #16]
   15dd0:	b	15e10 <tcgetattr@plt+0x4a4c>
   15dd4:	movw	r1, #44035	; 0xac03
   15dd8:	mov	r0, #0
   15ddc:	mov	r2, #5
   15de0:	movt	r1, #1
   15de4:	bl	1116c <dcgettext@plt>
   15de8:	ldr	r3, [r7]
   15dec:	mov	r2, r0
   15df0:	ldmib	r7, {r0, r1, r6}
   15df4:	ldr	r5, [r7, #16]
   15df8:	ldr	r4, [r7, #20]
   15dfc:	ldr	r7, [r7, #24]
   15e00:	stm	sp, {r0, r1, r6}
   15e04:	str	r5, [sp, #12]
   15e08:	str	r4, [sp, #16]
   15e0c:	str	r7, [sp, #20]
   15e10:	mov	r0, r8
   15e14:	mov	r1, #1
   15e18:	b	15ec4 <tcgetattr@plt+0x4b00>
   15e1c:	movw	r1, #44127	; 0xac5f
   15e20:	movt	r1, #1
   15e24:	mov	r0, #0
   15e28:	mov	r2, #5
   15e2c:	bl	1116c <dcgettext@plt>
   15e30:	mov	ip, r0
   15e34:	ldr	r3, [r7]
   15e38:	ldr	r0, [r7, #4]
   15e3c:	ldr	r1, [r7, #8]
   15e40:	ldr	r6, [r7, #12]
   15e44:	ldr	r5, [r7, #16]
   15e48:	ldr	r4, [r7, #20]
   15e4c:	ldr	r2, [r7, #24]
   15e50:	ldr	lr, [r7, #28]
   15e54:	ldr	r7, [r7, #32]
   15e58:	stm	sp, {r0, r1, r6}
   15e5c:	str	r5, [sp, #12]
   15e60:	str	r4, [sp, #16]
   15e64:	str	r2, [sp, #20]
   15e68:	str	lr, [sp, #24]
   15e6c:	str	r7, [sp, #28]
   15e70:	b	15eb8 <tcgetattr@plt+0x4af4>
   15e74:	movw	r1, #44079	; 0xac2f
   15e78:	mov	r0, #0
   15e7c:	mov	r2, #5
   15e80:	movt	r1, #1
   15e84:	bl	1116c <dcgettext@plt>
   15e88:	mov	ip, r0
   15e8c:	ldr	r3, [r7]
   15e90:	ldmib	r7, {r0, r1, r6}
   15e94:	ldr	r5, [r7, #16]
   15e98:	ldr	r4, [r7, #20]
   15e9c:	ldr	r2, [r7, #24]
   15ea0:	ldr	r7, [r7, #28]
   15ea4:	stm	sp, {r0, r1, r6}
   15ea8:	str	r5, [sp, #12]
   15eac:	str	r4, [sp, #16]
   15eb0:	str	r2, [sp, #20]
   15eb4:	str	r7, [sp, #24]
   15eb8:	mov	r0, r8
   15ebc:	mov	r1, #1
   15ec0:	mov	r2, ip
   15ec4:	bl	1131c <__fprintf_chk@plt>
   15ec8:	sub	sp, fp, #24
   15ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15ed0:	push	{r4, sl, fp, lr}
   15ed4:	add	fp, sp, #8
   15ed8:	sub	sp, sp, #8
   15edc:	ldr	ip, [fp, #8]
   15ee0:	mov	lr, #0
   15ee4:	ldr	r4, [ip, lr, lsl #2]
   15ee8:	add	lr, lr, #1
   15eec:	cmp	r4, #0
   15ef0:	bne	15ee4 <tcgetattr@plt+0x4b20>
   15ef4:	sub	r4, lr, #1
   15ef8:	str	ip, [sp]
   15efc:	str	r4, [sp, #4]
   15f00:	bl	15ba4 <tcgetattr@plt+0x47e0>
   15f04:	sub	sp, fp, #8
   15f08:	pop	{r4, sl, fp, pc}
   15f0c:	push	{r4, r5, fp, lr}
   15f10:	add	fp, sp, #8
   15f14:	sub	sp, sp, #48	; 0x30
   15f18:	ldr	r4, [fp, #8]
   15f1c:	mov	ip, #0
   15f20:	add	lr, sp, #8
   15f24:	ldr	r5, [r4]
   15f28:	cmp	r5, #0
   15f2c:	str	r5, [lr, ip, lsl #2]
   15f30:	beq	15f44 <tcgetattr@plt+0x4b80>
   15f34:	add	ip, ip, #1
   15f38:	add	r4, r4, #4
   15f3c:	cmp	ip, #10
   15f40:	bcc	15f24 <tcgetattr@plt+0x4b60>
   15f44:	str	lr, [sp]
   15f48:	str	ip, [sp, #4]
   15f4c:	bl	15ba4 <tcgetattr@plt+0x47e0>
   15f50:	sub	sp, fp, #8
   15f54:	pop	{r4, r5, fp, pc}
   15f58:	push	{fp, lr}
   15f5c:	mov	fp, sp
   15f60:	sub	sp, sp, #8
   15f64:	add	ip, fp, #8
   15f68:	str	ip, [sp, #4]
   15f6c:	str	ip, [sp]
   15f70:	bl	15f0c <tcgetattr@plt+0x4b48>
   15f74:	mov	sp, fp
   15f78:	pop	{fp, pc}
   15f7c:	push	{fp, lr}
   15f80:	mov	fp, sp
   15f84:	movw	r0, #45428	; 0xb174
   15f88:	movt	r0, #2
   15f8c:	ldr	r1, [r0]
   15f90:	movw	r0, #36145	; 0x8d31
   15f94:	movt	r0, #1
   15f98:	bl	110f4 <fputs_unlocked@plt>
   15f9c:	movw	r1, #44239	; 0xaccf
   15fa0:	mov	r0, #0
   15fa4:	mov	r2, #5
   15fa8:	movt	r1, #1
   15fac:	bl	1116c <dcgettext@plt>
   15fb0:	movw	r2, #44259	; 0xace3
   15fb4:	mov	r1, r0
   15fb8:	mov	r0, #1
   15fbc:	movt	r2, #1
   15fc0:	bl	112f8 <__printf_chk@plt>
   15fc4:	movw	r1, #44281	; 0xacf9
   15fc8:	mov	r0, #0
   15fcc:	mov	r2, #5
   15fd0:	movt	r1, #1
   15fd4:	bl	1116c <dcgettext@plt>
   15fd8:	movw	r2, #38818	; 0x97a2
   15fdc:	movw	r3, #39280	; 0x9970
   15fe0:	mov	r1, r0
   15fe4:	mov	r0, #1
   15fe8:	movt	r2, #1
   15fec:	movt	r3, #1
   15ff0:	bl	112f8 <__printf_chk@plt>
   15ff4:	movw	r1, #44301	; 0xad0d
   15ff8:	mov	r0, #0
   15ffc:	mov	r2, #5
   16000:	movt	r1, #1
   16004:	bl	1116c <dcgettext@plt>
   16008:	movw	r2, #44340	; 0xad34
   1600c:	mov	r1, r0
   16010:	mov	r0, #1
   16014:	movt	r2, #1
   16018:	pop	{fp, lr}
   1601c:	b	112f8 <__printf_chk@plt>
   16020:	b	16024 <tcgetattr@plt+0x4c60>
   16024:	push	{r4, r5, r6, sl, fp, lr}
   16028:	add	fp, sp, #16
   1602c:	mov	r4, r2
   16030:	mov	r5, r1
   16034:	mov	r6, r0
   16038:	bl	17568 <tcgetattr@plt+0x61a4>
   1603c:	cmp	r0, #0
   16040:	popne	{r4, r5, r6, sl, fp, pc}
   16044:	cmp	r6, #0
   16048:	beq	1605c <tcgetattr@plt+0x4c98>
   1604c:	cmp	r5, #0
   16050:	cmpne	r4, #0
   16054:	bne	1605c <tcgetattr@plt+0x4c98>
   16058:	pop	{r4, r5, r6, sl, fp, pc}
   1605c:	bl	164b0 <tcgetattr@plt+0x50ec>
   16060:	push	{fp, lr}
   16064:	mov	fp, sp
   16068:	bl	17234 <tcgetattr@plt+0x5e70>
   1606c:	cmp	r0, #0
   16070:	popne	{fp, pc}
   16074:	bl	164b0 <tcgetattr@plt+0x50ec>
   16078:	push	{fp, lr}
   1607c:	mov	fp, sp
   16080:	bl	17234 <tcgetattr@plt+0x5e70>
   16084:	cmp	r0, #0
   16088:	popne	{fp, pc}
   1608c:	bl	164b0 <tcgetattr@plt+0x50ec>
   16090:	push	{fp, lr}
   16094:	mov	fp, sp
   16098:	bl	17234 <tcgetattr@plt+0x5e70>
   1609c:	cmp	r0, #0
   160a0:	popne	{fp, pc}
   160a4:	bl	164b0 <tcgetattr@plt+0x50ec>
   160a8:	push	{r4, r5, fp, lr}
   160ac:	add	fp, sp, #8
   160b0:	mov	r4, r1
   160b4:	mov	r5, r0
   160b8:	bl	17264 <tcgetattr@plt+0x5ea0>
   160bc:	cmp	r0, #0
   160c0:	popne	{r4, r5, fp, pc}
   160c4:	cmp	r5, #0
   160c8:	beq	160d8 <tcgetattr@plt+0x4d14>
   160cc:	cmp	r4, #0
   160d0:	bne	160d8 <tcgetattr@plt+0x4d14>
   160d4:	pop	{r4, r5, fp, pc}
   160d8:	bl	164b0 <tcgetattr@plt+0x50ec>
   160dc:	push	{fp, lr}
   160e0:	mov	fp, sp
   160e4:	cmp	r1, #0
   160e8:	orreq	r1, r1, #1
   160ec:	bl	17264 <tcgetattr@plt+0x5ea0>
   160f0:	cmp	r0, #0
   160f4:	popne	{fp, pc}
   160f8:	bl	164b0 <tcgetattr@plt+0x50ec>
   160fc:	push	{fp, lr}
   16100:	mov	fp, sp
   16104:	clz	r3, r2
   16108:	lsr	ip, r3, #5
   1610c:	clz	r3, r1
   16110:	lsr	r3, r3, #5
   16114:	orrs	r3, r3, ip
   16118:	movwne	r1, #1
   1611c:	movwne	r2, #1
   16120:	bl	17568 <tcgetattr@plt+0x61a4>
   16124:	cmp	r0, #0
   16128:	popne	{fp, pc}
   1612c:	bl	164b0 <tcgetattr@plt+0x50ec>
   16130:	push	{fp, lr}
   16134:	mov	fp, sp
   16138:	mov	r2, r1
   1613c:	mov	r1, r0
   16140:	mov	r0, #0
   16144:	bl	17568 <tcgetattr@plt+0x61a4>
   16148:	cmp	r0, #0
   1614c:	popne	{fp, pc}
   16150:	bl	164b0 <tcgetattr@plt+0x50ec>
   16154:	mov	r2, r1
   16158:	mov	r1, r0
   1615c:	mov	r0, #0
   16160:	b	160fc <tcgetattr@plt+0x4d38>
   16164:	mov	r2, #1
   16168:	b	1616c <tcgetattr@plt+0x4da8>
   1616c:	push	{r4, r5, fp, lr}
   16170:	add	fp, sp, #8
   16174:	ldr	r5, [r1]
   16178:	mov	r4, r1
   1617c:	cmp	r0, #0
   16180:	beq	16198 <tcgetattr@plt+0x4dd4>
   16184:	mov	r1, #1
   16188:	add	r1, r1, r5, lsr #1
   1618c:	adds	r5, r5, r1
   16190:	bcc	161b0 <tcgetattr@plt+0x4dec>
   16194:	bl	164b0 <tcgetattr@plt+0x50ec>
   16198:	cmp	r5, #0
   1619c:	bne	161b0 <tcgetattr@plt+0x4dec>
   161a0:	mov	r1, #64	; 0x40
   161a4:	cmp	r2, #64	; 0x40
   161a8:	udiv	r5, r1, r2
   161ac:	addhi	r5, r5, #1
   161b0:	mov	r1, r5
   161b4:	bl	16024 <tcgetattr@plt+0x4c60>
   161b8:	str	r5, [r4]
   161bc:	pop	{r4, r5, fp, pc}
   161c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   161c4:	add	fp, sp, #24
   161c8:	ldr	r6, [r1]
   161cc:	mov	r8, r1
   161d0:	ldr	r4, [fp, #8]
   161d4:	add	r1, r6, r6, asr #1
   161d8:	cmp	r1, r6
   161dc:	mvnvs	r1, #-2147483648	; 0x80000000
   161e0:	cmp	r1, r3
   161e4:	mov	r5, r1
   161e8:	movgt	r5, r3
   161ec:	cmn	r3, #1
   161f0:	movle	r5, r1
   161f4:	cmn	r4, #1
   161f8:	ble	16218 <tcgetattr@plt+0x4e54>
   161fc:	cmp	r4, #0
   16200:	beq	1626c <tcgetattr@plt+0x4ea8>
   16204:	cmn	r5, #1
   16208:	ble	16240 <tcgetattr@plt+0x4e7c>
   1620c:	mvn	r7, #-2147483648	; 0x80000000
   16210:	udiv	r1, r7, r4
   16214:	b	16234 <tcgetattr@plt+0x4e70>
   16218:	cmn	r5, #1
   1621c:	ble	1625c <tcgetattr@plt+0x4e98>
   16220:	cmn	r4, #1
   16224:	beq	1626c <tcgetattr@plt+0x4ea8>
   16228:	mov	r1, #-2147483648	; 0x80000000
   1622c:	mvn	r7, #-2147483648	; 0x80000000
   16230:	sdiv	r1, r1, r4
   16234:	cmp	r1, r5
   16238:	bge	1626c <tcgetattr@plt+0x4ea8>
   1623c:	b	1627c <tcgetattr@plt+0x4eb8>
   16240:	beq	1626c <tcgetattr@plt+0x4ea8>
   16244:	mov	r1, #-2147483648	; 0x80000000
   16248:	mvn	r7, #-2147483648	; 0x80000000
   1624c:	sdiv	r1, r1, r5
   16250:	cmp	r1, r4
   16254:	bge	1626c <tcgetattr@plt+0x4ea8>
   16258:	b	1627c <tcgetattr@plt+0x4eb8>
   1625c:	mvn	r7, #-2147483648	; 0x80000000
   16260:	sdiv	r1, r7, r4
   16264:	cmp	r5, r1
   16268:	blt	1627c <tcgetattr@plt+0x4eb8>
   1626c:	mul	r1, r5, r4
   16270:	mov	r7, #64	; 0x40
   16274:	cmp	r1, #63	; 0x3f
   16278:	bgt	16284 <tcgetattr@plt+0x4ec0>
   1627c:	sdiv	r5, r7, r4
   16280:	mul	r1, r5, r4
   16284:	cmp	r0, #0
   16288:	moveq	r7, #0
   1628c:	streq	r7, [r8]
   16290:	sub	r7, r5, r6
   16294:	cmp	r7, r2
   16298:	bge	1633c <tcgetattr@plt+0x4f78>
   1629c:	add	r5, r6, r2
   162a0:	mov	r2, #0
   162a4:	mov	r1, #0
   162a8:	cmp	r5, r3
   162ac:	movwgt	r2, #1
   162b0:	cmn	r3, #1
   162b4:	movwgt	r1, #1
   162b8:	cmp	r5, r6
   162bc:	bvs	16324 <tcgetattr@plt+0x4f60>
   162c0:	ands	r1, r1, r2
   162c4:	bne	16324 <tcgetattr@plt+0x4f60>
   162c8:	cmn	r4, #1
   162cc:	ble	162ec <tcgetattr@plt+0x4f28>
   162d0:	cmp	r4, #0
   162d4:	beq	16338 <tcgetattr@plt+0x4f74>
   162d8:	cmn	r5, #1
   162dc:	ble	16310 <tcgetattr@plt+0x4f4c>
   162e0:	mvn	r1, #-2147483648	; 0x80000000
   162e4:	udiv	r1, r1, r4
   162e8:	b	16304 <tcgetattr@plt+0x4f40>
   162ec:	cmn	r5, #1
   162f0:	ble	16328 <tcgetattr@plt+0x4f64>
   162f4:	cmn	r4, #1
   162f8:	beq	16338 <tcgetattr@plt+0x4f74>
   162fc:	mov	r1, #-2147483648	; 0x80000000
   16300:	sdiv	r1, r1, r4
   16304:	cmp	r1, r5
   16308:	bge	16338 <tcgetattr@plt+0x4f74>
   1630c:	b	16324 <tcgetattr@plt+0x4f60>
   16310:	beq	16338 <tcgetattr@plt+0x4f74>
   16314:	mov	r1, #-2147483648	; 0x80000000
   16318:	sdiv	r1, r1, r5
   1631c:	cmp	r1, r4
   16320:	bge	16338 <tcgetattr@plt+0x4f74>
   16324:	bl	164b0 <tcgetattr@plt+0x50ec>
   16328:	mvn	r1, #-2147483648	; 0x80000000
   1632c:	sdiv	r1, r1, r4
   16330:	cmp	r5, r1
   16334:	blt	16324 <tcgetattr@plt+0x4f60>
   16338:	mul	r1, r5, r4
   1633c:	bl	160a8 <tcgetattr@plt+0x4ce4>
   16340:	str	r5, [r8]
   16344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16348:	push	{fp, lr}
   1634c:	mov	fp, sp
   16350:	mov	r1, #1
   16354:	bl	171e0 <tcgetattr@plt+0x5e1c>
   16358:	cmp	r0, #0
   1635c:	popne	{fp, pc}
   16360:	bl	164b0 <tcgetattr@plt+0x50ec>
   16364:	push	{fp, lr}
   16368:	mov	fp, sp
   1636c:	bl	171e0 <tcgetattr@plt+0x5e1c>
   16370:	cmp	r0, #0
   16374:	popne	{fp, pc}
   16378:	bl	164b0 <tcgetattr@plt+0x50ec>
   1637c:	push	{fp, lr}
   16380:	mov	fp, sp
   16384:	mov	r1, #1
   16388:	bl	171e0 <tcgetattr@plt+0x5e1c>
   1638c:	cmp	r0, #0
   16390:	popne	{fp, pc}
   16394:	bl	164b0 <tcgetattr@plt+0x50ec>
   16398:	push	{fp, lr}
   1639c:	mov	fp, sp
   163a0:	bl	171e0 <tcgetattr@plt+0x5e1c>
   163a4:	cmp	r0, #0
   163a8:	popne	{fp, pc}
   163ac:	bl	164b0 <tcgetattr@plt+0x50ec>
   163b0:	push	{r4, r5, r6, sl, fp, lr}
   163b4:	add	fp, sp, #16
   163b8:	mov	r5, r0
   163bc:	mov	r0, r1
   163c0:	mov	r4, r1
   163c4:	bl	17234 <tcgetattr@plt+0x5e70>
   163c8:	cmp	r0, #0
   163cc:	beq	163e8 <tcgetattr@plt+0x5024>
   163d0:	mov	r1, r5
   163d4:	mov	r2, r4
   163d8:	mov	r6, r0
   163dc:	bl	11148 <memcpy@plt>
   163e0:	mov	r0, r6
   163e4:	pop	{r4, r5, r6, sl, fp, pc}
   163e8:	bl	164b0 <tcgetattr@plt+0x50ec>
   163ec:	push	{r4, r5, r6, sl, fp, lr}
   163f0:	add	fp, sp, #16
   163f4:	mov	r5, r0
   163f8:	mov	r0, r1
   163fc:	mov	r4, r1
   16400:	bl	17234 <tcgetattr@plt+0x5e70>
   16404:	cmp	r0, #0
   16408:	beq	16424 <tcgetattr@plt+0x5060>
   1640c:	mov	r1, r5
   16410:	mov	r2, r4
   16414:	mov	r6, r0
   16418:	bl	11148 <memcpy@plt>
   1641c:	mov	r0, r6
   16420:	pop	{r4, r5, r6, sl, fp, pc}
   16424:	bl	164b0 <tcgetattr@plt+0x50ec>
   16428:	push	{r4, r5, r6, sl, fp, lr}
   1642c:	add	fp, sp, #16
   16430:	mov	r5, r0
   16434:	add	r0, r1, #1
   16438:	mov	r4, r1
   1643c:	bl	17234 <tcgetattr@plt+0x5e70>
   16440:	cmp	r0, #0
   16444:	beq	1646c <tcgetattr@plt+0x50a8>
   16448:	mov	r6, r0
   1644c:	mov	r0, #0
   16450:	mov	r1, r5
   16454:	mov	r2, r4
   16458:	strb	r0, [r6, r4]
   1645c:	mov	r0, r6
   16460:	bl	11148 <memcpy@plt>
   16464:	mov	r0, r6
   16468:	pop	{r4, r5, r6, sl, fp, pc}
   1646c:	bl	164b0 <tcgetattr@plt+0x50ec>
   16470:	push	{r4, r5, r6, sl, fp, lr}
   16474:	add	fp, sp, #16
   16478:	mov	r4, r0
   1647c:	bl	11298 <strlen@plt>
   16480:	add	r5, r0, #1
   16484:	mov	r0, r5
   16488:	bl	17234 <tcgetattr@plt+0x5e70>
   1648c:	cmp	r0, #0
   16490:	beq	164ac <tcgetattr@plt+0x50e8>
   16494:	mov	r1, r4
   16498:	mov	r2, r5
   1649c:	mov	r6, r0
   164a0:	bl	11148 <memcpy@plt>
   164a4:	mov	r0, r6
   164a8:	pop	{r4, r5, r6, sl, fp, pc}
   164ac:	bl	164b0 <tcgetattr@plt+0x50ec>
   164b0:	push	{fp, lr}
   164b4:	mov	fp, sp
   164b8:	movw	r0, #45336	; 0xb118
   164bc:	movw	r1, #44416	; 0xad80
   164c0:	mov	r2, #5
   164c4:	movt	r0, #2
   164c8:	movt	r1, #1
   164cc:	ldr	r4, [r0]
   164d0:	mov	r0, #0
   164d4:	bl	1116c <dcgettext@plt>
   164d8:	movw	r2, #43379	; 0xa973
   164dc:	mov	r3, r0
   164e0:	mov	r0, r4
   164e4:	mov	r1, #0
   164e8:	movt	r2, #1
   164ec:	bl	11214 <error@plt>
   164f0:	bl	11394 <abort@plt>
   164f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   164f8:	add	fp, sp, #24
   164fc:	sub	sp, sp, #16
   16500:	mov	r8, r0
   16504:	ldr	r0, [fp, #16]
   16508:	mov	r5, r3
   1650c:	mov	r6, r2
   16510:	mov	r2, r1
   16514:	add	r3, sp, #8
   16518:	mov	r1, #0
   1651c:	str	r0, [sp]
   16520:	mov	r0, r8
   16524:	bl	16b28 <tcgetattr@plt+0x5764>
   16528:	cmp	r0, #0
   1652c:	bne	165c0 <tcgetattr@plt+0x51fc>
   16530:	ldr	r4, [sp, #8]
   16534:	ldr	r7, [sp, #12]
   16538:	subs	r0, r4, r6
   1653c:	sbcs	r0, r7, r5
   16540:	bcc	16564 <tcgetattr@plt+0x51a0>
   16544:	ldr	r1, [fp, #8]
   16548:	ldr	r0, [fp, #12]
   1654c:	subs	r1, r1, r4
   16550:	sbcs	r0, r0, r7
   16554:	movcs	r0, r4
   16558:	movcs	r1, r7
   1655c:	subcs	sp, fp, #24
   16560:	popcs	{r4, r5, r6, r7, r8, sl, fp, pc}
   16564:	bl	112c8 <__errno_location@plt>
   16568:	subs	r1, r4, #1073741824	; 0x40000000
   1656c:	sbcs	r1, r7, #0
   16570:	bcc	1657c <tcgetattr@plt+0x51b8>
   16574:	mov	r1, #75	; 0x4b
   16578:	b	16580 <tcgetattr@plt+0x51bc>
   1657c:	mov	r1, #34	; 0x22
   16580:	str	r1, [r0]
   16584:	ldr	r6, [r0]
   16588:	ldr	r4, [fp, #24]
   1658c:	ldr	r5, [fp, #20]
   16590:	mov	r0, r8
   16594:	bl	15a6c <tcgetattr@plt+0x46a8>
   16598:	subs	r1, r6, #22
   1659c:	movw	r2, #43375	; 0xa96f
   165a0:	str	r0, [sp]
   165a4:	mov	r3, r5
   165a8:	movne	r1, r6
   165ac:	cmp	r4, #0
   165b0:	movt	r2, #1
   165b4:	movweq	r4, #1
   165b8:	mov	r0, r4
   165bc:	bl	11214 <error@plt>
   165c0:	cmp	r0, #1
   165c4:	beq	165dc <tcgetattr@plt+0x5218>
   165c8:	cmp	r0, #3
   165cc:	bne	165e4 <tcgetattr@plt+0x5220>
   165d0:	bl	112c8 <__errno_location@plt>
   165d4:	mov	r1, #0
   165d8:	b	16580 <tcgetattr@plt+0x51bc>
   165dc:	bl	112c8 <__errno_location@plt>
   165e0:	b	16574 <tcgetattr@plt+0x51b0>
   165e4:	bl	112c8 <__errno_location@plt>
   165e8:	b	16584 <tcgetattr@plt+0x51c0>
   165ec:	mov	r1, #10
   165f0:	b	164f4 <tcgetattr@plt+0x5130>
   165f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165f8:	add	fp, sp, #28
   165fc:	sub	sp, sp, #12
   16600:	cmp	r2, #37	; 0x25
   16604:	bcs	16a64 <tcgetattr@plt+0x56a0>
   16608:	ldr	sl, [fp, #8]
   1660c:	mov	r9, r3
   16610:	mov	r4, r2
   16614:	mov	r6, r1
   16618:	mov	r5, r0
   1661c:	bl	112c8 <__errno_location@plt>
   16620:	add	r8, sp, #8
   16624:	cmp	r6, #0
   16628:	mov	r7, r0
   1662c:	mov	r0, #0
   16630:	mov	r2, r4
   16634:	movne	r8, r6
   16638:	str	r0, [r7]
   1663c:	mov	r0, r5
   16640:	mov	r1, r8
   16644:	bl	11118 <strtol@plt>
   16648:	str	r0, [sp, #4]
   1664c:	str	r9, [sp]
   16650:	ldr	r6, [r8]
   16654:	cmp	r6, r5
   16658:	beq	16680 <tcgetattr@plt+0x52bc>
   1665c:	mov	r4, r0
   16660:	ldr	r0, [r7]
   16664:	cmp	r0, #0
   16668:	beq	166b4 <tcgetattr@plt+0x52f0>
   1666c:	mov	r9, #4
   16670:	cmp	r0, #34	; 0x22
   16674:	bne	16a58 <tcgetattr@plt+0x5694>
   16678:	mov	r9, #1
   1667c:	b	166b8 <tcgetattr@plt+0x52f4>
   16680:	cmp	sl, #0
   16684:	mov	r9, #4
   16688:	ldrbne	r1, [r5]
   1668c:	cmpne	r1, #0
   16690:	beq	16a58 <tcgetattr@plt+0x5694>
   16694:	mov	r0, sl
   16698:	bl	112a4 <strchr@plt>
   1669c:	cmp	r0, #0
   166a0:	beq	16a58 <tcgetattr@plt+0x5694>
   166a4:	mov	r4, #1
   166a8:	mov	r9, #0
   166ac:	str	r4, [sp, #4]
   166b0:	b	166c0 <tcgetattr@plt+0x52fc>
   166b4:	mov	r9, r0
   166b8:	cmp	sl, #0
   166bc:	beq	16a50 <tcgetattr@plt+0x568c>
   166c0:	ldrb	r5, [r6]
   166c4:	cmp	r5, #0
   166c8:	beq	16a50 <tcgetattr@plt+0x568c>
   166cc:	mov	r0, sl
   166d0:	mov	r1, r5
   166d4:	bl	112a4 <strchr@plt>
   166d8:	cmp	r0, #0
   166dc:	beq	16968 <tcgetattr@plt+0x55a4>
   166e0:	sub	r0, r5, #69	; 0x45
   166e4:	mov	r7, #1024	; 0x400
   166e8:	cmp	r0, #21
   166ec:	bhi	16704 <tcgetattr@plt+0x5340>
   166f0:	movw	r2, #35141	; 0x8945
   166f4:	mov	r1, #1
   166f8:	movt	r2, #48	; 0x30
   166fc:	tst	r2, r1, lsl r0
   16700:	bne	16720 <tcgetattr@plt+0x535c>
   16704:	sub	r0, r5, #103	; 0x67
   16708:	cmp	r0, #13
   1670c:	bhi	16754 <tcgetattr@plt+0x5390>
   16710:	mov	r1, #1
   16714:	movw	r2, #8273	; 0x2051
   16718:	tst	r2, r1, lsl r0
   1671c:	beq	16754 <tcgetattr@plt+0x5390>
   16720:	mov	r0, sl
   16724:	mov	r1, #48	; 0x30
   16728:	bl	112a4 <strchr@plt>
   1672c:	cmp	r0, #0
   16730:	beq	16754 <tcgetattr@plt+0x5390>
   16734:	ldrb	r0, [r6, #1]
   16738:	mov	sl, #1
   1673c:	cmp	r0, #66	; 0x42
   16740:	cmpne	r0, #68	; 0x44
   16744:	bne	16834 <tcgetattr@plt+0x5470>
   16748:	mov	sl, #2
   1674c:	mov	r7, #1000	; 0x3e8
   16750:	b	16758 <tcgetattr@plt+0x5394>
   16754:	mov	sl, #1
   16758:	cmp	r5, #89	; 0x59
   1675c:	bgt	167c4 <tcgetattr@plt+0x5400>
   16760:	sub	r0, r5, #66	; 0x42
   16764:	cmp	r0, #14
   16768:	bhi	16850 <tcgetattr@plt+0x548c>
   1676c:	add	r1, pc, #0
   16770:	ldr	pc, [r1, r0, lsl #2]
   16774:			; <UNDEFINED> instruction: 0x000167b0
   16778:	andeq	r6, r1, r8, ror #18
   1677c:	andeq	r6, r1, r8, ror #18
   16780:	andeq	r6, r1, r4, ror r9
   16784:	andeq	r6, r1, r8, ror #18
   16788:	andeq	r6, r1, ip, lsr #17
   1678c:	andeq	r6, r1, r8, ror #18
   16790:	andeq	r6, r1, r8, ror #18
   16794:	andeq	r6, r1, r8, ror #18
   16798:	ldrdeq	r6, [r1], -r4
   1679c:	andeq	r6, r1, r8, ror #18
   167a0:	andeq	r6, r1, r8, ror #17
   167a4:	andeq	r6, r1, r8, ror #18
   167a8:	andeq	r6, r1, r8, ror #18
   167ac:	muleq	r1, ip, r9
   167b0:	cmn	r4, #1
   167b4:	ble	169c4 <tcgetattr@plt+0x5600>
   167b8:	cmp	r4, #2097152	; 0x200000
   167bc:	blt	169d8 <tcgetattr@plt+0x5614>
   167c0:	b	16a10 <tcgetattr@plt+0x564c>
   167c4:	cmp	r5, #115	; 0x73
   167c8:	bgt	16888 <tcgetattr@plt+0x54c4>
   167cc:	sub	r0, r5, #98	; 0x62
   167d0:	cmp	r0, #11
   167d4:	bhi	16938 <tcgetattr@plt+0x5574>
   167d8:	add	r1, pc, #4
   167dc:	mov	r5, #0
   167e0:	ldr	pc, [r1, r0, lsl #2]
   167e4:	andeq	r6, r1, r4, lsl r8
   167e8:	andeq	r6, r1, r0, lsr sl
   167ec:	andeq	r6, r1, r8, ror #18
   167f0:	andeq	r6, r1, r8, ror #18
   167f4:	andeq	r6, r1, r8, ror #18
   167f8:	andeq	r6, r1, ip, lsr #17
   167fc:	andeq	r6, r1, r8, ror #18
   16800:	andeq	r6, r1, r8, ror #18
   16804:	andeq	r6, r1, r8, ror #18
   16808:	ldrdeq	r6, [r1], -r4
   1680c:	andeq	r6, r1, r8, ror #18
   16810:	andeq	r6, r1, r8, ror #17
   16814:	cmn	r4, #1
   16818:	ble	169e0 <tcgetattr@plt+0x561c>
   1681c:	movw	r0, #65535	; 0xffff
   16820:	movt	r0, #31
   16824:	add	r0, r0, #2097152	; 0x200000
   16828:	cmp	r4, r0
   1682c:	ble	169f4 <tcgetattr@plt+0x5630>
   16830:	b	16a10 <tcgetattr@plt+0x564c>
   16834:	cmp	r0, #105	; 0x69
   16838:	bne	16758 <tcgetattr@plt+0x5394>
   1683c:	ldrb	r0, [r6, #2]
   16840:	mov	sl, #1
   16844:	cmp	r0, #66	; 0x42
   16848:	movweq	sl, #3
   1684c:	b	16758 <tcgetattr@plt+0x5394>
   16850:	cmp	r5, #84	; 0x54
   16854:	beq	16910 <tcgetattr@plt+0x554c>
   16858:	cmp	r5, #89	; 0x59
   1685c:	bne	16968 <tcgetattr@plt+0x55a4>
   16860:	mov	r5, #0
   16864:	mvn	r6, #7
   16868:	add	r4, sp, #4
   1686c:	mov	r0, r4
   16870:	mov	r1, r7
   16874:	bl	16a84 <tcgetattr@plt+0x56c0>
   16878:	orr	r5, r0, r5
   1687c:	adds	r6, r6, #1
   16880:	bne	1686c <tcgetattr@plt+0x54a8>
   16884:	b	16a30 <tcgetattr@plt+0x566c>
   16888:	cmp	r5, #116	; 0x74
   1688c:	beq	16910 <tcgetattr@plt+0x554c>
   16890:	cmp	r5, #119	; 0x77
   16894:	bne	16968 <tcgetattr@plt+0x55a4>
   16898:	cmn	r4, #1
   1689c:	ble	169fc <tcgetattr@plt+0x5638>
   168a0:	cmp	r4, #1073741824	; 0x40000000
   168a4:	bge	16a10 <tcgetattr@plt+0x564c>
   168a8:	b	16a24 <tcgetattr@plt+0x5660>
   168ac:	mov	r5, #0
   168b0:	mvn	r6, #2
   168b4:	add	r4, sp, #4
   168b8:	mov	r0, r4
   168bc:	mov	r1, r7
   168c0:	bl	16a84 <tcgetattr@plt+0x56c0>
   168c4:	orr	r5, r0, r5
   168c8:	adds	r6, r6, #1
   168cc:	bne	168b8 <tcgetattr@plt+0x54f4>
   168d0:	b	16a30 <tcgetattr@plt+0x566c>
   168d4:	add	r0, sp, #4
   168d8:	mov	r1, r7
   168dc:	bl	16a84 <tcgetattr@plt+0x56c0>
   168e0:	mov	r5, r0
   168e4:	b	16a30 <tcgetattr@plt+0x566c>
   168e8:	mov	r5, #0
   168ec:	mvn	r6, #1
   168f0:	add	r4, sp, #4
   168f4:	mov	r0, r4
   168f8:	mov	r1, r7
   168fc:	bl	16a84 <tcgetattr@plt+0x56c0>
   16900:	orr	r5, r0, r5
   16904:	adds	r6, r6, #1
   16908:	bne	168f4 <tcgetattr@plt+0x5530>
   1690c:	b	16a30 <tcgetattr@plt+0x566c>
   16910:	mov	r5, #0
   16914:	mvn	r6, #3
   16918:	add	r4, sp, #4
   1691c:	mov	r0, r4
   16920:	mov	r1, r7
   16924:	bl	16a84 <tcgetattr@plt+0x56c0>
   16928:	orr	r5, r0, r5
   1692c:	adds	r6, r6, #1
   16930:	bne	1691c <tcgetattr@plt+0x5558>
   16934:	b	16a30 <tcgetattr@plt+0x566c>
   16938:	cmp	r5, #90	; 0x5a
   1693c:	bne	16968 <tcgetattr@plt+0x55a4>
   16940:	mov	r5, #0
   16944:	mvn	r6, #6
   16948:	add	r4, sp, #4
   1694c:	mov	r0, r4
   16950:	mov	r1, r7
   16954:	bl	16a84 <tcgetattr@plt+0x56c0>
   16958:	orr	r5, r0, r5
   1695c:	adds	r6, r6, #1
   16960:	bne	1694c <tcgetattr@plt+0x5588>
   16964:	b	16a30 <tcgetattr@plt+0x566c>
   16968:	ldr	r0, [sp]
   1696c:	orr	r9, r9, #2
   16970:	b	16a54 <tcgetattr@plt+0x5690>
   16974:	mov	r5, #0
   16978:	mvn	r6, #5
   1697c:	add	r4, sp, #4
   16980:	mov	r0, r4
   16984:	mov	r1, r7
   16988:	bl	16a84 <tcgetattr@plt+0x56c0>
   1698c:	orr	r5, r0, r5
   16990:	adds	r6, r6, #1
   16994:	bne	16980 <tcgetattr@plt+0x55bc>
   16998:	b	16a30 <tcgetattr@plt+0x566c>
   1699c:	mov	r5, #0
   169a0:	mvn	r6, #4
   169a4:	add	r4, sp, #4
   169a8:	mov	r0, r4
   169ac:	mov	r1, r7
   169b0:	bl	16a84 <tcgetattr@plt+0x56c0>
   169b4:	orr	r5, r0, r5
   169b8:	adds	r6, r6, #1
   169bc:	bne	169a8 <tcgetattr@plt+0x55e4>
   169c0:	b	16a30 <tcgetattr@plt+0x566c>
   169c4:	beq	169d8 <tcgetattr@plt+0x5614>
   169c8:	mov	r0, #-2147483648	; 0x80000000
   169cc:	sdiv	r0, r0, r4
   169d0:	cmp	r0, #1024	; 0x400
   169d4:	blt	16a10 <tcgetattr@plt+0x564c>
   169d8:	lsl	r0, r4, #10
   169dc:	b	16a28 <tcgetattr@plt+0x5664>
   169e0:	beq	169f4 <tcgetattr@plt+0x5630>
   169e4:	mov	r0, #-2147483648	; 0x80000000
   169e8:	sdiv	r0, r0, r4
   169ec:	cmp	r0, #512	; 0x200
   169f0:	blt	16a10 <tcgetattr@plt+0x564c>
   169f4:	lsl	r0, r4, #9
   169f8:	b	16a28 <tcgetattr@plt+0x5664>
   169fc:	beq	16a24 <tcgetattr@plt+0x5660>
   16a00:	mov	r0, #-2147483648	; 0x80000000
   16a04:	sdiv	r0, r0, r4
   16a08:	cmp	r0, #2
   16a0c:	bge	16a24 <tcgetattr@plt+0x5660>
   16a10:	mvn	r0, #-2147483648	; 0x80000000
   16a14:	cmp	r4, #0
   16a18:	mov	r5, #1
   16a1c:	movlt	r0, #-2147483648	; 0x80000000
   16a20:	b	16a2c <tcgetattr@plt+0x5668>
   16a24:	lsl	r0, r4, #1
   16a28:	mov	r5, #0
   16a2c:	str	r0, [sp, #4]
   16a30:	ldr	r0, [r8]
   16a34:	orr	r9, r5, r9
   16a38:	add	r1, r0, sl
   16a3c:	str	r1, [r8]
   16a40:	ldrb	r0, [r0, sl]
   16a44:	ldr	r4, [sp, #4]
   16a48:	cmp	r0, #0
   16a4c:	orrne	r9, r9, #2
   16a50:	ldr	r0, [sp]
   16a54:	str	r4, [r0]
   16a58:	mov	r0, r9
   16a5c:	sub	sp, fp, #28
   16a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a64:	movw	r0, #44433	; 0xad91
   16a68:	movw	r1, #44544	; 0xae00
   16a6c:	movw	r3, #44471	; 0xadb7
   16a70:	mov	r2, #85	; 0x55
   16a74:	movt	r0, #1
   16a78:	movt	r1, #1
   16a7c:	movt	r3, #1
   16a80:	bl	113b8 <__assert_fail@plt>
   16a84:	cmn	r1, #1
   16a88:	ble	16aac <tcgetattr@plt+0x56e8>
   16a8c:	ldr	r2, [r0]
   16a90:	cmp	r1, #0
   16a94:	beq	16b14 <tcgetattr@plt+0x5750>
   16a98:	cmn	r2, #1
   16a9c:	ble	16ad4 <tcgetattr@plt+0x5710>
   16aa0:	mvn	r3, #-2147483648	; 0x80000000
   16aa4:	udiv	r3, r3, r1
   16aa8:	b	16ac8 <tcgetattr@plt+0x5704>
   16aac:	ldr	r2, [r0]
   16ab0:	cmn	r2, #1
   16ab4:	ble	16aec <tcgetattr@plt+0x5728>
   16ab8:	cmn	r1, #1
   16abc:	beq	16b14 <tcgetattr@plt+0x5750>
   16ac0:	mov	r3, #-2147483648	; 0x80000000
   16ac4:	sdiv	r3, r3, r1
   16ac8:	cmp	r3, r2
   16acc:	blt	16afc <tcgetattr@plt+0x5738>
   16ad0:	b	16b14 <tcgetattr@plt+0x5750>
   16ad4:	beq	16b10 <tcgetattr@plt+0x574c>
   16ad8:	mov	r3, #-2147483648	; 0x80000000
   16adc:	sdiv	r3, r3, r2
   16ae0:	cmp	r3, r1
   16ae4:	blt	16afc <tcgetattr@plt+0x5738>
   16ae8:	b	16b14 <tcgetattr@plt+0x5750>
   16aec:	mvn	r3, #-2147483648	; 0x80000000
   16af0:	sdiv	r3, r3, r1
   16af4:	cmp	r2, r3
   16af8:	bge	16b14 <tcgetattr@plt+0x5750>
   16afc:	mvn	r3, #-2147483648	; 0x80000000
   16b00:	cmp	r2, #0
   16b04:	mov	r1, #1
   16b08:	movlt	r3, #-2147483648	; 0x80000000
   16b0c:	b	16b1c <tcgetattr@plt+0x5758>
   16b10:	mvn	r2, #0
   16b14:	mul	r3, r2, r1
   16b18:	mov	r1, #0
   16b1c:	str	r3, [r0]
   16b20:	mov	r0, r1
   16b24:	bx	lr
   16b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b2c:	add	fp, sp, #28
   16b30:	sub	sp, sp, #20
   16b34:	cmp	r2, #37	; 0x25
   16b38:	bcs	171c0 <tcgetattr@plt+0x5dfc>
   16b3c:	mov	r8, r3
   16b40:	mov	r5, r2
   16b44:	mov	r6, r1
   16b48:	mov	r4, r0
   16b4c:	bl	112c8 <__errno_location@plt>
   16b50:	mov	r7, r0
   16b54:	mov	r0, #0
   16b58:	str	r0, [r7]
   16b5c:	bl	11274 <__ctype_b_loc@plt>
   16b60:	ldr	r1, [r0]
   16b64:	mov	r2, r4
   16b68:	ldrb	r0, [r2], #1
   16b6c:	add	r3, r1, r0, lsl #1
   16b70:	ldrb	r3, [r3, #1]
   16b74:	tst	r3, #32
   16b78:	bne	16b68 <tcgetattr@plt+0x57a4>
   16b7c:	add	sl, sp, #16
   16b80:	cmp	r6, #0
   16b84:	movne	sl, r6
   16b88:	mov	r6, #4
   16b8c:	cmp	r0, #45	; 0x2d
   16b90:	beq	171b4 <tcgetattr@plt+0x5df0>
   16b94:	mov	r0, r4
   16b98:	mov	r1, sl
   16b9c:	mov	r2, r5
   16ba0:	str	r8, [sp, #12]
   16ba4:	bl	11310 <strtoumax@plt>
   16ba8:	ldr	r5, [sl]
   16bac:	cmp	r5, r4
   16bb0:	beq	16bd8 <tcgetattr@plt+0x5814>
   16bb4:	mov	r8, r0
   16bb8:	ldr	r0, [r7]
   16bbc:	mov	r9, r1
   16bc0:	cmp	r0, #0
   16bc4:	beq	16c08 <tcgetattr@plt+0x5844>
   16bc8:	cmp	r0, #34	; 0x22
   16bcc:	bne	171b4 <tcgetattr@plt+0x5df0>
   16bd0:	mov	r6, #1
   16bd4:	b	16c0c <tcgetattr@plt+0x5848>
   16bd8:	ldr	r0, [fp, #8]
   16bdc:	cmp	r0, #0
   16be0:	ldrbne	r1, [r4]
   16be4:	cmpne	r1, #0
   16be8:	beq	171b4 <tcgetattr@plt+0x5df0>
   16bec:	bl	112a4 <strchr@plt>
   16bf0:	cmp	r0, #0
   16bf4:	beq	171b4 <tcgetattr@plt+0x5df0>
   16bf8:	mov	r6, #0
   16bfc:	mov	r8, #1
   16c00:	mov	r9, #0
   16c04:	b	16c18 <tcgetattr@plt+0x5854>
   16c08:	mov	r6, r0
   16c0c:	ldr	r0, [fp, #8]
   16c10:	cmp	r0, #0
   16c14:	beq	171ac <tcgetattr@plt+0x5de8>
   16c18:	ldrb	r7, [r5]
   16c1c:	cmp	r7, #0
   16c20:	beq	171ac <tcgetattr@plt+0x5de8>
   16c24:	ldr	r0, [fp, #8]
   16c28:	mov	r1, r7
   16c2c:	bl	112a4 <strchr@plt>
   16c30:	cmp	r0, #0
   16c34:	beq	16d3c <tcgetattr@plt+0x5978>
   16c38:	sub	r0, r7, #69	; 0x45
   16c3c:	mov	r1, #1
   16c40:	mov	r3, #0
   16c44:	mov	r4, #1024	; 0x400
   16c48:	cmp	r0, #21
   16c4c:	str	r1, [sp, #8]
   16c50:	bhi	16c68 <tcgetattr@plt+0x58a4>
   16c54:	movw	r2, #35141	; 0x8945
   16c58:	mov	r1, #1
   16c5c:	movt	r2, #48	; 0x30
   16c60:	tst	r2, r1, lsl r0
   16c64:	bne	16c84 <tcgetattr@plt+0x58c0>
   16c68:	sub	r0, r7, #103	; 0x67
   16c6c:	cmp	r0, #13
   16c70:	bhi	16cb8 <tcgetattr@plt+0x58f4>
   16c74:	mov	r1, #1
   16c78:	movw	r2, #8273	; 0x2051
   16c7c:	tst	r2, r1, lsl r0
   16c80:	beq	16cb8 <tcgetattr@plt+0x58f4>
   16c84:	ldr	r0, [fp, #8]
   16c88:	mov	r1, #48	; 0x30
   16c8c:	bl	112a4 <strchr@plt>
   16c90:	cmp	r0, #0
   16c94:	beq	16cb4 <tcgetattr@plt+0x58f0>
   16c98:	ldrb	r0, [r5, #1]
   16c9c:	cmp	r0, #66	; 0x42
   16ca0:	cmpne	r0, #68	; 0x44
   16ca4:	bne	16dcc <tcgetattr@plt+0x5a08>
   16ca8:	mov	r4, #1000	; 0x3e8
   16cac:	mov	r0, #2
   16cb0:	str	r0, [sp, #8]
   16cb4:	mov	r3, #0
   16cb8:	cmp	r7, #89	; 0x59
   16cbc:	stm	sp, {r5, r6}
   16cc0:	bgt	16d48 <tcgetattr@plt+0x5984>
   16cc4:	sub	r0, r7, #66	; 0x42
   16cc8:	cmp	r0, #14
   16ccc:	bhi	16df0 <tcgetattr@plt+0x5a2c>
   16cd0:	add	r1, pc, #0
   16cd4:	ldr	pc, [r1, r0, lsl #2]
   16cd8:	andeq	r6, r1, r4, lsl sp
   16cdc:	andeq	r7, r1, r0, lsr #1
   16ce0:	andeq	r7, r1, r0, lsr #1
   16ce4:	strheq	r7, [r1], -r4
   16ce8:	andeq	r7, r1, r0, lsr #1
   16cec:	andeq	r6, r1, r4, lsr #29
   16cf0:	andeq	r7, r1, r0, lsr #1
   16cf4:	andeq	r7, r1, r0, lsr #1
   16cf8:	andeq	r7, r1, r0, lsr #1
   16cfc:	andeq	r6, r1, r0, lsl pc
   16d00:	andeq	r7, r1, r0, lsr #1
   16d04:	andeq	r6, r1, r4, asr pc
   16d08:	andeq	r7, r1, r0, lsr #1
   16d0c:	andeq	r7, r1, r0, lsr #1
   16d10:	andeq	r7, r1, r0, lsr #2
   16d14:	mov	r1, #0
   16d18:	lsl	r3, r9, #10
   16d1c:	lsl	r0, r8, #10
   16d20:	lsr	r2, r9, #22
   16d24:	cmp	r1, r9, lsr #22
   16d28:	orr	r3, r3, r8, lsr #22
   16d2c:	mvnne	r0, #0
   16d30:	movwne	r2, #1
   16d34:	cmp	r1, r9, lsr #22
   16d38:	b	16dbc <tcgetattr@plt+0x59f8>
   16d3c:	ldr	r0, [sp, #12]
   16d40:	orr	r6, r6, #2
   16d44:	b	171b0 <tcgetattr@plt+0x5dec>
   16d48:	cmp	r7, #115	; 0x73
   16d4c:	bgt	16e6c <tcgetattr@plt+0x5aa8>
   16d50:	sub	r0, r7, #98	; 0x62
   16d54:	cmp	r0, #11
   16d58:	bhi	1702c <tcgetattr@plt+0x5c68>
   16d5c:	add	r1, pc, #4
   16d60:	mov	r2, #0
   16d64:	ldr	pc, [r1, r0, lsl #2]
   16d68:	muleq	r1, r8, sp
   16d6c:	andeq	r7, r1, r8, lsl #3
   16d70:	andeq	r7, r1, r0, lsr #1
   16d74:	andeq	r7, r1, r0, lsr #1
   16d78:	andeq	r7, r1, r0, lsr #1
   16d7c:	andeq	r6, r1, r4, lsr #29
   16d80:	andeq	r7, r1, r0, lsr #1
   16d84:	andeq	r7, r1, r0, lsr #1
   16d88:	andeq	r7, r1, r0, lsr #1
   16d8c:	andeq	r6, r1, r0, lsl pc
   16d90:	andeq	r7, r1, r0, lsr #1
   16d94:	andeq	r6, r1, r4, asr pc
   16d98:	mov	r1, #0
   16d9c:	lsl	r3, r9, #9
   16da0:	lsl	r0, r8, #9
   16da4:	lsr	r2, r9, #23
   16da8:	cmp	r1, r9, lsr #23
   16dac:	orr	r3, r3, r8, lsr #23
   16db0:	mvnne	r0, #0
   16db4:	movwne	r2, #1
   16db8:	cmp	r1, r9, lsr #23
   16dbc:	mvnne	r3, #0
   16dc0:	mov	r8, r0
   16dc4:	mov	r9, r3
   16dc8:	b	17188 <tcgetattr@plt+0x5dc4>
   16dcc:	cmp	r0, #105	; 0x69
   16dd0:	mov	r3, #0
   16dd4:	bne	16cb8 <tcgetattr@plt+0x58f4>
   16dd8:	ldrb	r0, [r5, #2]
   16ddc:	mov	r1, #1
   16de0:	cmp	r0, #66	; 0x42
   16de4:	movweq	r1, #3
   16de8:	str	r1, [sp, #8]
   16dec:	b	16cb8 <tcgetattr@plt+0x58f4>
   16df0:	cmp	r7, #84	; 0x54
   16df4:	beq	16fc0 <tcgetattr@plt+0x5bfc>
   16df8:	cmp	r7, #89	; 0x59
   16dfc:	bne	170a0 <tcgetattr@plt+0x5cdc>
   16e00:	mvn	r0, #0
   16e04:	mvn	r1, #0
   16e08:	mov	r2, r4
   16e0c:	mov	r5, r3
   16e10:	bl	1769c <tcgetattr@plt+0x62d8>
   16e14:	mov	ip, r5
   16e18:	mvn	lr, #0
   16e1c:	mov	r2, #0
   16e20:	mvn	r3, #7
   16e24:	mov	r5, r8
   16e28:	mov	r7, r9
   16e2c:	umull	r8, r6, r5, r4
   16e30:	mvn	r9, #0
   16e34:	mla	r6, r5, ip, r6
   16e38:	subs	r5, r0, r5
   16e3c:	sbcs	r5, r1, r7
   16e40:	mov	r5, #0
   16e44:	movwcc	r5, #1
   16e48:	cmp	r5, #0
   16e4c:	mlaeq	r9, r7, r4, r6
   16e50:	movne	r8, lr
   16e54:	orrne	r2, r2, #1
   16e58:	adds	r3, r3, #1
   16e5c:	mov	r5, r8
   16e60:	mov	r7, r9
   16e64:	bne	16e2c <tcgetattr@plt+0x5a68>
   16e68:	b	17188 <tcgetattr@plt+0x5dc4>
   16e6c:	cmp	r7, #116	; 0x74
   16e70:	beq	16fc0 <tcgetattr@plt+0x5bfc>
   16e74:	cmp	r7, #119	; 0x77
   16e78:	bne	170a0 <tcgetattr@plt+0x5cdc>
   16e7c:	lsl	r1, r9, #1
   16e80:	lsl	r0, r8, #1
   16e84:	cmp	r9, #0
   16e88:	lsr	r2, r9, #31
   16e8c:	orr	r1, r1, r8, lsr #31
   16e90:	mvnlt	r0, #0
   16e94:	mvnlt	r1, #0
   16e98:	mov	r8, r0
   16e9c:	mov	r9, r1
   16ea0:	b	17188 <tcgetattr@plt+0x5dc4>
   16ea4:	mvn	r0, #0
   16ea8:	mvn	r1, #0
   16eac:	mov	r2, r4
   16eb0:	mov	r5, r3
   16eb4:	bl	1769c <tcgetattr@plt+0x62d8>
   16eb8:	mov	ip, r5
   16ebc:	mvn	lr, #0
   16ec0:	mov	r2, #0
   16ec4:	mvn	r3, #2
   16ec8:	mov	r6, r8
   16ecc:	mov	r5, r9
   16ed0:	umull	r8, r7, r6, r4
   16ed4:	mvn	r9, #0
   16ed8:	mla	r7, r6, ip, r7
   16edc:	subs	r6, r0, r6
   16ee0:	sbcs	r6, r1, r5
   16ee4:	mov	r6, #0
   16ee8:	movwcc	r6, #1
   16eec:	cmp	r6, #0
   16ef0:	mlaeq	r9, r5, r4, r7
   16ef4:	movne	r8, lr
   16ef8:	orrne	r2, r2, #1
   16efc:	adds	r3, r3, #1
   16f00:	mov	r6, r8
   16f04:	mov	r5, r9
   16f08:	bne	16ed0 <tcgetattr@plt+0x5b0c>
   16f0c:	b	17188 <tcgetattr@plt+0x5dc4>
   16f10:	mvn	r0, #0
   16f14:	mvn	r1, #0
   16f18:	mov	r2, r4
   16f1c:	mov	r5, r3
   16f20:	bl	1769c <tcgetattr@plt+0x62d8>
   16f24:	subs	r0, r0, r8
   16f28:	mov	r2, #0
   16f2c:	sbcs	r0, r1, r9
   16f30:	movwcc	r2, #1
   16f34:	umull	r0, r1, r8, r4
   16f38:	mla	r1, r8, r5, r1
   16f3c:	cmp	r2, #0
   16f40:	mla	r9, r9, r4, r1
   16f44:	mvnne	r0, #0
   16f48:	mvnne	r9, #0
   16f4c:	mov	r8, r0
   16f50:	b	17188 <tcgetattr@plt+0x5dc4>
   16f54:	mvn	r0, #0
   16f58:	mvn	r1, #0
   16f5c:	mov	r2, r4
   16f60:	mov	r5, r3
   16f64:	bl	1769c <tcgetattr@plt+0x62d8>
   16f68:	mov	ip, r5
   16f6c:	mvn	lr, #0
   16f70:	mov	r2, #0
   16f74:	mvn	r3, #1
   16f78:	mov	r6, r8
   16f7c:	mov	r5, r9
   16f80:	umull	r8, r7, r6, r4
   16f84:	mvn	r9, #0
   16f88:	mla	r7, r6, ip, r7
   16f8c:	subs	r6, r0, r6
   16f90:	sbcs	r6, r1, r5
   16f94:	mov	r6, #0
   16f98:	movwcc	r6, #1
   16f9c:	cmp	r6, #0
   16fa0:	mlaeq	r9, r5, r4, r7
   16fa4:	movne	r8, lr
   16fa8:	orrne	r2, r2, #1
   16fac:	adds	r3, r3, #1
   16fb0:	mov	r6, r8
   16fb4:	mov	r5, r9
   16fb8:	bne	16f80 <tcgetattr@plt+0x5bbc>
   16fbc:	b	17188 <tcgetattr@plt+0x5dc4>
   16fc0:	mvn	r0, #0
   16fc4:	mvn	r1, #0
   16fc8:	mov	r2, r4
   16fcc:	mov	r5, r3
   16fd0:	bl	1769c <tcgetattr@plt+0x62d8>
   16fd4:	mov	ip, r5
   16fd8:	mvn	lr, #0
   16fdc:	mov	r2, #0
   16fe0:	mvn	r3, #3
   16fe4:	mov	r6, r8
   16fe8:	mov	r5, r9
   16fec:	umull	r8, r7, r6, r4
   16ff0:	mvn	r9, #0
   16ff4:	mla	r7, r6, ip, r7
   16ff8:	subs	r6, r0, r6
   16ffc:	sbcs	r6, r1, r5
   17000:	mov	r6, #0
   17004:	movwcc	r6, #1
   17008:	cmp	r6, #0
   1700c:	mlaeq	r9, r5, r4, r7
   17010:	movne	r8, lr
   17014:	orrne	r2, r2, #1
   17018:	adds	r3, r3, #1
   1701c:	mov	r6, r8
   17020:	mov	r5, r9
   17024:	bne	16fec <tcgetattr@plt+0x5c28>
   17028:	b	17188 <tcgetattr@plt+0x5dc4>
   1702c:	cmp	r7, #90	; 0x5a
   17030:	bne	170a0 <tcgetattr@plt+0x5cdc>
   17034:	mvn	r0, #0
   17038:	mvn	r1, #0
   1703c:	mov	r2, r4
   17040:	mov	r5, r3
   17044:	bl	1769c <tcgetattr@plt+0x62d8>
   17048:	mov	ip, r5
   1704c:	mvn	lr, #0
   17050:	mov	r2, #0
   17054:	mvn	r3, #6
   17058:	mov	r5, r8
   1705c:	mov	r7, r9
   17060:	umull	r8, r6, r5, r4
   17064:	mvn	r9, #0
   17068:	mla	r6, r5, ip, r6
   1706c:	subs	r5, r0, r5
   17070:	sbcs	r5, r1, r7
   17074:	mov	r5, #0
   17078:	movwcc	r5, #1
   1707c:	cmp	r5, #0
   17080:	mlaeq	r9, r7, r4, r6
   17084:	movne	r8, lr
   17088:	orrne	r2, r2, #1
   1708c:	adds	r3, r3, #1
   17090:	mov	r5, r8
   17094:	mov	r7, r9
   17098:	bne	17060 <tcgetattr@plt+0x5c9c>
   1709c:	b	17188 <tcgetattr@plt+0x5dc4>
   170a0:	ldr	r0, [sp, #12]
   170a4:	strd	r8, [r0]
   170a8:	ldr	r6, [sp, #4]
   170ac:	orr	r6, r6, #2
   170b0:	b	171b4 <tcgetattr@plt+0x5df0>
   170b4:	mvn	r0, #0
   170b8:	mvn	r1, #0
   170bc:	mov	r2, r4
   170c0:	mov	r5, r3
   170c4:	bl	1769c <tcgetattr@plt+0x62d8>
   170c8:	mov	ip, r5
   170cc:	mvn	lr, #0
   170d0:	mov	r2, #0
   170d4:	mvn	r3, #5
   170d8:	mov	r5, r8
   170dc:	mov	r7, r9
   170e0:	umull	r8, r6, r5, r4
   170e4:	mvn	r9, #0
   170e8:	mla	r6, r5, ip, r6
   170ec:	subs	r5, r0, r5
   170f0:	sbcs	r5, r1, r7
   170f4:	mov	r5, #0
   170f8:	movwcc	r5, #1
   170fc:	cmp	r5, #0
   17100:	mlaeq	r9, r7, r4, r6
   17104:	movne	r8, lr
   17108:	orrne	r2, r2, #1
   1710c:	adds	r3, r3, #1
   17110:	mov	r5, r8
   17114:	mov	r7, r9
   17118:	bne	170e0 <tcgetattr@plt+0x5d1c>
   1711c:	b	17188 <tcgetattr@plt+0x5dc4>
   17120:	mvn	r0, #0
   17124:	mvn	r1, #0
   17128:	mov	r2, r4
   1712c:	mov	r5, r3
   17130:	bl	1769c <tcgetattr@plt+0x62d8>
   17134:	mov	ip, r5
   17138:	mvn	lr, #0
   1713c:	mov	r2, #0
   17140:	mvn	r3, #4
   17144:	mov	r5, r8
   17148:	mov	r7, r9
   1714c:	umull	r8, r6, r5, r4
   17150:	mvn	r9, #0
   17154:	mla	r6, r5, ip, r6
   17158:	subs	r5, r0, r5
   1715c:	sbcs	r5, r1, r7
   17160:	mov	r5, #0
   17164:	movwcc	r5, #1
   17168:	cmp	r5, #0
   1716c:	mlaeq	r9, r7, r4, r6
   17170:	movne	r8, lr
   17174:	orrne	r2, r2, #1
   17178:	adds	r3, r3, #1
   1717c:	mov	r5, r8
   17180:	mov	r7, r9
   17184:	bne	1714c <tcgetattr@plt+0x5d88>
   17188:	ldr	r1, [sp]
   1718c:	ldr	r3, [sp, #8]
   17190:	ldr	r6, [sp, #4]
   17194:	add	r0, r1, r3
   17198:	orr	r6, r2, r6
   1719c:	str	r0, [sl]
   171a0:	ldrb	r0, [r1, r3]
   171a4:	cmp	r0, #0
   171a8:	orrne	r6, r6, #2
   171ac:	ldr	r0, [sp, #12]
   171b0:	strd	r8, [r0]
   171b4:	mov	r0, r6
   171b8:	sub	sp, fp, #28
   171bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171c0:	movw	r0, #44433	; 0xad91
   171c4:	movw	r1, #44542	; 0xadfe
   171c8:	movw	r3, #44558	; 0xae0e
   171cc:	mov	r2, #85	; 0x55
   171d0:	movt	r0, #1
   171d4:	movt	r1, #1
   171d8:	movt	r3, #1
   171dc:	bl	113b8 <__assert_fail@plt>
   171e0:	clz	r2, r1
   171e4:	clz	r3, r0
   171e8:	lsr	r2, r2, #5
   171ec:	lsr	r3, r3, #5
   171f0:	orrs	r2, r3, r2
   171f4:	movwne	r1, #1
   171f8:	movwne	r0, #1
   171fc:	cmp	r1, #0
   17200:	beq	17230 <tcgetattr@plt+0x5e6c>
   17204:	mvn	r2, #-2147483648	; 0x80000000
   17208:	udiv	r2, r2, r1
   1720c:	cmp	r2, r0
   17210:	bcs	17230 <tcgetattr@plt+0x5e6c>
   17214:	push	{fp, lr}
   17218:	mov	fp, sp
   1721c:	bl	112c8 <__errno_location@plt>
   17220:	mov	r1, #12
   17224:	str	r1, [r0]
   17228:	mov	r0, #0
   1722c:	pop	{fp, pc}
   17230:	b	110e8 <calloc@plt>
   17234:	cmp	r0, #0
   17238:	movweq	r0, #1
   1723c:	cmn	r0, #1
   17240:	ble	17248 <tcgetattr@plt+0x5e84>
   17244:	b	11238 <malloc@plt>
   17248:	push	{fp, lr}
   1724c:	mov	fp, sp
   17250:	bl	112c8 <__errno_location@plt>
   17254:	mov	r1, #12
   17258:	str	r1, [r0]
   1725c:	mov	r0, #0
   17260:	pop	{fp, pc}
   17264:	push	{fp, lr}
   17268:	mov	fp, sp
   1726c:	cmp	r0, #0
   17270:	beq	1728c <tcgetattr@plt+0x5ec8>
   17274:	cmp	r1, #0
   17278:	beq	17298 <tcgetattr@plt+0x5ed4>
   1727c:	cmn	r1, #1
   17280:	ble	172a0 <tcgetattr@plt+0x5edc>
   17284:	pop	{fp, lr}
   17288:	b	11190 <realloc@plt>
   1728c:	mov	r0, r1
   17290:	pop	{fp, lr}
   17294:	b	17234 <tcgetattr@plt+0x5e70>
   17298:	bl	14040 <tcgetattr@plt+0x2c7c>
   1729c:	b	172ac <tcgetattr@plt+0x5ee8>
   172a0:	bl	112c8 <__errno_location@plt>
   172a4:	mov	r1, #12
   172a8:	str	r1, [r0]
   172ac:	mov	r0, #0
   172b0:	pop	{fp, pc}
   172b4:	push	{r4, r5, r6, sl, fp, lr}
   172b8:	add	fp, sp, #16
   172bc:	mov	r4, r0
   172c0:	bl	111f0 <__fpending@plt>
   172c4:	mov	r5, r0
   172c8:	mov	r0, r4
   172cc:	bl	111fc <ferror_unlocked@plt>
   172d0:	mov	r6, r0
   172d4:	mov	r0, r4
   172d8:	bl	17334 <tcgetattr@plt+0x5f70>
   172dc:	cmp	r6, #0
   172e0:	beq	17300 <tcgetattr@plt+0x5f3c>
   172e4:	mvn	r4, #0
   172e8:	cmp	r0, #0
   172ec:	bne	1732c <tcgetattr@plt+0x5f68>
   172f0:	bl	112c8 <__errno_location@plt>
   172f4:	mov	r1, #0
   172f8:	str	r1, [r0]
   172fc:	b	1732c <tcgetattr@plt+0x5f68>
   17300:	cmp	r0, #0
   17304:	mov	r4, r0
   17308:	mvnne	r4, #0
   1730c:	cmp	r5, #0
   17310:	bne	1732c <tcgetattr@plt+0x5f68>
   17314:	cmp	r0, #0
   17318:	beq	1732c <tcgetattr@plt+0x5f68>
   1731c:	bl	112c8 <__errno_location@plt>
   17320:	ldr	r0, [r0]
   17324:	subs	r4, r0, #9
   17328:	mvnne	r4, #0
   1732c:	mov	r0, r4
   17330:	pop	{r4, r5, r6, sl, fp, pc}
   17334:	push	{r4, r5, r6, sl, fp, lr}
   17338:	add	fp, sp, #16
   1733c:	sub	sp, sp, #8
   17340:	mov	r4, r0
   17344:	bl	11304 <fileno@plt>
   17348:	cmn	r0, #1
   1734c:	ble	173c0 <tcgetattr@plt+0x5ffc>
   17350:	mov	r0, r4
   17354:	bl	11250 <__freading@plt>
   17358:	cmp	r0, #0
   1735c:	beq	17388 <tcgetattr@plt+0x5fc4>
   17360:	mov	r0, r4
   17364:	bl	11304 <fileno@plt>
   17368:	mov	r1, #1
   1736c:	mov	r2, #0
   17370:	mov	r3, #0
   17374:	str	r1, [sp]
   17378:	bl	111cc <lseek64@plt>
   1737c:	and	r0, r0, r1
   17380:	cmn	r0, #1
   17384:	beq	173c0 <tcgetattr@plt+0x5ffc>
   17388:	mov	r0, r4
   1738c:	bl	173d0 <tcgetattr@plt+0x600c>
   17390:	cmp	r0, #0
   17394:	beq	173c0 <tcgetattr@plt+0x5ffc>
   17398:	bl	112c8 <__errno_location@plt>
   1739c:	ldr	r6, [r0]
   173a0:	mov	r5, r0
   173a4:	mov	r0, r4
   173a8:	bl	11328 <fclose@plt>
   173ac:	cmp	r6, #0
   173b0:	strne	r6, [r5]
   173b4:	mvnne	r0, #0
   173b8:	sub	sp, fp, #16
   173bc:	pop	{r4, r5, r6, sl, fp, pc}
   173c0:	mov	r0, r4
   173c4:	sub	sp, fp, #16
   173c8:	pop	{r4, r5, r6, sl, fp, lr}
   173cc:	b	11328 <fclose@plt>
   173d0:	push	{r4, sl, fp, lr}
   173d4:	add	fp, sp, #8
   173d8:	sub	sp, sp, #8
   173dc:	mov	r4, r0
   173e0:	cmp	r0, #0
   173e4:	beq	17400 <tcgetattr@plt+0x603c>
   173e8:	mov	r0, r4
   173ec:	bl	11250 <__freading@plt>
   173f0:	cmp	r0, #0
   173f4:	ldrbne	r0, [r4, #1]
   173f8:	tstne	r0, #1
   173fc:	bne	17410 <tcgetattr@plt+0x604c>
   17400:	mov	r0, r4
   17404:	sub	sp, fp, #8
   17408:	pop	{r4, sl, fp, lr}
   1740c:	b	11124 <fflush@plt>
   17410:	mov	r0, #1
   17414:	mov	r2, #0
   17418:	mov	r3, #0
   1741c:	str	r0, [sp]
   17420:	mov	r0, r4
   17424:	bl	1742c <tcgetattr@plt+0x6068>
   17428:	b	17400 <tcgetattr@plt+0x603c>
   1742c:	push	{r4, r5, r6, r7, fp, lr}
   17430:	add	fp, sp, #16
   17434:	sub	sp, sp, #8
   17438:	mov	r4, r0
   1743c:	ldr	r0, [r0, #4]
   17440:	mov	r5, r3
   17444:	mov	r6, r2
   17448:	ldr	r1, [r4, #8]
   1744c:	cmp	r1, r0
   17450:	bne	1746c <tcgetattr@plt+0x60a8>
   17454:	ldrd	r0, [r4, #16]
   17458:	cmp	r1, r0
   1745c:	bne	1746c <tcgetattr@plt+0x60a8>
   17460:	ldr	r0, [r4, #36]	; 0x24
   17464:	cmp	r0, #0
   17468:	beq	17484 <tcgetattr@plt+0x60c0>
   1746c:	mov	r0, r4
   17470:	mov	r2, r6
   17474:	mov	r3, r5
   17478:	sub	sp, fp, #16
   1747c:	pop	{r4, r5, r6, r7, fp, lr}
   17480:	b	11334 <fseeko64@plt>
   17484:	ldr	r7, [fp, #8]
   17488:	mov	r0, r4
   1748c:	bl	11304 <fileno@plt>
   17490:	mov	r2, r6
   17494:	mov	r3, r5
   17498:	str	r7, [sp]
   1749c:	bl	111cc <lseek64@plt>
   174a0:	and	r2, r0, r1
   174a4:	cmn	r2, #1
   174a8:	beq	174c4 <tcgetattr@plt+0x6100>
   174ac:	strd	r0, [r4, #80]	; 0x50
   174b0:	ldr	r0, [r4]
   174b4:	bic	r0, r0, #16
   174b8:	str	r0, [r4]
   174bc:	mov	r0, #0
   174c0:	b	174c8 <tcgetattr@plt+0x6104>
   174c4:	mvn	r0, #0
   174c8:	sub	sp, fp, #16
   174cc:	pop	{r4, r5, r6, r7, fp, pc}
   174d0:	push	{fp, lr}
   174d4:	mov	fp, sp
   174d8:	mov	r0, #14
   174dc:	bl	11364 <nl_langinfo@plt>
   174e0:	movw	r1, #36146	; 0x8d32
   174e4:	cmp	r0, #0
   174e8:	movt	r1, #1
   174ec:	movne	r1, r0
   174f0:	movw	r0, #44637	; 0xae5d
   174f4:	ldrb	r2, [r1]
   174f8:	movt	r0, #1
   174fc:	cmp	r2, #0
   17500:	movne	r0, r1
   17504:	pop	{fp, pc}
   17508:	push	{r4, r5, r6, r7, fp, lr}
   1750c:	add	fp, sp, #16
   17510:	sub	sp, sp, #8
   17514:	add	r5, sp, #4
   17518:	cmp	r0, #0
   1751c:	mov	r7, r2
   17520:	mov	r4, r1
   17524:	movne	r5, r0
   17528:	mov	r0, r5
   1752c:	bl	11208 <mbrtowc@plt>
   17530:	mov	r6, r0
   17534:	cmp	r7, #0
   17538:	beq	1755c <tcgetattr@plt+0x6198>
   1753c:	cmn	r6, #2
   17540:	bcc	1755c <tcgetattr@plt+0x6198>
   17544:	mov	r0, #0
   17548:	bl	175a4 <tcgetattr@plt+0x61e0>
   1754c:	cmp	r0, #0
   17550:	ldrbeq	r0, [r4]
   17554:	moveq	r6, #1
   17558:	streq	r0, [r5]
   1755c:	mov	r0, r6
   17560:	sub	sp, fp, #16
   17564:	pop	{r4, r5, r6, r7, fp, pc}
   17568:	cmp	r2, #0
   1756c:	beq	1759c <tcgetattr@plt+0x61d8>
   17570:	mvn	r3, #0
   17574:	udiv	r3, r3, r2
   17578:	cmp	r3, r1
   1757c:	bcs	1759c <tcgetattr@plt+0x61d8>
   17580:	push	{fp, lr}
   17584:	mov	fp, sp
   17588:	bl	112c8 <__errno_location@plt>
   1758c:	mov	r1, #12
   17590:	str	r1, [r0]
   17594:	mov	r0, #0
   17598:	pop	{fp, pc}
   1759c:	mul	r1, r2, r1
   175a0:	b	17264 <tcgetattr@plt+0x5ea0>
   175a4:	push	{r4, sl, fp, lr}
   175a8:	add	fp, sp, #8
   175ac:	sub	sp, sp, #264	; 0x108
   175b0:	add	r1, sp, #7
   175b4:	movw	r2, #257	; 0x101
   175b8:	bl	17608 <tcgetattr@plt+0x6244>
   175bc:	mov	r4, #0
   175c0:	cmp	r0, #0
   175c4:	bne	175fc <tcgetattr@plt+0x6238>
   175c8:	movw	r1, #44643	; 0xae63
   175cc:	add	r0, sp, #7
   175d0:	movt	r1, #1
   175d4:	bl	1110c <strcmp@plt>
   175d8:	cmp	r0, #0
   175dc:	beq	175fc <tcgetattr@plt+0x6238>
   175e0:	movw	r1, #44645	; 0xae65
   175e4:	add	r0, sp, #7
   175e8:	movt	r1, #1
   175ec:	bl	1110c <strcmp@plt>
   175f0:	mov	r4, r0
   175f4:	cmp	r0, #0
   175f8:	movwne	r4, #1
   175fc:	mov	r0, r4
   17600:	sub	sp, fp, #8
   17604:	pop	{r4, sl, fp, pc}
   17608:	push	{r4, r5, r6, r7, fp, lr}
   1760c:	add	fp, sp, #16
   17610:	mov	r4, r1
   17614:	mov	r1, #0
   17618:	mov	r6, r2
   1761c:	bl	1134c <setlocale@plt>
   17620:	cmp	r0, #0
   17624:	beq	17650 <tcgetattr@plt+0x628c>
   17628:	mov	r7, r0
   1762c:	bl	11298 <strlen@plt>
   17630:	cmp	r0, r6
   17634:	bcs	17664 <tcgetattr@plt+0x62a0>
   17638:	add	r2, r0, #1
   1763c:	mov	r0, r4
   17640:	mov	r1, r7
   17644:	bl	11148 <memcpy@plt>
   17648:	mov	r5, #0
   1764c:	b	1768c <tcgetattr@plt+0x62c8>
   17650:	cmp	r6, #0
   17654:	mov	r5, #22
   17658:	movne	r0, #0
   1765c:	strbne	r0, [r4]
   17660:	b	1768c <tcgetattr@plt+0x62c8>
   17664:	mov	r5, #34	; 0x22
   17668:	cmp	r6, #0
   1766c:	beq	1768c <tcgetattr@plt+0x62c8>
   17670:	sub	r6, r6, #1
   17674:	mov	r0, r4
   17678:	mov	r1, r7
   1767c:	mov	r2, r6
   17680:	bl	11148 <memcpy@plt>
   17684:	mov	r0, #0
   17688:	strb	r0, [r4, r6]
   1768c:	mov	r0, r5
   17690:	pop	{r4, r5, r6, r7, fp, pc}
   17694:	mov	r1, #0
   17698:	b	1134c <setlocale@plt>
   1769c:	cmp	r3, #0
   176a0:	cmpeq	r2, #0
   176a4:	bne	176bc <tcgetattr@plt+0x62f8>
   176a8:	cmp	r1, #0
   176ac:	cmpeq	r0, #0
   176b0:	mvnne	r1, #0
   176b4:	mvnne	r0, #0
   176b8:	b	176d8 <tcgetattr@plt+0x6314>
   176bc:	sub	sp, sp, #8
   176c0:	push	{sp, lr}
   176c4:	bl	176e8 <tcgetattr@plt+0x6324>
   176c8:	ldr	lr, [sp, #4]
   176cc:	add	sp, sp, #8
   176d0:	pop	{r2, r3}
   176d4:	bx	lr
   176d8:	push	{r1, lr}
   176dc:	mov	r0, #8
   176e0:	bl	11100 <raise@plt>
   176e4:	pop	{r1, pc}
   176e8:	cmp	r1, r3
   176ec:	cmpeq	r0, r2
   176f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176f4:	mov	r4, r0
   176f8:	movcc	r0, #0
   176fc:	mov	r5, r1
   17700:	ldr	lr, [sp, #36]	; 0x24
   17704:	movcc	r1, r0
   17708:	bcc	17804 <tcgetattr@plt+0x6440>
   1770c:	cmp	r3, #0
   17710:	clzeq	ip, r2
   17714:	clzne	ip, r3
   17718:	addeq	ip, ip, #32
   1771c:	cmp	r5, #0
   17720:	clzeq	r1, r4
   17724:	addeq	r1, r1, #32
   17728:	clzne	r1, r5
   1772c:	sub	ip, ip, r1
   17730:	sub	sl, ip, #32
   17734:	lsl	r9, r3, ip
   17738:	rsb	fp, ip, #32
   1773c:	orr	r9, r9, r2, lsl sl
   17740:	orr	r9, r9, r2, lsr fp
   17744:	lsl	r8, r2, ip
   17748:	cmp	r5, r9
   1774c:	cmpeq	r4, r8
   17750:	movcc	r0, #0
   17754:	movcc	r1, r0
   17758:	bcc	17774 <tcgetattr@plt+0x63b0>
   1775c:	mov	r0, #1
   17760:	subs	r4, r4, r8
   17764:	lsl	r1, r0, sl
   17768:	orr	r1, r1, r0, lsr fp
   1776c:	lsl	r0, r0, ip
   17770:	sbc	r5, r5, r9
   17774:	cmp	ip, #0
   17778:	beq	17804 <tcgetattr@plt+0x6440>
   1777c:	lsr	r6, r8, #1
   17780:	orr	r6, r6, r9, lsl #31
   17784:	lsr	r7, r9, #1
   17788:	mov	r2, ip
   1778c:	b	177b0 <tcgetattr@plt+0x63ec>
   17790:	subs	r3, r4, r6
   17794:	sbc	r8, r5, r7
   17798:	adds	r3, r3, r3
   1779c:	adc	r8, r8, r8
   177a0:	adds	r4, r3, #1
   177a4:	adc	r5, r8, #0
   177a8:	subs	r2, r2, #1
   177ac:	beq	177cc <tcgetattr@plt+0x6408>
   177b0:	cmp	r5, r7
   177b4:	cmpeq	r4, r6
   177b8:	bcs	17790 <tcgetattr@plt+0x63cc>
   177bc:	adds	r4, r4, r4
   177c0:	adc	r5, r5, r5
   177c4:	subs	r2, r2, #1
   177c8:	bne	177b0 <tcgetattr@plt+0x63ec>
   177cc:	lsr	r3, r4, ip
   177d0:	orr	r3, r3, r5, lsl fp
   177d4:	lsr	r2, r5, ip
   177d8:	orr	r3, r3, r5, lsr sl
   177dc:	adds	r0, r0, r4
   177e0:	mov	r4, r3
   177e4:	lsl	r3, r2, ip
   177e8:	orr	r3, r3, r4, lsl sl
   177ec:	lsl	ip, r4, ip
   177f0:	orr	r3, r3, r4, lsr fp
   177f4:	adc	r1, r1, r5
   177f8:	subs	r0, r0, ip
   177fc:	mov	r5, r2
   17800:	sbc	r1, r1, r3
   17804:	cmp	lr, #0
   17808:	strdne	r4, [lr]
   1780c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17810:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17814:	mov	r7, r0
   17818:	ldr	r6, [pc, #72]	; 17868 <tcgetattr@plt+0x64a4>
   1781c:	ldr	r5, [pc, #72]	; 1786c <tcgetattr@plt+0x64a8>
   17820:	add	r6, pc, r6
   17824:	add	r5, pc, r5
   17828:	sub	r6, r6, r5
   1782c:	mov	r8, r1
   17830:	mov	r9, r2
   17834:	bl	110c8 <calloc@plt-0x20>
   17838:	asrs	r6, r6, #2
   1783c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17840:	mov	r4, #0
   17844:	add	r4, r4, #1
   17848:	ldr	r3, [r5], #4
   1784c:	mov	r2, r9
   17850:	mov	r1, r8
   17854:	mov	r0, r7
   17858:	blx	r3
   1785c:	cmp	r6, r4
   17860:	bne	17844 <tcgetattr@plt+0x6480>
   17864:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17868:	andeq	r3, r1, r4, ror #13
   1786c:	ldrdeq	r3, [r1], -ip
   17870:	bx	lr
   17874:	ldr	r3, [pc, #12]	; 17888 <tcgetattr@plt+0x64c4>
   17878:	mov	r1, #0
   1787c:	add	r3, pc, r3
   17880:	ldr	r2, [r3]
   17884:	b	112d4 <__cxa_atexit@plt>
   17888:	andeq	r3, r1, r8, lsl #17

Disassembly of section .fini:

0001788c <.fini>:
   1788c:	push	{r3, lr}
   17890:	pop	{r3, pc}
