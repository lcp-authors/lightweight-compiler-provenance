
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010678 <.init>:
   10678:	push	{r3, lr}
   1067c:	bl	10d4c <fputs@plt+0x5b8>
   10680:	pop	{r3, pc}

Disassembly of section .plt:

00010684 <open@plt-0x14>:
   10684:	push	{lr}		; (str lr, [sp, #-4]!)
   10688:	ldr	lr, [pc, #4]	; 10694 <open@plt-0x4>
   1068c:	add	lr, pc, lr
   10690:	ldr	pc, [lr, #8]!
   10694:	andeq	r1, r1, ip, ror #18

00010698 <open@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2412]!	; 0x96c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2404]!	; 0x964

000106b0 <srand@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2396]!	; 0x95c

000106bc <__libc_start_main@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2388]!	; 0x954

000106c8 <__gmon_start__@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2380]!	; 0x94c

000106d4 <getpass@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2372]!	; 0x944

000106e0 <calloc@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2364]!	; 0x93c

000106ec <free@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2356]!	; 0x934

000106f8 <read@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2348]!	; 0x92c

00010704 <strlen@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2340]!	; 0x924

00010710 <getopt@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2332]!	; 0x91c

0001071c <printf@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2324]!	; 0x914

00010728 <atoi@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2316]!	; 0x90c

00010734 <time@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2308]!	; 0x904

00010740 <strdup@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2300]!	; 0x8fc

0001074c <rb_crypt@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2292]!	; 0x8f4

00010758 <puts@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2284]!	; 0x8ec

00010764 <rand@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010770 <strcmp@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2268]!	; 0x8dc

0001077c <exit@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2260]!	; 0x8d4

00010788 <sprintf@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2252]!	; 0x8cc

00010794 <fputs@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2244]!	; 0x8c4

Disassembly of section .text:

000107a0 <.text>:
   107a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107a4:	mov	r9, #0
   107a8:	ldr	fp, [pc, #1196]	; 10c5c <fputs@plt+0x4c8>
   107ac:	ldr	r7, [pc, #1196]	; 10c60 <fputs@plt+0x4cc>
   107b0:	sub	sp, sp, #20
   107b4:	mov	sl, r1
   107b8:	mov	r4, r9
   107bc:	mov	r5, r9
   107c0:	mov	r6, r9
   107c4:	mov	r8, r9
   107c8:	str	r0, [sp, #4]
   107cc:	mov	r1, sl
   107d0:	ldr	r2, [pc, #1164]	; 10c64 <fputs@plt+0x4d0>
   107d4:	ldr	r0, [sp, #4]
   107d8:	bl	10710 <getopt@plt>
   107dc:	cmn	r0, #1
   107e0:	mov	r1, r0
   107e4:	bne	1085c <fputs@plt+0xc8>
   107e8:	tst	r5, #1
   107ec:	and	r7, r5, #2
   107f0:	beq	10a10 <fputs@plt+0x27c>
   107f4:	cmp	r4, #0
   107f8:	moveq	r4, #8
   107fc:	cmp	r7, #0
   10800:	beq	109cc <fputs@plt+0x238>
   10804:	cmp	r6, #0
   10808:	beq	109bc <fputs@plt+0x228>
   1080c:	mov	r0, r6
   10810:	bl	10704 <strlen@plt>
   10814:	cmp	r0, #16
   10818:	bhi	109bc <fputs@plt+0x228>
   1081c:	mov	r2, r6
   10820:	ldr	r1, [pc, #1088]	; 10c68 <fputs@plt+0x4d4>
   10824:	ldr	r0, [pc, #1088]	; 10c6c <fputs@plt+0x4d8>
   10828:	bl	10788 <sprintf@plt>
   1082c:	ldr	r4, [pc, #1080]	; 10c6c <fputs@plt+0x4d8>
   10830:	tst	r5, #4
   10834:	beq	10bf0 <fputs@plt+0x45c>
   10838:	cmp	r8, #0
   1083c:	bne	10bd0 <fputs@plt+0x43c>
   10840:	ldr	r3, [pc, #1064]	; 10c70 <fputs@plt+0x4dc>
   10844:	ldr	r0, [pc, #1064]	; 10c74 <fputs@plt+0x4e0>
   10848:	ldr	r1, [r3]
   1084c:	bl	10794 <fputs@plt>
   10850:	mov	r0, #1
   10854:	add	sp, sp, #20
   10858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1085c:	cmp	r1, #109	; 0x6d
   10860:	beq	10908 <fputs@plt+0x174>
   10864:	bgt	108ac <fputs@plt+0x118>
   10868:	cmp	r1, #98	; 0x62
   1086c:	beq	10910 <fputs@plt+0x17c>
   10870:	bgt	10888 <fputs@plt+0xf4>
   10874:	cmp	r1, #63	; 0x3f
   10878:	beq	10984 <fputs@plt+0x1f0>
   1087c:	mov	r0, fp
   10880:	bl	1071c <printf@plt>
   10884:	b	107cc <fputs@plt+0x38>
   10888:	cmp	r1, #104	; 0x68
   1088c:	beq	1091c <fputs@plt+0x188>
   10890:	cmp	r1, #108	; 0x6c
   10894:	bne	1087c <fputs@plt+0xe8>
   10898:	ldr	r0, [r7]
   1089c:	bl	10728 <atoi@plt>
   108a0:	orr	r5, r5, #8
   108a4:	mov	r4, r0
   108a8:	b	107cc <fputs@plt+0x38>
   108ac:	cmp	r1, #115	; 0x73
   108b0:	orreq	r5, r5, #2
   108b4:	ldreq	r6, [r7]
   108b8:	beq	107cc <fputs@plt+0x38>
   108bc:	bgt	108ec <fputs@plt+0x158>
   108c0:	cmp	r1, #112	; 0x70
   108c4:	orreq	r5, r5, #4
   108c8:	ldreq	r8, [r7]
   108cc:	beq	107cc <fputs@plt+0x38>
   108d0:	cmp	r1, #114	; 0x72
   108d4:	bne	1087c <fputs@plt+0xe8>
   108d8:	ldr	r0, [r7]
   108dc:	bl	10728 <atoi@plt>
   108e0:	orr	r5, r5, #32
   108e4:	mov	r9, r0
   108e8:	b	107cc <fputs@plt+0x38>
   108ec:	cmp	r1, #120	; 0x78
   108f0:	orreq	r5, r5, #64	; 0x40
   108f4:	beq	107cc <fputs@plt+0x38>
   108f8:	cmp	r1, #121	; 0x79
   108fc:	orreq	r5, r5, #128	; 0x80
   10900:	beq	107cc <fputs@plt+0x38>
   10904:	b	1087c <fputs@plt+0xe8>
   10908:	orr	r5, r5, #1
   1090c:	b	107cc <fputs@plt+0x38>
   10910:	orr	r5, r5, #16
   10914:	mov	r9, #4
   10918:	b	107cc <fputs@plt+0x38>
   1091c:	ldr	r0, [pc, #852]	; 10c78 <fputs@plt+0x4e4>
   10920:	bl	10758 <puts@plt>
   10924:	ldr	r0, [pc, #848]	; 10c7c <fputs@plt+0x4e8>
   10928:	bl	10758 <puts@plt>
   1092c:	ldr	r0, [pc, #844]	; 10c80 <fputs@plt+0x4ec>
   10930:	bl	10758 <puts@plt>
   10934:	ldr	r0, [pc, #840]	; 10c84 <fputs@plt+0x4f0>
   10938:	bl	10758 <puts@plt>
   1093c:	ldr	r0, [pc, #836]	; 10c88 <fputs@plt+0x4f4>
   10940:	bl	10758 <puts@plt>
   10944:	ldr	r0, [pc, #832]	; 10c8c <fputs@plt+0x4f8>
   10948:	bl	10758 <puts@plt>
   1094c:	ldr	r0, [pc, #828]	; 10c90 <fputs@plt+0x4fc>
   10950:	bl	10758 <puts@plt>
   10954:	ldr	r0, [pc, #824]	; 10c94 <fputs@plt+0x500>
   10958:	bl	10758 <puts@plt>
   1095c:	ldr	r0, [pc, #820]	; 10c98 <fputs@plt+0x504>
   10960:	bl	10758 <puts@plt>
   10964:	ldr	r0, [pc, #816]	; 10c9c <fputs@plt+0x508>
   10968:	bl	10758 <puts@plt>
   1096c:	ldr	r0, [pc, #812]	; 10ca0 <fputs@plt+0x50c>
   10970:	bl	10758 <puts@plt>
   10974:	ldr	r0, [pc, #808]	; 10ca4 <fputs@plt+0x510>
   10978:	bl	10758 <puts@plt>
   1097c:	mov	r0, #0
   10980:	bl	1077c <exit@plt>
   10984:	ldr	r0, [pc, #796]	; 10ca8 <fputs@plt+0x514>
   10988:	bl	10758 <puts@plt>
   1098c:	ldr	r0, [pc, #792]	; 10cac <fputs@plt+0x518>
   10990:	bl	10758 <puts@plt>
   10994:	ldr	r0, [pc, #788]	; 10cb0 <fputs@plt+0x51c>
   10998:	bl	10758 <puts@plt>
   1099c:	ldr	r0, [pc, #784]	; 10cb4 <fputs@plt+0x520>
   109a0:	bl	10758 <puts@plt>
   109a4:	ldr	r0, [pc, #780]	; 10cb8 <fputs@plt+0x524>
   109a8:	bl	10758 <puts@plt>
   109ac:	ldr	r0, [pc, #776]	; 10cbc <fputs@plt+0x528>
   109b0:	bl	10758 <puts@plt>
   109b4:	ldr	r0, [pc, #772]	; 10cc0 <fputs@plt+0x52c>
   109b8:	b	10978 <fputs@plt+0x1e4>
   109bc:	ldr	r0, [pc, #768]	; 10cc4 <fputs@plt+0x530>
   109c0:	bl	10758 <puts@plt>
   109c4:	mov	r0, #1
   109c8:	b	10980 <fputs@plt+0x1ec>
   109cc:	cmp	r4, #16
   109d0:	ldrgt	r0, [pc, #752]	; 10cc8 <fputs@plt+0x534>
   109d4:	bgt	10978 <fputs@plt+0x1e4>
   109d8:	ldr	r6, [pc, #748]	; 10ccc <fputs@plt+0x538>
   109dc:	mov	r1, r4
   109e0:	add	r4, r6, r4
   109e4:	mov	r9, #36	; 0x24
   109e8:	mov	r3, #49	; 0x31
   109ec:	add	r0, r6, #3
   109f0:	strb	r9, [r6]
   109f4:	strb	r3, [r6, #1]
   109f8:	strb	r9, [r6, #2]
   109fc:	bl	10e90 <fputs@plt+0x6fc>
   10a00:	strb	r9, [r4, #3]
   10a04:	strb	r7, [r4, #4]
   10a08:	mov	r4, r6
   10a0c:	b	10830 <fputs@plt+0x9c>
   10a10:	tst	r5, #16
   10a14:	beq	10ac8 <fputs@plt+0x334>
   10a18:	cmp	r4, #0
   10a1c:	moveq	r4, #22
   10a20:	cmp	r7, #0
   10a24:	beq	10a74 <fputs@plt+0x2e0>
   10a28:	cmp	r6, #0
   10a2c:	beq	10a6c <fputs@plt+0x2d8>
   10a30:	mov	r0, r6
   10a34:	bl	10704 <strlen@plt>
   10a38:	cmp	r0, #22
   10a3c:	bhi	10a6c <fputs@plt+0x2d8>
   10a40:	mov	r2, r9
   10a44:	ldr	r1, [pc, #644]	; 10cd0 <fputs@plt+0x53c>
   10a48:	add	r0, sp, #12
   10a4c:	bl	10788 <sprintf@plt>
   10a50:	mov	r3, r6
   10a54:	add	r2, sp, #12
   10a58:	ldr	r1, [pc, #628]	; 10cd4 <fputs@plt+0x540>
   10a5c:	ldr	r0, [pc, #628]	; 10cd8 <fputs@plt+0x544>
   10a60:	bl	10788 <sprintf@plt>
   10a64:	ldr	r4, [pc, #620]	; 10cd8 <fputs@plt+0x544>
   10a68:	b	10830 <fputs@plt+0x9c>
   10a6c:	ldr	r0, [pc, #616]	; 10cdc <fputs@plt+0x548>
   10a70:	b	109c0 <fputs@plt+0x22c>
   10a74:	cmp	r4, #22
   10a78:	ldrgt	r0, [pc, #608]	; 10ce0 <fputs@plt+0x54c>
   10a7c:	bgt	10978 <fputs@plt+0x1e4>
   10a80:	ldr	r6, [pc, #580]	; 10ccc <fputs@plt+0x538>
   10a84:	mov	r2, r9
   10a88:	ldr	r1, [pc, #576]	; 10cd0 <fputs@plt+0x53c>
   10a8c:	add	r0, sp, #12
   10a90:	bl	10788 <sprintf@plt>
   10a94:	add	r2, sp, #12
   10a98:	ldr	r1, [pc, #580]	; 10ce4 <fputs@plt+0x550>
   10a9c:	add	r0, r6, #21
   10aa0:	bl	10788 <sprintf@plt>
   10aa4:	mov	r1, r4
   10aa8:	add	r0, r6, #28
   10aac:	add	r4, r6, r4
   10ab0:	bl	10e90 <fputs@plt+0x6fc>
   10ab4:	mov	r3, #36	; 0x24
   10ab8:	strb	r3, [r4, #28]
   10abc:	strb	r7, [r4, #29]
   10ac0:	add	r4, r6, #21
   10ac4:	b	10830 <fputs@plt+0x9c>
   10ac8:	cmp	r4, #0
   10acc:	moveq	r4, #16
   10ad0:	tst	r5, #64	; 0x40
   10ad4:	beq	10b54 <fputs@plt+0x3c0>
   10ad8:	cmp	r7, #0
   10adc:	beq	10b10 <fputs@plt+0x37c>
   10ae0:	cmp	r6, #0
   10ae4:	beq	109bc <fputs@plt+0x228>
   10ae8:	mov	r0, r6
   10aec:	bl	10704 <strlen@plt>
   10af0:	cmp	r0, #16
   10af4:	bhi	109bc <fputs@plt+0x228>
   10af8:	mov	r2, r6
   10afc:	ldr	r1, [pc, #484]	; 10ce8 <fputs@plt+0x554>
   10b00:	ldr	r0, [pc, #484]	; 10cec <fputs@plt+0x558>
   10b04:	bl	10788 <sprintf@plt>
   10b08:	ldr	r4, [pc, #476]	; 10cec <fputs@plt+0x558>
   10b0c:	b	10830 <fputs@plt+0x9c>
   10b10:	cmp	r4, #16
   10b14:	ldrgt	r0, [pc, #468]	; 10cf0 <fputs@plt+0x55c>
   10b18:	bgt	10978 <fputs@plt+0x1e4>
   10b1c:	ldr	r6, [pc, #424]	; 10ccc <fputs@plt+0x538>
   10b20:	mov	r1, r4
   10b24:	add	r4, r6, r4
   10b28:	mov	r9, #36	; 0x24
   10b2c:	mov	r3, #53	; 0x35
   10b30:	add	r0, r6, #55	; 0x37
   10b34:	strb	r9, [r6, #52]	; 0x34
   10b38:	strb	r3, [r6, #53]	; 0x35
   10b3c:	strb	r9, [r6, #54]	; 0x36
   10b40:	bl	10e90 <fputs@plt+0x6fc>
   10b44:	strb	r9, [r4, #55]	; 0x37
   10b48:	strb	r7, [r4, #56]	; 0x38
   10b4c:	add	r4, r6, #52	; 0x34
   10b50:	b	10830 <fputs@plt+0x9c>
   10b54:	cmp	r7, #0
   10b58:	beq	10b8c <fputs@plt+0x3f8>
   10b5c:	cmp	r6, #0
   10b60:	beq	109bc <fputs@plt+0x228>
   10b64:	mov	r0, r6
   10b68:	bl	10704 <strlen@plt>
   10b6c:	cmp	r0, #16
   10b70:	bhi	109bc <fputs@plt+0x228>
   10b74:	mov	r2, r6
   10b78:	ldr	r1, [pc, #372]	; 10cf4 <fputs@plt+0x560>
   10b7c:	ldr	r0, [pc, #372]	; 10cf8 <fputs@plt+0x564>
   10b80:	bl	10788 <sprintf@plt>
   10b84:	ldr	r4, [pc, #364]	; 10cf8 <fputs@plt+0x564>
   10b88:	b	10830 <fputs@plt+0x9c>
   10b8c:	cmp	r4, #16
   10b90:	ldrgt	r0, [pc, #356]	; 10cfc <fputs@plt+0x568>
   10b94:	bgt	10978 <fputs@plt+0x1e4>
   10b98:	ldr	r6, [pc, #300]	; 10ccc <fputs@plt+0x538>
   10b9c:	mov	r1, r4
   10ba0:	add	r4, r6, r4
   10ba4:	mov	r9, #36	; 0x24
   10ba8:	mov	r3, #54	; 0x36
   10bac:	add	r0, r6, #97	; 0x61
   10bb0:	strb	r9, [r6, #94]	; 0x5e
   10bb4:	strb	r3, [r6, #95]	; 0x5f
   10bb8:	strb	r9, [r6, #96]	; 0x60
   10bbc:	bl	10e90 <fputs@plt+0x6fc>
   10bc0:	strb	r9, [r4, #97]	; 0x61
   10bc4:	strb	r7, [r4, #98]	; 0x62
   10bc8:	add	r4, r6, #94	; 0x5e
   10bcc:	b	10830 <fputs@plt+0x9c>
   10bd0:	mov	r1, r4
   10bd4:	mov	r0, r8
   10bd8:	bl	1074c <rb_crypt@plt>
   10bdc:	mov	r5, r0
   10be0:	mov	r0, r5
   10be4:	bl	10758 <puts@plt>
   10be8:	mov	r0, #0
   10bec:	b	10854 <fputs@plt+0xc0>
   10bf0:	ldr	r0, [pc, #264]	; 10d00 <fputs@plt+0x56c>
   10bf4:	bl	106d4 <getpass@plt>
   10bf8:	mov	r1, r4
   10bfc:	bl	1074c <rb_crypt@plt>
   10c00:	cmp	r0, #0
   10c04:	bne	10c18 <fputs@plt+0x484>
   10c08:	ldr	r3, [pc, #96]	; 10c70 <fputs@plt+0x4dc>
   10c0c:	ldr	r0, [pc, #240]	; 10d04 <fputs@plt+0x570>
   10c10:	ldr	r1, [r3]
   10c14:	b	1084c <fputs@plt+0xb8>
   10c18:	bl	10740 <strdup@plt>
   10c1c:	mov	r6, r0
   10c20:	mov	r5, r0
   10c24:	ldr	r0, [pc, #220]	; 10d08 <fputs@plt+0x574>
   10c28:	bl	106d4 <getpass@plt>
   10c2c:	mov	r1, r4
   10c30:	bl	1074c <rb_crypt@plt>
   10c34:	subs	r1, r0, #0
   10c38:	beq	10c08 <fputs@plt+0x474>
   10c3c:	mov	r0, r6
   10c40:	bl	10770 <strcmp@plt>
   10c44:	cmp	r0, #0
   10c48:	beq	10be0 <fputs@plt+0x44c>
   10c4c:	ldr	r3, [pc, #28]	; 10c70 <fputs@plt+0x4dc>
   10c50:	ldr	r0, [pc, #180]	; 10d0c <fputs@plt+0x578>
   10c54:	ldr	r1, [r3]
   10c58:	b	1084c <fputs@plt+0xb8>
   10c5c:	andeq	r1, r1, r0, asr #6
   10c60:	andeq	r2, r2, r8, ror r0
   10c64:	andeq	r1, r1, r5, asr r3
   10c68:	andeq	r1, r1, r4, ror #6
   10c6c:	strdeq	r2, [r2], -r0
   10c70:	andeq	r2, r2, r0, ror r0
   10c74:	andeq	r1, r1, r2, lsl #9
   10c78:	andeq	r0, r1, sp, ror #31
   10c7c:	andeq	r1, r1, r9, lsr r0
   10c80:	andeq	r1, r1, r7, asr r0
   10c84:	andeq	r1, r1, r5, ror r0
   10c88:	muleq	r1, r1, r0
   10c8c:	strheq	r1, [r1], -r1	; <UNPREDICTABLE>
   10c90:	andeq	r1, r1, r7, ror #1
   10c94:	andeq	r1, r1, sp, lsl r1
   10c98:	andeq	r1, r1, r6, asr #2
   10c9c:	andeq	r1, r1, lr, ror r1
   10ca0:	muleq	r1, r7, r1
   10ca4:			; <UNDEFINED> instruction: 0x000111be
   10ca8:	andeq	r1, r1, r2, ror #3
   10cac:	andeq	r1, r1, r5, lsl #4
   10cb0:	andeq	r1, r1, r7, asr #4
   10cb4:	andeq	r1, r1, r7, lsl #5
   10cb8:	andeq	r1, r1, r7, asr #5
   10cbc:	andeq	r1, r1, r4, lsl #6
   10cc0:	andeq	r1, r1, sl, lsr #6
   10cc4:	andeq	r1, r1, fp, ror #6
   10cc8:	andeq	r1, r1, ip, lsr #7
   10ccc:	andeq	r2, r2, sp, ror r0
   10cd0:	andeq	r1, r1, r5, asr #7
   10cd4:	andeq	r1, r1, sl, asr #7
   10cd8:	andeq	r2, r2, r5, lsl #2
   10cdc:	ldrdeq	r1, [r1], -r5
   10ce0:	andeq	r1, r1, r6, lsl r4
   10ce4:	andeq	r1, r1, r4, lsr r4
   10ce8:	andeq	r1, r1, ip, lsr r4
   10cec:	andeq	r2, r2, r4, lsr #2
   10cf0:	andeq	r1, r1, r3, asr #8
   10cf4:	andeq	r1, r1, pc, asr r4
   10cf8:	andeq	r2, r2, r6, asr #1
   10cfc:	andeq	r1, r1, r6, ror #8
   10d00:	andeq	r1, r1, r1, lsr #9
   10d04:	andeq	r1, r1, sp, lsr #9
   10d08:	andeq	r1, r1, r0, asr #9
   10d0c:	andeq	r1, r1, r8, asr #9
   10d10:	mov	fp, #0
   10d14:	mov	lr, #0
   10d18:	pop	{r1}		; (ldr r1, [sp], #4)
   10d1c:	mov	r2, sp
   10d20:	push	{r2}		; (str r2, [sp, #-4]!)
   10d24:	push	{r0}		; (str r0, [sp, #-4]!)
   10d28:	ldr	ip, [pc, #16]	; 10d40 <fputs@plt+0x5ac>
   10d2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d30:	ldr	r0, [pc, #12]	; 10d44 <fputs@plt+0x5b0>
   10d34:	ldr	r3, [pc, #12]	; 10d48 <fputs@plt+0x5b4>
   10d38:	bl	106bc <__libc_start_main@plt>
   10d3c:	bl	106a4 <abort@plt>
   10d40:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   10d44:	andeq	r0, r1, r0, lsr #15
   10d48:	andeq	r0, r1, r0, lsr pc
   10d4c:	ldr	r3, [pc, #20]	; 10d68 <fputs@plt+0x5d4>
   10d50:	ldr	r2, [pc, #20]	; 10d6c <fputs@plt+0x5d8>
   10d54:	add	r3, pc, r3
   10d58:	ldr	r2, [r3, r2]
   10d5c:	cmp	r2, #0
   10d60:	bxeq	lr
   10d64:	b	106c8 <__gmon_start__@plt>
   10d68:	andeq	r1, r1, r4, lsr #5
   10d6c:	andeq	r0, r0, r4, rrx
   10d70:	ldr	r3, [pc, #28]	; 10d94 <fputs@plt+0x600>
   10d74:	ldr	r0, [pc, #28]	; 10d98 <fputs@plt+0x604>
   10d78:	sub	r3, r3, r0
   10d7c:	cmp	r3, #6
   10d80:	bxls	lr
   10d84:	ldr	r3, [pc, #16]	; 10d9c <fputs@plt+0x608>
   10d88:	cmp	r3, #0
   10d8c:	bxeq	lr
   10d90:	bx	r3
   10d94:	andeq	r2, r2, r3, ror r0
   10d98:	andeq	r2, r2, r0, ror r0
   10d9c:	andeq	r0, r0, r0
   10da0:	ldr	r1, [pc, #36]	; 10dcc <fputs@plt+0x638>
   10da4:	ldr	r0, [pc, #36]	; 10dd0 <fputs@plt+0x63c>
   10da8:	sub	r1, r1, r0
   10dac:	asr	r1, r1, #2
   10db0:	add	r1, r1, r1, lsr #31
   10db4:	asrs	r1, r1, #1
   10db8:	bxeq	lr
   10dbc:	ldr	r3, [pc, #16]	; 10dd4 <fputs@plt+0x640>
   10dc0:	cmp	r3, #0
   10dc4:	bxeq	lr
   10dc8:	bx	r3
   10dcc:	andeq	r2, r2, r0, ror r0
   10dd0:	andeq	r2, r2, r0, ror r0
   10dd4:	andeq	r0, r0, r0
   10dd8:	push	{r4, lr}
   10ddc:	ldr	r4, [pc, #24]	; 10dfc <fputs@plt+0x668>
   10de0:	ldrb	r3, [r4]
   10de4:	cmp	r3, #0
   10de8:	popne	{r4, pc}
   10dec:	bl	10d70 <fputs@plt+0x5dc>
   10df0:	mov	r3, #1
   10df4:	strb	r3, [r4]
   10df8:	pop	{r4, pc}
   10dfc:	andeq	r2, r2, ip, ror r0
   10e00:	ldr	r0, [pc, #40]	; 10e30 <fputs@plt+0x69c>
   10e04:	ldr	r3, [r0]
   10e08:	cmp	r3, #0
   10e0c:	bne	10e14 <fputs@plt+0x680>
   10e10:	b	10da0 <fputs@plt+0x60c>
   10e14:	ldr	r3, [pc, #24]	; 10e34 <fputs@plt+0x6a0>
   10e18:	cmp	r3, #0
   10e1c:	beq	10e10 <fputs@plt+0x67c>
   10e20:	push	{r4, lr}
   10e24:	blx	r3
   10e28:	pop	{r4, lr}
   10e2c:	b	10da0 <fputs@plt+0x60c>
   10e30:	strdeq	r1, [r2], -ip
   10e34:	andeq	r0, r0, r0
   10e38:	push	{r4, r5, r6, r7, r8, lr}
   10e3c:	mov	r4, r0
   10e40:	mov	r0, #0
   10e44:	mov	r6, r1
   10e48:	bl	10734 <time@plt>
   10e4c:	bl	106b0 <srand@plt>
   10e50:	ldr	r7, [pc, #52]	; 10e8c <fputs@plt+0x6f8>
   10e54:	mov	r5, r4
   10e58:	sub	r3, r5, r4
   10e5c:	cmp	r6, r3
   10e60:	bgt	10e6c <fputs@plt+0x6d8>
   10e64:	mov	r0, r4
   10e68:	pop	{r4, r5, r6, r7, r8, pc}
   10e6c:	bl	10764 <rand@plt>
   10e70:	rsbs	r3, r0, #0
   10e74:	and	r3, r3, #63	; 0x3f
   10e78:	and	r0, r0, #63	; 0x3f
   10e7c:	rsbpl	r0, r3, #0
   10e80:	ldrb	r3, [r7, r0]
   10e84:	strb	r3, [r5], #1
   10e88:	b	10e58 <fputs@plt+0x6c4>
   10e8c:	andeq	r0, r1, r0, lsr #31
   10e90:	push	{r4, r5, r6, r7, r8, lr}
   10e94:	mov	r4, r1
   10e98:	mov	r5, r0
   10e9c:	mov	r1, #0
   10ea0:	ldr	r0, [pc, #128]	; 10f28 <fputs@plt+0x794>
   10ea4:	bl	10698 <open@plt>
   10ea8:	mov	r1, r4
   10eac:	subs	r7, r0, #0
   10eb0:	bge	10ec0 <fputs@plt+0x72c>
   10eb4:	mov	r0, r5
   10eb8:	pop	{r4, r5, r6, r7, r8, lr}
   10ebc:	b	10e38 <fputs@plt+0x6a4>
   10ec0:	mov	r0, #1
   10ec4:	bl	106e0 <calloc@plt>
   10ec8:	mov	r2, r4
   10ecc:	mov	r1, r0
   10ed0:	mov	r6, r0
   10ed4:	mov	r0, r7
   10ed8:	bl	106f8 <read@plt>
   10edc:	cmp	r4, r0
   10ee0:	moveq	r3, #0
   10ee4:	ldreq	r1, [pc, #64]	; 10f2c <fputs@plt+0x798>
   10ee8:	beq	10f10 <fputs@plt+0x77c>
   10eec:	mov	r0, r6
   10ef0:	bl	106ec <free@plt>
   10ef4:	mov	r1, r4
   10ef8:	b	10eb4 <fputs@plt+0x720>
   10efc:	ldrb	r2, [r6, r3]
   10f00:	and	r2, r2, #63	; 0x3f
   10f04:	ldrb	r2, [r1, r2]
   10f08:	strb	r2, [r5, r3]
   10f0c:	add	r3, r3, #1
   10f10:	cmp	r3, r4
   10f14:	blt	10efc <fputs@plt+0x768>
   10f18:	mov	r0, r6
   10f1c:	bl	106ec <free@plt>
   10f20:	mov	r0, r5
   10f24:	pop	{r4, r5, r6, r7, r8, pc}
   10f28:	andeq	r0, r1, r1, ror #31
   10f2c:	andeq	r0, r1, r0, lsr #31
   10f30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f34:	mov	r7, r0
   10f38:	ldr	r6, [pc, #72]	; 10f88 <fputs@plt+0x7f4>
   10f3c:	ldr	r5, [pc, #72]	; 10f8c <fputs@plt+0x7f8>
   10f40:	add	r6, pc, r6
   10f44:	add	r5, pc, r5
   10f48:	sub	r6, r6, r5
   10f4c:	mov	r8, r1
   10f50:	mov	r9, r2
   10f54:	bl	10678 <open@plt-0x20>
   10f58:	asrs	r6, r6, #2
   10f5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f60:	mov	r4, #0
   10f64:	add	r4, r4, #1
   10f68:	ldr	r3, [r5], #4
   10f6c:	mov	r2, r9
   10f70:	mov	r1, r8
   10f74:	mov	r0, r7
   10f78:	blx	r3
   10f7c:	cmp	r6, r4
   10f80:	bne	10f64 <fputs@plt+0x7d0>
   10f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f88:			; <UNDEFINED> instruction: 0x00010fb0
   10f8c:	andeq	r0, r1, r8, lsr #31
   10f90:	bx	lr

Disassembly of section .fini:

00010f94 <.fini>:
   10f94:	push	{r3, lr}
   10f98:	pop	{r3, pc}
