
../repos/charybdis/modules/.libs/m_cap.so:     file format elf32-littlearm


Disassembly of section .init:

00000718 <_init>:
 718:	push	{r3, lr}
 71c:	bl	7e0 <call_weak_fn>
 720:	pop	{r3, pc}

Disassembly of section .plt:

00000724 <.plt>:
 724:	push	{lr}		; (str lr, [sp, #-4]!)
 728:	ldr	lr, [pc, #4]	; 734 <.plt+0x10>
 72c:	add	lr, pc, lr
 730:	ldr	pc, [lr, #8]!
 734:	.word	0x000118cc

00000738 <__cxa_finalize@plt>:
 738:	add	ip, pc, #0, 12
 73c:	add	ip, ip, #69632	; 0x11000
 740:	ldr	pc, [ip, #2252]!	; 0x8cc

00000744 <sendto_one@plt>:
 744:	add	ip, pc, #0, 12
 748:	add	ip, ip, #69632	; 0x11000
 74c:	ldr	pc, [ip, #2244]!	; 0x8c4

00000750 <rb_snprintf_try_append@plt>:
 750:	add	ip, pc, #0, 12
 754:	add	ip, ip, #69632	; 0x11000
 758:	ldr	pc, [ip, #2236]!	; 0x8bc

0000075c <rb_dictionary_foreach_start@plt>:
 75c:	add	ip, pc, #0, 12
 760:	add	ip, ip, #69632	; 0x11000
 764:	ldr	pc, [ip, #2228]!	; 0x8b4

00000768 <__gmon_start__@plt>:
 768:	add	ip, pc, #0, 12
 76c:	add	ip, ip, #69632	; 0x11000
 770:	ldr	pc, [ip, #2220]!	; 0x8ac

00000774 <strchr@plt>:
 774:	add	ip, pc, #0, 12
 778:	add	ip, ip, #69632	; 0x11000
 77c:	ldr	pc, [ip, #2212]!	; 0x8a4

00000780 <bsearch@plt>:
 780:	add	ip, pc, #0, 12
 784:	add	ip, ip, #69632	; 0x11000
 788:	ldr	pc, [ip, #2204]!	; 0x89c

0000078c <capability_find@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2196]!	; 0x894

00000798 <rb_dictionary_foreach_cur@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2188]!	; 0x88c

000007a4 <atoi@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2180]!	; 0x884

000007b0 <rb_strlcpy@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2172]!	; 0x87c

000007bc <register_local_user@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2164]!	; 0x874

000007c8 <rb_dictionary_foreach_next@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2156]!	; 0x86c

000007d4 <irccmp@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2148]!	; 0x864

Disassembly of section .text:

000007e0 <call_weak_fn>:
     7e0:	ldr	r3, [pc, #20]	; 7fc <call_weak_fn+0x1c>
     7e4:	ldr	r2, [pc, #20]	; 800 <call_weak_fn+0x20>
     7e8:	add	r3, pc, r3
     7ec:	ldr	r2, [r3, r2]
     7f0:	cmp	r2, #0
     7f4:	bxeq	lr
     7f8:	b	768 <__gmon_start__@plt>
     7fc:	.word	0x00011810
     800:	.word	0x0000004c

00000804 <deregister_tm_clones>:
     804:	ldr	r0, [pc, #44]	; 838 <deregister_tm_clones+0x34>
     808:	ldr	r3, [pc, #44]	; 83c <deregister_tm_clones+0x38>
     80c:	add	r0, pc, r0
     810:	add	r3, pc, r3
     814:	cmp	r3, r0
     818:	ldr	r3, [pc, #32]	; 840 <deregister_tm_clones+0x3c>
     81c:	add	r3, pc, r3
     820:	bxeq	lr
     824:	ldr	r2, [pc, #24]	; 844 <deregister_tm_clones+0x40>
     828:	ldr	r3, [r3, r2]
     82c:	cmp	r3, #0
     830:	bxeq	lr
     834:	bx	r3
     838:	.word	0x000118f0
     83c:	.word	0x000118ec
     840:	.word	0x000117dc
     844:	.word	0x00000048

00000848 <register_tm_clones>:
     848:	ldr	r0, [pc, #56]	; 888 <register_tm_clones+0x40>
     84c:	ldr	r3, [pc, #56]	; 88c <register_tm_clones+0x44>
     850:	add	r0, pc, r0
     854:	add	r3, pc, r3
     858:	sub	r1, r3, r0
     85c:	ldr	r3, [pc, #44]	; 890 <register_tm_clones+0x48>
     860:	asr	r1, r1, #2
     864:	add	r3, pc, r3
     868:	add	r1, r1, r1, lsr #31
     86c:	asrs	r1, r1, #1
     870:	bxeq	lr
     874:	ldr	r2, [pc, #24]	; 894 <register_tm_clones+0x4c>
     878:	ldr	r3, [r3, r2]
     87c:	cmp	r3, #0
     880:	bxeq	lr
     884:	bx	r3
     888:	.word	0x000118ac
     88c:	.word	0x000118a8
     890:	.word	0x00011794
     894:	.word	0x0000005c

00000898 <__do_global_dtors_aux>:
     898:	ldr	r3, [pc, #76]	; 8ec <__do_global_dtors_aux+0x54>
     89c:	ldr	r2, [pc, #76]	; 8f0 <__do_global_dtors_aux+0x58>
     8a0:	add	r3, pc, r3
     8a4:	add	r2, pc, r2
     8a8:	ldrb	r3, [r3]
     8ac:	cmp	r3, #0
     8b0:	bxne	lr
     8b4:	ldr	r3, [pc, #56]	; 8f4 <__do_global_dtors_aux+0x5c>
     8b8:	push	{r4, lr}
     8bc:	ldr	r3, [r2, r3]
     8c0:	cmp	r3, #0
     8c4:	beq	8d4 <__do_global_dtors_aux+0x3c>
     8c8:	ldr	r3, [pc, #40]	; 8f8 <__do_global_dtors_aux+0x60>
     8cc:	ldr	r0, [pc, r3]
     8d0:	bl	738 <__cxa_finalize@plt>
     8d4:	bl	804 <deregister_tm_clones>
     8d8:	ldr	r3, [pc, #28]	; 8fc <__do_global_dtors_aux+0x64>
     8dc:	mov	r2, #1
     8e0:	add	r3, pc, r3
     8e4:	strb	r2, [r3]
     8e8:	pop	{r4, pc}
     8ec:	.word	0x0001185c
     8f0:	.word	0x00011754
     8f4:	.word	0x00000044
     8f8:	.word	0x00011790
     8fc:	.word	0x0001181c

00000900 <frame_dummy>:
     900:	b	848 <register_tm_clones>

00000904 <m_cap>:
     904:	push	{r4, r5, fp, lr}
     908:	add	fp, sp, #8
     90c:	sub	sp, sp, #8
     910:	mov	r4, r2
     914:	ldr	r5, [fp, #8]
     918:	ldr	r0, [r5, #4]
     91c:	ldr	r1, [pc, #124]	; 9a0 <m_cap+0x9c>
     920:	add	r1, pc, r1
     924:	str	r1, [sp]
     928:	ldr	r1, [pc, #116]	; 9a4 <m_cap+0xa0>
     92c:	add	r1, pc, r1
     930:	mov	r2, #5
     934:	mov	r3, #8
     938:	bl	780 <bsearch@plt>
     93c:	cmp	r0, #0
     940:	beq	95c <m_cap+0x58>
     944:	ldr	r2, [r0, #4]
     948:	ldr	r1, [r5, #8]
     94c:	mov	r0, r4
     950:	sub	sp, fp, #8
     954:	pop	{r4, r5, fp, lr}
     958:	bx	r2
     95c:	mov	r0, r4
     960:	ldrb	r1, [r0, #88]!	; 0x58
     964:	ldr	r2, [r5, #4]
     968:	str	r2, [sp]
     96c:	ldr	r3, [pc, #52]	; 9a8 <m_cap+0xa4>
     970:	add	r3, pc, r3
     974:	cmp	r1, #0
     978:	movne	r3, r0
     97c:	ldr	r0, [pc, #40]	; 9ac <m_cap+0xa8>
     980:	ldr	r0, [pc, r0]
     984:	add	r2, r0, #88	; 0x58
     988:	ldr	r1, [pc, #32]	; 9b0 <m_cap+0xac>
     98c:	add	r1, pc, r1
     990:	mov	r0, r4
     994:	bl	744 <sendto_one@plt>
     998:	sub	sp, fp, #8
     99c:	pop	{r4, r5, fp, pc}
     9a0:	.word	0x0000008c
     9a4:	.word	0x000117a8
     9a8:	.word	0x00000ac6
     9ac:	.word	0x000116d8
     9b0:	.word	0x00000a84

000009b4 <clicap_cmd_search>:
     9b4:	ldr	r1, [r1]
     9b8:	b	7d4 <irccmp@plt>

000009bc <cap_ack>:
     9bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
     9c0:	add	fp, sp, #24
     9c4:	sub	sp, sp, #8
     9c8:	mov	r4, r0
     9cc:	mov	r0, #0
     9d0:	str	r0, [sp, #4]
     9d4:	cmp	r1, #0
     9d8:	ldrbne	r0, [r1]
     9dc:	cmpne	r0, #0
     9e0:	bne	9ec <cap_ack+0x30>
     9e4:	sub	sp, fp, #24
     9e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     9ec:	mov	r3, sp
     9f0:	add	r2, sp, #4
     9f4:	mov	r0, r1
     9f8:	mov	r1, r3
     9fc:	bl	f50 <clicap_find>
     a00:	ldr	r2, [r4, #432]	; 0x1b0
     a04:	ldr	r1, [r2, #296]!	; 0x128
     a08:	cmp	r0, #0
     a0c:	beq	a84 <cap_ack+0xc8>
     a10:	mov	r9, #0
     a14:	mov	r7, #1
     a18:	mov	r5, sp
     a1c:	add	r6, sp, #4
     a20:	mov	r8, #0
     a24:	ldr	r2, [r0, #4]
     a28:	tst	r1, r7, lsl r2
     a2c:	beq	a5c <cap_ack+0xa0>
     a30:	lsl	r1, r7, r2
     a34:	ldr	r2, [sp]
     a38:	cmp	r2, #0
     a3c:	beq	a58 <cap_ack+0x9c>
     a40:	ldr	r0, [r0, #12]
     a44:	cmp	r0, #0
     a48:	ldrbne	r0, [r0, #8]
     a4c:	tstne	r0, #1
     a50:	orreq	r9, r1, r9
     a54:	b	a5c <cap_ack+0xa0>
     a58:	orr	r8, r1, r8
     a5c:	mov	r0, #0
     a60:	mov	r1, r5
     a64:	mov	r2, r6
     a68:	bl	f50 <clicap_find>
     a6c:	ldr	r2, [r4, #432]	; 0x1b0
     a70:	ldr	r1, [r2, #296]	; 0x128
     a74:	cmp	r0, #0
     a78:	bne	a24 <cap_ack+0x68>
     a7c:	add	r2, r2, #296	; 0x128
     a80:	b	a8c <cap_ack+0xd0>
     a84:	mov	r8, #0
     a88:	mov	r9, #0
     a8c:	orr	r0, r1, r8
     a90:	bic	r0, r0, r9
     a94:	str	r0, [r2]
     a98:	sub	sp, fp, #24
     a9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00000aa0 <cap_end>:
     aa0:	ldrh	r1, [r0, #80]	; 0x50
     aa4:	cmp	r1, #9
     aa8:	bcc	ab4 <cap_end+0x14>
     aac:	cmp	r1, #16
     ab0:	bxne	lr
     ab4:	ldr	r1, [r0, #64]	; 0x40
     ab8:	bic	r2, r1, #16
     abc:	str	r2, [r0, #64]	; 0x40
     ac0:	tst	r1, #8
     ac4:	ldrbne	r1, [r0, #88]	; 0x58
     ac8:	cmpne	r1, #0
     acc:	bne	ad4 <cap_end+0x34>
     ad0:	bx	lr
     ad4:	mov	r1, r0
     ad8:	b	7bc <register_local_user@plt>

00000adc <cap_list>:
     adc:	ldr	r1, [r0, #432]	; 0x1b0
     ae0:	ldr	r2, [r1, #296]	; 0x128
     ae4:	cmp	r2, #0
     ae8:	mvneq	r2, #0
     aec:	ldr	r1, [pc, #4]	; af8 <cap_list+0x1c>
     af0:	add	r1, pc, r1
     af4:	b	10f4 <clicap_generate>
     af8:	.word	0x0000094c

00000afc <cap_ls>:
     afc:	push	{r4, sl, fp, lr}
     b00:	add	fp, sp, #8
     b04:	mov	r4, r0
     b08:	ldrh	r0, [r0, #80]	; 0x50
     b0c:	cmp	r0, #9
     b10:	bcc	b1c <cap_ls+0x20>
     b14:	cmp	r0, #16
     b18:	bne	b28 <cap_ls+0x2c>
     b1c:	ldr	r0, [r4, #64]	; 0x40
     b20:	orr	r0, r0, #16
     b24:	str	r0, [r4, #64]	; 0x40
     b28:	cmp	r1, #0
     b2c:	ldrbne	r0, [r1]
     b30:	cmpne	r0, #0
     b34:	bne	b50 <cap_ls+0x54>
     b38:	ldr	r1, [pc, #84]	; b94 <cap_ls+0x98>
     b3c:	add	r1, pc, r1
     b40:	mov	r0, r4
     b44:	mov	r2, #0
     b48:	pop	{r4, sl, fp, lr}
     b4c:	b	10f4 <clicap_generate>
     b50:	mov	r0, r1
     b54:	bl	7a4 <atoi@plt>
     b58:	movw	r1, #302	; 0x12e
     b5c:	cmp	r0, r1
     b60:	blt	b38 <cap_ls+0x3c>
     b64:	ldr	r0, [r4, #64]	; 0x40
     b68:	ldr	r1, [r4, #432]	; 0x1b0
     b6c:	orr	r0, r0, #524288	; 0x80000
     b70:	str	r0, [r4, #64]	; 0x40
     b74:	ldr	r0, [pc, #20]	; b90 <cap_ls+0x94>
     b78:	ldr	r0, [pc, r0]
     b7c:	ldr	r0, [r0]
     b80:	ldr	r2, [r1, #296]	; 0x128
     b84:	orr	r0, r2, r0
     b88:	str	r0, [r1, #296]	; 0x128
     b8c:	b	b38 <cap_ls+0x3c>
     b90:	.word	0x000114d8
     b94:	.word	0x00000905

00000b98 <cap_req>:
     b98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     b9c:	add	fp, sp, #28
     ba0:	sub	sp, sp, #44	; 0x2c
     ba4:	mov	r6, r1
     ba8:	mov	r1, r0
     bac:	mov	r0, #0
     bb0:	str	r0, [fp, #-32]	; 0xffffffe0
     bb4:	ldrh	r0, [r1, #80]	; 0x50
     bb8:	cmp	r0, #9
     bbc:	bcc	bc8 <cap_req+0x30>
     bc0:	cmp	r0, #16
     bc4:	bne	bd4 <cap_req+0x3c>
     bc8:	ldr	r0, [r1, #64]	; 0x40
     bcc:	orr	r0, r0, #16
     bd0:	str	r0, [r1, #64]	; 0x40
     bd4:	cmp	r6, #0
     bd8:	ldrbne	r0, [r6]
     bdc:	cmpne	r0, #0
     be0:	bne	bec <cap_req+0x54>
     be4:	sub	sp, fp, #28
     be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     bec:	ldr	r0, [pc, #772]	; ef8 <cap_req+0x360>
     bf0:	add	r0, pc, r0
     bf4:	mov	r4, #0
     bf8:	strb	r4, [r0]
     bfc:	str	r1, [sp, #20]
     c00:	mov	r2, r1
     c04:	ldrb	r1, [r2, #88]!	; 0x58
     c08:	ldr	r3, [pc, #748]	; efc <cap_req+0x364>
     c0c:	add	r3, pc, r3
     c10:	cmp	r1, #0
     c14:	str	r2, [sp, #12]
     c18:	mov	r1, r2
     c1c:	moveq	r1, r3
     c20:	str	r1, [sp]
     c24:	ldr	r1, [pc, #724]	; f00 <cap_req+0x368>
     c28:	ldr	r1, [pc, r1]
     c2c:	add	r3, r1, #88	; 0x58
     c30:	ldr	r2, [pc, #716]	; f04 <cap_req+0x36c>
     c34:	add	r2, pc, r2
     c38:	movw	r1, #511	; 0x1ff
     c3c:	str	r3, [sp, #8]
     c40:	bl	750 <rb_snprintf_try_append@plt>
     c44:	mov	r5, r0
     c48:	ldr	r0, [pc, #696]	; f08 <cap_req+0x370>
     c4c:	add	r0, pc, r0
     c50:	strb	r4, [r0]
     c54:	strb	r4, [r0, #511]	; 0x1ff
     c58:	add	r1, sp, #36	; 0x24
     c5c:	sub	r2, fp, #32
     c60:	str	r6, [sp, #16]
     c64:	mov	r0, r6
     c68:	bl	f50 <clicap_find>
     c6c:	mov	r6, r0
     c70:	cmp	r0, #0
     c74:	mov	r0, #0
     c78:	str	r0, [sp, #24]
     c7c:	mov	r0, #0
     c80:	str	r0, [sp, #28]
     c84:	beq	df8 <cap_req+0x260>
     c88:	movw	r0, #507	; 0x1fb
     c8c:	sub	r7, r0, r5
     c90:	ldr	r0, [sp, #20]
     c94:	add	r0, r0, #64	; 0x40
     c98:	str	r0, [sp, #32]
     c9c:	mov	r0, #0
     ca0:	str	r0, [sp, #28]
     ca4:	mov	r0, #0
     ca8:	str	r0, [sp, #24]
     cac:	mov	r5, #0
     cb0:	ldr	r0, [sp, #36]	; 0x24
     cb4:	cmp	r0, #0
     cb8:	beq	cf0 <cap_req+0x158>
     cbc:	ldr	r0, [r6, #12]
     cc0:	cmp	r0, #0
     cc4:	ldrbne	r0, [r0, #8]
     cc8:	tstne	r0, #1
     ccc:	bne	e6c <cap_req+0x2d4>
     cd0:	ldr	r0, [r6, #4]
     cd4:	ldr	r1, [sp, #28]
     cd8:	mov	r2, #1
     cdc:	orr	r1, r1, r2, lsl r0
     ce0:	str	r1, [sp, #28]
     ce4:	ldr	r8, [pc, #544]	; f0c <cap_req+0x374>
     ce8:	add	r8, pc, r8
     cec:	b	d20 <cap_req+0x188>
     cf0:	ldr	r0, [sp, #20]
     cf4:	mov	r1, r6
     cf8:	bl	13c4 <clicap_visible>
     cfc:	cmp	r0, #0
     d00:	beq	e6c <cap_req+0x2d4>
     d04:	ldr	r0, [r6, #4]
     d08:	ldr	r1, [sp, #24]
     d0c:	mov	r2, #1
     d10:	orr	r1, r1, r2, lsl r0
     d14:	str	r1, [sp, #24]
     d18:	ldr	r8, [pc, #496]	; f10 <cap_req+0x378>
     d1c:	add	r8, pc, r8
     d20:	ldr	r0, [r6, #12]
     d24:	cmp	r0, #0
     d28:	beq	d40 <cap_req+0x1a8>
     d2c:	ldrb	r0, [r0, #8]
     d30:	tst	r0, #2
     d34:	ldr	r0, [pc, #472]	; f14 <cap_req+0x37c>
     d38:	add	r0, pc, r0
     d3c:	movne	r8, r0
     d40:	rsb	r0, r5, r5, lsl #9
     d44:	ldr	r1, [pc, #460]	; f18 <cap_req+0x380>
     d48:	add	r1, pc, r1
     d4c:	add	sl, r1, r0
     d50:	mov	r9, #0
     d54:	ldrb	r0, [sl]
     d58:	ldr	r1, [r6]
     d5c:	str	r8, [sp]
     d60:	str	r1, [sp, #4]
     d64:	cmp	r0, #0
     d68:	ldr	r3, [pc, #428]	; f1c <cap_req+0x384>
     d6c:	add	r3, pc, r3
     d70:	ldr	r0, [pc, #424]	; f20 <cap_req+0x388>
     d74:	add	r0, pc, r0
     d78:	moveq	r3, r0
     d7c:	mov	r0, sl
     d80:	mov	r1, r7
     d84:	ldr	r2, [pc, #408]	; f24 <cap_req+0x38c>
     d88:	add	r2, pc, r2
     d8c:	bl	750 <rb_snprintf_try_append@plt>
     d90:	add	r4, r5, r9
     d94:	cmn	r0, #1
     d98:	bgt	dd8 <cap_req+0x240>
     d9c:	ldrb	r0, [sl]
     da0:	cmp	r0, #0
     da4:	beq	dd8 <cap_req+0x240>
     da8:	cmp	r4, #1
     dac:	bgt	dd8 <cap_req+0x240>
     db0:	ldr	r0, [sp, #32]
     db4:	ldr	r0, [r0]
     db8:	ands	r0, r0, #524288	; 0x80000
     dbc:	beq	dd8 <cap_req+0x240>
     dc0:	mov	r0, #0
     dc4:	strb	r0, [sl, #511]!	; 0x1ff
     dc8:	add	r9, r9, #1
     dcc:	cmp	r9, #2
     dd0:	bcc	d54 <cap_req+0x1bc>
     dd4:	add	r4, r5, r9
     dd8:	mov	r0, #0
     ddc:	add	r1, sp, #36	; 0x24
     de0:	sub	r2, fp, #32
     de4:	bl	f50 <clicap_find>
     de8:	mov	r6, r0
     dec:	cmp	r0, #0
     df0:	mov	r5, r4
     df4:	bne	cb0 <cap_req+0x118>
     df8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dfc:	cmp	r0, #0
     e00:	beq	e74 <cap_req+0x2dc>
     e04:	cmp	r4, #0
     e08:	ldr	r4, [sp, #20]
     e0c:	ldr	r0, [pc, #284]	; f30 <cap_req+0x398>
     e10:	add	r0, pc, r0
     e14:	beq	eb0 <cap_req+0x318>
     e18:	mov	r7, r0
     e1c:	str	r0, [sp]
     e20:	ldr	r5, [pc, #268]	; f34 <cap_req+0x39c>
     e24:	add	r5, pc, r5
     e28:	ldr	r6, [pc, #264]	; f38 <cap_req+0x3a0>
     e2c:	add	r6, pc, r6
     e30:	ldr	r3, [pc, #260]	; f3c <cap_req+0x3a4>
     e34:	add	r3, pc, r3
     e38:	mov	r0, r4
     e3c:	mov	r1, r5
     e40:	mov	r2, r6
     e44:	bl	744 <sendto_one@plt>
     e48:	movw	r0, #511	; 0x1ff
     e4c:	add	r0, r7, r0
     e50:	str	r0, [sp]
     e54:	ldr	r3, [pc, #228]	; f40 <cap_req+0x3a8>
     e58:	add	r3, pc, r3
     e5c:	mov	r0, r4
     e60:	mov	r1, r5
     e64:	mov	r2, r6
     e68:	b	ed0 <cap_req+0x338>
     e6c:	mov	r0, #0
     e70:	str	r0, [fp, #-32]	; 0xffffffe0
     e74:	ldr	r0, [sp, #20]
     e78:	ldrb	r1, [r0, #88]	; 0x58
     e7c:	ldr	r2, [sp, #16]
     e80:	str	r2, [sp]
     e84:	cmp	r1, #0
     e88:	ldr	r3, [sp, #12]
     e8c:	ldr	r1, [pc, #148]	; f28 <cap_req+0x390>
     e90:	add	r1, pc, r1
     e94:	moveq	r3, r1
     e98:	ldr	r1, [pc, #140]	; f2c <cap_req+0x394>
     e9c:	add	r1, pc, r1
     ea0:	ldr	r2, [sp, #8]
     ea4:	bl	744 <sendto_one@plt>
     ea8:	sub	sp, fp, #28
     eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     eb0:	str	r0, [sp]
     eb4:	ldr	r1, [pc, #136]	; f44 <cap_req+0x3ac>
     eb8:	add	r1, pc, r1
     ebc:	ldr	r2, [pc, #132]	; f48 <cap_req+0x3b0>
     ec0:	add	r2, pc, r2
     ec4:	ldr	r3, [pc, #128]	; f4c <cap_req+0x3b4>
     ec8:	add	r3, pc, r3
     ecc:	mov	r0, r4
     ed0:	bl	744 <sendto_one@plt>
     ed4:	ldr	r0, [r4, #432]	; 0x1b0
     ed8:	ldr	r1, [r0, #296]	; 0x128
     edc:	ldr	r2, [sp, #24]
     ee0:	orr	r1, r1, r2
     ee4:	ldr	r2, [sp, #28]
     ee8:	bic	r1, r1, r2
     eec:	str	r1, [r0, #296]	; 0x128
     ef0:	sub	sp, fp, #28
     ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     ef8:	.word	0x00011b12
     efc:	.word	0x0000082a
     f00:	.word	0x00011430
     f04:	.word	0x00000834
     f08:	.word	0x00011cb5
     f0c:	.word	0x0000078f
     f10:	.word	0x00000749
     f14:	.word	0x00000741
     f18:	.word	0x00011bb9
     f1c:	.word	0x000006f8
     f20:	.word	0x000006f1
     f24:	.word	0x000006d5
     f28:	.word	0x000005a6
     f2c:	.word	0x000005df
     f30:	.word	0x00011af1
     f34:	.word	0x00000639
     f38:	.word	0x000118d6
     f3c:	.word	0x00000614
     f40:	.word	0x000005f2
     f44:	.word	0x000005a5
     f48:	.word	0x00011842
     f4c:	.word	0x00000582

00000f50 <clicap_find>:
     f50:	push	{r4, r5, r6, r7, fp, lr}
     f54:	add	fp, sp, #16
     f58:	mov	r4, r2
     f5c:	mov	r5, r1
     f60:	mov	r6, #0
     f64:	str	r6, [r1]
     f68:	cmp	r0, #0
     f6c:	beq	f94 <clicap_find+0x44>
     f70:	mov	r1, r0
     f74:	ldr	r7, [pc, #340]	; 10d0 <clicap_find+0x180>
     f78:	add	r7, pc, r7
     f7c:	mov	r0, r7
     f80:	mov	r2, #512	; 0x200
     f84:	bl	7b0 <rb_strlcpy@plt>
     f88:	ldr	r0, [pc, #324]	; 10d4 <clicap_find+0x184>
     f8c:	add	r0, pc, r0
     f90:	str	r7, [r0]
     f94:	ldr	r0, [r4]
     f98:	cmp	r0, #0
     f9c:	beq	fa8 <clicap_find+0x58>
     fa0:	mov	r0, r6
     fa4:	pop	{r4, r5, r6, r7, fp, pc}
     fa8:	ldr	r1, [pc, #296]	; 10d8 <clicap_find+0x188>
     fac:	ldr	r1, [pc, r1]
     fb0:	ldrb	r0, [r1]
     fb4:	cmp	r0, #0
     fb8:	beq	ff4 <clicap_find+0xa4>
     fbc:	add	r1, r1, #1
     fc0:	ldr	r2, [pc, #276]	; 10dc <clicap_find+0x18c>
     fc4:	ldr	r2, [pc, r2]
     fc8:	ldr	r3, [pc, #272]	; 10e0 <clicap_find+0x190>
     fcc:	add	r3, pc, r3
     fd0:	uxtb	r7, r0
     fd4:	ldrb	r7, [r2, r7, lsl #2]
     fd8:	tst	r7, #32
     fdc:	beq	1004 <clicap_find+0xb4>
     fe0:	str	r1, [r3]
     fe4:	ldrb	r0, [r1], #1
     fe8:	cmp	r0, #0
     fec:	bne	fd0 <clicap_find+0x80>
     ff0:	b	1024 <clicap_find+0xd4>
     ff4:	mov	r0, #0
     ff8:	cmp	r1, #0
     ffc:	bne	1010 <clicap_find+0xc0>
    1000:	b	1024 <clicap_find+0xd4>
    1004:	sub	r1, r1, #1
    1008:	cmp	r1, #0
    100c:	beq	1024 <clicap_find+0xd4>
    1010:	uxtb	r0, r0
    1014:	cmp	r0, #45	; 0x2d
    1018:	beq	1038 <clicap_find+0xe8>
    101c:	cmp	r0, #0
    1020:	bne	105c <clicap_find+0x10c>
    1024:	mov	r0, #1
    1028:	str	r0, [r4]
    102c:	mov	r6, #0
    1030:	mov	r0, r6
    1034:	pop	{r4, r5, r6, r7, fp, pc}
    1038:	mov	r0, #1
    103c:	str	r0, [r5]
    1040:	add	r0, r1, #1
    1044:	ldr	r2, [pc, #152]	; 10e4 <clicap_find+0x194>
    1048:	add	r2, pc, r2
    104c:	str	r0, [r2]
    1050:	ldrb	r0, [r1, #1]
    1054:	cmp	r0, #0
    1058:	beq	102c <clicap_find+0xdc>
    105c:	ldr	r5, [pc, #132]	; 10e8 <clicap_find+0x198>
    1060:	ldr	r5, [pc, r5]
    1064:	mov	r0, r5
    1068:	mov	r1, #32
    106c:	bl	774 <strchr@plt>
    1070:	mov	r6, #0
    1074:	cmp	r0, #0
    1078:	mov	r7, #0
    107c:	movne	r1, #0
    1080:	strbne	r1, [r0], #1
    1084:	movne	r7, r0
    1088:	ldr	r0, [pc, #92]	; 10ec <clicap_find+0x19c>
    108c:	ldr	r0, [pc, r0]
    1090:	ldr	r0, [r0]
    1094:	mov	r1, r5
    1098:	bl	78c <capability_find@plt>
    109c:	cmp	r0, #0
    10a0:	beq	fa0 <clicap_find+0x50>
    10a4:	cmp	r7, #0
    10a8:	beq	10bc <clicap_find+0x16c>
    10ac:	ldr	r1, [pc, #60]	; 10f0 <clicap_find+0x1a0>
    10b0:	add	r1, pc, r1
    10b4:	str	r7, [r1]
    10b8:	b	10c4 <clicap_find+0x174>
    10bc:	mov	r1, #1
    10c0:	str	r1, [r4]
    10c4:	mov	r6, r0
    10c8:	mov	r0, r6
    10cc:	pop	{r4, r5, r6, r7, fp, pc}
    10d0:	.word	0x00011188
    10d4:	.word	0x00011374
    10d8:	.word	0x00011354
    10dc:	.word	0x00011088
    10e0:	.word	0x00011334
    10e4:	.word	0x000112b8
    10e8:	.word	0x000112a0
    10ec:	.word	0x00010fbc
    10f0:	.word	0x00011250

000010f4 <clicap_generate>:
    10f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    10f8:	add	fp, sp, #28
    10fc:	sub	sp, sp, #28
    1100:	mov	r4, r2
    1104:	mov	r3, r0
    1108:	ldr	r0, [pc, #616]	; 1378 <clicap_generate+0x284>
    110c:	add	r0, pc, r0
    1110:	mov	r2, #0
    1114:	strb	r2, [r0]
    1118:	str	r3, [sp, #16]
    111c:	mov	r2, r3
    1120:	ldrb	r3, [r2, #88]!	; 0x58
    1124:	ldr	r7, [pc, #592]	; 137c <clicap_generate+0x288>
    1128:	add	r7, pc, r7
    112c:	cmp	r3, #0
    1130:	movne	r7, r2
    1134:	str	r7, [sp]
    1138:	str	r1, [sp, #4]
    113c:	ldr	r1, [pc, #572]	; 1380 <clicap_generate+0x28c>
    1140:	ldr	r1, [pc, r1]
    1144:	add	r3, r1, #88	; 0x58
    1148:	ldr	r2, [pc, #564]	; 1384 <clicap_generate+0x290>
    114c:	add	r2, pc, r2
    1150:	movw	r1, #511	; 0x1ff
    1154:	bl	750 <rb_snprintf_try_append@plt>
    1158:	str	r4, [sp, #12]
    115c:	cmn	r4, #1
    1160:	beq	1350 <clicap_generate+0x25c>
    1164:	mov	r7, r0
    1168:	cmn	r0, #1
    116c:	ble	1350 <clicap_generate+0x25c>
    1170:	ldr	r6, [pc, #532]	; 138c <clicap_generate+0x298>
    1174:	add	r6, pc, r6
    1178:	mov	r0, #0
    117c:	strb	r0, [r6]
    1180:	ldr	r4, [pc, #520]	; 1390 <clicap_generate+0x29c>
    1184:	ldr	r4, [pc, r4]
    1188:	ldr	r0, [r4]
    118c:	ldr	r0, [r0, #4]
    1190:	add	r5, sp, #20
    1194:	mov	r1, r5
    1198:	bl	75c <rb_dictionary_foreach_start@plt>
    119c:	ldr	r0, [r4]
    11a0:	ldr	r0, [r0, #4]
    11a4:	mov	r1, r5
    11a8:	bl	798 <rb_dictionary_foreach_cur@plt>
    11ac:	cmp	r0, #0
    11b0:	beq	1340 <clicap_generate+0x24c>
    11b4:	mov	r5, r0
    11b8:	movw	r0, #507	; 0x1fb
    11bc:	sub	r7, r0, r7
    11c0:	ldr	r0, [sp, #16]
    11c4:	add	r9, r0, #64	; 0x40
    11c8:	b	11f0 <clicap_generate+0xfc>
    11cc:	ldr	r1, [r4, #4]
    11d0:	cmp	r1, #0
    11d4:	beq	11e8 <clicap_generate+0xf4>
    11d8:	ldr	r0, [sp, #16]
    11dc:	blx	r1
    11e0:	mov	r8, r0
    11e4:	b	1258 <clicap_generate+0x164>
    11e8:	mov	r8, #0
    11ec:	b	1258 <clicap_generate+0x164>
    11f0:	ldr	r4, [r5, #12]
    11f4:	ldr	r0, [sp, #12]
    11f8:	cmp	r0, #0
    11fc:	beq	121c <clicap_generate+0x128>
    1200:	ldr	r0, [r5, #4]
    1204:	ldr	r1, [sp, #16]
    1208:	ldr	r1, [r1, #432]	; 0x1b0
    120c:	ldr	r1, [r1, #296]	; 0x128
    1210:	mov	r2, #1
    1214:	tst	r1, r2, lsl r0
    1218:	beq	1304 <clicap_generate+0x210>
    121c:	ldr	r0, [sp, #16]
    1220:	mov	r1, r5
    1224:	bl	13c4 <clicap_visible>
    1228:	cmp	r0, #0
    122c:	beq	1304 <clicap_generate+0x210>
    1230:	mov	sl, #0
    1234:	ldr	r0, [sp, #12]
    1238:	cmp	r0, #0
    123c:	mov	r8, #0
    1240:	bne	1258 <clicap_generate+0x164>
    1244:	mov	r8, #0
    1248:	cmp	r4, #0
    124c:	ldrne	r0, [r9]
    1250:	andsne	r0, r0, #524288	; 0x80000
    1254:	bne	11cc <clicap_generate+0xd8>
    1258:	cmp	r8, #0
    125c:	ldr	r1, [pc, #304]	; 1394 <clicap_generate+0x2a0>
    1260:	add	r1, pc, r1
    1264:	mov	r4, r1
    1268:	ldr	r0, [pc, #296]	; 1398 <clicap_generate+0x2a4>
    126c:	add	r0, pc, r0
    1270:	movne	r4, r0
    1274:	moveq	r8, r1
    1278:	ldrb	r0, [r6]
    127c:	ldr	r1, [r5]
    1280:	stm	sp, {r1, r4, r8}
    1284:	cmp	r0, #0
    1288:	ldr	r3, [pc, #268]	; 139c <clicap_generate+0x2a8>
    128c:	add	r3, pc, r3
    1290:	ldr	r0, [pc, #264]	; 13a0 <clicap_generate+0x2ac>
    1294:	add	r0, pc, r0
    1298:	moveq	r3, r0
    129c:	mov	r0, r6
    12a0:	mov	r1, r7
    12a4:	ldr	r2, [pc, #248]	; 13a4 <clicap_generate+0x2b0>
    12a8:	add	r2, pc, r2
    12ac:	bl	750 <rb_snprintf_try_append@plt>
    12b0:	cmn	r0, #1
    12b4:	bgt	1304 <clicap_generate+0x210>
    12b8:	ldrb	r0, [r6]
    12bc:	cmp	r0, #0
    12c0:	ldrbne	r0, [r9, #2]
    12c4:	tstne	r0, #8
    12c8:	beq	1304 <clicap_generate+0x210>
    12cc:	str	r6, [sp]
    12d0:	ldr	r0, [sp, #16]
    12d4:	ldr	r1, [pc, #204]	; 13a8 <clicap_generate+0x2b4>
    12d8:	add	r1, pc, r1
    12dc:	ldr	r2, [pc, #200]	; 13ac <clicap_generate+0x2b8>
    12e0:	add	r2, pc, r2
    12e4:	ldr	r3, [pc, #196]	; 13b0 <clicap_generate+0x2bc>
    12e8:	add	r3, pc, r3
    12ec:	bl	744 <sendto_one@plt>
    12f0:	mov	r0, #0
    12f4:	strb	r0, [r6]
    12f8:	add	sl, sl, #1
    12fc:	cmp	sl, #2
    1300:	bcc	1278 <clicap_generate+0x184>
    1304:	ldr	r0, [pc, #168]	; 13b4 <clicap_generate+0x2c0>
    1308:	ldr	r0, [pc, r0]
    130c:	mov	r4, r0
    1310:	ldr	r0, [r0]
    1314:	ldr	r0, [r0, #4]
    1318:	add	r5, sp, #20
    131c:	mov	r1, r5
    1320:	bl	7c8 <rb_dictionary_foreach_next@plt>
    1324:	ldr	r0, [r4]
    1328:	ldr	r0, [r0, #4]
    132c:	mov	r1, r5
    1330:	bl	798 <rb_dictionary_foreach_cur@plt>
    1334:	mov	r5, r0
    1338:	cmp	r0, #0
    133c:	bne	11f0 <clicap_generate+0xfc>
    1340:	str	r6, [sp]
    1344:	ldr	r1, [pc, #108]	; 13b8 <clicap_generate+0x2c4>
    1348:	add	r1, pc, r1
    134c:	b	1358 <clicap_generate+0x264>
    1350:	ldr	r1, [pc, #48]	; 1388 <clicap_generate+0x294>
    1354:	add	r1, pc, r1
    1358:	ldr	r2, [pc, #92]	; 13bc <clicap_generate+0x2c8>
    135c:	add	r2, pc, r2
    1360:	ldr	r3, [pc, #88]	; 13c0 <clicap_generate+0x2cc>
    1364:	add	r3, pc, r3
    1368:	ldr	r0, [sp, #16]
    136c:	bl	744 <sendto_one@plt>
    1370:	sub	sp, fp, #28
    1374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1378:	.word	0x000111f8
    137c:	.word	0x0000030e
    1380:	.word	0x00010f18
    1384:	.word	0x00000301
    1388:	.word	0x0000010b
    138c:	.word	0x0001138f
    1390:	.word	0x00010ec4
    1394:	.word	0x00000205
    1398:	.word	0x000001fa
    139c:	.word	0x000001d8
    13a0:	.word	0x000001d1
    13a4:	.word	0x000001b3
    13a8:	.word	0x00000185
    13ac:	.word	0x00011024
    13b0:	.word	0x00000160
    13b4:	.word	0x00010d40
    13b8:	.word	0x00000115
    13bc:	.word	0x00010fa8
    13c0:	.word	0x000000e6

000013c4 <clicap_visible>:
    13c4:	mov	r2, r0
    13c8:	ldrb	r3, [r1, #8]
    13cc:	mov	r0, #0
    13d0:	tst	r3, #1
    13d4:	bxne	lr
    13d8:	ldr	r1, [r1, #12]
    13dc:	mov	r0, #1
    13e0:	cmp	r1, #0
    13e4:	ldrne	r1, [r1]
    13e8:	cmpne	r1, #0
    13ec:	bne	13f4 <clicap_visible+0x30>
    13f0:	bx	lr
    13f4:	push	{fp, lr}
    13f8:	mov	fp, sp
    13fc:	mov	r0, r2
    1400:	blx	r1
    1404:	pop	{fp, lr}
    1408:	bx	lr

Disassembly of section .fini:

0000140c <_fini>:
    140c:	push	{r3, lr}
    1410:	pop	{r3, pc}
