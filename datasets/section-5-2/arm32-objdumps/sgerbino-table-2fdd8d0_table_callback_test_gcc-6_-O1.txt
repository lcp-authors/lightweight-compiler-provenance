
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011a94 <.init>:
   11a94:	push	{r3, lr}
   11a98:	bl	11b98 <_start@@Base+0x3c>
   11a9c:	pop	{r3, pc}

Disassembly of section .plt:

00011aa0 <raise@plt-0x14>:
   11aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   11aa4:	ldr	lr, [pc, #4]	; 11ab0 <raise@plt-0x4>
   11aa8:	add	lr, pc, lr
   11aac:	ldr	pc, [lr, #8]!
   11ab0:	andeq	r4, r1, r0, asr r5

00011ab4 <raise@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #20, 20	; 0x14000
   11abc:	ldr	pc, [ip, #1360]!	; 0x550

00011ac0 <strcmp@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #20, 20	; 0x14000
   11ac8:	ldr	pc, [ip, #1352]!	; 0x548

00011acc <printf@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #20, 20	; 0x14000
   11ad4:	ldr	pc, [ip, #1344]!	; 0x540

00011ad8 <free@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #20, 20	; 0x14000
   11ae0:	ldr	pc, [ip, #1336]!	; 0x538

00011ae4 <realloc@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #20, 20	; 0x14000
   11aec:	ldr	pc, [ip, #1328]!	; 0x530

00011af0 <strcpy@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #20, 20	; 0x14000
   11af8:	ldr	pc, [ip, #1320]!	; 0x528

00011afc <puts@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #20, 20	; 0x14000
   11b04:	ldr	pc, [ip, #1312]!	; 0x520

00011b08 <malloc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #20, 20	; 0x14000
   11b10:	ldr	pc, [ip, #1304]!	; 0x518

00011b14 <__libc_start_main@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #20, 20	; 0x14000
   11b1c:	ldr	pc, [ip, #1296]!	; 0x510

00011b20 <__gmon_start__@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #20, 20	; 0x14000
   11b28:	ldr	pc, [ip, #1288]!	; 0x508

00011b2c <strlen@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #20, 20	; 0x14000
   11b34:	ldr	pc, [ip, #1280]!	; 0x500

00011b38 <snprintf@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #20, 20	; 0x14000
   11b40:	ldr	pc, [ip, #1272]!	; 0x4f8

00011b44 <__isoc99_sscanf@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #20, 20	; 0x14000
   11b4c:	ldr	pc, [ip, #1264]!	; 0x4f0

00011b50 <abort@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #20, 20	; 0x14000
   11b58:	ldr	pc, [ip, #1256]!	; 0x4e8

Disassembly of section .text:

00011b5c <_start@@Base>:
   11b5c:	mov	fp, #0
   11b60:	mov	lr, #0
   11b64:	pop	{r1}		; (ldr r1, [sp], #4)
   11b68:	mov	r2, sp
   11b6c:	push	{r2}		; (str r2, [sp, #-4]!)
   11b70:	push	{r0}		; (str r0, [sp, #-4]!)
   11b74:	ldr	ip, [pc, #16]	; 11b8c <_start@@Base+0x30>
   11b78:	push	{ip}		; (str ip, [sp, #-4]!)
   11b7c:	ldr	r0, [pc, #12]	; 11b90 <_start@@Base+0x34>
   11b80:	ldr	r3, [pc, #12]	; 11b94 <_start@@Base+0x38>
   11b84:	bl	11b14 <__libc_start_main@plt>
   11b88:	bl	11b50 <abort@plt>
   11b8c:	andeq	r4, r1, r4, lsl #30
   11b90:	muleq	r1, r8, ip
   11b94:	andeq	r4, r1, r4, lsr #29
   11b98:	ldr	r3, [pc, #20]	; 11bb4 <_start@@Base+0x58>
   11b9c:	ldr	r2, [pc, #20]	; 11bb8 <_start@@Base+0x5c>
   11ba0:	add	r3, pc, r3
   11ba4:	ldr	r2, [r3, r2]
   11ba8:	cmp	r2, #0
   11bac:	bxeq	lr
   11bb0:	b	11b20 <__gmon_start__@plt>
   11bb4:	andeq	r4, r1, r8, asr r4
   11bb8:	andeq	r0, r0, r4, asr #32
   11bbc:	ldr	r3, [pc, #28]	; 11be0 <_start@@Base+0x84>
   11bc0:	ldr	r0, [pc, #28]	; 11be4 <_start@@Base+0x88>
   11bc4:	sub	r3, r3, r0
   11bc8:	cmp	r3, #6
   11bcc:	bxls	lr
   11bd0:	ldr	r3, [pc, #16]	; 11be8 <_start@@Base+0x8c>
   11bd4:	cmp	r3, #0
   11bd8:	bxeq	lr
   11bdc:	bx	r3
   11be0:	andeq	r6, r2, r3, asr r0
   11be4:	andeq	r6, r2, r0, asr r0
   11be8:	andeq	r0, r0, r0
   11bec:	ldr	r1, [pc, #36]	; 11c18 <_start@@Base+0xbc>
   11bf0:	ldr	r0, [pc, #36]	; 11c1c <_start@@Base+0xc0>
   11bf4:	sub	r1, r1, r0
   11bf8:	asr	r1, r1, #2
   11bfc:	add	r1, r1, r1, lsr #31
   11c00:	asrs	r1, r1, #1
   11c04:	bxeq	lr
   11c08:	ldr	r3, [pc, #16]	; 11c20 <_start@@Base+0xc4>
   11c0c:	cmp	r3, #0
   11c10:	bxeq	lr
   11c14:	bx	r3
   11c18:	andeq	r6, r2, r0, asr r0
   11c1c:	andeq	r6, r2, r0, asr r0
   11c20:	andeq	r0, r0, r0
   11c24:	push	{r4, lr}
   11c28:	ldr	r4, [pc, #24]	; 11c48 <_start@@Base+0xec>
   11c2c:	ldrb	r3, [r4]
   11c30:	cmp	r3, #0
   11c34:	popne	{r4, pc}
   11c38:	bl	11bbc <_start@@Base+0x60>
   11c3c:	mov	r3, #1
   11c40:	strb	r3, [r4]
   11c44:	pop	{r4, pc}
   11c48:	andeq	r6, r2, r0, asr r0
   11c4c:	ldr	r0, [pc, #40]	; 11c7c <_start@@Base+0x120>
   11c50:	ldr	r3, [r0]
   11c54:	cmp	r3, #0
   11c58:	bne	11c60 <_start@@Base+0x104>
   11c5c:	b	11bec <_start@@Base+0x90>
   11c60:	ldr	r3, [pc, #24]	; 11c80 <_start@@Base+0x124>
   11c64:	cmp	r3, #0
   11c68:	beq	11c5c <_start@@Base+0x100>
   11c6c:	push	{r4, lr}
   11c70:	blx	r3
   11c74:	pop	{r4, lr}
   11c78:	b	11bec <_start@@Base+0x90>
   11c7c:	andeq	r5, r2, r4, lsl pc
   11c80:	andeq	r0, r0, r0
   11c84:	ldr	r1, [sp]
   11c88:	ldr	r2, [r1]
   11c8c:	orr	r3, r2, r3
   11c90:	str	r3, [r1]
   11c94:	bx	lr

00011c98 <main@@Base>:
   11c98:	push	{r4, r5, r6, lr}
   11c9c:	sub	sp, sp, #64	; 0x40
   11ca0:	mov	r3, #0
   11ca4:	str	r3, [sp, #4]
   11ca8:	add	r0, sp, #8
   11cac:	bl	11df0 <table_init@@Base>
   11cb0:	mvn	r3, #0
   11cb4:	add	r2, sp, #4
   11cb8:	ldr	r1, [pc, #272]	; 11dd0 <main@@Base+0x138>
   11cbc:	add	r0, sp, #8
   11cc0:	bl	12448 <table_register_callback@@Base>
   11cc4:	add	r0, sp, #8
   11cc8:	bl	13558 <table_add_row@@Base>
   11ccc:	mov	r6, r0
   11cd0:	ldr	r3, [sp, #4]
   11cd4:	tst	r3, #2
   11cd8:	movne	r4, #0
   11cdc:	beq	11d70 <main@@Base+0xd8>
   11ce0:	mov	r2, #0
   11ce4:	ldr	r1, [pc, #232]	; 11dd4 <main@@Base+0x13c>
   11ce8:	add	r0, sp, #8
   11cec:	bl	127f8 <table_add_column@@Base>
   11cf0:	mov	r5, r0
   11cf4:	ldr	r3, [sp, #4]
   11cf8:	tst	r3, #8
   11cfc:	beq	11d80 <main@@Base+0xe8>
   11d00:	mov	r3, #42	; 0x2a
   11d04:	mov	r2, r5
   11d08:	mov	r1, r6
   11d0c:	add	r0, sp, #8
   11d10:	bl	13db4 <table_set_int@@Base>
   11d14:	ldr	r3, [sp, #4]
   11d18:	tst	r3, #1
   11d1c:	beq	11d90 <main@@Base+0xf8>
   11d20:	mov	r1, r6
   11d24:	add	r0, sp, #8
   11d28:	bl	13600 <table_remove_row@@Base>
   11d2c:	ldr	r3, [sp, #4]
   11d30:	tst	r3, #4
   11d34:	beq	11da0 <main@@Base+0x108>
   11d38:	mov	r1, r5
   11d3c:	add	r0, sp, #8
   11d40:	bl	1290c <table_remove_column@@Base>
   11d44:	ldr	r3, [sp, #4]
   11d48:	tst	r3, #16
   11d4c:	beq	11db0 <main@@Base+0x118>
   11d50:	add	r0, sp, #8
   11d54:	bl	11e54 <table_destroy@@Base>
   11d58:	ldr	r3, [sp, #4]
   11d5c:	tst	r3, #64	; 0x40
   11d60:	beq	11dc0 <main@@Base+0x128>
   11d64:	mov	r0, r4
   11d68:	add	sp, sp, #64	; 0x40
   11d6c:	pop	{r4, r5, r6, pc}
   11d70:	ldr	r0, [pc, #96]	; 11dd8 <main@@Base+0x140>
   11d74:	bl	11afc <puts@plt>
   11d78:	mvn	r4, #0
   11d7c:	b	11ce0 <main@@Base+0x48>
   11d80:	ldr	r0, [pc, #84]	; 11ddc <main@@Base+0x144>
   11d84:	bl	11afc <puts@plt>
   11d88:	mvn	r4, #0
   11d8c:	b	11d00 <main@@Base+0x68>
   11d90:	ldr	r0, [pc, #72]	; 11de0 <main@@Base+0x148>
   11d94:	bl	11acc <printf@plt>
   11d98:	mvn	r4, #0
   11d9c:	b	11d20 <main@@Base+0x88>
   11da0:	ldr	r0, [pc, #60]	; 11de4 <main@@Base+0x14c>
   11da4:	bl	11acc <printf@plt>
   11da8:	mvn	r4, #0
   11dac:	b	11d38 <main@@Base+0xa0>
   11db0:	ldr	r0, [pc, #48]	; 11de8 <main@@Base+0x150>
   11db4:	bl	11acc <printf@plt>
   11db8:	mvn	r4, #0
   11dbc:	b	11d50 <main@@Base+0xb8>
   11dc0:	ldr	r0, [pc, #36]	; 11dec <main@@Base+0x154>
   11dc4:	bl	11acc <printf@plt>
   11dc8:	mvn	r4, #0
   11dcc:	b	11d64 <main@@Base+0xcc>
   11dd0:	andeq	r1, r1, r4, lsl #25
   11dd4:	andeq	r4, r1, ip, lsr pc
   11dd8:	andeq	r4, r1, r4, lsl pc
   11ddc:	andeq	r4, r1, r0, asr #30
   11de0:	andeq	r4, r1, ip, ror #30
   11de4:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11de8:	andeq	r4, r1, r4, asr #31
   11dec:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>

00011df0 <table_init@@Base>:
   11df0:	mov	r3, #0
   11df4:	str	r3, [r0]
   11df8:	str	r3, [r0, #4]
   11dfc:	str	r3, [r0, #12]
   11e00:	mov	r2, #10
   11e04:	str	r2, [r0, #8]
   11e08:	str	r3, [r0, #16]
   11e0c:	str	r3, [r0, #20]
   11e10:	str	r3, [r0, #28]
   11e14:	mov	r1, #20
   11e18:	str	r1, [r0, #24]
   11e1c:	str	r3, [r0, #36]	; 0x24
   11e20:	str	r3, [r0, #40]	; 0x28
   11e24:	str	r3, [r0, #44]	; 0x2c
   11e28:	str	r3, [r0, #32]
   11e2c:	str	r3, [r0, #52]	; 0x34
   11e30:	str	r2, [r0, #48]	; 0x30
   11e34:	bx	lr

00011e38 <table_new@@Base>:
   11e38:	push	{r4, lr}
   11e3c:	mov	r0, #56	; 0x38
   11e40:	bl	11b08 <malloc@plt>
   11e44:	mov	r4, r0
   11e48:	bl	11df0 <table_init@@Base>
   11e4c:	mov	r0, r4
   11e50:	pop	{r4, pc}

00011e54 <table_destroy@@Base>:
   11e54:	push	{r4, r5, r6, lr}
   11e58:	subs	r5, r0, #0
   11e5c:	popeq	{r4, r5, r6, pc}
   11e60:	mov	r3, #64	; 0x40
   11e64:	mvn	r2, #0
   11e68:	mov	r1, r2
   11e6c:	mov	r0, r5
   11e70:	bl	1268c <table_notify@@Base>
   11e74:	mov	r0, r5
   11e78:	bl	13550 <table_get_row_length@@Base>
   11e7c:	subs	r6, r0, #0
   11e80:	ble	11ea0 <table_destroy@@Base+0x4c>
   11e84:	mov	r4, #0
   11e88:	mov	r1, r4
   11e8c:	mov	r0, r5
   11e90:	bl	13500 <table_row_destroy@@Base>
   11e94:	add	r4, r4, #1
   11e98:	cmp	r6, r4
   11e9c:	bne	11e88 <table_destroy@@Base+0x34>
   11ea0:	ldr	r0, [r5, #16]
   11ea4:	cmp	r0, #0
   11ea8:	beq	11eb0 <table_destroy@@Base+0x5c>
   11eac:	bl	11ad8 <free@plt>
   11eb0:	mov	r0, r5
   11eb4:	bl	1277c <table_get_column_length@@Base>
   11eb8:	subs	r6, r0, #0
   11ebc:	ble	11edc <table_destroy@@Base+0x88>
   11ec0:	mov	r4, #0
   11ec4:	mov	r1, r4
   11ec8:	mov	r0, r5
   11ecc:	bl	1275c <table_column_destroy@@Base>
   11ed0:	add	r4, r4, #1
   11ed4:	cmp	r6, r4
   11ed8:	bne	11ec4 <table_destroy@@Base+0x70>
   11edc:	ldr	r0, [r5]
   11ee0:	cmp	r0, #0
   11ee4:	beq	11eec <table_destroy@@Base+0x98>
   11ee8:	bl	11ad8 <free@plt>
   11eec:	ldr	r0, [r5, #36]	; 0x24
   11ef0:	cmp	r0, #0
   11ef4:	beq	11efc <table_destroy@@Base+0xa8>
   11ef8:	bl	11ad8 <free@plt>
   11efc:	ldr	r0, [r5, #40]	; 0x28
   11f00:	cmp	r0, #0
   11f04:	beq	11f0c <table_destroy@@Base+0xb8>
   11f08:	bl	11ad8 <free@plt>
   11f0c:	ldr	r0, [r5, #44]	; 0x2c
   11f10:	cmp	r0, #0
   11f14:	popeq	{r4, r5, r6, pc}
   11f18:	bl	11ad8 <free@plt>
   11f1c:	pop	{r4, r5, r6, pc}

00011f20 <table_delete@@Base>:
   11f20:	push	{r4, lr}
   11f24:	mov	r4, r0
   11f28:	bl	11e54 <table_destroy@@Base>
   11f2c:	mov	r0, r4
   11f30:	bl	11ad8 <free@plt>
   11f34:	pop	{r4, pc}

00011f38 <table_dupe@@Base>:
   11f38:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f3c:	sub	sp, sp, #20
   11f40:	mov	r6, r0
   11f44:	bl	13550 <table_get_row_length@@Base>
   11f48:	mov	r9, r0
   11f4c:	mov	r0, r6
   11f50:	bl	1277c <table_get_column_length@@Base>
   11f54:	mov	r7, r0
   11f58:	bl	11e38 <table_new@@Base>
   11f5c:	mov	r8, r0
   11f60:	cmp	r7, #0
   11f64:	ble	11fa4 <table_dupe@@Base+0x6c>
   11f68:	mov	r4, #0
   11f6c:	mov	r1, r4
   11f70:	mov	r0, r6
   11f74:	bl	12a88 <table_get_column_name@@Base>
   11f78:	mov	r5, r0
   11f7c:	mov	r1, r4
   11f80:	mov	r0, r6
   11f84:	bl	127e4 <table_get_column_data_type@@Base>
   11f88:	mov	r2, r0
   11f8c:	mov	r1, r5
   11f90:	mov	r0, r8
   11f94:	bl	127f8 <table_add_column@@Base>
   11f98:	add	r4, r4, #1
   11f9c:	cmp	r7, r4
   11fa0:	bne	11f6c <table_dupe@@Base+0x34>
   11fa4:	cmp	r9, #0
   11fa8:	ble	12410 <table_dupe@@Base+0x4d8>
   11fac:	mov	r5, #0
   11fb0:	b	123f8 <table_dupe@@Base+0x4c0>
   11fb4:	mov	r2, r4
   11fb8:	mov	r1, r5
   11fbc:	mov	r0, r6
   11fc0:	bl	13378 <table_get_int@@Base>
   11fc4:	mov	r3, r0
   11fc8:	mov	r2, r4
   11fcc:	mov	r1, r5
   11fd0:	mov	r0, r8
   11fd4:	bl	13db4 <table_set_int@@Base>
   11fd8:	add	r4, r4, #1
   11fdc:	cmp	r7, r4
   11fe0:	beq	123ec <table_dupe@@Base+0x4b4>
   11fe4:	mov	r1, r4
   11fe8:	mov	r0, r6
   11fec:	bl	127e4 <table_get_column_data_type@@Base>
   11ff0:	cmp	r0, #23
   11ff4:	ldrls	pc, [pc, r0, lsl #2]
   11ff8:	b	11fd8 <table_dupe@@Base+0xa0>
   11ffc:			; <UNDEFINED> instruction: 0x00011fb4
   12000:	andeq	r2, r1, ip, asr r0
   12004:	andeq	r2, r1, r4, lsl #1
   12008:	andeq	r2, r1, ip, lsr #1
   1200c:	ldrdeq	r2, [r1], -r4
   12010:	strdeq	r2, [r1], -ip
   12014:	andeq	r2, r1, r4, lsr #2
   12018:	andeq	r2, r1, ip, asr #2
   1201c:	andeq	r2, r1, r4, ror r1
   12020:	muleq	r1, ip, r1
   12024:	andeq	r2, r1, r4, asr #3
   12028:	andeq	r2, r1, ip, ror #3
   1202c:	andeq	r2, r1, r4, lsl r2
   12030:	andeq	r2, r1, ip, lsr r2
   12034:	andeq	r2, r1, r4, ror #4
   12038:	andeq	r2, r1, ip, lsl #5
   1203c:	ldrdeq	r2, [r1], -ip
   12040:	andeq	r2, r1, r0, lsl #6
   12044:	andeq	r2, r1, r4, lsr #6
   12048:	andeq	r2, r1, r0, ror r3
   1204c:	muleq	r1, r8, r3
   12050:			; <UNDEFINED> instruction: 0x000122b4
   12054:	andeq	r2, r1, r8, asr #6
   12058:	andeq	r2, r1, r0, asr #7
   1205c:	mov	r2, r4
   12060:	mov	r1, r5
   12064:	mov	r0, r6
   12068:	bl	13388 <table_get_uint@@Base>
   1206c:	mov	r3, r0
   12070:	mov	r2, r4
   12074:	mov	r1, r5
   12078:	mov	r0, r8
   1207c:	bl	13ddc <table_set_uint@@Base>
   12080:	b	11fd8 <table_dupe@@Base+0xa0>
   12084:	mov	r2, r4
   12088:	mov	r1, r5
   1208c:	mov	r0, r6
   12090:	bl	13398 <table_get_int8@@Base>
   12094:	mov	r3, r0
   12098:	mov	r2, r4
   1209c:	mov	r1, r5
   120a0:	mov	r0, r8
   120a4:	bl	13e04 <table_set_int8@@Base>
   120a8:	b	11fd8 <table_dupe@@Base+0xa0>
   120ac:	mov	r2, r4
   120b0:	mov	r1, r5
   120b4:	mov	r0, r6
   120b8:	bl	133a8 <table_get_uint8@@Base>
   120bc:	mov	r3, r0
   120c0:	mov	r2, r4
   120c4:	mov	r1, r5
   120c8:	mov	r0, r8
   120cc:	bl	13e2c <table_set_uint8@@Base>
   120d0:	b	11fd8 <table_dupe@@Base+0xa0>
   120d4:	mov	r2, r4
   120d8:	mov	r1, r5
   120dc:	mov	r0, r6
   120e0:	bl	133b8 <table_get_int16@@Base>
   120e4:	mov	r3, r0
   120e8:	mov	r2, r4
   120ec:	mov	r1, r5
   120f0:	mov	r0, r8
   120f4:	bl	13e54 <table_set_int16@@Base>
   120f8:	b	11fd8 <table_dupe@@Base+0xa0>
   120fc:	mov	r2, r4
   12100:	mov	r1, r5
   12104:	mov	r0, r6
   12108:	bl	133c8 <table_get_uint16@@Base>
   1210c:	mov	r3, r0
   12110:	mov	r2, r4
   12114:	mov	r1, r5
   12118:	mov	r0, r8
   1211c:	bl	13e7c <table_set_uint16@@Base>
   12120:	b	11fd8 <table_dupe@@Base+0xa0>
   12124:	mov	r2, r4
   12128:	mov	r1, r5
   1212c:	mov	r0, r6
   12130:	bl	133d8 <table_get_int32@@Base>
   12134:	mov	r3, r0
   12138:	mov	r2, r4
   1213c:	mov	r1, r5
   12140:	mov	r0, r8
   12144:	bl	13ea4 <table_set_int32@@Base>
   12148:	b	11fd8 <table_dupe@@Base+0xa0>
   1214c:	mov	r2, r4
   12150:	mov	r1, r5
   12154:	mov	r0, r6
   12158:	bl	133e8 <table_get_uint32@@Base>
   1215c:	mov	r3, r0
   12160:	mov	r2, r4
   12164:	mov	r1, r5
   12168:	mov	r0, r8
   1216c:	bl	13ecc <table_set_uint32@@Base>
   12170:	b	11fd8 <table_dupe@@Base+0xa0>
   12174:	mov	r2, r4
   12178:	mov	r1, r5
   1217c:	mov	r0, r6
   12180:	bl	133f8 <table_get_int64@@Base>
   12184:	strd	r0, [sp]
   12188:	mov	r2, r4
   1218c:	mov	r1, r5
   12190:	mov	r0, r8
   12194:	bl	13ef4 <table_set_int64@@Base>
   12198:	b	11fd8 <table_dupe@@Base+0xa0>
   1219c:	mov	r2, r4
   121a0:	mov	r1, r5
   121a4:	mov	r0, r6
   121a8:	bl	13408 <table_get_uint64@@Base>
   121ac:	strd	r0, [sp]
   121b0:	mov	r2, r4
   121b4:	mov	r1, r5
   121b8:	mov	r0, r8
   121bc:	bl	13f14 <table_set_uint64@@Base>
   121c0:	b	11fd8 <table_dupe@@Base+0xa0>
   121c4:	mov	r2, r4
   121c8:	mov	r1, r5
   121cc:	mov	r0, r6
   121d0:	bl	13418 <table_get_short@@Base>
   121d4:	mov	r3, r0
   121d8:	mov	r2, r4
   121dc:	mov	r1, r5
   121e0:	mov	r0, r8
   121e4:	bl	13f34 <table_set_short@@Base>
   121e8:	b	11fd8 <table_dupe@@Base+0xa0>
   121ec:	mov	r2, r4
   121f0:	mov	r1, r5
   121f4:	mov	r0, r6
   121f8:	bl	13428 <table_get_ushort@@Base>
   121fc:	mov	r3, r0
   12200:	mov	r2, r4
   12204:	mov	r1, r5
   12208:	mov	r0, r8
   1220c:	bl	13f5c <table_set_ushort@@Base>
   12210:	b	11fd8 <table_dupe@@Base+0xa0>
   12214:	mov	r2, r4
   12218:	mov	r1, r5
   1221c:	mov	r0, r6
   12220:	bl	13438 <table_get_long@@Base>
   12224:	mov	r3, r0
   12228:	mov	r2, r4
   1222c:	mov	r1, r5
   12230:	mov	r0, r8
   12234:	bl	13f84 <table_set_long@@Base>
   12238:	b	11fd8 <table_dupe@@Base+0xa0>
   1223c:	mov	r2, r4
   12240:	mov	r1, r5
   12244:	mov	r0, r6
   12248:	bl	13448 <table_get_ulong@@Base>
   1224c:	mov	r3, r0
   12250:	mov	r2, r4
   12254:	mov	r1, r5
   12258:	mov	r0, r8
   1225c:	bl	13fac <table_set_ulong@@Base>
   12260:	b	11fd8 <table_dupe@@Base+0xa0>
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r0, r6
   12270:	bl	13458 <table_get_llong@@Base>
   12274:	strd	r0, [sp]
   12278:	mov	r2, r4
   1227c:	mov	r1, r5
   12280:	mov	r0, r8
   12284:	bl	13fd4 <table_set_llong@@Base>
   12288:	b	11fd8 <table_dupe@@Base+0xa0>
   1228c:	mov	r2, r4
   12290:	mov	r1, r5
   12294:	mov	r0, r6
   12298:	bl	13468 <table_get_ullong@@Base>
   1229c:	strd	r0, [sp]
   122a0:	mov	r2, r4
   122a4:	mov	r1, r5
   122a8:	mov	r0, r8
   122ac:	bl	13ff4 <table_set_ullong@@Base>
   122b0:	b	11fd8 <table_dupe@@Base+0xa0>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	mov	r0, r6
   122c0:	bl	134c8 <table_get_string@@Base>
   122c4:	mov	r3, r0
   122c8:	mov	r2, r4
   122cc:	mov	r1, r5
   122d0:	mov	r0, r8
   122d4:	bl	14080 <table_set_string@@Base>
   122d8:	b	11fd8 <table_dupe@@Base+0xa0>
   122dc:	mov	r2, r4
   122e0:	mov	r1, r5
   122e4:	mov	r0, r6
   122e8:	bl	13478 <table_get_float@@Base>
   122ec:	mov	r2, r4
   122f0:	mov	r1, r5
   122f4:	mov	r0, r8
   122f8:	bl	14014 <table_set_float@@Base>
   122fc:	b	11fd8 <table_dupe@@Base+0xa0>
   12300:	mov	r2, r4
   12304:	mov	r1, r5
   12308:	mov	r0, r6
   1230c:	bl	13488 <table_get_double@@Base>
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r0, r8
   1231c:	bl	14038 <table_set_double@@Base>
   12320:	b	11fd8 <table_dupe@@Base+0xa0>
   12324:	mov	r2, r4
   12328:	mov	r1, r5
   1232c:	mov	r0, r6
   12330:	bl	13498 <table_get_ldouble@@Base>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	mov	r0, r8
   12340:	bl	1405c <table_set_ldouble@@Base>
   12344:	b	11fd8 <table_dupe@@Base+0xa0>
   12348:	mov	r2, r4
   1234c:	mov	r1, r5
   12350:	mov	r0, r6
   12354:	bl	13368 <table_get_bool@@Base>
   12358:	mov	r3, r0
   1235c:	mov	r2, r4
   12360:	mov	r1, r5
   12364:	mov	r0, r8
   12368:	bl	13d8c <table_set_bool@@Base>
   1236c:	b	11fd8 <table_dupe@@Base+0xa0>
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	mov	r0, r6
   1237c:	bl	134a8 <table_get_char@@Base>
   12380:	mov	r3, r0
   12384:	mov	r2, r4
   12388:	mov	r1, r5
   1238c:	mov	r0, r8
   12390:	bl	1409c <table_set_char@@Base>
   12394:	b	11fd8 <table_dupe@@Base+0xa0>
   12398:	mov	r2, r4
   1239c:	mov	r1, r5
   123a0:	mov	r0, r6
   123a4:	bl	134b8 <table_get_uchar@@Base>
   123a8:	mov	r3, r0
   123ac:	mov	r2, r4
   123b0:	mov	r1, r5
   123b4:	mov	r0, r8
   123b8:	bl	140c4 <table_set_uchar@@Base>
   123bc:	b	11fd8 <table_dupe@@Base+0xa0>
   123c0:	mov	r2, r4
   123c4:	mov	r1, r5
   123c8:	mov	r0, r6
   123cc:	bl	134d4 <table_get_ptr@@Base>
   123d0:	str	r0, [sp, #12]
   123d4:	add	r3, sp, #12
   123d8:	mov	r2, r4
   123dc:	mov	r1, r5
   123e0:	mov	r0, r8
   123e4:	bl	140ec <table_set_ptr@@Base>
   123e8:	b	11fd8 <table_dupe@@Base+0xa0>
   123ec:	add	r5, r5, #1
   123f0:	cmp	r9, r5
   123f4:	beq	12410 <table_dupe@@Base+0x4d8>
   123f8:	mov	r0, r8
   123fc:	bl	13558 <table_add_row@@Base>
   12400:	cmp	r7, #0
   12404:	ble	123ec <table_dupe@@Base+0x4b4>
   12408:	mov	r4, #0
   1240c:	b	11fe4 <table_dupe@@Base+0xac>
   12410:	mov	r0, r8
   12414:	add	sp, sp, #20
   12418:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001241c <table_get_major_version@@Base>:
   1241c:	mov	r0, #0
   12420:	bx	lr

00012424 <table_get_minor_version@@Base>:
   12424:	mov	r0, #0
   12428:	bx	lr

0001242c <table_get_patch_version@@Base>:
   1242c:	mov	r0, #0
   12430:	bx	lr

00012434 <table_get_version@@Base>:
   12434:	ldr	r0, [pc]	; 1243c <table_get_version@@Base+0x8>
   12438:	bx	lr
   1243c:	andeq	r5, r1, r0, rrx

00012440 <table_get_callback_length@@Base>:
   12440:	ldr	r0, [r0, #32]
   12444:	bx	lr

00012448 <table_register_callback@@Base>:
   12448:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1244c:	ldr	r5, [r0, #32]
   12450:	cmp	r5, #0
   12454:	ble	124b0 <table_register_callback@@Base+0x68>
   12458:	ldr	lr, [r0, #36]	; 0x24
   1245c:	sub	lr, lr, #4
   12460:	mov	ip, #0
   12464:	b	12474 <table_register_callback@@Base+0x2c>
   12468:	add	ip, ip, #1
   1246c:	cmp	ip, r5
   12470:	beq	124b0 <table_register_callback@@Base+0x68>
   12474:	lsl	r6, ip, #2
   12478:	ldr	r4, [lr, #4]!
   1247c:	cmp	r1, r4
   12480:	bne	12468 <table_register_callback@@Base+0x20>
   12484:	ldr	r4, [r0, #40]	; 0x28
   12488:	ldr	r4, [r4, ip, lsl #2]
   1248c:	cmp	r2, r4
   12490:	bne	12468 <table_register_callback@@Base+0x20>
   12494:	cmp	ip, #0
   12498:	ble	124b0 <table_register_callback@@Base+0x68>
   1249c:	ldr	r1, [r0, #44]	; 0x2c
   124a0:	ldr	r2, [r1, r6]
   124a4:	orr	r3, r2, r3
   124a8:	str	r3, [r1, r6]
   124ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124b0:	mov	r7, r3
   124b4:	mov	r4, r2
   124b8:	mov	r9, r1
   124bc:	mov	r6, r0
   124c0:	ldr	r8, [r0, #48]	; 0x30
   124c4:	mov	r1, r8
   124c8:	mov	r0, r5
   124cc:	bl	14e74 <table_cell_nullify@@Base+0x218>
   124d0:	cmp	r1, #0
   124d4:	beq	12504 <table_register_callback@@Base+0xbc>
   124d8:	ldr	r3, [r6, #32]
   124dc:	ldr	r2, [r6, #36]	; 0x24
   124e0:	str	r9, [r2, r3, lsl #2]
   124e4:	ldr	r2, [r6, #40]	; 0x28
   124e8:	str	r4, [r2, r3, lsl #2]
   124ec:	ldr	r2, [r6, #44]	; 0x2c
   124f0:	str	r7, [r2, r3, lsl #2]
   124f4:	ldr	r3, [r6, #32]
   124f8:	add	r3, r3, #1
   124fc:	str	r3, [r6, #32]
   12500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12504:	ldr	r1, [r6, #52]	; 0x34
   12508:	add	r1, r8, r1
   1250c:	str	r1, [r6, #52]	; 0x34
   12510:	lsl	r1, r1, #2
   12514:	ldr	r0, [r6, #36]	; 0x24
   12518:	bl	11ae4 <realloc@plt>
   1251c:	str	r0, [r6, #36]	; 0x24
   12520:	ldr	r1, [r6, #52]	; 0x34
   12524:	lsl	r1, r1, #2
   12528:	ldr	r0, [r6, #40]	; 0x28
   1252c:	bl	11ae4 <realloc@plt>
   12530:	str	r0, [r6, #40]	; 0x28
   12534:	ldr	r1, [r6, #52]	; 0x34
   12538:	lsl	r1, r1, #2
   1253c:	ldr	r0, [r6, #44]	; 0x2c
   12540:	bl	11ae4 <realloc@plt>
   12544:	str	r0, [r6, #44]	; 0x2c
   12548:	b	124d8 <table_register_callback@@Base+0x90>

0001254c <table_unregister_callback@@Base>:
   1254c:	push	{r4, r5, r6, lr}
   12550:	ldr	lr, [r0, #32]
   12554:	cmp	lr, #0
   12558:	pople	{r4, r5, r6, pc}
   1255c:	ldr	r4, [r0, #36]	; 0x24
   12560:	sub	r4, r4, #4
   12564:	mov	r3, #0
   12568:	b	12578 <table_unregister_callback@@Base+0x2c>
   1256c:	add	r3, r3, #1
   12570:	cmp	r3, lr
   12574:	beq	1264c <table_unregister_callback@@Base+0x100>
   12578:	lsl	ip, r3, #2
   1257c:	ldr	r5, [r4, #4]!
   12580:	cmp	r1, r5
   12584:	bne	1256c <table_unregister_callback@@Base+0x20>
   12588:	ldr	r5, [r0, #40]	; 0x28
   1258c:	ldr	r5, [r5, r3, lsl #2]
   12590:	cmp	r2, r5
   12594:	bne	1256c <table_unregister_callback@@Base+0x20>
   12598:	cmn	r3, #1
   1259c:	popeq	{r4, r5, r6, pc}
   125a0:	sub	lr, lr, #1
   125a4:	cmp	lr, r3
   125a8:	ble	125ec <table_unregister_callback@@Base+0xa0>
   125ac:	ldr	r1, [r0, #36]	; 0x24
   125b0:	add	r2, ip, #4
   125b4:	ldr	lr, [r1, r2]
   125b8:	str	lr, [r1, ip]
   125bc:	ldr	r1, [r0, #40]	; 0x28
   125c0:	ldr	lr, [r1, r2]
   125c4:	str	lr, [r1, ip]
   125c8:	ldr	r1, [r0, #44]	; 0x2c
   125cc:	ldr	lr, [r1, r2]
   125d0:	str	lr, [r1, ip]
   125d4:	add	r3, r3, #1
   125d8:	ldr	lr, [r0, #32]
   125dc:	sub	lr, lr, #1
   125e0:	mov	ip, r2
   125e4:	cmp	lr, r3
   125e8:	bgt	125ac <table_unregister_callback@@Base+0x60>
   125ec:	mov	r4, r0
   125f0:	str	lr, [r0, #32]
   125f4:	ldr	r5, [r0, #48]	; 0x30
   125f8:	mov	r1, r5
   125fc:	mov	r0, lr
   12600:	bl	14e74 <table_cell_nullify@@Base+0x218>
   12604:	cmp	r1, #0
   12608:	popne	{r4, r5, r6, pc}
   1260c:	ldr	r1, [r4, #52]	; 0x34
   12610:	sub	r1, r1, r5
   12614:	str	r1, [r4, #52]	; 0x34
   12618:	cmp	r1, #0
   1261c:	bne	12650 <table_unregister_callback@@Base+0x104>
   12620:	ldr	r0, [r4, #36]	; 0x24
   12624:	bl	11ad8 <free@plt>
   12628:	ldr	r0, [r4, #40]	; 0x28
   1262c:	bl	11ad8 <free@plt>
   12630:	ldr	r0, [r4, #44]	; 0x2c
   12634:	bl	11ad8 <free@plt>
   12638:	mov	r3, #0
   1263c:	str	r3, [r4, #36]	; 0x24
   12640:	str	r3, [r4, #40]	; 0x28
   12644:	str	r3, [r4, #44]	; 0x2c
   12648:	pop	{r4, r5, r6, pc}
   1264c:	pop	{r4, r5, r6, pc}
   12650:	lsl	r1, r1, #2
   12654:	ldr	r0, [r4, #36]	; 0x24
   12658:	bl	11ae4 <realloc@plt>
   1265c:	str	r0, [r4, #36]	; 0x24
   12660:	ldr	r1, [r4, #52]	; 0x34
   12664:	lsl	r1, r1, #2
   12668:	ldr	r0, [r4, #40]	; 0x28
   1266c:	bl	11ae4 <realloc@plt>
   12670:	str	r0, [r4, #40]	; 0x28
   12674:	ldr	r1, [r4, #52]	; 0x34
   12678:	lsl	r1, r1, #2
   1267c:	ldr	r0, [r4, #44]	; 0x2c
   12680:	bl	11ae4 <realloc@plt>
   12684:	str	r0, [r4, #44]	; 0x2c
   12688:	pop	{r4, r5, r6, pc}

0001268c <table_notify@@Base>:
   1268c:	ldr	ip, [r0, #32]
   12690:	cmp	ip, #0
   12694:	bxle	lr
   12698:	push	{r4, r5, r6, r7, r8, r9, lr}
   1269c:	sub	sp, sp, #12
   126a0:	mov	r6, r3
   126a4:	mov	r8, r2
   126a8:	mov	r7, r1
   126ac:	mov	r5, r0
   126b0:	mov	r4, #0
   126b4:	b	126c8 <table_notify@@Base+0x3c>
   126b8:	add	r4, r4, #1
   126bc:	ldr	r0, [r5, #32]
   126c0:	cmp	r0, r4
   126c4:	ble	12704 <table_notify@@Base+0x78>
   126c8:	ldr	r0, [r5, #44]	; 0x2c
   126cc:	ldr	r0, [r0, r4, lsl #2]
   126d0:	tst	r6, r0
   126d4:	beq	126b8 <table_notify@@Base+0x2c>
   126d8:	ldr	r3, [r5, #36]	; 0x24
   126dc:	ldr	r2, [r5, #40]	; 0x28
   126e0:	ldr	r2, [r2, r4, lsl #2]
   126e4:	str	r2, [sp]
   126e8:	ldr	r9, [r3, r4, lsl #2]
   126ec:	mov	r3, r6
   126f0:	mov	r2, r8
   126f4:	mov	r1, r7
   126f8:	mov	r0, r5
   126fc:	blx	r9
   12700:	b	126b8 <table_notify@@Base+0x2c>
   12704:	add	sp, sp, #12
   12708:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001270c <table_column_init@@Base>:
   1270c:	push	{r4, r5, r6, r7, r8, lr}
   12710:	mov	r7, r2
   12714:	mov	r8, r3
   12718:	add	r1, r1, r1, lsl #1
   1271c:	lsl	r4, r1, #2
   12720:	ldr	r6, [r0]
   12724:	add	r5, r6, r4
   12728:	mov	r0, r2
   1272c:	bl	11b2c <strlen@plt>
   12730:	add	r0, r0, #1
   12734:	bl	11b08 <malloc@plt>
   12738:	str	r0, [r6, r4]
   1273c:	cmp	r0, #0
   12740:	beq	1274c <table_column_init@@Base+0x40>
   12744:	mov	r1, r7
   12748:	bl	11af0 <strcpy@plt>
   1274c:	str	r8, [r5, #4]
   12750:	ldr	r3, [sp, #24]
   12754:	str	r3, [r5, #8]
   12758:	pop	{r4, r5, r6, r7, r8, pc}

0001275c <table_column_destroy@@Base>:
   1275c:	ldr	r3, [r0]
   12760:	add	r1, r1, r1, lsl #1
   12764:	ldr	r0, [r3, r1, lsl #2]
   12768:	cmp	r0, #0
   1276c:	bxeq	lr
   12770:	push	{r4, lr}
   12774:	bl	11ad8 <free@plt>
   12778:	pop	{r4, pc}

0001277c <table_get_column_length@@Base>:
   1277c:	ldr	r0, [r0, #4]
   12780:	bx	lr

00012784 <table_get_column@@Base>:
   12784:	push	{r4, r5, r6, r7, r8, lr}
   12788:	ldr	r7, [r0, #4]
   1278c:	cmp	r7, #0
   12790:	ble	127d0 <table_get_column@@Base+0x4c>
   12794:	mov	r6, r1
   12798:	ldr	r8, [r0]
   1279c:	mov	r5, #0
   127a0:	mov	r4, r5
   127a4:	mov	r1, r6
   127a8:	ldr	r0, [r8, r5]
   127ac:	bl	11ac0 <strcmp@plt>
   127b0:	cmp	r0, #0
   127b4:	beq	127d4 <table_get_column@@Base+0x50>
   127b8:	add	r4, r4, #1
   127bc:	add	r5, r5, #12
   127c0:	cmp	r4, r7
   127c4:	bne	127a4 <table_get_column@@Base+0x20>
   127c8:	mvn	r4, #0
   127cc:	b	127dc <table_get_column@@Base+0x58>
   127d0:	mov	r4, #0
   127d4:	cmp	r7, r4
   127d8:	mvneq	r4, #0
   127dc:	mov	r0, r4
   127e0:	pop	{r4, r5, r6, r7, r8, pc}

000127e4 <table_get_column_data_type@@Base>:
   127e4:	ldr	r3, [r0]
   127e8:	add	r1, r1, r1, lsl #1
   127ec:	add	r3, r3, r1, lsl #2
   127f0:	ldr	r0, [r3, #4]
   127f4:	bx	lr

000127f8 <table_add_column@@Base>:
   127f8:	push	{r4, r5, r6, r7, r8, r9, lr}
   127fc:	sub	sp, sp, #12
   12800:	mov	r5, r0
   12804:	mov	r9, r1
   12808:	mov	r8, r2
   1280c:	ldr	r4, [r0, #8]
   12810:	mov	r1, r4
   12814:	ldr	r0, [r0, #4]
   12818:	bl	14e74 <table_cell_nullify@@Base+0x218>
   1281c:	cmp	r1, #0
   12820:	beq	128a4 <table_add_column@@Base+0xac>
   12824:	mov	r0, r5
   12828:	bl	13550 <table_get_row_length@@Base>
   1282c:	mov	r6, r0
   12830:	ldr	r7, [r5, #4]
   12834:	mov	r0, r8
   12838:	bl	131c4 <table_get_default_compare_function_for_data_type@@Base>
   1283c:	str	r0, [sp]
   12840:	mov	r3, r8
   12844:	mov	r2, r9
   12848:	mov	r1, r7
   1284c:	mov	r0, r5
   12850:	bl	1270c <table_column_init@@Base>
   12854:	cmp	r6, #0
   12858:	ble	1287c <table_add_column@@Base+0x84>
   1285c:	mov	r4, #0
   12860:	mov	r2, r7
   12864:	mov	r1, r4
   12868:	mov	r0, r5
   1286c:	bl	14c04 <table_cell_init@@Base>
   12870:	add	r4, r4, #1
   12874:	cmp	r6, r4
   12878:	bne	12860 <table_add_column@@Base+0x68>
   1287c:	mov	r3, #8
   12880:	ldr	r2, [r5, #4]
   12884:	mvn	r1, #0
   12888:	mov	r0, r5
   1288c:	bl	1268c <table_notify@@Base>
   12890:	ldr	r0, [r5, #4]
   12894:	add	r3, r0, #1
   12898:	str	r3, [r5, #4]
   1289c:	add	sp, sp, #12
   128a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   128a4:	ldr	r1, [r5, #12]
   128a8:	add	r4, r4, r1
   128ac:	str	r4, [r5, #12]
   128b0:	add	r4, r4, r4, lsl #1
   128b4:	lsl	r1, r4, #2
   128b8:	ldr	r0, [r5]
   128bc:	bl	11ae4 <realloc@plt>
   128c0:	str	r0, [r5]
   128c4:	mov	r0, r5
   128c8:	bl	13550 <table_get_row_length@@Base>
   128cc:	subs	r7, r0, #0
   128d0:	ble	12824 <table_add_column@@Base+0x2c>
   128d4:	mov	r4, #0
   128d8:	mov	r1, r4
   128dc:	mov	r0, r5
   128e0:	bl	13710 <table_get_row_ptr@@Base>
   128e4:	mov	r6, r0
   128e8:	ldr	r1, [r5, #12]
   128ec:	lsl	r1, r1, #2
   128f0:	ldr	r0, [r0]
   128f4:	bl	11ae4 <realloc@plt>
   128f8:	str	r0, [r6]
   128fc:	add	r4, r4, #1
   12900:	cmp	r7, r4
   12904:	bne	128d8 <table_add_column@@Base+0xe0>
   12908:	b	12824 <table_add_column@@Base+0x2c>

0001290c <table_remove_column@@Base>:
   1290c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12910:	mov	r6, r0
   12914:	mov	r7, r1
   12918:	bl	1275c <table_column_destroy@@Base>
   1291c:	ldr	r4, [r6, #4]
   12920:	sub	r8, r4, #1
   12924:	cmp	r7, r8
   12928:	bge	12970 <table_remove_column@@Base+0x64>
   1292c:	add	r3, r7, r7, lsl #1
   12930:	lsl	r3, r3, #2
   12934:	mov	r0, r7
   12938:	ldr	r2, [r6]
   1293c:	add	ip, r3, #12
   12940:	add	lr, r2, r3
   12944:	add	r1, r2, ip
   12948:	ldr	r9, [r1]
   1294c:	ldr	r5, [r1, #4]
   12950:	ldr	r1, [r1, #8]
   12954:	str	r9, [r2, r3]
   12958:	str	r5, [lr, #4]
   1295c:	str	r1, [lr, #8]
   12960:	add	r0, r0, #1
   12964:	mov	r3, ip
   12968:	cmp	r8, r0
   1296c:	bgt	12938 <table_remove_column@@Base+0x2c>
   12970:	mov	r0, r6
   12974:	bl	13550 <table_get_row_length@@Base>
   12978:	subs	r9, r0, #0
   1297c:	ble	129e4 <table_remove_column@@Base+0xd8>
   12980:	lsl	sl, r7, #2
   12984:	mov	r5, #0
   12988:	sub	r4, r4, #1
   1298c:	mov	r2, r7
   12990:	mov	r1, r5
   12994:	mov	r0, r6
   12998:	bl	14c18 <table_cell_destroy@@Base>
   1299c:	mov	r1, r5
   129a0:	mov	r0, r6
   129a4:	bl	13710 <table_get_row_ptr@@Base>
   129a8:	cmp	r7, r8
   129ac:	bge	129d8 <table_remove_column@@Base+0xcc>
   129b0:	mov	r2, sl
   129b4:	mov	r3, r7
   129b8:	ldr	ip, [r0]
   129bc:	add	r1, r2, #4
   129c0:	ldr	lr, [ip, r1]
   129c4:	str	lr, [ip, r2]
   129c8:	add	r3, r3, #1
   129cc:	mov	r2, r1
   129d0:	cmp	r3, r4
   129d4:	bne	129b8 <table_remove_column@@Base+0xac>
   129d8:	add	r5, r5, #1
   129dc:	cmp	r9, r5
   129e0:	bne	1298c <table_remove_column@@Base+0x80>
   129e4:	ldr	r0, [r6, #4]
   129e8:	sub	r0, r0, #1
   129ec:	str	r0, [r6, #4]
   129f0:	ldr	r4, [r6, #8]
   129f4:	mov	r1, r4
   129f8:	bl	14e74 <table_cell_nullify@@Base+0x218>
   129fc:	cmp	r1, #0
   12a00:	beq	12a20 <table_remove_column@@Base+0x114>
   12a04:	mov	r3, #16
   12a08:	mov	r2, r7
   12a0c:	mvn	r1, #0
   12a10:	mov	r0, r6
   12a14:	bl	1268c <table_notify@@Base>
   12a18:	mov	r0, #0
   12a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a20:	ldr	r1, [r6, #12]
   12a24:	sub	r1, r1, r4
   12a28:	str	r1, [r6, #12]
   12a2c:	add	r1, r1, r1, lsl #1
   12a30:	lsl	r1, r1, #2
   12a34:	ldr	r0, [r6]
   12a38:	bl	11ae4 <realloc@plt>
   12a3c:	str	r0, [r6]
   12a40:	mov	r0, r6
   12a44:	bl	13550 <table_get_row_length@@Base>
   12a48:	subs	r8, r0, #0
   12a4c:	ble	12a04 <table_remove_column@@Base+0xf8>
   12a50:	mov	r4, #0
   12a54:	mov	r1, r4
   12a58:	mov	r0, r6
   12a5c:	bl	13710 <table_get_row_ptr@@Base>
   12a60:	mov	r5, r0
   12a64:	ldr	r1, [r6, #12]
   12a68:	lsl	r1, r1, #2
   12a6c:	ldr	r0, [r0]
   12a70:	bl	11ae4 <realloc@plt>
   12a74:	str	r0, [r5]
   12a78:	add	r4, r4, #1
   12a7c:	cmp	r8, r4
   12a80:	bne	12a54 <table_remove_column@@Base+0x148>
   12a84:	b	12a04 <table_remove_column@@Base+0xf8>

00012a88 <table_get_column_name@@Base>:
   12a88:	ldr	r3, [r0]
   12a8c:	add	r1, r1, r1, lsl #1
   12a90:	ldr	r0, [r3, r1, lsl #2]
   12a94:	bx	lr

00012a98 <table_get_col_ptr@@Base>:
   12a98:	add	r1, r1, r1, lsl #1
   12a9c:	ldr	r0, [r0]
   12aa0:	add	r0, r0, r1, lsl #2
   12aa4:	bx	lr

00012aa8 <table_get_column_compare_function@@Base>:
   12aa8:	ldr	r3, [r0]
   12aac:	add	r1, r1, r1, lsl #1
   12ab0:	add	r3, r3, r1, lsl #2
   12ab4:	ldr	r0, [r3, #8]
   12ab8:	bx	lr

00012abc <table_set_column_compare_function@@Base>:
   12abc:	ldr	r3, [r0]
   12ac0:	add	r1, r1, r1, lsl #1
   12ac4:	add	r3, r3, r1, lsl #2
   12ac8:	str	r2, [r3, #8]
   12acc:	bx	lr

00012ad0 <table_compare_bool@@Base>:
   12ad0:	cmp	r0, #0
   12ad4:	beq	12b00 <table_compare_bool@@Base+0x30>
   12ad8:	cmp	r1, #0
   12adc:	beq	12b0c <table_compare_bool@@Base+0x3c>
   12ae0:	ldrb	r0, [r0]
   12ae4:	ldrb	r1, [r1]
   12ae8:	cmp	r0, r1
   12aec:	bgt	12b14 <table_compare_bool@@Base+0x44>
   12af0:	cmp	r0, r1
   12af4:	movge	r0, #0
   12af8:	mvnlt	r0, #0
   12afc:	bx	lr
   12b00:	adds	r0, r1, #0
   12b04:	mvnne	r0, #0
   12b08:	bx	lr
   12b0c:	mov	r0, #1
   12b10:	bx	lr
   12b14:	mov	r0, #1
   12b18:	bx	lr

00012b1c <table_compare_int@@Base>:
   12b1c:	cmp	r0, #0
   12b20:	beq	12b4c <table_compare_int@@Base+0x30>
   12b24:	cmp	r1, #0
   12b28:	beq	12b58 <table_compare_int@@Base+0x3c>
   12b2c:	ldr	r0, [r0]
   12b30:	ldr	r1, [r1]
   12b34:	cmp	r0, r1
   12b38:	bgt	12b60 <table_compare_int@@Base+0x44>
   12b3c:	cmp	r0, r1
   12b40:	movge	r0, #0
   12b44:	mvnlt	r0, #0
   12b48:	bx	lr
   12b4c:	adds	r0, r1, #0
   12b50:	mvnne	r0, #0
   12b54:	bx	lr
   12b58:	mov	r0, #1
   12b5c:	bx	lr
   12b60:	mov	r0, #1
   12b64:	bx	lr

00012b68 <table_compare_uint@@Base>:
   12b68:	cmp	r0, #0
   12b6c:	beq	12b98 <table_compare_uint@@Base+0x30>
   12b70:	cmp	r1, #0
   12b74:	beq	12ba4 <table_compare_uint@@Base+0x3c>
   12b78:	ldr	r0, [r0]
   12b7c:	ldr	r1, [r1]
   12b80:	cmp	r0, r1
   12b84:	bhi	12bac <table_compare_uint@@Base+0x44>
   12b88:	cmp	r0, r1
   12b8c:	movcs	r0, #0
   12b90:	mvncc	r0, #0
   12b94:	bx	lr
   12b98:	adds	r0, r1, #0
   12b9c:	mvnne	r0, #0
   12ba0:	bx	lr
   12ba4:	mov	r0, #1
   12ba8:	bx	lr
   12bac:	mov	r0, #1
   12bb0:	bx	lr

00012bb4 <table_compare_int8@@Base>:
   12bb4:	cmp	r0, #0
   12bb8:	beq	12be4 <table_compare_int8@@Base+0x30>
   12bbc:	cmp	r1, #0
   12bc0:	beq	12bf0 <table_compare_int8@@Base+0x3c>
   12bc4:	ldrsb	r0, [r0]
   12bc8:	ldrsb	r1, [r1]
   12bcc:	cmp	r0, r1
   12bd0:	bgt	12bf8 <table_compare_int8@@Base+0x44>
   12bd4:	cmp	r0, r1
   12bd8:	movge	r0, #0
   12bdc:	mvnlt	r0, #0
   12be0:	bx	lr
   12be4:	adds	r0, r1, #0
   12be8:	mvnne	r0, #0
   12bec:	bx	lr
   12bf0:	mov	r0, #1
   12bf4:	bx	lr
   12bf8:	mov	r0, #1
   12bfc:	bx	lr

00012c00 <table_compare_uint8@@Base>:
   12c00:	cmp	r0, #0
   12c04:	beq	12c30 <table_compare_uint8@@Base+0x30>
   12c08:	cmp	r1, #0
   12c0c:	beq	12c3c <table_compare_uint8@@Base+0x3c>
   12c10:	ldrb	r0, [r0]
   12c14:	ldrb	r1, [r1]
   12c18:	cmp	r0, r1
   12c1c:	bhi	12c44 <table_compare_uint8@@Base+0x44>
   12c20:	cmp	r0, r1
   12c24:	movcs	r0, #0
   12c28:	mvncc	r0, #0
   12c2c:	bx	lr
   12c30:	adds	r0, r1, #0
   12c34:	mvnne	r0, #0
   12c38:	bx	lr
   12c3c:	mov	r0, #1
   12c40:	bx	lr
   12c44:	mov	r0, #1
   12c48:	bx	lr

00012c4c <table_compare_int16@@Base>:
   12c4c:	cmp	r0, #0
   12c50:	beq	12c7c <table_compare_int16@@Base+0x30>
   12c54:	cmp	r1, #0
   12c58:	beq	12c88 <table_compare_int16@@Base+0x3c>
   12c5c:	ldrsh	r0, [r0]
   12c60:	ldrsh	r1, [r1]
   12c64:	cmp	r0, r1
   12c68:	bgt	12c90 <table_compare_int16@@Base+0x44>
   12c6c:	cmp	r0, r1
   12c70:	movge	r0, #0
   12c74:	mvnlt	r0, #0
   12c78:	bx	lr
   12c7c:	adds	r0, r1, #0
   12c80:	mvnne	r0, #0
   12c84:	bx	lr
   12c88:	mov	r0, #1
   12c8c:	bx	lr
   12c90:	mov	r0, #1
   12c94:	bx	lr

00012c98 <table_compare_uint16@@Base>:
   12c98:	cmp	r0, #0
   12c9c:	beq	12cc8 <table_compare_uint16@@Base+0x30>
   12ca0:	cmp	r1, #0
   12ca4:	beq	12cd4 <table_compare_uint16@@Base+0x3c>
   12ca8:	ldrh	r0, [r0]
   12cac:	ldrh	r1, [r1]
   12cb0:	cmp	r0, r1
   12cb4:	bhi	12cdc <table_compare_uint16@@Base+0x44>
   12cb8:	cmp	r0, r1
   12cbc:	movcs	r0, #0
   12cc0:	mvncc	r0, #0
   12cc4:	bx	lr
   12cc8:	adds	r0, r1, #0
   12ccc:	mvnne	r0, #0
   12cd0:	bx	lr
   12cd4:	mov	r0, #1
   12cd8:	bx	lr
   12cdc:	mov	r0, #1
   12ce0:	bx	lr

00012ce4 <table_compare_int32@@Base>:
   12ce4:	cmp	r0, #0
   12ce8:	beq	12d14 <table_compare_int32@@Base+0x30>
   12cec:	cmp	r1, #0
   12cf0:	beq	12d20 <table_compare_int32@@Base+0x3c>
   12cf4:	ldr	r0, [r0]
   12cf8:	ldr	r1, [r1]
   12cfc:	cmp	r0, r1
   12d00:	bgt	12d28 <table_compare_int32@@Base+0x44>
   12d04:	cmp	r0, r1
   12d08:	movge	r0, #0
   12d0c:	mvnlt	r0, #0
   12d10:	bx	lr
   12d14:	adds	r0, r1, #0
   12d18:	mvnne	r0, #0
   12d1c:	bx	lr
   12d20:	mov	r0, #1
   12d24:	bx	lr
   12d28:	mov	r0, #1
   12d2c:	bx	lr

00012d30 <table_compare_uint32@@Base>:
   12d30:	cmp	r0, #0
   12d34:	beq	12d60 <table_compare_uint32@@Base+0x30>
   12d38:	cmp	r1, #0
   12d3c:	beq	12d6c <table_compare_uint32@@Base+0x3c>
   12d40:	ldr	r0, [r0]
   12d44:	ldr	r1, [r1]
   12d48:	cmp	r0, r1
   12d4c:	bhi	12d74 <table_compare_uint32@@Base+0x44>
   12d50:	cmp	r0, r1
   12d54:	movcs	r0, #0
   12d58:	mvncc	r0, #0
   12d5c:	bx	lr
   12d60:	adds	r0, r1, #0
   12d64:	mvnne	r0, #0
   12d68:	bx	lr
   12d6c:	mov	r0, #1
   12d70:	bx	lr
   12d74:	mov	r0, #1
   12d78:	bx	lr

00012d7c <table_compare_int64@@Base>:
   12d7c:	cmp	r0, #0
   12d80:	beq	12dc0 <table_compare_int64@@Base+0x44>
   12d84:	cmp	r1, #0
   12d88:	beq	12dcc <table_compare_int64@@Base+0x50>
   12d8c:	push	{r4, r5}
   12d90:	ldrd	r4, [r0]
   12d94:	ldrd	r2, [r1]
   12d98:	cmp	r2, r4
   12d9c:	sbcs	r1, r3, r5
   12da0:	movlt	r0, #1
   12da4:	blt	12db8 <table_compare_int64@@Base+0x3c>
   12da8:	cmp	r4, r2
   12dac:	sbcs	r3, r5, r3
   12db0:	mvnlt	r0, #0
   12db4:	movge	r0, #0
   12db8:	pop	{r4, r5}
   12dbc:	bx	lr
   12dc0:	adds	r0, r1, #0
   12dc4:	mvnne	r0, #0
   12dc8:	bx	lr
   12dcc:	mov	r0, #1
   12dd0:	bx	lr

00012dd4 <table_compare_uint64@@Base>:
   12dd4:	cmp	r0, #0
   12dd8:	beq	12e10 <table_compare_uint64@@Base+0x3c>
   12ddc:	cmp	r1, #0
   12de0:	beq	12e1c <table_compare_uint64@@Base+0x48>
   12de4:	push	{r4, r5}
   12de8:	ldrd	r4, [r0]
   12dec:	ldrd	r2, [r1]
   12df0:	cmp	r5, r3
   12df4:	cmpeq	r4, r2
   12df8:	movhi	r0, #1
   12dfc:	bhi	12e08 <table_compare_uint64@@Base+0x34>
   12e00:	mvncc	r0, #0
   12e04:	movcs	r0, #0
   12e08:	pop	{r4, r5}
   12e0c:	bx	lr
   12e10:	adds	r0, r1, #0
   12e14:	mvnne	r0, #0
   12e18:	bx	lr
   12e1c:	mov	r0, #1
   12e20:	bx	lr

00012e24 <table_compare_short@@Base>:
   12e24:	cmp	r0, #0
   12e28:	beq	12e54 <table_compare_short@@Base+0x30>
   12e2c:	cmp	r1, #0
   12e30:	beq	12e60 <table_compare_short@@Base+0x3c>
   12e34:	ldrsh	r0, [r0]
   12e38:	ldrsh	r1, [r1]
   12e3c:	cmp	r0, r1
   12e40:	bgt	12e68 <table_compare_short@@Base+0x44>
   12e44:	cmp	r0, r1
   12e48:	movge	r0, #0
   12e4c:	mvnlt	r0, #0
   12e50:	bx	lr
   12e54:	adds	r0, r1, #0
   12e58:	mvnne	r0, #0
   12e5c:	bx	lr
   12e60:	mov	r0, #1
   12e64:	bx	lr
   12e68:	mov	r0, #1
   12e6c:	bx	lr

00012e70 <table_compare_ushort@@Base>:
   12e70:	cmp	r0, #0
   12e74:	beq	12ea0 <table_compare_ushort@@Base+0x30>
   12e78:	cmp	r1, #0
   12e7c:	beq	12eac <table_compare_ushort@@Base+0x3c>
   12e80:	ldrh	r0, [r0]
   12e84:	ldrh	r1, [r1]
   12e88:	cmp	r0, r1
   12e8c:	bhi	12eb4 <table_compare_ushort@@Base+0x44>
   12e90:	cmp	r0, r1
   12e94:	movcs	r0, #0
   12e98:	mvncc	r0, #0
   12e9c:	bx	lr
   12ea0:	adds	r0, r1, #0
   12ea4:	mvnne	r0, #0
   12ea8:	bx	lr
   12eac:	mov	r0, #1
   12eb0:	bx	lr
   12eb4:	mov	r0, #1
   12eb8:	bx	lr

00012ebc <table_compare_long@@Base>:
   12ebc:	cmp	r0, #0
   12ec0:	beq	12eec <table_compare_long@@Base+0x30>
   12ec4:	cmp	r1, #0
   12ec8:	beq	12ef8 <table_compare_long@@Base+0x3c>
   12ecc:	ldr	r0, [r0]
   12ed0:	ldr	r1, [r1]
   12ed4:	cmp	r0, r1
   12ed8:	bgt	12f00 <table_compare_long@@Base+0x44>
   12edc:	cmp	r0, r1
   12ee0:	movge	r0, #0
   12ee4:	mvnlt	r0, #0
   12ee8:	bx	lr
   12eec:	adds	r0, r1, #0
   12ef0:	mvnne	r0, #0
   12ef4:	bx	lr
   12ef8:	mov	r0, #1
   12efc:	bx	lr
   12f00:	mov	r0, #1
   12f04:	bx	lr

00012f08 <table_compare_ulong@@Base>:
   12f08:	cmp	r0, #0
   12f0c:	beq	12f38 <table_compare_ulong@@Base+0x30>
   12f10:	cmp	r1, #0
   12f14:	beq	12f44 <table_compare_ulong@@Base+0x3c>
   12f18:	ldr	r0, [r0]
   12f1c:	ldr	r1, [r1]
   12f20:	cmp	r0, r1
   12f24:	bhi	12f4c <table_compare_ulong@@Base+0x44>
   12f28:	cmp	r0, r1
   12f2c:	movcs	r0, #0
   12f30:	mvncc	r0, #0
   12f34:	bx	lr
   12f38:	adds	r0, r1, #0
   12f3c:	mvnne	r0, #0
   12f40:	bx	lr
   12f44:	mov	r0, #1
   12f48:	bx	lr
   12f4c:	mov	r0, #1
   12f50:	bx	lr

00012f54 <table_compare_llong@@Base>:
   12f54:	cmp	r0, #0
   12f58:	beq	12f98 <table_compare_llong@@Base+0x44>
   12f5c:	cmp	r1, #0
   12f60:	beq	12fa4 <table_compare_llong@@Base+0x50>
   12f64:	push	{r4, r5}
   12f68:	ldrd	r4, [r0]
   12f6c:	ldrd	r2, [r1]
   12f70:	cmp	r2, r4
   12f74:	sbcs	r1, r3, r5
   12f78:	movlt	r0, #1
   12f7c:	blt	12f90 <table_compare_llong@@Base+0x3c>
   12f80:	cmp	r4, r2
   12f84:	sbcs	r3, r5, r3
   12f88:	mvnlt	r0, #0
   12f8c:	movge	r0, #0
   12f90:	pop	{r4, r5}
   12f94:	bx	lr
   12f98:	adds	r0, r1, #0
   12f9c:	mvnne	r0, #0
   12fa0:	bx	lr
   12fa4:	mov	r0, #1
   12fa8:	bx	lr

00012fac <table_compare_ullong@@Base>:
   12fac:	cmp	r0, #0
   12fb0:	beq	12fdc <table_compare_ullong@@Base+0x30>
   12fb4:	cmp	r1, #0
   12fb8:	beq	12fe8 <table_compare_ullong@@Base+0x3c>
   12fbc:	ldr	r0, [r0]
   12fc0:	ldr	r1, [r1]
   12fc4:	cmp	r0, r1
   12fc8:	bhi	12ff0 <table_compare_ullong@@Base+0x44>
   12fcc:	cmp	r0, r1
   12fd0:	movcs	r0, #0
   12fd4:	mvncc	r0, #0
   12fd8:	bx	lr
   12fdc:	adds	r0, r1, #0
   12fe0:	mvnne	r0, #0
   12fe4:	bx	lr
   12fe8:	mov	r0, #1
   12fec:	bx	lr
   12ff0:	mov	r0, #1
   12ff4:	bx	lr

00012ff8 <table_compare_float@@Base>:
   12ff8:	cmp	r0, #0
   12ffc:	beq	13028 <table_compare_float@@Base+0x30>
   13000:	cmp	r1, #0
   13004:	beq	13034 <table_compare_float@@Base+0x3c>
   13008:	vldr	s14, [r0]
   1300c:	vldr	s15, [r1]
   13010:	vcmpe.f32	s14, s15
   13014:	vmrs	APSR_nzcv, fpscr
   13018:	bgt	1303c <table_compare_float@@Base+0x44>
   1301c:	mvnmi	r0, #0
   13020:	movpl	r0, #0
   13024:	bx	lr
   13028:	adds	r0, r1, #0
   1302c:	mvnne	r0, #0
   13030:	bx	lr
   13034:	mov	r0, #1
   13038:	bx	lr
   1303c:	mov	r0, #1
   13040:	bx	lr

00013044 <table_compare_double@@Base>:
   13044:	cmp	r0, #0
   13048:	beq	13074 <table_compare_double@@Base+0x30>
   1304c:	cmp	r1, #0
   13050:	beq	13080 <table_compare_double@@Base+0x3c>
   13054:	vldr	d6, [r0]
   13058:	vldr	d7, [r1]
   1305c:	vcmpe.f64	d6, d7
   13060:	vmrs	APSR_nzcv, fpscr
   13064:	bgt	13088 <table_compare_double@@Base+0x44>
   13068:	mvnmi	r0, #0
   1306c:	movpl	r0, #0
   13070:	bx	lr
   13074:	adds	r0, r1, #0
   13078:	mvnne	r0, #0
   1307c:	bx	lr
   13080:	mov	r0, #1
   13084:	bx	lr
   13088:	mov	r0, #1
   1308c:	bx	lr

00013090 <table_compare_ldouble@@Base>:
   13090:	cmp	r0, #0
   13094:	beq	130c0 <table_compare_ldouble@@Base+0x30>
   13098:	cmp	r1, #0
   1309c:	beq	130cc <table_compare_ldouble@@Base+0x3c>
   130a0:	vldr	d6, [r0]
   130a4:	vldr	d7, [r1]
   130a8:	vcmpe.f64	d6, d7
   130ac:	vmrs	APSR_nzcv, fpscr
   130b0:	bgt	130d4 <table_compare_ldouble@@Base+0x44>
   130b4:	mvnmi	r0, #0
   130b8:	movpl	r0, #0
   130bc:	bx	lr
   130c0:	adds	r0, r1, #0
   130c4:	mvnne	r0, #0
   130c8:	bx	lr
   130cc:	mov	r0, #1
   130d0:	bx	lr
   130d4:	mov	r0, #1
   130d8:	bx	lr

000130dc <table_compare_char@@Base>:
   130dc:	cmp	r0, #0
   130e0:	beq	1310c <table_compare_char@@Base+0x30>
   130e4:	cmp	r1, #0
   130e8:	beq	13118 <table_compare_char@@Base+0x3c>
   130ec:	ldrb	r0, [r0]
   130f0:	ldrb	r1, [r1]
   130f4:	cmp	r0, r1
   130f8:	bhi	13120 <table_compare_char@@Base+0x44>
   130fc:	cmp	r0, r1
   13100:	movcs	r0, #0
   13104:	mvncc	r0, #0
   13108:	bx	lr
   1310c:	adds	r0, r1, #0
   13110:	mvnne	r0, #0
   13114:	bx	lr
   13118:	mov	r0, #1
   1311c:	bx	lr
   13120:	mov	r0, #1
   13124:	bx	lr

00013128 <table_compare_uchar@@Base>:
   13128:	cmp	r0, #0
   1312c:	beq	13158 <table_compare_uchar@@Base+0x30>
   13130:	cmp	r1, #0
   13134:	beq	13164 <table_compare_uchar@@Base+0x3c>
   13138:	ldrb	r0, [r0]
   1313c:	ldrb	r1, [r1]
   13140:	cmp	r0, r1
   13144:	bhi	1316c <table_compare_uchar@@Base+0x44>
   13148:	cmp	r0, r1
   1314c:	movcs	r0, #0
   13150:	mvncc	r0, #0
   13154:	bx	lr
   13158:	adds	r0, r1, #0
   1315c:	mvnne	r0, #0
   13160:	bx	lr
   13164:	mov	r0, #1
   13168:	bx	lr
   1316c:	mov	r0, #1
   13170:	bx	lr

00013174 <table_compare_ptr@@Base>:
   13174:	cmp	r0, r1
   13178:	bhi	1318c <table_compare_ptr@@Base+0x18>
   1317c:	cmp	r0, r1
   13180:	movcs	r0, #0
   13184:	mvncc	r0, #0
   13188:	bx	lr
   1318c:	mov	r0, #1
   13190:	bx	lr

00013194 <table_compare_string@@Base>:
   13194:	cmp	r0, #0
   13198:	beq	131b0 <table_compare_string@@Base+0x1c>
   1319c:	cmp	r1, #0
   131a0:	beq	131bc <table_compare_string@@Base+0x28>
   131a4:	push	{r4, lr}
   131a8:	bl	11ac0 <strcmp@plt>
   131ac:	pop	{r4, pc}
   131b0:	adds	r0, r1, #0
   131b4:	mvnne	r0, #0
   131b8:	bx	lr
   131bc:	mov	r0, #1
   131c0:	bx	lr

000131c4 <table_get_default_compare_function_for_data_type@@Base>:
   131c4:	cmp	r0, #23
   131c8:	ldrls	pc, [pc, r0, lsl #2]
   131cc:	b	132f0 <table_get_default_compare_function_for_data_type@@Base+0x12c>
   131d0:	andeq	r3, r1, r0, lsr r2
   131d4:	andeq	r3, r1, r8, lsr r2
   131d8:	andeq	r3, r1, r0, asr #4
   131dc:	andeq	r3, r1, r8, asr #4
   131e0:	andeq	r3, r1, r0, asr r2
   131e4:	andeq	r3, r1, r8, asr r2
   131e8:	andeq	r3, r1, r0, ror #4
   131ec:	andeq	r3, r1, r8, ror #4
   131f0:	andeq	r3, r1, r0, ror r2
   131f4:	andeq	r3, r1, r8, ror r2
   131f8:	andeq	r3, r1, r0, lsl #5
   131fc:	andeq	r3, r1, r8, lsl #5
   13200:	muleq	r1, r0, r2
   13204:	muleq	r1, r8, r2
   13208:	andeq	r3, r1, r0, lsr #5
   1320c:	andeq	r3, r1, r8, lsr #5
   13210:			; <UNDEFINED> instruction: 0x000132b8
   13214:	andeq	r3, r1, r0, asr #5
   13218:	andeq	r3, r1, r8, asr #5
   1321c:	ldrdeq	r3, [r1], -r8
   13220:	andeq	r3, r1, r0, ror #5
   13224:			; <UNDEFINED> instruction: 0x000132b0
   13228:	ldrdeq	r3, [r1], -r0
   1322c:	andeq	r3, r1, r8, ror #5
   13230:	ldr	r0, [pc, #192]	; 132f8 <table_get_default_compare_function_for_data_type@@Base+0x134>
   13234:	bx	lr
   13238:	ldr	r0, [pc, #188]	; 132fc <table_get_default_compare_function_for_data_type@@Base+0x138>
   1323c:	bx	lr
   13240:	ldr	r0, [pc, #184]	; 13300 <table_get_default_compare_function_for_data_type@@Base+0x13c>
   13244:	bx	lr
   13248:	ldr	r0, [pc, #180]	; 13304 <table_get_default_compare_function_for_data_type@@Base+0x140>
   1324c:	bx	lr
   13250:	ldr	r0, [pc, #176]	; 13308 <table_get_default_compare_function_for_data_type@@Base+0x144>
   13254:	bx	lr
   13258:	ldr	r0, [pc, #172]	; 1330c <table_get_default_compare_function_for_data_type@@Base+0x148>
   1325c:	bx	lr
   13260:	ldr	r0, [pc, #168]	; 13310 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   13264:	bx	lr
   13268:	ldr	r0, [pc, #164]	; 13314 <table_get_default_compare_function_for_data_type@@Base+0x150>
   1326c:	bx	lr
   13270:	ldr	r0, [pc, #160]	; 13318 <table_get_default_compare_function_for_data_type@@Base+0x154>
   13274:	bx	lr
   13278:	ldr	r0, [pc, #156]	; 1331c <table_get_default_compare_function_for_data_type@@Base+0x158>
   1327c:	bx	lr
   13280:	ldr	r0, [pc, #152]	; 13320 <table_get_default_compare_function_for_data_type@@Base+0x15c>
   13284:	bx	lr
   13288:	ldr	r0, [pc, #148]	; 13324 <table_get_default_compare_function_for_data_type@@Base+0x160>
   1328c:	bx	lr
   13290:	ldr	r0, [pc, #144]	; 13328 <table_get_default_compare_function_for_data_type@@Base+0x164>
   13294:	bx	lr
   13298:	ldr	r0, [pc, #140]	; 1332c <table_get_default_compare_function_for_data_type@@Base+0x168>
   1329c:	bx	lr
   132a0:	ldr	r0, [pc, #136]	; 13330 <table_get_default_compare_function_for_data_type@@Base+0x16c>
   132a4:	bx	lr
   132a8:	ldr	r0, [pc, #132]	; 13334 <table_get_default_compare_function_for_data_type@@Base+0x170>
   132ac:	bx	lr
   132b0:	ldr	r0, [pc, #128]	; 13338 <table_get_default_compare_function_for_data_type@@Base+0x174>
   132b4:	bx	lr
   132b8:	ldr	r0, [pc, #124]	; 1333c <table_get_default_compare_function_for_data_type@@Base+0x178>
   132bc:	bx	lr
   132c0:	ldr	r0, [pc, #120]	; 13340 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   132c4:	bx	lr
   132c8:	ldr	r0, [pc, #116]	; 13344 <table_get_default_compare_function_for_data_type@@Base+0x180>
   132cc:	bx	lr
   132d0:	ldr	r0, [pc, #112]	; 13348 <table_get_default_compare_function_for_data_type@@Base+0x184>
   132d4:	bx	lr
   132d8:	ldr	r0, [pc, #108]	; 1334c <table_get_default_compare_function_for_data_type@@Base+0x188>
   132dc:	bx	lr
   132e0:	ldr	r0, [pc, #104]	; 13350 <table_get_default_compare_function_for_data_type@@Base+0x18c>
   132e4:	bx	lr
   132e8:	ldr	r0, [pc, #100]	; 13354 <table_get_default_compare_function_for_data_type@@Base+0x190>
   132ec:	bx	lr
   132f0:	mov	r0, #0
   132f4:	bx	lr
   132f8:	andeq	r2, r1, ip, lsl fp
   132fc:	andeq	r2, r1, r8, ror #22
   13300:			; <UNDEFINED> instruction: 0x00012bb4
   13304:	andeq	r2, r1, r0, lsl #24
   13308:	andeq	r2, r1, ip, asr #24
   1330c:	muleq	r1, r8, ip
   13310:	andeq	r2, r1, r4, ror #25
   13314:	andeq	r2, r1, r0, lsr sp
   13318:	andeq	r2, r1, ip, ror sp
   1331c:	ldrdeq	r2, [r1], -r4
   13320:	andeq	r2, r1, r4, lsr #28
   13324:	andeq	r2, r1, r0, ror lr
   13328:			; <UNDEFINED> instruction: 0x00012ebc
   1332c:	andeq	r2, r1, r8, lsl #30
   13330:	andeq	r2, r1, r4, asr pc
   13334:	andeq	r2, r1, ip, lsr #31
   13338:	muleq	r1, r4, r1
   1333c:	strdeq	r2, [r1], -r8
   13340:	andeq	r3, r1, r4, asr #32
   13344:	muleq	r1, r0, r0
   13348:	ldrdeq	r2, [r1], -r0
   1334c:	ldrdeq	r3, [r1], -ip
   13350:	andeq	r3, r1, r8, lsr #2
   13354:	andeq	r3, r1, r4, ror r1

00013358 <table_get@@Base>:
   13358:	push	{r4, lr}
   1335c:	bl	14bec <table_get_cell_ptr@@Base>
   13360:	ldr	r0, [r0]
   13364:	pop	{r4, pc}

00013368 <table_get_bool@@Base>:
   13368:	push	{r4, lr}
   1336c:	bl	13358 <table_get@@Base>
   13370:	ldrb	r0, [r0]
   13374:	pop	{r4, pc}

00013378 <table_get_int@@Base>:
   13378:	push	{r4, lr}
   1337c:	bl	13358 <table_get@@Base>
   13380:	ldr	r0, [r0]
   13384:	pop	{r4, pc}

00013388 <table_get_uint@@Base>:
   13388:	push	{r4, lr}
   1338c:	bl	13358 <table_get@@Base>
   13390:	ldr	r0, [r0]
   13394:	pop	{r4, pc}

00013398 <table_get_int8@@Base>:
   13398:	push	{r4, lr}
   1339c:	bl	13358 <table_get@@Base>
   133a0:	ldrsb	r0, [r0]
   133a4:	pop	{r4, pc}

000133a8 <table_get_uint8@@Base>:
   133a8:	push	{r4, lr}
   133ac:	bl	13358 <table_get@@Base>
   133b0:	ldrb	r0, [r0]
   133b4:	pop	{r4, pc}

000133b8 <table_get_int16@@Base>:
   133b8:	push	{r4, lr}
   133bc:	bl	13358 <table_get@@Base>
   133c0:	ldrsh	r0, [r0]
   133c4:	pop	{r4, pc}

000133c8 <table_get_uint16@@Base>:
   133c8:	push	{r4, lr}
   133cc:	bl	13358 <table_get@@Base>
   133d0:	ldrh	r0, [r0]
   133d4:	pop	{r4, pc}

000133d8 <table_get_int32@@Base>:
   133d8:	push	{r4, lr}
   133dc:	bl	13358 <table_get@@Base>
   133e0:	ldr	r0, [r0]
   133e4:	pop	{r4, pc}

000133e8 <table_get_uint32@@Base>:
   133e8:	push	{r4, lr}
   133ec:	bl	13358 <table_get@@Base>
   133f0:	ldr	r0, [r0]
   133f4:	pop	{r4, pc}

000133f8 <table_get_int64@@Base>:
   133f8:	push	{r4, lr}
   133fc:	bl	13358 <table_get@@Base>
   13400:	ldrd	r0, [r0]
   13404:	pop	{r4, pc}

00013408 <table_get_uint64@@Base>:
   13408:	push	{r4, lr}
   1340c:	bl	13358 <table_get@@Base>
   13410:	ldrd	r0, [r0]
   13414:	pop	{r4, pc}

00013418 <table_get_short@@Base>:
   13418:	push	{r4, lr}
   1341c:	bl	13358 <table_get@@Base>
   13420:	ldrsh	r0, [r0]
   13424:	pop	{r4, pc}

00013428 <table_get_ushort@@Base>:
   13428:	push	{r4, lr}
   1342c:	bl	13358 <table_get@@Base>
   13430:	ldrh	r0, [r0]
   13434:	pop	{r4, pc}

00013438 <table_get_long@@Base>:
   13438:	push	{r4, lr}
   1343c:	bl	13358 <table_get@@Base>
   13440:	ldr	r0, [r0]
   13444:	pop	{r4, pc}

00013448 <table_get_ulong@@Base>:
   13448:	push	{r4, lr}
   1344c:	bl	13358 <table_get@@Base>
   13450:	ldr	r0, [r0]
   13454:	pop	{r4, pc}

00013458 <table_get_llong@@Base>:
   13458:	push	{r4, lr}
   1345c:	bl	13358 <table_get@@Base>
   13460:	ldrd	r0, [r0]
   13464:	pop	{r4, pc}

00013468 <table_get_ullong@@Base>:
   13468:	push	{r4, lr}
   1346c:	bl	13358 <table_get@@Base>
   13470:	ldrd	r0, [r0]
   13474:	pop	{r4, pc}

00013478 <table_get_float@@Base>:
   13478:	push	{r4, lr}
   1347c:	bl	13358 <table_get@@Base>
   13480:	vldr	s0, [r0]
   13484:	pop	{r4, pc}

00013488 <table_get_double@@Base>:
   13488:	push	{r4, lr}
   1348c:	bl	13358 <table_get@@Base>
   13490:	vldr	d0, [r0]
   13494:	pop	{r4, pc}

00013498 <table_get_ldouble@@Base>:
   13498:	push	{r4, lr}
   1349c:	bl	13358 <table_get@@Base>
   134a0:	vldr	d0, [r0]
   134a4:	pop	{r4, pc}

000134a8 <table_get_char@@Base>:
   134a8:	push	{r4, lr}
   134ac:	bl	13358 <table_get@@Base>
   134b0:	ldrb	r0, [r0]
   134b4:	pop	{r4, pc}

000134b8 <table_get_uchar@@Base>:
   134b8:	push	{r4, lr}
   134bc:	bl	13358 <table_get@@Base>
   134c0:	ldrb	r0, [r0]
   134c4:	pop	{r4, pc}

000134c8 <table_get_string@@Base>:
   134c8:	push	{r4, lr}
   134cc:	bl	13358 <table_get@@Base>
   134d0:	pop	{r4, pc}

000134d4 <table_get_ptr@@Base>:
   134d4:	push	{r4, lr}
   134d8:	bl	13358 <table_get@@Base>
   134dc:	pop	{r4, pc}

000134e0 <table_row_init@@Base>:
   134e0:	push	{r4, r5, r6, lr}
   134e4:	mov	r5, r1
   134e8:	ldr	r4, [r0, #16]
   134ec:	ldr	r0, [r0, #12]
   134f0:	lsl	r0, r0, #2
   134f4:	bl	11b08 <malloc@plt>
   134f8:	str	r0, [r4, r5, lsl #2]
   134fc:	pop	{r4, r5, r6, pc}

00013500 <table_row_destroy@@Base>:
   13500:	push	{r4, r5, r6, r7, r8, lr}
   13504:	mov	r6, r0
   13508:	mov	r5, r1
   1350c:	bl	1277c <table_get_column_length@@Base>
   13510:	ldr	r8, [r6, #16]
   13514:	subs	r7, r0, #0
   13518:	ble	1353c <table_row_destroy@@Base+0x3c>
   1351c:	mov	r4, #0
   13520:	mov	r2, r4
   13524:	mov	r1, r5
   13528:	mov	r0, r6
   1352c:	bl	14c18 <table_cell_destroy@@Base>
   13530:	add	r4, r4, #1
   13534:	cmp	r7, r4
   13538:	bne	13520 <table_row_destroy@@Base+0x20>
   1353c:	ldr	r0, [r8, r5, lsl #2]
   13540:	cmp	r0, #0
   13544:	popeq	{r4, r5, r6, r7, r8, pc}
   13548:	bl	11ad8 <free@plt>
   1354c:	pop	{r4, r5, r6, r7, r8, pc}

00013550 <table_get_row_length@@Base>:
   13550:	ldr	r0, [r0, #20]
   13554:	bx	lr

00013558 <table_add_row@@Base>:
   13558:	push	{r4, r5, r6, r7, r8, lr}
   1355c:	mov	r5, r0
   13560:	ldr	r4, [r0, #24]
   13564:	mov	r1, r4
   13568:	ldr	r0, [r0, #20]
   1356c:	bl	14e74 <table_cell_nullify@@Base+0x218>
   13570:	cmp	r1, #0
   13574:	beq	135e0 <table_add_row@@Base+0x88>
   13578:	ldr	r7, [r5, #20]
   1357c:	mov	r0, r5
   13580:	bl	1277c <table_get_column_length@@Base>
   13584:	mov	r6, r0
   13588:	mov	r1, r7
   1358c:	mov	r0, r5
   13590:	bl	134e0 <table_row_init@@Base>
   13594:	cmp	r6, #0
   13598:	ble	135bc <table_add_row@@Base+0x64>
   1359c:	mov	r4, #0
   135a0:	mov	r2, r4
   135a4:	mov	r1, r7
   135a8:	mov	r0, r5
   135ac:	bl	14c04 <table_cell_init@@Base>
   135b0:	add	r4, r4, #1
   135b4:	cmp	r6, r4
   135b8:	bne	135a0 <table_add_row@@Base+0x48>
   135bc:	mov	r3, #2
   135c0:	mvn	r2, #0
   135c4:	ldr	r1, [r5, #20]
   135c8:	mov	r0, r5
   135cc:	bl	1268c <table_notify@@Base>
   135d0:	ldr	r0, [r5, #20]
   135d4:	add	r3, r0, #1
   135d8:	str	r3, [r5, #20]
   135dc:	pop	{r4, r5, r6, r7, r8, pc}
   135e0:	ldr	r1, [r5, #28]
   135e4:	add	r1, r4, r1
   135e8:	str	r1, [r5, #28]
   135ec:	lsl	r1, r1, #2
   135f0:	ldr	r0, [r5, #16]
   135f4:	bl	11ae4 <realloc@plt>
   135f8:	str	r0, [r5, #16]
   135fc:	b	13578 <table_add_row@@Base+0x20>

00013600 <table_remove_row@@Base>:
   13600:	push	{r4, r5, r6, r7, r8, lr}
   13604:	mov	r5, r0
   13608:	mov	r6, r1
   1360c:	ldr	r7, [r0, #20]
   13610:	bl	1277c <table_get_column_length@@Base>
   13614:	subs	r8, r0, #0
   13618:	ble	13668 <table_remove_row@@Base+0x68>
   1361c:	mov	r4, #0
   13620:	b	13630 <table_remove_row@@Base+0x30>
   13624:	add	r4, r4, #1
   13628:	cmp	r8, r4
   1362c:	beq	13668 <table_remove_row@@Base+0x68>
   13630:	mov	r1, r4
   13634:	mov	r0, r5
   13638:	bl	127e4 <table_get_column_data_type@@Base>
   1363c:	cmp	r0, #23
   13640:	beq	13624 <table_remove_row@@Base+0x24>
   13644:	mov	r2, r4
   13648:	mov	r1, r6
   1364c:	mov	r0, r5
   13650:	bl	14bec <table_get_cell_ptr@@Base>
   13654:	ldr	r0, [r0]
   13658:	cmp	r0, #0
   1365c:	beq	13624 <table_remove_row@@Base+0x24>
   13660:	bl	11ad8 <free@plt>
   13664:	b	13624 <table_remove_row@@Base+0x24>
   13668:	lsl	r4, r6, #2
   1366c:	ldr	r3, [r5, #16]
   13670:	ldr	r0, [r3, r6, lsl #2]
   13674:	cmp	r0, #0
   13678:	beq	13680 <table_remove_row@@Base+0x80>
   1367c:	bl	11ad8 <free@plt>
   13680:	sub	r3, r7, #1
   13684:	cmp	r6, r3
   13688:	bge	136b4 <table_remove_row@@Base+0xb4>
   1368c:	mov	ip, r3
   13690:	mov	r3, r6
   13694:	ldr	r1, [r5, #16]
   13698:	add	r2, r4, #4
   1369c:	ldr	r0, [r1, r2]
   136a0:	str	r0, [r1, r4]
   136a4:	add	r3, r3, #1
   136a8:	mov	r4, r2
   136ac:	cmp	ip, r3
   136b0:	bne	13694 <table_remove_row@@Base+0x94>
   136b4:	ldr	r0, [r5, #20]
   136b8:	sub	r0, r0, #1
   136bc:	str	r0, [r5, #20]
   136c0:	ldr	r4, [r5, #24]
   136c4:	mov	r1, r4
   136c8:	bl	14e74 <table_cell_nullify@@Base+0x218>
   136cc:	cmp	r1, #0
   136d0:	beq	136f0 <table_remove_row@@Base+0xf0>
   136d4:	mov	r3, #4
   136d8:	mvn	r2, #0
   136dc:	mov	r1, r6
   136e0:	mov	r0, r5
   136e4:	bl	1268c <table_notify@@Base>
   136e8:	mov	r0, #0
   136ec:	pop	{r4, r5, r6, r7, r8, pc}
   136f0:	ldr	r1, [r5, #28]
   136f4:	sub	r1, r1, r4
   136f8:	str	r1, [r5, #28]
   136fc:	lsl	r1, r1, #2
   13700:	ldr	r0, [r5, #16]
   13704:	bl	11ae4 <realloc@plt>
   13708:	str	r0, [r5, #16]
   1370c:	b	136d4 <table_remove_row@@Base+0xd4>

00013710 <table_get_row_ptr@@Base>:
   13710:	ldr	r0, [r0, #16]
   13714:	add	r0, r0, r1, lsl #2
   13718:	bx	lr

0001371c <table_set_row_ptr@@Base>:
   1371c:	ldr	r3, [r0, #16]
   13720:	ldr	r2, [r2]
   13724:	str	r2, [r3, r1, lsl #2]
   13728:	bx	lr

0001372c <table_set@@Base>:
   1372c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13730:	mov	r5, r0
   13734:	mov	r9, r1
   13738:	mov	r6, r2
   1373c:	mov	r7, r3
   13740:	ldr	r4, [sp, #32]
   13744:	bl	14bec <table_get_cell_ptr@@Base>
   13748:	mov	r8, r0
   1374c:	mov	r1, r6
   13750:	mov	r0, r5
   13754:	bl	12a98 <table_get_col_ptr@@Base>
   13758:	cmp	r4, #23
   1375c:	ldrls	pc, [pc, r4, lsl #2]
   13760:	b	13d84 <table_set@@Base+0x658>
   13764:	andeq	r3, r1, r0, lsl #16
   13768:	andeq	r3, r1, ip, lsr r8
   1376c:	andeq	r3, r1, r8, ror r8
   13770:			; <UNDEFINED> instruction: 0x000138b4
   13774:	strdeq	r3, [r1], -r0
   13778:	andeq	r3, r1, ip, lsr #18
   1377c:	andeq	r3, r1, r8, ror #18
   13780:	andeq	r3, r1, r4, lsr #19
   13784:	andeq	r3, r1, r0, ror #19
   13788:	andeq	r3, r1, r8, lsr #20
   1378c:	andeq	r3, r1, ip, ror #20
   13790:	andeq	r3, r1, r8, lsr #21
   13794:	andeq	r3, r1, r4, ror #21
   13798:	andeq	r3, r1, r0, lsr #22
   1379c:	andeq	r3, r1, ip, asr fp
   137a0:	andeq	r3, r1, r0, lsr #23
   137a4:	andeq	r3, r1, r4, ror #23
   137a8:	andeq	r3, r1, r0, lsr #24
   137ac:	andeq	r3, r1, r4, ror #24
   137b0:	andeq	r3, r1, r0, ror #25
   137b4:	andeq	r3, r1, ip, lsl sp
   137b8:	andeq	r3, r1, r8, lsr #25
   137bc:	andeq	r3, r1, r4, asr #15
   137c0:	andeq	r3, r1, r8, asr sp
   137c4:	ldr	r3, [r0, #4]
   137c8:	cmp	r3, #22
   137cc:	bne	13a20 <table_set@@Base+0x2f4>
   137d0:	ldr	r0, [r8]
   137d4:	cmp	r0, #0
   137d8:	beq	137e8 <table_set@@Base+0xbc>
   137dc:	ldrb	r3, [r7]
   137e0:	strb	r3, [r0]
   137e4:	b	13d68 <table_set@@Base+0x63c>
   137e8:	mov	r0, #1
   137ec:	bl	11b08 <malloc@plt>
   137f0:	str	r0, [r8]
   137f4:	cmp	r0, #0
   137f8:	bne	137dc <table_set@@Base+0xb0>
   137fc:	b	13a20 <table_set@@Base+0x2f4>
   13800:	ldr	r3, [r0, #4]
   13804:	cmp	r3, #0
   13808:	bne	13a20 <table_set@@Base+0x2f4>
   1380c:	ldr	r0, [r8]
   13810:	cmp	r0, #0
   13814:	beq	13824 <table_set@@Base+0xf8>
   13818:	ldr	r3, [r7]
   1381c:	str	r3, [r0]
   13820:	b	13d68 <table_set@@Base+0x63c>
   13824:	mov	r0, #4
   13828:	bl	11b08 <malloc@plt>
   1382c:	str	r0, [r8]
   13830:	cmp	r0, #0
   13834:	bne	13818 <table_set@@Base+0xec>
   13838:	b	13a20 <table_set@@Base+0x2f4>
   1383c:	ldr	r3, [r0, #4]
   13840:	cmp	r3, #1
   13844:	bne	13a20 <table_set@@Base+0x2f4>
   13848:	ldr	r0, [r8]
   1384c:	cmp	r0, #0
   13850:	beq	13860 <table_set@@Base+0x134>
   13854:	ldr	r3, [r7]
   13858:	str	r3, [r0]
   1385c:	b	13d68 <table_set@@Base+0x63c>
   13860:	mov	r0, #4
   13864:	bl	11b08 <malloc@plt>
   13868:	str	r0, [r8]
   1386c:	cmp	r0, #0
   13870:	bne	13854 <table_set@@Base+0x128>
   13874:	b	13a20 <table_set@@Base+0x2f4>
   13878:	ldr	r3, [r0, #4]
   1387c:	cmp	r3, #2
   13880:	bne	13a20 <table_set@@Base+0x2f4>
   13884:	ldr	r0, [r8]
   13888:	cmp	r0, #0
   1388c:	beq	1389c <table_set@@Base+0x170>
   13890:	ldrb	r3, [r7]
   13894:	strb	r3, [r0]
   13898:	b	13d68 <table_set@@Base+0x63c>
   1389c:	mov	r0, #1
   138a0:	bl	11b08 <malloc@plt>
   138a4:	str	r0, [r8]
   138a8:	cmp	r0, #0
   138ac:	bne	13890 <table_set@@Base+0x164>
   138b0:	b	13a20 <table_set@@Base+0x2f4>
   138b4:	ldr	r3, [r0, #4]
   138b8:	cmp	r3, #3
   138bc:	bne	13a20 <table_set@@Base+0x2f4>
   138c0:	ldr	r0, [r8]
   138c4:	cmp	r0, #0
   138c8:	beq	138d8 <table_set@@Base+0x1ac>
   138cc:	ldrb	r3, [r7]
   138d0:	strb	r3, [r0]
   138d4:	b	13d68 <table_set@@Base+0x63c>
   138d8:	mov	r0, #1
   138dc:	bl	11b08 <malloc@plt>
   138e0:	str	r0, [r8]
   138e4:	cmp	r0, #0
   138e8:	bne	138cc <table_set@@Base+0x1a0>
   138ec:	b	13a20 <table_set@@Base+0x2f4>
   138f0:	ldr	r3, [r0, #4]
   138f4:	cmp	r3, #4
   138f8:	bne	13a20 <table_set@@Base+0x2f4>
   138fc:	ldr	r0, [r8]
   13900:	cmp	r0, #0
   13904:	beq	13914 <table_set@@Base+0x1e8>
   13908:	ldrh	r3, [r7]
   1390c:	strh	r3, [r0]
   13910:	b	13d68 <table_set@@Base+0x63c>
   13914:	mov	r0, #2
   13918:	bl	11b08 <malloc@plt>
   1391c:	str	r0, [r8]
   13920:	cmp	r0, #0
   13924:	bne	13908 <table_set@@Base+0x1dc>
   13928:	b	13a20 <table_set@@Base+0x2f4>
   1392c:	ldr	r3, [r0, #4]
   13930:	cmp	r3, #5
   13934:	bne	13a20 <table_set@@Base+0x2f4>
   13938:	ldr	r0, [r8]
   1393c:	cmp	r0, #0
   13940:	beq	13950 <table_set@@Base+0x224>
   13944:	ldrh	r3, [r7]
   13948:	strh	r3, [r0]
   1394c:	b	13d68 <table_set@@Base+0x63c>
   13950:	mov	r0, #2
   13954:	bl	11b08 <malloc@plt>
   13958:	str	r0, [r8]
   1395c:	cmp	r0, #0
   13960:	bne	13944 <table_set@@Base+0x218>
   13964:	b	13a20 <table_set@@Base+0x2f4>
   13968:	ldr	r3, [r0, #4]
   1396c:	cmp	r3, #6
   13970:	bne	13a20 <table_set@@Base+0x2f4>
   13974:	ldr	r0, [r8]
   13978:	cmp	r0, #0
   1397c:	beq	1398c <table_set@@Base+0x260>
   13980:	ldr	r3, [r7]
   13984:	str	r3, [r0]
   13988:	b	13d68 <table_set@@Base+0x63c>
   1398c:	mov	r0, #4
   13990:	bl	11b08 <malloc@plt>
   13994:	str	r0, [r8]
   13998:	cmp	r0, #0
   1399c:	bne	13980 <table_set@@Base+0x254>
   139a0:	b	13a20 <table_set@@Base+0x2f4>
   139a4:	ldr	r3, [r0, #4]
   139a8:	cmp	r3, #7
   139ac:	bne	13a20 <table_set@@Base+0x2f4>
   139b0:	ldr	r0, [r8]
   139b4:	cmp	r0, #0
   139b8:	beq	139c8 <table_set@@Base+0x29c>
   139bc:	ldr	r3, [r7]
   139c0:	str	r3, [r0]
   139c4:	b	13d68 <table_set@@Base+0x63c>
   139c8:	mov	r0, #4
   139cc:	bl	11b08 <malloc@plt>
   139d0:	str	r0, [r8]
   139d4:	cmp	r0, #0
   139d8:	bne	139bc <table_set@@Base+0x290>
   139dc:	b	13a20 <table_set@@Base+0x2f4>
   139e0:	ldr	r3, [r0, #4]
   139e4:	cmp	r3, #8
   139e8:	bne	13a20 <table_set@@Base+0x2f4>
   139ec:	ldr	r0, [r8]
   139f0:	cmp	r0, #0
   139f4:	beq	13a0c <table_set@@Base+0x2e0>
   139f8:	ldr	r2, [r7]
   139fc:	ldr	r3, [r7, #4]
   13a00:	str	r2, [r0]
   13a04:	str	r3, [r0, #4]
   13a08:	b	13d68 <table_set@@Base+0x63c>
   13a0c:	mov	r0, #8
   13a10:	bl	11b08 <malloc@plt>
   13a14:	str	r0, [r8]
   13a18:	cmp	r0, #0
   13a1c:	bne	139f8 <table_set@@Base+0x2cc>
   13a20:	mvn	r0, #0
   13a24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a28:	ldr	r3, [r0, #4]
   13a2c:	cmp	r3, #9
   13a30:	bne	13a20 <table_set@@Base+0x2f4>
   13a34:	ldr	r0, [r8]
   13a38:	cmp	r0, #0
   13a3c:	beq	13a54 <table_set@@Base+0x328>
   13a40:	ldr	r2, [r7]
   13a44:	ldr	r3, [r7, #4]
   13a48:	str	r2, [r0]
   13a4c:	str	r3, [r0, #4]
   13a50:	b	13d68 <table_set@@Base+0x63c>
   13a54:	mov	r0, #8
   13a58:	bl	11b08 <malloc@plt>
   13a5c:	str	r0, [r8]
   13a60:	cmp	r0, #0
   13a64:	bne	13a40 <table_set@@Base+0x314>
   13a68:	b	13a20 <table_set@@Base+0x2f4>
   13a6c:	ldr	r3, [r0, #4]
   13a70:	cmp	r3, #10
   13a74:	bne	13a20 <table_set@@Base+0x2f4>
   13a78:	ldr	r0, [r8]
   13a7c:	cmp	r0, #0
   13a80:	beq	13a90 <table_set@@Base+0x364>
   13a84:	ldrh	r3, [r7]
   13a88:	strh	r3, [r0]
   13a8c:	b	13d68 <table_set@@Base+0x63c>
   13a90:	mov	r0, #2
   13a94:	bl	11b08 <malloc@plt>
   13a98:	str	r0, [r8]
   13a9c:	cmp	r0, #0
   13aa0:	bne	13a84 <table_set@@Base+0x358>
   13aa4:	b	13a20 <table_set@@Base+0x2f4>
   13aa8:	ldr	r3, [r0, #4]
   13aac:	cmp	r3, #11
   13ab0:	bne	13a20 <table_set@@Base+0x2f4>
   13ab4:	ldr	r0, [r8]
   13ab8:	cmp	r0, #0
   13abc:	beq	13acc <table_set@@Base+0x3a0>
   13ac0:	ldrh	r3, [r7]
   13ac4:	strh	r3, [r0]
   13ac8:	b	13d68 <table_set@@Base+0x63c>
   13acc:	mov	r0, #2
   13ad0:	bl	11b08 <malloc@plt>
   13ad4:	str	r0, [r8]
   13ad8:	cmp	r0, #0
   13adc:	bne	13ac0 <table_set@@Base+0x394>
   13ae0:	b	13a20 <table_set@@Base+0x2f4>
   13ae4:	ldr	r3, [r0, #4]
   13ae8:	cmp	r3, #12
   13aec:	bne	13a20 <table_set@@Base+0x2f4>
   13af0:	ldr	r0, [r8]
   13af4:	cmp	r0, #0
   13af8:	beq	13b08 <table_set@@Base+0x3dc>
   13afc:	ldr	r3, [r7]
   13b00:	str	r3, [r0]
   13b04:	b	13d68 <table_set@@Base+0x63c>
   13b08:	mov	r0, #4
   13b0c:	bl	11b08 <malloc@plt>
   13b10:	str	r0, [r8]
   13b14:	cmp	r0, #0
   13b18:	bne	13afc <table_set@@Base+0x3d0>
   13b1c:	b	13a20 <table_set@@Base+0x2f4>
   13b20:	ldr	r3, [r0, #4]
   13b24:	cmp	r3, #13
   13b28:	bne	13a20 <table_set@@Base+0x2f4>
   13b2c:	ldr	r0, [r8]
   13b30:	cmp	r0, #0
   13b34:	beq	13b44 <table_set@@Base+0x418>
   13b38:	ldr	r3, [r7]
   13b3c:	str	r3, [r0]
   13b40:	b	13d68 <table_set@@Base+0x63c>
   13b44:	mov	r0, #4
   13b48:	bl	11b08 <malloc@plt>
   13b4c:	str	r0, [r8]
   13b50:	cmp	r0, #0
   13b54:	bne	13b38 <table_set@@Base+0x40c>
   13b58:	b	13a20 <table_set@@Base+0x2f4>
   13b5c:	ldr	r3, [r0, #4]
   13b60:	cmp	r3, #14
   13b64:	bne	13a20 <table_set@@Base+0x2f4>
   13b68:	ldr	r0, [r8]
   13b6c:	cmp	r0, #0
   13b70:	beq	13b88 <table_set@@Base+0x45c>
   13b74:	ldr	r2, [r7]
   13b78:	ldr	r3, [r7, #4]
   13b7c:	str	r2, [r0]
   13b80:	str	r3, [r0, #4]
   13b84:	b	13d68 <table_set@@Base+0x63c>
   13b88:	mov	r0, #8
   13b8c:	bl	11b08 <malloc@plt>
   13b90:	str	r0, [r8]
   13b94:	cmp	r0, #0
   13b98:	bne	13b74 <table_set@@Base+0x448>
   13b9c:	b	13a20 <table_set@@Base+0x2f4>
   13ba0:	ldr	r3, [r0, #4]
   13ba4:	cmp	r3, #15
   13ba8:	bne	13a20 <table_set@@Base+0x2f4>
   13bac:	ldr	r0, [r8]
   13bb0:	cmp	r0, #0
   13bb4:	beq	13bcc <table_set@@Base+0x4a0>
   13bb8:	ldr	r2, [r7]
   13bbc:	ldr	r3, [r7, #4]
   13bc0:	str	r2, [r0]
   13bc4:	str	r3, [r0, #4]
   13bc8:	b	13d68 <table_set@@Base+0x63c>
   13bcc:	mov	r0, #8
   13bd0:	bl	11b08 <malloc@plt>
   13bd4:	str	r0, [r8]
   13bd8:	cmp	r0, #0
   13bdc:	bne	13bb8 <table_set@@Base+0x48c>
   13be0:	b	13a20 <table_set@@Base+0x2f4>
   13be4:	ldr	r3, [r0, #4]
   13be8:	cmp	r3, #16
   13bec:	bne	13a20 <table_set@@Base+0x2f4>
   13bf0:	ldr	r0, [r8]
   13bf4:	cmp	r0, #0
   13bf8:	beq	13c08 <table_set@@Base+0x4dc>
   13bfc:	ldr	r3, [r7]
   13c00:	str	r3, [r0]
   13c04:	b	13d68 <table_set@@Base+0x63c>
   13c08:	mov	r0, #4
   13c0c:	bl	11b08 <malloc@plt>
   13c10:	str	r0, [r8]
   13c14:	cmp	r0, #0
   13c18:	bne	13bfc <table_set@@Base+0x4d0>
   13c1c:	b	13a20 <table_set@@Base+0x2f4>
   13c20:	ldr	r3, [r0, #4]
   13c24:	cmp	r3, #17
   13c28:	bne	13a20 <table_set@@Base+0x2f4>
   13c2c:	ldr	r0, [r8]
   13c30:	cmp	r0, #0
   13c34:	beq	13c4c <table_set@@Base+0x520>
   13c38:	ldr	r2, [r7]
   13c3c:	ldr	r3, [r7, #4]
   13c40:	str	r2, [r0]
   13c44:	str	r3, [r0, #4]
   13c48:	b	13d68 <table_set@@Base+0x63c>
   13c4c:	mov	r0, #8
   13c50:	bl	11b08 <malloc@plt>
   13c54:	str	r0, [r8]
   13c58:	cmp	r0, #0
   13c5c:	bne	13c38 <table_set@@Base+0x50c>
   13c60:	b	13a20 <table_set@@Base+0x2f4>
   13c64:	ldr	r3, [r0, #4]
   13c68:	cmp	r3, #18
   13c6c:	bne	13a20 <table_set@@Base+0x2f4>
   13c70:	ldr	r0, [r8]
   13c74:	cmp	r0, #0
   13c78:	beq	13c90 <table_set@@Base+0x564>
   13c7c:	ldr	r2, [r7]
   13c80:	ldr	r3, [r7, #4]
   13c84:	str	r2, [r0]
   13c88:	str	r3, [r0, #4]
   13c8c:	b	13d68 <table_set@@Base+0x63c>
   13c90:	mov	r0, #8
   13c94:	bl	11b08 <malloc@plt>
   13c98:	str	r0, [r8]
   13c9c:	cmp	r0, #0
   13ca0:	bne	13c7c <table_set@@Base+0x550>
   13ca4:	b	13a20 <table_set@@Base+0x2f4>
   13ca8:	ldr	r3, [r0, #4]
   13cac:	cmp	r3, #21
   13cb0:	bne	13a20 <table_set@@Base+0x2f4>
   13cb4:	mov	r0, r7
   13cb8:	bl	11b2c <strlen@plt>
   13cbc:	add	r1, r0, #1
   13cc0:	ldr	r0, [r8]
   13cc4:	bl	11ae4 <realloc@plt>
   13cc8:	str	r0, [r8]
   13ccc:	cmp	r0, #0
   13cd0:	beq	13a20 <table_set@@Base+0x2f4>
   13cd4:	mov	r1, r7
   13cd8:	bl	11af0 <strcpy@plt>
   13cdc:	b	13d68 <table_set@@Base+0x63c>
   13ce0:	ldr	r3, [r0, #4]
   13ce4:	cmp	r3, #19
   13ce8:	bne	13a20 <table_set@@Base+0x2f4>
   13cec:	ldr	r0, [r8]
   13cf0:	cmp	r0, #0
   13cf4:	beq	13d04 <table_set@@Base+0x5d8>
   13cf8:	ldrb	r3, [r7]
   13cfc:	strb	r3, [r0]
   13d00:	b	13d68 <table_set@@Base+0x63c>
   13d04:	mov	r0, #1
   13d08:	bl	11b08 <malloc@plt>
   13d0c:	str	r0, [r8]
   13d10:	cmp	r0, #0
   13d14:	bne	13cf8 <table_set@@Base+0x5cc>
   13d18:	b	13a20 <table_set@@Base+0x2f4>
   13d1c:	ldr	r3, [r0, #4]
   13d20:	cmp	r3, #20
   13d24:	bne	13a20 <table_set@@Base+0x2f4>
   13d28:	ldr	r0, [r8]
   13d2c:	cmp	r0, #0
   13d30:	beq	13d40 <table_set@@Base+0x614>
   13d34:	ldrb	r3, [r7]
   13d38:	strb	r3, [r0]
   13d3c:	b	13d68 <table_set@@Base+0x63c>
   13d40:	mov	r0, #1
   13d44:	bl	11b08 <malloc@plt>
   13d48:	str	r0, [r8]
   13d4c:	cmp	r0, #0
   13d50:	bne	13d34 <table_set@@Base+0x608>
   13d54:	b	13a20 <table_set@@Base+0x2f4>
   13d58:	ldr	r3, [r0, #4]
   13d5c:	cmp	r3, #23
   13d60:	bne	13a20 <table_set@@Base+0x2f4>
   13d64:	str	r7, [r8]
   13d68:	mov	r3, #1
   13d6c:	mov	r2, r6
   13d70:	mov	r1, r9
   13d74:	mov	r0, r5
   13d78:	bl	1268c <table_notify@@Base>
   13d7c:	mov	r0, #0
   13d80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d84:	mvn	r0, #0
   13d88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00013d8c <table_set_bool@@Base>:
   13d8c:	push	{lr}		; (str lr, [sp, #-4]!)
   13d90:	sub	sp, sp, #20
   13d94:	add	ip, sp, #16
   13d98:	strb	r3, [ip, #-1]!
   13d9c:	mov	r3, #22
   13da0:	str	r3, [sp]
   13da4:	mov	r3, ip
   13da8:	bl	1372c <table_set@@Base>
   13dac:	add	sp, sp, #20
   13db0:	pop	{pc}		; (ldr pc, [sp], #4)

00013db4 <table_set_int@@Base>:
   13db4:	push	{lr}		; (str lr, [sp, #-4]!)
   13db8:	sub	sp, sp, #20
   13dbc:	add	ip, sp, #16
   13dc0:	str	r3, [ip, #-4]!
   13dc4:	mov	r3, #0
   13dc8:	str	r3, [sp]
   13dcc:	mov	r3, ip
   13dd0:	bl	1372c <table_set@@Base>
   13dd4:	add	sp, sp, #20
   13dd8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ddc <table_set_uint@@Base>:
   13ddc:	push	{lr}		; (str lr, [sp, #-4]!)
   13de0:	sub	sp, sp, #20
   13de4:	add	ip, sp, #16
   13de8:	str	r3, [ip, #-4]!
   13dec:	mov	r3, #1
   13df0:	str	r3, [sp]
   13df4:	mov	r3, ip
   13df8:	bl	1372c <table_set@@Base>
   13dfc:	add	sp, sp, #20
   13e00:	pop	{pc}		; (ldr pc, [sp], #4)

00013e04 <table_set_int8@@Base>:
   13e04:	push	{lr}		; (str lr, [sp, #-4]!)
   13e08:	sub	sp, sp, #20
   13e0c:	add	ip, sp, #16
   13e10:	strb	r3, [ip, #-1]!
   13e14:	mov	r3, #2
   13e18:	str	r3, [sp]
   13e1c:	mov	r3, ip
   13e20:	bl	1372c <table_set@@Base>
   13e24:	add	sp, sp, #20
   13e28:	pop	{pc}		; (ldr pc, [sp], #4)

00013e2c <table_set_uint8@@Base>:
   13e2c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e30:	sub	sp, sp, #20
   13e34:	add	ip, sp, #16
   13e38:	strb	r3, [ip, #-1]!
   13e3c:	mov	r3, #3
   13e40:	str	r3, [sp]
   13e44:	mov	r3, ip
   13e48:	bl	1372c <table_set@@Base>
   13e4c:	add	sp, sp, #20
   13e50:	pop	{pc}		; (ldr pc, [sp], #4)

00013e54 <table_set_int16@@Base>:
   13e54:	push	{lr}		; (str lr, [sp, #-4]!)
   13e58:	sub	sp, sp, #20
   13e5c:	add	ip, sp, #16
   13e60:	strh	r3, [ip, #-2]!
   13e64:	mov	r3, #4
   13e68:	str	r3, [sp]
   13e6c:	mov	r3, ip
   13e70:	bl	1372c <table_set@@Base>
   13e74:	add	sp, sp, #20
   13e78:	pop	{pc}		; (ldr pc, [sp], #4)

00013e7c <table_set_uint16@@Base>:
   13e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e80:	sub	sp, sp, #20
   13e84:	add	ip, sp, #16
   13e88:	strh	r3, [ip, #-2]!
   13e8c:	mov	r3, #5
   13e90:	str	r3, [sp]
   13e94:	mov	r3, ip
   13e98:	bl	1372c <table_set@@Base>
   13e9c:	add	sp, sp, #20
   13ea0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ea4 <table_set_int32@@Base>:
   13ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ea8:	sub	sp, sp, #20
   13eac:	add	ip, sp, #16
   13eb0:	str	r3, [ip, #-4]!
   13eb4:	mov	r3, #6
   13eb8:	str	r3, [sp]
   13ebc:	mov	r3, ip
   13ec0:	bl	1372c <table_set@@Base>
   13ec4:	add	sp, sp, #20
   13ec8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ecc <table_set_uint32@@Base>:
   13ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   13ed0:	sub	sp, sp, #20
   13ed4:	add	ip, sp, #16
   13ed8:	str	r3, [ip, #-4]!
   13edc:	mov	r3, #7
   13ee0:	str	r3, [sp]
   13ee4:	mov	r3, ip
   13ee8:	bl	1372c <table_set@@Base>
   13eec:	add	sp, sp, #20
   13ef0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ef4 <table_set_int64@@Base>:
   13ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ef8:	sub	sp, sp, #12
   13efc:	mov	r3, #8
   13f00:	str	r3, [sp]
   13f04:	add	r3, sp, #16
   13f08:	bl	1372c <table_set@@Base>
   13f0c:	add	sp, sp, #12
   13f10:	pop	{pc}		; (ldr pc, [sp], #4)

00013f14 <table_set_uint64@@Base>:
   13f14:	push	{lr}		; (str lr, [sp, #-4]!)
   13f18:	sub	sp, sp, #12
   13f1c:	mov	r3, #9
   13f20:	str	r3, [sp]
   13f24:	add	r3, sp, #16
   13f28:	bl	1372c <table_set@@Base>
   13f2c:	add	sp, sp, #12
   13f30:	pop	{pc}		; (ldr pc, [sp], #4)

00013f34 <table_set_short@@Base>:
   13f34:	push	{lr}		; (str lr, [sp, #-4]!)
   13f38:	sub	sp, sp, #20
   13f3c:	add	ip, sp, #16
   13f40:	strh	r3, [ip, #-2]!
   13f44:	mov	r3, #10
   13f48:	str	r3, [sp]
   13f4c:	mov	r3, ip
   13f50:	bl	1372c <table_set@@Base>
   13f54:	add	sp, sp, #20
   13f58:	pop	{pc}		; (ldr pc, [sp], #4)

00013f5c <table_set_ushort@@Base>:
   13f5c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f60:	sub	sp, sp, #20
   13f64:	add	ip, sp, #16
   13f68:	strh	r3, [ip, #-2]!
   13f6c:	mov	r3, #11
   13f70:	str	r3, [sp]
   13f74:	mov	r3, ip
   13f78:	bl	1372c <table_set@@Base>
   13f7c:	add	sp, sp, #20
   13f80:	pop	{pc}		; (ldr pc, [sp], #4)

00013f84 <table_set_long@@Base>:
   13f84:	push	{lr}		; (str lr, [sp, #-4]!)
   13f88:	sub	sp, sp, #20
   13f8c:	add	ip, sp, #16
   13f90:	str	r3, [ip, #-4]!
   13f94:	mov	r3, #12
   13f98:	str	r3, [sp]
   13f9c:	mov	r3, ip
   13fa0:	bl	1372c <table_set@@Base>
   13fa4:	add	sp, sp, #20
   13fa8:	pop	{pc}		; (ldr pc, [sp], #4)

00013fac <table_set_ulong@@Base>:
   13fac:	push	{lr}		; (str lr, [sp, #-4]!)
   13fb0:	sub	sp, sp, #20
   13fb4:	add	ip, sp, #16
   13fb8:	str	r3, [ip, #-4]!
   13fbc:	mov	r3, #13
   13fc0:	str	r3, [sp]
   13fc4:	mov	r3, ip
   13fc8:	bl	1372c <table_set@@Base>
   13fcc:	add	sp, sp, #20
   13fd0:	pop	{pc}		; (ldr pc, [sp], #4)

00013fd4 <table_set_llong@@Base>:
   13fd4:	push	{lr}		; (str lr, [sp, #-4]!)
   13fd8:	sub	sp, sp, #12
   13fdc:	mov	r3, #14
   13fe0:	str	r3, [sp]
   13fe4:	add	r3, sp, #16
   13fe8:	bl	1372c <table_set@@Base>
   13fec:	add	sp, sp, #12
   13ff0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ff4 <table_set_ullong@@Base>:
   13ff4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ff8:	sub	sp, sp, #12
   13ffc:	mov	r3, #15
   14000:	str	r3, [sp]
   14004:	add	r3, sp, #16
   14008:	bl	1372c <table_set@@Base>
   1400c:	add	sp, sp, #12
   14010:	pop	{pc}		; (ldr pc, [sp], #4)

00014014 <table_set_float@@Base>:
   14014:	push	{lr}		; (str lr, [sp, #-4]!)
   14018:	sub	sp, sp, #20
   1401c:	add	r3, sp, #16
   14020:	vstmdb	r3!, {s0}
   14024:	mov	ip, #16
   14028:	str	ip, [sp]
   1402c:	bl	1372c <table_set@@Base>
   14030:	add	sp, sp, #20
   14034:	pop	{pc}		; (ldr pc, [sp], #4)

00014038 <table_set_double@@Base>:
   14038:	push	{lr}		; (str lr, [sp, #-4]!)
   1403c:	sub	sp, sp, #20
   14040:	add	r3, sp, #16
   14044:	vstmdb	r3!, {d0}
   14048:	mov	ip, #17
   1404c:	str	ip, [sp]
   14050:	bl	1372c <table_set@@Base>
   14054:	add	sp, sp, #20
   14058:	pop	{pc}		; (ldr pc, [sp], #4)

0001405c <table_set_ldouble@@Base>:
   1405c:	push	{lr}		; (str lr, [sp, #-4]!)
   14060:	sub	sp, sp, #20
   14064:	add	r3, sp, #16
   14068:	vstmdb	r3!, {d0}
   1406c:	mov	ip, #18
   14070:	str	ip, [sp]
   14074:	bl	1372c <table_set@@Base>
   14078:	add	sp, sp, #20
   1407c:	pop	{pc}		; (ldr pc, [sp], #4)

00014080 <table_set_string@@Base>:
   14080:	push	{lr}		; (str lr, [sp, #-4]!)
   14084:	sub	sp, sp, #12
   14088:	mov	ip, #21
   1408c:	str	ip, [sp]
   14090:	bl	1372c <table_set@@Base>
   14094:	add	sp, sp, #12
   14098:	pop	{pc}		; (ldr pc, [sp], #4)

0001409c <table_set_char@@Base>:
   1409c:	push	{lr}		; (str lr, [sp, #-4]!)
   140a0:	sub	sp, sp, #20
   140a4:	add	ip, sp, #16
   140a8:	strb	r3, [ip, #-1]!
   140ac:	mov	r3, #19
   140b0:	str	r3, [sp]
   140b4:	mov	r3, ip
   140b8:	bl	1372c <table_set@@Base>
   140bc:	add	sp, sp, #20
   140c0:	pop	{pc}		; (ldr pc, [sp], #4)

000140c4 <table_set_uchar@@Base>:
   140c4:	push	{lr}		; (str lr, [sp, #-4]!)
   140c8:	sub	sp, sp, #20
   140cc:	add	ip, sp, #16
   140d0:	strb	r3, [ip, #-1]!
   140d4:	mov	r3, #20
   140d8:	str	r3, [sp]
   140dc:	mov	r3, ip
   140e0:	bl	1372c <table_set@@Base>
   140e4:	add	sp, sp, #20
   140e8:	pop	{pc}		; (ldr pc, [sp], #4)

000140ec <table_set_ptr@@Base>:
   140ec:	push	{lr}		; (str lr, [sp, #-4]!)
   140f0:	sub	sp, sp, #12
   140f4:	mov	ip, #23
   140f8:	str	ip, [sp]
   140fc:	bl	1372c <table_set@@Base>
   14100:	add	sp, sp, #12
   14104:	pop	{pc}		; (ldr pc, [sp], #4)

00014108 <table_cell_to_buffer@@Base>:
   14108:	push	{r4, r5, r6, r7, lr}
   1410c:	sub	sp, sp, #12
   14110:	mov	r6, r0
   14114:	mov	r7, r1
   14118:	mov	r4, r2
   1411c:	mov	r5, r3
   14120:	mov	r1, r2
   14124:	bl	127e4 <table_get_column_data_type@@Base>
   14128:	cmp	r0, #23
   1412c:	ldrls	pc, [pc, r0, lsl #2]
   14130:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14134:	muleq	r1, r4, r1
   14138:	andeq	r4, r1, r4, asr #3
   1413c:	andeq	r4, r1, ip, ror #3
   14140:	andeq	r4, r1, r4, lsl r2
   14144:	andeq	r4, r1, ip, lsr r2
   14148:	andeq	r4, r1, r4, ror #4
   1414c:	andeq	r4, r1, ip, lsl #5
   14150:			; <UNDEFINED> instruction: 0x000142b4
   14154:	ldrdeq	r4, [r1], -ip
   14158:	andeq	r4, r1, r4, lsl #6
   1415c:	andeq	r4, r1, ip, lsr #6
   14160:	andeq	r4, r1, r4, asr r3
   14164:	andeq	r4, r1, ip, ror r3
   14168:	andeq	r4, r1, r4, lsr #7
   1416c:	andeq	r4, r1, ip, asr #7
   14170:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14174:	andeq	r4, r1, r4, asr #8
   14178:	andeq	r4, r1, r0, ror r4
   1417c:	muleq	r1, r8, r4
   14180:	andeq	r4, r1, r8, ror #9
   14184:	andeq	r4, r1, r0, lsl r5
   14188:	andeq	r4, r1, ip, lsl r4
   1418c:	andeq	r4, r1, r0, asr #9
   14190:	andeq	r4, r1, r8, lsr r5
   14194:	mov	r2, r4
   14198:	mov	r1, r7
   1419c:	mov	r0, r6
   141a0:	bl	13378 <table_get_int@@Base>
   141a4:	mov	r3, r0
   141a8:	ldr	r2, [pc, #944]	; 14560 <table_cell_to_buffer@@Base+0x458>
   141ac:	ldr	r1, [sp, #32]
   141b0:	mov	r0, r5
   141b4:	bl	11b38 <snprintf@plt>
   141b8:	mov	r0, #0
   141bc:	add	sp, sp, #12
   141c0:	pop	{r4, r5, r6, r7, pc}
   141c4:	mov	r2, r4
   141c8:	mov	r1, r7
   141cc:	mov	r0, r6
   141d0:	bl	13388 <table_get_uint@@Base>
   141d4:	mov	r3, r0
   141d8:	ldr	r2, [pc, #900]	; 14564 <table_cell_to_buffer@@Base+0x45c>
   141dc:	ldr	r1, [sp, #32]
   141e0:	mov	r0, r5
   141e4:	bl	11b38 <snprintf@plt>
   141e8:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   141ec:	mov	r2, r4
   141f0:	mov	r1, r7
   141f4:	mov	r0, r6
   141f8:	bl	13398 <table_get_int8@@Base>
   141fc:	mov	r3, r0
   14200:	ldr	r2, [pc, #856]	; 14560 <table_cell_to_buffer@@Base+0x458>
   14204:	ldr	r1, [sp, #32]
   14208:	mov	r0, r5
   1420c:	bl	11b38 <snprintf@plt>
   14210:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14214:	mov	r2, r4
   14218:	mov	r1, r7
   1421c:	mov	r0, r6
   14220:	bl	133a8 <table_get_uint8@@Base>
   14224:	mov	r3, r0
   14228:	ldr	r2, [pc, #820]	; 14564 <table_cell_to_buffer@@Base+0x45c>
   1422c:	ldr	r1, [sp, #32]
   14230:	mov	r0, r5
   14234:	bl	11b38 <snprintf@plt>
   14238:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   1423c:	mov	r2, r4
   14240:	mov	r1, r7
   14244:	mov	r0, r6
   14248:	bl	133b8 <table_get_int16@@Base>
   1424c:	mov	r3, r0
   14250:	ldr	r2, [pc, #776]	; 14560 <table_cell_to_buffer@@Base+0x458>
   14254:	ldr	r1, [sp, #32]
   14258:	mov	r0, r5
   1425c:	bl	11b38 <snprintf@plt>
   14260:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14264:	mov	r2, r4
   14268:	mov	r1, r7
   1426c:	mov	r0, r6
   14270:	bl	133c8 <table_get_uint16@@Base>
   14274:	mov	r3, r0
   14278:	ldr	r2, [pc, #740]	; 14564 <table_cell_to_buffer@@Base+0x45c>
   1427c:	ldr	r1, [sp, #32]
   14280:	mov	r0, r5
   14284:	bl	11b38 <snprintf@plt>
   14288:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   1428c:	mov	r2, r4
   14290:	mov	r1, r7
   14294:	mov	r0, r6
   14298:	bl	133d8 <table_get_int32@@Base>
   1429c:	mov	r3, r0
   142a0:	ldr	r2, [pc, #696]	; 14560 <table_cell_to_buffer@@Base+0x458>
   142a4:	ldr	r1, [sp, #32]
   142a8:	mov	r0, r5
   142ac:	bl	11b38 <snprintf@plt>
   142b0:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   142b4:	mov	r2, r4
   142b8:	mov	r1, r7
   142bc:	mov	r0, r6
   142c0:	bl	133e8 <table_get_uint32@@Base>
   142c4:	mov	r3, r0
   142c8:	ldr	r2, [pc, #660]	; 14564 <table_cell_to_buffer@@Base+0x45c>
   142cc:	ldr	r1, [sp, #32]
   142d0:	mov	r0, r5
   142d4:	bl	11b38 <snprintf@plt>
   142d8:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   142dc:	mov	r2, r4
   142e0:	mov	r1, r7
   142e4:	mov	r0, r6
   142e8:	bl	133f8 <table_get_int64@@Base>
   142ec:	strd	r0, [sp]
   142f0:	ldr	r2, [pc, #624]	; 14568 <table_cell_to_buffer@@Base+0x460>
   142f4:	ldr	r1, [sp, #32]
   142f8:	mov	r0, r5
   142fc:	bl	11b38 <snprintf@plt>
   14300:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14304:	mov	r2, r4
   14308:	mov	r1, r7
   1430c:	mov	r0, r6
   14310:	bl	13408 <table_get_uint64@@Base>
   14314:	strd	r0, [sp]
   14318:	ldr	r2, [pc, #588]	; 1456c <table_cell_to_buffer@@Base+0x464>
   1431c:	ldr	r1, [sp, #32]
   14320:	mov	r0, r5
   14324:	bl	11b38 <snprintf@plt>
   14328:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   1432c:	mov	r2, r4
   14330:	mov	r1, r7
   14334:	mov	r0, r6
   14338:	bl	13418 <table_get_short@@Base>
   1433c:	mov	r3, r0
   14340:	ldr	r2, [pc, #552]	; 14570 <table_cell_to_buffer@@Base+0x468>
   14344:	ldr	r1, [sp, #32]
   14348:	mov	r0, r5
   1434c:	bl	11b38 <snprintf@plt>
   14350:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14354:	mov	r2, r4
   14358:	mov	r1, r7
   1435c:	mov	r0, r6
   14360:	bl	13428 <table_get_ushort@@Base>
   14364:	mov	r3, r0
   14368:	ldr	r2, [pc, #516]	; 14574 <table_cell_to_buffer@@Base+0x46c>
   1436c:	ldr	r1, [sp, #32]
   14370:	mov	r0, r5
   14374:	bl	11b38 <snprintf@plt>
   14378:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   1437c:	mov	r2, r4
   14380:	mov	r1, r7
   14384:	mov	r0, r6
   14388:	bl	13438 <table_get_long@@Base>
   1438c:	mov	r3, r0
   14390:	ldr	r2, [pc, #480]	; 14578 <table_cell_to_buffer@@Base+0x470>
   14394:	ldr	r1, [sp, #32]
   14398:	mov	r0, r5
   1439c:	bl	11b38 <snprintf@plt>
   143a0:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   143a4:	mov	r2, r4
   143a8:	mov	r1, r7
   143ac:	mov	r0, r6
   143b0:	bl	13448 <table_get_ulong@@Base>
   143b4:	mov	r3, r0
   143b8:	ldr	r2, [pc, #444]	; 1457c <table_cell_to_buffer@@Base+0x474>
   143bc:	ldr	r1, [sp, #32]
   143c0:	mov	r0, r5
   143c4:	bl	11b38 <snprintf@plt>
   143c8:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   143cc:	mov	r2, r4
   143d0:	mov	r1, r7
   143d4:	mov	r0, r6
   143d8:	bl	13458 <table_get_llong@@Base>
   143dc:	strd	r0, [sp]
   143e0:	ldr	r2, [pc, #384]	; 14568 <table_cell_to_buffer@@Base+0x460>
   143e4:	ldr	r1, [sp, #32]
   143e8:	mov	r0, r5
   143ec:	bl	11b38 <snprintf@plt>
   143f0:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   143f4:	mov	r2, r4
   143f8:	mov	r1, r7
   143fc:	mov	r0, r6
   14400:	bl	13468 <table_get_ullong@@Base>
   14404:	strd	r0, [sp]
   14408:	ldr	r2, [pc, #348]	; 1456c <table_cell_to_buffer@@Base+0x464>
   1440c:	ldr	r1, [sp, #32]
   14410:	mov	r0, r5
   14414:	bl	11b38 <snprintf@plt>
   14418:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   1441c:	mov	r2, r4
   14420:	mov	r1, r7
   14424:	mov	r0, r6
   14428:	bl	134c8 <table_get_string@@Base>
   1442c:	mov	r3, r0
   14430:	ldr	r2, [pc, #328]	; 14580 <table_cell_to_buffer@@Base+0x478>
   14434:	ldr	r1, [sp, #32]
   14438:	mov	r0, r5
   1443c:	bl	11b38 <snprintf@plt>
   14440:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14444:	mov	r2, r4
   14448:	mov	r1, r7
   1444c:	mov	r0, r6
   14450:	bl	13478 <table_get_float@@Base>
   14454:	vcvt.f64.f32	d0, s0
   14458:	vstr	d0, [sp]
   1445c:	ldr	r2, [pc, #288]	; 14584 <table_cell_to_buffer@@Base+0x47c>
   14460:	ldr	r1, [sp, #32]
   14464:	mov	r0, r5
   14468:	bl	11b38 <snprintf@plt>
   1446c:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14470:	mov	r2, r4
   14474:	mov	r1, r7
   14478:	mov	r0, r6
   1447c:	bl	13488 <table_get_double@@Base>
   14480:	vstr	d0, [sp]
   14484:	ldr	r2, [pc, #252]	; 14588 <table_cell_to_buffer@@Base+0x480>
   14488:	ldr	r1, [sp, #32]
   1448c:	mov	r0, r5
   14490:	bl	11b38 <snprintf@plt>
   14494:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14498:	mov	r2, r4
   1449c:	mov	r1, r7
   144a0:	mov	r0, r6
   144a4:	bl	13498 <table_get_ldouble@@Base>
   144a8:	vstr	d0, [sp]
   144ac:	ldr	r2, [pc, #216]	; 1458c <table_cell_to_buffer@@Base+0x484>
   144b0:	ldr	r1, [sp, #32]
   144b4:	mov	r0, r5
   144b8:	bl	11b38 <snprintf@plt>
   144bc:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   144c0:	mov	r2, r4
   144c4:	mov	r1, r7
   144c8:	mov	r0, r6
   144cc:	bl	13368 <table_get_bool@@Base>
   144d0:	mov	r3, r0
   144d4:	ldr	r2, [pc, #132]	; 14560 <table_cell_to_buffer@@Base+0x458>
   144d8:	ldr	r1, [sp, #32]
   144dc:	mov	r0, r5
   144e0:	bl	11b38 <snprintf@plt>
   144e4:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   144e8:	mov	r2, r4
   144ec:	mov	r1, r7
   144f0:	mov	r0, r6
   144f4:	bl	134a8 <table_get_char@@Base>
   144f8:	mov	r3, r0
   144fc:	ldr	r2, [pc, #140]	; 14590 <table_cell_to_buffer@@Base+0x488>
   14500:	ldr	r1, [sp, #32]
   14504:	mov	r0, r5
   14508:	bl	11b38 <snprintf@plt>
   1450c:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14510:	mov	r2, r4
   14514:	mov	r1, r7
   14518:	mov	r0, r6
   1451c:	bl	134b8 <table_get_uchar@@Base>
   14520:	mov	r3, r0
   14524:	ldr	r2, [pc, #100]	; 14590 <table_cell_to_buffer@@Base+0x488>
   14528:	ldr	r1, [sp, #32]
   1452c:	mov	r0, r5
   14530:	bl	11b38 <snprintf@plt>
   14534:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14538:	mov	r2, r4
   1453c:	mov	r1, r7
   14540:	mov	r0, r6
   14544:	bl	134d4 <table_get_ptr@@Base>
   14548:	mov	r3, r0
   1454c:	ldr	r2, [pc, #64]	; 14594 <table_cell_to_buffer@@Base+0x48c>
   14550:	ldr	r1, [sp, #32]
   14554:	mov	r0, r5
   14558:	bl	11b38 <snprintf@plt>
   1455c:	b	141b8 <table_cell_to_buffer@@Base+0xb0>
   14560:	andeq	r5, r1, ip, lsl r0
   14564:	andeq	r5, r1, r0, lsr #32
   14568:	andeq	r5, r1, r4, lsr #32
   1456c:	andeq	r5, r1, ip, lsr #32
   14570:	andeq	r5, r1, r4, lsr r0
   14574:	andeq	r5, r1, r8, lsr r0
   14578:	andeq	r5, r1, ip, lsr r0
   1457c:	andeq	r5, r1, r0, asr #32
   14580:	andeq	r5, r1, r4, asr #32
   14584:	andeq	r5, r1, r8, asr #32
   14588:	andeq	r5, r1, ip, asr #32
   1458c:	andeq	r5, r1, r0, asr r0
   14590:	andeq	r5, r1, r4, asr r0
   14594:	andeq	r5, r1, r8, asr r0

00014598 <table_cell_from_buffer@@Base>:
   14598:	push	{r4, r5, r6, r7, lr}
   1459c:	sub	sp, sp, #268	; 0x10c
   145a0:	mov	r6, r0
   145a4:	mov	r7, r1
   145a8:	mov	r4, r2
   145ac:	mov	r5, r3
   145b0:	mov	r1, r2
   145b4:	bl	127e4 <table_get_column_data_type@@Base>
   145b8:	cmp	r0, #23
   145bc:	ldrls	pc, [pc, r0, lsl #2]
   145c0:	b	14ba4 <table_cell_from_buffer@@Base+0x60c>
   145c4:	andeq	r4, r1, r4, lsr #12
   145c8:	andeq	r4, r1, ip, asr r6
   145cc:	muleq	r1, r4, r6
   145d0:	andeq	r4, r1, ip, asr #13
   145d4:	andeq	r4, r1, r4, lsl #14
   145d8:	andeq	r4, r1, ip, lsr r7
   145dc:	andeq	r4, r1, r4, ror r7
   145e0:	andeq	r4, r1, ip, lsr #15
   145e4:	andeq	r4, r1, r4, ror #15
   145e8:	andeq	r4, r1, r0, lsr #16
   145ec:	andeq	r4, r1, ip, asr r8
   145f0:	muleq	r1, r4, r8
   145f4:	andeq	r4, r1, ip, asr #17
   145f8:	andeq	r4, r1, r4, lsl #18
   145fc:	andeq	r4, r1, ip, lsr r9
   14600:	andeq	r4, r1, r8, ror r9
   14604:	andeq	r4, r1, ip, ror #19
   14608:	andeq	r4, r1, r4, lsr #20
   1460c:	andeq	r4, r1, ip, asr sl
   14610:	strdeq	r4, [r1], -r0
   14614:	andeq	r4, r1, r8, lsr #22
   14618:			; <UNDEFINED> instruction: 0x000149b4
   1461c:	muleq	r1, r4, sl
   14620:	andeq	r4, r1, r0, ror #22
   14624:	add	r2, sp, #8
   14628:	ldr	r1, [pc, #1404]	; 14bac <table_cell_from_buffer@@Base+0x614>
   1462c:	mov	r0, r5
   14630:	bl	11b44 <__isoc99_sscanf@plt>
   14634:	cmp	r0, #1
   14638:	mvnne	r5, #0
   1463c:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14640:	ldr	r3, [sp, #8]
   14644:	mov	r2, r4
   14648:	mov	r1, r7
   1464c:	mov	r0, r6
   14650:	bl	13db4 <table_set_int@@Base>
   14654:	mov	r5, #0
   14658:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   1465c:	add	r2, sp, #8
   14660:	ldr	r1, [pc, #1352]	; 14bb0 <table_cell_from_buffer@@Base+0x618>
   14664:	mov	r0, r5
   14668:	bl	11b44 <__isoc99_sscanf@plt>
   1466c:	cmp	r0, #1
   14670:	mvnne	r5, #0
   14674:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14678:	ldr	r3, [sp, #8]
   1467c:	mov	r2, r4
   14680:	mov	r1, r7
   14684:	mov	r0, r6
   14688:	bl	13ddc <table_set_uint@@Base>
   1468c:	mov	r5, #0
   14690:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14694:	add	r2, sp, #8
   14698:	ldr	r1, [pc, #1300]	; 14bb4 <table_cell_from_buffer@@Base+0x61c>
   1469c:	mov	r0, r5
   146a0:	bl	11b44 <__isoc99_sscanf@plt>
   146a4:	cmp	r0, #1
   146a8:	mvnne	r5, #0
   146ac:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   146b0:	ldrsb	r3, [sp, #8]
   146b4:	mov	r2, r4
   146b8:	mov	r1, r7
   146bc:	mov	r0, r6
   146c0:	bl	13e04 <table_set_int8@@Base>
   146c4:	mov	r5, #0
   146c8:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   146cc:	add	r2, sp, #8
   146d0:	ldr	r1, [pc, #1248]	; 14bb8 <table_cell_from_buffer@@Base+0x620>
   146d4:	mov	r0, r5
   146d8:	bl	11b44 <__isoc99_sscanf@plt>
   146dc:	cmp	r0, #1
   146e0:	mvnne	r5, #0
   146e4:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   146e8:	ldrb	r3, [sp, #8]
   146ec:	mov	r2, r4
   146f0:	mov	r1, r7
   146f4:	mov	r0, r6
   146f8:	bl	13e2c <table_set_uint8@@Base>
   146fc:	mov	r5, #0
   14700:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14704:	add	r2, sp, #8
   14708:	ldr	r1, [pc, #1196]	; 14bbc <table_cell_from_buffer@@Base+0x624>
   1470c:	mov	r0, r5
   14710:	bl	11b44 <__isoc99_sscanf@plt>
   14714:	cmp	r0, #1
   14718:	mvnne	r5, #0
   1471c:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14720:	ldrsh	r3, [sp, #8]
   14724:	mov	r2, r4
   14728:	mov	r1, r7
   1472c:	mov	r0, r6
   14730:	bl	13e54 <table_set_int16@@Base>
   14734:	mov	r5, #0
   14738:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   1473c:	add	r2, sp, #8
   14740:	ldr	r1, [pc, #1144]	; 14bc0 <table_cell_from_buffer@@Base+0x628>
   14744:	mov	r0, r5
   14748:	bl	11b44 <__isoc99_sscanf@plt>
   1474c:	cmp	r0, #1
   14750:	mvnne	r5, #0
   14754:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14758:	ldrh	r3, [sp, #8]
   1475c:	mov	r2, r4
   14760:	mov	r1, r7
   14764:	mov	r0, r6
   14768:	bl	13e7c <table_set_uint16@@Base>
   1476c:	mov	r5, #0
   14770:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14774:	add	r2, sp, #8
   14778:	ldr	r1, [pc, #1068]	; 14bac <table_cell_from_buffer@@Base+0x614>
   1477c:	mov	r0, r5
   14780:	bl	11b44 <__isoc99_sscanf@plt>
   14784:	cmp	r0, #1
   14788:	mvnne	r5, #0
   1478c:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14790:	ldr	r3, [sp, #8]
   14794:	mov	r2, r4
   14798:	mov	r1, r7
   1479c:	mov	r0, r6
   147a0:	bl	13ea4 <table_set_int32@@Base>
   147a4:	mov	r5, #0
   147a8:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   147ac:	add	r2, sp, #8
   147b0:	ldr	r1, [pc, #1016]	; 14bb0 <table_cell_from_buffer@@Base+0x618>
   147b4:	mov	r0, r5
   147b8:	bl	11b44 <__isoc99_sscanf@plt>
   147bc:	cmp	r0, #1
   147c0:	mvnne	r5, #0
   147c4:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   147c8:	ldr	r3, [sp, #8]
   147cc:	mov	r2, r4
   147d0:	mov	r1, r7
   147d4:	mov	r0, r6
   147d8:	bl	13ecc <table_set_uint32@@Base>
   147dc:	mov	r5, #0
   147e0:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   147e4:	add	r2, sp, #8
   147e8:	ldr	r1, [pc, #980]	; 14bc4 <table_cell_from_buffer@@Base+0x62c>
   147ec:	mov	r0, r5
   147f0:	bl	11b44 <__isoc99_sscanf@plt>
   147f4:	cmp	r0, #1
   147f8:	mvnne	r5, #0
   147fc:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14800:	ldrd	r2, [sp, #8]
   14804:	strd	r2, [sp]
   14808:	mov	r2, r4
   1480c:	mov	r1, r7
   14810:	mov	r0, r6
   14814:	bl	13ef4 <table_set_int64@@Base>
   14818:	mov	r5, #0
   1481c:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14820:	add	r2, sp, #8
   14824:	ldr	r1, [pc, #924]	; 14bc8 <table_cell_from_buffer@@Base+0x630>
   14828:	mov	r0, r5
   1482c:	bl	11b44 <__isoc99_sscanf@plt>
   14830:	cmp	r0, #1
   14834:	mvnne	r5, #0
   14838:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   1483c:	ldrd	r2, [sp, #8]
   14840:	strd	r2, [sp]
   14844:	mov	r2, r4
   14848:	mov	r1, r7
   1484c:	mov	r0, r6
   14850:	bl	13f14 <table_set_uint64@@Base>
   14854:	mov	r5, #0
   14858:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   1485c:	add	r2, sp, #8
   14860:	ldr	r1, [pc, #852]	; 14bbc <table_cell_from_buffer@@Base+0x624>
   14864:	mov	r0, r5
   14868:	bl	11b44 <__isoc99_sscanf@plt>
   1486c:	cmp	r0, #1
   14870:	mvnne	r5, #0
   14874:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14878:	ldrsh	r3, [sp, #8]
   1487c:	mov	r2, r4
   14880:	mov	r1, r7
   14884:	mov	r0, r6
   14888:	bl	13f34 <table_set_short@@Base>
   1488c:	mov	r5, #0
   14890:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14894:	add	r2, sp, #8
   14898:	ldr	r1, [pc, #800]	; 14bc0 <table_cell_from_buffer@@Base+0x628>
   1489c:	mov	r0, r5
   148a0:	bl	11b44 <__isoc99_sscanf@plt>
   148a4:	cmp	r0, #1
   148a8:	mvnne	r5, #0
   148ac:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   148b0:	ldrh	r3, [sp, #8]
   148b4:	mov	r2, r4
   148b8:	mov	r1, r7
   148bc:	mov	r0, r6
   148c0:	bl	13f5c <table_set_ushort@@Base>
   148c4:	mov	r5, #0
   148c8:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   148cc:	add	r2, sp, #8
   148d0:	ldr	r1, [pc, #756]	; 14bcc <table_cell_from_buffer@@Base+0x634>
   148d4:	mov	r0, r5
   148d8:	bl	11b44 <__isoc99_sscanf@plt>
   148dc:	cmp	r0, #1
   148e0:	mvnne	r5, #0
   148e4:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   148e8:	ldr	r3, [sp, #8]
   148ec:	mov	r2, r4
   148f0:	mov	r1, r7
   148f4:	mov	r0, r6
   148f8:	bl	13f84 <table_set_long@@Base>
   148fc:	mov	r5, #0
   14900:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14904:	add	r2, sp, #8
   14908:	ldr	r1, [pc, #704]	; 14bd0 <table_cell_from_buffer@@Base+0x638>
   1490c:	mov	r0, r5
   14910:	bl	11b44 <__isoc99_sscanf@plt>
   14914:	cmp	r0, #1
   14918:	mvnne	r5, #0
   1491c:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14920:	ldr	r3, [sp, #8]
   14924:	mov	r2, r4
   14928:	mov	r1, r7
   1492c:	mov	r0, r6
   14930:	bl	13fac <table_set_ulong@@Base>
   14934:	mov	r5, #0
   14938:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   1493c:	add	r2, sp, #8
   14940:	ldr	r1, [pc, #636]	; 14bc4 <table_cell_from_buffer@@Base+0x62c>
   14944:	mov	r0, r5
   14948:	bl	11b44 <__isoc99_sscanf@plt>
   1494c:	cmp	r0, #1
   14950:	mvnne	r5, #0
   14954:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14958:	ldrd	r2, [sp, #8]
   1495c:	strd	r2, [sp]
   14960:	mov	r2, r4
   14964:	mov	r1, r7
   14968:	mov	r0, r6
   1496c:	bl	13fd4 <table_set_llong@@Base>
   14970:	mov	r5, #0
   14974:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14978:	add	r2, sp, #8
   1497c:	ldr	r1, [pc, #580]	; 14bc8 <table_cell_from_buffer@@Base+0x630>
   14980:	mov	r0, r5
   14984:	bl	11b44 <__isoc99_sscanf@plt>
   14988:	cmp	r0, #1
   1498c:	mvnne	r5, #0
   14990:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14994:	ldrd	r2, [sp, #8]
   14998:	strd	r2, [sp]
   1499c:	mov	r2, r4
   149a0:	mov	r1, r7
   149a4:	mov	r0, r6
   149a8:	bl	13ff4 <table_set_ullong@@Base>
   149ac:	mov	r5, #0
   149b0:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   149b4:	add	r2, sp, #8
   149b8:	ldr	r1, [pc, #532]	; 14bd4 <table_cell_from_buffer@@Base+0x63c>
   149bc:	mov	r0, r5
   149c0:	bl	11b44 <__isoc99_sscanf@plt>
   149c4:	cmp	r0, #1
   149c8:	mvnne	r5, #0
   149cc:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   149d0:	add	r3, sp, #8
   149d4:	mov	r2, r4
   149d8:	mov	r1, r7
   149dc:	mov	r0, r6
   149e0:	bl	14080 <table_set_string@@Base>
   149e4:	mov	r5, #0
   149e8:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   149ec:	add	r2, sp, #8
   149f0:	ldr	r1, [pc, #480]	; 14bd8 <table_cell_from_buffer@@Base+0x640>
   149f4:	mov	r0, r5
   149f8:	bl	11b44 <__isoc99_sscanf@plt>
   149fc:	cmp	r0, #1
   14a00:	mvnne	r5, #0
   14a04:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a08:	vldr	s0, [sp, #8]
   14a0c:	mov	r2, r4
   14a10:	mov	r1, r7
   14a14:	mov	r0, r6
   14a18:	bl	14014 <table_set_float@@Base>
   14a1c:	mov	r5, #0
   14a20:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a24:	add	r2, sp, #8
   14a28:	ldr	r1, [pc, #428]	; 14bdc <table_cell_from_buffer@@Base+0x644>
   14a2c:	mov	r0, r5
   14a30:	bl	11b44 <__isoc99_sscanf@plt>
   14a34:	cmp	r0, #1
   14a38:	mvnne	r5, #0
   14a3c:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a40:	vldr	d0, [sp, #8]
   14a44:	mov	r2, r4
   14a48:	mov	r1, r7
   14a4c:	mov	r0, r6
   14a50:	bl	14038 <table_set_double@@Base>
   14a54:	mov	r5, #0
   14a58:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a5c:	add	r2, sp, #8
   14a60:	ldr	r1, [pc, #376]	; 14be0 <table_cell_from_buffer@@Base+0x648>
   14a64:	mov	r0, r5
   14a68:	bl	11b44 <__isoc99_sscanf@plt>
   14a6c:	cmp	r0, #1
   14a70:	mvnne	r5, #0
   14a74:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a78:	vldr	d0, [sp, #8]
   14a7c:	mov	r2, r4
   14a80:	mov	r1, r7
   14a84:	mov	r0, r6
   14a88:	bl	1405c <table_set_ldouble@@Base>
   14a8c:	mov	r5, #0
   14a90:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14a94:	add	r2, sp, #8
   14a98:	ldr	r1, [pc, #268]	; 14bac <table_cell_from_buffer@@Base+0x614>
   14a9c:	mov	r0, r5
   14aa0:	bl	11b44 <__isoc99_sscanf@plt>
   14aa4:	cmp	r0, #1
   14aa8:	mvnne	r5, #0
   14aac:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14ab0:	ldr	r5, [sp, #8]
   14ab4:	cmp	r5, #0
   14ab8:	beq	14ad8 <table_cell_from_buffer@@Base+0x540>
   14abc:	mov	r3, #1
   14ac0:	mov	r2, r4
   14ac4:	mov	r1, r7
   14ac8:	mov	r0, r6
   14acc:	bl	13d8c <table_set_bool@@Base>
   14ad0:	mov	r5, #0
   14ad4:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14ad8:	mov	r3, #0
   14adc:	mov	r2, r4
   14ae0:	mov	r1, r7
   14ae4:	mov	r0, r6
   14ae8:	bl	13d8c <table_set_bool@@Base>
   14aec:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14af0:	add	r2, sp, #8
   14af4:	ldr	r1, [pc, #232]	; 14be4 <table_cell_from_buffer@@Base+0x64c>
   14af8:	mov	r0, r5
   14afc:	bl	11b44 <__isoc99_sscanf@plt>
   14b00:	cmp	r0, #1
   14b04:	mvnne	r5, #0
   14b08:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14b0c:	ldrb	r3, [sp, #8]
   14b10:	mov	r2, r4
   14b14:	mov	r1, r7
   14b18:	mov	r0, r6
   14b1c:	bl	1409c <table_set_char@@Base>
   14b20:	mov	r5, #0
   14b24:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14b28:	add	r2, sp, #8
   14b2c:	ldr	r1, [pc, #176]	; 14be4 <table_cell_from_buffer@@Base+0x64c>
   14b30:	mov	r0, r5
   14b34:	bl	11b44 <__isoc99_sscanf@plt>
   14b38:	cmp	r0, #1
   14b3c:	mvnne	r5, #0
   14b40:	bne	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14b44:	ldrb	r3, [sp, #8]
   14b48:	mov	r2, r4
   14b4c:	mov	r1, r7
   14b50:	mov	r0, r6
   14b54:	bl	140c4 <table_set_uchar@@Base>
   14b58:	mov	r5, #0
   14b5c:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14b60:	add	r2, sp, #8
   14b64:	ldr	r1, [pc, #124]	; 14be8 <table_cell_from_buffer@@Base+0x650>
   14b68:	mov	r0, r5
   14b6c:	bl	11b44 <__isoc99_sscanf@plt>
   14b70:	cmp	r0, #1
   14b74:	mvnne	r5, #0
   14b78:	beq	14b88 <table_cell_from_buffer@@Base+0x5f0>
   14b7c:	mov	r0, r5
   14b80:	add	sp, sp, #268	; 0x10c
   14b84:	pop	{r4, r5, r6, r7, pc}
   14b88:	ldr	r3, [sp, #8]
   14b8c:	mov	r2, r4
   14b90:	mov	r1, r7
   14b94:	mov	r0, r6
   14b98:	bl	140ec <table_set_ptr@@Base>
   14b9c:	mov	r5, #0
   14ba0:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14ba4:	mov	r5, #0
   14ba8:	b	14b7c <table_cell_from_buffer@@Base+0x5e4>
   14bac:	andeq	r5, r1, ip, lsl r0
   14bb0:	andeq	r5, r1, r0, lsr #32
   14bb4:	andeq	r5, r1, ip, asr r0
   14bb8:	andeq	r5, r1, r4, rrx
   14bbc:	andeq	r5, r1, r4, lsr r0
   14bc0:	andeq	r5, r1, r8, lsr r0
   14bc4:	andeq	r5, r1, r4, lsr #32
   14bc8:	andeq	r5, r1, ip, lsr #32
   14bcc:	andeq	r5, r1, ip, lsr r0
   14bd0:	andeq	r5, r1, r0, asr #32
   14bd4:	andeq	r5, r1, r4, asr #32
   14bd8:	andeq	r5, r1, r8, asr #32
   14bdc:	andeq	r5, r1, ip, asr #32
   14be0:	andeq	r5, r1, r0, asr r0
   14be4:	andeq	r5, r1, r4, asr r0
   14be8:	andeq	r5, r1, r8, asr r0

00014bec <table_get_cell_ptr@@Base>:
   14bec:	push	{r4, lr}
   14bf0:	mov	r4, r2
   14bf4:	bl	13710 <table_get_row_ptr@@Base>
   14bf8:	ldr	r0, [r0]
   14bfc:	add	r0, r0, r4, lsl #2
   14c00:	pop	{r4, pc}

00014c04 <table_cell_init@@Base>:
   14c04:	push	{r4, lr}
   14c08:	bl	14bec <table_get_cell_ptr@@Base>
   14c0c:	mov	r3, #0
   14c10:	str	r3, [r0]
   14c14:	pop	{r4, pc}

00014c18 <table_cell_destroy@@Base>:
   14c18:	push	{r4, r5, r6, lr}
   14c1c:	mov	r5, r0
   14c20:	mov	r6, r1
   14c24:	mov	r4, r2
   14c28:	mov	r1, r2
   14c2c:	bl	127e4 <table_get_column_data_type@@Base>
   14c30:	cmp	r0, #23
   14c34:	popeq	{r4, r5, r6, pc}
   14c38:	mov	r2, r4
   14c3c:	mov	r1, r6
   14c40:	mov	r0, r5
   14c44:	bl	14bec <table_get_cell_ptr@@Base>
   14c48:	ldr	r0, [r0]
   14c4c:	cmp	r0, #0
   14c50:	popeq	{r4, r5, r6, pc}
   14c54:	bl	11ad8 <free@plt>
   14c58:	pop	{r4, r5, r6, pc}

00014c5c <table_cell_nullify@@Base>:
   14c5c:	push	{r4, lr}
   14c60:	bl	14bec <table_get_cell_ptr@@Base>
   14c64:	mov	r4, r0
   14c68:	ldr	r0, [r0]
   14c6c:	cmp	r0, #0
   14c70:	beq	14c80 <table_cell_nullify@@Base+0x24>
   14c74:	bl	11ad8 <free@plt>
   14c78:	mov	r3, #0
   14c7c:	str	r3, [r4]
   14c80:	mov	r0, #0
   14c84:	pop	{r4, pc}
   14c88:	subs	r2, r1, #1
   14c8c:	bxeq	lr
   14c90:	bcc	14e68 <table_cell_nullify@@Base+0x20c>
   14c94:	cmp	r0, r1
   14c98:	bls	14e4c <table_cell_nullify@@Base+0x1f0>
   14c9c:	tst	r1, r2
   14ca0:	beq	14e58 <table_cell_nullify@@Base+0x1fc>
   14ca4:	clz	r3, r0
   14ca8:	clz	r2, r1
   14cac:	sub	r3, r2, r3
   14cb0:	rsbs	r3, r3, #31
   14cb4:	addne	r3, r3, r3, lsl #1
   14cb8:	mov	r2, #0
   14cbc:	addne	pc, pc, r3, lsl #2
   14cc0:	nop			; (mov r0, r0)
   14cc4:	cmp	r0, r1, lsl #31
   14cc8:	adc	r2, r2, r2
   14ccc:	subcs	r0, r0, r1, lsl #31
   14cd0:	cmp	r0, r1, lsl #30
   14cd4:	adc	r2, r2, r2
   14cd8:	subcs	r0, r0, r1, lsl #30
   14cdc:	cmp	r0, r1, lsl #29
   14ce0:	adc	r2, r2, r2
   14ce4:	subcs	r0, r0, r1, lsl #29
   14ce8:	cmp	r0, r1, lsl #28
   14cec:	adc	r2, r2, r2
   14cf0:	subcs	r0, r0, r1, lsl #28
   14cf4:	cmp	r0, r1, lsl #27
   14cf8:	adc	r2, r2, r2
   14cfc:	subcs	r0, r0, r1, lsl #27
   14d00:	cmp	r0, r1, lsl #26
   14d04:	adc	r2, r2, r2
   14d08:	subcs	r0, r0, r1, lsl #26
   14d0c:	cmp	r0, r1, lsl #25
   14d10:	adc	r2, r2, r2
   14d14:	subcs	r0, r0, r1, lsl #25
   14d18:	cmp	r0, r1, lsl #24
   14d1c:	adc	r2, r2, r2
   14d20:	subcs	r0, r0, r1, lsl #24
   14d24:	cmp	r0, r1, lsl #23
   14d28:	adc	r2, r2, r2
   14d2c:	subcs	r0, r0, r1, lsl #23
   14d30:	cmp	r0, r1, lsl #22
   14d34:	adc	r2, r2, r2
   14d38:	subcs	r0, r0, r1, lsl #22
   14d3c:	cmp	r0, r1, lsl #21
   14d40:	adc	r2, r2, r2
   14d44:	subcs	r0, r0, r1, lsl #21
   14d48:	cmp	r0, r1, lsl #20
   14d4c:	adc	r2, r2, r2
   14d50:	subcs	r0, r0, r1, lsl #20
   14d54:	cmp	r0, r1, lsl #19
   14d58:	adc	r2, r2, r2
   14d5c:	subcs	r0, r0, r1, lsl #19
   14d60:	cmp	r0, r1, lsl #18
   14d64:	adc	r2, r2, r2
   14d68:	subcs	r0, r0, r1, lsl #18
   14d6c:	cmp	r0, r1, lsl #17
   14d70:	adc	r2, r2, r2
   14d74:	subcs	r0, r0, r1, lsl #17
   14d78:	cmp	r0, r1, lsl #16
   14d7c:	adc	r2, r2, r2
   14d80:	subcs	r0, r0, r1, lsl #16
   14d84:	cmp	r0, r1, lsl #15
   14d88:	adc	r2, r2, r2
   14d8c:	subcs	r0, r0, r1, lsl #15
   14d90:	cmp	r0, r1, lsl #14
   14d94:	adc	r2, r2, r2
   14d98:	subcs	r0, r0, r1, lsl #14
   14d9c:	cmp	r0, r1, lsl #13
   14da0:	adc	r2, r2, r2
   14da4:	subcs	r0, r0, r1, lsl #13
   14da8:	cmp	r0, r1, lsl #12
   14dac:	adc	r2, r2, r2
   14db0:	subcs	r0, r0, r1, lsl #12
   14db4:	cmp	r0, r1, lsl #11
   14db8:	adc	r2, r2, r2
   14dbc:	subcs	r0, r0, r1, lsl #11
   14dc0:	cmp	r0, r1, lsl #10
   14dc4:	adc	r2, r2, r2
   14dc8:	subcs	r0, r0, r1, lsl #10
   14dcc:	cmp	r0, r1, lsl #9
   14dd0:	adc	r2, r2, r2
   14dd4:	subcs	r0, r0, r1, lsl #9
   14dd8:	cmp	r0, r1, lsl #8
   14ddc:	adc	r2, r2, r2
   14de0:	subcs	r0, r0, r1, lsl #8
   14de4:	cmp	r0, r1, lsl #7
   14de8:	adc	r2, r2, r2
   14dec:	subcs	r0, r0, r1, lsl #7
   14df0:	cmp	r0, r1, lsl #6
   14df4:	adc	r2, r2, r2
   14df8:	subcs	r0, r0, r1, lsl #6
   14dfc:	cmp	r0, r1, lsl #5
   14e00:	adc	r2, r2, r2
   14e04:	subcs	r0, r0, r1, lsl #5
   14e08:	cmp	r0, r1, lsl #4
   14e0c:	adc	r2, r2, r2
   14e10:	subcs	r0, r0, r1, lsl #4
   14e14:	cmp	r0, r1, lsl #3
   14e18:	adc	r2, r2, r2
   14e1c:	subcs	r0, r0, r1, lsl #3
   14e20:	cmp	r0, r1, lsl #2
   14e24:	adc	r2, r2, r2
   14e28:	subcs	r0, r0, r1, lsl #2
   14e2c:	cmp	r0, r1, lsl #1
   14e30:	adc	r2, r2, r2
   14e34:	subcs	r0, r0, r1, lsl #1
   14e38:	cmp	r0, r1
   14e3c:	adc	r2, r2, r2
   14e40:	subcs	r0, r0, r1
   14e44:	mov	r0, r2
   14e48:	bx	lr
   14e4c:	moveq	r0, #1
   14e50:	movne	r0, #0
   14e54:	bx	lr
   14e58:	clz	r2, r1
   14e5c:	rsb	r2, r2, #31
   14e60:	lsr	r0, r0, r2
   14e64:	bx	lr
   14e68:	cmp	r0, #0
   14e6c:	mvnne	r0, #0
   14e70:	b	14e94 <table_cell_nullify@@Base+0x238>
   14e74:	cmp	r1, #0
   14e78:	beq	14e68 <table_cell_nullify@@Base+0x20c>
   14e7c:	push	{r0, r1, lr}
   14e80:	bl	14c88 <table_cell_nullify@@Base+0x2c>
   14e84:	pop	{r1, r2, lr}
   14e88:	mul	r3, r2, r0
   14e8c:	sub	r1, r1, r3
   14e90:	bx	lr
   14e94:	push	{r1, lr}
   14e98:	mov	r0, #8
   14e9c:	bl	11ab4 <raise@plt>
   14ea0:	pop	{r1, pc}

00014ea4 <__libc_csu_init@@Base>:
   14ea4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14ea8:	mov	r7, r0
   14eac:	ldr	r6, [pc, #72]	; 14efc <__libc_csu_init@@Base+0x58>
   14eb0:	ldr	r5, [pc, #72]	; 14f00 <__libc_csu_init@@Base+0x5c>
   14eb4:	add	r6, pc, r6
   14eb8:	add	r5, pc, r5
   14ebc:	sub	r6, r6, r5
   14ec0:	mov	r8, r1
   14ec4:	mov	r9, r2
   14ec8:	bl	11a94 <raise@plt-0x20>
   14ecc:	asrs	r6, r6, #2
   14ed0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ed4:	mov	r4, #0
   14ed8:	add	r4, r4, #1
   14edc:	ldr	r3, [r5], #4
   14ee0:	mov	r2, r9
   14ee4:	mov	r1, r8
   14ee8:	mov	r0, r7
   14eec:	blx	r3
   14ef0:	cmp	r6, r4
   14ef4:	bne	14ed8 <__libc_csu_init@@Base+0x34>
   14ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14efc:	andeq	r1, r1, r4, asr r0
   14f00:	andeq	r1, r1, ip, asr #32

00014f04 <__libc_csu_fini@@Base>:
   14f04:	bx	lr

Disassembly of section .fini:

00014f08 <.fini>:
   14f08:	push	{r3, lr}
   14f0c:	pop	{r3, pc}
