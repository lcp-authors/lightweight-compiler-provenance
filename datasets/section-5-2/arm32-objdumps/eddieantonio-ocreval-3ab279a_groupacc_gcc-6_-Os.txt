
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

00010898 <.init>:
   10898:	push	{r3, lr}
   1089c:	bl	10aec <getc@plt+0xcc>
   108a0:	pop	{r3, pc}

Disassembly of section .plt:

000108a4 <calloc@plt-0x14>:
   108a4:	push	{lr}		; (str lr, [sp, #-4]!)
   108a8:	ldr	lr, [pc, #4]	; 108b4 <calloc@plt-0x4>
   108ac:	add	lr, pc, lr
   108b0:	ldr	pc, [lr, #8]!
   108b4:	andeq	r3, r1, ip, asr #14

000108b8 <calloc@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #77824	; 0x13000
   108c0:	ldr	pc, [ip, #1868]!	; 0x74c

000108c4 <raise@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #77824	; 0x13000
   108cc:	ldr	pc, [ip, #1860]!	; 0x744

000108d0 <strcmp@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #77824	; 0x13000
   108d8:	ldr	pc, [ip, #1852]!	; 0x73c

000108dc <fopen@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #77824	; 0x13000
   108e4:	ldr	pc, [ip, #1844]!	; 0x734

000108e8 <free@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #77824	; 0x13000
   108f0:	ldr	pc, [ip, #1836]!	; 0x72c

000108f4 <utf8proc_get_property@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #77824	; 0x13000
   108fc:	ldr	pc, [ip, #1828]!	; 0x724

00010900 <fgets@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #77824	; 0x13000
   10908:	ldr	pc, [ip, #1820]!	; 0x71c

0001090c <utf8proc_encode_char@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #77824	; 0x13000
   10914:	ldr	pc, [ip, #1812]!	; 0x714

00010918 <strdup@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #77824	; 0x13000
   10920:	ldr	pc, [ip, #1804]!	; 0x70c

00010924 <rewind@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #77824	; 0x13000
   1092c:	ldr	pc, [ip, #1796]!	; 0x704

00010930 <unlink@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #77824	; 0x13000
   10938:	ldr	pc, [ip, #1788]!	; 0x6fc

0001093c <utf8proc_tolower@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #77824	; 0x13000
   10944:	ldr	pc, [ip, #1780]!	; 0x6f4

00010948 <__xstat@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #77824	; 0x13000
   10950:	ldr	pc, [ip, #1772]!	; 0x6ec

00010954 <fread@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #77824	; 0x13000
   1095c:	ldr	pc, [ip, #1764]!	; 0x6e4

00010960 <utf8proc_iterate@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #77824	; 0x13000
   10968:	ldr	pc, [ip, #1756]!	; 0x6dc

0001096c <__libc_start_main@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #77824	; 0x13000
   10974:	ldr	pc, [ip, #1748]!	; 0x6d4

00010978 <__sysv_signal@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #77824	; 0x13000
   10980:	ldr	pc, [ip, #1740]!	; 0x6cc

00010984 <__gmon_start__@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #77824	; 0x13000
   1098c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010990 <getpid@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #77824	; 0x13000
   10998:	ldr	pc, [ip, #1724]!	; 0x6bc

0001099c <exit@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #77824	; 0x13000
   109a4:	ldr	pc, [ip, #1716]!	; 0x6b4

000109a8 <utf8proc_category@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #77824	; 0x13000
   109b0:	ldr	pc, [ip, #1708]!	; 0x6ac

000109b4 <strlen@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #77824	; 0x13000
   109bc:	ldr	pc, [ip, #1700]!	; 0x6a4

000109c0 <fprintf@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #77824	; 0x13000
   109c8:	ldr	pc, [ip, #1692]!	; 0x69c

000109cc <__isoc99_sscanf@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #77824	; 0x13000
   109d4:	ldr	pc, [ip, #1684]!	; 0x694

000109d8 <fclose@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #77824	; 0x13000
   109e0:	ldr	pc, [ip, #1676]!	; 0x68c

000109e4 <sprintf@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #77824	; 0x13000
   109ec:	ldr	pc, [ip, #1668]!	; 0x684

000109f0 <utf8proc_errmsg@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #77824	; 0x13000
   109f8:	ldr	pc, [ip, #1660]!	; 0x67c

000109fc <fputs@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #77824	; 0x13000
   10a04:	ldr	pc, [ip, #1652]!	; 0x674

00010a08 <strncmp@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #77824	; 0x13000
   10a10:	ldr	pc, [ip, #1644]!	; 0x66c

00010a14 <abort@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #77824	; 0x13000
   10a1c:	ldr	pc, [ip, #1636]!	; 0x664

00010a20 <getc@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #77824	; 0x13000
   10a28:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

00010a30 <error@@Base-0x1298>:
   10a30:	push	{r0, r1, r2, lr}
   10a34:	add	ip, sp, #8
   10a38:	mov	r3, #0
   10a3c:	str	r0, [ip, #-4]!
   10a40:	ldr	r2, [pc, #84]	; 10a9c <getc@plt+0x7c>
   10a44:	mov	r0, ip
   10a48:	mov	r4, r1
   10a4c:	bl	11dec <error@@Base+0x124>
   10a50:	ldr	r3, [sp, #4]
   10a54:	sub	r3, r3, #2
   10a58:	cmp	r3, #1
   10a5c:	bls	10a68 <getc@plt+0x48>
   10a60:	ldr	r0, [pc, #56]	; 10aa0 <getc@plt+0x80>
   10a64:	bl	11cc8 <error@@Base>
   10a68:	ldr	r2, [pc, #52]	; 10aa4 <getc@plt+0x84>
   10a6c:	ldr	r1, [r4]
   10a70:	ldr	r0, [pc, #48]	; 10aa8 <getc@plt+0x88>
   10a74:	bl	12020 <error@@Base+0x358>
   10a78:	ldr	r0, [pc, #44]	; 10aac <getc@plt+0x8c>
   10a7c:	ldr	r1, [r4, #4]
   10a80:	bl	1108c <getc@plt+0x66c>
   10a84:	ldr	r3, [sp, #4]
   10a88:	cmp	r3, #3
   10a8c:	movne	r0, #0
   10a90:	ldreq	r0, [r4, #8]
   10a94:	bl	10c5c <getc@plt+0x23c>
   10a98:	bl	11c70 <getc@plt+0x1250>
   10a9c:	andeq	r2, r1, r7, lsl #20
   10aa0:	andeq	r2, r1, r3, lsr sl
   10aa4:	muleq	r2, r4, r0
   10aa8:	andseq	r4, r3, r0, lsr r5
   10aac:	andseq	r4, r3, r0, asr #10
   10ab0:	mov	fp, #0
   10ab4:	mov	lr, #0
   10ab8:	pop	{r1}		; (ldr r1, [sp], #4)
   10abc:	mov	r2, sp
   10ac0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac8:	ldr	ip, [pc, #16]	; 10ae0 <getc@plt+0xc0>
   10acc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ad0:	ldr	r0, [pc, #12]	; 10ae4 <getc@plt+0xc4>
   10ad4:	ldr	r3, [pc, #12]	; 10ae8 <getc@plt+0xc8>
   10ad8:	bl	1096c <__libc_start_main@plt>
   10adc:	bl	10a14 <abort@plt>
   10ae0:	andeq	r2, r1, r0, asr #19
   10ae4:	andeq	r0, r1, r0, lsr sl
   10ae8:	andeq	r2, r1, r0, ror #18
   10aec:	ldr	r3, [pc, #20]	; 10b08 <getc@plt+0xe8>
   10af0:	ldr	r2, [pc, #20]	; 10b0c <getc@plt+0xec>
   10af4:	add	r3, pc, r3
   10af8:	ldr	r2, [r3, r2]
   10afc:	cmp	r2, #0
   10b00:	bxeq	lr
   10b04:	b	10984 <__gmon_start__@plt>
   10b08:	andeq	r3, r1, r4, lsl #10
   10b0c:	andeq	r0, r0, r8, lsl #1
   10b10:	ldr	r3, [pc, #28]	; 10b34 <getc@plt+0x114>
   10b14:	ldr	r0, [pc, #28]	; 10b38 <getc@plt+0x118>
   10b18:	sub	r3, r3, r0
   10b1c:	cmp	r3, #6
   10b20:	bxls	lr
   10b24:	ldr	r3, [pc, #16]	; 10b3c <getc@plt+0x11c>
   10b28:	cmp	r3, #0
   10b2c:	bxeq	lr
   10b30:	bx	r3
   10b34:	andeq	r4, r2, fp, lsr #1
   10b38:	andeq	r4, r2, r8, lsr #1
   10b3c:	andeq	r0, r0, r0
   10b40:	ldr	r1, [pc, #36]	; 10b6c <getc@plt+0x14c>
   10b44:	ldr	r0, [pc, #36]	; 10b70 <getc@plt+0x150>
   10b48:	sub	r1, r1, r0
   10b4c:	asr	r1, r1, #2
   10b50:	add	r1, r1, r1, lsr #31
   10b54:	asrs	r1, r1, #1
   10b58:	bxeq	lr
   10b5c:	ldr	r3, [pc, #16]	; 10b74 <getc@plt+0x154>
   10b60:	cmp	r3, #0
   10b64:	bxeq	lr
   10b68:	bx	r3
   10b6c:	andeq	r4, r2, r8, lsr #1
   10b70:	andeq	r4, r2, r8, lsr #1
   10b74:	andeq	r0, r0, r0
   10b78:	push	{r4, lr}
   10b7c:	ldr	r4, [pc, #24]	; 10b9c <getc@plt+0x17c>
   10b80:	ldrb	r3, [r4]
   10b84:	cmp	r3, #0
   10b88:	popne	{r4, pc}
   10b8c:	bl	10b10 <getc@plt+0xf0>
   10b90:	mov	r3, #1
   10b94:	strb	r3, [r4]
   10b98:	pop	{r4, pc}
   10b9c:	strheq	r4, [r2], -r8
   10ba0:	ldr	r0, [pc, #40]	; 10bd0 <getc@plt+0x1b0>
   10ba4:	ldr	r3, [r0]
   10ba8:	cmp	r3, #0
   10bac:	bne	10bb4 <getc@plt+0x194>
   10bb0:	b	10b40 <getc@plt+0x120>
   10bb4:	ldr	r3, [pc, #24]	; 10bd4 <getc@plt+0x1b4>
   10bb8:	cmp	r3, #0
   10bbc:	beq	10bb0 <getc@plt+0x190>
   10bc0:	push	{r4, lr}
   10bc4:	blx	r3
   10bc8:	pop	{r4, lr}
   10bcc:	b	10b40 <getc@plt+0x120>
   10bd0:	andeq	r3, r2, r4, lsl #28
   10bd4:	andeq	r0, r0, r0
   10bd8:	push	{r4, r5, r6, lr}
   10bdc:	mov	r3, r2
   10be0:	mov	r5, r1
   10be4:	mov	r4, r2
   10be8:	mov	r2, r1
   10bec:	ldr	r1, [pc, #92]	; 10c50 <getc@plt+0x230>
   10bf0:	mov	r6, r0
   10bf4:	bl	109c0 <fprintf@plt>
   10bf8:	cmp	r5, #0
   10bfc:	bne	10c10 <getc@plt+0x1f0>
   10c00:	mov	r1, r6
   10c04:	ldr	r0, [pc, #72]	; 10c54 <getc@plt+0x234>
   10c08:	pop	{r4, r5, r6, lr}
   10c0c:	b	109fc <fputs@plt>
   10c10:	sub	r3, r5, r4
   10c14:	vldr	d6, [pc, #44]	; 10c48 <getc@plt+0x228>
   10c18:	vmov	s14, r3
   10c1c:	mov	r0, r6
   10c20:	ldr	r1, [pc, #48]	; 10c58 <getc@plt+0x238>
   10c24:	vcvt.f64.s32	d7, s14
   10c28:	vmul.f64	d7, d7, d6
   10c2c:	vmov	s13, r5
   10c30:	pop	{r4, r5, r6, lr}
   10c34:	vcvt.f64.s32	d6, s13
   10c38:	vdiv.f64	d5, d7, d6
   10c3c:	vmov	r2, r3, d5
   10c40:	b	109c0 <fprintf@plt>
   10c44:	nop			; (mov r0, r0)
   10c48:	andeq	r0, r0, r0
   10c4c:	subsmi	r0, r9, r0
   10c50:	andeq	r2, r1, r0, ror #19
   10c54:	andeq	r2, r1, fp, ror #19
   10c58:	strdeq	r2, [r1], -r7
   10c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c60:	sub	sp, sp, #20
   10c64:	ldr	r1, [pc, #212]	; 10d40 <getc@plt+0x320>
   10c68:	bl	11d90 <error@@Base+0xc8>
   10c6c:	ldr	r1, [pc, #208]	; 10d44 <getc@plt+0x324>
   10c70:	mov	r6, #0
   10c74:	ldr	r9, [pc, #204]	; 10d48 <getc@plt+0x328>
   10c78:	ldr	sl, [pc, #204]	; 10d4c <getc@plt+0x32c>
   10c7c:	mov	r7, r6
   10c80:	mov	r4, r0
   10c84:	bl	109c0 <fprintf@plt>
   10c88:	ldr	r3, [pc, #192]	; 10d50 <getc@plt+0x330>
   10c8c:	ldr	r5, [r3]
   10c90:	cmp	r5, #0
   10c94:	bne	10cc4 <getc@plt+0x2a4>
   10c98:	mov	r2, r6
   10c9c:	mov	r1, r7
   10ca0:	mov	r0, r4
   10ca4:	bl	10bd8 <getc@plt+0x1b8>
   10ca8:	mov	r1, r4
   10cac:	ldr	r0, [pc, #160]	; 10d54 <getc@plt+0x334>
   10cb0:	bl	109fc <fputs@plt>
   10cb4:	mov	r0, r4
   10cb8:	bl	11bc0 <getc@plt+0x11a0>
   10cbc:	add	sp, sp, #20
   10cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cc4:	ldr	r3, [r5, #12]
   10cc8:	cmp	r3, #32
   10ccc:	cmpne	r3, #10
   10cd0:	add	r2, r9, r3, lsl #3
   10cd4:	add	r2, r2, #10176	; 0x27c0
   10cd8:	movne	r3, #1
   10cdc:	ldr	r8, [r2, #4]
   10ce0:	moveq	r3, #0
   10ce4:	cmp	r8, #0
   10ce8:	movle	r3, #0
   10cec:	andgt	r3, r3, #1
   10cf0:	cmp	r3, #0
   10cf4:	beq	10d38 <getc@plt+0x318>
   10cf8:	ldr	fp, [r2, #8]
   10cfc:	mov	r1, r8
   10d00:	mov	r2, fp
   10d04:	mov	r0, r4
   10d08:	bl	10bd8 <getc@plt+0x1b8>
   10d0c:	mov	r3, #1
   10d10:	add	r2, sp, #4
   10d14:	ldr	r1, [r5, #12]
   10d18:	mov	r0, #0
   10d1c:	bl	12380 <error@@Base+0x6b8>
   10d20:	add	r2, sp, #4
   10d24:	mov	r1, sl
   10d28:	mov	r0, r4
   10d2c:	bl	109c0 <fprintf@plt>
   10d30:	add	r7, r7, r8
   10d34:	add	r6, r6, fp
   10d38:	ldr	r5, [r5, #4]
   10d3c:	b	10c90 <getc@plt+0x270>
   10d40:	andeq	r3, r1, r8, lsl r2
   10d44:	muleq	r1, r0, fp
   10d48:	andseq	r4, r3, r0, asr #10
   10d4c:	andeq	r2, r1, r7, lsl #21
   10d50:	andseq	r4, r3, r0, lsr r5
   10d54:	andeq	r2, r1, r0, lsl #20
   10d58:	mov	r2, r0
   10d5c:	push	{r4, lr}
   10d60:	mov	r1, #99	; 0x63
   10d64:	ldr	r0, [pc, #12]	; 10d78 <getc@plt+0x358>
   10d68:	bl	10900 <fgets@plt>
   10d6c:	adds	r0, r0, #0
   10d70:	movne	r0, #1
   10d74:	pop	{r4, pc}
   10d78:	strheq	r4, [r2], -r9
   10d7c:	push	{r0, r1, r2, r3, r4, lr}
   10d80:	str	r2, [sp, #8]
   10d84:	ldr	r3, [r1, #12]
   10d88:	str	r3, [sp, #4]
   10d8c:	ldr	r3, [r1, #8]
   10d90:	str	r3, [sp]
   10d94:	ldm	r1, {r2, r3}
   10d98:	ldr	r1, [pc, #8]	; 10da8 <getc@plt+0x388>
   10d9c:	bl	109c0 <fprintf@plt>
   10da0:	add	sp, sp, #20
   10da4:	pop	{pc}		; (ldr pc, [sp], #4)
   10da8:	andeq	r2, r1, fp, asr #20
   10dac:	push	{r4, r5, r6, lr}
   10db0:	mov	r5, r1
   10db4:	mov	r4, r2
   10db8:	bl	10d58 <getc@plt+0x338>
   10dbc:	cmp	r0, #0
   10dc0:	bne	10dcc <getc@plt+0x3ac>
   10dc4:	mov	r0, #0
   10dc8:	pop	{r4, r5, r6, pc}
   10dcc:	mov	r2, r5
   10dd0:	ldr	r1, [pc, #32]	; 10df8 <getc@plt+0x3d8>
   10dd4:	ldr	r0, [pc, #32]	; 10dfc <getc@plt+0x3dc>
   10dd8:	bl	109cc <__isoc99_sscanf@plt>
   10ddc:	cmp	r0, #1
   10de0:	bne	10dc4 <getc@plt+0x3a4>
   10de4:	ldr	r3, [r4]
   10de8:	ldr	r2, [r5]
   10dec:	add	r3, r3, r2
   10df0:	str	r3, [r4]
   10df4:	pop	{r4, r5, r6, pc}
   10df8:	andeq	r2, r1, r1, ror sl
   10dfc:	strheq	r4, [r2], -r9
   10e00:	push	{r4, lr}
   10e04:	sub	sp, sp, #24
   10e08:	mov	r4, r1
   10e0c:	bl	10d58 <getc@plt+0x338>
   10e10:	cmp	r0, #0
   10e14:	beq	10e8c <getc@plt+0x46c>
   10e18:	add	r3, sp, #20
   10e1c:	str	r3, [sp, #4]
   10e20:	add	r3, sp, #16
   10e24:	str	r3, [sp]
   10e28:	add	r2, sp, #8
   10e2c:	add	r3, sp, #12
   10e30:	ldr	r1, [pc, #92]	; 10e94 <getc@plt+0x474>
   10e34:	ldr	r0, [pc, #92]	; 10e98 <getc@plt+0x478>
   10e38:	bl	109cc <__isoc99_sscanf@plt>
   10e3c:	cmp	r0, #4
   10e40:	movne	r0, #0
   10e44:	bne	10e8c <getc@plt+0x46c>
   10e48:	ldr	r3, [r4]
   10e4c:	ldr	r2, [sp, #8]
   10e50:	mov	r0, #1
   10e54:	add	r3, r3, r2
   10e58:	str	r3, [r4]
   10e5c:	ldr	r2, [sp, #12]
   10e60:	ldr	r3, [r4, #4]
   10e64:	add	r3, r3, r2
   10e68:	str	r3, [r4, #4]
   10e6c:	ldr	r2, [sp, #16]
   10e70:	ldr	r3, [r4, #8]
   10e74:	add	r3, r3, r2
   10e78:	str	r3, [r4, #8]
   10e7c:	ldr	r2, [sp, #20]
   10e80:	ldr	r3, [r4, #12]
   10e84:	add	r3, r3, r2
   10e88:	str	r3, [r4, #12]
   10e8c:	add	sp, sp, #24
   10e90:	pop	{r4, pc}
   10e94:	andeq	r2, r1, r5, ror #20
   10e98:	strheq	r4, [r2], -r9
   10e9c:	cmp	r2, #0
   10ea0:	vmov	s14, r1
   10ea4:	bne	10eb4 <getc@plt+0x494>
   10ea8:	mov	r1, r0
   10eac:	ldr	r0, [pc, #44]	; 10ee0 <getc@plt+0x4c0>
   10eb0:	b	109fc <fputs@plt>
   10eb4:	vcvt.f64.s32	d7, s14
   10eb8:	vldr	d6, [pc, #24]	; 10ed8 <getc@plt+0x4b8>
   10ebc:	ldr	r1, [pc, #32]	; 10ee4 <getc@plt+0x4c4>
   10ec0:	vmul.f64	d7, d7, d6
   10ec4:	vmov	s13, r2
   10ec8:	vcvt.f64.s32	d6, s13
   10ecc:	vdiv.f64	d5, d7, d6
   10ed0:	vmov	r2, r3, d5
   10ed4:	b	109c0 <fprintf@plt>
   10ed8:	andeq	r0, r0, r0
   10edc:	subsmi	r0, r9, r0
   10ee0:	andeq	r2, r1, r5, ror sl
   10ee4:	andeq	r2, r1, lr, ror sl
   10ee8:	ldr	r2, [r0, #12]
   10eec:	ldr	r3, [r1, #12]
   10ef0:	cmp	r2, r3
   10ef4:	beq	10f00 <getc@plt+0x4e0>
   10ef8:	sub	r0, r3, r2
   10efc:	bx	lr
   10f00:	ldr	r2, [r0, #16]
   10f04:	ldr	r3, [r1, #16]
   10f08:	cmp	r2, r3
   10f0c:	bne	10ef8 <getc@plt+0x4d8>
   10f10:	ldr	r1, [r1, #8]
   10f14:	ldr	r0, [r0, #8]
   10f18:	b	11b78 <getc@plt+0x1158>
   10f1c:	push	{r4, r5, r6, r7, lr}
   10f20:	mov	r4, r1
   10f24:	mov	r6, r2
   10f28:	sub	sp, sp, #20
   10f2c:	mov	r7, r3
   10f30:	ldm	r1, {r2, r3}
   10f34:	ldr	r1, [pc, #84]	; 10f90 <getc@plt+0x570>
   10f38:	mov	r5, r0
   10f3c:	bl	109c0 <fprintf@plt>
   10f40:	ldr	r2, [r4]
   10f44:	ldr	r1, [r4, #4]
   10f48:	mov	r0, r5
   10f4c:	sub	r1, r2, r1
   10f50:	bl	10e9c <getc@plt+0x47c>
   10f54:	cmp	r6, #0
   10f58:	movne	r2, r6
   10f5c:	ldrne	r1, [pc, #48]	; 10f94 <getc@plt+0x574>
   10f60:	bne	10f80 <getc@plt+0x560>
   10f64:	add	r2, sp, #4
   10f68:	mov	r1, r7
   10f6c:	mov	r3, #1
   10f70:	mov	r0, r6
   10f74:	bl	12380 <error@@Base+0x6b8>
   10f78:	ldr	r1, [pc, #24]	; 10f98 <getc@plt+0x578>
   10f7c:	add	r2, sp, #4
   10f80:	mov	r0, r5
   10f84:	bl	109c0 <fprintf@plt>
   10f88:	add	sp, sp, #20
   10f8c:	pop	{r4, r5, r6, r7, pc}
   10f90:	andeq	r2, r1, r0, ror #19
   10f94:	andeq	r2, r1, lr, asr sl
   10f98:	andeq	r2, r1, r4, lsl #21
   10f9c:	push	{r4, r5, r6, r7, r8, lr}
   10fa0:	mov	r4, r0
   10fa4:	mov	r0, r1
   10fa8:	mov	r5, r3
   10fac:	mov	r6, r2
   10fb0:	mov	r7, r1
   10fb4:	bl	11a4c <getc@plt+0x102c>
   10fb8:	sxth	r0, r0
   10fbc:	add	r0, r4, r0, lsl #3
   10fc0:	ldr	r3, [r0, #68]	; 0x44
   10fc4:	add	r3, r3, r6
   10fc8:	str	r3, [r0, #68]	; 0x44
   10fcc:	ldr	r3, [r0, #72]	; 0x48
   10fd0:	add	r3, r3, r5
   10fd4:	str	r3, [r0, #72]	; 0x48
   10fd8:	ldr	r3, [r4, #2116]	; 0x844
   10fdc:	add	r3, r3, r6
   10fe0:	str	r3, [r4, #2116]	; 0x844
   10fe4:	ldr	r3, [r4, #2120]	; 0x848
   10fe8:	add	r3, r3, r5
   10fec:	str	r3, [r4, #2120]	; 0x848
   10ff0:	add	r4, r4, r7, lsl #3
   10ff4:	add	r4, r4, #8192	; 0x2000
   10ff8:	ldr	r3, [r4, #1988]	; 0x7c4
   10ffc:	add	r2, r3, r6
   11000:	str	r2, [r4, #1988]	; 0x7c4
   11004:	ldr	r2, [r4, #1992]	; 0x7c8
   11008:	add	r3, r2, r5
   1100c:	str	r3, [r4, #1992]	; 0x7c8
   11010:	pop	{r4, r5, r6, r7, r8, pc}
   11014:	add	r0, r0, #2112	; 0x840
   11018:	push	{r4, r5, r6, r7, r8, lr}
   1101c:	add	r4, r0, #12
   11020:	mov	r0, r4
   11024:	mov	r8, r1
   11028:	mov	r7, r2
   1102c:	mov	r6, r3
   11030:	bl	117f4 <getc@plt+0xdd4>
   11034:	cmp	r0, #0
   11038:	beq	11058 <getc@plt+0x638>
   1103c:	ldr	r2, [r0, #12]
   11040:	ldr	r3, [r0, #16]
   11044:	add	r2, r2, r7
   11048:	add	r3, r3, r6
   1104c:	str	r2, [r0, #12]
   11050:	str	r3, [r0, #16]
   11054:	pop	{r4, r5, r6, r7, r8, pc}
   11058:	mov	r1, #20
   1105c:	mov	r0, #1
   11060:	bl	11d04 <error@@Base+0x3c>
   11064:	mov	r5, r0
   11068:	mov	r0, r8
   1106c:	bl	10918 <strdup@plt>
   11070:	str	r7, [r5, #12]
   11074:	str	r6, [r5, #16]
   11078:	mov	r1, r5
   1107c:	str	r0, [r5, #8]
   11080:	mov	r0, r4
   11084:	pop	{r4, r5, r6, r7, r8, lr}
   11088:	b	11838 <getc@plt+0xe18>
   1108c:	push	{r4, r5, r6, r7, r8, lr}
   11090:	mov	r7, r1
   11094:	sub	sp, sp, #24
   11098:	ldr	r1, [pc, #704]	; 11360 <getc@plt+0x940>
   1109c:	mov	r5, r0
   110a0:	mov	r0, r7
   110a4:	bl	11d90 <error@@Base+0xc8>
   110a8:	mov	r4, r0
   110ac:	bl	10d58 <getc@plt+0x338>
   110b0:	cmp	r0, #0
   110b4:	beq	1134c <getc@plt+0x92c>
   110b8:	mov	r2, #40	; 0x28
   110bc:	ldr	r1, [pc, #672]	; 11364 <getc@plt+0x944>
   110c0:	ldr	r0, [pc, #672]	; 11368 <getc@plt+0x948>
   110c4:	bl	10a08 <strncmp@plt>
   110c8:	ldr	r6, [pc, #664]	; 11368 <getc@plt+0x948>
   110cc:	cmp	r0, #0
   110d0:	bne	1134c <getc@plt+0x92c>
   110d4:	mov	r0, r4
   110d8:	bl	10d58 <getc@plt+0x338>
   110dc:	cmp	r0, #0
   110e0:	beq	1134c <getc@plt+0x92c>
   110e4:	ldr	r1, [pc, #640]	; 1136c <getc@plt+0x94c>
   110e8:	mov	r0, r6
   110ec:	bl	108d0 <strcmp@plt>
   110f0:	cmp	r0, #0
   110f4:	bne	1134c <getc@plt+0x92c>
   110f8:	mov	r2, r5
   110fc:	add	r1, sp, #4
   11100:	mov	r0, r4
   11104:	bl	10dac <getc@plt+0x38c>
   11108:	cmp	r0, #0
   1110c:	beq	1134c <getc@plt+0x92c>
   11110:	add	r2, r5, #4
   11114:	add	r1, sp, #8
   11118:	mov	r0, r4
   1111c:	bl	10dac <getc@plt+0x38c>
   11120:	cmp	r0, #0
   11124:	beq	1134c <getc@plt+0x92c>
   11128:	mov	r0, r4
   1112c:	bl	10d58 <getc@plt+0x338>
   11130:	cmp	r0, #0
   11134:	beq	1134c <getc@plt+0x92c>
   11138:	mov	r0, r4
   1113c:	bl	10d58 <getc@plt+0x338>
   11140:	cmp	r0, #0
   11144:	beq	1134c <getc@plt+0x92c>
   11148:	add	r2, r5, #8
   1114c:	add	r1, sp, #12
   11150:	mov	r0, r4
   11154:	bl	10dac <getc@plt+0x38c>
   11158:	cmp	r0, #0
   1115c:	beq	1134c <getc@plt+0x92c>
   11160:	add	r2, r5, #12
   11164:	add	r1, sp, #12
   11168:	mov	r0, r4
   1116c:	bl	10dac <getc@plt+0x38c>
   11170:	cmp	r0, #0
   11174:	beq	1134c <getc@plt+0x92c>
   11178:	add	r2, r5, #16
   1117c:	add	r1, sp, #12
   11180:	mov	r0, r4
   11184:	bl	10dac <getc@plt+0x38c>
   11188:	cmp	r0, #0
   1118c:	beq	1134c <getc@plt+0x92c>
   11190:	mov	r0, r4
   11194:	bl	10d58 <getc@plt+0x338>
   11198:	cmp	r0, #0
   1119c:	beq	1134c <getc@plt+0x92c>
   111a0:	mov	r0, r4
   111a4:	bl	10d58 <getc@plt+0x338>
   111a8:	cmp	r0, #0
   111ac:	beq	1134c <getc@plt+0x92c>
   111b0:	mov	r0, r4
   111b4:	bl	10d58 <getc@plt+0x338>
   111b8:	cmp	r0, #0
   111bc:	beq	1134c <getc@plt+0x92c>
   111c0:	mov	r0, r4
   111c4:	bl	10d58 <getc@plt+0x338>
   111c8:	cmp	r0, #0
   111cc:	beq	1134c <getc@plt+0x92c>
   111d0:	add	r1, r5, #20
   111d4:	mov	r0, r4
   111d8:	bl	10e00 <getc@plt+0x3e0>
   111dc:	cmp	r0, #0
   111e0:	beq	1134c <getc@plt+0x92c>
   111e4:	add	r1, r5, #36	; 0x24
   111e8:	mov	r0, r4
   111ec:	bl	10e00 <getc@plt+0x3e0>
   111f0:	cmp	r0, #0
   111f4:	beq	1134c <getc@plt+0x92c>
   111f8:	add	r1, r5, #52	; 0x34
   111fc:	mov	r0, r4
   11200:	bl	10e00 <getc@plt+0x3e0>
   11204:	cmp	r0, #0
   11208:	beq	1134c <getc@plt+0x92c>
   1120c:	mov	r0, r4
   11210:	bl	10d58 <getc@plt+0x338>
   11214:	cmp	r0, #0
   11218:	beq	1134c <getc@plt+0x92c>
   1121c:	mov	r0, r4
   11220:	bl	10d58 <getc@plt+0x338>
   11224:	cmp	r0, #0
   11228:	beq	11238 <getc@plt+0x818>
   1122c:	ldrb	r3, [r6]
   11230:	cmp	r3, #10
   11234:	bne	1121c <getc@plt+0x7fc>
   11238:	ldr	r3, [sp, #8]
   1123c:	cmp	r3, #0
   11240:	bgt	11260 <getc@plt+0x840>
   11244:	ldr	r3, [sp, #4]
   11248:	cmp	r3, #0
   1124c:	bgt	112c0 <getc@plt+0x8a0>
   11250:	mov	r0, r4
   11254:	bl	11bc0 <getc@plt+0x11a0>
   11258:	add	sp, sp, #24
   1125c:	pop	{r4, r5, r6, r7, r8, pc}
   11260:	mov	r0, r4
   11264:	bl	10d58 <getc@plt+0x338>
   11268:	cmp	r0, #0
   1126c:	beq	11244 <getc@plt+0x824>
   11270:	ldr	r8, [pc, #248]	; 11370 <getc@plt+0x950>
   11274:	ldr	r7, [pc, #236]	; 11368 <getc@plt+0x948>
   11278:	b	11290 <getc@plt+0x870>
   1127c:	ldr	r3, [sp, #16]
   11280:	ldr	r2, [sp, #12]
   11284:	ldr	r1, [pc, #232]	; 11374 <getc@plt+0x954>
   11288:	mov	r0, r5
   1128c:	bl	11014 <getc@plt+0x5f4>
   11290:	mov	r0, r4
   11294:	bl	10d58 <getc@plt+0x338>
   11298:	cmp	r0, #0
   1129c:	beq	11244 <getc@plt+0x824>
   112a0:	add	r3, sp, #16
   112a4:	add	r2, sp, #12
   112a8:	mov	r1, r8
   112ac:	mov	r0, r7
   112b0:	bl	109cc <__isoc99_sscanf@plt>
   112b4:	cmp	r0, #2
   112b8:	beq	1127c <getc@plt+0x85c>
   112bc:	b	11244 <getc@plt+0x824>
   112c0:	mov	r0, r4
   112c4:	bl	10d58 <getc@plt+0x338>
   112c8:	cmp	r0, #0
   112cc:	ldrne	r7, [pc, #156]	; 11370 <getc@plt+0x950>
   112d0:	beq	11250 <getc@plt+0x830>
   112d4:	mov	r0, r4
   112d8:	bl	10d58 <getc@plt+0x338>
   112dc:	cmp	r0, #0
   112e0:	beq	11250 <getc@plt+0x830>
   112e4:	add	r3, sp, #16
   112e8:	add	r2, sp, #12
   112ec:	mov	r1, r7
   112f0:	ldr	r0, [pc, #112]	; 11368 <getc@plt+0x948>
   112f4:	bl	109cc <__isoc99_sscanf@plt>
   112f8:	cmp	r0, #2
   112fc:	bne	11250 <getc@plt+0x830>
   11300:	ldrb	r3, [r6, #31]
   11304:	cmp	r3, #125	; 0x7d
   11308:	ldrbeq	r3, [r6, #30]
   1130c:	beq	1131c <getc@plt+0x8fc>
   11310:	cmp	r3, #92	; 0x5c
   11314:	bne	11338 <getc@plt+0x918>
   11318:	mov	r3, #10
   1131c:	str	r3, [sp, #20]
   11320:	ldr	r3, [sp, #16]
   11324:	ldr	r2, [sp, #12]
   11328:	ldr	r1, [sp, #20]
   1132c:	mov	r0, r5
   11330:	bl	10f9c <getc@plt+0x57c>
   11334:	b	112d4 <getc@plt+0x8b4>
   11338:	add	r2, sp, #20
   1133c:	ldr	r1, [pc, #52]	; 11378 <getc@plt+0x958>
   11340:	ldr	r0, [pc, #52]	; 1137c <getc@plt+0x95c>
   11344:	bl	109cc <__isoc99_sscanf@plt>
   11348:	b	11320 <getc@plt+0x900>
   1134c:	cmp	r7, #0
   11350:	ldr	r1, [pc, #40]	; 11380 <getc@plt+0x960>
   11354:	ldr	r0, [pc, #40]	; 11384 <getc@plt+0x964>
   11358:	movne	r1, r7
   1135c:	bl	11d50 <error@@Base+0x88>
   11360:	andeq	r3, r1, r9, asr r7
   11364:	muleq	r1, r3, sl
   11368:	strheq	r4, [r2], -r9
   1136c:	andeq	r3, r1, r8, lsl r7
   11370:	andeq	r2, r1, sp, ror #20
   11374:	andeq	r4, r2, sp, asr #1
   11378:			; <UNDEFINED> instruction: 0x00012abe
   1137c:	ldrdeq	r4, [r2], -r8
   11380:	andeq	r2, r1, sp, lsl #21
   11384:	andeq	r2, r1, r2, asr #21
   11388:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1138c:	mov	r4, r0
   11390:	mov	r0, r1
   11394:	ldr	r1, [pc, #612]	; 11600 <getc@plt+0xbe0>
   11398:	bl	11d90 <error@@Base+0xc8>
   1139c:	ldr	r3, [pc, #608]	; 11604 <getc@plt+0xbe4>
   113a0:	ldr	r2, [pc, #608]	; 11608 <getc@plt+0xbe8>
   113a4:	ldr	r1, [pc, #608]	; 1160c <getc@plt+0xbec>
   113a8:	mov	r6, #0
   113ac:	add	r7, r4, #68	; 0x44
   113b0:	mov	r8, r6
   113b4:	mov	r5, r0
   113b8:	bl	109c0 <fprintf@plt>
   113bc:	ldr	r3, [pc, #588]	; 11610 <getc@plt+0xbf0>
   113c0:	ldr	r2, [r4]
   113c4:	ldr	r1, [pc, #584]	; 11614 <getc@plt+0xbf4>
   113c8:	mov	r0, r5
   113cc:	bl	109c0 <fprintf@plt>
   113d0:	ldr	r3, [pc, #576]	; 11618 <getc@plt+0xbf8>
   113d4:	ldr	r2, [r4, #4]
   113d8:	ldr	r1, [pc, #564]	; 11614 <getc@plt+0xbf4>
   113dc:	mov	r0, r5
   113e0:	bl	109c0 <fprintf@plt>
   113e4:	ldr	r2, [r4]
   113e8:	ldr	r1, [r4, #4]
   113ec:	mov	r0, r5
   113f0:	sub	r1, r2, r1
   113f4:	bl	10e9c <getc@plt+0x47c>
   113f8:	ldr	r1, [pc, #540]	; 1161c <getc@plt+0xbfc>
   113fc:	mov	r0, r5
   11400:	bl	109c0 <fprintf@plt>
   11404:	ldr	r3, [pc, #532]	; 11620 <getc@plt+0xc00>
   11408:	ldr	r2, [r4, #8]
   1140c:	ldr	r1, [pc, #512]	; 11614 <getc@plt+0xbf4>
   11410:	mov	r0, r5
   11414:	bl	109c0 <fprintf@plt>
   11418:	ldr	r3, [pc, #516]	; 11624 <getc@plt+0xc04>
   1141c:	ldr	r2, [r4, #12]
   11420:	ldr	r1, [pc, #492]	; 11614 <getc@plt+0xbf4>
   11424:	mov	r0, r5
   11428:	bl	109c0 <fprintf@plt>
   1142c:	ldr	r3, [pc, #500]	; 11628 <getc@plt+0xc08>
   11430:	ldr	r2, [r4, #16]
   11434:	ldr	r1, [pc, #472]	; 11614 <getc@plt+0xbf4>
   11438:	mov	r0, r5
   1143c:	bl	109c0 <fprintf@plt>
   11440:	ldr	r3, [r4, #12]
   11444:	ldr	r1, [r4, #8]
   11448:	ldr	r2, [r4]
   1144c:	add	r1, r1, r3
   11450:	mov	r0, r5
   11454:	bl	10e9c <getc@plt+0x47c>
   11458:	ldr	r1, [pc, #460]	; 1162c <getc@plt+0xc0c>
   1145c:	mov	r0, r5
   11460:	bl	109c0 <fprintf@plt>
   11464:	ldr	r2, [r4]
   11468:	ldr	r1, [r4, #48]	; 0x30
   1146c:	mov	r0, r5
   11470:	sub	r1, r2, r1
   11474:	bl	10e9c <getc@plt+0x47c>
   11478:	ldr	r1, [pc, #432]	; 11630 <getc@plt+0xc10>
   1147c:	mov	r0, r5
   11480:	bl	109c0 <fprintf@plt>
   11484:	mov	r1, r5
   11488:	ldr	r0, [pc, #420]	; 11634 <getc@plt+0xc14>
   1148c:	bl	109fc <fputs@plt>
   11490:	ldr	r2, [pc, #416]	; 11638 <getc@plt+0xc18>
   11494:	add	r1, r4, #20
   11498:	mov	r0, r5
   1149c:	bl	10d7c <getc@plt+0x35c>
   114a0:	ldr	r2, [pc, #404]	; 1163c <getc@plt+0xc1c>
   114a4:	add	r1, r4, #36	; 0x24
   114a8:	mov	r0, r5
   114ac:	bl	10d7c <getc@plt+0x35c>
   114b0:	ldr	r2, [pc, #392]	; 11640 <getc@plt+0xc20>
   114b4:	add	r1, r4, #52	; 0x34
   114b8:	mov	r0, r5
   114bc:	bl	10d7c <getc@plt+0x35c>
   114c0:	ldr	r1, [pc, #380]	; 11644 <getc@plt+0xc24>
   114c4:	mov	r0, r5
   114c8:	bl	109c0 <fprintf@plt>
   114cc:	ldr	r3, [r7]
   114d0:	cmp	r3, #0
   114d4:	ble	114f4 <getc@plt+0xad4>
   114d8:	mov	r0, r6
   114dc:	bl	11a80 <getc@plt+0x1060>
   114e0:	mov	r3, r8
   114e4:	mov	r1, r7
   114e8:	mov	r2, r0
   114ec:	mov	r0, r5
   114f0:	bl	10f1c <getc@plt+0x4fc>
   114f4:	add	r6, r6, #1
   114f8:	cmp	r6, #256	; 0x100
   114fc:	add	r7, r7, #8
   11500:	bne	114cc <getc@plt+0xaac>
   11504:	add	r6, r4, #2112	; 0x840
   11508:	mov	r3, #0
   1150c:	ldr	r2, [pc, #300]	; 11640 <getc@plt+0xc20>
   11510:	add	r1, r6, #4
   11514:	mov	r0, r5
   11518:	bl	10f1c <getc@plt+0x4fc>
   1151c:	ldr	r3, [r4, #4]
   11520:	cmp	r3, #0
   11524:	bgt	11544 <getc@plt+0xb24>
   11528:	ldr	r3, [r4]
   1152c:	cmp	r3, #0
   11530:	bgt	115ac <getc@plt+0xb8c>
   11534:	mov	r0, r5
   11538:	add	sp, sp, #8
   1153c:	pop	{r4, r5, r6, r7, r8, lr}
   11540:	b	11bc0 <getc@plt+0x11a0>
   11544:	add	r7, r4, #8192	; 0x2000
   11548:	add	r0, r6, #12
   1154c:	bl	118d0 <getc@plt+0xeb0>
   11550:	ldr	r2, [pc, #240]	; 11648 <getc@plt+0xc28>
   11554:	ldr	r1, [r7, #1980]	; 0x7bc
   11558:	ldr	r0, [r7, #1984]	; 0x7c0
   1155c:	bl	11764 <getc@plt+0xd44>
   11560:	mov	r1, r5
   11564:	ldr	r0, [pc, #224]	; 1164c <getc@plt+0xc2c>
   11568:	bl	109fc <fputs@plt>
   1156c:	ldr	r8, [pc, #220]	; 11650 <getc@plt+0xc30>
   11570:	mov	r6, #0
   11574:	ldr	r3, [r7, #1984]	; 0x7c0
   11578:	cmp	r6, r3
   1157c:	bge	11528 <getc@plt+0xb08>
   11580:	ldr	r3, [r7, #1980]	; 0x7bc
   11584:	mov	r1, r8
   11588:	mov	r0, r5
   1158c:	ldr	r2, [r3, r6, lsl #2]
   11590:	add	r6, r6, #1
   11594:	ldr	r3, [r2, #8]
   11598:	str	r3, [sp]
   1159c:	ldr	r3, [r2, #16]
   115a0:	ldr	r2, [r2, #12]
   115a4:	bl	109c0 <fprintf@plt>
   115a8:	b	11574 <getc@plt+0xb54>
   115ac:	ldr	r1, [pc, #144]	; 11644 <getc@plt+0xc24>
   115b0:	mov	r0, r5
   115b4:	bl	109c0 <fprintf@plt>
   115b8:	add	r4, r4, #10176	; 0x27c0
   115bc:	mov	r6, #0
   115c0:	ldr	r7, [pc, #140]	; 11654 <getc@plt+0xc34>
   115c4:	add	r4, r4, #4
   115c8:	mov	r8, r6
   115cc:	ldr	r3, [r4]
   115d0:	cmp	r3, #0
   115d4:	ble	115ec <getc@plt+0xbcc>
   115d8:	mov	r3, r6
   115dc:	mov	r2, r8
   115e0:	mov	r1, r4
   115e4:	mov	r0, r5
   115e8:	bl	10f1c <getc@plt+0x4fc>
   115ec:	add	r6, r6, #1
   115f0:	cmp	r6, r7
   115f4:	add	r4, r4, #8
   115f8:	bne	115cc <getc@plt+0xbac>
   115fc:	b	11534 <getc@plt+0xb14>
   11600:	andeq	r3, r1, r8, lsl r2
   11604:	andeq	r3, r1, r8, lsl r7
   11608:	muleq	r1, r3, sl
   1160c:	ldrdeq	r2, [r1], -r4
   11610:	andeq	r3, r1, sl, lsl #2
   11614:	andeq	r2, r1, sl, asr sl
   11618:	ldrdeq	r2, [r1], -r9
   1161c:	andeq	r2, r1, r0, ror #21
   11620:	andeq	r2, r1, pc, ror #21
   11624:	andeq	r2, r1, r1, lsl #22
   11628:	andeq	r2, r1, r1, lsl fp
   1162c:	andeq	r2, r1, sp, lsl fp
   11630:	andeq	r2, r1, r4, lsr fp
   11634:	andeq	r2, r1, r3, asr fp
   11638:	andeq	r2, r1, r9, ror fp
   1163c:	andeq	r2, r1, r0, lsl #23
   11640:	andeq	r2, r1, r9, lsl #23
   11644:	andeq	r2, r1, pc, lsl #23
   11648:	andeq	r0, r1, r8, ror #29
   1164c:	andeq	r2, r1, sp, lsr #23
   11650:	ldrdeq	r2, [r1], -r5
   11654:			; <UNDEFINED> instruction: 0x0010ffff
   11658:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1165c:	mov	r7, r0
   11660:	ldr	sl, [pc, #248]	; 11760 <getc@plt+0xd40>
   11664:	mov	r9, r1
   11668:	mov	r6, sl
   1166c:	ldr	r3, [sl]
   11670:	mov	r4, r9
   11674:	mov	r5, r7
   11678:	ldr	fp, [r3, r7, lsl #2]
   1167c:	cmp	r5, r4
   11680:	blt	116cc <getc@plt+0xcac>
   11684:	ldr	r3, [r6]
   11688:	sub	r1, r4, #1
   1168c:	cmp	r7, r1
   11690:	str	fp, [r3, r4, lsl #2]
   11694:	bge	116a0 <getc@plt+0xc80>
   11698:	mov	r0, r7
   1169c:	bl	11658 <getc@plt+0xc38>
   116a0:	add	r7, r5, #1
   116a4:	cmp	r7, r9
   116a8:	blt	1166c <getc@plt+0xc4c>
   116ac:	add	sp, sp, #12
   116b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116b4:	sub	r4, r4, #1
   116b8:	cmp	r5, r4
   116bc:	sub	r8, r8, #4
   116c0:	bne	116d0 <getc@plt+0xcb0>
   116c4:	mov	r2, r4
   116c8:	b	11744 <getc@plt+0xd24>
   116cc:	lsl	r8, r4, #2
   116d0:	ldm	r6, {r2, r3}
   116d4:	mov	r0, fp
   116d8:	ldr	r1, [r2, r8]
   116dc:	blx	r3
   116e0:	cmp	r0, #0
   116e4:	blt	116b4 <getc@plt+0xc94>
   116e8:	ldr	r2, [r6]
   116ec:	lsl	r1, r5, #2
   116f0:	add	r8, r5, #1
   116f4:	ldr	r0, [r2, r4, lsl #2]
   116f8:	lsl	r3, r4, #2
   116fc:	str	r0, [r2, r5, lsl #2]
   11700:	add	r5, r1, #4
   11704:	cmp	r8, r4
   11708:	bge	11758 <getc@plt+0xd38>
   1170c:	ldm	r6, {r1, r2}
   11710:	mov	r0, fp
   11714:	str	r3, [sp, #4]
   11718:	ldr	r1, [r1, r5]
   1171c:	blx	r2
   11720:	add	r5, r5, #4
   11724:	ldr	r3, [sp, #4]
   11728:	cmp	r0, #0
   1172c:	bgt	11750 <getc@plt+0xd30>
   11730:	ldr	r1, [r6]
   11734:	sub	r2, r4, #1
   11738:	mov	r4, r8
   1173c:	ldr	r0, [r1, r8, lsl #2]
   11740:	str	r0, [r1, r3]
   11744:	mov	r5, r4
   11748:	mov	r4, r2
   1174c:	b	1167c <getc@plt+0xc5c>
   11750:	add	r8, r8, #1
   11754:	b	11704 <getc@plt+0xce4>
   11758:	bne	11730 <getc@plt+0xd10>
   1175c:	b	116c4 <getc@plt+0xca4>
   11760:	andeq	r4, r2, r0, lsr #2
   11764:	cmp	r0, #1
   11768:	bxle	lr
   1176c:	ldr	r3, [pc, #12]	; 11780 <getc@plt+0xd60>
   11770:	stm	r3, {r1, r2}
   11774:	sub	r1, r0, #1
   11778:	mov	r0, #0
   1177c:	b	11658 <getc@plt+0xc38>
   11780:	andeq	r4, r2, r0, lsr #2
   11784:	sub	r2, r0, #1
   11788:	mov	r0, #0
   1178c:	push	{r4, lr}
   11790:	ldrb	r3, [r2, #1]!
   11794:	cmp	r3, #0
   11798:	bne	117ac <getc@plt+0xd8c>
   1179c:	ldr	r1, [pc, #16]	; 117b4 <getc@plt+0xd94>
   117a0:	bl	12930 <error@@Base+0xc68>
   117a4:	sxth	r0, r1
   117a8:	pop	{r4, pc}
   117ac:	add	r0, r0, r3
   117b0:	b	11790 <getc@plt+0xd70>
   117b4:	strdeq	r0, [r0], -r7
   117b8:	push	{r4, r5, r6, lr}
   117bc:	add	r6, r0, #8000	; 0x1f40
   117c0:	mov	r4, r0
   117c4:	mov	r5, r0
   117c8:	add	r6, r6, #48	; 0x30
   117cc:	mov	r0, r5
   117d0:	add	r5, r5, #16
   117d4:	bl	125e0 <error@@Base+0x918>
   117d8:	cmp	r5, r6
   117dc:	bne	117cc <getc@plt+0xdac>
   117e0:	add	r4, r4, #4096	; 0x1000
   117e4:	mov	r3, #0
   117e8:	str	r3, [r4, #3952]	; 0xf70
   117ec:	str	r3, [r4, #3956]	; 0xf74
   117f0:	pop	{r4, r5, r6, pc}
   117f4:	push	{r4, r5, r6, lr}
   117f8:	mov	r4, r0
   117fc:	mov	r0, r1
   11800:	mov	r5, r1
   11804:	bl	11784 <getc@plt+0xd64>
   11808:	ldr	r4, [r4, r0, lsl #4]
   1180c:	cmp	r4, #0
   11810:	beq	11828 <getc@plt+0xe08>
   11814:	ldr	r1, [r4, #8]
   11818:	mov	r0, r5
   1181c:	bl	108d0 <strcmp@plt>
   11820:	cmp	r0, #0
   11824:	bne	11830 <getc@plt+0xe10>
   11828:	mov	r0, r4
   1182c:	pop	{r4, r5, r6, pc}
   11830:	ldr	r4, [r4, #4]
   11834:	b	1180c <getc@plt+0xdec>
   11838:	push	{r4, r5, r6, lr}
   1183c:	mov	r4, r0
   11840:	ldr	r0, [r1, #8]
   11844:	mov	r5, r1
   11848:	bl	11784 <getc@plt+0xd64>
   1184c:	mov	r1, r5
   11850:	add	r0, r4, r0, lsl #4
   11854:	add	r4, r4, #4096	; 0x1000
   11858:	bl	125f8 <error@@Base+0x930>
   1185c:	ldr	r0, [r4, #3952]	; 0xf70
   11860:	cmp	r0, #0
   11864:	beq	11874 <getc@plt+0xe54>
   11868:	bl	108e8 <free@plt>
   1186c:	mov	r3, #0
   11870:	str	r3, [r4, #3952]	; 0xf70
   11874:	ldr	r3, [r4, #3956]	; 0xf74
   11878:	add	r3, r3, #1
   1187c:	str	r3, [r4, #3956]	; 0xf74
   11880:	pop	{r4, r5, r6, pc}
   11884:	push	{r4, r5, r6, lr}
   11888:	mov	r4, r0
   1188c:	ldr	r0, [r1, #8]
   11890:	mov	r5, r1
   11894:	bl	11784 <getc@plt+0xd64>
   11898:	mov	r1, r5
   1189c:	add	r0, r4, r0, lsl #4
   118a0:	add	r4, r4, #4096	; 0x1000
   118a4:	bl	12630 <error@@Base+0x968>
   118a8:	ldr	r0, [r4, #3952]	; 0xf70
   118ac:	cmp	r0, #0
   118b0:	beq	118c0 <getc@plt+0xea0>
   118b4:	bl	108e8 <free@plt>
   118b8:	mov	r3, #0
   118bc:	str	r3, [r4, #3952]	; 0xf70
   118c0:	ldr	r3, [r4, #3956]	; 0xf74
   118c4:	sub	r3, r3, #1
   118c8:	str	r3, [r4, #3956]	; 0xf74
   118cc:	pop	{r4, r5, r6, pc}
   118d0:	push	{r4, r5, r6, lr}
   118d4:	add	r6, r0, #4096	; 0x1000
   118d8:	ldr	r4, [r6, #3952]	; 0xf70
   118dc:	cmp	r4, #0
   118e0:	popne	{r4, r5, r6, pc}
   118e4:	ldr	r3, [r6, #3956]	; 0xf74
   118e8:	cmp	r3, #0
   118ec:	popeq	{r4, r5, r6, pc}
   118f0:	mov	r5, r0
   118f4:	mov	r1, #4
   118f8:	mov	r0, r3
   118fc:	bl	11d04 <error@@Base+0x3c>
   11900:	ldr	lr, [pc, #60]	; 11944 <getc@plt+0xf24>
   11904:	mov	r3, r4
   11908:	mov	r2, r4
   1190c:	str	r0, [r6, #3952]	; 0xf70
   11910:	ldr	r1, [r5, r2, lsl #4]
   11914:	mov	ip, r3
   11918:	cmp	r1, #0
   1191c:	mov	r3, ip
   11920:	bne	11934 <getc@plt+0xf14>
   11924:	add	r2, r2, #1
   11928:	cmp	r2, lr
   1192c:	bne	11910 <getc@plt+0xef0>
   11930:	pop	{r4, r5, r6, pc}
   11934:	str	r1, [r0, ip, lsl #2]
   11938:	add	ip, ip, #1
   1193c:	ldr	r1, [r1, #4]
   11940:	b	11918 <getc@plt+0xef8>
   11944:	strdeq	r0, [r0], -r7
   11948:	push	{r4, r5, r6, r7, r8, lr}
   1194c:	add	r6, r0, #8000	; 0x1f40
   11950:	mov	r4, r0
   11954:	mov	r7, r1
   11958:	mov	r5, r0
   1195c:	add	r6, r6, #48	; 0x30
   11960:	mov	r0, r5
   11964:	mov	r1, r7
   11968:	add	r5, r5, #16
   1196c:	bl	126dc <error@@Base+0xa14>
   11970:	cmp	r5, r6
   11974:	bne	11960 <getc@plt+0xf40>
   11978:	add	r4, r4, #4096	; 0x1000
   1197c:	ldr	r0, [r4, #3952]	; 0xf70
   11980:	cmp	r0, #0
   11984:	beq	11994 <getc@plt+0xf74>
   11988:	bl	108e8 <free@plt>
   1198c:	mov	r3, #0
   11990:	str	r3, [r4, #3952]	; 0xf70
   11994:	mov	r3, #0
   11998:	str	r3, [r4, #3956]	; 0xf74
   1199c:	pop	{r4, r5, r6, r7, r8, pc}
   119a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119a4:	mov	r7, #0
   119a8:	ldr	r6, [pc, #144]	; 11a40 <getc@plt+0x1020>
   119ac:	ldr	r5, [pc, #144]	; 11a44 <getc@plt+0x1024>
   119b0:	mov	sl, r6
   119b4:	sub	r8, r6, #1024	; 0x400
   119b8:	add	fp, r6, #2
   119bc:	ldrsh	r9, [r6]
   119c0:	mov	r4, #0
   119c4:	b	119cc <getc@plt+0xfac>
   119c8:	add	r4, r4, #1
   119cc:	cmp	r4, r9
   119d0:	bge	11a0c <getc@plt+0xfec>
   119d4:	ldr	r1, [r8, r4, lsl #2]
   119d8:	ldr	r0, [r5, #8]
   119dc:	bl	108d0 <strcmp@plt>
   119e0:	cmp	r0, #0
   119e4:	bne	119c8 <getc@plt+0xfa8>
   119e8:	ldr	r3, [r5]
   119ec:	ldr	r2, [r5, #4]
   119f0:	cmp	r2, r3
   119f4:	bcs	11a34 <getc@plt+0x1014>
   119f8:	add	r7, r7, #1
   119fc:	cmp	r7, #91	; 0x5b
   11a00:	add	r5, r5, #12
   11a04:	bne	119bc <getc@plt+0xf9c>
   11a08:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a0c:	bne	119e8 <getc@plt+0xfc8>
   11a10:	cmp	r4, #256	; 0x100
   11a14:	bne	11a20 <getc@plt+0x1000>
   11a18:	ldr	r0, [pc, #40]	; 11a48 <getc@plt+0x1028>
   11a1c:	bl	11cc8 <error@@Base>
   11a20:	add	r3, r4, #1
   11a24:	strh	r3, [sl]
   11a28:	ldr	r3, [r5, #8]
   11a2c:	str	r3, [r8, r4, lsl #2]
   11a30:	b	119e8 <getc@plt+0xfc8>
   11a34:	strb	r4, [r3, fp]
   11a38:	add	r3, r3, #1
   11a3c:	b	119f0 <getc@plt+0xfd0>
   11a40:	andeq	r4, r2, r8, lsr #10
   11a44:	andeq	r2, r1, r4, ror #23
   11a48:	andeq	r3, r1, r8, lsr #32
   11a4c:	ldr	r3, [pc, #36]	; 11a78 <getc@plt+0x1058>
   11a50:	push	{r4, lr}
   11a54:	mov	r4, r0
   11a58:	ldrsh	r3, [r3]
   11a5c:	cmp	r3, #0
   11a60:	bne	11a68 <getc@plt+0x1048>
   11a64:	bl	119a0 <getc@plt+0xf80>
   11a68:	ldr	r3, [pc, #12]	; 11a7c <getc@plt+0x105c>
   11a6c:	add	r0, r3, r4
   11a70:	ldrb	r0, [r0, #1026]	; 0x402
   11a74:	pop	{r4, pc}
   11a78:	andeq	r4, r2, r8, lsr #10
   11a7c:	andeq	r4, r2, r8, lsr #2
   11a80:	ldr	r3, [pc, #56]	; 11ac0 <getc@plt+0x10a0>
   11a84:	push	{r4, r5, r6, lr}
   11a88:	uxtb	r5, r0
   11a8c:	ldrsh	r2, [r3]
   11a90:	mov	r4, r3
   11a94:	cmp	r2, #0
   11a98:	bne	11aa0 <getc@plt+0x1080>
   11a9c:	bl	119a0 <getc@plt+0xf80>
   11aa0:	ldrsh	r3, [r4]
   11aa4:	cmp	r5, r3
   11aa8:	blt	11ab4 <getc@plt+0x1094>
   11aac:	ldr	r0, [pc, #16]	; 11ac4 <getc@plt+0x10a4>
   11ab0:	bl	11cc8 <error@@Base>
   11ab4:	ldr	r3, [pc, #12]	; 11ac8 <getc@plt+0x10a8>
   11ab8:	ldr	r0, [r3, r5, lsl #2]
   11abc:	pop	{r4, r5, r6, pc}
   11ac0:	andeq	r4, r2, r8, lsr #10
   11ac4:	andeq	r3, r1, r3, asr #32
   11ac8:	andeq	r4, r2, r8, lsr #2
   11acc:	ldr	r3, [pc, #56]	; 11b0c <getc@plt+0x10ec>
   11ad0:	push	{r4, r5, lr}
   11ad4:	sub	sp, sp, #116	; 0x74
   11ad8:	ldr	r4, [r3]
   11adc:	mov	r5, r0
   11ae0:	bl	10990 <getpid@plt>
   11ae4:	mov	r2, r4
   11ae8:	ldr	r1, [pc, #32]	; 11b10 <getc@plt+0x10f0>
   11aec:	str	r5, [sp]
   11af0:	mov	r3, r0
   11af4:	add	r0, sp, #12
   11af8:	bl	109e4 <sprintf@plt>
   11afc:	add	r0, sp, #12
   11b00:	bl	10918 <strdup@plt>
   11b04:	add	sp, sp, #116	; 0x74
   11b08:	pop	{r4, r5, pc}
   11b0c:	addseq	r6, fp, r0, lsl #26
   11b10:	andeq	r3, r1, lr, lsl #12
   11b14:	ldr	r3, [pc, #84]	; 11b70 <getc@plt+0x1150>
   11b18:	push	{r7, lr}
   11b1c:	mov	r5, r0
   11b20:	ldr	r3, [r3]
   11b24:	cmp	r3, #0
   11b28:	beq	11b30 <getc@plt+0x1110>
   11b2c:	blx	r3
   11b30:	ldr	r6, [pc, #60]	; 11b74 <getc@plt+0x1154>
   11b34:	mov	r4, #1
   11b38:	ldrsh	r3, [r6]
   11b3c:	cmp	r3, r4
   11b40:	bge	11b4c <getc@plt+0x112c>
   11b44:	mov	r0, r5
   11b48:	bl	1099c <exit@plt>
   11b4c:	mov	r0, r4
   11b50:	bl	11acc <getc@plt+0x10ac>
   11b54:	add	r4, r4, #1
   11b58:	sxth	r4, r4
   11b5c:	mov	r7, r0
   11b60:	bl	10930 <unlink@plt>
   11b64:	mov	r0, r7
   11b68:	bl	108e8 <free@plt>
   11b6c:	b	11b38 <getc@plt+0x1118>
   11b70:	addseq	r6, fp, r4, lsl #26
   11b74:	andseq	r4, r3, sl, lsr #10
   11b78:	mov	r3, #0
   11b7c:	ldrb	r2, [r0, r3]
   11b80:	cmp	r2, #0
   11b84:	beq	11bb0 <getc@plt+0x1190>
   11b88:	ldrb	ip, [r1, r3]
   11b8c:	cmp	ip, r2
   11b90:	beq	11ba8 <getc@plt+0x1188>
   11b94:	ldrb	r3, [r1, r3]
   11b98:	cmp	r3, r2
   11b9c:	mvnhi	r0, #0
   11ba0:	movls	r0, #1
   11ba4:	bx	lr
   11ba8:	add	r3, r3, #1
   11bac:	b	11b7c <getc@plt+0x115c>
   11bb0:	ldrb	r0, [r1, r3]
   11bb4:	cmp	r0, #0
   11bb8:	bne	11b94 <getc@plt+0x1174>
   11bbc:	bx	lr
   11bc0:	ldr	r2, [pc, #28]	; 11be4 <getc@plt+0x11c4>
   11bc4:	ldr	r2, [r2]
   11bc8:	cmp	r2, r0
   11bcc:	bxeq	lr
   11bd0:	ldr	r2, [pc, #16]	; 11be8 <getc@plt+0x11c8>
   11bd4:	ldr	r2, [r2]
   11bd8:	cmp	r0, r2
   11bdc:	bxeq	lr
   11be0:	b	109d8 <fclose@plt>
   11be4:	strheq	r4, [r2], -r0
   11be8:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   11bec:	push	{lr}		; (str lr, [sp, #-4]!)
   11bf0:	sub	sp, sp, #92	; 0x5c
   11bf4:	mov	r1, sp
   11bf8:	bl	129c4 <error@@Base+0xcfc>
   11bfc:	clz	r0, r0
   11c00:	lsr	r0, r0, #5
   11c04:	add	sp, sp, #92	; 0x5c
   11c08:	pop	{pc}		; (ldr pc, [sp], #4)
   11c0c:	ldr	r3, [pc, #36]	; 11c38 <getc@plt+0x1218>
   11c10:	push	{r4, lr}
   11c14:	ldrh	r0, [r3]
   11c18:	add	r0, r0, #1
   11c1c:	sxth	r0, r0
   11c20:	strh	r0, [r3]
   11c24:	bl	11acc <getc@plt+0x10ac>
   11c28:	mov	r4, r0
   11c2c:	bl	10930 <unlink@plt>
   11c30:	mov	r0, r4
   11c34:	pop	{r4, pc}
   11c38:	andseq	r4, r3, sl, lsr #10
   11c3c:	push	{r4, lr}
   11c40:	mov	r4, r0
   11c44:	bl	109b4 <strlen@plt>
   11c48:	sub	r0, r0, #1
   11c4c:	sxth	r0, r0
   11c50:	cmp	r0, #0
   11c54:	blt	11c64 <getc@plt+0x1244>
   11c58:	ldrb	r3, [r4, r0]
   11c5c:	cmp	r3, #47	; 0x2f
   11c60:	bne	11c48 <getc@plt+0x1228>
   11c64:	add	r0, r0, #1
   11c68:	add	r0, r4, r0
   11c6c:	pop	{r4, pc}
   11c70:	push	{r4, lr}
   11c74:	mov	r0, #0
   11c78:	bl	11b14 <getc@plt+0x10f4>
   11c7c:	ldr	r2, [pc, #52]	; 11cb8 <getc@plt+0x1298>
   11c80:	push	{r4, lr}
   11c84:	ldr	r2, [r2]
   11c88:	cmp	r2, #0
   11c8c:	beq	11c98 <getc@plt+0x1278>
   11c90:	blx	r2
   11c94:	bl	11c70 <getc@plt+0x1250>
   11c98:	mov	r3, r0
   11c9c:	ldr	r2, [pc, #24]	; 11cbc <getc@plt+0x129c>
   11ca0:	ldr	r0, [pc, #24]	; 11cc0 <getc@plt+0x12a0>
   11ca4:	ldr	r1, [pc, #24]	; 11cc4 <getc@plt+0x12a4>
   11ca8:	ldr	r2, [r2]
   11cac:	ldr	r0, [r0]
   11cb0:	bl	109c0 <fprintf@plt>
   11cb4:	b	11c94 <getc@plt+0x1274>
   11cb8:			; <UNDEFINED> instruction: 0x009b6cfc
   11cbc:	addseq	r6, fp, r0, lsl #26
   11cc0:	andeq	r4, r2, r8, lsr #1
   11cc4:	andeq	r3, r1, ip, lsl r6

00011cc8 <error@@Base>:
   11cc8:	mov	r3, r0
   11ccc:	ldr	r2, [pc, #32]	; 11cf4 <error@@Base+0x2c>
   11cd0:	ldr	r0, [pc, #32]	; 11cf8 <error@@Base+0x30>
   11cd4:	push	{r4, lr}
   11cd8:	ldr	r2, [r2]
   11cdc:	ldr	r1, [pc, #24]	; 11cfc <error@@Base+0x34>
   11ce0:	ldr	r0, [r0]
   11ce4:	bl	109c0 <fprintf@plt>
   11ce8:	ldr	r3, [pc, #16]	; 11d00 <error@@Base+0x38>
   11cec:	ldr	r0, [r3]
   11cf0:	bl	11b14 <getc@plt+0x10f4>
   11cf4:	addseq	r6, fp, r0, lsl #26
   11cf8:	andeq	r4, r2, r8, lsr #1
   11cfc:	andeq	r3, r1, fp, lsr #12
   11d00:	andeq	r4, r2, r0, lsr #1
   11d04:	push	{r4, lr}
   11d08:	bl	108b8 <calloc@plt>
   11d0c:	cmp	r0, #0
   11d10:	popne	{r4, pc}
   11d14:	ldr	r0, [pc]	; 11d1c <error@@Base+0x54>
   11d18:	bl	11cc8 <error@@Base>
   11d1c:	andeq	r3, r1, r3, lsr r6
   11d20:	ldr	r3, [pc, #32]	; 11d48 <error@@Base+0x80>
   11d24:	ldrb	r2, [r3, #2]
   11d28:	cmp	r2, #0
   11d2c:	bne	11d44 <error@@Base+0x7c>
   11d30:	push	{r4, lr}
   11d34:	mov	r2, #1
   11d38:	ldr	r0, [pc, #12]	; 11d4c <error@@Base+0x84>
   11d3c:	strb	r2, [r3, #2]
   11d40:	bl	11cc8 <error@@Base>
   11d44:	bx	lr
   11d48:	andseq	r4, r3, sl, lsr #10
   11d4c:	andeq	r3, r1, sp, asr #12
   11d50:	push	{r0, r1, r2, lr}
   11d54:	mov	r3, r0
   11d58:	ldr	r2, [pc, #32]	; 11d80 <error@@Base+0xb8>
   11d5c:	ldr	r0, [pc, #32]	; 11d84 <error@@Base+0xbc>
   11d60:	str	r1, [sp]
   11d64:	ldr	r1, [pc, #28]	; 11d88 <error@@Base+0xc0>
   11d68:	ldr	r2, [r2]
   11d6c:	ldr	r0, [r0]
   11d70:	bl	109c0 <fprintf@plt>
   11d74:	ldr	r3, [pc, #16]	; 11d8c <error@@Base+0xc4>
   11d78:	ldr	r0, [r3]
   11d7c:	bl	11b14 <getc@plt+0x10f4>
   11d80:	addseq	r6, fp, r0, lsl #26
   11d84:	andeq	r4, r2, r8, lsr #1
   11d88:	andeq	r3, r1, ip, asr r6
   11d8c:	andeq	r4, r2, r0, lsr #1
   11d90:	push	{r4, r5, r6, lr}
   11d94:	subs	r4, r0, #0
   11d98:	mov	r5, r1
   11d9c:	bne	11db8 <error@@Base+0xf0>
   11da0:	ldrb	r3, [r1]
   11da4:	cmp	r3, #114	; 0x72
   11da8:	ldreq	r3, [pc, #44]	; 11ddc <error@@Base+0x114>
   11dac:	ldrne	r3, [pc, #44]	; 11de0 <error@@Base+0x118>
   11db0:	ldr	r0, [r3]
   11db4:	pop	{r4, r5, r6, pc}
   11db8:	bl	108dc <fopen@plt>
   11dbc:	cmp	r0, #0
   11dc0:	popne	{r4, r5, r6, pc}
   11dc4:	ldrb	r3, [r5]
   11dc8:	mov	r1, r4
   11dcc:	cmp	r3, #119	; 0x77
   11dd0:	ldreq	r0, [pc, #12]	; 11de4 <error@@Base+0x11c>
   11dd4:	ldrne	r0, [pc, #12]	; 11de8 <error@@Base+0x120>
   11dd8:	bl	11d50 <error@@Base+0x88>
   11ddc:	strheq	r4, [r2], -r0
   11de0:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   11de4:	andeq	r3, r1, r9, ror #12
   11de8:	andeq	r3, r1, pc, ror r6
   11dec:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11df0:	mov	r8, r0
   11df4:	ldr	r0, [r1]
   11df8:	str	r2, [sp]
   11dfc:	mov	r7, r1
   11e00:	mov	r9, r3
   11e04:	bl	11c3c <getc@plt+0x121c>
   11e08:	ldr	r3, [pc, #396]	; 11f9c <error@@Base+0x2d4>
   11e0c:	ldr	r1, [pc, #396]	; 11fa0 <error@@Base+0x2d8>
   11e10:	str	r0, [r3]
   11e14:	mov	r0, #2
   11e18:	bl	10978 <__sysv_signal@plt>
   11e1c:	ldr	r1, [pc, #380]	; 11fa0 <error@@Base+0x2d8>
   11e20:	mov	r0, #15
   11e24:	bl	10978 <__sysv_signal@plt>
   11e28:	ldr	r3, [r8]
   11e2c:	cmp	r3, #1
   11e30:	movne	r6, #0
   11e34:	movne	r5, #1
   11e38:	bne	11f5c <error@@Base+0x294>
   11e3c:	ldr	r3, [pc, #352]	; 11fa4 <error@@Base+0x2dc>
   11e40:	ldrb	r6, [r3, #4]
   11e44:	cmp	r6, #0
   11e48:	beq	11f68 <error@@Base+0x2a0>
   11e4c:	ldr	r0, [sp]
   11e50:	bl	11c7c <getc@plt+0x125c>
   11e54:	ldr	r4, [r7, r5, lsl #2]
   11e58:	lsl	sl, r5, #2
   11e5c:	ldrb	r3, [r4]
   11e60:	cmp	r3, #45	; 0x2d
   11e64:	bne	11f8c <error@@Base+0x2c4>
   11e68:	ldrb	r3, [r4, #1]
   11e6c:	cmp	r3, #0
   11e70:	str	r3, [sp, #4]
   11e74:	beq	11f8c <error@@Base+0x2c4>
   11e78:	mov	r0, r4
   11e7c:	bl	109b4 <strlen@plt>
   11e80:	mov	r1, r4
   11e84:	mov	r2, r0
   11e88:	ldr	r0, [pc, #280]	; 11fa8 <error@@Base+0x2e0>
   11e8c:	bl	10a08 <strncmp@plt>
   11e90:	cmp	r0, #0
   11e94:	beq	11e4c <error@@Base+0x184>
   11e98:	add	r0, r5, #1
   11e9c:	cmp	r0, fp
   11ea0:	addlt	sl, r7, sl
   11ea4:	movge	r1, #0
   11ea8:	ldrlt	r1, [sl, #4]
   11eac:	cmp	r9, #0
   11eb0:	ldr	r3, [sp, #4]
   11eb4:	beq	11f74 <error@@Base+0x2ac>
   11eb8:	mov	r2, #0
   11ebc:	add	lr, r2, r2, lsl #1
   11ec0:	add	ip, r9, lr, lsl #2
   11ec4:	ldrb	lr, [r9, lr, lsl #2]
   11ec8:	cmp	lr, #0
   11ecc:	beq	11f74 <error@@Base+0x2ac>
   11ed0:	cmp	r3, lr
   11ed4:	bne	11f14 <error@@Base+0x24c>
   11ed8:	ldr	r3, [ip, #4]
   11edc:	cmp	r3, #0
   11ee0:	bne	11f20 <error@@Base+0x258>
   11ee4:	ldr	r3, [ip, #8]
   11ee8:	cmp	r3, #0
   11eec:	beq	11f74 <error@@Base+0x2ac>
   11ef0:	ldrb	r2, [r4, #2]
   11ef4:	cmp	r2, #0
   11ef8:	bne	11f74 <error@@Base+0x2ac>
   11efc:	ldrb	r2, [r3]
   11f00:	cmp	r2, #0
   11f04:	bne	11f80 <error@@Base+0x2b8>
   11f08:	mov	r2, #1
   11f0c:	strb	r2, [r3]
   11f10:	b	11f54 <error@@Base+0x28c>
   11f14:	add	r2, r2, #1
   11f18:	sxth	r2, r2
   11f1c:	b	11ebc <error@@Base+0x1f4>
   11f20:	ldrb	r2, [r4, #2]
   11f24:	cmp	r2, #0
   11f28:	cmpeq	r1, #0
   11f2c:	beq	11ee4 <error@@Base+0x21c>
   11f30:	ldr	ip, [r3]
   11f34:	cmp	ip, #0
   11f38:	bne	11f80 <error@@Base+0x2b8>
   11f3c:	cmp	r2, #0
   11f40:	addne	r1, r4, #2
   11f44:	str	r1, [r3]
   11f48:	ldrb	r3, [r4, #2]
   11f4c:	cmp	r3, #0
   11f50:	sxtheq	r5, r0
   11f54:	add	r5, r5, #1
   11f58:	sxth	r5, r5
   11f5c:	ldr	fp, [r8]
   11f60:	cmp	r5, fp
   11f64:	blt	11e54 <error@@Base+0x18c>
   11f68:	str	r6, [r8]
   11f6c:	add	sp, sp, #12
   11f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f74:	ldr	r0, [pc, #48]	; 11fac <error@@Base+0x2e4>
   11f78:	mov	r1, r4
   11f7c:	bl	11d50 <error@@Base+0x88>
   11f80:	mov	r1, r4
   11f84:	ldr	r0, [pc, #36]	; 11fb0 <error@@Base+0x2e8>
   11f88:	b	11f7c <error@@Base+0x2b4>
   11f8c:	add	r3, r6, #1
   11f90:	str	r4, [r7, r6, lsl #2]
   11f94:	sxth	r6, r3
   11f98:	b	11f54 <error@@Base+0x28c>
   11f9c:	addseq	r6, fp, r0, lsl #26
   11fa0:	andeq	r1, r1, r0, lsr #26
   11fa4:	andeq	r4, r2, r0, lsr #1
   11fa8:	muleq	r1, r3, r6
   11fac:	muleq	r1, r9, r6
   11fb0:	andeq	r3, r1, r8, lsr #13
   11fb4:	push	{r0, r1, r2, lr}
   11fb8:	mov	r3, r0
   11fbc:	ldr	r2, [pc, #28]	; 11fe0 <error@@Base+0x318>
   11fc0:	ldr	r0, [pc, #28]	; 11fe4 <error@@Base+0x31c>
   11fc4:	str	r1, [sp]
   11fc8:	ldr	r1, [pc, #24]	; 11fe8 <error@@Base+0x320>
   11fcc:	ldr	r2, [r2]
   11fd0:	ldr	r0, [r0]
   11fd4:	bl	109c0 <fprintf@plt>
   11fd8:	add	sp, sp, #12
   11fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   11fe0:	addseq	r6, fp, r0, lsl #26
   11fe4:	andeq	r4, r2, r8, lsr #1
   11fe8:	andeq	r3, r1, ip, asr r6
   11fec:	push	{r4, r5, r6, lr}
   11ff0:	mov	r4, r0
   11ff4:	uxtb	r6, r1
   11ff8:	mov	r0, #1
   11ffc:	mov	r1, #16
   12000:	mov	r5, r2
   12004:	bl	11d04 <error@@Base+0x3c>
   12008:	strb	r6, [r0, #8]
   1200c:	str	r5, [r0, #12]
   12010:	mov	r1, r0
   12014:	mov	r0, r4
   12018:	pop	{r4, r5, r6, lr}
   1201c:	b	12608 <error@@Base+0x940>
   12020:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12024:	sub	sp, sp, #116	; 0x74
   12028:	ldrb	r3, [r2]
   1202c:	adds	r3, r3, #0
   12030:	movne	r3, #1
   12034:	cmp	r1, #0
   12038:	movne	r3, #0
   1203c:	cmp	r3, #0
   12040:	beq	12050 <error@@Base+0x388>
   12044:	ldr	r1, [pc, #752]	; 1233c <error@@Base+0x674>
   12048:	ldr	r0, [pc, #752]	; 12340 <error@@Base+0x678>
   1204c:	bl	11d50 <error@@Base+0x88>
   12050:	mov	r6, r0
   12054:	mov	r0, r1
   12058:	ldr	r1, [pc, #740]	; 12344 <error@@Base+0x67c>
   1205c:	mov	r4, r2
   12060:	ldr	r7, [r6, #4]
   12064:	bl	11d90 <error@@Base+0xc8>
   12068:	ldrb	r3, [r4]
   1206c:	cmp	r3, #0
   12070:	mov	r5, r0
   12074:	beq	120c0 <error@@Base+0x3f8>
   12078:	mov	r2, r0
   1207c:	mov	r1, #99	; 0x63
   12080:	add	r0, sp, #12
   12084:	bl	10900 <fgets@plt>
   12088:	cmp	r0, #0
   1208c:	beq	120b0 <error@@Base+0x3e8>
   12090:	mov	r2, #51	; 0x33
   12094:	ldr	r1, [pc, #684]	; 12348 <error@@Base+0x680>
   12098:	add	r0, sp, #12
   1209c:	bl	10a08 <strncmp@plt>
   120a0:	subs	r8, r0, #0
   120a4:	moveq	r9, #99	; 0x63
   120a8:	ldreq	sl, [pc, #668]	; 1234c <error@@Base+0x684>
   120ac:	beq	1213c <error@@Base+0x474>
   120b0:	mov	r0, r5
   120b4:	bl	10924 <rewind@plt>
   120b8:	mov	r3, #0
   120bc:	strb	r3, [r4, #11]
   120c0:	ldrb	r3, [r4, #1]
   120c4:	ldr	r8, [r4, #4]
   120c8:	mov	r0, r5
   120cc:	cmp	r8, #0
   120d0:	mov	fp, #0
   120d4:	str	r3, [sp]
   120d8:	moveq	r8, #94	; 0x5e
   120dc:	bl	10a20 <getc@plt>
   120e0:	add	r3, sp, #9
   120e4:	str	r3, [sp, #4]
   120e8:	cmn	r0, #1
   120ec:	bne	1215c <error@@Base+0x494>
   120f0:	mov	r0, r5
   120f4:	bl	11bc0 <getc@plt+0x11a0>
   120f8:	ldrb	r3, [r4, #9]
   120fc:	cmp	r3, #0
   12100:	bne	12200 <error@@Base+0x538>
   12104:	ldrb	r3, [r4, #10]
   12108:	cmp	r3, #0
   1210c:	bne	12314 <error@@Base+0x64c>
   12110:	add	sp, sp, #116	; 0x74
   12114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12118:	mov	r1, sl
   1211c:	add	r0, sp, #12
   12120:	bl	108d0 <strcmp@plt>
   12124:	cmp	r0, #0
   12128:	bne	1213c <error@@Base+0x474>
   1212c:	add	r8, r8, #1
   12130:	sxth	r8, r8
   12134:	cmp	r8, #1
   12138:	bgt	12154 <error@@Base+0x48c>
   1213c:	mov	r2, r5
   12140:	mov	r1, r9
   12144:	add	r0, sp, #12
   12148:	bl	10900 <fgets@plt>
   1214c:	cmp	r0, #0
   12150:	bne	12118 <error@@Base+0x450>
   12154:	mov	r3, #1
   12158:	b	120bc <error@@Base+0x3f4>
   1215c:	ldr	r3, [pc, #492]	; 12350 <error@@Base+0x688>
   12160:	ldrsb	r9, [r3, r0]
   12164:	cmp	r9, #0
   12168:	bgt	12174 <error@@Base+0x4ac>
   1216c:	ldr	r0, [pc, #480]	; 12354 <error@@Base+0x68c>
   12170:	bl	11cc8 <error@@Base>
   12174:	cmp	r9, #1
   12178:	strb	r0, [sp, #8]
   1217c:	beq	121a4 <error@@Base+0x4dc>
   12180:	sub	sl, r9, #1
   12184:	mov	r3, r5
   12188:	mov	r2, sl
   1218c:	mov	r1, #1
   12190:	ldr	r0, [sp, #4]
   12194:	bl	10954 <fread@plt>
   12198:	cmp	sl, r0
   1219c:	ldrne	r0, [pc, #436]	; 12358 <error@@Base+0x690>
   121a0:	bne	12170 <error@@Base+0x4a8>
   121a4:	add	r2, sp, #12
   121a8:	mov	r1, #4
   121ac:	add	r0, sp, #8
   121b0:	bl	10960 <utf8proc_iterate@plt>
   121b4:	cmp	r9, r0
   121b8:	beq	121c4 <error@@Base+0x4fc>
   121bc:	bl	109f0 <utf8proc_errmsg@plt>
   121c0:	b	12170 <error@@Base+0x4a8>
   121c4:	ldr	r3, [sp]
   121c8:	cmp	r3, #0
   121cc:	beq	121e0 <error@@Base+0x518>
   121d0:	ldr	r3, [sp, #12]
   121d4:	cmp	r8, r3
   121d8:	moveq	fp, #1
   121dc:	beq	121f4 <error@@Base+0x52c>
   121e0:	mov	r1, fp
   121e4:	ldr	r2, [sp, #12]
   121e8:	mov	r0, r6
   121ec:	bl	11fec <error@@Base+0x324>
   121f0:	mov	fp, #0
   121f4:	mov	r0, r5
   121f8:	bl	10a20 <getc@plt>
   121fc:	b	120e8 <error@@Base+0x420>
   12200:	cmp	r7, #0
   12204:	mov	sl, #32
   12208:	ldrne	r8, [r7, #4]
   1220c:	ldreq	r8, [r6]
   12210:	mov	r5, r8
   12214:	cmp	r5, #0
   12218:	bne	122a0 <error@@Base+0x5d8>
   1221c:	cmp	r8, #0
   12220:	beq	12104 <error@@Base+0x43c>
   12224:	ldr	r2, [r8, #12]
   12228:	ldr	r9, [r8, #4]
   1222c:	cmp	r2, #32
   12230:	eor	r3, r5, #1
   12234:	bne	122f4 <error@@Base+0x62c>
   12238:	cmp	r9, #0
   1223c:	orreq	r3, r3, #1
   12240:	cmp	r3, #0
   12244:	bne	12258 <error@@Base+0x590>
   12248:	ldr	r3, [r9, #12]
   1224c:	cmp	r3, #10
   12250:	cmpne	r3, #32
   12254:	bne	12308 <error@@Base+0x640>
   12258:	cmp	r9, #0
   1225c:	moveq	r3, #0
   12260:	andne	r3, r5, #1
   12264:	cmp	r3, #0
   12268:	beq	12284 <error@@Base+0x5bc>
   1226c:	ldr	r3, [r9, #12]
   12270:	cmp	r3, #32
   12274:	ldrbeq	r3, [r9, #8]
   12278:	ldrbeq	r2, [r8, #8]
   1227c:	orreq	r3, r3, r2
   12280:	strbeq	r3, [r9, #8]
   12284:	mov	r0, r6
   12288:	mov	r1, r8
   1228c:	bl	12630 <error@@Base+0x968>
   12290:	mov	r0, r8
   12294:	bl	108e8 <free@plt>
   12298:	mov	r8, r9
   1229c:	b	1221c <error@@Base+0x554>
   122a0:	ldr	r9, [r5, #12]
   122a4:	mov	r0, r9
   122a8:	bl	108f4 <utf8proc_get_property@plt>
   122ac:	cmp	r9, #13
   122b0:	bhi	122e4 <error@@Base+0x61c>
   122b4:	cmp	r9, #11
   122b8:	bcs	122ec <error@@Base+0x624>
   122bc:	cmp	r9, #9
   122c0:	beq	122ec <error@@Base+0x624>
   122c4:	cmp	r9, #10
   122c8:	beq	122dc <error@@Base+0x614>
   122cc:	ldrsh	r3, [r0]
   122d0:	sub	r3, r3, #23
   122d4:	cmp	r3, #2
   122d8:	bls	122ec <error@@Base+0x624>
   122dc:	ldr	r5, [r5, #4]
   122e0:	b	12214 <error@@Base+0x54c>
   122e4:	cmp	r9, #160	; 0xa0
   122e8:	bne	122cc <error@@Base+0x604>
   122ec:	str	sl, [r5, #12]
   122f0:	b	122dc <error@@Base+0x614>
   122f4:	cmp	r2, #10
   122f8:	movne	r3, #0
   122fc:	andeq	r3, r3, #1
   12300:	cmp	r3, #0
   12304:	bne	12258 <error@@Base+0x590>
   12308:	subs	r5, r2, #10
   1230c:	movne	r5, #1
   12310:	b	12298 <error@@Base+0x5d0>
   12314:	cmp	r7, #0
   12318:	ldrne	r4, [r7, #4]
   1231c:	ldreq	r4, [r6]
   12320:	cmp	r4, #0
   12324:	beq	12110 <error@@Base+0x448>
   12328:	ldr	r0, [r4, #12]
   1232c:	bl	1093c <utf8proc_tolower@plt>
   12330:	str	r0, [r4, #12]
   12334:	ldr	r4, [r4, #4]
   12338:	b	12320 <error@@Base+0x658>
   1233c:			; <UNDEFINED> instruction: 0x000136b9
   12340:	andeq	r3, r1, r3, asr #13
   12344:	andeq	r3, r1, r9, asr r7
   12348:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   1234c:	andeq	r3, r1, fp, lsl #14
   12350:	andeq	r3, r2, r8, lsl #28
   12354:	andeq	r3, r1, r3, asr #14
   12358:	andeq	r3, r1, fp, asr r7
   1235c:	push	{r4, lr}
   12360:	bl	1090c <utf8proc_encode_char@plt>
   12364:	cmp	r0, #0
   12368:	bgt	12374 <error@@Base+0x6ac>
   1236c:	ldr	r0, [pc, #8]	; 1237c <error@@Base+0x6b4>
   12370:	bl	11cc8 <error@@Base>
   12374:	sxtb	r0, r0
   12378:	pop	{r4, pc}
   1237c:	andeq	r3, r1, r3, ror r7
   12380:	push	{r4, r5, r6, r7, r8, lr}
   12384:	uxtb	r4, r0
   12388:	cmp	r4, #0
   1238c:	mov	r7, r1
   12390:	mov	r6, r2
   12394:	uxtb	r8, r3
   12398:	beq	123ac <error@@Base+0x6e4>
   1239c:	mov	r1, r2
   123a0:	mov	r0, #94	; 0x5e
   123a4:	bl	1235c <error@@Base+0x694>
   123a8:	sxth	r4, r0
   123ac:	cmp	r7, #10
   123b0:	add	r5, r6, r4
   123b4:	bne	123d4 <error@@Base+0x70c>
   123b8:	ldr	r2, [pc, #168]	; 12468 <error@@Base+0x7a0>
   123bc:	cmp	r8, #0
   123c0:	ldr	r1, [pc, #164]	; 1246c <error@@Base+0x7a4>
   123c4:	mov	r0, r5
   123c8:	moveq	r1, r2
   123cc:	pop	{r4, r5, r6, r7, r8, lr}
   123d0:	b	109e4 <sprintf@plt>
   123d4:	mov	r0, r7
   123d8:	bl	108f4 <utf8proc_get_property@plt>
   123dc:	cmp	r7, #32
   123e0:	beq	12400 <error@@Base+0x738>
   123e4:	ldrh	r3, [r0]
   123e8:	cmp	r3, #29
   123ec:	bhi	12448 <error@@Base+0x780>
   123f0:	ldr	r2, [pc, #120]	; 12470 <error@@Base+0x7a8>
   123f4:	mov	r1, #1
   123f8:	ands	r3, r2, r1, lsl r3
   123fc:	beq	12448 <error@@Base+0x780>
   12400:	mov	r0, r7
   12404:	bl	109a8 <utf8proc_category@plt>
   12408:	sub	r0, r0, #6
   1240c:	cmp	r0, #2
   12410:	bhi	12428 <error@@Base+0x760>
   12414:	mov	r1, r5
   12418:	ldr	r0, [pc, #84]	; 12474 <error@@Base+0x7ac>
   1241c:	bl	1235c <error@@Base+0x694>
   12420:	add	r4, r0, r4
   12424:	sxth	r4, r4
   12428:	add	r1, r6, r4
   1242c:	mov	r0, r7
   12430:	bl	1235c <error@@Base+0x694>
   12434:	mov	r3, #0
   12438:	add	r0, r0, r4
   1243c:	sxth	r0, r0
   12440:	strb	r3, [r6, r0]
   12444:	pop	{r4, r5, r6, r7, r8, pc}
   12448:	cmp	r7, #255	; 0xff
   1244c:	movhi	r2, r7
   12450:	ldrhi	r1, [pc, #32]	; 12478 <error@@Base+0x7b0>
   12454:	ldrls	r1, [pc, #32]	; 1247c <error@@Base+0x7b4>
   12458:	movls	r2, r7
   1245c:	mov	r0, r5
   12460:	pop	{r4, r5, r6, r7, r8, lr}
   12464:	b	109e4 <sprintf@plt>
   12468:	andeq	r2, r1, sp, ror #21
   1246c:	andeq	r3, r1, sl, lsl #15
   12470:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12474:	andeq	r2, r0, ip, asr #11
   12478:	muleq	r1, r6, r7
   1247c:	andeq	r3, r1, pc, lsl #15
   12480:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   12484:	mov	r6, r0
   12488:	mov	r0, r1
   1248c:	ldr	r1, [pc, #132]	; 12518 <error@@Base+0x850>
   12490:	mov	r5, r2
   12494:	bl	11d90 <error@@Base+0xc8>
   12498:	cmp	r5, #0
   1249c:	mov	r4, r0
   124a0:	beq	124d0 <error@@Base+0x808>
   124a4:	mov	r1, r0
   124a8:	ldr	r0, [pc, #108]	; 1251c <error@@Base+0x854>
   124ac:	bl	109fc <fputs@plt>
   124b0:	mov	r1, r4
   124b4:	ldr	r0, [pc, #100]	; 12520 <error@@Base+0x858>
   124b8:	bl	109fc <fputs@plt>
   124bc:	mov	r0, r4
   124c0:	blx	r5
   124c4:	mov	r1, r4
   124c8:	ldr	r0, [pc, #80]	; 12520 <error@@Base+0x858>
   124cc:	bl	109fc <fputs@plt>
   124d0:	ldr	r5, [r6]
   124d4:	mov	r6, #0
   124d8:	cmp	r5, #0
   124dc:	bne	124f0 <error@@Base+0x828>
   124e0:	mov	r0, r4
   124e4:	bl	11bc0 <getc@plt+0x11a0>
   124e8:	add	sp, sp, #16
   124ec:	pop	{r4, r5, r6, pc}
   124f0:	ldr	r1, [r5, #12]
   124f4:	ldrb	r0, [r5, #8]
   124f8:	mov	r3, r6
   124fc:	add	r2, sp, #4
   12500:	bl	12380 <error@@Base+0x6b8>
   12504:	mov	r1, r4
   12508:	add	r0, sp, #4
   1250c:	bl	109fc <fputs@plt>
   12510:	ldr	r5, [r5, #4]
   12514:	b	124d8 <error@@Base+0x810>
   12518:	andeq	r3, r1, r8, lsl r2
   1251c:	ldrdeq	r3, [r1], -r3	; <UNPREDICTABLE>
   12520:	andeq	r3, r1, fp, lsl #14
   12524:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12528:	mov	r4, r1
   1252c:	mov	r1, #0
   12530:	add	r6, sp, #8
   12534:	mov	r7, r0
   12538:	mvn	r8, #0
   1253c:	mov	r5, r1
   12540:	str	r1, [r6, #-4]!
   12544:	ldrb	r3, [r4]
   12548:	cmp	r3, #0
   1254c:	bne	1255c <error@@Base+0x894>
   12550:	mov	r0, #1
   12554:	add	sp, sp, #12
   12558:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1255c:	mov	r2, r6
   12560:	mov	r1, r8
   12564:	mov	r0, r4
   12568:	bl	10960 <utf8proc_iterate@plt>
   1256c:	subs	r9, r0, #0
   12570:	ble	1258c <error@@Base+0x8c4>
   12574:	ldr	r2, [sp, #4]
   12578:	mov	r1, r5
   1257c:	mov	r0, r7
   12580:	bl	11fec <error@@Base+0x324>
   12584:	add	r4, r4, r9
   12588:	b	12544 <error@@Base+0x87c>
   1258c:	mov	r0, #0
   12590:	b	12554 <error@@Base+0x88c>
   12594:	cmp	r1, #0
   12598:	push	{r4, lr}
   1259c:	mov	r4, r0
   125a0:	stm	r2, {r1, r3}
   125a4:	strne	r2, [r1, #4]
   125a8:	streq	r2, [r0]
   125ac:	cmp	r3, #0
   125b0:	streq	r2, [r0, #4]
   125b4:	ldr	r0, [r0, #8]
   125b8:	strne	r2, [r3]
   125bc:	cmp	r0, #0
   125c0:	beq	125d0 <error@@Base+0x908>
   125c4:	bl	108e8 <free@plt>
   125c8:	mov	r3, #0
   125cc:	str	r3, [r4, #8]
   125d0:	ldr	r3, [r4, #12]
   125d4:	add	r3, r3, #1
   125d8:	str	r3, [r4, #12]
   125dc:	pop	{r4, pc}
   125e0:	mov	r3, #0
   125e4:	str	r3, [r0, #4]
   125e8:	str	r3, [r0]
   125ec:	str	r3, [r0, #8]
   125f0:	str	r3, [r0, #12]
   125f4:	bx	lr
   125f8:	mov	r2, r1
   125fc:	ldr	r3, [r0]
   12600:	mov	r1, #0
   12604:	b	12594 <error@@Base+0x8cc>
   12608:	mov	r2, r1
   1260c:	mov	r3, #0
   12610:	ldr	r1, [r0, #4]
   12614:	b	12594 <error@@Base+0x8cc>
   12618:	mov	r3, r2
   1261c:	mov	r2, r1
   12620:	ldr	r1, [r3]
   12624:	b	12594 <error@@Base+0x8cc>
   12628:	ldr	r3, [r1, #4]
   1262c:	b	12594 <error@@Base+0x8cc>
   12630:	ldr	r3, [r1]
   12634:	ldr	r2, [r1, #4]
   12638:	cmp	r3, #0
   1263c:	push	{r4, r5, r6, lr}
   12640:	mov	r4, r0
   12644:	strne	r2, [r3, #4]
   12648:	streq	r2, [r0]
   1264c:	ldr	r2, [r1, #4]
   12650:	mov	r5, #0
   12654:	cmp	r2, #0
   12658:	streq	r3, [r0, #4]
   1265c:	ldr	r0, [r0, #8]
   12660:	strne	r3, [r2]
   12664:	cmp	r0, r5
   12668:	str	r5, [r1, #4]
   1266c:	str	r5, [r1]
   12670:	beq	1267c <error@@Base+0x9b4>
   12674:	bl	108e8 <free@plt>
   12678:	str	r5, [r4, #8]
   1267c:	ldr	r3, [r4, #12]
   12680:	sub	r3, r3, #1
   12684:	str	r3, [r4, #12]
   12688:	pop	{r4, r5, r6, pc}
   1268c:	ldr	r3, [r0, #8]
   12690:	cmp	r3, #0
   12694:	bxne	lr
   12698:	ldr	r3, [r0, #12]
   1269c:	cmp	r3, #0
   126a0:	bxeq	lr
   126a4:	push	{r4, lr}
   126a8:	mov	r1, #4
   126ac:	mov	r4, r0
   126b0:	mov	r0, r3
   126b4:	bl	11d04 <error@@Base+0x3c>
   126b8:	ldr	r3, [r4]
   126bc:	str	r0, [r4, #8]
   126c0:	sub	r0, r0, #4
   126c4:	cmp	r3, #0
   126c8:	bne	126d0 <error@@Base+0xa08>
   126cc:	pop	{r4, pc}
   126d0:	str	r3, [r0, #4]!
   126d4:	ldr	r3, [r3, #4]
   126d8:	b	126c4 <error@@Base+0x9fc>
   126dc:	push	{r4, r5, r6, lr}
   126e0:	mov	r5, r0
   126e4:	mov	r6, r1
   126e8:	ldr	r4, [r5]
   126ec:	cmp	r4, #0
   126f0:	bne	126f8 <error@@Base+0xa30>
   126f4:	pop	{r4, r5, r6, pc}
   126f8:	mov	r0, r5
   126fc:	mov	r1, r4
   12700:	bl	12630 <error@@Base+0x968>
   12704:	mov	r0, r4
   12708:	blx	r6
   1270c:	b	126e8 <error@@Base+0xa20>
   12710:	cmp	r1, #0
   12714:	beq	12920 <error@@Base+0xc58>
   12718:	eor	ip, r0, r1
   1271c:	rsbmi	r1, r1, #0
   12720:	subs	r2, r1, #1
   12724:	beq	128ec <error@@Base+0xc24>
   12728:	movs	r3, r0
   1272c:	rsbmi	r3, r0, #0
   12730:	cmp	r3, r1
   12734:	bls	128f8 <error@@Base+0xc30>
   12738:	tst	r1, r2
   1273c:	beq	12908 <error@@Base+0xc40>
   12740:	clz	r2, r3
   12744:	clz	r0, r1
   12748:	sub	r2, r0, r2
   1274c:	rsbs	r2, r2, #31
   12750:	addne	r2, r2, r2, lsl #1
   12754:	mov	r0, #0
   12758:	addne	pc, pc, r2, lsl #2
   1275c:	nop			; (mov r0, r0)
   12760:	cmp	r3, r1, lsl #31
   12764:	adc	r0, r0, r0
   12768:	subcs	r3, r3, r1, lsl #31
   1276c:	cmp	r3, r1, lsl #30
   12770:	adc	r0, r0, r0
   12774:	subcs	r3, r3, r1, lsl #30
   12778:	cmp	r3, r1, lsl #29
   1277c:	adc	r0, r0, r0
   12780:	subcs	r3, r3, r1, lsl #29
   12784:	cmp	r3, r1, lsl #28
   12788:	adc	r0, r0, r0
   1278c:	subcs	r3, r3, r1, lsl #28
   12790:	cmp	r3, r1, lsl #27
   12794:	adc	r0, r0, r0
   12798:	subcs	r3, r3, r1, lsl #27
   1279c:	cmp	r3, r1, lsl #26
   127a0:	adc	r0, r0, r0
   127a4:	subcs	r3, r3, r1, lsl #26
   127a8:	cmp	r3, r1, lsl #25
   127ac:	adc	r0, r0, r0
   127b0:	subcs	r3, r3, r1, lsl #25
   127b4:	cmp	r3, r1, lsl #24
   127b8:	adc	r0, r0, r0
   127bc:	subcs	r3, r3, r1, lsl #24
   127c0:	cmp	r3, r1, lsl #23
   127c4:	adc	r0, r0, r0
   127c8:	subcs	r3, r3, r1, lsl #23
   127cc:	cmp	r3, r1, lsl #22
   127d0:	adc	r0, r0, r0
   127d4:	subcs	r3, r3, r1, lsl #22
   127d8:	cmp	r3, r1, lsl #21
   127dc:	adc	r0, r0, r0
   127e0:	subcs	r3, r3, r1, lsl #21
   127e4:	cmp	r3, r1, lsl #20
   127e8:	adc	r0, r0, r0
   127ec:	subcs	r3, r3, r1, lsl #20
   127f0:	cmp	r3, r1, lsl #19
   127f4:	adc	r0, r0, r0
   127f8:	subcs	r3, r3, r1, lsl #19
   127fc:	cmp	r3, r1, lsl #18
   12800:	adc	r0, r0, r0
   12804:	subcs	r3, r3, r1, lsl #18
   12808:	cmp	r3, r1, lsl #17
   1280c:	adc	r0, r0, r0
   12810:	subcs	r3, r3, r1, lsl #17
   12814:	cmp	r3, r1, lsl #16
   12818:	adc	r0, r0, r0
   1281c:	subcs	r3, r3, r1, lsl #16
   12820:	cmp	r3, r1, lsl #15
   12824:	adc	r0, r0, r0
   12828:	subcs	r3, r3, r1, lsl #15
   1282c:	cmp	r3, r1, lsl #14
   12830:	adc	r0, r0, r0
   12834:	subcs	r3, r3, r1, lsl #14
   12838:	cmp	r3, r1, lsl #13
   1283c:	adc	r0, r0, r0
   12840:	subcs	r3, r3, r1, lsl #13
   12844:	cmp	r3, r1, lsl #12
   12848:	adc	r0, r0, r0
   1284c:	subcs	r3, r3, r1, lsl #12
   12850:	cmp	r3, r1, lsl #11
   12854:	adc	r0, r0, r0
   12858:	subcs	r3, r3, r1, lsl #11
   1285c:	cmp	r3, r1, lsl #10
   12860:	adc	r0, r0, r0
   12864:	subcs	r3, r3, r1, lsl #10
   12868:	cmp	r3, r1, lsl #9
   1286c:	adc	r0, r0, r0
   12870:	subcs	r3, r3, r1, lsl #9
   12874:	cmp	r3, r1, lsl #8
   12878:	adc	r0, r0, r0
   1287c:	subcs	r3, r3, r1, lsl #8
   12880:	cmp	r3, r1, lsl #7
   12884:	adc	r0, r0, r0
   12888:	subcs	r3, r3, r1, lsl #7
   1288c:	cmp	r3, r1, lsl #6
   12890:	adc	r0, r0, r0
   12894:	subcs	r3, r3, r1, lsl #6
   12898:	cmp	r3, r1, lsl #5
   1289c:	adc	r0, r0, r0
   128a0:	subcs	r3, r3, r1, lsl #5
   128a4:	cmp	r3, r1, lsl #4
   128a8:	adc	r0, r0, r0
   128ac:	subcs	r3, r3, r1, lsl #4
   128b0:	cmp	r3, r1, lsl #3
   128b4:	adc	r0, r0, r0
   128b8:	subcs	r3, r3, r1, lsl #3
   128bc:	cmp	r3, r1, lsl #2
   128c0:	adc	r0, r0, r0
   128c4:	subcs	r3, r3, r1, lsl #2
   128c8:	cmp	r3, r1, lsl #1
   128cc:	adc	r0, r0, r0
   128d0:	subcs	r3, r3, r1, lsl #1
   128d4:	cmp	r3, r1
   128d8:	adc	r0, r0, r0
   128dc:	subcs	r3, r3, r1
   128e0:	cmp	ip, #0
   128e4:	rsbmi	r0, r0, #0
   128e8:	bx	lr
   128ec:	teq	ip, r0
   128f0:	rsbmi	r0, r0, #0
   128f4:	bx	lr
   128f8:	movcc	r0, #0
   128fc:	asreq	r0, ip, #31
   12900:	orreq	r0, r0, #1
   12904:	bx	lr
   12908:	clz	r2, r1
   1290c:	rsb	r2, r2, #31
   12910:	cmp	ip, #0
   12914:	lsr	r0, r3, r2
   12918:	rsbmi	r0, r0, #0
   1291c:	bx	lr
   12920:	cmp	r0, #0
   12924:	mvngt	r0, #-2147483648	; 0x80000000
   12928:	movlt	r0, #-2147483648	; 0x80000000
   1292c:	b	12950 <error@@Base+0xc88>
   12930:	cmp	r1, #0
   12934:	beq	12920 <error@@Base+0xc58>
   12938:	push	{r0, r1, lr}
   1293c:	bl	12718 <error@@Base+0xa50>
   12940:	pop	{r1, r2, lr}
   12944:	mul	r3, r2, r0
   12948:	sub	r1, r1, r3
   1294c:	bx	lr
   12950:	push	{r1, lr}
   12954:	mov	r0, #8
   12958:	bl	108c4 <raise@plt>
   1295c:	pop	{r1, pc}
   12960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12964:	mov	r7, r0
   12968:	ldr	r6, [pc, #72]	; 129b8 <error@@Base+0xcf0>
   1296c:	ldr	r5, [pc, #72]	; 129bc <error@@Base+0xcf4>
   12970:	add	r6, pc, r6
   12974:	add	r5, pc, r5
   12978:	sub	r6, r6, r5
   1297c:	mov	r8, r1
   12980:	mov	r9, r2
   12984:	bl	10898 <calloc@plt-0x20>
   12988:	asrs	r6, r6, #2
   1298c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12990:	mov	r4, #0
   12994:	add	r4, r4, #1
   12998:	ldr	r3, [r5], #4
   1299c:	mov	r2, r9
   129a0:	mov	r1, r8
   129a4:	mov	r0, r7
   129a8:	blx	r3
   129ac:	cmp	r6, r4
   129b0:	bne	12994 <error@@Base+0xccc>
   129b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   129b8:	andeq	r1, r1, r8, lsl #9
   129bc:	andeq	r1, r1, r0, lsl #9
   129c0:	bx	lr
   129c4:	mov	r2, r1
   129c8:	mov	r1, r0
   129cc:	mov	r0, #3
   129d0:	b	10948 <__xstat@plt>

Disassembly of section .fini:

000129d4 <.fini>:
   129d4:	push	{r3, lr}
   129d8:	pop	{r3, pc}
