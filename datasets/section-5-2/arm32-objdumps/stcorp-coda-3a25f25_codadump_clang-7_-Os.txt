
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000125fc <.init>:
   125fc:	push	{r3, lr}
   12600:	bl	12b08 <_start@@Base+0x3c>
   12604:	pop	{r3, pc}

Disassembly of section .plt:

00012608 <coda_cursor_get_byte_size@plt-0x14>:
   12608:	push	{lr}		; (str lr, [sp, #-4]!)
   1260c:	ldr	lr, [pc, #4]	; 12618 <coda_cursor_get_byte_size@plt-0x4>
   12610:	add	lr, pc, lr
   12614:	ldr	pc, [lr, #8]!
   12618:	andeq	r9, r1, r8, ror #19

0001261c <coda_cursor_get_byte_size@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #102400	; 0x19000
   12624:	ldr	pc, [ip, #2536]!	; 0x9e8

00012628 <coda_type_get_special_type_name@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #102400	; 0x19000
   12630:	ldr	pc, [ip, #2528]!	; 0x9e0

00012634 <coda_set_option_use_fast_size_expressions@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #102400	; 0x19000
   1263c:	ldr	pc, [ip, #2520]!	; 0x9d8

00012640 <raise@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #102400	; 0x19000
   12648:	ldr	pc, [ip, #2512]!	; 0x9d0

0001264c <coda_get_option_bypass_special_types@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #102400	; 0x19000
   12654:	ldr	pc, [ip, #2504]!	; 0x9c8

00012658 <coda_set_option_perform_boundary_checks@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #102400	; 0x19000
   12660:	ldr	pc, [ip, #2496]!	; 0x9c0

00012664 <strcmp@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #102400	; 0x19000
   1266c:	ldr	pc, [ip, #2488]!	; 0x9b8

00012670 <coda_type_get_record_field_hidden_status@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #102400	; 0x19000
   12678:	ldr	pc, [ip, #2480]!	; 0x9b0

0001267c <printf@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #102400	; 0x19000
   12684:	ldr	pc, [ip, #2472]!	; 0x9a8

00012688 <coda_cursor_get_record_field_available_status@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #102400	; 0x19000
   12690:	ldr	pc, [ip, #2464]!	; 0x9a0

00012694 <fopen@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #102400	; 0x19000
   1269c:	ldr	pc, [ip, #2456]!	; 0x998

000126a0 <coda_set_error@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #102400	; 0x19000
   126a8:	ldr	pc, [ip, #2448]!	; 0x990

000126ac <coda_open@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #102400	; 0x19000
   126b4:	ldr	pc, [ip, #2440]!	; 0x988

000126b8 <fflush@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #102400	; 0x19000
   126c0:	ldr	pc, [ip, #2432]!	; 0x980

000126c4 <coda_time_double_to_string@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #102400	; 0x19000
   126cc:	ldr	pc, [ip, #2424]!	; 0x978

000126d0 <coda_cursor_get_num_elements@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #102400	; 0x19000
   126d8:	ldr	pc, [ip, #2416]!	; 0x970

000126dc <coda_str64u@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #102400	; 0x19000
   126e4:	ldr	pc, [ip, #2408]!	; 0x968

000126e8 <free@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #102400	; 0x19000
   126f0:	ldr	pc, [ip, #2400]!	; 0x960

000126f4 <coda_set_option_use_mmap@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #102400	; 0x19000
   126fc:	ldr	pc, [ip, #2392]!	; 0x958

00012700 <coda_set_definition_path_conditional@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #102400	; 0x19000
   12708:	ldr	pc, [ip, #2384]!	; 0x950

0001270c <coda_cursor_read_uint32@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #102400	; 0x19000
   12714:	ldr	pc, [ip, #2376]!	; 0x948

00012718 <coda_set_option_bypass_special_types@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #102400	; 0x19000
   12720:	ldr	pc, [ip, #2368]!	; 0x940

00012724 <coda_type_get_record_field_type@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #102400	; 0x19000
   1272c:	ldr	pc, [ip, #2360]!	; 0x938

00012730 <coda_cursor_get_type@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #102400	; 0x19000
   12738:	ldr	pc, [ip, #2352]!	; 0x930

0001273c <memcpy@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #102400	; 0x19000
   12744:	ldr	pc, [ip, #2344]!	; 0x928

00012748 <coda_isInf@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #102400	; 0x19000
   12750:	ldr	pc, [ip, #2336]!	; 0x920

00012754 <coda_type_get_bit_size@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #102400	; 0x19000
   1275c:	ldr	pc, [ip, #2328]!	; 0x918

00012760 <coda_type_get_record_field_available_status@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #102400	; 0x19000
   12768:	ldr	pc, [ip, #2320]!	; 0x910

0001276c <coda_cursor_has_attributes@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #102400	; 0x19000
   12774:	ldr	pc, [ip, #2312]!	; 0x908

00012778 <coda_cursor_get_type_class@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #102400	; 0x19000
   12780:	ldr	pc, [ip, #2304]!	; 0x900

00012784 <coda_set_definition_path@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #102400	; 0x19000
   1278c:	ldr	pc, [ip, #2296]!	; 0x8f8

00012790 <coda_get_product_format@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #102400	; 0x19000
   12798:	ldr	pc, [ip, #2288]!	; 0x8f0

0001279c <coda_type_get_unit@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #102400	; 0x19000
   127a4:	ldr	pc, [ip, #2280]!	; 0x8e8

000127a8 <coda_type_get_description@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #102400	; 0x19000
   127b0:	ldr	pc, [ip, #2272]!	; 0x8e0

000127b4 <coda_cursor_get_special_type@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #102400	; 0x19000
   127bc:	ldr	pc, [ip, #2264]!	; 0x8d8

000127c0 <coda_cursor_goto_first_array_element@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #102400	; 0x19000
   127c8:	ldr	pc, [ip, #2256]!	; 0x8d0

000127cc <fwrite@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #102400	; 0x19000
   127d4:	ldr	pc, [ip, #2248]!	; 0x8c8

000127d8 <coda_cursor_set_product@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #102400	; 0x19000
   127e0:	ldr	pc, [ip, #2240]!	; 0x8c0

000127e4 <coda_cursor_goto_first_record_field@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #102400	; 0x19000
   127ec:	ldr	pc, [ip, #2232]!	; 0x8b8

000127f0 <coda_cursor_goto_record_field_by_index@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #102400	; 0x19000
   127f8:	ldr	pc, [ip, #2224]!	; 0x8b0

000127fc <coda_done@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #102400	; 0x19000
   12804:	ldr	pc, [ip, #2216]!	; 0x8a8

00012808 <puts@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #102400	; 0x19000
   12810:	ldr	pc, [ip, #2208]!	; 0x8a0

00012814 <coda_cursor_get_read_type@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #102400	; 0x19000
   1281c:	ldr	pc, [ip, #2200]!	; 0x898

00012820 <malloc@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #102400	; 0x19000
   12828:	ldr	pc, [ip, #2192]!	; 0x890

0001282c <__libc_start_main@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #102400	; 0x19000
   12834:	ldr	pc, [ip, #2184]!	; 0x888

00012838 <__gmon_start__@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #102400	; 0x19000
   12840:	ldr	pc, [ip, #2176]!	; 0x880

00012844 <coda_cursor_read_string@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #102400	; 0x19000
   1284c:	ldr	pc, [ip, #2168]!	; 0x878

00012850 <coda_cursor_goto_parent@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #102400	; 0x19000
   12858:	ldr	pc, [ip, #2160]!	; 0x870

0001285c <coda_type_get_num_record_fields@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #102400	; 0x19000
   12864:	ldr	pc, [ip, #2152]!	; 0x868

00012868 <exit@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #102400	; 0x19000
   12870:	ldr	pc, [ip, #2144]!	; 0x860

00012874 <coda_type_get_read_type@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #102400	; 0x19000
   1287c:	ldr	pc, [ip, #2136]!	; 0x858

00012880 <coda_cursor_get_string_length@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #102400	; 0x19000
   12888:	ldr	pc, [ip, #2128]!	; 0x850

0001288c <coda_cursor_read_uint64@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #102400	; 0x19000
   12894:	ldr	pc, [ip, #2120]!	; 0x848

00012898 <coda_cursor_read_double@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #102400	; 0x19000
   128a0:	ldr	pc, [ip, #2112]!	; 0x840

000128a4 <coda_isNaN@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #102400	; 0x19000
   128ac:	ldr	pc, [ip, #2104]!	; 0x838

000128b0 <fprintf@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #102400	; 0x19000
   128b8:	ldr	pc, [ip, #2096]!	; 0x830

000128bc <coda_cursor_goto_next_array_element@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #102400	; 0x19000
   128c4:	ldr	pc, [ip, #2088]!	; 0x828

000128c8 <coda_open_as@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #102400	; 0x19000
   128d0:	ldr	pc, [ip, #2080]!	; 0x820

000128d4 <coda_init@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #102400	; 0x19000
   128dc:	ldr	pc, [ip, #2072]!	; 0x818

000128e0 <coda_set_option_perform_conversions@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #102400	; 0x19000
   128e8:	ldr	pc, [ip, #2064]!	; 0x810

000128ec <coda_cursor_goto_attributes@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #102400	; 0x19000
   128f4:	ldr	pc, [ip, #2056]!	; 0x808

000128f8 <coda_cursor_read_char@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #102400	; 0x19000
   12900:	ldr	pc, [ip, #2048]!	; 0x800

00012904 <memset@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #102400	; 0x19000
   1290c:	ldr	pc, [ip, #2040]!	; 0x7f8

00012910 <putchar@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #102400	; 0x19000
   12918:	ldr	pc, [ip, #2032]!	; 0x7f0

0001291c <strncpy@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #102400	; 0x19000
   12924:	ldr	pc, [ip, #2024]!	; 0x7e8

00012928 <coda_type_get_special_type@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #102400	; 0x19000
   12930:	ldr	pc, [ip, #2016]!	; 0x7e0

00012934 <coda_type_get_record_union_status@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #102400	; 0x19000
   1293c:	ldr	pc, [ip, #2008]!	; 0x7d8

00012940 <coda_cursor_read_complex_double_split@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #102400	; 0x19000
   12948:	ldr	pc, [ip, #2000]!	; 0x7d0

0001294c <coda_type_get_array_base_type@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #102400	; 0x19000
   12954:	ldr	pc, [ip, #1992]!	; 0x7c8

00012958 <fclose@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #102400	; 0x19000
   12960:	ldr	pc, [ip, #1984]!	; 0x7c0

00012964 <coda_type_get_string_length@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #102400	; 0x19000
   1296c:	ldr	pc, [ip, #1976]!	; 0x7b8

00012970 <coda_type_get_native_type_name@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #102400	; 0x19000
   12978:	ldr	pc, [ip, #1968]!	; 0x7b0

0001297c <coda_cursor_get_array_dim@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #102400	; 0x19000
   12984:	ldr	pc, [ip, #1960]!	; 0x7a8

00012988 <coda_cursor_has_ascii_content@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #102400	; 0x19000
   12990:	ldr	pc, [ip, #1952]!	; 0x7a0

00012994 <coda_close@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #102400	; 0x19000
   1299c:	ldr	pc, [ip, #1944]!	; 0x798

000129a0 <coda_cursor_read_int64@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #102400	; 0x19000
   129a8:	ldr	pc, [ip, #1936]!	; 0x790

000129ac <vfprintf@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #102400	; 0x19000
   129b4:	ldr	pc, [ip, #1928]!	; 0x788

000129b8 <coda_cursor_goto@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #102400	; 0x19000
   129c0:	ldr	pc, [ip, #1920]!	; 0x780

000129c4 <coda_type_get_record_field_index_from_name@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #102400	; 0x19000
   129cc:	ldr	pc, [ip, #1912]!	; 0x778

000129d0 <coda_cursor_read_complex_double_pair@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #102400	; 0x19000
   129d8:	ldr	pc, [ip, #1904]!	; 0x770

000129dc <coda_cursor_goto_next_record_field@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #102400	; 0x19000
   129e4:	ldr	pc, [ip, #1896]!	; 0x768

000129e8 <fputc@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #102400	; 0x19000
   129f0:	ldr	pc, [ip, #1888]!	; 0x760

000129f4 <coda_type_get_array_dim@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #102400	; 0x19000
   129fc:	ldr	pc, [ip, #1880]!	; 0x758

00012a00 <coda_cursor_get_bit_size@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #102400	; 0x19000
   12a08:	ldr	pc, [ip, #1872]!	; 0x750

00012a0c <atoi@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #102400	; 0x19000
   12a14:	ldr	pc, [ip, #1864]!	; 0x748

00012a18 <coda_errno_to_string@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #102400	; 0x19000
   12a20:	ldr	pc, [ip, #1856]!	; 0x740

00012a24 <coda_cursor_use_base_type_of_special_type@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #102400	; 0x19000
   12a2c:	ldr	pc, [ip, #1848]!	; 0x738

00012a30 <coda_cursor_get_available_union_field_index@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #102400	; 0x19000
   12a38:	ldr	pc, [ip, #1840]!	; 0x730

00012a3c <coda_cursor_read_int32@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #102400	; 0x19000
   12a44:	ldr	pc, [ip, #1832]!	; 0x728

00012a48 <coda_cursor_get_file_bit_offset@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #102400	; 0x19000
   12a50:	ldr	pc, [ip, #1824]!	; 0x720

00012a54 <coda_get_libcoda_version@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #102400	; 0x19000
   12a5c:	ldr	pc, [ip, #1816]!	; 0x718

00012a60 <coda_get_errno@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #102400	; 0x19000
   12a68:	ldr	pc, [ip, #1808]!	; 0x710

00012a6c <coda_type_get_special_base_type@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #102400	; 0x19000
   12a74:	ldr	pc, [ip, #1800]!	; 0x708

00012a78 <coda_type_get_record_field_name@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #102400	; 0x19000
   12a80:	ldr	pc, [ip, #1792]!	; 0x700

00012a84 <fputs@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #102400	; 0x19000
   12a8c:	ldr	pc, [ip, #1784]!	; 0x6f8

00012a90 <abort@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #102400	; 0x19000
   12a98:	ldr	pc, [ip, #1776]!	; 0x6f0

00012a9c <coda_cursor_read_bits@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #102400	; 0x19000
   12aa4:	ldr	pc, [ip, #1768]!	; 0x6e8

00012aa8 <coda_str64@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #102400	; 0x19000
   12ab0:	ldr	pc, [ip, #1760]!	; 0x6e0

00012ab4 <__assert_fail@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #102400	; 0x19000
   12abc:	ldr	pc, [ip, #1752]!	; 0x6d8

00012ac0 <coda_type_get_class@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #102400	; 0x19000
   12ac8:	ldr	pc, [ip, #1744]!	; 0x6d0

Disassembly of section .text:

00012acc <_start@@Base>:
   12acc:	mov	fp, #0
   12ad0:	mov	lr, #0
   12ad4:	pop	{r1}		; (ldr r1, [sp], #4)
   12ad8:	mov	r2, sp
   12adc:	push	{r2}		; (str r2, [sp, #-4]!)
   12ae0:	push	{r0}		; (str r0, [sp, #-4]!)
   12ae4:	ldr	ip, [pc, #16]	; 12afc <_start@@Base+0x30>
   12ae8:	push	{ip}		; (str ip, [sp, #-4]!)
   12aec:	ldr	r0, [pc, #12]	; 12b00 <_start@@Base+0x34>
   12af0:	ldr	r3, [pc, #12]	; 12b04 <_start@@Base+0x38>
   12af4:	bl	1282c <__libc_start_main@plt>
   12af8:	bl	12a90 <abort@plt>
   12afc:	andeq	r9, r1, r4, ror #12
   12b00:	andeq	r7, r1, r8, lsl #25
   12b04:	andeq	r9, r1, r4, lsl #12
   12b08:	ldr	r3, [pc, #20]	; 12b24 <_start@@Base+0x58>
   12b0c:	ldr	r2, [pc, #20]	; 12b28 <_start@@Base+0x5c>
   12b10:	add	r3, pc, r3
   12b14:	ldr	r2, [r3, r2]
   12b18:	cmp	r2, #0
   12b1c:	bxeq	lr
   12b20:	b	12838 <__gmon_start__@plt>
   12b24:	andeq	r9, r1, r8, ror #9
   12b28:	muleq	r0, ip, r1
   12b2c:	ldr	r0, [pc, #24]	; 12b4c <_start@@Base+0x80>
   12b30:	ldr	r3, [pc, #24]	; 12b50 <_start@@Base+0x84>
   12b34:	cmp	r3, r0
   12b38:	bxeq	lr
   12b3c:	ldr	r3, [pc, #16]	; 12b54 <_start@@Base+0x88>
   12b40:	cmp	r3, #0
   12b44:	bxeq	lr
   12b48:	bx	r3
   12b4c:			; <UNDEFINED> instruction: 0x0002c1b0
   12b50:			; <UNDEFINED> instruction: 0x0002c1b0
   12b54:	andeq	r0, r0, r0
   12b58:	ldr	r0, [pc, #36]	; 12b84 <_start@@Base+0xb8>
   12b5c:	ldr	r1, [pc, #36]	; 12b88 <_start@@Base+0xbc>
   12b60:	sub	r1, r1, r0
   12b64:	asr	r1, r1, #2
   12b68:	add	r1, r1, r1, lsr #31
   12b6c:	asrs	r1, r1, #1
   12b70:	bxeq	lr
   12b74:	ldr	r3, [pc, #16]	; 12b8c <_start@@Base+0xc0>
   12b78:	cmp	r3, #0
   12b7c:	bxeq	lr
   12b80:	bx	r3
   12b84:			; <UNDEFINED> instruction: 0x0002c1b0
   12b88:			; <UNDEFINED> instruction: 0x0002c1b0
   12b8c:	andeq	r0, r0, r0
   12b90:	push	{r4, lr}
   12b94:	ldr	r4, [pc, #24]	; 12bb4 <_start@@Base+0xe8>
   12b98:	ldrb	r3, [r4]
   12b9c:	cmp	r3, #0
   12ba0:	popne	{r4, pc}
   12ba4:	bl	12b2c <_start@@Base+0x60>
   12ba8:	mov	r3, #1
   12bac:	strb	r3, [r4]
   12bb0:	pop	{r4, pc}
   12bb4:			; <UNDEFINED> instruction: 0x0002c1b8
   12bb8:	b	12b58 <_start@@Base+0x8c>

00012bbc <export_data_element_to_ascii@@Base>:
   12bbc:	push	{r4, sl, fp, lr}
   12bc0:	add	fp, sp, #8
   12bc4:	movw	r0, #49596	; 0xc1bc
   12bc8:	movt	r0, #2
   12bcc:	ldrb	r1, [r0]
   12bd0:	cmp	r1, #0
   12bd4:	beq	12bf0 <export_data_element_to_ascii@@Base+0x34>
   12bd8:	movw	r0, #53392	; 0xd090
   12bdc:	movt	r0, #2
   12be0:	ldr	r1, [r0]
   12be4:	mov	r0, #10
   12be8:	bl	129e8 <fputc@plt>
   12bec:	b	12bf8 <export_data_element_to_ascii@@Base+0x3c>
   12bf0:	mov	r1, #1
   12bf4:	strb	r1, [r0]
   12bf8:	movw	r0, #53792	; 0xd220
   12bfc:	movt	r0, #2
   12c00:	ldr	r0, [r0]
   12c04:	cmp	r0, #0
   12c08:	beq	12c30 <export_data_element_to_ascii@@Base+0x74>
   12c0c:	movw	r4, #53392	; 0xd090
   12c10:	mov	r1, #2
   12c14:	mov	r2, #0
   12c18:	movt	r4, #2
   12c1c:	ldr	r0, [r4]
   12c20:	bl	16588 <print_full_field_name@@Base>
   12c24:	ldr	r1, [r4]
   12c28:	mov	r0, #10
   12c2c:	bl	129e8 <fputc@plt>
   12c30:	movw	r0, #53424	; 0xd0b0
   12c34:	movt	r0, #2
   12c38:	ldr	r1, [r0]
   12c3c:	cmp	r1, #1
   12c40:	blt	12c58 <export_data_element_to_ascii@@Base+0x9c>
   12c44:	add	r0, r0, r1, lsl #3
   12c48:	ldr	r1, [r0, #296]	; 0x128
   12c4c:	ldr	r0, [r0, #300]	; 0x12c
   12c50:	orrs	r0, r1, r0
   12c54:	popeq	{r4, sl, fp, pc}
   12c58:	movw	r0, #53392	; 0xd090
   12c5c:	mov	r1, #0
   12c60:	mov	r2, #0
   12c64:	mov	r3, #0
   12c68:	movt	r0, #2
   12c6c:	ldr	r0, [r0]
   12c70:	pop	{r4, sl, fp, lr}
   12c74:	b	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	add	fp, sp, #28
   12c80:	sub	sp, sp, #124	; 0x7c
   12c84:	movw	sl, #49640	; 0xc1e8
   12c88:	mov	r8, r0
   12c8c:	mov	r6, r1
   12c90:	str	r3, [sp, #60]	; 0x3c
   12c94:	str	r2, [sp, #48]	; 0x30
   12c98:	movt	sl, #2
   12c9c:	add	r5, sl, r1, lsl #2
   12ca0:	sub	r1, fp, #52	; 0x34
   12ca4:	ldr	r0, [r5, #8]!
   12ca8:	bl	12ac0 <coda_type_get_class@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12cb8 <export_data_element_to_ascii@@Base+0xfc>
   12cb4:	bl	17c44 <handle_coda_error@@Base>
   12cb8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12cbc:	cmp	r0, #0
   12cc0:	beq	12dac <export_data_element_to_ascii@@Base+0x1f0>
   12cc4:	cmp	r0, #1
   12cc8:	bne	12e18 <export_data_element_to_ascii@@Base+0x25c>
   12ccc:	ldr	r2, [sp, #48]	; 0x30
   12cd0:	str	r6, [sp, #20]
   12cd4:	str	r8, [sp, #24]
   12cd8:	add	r0, r2, r2, lsl #2
   12cdc:	cmp	r2, #0
   12ce0:	add	r9, sl, r0, lsl #4
   12ce4:	moveq	r0, #0
   12ce8:	ldr	r1, [r9, #800]	; 0x320
   12cec:	streq	r0, [sl, #844]	; 0x34c
   12cf0:	mov	r2, r9
   12cf4:	ldr	r0, [r2, #804]!	; 0x324
   12cf8:	str	r2, [sp, #32]
   12cfc:	movw	r2, #53424	; 0xd0b0
   12d00:	add	r3, r0, r1
   12d04:	movt	r2, #2
   12d08:	str	r3, [sp, #40]	; 0x28
   12d0c:	ldr	r7, [r2, #104]	; 0x68
   12d10:	cmp	r7, r3
   12d14:	str	r7, [sp, #36]	; 0x24
   12d18:	blt	12d3c <export_data_element_to_ascii@@Base+0x180>
   12d1c:	ldr	r3, [sl, #3360]	; 0xd20
   12d20:	ldr	r7, [sp, #48]	; 0x30
   12d24:	sub	r3, r3, #1
   12d28:	cmp	r3, r7
   12d2c:	ldrgt	r3, [r9, #840]	; 0x348
   12d30:	ldrgt	r7, [r9, #844]	; 0x34c
   12d34:	mulgt	r3, r3, r7
   12d38:	strgt	r3, [r9, #924]	; 0x39c
   12d3c:	cmp	r0, #1
   12d40:	blt	12fb0 <export_data_element_to_ascii@@Base+0x3f4>
   12d44:	add	r1, r2, r1, lsl #2
   12d48:	add	r2, r9, #848	; 0x350
   12d4c:	add	r3, r9, #844	; 0x34c
   12d50:	mov	r8, #1
   12d54:	mov	ip, #0
   12d58:	add	r5, sp, #64	; 0x40
   12d5c:	mov	r4, #0
   12d60:	add	r6, r1, r4
   12d64:	ldr	r7, [r6, #72]	; 0x48
   12d68:	cmp	r7, #0
   12d6c:	beq	12d80 <export_data_element_to_ascii@@Base+0x1c4>
   12d70:	ldr	r7, [r6, #108]	; 0x6c
   12d74:	ldr	r6, [r3]
   12d78:	add	r6, r7, r6, lsl #2
   12d7c:	b	12d84 <export_data_element_to_ascii@@Base+0x1c8>
   12d80:	add	r6, r6, #4
   12d84:	ldr	r7, [r6]
   12d88:	str	ip, [r2, r4]
   12d8c:	subs	r0, r0, #1
   12d90:	str	r7, [r5, r4]
   12d94:	mul	r8, r7, r8
   12d98:	add	r4, r4, #4
   12d9c:	bne	12d60 <export_data_element_to_ascii@@Base+0x1a4>
   12da0:	cmp	r8, #0
   12da4:	bne	12fb4 <export_data_element_to_ascii@@Base+0x3f8>
   12da8:	b	135f4 <export_data_element_to_ascii@@Base+0xa38>
   12dac:	ldr	r0, [sp, #60]	; 0x3c
   12db0:	add	r5, sl, #144	; 0x90
   12db4:	add	r2, sp, #64	; 0x40
   12db8:	add	r7, sl, r0, lsl #2
   12dbc:	mov	r0, r5
   12dc0:	ldr	r1, [r7, #3492]!	; 0xda4
   12dc4:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   12dc8:	cmp	r0, #0
   12dcc:	beq	12dd4 <export_data_element_to_ascii@@Base+0x218>
   12dd0:	bl	17c44 <handle_coda_error@@Base>
   12dd4:	ldr	r0, [sp, #64]	; 0x40
   12dd8:	cmp	r0, #0
   12ddc:	beq	135f4 <export_data_element_to_ascii@@Base+0xa38>
   12de0:	ldr	r1, [r7]
   12de4:	mov	r0, r5
   12de8:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   12dec:	cmp	r0, #0
   12df0:	beq	12df8 <export_data_element_to_ascii@@Base+0x23c>
   12df4:	bl	17c44 <handle_coda_error@@Base>
   12df8:	ldr	r0, [sp, #60]	; 0x3c
   12dfc:	ldr	r2, [sp, #48]	; 0x30
   12e00:	add	r1, r6, #1
   12e04:	add	r3, r0, #1
   12e08:	mov	r0, r8
   12e0c:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   12e10:	mov	r0, r5
   12e14:	b	130e4 <export_data_element_to_ascii@@Base+0x528>
   12e18:	movw	r0, #53408	; 0xd0a0
   12e1c:	str	r5, [sp, #56]	; 0x38
   12e20:	movt	r0, #2
   12e24:	ldr	r0, [r0]
   12e28:	cmp	r0, #0
   12e2c:	beq	12ef4 <export_data_element_to_ascii@@Base+0x338>
   12e30:	ldr	r0, [sl, #136]	; 0x88
   12e34:	cmp	r0, #1
   12e38:	blt	12ef4 <export_data_element_to_ascii@@Base+0x338>
   12e3c:	movw	r5, #53396	; 0xd094
   12e40:	movw	r6, #38763	; 0x976b
   12e44:	mov	r7, #0
   12e48:	add	r4, sp, #64	; 0x40
   12e4c:	mov	r9, #0
   12e50:	movt	r5, #2
   12e54:	movt	r6, #1
   12e58:	add	r0, sl, r7, lsl #2
   12e5c:	mov	r1, r4
   12e60:	ldr	r0, [r0, #8]
   12e64:	bl	12ac0 <coda_type_get_class@plt>
   12e68:	cmp	r0, #0
   12e6c:	beq	12e74 <export_data_element_to_ascii@@Base+0x2b8>
   12e70:	bl	17c44 <handle_coda_error@@Base>
   12e74:	ldr	r0, [sp, #64]	; 0x40
   12e78:	cmp	r0, #1
   12e7c:	bne	12ee4 <export_data_element_to_ascii@@Base+0x328>
   12e80:	add	r0, r9, r9, lsl #2
   12e84:	str	r9, [sp, #60]	; 0x3c
   12e88:	add	r0, sl, r0, lsl #4
   12e8c:	mov	sl, r8
   12e90:	mov	r4, r0
   12e94:	ldr	r1, [r4, #804]!	; 0x324
   12e98:	cmp	r1, #1
   12e9c:	blt	12ecc <export_data_element_to_ascii@@Base+0x310>
   12ea0:	add	r8, r0, #848	; 0x350
   12ea4:	mov	r9, #0
   12ea8:	ldr	r2, [r8, r9, lsl #2]
   12eac:	ldr	r3, [r5]
   12eb0:	mov	r0, sl
   12eb4:	mov	r1, r6
   12eb8:	bl	128b0 <fprintf@plt>
   12ebc:	ldr	r0, [r4]
   12ec0:	add	r9, r9, #1
   12ec4:	cmp	r9, r0
   12ec8:	blt	12ea8 <export_data_element_to_ascii@@Base+0x2ec>
   12ecc:	ldr	r9, [sp, #60]	; 0x3c
   12ed0:	mov	r8, sl
   12ed4:	movw	sl, #49640	; 0xc1e8
   12ed8:	add	r4, sp, #64	; 0x40
   12edc:	movt	sl, #2
   12ee0:	add	r9, r9, #1
   12ee4:	ldr	r0, [sl, #136]	; 0x88
   12ee8:	add	r7, r7, #1
   12eec:	cmp	r7, r0
   12ef0:	blt	12e58 <export_data_element_to_ascii@@Base+0x29c>
   12ef4:	ldr	r5, [sp, #56]	; 0x38
   12ef8:	sub	r1, fp, #32
   12efc:	ldr	r0, [r5]
   12f00:	bl	12ac0 <coda_type_get_class@plt>
   12f04:	cmp	r0, #0
   12f08:	beq	12f10 <export_data_element_to_ascii@@Base+0x354>
   12f0c:	bl	17c44 <handle_coda_error@@Base>
   12f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f14:	sub	r1, r0, #2
   12f18:	cmp	r1, #4
   12f1c:	bcs	130ec <export_data_element_to_ascii@@Base+0x530>
   12f20:	ldr	r0, [r5]
   12f24:	sub	r1, fp, #36	; 0x24
   12f28:	bl	12874 <coda_type_get_read_type@plt>
   12f2c:	cmp	r0, #0
   12f30:	beq	12f38 <export_data_element_to_ascii@@Base+0x37c>
   12f34:	bl	17c44 <handle_coda_error@@Base>
   12f38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12f3c:	add	r0, r0, #1
   12f40:	cmp	r0, #13
   12f44:	bhi	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   12f48:	add	r1, pc, #0
   12f4c:	ldr	pc, [r1, r0, lsl #2]
   12f50:	andeq	r3, r1, r8, lsr r6
   12f54:	andeq	r2, r1, r8, lsl #31
   12f58:	andeq	r3, r1, r0, ror #3
   12f5c:	andeq	r2, r1, r8, lsl #31
   12f60:	andeq	r3, r1, r0, ror #3
   12f64:	andeq	r2, r1, r8, lsl #31
   12f68:	andeq	r3, r1, r0, ror #3
   12f6c:	muleq	r1, r4, r2
   12f70:	andeq	r3, r1, r0, asr #10
   12f74:	andeq	r3, r1, r0, lsl r2
   12f78:	andeq	r3, r1, r0, lsl r2
   12f7c:	andeq	r3, r1, ip, ror r5
   12f80:	andeq	r3, r1, r4, asr #5
   12f84:	andeq	r3, r1, r4, ror r3
   12f88:	add	r0, sl, #144	; 0x90
   12f8c:	add	r1, sp, #64	; 0x40
   12f90:	bl	12a3c <coda_cursor_read_int32@plt>
   12f94:	cmp	r0, #0
   12f98:	beq	12fa0 <export_data_element_to_ascii@@Base+0x3e4>
   12f9c:	bl	17c44 <handle_coda_error@@Base>
   12fa0:	ldr	r2, [sp, #64]	; 0x40
   12fa4:	movw	r1, #40328	; 0x9d88
   12fa8:	movt	r1, #1
   12fac:	b	13204 <export_data_element_to_ascii@@Base+0x648>
   12fb0:	mov	r8, #1
   12fb4:	movw	r0, #49640	; 0xc1e8
   12fb8:	movt	r0, #2
   12fbc:	add	r0, r0, #144	; 0x90
   12fc0:	str	r0, [sp, #44]	; 0x2c
   12fc4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   12fc8:	cmp	r0, #0
   12fcc:	beq	12fd4 <export_data_element_to_ascii@@Base+0x418>
   12fd0:	bl	17c44 <handle_coda_error@@Base>
   12fd4:	ldr	r4, [sp, #24]
   12fd8:	cmp	r8, #1
   12fdc:	blt	130e0 <export_data_element_to_ascii@@Base+0x524>
   12fe0:	add	r0, r9, #924	; 0x39c
   12fe4:	mov	r7, #0
   12fe8:	mov	r5, #0
   12fec:	str	r0, [sp, #28]
   12ff0:	add	r0, sp, #64	; 0x40
   12ff4:	sub	sl, r0, #4
   12ff8:	sub	r0, r8, #1
   12ffc:	str	r0, [sp, #56]	; 0x38
   13000:	ldr	r0, [sp, #48]	; 0x30
   13004:	add	r0, r0, #1
   13008:	str	r0, [sp, #52]	; 0x34
   1300c:	ldr	r0, [sp, #20]
   13010:	add	r6, r0, #1
   13014:	ldr	r2, [sp, #52]	; 0x34
   13018:	ldr	r3, [sp, #60]	; 0x3c
   1301c:	mov	r0, r4
   13020:	mov	r1, r6
   13024:	bl	12c78 <export_data_element_to_ascii@@Base+0xbc>
   13028:	ldr	r0, [sp, #56]	; 0x38
   1302c:	cmp	r5, r0
   13030:	bge	130d4 <export_data_element_to_ascii@@Base+0x518>
   13034:	ldr	r0, [sp, #44]	; 0x2c
   13038:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   1303c:	cmp	r0, #0
   13040:	beq	13048 <export_data_element_to_ascii@@Base+0x48c>
   13044:	bl	17c44 <handle_coda_error@@Base>
   13048:	ldr	r0, [sp, #40]	; 0x28
   1304c:	ldr	r1, [sp, #36]	; 0x24
   13050:	cmp	r1, r0
   13054:	blt	13080 <export_data_element_to_ascii@@Base+0x4c4>
   13058:	movw	r0, #49640	; 0xc1e8
   1305c:	ldr	r1, [sp, #48]	; 0x30
   13060:	movt	r0, #2
   13064:	ldr	r0, [r0, #3360]	; 0xd20
   13068:	sub	r0, r0, #1
   1306c:	cmp	r0, r1
   13070:	ldrgt	r1, [sp, #28]
   13074:	ldrgt	r0, [r1]
   13078:	addgt	r0, r0, #1
   1307c:	strgt	r0, [r1]
   13080:	movw	r0, #53408	; 0xd0a0
   13084:	movt	r0, #2
   13088:	ldr	r0, [r0]
   1308c:	cmp	r0, #0
   13090:	beq	130d4 <export_data_element_to_ascii@@Base+0x518>
   13094:	ldr	r0, [sp, #32]
   13098:	ldr	r0, [r0]
   1309c:	cmp	r0, #1
   130a0:	blt	130d4 <export_data_element_to_ascii@@Base+0x518>
   130a4:	add	r1, r9, r0, lsl #2
   130a8:	ldr	r3, [sl, r0, lsl #2]
   130ac:	ldr	r2, [r1, #844]	; 0x34c
   130b0:	add	r2, r2, #1
   130b4:	cmp	r2, r3
   130b8:	str	r2, [r1, #844]	; 0x34c
   130bc:	bne	130d4 <export_data_element_to_ascii@@Base+0x518>
   130c0:	sub	r0, r0, #1
   130c4:	str	r7, [r1, #844]	; 0x34c
   130c8:	add	r1, r0, #1
   130cc:	cmp	r1, #1
   130d0:	bgt	130a4 <export_data_element_to_ascii@@Base+0x4e8>
   130d4:	add	r5, r5, #1
   130d8:	cmp	r5, r8
   130dc:	bne	13014 <export_data_element_to_ascii@@Base+0x458>
   130e0:	ldr	r0, [sp, #44]	; 0x2c
   130e4:	bl	12850 <coda_cursor_goto_parent@plt>
   130e8:	b	135f4 <export_data_element_to_ascii@@Base+0xa38>
   130ec:	cmp	r0, #6
   130f0:	beq	1311c <export_data_element_to_ascii@@Base+0x560>
   130f4:	cmp	r0, #2
   130f8:	bcs	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   130fc:	movw	r0, #39066	; 0x989a
   13100:	movw	r1, #38574	; 0x96ae
   13104:	movw	r3, #38694	; 0x9726
   13108:	mov	r2, #368	; 0x170
   1310c:	movt	r0, #1
   13110:	movt	r1, #1
   13114:	movt	r3, #1
   13118:	bl	12ab4 <__assert_fail@plt>
   1311c:	ldr	r0, [r5]
   13120:	sub	r1, fp, #36	; 0x24
   13124:	bl	12928 <coda_type_get_special_type@plt>
   13128:	cmp	r0, #0
   1312c:	beq	13134 <export_data_element_to_ascii@@Base+0x578>
   13130:	bl	17c44 <handle_coda_error@@Base>
   13134:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13138:	sub	r1, r0, #1
   1313c:	cmp	r1, #2
   13140:	bcs	13248 <export_data_element_to_ascii@@Base+0x68c>
   13144:	add	r0, sl, #144	; 0x90
   13148:	sub	r1, fp, #48	; 0x30
   1314c:	bl	12898 <coda_cursor_read_double@plt>
   13150:	cmp	r0, #0
   13154:	beq	1315c <export_data_element_to_ascii@@Base+0x5a0>
   13158:	bl	17c44 <handle_coda_error@@Base>
   1315c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13160:	cmp	r0, #2
   13164:	bne	135b8 <export_data_element_to_ascii@@Base+0x9fc>
   13168:	movw	r0, #49628	; 0xc1dc
   1316c:	movt	r0, #2
   13170:	ldr	r0, [r0]
   13174:	cmp	r0, #0
   13178:	beq	135b8 <export_data_element_to_ascii@@Base+0x9fc>
   1317c:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13180:	bl	128a4 <coda_isNaN@plt>
   13184:	cmp	r0, #0
   13188:	bne	1319c <export_data_element_to_ascii@@Base+0x5e0>
   1318c:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13190:	bl	12748 <coda_isInf@plt>
   13194:	cmp	r0, #0
   13198:	beq	13614 <export_data_element_to_ascii@@Base+0xa58>
   1319c:	movw	r1, #38776	; 0x9778
   131a0:	mov	r0, #11
   131a4:	movt	r1, #1
   131a8:	vld1.64	{d16-d17}, [r1], r0
   131ac:	vld1.8	{d18-d19}, [r1]
   131b0:	add	r1, sp, #64	; 0x40
   131b4:	vst1.64	{d16-d17}, [r1], r0
   131b8:	vst1.8	{d18-d19}, [r1]
   131bc:	movw	r0, #53796	; 0xd224
   131c0:	movt	r0, #2
   131c4:	ldr	r0, [r0]
   131c8:	cmp	r0, #0
   131cc:	beq	1360c <export_data_element_to_ascii@@Base+0xa50>
   131d0:	movw	r1, #40563	; 0x9e73
   131d4:	add	r2, sp, #64	; 0x40
   131d8:	movt	r1, #1
   131dc:	b	13204 <export_data_element_to_ascii@@Base+0x648>
   131e0:	add	r0, sl, #144	; 0x90
   131e4:	add	r1, sp, #64	; 0x40
   131e8:	bl	1270c <coda_cursor_read_uint32@plt>
   131ec:	cmp	r0, #0
   131f0:	beq	131f8 <export_data_element_to_ascii@@Base+0x63c>
   131f4:	bl	17c44 <handle_coda_error@@Base>
   131f8:	ldr	r2, [sp, #64]	; 0x40
   131fc:	movw	r1, #38679	; 0x9717
   13200:	movt	r1, #1
   13204:	mov	r0, r8
   13208:	bl	128b0 <fprintf@plt>
   1320c:	b	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   13210:	add	r0, sl, #144	; 0x90
   13214:	add	r1, sp, #64	; 0x40
   13218:	bl	12898 <coda_cursor_read_double@plt>
   1321c:	cmp	r0, #0
   13220:	beq	13228 <export_data_element_to_ascii@@Base+0x66c>
   13224:	bl	17c44 <handle_coda_error@@Base>
   13228:	vldr	d16, [sp, #64]	; 0x40
   1322c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13230:	vmov	r2, r3, d16
   13234:	cmp	r0, #8
   13238:	bne	135c0 <export_data_element_to_ascii@@Base+0xa04>
   1323c:	movw	r1, #38683	; 0x971b
   13240:	movt	r1, #1
   13244:	b	135c8 <export_data_element_to_ascii@@Base+0xa0c>
   13248:	cmp	r0, #3
   1324c:	bne	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   13250:	add	r0, sl, #144	; 0x90
   13254:	add	r1, sp, #64	; 0x40
   13258:	bl	129d0 <coda_cursor_read_complex_double_pair@plt>
   1325c:	cmp	r0, #0
   13260:	beq	13268 <export_data_element_to_ascii@@Base+0x6ac>
   13264:	bl	17c44 <handle_coda_error@@Base>
   13268:	movw	r0, #53396	; 0xd094
   1326c:	vldr	d16, [sp, #64]	; 0x40
   13270:	vldr	d17, [sp, #72]	; 0x48
   13274:	movw	r1, #38756	; 0x9764
   13278:	movt	r0, #2
   1327c:	movt	r1, #1
   13280:	ldr	r0, [r0]
   13284:	vstr	d17, [sp, #8]
   13288:	vmov	r2, r3, d16
   1328c:	str	r0, [sp]
   13290:	b	135c8 <export_data_element_to_ascii@@Base+0xa0c>
   13294:	add	r0, sl, #144	; 0x90
   13298:	sub	r1, fp, #48	; 0x30
   1329c:	bl	129a0 <coda_cursor_read_int64@plt>
   132a0:	cmp	r0, #0
   132a4:	beq	132ac <export_data_element_to_ascii@@Base+0x6f0>
   132a8:	bl	17c44 <handle_coda_error@@Base>
   132ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   132b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   132b4:	add	r5, sp, #64	; 0x40
   132b8:	mov	r2, r5
   132bc:	bl	12aa8 <coda_str64@plt>
   132c0:	b	1356c <export_data_element_to_ascii@@Base+0x9b0>
   132c4:	add	r6, sl, #144	; 0x90
   132c8:	add	r1, sp, #64	; 0x40
   132cc:	mov	r0, r6
   132d0:	bl	12880 <coda_cursor_get_string_length@plt>
   132d4:	cmp	r0, #0
   132d8:	beq	132e0 <export_data_element_to_ascii@@Base+0x724>
   132dc:	bl	17c44 <handle_coda_error@@Base>
   132e0:	ldr	r0, [sp, #64]	; 0x40
   132e4:	add	r7, r0, #1
   132e8:	mov	r0, r7
   132ec:	bl	12820 <malloc@plt>
   132f0:	mov	r5, r0
   132f4:	cmp	r0, #0
   132f8:	bne	1332c <export_data_element_to_ascii@@Base+0x770>
   132fc:	movw	r1, #38521	; 0x9679
   13300:	movw	r3, #38574	; 0x96ae
   13304:	mov	r0, #126	; 0x7e
   13308:	mov	r2, r7
   1330c:	str	r0, [sp]
   13310:	movt	r1, #1
   13314:	movt	r3, #1
   13318:	mvn	r0, #0
   1331c:	bl	126a0 <coda_set_error@plt>
   13320:	bl	17c44 <handle_coda_error@@Base>
   13324:	ldr	r0, [sp, #64]	; 0x40
   13328:	add	r7, r0, #1
   1332c:	mov	r0, r6
   13330:	mov	r1, r5
   13334:	mov	r2, r7
   13338:	bl	12844 <coda_cursor_read_string@plt>
   1333c:	cmp	r0, #0
   13340:	beq	13348 <export_data_element_to_ascii@@Base+0x78c>
   13344:	bl	17c44 <handle_coda_error@@Base>
   13348:	movw	r0, #53796	; 0xd224
   1334c:	movt	r0, #2
   13350:	ldr	r0, [r0]
   13354:	cmp	r0, #0
   13358:	beq	135d4 <export_data_element_to_ascii@@Base+0xa18>
   1335c:	movw	r1, #40563	; 0x9e73
   13360:	mov	r0, r8
   13364:	mov	r2, r5
   13368:	movt	r1, #1
   1336c:	bl	128b0 <fprintf@plt>
   13370:	b	135e0 <export_data_element_to_ascii@@Base+0xa24>
   13374:	add	r0, sl, #144	; 0x90
   13378:	add	r1, sp, #64	; 0x40
   1337c:	str	r8, [sp, #24]
   13380:	str	r0, [sp, #60]	; 0x3c
   13384:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13388:	cmp	r0, #0
   1338c:	beq	13394 <export_data_element_to_ascii@@Base+0x7d8>
   13390:	bl	17c44 <handle_coda_error@@Base>
   13394:	ldr	sl, [sp, #64]	; 0x40
   13398:	ldr	r7, [sp, #68]	; 0x44
   1339c:	lsr	r0, sl, #3
   133a0:	asr	r4, r7, #3
   133a4:	orr	r0, r0, r7, lsl #29
   133a8:	adds	r5, r0, #1
   133ac:	adc	r9, r4, #0
   133b0:	ands	r8, sl, #7
   133b4:	moveq	r5, r0
   133b8:	mov	r0, r5
   133bc:	bl	12820 <malloc@plt>
   133c0:	cmp	r8, #0
   133c4:	mov	r6, r0
   133c8:	moveq	r9, r4
   133cc:	cmp	r0, #0
   133d0:	bne	13404 <export_data_element_to_ascii@@Base+0x848>
   133d4:	movw	r1, #38521	; 0x9679
   133d8:	movw	r3, #38574	; 0x96ae
   133dc:	mov	r0, #163	; 0xa3
   133e0:	mov	r2, r5
   133e4:	str	r0, [sp]
   133e8:	movt	r1, #1
   133ec:	movt	r3, #1
   133f0:	mvn	r0, #0
   133f4:	bl	126a0 <coda_set_error@plt>
   133f8:	bl	17c44 <handle_coda_error@@Base>
   133fc:	ldr	sl, [sp, #64]	; 0x40
   13400:	ldr	r7, [sp, #68]	; 0x44
   13404:	ldr	r0, [sp, #60]	; 0x3c
   13408:	mov	r1, r6
   1340c:	mov	r2, #0
   13410:	mov	r3, #0
   13414:	str	sl, [sp]
   13418:	str	r7, [sp, #4]
   1341c:	bl	12a9c <coda_cursor_read_bits@plt>
   13420:	ldr	r8, [sp, #24]
   13424:	cmp	r0, #0
   13428:	beq	13430 <export_data_element_to_ascii@@Base+0x874>
   1342c:	bl	17c44 <handle_coda_error@@Base>
   13430:	subs	r0, r5, #1
   13434:	sbcs	r0, r9, #0
   13438:	blt	13538 <export_data_element_to_ascii@@Base+0x97c>
   1343c:	movw	r7, #38664	; 0x9708
   13440:	movw	r4, #38667	; 0x970b
   13444:	mov	sl, #0
   13448:	movt	r7, #1
   1344c:	movt	r4, #1
   13450:	b	13488 <export_data_element_to_ascii@@Base+0x8cc>
   13454:	sub	r0, r2, #32
   13458:	uxtb	r0, r0
   1345c:	cmp	r0, #94	; 0x5e
   13460:	bhi	13474 <export_data_element_to_ascii@@Base+0x8b8>
   13464:	mov	r0, r2
   13468:	mov	r1, r8
   1346c:	bl	129e8 <fputc@plt>
   13470:	b	13528 <export_data_element_to_ascii@@Base+0x96c>
   13474:	movw	r1, #38673	; 0x9711
   13478:	mov	r0, r8
   1347c:	movt	r1, #1
   13480:	bl	128b0 <fprintf@plt>
   13484:	b	13528 <export_data_element_to_ascii@@Base+0x96c>
   13488:	ldrb	r2, [r6, sl]
   1348c:	sub	r0, r2, #7
   13490:	cmp	r0, #6
   13494:	bhi	134c8 <export_data_element_to_ascii@@Base+0x90c>
   13498:	add	r1, pc, #0
   1349c:	ldr	pc, [r1, r0, lsl #2]
   134a0:			; <UNDEFINED> instruction: 0x000134bc
   134a4:	strdeq	r3, [r1], -r4
   134a8:	andeq	r3, r1, r8, ror #9
   134ac:	andeq	r3, r1, r0, lsl #10
   134b0:	ldrdeq	r3, [r1], -ip
   134b4:	andeq	r3, r1, ip, lsl #10
   134b8:	andeq	r3, r1, r4, lsl r5
   134bc:	movw	r0, #38649	; 0x96f9
   134c0:	movt	r0, #1
   134c4:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   134c8:	cmp	r2, #92	; 0x5c
   134cc:	bne	13454 <export_data_element_to_ascii@@Base+0x898>
   134d0:	movw	r0, #38670	; 0x970e
   134d4:	movt	r0, #1
   134d8:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   134dc:	movw	r0, #38661	; 0x9705
   134e0:	movt	r0, #1
   134e4:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   134e8:	movw	r0, #38655	; 0x96ff
   134ec:	movt	r0, #1
   134f0:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   134f4:	movw	r0, #38652	; 0x96fc
   134f8:	movt	r0, #1
   134fc:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   13500:	movw	r0, #38658	; 0x9702
   13504:	movt	r0, #1
   13508:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   1350c:	mov	r0, r7
   13510:	b	13518 <export_data_element_to_ascii@@Base+0x95c>
   13514:	mov	r0, r4
   13518:	mov	r1, #2
   1351c:	mov	r2, #1
   13520:	mov	r3, r8
   13524:	bl	127cc <fwrite@plt>
   13528:	add	sl, sl, #1
   1352c:	subs	r0, sl, r5
   13530:	rscs	r0, r9, #0
   13534:	blt	13488 <export_data_element_to_ascii@@Base+0x8cc>
   13538:	mov	r0, r6
   1353c:	b	135e4 <export_data_element_to_ascii@@Base+0xa28>
   13540:	add	r0, sl, #144	; 0x90
   13544:	sub	r1, fp, #48	; 0x30
   13548:	bl	1288c <coda_cursor_read_uint64@plt>
   1354c:	cmp	r0, #0
   13550:	beq	13558 <export_data_element_to_ascii@@Base+0x99c>
   13554:	bl	17c44 <handle_coda_error@@Base>
   13558:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1355c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13560:	add	r5, sp, #64	; 0x40
   13564:	mov	r2, r5
   13568:	bl	126dc <coda_str64u@plt>
   1356c:	mov	r0, r5
   13570:	mov	r1, r8
   13574:	bl	12a84 <fputs@plt>
   13578:	b	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   1357c:	add	r0, sl, #144	; 0x90
   13580:	add	r1, sp, #64	; 0x40
   13584:	bl	128f8 <coda_cursor_read_char@plt>
   13588:	cmp	r0, #0
   1358c:	beq	13594 <export_data_element_to_ascii@@Base+0x9d8>
   13590:	bl	17c44 <handle_coda_error@@Base>
   13594:	movw	r0, #53796	; 0xd224
   13598:	ldrb	r2, [sp, #64]	; 0x40
   1359c:	movt	r0, #2
   135a0:	ldr	r0, [r0]
   135a4:	cmp	r0, #0
   135a8:	beq	135fc <export_data_element_to_ascii@@Base+0xa40>
   135ac:	movw	r1, #38516	; 0x9674
   135b0:	movt	r1, #1
   135b4:	b	13204 <export_data_element_to_ascii@@Base+0x648>
   135b8:	vldr	d16, [fp, #-48]	; 0xffffffd0
   135bc:	vmov	r2, r3, d16
   135c0:	movw	r1, #38688	; 0x9720
   135c4:	movt	r1, #1
   135c8:	mov	r0, r8
   135cc:	bl	128b0 <fprintf@plt>
   135d0:	b	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   135d4:	mov	r0, r5
   135d8:	mov	r1, r8
   135dc:	bl	12a84 <fputs@plt>
   135e0:	mov	r0, r5
   135e4:	bl	126e8 <free@plt>
   135e8:	mov	r0, #10
   135ec:	mov	r1, r8
   135f0:	bl	129e8 <fputc@plt>
   135f4:	sub	sp, fp, #28
   135f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135fc:	mov	r0, r2
   13600:	mov	r1, r8
   13604:	bl	129e8 <fputc@plt>
   13608:	b	135e8 <export_data_element_to_ascii@@Base+0xa2c>
   1360c:	add	r0, sp, #64	; 0x40
   13610:	b	13570 <export_data_element_to_ascii@@Base+0x9b4>
   13614:	vldr	d0, [fp, #-48]	; 0xffffffd0
   13618:	movw	r0, #38729	; 0x9749
   1361c:	add	r1, sp, #64	; 0x40
   13620:	movt	r0, #1
   13624:	bl	126c4 <coda_time_double_to_string@plt>
   13628:	cmp	r0, #0
   1362c:	beq	131bc <export_data_element_to_ascii@@Base+0x600>
   13630:	bl	17c44 <handle_coda_error@@Base>
   13634:	b	131bc <export_data_element_to_ascii@@Base+0x600>
   13638:	movw	r0, #39066	; 0x989a
   1363c:	movw	r1, #38574	; 0x96ae
   13640:	movw	r3, #38694	; 0x9726
   13644:	movw	r2, #294	; 0x126
   13648:	movt	r0, #1
   1364c:	movt	r1, #1
   13650:	movt	r3, #1
   13654:	bl	12ab4 <__assert_fail@plt>

00013658 <print_debug_data@@Base>:
   13658:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1365c:	add	fp, sp, #24
   13660:	sub	sp, sp, #536	; 0x218
   13664:	movw	r7, #49640	; 0xc1e8
   13668:	mov	r6, r0
   1366c:	mov	r5, r1
   13670:	mov	r4, r2
   13674:	sub	r1, fp, #28
   13678:	movt	r7, #2
   1367c:	cmp	r6, #0
   13680:	ldr	r0, [r7]
   13684:	beq	136a0 <print_debug_data@@Base+0x48>
   13688:	str	r1, [sp]
   1368c:	mov	r1, r6
   13690:	mov	r2, r5
   13694:	mov	r3, r4
   13698:	bl	128c8 <coda_open_as@plt>
   1369c:	b	136a4 <print_debug_data@@Base+0x4c>
   136a0:	bl	126ac <coda_open@plt>
   136a4:	cmp	r0, #0
   136a8:	beq	13708 <print_debug_data@@Base+0xb0>
   136ac:	bl	12a60 <coda_get_errno@plt>
   136b0:	ldr	r0, [r0]
   136b4:	cmn	r0, #21
   136b8:	bne	13704 <print_debug_data@@Base+0xac>
   136bc:	mov	r0, #0
   136c0:	bl	126f4 <coda_set_option_use_mmap@plt>
   136c4:	ldr	r0, [r7]
   136c8:	sub	r1, fp, #28
   136cc:	cmp	r6, #0
   136d0:	beq	136ec <print_debug_data@@Base+0x94>
   136d4:	str	r1, [sp]
   136d8:	mov	r1, r6
   136dc:	mov	r2, r5
   136e0:	mov	r3, r4
   136e4:	bl	128c8 <coda_open_as@plt>
   136e8:	b	136f0 <print_debug_data@@Base+0x98>
   136ec:	bl	126ac <coda_open@plt>
   136f0:	mov	r4, r0
   136f4:	mov	r0, #1
   136f8:	bl	126f4 <coda_set_option_use_mmap@plt>
   136fc:	cmp	r4, #0
   13700:	beq	13708 <print_debug_data@@Base+0xb0>
   13704:	bl	17c44 <handle_coda_error@@Base>
   13708:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1370c:	add	r1, sp, #4
   13710:	bl	12790 <coda_get_product_format@plt>
   13714:	cmp	r0, #0
   13718:	beq	13720 <print_debug_data@@Base+0xc8>
   1371c:	bl	17c44 <handle_coda_error@@Base>
   13720:	ldr	r0, [sp, #4]
   13724:	mov	r1, #0
   13728:	cmp	r0, #3
   1372c:	movw	r0, #49576	; 0xc1a8
   13730:	movwcc	r1, #1
   13734:	movt	r0, #2
   13738:	str	r1, [r0]
   1373c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13740:	add	r0, sp, #8
   13744:	bl	127d8 <coda_cursor_set_product@plt>
   13748:	cmp	r0, #0
   1374c:	beq	13754 <print_debug_data@@Base+0xfc>
   13750:	bl	17c44 <handle_coda_error@@Base>
   13754:	movw	r0, #53416	; 0xd0a8
   13758:	movt	r0, #2
   1375c:	ldr	r1, [r0]
   13760:	cmp	r1, #0
   13764:	beq	1377c <print_debug_data@@Base+0x124>
   13768:	add	r0, sp, #8
   1376c:	bl	129b8 <coda_cursor_goto@plt>
   13770:	cmp	r0, #0
   13774:	beq	1377c <print_debug_data@@Base+0x124>
   13778:	bl	17c44 <handle_coda_error@@Base>
   1377c:	mov	r0, #0
   13780:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   13784:	add	r0, sp, #8
   13788:	mov	r1, #0
   1378c:	bl	137a0 <print_debug_data@@Base+0x148>
   13790:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13794:	bl	12994 <coda_close@plt>
   13798:	sub	sp, fp, #24
   1379c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   137a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137a4:	add	fp, sp, #28
   137a8:	sub	sp, sp, #636	; 0x27c
   137ac:	str	r1, [sp, #16]
   137b0:	sub	r1, fp, #40	; 0x28
   137b4:	mov	r5, r0
   137b8:	bl	1276c <coda_cursor_has_attributes@plt>
   137bc:	cmp	r0, #0
   137c0:	beq	137c8 <print_debug_data@@Base+0x170>
   137c4:	bl	17c44 <handle_coda_error@@Base>
   137c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   137cc:	cmp	r0, #0
   137d0:	beq	13828 <print_debug_data@@Base+0x1d0>
   137d4:	mov	r0, r5
   137d8:	bl	128ec <coda_cursor_goto_attributes@plt>
   137dc:	cmp	r0, #0
   137e0:	beq	137e8 <print_debug_data@@Base+0x190>
   137e4:	bl	17c44 <handle_coda_error@@Base>
   137e8:	movw	r0, #38808	; 0x9798
   137ec:	movt	r0, #1
   137f0:	bl	1435c <print_debug_data@@Base+0xd04>
   137f4:	movw	r4, #49600	; 0xc1c0
   137f8:	ldr	r1, [sp, #16]
   137fc:	movt	r4, #2
   13800:	ldr	r0, [r4]
   13804:	add	r0, r0, #1
   13808:	str	r0, [r4]
   1380c:	mov	r0, r5
   13810:	bl	137a0 <print_debug_data@@Base+0x148>
   13814:	ldr	r0, [r4]
   13818:	sub	r0, r0, #1
   1381c:	str	r0, [r4]
   13820:	mov	r0, r5
   13824:	bl	12850 <coda_cursor_goto_parent@plt>
   13828:	sub	r1, fp, #36	; 0x24
   1382c:	mov	r0, r5
   13830:	bl	12778 <coda_cursor_get_type_class@plt>
   13834:	cmp	r0, #0
   13838:	beq	13840 <print_debug_data@@Base+0x1e8>
   1383c:	bl	17c44 <handle_coda_error@@Base>
   13840:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13844:	cmp	r0, #6
   13848:	bhi	14318 <print_debug_data@@Base+0xcc0>
   1384c:	add	r1, pc, #4
   13850:	str	r5, [sp, #20]
   13854:	ldr	pc, [r1, r0, lsl #2]
   13858:	andeq	r3, r1, r0, ror #19
   1385c:	andeq	r3, r1, r8, ror #22
   13860:	andeq	r3, r1, r4, ror r8
   13864:	andeq	r3, r1, r4, ror r8
   13868:	andeq	r3, r1, r4, ror r8
   1386c:	andeq	r3, r1, r4, ror r8
   13870:	andeq	r3, r1, r8, asr #23
   13874:	sub	r1, fp, #96	; 0x60
   13878:	mov	r0, r5
   1387c:	bl	12988 <coda_cursor_has_ascii_content@plt>
   13880:	cmp	r0, #0
   13884:	beq	1388c <print_debug_data@@Base+0x234>
   13888:	bl	17c44 <handle_coda_error@@Base>
   1388c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13890:	cmp	r0, #0
   13894:	beq	1394c <print_debug_data@@Base+0x2f4>
   13898:	add	r1, sp, #24
   1389c:	mov	r0, r5
   138a0:	bl	12880 <coda_cursor_get_string_length@plt>
   138a4:	cmp	r0, #0
   138a8:	beq	138b0 <print_debug_data@@Base+0x258>
   138ac:	bl	17c44 <handle_coda_error@@Base>
   138b0:	ldr	r0, [sp, #24]
   138b4:	add	r6, r0, #1
   138b8:	mov	r0, r6
   138bc:	bl	12820 <malloc@plt>
   138c0:	mov	r5, r0
   138c4:	cmp	r0, #0
   138c8:	bne	138fc <print_debug_data@@Base+0x2a4>
   138cc:	movw	r1, #38521	; 0x9679
   138d0:	movw	r3, #38835	; 0x97b3
   138d4:	movw	r0, #410	; 0x19a
   138d8:	mov	r2, r6
   138dc:	str	r0, [sp]
   138e0:	movt	r1, #1
   138e4:	movt	r3, #1
   138e8:	mvn	r0, #0
   138ec:	bl	126a0 <coda_set_error@plt>
   138f0:	bl	17c44 <handle_coda_error@@Base>
   138f4:	ldr	r0, [sp, #24]
   138f8:	add	r6, r0, #1
   138fc:	ldr	r0, [sp, #20]
   13900:	mov	r1, r5
   13904:	mov	r2, r6
   13908:	bl	12844 <coda_cursor_read_string@plt>
   1390c:	cmp	r0, #0
   13910:	beq	13918 <print_debug_data@@Base+0x2c0>
   13914:	bl	17c44 <handle_coda_error@@Base>
   13918:	movw	r0, #40308	; 0x9d74
   1391c:	movt	r0, #1
   13920:	bl	1435c <print_debug_data@@Base+0xd04>
   13924:	ldr	r1, [sp, #24]
   13928:	mov	r0, r5
   1392c:	bl	14458 <print_debug_data@@Base+0xe00>
   13930:	ldr	r1, [sp, #24]
   13934:	movw	r0, #38910	; 0x97fe
   13938:	movt	r0, #1
   1393c:	bl	14410 <print_debug_data@@Base+0xdb8>
   13940:	mov	r0, r5
   13944:	bl	126e8 <free@plt>
   13948:	ldr	r5, [sp, #20]
   1394c:	sub	r1, fp, #120	; 0x78
   13950:	mov	r0, r5
   13954:	bl	12814 <coda_cursor_get_read_type@plt>
   13958:	cmp	r0, #0
   1395c:	beq	13964 <print_debug_data@@Base+0x30c>
   13960:	bl	17c44 <handle_coda_error@@Base>
   13964:	ldr	r0, [fp, #-120]	; 0xffffff88
   13968:	add	r0, r0, #1
   1396c:	cmp	r0, #13
   13970:	bhi	14318 <print_debug_data@@Base+0xcc0>
   13974:	add	r1, pc, #0
   13978:	ldr	pc, [r1, r0, lsl #2]
   1397c:			; <UNDEFINED> instruction: 0x000139b4
   13980:	andeq	r3, r1, r0, asr ip
   13984:	andeq	r3, r1, r8, lsr #24
   13988:	andeq	r3, r1, r0, asr ip
   1398c:	andeq	r3, r1, r8, lsr #24
   13990:	andeq	r3, r1, r0, asr ip
   13994:	andeq	r3, r1, r8, lsr #24
   13998:	strdeq	r3, [r1], -ip
   1399c:	andeq	r3, r1, ip, lsr sp
   139a0:	andeq	r3, r1, r8, ror ip
   139a4:	andeq	r3, r1, r8, ror ip
   139a8:			; <UNDEFINED> instruction: 0x000139b4
   139ac:			; <UNDEFINED> instruction: 0x000139b4
   139b0:	andeq	r3, r1, ip, ror sp
   139b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   139b8:	cmp	r0, #0
   139bc:	bne	14318 <print_debug_data@@Base+0xcc0>
   139c0:	movw	r0, #38951	; 0x9827
   139c4:	movw	r1, #38835	; 0x97b3
   139c8:	movw	r3, #38969	; 0x9839
   139cc:	mov	r2, #548	; 0x224
   139d0:	movt	r0, #1
   139d4:	movt	r1, #1
   139d8:	movt	r3, #1
   139dc:	bl	12ab4 <__assert_fail@plt>
   139e0:	sub	r1, fp, #120	; 0x78
   139e4:	mov	r0, r5
   139e8:	bl	126d0 <coda_cursor_get_num_elements@plt>
   139ec:	cmp	r0, #0
   139f0:	beq	139f8 <print_debug_data@@Base+0x3a0>
   139f4:	bl	17c44 <handle_coda_error@@Base>
   139f8:	ldr	r0, [fp, #-120]	; 0xffffff88
   139fc:	cmp	r0, #1
   13a00:	blt	14318 <print_debug_data@@Base+0xcc0>
   13a04:	sub	r1, fp, #96	; 0x60
   13a08:	mov	r0, r5
   13a0c:	bl	12730 <coda_cursor_get_type@plt>
   13a10:	cmp	r0, #0
   13a14:	beq	13a1c <print_debug_data@@Base+0x3c4>
   13a18:	bl	17c44 <handle_coda_error@@Base>
   13a1c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a20:	sub	r1, fp, #44	; 0x2c
   13a24:	bl	12934 <coda_type_get_record_union_status@plt>
   13a28:	cmp	r0, #0
   13a2c:	beq	13a34 <print_debug_data@@Base+0x3dc>
   13a30:	bl	17c44 <handle_coda_error@@Base>
   13a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13a38:	cmp	r0, #0
   13a3c:	beq	13e98 <print_debug_data@@Base+0x840>
   13a40:	sub	r1, fp, #48	; 0x30
   13a44:	mov	r0, r5
   13a48:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   13a4c:	cmp	r0, #0
   13a50:	beq	13a58 <print_debug_data@@Base+0x400>
   13a54:	bl	17c44 <handle_coda_error@@Base>
   13a58:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a5c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13a60:	sub	r2, fp, #52	; 0x34
   13a64:	bl	12a78 <coda_type_get_record_field_name@plt>
   13a68:	cmp	r0, #0
   13a6c:	beq	13a74 <print_debug_data@@Base+0x41c>
   13a70:	bl	17c44 <handle_coda_error@@Base>
   13a74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13a78:	mov	r0, r5
   13a7c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   13a80:	cmp	r0, #0
   13a84:	beq	13a8c <print_debug_data@@Base+0x434>
   13a88:	bl	17c44 <handle_coda_error@@Base>
   13a8c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13a90:	movw	r0, #40557	; 0x9e6d
   13a94:	movt	r0, #1
   13a98:	bl	1435c <print_debug_data@@Base+0xd04>
   13a9c:	movw	r0, #49576	; 0xc1a8
   13aa0:	movt	r0, #2
   13aa4:	ldr	r0, [r0]
   13aa8:	cmp	r0, #0
   13aac:	beq	13b18 <print_debug_data@@Base+0x4c0>
   13ab0:	sub	r1, fp, #88	; 0x58
   13ab4:	mov	r0, r5
   13ab8:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13abc:	cmp	r0, #0
   13ac0:	beq	13ac8 <print_debug_data@@Base+0x470>
   13ac4:	bl	17c44 <handle_coda_error@@Base>
   13ac8:	ldr	r1, [fp, #-84]	; 0xffffffac
   13acc:	cmp	r1, #0
   13ad0:	blt	13b18 <print_debug_data@@Base+0x4c0>
   13ad4:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13ad8:	add	r6, sp, #24
   13adc:	mov	r2, r6
   13ae0:	lsr	r0, r0, #3
   13ae4:	orr	r0, r0, r1, lsl #29
   13ae8:	lsr	r1, r1, #3
   13aec:	bl	12aa8 <coda_str64@plt>
   13af0:	movw	r0, #38822	; 0x97a6
   13af4:	mov	r1, r6
   13af8:	movt	r0, #1
   13afc:	bl	14410 <print_debug_data@@Base+0xdb8>
   13b00:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13b04:	ands	r1, r0, #7
   13b08:	beq	13b18 <print_debug_data@@Base+0x4c0>
   13b0c:	movw	r0, #38826	; 0x97aa
   13b10:	movt	r0, #1
   13b14:	bl	14410 <print_debug_data@@Base+0xdb8>
   13b18:	movw	r0, #41107	; 0xa093
   13b1c:	movt	r0, #1
   13b20:	bl	14410 <print_debug_data@@Base+0xdb8>
   13b24:	movw	r4, #49600	; 0xc1c0
   13b28:	movt	r4, #2
   13b2c:	ldr	r0, [r4]
   13b30:	add	r0, r0, #1
   13b34:	str	r0, [r4]
   13b38:	movw	r0, #49580	; 0xc1ac
   13b3c:	movt	r0, #2
   13b40:	ldr	r0, [r0]
   13b44:	cmp	r0, #0
   13b48:	blt	142f4 <print_debug_data@@Base+0xc9c>
   13b4c:	ldr	r1, [sp, #16]
   13b50:	cmp	r0, r1
   13b54:	bgt	142f4 <print_debug_data@@Base+0xc9c>
   13b58:	movw	r0, #38830	; 0x97ae
   13b5c:	movt	r0, #1
   13b60:	bl	1435c <print_debug_data@@Base+0xd04>
   13b64:	b	14304 <print_debug_data@@Base+0xcac>
   13b68:	add	r6, sp, #24
   13b6c:	sub	r1, fp, #44	; 0x2c
   13b70:	mov	r0, r5
   13b74:	mov	r2, r6
   13b78:	bl	1297c <coda_cursor_get_array_dim@plt>
   13b7c:	cmp	r0, #0
   13b80:	beq	13b88 <print_debug_data@@Base+0x530>
   13b84:	bl	17c44 <handle_coda_error@@Base>
   13b88:	ldr	r4, [fp, #-44]	; 0xffffffd4
   13b8c:	cmp	r4, #0
   13b90:	blt	14318 <print_debug_data@@Base+0xcc0>
   13b94:	beq	14030 <print_debug_data@@Base+0x9d8>
   13b98:	lsl	r2, r4, #2
   13b9c:	sub	r0, fp, #88	; 0x58
   13ba0:	mov	r1, #0
   13ba4:	bl	12904 <memset@plt>
   13ba8:	mov	r9, #1
   13bac:	ldr	r0, [r6], #4
   13bb0:	subs	r4, r4, #1
   13bb4:	mul	r9, r0, r9
   13bb8:	bne	13bac <print_debug_data@@Base+0x554>
   13bbc:	cmp	r9, #1
   13bc0:	bge	14034 <print_debug_data@@Base+0x9dc>
   13bc4:	b	14318 <print_debug_data@@Base+0xcc0>
   13bc8:	sub	r1, fp, #120	; 0x78
   13bcc:	mov	r0, r5
   13bd0:	bl	127b4 <coda_cursor_get_special_type@plt>
   13bd4:	cmp	r0, #0
   13bd8:	beq	13be0 <print_debug_data@@Base+0x588>
   13bdc:	bl	17c44 <handle_coda_error@@Base>
   13be0:	ldr	r0, [fp, #-120]	; 0xffffff88
   13be4:	cmp	r0, #0
   13be8:	beq	13cb0 <print_debug_data@@Base+0x658>
   13bec:	add	r6, sp, #24
   13bf0:	mov	r1, r5
   13bf4:	mov	r2, #520	; 0x208
   13bf8:	mov	r0, r6
   13bfc:	bl	1273c <memcpy@plt>
   13c00:	mov	r0, r6
   13c04:	bl	12a24 <coda_cursor_use_base_type_of_special_type@plt>
   13c08:	cmp	r0, #0
   13c0c:	beq	13c14 <print_debug_data@@Base+0x5bc>
   13c10:	bl	17c44 <handle_coda_error@@Base>
   13c14:	ldr	r1, [sp, #16]
   13c18:	add	r0, sp, #24
   13c1c:	bl	137a0 <print_debug_data@@Base+0x148>
   13c20:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c24:	b	13cb4 <print_debug_data@@Base+0x65c>
   13c28:	add	r1, sp, #24
   13c2c:	mov	r0, r5
   13c30:	bl	1270c <coda_cursor_read_uint32@plt>
   13c34:	cmp	r0, #0
   13c38:	beq	13c40 <print_debug_data@@Base+0x5e8>
   13c3c:	bl	17c44 <handle_coda_error@@Base>
   13c40:	ldr	r1, [sp, #24]
   13c44:	movw	r0, #38940	; 0x981c
   13c48:	movt	r0, #1
   13c4c:	b	13d74 <print_debug_data@@Base+0x71c>
   13c50:	add	r1, sp, #24
   13c54:	mov	r0, r5
   13c58:	bl	12a3c <coda_cursor_read_int32@plt>
   13c5c:	cmp	r0, #0
   13c60:	beq	13c68 <print_debug_data@@Base+0x610>
   13c64:	bl	17c44 <handle_coda_error@@Base>
   13c68:	ldr	r1, [sp, #24]
   13c6c:	movw	r0, #38935	; 0x9817
   13c70:	movt	r0, #1
   13c74:	b	13d74 <print_debug_data@@Base+0x71c>
   13c78:	add	r1, sp, #24
   13c7c:	mov	r0, r5
   13c80:	bl	12898 <coda_cursor_read_double@plt>
   13c84:	cmp	r0, #0
   13c88:	beq	13c90 <print_debug_data@@Base+0x638>
   13c8c:	bl	17c44 <handle_coda_error@@Base>
   13c90:	vldr	d16, [sp, #24]
   13c94:	ldr	r0, [fp, #-120]	; 0xffffff88
   13c98:	vmov	r2, r3, d16
   13c9c:	cmp	r0, #8
   13ca0:	bne	13d2c <print_debug_data@@Base+0x6d4>
   13ca4:	movw	r0, #38945	; 0x9821
   13ca8:	movt	r0, #1
   13cac:	b	13d34 <print_debug_data@@Base+0x6dc>
   13cb0:	mov	r0, #0
   13cb4:	bl	12628 <coda_type_get_special_type_name@plt>
   13cb8:	mov	r1, r0
   13cbc:	movw	r0, #39005	; 0x985d
   13cc0:	movt	r0, #1
   13cc4:	bl	1435c <print_debug_data@@Base+0xd04>
   13cc8:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ccc:	cmp	r0, #3
   13cd0:	bhi	14318 <print_debug_data@@Base+0xcc0>
   13cd4:	add	r1, pc, #0
   13cd8:	ldr	pc, [r1, r0, lsl #2]
   13cdc:	andeq	r3, r1, ip, ror #25
   13ce0:	andeq	r4, r1, r4, asr #5
   13ce4:	andeq	r4, r1, r4, asr #4
   13ce8:	andeq	r4, r1, ip, lsl #5
   13cec:	movw	r0, #41107	; 0xa093
   13cf0:	movt	r0, #1
   13cf4:	bl	14410 <print_debug_data@@Base+0xdb8>
   13cf8:	b	14318 <print_debug_data@@Base+0xcc0>
   13cfc:	sub	r1, fp, #88	; 0x58
   13d00:	mov	r0, r5
   13d04:	bl	129a0 <coda_cursor_read_int64@plt>
   13d08:	cmp	r0, #0
   13d0c:	beq	13d14 <print_debug_data@@Base+0x6bc>
   13d10:	bl	17c44 <handle_coda_error@@Base>
   13d14:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d18:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d1c:	add	r4, sp, #24
   13d20:	mov	r2, r4
   13d24:	bl	12aa8 <coda_str64@plt>
   13d28:	b	13d68 <print_debug_data@@Base+0x710>
   13d2c:	movw	r0, #39011	; 0x9863
   13d30:	movt	r0, #1
   13d34:	bl	1435c <print_debug_data@@Base+0xd04>
   13d38:	b	14318 <print_debug_data@@Base+0xcc0>
   13d3c:	sub	r1, fp, #88	; 0x58
   13d40:	mov	r0, r5
   13d44:	bl	1288c <coda_cursor_read_uint64@plt>
   13d48:	cmp	r0, #0
   13d4c:	beq	13d54 <print_debug_data@@Base+0x6fc>
   13d50:	bl	17c44 <handle_coda_error@@Base>
   13d54:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13d58:	ldr	r1, [fp, #-84]	; 0xffffffac
   13d5c:	add	r4, sp, #24
   13d60:	mov	r2, r4
   13d64:	bl	126dc <coda_str64u@plt>
   13d68:	movw	r0, #40685	; 0x9eed
   13d6c:	mov	r1, r4
   13d70:	movt	r0, #1
   13d74:	bl	1435c <print_debug_data@@Base+0xd04>
   13d78:	b	14318 <print_debug_data@@Base+0xcc0>
   13d7c:	sub	r1, fp, #88	; 0x58
   13d80:	mov	r0, r5
   13d84:	bl	12a00 <coda_cursor_get_bit_size@plt>
   13d88:	cmp	r0, #0
   13d8c:	beq	13d94 <print_debug_data@@Base+0x73c>
   13d90:	bl	17c44 <handle_coda_error@@Base>
   13d94:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13d98:	ldr	r7, [fp, #-84]	; 0xffffffac
   13d9c:	lsr	r0, r4, #3
   13da0:	tst	r4, #7
   13da4:	orr	r6, r0, r7, lsl #29
   13da8:	addne	r6, r6, #1
   13dac:	mov	r0, r6
   13db0:	bl	12820 <malloc@plt>
   13db4:	mov	r5, r0
   13db8:	cmp	r0, #0
   13dbc:	bne	13df0 <print_debug_data@@Base+0x798>
   13dc0:	movw	r1, #38521	; 0x9679
   13dc4:	movw	r3, #38835	; 0x97b3
   13dc8:	movw	r0, #447	; 0x1bf
   13dcc:	mov	r2, r6
   13dd0:	str	r0, [sp]
   13dd4:	movt	r1, #1
   13dd8:	movt	r3, #1
   13ddc:	mvn	r0, #0
   13de0:	bl	126a0 <coda_set_error@plt>
   13de4:	bl	17c44 <handle_coda_error@@Base>
   13de8:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13dec:	ldr	r7, [fp, #-84]	; 0xffffffac
   13df0:	stm	sp, {r4, r7}
   13df4:	mov	r1, r5
   13df8:	mov	r2, #0
   13dfc:	mov	r3, #0
   13e00:	ldr	r0, [sp, #20]
   13e04:	bl	12a9c <coda_cursor_read_bits@plt>
   13e08:	cmp	r0, #0
   13e0c:	beq	13e14 <print_debug_data@@Base+0x7bc>
   13e10:	bl	17c44 <handle_coda_error@@Base>
   13e14:	movw	r0, #40308	; 0x9d74
   13e18:	movt	r0, #1
   13e1c:	bl	1435c <print_debug_data@@Base+0xd04>
   13e20:	mov	r0, r5
   13e24:	mov	r1, r6
   13e28:	bl	14458 <print_debug_data@@Base+0xe00>
   13e2c:	movw	r0, #38926	; 0x980e
   13e30:	movt	r0, #1
   13e34:	bl	14410 <print_debug_data@@Base+0xdb8>
   13e38:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e3c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13e40:	add	r4, sp, #24
   13e44:	mov	r2, r4
   13e48:	lsr	r0, r0, #3
   13e4c:	orr	r0, r0, r1, lsl #29
   13e50:	asr	r1, r1, #3
   13e54:	bl	12aa8 <coda_str64@plt>
   13e58:	movw	r0, #40497	; 0x9e31
   13e5c:	mov	r1, r4
   13e60:	movt	r0, #1
   13e64:	bl	14410 <print_debug_data@@Base+0xdb8>
   13e68:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13e6c:	ands	r1, r0, #7
   13e70:	beq	13e80 <print_debug_data@@Base+0x828>
   13e74:	movw	r0, #38826	; 0x97aa
   13e78:	movt	r0, #1
   13e7c:	bl	14410 <print_debug_data@@Base+0xdb8>
   13e80:	movw	r0, #38923	; 0x980b
   13e84:	movt	r0, #1
   13e88:	bl	14410 <print_debug_data@@Base+0xdb8>
   13e8c:	mov	r0, r5
   13e90:	bl	126e8 <free@plt>
   13e94:	b	14318 <print_debug_data@@Base+0xcc0>
   13e98:	mov	r0, r5
   13e9c:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   13ea0:	cmp	r0, #0
   13ea4:	beq	13eac <print_debug_data@@Base+0x854>
   13ea8:	bl	17c44 <handle_coda_error@@Base>
   13eac:	ldr	r0, [fp, #-120]	; 0xffffff88
   13eb0:	mov	r1, #0
   13eb4:	str	r1, [fp, #-48]	; 0xffffffd0
   13eb8:	cmp	r0, #1
   13ebc:	blt	14028 <print_debug_data@@Base+0x9d0>
   13ec0:	ldr	r0, [sp, #16]
   13ec4:	movw	r7, #40557	; 0x9e6d
   13ec8:	movw	r9, #49576	; 0xc1a8
   13ecc:	movw	r6, #41107	; 0xa093
   13ed0:	movw	sl, #49600	; 0xc1c0
   13ed4:	movw	r8, #49580	; 0xc1ac
   13ed8:	mvn	r4, #0
   13edc:	movt	r7, #1
   13ee0:	movt	r9, #2
   13ee4:	movt	r6, #1
   13ee8:	movt	sl, #2
   13eec:	movt	r8, #2
   13ef0:	add	r0, r0, #1
   13ef4:	str	r0, [sp, #12]
   13ef8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   13efc:	sub	r2, fp, #52	; 0x34
   13f00:	bl	12a78 <coda_type_get_record_field_name@plt>
   13f04:	cmp	r0, #0
   13f08:	beq	13f10 <print_debug_data@@Base+0x8b8>
   13f0c:	bl	17c44 <handle_coda_error@@Base>
   13f10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13f14:	mov	r0, r7
   13f18:	bl	1435c <print_debug_data@@Base+0xd04>
   13f1c:	ldr	r0, [r9]
   13f20:	cmp	r0, #0
   13f24:	beq	13f94 <print_debug_data@@Base+0x93c>
   13f28:	ldr	r0, [sp, #20]
   13f2c:	sub	r1, fp, #88	; 0x58
   13f30:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   13f34:	cmp	r0, #0
   13f38:	beq	13f40 <print_debug_data@@Base+0x8e8>
   13f3c:	bl	17c44 <handle_coda_error@@Base>
   13f40:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f44:	ldr	r1, [fp, #-84]	; 0xffffffac
   13f48:	subs	r2, r4, r0
   13f4c:	sbcs	r2, r4, r1
   13f50:	bge	13f94 <print_debug_data@@Base+0x93c>
   13f54:	lsr	r0, r0, #3
   13f58:	add	r5, sp, #24
   13f5c:	orr	r0, r0, r1, lsl #29
   13f60:	lsr	r1, r1, #3
   13f64:	mov	r2, r5
   13f68:	bl	12aa8 <coda_str64@plt>
   13f6c:	movw	r0, #38822	; 0x97a6
   13f70:	mov	r1, r5
   13f74:	movt	r0, #1
   13f78:	bl	14410 <print_debug_data@@Base+0xdb8>
   13f7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13f80:	ands	r1, r0, #7
   13f84:	beq	13f94 <print_debug_data@@Base+0x93c>
   13f88:	movw	r0, #38826	; 0x97aa
   13f8c:	movt	r0, #1
   13f90:	bl	14410 <print_debug_data@@Base+0xdb8>
   13f94:	mov	r0, r6
   13f98:	bl	14410 <print_debug_data@@Base+0xdb8>
   13f9c:	ldr	r0, [sl]
   13fa0:	add	r0, r0, #1
   13fa4:	str	r0, [sl]
   13fa8:	ldr	r0, [r8]
   13fac:	cmp	r0, #0
   13fb0:	blt	13fd0 <print_debug_data@@Base+0x978>
   13fb4:	ldr	r1, [sp, #16]
   13fb8:	cmp	r0, r1
   13fbc:	bgt	13fd0 <print_debug_data@@Base+0x978>
   13fc0:	movw	r0, #38830	; 0x97ae
   13fc4:	movt	r0, #1
   13fc8:	bl	1435c <print_debug_data@@Base+0xd04>
   13fcc:	b	13fdc <print_debug_data@@Base+0x984>
   13fd0:	ldr	r0, [sp, #20]
   13fd4:	ldr	r1, [sp, #12]
   13fd8:	bl	137a0 <print_debug_data@@Base+0x148>
   13fdc:	ldr	r0, [sl]
   13fe0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13fe4:	sub	r0, r0, #1
   13fe8:	str	r0, [sl]
   13fec:	ldr	r0, [fp, #-120]	; 0xffffff88
   13ff0:	sub	r0, r0, #1
   13ff4:	cmp	r1, r0
   13ff8:	bge	14010 <print_debug_data@@Base+0x9b8>
   13ffc:	ldr	r0, [sp, #20]
   14000:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   14004:	cmp	r0, #0
   14008:	beq	14010 <print_debug_data@@Base+0x9b8>
   1400c:	bl	17c44 <handle_coda_error@@Base>
   14010:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14014:	add	r1, r0, #1
   14018:	ldr	r0, [fp, #-120]	; 0xffffff88
   1401c:	str	r1, [fp, #-48]	; 0xffffffd0
   14020:	cmp	r1, r0
   14024:	blt	13ef8 <print_debug_data@@Base+0x8a0>
   14028:	ldr	r0, [sp, #20]
   1402c:	b	14314 <print_debug_data@@Base+0xcbc>
   14030:	mov	r9, #1
   14034:	mov	r0, r5
   14038:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   1403c:	cmp	r0, #0
   14040:	beq	14048 <print_debug_data@@Base+0x9f0>
   14044:	bl	17c44 <handle_coda_error@@Base>
   14048:	sub	r0, r9, #1
   1404c:	movw	r7, #38827	; 0x97ab
   14050:	movw	r6, #39240	; 0x9948
   14054:	sub	r8, fp, #88	; 0x58
   14058:	add	r4, sp, #24
   1405c:	mov	sl, #0
   14060:	str	r0, [sp, #12]
   14064:	ldr	r0, [sp, #16]
   14068:	movt	r7, #1
   1406c:	movt	r6, #1
   14070:	add	r0, r0, #1
   14074:	str	r0, [sp, #8]
   14078:	movw	r0, #39252	; 0x9954
   1407c:	movt	r0, #1
   14080:	bl	1435c <print_debug_data@@Base+0xd04>
   14084:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14088:	cmp	r0, #1
   1408c:	blt	140c8 <print_debug_data@@Base+0xa70>
   14090:	mov	r5, #0
   14094:	ldr	r1, [r8, r5, lsl #2]
   14098:	mov	r0, r7
   1409c:	bl	14410 <print_debug_data@@Base+0xdb8>
   140a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140a4:	sub	r1, r0, #1
   140a8:	cmp	r5, r1
   140ac:	bge	140bc <print_debug_data@@Base+0xa64>
   140b0:	mov	r0, r6
   140b4:	bl	14410 <print_debug_data@@Base+0xdb8>
   140b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140bc:	add	r5, r5, #1
   140c0:	cmp	r5, r0
   140c4:	blt	14094 <print_debug_data@@Base+0xa3c>
   140c8:	movw	r0, #40442	; 0x9dfa
   140cc:	movt	r0, #1
   140d0:	bl	14410 <print_debug_data@@Base+0xdb8>
   140d4:	movw	r0, #49576	; 0xc1a8
   140d8:	ldr	r5, [sp, #20]
   140dc:	movt	r0, #2
   140e0:	ldr	r0, [r0]
   140e4:	cmp	r0, #0
   140e8:	beq	14158 <print_debug_data@@Base+0xb00>
   140ec:	mov	r0, r5
   140f0:	sub	r1, fp, #96	; 0x60
   140f4:	bl	12a48 <coda_cursor_get_file_bit_offset@plt>
   140f8:	cmp	r0, #0
   140fc:	beq	14104 <print_debug_data@@Base+0xaac>
   14100:	bl	17c44 <handle_coda_error@@Base>
   14104:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14108:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1410c:	mvn	r3, #0
   14110:	subs	r2, r3, r0
   14114:	sbcs	r2, r3, r1
   14118:	bge	14158 <print_debug_data@@Base+0xb00>
   1411c:	lsr	r0, r0, #3
   14120:	sub	r2, fp, #120	; 0x78
   14124:	orr	r0, r0, r1, lsl #29
   14128:	lsr	r1, r1, #3
   1412c:	bl	12aa8 <coda_str64@plt>
   14130:	movw	r0, #38822	; 0x97a6
   14134:	sub	r1, fp, #120	; 0x78
   14138:	movt	r0, #1
   1413c:	bl	14410 <print_debug_data@@Base+0xdb8>
   14140:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14144:	ands	r1, r0, #7
   14148:	beq	14158 <print_debug_data@@Base+0xb00>
   1414c:	movw	r0, #38826	; 0x97aa
   14150:	movt	r0, #1
   14154:	bl	14410 <print_debug_data@@Base+0xdb8>
   14158:	movw	r0, #41107	; 0xa093
   1415c:	movt	r0, #1
   14160:	bl	14410 <print_debug_data@@Base+0xdb8>
   14164:	movw	r0, #49600	; 0xc1c0
   14168:	movt	r0, #2
   1416c:	mov	r1, r0
   14170:	ldr	r0, [r0]
   14174:	add	r0, r0, #1
   14178:	str	r0, [r1]
   1417c:	movw	r0, #49580	; 0xc1ac
   14180:	movt	r0, #2
   14184:	ldr	r0, [r0]
   14188:	cmp	r0, #0
   1418c:	blt	141ac <print_debug_data@@Base+0xb54>
   14190:	ldr	r1, [sp, #16]
   14194:	cmp	r0, r1
   14198:	bgt	141ac <print_debug_data@@Base+0xb54>
   1419c:	movw	r0, #38830	; 0x97ae
   141a0:	movt	r0, #1
   141a4:	bl	1435c <print_debug_data@@Base+0xd04>
   141a8:	b	141b8 <print_debug_data@@Base+0xb60>
   141ac:	ldr	r1, [sp, #8]
   141b0:	mov	r0, r5
   141b4:	bl	137a0 <print_debug_data@@Base+0x148>
   141b8:	movw	r0, #49600	; 0xc1c0
   141bc:	mov	r3, #0
   141c0:	movt	r0, #2
   141c4:	mov	r1, r0
   141c8:	ldr	r0, [r0]
   141cc:	sub	r0, r0, #1
   141d0:	str	r0, [r1]
   141d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141d8:	cmp	r0, #1
   141dc:	blt	14214 <print_debug_data@@Base+0xbbc>
   141e0:	sub	r0, r0, #1
   141e4:	ldr	r1, [r8, r0, lsl #2]
   141e8:	ldr	r2, [r4, r0, lsl #2]
   141ec:	add	r1, r1, #1
   141f0:	cmp	r1, r2
   141f4:	str	r1, [r8, r0, lsl #2]
   141f8:	bne	14214 <print_debug_data@@Base+0xbbc>
   141fc:	str	r3, [r8, r0, lsl #2]
   14200:	sub	r1, r0, #1
   14204:	add	r0, r0, #1
   14208:	cmp	r0, #1
   1420c:	mov	r0, r1
   14210:	bgt	141e4 <print_debug_data@@Base+0xb8c>
   14214:	ldr	r0, [sp, #12]
   14218:	cmp	sl, r0
   1421c:	bge	14234 <print_debug_data@@Base+0xbdc>
   14220:	mov	r0, r5
   14224:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   14228:	cmp	r0, #0
   1422c:	beq	14234 <print_debug_data@@Base+0xbdc>
   14230:	bl	17c44 <handle_coda_error@@Base>
   14234:	add	sl, sl, #1
   14238:	cmp	sl, r9
   1423c:	bne	14078 <print_debug_data@@Base+0xa20>
   14240:	b	14310 <print_debug_data@@Base+0xcb8>
   14244:	sub	r1, fp, #88	; 0x58
   14248:	mov	r0, r5
   1424c:	bl	12898 <coda_cursor_read_double@plt>
   14250:	cmp	r0, #0
   14254:	beq	1425c <print_debug_data@@Base+0xc04>
   14258:	bl	17c44 <handle_coda_error@@Base>
   1425c:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14260:	bl	128a4 <coda_isNaN@plt>
   14264:	cmp	r0, #0
   14268:	bne	1427c <print_debug_data@@Base+0xc24>
   1426c:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14270:	bl	12748 <coda_isInf@plt>
   14274:	cmp	r0, #0
   14278:	beq	14320 <print_debug_data@@Base+0xcc8>
   1427c:	vldr	d16, [fp, #-88]	; 0xffffffa8
   14280:	movw	r0, #39010	; 0x9862
   14284:	movt	r0, #1
   14288:	b	142e8 <print_debug_data@@Base+0xc90>
   1428c:	add	r1, sp, #24
   14290:	sub	r2, fp, #88	; 0x58
   14294:	mov	r0, r5
   14298:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   1429c:	cmp	r0, #0
   142a0:	beq	142a8 <print_debug_data@@Base+0xc50>
   142a4:	bl	17c44 <handle_coda_error@@Base>
   142a8:	vldr	d16, [sp, #24]
   142ac:	vldr	d17, [fp, #-88]	; 0xffffffa8
   142b0:	movw	r0, #39045	; 0x9885
   142b4:	movt	r0, #1
   142b8:	vmov	r2, r3, d16
   142bc:	vstr	d17, [sp]
   142c0:	b	142ec <print_debug_data@@Base+0xc94>
   142c4:	add	r1, sp, #24
   142c8:	mov	r0, r5
   142cc:	bl	12898 <coda_cursor_read_double@plt>
   142d0:	cmp	r0, #0
   142d4:	beq	142dc <print_debug_data@@Base+0xc84>
   142d8:	bl	17c44 <handle_coda_error@@Base>
   142dc:	vldr	d16, [sp, #24]
   142e0:	movw	r0, #39011	; 0x9863
   142e4:	movt	r0, #1
   142e8:	vmov	r2, r3, d16
   142ec:	bl	14410 <print_debug_data@@Base+0xdb8>
   142f0:	b	14318 <print_debug_data@@Base+0xcc0>
   142f4:	ldr	r0, [sp, #16]
   142f8:	add	r1, r0, #1
   142fc:	mov	r0, r5
   14300:	bl	137a0 <print_debug_data@@Base+0x148>
   14304:	ldr	r0, [r4]
   14308:	sub	r0, r0, #1
   1430c:	str	r0, [r4]
   14310:	mov	r0, r5
   14314:	bl	12850 <coda_cursor_goto_parent@plt>
   14318:	sub	sp, fp, #28
   1431c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14320:	vldr	d0, [fp, #-88]	; 0xffffffa8
   14324:	movw	r0, #38729	; 0x9749
   14328:	add	r1, sp, #24
   1432c:	movt	r0, #1
   14330:	bl	126c4 <coda_time_double_to_string@plt>
   14334:	cmp	r0, #0
   14338:	beq	14348 <print_debug_data@@Base+0xcf0>
   1433c:	movw	r0, #39018	; 0x986a
   14340:	movt	r0, #1
   14344:	b	13cf4 <print_debug_data@@Base+0x69c>
   14348:	movw	r0, #40684	; 0x9eec
   1434c:	add	r1, sp, #24
   14350:	movt	r0, #1
   14354:	bl	14410 <print_debug_data@@Base+0xdb8>
   14358:	b	14318 <print_debug_data@@Base+0xcc0>
   1435c:	sub	sp, sp, #12
   14360:	push	{r4, r5, r6, r7, fp, lr}
   14364:	add	fp, sp, #16
   14368:	sub	sp, sp, #4
   1436c:	mov	r4, r0
   14370:	add	r0, fp, #8
   14374:	stm	r0, {r1, r2, r3}
   14378:	movw	r0, #49600	; 0xc1c0
   1437c:	movt	r0, #2
   14380:	ldr	r0, [r0]
   14384:	cmp	r0, #0
   14388:	blt	143f0 <print_debug_data@@Base+0xd98>
   1438c:	beq	143c4 <print_debug_data@@Base+0xd6c>
   14390:	movw	r7, #53392	; 0xd090
   14394:	movw	r5, #39086	; 0x98ae
   14398:	add	r6, r0, #1
   1439c:	movt	r7, #2
   143a0:	movt	r5, #1
   143a4:	ldr	r3, [r7]
   143a8:	mov	r0, r5
   143ac:	mov	r1, #2
   143b0:	mov	r2, #1
   143b4:	bl	127cc <fwrite@plt>
   143b8:	sub	r6, r6, #1
   143bc:	cmp	r6, #1
   143c0:	bgt	143a4 <print_debug_data@@Base+0xd4c>
   143c4:	movw	r0, #53392	; 0xd090
   143c8:	add	r2, fp, #8
   143cc:	mov	r1, r4
   143d0:	movt	r0, #2
   143d4:	str	r2, [sp]
   143d8:	ldr	r0, [r0]
   143dc:	bl	129ac <vfprintf@plt>
   143e0:	sub	sp, fp, #16
   143e4:	pop	{r4, r5, r6, r7, fp, lr}
   143e8:	add	sp, sp, #12
   143ec:	bx	lr
   143f0:	movw	r0, #39056	; 0x9890
   143f4:	movw	r1, #38835	; 0x97b3
   143f8:	movw	r3, #39068	; 0x989c
   143fc:	mov	r2, #44	; 0x2c
   14400:	movt	r0, #1
   14404:	movt	r1, #1
   14408:	movt	r3, #1
   1440c:	bl	12ab4 <__assert_fail@plt>
   14410:	sub	sp, sp, #12
   14414:	push	{fp, lr}
   14418:	mov	fp, sp
   1441c:	sub	sp, sp, #4
   14420:	mov	ip, r0
   14424:	add	r0, fp, #8
   14428:	stm	r0, {r1, r2, r3}
   1442c:	movw	r0, #53392	; 0xd090
   14430:	add	r2, fp, #8
   14434:	mov	r1, ip
   14438:	movt	r0, #2
   1443c:	str	r2, [sp]
   14440:	ldr	r0, [r0]
   14444:	bl	129ac <vfprintf@plt>
   14448:	mov	sp, fp
   1444c:	pop	{fp, lr}
   14450:	add	sp, sp, #12
   14454:	bx	lr
   14458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1445c:	add	fp, sp, #28
   14460:	sub	sp, sp, #4
   14464:	cmp	r1, #1
   14468:	blt	14560 <print_debug_data@@Base+0xf08>
   1446c:	movw	r8, #38655	; 0x96ff
   14470:	movw	r9, #38658	; 0x9702
   14474:	movw	sl, #38661	; 0x9705
   14478:	movw	r7, #38664	; 0x9708
   1447c:	movw	r6, #38667	; 0x970b
   14480:	mov	r4, r1
   14484:	mov	r5, r0
   14488:	movt	r8, #1
   1448c:	movt	r9, #1
   14490:	movt	sl, #1
   14494:	movt	r7, #1
   14498:	movt	r6, #1
   1449c:	b	144cc <print_debug_data@@Base+0xe74>
   144a0:	sub	r0, r1, #32
   144a4:	uxtb	r0, r0
   144a8:	cmp	r0, #94	; 0x5e
   144ac:	bhi	144bc <print_debug_data@@Base+0xe64>
   144b0:	movw	r0, #39089	; 0x98b1
   144b4:	movt	r0, #1
   144b8:	b	144c4 <print_debug_data@@Base+0xe6c>
   144bc:	movw	r0, #38673	; 0x9711
   144c0:	movt	r0, #1
   144c4:	bl	14410 <print_debug_data@@Base+0xdb8>
   144c8:	b	14554 <print_debug_data@@Base+0xefc>
   144cc:	ldrb	r1, [r5]
   144d0:	sub	r0, r1, #7
   144d4:	cmp	r0, #6
   144d8:	bhi	1450c <print_debug_data@@Base+0xeb4>
   144dc:	add	r1, pc, #0
   144e0:	ldr	pc, [r1, r0, lsl #2]
   144e4:	andeq	r4, r1, r0, lsl #10
   144e8:	andeq	r4, r1, r0, lsr #10
   144ec:	andeq	r4, r1, ip, lsr #10
   144f0:	andeq	r4, r1, r4, lsr r5
   144f4:	andeq	r4, r1, ip, lsr r5
   144f8:	andeq	r4, r1, r4, asr #10
   144fc:	andeq	r4, r1, ip, asr #10
   14500:	movw	r0, #38649	; 0x96f9
   14504:	movt	r0, #1
   14508:	b	14550 <print_debug_data@@Base+0xef8>
   1450c:	cmp	r1, #92	; 0x5c
   14510:	bne	144a0 <print_debug_data@@Base+0xe48>
   14514:	movw	r0, #38670	; 0x970e
   14518:	movt	r0, #1
   1451c:	b	14550 <print_debug_data@@Base+0xef8>
   14520:	movw	r0, #38652	; 0x96fc
   14524:	movt	r0, #1
   14528:	b	14550 <print_debug_data@@Base+0xef8>
   1452c:	mov	r0, r8
   14530:	b	14550 <print_debug_data@@Base+0xef8>
   14534:	mov	r0, r9
   14538:	b	14550 <print_debug_data@@Base+0xef8>
   1453c:	mov	r0, sl
   14540:	b	14550 <print_debug_data@@Base+0xef8>
   14544:	mov	r0, r7
   14548:	b	14550 <print_debug_data@@Base+0xef8>
   1454c:	mov	r0, r6
   14550:	bl	14410 <print_debug_data@@Base+0xdb8>
   14554:	subs	r4, r4, #1
   14558:	add	r5, r5, #1
   1455c:	bne	144cc <print_debug_data@@Base+0xe74>
   14560:	sub	sp, fp, #28
   14564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014568 <dim_info_init@@Base>:
   14568:	movw	r0, #53424	; 0xd0b0
   1456c:	mov	r1, #0
   14570:	movt	r0, #2
   14574:	str	r1, [r0, #68]	; 0x44
   14578:	str	r1, [r0]
   1457c:	mvn	r1, #0
   14580:	str	r1, [r0, #104]	; 0x68
   14584:	bx	lr

00014588 <dim_info_done@@Base>:
   14588:	bx	lr

0001458c <print_all_distinct_dims@@Base>:
   1458c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14590:	add	fp, sp, #28
   14594:	sub	sp, sp, #4
   14598:	movw	r9, #53424	; 0xd0b0
   1459c:	mov	sl, r0
   145a0:	movt	r9, #2
   145a4:	ldr	r0, [r9]
   145a8:	cmp	r0, sl
   145ac:	ble	14738 <print_all_distinct_dims@@Base+0x1ac>
   145b0:	add	r8, r9, sl, lsl #2
   145b4:	ldr	r0, [r8, #72]	; 0x48
   145b8:	cmp	r0, #0
   145bc:	subeq	sp, fp, #28
   145c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145c4:	mov	r7, r8
   145c8:	mov	r5, #4
   145cc:	ldr	r0, [r7, #4]!
   145d0:	add	r6, r5, r0, lsl #2
   145d4:	mov	r0, r6
   145d8:	bl	12820 <malloc@plt>
   145dc:	mov	r4, r0
   145e0:	cmp	r0, #0
   145e4:	bne	14618 <print_all_distinct_dims@@Base+0x8c>
   145e8:	movw	r1, #38521	; 0x9679
   145ec:	movw	r3, #39119	; 0x98cf
   145f0:	mov	r0, #61	; 0x3d
   145f4:	mov	r2, r6
   145f8:	str	r0, [sp]
   145fc:	movt	r1, #1
   14600:	movt	r3, #1
   14604:	mvn	r0, #0
   14608:	bl	126a0 <coda_set_error@plt>
   1460c:	bl	17c44 <handle_coda_error@@Base>
   14610:	ldr	r0, [r7]
   14614:	add	r6, r5, r0, lsl #2
   14618:	mov	r0, r4
   1461c:	mov	r1, #0
   14620:	mov	r2, r6
   14624:	mov	r5, #0
   14628:	bl	12904 <memset@plt>
   1462c:	ldr	r0, [r8, #140]	; 0x8c
   14630:	add	r0, r9, r0, lsl #3
   14634:	ldrd	r0, [r0, #232]	; 0xe8
   14638:	subs	r2, r0, #1
   1463c:	sbcs	r2, r1, #0
   14640:	blt	1466c <print_all_distinct_dims@@Base+0xe0>
   14644:	ldr	r2, [r8, #108]	; 0x6c
   14648:	ldr	r3, [r2, r5, lsl #2]
   1464c:	add	r5, r5, #1
   14650:	cmp	r3, #0
   14654:	ldrge	r6, [r4, r3, lsl #2]
   14658:	addge	r6, r6, #1
   1465c:	strge	r6, [r4, r3, lsl #2]
   14660:	subs	r3, r5, r0
   14664:	rscs	r3, r1, #0
   14668:	blt	14648 <print_all_distinct_dims@@Base+0xbc>
   1466c:	movw	r0, #39226	; 0x993a
   14670:	add	r1, sl, #1
   14674:	movt	r0, #1
   14678:	bl	1267c <printf@plt>
   1467c:	ldr	r5, [r8, #36]!	; 0x24
   14680:	ldr	r1, [r7]
   14684:	cmp	r5, r1
   14688:	bge	146bc <print_all_distinct_dims@@Base+0x130>
   1468c:	movw	r6, #39238	; 0x9946
   14690:	movt	r6, #1
   14694:	ldr	r0, [r4, r5, lsl #2]
   14698:	cmp	r0, #1
   1469c:	blt	146b0 <print_all_distinct_dims@@Base+0x124>
   146a0:	mov	r0, r6
   146a4:	mov	r1, r5
   146a8:	bl	1267c <printf@plt>
   146ac:	ldr	r1, [r7]
   146b0:	add	r5, r5, #1
   146b4:	cmp	r5, r1
   146b8:	blt	14694 <print_all_distinct_dims@@Base+0x108>
   146bc:	movw	r0, #39242	; 0x994a
   146c0:	movt	r0, #1
   146c4:	bl	1267c <printf@plt>
   146c8:	movw	r0, #39246	; 0x994e
   146cc:	movt	r0, #1
   146d0:	bl	1267c <printf@plt>
   146d4:	ldr	r0, [r7]
   146d8:	ldr	r6, [r8]
   146dc:	cmp	r6, r0
   146e0:	bge	14710 <print_all_distinct_dims@@Base+0x184>
   146e4:	movw	r5, #39238	; 0x9946
   146e8:	movt	r5, #1
   146ec:	ldr	r1, [r4, r6, lsl #2]
   146f0:	cmp	r1, #1
   146f4:	blt	14704 <print_all_distinct_dims@@Base+0x178>
   146f8:	mov	r0, r5
   146fc:	bl	1267c <printf@plt>
   14700:	ldr	r0, [r7]
   14704:	add	r6, r6, #1
   14708:	cmp	r6, r0
   1470c:	blt	146ec <print_all_distinct_dims@@Base+0x160>
   14710:	ldr	r1, [r4, r0, lsl #2]
   14714:	movw	r0, #39242	; 0x994a
   14718:	movt	r0, #1
   1471c:	bl	1267c <printf@plt>
   14720:	mov	r0, #10
   14724:	bl	12910 <putchar@plt>
   14728:	mov	r0, r4
   1472c:	sub	sp, fp, #28
   14730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14734:	b	126e8 <free@plt>
   14738:	movw	r0, #39092	; 0x98b4
   1473c:	movw	r1, #39119	; 0x98cf
   14740:	movw	r3, #39192	; 0x9918
   14744:	mov	r2, #50	; 0x32
   14748:	movt	r0, #1
   1474c:	movt	r1, #1
   14750:	movt	r3, #1
   14754:	bl	12ab4 <__assert_fail@plt>

00014758 <dim_enter_array@@Base>:
   14758:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1475c:	add	fp, sp, #28
   14760:	sub	sp, sp, #76	; 0x4c
   14764:	movw	r4, #49640	; 0xc1e8
   14768:	sub	r1, fp, #32
   1476c:	movt	r4, #2
   14770:	ldr	r0, [r4, #136]	; 0x88
   14774:	ldr	r5, [r4, #3360]	; 0xd20
   14778:	add	r0, r4, r0, lsl #2
   1477c:	ldr	r0, [r0, #8]
   14780:	bl	12ac0 <coda_type_get_class@plt>
   14784:	cmp	r0, #0
   14788:	beq	14790 <dim_enter_array@@Base+0x38>
   1478c:	bl	17c44 <handle_coda_error@@Base>
   14790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14794:	sub	r0, r0, #1
   14798:	cmp	r0, #5
   1479c:	bhi	14e6c <dim_enter_array@@Base+0x714>
   147a0:	add	r1, r5, r5, lsl #2
   147a4:	add	r5, r4, r1, lsl #4
   147a8:	add	r1, pc, #0
   147ac:	ldr	pc, [r1, r0, lsl #2]
   147b0:	andeq	r4, r1, r8, asr #15
   147b4:	andeq	r4, r1, ip, ror #28
   147b8:	andeq	r4, r1, ip, ror #28
   147bc:	andeq	r4, r1, r4, asr #16
   147c0:	andeq	r4, r1, r4, ror r8
   147c4:	andeq	r4, r1, r0, lsl r8
   147c8:	ldr	r0, [r4, #136]	; 0x88
   147cc:	add	r1, sp, #36	; 0x24
   147d0:	add	r2, sp, #40	; 0x28
   147d4:	add	r0, r4, r0, lsl #2
   147d8:	ldr	r0, [r0, #8]
   147dc:	bl	129f4 <coda_type_get_array_dim@plt>
   147e0:	cmp	r0, #0
   147e4:	beq	147ec <dim_enter_array@@Base+0x94>
   147e8:	bl	17c44 <handle_coda_error@@Base>
   147ec:	ldr	sl, [sp, #36]	; 0x24
   147f0:	cmp	sl, #1
   147f4:	str	sl, [r5, #804]	; 0x324
   147f8:	blt	148c8 <dim_enter_array@@Base+0x170>
   147fc:	add	r0, r5, #808	; 0x328
   14800:	lsl	r2, sl, #2
   14804:	add	r1, sp, #40	; 0x28
   14808:	bl	1273c <memcpy@plt>
   1480c:	b	148c8 <dim_enter_array@@Base+0x170>
   14810:	ldr	r0, [r4, #136]	; 0x88
   14814:	add	r1, sp, #40	; 0x28
   14818:	add	r0, r4, r0, lsl #2
   1481c:	ldr	r0, [r0, #8]
   14820:	bl	12928 <coda_type_get_special_type@plt>
   14824:	cmp	r0, #0
   14828:	beq	14830 <dim_enter_array@@Base+0xd8>
   1482c:	bl	17c44 <handle_coda_error@@Base>
   14830:	ldr	r0, [sp, #40]	; 0x28
   14834:	cmp	r0, #3
   14838:	bne	14eac <dim_enter_array@@Base+0x754>
   1483c:	mov	r0, #2
   14840:	b	14868 <dim_enter_array@@Base+0x110>
   14844:	ldr	r0, [r4, #136]	; 0x88
   14848:	add	r1, sp, #40	; 0x28
   1484c:	add	r0, r4, r0, lsl #2
   14850:	ldr	r0, [r0, #8]
   14854:	bl	12964 <coda_type_get_string_length@plt>
   14858:	cmp	r0, #0
   1485c:	beq	14864 <dim_enter_array@@Base+0x10c>
   14860:	bl	17c44 <handle_coda_error@@Base>
   14864:	ldr	r0, [sp, #40]	; 0x28
   14868:	mov	sl, #1
   1486c:	str	sl, [r5, #804]	; 0x324
   14870:	b	148c4 <dim_enter_array@@Base+0x16c>
   14874:	ldr	r0, [r4, #136]	; 0x88
   14878:	add	r1, sp, #40	; 0x28
   1487c:	add	r0, r4, r0, lsl #2
   14880:	ldr	r0, [r0, #8]
   14884:	bl	12754 <coda_type_get_bit_size@plt>
   14888:	cmp	r0, #0
   1488c:	beq	14894 <dim_enter_array@@Base+0x13c>
   14890:	bl	17c44 <handle_coda_error@@Base>
   14894:	ldr	r0, [sp, #44]	; 0x2c
   14898:	mov	sl, #1
   1489c:	str	sl, [r5, #804]	; 0x324
   148a0:	cmp	r0, #0
   148a4:	blt	148c0 <dim_enter_array@@Base+0x168>
   148a8:	ldr	r1, [sp, #40]	; 0x28
   148ac:	lsr	r2, r1, #3
   148b0:	tst	r1, #7
   148b4:	orr	r0, r2, r0, lsl #29
   148b8:	addne	r0, r0, #1
   148bc:	b	148c4 <dim_enter_array@@Base+0x16c>
   148c0:	mvn	r0, #0
   148c4:	str	r0, [r5, #808]	; 0x328
   148c8:	movw	r1, #49636	; 0xc1e4
   148cc:	add	r0, r5, #800	; 0x320
   148d0:	movt	r1, #2
   148d4:	ldr	r1, [r1]
   148d8:	cmp	r1, #0
   148dc:	beq	14950 <dim_enter_array@@Base+0x1f8>
   148e0:	movw	r8, #53424	; 0xd0b0
   148e4:	str	r5, [sp, #16]
   148e8:	movt	r8, #2
   148ec:	ldr	r4, [r8]
   148f0:	add	r3, sl, r4
   148f4:	str	r4, [r0]
   148f8:	cmp	r3, #9
   148fc:	bge	14e8c <dim_enter_array@@Base+0x734>
   14900:	cmp	r4, #0
   14904:	str	r3, [r8]
   14908:	str	r4, [sp, #20]
   1490c:	ble	14968 <dim_enter_array@@Base+0x210>
   14910:	add	r0, r8, r4, lsl #3
   14914:	ldr	r1, [r0, #232]	; 0xe8
   14918:	ldr	r2, [r0, #236]	; 0xec
   1491c:	str	r2, [sp, #28]
   14920:	ldr	r2, [r0, #296]	; 0x128
   14924:	str	r1, [sp, #32]
   14928:	ldr	r1, [r0, #300]	; 0x12c
   1492c:	rsbs	r0, r2, #0
   14930:	str	r2, [sp, #8]
   14934:	str	r1, [sp, #12]
   14938:	mov	r0, r1
   1493c:	rscs	r0, r1, #0
   14940:	bge	14b1c <dim_enter_array@@Base+0x3c4>
   14944:	cmp	sl, #1
   14948:	bge	14990 <dim_enter_array@@Base+0x238>
   1494c:	b	14b68 <dim_enter_array@@Base+0x410>
   14950:	mvn	r1, #0
   14954:	str	r1, [r0]
   14958:	mov	r0, #0
   1495c:	str	r0, [r5, #840]	; 0x348
   14960:	str	r0, [r5, #844]	; 0x34c
   14964:	b	14e64 <dim_enter_array@@Base+0x70c>
   14968:	mov	r0, #0
   1496c:	cmp	sl, #0
   14970:	str	r0, [sp, #12]
   14974:	mov	r0, #1
   14978:	str	r0, [sp, #8]
   1497c:	mov	r0, #1
   14980:	str	r0, [sp, #32]
   14984:	mov	r0, #0
   14988:	str	r0, [sp, #28]
   1498c:	ble	14b4c <dim_enter_array@@Base+0x3f4>
   14990:	ldr	r0, [sp, #16]
   14994:	add	r5, r8, r4, lsl #2
   14998:	mov	r2, #0
   1499c:	add	r1, r0, #804	; 0x324
   149a0:	add	r9, r0, #808	; 0x328
   149a4:	mov	r0, #0
   149a8:	str	r1, [sp, #24]
   149ac:	mov	r1, #0
   149b0:	ldr	r3, [r9, r2, lsl #2]
   149b4:	add	r7, r5, r2, lsl #2
   149b8:	add	r2, r2, #1
   149bc:	str	r0, [r7, #72]	; 0x48
   149c0:	cmn	r3, #1
   149c4:	str	r3, [r7, #4]
   149c8:	movweq	r1, #1
   149cc:	cmp	sl, r2
   149d0:	bne	149b0 <dim_enter_array@@Base+0x258>
   149d4:	cmp	r1, #0
   149d8:	beq	14b68 <dim_enter_array@@Base+0x410>
   149dc:	ldr	r0, [sp, #32]
   149e0:	mov	sl, #0
   149e4:	mov	r7, #0
   149e8:	lsl	r4, r0, #2
   149ec:	ldr	r0, [r9, r7, lsl #2]
   149f0:	add	r6, r5, r7, lsl #2
   149f4:	cmn	r0, #1
   149f8:	beq	14a08 <dim_enter_array@@Base+0x2b0>
   149fc:	str	sl, [r6, #140]	; 0x8c
   14a00:	str	sl, [r6, #108]	; 0x6c
   14a04:	b	14a70 <dim_enter_array@@Base+0x318>
   14a08:	ldr	r0, [sp, #20]
   14a0c:	str	r0, [r6, #140]	; 0x8c
   14a10:	mov	r0, r4
   14a14:	bl	12820 <malloc@plt>
   14a18:	cmp	r0, #0
   14a1c:	str	r0, [r6, #108]	; 0x6c
   14a20:	bne	14a4c <dim_enter_array@@Base+0x2f4>
   14a24:	movw	r1, #38521	; 0x9679
   14a28:	movw	r3, #39119	; 0x98cf
   14a2c:	mov	r0, #456	; 0x1c8
   14a30:	mov	r2, r4
   14a34:	str	r0, [sp]
   14a38:	mvn	r0, #0
   14a3c:	movt	r1, #1
   14a40:	movt	r3, #1
   14a44:	bl	126a0 <coda_set_error@plt>
   14a48:	bl	17c44 <handle_coda_error@@Base>
   14a4c:	ldr	r0, [sp, #32]
   14a50:	subs	r0, r0, #1
   14a54:	ldr	r0, [sp, #28]
   14a58:	sbcs	r0, r0, #0
   14a5c:	blt	14a70 <dim_enter_array@@Base+0x318>
   14a60:	ldr	r0, [r6, #108]	; 0x6c
   14a64:	mov	r1, #255	; 0xff
   14a68:	mov	r2, r4
   14a6c:	bl	12904 <memset@plt>
   14a70:	ldr	r0, [sp, #24]
   14a74:	add	r7, r7, #1
   14a78:	ldr	r0, [r0]
   14a7c:	cmp	r7, r0
   14a80:	blt	149ec <dim_enter_array@@Base+0x294>
   14a84:	ldr	r0, [sp, #16]
   14a88:	mov	r1, #0
   14a8c:	mov	r2, #0
   14a90:	str	r1, [r0, #844]	; 0x34c
   14a94:	mov	r0, #0
   14a98:	mov	r1, #0
   14a9c:	bl	14ecc <dim_enter_array@@Base+0x774>
   14aa0:	ldr	r0, [sp, #24]
   14aa4:	ldr	sl, [r0]
   14aa8:	cmp	sl, #1
   14aac:	blt	14b64 <dim_enter_array@@Base+0x40c>
   14ab0:	ldr	r4, [sp, #20]
   14ab4:	mov	r7, #0
   14ab8:	mov	r6, #0
   14abc:	ldr	r0, [r9, r7, lsl #2]
   14ac0:	cmn	r0, #1
   14ac4:	bne	14b0c <dim_enter_array@@Base+0x3b4>
   14ac8:	add	r4, r5, r7, lsl #2
   14acc:	ldr	r0, [r4, #4]
   14ad0:	ldr	r1, [r4, #36]	; 0x24
   14ad4:	cmp	r0, r1
   14ad8:	bne	14b00 <dim_enter_array@@Base+0x3a8>
   14adc:	mov	sl, #0
   14ae0:	str	sl, [r4, #72]	; 0x48
   14ae4:	ldr	r0, [r4, #108]	; 0x6c
   14ae8:	bl	126e8 <free@plt>
   14aec:	ldr	r0, [sp, #24]
   14af0:	str	sl, [r4, #140]	; 0x8c
   14af4:	str	sl, [r4, #108]	; 0x6c
   14af8:	ldr	sl, [r0]
   14afc:	b	14b08 <dim_enter_array@@Base+0x3b0>
   14b00:	mov	r6, #1
   14b04:	str	r6, [r4, #72]	; 0x48
   14b08:	ldr	r4, [sp, #20]
   14b0c:	add	r7, r7, #1
   14b10:	cmp	r7, sl
   14b14:	blt	14abc <dim_enter_array@@Base+0x364>
   14b18:	b	14b6c <dim_enter_array@@Base+0x414>
   14b1c:	cmp	sl, #1
   14b20:	blt	14b68 <dim_enter_array@@Base+0x410>
   14b24:	add	r0, r8, r4, lsl #2
   14b28:	mov	r6, #0
   14b2c:	mov	r1, #0
   14b30:	add	r2, r0, r1, lsl #2
   14b34:	add	r1, r1, #1
   14b38:	cmp	sl, r1
   14b3c:	str	r6, [r2, #72]	; 0x48
   14b40:	str	r6, [r2, #4]
   14b44:	bne	14b30 <dim_enter_array@@Base+0x3d8>
   14b48:	b	14b6c <dim_enter_array@@Base+0x414>
   14b4c:	mov	r0, #1
   14b50:	mov	r6, #0
   14b54:	str	r0, [sp, #32]
   14b58:	mov	r0, #0
   14b5c:	str	r0, [sp, #28]
   14b60:	b	14b70 <dim_enter_array@@Base+0x418>
   14b64:	ldr	r4, [sp, #20]
   14b68:	mov	r6, #0
   14b6c:	ldr	r3, [r8]
   14b70:	mvn	r0, #0
   14b74:	cmp	r3, #1
   14b78:	str	r0, [r8, #104]	; 0x68
   14b7c:	mov	r0, #0
   14b80:	str	r0, [r8, #68]	; 0x44
   14b84:	blt	14bac <dim_enter_array@@Base+0x454>
   14b88:	mov	r1, #1
   14b8c:	add	r2, r8, r0, lsl #2
   14b90:	ldr	r2, [r2, #72]	; 0x48
   14b94:	cmp	r2, #0
   14b98:	strne	r0, [r8, #104]	; 0x68
   14b9c:	add	r0, r0, #1
   14ba0:	strne	r1, [r8, #68]	; 0x44
   14ba4:	cmp	r0, r3
   14ba8:	blt	14b8c <dim_enter_array@@Base+0x434>
   14bac:	ldr	r1, [sp, #16]
   14bb0:	mov	r0, #1
   14bb4:	cmp	sl, #1
   14bb8:	str	r3, [sp, #24]
   14bbc:	str	r0, [r1, #840]!	; 0x348
   14bc0:	str	r1, [sp, #16]
   14bc4:	blt	14c50 <dim_enter_array@@Base+0x4f8>
   14bc8:	add	r2, r8, r4, lsl #3
   14bcc:	add	r1, r8, r4, lsl #2
   14bd0:	mov	r3, #0
   14bd4:	str	r6, [sp, #4]
   14bd8:	add	ip, r2, #240	; 0xf0
   14bdc:	add	lr, r1, #4
   14be0:	mov	r2, ip
   14be4:	ldr	r4, [lr, r3, lsl #2]
   14be8:	cmp	r3, #0
   14bec:	mul	r0, r0, r4
   14bf0:	beq	14c10 <dim_enter_array@@Base+0x4b8>
   14bf4:	ldrd	r6, [r2, #-8]
   14bf8:	asr	r9, r4, #31
   14bfc:	umull	r1, r5, r6, r4
   14c00:	mla	r5, r6, r9, r5
   14c04:	mla	r5, r7, r4, r5
   14c08:	stm	r2, {r1, r5}
   14c0c:	b	14c30 <dim_enter_array@@Base+0x4d8>
   14c10:	ldr	r4, [lr]
   14c14:	ldr	r5, [sp, #32]
   14c18:	umull	r6, r7, r5, r4
   14c1c:	asr	r1, r4, #31
   14c20:	mla	r1, r5, r1, r7
   14c24:	ldr	r5, [sp, #28]
   14c28:	mla	r7, r5, r4, r1
   14c2c:	strd	r6, [ip]
   14c30:	add	r3, r3, #1
   14c34:	add	r2, r2, #8
   14c38:	cmp	r3, sl
   14c3c:	blt	14be4 <dim_enter_array@@Base+0x48c>
   14c40:	ldr	r1, [sp, #16]
   14c44:	ldr	r4, [sp, #20]
   14c48:	ldr	r6, [sp, #4]
   14c4c:	str	r0, [r1]
   14c50:	cmp	r6, #0
   14c54:	beq	14d20 <dim_enter_array@@Base+0x5c8>
   14c58:	cmp	sl, #1
   14c5c:	blt	14c74 <dim_enter_array@@Base+0x51c>
   14c60:	add	r0, r8, r4, lsl #3
   14c64:	lsl	r2, sl, #3
   14c68:	mov	r1, #0
   14c6c:	add	r0, r0, #304	; 0x130
   14c70:	bl	12904 <memset@plt>
   14c74:	ldr	r0, [sp, #32]
   14c78:	subs	r0, r0, #1
   14c7c:	ldr	r0, [sp, #28]
   14c80:	sbcs	r0, r0, #0
   14c84:	blt	14d94 <dim_enter_array@@Base+0x63c>
   14c88:	ldr	r1, [sp, #20]
   14c8c:	movw	r0, #65232	; 0xfed0
   14c90:	mov	r2, #0
   14c94:	movt	r0, #65535	; 0xffff
   14c98:	sub	ip, r0, r1, lsl #3
   14c9c:	lsl	lr, r1, #2
   14ca0:	cmp	sl, #1
   14ca4:	blt	14d04 <dim_enter_array@@Base+0x5ac>
   14ca8:	mov	r3, #1
   14cac:	mov	r0, ip
   14cb0:	mov	r1, lr
   14cb4:	mov	r4, sl
   14cb8:	add	r6, r8, r1
   14cbc:	add	r1, r1, #4
   14cc0:	ldr	r5, [r6, #72]	; 0x48
   14cc4:	cmp	r5, #0
   14cc8:	mov	r5, r8
   14ccc:	addeq	r6, r6, #4
   14cd0:	ldr	r7, [r5, -r0]!
   14cd4:	sub	r0, r0, #8
   14cd8:	ldrne	r6, [r6, #108]	; 0x6c
   14cdc:	addne	r6, r6, r2, lsl #2
   14ce0:	ldr	r6, [r6]
   14ce4:	mul	r3, r6, r3
   14ce8:	adds	r6, r7, r3
   14cec:	str	r6, [r5]
   14cf0:	ldr	r6, [r5, #4]
   14cf4:	adc	r6, r6, r3, asr #31
   14cf8:	subs	r4, r4, #1
   14cfc:	str	r6, [r5, #4]
   14d00:	bne	14cb8 <dim_enter_array@@Base+0x560>
   14d04:	ldr	r0, [sp, #32]
   14d08:	add	r2, r2, #1
   14d0c:	subs	r0, r2, r0
   14d10:	ldr	r0, [sp, #28]
   14d14:	rscs	r0, r0, #0
   14d18:	blt	14ca0 <dim_enter_array@@Base+0x548>
   14d1c:	b	14d94 <dim_enter_array@@Base+0x63c>
   14d20:	add	r0, r8, r4, lsl #2
   14d24:	ldr	r5, [sp, #8]
   14d28:	add	r2, r8, r4, lsl #3
   14d2c:	cmp	sl, #2
   14d30:	ldr	r1, [r0, #4]
   14d34:	umull	r3, r7, r5, r1
   14d38:	asr	r6, r1, #31
   14d3c:	mla	r7, r5, r6, r7
   14d40:	ldr	r6, [sp, #12]
   14d44:	str	r3, [r2, #304]	; 0x130
   14d48:	mla	r1, r6, r1, r7
   14d4c:	str	r1, [r2, #308]	; 0x134
   14d50:	blt	14d94 <dim_enter_array@@Base+0x63c>
   14d54:	ldr	r7, [r2, #304]	; 0x130
   14d58:	ldr	r3, [r2, #308]	; 0x134
   14d5c:	add	r1, r2, #312	; 0x138
   14d60:	add	r0, r0, #8
   14d64:	sub	r2, sl, #1
   14d68:	ldr	r6, [r0], #4
   14d6c:	subs	r2, r2, #1
   14d70:	umull	r4, ip, r7, r6
   14d74:	asr	r5, r6, #31
   14d78:	mla	r7, r7, r5, ip
   14d7c:	str	r4, [r1]
   14d80:	mla	r3, r3, r6, r7
   14d84:	mov	r7, r4
   14d88:	str	r3, [r1, #4]
   14d8c:	add	r1, r1, #8
   14d90:	bne	14d68 <dim_enter_array@@Base+0x610>
   14d94:	ldr	r0, [sp, #20]
   14d98:	add	r0, r0, sl
   14d9c:	add	r1, r8, r0, lsl #3
   14da0:	ldr	r0, [r1, #296]	; 0x128
   14da4:	ldr	r2, [r1, #300]	; 0x12c
   14da8:	subs	r0, r0, #1
   14dac:	sbcs	r0, r2, #0
   14db0:	blt	14e64 <dim_enter_array@@Base+0x70c>
   14db4:	ldr	r0, [sp, #24]
   14db8:	cmp	sl, #2
   14dbc:	sub	r0, r0, #1
   14dc0:	add	r2, r8, r0, lsl #3
   14dc4:	add	r0, r8, r0, lsl #2
   14dc8:	ldr	r0, [r0, #4]
   14dcc:	asr	r3, r0, #31
   14dd0:	str	r0, [r2, #176]	; 0xb0
   14dd4:	str	r3, [r2, #180]	; 0xb4
   14dd8:	blt	14e20 <dim_enter_array@@Base+0x6c8>
   14ddc:	ldr	r0, [sp, #20]
   14de0:	add	r1, r1, #160	; 0xa0
   14de4:	add	r0, r8, r0, lsl #2
   14de8:	sub	r0, r0, #4
   14dec:	ldr	r2, [r0, sl, lsl #2]
   14df0:	ldrd	r4, [r1, #8]
   14df4:	umull	r6, r3, r4, r2
   14df8:	asr	r7, r2, #31
   14dfc:	mla	r3, r4, r7, r3
   14e00:	mla	r7, r5, r2, r3
   14e04:	sub	r3, sl, #2
   14e08:	sub	r2, sl, #1
   14e0c:	strd	r6, [r1]
   14e10:	sub	r1, r1, #8
   14e14:	cmp	r3, #0
   14e18:	mov	sl, r2
   14e1c:	bgt	14dec <dim_enter_array@@Base+0x694>
   14e20:	ldr	r2, [sp, #20]
   14e24:	cmp	r2, #1
   14e28:	blt	14e64 <dim_enter_array@@Base+0x70c>
   14e2c:	add	r1, r8, r2, lsl #3
   14e30:	add	r2, r2, #1
   14e34:	add	r0, r1, #168	; 0xa8
   14e38:	add	r1, r1, #176	; 0xb0
   14e3c:	ldrd	r4, [r1]
   14e40:	ldrd	r6, [r0]
   14e44:	sub	r2, r2, #1
   14e48:	cmp	r2, #1
   14e4c:	umull	r8, r3, r6, r4
   14e50:	mla	r3, r6, r5, r3
   14e54:	mla	r9, r7, r4, r3
   14e58:	strd	r8, [r0]
   14e5c:	sub	r0, r0, #8
   14e60:	bgt	14e3c <dim_enter_array@@Base+0x6e4>
   14e64:	sub	sp, fp, #28
   14e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e6c:	movw	r0, #39066	; 0x989a
   14e70:	movw	r1, #39119	; 0x98cf
   14e74:	movw	r3, #39254	; 0x9956
   14e78:	movw	r2, #386	; 0x182
   14e7c:	movt	r0, #1
   14e80:	movt	r1, #1
   14e84:	movt	r3, #1
   14e88:	bl	12ab4 <__assert_fail@plt>
   14e8c:	movw	r0, #39277	; 0x996d
   14e90:	movw	r1, #39119	; 0x98cf
   14e94:	movw	r3, #39254	; 0x9956
   14e98:	movw	r2, #402	; 0x192
   14e9c:	movt	r0, #1
   14ea0:	movt	r1, #1
   14ea4:	movt	r3, #1
   14ea8:	bl	12ab4 <__assert_fail@plt>
   14eac:	movw	r0, #39066	; 0x989a
   14eb0:	movw	r1, #39119	; 0x98cf
   14eb4:	movw	r3, #39254	; 0x9956
   14eb8:	movw	r2, #349	; 0x15d
   14ebc:	movt	r0, #1
   14ec0:	movt	r1, #1
   14ec4:	movt	r3, #1
   14ec8:	bl	12ab4 <__assert_fail@plt>
   14ecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ed0:	add	fp, sp, #28
   14ed4:	sub	sp, sp, #44	; 0x2c
   14ed8:	movw	r7, #49640	; 0xc1e8
   14edc:	mov	r5, r1
   14ee0:	mov	sl, r0
   14ee4:	sub	r1, fp, #32
   14ee8:	str	r2, [sp]
   14eec:	movt	r7, #2
   14ef0:	add	r6, r7, #144	; 0x90
   14ef4:	mov	r0, r6
   14ef8:	bl	12778 <coda_cursor_get_type_class@plt>
   14efc:	cmp	r0, #0
   14f00:	beq	14f08 <dim_enter_array@@Base+0x7b0>
   14f04:	bl	17c44 <handle_coda_error@@Base>
   14f08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f0c:	sub	r1, r0, #4
   14f10:	cmp	r1, #2
   14f14:	bcc	14ff4 <dim_enter_array@@Base+0x89c>
   14f18:	cmp	r0, #0
   14f1c:	beq	15034 <dim_enter_array@@Base+0x8dc>
   14f20:	cmp	r0, #1
   14f24:	bne	152a0 <dim_enter_array@@Base+0xb48>
   14f28:	add	r0, r5, r5, lsl #2
   14f2c:	add	r9, r7, r0, lsl #4
   14f30:	ldr	r0, [r7, #3360]	; 0xd20
   14f34:	ldr	r4, [r9, #800]	; 0x320
   14f38:	cmp	r0, r5
   14f3c:	bne	1511c <dim_enter_array@@Base+0x9c4>
   14f40:	add	r8, sp, #8
   14f44:	add	r1, sp, #4
   14f48:	mov	r0, r6
   14f4c:	mov	r2, r8
   14f50:	bl	1297c <coda_cursor_get_array_dim@plt>
   14f54:	cmp	r0, #0
   14f58:	beq	14f60 <dim_enter_array@@Base+0x808>
   14f5c:	bl	17c44 <handle_coda_error@@Base>
   14f60:	mov	r0, r9
   14f64:	ldr	r1, [sp, #4]
   14f68:	ldr	r2, [r0, #804]!	; 0x324
   14f6c:	cmp	r1, r2
   14f70:	bne	152e0 <dim_enter_array@@Base+0xb88>
   14f74:	cmp	r1, #1
   14f78:	blt	15298 <dim_enter_array@@Base+0xb40>
   14f7c:	movw	r1, #53424	; 0xd0b0
   14f80:	add	r2, r9, #808	; 0x328
   14f84:	add	r3, r9, #844	; 0x34c
   14f88:	mov	r7, #0
   14f8c:	movt	r1, #2
   14f90:	add	ip, r1, r4, lsl #2
   14f94:	ldr	r6, [r2, r7, lsl #2]
   14f98:	cmn	r6, #1
   14f9c:	bne	14fe0 <dim_enter_array@@Base+0x888>
   14fa0:	add	r4, ip, r7, lsl #2
   14fa4:	ldr	r6, [r8, r7, lsl #2]
   14fa8:	ldr	r1, [r3]
   14fac:	ldr	r5, [r4, #108]	; 0x6c
   14fb0:	str	r6, [r5, r1, lsl #2]
   14fb4:	ldr	r5, [r4, #4]
   14fb8:	cmn	r5, #1
   14fbc:	beq	14fd8 <dim_enter_array@@Base+0x880>
   14fc0:	cmp	r5, r6
   14fc4:	strlt	r6, [r4, #4]
   14fc8:	ldr	r1, [r4, #36]	; 0x24
   14fcc:	cmp	r1, r6
   14fd0:	strgt	r6, [r4, #36]	; 0x24
   14fd4:	b	14fe0 <dim_enter_array@@Base+0x888>
   14fd8:	str	r6, [r4, #4]
   14fdc:	str	r6, [r4, #36]	; 0x24
   14fe0:	ldr	r1, [r0]
   14fe4:	add	r7, r7, #1
   14fe8:	cmp	r7, r1
   14fec:	blt	14f94 <dim_enter_array@@Base+0x83c>
   14ff0:	b	15298 <dim_enter_array@@Base+0xb40>
   14ff4:	ldr	r1, [r7, #3360]	; 0xd20
   14ff8:	cmp	r1, r5
   14ffc:	bne	152c0 <dim_enter_array@@Base+0xb68>
   15000:	cmp	r0, #4
   15004:	bne	15098 <dim_enter_array@@Base+0x940>
   15008:	add	r1, sp, #4
   1500c:	mov	r0, r6
   15010:	bl	12880 <coda_cursor_get_string_length@plt>
   15014:	cmp	r0, #0
   15018:	beq	15020 <dim_enter_array@@Base+0x8c8>
   1501c:	bl	17c44 <handle_coda_error@@Base>
   15020:	ldr	r0, [sp, #4]
   15024:	str	r0, [sp, #8]
   15028:	asr	r0, r0, #31
   1502c:	str	r0, [sp, #12]
   15030:	b	150b0 <dim_enter_array@@Base+0x958>
   15034:	ldr	r0, [sp]
   15038:	add	r2, sp, #8
   1503c:	add	r4, r7, r0, lsl #2
   15040:	mov	r0, r6
   15044:	ldr	r1, [r4, #3492]!	; 0xda4
   15048:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   1504c:	cmp	r0, #0
   15050:	beq	15058 <dim_enter_array@@Base+0x900>
   15054:	bl	17c44 <handle_coda_error@@Base>
   15058:	ldr	r0, [sp, #8]
   1505c:	cmp	r0, #0
   15060:	beq	151a0 <dim_enter_array@@Base+0xa48>
   15064:	ldr	r1, [r4]
   15068:	mov	r0, r6
   1506c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15070:	cmp	r0, #0
   15074:	beq	1507c <dim_enter_array@@Base+0x924>
   15078:	bl	17c44 <handle_coda_error@@Base>
   1507c:	ldr	r1, [sp]
   15080:	add	r0, sl, #1
   15084:	add	r2, r1, #1
   15088:	mov	r1, r5
   1508c:	bl	14ecc <dim_enter_array@@Base+0x774>
   15090:	mov	r0, r6
   15094:	b	15294 <dim_enter_array@@Base+0xb3c>
   15098:	add	r1, sp, #8
   1509c:	mov	r0, r6
   150a0:	bl	1261c <coda_cursor_get_byte_size@plt>
   150a4:	cmp	r0, #0
   150a8:	beq	150b0 <dim_enter_array@@Base+0x958>
   150ac:	bl	17c44 <handle_coda_error@@Base>
   150b0:	add	r0, r5, r5, lsl #2
   150b4:	ldr	r2, [sp, #12]
   150b8:	add	r0, r7, r0, lsl #4
   150bc:	ldr	r1, [r0, #800]	; 0x320
   150c0:	ldr	r3, [r0, #844]	; 0x34c
   150c4:	movw	r0, #53424	; 0xd0b0
   150c8:	movt	r0, #2
   150cc:	add	r0, r0, r1, lsl #2
   150d0:	ldr	r1, [sp, #8]
   150d4:	ldr	r7, [r0, #108]	; 0x6c
   150d8:	str	r1, [r7, r3, lsl #2]
   150dc:	mov	r3, r0
   150e0:	ldr	r7, [r3, #4]!
   150e4:	cmn	r7, #1
   150e8:	beq	1510c <dim_enter_array@@Base+0x9b4>
   150ec:	subs	r6, r7, r1
   150f0:	rscs	r7, r2, r7, asr #31
   150f4:	strlt	r1, [r3]
   150f8:	ldr	r3, [r0, #36]!	; 0x24
   150fc:	subs	r7, r1, r3
   15100:	sbcs	r2, r2, r3, asr #31
   15104:	strlt	r1, [r0]
   15108:	b	15298 <dim_enter_array@@Base+0xb40>
   1510c:	add	r0, r0, #36	; 0x24
   15110:	str	r1, [r3]
   15114:	str	r1, [r0]
   15118:	b	15298 <dim_enter_array@@Base+0xb40>
   1511c:	cmp	r5, #0
   15120:	moveq	r0, #0
   15124:	streq	r0, [r7, #844]	; 0x34c
   15128:	ldr	r1, [r9, #804]	; 0x324
   1512c:	ldr	r2, [r9, #840]	; 0x348
   15130:	ldr	r0, [r9, #844]	; 0x34c
   15134:	mul	r2, r2, r0
   15138:	cmp	r1, #1
   1513c:	str	r2, [r9, #924]	; 0x39c
   15140:	blt	1521c <dim_enter_array@@Base+0xac4>
   15144:	movw	r2, #53424	; 0xd0b0
   15148:	add	r1, r1, r4
   1514c:	add	r3, r4, #27
   15150:	movt	r2, #2
   15154:	add	r2, r2, r4, lsl #2
   15158:	mov	r4, #1
   1515c:	add	r2, r2, #72	; 0x48
   15160:	ldr	r7, [r2]
   15164:	cmp	r7, #0
   15168:	subeq	r7, r2, #68	; 0x44
   1516c:	ldrne	r7, [r2, #36]	; 0x24
   15170:	add	r2, r2, #4
   15174:	addne	r7, r7, r0, lsl #2
   15178:	ldr	r7, [r7]
   1517c:	mul	r4, r7, r4
   15180:	add	r7, r3, #1
   15184:	sub	r3, r3, #26
   15188:	cmp	r3, r1
   1518c:	mov	r3, r7
   15190:	blt	15160 <dim_enter_array@@Base+0xa08>
   15194:	cmp	r4, #1
   15198:	bge	15220 <dim_enter_array@@Base+0xac8>
   1519c:	b	15298 <dim_enter_array@@Base+0xb40>
   151a0:	ldr	r0, [r7, #3360]	; 0xd20
   151a4:	add	r0, r0, r0, lsl #2
   151a8:	add	r3, r7, r0, lsl #4
   151ac:	mov	r0, r3
   151b0:	ldr	r5, [r0, #804]!	; 0x324
   151b4:	cmp	r5, #1
   151b8:	blt	15298 <dim_enter_array@@Base+0xb40>
   151bc:	ldr	r1, [r0, #-4]
   151c0:	movw	r2, #53424	; 0xd0b0
   151c4:	mov	r7, #0
   151c8:	mov	r6, #0
   151cc:	movt	r2, #2
   151d0:	add	ip, r2, r1, lsl #2
   151d4:	add	r2, r3, #808	; 0x328
   151d8:	add	r3, r3, #844	; 0x34c
   151dc:	ldr	r4, [r2, r6, lsl #2]
   151e0:	cmn	r4, #1
   151e4:	bne	1520c <dim_enter_array@@Base+0xab4>
   151e8:	add	r5, ip, r6, lsl #2
   151ec:	ldr	r1, [r3]
   151f0:	ldr	r4, [r5, #108]	; 0x6c
   151f4:	str	r7, [r4, r1, lsl #2]
   151f8:	ldr	r1, [r5, #4]
   151fc:	cmn	r1, #1
   15200:	streq	r7, [r5, #4]
   15204:	str	r7, [r5, #36]	; 0x24
   15208:	ldr	r5, [r0]
   1520c:	add	r6, r6, #1
   15210:	cmp	r6, r5
   15214:	blt	151dc <dim_enter_array@@Base+0xa84>
   15218:	b	15298 <dim_enter_array@@Base+0xb40>
   1521c:	mov	r4, #1
   15220:	mov	r0, r6
   15224:	mov	r8, r6
   15228:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   1522c:	cmp	r0, #0
   15230:	beq	15238 <dim_enter_array@@Base+0xae0>
   15234:	bl	17c44 <handle_coda_error@@Base>
   15238:	add	r7, sl, #1
   1523c:	add	r9, r9, #924	; 0x39c
   15240:	add	r5, r5, #1
   15244:	sub	r6, r4, #1
   15248:	mov	sl, #0
   1524c:	ldr	r2, [sp]
   15250:	mov	r0, r7
   15254:	mov	r1, r5
   15258:	bl	14ecc <dim_enter_array@@Base+0x774>
   1525c:	cmp	sl, r6
   15260:	bge	15284 <dim_enter_array@@Base+0xb2c>
   15264:	mov	r0, r8
   15268:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   1526c:	cmp	r0, #0
   15270:	beq	15278 <dim_enter_array@@Base+0xb20>
   15274:	bl	17c44 <handle_coda_error@@Base>
   15278:	ldr	r0, [r9]
   1527c:	add	r0, r0, #1
   15280:	str	r0, [r9]
   15284:	add	sl, sl, #1
   15288:	cmp	r4, sl
   1528c:	bne	1524c <dim_enter_array@@Base+0xaf4>
   15290:	mov	r0, r8
   15294:	bl	12850 <coda_cursor_goto_parent@plt>
   15298:	sub	sp, fp, #28
   1529c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152a0:	movw	r0, #39066	; 0x989a
   152a4:	movw	r1, #39119	; 0x98cf
   152a8:	movw	r3, #39420	; 0x99fc
   152ac:	movw	r2, #294	; 0x126
   152b0:	movt	r0, #1
   152b4:	movt	r1, #1
   152b8:	movt	r3, #1
   152bc:	bl	12ab4 <__assert_fail@plt>
   152c0:	movw	r0, #39463	; 0x9a27
   152c4:	movw	r1, #39119	; 0x98cf
   152c8:	movw	r3, #39420	; 0x99fc
   152cc:	mov	r2, #252	; 0xfc
   152d0:	movt	r0, #1
   152d4:	movt	r1, #1
   152d8:	movt	r3, #1
   152dc:	bl	12ab4 <__assert_fail@plt>
   152e0:	movw	r0, #39387	; 0x99db
   152e4:	movw	r1, #39119	; 0x98cf
   152e8:	movw	r3, #39420	; 0x99fc
   152ec:	mov	r2, #125	; 0x7d
   152f0:	movt	r0, #1
   152f4:	movt	r1, #1
   152f8:	movt	r3, #1
   152fc:	bl	12ab4 <__assert_fail@plt>

00015300 <dim_leave_array@@Base>:
   15300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15304:	add	fp, sp, #24
   15308:	movw	r0, #49640	; 0xc1e8
   1530c:	movt	r0, #2
   15310:	ldr	r1, [r0, #3360]	; 0xd20
   15314:	cmn	r1, #1
   15318:	ble	1540c <dim_leave_array@@Base+0x10c>
   1531c:	add	r1, r1, r1, lsl #2
   15320:	movw	r5, #53424	; 0xd0b0
   15324:	add	r6, r0, r1, lsl #4
   15328:	movt	r5, #2
   1532c:	ldr	r0, [r6, #804]!	; 0x324
   15330:	ldr	r1, [r5]
   15334:	ldr	r8, [r6, #-4]
   15338:	sub	r1, r1, r0
   1533c:	cmp	r0, #1
   15340:	str	r1, [r5]
   15344:	blt	1537c <dim_leave_array@@Base+0x7c>
   15348:	add	r7, r5, r8, lsl #2
   1534c:	mov	r4, #0
   15350:	add	r1, r7, r4, lsl #2
   15354:	ldr	r2, [r1, #72]	; 0x48
   15358:	cmp	r2, #0
   1535c:	beq	1536c <dim_leave_array@@Base+0x6c>
   15360:	ldr	r0, [r1, #108]	; 0x6c
   15364:	bl	126e8 <free@plt>
   15368:	ldr	r0, [r6]
   1536c:	add	r4, r4, #1
   15370:	cmp	r4, r0
   15374:	blt	15350 <dim_leave_array@@Base+0x50>
   15378:	ldr	r1, [r5]
   1537c:	mvn	r2, #0
   15380:	cmp	r1, #1
   15384:	str	r2, [r5, #104]	; 0x68
   15388:	mov	r2, #0
   1538c:	str	r2, [r5, #68]	; 0x44
   15390:	blt	153b8 <dim_leave_array@@Base+0xb8>
   15394:	mov	r3, #1
   15398:	add	r7, r5, r2, lsl #2
   1539c:	ldr	r7, [r7, #72]	; 0x48
   153a0:	cmp	r7, #0
   153a4:	strne	r2, [r5, #104]	; 0x68
   153a8:	add	r2, r2, #1
   153ac:	strne	r3, [r5, #68]	; 0x44
   153b0:	cmp	r2, r1
   153b4:	blt	15398 <dim_leave_array@@Base+0x98>
   153b8:	add	r0, r8, r0
   153bc:	add	r0, r5, r0, lsl #3
   153c0:	ldr	r1, [r0, #296]	; 0x128
   153c4:	ldr	r0, [r0, #300]	; 0x12c
   153c8:	subs	r1, r1, #1
   153cc:	sbcs	r0, r0, #0
   153d0:	cmpge	r8, #1
   153d4:	blt	15408 <dim_leave_array@@Base+0x108>
   153d8:	add	r0, r5, r8, lsl #3
   153dc:	add	r6, r8, #1
   153e0:	add	r4, r0, #168	; 0xa8
   153e4:	add	r5, r0, #176	; 0xb0
   153e8:	ldrd	r0, [r4]
   153ec:	ldrd	r2, [r5]
   153f0:	bl	193f8 <main@@Base+0x1770>
   153f4:	sub	r6, r6, #1
   153f8:	strd	r0, [r4]
   153fc:	sub	r4, r4, #8
   15400:	cmp	r6, #1
   15404:	bgt	153e8 <dim_leave_array@@Base+0xe8>
   15408:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1540c:	movw	r0, #39334	; 0x99a6
   15410:	movw	r1, #39119	; 0x98cf
   15414:	movw	r3, #39364	; 0x99c4
   15418:	movw	r2, #579	; 0x243
   1541c:	movt	r0, #1
   15420:	movt	r1, #1
   15424:	movt	r3, #1
   15428:	bl	12ab4 <__assert_fail@plt>

0001542c <dim_record_field_available@@Base>:
   1542c:	mov	r0, #0
   15430:	mov	r1, #0
   15434:	mov	r2, #0
   15438:	b	1543c <dim_record_field_available@@Base+0x10>
   1543c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15440:	add	fp, sp, #28
   15444:	sub	sp, sp, #12
   15448:	movw	r4, #49640	; 0xc1e8
   1544c:	mov	r6, r1
   15450:	mov	r8, r0
   15454:	add	r1, sp, #8
   15458:	mov	sl, r2
   1545c:	movt	r4, #2
   15460:	add	r0, r4, #144	; 0x90
   15464:	str	r0, [sp]
   15468:	bl	12778 <coda_cursor_get_type_class@plt>
   1546c:	cmp	r0, #0
   15470:	beq	15478 <dim_record_field_available@@Base+0x4c>
   15474:	bl	17c44 <handle_coda_error@@Base>
   15478:	ldr	r0, [sp, #8]
   1547c:	cmp	r0, #0
   15480:	beq	15528 <dim_record_field_available@@Base+0xfc>
   15484:	cmp	r0, #1
   15488:	bne	15644 <dim_record_field_available@@Base+0x218>
   1548c:	ldr	r0, [r4, #3360]	; 0xd20
   15490:	cmp	r0, r6
   15494:	ble	15664 <dim_record_field_available@@Base+0x238>
   15498:	add	r0, r6, r6, lsl #2
   1549c:	cmp	r6, #0
   154a0:	add	r7, r4, r0, lsl #4
   154a4:	moveq	r0, #0
   154a8:	ldr	r3, [r7, #800]	; 0x320
   154ac:	streq	r0, [r4, #844]	; 0x34c
   154b0:	ldr	r1, [r7, #804]	; 0x324
   154b4:	ldr	r2, [r7, #840]	; 0x348
   154b8:	ldr	r0, [r7, #844]	; 0x34c
   154bc:	mul	r2, r2, r0
   154c0:	cmp	r1, #1
   154c4:	str	r2, [r7, #924]	; 0x39c
   154c8:	blt	155a8 <dim_record_field_available@@Base+0x17c>
   154cc:	movw	r2, #53424	; 0xd0b0
   154d0:	add	r1, r1, r3
   154d4:	mov	r4, #1
   154d8:	movt	r2, #2
   154dc:	add	r2, r2, r3, lsl #2
   154e0:	add	r3, r3, #27
   154e4:	add	r2, r2, #72	; 0x48
   154e8:	ldr	r5, [r2]
   154ec:	cmp	r5, #0
   154f0:	subeq	r5, r2, #68	; 0x44
   154f4:	ldrne	r5, [r2, #36]	; 0x24
   154f8:	add	r2, r2, #4
   154fc:	addne	r5, r5, r0, lsl #2
   15500:	ldr	r5, [r5]
   15504:	mul	r4, r5, r4
   15508:	add	r5, r3, #1
   1550c:	sub	r3, r3, #26
   15510:	cmp	r3, r1
   15514:	mov	r3, r5
   15518:	blt	154e8 <dim_record_field_available@@Base+0xbc>
   1551c:	cmp	r4, #1
   15520:	bge	155ac <dim_record_field_available@@Base+0x180>
   15524:	b	15628 <dim_record_field_available@@Base+0x1fc>
   15528:	add	r5, r4, sl, lsl #2
   1552c:	ldr	r0, [sp]
   15530:	add	r2, sp, #4
   15534:	ldr	r1, [r5, #3492]!	; 0xda4
   15538:	bl	12688 <coda_cursor_get_record_field_available_status@plt>
   1553c:	cmp	r0, #0
   15540:	beq	15548 <dim_record_field_available@@Base+0x11c>
   15544:	bl	17c44 <handle_coda_error@@Base>
   15548:	ldr	r0, [sp, #4]
   1554c:	cmp	r0, #0
   15550:	beq	15628 <dim_record_field_available@@Base+0x1fc>
   15554:	ldr	r0, [r4, #3748]	; 0xea4
   15558:	sub	r0, r0, #1
   1555c:	cmp	r0, sl
   15560:	beq	15638 <dim_record_field_available@@Base+0x20c>
   15564:	ldr	r1, [r5]
   15568:	ldr	r0, [sp]
   1556c:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15570:	cmp	r0, #0
   15574:	beq	1557c <dim_record_field_available@@Base+0x150>
   15578:	bl	17c44 <handle_coda_error@@Base>
   1557c:	add	r0, r8, #1
   15580:	add	r2, sl, #1
   15584:	mov	r1, r6
   15588:	bl	1543c <dim_record_field_available@@Base+0x10>
   1558c:	str	r0, [sp, #4]
   15590:	ldr	r0, [sp]
   15594:	bl	12850 <coda_cursor_goto_parent@plt>
   15598:	ldr	r0, [sp, #4]
   1559c:	cmp	r0, #0
   155a0:	bne	15638 <dim_record_field_available@@Base+0x20c>
   155a4:	b	15628 <dim_record_field_available@@Base+0x1fc>
   155a8:	mov	r4, #1
   155ac:	ldr	r0, [sp]
   155b0:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   155b4:	cmp	r0, #0
   155b8:	beq	155c0 <dim_record_field_available@@Base+0x194>
   155bc:	bl	17c44 <handle_coda_error@@Base>
   155c0:	add	r5, r7, #924	; 0x39c
   155c4:	add	r7, r8, #1
   155c8:	add	r6, r6, #1
   155cc:	sub	r9, r4, #1
   155d0:	mov	r8, #0
   155d4:	mov	r0, r7
   155d8:	mov	r1, r6
   155dc:	mov	r2, sl
   155e0:	bl	1543c <dim_record_field_available@@Base+0x10>
   155e4:	cmp	r0, #0
   155e8:	bne	15630 <dim_record_field_available@@Base+0x204>
   155ec:	cmp	r8, r9
   155f0:	bge	15614 <dim_record_field_available@@Base+0x1e8>
   155f4:	ldr	r0, [sp]
   155f8:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   155fc:	cmp	r0, #0
   15600:	beq	15608 <dim_record_field_available@@Base+0x1dc>
   15604:	bl	17c44 <handle_coda_error@@Base>
   15608:	ldr	r0, [r5]
   1560c:	add	r0, r0, #1
   15610:	str	r0, [r5]
   15614:	add	r8, r8, #1
   15618:	cmp	r8, r4
   1561c:	blt	155d4 <dim_record_field_available@@Base+0x1a8>
   15620:	ldr	r0, [sp]
   15624:	bl	12850 <coda_cursor_goto_parent@plt>
   15628:	mov	r0, #0
   1562c:	b	1563c <dim_record_field_available@@Base+0x210>
   15630:	ldr	r0, [sp]
   15634:	bl	12850 <coda_cursor_goto_parent@plt>
   15638:	mov	r0, #1
   1563c:	sub	sp, fp, #28
   15640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15644:	movw	r0, #39066	; 0x989a
   15648:	movw	r1, #39119	; 0x98cf
   1564c:	movw	r3, #39542	; 0x9a76
   15650:	movw	r2, #729	; 0x2d9
   15654:	movt	r0, #1
   15658:	movt	r1, #1
   1565c:	movt	r3, #1
   15660:	bl	12ab4 <__assert_fail@plt>
   15664:	movw	r0, #39503	; 0x9a4f
   15668:	movw	r1, #39119	; 0x98cf
   1566c:	movw	r3, #39542	; 0x9a76
   15670:	movw	r2, #638	; 0x27e
   15674:	movt	r0, #1
   15678:	movt	r1, #1
   1567c:	movt	r3, #1
   15680:	bl	12ab4 <__assert_fail@plt>

00015684 <codadump_filter_create@@Base>:
   15684:	push	{r4, r5, r6, r7, fp, lr}
   15688:	add	fp, sp, #16
   1568c:	sub	sp, sp, #16
   15690:	mov	r1, #0
   15694:	str	r0, [sp, #8]
   15698:	cmp	r0, #0
   1569c:	str	r1, [sp, #4]
   156a0:	str	r1, [sp, #12]
   156a4:	ldrbne	r1, [r0]
   156a8:	cmpne	r1, #0
   156ac:	bne	156bc <codadump_filter_create@@Base+0x38>
   156b0:	ldr	r0, [sp, #4]
   156b4:	sub	sp, fp, #16
   156b8:	pop	{r4, r5, r6, r7, fp, pc}
   156bc:	add	r4, sp, #12
   156c0:	add	r5, sp, #8
   156c4:	add	r6, sp, #4
   156c8:	mov	r7, #0
   156cc:	mov	r1, r4
   156d0:	mov	r2, r5
   156d4:	bl	15858 <codadump_filter_get_next_filter@@Base+0x34>
   156d8:	ldr	r1, [sp, #12]
   156dc:	cmp	r1, #0
   156e0:	beq	15704 <codadump_filter_create@@Base+0x80>
   156e4:	mov	r0, r6
   156e8:	bl	15ab8 <codadump_filter_get_next_filter@@Base+0x294>
   156ec:	ldr	r0, [sp, #8]
   156f0:	str	r7, [sp, #12]
   156f4:	ldrb	r1, [r0]
   156f8:	cmp	r1, #0
   156fc:	bne	156cc <codadump_filter_create@@Base+0x48>
   15700:	b	156b0 <codadump_filter_create@@Base+0x2c>
   15704:	add	r0, sp, #4
   15708:	bl	15710 <codadump_filter_remove@@Base>
   1570c:	b	156b0 <codadump_filter_create@@Base+0x2c>

00015710 <codadump_filter_remove@@Base>:
   15710:	push	{r4, sl, fp, lr}
   15714:	add	fp, sp, #8
   15718:	cmp	r0, #0
   1571c:	beq	1579c <codadump_filter_remove@@Base+0x8c>
   15720:	mov	r4, r0
   15724:	ldr	r0, [r0]
   15728:	cmp	r0, #0
   1572c:	popeq	{r4, sl, fp, pc}
   15730:	mov	r1, r0
   15734:	ldr	r2, [r1, #8]!
   15738:	cmp	r2, #0
   1573c:	beq	1574c <codadump_filter_remove@@Base+0x3c>
   15740:	mov	r0, r1
   15744:	bl	15710 <codadump_filter_remove@@Base>
   15748:	ldr	r0, [r4]
   1574c:	mov	r1, r0
   15750:	ldr	r2, [r1, #4]!
   15754:	cmp	r2, #0
   15758:	beq	15768 <codadump_filter_remove@@Base+0x58>
   1575c:	mov	r0, r1
   15760:	bl	15710 <codadump_filter_remove@@Base>
   15764:	ldr	r0, [r4]
   15768:	ldr	r1, [r0]
   1576c:	cmp	r1, #0
   15770:	beq	1578c <codadump_filter_remove@@Base+0x7c>
   15774:	mov	r0, r1
   15778:	bl	126e8 <free@plt>
   1577c:	ldr	r0, [r4]
   15780:	mov	r1, #0
   15784:	str	r1, [r0]
   15788:	ldr	r0, [r4]
   1578c:	bl	126e8 <free@plt>
   15790:	mov	r0, #0
   15794:	str	r0, [r4]
   15798:	pop	{r4, sl, fp, pc}
   1579c:	movw	r0, #39595	; 0x9aab
   157a0:	movw	r1, #39610	; 0x9aba
   157a4:	movw	r3, #39686	; 0x9b06
   157a8:	mov	r2, #192	; 0xc0
   157ac:	movt	r0, #1
   157b0:	movt	r1, #1
   157b4:	movt	r3, #1
   157b8:	bl	12ab4 <__assert_fail@plt>

000157bc <codadump_filter_get_fieldname@@Base>:
   157bc:	cmp	r0, #0
   157c0:	ldrne	r0, [r0]
   157c4:	bxne	lr
   157c8:	push	{fp, lr}
   157cc:	mov	fp, sp
   157d0:	movw	r0, #39595	; 0x9aab
   157d4:	movw	r1, #39610	; 0x9aba
   157d8:	movw	r3, #39734	; 0x9b36
   157dc:	mov	r2, #216	; 0xd8
   157e0:	movt	r0, #1
   157e4:	movt	r1, #1
   157e8:	movt	r3, #1
   157ec:	bl	12ab4 <__assert_fail@plt>

000157f0 <codadump_filter_get_subfilter@@Base>:
   157f0:	cmp	r0, #0
   157f4:	ldrne	r0, [r0, #4]
   157f8:	bxne	lr
   157fc:	push	{fp, lr}
   15800:	mov	fp, sp
   15804:	movw	r0, #39595	; 0x9aab
   15808:	movw	r1, #39610	; 0x9aba
   1580c:	movw	r3, #39795	; 0x9b73
   15810:	mov	r2, #223	; 0xdf
   15814:	movt	r0, #1
   15818:	movt	r1, #1
   1581c:	movt	r3, #1
   15820:	bl	12ab4 <__assert_fail@plt>

00015824 <codadump_filter_get_next_filter@@Base>:
   15824:	cmp	r0, #0
   15828:	ldrne	r0, [r0, #8]
   1582c:	bxne	lr
   15830:	push	{fp, lr}
   15834:	mov	fp, sp
   15838:	movw	r0, #39595	; 0x9aab
   1583c:	movw	r1, #39610	; 0x9aba
   15840:	movw	r3, #39861	; 0x9bb5
   15844:	mov	r2, #230	; 0xe6
   15848:	movt	r0, #1
   1584c:	movt	r1, #1
   15850:	movt	r3, #1
   15854:	bl	12ab4 <__assert_fail@plt>
   15858:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1585c:	add	fp, sp, #24
   15860:	sub	sp, sp, #8
   15864:	cmp	r0, #0
   15868:	beq	15a58 <codadump_filter_get_next_filter@@Base+0x234>
   1586c:	mov	r9, r1
   15870:	cmp	r1, #0
   15874:	beq	15a78 <codadump_filter_get_next_filter@@Base+0x254>
   15878:	mov	r8, r2
   1587c:	cmp	r2, #0
   15880:	beq	15a98 <codadump_filter_get_next_filter@@Base+0x274>
   15884:	movw	r4, #3
   15888:	mov	r6, r0
   1588c:	mov	r1, #1
   15890:	movt	r4, #128	; 0x80
   15894:	b	158a4 <codadump_filter_get_next_filter@@Base+0x80>
   15898:	tst	r4, r1, lsl r2
   1589c:	beq	158b4 <codadump_filter_get_next_filter@@Base+0x90>
   158a0:	add	r6, r6, #1
   158a4:	ldrb	r0, [r6]
   158a8:	sub	r2, r0, #9
   158ac:	cmp	r2, #23
   158b0:	bls	15898 <codadump_filter_get_next_filter@@Base+0x74>
   158b4:	mov	r7, #0
   158b8:	mvn	r1, #43	; 0x2b
   158bc:	mov	r2, #1
   158c0:	movw	r3, #32773	; 0x8005
   158c4:	b	158e0 <codadump_filter_get_next_filter@@Base+0xbc>
   158c8:	uxtb	r0, r0
   158cc:	cmp	r0, #0
   158d0:	beq	158f4 <codadump_filter_get_next_filter@@Base+0xd0>
   158d4:	add	r0, r6, r7
   158d8:	add	r7, r7, #1
   158dc:	ldrb	r0, [r0, #1]
   158e0:	uxtab	r5, r1, r0
   158e4:	cmp	r5, #15
   158e8:	bhi	158c8 <codadump_filter_get_next_filter@@Base+0xa4>
   158ec:	tst	r3, r2, lsl r5
   158f0:	beq	158c8 <codadump_filter_get_next_filter@@Base+0xa4>
   158f4:	cmp	r7, #0
   158f8:	beq	15a04 <codadump_filter_get_next_filter@@Base+0x1e0>
   158fc:	mov	r0, #12
   15900:	bl	12820 <malloc@plt>
   15904:	cmp	r0, #0
   15908:	str	r0, [r9]
   1590c:	bne	15938 <codadump_filter_get_next_filter@@Base+0x114>
   15910:	movw	r1, #38521	; 0x9679
   15914:	movw	r3, #39610	; 0x9aba
   15918:	mov	r0, #69	; 0x45
   1591c:	mov	r2, #12
   15920:	str	r0, [sp]
   15924:	movt	r1, #1
   15928:	movt	r3, #1
   1592c:	mvn	r0, #0
   15930:	bl	126a0 <coda_set_error@plt>
   15934:	bl	17c44 <handle_coda_error@@Base>
   15938:	add	r5, r7, #1
   1593c:	mov	r0, r5
   15940:	bl	12820 <malloc@plt>
   15944:	ldr	r1, [r9]
   15948:	str	r0, [r1]
   1594c:	ldr	r0, [r9]
   15950:	ldr	r0, [r0]
   15954:	cmp	r0, #0
   15958:	bne	1598c <codadump_filter_get_next_filter@@Base+0x168>
   1595c:	movw	r1, #40026	; 0x9c5a
   15960:	movw	r3, #39610	; 0x9aba
   15964:	mov	r0, #76	; 0x4c
   15968:	mov	r2, r5
   1596c:	str	r0, [sp]
   15970:	movt	r1, #1
   15974:	movt	r3, #1
   15978:	mvn	r0, #0
   1597c:	bl	126a0 <coda_set_error@plt>
   15980:	bl	17c44 <handle_coda_error@@Base>
   15984:	ldr	r0, [r9]
   15988:	ldr	r0, [r0]
   1598c:	mov	r1, r6
   15990:	mov	r2, r7
   15994:	add	r5, r6, r7
   15998:	bl	1291c <strncpy@plt>
   1599c:	ldr	r0, [r9]
   159a0:	mov	r1, #0
   159a4:	str	r1, [r0, #4]
   159a8:	ldr	r0, [r9]
   159ac:	str	r1, [r0, #8]
   159b0:	mov	r1, #1
   159b4:	ldr	r0, [r9]
   159b8:	ldr	r0, [r0]
   159bc:	add	r0, r0, r7
   159c0:	b	159d0 <codadump_filter_get_next_filter@@Base+0x1ac>
   159c4:	tst	r4, r1, lsl r2
   159c8:	beq	159e0 <codadump_filter_get_next_filter@@Base+0x1bc>
   159cc:	sub	r0, r0, #1
   159d0:	ldrb	r2, [r0, #-1]
   159d4:	sub	r2, r2, #9
   159d8:	cmp	r2, #23
   159dc:	bls	159c4 <codadump_filter_get_next_filter@@Base+0x1a0>
   159e0:	mov	r1, #0
   159e4:	strb	r1, [r0]
   159e8:	ldrb	r0, [r6, r7]
   159ec:	cmp	r0, #44	; 0x2c
   159f0:	cmpne	r0, #59	; 0x3b
   159f4:	bne	15a10 <codadump_filter_get_next_filter@@Base+0x1ec>
   159f8:	add	r0, r5, #1
   159fc:	str	r0, [r8]
   15a00:	b	15a50 <codadump_filter_get_next_filter@@Base+0x22c>
   15a04:	mov	r0, #0
   15a08:	str	r0, [r9]
   15a0c:	b	15a50 <codadump_filter_get_next_filter@@Base+0x22c>
   15a10:	cmp	r0, #46	; 0x2e
   15a14:	bne	15a4c <codadump_filter_get_next_filter@@Base+0x228>
   15a18:	ldr	r1, [r9]
   15a1c:	add	r0, r5, #1
   15a20:	mov	r2, r8
   15a24:	add	r1, r1, #4
   15a28:	bl	15858 <codadump_filter_get_next_filter@@Base+0x34>
   15a2c:	ldr	r0, [r9]
   15a30:	ldr	r0, [r0, #4]
   15a34:	cmp	r0, #0
   15a38:	bne	15a50 <codadump_filter_get_next_filter@@Base+0x22c>
   15a3c:	mov	r0, r9
   15a40:	sub	sp, fp, #24
   15a44:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   15a48:	b	15710 <codadump_filter_remove@@Base>
   15a4c:	str	r5, [r8]
   15a50:	sub	sp, fp, #24
   15a54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15a58:	movw	r0, #39929	; 0x9bf9
   15a5c:	movw	r1, #39610	; 0x9aba
   15a60:	movw	r3, #39949	; 0x9c0d
   15a64:	mov	r2, #44	; 0x2c
   15a68:	movt	r0, #1
   15a6c:	movt	r1, #1
   15a70:	movt	r3, #1
   15a74:	bl	12ab4 <__assert_fail@plt>
   15a78:	movw	r0, #39595	; 0x9aab
   15a7c:	movw	r1, #39610	; 0x9aba
   15a80:	movw	r3, #39949	; 0x9c0d
   15a84:	mov	r2, #45	; 0x2d
   15a88:	movt	r0, #1
   15a8c:	movt	r1, #1
   15a90:	movt	r3, #1
   15a94:	bl	12ab4 <__assert_fail@plt>
   15a98:	movw	r0, #40013	; 0x9c4d
   15a9c:	movw	r1, #39610	; 0x9aba
   15aa0:	movw	r3, #39949	; 0x9c0d
   15aa4:	mov	r2, #46	; 0x2e
   15aa8:	movt	r0, #1
   15aac:	movt	r1, #1
   15ab0:	movt	r3, #1
   15ab4:	bl	12ab4 <__assert_fail@plt>
   15ab8:	push	{r4, r5, fp, lr}
   15abc:	add	fp, sp, #8
   15ac0:	sub	sp, sp, #8
   15ac4:	cmp	r0, #0
   15ac8:	str	r1, [sp, #4]
   15acc:	beq	15b6c <codadump_filter_get_next_filter@@Base+0x348>
   15ad0:	mov	r4, r1
   15ad4:	cmp	r1, #0
   15ad8:	beq	15b64 <codadump_filter_get_next_filter@@Base+0x340>
   15adc:	ldr	r5, [r0]
   15ae0:	cmp	r5, #0
   15ae4:	beq	15b1c <codadump_filter_get_next_filter@@Base+0x2f8>
   15ae8:	ldr	r1, [r4]
   15aec:	ldr	r0, [r5]
   15af0:	bl	12664 <strcmp@plt>
   15af4:	cmp	r0, #0
   15af8:	beq	15b24 <codadump_filter_get_next_filter@@Base+0x300>
   15afc:	ldr	r0, [r5, #8]!
   15b00:	cmp	r0, #0
   15b04:	beq	15b50 <codadump_filter_get_next_filter@@Base+0x32c>
   15b08:	mov	r0, r5
   15b0c:	mov	r1, r4
   15b10:	sub	sp, fp, #8
   15b14:	pop	{r4, r5, fp, lr}
   15b18:	b	15ab8 <codadump_filter_get_next_filter@@Base+0x294>
   15b1c:	str	r4, [r0]
   15b20:	b	15b64 <codadump_filter_get_next_filter@@Base+0x340>
   15b24:	ldr	r0, [r5, #4]!
   15b28:	cmp	r0, #0
   15b2c:	beq	15b5c <codadump_filter_get_next_filter@@Base+0x338>
   15b30:	ldr	r1, [r4, #4]
   15b34:	mov	r0, r5
   15b38:	cmp	r1, #0
   15b3c:	beq	15b58 <codadump_filter_get_next_filter@@Base+0x334>
   15b40:	bl	15ab8 <codadump_filter_get_next_filter@@Base+0x294>
   15b44:	mov	r0, #0
   15b48:	str	r0, [r4, #4]
   15b4c:	b	15b5c <codadump_filter_get_next_filter@@Base+0x338>
   15b50:	str	r4, [r5]
   15b54:	b	15b64 <codadump_filter_get_next_filter@@Base+0x340>
   15b58:	bl	15710 <codadump_filter_remove@@Base>
   15b5c:	add	r0, sp, #4
   15b60:	bl	15710 <codadump_filter_remove@@Base>
   15b64:	sub	sp, fp, #8
   15b68:	pop	{r4, r5, fp, pc}
   15b6c:	movw	r0, #39595	; 0x9aab
   15b70:	movw	r1, #39610	; 0x9aba
   15b74:	movw	r3, #40078	; 0x9c8e
   15b78:	mov	r2, #117	; 0x75
   15b7c:	movt	r0, #1
   15b80:	movt	r1, #1
   15b84:	movt	r3, #1
   15b88:	bl	12ab4 <__assert_fail@plt>

00015b8c <print_json_data@@Base>:
   15b8c:	push	{r4, sl, fp, lr}
   15b90:	add	fp, sp, #8
   15b94:	sub	sp, sp, #528	; 0x210
   15b98:	movw	r1, #49604	; 0xc1c4
   15b9c:	movw	r4, #49640	; 0xc1e8
   15ba0:	movt	r1, #2
   15ba4:	movt	r4, #2
   15ba8:	str	r0, [r1]
   15bac:	ldr	r0, [r4]
   15bb0:	sub	r1, fp, #12
   15bb4:	bl	126ac <coda_open@plt>
   15bb8:	cmp	r0, #0
   15bbc:	beq	15bfc <print_json_data@@Base+0x70>
   15bc0:	bl	12a60 <coda_get_errno@plt>
   15bc4:	ldr	r0, [r0]
   15bc8:	cmn	r0, #21
   15bcc:	bne	15bf8 <print_json_data@@Base+0x6c>
   15bd0:	mov	r0, #0
   15bd4:	bl	126f4 <coda_set_option_use_mmap@plt>
   15bd8:	ldr	r0, [r4]
   15bdc:	sub	r1, fp, #12
   15be0:	bl	126ac <coda_open@plt>
   15be4:	mov	r4, r0
   15be8:	mov	r0, #1
   15bec:	bl	126f4 <coda_set_option_use_mmap@plt>
   15bf0:	cmp	r4, #0
   15bf4:	beq	15bfc <print_json_data@@Base+0x70>
   15bf8:	bl	17c44 <handle_coda_error@@Base>
   15bfc:	ldr	r1, [fp, #-12]
   15c00:	mov	r0, sp
   15c04:	bl	127d8 <coda_cursor_set_product@plt>
   15c08:	cmp	r0, #0
   15c0c:	beq	15c14 <print_json_data@@Base+0x88>
   15c10:	bl	17c44 <handle_coda_error@@Base>
   15c14:	movw	r0, #53416	; 0xd0a8
   15c18:	movt	r0, #2
   15c1c:	ldr	r1, [r0]
   15c20:	cmp	r1, #0
   15c24:	beq	15c3c <print_json_data@@Base+0xb0>
   15c28:	mov	r0, sp
   15c2c:	bl	129b8 <coda_cursor_goto@plt>
   15c30:	cmp	r0, #0
   15c34:	beq	15c3c <print_json_data@@Base+0xb0>
   15c38:	bl	17c44 <handle_coda_error@@Base>
   15c3c:	mov	r0, #0
   15c40:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   15c44:	mov	r0, sp
   15c48:	bl	15c68 <print_json_data@@Base+0xdc>
   15c4c:	movw	r0, #41107	; 0xa093
   15c50:	movt	r0, #1
   15c54:	bl	16438 <print_json_data@@Base+0x8ac>
   15c58:	ldr	r0, [fp, #-12]
   15c5c:	bl	12994 <coda_close@plt>
   15c60:	sub	sp, fp, #8
   15c64:	pop	{r4, sl, fp, pc}
   15c68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15c6c:	add	fp, sp, #24
   15c70:	sub	sp, sp, #72	; 0x48
   15c74:	mov	r4, r0
   15c78:	mov	r0, #0
   15c7c:	str	r0, [fp, #-32]	; 0xffffffe0
   15c80:	movw	r0, #49604	; 0xc1c4
   15c84:	movt	r0, #2
   15c88:	ldr	r0, [r0]
   15c8c:	cmp	r0, #0
   15c90:	beq	15cf4 <print_json_data@@Base+0x168>
   15c94:	sub	r1, fp, #32
   15c98:	mov	r0, r4
   15c9c:	bl	1276c <coda_cursor_has_attributes@plt>
   15ca0:	cmp	r0, #0
   15ca4:	beq	15cac <print_json_data@@Base+0x120>
   15ca8:	bl	17c44 <handle_coda_error@@Base>
   15cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cb0:	cmp	r0, #0
   15cb4:	beq	15cf4 <print_json_data@@Base+0x168>
   15cb8:	movw	r0, #40133	; 0x9cc5
   15cbc:	movt	r0, #1
   15cc0:	bl	16438 <print_json_data@@Base+0x8ac>
   15cc4:	mov	r0, r4
   15cc8:	bl	128ec <coda_cursor_goto_attributes@plt>
   15ccc:	cmp	r0, #0
   15cd0:	beq	15cd8 <print_json_data@@Base+0x14c>
   15cd4:	bl	17c44 <handle_coda_error@@Base>
   15cd8:	mov	r0, r4
   15cdc:	bl	15c68 <print_json_data@@Base+0xdc>
   15ce0:	mov	r0, r4
   15ce4:	bl	12850 <coda_cursor_goto_parent@plt>
   15ce8:	movw	r0, #40142	; 0x9cce
   15cec:	movt	r0, #1
   15cf0:	bl	16438 <print_json_data@@Base+0x8ac>
   15cf4:	sub	r1, fp, #28
   15cf8:	mov	r0, r4
   15cfc:	bl	12778 <coda_cursor_get_type_class@plt>
   15d00:	cmp	r0, #0
   15d04:	beq	15d0c <print_json_data@@Base+0x180>
   15d08:	bl	17c44 <handle_coda_error@@Base>
   15d0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d10:	cmp	r0, #6
   15d14:	bhi	163e0 <print_json_data@@Base+0x854>
   15d18:	add	r1, pc, #0
   15d1c:	ldr	pc, [r1, r0, lsl #2]
   15d20:	andeq	r5, r1, ip, asr #27
   15d24:	andeq	r5, r1, r0, lsr #29
   15d28:	andeq	r5, r1, ip, lsr sp
   15d2c:	andeq	r5, r1, ip, lsr sp
   15d30:	andeq	r5, r1, ip, lsr sp
   15d34:	andeq	r5, r1, ip, lsr sp
   15d38:	andeq	r5, r1, r8, ror #30
   15d3c:	sub	r1, fp, #36	; 0x24
   15d40:	mov	r0, r4
   15d44:	bl	12814 <coda_cursor_get_read_type@plt>
   15d48:	cmp	r0, #0
   15d4c:	beq	15d54 <print_json_data@@Base+0x1c8>
   15d50:	bl	17c44 <handle_coda_error@@Base>
   15d54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d58:	add	r0, r0, #1
   15d5c:	cmp	r0, #13
   15d60:	bhi	163e0 <print_json_data@@Base+0x854>
   15d64:	add	r1, pc, #0
   15d68:	ldr	pc, [r1, r0, lsl #2]
   15d6c:	andeq	r5, r1, r4, lsr #31
   15d70:	andeq	r5, r1, r4, lsr #27
   15d74:			; <UNDEFINED> instruction: 0x00015fb0
   15d78:	andeq	r5, r1, r4, lsr #27
   15d7c:			; <UNDEFINED> instruction: 0x00015fb0
   15d80:	andeq	r5, r1, r4, lsr #27
   15d84:			; <UNDEFINED> instruction: 0x00015fb0
   15d88:	andeq	r6, r1, r0, lsl r0
   15d8c:	andeq	r6, r1, r0, asr #32
   15d90:	ldrdeq	r5, [r1], -r8
   15d94:	ldrdeq	r5, [r1], -r8
   15d98:	andeq	r6, r1, r0, lsl #1
   15d9c:	strheq	r6, [r1], -ip
   15da0:	andeq	r6, r1, ip, ror #2
   15da4:	add	r1, sp, #16
   15da8:	mov	r0, r4
   15dac:	bl	12a3c <coda_cursor_read_int32@plt>
   15db0:	cmp	r0, #0
   15db4:	beq	15dbc <print_json_data@@Base+0x230>
   15db8:	bl	17c44 <handle_coda_error@@Base>
   15dbc:	ldr	r1, [sp, #16]
   15dc0:	movw	r0, #40328	; 0x9d88
   15dc4:	movt	r0, #1
   15dc8:	b	16078 <print_json_data@@Base+0x4ec>
   15dcc:	movw	r0, #40151	; 0x9cd7
   15dd0:	movt	r0, #1
   15dd4:	bl	16438 <print_json_data@@Base+0x8ac>
   15dd8:	add	r1, sp, #16
   15ddc:	mov	r0, r4
   15de0:	bl	126d0 <coda_cursor_get_num_elements@plt>
   15de4:	cmp	r0, #0
   15de8:	beq	15df0 <print_json_data@@Base+0x264>
   15dec:	bl	17c44 <handle_coda_error@@Base>
   15df0:	ldr	r0, [sp, #16]
   15df4:	cmp	r0, #1
   15df8:	blt	1632c <print_json_data@@Base+0x7a0>
   15dfc:	add	r1, sp, #8
   15e00:	mov	r0, r4
   15e04:	bl	12730 <coda_cursor_get_type@plt>
   15e08:	cmp	r0, #0
   15e0c:	beq	15e14 <print_json_data@@Base+0x288>
   15e10:	bl	17c44 <handle_coda_error@@Base>
   15e14:	ldr	r0, [sp, #8]
   15e18:	sub	r1, fp, #36	; 0x24
   15e1c:	bl	12934 <coda_type_get_record_union_status@plt>
   15e20:	cmp	r0, #0
   15e24:	beq	15e2c <print_json_data@@Base+0x2a0>
   15e28:	bl	17c44 <handle_coda_error@@Base>
   15e2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e30:	cmp	r0, #0
   15e34:	beq	16238 <print_json_data@@Base+0x6ac>
   15e38:	sub	r1, fp, #40	; 0x28
   15e3c:	mov	r0, r4
   15e40:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   15e44:	cmp	r0, #0
   15e48:	beq	15e50 <print_json_data@@Base+0x2c4>
   15e4c:	bl	17c44 <handle_coda_error@@Base>
   15e50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e54:	ldr	r0, [sp, #8]
   15e58:	sub	r2, fp, #44	; 0x2c
   15e5c:	bl	12a78 <coda_type_get_record_field_name@plt>
   15e60:	cmp	r0, #0
   15e64:	beq	15e6c <print_json_data@@Base+0x2e0>
   15e68:	bl	17c44 <handle_coda_error@@Base>
   15e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15e70:	mov	r0, r4
   15e74:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   15e78:	cmp	r0, #0
   15e7c:	beq	15e84 <print_json_data@@Base+0x2f8>
   15e80:	bl	17c44 <handle_coda_error@@Base>
   15e84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e88:	movw	r0, #40153	; 0x9cd9
   15e8c:	movt	r0, #1
   15e90:	bl	16438 <print_json_data@@Base+0x8ac>
   15e94:	mov	r0, r4
   15e98:	bl	15c68 <print_json_data@@Base+0xdc>
   15e9c:	b	16324 <print_json_data@@Base+0x798>
   15ea0:	movw	r0, #40322	; 0x9d82
   15ea4:	movt	r0, #1
   15ea8:	bl	16438 <print_json_data@@Base+0x8ac>
   15eac:	add	r5, sp, #16
   15eb0:	add	r1, sp, #8
   15eb4:	mov	r0, r4
   15eb8:	mov	r2, r5
   15ebc:	bl	1297c <coda_cursor_get_array_dim@plt>
   15ec0:	cmp	r0, #0
   15ec4:	beq	15ecc <print_json_data@@Base+0x340>
   15ec8:	bl	17c44 <handle_coda_error@@Base>
   15ecc:	ldr	r0, [sp, #8]
   15ed0:	cmp	r0, #0
   15ed4:	blt	15f5c <print_json_data@@Base+0x3d0>
   15ed8:	mov	r6, #1
   15edc:	beq	15ef8 <print_json_data@@Base+0x36c>
   15ee0:	ldr	r1, [r5], #4
   15ee4:	subs	r0, r0, #1
   15ee8:	mul	r6, r1, r6
   15eec:	bne	15ee0 <print_json_data@@Base+0x354>
   15ef0:	cmp	r6, #1
   15ef4:	blt	15f5c <print_json_data@@Base+0x3d0>
   15ef8:	mov	r0, r4
   15efc:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   15f00:	cmp	r0, #0
   15f04:	beq	15f0c <print_json_data@@Base+0x380>
   15f08:	bl	17c44 <handle_coda_error@@Base>
   15f0c:	movw	r8, #39240	; 0x9948
   15f10:	sub	r7, r6, #1
   15f14:	mov	r5, #0
   15f18:	movt	r8, #1
   15f1c:	mov	r0, r4
   15f20:	bl	15c68 <print_json_data@@Base+0xdc>
   15f24:	cmp	r5, r7
   15f28:	bge	15f48 <print_json_data@@Base+0x3bc>
   15f2c:	mov	r0, r8
   15f30:	bl	16438 <print_json_data@@Base+0x8ac>
   15f34:	mov	r0, r4
   15f38:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   15f3c:	cmp	r0, #0
   15f40:	beq	15f48 <print_json_data@@Base+0x3bc>
   15f44:	bl	17c44 <handle_coda_error@@Base>
   15f48:	add	r5, r5, #1
   15f4c:	cmp	r6, r5
   15f50:	bne	15f1c <print_json_data@@Base+0x390>
   15f54:	mov	r0, r4
   15f58:	bl	12850 <coda_cursor_goto_parent@plt>
   15f5c:	movw	r0, #40560	; 0x9e70
   15f60:	movt	r0, #1
   15f64:	b	16334 <print_json_data@@Base+0x7a8>
   15f68:	sub	r1, fp, #36	; 0x24
   15f6c:	mov	r0, r4
   15f70:	bl	127b4 <coda_cursor_get_special_type@plt>
   15f74:	cmp	r0, #0
   15f78:	beq	15f80 <print_json_data@@Base+0x3f4>
   15f7c:	bl	17c44 <handle_coda_error@@Base>
   15f80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f84:	cmp	r0, #3
   15f88:	bhi	163e0 <print_json_data@@Base+0x854>
   15f8c:	add	r1, pc, #0
   15f90:	ldr	pc, [r1, r0, lsl #2]
   15f94:	andeq	r5, r1, r4, lsr #31
   15f98:	andeq	r6, r1, ip, lsr r3
   15f9c:	andeq	r6, r1, ip, asr r3
   15fa0:	andeq	r6, r1, r8, lsr #7
   15fa4:	movw	r0, #40235	; 0x9d2b
   15fa8:	movt	r0, #1
   15fac:	b	16334 <print_json_data@@Base+0x7a8>
   15fb0:	add	r1, sp, #16
   15fb4:	mov	r0, r4
   15fb8:	bl	1270c <coda_cursor_read_uint32@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fc8 <print_json_data@@Base+0x43c>
   15fc4:	bl	17c44 <handle_coda_error@@Base>
   15fc8:	ldr	r1, [sp, #16]
   15fcc:	movw	r0, #38679	; 0x9717
   15fd0:	movt	r0, #1
   15fd4:	b	16078 <print_json_data@@Base+0x4ec>
   15fd8:	add	r1, sp, #16
   15fdc:	mov	r0, r4
   15fe0:	bl	12898 <coda_cursor_read_double@plt>
   15fe4:	cmp	r0, #0
   15fe8:	beq	15ff0 <print_json_data@@Base+0x464>
   15fec:	bl	17c44 <handle_coda_error@@Base>
   15ff0:	vldr	d16, [sp, #16]
   15ff4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ff8:	vmov	r2, r3, d16
   15ffc:	cmp	r0, #8
   16000:	bne	1639c <print_json_data@@Base+0x810>
   16004:	movw	r0, #38683	; 0x971b
   16008:	movt	r0, #1
   1600c:	b	163dc <print_json_data@@Base+0x850>
   16010:	add	r1, sp, #8
   16014:	mov	r0, r4
   16018:	bl	129a0 <coda_cursor_read_int64@plt>
   1601c:	cmp	r0, #0
   16020:	beq	16028 <print_json_data@@Base+0x49c>
   16024:	bl	17c44 <handle_coda_error@@Base>
   16028:	ldr	r0, [sp, #8]
   1602c:	ldr	r1, [sp, #12]
   16030:	add	r4, sp, #16
   16034:	mov	r2, r4
   16038:	bl	12aa8 <coda_str64@plt>
   1603c:	b	1606c <print_json_data@@Base+0x4e0>
   16040:	add	r1, sp, #8
   16044:	mov	r0, r4
   16048:	bl	1288c <coda_cursor_read_uint64@plt>
   1604c:	cmp	r0, #0
   16050:	beq	16058 <print_json_data@@Base+0x4cc>
   16054:	bl	17c44 <handle_coda_error@@Base>
   16058:	ldr	r0, [sp, #8]
   1605c:	ldr	r1, [sp, #12]
   16060:	add	r4, sp, #16
   16064:	mov	r2, r4
   16068:	bl	126dc <coda_str64u@plt>
   1606c:	movw	r0, #40497	; 0x9e31
   16070:	mov	r1, r4
   16074:	movt	r0, #1
   16078:	bl	16438 <print_json_data@@Base+0x8ac>
   1607c:	b	163e0 <print_json_data@@Base+0x854>
   16080:	add	r1, sp, #16
   16084:	mov	r0, r4
   16088:	bl	128f8 <coda_cursor_read_char@plt>
   1608c:	cmp	r0, #0
   16090:	beq	16098 <print_json_data@@Base+0x50c>
   16094:	bl	17c44 <handle_coda_error@@Base>
   16098:	movw	r4, #40308	; 0x9d74
   1609c:	movt	r4, #1
   160a0:	mov	r0, r4
   160a4:	bl	16438 <print_json_data@@Base+0x8ac>
   160a8:	add	r0, sp, #16
   160ac:	mov	r1, #1
   160b0:	bl	16480 <print_json_data@@Base+0x8f4>
   160b4:	mov	r0, r4
   160b8:	b	16334 <print_json_data@@Base+0x7a8>
   160bc:	add	r1, sp, #16
   160c0:	mov	r0, r4
   160c4:	bl	12880 <coda_cursor_get_string_length@plt>
   160c8:	cmp	r0, #0
   160cc:	beq	160d4 <print_json_data@@Base+0x548>
   160d0:	bl	17c44 <handle_coda_error@@Base>
   160d4:	ldr	r0, [sp, #16]
   160d8:	add	r6, r0, #1
   160dc:	mov	r0, r6
   160e0:	bl	12820 <malloc@plt>
   160e4:	mov	r5, r0
   160e8:	cmp	r0, #0
   160ec:	bne	16120 <print_json_data@@Base+0x594>
   160f0:	movw	r1, #38521	; 0x9679
   160f4:	movw	r3, #40161	; 0x9ce1
   160f8:	movw	r0, #303	; 0x12f
   160fc:	mov	r2, r6
   16100:	str	r0, [sp]
   16104:	movt	r1, #1
   16108:	movt	r3, #1
   1610c:	mvn	r0, #0
   16110:	bl	126a0 <coda_set_error@plt>
   16114:	bl	17c44 <handle_coda_error@@Base>
   16118:	ldr	r0, [sp, #16]
   1611c:	add	r6, r0, #1
   16120:	mov	r0, r4
   16124:	mov	r1, r5
   16128:	mov	r2, r6
   1612c:	bl	12844 <coda_cursor_read_string@plt>
   16130:	cmp	r0, #0
   16134:	beq	1613c <print_json_data@@Base+0x5b0>
   16138:	bl	17c44 <handle_coda_error@@Base>
   1613c:	movw	r4, #40308	; 0x9d74
   16140:	movt	r4, #1
   16144:	mov	r0, r4
   16148:	bl	16438 <print_json_data@@Base+0x8ac>
   1614c:	ldr	r1, [sp, #16]
   16150:	mov	r0, r5
   16154:	bl	16480 <print_json_data@@Base+0x8f4>
   16158:	ldr	r1, [sp, #16]
   1615c:	mov	r0, r4
   16160:	bl	16438 <print_json_data@@Base+0x8ac>
   16164:	mov	r0, r5
   16168:	b	16230 <print_json_data@@Base+0x6a4>
   1616c:	add	r1, sp, #16
   16170:	mov	r0, r4
   16174:	bl	12a00 <coda_cursor_get_bit_size@plt>
   16178:	cmp	r0, #0
   1617c:	beq	16184 <print_json_data@@Base+0x5f8>
   16180:	bl	17c44 <handle_coda_error@@Base>
   16184:	ldr	r7, [sp, #16]
   16188:	ldr	r6, [sp, #20]
   1618c:	lsr	r0, r7, #3
   16190:	tst	r7, #7
   16194:	orr	r5, r0, r6, lsl #29
   16198:	addne	r5, r5, #1
   1619c:	mov	r0, r5
   161a0:	bl	12820 <malloc@plt>
   161a4:	mov	r8, r0
   161a8:	cmp	r0, #0
   161ac:	bne	161e0 <print_json_data@@Base+0x654>
   161b0:	movw	r1, #38521	; 0x9679
   161b4:	movw	r3, #40161	; 0x9ce1
   161b8:	movw	r0, #334	; 0x14e
   161bc:	mov	r2, r5
   161c0:	str	r0, [sp]
   161c4:	movt	r1, #1
   161c8:	movt	r3, #1
   161cc:	mvn	r0, #0
   161d0:	bl	126a0 <coda_set_error@plt>
   161d4:	bl	17c44 <handle_coda_error@@Base>
   161d8:	ldr	r7, [sp, #16]
   161dc:	ldr	r6, [sp, #20]
   161e0:	mov	r0, r4
   161e4:	mov	r1, r8
   161e8:	mov	r2, #0
   161ec:	mov	r3, #0
   161f0:	str	r7, [sp]
   161f4:	str	r6, [sp, #4]
   161f8:	bl	12a9c <coda_cursor_read_bits@plt>
   161fc:	cmp	r0, #0
   16200:	beq	16208 <print_json_data@@Base+0x67c>
   16204:	bl	17c44 <handle_coda_error@@Base>
   16208:	movw	r4, #40308	; 0x9d74
   1620c:	movt	r4, #1
   16210:	mov	r0, r4
   16214:	bl	16438 <print_json_data@@Base+0x8ac>
   16218:	mov	r0, r8
   1621c:	mov	r1, r5
   16220:	bl	16480 <print_json_data@@Base+0x8f4>
   16224:	mov	r0, r4
   16228:	bl	16438 <print_json_data@@Base+0x8ac>
   1622c:	mov	r0, r8
   16230:	bl	126e8 <free@plt>
   16234:	b	163e0 <print_json_data@@Base+0x854>
   16238:	mov	r0, r4
   1623c:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   16240:	cmp	r0, #0
   16244:	beq	1624c <print_json_data@@Base+0x6c0>
   16248:	bl	17c44 <handle_coda_error@@Base>
   1624c:	ldr	r0, [sp, #16]
   16250:	mov	r1, #0
   16254:	str	r1, [fp, #-40]	; 0xffffffd8
   16258:	cmp	r0, #1
   1625c:	blt	16324 <print_json_data@@Base+0x798>
   16260:	movw	r8, #39240	; 0x9948
   16264:	movw	r6, #40153	; 0x9cd9
   16268:	mov	r7, #1
   1626c:	add	r5, sp, #48	; 0x30
   16270:	sub	r9, fp, #44	; 0x2c
   16274:	movt	r8, #1
   16278:	movt	r6, #1
   1627c:	ldr	r0, [sp, #8]
   16280:	mov	r2, r5
   16284:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16288:	cmp	r0, #0
   1628c:	beq	16294 <print_json_data@@Base+0x708>
   16290:	bl	17c44 <handle_coda_error@@Base>
   16294:	ldr	r0, [sp, #48]	; 0x30
   16298:	cmp	r0, #0
   1629c:	bne	162e4 <print_json_data@@Base+0x758>
   162a0:	cmp	r7, #0
   162a4:	bne	162b0 <print_json_data@@Base+0x724>
   162a8:	mov	r0, r8
   162ac:	bl	16438 <print_json_data@@Base+0x8ac>
   162b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162b4:	ldr	r0, [sp, #8]
   162b8:	mov	r2, r9
   162bc:	bl	12a78 <coda_type_get_record_field_name@plt>
   162c0:	cmp	r0, #0
   162c4:	beq	162cc <print_json_data@@Base+0x740>
   162c8:	bl	17c44 <handle_coda_error@@Base>
   162cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162d0:	mov	r0, r6
   162d4:	bl	16438 <print_json_data@@Base+0x8ac>
   162d8:	mov	r0, r4
   162dc:	bl	15c68 <print_json_data@@Base+0xdc>
   162e0:	mov	r7, #0
   162e4:	ldr	r0, [sp, #16]
   162e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   162ec:	sub	r0, r0, #1
   162f0:	cmp	r1, r0
   162f4:	bge	1630c <print_json_data@@Base+0x780>
   162f8:	mov	r0, r4
   162fc:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   16300:	cmp	r0, #0
   16304:	beq	1630c <print_json_data@@Base+0x780>
   16308:	bl	17c44 <handle_coda_error@@Base>
   1630c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16310:	add	r1, r0, #1
   16314:	ldr	r0, [sp, #16]
   16318:	str	r1, [fp, #-40]	; 0xffffffd8
   1631c:	cmp	r1, r0
   16320:	blt	1627c <print_json_data@@Base+0x6f0>
   16324:	mov	r0, r4
   16328:	bl	12850 <coda_cursor_goto_parent@plt>
   1632c:	movw	r0, #40159	; 0x9cdf
   16330:	movt	r0, #1
   16334:	bl	16438 <print_json_data@@Base+0x8ac>
   16338:	b	163e0 <print_json_data@@Base+0x854>
   1633c:	add	r1, sp, #16
   16340:	mov	r0, r4
   16344:	bl	12898 <coda_cursor_read_double@plt>
   16348:	cmp	r0, #0
   1634c:	beq	16354 <print_json_data@@Base+0x7c8>
   16350:	bl	17c44 <handle_coda_error@@Base>
   16354:	vldr	d16, [sp, #16]
   16358:	b	16398 <print_json_data@@Base+0x80c>
   1635c:	add	r1, sp, #8
   16360:	mov	r0, r4
   16364:	bl	12898 <coda_cursor_read_double@plt>
   16368:	cmp	r0, #0
   1636c:	beq	16374 <print_json_data@@Base+0x7e8>
   16370:	bl	17c44 <handle_coda_error@@Base>
   16374:	vldr	d0, [sp, #8]
   16378:	bl	128a4 <coda_isNaN@plt>
   1637c:	cmp	r0, #0
   16380:	bne	16394 <print_json_data@@Base+0x808>
   16384:	vldr	d0, [sp, #8]
   16388:	bl	12748 <coda_isInf@plt>
   1638c:	cmp	r0, #0
   16390:	beq	16400 <print_json_data@@Base+0x874>
   16394:	vldr	d16, [sp, #8]
   16398:	vmov	r2, r3, d16
   1639c:	movw	r0, #38688	; 0x9720
   163a0:	movt	r0, #1
   163a4:	b	163dc <print_json_data@@Base+0x850>
   163a8:	add	r1, sp, #16
   163ac:	add	r2, sp, #8
   163b0:	mov	r0, r4
   163b4:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   163b8:	cmp	r0, #0
   163bc:	beq	163c4 <print_json_data@@Base+0x838>
   163c0:	bl	17c44 <handle_coda_error@@Base>
   163c4:	vldr	d16, [sp, #16]
   163c8:	vldr	d17, [sp, #8]
   163cc:	movw	r0, #40296	; 0x9d68
   163d0:	movt	r0, #1
   163d4:	vmov	r2, r3, d16
   163d8:	vstr	d17, [sp]
   163dc:	bl	16438 <print_json_data@@Base+0x8ac>
   163e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163e4:	cmp	r0, #0
   163e8:	beq	163f8 <print_json_data@@Base+0x86c>
   163ec:	movw	r0, #40159	; 0x9cdf
   163f0:	movt	r0, #1
   163f4:	bl	16438 <print_json_data@@Base+0x8ac>
   163f8:	sub	sp, fp, #24
   163fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16400:	vldr	d0, [sp, #8]
   16404:	movw	r0, #40240	; 0x9d30
   16408:	add	r1, sp, #16
   1640c:	movt	r0, #1
   16410:	bl	126c4 <coda_time_double_to_string@plt>
   16414:	cmp	r0, #0
   16418:	beq	16428 <print_json_data@@Base+0x89c>
   1641c:	movw	r0, #40269	; 0x9d4d
   16420:	movt	r0, #1
   16424:	b	16334 <print_json_data@@Base+0x7a8>
   16428:	movw	r0, #40563	; 0x9e73
   1642c:	add	r1, sp, #16
   16430:	movt	r0, #1
   16434:	b	16078 <print_json_data@@Base+0x4ec>
   16438:	sub	sp, sp, #12
   1643c:	push	{fp, lr}
   16440:	mov	fp, sp
   16444:	sub	sp, sp, #4
   16448:	mov	ip, r0
   1644c:	add	r0, fp, #8
   16450:	stm	r0, {r1, r2, r3}
   16454:	movw	r0, #53392	; 0xd090
   16458:	add	r2, fp, #8
   1645c:	mov	r1, ip
   16460:	movt	r0, #2
   16464:	str	r2, [sp]
   16468:	ldr	r0, [r0]
   1646c:	bl	129ac <vfprintf@plt>
   16470:	mov	sp, fp
   16474:	pop	{fp, lr}
   16478:	add	sp, sp, #12
   1647c:	bx	lr
   16480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16484:	add	fp, sp, #28
   16488:	sub	sp, sp, #4
   1648c:	cmp	r1, #1
   16490:	blt	16580 <print_json_data@@Base+0x9f4>
   16494:	movw	r6, #38652	; 0x96fc
   16498:	movw	r8, #38655	; 0x96ff
   1649c:	movw	r9, #38658	; 0x9702
   164a0:	movw	sl, #38664	; 0x9708
   164a4:	movw	r7, #38667	; 0x970b
   164a8:	mov	r4, r1
   164ac:	mov	r5, r0
   164b0:	movt	r6, #1
   164b4:	movt	r8, #1
   164b8:	movt	r9, #1
   164bc:	movt	sl, #1
   164c0:	movt	r7, #1
   164c4:	b	164d8 <print_json_data@@Base+0x94c>
   164c8:	movw	r0, #40310	; 0x9d76
   164cc:	movt	r0, #1
   164d0:	bl	16438 <print_json_data@@Base+0x8ac>
   164d4:	b	16574 <print_json_data@@Base+0x9e8>
   164d8:	ldrb	r1, [r5]
   164dc:	sub	r0, r1, #8
   164e0:	cmp	r0, #5
   164e4:	bhi	16510 <print_json_data@@Base+0x984>
   164e8:	add	r2, pc, #0
   164ec:	ldr	pc, [r2, r0, lsl #2]
   164f0:	andeq	r6, r1, r8, lsl #10
   164f4:	andeq	r6, r1, r8, asr #10
   164f8:	andeq	r6, r1, r0, asr r5
   164fc:	andeq	r6, r1, ip, lsr #10
   16500:	andeq	r6, r1, r8, asr r5
   16504:	andeq	r6, r1, r0, ror #10
   16508:	mov	r0, r6
   1650c:	b	16570 <print_json_data@@Base+0x9e4>
   16510:	cmp	r1, #34	; 0x22
   16514:	beq	16568 <print_json_data@@Base+0x9dc>
   16518:	cmp	r1, #92	; 0x5c
   1651c:	bne	1652c <print_json_data@@Base+0x9a0>
   16520:	movw	r0, #38670	; 0x970e
   16524:	movt	r0, #1
   16528:	b	16570 <print_json_data@@Base+0x9e4>
   1652c:	sub	r0, r1, #32
   16530:	uxtb	r0, r0
   16534:	cmp	r0, #94	; 0x5e
   16538:	bhi	164c8 <print_json_data@@Base+0x93c>
   1653c:	movw	r0, #39089	; 0x98b1
   16540:	movt	r0, #1
   16544:	b	164d0 <print_json_data@@Base+0x944>
   16548:	mov	r0, r8
   1654c:	b	16570 <print_json_data@@Base+0x9e4>
   16550:	mov	r0, r9
   16554:	b	16570 <print_json_data@@Base+0x9e4>
   16558:	mov	r0, sl
   1655c:	b	16570 <print_json_data@@Base+0x9e4>
   16560:	mov	r0, r7
   16564:	b	16570 <print_json_data@@Base+0x9e4>
   16568:	movw	r0, #40307	; 0x9d73
   1656c:	movt	r0, #1
   16570:	bl	16438 <print_json_data@@Base+0x8ac>
   16574:	subs	r4, r4, #1
   16578:	add	r5, r5, #1
   1657c:	bne	164d8 <print_json_data@@Base+0x94c>
   16580:	sub	sp, fp, #28
   16584:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016588 <print_full_field_name@@Base>:
   16588:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1658c:	add	fp, sp, #28
   16590:	sub	sp, sp, #12
   16594:	mov	sl, r2
   16598:	mov	r4, r0
   1659c:	cmp	r1, #1
   165a0:	bne	166b4 <print_full_field_name@@Base+0x12c>
   165a4:	movw	r5, #49640	; 0xc1e8
   165a8:	mov	r6, #0
   165ac:	str	sl, [sp]
   165b0:	movt	r5, #2
   165b4:	ldr	r0, [r5, #136]	; 0x88
   165b8:	cmp	r0, #1
   165bc:	blt	16680 <print_full_field_name@@Base+0xf8>
   165c0:	movw	r9, #40317	; 0x9d7d
   165c4:	add	sl, sp, #8
   165c8:	mov	r7, #0
   165cc:	mov	r8, #0
   165d0:	movt	r9, #1
   165d4:	add	r0, r5, r8, lsl #2
   165d8:	mov	r1, sl
   165dc:	ldr	r0, [r0, #8]
   165e0:	bl	12ac0 <coda_type_get_class@plt>
   165e4:	cmp	r0, #0
   165e8:	beq	165f0 <print_full_field_name@@Base+0x68>
   165ec:	bl	17c44 <handle_coda_error@@Base>
   165f0:	ldr	r0, [sp, #8]
   165f4:	cmp	r0, #1
   165f8:	beq	16620 <print_full_field_name@@Base+0x98>
   165fc:	cmp	r0, #0
   16600:	bne	16670 <print_full_field_name@@Base+0xe8>
   16604:	add	r0, r5, r7, lsl #2
   16608:	mov	r1, r9
   1660c:	ldr	r2, [r0, #3620]	; 0xe24
   16610:	mov	r0, r4
   16614:	bl	128b0 <fprintf@plt>
   16618:	add	r7, r7, #1
   1661c:	b	16670 <print_full_field_name@@Base+0xe8>
   16620:	cmp	r8, #0
   16624:	bne	16634 <print_full_field_name@@Base+0xac>
   16628:	mov	r0, #47	; 0x2f
   1662c:	mov	r1, r4
   16630:	bl	129e8 <fputc@plt>
   16634:	add	r0, r6, r6, lsl #2
   16638:	add	r0, r5, r0, lsl #4
   1663c:	ldr	r0, [r0, #804]	; 0x324
   16640:	cmp	r0, #1
   16644:	blt	1666c <print_full_field_name@@Base+0xe4>
   16648:	mov	r0, #91	; 0x5b
   1664c:	mov	r1, r4
   16650:	bl	129e8 <fputc@plt>
   16654:	mov	r0, r4
   16658:	mov	r1, r6
   1665c:	bl	16834 <print_full_field_name@@Base+0x2ac>
   16660:	mov	r0, #93	; 0x5d
   16664:	mov	r1, r4
   16668:	bl	129e8 <fputc@plt>
   1666c:	add	r6, r6, #1
   16670:	ldr	r0, [r5, #136]	; 0x88
   16674:	add	r8, r8, #1
   16678:	cmp	r8, r0
   1667c:	blt	165d4 <print_full_field_name@@Base+0x4c>
   16680:	ldr	r0, [sp]
   16684:	cmp	r0, #0
   16688:	beq	1682c <print_full_field_name@@Base+0x2a4>
   1668c:	ldr	r0, [r5, #3360]	; 0xd20
   16690:	cmp	r6, r0
   16694:	bge	1682c <print_full_field_name@@Base+0x2a4>
   16698:	mov	r0, #91	; 0x5b
   1669c:	mov	r1, r4
   166a0:	bl	129e8 <fputc@plt>
   166a4:	mov	r0, r4
   166a8:	mov	r1, r6
   166ac:	bl	16834 <print_full_field_name@@Base+0x2ac>
   166b0:	b	16820 <print_full_field_name@@Base+0x298>
   166b4:	movw	r7, #49640	; 0xc1e8
   166b8:	mov	r5, r1
   166bc:	movt	r7, #2
   166c0:	ldr	r0, [r7, #3748]	; 0xea4
   166c4:	cmp	r0, #1
   166c8:	blt	16704 <print_full_field_name@@Base+0x17c>
   166cc:	mov	r6, #0
   166d0:	cmp	r6, #0
   166d4:	beq	166e4 <print_full_field_name@@Base+0x15c>
   166d8:	mov	r0, #46	; 0x2e
   166dc:	mov	r1, r4
   166e0:	bl	129e8 <fputc@plt>
   166e4:	add	r0, r7, r6, lsl #2
   166e8:	mov	r1, r4
   166ec:	ldr	r0, [r0, #3620]	; 0xe24
   166f0:	bl	12a84 <fputs@plt>
   166f4:	ldr	r0, [r7, #3748]	; 0xea4
   166f8:	add	r6, r6, #1
   166fc:	cmp	r6, r0
   16700:	blt	166d0 <print_full_field_name@@Base+0x148>
   16704:	cmp	r5, #2
   16708:	bne	1682c <print_full_field_name@@Base+0x2a4>
   1670c:	ldr	r0, [r7, #136]	; 0x88
   16710:	mov	r6, #0
   16714:	cmp	r0, #1
   16718:	blt	167b8 <print_full_field_name@@Base+0x230>
   1671c:	movw	r9, #40321	; 0x9d81
   16720:	add	r8, sp, #4
   16724:	mov	r5, #0
   16728:	movt	r9, #1
   1672c:	add	r0, r7, r5, lsl #2
   16730:	mov	r1, r8
   16734:	ldr	r0, [r0, #8]
   16738:	bl	12ac0 <coda_type_get_class@plt>
   1673c:	cmp	r0, #0
   16740:	beq	16748 <print_full_field_name@@Base+0x1c0>
   16744:	bl	17c44 <handle_coda_error@@Base>
   16748:	ldr	r0, [sp, #4]
   1674c:	cmp	r0, #1
   16750:	bne	167a8 <print_full_field_name@@Base+0x220>
   16754:	add	r0, r6, r6, lsl #2
   16758:	add	r0, r7, r0, lsl #4
   1675c:	ldr	r1, [r0, #804]	; 0x324
   16760:	cmp	r1, #1
   16764:	blt	167a8 <print_full_field_name@@Base+0x220>
   16768:	ldr	r0, [r0, #800]	; 0x320
   1676c:	cmp	r0, #0
   16770:	beq	16784 <print_full_field_name@@Base+0x1fc>
   16774:	mov	r0, #44	; 0x2c
   16778:	mov	r1, r4
   1677c:	bl	129e8 <fputc@plt>
   16780:	b	16798 <print_full_field_name@@Base+0x210>
   16784:	mov	r0, r9
   16788:	mov	r1, #2
   1678c:	mov	r2, #1
   16790:	mov	r3, r4
   16794:	bl	127cc <fwrite@plt>
   16798:	mov	r0, r4
   1679c:	mov	r1, r6
   167a0:	bl	16834 <print_full_field_name@@Base+0x2ac>
   167a4:	add	r6, r6, #1
   167a8:	ldr	r0, [r7, #136]	; 0x88
   167ac:	add	r5, r5, #1
   167b0:	cmp	r5, r0
   167b4:	blt	1672c <print_full_field_name@@Base+0x1a4>
   167b8:	cmp	sl, #0
   167bc:	beq	16818 <print_full_field_name@@Base+0x290>
   167c0:	ldr	r0, [r7, #3360]	; 0xd20
   167c4:	cmp	r6, r0
   167c8:	bge	16818 <print_full_field_name@@Base+0x290>
   167cc:	add	r0, r6, r6, lsl #2
   167d0:	add	r0, r7, r0, lsl #4
   167d4:	ldr	r0, [r0, #800]	; 0x320
   167d8:	cmp	r0, #0
   167dc:	beq	167f0 <print_full_field_name@@Base+0x268>
   167e0:	mov	r0, #44	; 0x2c
   167e4:	mov	r1, r4
   167e8:	bl	129e8 <fputc@plt>
   167ec:	b	16808 <print_full_field_name@@Base+0x280>
   167f0:	movw	r0, #40321	; 0x9d81
   167f4:	mov	r1, #2
   167f8:	mov	r2, #1
   167fc:	mov	r3, r4
   16800:	movt	r0, #1
   16804:	bl	127cc <fwrite@plt>
   16808:	mov	r0, r4
   1680c:	mov	r1, r6
   16810:	bl	16834 <print_full_field_name@@Base+0x2ac>
   16814:	add	r6, r6, #1
   16818:	cmp	r6, #1
   1681c:	blt	1682c <print_full_field_name@@Base+0x2a4>
   16820:	mov	r0, #93	; 0x5d
   16824:	mov	r1, r4
   16828:	bl	129e8 <fputc@plt>
   1682c:	sub	sp, fp, #28
   16830:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16834:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16838:	add	fp, sp, #28
   1683c:	sub	sp, sp, #4
   16840:	mov	r4, r0
   16844:	add	r0, r1, r1, lsl #2
   16848:	movw	r1, #49640	; 0xc1e8
   1684c:	movt	r1, #2
   16850:	add	r0, r1, r0, lsl #4
   16854:	mov	r7, r0
   16858:	ldr	r1, [r7, #804]!	; 0x324
   1685c:	cmp	r1, #1
   16860:	blt	16914 <print_full_field_name@@Base+0x38c>
   16864:	movw	r8, #49636	; 0xc1e4
   16868:	movw	r9, #53424	; 0xd0b0
   1686c:	add	sl, r0, #808	; 0x328
   16870:	add	r5, r0, #800	; 0x320
   16874:	mov	r6, #0
   16878:	movt	r8, #2
   1687c:	movt	r9, #2
   16880:	cmp	r6, #0
   16884:	beq	16894 <print_full_field_name@@Base+0x30c>
   16888:	mov	r0, #44	; 0x2c
   1688c:	mov	r1, r4
   16890:	bl	129e8 <fputc@plt>
   16894:	ldr	r0, [r8]
   16898:	cmp	r0, #0
   1689c:	beq	168d4 <print_full_field_name@@Base+0x34c>
   168a0:	ldr	r0, [r5]
   168a4:	add	r0, r6, r0
   168a8:	add	r0, r9, r0, lsl #2
   168ac:	ldr	r1, [r0, #72]	; 0x48
   168b0:	cmp	r1, #0
   168b4:	beq	168f0 <print_full_field_name@@Base+0x368>
   168b8:	ldr	r3, [r0, #4]
   168bc:	ldr	r2, [r0, #36]	; 0x24
   168c0:	movw	r1, #40324	; 0x9d84
   168c4:	mov	r0, r4
   168c8:	movt	r1, #1
   168cc:	bl	128b0 <fprintf@plt>
   168d0:	b	16904 <print_full_field_name@@Base+0x37c>
   168d4:	ldr	r2, [sl, r6, lsl #2]
   168d8:	cmn	r2, #1
   168dc:	bne	168f4 <print_full_field_name@@Base+0x36c>
   168e0:	mov	r0, #63	; 0x3f
   168e4:	mov	r1, r4
   168e8:	bl	129e8 <fputc@plt>
   168ec:	b	16904 <print_full_field_name@@Base+0x37c>
   168f0:	ldr	r2, [r0, #4]
   168f4:	movw	r1, #40328	; 0x9d88
   168f8:	mov	r0, r4
   168fc:	movt	r1, #1
   16900:	bl	128b0 <fprintf@plt>
   16904:	ldr	r0, [r7]
   16908:	add	r6, r6, #1
   1690c:	cmp	r6, r0
   16910:	blt	16880 <print_full_field_name@@Base+0x2f8>
   16914:	sub	sp, fp, #28
   16918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001691c <traverse_info_init@@Base>:
   1691c:	movw	r0, #49640	; 0xc1e8
   16920:	mov	r1, #0
   16924:	movt	r0, #2
   16928:	str	r1, [r0, #136]	; 0x88
   1692c:	str	r1, [r0, #4]
   16930:	str	r1, [r0, #3360]	; 0xd20
   16934:	str	r1, [r0, #3748]	; 0xea4
   16938:	bx	lr

0001693c <traverse_info_done@@Base>:
   1693c:	push	{r4, sl, fp, lr}
   16940:	add	fp, sp, #8
   16944:	movw	r4, #49640	; 0xc1e8
   16948:	movt	r4, #2
   1694c:	ldr	r0, [r4, #4]
   16950:	cmp	r0, #0
   16954:	beq	1695c <traverse_info_done@@Base+0x20>
   16958:	bl	12994 <coda_close@plt>
   1695c:	ldr	r0, [r4, #664]	; 0x298
   16960:	cmp	r0, #0
   16964:	popeq	{r4, sl, fp, pc}
   16968:	add	r0, r4, #664	; 0x298
   1696c:	pop	{r4, sl, fp, lr}
   16970:	b	15710 <codadump_filter_remove@@Base>

00016974 <traverse_product@@Base>:
   16974:	push	{r4, r5, fp, lr}
   16978:	add	fp, sp, #8
   1697c:	movw	r5, #49640	; 0xc1e8
   16980:	movt	r5, #2
   16984:	mov	r1, r5
   16988:	ldr	r0, [r1], #4
   1698c:	bl	126ac <coda_open@plt>
   16990:	cmp	r0, #0
   16994:	beq	169d4 <traverse_product@@Base+0x60>
   16998:	bl	12a60 <coda_get_errno@plt>
   1699c:	ldr	r0, [r0]
   169a0:	cmn	r0, #21
   169a4:	bne	169d0 <traverse_product@@Base+0x5c>
   169a8:	mov	r0, #0
   169ac:	bl	126f4 <coda_set_option_use_mmap@plt>
   169b0:	mov	r1, r5
   169b4:	ldr	r0, [r1], #4
   169b8:	bl	126ac <coda_open@plt>
   169bc:	mov	r4, r0
   169c0:	mov	r0, #1
   169c4:	bl	126f4 <coda_set_option_use_mmap@plt>
   169c8:	cmp	r4, #0
   169cc:	beq	169d4 <traverse_product@@Base+0x60>
   169d0:	bl	17c44 <handle_coda_error@@Base>
   169d4:	ldr	r1, [r5, #4]
   169d8:	add	r4, r5, #144	; 0x90
   169dc:	mov	r0, r4
   169e0:	bl	127d8 <coda_cursor_set_product@plt>
   169e4:	cmp	r0, #0
   169e8:	beq	169f0 <traverse_product@@Base+0x7c>
   169ec:	bl	17c44 <handle_coda_error@@Base>
   169f0:	ldr	r0, [r5, #136]	; 0x88
   169f4:	add	r0, r5, r0, lsl #2
   169f8:	add	r1, r0, #8
   169fc:	mov	r0, r4
   16a00:	bl	12730 <coda_cursor_get_type@plt>
   16a04:	cmp	r0, #0
   16a08:	beq	16a10 <traverse_product@@Base+0x9c>
   16a0c:	bl	17c44 <handle_coda_error@@Base>
   16a10:	bl	16a28 <traverse_product@@Base+0xb4>
   16a14:	ldr	r0, [r5, #4]
   16a18:	bl	12994 <coda_close@plt>
   16a1c:	mov	r0, #0
   16a20:	str	r0, [r5, #4]
   16a24:	pop	{r4, r5, fp, pc}
   16a28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16a2c:	add	fp, sp, #24
   16a30:	sub	sp, sp, #16
   16a34:	movw	r6, #49640	; 0xc1e8
   16a38:	add	r1, sp, #12
   16a3c:	movt	r6, #2
   16a40:	ldr	r0, [r6, #136]	; 0x88
   16a44:	add	r0, r6, r0, lsl #2
   16a48:	ldr	r0, [r0, #8]
   16a4c:	bl	12ac0 <coda_type_get_class@plt>
   16a50:	cmp	r0, #0
   16a54:	beq	16a5c <traverse_product@@Base+0xe8>
   16a58:	bl	17c44 <handle_coda_error@@Base>
   16a5c:	ldr	r0, [sp, #12]
   16a60:	cmp	r0, #6
   16a64:	bhi	16ca8 <traverse_product@@Base+0x334>
   16a68:	add	r1, pc, #0
   16a6c:	ldr	pc, [r1, r0, lsl #2]
   16a70:	andeq	r6, r1, r4, ror #21
   16a74:	andeq	r6, r1, r0, ror #23
   16a78:	andeq	r6, r1, ip, lsl #21
   16a7c:	andeq	r6, r1, ip, lsl #21
   16a80:	andeq	r6, r1, ip, lsl #21
   16a84:	andeq	r6, r1, ip, lsl #21
   16a88:	andeq	r6, r1, r8, lsr ip
   16a8c:	ldr	r0, [r6, #136]	; 0x88
   16a90:	add	r1, sp, #8
   16a94:	add	r0, r6, r0, lsl #2
   16a98:	ldr	r0, [r0, #8]
   16a9c:	bl	12874 <coda_type_get_read_type@plt>
   16aa0:	cmp	r0, #0
   16aa4:	beq	16aac <traverse_product@@Base+0x138>
   16aa8:	bl	17c44 <handle_coda_error@@Base>
   16aac:	ldr	r0, [sp, #8]
   16ab0:	sub	r0, r0, #11
   16ab4:	cmp	r0, #1
   16ab8:	bhi	16ca4 <traverse_product@@Base+0x330>
   16abc:	bl	14758 <dim_enter_array@@Base>
   16ac0:	ldr	r0, [r6, #3360]	; 0xd20
   16ac4:	add	r0, r0, #1
   16ac8:	str	r0, [r6, #3360]	; 0xd20
   16acc:	bl	16e60 <traverse_product@@Base+0x4ec>
   16ad0:	ldr	r0, [r6, #3360]	; 0xd20
   16ad4:	sub	r0, r0, #1
   16ad8:	str	r0, [r6, #3360]	; 0xd20
   16adc:	bl	15300 <dim_leave_array@@Base>
   16ae0:	b	16ca8 <traverse_product@@Base+0x334>
   16ae4:	ldr	r0, [r6, #136]	; 0x88
   16ae8:	cmp	r0, #30
   16aec:	bgt	16ca8 <traverse_product@@Base+0x334>
   16af0:	ldr	r1, [r6, #3748]	; 0xea4
   16af4:	add	r0, r6, r0, lsl #2
   16af8:	add	r1, r1, #1
   16afc:	str	r1, [r6, #3748]	; 0xea4
   16b00:	add	r1, sp, #8
   16b04:	ldr	r0, [r0, #8]
   16b08:	bl	1285c <coda_type_get_num_record_fields@plt>
   16b0c:	cmp	r0, #0
   16b10:	beq	16b18 <traverse_product@@Base+0x1a4>
   16b14:	bl	17c44 <handle_coda_error@@Base>
   16b18:	ldr	r0, [r6, #136]	; 0x88
   16b1c:	add	r0, r0, #1
   16b20:	str	r0, [r6, #136]	; 0x88
   16b24:	ldr	r0, [r6, #796]	; 0x31c
   16b28:	add	r0, r6, r0, lsl #2
   16b2c:	ldr	r8, [r0, #664]	; 0x298
   16b30:	cmp	r8, #0
   16b34:	beq	16cb0 <traverse_product@@Base+0x33c>
   16b38:	add	r4, sp, #4
   16b3c:	add	r7, r6, #664	; 0x298
   16b40:	mov	r0, r8
   16b44:	bl	157bc <codadump_filter_get_fieldname@@Base>
   16b48:	cmp	r0, #0
   16b4c:	beq	16d00 <traverse_product@@Base+0x38c>
   16b50:	mov	r5, r0
   16b54:	ldr	r0, [r6, #136]	; 0x88
   16b58:	mov	r2, r4
   16b5c:	mov	r1, r5
   16b60:	add	r0, r6, r0, lsl #2
   16b64:	ldr	r0, [r0, #4]
   16b68:	bl	129c4 <coda_type_get_record_field_index_from_name@plt>
   16b6c:	cmp	r0, #0
   16b70:	beq	16b88 <traverse_product@@Base+0x214>
   16b74:	bl	12a60 <coda_get_errno@plt>
   16b78:	ldr	r0, [r0]
   16b7c:	cmn	r0, #102	; 0x66
   16b80:	beq	16d20 <traverse_product@@Base+0x3ac>
   16b84:	bl	17c44 <handle_coda_error@@Base>
   16b88:	ldr	r0, [r6, #796]	; 0x31c
   16b8c:	ldr	r0, [r7, r0, lsl #2]
   16b90:	bl	157f0 <codadump_filter_get_subfilter@@Base>
   16b94:	ldr	r1, [r6, #796]	; 0x31c
   16b98:	add	r1, r1, #1
   16b9c:	str	r0, [r7, r1, lsl #2]
   16ba0:	ldr	r0, [sp, #4]
   16ba4:	str	r1, [r6, #796]	; 0x31c
   16ba8:	mov	r1, #1
   16bac:	bl	16d44 <traverse_product@@Base+0x3d0>
   16bb0:	ldr	r0, [r6, #796]	; 0x31c
   16bb4:	sub	r0, r0, #1
   16bb8:	str	r0, [r6, #796]	; 0x31c
   16bbc:	ldr	r0, [r7, r0, lsl #2]
   16bc0:	bl	15824 <codadump_filter_get_next_filter@@Base>
   16bc4:	ldr	r1, [r6, #796]	; 0x31c
   16bc8:	cmp	r0, #0
   16bcc:	str	r0, [r7, r1, lsl #2]
   16bd0:	bne	16b44 <traverse_product@@Base+0x1d0>
   16bd4:	add	r0, r7, r1, lsl #2
   16bd8:	str	r8, [r0]
   16bdc:	b	16ce4 <traverse_product@@Base+0x370>
   16be0:	ldr	r0, [r6, #136]	; 0x88
   16be4:	cmp	r0, #30
   16be8:	bgt	16ca8 <traverse_product@@Base+0x334>
   16bec:	bl	14758 <dim_enter_array@@Base>
   16bf0:	ldr	r0, [r6, #3360]	; 0xd20
   16bf4:	add	r2, r6, #8
   16bf8:	add	r0, r0, #1
   16bfc:	str	r0, [r6, #3360]	; 0xd20
   16c00:	ldr	r0, [r6, #136]	; 0x88
   16c04:	add	r1, r0, #1
   16c08:	str	r1, [r6, #136]	; 0x88
   16c0c:	add	r1, r2, r1, lsl #2
   16c10:	ldr	r0, [r2, r0, lsl #2]
   16c14:	bl	1294c <coda_type_get_array_base_type@plt>
   16c18:	cmp	r0, #0
   16c1c:	beq	16c24 <traverse_product@@Base+0x2b0>
   16c20:	bl	17c44 <handle_coda_error@@Base>
   16c24:	bl	16a28 <traverse_product@@Base+0xb4>
   16c28:	ldr	r0, [r6, #136]	; 0x88
   16c2c:	sub	r0, r0, #1
   16c30:	str	r0, [r6, #136]	; 0x88
   16c34:	b	16ad0 <traverse_product@@Base+0x15c>
   16c38:	bl	1264c <coda_get_option_bypass_special_types@plt>
   16c3c:	mov	r2, r0
   16c40:	ldr	r0, [r6, #136]	; 0x88
   16c44:	cmp	r2, #0
   16c48:	add	r1, r6, r0, lsl #2
   16c4c:	ldr	r0, [r1, #8]!
   16c50:	beq	16c6c <traverse_product@@Base+0x2f8>
   16c54:	bl	12a6c <coda_type_get_special_base_type@plt>
   16c58:	cmp	r0, #0
   16c5c:	beq	16c64 <traverse_product@@Base+0x2f0>
   16c60:	bl	17c44 <handle_coda_error@@Base>
   16c64:	bl	16a28 <traverse_product@@Base+0xb4>
   16c68:	b	16ca8 <traverse_product@@Base+0x334>
   16c6c:	add	r1, sp, #8
   16c70:	bl	12928 <coda_type_get_special_type@plt>
   16c74:	cmp	r0, #0
   16c78:	beq	16c80 <traverse_product@@Base+0x30c>
   16c7c:	bl	17c44 <handle_coda_error@@Base>
   16c80:	ldr	r0, [sp, #8]
   16c84:	sub	r1, r0, #1
   16c88:	cmp	r1, #2
   16c8c:	bcc	16ca4 <traverse_product@@Base+0x330>
   16c90:	cmp	r0, #0
   16c94:	beq	16ca8 <traverse_product@@Base+0x334>
   16c98:	cmp	r0, #3
   16c9c:	beq	16abc <traverse_product@@Base+0x148>
   16ca0:	b	16ca8 <traverse_product@@Base+0x334>
   16ca4:	bl	16e60 <traverse_product@@Base+0x4ec>
   16ca8:	sub	sp, fp, #24
   16cac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16cb0:	ldr	r1, [sp, #8]
   16cb4:	mov	r0, #0
   16cb8:	str	r0, [sp, #4]
   16cbc:	cmp	r1, #1
   16cc0:	blt	16ce4 <traverse_product@@Base+0x370>
   16cc4:	mov	r1, #0
   16cc8:	bl	16d44 <traverse_product@@Base+0x3d0>
   16ccc:	ldr	r0, [sp, #4]
   16cd0:	ldr	r1, [sp, #8]
   16cd4:	add	r0, r0, #1
   16cd8:	cmp	r0, r1
   16cdc:	str	r0, [sp, #4]
   16ce0:	blt	16cc4 <traverse_product@@Base+0x350>
   16ce4:	ldr	r0, [r6, #136]	; 0x88
   16ce8:	sub	r0, r0, #1
   16cec:	str	r0, [r6, #136]	; 0x88
   16cf0:	ldr	r0, [r6, #3748]	; 0xea4
   16cf4:	sub	r0, r0, #1
   16cf8:	str	r0, [r6, #3748]	; 0xea4
   16cfc:	b	16ca8 <traverse_product@@Base+0x334>
   16d00:	movw	r0, #40332	; 0x9d8c
   16d04:	movw	r1, #40345	; 0x9d99
   16d08:	movw	r3, #40423	; 0x9de7
   16d0c:	movw	r2, #393	; 0x189
   16d10:	movt	r0, #1
   16d14:	movt	r1, #1
   16d18:	movt	r3, #1
   16d1c:	bl	12ab4 <__assert_fail@plt>
   16d20:	movw	r0, #49584	; 0xc1b0
   16d24:	movw	r1, #40444	; 0x9dfc
   16d28:	mov	r2, r5
   16d2c:	movt	r0, #2
   16d30:	movt	r1, #1
   16d34:	ldr	r0, [r0]
   16d38:	bl	128b0 <fprintf@plt>
   16d3c:	mov	r0, #1
   16d40:	bl	12868 <exit@plt>
   16d44:	push	{r4, r5, r6, sl, fp, lr}
   16d48:	add	fp, sp, #16
   16d4c:	sub	sp, sp, #8
   16d50:	movw	r6, #49640	; 0xc1e8
   16d54:	mov	r4, r0
   16d58:	mov	r5, r1
   16d5c:	add	r2, sp, #4
   16d60:	movt	r6, #2
   16d64:	mov	r1, r4
   16d68:	ldr	r0, [r6, #3748]	; 0xea4
   16d6c:	add	r0, r6, r0, lsl #2
   16d70:	str	r4, [r0, #3488]	; 0xda0
   16d74:	ldr	r0, [r6, #136]	; 0x88
   16d78:	add	r0, r6, r0, lsl #2
   16d7c:	ldr	r0, [r0, #4]
   16d80:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   16d84:	cmp	r0, #0
   16d88:	beq	16d90 <traverse_product@@Base+0x41c>
   16d8c:	bl	17c44 <handle_coda_error@@Base>
   16d90:	cmp	r5, #0
   16d94:	bne	16da4 <traverse_product@@Base+0x430>
   16d98:	ldr	r0, [sp, #4]
   16d9c:	cmp	r0, #0
   16da0:	bne	16e58 <traverse_product@@Base+0x4e4>
   16da4:	movw	r0, #49636	; 0xc1e4
   16da8:	movt	r0, #2
   16dac:	ldr	r0, [r0]
   16db0:	cmp	r0, #0
   16db4:	beq	16e04 <traverse_product@@Base+0x490>
   16db8:	ldr	r0, [r6, #136]	; 0x88
   16dbc:	mov	r2, sp
   16dc0:	mov	r1, r4
   16dc4:	add	r0, r6, r0, lsl #2
   16dc8:	ldr	r0, [r0, #4]
   16dcc:	bl	12760 <coda_type_get_record_field_available_status@plt>
   16dd0:	cmp	r0, #0
   16dd4:	beq	16ddc <traverse_product@@Base+0x468>
   16dd8:	bl	17c44 <handle_coda_error@@Base>
   16ddc:	ldr	r0, [sp]
   16de0:	cmn	r0, #1
   16de4:	bne	16df8 <traverse_product@@Base+0x484>
   16de8:	bl	1542c <dim_record_field_available@@Base>
   16dec:	cmp	r0, #0
   16df0:	beq	16e58 <traverse_product@@Base+0x4e4>
   16df4:	ldr	r0, [sp]
   16df8:	ldr	r1, [r6, #136]	; 0x88
   16dfc:	add	r1, r6, r1, lsl #2
   16e00:	str	r0, [r1, #3360]	; 0xd20
   16e04:	ldr	r0, [r6, #136]	; 0x88
   16e08:	ldr	r1, [r6, #3748]	; 0xea4
   16e0c:	add	r0, r6, r0, lsl #2
   16e10:	add	r1, r6, r1, lsl #2
   16e14:	ldr	r0, [r0, #4]
   16e18:	add	r2, r1, #3616	; 0xe20
   16e1c:	mov	r1, r4
   16e20:	bl	12a78 <coda_type_get_record_field_name@plt>
   16e24:	cmp	r0, #0
   16e28:	beq	16e30 <traverse_product@@Base+0x4bc>
   16e2c:	bl	17c44 <handle_coda_error@@Base>
   16e30:	ldr	r0, [r6, #136]	; 0x88
   16e34:	add	r1, r6, r0, lsl #2
   16e38:	ldr	r0, [r1, #4]
   16e3c:	add	r2, r1, #8
   16e40:	mov	r1, r4
   16e44:	bl	12724 <coda_type_get_record_field_type@plt>
   16e48:	cmp	r0, #0
   16e4c:	beq	16e54 <traverse_product@@Base+0x4e0>
   16e50:	bl	17c44 <handle_coda_error@@Base>
   16e54:	bl	16a28 <traverse_product@@Base+0xb4>
   16e58:	sub	sp, fp, #16
   16e5c:	pop	{r4, r5, r6, sl, fp, pc}
   16e60:	push	{r4, r5, fp, lr}
   16e64:	add	fp, sp, #8
   16e68:	sub	sp, sp, #8
   16e6c:	movw	r0, #53412	; 0xd0a4
   16e70:	movt	r0, #2
   16e74:	ldr	r0, [r0]
   16e78:	cmp	r0, #1
   16e7c:	beq	16f24 <traverse_product@@Base+0x5b0>
   16e80:	cmp	r0, #0
   16e84:	bne	170a4 <traverse_product@@Base+0x730>
   16e88:	movw	r4, #49588	; 0xc1b4
   16e8c:	mov	r1, #1
   16e90:	mov	r2, #0
   16e94:	movt	r4, #2
   16e98:	ldr	r0, [r4]
   16e9c:	bl	16588 <print_full_field_name@@Base>
   16ea0:	movw	r0, #53400	; 0xd098
   16ea4:	movt	r0, #2
   16ea8:	ldr	r0, [r0]
   16eac:	cmp	r0, #0
   16eb0:	beq	16fa0 <traverse_product@@Base+0x62c>
   16eb4:	movw	r5, #49640	; 0xc1e8
   16eb8:	add	r1, sp, #4
   16ebc:	movt	r5, #2
   16ec0:	ldr	r0, [r5, #136]	; 0x88
   16ec4:	add	r0, r5, r0, lsl #2
   16ec8:	ldr	r0, [r0, #8]
   16ecc:	bl	12ac0 <coda_type_get_class@plt>
   16ed0:	cmp	r0, #0
   16ed4:	beq	16edc <traverse_product@@Base+0x568>
   16ed8:	bl	17c44 <handle_coda_error@@Base>
   16edc:	ldr	r0, [sp, #4]
   16ee0:	cmp	r0, #6
   16ee4:	bne	16f30 <traverse_product@@Base+0x5bc>
   16ee8:	ldr	r0, [r5, #136]	; 0x88
   16eec:	mov	r1, sp
   16ef0:	add	r0, r5, r0, lsl #2
   16ef4:	ldr	r0, [r0, #8]
   16ef8:	bl	12928 <coda_type_get_special_type@plt>
   16efc:	cmp	r0, #0
   16f00:	beq	16f08 <traverse_product@@Base+0x594>
   16f04:	bl	17c44 <handle_coda_error@@Base>
   16f08:	ldr	r0, [sp]
   16f0c:	bl	12628 <coda_type_get_special_type_name@plt>
   16f10:	mov	r1, r0
   16f14:	movw	r0, #40496	; 0x9e30
   16f18:	movt	r0, #1
   16f1c:	bl	1267c <printf@plt>
   16f20:	b	16fa0 <traverse_product@@Base+0x62c>
   16f24:	sub	sp, fp, #8
   16f28:	pop	{r4, r5, fp, lr}
   16f2c:	b	12bbc <export_data_element_to_ascii@@Base>
   16f30:	ldr	r0, [r5, #136]	; 0x88
   16f34:	mov	r1, sp
   16f38:	add	r0, r5, r0, lsl #2
   16f3c:	ldr	r0, [r0, #8]
   16f40:	bl	12874 <coda_type_get_read_type@plt>
   16f44:	cmp	r0, #0
   16f48:	beq	16f50 <traverse_product@@Base+0x5dc>
   16f4c:	bl	17c44 <handle_coda_error@@Base>
   16f50:	ldr	r0, [sp]
   16f54:	bl	12970 <coda_type_get_native_type_name@plt>
   16f58:	mov	r1, r0
   16f5c:	movw	r0, #40496	; 0x9e30
   16f60:	movt	r0, #1
   16f64:	bl	1267c <printf@plt>
   16f68:	ldr	r0, [sp]
   16f6c:	sub	r0, r0, #11
   16f70:	cmp	r0, #1
   16f74:	bhi	16fa0 <traverse_product@@Base+0x62c>
   16f78:	mov	r0, #40	; 0x28
   16f7c:	bl	12910 <putchar@plt>
   16f80:	ldr	r1, [r5, #3360]	; 0xd20
   16f84:	cmp	r1, #0
   16f88:	ble	170ac <traverse_product@@Base+0x738>
   16f8c:	ldr	r0, [r4]
   16f90:	sub	r1, r1, #1
   16f94:	bl	16834 <print_full_field_name@@Base+0x2ac>
   16f98:	mov	r0, #41	; 0x29
   16f9c:	bl	12910 <putchar@plt>
   16fa0:	movw	r0, #49632	; 0xc1e0
   16fa4:	movt	r0, #2
   16fa8:	ldr	r0, [r0]
   16fac:	cmp	r0, #0
   16fb0:	beq	16ffc <traverse_product@@Base+0x688>
   16fb4:	movw	r0, #49640	; 0xc1e8
   16fb8:	movt	r0, #2
   16fbc:	ldr	r1, [r0, #136]	; 0x88
   16fc0:	add	r0, r0, r1, lsl #2
   16fc4:	add	r1, sp, #4
   16fc8:	ldr	r0, [r0, #8]
   16fcc:	bl	1279c <coda_type_get_unit@plt>
   16fd0:	cmp	r0, #0
   16fd4:	beq	16fdc <traverse_product@@Base+0x668>
   16fd8:	bl	17c44 <handle_coda_error@@Base>
   16fdc:	ldr	r1, [sp, #4]
   16fe0:	cmp	r1, #0
   16fe4:	ldrbne	r0, [r1]
   16fe8:	cmpne	r0, #0
   16fec:	beq	16ffc <traverse_product@@Base+0x688>
   16ff0:	movw	r0, #40556	; 0x9e6c
   16ff4:	movt	r0, #1
   16ff8:	bl	1267c <printf@plt>
   16ffc:	movw	r0, #53404	; 0xd09c
   17000:	movt	r0, #2
   17004:	ldr	r0, [r0]
   17008:	cmp	r0, #0
   1700c:	beq	17058 <traverse_product@@Base+0x6e4>
   17010:	movw	r0, #49640	; 0xc1e8
   17014:	movt	r0, #2
   17018:	ldr	r1, [r0, #136]	; 0x88
   1701c:	add	r0, r0, r1, lsl #2
   17020:	add	r1, sp, #4
   17024:	ldr	r0, [r0, #8]
   17028:	bl	127a8 <coda_type_get_description@plt>
   1702c:	cmp	r0, #0
   17030:	beq	17038 <traverse_product@@Base+0x6c4>
   17034:	bl	17c44 <handle_coda_error@@Base>
   17038:	ldr	r1, [sp, #4]
   1703c:	cmp	r1, #0
   17040:	ldrbne	r0, [r1]
   17044:	cmpne	r0, #0
   17048:	beq	17058 <traverse_product@@Base+0x6e4>
   1704c:	movw	r0, #40562	; 0x9e72
   17050:	movt	r0, #1
   17054:	bl	1267c <printf@plt>
   17058:	mov	r0, #10
   1705c:	bl	12910 <putchar@plt>
   17060:	movw	r0, #49620	; 0xc1d4
   17064:	movt	r0, #2
   17068:	ldr	r0, [r0]
   1706c:	cmp	r0, #0
   17070:	beq	170a4 <traverse_product@@Base+0x730>
   17074:	movw	r5, #53424	; 0xd0b0
   17078:	movt	r5, #2
   1707c:	ldr	r0, [r5]
   17080:	cmp	r0, #1
   17084:	blt	170a4 <traverse_product@@Base+0x730>
   17088:	mov	r4, #0
   1708c:	mov	r0, r4
   17090:	bl	1458c <print_all_distinct_dims@@Base>
   17094:	ldr	r0, [r5]
   17098:	add	r4, r4, #1
   1709c:	cmp	r4, r0
   170a0:	blt	1708c <traverse_product@@Base+0x718>
   170a4:	sub	sp, fp, #8
   170a8:	pop	{r4, r5, fp, pc}
   170ac:	movw	r0, #40500	; 0x9e34
   170b0:	movw	r1, #40345	; 0x9d99
   170b4:	movw	r3, #40529	; 0x9e51
   170b8:	mov	r2, #238	; 0xee
   170bc:	movt	r0, #1
   170c0:	movt	r1, #1
   170c4:	movt	r3, #1
   170c8:	bl	12ab4 <__assert_fail@plt>

000170cc <print_yaml_data@@Base>:
   170cc:	push	{r4, sl, fp, lr}
   170d0:	add	fp, sp, #8
   170d4:	sub	sp, sp, #528	; 0x210
   170d8:	movw	r1, #49608	; 0xc1c8
   170dc:	movw	r4, #49640	; 0xc1e8
   170e0:	movt	r1, #2
   170e4:	movt	r4, #2
   170e8:	str	r0, [r1]
   170ec:	ldr	r0, [r4]
   170f0:	sub	r1, fp, #12
   170f4:	bl	126ac <coda_open@plt>
   170f8:	cmp	r0, #0
   170fc:	beq	1713c <print_yaml_data@@Base+0x70>
   17100:	bl	12a60 <coda_get_errno@plt>
   17104:	ldr	r0, [r0]
   17108:	cmn	r0, #21
   1710c:	bne	17138 <print_yaml_data@@Base+0x6c>
   17110:	mov	r0, #0
   17114:	bl	126f4 <coda_set_option_use_mmap@plt>
   17118:	ldr	r0, [r4]
   1711c:	sub	r1, fp, #12
   17120:	bl	126ac <coda_open@plt>
   17124:	mov	r4, r0
   17128:	mov	r0, #1
   1712c:	bl	126f4 <coda_set_option_use_mmap@plt>
   17130:	cmp	r4, #0
   17134:	beq	1713c <print_yaml_data@@Base+0x70>
   17138:	bl	17c44 <handle_coda_error@@Base>
   1713c:	ldr	r1, [fp, #-12]
   17140:	mov	r0, sp
   17144:	bl	127d8 <coda_cursor_set_product@plt>
   17148:	cmp	r0, #0
   1714c:	beq	17154 <print_yaml_data@@Base+0x88>
   17150:	bl	17c44 <handle_coda_error@@Base>
   17154:	movw	r0, #53416	; 0xd0a8
   17158:	movt	r0, #2
   1715c:	ldr	r1, [r0]
   17160:	cmp	r1, #0
   17164:	beq	1717c <print_yaml_data@@Base+0xb0>
   17168:	mov	r0, sp
   1716c:	bl	129b8 <coda_cursor_goto@plt>
   17170:	cmp	r0, #0
   17174:	beq	1717c <print_yaml_data@@Base+0xb0>
   17178:	bl	17c44 <handle_coda_error@@Base>
   1717c:	mov	r0, #0
   17180:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   17184:	mov	r0, sp
   17188:	mov	r1, #0
   1718c:	bl	171a0 <print_yaml_data@@Base+0xd4>
   17190:	ldr	r0, [fp, #-12]
   17194:	bl	12994 <coda_close@plt>
   17198:	sub	sp, fp, #8
   1719c:	pop	{r4, sl, fp, pc}
   171a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171a4:	add	fp, sp, #28
   171a8:	sub	sp, sp, #76	; 0x4c
   171ac:	mov	r8, r0
   171b0:	mov	r0, #0
   171b4:	mov	r5, r1
   171b8:	str	r0, [fp, #-36]	; 0xffffffdc
   171bc:	movw	r0, #49608	; 0xc1c8
   171c0:	movt	r0, #2
   171c4:	ldr	r0, [r0]
   171c8:	cmp	r0, #0
   171cc:	beq	17278 <print_yaml_data@@Base+0x1ac>
   171d0:	sub	r1, fp, #36	; 0x24
   171d4:	mov	r0, r8
   171d8:	bl	1276c <coda_cursor_has_attributes@plt>
   171dc:	cmp	r0, #0
   171e0:	beq	171e8 <print_yaml_data@@Base+0x11c>
   171e4:	bl	17c44 <handle_coda_error@@Base>
   171e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   171ec:	cmp	r0, #0
   171f0:	beq	17278 <print_yaml_data@@Base+0x1ac>
   171f4:	cmp	r5, #0
   171f8:	beq	1720c <print_yaml_data@@Base+0x140>
   171fc:	movw	r0, #41107	; 0xa093
   17200:	movt	r0, #1
   17204:	bl	17a30 <print_yaml_data@@Base+0x964>
   17208:	bl	17a78 <print_yaml_data@@Base+0x9ac>
   1720c:	movw	r0, #40568	; 0x9e78
   17210:	movt	r0, #1
   17214:	bl	17a30 <print_yaml_data@@Base+0x964>
   17218:	mov	r0, r8
   1721c:	bl	128ec <coda_cursor_goto_attributes@plt>
   17220:	cmp	r0, #0
   17224:	beq	1722c <print_yaml_data@@Base+0x160>
   17228:	bl	17c44 <handle_coda_error@@Base>
   1722c:	movw	r4, #49612	; 0xc1cc
   17230:	mov	r1, #1
   17234:	movt	r4, #2
   17238:	ldr	r0, [r4]
   1723c:	add	r0, r0, #1
   17240:	str	r0, [r4]
   17244:	mov	r0, r8
   17248:	bl	171a0 <print_yaml_data@@Base+0xd4>
   1724c:	ldr	r0, [r4]
   17250:	sub	r0, r0, #1
   17254:	str	r0, [r4]
   17258:	mov	r0, r8
   1725c:	bl	12850 <coda_cursor_goto_parent@plt>
   17260:	movw	r0, #40575	; 0x9e7f
   17264:	movt	r0, #1
   17268:	bl	17af0 <print_yaml_data@@Base+0xa24>
   1726c:	ldr	r0, [r4]
   17270:	add	r0, r0, #1
   17274:	str	r0, [r4]
   17278:	sub	r1, fp, #32
   1727c:	mov	r0, r8
   17280:	bl	12778 <coda_cursor_get_type_class@plt>
   17284:	cmp	r0, #0
   17288:	beq	17290 <print_yaml_data@@Base+0x1c4>
   1728c:	bl	17c44 <handle_coda_error@@Base>
   17290:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17294:	cmp	r0, #6
   17298:	bhi	179d8 <print_yaml_data@@Base+0x90c>
   1729c:	add	r1, pc, #0
   172a0:	ldr	pc, [r1, r0, lsl #2]
   172a4:	andeq	r7, r1, r0, asr r3
   172a8:	andeq	r7, r1, r8, asr r4
   172ac:	andeq	r7, r1, r0, asr #5
   172b0:	andeq	r7, r1, r0, asr #5
   172b4:	andeq	r7, r1, r0, asr #5
   172b8:	andeq	r7, r1, r0, asr #5
   172bc:	andeq	r7, r1, r4, lsr r5
   172c0:	sub	r1, fp, #40	; 0x28
   172c4:	mov	r0, r8
   172c8:	bl	12814 <coda_cursor_get_read_type@plt>
   172cc:	cmp	r0, #0
   172d0:	beq	172d8 <print_yaml_data@@Base+0x20c>
   172d4:	bl	17c44 <handle_coda_error@@Base>
   172d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   172dc:	add	r0, r0, #1
   172e0:	cmp	r0, #13
   172e4:	bhi	179d8 <print_yaml_data@@Base+0x90c>
   172e8:	add	r1, pc, #0
   172ec:	ldr	pc, [r1, r0, lsl #2]
   172f0:	andeq	r7, r1, r0, ror r5
   172f4:	andeq	r7, r1, r8, lsr #6
   172f8:	andeq	r7, r1, ip, ror r5
   172fc:	andeq	r7, r1, r8, lsr #6
   17300:	andeq	r7, r1, ip, ror r5
   17304:	andeq	r7, r1, r8, lsr #6
   17308:	andeq	r7, r1, ip, ror r5
   1730c:	strdeq	r7, [r1], -r4
   17310:	andeq	r7, r1, r4, lsr #12
   17314:	andeq	r7, r1, r4, lsr #11
   17318:	andeq	r7, r1, r4, lsr #11
   1731c:	andeq	r7, r1, r4, ror #12
   17320:	andeq	r7, r1, r4, lsr #13
   17324:	andeq	r7, r1, r0, asr r7
   17328:	add	r1, sp, #16
   1732c:	mov	r0, r8
   17330:	bl	12a3c <coda_cursor_read_int32@plt>
   17334:	cmp	r0, #0
   17338:	beq	17340 <print_yaml_data@@Base+0x274>
   1733c:	bl	17c44 <handle_coda_error@@Base>
   17340:	ldr	r1, [sp, #16]
   17344:	movw	r0, #38935	; 0x9817
   17348:	movt	r0, #1
   1734c:	b	1765c <print_yaml_data@@Base+0x590>
   17350:	add	r1, sp, #16
   17354:	mov	r0, r8
   17358:	bl	126d0 <coda_cursor_get_num_elements@plt>
   1735c:	cmp	r0, #0
   17360:	beq	17368 <print_yaml_data@@Base+0x29c>
   17364:	bl	17c44 <handle_coda_error@@Base>
   17368:	ldr	r0, [sp, #16]
   1736c:	cmp	r0, #1
   17370:	blt	175e8 <print_yaml_data@@Base+0x51c>
   17374:	cmp	r5, #0
   17378:	beq	17388 <print_yaml_data@@Base+0x2bc>
   1737c:	movw	r0, #41107	; 0xa093
   17380:	movt	r0, #1
   17384:	bl	17a30 <print_yaml_data@@Base+0x964>
   17388:	add	r1, sp, #8
   1738c:	mov	r0, r8
   17390:	bl	12730 <coda_cursor_get_type@plt>
   17394:	cmp	r0, #0
   17398:	beq	173a0 <print_yaml_data@@Base+0x2d4>
   1739c:	bl	17c44 <handle_coda_error@@Base>
   173a0:	ldr	r0, [sp, #8]
   173a4:	sub	r1, fp, #40	; 0x28
   173a8:	bl	12934 <coda_type_get_record_union_status@plt>
   173ac:	cmp	r0, #0
   173b0:	beq	173b8 <print_yaml_data@@Base+0x2ec>
   173b4:	bl	17c44 <handle_coda_error@@Base>
   173b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173bc:	cmp	r0, #0
   173c0:	beq	17818 <print_yaml_data@@Base+0x74c>
   173c4:	sub	r1, fp, #44	; 0x2c
   173c8:	mov	r0, r8
   173cc:	bl	12a30 <coda_cursor_get_available_union_field_index@plt>
   173d0:	cmp	r0, #0
   173d4:	beq	173dc <print_yaml_data@@Base+0x310>
   173d8:	bl	17c44 <handle_coda_error@@Base>
   173dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173e0:	ldr	r0, [sp, #8]
   173e4:	sub	r2, fp, #48	; 0x30
   173e8:	bl	12a78 <coda_type_get_record_field_name@plt>
   173ec:	cmp	r0, #0
   173f0:	beq	173f8 <print_yaml_data@@Base+0x32c>
   173f4:	bl	17c44 <handle_coda_error@@Base>
   173f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   173fc:	mov	r0, r8
   17400:	bl	127f0 <coda_cursor_goto_record_field_by_index@plt>
   17404:	cmp	r0, #0
   17408:	beq	17410 <print_yaml_data@@Base+0x344>
   1740c:	bl	17c44 <handle_coda_error@@Base>
   17410:	cmp	r5, #0
   17414:	blne	17a78 <print_yaml_data@@Base+0x9ac>
   17418:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1741c:	movw	r0, #40582	; 0x9e86
   17420:	movt	r0, #1
   17424:	bl	17a30 <print_yaml_data@@Base+0x964>
   17428:	movw	r4, #49612	; 0xc1cc
   1742c:	mov	r1, #1
   17430:	movt	r4, #2
   17434:	ldr	r0, [r4]
   17438:	add	r0, r0, #1
   1743c:	str	r0, [r4]
   17440:	mov	r0, r8
   17444:	bl	171a0 <print_yaml_data@@Base+0xd4>
   17448:	ldr	r0, [r4]
   1744c:	sub	r0, r0, #1
   17450:	str	r0, [r4]
   17454:	b	17928 <print_yaml_data@@Base+0x85c>
   17458:	add	r5, sp, #16
   1745c:	add	r1, sp, #8
   17460:	mov	r0, r8
   17464:	mov	r2, r5
   17468:	bl	1297c <coda_cursor_get_array_dim@plt>
   1746c:	cmp	r0, #0
   17470:	beq	17478 <print_yaml_data@@Base+0x3ac>
   17474:	bl	17c44 <handle_coda_error@@Base>
   17478:	ldr	r0, [sp, #8]
   1747c:	cmp	r0, #0
   17480:	blt	175dc <print_yaml_data@@Base+0x510>
   17484:	mov	r6, #1
   17488:	beq	174a4 <print_yaml_data@@Base+0x3d8>
   1748c:	ldr	r1, [r5], #4
   17490:	subs	r0, r0, #1
   17494:	mul	r6, r1, r6
   17498:	bne	1748c <print_yaml_data@@Base+0x3c0>
   1749c:	cmp	r6, #1
   174a0:	blt	175dc <print_yaml_data@@Base+0x510>
   174a4:	movw	r0, #41107	; 0xa093
   174a8:	movt	r0, #1
   174ac:	bl	17a30 <print_yaml_data@@Base+0x964>
   174b0:	mov	r0, r8
   174b4:	bl	127c0 <coda_cursor_goto_first_array_element@plt>
   174b8:	cmp	r0, #0
   174bc:	beq	174c4 <print_yaml_data@@Base+0x3f8>
   174c0:	bl	17c44 <handle_coda_error@@Base>
   174c4:	movw	r9, #40591	; 0x9e8f
   174c8:	movw	r5, #49612	; 0xc1cc
   174cc:	sub	r7, r6, #1
   174d0:	mov	r4, #0
   174d4:	movt	r9, #1
   174d8:	movt	r5, #2
   174dc:	mov	r0, r9
   174e0:	bl	17af0 <print_yaml_data@@Base+0xa24>
   174e4:	ldr	r0, [r5]
   174e8:	mov	r1, #0
   174ec:	add	r0, r0, #1
   174f0:	str	r0, [r5]
   174f4:	mov	r0, r8
   174f8:	bl	171a0 <print_yaml_data@@Base+0xd4>
   174fc:	ldr	r0, [r5]
   17500:	cmp	r4, r7
   17504:	sub	r0, r0, #1
   17508:	str	r0, [r5]
   1750c:	bge	17524 <print_yaml_data@@Base+0x458>
   17510:	mov	r0, r8
   17514:	bl	128bc <coda_cursor_goto_next_array_element@plt>
   17518:	cmp	r0, #0
   1751c:	beq	17524 <print_yaml_data@@Base+0x458>
   17520:	bl	17c44 <handle_coda_error@@Base>
   17524:	add	r4, r4, #1
   17528:	cmp	r6, r4
   1752c:	bne	174dc <print_yaml_data@@Base+0x410>
   17530:	b	17928 <print_yaml_data@@Base+0x85c>
   17534:	sub	r1, fp, #40	; 0x28
   17538:	mov	r0, r8
   1753c:	bl	127b4 <coda_cursor_get_special_type@plt>
   17540:	cmp	r0, #0
   17544:	beq	1754c <print_yaml_data@@Base+0x480>
   17548:	bl	17c44 <handle_coda_error@@Base>
   1754c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17550:	cmp	r0, #3
   17554:	bhi	179d8 <print_yaml_data@@Base+0x90c>
   17558:	add	r1, pc, #0
   1755c:	ldr	pc, [r1, r0, lsl #2]
   17560:	andeq	r7, r1, r0, ror r5
   17564:	andeq	r7, r1, r4, lsr r9
   17568:	andeq	r7, r1, r4, asr r9
   1756c:	andeq	r7, r1, r0, lsr #19
   17570:	movw	r0, #40672	; 0x9ee0
   17574:	movt	r0, #1
   17578:	b	1769c <print_yaml_data@@Base+0x5d0>
   1757c:	add	r1, sp, #16
   17580:	mov	r0, r8
   17584:	bl	1270c <coda_cursor_read_uint32@plt>
   17588:	cmp	r0, #0
   1758c:	beq	17594 <print_yaml_data@@Base+0x4c8>
   17590:	bl	17c44 <handle_coda_error@@Base>
   17594:	ldr	r1, [sp, #16]
   17598:	movw	r0, #38940	; 0x981c
   1759c:	movt	r0, #1
   175a0:	b	1765c <print_yaml_data@@Base+0x590>
   175a4:	add	r1, sp, #16
   175a8:	mov	r0, r8
   175ac:	bl	12898 <coda_cursor_read_double@plt>
   175b0:	cmp	r0, #0
   175b4:	beq	175bc <print_yaml_data@@Base+0x4f0>
   175b8:	bl	17c44 <handle_coda_error@@Base>
   175bc:	vldr	d16, [sp, #16]
   175c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175c4:	vmov	r2, r3, d16
   175c8:	cmp	r0, #8
   175cc:	bne	17994 <print_yaml_data@@Base+0x8c8>
   175d0:	movw	r0, #38945	; 0x9821
   175d4:	movt	r0, #1
   175d8:	b	179d4 <print_yaml_data@@Base+0x908>
   175dc:	movw	r0, #40594	; 0x9e92
   175e0:	movt	r0, #1
   175e4:	b	1769c <print_yaml_data@@Base+0x5d0>
   175e8:	movw	r0, #40587	; 0x9e8b
   175ec:	movt	r0, #1
   175f0:	b	1769c <print_yaml_data@@Base+0x5d0>
   175f4:	add	r1, sp, #8
   175f8:	mov	r0, r8
   175fc:	bl	129a0 <coda_cursor_read_int64@plt>
   17600:	cmp	r0, #0
   17604:	beq	1760c <print_yaml_data@@Base+0x540>
   17608:	bl	17c44 <handle_coda_error@@Base>
   1760c:	ldr	r0, [sp, #8]
   17610:	ldr	r1, [sp, #12]
   17614:	add	r4, sp, #16
   17618:	mov	r2, r4
   1761c:	bl	12aa8 <coda_str64@plt>
   17620:	b	17650 <print_yaml_data@@Base+0x584>
   17624:	add	r1, sp, #8
   17628:	mov	r0, r8
   1762c:	bl	1288c <coda_cursor_read_uint64@plt>
   17630:	cmp	r0, #0
   17634:	beq	1763c <print_yaml_data@@Base+0x570>
   17638:	bl	17c44 <handle_coda_error@@Base>
   1763c:	ldr	r0, [sp, #8]
   17640:	ldr	r1, [sp, #12]
   17644:	add	r4, sp, #16
   17648:	mov	r2, r4
   1764c:	bl	126dc <coda_str64u@plt>
   17650:	movw	r0, #40685	; 0x9eed
   17654:	mov	r1, r4
   17658:	movt	r0, #1
   1765c:	bl	17a30 <print_yaml_data@@Base+0x964>
   17660:	b	179d8 <print_yaml_data@@Base+0x90c>
   17664:	add	r1, sp, #16
   17668:	mov	r0, r8
   1766c:	bl	128f8 <coda_cursor_read_char@plt>
   17670:	cmp	r0, #0
   17674:	beq	1767c <print_yaml_data@@Base+0x5b0>
   17678:	bl	17c44 <handle_coda_error@@Base>
   1767c:	movw	r0, #40308	; 0x9d74
   17680:	movt	r0, #1
   17684:	bl	17a30 <print_yaml_data@@Base+0x964>
   17688:	add	r0, sp, #16
   1768c:	mov	r1, #1
   17690:	bl	17b3c <print_yaml_data@@Base+0xa70>
   17694:	movw	r0, #41106	; 0xa092
   17698:	movt	r0, #1
   1769c:	bl	17a30 <print_yaml_data@@Base+0x964>
   176a0:	b	179d8 <print_yaml_data@@Base+0x90c>
   176a4:	add	r1, sp, #16
   176a8:	mov	r0, r8
   176ac:	bl	12880 <coda_cursor_get_string_length@plt>
   176b0:	cmp	r0, #0
   176b4:	beq	176bc <print_yaml_data@@Base+0x5f0>
   176b8:	bl	17c44 <handle_coda_error@@Base>
   176bc:	ldr	r0, [sp, #16]
   176c0:	add	r6, r0, #1
   176c4:	mov	r0, r6
   176c8:	bl	12820 <malloc@plt>
   176cc:	mov	r5, r0
   176d0:	cmp	r0, #0
   176d4:	bne	17708 <print_yaml_data@@Base+0x63c>
   176d8:	movw	r1, #38521	; 0x9679
   176dc:	movw	r3, #40598	; 0x9e96
   176e0:	movw	r0, #361	; 0x169
   176e4:	mov	r2, r6
   176e8:	str	r0, [sp]
   176ec:	movt	r1, #1
   176f0:	movt	r3, #1
   176f4:	mvn	r0, #0
   176f8:	bl	126a0 <coda_set_error@plt>
   176fc:	bl	17c44 <handle_coda_error@@Base>
   17700:	ldr	r0, [sp, #16]
   17704:	add	r6, r0, #1
   17708:	mov	r0, r8
   1770c:	mov	r1, r5
   17710:	mov	r2, r6
   17714:	bl	12844 <coda_cursor_read_string@plt>
   17718:	cmp	r0, #0
   1771c:	beq	17724 <print_yaml_data@@Base+0x658>
   17720:	bl	17c44 <handle_coda_error@@Base>
   17724:	movw	r0, #40308	; 0x9d74
   17728:	movt	r0, #1
   1772c:	bl	17a30 <print_yaml_data@@Base+0x964>
   17730:	ldr	r1, [sp, #16]
   17734:	mov	r0, r5
   17738:	bl	17b3c <print_yaml_data@@Base+0xa70>
   1773c:	ldr	r1, [sp, #16]
   17740:	movw	r0, #41106	; 0xa092
   17744:	movt	r0, #1
   17748:	bl	17a30 <print_yaml_data@@Base+0x964>
   1774c:	b	1780c <print_yaml_data@@Base+0x740>
   17750:	add	r1, sp, #16
   17754:	mov	r0, r8
   17758:	bl	12a00 <coda_cursor_get_bit_size@plt>
   1775c:	cmp	r0, #0
   17760:	beq	17768 <print_yaml_data@@Base+0x69c>
   17764:	bl	17c44 <handle_coda_error@@Base>
   17768:	ldr	r4, [sp, #16]
   1776c:	ldr	r7, [sp, #20]
   17770:	lsr	r0, r4, #3
   17774:	tst	r4, #7
   17778:	orr	r6, r0, r7, lsl #29
   1777c:	addne	r6, r6, #1
   17780:	mov	r0, r6
   17784:	bl	12820 <malloc@plt>
   17788:	mov	r5, r0
   1778c:	cmp	r0, #0
   17790:	bne	177c4 <print_yaml_data@@Base+0x6f8>
   17794:	movw	r1, #38521	; 0x9679
   17798:	movw	r3, #40598	; 0x9e96
   1779c:	mov	r0, #392	; 0x188
   177a0:	mov	r2, r6
   177a4:	str	r0, [sp]
   177a8:	movt	r1, #1
   177ac:	movt	r3, #1
   177b0:	mvn	r0, #0
   177b4:	bl	126a0 <coda_set_error@plt>
   177b8:	bl	17c44 <handle_coda_error@@Base>
   177bc:	ldr	r4, [sp, #16]
   177c0:	ldr	r7, [sp, #20]
   177c4:	mov	r0, r8
   177c8:	mov	r1, r5
   177cc:	mov	r2, #0
   177d0:	mov	r3, #0
   177d4:	stm	sp, {r4, r7}
   177d8:	bl	12a9c <coda_cursor_read_bits@plt>
   177dc:	cmp	r0, #0
   177e0:	beq	177e8 <print_yaml_data@@Base+0x71c>
   177e4:	bl	17c44 <handle_coda_error@@Base>
   177e8:	movw	r0, #40308	; 0x9d74
   177ec:	movt	r0, #1
   177f0:	bl	17a30 <print_yaml_data@@Base+0x964>
   177f4:	mov	r0, r5
   177f8:	mov	r1, r6
   177fc:	bl	17b3c <print_yaml_data@@Base+0xa70>
   17800:	movw	r0, #41106	; 0xa092
   17804:	movt	r0, #1
   17808:	bl	17a30 <print_yaml_data@@Base+0x964>
   1780c:	mov	r0, r5
   17810:	bl	126e8 <free@plt>
   17814:	b	179d8 <print_yaml_data@@Base+0x90c>
   17818:	mov	r0, r8
   1781c:	bl	127e4 <coda_cursor_goto_first_record_field@plt>
   17820:	cmp	r0, #0
   17824:	beq	1782c <print_yaml_data@@Base+0x760>
   17828:	bl	17c44 <handle_coda_error@@Base>
   1782c:	ldr	r0, [sp, #16]
   17830:	mov	r1, #0
   17834:	str	r1, [fp, #-44]	; 0xffffffd4
   17838:	cmp	r0, #1
   1783c:	blt	17928 <print_yaml_data@@Base+0x85c>
   17840:	movw	r9, #40582	; 0x9e86
   17844:	movw	r7, #49612	; 0xc1cc
   17848:	mov	r6, #1
   1784c:	add	sl, sp, #52	; 0x34
   17850:	sub	r4, fp, #48	; 0x30
   17854:	movt	r9, #1
   17858:	movt	r7, #2
   1785c:	ldr	r0, [sp, #8]
   17860:	mov	r2, sl
   17864:	bl	12670 <coda_type_get_record_field_hidden_status@plt>
   17868:	cmp	r0, #0
   1786c:	beq	17874 <print_yaml_data@@Base+0x7a8>
   17870:	bl	17c44 <handle_coda_error@@Base>
   17874:	ldr	r0, [sp, #52]	; 0x34
   17878:	cmp	r0, #0
   1787c:	bne	178e8 <print_yaml_data@@Base+0x81c>
   17880:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17884:	ldr	r0, [sp, #8]
   17888:	mov	r2, r4
   1788c:	bl	12a78 <coda_type_get_record_field_name@plt>
   17890:	cmp	r0, #0
   17894:	beq	1789c <print_yaml_data@@Base+0x7d0>
   17898:	bl	17c44 <handle_coda_error@@Base>
   1789c:	cmp	r5, #0
   178a0:	bne	178b0 <print_yaml_data@@Base+0x7e4>
   178a4:	cmp	r6, #0
   178a8:	bleq	17a78 <print_yaml_data@@Base+0x9ac>
   178ac:	b	178b4 <print_yaml_data@@Base+0x7e8>
   178b0:	bl	17a78 <print_yaml_data@@Base+0x9ac>
   178b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   178b8:	mov	r0, r9
   178bc:	bl	17a30 <print_yaml_data@@Base+0x964>
   178c0:	ldr	r0, [r7]
   178c4:	mov	r1, #1
   178c8:	add	r0, r0, #1
   178cc:	str	r0, [r7]
   178d0:	mov	r0, r8
   178d4:	bl	171a0 <print_yaml_data@@Base+0xd4>
   178d8:	ldr	r0, [r7]
   178dc:	mov	r6, #0
   178e0:	sub	r0, r0, #1
   178e4:	str	r0, [r7]
   178e8:	ldr	r0, [sp, #16]
   178ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   178f0:	sub	r0, r0, #1
   178f4:	cmp	r1, r0
   178f8:	bge	17910 <print_yaml_data@@Base+0x844>
   178fc:	mov	r0, r8
   17900:	bl	129dc <coda_cursor_goto_next_record_field@plt>
   17904:	cmp	r0, #0
   17908:	beq	17910 <print_yaml_data@@Base+0x844>
   1790c:	bl	17c44 <handle_coda_error@@Base>
   17910:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17914:	add	r1, r0, #1
   17918:	ldr	r0, [sp, #16]
   1791c:	str	r1, [fp, #-44]	; 0xffffffd4
   17920:	cmp	r1, r0
   17924:	blt	1785c <print_yaml_data@@Base+0x790>
   17928:	mov	r0, r8
   1792c:	bl	12850 <coda_cursor_goto_parent@plt>
   17930:	b	179d8 <print_yaml_data@@Base+0x90c>
   17934:	add	r1, sp, #16
   17938:	mov	r0, r8
   1793c:	bl	12898 <coda_cursor_read_double@plt>
   17940:	cmp	r0, #0
   17944:	beq	1794c <print_yaml_data@@Base+0x880>
   17948:	bl	17c44 <handle_coda_error@@Base>
   1794c:	vldr	d16, [sp, #16]
   17950:	b	17990 <print_yaml_data@@Base+0x8c4>
   17954:	add	r1, sp, #8
   17958:	mov	r0, r8
   1795c:	bl	12898 <coda_cursor_read_double@plt>
   17960:	cmp	r0, #0
   17964:	beq	1796c <print_yaml_data@@Base+0x8a0>
   17968:	bl	17c44 <handle_coda_error@@Base>
   1796c:	vldr	d0, [sp, #8]
   17970:	bl	128a4 <coda_isNaN@plt>
   17974:	cmp	r0, #0
   17978:	bne	1798c <print_yaml_data@@Base+0x8c0>
   1797c:	vldr	d0, [sp, #8]
   17980:	bl	12748 <coda_isInf@plt>
   17984:	cmp	r0, #0
   17988:	beq	179fc <print_yaml_data@@Base+0x930>
   1798c:	vldr	d16, [sp, #8]
   17990:	vmov	r2, r3, d16
   17994:	movw	r0, #39011	; 0x9863
   17998:	movt	r0, #1
   1799c:	b	179d4 <print_yaml_data@@Base+0x908>
   179a0:	add	r1, sp, #16
   179a4:	add	r2, sp, #8
   179a8:	mov	r0, r8
   179ac:	bl	12940 <coda_cursor_read_complex_double_split@plt>
   179b0:	cmp	r0, #0
   179b4:	beq	179bc <print_yaml_data@@Base+0x8f0>
   179b8:	bl	17c44 <handle_coda_error@@Base>
   179bc:	vldr	d16, [sp, #16]
   179c0:	vldr	d17, [sp, #8]
   179c4:	movw	r0, #39046	; 0x9886
   179c8:	movt	r0, #1
   179cc:	vmov	r2, r3, d16
   179d0:	vstr	d17, [sp]
   179d4:	bl	17a30 <print_yaml_data@@Base+0x964>
   179d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   179dc:	cmp	r0, #0
   179e0:	movwne	r0, #49612	; 0xc1cc
   179e4:	movtne	r0, #2
   179e8:	ldrne	r1, [r0]
   179ec:	subne	r1, r1, #1
   179f0:	strne	r1, [r0]
   179f4:	sub	sp, fp, #28
   179f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179fc:	vldr	d0, [sp, #8]
   17a00:	movw	r0, #40240	; 0x9d30
   17a04:	add	r1, sp, #16
   17a08:	movt	r0, #1
   17a0c:	bl	126c4 <coda_time_double_to_string@plt>
   17a10:	cmp	r0, #0
   17a14:	beq	17a24 <print_yaml_data@@Base+0x958>
   17a18:	movw	r0, #40269	; 0x9d4d
   17a1c:	movt	r0, #1
   17a20:	b	1769c <print_yaml_data@@Base+0x5d0>
   17a24:	movw	r0, #40685	; 0x9eed
   17a28:	add	r1, sp, #16
   17a2c:	b	17658 <print_yaml_data@@Base+0x58c>
   17a30:	sub	sp, sp, #12
   17a34:	push	{fp, lr}
   17a38:	mov	fp, sp
   17a3c:	sub	sp, sp, #4
   17a40:	mov	ip, r0
   17a44:	add	r0, fp, #8
   17a48:	stm	r0, {r1, r2, r3}
   17a4c:	movw	r0, #53392	; 0xd090
   17a50:	add	r2, fp, #8
   17a54:	mov	r1, ip
   17a58:	movt	r0, #2
   17a5c:	str	r2, [sp]
   17a60:	ldr	r0, [r0]
   17a64:	bl	129ac <vfprintf@plt>
   17a68:	mov	sp, fp
   17a6c:	pop	{fp, lr}
   17a70:	add	sp, sp, #12
   17a74:	bx	lr
   17a78:	push	{r4, r5, r6, sl, fp, lr}
   17a7c:	add	fp, sp, #16
   17a80:	movw	r0, #49612	; 0xc1cc
   17a84:	movt	r0, #2
   17a88:	ldr	r0, [r0]
   17a8c:	cmp	r0, #0
   17a90:	blt	17ad0 <print_yaml_data@@Base+0xa04>
   17a94:	popeq	{r4, r5, r6, sl, fp, pc}
   17a98:	movw	r6, #53392	; 0xd090
   17a9c:	movw	r4, #39086	; 0x98ae
   17aa0:	add	r5, r0, #1
   17aa4:	movt	r6, #2
   17aa8:	movt	r4, #1
   17aac:	ldr	r3, [r6]
   17ab0:	mov	r0, r4
   17ab4:	mov	r1, #2
   17ab8:	mov	r2, #1
   17abc:	bl	127cc <fwrite@plt>
   17ac0:	sub	r5, r5, #1
   17ac4:	cmp	r5, #1
   17ac8:	bgt	17aac <print_yaml_data@@Base+0x9e0>
   17acc:	pop	{r4, r5, r6, sl, fp, pc}
   17ad0:	movw	r0, #39056	; 0x9890
   17ad4:	movw	r1, #40598	; 0x9e96
   17ad8:	movw	r3, #39068	; 0x989c
   17adc:	mov	r2, #44	; 0x2c
   17ae0:	movt	r0, #1
   17ae4:	movt	r1, #1
   17ae8:	movt	r3, #1
   17aec:	bl	12ab4 <__assert_fail@plt>
   17af0:	sub	sp, sp, #12
   17af4:	push	{r4, sl, fp, lr}
   17af8:	add	fp, sp, #8
   17afc:	sub	sp, sp, #4
   17b00:	mov	r4, r0
   17b04:	add	r0, fp, #8
   17b08:	stm	r0, {r1, r2, r3}
   17b0c:	bl	17a78 <print_yaml_data@@Base+0x9ac>
   17b10:	movw	r0, #53392	; 0xd090
   17b14:	add	r2, fp, #8
   17b18:	mov	r1, r4
   17b1c:	movt	r0, #2
   17b20:	str	r2, [sp]
   17b24:	ldr	r0, [r0]
   17b28:	bl	129ac <vfprintf@plt>
   17b2c:	sub	sp, fp, #8
   17b30:	pop	{r4, sl, fp, lr}
   17b34:	add	sp, sp, #12
   17b38:	bx	lr
   17b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b40:	add	fp, sp, #28
   17b44:	sub	sp, sp, #4
   17b48:	cmp	r1, #1
   17b4c:	blt	17c3c <print_yaml_data@@Base+0xb70>
   17b50:	movw	r6, #38652	; 0x96fc
   17b54:	movw	r8, #38655	; 0x96ff
   17b58:	movw	r9, #38658	; 0x9702
   17b5c:	movw	sl, #38664	; 0x9708
   17b60:	movw	r7, #38667	; 0x970b
   17b64:	mov	r4, r1
   17b68:	mov	r5, r0
   17b6c:	movt	r6, #1
   17b70:	movt	r8, #1
   17b74:	movt	r9, #1
   17b78:	movt	sl, #1
   17b7c:	movt	r7, #1
   17b80:	b	17b94 <print_yaml_data@@Base+0xac8>
   17b84:	movw	r0, #40310	; 0x9d76
   17b88:	movt	r0, #1
   17b8c:	bl	17a30 <print_yaml_data@@Base+0x964>
   17b90:	b	17c30 <print_yaml_data@@Base+0xb64>
   17b94:	ldrb	r1, [r5]
   17b98:	sub	r0, r1, #8
   17b9c:	cmp	r0, #5
   17ba0:	bhi	17bcc <print_yaml_data@@Base+0xb00>
   17ba4:	add	r2, pc, #0
   17ba8:	ldr	pc, [r2, r0, lsl #2]
   17bac:	andeq	r7, r1, r4, asr #23
   17bb0:	andeq	r7, r1, r4, lsl #24
   17bb4:	andeq	r7, r1, ip, lsl #24
   17bb8:	andeq	r7, r1, r8, ror #23
   17bbc:	andeq	r7, r1, r4, lsl ip
   17bc0:	andeq	r7, r1, ip, lsl ip
   17bc4:	mov	r0, r6
   17bc8:	b	17c2c <print_yaml_data@@Base+0xb60>
   17bcc:	cmp	r1, #34	; 0x22
   17bd0:	beq	17c24 <print_yaml_data@@Base+0xb58>
   17bd4:	cmp	r1, #92	; 0x5c
   17bd8:	bne	17be8 <print_yaml_data@@Base+0xb1c>
   17bdc:	movw	r0, #38670	; 0x970e
   17be0:	movt	r0, #1
   17be4:	b	17c2c <print_yaml_data@@Base+0xb60>
   17be8:	sub	r0, r1, #32
   17bec:	uxtb	r0, r0
   17bf0:	cmp	r0, #94	; 0x5e
   17bf4:	bhi	17b84 <print_yaml_data@@Base+0xab8>
   17bf8:	movw	r0, #39089	; 0x98b1
   17bfc:	movt	r0, #1
   17c00:	b	17b8c <print_yaml_data@@Base+0xac0>
   17c04:	mov	r0, r8
   17c08:	b	17c2c <print_yaml_data@@Base+0xb60>
   17c0c:	mov	r0, r9
   17c10:	b	17c2c <print_yaml_data@@Base+0xb60>
   17c14:	mov	r0, sl
   17c18:	b	17c2c <print_yaml_data@@Base+0xb60>
   17c1c:	mov	r0, r7
   17c20:	b	17c2c <print_yaml_data@@Base+0xb60>
   17c24:	movw	r0, #40307	; 0x9d73
   17c28:	movt	r0, #1
   17c2c:	bl	17a30 <print_yaml_data@@Base+0x964>
   17c30:	subs	r4, r4, #1
   17c34:	add	r5, r5, #1
   17c38:	bne	17b94 <print_yaml_data@@Base+0xac8>
   17c3c:	sub	sp, fp, #28
   17c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017c44 <handle_coda_error@@Base>:
   17c44:	push	{fp, lr}
   17c48:	mov	fp, sp
   17c4c:	movw	r5, #49584	; 0xc1b0
   17c50:	movt	r5, #2
   17c54:	ldr	r4, [r5]
   17c58:	bl	12a60 <coda_get_errno@plt>
   17c5c:	ldr	r0, [r0]
   17c60:	bl	12a18 <coda_errno_to_string@plt>
   17c64:	movw	r1, #40678	; 0x9ee6
   17c68:	mov	r2, r0
   17c6c:	mov	r0, r4
   17c70:	movt	r1, #1
   17c74:	bl	128b0 <fprintf@plt>
   17c78:	ldr	r0, [r5]
   17c7c:	bl	126b8 <fflush@plt>
   17c80:	mov	r0, #1
   17c84:	bl	12868 <exit@plt>

00017c88 <main@@Base>:
   17c88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c8c:	add	fp, sp, #28
   17c90:	sub	sp, sp, #20
   17c94:	cmp	r0, #1
   17c98:	beq	18dc4 <main@@Base+0x113c>
   17c9c:	ldr	r6, [r1, #4]
   17ca0:	mov	r4, r1
   17ca4:	movw	r1, #40689	; 0x9ef1
   17ca8:	mov	sl, r0
   17cac:	movt	r1, #1
   17cb0:	mov	r0, r6
   17cb4:	bl	12664 <strcmp@plt>
   17cb8:	cmp	r0, #0
   17cbc:	beq	18dc4 <main@@Base+0x113c>
   17cc0:	movw	r1, #40692	; 0x9ef4
   17cc4:	mov	r0, r6
   17cc8:	movt	r1, #1
   17ccc:	bl	12664 <strcmp@plt>
   17cd0:	cmp	r0, #0
   17cd4:	beq	18dc4 <main@@Base+0x113c>
   17cd8:	movw	r1, #40699	; 0x9efb
   17cdc:	mov	r0, r6
   17ce0:	movt	r1, #1
   17ce4:	bl	12664 <strcmp@plt>
   17ce8:	cmp	r0, #0
   17cec:	beq	18dd0 <main@@Base+0x1148>
   17cf0:	movw	r1, #40702	; 0x9efe
   17cf4:	mov	r0, r6
   17cf8:	movt	r1, #1
   17cfc:	bl	12664 <strcmp@plt>
   17d00:	cmp	r0, #0
   17d04:	beq	18dd0 <main@@Base+0x1148>
   17d08:	cmp	sl, #3
   17d0c:	blt	17d28 <main@@Base+0xa0>
   17d10:	movw	r1, #40712	; 0x9f08
   17d14:	mov	r0, r6
   17d18:	movt	r1, #1
   17d1c:	bl	12664 <strcmp@plt>
   17d20:	cmp	r0, #0
   17d24:	beq	18238 <main@@Base+0x5b0>
   17d28:	ldr	r0, [r4]
   17d2c:	movw	r2, #40715	; 0x9f0b
   17d30:	mov	r1, #0
   17d34:	movt	r2, #1
   17d38:	bl	12700 <coda_set_definition_path_conditional@plt>
   17d3c:	mov	r7, #1
   17d40:	cmp	r0, #0
   17d44:	bne	18ddc <main@@Base+0x1154>
   17d48:	ldr	r6, [r4, r7, lsl #2]
   17d4c:	movw	r1, #40741	; 0x9f25
   17d50:	movt	r1, #1
   17d54:	mov	r0, r6
   17d58:	bl	12664 <strcmp@plt>
   17d5c:	cmp	r0, #0
   17d60:	beq	17e58 <main@@Base+0x1d0>
   17d64:	movw	r1, #40746	; 0x9f2a
   17d68:	mov	r0, r6
   17d6c:	movt	r1, #1
   17d70:	bl	12664 <strcmp@plt>
   17d74:	cmp	r0, #0
   17d78:	beq	18160 <main@@Base+0x4d8>
   17d7c:	movw	r1, #40752	; 0x9f30
   17d80:	mov	r0, r6
   17d84:	movt	r1, #1
   17d88:	bl	12664 <strcmp@plt>
   17d8c:	cmp	r0, #0
   17d90:	beq	18248 <main@@Base+0x5c0>
   17d94:	movw	r1, #40757	; 0x9f35
   17d98:	mov	r0, r6
   17d9c:	movt	r1, #1
   17da0:	bl	12664 <strcmp@plt>
   17da4:	cmp	r0, #0
   17da8:	beq	184e4 <main@@Base+0x85c>
   17dac:	movw	r1, #40762	; 0x9f3a
   17db0:	mov	r0, r6
   17db4:	movt	r1, #1
   17db8:	bl	12664 <strcmp@plt>
   17dbc:	cmp	r0, #0
   17dc0:	bne	18d48 <main@@Base+0x10c0>
   17dc4:	movw	r0, #49640	; 0xc1e8
   17dc8:	mov	r2, #0
   17dcc:	mov	r1, #5
   17dd0:	movt	r0, #2
   17dd4:	str	r2, [r0]
   17dd8:	movw	r0, #53412	; 0xd0a4
   17ddc:	movt	r0, #2
   17de0:	str	r1, [r0]
   17de4:	movw	r0, #49624	; 0xc1d8
   17de8:	movw	r1, #53392	; 0xd090
   17dec:	movt	r0, #2
   17df0:	movt	r1, #2
   17df4:	str	r2, [r0]
   17df8:	movw	r0, #53416	; 0xd0a8
   17dfc:	movt	r0, #2
   17e00:	str	r2, [r0]
   17e04:	movw	r0, #49588	; 0xc1b4
   17e08:	movt	r0, #2
   17e0c:	ldr	r0, [r0]
   17e10:	str	r0, [r1]
   17e14:	add	r0, r7, #1
   17e18:	sub	r8, sl, r0
   17e1c:	cmp	r8, #1
   17e20:	blt	18d48 <main@@Base+0x10c0>
   17e24:	add	r6, r4, r0, lsl #2
   17e28:	mov	r0, #0
   17e2c:	mov	r1, #0
   17e30:	sub	r4, r8, #1
   17e34:	mov	r7, #1
   17e38:	mov	r9, #0
   17e3c:	str	r0, [sp, #12]
   17e40:	mov	r0, #0
   17e44:	str	r1, [sp, #16]
   17e48:	str	r0, [sp, #8]
   17e4c:	mov	r0, #0
   17e50:	str	r0, [sp, #4]
   17e54:	b	17f40 <main@@Base+0x2b8>
   17e58:	movw	r0, #53412	; 0xd0a4
   17e5c:	mov	r8, #0
   17e60:	mov	r5, #1
   17e64:	movw	r1, #49640	; 0xc1e8
   17e68:	movw	r6, #49636	; 0xc1e4
   17e6c:	movt	r0, #2
   17e70:	movt	r1, #2
   17e74:	movt	r6, #2
   17e78:	str	r8, [r0]
   17e7c:	movw	r0, #49616	; 0xc1d0
   17e80:	str	r8, [r1]
   17e84:	str	r8, [r1, #664]	; 0x298
   17e88:	str	r8, [r6]
   17e8c:	movt	r0, #2
   17e90:	str	r5, [r0]
   17e94:	movw	r0, #49620	; 0xc1d4
   17e98:	movt	r0, #2
   17e9c:	str	r8, [r0]
   17ea0:	movw	r0, #53400	; 0xd098
   17ea4:	movt	r0, #2
   17ea8:	str	r8, [r0]
   17eac:	movw	r0, #49632	; 0xc1e0
   17eb0:	movt	r0, #2
   17eb4:	str	r8, [r0]
   17eb8:	movw	r0, #53404	; 0xd09c
   17ebc:	movt	r0, #2
   17ec0:	str	r8, [r0]
   17ec4:	add	r0, r7, #1
   17ec8:	sub	r7, sl, r0
   17ecc:	cmp	r7, #1
   17ed0:	blt	18d48 <main@@Base+0x10c0>
   17ed4:	add	r9, r4, r0, lsl #2
   17ed8:	sub	r0, r7, #1
   17edc:	movw	r4, #40815	; 0x9f6f
   17ee0:	str	r0, [sp, #8]
   17ee4:	mov	r0, #1
   17ee8:	movt	r4, #1
   17eec:	str	r0, [sp, #16]
   17ef0:	mov	r0, #1
   17ef4:	str	r0, [sp, #12]
   17ef8:	b	18af8 <main@@Base+0xe70>
   17efc:	movw	r1, #49624	; 0xc1d8
   17f00:	movt	r1, #2
   17f04:	b	17f20 <main@@Base+0x298>
   17f08:	movw	r1, #53416	; 0xd0a8
   17f0c:	movt	r1, #2
   17f10:	b	17f20 <main@@Base+0x298>
   17f14:	bl	12a0c <atoi@plt>
   17f18:	movw	r1, #49580	; 0xc1ac
   17f1c:	movt	r1, #2
   17f20:	str	r0, [r1]
   17f24:	b	180cc <main@@Base+0x444>
   17f28:	mov	r9, r2
   17f2c:	mov	sl, r3
   17f30:	bl	12a0c <atoi@plt>
   17f34:	str	r0, [sp, #12]
   17f38:	stmib	sp, {r9, sl}
   17f3c:	b	180cc <main@@Base+0x444>
   17f40:	ldr	sl, [r6, r9, lsl #2]
   17f44:	movw	r1, #40829	; 0x9f7d
   17f48:	movt	r1, #1
   17f4c:	mov	r0, sl
   17f50:	bl	12664 <strcmp@plt>
   17f54:	cmp	r0, #0
   17f58:	beq	180c4 <main@@Base+0x43c>
   17f5c:	movw	r1, #41135	; 0xa0af
   17f60:	mov	r0, sl
   17f64:	movt	r1, #1
   17f68:	bl	12664 <strcmp@plt>
   17f6c:	cmp	r0, #0
   17f70:	beq	180c4 <main@@Base+0x43c>
   17f74:	movw	r1, #40995	; 0xa023
   17f78:	mov	r0, sl
   17f7c:	movt	r1, #1
   17f80:	bl	12664 <strcmp@plt>
   17f84:	cmp	r0, #0
   17f88:	beq	17fa4 <main@@Base+0x31c>
   17f8c:	movw	r1, #40998	; 0xa026
   17f90:	mov	r0, sl
   17f94:	movt	r1, #1
   17f98:	bl	12664 <strcmp@plt>
   17f9c:	cmp	r0, #0
   17fa0:	bne	17fc0 <main@@Base+0x338>
   17fa4:	add	r5, r9, #1
   17fa8:	cmp	r5, r8
   17fac:	bge	17fc0 <main@@Base+0x338>
   17fb0:	ldr	r0, [r6, r5, lsl #2]
   17fb4:	ldrb	r1, [r0]
   17fb8:	cmp	r1, #45	; 0x2d
   17fbc:	bne	17efc <main@@Base+0x274>
   17fc0:	movw	r1, #41125	; 0xa0a5
   17fc4:	mov	r0, sl
   17fc8:	movt	r1, #1
   17fcc:	bl	12664 <strcmp@plt>
   17fd0:	cmp	r0, #0
   17fd4:	beq	17ff0 <main@@Base+0x368>
   17fd8:	movw	r1, #41128	; 0xa0a8
   17fdc:	mov	r0, sl
   17fe0:	movt	r1, #1
   17fe4:	bl	12664 <strcmp@plt>
   17fe8:	cmp	r0, #0
   17fec:	bne	1800c <main@@Base+0x384>
   17ff0:	add	r5, r9, #1
   17ff4:	cmp	r5, r8
   17ff8:	bge	1800c <main@@Base+0x384>
   17ffc:	ldr	r0, [r6, r5, lsl #2]
   18000:	ldrb	r1, [r0]
   18004:	cmp	r1, #45	; 0x2d
   18008:	bne	17f08 <main@@Base+0x280>
   1800c:	movw	r1, #41167	; 0xa0cf
   18010:	mov	r0, sl
   18014:	movt	r1, #1
   18018:	bl	12664 <strcmp@plt>
   1801c:	cmp	r0, #0
   18020:	bne	18040 <main@@Base+0x3b8>
   18024:	add	r5, r9, #1
   18028:	cmp	r5, r8
   1802c:	bge	18040 <main@@Base+0x3b8>
   18030:	ldr	r0, [r6, r5, lsl #2]
   18034:	ldrb	r1, [r0]
   18038:	cmp	r1, #45	; 0x2d
   1803c:	bne	17f14 <main@@Base+0x28c>
   18040:	movw	r1, #41179	; 0xa0db
   18044:	mov	r0, sl
   18048:	movt	r1, #1
   1804c:	bl	12664 <strcmp@plt>
   18050:	cmp	r0, #0
   18054:	bne	18098 <main@@Base+0x410>
   18058:	add	r5, r9, #3
   1805c:	cmp	r5, r8
   18060:	bge	18098 <main@@Base+0x410>
   18064:	add	r0, r6, r9, lsl #2
   18068:	ldr	r2, [r0, #4]
   1806c:	ldrb	r1, [r2]
   18070:	cmp	r1, #45	; 0x2d
   18074:	beq	18098 <main@@Base+0x410>
   18078:	ldr	r3, [r0, #8]
   1807c:	ldrb	r0, [r3]
   18080:	cmp	r0, #45	; 0x2d
   18084:	beq	18098 <main@@Base+0x410>
   18088:	ldr	r0, [r6, r5, lsl #2]
   1808c:	ldrb	r1, [r0]
   18090:	cmp	r1, #45	; 0x2d
   18094:	bne	17f28 <main@@Base+0x2a0>
   18098:	cmp	r9, r4
   1809c:	bne	18d48 <main@@Base+0x10c0>
   180a0:	ldrb	r0, [sl]
   180a4:	cmp	r0, #45	; 0x2d
   180a8:	beq	18d48 <main@@Base+0x10c0>
   180ac:	movw	r0, #49640	; 0xc1e8
   180b0:	mov	r5, r4
   180b4:	str	sl, [sp, #16]
   180b8:	movt	r0, #2
   180bc:	str	sl, [r0]
   180c0:	b	180cc <main@@Base+0x444>
   180c4:	mov	r7, #0
   180c8:	mov	r5, r9
   180cc:	add	r9, r5, #1
   180d0:	cmp	r9, r8
   180d4:	blt	17f40 <main@@Base+0x2b8>
   180d8:	ldr	r0, [sp, #16]
   180dc:	cmp	r0, #0
   180e0:	ldrbne	r0, [r0]
   180e4:	cmpne	r0, #0
   180e8:	beq	18d48 <main@@Base+0x10c0>
   180ec:	bl	128d4 <coda_init@plt>
   180f0:	cmp	r0, #0
   180f4:	bne	18ddc <main@@Base+0x1154>
   180f8:	mov	r0, #0
   180fc:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18100:	mov	r0, r7
   18104:	bl	12634 <coda_set_option_use_fast_size_expressions@plt>
   18108:	movw	r0, #49624	; 0xc1d8
   1810c:	movw	r4, #53392	; 0xd090
   18110:	movt	r0, #2
   18114:	movt	r4, #2
   18118:	ldr	r0, [r0]
   1811c:	cmp	r0, #0
   18120:	beq	1813c <main@@Base+0x4b4>
   18124:	movw	r1, #41065	; 0xa069
   18128:	movt	r1, #1
   1812c:	bl	12694 <fopen@plt>
   18130:	cmp	r0, #0
   18134:	str	r0, [r4]
   18138:	beq	18e3c <main@@Base+0x11b4>
   1813c:	ldmib	sp, {r0, r1, r2}
   18140:	bl	13658 <print_debug_data@@Base>
   18144:	movw	r0, #49624	; 0xc1d8
   18148:	movt	r0, #2
   1814c:	ldr	r0, [r0]
   18150:	cmp	r0, #0
   18154:	beq	18db4 <main@@Base+0x112c>
   18158:	ldr	r0, [r4]
   1815c:	b	1878c <main@@Base+0xb04>
   18160:	movw	r0, #53412	; 0xd0a4
   18164:	mov	r2, #1
   18168:	movw	r1, #49640	; 0xc1e8
   1816c:	mov	r6, #0
   18170:	movt	r0, #2
   18174:	movt	r1, #2
   18178:	str	r2, [r0]
   1817c:	movw	r0, #49624	; 0xc1d8
   18180:	str	r6, [r1]
   18184:	str	r6, [r1, #664]	; 0x298
   18188:	movw	r1, #53396	; 0xd094
   1818c:	movt	r0, #2
   18190:	movt	r1, #2
   18194:	str	r6, [r0]
   18198:	movw	r0, #39087	; 0x98af
   1819c:	movt	r0, #1
   181a0:	str	r0, [r1]
   181a4:	movw	r0, #49616	; 0xc1d0
   181a8:	movw	r1, #53392	; 0xd090
   181ac:	movt	r0, #2
   181b0:	movt	r1, #2
   181b4:	str	r2, [r0]
   181b8:	movw	r0, #49636	; 0xc1e4
   181bc:	movt	r0, #2
   181c0:	str	r2, [r0]
   181c4:	movw	r0, #53408	; 0xd0a0
   181c8:	movt	r0, #2
   181cc:	str	r6, [r0]
   181d0:	movw	r0, #53792	; 0xd220
   181d4:	movt	r0, #2
   181d8:	str	r6, [r0]
   181dc:	movw	r0, #53796	; 0xd224
   181e0:	movt	r0, #2
   181e4:	str	r6, [r0]
   181e8:	movw	r0, #49628	; 0xc1dc
   181ec:	movt	r0, #2
   181f0:	str	r6, [r0]
   181f4:	movw	r0, #49588	; 0xc1b4
   181f8:	movt	r0, #2
   181fc:	ldr	r0, [r0]
   18200:	str	r0, [r1]
   18204:	add	r0, r7, #1
   18208:	sub	r8, sl, r0
   1820c:	cmp	r8, #1
   18210:	blt	18d48 <main@@Base+0x10c0>
   18214:	add	sl, r4, r0, lsl #2
   18218:	movw	r5, #40829	; 0x9f7d
   1821c:	sub	r0, r8, #1
   18220:	mov	r4, #1
   18224:	str	r0, [sp, #12]
   18228:	movt	r5, #1
   1822c:	mov	r0, #1
   18230:	str	r0, [sp, #16]
   18234:	b	187c0 <main@@Base+0xb38>
   18238:	ldr	r0, [r4, #8]
   1823c:	bl	12784 <coda_set_definition_path@plt>
   18240:	mov	r7, #3
   18244:	b	17d48 <main@@Base+0xc0>
   18248:	movw	r0, #49640	; 0xc1e8
   1824c:	mov	r2, #0
   18250:	mov	r1, #3
   18254:	movt	r0, #2
   18258:	str	r2, [r0]
   1825c:	movw	r0, #53412	; 0xd0a4
   18260:	movt	r0, #2
   18264:	str	r1, [r0]
   18268:	movw	r0, #49624	; 0xc1d8
   1826c:	movw	r1, #53392	; 0xd090
   18270:	movt	r0, #2
   18274:	movt	r1, #2
   18278:	str	r2, [r0]
   1827c:	movw	r0, #53416	; 0xd0a8
   18280:	movt	r0, #2
   18284:	str	r2, [r0]
   18288:	movw	r0, #49588	; 0xc1b4
   1828c:	movt	r0, #2
   18290:	ldr	r0, [r0]
   18294:	str	r0, [r1]
   18298:	add	r0, r7, #1
   1829c:	sub	r8, sl, r0
   182a0:	cmp	r8, #1
   182a4:	blt	18d48 <main@@Base+0x10c0>
   182a8:	add	r9, r4, r0, lsl #2
   182ac:	sub	r0, r8, #1
   182b0:	movw	r6, #41109	; 0xa095
   182b4:	movw	r7, #41112	; 0xa098
   182b8:	mov	r1, #0
   182bc:	mov	r5, #0
   182c0:	mov	r4, #0
   182c4:	str	r0, [sp, #12]
   182c8:	mov	r0, #1
   182cc:	movt	r6, #1
   182d0:	movt	r7, #1
   182d4:	str	r1, [sp, #8]
   182d8:	str	r0, [sp, #16]
   182dc:	mov	r0, #1
   182e0:	str	r0, [sp, #4]
   182e4:	b	18310 <main@@Base+0x688>
   182e8:	mov	r0, #0
   182ec:	str	r0, [sp, #4]
   182f0:	b	1845c <main@@Base+0x7d4>
   182f4:	movw	r2, #49624	; 0xc1d8
   182f8:	movt	r2, #2
   182fc:	b	18308 <main@@Base+0x680>
   18300:	movw	r2, #53416	; 0xd0a8
   18304:	movt	r2, #2
   18308:	str	r1, [r2]
   1830c:	b	18460 <main@@Base+0x7d8>
   18310:	ldr	sl, [r9, r5, lsl #2]
   18314:	mov	r1, r6
   18318:	mov	r0, sl
   1831c:	bl	12664 <strcmp@plt>
   18320:	cmp	r0, #0
   18324:	beq	1844c <main@@Base+0x7c4>
   18328:	mov	r0, sl
   1832c:	mov	r1, r7
   18330:	bl	12664 <strcmp@plt>
   18334:	cmp	r0, #0
   18338:	beq	1844c <main@@Base+0x7c4>
   1833c:	movw	r1, #40829	; 0x9f7d
   18340:	mov	r0, sl
   18344:	movt	r1, #1
   18348:	bl	12664 <strcmp@plt>
   1834c:	cmp	r0, #0
   18350:	beq	18454 <main@@Base+0x7cc>
   18354:	movw	r1, #40832	; 0x9f80
   18358:	mov	r0, sl
   1835c:	movt	r1, #1
   18360:	bl	12664 <strcmp@plt>
   18364:	cmp	r0, #0
   18368:	beq	18454 <main@@Base+0x7cc>
   1836c:	movw	r1, #40995	; 0xa023
   18370:	mov	r0, sl
   18374:	movt	r1, #1
   18378:	bl	12664 <strcmp@plt>
   1837c:	cmp	r0, #0
   18380:	beq	1839c <main@@Base+0x714>
   18384:	movw	r1, #40998	; 0xa026
   18388:	mov	r0, sl
   1838c:	movt	r1, #1
   18390:	bl	12664 <strcmp@plt>
   18394:	cmp	r0, #0
   18398:	bne	183b8 <main@@Base+0x730>
   1839c:	add	r0, r5, #1
   183a0:	cmp	r0, r8
   183a4:	bge	183b8 <main@@Base+0x730>
   183a8:	ldr	r1, [r9, r0, lsl #2]
   183ac:	ldrb	r2, [r1]
   183b0:	cmp	r2, #45	; 0x2d
   183b4:	bne	182f4 <main@@Base+0x66c>
   183b8:	movw	r1, #41125	; 0xa0a5
   183bc:	mov	r0, sl
   183c0:	movt	r1, #1
   183c4:	bl	12664 <strcmp@plt>
   183c8:	cmp	r0, #0
   183cc:	beq	183e8 <main@@Base+0x760>
   183d0:	movw	r1, #41128	; 0xa0a8
   183d4:	mov	r0, sl
   183d8:	movt	r1, #1
   183dc:	bl	12664 <strcmp@plt>
   183e0:	cmp	r0, #0
   183e4:	bne	18404 <main@@Base+0x77c>
   183e8:	add	r0, r5, #1
   183ec:	cmp	r0, r8
   183f0:	bge	18404 <main@@Base+0x77c>
   183f4:	ldr	r1, [r9, r0, lsl #2]
   183f8:	ldrb	r2, [r1]
   183fc:	cmp	r2, #45	; 0x2d
   18400:	bne	18300 <main@@Base+0x678>
   18404:	movw	r1, #40954	; 0x9ffa
   18408:	mov	r0, sl
   1840c:	movt	r1, #1
   18410:	bl	12664 <strcmp@plt>
   18414:	cmp	r0, #0
   18418:	beq	182e8 <main@@Base+0x660>
   1841c:	ldr	r0, [sp, #12]
   18420:	cmp	r5, r0
   18424:	bne	18d48 <main@@Base+0x10c0>
   18428:	ldrb	r0, [sl]
   1842c:	cmp	r0, #45	; 0x2d
   18430:	beq	18d48 <main@@Base+0x10c0>
   18434:	movw	r0, #49640	; 0xc1e8
   18438:	str	sl, [sp, #8]
   1843c:	movt	r0, #2
   18440:	str	sl, [r0]
   18444:	ldr	r0, [sp, #12]
   18448:	b	18460 <main@@Base+0x7d8>
   1844c:	mov	r4, #1
   18450:	b	1845c <main@@Base+0x7d4>
   18454:	mov	r0, #0
   18458:	str	r0, [sp, #16]
   1845c:	mov	r0, r5
   18460:	add	r5, r0, #1
   18464:	cmp	r5, r8
   18468:	blt	18310 <main@@Base+0x688>
   1846c:	ldr	r0, [sp, #8]
   18470:	cmp	r0, #0
   18474:	ldrbne	r0, [r0]
   18478:	cmpne	r0, #0
   1847c:	beq	18d48 <main@@Base+0x10c0>
   18480:	bl	128d4 <coda_init@plt>
   18484:	cmp	r0, #0
   18488:	bne	18ddc <main@@Base+0x1154>
   1848c:	ldr	r0, [sp, #4]
   18490:	clz	r0, r0
   18494:	lsr	r0, r0, #5
   18498:	bl	12718 <coda_set_option_bypass_special_types@plt>
   1849c:	ldr	r0, [sp, #16]
   184a0:	bl	128e0 <coda_set_option_perform_conversions@plt>
   184a4:	movw	r5, #49624	; 0xc1d8
   184a8:	movw	r6, #53392	; 0xd090
   184ac:	movt	r5, #2
   184b0:	movt	r6, #2
   184b4:	ldr	r0, [r5]
   184b8:	cmp	r0, #0
   184bc:	beq	184d8 <main@@Base+0x850>
   184c0:	movw	r1, #41065	; 0xa069
   184c4:	movt	r1, #1
   184c8:	bl	12694 <fopen@plt>
   184cc:	cmp	r0, #0
   184d0:	str	r0, [r6]
   184d4:	beq	18e2c <main@@Base+0x11a4>
   184d8:	mov	r0, r4
   184dc:	bl	15b8c <print_json_data@@Base>
   184e0:	b	1877c <main@@Base+0xaf4>
   184e4:	movw	r0, #49640	; 0xc1e8
   184e8:	mov	r2, #0
   184ec:	mov	r1, #4
   184f0:	movt	r0, #2
   184f4:	str	r2, [r0]
   184f8:	movw	r0, #53412	; 0xd0a4
   184fc:	movt	r0, #2
   18500:	str	r1, [r0]
   18504:	movw	r0, #49624	; 0xc1d8
   18508:	movw	r1, #53392	; 0xd090
   1850c:	movt	r0, #2
   18510:	movt	r1, #2
   18514:	str	r2, [r0]
   18518:	movw	r0, #53416	; 0xd0a8
   1851c:	movt	r0, #2
   18520:	str	r2, [r0]
   18524:	movw	r0, #49588	; 0xc1b4
   18528:	movt	r0, #2
   1852c:	ldr	r0, [r0]
   18530:	str	r0, [r1]
   18534:	add	r0, r7, #1
   18538:	sub	r8, sl, r0
   1853c:	cmp	r8, #1
   18540:	blt	18d48 <main@@Base+0x10c0>
   18544:	add	r9, r4, r0, lsl #2
   18548:	sub	r0, r8, #1
   1854c:	movw	r6, #41109	; 0xa095
   18550:	movw	r7, #41112	; 0xa098
   18554:	mov	r1, #0
   18558:	mov	r5, #0
   1855c:	mov	r4, #0
   18560:	str	r0, [sp, #12]
   18564:	mov	r0, #1
   18568:	movt	r6, #1
   1856c:	movt	r7, #1
   18570:	str	r1, [sp, #8]
   18574:	str	r0, [sp, #16]
   18578:	mov	r0, #1
   1857c:	str	r0, [sp, #4]
   18580:	b	185ac <main@@Base+0x924>
   18584:	mov	r0, #0
   18588:	str	r0, [sp, #4]
   1858c:	b	186f8 <main@@Base+0xa70>
   18590:	movw	r2, #49624	; 0xc1d8
   18594:	movt	r2, #2
   18598:	b	185a4 <main@@Base+0x91c>
   1859c:	movw	r2, #53416	; 0xd0a8
   185a0:	movt	r2, #2
   185a4:	str	r1, [r2]
   185a8:	b	186fc <main@@Base+0xa74>
   185ac:	ldr	sl, [r9, r5, lsl #2]
   185b0:	mov	r1, r6
   185b4:	mov	r0, sl
   185b8:	bl	12664 <strcmp@plt>
   185bc:	cmp	r0, #0
   185c0:	beq	186e8 <main@@Base+0xa60>
   185c4:	mov	r0, sl
   185c8:	mov	r1, r7
   185cc:	bl	12664 <strcmp@plt>
   185d0:	cmp	r0, #0
   185d4:	beq	186e8 <main@@Base+0xa60>
   185d8:	movw	r1, #40829	; 0x9f7d
   185dc:	mov	r0, sl
   185e0:	movt	r1, #1
   185e4:	bl	12664 <strcmp@plt>
   185e8:	cmp	r0, #0
   185ec:	beq	186f0 <main@@Base+0xa68>
   185f0:	movw	r1, #40832	; 0x9f80
   185f4:	mov	r0, sl
   185f8:	movt	r1, #1
   185fc:	bl	12664 <strcmp@plt>
   18600:	cmp	r0, #0
   18604:	beq	186f0 <main@@Base+0xa68>
   18608:	movw	r1, #40995	; 0xa023
   1860c:	mov	r0, sl
   18610:	movt	r1, #1
   18614:	bl	12664 <strcmp@plt>
   18618:	cmp	r0, #0
   1861c:	beq	18638 <main@@Base+0x9b0>
   18620:	movw	r1, #40998	; 0xa026
   18624:	mov	r0, sl
   18628:	movt	r1, #1
   1862c:	bl	12664 <strcmp@plt>
   18630:	cmp	r0, #0
   18634:	bne	18654 <main@@Base+0x9cc>
   18638:	add	r0, r5, #1
   1863c:	cmp	r0, r8
   18640:	bge	18654 <main@@Base+0x9cc>
   18644:	ldr	r1, [r9, r0, lsl #2]
   18648:	ldrb	r2, [r1]
   1864c:	cmp	r2, #45	; 0x2d
   18650:	bne	18590 <main@@Base+0x908>
   18654:	movw	r1, #41125	; 0xa0a5
   18658:	mov	r0, sl
   1865c:	movt	r1, #1
   18660:	bl	12664 <strcmp@plt>
   18664:	cmp	r0, #0
   18668:	beq	18684 <main@@Base+0x9fc>
   1866c:	movw	r1, #41128	; 0xa0a8
   18670:	mov	r0, sl
   18674:	movt	r1, #1
   18678:	bl	12664 <strcmp@plt>
   1867c:	cmp	r0, #0
   18680:	bne	186a0 <main@@Base+0xa18>
   18684:	add	r0, r5, #1
   18688:	cmp	r0, r8
   1868c:	bge	186a0 <main@@Base+0xa18>
   18690:	ldr	r1, [r9, r0, lsl #2]
   18694:	ldrb	r2, [r1]
   18698:	cmp	r2, #45	; 0x2d
   1869c:	bne	1859c <main@@Base+0x914>
   186a0:	movw	r1, #40954	; 0x9ffa
   186a4:	mov	r0, sl
   186a8:	movt	r1, #1
   186ac:	bl	12664 <strcmp@plt>
   186b0:	cmp	r0, #0
   186b4:	beq	18584 <main@@Base+0x8fc>
   186b8:	ldr	r0, [sp, #12]
   186bc:	cmp	r5, r0
   186c0:	bne	18d48 <main@@Base+0x10c0>
   186c4:	ldrb	r0, [sl]
   186c8:	cmp	r0, #45	; 0x2d
   186cc:	beq	18d48 <main@@Base+0x10c0>
   186d0:	movw	r0, #49640	; 0xc1e8
   186d4:	str	sl, [sp, #8]
   186d8:	movt	r0, #2
   186dc:	str	sl, [r0]
   186e0:	ldr	r0, [sp, #12]
   186e4:	b	186fc <main@@Base+0xa74>
   186e8:	mov	r4, #1
   186ec:	b	186f8 <main@@Base+0xa70>
   186f0:	mov	r0, #0
   186f4:	str	r0, [sp, #16]
   186f8:	mov	r0, r5
   186fc:	add	r5, r0, #1
   18700:	cmp	r5, r8
   18704:	blt	185ac <main@@Base+0x924>
   18708:	ldr	r0, [sp, #8]
   1870c:	cmp	r0, #0
   18710:	ldrbne	r0, [r0]
   18714:	cmpne	r0, #0
   18718:	beq	18d48 <main@@Base+0x10c0>
   1871c:	bl	128d4 <coda_init@plt>
   18720:	cmp	r0, #0
   18724:	bne	18ddc <main@@Base+0x1154>
   18728:	ldr	r0, [sp, #4]
   1872c:	clz	r0, r0
   18730:	lsr	r0, r0, #5
   18734:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18738:	ldr	r0, [sp, #16]
   1873c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18740:	movw	r5, #49624	; 0xc1d8
   18744:	movw	r6, #53392	; 0xd090
   18748:	movt	r5, #2
   1874c:	movt	r6, #2
   18750:	ldr	r0, [r5]
   18754:	cmp	r0, #0
   18758:	beq	18774 <main@@Base+0xaec>
   1875c:	movw	r1, #41065	; 0xa069
   18760:	movt	r1, #1
   18764:	bl	12694 <fopen@plt>
   18768:	cmp	r0, #0
   1876c:	str	r0, [r6]
   18770:	beq	18e2c <main@@Base+0x11a4>
   18774:	mov	r0, r4
   18778:	bl	170cc <print_yaml_data@@Base>
   1877c:	ldr	r0, [r5]
   18780:	cmp	r0, #0
   18784:	beq	18db4 <main@@Base+0x112c>
   18788:	ldr	r0, [r6]
   1878c:	bl	12958 <fclose@plt>
   18790:	b	18db4 <main@@Base+0x112c>
   18794:	movw	r1, #49624	; 0xc1d8
   18798:	movt	r1, #2
   1879c:	b	187a8 <main@@Base+0xb20>
   187a0:	movw	r1, #53396	; 0xd094
   187a4:	movt	r1, #2
   187a8:	str	r0, [r1]
   187ac:	b	18a40 <main@@Base+0xdb8>
   187b0:	mov	r0, #0
   187b4:	mov	r7, r6
   187b8:	str	r0, [sp, #16]
   187bc:	b	18a40 <main@@Base+0xdb8>
   187c0:	ldr	r9, [sl, r6, lsl #2]
   187c4:	mov	r1, r5
   187c8:	mov	r0, r9
   187cc:	bl	12664 <strcmp@plt>
   187d0:	cmp	r0, #0
   187d4:	beq	189d8 <main@@Base+0xd50>
   187d8:	movw	r1, #40832	; 0x9f80
   187dc:	mov	r0, r9
   187e0:	movt	r1, #1
   187e4:	bl	12664 <strcmp@plt>
   187e8:	cmp	r0, #0
   187ec:	beq	189d8 <main@@Base+0xd50>
   187f0:	movw	r1, #40854	; 0x9f96
   187f4:	mov	r0, r9
   187f8:	movt	r1, #1
   187fc:	bl	12664 <strcmp@plt>
   18800:	cmp	r0, #0
   18804:	beq	18820 <main@@Base+0xb98>
   18808:	movw	r1, #40857	; 0x9f99
   1880c:	mov	r0, r9
   18810:	movt	r1, #1
   18814:	bl	12664 <strcmp@plt>
   18818:	cmp	r0, #0
   1881c:	bne	1883c <main@@Base+0xbb4>
   18820:	add	r7, r6, #1
   18824:	cmp	r7, r8
   18828:	bge	1883c <main@@Base+0xbb4>
   1882c:	ldr	r0, [sl, r7, lsl #2]
   18830:	ldrb	r1, [r0]
   18834:	cmp	r1, #45	; 0x2d
   18838:	bne	18a00 <main@@Base+0xd78>
   1883c:	movw	r1, #40973	; 0xa00d
   18840:	mov	r0, r9
   18844:	movt	r1, #1
   18848:	bl	12664 <strcmp@plt>
   1884c:	cmp	r0, #0
   18850:	beq	189e0 <main@@Base+0xd58>
   18854:	movw	r1, #40976	; 0xa010
   18858:	mov	r0, r9
   1885c:	movt	r1, #1
   18860:	bl	12664 <strcmp@plt>
   18864:	cmp	r0, #0
   18868:	beq	189e0 <main@@Base+0xd58>
   1886c:	movw	r1, #40984	; 0xa018
   18870:	mov	r0, r9
   18874:	movt	r1, #1
   18878:	bl	12664 <strcmp@plt>
   1887c:	cmp	r0, #0
   18880:	beq	189f0 <main@@Base+0xd68>
   18884:	movw	r1, #40987	; 0xa01b
   18888:	mov	r0, r9
   1888c:	movt	r1, #1
   18890:	bl	12664 <strcmp@plt>
   18894:	cmp	r0, #0
   18898:	beq	189f0 <main@@Base+0xd68>
   1889c:	movw	r1, #40995	; 0xa023
   188a0:	mov	r0, r9
   188a4:	movt	r1, #1
   188a8:	bl	12664 <strcmp@plt>
   188ac:	cmp	r0, #0
   188b0:	beq	188cc <main@@Base+0xc44>
   188b4:	movw	r1, #40998	; 0xa026
   188b8:	mov	r0, r9
   188bc:	movt	r1, #1
   188c0:	bl	12664 <strcmp@plt>
   188c4:	cmp	r0, #0
   188c8:	bne	188e8 <main@@Base+0xc60>
   188cc:	add	r7, r6, #1
   188d0:	cmp	r7, r8
   188d4:	bge	188e8 <main@@Base+0xc60>
   188d8:	ldr	r0, [sl, r7, lsl #2]
   188dc:	ldrb	r1, [r0]
   188e0:	cmp	r1, #45	; 0x2d
   188e4:	bne	18794 <main@@Base+0xb0c>
   188e8:	movw	r1, #41007	; 0xa02f
   188ec:	mov	r0, r9
   188f0:	movt	r1, #1
   188f4:	bl	12664 <strcmp@plt>
   188f8:	cmp	r0, #0
   188fc:	beq	18a1c <main@@Base+0xd94>
   18900:	movw	r1, #41010	; 0xa032
   18904:	mov	r0, r9
   18908:	movt	r1, #1
   1890c:	bl	12664 <strcmp@plt>
   18910:	cmp	r0, #0
   18914:	beq	18a1c <main@@Base+0xd94>
   18918:	movw	r1, #41026	; 0xa042
   1891c:	mov	r0, r9
   18920:	movt	r1, #1
   18924:	bl	12664 <strcmp@plt>
   18928:	cmp	r0, #0
   1892c:	beq	18948 <main@@Base+0xcc0>
   18930:	movw	r1, #41029	; 0xa045
   18934:	mov	r0, r9
   18938:	movt	r1, #1
   1893c:	bl	12664 <strcmp@plt>
   18940:	cmp	r0, #0
   18944:	bne	18964 <main@@Base+0xcdc>
   18948:	add	r7, r6, #1
   1894c:	cmp	r7, r8
   18950:	bge	18964 <main@@Base+0xcdc>
   18954:	ldr	r0, [sl, r7, lsl #2]
   18958:	ldrb	r1, [r0]
   1895c:	cmp	r1, #45	; 0x2d
   18960:	bne	187a0 <main@@Base+0xb18>
   18964:	movw	r1, #40907	; 0x9fcb
   18968:	mov	r0, r9
   1896c:	movt	r1, #1
   18970:	bl	12664 <strcmp@plt>
   18974:	cmp	r0, #0
   18978:	beq	18a2c <main@@Base+0xda4>
   1897c:	movw	r1, #41048	; 0xa058
   18980:	mov	r0, r9
   18984:	movt	r1, #1
   18988:	bl	12664 <strcmp@plt>
   1898c:	cmp	r0, #0
   18990:	beq	18a2c <main@@Base+0xda4>
   18994:	movw	r1, #40954	; 0x9ffa
   18998:	mov	r0, r9
   1899c:	movt	r1, #1
   189a0:	bl	12664 <strcmp@plt>
   189a4:	cmp	r0, #0
   189a8:	beq	187b0 <main@@Base+0xb28>
   189ac:	ldr	r0, [sp, #12]
   189b0:	cmp	r6, r0
   189b4:	bne	18d48 <main@@Base+0x10c0>
   189b8:	ldrb	r0, [r9]
   189bc:	cmp	r0, #45	; 0x2d
   189c0:	beq	18d48 <main@@Base+0x10c0>
   189c4:	ldr	r7, [sp, #12]
   189c8:	movw	r0, #49640	; 0xc1e8
   189cc:	movt	r0, #2
   189d0:	str	r9, [r0]
   189d4:	b	18a40 <main@@Base+0xdb8>
   189d8:	mov	r4, #0
   189dc:	b	18a3c <main@@Base+0xdb4>
   189e0:	movw	r1, #53408	; 0xd0a0
   189e4:	mov	r0, #1
   189e8:	movt	r1, #2
   189ec:	b	18a38 <main@@Base+0xdb0>
   189f0:	movw	r1, #53792	; 0xd220
   189f4:	mov	r0, #1
   189f8:	movt	r1, #2
   189fc:	b	18a38 <main@@Base+0xdb0>
   18a00:	bl	15684 <codadump_filter_create@@Base>
   18a04:	movw	r1, #49640	; 0xc1e8
   18a08:	cmp	r0, #0
   18a0c:	movt	r1, #2
   18a10:	str	r0, [r1, #664]	; 0x298
   18a14:	bne	18a40 <main@@Base+0xdb8>
   18a18:	b	18e10 <main@@Base+0x1188>
   18a1c:	movw	r1, #53796	; 0xd224
   18a20:	mov	r0, #1
   18a24:	movt	r1, #2
   18a28:	b	18a38 <main@@Base+0xdb0>
   18a2c:	movw	r1, #49628	; 0xc1dc
   18a30:	mov	r0, #1
   18a34:	movt	r1, #2
   18a38:	str	r0, [r1]
   18a3c:	mov	r7, r6
   18a40:	add	r6, r7, #1
   18a44:	cmp	r6, r8
   18a48:	blt	187c0 <main@@Base+0xb38>
   18a4c:	movw	r0, #49640	; 0xc1e8
   18a50:	movt	r0, #2
   18a54:	ldr	r0, [r0]
   18a58:	cmp	r0, #0
   18a5c:	ldrbne	r0, [r0]
   18a60:	cmpne	r0, #0
   18a64:	beq	18d48 <main@@Base+0x10c0>
   18a68:	bl	128d4 <coda_init@plt>
   18a6c:	cmp	r0, #0
   18a70:	bne	18ddc <main@@Base+0x1154>
   18a74:	ldr	r0, [sp, #16]
   18a78:	clz	r0, r0
   18a7c:	lsr	r0, r0, #5
   18a80:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18a84:	mov	r0, #0
   18a88:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18a8c:	mov	r0, r4
   18a90:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18a94:	bl	1691c <traverse_info_init@@Base>
   18a98:	bl	14568 <dim_info_init@@Base>
   18a9c:	movw	r4, #49624	; 0xc1d8
   18aa0:	movw	r5, #53392	; 0xd090
   18aa4:	movt	r4, #2
   18aa8:	movt	r5, #2
   18aac:	ldr	r0, [r4]
   18ab0:	cmp	r0, #0
   18ab4:	beq	18ad0 <main@@Base+0xe48>
   18ab8:	movw	r1, #41065	; 0xa069
   18abc:	movt	r1, #1
   18ac0:	bl	12694 <fopen@plt>
   18ac4:	cmp	r0, #0
   18ac8:	str	r0, [r5]
   18acc:	beq	18e34 <main@@Base+0x11ac>
   18ad0:	bl	16974 <traverse_product@@Base>
   18ad4:	ldr	r0, [r4]
   18ad8:	cmp	r0, #0
   18adc:	beq	18dac <main@@Base+0x1124>
   18ae0:	ldr	r0, [r5]
   18ae4:	bl	12958 <fclose@plt>
   18ae8:	b	18dac <main@@Base+0x1124>
   18aec:	mov	r0, #0
   18af0:	str	r0, [sp, #12]
   18af4:	b	18d20 <main@@Base+0x1098>
   18af8:	ldr	sl, [r9, r8, lsl #2]
   18afc:	mov	r1, r4
   18b00:	mov	r0, sl
   18b04:	bl	12664 <strcmp@plt>
   18b08:	cmp	r0, #0
   18b0c:	beq	18d1c <main@@Base+0x1094>
   18b10:	movw	r1, #40818	; 0x9f72
   18b14:	mov	r0, sl
   18b18:	movt	r1, #1
   18b1c:	bl	12664 <strcmp@plt>
   18b20:	cmp	r0, #0
   18b24:	beq	18d1c <main@@Base+0x1094>
   18b28:	movw	r1, #40829	; 0x9f7d
   18b2c:	mov	r0, sl
   18b30:	movt	r1, #1
   18b34:	bl	12664 <strcmp@plt>
   18b38:	cmp	r0, #0
   18b3c:	beq	18c8c <main@@Base+0x1004>
   18b40:	movw	r1, #40832	; 0x9f80
   18b44:	mov	r0, sl
   18b48:	movt	r1, #1
   18b4c:	bl	12664 <strcmp@plt>
   18b50:	cmp	r0, #0
   18b54:	beq	18c8c <main@@Base+0x1004>
   18b58:	movw	r1, #40854	; 0x9f96
   18b5c:	mov	r0, sl
   18b60:	mov	r4, r6
   18b64:	movt	r1, #1
   18b68:	bl	12664 <strcmp@plt>
   18b6c:	cmp	r0, #0
   18b70:	beq	18b8c <main@@Base+0xf04>
   18b74:	movw	r1, #40857	; 0x9f99
   18b78:	mov	r0, sl
   18b7c:	movt	r1, #1
   18b80:	bl	12664 <strcmp@plt>
   18b84:	cmp	r0, #0
   18b88:	bne	18ba8 <main@@Base+0xf20>
   18b8c:	add	r6, r8, #1
   18b90:	cmp	r6, r7
   18b94:	bge	18ba8 <main@@Base+0xf20>
   18b98:	ldr	r0, [r9, r6, lsl #2]
   18b9c:	ldrb	r1, [r0]
   18ba0:	cmp	r1, #45	; 0x2d
   18ba4:	bne	18cd0 <main@@Base+0x1048>
   18ba8:	movw	r1, #40907	; 0x9fcb
   18bac:	mov	r0, sl
   18bb0:	movt	r1, #1
   18bb4:	bl	12664 <strcmp@plt>
   18bb8:	cmp	r0, #0
   18bbc:	beq	18c98 <main@@Base+0x1010>
   18bc0:	movw	r1, #40910	; 0x9fce
   18bc4:	mov	r0, sl
   18bc8:	movt	r1, #1
   18bcc:	bl	12664 <strcmp@plt>
   18bd0:	cmp	r0, #0
   18bd4:	beq	18c98 <main@@Base+0x1010>
   18bd8:	movw	r1, #40917	; 0x9fd5
   18bdc:	mov	r0, sl
   18be0:	movt	r1, #1
   18be4:	bl	12664 <strcmp@plt>
   18be8:	cmp	r0, #0
   18bec:	mov	r6, r4
   18bf0:	beq	18cb4 <main@@Base+0x102c>
   18bf4:	movw	r1, #40920	; 0x9fd8
   18bf8:	mov	r0, sl
   18bfc:	movt	r1, #1
   18c00:	bl	12664 <strcmp@plt>
   18c04:	cmp	r0, #0
   18c08:	beq	18cb4 <main@@Base+0x102c>
   18c0c:	movw	r1, #40927	; 0x9fdf
   18c10:	mov	r0, sl
   18c14:	movt	r1, #1
   18c18:	bl	12664 <strcmp@plt>
   18c1c:	movw	r4, #40815	; 0x9f6f
   18c20:	cmp	r0, #0
   18c24:	mov	r5, #1
   18c28:	movt	r4, #1
   18c2c:	beq	18d00 <main@@Base+0x1078>
   18c30:	movw	r1, #40941	; 0x9fed
   18c34:	mov	r0, sl
   18c38:	movt	r1, #1
   18c3c:	bl	12664 <strcmp@plt>
   18c40:	cmp	r0, #0
   18c44:	beq	18d10 <main@@Base+0x1088>
   18c48:	movw	r1, #40954	; 0x9ffa
   18c4c:	mov	r0, sl
   18c50:	movt	r1, #1
   18c54:	bl	12664 <strcmp@plt>
   18c58:	cmp	r0, #0
   18c5c:	beq	18aec <main@@Base+0xe64>
   18c60:	ldr	r0, [sp, #8]
   18c64:	cmp	r8, r0
   18c68:	bne	18d48 <main@@Base+0x10c0>
   18c6c:	ldrb	r0, [sl]
   18c70:	cmp	r0, #45	; 0x2d
   18c74:	beq	18d48 <main@@Base+0x10c0>
   18c78:	ldr	r8, [sp, #8]
   18c7c:	movw	r0, #49640	; 0xc1e8
   18c80:	movt	r0, #2
   18c84:	str	sl, [r0]
   18c88:	b	18d20 <main@@Base+0x1098>
   18c8c:	mov	r0, #0
   18c90:	str	r0, [sp, #16]
   18c94:	b	18d20 <main@@Base+0x1098>
   18c98:	movw	r1, #53400	; 0xd098
   18c9c:	mov	r0, #1
   18ca0:	mov	r6, r4
   18ca4:	mov	r5, #1
   18ca8:	movt	r1, #2
   18cac:	str	r0, [r1]
   18cb0:	b	18cc4 <main@@Base+0x103c>
   18cb4:	movw	r0, #49632	; 0xc1e0
   18cb8:	mov	r5, #1
   18cbc:	movt	r0, #2
   18cc0:	str	r5, [r0]
   18cc4:	movw	r4, #40815	; 0x9f6f
   18cc8:	movt	r4, #1
   18ccc:	b	18d20 <main@@Base+0x1098>
   18cd0:	bl	15684 <codadump_filter_create@@Base>
   18cd4:	movw	r1, #49640	; 0xc1e8
   18cd8:	mov	r8, r6
   18cdc:	mov	r6, r4
   18ce0:	movw	r4, #40815	; 0x9f6f
   18ce4:	cmp	r0, #0
   18ce8:	mov	r5, #1
   18cec:	movt	r1, #2
   18cf0:	movt	r4, #1
   18cf4:	str	r0, [r1, #664]	; 0x298
   18cf8:	bne	18d20 <main@@Base+0x1098>
   18cfc:	b	18e10 <main@@Base+0x1188>
   18d00:	movw	r0, #53404	; 0xd09c
   18d04:	movt	r0, #2
   18d08:	str	r5, [r0]
   18d0c:	b	18d20 <main@@Base+0x1098>
   18d10:	movw	r0, #49620	; 0xc1d4
   18d14:	movt	r0, #2
   18d18:	str	r5, [r0]
   18d1c:	str	r5, [r6]
   18d20:	add	r8, r8, #1
   18d24:	cmp	r8, r7
   18d28:	blt	18af8 <main@@Base+0xe70>
   18d2c:	movw	r0, #49640	; 0xc1e8
   18d30:	movt	r0, #2
   18d34:	ldr	r0, [r0]
   18d38:	cmp	r0, #0
   18d3c:	ldrbne	r0, [r0]
   18d40:	cmpne	r0, #0
   18d44:	bne	18d74 <main@@Base+0x10ec>
   18d48:	movw	r0, #49584	; 0xc1b0
   18d4c:	mov	r1, #25
   18d50:	movt	r0, #2
   18d54:	ldr	r3, [r0]
   18d58:	movw	r0, #40768	; 0x9f40
   18d5c:	movt	r0, #1
   18d60:	mov	r2, #1
   18d64:	bl	127cc <fwrite@plt>
   18d68:	bl	18e60 <main@@Base+0x11d8>
   18d6c:	mov	r0, #1
   18d70:	bl	12868 <exit@plt>
   18d74:	bl	128d4 <coda_init@plt>
   18d78:	cmp	r0, #0
   18d7c:	bne	18ddc <main@@Base+0x1154>
   18d80:	ldr	r0, [sp, #12]
   18d84:	clz	r0, r0
   18d88:	lsr	r0, r0, #5
   18d8c:	bl	12718 <coda_set_option_bypass_special_types@plt>
   18d90:	mov	r0, #0
   18d94:	bl	12658 <coda_set_option_perform_boundary_checks@plt>
   18d98:	ldr	r0, [sp, #16]
   18d9c:	bl	128e0 <coda_set_option_perform_conversions@plt>
   18da0:	bl	1691c <traverse_info_init@@Base>
   18da4:	bl	14568 <dim_info_init@@Base>
   18da8:	bl	16974 <traverse_product@@Base>
   18dac:	bl	14588 <dim_info_done@@Base>
   18db0:	bl	1693c <traverse_info_done@@Base>
   18db4:	bl	127fc <coda_done@plt>
   18db8:	mov	r0, #0
   18dbc:	sub	sp, fp, #28
   18dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18dc4:	bl	18e60 <main@@Base+0x11d8>
   18dc8:	mov	r0, #0
   18dcc:	bl	12868 <exit@plt>
   18dd0:	bl	193c4 <main@@Base+0x173c>
   18dd4:	mov	r0, #0
   18dd8:	bl	12868 <exit@plt>
   18ddc:	movw	r0, #49584	; 0xc1b0
   18de0:	movt	r0, #2
   18de4:	ldr	r4, [r0]
   18de8:	bl	12a60 <coda_get_errno@plt>
   18dec:	ldr	r0, [r0]
   18df0:	bl	12a18 <coda_errno_to_string@plt>
   18df4:	movw	r1, #40678	; 0x9ee6
   18df8:	mov	r2, r0
   18dfc:	mov	r0, r4
   18e00:	movt	r1, #1
   18e04:	bl	128b0 <fprintf@plt>
   18e08:	mov	r0, #1
   18e0c:	bl	12868 <exit@plt>
   18e10:	movw	r0, #49584	; 0xc1b0
   18e14:	mov	r1, #40	; 0x28
   18e18:	movt	r0, #2
   18e1c:	ldr	r3, [r0]
   18e20:	movw	r0, #40866	; 0x9fa2
   18e24:	movt	r0, #1
   18e28:	b	18d60 <main@@Base+0x10d8>
   18e2c:	ldr	r2, [r5]
   18e30:	b	18e48 <main@@Base+0x11c0>
   18e34:	ldr	r2, [r4]
   18e38:	b	18e48 <main@@Base+0x11c0>
   18e3c:	movw	r0, #49624	; 0xc1d8
   18e40:	movt	r0, #2
   18e44:	ldr	r2, [r0]
   18e48:	movw	r0, #49584	; 0xc1b0
   18e4c:	movw	r1, #41067	; 0xa06b
   18e50:	movt	r0, #2
   18e54:	movt	r1, #1
   18e58:	ldr	r0, [r0]
   18e5c:	b	18e04 <main@@Base+0x117c>
   18e60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e64:	add	fp, sp, #28
   18e68:	sub	sp, sp, #4
   18e6c:	movw	r0, #41189	; 0xa0e5
   18e70:	movt	r0, #1
   18e74:	bl	12808 <puts@plt>
   18e78:	movw	r0, #41200	; 0xa0f0
   18e7c:	movt	r0, #1
   18e80:	bl	12808 <puts@plt>
   18e84:	movw	r0, #41280	; 0xa140
   18e88:	movt	r0, #1
   18e8c:	bl	12808 <puts@plt>
   18e90:	movw	r8, #41984	; 0xa400
   18e94:	movt	r8, #1
   18e98:	mov	r0, r8
   18e9c:	bl	12808 <puts@plt>
   18ea0:	movw	r0, #41328	; 0xa170
   18ea4:	movt	r0, #1
   18ea8:	bl	12808 <puts@plt>
   18eac:	movw	r0, #41360	; 0xa190
   18eb0:	movt	r0, #1
   18eb4:	bl	12808 <puts@plt>
   18eb8:	movw	r5, #43408	; 0xa990
   18ebc:	movt	r5, #1
   18ec0:	mov	r0, r5
   18ec4:	bl	12808 <puts@plt>
   18ec8:	movw	r6, #43456	; 0xa9c0
   18ecc:	movt	r6, #1
   18ed0:	mov	r0, r6
   18ed4:	bl	12808 <puts@plt>
   18ed8:	movw	r7, #42016	; 0xa420
   18edc:	movt	r7, #1
   18ee0:	mov	r0, r7
   18ee4:	bl	12808 <puts@plt>
   18ee8:	movw	r4, #42064	; 0xa450
   18eec:	movt	r4, #1
   18ef0:	mov	r0, r4
   18ef4:	bl	12808 <puts@plt>
   18ef8:	movw	r0, #41424	; 0xa1d0
   18efc:	movt	r0, #1
   18f00:	bl	12808 <puts@plt>
   18f04:	movw	r0, #41456	; 0xa1f0
   18f08:	movt	r0, #1
   18f0c:	bl	12808 <puts@plt>
   18f10:	movw	r0, #41504	; 0xa220
   18f14:	movt	r0, #1
   18f18:	bl	12808 <puts@plt>
   18f1c:	movw	r0, #41536	; 0xa240
   18f20:	movt	r0, #1
   18f24:	bl	12808 <puts@plt>
   18f28:	movw	r0, #41584	; 0xa270
   18f2c:	movt	r0, #1
   18f30:	bl	12808 <puts@plt>
   18f34:	movw	r0, #41616	; 0xa290
   18f38:	movt	r0, #1
   18f3c:	bl	12808 <puts@plt>
   18f40:	movw	r0, #41680	; 0xa2d0
   18f44:	movt	r0, #1
   18f48:	bl	12808 <puts@plt>
   18f4c:	movw	r0, #41712	; 0xa2f0
   18f50:	movt	r0, #1
   18f54:	bl	12808 <puts@plt>
   18f58:	movw	r0, #41792	; 0xa340
   18f5c:	movt	r0, #1
   18f60:	bl	12808 <puts@plt>
   18f64:	movw	sl, #43520	; 0xaa00
   18f68:	movt	sl, #1
   18f6c:	mov	r0, sl
   18f70:	bl	12808 <puts@plt>
   18f74:	movw	r0, #43552	; 0xaa20
   18f78:	movt	r0, #1
   18f7c:	bl	12808 <puts@plt>
   18f80:	movw	r0, #43632	; 0xaa70
   18f84:	movt	r0, #1
   18f88:	bl	12808 <puts@plt>
   18f8c:	movw	r0, #43712	; 0xaac0
   18f90:	movt	r0, #1
   18f94:	bl	12808 <puts@plt>
   18f98:	mov	r0, #10
   18f9c:	bl	12910 <putchar@plt>
   18fa0:	movw	r0, #41840	; 0xa370
   18fa4:	movt	r0, #1
   18fa8:	bl	12808 <puts@plt>
   18fac:	movw	r0, #41920	; 0xa3c0
   18fb0:	movt	r0, #1
   18fb4:	bl	12808 <puts@plt>
   18fb8:	mov	r0, r8
   18fbc:	bl	12808 <puts@plt>
   18fc0:	mov	r0, r5
   18fc4:	bl	12808 <puts@plt>
   18fc8:	mov	r0, r6
   18fcc:	bl	12808 <puts@plt>
   18fd0:	mov	r0, r7
   18fd4:	bl	12808 <puts@plt>
   18fd8:	mov	r0, r4
   18fdc:	bl	12808 <puts@plt>
   18fe0:	movw	r0, #42144	; 0xa4a0
   18fe4:	movt	r0, #1
   18fe8:	bl	12808 <puts@plt>
   18fec:	movw	r0, #42176	; 0xa4c0
   18ff0:	movt	r0, #1
   18ff4:	bl	12808 <puts@plt>
   18ff8:	movw	r0, #42256	; 0xa510
   18ffc:	movt	r0, #1
   19000:	bl	12808 <puts@plt>
   19004:	movw	r0, #42288	; 0xa530
   19008:	movt	r0, #1
   1900c:	bl	12808 <puts@plt>
   19010:	movw	r6, #44176	; 0xac90
   19014:	movt	r6, #1
   19018:	mov	r0, r6
   1901c:	bl	12808 <puts@plt>
   19020:	movw	r0, #44224	; 0xacc0
   19024:	movt	r0, #1
   19028:	bl	12808 <puts@plt>
   1902c:	movw	r0, #42368	; 0xa580
   19030:	movt	r0, #1
   19034:	bl	12808 <puts@plt>
   19038:	movw	r0, #42400	; 0xa5a0
   1903c:	movt	r0, #1
   19040:	bl	12808 <puts@plt>
   19044:	movw	r0, #42480	; 0xa5f0
   19048:	movt	r0, #1
   1904c:	bl	12808 <puts@plt>
   19050:	movw	r0, #42544	; 0xa630
   19054:	movt	r0, #1
   19058:	bl	12808 <puts@plt>
   1905c:	movw	r0, #42624	; 0xa680
   19060:	movt	r0, #1
   19064:	bl	12808 <puts@plt>
   19068:	movw	r0, #42672	; 0xa6b0
   1906c:	movt	r0, #1
   19070:	bl	12808 <puts@plt>
   19074:	mov	r0, sl
   19078:	bl	12808 <puts@plt>
   1907c:	movw	r0, #43552	; 0xaa20
   19080:	movt	r0, #1
   19084:	mov	r9, r0
   19088:	bl	12808 <puts@plt>
   1908c:	movw	r0, #43632	; 0xaa70
   19090:	movt	r0, #1
   19094:	mov	r8, r0
   19098:	bl	12808 <puts@plt>
   1909c:	movw	r0, #43712	; 0xaac0
   190a0:	movt	r0, #1
   190a4:	mov	r7, r0
   190a8:	bl	12808 <puts@plt>
   190ac:	mov	r0, #10
   190b0:	bl	12910 <putchar@plt>
   190b4:	movw	r0, #42752	; 0xa700
   190b8:	movt	r0, #1
   190bc:	bl	12808 <puts@plt>
   190c0:	movw	r0, #42832	; 0xa750
   190c4:	movt	r0, #1
   190c8:	bl	12808 <puts@plt>
   190cc:	movw	r0, #42896	; 0xa790
   190d0:	movt	r0, #1
   190d4:	bl	12808 <puts@plt>
   190d8:	movw	r4, #43184	; 0xa8b0
   190dc:	movt	r4, #1
   190e0:	mov	r0, r4
   190e4:	bl	12808 <puts@plt>
   190e8:	movw	r5, #43216	; 0xa8d0
   190ec:	movt	r5, #1
   190f0:	mov	r0, r5
   190f4:	bl	12808 <puts@plt>
   190f8:	movw	r0, #42928	; 0xa7b0
   190fc:	movt	r0, #1
   19100:	bl	12808 <puts@plt>
   19104:	movw	r0, #43408	; 0xa990
   19108:	movt	r0, #1
   1910c:	bl	12808 <puts@plt>
   19110:	movw	r0, #43456	; 0xa9c0
   19114:	movt	r0, #1
   19118:	bl	12808 <puts@plt>
   1911c:	mov	r0, r6
   19120:	bl	12808 <puts@plt>
   19124:	movw	r0, #44224	; 0xacc0
   19128:	movt	r0, #1
   1912c:	bl	12808 <puts@plt>
   19130:	movw	r0, #44288	; 0xad00
   19134:	movt	r0, #1
   19138:	bl	12808 <puts@plt>
   1913c:	movw	r0, #44320	; 0xad20
   19140:	movt	r0, #1
   19144:	bl	12808 <puts@plt>
   19148:	movw	r6, #44400	; 0xad70
   1914c:	movt	r6, #1
   19150:	mov	r0, r6
   19154:	bl	12808 <puts@plt>
   19158:	mov	r0, sl
   1915c:	bl	12808 <puts@plt>
   19160:	mov	r0, r9
   19164:	bl	12808 <puts@plt>
   19168:	mov	r0, r8
   1916c:	bl	12808 <puts@plt>
   19170:	mov	r0, r7
   19174:	bl	12808 <puts@plt>
   19178:	mov	r0, #10
   1917c:	bl	12910 <putchar@plt>
   19180:	movw	r0, #43008	; 0xa800
   19184:	movt	r0, #1
   19188:	bl	12808 <puts@plt>
   1918c:	movw	r0, #43088	; 0xa850
   19190:	movt	r0, #1
   19194:	bl	12808 <puts@plt>
   19198:	movw	r0, #43152	; 0xa890
   1919c:	movt	r0, #1
   191a0:	bl	12808 <puts@plt>
   191a4:	mov	r0, r4
   191a8:	bl	12808 <puts@plt>
   191ac:	mov	r0, r5
   191b0:	bl	12808 <puts@plt>
   191b4:	movw	r0, #43296	; 0xa920
   191b8:	movt	r0, #1
   191bc:	bl	12808 <puts@plt>
   191c0:	movw	r0, #43376	; 0xa970
   191c4:	movt	r0, #1
   191c8:	bl	12808 <puts@plt>
   191cc:	movw	r0, #43408	; 0xa990
   191d0:	movt	r0, #1
   191d4:	bl	12808 <puts@plt>
   191d8:	movw	r0, #43456	; 0xa9c0
   191dc:	movt	r0, #1
   191e0:	bl	12808 <puts@plt>
   191e4:	movw	r0, #44176	; 0xac90
   191e8:	movt	r0, #1
   191ec:	bl	12808 <puts@plt>
   191f0:	movw	r0, #44224	; 0xacc0
   191f4:	movt	r0, #1
   191f8:	bl	12808 <puts@plt>
   191fc:	movw	r0, #44288	; 0xad00
   19200:	movt	r0, #1
   19204:	bl	12808 <puts@plt>
   19208:	movw	r0, #44320	; 0xad20
   1920c:	movt	r0, #1
   19210:	bl	12808 <puts@plt>
   19214:	mov	r0, r6
   19218:	bl	12808 <puts@plt>
   1921c:	mov	r0, sl
   19220:	bl	12808 <puts@plt>
   19224:	mov	r0, r9
   19228:	bl	12808 <puts@plt>
   1922c:	mov	r0, r8
   19230:	bl	12808 <puts@plt>
   19234:	mov	r0, r7
   19238:	bl	12808 <puts@plt>
   1923c:	mov	r0, #10
   19240:	bl	12910 <putchar@plt>
   19244:	movw	r0, #43744	; 0xaae0
   19248:	movt	r0, #1
   1924c:	bl	12808 <puts@plt>
   19250:	movw	r0, #43824	; 0xab30
   19254:	movt	r0, #1
   19258:	bl	12808 <puts@plt>
   1925c:	movw	r0, #43904	; 0xab80
   19260:	movt	r0, #1
   19264:	bl	12808 <puts@plt>
   19268:	movw	r0, #43984	; 0xabd0
   1926c:	movt	r0, #1
   19270:	bl	12808 <puts@plt>
   19274:	movw	r0, #44032	; 0xac00
   19278:	movt	r0, #1
   1927c:	bl	12808 <puts@plt>
   19280:	movw	r0, #44064	; 0xac20
   19284:	movt	r0, #1
   19288:	bl	12808 <puts@plt>
   1928c:	movw	r0, #44112	; 0xac50
   19290:	movt	r0, #1
   19294:	bl	12808 <puts@plt>
   19298:	movw	r0, #44176	; 0xac90
   1929c:	movt	r0, #1
   192a0:	bl	12808 <puts@plt>
   192a4:	movw	r0, #44224	; 0xacc0
   192a8:	movt	r0, #1
   192ac:	bl	12808 <puts@plt>
   192b0:	movw	r0, #44288	; 0xad00
   192b4:	movt	r0, #1
   192b8:	bl	12808 <puts@plt>
   192bc:	movw	r0, #44320	; 0xad20
   192c0:	movt	r0, #1
   192c4:	bl	12808 <puts@plt>
   192c8:	mov	r0, r6
   192cc:	bl	12808 <puts@plt>
   192d0:	movw	r0, #44480	; 0xadc0
   192d4:	movt	r0, #1
   192d8:	bl	12808 <puts@plt>
   192dc:	movw	r0, #44512	; 0xade0
   192e0:	movt	r0, #1
   192e4:	bl	12808 <puts@plt>
   192e8:	movw	r0, #44592	; 0xae30
   192ec:	movt	r0, #1
   192f0:	bl	12808 <puts@plt>
   192f4:	movw	r0, #44672	; 0xae80
   192f8:	movt	r0, #1
   192fc:	bl	12808 <puts@plt>
   19300:	movw	r0, #44736	; 0xaec0
   19304:	movt	r0, #1
   19308:	bl	12808 <puts@plt>
   1930c:	movw	r0, #44816	; 0xaf10
   19310:	movt	r0, #1
   19314:	bl	12808 <puts@plt>
   19318:	mov	r0, #10
   1931c:	bl	12910 <putchar@plt>
   19320:	movw	r0, #44880	; 0xaf50
   19324:	movt	r0, #1
   19328:	bl	12808 <puts@plt>
   1932c:	movw	r0, #44912	; 0xaf70
   19330:	movt	r0, #1
   19334:	bl	12808 <puts@plt>
   19338:	mov	r0, #10
   1933c:	bl	12910 <putchar@plt>
   19340:	movw	r0, #44944	; 0xaf90
   19344:	movt	r0, #1
   19348:	bl	12808 <puts@plt>
   1934c:	movw	r0, #44976	; 0xafb0
   19350:	movt	r0, #1
   19354:	bl	12808 <puts@plt>
   19358:	mov	r0, #10
   1935c:	bl	12910 <putchar@plt>
   19360:	movw	r0, #45040	; 0xaff0
   19364:	movt	r0, #1
   19368:	bl	12808 <puts@plt>
   1936c:	movw	r0, #45120	; 0xb040
   19370:	movt	r0, #1
   19374:	bl	12808 <puts@plt>
   19378:	movw	r0, #45200	; 0xb090
   1937c:	movt	r0, #1
   19380:	bl	12808 <puts@plt>
   19384:	movw	r0, #45248	; 0xb0c0
   19388:	movt	r0, #1
   1938c:	bl	12808 <puts@plt>
   19390:	movw	r0, #45328	; 0xb110
   19394:	movt	r0, #1
   19398:	bl	12808 <puts@plt>
   1939c:	movw	r0, #45408	; 0xb160
   193a0:	movt	r0, #1
   193a4:	bl	12808 <puts@plt>
   193a8:	movw	r0, #45472	; 0xb1a0
   193ac:	movt	r0, #1
   193b0:	bl	12808 <puts@plt>
   193b4:	mov	r0, #10
   193b8:	sub	sp, fp, #28
   193bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193c0:	b	12910 <putchar@plt>
   193c4:	push	{fp, lr}
   193c8:	mov	fp, sp
   193cc:	bl	12a54 <coda_get_libcoda_version@plt>
   193d0:	mov	r1, r0
   193d4:	movw	r0, #40794	; 0x9f5a
   193d8:	movt	r0, #1
   193dc:	bl	1267c <printf@plt>
   193e0:	movw	r0, #45536	; 0xb1e0
   193e4:	movt	r0, #1
   193e8:	bl	12808 <puts@plt>
   193ec:	mov	r0, #10
   193f0:	pop	{fp, lr}
   193f4:	b	12910 <putchar@plt>
   193f8:	cmp	r3, #0
   193fc:	cmpeq	r2, #0
   19400:	bne	19424 <main@@Base+0x179c>
   19404:	cmp	r1, #0
   19408:	movlt	r1, #-2147483648	; 0x80000000
   1940c:	movlt	r0, #0
   19410:	blt	19420 <main@@Base+0x1798>
   19414:	cmpeq	r0, #0
   19418:	mvnne	r1, #-2147483648	; 0x80000000
   1941c:	mvnne	r0, #0
   19420:	b	194cc <main@@Base+0x1844>
   19424:	sub	sp, sp, #8
   19428:	push	{sp, lr}
   1942c:	cmp	r1, #0
   19430:	blt	19450 <main@@Base+0x17c8>
   19434:	cmp	r3, #0
   19438:	blt	19484 <main@@Base+0x17fc>
   1943c:	bl	194dc <main@@Base+0x1854>
   19440:	ldr	lr, [sp, #4]
   19444:	add	sp, sp, #8
   19448:	pop	{r2, r3}
   1944c:	bx	lr
   19450:	rsbs	r0, r0, #0
   19454:	sbc	r1, r1, r1, lsl #1
   19458:	cmp	r3, #0
   1945c:	blt	194a8 <main@@Base+0x1820>
   19460:	bl	194dc <main@@Base+0x1854>
   19464:	ldr	lr, [sp, #4]
   19468:	add	sp, sp, #8
   1946c:	pop	{r2, r3}
   19470:	rsbs	r0, r0, #0
   19474:	sbc	r1, r1, r1, lsl #1
   19478:	rsbs	r2, r2, #0
   1947c:	sbc	r3, r3, r3, lsl #1
   19480:	bx	lr
   19484:	rsbs	r2, r2, #0
   19488:	sbc	r3, r3, r3, lsl #1
   1948c:	bl	194dc <main@@Base+0x1854>
   19490:	ldr	lr, [sp, #4]
   19494:	add	sp, sp, #8
   19498:	pop	{r2, r3}
   1949c:	rsbs	r0, r0, #0
   194a0:	sbc	r1, r1, r1, lsl #1
   194a4:	bx	lr
   194a8:	rsbs	r2, r2, #0
   194ac:	sbc	r3, r3, r3, lsl #1
   194b0:	bl	194dc <main@@Base+0x1854>
   194b4:	ldr	lr, [sp, #4]
   194b8:	add	sp, sp, #8
   194bc:	pop	{r2, r3}
   194c0:	rsbs	r2, r2, #0
   194c4:	sbc	r3, r3, r3, lsl #1
   194c8:	bx	lr
   194cc:	push	{r1, lr}
   194d0:	mov	r0, #8
   194d4:	bl	12640 <raise@plt>
   194d8:	pop	{r1, pc}
   194dc:	cmp	r1, r3
   194e0:	cmpeq	r0, r2
   194e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194e8:	mov	r4, r0
   194ec:	movcc	r0, #0
   194f0:	mov	r5, r1
   194f4:	ldr	lr, [sp, #36]	; 0x24
   194f8:	movcc	r1, r0
   194fc:	bcc	195f8 <main@@Base+0x1970>
   19500:	cmp	r3, #0
   19504:	clzeq	ip, r2
   19508:	clzne	ip, r3
   1950c:	addeq	ip, ip, #32
   19510:	cmp	r5, #0
   19514:	clzeq	r1, r4
   19518:	addeq	r1, r1, #32
   1951c:	clzne	r1, r5
   19520:	sub	ip, ip, r1
   19524:	sub	sl, ip, #32
   19528:	lsl	r9, r3, ip
   1952c:	rsb	fp, ip, #32
   19530:	orr	r9, r9, r2, lsl sl
   19534:	orr	r9, r9, r2, lsr fp
   19538:	lsl	r8, r2, ip
   1953c:	cmp	r5, r9
   19540:	cmpeq	r4, r8
   19544:	movcc	r0, #0
   19548:	movcc	r1, r0
   1954c:	bcc	19568 <main@@Base+0x18e0>
   19550:	mov	r0, #1
   19554:	subs	r4, r4, r8
   19558:	lsl	r1, r0, sl
   1955c:	orr	r1, r1, r0, lsr fp
   19560:	lsl	r0, r0, ip
   19564:	sbc	r5, r5, r9
   19568:	cmp	ip, #0
   1956c:	beq	195f8 <main@@Base+0x1970>
   19570:	lsr	r6, r8, #1
   19574:	orr	r6, r6, r9, lsl #31
   19578:	lsr	r7, r9, #1
   1957c:	mov	r2, ip
   19580:	b	195a4 <main@@Base+0x191c>
   19584:	subs	r3, r4, r6
   19588:	sbc	r8, r5, r7
   1958c:	adds	r3, r3, r3
   19590:	adc	r8, r8, r8
   19594:	adds	r4, r3, #1
   19598:	adc	r5, r8, #0
   1959c:	subs	r2, r2, #1
   195a0:	beq	195c0 <main@@Base+0x1938>
   195a4:	cmp	r5, r7
   195a8:	cmpeq	r4, r6
   195ac:	bcs	19584 <main@@Base+0x18fc>
   195b0:	adds	r4, r4, r4
   195b4:	adc	r5, r5, r5
   195b8:	subs	r2, r2, #1
   195bc:	bne	195a4 <main@@Base+0x191c>
   195c0:	lsr	r3, r4, ip
   195c4:	orr	r3, r3, r5, lsl fp
   195c8:	lsr	r2, r5, ip
   195cc:	orr	r3, r3, r5, lsr sl
   195d0:	adds	r0, r0, r4
   195d4:	mov	r4, r3
   195d8:	lsl	r3, r2, ip
   195dc:	orr	r3, r3, r4, lsl sl
   195e0:	lsl	ip, r4, ip
   195e4:	orr	r3, r3, r4, lsr fp
   195e8:	adc	r1, r1, r5
   195ec:	subs	r0, r0, ip
   195f0:	mov	r5, r2
   195f4:	sbc	r1, r1, r3
   195f8:	cmp	lr, #0
   195fc:	strdne	r4, [lr]
   19600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019604 <__libc_csu_init@@Base>:
   19604:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19608:	mov	r7, r0
   1960c:	ldr	r6, [pc, #72]	; 1965c <__libc_csu_init@@Base+0x58>
   19610:	ldr	r5, [pc, #72]	; 19660 <__libc_csu_init@@Base+0x5c>
   19614:	add	r6, pc, r6
   19618:	add	r5, pc, r5
   1961c:	sub	r6, r6, r5
   19620:	mov	r8, r1
   19624:	mov	r9, r2
   19628:	bl	125fc <coda_cursor_get_byte_size@plt-0x20>
   1962c:	asrs	r6, r6, #2
   19630:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19634:	mov	r4, #0
   19638:	add	r4, r4, #1
   1963c:	ldr	r3, [r5], #4
   19640:	mov	r2, r9
   19644:	mov	r1, r8
   19648:	mov	r0, r7
   1964c:	blx	r3
   19650:	cmp	r6, r4
   19654:	bne	19638 <__libc_csu_init@@Base+0x34>
   19658:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1965c:	ldrdeq	r2, [r1], -r8
   19660:	ldrdeq	r2, [r1], -r0

00019664 <__libc_csu_fini@@Base>:
   19664:	bx	lr

Disassembly of section .fini:

00019668 <.fini>:
   19668:	push	{r3, lr}
   1966c:	pop	{r3, pc}
