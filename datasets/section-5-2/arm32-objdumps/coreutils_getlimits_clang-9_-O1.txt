
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010d1c <.init>:
   10d1c:	push	{r3, lr}
   10d20:	bl	10fbc <__snprintf_chk@plt+0x4c>
   10d24:	pop	{r3, pc}

Disassembly of section .plt:

00010d28 <calloc@plt-0x14>:
   10d28:	push	{lr}		; (str lr, [sp, #-4]!)
   10d2c:	ldr	lr, [pc, #4]	; 10d38 <calloc@plt-0x4>
   10d30:	add	lr, pc, lr
   10d34:	ldr	pc, [lr, #8]!
   10d38:	andeq	r5, r1, r8, asr #5

00010d3c <calloc@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #712]!	; 0x2c8

00010d48 <fputs_unlocked@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #704]!	; 0x2c0

00010d54 <strcmp@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #696]!	; 0x2b8

00010d60 <fflush@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #688]!	; 0x2b0

00010d6c <free@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #680]!	; 0x2a8

00010d78 <_exit@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #672]!	; 0x2a0

00010d84 <memcpy@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #664]!	; 0x298

00010d90 <mbsinit@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #656]!	; 0x290

00010d9c <strtold@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #648]!	; 0x288

00010da8 <dcgettext@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #640]!	; 0x280

00010db4 <realloc@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #632]!	; 0x278

00010dc0 <textdomain@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #624]!	; 0x270

00010dcc <iswprint@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #616]!	; 0x268

00010dd8 <fwrite@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #608]!	; 0x260

00010de4 <lseek64@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #600]!	; 0x258

00010df0 <__ctype_get_mb_cur_max@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #592]!	; 0x250

00010dfc <__fpending@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #584]!	; 0x248

00010e08 <ferror_unlocked@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #576]!	; 0x240

00010e14 <mbrtowc@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #568]!	; 0x238

00010e20 <error@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #560]!	; 0x230

00010e2c <strtof@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #552]!	; 0x228

00010e38 <puts@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #544]!	; 0x220

00010e44 <malloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #536]!	; 0x218

00010e50 <__libc_start_main@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #528]!	; 0x210

00010e5c <__freading@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #520]!	; 0x208

00010e68 <__gmon_start__@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #512]!	; 0x200

00010e74 <getopt_long@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e80 <__ctype_b_loc@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #496]!	; 0x1f0

00010e8c <exit@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #488]!	; 0x1e8

00010e98 <bcmp@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #480]!	; 0x1e0

00010ea4 <strlen@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #472]!	; 0x1d8

00010eb0 <__errno_location@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #464]!	; 0x1d0

00010ebc <__sprintf_chk@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #456]!	; 0x1c8

00010ec8 <__cxa_atexit@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ed4 <memset@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ee0 <__printf_chk@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #432]!	; 0x1b0

00010eec <strtod@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ef8 <fileno@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #416]!	; 0x1a0

00010f04 <__fprintf_chk@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #408]!	; 0x198

00010f10 <fclose@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #400]!	; 0x190

00010f1c <fseeko64@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #392]!	; 0x188

00010f28 <setlocale@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #86016	; 0x15000
   10f30:	ldr	pc, [ip, #384]!	; 0x180

00010f34 <strrchr@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #86016	; 0x15000
   10f3c:	ldr	pc, [ip, #376]!	; 0x178

00010f40 <nl_langinfo@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #86016	; 0x15000
   10f48:	ldr	pc, [ip, #368]!	; 0x170

00010f4c <bindtextdomain@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #86016	; 0x15000
   10f54:	ldr	pc, [ip, #360]!	; 0x168

00010f58 <strncmp@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #86016	; 0x15000
   10f60:	ldr	pc, [ip, #352]!	; 0x160

00010f64 <abort@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #86016	; 0x15000
   10f6c:	ldr	pc, [ip, #344]!	; 0x158

00010f70 <__snprintf_chk@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #86016	; 0x15000
   10f78:	ldr	pc, [ip, #336]!	; 0x150

Disassembly of section .text:

00010f80 <.text>:
   10f80:	mov	fp, #0
   10f84:	mov	lr, #0
   10f88:	pop	{r1}		; (ldr r1, [sp], #4)
   10f8c:	mov	r2, sp
   10f90:	push	{r2}		; (str r2, [sp, #-4]!)
   10f94:	push	{r0}		; (str r0, [sp, #-4]!)
   10f98:	ldr	ip, [pc, #16]	; 10fb0 <__snprintf_chk@plt+0x40>
   10f9c:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa0:	ldr	r0, [pc, #12]	; 10fb4 <__snprintf_chk@plt+0x44>
   10fa4:	ldr	r3, [pc, #12]	; 10fb8 <__snprintf_chk@plt+0x48>
   10fa8:	bl	10e50 <__libc_start_main@plt>
   10fac:	bl	10f64 <abort@plt>
   10fb0:	andeq	r5, r1, ip, ror #2
   10fb4:	andeq	r1, r1, r8, ror #5
   10fb8:	andeq	r5, r1, ip, lsl #2
   10fbc:	ldr	r3, [pc, #20]	; 10fd8 <__snprintf_chk@plt+0x68>
   10fc0:	ldr	r2, [pc, #20]	; 10fdc <__snprintf_chk@plt+0x6c>
   10fc4:	add	r3, pc, r3
   10fc8:	ldr	r2, [r3, r2]
   10fcc:	cmp	r2, #0
   10fd0:	bxeq	lr
   10fd4:	b	10e68 <__gmon_start__@plt>
   10fd8:	andeq	r5, r1, r4, lsr r0
   10fdc:	andeq	r0, r0, ip, asr #1
   10fe0:	ldr	r0, [pc, #24]	; 11000 <__snprintf_chk@plt+0x90>
   10fe4:	ldr	r3, [pc, #24]	; 11004 <__snprintf_chk@plt+0x94>
   10fe8:	cmp	r3, r0
   10fec:	bxeq	lr
   10ff0:	ldr	r3, [pc, #16]	; 11008 <__snprintf_chk@plt+0x98>
   10ff4:	cmp	r3, #0
   10ff8:	bxeq	lr
   10ffc:	bx	r3
   11000:	andeq	r6, r2, r0, lsr #2
   11004:	andeq	r6, r2, r0, lsr #2
   11008:	andeq	r0, r0, r0
   1100c:	ldr	r0, [pc, #36]	; 11038 <__snprintf_chk@plt+0xc8>
   11010:	ldr	r1, [pc, #36]	; 1103c <__snprintf_chk@plt+0xcc>
   11014:	sub	r1, r1, r0
   11018:	asr	r1, r1, #2
   1101c:	add	r1, r1, r1, lsr #31
   11020:	asrs	r1, r1, #1
   11024:	bxeq	lr
   11028:	ldr	r3, [pc, #16]	; 11040 <__snprintf_chk@plt+0xd0>
   1102c:	cmp	r3, #0
   11030:	bxeq	lr
   11034:	bx	r3
   11038:	andeq	r6, r2, r0, lsr #2
   1103c:	andeq	r6, r2, r0, lsr #2
   11040:	andeq	r0, r0, r0
   11044:	push	{r4, lr}
   11048:	ldr	r4, [pc, #24]	; 11068 <__snprintf_chk@plt+0xf8>
   1104c:	ldrb	r3, [r4]
   11050:	cmp	r3, #0
   11054:	popne	{r4, pc}
   11058:	bl	10fe0 <__snprintf_chk@plt+0x70>
   1105c:	mov	r3, #1
   11060:	strb	r3, [r4]
   11064:	pop	{r4, pc}
   11068:	andeq	r6, r2, ip, lsr r1
   1106c:	b	1100c <__snprintf_chk@plt+0x9c>
   11070:	push	{fp, lr}
   11074:	mov	fp, sp
   11078:	mov	r4, r0
   1107c:	cmp	r0, #0
   11080:	bne	11118 <__snprintf_chk@plt+0x1a8>
   11084:	movw	r1, #20923	; 0x51bb
   11088:	movt	r1, #1
   1108c:	mov	r0, #0
   11090:	mov	r2, #5
   11094:	bl	10da8 <dcgettext@plt>
   11098:	mov	r1, r0
   1109c:	movw	r0, #24904	; 0x6148
   110a0:	movt	r0, #2
   110a4:	ldr	r2, [r0]
   110a8:	mov	r0, #1
   110ac:	bl	10ee0 <__printf_chk@plt>
   110b0:	movw	r1, #20934	; 0x51c6
   110b4:	movt	r1, #1
   110b8:	mov	r0, #0
   110bc:	mov	r2, #5
   110c0:	bl	10da8 <dcgettext@plt>
   110c4:	movw	r5, #24884	; 0x6134
   110c8:	movt	r5, #2
   110cc:	ldr	r1, [r5]
   110d0:	bl	10d48 <fputs_unlocked@plt>
   110d4:	movw	r1, #21007	; 0x520f
   110d8:	movt	r1, #1
   110dc:	mov	r0, #0
   110e0:	mov	r2, #5
   110e4:	bl	10da8 <dcgettext@plt>
   110e8:	ldr	r1, [r5]
   110ec:	bl	10d48 <fputs_unlocked@plt>
   110f0:	movw	r1, #21052	; 0x523c
   110f4:	movt	r1, #1
   110f8:	mov	r0, #0
   110fc:	mov	r2, #5
   11100:	bl	10da8 <dcgettext@plt>
   11104:	ldr	r1, [r5]
   11108:	bl	10d48 <fputs_unlocked@plt>
   1110c:	bl	1115c <__snprintf_chk@plt+0x1ec>
   11110:	mov	r0, r4
   11114:	bl	10e8c <exit@plt>
   11118:	movw	r0, #24880	; 0x6130
   1111c:	movt	r0, #2
   11120:	ldr	r5, [r0]
   11124:	movw	r1, #20884	; 0x5194
   11128:	movt	r1, #1
   1112c:	mov	r0, #0
   11130:	mov	r2, #5
   11134:	bl	10da8 <dcgettext@plt>
   11138:	mov	r2, r0
   1113c:	movw	r0, #24904	; 0x6148
   11140:	movt	r0, #2
   11144:	ldr	r3, [r0]
   11148:	mov	r0, r5
   1114c:	mov	r1, #1
   11150:	bl	10f04 <__fprintf_chk@plt>
   11154:	mov	r0, r4
   11158:	bl	10e8c <exit@plt>
   1115c:	push	{r4, r5, r6, sl, fp, lr}
   11160:	add	fp, sp, #16
   11164:	sub	sp, sp, #56	; 0x38
   11168:	movw	r0, #22176	; 0x56a0
   1116c:	movt	r0, #1
   11170:	add	r1, r0, #32
   11174:	mov	r2, #48	; 0x30
   11178:	vld1.64	{d16-d17}, [r1]
   1117c:	mov	r6, sp
   11180:	add	r1, r6, #32
   11184:	add	r3, r0, #16
   11188:	vld1.64	{d18-d19}, [r0], r2
   1118c:	vld1.64	{d20-d21}, [r3]
   11190:	vldr	d22, [r0]
   11194:	vst1.64	{d16-d17}, [r1]
   11198:	add	r0, r6, #16
   1119c:	vst1.64	{d20-d21}, [r0]
   111a0:	mov	r0, r6
   111a4:	vst1.64	{d18-d19}, [r0], r2
   111a8:	vstr	d22, [r0]
   111ac:	ldr	r1, [sp]
   111b0:	cmp	r1, #0
   111b4:	movw	r4, #21106	; 0x5272
   111b8:	movt	r4, #1
   111bc:	beq	111e4 <__snprintf_chk@plt+0x274>
   111c0:	mov	r6, sp
   111c4:	movw	r5, #21106	; 0x5272
   111c8:	movt	r5, #1
   111cc:	mov	r0, r5
   111d0:	bl	10d54 <strcmp@plt>
   111d4:	cmp	r0, #0
   111d8:	ldrne	r1, [r6, #8]!
   111dc:	cmpne	r1, #0
   111e0:	bne	111cc <__snprintf_chk@plt+0x25c>
   111e4:	ldr	r5, [r6, #4]
   111e8:	movw	r1, #21954	; 0x55c2
   111ec:	movt	r1, #1
   111f0:	mov	r0, #0
   111f4:	mov	r2, #5
   111f8:	bl	10da8 <dcgettext@plt>
   111fc:	mov	r1, r0
   11200:	movw	r2, #21140	; 0x5294
   11204:	movt	r2, #1
   11208:	movw	r3, #21977	; 0x55d9
   1120c:	movt	r3, #1
   11210:	mov	r0, #1
   11214:	bl	10ee0 <__printf_chk@plt>
   11218:	cmp	r5, #0
   1121c:	moveq	r5, r4
   11220:	mov	r0, #5
   11224:	mov	r1, #0
   11228:	bl	10f28 <setlocale@plt>
   1122c:	cmp	r0, #0
   11230:	beq	11270 <__snprintf_chk@plt+0x300>
   11234:	movw	r1, #22017	; 0x5601
   11238:	movt	r1, #1
   1123c:	mov	r2, #3
   11240:	bl	10f58 <strncmp@plt>
   11244:	cmp	r0, #0
   11248:	beq	11270 <__snprintf_chk@plt+0x300>
   1124c:	movw	r1, #22021	; 0x5605
   11250:	movt	r1, #1
   11254:	mov	r0, #0
   11258:	mov	r2, #5
   1125c:	bl	10da8 <dcgettext@plt>
   11260:	movw	r1, #24884	; 0x6134
   11264:	movt	r1, #2
   11268:	ldr	r1, [r1]
   1126c:	bl	10d48 <fputs_unlocked@plt>
   11270:	movw	r1, #22092	; 0x564c
   11274:	movt	r1, #1
   11278:	mov	r0, #0
   1127c:	mov	r2, #5
   11280:	bl	10da8 <dcgettext@plt>
   11284:	mov	r1, r0
   11288:	movw	r2, #21977	; 0x55d9
   1128c:	movt	r2, #1
   11290:	mov	r0, #1
   11294:	mov	r3, r4
   11298:	bl	10ee0 <__printf_chk@plt>
   1129c:	movw	r0, #21887	; 0x557f
   112a0:	movt	r0, #1
   112a4:	movw	r6, #21006	; 0x520e
   112a8:	movt	r6, #1
   112ac:	cmp	r5, r4
   112b0:	moveq	r6, r0
   112b4:	movw	r1, #22119	; 0x5667
   112b8:	movt	r1, #1
   112bc:	mov	r0, #0
   112c0:	mov	r2, #5
   112c4:	bl	10da8 <dcgettext@plt>
   112c8:	mov	r1, r0
   112cc:	mov	r0, #1
   112d0:	mov	r2, r5
   112d4:	mov	r3, r6
   112d8:	sub	sp, fp, #16
   112dc:	pop	{r4, r5, r6, sl, fp, lr}
   112e0:	b	10ee0 <__printf_chk@plt>
   112e4:	nop	{0}
   112e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112ec:	add	fp, sp, #28
   112f0:	sub	sp, sp, #4
   112f4:	vpush	{d8-d9}
   112f8:	sub	sp, sp, #40	; 0x28
   112fc:	mov	r4, r1
   11300:	mov	r5, r0
   11304:	ldr	r0, [r1]
   11308:	bl	123dc <__snprintf_chk@plt+0x146c>
   1130c:	movw	r1, #21006	; 0x520e
   11310:	movt	r1, #1
   11314:	mov	r0, #6
   11318:	bl	10f28 <setlocale@plt>
   1131c:	movw	r6, #21144	; 0x5298
   11320:	movt	r6, #1
   11324:	movw	r1, #21116	; 0x527c
   11328:	movt	r1, #1
   1132c:	mov	r0, r6
   11330:	bl	10f4c <bindtextdomain@plt>
   11334:	mov	r0, r6
   11338:	bl	10dc0 <textdomain@plt>
   1133c:	movw	r0, #7564	; 0x1d8c
   11340:	movt	r0, #1
   11344:	bl	15170 <__snprintf_chk@plt+0x4200>
   11348:	mov	r8, #0
   1134c:	movw	r0, #21169	; 0x52b1
   11350:	movt	r0, #1
   11354:	movw	r1, #4208	; 0x1070
   11358:	movt	r1, #1
   1135c:	movw	r2, #21154	; 0x52a2
   11360:	movt	r2, #1
   11364:	str	r2, [sp]
   11368:	str	r1, [sp, #4]
   1136c:	str	r0, [sp, #8]
   11370:	str	r8, [sp, #12]
   11374:	movw	r2, #21106	; 0x5272
   11378:	movt	r2, #1
   1137c:	movw	r3, #21140	; 0x5294
   11380:	movt	r3, #1
   11384:	mov	r0, r5
   11388:	mov	r1, r4
   1138c:	bl	12268 <__snprintf_chk@plt+0x12f8>
   11390:	mov	r9, #255	; 0xff
   11394:	str	r9, [sp]
   11398:	str	r8, [sp, #4]
   1139c:	add	r4, sp, #18
   113a0:	add	r5, r4, #1
   113a4:	movw	sl, #21183	; 0x52bf
   113a8:	movt	sl, #1
   113ac:	mov	r0, r5
   113b0:	mov	r1, #1
   113b4:	mov	r2, #21
   113b8:	mov	r3, sl
   113bc:	bl	10ebc <__sprintf_chk@plt>
   113c0:	movw	r1, #21189	; 0x52c5
   113c4:	movt	r1, #1
   113c8:	mov	r0, #1
   113cc:	mov	r2, r5
   113d0:	bl	10ee0 <__printf_chk@plt>
   113d4:	mov	r0, r4
   113d8:	bl	11c70 <__snprintf_chk@plt+0xd00>
   113dc:	mov	r2, r0
   113e0:	movw	r1, #21203	; 0x52d3
   113e4:	movt	r1, #1
   113e8:	mov	r0, #1
   113ec:	bl	10ee0 <__printf_chk@plt>
   113f0:	mov	r0, #127	; 0x7f
   113f4:	stm	sp, {r0, r8}
   113f8:	mov	r0, r5
   113fc:	mov	r1, #1
   11400:	mov	r2, #21
   11404:	mov	r3, sl
   11408:	bl	10ebc <__sprintf_chk@plt>
   1140c:	movw	r1, #21188	; 0x52c4
   11410:	movt	r1, #1
   11414:	mov	r0, #1
   11418:	mov	r2, r5
   1141c:	bl	10ee0 <__printf_chk@plt>
   11420:	mov	r0, r4
   11424:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11428:	mov	r2, r0
   1142c:	movw	r1, #21202	; 0x52d2
   11430:	movt	r1, #1
   11434:	mov	r0, #1
   11438:	bl	10ee0 <__printf_chk@plt>
   1143c:	mvn	r1, #0
   11440:	mvn	r0, #127	; 0x7f
   11444:	stm	sp, {r0, r1}
   11448:	movw	r6, #21218	; 0x52e2
   1144c:	movt	r6, #1
   11450:	mov	r0, r5
   11454:	mov	r1, #1
   11458:	mov	r2, #21
   1145c:	mov	r3, r6
   11460:	bl	10ebc <__sprintf_chk@plt>
   11464:	movw	r1, #21223	; 0x52e7
   11468:	movt	r1, #1
   1146c:	mov	r0, #1
   11470:	mov	r2, r5
   11474:	bl	10ee0 <__printf_chk@plt>
   11478:	mov	r0, r4
   1147c:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11480:	mov	r2, r0
   11484:	movw	r1, #21237	; 0x52f5
   11488:	movt	r1, #1
   1148c:	mov	r0, #1
   11490:	bl	10ee0 <__printf_chk@plt>
   11494:	str	r9, [sp]
   11498:	str	r8, [sp, #4]
   1149c:	mov	r0, r5
   114a0:	mov	r1, #1
   114a4:	mov	r2, #21
   114a8:	mov	r3, sl
   114ac:	bl	10ebc <__sprintf_chk@plt>
   114b0:	movw	r1, #21253	; 0x5305
   114b4:	movt	r1, #1
   114b8:	mov	r0, #1
   114bc:	mov	r2, r5
   114c0:	bl	10ee0 <__printf_chk@plt>
   114c4:	mov	r0, r4
   114c8:	bl	11c70 <__snprintf_chk@plt+0xd00>
   114cc:	mov	r2, r0
   114d0:	movw	r1, #21267	; 0x5313
   114d4:	movt	r1, #1
   114d8:	mov	r0, #1
   114dc:	bl	10ee0 <__printf_chk@plt>
   114e0:	movw	r0, #32767	; 0x7fff
   114e4:	stm	sp, {r0, r8}
   114e8:	mov	r0, r5
   114ec:	mov	r1, #1
   114f0:	mov	r2, #21
   114f4:	mov	r3, sl
   114f8:	bl	10ebc <__sprintf_chk@plt>
   114fc:	movw	r1, #21283	; 0x5323
   11500:	movt	r1, #1
   11504:	mov	r0, #1
   11508:	mov	r2, r5
   1150c:	bl	10ee0 <__printf_chk@plt>
   11510:	mov	r0, r4
   11514:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11518:	mov	r2, r0
   1151c:	movw	r1, #21296	; 0x5330
   11520:	movt	r1, #1
   11524:	mov	r0, #1
   11528:	bl	10ee0 <__printf_chk@plt>
   1152c:	movw	r0, #32768	; 0x8000
   11530:	movt	r0, #65535	; 0xffff
   11534:	str	r0, [sp]
   11538:	mvn	r0, #0
   1153c:	str	r0, [sp, #4]
   11540:	mvn	r9, #0
   11544:	mov	r0, r5
   11548:	mov	r1, #1
   1154c:	mov	r2, #21
   11550:	mov	r3, r6
   11554:	mov	r7, r6
   11558:	bl	10ebc <__sprintf_chk@plt>
   1155c:	movw	r1, #21311	; 0x533f
   11560:	movt	r1, #1
   11564:	mov	r0, #1
   11568:	mov	r2, r5
   1156c:	bl	10ee0 <__printf_chk@plt>
   11570:	mov	r0, r4
   11574:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11578:	mov	r2, r0
   1157c:	movw	r1, #21324	; 0x534c
   11580:	movt	r1, #1
   11584:	mov	r0, #1
   11588:	bl	10ee0 <__printf_chk@plt>
   1158c:	mvn	r0, #-2147483648	; 0x80000000
   11590:	stm	sp, {r0, r8}
   11594:	mov	r0, r5
   11598:	mov	r1, #1
   1159c:	mov	r2, #21
   115a0:	mov	r3, sl
   115a4:	bl	10ebc <__sprintf_chk@plt>
   115a8:	movw	r1, #21366	; 0x5376
   115ac:	movt	r1, #1
   115b0:	mov	r0, #1
   115b4:	mov	r2, r5
   115b8:	bl	10ee0 <__printf_chk@plt>
   115bc:	mov	r0, r4
   115c0:	bl	11c70 <__snprintf_chk@plt+0xd00>
   115c4:	mov	r2, r0
   115c8:	movw	r1, #21379	; 0x5383
   115cc:	movt	r1, #1
   115d0:	mov	r0, #1
   115d4:	bl	10ee0 <__printf_chk@plt>
   115d8:	mov	r0, #-2147483648	; 0x80000000
   115dc:	str	r0, [sp]
   115e0:	mov	r6, #-2147483648	; 0x80000000
   115e4:	str	r9, [sp, #4]
   115e8:	mov	r0, r5
   115ec:	mov	r1, #1
   115f0:	mov	r2, #21
   115f4:	mov	r3, r7
   115f8:	bl	10ebc <__sprintf_chk@plt>
   115fc:	movw	r1, #21339	; 0x535b
   11600:	movt	r1, #1
   11604:	mov	r0, #1
   11608:	mov	r2, r5
   1160c:	bl	10ee0 <__printf_chk@plt>
   11610:	mov	r0, r4
   11614:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11618:	mov	r2, r0
   1161c:	movw	r1, #21351	; 0x5367
   11620:	movt	r1, #1
   11624:	mov	r0, #1
   11628:	bl	10ee0 <__printf_chk@plt>
   1162c:	str	r9, [sp]
   11630:	str	r8, [sp, #4]
   11634:	mov	r0, r5
   11638:	mov	r1, #1
   1163c:	mov	r2, #21
   11640:	mov	r3, sl
   11644:	bl	10ebc <__sprintf_chk@plt>
   11648:	movw	r1, #21365	; 0x5375
   1164c:	movt	r1, #1
   11650:	mov	r0, #1
   11654:	mov	r2, r5
   11658:	bl	10ee0 <__printf_chk@plt>
   1165c:	mov	r0, r4
   11660:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11664:	mov	r2, r0
   11668:	movw	r1, #21378	; 0x5382
   1166c:	movt	r1, #1
   11670:	mov	r0, #1
   11674:	bl	10ee0 <__printf_chk@plt>
   11678:	mvn	r0, #-2147483648	; 0x80000000
   1167c:	stm	sp, {r0, r8}
   11680:	mov	r0, r5
   11684:	mov	r1, #1
   11688:	mov	r2, #21
   1168c:	mov	r3, sl
   11690:	bl	10ebc <__sprintf_chk@plt>
   11694:	movw	r1, #21422	; 0x53ae
   11698:	movt	r1, #1
   1169c:	mov	r0, #1
   116a0:	mov	r2, r5
   116a4:	bl	10ee0 <__printf_chk@plt>
   116a8:	mov	r0, r4
   116ac:	bl	11c70 <__snprintf_chk@plt+0xd00>
   116b0:	mov	r2, r0
   116b4:	movw	r1, #21436	; 0x53bc
   116b8:	movt	r1, #1
   116bc:	mov	r0, #1
   116c0:	bl	10ee0 <__printf_chk@plt>
   116c4:	stm	sp, {r6, r9}
   116c8:	mov	r0, r5
   116cc:	mov	r1, #1
   116d0:	mov	r2, #21
   116d4:	mov	r3, r7
   116d8:	bl	10ebc <__sprintf_chk@plt>
   116dc:	movw	r1, #21393	; 0x5391
   116e0:	movt	r1, #1
   116e4:	mov	r0, #1
   116e8:	mov	r2, r5
   116ec:	bl	10ee0 <__printf_chk@plt>
   116f0:	mov	r0, r4
   116f4:	bl	11c70 <__snprintf_chk@plt+0xd00>
   116f8:	mov	r2, r0
   116fc:	movw	r1, #21406	; 0x539e
   11700:	movt	r1, #1
   11704:	mov	r0, #1
   11708:	bl	10ee0 <__printf_chk@plt>
   1170c:	str	r9, [sp]
   11710:	str	r8, [sp, #4]
   11714:	mov	r0, r5
   11718:	mov	r1, #1
   1171c:	mov	r2, #21
   11720:	mov	r3, sl
   11724:	bl	10ebc <__sprintf_chk@plt>
   11728:	movw	r1, #21421	; 0x53ad
   1172c:	movt	r1, #1
   11730:	mov	r0, #1
   11734:	mov	r2, r5
   11738:	bl	10ee0 <__printf_chk@plt>
   1173c:	mov	r0, r4
   11740:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11744:	mov	r2, r0
   11748:	movw	r1, #21435	; 0x53bb
   1174c:	movt	r1, #1
   11750:	mov	r0, #1
   11754:	bl	10ee0 <__printf_chk@plt>
   11758:	str	r9, [sp]
   1175c:	str	r8, [sp, #4]
   11760:	mov	r0, r5
   11764:	mov	r1, #1
   11768:	mov	r2, #21
   1176c:	mov	r3, sl
   11770:	bl	10ebc <__sprintf_chk@plt>
   11774:	movw	r1, #21452	; 0x53cc
   11778:	movt	r1, #1
   1177c:	mov	r0, #1
   11780:	mov	r2, r5
   11784:	bl	10ee0 <__printf_chk@plt>
   11788:	mov	r0, r4
   1178c:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11790:	mov	r2, r0
   11794:	movw	r1, #21466	; 0x53da
   11798:	movt	r1, #1
   1179c:	mov	r0, #1
   117a0:	bl	10ee0 <__printf_chk@plt>
   117a4:	mvn	r0, #-2147483648	; 0x80000000
   117a8:	str	r0, [sp]
   117ac:	mvn	r6, #-2147483648	; 0x80000000
   117b0:	str	r8, [sp, #4]
   117b4:	mov	r0, r5
   117b8:	mov	r1, #1
   117bc:	mov	r2, #21
   117c0:	mov	r3, sl
   117c4:	bl	10ebc <__sprintf_chk@plt>
   117c8:	movw	r1, #21451	; 0x53cb
   117cc:	movt	r1, #1
   117d0:	mov	r0, #1
   117d4:	mov	r2, r5
   117d8:	bl	10ee0 <__printf_chk@plt>
   117dc:	mov	r0, r4
   117e0:	bl	11c70 <__snprintf_chk@plt+0xd00>
   117e4:	mov	r2, r0
   117e8:	movw	r1, #21465	; 0x53d9
   117ec:	movt	r1, #1
   117f0:	mov	r0, #1
   117f4:	bl	10ee0 <__printf_chk@plt>
   117f8:	mov	r0, #-2147483648	; 0x80000000
   117fc:	stm	sp, {r0, r9}
   11800:	mov	r0, r5
   11804:	mov	r1, #1
   11808:	mov	r2, #21
   1180c:	mov	r3, r7
   11810:	bl	10ebc <__sprintf_chk@plt>
   11814:	movw	r1, #21481	; 0x53e9
   11818:	movt	r1, #1
   1181c:	mov	r0, #1
   11820:	mov	r2, r5
   11824:	bl	10ee0 <__printf_chk@plt>
   11828:	mov	r0, r4
   1182c:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11830:	mov	r2, r0
   11834:	movw	r1, #21495	; 0x53f7
   11838:	movt	r1, #1
   1183c:	mov	r0, #1
   11840:	bl	10ee0 <__printf_chk@plt>
   11844:	str	r6, [sp]
   11848:	mvn	r6, #-2147483648	; 0x80000000
   1184c:	str	r8, [sp, #4]
   11850:	mov	r0, r5
   11854:	mov	r1, #1
   11858:	mov	r2, #21
   1185c:	mov	r3, sl
   11860:	bl	10ebc <__sprintf_chk@plt>
   11864:	movw	r1, #21511	; 0x5407
   11868:	movt	r1, #1
   1186c:	mov	r0, #1
   11870:	mov	r2, r5
   11874:	bl	10ee0 <__printf_chk@plt>
   11878:	mov	r0, r4
   1187c:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11880:	mov	r2, r0
   11884:	movw	r1, #21526	; 0x5416
   11888:	movt	r1, #1
   1188c:	mov	r0, #1
   11890:	bl	10ee0 <__printf_chk@plt>
   11894:	mov	r0, #-2147483648	; 0x80000000
   11898:	stm	sp, {r0, r9}
   1189c:	mov	r0, r5
   118a0:	mov	r1, #1
   118a4:	mov	r2, #21
   118a8:	mov	r3, r7
   118ac:	bl	10ebc <__sprintf_chk@plt>
   118b0:	movw	r1, #21543	; 0x5427
   118b4:	movt	r1, #1
   118b8:	mov	r0, #1
   118bc:	mov	r2, r5
   118c0:	bl	10ee0 <__printf_chk@plt>
   118c4:	mov	r0, r4
   118c8:	bl	11c70 <__snprintf_chk@plt+0xd00>
   118cc:	mov	r2, r0
   118d0:	movw	r1, #21558	; 0x5436
   118d4:	movt	r1, #1
   118d8:	mov	r0, #1
   118dc:	bl	10ee0 <__printf_chk@plt>
   118e0:	str	r9, [sp]
   118e4:	str	r8, [sp, #4]
   118e8:	mov	r0, r5
   118ec:	mov	r1, #1
   118f0:	mov	r2, #21
   118f4:	mov	r3, sl
   118f8:	bl	10ebc <__sprintf_chk@plt>
   118fc:	movw	r1, #21575	; 0x5447
   11900:	movt	r1, #1
   11904:	mov	r0, #1
   11908:	mov	r2, r5
   1190c:	bl	10ee0 <__printf_chk@plt>
   11910:	mov	r0, r4
   11914:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11918:	mov	r2, r0
   1191c:	movw	r1, #21589	; 0x5455
   11920:	movt	r1, #1
   11924:	mov	r0, #1
   11928:	bl	10ee0 <__printf_chk@plt>
   1192c:	str	r9, [sp]
   11930:	str	r8, [sp, #4]
   11934:	mov	r0, r5
   11938:	mov	r1, #1
   1193c:	mov	r2, #21
   11940:	mov	r3, sl
   11944:	bl	10ebc <__sprintf_chk@plt>
   11948:	movw	r1, #21605	; 0x5465
   1194c:	movt	r1, #1
   11950:	mov	r0, #1
   11954:	mov	r2, r5
   11958:	bl	10ee0 <__printf_chk@plt>
   1195c:	mov	r0, r4
   11960:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11964:	mov	r2, r0
   11968:	movw	r1, #21619	; 0x5473
   1196c:	movt	r1, #1
   11970:	mov	r0, #1
   11974:	bl	10ee0 <__printf_chk@plt>
   11978:	str	r6, [sp]
   1197c:	mvn	r7, #-2147483648	; 0x80000000
   11980:	str	r8, [sp, #4]
   11984:	mov	r0, r5
   11988:	mov	r1, #1
   1198c:	mov	r2, #21
   11990:	mov	r3, sl
   11994:	bl	10ebc <__sprintf_chk@plt>
   11998:	movw	r1, #21635	; 0x5483
   1199c:	movt	r1, #1
   119a0:	mov	r0, #1
   119a4:	mov	r2, r5
   119a8:	bl	10ee0 <__printf_chk@plt>
   119ac:	mov	r0, r4
   119b0:	bl	11c70 <__snprintf_chk@plt+0xd00>
   119b4:	mov	r2, r0
   119b8:	movw	r1, #21649	; 0x5491
   119bc:	movt	r1, #1
   119c0:	mov	r0, #1
   119c4:	bl	10ee0 <__printf_chk@plt>
   119c8:	mov	r0, #-2147483648	; 0x80000000
   119cc:	str	r0, [sp]
   119d0:	mov	r6, #-2147483648	; 0x80000000
   119d4:	str	r9, [sp, #4]
   119d8:	mov	r0, r5
   119dc:	mov	r1, #1
   119e0:	mov	r2, #21
   119e4:	movw	r3, #21218	; 0x52e2
   119e8:	movt	r3, #1
   119ec:	mov	r8, r3
   119f0:	bl	10ebc <__sprintf_chk@plt>
   119f4:	movw	r1, #21665	; 0x54a1
   119f8:	movt	r1, #1
   119fc:	mov	r0, #1
   11a00:	mov	r2, r5
   11a04:	bl	10ee0 <__printf_chk@plt>
   11a08:	mov	r0, r4
   11a0c:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11a10:	mov	r2, r0
   11a14:	movw	r1, #21679	; 0x54af
   11a18:	movt	r1, #1
   11a1c:	mov	r0, #1
   11a20:	bl	10ee0 <__printf_chk@plt>
   11a24:	str	r9, [sp]
   11a28:	str	r7, [sp, #4]
   11a2c:	mov	r0, r5
   11a30:	mov	r1, #1
   11a34:	mov	r2, #21
   11a38:	mov	r3, sl
   11a3c:	bl	10ebc <__sprintf_chk@plt>
   11a40:	movw	r1, #21695	; 0x54bf
   11a44:	movt	r1, #1
   11a48:	mov	r0, #1
   11a4c:	mov	r2, r5
   11a50:	bl	10ee0 <__printf_chk@plt>
   11a54:	mov	r0, r4
   11a58:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11a5c:	mov	r2, r0
   11a60:	movw	r1, #21709	; 0x54cd
   11a64:	movt	r1, #1
   11a68:	mov	r0, #1
   11a6c:	bl	10ee0 <__printf_chk@plt>
   11a70:	adds	r6, r6, #-2147483648	; 0x80000000
   11a74:	adc	r7, r9, #-2147483648	; 0x80000000
   11a78:	stm	sp, {r6, r7}
   11a7c:	mov	r0, r5
   11a80:	mov	r1, #1
   11a84:	mov	r2, #21
   11a88:	mov	r3, r8
   11a8c:	bl	10ebc <__sprintf_chk@plt>
   11a90:	movw	r1, #21725	; 0x54dd
   11a94:	movt	r1, #1
   11a98:	mov	r0, #1
   11a9c:	mov	r2, r5
   11aa0:	bl	10ee0 <__printf_chk@plt>
   11aa4:	mov	r0, r4
   11aa8:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11aac:	mov	r2, r0
   11ab0:	movw	r1, #21739	; 0x54eb
   11ab4:	movt	r1, #1
   11ab8:	mov	r0, #1
   11abc:	bl	10ee0 <__printf_chk@plt>
   11ac0:	str	r9, [sp]
   11ac4:	mvn	r0, #-2147483648	; 0x80000000
   11ac8:	str	r0, [sp, #4]
   11acc:	mov	r0, r5
   11ad0:	mov	r1, #1
   11ad4:	mov	r2, #21
   11ad8:	mov	r3, sl
   11adc:	bl	10ebc <__sprintf_chk@plt>
   11ae0:	movw	r1, #21788	; 0x551c
   11ae4:	movt	r1, #1
   11ae8:	mov	r0, #1
   11aec:	mov	r2, r5
   11af0:	bl	10ee0 <__printf_chk@plt>
   11af4:	mov	r0, r4
   11af8:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11afc:	mov	r2, r0
   11b00:	movw	r1, #21804	; 0x552c
   11b04:	movt	r1, #1
   11b08:	mov	r0, #1
   11b0c:	bl	10ee0 <__printf_chk@plt>
   11b10:	stm	sp, {r6, r7}
   11b14:	mov	r0, r5
   11b18:	mov	r1, #1
   11b1c:	mov	r2, #21
   11b20:	mov	r3, r8
   11b24:	bl	10ebc <__sprintf_chk@plt>
   11b28:	movw	r1, #21755	; 0x54fb
   11b2c:	movt	r1, #1
   11b30:	mov	r0, #1
   11b34:	mov	r2, r5
   11b38:	bl	10ee0 <__printf_chk@plt>
   11b3c:	mov	r0, r4
   11b40:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11b44:	mov	r2, r0
   11b48:	movw	r1, #21770	; 0x550a
   11b4c:	movt	r1, #1
   11b50:	mov	r0, #1
   11b54:	bl	10ee0 <__printf_chk@plt>
   11b58:	mvn	r0, #127	; 0x7f
   11b5c:	orr	r0, r0, #127	; 0x7f
   11b60:	stm	sp, {r0, r9}
   11b64:	mov	r0, r5
   11b68:	mov	r1, #1
   11b6c:	mov	r2, #21
   11b70:	mov	r3, sl
   11b74:	bl	10ebc <__sprintf_chk@plt>
   11b78:	movw	r1, #21787	; 0x551b
   11b7c:	movt	r1, #1
   11b80:	mov	r0, #1
   11b84:	mov	r2, r5
   11b88:	bl	10ee0 <__printf_chk@plt>
   11b8c:	mov	r0, r4
   11b90:	bl	11c70 <__snprintf_chk@plt+0xd00>
   11b94:	mov	r2, r0
   11b98:	movw	r1, #21803	; 0x552b
   11b9c:	movt	r1, #1
   11ba0:	mov	r0, #1
   11ba4:	bl	10ee0 <__printf_chk@plt>
   11ba8:	movw	r1, #21821	; 0x553d
   11bac:	movt	r1, #1
   11bb0:	mov	r0, #1
   11bb4:	bl	10ee0 <__printf_chk@plt>
   11bb8:	vldr	s0, [pc, #168]	; 11c68 <__snprintf_chk@plt+0xcf8>
   11bbc:	bl	11cd0 <__snprintf_chk@plt+0xd60>
   11bc0:	movw	r1, #21830	; 0x5546
   11bc4:	movt	r1, #1
   11bc8:	mov	r0, #1
   11bcc:	bl	10ee0 <__printf_chk@plt>
   11bd0:	vldr	s0, [pc, #148]	; 11c6c <__snprintf_chk@plt+0xcfc>
   11bd4:	bl	11cd0 <__snprintf_chk@plt+0xd60>
   11bd8:	movw	r1, #21840	; 0x5550
   11bdc:	movt	r1, #1
   11be0:	mov	r0, #1
   11be4:	bl	10ee0 <__printf_chk@plt>
   11be8:	vldr	d8, [pc, #104]	; 11c58 <__snprintf_chk@plt+0xce8>
   11bec:	vorr	d0, d8, d8
   11bf0:	bl	11d04 <__snprintf_chk@plt+0xd94>
   11bf4:	movw	r1, #21850	; 0x555a
   11bf8:	movt	r1, #1
   11bfc:	mov	r0, #1
   11c00:	bl	10ee0 <__printf_chk@plt>
   11c04:	vldr	d9, [pc, #84]	; 11c60 <__snprintf_chk@plt+0xcf0>
   11c08:	vorr	d0, d9, d9
   11c0c:	bl	11d04 <__snprintf_chk@plt+0xd94>
   11c10:	movw	r1, #21839	; 0x554f
   11c14:	movt	r1, #1
   11c18:	mov	r0, #1
   11c1c:	bl	10ee0 <__printf_chk@plt>
   11c20:	vorr	d0, d8, d8
   11c24:	bl	11d38 <__snprintf_chk@plt+0xdc8>
   11c28:	movw	r1, #21849	; 0x5559
   11c2c:	movt	r1, #1
   11c30:	mov	r0, #1
   11c34:	bl	10ee0 <__printf_chk@plt>
   11c38:	vorr	d0, d9, d9
   11c3c:	bl	11d38 <__snprintf_chk@plt+0xdc8>
   11c40:	mov	r0, #0
   11c44:	sub	sp, fp, #48	; 0x30
   11c48:	vpop	{d8-d9}
   11c4c:	add	sp, sp, #4
   11c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c54:	nop	{0}
   11c58:	andeq	r0, r0, r0
   11c5c:	andseq	r0, r0, r0
   11c60:			; <UNDEFINED> instruction: 0xffffffff
   11c64:	svcvc	0x00efffff
   11c68:	addeq	r0, r0, r0
   11c6c:	svcvc	0x007fffff
   11c70:	push	{r4, r5, fp, lr}
   11c74:	add	fp, sp, #8
   11c78:	mov	r4, r0
   11c7c:	ldrb	r5, [r4, #1]!
   11c80:	cmp	r5, #45	; 0x2d
   11c84:	addeq	r4, r4, #1
   11c88:	mov	r0, r4
   11c8c:	bl	10ea4 <strlen@plt>
   11c90:	mov	r1, #48	; 0x30
   11c94:	strb	r1, [r4, #-1]
   11c98:	add	r0, r4, r0
   11c9c:	ldrb	r2, [r0, #-1]!
   11ca0:	cmp	r2, #57	; 0x39
   11ca4:	bne	11cb0 <__snprintf_chk@plt+0xd40>
   11ca8:	strb	r1, [r0]
   11cac:	b	11c9c <__snprintf_chk@plt+0xd2c>
   11cb0:	add	r1, r2, #1
   11cb4:	strb	r1, [r0]
   11cb8:	cmp	r4, r0
   11cbc:	movcc	r0, r4
   11cc0:	cmp	r5, #45	; 0x2d
   11cc4:	moveq	r1, #45	; 0x2d
   11cc8:	strbeq	r1, [r0, #-1]!
   11ccc:	pop	{r4, r5, fp, pc}
   11cd0:	push	{r4, sl, fp, lr}
   11cd4:	add	fp, sp, #8
   11cd8:	sub	sp, sp, #32
   11cdc:	add	r4, sp, #1
   11ce0:	mov	r0, r4
   11ce4:	mov	r1, #31
   11ce8:	mov	r2, #1
   11cec:	mov	r3, #0
   11cf0:	bl	11fc8 <__snprintf_chk@plt+0x1058>
   11cf4:	mov	r0, r4
   11cf8:	bl	10e38 <puts@plt>
   11cfc:	sub	sp, fp, #8
   11d00:	pop	{r4, sl, fp, pc}
   11d04:	push	{r4, sl, fp, lr}
   11d08:	add	fp, sp, #8
   11d0c:	sub	sp, sp, #40	; 0x28
   11d10:	mov	r4, sp
   11d14:	mov	r0, r4
   11d18:	mov	r1, #40	; 0x28
   11d1c:	mov	r2, #1
   11d20:	mov	r3, #0
   11d24:	bl	11e78 <__snprintf_chk@plt+0xf08>
   11d28:	mov	r0, r4
   11d2c:	bl	10e38 <puts@plt>
   11d30:	sub	sp, fp, #8
   11d34:	pop	{r4, sl, fp, pc}
   11d38:	push	{r4, sl, fp, lr}
   11d3c:	add	fp, sp, #8
   11d40:	sub	sp, sp, #40	; 0x28
   11d44:	mov	r4, sp
   11d48:	mov	r0, r4
   11d4c:	mov	r1, #40	; 0x28
   11d50:	mov	r2, #1
   11d54:	mov	r3, #0
   11d58:	bl	12118 <__snprintf_chk@plt+0x11a8>
   11d5c:	mov	r0, r4
   11d60:	bl	10e38 <puts@plt>
   11d64:	sub	sp, fp, #8
   11d68:	pop	{r4, sl, fp, pc}
   11d6c:	movw	r1, #24896	; 0x6140
   11d70:	movt	r1, #2
   11d74:	str	r0, [r1]
   11d78:	bx	lr
   11d7c:	movw	r1, #24900	; 0x6144
   11d80:	movt	r1, #2
   11d84:	strb	r0, [r1]
   11d88:	bx	lr
   11d8c:	push	{r4, r5, r6, sl, fp, lr}
   11d90:	add	fp, sp, #16
   11d94:	sub	sp, sp, #8
   11d98:	movw	r0, #24884	; 0x6134
   11d9c:	movt	r0, #2
   11da0:	ldr	r0, [r0]
   11da4:	bl	14c78 <__snprintf_chk@plt+0x3d08>
   11da8:	cmp	r0, #0
   11dac:	beq	11dd4 <__snprintf_chk@plt+0xe64>
   11db0:	movw	r0, #24900	; 0x6144
   11db4:	movt	r0, #2
   11db8:	ldrb	r0, [r0]
   11dbc:	cmp	r0, #0
   11dc0:	beq	11df4 <__snprintf_chk@plt+0xe84>
   11dc4:	bl	10eb0 <__errno_location@plt>
   11dc8:	ldr	r0, [r0]
   11dcc:	cmp	r0, #32
   11dd0:	bne	11df4 <__snprintf_chk@plt+0xe84>
   11dd4:	movw	r0, #24880	; 0x6130
   11dd8:	movt	r0, #2
   11ddc:	ldr	r0, [r0]
   11de0:	bl	14c78 <__snprintf_chk@plt+0x3d08>
   11de4:	cmp	r0, #0
   11de8:	subeq	sp, fp, #16
   11dec:	popeq	{r4, r5, r6, sl, fp, pc}
   11df0:	b	11e64 <__snprintf_chk@plt+0xef4>
   11df4:	movw	r1, #22232	; 0x56d8
   11df8:	movt	r1, #1
   11dfc:	mov	r0, #0
   11e00:	mov	r2, #5
   11e04:	bl	10da8 <dcgettext@plt>
   11e08:	mov	r4, r0
   11e0c:	movw	r0, #24896	; 0x6140
   11e10:	movt	r0, #2
   11e14:	ldr	r6, [r0]
   11e18:	bl	10eb0 <__errno_location@plt>
   11e1c:	ldr	r5, [r0]
   11e20:	cmp	r6, #0
   11e24:	bne	11e40 <__snprintf_chk@plt+0xed0>
   11e28:	movw	r2, #22248	; 0x56e8
   11e2c:	movt	r2, #1
   11e30:	mov	r0, #0
   11e34:	mov	r1, r5
   11e38:	mov	r3, r4
   11e3c:	b	11e60 <__snprintf_chk@plt+0xef0>
   11e40:	mov	r0, r6
   11e44:	bl	13a80 <__snprintf_chk@plt+0x2b10>
   11e48:	mov	r3, r0
   11e4c:	str	r4, [sp]
   11e50:	movw	r2, #22244	; 0x56e4
   11e54:	movt	r2, #1
   11e58:	mov	r0, #0
   11e5c:	mov	r1, r5
   11e60:	bl	10e20 <error@plt>
   11e64:	movw	r0, #24792	; 0x60d8
   11e68:	movt	r0, #2
   11e6c:	ldr	r0, [r0]
   11e70:	bl	10d78 <_exit@plt>
   11e74:	andeq	r0, r0, r0
   11e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e7c:	add	fp, sp, #28
   11e80:	sub	sp, sp, #4
   11e84:	vpush	{d8}
   11e88:	sub	sp, sp, #40	; 0x28
   11e8c:	vmov.f64	d8, d0
   11e90:	mov	r9, r3
   11e94:	mov	r5, r1
   11e98:	mov	sl, r0
   11e9c:	movw	r0, #11557	; 0x2d25
   11ea0:	strh	r0, [sp, #29]
   11ea4:	and	r0, r2, #1
   11ea8:	add	r8, sp, #29
   11eac:	add	r0, r8, r0
   11eb0:	mov	r1, #43	; 0x2b
   11eb4:	strb	r1, [r0, #1]!
   11eb8:	ubfx	r1, r2, #1, #1
   11ebc:	mov	r3, #32
   11ec0:	strb	r3, [r0, r1]!
   11ec4:	ubfx	r1, r2, #2, #1
   11ec8:	mov	r3, #48	; 0x30
   11ecc:	strb	r3, [r0, r1]!
   11ed0:	ubfx	r1, r2, #3, #1
   11ed4:	movw	r3, #11818	; 0x2e2a
   11ed8:	strh	r3, [r0, r1]!
   11edc:	mov	r1, #0
   11ee0:	strb	r1, [r0, #4]
   11ee4:	mov	r1, #71	; 0x47
   11ee8:	tst	r2, #16
   11eec:	movweq	r1, #103	; 0x67
   11ef0:	strb	r1, [r0, #3]
   11ef4:	mov	r1, #42	; 0x2a
   11ef8:	strb	r1, [r0, #2]
   11efc:	vldr	d16, [pc, #188]	; 11fc0 <__snprintf_chk@plt+0x1050>
   11f00:	vneg.f64	d17, d0
   11f04:	vstr	d0, [sp, #16]
   11f08:	mov	r6, #15
   11f0c:	vcmpe.f64	d0, #0.0
   11f10:	vmrs	APSR_nzcv, fpscr
   11f14:	vmov.f64	d18, d0
   11f18:	vmovmi.f64	d18, d17
   11f1c:	vcmpe.f64	d18, d16
   11f20:	vmrs	APSR_nzcv, fpscr
   11f24:	movwmi	r6, #1
   11f28:	stm	sp, {r8, r9}
   11f2c:	str	r6, [sp, #8]
   11f30:	mov	r0, sl
   11f34:	mov	r1, r5
   11f38:	mov	r2, #1
   11f3c:	mvn	r3, #0
   11f40:	bl	10f70 <__snprintf_chk@plt>
   11f44:	mov	r7, r0
   11f48:	cmp	r0, #0
   11f4c:	bmi	11fac <__snprintf_chk@plt+0x103c>
   11f50:	cmp	r7, r5
   11f54:	bcs	11f70 <__snprintf_chk@plt+0x1000>
   11f58:	mov	r0, sl
   11f5c:	mov	r1, #0
   11f60:	bl	10eec <strtod@plt>
   11f64:	vcmp.f64	d0, d8
   11f68:	vmrs	APSR_nzcv, fpscr
   11f6c:	beq	11fac <__snprintf_chk@plt+0x103c>
   11f70:	vstr	d8, [sp, #16]
   11f74:	add	r4, r6, #1
   11f78:	stm	sp, {r8, r9}
   11f7c:	str	r4, [sp, #8]
   11f80:	mov	r0, sl
   11f84:	mov	r1, r5
   11f88:	mov	r2, #1
   11f8c:	mvn	r3, #0
   11f90:	bl	10f70 <__snprintf_chk@plt>
   11f94:	mov	r7, r0
   11f98:	cmp	r6, #15
   11f9c:	bhi	11fac <__snprintf_chk@plt+0x103c>
   11fa0:	cmn	r7, #1
   11fa4:	mov	r6, r4
   11fa8:	bgt	11f50 <__snprintf_chk@plt+0xfe0>
   11fac:	mov	r0, r7
   11fb0:	sub	sp, fp, #40	; 0x28
   11fb4:	vpop	{d8}
   11fb8:	add	sp, sp, #4
   11fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fc0:	andeq	r0, r0, r0
   11fc4:	andseq	r0, r0, r0
   11fc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fcc:	add	fp, sp, #28
   11fd0:	sub	sp, sp, #4
   11fd4:	vpush	{d8-d9}
   11fd8:	sub	sp, sp, #40	; 0x28
   11fdc:	vmov.f32	s16, s0
   11fe0:	mov	r9, r3
   11fe4:	mov	r5, r1
   11fe8:	mov	sl, r0
   11fec:	movw	r0, #11557	; 0x2d25
   11ff0:	strh	r0, [sp, #29]
   11ff4:	and	r0, r2, #1
   11ff8:	add	r8, sp, #29
   11ffc:	add	r0, r8, r0
   12000:	mov	r1, #43	; 0x2b
   12004:	strb	r1, [r0, #1]!
   12008:	ubfx	r1, r2, #1, #1
   1200c:	mov	r3, #32
   12010:	strb	r3, [r0, r1]!
   12014:	ubfx	r1, r2, #2, #1
   12018:	mov	r3, #48	; 0x30
   1201c:	strb	r3, [r0, r1]!
   12020:	ubfx	r1, r2, #3, #1
   12024:	movw	r3, #11818	; 0x2e2a
   12028:	strh	r3, [r0, r1]!
   1202c:	mov	r1, #0
   12030:	strb	r1, [r0, #4]
   12034:	mov	r1, #71	; 0x47
   12038:	tst	r2, #16
   1203c:	movweq	r1, #103	; 0x67
   12040:	strb	r1, [r0, #3]
   12044:	mov	r1, #42	; 0x2a
   12048:	strb	r1, [r0, #2]
   1204c:	vcvt.f64.f32	d9, s0
   12050:	vldr	s0, [pc, #188]	; 12114 <__snprintf_chk@plt+0x11a4>
   12054:	vneg.f32	s2, s16
   12058:	vstr	d9, [sp, #16]
   1205c:	mov	r6, #6
   12060:	vcmpe.f32	s16, #0.0
   12064:	vmrs	APSR_nzcv, fpscr
   12068:	vmov.f32	s4, s16
   1206c:	vmovmi.f32	s4, s2
   12070:	vcmpe.f32	s4, s0
   12074:	vmrs	APSR_nzcv, fpscr
   12078:	movwmi	r6, #1
   1207c:	stm	sp, {r8, r9}
   12080:	str	r6, [sp, #8]
   12084:	mov	r0, sl
   12088:	mov	r1, r5
   1208c:	mov	r2, #1
   12090:	mvn	r3, #0
   12094:	bl	10f70 <__snprintf_chk@plt>
   12098:	mov	r7, r0
   1209c:	cmp	r0, #0
   120a0:	bmi	12100 <__snprintf_chk@plt+0x1190>
   120a4:	cmp	r7, r5
   120a8:	bcs	120c4 <__snprintf_chk@plt+0x1154>
   120ac:	mov	r0, sl
   120b0:	mov	r1, #0
   120b4:	bl	10e2c <strtof@plt>
   120b8:	vcmp.f32	s0, s16
   120bc:	vmrs	APSR_nzcv, fpscr
   120c0:	beq	12100 <__snprintf_chk@plt+0x1190>
   120c4:	vstr	d9, [sp, #16]
   120c8:	add	r4, r6, #1
   120cc:	stm	sp, {r8, r9}
   120d0:	str	r4, [sp, #8]
   120d4:	mov	r0, sl
   120d8:	mov	r1, r5
   120dc:	mov	r2, #1
   120e0:	mvn	r3, #0
   120e4:	bl	10f70 <__snprintf_chk@plt>
   120e8:	mov	r7, r0
   120ec:	cmp	r6, #7
   120f0:	bhi	12100 <__snprintf_chk@plt+0x1190>
   120f4:	cmn	r7, #1
   120f8:	mov	r6, r4
   120fc:	bgt	120a4 <__snprintf_chk@plt+0x1134>
   12100:	mov	r0, r7
   12104:	sub	sp, fp, #48	; 0x30
   12108:	vpop	{d8-d9}
   1210c:	add	sp, sp, #4
   12110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12114:	addeq	r0, r0, r0
   12118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1211c:	add	fp, sp, #28
   12120:	sub	sp, sp, #4
   12124:	vpush	{d8}
   12128:	sub	sp, sp, #40	; 0x28
   1212c:	vmov.f64	d8, d0
   12130:	mov	r9, r3
   12134:	mov	r5, r1
   12138:	mov	sl, r0
   1213c:	movw	r0, #11557	; 0x2d25
   12140:	strh	r0, [sp, #29]
   12144:	and	r0, r2, #1
   12148:	add	r8, sp, #29
   1214c:	add	r0, r8, r0
   12150:	mov	r1, #43	; 0x2b
   12154:	strb	r1, [r0, #1]!
   12158:	ubfx	r1, r2, #1, #1
   1215c:	mov	r3, #32
   12160:	strb	r3, [r0, r1]!
   12164:	ubfx	r1, r2, #2, #1
   12168:	mov	r3, #48	; 0x30
   1216c:	strb	r3, [r0, r1]!
   12170:	ubfx	r1, r2, #3, #1
   12174:	movw	r3, #11818	; 0x2e2a
   12178:	movt	r3, #19498	; 0x4c2a
   1217c:	str	r3, [r0, r1]!
   12180:	mov	r1, #0
   12184:	strb	r1, [r0, #5]
   12188:	mov	r1, #71	; 0x47
   1218c:	tst	r2, #16
   12190:	movweq	r1, #103	; 0x67
   12194:	strb	r1, [r0, #4]
   12198:	vldr	d16, [pc, #192]	; 12260 <__snprintf_chk@plt+0x12f0>
   1219c:	vneg.f64	d17, d0
   121a0:	vstr	d0, [sp, #16]
   121a4:	mov	r6, #15
   121a8:	vcmpe.f64	d0, #0.0
   121ac:	vmrs	APSR_nzcv, fpscr
   121b0:	vmov.f64	d18, d0
   121b4:	vmovmi.f64	d18, d17
   121b8:	vcmpe.f64	d18, d16
   121bc:	vmrs	APSR_nzcv, fpscr
   121c0:	movwmi	r6, #1
   121c4:	stm	sp, {r8, r9}
   121c8:	str	r6, [sp, #8]
   121cc:	mov	r0, sl
   121d0:	mov	r1, r5
   121d4:	mov	r2, #1
   121d8:	mvn	r3, #0
   121dc:	bl	10f70 <__snprintf_chk@plt>
   121e0:	mov	r7, r0
   121e4:	cmp	r0, #0
   121e8:	bmi	12248 <__snprintf_chk@plt+0x12d8>
   121ec:	cmp	r7, r5
   121f0:	bcs	1220c <__snprintf_chk@plt+0x129c>
   121f4:	mov	r0, sl
   121f8:	mov	r1, #0
   121fc:	bl	10d9c <strtold@plt>
   12200:	vcmp.f64	d0, d8
   12204:	vmrs	APSR_nzcv, fpscr
   12208:	beq	12248 <__snprintf_chk@plt+0x12d8>
   1220c:	vstr	d8, [sp, #16]
   12210:	add	r4, r6, #1
   12214:	stm	sp, {r8, r9}
   12218:	str	r4, [sp, #8]
   1221c:	mov	r0, sl
   12220:	mov	r1, r5
   12224:	mov	r2, #1
   12228:	mvn	r3, #0
   1222c:	bl	10f70 <__snprintf_chk@plt>
   12230:	mov	r7, r0
   12234:	cmp	r6, #15
   12238:	bhi	12248 <__snprintf_chk@plt+0x12d8>
   1223c:	cmn	r7, #1
   12240:	mov	r6, r4
   12244:	bgt	121ec <__snprintf_chk@plt+0x127c>
   12248:	mov	r0, r7
   1224c:	sub	sp, fp, #40	; 0x28
   12250:	vpop	{d8}
   12254:	add	sp, sp, #4
   12258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1225c:	nop	{0}
   12260:	andeq	r0, r0, r0
   12264:	andseq	r0, r0, r0
   12268:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1226c:	add	fp, sp, #24
   12270:	sub	sp, sp, #8
   12274:	movw	r6, #24888	; 0x6138
   12278:	movt	r6, #2
   1227c:	ldr	r7, [r6]
   12280:	mov	r4, #0
   12284:	str	r4, [r6]
   12288:	cmp	r0, #2
   1228c:	bne	12300 <__snprintf_chk@plt+0x1390>
   12290:	mov	r8, r3
   12294:	mov	r5, r2
   12298:	str	r4, [sp]
   1229c:	movw	r2, #22251	; 0x56eb
   122a0:	movt	r2, #1
   122a4:	movw	r3, #22268	; 0x56fc
   122a8:	movt	r3, #1
   122ac:	mov	r0, #2
   122b0:	bl	10e74 <getopt_long@plt>
   122b4:	cmp	r0, #104	; 0x68
   122b8:	beq	122f4 <__snprintf_chk@plt+0x1384>
   122bc:	cmp	r0, #118	; 0x76
   122c0:	bne	12300 <__snprintf_chk@plt+0x1390>
   122c4:	ldr	r3, [fp, #8]
   122c8:	add	r1, fp, #16
   122cc:	str	r1, [sp, #4]
   122d0:	movw	r0, #24884	; 0x6134
   122d4:	movt	r0, #2
   122d8:	ldr	r0, [r0]
   122dc:	str	r1, [sp]
   122e0:	mov	r1, r5
   122e4:	mov	r2, r8
   122e8:	bl	14358 <__snprintf_chk@plt+0x33e8>
   122ec:	mov	r0, #0
   122f0:	bl	10e8c <exit@plt>
   122f4:	ldr	r1, [fp, #12]
   122f8:	mov	r0, #0
   122fc:	blx	r1
   12300:	movw	r0, #24872	; 0x6128
   12304:	movt	r0, #2
   12308:	str	r4, [r0]
   1230c:	str	r7, [r6]
   12310:	sub	sp, fp, #24
   12314:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12318:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1231c:	add	fp, sp, #24
   12320:	sub	sp, sp, #8
   12324:	mov	r8, r3
   12328:	mov	r9, r2
   1232c:	movw	r7, #24888	; 0x6138
   12330:	movt	r7, #2
   12334:	ldr	r4, [r7]
   12338:	mov	r2, #1
   1233c:	str	r2, [r7]
   12340:	mov	r6, #0
   12344:	str	r6, [sp]
   12348:	ldr	r3, [fp, #12]
   1234c:	movw	r5, #21006	; 0x520e
   12350:	movt	r5, #1
   12354:	movw	r2, #22251	; 0x56eb
   12358:	movt	r2, #1
   1235c:	cmp	r3, #0
   12360:	movne	r2, r5
   12364:	movw	r3, #22268	; 0x56fc
   12368:	movt	r3, #1
   1236c:	bl	10e74 <getopt_long@plt>
   12370:	cmn	r0, #1
   12374:	beq	123a0 <__snprintf_chk@plt+0x1430>
   12378:	cmp	r0, #104	; 0x68
   1237c:	beq	12394 <__snprintf_chk@plt+0x1424>
   12380:	cmp	r0, #118	; 0x76
   12384:	beq	123ac <__snprintf_chk@plt+0x143c>
   12388:	movw	r0, #24792	; 0x60d8
   1238c:	movt	r0, #2
   12390:	ldr	r6, [r0]
   12394:	ldr	r1, [fp, #16]
   12398:	mov	r0, r6
   1239c:	blx	r1
   123a0:	str	r4, [r7]
   123a4:	sub	sp, fp, #24
   123a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   123ac:	ldr	r3, [fp, #8]
   123b0:	add	r1, fp, #20
   123b4:	str	r1, [sp, #4]
   123b8:	movw	r0, #24884	; 0x6134
   123bc:	movt	r0, #2
   123c0:	ldr	r0, [r0]
   123c4:	str	r1, [sp]
   123c8:	mov	r1, r9
   123cc:	mov	r2, r8
   123d0:	bl	14358 <__snprintf_chk@plt+0x33e8>
   123d4:	mov	r0, #0
   123d8:	bl	10e8c <exit@plt>
   123dc:	push	{r4, r5, fp, lr}
   123e0:	add	fp, sp, #8
   123e4:	cmp	r0, #0
   123e8:	beq	1247c <__snprintf_chk@plt+0x150c>
   123ec:	mov	r4, r0
   123f0:	mov	r1, #47	; 0x2f
   123f4:	bl	10f34 <strrchr@plt>
   123f8:	cmp	r0, #0
   123fc:	mov	r5, r4
   12400:	addne	r5, r0, #1
   12404:	sub	r0, r5, r4
   12408:	cmp	r0, #7
   1240c:	blt	12460 <__snprintf_chk@plt+0x14f0>
   12410:	sub	r0, r5, #7
   12414:	movw	r1, #22372	; 0x5764
   12418:	movt	r1, #1
   1241c:	mov	r2, #7
   12420:	bl	10f58 <strncmp@plt>
   12424:	cmp	r0, #0
   12428:	bne	12460 <__snprintf_chk@plt+0x14f0>
   1242c:	movw	r1, #22380	; 0x576c
   12430:	movt	r1, #1
   12434:	mov	r0, r5
   12438:	mov	r2, #3
   1243c:	bl	10f58 <strncmp@plt>
   12440:	cmp	r0, #0
   12444:	beq	12450 <__snprintf_chk@plt+0x14e0>
   12448:	mov	r4, r5
   1244c:	b	12460 <__snprintf_chk@plt+0x14f0>
   12450:	add	r4, r5, #3
   12454:	movw	r0, #24864	; 0x6120
   12458:	movt	r0, #2
   1245c:	str	r4, [r0]
   12460:	movw	r0, #24868	; 0x6124
   12464:	movt	r0, #2
   12468:	str	r4, [r0]
   1246c:	movw	r0, #24904	; 0x6148
   12470:	movt	r0, #2
   12474:	str	r4, [r0]
   12478:	pop	{r4, r5, fp, pc}
   1247c:	movw	r0, #24880	; 0x6130
   12480:	movt	r0, #2
   12484:	ldr	r3, [r0]
   12488:	movw	r0, #22316	; 0x572c
   1248c:	movt	r0, #1
   12490:	mov	r1, #55	; 0x37
   12494:	mov	r2, #1
   12498:	bl	10dd8 <fwrite@plt>
   1249c:	bl	10f64 <abort@plt>
   124a0:	push	{r4, r5, r6, sl, fp, lr}
   124a4:	add	fp, sp, #16
   124a8:	mov	r4, r0
   124ac:	movw	r0, #24912	; 0x6150
   124b0:	movt	r0, #2
   124b4:	cmp	r4, #0
   124b8:	moveq	r4, r0
   124bc:	bl	10eb0 <__errno_location@plt>
   124c0:	mov	r5, r0
   124c4:	ldr	r6, [r0]
   124c8:	mov	r0, r4
   124cc:	mov	r1, #48	; 0x30
   124d0:	bl	14798 <__snprintf_chk@plt+0x3828>
   124d4:	str	r6, [r5]
   124d8:	pop	{r4, r5, r6, sl, fp, pc}
   124dc:	movw	r1, #24912	; 0x6150
   124e0:	movt	r1, #2
   124e4:	cmp	r0, #0
   124e8:	movne	r1, r0
   124ec:	ldr	r0, [r1]
   124f0:	bx	lr
   124f4:	movw	r2, #24912	; 0x6150
   124f8:	movt	r2, #2
   124fc:	cmp	r0, #0
   12500:	movne	r2, r0
   12504:	str	r1, [r2]
   12508:	bx	lr
   1250c:	movw	r3, #24912	; 0x6150
   12510:	movt	r3, #2
   12514:	cmp	r0, #0
   12518:	movne	r3, r0
   1251c:	ubfx	r0, r1, #5, #3
   12520:	add	ip, r3, r0, lsl #2
   12524:	ldr	r3, [ip, #8]
   12528:	and	r1, r1, #31
   1252c:	mov	r0, #1
   12530:	and	r0, r0, r3, lsr r1
   12534:	and	r2, r2, #1
   12538:	eor	r2, r0, r2
   1253c:	eor	r1, r3, r2, lsl r1
   12540:	str	r1, [ip, #8]
   12544:	bx	lr
   12548:	movw	r2, #24912	; 0x6150
   1254c:	movt	r2, #2
   12550:	cmp	r0, #0
   12554:	movne	r2, r0
   12558:	ldr	r0, [r2, #4]
   1255c:	str	r1, [r2, #4]
   12560:	bx	lr
   12564:	push	{fp, lr}
   12568:	mov	fp, sp
   1256c:	movw	r3, #24912	; 0x6150
   12570:	movt	r3, #2
   12574:	cmp	r0, #0
   12578:	movne	r3, r0
   1257c:	mov	r0, #10
   12580:	str	r0, [r3]
   12584:	cmp	r1, #0
   12588:	cmpne	r2, #0
   1258c:	bne	12594 <__snprintf_chk@plt+0x1624>
   12590:	bl	10f64 <abort@plt>
   12594:	str	r1, [r3, #40]	; 0x28
   12598:	str	r2, [r3, #44]	; 0x2c
   1259c:	pop	{fp, pc}
   125a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125a4:	add	fp, sp, #28
   125a8:	sub	sp, sp, #20
   125ac:	mov	r8, r3
   125b0:	mov	r9, r2
   125b4:	mov	sl, r1
   125b8:	mov	r7, r0
   125bc:	ldr	r0, [fp, #8]
   125c0:	movw	r5, #24912	; 0x6150
   125c4:	movt	r5, #2
   125c8:	cmp	r0, #0
   125cc:	movne	r5, r0
   125d0:	bl	10eb0 <__errno_location@plt>
   125d4:	mov	r4, r0
   125d8:	ldm	r5, {r0, r1}
   125dc:	ldr	r2, [r5, #40]	; 0x28
   125e0:	ldr	r3, [r5, #44]	; 0x2c
   125e4:	ldr	r6, [r4]
   125e8:	add	r5, r5, #8
   125ec:	stm	sp, {r0, r1, r5}
   125f0:	str	r2, [sp, #12]
   125f4:	str	r3, [sp, #16]
   125f8:	mov	r0, r7
   125fc:	mov	r1, sl
   12600:	mov	r2, r9
   12604:	mov	r3, r8
   12608:	bl	12618 <__snprintf_chk@plt+0x16a8>
   1260c:	str	r6, [r4]
   12610:	sub	sp, fp, #28
   12614:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1261c:	add	fp, sp, #28
   12620:	sub	sp, sp, #156	; 0x9c
   12624:	mov	r9, r3
   12628:	mov	r7, r1
   1262c:	mov	r6, r0
   12630:	str	r2, [fp, #-80]	; 0xffffffb0
   12634:	add	r0, r2, #1
   12638:	str	r0, [sp, #76]	; 0x4c
   1263c:	ldr	r0, [fp, #12]
   12640:	and	r1, r0, #1
   12644:	str	r1, [sp, #40]	; 0x28
   12648:	and	r1, r0, #4
   1264c:	str	r1, [sp, #36]	; 0x24
   12650:	ubfx	r4, r0, #1, #1
   12654:	bl	10df0 <__ctype_get_mb_cur_max@plt>
   12658:	str	r0, [sp, #44]	; 0x2c
   1265c:	ldr	r0, [fp, #24]
   12660:	str	r0, [sp, #88]	; 0x58
   12664:	ldr	r0, [fp, #20]
   12668:	str	r0, [sp, #80]	; 0x50
   1266c:	ldr	r1, [fp, #8]
   12670:	mov	r0, #0
   12674:	str	r0, [sp, #84]	; 0x54
   12678:	mov	r0, #0
   1267c:	str	r0, [fp, #-84]	; 0xffffffac
   12680:	mov	r0, #0
   12684:	str	r0, [fp, #-72]	; 0xffffffb8
   12688:	mov	r0, #0
   1268c:	mov	r2, #0
   12690:	str	r2, [fp, #-56]	; 0xffffffc8
   12694:	mov	r2, #0
   12698:	str	r2, [sp, #64]	; 0x40
   1269c:	mov	r2, #1
   126a0:	str	r2, [fp, #-48]	; 0xffffffd0
   126a4:	cmp	r1, #10
   126a8:	bhi	135d4 <__snprintf_chk@plt+0x2664>
   126ac:	mov	sl, r7
   126b0:	mov	r7, r1
   126b4:	add	r1, pc, #24
   126b8:	mov	r8, #0
   126bc:	mov	r2, #1
   126c0:	mov	r3, #0
   126c4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   126c8:	mov	lr, r9
   126cc:	mov	r5, r6
   126d0:	ldr	pc, [r1, r7, lsl #2]
   126d4:	andeq	r2, r1, r8, lsr #15
   126d8:	andeq	r2, r1, r8, ror #15
   126dc:			; <UNDEFINED> instruction: 0x000127b8
   126e0:	andeq	r2, r1, r0, lsr #15
   126e4:	ldrdeq	r2, [r1], -ip
   126e8:	andeq	r2, r1, ip, lsr r8
   126ec:	andeq	r2, r1, r8, asr #15
   126f0:	muleq	r1, r8, r8
   126f4:	andeq	r2, r1, r0, lsl #14
   126f8:	andeq	r2, r1, r0, lsl #14
   126fc:	andeq	r2, r1, ip, lsr #14
   12700:	movw	r0, #22464	; 0x57c0
   12704:	movt	r0, #1
   12708:	mov	r1, r7
   1270c:	bl	13bdc <__snprintf_chk@plt+0x2c6c>
   12710:	str	r0, [sp, #80]	; 0x50
   12714:	movw	r0, #22466	; 0x57c2
   12718:	movt	r0, #1
   1271c:	mov	r1, r7
   12720:	bl	13bdc <__snprintf_chk@plt+0x2c6c>
   12724:	mov	r5, r6
   12728:	str	r0, [sp, #88]	; 0x58
   1272c:	mov	r8, #0
   12730:	tst	r4, #1
   12734:	str	r7, [fp, #-64]	; 0xffffffc0
   12738:	bne	12770 <__snprintf_chk@plt+0x1800>
   1273c:	ldr	r0, [sp, #80]	; 0x50
   12740:	ldrb	r0, [r0]
   12744:	cmp	r0, #0
   12748:	beq	12770 <__snprintf_chk@plt+0x1800>
   1274c:	ldr	r1, [sp, #80]	; 0x50
   12750:	add	r1, r1, #1
   12754:	mov	r8, #0
   12758:	cmp	r8, sl
   1275c:	strbcc	r0, [r5, r8]
   12760:	ldrb	r0, [r1, r8]
   12764:	add	r8, r8, #1
   12768:	cmp	r0, #0
   1276c:	bne	12758 <__snprintf_chk@plt+0x17e8>
   12770:	ldr	r7, [sp, #88]	; 0x58
   12774:	mov	r0, r7
   12778:	bl	10ea4 <strlen@plt>
   1277c:	mov	r5, r6
   12780:	str	r0, [fp, #-72]	; 0xffffffb8
   12784:	str	r7, [fp, #-84]	; 0xffffffac
   12788:	mov	r2, #1
   1278c:	mov	r3, r4
   12790:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12794:	mov	lr, r9
   12798:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1279c:	b	12898 <__snprintf_chk@plt+0x1928>
   127a0:	mov	r0, #1
   127a4:	b	127e8 <__snprintf_chk@plt+0x1878>
   127a8:	mov	r7, #0
   127ac:	mov	r8, #0
   127b0:	mov	r2, r0
   127b4:	b	12894 <__snprintf_chk@plt+0x1924>
   127b8:	tst	r4, #1
   127bc:	bne	127e8 <__snprintf_chk@plt+0x1878>
   127c0:	mov	r2, r0
   127c4:	b	12810 <__snprintf_chk@plt+0x18a0>
   127c8:	mov	r0, #1
   127cc:	str	r0, [fp, #-72]	; 0xffffffb8
   127d0:	mov	r8, #0
   127d4:	mov	r7, #5
   127d8:	b	12854 <__snprintf_chk@plt+0x18e4>
   127dc:	mov	r2, #1
   127e0:	tst	r4, #1
   127e4:	beq	12810 <__snprintf_chk@plt+0x18a0>
   127e8:	mov	r1, #1
   127ec:	str	r1, [fp, #-72]	; 0xffffffb8
   127f0:	mov	r8, #0
   127f4:	mov	r7, #2
   127f8:	movw	r1, #22466	; 0x57c2
   127fc:	movt	r1, #1
   12800:	str	r1, [fp, #-84]	; 0xffffffac
   12804:	mov	r2, r0
   12808:	mov	r3, #1
   1280c:	b	12898 <__snprintf_chk@plt+0x1928>
   12810:	mov	r8, #1
   12814:	mov	r7, #2
   12818:	cmp	sl, #0
   1281c:	movne	r0, #39	; 0x27
   12820:	strbne	r0, [r5]
   12824:	movw	r0, #22466	; 0x57c2
   12828:	movt	r0, #1
   1282c:	str	r0, [fp, #-84]	; 0xffffffac
   12830:	mov	r0, #1
   12834:	str	r0, [fp, #-72]	; 0xffffffb8
   12838:	b	12894 <__snprintf_chk@plt+0x1924>
   1283c:	mov	r7, #5
   12840:	tst	r4, #1
   12844:	beq	1286c <__snprintf_chk@plt+0x18fc>
   12848:	mov	r0, #1
   1284c:	str	r0, [fp, #-72]	; 0xffffffb8
   12850:	mov	r8, #0
   12854:	movw	r0, #22462	; 0x57be
   12858:	movt	r0, #1
   1285c:	str	r0, [fp, #-84]	; 0xffffffac
   12860:	mov	r2, #1
   12864:	mov	r3, #1
   12868:	b	12898 <__snprintf_chk@plt+0x1928>
   1286c:	cmp	sl, #0
   12870:	movne	r0, #34	; 0x22
   12874:	strbne	r0, [r5]
   12878:	mov	r8, #1
   1287c:	movw	r0, #22462	; 0x57be
   12880:	movt	r0, #1
   12884:	str	r0, [fp, #-84]	; 0xffffffac
   12888:	mov	r0, #1
   1288c:	str	r0, [fp, #-72]	; 0xffffffb8
   12890:	mov	r2, #1
   12894:	mov	r3, #0
   12898:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1289c:	cmp	r0, #0
   128a0:	movwne	r0, #1
   128a4:	and	r1, r0, r3
   128a8:	and	r1, r2, r1
   128ac:	str	r1, [sp, #56]	; 0x38
   128b0:	sub	r1, r7, #2
   128b4:	clz	r1, r1
   128b8:	lsr	r1, r1, #5
   128bc:	and	r1, r1, r3
   128c0:	str	r1, [sp, #68]	; 0x44
   128c4:	str	r7, [fp, #-64]	; 0xffffffc0
   128c8:	subs	r1, r7, #2
   128cc:	movwne	r1, #1
   128d0:	eor	r4, r3, #1
   128d4:	str	r4, [fp, #-88]	; 0xffffffa8
   128d8:	orr	r4, r1, r4
   128dc:	str	r4, [sp, #72]	; 0x48
   128e0:	and	r1, r1, r2
   128e4:	and	r0, r0, r1
   128e8:	str	r0, [fp, #-60]	; 0xffffffc4
   128ec:	str	r3, [fp, #-76]	; 0xffffffb4
   128f0:	orr	r0, r1, r3
   128f4:	eor	r0, r0, #1
   128f8:	ldr	r1, [fp, #16]
   128fc:	clz	r1, r1
   12900:	lsr	r1, r1, #5
   12904:	orr	r0, r1, r0
   12908:	str	r0, [fp, #-68]	; 0xffffffbc
   1290c:	str	r2, [sp, #92]	; 0x5c
   12910:	eor	r0, r2, #1
   12914:	str	r0, [sp, #60]	; 0x3c
   12918:	mov	r7, #0
   1291c:	cmn	lr, #1
   12920:	beq	12930 <__snprintf_chk@plt+0x19c0>
   12924:	cmp	r7, lr
   12928:	bne	1293c <__snprintf_chk@plt+0x19cc>
   1292c:	b	13448 <__snprintf_chk@plt+0x24d8>
   12930:	ldrb	r0, [ip, r7]
   12934:	cmp	r0, #0
   12938:	beq	13448 <__snprintf_chk@plt+0x24d8>
   1293c:	mov	r9, #0
   12940:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12944:	cmp	r0, #0
   12948:	beq	1297c <__snprintf_chk@plt+0x1a0c>
   1294c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12950:	add	r4, r7, r0
   12954:	cmp	r0, #2
   12958:	bcc	12974 <__snprintf_chk@plt+0x1a04>
   1295c:	cmn	lr, #1
   12960:	bne	12974 <__snprintf_chk@plt+0x1a04>
   12964:	mov	r0, ip
   12968:	bl	10ea4 <strlen@plt>
   1296c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12970:	mov	lr, r0
   12974:	cmp	r4, lr
   12978:	bls	12988 <__snprintf_chk@plt+0x1a18>
   1297c:	mov	r0, #0
   12980:	str	r0, [fp, #-52]	; 0xffffffcc
   12984:	b	129cc <__snprintf_chk@plt+0x1a5c>
   12988:	mov	r4, lr
   1298c:	add	r0, ip, r7
   12990:	ldr	r1, [fp, #-84]	; 0xffffffac
   12994:	ldr	r2, [fp, #-72]	; 0xffffffb8
   12998:	bl	10e98 <bcmp@plt>
   1299c:	cmp	r0, #0
   129a0:	mov	r1, r0
   129a4:	movwne	r1, #1
   129a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   129ac:	orr	r1, r1, r2
   129b0:	tst	r1, #1
   129b4:	beq	1351c <__snprintf_chk@plt+0x25ac>
   129b8:	clz	r0, r0
   129bc:	lsr	r0, r0, #5
   129c0:	str	r0, [fp, #-52]	; 0xffffffcc
   129c4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   129c8:	mov	lr, r4
   129cc:	ldrb	r4, [ip, r7]
   129d0:	cmp	r4, #126	; 0x7e
   129d4:	bhi	12f04 <__snprintf_chk@plt+0x1f94>
   129d8:	mov	r6, #1
   129dc:	mov	r2, #110	; 0x6e
   129e0:	mov	r0, #97	; 0x61
   129e4:	add	r3, pc, #4
   129e8:	mov	r1, #0
   129ec:	ldr	pc, [r3, r4, lsl #2]
   129f0:	andeq	r2, r1, r4, ror #26
   129f4:	andeq	r2, r1, r4, lsl #30
   129f8:	andeq	r2, r1, r4, lsl #30
   129fc:	andeq	r2, r1, r4, lsl #30
   12a00:	andeq	r2, r1, r4, lsl #30
   12a04:	andeq	r2, r1, r4, lsl #30
   12a08:	andeq	r2, r1, r4, lsl #30
   12a0c:	ldrdeq	r2, [r1], -r8
   12a10:	andeq	r2, r1, r4, asr #26
   12a14:	andeq	r2, r1, ip, lsr sp
   12a18:	andeq	r2, r1, r0, asr sp
   12a1c:	andeq	r2, r1, ip, ror #28
   12a20:	andeq	r2, r1, r4, lsr sp
   12a24:	andeq	r2, r1, ip, asr #26
   12a28:	andeq	r2, r1, r4, lsl #30
   12a2c:	andeq	r2, r1, r4, lsl #30
   12a30:	andeq	r2, r1, r4, lsl #30
   12a34:	andeq	r2, r1, r4, lsl #30
   12a38:	andeq	r2, r1, r4, lsl #30
   12a3c:	andeq	r2, r1, r4, lsl #30
   12a40:	andeq	r2, r1, r4, lsl #30
   12a44:	andeq	r2, r1, r4, lsl #30
   12a48:	andeq	r2, r1, r4, lsl #30
   12a4c:	andeq	r2, r1, r4, lsl #30
   12a50:	andeq	r2, r1, r4, lsl #30
   12a54:	andeq	r2, r1, r4, lsl #30
   12a58:	andeq	r2, r1, r4, lsl #30
   12a5c:	andeq	r2, r1, r4, lsl #30
   12a60:	andeq	r2, r1, r4, lsl #30
   12a64:	andeq	r2, r1, r4, lsl #30
   12a68:	andeq	r2, r1, r4, lsl #30
   12a6c:	andeq	r2, r1, r4, lsl #30
   12a70:	andeq	r2, r1, r8, ror #25
   12a74:	andeq	r2, r1, ip, ror #25
   12a78:	andeq	r2, r1, ip, ror #25
   12a7c:	ldrdeq	r2, [r1], -r4
   12a80:	andeq	r2, r1, ip, ror #25
   12a84:	andeq	r2, r1, ip, ror #23
   12a88:	andeq	r2, r1, ip, ror #25
   12a8c:	andeq	r2, r1, r4, ror lr
   12a90:	andeq	r2, r1, ip, ror #25
   12a94:	andeq	r2, r1, ip, ror #25
   12a98:	andeq	r2, r1, ip, ror #25
   12a9c:	andeq	r2, r1, ip, ror #23
   12aa0:	andeq	r2, r1, ip, ror #23
   12aa4:	andeq	r2, r1, ip, ror #23
   12aa8:	andeq	r2, r1, ip, ror #23
   12aac:	andeq	r2, r1, ip, ror #23
   12ab0:	andeq	r2, r1, ip, ror #23
   12ab4:	andeq	r2, r1, ip, ror #23
   12ab8:	andeq	r2, r1, ip, ror #23
   12abc:	andeq	r2, r1, ip, ror #23
   12ac0:	andeq	r2, r1, ip, ror #23
   12ac4:	andeq	r2, r1, ip, ror #23
   12ac8:	andeq	r2, r1, ip, ror #23
   12acc:	andeq	r2, r1, ip, ror #23
   12ad0:	andeq	r2, r1, ip, ror #23
   12ad4:	andeq	r2, r1, ip, ror #23
   12ad8:	andeq	r2, r1, ip, ror #23
   12adc:	andeq	r2, r1, ip, ror #25
   12ae0:	andeq	r2, r1, ip, ror #25
   12ae4:	andeq	r2, r1, ip, ror #25
   12ae8:	andeq	r2, r1, ip, ror #25
   12aec:	andeq	r2, r1, ip, lsr lr
   12af0:	andeq	r2, r1, r4, lsl #30
   12af4:	andeq	r2, r1, ip, ror #23
   12af8:	andeq	r2, r1, ip, ror #23
   12afc:	andeq	r2, r1, ip, ror #23
   12b00:	andeq	r2, r1, ip, ror #23
   12b04:	andeq	r2, r1, ip, ror #23
   12b08:	andeq	r2, r1, ip, ror #23
   12b0c:	andeq	r2, r1, ip, ror #23
   12b10:	andeq	r2, r1, ip, ror #23
   12b14:	andeq	r2, r1, ip, ror #23
   12b18:	andeq	r2, r1, ip, ror #23
   12b1c:	andeq	r2, r1, ip, ror #23
   12b20:	andeq	r2, r1, ip, ror #23
   12b24:	andeq	r2, r1, ip, ror #23
   12b28:	andeq	r2, r1, ip, ror #23
   12b2c:	andeq	r2, r1, ip, ror #23
   12b30:	andeq	r2, r1, ip, ror #23
   12b34:	andeq	r2, r1, ip, ror #23
   12b38:	andeq	r2, r1, ip, ror #23
   12b3c:	andeq	r2, r1, ip, ror #23
   12b40:	andeq	r2, r1, ip, ror #23
   12b44:	andeq	r2, r1, ip, ror #23
   12b48:	andeq	r2, r1, ip, ror #23
   12b4c:	andeq	r2, r1, ip, ror #23
   12b50:	andeq	r2, r1, ip, ror #23
   12b54:	andeq	r2, r1, ip, ror #23
   12b58:	andeq	r2, r1, ip, ror #23
   12b5c:	andeq	r2, r1, ip, ror #25
   12b60:	andeq	r2, r1, r4, lsl sp
   12b64:	andeq	r2, r1, ip, ror #23
   12b68:	andeq	r2, r1, ip, ror #25
   12b6c:	andeq	r2, r1, ip, ror #23
   12b70:	andeq	r2, r1, ip, ror #25
   12b74:	andeq	r2, r1, ip, ror #23
   12b78:	andeq	r2, r1, ip, ror #23
   12b7c:	andeq	r2, r1, ip, ror #23
   12b80:	andeq	r2, r1, ip, ror #23
   12b84:	andeq	r2, r1, ip, ror #23
   12b88:	andeq	r2, r1, ip, ror #23
   12b8c:	andeq	r2, r1, ip, ror #23
   12b90:	andeq	r2, r1, ip, ror #23
   12b94:	andeq	r2, r1, ip, ror #23
   12b98:	andeq	r2, r1, ip, ror #23
   12b9c:	andeq	r2, r1, ip, ror #23
   12ba0:	andeq	r2, r1, ip, ror #23
   12ba4:	andeq	r2, r1, ip, ror #23
   12ba8:	andeq	r2, r1, ip, ror #23
   12bac:	andeq	r2, r1, ip, ror #23
   12bb0:	andeq	r2, r1, ip, ror #23
   12bb4:	andeq	r2, r1, ip, ror #23
   12bb8:	andeq	r2, r1, ip, ror #23
   12bbc:	andeq	r2, r1, ip, ror #23
   12bc0:	andeq	r2, r1, ip, ror #23
   12bc4:	andeq	r2, r1, ip, ror #23
   12bc8:	andeq	r2, r1, ip, ror #23
   12bcc:	andeq	r2, r1, ip, ror #23
   12bd0:	andeq	r2, r1, ip, ror #23
   12bd4:	andeq	r2, r1, ip, ror #23
   12bd8:	andeq	r2, r1, ip, ror #23
   12bdc:	andeq	r2, r1, r8, lsr #25
   12be0:	andeq	r2, r1, ip, ror #25
   12be4:	andeq	r2, r1, r8, lsr #25
   12be8:	ldrdeq	r2, [r1], -r4
   12bec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12bf0:	tst	r0, #1
   12bf4:	bne	12c20 <__snprintf_chk@plt+0x1cb0>
   12bf8:	ubfx	r0, r4, #5, #3
   12bfc:	ldr	r1, [fp, #16]
   12c00:	ldr	r0, [r1, r0, lsl #2]
   12c04:	and	r1, r4, #31
   12c08:	mov	r2, #1
   12c0c:	tst	r0, r2, lsl r1
   12c10:	beq	12c20 <__snprintf_chk@plt+0x1cb0>
   12c14:	mov	r0, r4
   12c18:	mov	r1, r6
   12c1c:	b	12c34 <__snprintf_chk@plt+0x1cc4>
   12c20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12c24:	cmp	r0, #0
   12c28:	mov	r0, r4
   12c2c:	mov	r1, r6
   12c30:	beq	12f6c <__snprintf_chk@plt+0x1ffc>
   12c34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12c38:	tst	r2, #1
   12c3c:	bne	13530 <__snprintf_chk@plt+0x25c0>
   12c40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12c44:	subs	r2, r2, #2
   12c48:	movwne	r2, #1
   12c4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c50:	orr	r2, r2, r3
   12c54:	tst	r2, #1
   12c58:	bne	12c94 <__snprintf_chk@plt+0x1d24>
   12c5c:	cmp	r8, sl
   12c60:	movcc	r2, #39	; 0x27
   12c64:	strbcc	r2, [r5, r8]
   12c68:	add	r2, r8, #1
   12c6c:	cmp	r2, sl
   12c70:	movcc	r3, #36	; 0x24
   12c74:	strbcc	r3, [r5, r2]
   12c78:	add	r2, r8, #2
   12c7c:	cmp	r2, sl
   12c80:	movcc	r3, #39	; 0x27
   12c84:	strbcc	r3, [r5, r2]
   12c88:	add	r8, r8, #3
   12c8c:	mov	r2, #1
   12c90:	str	r2, [fp, #-56]	; 0xffffffc8
   12c94:	cmp	r8, sl
   12c98:	movcc	r2, #92	; 0x5c
   12c9c:	strbcc	r2, [r5, r8]
   12ca0:	add	r8, r8, #1
   12ca4:	b	12fb0 <__snprintf_chk@plt+0x2040>
   12ca8:	cmp	lr, #1
   12cac:	beq	12cd4 <__snprintf_chk@plt+0x1d64>
   12cb0:	mov	r6, #0
   12cb4:	cmn	lr, #1
   12cb8:	bne	12ce0 <__snprintf_chk@plt+0x1d70>
   12cbc:	ldrb	r0, [ip, #1]
   12cc0:	cmp	r0, #0
   12cc4:	beq	12cd4 <__snprintf_chk@plt+0x1d64>
   12cc8:	mvn	lr, #0
   12ccc:	mov	r9, #0
   12cd0:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12cd4:	mov	r6, #0
   12cd8:	cmp	r7, #0
   12cdc:	beq	12ce8 <__snprintf_chk@plt+0x1d78>
   12ce0:	mov	r9, #0
   12ce4:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12ce8:	mov	r1, #1
   12cec:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12cf0:	cmp	r0, #2
   12cf4:	bne	12d0c <__snprintf_chk@plt+0x1d9c>
   12cf8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12cfc:	tst	r0, #1
   12d00:	mov	r6, r1
   12d04:	beq	12bec <__snprintf_chk@plt+0x1c7c>
   12d08:	b	13530 <__snprintf_chk@plt+0x25c0>
   12d0c:	mov	r6, r1
   12d10:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12d14:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d18:	cmp	r0, #2
   12d1c:	bne	12f50 <__snprintf_chk@plt+0x1fe0>
   12d20:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d24:	tst	r0, #1
   12d28:	bne	13530 <__snprintf_chk@plt+0x25c0>
   12d2c:	mov	r9, #0
   12d30:	b	12f64 <__snprintf_chk@plt+0x1ff4>
   12d34:	mov	r0, #102	; 0x66
   12d38:	b	12fd8 <__snprintf_chk@plt+0x2068>
   12d3c:	mov	r2, #116	; 0x74
   12d40:	b	12d50 <__snprintf_chk@plt+0x1de0>
   12d44:	mov	r0, #98	; 0x62
   12d48:	b	12fd8 <__snprintf_chk@plt+0x2068>
   12d4c:	mov	r2, #114	; 0x72
   12d50:	ldr	r0, [sp, #72]	; 0x48
   12d54:	tst	r0, #1
   12d58:	mov	r0, r2
   12d5c:	bne	12fd8 <__snprintf_chk@plt+0x2068>
   12d60:	b	13530 <__snprintf_chk@plt+0x25c0>
   12d64:	ldr	r0, [sp, #92]	; 0x5c
   12d68:	tst	r0, #1
   12d6c:	beq	12ff4 <__snprintf_chk@plt+0x2084>
   12d70:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12d74:	tst	r0, #1
   12d78:	bne	13530 <__snprintf_chk@plt+0x25c0>
   12d7c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12d80:	subs	r0, r0, #2
   12d84:	movwne	r0, #1
   12d88:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12d8c:	orr	r0, r0, r1
   12d90:	tst	r0, #1
   12d94:	bne	12dd0 <__snprintf_chk@plt+0x1e60>
   12d98:	cmp	r8, sl
   12d9c:	movcc	r0, #39	; 0x27
   12da0:	strbcc	r0, [r5, r8]
   12da4:	add	r0, r8, #1
   12da8:	cmp	r0, sl
   12dac:	movcc	r1, #36	; 0x24
   12db0:	strbcc	r1, [r5, r0]
   12db4:	add	r0, r8, #2
   12db8:	cmp	r0, sl
   12dbc:	movcc	r1, #39	; 0x27
   12dc0:	strbcc	r1, [r5, r0]
   12dc4:	add	r8, r8, #3
   12dc8:	mov	r0, #1
   12dcc:	str	r0, [fp, #-56]	; 0xffffffc8
   12dd0:	cmp	r8, sl
   12dd4:	movcc	r0, #92	; 0x5c
   12dd8:	strbcc	r0, [r5, r8]
   12ddc:	add	r0, r8, #1
   12de0:	mov	r6, #0
   12de4:	mov	r9, #1
   12de8:	mov	r4, #48	; 0x30
   12dec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   12df0:	cmp	r1, #2
   12df4:	beq	131b8 <__snprintf_chk@plt+0x2248>
   12df8:	add	r1, r7, #1
   12dfc:	cmp	r1, lr
   12e00:	bcs	131b8 <__snprintf_chk@plt+0x2248>
   12e04:	ldrb	r1, [ip, r1]
   12e08:	sub	r1, r1, #48	; 0x30
   12e0c:	uxtb	r1, r1
   12e10:	cmp	r1, #9
   12e14:	bhi	131b8 <__snprintf_chk@plt+0x2248>
   12e18:	cmp	r0, sl
   12e1c:	movcc	r1, #48	; 0x30
   12e20:	strbcc	r1, [r5, r0]
   12e24:	add	r0, r8, #2
   12e28:	cmp	r0, sl
   12e2c:	movcc	r1, #48	; 0x30
   12e30:	strbcc	r1, [r5, r0]
   12e34:	add	r8, r8, #3
   12e38:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12e3c:	mov	r9, #0
   12e40:	mov	r4, #63	; 0x3f
   12e44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e48:	cmp	r0, #5
   12e4c:	beq	131c0 <__snprintf_chk@plt+0x2250>
   12e50:	cmp	r0, #2
   12e54:	bne	13268 <__snprintf_chk@plt+0x22f8>
   12e58:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12e5c:	tst	r0, #1
   12e60:	mov	r6, #0
   12e64:	beq	12bec <__snprintf_chk@plt+0x1c7c>
   12e68:	b	13530 <__snprintf_chk@plt+0x25c0>
   12e6c:	mov	r0, #118	; 0x76
   12e70:	b	12fd8 <__snprintf_chk@plt+0x2068>
   12e74:	mov	r4, #39	; 0x27
   12e78:	mov	r0, #1
   12e7c:	str	r0, [sp, #64]	; 0x40
   12e80:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12e84:	cmp	r0, #2
   12e88:	bne	13010 <__snprintf_chk@plt+0x20a0>
   12e8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12e90:	tst	r0, #1
   12e94:	bne	13530 <__snprintf_chk@plt+0x25c0>
   12e98:	ldr	r2, [sp, #84]	; 0x54
   12e9c:	cmp	r2, #0
   12ea0:	mov	r0, r2
   12ea4:	movwne	r0, #1
   12ea8:	clz	r1, sl
   12eac:	lsr	r1, r1, #5
   12eb0:	orrs	r0, r0, r1
   12eb4:	moveq	r2, sl
   12eb8:	str	r2, [sp, #84]	; 0x54
   12ebc:	moveq	sl, r0
   12ec0:	cmp	r8, sl
   12ec4:	movcc	r0, #39	; 0x27
   12ec8:	strbcc	r0, [r5, r8]
   12ecc:	add	r0, r8, #1
   12ed0:	cmp	r0, sl
   12ed4:	movcc	r1, #92	; 0x5c
   12ed8:	strbcc	r1, [r5, r0]
   12edc:	add	r0, r8, #2
   12ee0:	cmp	r0, sl
   12ee4:	movcc	r1, #39	; 0x27
   12ee8:	strbcc	r1, [r5, r0]
   12eec:	add	r8, r8, #3
   12ef0:	mov	r0, #0
   12ef4:	str	r0, [fp, #-56]	; 0xffffffc8
   12ef8:	mov	r9, #0
   12efc:	mov	r6, #1
   12f00:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12f04:	ldr	r0, [sp, #44]	; 0x2c
   12f08:	cmp	r0, #1
   12f0c:	bne	13018 <__snprintf_chk@plt+0x20a8>
   12f10:	str	lr, [sp, #32]
   12f14:	bl	10e80 <__ctype_b_loc@plt>
   12f18:	ldr	ip, [fp, #-80]	; 0xffffffb0
   12f1c:	ldr	r0, [r0]
   12f20:	add	r0, r0, r4, lsl #1
   12f24:	ldrb	r0, [r0, #1]
   12f28:	ubfx	r6, r0, #6, #1
   12f2c:	mov	r2, #1
   12f30:	ldr	r0, [sp, #60]	; 0x3c
   12f34:	orr	r1, r6, r0
   12f38:	cmp	r2, #1
   12f3c:	bhi	13270 <__snprintf_chk@plt+0x2300>
   12f40:	tst	r1, #1
   12f44:	beq	13270 <__snprintf_chk@plt+0x2300>
   12f48:	ldr	lr, [sp, #32]
   12f4c:	b	12bec <__snprintf_chk@plt+0x1c7c>
   12f50:	mov	r9, #0
   12f54:	mov	r0, #92	; 0x5c
   12f58:	ldr	r1, [sp, #56]	; 0x38
   12f5c:	cmp	r1, #0
   12f60:	beq	12fd8 <__snprintf_chk@plt+0x2068>
   12f64:	mov	r4, #92	; 0x5c
   12f68:	mov	r6, #0
   12f6c:	cmp	r9, #0
   12f70:	bne	12fa8 <__snprintf_chk@plt+0x2038>
   12f74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f78:	tst	r0, #1
   12f7c:	beq	12fa8 <__snprintf_chk@plt+0x2038>
   12f80:	cmp	r8, sl
   12f84:	movcc	r0, #39	; 0x27
   12f88:	strbcc	r0, [r5, r8]
   12f8c:	add	r0, r8, #1
   12f90:	cmp	r0, sl
   12f94:	movcc	r1, #39	; 0x27
   12f98:	strbcc	r1, [r5, r0]
   12f9c:	add	r8, r8, #2
   12fa0:	mov	r0, #0
   12fa4:	str	r0, [fp, #-56]	; 0xffffffc8
   12fa8:	mov	r1, r6
   12fac:	mov	r0, r4
   12fb0:	cmp	r8, sl
   12fb4:	strbcc	r0, [r5, r8]
   12fb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12fbc:	and	r0, r0, r1
   12fc0:	str	r0, [fp, #-48]	; 0xffffffd0
   12fc4:	add	r8, r8, #1
   12fc8:	add	r7, r7, #1
   12fcc:	cmn	lr, #1
   12fd0:	bne	12924 <__snprintf_chk@plt+0x19b4>
   12fd4:	b	12930 <__snprintf_chk@plt+0x19c0>
   12fd8:	mov	r9, #0
   12fdc:	ldr	r1, [sp, #92]	; 0x5c
   12fe0:	tst	r1, #1
   12fe4:	mov	r6, #0
   12fe8:	mov	r1, #0
   12fec:	beq	12bec <__snprintf_chk@plt+0x1c7c>
   12ff0:	b	12c34 <__snprintf_chk@plt+0x1cc4>
   12ff4:	mov	r4, #0
   12ff8:	ldr	r0, [sp, #40]	; 0x28
   12ffc:	cmp	r0, #0
   13000:	mov	r9, #0
   13004:	mov	r6, #0
   13008:	beq	12bec <__snprintf_chk@plt+0x1c7c>
   1300c:	b	12fc8 <__snprintf_chk@plt+0x2058>
   13010:	mov	r6, #1
   13014:	b	12bec <__snprintf_chk@plt+0x1c7c>
   13018:	mov	r0, #0
   1301c:	str	r0, [fp, #-36]	; 0xffffffdc
   13020:	str	r0, [fp, #-40]	; 0xffffffd8
   13024:	cmn	lr, #1
   13028:	bne	1303c <__snprintf_chk@plt+0x20cc>
   1302c:	mov	r0, ip
   13030:	bl	10ea4 <strlen@plt>
   13034:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13038:	mov	lr, r0
   1303c:	ldr	r0, [sp, #76]	; 0x4c
   13040:	add	r0, r0, r7
   13044:	str	r0, [sp, #24]
   13048:	mov	r6, #1
   1304c:	mov	r2, #0
   13050:	sub	r0, fp, #40	; 0x28
   13054:	mov	r3, r0
   13058:	str	r5, [sp, #28]
   1305c:	str	lr, [sp, #32]
   13060:	b	130a4 <__snprintf_chk@plt+0x2134>
   13064:	ldr	r5, [sp, #52]	; 0x34
   13068:	add	r5, r0, r5
   1306c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13070:	bl	10dcc <iswprint@plt>
   13074:	cmp	r0, #0
   13078:	movwne	r0, #1
   1307c:	and	r6, r6, r0
   13080:	sub	r0, fp, #40	; 0x28
   13084:	bl	10d90 <mbsinit@plt>
   13088:	sub	r3, fp, #40	; 0x28
   1308c:	mov	r2, r5
   13090:	ldr	lr, [sp, #32]
   13094:	cmp	r0, #0
   13098:	ldr	r5, [sp, #28]
   1309c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   130a0:	bne	12f30 <__snprintf_chk@plt+0x1fc0>
   130a4:	str	r2, [sp, #52]	; 0x34
   130a8:	add	r0, r2, r7
   130ac:	add	r1, ip, r0
   130b0:	str	r0, [sp, #48]	; 0x30
   130b4:	sub	r2, lr, r0
   130b8:	sub	r0, fp, #44	; 0x2c
   130bc:	bl	14f5c <__snprintf_chk@plt+0x3fec>
   130c0:	cmp	r0, #0
   130c4:	beq	1343c <__snprintf_chk@plt+0x24cc>
   130c8:	cmn	r0, #1
   130cc:	beq	133f8 <__snprintf_chk@plt+0x2488>
   130d0:	cmn	r0, #2
   130d4:	ldr	lr, [sp, #32]
   130d8:	beq	13400 <__snprintf_chk@plt+0x2490>
   130dc:	cmp	r0, #2
   130e0:	mov	r1, #0
   130e4:	movwcc	r1, #1
   130e8:	ldr	r2, [sp, #68]	; 0x44
   130ec:	eor	r2, r2, #1
   130f0:	orrs	r1, r2, r1
   130f4:	bne	13064 <__snprintf_chk@plt+0x20f4>
   130f8:	ldr	r1, [sp, #52]	; 0x34
   130fc:	ldr	r2, [sp, #24]
   13100:	add	r1, r2, r1
   13104:	sub	r2, r0, #1
   13108:	b	13118 <__snprintf_chk@plt+0x21a8>
   1310c:	add	r1, r1, #1
   13110:	subs	r2, r2, #1
   13114:	beq	13064 <__snprintf_chk@plt+0x20f4>
   13118:	ldrb	r3, [r1]
   1311c:	sub	r3, r3, #91	; 0x5b
   13120:	cmp	r3, #33	; 0x21
   13124:	bhi	1310c <__snprintf_chk@plt+0x219c>
   13128:	add	r5, pc, #0
   1312c:	ldr	pc, [r5, r3, lsl #2]
   13130:	andeq	r3, r1, r8, lsr #10
   13134:	andeq	r3, r1, r8, lsr #10
   13138:	andeq	r3, r1, ip, lsl #2
   1313c:	andeq	r3, r1, r8, lsr #10
   13140:	andeq	r3, r1, ip, lsl #2
   13144:	andeq	r3, r1, r8, lsr #10
   13148:	andeq	r3, r1, ip, lsl #2
   1314c:	andeq	r3, r1, ip, lsl #2
   13150:	andeq	r3, r1, ip, lsl #2
   13154:	andeq	r3, r1, ip, lsl #2
   13158:	andeq	r3, r1, ip, lsl #2
   1315c:	andeq	r3, r1, ip, lsl #2
   13160:	andeq	r3, r1, ip, lsl #2
   13164:	andeq	r3, r1, ip, lsl #2
   13168:	andeq	r3, r1, ip, lsl #2
   1316c:	andeq	r3, r1, ip, lsl #2
   13170:	andeq	r3, r1, ip, lsl #2
   13174:	andeq	r3, r1, ip, lsl #2
   13178:	andeq	r3, r1, ip, lsl #2
   1317c:	andeq	r3, r1, ip, lsl #2
   13180:	andeq	r3, r1, ip, lsl #2
   13184:	andeq	r3, r1, ip, lsl #2
   13188:	andeq	r3, r1, ip, lsl #2
   1318c:	andeq	r3, r1, ip, lsl #2
   13190:	andeq	r3, r1, ip, lsl #2
   13194:	andeq	r3, r1, ip, lsl #2
   13198:	andeq	r3, r1, ip, lsl #2
   1319c:	andeq	r3, r1, ip, lsl #2
   131a0:	andeq	r3, r1, ip, lsl #2
   131a4:	andeq	r3, r1, ip, lsl #2
   131a8:	andeq	r3, r1, ip, lsl #2
   131ac:	andeq	r3, r1, ip, lsl #2
   131b0:	andeq	r3, r1, ip, lsl #2
   131b4:	andeq	r3, r1, r8, lsr #10
   131b8:	mov	r8, r0
   131bc:	b	12bec <__snprintf_chk@plt+0x1c7c>
   131c0:	ldr	r0, [sp, #36]	; 0x24
   131c4:	cmp	r0, #0
   131c8:	beq	13268 <__snprintf_chk@plt+0x22f8>
   131cc:	add	r0, r7, #2
   131d0:	cmp	r0, lr
   131d4:	bcs	13268 <__snprintf_chk@plt+0x22f8>
   131d8:	add	r1, r7, ip
   131dc:	ldrb	r1, [r1, #1]
   131e0:	cmp	r1, #63	; 0x3f
   131e4:	bne	13268 <__snprintf_chk@plt+0x22f8>
   131e8:	ldrb	r1, [ip, r0]
   131ec:	sub	r2, r1, #33	; 0x21
   131f0:	cmp	r2, #29
   131f4:	bhi	13268 <__snprintf_chk@plt+0x22f8>
   131f8:	mov	r3, #1
   131fc:	movw	r6, #20929	; 0x51c1
   13200:	movt	r6, #14336	; 0x3800
   13204:	tst	r6, r3, lsl r2
   13208:	beq	13268 <__snprintf_chk@plt+0x22f8>
   1320c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13210:	tst	r2, #1
   13214:	bne	13530 <__snprintf_chk@plt+0x25c0>
   13218:	cmp	r8, sl
   1321c:	movcc	r2, #63	; 0x3f
   13220:	strbcc	r2, [r5, r8]
   13224:	add	r2, r8, #1
   13228:	cmp	r2, sl
   1322c:	movcc	r3, #34	; 0x22
   13230:	strbcc	r3, [r5, r2]
   13234:	add	r2, r8, #2
   13238:	cmp	r2, sl
   1323c:	movcc	r3, #34	; 0x22
   13240:	strbcc	r3, [r5, r2]
   13244:	add	r2, r8, #3
   13248:	cmp	r2, sl
   1324c:	movcc	r3, #63	; 0x3f
   13250:	strbcc	r3, [r5, r2]
   13254:	add	r8, r8, #4
   13258:	mov	r7, r0
   1325c:	mov	r4, r1
   13260:	mov	r6, #0
   13264:	b	12bec <__snprintf_chk@plt+0x1c7c>
   13268:	mov	r6, #0
   1326c:	b	12bec <__snprintf_chk@plt+0x1c7c>
   13270:	add	r0, r2, r7
   13274:	str	r0, [sp, #52]	; 0x34
   13278:	mov	r2, #0
   1327c:	ldr	lr, [sp, #32]
   13280:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13284:	str	r1, [sp, #48]	; 0x30
   13288:	tst	r1, #1
   1328c:	bne	13368 <__snprintf_chk@plt+0x23f8>
   13290:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13294:	tst	r1, #1
   13298:	bne	13530 <__snprintf_chk@plt+0x25c0>
   1329c:	mov	r3, r0
   132a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132a4:	subs	r1, r0, #2
   132a8:	movwne	r1, #1
   132ac:	orr	r1, r1, r3
   132b0:	tst	r1, #1
   132b4:	bne	132ec <__snprintf_chk@plt+0x237c>
   132b8:	cmp	r8, sl
   132bc:	movcc	r0, #39	; 0x27
   132c0:	strbcc	r0, [r5, r8]
   132c4:	add	r2, r8, #1
   132c8:	cmp	r2, sl
   132cc:	movcc	r0, #36	; 0x24
   132d0:	strbcc	r0, [r5, r2]
   132d4:	add	r2, r8, #2
   132d8:	cmp	r2, sl
   132dc:	movcc	r0, #39	; 0x27
   132e0:	strbcc	r0, [r5, r2]
   132e4:	add	r8, r8, #3
   132e8:	mov	r3, #1
   132ec:	cmp	r8, sl
   132f0:	movcc	r1, #92	; 0x5c
   132f4:	strbcc	r1, [r5, r8]
   132f8:	add	r2, r8, #1
   132fc:	cmp	r2, sl
   13300:	bcs	13314 <__snprintf_chk@plt+0x23a4>
   13304:	uxtb	r1, r4
   13308:	mov	r0, #48	; 0x30
   1330c:	orr	r1, r0, r1, lsr #6
   13310:	strb	r1, [r5, r2]
   13314:	add	r2, r8, #2
   13318:	cmp	r2, sl
   1331c:	lsrcc	r1, r4, #3
   13320:	movcc	r0, #6
   13324:	bficc	r1, r0, #3, #29
   13328:	strbcc	r1, [r5, r2]
   1332c:	mov	r0, #6
   13330:	bfi	r4, r0, #3, #29
   13334:	add	r8, r8, #3
   13338:	mov	r2, #1
   1333c:	mov	r0, r3
   13340:	b	1338c <__snprintf_chk@plt+0x241c>
   13344:	cmp	r8, sl
   13348:	strbcc	r4, [r5, r8]
   1334c:	ldr	r1, [sp, #76]	; 0x4c
   13350:	ldrb	r4, [r1, r7]
   13354:	add	r8, r8, #1
   13358:	mov	r7, r3
   1335c:	ldr	r1, [sp, #48]	; 0x30
   13360:	tst	r1, #1
   13364:	beq	13290 <__snprintf_chk@plt+0x2320>
   13368:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1336c:	tst	r1, #1
   13370:	beq	13384 <__snprintf_chk@plt+0x2414>
   13374:	cmp	r8, sl
   13378:	movcc	r1, #92	; 0x5c
   1337c:	strbcc	r1, [r5, r8]
   13380:	add	r8, r8, #1
   13384:	mov	r1, #0
   13388:	str	r1, [fp, #-52]	; 0xffffffcc
   1338c:	and	r9, r2, #1
   13390:	add	r3, r7, #1
   13394:	ldr	r1, [sp, #52]	; 0x34
   13398:	cmp	r1, r3
   1339c:	bls	133e0 <__snprintf_chk@plt+0x2470>
   133a0:	cmp	r9, #0
   133a4:	movwne	r9, #1
   133a8:	mvn	r1, r0
   133ac:	orr	r1, r1, r9
   133b0:	tst	r1, #1
   133b4:	bne	13344 <__snprintf_chk@plt+0x23d4>
   133b8:	cmp	r8, sl
   133bc:	movcc	r1, #39	; 0x27
   133c0:	strbcc	r1, [r5, r8]
   133c4:	add	r1, r8, #1
   133c8:	cmp	r1, sl
   133cc:	movcc	r0, #39	; 0x27
   133d0:	strbcc	r0, [r5, r1]
   133d4:	add	r8, r8, #2
   133d8:	mov	r0, #0
   133dc:	b	13344 <__snprintf_chk@plt+0x23d4>
   133e0:	str	r0, [fp, #-56]	; 0xffffffc8
   133e4:	cmp	r9, #0
   133e8:	movwne	r9, #1
   133ec:	cmp	r9, #0
   133f0:	beq	12f74 <__snprintf_chk@plt+0x2004>
   133f4:	b	12fa8 <__snprintf_chk@plt+0x2038>
   133f8:	mov	r6, #0
   133fc:	b	1343c <__snprintf_chk@plt+0x24cc>
   13400:	mov	r6, #0
   13404:	ldr	r0, [sp, #48]	; 0x30
   13408:	cmp	r0, lr
   1340c:	bcs	1343c <__snprintf_chk@plt+0x24cc>
   13410:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13414:	add	r0, ip, r7
   13418:	ldr	r2, [sp, #52]	; 0x34
   1341c:	ldrb	r1, [r0, r2]
   13420:	cmp	r1, #0
   13424:	beq	12f30 <__snprintf_chk@plt+0x1fc0>
   13428:	add	r2, r2, #1
   1342c:	add	r1, r7, r2
   13430:	cmp	r1, lr
   13434:	bcc	1341c <__snprintf_chk@plt+0x24ac>
   13438:	b	12f30 <__snprintf_chk@plt+0x1fc0>
   1343c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13440:	ldr	r2, [sp, #52]	; 0x34
   13444:	b	12f30 <__snprintf_chk@plt+0x1fc0>
   13448:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1344c:	eor	r0, r1, #2
   13450:	orr	r0, r0, r8
   13454:	clz	r0, r0
   13458:	lsr	r0, r0, #5
   1345c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13460:	tst	r3, r0
   13464:	bne	13530 <__snprintf_chk@plt+0x25c0>
   13468:	mov	r6, r5
   1346c:	subs	r0, r1, #2
   13470:	movwne	r0, #1
   13474:	orr	r0, r3, r0
   13478:	tst	r0, #1
   1347c:	ldr	r2, [sp, #92]	; 0x5c
   13480:	ldreq	r0, [sp, #64]	; 0x40
   13484:	eoreq	r0, r0, #1
   13488:	tsteq	r0, #1
   1348c:	bne	134cc <__snprintf_chk@plt+0x255c>
   13490:	mov	r9, lr
   13494:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13498:	tst	r0, #1
   1349c:	bne	13598 <__snprintf_chk@plt+0x2628>
   134a0:	ldr	r0, [sp, #84]	; 0x54
   134a4:	cmp	r0, #0
   134a8:	beq	134cc <__snprintf_chk@plt+0x255c>
   134ac:	mov	r0, #0
   134b0:	str	r0, [fp, #-48]	; 0xffffffd0
   134b4:	mov	r1, #2
   134b8:	cmp	sl, #0
   134bc:	mov	r0, r2
   134c0:	mov	r4, r3
   134c4:	ldr	r7, [sp, #84]	; 0x54
   134c8:	beq	126a4 <__snprintf_chk@plt+0x1734>
   134cc:	ldr	r1, [fp, #-84]	; 0xffffffac
   134d0:	clz	r0, r1
   134d4:	lsr	r0, r0, #5
   134d8:	orr	r0, r0, r3
   134dc:	tst	r0, #1
   134e0:	bne	1350c <__snprintf_chk@plt+0x259c>
   134e4:	ldrb	r0, [r1]
   134e8:	cmp	r0, #0
   134ec:	beq	1350c <__snprintf_chk@plt+0x259c>
   134f0:	add	r1, r1, #1
   134f4:	cmp	r8, sl
   134f8:	strbcc	r0, [r6, r8]
   134fc:	add	r8, r8, #1
   13500:	ldrb	r0, [r1], #1
   13504:	cmp	r0, #0
   13508:	bne	134f4 <__snprintf_chk@plt+0x2584>
   1350c:	cmp	r8, sl
   13510:	movcc	r0, #0
   13514:	strbcc	r0, [r6, r8]
   13518:	b	1358c <__snprintf_chk@plt+0x261c>
   1351c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13520:	mov	lr, r4
   13524:	b	13530 <__snprintf_chk@plt+0x25c0>
   13528:	ldr	r5, [sp, #28]
   1352c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13530:	mov	r0, #0
   13534:	ldr	r1, [fp, #12]
   13538:	bic	r1, r1, #2
   1353c:	mov	r2, #2
   13540:	ldr	r3, [sp, #92]	; 0x5c
   13544:	tst	r3, #1
   13548:	movwne	r2, #4
   1354c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13550:	cmp	r3, #2
   13554:	movne	r2, r3
   13558:	str	r2, [sp]
   1355c:	str	r1, [sp, #4]
   13560:	str	r0, [sp, #8]
   13564:	ldr	r0, [sp, #80]	; 0x50
   13568:	str	r0, [sp, #12]
   1356c:	ldr	r0, [sp, #88]	; 0x58
   13570:	str	r0, [sp, #16]
   13574:	mov	r0, r5
   13578:	mov	r1, sl
   1357c:	mov	r2, ip
   13580:	mov	r3, lr
   13584:	bl	12618 <__snprintf_chk@plt+0x16a8>
   13588:	mov	r8, r0
   1358c:	mov	r0, r8
   13590:	sub	sp, fp, #28
   13594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13598:	mov	r0, #5
   1359c:	str	r0, [sp]
   135a0:	ldr	r0, [fp, #12]
   135a4:	str	r0, [sp, #4]
   135a8:	ldr	r0, [fp, #16]
   135ac:	str	r0, [sp, #8]
   135b0:	ldr	r0, [sp, #80]	; 0x50
   135b4:	str	r0, [sp, #12]
   135b8:	ldr	r0, [sp, #88]	; 0x58
   135bc:	str	r0, [sp, #16]
   135c0:	mov	r0, r6
   135c4:	ldr	r1, [sp, #84]	; 0x54
   135c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   135cc:	mov	r3, r9
   135d0:	b	13584 <__snprintf_chk@plt+0x2614>
   135d4:	bl	10f64 <abort@plt>
   135d8:	mov	r3, r2
   135dc:	mov	r2, #0
   135e0:	b	135e4 <__snprintf_chk@plt+0x2674>
   135e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135e8:	add	fp, sp, #28
   135ec:	sub	sp, sp, #36	; 0x24
   135f0:	mov	r4, r2
   135f4:	str	r2, [sp, #24]
   135f8:	mov	r5, r1
   135fc:	mov	r6, r0
   13600:	str	r0, [sp, #20]
   13604:	movw	r8, #24912	; 0x6150
   13608:	movt	r8, #2
   1360c:	cmp	r3, #0
   13610:	movne	r8, r3
   13614:	bl	10eb0 <__errno_location@plt>
   13618:	str	r0, [sp, #28]
   1361c:	ldm	r8, {r3, r9}
   13620:	ldr	r1, [r8, #40]	; 0x28
   13624:	ldr	r2, [r8, #44]	; 0x2c
   13628:	ldr	r7, [r0]
   1362c:	str	r7, [sp, #32]
   13630:	add	sl, r8, #8
   13634:	cmp	r4, #0
   13638:	orreq	r9, r9, #1
   1363c:	stm	sp, {r3, r9, sl}
   13640:	str	r1, [sp, #12]
   13644:	str	r2, [sp, #16]
   13648:	mov	r0, #0
   1364c:	mov	r1, #0
   13650:	mov	r2, r6
   13654:	mov	r3, r5
   13658:	mov	r7, r5
   1365c:	bl	12618 <__snprintf_chk@plt+0x16a8>
   13660:	mov	r5, r0
   13664:	add	r4, r0, #1
   13668:	mov	r0, r4
   1366c:	bl	144ec <__snprintf_chk@plt+0x357c>
   13670:	mov	r6, r0
   13674:	ldr	r0, [r8]
   13678:	ldr	r1, [r8, #40]	; 0x28
   1367c:	ldr	r2, [r8, #44]	; 0x2c
   13680:	stm	sp, {r0, r9, sl}
   13684:	str	r1, [sp, #12]
   13688:	str	r2, [sp, #16]
   1368c:	mov	r0, r6
   13690:	mov	r1, r4
   13694:	ldr	r2, [sp, #20]
   13698:	mov	r3, r7
   1369c:	bl	12618 <__snprintf_chk@plt+0x16a8>
   136a0:	ldr	r0, [sp, #24]
   136a4:	ldr	r1, [sp, #32]
   136a8:	ldr	r2, [sp, #28]
   136ac:	str	r1, [r2]
   136b0:	cmp	r0, #0
   136b4:	strne	r5, [r0]
   136b8:	mov	r0, r6
   136bc:	sub	sp, fp, #28
   136c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   136c8:	add	fp, sp, #24
   136cc:	movw	r8, #24800	; 0x60e0
   136d0:	movt	r8, #2
   136d4:	ldr	r4, [r8]
   136d8:	movw	r5, #24804	; 0x60e4
   136dc:	movt	r5, #2
   136e0:	ldr	r0, [r5]
   136e4:	cmp	r0, #2
   136e8:	blt	13714 <__snprintf_chk@plt+0x27a4>
   136ec:	add	r7, r4, #12
   136f0:	mov	r6, #0
   136f4:	ldr	r0, [r7, r6, lsl #3]
   136f8:	bl	14e04 <__snprintf_chk@plt+0x3e94>
   136fc:	add	r0, r6, #1
   13700:	ldr	r1, [r5]
   13704:	add	r2, r6, #2
   13708:	cmp	r2, r1
   1370c:	mov	r6, r0
   13710:	blt	136f4 <__snprintf_chk@plt+0x2784>
   13714:	ldr	r0, [r4, #4]
   13718:	movw	r9, #24960	; 0x6180
   1371c:	movt	r9, #2
   13720:	cmp	r0, r9
   13724:	movw	r7, #24808	; 0x60e8
   13728:	movt	r7, #2
   1372c:	beq	1373c <__snprintf_chk@plt+0x27cc>
   13730:	bl	14e04 <__snprintf_chk@plt+0x3e94>
   13734:	mov	r0, #256	; 0x100
   13738:	stm	r7, {r0, r9}
   1373c:	cmp	r4, r7
   13740:	beq	13750 <__snprintf_chk@plt+0x27e0>
   13744:	mov	r0, r4
   13748:	bl	14e04 <__snprintf_chk@plt+0x3e94>
   1374c:	str	r7, [r8]
   13750:	mov	r0, #1
   13754:	str	r0, [r5]
   13758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1375c:	movw	r3, #24912	; 0x6150
   13760:	movt	r3, #2
   13764:	mvn	r2, #0
   13768:	b	1376c <__snprintf_chk@plt+0x27fc>
   1376c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13770:	add	fp, sp, #28
   13774:	sub	sp, sp, #44	; 0x2c
   13778:	mov	r7, r3
   1377c:	str	r2, [sp, #36]	; 0x24
   13780:	str	r1, [sp, #32]
   13784:	mov	r5, r0
   13788:	bl	10eb0 <__errno_location@plt>
   1378c:	cmp	r5, #0
   13790:	bmi	13900 <__snprintf_chk@plt+0x2990>
   13794:	cmn	r5, #-2147483647	; 0x80000001
   13798:	beq	13900 <__snprintf_chk@plt+0x2990>
   1379c:	movw	r4, #24800	; 0x60e0
   137a0:	movt	r4, #2
   137a4:	ldr	r6, [r4]
   137a8:	str	r0, [sp, #28]
   137ac:	ldr	r0, [r0]
   137b0:	str	r0, [sp, #24]
   137b4:	movw	r8, #24804	; 0x60e4
   137b8:	movt	r8, #2
   137bc:	ldr	r1, [r8]
   137c0:	cmp	r1, r5
   137c4:	ble	137d0 <__snprintf_chk@plt+0x2860>
   137c8:	mov	sl, r6
   137cc:	b	1383c <__snprintf_chk@plt+0x28cc>
   137d0:	str	r1, [fp, #-32]	; 0xffffffe0
   137d4:	mov	r0, #8
   137d8:	str	r0, [sp]
   137dc:	movw	r9, #24808	; 0x60e8
   137e0:	movt	r9, #2
   137e4:	subs	r0, r6, r9
   137e8:	movne	r0, r6
   137ec:	sub	r1, r5, r1
   137f0:	add	r2, r1, #1
   137f4:	sub	r1, fp, #32
   137f8:	mvn	r3, #-2147483648	; 0x80000000
   137fc:	bl	145c8 <__snprintf_chk@plt+0x3658>
   13800:	mov	sl, r0
   13804:	str	r0, [r4]
   13808:	cmp	r6, r9
   1380c:	bne	13818 <__snprintf_chk@plt+0x28a8>
   13810:	ldrd	r0, [r9]
   13814:	stm	sl, {r0, r1}
   13818:	ldr	r1, [r8]
   1381c:	add	r0, sl, r1, lsl #3
   13820:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13824:	sub	r1, r2, r1
   13828:	lsl	r2, r1, #3
   1382c:	mov	r1, #0
   13830:	bl	10ed4 <memset@plt>
   13834:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13838:	str	r0, [r8]
   1383c:	mov	r9, sl
   13840:	ldr	r6, [r9, r5, lsl #3]!
   13844:	ldr	r4, [r9, #4]!
   13848:	ldm	r7, {r0, r1}
   1384c:	ldr	r2, [r7, #40]	; 0x28
   13850:	ldr	r3, [r7, #44]	; 0x2c
   13854:	orr	r8, r1, #1
   13858:	add	r1, r7, #8
   1385c:	stm	sp, {r0, r8}
   13860:	str	r1, [sp, #20]
   13864:	add	r0, sp, #8
   13868:	stm	r0, {r1, r2, r3}
   1386c:	mov	r0, r4
   13870:	mov	r1, r6
   13874:	ldr	r2, [sp, #32]
   13878:	ldr	r3, [sp, #36]	; 0x24
   1387c:	bl	12618 <__snprintf_chk@plt+0x16a8>
   13880:	cmp	r6, r0
   13884:	bhi	138e8 <__snprintf_chk@plt+0x2978>
   13888:	add	r6, r0, #1
   1388c:	str	r6, [sl, r5, lsl #3]
   13890:	movw	r0, #24960	; 0x6180
   13894:	movt	r0, #2
   13898:	cmp	r4, r0
   1389c:	beq	138a8 <__snprintf_chk@plt+0x2938>
   138a0:	mov	r0, r4
   138a4:	bl	14e04 <__snprintf_chk@plt+0x3e94>
   138a8:	mov	r0, r6
   138ac:	bl	144ec <__snprintf_chk@plt+0x357c>
   138b0:	mov	r4, r0
   138b4:	str	r0, [r9]
   138b8:	ldr	r0, [r7]
   138bc:	ldr	r1, [r7, #40]	; 0x28
   138c0:	ldr	r2, [r7, #44]	; 0x2c
   138c4:	stm	sp, {r0, r8}
   138c8:	ldr	r0, [sp, #20]
   138cc:	add	r3, sp, #8
   138d0:	stm	r3, {r0, r1, r2}
   138d4:	mov	r0, r4
   138d8:	mov	r1, r6
   138dc:	ldr	r2, [sp, #32]
   138e0:	ldr	r3, [sp, #36]	; 0x24
   138e4:	bl	12618 <__snprintf_chk@plt+0x16a8>
   138e8:	ldr	r0, [sp, #28]
   138ec:	ldr	r1, [sp, #24]
   138f0:	str	r1, [r0]
   138f4:	mov	r0, r4
   138f8:	sub	sp, fp, #28
   138fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13900:	bl	10f64 <abort@plt>
   13904:	movw	r3, #24912	; 0x6150
   13908:	movt	r3, #2
   1390c:	b	1376c <__snprintf_chk@plt+0x27fc>
   13910:	mov	r1, r0
   13914:	mov	r0, #0
   13918:	b	1375c <__snprintf_chk@plt+0x27ec>
   1391c:	mov	r2, r1
   13920:	mov	r1, r0
   13924:	mov	r0, #0
   13928:	b	13904 <__snprintf_chk@plt+0x2994>
   1392c:	push	{r4, r5, r6, sl, fp, lr}
   13930:	add	fp, sp, #16
   13934:	sub	sp, sp, #48	; 0x30
   13938:	mov	r4, r2
   1393c:	mov	r5, r0
   13940:	mov	r6, sp
   13944:	mov	r0, r6
   13948:	bl	13968 <__snprintf_chk@plt+0x29f8>
   1394c:	mov	r0, r5
   13950:	mov	r1, r4
   13954:	mvn	r2, #0
   13958:	mov	r3, r6
   1395c:	bl	1376c <__snprintf_chk@plt+0x27fc>
   13960:	sub	sp, fp, #16
   13964:	pop	{r4, r5, r6, sl, fp, pc}
   13968:	push	{fp, lr}
   1396c:	mov	fp, sp
   13970:	vmov.i32	q8, #0	; 0x00000000
   13974:	mov	r2, #32
   13978:	mov	r3, r0
   1397c:	vst1.32	{d16-d17}, [r3], r2
   13980:	vst1.32	{d16-d17}, [r3]
   13984:	add	r2, r0, #16
   13988:	vst1.32	{d16-d17}, [r2]
   1398c:	cmp	r1, #10
   13990:	strne	r1, [r0]
   13994:	popne	{fp, pc}
   13998:	bl	10f64 <abort@plt>
   1399c:	push	{r4, r5, r6, r7, fp, lr}
   139a0:	add	fp, sp, #16
   139a4:	sub	sp, sp, #48	; 0x30
   139a8:	mov	r4, r3
   139ac:	mov	r5, r2
   139b0:	mov	r6, r0
   139b4:	mov	r7, sp
   139b8:	mov	r0, r7
   139bc:	bl	13968 <__snprintf_chk@plt+0x29f8>
   139c0:	mov	r0, r6
   139c4:	mov	r1, r5
   139c8:	mov	r2, r4
   139cc:	mov	r3, r7
   139d0:	bl	1376c <__snprintf_chk@plt+0x27fc>
   139d4:	sub	sp, fp, #16
   139d8:	pop	{r4, r5, r6, r7, fp, pc}
   139dc:	mov	r2, r1
   139e0:	mov	r1, r0
   139e4:	mov	r0, #0
   139e8:	b	1392c <__snprintf_chk@plt+0x29bc>
   139ec:	mov	r3, r2
   139f0:	mov	r2, r1
   139f4:	mov	r1, r0
   139f8:	mov	r0, #0
   139fc:	b	1399c <__snprintf_chk@plt+0x2a2c>
   13a00:	push	{r4, r5, r6, sl, fp, lr}
   13a04:	add	fp, sp, #16
   13a08:	sub	sp, sp, #48	; 0x30
   13a0c:	mov	r4, r1
   13a10:	mov	r5, r0
   13a14:	movw	r0, #24912	; 0x6150
   13a18:	movt	r0, #2
   13a1c:	add	r1, r0, #16
   13a20:	mov	r3, #32
   13a24:	vld1.64	{d16-d17}, [r0], r3
   13a28:	vld1.64	{d18-d19}, [r1]
   13a2c:	mov	r6, sp
   13a30:	add	r1, r6, #16
   13a34:	vld1.64	{d20-d21}, [r0]
   13a38:	vst1.64	{d18-d19}, [r1]
   13a3c:	mov	r0, r6
   13a40:	vst1.64	{d16-d17}, [r0], r3
   13a44:	vst1.64	{d20-d21}, [r0]
   13a48:	mov	r0, r6
   13a4c:	mov	r1, r2
   13a50:	mov	r2, #1
   13a54:	bl	1250c <__snprintf_chk@plt+0x159c>
   13a58:	mov	r0, #0
   13a5c:	mov	r1, r5
   13a60:	mov	r2, r4
   13a64:	mov	r3, r6
   13a68:	bl	1376c <__snprintf_chk@plt+0x27fc>
   13a6c:	sub	sp, fp, #16
   13a70:	pop	{r4, r5, r6, sl, fp, pc}
   13a74:	mov	r2, r1
   13a78:	mvn	r1, #0
   13a7c:	b	13a00 <__snprintf_chk@plt+0x2a90>
   13a80:	mov	r1, #58	; 0x3a
   13a84:	b	13a74 <__snprintf_chk@plt+0x2b04>
   13a88:	mov	r2, #58	; 0x3a
   13a8c:	b	13a00 <__snprintf_chk@plt+0x2a90>
   13a90:	push	{r4, r5, r6, sl, fp, lr}
   13a94:	add	fp, sp, #16
   13a98:	sub	sp, sp, #48	; 0x30
   13a9c:	mov	r4, r2
   13aa0:	mov	r5, r0
   13aa4:	mov	r6, sp
   13aa8:	mov	r0, r6
   13aac:	bl	13968 <__snprintf_chk@plt+0x29f8>
   13ab0:	mov	r0, r6
   13ab4:	mov	r1, #58	; 0x3a
   13ab8:	mov	r2, #1
   13abc:	bl	1250c <__snprintf_chk@plt+0x159c>
   13ac0:	mov	r0, r5
   13ac4:	mov	r1, r4
   13ac8:	mvn	r2, #0
   13acc:	mov	r3, r6
   13ad0:	bl	1376c <__snprintf_chk@plt+0x27fc>
   13ad4:	sub	sp, fp, #16
   13ad8:	pop	{r4, r5, r6, sl, fp, pc}
   13adc:	push	{fp, lr}
   13ae0:	mov	fp, sp
   13ae4:	sub	sp, sp, #8
   13ae8:	mvn	ip, #0
   13aec:	str	ip, [sp]
   13af0:	bl	13afc <__snprintf_chk@plt+0x2b8c>
   13af4:	mov	sp, fp
   13af8:	pop	{fp, pc}
   13afc:	push	{r4, r5, r6, r7, fp, lr}
   13b00:	add	fp, sp, #16
   13b04:	sub	sp, sp, #48	; 0x30
   13b08:	mov	r7, r3
   13b0c:	mov	r5, r0
   13b10:	movw	r0, #24912	; 0x6150
   13b14:	movt	r0, #2
   13b18:	add	r3, r0, #16
   13b1c:	mov	r4, #32
   13b20:	vld1.64	{d16-d17}, [r0], r4
   13b24:	vld1.64	{d18-d19}, [r3]
   13b28:	mov	r6, sp
   13b2c:	add	r3, r6, #16
   13b30:	vld1.64	{d20-d21}, [r0]
   13b34:	vst1.64	{d18-d19}, [r3]
   13b38:	mov	r0, r6
   13b3c:	vst1.64	{d16-d17}, [r0], r4
   13b40:	vst1.64	{d20-d21}, [r0]
   13b44:	mov	r0, r6
   13b48:	bl	12564 <__snprintf_chk@plt+0x15f4>
   13b4c:	ldr	r2, [fp, #8]
   13b50:	mov	r0, r5
   13b54:	mov	r1, r7
   13b58:	mov	r3, r6
   13b5c:	bl	1376c <__snprintf_chk@plt+0x27fc>
   13b60:	sub	sp, fp, #16
   13b64:	pop	{r4, r5, r6, r7, fp, pc}
   13b68:	mov	r3, r2
   13b6c:	mov	r2, r1
   13b70:	mov	r1, r0
   13b74:	mov	r0, #0
   13b78:	b	13adc <__snprintf_chk@plt+0x2b6c>
   13b7c:	push	{fp, lr}
   13b80:	mov	fp, sp
   13b84:	sub	sp, sp, #8
   13b88:	mov	ip, r2
   13b8c:	mov	r2, r1
   13b90:	mov	r1, r0
   13b94:	str	r3, [sp]
   13b98:	mov	r0, #0
   13b9c:	mov	r3, ip
   13ba0:	bl	13afc <__snprintf_chk@plt+0x2b8c>
   13ba4:	mov	sp, fp
   13ba8:	pop	{fp, pc}
   13bac:	movw	r3, #24816	; 0x60f0
   13bb0:	movt	r3, #2
   13bb4:	b	1376c <__snprintf_chk@plt+0x27fc>
   13bb8:	mov	r2, r1
   13bbc:	mov	r1, r0
   13bc0:	mov	r0, #0
   13bc4:	b	13bac <__snprintf_chk@plt+0x2c3c>
   13bc8:	mvn	r2, #0
   13bcc:	b	13bac <__snprintf_chk@plt+0x2c3c>
   13bd0:	mov	r1, r0
   13bd4:	mov	r0, #0
   13bd8:	b	13bc8 <__snprintf_chk@plt+0x2c58>
   13bdc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13be0:	add	fp, sp, #24
   13be4:	sub	sp, sp, #16
   13be8:	mov	r4, r1
   13bec:	mov	r5, r0
   13bf0:	mov	r7, #0
   13bf4:	mov	r0, #0
   13bf8:	mov	r1, r5
   13bfc:	mov	r2, #5
   13c00:	bl	10da8 <dcgettext@plt>
   13c04:	cmp	r0, r5
   13c08:	beq	13c14 <__snprintf_chk@plt+0x2ca4>
   13c0c:	sub	sp, fp, #24
   13c10:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13c14:	bl	14f24 <__snprintf_chk@plt+0x3fb4>
   13c18:	mov	r6, r0
   13c1c:	mov	r8, #56	; 0x38
   13c20:	mov	r0, #45	; 0x2d
   13c24:	stm	sp, {r0, r8}
   13c28:	str	r7, [sp, #8]
   13c2c:	str	r7, [sp, #12]
   13c30:	mov	r0, r6
   13c34:	mov	r1, #85	; 0x55
   13c38:	mov	r2, #84	; 0x54
   13c3c:	mov	r3, #70	; 0x46
   13c40:	bl	13cd8 <__snprintf_chk@plt+0x2d68>
   13c44:	cmp	r0, #0
   13c48:	beq	13c64 <__snprintf_chk@plt+0x2cf4>
   13c4c:	ldrb	r1, [r5]
   13c50:	movw	r2, #22468	; 0x57c4
   13c54:	movt	r2, #1
   13c58:	movw	r0, #22472	; 0x57c8
   13c5c:	movt	r0, #1
   13c60:	b	13ca8 <__snprintf_chk@plt+0x2d38>
   13c64:	mov	r0, #48	; 0x30
   13c68:	mov	r1, #51	; 0x33
   13c6c:	str	r8, [sp]
   13c70:	stmib	sp, {r0, r1}
   13c74:	str	r0, [sp, #12]
   13c78:	mov	r0, r6
   13c7c:	mov	r1, #71	; 0x47
   13c80:	mov	r2, #66	; 0x42
   13c84:	mov	r3, #49	; 0x31
   13c88:	bl	13cd8 <__snprintf_chk@plt+0x2d68>
   13c8c:	cmp	r0, #0
   13c90:	beq	13cb8 <__snprintf_chk@plt+0x2d48>
   13c94:	ldrb	r1, [r5]
   13c98:	movw	r2, #22476	; 0x57cc
   13c9c:	movt	r2, #1
   13ca0:	movw	r0, #22480	; 0x57d0
   13ca4:	movt	r0, #1
   13ca8:	cmp	r1, #96	; 0x60
   13cac:	moveq	r0, r2
   13cb0:	sub	sp, fp, #24
   13cb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13cb8:	movw	r1, #22462	; 0x57be
   13cbc:	movt	r1, #1
   13cc0:	movw	r0, #22466	; 0x57c2
   13cc4:	movt	r0, #1
   13cc8:	cmp	r4, #9
   13ccc:	moveq	r0, r1
   13cd0:	sub	sp, fp, #24
   13cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13cd8:	push	{r4, r5, r6, r7, fp, lr}
   13cdc:	add	fp, sp, #16
   13ce0:	sub	sp, sp, #16
   13ce4:	mov	r4, r3
   13ce8:	mov	r5, r2
   13cec:	mov	r7, r1
   13cf0:	mov	r6, r0
   13cf4:	mov	r0, r1
   13cf8:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13cfc:	ldrb	r1, [r6]
   13d00:	cmp	r0, #0
   13d04:	andne	r1, r1, #223	; 0xdf
   13d08:	mov	r0, #0
   13d0c:	cmp	r1, r7
   13d10:	bne	13d48 <__snprintf_chk@plt+0x2dd8>
   13d14:	cmp	r7, #0
   13d18:	beq	13d50 <__snprintf_chk@plt+0x2de0>
   13d1c:	ldr	r0, [fp, #20]
   13d20:	ldr	r1, [fp, #16]
   13d24:	ldr	r2, [fp, #12]
   13d28:	ldr	r3, [fp, #8]
   13d2c:	str	r2, [sp]
   13d30:	str	r1, [sp, #4]
   13d34:	str	r0, [sp, #8]
   13d38:	mov	r0, r6
   13d3c:	mov	r1, r5
   13d40:	mov	r2, r4
   13d44:	bl	13d5c <__snprintf_chk@plt+0x2dec>
   13d48:	sub	sp, fp, #16
   13d4c:	pop	{r4, r5, r6, r7, fp, pc}
   13d50:	mov	r0, #1
   13d54:	sub	sp, fp, #16
   13d58:	pop	{r4, r5, r6, r7, fp, pc}
   13d5c:	push	{r4, r5, r6, r7, fp, lr}
   13d60:	add	fp, sp, #16
   13d64:	sub	sp, sp, #8
   13d68:	mov	r4, r3
   13d6c:	mov	r5, r2
   13d70:	mov	r7, r1
   13d74:	mov	r6, r0
   13d78:	mov	r0, r1
   13d7c:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13d80:	ldrb	r1, [r6, #1]
   13d84:	cmp	r0, #0
   13d88:	andne	r1, r1, #223	; 0xdf
   13d8c:	mov	r0, #0
   13d90:	cmp	r1, r7
   13d94:	bne	13dc4 <__snprintf_chk@plt+0x2e54>
   13d98:	cmp	r7, #0
   13d9c:	beq	13dcc <__snprintf_chk@plt+0x2e5c>
   13da0:	ldr	r0, [fp, #16]
   13da4:	ldr	r1, [fp, #12]
   13da8:	ldr	r3, [fp, #8]
   13dac:	str	r1, [sp]
   13db0:	str	r0, [sp, #4]
   13db4:	mov	r0, r6
   13db8:	mov	r1, r5
   13dbc:	mov	r2, r4
   13dc0:	bl	13dd8 <__snprintf_chk@plt+0x2e68>
   13dc4:	sub	sp, fp, #16
   13dc8:	pop	{r4, r5, r6, r7, fp, pc}
   13dcc:	mov	r0, #1
   13dd0:	sub	sp, fp, #16
   13dd4:	pop	{r4, r5, r6, r7, fp, pc}
   13dd8:	push	{r4, r5, r6, r7, fp, lr}
   13ddc:	add	fp, sp, #16
   13de0:	sub	sp, sp, #8
   13de4:	mov	r4, r3
   13de8:	mov	r5, r2
   13dec:	mov	r7, r1
   13df0:	mov	r6, r0
   13df4:	mov	r0, r1
   13df8:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13dfc:	ldrb	r1, [r6, #2]
   13e00:	cmp	r0, #0
   13e04:	andne	r1, r1, #223	; 0xdf
   13e08:	mov	r0, #0
   13e0c:	cmp	r1, r7
   13e10:	bne	13e38 <__snprintf_chk@plt+0x2ec8>
   13e14:	cmp	r7, #0
   13e18:	beq	13e40 <__snprintf_chk@plt+0x2ed0>
   13e1c:	ldr	r0, [fp, #12]
   13e20:	ldr	r3, [fp, #8]
   13e24:	str	r0, [sp]
   13e28:	mov	r0, r6
   13e2c:	mov	r1, r5
   13e30:	mov	r2, r4
   13e34:	bl	13e4c <__snprintf_chk@plt+0x2edc>
   13e38:	sub	sp, fp, #16
   13e3c:	pop	{r4, r5, r6, r7, fp, pc}
   13e40:	mov	r0, #1
   13e44:	sub	sp, fp, #16
   13e48:	pop	{r4, r5, r6, r7, fp, pc}
   13e4c:	push	{r4, r5, r6, r7, fp, lr}
   13e50:	add	fp, sp, #16
   13e54:	mov	r4, r3
   13e58:	mov	r5, r2
   13e5c:	mov	r7, r1
   13e60:	mov	r6, r0
   13e64:	mov	r0, r1
   13e68:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13e6c:	ldrb	r1, [r6, #3]
   13e70:	ldr	r3, [fp, #8]
   13e74:	cmp	r0, #0
   13e78:	andne	r1, r1, #223	; 0xdf
   13e7c:	mov	r0, #0
   13e80:	cmp	r1, r7
   13e84:	bne	13ea8 <__snprintf_chk@plt+0x2f38>
   13e88:	cmp	r7, #0
   13e8c:	beq	13ea4 <__snprintf_chk@plt+0x2f34>
   13e90:	mov	r0, r6
   13e94:	mov	r1, r5
   13e98:	mov	r2, r4
   13e9c:	pop	{r4, r5, r6, r7, fp, lr}
   13ea0:	b	13eac <__snprintf_chk@plt+0x2f3c>
   13ea4:	mov	r0, #1
   13ea8:	pop	{r4, r5, r6, r7, fp, pc}
   13eac:	push	{r4, r5, r6, r7, fp, lr}
   13eb0:	add	fp, sp, #16
   13eb4:	mov	r4, r3
   13eb8:	mov	r5, r2
   13ebc:	mov	r7, r1
   13ec0:	mov	r6, r0
   13ec4:	mov	r0, r1
   13ec8:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13ecc:	ldrb	r1, [r6, #4]
   13ed0:	cmp	r0, #0
   13ed4:	andne	r1, r1, #223	; 0xdf
   13ed8:	mov	r0, #0
   13edc:	cmp	r1, r7
   13ee0:	bne	13f04 <__snprintf_chk@plt+0x2f94>
   13ee4:	cmp	r7, #0
   13ee8:	beq	13f00 <__snprintf_chk@plt+0x2f90>
   13eec:	mov	r0, r6
   13ef0:	mov	r1, r5
   13ef4:	mov	r2, r4
   13ef8:	pop	{r4, r5, r6, r7, fp, lr}
   13efc:	b	13f08 <__snprintf_chk@plt+0x2f98>
   13f00:	mov	r0, #1
   13f04:	pop	{r4, r5, r6, r7, fp, pc}
   13f08:	push	{r4, r5, r6, sl, fp, lr}
   13f0c:	add	fp, sp, #16
   13f10:	mov	r4, r2
   13f14:	mov	r6, r1
   13f18:	mov	r5, r0
   13f1c:	mov	r0, r1
   13f20:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13f24:	ldrb	r1, [r5, #5]
   13f28:	cmp	r0, #0
   13f2c:	andne	r1, r1, #223	; 0xdf
   13f30:	mov	r0, #0
   13f34:	cmp	r1, r6
   13f38:	bne	13f58 <__snprintf_chk@plt+0x2fe8>
   13f3c:	cmp	r6, #0
   13f40:	beq	13f54 <__snprintf_chk@plt+0x2fe4>
   13f44:	mov	r0, r5
   13f48:	mov	r1, r4
   13f4c:	pop	{r4, r5, r6, sl, fp, lr}
   13f50:	b	13f5c <__snprintf_chk@plt+0x2fec>
   13f54:	mov	r0, #1
   13f58:	pop	{r4, r5, r6, sl, fp, pc}
   13f5c:	push	{r4, r5, fp, lr}
   13f60:	add	fp, sp, #8
   13f64:	mov	r5, r1
   13f68:	mov	r4, r0
   13f6c:	mov	r0, r1
   13f70:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13f74:	ldrb	r1, [r4, #6]
   13f78:	cmp	r0, #0
   13f7c:	andne	r1, r1, #223	; 0xdf
   13f80:	mov	r0, #0
   13f84:	cmp	r1, r5
   13f88:	popne	{r4, r5, fp, pc}
   13f8c:	cmp	r5, #0
   13f90:	beq	13fa0 <__snprintf_chk@plt+0x3030>
   13f94:	mov	r0, r4
   13f98:	pop	{r4, r5, fp, lr}
   13f9c:	b	13fa8 <__snprintf_chk@plt+0x3038>
   13fa0:	mov	r0, #1
   13fa4:	pop	{r4, r5, fp, pc}
   13fa8:	push	{r4, sl, fp, lr}
   13fac:	add	fp, sp, #8
   13fb0:	mov	r4, r0
   13fb4:	mov	r0, #0
   13fb8:	bl	14c08 <__snprintf_chk@plt+0x3c98>
   13fbc:	ldrb	r1, [r4, #7]
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fd8 <__snprintf_chk@plt+0x3068>
   13fc8:	tst	r1, #223	; 0xdf
   13fcc:	bne	13fe0 <__snprintf_chk@plt+0x3070>
   13fd0:	mov	r0, #1
   13fd4:	pop	{r4, sl, fp, pc}
   13fd8:	cmp	r1, #0
   13fdc:	beq	13fd0 <__snprintf_chk@plt+0x3060>
   13fe0:	mov	r0, #0
   13fe4:	pop	{r4, sl, fp, pc}
   13fe8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13fec:	add	fp, sp, #24
   13ff0:	sub	sp, sp, #32
   13ff4:	mov	r4, r2
   13ff8:	mov	r8, r0
   13ffc:	ldr	r6, [fp, #12]
   14000:	ldr	r7, [fp, #8]
   14004:	cmp	r1, #0
   14008:	beq	14030 <__snprintf_chk@plt+0x30c0>
   1400c:	mov	r5, r1
   14010:	str	r4, [sp]
   14014:	str	r3, [sp, #4]
   14018:	movw	r2, #22568	; 0x5828
   1401c:	movt	r2, #1
   14020:	mov	r0, r8
   14024:	mov	r1, #1
   14028:	mov	r3, r5
   1402c:	b	14048 <__snprintf_chk@plt+0x30d8>
   14030:	str	r3, [sp]
   14034:	movw	r2, #22580	; 0x5834
   14038:	movt	r2, #1
   1403c:	mov	r0, r8
   14040:	mov	r1, #1
   14044:	mov	r3, r4
   14048:	bl	10f04 <__fprintf_chk@plt>
   1404c:	movw	r1, #22587	; 0x583b
   14050:	movt	r1, #1
   14054:	mov	r0, #0
   14058:	mov	r2, #5
   1405c:	bl	10da8 <dcgettext@plt>
   14060:	mov	r3, r0
   14064:	movw	r0, #2022	; 0x7e6
   14068:	str	r0, [sp]
   1406c:	movw	r2, #23305	; 0x5b09
   14070:	movt	r2, #1
   14074:	mov	r0, r8
   14078:	mov	r1, #1
   1407c:	bl	10f04 <__fprintf_chk@plt>
   14080:	movw	r4, #21005	; 0x520d
   14084:	movt	r4, #1
   14088:	mov	r0, r4
   1408c:	mov	r1, r8
   14090:	bl	10d48 <fputs_unlocked@plt>
   14094:	movw	r1, #22591	; 0x583f
   14098:	movt	r1, #1
   1409c:	mov	r0, #0
   140a0:	mov	r2, #5
   140a4:	bl	10da8 <dcgettext@plt>
   140a8:	mov	r2, r0
   140ac:	movw	r3, #22762	; 0x58ea
   140b0:	movt	r3, #1
   140b4:	mov	r0, r8
   140b8:	mov	r1, #1
   140bc:	bl	10f04 <__fprintf_chk@plt>
   140c0:	mov	r0, r4
   140c4:	mov	r1, r8
   140c8:	bl	10d48 <fputs_unlocked@plt>
   140cc:	cmp	r6, #9
   140d0:	bhi	1410c <__snprintf_chk@plt+0x319c>
   140d4:	add	r0, pc, #0
   140d8:	ldr	pc, [r0, r6, lsl #2]
   140dc:	andeq	r4, r1, r4, lsl #2
   140e0:	andeq	r4, r1, r8, lsl r1
   140e4:	andeq	r4, r1, r8, asr #2
   140e8:	andeq	r4, r1, r0, ror r1
   140ec:	muleq	r1, r8, r1
   140f0:	andeq	r4, r1, r0, asr #3
   140f4:	andeq	r4, r1, r8, ror #3
   140f8:	andeq	r4, r1, r0, lsr #4
   140fc:	andeq	r4, r1, r0, asr #5
   14100:	andeq	r4, r1, r8, ror #4
   14104:	sub	sp, fp, #24
   14108:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1410c:	movw	r1, #23115	; 0x5a4b
   14110:	movt	r1, #1
   14114:	b	14270 <__snprintf_chk@plt+0x3300>
   14118:	movw	r1, #22796	; 0x590c
   1411c:	movt	r1, #1
   14120:	mov	r0, #0
   14124:	mov	r2, #5
   14128:	bl	10da8 <dcgettext@plt>
   1412c:	mov	r2, r0
   14130:	ldr	r3, [r7]
   14134:	mov	r0, r8
   14138:	mov	r1, #1
   1413c:	sub	sp, fp, #24
   14140:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14144:	b	10f04 <__fprintf_chk@plt>
   14148:	movw	r1, #22812	; 0x591c
   1414c:	movt	r1, #1
   14150:	mov	r0, #0
   14154:	mov	r2, #5
   14158:	bl	10da8 <dcgettext@plt>
   1415c:	mov	r2, r0
   14160:	ldr	r3, [r7]
   14164:	ldr	r0, [r7, #4]
   14168:	str	r0, [sp]
   1416c:	b	1425c <__snprintf_chk@plt+0x32ec>
   14170:	movw	r1, #22835	; 0x5933
   14174:	movt	r1, #1
   14178:	mov	r0, #0
   1417c:	mov	r2, #5
   14180:	bl	10da8 <dcgettext@plt>
   14184:	mov	r2, r0
   14188:	ldr	r3, [r7]
   1418c:	ldmib	r7, {r0, r1}
   14190:	stm	sp, {r0, r1}
   14194:	b	1425c <__snprintf_chk@plt+0x32ec>
   14198:	movw	r1, #22863	; 0x594f
   1419c:	movt	r1, #1
   141a0:	mov	r0, #0
   141a4:	mov	r2, #5
   141a8:	bl	10da8 <dcgettext@plt>
   141ac:	mov	r2, r0
   141b0:	ldr	r3, [r7]
   141b4:	ldmib	r7, {r0, r1, r7}
   141b8:	stm	sp, {r0, r1, r7}
   141bc:	b	1425c <__snprintf_chk@plt+0x32ec>
   141c0:	movw	r1, #22895	; 0x596f
   141c4:	movt	r1, #1
   141c8:	mov	r0, #0
   141cc:	mov	r2, #5
   141d0:	bl	10da8 <dcgettext@plt>
   141d4:	mov	r2, r0
   141d8:	ldr	r3, [r7]
   141dc:	ldmib	r7, {r0, r1, r6, r7}
   141e0:	stm	sp, {r0, r1, r6, r7}
   141e4:	b	1425c <__snprintf_chk@plt+0x32ec>
   141e8:	movw	r1, #22931	; 0x5993
   141ec:	movt	r1, #1
   141f0:	mov	r0, #0
   141f4:	mov	r2, #5
   141f8:	bl	10da8 <dcgettext@plt>
   141fc:	mov	r2, r0
   14200:	ldr	r3, [r7]
   14204:	ldmib	r7, {r0, r1, r6}
   14208:	ldr	r5, [r7, #16]
   1420c:	ldr	r7, [r7, #20]
   14210:	stm	sp, {r0, r1, r6}
   14214:	str	r5, [sp, #12]
   14218:	str	r7, [sp, #16]
   1421c:	b	1425c <__snprintf_chk@plt+0x32ec>
   14220:	movw	r1, #22971	; 0x59bb
   14224:	movt	r1, #1
   14228:	mov	r0, #0
   1422c:	mov	r2, #5
   14230:	bl	10da8 <dcgettext@plt>
   14234:	mov	r2, r0
   14238:	ldr	r3, [r7]
   1423c:	ldmib	r7, {r0, r1, r6}
   14240:	ldr	r5, [r7, #16]
   14244:	ldr	r4, [r7, #20]
   14248:	ldr	r7, [r7, #24]
   1424c:	stm	sp, {r0, r1, r6}
   14250:	str	r5, [sp, #12]
   14254:	str	r4, [sp, #16]
   14258:	str	r7, [sp, #20]
   1425c:	mov	r0, r8
   14260:	mov	r1, #1
   14264:	b	14310 <__snprintf_chk@plt+0x33a0>
   14268:	movw	r1, #23063	; 0x5a17
   1426c:	movt	r1, #1
   14270:	mov	r0, #0
   14274:	mov	r2, #5
   14278:	bl	10da8 <dcgettext@plt>
   1427c:	mov	ip, r0
   14280:	ldr	r3, [r7]
   14284:	ldr	r0, [r7, #4]
   14288:	ldr	r1, [r7, #8]
   1428c:	ldr	r6, [r7, #12]
   14290:	ldr	r5, [r7, #16]
   14294:	ldr	r4, [r7, #20]
   14298:	ldr	r2, [r7, #24]
   1429c:	ldr	lr, [r7, #28]
   142a0:	ldr	r7, [r7, #32]
   142a4:	stm	sp, {r0, r1, r6}
   142a8:	str	r5, [sp, #12]
   142ac:	str	r4, [sp, #16]
   142b0:	str	r2, [sp, #20]
   142b4:	str	lr, [sp, #24]
   142b8:	str	r7, [sp, #28]
   142bc:	b	14304 <__snprintf_chk@plt+0x3394>
   142c0:	movw	r1, #23015	; 0x59e7
   142c4:	movt	r1, #1
   142c8:	mov	r0, #0
   142cc:	mov	r2, #5
   142d0:	bl	10da8 <dcgettext@plt>
   142d4:	mov	ip, r0
   142d8:	ldr	r3, [r7]
   142dc:	ldmib	r7, {r0, r1, r6}
   142e0:	ldr	r5, [r7, #16]
   142e4:	ldr	r4, [r7, #20]
   142e8:	ldr	r2, [r7, #24]
   142ec:	ldr	r7, [r7, #28]
   142f0:	stm	sp, {r0, r1, r6}
   142f4:	str	r5, [sp, #12]
   142f8:	str	r4, [sp, #16]
   142fc:	str	r2, [sp, #20]
   14300:	str	r7, [sp, #24]
   14304:	mov	r0, r8
   14308:	mov	r1, #1
   1430c:	mov	r2, ip
   14310:	bl	10f04 <__fprintf_chk@plt>
   14314:	sub	sp, fp, #24
   14318:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1431c:	push	{r4, sl, fp, lr}
   14320:	add	fp, sp, #8
   14324:	sub	sp, sp, #8
   14328:	mov	lr, #0
   1432c:	ldr	ip, [fp, #8]
   14330:	ldr	r4, [ip, lr, lsl #2]
   14334:	add	lr, lr, #1
   14338:	cmp	r4, #0
   1433c:	bne	14330 <__snprintf_chk@plt+0x33c0>
   14340:	sub	r4, lr, #1
   14344:	str	ip, [sp]
   14348:	str	r4, [sp, #4]
   1434c:	bl	13fe8 <__snprintf_chk@plt+0x3078>
   14350:	sub	sp, fp, #8
   14354:	pop	{r4, sl, fp, pc}
   14358:	push	{r4, r5, fp, lr}
   1435c:	add	fp, sp, #8
   14360:	sub	sp, sp, #48	; 0x30
   14364:	mov	ip, #0
   14368:	ldr	r4, [fp, #8]
   1436c:	add	lr, sp, #8
   14370:	ldr	r5, [r4]
   14374:	str	r5, [lr, ip, lsl #2]
   14378:	cmp	r5, #0
   1437c:	beq	14394 <__snprintf_chk@plt+0x3424>
   14380:	add	ip, ip, #1
   14384:	add	r4, r4, #4
   14388:	cmp	ip, #10
   1438c:	bne	14370 <__snprintf_chk@plt+0x3400>
   14390:	mov	ip, #10
   14394:	str	lr, [sp]
   14398:	str	ip, [sp, #4]
   1439c:	bl	13fe8 <__snprintf_chk@plt+0x3078>
   143a0:	sub	sp, fp, #8
   143a4:	pop	{r4, r5, fp, pc}
   143a8:	push	{fp, lr}
   143ac:	mov	fp, sp
   143b0:	sub	sp, sp, #8
   143b4:	add	ip, fp, #8
   143b8:	str	ip, [sp, #4]
   143bc:	str	ip, [sp]
   143c0:	bl	14358 <__snprintf_chk@plt+0x33e8>
   143c4:	mov	sp, fp
   143c8:	pop	{fp, pc}
   143cc:	push	{fp, lr}
   143d0:	mov	fp, sp
   143d4:	movw	r0, #24884	; 0x6134
   143d8:	movt	r0, #2
   143dc:	ldr	r1, [r0]
   143e0:	movw	r0, #21005	; 0x520d
   143e4:	movt	r0, #1
   143e8:	bl	10d48 <fputs_unlocked@plt>
   143ec:	movw	r1, #23175	; 0x5a87
   143f0:	movt	r1, #1
   143f4:	mov	r0, #0
   143f8:	mov	r2, #5
   143fc:	bl	10da8 <dcgettext@plt>
   14400:	mov	r1, r0
   14404:	movw	r2, #23195	; 0x5a9b
   14408:	movt	r2, #1
   1440c:	mov	r0, #1
   14410:	bl	10ee0 <__printf_chk@plt>
   14414:	movw	r1, #23217	; 0x5ab1
   14418:	movt	r1, #1
   1441c:	mov	r0, #0
   14420:	mov	r2, #5
   14424:	bl	10da8 <dcgettext@plt>
   14428:	mov	r1, r0
   1442c:	movw	r2, #21140	; 0x5294
   14430:	movt	r2, #1
   14434:	movw	r3, #21977	; 0x55d9
   14438:	movt	r3, #1
   1443c:	mov	r0, #1
   14440:	bl	10ee0 <__printf_chk@plt>
   14444:	movw	r1, #23237	; 0x5ac5
   14448:	movt	r1, #1
   1444c:	mov	r0, #0
   14450:	mov	r2, #5
   14454:	bl	10da8 <dcgettext@plt>
   14458:	mov	r1, r0
   1445c:	movw	r2, #23276	; 0x5aec
   14460:	movt	r2, #1
   14464:	mov	r0, #1
   14468:	pop	{fp, lr}
   1446c:	b	10ee0 <__printf_chk@plt>
   14470:	b	14474 <__snprintf_chk@plt+0x3504>
   14474:	push	{r4, r5, r6, sl, fp, lr}
   14478:	add	fp, sp, #16
   1447c:	mov	r4, r2
   14480:	mov	r5, r1
   14484:	mov	r6, r0
   14488:	bl	14fc0 <__snprintf_chk@plt+0x4050>
   1448c:	cmp	r0, #0
   14490:	popne	{r4, r5, r6, sl, fp, pc}
   14494:	cmp	r6, #0
   14498:	beq	144ac <__snprintf_chk@plt+0x353c>
   1449c:	cmp	r5, #0
   144a0:	cmpne	r4, #0
   144a4:	bne	144ac <__snprintf_chk@plt+0x353c>
   144a8:	pop	{r4, r5, r6, sl, fp, pc}
   144ac:	bl	14838 <__snprintf_chk@plt+0x38c8>
   144b0:	push	{fp, lr}
   144b4:	mov	fp, sp
   144b8:	bl	148d0 <__snprintf_chk@plt+0x3960>
   144bc:	pop	{fp, lr}
   144c0:	b	144c4 <__snprintf_chk@plt+0x3554>
   144c4:	cmp	r0, #0
   144c8:	bxne	lr
   144cc:	push	{fp, lr}
   144d0:	mov	fp, sp
   144d4:	bl	14838 <__snprintf_chk@plt+0x38c8>
   144d8:	push	{fp, lr}
   144dc:	mov	fp, sp
   144e0:	bl	14ef0 <__snprintf_chk@plt+0x3f80>
   144e4:	pop	{fp, lr}
   144e8:	b	144c4 <__snprintf_chk@plt+0x3554>
   144ec:	b	144b0 <__snprintf_chk@plt+0x3540>
   144f0:	push	{r4, r5, fp, lr}
   144f4:	add	fp, sp, #8
   144f8:	mov	r4, r1
   144fc:	mov	r5, r0
   14500:	bl	14900 <__snprintf_chk@plt+0x3990>
   14504:	cmp	r0, #0
   14508:	popne	{r4, r5, fp, pc}
   1450c:	cmp	r5, #0
   14510:	beq	14520 <__snprintf_chk@plt+0x35b0>
   14514:	cmp	r4, #0
   14518:	bne	14520 <__snprintf_chk@plt+0x35b0>
   1451c:	pop	{r4, r5, fp, pc}
   14520:	bl	14838 <__snprintf_chk@plt+0x38c8>
   14524:	push	{fp, lr}
   14528:	mov	fp, sp
   1452c:	bl	14ef4 <__snprintf_chk@plt+0x3f84>
   14530:	pop	{fp, lr}
   14534:	b	144c4 <__snprintf_chk@plt+0x3554>
   14538:	push	{fp, lr}
   1453c:	mov	fp, sp
   14540:	bl	14f04 <__snprintf_chk@plt+0x3f94>
   14544:	pop	{fp, lr}
   14548:	b	144c4 <__snprintf_chk@plt+0x3554>
   1454c:	mov	r2, r1
   14550:	mov	r1, r0
   14554:	mov	r0, #0
   14558:	b	14474 <__snprintf_chk@plt+0x3504>
   1455c:	mov	r2, r1
   14560:	mov	r1, r0
   14564:	mov	r0, #0
   14568:	b	14538 <__snprintf_chk@plt+0x35c8>
   1456c:	mov	r2, #1
   14570:	b	14574 <__snprintf_chk@plt+0x3604>
   14574:	push	{r4, r5, fp, lr}
   14578:	add	fp, sp, #8
   1457c:	mov	r4, r1
   14580:	ldr	r5, [r1]
   14584:	cmp	r0, #0
   14588:	beq	145a0 <__snprintf_chk@plt+0x3630>
   1458c:	mov	r1, #1
   14590:	add	r1, r1, r5, lsr #1
   14594:	adds	r5, r5, r1
   14598:	bcc	145b8 <__snprintf_chk@plt+0x3648>
   1459c:	bl	14838 <__snprintf_chk@plt+0x38c8>
   145a0:	cmp	r5, #0
   145a4:	bne	145b8 <__snprintf_chk@plt+0x3648>
   145a8:	mov	r1, #64	; 0x40
   145ac:	udiv	r5, r1, r2
   145b0:	cmp	r2, #64	; 0x40
   145b4:	addhi	r5, r5, #1
   145b8:	mov	r1, r5
   145bc:	bl	14474 <__snprintf_chk@plt+0x3504>
   145c0:	str	r5, [r4]
   145c4:	pop	{r4, r5, fp, pc}
   145c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145cc:	add	fp, sp, #24
   145d0:	mov	r8, r1
   145d4:	ldr	r6, [r1]
   145d8:	add	r1, r6, r6, asr #1
   145dc:	cmp	r1, r6
   145e0:	mvnvs	r1, #-2147483648	; 0x80000000
   145e4:	cmp	r1, r3
   145e8:	mov	r5, r1
   145ec:	movgt	r5, r3
   145f0:	cmn	r3, #1
   145f4:	movle	r5, r1
   145f8:	ldr	r4, [fp, #8]
   145fc:	cmn	r4, #1
   14600:	ble	14628 <__snprintf_chk@plt+0x36b8>
   14604:	cmp	r4, #0
   14608:	beq	1467c <__snprintf_chk@plt+0x370c>
   1460c:	cmn	r5, #1
   14610:	ble	14650 <__snprintf_chk@plt+0x36e0>
   14614:	mvn	r7, #-2147483648	; 0x80000000
   14618:	udiv	r1, r7, r4
   1461c:	cmp	r1, r5
   14620:	bge	1467c <__snprintf_chk@plt+0x370c>
   14624:	b	1468c <__snprintf_chk@plt+0x371c>
   14628:	cmn	r5, #1
   1462c:	ble	1466c <__snprintf_chk@plt+0x36fc>
   14630:	cmn	r4, #1
   14634:	beq	1467c <__snprintf_chk@plt+0x370c>
   14638:	mov	r1, #-2147483648	; 0x80000000
   1463c:	sdiv	r1, r1, r4
   14640:	mvn	r7, #-2147483648	; 0x80000000
   14644:	cmp	r1, r5
   14648:	bge	1467c <__snprintf_chk@plt+0x370c>
   1464c:	b	1468c <__snprintf_chk@plt+0x371c>
   14650:	beq	1467c <__snprintf_chk@plt+0x370c>
   14654:	mov	r1, #-2147483648	; 0x80000000
   14658:	sdiv	r1, r1, r5
   1465c:	mvn	r7, #-2147483648	; 0x80000000
   14660:	cmp	r1, r4
   14664:	bge	1467c <__snprintf_chk@plt+0x370c>
   14668:	b	1468c <__snprintf_chk@plt+0x371c>
   1466c:	mvn	r7, #-2147483648	; 0x80000000
   14670:	sdiv	r1, r7, r4
   14674:	cmp	r5, r1
   14678:	blt	1468c <__snprintf_chk@plt+0x371c>
   1467c:	mul	r1, r5, r4
   14680:	mov	r7, #64	; 0x40
   14684:	cmp	r1, #63	; 0x3f
   14688:	bgt	14694 <__snprintf_chk@plt+0x3724>
   1468c:	sdiv	r5, r7, r4
   14690:	mul	r1, r5, r4
   14694:	cmp	r0, #0
   14698:	moveq	r7, #0
   1469c:	streq	r7, [r8]
   146a0:	sub	r7, r5, r6
   146a4:	cmp	r7, r2
   146a8:	bge	14754 <__snprintf_chk@plt+0x37e4>
   146ac:	add	r5, r6, r2
   146b0:	mov	r1, #0
   146b4:	cmp	r5, r3
   146b8:	mov	r2, #0
   146bc:	movwgt	r2, #1
   146c0:	cmn	r3, #1
   146c4:	movwgt	r1, #1
   146c8:	cmp	r5, r6
   146cc:	bvs	1473c <__snprintf_chk@plt+0x37cc>
   146d0:	ands	r1, r1, r2
   146d4:	bne	1473c <__snprintf_chk@plt+0x37cc>
   146d8:	cmn	r4, #1
   146dc:	ble	14704 <__snprintf_chk@plt+0x3794>
   146e0:	cmp	r4, #0
   146e4:	beq	14750 <__snprintf_chk@plt+0x37e0>
   146e8:	cmn	r5, #1
   146ec:	ble	14728 <__snprintf_chk@plt+0x37b8>
   146f0:	mvn	r1, #-2147483648	; 0x80000000
   146f4:	udiv	r1, r1, r4
   146f8:	cmp	r1, r5
   146fc:	bge	14750 <__snprintf_chk@plt+0x37e0>
   14700:	b	1473c <__snprintf_chk@plt+0x37cc>
   14704:	cmn	r5, #1
   14708:	ble	14740 <__snprintf_chk@plt+0x37d0>
   1470c:	cmn	r4, #1
   14710:	beq	14750 <__snprintf_chk@plt+0x37e0>
   14714:	mov	r1, #-2147483648	; 0x80000000
   14718:	sdiv	r1, r1, r4
   1471c:	cmp	r1, r5
   14720:	bge	14750 <__snprintf_chk@plt+0x37e0>
   14724:	b	1473c <__snprintf_chk@plt+0x37cc>
   14728:	beq	14750 <__snprintf_chk@plt+0x37e0>
   1472c:	mov	r1, #-2147483648	; 0x80000000
   14730:	sdiv	r1, r1, r5
   14734:	cmp	r1, r4
   14738:	bge	14750 <__snprintf_chk@plt+0x37e0>
   1473c:	bl	14838 <__snprintf_chk@plt+0x38c8>
   14740:	mvn	r1, #-2147483648	; 0x80000000
   14744:	sdiv	r1, r1, r4
   14748:	cmp	r5, r1
   1474c:	blt	1473c <__snprintf_chk@plt+0x37cc>
   14750:	mul	r1, r5, r4
   14754:	bl	144f0 <__snprintf_chk@plt+0x3580>
   14758:	str	r5, [r8]
   1475c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14760:	mov	r1, #1
   14764:	b	14768 <__snprintf_chk@plt+0x37f8>
   14768:	push	{fp, lr}
   1476c:	mov	fp, sp
   14770:	bl	1487c <__snprintf_chk@plt+0x390c>
   14774:	pop	{fp, lr}
   14778:	b	144c4 <__snprintf_chk@plt+0x3554>
   1477c:	mov	r1, #1
   14780:	b	14784 <__snprintf_chk@plt+0x3814>
   14784:	push	{fp, lr}
   14788:	mov	fp, sp
   1478c:	bl	14f00 <__snprintf_chk@plt+0x3f90>
   14790:	pop	{fp, lr}
   14794:	b	144c4 <__snprintf_chk@plt+0x3554>
   14798:	push	{r4, r5, fp, lr}
   1479c:	add	fp, sp, #8
   147a0:	mov	r4, r1
   147a4:	mov	r5, r0
   147a8:	mov	r0, r1
   147ac:	bl	144b0 <__snprintf_chk@plt+0x3540>
   147b0:	mov	r1, r5
   147b4:	mov	r2, r4
   147b8:	pop	{r4, r5, fp, lr}
   147bc:	b	10d84 <memcpy@plt>
   147c0:	push	{r4, r5, fp, lr}
   147c4:	add	fp, sp, #8
   147c8:	mov	r4, r1
   147cc:	mov	r5, r0
   147d0:	mov	r0, r1
   147d4:	bl	144d8 <__snprintf_chk@plt+0x3568>
   147d8:	mov	r1, r5
   147dc:	mov	r2, r4
   147e0:	pop	{r4, r5, fp, lr}
   147e4:	b	10d84 <memcpy@plt>
   147e8:	push	{r4, r5, fp, lr}
   147ec:	add	fp, sp, #8
   147f0:	mov	r4, r1
   147f4:	mov	r5, r0
   147f8:	add	r0, r1, #1
   147fc:	bl	144d8 <__snprintf_chk@plt+0x3568>
   14800:	mov	r1, #0
   14804:	strb	r1, [r0, r4]
   14808:	mov	r1, r5
   1480c:	mov	r2, r4
   14810:	pop	{r4, r5, fp, lr}
   14814:	b	10d84 <memcpy@plt>
   14818:	push	{r4, sl, fp, lr}
   1481c:	add	fp, sp, #8
   14820:	mov	r4, r0
   14824:	bl	10ea4 <strlen@plt>
   14828:	add	r1, r0, #1
   1482c:	mov	r0, r4
   14830:	pop	{r4, sl, fp, lr}
   14834:	b	14798 <__snprintf_chk@plt+0x3828>
   14838:	push	{fp, lr}
   1483c:	mov	fp, sp
   14840:	movw	r0, #24792	; 0x60d8
   14844:	movt	r0, #2
   14848:	ldr	r4, [r0]
   1484c:	movw	r1, #23352	; 0x5b38
   14850:	movt	r1, #1
   14854:	mov	r0, #0
   14858:	mov	r2, #5
   1485c:	bl	10da8 <dcgettext@plt>
   14860:	mov	r3, r0
   14864:	movw	r2, #22248	; 0x56e8
   14868:	movt	r2, #1
   1486c:	mov	r0, r4
   14870:	mov	r1, #0
   14874:	bl	10e20 <error@plt>
   14878:	bl	10f64 <abort@plt>
   1487c:	clz	r2, r1
   14880:	lsr	r2, r2, #5
   14884:	clz	r3, r0
   14888:	lsr	r3, r3, #5
   1488c:	orrs	r2, r3, r2
   14890:	movwne	r1, #1
   14894:	movwne	r0, #1
   14898:	cmp	r1, #0
   1489c:	beq	148cc <__snprintf_chk@plt+0x395c>
   148a0:	mvn	r2, #-2147483648	; 0x80000000
   148a4:	udiv	r2, r2, r1
   148a8:	cmp	r2, r0
   148ac:	bcs	148cc <__snprintf_chk@plt+0x395c>
   148b0:	push	{fp, lr}
   148b4:	mov	fp, sp
   148b8:	bl	10eb0 <__errno_location@plt>
   148bc:	mov	r1, #12
   148c0:	str	r1, [r0]
   148c4:	mov	r0, #0
   148c8:	pop	{fp, pc}
   148cc:	b	10d3c <calloc@plt>
   148d0:	cmp	r0, #0
   148d4:	movweq	r0, #1
   148d8:	cmn	r0, #1
   148dc:	ble	148e4 <__snprintf_chk@plt+0x3974>
   148e0:	b	10e44 <malloc@plt>
   148e4:	push	{fp, lr}
   148e8:	mov	fp, sp
   148ec:	bl	10eb0 <__errno_location@plt>
   148f0:	mov	r1, #12
   148f4:	str	r1, [r0]
   148f8:	mov	r0, #0
   148fc:	pop	{fp, pc}
   14900:	push	{fp, lr}
   14904:	mov	fp, sp
   14908:	cmp	r0, #0
   1490c:	beq	14928 <__snprintf_chk@plt+0x39b8>
   14910:	cmp	r1, #0
   14914:	beq	14934 <__snprintf_chk@plt+0x39c4>
   14918:	cmn	r1, #1
   1491c:	ble	14940 <__snprintf_chk@plt+0x39d0>
   14920:	pop	{fp, lr}
   14924:	b	10db4 <realloc@plt>
   14928:	mov	r0, r1
   1492c:	pop	{fp, lr}
   14930:	b	148d0 <__snprintf_chk@plt+0x3960>
   14934:	bl	14e04 <__snprintf_chk@plt+0x3e94>
   14938:	mov	r0, #0
   1493c:	pop	{fp, pc}
   14940:	bl	10eb0 <__errno_location@plt>
   14944:	mov	r1, #12
   14948:	str	r1, [r0]
   1494c:	mov	r0, #0
   14950:	pop	{fp, pc}
   14954:	mov	r1, r0
   14958:	sub	r2, r0, #65	; 0x41
   1495c:	mov	r0, #1
   14960:	cmp	r2, #26
   14964:	subcs	r2, r1, #97	; 0x61
   14968:	cmpcs	r2, #26
   1496c:	bcs	14974 <__snprintf_chk@plt+0x3a04>
   14970:	bx	lr
   14974:	sub	r1, r1, #48	; 0x30
   14978:	cmp	r1, #10
   1497c:	movcs	r0, #0
   14980:	bx	lr
   14984:	mov	r1, r0
   14988:	sub	r2, r0, #65	; 0x41
   1498c:	mov	r0, #1
   14990:	cmp	r2, #26
   14994:	subcs	r1, r1, #97	; 0x61
   14998:	cmpcs	r1, #26
   1499c:	movcs	r0, #0
   149a0:	bx	lr
   149a4:	mov	r1, #0
   149a8:	cmp	r0, #128	; 0x80
   149ac:	movwcc	r1, #1
   149b0:	mov	r0, r1
   149b4:	bx	lr
   149b8:	sub	r1, r0, #9
   149bc:	clz	r1, r1
   149c0:	lsr	r1, r1, #5
   149c4:	sub	r0, r0, #32
   149c8:	clz	r0, r0
   149cc:	lsr	r0, r0, #5
   149d0:	orr	r0, r0, r1
   149d4:	bx	lr
   149d8:	mov	r1, r0
   149dc:	mov	r0, #1
   149e0:	cmp	r1, #32
   149e4:	bxcc	lr
   149e8:	cmp	r1, #127	; 0x7f
   149ec:	movne	r0, #0
   149f0:	bx	lr
   149f4:	sub	r1, r0, #48	; 0x30
   149f8:	mov	r0, #0
   149fc:	cmp	r1, #10
   14a00:	movwcc	r0, #1
   14a04:	bx	lr
   14a08:	sub	r1, r0, #33	; 0x21
   14a0c:	mov	r0, #0
   14a10:	cmp	r1, #94	; 0x5e
   14a14:	movwcc	r0, #1
   14a18:	bx	lr
   14a1c:	sub	r1, r0, #97	; 0x61
   14a20:	mov	r0, #0
   14a24:	cmp	r1, #26
   14a28:	movwcc	r0, #1
   14a2c:	bx	lr
   14a30:	sub	r1, r0, #32
   14a34:	mov	r0, #0
   14a38:	cmp	r1, #95	; 0x5f
   14a3c:	movwcc	r0, #1
   14a40:	bx	lr
   14a44:	sub	r1, r0, #33	; 0x21
   14a48:	cmp	r1, #93	; 0x5d
   14a4c:	bhi	14bd8 <__snprintf_chk@plt+0x3c68>
   14a50:	mov	r0, #1
   14a54:	add	r2, pc, #0
   14a58:	ldr	pc, [r2, r1, lsl #2]
   14a5c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a60:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a64:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a68:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a6c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a70:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a74:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a78:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a7c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a80:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a84:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a88:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a8c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a90:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a94:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a98:	ldrdeq	r4, [r1], -r8
   14a9c:	ldrdeq	r4, [r1], -r8
   14aa0:	ldrdeq	r4, [r1], -r8
   14aa4:	ldrdeq	r4, [r1], -r8
   14aa8:	ldrdeq	r4, [r1], -r8
   14aac:	ldrdeq	r4, [r1], -r8
   14ab0:	ldrdeq	r4, [r1], -r8
   14ab4:	ldrdeq	r4, [r1], -r8
   14ab8:	ldrdeq	r4, [r1], -r8
   14abc:	ldrdeq	r4, [r1], -r8
   14ac0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ac4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ac8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14acc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ad0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ad4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14ad8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14adc:	ldrdeq	r4, [r1], -r8
   14ae0:	ldrdeq	r4, [r1], -r8
   14ae4:	ldrdeq	r4, [r1], -r8
   14ae8:	ldrdeq	r4, [r1], -r8
   14aec:	ldrdeq	r4, [r1], -r8
   14af0:	ldrdeq	r4, [r1], -r8
   14af4:	ldrdeq	r4, [r1], -r8
   14af8:	ldrdeq	r4, [r1], -r8
   14afc:	ldrdeq	r4, [r1], -r8
   14b00:	ldrdeq	r4, [r1], -r8
   14b04:	ldrdeq	r4, [r1], -r8
   14b08:	ldrdeq	r4, [r1], -r8
   14b0c:	ldrdeq	r4, [r1], -r8
   14b10:	ldrdeq	r4, [r1], -r8
   14b14:	ldrdeq	r4, [r1], -r8
   14b18:	ldrdeq	r4, [r1], -r8
   14b1c:	ldrdeq	r4, [r1], -r8
   14b20:	ldrdeq	r4, [r1], -r8
   14b24:	ldrdeq	r4, [r1], -r8
   14b28:	ldrdeq	r4, [r1], -r8
   14b2c:	ldrdeq	r4, [r1], -r8
   14b30:	ldrdeq	r4, [r1], -r8
   14b34:	ldrdeq	r4, [r1], -r8
   14b38:	ldrdeq	r4, [r1], -r8
   14b3c:	ldrdeq	r4, [r1], -r8
   14b40:	ldrdeq	r4, [r1], -r8
   14b44:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b48:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b4c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b50:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b54:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b58:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b5c:	ldrdeq	r4, [r1], -r8
   14b60:	ldrdeq	r4, [r1], -r8
   14b64:	ldrdeq	r4, [r1], -r8
   14b68:	ldrdeq	r4, [r1], -r8
   14b6c:	ldrdeq	r4, [r1], -r8
   14b70:	ldrdeq	r4, [r1], -r8
   14b74:	ldrdeq	r4, [r1], -r8
   14b78:	ldrdeq	r4, [r1], -r8
   14b7c:	ldrdeq	r4, [r1], -r8
   14b80:	ldrdeq	r4, [r1], -r8
   14b84:	ldrdeq	r4, [r1], -r8
   14b88:	ldrdeq	r4, [r1], -r8
   14b8c:	ldrdeq	r4, [r1], -r8
   14b90:	ldrdeq	r4, [r1], -r8
   14b94:	ldrdeq	r4, [r1], -r8
   14b98:	ldrdeq	r4, [r1], -r8
   14b9c:	ldrdeq	r4, [r1], -r8
   14ba0:	ldrdeq	r4, [r1], -r8
   14ba4:	ldrdeq	r4, [r1], -r8
   14ba8:	ldrdeq	r4, [r1], -r8
   14bac:	ldrdeq	r4, [r1], -r8
   14bb0:	ldrdeq	r4, [r1], -r8
   14bb4:	ldrdeq	r4, [r1], -r8
   14bb8:	ldrdeq	r4, [r1], -r8
   14bbc:	ldrdeq	r4, [r1], -r8
   14bc0:	ldrdeq	r4, [r1], -r8
   14bc4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bc8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bcc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bd0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14bd4:	bx	lr
   14bd8:	mov	r0, #0
   14bdc:	bx	lr
   14be0:	sub	r0, r0, #9
   14be4:	cmp	r0, #23
   14be8:	movhi	r0, #0
   14bec:	bxhi	lr
   14bf0:	bic	r0, r0, #-16777216	; 0xff000000
   14bf4:	movw	r1, #31
   14bf8:	movt	r1, #128	; 0x80
   14bfc:	mov	r2, #1
   14c00:	and	r0, r2, r1, lsr r0
   14c04:	bx	lr
   14c08:	sub	r1, r0, #65	; 0x41
   14c0c:	mov	r0, #0
   14c10:	cmp	r1, #26
   14c14:	movwcc	r0, #1
   14c18:	bx	lr
   14c1c:	mov	r1, r0
   14c20:	sub	r2, r0, #48	; 0x30
   14c24:	mov	r0, #1
   14c28:	cmp	r2, #22
   14c2c:	bhi	14c44 <__snprintf_chk@plt+0x3cd4>
   14c30:	mov	ip, #1
   14c34:	movw	r3, #1023	; 0x3ff
   14c38:	movt	r3, #126	; 0x7e
   14c3c:	tst	r3, ip, lsl r2
   14c40:	bxne	lr
   14c44:	sub	r1, r1, #97	; 0x61
   14c48:	cmp	r1, #6
   14c4c:	movcs	r0, #0
   14c50:	bxcs	lr
   14c54:	bx	lr
   14c58:	sub	r1, r0, #65	; 0x41
   14c5c:	cmp	r1, #26
   14c60:	addcc	r0, r0, #32
   14c64:	bx	lr
   14c68:	sub	r1, r0, #97	; 0x61
   14c6c:	cmp	r1, #26
   14c70:	subcc	r0, r0, #32
   14c74:	bx	lr
   14c78:	push	{r4, r5, r6, sl, fp, lr}
   14c7c:	add	fp, sp, #16
   14c80:	mov	r4, r0
   14c84:	bl	10dfc <__fpending@plt>
   14c88:	mov	r5, r0
   14c8c:	mov	r0, r4
   14c90:	bl	10e08 <ferror_unlocked@plt>
   14c94:	mov	r6, r0
   14c98:	mov	r0, r4
   14c9c:	bl	14cfc <__snprintf_chk@plt+0x3d8c>
   14ca0:	cmp	r6, #0
   14ca4:	beq	14cc8 <__snprintf_chk@plt+0x3d58>
   14ca8:	mvn	r4, #0
   14cac:	cmp	r0, #0
   14cb0:	bne	14cf4 <__snprintf_chk@plt+0x3d84>
   14cb4:	bl	10eb0 <__errno_location@plt>
   14cb8:	mov	r1, #0
   14cbc:	str	r1, [r0]
   14cc0:	mov	r0, r4
   14cc4:	pop	{r4, r5, r6, sl, fp, pc}
   14cc8:	cmp	r0, #0
   14ccc:	mov	r4, r0
   14cd0:	mvnne	r4, #0
   14cd4:	cmp	r5, #0
   14cd8:	bne	14cf4 <__snprintf_chk@plt+0x3d84>
   14cdc:	cmp	r0, #0
   14ce0:	beq	14cf4 <__snprintf_chk@plt+0x3d84>
   14ce4:	bl	10eb0 <__errno_location@plt>
   14ce8:	ldr	r0, [r0]
   14cec:	subs	r4, r0, #9
   14cf0:	mvnne	r4, #0
   14cf4:	mov	r0, r4
   14cf8:	pop	{r4, r5, r6, sl, fp, pc}
   14cfc:	push	{r4, r5, fp, lr}
   14d00:	add	fp, sp, #8
   14d04:	sub	sp, sp, #8
   14d08:	mov	r4, r0
   14d0c:	bl	10ef8 <fileno@plt>
   14d10:	cmn	r0, #1
   14d14:	ble	14d8c <__snprintf_chk@plt+0x3e1c>
   14d18:	mov	r0, r4
   14d1c:	bl	10e5c <__freading@plt>
   14d20:	cmp	r0, #0
   14d24:	beq	14d50 <__snprintf_chk@plt+0x3de0>
   14d28:	mov	r0, r4
   14d2c:	bl	10ef8 <fileno@plt>
   14d30:	mov	r1, #1
   14d34:	str	r1, [sp]
   14d38:	mov	r2, #0
   14d3c:	mov	r3, #0
   14d40:	bl	10de4 <lseek64@plt>
   14d44:	and	r0, r0, r1
   14d48:	cmn	r0, #1
   14d4c:	beq	14d8c <__snprintf_chk@plt+0x3e1c>
   14d50:	mov	r0, r4
   14d54:	bl	14d9c <__snprintf_chk@plt+0x3e2c>
   14d58:	cmp	r0, #0
   14d5c:	beq	14d8c <__snprintf_chk@plt+0x3e1c>
   14d60:	bl	10eb0 <__errno_location@plt>
   14d64:	ldr	r5, [r0]
   14d68:	mov	r0, r4
   14d6c:	bl	10f10 <fclose@plt>
   14d70:	cmp	r5, #0
   14d74:	beq	14d84 <__snprintf_chk@plt+0x3e14>
   14d78:	bl	10eb0 <__errno_location@plt>
   14d7c:	str	r5, [r0]
   14d80:	mvn	r0, #0
   14d84:	sub	sp, fp, #8
   14d88:	pop	{r4, r5, fp, pc}
   14d8c:	mov	r0, r4
   14d90:	sub	sp, fp, #8
   14d94:	pop	{r4, r5, fp, lr}
   14d98:	b	10f10 <fclose@plt>
   14d9c:	push	{r4, sl, fp, lr}
   14da0:	add	fp, sp, #8
   14da4:	mov	r4, r0
   14da8:	cmp	r0, #0
   14dac:	beq	14dc4 <__snprintf_chk@plt+0x3e54>
   14db0:	mov	r0, r4
   14db4:	bl	10e5c <__freading@plt>
   14db8:	cmp	r0, #0
   14dbc:	movne	r0, r4
   14dc0:	blne	14dd0 <__snprintf_chk@plt+0x3e60>
   14dc4:	mov	r0, r4
   14dc8:	pop	{r4, sl, fp, lr}
   14dcc:	b	10d60 <fflush@plt>
   14dd0:	push	{fp, lr}
   14dd4:	mov	fp, sp
   14dd8:	sub	sp, sp, #8
   14ddc:	ldrb	r1, [r0, #1]
   14de0:	tst	r1, #1
   14de4:	beq	14dfc <__snprintf_chk@plt+0x3e8c>
   14de8:	mov	r1, #1
   14dec:	str	r1, [sp]
   14df0:	mov	r2, #0
   14df4:	mov	r3, #0
   14df8:	bl	14e2c <__snprintf_chk@plt+0x3ebc>
   14dfc:	mov	sp, fp
   14e00:	pop	{fp, pc}
   14e04:	push	{r4, r5, r6, sl, fp, lr}
   14e08:	add	fp, sp, #16
   14e0c:	mov	r4, r0
   14e10:	bl	10eb0 <__errno_location@plt>
   14e14:	mov	r5, r0
   14e18:	ldr	r6, [r0]
   14e1c:	mov	r0, r4
   14e20:	bl	10d6c <free@plt>
   14e24:	str	r6, [r5]
   14e28:	pop	{r4, r5, r6, sl, fp, pc}
   14e2c:	push	{r4, r5, r6, r7, fp, lr}
   14e30:	add	fp, sp, #16
   14e34:	sub	sp, sp, #8
   14e38:	mov	r5, r3
   14e3c:	mov	r6, r2
   14e40:	mov	r4, r0
   14e44:	ldr	r0, [r0, #4]
   14e48:	ldr	r1, [r4, #8]
   14e4c:	cmp	r1, r0
   14e50:	bne	14e6c <__snprintf_chk@plt+0x3efc>
   14e54:	ldrd	r0, [r4, #16]
   14e58:	cmp	r1, r0
   14e5c:	bne	14e6c <__snprintf_chk@plt+0x3efc>
   14e60:	ldr	r0, [r4, #36]	; 0x24
   14e64:	cmp	r0, #0
   14e68:	beq	14e84 <__snprintf_chk@plt+0x3f14>
   14e6c:	mov	r0, r4
   14e70:	mov	r2, r6
   14e74:	mov	r3, r5
   14e78:	sub	sp, fp, #16
   14e7c:	pop	{r4, r5, r6, r7, fp, lr}
   14e80:	b	10f1c <fseeko64@plt>
   14e84:	ldr	r7, [fp, #8]
   14e88:	mov	r0, r4
   14e8c:	bl	10ef8 <fileno@plt>
   14e90:	str	r7, [sp]
   14e94:	mov	r2, r6
   14e98:	mov	r3, r5
   14e9c:	bl	10de4 <lseek64@plt>
   14ea0:	and	r2, r0, r1
   14ea4:	cmn	r2, #1
   14ea8:	beq	14ec8 <__snprintf_chk@plt+0x3f58>
   14eac:	strd	r0, [r4, #80]	; 0x50
   14eb0:	ldr	r0, [r4]
   14eb4:	bic	r0, r0, #16
   14eb8:	str	r0, [r4]
   14ebc:	mov	r0, #0
   14ec0:	sub	sp, fp, #16
   14ec4:	pop	{r4, r5, r6, r7, fp, pc}
   14ec8:	mvn	r0, #0
   14ecc:	sub	sp, fp, #16
   14ed0:	pop	{r4, r5, r6, r7, fp, pc}
   14ed4:	push	{fp, lr}
   14ed8:	mov	fp, sp
   14edc:	bl	10eb0 <__errno_location@plt>
   14ee0:	mov	r1, #12
   14ee4:	str	r1, [r0]
   14ee8:	mov	r0, #0
   14eec:	pop	{fp, pc}
   14ef0:	b	148d0 <__snprintf_chk@plt+0x3960>
   14ef4:	cmp	r1, #0
   14ef8:	orreq	r1, r1, #1
   14efc:	b	14900 <__snprintf_chk@plt+0x3990>
   14f00:	b	1487c <__snprintf_chk@plt+0x390c>
   14f04:	clz	r3, r2
   14f08:	lsr	ip, r3, #5
   14f0c:	clz	r3, r1
   14f10:	lsr	r3, r3, #5
   14f14:	orrs	r3, r3, ip
   14f18:	movwne	r1, #1
   14f1c:	movwne	r2, #1
   14f20:	b	14fc0 <__snprintf_chk@plt+0x4050>
   14f24:	push	{fp, lr}
   14f28:	mov	fp, sp
   14f2c:	mov	r0, #14
   14f30:	bl	10f40 <nl_langinfo@plt>
   14f34:	movw	r1, #21006	; 0x520e
   14f38:	movt	r1, #1
   14f3c:	cmp	r0, #0
   14f40:	movne	r1, r0
   14f44:	ldrb	r2, [r1]
   14f48:	movw	r0, #23369	; 0x5b49
   14f4c:	movt	r0, #1
   14f50:	cmp	r2, #0
   14f54:	movne	r0, r1
   14f58:	pop	{fp, pc}
   14f5c:	push	{r4, r5, r6, r7, fp, lr}
   14f60:	add	fp, sp, #16
   14f64:	sub	sp, sp, #8
   14f68:	mov	r7, r2
   14f6c:	mov	r4, r1
   14f70:	add	r5, sp, #4
   14f74:	cmp	r0, #0
   14f78:	movne	r5, r0
   14f7c:	mov	r0, r5
   14f80:	bl	10e14 <mbrtowc@plt>
   14f84:	mov	r6, r0
   14f88:	cmp	r7, #0
   14f8c:	beq	14fb4 <__snprintf_chk@plt+0x4044>
   14f90:	cmn	r6, #2
   14f94:	bcc	14fb4 <__snprintf_chk@plt+0x4044>
   14f98:	mov	r0, #0
   14f9c:	bl	14ffc <__snprintf_chk@plt+0x408c>
   14fa0:	cmp	r0, #0
   14fa4:	bne	14fb4 <__snprintf_chk@plt+0x4044>
   14fa8:	ldrb	r0, [r4]
   14fac:	str	r0, [r5]
   14fb0:	mov	r6, #1
   14fb4:	mov	r0, r6
   14fb8:	sub	sp, fp, #16
   14fbc:	pop	{r4, r5, r6, r7, fp, pc}
   14fc0:	cmp	r2, #0
   14fc4:	beq	14ff4 <__snprintf_chk@plt+0x4084>
   14fc8:	mvn	r3, #0
   14fcc:	udiv	r3, r3, r2
   14fd0:	cmp	r3, r1
   14fd4:	bcs	14ff4 <__snprintf_chk@plt+0x4084>
   14fd8:	push	{fp, lr}
   14fdc:	mov	fp, sp
   14fe0:	bl	10eb0 <__errno_location@plt>
   14fe4:	mov	r1, #12
   14fe8:	str	r1, [r0]
   14fec:	mov	r0, #0
   14ff0:	pop	{fp, pc}
   14ff4:	mul	r1, r2, r1
   14ff8:	b	14900 <__snprintf_chk@plt+0x3990>
   14ffc:	push	{r4, sl, fp, lr}
   15000:	add	fp, sp, #8
   15004:	sub	sp, sp, #264	; 0x108
   15008:	add	r1, sp, #7
   1500c:	movw	r2, #257	; 0x101
   15010:	bl	15068 <__snprintf_chk@plt+0x40f8>
   15014:	mov	r4, #0
   15018:	cmp	r0, #0
   1501c:	bne	1505c <__snprintf_chk@plt+0x40ec>
   15020:	add	r0, sp, #7
   15024:	movw	r1, #23375	; 0x5b4f
   15028:	movt	r1, #1
   1502c:	mov	r2, #2
   15030:	bl	10e98 <bcmp@plt>
   15034:	cmp	r0, #0
   15038:	beq	1505c <__snprintf_chk@plt+0x40ec>
   1503c:	add	r0, sp, #7
   15040:	movw	r1, #23377	; 0x5b51
   15044:	movt	r1, #1
   15048:	mov	r2, #6
   1504c:	bl	10e98 <bcmp@plt>
   15050:	mov	r4, r0
   15054:	cmp	r0, #0
   15058:	movwne	r4, #1
   1505c:	mov	r0, r4
   15060:	sub	sp, fp, #8
   15064:	pop	{r4, sl, fp, pc}
   15068:	b	1506c <__snprintf_chk@plt+0x40fc>
   1506c:	push	{r4, r5, r6, r7, fp, lr}
   15070:	add	fp, sp, #16
   15074:	mov	r6, r2
   15078:	mov	r4, r1
   1507c:	bl	15104 <__snprintf_chk@plt+0x4194>
   15080:	cmp	r0, #0
   15084:	beq	150b4 <__snprintf_chk@plt+0x4144>
   15088:	mov	r7, r0
   1508c:	bl	10ea4 <strlen@plt>
   15090:	cmp	r0, r6
   15094:	bcs	150d0 <__snprintf_chk@plt+0x4160>
   15098:	add	r2, r0, #1
   1509c:	mov	r0, r4
   150a0:	mov	r1, r7
   150a4:	bl	10d84 <memcpy@plt>
   150a8:	mov	r5, #0
   150ac:	mov	r0, r5
   150b0:	pop	{r4, r5, r6, r7, fp, pc}
   150b4:	mov	r5, #22
   150b8:	cmp	r6, #0
   150bc:	beq	150f8 <__snprintf_chk@plt+0x4188>
   150c0:	mov	r0, #0
   150c4:	strb	r0, [r4]
   150c8:	mov	r0, r5
   150cc:	pop	{r4, r5, r6, r7, fp, pc}
   150d0:	mov	r5, #34	; 0x22
   150d4:	cmp	r6, #0
   150d8:	beq	150f8 <__snprintf_chk@plt+0x4188>
   150dc:	sub	r6, r6, #1
   150e0:	mov	r0, r4
   150e4:	mov	r1, r7
   150e8:	mov	r2, r6
   150ec:	bl	10d84 <memcpy@plt>
   150f0:	mov	r0, #0
   150f4:	strb	r0, [r4, r6]
   150f8:	mov	r0, r5
   150fc:	pop	{r4, r5, r6, r7, fp, pc}
   15100:	b	15104 <__snprintf_chk@plt+0x4194>
   15104:	mov	r1, #0
   15108:	b	10f28 <setlocale@plt>
   1510c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15110:	mov	r7, r0
   15114:	ldr	r6, [pc, #72]	; 15164 <__snprintf_chk@plt+0x41f4>
   15118:	ldr	r5, [pc, #72]	; 15168 <__snprintf_chk@plt+0x41f8>
   1511c:	add	r6, pc, r6
   15120:	add	r5, pc, r5
   15124:	sub	r6, r6, r5
   15128:	mov	r8, r1
   1512c:	mov	r9, r2
   15130:	bl	10d1c <calloc@plt-0x20>
   15134:	asrs	r6, r6, #2
   15138:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1513c:	mov	r4, #0
   15140:	add	r4, r4, #1
   15144:	ldr	r3, [r5], #4
   15148:	mov	r2, r9
   1514c:	mov	r1, r8
   15150:	mov	r0, r7
   15154:	blx	r3
   15158:	cmp	r6, r4
   1515c:	bne	15140 <__snprintf_chk@plt+0x41d0>
   15160:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15164:	andeq	r0, r1, r8, ror #27
   15168:	andeq	r0, r1, r0, ror #27
   1516c:	bx	lr
   15170:	ldr	r3, [pc, #12]	; 15184 <__snprintf_chk@plt+0x4214>
   15174:	mov	r1, #0
   15178:	add	r3, pc, r3
   1517c:	ldr	r2, [r3]
   15180:	b	10ec8 <__cxa_atexit@plt>
   15184:	andeq	r0, r1, r4, asr pc

Disassembly of section .fini:

00015188 <.fini>:
   15188:	push	{r3, lr}
   1518c:	pop	{r3, pc}
