
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

00010864 <.init>:
   10864:	push	{r3, lr}
   10868:	bl	109ec <_start@@Base+0x3c>
   1086c:	pop	{r3, pc}

Disassembly of section .plt:

00010870 <printf@plt-0x14>:
   10870:	push	{lr}		; (str lr, [sp, #-4]!)
   10874:	ldr	lr, [pc, #4]	; 10880 <printf@plt-0x4>
   10878:	add	lr, pc, lr
   1087c:	ldr	pc, [lr, #8]!
   10880:	andeq	r1, r1, r0, lsl #15

00010884 <printf@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1920]!	; 0x780

00010890 <fopen@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1912]!	; 0x778

0001089c <free@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1904]!	; 0x770

000108a8 <ftell@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1896]!	; 0x768

000108b4 <rewind@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1888]!	; 0x760

000108c0 <fread@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #69632	; 0x11000
   108c8:	ldr	pc, [ip, #1880]!	; 0x758

000108cc <puts@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #69632	; 0x11000
   108d4:	ldr	pc, [ip, #1872]!	; 0x750

000108d8 <malloc@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #69632	; 0x11000
   108e0:	ldr	pc, [ip, #1864]!	; 0x748

000108e4 <__libc_start_main@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #69632	; 0x11000
   108ec:	ldr	pc, [ip, #1856]!	; 0x740

000108f0 <__gmon_start__@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #69632	; 0x11000
   108f8:	ldr	pc, [ip, #1848]!	; 0x738

000108fc <exit@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #69632	; 0x11000
   10904:	ldr	pc, [ip, #1840]!	; 0x730

00010908 <fprintf@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #69632	; 0x11000
   10910:	ldr	pc, [ip, #1832]!	; 0x728

00010914 <putchar@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #69632	; 0x11000
   1091c:	ldr	pc, [ip, #1824]!	; 0x720

00010920 <fclose@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1816]!	; 0x718

0001092c <fseek@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1808]!	; 0x710

00010938 <fputs@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1800]!	; 0x708

00010944 <abort@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1792]!	; 0x700

00010950 <__assert_fail@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1784]!	; 0x6f8

Disassembly of section .text:

0001095c <main@@Base>:
   1095c:	cmp	r0, #2
   10960:	beq	10998 <main@@Base+0x3c>
   10964:	push	{r4, lr}
   10968:	ldr	r4, [pc, #48]	; 109a0 <main@@Base+0x44>
   1096c:	ldr	r0, [pc, #48]	; 109a4 <main@@Base+0x48>
   10970:	ldr	r1, [r4]
   10974:	bl	10938 <fputs@plt>
   10978:	ldr	r1, [r4]
   1097c:	ldr	r0, [pc, #36]	; 109a8 <main@@Base+0x4c>
   10980:	bl	10938 <fputs@plt>
   10984:	ldr	r1, [r4]
   10988:	ldr	r0, [pc, #28]	; 109ac <main@@Base+0x50>
   1098c:	bl	10938 <fputs@plt>
   10990:	mvn	r0, #0
   10994:	bl	108fc <exit@plt>
   10998:	ldr	r0, [r1, #4]
   1099c:	b	115b4 <load_and_dump_schema@@Base>
   109a0:	andeq	r2, r2, r0, rrx
   109a4:	andeq	r1, r1, fp, lsr #24
   109a8:	andeq	r1, r1, r8, asr #24
   109ac:	muleq	r1, r3, ip

000109b0 <_start@@Base>:
   109b0:	mov	fp, #0
   109b4:	mov	lr, #0
   109b8:	pop	{r1}		; (ldr r1, [sp], #4)
   109bc:	mov	r2, sp
   109c0:	push	{r2}		; (str r2, [sp, #-4]!)
   109c4:	push	{r0}		; (str r0, [sp, #-4]!)
   109c8:	ldr	ip, [pc, #16]	; 109e0 <_start@@Base+0x30>
   109cc:	push	{ip}		; (str ip, [sp, #-4]!)
   109d0:	ldr	r0, [pc, #12]	; 109e4 <_start@@Base+0x34>
   109d4:	ldr	r3, [pc, #12]	; 109e8 <_start@@Base+0x38>
   109d8:	bl	108e4 <__libc_start_main@plt>
   109dc:	bl	10944 <abort@plt>
   109e0:	andeq	r1, r1, r8, ror r7
   109e4:	andeq	r0, r1, ip, asr r9
   109e8:	andeq	r1, r1, r8, lsl r7
   109ec:	ldr	r3, [pc, #20]	; 10a08 <_start@@Base+0x58>
   109f0:	ldr	r2, [pc, #20]	; 10a0c <_start@@Base+0x5c>
   109f4:	add	r3, pc, r3
   109f8:	ldr	r2, [r3, r2]
   109fc:	cmp	r2, #0
   10a00:	bxeq	lr
   10a04:	b	108f0 <__gmon_start__@plt>
   10a08:	andeq	r1, r1, r4, lsl #12
   10a0c:	andeq	r0, r0, r4, asr r0
   10a10:	ldr	r3, [pc, #28]	; 10a34 <_start@@Base+0x84>
   10a14:	ldr	r0, [pc, #28]	; 10a38 <_start@@Base+0x88>
   10a18:	sub	r3, r3, r0
   10a1c:	cmp	r3, #6
   10a20:	bxls	lr
   10a24:	ldr	r3, [pc, #16]	; 10a3c <_start@@Base+0x8c>
   10a28:	cmp	r3, #0
   10a2c:	bxeq	lr
   10a30:	bx	r3
   10a34:	andeq	r2, r2, r3, rrx
   10a38:	andeq	r2, r2, r0, rrx
   10a3c:	andeq	r0, r0, r0
   10a40:	ldr	r1, [pc, #36]	; 10a6c <_start@@Base+0xbc>
   10a44:	ldr	r0, [pc, #36]	; 10a70 <_start@@Base+0xc0>
   10a48:	sub	r1, r1, r0
   10a4c:	asr	r1, r1, #2
   10a50:	add	r1, r1, r1, lsr #31
   10a54:	asrs	r1, r1, #1
   10a58:	bxeq	lr
   10a5c:	ldr	r3, [pc, #16]	; 10a74 <_start@@Base+0xc4>
   10a60:	cmp	r3, #0
   10a64:	bxeq	lr
   10a68:	bx	r3
   10a6c:	andeq	r2, r2, r0, rrx
   10a70:	andeq	r2, r2, r0, rrx
   10a74:	andeq	r0, r0, r0
   10a78:	push	{r4, lr}
   10a7c:	ldr	r4, [pc, #24]	; 10a9c <_start@@Base+0xec>
   10a80:	ldrb	r3, [r4]
   10a84:	cmp	r3, #0
   10a88:	popne	{r4, pc}
   10a8c:	bl	10a10 <_start@@Base+0x60>
   10a90:	mov	r3, #1
   10a94:	strb	r3, [r4]
   10a98:	pop	{r4, pc}
   10a9c:	andeq	r2, r2, r4, rrx
   10aa0:	ldr	r0, [pc, #40]	; 10ad0 <_start@@Base+0x120>
   10aa4:	ldr	r3, [r0]
   10aa8:	cmp	r3, #0
   10aac:	bne	10ab4 <_start@@Base+0x104>
   10ab0:	b	10a40 <_start@@Base+0x90>
   10ab4:	ldr	r3, [pc, #24]	; 10ad4 <_start@@Base+0x124>
   10ab8:	cmp	r3, #0
   10abc:	beq	10ab0 <_start@@Base+0x100>
   10ac0:	push	{r4, lr}
   10ac4:	blx	r3
   10ac8:	pop	{r4, lr}
   10acc:	b	10a40 <_start@@Base+0x90>
   10ad0:	andeq	r1, r2, r4, lsl pc
   10ad4:	andeq	r0, r0, r0
   10ad8:	subs	r2, r0, #0
   10adc:	bne	10af8 <_start@@Base+0x148>
   10ae0:	push	{r4, lr}
   10ae4:	mov	r2, #147	; 0x93
   10ae8:	ldr	r3, [pc, #48]	; 10b20 <_start@@Base+0x170>
   10aec:	ldr	r1, [pc, #48]	; 10b24 <_start@@Base+0x174>
   10af0:	ldr	r0, [pc, #48]	; 10b28 <_start@@Base+0x178>
   10af4:	bl	10950 <__assert_fail@plt>
   10af8:	ldr	r3, [r2]
   10afc:	sub	r3, r2, r3
   10b00:	ldrh	r1, [r3]
   10b04:	cmp	r1, #5
   10b08:	movls	r0, #0
   10b0c:	bls	10b1c <_start@@Base+0x16c>
   10b10:	ldrh	r0, [r3, #4]
   10b14:	cmp	r0, #0
   10b18:	ldrsbne	r0, [r2, r0]
   10b1c:	bx	lr
   10b20:	andeq	r1, r1, r8, lsl #15
   10b24:	andeq	r1, r1, r6, asr #18
   10b28:	andeq	r1, r1, r4, lsr #19
   10b2c:	subs	r2, r0, #0
   10b30:	sub	sp, sp, #8
   10b34:	moveq	r0, r2
   10b38:	beq	10b5c <_start@@Base+0x1ac>
   10b3c:	ldr	r3, [r2, #4]
   10b40:	ldr	r0, [pc, #28]	; 10b64 <_start@@Base+0x1b4>
   10b44:	sub	r0, r3, r0
   10b48:	clz	r0, r0
   10b4c:	lsr	r0, r0, #5
   10b50:	cmp	r0, #0
   10b54:	ldrne	r3, [r2]
   10b58:	addne	r0, r2, r3
   10b5c:	add	sp, sp, #8
   10b60:	bx	lr
   10b64:	movtpl	r4, #9794	; 0x2642

00010b68 <print_type@@Base>:
   10b68:	push	{r4, lr}
   10b6c:	mov	r4, r0
   10b70:	mov	r0, #123	; 0x7b
   10b74:	bl	10914 <putchar@plt>
   10b78:	cmp	r4, #0
   10b7c:	bne	10b94 <print_type@@Base+0x2c>
   10b80:	ldr	r3, [pc, #296]	; 10cb0 <print_type@@Base+0x148>
   10b84:	mov	r2, #147	; 0x93
   10b88:	ldr	r1, [pc, #292]	; 10cb4 <print_type@@Base+0x14c>
   10b8c:	ldr	r0, [pc, #292]	; 10cb8 <print_type@@Base+0x150>
   10b90:	bl	10950 <__assert_fail@plt>
   10b94:	ldr	r3, [r4]
   10b98:	sub	r3, r4, r3
   10b9c:	ldrh	r2, [r3]
   10ba0:	cmp	r2, #5
   10ba4:	bls	10ca8 <print_type@@Base+0x140>
   10ba8:	ldrh	r3, [r3, #4]
   10bac:	cmp	r3, #0
   10bb0:	beq	10ca8 <print_type@@Base+0x140>
   10bb4:	mov	r0, r4
   10bb8:	bl	10ad8 <_start@@Base+0x128>
   10bbc:	uxtb	r0, r0
   10bc0:	cmp	r0, #16
   10bc4:	ldrls	r3, [pc, #240]	; 10cbc <print_type@@Base+0x154>
   10bc8:	ldrhi	r1, [pc, #240]	; 10cc0 <print_type@@Base+0x158>
   10bcc:	addls	r0, r3, r0, lsl #2
   10bd0:	ldrls	r1, [r0, #64]	; 0x40
   10bd4:	ldr	r0, [pc, #232]	; 10cc4 <print_type@@Base+0x15c>
   10bd8:	bl	10884 <printf@plt>
   10bdc:	mov	r3, #0
   10be0:	ldr	r2, [r4]
   10be4:	sub	r2, r4, r2
   10be8:	ldrh	r1, [r2]
   10bec:	cmp	r1, #7
   10bf0:	bls	10c3c <print_type@@Base+0xd4>
   10bf4:	ldrh	r2, [r2, #6]
   10bf8:	cmp	r2, #0
   10bfc:	beq	10c3c <print_type@@Base+0xd4>
   10c00:	cmp	r3, #0
   10c04:	bne	10c10 <print_type@@Base+0xa8>
   10c08:	mov	r0, #44	; 0x2c
   10c0c:	bl	10914 <putchar@plt>
   10c10:	mov	r0, r4
   10c14:	bl	10ad8 <_start@@Base+0x128>
   10c18:	uxtb	r0, r0
   10c1c:	cmp	r0, #16
   10c20:	ldrls	r3, [pc, #148]	; 10cbc <print_type@@Base+0x154>
   10c24:	ldrhi	r1, [pc, #148]	; 10cc0 <print_type@@Base+0x158>
   10c28:	addls	r0, r3, r0, lsl #2
   10c2c:	ldrls	r1, [r0, #64]	; 0x40
   10c30:	ldr	r0, [pc, #144]	; 10cc8 <print_type@@Base+0x160>
   10c34:	bl	10884 <printf@plt>
   10c38:	mov	r3, #0
   10c3c:	ldr	r2, [r4]
   10c40:	sub	r2, r4, r2
   10c44:	ldrh	r1, [r2]
   10c48:	cmp	r1, #9
   10c4c:	bls	10c9c <print_type@@Base+0x134>
   10c50:	ldrh	r2, [r2, #8]
   10c54:	cmp	r2, #0
   10c58:	beq	10c9c <print_type@@Base+0x134>
   10c5c:	cmp	r3, #0
   10c60:	bne	10c6c <print_type@@Base+0x104>
   10c64:	mov	r0, #44	; 0x2c
   10c68:	bl	10914 <putchar@plt>
   10c6c:	ldr	r3, [r4]
   10c70:	sub	r3, r4, r3
   10c74:	ldrh	r2, [r3]
   10c78:	cmp	r2, #9
   10c7c:	bls	10c90 <print_type@@Base+0x128>
   10c80:	ldrh	r3, [r3, #8]
   10c84:	cmp	r3, #0
   10c88:	ldrne	r1, [r4, r3]
   10c8c:	bne	10c94 <print_type@@Base+0x12c>
   10c90:	mvn	r1, #0
   10c94:	ldr	r0, [pc, #48]	; 10ccc <print_type@@Base+0x164>
   10c98:	bl	10884 <printf@plt>
   10c9c:	mov	r0, #125	; 0x7d
   10ca0:	pop	{r4, lr}
   10ca4:	b	10914 <putchar@plt>
   10ca8:	mov	r3, #1
   10cac:	b	10be0 <print_type@@Base+0x78>
   10cb0:	andeq	r1, r1, r2, lsr #15
   10cb4:	andeq	r1, r1, r6, asr #18
   10cb8:	andeq	r1, r1, r4, lsr #19
   10cbc:	andeq	r1, r1, r8, lsl #15
   10cc0:	muleq	r1, r2, ip
   10cc4:	andeq	r1, r1, sl, asr #19
   10cc8:	ldrdeq	r1, [r1], -fp
   10ccc:	andeq	r1, r1, sl, ror #19

00010cd0 <print_object@@Base>:
   10cd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cd4:	subs	r5, r0, #0
   10cd8:	moveq	r2, #224	; 0xe0
   10cdc:	ldreq	r3, [pc, #812]	; 11010 <print_object@@Base+0x340>
   10ce0:	beq	10e74 <print_object@@Base+0x1a4>
   10ce4:	ldr	r3, [r5]
   10ce8:	sub	r3, r5, r3
   10cec:	ldrh	r2, [r3]
   10cf0:	cmp	r2, #7
   10cf4:	bls	10d2c <print_object@@Base+0x5c>
   10cf8:	ldrh	r2, [r3, #6]
   10cfc:	cmp	r2, #0
   10d00:	beq	10d2c <print_object@@Base+0x5c>
   10d04:	ldrh	r3, [r3, #4]
   10d08:	add	r6, r5, r2
   10d0c:	ldr	r2, [r5, r2]
   10d10:	cmp	r3, #0
   10d14:	add	r2, r2, #4
   10d18:	add	r6, r6, r2
   10d1c:	bne	10d40 <print_object@@Base+0x70>
   10d20:	ldr	r3, [pc, #748]	; 11014 <print_object@@Base+0x344>
   10d24:	mov	r2, #218	; 0xda
   10d28:	b	10d34 <print_object@@Base+0x64>
   10d2c:	ldr	r3, [pc, #732]	; 11010 <print_object@@Base+0x340>
   10d30:	mov	r2, #224	; 0xe0
   10d34:	ldr	r1, [pc, #732]	; 11018 <print_object@@Base+0x348>
   10d38:	ldr	r0, [pc, #732]	; 1101c <print_object@@Base+0x34c>
   10d3c:	bl	10950 <__assert_fail@plt>
   10d40:	add	r1, r5, r3
   10d44:	ldr	r3, [r5, r3]
   10d48:	ldr	r0, [pc, #720]	; 11020 <print_object@@Base+0x350>
   10d4c:	add	r3, r3, #4
   10d50:	add	r1, r1, r3
   10d54:	bl	10884 <printf@plt>
   10d58:	ldr	r0, [pc, #708]	; 11024 <print_object@@Base+0x354>
   10d5c:	bl	10884 <printf@plt>
   10d60:	ldr	fp, [pc, #704]	; 11028 <print_object@@Base+0x358>
   10d64:	ldr	r9, [pc, #704]	; 1102c <print_object@@Base+0x35c>
   10d68:	ldr	sl, [pc, #704]	; 11030 <print_object@@Base+0x360>
   10d6c:	mov	r7, r6
   10d70:	mov	r8, #0
   10d74:	cmp	r6, #0
   10d78:	beq	10d88 <print_object@@Base+0xb8>
   10d7c:	ldr	r3, [r6, #-4]
   10d80:	cmp	r8, r3
   10d84:	bcc	10e34 <print_object@@Base+0x164>
   10d88:	mov	r0, #93	; 0x5d
   10d8c:	bl	10914 <putchar@plt>
   10d90:	ldr	r3, [r5]
   10d94:	sub	r3, r5, r3
   10d98:	ldrh	r2, [r3]
   10d9c:	cmp	r2, #9
   10da0:	bls	10dd0 <print_object@@Base+0x100>
   10da4:	ldrh	r3, [r3, #8]
   10da8:	cmp	r3, #0
   10dac:	beq	10dd0 <print_object@@Base+0x100>
   10db0:	ldrb	r1, [r5, r3]
   10db4:	ldr	r2, [pc, #624]	; 1102c <print_object@@Base+0x35c>
   10db8:	ldr	r3, [pc, #624]	; 11030 <print_object@@Base+0x360>
   10dbc:	cmp	r1, #0
   10dc0:	moveq	r1, r2
   10dc4:	movne	r1, r3
   10dc8:	ldr	r0, [pc, #612]	; 11034 <print_object@@Base+0x364>
   10dcc:	bl	10884 <printf@plt>
   10dd0:	ldr	r3, [r5]
   10dd4:	sub	r3, r5, r3
   10dd8:	ldrh	r2, [r3]
   10ddc:	cmp	r2, #11
   10de0:	bls	10dfc <print_object@@Base+0x12c>
   10de4:	ldrh	r3, [r3, #10]
   10de8:	cmp	r3, #0
   10dec:	beq	10dfc <print_object@@Base+0x12c>
   10df0:	ldr	r1, [r5, r3]
   10df4:	ldr	r0, [pc, #572]	; 11038 <print_object@@Base+0x368>
   10df8:	bl	10884 <printf@plt>
   10dfc:	ldr	r3, [r5]
   10e00:	sub	r3, r5, r3
   10e04:	ldrh	r2, [r3]
   10e08:	cmp	r2, #13
   10e0c:	bls	10e28 <print_object@@Base+0x158>
   10e10:	ldrh	r3, [r3, #12]
   10e14:	cmp	r3, #0
   10e18:	beq	10e28 <print_object@@Base+0x158>
   10e1c:	ldr	r1, [r5, r3]
   10e20:	ldr	r0, [pc, #532]	; 1103c <print_object@@Base+0x36c>
   10e24:	bl	10884 <printf@plt>
   10e28:	mov	r0, #125	; 0x7d
   10e2c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e30:	b	10914 <putchar@plt>
   10e34:	cmp	r8, #0
   10e38:	beq	10e44 <print_object@@Base+0x174>
   10e3c:	mov	r0, #44	; 0x2c
   10e40:	bl	10914 <putchar@plt>
   10e44:	ldr	r3, [r6, #-4]
   10e48:	cmp	r8, r3
   10e4c:	ldrcs	r3, [pc, #492]	; 11040 <print_object@@Base+0x370>
   10e50:	movcs	r2, #192	; 0xc0
   10e54:	ldrcs	r1, [pc, #444]	; 11018 <print_object@@Base+0x348>
   10e58:	ldrcs	r0, [pc, #484]	; 11044 <print_object@@Base+0x374>
   10e5c:	bcs	10d3c <print_object@@Base+0x6c>
   10e60:	ldr	r3, [r7]
   10e64:	adds	r4, r7, r3
   10e68:	bne	10e80 <print_object@@Base+0x1b0>
   10e6c:	ldr	r3, [pc, #468]	; 11048 <print_object@@Base+0x378>
   10e70:	mov	r2, #195	; 0xc3
   10e74:	ldr	r1, [pc, #412]	; 11018 <print_object@@Base+0x348>
   10e78:	ldr	r0, [pc, #460]	; 1104c <print_object@@Base+0x37c>
   10e7c:	b	10d3c <print_object@@Base+0x6c>
   10e80:	ldr	r3, [r7, r3]
   10e84:	sub	r3, r4, r3
   10e88:	ldrh	r2, [r3]
   10e8c:	cmp	r2, #5
   10e90:	bls	10ed8 <print_object@@Base+0x208>
   10e94:	ldrh	r3, [r3, #4]
   10e98:	cmp	r3, #0
   10e9c:	beq	10ed8 <print_object@@Base+0x208>
   10ea0:	add	r1, r4, r3
   10ea4:	ldr	r3, [r4, r3]
   10ea8:	mov	r0, fp
   10eac:	add	r3, r3, #4
   10eb0:	add	r1, r1, r3
   10eb4:	bl	10884 <printf@plt>
   10eb8:	ldr	r3, [r4]
   10ebc:	sub	r3, r4, r3
   10ec0:	ldrh	r2, [r3]
   10ec4:	cmp	r2, #7
   10ec8:	bhi	10ee4 <print_object@@Base+0x214>
   10ecc:	ldr	r3, [pc, #380]	; 11050 <print_object@@Base+0x380>
   10ed0:	mov	r2, #201	; 0xc9
   10ed4:	b	10d34 <print_object@@Base+0x64>
   10ed8:	ldr	r3, [pc, #360]	; 11048 <print_object@@Base+0x378>
   10edc:	mov	r2, #195	; 0xc3
   10ee0:	b	10d34 <print_object@@Base+0x64>
   10ee4:	ldrh	r3, [r3, #6]
   10ee8:	cmp	r3, #0
   10eec:	beq	10ecc <print_object@@Base+0x1fc>
   10ef0:	add	r0, r4, r3
   10ef4:	ldr	r3, [r4, r3]
   10ef8:	add	r0, r0, r3
   10efc:	bl	10b68 <print_type@@Base>
   10f00:	ldr	r3, [r4]
   10f04:	sub	r3, r4, r3
   10f08:	ldrh	r2, [r3]
   10f0c:	cmp	r2, #9
   10f10:	bhi	10ff4 <print_object@@Base+0x324>
   10f14:	ldr	r3, [r4]
   10f18:	sub	r3, r4, r3
   10f1c:	ldrh	r2, [r3]
   10f20:	cmp	r2, #13
   10f24:	bls	10f40 <print_object@@Base+0x270>
   10f28:	ldrh	r3, [r3, #12]
   10f2c:	cmp	r3, #0
   10f30:	beq	10f40 <print_object@@Base+0x270>
   10f34:	ldrd	r2, [r3, r4]
   10f38:	ldr	r0, [pc, #276]	; 11054 <print_object@@Base+0x384>
   10f3c:	bl	10884 <printf@plt>
   10f40:	ldr	r3, [r4]
   10f44:	sub	r3, r4, r3
   10f48:	ldrh	r2, [r3]
   10f4c:	cmp	r2, #15
   10f50:	bls	10f70 <print_object@@Base+0x2a0>
   10f54:	ldrh	r3, [r3, #14]
   10f58:	cmp	r3, #0
   10f5c:	beq	10f70 <print_object@@Base+0x2a0>
   10f60:	add	r3, r4, r3
   10f64:	ldr	r0, [pc, #236]	; 11058 <print_object@@Base+0x388>
   10f68:	ldrd	r2, [r3]
   10f6c:	bl	10884 <printf@plt>
   10f70:	ldr	r3, [r4]
   10f74:	sub	r3, r4, r3
   10f78:	ldrh	r2, [r3]
   10f7c:	cmp	r2, #19
   10f80:	bls	10fa8 <print_object@@Base+0x2d8>
   10f84:	ldrh	r3, [r3, #18]
   10f88:	cmp	r3, #0
   10f8c:	beq	10fa8 <print_object@@Base+0x2d8>
   10f90:	ldrb	r1, [r4, r3]
   10f94:	ldr	r0, [pc, #192]	; 1105c <print_object@@Base+0x38c>
   10f98:	cmp	r1, #0
   10f9c:	moveq	r1, r9
   10fa0:	movne	r1, sl
   10fa4:	bl	10884 <printf@plt>
   10fa8:	ldr	r3, [r4]
   10fac:	sub	r3, r4, r3
   10fb0:	ldrh	r2, [r3]
   10fb4:	cmp	r2, #21
   10fb8:	bls	10fe0 <print_object@@Base+0x310>
   10fbc:	ldrh	r3, [r3, #20]
   10fc0:	cmp	r3, #0
   10fc4:	beq	10fe0 <print_object@@Base+0x310>
   10fc8:	ldrb	r1, [r4, r3]
   10fcc:	ldr	r0, [pc, #140]	; 11060 <print_object@@Base+0x390>
   10fd0:	cmp	r1, #0
   10fd4:	moveq	r1, r9
   10fd8:	movne	r1, sl
   10fdc:	bl	10884 <printf@plt>
   10fe0:	mov	r0, #125	; 0x7d
   10fe4:	bl	10914 <putchar@plt>
   10fe8:	add	r8, r8, #1
   10fec:	add	r7, r7, #4
   10ff0:	b	10d74 <print_object@@Base+0xa4>
   10ff4:	ldrh	r3, [r3, #8]
   10ff8:	cmp	r3, #0
   10ffc:	beq	10f14 <print_object@@Base+0x244>
   11000:	ldrh	r1, [r4, r3]
   11004:	ldr	r0, [pc, #88]	; 11064 <print_object@@Base+0x394>
   11008:	bl	10884 <printf@plt>
   1100c:	b	10f14 <print_object@@Base+0x244>
   11010:	andeq	r1, r1, ip, lsl #16
   11014:	andeq	r1, r1, r5, lsr #16
   11018:	andeq	r1, r1, r6, asr #18
   1101c:	andeq	r1, r1, r0, lsl #20
   11020:	andeq	r1, r1, r1, lsr #20
   11024:	andeq	r1, r1, lr, lsr #20
   11028:	andeq	r1, r1, r1, ror sl
   1102c:	strdeq	r1, [r1], -sl
   11030:	strdeq	r1, [r1], -r5
   11034:	ldrdeq	r1, [r1], -r8
   11038:	andeq	r1, r1, r8, ror #21
   1103c:	strdeq	r1, [r1], -r7
   11040:	andeq	r1, r1, ip, lsr r8
   11044:	andeq	r1, r1, sl, lsr sl
   11048:	andeq	r1, r1, r4, asr r8
   1104c:	andeq	r1, r1, r4, lsr #19
   11050:	andeq	r1, r1, sl, ror #16
   11054:	muleq	r1, r0, sl
   11058:	andeq	r1, r1, r8, lsr #21
   1105c:			; <UNDEFINED> instruction: 0x00011abf
   11060:	andeq	r1, r1, lr, asr #21
   11064:	andeq	r1, r1, r6, lsl #21

00011068 <print_enum@@Base>:
   11068:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1106c:	subs	r5, r0, #0
   11070:	moveq	r2, #177	; 0xb1
   11074:	ldreq	r3, [pc, #612]	; 112e0 <print_enum@@Base+0x278>
   11078:	beq	111e8 <print_enum@@Base+0x180>
   1107c:	ldr	r3, [r5]
   11080:	sub	r3, r5, r3
   11084:	ldrh	r2, [r3]
   11088:	cmp	r2, #5
   1108c:	bls	110d4 <print_enum@@Base+0x6c>
   11090:	ldrh	r3, [r3, #4]
   11094:	cmp	r3, #0
   11098:	beq	110d4 <print_enum@@Base+0x6c>
   1109c:	add	r1, r5, r3
   110a0:	ldr	r3, [r5, r3]
   110a4:	ldr	r0, [pc, #568]	; 112e4 <print_enum@@Base+0x27c>
   110a8:	add	r3, r3, #4
   110ac:	add	r1, r1, r3
   110b0:	bl	10884 <printf@plt>
   110b4:	ldr	r3, [r5]
   110b8:	sub	r3, r5, r3
   110bc:	ldrh	r2, [r3]
   110c0:	cmp	r2, #7
   110c4:	bhi	110e8 <print_enum@@Base+0x80>
   110c8:	ldr	r3, [pc, #536]	; 112e8 <print_enum@@Base+0x280>
   110cc:	mov	r2, #183	; 0xb7
   110d0:	b	110dc <print_enum@@Base+0x74>
   110d4:	ldr	r3, [pc, #516]	; 112e0 <print_enum@@Base+0x278>
   110d8:	mov	r2, #177	; 0xb1
   110dc:	ldr	r1, [pc, #520]	; 112ec <print_enum@@Base+0x284>
   110e0:	ldr	r0, [pc, #520]	; 112f0 <print_enum@@Base+0x288>
   110e4:	bl	10950 <__assert_fail@plt>
   110e8:	ldrh	r3, [r3, #6]
   110ec:	cmp	r3, #0
   110f0:	beq	110c8 <print_enum@@Base+0x60>
   110f4:	add	r6, r5, r3
   110f8:	ldr	r3, [r5, r3]
   110fc:	ldr	r0, [pc, #496]	; 112f4 <print_enum@@Base+0x28c>
   11100:	add	r3, r3, #4
   11104:	add	r6, r6, r3
   11108:	bl	10884 <printf@plt>
   1110c:	ldr	r9, [pc, #464]	; 112e4 <print_enum@@Base+0x27c>
   11110:	ldr	sl, [pc, #480]	; 112f8 <print_enum@@Base+0x290>
   11114:	ldr	fp, [pc, #480]	; 112fc <print_enum@@Base+0x294>
   11118:	mov	r8, r6
   1111c:	mov	r7, #0
   11120:	cmp	r6, #0
   11124:	beq	11134 <print_enum@@Base+0xcc>
   11128:	ldr	r3, [r6, #-4]
   1112c:	cmp	r7, r3
   11130:	bcc	111c0 <print_enum@@Base+0x158>
   11134:	mov	r0, #93	; 0x5d
   11138:	bl	10914 <putchar@plt>
   1113c:	ldr	r3, [r5]
   11140:	sub	r3, r5, r3
   11144:	ldrh	r2, [r3]
   11148:	cmp	r2, #9
   1114c:	bls	1117c <print_enum@@Base+0x114>
   11150:	ldrh	r3, [r3, #8]
   11154:	cmp	r3, #0
   11158:	beq	1117c <print_enum@@Base+0x114>
   1115c:	ldrb	r1, [r5, r3]
   11160:	ldr	r2, [pc, #408]	; 11300 <print_enum@@Base+0x298>
   11164:	ldr	r3, [pc, #408]	; 11304 <print_enum@@Base+0x29c>
   11168:	cmp	r1, #0
   1116c:	moveq	r1, r2
   11170:	movne	r1, r3
   11174:	ldr	r0, [pc, #396]	; 11308 <print_enum@@Base+0x2a0>
   11178:	bl	10884 <printf@plt>
   1117c:	ldr	r0, [pc, #392]	; 1130c <print_enum@@Base+0x2a4>
   11180:	bl	10884 <printf@plt>
   11184:	ldr	r3, [r5]
   11188:	sub	r3, r5, r3
   1118c:	ldrh	r2, [r3]
   11190:	cmp	r2, #11
   11194:	bls	112d4 <print_enum@@Base+0x26c>
   11198:	ldrh	r3, [r3, #10]
   1119c:	cmp	r3, #0
   111a0:	beq	112d4 <print_enum@@Base+0x26c>
   111a4:	add	r0, r5, r3
   111a8:	ldr	r3, [r5, r3]
   111ac:	add	r0, r0, r3
   111b0:	bl	10b68 <print_type@@Base>
   111b4:	mov	r0, #125	; 0x7d
   111b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111bc:	b	10914 <putchar@plt>
   111c0:	ldr	r4, [r8]
   111c4:	cmp	r7, #0
   111c8:	add	r4, r8, r4
   111cc:	beq	111d8 <print_enum@@Base+0x170>
   111d0:	mov	r0, #44	; 0x2c
   111d4:	bl	10914 <putchar@plt>
   111d8:	cmp	r4, #0
   111dc:	bne	111f4 <print_enum@@Base+0x18c>
   111e0:	ldr	r3, [pc, #296]	; 11310 <print_enum@@Base+0x2a8>
   111e4:	mov	r2, #159	; 0x9f
   111e8:	ldr	r1, [pc, #252]	; 112ec <print_enum@@Base+0x284>
   111ec:	ldr	r0, [pc, #288]	; 11314 <print_enum@@Base+0x2ac>
   111f0:	b	110e4 <print_enum@@Base+0x7c>
   111f4:	ldr	r3, [r4]
   111f8:	sub	r3, r4, r3
   111fc:	ldrh	r2, [r3]
   11200:	cmp	r2, #5
   11204:	bls	112ac <print_enum@@Base+0x244>
   11208:	ldrh	r3, [r3, #4]
   1120c:	cmp	r3, #0
   11210:	beq	112ac <print_enum@@Base+0x244>
   11214:	add	r1, r4, r3
   11218:	ldr	r3, [r4, r3]
   1121c:	mov	r0, r9
   11220:	add	r3, r3, #4
   11224:	add	r1, r1, r3
   11228:	bl	10884 <printf@plt>
   1122c:	ldr	r3, [r4]
   11230:	sub	r3, r4, r3
   11234:	ldrh	r2, [r3]
   11238:	cmp	r2, #7
   1123c:	bhi	112b8 <print_enum@@Base+0x250>
   11240:	ldr	r3, [r4]
   11244:	sub	r3, r4, r3
   11248:	ldrh	r2, [r3]
   1124c:	cmp	r2, #9
   11250:	bls	11298 <print_enum@@Base+0x230>
   11254:	ldrh	r3, [r3, #8]
   11258:	cmp	r3, #0
   1125c:	beq	11298 <print_enum@@Base+0x230>
   11260:	mov	r0, fp
   11264:	bl	10884 <printf@plt>
   11268:	ldr	r3, [r4]
   1126c:	sub	r3, r4, r3
   11270:	ldrh	r2, [r3]
   11274:	cmp	r2, #9
   11278:	movls	r0, #0
   1127c:	bls	11294 <print_enum@@Base+0x22c>
   11280:	ldrh	r0, [r3, #8]
   11284:	cmp	r0, #0
   11288:	addne	r3, r4, r0
   1128c:	ldrne	r0, [r4, r0]
   11290:	addne	r0, r3, r0
   11294:	bl	10cd0 <print_object@@Base>
   11298:	mov	r0, #125	; 0x7d
   1129c:	bl	10914 <putchar@plt>
   112a0:	add	r7, r7, #1
   112a4:	add	r8, r8, #4
   112a8:	b	11120 <print_enum@@Base+0xb8>
   112ac:	ldr	r3, [pc, #92]	; 11310 <print_enum@@Base+0x2a8>
   112b0:	mov	r2, #159	; 0x9f
   112b4:	b	110dc <print_enum@@Base+0x74>
   112b8:	ldrh	r3, [r3, #6]
   112bc:	cmp	r3, #0
   112c0:	beq	11240 <print_enum@@Base+0x1d8>
   112c4:	ldrd	r2, [r3, r4]
   112c8:	mov	r0, sl
   112cc:	bl	10884 <printf@plt>
   112d0:	b	11240 <print_enum@@Base+0x1d8>
   112d4:	ldr	r3, [pc, #60]	; 11318 <print_enum@@Base+0x2b0>
   112d8:	mov	r2, #185	; 0xb9
   112dc:	b	110dc <print_enum@@Base+0x74>
   112e0:	andeq	r1, r1, r0, lsl #17
   112e4:	andeq	r1, r1, r1, lsr #20
   112e8:	muleq	r1, r5, r8
   112ec:	andeq	r1, r1, r6, asr #18
   112f0:	andeq	r1, r1, r0, lsl #20
   112f4:	andeq	r1, r1, r6, lsl #22
   112f8:	andeq	r1, r1, r2, lsl fp
   112fc:	andeq	r1, r1, r0, lsr #22
   11300:	strdeq	r1, [r1], -sl
   11304:	strdeq	r1, [r1], -r5
   11308:	andeq	r1, r1, fp, lsr #22
   1130c:	andeq	r1, r1, sl, lsr fp
   11310:	andeq	r1, r1, ip, lsr #17
   11314:	andeq	r1, r1, r4, lsr #19
   11318:	andeq	r1, r1, r4, asr #17

0001131c <print_schema@@Base>:
   1131c:	push	{r4, r5, r6, r7, r8, lr}
   11320:	subs	r4, r0, #0
   11324:	bne	1133c <print_schema@@Base+0x20>
   11328:	ldr	r3, [pc, #588]	; 1157c <print_schema@@Base+0x260>
   1132c:	ldr	r1, [pc, #588]	; 11580 <print_schema@@Base+0x264>
   11330:	ldr	r0, [pc, #588]	; 11584 <print_schema@@Base+0x268>
   11334:	mov	r2, #237	; 0xed
   11338:	bl	10950 <__assert_fail@plt>
   1133c:	ldr	r3, [r4]
   11340:	sub	r3, r4, r3
   11344:	ldrh	r2, [r3]
   11348:	cmp	r2, #5
   1134c:	bls	114d8 <print_schema@@Base+0x1bc>
   11350:	ldrh	r3, [r3, #4]
   11354:	cmp	r3, #0
   11358:	beq	114d8 <print_schema@@Base+0x1bc>
   1135c:	mov	r0, #123	; 0x7b
   11360:	ldr	r6, [r4, r3]
   11364:	add	r5, r4, r3
   11368:	bl	10914 <putchar@plt>
   1136c:	ldr	r0, [pc, #532]	; 11588 <print_schema@@Base+0x26c>
   11370:	bl	10884 <printf@plt>
   11374:	add	r7, r6, #4
   11378:	add	r7, r5, r7
   1137c:	mov	r8, #44	; 0x2c
   11380:	add	r5, r5, r6
   11384:	mov	r6, #0
   11388:	cmp	r7, #0
   1138c:	beq	1139c <print_schema@@Base+0x80>
   11390:	ldr	r3, [r7, #-4]
   11394:	cmp	r6, r3
   11398:	bcc	114ec <print_schema@@Base+0x1d0>
   1139c:	mov	r0, #93	; 0x5d
   113a0:	bl	10914 <putchar@plt>
   113a4:	ldr	r3, [r4]
   113a8:	sub	r3, r4, r3
   113ac:	ldrh	r2, [r3]
   113b0:	cmp	r2, #7
   113b4:	bls	11534 <print_schema@@Base+0x218>
   113b8:	ldrh	r3, [r3, #6]
   113bc:	cmp	r3, #0
   113c0:	beq	11534 <print_schema@@Base+0x218>
   113c4:	ldr	r0, [pc, #448]	; 1158c <print_schema@@Base+0x270>
   113c8:	ldr	r6, [r4, r3]
   113cc:	add	r5, r4, r3
   113d0:	bl	10884 <printf@plt>
   113d4:	add	r7, r6, #4
   113d8:	add	r7, r5, r7
   113dc:	mov	r8, #44	; 0x2c
   113e0:	add	r5, r5, r6
   113e4:	mov	r6, #0
   113e8:	cmp	r7, #0
   113ec:	beq	113fc <print_schema@@Base+0xe0>
   113f0:	ldr	r3, [r7, #-4]
   113f4:	cmp	r6, r3
   113f8:	bcc	11540 <print_schema@@Base+0x224>
   113fc:	mov	r0, #93	; 0x5d
   11400:	bl	10914 <putchar@plt>
   11404:	ldr	r3, [r4]
   11408:	sub	r3, r4, r3
   1140c:	ldrh	r2, [r3]
   11410:	cmp	r2, #9
   11414:	bls	1143c <print_schema@@Base+0x120>
   11418:	ldrh	r3, [r3, #8]
   1141c:	cmp	r3, #0
   11420:	beq	1143c <print_schema@@Base+0x120>
   11424:	add	r1, r4, r3
   11428:	ldr	r3, [r4, r3]
   1142c:	ldr	r0, [pc, #348]	; 11590 <print_schema@@Base+0x274>
   11430:	add	r3, r3, #4
   11434:	add	r1, r1, r3
   11438:	bl	10884 <printf@plt>
   1143c:	ldr	r3, [r4]
   11440:	sub	r3, r4, r3
   11444:	ldrh	r2, [r3]
   11448:	cmp	r2, #11
   1144c:	bls	11474 <print_schema@@Base+0x158>
   11450:	ldrh	r3, [r3, #10]
   11454:	cmp	r3, #0
   11458:	beq	11474 <print_schema@@Base+0x158>
   1145c:	add	r1, r4, r3
   11460:	ldr	r3, [r4, r3]
   11464:	ldr	r0, [pc, #296]	; 11594 <print_schema@@Base+0x278>
   11468:	add	r3, r3, #4
   1146c:	add	r1, r1, r3
   11470:	bl	10884 <printf@plt>
   11474:	ldr	r3, [r4]
   11478:	sub	r3, r4, r3
   1147c:	ldrh	r2, [r3]
   11480:	cmp	r2, #13
   11484:	bls	114cc <print_schema@@Base+0x1b0>
   11488:	ldrh	r3, [r3, #12]
   1148c:	cmp	r3, #0
   11490:	beq	114cc <print_schema@@Base+0x1b0>
   11494:	ldr	r0, [pc, #252]	; 11598 <print_schema@@Base+0x27c>
   11498:	bl	10884 <printf@plt>
   1149c:	ldr	r3, [r4]
   114a0:	sub	r3, r4, r3
   114a4:	ldrh	r2, [r3]
   114a8:	cmp	r2, #13
   114ac:	movls	r0, #0
   114b0:	bls	114c8 <print_schema@@Base+0x1ac>
   114b4:	ldrh	r0, [r3, #12]
   114b8:	cmp	r0, #0
   114bc:	addne	r3, r4, r0
   114c0:	ldrne	r0, [r4, r0]
   114c4:	addne	r0, r3, r0
   114c8:	bl	10cd0 <print_object@@Base>
   114cc:	ldr	r0, [pc, #200]	; 1159c <print_schema@@Base+0x280>
   114d0:	pop	{r4, r5, r6, r7, r8, lr}
   114d4:	b	108cc <puts@plt>
   114d8:	ldr	r3, [pc, #156]	; 1157c <print_schema@@Base+0x260>
   114dc:	mov	r2, #237	; 0xed
   114e0:	ldr	r1, [pc, #152]	; 11580 <print_schema@@Base+0x264>
   114e4:	ldr	r0, [pc, #180]	; 115a0 <print_schema@@Base+0x284>
   114e8:	b	11338 <print_schema@@Base+0x1c>
   114ec:	cmp	r6, #0
   114f0:	beq	114fc <print_schema@@Base+0x1e0>
   114f4:	mov	r0, r8
   114f8:	bl	10914 <putchar@plt>
   114fc:	ldr	r3, [r7, #-4]
   11500:	add	r5, r5, #4
   11504:	cmp	r6, r3
   11508:	bcc	11520 <print_schema@@Base+0x204>
   1150c:	ldr	r3, [pc, #144]	; 115a4 <print_schema@@Base+0x288>
   11510:	mov	r2, #215	; 0xd7
   11514:	ldr	r1, [pc, #100]	; 11580 <print_schema@@Base+0x264>
   11518:	ldr	r0, [pc, #136]	; 115a8 <print_schema@@Base+0x28c>
   1151c:	b	11338 <print_schema@@Base+0x1c>
   11520:	ldr	r0, [r5]
   11524:	add	r6, r6, #1
   11528:	add	r0, r5, r0
   1152c:	bl	10cd0 <print_object@@Base>
   11530:	b	11388 <print_schema@@Base+0x6c>
   11534:	ldr	r3, [pc, #112]	; 115ac <print_schema@@Base+0x290>
   11538:	mov	r2, #238	; 0xee
   1153c:	b	114e0 <print_schema@@Base+0x1c4>
   11540:	cmp	r6, #0
   11544:	beq	11550 <print_schema@@Base+0x234>
   11548:	mov	r0, r8
   1154c:	bl	10914 <putchar@plt>
   11550:	ldr	r3, [r7, #-4]
   11554:	add	r5, r5, #4
   11558:	cmp	r6, r3
   1155c:	ldrcs	r3, [pc, #76]	; 115b0 <print_schema@@Base+0x294>
   11560:	movcs	r2, #174	; 0xae
   11564:	bcs	11514 <print_schema@@Base+0x1f8>
   11568:	ldr	r0, [r5]
   1156c:	add	r6, r6, #1
   11570:	add	r0, r5, r0
   11574:	bl	11068 <print_enum@@Base>
   11578:	b	113e8 <print_schema@@Base+0xcc>
   1157c:	andeq	r1, r1, r4, ror #17
   11580:	andeq	r1, r1, r6, asr #18
   11584:	andeq	r1, r1, r4, lsr #19
   11588:	andeq	r1, r1, lr, asr #22
   1158c:	andeq	r1, r1, sl, asr fp
   11590:	andeq	r1, r1, r5, ror #22
   11594:	andeq	r1, r1, r8, ror fp
   11598:	andeq	r1, r1, r9, lsl #23
   1159c:	muleq	r1, r8, fp
   115a0:	andeq	r1, r1, r0, lsl #20
   115a4:	strdeq	r1, [r1], -lr
   115a8:	andeq	r1, r1, sl, lsr sl
   115ac:	andeq	r1, r1, r7, lsl r9
   115b0:	andeq	r1, r1, pc, lsr #18

000115b4 <load_and_dump_schema@@Base>:
   115b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115b8:	mov	r8, r0
   115bc:	ldr	r1, [pc, #312]	; 116fc <load_and_dump_schema@@Base+0x148>
   115c0:	bl	10890 <fopen@plt>
   115c4:	subs	r6, r0, #0
   115c8:	beq	11634 <load_and_dump_schema@@Base+0x80>
   115cc:	mov	r2, #2
   115d0:	mov	r1, #0
   115d4:	bl	1092c <fseek@plt>
   115d8:	mov	r0, r6
   115dc:	bl	108a8 <ftell@plt>
   115e0:	ldr	r3, [pc, #280]	; 11700 <load_and_dump_schema@@Base+0x14c>
   115e4:	cmp	r0, r3
   115e8:	mov	r5, r0
   115ec:	bhi	11618 <load_and_dump_schema@@Base+0x64>
   115f0:	mov	r0, r6
   115f4:	bl	108b4 <rewind@plt>
   115f8:	cmp	r5, #0
   115fc:	movne	r0, r5
   11600:	moveq	r0, #1
   11604:	bl	108d8 <malloc@plt>
   11608:	subs	r4, r0, #0
   1160c:	movne	r7, #0
   11610:	movne	r9, #1
   11614:	bne	11658 <load_and_dump_schema@@Base+0xa4>
   11618:	mov	r4, #0
   1161c:	mov	r0, r6
   11620:	bl	10920 <fclose@plt>
   11624:	cmp	r4, #0
   11628:	beq	11634 <load_and_dump_schema@@Base+0x80>
   1162c:	mov	r0, r4
   11630:	bl	1089c <free@plt>
   11634:	ldr	r3, [pc, #200]	; 11704 <load_and_dump_schema@@Base+0x150>
   11638:	mov	r2, r8
   1163c:	ldr	r1, [pc, #196]	; 11708 <load_and_dump_schema@@Base+0x154>
   11640:	ldr	r0, [r3]
   11644:	bl	10908 <fprintf@plt>
   11648:	mvn	r5, #0
   1164c:	mov	r0, r5
   11650:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11654:	add	r7, r7, r0
   11658:	mov	r3, r6
   1165c:	sub	r2, r5, r7
   11660:	mov	r1, r9
   11664:	add	r0, r4, r7
   11668:	bl	108c0 <fread@plt>
   1166c:	cmp	r0, #0
   11670:	bne	11654 <load_and_dump_schema@@Base+0xa0>
   11674:	cmp	r5, r7
   11678:	bne	1161c <load_and_dump_schema@@Base+0x68>
   1167c:	mov	r0, r6
   11680:	bl	10920 <fclose@plt>
   11684:	cmp	r5, #11
   11688:	bhi	116b0 <load_and_dump_schema@@Base+0xfc>
   1168c:	ldr	r3, [pc, #112]	; 11704 <load_and_dump_schema@@Base+0x150>
   11690:	mov	r2, r8
   11694:	ldr	r1, [pc, #112]	; 1170c <load_and_dump_schema@@Base+0x158>
   11698:	ldr	r0, [r3]
   1169c:	bl	10908 <fprintf@plt>
   116a0:	mvn	r5, #0
   116a4:	mov	r0, r4
   116a8:	bl	1089c <free@plt>
   116ac:	b	1164c <load_and_dump_schema@@Base+0x98>
   116b0:	mov	r0, r4
   116b4:	bl	10b2c <_start@@Base+0x17c>
   116b8:	subs	r5, r0, #0
   116bc:	bne	116e0 <load_and_dump_schema@@Base+0x12c>
   116c0:	add	r0, r4, #4
   116c4:	bl	10b2c <_start@@Base+0x17c>
   116c8:	ldr	r3, [pc, #52]	; 11704 <load_and_dump_schema@@Base+0x150>
   116cc:	ldr	r1, [r3]
   116d0:	subs	r5, r0, #0
   116d4:	beq	116f0 <load_and_dump_schema@@Base+0x13c>
   116d8:	ldr	r0, [pc, #48]	; 11710 <load_and_dump_schema@@Base+0x15c>
   116dc:	bl	10938 <fputs@plt>
   116e0:	mov	r0, r5
   116e4:	bl	1131c <print_schema@@Base>
   116e8:	mov	r5, #0
   116ec:	b	116a4 <load_and_dump_schema@@Base+0xf0>
   116f0:	ldr	r0, [pc, #28]	; 11714 <load_and_dump_schema@@Base+0x160>
   116f4:	bl	10938 <fputs@plt>
   116f8:	b	116a0 <load_and_dump_schema@@Base+0xec>
   116fc:	muleq	r1, sl, fp
   11700:	andeq	r2, r0, r0, lsl r7
   11704:	andeq	r2, r2, r0, rrx
   11708:	andeq	r1, r1, r6, ror #23
   1170c:	muleq	r1, sp, fp
   11710:			; <UNDEFINED> instruction: 0x00011bbd
   11714:	andeq	r1, r1, pc, lsl #24

00011718 <__libc_csu_init@@Base>:
   11718:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1171c:	mov	r7, r0
   11720:	ldr	r6, [pc, #72]	; 11770 <__libc_csu_init@@Base+0x58>
   11724:	ldr	r5, [pc, #72]	; 11774 <__libc_csu_init@@Base+0x5c>
   11728:	add	r6, pc, r6
   1172c:	add	r5, pc, r5
   11730:	sub	r6, r6, r5
   11734:	mov	r8, r1
   11738:	mov	r9, r2
   1173c:	bl	10864 <printf@plt-0x20>
   11740:	asrs	r6, r6, #2
   11744:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11748:	mov	r4, #0
   1174c:	add	r4, r4, #1
   11750:	ldr	r3, [r5], #4
   11754:	mov	r2, r9
   11758:	mov	r1, r8
   1175c:	mov	r0, r7
   11760:	blx	r3
   11764:	cmp	r6, r4
   11768:	bne	1174c <__libc_csu_init@@Base+0x34>
   1176c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11770:	andeq	r0, r1, r0, ror #15
   11774:	ldrdeq	r0, [r1], -r8

00011778 <__libc_csu_fini@@Base>:
   11778:	bx	lr

Disassembly of section .fini:

0001177c <.fini>:
   1177c:	push	{r3, lr}
   11780:	pop	{r3, pc}
