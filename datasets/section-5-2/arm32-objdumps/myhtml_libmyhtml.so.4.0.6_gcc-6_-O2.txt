
../repos/myhtml/libmyhtml.so.4.0.6:     file format elf32-littlearm


Disassembly of section .init:

0000fba0 <.init>:
    fba0:	push	{r3, lr}
    fba4:	bl	110b4 <mythread_init@plt+0xc>
    fba8:	pop	{r3, pc}

Disassembly of section .plt:

0000fbac <pthread_mutex_unlock@plt-0x14>:
    fbac:	push	{lr}		; (str lr, [sp, #-4]!)
    fbb0:	ldr	lr, [pc, #4]	; fbbc <pthread_mutex_unlock@plt-0x4>
    fbb4:	add	lr, pc, lr
    fbb8:	ldr	pc, [lr, #8]!
    fbbc:	andseq	r5, r0, r4, asr #8

0000fbc0 <pthread_mutex_unlock@plt>:
    fbc0:	add	ip, pc, #1048576	; 0x100000
    fbc4:	add	ip, ip, #20480	; 0x5000
    fbc8:	ldr	pc, [ip, #1092]!	; 0x444

0000fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>:
    fbcc:	add	ip, pc, #1048576	; 0x100000
    fbd0:	add	ip, ip, #20480	; 0x5000
    fbd4:	ldr	pc, [ip, #1084]!	; 0x43c

0000fbd8 <mycore_realloc@plt>:
    fbd8:	add	ip, pc, #1048576	; 0x100000
    fbdc:	add	ip, ip, #20480	; 0x5000
    fbe0:	ldr	pc, [ip, #1076]!	; 0x434

0000fbe4 <calloc@plt>:
    fbe4:	add	ip, pc, #1048576	; 0x100000
    fbe8:	add	ip, ip, #20480	; 0x5000
    fbec:	ldr	pc, [ip, #1068]!	; 0x42c

0000fbf0 <mycore_strcmp@plt>:
    fbf0:	add	ip, pc, #1048576	; 0x100000
    fbf4:	add	ip, ip, #20480	; 0x5000
    fbf8:	ldr	pc, [ip, #1060]!	; 0x424

0000fbfc <myhtml_tree_node_insert_root@plt>:
    fbfc:	add	ip, pc, #1048576	; 0x100000
    fc00:	add	ip, ip, #20480	; 0x5000
    fc04:	ldr	pc, [ip, #1052]!	; 0x41c

0000fc08 <mythread_queue_list_entry_delete@plt>:
    fc08:	add	ip, pc, #1048576	; 0x100000
    fc0c:	add	ip, ip, #20480	; 0x5000
    fc10:	ldr	pc, [ip, #1044]!	; 0x414

0000fc14 <myencoding_string_append_chunk@plt>:
    fc14:	add	ip, pc, #1048576	; 0x100000
    fc18:	add	ip, ip, #20480	; 0x5000
    fc1c:	ldr	pc, [ip, #1036]!	; 0x40c

0000fc20 <myhtml_token_release_and_check_doctype_attributes@plt>:
    fc20:	add	ip, pc, #1048576	; 0x100000
    fc24:	add	ip, ip, #20480	; 0x5000
    fc28:	ldr	pc, [ip, #1028]!	; 0x404

0000fc2c <raise@plt>:
    fc2c:	add	ip, pc, #1048576	; 0x100000
    fc30:	add	ip, ip, #20480	; 0x5000
    fc34:	ldr	pc, [ip, #1020]!	; 0x3fc

0000fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>:
    fc38:	add	ip, pc, #1048576	; 0x100000
    fc3c:	add	ip, ip, #20480	; 0x5000
    fc40:	ldr	pc, [ip, #1012]!	; 0x3f4

0000fc44 <myencoding_detect_unicode@plt>:
    fc44:	add	ip, pc, #1048576	; 0x100000
    fc48:	add	ip, ip, #20480	; 0x5000
    fc4c:	ldr	pc, [ip, #1004]!	; 0x3ec

0000fc50 <myhtml_tree_element_in_scope_by_node@plt>:
    fc50:	add	ip, pc, #1048576	; 0x100000
    fc54:	add	ip, ip, #20480	; 0x5000
    fc58:	ldr	pc, [ip, #996]!	; 0x3e4

0000fc5c <mythread_nanosleep_clean@plt>:
    fc5c:	add	ip, pc, #1048576	; 0x100000
    fc60:	add	ip, ip, #20480	; 0x5000
    fc64:	ldr	pc, [ip, #988]!	; 0x3dc

0000fc68 <myhtml_tree_node_insert_html_element@plt>:
    fc68:	add	ip, pc, #1048576	; 0x100000
    fc6c:	add	ip, ip, #20480	; 0x5000
    fc70:	ldr	pc, [ip, #980]!	; 0x3d4

0000fc74 <myhtml_tree_token_list_destroy@plt>:
    fc74:	add	ip, pc, #1048576	; 0x100000
    fc78:	add	ip, ip, #20480	; 0x5000
    fc7c:	ldr	pc, [ip, #972]!	; 0x3cc

0000fc80 <mcobject_async_init@plt>:
    fc80:	add	ip, pc, #1048576	; 0x100000
    fc84:	add	ip, ip, #20480	; 0x5000
    fc88:	ldr	pc, [ip, #964]!	; 0x3c4

0000fc8c <myhtml_tree_temp_tag_name_append@plt>:
    fc8c:	add	ip, pc, #1048576	; 0x100000
    fc90:	add	ip, ip, #20480	; 0x5000
    fc94:	ldr	pc, [ip, #956]!	; 0x3bc

0000fc98 <myhtml_tokenizer_fragment_init@plt>:
    fc98:	add	ip, pc, #1048576	; 0x100000
    fc9c:	add	ip, ip, #20480	; 0x5000
    fca0:	ldr	pc, [ip, #948]!	; 0x3b4

0000fca4 <mythread_nanosleep_create@plt>:
    fca4:	add	ip, pc, #1048576	; 0x100000
    fca8:	add	ip, ip, #20480	; 0x5000
    fcac:	ldr	pc, [ip, #940]!	; 0x3ac

0000fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>:
    fcb0:	add	ip, pc, #1048576	; 0x100000
    fcb4:	add	ip, ip, #20480	; 0x5000
    fcb8:	ldr	pc, [ip, #932]!	; 0x3a4

0000fcbc <myhtml_tokenizer_state_init@plt>:
    fcbc:	add	ip, pc, #1048576	; 0x100000
    fcc0:	add	ip, ip, #20480	; 0x5000
    fcc4:	ldr	pc, [ip, #924]!	; 0x39c

0000fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>:
    fcc8:	add	ip, pc, #1048576	; 0x100000
    fccc:	add	ip, ip, #20480	; 0x5000
    fcd0:	ldr	pc, [ip, #916]!	; 0x394

0000fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>:
    fcd4:	add	ip, pc, #1048576	; 0x100000
    fcd8:	add	ip, ip, #20480	; 0x5000
    fcdc:	ldr	pc, [ip, #908]!	; 0x38c

0000fce0 <myhtml_tree_wait_for_last_done_token@plt>:
    fce0:	add	ip, pc, #1048576	; 0x100000
    fce4:	add	ip, ip, #20480	; 0x5000
    fce8:	ldr	pc, [ip, #900]!	; 0x384

0000fcec <mythread_queue_get_prev_node@plt>:
    fcec:	add	ip, pc, #1048576	; 0x100000
    fcf0:	add	ip, ip, #20480	; 0x5000
    fcf4:	ldr	pc, [ip, #892]!	; 0x37c

0000fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>:
    fcf8:	add	ip, pc, #1048576	; 0x100000
    fcfc:	add	ip, ip, #20480	; 0x5000
    fd00:	ldr	pc, [ip, #884]!	; 0x374

0000fd04 <setbuf@plt>:
    fd04:	add	ip, pc, #1048576	; 0x100000
    fd08:	add	ip, ip, #20480	; 0x5000
    fd0c:	ldr	pc, [ip, #876]!	; 0x36c

0000fd10 <mycore_utils_avl_tree_find_min@plt>:
    fd10:	add	ip, pc, #1048576	; 0x100000
    fd14:	add	ip, ip, #20480	; 0x5000
    fd18:	ldr	pc, [ip, #868]!	; 0x364

0000fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>:
    fd1c:	add	ip, pc, #1048576	; 0x100000
    fd20:	add	ip, ip, #20480	; 0x5000
    fd24:	ldr	pc, [ip, #860]!	; 0x35c

0000fd28 <myhtml_stream_buffer_destroy@plt>:
    fd28:	add	ip, pc, #1048576	; 0x100000
    fd2c:	add	ip, ip, #20480	; 0x5000
    fd30:	ldr	pc, [ip, #852]!	; 0x354

0000fd34 <myhtml_token_attr_match_case@plt>:
    fd34:	add	ip, pc, #1048576	; 0x100000
    fd38:	add	ip, ip, #20480	; 0x5000
    fd3c:	ldr	pc, [ip, #844]!	; 0x34c

0000fd40 <__cxa_finalize@plt>:
    fd40:	add	ip, pc, #1048576	; 0x100000
    fd44:	add	ip, ip, #20480	; 0x5000
    fd48:	ldr	pc, [ip, #836]!	; 0x344

0000fd4c <mycore_utils_avl_tree_node_rotate_right@plt>:
    fd4c:	add	ip, pc, #1048576	; 0x100000
    fd50:	add	ip, ip, #20480	; 0x5000
    fd54:	ldr	pc, [ip, #828]!	; 0x33c

0000fd58 <mcobject_async_create@plt>:
    fd58:	add	ip, pc, #1048576	; 0x100000
    fd5c:	add	ip, ip, #20480	; 0x5000
    fd60:	ldr	pc, [ip, #820]!	; 0x334

0000fd64 <mythread_queue_clean@plt>:
    fd64:	add	ip, pc, #1048576	; 0x100000
    fd68:	add	ip, ip, #20480	; 0x5000
    fd6c:	ldr	pc, [ip, #812]!	; 0x32c

0000fd70 <mcsync_mutex_destroy@plt>:
    fd70:	add	ip, pc, #1048576	; 0x100000
    fd74:	add	ip, ip, #20480	; 0x5000
    fd78:	ldr	pc, [ip, #804]!	; 0x324

0000fd7c <myhtml_parser_worker@plt>:
    fd7c:	add	ip, pc, #1048576	; 0x100000
    fd80:	add	ip, ip, #20480	; 0x5000
    fd84:	ldr	pc, [ip, #796]!	; 0x31c

0000fd88 <mythread_thread_create@plt>:
    fd88:	add	ip, pc, #1048576	; 0x100000
    fd8c:	add	ip, ip, #20480	; 0x5000
    fd90:	ldr	pc, [ip, #788]!	; 0x314

0000fd94 <mcsync_create@plt>:
    fd94:	add	ip, pc, #1048576	; 0x100000
    fd98:	add	ip, ip, #20480	; 0x5000
    fd9c:	ldr	pc, [ip, #780]!	; 0x30c

0000fda0 <myhtml_insertion_mode_in_template@plt>:
    fda0:	add	ip, pc, #1048576	; 0x100000
    fda4:	add	ip, ip, #20480	; 0x5000
    fda8:	ldr	pc, [ip, #772]!	; 0x304

0000fdac <mycore_utils_avl_tree_node_balance_factor@plt>:
    fdac:	add	ip, pc, #1048576	; 0x100000
    fdb0:	add	ip, ip, #20480	; 0x5000
    fdb4:	ldr	pc, [ip, #764]!	; 0x2fc

0000fdb8 <fopen@plt>:
    fdb8:	add	ip, pc, #1048576	; 0x100000
    fdbc:	add	ip, ip, #20480	; 0x5000
    fdc0:	ldr	pc, [ip, #756]!	; 0x2f4

0000fdc4 <mcobject_async_mem_malloc@plt>:
    fdc4:	add	ip, pc, #1048576	; 0x100000
    fdc8:	add	ip, ip, #20480	; 0x5000
    fdcc:	ldr	pc, [ip, #748]!	; 0x2ec

0000fdd0 <mcobject_destroy@plt>:
    fdd0:	add	ip, pc, #1048576	; 0x100000
    fdd4:	add	ip, ip, #20480	; 0x5000
    fdd8:	ldr	pc, [ip, #740]!	; 0x2e4

0000fddc <pthread_attr_destroy@plt>:
    fddc:	add	ip, pc, #1048576	; 0x100000
    fde0:	add	ip, ip, #20480	; 0x5000
    fde4:	ldr	pc, [ip, #732]!	; 0x2dc

0000fde8 <myhtml_clean@plt>:
    fde8:	add	ip, pc, #1048576	; 0x100000
    fdec:	add	ip, ip, #20480	; 0x5000
    fdf0:	ldr	pc, [ip, #724]!	; 0x2d4

0000fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>:
    fdf4:	add	ip, pc, #1048576	; 0x100000
    fdf8:	add	ip, ip, #20480	; 0x5000
    fdfc:	ldr	pc, [ip, #716]!	; 0x2cc

0000fe00 <pthread_mutex_destroy@plt>:
    fe00:	add	ip, pc, #1048576	; 0x100000
    fe04:	add	ip, ip, #20480	; 0x5000
    fe08:	ldr	pc, [ip, #708]!	; 0x2c4

0000fe0c <fflush@plt>:
    fe0c:	add	ip, pc, #1048576	; 0x100000
    fe10:	add	ip, ip, #20480	; 0x5000
    fe14:	ldr	pc, [ip, #700]!	; 0x2bc

0000fe18 <mythread_create@plt>:
    fe18:	add	ip, pc, #1048576	; 0x100000
    fe1c:	add	ip, ip, #20480	; 0x5000
    fe20:	ldr	pc, [ip, #692]!	; 0x2b4

0000fe24 <myhtml_insertion_mode_in_foreign_content@plt>:
    fe24:	add	ip, pc, #1048576	; 0x100000
    fe28:	add	ip, ip, #20480	; 0x5000
    fe2c:	ldr	pc, [ip, #684]!	; 0x2ac

0000fe30 <myhtml_tree_generate_all_implied_end_tags@plt>:
    fe30:	add	ip, pc, #1048576	; 0x100000
    fe34:	add	ip, ip, #20480	; 0x5000
    fe38:	ldr	pc, [ip, #676]!	; 0x2a4

0000fe3c <myencoding_string_append_lowercase_ascii@plt>:
    fe3c:	add	ip, pc, #1048576	; 0x100000
    fe40:	add	ip, ip, #20480	; 0x5000
    fe44:	ldr	pc, [ip, #668]!	; 0x29c

0000fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>:
    fe48:	add	ip, pc, #1048576	; 0x100000
    fe4c:	add	ip, ip, #20480	; 0x5000
    fe50:	ldr	pc, [ip, #660]!	; 0x294

0000fe54 <myhread_increase_id_by_entry_id@plt>:
    fe54:	add	ip, pc, #1048576	; 0x100000
    fe58:	add	ip, ip, #20480	; 0x5000
    fe5c:	ldr	pc, [ip, #652]!	; 0x28c

0000fe60 <myhtml_tree_incomming_buffer_make_data@plt>:
    fe60:	add	ip, pc, #1048576	; 0x100000
    fe64:	add	ip, ip, #20480	; 0x5000
    fe68:	ldr	pc, [ip, #644]!	; 0x284

0000fe6c <_myhtml_token_create_copy_srt@plt>:
    fe6c:	add	ip, pc, #1048576	; 0x100000
    fe70:	add	ip, ip, #20480	; 0x5000
    fe74:	ldr	pc, [ip, #636]!	; 0x27c

0000fe78 <memmove@plt>:
    fe78:	add	ip, pc, #1048576	; 0x100000
    fe7c:	add	ip, ip, #20480	; 0x5000
    fe80:	ldr	pc, [ip, #628]!	; 0x274

0000fe84 <mythread_thread_attr_init@plt>:
    fe84:	add	ip, pc, #1048576	; 0x100000
    fe88:	add	ip, ip, #20480	; 0x5000
    fe8c:	ldr	pc, [ip, #620]!	; 0x26c

0000fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>:
    fe90:	add	ip, pc, #1048576	; 0x100000
    fe94:	add	ip, ip, #20480	; 0x5000
    fe98:	ldr	pc, [ip, #612]!	; 0x264

0000fe9c <myhtml_rules_tree_dispatcher@plt>:
    fe9c:	add	ip, pc, #1048576	; 0x100000
    fea0:	add	ip, ip, #20480	; 0x5000
    fea4:	ldr	pc, [ip, #604]!	; 0x25c

0000fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>:
    fea8:	add	ip, pc, #1048576	; 0x100000
    feac:	add	ip, ip, #20480	; 0x5000
    feb0:	ldr	pc, [ip, #596]!	; 0x254

0000feb4 <free@plt>:
    feb4:	add	ip, pc, #1048576	; 0x100000
    feb8:	add	ip, ip, #20480	; 0x5000
    febc:	ldr	pc, [ip, #588]!	; 0x24c

0000fec0 <mchar_async_cache_malloc@plt>:
    fec0:	add	ip, pc, #1048576	; 0x100000
    fec4:	add	ip, ip, #20480	; 0x5000
    fec8:	ldr	pc, [ip, #580]!	; 0x244

0000fecc <mythread_function_see_opt@plt>:
    fecc:	add	ip, pc, #1048576	; 0x100000
    fed0:	add	ip, ip, #20480	; 0x5000
    fed4:	ldr	pc, [ip, #572]!	; 0x23c

0000fed8 <myencoding_detect_utf_16@plt>:
    fed8:	add	ip, pc, #1048576	; 0x100000
    fedc:	add	ip, ip, #20480	; 0x5000
    fee0:	ldr	pc, [ip, #564]!	; 0x234

0000fee4 <mcobject_chunk_malloc@plt>:
    fee4:	add	ip, pc, #1048576	; 0x100000
    fee8:	add	ip, ip, #20480	; 0x5000
    feec:	ldr	pc, [ip, #556]!	; 0x22c

0000fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>:
    fef0:	add	ip, pc, #1048576	; 0x100000
    fef4:	add	ip, ip, #20480	; 0x5000
    fef8:	ldr	pc, [ip, #548]!	; 0x224

0000fefc <mcsync_mutex_unlock@plt>:
    fefc:	add	ip, pc, #1048576	; 0x100000
    ff00:	add	ip, ip, #20480	; 0x5000
    ff04:	ldr	pc, [ip, #540]!	; 0x21c

0000ff08 <pthread_mutex_lock@plt>:
    ff08:	add	ip, pc, #1048576	; 0x100000
    ff0c:	add	ip, ip, #20480	; 0x5000
    ff10:	ldr	pc, [ip, #532]!	; 0x214

0000ff14 <mycore_calloc@plt>:
    ff14:	add	ip, pc, #1048576	; 0x100000
    ff18:	add	ip, ip, #20480	; 0x5000
    ff1c:	ldr	pc, [ip, #524]!	; 0x20c

0000ff20 <nanosleep@plt>:
    ff20:	add	ip, pc, #1048576	; 0x100000
    ff24:	add	ip, ip, #20480	; 0x5000
    ff28:	ldr	pc, [ip, #516]!	; 0x204

0000ff2c <myhtml_token_node_clone@plt>:
    ff2c:	add	ip, pc, #1048576	; 0x100000
    ff30:	add	ip, ip, #20480	; 0x5000
    ff34:	ldr	pc, [ip, #508]!	; 0x1fc

0000ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>:
    ff38:	add	ip, pc, #1048576	; 0x100000
    ff3c:	add	ip, ip, #20480	; 0x5000
    ff40:	ldr	pc, [ip, #500]!	; 0x1f4

0000ff44 <mchar_sync_chunk_insert_after@plt>:
    ff44:	add	ip, pc, #1048576	; 0x100000
    ff48:	add	ip, ip, #20480	; 0x5000
    ff4c:	ldr	pc, [ip, #492]!	; 0x1ec

0000ff50 <ferror@plt>:
    ff50:	add	ip, pc, #1048576	; 0x100000
    ff54:	add	ip, ip, #20480	; 0x5000
    ff58:	ldr	pc, [ip, #484]!	; 0x1e4

0000ff5c <memcpy@plt>:
    ff5c:	add	ip, pc, #1048576	; 0x100000
    ff60:	add	ip, ip, #20480	; 0x5000
    ff64:	ldr	pc, [ip, #476]!	; 0x1dc

0000ff68 <myencoding_name_entry_by_name@plt>:
    ff68:	add	ip, pc, #1048576	; 0x100000
    ff6c:	add	ip, ip, #20480	; 0x5000
    ff70:	ldr	pc, [ip, #468]!	; 0x1d4

0000ff74 <myhtml_token_adjust_mathml_attributes@plt>:
    ff74:	add	ip, pc, #1048576	; 0x100000
    ff78:	add	ip, ip, #20480	; 0x5000
    ff7c:	ldr	pc, [ip, #460]!	; 0x1cc

0000ff80 <mcobject_free@plt>:
    ff80:	add	ip, pc, #1048576	; 0x100000
    ff84:	add	ip, ip, #20480	; 0x5000
    ff88:	ldr	pc, [ip, #452]!	; 0x1c4

0000ff8c <myhtml_tree_node_insert_text@plt>:
    ff8c:	add	ip, pc, #1048576	; 0x100000
    ff90:	add	ip, ip, #20480	; 0x5000
    ff94:	ldr	pc, [ip, #444]!	; 0x1bc

0000ff98 <myhtml_tag_set_category@plt>:
    ff98:	add	ip, pc, #1048576	; 0x100000
    ff9c:	add	ip, ip, #20480	; 0x5000
    ffa0:	ldr	pc, [ip, #436]!	; 0x1b4

0000ffa4 <mcsync_spin_destroy@plt>:
    ffa4:	add	ip, pc, #1048576	; 0x100000
    ffa8:	add	ip, ip, #20480	; 0x5000
    ffac:	ldr	pc, [ip, #428]!	; 0x1ac

0000ffb0 <myhtml_tree_template_insertion_append@plt>:
    ffb0:	add	ip, pc, #1048576	; 0x100000
    ffb4:	add	ip, ip, #20480	; 0x5000
    ffb8:	ldr	pc, [ip, #420]!	; 0x1a4

0000ffbc <mchar_async_realloc@plt>:
    ffbc:	add	ip, pc, #1048576	; 0x100000
    ffc0:	add	ip, ip, #20480	; 0x5000
    ffc4:	ldr	pc, [ip, #412]!	; 0x19c

0000ffc8 <pthread_mutex_init@plt>:
    ffc8:	add	ip, pc, #1048576	; 0x100000
    ffcc:	add	ip, ip, #20480	; 0x5000
    ffd0:	ldr	pc, [ip, #404]!	; 0x194

0000ffd4 <myhtml_tokenizer_state_bogus_comment@plt>:
    ffd4:	add	ip, pc, #1048576	; 0x100000
    ffd8:	add	ip, ip, #20480	; 0x5000
    ffdc:	ldr	pc, [ip, #396]!	; 0x18c

0000ffe0 <myhtml_tree_node_create@plt>:
    ffe0:	add	ip, pc, #1048576	; 0x100000
    ffe4:	add	ip, ip, #20480	; 0x5000
    ffe8:	ldr	pc, [ip, #388]!	; 0x184

0000ffec <myhtml_tree_node_delete_recursive@plt>:
    ffec:	add	ip, pc, #1048576	; 0x100000
    fff0:	add	ip, ip, #20480	; 0x5000
    fff4:	ldr	pc, [ip, #380]!	; 0x17c

0000fff8 <myhtml_tag_static_get_by_id@plt>:
    fff8:	add	ip, pc, #1048576	; 0x100000
    fffc:	add	ip, ip, #20480	; 0x5000
   10000:	ldr	pc, [ip, #372]!	; 0x174

00010004 <myhtml_token_attr_clean@plt>:
   10004:	add	ip, pc, #1048576	; 0x100000
   10008:	add	ip, ip, #20480	; 0x5000
   1000c:	ldr	pc, [ip, #364]!	; 0x16c

00010010 <myhtml_tag_add@plt>:
   10010:	add	ip, pc, #1048576	; 0x100000
   10014:	add	ip, ip, #20480	; 0x5000
   10018:	ldr	pc, [ip, #356]!	; 0x164

0001001c <mcobject_create@plt>:
   1001c:	add	ip, pc, #1048576	; 0x100000
   10020:	add	ip, ip, #20480	; 0x5000
   10024:	ldr	pc, [ip, #348]!	; 0x15c

00010028 <myhtml_queue_add@plt>:
   10028:	add	ip, pc, #1048576	; 0x100000
   1002c:	add	ip, ip, #20480	; 0x5000
   10030:	ldr	pc, [ip, #340]!	; 0x154

00010034 <pthread_mutex_trylock@plt>:
   10034:	add	ip, pc, #1048576	; 0x100000
   10038:	add	ip, ip, #20480	; 0x5000
   1003c:	ldr	pc, [ip, #332]!	; 0x14c

00010040 <myhtml_tree_is_mathml_integration_point@plt>:
   10040:	add	ip, pc, #1048576	; 0x100000
   10044:	add	ip, ip, #20480	; 0x5000
   10048:	ldr	pc, [ip, #324]!	; 0x144

0001004c <mcobject_async_free@plt>:
   1004c:	add	ip, pc, #1048576	; 0x100000
   10050:	add	ip, ip, #20480	; 0x5000
   10054:	ldr	pc, [ip, #316]!	; 0x13c

00010058 <myhtml_insertion_mode_in_head@plt>:
   10058:	add	ip, pc, #1048576	; 0x100000
   1005c:	add	ip, ip, #20480	; 0x5000
   10060:	ldr	pc, [ip, #308]!	; 0x134

00010064 <ftell@plt>:
   10064:	add	ip, pc, #1048576	; 0x100000
   10068:	add	ip, ip, #20480	; 0x5000
   1006c:	ldr	pc, [ip, #300]!	; 0x12c

00010070 <memcmp@plt>:
   10070:	add	ip, pc, #1048576	; 0x100000
   10074:	add	ip, ip, #20480	; 0x5000
   10078:	ldr	pc, [ip, #292]!	; 0x124

0001007c <mycore_utils_mhash_hash@plt>:
   1007c:	add	ip, pc, #1048576	; 0x100000
   10080:	add	ip, ip, #20480	; 0x5000
   10084:	ldr	pc, [ip, #284]!	; 0x11c

00010088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>:
   10088:	add	ip, pc, #1048576	; 0x100000
   1008c:	add	ip, ip, #20480	; 0x5000
   10090:	ldr	pc, [ip, #276]!	; 0x114

00010094 <mycore_incoming_buffer_add@plt>:
   10094:	add	ip, pc, #1048576	; 0x100000
   10098:	add	ip, ip, #20480	; 0x5000
   1009c:	ldr	pc, [ip, #268]!	; 0x10c

000100a0 <mythread_nanosleep_sleep@plt>:
   100a0:	add	ip, pc, #1048576	; 0x100000
   100a4:	add	ip, ip, #20480	; 0x5000
   100a8:	ldr	pc, [ip, #260]!	; 0x104

000100ac <mctree_insert_before@plt>:
   100ac:	add	ip, pc, #1048576	; 0x100000
   100b0:	add	ip, ip, #20480	; 0x5000
   100b4:	ldr	pc, [ip, #252]!	; 0xfc

000100b8 <mctree_destroy@plt>:
   100b8:	add	ip, pc, #1048576	; 0x100000
   100bc:	add	ip, ip, #20480	; 0x5000
   100c0:	ldr	pc, [ip, #244]!	; 0xf4

000100c4 <myhtml_tokenizer_chunk@plt>:
   100c4:	add	ip, pc, #1048576	; 0x100000
   100c8:	add	ip, ip, #20480	; 0x5000
   100cc:	ldr	pc, [ip, #236]!	; 0xec

000100d0 <myhtml_tree_active_formatting_append@plt>:
   100d0:	add	ip, pc, #1048576	; 0x100000
   100d4:	add	ip, ip, #20480	; 0x5000
   100d8:	ldr	pc, [ip, #228]!	; 0xe4

000100dc <myhtml_tree_active_formatting_destroy@plt>:
   100dc:	add	ip, pc, #1048576	; 0x100000
   100e0:	add	ip, ip, #20480	; 0x5000
   100e4:	ldr	pc, [ip, #220]!	; 0xdc

000100e8 <mythread_suspend@plt>:
   100e8:	add	ip, pc, #1048576	; 0x100000
   100ec:	add	ip, ip, #20480	; 0x5000
   100f0:	ldr	pc, [ip, #212]!	; 0xd4

000100f4 <myhtml_tokenizer_state_destroy@plt>:
   100f4:	add	ip, pc, #1048576	; 0x100000
   100f8:	add	ip, ip, #20480	; 0x5000
   100fc:	ldr	pc, [ip, #204]!	; 0xcc

00010100 <mycore_incoming_buffer_find_by_position@plt>:
   10100:	add	ip, pc, #1048576	; 0x100000
   10104:	add	ip, ip, #20480	; 0x5000
   10108:	ldr	pc, [ip, #196]!	; 0xc4

0001010c <mcobject_async_chunk_malloc@plt>:
   1010c:	add	ip, pc, #1048576	; 0x100000
   10110:	add	ip, ip, #20480	; 0x5000
   10114:	ldr	pc, [ip, #188]!	; 0xbc

00010118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>:
   10118:	add	ip, pc, #1048576	; 0x100000
   1011c:	add	ip, ip, #20480	; 0x5000
   10120:	ldr	pc, [ip, #180]!	; 0xb4

00010124 <myhtml_tree_active_formatting_find@plt>:
   10124:	add	ip, pc, #1048576	; 0x100000
   10128:	add	ip, ip, #20480	; 0x5000
   1012c:	ldr	pc, [ip, #172]!	; 0xac

00010130 <mythread_queue_list_destroy@plt>:
   10130:	add	ip, pc, #1048576	; 0x100000
   10134:	add	ip, ip, #20480	; 0x5000
   10138:	ldr	pc, [ip, #164]!	; 0xa4

0001013c <myhtml_tree_open_elements_pop_until_by_node@plt>:
   1013c:	add	ip, pc, #1048576	; 0x100000
   10140:	add	ip, ip, #20480	; 0x5000
   10144:	ldr	pc, [ip, #156]!	; 0x9c

00010148 <myhtml_stream_buffer_entry_destroy@plt>:
   10148:	add	ip, pc, #1048576	; 0x100000
   1014c:	add	ip, ip, #20480	; 0x5000
   10150:	ldr	pc, [ip, #148]!	; 0x94

00010154 <myhtml_tokenizer_begin@plt>:
   10154:	add	ip, pc, #1048576	; 0x100000
   10158:	add	ip, ip, #20480	; 0x5000
   1015c:	ldr	pc, [ip, #140]!	; 0x8c

00010160 <mchar_async_create@plt>:
   10160:	add	ip, pc, #1048576	; 0x100000
   10164:	add	ip, ip, #20480	; 0x5000
   10168:	ldr	pc, [ip, #132]!	; 0x84

0001016c <mycore_string_copy@plt>:
   1016c:	add	ip, pc, #1048576	; 0x100000
   10170:	add	ip, ip, #20480	; 0x5000
   10174:	ldr	pc, [ip, #124]!	; 0x7c

00010178 <myhtml_insertion_mode_in_table@plt>:
   10178:	add	ip, pc, #1048576	; 0x100000
   1017c:	add	ip, ip, #20480	; 0x5000
   10180:	ldr	pc, [ip, #116]!	; 0x74

00010184 <mythread_queue_list_entry_push@plt>:
   10184:	add	ip, pc, #1048576	; 0x100000
   10188:	add	ip, ip, #20480	; 0x5000
   1018c:	ldr	pc, [ip, #108]!	; 0x6c

00010190 <mythread_queue_get_current_node@plt>:
   10190:	add	ip, pc, #1048576	; 0x100000
   10194:	add	ip, ip, #20480	; 0x5000
   10198:	ldr	pc, [ip, #100]!	; 0x64

0001019c <mcobject_async_chunk_up@plt>:
   1019c:	add	ip, pc, #1048576	; 0x100000
   101a0:	add	ip, ip, #20480	; 0x5000
   101a4:	ldr	pc, [ip, #92]!	; 0x5c

000101a8 <myhtml_tree_open_elements_pop@plt>:
   101a8:	add	ip, pc, #1048576	; 0x100000
   101ac:	add	ip, ip, #20480	; 0x5000
   101b0:	ldr	pc, [ip, #84]!	; 0x54

000101b4 <mcsync_destroy@plt>:
   101b4:	add	ip, pc, #1048576	; 0x100000
   101b8:	add	ip, ip, #20480	; 0x5000
   101bc:	ldr	pc, [ip, #76]!	; 0x4c

000101c0 <myencoding_result_clean@plt>:
   101c0:	add	ip, pc, #1048576	; 0x100000
   101c4:	add	ip, ip, #20480	; 0x5000
   101c8:	ldr	pc, [ip, #68]!	; 0x44

000101cc <myhtml_string_append_with_preprocessing@plt>:
   101cc:	add	ip, pc, #1048576	; 0x100000
   101d0:	add	ip, ip, #20480	; 0x5000
   101d4:	ldr	pc, [ip, #60]!	; 0x3c

000101d8 <myhtml_token_adjust_svg_attributes@plt>:
   101d8:	add	ip, pc, #1048576	; 0x100000
   101dc:	add	ip, ip, #20480	; 0x5000
   101e0:	ldr	pc, [ip, #52]!	; 0x34

000101e4 <realloc@plt>:
   101e4:	add	ip, pc, #1048576	; 0x100000
   101e8:	add	ip, ip, #20480	; 0x5000
   101ec:	ldr	pc, [ip, #44]!	; 0x2c

000101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>:
   101f0:	add	ip, pc, #1048576	; 0x100000
   101f4:	add	ip, ip, #20480	; 0x5000
   101f8:	ldr	pc, [ip, #36]!	; 0x24

000101fc <myhtml_tree_is_html_integration_point@plt>:
   101fc:	add	ip, pc, #1048576	; 0x100000
   10200:	add	ip, ip, #20480	; 0x5000
   10204:	ldr	pc, [ip, #28]!

00010208 <myhtml_namespace_name_entry_by_name@plt>:
   10208:	add	ip, pc, #1048576	; 0x100000
   1020c:	add	ip, ip, #20480	; 0x5000
   10210:	ldr	pc, [ip, #20]!

00010214 <myencoding_detect_bom@plt>:
   10214:	add	ip, pc, #1048576	; 0x100000
   10218:	add	ip, ip, #20480	; 0x5000
   1021c:	ldr	pc, [ip, #12]!

00010220 <myhtml_tree_list_append@plt>:
   10220:	add	ip, pc, #1048576	; 0x100000
   10224:	add	ip, ip, #20480	; 0x5000
   10228:	ldr	pc, [ip, #4]!

0001022c <myhtml_tokenizer_calc_current_namespace@plt>:
   1022c:	add	ip, pc, #1048576	; 0x100000
   10230:	add	ip, ip, #4, 20	; 0x4000
   10234:	ldr	pc, [ip, #4092]!	; 0xffc

00010238 <myhtml_tree_open_elements_remove@plt>:
   10238:	add	ip, pc, #1048576	; 0x100000
   1023c:	add	ip, ip, #4, 20	; 0x4000
   10240:	ldr	pc, [ip, #4084]!	; 0xff4

00010244 <mctree_insert_child@plt>:
   10244:	add	ip, pc, #1048576	; 0x100000
   10248:	add	ip, ip, #4, 20	; 0x4000
   1024c:	ldr	pc, [ip, #4076]!	; 0xfec

00010250 <mcsimple_clean@plt>:
   10250:	add	ip, pc, #1048576	; 0x100000
   10254:	add	ip, ip, #4, 20	; 0x4000
   10258:	ldr	pc, [ip, #4068]!	; 0xfe4

0001025c <myhtml_tree_node_insert_comment@plt>:
   1025c:	add	ip, pc, #1048576	; 0x100000
   10260:	add	ip, ip, #4, 20	; 0x4000
   10264:	ldr	pc, [ip, #4060]!	; 0xfdc

00010268 <myhtml_tokenizer_end@plt>:
   10268:	add	ip, pc, #1048576	; 0x100000
   1026c:	add	ip, ip, #4, 20	; 0x4000
   10270:	ldr	pc, [ip, #4052]!	; 0xfd4

00010274 <mycore_utils_avl_tree_list_all_nodes@plt>:
   10274:	add	ip, pc, #1048576	; 0x100000
   10278:	add	ip, ip, #4, 20	; 0x4000
   1027c:	ldr	pc, [ip, #4044]!	; 0xfcc

00010280 <myhtml_tree_temp_tag_name_clean@plt>:
   10280:	add	ip, pc, #1048576	; 0x100000
   10284:	add	ip, ip, #4, 20	; 0x4000
   10288:	ldr	pc, [ip, #4036]!	; 0xfc4

0001028c <myhtml_tree_list_clean@plt>:
   1028c:	add	ip, pc, #1048576	; 0x100000
   10290:	add	ip, ip, #4, 20	; 0x4000
   10294:	ldr	pc, [ip, #4028]!	; 0xfbc

00010298 <mchar_async_node_add@plt>:
   10298:	add	ip, pc, #1048576	; 0x100000
   1029c:	add	ip, ip, #4, 20	; 0x4000
   102a0:	ldr	pc, [ip, #4020]!	; 0xfb4

000102a4 <mycore_strncasecmp@plt>:
   102a4:	add	ip, pc, #1048576	; 0x100000
   102a8:	add	ip, ip, #4, 20	; 0x4000
   102ac:	ldr	pc, [ip, #4012]!	; 0xfac

000102b0 <myhtml_tokenizer_post@plt>:
   102b0:	add	ip, pc, #1048576	; 0x100000
   102b4:	add	ip, ip, #4, 20	; 0x4000
   102b8:	ldr	pc, [ip, #4004]!	; 0xfa4

000102bc <myhtml_tree_list_insert_by_index@plt>:
   102bc:	add	ip, pc, #1048576	; 0x100000
   102c0:	add	ip, ip, #4, 20	; 0x4000
   102c4:	ldr	pc, [ip, #3996]!	; 0xf9c

000102c8 <mcsimple_create@plt>:
   102c8:	add	ip, pc, #1048576	; 0x100000
   102cc:	add	ip, ip, #4, 20	; 0x4000
   102d0:	ldr	pc, [ip, #3988]!	; 0xf94

000102d4 <mythread_queue_destroy@plt>:
   102d4:	add	ip, pc, #1048576	; 0x100000
   102d8:	add	ip, ip, #4, 20	; 0x4000
   102dc:	ldr	pc, [ip, #3980]!	; 0xf8c

000102e0 <mycore_string_raw_copy@plt>:
   102e0:	add	ip, pc, #1048576	; 0x100000
   102e4:	add	ip, ip, #4, 20	; 0x4000
   102e8:	ldr	pc, [ip, #3972]!	; 0xf84

000102ec <mycore_string_stay_only_whitespace@plt>:
   102ec:	add	ip, pc, #1048576	; 0x100000
   102f0:	add	ip, ip, #4, 20	; 0x4000
   102f4:	ldr	pc, [ip, #3964]!	; 0xf7c

000102f8 <mctree_clean@plt>:
   102f8:	add	ip, pc, #1048576	; 0x100000
   102fc:	add	ip, ip, #4, 20	; 0x4000
   10300:	ldr	pc, [ip, #3956]!	; 0xf74

00010304 <myhtml_collection_create@plt>:
   10304:	add	ip, pc, #1048576	; 0x100000
   10308:	add	ip, ip, #4, 20	; 0x4000
   1030c:	ldr	pc, [ip, #3948]!	; 0xf6c

00010310 <myhtml_rules_stop_parsing@plt>:
   10310:	add	ip, pc, #1048576	; 0x100000
   10314:	add	ip, ip, #4, 20	; 0x4000
   10318:	ldr	pc, [ip, #3940]!	; 0xf64

0001031c <myhtml_get_nodes_by_tag_id@plt>:
   1031c:	add	ip, pc, #1048576	; 0x100000
   10320:	add	ip, ip, #4, 20	; 0x4000
   10324:	ldr	pc, [ip, #3932]!	; 0xf5c

00010328 <myhtml_serialization_tree_buffer@plt>:
   10328:	add	ip, pc, #1048576	; 0x100000
   1032c:	add	ip, ip, #4, 20	; 0x4000
   10330:	ldr	pc, [ip, #3924]!	; 0xf54

00010334 <myhtml_token_set_replacement_character_for_null_token@plt>:
   10334:	add	ip, pc, #1048576	; 0x100000
   10338:	add	ip, ip, #4, 20	; 0x4000
   1033c:	ldr	pc, [ip, #3916]!	; 0xf4c

00010340 <fwrite@plt>:
   10340:	add	ip, pc, #1048576	; 0x100000
   10344:	add	ip, ip, #4, 20	; 0x4000
   10348:	ldr	pc, [ip, #3908]!	; 0xf44

0001034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>:
   1034c:	add	ip, pc, #1048576	; 0x100000
   10350:	add	ip, ip, #4, 20	; 0x4000
   10354:	ldr	pc, [ip, #3900]!	; 0xf3c

00010358 <myhtml_tree_node_insert_by_mode@plt>:
   10358:	add	ip, pc, #1048576	; 0x100000
   1035c:	add	ip, ip, #4, 20	; 0x4000
   10360:	ldr	pc, [ip, #3892]!	; 0xf34

00010364 <myhtml_tree_node_insert_after@plt>:
   10364:	add	ip, pc, #1048576	; 0x100000
   10368:	add	ip, ip, #4, 20	; 0x4000
   1036c:	ldr	pc, [ip, #3884]!	; 0xf2c

00010370 <myhtml_data_process_state_end@plt>:
   10370:	add	ip, pc, #1048576	; 0x100000
   10374:	add	ip, ip, #4, 20	; 0x4000
   10378:	ldr	pc, [ip, #3876]!	; 0xf24

0001037c <myhtml_serialization_reallocate@plt>:
   1037c:	add	ip, pc, #1048576	; 0x100000
   10380:	add	ip, ip, #4, 20	; 0x4000
   10384:	ldr	pc, [ip, #3868]!	; 0xf1c

00010388 <mycore_string_append_with_replacement_null_characters@plt>:
   10388:	add	ip, pc, #1048576	; 0x100000
   1038c:	add	ip, ip, #4, 20	; 0x4000
   10390:	ldr	pc, [ip, #3860]!	; 0xf14

00010394 <myhtml_tree_clear_stack_back_table_body_context@plt>:
   10394:	add	ip, pc, #1048576	; 0x100000
   10398:	add	ip, ip, #4, 20	; 0x4000
   1039c:	ldr	pc, [ip, #3852]!	; 0xf0c

000103a0 <mcsimple_destroy@plt>:
   103a0:	add	ip, pc, #1048576	; 0x100000
   103a4:	add	ip, ip, #4, 20	; 0x4000
   103a8:	ldr	pc, [ip, #3844]!	; 0xf04

000103ac <myhtml_token_doctype_check_html_4_01@plt>:
   103ac:	add	ip, pc, #1048576	; 0x100000
   103b0:	add	ip, ip, #4, 20	; 0x4000
   103b4:	ldr	pc, [ip, #3836]!	; 0xefc

000103b8 <__mtree_insert_to_start@plt>:
   103b8:	add	ip, pc, #1048576	; 0x100000
   103bc:	add	ip, ip, #4, 20	; 0x4000
   103c0:	ldr	pc, [ip, #3828]!	; 0xef4

000103c4 <myhtml_insertion_mode_in_select@plt>:
   103c4:	add	ip, pc, #1048576	; 0x100000
   103c8:	add	ip, ip, #4, 20	; 0x4000
   103cc:	ldr	pc, [ip, #3820]!	; 0xeec

000103d0 <fread@plt>:
   103d0:	add	ip, pc, #1048576	; 0x100000
   103d4:	add	ip, ip, #4, 20	; 0x4000
   103d8:	ldr	pc, [ip, #3812]!	; 0xee4

000103dc <pthread_create@plt>:
   103dc:	add	ip, pc, #1048576	; 0x100000
   103e0:	add	ip, ip, #4, 20	; 0x4000
   103e4:	ldr	pc, [ip, #3804]!	; 0xedc

000103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>:
   103e8:	add	ip, pc, #1048576	; 0x100000
   103ec:	add	ip, ip, #4, 20	; 0x4000
   103f0:	ldr	pc, [ip, #3796]!	; 0xed4

000103f4 <myhtml_tree_node_insert_before@plt>:
   103f4:	add	ip, pc, #1048576	; 0x100000
   103f8:	add	ip, ip, #4, 20	; 0x4000
   103fc:	ldr	pc, [ip, #3788]!	; 0xecc

00010400 <myhtml_parser_token_data_to_string_charef@plt>:
   10400:	add	ip, pc, #1048576	; 0x100000
   10404:	add	ip, ip, #4, 20	; 0x4000
   10408:	ldr	pc, [ip, #3780]!	; 0xec4

0001040c <mythread_thread_attr_clean@plt>:
   1040c:	add	ip, pc, #1048576	; 0x100000
   10410:	add	ip, ip, #4, 20	; 0x4000
   10414:	ldr	pc, [ip, #3772]!	; 0xebc

00010418 <myhtml_tree_clear_stack_back_table_row_context@plt>:
   10418:	add	ip, pc, #1048576	; 0x100000
   1041c:	add	ip, ip, #4, 20	; 0x4000
   10420:	ldr	pc, [ip, #3764]!	; 0xeb4

00010424 <myhtml_tree_template_insertion_clean@plt>:
   10424:	add	ip, pc, #1048576	; 0x100000
   10428:	add	ip, ip, #4, 20	; 0x4000
   1042c:	ldr	pc, [ip, #3756]!	; 0xeac

00010430 <myhtml_tokenizer_chunk_process@plt>:
   10430:	add	ip, pc, #1048576	; 0x100000
   10434:	add	ip, ip, #4, 20	; 0x4000
   10438:	ldr	pc, [ip, #3748]!	; 0xea4

0001043c <myhtml_stream_create@plt>:
   1043c:	add	ip, pc, #1048576	; 0x100000
   10440:	add	ip, ip, #4, 20	; 0x4000
   10444:	ldr	pc, [ip, #3740]!	; 0xe9c

00010448 <myhtml_tree_tags_close_p@plt>:
   10448:	add	ip, pc, #1048576	; 0x100000
   1044c:	add	ip, ip, #4, 20	; 0x4000
   10450:	ldr	pc, [ip, #3732]!	; 0xe94

00010454 <mcsimple_init@plt>:
   10454:	add	ip, pc, #1048576	; 0x100000
   10458:	add	ip, ip, #4, 20	; 0x4000
   1045c:	ldr	pc, [ip, #3724]!	; 0xe8c

00010460 <myencoding_string_append@plt>:
   10460:	add	ip, pc, #1048576	; 0x100000
   10464:	add	ip, ip, #4, 20	; 0x4000
   10468:	ldr	pc, [ip, #3716]!	; 0xe84

0001046c <myhtml_stream_buffer_clean@plt>:
   1046c:	add	ip, pc, #1048576	; 0x100000
   10470:	add	ip, ip, #4, 20	; 0x4000
   10474:	ldr	pc, [ip, #3708]!	; 0xe7c

00010478 <mycore_utils_avl_tree_rotate_for_delete@plt>:
   10478:	add	ip, pc, #1048576	; 0x100000
   1047c:	add	ip, ip, #4, 20	; 0x4000
   10480:	ldr	pc, [ip, #3700]!	; 0xe74

00010484 <myhtml_token_merged_two_token_string@plt>:
   10484:	add	ip, pc, #1048576	; 0x100000
   10488:	add	ip, ip, #4, 20	; 0x4000
   1048c:	ldr	pc, [ip, #3692]!	; 0xe6c

00010490 <myhtml_attribute_value@plt>:
   10490:	add	ip, pc, #1048576	; 0x100000
   10494:	add	ip, ip, #4, 20	; 0x4000
   10498:	ldr	pc, [ip, #3684]!	; 0xe64

0001049c <myhtml_token_strict_doctype_by_token@plt>:
   1049c:	add	ip, pc, #1048576	; 0x100000
   104a0:	add	ip, ip, #4, 20	; 0x4000
   104a4:	ldr	pc, [ip, #3676]!	; 0xe5c

000104a8 <mchar_async_init@plt>:
   104a8:	add	ip, pc, #1048576	; 0x100000
   104ac:	add	ip, ip, #4, 20	; 0x4000
   104b0:	ldr	pc, [ip, #3668]!	; 0xe54

000104b4 <mycore_string_crop_whitespace_from_begin@plt>:
   104b4:	add	ip, pc, #1048576	; 0x100000
   104b8:	add	ip, ip, #4, 20	; 0x4000
   104bc:	ldr	pc, [ip, #3660]!	; 0xe4c

000104c0 <mythread_resume@plt>:
   104c0:	add	ip, pc, #1048576	; 0x100000
   104c4:	add	ip, ip, #4, 20	; 0x4000
   104c8:	ldr	pc, [ip, #3652]!	; 0xe44

000104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>:
   104cc:	add	ip, pc, #1048576	; 0x100000
   104d0:	add	ip, ip, #4, 20	; 0x4000
   104d4:	ldr	pc, [ip, #3644]!	; 0xe3c

000104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>:
   104d8:	add	ip, pc, #1048576	; 0x100000
   104dc:	add	ip, ip, #4, 20	; 0x4000
   104e0:	ldr	pc, [ip, #3636]!	; 0xe34

000104e4 <myhtml_create_stream_and_batch@plt>:
   104e4:	add	ip, pc, #1048576	; 0x100000
   104e8:	add	ip, ip, #4, 20	; 0x4000
   104ec:	ldr	pc, [ip, #3628]!	; 0xe2c

000104f0 <myhtml_data_process_entry_clean@plt>:
   104f0:	add	ip, pc, #1048576	; 0x100000
   104f4:	add	ip, ip, #4, 20	; 0x4000
   104f8:	ldr	pc, [ip, #3620]!	; 0xe24

000104fc <mcsync_spin_init@plt>:
   104fc:	add	ip, pc, #1048576	; 0x100000
   10500:	add	ip, ip, #4, 20	; 0x4000
   10504:	ldr	pc, [ip, #3612]!	; 0xe1c

00010508 <malloc@plt>:
   10508:	add	ip, pc, #1048576	; 0x100000
   1050c:	add	ip, ip, #4, 20	; 0x4000
   10510:	ldr	pc, [ip, #3604]!	; 0xe14

00010514 <mythread_check_status@plt>:
   10514:	add	ip, pc, #1048576	; 0x100000
   10518:	add	ip, ip, #4, 20	; 0x4000
   1051c:	ldr	pc, [ip, #3596]!	; 0xe0c

00010520 <myhtml_token_doctype_check_html_4_0@plt>:
   10520:	add	ip, pc, #1048576	; 0x100000
   10524:	add	ip, ip, #4, 20	; 0x4000
   10528:	ldr	pc, [ip, #3588]!	; 0xe04

0001052c <mycore_strcasecmp@plt>:
   1052c:	add	ip, pc, #1048576	; 0x100000
   10530:	add	ip, ip, #4, 20	; 0x4000
   10534:	ldr	pc, [ip, #3580]!	; 0xdfc

00010538 <mythread_queue_node_malloc_round@plt>:
   10538:	add	ip, pc, #1048576	; 0x100000
   1053c:	add	ip, ip, #4, 20	; 0x4000
   10540:	ldr	pc, [ip, #3572]!	; 0xdf4

00010544 <myhtml_tree_active_formatting_reconstruction@plt>:
   10544:	add	ip, pc, #1048576	; 0x100000
   10548:	add	ip, ip, #4, 20	; 0x4000
   1054c:	ldr	pc, [ip, #3564]!	; 0xdec

00010550 <myhtml_token_set_done@plt>:
   10550:	add	ip, pc, #1048576	; 0x100000
   10554:	add	ip, ip, #4, 20	; 0x4000
   10558:	ldr	pc, [ip, #3556]!	; 0xde4

0001055c <mcsync_spin_create@plt>:
   1055c:	add	ip, pc, #1048576	; 0x100000
   10560:	add	ip, ip, #4, 20	; 0x4000
   10564:	ldr	pc, [ip, #3548]!	; 0xddc

00010568 <mythread_thread_join@plt>:
   10568:	add	ip, pc, #1048576	; 0x100000
   1056c:	add	ip, ip, #4, 20	; 0x4000
   10570:	ldr	pc, [ip, #3540]!	; 0xdd4

00010574 <myhtml_token_attr_remove@plt>:
   10574:	add	ip, pc, #1048576	; 0x100000
   10578:	add	ip, ip, #4, 20	; 0x4000
   1057c:	ldr	pc, [ip, #3532]!	; 0xdcc

00010580 <myhtml_token_node_attr_copy@plt>:
   10580:	add	ip, pc, #1048576	; 0x100000
   10584:	add	ip, ip, #4, 20	; 0x4000
   10588:	ldr	pc, [ip, #3524]!	; 0xdc4

0001058c <mythread_quit@plt>:
   1058c:	add	ip, pc, #1048576	; 0x100000
   10590:	add	ip, ip, #4, 20	; 0x4000
   10594:	ldr	pc, [ip, #3516]!	; 0xdbc

00010598 <myhtml_batch_create@plt>:
   10598:	add	ip, pc, #1048576	; 0x100000
   1059c:	add	ip, ip, #4, 20	; 0x4000
   105a0:	ldr	pc, [ip, #3508]!	; 0xdb4

000105a4 <myhtml_parse_chunk_fragment@plt>:
   105a4:	add	ip, pc, #1048576	; 0x100000
   105a8:	add	ip, ip, #4, 20	; 0x4000
   105ac:	ldr	pc, [ip, #3500]!	; 0xdac

000105b0 <mcsync_spin_lock@plt>:
   105b0:	add	ip, pc, #1048576	; 0x100000
   105b4:	add	ip, ip, #4, 20	; 0x4000
   105b8:	ldr	pc, [ip, #3492]!	; 0xda4

000105bc <myhtml_token_clean@plt>:
   105bc:	add	ip, pc, #1048576	; 0x100000
   105c0:	add	ip, ip, #4, 20	; 0x4000
   105c4:	ldr	pc, [ip, #3484]!	; 0xd9c

000105c8 <mythread_queue_list_get_count@plt>:
   105c8:	add	ip, pc, #1048576	; 0x100000
   105cc:	add	ip, ip, #4, 20	; 0x4000
   105d0:	ldr	pc, [ip, #3476]!	; 0xd94

000105d4 <mythread_queue_list_see_for_done_by_thread@plt>:
   105d4:	add	ip, pc, #1048576	; 0x100000
   105d8:	add	ip, ip, #4, 20	; 0x4000
   105dc:	ldr	pc, [ip, #3468]!	; 0xd8c

000105e0 <__gmon_start__@plt>:
   105e0:	add	ip, pc, #1048576	; 0x100000
   105e4:	add	ip, ip, #4, 20	; 0x4000
   105e8:	ldr	pc, [ip, #3460]!	; 0xd84

000105ec <myhtml_tokenizer_pause@plt>:
   105ec:	add	ip, pc, #1048576	; 0x100000
   105f0:	add	ip, ip, #4, 20	; 0x4000
   105f4:	ldr	pc, [ip, #3452]!	; 0xd7c

000105f8 <myhtml_tokenizer_set_first_settings@plt>:
   105f8:	add	ip, pc, #1048576	; 0x100000
   105fc:	add	ip, ip, #4, 20	; 0x4000
   10600:	ldr	pc, [ip, #3444]!	; 0xd74

00010604 <myhtml_tree_temp_tag_name_init@plt>:
   10604:	add	ip, pc, #1048576	; 0x100000
   10608:	add	ip, ip, #4, 20	; 0x4000
   1060c:	ldr	pc, [ip, #3436]!	; 0xd6c

00010610 <mycore_string_init@plt>:
   10610:	add	ip, pc, #1048576	; 0x100000
   10614:	add	ip, ip, #4, 20	; 0x4000
   10618:	ldr	pc, [ip, #3428]!	; 0xd64

0001061c <myhtml_tree_node_find_parent_by_tag_id@plt>:
   1061c:	add	ip, pc, #1048576	; 0x100000
   10620:	add	ip, ip, #4, 20	; 0x4000
   10624:	ldr	pc, [ip, #3420]!	; 0xd5c

00010628 <myhtml_tree_current_node@plt>:
   10628:	add	ip, pc, #1048576	; 0x100000
   1062c:	add	ip, ip, #4, 20	; 0x4000
   10630:	ldr	pc, [ip, #3412]!	; 0xd54

00010634 <mythread_mutex_close@plt>:
   10634:	add	ip, pc, #1048576	; 0x100000
   10638:	add	ip, ip, #4, 20	; 0x4000
   1063c:	ldr	pc, [ip, #3404]!	; 0xd4c

00010640 <myhtml_insertion_mode_in_body@plt>:
   10640:	add	ip, pc, #1048576	; 0x100000
   10644:	add	ip, ip, #4, 20	; 0x4000
   10648:	ldr	pc, [ip, #3396]!	; 0xd44

0001064c <myhtml_tree_active_formatting_between_last_marker@plt>:
   1064c:	add	ip, pc, #1048576	; 0x100000
   10650:	add	ip, ip, #4, 20	; 0x4000
   10654:	ldr	pc, [ip, #3388]!	; 0xd3c

00010658 <mctree_create@plt>:
   10658:	add	ip, pc, #1048576	; 0x100000
   1065c:	add	ip, ip, #4, 20	; 0x4000
   10660:	ldr	pc, [ip, #3380]!	; 0xd34

00010664 <myhtml_token_doctype_check_xhtml_1_0@plt>:
   10664:	add	ip, pc, #1048576	; 0x100000
   10668:	add	ip, ip, #4, 20	; 0x4000
   1066c:	ldr	pc, [ip, #3372]!	; 0xd2c

00010670 <strlen@plt>:
   10670:	add	ip, pc, #1048576	; 0x100000
   10674:	add	ip, ip, #4, 20	; 0x4000
   10678:	ldr	pc, [ip, #3364]!	; 0xd24

0001067c <myhtml_token_node_wait_for_done@plt>:
   1067c:	add	ip, pc, #1048576	; 0x100000
   10680:	add	ip, ip, #4, 20	; 0x4000
   10684:	ldr	pc, [ip, #3356]!	; 0xd1c

00010688 <mycore_string_append_lowercase@plt>:
   10688:	add	ip, pc, #1048576	; 0x100000
   1068c:	add	ip, ip, #4, 20	; 0x4000
   10690:	ldr	pc, [ip, #3348]!	; 0xd14

00010694 <myhtml_token_node_attr_copy_with_check@plt>:
   10694:	add	ip, pc, #1048576	; 0x100000
   10698:	add	ip, ip, #4, 20	; 0x4000
   1069c:	ldr	pc, [ip, #3340]!	; 0xd0c

000106a0 <myhtml_encoding_set@plt>:
   106a0:	add	ip, pc, #1048576	; 0x100000
   106a4:	add	ip, ip, #4, 20	; 0x4000
   106a8:	ldr	pc, [ip, #3332]!	; 0xd04

000106ac <mythread_queue_init@plt>:
   106ac:	add	ip, pc, #1048576	; 0x100000
   106b0:	add	ip, ip, #4, 20	; 0x4000
   106b4:	ldr	pc, [ip, #3324]!	; 0xcfc

000106b8 <myhtml_tree_node_add_child@plt>:
   106b8:	add	ip, pc, #1048576	; 0x100000
   106bc:	add	ip, ip, #4, 20	; 0x4000
   106c0:	ldr	pc, [ip, #3316]!	; 0xcf4

000106c4 <mycore_utils_avl_tree_node_set_height@plt>:
   106c4:	add	ip, pc, #1048576	; 0x100000
   106c8:	add	ip, ip, #4, 20	; 0x4000
   106cc:	ldr	pc, [ip, #3308]!	; 0xcec

000106d0 <myhtml_tree_clean@plt>:
   106d0:	add	ip, pc, #1048576	; 0x100000
   106d4:	add	ip, ip, #4, 20	; 0x4000
   106d8:	ldr	pc, [ip, #3300]!	; 0xce4

000106dc <myhtml_tree_generate_implied_end_tags@plt>:
   106dc:	add	ip, pc, #1048576	; 0x100000
   106e0:	add	ip, ip, #4, 20	; 0x4000
   106e4:	ldr	pc, [ip, #3292]!	; 0xcdc

000106e8 <mchar_async_node_clean@plt>:
   106e8:	add	ip, pc, #1048576	; 0x100000
   106ec:	add	ip, ip, #4, 20	; 0x4000
   106f0:	ldr	pc, [ip, #3284]!	; 0xcd4

000106f4 <myhtml_tree_list_destroy@plt>:
   106f4:	add	ip, pc, #1048576	; 0x100000
   106f8:	add	ip, ip, #4, 20	; 0x4000
   106fc:	ldr	pc, [ip, #3276]!	; 0xccc

00010700 <myhtml_serialization_node_callback@plt>:
   10700:	add	ip, pc, #1048576	; 0x100000
   10704:	add	ip, ip, #4, 20	; 0x4000
   10708:	ldr	pc, [ip, #3268]!	; 0xcc4

0001070c <myencoding_detect_by_trigram@plt>:
   1070c:	add	ip, pc, #1048576	; 0x100000
   10710:	add	ip, ip, #4, 20	; 0x4000
   10714:	ldr	pc, [ip, #3260]!	; 0xcbc

00010718 <mchar_async_free@plt>:
   10718:	add	ip, pc, #1048576	; 0x100000
   1071c:	add	ip, ip, #4, 20	; 0x4000
   10720:	ldr	pc, [ip, #3252]!	; 0xcb4

00010724 <mchar_async_cache_clean@plt>:
   10724:	add	ip, pc, #1048576	; 0x100000
   10728:	add	ip, ip, #4, 20	; 0x4000
   1072c:	ldr	pc, [ip, #3244]!	; 0xcac

00010730 <myhtml_tree_reset_insertion_mode_appropriately@plt>:
   10730:	add	ip, pc, #1048576	; 0x100000
   10734:	add	ip, ip, #4, 20	; 0x4000
   10738:	ldr	pc, [ip, #3236]!	; 0xca4

0001073c <mcsimple_malloc@plt>:
   1073c:	add	ip, pc, #1048576	; 0x100000
   10740:	add	ip, ip, #4, 20	; 0x4000
   10744:	ldr	pc, [ip, #3228]!	; 0xc9c

00010748 <mctree_search_lowercase@plt>:
   10748:	add	ip, pc, #1048576	; 0x100000
   1074c:	add	ip, ip, #4, 20	; 0x4000
   10750:	ldr	pc, [ip, #3220]!	; 0xc94

00010754 <myhtml_data_process@plt>:
   10754:	add	ip, pc, #1048576	; 0x100000
   10758:	add	ip, ip, #4, 20	; 0x4000
   1075c:	ldr	pc, [ip, #3212]!	; 0xc8c

00010760 <myhtml_token_attr_copy@plt>:
   10760:	add	ip, pc, #1048576	; 0x100000
   10764:	add	ip, ip, #4, 20	; 0x4000
   10768:	ldr	pc, [ip, #3204]!	; 0xc84

0001076c <myhtml_tree_node_insert_by_node@plt>:
   1076c:	add	ip, pc, #1048576	; 0x100000
   10770:	add	ip, ip, #4, 20	; 0x4000
   10774:	ldr	pc, [ip, #3196]!	; 0xc7c

00010778 <mcobject_init@plt>:
   10778:	add	ip, pc, #1048576	; 0x100000
   1077c:	add	ip, ip, #4, 20	; 0x4000
   10780:	ldr	pc, [ip, #3188]!	; 0xc74

00010784 <myhtml_token_destroy@plt>:
   10784:	add	ip, pc, #1048576	; 0x100000
   10788:	add	ip, ip, #4, 20	; 0x4000
   1078c:	ldr	pc, [ip, #3180]!	; 0xc6c

00010790 <myhtml_destroy_marker@plt>:
   10790:	add	ip, pc, #1048576	; 0x100000
   10794:	add	ip, ip, #4, 20	; 0x4000
   10798:	ldr	pc, [ip, #3172]!	; 0xc64

0001079c <pthread_attr_init@plt>:
   1079c:	add	ip, pc, #1048576	; 0x100000
   107a0:	add	ip, ip, #4, 20	; 0x4000
   107a4:	ldr	pc, [ip, #3164]!	; 0xc5c

000107a8 <myhtml_attribute_free@plt>:
   107a8:	add	ip, pc, #1048576	; 0x100000
   107ac:	add	ip, ip, #4, 20	; 0x4000
   107b0:	ldr	pc, [ip, #3156]!	; 0xc54

000107b4 <myhtml_serialization_node_buffer@plt>:
   107b4:	add	ip, pc, #1048576	; 0x100000
   107b8:	add	ip, ip, #4, 20	; 0x4000
   107bc:	ldr	pc, [ip, #3148]!	; 0xc4c

000107c0 <myhtml_charef_find_by_pos@plt>:
   107c0:	add	ip, pc, #1048576	; 0x100000
   107c4:	add	ip, ip, #4, 20	; 0x4000
   107c8:	ldr	pc, [ip, #3140]!	; 0xc44

000107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>:
   107cc:	add	ip, pc, #1048576	; 0x100000
   107d0:	add	ip, ip, #4, 20	; 0x4000
   107d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000107d8 <mythread_queue_list_create@plt>:
   107d8:	add	ip, pc, #1048576	; 0x100000
   107dc:	add	ip, ip, #4, 20	; 0x4000
   107e0:	ldr	pc, [ip, #3124]!	; 0xc34

000107e4 <myhtml_token_attr_delete_all@plt>:
   107e4:	add	ip, pc, #1048576	; 0x100000
   107e8:	add	ip, ip, #4, 20	; 0x4000
   107ec:	ldr	pc, [ip, #3116]!	; 0xc2c

000107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>:
   107f0:	add	ip, pc, #1048576	; 0x100000
   107f4:	add	ip, ip, #4, 20	; 0x4000
   107f8:	ldr	pc, [ip, #3108]!	; 0xc24

000107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>:
   107fc:	add	ip, pc, #1048576	; 0x100000
   10800:	add	ip, ip, #4, 20	; 0x4000
   10804:	ldr	pc, [ip, #3100]!	; 0xc1c

00010808 <myhtml_stream_buffer_entry_init@plt>:
   10808:	add	ip, pc, #1048576	; 0x100000
   1080c:	add	ip, ip, #4, 20	; 0x4000
   10810:	ldr	pc, [ip, #3092]!	; 0xc14

00010814 <myhtml_tree_active_formatting_append_with_check@plt>:
   10814:	add	ip, pc, #1048576	; 0x100000
   10818:	add	ip, ip, #4, 20	; 0x4000
   1081c:	ldr	pc, [ip, #3084]!	; 0xc0c

00010820 <myhtml_tree_active_formatting_clean@plt>:
   10820:	add	ip, pc, #1048576	; 0x100000
   10824:	add	ip, ip, #4, 20	; 0x4000
   10828:	ldr	pc, [ip, #3076]!	; 0xc04

0001082c <myencoding_get_function_by_id@plt>:
   1082c:	add	ip, pc, #1048576	; 0x100000
   10830:	add	ip, ip, #4, 20	; 0x4000
   10834:	ldr	pc, [ip, #3068]!	; 0xbfc

00010838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>:
   10838:	add	ip, pc, #1048576	; 0x100000
   1083c:	add	ip, ip, #4, 20	; 0x4000
   10840:	ldr	pc, [ip, #3060]!	; 0xbf4

00010844 <myhtml_tree_active_formatting_remove_by_index@plt>:
   10844:	add	ip, pc, #1048576	; 0x100000
   10848:	add	ip, ip, #4, 20	; 0x4000
   1084c:	ldr	pc, [ip, #3052]!	; 0xbec

00010850 <mcsync_lock@plt>:
   10850:	add	ip, pc, #1048576	; 0x100000
   10854:	add	ip, ip, #4, 20	; 0x4000
   10858:	ldr	pc, [ip, #3044]!	; 0xbe4

0001085c <myhtml_tree_list_init@plt>:
   1085c:	add	ip, pc, #1048576	; 0x100000
   10860:	add	ip, ip, #4, 20	; 0x4000
   10864:	ldr	pc, [ip, #3036]!	; 0xbdc

00010868 <mcsync_init@plt>:
   10868:	add	ip, pc, #1048576	; 0x100000
   1086c:	add	ip, ip, #4, 20	; 0x4000
   10870:	ldr	pc, [ip, #3028]!	; 0xbd4

00010874 <myhtml_tree_active_formatting_is_marker@plt>:
   10874:	add	ip, pc, #1048576	; 0x100000
   10878:	add	ip, ip, #4, 20	; 0x4000
   1087c:	ldr	pc, [ip, #3020]!	; 0xbcc

00010880 <mcobject_async_node_clean@plt>:
   10880:	add	ip, pc, #1048576	; 0x100000
   10884:	add	ip, ip, #4, 20	; 0x4000
   10888:	ldr	pc, [ip, #3012]!	; 0xbc4

0001088c <mchar_async_cache_destroy@plt>:
   1088c:	add	ip, pc, #1048576	; 0x100000
   10890:	add	ip, ip, #4, 20	; 0x4000
   10894:	ldr	pc, [ip, #3004]!	; 0xbbc

00010898 <myhtml_tree_adoption_agency_algorithm@plt>:
   10898:	add	ip, pc, #1048576	; 0x100000
   1089c:	add	ip, ip, #4, 20	; 0x4000
   108a0:	ldr	pc, [ip, #2996]!	; 0xbb4

000108a4 <myhtml_tree_active_formatting_remove@plt>:
   108a4:	add	ip, pc, #1048576	; 0x100000
   108a8:	add	ip, ip, #4, 20	; 0x4000
   108ac:	ldr	pc, [ip, #2988]!	; 0xbac

000108b0 <memset@plt>:
   108b0:	add	ip, pc, #1048576	; 0x100000
   108b4:	add	ip, ip, #4, 20	; 0x4000
   108b8:	ldr	pc, [ip, #2980]!	; 0xba4

000108bc <myhread_entry_create@plt>:
   108bc:	add	ip, pc, #1048576	; 0x100000
   108c0:	add	ip, ip, #4, 20	; 0x4000
   108c4:	ldr	pc, [ip, #2972]!	; 0xb9c

000108c8 <mcsync_mutex_create@plt>:
   108c8:	add	ip, pc, #1048576	; 0x100000
   108cc:	add	ip, ip, #4, 20	; 0x4000
   108d0:	ldr	pc, [ip, #2964]!	; 0xb94

000108d4 <mycore_string_append@plt>:
   108d4:	add	ip, pc, #1048576	; 0x100000
   108d8:	add	ip, ip, #4, 20	; 0x4000
   108dc:	ldr	pc, [ip, #2956]!	; 0xb8c

000108e0 <mcobject_async_chunk_malloc_without_lock@plt>:
   108e0:	add	ip, pc, #1048576	; 0x100000
   108e4:	add	ip, ip, #4, 20	; 0x4000
   108e8:	ldr	pc, [ip, #2948]!	; 0xb84

000108ec <strncpy@plt>:
   108ec:	add	ip, pc, #1048576	; 0x100000
   108f0:	add	ip, ip, #4, 20	; 0x4000
   108f4:	ldr	pc, [ip, #2940]!	; 0xb7c

000108f8 <pthread_cancel@plt>:
   108f8:	add	ip, pc, #1048576	; 0x100000
   108fc:	add	ip, ip, #4, 20	; 0x4000
   10900:	ldr	pc, [ip, #2932]!	; 0xb74

00010904 <myhtml_token_attr_create@plt>:
   10904:	add	ip, pc, #1048576	; 0x100000
   10908:	add	ip, ip, #4, 20	; 0x4000
   1090c:	ldr	pc, [ip, #2924]!	; 0xb6c

00010910 <mchar_async_malloc@plt>:
   10910:	add	ip, pc, #1048576	; 0x100000
   10914:	add	ip, ip, #4, 20	; 0x4000
   10918:	ldr	pc, [ip, #2916]!	; 0xb64

0001091c <myhtml_tag_static_search@plt>:
   1091c:	add	ip, pc, #1048576	; 0x100000
   10920:	add	ip, ip, #4, 20	; 0x4000
   10924:	ldr	pc, [ip, #2908]!	; 0xb5c

00010928 <myhtml_data_process_end@plt>:
   10928:	add	ip, pc, #1048576	; 0x100000
   1092c:	add	ip, ip, #4, 20	; 0x4000
   10930:	ldr	pc, [ip, #2900]!	; 0xb54

00010934 <myhtml_stream_buffer_add_entry@plt>:
   10934:	add	ip, pc, #1048576	; 0x100000
   10938:	add	ip, ip, #4, 20	; 0x4000
   1093c:	ldr	pc, [ip, #2892]!	; 0xb4c

00010940 <myhtml_tree_temp_tag_name_destroy@plt>:
   10940:	add	ip, pc, #1048576	; 0x100000
   10944:	add	ip, ip, #4, 20	; 0x4000
   10948:	ldr	pc, [ip, #2884]!	; 0xb44

0001094c <myhtml_tree_open_elements_pop_until@plt>:
   1094c:	add	ip, pc, #1048576	; 0x100000
   10950:	add	ip, ip, #4, 20	; 0x4000
   10954:	ldr	pc, [ip, #2876]!	; 0xb3c

00010958 <mctree_insert@plt>:
   10958:	add	ip, pc, #1048576	; 0x100000
   1095c:	add	ip, ip, #4, 20	; 0x4000
   10960:	ldr	pc, [ip, #2868]!	; 0xb34

00010964 <mycore_string_realloc@plt>:
   10964:	add	ip, pc, #1048576	; 0x100000
   10968:	add	ip, ip, #4, 20	; 0x4000
   1096c:	ldr	pc, [ip, #2860]!	; 0xb2c

00010970 <myhtml_tree_node_insert@plt>:
   10970:	add	ip, pc, #1048576	; 0x100000
   10974:	add	ip, ip, #4, 20	; 0x4000
   10978:	ldr	pc, [ip, #2852]!	; 0xb24

0001097c <mythread_queue_list_entry_wait_for_done@plt>:
   1097c:	add	ip, pc, #1048576	; 0x100000
   10980:	add	ip, ip, #4, 20	; 0x4000
   10984:	ldr	pc, [ip, #2844]!	; 0xb1c

00010988 <myhtml_tree_open_elements_append@plt>:
   10988:	add	ip, pc, #1048576	; 0x100000
   1098c:	add	ip, ip, #4, 20	; 0x4000
   10990:	ldr	pc, [ip, #2836]!	; 0xb14

00010994 <mcsimple_init_list_entries@plt>:
   10994:	add	ip, pc, #1048576	; 0x100000
   10998:	add	ip, ip, #4, 20	; 0x4000
   1099c:	ldr	pc, [ip, #2828]!	; 0xb0c

000109a0 <mythread_queue_list_entry_clean@plt>:
   109a0:	add	ip, pc, #1048576	; 0x100000
   109a4:	add	ip, ip, #4, 20	; 0x4000
   109a8:	ldr	pc, [ip, #2820]!	; 0xb04

000109ac <mythread_destroy@plt>:
   109ac:	add	ip, pc, #1048576	; 0x100000
   109b0:	add	ip, ip, #4, 20	; 0x4000
   109b4:	ldr	pc, [ip, #2812]!	; 0xafc

000109b8 <myhtml_tree_token_list_init@plt>:
   109b8:	add	ip, pc, #1048576	; 0x100000
   109bc:	add	ip, ip, #4, 20	; 0x4000
   109c0:	ldr	pc, [ip, #2804]!	; 0xaf4

000109c4 <myhtml_tree_list_append_after_index@plt>:
   109c4:	add	ip, pc, #1048576	; 0x100000
   109c8:	add	ip, ip, #4, 20	; 0x4000
   109cc:	ldr	pc, [ip, #2796]!	; 0xaec

000109d0 <mchar_async_chunk_malloc@plt>:
   109d0:	add	ip, pc, #1048576	; 0x100000
   109d4:	add	ip, ip, #4, 20	; 0x4000
   109d8:	ldr	pc, [ip, #2788]!	; 0xae4

000109dc <myhtml_tree_template_insertion_pop@plt>:
   109dc:	add	ip, pc, #1048576	; 0x100000
   109e0:	add	ip, ip, #4, 20	; 0x4000
   109e4:	ldr	pc, [ip, #2780]!	; 0xadc

000109e8 <__mtree_search_to_start@plt>:
   109e8:	add	ip, pc, #1048576	; 0x100000
   109ec:	add	ip, ip, #4, 20	; 0x4000
   109f0:	ldr	pc, [ip, #2772]!	; 0xad4

000109f4 <mythread_thread_destroy@plt>:
   109f4:	add	ip, pc, #1048576	; 0x100000
   109f8:	add	ip, ip, #4, 20	; 0x4000
   109fc:	ldr	pc, [ip, #2764]!	; 0xacc

00010a00 <fclose@plt>:
   10a00:	add	ip, pc, #1048576	; 0x100000
   10a04:	add	ip, ip, #4, 20	; 0x4000
   10a08:	ldr	pc, [ip, #2756]!	; 0xac4

00010a0c <myhtml_token_node_create@plt>:
   10a0c:	add	ip, pc, #1048576	; 0x100000
   10a10:	add	ip, ip, #4, 20	; 0x4000
   10a14:	ldr	pc, [ip, #2748]!	; 0xabc

00010a18 <mycore_utils_avl_tree_node_balance@plt>:
   10a18:	add	ip, pc, #1048576	; 0x100000
   10a1c:	add	ip, ip, #4, 20	; 0x4000
   10a20:	ldr	pc, [ip, #2740]!	; 0xab4

00010a24 <myhtml_tag_get_by_id@plt>:
   10a24:	add	ip, pc, #1048576	; 0x100000
   10a28:	add	ip, ip, #4, 20	; 0x4000
   10a2c:	ldr	pc, [ip, #2732]!	; 0xaac

00010a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>:
   10a30:	add	ip, pc, #1048576	; 0x100000
   10a34:	add	ip, ip, #4, 20	; 0x4000
   10a38:	ldr	pc, [ip, #2724]!	; 0xaa4

00010a3c <myhtml_parse_chunk@plt>:
   10a3c:	add	ip, pc, #1048576	; 0x100000
   10a40:	add	ip, ip, #4, 20	; 0x4000
   10a44:	ldr	pc, [ip, #2716]!	; 0xa9c

00010a48 <mycore_utils_mhash_rebuld@plt>:
   10a48:	add	ip, pc, #1048576	; 0x100000
   10a4c:	add	ip, ip, #4, 20	; 0x4000
   10a50:	ldr	pc, [ip, #2708]!	; 0xa94

00010a54 <myhtml_charef_get_first_position@plt>:
   10a54:	add	ip, pc, #1048576	; 0x100000
   10a58:	add	ip, ip, #4, 20	; 0x4000
   10a5c:	ldr	pc, [ip, #2700]!	; 0xa8c

00010a60 <mcobject_malloc@plt>:
   10a60:	add	ip, pc, #1048576	; 0x100000
   10a64:	add	ip, ip, #4, 20	; 0x4000
   10a68:	ldr	pc, [ip, #2692]!	; 0xa84

00010a6c <myencoding_detect_unicode_has_end@plt>:
   10a6c:	add	ip, pc, #1048576	; 0x100000
   10a70:	add	ip, ip, #4, 20	; 0x4000
   10a74:	ldr	pc, [ip, #2684]!	; 0xa7c

00010a78 <mcsync_spin_clean@plt>:
   10a78:	add	ip, pc, #1048576	; 0x100000
   10a7c:	add	ip, ip, #4, 20	; 0x4000
   10a80:	ldr	pc, [ip, #2676]!	; 0xa74

00010a84 <mythread_queue_create@plt>:
   10a84:	add	ip, pc, #1048576	; 0x100000
   10a88:	add	ip, ip, #4, 20	; 0x4000
   10a8c:	ldr	pc, [ip, #2668]!	; 0xa6c

00010a90 <mcobject_async_node_add@plt>:
   10a90:	add	ip, pc, #1048576	; 0x100000
   10a94:	add	ip, ip, #4, 20	; 0x4000
   10a98:	ldr	pc, [ip, #2660]!	; 0xa64

00010a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>:
   10a9c:	add	ip, pc, #1048576	; 0x100000
   10aa0:	add	ip, ip, #4, 20	; 0x4000
   10aa4:	ldr	pc, [ip, #2652]!	; 0xa5c

00010aa8 <myhtml_is_html_node@plt>:
   10aa8:	add	ip, pc, #1048576	; 0x100000
   10aac:	add	ip, ip, #4, 20	; 0x4000
   10ab0:	ldr	pc, [ip, #2644]!	; 0xa54

00010ab4 <myhtml_init_marker@plt>:
   10ab4:	add	ip, pc, #1048576	; 0x100000
   10ab8:	add	ip, ip, #4, 20	; 0x4000
   10abc:	ldr	pc, [ip, #2636]!	; 0xa4c

00010ac0 <myhtml_tree_active_formatting_init@plt>:
   10ac0:	add	ip, pc, #1048576	; 0x100000
   10ac4:	add	ip, ip, #4, 20	; 0x4000
   10ac8:	ldr	pc, [ip, #2628]!	; 0xa44

00010acc <myhtml_parser_token_data_to_string@plt>:
   10acc:	add	ip, pc, #1048576	; 0x100000
   10ad0:	add	ip, ip, #4, 20	; 0x4000
   10ad4:	ldr	pc, [ip, #2620]!	; 0xa3c

00010ad8 <mythread_stop@plt>:
   10ad8:	add	ip, pc, #1048576	; 0x100000
   10adc:	add	ip, ip, #4, 20	; 0x4000
   10ae0:	ldr	pc, [ip, #2612]!	; 0xa34

00010ae4 <mythread_option_set@plt>:
   10ae4:	add	ip, pc, #1048576	; 0x100000
   10ae8:	add	ip, ip, #4, 20	; 0x4000
   10aec:	ldr	pc, [ip, #2604]!	; 0xa2c

00010af0 <myhtml_tag_name_by_id@plt>:
   10af0:	add	ip, pc, #1048576	; 0x100000
   10af4:	add	ip, ip, #4, 20	; 0x4000
   10af8:	ldr	pc, [ip, #2596]!	; 0xa24

00010afc <mythread_mutex_create@plt>:
   10afc:	add	ip, pc, #1048576	; 0x100000
   10b00:	add	ip, ip, #4, 20	; 0x4000
   10b04:	ldr	pc, [ip, #2588]!	; 0xa1c

00010b08 <myhtml_attribute_key@plt>:
   10b08:	add	ip, pc, #1048576	; 0x100000
   10b0c:	add	ip, ip, #4, 20	; 0x4000
   10b10:	ldr	pc, [ip, #2580]!	; 0xa14

00010b14 <mchar_sync_chunk_find_by_size@plt>:
   10b14:	add	ip, pc, #1048576	; 0x100000
   10b18:	add	ip, ip, #4, 20	; 0x4000
   10b1c:	ldr	pc, [ip, #2572]!	; 0xa0c

00010b20 <mcobject_async_destroy@plt>:
   10b20:	add	ip, pc, #1048576	; 0x100000
   10b24:	add	ip, ip, #4, 20	; 0x4000
   10b28:	ldr	pc, [ip, #2564]!	; 0xa04

00010b2c <myhtml_token_attr_compare@plt>:
   10b2c:	add	ip, pc, #1048576	; 0x100000
   10b30:	add	ip, ip, #4, 20	; 0x4000
   10b34:	ldr	pc, [ip, #2556]!	; 0x9fc

00010b38 <_myhtml_get_nodes_by_attribute_value@plt>:
   10b38:	add	ip, pc, #1048576	; 0x100000
   10b3c:	add	ip, ip, #4, 20	; 0x4000
   10b40:	ldr	pc, [ip, #2548]!	; 0x9f4

00010b44 <myhtml_tokenizer_set_state@plt>:
   10b44:	add	ip, pc, #1048576	; 0x100000
   10b48:	add	ip, ip, #4, 20	; 0x4000
   10b4c:	ldr	pc, [ip, #2540]!	; 0x9ec

00010b50 <mcsync_mutex_init@plt>:
   10b50:	add	ip, pc, #1048576	; 0x100000
   10b54:	add	ip, ip, #4, 20	; 0x4000
   10b58:	ldr	pc, [ip, #2532]!	; 0x9e4

00010b5c <myhtml_tag_init@plt>:
   10b5c:	add	ip, pc, #1048576	; 0x100000
   10b60:	add	ip, ip, #4, 20	; 0x4000
   10b64:	ldr	pc, [ip, #2524]!	; 0x9dc

00010b68 <pthread_join@plt>:
   10b68:	add	ip, pc, #1048576	; 0x100000
   10b6c:	add	ip, ip, #4, 20	; 0x4000
   10b70:	ldr	pc, [ip, #2516]!	; 0x9d4

00010b74 <myhtml_tag_get_by_name@plt>:
   10b74:	add	ip, pc, #1048576	; 0x100000
   10b78:	add	ip, ip, #4, 20	; 0x4000
   10b7c:	ldr	pc, [ip, #2508]!	; 0x9cc

00010b80 <myhtml_stream_buffer_current_entry@plt>:
   10b80:	add	ip, pc, #1048576	; 0x100000
   10b84:	add	ip, ip, #4, 20	; 0x4000
   10b88:	ldr	pc, [ip, #2500]!	; 0x9c4

00010b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>:
   10b8c:	add	ip, pc, #1048576	; 0x100000
   10b90:	add	ip, ip, #4, 20	; 0x4000
   10b94:	ldr	pc, [ip, #2492]!	; 0x9bc

00010b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>:
   10b98:	add	ip, pc, #1048576	; 0x100000
   10b9c:	add	ip, ip, #4, 20	; 0x4000
   10ba0:	ldr	pc, [ip, #2484]!	; 0x9b4

00010ba4 <mchar_async_chunk_malloc_without_lock@plt>:
   10ba4:	add	ip, pc, #1048576	; 0x100000
   10ba8:	add	ip, ip, #4, 20	; 0x4000
   10bac:	ldr	pc, [ip, #2476]!	; 0x9ac

00010bb0 <myhtml_tree_open_elements_init@plt>:
   10bb0:	add	ip, pc, #1048576	; 0x100000
   10bb4:	add	ip, ip, #4, 20	; 0x4000
   10bb8:	ldr	pc, [ip, #2468]!	; 0x9a4

00010bbc <mcobject_async_malloc@plt>:
   10bbc:	add	ip, pc, #1048576	; 0x100000
   10bc0:	add	ip, ip, #4, 20	; 0x4000
   10bc4:	ldr	pc, [ip, #2460]!	; 0x99c

00010bc8 <mchar_async_clean@plt>:
   10bc8:	add	ip, pc, #1048576	; 0x100000
   10bcc:	add	ip, ip, #4, 20	; 0x4000
   10bd0:	ldr	pc, [ip, #2452]!	; 0x994

00010bd4 <myencoding_decode_shared_utf_16@plt>:
   10bd4:	add	ip, pc, #1048576	; 0x100000
   10bd8:	add	ip, ip, #4, 20	; 0x4000
   10bdc:	ldr	pc, [ip, #2444]!	; 0x98c

00010be0 <myhtml_token_adjust_foreign_attributes@plt>:
   10be0:	add	ip, pc, #1048576	; 0x100000
   10be4:	add	ip, ip, #4, 20	; 0x4000
   10be8:	ldr	pc, [ip, #2436]!	; 0x984

00010bec <myhtml_rules_init@plt>:
   10bec:	add	ip, pc, #1048576	; 0x100000
   10bf0:	add	ip, ip, #4, 20	; 0x4000
   10bf4:	ldr	pc, [ip, #2428]!	; 0x97c

00010bf8 <myencoding_decode_gb18030@plt>:
   10bf8:	add	ip, pc, #1048576	; 0x100000
   10bfc:	add	ip, ip, #4, 20	; 0x4000
   10c00:	ldr	pc, [ip, #2420]!	; 0x974

00010c04 <mythread_nanosleep_destroy@plt>:
   10c04:	add	ip, pc, #1048576	; 0x100000
   10c08:	add	ip, ip, #4, 20	; 0x4000
   10c0c:	ldr	pc, [ip, #2412]!	; 0x96c

00010c10 <mycore_utils_avl_tree_node_rotate_left@plt>:
   10c10:	add	ip, pc, #1048576	; 0x100000
   10c14:	add	ip, ip, #4, 20	; 0x4000
   10c18:	ldr	pc, [ip, #2404]!	; 0x964

00010c1c <myhtml_string_before_append_any_preprocessing@plt>:
   10c1c:	add	ip, pc, #1048576	; 0x100000
   10c20:	add	ip, ip, #4, 20	; 0x4000
   10c24:	ldr	pc, [ip, #2396]!	; 0x95c

00010c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>:
   10c28:	add	ip, pc, #1048576	; 0x100000
   10c2c:	add	ip, ip, #4, 20	; 0x4000
   10c30:	ldr	pc, [ip, #2388]!	; 0x954

00010c34 <mchar_async_cache_init@plt>:
   10c34:	add	ip, pc, #1048576	; 0x100000
   10c38:	add	ip, ip, #4, 20	; 0x4000
   10c3c:	ldr	pc, [ip, #2380]!	; 0x94c

00010c40 <myhtml_check_tag_parser@plt>:
   10c40:	add	ip, pc, #1048576	; 0x100000
   10c44:	add	ip, ip, #4, 20	; 0x4000
   10c48:	ldr	pc, [ip, #2372]!	; 0x944

00010c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>:
   10c4c:	add	ip, pc, #1048576	; 0x100000
   10c50:	add	ip, ip, #4, 20	; 0x4000
   10c54:	ldr	pc, [ip, #2364]!	; 0x93c

00010c58 <mchar_async_node_delete@plt>:
   10c58:	add	ip, pc, #1048576	; 0x100000
   10c5c:	add	ip, ip, #4, 20	; 0x4000
   10c60:	ldr	pc, [ip, #2356]!	; 0x934

00010c64 <mchar_async_crop_first_chars_without_cache@plt>:
   10c64:	add	ip, pc, #1048576	; 0x100000
   10c68:	add	ip, ip, #4, 20	; 0x4000
   10c6c:	ldr	pc, [ip, #2348]!	; 0x92c

00010c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>:
   10c70:	add	ip, pc, #1048576	; 0x100000
   10c74:	add	ip, ip, #4, 20	; 0x4000
   10c78:	ldr	pc, [ip, #2340]!	; 0x924

00010c7c <mchar_async_cache_add@plt>:
   10c7c:	add	ip, pc, #1048576	; 0x100000
   10c80:	add	ip, ip, #4, 20	; 0x4000
   10c84:	ldr	pc, [ip, #2332]!	; 0x91c

00010c88 <myencoding_string_append_chunk_lowercase_ascii@plt>:
   10c88:	add	ip, pc, #1048576	; 0x100000
   10c8c:	add	ip, ip, #4, 20	; 0x4000
   10c90:	ldr	pc, [ip, #2324]!	; 0x914

00010c94 <mycore_malloc@plt>:
   10c94:	add	ip, pc, #1048576	; 0x100000
   10c98:	add	ip, ip, #4, 20	; 0x4000
   10c9c:	ldr	pc, [ip, #2316]!	; 0x90c

00010ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>:
   10ca0:	add	ip, pc, #1048576	; 0x100000
   10ca4:	add	ip, ip, #4, 20	; 0x4000
   10ca8:	ldr	pc, [ip, #2308]!	; 0x904

00010cac <mythread_queue_node_malloc_limit@plt>:
   10cac:	add	ip, pc, #1048576	; 0x100000
   10cb0:	add	ip, ip, #4, 20	; 0x4000
   10cb4:	ldr	pc, [ip, #2300]!	; 0x8fc

00010cb8 <myhtml_tree_node_insert_by_token@plt>:
   10cb8:	add	ip, pc, #1048576	; 0x100000
   10cbc:	add	ip, ip, #4, 20	; 0x4000
   10cc0:	ldr	pc, [ip, #2292]!	; 0x8f4

00010cc4 <mctree_insert_after@plt>:
   10cc4:	add	ip, pc, #1048576	; 0x100000
   10cc8:	add	ip, ip, #4, 20	; 0x4000
   10ccc:	ldr	pc, [ip, #2284]!	; 0x8ec

00010cd0 <myencoding_by_name@plt>:
   10cd0:	add	ip, pc, #1048576	; 0x100000
   10cd4:	add	ip, ip, #4, 20	; 0x4000
   10cd8:	ldr	pc, [ip, #2276]!	; 0x8e4

00010cdc <myhtml_tree_template_insertion_init@plt>:
   10cdc:	add	ip, pc, #1048576	; 0x100000
   10ce0:	add	ip, ip, #4, 20	; 0x4000
   10ce4:	ldr	pc, [ip, #2268]!	; 0x8dc

00010ce8 <myhtml_tree_open_elements_destroy@plt>:
   10ce8:	add	ip, pc, #1048576	; 0x100000
   10cec:	add	ip, ip, #4, 20	; 0x4000
   10cf0:	ldr	pc, [ip, #2260]!	; 0x8d4

00010cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>:
   10cf4:	add	ip, pc, #1048576	; 0x100000
   10cf8:	add	ip, ip, #4, 20	; 0x4000
   10cfc:	ldr	pc, [ip, #2252]!	; 0x8cc

00010d00 <myhtml_tree_node_free@plt>:
   10d00:	add	ip, pc, #1048576	; 0x100000
   10d04:	add	ip, ip, #4, 20	; 0x4000
   10d08:	ldr	pc, [ip, #2244]!	; 0x8c4

00010d0c <mythread_mutex_post@plt>:
   10d0c:	add	ip, pc, #1048576	; 0x100000
   10d10:	add	ip, ip, #4, 20	; 0x4000
   10d14:	ldr	pc, [ip, #2236]!	; 0x8bc

00010d18 <mycore_string_clean@plt>:
   10d18:	add	ip, pc, #1048576	; 0x100000
   10d1c:	add	ip, ip, #4, 20	; 0x4000
   10d20:	ldr	pc, [ip, #2228]!	; 0x8b4

00010d24 <mythread_queue_list_entry_make_batch@plt>:
   10d24:	add	ip, pc, #1048576	; 0x100000
   10d28:	add	ip, ip, #4, 20	; 0x4000
   10d2c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010d30 <myhtml_tag_create@plt>:
   10d30:	add	ip, pc, #1048576	; 0x100000
   10d34:	add	ip, ip, #4, 20	; 0x4000
   10d38:	ldr	pc, [ip, #2212]!	; 0x8a4

00010d3c <myhtml_tree_close_cell@plt>:
   10d3c:	add	ip, pc, #1048576	; 0x100000
   10d40:	add	ip, ip, #4, 20	; 0x4000
   10d44:	ldr	pc, [ip, #2204]!	; 0x89c

00010d48 <myhtml_tree_adjusted_current_node@plt>:
   10d48:	add	ip, pc, #1048576	; 0x100000
   10d4c:	add	ip, ip, #4, 20	; 0x4000
   10d50:	ldr	pc, [ip, #2196]!	; 0x894

00010d54 <myencoding_detect_russian_has_end@plt>:
   10d54:	add	ip, pc, #1048576	; 0x100000
   10d58:	add	ip, ip, #4, 20	; 0x4000
   10d5c:	ldr	pc, [ip, #2188]!	; 0x88c

00010d60 <myhtml_rules_check_for_first_newline@plt>:
   10d60:	add	ip, pc, #1048576	; 0x100000
   10d64:	add	ip, ip, #4, 20	; 0x4000
   10d68:	ldr	pc, [ip, #2180]!	; 0x884

00010d6c <myhtml_stream_buffer_init@plt>:
   10d6c:	add	ip, pc, #1048576	; 0x100000
   10d70:	add	ip, ip, #4, 20	; 0x4000
   10d74:	ldr	pc, [ip, #2172]!	; 0x87c

00010d78 <mythread_queue_node_clean@plt>:
   10d78:	add	ip, pc, #1048576	; 0x100000
   10d7c:	add	ip, ip, #4, 20	; 0x4000
   10d80:	ldr	pc, [ip, #2164]!	; 0x874

00010d84 <myhtml_tree_node_insert_foreign_element@plt>:
   10d84:	add	ip, pc, #1048576	; 0x100000
   10d88:	add	ip, ip, #4, 20	; 0x4000
   10d8c:	ldr	pc, [ip, #2156]!	; 0x86c

00010d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>:
   10d90:	add	ip, pc, #1048576	; 0x100000
   10d94:	add	ip, ip, #4, 20	; 0x4000
   10d98:	ldr	pc, [ip, #2148]!	; 0x864

00010d9c <mythread_mutex_wait@plt>:
   10d9c:	add	ip, pc, #1048576	; 0x100000
   10da0:	add	ip, ip, #4, 20	; 0x4000
   10da4:	ldr	pc, [ip, #2140]!	; 0x85c

00010da8 <mchar_async_destroy@plt>:
   10da8:	add	ip, pc, #1048576	; 0x100000
   10dac:	add	ip, ip, #4, 20	; 0x4000
   10db0:	ldr	pc, [ip, #2132]!	; 0x854

00010db4 <mycore_utils_mhash_add_with_choice@plt>:
   10db4:	add	ip, pc, #1048576	; 0x100000
   10db8:	add	ip, ip, #4, 20	; 0x4000
   10dbc:	ldr	pc, [ip, #2124]!	; 0x84c

00010dc0 <myhtml_tree_node_delete@plt>:
   10dc0:	add	ip, pc, #1048576	; 0x100000
   10dc4:	add	ip, ip, #4, 20	; 0x4000
   10dc8:	ldr	pc, [ip, #2116]!	; 0x844

00010dcc <mycore_free@plt>:
   10dcc:	add	ip, pc, #1048576	; 0x100000
   10dd0:	add	ip, ip, #4, 20	; 0x4000
   10dd4:	ldr	pc, [ip, #2108]!	; 0x83c

00010dd8 <mythread_queue_list_wait_for_done@plt>:
   10dd8:	add	ip, pc, #1048576	; 0x100000
   10ddc:	add	ip, ip, #4, 20	; 0x4000
   10de0:	ldr	pc, [ip, #2100]!	; 0x834

00010de4 <mycore_string_whitespace_from_begin@plt>:
   10de4:	add	ip, pc, #1048576	; 0x100000
   10de8:	add	ip, ip, #4, 20	; 0x4000
   10dec:	ldr	pc, [ip, #2092]!	; 0x82c

00010df0 <myhtml_tree_node_remove@plt>:
   10df0:	add	ip, pc, #1048576	; 0x100000
   10df4:	add	ip, ip, #4, 20	; 0x4000
   10df8:	ldr	pc, [ip, #2084]!	; 0x824

00010dfc <myhtml_collection_check_size@plt>:
   10dfc:	add	ip, pc, #1048576	; 0x100000
   10e00:	add	ip, ip, #4, 20	; 0x4000
   10e04:	ldr	pc, [ip, #2076]!	; 0x81c

00010e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>:
   10e08:	add	ip, pc, #1048576	; 0x100000
   10e0c:	add	ip, ip, #4, 20	; 0x4000
   10e10:	ldr	pc, [ip, #2068]!	; 0x814

00010e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>:
   10e14:	add	ip, pc, #1048576	; 0x100000
   10e18:	add	ip, ip, #4, 20	; 0x4000
   10e1c:	ldr	pc, [ip, #2060]!	; 0x80c

00010e20 <myhtml_tree_open_elements_clean@plt>:
   10e20:	add	ip, pc, #1048576	; 0x100000
   10e24:	add	ip, ip, #4, 20	; 0x4000
   10e28:	ldr	pc, [ip, #2052]!	; 0x804

00010e2c <myhtml_tree_node_insert_doctype@plt>:
   10e2c:	add	ip, pc, #1048576	; 0x100000
   10e30:	add	ip, ip, #4, 20	; 0x4000
   10e34:	ldr	pc, [ip, #2044]!	; 0x7fc

00010e38 <myhtml_tree_template_insertion_destroy@plt>:
   10e38:	add	ip, pc, #1048576	; 0x100000
   10e3c:	add	ip, ip, #4, 20	; 0x4000
   10e40:	ldr	pc, [ip, #2036]!	; 0x7f4

00010e44 <myhtml_tag_destroy@plt>:
   10e44:	add	ip, pc, #1048576	; 0x100000
   10e48:	add	ip, ip, #4, 20	; 0x4000
   10e4c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010e50 <mcsync_mutex_clean@plt>:
   10e50:	add	ip, pc, #1048576	; 0x100000
   10e54:	add	ip, ip, #4, 20	; 0x4000
   10e58:	ldr	pc, [ip, #2020]!	; 0x7e4

00010e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>:
   10e5c:	add	ip, pc, #1048576	; 0x100000
   10e60:	add	ip, ip, #4, 20	; 0x4000
   10e64:	ldr	pc, [ip, #2012]!	; 0x7dc

00010e68 <myhtml_serialization_tree_callback@plt>:
   10e68:	add	ip, pc, #1048576	; 0x100000
   10e6c:	add	ip, ip, #4, 20	; 0x4000
   10e70:	ldr	pc, [ip, #2004]!	; 0x7d4

00010e74 <myhtml_stream_buffer_create@plt>:
   10e74:	add	ip, pc, #1048576	; 0x100000
   10e78:	add	ip, ip, #4, 20	; 0x4000
   10e7c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010e80 <myhtml_tree_appropriate_place_inserting@plt>:
   10e80:	add	ip, pc, #1048576	; 0x100000
   10e84:	add	ip, ip, #4, 20	; 0x4000
   10e88:	ldr	pc, [ip, #1988]!	; 0x7c4

00010e8c <myencoding_codepoint_to_ascii_utf_8@plt>:
   10e8c:	add	ip, pc, #1048576	; 0x100000
   10e90:	add	ip, ip, #4, 20	; 0x4000
   10e94:	ldr	pc, [ip, #1980]!	; 0x7bc

00010e98 <myhtml_token_attr_remove_by_name@plt>:
   10e98:	add	ip, pc, #1048576	; 0x100000
   10e9c:	add	ip, ip, #4, 20	; 0x4000
   10ea0:	ldr	pc, [ip, #1972]!	; 0x7b4

00010ea4 <mycore_utils_mhash_rebuild_add_entry@plt>:
   10ea4:	add	ip, pc, #1048576	; 0x100000
   10ea8:	add	ip, ip, #4, 20	; 0x4000
   10eac:	ldr	pc, [ip, #1964]!	; 0x7ac

00010eb0 <myhtml_token_attr_by_name@plt>:
   10eb0:	add	ip, pc, #1048576	; 0x100000
   10eb4:	add	ip, ip, #4, 20	; 0x4000
   10eb8:	ldr	pc, [ip, #1956]!	; 0x7a4

00010ebc <mcsync_unlock@plt>:
   10ebc:	add	ip, pc, #1048576	; 0x100000
   10ec0:	add	ip, ip, #4, 20	; 0x4000
   10ec4:	ldr	pc, [ip, #1948]!	; 0x79c

00010ec8 <myhtml_tree_token_list_append@plt>:
   10ec8:	add	ip, pc, #1048576	; 0x100000
   10ecc:	add	ip, ip, #4, 20	; 0x4000
   10ed0:	ldr	pc, [ip, #1940]!	; 0x794

00010ed4 <mycore_utils_avl_tree_node_create_root@plt>:
   10ed4:	add	ip, pc, #1048576	; 0x100000
   10ed8:	add	ip, ip, #4, 20	; 0x4000
   10edc:	ldr	pc, [ip, #1932]!	; 0x78c

00010ee0 <mythread_queue_list_entry_make_stream@plt>:
   10ee0:	add	ip, pc, #1048576	; 0x100000
   10ee4:	add	ip, ip, #4, 20	; 0x4000
   10ee8:	ldr	pc, [ip, #1924]!	; 0x784

00010eec <mycore_strncmp@plt>:
   10eec:	add	ip, pc, #1048576	; 0x100000
   10ef0:	add	ip, ip, #4, 20	; 0x4000
   10ef4:	ldr	pc, [ip, #1916]!	; 0x77c

00010ef8 <mycore_utils_mhash_create_entry@plt>:
   10ef8:	add	ip, pc, #1048576	; 0x100000
   10efc:	add	ip, ip, #4, 20	; 0x4000
   10f00:	ldr	pc, [ip, #1908]!	; 0x774

00010f04 <myhtml_tree_element_in_scope@plt>:
   10f04:	add	ip, pc, #1048576	; 0x100000
   10f08:	add	ip, ip, #4, 20	; 0x4000
   10f0c:	ldr	pc, [ip, #1900]!	; 0x76c

00010f10 <myencoding_index_gb18030_ranges_code_point@plt>:
   10f10:	add	ip, pc, #1048576	; 0x100000
   10f14:	add	ip, ip, #4, 20	; 0x4000
   10f18:	ldr	pc, [ip, #1892]!	; 0x764

00010f1c <__mtree_search_lowercase_to_start@plt>:
   10f1c:	add	ip, pc, #1048576	; 0x100000
   10f20:	add	ip, ip, #4, 20	; 0x4000
   10f24:	ldr	pc, [ip, #1884]!	; 0x75c

00010f28 <fseek@plt>:
   10f28:	add	ip, pc, #1048576	; 0x100000
   10f2c:	add	ip, ip, #4, 20	; 0x4000
   10f30:	ldr	pc, [ip, #1876]!	; 0x754

00010f34 <myhtml_node_clone@plt>:
   10f34:	add	ip, pc, #1048576	; 0x100000
   10f38:	add	ip, ip, #4, 20	; 0x4000
   10f3c:	ldr	pc, [ip, #1868]!	; 0x74c

00010f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>:
   10f40:	add	ip, pc, #1048576	; 0x100000
   10f44:	add	ip, ip, #4, 20	; 0x4000
   10f48:	ldr	pc, [ip, #1860]!	; 0x744

00010f4c <myencoding_detect_russian@plt>:
   10f4c:	add	ip, pc, #1048576	; 0x100000
   10f50:	add	ip, ip, #4, 20	; 0x4000
   10f54:	ldr	pc, [ip, #1852]!	; 0x73c

00010f58 <pthread_attr_setdetachstate@plt>:
   10f58:	add	ip, pc, #1048576	; 0x100000
   10f5c:	add	ip, ip, #4, 20	; 0x4000
   10f60:	ldr	pc, [ip, #1844]!	; 0x734

00010f64 <mchar_async_cache_delete@plt>:
   10f64:	add	ip, pc, #1048576	; 0x100000
   10f68:	add	ip, ip, #4, 20	; 0x4000
   10f6c:	ldr	pc, [ip, #1836]!	; 0x72c

00010f70 <mcobject_clean@plt>:
   10f70:	add	ip, pc, #1048576	; 0x100000
   10f74:	add	ip, ip, #4, 20	; 0x4000
   10f78:	ldr	pc, [ip, #1828]!	; 0x724

00010f7c <myhtml_token_node_clean@plt>:
   10f7c:	add	ip, pc, #1048576	; 0x100000
   10f80:	add	ip, ip, #4, 20	; 0x4000
   10f84:	ldr	pc, [ip, #1820]!	; 0x71c

00010f88 <myhtml_token_delete@plt>:
   10f88:	add	ip, pc, #1048576	; 0x100000
   10f8c:	add	ip, ip, #4, 20	; 0x4000
   10f90:	ldr	pc, [ip, #1812]!	; 0x714

00010f94 <strncmp@plt>:
   10f94:	add	ip, pc, #1048576	; 0x100000
   10f98:	add	ip, ip, #4, 20	; 0x4000
   10f9c:	ldr	pc, [ip, #1804]!	; 0x70c

00010fa0 <mcsimple_get_by_absolute_position@plt>:
   10fa0:	add	ip, pc, #1048576	; 0x100000
   10fa4:	add	ip, ip, #4, 20	; 0x4000
   10fa8:	ldr	pc, [ip, #1796]!	; 0x704

00010fac <mcsync_mutex_try_lock@plt>:
   10fac:	add	ip, pc, #1048576	; 0x100000
   10fb0:	add	ip, ip, #4, 20	; 0x4000
   10fb4:	ldr	pc, [ip, #1788]!	; 0x6fc

00010fb8 <mycore_utils_avl_tree_node_height@plt>:
   10fb8:	add	ip, pc, #1048576	; 0x100000
   10fbc:	add	ip, ip, #4, 20	; 0x4000
   10fc0:	ldr	pc, [ip, #1780]!	; 0x6f4

00010fc4 <mycore_utils_avl_tree_node_clean@plt>:
   10fc4:	add	ip, pc, #1048576	; 0x100000
   10fc8:	add	ip, ip, #4, 20	; 0x4000
   10fcc:	ldr	pc, [ip, #1772]!	; 0x6ec

00010fd0 <myhtml_tree_clear_stack_back_table_context@plt>:
   10fd0:	add	ip, pc, #1048576	; 0x100000
   10fd4:	add	ip, ip, #4, 20	; 0x4000
   10fd8:	ldr	pc, [ip, #1764]!	; 0x6e4

00010fdc <myhtml_tree_node_clone@plt>:
   10fdc:	add	ip, pc, #1048576	; 0x100000
   10fe0:	add	ip, ip, #4, 20	; 0x4000
   10fe4:	ldr	pc, [ip, #1756]!	; 0x6dc

00010fe8 <myhtml_tree_token_list_clean@plt>:
   10fe8:	add	ip, pc, #1048576	; 0x100000
   10fec:	add	ip, ip, #4, 20	; 0x4000
   10ff0:	ldr	pc, [ip, #1748]!	; 0x6d4

00010ff4 <myhtml_parser_stream@plt>:
   10ff4:	add	ip, pc, #1048576	; 0x100000
   10ff8:	add	ip, ip, #4, 20	; 0x4000
   10ffc:	ldr	pc, [ip, #1740]!	; 0x6cc

00011000 <myhtml_token_create@plt>:
   11000:	add	ip, pc, #1048576	; 0x100000
   11004:	add	ip, ip, #4, 20	; 0x4000
   11008:	ldr	pc, [ip, #1732]!	; 0x6c4

0001100c <myhtml_parser_token_data_to_string_lowercase@plt>:
   1100c:	add	ip, pc, #1048576	; 0x100000
   11010:	add	ip, ip, #4, 20	; 0x4000
   11014:	ldr	pc, [ip, #1724]!	; 0x6bc

00011018 <myencoding_detect_utf_8@plt>:
   11018:	add	ip, pc, #1048576	; 0x100000
   1101c:	add	ip, ip, #4, 20	; 0x4000
   11020:	ldr	pc, [ip, #1716]!	; 0x6b4

00011024 <mcsync_spin_unlock@plt>:
   11024:	add	ip, pc, #1048576	; 0x100000
   11028:	add	ip, ip, #4, 20	; 0x4000
   1102c:	ldr	pc, [ip, #1708]!	; 0x6ac

00011030 <myhtml_string_append_lowercase_with_preprocessing@plt>:
   11030:	add	ip, pc, #1048576	; 0x100000
   11034:	add	ip, ip, #4, 20	; 0x4000
   11038:	ldr	pc, [ip, #1700]!	; 0x6a4

0001103c <mcsync_mutex_lock@plt>:
   1103c:	add	ip, pc, #1048576	; 0x100000
   11040:	add	ip, ip, #4, 20	; 0x4000
   11044:	ldr	pc, [ip, #1692]!	; 0x69c

00011048 <myhtml_tree_open_elements_find@plt>:
   11048:	add	ip, pc, #1048576	; 0x100000
   1104c:	add	ip, ip, #4, 20	; 0x4000
   11050:	ldr	pc, [ip, #1684]!	; 0x694

00011054 <mcobject_async_clean@plt>:
   11054:	add	ip, pc, #1048576	; 0x100000
   11058:	add	ip, ip, #4, 20	; 0x4000
   1105c:	ldr	pc, [ip, #1676]!	; 0x68c

00011060 <mchar_async_mem_malloc@plt>:
   11060:	add	ip, pc, #1048576	; 0x100000
   11064:	add	ip, ip, #4, 20	; 0x4000
   11068:	ldr	pc, [ip, #1668]!	; 0x684

0001106c <myhtml_data_process_string_append_char@plt>:
   1106c:	add	ip, pc, #1048576	; 0x100000
   11070:	add	ip, ip, #4, 20	; 0x4000
   11074:	ldr	pc, [ip, #1660]!	; 0x67c

00011078 <myhtml_tag_clean@plt>:
   11078:	add	ip, pc, #1048576	; 0x100000
   1107c:	add	ip, ip, #4, 20	; 0x4000
   11080:	ldr	pc, [ip, #1652]!	; 0x674

00011084 <mythread_thread_attr_destroy@plt>:
   11084:	add	ip, pc, #1048576	; 0x100000
   11088:	add	ip, ip, #4, 20	; 0x4000
   1108c:	ldr	pc, [ip, #1644]!	; 0x66c

00011090 <mycore_string_clean_all@plt>:
   11090:	add	ip, pc, #1048576	; 0x100000
   11094:	add	ip, ip, #4, 20	; 0x4000
   11098:	ldr	pc, [ip, #1636]!	; 0x664

0001109c <myhtml_tree_node_clean@plt>:
   1109c:	add	ip, pc, #1048576	; 0x100000
   110a0:	add	ip, ip, #4, 20	; 0x4000
   110a4:	ldr	pc, [ip, #1628]!	; 0x65c

000110a8 <mythread_init@plt>:
   110a8:	add	ip, pc, #1048576	; 0x100000
   110ac:	add	ip, ip, #4, 20	; 0x4000
   110b0:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

000110b4 <mycore_incoming_buffer_add@@Base-0x174>:
   110b4:	ldr	r3, [pc, #20]	; 110d0 <mythread_init@plt+0x28>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <mythread_init@plt+0x2c>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	105e0 <__gmon_start__@plt>
   110d0:	andseq	r3, r0, ip, lsr pc
   110d4:	andeq	r0, r0, r8, ror r8
   110d8:	ldr	r3, [pc, #52]	; 11114 <mythread_init@plt+0x6c>
   110dc:	ldr	r0, [pc, #52]	; 11118 <mythread_init@plt+0x70>
   110e0:	add	r3, pc, r3
   110e4:	add	r0, pc, r0
   110e8:	add	r3, r3, #3
   110ec:	sub	r3, r3, r0
   110f0:	cmp	r3, #6
   110f4:	ldr	r3, [pc, #32]	; 1111c <mythread_init@plt+0x74>
   110f8:	add	r3, pc, r3
   110fc:	bxls	lr
   11100:	ldr	r2, [pc, #24]	; 11120 <mythread_init@plt+0x78>
   11104:	ldr	r3, [r3, r2]
   11108:	cmp	r3, #0
   1110c:	bxeq	lr
   11110:	bx	r3
   11114:			; <UNDEFINED> instruction: 0x001048f0
   11118:	andseq	r4, r0, ip, ror #17
   1111c:	andseq	r3, r0, r0, lsl #30
   11120:	andeq	r0, r0, r4, asr #14
   11124:	ldr	r1, [pc, #56]	; 11164 <mythread_init@plt+0xbc>
   11128:	ldr	r0, [pc, #56]	; 11168 <mythread_init@plt+0xc0>
   1112c:	add	r1, pc, r1
   11130:	add	r0, pc, r0
   11134:	sub	r1, r1, r0
   11138:	ldr	r3, [pc, #44]	; 1116c <mythread_init@plt+0xc4>
   1113c:	asr	r1, r1, #2
   11140:	add	r3, pc, r3
   11144:	add	r1, r1, r1, lsr #31
   11148:	asrs	r1, r1, #1
   1114c:	bxeq	lr
   11150:	ldr	r2, [pc, #24]	; 11170 <mythread_init@plt+0xc8>
   11154:	ldr	r3, [r3, r2]
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andseq	r4, r0, r4, lsr #17
   11168:	andseq	r4, r0, r0, lsr #17
   1116c:			; <UNDEFINED> instruction: 0x00103eb8
   11170:	andeq	r0, r0, ip, lsl #19
   11174:	ldr	r3, [pc, #76]	; 111c8 <mythread_init@plt+0x120>
   11178:	ldr	r2, [pc, #76]	; 111cc <mythread_init@plt+0x124>
   1117c:	add	r3, pc, r3
   11180:	add	r2, pc, r2
   11184:	ldrb	r3, [r3]
   11188:	cmp	r3, #0
   1118c:	bxne	lr
   11190:	ldr	r3, [pc, #56]	; 111d0 <mythread_init@plt+0x128>
   11194:	push	{r4, lr}
   11198:	ldr	r3, [r2, r3]
   1119c:	cmp	r3, #0
   111a0:	beq	111b0 <mythread_init@plt+0x108>
   111a4:	ldr	r3, [pc, #40]	; 111d4 <mythread_init@plt+0x12c>
   111a8:	ldr	r0, [pc, r3]
   111ac:	bl	fd40 <__cxa_finalize@plt>
   111b0:	bl	110d8 <mythread_init@plt+0x30>
   111b4:	ldr	r3, [pc, #28]	; 111d8 <mythread_init@plt+0x130>
   111b8:	mov	r2, #1
   111bc:	add	r3, pc, r3
   111c0:	strb	r2, [r3]
   111c4:	pop	{r4, pc}
   111c8:	andseq	r4, r0, r4, asr r8
   111cc:	andseq	r3, r0, r8, ror lr
   111d0:	andeq	r0, r0, r0, lsr r7
   111d4:	andseq	r4, r0, r4, lsr #16
   111d8:	andseq	r4, r0, r4, lsl r8
   111dc:	ldr	r0, [pc, #56]	; 1121c <mythread_init@plt+0x174>
   111e0:	ldr	r3, [pc, #56]	; 11220 <mythread_init@plt+0x178>
   111e4:	add	r0, pc, r0
   111e8:	ldr	r2, [r0]
   111ec:	add	r3, pc, r3
   111f0:	cmp	r2, #0
   111f4:	bne	111fc <mythread_init@plt+0x154>
   111f8:	b	11124 <mythread_init@plt+0x7c>
   111fc:	ldr	r2, [pc, #32]	; 11224 <mythread_init@plt+0x17c>
   11200:	ldr	r3, [r3, r2]
   11204:	cmp	r3, #0
   11208:	beq	111f8 <mythread_init@plt+0x150>
   1120c:	push	{r4, lr}
   11210:	blx	r3
   11214:	pop	{r4, lr}
   11218:	b	11124 <mythread_init@plt+0x7c>
   1121c:	strdeq	fp, [pc], -ip
   11220:	andseq	r3, r0, ip, lsl #28
   11224:	andeq	r0, r0, ip, lsr r9

00011228 <mycore_incoming_buffer_add@@Base>:
   11228:	mov	ip, r1
   1122c:	push	{r4, r5, r6, lr}
   11230:	mov	r1, #0
   11234:	mov	r4, r0
   11238:	mov	r0, ip
   1123c:	mov	r6, r3
   11240:	mov	r5, r2
   11244:	bl	10a60 <mcobject_malloc@plt>
   11248:	cmp	r4, #0
   1124c:	mov	r1, #0
   11250:	ldrne	r3, [r4, #12]
   11254:	str	r6, [r0, #8]
   11258:	ldrne	r2, [r4, #8]
   1125c:	str	r5, [r0]
   11260:	addne	r3, r3, r2
   11264:	strne	r3, [r0, #12]
   11268:	mov	r3, #0
   1126c:	str	r1, [r0, #4]
   11270:	streq	r4, [r0, #12]
   11274:	strne	r0, [r4, #20]
   11278:	str	r4, [r0, #16]
   1127c:	str	r3, [r0, #20]
   11280:	pop	{r4, r5, r6, pc}

00011284 <mycore_incoming_buffer_clean@@Base>:
   11284:	mov	r3, #0
   11288:	str	r3, [r0]
   1128c:	str	r3, [r0, #4]
   11290:	str	r3, [r0, #8]
   11294:	str	r3, [r0, #12]
   11298:	str	r3, [r0, #16]
   1129c:	str	r3, [r0, #20]
   112a0:	bx	lr

000112a4 <mycore_incoming_buffer_split@@Base>:
   112a4:	push	{r4, r5, r6, lr}
   112a8:	mov	r4, r0
   112ac:	ldr	r5, [r0, #12]
   112b0:	mov	r0, r1
   112b4:	mov	r1, #0
   112b8:	sub	r5, r2, r5
   112bc:	bl	10a60 <mcobject_malloc@plt>
   112c0:	ldr	r2, [r4, #8]
   112c4:	ldr	ip, [r4]
   112c8:	ldr	r1, [r4, #12]
   112cc:	sub	r2, r2, r5
   112d0:	add	ip, ip, r5
   112d4:	add	r1, r1, r5
   112d8:	mov	lr, #0
   112dc:	str	r2, [r0, #8]
   112e0:	str	r2, [r0, #4]
   112e4:	str	ip, [r0]
   112e8:	str	r1, [r0, #12]
   112ec:	str	r4, [r0, #16]
   112f0:	str	lr, [r0, #20]
   112f4:	str	r5, [r4, #8]
   112f8:	str	r5, [r4, #4]
   112fc:	str	r0, [r4, #20]
   11300:	pop	{r4, r5, r6, pc}

00011304 <mycore_incoming_buffer_find_by_position@@Base>:
   11304:	ldr	r3, [r0, #12]
   11308:	cmp	r3, r1
   1130c:	bcs	11348 <mycore_incoming_buffer_find_by_position@@Base+0x44>
   11310:	b	11324 <mycore_incoming_buffer_find_by_position@@Base+0x20>
   11314:	ldr	r0, [r0, #20]
   11318:	cmp	r0, #0
   1131c:	bxeq	lr
   11320:	ldr	r3, [r0, #12]
   11324:	ldr	r2, [r0, #8]
   11328:	add	r3, r3, r2
   1132c:	cmp	r1, r3
   11330:	bhi	11314 <mycore_incoming_buffer_find_by_position@@Base+0x10>
   11334:	bx	lr
   11338:	ldr	r0, [r0, #16]
   1133c:	cmp	r0, #0
   11340:	bxeq	lr
   11344:	ldr	r3, [r0, #12]
   11348:	cmp	r1, r3
   1134c:	bcc	11338 <mycore_incoming_buffer_find_by_position@@Base+0x34>
   11350:	bx	lr

00011354 <mycore_incoming_buffer_data@@Base>:
   11354:	ldr	r0, [r0]
   11358:	bx	lr

0001135c <mycore_incoming_buffer_length@@Base>:
   1135c:	ldr	r0, [r0, #4]
   11360:	bx	lr

00011364 <mycore_incoming_buffer_size@@Base>:
   11364:	ldr	r0, [r0, #8]
   11368:	bx	lr

0001136c <mycore_incoming_buffer_offset@@Base>:
   1136c:	ldr	r0, [r0, #12]
   11370:	bx	lr

00011374 <mycore_incoming_buffer_relative_begin@@Base>:
   11374:	ldr	r0, [r0, #12]
   11378:	sub	r0, r1, r0
   1137c:	bx	lr

00011380 <mycore_incoming_buffer_available_length@@Base>:
   11380:	ldr	r0, [r0, #8]
   11384:	add	r3, r1, r2
   11388:	cmp	r3, r0
   1138c:	subhi	r0, r0, r1
   11390:	movls	r0, r2
   11394:	bx	lr

00011398 <mycore_incoming_buffer_next@@Base>:
   11398:	ldr	r0, [r0, #20]
   1139c:	bx	lr

000113a0 <mycore_incoming_buffer_prev@@Base>:
   113a0:	ldr	r0, [r0, #16]
   113a4:	bx	lr

000113a8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base>:
   113a8:	ldr	r2, [r0]
   113ac:	push	{r4, r5, r6, r7, r8, lr}
   113b0:	mov	r7, r0
   113b4:	ldr	r3, [r1]
   113b8:	ldr	r0, [r2, #8]
   113bc:	ldr	r4, [pc, #128]	; 11444 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x9c>
   113c0:	cmp	r3, r0
   113c4:	movcs	r0, #0
   113c8:	ldrcs	r2, [r2, #20]
   113cc:	movcs	r3, r0
   113d0:	strcs	r0, [r1]
   113d4:	ldr	r6, [r2]
   113d8:	mov	r0, #0
   113dc:	mov	ip, r0
   113e0:	mov	r8, r0
   113e4:	add	r4, pc, r4
   113e8:	ldrb	lr, [r6, r3]
   113ec:	add	r3, r3, #1
   113f0:	add	r5, r4, lr
   113f4:	ldrb	r5, [r5, #256]	; 0x100
   113f8:	cmp	r5, #255	; 0xff
   113fc:	cmpne	ip, #6
   11400:	beq	1143c <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x94>
   11404:	str	r3, [r1]
   11408:	ldrb	lr, [r4, lr]
   1140c:	ldr	r5, [r2, #8]
   11410:	add	ip, ip, #1
   11414:	cmp	r3, r5
   11418:	orr	r0, lr, r0, lsl #4
   1141c:	bcc	113e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x40>
   11420:	ldr	lr, [r2, #20]
   11424:	mov	r3, #0
   11428:	cmp	lr, r3
   1142c:	ldrne	r6, [r2]
   11430:	movne	r2, lr
   11434:	strne	r8, [r1]
   11438:	bne	113e8 <mycore_incoming_buffer_convert_one_escaped_to_code_point@@Base+0x40>
   1143c:	str	r2, [r7]
   11440:	pop	{r4, r5, r6, r7, r8, pc}
   11444:	andeq	fp, r1, r0, ror ip

00011448 <mycore_incoming_buffer_escaped_case_cmp@@Base>:
   11448:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1144c:	sub	sp, sp, #20
   11450:	ldr	lr, [r0]
   11454:	ldr	r4, [r3]
   11458:	str	lr, [sp, #12]
   1145c:	ldr	ip, [lr, #8]
   11460:	cmp	r4, ip
   11464:	bcc	11480 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x38>
   11468:	ldr	lr, [lr, #20]
   1146c:	cmp	lr, #0
   11470:	beq	1158c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x144>
   11474:	mov	ip, #0
   11478:	str	lr, [sp, #12]
   1147c:	str	ip, [r3]
   11480:	cmp	r2, #0
   11484:	mov	r8, r2
   11488:	mov	r6, r3
   1148c:	str	r0, [sp, #4]
   11490:	ldr	ip, [lr]
   11494:	beq	1156c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x124>
   11498:	ldr	r7, [pc, #244]	; 11594 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x14c>
   1149c:	ldr	r9, [pc, #244]	; 11598 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x150>
   114a0:	mov	r5, #0
   114a4:	add	r7, pc, r7
   114a8:	add	r9, pc, r9
   114ac:	mov	r4, r1
   114b0:	mov	fp, r5
   114b4:	add	sl, sp, #12
   114b8:	b	11510 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc8>
   114bc:	ldrb	r1, [r4]
   114c0:	ldrb	r2, [lr, #512]	; 0x200
   114c4:	ldr	lr, [sp, #12]
   114c8:	add	r1, r7, r1
   114cc:	ldrb	r1, [r1, #512]	; 0x200
   114d0:	cmp	r2, r1
   114d4:	bne	11570 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x128>
   114d8:	str	r0, [r6]
   114dc:	ldr	r2, [lr, #8]
   114e0:	add	r5, r5, #1
   114e4:	cmp	r2, r0
   114e8:	add	r4, r4, #1
   114ec:	bhi	11508 <mycore_incoming_buffer_escaped_case_cmp@@Base+0xc0>
   114f0:	ldr	r2, [lr, #20]
   114f4:	cmp	r2, #0
   114f8:	beq	11570 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x128>
   114fc:	ldr	ip, [r2]
   11500:	str	r2, [sp, #12]
   11504:	str	fp, [r6]
   11508:	cmp	r8, r5
   1150c:	beq	11584 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   11510:	ldr	r2, [r6]
   11514:	add	r0, r2, #1
   11518:	ldrb	r1, [ip, r2]
   1151c:	cmp	r1, #92	; 0x5c
   11520:	add	lr, r7, r1
   11524:	bne	114bc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x74>
   11528:	str	r0, [r6]
   1152c:	mov	r1, r6
   11530:	mov	r0, sl
   11534:	bl	101f0 <mycore_incoming_buffer_convert_one_escaped_to_code_point@plt>
   11538:	cmp	r0, #255	; 0xff
   1153c:	add	r1, r9, r0
   11540:	bhi	11584 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x13c>
   11544:	ldrb	r2, [r4]
   11548:	ldrb	r1, [r1, #512]	; 0x200
   1154c:	ldr	lr, [sp, #12]
   11550:	add	r2, r9, r2
   11554:	ldrb	r2, [r2, #512]	; 0x200
   11558:	cmp	r1, r2
   1155c:	bne	11570 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x128>
   11560:	ldr	r0, [r6]
   11564:	ldr	ip, [lr]
   11568:	b	114dc <mycore_incoming_buffer_escaped_case_cmp@@Base+0x94>
   1156c:	mov	r5, r2
   11570:	ldr	r3, [sp, #4]
   11574:	sub	r0, r8, r5
   11578:	str	lr, [r3]
   1157c:	add	sp, sp, #20
   11580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11584:	ldr	lr, [sp, #12]
   11588:	b	11570 <mycore_incoming_buffer_escaped_case_cmp@@Base+0x128>
   1158c:	mov	r0, r2
   11590:	b	1157c <mycore_incoming_buffer_escaped_case_cmp@@Base+0x134>
   11594:			; <UNDEFINED> instruction: 0x0001bbb0
   11598:	andeq	fp, r1, ip, lsr #23

0001159c <mycore_string_clean@@Base>:
   1159c:	mov	r3, #0
   115a0:	str	r3, [r0, #8]
   115a4:	bx	lr

000115a8 <mycore_string_init@@Base>:
   115a8:	push	{r4, r5, r6, r7, r8, lr}
   115ac:	mov	r4, r2
   115b0:	mov	r2, r3
   115b4:	mov	r5, r3
   115b8:	mov	r7, r1
   115bc:	mov	r6, r0
   115c0:	bl	10910 <mchar_async_malloc@plt>
   115c4:	str	r5, [r4, #4]
   115c8:	str	r7, [r4, #16]
   115cc:	str	r6, [r4, #12]
   115d0:	str	r0, [r4]
   115d4:	mov	r0, r4
   115d8:	bl	10d18 <mycore_string_clean@plt>
   115dc:	ldr	r0, [r4]
   115e0:	pop	{r4, r5, r6, r7, r8, pc}

000115e4 <mycore_string_clean_all@@Base>:
   115e4:	mov	r3, #0
   115e8:	str	r3, [r0]
   115ec:	str	r3, [r0, #4]
   115f0:	str	r3, [r0, #8]
   115f4:	str	r3, [r0, #12]
   115f8:	str	r3, [r0, #16]
   115fc:	bx	lr

00011600 <mycore_string_destroy@@Base>:
   11600:	push	{r4, r5, r6, lr}
   11604:	subs	r4, r0, #0
   11608:	beq	11638 <mycore_string_destroy@@Base+0x38>
   1160c:	ldr	r2, [r4]
   11610:	mov	r5, r1
   11614:	cmp	r2, #0
   11618:	beq	11630 <mycore_string_destroy@@Base+0x30>
   1161c:	ldr	r0, [r4, #12]
   11620:	cmp	r0, #0
   11624:	beq	11630 <mycore_string_destroy@@Base+0x30>
   11628:	ldr	r1, [r4, #16]
   1162c:	bl	10718 <mchar_async_free@plt>
   11630:	cmp	r5, #0
   11634:	bne	11640 <mycore_string_destroy@@Base+0x40>
   11638:	mov	r0, r4
   1163c:	pop	{r4, r5, r6, pc}
   11640:	mov	r0, r4
   11644:	bl	10dcc <mycore_free@plt>
   11648:	mov	r4, #0
   1164c:	b	11638 <mycore_string_destroy@@Base+0x38>

00011650 <mycore_string_raw_clean@@Base>:
   11650:	mov	r3, #0
   11654:	str	r3, [r0, #8]
   11658:	bx	lr

0001165c <mycore_string_raw_clean_all@@Base>:
   1165c:	mov	r3, #0
   11660:	str	r3, [r0]
   11664:	str	r3, [r0, #4]
   11668:	str	r3, [r0, #8]
   1166c:	bx	lr

00011670 <mycore_string_raw_destroy@@Base>:
   11670:	push	{r4, r5, r6, lr}
   11674:	subs	r4, r0, #0
   11678:	beq	116a0 <mycore_string_raw_destroy@@Base+0x30>
   1167c:	ldr	r0, [r4]
   11680:	mov	r5, r1
   11684:	cmp	r0, #0
   11688:	beq	11698 <mycore_string_raw_destroy@@Base+0x28>
   1168c:	bl	10dcc <mycore_free@plt>
   11690:	mov	r3, #0
   11694:	str	r3, [r4]
   11698:	cmp	r5, #0
   1169c:	bne	116a8 <mycore_string_raw_destroy@@Base+0x38>
   116a0:	mov	r0, r4
   116a4:	pop	{r4, r5, r6, pc}
   116a8:	mov	r0, r4
   116ac:	bl	10dcc <mycore_free@plt>
   116b0:	mov	r4, #0
   116b4:	b	116a0 <mycore_string_raw_destroy@@Base+0x30>

000116b8 <mycore_string_realloc@@Base>:
   116b8:	push	{r4, r5, lr}
   116bc:	subs	r4, r0, #0
   116c0:	sub	sp, sp, #12
   116c4:	beq	116f4 <mycore_string_realloc@@Base+0x3c>
   116c8:	mov	r5, r1
   116cc:	ldr	r3, [r4, #8]
   116d0:	ldr	r2, [r4]
   116d4:	ldr	r1, [r4, #16]
   116d8:	ldr	r0, [r4, #12]
   116dc:	str	r5, [sp]
   116e0:	bl	ffbc <mchar_async_realloc@plt>
   116e4:	cmp	r0, #0
   116e8:	stmne	r4, {r0, r5}
   116ec:	add	sp, sp, #12
   116f0:	pop	{r4, r5, pc}
   116f4:	mov	r0, r4
   116f8:	b	116ec <mycore_string_realloc@@Base+0x34>

000116fc <mycore_string_data_alloc@@Base>:
   116fc:	b	10910 <mchar_async_malloc@plt>

00011700 <mycore_string_data_realloc@@Base>:
   11700:	b	ffbc <mchar_async_realloc@plt>

00011704 <mycore_string_data_free@@Base>:
   11704:	b	10718 <mchar_async_free@plt>

00011708 <mycore_string_data@@Base>:
   11708:	cmp	r0, #0
   1170c:	ldrne	r0, [r0]
   11710:	bx	lr

00011714 <mycore_string_length@@Base>:
   11714:	cmp	r0, #0
   11718:	ldrne	r0, [r0, #8]
   1171c:	bx	lr

00011720 <mycore_string_size@@Base>:
   11720:	cmp	r0, #0
   11724:	ldrne	r0, [r0, #4]
   11728:	bx	lr

0001172c <mycore_string_data_set@@Base>:
   1172c:	cmp	r0, #0
   11730:	strne	r1, [r0]
   11734:	movne	r0, r1
   11738:	bx	lr

0001173c <mycore_string_size_set@@Base>:
   1173c:	cmp	r0, #0
   11740:	strne	r1, [r0, #4]
   11744:	movne	r0, r1
   11748:	bx	lr

0001174c <mycore_string_length_set@@Base>:
   1174c:	cmp	r0, #0
   11750:	strne	r1, [r0, #8]
   11754:	movne	r0, r1
   11758:	bx	lr

0001175c <mycore_string_append@@Base>:
   1175c:	push	{r4, r5, r6, lr}
   11760:	mov	r5, r2
   11764:	ldr	r2, [r0, #8]
   11768:	add	r3, r5, #1
   1176c:	ldr	ip, [r0, #4]
   11770:	add	r3, r3, r2
   11774:	cmp	r3, ip
   11778:	mov	r4, r0
   1177c:	mov	r6, r1
   11780:	bcc	11790 <mycore_string_append@@Base+0x34>
   11784:	mov	r1, r3
   11788:	bl	10964 <mycore_string_realloc@plt>
   1178c:	ldr	r2, [r4, #8]
   11790:	ldr	r0, [r4]
   11794:	mov	r1, r6
   11798:	add	r0, r0, r2
   1179c:	mov	r2, r5
   117a0:	bl	ff5c <memcpy@plt>
   117a4:	ldr	r2, [r4, #8]
   117a8:	ldr	r3, [r4]
   117ac:	add	r5, r5, r2
   117b0:	mov	r2, #0
   117b4:	str	r5, [r4, #8]
   117b8:	strb	r2, [r3, r5]
   117bc:	pop	{r4, r5, r6, pc}

000117c0 <mycore_string_append_one@@Base>:
   117c0:	push	{r4, r5, r6, lr}
   117c4:	mov	r5, r1
   117c8:	ldr	r1, [r0, #8]
   117cc:	ldr	r3, [r0, #4]
   117d0:	add	r2, r1, #2
   117d4:	cmp	r2, r3
   117d8:	mov	r4, r0
   117dc:	bcc	117ec <mycore_string_append_one@@Base+0x2c>
   117e0:	add	r1, r1, #3
   117e4:	bl	10964 <mycore_string_realloc@plt>
   117e8:	ldr	r1, [r4, #8]
   117ec:	ldr	r3, [r4]
   117f0:	mov	r0, #0
   117f4:	strb	r5, [r3, r1]
   117f8:	ldr	r3, [r4, #8]
   117fc:	ldr	r2, [r4]
   11800:	add	r3, r3, #1
   11804:	str	r3, [r4, #8]
   11808:	strb	r0, [r2, r3]
   1180c:	pop	{r4, r5, r6, pc}

00011810 <mycore_string_append_lowercase@@Base>:
   11810:	ldr	ip, [r0, #8]
   11814:	push	{r4, r5, r6, lr}
   11818:	add	r3, r2, #1
   1181c:	mov	r6, r2
   11820:	ldr	r2, [r0, #4]
   11824:	add	r3, r3, ip
   11828:	cmp	r3, r2
   1182c:	mov	r5, r0
   11830:	mov	r4, r1
   11834:	bcs	11888 <mycore_string_append_lowercase@@Base+0x78>
   11838:	ldr	r2, [r5]
   1183c:	cmp	r6, #0
   11840:	add	r2, r2, ip
   11844:	beq	11870 <mycore_string_append_lowercase@@Base+0x60>
   11848:	ldr	lr, [pc, #72]	; 11898 <mycore_string_append_lowercase@@Base+0x88>
   1184c:	mov	r1, r4
   11850:	add	lr, pc, lr
   11854:	add	ip, r4, r6
   11858:	sub	r3, r2, #1
   1185c:	ldrb	r0, [r1], #1
   11860:	cmp	ip, r1
   11864:	ldrb	r0, [lr, r0]
   11868:	strb	r0, [r3, #1]!
   1186c:	bne	1185c <mycore_string_append_lowercase@@Base+0x4c>
   11870:	mov	r3, #0
   11874:	strb	r3, [r2, r6]
   11878:	ldr	r2, [r5, #8]
   1187c:	add	r6, r2, r6
   11880:	str	r6, [r5, #8]
   11884:	pop	{r4, r5, r6, pc}
   11888:	mov	r1, r3
   1188c:	bl	10964 <mycore_string_realloc@plt>
   11890:	ldr	ip, [r5, #8]
   11894:	b	11838 <mycore_string_append_lowercase@@Base+0x28>
   11898:	andeq	fp, r1, r4, lsl #22

0001189c <mycore_string_copy@@Base>:
   1189c:	ldr	r2, [r1, #8]
   118a0:	ldr	r1, [r1]
   118a4:	b	108d4 <mycore_string_append@plt>

000118a8 <mycore_string_raw_copy@@Base>:
   118a8:	mov	r3, #0
   118ac:	cmp	r2, #0
   118b0:	strb	r3, [r0, r2]
   118b4:	add	r0, r0, r2
   118b8:	beq	118d0 <mycore_string_raw_copy@@Base+0x28>
   118bc:	add	r2, r1, r2
   118c0:	ldrb	r3, [r2, #-1]!
   118c4:	cmp	r2, r1
   118c8:	strb	r3, [r0, #-1]!
   118cc:	bne	118c0 <mycore_string_raw_copy@@Base+0x18>
   118d0:	mov	r0, #0
   118d4:	bx	lr

000118d8 <mycore_string_raw_set_replacement_character@@Base>:
   118d8:	ldr	r2, [r0]
   118dc:	mov	r3, r0
   118e0:	mvn	r0, #16
   118e4:	push	{lr}		; (str lr, [sp, #-4]!)
   118e8:	mvn	lr, #64	; 0x40
   118ec:	strb	r0, [r2, r1]
   118f0:	ldr	r2, [r3]
   118f4:	mvn	ip, #66	; 0x42
   118f8:	add	r2, r2, r1
   118fc:	mov	r0, #3
   11900:	strb	lr, [r2, #1]
   11904:	ldr	r3, [r3]
   11908:	add	r1, r3, r1
   1190c:	strb	ip, [r1, #2]
   11910:	pop	{pc}		; (ldr pc, [sp], #4)

00011914 <mycore_string_append_with_replacement_null_characters@@Base>:
   11914:	ldr	ip, [r0, #8]
   11918:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1191c:	add	r3, r2, #1
   11920:	mov	r9, r2
   11924:	ldr	r2, [r0, #4]
   11928:	add	r3, r3, ip
   1192c:	cmp	r3, r2
   11930:	mov	r4, r0
   11934:	mov	r5, r1
   11938:	bcs	119d8 <mycore_string_append_with_replacement_null_characters@@Base+0xc4>
   1193c:	cmp	r9, #0
   11940:	ldr	r1, [r4]
   11944:	ldreq	r3, [r4, #8]
   11948:	beq	119cc <mycore_string_append_with_replacement_null_characters@@Base+0xb8>
   1194c:	add	r9, r5, r9
   11950:	mvn	r8, #16
   11954:	mvn	r7, #64	; 0x40
   11958:	mvn	r6, #66	; 0x42
   1195c:	b	1197c <mycore_string_append_with_replacement_null_characters@@Base+0x68>
   11960:	ldr	r2, [r4, #8]
   11964:	strb	r3, [r1, r2]
   11968:	ldr	r3, [r4, #8]
   1196c:	cmp	r9, r5
   11970:	add	r3, r3, #1
   11974:	str	r3, [r4, #8]
   11978:	beq	119c8 <mycore_string_append_with_replacement_null_characters@@Base+0xb4>
   1197c:	ldrb	r3, [r5], #1
   11980:	cmp	r3, #0
   11984:	bne	11960 <mycore_string_append_with_replacement_null_characters@@Base+0x4c>
   11988:	ldr	r1, [r4, #4]
   1198c:	mov	r0, r4
   11990:	add	r1, r1, #5
   11994:	bl	10964 <mycore_string_realloc@plt>
   11998:	ldr	r3, [r4, #8]
   1199c:	ldr	r1, [r4]
   119a0:	strb	r8, [r1, r3]
   119a4:	ldr	r3, [r4, #8]
   119a8:	add	r3, r3, #1
   119ac:	str	r3, [r4, #8]
   119b0:	strb	r7, [r1, r3]
   119b4:	ldr	r3, [r4, #8]
   119b8:	add	r3, r3, #1
   119bc:	str	r3, [r4, #8]
   119c0:	strb	r6, [r1, r3]
   119c4:	b	11968 <mycore_string_append_with_replacement_null_characters@@Base+0x54>
   119c8:	ldr	r1, [r4]
   119cc:	mov	r2, #0
   119d0:	strb	r2, [r1, r3]
   119d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119d8:	mov	r1, r3
   119dc:	bl	10964 <mycore_string_realloc@plt>
   119e0:	b	1193c <mycore_string_append_with_replacement_null_characters@@Base+0x28>

000119e4 <mycore_string_stay_only_whitespace@@Base>:
   119e4:	push	{r4, r5, r6, lr}
   119e8:	ldr	lr, [r0, #8]
   119ec:	ldr	r6, [r0]
   119f0:	cmp	lr, #0
   119f4:	beq	11a44 <mycore_string_stay_only_whitespace@@Base+0x60>
   119f8:	mov	r2, #0
   119fc:	ldr	r5, [pc, #72]	; 11a4c <mycore_string_stay_only_whitespace@@Base+0x68>
   11a00:	mov	ip, r2
   11a04:	sub	r4, r6, #1
   11a08:	ldrb	r1, [r4, #1]!
   11a0c:	add	r2, r2, #1
   11a10:	sub	r3, r1, #9
   11a14:	uxtb	r3, r3
   11a18:	cmp	r3, #23
   11a1c:	mvn	r3, r5, lsr r3
   11a20:	bhi	11a34 <mycore_string_stay_only_whitespace@@Base+0x50>
   11a24:	tst	r3, #1
   11a28:	strbeq	r1, [r6, ip]
   11a2c:	ldreq	lr, [r0, #8]
   11a30:	addeq	ip, ip, #1
   11a34:	cmp	lr, r2
   11a38:	bhi	11a08 <mycore_string_stay_only_whitespace@@Base+0x24>
   11a3c:	str	ip, [r0, #8]
   11a40:	pop	{r4, r5, r6, pc}
   11a44:	mov	ip, lr
   11a48:	b	11a3c <mycore_string_stay_only_whitespace@@Base+0x58>
   11a4c:	addeq	r0, r0, fp, lsl r0

00011a50 <mycore_string_crop_whitespace_from_begin@@Base>:
   11a50:	ldr	ip, [r0, #8]
   11a54:	push	{r4, r5, r6, lr}
   11a58:	cmp	ip, #0
   11a5c:	mov	r5, r0
   11a60:	ldr	r0, [r0]
   11a64:	beq	11ad4 <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11a68:	ldrb	r4, [r0]
   11a6c:	sub	r4, r4, #9
   11a70:	uxtb	r4, r4
   11a74:	cmp	r4, #23
   11a78:	bhi	11ad4 <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11a7c:	ldr	r1, [pc, #100]	; 11ae8 <mycore_string_crop_whitespace_from_begin@@Base+0x98>
   11a80:	mvn	r4, r1, lsr r4
   11a84:	ands	r4, r4, #1
   11a88:	moveq	r2, r0
   11a8c:	bne	11ad4 <mycore_string_crop_whitespace_from_begin@@Base+0x84>
   11a90:	add	r4, r4, #1
   11a94:	cmp	r4, ip
   11a98:	beq	11ab4 <mycore_string_crop_whitespace_from_begin@@Base+0x64>
   11a9c:	ldrb	r3, [r2, #1]!
   11aa0:	sub	r3, r3, #9
   11aa4:	uxtb	r3, r3
   11aa8:	cmp	r3, #23
   11aac:	mvn	r3, r1, lsr r3
   11ab0:	bls	11adc <mycore_string_crop_whitespace_from_begin@@Base+0x8c>
   11ab4:	mov	r1, r4
   11ab8:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   11abc:	ldr	ip, [r5, #8]
   11ac0:	str	r0, [r5]
   11ac4:	sub	ip, ip, r4
   11ac8:	str	ip, [r5, #8]
   11acc:	mov	r0, r4
   11ad0:	pop	{r4, r5, r6, pc}
   11ad4:	mov	r4, #0
   11ad8:	b	11ac4 <mycore_string_crop_whitespace_from_begin@@Base+0x74>
   11adc:	tst	r3, #1
   11ae0:	beq	11a90 <mycore_string_crop_whitespace_from_begin@@Base+0x40>
   11ae4:	b	11ab4 <mycore_string_crop_whitespace_from_begin@@Base+0x64>
   11ae8:	addeq	r0, r0, fp, lsl r0

00011aec <mycore_string_whitespace_from_begin@@Base>:
   11aec:	ldr	ip, [r0, #8]
   11af0:	ldr	r2, [r0]
   11af4:	cmp	ip, #0
   11af8:	beq	11b54 <mycore_string_whitespace_from_begin@@Base+0x68>
   11afc:	ldrb	r0, [r2]
   11b00:	sub	r0, r0, #9
   11b04:	uxtb	r0, r0
   11b08:	cmp	r0, #23
   11b0c:	bhi	11b54 <mycore_string_whitespace_from_begin@@Base+0x68>
   11b10:	ldr	r1, [pc, #68]	; 11b5c <mycore_string_whitespace_from_begin@@Base+0x70>
   11b14:	mvn	r0, r1, lsr r0
   11b18:	ands	r0, r0, #1
   11b1c:	beq	11b44 <mycore_string_whitespace_from_begin@@Base+0x58>
   11b20:	b	11b54 <mycore_string_whitespace_from_begin@@Base+0x68>
   11b24:	ldrb	r3, [r2, #1]!
   11b28:	sub	r3, r3, #9
   11b2c:	uxtb	r3, r3
   11b30:	cmp	r3, #23
   11b34:	mvn	r3, r1, lsr r3
   11b38:	bxhi	lr
   11b3c:	tst	r3, #1
   11b40:	bxne	lr
   11b44:	add	r0, r0, #1
   11b48:	cmp	r0, ip
   11b4c:	bne	11b24 <mycore_string_whitespace_from_begin@@Base+0x38>
   11b50:	bx	lr
   11b54:	mov	r0, #0
   11b58:	bx	lr
   11b5c:	addeq	r0, r0, fp, lsl r0

00011b60 <mythread_create@@Base>:
   11b60:	mov	r1, #40	; 0x28
   11b64:	mov	r0, #1
   11b68:	b	ff14 <mycore_calloc@plt>

00011b6c <mythread_init@@Base>:
   11b6c:	cmp	r2, #0
   11b70:	push	{r4, r5, r6, lr}
   11b74:	moveq	r5, #1
   11b78:	bne	11b84 <mythread_init@@Base+0x18>
   11b7c:	mov	r0, r5
   11b80:	pop	{r4, r5, r6, pc}
   11b84:	mov	r4, r0
   11b88:	mov	r5, #0
   11b8c:	str	r1, [r4, #32]
   11b90:	str	r5, [r4, #4]
   11b94:	mov	r0, r2
   11b98:	str	r2, [r4, #8]
   11b9c:	str	r3, [r4, #12]
   11ba0:	mov	r1, #40	; 0x28
   11ba4:	bl	ff14 <mycore_calloc@plt>
   11ba8:	cmp	r0, r5
   11bac:	str	r0, [r4]
   11bb0:	moveq	r5, #2
   11bb4:	beq	11b7c <mythread_init@@Base+0x10>
   11bb8:	mov	r0, r4
   11bbc:	bl	fe84 <mythread_thread_attr_init@plt>
   11bc0:	cmp	r0, r5
   11bc4:	str	r0, [r4, #20]
   11bc8:	moveq	r5, #12
   11bcc:	beq	11b7c <mythread_init@@Base+0x10>
   11bd0:	mov	r0, r4
   11bd4:	bl	fca4 <mythread_nanosleep_create@plt>
   11bd8:	str	r0, [r4, #24]
   11bdc:	mov	r0, r5
   11be0:	pop	{r4, r5, r6, pc}

00011be4 <mythread_clean@@Base>:
   11be4:	push	{r4, lr}
   11be8:	mov	r4, r0
   11bec:	ldr	r1, [r0, #20]
   11bf0:	bl	1040c <mythread_thread_attr_clean@plt>
   11bf4:	ldr	r0, [r4, #24]
   11bf8:	bl	fc5c <mythread_nanosleep_clean@plt>
   11bfc:	mov	r3, #0
   11c00:	str	r3, [r4, #28]
   11c04:	pop	{r4, pc}

00011c08 <myhread_entry_create@@Base>:
   11c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c0c:	mov	r5, #0
   11c10:	ldr	lr, [r0, #4]
   11c14:	ldr	r6, [r0, #8]
   11c18:	str	r5, [r0, #28]
   11c1c:	cmp	lr, r6
   11c20:	movcs	r5, #15
   11c24:	bcc	11c30 <myhread_entry_create@@Base+0x28>
   11c28:	mov	r0, r5
   11c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c30:	add	r8, lr, lr, lsl #2
   11c34:	ldr	r9, [r0]
   11c38:	lsl	r8, r8, #3
   11c3c:	add	sl, r9, r8
   11c40:	mov	r4, r0
   11c44:	str	r6, [sl, #12]
   11c48:	str	r2, [sl, #8]
   11c4c:	str	lr, [sl, #4]
   11c50:	str	r3, [sl, #16]
   11c54:	str	r5, [sl, #20]
   11c58:	str	r0, [sl, #32]
   11c5c:	mov	r7, r1
   11c60:	bl	fca4 <mythread_nanosleep_create@plt>
   11c64:	str	r0, [sl, #28]
   11c68:	mov	r0, r4
   11c6c:	bl	10afc <mythread_mutex_create@plt>
   11c70:	cmp	r0, r5
   11c74:	str	r0, [sl, #24]
   11c78:	moveq	r5, #71	; 0x47
   11c7c:	beq	11c28 <myhread_entry_create@@Base+0x20>
   11c80:	mov	r1, r0
   11c84:	mov	r0, r4
   11c88:	bl	10d9c <mythread_mutex_wait@plt>
   11c8c:	subs	r5, r0, #0
   11c90:	beq	11ca8 <myhread_entry_create@@Base+0xa0>
   11c94:	ldr	r1, [sl, #24]
   11c98:	mov	r0, r4
   11c9c:	bl	10634 <mythread_mutex_close@plt>
   11ca0:	mov	r5, #72	; 0x48
   11ca4:	b	11c28 <myhread_entry_create@@Base+0x20>
   11ca8:	mov	r1, r7
   11cac:	add	r2, sl, #4
   11cb0:	mov	r0, r4
   11cb4:	bl	fd88 <mythread_thread_create@plt>
   11cb8:	cmp	r0, #0
   11cbc:	str	r0, [r9, r8]
   11cc0:	ldrne	r3, [r4, #4]
   11cc4:	addne	r3, r3, #1
   11cc8:	strne	r3, [r4, #4]
   11ccc:	bne	11c28 <myhread_entry_create@@Base+0x20>
   11cd0:	ldr	r1, [sl, #24]
   11cd4:	mov	r0, r4
   11cd8:	bl	10634 <mythread_mutex_close@plt>
   11cdc:	mov	r5, #1
   11ce0:	b	11c28 <myhread_entry_create@@Base+0x20>

00011ce4 <myhread_increase_id_by_entry_id@@Base>:
   11ce4:	ldr	r0, [r0, #12]
   11ce8:	add	r0, r1, r0
   11cec:	bx	lr

00011cf0 <mythread_join@@Base>:
   11cf0:	ldr	r3, [r0, #4]
   11cf4:	cmp	r3, #0
   11cf8:	beq	11d70 <mythread_join@@Base+0x80>
   11cfc:	push	{r4, r5, r6, r7, r8, lr}
   11d00:	mov	r5, #0
   11d04:	mov	r8, r2
   11d08:	mov	r7, r1
   11d0c:	mov	r4, r0
   11d10:	mov	r6, r5
   11d14:	b	11d24 <mythread_join@@Base+0x34>
   11d18:	ldr	r3, [r4, #4]
   11d1c:	cmp	r3, r6
   11d20:	bls	11d68 <mythread_join@@Base+0x78>
   11d24:	cmp	r7, #0
   11d28:	mov	r2, r8
   11d2c:	mov	r0, r4
   11d30:	add	r6, r6, #1
   11d34:	beq	11d44 <mythread_join@@Base+0x54>
   11d38:	ldr	r1, [r4]
   11d3c:	add	r1, r1, r5
   11d40:	blx	r7
   11d44:	ldr	r3, [r4]
   11d48:	mov	r0, r4
   11d4c:	ldr	r1, [r3, r5]
   11d50:	bl	10568 <mythread_thread_join@plt>
   11d54:	add	r5, r5, #40	; 0x28
   11d58:	cmp	r0, #0
   11d5c:	beq	11d18 <mythread_join@@Base+0x28>
   11d60:	mov	r0, #1
   11d64:	pop	{r4, r5, r6, r7, r8, pc}
   11d68:	mov	r0, #0
   11d6c:	pop	{r4, r5, r6, r7, r8, pc}
   11d70:	mov	r0, #0
   11d74:	bx	lr

00011d78 <mythread_check_status@@Base>:
   11d78:	ldr	ip, [r0, #4]
   11d7c:	cmp	ip, #0
   11d80:	beq	11dc4 <mythread_check_status@@Base+0x4c>
   11d84:	ldr	r3, [r0]
   11d88:	ldr	r0, [r3, #20]
   11d8c:	cmp	r0, #0
   11d90:	bxne	lr
   11d94:	mov	r2, r0
   11d98:	b	11da8 <mythread_check_status@@Base+0x30>
   11d9c:	ldr	r1, [r3, #20]
   11da0:	cmp	r1, #0
   11da4:	bne	11dbc <mythread_check_status@@Base+0x44>
   11da8:	add	r2, r2, #1
   11dac:	cmp	r2, ip
   11db0:	add	r3, r3, #40	; 0x28
   11db4:	bne	11d9c <mythread_check_status@@Base+0x24>
   11db8:	bx	lr
   11dbc:	mov	r0, r1
   11dc0:	bx	lr
   11dc4:	mov	r0, ip
   11dc8:	bx	lr

00011dcc <mythread_option@@Base>:
   11dcc:	ldr	r0, [r0, #36]	; 0x24
   11dd0:	bx	lr

00011dd4 <mythread_option_set@@Base>:
   11dd4:	str	r1, [r0, #36]	; 0x24
   11dd8:	bx	lr

00011ddc <mythread_quit@@Base>:
   11ddc:	push	{r4, r5, r6, r7, r8, lr}
   11de0:	mov	r4, r0
   11de4:	mov	r7, r1
   11de8:	mov	r1, #2
   11dec:	mov	r8, r2
   11df0:	bl	10ae4 <mythread_option_set@plt>
   11df4:	ldr	r3, [r4, #4]
   11df8:	cmp	r3, #0
   11dfc:	movne	r5, #0
   11e00:	movne	r6, r5
   11e04:	bne	11e30 <mythread_quit@@Base+0x54>
   11e08:	b	11e74 <mythread_quit@@Base+0x98>
   11e0c:	ldr	r3, [r4]
   11e10:	ldr	r1, [r3, r5]
   11e14:	bl	109f4 <mythread_thread_destroy@plt>
   11e18:	add	r5, r5, #40	; 0x28
   11e1c:	cmp	r0, #0
   11e20:	bne	11e6c <mythread_quit@@Base+0x90>
   11e24:	ldr	r3, [r4, #4]
   11e28:	cmp	r3, r6
   11e2c:	bls	11e74 <mythread_quit@@Base+0x98>
   11e30:	cmp	r7, #0
   11e34:	mov	r2, r8
   11e38:	mov	r0, r4
   11e3c:	add	r6, r6, #1
   11e40:	beq	11e50 <mythread_quit@@Base+0x74>
   11e44:	ldr	r1, [r4]
   11e48:	add	r1, r1, r5
   11e4c:	blx	r7
   11e50:	ldr	r3, [r4]
   11e54:	mov	r0, r4
   11e58:	ldr	r1, [r3, r5]
   11e5c:	bl	10568 <mythread_thread_join@plt>
   11e60:	cmp	r0, #0
   11e64:	mov	r0, r4
   11e68:	beq	11e0c <mythread_quit@@Base+0x30>
   11e6c:	mov	r0, #1
   11e70:	pop	{r4, r5, r6, r7, r8, pc}
   11e74:	mov	r0, #0
   11e78:	pop	{r4, r5, r6, r7, r8, pc}

00011e7c <mythread_stop@@Base>:
   11e7c:	push	{r4, r5, r6, lr}
   11e80:	ldr	r5, [r0, #36]	; 0x24
   11e84:	ands	r5, r5, #4
   11e88:	beq	11e94 <mythread_stop@@Base+0x18>
   11e8c:	mov	r0, #0
   11e90:	pop	{r4, r5, r6, pc}
   11e94:	mov	r4, r0
   11e98:	mov	r1, #4
   11e9c:	bl	10ae4 <mythread_option_set@plt>
   11ea0:	ldr	r2, [r4, #4]
   11ea4:	cmp	r2, #0
   11ea8:	movne	r6, r5
   11eac:	ldrne	r3, [r4]
   11eb0:	beq	11e8c <mythread_stop@@Base+0x10>
   11eb4:	add	r1, r3, r5
   11eb8:	ldr	r1, [r1, #16]
   11ebc:	tst	r1, #4
   11ec0:	bne	11ee4 <mythread_stop@@Base+0x68>
   11ec4:	ldr	r0, [r4, #24]
   11ec8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11ecc:	ldr	r3, [r4]
   11ed0:	add	r2, r3, r5
   11ed4:	ldr	r2, [r2, #16]
   11ed8:	tst	r2, #4
   11edc:	beq	11ec4 <mythread_stop@@Base+0x48>
   11ee0:	ldr	r2, [r4, #4]
   11ee4:	add	r6, r6, #1
   11ee8:	cmp	r2, r6
   11eec:	add	r5, r5, #40	; 0x28
   11ef0:	bhi	11eb4 <mythread_stop@@Base+0x38>
   11ef4:	mov	r0, #0
   11ef8:	pop	{r4, r5, r6, pc}

00011efc <mythread_suspend@@Base>:
   11efc:	push	{r4, r5, r6, lr}
   11f00:	ldr	r5, [r0, #36]	; 0x24
   11f04:	ands	r5, r5, #1
   11f08:	beq	11f14 <mythread_suspend@@Base+0x18>
   11f0c:	mov	r0, #0
   11f10:	pop	{r4, r5, r6, pc}
   11f14:	mov	r4, r0
   11f18:	mov	r1, #1
   11f1c:	bl	10ae4 <mythread_option_set@plt>
   11f20:	ldr	r1, [r4, #4]
   11f24:	cmp	r1, #0
   11f28:	movne	r6, r5
   11f2c:	ldrne	r2, [r4]
   11f30:	beq	11f0c <mythread_suspend@@Base+0x10>
   11f34:	add	r3, r2, r5
   11f38:	ldr	r0, [r3, #16]
   11f3c:	tst	r0, #4
   11f40:	bne	11f80 <mythread_suspend@@Base+0x84>
   11f44:	ldr	r3, [r3, #16]
   11f48:	tst	r3, #1
   11f4c:	beq	11f60 <mythread_suspend@@Base+0x64>
   11f50:	b	11f80 <mythread_suspend@@Base+0x84>
   11f54:	ldr	r3, [r3, #16]
   11f58:	tst	r3, #1
   11f5c:	bne	11f7c <mythread_suspend@@Base+0x80>
   11f60:	ldr	r0, [r4, #24]
   11f64:	bl	100a0 <mythread_nanosleep_sleep@plt>
   11f68:	ldr	r2, [r4]
   11f6c:	add	r3, r2, r5
   11f70:	ldr	r1, [r3, #16]
   11f74:	tst	r1, #4
   11f78:	beq	11f54 <mythread_suspend@@Base+0x58>
   11f7c:	ldr	r1, [r4, #4]
   11f80:	add	r6, r6, #1
   11f84:	cmp	r1, r6
   11f88:	add	r5, r5, #40	; 0x28
   11f8c:	bhi	11f34 <mythread_suspend@@Base+0x38>
   11f90:	mov	r0, #0
   11f94:	pop	{r4, r5, r6, pc}

00011f98 <mythread_resume@@Base>:
   11f98:	push	{r4, r5, r6, r7, r8, lr}
   11f9c:	ldr	r4, [r0, #36]	; 0x24
   11fa0:	ands	r4, r4, #1
   11fa4:	bne	12020 <mythread_resume@@Base+0x88>
   11fa8:	mov	r7, r0
   11fac:	mov	r6, r1
   11fb0:	bl	10ae4 <mythread_option_set@plt>
   11fb4:	ldr	r1, [r7, #4]
   11fb8:	cmp	r1, #0
   11fbc:	movne	r5, r4
   11fc0:	bne	11fd8 <mythread_resume@@Base+0x40>
   11fc4:	b	12018 <mythread_resume@@Base+0x80>
   11fc8:	add	r5, r5, #1
   11fcc:	cmp	r5, r1
   11fd0:	add	r4, r4, #40	; 0x28
   11fd4:	bcs	12018 <mythread_resume@@Base+0x80>
   11fd8:	ldr	r3, [r7]
   11fdc:	add	r3, r3, r4
   11fe0:	ldr	r2, [r3, #16]
   11fe4:	tst	r2, #4
   11fe8:	beq	11fc8 <mythread_resume@@Base+0x30>
   11fec:	str	r6, [r3, #16]
   11ff0:	ldr	r1, [r3, #24]
   11ff4:	mov	r0, r7
   11ff8:	bl	10d0c <mythread_mutex_post@plt>
   11ffc:	cmp	r0, #0
   12000:	bne	1202c <mythread_resume@@Base+0x94>
   12004:	ldr	r1, [r7, #4]
   12008:	add	r5, r5, #1
   1200c:	cmp	r5, r1
   12010:	add	r4, r4, #40	; 0x28
   12014:	bcc	11fd8 <mythread_resume@@Base+0x40>
   12018:	mov	r0, #0
   1201c:	pop	{r4, r5, r6, r7, r8, pc}
   12020:	bl	10ae4 <mythread_option_set@plt>
   12024:	mov	r0, #0
   12028:	pop	{r4, r5, r6, r7, r8, pc}
   1202c:	mov	r0, #1
   12030:	pop	{r4, r5, r6, r7, r8, pc}

00012034 <mythread_destroy@@Base>:
   12034:	push	{r4, r5, r6, r7, r8, lr}
   12038:	subs	r4, r0, #0
   1203c:	beq	12094 <mythread_destroy@@Base+0x60>
   12040:	mov	r5, r3
   12044:	ldr	r3, [r4]
   12048:	cmp	r3, #0
   1204c:	beq	12078 <mythread_destroy@@Base+0x44>
   12050:	mov	r6, r1
   12054:	mov	r7, r2
   12058:	mov	r1, #2
   1205c:	bl	104c0 <mythread_resume@plt>
   12060:	mov	r2, r7
   12064:	mov	r1, r6
   12068:	mov	r0, r4
   1206c:	bl	1058c <mythread_quit@plt>
   12070:	ldr	r0, [r4]
   12074:	bl	10dcc <mycore_free@plt>
   12078:	ldr	r1, [r4, #20]
   1207c:	mov	r0, r4
   12080:	bl	11084 <mythread_thread_attr_destroy@plt>
   12084:	ldr	r0, [r4, #24]
   12088:	bl	10c04 <mythread_nanosleep_destroy@plt>
   1208c:	cmp	r5, #0
   12090:	bne	1209c <mythread_destroy@@Base+0x68>
   12094:	mov	r0, r4
   12098:	pop	{r4, r5, r6, r7, r8, pc}
   1209c:	mov	r0, r4
   120a0:	bl	10dcc <mycore_free@plt>
   120a4:	mov	r4, #0
   120a8:	b	12094 <mythread_destroy@@Base+0x60>

000120ac <mythread_entry_join@@Base>:
   120ac:	subs	r3, r1, #0
   120b0:	push	{r4, lr}
   120b4:	mov	r4, r0
   120b8:	beq	120c8 <mythread_entry_join@@Base+0x1c>
   120bc:	mov	r1, r0
   120c0:	ldr	r0, [r0, #32]
   120c4:	blx	r3
   120c8:	ldr	r1, [r4]
   120cc:	ldr	r0, [r4, #32]
   120d0:	bl	10568 <mythread_thread_join@plt>
   120d4:	adds	r0, r0, #0
   120d8:	movne	r0, #1
   120dc:	pop	{r4, pc}

000120e0 <mythread_entry_quit@@Base>:
   120e0:	subs	r3, r1, #0
   120e4:	push	{r4, lr}
   120e8:	mov	r4, r0
   120ec:	beq	120fc <mythread_entry_quit@@Base+0x1c>
   120f0:	mov	r1, r0
   120f4:	ldr	r0, [r0, #32]
   120f8:	blx	r3
   120fc:	ldr	r1, [r4]
   12100:	ldr	r0, [r4, #32]
   12104:	bl	10568 <mythread_thread_join@plt>
   12108:	cmp	r0, #0
   1210c:	beq	12118 <mythread_entry_quit@@Base+0x38>
   12110:	mov	r0, #1
   12114:	pop	{r4, pc}
   12118:	ldr	r1, [r4]
   1211c:	ldr	r0, [r4, #32]
   12120:	bl	109f4 <mythread_thread_destroy@plt>
   12124:	adds	r0, r0, #0
   12128:	movne	r0, #1
   1212c:	pop	{r4, pc}

00012130 <mythread_entry_stop@@Base>:
   12130:	ldr	r3, [r0, #16]
   12134:	tst	r3, #4
   12138:	bne	12178 <mythread_entry_stop@@Base+0x48>
   1213c:	mov	r3, #4
   12140:	push	{r4, lr}
   12144:	mov	r4, r0
   12148:	str	r3, [r0, #16]
   1214c:	ldr	r3, [r0, #16]
   12150:	tst	r3, #4
   12154:	bne	12170 <mythread_entry_stop@@Base+0x40>
   12158:	ldr	r3, [r4, #32]
   1215c:	ldr	r0, [r3, #24]
   12160:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12164:	ldr	r3, [r4, #16]
   12168:	tst	r3, #4
   1216c:	beq	12158 <mythread_entry_stop@@Base+0x28>
   12170:	mov	r0, #0
   12174:	pop	{r4, pc}
   12178:	mov	r0, #0
   1217c:	bx	lr

00012180 <mythread_entry_suspend@@Base>:
   12180:	ldr	r3, [r0, #16]
   12184:	tst	r3, #1
   12188:	bne	121d8 <mythread_entry_suspend@@Base+0x58>
   1218c:	mov	r3, #1
   12190:	str	r3, [r0, #16]
   12194:	ldr	r3, [r0, #16]
   12198:	tst	r3, #4
   1219c:	bne	121d8 <mythread_entry_suspend@@Base+0x58>
   121a0:	push	{r4, lr}
   121a4:	mov	r4, r0
   121a8:	b	121c4 <mythread_entry_suspend@@Base+0x44>
   121ac:	ldr	r3, [r4, #32]
   121b0:	ldr	r0, [r3, #24]
   121b4:	bl	100a0 <mythread_nanosleep_sleep@plt>
   121b8:	ldr	r3, [r4, #16]
   121bc:	tst	r3, #4
   121c0:	bne	121d0 <mythread_entry_suspend@@Base+0x50>
   121c4:	ldr	r3, [r4, #16]
   121c8:	tst	r3, #1
   121cc:	beq	121ac <mythread_entry_suspend@@Base+0x2c>
   121d0:	mov	r0, #0
   121d4:	pop	{r4, pc}
   121d8:	mov	r0, #0
   121dc:	bx	lr

000121e0 <mythread_entry_resume@@Base>:
   121e0:	ldr	r3, [r0, #16]
   121e4:	mov	r2, r0
   121e8:	tst	r3, #1
   121ec:	bne	12228 <mythread_entry_resume@@Base+0x48>
   121f0:	ldr	r3, [r0, #16]
   121f4:	ands	r3, r3, #4
   121f8:	bne	12208 <mythread_entry_resume@@Base+0x28>
   121fc:	mov	r0, r3
   12200:	str	r1, [r2, #16]
   12204:	bx	lr
   12208:	push	{r4, lr}
   1220c:	str	r1, [r0, #16]
   12210:	ldr	r1, [r0, #24]
   12214:	ldr	r0, [r0, #32]
   12218:	bl	10d0c <mythread_mutex_post@plt>
   1221c:	adds	r0, r0, #0
   12220:	movne	r0, #1
   12224:	pop	{r4, pc}
   12228:	str	r1, [r0, #16]
   1222c:	mov	r0, #0
   12230:	bx	lr

00012234 <mythread_entry_status@@Base>:
   12234:	ldr	r0, [r0, #20]
   12238:	bx	lr

0001223c <mythread_entry_mythread@@Base>:
   1223c:	ldr	r0, [r0, #32]
   12240:	bx	lr

00012244 <mythread_callback_quit@@Base>:
   12244:	ldr	r3, [r1, #16]
   12248:	tst	r3, #2
   1224c:	bxne	lr
   12250:	push	{r4, r5, r6, lr}
   12254:	mov	r4, r1
   12258:	mov	r5, r0
   1225c:	ldr	r0, [r5, #24]
   12260:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12264:	ldr	r3, [r4, #16]
   12268:	tst	r3, #2
   1226c:	beq	1225c <mythread_callback_quit@@Base+0x18>
   12270:	pop	{r4, r5, r6, pc}

00012274 <mythread_queue_create@@Base>:
   12274:	mov	r1, #28
   12278:	mov	r0, #1
   1227c:	b	ff14 <mycore_calloc@plt>

00012280 <mythread_queue_init@@Base>:
   12280:	push	{r4, r5, r6, lr}
   12284:	cmp	r1, #32
   12288:	mov	r4, r0
   1228c:	movcc	r1, #32
   12290:	mov	r0, #512	; 0x200
   12294:	str	r1, [r4, #20]
   12298:	str	r0, [r4, #8]
   1229c:	mov	r1, #4
   122a0:	bl	ff14 <mycore_calloc@plt>
   122a4:	cmp	r0, #0
   122a8:	str	r0, [r4]
   122ac:	moveq	r3, #61	; 0x3d
   122b0:	beq	122e8 <mythread_queue_init@@Base+0x68>
   122b4:	mov	r5, r0
   122b8:	ldr	r0, [r4, #20]
   122bc:	ldr	r6, [r4, #4]
   122c0:	add	r0, r0, r0, lsl #1
   122c4:	lsl	r0, r0, #2
   122c8:	bl	10c94 <mycore_malloc@plt>
   122cc:	ldr	r3, [r4]
   122d0:	ldr	r2, [r4, #4]
   122d4:	str	r0, [r5, r6, lsl #2]
   122d8:	ldr	r2, [r3, r2, lsl #2]
   122dc:	cmp	r2, #0
   122e0:	movne	r3, #0
   122e4:	beq	122f0 <mythread_queue_init@@Base+0x70>
   122e8:	mov	r0, r3
   122ec:	pop	{r4, r5, r6, pc}
   122f0:	mov	r0, r3
   122f4:	bl	10dcc <mycore_free@plt>
   122f8:	mov	r3, #62	; 0x3e
   122fc:	str	r0, [r4]
   12300:	b	122e8 <mythread_queue_init@@Base+0x68>

00012304 <mythread_queue_clean@@Base>:
   12304:	mov	r3, #0
   12308:	str	r3, [r0, #24]
   1230c:	str	r3, [r0, #12]
   12310:	str	r3, [r0, #4]
   12314:	str	r3, [r0, #16]
   12318:	bx	lr

0001231c <mythread_queue_destroy@@Base>:
   1231c:	push	{r4, r5, r6, lr}
   12320:	subs	r5, r0, #0
   12324:	beq	12368 <mythread_queue_destroy@@Base+0x4c>
   12328:	ldr	r3, [r5]
   1232c:	cmp	r3, #0
   12330:	beq	12360 <mythread_queue_destroy@@Base+0x44>
   12334:	mov	r4, #0
   12338:	b	12340 <mythread_queue_destroy@@Base+0x24>
   1233c:	ldr	r3, [r5]
   12340:	ldr	r0, [r3, r4, lsl #2]
   12344:	bl	10dcc <mycore_free@plt>
   12348:	ldr	r3, [r5, #4]
   1234c:	add	r4, r4, #1
   12350:	cmp	r3, r4
   12354:	bcs	1233c <mythread_queue_destroy@@Base+0x20>
   12358:	ldr	r0, [r5]
   1235c:	bl	10dcc <mycore_free@plt>
   12360:	mov	r0, r5
   12364:	bl	10dcc <mycore_free@plt>
   12368:	mov	r0, #0
   1236c:	pop	{r4, r5, r6, pc}

00012370 <mythread_queue_node_clean@@Base>:
   12370:	mov	r3, #0
   12374:	str	r3, [r0]
   12378:	str	r3, [r0, #4]
   1237c:	str	r3, [r0, #8]
   12380:	bx	lr

00012384 <mythread_queue_get_prev_node@@Base>:
   12384:	ldr	r0, [r0, #8]
   12388:	bx	lr

0001238c <mythread_queue_get_current_node@@Base>:
   1238c:	ldr	r3, [r0, #12]
   12390:	ldr	r1, [r0, #4]
   12394:	ldr	r2, [r0]
   12398:	add	r3, r3, r3, lsl #1
   1239c:	ldr	r0, [r2, r1, lsl #2]
   123a0:	add	r0, r0, r3, lsl #2
   123a4:	bx	lr

000123a8 <mythread_queue_get_first_node@@Base>:
   123a8:	ldr	r3, [r0]
   123ac:	ldr	r0, [r3]
   123b0:	bx	lr

000123b4 <mythread_queue_count_used_node@@Base>:
   123b4:	ldr	r0, [r0, #16]
   123b8:	bx	lr

000123bc <mythread_queue_list_create@@Base>:
   123bc:	mov	r1, #12
   123c0:	mov	r0, #1
   123c4:	b	ff14 <mycore_calloc@plt>

000123c8 <mythread_queue_list_destroy@@Base>:
   123c8:	cmp	r0, #0
   123cc:	bxeq	lr
   123d0:	b	10dcc <mycore_free@plt>

000123d4 <mythread_queue_list_get_count@@Base>:
   123d4:	ldr	r0, [r0, #8]
   123d8:	bx	lr

000123dc <mythread_queue_list_wait_for_done@@Base>:
   123dc:	cmp	r1, #0
   123e0:	bxeq	lr
   123e4:	push	{r4, r5, r6, r7, r8, lr}
   123e8:	ldr	r4, [r1]
   123ec:	cmp	r4, #0
   123f0:	movne	r6, r0
   123f4:	ldrne	r1, [r6, #4]
   123f8:	beq	12464 <mythread_queue_list_wait_for_done@@Base+0x88>
   123fc:	cmp	r1, #0
   12400:	beq	12454 <mythread_queue_list_wait_for_done@@Base+0x78>
   12404:	ldr	r2, [r4, #4]
   12408:	ldr	r3, [r4]
   1240c:	mov	r7, #0
   12410:	ldr	ip, [r2, r7, lsl #2]
   12414:	ldr	r0, [r3, #16]
   12418:	lsl	r5, r7, #2
   1241c:	cmp	ip, r0
   12420:	bcs	12448 <mythread_queue_list_wait_for_done@@Base+0x6c>
   12424:	ldr	r0, [r6, #24]
   12428:	bl	100a0 <mythread_nanosleep_sleep@plt>
   1242c:	ldr	r2, [r4, #4]
   12430:	ldr	r3, [r4]
   12434:	ldr	r0, [r2, r5]
   12438:	ldr	r1, [r3, #16]
   1243c:	cmp	r0, r1
   12440:	bcc	12424 <mythread_queue_list_wait_for_done@@Base+0x48>
   12444:	ldr	r1, [r6, #4]
   12448:	add	r7, r7, #1
   1244c:	cmp	r1, r7
   12450:	bhi	12410 <mythread_queue_list_wait_for_done@@Base+0x34>
   12454:	ldr	r4, [r4, #12]
   12458:	cmp	r4, #0
   1245c:	bne	123fc <mythread_queue_list_wait_for_done@@Base+0x20>
   12460:	pop	{r4, r5, r6, r7, r8, pc}
   12464:	pop	{r4, r5, r6, r7, r8, pc}

00012468 <mythread_queue_node_malloc@@Base>:
   12468:	ldr	r3, [r1, #12]
   1246c:	push	{r4, r5, r6, r7, r8, lr}
   12470:	mov	r6, r2
   12474:	ldr	r2, [r1, #20]
   12478:	add	r3, r3, #1
   1247c:	cmp	r3, r2
   12480:	mov	r4, r1
   12484:	str	r3, [r1, #12]
   12488:	bcs	124b4 <mythread_queue_node_malloc@@Base+0x4c>
   1248c:	ldr	r1, [r1, #4]
   12490:	ldr	r2, [r4]
   12494:	add	r3, r3, r3, lsl #1
   12498:	ldr	r0, [r2, r1, lsl #2]
   1249c:	lsl	r3, r3, #2
   124a0:	ldr	r2, [r4, #16]
   124a4:	add	r0, r0, r3
   124a8:	add	r3, r2, #1
   124ac:	str	r3, [r4, #16]
   124b0:	pop	{r4, r5, r6, r7, r8, pc}
   124b4:	ldr	r5, [r1, #4]
   124b8:	ldr	r3, [r1, #8]
   124bc:	add	r5, r5, #1
   124c0:	cmp	r5, r3
   124c4:	str	r5, [r1, #4]
   124c8:	bcs	124ec <mythread_queue_node_malloc@@Base+0x84>
   124cc:	ldr	r7, [r1]
   124d0:	ldr	r0, [r7, r5, lsl #2]
   124d4:	cmp	r0, #0
   124d8:	beq	12558 <mythread_queue_node_malloc@@Base+0xf0>
   124dc:	mov	r2, #0
   124e0:	mov	r3, r2
   124e4:	str	r2, [r4, #12]
   124e8:	b	124a0 <mythread_queue_node_malloc@@Base+0x38>
   124ec:	cmp	r0, #0
   124f0:	beq	12500 <mythread_queue_node_malloc@@Base+0x98>
   124f4:	ldr	r1, [r0, #16]
   124f8:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   124fc:	ldr	r3, [r4, #8]
   12500:	add	r5, r3, #512	; 0x200
   12504:	ldr	r0, [r4]
   12508:	lsl	r1, r5, #2
   1250c:	bl	fbd8 <mycore_realloc@plt>
   12510:	subs	r7, r0, #0
   12514:	beq	12540 <mythread_queue_node_malloc@@Base+0xd8>
   12518:	ldr	r0, [r4, #4]
   1251c:	mov	r1, #0
   12520:	sub	r2, r5, r0
   12524:	add	r0, r7, r0, lsl #2
   12528:	lsl	r2, r2, #2
   1252c:	bl	108b0 <memset@plt>
   12530:	str	r5, [r4, #8]
   12534:	str	r7, [r4]
   12538:	ldr	r5, [r4, #4]
   1253c:	b	124d0 <mythread_queue_node_malloc@@Base+0x68>
   12540:	cmp	r6, #0
   12544:	beq	12594 <mythread_queue_node_malloc@@Base+0x12c>
   12548:	mov	r3, #61	; 0x3d
   1254c:	mov	r0, r7
   12550:	str	r3, [r6]
   12554:	pop	{r4, r5, r6, r7, r8, pc}
   12558:	ldr	r0, [r4, #20]
   1255c:	add	r0, r0, r0, lsl #1
   12560:	lsl	r0, r0, #2
   12564:	bl	10c94 <mycore_malloc@plt>
   12568:	ldr	r2, [r4, #4]
   1256c:	ldr	r3, [r4]
   12570:	str	r0, [r7, r5, lsl #2]
   12574:	ldr	r0, [r3, r2, lsl #2]
   12578:	cmp	r0, #0
   1257c:	bne	124dc <mythread_queue_node_malloc@@Base+0x74>
   12580:	cmp	r6, #0
   12584:	beq	12594 <mythread_queue_node_malloc@@Base+0x12c>
   12588:	mov	r3, #62	; 0x3e
   1258c:	str	r3, [r6]
   12590:	pop	{r4, r5, r6, r7, r8, pc}
   12594:	mov	r0, #0
   12598:	pop	{r4, r5, r6, r7, r8, pc}

0001259c <mythread_queue_node_malloc_limit@@Base>:
   1259c:	push	{r4, r5, r6, r7, r8, lr}
   125a0:	mov	r4, r1
   125a4:	ldr	r1, [r1, #12]
   125a8:	ldr	ip, [r4, #16]
   125ac:	add	r1, r1, #1
   125b0:	cmp	ip, r2
   125b4:	str	r1, [r4, #12]
   125b8:	bcc	12608 <mythread_queue_node_malloc_limit@@Base+0x6c>
   125bc:	ldr	r3, [r4, #16]
   125c0:	cmp	r0, #0
   125c4:	add	r3, r3, #1
   125c8:	str	r3, [r4, #16]
   125cc:	beq	125d8 <mythread_queue_node_malloc_limit@@Base+0x3c>
   125d0:	ldr	r1, [r0, #16]
   125d4:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   125d8:	ldr	r3, [r4]
   125dc:	mov	r1, #0
   125e0:	str	r1, [r4, #24]
   125e4:	ldr	r0, [r3]
   125e8:	str	r1, [r4, #12]
   125ec:	str	r1, [r4, #4]
   125f0:	str	r1, [r4, #16]
   125f4:	ldr	r3, [r4, #16]
   125f8:	add	r0, r0, r1
   125fc:	add	r3, r3, #1
   12600:	str	r3, [r4, #16]
   12604:	pop	{r4, r5, r6, r7, r8, pc}
   12608:	mov	r6, r3
   1260c:	ldr	r3, [r4, #20]
   12610:	cmp	r1, r3
   12614:	bcc	12684 <mythread_queue_node_malloc_limit@@Base+0xe8>
   12618:	ldr	r5, [r4, #4]
   1261c:	ldr	r3, [r4, #8]
   12620:	add	r5, r5, #1
   12624:	cmp	r5, r3
   12628:	str	r5, [r4, #4]
   1262c:	bcc	1269c <mythread_queue_node_malloc_limit@@Base+0x100>
   12630:	cmp	r0, #0
   12634:	beq	12644 <mythread_queue_node_malloc_limit@@Base+0xa8>
   12638:	ldr	r1, [r0, #16]
   1263c:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   12640:	ldr	r3, [r4, #8]
   12644:	add	r5, r3, #512	; 0x200
   12648:	ldr	r0, [r4]
   1264c:	lsl	r1, r5, #2
   12650:	bl	fbd8 <mycore_realloc@plt>
   12654:	subs	r7, r0, #0
   12658:	beq	126bc <mythread_queue_node_malloc_limit@@Base+0x120>
   1265c:	ldr	r0, [r4, #4]
   12660:	mov	r1, #0
   12664:	sub	r2, r5, r0
   12668:	add	r0, r7, r0, lsl #2
   1266c:	lsl	r2, r2, #2
   12670:	bl	108b0 <memset@plt>
   12674:	str	r5, [r4, #8]
   12678:	str	r7, [r4]
   1267c:	ldr	r5, [r4, #4]
   12680:	b	126a0 <mythread_queue_node_malloc_limit@@Base+0x104>
   12684:	ldr	r2, [r4, #4]
   12688:	ldr	r3, [r4]
   1268c:	add	r1, r1, r1, lsl #1
   12690:	ldr	r0, [r3, r2, lsl #2]
   12694:	lsl	r1, r1, #2
   12698:	b	125f4 <mythread_queue_node_malloc_limit@@Base+0x58>
   1269c:	ldr	r7, [r4]
   126a0:	ldr	r0, [r7, r5, lsl #2]
   126a4:	cmp	r0, #0
   126a8:	beq	126d4 <mythread_queue_node_malloc_limit@@Base+0x138>
   126ac:	mov	r3, #0
   126b0:	mov	r1, r3
   126b4:	str	r3, [r4, #12]
   126b8:	b	125f4 <mythread_queue_node_malloc_limit@@Base+0x58>
   126bc:	cmp	r6, #0
   126c0:	beq	12710 <mythread_queue_node_malloc_limit@@Base+0x174>
   126c4:	mov	r3, #61	; 0x3d
   126c8:	mov	r0, r7
   126cc:	str	r3, [r6]
   126d0:	pop	{r4, r5, r6, r7, r8, pc}
   126d4:	ldr	r0, [r4, #20]
   126d8:	add	r0, r0, r0, lsl #1
   126dc:	lsl	r0, r0, #2
   126e0:	bl	10c94 <mycore_malloc@plt>
   126e4:	ldr	r2, [r4, #4]
   126e8:	ldr	r3, [r4]
   126ec:	str	r0, [r7, r5, lsl #2]
   126f0:	ldr	r0, [r3, r2, lsl #2]
   126f4:	cmp	r0, #0
   126f8:	bne	126ac <mythread_queue_node_malloc_limit@@Base+0x110>
   126fc:	cmp	r6, #0
   12700:	beq	12710 <mythread_queue_node_malloc_limit@@Base+0x174>
   12704:	mov	r3, #62	; 0x3e
   12708:	str	r3, [r6]
   1270c:	pop	{r4, r5, r6, r7, r8, pc}
   12710:	mov	r0, #0
   12714:	pop	{r4, r5, r6, r7, r8, pc}

00012718 <mythread_queue_list_see_for_done@@Base>:
   12718:	cmp	r1, #0
   1271c:	beq	12798 <mythread_queue_list_see_for_done@@Base+0x80>
   12720:	push	{r4, lr}
   12724:	ldr	r4, [r1]
   12728:	cmp	r4, #0
   1272c:	beq	12788 <mythread_queue_list_see_for_done@@Base+0x70>
   12730:	ldr	ip, [r0, #4]
   12734:	cmp	ip, #0
   12738:	beq	1277c <mythread_queue_list_see_for_done@@Base+0x64>
   1273c:	ldr	r2, [r4, #4]
   12740:	ldr	lr, [r4]
   12744:	ldr	r1, [r2]
   12748:	ldr	r3, [lr, #16]
   1274c:	cmp	r1, r3
   12750:	bcc	12790 <mythread_queue_list_see_for_done@@Base+0x78>
   12754:	add	r2, r2, #4
   12758:	mov	r3, #0
   1275c:	b	12770 <mythread_queue_list_see_for_done@@Base+0x58>
   12760:	ldr	r0, [r2], #4
   12764:	ldr	r1, [lr, #16]
   12768:	cmp	r0, r1
   1276c:	bcc	12790 <mythread_queue_list_see_for_done@@Base+0x78>
   12770:	add	r3, r3, #1
   12774:	cmp	ip, r3
   12778:	bne	12760 <mythread_queue_list_see_for_done@@Base+0x48>
   1277c:	ldr	r4, [r4, #12]
   12780:	cmp	r4, #0
   12784:	bne	12734 <mythread_queue_list_see_for_done@@Base+0x1c>
   12788:	mov	r0, #1
   1278c:	pop	{r4, pc}
   12790:	mov	r0, #0
   12794:	pop	{r4, pc}
   12798:	mov	r0, #1
   1279c:	bx	lr

000127a0 <mythread_queue_list_see_for_done_by_thread@@Base>:
   127a0:	cmp	r1, #0
   127a4:	beq	127f8 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   127a8:	ldr	r3, [r1]
   127ac:	cmp	r3, #0
   127b0:	beq	127f8 <mythread_queue_list_see_for_done_by_thread@@Base+0x58>
   127b4:	ldr	r1, [r3, #4]
   127b8:	ldr	ip, [r3]
   127bc:	lsl	r0, r2, #2
   127c0:	ldr	r1, [r1, r2, lsl #2]
   127c4:	ldr	r2, [ip, #16]
   127c8:	cmp	r1, r2
   127cc:	bcs	127ec <mythread_queue_list_see_for_done_by_thread@@Base+0x4c>
   127d0:	b	12800 <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   127d4:	ldr	r1, [r3, #4]
   127d8:	ldr	r2, [r3]
   127dc:	ldr	r1, [r1, r0]
   127e0:	ldr	r2, [r2, #16]
   127e4:	cmp	r1, r2
   127e8:	bcc	12800 <mythread_queue_list_see_for_done_by_thread@@Base+0x60>
   127ec:	ldr	r3, [r3, #12]
   127f0:	cmp	r3, #0
   127f4:	bne	127d4 <mythread_queue_list_see_for_done_by_thread@@Base+0x34>
   127f8:	mov	r0, #1
   127fc:	bx	lr
   12800:	mov	r0, #0
   12804:	bx	lr

00012808 <mythread_queue_list_entry_delete@@Base>:
   12808:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1280c:	subs	r6, r1, #0
   12810:	mov	r5, r0
   12814:	mov	sl, r2
   12818:	mov	r7, r3
   1281c:	ldrb	r8, [sp, #32]
   12820:	subne	r9, r0, #4
   12824:	movne	r4, #0
   12828:	beq	12848 <mythread_queue_list_entry_delete@@Base+0x40>
   1282c:	ldr	r3, [r9, #4]!
   12830:	add	r4, r4, #1
   12834:	subs	r0, r3, #0
   12838:	beq	12840 <mythread_queue_list_entry_delete@@Base+0x38>
   1283c:	bl	100e8 <mythread_suspend@plt>
   12840:	cmp	r6, r4
   12844:	bne	1282c <mythread_queue_list_entry_delete@@Base+0x24>
   12848:	ldr	r3, [r7, #16]
   1284c:	ldr	r2, [r7, #12]
   12850:	cmp	r3, #0
   12854:	ldr	r1, [sl]
   12858:	strne	r2, [r3, #12]
   1285c:	cmp	r2, #0
   12860:	strne	r3, [r2, #16]
   12864:	cmp	r7, r1
   12868:	streq	r2, [sl]
   1286c:	ldr	r2, [sl, #4]
   12870:	cmp	r7, r2
   12874:	streq	r3, [sl, #4]
   12878:	ldr	r3, [sl, #8]
   1287c:	cmp	r6, #0
   12880:	sub	r3, r3, #1
   12884:	movne	r4, #0
   12888:	str	r3, [sl, #8]
   1288c:	subne	r5, r5, #4
   12890:	movne	r9, r4
   12894:	beq	128b8 <mythread_queue_list_entry_delete@@Base+0xb0>
   12898:	ldr	r3, [r5, #4]!
   1289c:	mov	r1, r9
   128a0:	subs	r0, r3, #0
   128a4:	add	r4, r4, #1
   128a8:	beq	128b0 <mythread_queue_list_entry_delete@@Base+0xa8>
   128ac:	bl	104c0 <mythread_resume@plt>
   128b0:	cmp	r6, r4
   128b4:	bne	12898 <mythread_queue_list_entry_delete@@Base+0x90>
   128b8:	cmp	r8, #0
   128bc:	beq	128d0 <mythread_queue_list_entry_delete@@Base+0xc8>
   128c0:	ldr	r0, [r7]
   128c4:	cmp	r0, #0
   128c8:	beq	128d0 <mythread_queue_list_entry_delete@@Base+0xc8>
   128cc:	bl	102d4 <mythread_queue_destroy@plt>
   128d0:	ldr	r0, [r7, #4]
   128d4:	cmp	r0, #0
   128d8:	beq	128e0 <mythread_queue_list_entry_delete@@Base+0xd8>
   128dc:	bl	10dcc <mycore_free@plt>
   128e0:	mov	r0, r7
   128e4:	bl	10dcc <mycore_free@plt>
   128e8:	mov	r0, #0
   128ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000128f0 <mythread_queue_list_entry_clean@@Base>:
   128f0:	cmp	r0, #0
   128f4:	bxeq	lr
   128f8:	ldr	r0, [r0]
   128fc:	b	fd64 <mythread_queue_clean@plt>

00012900 <mythread_queue_list_entry_wait_for_done@@Base>:
   12900:	push	{r4, r5, r6, r7, r8, lr}
   12904:	subs	r4, r1, #0
   12908:	popeq	{r4, r5, r6, r7, r8, pc}
   1290c:	ldr	r1, [r4, #8]
   12910:	cmp	r1, #0
   12914:	beq	12970 <mythread_queue_list_entry_wait_for_done@@Base+0x70>
   12918:	ldr	r2, [r4, #4]
   1291c:	ldr	r3, [r4]
   12920:	mov	r6, r0
   12924:	mov	r7, #0
   12928:	ldr	ip, [r2, r7, lsl #2]
   1292c:	ldr	r0, [r3, #16]
   12930:	lsl	r5, r7, #2
   12934:	cmp	ip, r0
   12938:	bcs	12960 <mythread_queue_list_entry_wait_for_done@@Base+0x60>
   1293c:	ldr	r0, [r6, #24]
   12940:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12944:	ldr	r2, [r4, #4]
   12948:	ldr	r3, [r4]
   1294c:	ldr	ip, [r2, r5]
   12950:	ldr	r1, [r3, #16]
   12954:	cmp	ip, r1
   12958:	bcc	1293c <mythread_queue_list_entry_wait_for_done@@Base+0x3c>
   1295c:	ldr	r1, [r4, #8]
   12960:	add	r7, r7, #1
   12964:	cmp	r1, r7
   12968:	bhi	12928 <mythread_queue_list_entry_wait_for_done@@Base+0x28>
   1296c:	pop	{r4, r5, r6, r7, r8, pc}
   12970:	pop	{r4, r5, r6, r7, r8, pc}

00012974 <mythread_queue_node_malloc_round@@Base>:
   12974:	push	{r4, r5, r6, lr}
   12978:	ldr	r4, [r1]
   1297c:	ldr	r3, [r4, #12]
   12980:	ldr	lr, [r4, #20]
   12984:	add	r3, r3, #1
   12988:	cmp	r3, lr
   1298c:	str	r3, [r4, #12]
   12990:	bcc	129d4 <mythread_queue_node_malloc_round@@Base+0x60>
   12994:	ldr	r3, [r4, #16]
   12998:	cmp	r0, #0
   1299c:	add	r3, r3, #1
   129a0:	mov	r5, r1
   129a4:	str	r3, [r4, #16]
   129a8:	beq	129b0 <mythread_queue_node_malloc_round@@Base+0x3c>
   129ac:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   129b0:	mov	r0, r5
   129b4:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   129b8:	ldr	r3, [r4, #12]
   129bc:	ldr	r1, [r4, #4]
   129c0:	ldr	r2, [r4]
   129c4:	add	r3, r3, r3, lsl #1
   129c8:	ldr	r0, [r2, r1, lsl #2]
   129cc:	add	r0, r0, r3, lsl #2
   129d0:	pop	{r4, r5, r6, pc}
   129d4:	ldr	r2, [r4, #16]
   129d8:	add	r2, r2, #1
   129dc:	str	r2, [r4, #16]
   129e0:	b	129bc <mythread_queue_node_malloc_round@@Base+0x48>

000129e4 <mythread_queue_list_entry_see_for_done@@Base>:
   129e4:	cmp	r0, #0
   129e8:	beq	12a4c <mythread_queue_list_entry_see_for_done@@Base+0x68>
   129ec:	ldr	ip, [r0, #8]
   129f0:	cmp	ip, #0
   129f4:	beq	12a4c <mythread_queue_list_entry_see_for_done@@Base+0x68>
   129f8:	push	{lr}		; (str lr, [sp, #-4]!)
   129fc:	ldr	r2, [r0, #4]
   12a00:	ldr	lr, [r0]
   12a04:	ldr	r1, [r2]
   12a08:	ldr	r3, [lr, #16]
   12a0c:	cmp	r1, r3
   12a10:	bcc	12a44 <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12a14:	add	r2, r2, #4
   12a18:	mov	r3, #0
   12a1c:	b	12a30 <mythread_queue_list_entry_see_for_done@@Base+0x4c>
   12a20:	ldr	r0, [r2], #4
   12a24:	ldr	r1, [lr, #16]
   12a28:	cmp	r0, r1
   12a2c:	bcc	12a44 <mythread_queue_list_entry_see_for_done@@Base+0x60>
   12a30:	add	r3, r3, #1
   12a34:	cmp	r3, ip
   12a38:	bne	12a20 <mythread_queue_list_entry_see_for_done@@Base+0x3c>
   12a3c:	mov	r0, #1
   12a40:	pop	{pc}		; (ldr pc, [sp], #4)
   12a44:	mov	r0, #0
   12a48:	pop	{pc}		; (ldr pc, [sp], #4)
   12a4c:	mov	r0, #1
   12a50:	bx	lr

00012a54 <mythread_queue_list_entry_make_batch@@Base>:
   12a54:	cmp	r1, #0
   12a58:	bxeq	lr
   12a5c:	ldr	ip, [r0, #12]
   12a60:	ldr	r0, [r0, #4]
   12a64:	cmp	ip, r0
   12a68:	bxhi	lr
   12a6c:	ldr	r2, [r1, #4]
   12a70:	mov	r3, #0
   12a74:	add	r2, r2, ip, lsl #2
   12a78:	str	r3, [r2], #4
   12a7c:	add	r3, r3, #1
   12a80:	add	r1, ip, r3
   12a84:	cmp	r1, r0
   12a88:	bls	12a78 <mythread_queue_list_entry_make_batch@@Base+0x24>
   12a8c:	bx	lr

00012a90 <mythread_queue_list_entry_make_stream@@Base>:
   12a90:	cmp	r1, #0
   12a94:	bxeq	lr
   12a98:	ldr	r3, [r0, #12]
   12a9c:	ldr	r0, [r0, #4]
   12aa0:	cmp	r3, r0
   12aa4:	bxhi	lr
   12aa8:	ldr	r2, [r1, #4]
   12aac:	mov	r1, #0
   12ab0:	add	r2, r2, r3, lsl #2
   12ab4:	add	r3, r3, #1
   12ab8:	cmp	r3, r0
   12abc:	str	r1, [r2], #4
   12ac0:	bls	12ab4 <mythread_queue_list_entry_make_stream@@Base+0x24>
   12ac4:	bx	lr

00012ac8 <mythread_queue_list_entry_push@@Base>:
   12ac8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12acc:	mov	r8, r0
   12ad0:	ldr	r5, [sp, #36]	; 0x24
   12ad4:	mov	r6, r1
   12ad8:	cmp	r5, #0
   12adc:	mov	r9, r2
   12ae0:	mov	sl, r3
   12ae4:	ldr	r4, [sp, #32]
   12ae8:	beq	12c10 <mythread_queue_list_entry_push@@Base+0x148>
   12aec:	mov	r3, #0
   12af0:	str	r3, [r5]
   12af4:	mov	r1, #20
   12af8:	mov	r0, #1
   12afc:	bl	ff14 <mycore_calloc@plt>
   12b00:	subs	r7, r0, #0
   12b04:	beq	12bfc <mythread_queue_list_entry_push@@Base+0x134>
   12b08:	cmp	r4, #0
   12b0c:	str	r4, [r7, #8]
   12b10:	streq	r4, [r7, #4]
   12b14:	bne	12bd4 <mythread_queue_list_entry_push@@Base+0x10c>
   12b18:	cmp	r6, #0
   12b1c:	str	sl, [r7]
   12b20:	subne	r5, r8, #4
   12b24:	movne	r4, #0
   12b28:	bne	12b50 <mythread_queue_list_entry_push@@Base+0x88>
   12b2c:	b	12b70 <mythread_queue_list_entry_push@@Base+0xa8>
   12b30:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   12b34:	ldr	r3, [r5, #4]!
   12b38:	add	r4, r4, #1
   12b3c:	subs	r0, r3, #0
   12b40:	beq	12b48 <mythread_queue_list_entry_push@@Base+0x80>
   12b44:	bl	100e8 <mythread_suspend@plt>
   12b48:	cmp	r6, r4
   12b4c:	beq	12b70 <mythread_queue_list_entry_push@@Base+0xa8>
   12b50:	ldr	r3, [r5, #4]
   12b54:	mov	r1, r7
   12b58:	mov	r0, r3
   12b5c:	ldr	r2, [r3, #32]
   12b60:	cmp	r2, #1
   12b64:	bne	12b30 <mythread_queue_list_entry_push@@Base+0x68>
   12b68:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   12b6c:	b	12b34 <mythread_queue_list_entry_push@@Base+0x6c>
   12b70:	ldr	r3, [r9]
   12b74:	cmp	r3, #0
   12b78:	beq	12c2c <mythread_queue_list_entry_push@@Base+0x164>
   12b7c:	ldr	r3, [r9, #4]
   12b80:	str	r7, [r3, #12]
   12b84:	str	r3, [r7, #16]
   12b88:	str	r7, [r9, #4]
   12b8c:	ldr	r3, [r9, #8]
   12b90:	cmp	r6, #0
   12b94:	add	r3, r3, #1
   12b98:	str	r3, [r9, #8]
   12b9c:	beq	12bcc <mythread_queue_list_entry_push@@Base+0x104>
   12ba0:	mov	r4, #0
   12ba4:	sub	r5, r8, #4
   12ba8:	mov	r8, r4
   12bac:	ldr	r3, [r5, #4]!
   12bb0:	mov	r1, r8
   12bb4:	subs	r0, r3, #0
   12bb8:	add	r4, r4, #1
   12bbc:	beq	12bc4 <mythread_queue_list_entry_push@@Base+0xfc>
   12bc0:	bl	104c0 <mythread_resume@plt>
   12bc4:	cmp	r6, r4
   12bc8:	bne	12bac <mythread_queue_list_entry_push@@Base+0xe4>
   12bcc:	mov	r0, r7
   12bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd4:	mov	r0, r4
   12bd8:	mov	r1, #4
   12bdc:	bl	ff14 <mycore_calloc@plt>
   12be0:	cmp	r0, #0
   12be4:	str	r0, [r7, #4]
   12be8:	bne	12b18 <mythread_queue_list_entry_push@@Base+0x50>
   12bec:	mov	r0, r7
   12bf0:	bl	10dcc <mycore_free@plt>
   12bf4:	cmp	r5, #0
   12bf8:	beq	12c24 <mythread_queue_list_entry_push@@Base+0x15c>
   12bfc:	mov	r3, #60	; 0x3c
   12c00:	mov	r7, #0
   12c04:	str	r3, [r5]
   12c08:	mov	r0, r7
   12c0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c10:	mov	r1, #20
   12c14:	mov	r0, #1
   12c18:	bl	ff14 <mycore_calloc@plt>
   12c1c:	subs	r7, r0, #0
   12c20:	bne	12b08 <mythread_queue_list_entry_push@@Base+0x40>
   12c24:	mov	r7, #0
   12c28:	b	12bcc <mythread_queue_list_entry_push@@Base+0x104>
   12c2c:	str	r7, [r9]
   12c30:	str	r7, [r9, #4]
   12c34:	b	12b8c <mythread_queue_list_entry_push@@Base+0xc4>

00012c38 <mythread_function_see_opt@@Base>:
   12c38:	push	{r4, r5, r6, lr}
   12c3c:	sub	sp, sp, #8
   12c40:	ldr	r5, [r0, #28]
   12c44:	str	r1, [sp, #4]
   12c48:	ldr	r1, [r5, #16]
   12c4c:	ldr	ip, [r1, #8]
   12c50:	cmp	ip, r3
   12c54:	movne	r6, #0
   12c58:	beq	12c68 <mythread_function_see_opt@@Base+0x30>
   12c5c:	mov	r0, r6
   12c60:	add	sp, sp, #8
   12c64:	pop	{r4, r5, r6, pc}
   12c68:	ldr	r3, [sp, #4]
   12c6c:	mov	r4, r0
   12c70:	tst	r3, #4
   12c74:	bne	12ccc <mythread_function_see_opt@@Base+0x94>
   12c78:	ldr	r3, [sp, #4]
   12c7c:	tst	r3, #2
   12c80:	bne	12c9c <mythread_function_see_opt@@Base+0x64>
   12c84:	ldr	r0, [sp, #24]
   12c88:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12c8c:	mov	r6, #0
   12c90:	mov	r0, r6
   12c94:	add	sp, sp, #8
   12c98:	pop	{r4, r5, r6, pc}
   12c9c:	mov	r0, r5
   12ca0:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12ca4:	subs	r6, r0, #0
   12ca8:	beq	12c84 <mythread_function_see_opt@@Base+0x4c>
   12cac:	mov	r0, r5
   12cb0:	ldr	r1, [r4, #20]
   12cb4:	bl	10634 <mythread_mutex_close@plt>
   12cb8:	ldr	r0, [r4, #24]
   12cbc:	bl	10c04 <mythread_nanosleep_destroy@plt>
   12cc0:	mov	r3, #2
   12cc4:	str	r3, [r4, #12]
   12cc8:	b	12c5c <mythread_function_see_opt@@Base+0x24>
   12ccc:	mov	r0, r5
   12cd0:	bl	105d4 <mythread_queue_list_see_for_done_by_thread@plt>
   12cd4:	cmp	r0, #0
   12cd8:	beq	12c84 <mythread_function_see_opt@@Base+0x4c>
   12cdc:	mov	r3, #4
   12ce0:	mov	r0, r5
   12ce4:	str	r3, [r4, #12]
   12ce8:	ldr	r1, [r4, #20]
   12cec:	mov	r6, #0
   12cf0:	bl	10d9c <mythread_mutex_wait@plt>
   12cf4:	str	r6, [r4, #12]
   12cf8:	b	12c5c <mythread_function_see_opt@@Base+0x24>

00012cfc <mythread_function_queue_batch@@Base>:
   12cfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d00:	sub	sp, sp, #28
   12d04:	ldr	sl, [r0, #28]
   12d08:	ldr	r1, [r0]
   12d0c:	mov	r9, r0
   12d10:	ldr	r3, [sl, #16]
   12d14:	mov	r0, sl
   12d18:	str	r3, [sp, #16]
   12d1c:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12d20:	ldr	r1, [r9, #20]
   12d24:	mov	r4, r0
   12d28:	str	r0, [sp, #20]
   12d2c:	mov	r0, sl
   12d30:	bl	10d9c <mythread_mutex_wait@plt>
   12d34:	lsl	r7, r4, #2
   12d38:	ldr	r3, [sl, #36]	; 0x24
   12d3c:	tst	r3, #1
   12d40:	beq	12d74 <mythread_function_queue_batch@@Base+0x78>
   12d44:	mov	r3, #1
   12d48:	str	r3, [r9, #12]
   12d4c:	ldr	r3, [sl, #36]	; 0x24
   12d50:	tst	r3, #1
   12d54:	beq	12d6c <mythread_function_queue_batch@@Base+0x70>
   12d58:	ldr	r0, [r9, #24]
   12d5c:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12d60:	ldr	r3, [sl, #36]	; 0x24
   12d64:	tst	r3, #1
   12d68:	bne	12d58 <mythread_function_queue_batch@@Base+0x5c>
   12d6c:	mov	r3, #0
   12d70:	str	r3, [r9, #12]
   12d74:	ldr	r3, [sp, #16]
   12d78:	ldr	r4, [r3]
   12d7c:	cmp	r4, #0
   12d80:	beq	12e60 <mythread_function_queue_batch@@Base+0x164>
   12d84:	mov	r8, #0
   12d88:	b	12d98 <mythread_function_queue_batch@@Base+0x9c>
   12d8c:	ldr	r4, [r4, #12]
   12d90:	cmp	r4, #0
   12d94:	beq	12e20 <mythread_function_queue_batch@@Base+0x124>
   12d98:	ldr	r5, [r4, #4]
   12d9c:	ldr	r6, [r4]
   12da0:	ldr	r2, [r5, r7]
   12da4:	ldr	r3, [r6, #16]
   12da8:	cmp	r2, r3
   12dac:	addcs	r8, r8, #1
   12db0:	bcs	12d8c <mythread_function_queue_batch@@Base+0x90>
   12db4:	ldr	r0, [r5, r7]
   12db8:	ldr	r1, [r6, #20]
   12dbc:	ldr	r3, [r5, r7]
   12dc0:	ldr	r2, [r6, #20]
   12dc4:	str	r3, [sp, #12]
   12dc8:	str	r2, [sp, #8]
   12dcc:	bl	2ce38 <mcsync_mutex_unlock@@Base+0x14>
   12dd0:	ldr	r2, [sp, #8]
   12dd4:	ldr	r3, [sp, #12]
   12dd8:	mov	r1, r2
   12ddc:	mov	fp, r0
   12de0:	mov	r0, r3
   12de4:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   12de8:	ldr	r2, [r6]
   12dec:	ldr	r3, [r9, #4]
   12df0:	ldr	r0, [r9]
   12df4:	ldr	r2, [r2, fp, lsl #2]
   12df8:	add	r1, r1, r1, lsl #1
   12dfc:	add	r1, r2, r1, lsl #2
   12e00:	blx	r3
   12e04:	ldr	r3, [r5, r7]
   12e08:	ldr	r2, [sl, #4]
   12e0c:	ldr	r4, [r4, #12]
   12e10:	add	r3, r3, r2
   12e14:	cmp	r4, #0
   12e18:	str	r3, [r5, r7]
   12e1c:	bne	12d98 <mythread_function_queue_batch@@Base+0x9c>
   12e20:	ldr	r3, [sp, #16]
   12e24:	ldr	r3, [r3, #8]
   12e28:	cmp	r3, r8
   12e2c:	bne	12d38 <mythread_function_queue_batch@@Base+0x3c>
   12e30:	ldr	r2, [r9, #24]
   12e34:	ldr	r1, [sl, #36]	; 0x24
   12e38:	mov	r3, r8
   12e3c:	str	r2, [sp]
   12e40:	mov	r0, r9
   12e44:	ldr	r2, [sp, #20]
   12e48:	bl	fecc <mythread_function_see_opt@plt>
   12e4c:	cmp	r0, #0
   12e50:	beq	12d38 <mythread_function_queue_batch@@Base+0x3c>
   12e54:	mov	r0, #0
   12e58:	add	sp, sp, #28
   12e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e60:	ldr	r3, [sp, #16]
   12e64:	mov	r8, r4
   12e68:	ldr	r3, [r3, #8]
   12e6c:	cmp	r3, r8
   12e70:	bne	12d38 <mythread_function_queue_batch@@Base+0x3c>
   12e74:	b	12e30 <mythread_function_queue_batch@@Base+0x134>

00012e78 <mythread_function_queue_stream@@Base>:
   12e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e7c:	sub	sp, sp, #28
   12e80:	ldr	sl, [r0, #28]
   12e84:	ldr	r1, [r0]
   12e88:	mov	r9, r0
   12e8c:	ldr	r3, [sl, #16]
   12e90:	mov	r0, sl
   12e94:	str	r3, [sp, #12]
   12e98:	bl	fe54 <myhread_increase_id_by_entry_id@plt>
   12e9c:	ldr	r1, [r9, #20]
   12ea0:	mov	r4, r0
   12ea4:	str	r0, [sp, #20]
   12ea8:	mov	r0, sl
   12eac:	bl	10d9c <mythread_mutex_wait@plt>
   12eb0:	lsl	r7, r4, #2
   12eb4:	ldr	r3, [sl, #36]	; 0x24
   12eb8:	tst	r3, #1
   12ebc:	beq	12ef0 <mythread_function_queue_stream@@Base+0x78>
   12ec0:	mov	r3, #1
   12ec4:	str	r3, [r9, #12]
   12ec8:	ldr	r3, [sl, #36]	; 0x24
   12ecc:	tst	r3, #1
   12ed0:	beq	12ee8 <mythread_function_queue_stream@@Base+0x70>
   12ed4:	ldr	r0, [r9, #24]
   12ed8:	bl	100a0 <mythread_nanosleep_sleep@plt>
   12edc:	ldr	r3, [sl, #36]	; 0x24
   12ee0:	tst	r3, #1
   12ee4:	bne	12ed4 <mythread_function_queue_stream@@Base+0x5c>
   12ee8:	mov	r3, #0
   12eec:	str	r3, [r9, #12]
   12ef0:	ldr	r3, [sp, #12]
   12ef4:	ldr	r4, [r3]
   12ef8:	cmp	r4, #0
   12efc:	beq	12fd8 <mythread_function_queue_stream@@Base+0x160>
   12f00:	mov	r8, #0
   12f04:	str	sl, [sp, #16]
   12f08:	b	12f18 <mythread_function_queue_stream@@Base+0xa0>
   12f0c:	ldr	r4, [r4, #12]
   12f10:	cmp	r4, #0
   12f14:	beq	12f94 <mythread_function_queue_stream@@Base+0x11c>
   12f18:	ldr	r5, [r4, #4]
   12f1c:	ldr	r6, [r4]
   12f20:	ldr	r2, [r5, r7]
   12f24:	ldr	r3, [r6, #16]
   12f28:	cmp	r2, r3
   12f2c:	addcs	r8, r8, #1
   12f30:	bcs	12f0c <mythread_function_queue_stream@@Base+0x94>
   12f34:	ldr	r0, [r5, r7]
   12f38:	ldr	r1, [r6, #20]
   12f3c:	ldr	sl, [r5, r7]
   12f40:	ldr	r2, [r6, #20]
   12f44:	str	r2, [sp, #8]
   12f48:	bl	2ce38 <mcsync_mutex_unlock@@Base+0x14>
   12f4c:	ldr	r2, [sp, #8]
   12f50:	mov	r1, r2
   12f54:	mov	fp, r0
   12f58:	mov	r0, sl
   12f5c:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   12f60:	ldr	r2, [r6]
   12f64:	ldr	r3, [r9, #4]
   12f68:	ldr	r0, [r9]
   12f6c:	ldr	r2, [r2, fp, lsl #2]
   12f70:	add	r1, r1, r1, lsl #1
   12f74:	add	r1, r2, r1, lsl #2
   12f78:	blx	r3
   12f7c:	ldr	r3, [r5, r7]
   12f80:	ldr	r4, [r4, #12]
   12f84:	add	r3, r3, #1
   12f88:	cmp	r4, #0
   12f8c:	str	r3, [r5, r7]
   12f90:	bne	12f18 <mythread_function_queue_stream@@Base+0xa0>
   12f94:	ldr	sl, [sp, #16]
   12f98:	ldr	r3, [sp, #12]
   12f9c:	ldr	r3, [r3, #8]
   12fa0:	cmp	r3, r8
   12fa4:	bne	12eb4 <mythread_function_queue_stream@@Base+0x3c>
   12fa8:	ldr	r2, [r9, #24]
   12fac:	ldr	r1, [sl, #36]	; 0x24
   12fb0:	mov	r3, r8
   12fb4:	str	r2, [sp]
   12fb8:	mov	r0, r9
   12fbc:	ldr	r2, [sp, #20]
   12fc0:	bl	fecc <mythread_function_see_opt@plt>
   12fc4:	cmp	r0, #0
   12fc8:	beq	12eb4 <mythread_function_queue_stream@@Base+0x3c>
   12fcc:	mov	r0, #0
   12fd0:	add	sp, sp, #28
   12fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fd8:	mov	r8, r4
   12fdc:	b	12f98 <mythread_function_queue_stream@@Base+0x120>

00012fe0 <mythread_function@@Base>:
   12fe0:	push	{r4, r5, r6, lr}
   12fe4:	mov	r4, r0
   12fe8:	ldr	r5, [r0, #28]
   12fec:	ldr	r1, [r0, #20]
   12ff0:	mov	r0, r5
   12ff4:	bl	10d9c <mythread_mutex_wait@plt>
   12ff8:	ldr	r3, [r4, #4]
   12ffc:	mov	r1, r4
   13000:	ldr	r0, [r4]
   13004:	blx	r3
   13008:	ldr	r3, [r4, #12]
   1300c:	orr	r3, r3, #8
   13010:	str	r3, [r4, #12]
   13014:	ldr	r3, [r4, #12]
   13018:	tst	r3, #1
   1301c:	ldr	r3, [r4, #12]
   13020:	beq	13060 <mythread_function@@Base+0x80>
   13024:	tst	r3, #1
   13028:	beq	13040 <mythread_function@@Base+0x60>
   1302c:	ldr	r0, [r4, #24]
   13030:	bl	100a0 <mythread_nanosleep_sleep@plt>
   13034:	ldr	r3, [r4, #12]
   13038:	tst	r3, #1
   1303c:	bne	1302c <mythread_function@@Base+0x4c>
   13040:	ldr	r3, [r5, #36]	; 0x24
   13044:	tst	r3, #2
   13048:	bne	13080 <mythread_function@@Base+0xa0>
   1304c:	ldr	r3, [r4, #12]
   13050:	ands	r3, r3, #2
   13054:	bne	13080 <mythread_function@@Base+0xa0>
   13058:	str	r3, [r4, #12]
   1305c:	b	12ff8 <mythread_function@@Base+0x18>
   13060:	orr	r3, r3, #4
   13064:	str	r3, [r4, #12]
   13068:	ldr	r1, [r4, #20]
   1306c:	mov	r0, r5
   13070:	bl	10d9c <mythread_mutex_wait@plt>
   13074:	ldr	r3, [r5, #36]	; 0x24
   13078:	tst	r3, #2
   1307c:	beq	1304c <mythread_function@@Base+0x6c>
   13080:	mov	r0, r5
   13084:	ldr	r1, [r4, #20]
   13088:	bl	10634 <mythread_mutex_close@plt>
   1308c:	ldr	r0, [r4, #24]
   13090:	bl	10c04 <mythread_nanosleep_destroy@plt>
   13094:	mov	r3, #2
   13098:	str	r3, [r4, #12]
   1309c:	mov	r0, #0
   130a0:	pop	{r4, r5, r6, pc}

000130a4 <mycore_power@@Base>:
   130a4:	cmp	r1, #0
   130a8:	mov	r3, r0
   130ac:	mov	r0, #1
   130b0:	beq	130cc <mycore_power@@Base+0x28>
   130b4:	tst	r1, #1
   130b8:	mulne	r0, r3, r0
   130bc:	lsrs	r1, r1, #1
   130c0:	mul	r3, r3, r3
   130c4:	bne	130b4 <mycore_power@@Base+0x10>
   130c8:	bx	lr
   130cc:	bx	lr

000130d0 <mycore_strncasecmp@@Base>:
   130d0:	cmp	r1, #0
   130d4:	cmpne	r0, #0
   130d8:	push	{r4, r5, r6, lr}
   130dc:	moveq	r5, #1
   130e0:	movne	r5, #0
   130e4:	beq	13150 <mycore_strncasecmp@@Base+0x80>
   130e8:	cmp	r2, #0
   130ec:	beq	13148 <mycore_strncasecmp@@Base+0x78>
   130f0:	ldrb	ip, [r0]
   130f4:	ldrb	lr, [r1]
   130f8:	ldr	r3, [pc, #100]	; 13164 <mycore_strncasecmp@@Base+0x94>
   130fc:	add	r3, pc, r3
   13100:	ldrb	ip, [r3, ip]
   13104:	ldrb	r3, [r3, lr]
   13108:	cmp	ip, r3
   1310c:	bne	1315c <mycore_strncasecmp@@Base+0x8c>
   13110:	ldr	ip, [pc, #80]	; 13168 <mycore_strncasecmp@@Base+0x98>
   13114:	add	r3, r0, #1
   13118:	add	ip, pc, ip
   1311c:	add	r6, r0, r2
   13120:	b	1313c <mycore_strncasecmp@@Base+0x6c>
   13124:	ldrb	r4, [r3], #1
   13128:	ldrb	lr, [r1, #1]!
   1312c:	ldrb	r4, [ip, r4]
   13130:	ldrb	lr, [ip, lr]
   13134:	cmp	r4, lr
   13138:	bne	1315c <mycore_strncasecmp@@Base+0x8c>
   1313c:	cmp	r3, r6
   13140:	sub	r5, r3, r0
   13144:	bne	13124 <mycore_strncasecmp@@Base+0x54>
   13148:	mov	r0, #0
   1314c:	pop	{r4, r5, r6, pc}
   13150:	subs	r0, r0, r1
   13154:	movne	r0, #1
   13158:	pop	{r4, r5, r6, pc}
   1315c:	sub	r0, r2, r5
   13160:	pop	{r4, r5, r6, pc}
   13164:	andeq	sl, r1, r8, asr r3
   13168:	andeq	sl, r1, ip, lsr r3

0001316c <mycore_strcasecmp@@Base>:
   1316c:	cmp	r1, #0
   13170:	cmpne	r0, #0
   13174:	push	{r4, r5, lr}
   13178:	moveq	lr, #1
   1317c:	movne	lr, #0
   13180:	beq	131e4 <mycore_strcasecmp@@Base+0x78>
   13184:	ldrb	r2, [r0]
   13188:	ldrb	r3, [r1]
   1318c:	ldr	ip, [pc, #116]	; 13208 <mycore_strcasecmp@@Base+0x9c>
   13190:	add	ip, pc, ip
   13194:	ldrb	r4, [ip, r2]
   13198:	ldrb	r3, [ip, r3]
   1319c:	cmp	r4, r3
   131a0:	bne	131f8 <mycore_strcasecmp@@Base+0x8c>
   131a4:	cmp	r2, #0
   131a8:	movne	r2, ip
   131ac:	bne	131c0 <mycore_strcasecmp@@Base+0x54>
   131b0:	b	13200 <mycore_strcasecmp@@Base+0x94>
   131b4:	cmp	r3, #0
   131b8:	mov	lr, r5
   131bc:	beq	131f0 <mycore_strcasecmp@@Base+0x84>
   131c0:	ldrb	r3, [r0, #1]!
   131c4:	ldrb	ip, [r1, #1]!
   131c8:	add	r5, lr, #1
   131cc:	ldrb	r4, [r2, r3]
   131d0:	ldrb	ip, [r2, ip]
   131d4:	cmp	r4, ip
   131d8:	beq	131b4 <mycore_strcasecmp@@Base+0x48>
   131dc:	add	r0, lr, #2
   131e0:	pop	{r4, r5, pc}
   131e4:	subs	r0, r0, r1
   131e8:	movne	r0, #1
   131ec:	pop	{r4, r5, pc}
   131f0:	mov	r0, r3
   131f4:	pop	{r4, r5, pc}
   131f8:	mov	r0, #1
   131fc:	pop	{r4, r5, pc}
   13200:	mov	r0, r2
   13204:	pop	{r4, r5, pc}
   13208:	andeq	sl, r1, r4, asr #5

0001320c <mycore_strncmp@@Base>:
   1320c:	cmp	r1, #0
   13210:	cmpne	r0, #0
   13214:	push	{r4, r5, lr}
   13218:	moveq	r4, #1
   1321c:	movne	r4, #0
   13220:	beq	1326c <mycore_strncmp@@Base+0x60>
   13224:	cmp	r2, #0
   13228:	beq	13264 <mycore_strncmp@@Base+0x58>
   1322c:	ldrb	r3, [r0]
   13230:	ldrb	ip, [r1]
   13234:	cmp	ip, r3
   13238:	addeq	r3, r0, #1
   1323c:	addeq	r5, r0, r2
   13240:	beq	13258 <mycore_strncmp@@Base+0x4c>
   13244:	b	13278 <mycore_strncmp@@Base+0x6c>
   13248:	ldrb	ip, [r3], #1
   1324c:	ldrb	lr, [r1, #1]!
   13250:	cmp	lr, ip
   13254:	bne	13278 <mycore_strncmp@@Base+0x6c>
   13258:	cmp	r3, r5
   1325c:	sub	r4, r3, r0
   13260:	bne	13248 <mycore_strncmp@@Base+0x3c>
   13264:	mov	r0, #0
   13268:	pop	{r4, r5, pc}
   1326c:	subs	r0, r0, r1
   13270:	movne	r0, #1
   13274:	pop	{r4, r5, pc}
   13278:	sub	r0, r2, r4
   1327c:	pop	{r4, r5, pc}

00013280 <mycore_strcmp@@Base>:
   13280:	cmp	r1, #0
   13284:	cmpne	r0, #0
   13288:	moveq	r3, #1
   1328c:	movne	r3, #0
   13290:	beq	132e0 <mycore_strcmp@@Base+0x60>
   13294:	ldrb	ip, [r0]
   13298:	ldrb	r2, [r1]
   1329c:	cmp	r2, ip
   132a0:	bne	132f4 <mycore_strcmp@@Base+0x74>
   132a4:	cmp	r2, #0
   132a8:	beq	132fc <mycore_strcmp@@Base+0x7c>
   132ac:	push	{lr}		; (str lr, [sp, #-4]!)
   132b0:	mov	r2, r3
   132b4:	b	132c4 <mycore_strcmp@@Base+0x44>
   132b8:	cmp	r3, #0
   132bc:	mov	r2, lr
   132c0:	beq	132ec <mycore_strcmp@@Base+0x6c>
   132c4:	ldrb	ip, [r0, #1]!
   132c8:	ldrb	r3, [r1, #1]!
   132cc:	add	lr, r2, #1
   132d0:	cmp	r3, ip
   132d4:	beq	132b8 <mycore_strcmp@@Base+0x38>
   132d8:	add	r0, r2, #2
   132dc:	pop	{pc}		; (ldr pc, [sp], #4)
   132e0:	subs	r0, r0, r1
   132e4:	movne	r0, #1
   132e8:	bx	lr
   132ec:	mov	r0, r3
   132f0:	pop	{pc}		; (ldr pc, [sp], #4)
   132f4:	mov	r0, #1
   132f8:	bx	lr
   132fc:	mov	r0, r2
   13300:	bx	lr

00013304 <mycore_strcmp_ws@@Base>:
   13304:	cmp	r1, #0
   13308:	cmpne	r0, #0
   1330c:	beq	13398 <mycore_strcmp_ws@@Base+0x94>
   13310:	ldrb	ip, [r0]
   13314:	ldrb	r3, [r1]
   13318:	cmp	r3, ip
   1331c:	bne	133ac <mycore_strcmp_ws@@Base+0xa8>
   13320:	sub	ip, r3, #9
   13324:	push	{r4, r5, lr}
   13328:	sub	lr, r3, #12
   1332c:	cmp	lr, #1
   13330:	cmphi	ip, #1
   13334:	movls	ip, #1
   13338:	movhi	ip, #0
   1333c:	tst	r3, #223	; 0xdf
   13340:	orreq	ip, ip, #1
   13344:	cmp	ip, #0
   13348:	beq	13374 <mycore_strcmp_ws@@Base+0x70>
   1334c:	b	133a4 <mycore_strcmp_ws@@Base+0xa0>
   13350:	cmp	r4, #1
   13354:	cmphi	r3, #1
   13358:	movls	r3, #1
   1335c:	movhi	r3, #0
   13360:	tst	r2, #223	; 0xdf
   13364:	orreq	r3, r3, #1
   13368:	cmp	r3, #0
   1336c:	mov	ip, r5
   13370:	bne	133a4 <mycore_strcmp_ws@@Base+0xa0>
   13374:	ldrb	r2, [r1, #1]!
   13378:	ldrb	lr, [r0, #1]!
   1337c:	add	r5, ip, #1
   13380:	sub	r3, r2, #9
   13384:	cmp	r2, lr
   13388:	sub	r4, r2, #12
   1338c:	beq	13350 <mycore_strcmp_ws@@Base+0x4c>
   13390:	add	r0, ip, #2
   13394:	pop	{r4, r5, pc}
   13398:	subs	r0, r0, r1
   1339c:	movne	r0, #1
   133a0:	bx	lr
   133a4:	mov	r0, #0
   133a8:	pop	{r4, r5, pc}
   133ac:	mov	r0, #1
   133b0:	bx	lr

000133b4 <mycore_ustrcasecmp_without_checks_by_secondary@@Base>:
   133b4:	ldrb	r3, [r0]
   133b8:	cmp	r3, #0
   133bc:	beq	13428 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   133c0:	ldrb	ip, [r1]
   133c4:	ldr	r2, [pc, #108]	; 13438 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x84>
   133c8:	add	r2, pc, r2
   133cc:	ldrb	ip, [r2, ip]
   133d0:	ldrb	r3, [r2, r3]
   133d4:	cmp	r3, ip
   133d8:	bne	13430 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x7c>
   133dc:	ldrb	r3, [r0, #1]!
   133e0:	ldr	r2, [pc, #84]	; 1343c <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x88>
   133e4:	cmp	r3, #0
   133e8:	add	r2, pc, r2
   133ec:	beq	13428 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x74>
   133f0:	push	{lr}		; (str lr, [sp, #-4]!)
   133f4:	b	13404 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x50>
   133f8:	ldrb	r3, [r0, #1]!
   133fc:	cmp	r3, #0
   13400:	beq	13420 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x6c>
   13404:	ldrb	lr, [r1, #1]!
   13408:	ldrb	ip, [r2, r3]
   1340c:	ldrb	r3, [r2, lr]
   13410:	cmp	ip, r3
   13414:	beq	133f8 <mycore_ustrcasecmp_without_checks_by_secondary@@Base+0x44>
   13418:	mov	r0, #0
   1341c:	pop	{pc}		; (ldr pc, [sp], #4)
   13420:	mov	r0, #1
   13424:	pop	{pc}		; (ldr pc, [sp], #4)
   13428:	mov	r0, #1
   1342c:	bx	lr
   13430:	mov	r0, #0
   13434:	bx	lr
   13438:	andeq	sl, r1, ip, lsl #1
   1343c:	andeq	sl, r1, ip, rrx

00013440 <mycore_utils_avl_tree_create@@Base>:
   13440:	mov	r1, #4
   13444:	mov	r0, #1
   13448:	b	ff14 <mycore_calloc@plt>

0001344c <mycore_utils_avl_tree_init@@Base>:
   1344c:	push	{r4, lr}
   13450:	mov	r4, r0
   13454:	bl	1001c <mcobject_create@plt>
   13458:	subs	r3, r0, #0
   1345c:	str	r0, [r4]
   13460:	beq	1347c <mycore_utils_avl_tree_init@@Base+0x30>
   13464:	mov	r2, #24
   13468:	mov	r1, #256	; 0x100
   1346c:	bl	10778 <mcobject_init@plt>
   13470:	adds	r0, r0, #0
   13474:	movne	r0, #1
   13478:	pop	{r4, pc}
   1347c:	mov	r0, #2
   13480:	pop	{r4, pc}

00013484 <mycore_utils_avl_tree_clean@@Base>:
   13484:	ldr	r0, [r0]
   13488:	b	10f70 <mcobject_clean@plt>

0001348c <mycore_utils_avl_tree_destroy@@Base>:
   1348c:	push	{r4, r5, r6, lr}
   13490:	subs	r4, r0, #0
   13494:	beq	134b0 <mycore_utils_avl_tree_destroy@@Base+0x24>
   13498:	mov	r5, r1
   1349c:	ldr	r0, [r4]
   134a0:	mov	r1, #1
   134a4:	bl	fdd0 <mcobject_destroy@plt>
   134a8:	cmp	r5, #0
   134ac:	bne	134b8 <mycore_utils_avl_tree_destroy@@Base+0x2c>
   134b0:	mov	r0, r4
   134b4:	pop	{r4, r5, r6, pc}
   134b8:	mov	r0, r4
   134bc:	bl	10dcc <mycore_free@plt>
   134c0:	mov	r4, #0
   134c4:	b	134b0 <mycore_utils_avl_tree_destroy@@Base+0x24>

000134c8 <mycore_utils_avl_tree_node_create_root@@Base>:
   134c8:	push	{r4, r5, r6, lr}
   134cc:	mov	r5, r1
   134d0:	ldr	r0, [r0]
   134d4:	mov	r1, #0
   134d8:	mov	r4, r2
   134dc:	bl	10a60 <mcobject_malloc@plt>
   134e0:	mov	r1, #0
   134e4:	stm	r0, {r4, r5}
   134e8:	str	r1, [r0, #8]
   134ec:	str	r1, [r0, #12]
   134f0:	str	r1, [r0, #16]
   134f4:	str	r1, [r0, #20]
   134f8:	pop	{r4, r5, r6, pc}

000134fc <mycore_utils_avl_tree_node_clean@@Base>:
   134fc:	mov	r3, #0
   13500:	str	r3, [r0]
   13504:	str	r3, [r0, #4]
   13508:	str	r3, [r0, #8]
   1350c:	str	r3, [r0, #12]
   13510:	str	r3, [r0, #16]
   13514:	str	r3, [r0, #20]
   13518:	bx	lr

0001351c <mycore_utils_avl_tree_node_height@@Base>:
   1351c:	cmp	r0, #0
   13520:	ldrshne	r0, [r0, #20]
   13524:	bx	lr

00013528 <mycore_utils_avl_tree_node_balance_factor@@Base>:
   13528:	push	{r4, r5, r6, lr}
   1352c:	mov	r5, r0
   13530:	ldr	r0, [r0, #12]
   13534:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13538:	mov	r4, r0
   1353c:	ldr	r0, [r5, #8]
   13540:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13544:	sub	r0, r4, r0
   13548:	sxth	r0, r0
   1354c:	pop	{r4, r5, r6, pc}

00013550 <mycore_utils_avl_tree_node_set_height@@Base>:
   13550:	push	{r4, r5, r6, lr}
   13554:	mov	r5, r0
   13558:	ldr	r0, [r0, #8]
   1355c:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13560:	mov	r4, r0
   13564:	ldr	r0, [r5, #12]
   13568:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   1356c:	cmp	r4, r0
   13570:	movge	r0, r4
   13574:	add	r0, r0, #1
   13578:	strh	r0, [r5, #20]
   1357c:	pop	{r4, r5, r6, pc}

00013580 <mycore_utils_avl_tree_node_rotate_right@@Base>:
   13580:	push	{r4, lr}
   13584:	ldr	r4, [r0, #8]
   13588:	ldr	r1, [r0, #16]
   1358c:	ldr	r2, [r4, #12]
   13590:	str	r1, [r4, #16]
   13594:	cmp	r2, #0
   13598:	strne	r0, [r2, #16]
   1359c:	str	r2, [r0, #8]
   135a0:	str	r4, [r0, #16]
   135a4:	str	r0, [r4, #12]
   135a8:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   135ac:	mov	r0, r4
   135b0:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   135b4:	mov	r0, r4
   135b8:	pop	{r4, pc}

000135bc <mycore_utils_avl_tree_node_rotate_left@@Base>:
   135bc:	push	{r4, lr}
   135c0:	ldr	r4, [r0, #12]
   135c4:	ldr	r1, [r0, #16]
   135c8:	ldr	r2, [r4, #8]
   135cc:	str	r1, [r4, #16]
   135d0:	cmp	r2, #0
   135d4:	strne	r0, [r2, #16]
   135d8:	str	r2, [r0, #12]
   135dc:	str	r4, [r0, #16]
   135e0:	str	r0, [r4, #8]
   135e4:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   135e8:	mov	r0, r4
   135ec:	bl	106c4 <mycore_utils_avl_tree_node_set_height@plt>
   135f0:	mov	r0, r4
   135f4:	pop	{r4, pc}

000135f8 <mycore_utils_avl_tree_node_balance@@Base>:
   135f8:	push	{r4, r5, r6, lr}
   135fc:	mov	r4, r0
   13600:	ldr	r0, [r0, #8]
   13604:	mov	r6, r1
   13608:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   1360c:	mov	r5, r0
   13610:	ldr	r0, [r4, #12]
   13614:	bl	10fb8 <mycore_utils_avl_tree_node_height@plt>
   13618:	cmp	r5, r0
   1361c:	movlt	r3, r0
   13620:	movge	r3, r5
   13624:	sub	r0, r0, r5
   13628:	add	r3, r3, #1
   1362c:	cmn	r0, #2
   13630:	strh	r3, [r4, #20]
   13634:	beq	13690 <mycore_utils_avl_tree_node_balance@@Base+0x98>
   13638:	cmp	r0, #2
   1363c:	bne	13678 <mycore_utils_avl_tree_node_balance@@Base+0x80>
   13640:	ldr	r0, [r4, #12]
   13644:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   13648:	cmp	r0, #0
   1364c:	blt	136ec <mycore_utils_avl_tree_node_balance@@Base+0xf4>
   13650:	ldr	r5, [r4, #16]
   13654:	cmp	r5, #0
   13658:	beq	136fc <mycore_utils_avl_tree_node_balance@@Base+0x104>
   1365c:	ldr	r3, [r5, #12]
   13660:	mov	r0, r4
   13664:	cmp	r4, r3
   13668:	beq	136d4 <mycore_utils_avl_tree_node_balance@@Base+0xdc>
   1366c:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13670:	str	r0, [r5, #8]
   13674:	pop	{r4, r5, r6, pc}
   13678:	ldr	r0, [r4, #16]
   1367c:	cmp	r0, #0
   13680:	popne	{r4, r5, r6, pc}
   13684:	str	r4, [r6]
   13688:	ldr	r0, [r4, #16]
   1368c:	pop	{r4, r5, r6, pc}
   13690:	ldr	r0, [r4, #8]
   13694:	bl	fdac <mycore_utils_avl_tree_node_balance_factor@plt>
   13698:	cmp	r0, #0
   1369c:	ble	136ac <mycore_utils_avl_tree_node_balance@@Base+0xb4>
   136a0:	ldr	r0, [r4, #8]
   136a4:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   136a8:	str	r0, [r4, #8]
   136ac:	ldr	r5, [r4, #16]
   136b0:	cmp	r5, #0
   136b4:	beq	13708 <mycore_utils_avl_tree_node_balance@@Base+0x110>
   136b8:	ldr	r3, [r5, #12]
   136bc:	mov	r0, r4
   136c0:	cmp	r4, r3
   136c4:	beq	136e0 <mycore_utils_avl_tree_node_balance@@Base+0xe8>
   136c8:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   136cc:	str	r0, [r5, #8]
   136d0:	pop	{r4, r5, r6, pc}
   136d4:	bl	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   136d8:	str	r0, [r5, #12]
   136dc:	pop	{r4, r5, r6, pc}
   136e0:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   136e4:	str	r0, [r5, #12]
   136e8:	pop	{r4, r5, r6, pc}
   136ec:	ldr	r0, [r4, #12]
   136f0:	bl	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>
   136f4:	str	r0, [r4, #12]
   136f8:	b	13650 <mycore_utils_avl_tree_node_balance@@Base+0x58>
   136fc:	mov	r0, r4
   13700:	pop	{r4, r5, r6, lr}
   13704:	b	10c10 <mycore_utils_avl_tree_node_rotate_left@plt>
   13708:	mov	r0, r4
   1370c:	pop	{r4, r5, r6, lr}
   13710:	b	fd4c <mycore_utils_avl_tree_node_rotate_right@plt>

00013714 <mycore_utils_avl_tree_add@@Base>:
   13714:	push	{r4, r5, r6, r7, r8, lr}
   13718:	mov	r7, r1
   1371c:	ldr	r4, [r1]
   13720:	mov	r5, r2
   13724:	cmp	r4, #0
   13728:	mov	r8, r3
   1372c:	beq	137b8 <mycore_utils_avl_tree_add@@Base+0xa4>
   13730:	mov	r1, #0
   13734:	ldr	r0, [r0]
   13738:	bl	10a60 <mcobject_malloc@plt>
   1373c:	mov	r6, r0
   13740:	bl	10fc4 <mycore_utils_avl_tree_node_clean@plt>
   13744:	b	13758 <mycore_utils_avl_tree_add@@Base+0x44>
   13748:	ldr	r1, [r4, #8]
   1374c:	cmp	r1, #0
   13750:	beq	137a4 <mycore_utils_avl_tree_add@@Base+0x90>
   13754:	mov	r4, r1
   13758:	ldr	r1, [r4, #4]
   1375c:	cmp	r5, r1
   13760:	beq	1379c <mycore_utils_avl_tree_add@@Base+0x88>
   13764:	bcc	13748 <mycore_utils_avl_tree_add@@Base+0x34>
   13768:	ldr	r1, [r4, #12]
   1376c:	cmp	r1, #0
   13770:	bne	13754 <mycore_utils_avl_tree_add@@Base+0x40>
   13774:	str	r6, [r4, #12]
   13778:	str	r4, [r6, #16]
   1377c:	str	r5, [r6, #4]
   13780:	str	r8, [r6]
   13784:	mov	r0, r6
   13788:	mov	r1, r7
   1378c:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   13790:	subs	r6, r0, #0
   13794:	bne	13784 <mycore_utils_avl_tree_add@@Base+0x70>
   13798:	pop	{r4, r5, r6, r7, r8, pc}
   1379c:	str	r8, [r4]
   137a0:	pop	{r4, r5, r6, r7, r8, pc}
   137a4:	str	r6, [r4, #8]
   137a8:	str	r4, [r6, #16]
   137ac:	str	r5, [r6, #4]
   137b0:	str	r8, [r6]
   137b4:	b	13784 <mycore_utils_avl_tree_add@@Base+0x70>
   137b8:	mov	r2, r3
   137bc:	mov	r1, r5
   137c0:	bl	10ed4 <mycore_utils_avl_tree_node_create_root@plt>
   137c4:	str	r0, [r7]
   137c8:	pop	{r4, r5, r6, r7, r8, pc}

000137cc <mycore_utils_avl_tree_find_min@@Base>:
   137cc:	cmp	r0, #0
   137d0:	bne	137dc <mycore_utils_avl_tree_find_min@@Base+0x10>
   137d4:	b	137ec <mycore_utils_avl_tree_find_min@@Base+0x20>
   137d8:	mov	r0, r3
   137dc:	ldr	r3, [r0, #12]
   137e0:	cmp	r3, #0
   137e4:	bne	137d8 <mycore_utils_avl_tree_find_min@@Base+0xc>
   137e8:	bx	lr
   137ec:	bx	lr

000137f0 <mycore_utils_avl_tree_rotate_for_delete@@Base>:
   137f0:	cmp	r1, #0
   137f4:	push	{r4, lr}
   137f8:	mov	r3, r0
   137fc:	mov	r4, r2
   13800:	beq	13888 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x98>
   13804:	ldr	r2, [r0, #8]
   13808:	cmp	r1, r2
   1380c:	beq	138ac <mycore_utils_avl_tree_rotate_for_delete@@Base+0xbc>
   13810:	ldr	ip, [r1, #16]
   13814:	mov	lr, #0
   13818:	ldr	r0, [r0, #16]
   1381c:	str	lr, [ip, #12]
   13820:	ldr	ip, [r3, #12]
   13824:	str	r2, [r1, #8]
   13828:	ldr	r2, [r3, #8]
   1382c:	str	ip, [r1, #12]
   13830:	cmp	r2, lr
   13834:	str	r0, [r1, #16]
   13838:	strne	r1, [r2, #16]
   1383c:	ldr	r2, [r3, #12]
   13840:	mov	r0, r1
   13844:	cmp	r2, #0
   13848:	strne	r1, [r2, #16]
   1384c:	ldr	r2, [r3, #16]
   13850:	cmp	r2, #0
   13854:	streq	r1, [r4]
   13858:	beq	1386c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x7c>
   1385c:	ldr	ip, [r2, #8]
   13860:	cmp	r3, ip
   13864:	streq	r1, [r2, #8]
   13868:	strne	r1, [r2, #12]
   1386c:	cmp	r0, #0
   13870:	beq	138d8 <mycore_utils_avl_tree_rotate_for_delete@@Base+0xe8>
   13874:	mov	r1, r4
   13878:	bl	10a18 <mycore_utils_avl_tree_node_balance@plt>
   1387c:	cmp	r0, #0
   13880:	bne	13874 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   13884:	pop	{r4, pc}
   13888:	ldr	r0, [r0, #16]
   1388c:	cmp	r0, #0
   13890:	beq	138dc <mycore_utils_avl_tree_rotate_for_delete@@Base+0xec>
   13894:	ldr	r2, [r0, #8]
   13898:	cmp	r3, r2
   1389c:	ldr	r3, [r3, #12]
   138a0:	streq	r3, [r0, #8]
   138a4:	strne	r3, [r0, #12]
   138a8:	b	13874 <mycore_utils_avl_tree_rotate_for_delete@@Base+0x84>
   138ac:	ldr	r2, [r0, #12]
   138b0:	ldr	ip, [r0, #16]
   138b4:	ldr	r0, [r1, #8]
   138b8:	str	r2, [r1, #12]
   138bc:	ldr	r2, [r3, #12]
   138c0:	cmp	r0, #0
   138c4:	moveq	r0, r1
   138c8:	cmp	r2, #0
   138cc:	str	ip, [r1, #16]
   138d0:	strne	r1, [r2, #16]
   138d4:	b	1384c <mycore_utils_avl_tree_rotate_for_delete@@Base+0x5c>
   138d8:	pop	{r4, pc}
   138dc:	ldr	r3, [r3, #12]
   138e0:	str	r3, [r2]
   138e4:	pop	{r4, pc}

000138e8 <mycore_utils_avl_tree_delete@@Base>:
   138e8:	push	{r4, r5, r6, lr}
   138ec:	ldr	r4, [r1]
   138f0:	cmp	r4, #0
   138f4:	beq	1392c <mycore_utils_avl_tree_delete@@Base+0x44>
   138f8:	ldr	r3, [r4, #4]
   138fc:	cmp	r2, r3
   13900:	bne	13914 <mycore_utils_avl_tree_delete@@Base+0x2c>
   13904:	b	13934 <mycore_utils_avl_tree_delete@@Base+0x4c>
   13908:	ldr	r3, [r4, #4]
   1390c:	cmp	r3, r2
   13910:	beq	13934 <mycore_utils_avl_tree_delete@@Base+0x4c>
   13914:	ldr	ip, [r4, #8]
   13918:	cmp	r2, r3
   1391c:	ldr	r4, [r4, #12]
   13920:	movcc	r4, ip
   13924:	cmp	r4, #0
   13928:	bne	13908 <mycore_utils_avl_tree_delete@@Base+0x20>
   1392c:	mov	r0, r4
   13930:	pop	{r4, r5, r6, pc}
   13934:	mov	r6, r0
   13938:	ldr	r0, [r4, #8]
   1393c:	mov	r5, r1
   13940:	bl	fd10 <mycore_utils_avl_tree_find_min@plt>
   13944:	mov	r2, r5
   13948:	mov	r1, r0
   1394c:	mov	r0, r4
   13950:	bl	10478 <mycore_utils_avl_tree_rotate_for_delete@plt>
   13954:	mov	r1, r4
   13958:	ldr	r4, [r4]
   1395c:	ldr	r0, [r6]
   13960:	bl	ff80 <mcobject_free@plt>
   13964:	mov	r0, r4
   13968:	pop	{r4, r5, r6, pc}

0001396c <mycore_utils_avl_tree_search_by_type@@Base>:
   1396c:	subs	r0, r1, #0
   13970:	bxeq	lr
   13974:	ldr	r3, [r0, #4]
   13978:	cmp	r2, r3
   1397c:	bne	13990 <mycore_utils_avl_tree_search_by_type@@Base+0x24>
   13980:	b	139ac <mycore_utils_avl_tree_search_by_type@@Base+0x40>
   13984:	ldr	r3, [r0, #4]
   13988:	cmp	r3, r2
   1398c:	bxeq	lr
   13990:	ldr	r1, [r0, #8]
   13994:	cmp	r2, r3
   13998:	ldr	r0, [r0, #12]
   1399c:	movcc	r0, r1
   139a0:	cmp	r0, #0
   139a4:	bne	13984 <mycore_utils_avl_tree_search_by_type@@Base+0x18>
   139a8:	bx	lr
   139ac:	bx	lr

000139b0 <mycore_utils_avl_tree_list_all_nodes@@Base>:
   139b0:	push	{r4, r5, r6, r7, r8, lr}
   139b4:	subs	r4, r1, #0
   139b8:	popeq	{r4, r5, r6, r7, r8, pc}
   139bc:	mov	r7, r0
   139c0:	mov	r6, r2
   139c4:	mov	r5, r3
   139c8:	mov	r0, r4
   139cc:	mov	r1, r5
   139d0:	blx	r6
   139d4:	ldr	r1, [r4, #8]
   139d8:	mov	r3, r5
   139dc:	mov	r2, r6
   139e0:	mov	r0, r7
   139e4:	bl	10274 <mycore_utils_avl_tree_list_all_nodes@plt>
   139e8:	ldr	r4, [r4, #12]
   139ec:	cmp	r4, #0
   139f0:	bne	139c8 <mycore_utils_avl_tree_list_all_nodes@@Base+0x18>
   139f4:	pop	{r4, r5, r6, r7, r8, pc}

000139f8 <mchar_async_create@@Base>:
   139f8:	mov	r1, #84	; 0x54
   139fc:	mov	r0, #1
   13a00:	b	ff14 <mycore_calloc@plt>

00013a04 <mchar_async_mem_malloc@@Base>:
   13a04:	push	{r4, r5, r6, lr}
   13a08:	subs	r4, r2, #0
   13a0c:	popeq	{r4, r5, r6, pc}
   13a10:	mov	r6, r0
   13a14:	ldr	r0, [r4]
   13a18:	mov	r5, r3
   13a1c:	cmp	r0, #0
   13a20:	beq	13a58 <mchar_async_mem_malloc@@Base+0x54>
   13a24:	ldr	r3, [r4, #8]
   13a28:	cmp	r3, r5
   13a2c:	bcc	13a3c <mchar_async_mem_malloc@@Base+0x38>
   13a30:	mov	r3, #0
   13a34:	str	r3, [r4, #4]
   13a38:	pop	{r4, r5, r6, pc}
   13a3c:	bl	10dcc <mycore_free@plt>
   13a40:	ldr	r0, [r6]
   13a44:	add	r0, r5, r0
   13a48:	str	r0, [r4, #8]
   13a4c:	bl	10c94 <mycore_malloc@plt>
   13a50:	str	r0, [r4]
   13a54:	b	13a30 <mchar_async_mem_malloc@@Base+0x2c>
   13a58:	ldr	r0, [r6]
   13a5c:	cmp	r3, r0
   13a60:	strls	r0, [r4, #8]
   13a64:	movhi	r0, r3
   13a68:	strhi	r3, [r4, #8]
   13a6c:	bl	10c94 <mycore_malloc@plt>
   13a70:	str	r0, [r4]
   13a74:	b	13a30 <mchar_async_mem_malloc@@Base+0x2c>

00013a78 <mchar_sync_chunk_find_by_size@@Base>:
   13a78:	ldr	r3, [r0]
   13a7c:	ldr	r0, [r3, #12]
   13a80:	cmp	r0, #0
   13a84:	bxeq	lr
   13a88:	ldr	r3, [r0, #8]
   13a8c:	cmp	r1, r3
   13a90:	bhi	13aa4 <mchar_sync_chunk_find_by_size@@Base+0x2c>
   13a94:	b	13ab4 <mchar_sync_chunk_find_by_size@@Base+0x3c>
   13a98:	ldr	r3, [r0, #8]
   13a9c:	cmp	r3, r1
   13aa0:	bxcs	lr
   13aa4:	ldr	r0, [r0, #12]
   13aa8:	cmp	r0, #0
   13aac:	bne	13a98 <mchar_sync_chunk_find_by_size@@Base+0x20>
   13ab0:	bx	lr
   13ab4:	bx	lr

00013ab8 <mchar_sync_chunk_insert_after@@Base>:
   13ab8:	ldr	r3, [r0, #12]
   13abc:	cmp	r3, r1
   13ac0:	bxeq	lr
   13ac4:	ldr	r2, [r1, #16]
   13ac8:	cmp	r2, #0
   13acc:	ldrne	r3, [r1, #12]
   13ad0:	strne	r3, [r2, #12]
   13ad4:	ldr	ip, [r1, #12]
   13ad8:	ldrne	r3, [r0, #12]
   13adc:	cmp	ip, #0
   13ae0:	strne	r2, [ip, #16]
   13ae4:	cmp	r3, #0
   13ae8:	strne	r1, [r3, #16]
   13aec:	str	r3, [r1, #12]
   13af0:	str	r0, [r1, #16]
   13af4:	str	r1, [r0, #12]
   13af8:	bx	lr

00013afc <mchar_async_crop_first_chars_without_cache@@Base>:
   13afc:	cmp	r0, #0
   13b00:	ldrne	r3, [r0, #-4]
   13b04:	addne	r0, r0, r1
   13b08:	subne	r1, r3, r1
   13b0c:	strne	r1, [r0, #-4]
   13b10:	bx	lr

00013b14 <mchar_async_get_size_by_data@@Base>:
   13b14:	cmp	r0, #0
   13b18:	ldrne	r0, [r0, #-4]
   13b1c:	bx	lr

00013b20 <mchar_async_cache_init@@Base>:
   13b20:	push	{r4, r5, r6, lr}
   13b24:	mov	r2, #1
   13b28:	mov	r5, #0
   13b2c:	mov	r3, #1024	; 0x400
   13b30:	str	r5, [r0, #16]
   13b34:	str	r5, [r0, #12]
   13b38:	mov	r4, r0
   13b3c:	str	r2, [r0, #8]
   13b40:	str	r3, [r0, #4]
   13b44:	mov	r0, #20480	; 0x5000
   13b48:	bl	10c94 <mycore_malloc@plt>
   13b4c:	cmp	r0, r5
   13b50:	str	r0, [r4]
   13b54:	moveq	r5, #2
   13b58:	beq	13b8c <mchar_async_cache_init@@Base+0x6c>
   13b5c:	ldr	r3, [r4, #4]
   13b60:	str	r5, [r0, #8]
   13b64:	str	r5, [r0, #12]
   13b68:	str	r5, [r0, #4]
   13b6c:	str	r5, [r0]
   13b70:	lsl	r0, r3, #2
   13b74:	str	r5, [r4, #24]
   13b78:	str	r3, [r4, #28]
   13b7c:	bl	10c94 <mycore_malloc@plt>
   13b80:	cmp	r0, r5
   13b84:	str	r0, [r4, #20]
   13b88:	beq	13b94 <mchar_async_cache_init@@Base+0x74>
   13b8c:	mov	r0, r5
   13b90:	pop	{r4, r5, r6, pc}
   13b94:	ldr	r0, [r4]
   13b98:	bl	10dcc <mycore_free@plt>
   13b9c:	mov	r5, #2
   13ba0:	str	r0, [r4]
   13ba4:	b	13b8c <mchar_async_cache_init@@Base+0x6c>

00013ba8 <mchar_async_cache_clean@@Base>:
   13ba8:	ldr	r2, [r0]
   13bac:	mov	r3, #0
   13bb0:	cmp	r2, r3
   13bb4:	mov	r1, #1
   13bb8:	str	r1, [r0, #8]
   13bbc:	str	r3, [r0, #16]
   13bc0:	str	r3, [r0, #12]
   13bc4:	str	r3, [r0, #24]
   13bc8:	strne	r3, [r2, #8]
   13bcc:	strne	r3, [r2, #12]
   13bd0:	strne	r3, [r2, #4]
   13bd4:	strne	r3, [r2]
   13bd8:	bx	lr

00013bdc <mchar_async_node_clean@@Base>:
   13bdc:	ldr	r3, [r0, #60]	; 0x3c
   13be0:	cmp	r3, r1
   13be4:	bxls	lr
   13be8:	add	r1, r1, r1, lsl #3
   13bec:	ldr	ip, [r0, #56]	; 0x38
   13bf0:	lsl	r1, r1, #2
   13bf4:	add	r0, ip, r1
   13bf8:	ldr	r3, [ip, r1]
   13bfc:	ldr	r2, [r3, #16]
   13c00:	cmp	r2, #0
   13c04:	bne	13c10 <mchar_async_node_clean@@Base+0x34>
   13c08:	b	13c30 <mchar_async_node_clean@@Base+0x54>
   13c0c:	mov	r2, r3
   13c10:	ldr	r3, [r2, #16]
   13c14:	cmp	r3, #0
   13c18:	bne	13c0c <mchar_async_node_clean@@Base+0x30>
   13c1c:	str	r2, [ip, r1]
   13c20:	mov	r3, #0
   13c24:	add	r0, r0, #4
   13c28:	str	r3, [r2, #4]
   13c2c:	b	10724 <mchar_async_cache_clean@plt>
   13c30:	mov	r2, r3
   13c34:	b	13c20 <mchar_async_node_clean@@Base+0x44>

00013c38 <mchar_async_cache_destroy@@Base>:
   13c38:	push	{r4, r5, r6, lr}
   13c3c:	subs	r4, r0, #0
   13c40:	beq	13c70 <mchar_async_cache_destroy@@Base+0x38>
   13c44:	ldr	r0, [r4]
   13c48:	mov	r5, r1
   13c4c:	cmp	r0, #0
   13c50:	beq	13c58 <mchar_async_cache_destroy@@Base+0x20>
   13c54:	bl	10dcc <mycore_free@plt>
   13c58:	ldr	r0, [r4, #20]
   13c5c:	cmp	r0, #0
   13c60:	beq	13c68 <mchar_async_cache_destroy@@Base+0x30>
   13c64:	bl	10dcc <mycore_free@plt>
   13c68:	cmp	r5, #0
   13c6c:	bne	13c78 <mchar_async_cache_destroy@@Base+0x40>
   13c70:	mov	r0, r4
   13c74:	pop	{r4, r5, r6, pc}
   13c78:	mov	r0, r4
   13c7c:	bl	10dcc <mycore_free@plt>
   13c80:	mov	r4, #0
   13c84:	b	13c70 <mchar_async_cache_destroy@@Base+0x38>

00013c88 <mchar_async_destroy@@Base>:
   13c88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c8c:	subs	r6, r0, #0
   13c90:	beq	13dc4 <mchar_async_destroy@@Base+0x13c>
   13c94:	ldr	r0, [r6, #56]	; 0x38
   13c98:	mov	r9, r1
   13c9c:	cmp	r0, #0
   13ca0:	beq	13cf0 <mchar_async_destroy@@Base+0x68>
   13ca4:	ldr	r3, [r6, #60]	; 0x3c
   13ca8:	cmp	r3, #0
   13cac:	beq	13ce4 <mchar_async_destroy@@Base+0x5c>
   13cb0:	mov	r4, #0
   13cb4:	mov	r5, r4
   13cb8:	mov	r7, r4
   13cbc:	add	r0, r0, r4
   13cc0:	add	r0, r0, #4
   13cc4:	mov	r1, r7
   13cc8:	bl	1088c <mchar_async_cache_destroy@plt>
   13ccc:	ldr	r3, [r6, #60]	; 0x3c
   13cd0:	add	r5, r5, #1
   13cd4:	cmp	r3, r5
   13cd8:	ldr	r0, [r6, #56]	; 0x38
   13cdc:	add	r4, r4, #36	; 0x24
   13ce0:	bhi	13cbc <mchar_async_destroy@@Base+0x34>
   13ce4:	bl	10dcc <mycore_free@plt>
   13ce8:	mov	r3, #0
   13cec:	str	r3, [r6, #56]	; 0x38
   13cf0:	ldr	r0, [r6, #68]	; 0x44
   13cf4:	cmp	r0, #0
   13cf8:	beq	13d00 <mchar_async_destroy@@Base+0x78>
   13cfc:	bl	10dcc <mycore_free@plt>
   13d00:	ldr	r0, [r6, #4]
   13d04:	cmp	r0, #0
   13d08:	beq	13d94 <mchar_async_destroy@@Base+0x10c>
   13d0c:	ldr	r3, [r6, #12]
   13d10:	cmp	r3, #0
   13d14:	beq	13d88 <mchar_async_destroy@@Base+0x100>
   13d18:	mov	r8, #0
   13d1c:	ldr	r2, [r0, r8, lsl #2]
   13d20:	lsl	r7, r8, #2
   13d24:	cmp	r2, #0
   13d28:	beq	13d7c <mchar_async_destroy@@Base+0xf4>
   13d2c:	ldr	r1, [r6, #16]
   13d30:	cmp	r1, #0
   13d34:	beq	13d6c <mchar_async_destroy@@Base+0xe4>
   13d38:	mov	r4, #0
   13d3c:	mov	r5, r4
   13d40:	ldr	r3, [r2, r4]
   13d44:	add	r5, r5, #1
   13d48:	subs	r0, r3, #0
   13d4c:	beq	13d60 <mchar_async_destroy@@Base+0xd8>
   13d50:	bl	10dcc <mycore_free@plt>
   13d54:	ldr	r3, [r6, #4]
   13d58:	ldr	r1, [r6, #16]
   13d5c:	ldr	r2, [r3, r7]
   13d60:	cmp	r1, r5
   13d64:	add	r4, r4, #20
   13d68:	bhi	13d40 <mchar_async_destroy@@Base+0xb8>
   13d6c:	mov	r0, r2
   13d70:	bl	10dcc <mycore_free@plt>
   13d74:	ldr	r0, [r6, #4]
   13d78:	ldr	r3, [r6, #12]
   13d7c:	add	r8, r8, #1
   13d80:	cmp	r3, r8
   13d84:	bhi	13d1c <mchar_async_destroy@@Base+0x94>
   13d88:	bl	10dcc <mycore_free@plt>
   13d8c:	mov	r3, #0
   13d90:	str	r3, [r6, #4]
   13d94:	mov	r1, #0
   13d98:	add	r0, r6, #24
   13d9c:	bl	1088c <mchar_async_cache_destroy@plt>
   13da0:	mov	r1, #1
   13da4:	ldr	r0, [r6, #80]	; 0x50
   13da8:	bl	101b4 <mcsync_destroy@plt>
   13dac:	mov	r2, #84	; 0x54
   13db0:	mov	r1, #0
   13db4:	mov	r0, r6
   13db8:	bl	108b0 <memset@plt>
   13dbc:	cmp	r9, #0
   13dc0:	bne	13dcc <mchar_async_destroy@@Base+0x144>
   13dc4:	mov	r0, r6
   13dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13dcc:	mov	r0, r6
   13dd0:	bl	10dcc <mycore_free@plt>
   13dd4:	mov	r6, #0
   13dd8:	b	13dc4 <mchar_async_destroy@@Base+0x13c>

00013ddc <mchar_async_cache_malloc@@Base>:
   13ddc:	ldr	r3, [r0, #24]
   13de0:	cmp	r3, #0
   13de4:	bne	13e04 <mchar_async_cache_malloc@@Base+0x28>
   13de8:	ldmib	r0, {r1, r3}
   13dec:	add	r3, r3, #1
   13df0:	cmp	r3, r1
   13df4:	str	r3, [r0, #8]
   13df8:	bcs	13e18 <mchar_async_cache_malloc@@Base+0x3c>
   13dfc:	sub	r0, r3, #1
   13e00:	bx	lr
   13e04:	ldr	r2, [r0, #20]
   13e08:	sub	r3, r3, #1
   13e0c:	str	r3, [r0, #24]
   13e10:	ldr	r0, [r2, r3, lsl #2]
   13e14:	bx	lr
   13e18:	lsl	r3, r1, #1
   13e1c:	add	r1, r3, r1, lsl #3
   13e20:	push	{r4, lr}
   13e24:	lsl	r1, r1, #2
   13e28:	mov	r4, r0
   13e2c:	str	r3, [r0, #4]
   13e30:	ldr	r0, [r0]
   13e34:	bl	fbd8 <mycore_realloc@plt>
   13e38:	ldr	r3, [r4, #8]
   13e3c:	cmp	r0, #0
   13e40:	strne	r0, [r4]
   13e44:	sub	r0, r3, #1
   13e48:	pop	{r4, pc}

00013e4c <mchar_async_cache_delete@@Base>:
   13e4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13e50:	ldr	r4, [r0, #12]
   13e54:	ldr	lr, [r0]
   13e58:	cmp	r4, #0
   13e5c:	beq	13ea0 <mchar_async_cache_delete@@Base+0x54>
   13e60:	lsl	r3, r4, #2
   13e64:	add	r2, r3, r4
   13e68:	add	r2, lr, r2, lsl #2
   13e6c:	ldr	ip, [r2, #4]
   13e70:	cmp	r1, ip
   13e74:	bhi	13e8c <mchar_async_cache_delete@@Base+0x40>
   13e78:	b	13eb0 <mchar_async_cache_delete@@Base+0x64>
   13e7c:	add	r2, lr, r2, lsl #2
   13e80:	ldr	ip, [r2, #4]
   13e84:	cmp	ip, r1
   13e88:	bcs	13eb0 <mchar_async_cache_delete@@Base+0x64>
   13e8c:	ldr	r4, [r2, #12]
   13e90:	cmp	r4, #0
   13e94:	lsl	r3, r4, #2
   13e98:	add	r2, r3, r4
   13e9c:	bne	13e7c <mchar_async_cache_delete@@Base+0x30>
   13ea0:	mov	r4, #0
   13ea4:	mov	r0, r4
   13ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13eac:	mov	r4, r5
   13eb0:	add	r3, r3, r4
   13eb4:	add	r6, lr, r3, lsl #2
   13eb8:	ldr	r5, [r6, #12]
   13ebc:	lsl	r3, r5, #2
   13ec0:	add	r2, r3, r5
   13ec4:	add	r2, lr, r2, lsl #2
   13ec8:	ldr	ip, [r2, #4]
   13ecc:	cmp	r1, ip
   13ed0:	beq	13eac <mchar_async_cache_delete@@Base+0x60>
   13ed4:	ldr	r1, [r6, #16]
   13ed8:	cmp	r1, #0
   13edc:	beq	13f90 <mchar_async_cache_delete@@Base+0x144>
   13ee0:	add	r7, r1, r1, lsl #2
   13ee4:	add	r7, lr, r7, lsl #2
   13ee8:	ldr	r3, [r7, #8]
   13eec:	cmp	r4, r3
   13ef0:	beq	14000 <mchar_async_cache_delete@@Base+0x1b4>
   13ef4:	ldr	r8, [r6, #8]
   13ef8:	cmp	r8, #0
   13efc:	beq	1407c <mchar_async_cache_delete@@Base+0x230>
   13f00:	add	r9, r8, r8, lsl #2
   13f04:	cmp	r5, #0
   13f08:	add	r9, lr, r9, lsl #2
   13f0c:	beq	13f4c <mchar_async_cache_delete@@Base+0x100>
   13f10:	ldr	r2, [r9, #12]
   13f14:	b	13f1c <mchar_async_cache_delete@@Base+0xd0>
   13f18:	mov	r2, ip
   13f1c:	add	r3, r2, r2, lsl #2
   13f20:	add	r3, lr, r3, lsl #2
   13f24:	ldr	ip, [r3, #12]
   13f28:	cmp	ip, #0
   13f2c:	bne	13f18 <mchar_async_cache_delete@@Base+0xcc>
   13f30:	cmp	r2, #0
   13f34:	strne	r5, [r3, #12]
   13f38:	ldrne	r3, [r6, #12]
   13f3c:	streq	r5, [r9, #12]
   13f40:	addne	r3, r3, r3, lsl #2
   13f44:	addne	r3, lr, r3, lsl #2
   13f48:	strne	r2, [r3, #16]
   13f4c:	str	r8, [r7, #12]
   13f50:	str	r1, [r9, #16]
   13f54:	mov	r5, r0
   13f58:	ldr	r0, [r0, #20]
   13f5c:	ldr	r3, [r5, #24]
   13f60:	str	r4, [r0, r3, lsl #2]
   13f64:	ldr	r3, [r5, #24]
   13f68:	ldr	r2, [r5, #28]
   13f6c:	add	r3, r3, #1
   13f70:	cmp	r3, r2
   13f74:	str	r3, [r5, #24]
   13f78:	bcs	1405c <mchar_async_cache_delete@@Base+0x210>
   13f7c:	ldr	r3, [r5, #16]
   13f80:	mov	r0, r4
   13f84:	sub	r3, r3, #1
   13f88:	str	r3, [r5, #16]
   13f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13f90:	ldr	ip, [r6, #8]
   13f94:	cmp	ip, #0
   13f98:	streq	r5, [r0, #12]
   13f9c:	streq	ip, [r2, #16]
   13fa0:	beq	13f54 <mchar_async_cache_delete@@Base+0x108>
   13fa4:	add	r7, ip, ip, lsl #2
   13fa8:	cmp	r5, #0
   13fac:	add	r7, lr, r7, lsl #2
   13fb0:	beq	13ff0 <mchar_async_cache_delete@@Base+0x1a4>
   13fb4:	ldr	r2, [r7, #12]
   13fb8:	b	13fc0 <mchar_async_cache_delete@@Base+0x174>
   13fbc:	mov	r2, r1
   13fc0:	add	r3, r2, r2, lsl #2
   13fc4:	add	r3, lr, r3, lsl #2
   13fc8:	ldr	r1, [r3, #12]
   13fcc:	cmp	r1, #0
   13fd0:	bne	13fbc <mchar_async_cache_delete@@Base+0x170>
   13fd4:	cmp	r2, #0
   13fd8:	strne	r5, [r3, #12]
   13fdc:	ldrne	r3, [r6, #12]
   13fe0:	streq	r5, [r7, #12]
   13fe4:	addne	r3, r3, r3, lsl #2
   13fe8:	addne	r3, lr, r3, lsl #2
   13fec:	strne	r2, [r3, #16]
   13ff0:	mov	r3, #0
   13ff4:	str	ip, [r0, #12]
   13ff8:	str	r3, [r7, #16]
   13ffc:	b	13f54 <mchar_async_cache_delete@@Base+0x108>
   14000:	cmp	r5, #0
   14004:	beq	14094 <mchar_async_cache_delete@@Base+0x248>
   14008:	ldr	r9, [r6, #8]
   1400c:	cmp	r9, #0
   14010:	beq	14050 <mchar_async_cache_delete@@Base+0x204>
   14014:	ldr	ip, [r2, #8]
   14018:	b	14020 <mchar_async_cache_delete@@Base+0x1d4>
   1401c:	mov	ip, r8
   14020:	add	r3, ip, ip, lsl #2
   14024:	add	r3, lr, r3, lsl #2
   14028:	ldr	r8, [r3, #8]
   1402c:	cmp	r8, #0
   14030:	bne	1401c <mchar_async_cache_delete@@Base+0x1d0>
   14034:	cmp	ip, #0
   14038:	strne	r9, [r3, #8]
   1403c:	ldrne	r3, [r6, #8]
   14040:	streq	r9, [r2, #8]
   14044:	addne	r3, r3, r3, lsl #2
   14048:	addne	r3, lr, r3, lsl #2
   1404c:	strne	ip, [r3, #16]
   14050:	str	r5, [r7, #8]
   14054:	str	r1, [r2, #16]
   14058:	b	13f54 <mchar_async_cache_delete@@Base+0x108>
   1405c:	lsl	r1, r2, #3
   14060:	lsl	r6, r2, #1
   14064:	bl	fbd8 <mycore_realloc@plt>
   14068:	cmp	r0, #0
   1406c:	beq	13ea0 <mchar_async_cache_delete@@Base+0x54>
   14070:	str	r0, [r5, #20]
   14074:	str	r6, [r5, #28]
   14078:	b	13f7c <mchar_async_cache_delete@@Base+0x130>
   1407c:	str	r5, [r7, #12]
   14080:	ldr	r3, [r6, #12]
   14084:	add	r3, r3, r3, lsl #2
   14088:	add	r3, lr, r3, lsl #2
   1408c:	str	r1, [r3, #16]
   14090:	b	13f54 <mchar_async_cache_delete@@Base+0x108>
   14094:	ldr	r3, [r6, #8]
   14098:	str	r3, [r7, #8]
   1409c:	ldr	r3, [r6, #8]
   140a0:	add	r3, r3, r3, lsl #2
   140a4:	add	r3, lr, r3, lsl #2
   140a8:	str	r1, [r3, #16]
   140ac:	b	13f54 <mchar_async_cache_delete@@Base+0x108>

000140b0 <mchar_async_chunk_malloc_without_lock@@Base>:
   140b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140b4:	mov	r4, r0
   140b8:	ldr	r5, [r0, #40]	; 0x28
   140bc:	mov	r8, r2
   140c0:	cmp	r5, #0
   140c4:	bne	14144 <mchar_async_chunk_malloc_without_lock@@Base+0x94>
   140c8:	ldr	r2, [r0, #20]
   140cc:	ldr	r3, [r0, #16]
   140d0:	mov	r7, r1
   140d4:	cmp	r2, r3
   140d8:	bcc	1416c <mchar_async_chunk_malloc_without_lock@@Base+0xbc>
   140dc:	ldr	r9, [r0, #12]
   140e0:	ldr	r1, [r0, #8]
   140e4:	add	r3, r9, #1
   140e8:	cmp	r3, r1
   140ec:	str	r3, [r0, #12]
   140f0:	bcs	14180 <mchar_async_chunk_malloc_without_lock@@Base+0xd0>
   140f4:	ldr	r6, [r0, #4]
   140f8:	ldr	r3, [r6, r9, lsl #2]
   140fc:	cmp	r3, #0
   14100:	beq	141c8 <mchar_async_chunk_malloc_without_lock@@Base+0x118>
   14104:	mov	r2, #1
   14108:	ldr	r0, [r4, #12]
   1410c:	mov	r1, r7
   14110:	sub	r0, r0, #-1073741823	; 0xc0000001
   14114:	mov	r3, r8
   14118:	ldr	r7, [r6, r0, lsl #2]
   1411c:	str	r2, [r4, #20]
   14120:	add	r6, r7, r5
   14124:	mov	r0, r4
   14128:	mov	r2, r6
   1412c:	bl	11060 <mchar_async_mem_malloc@plt>
   14130:	ldr	r3, [r7, r5]
   14134:	cmp	r3, #0
   14138:	beq	141c0 <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   1413c:	mov	r0, r6
   14140:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14144:	mov	r1, r2
   14148:	add	r0, r0, #24
   1414c:	bl	10f64 <mchar_async_cache_delete@plt>
   14150:	cmp	r0, #0
   14154:	beq	141c0 <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   14158:	ldr	r3, [r4, #24]
   1415c:	add	r0, r0, r0, lsl #2
   14160:	ldr	r6, [r3, r0, lsl #2]
   14164:	mov	r0, r6
   14168:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1416c:	add	r5, r2, r2, lsl #2
   14170:	ldr	r6, [r0, #4]
   14174:	add	r2, r2, #1
   14178:	lsl	r5, r5, #2
   1417c:	b	14108 <mchar_async_chunk_malloc_without_lock@@Base+0x58>
   14180:	lsl	r3, r1, #1
   14184:	str	r3, [r0, #8]
   14188:	lsl	r1, r1, #3
   1418c:	ldr	r0, [r0, #4]
   14190:	bl	fbd8 <mycore_realloc@plt>
   14194:	subs	r6, r0, #0
   14198:	beq	141c0 <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   1419c:	ldr	r0, [r4, #12]
   141a0:	ldr	r2, [r4, #8]
   141a4:	mov	r1, r5
   141a8:	sub	r2, r2, r0
   141ac:	add	r0, r6, r0, lsl #2
   141b0:	lsl	r2, r2, #2
   141b4:	bl	108b0 <memset@plt>
   141b8:	str	r6, [r4, #4]
   141bc:	b	140f8 <mchar_async_chunk_malloc_without_lock@@Base+0x48>
   141c0:	mov	r6, #0
   141c4:	b	1413c <mchar_async_chunk_malloc_without_lock@@Base+0x8c>
   141c8:	mov	r1, #20
   141cc:	ldr	r0, [r4, #16]
   141d0:	bl	ff14 <mycore_calloc@plt>
   141d4:	cmp	r0, #0
   141d8:	beq	141c0 <mchar_async_chunk_malloc_without_lock@@Base+0x110>
   141dc:	ldr	r6, [r4, #4]
   141e0:	str	r0, [r6, r9, lsl #2]
   141e4:	b	14104 <mchar_async_chunk_malloc_without_lock@@Base+0x54>

000141e8 <mchar_async_chunk_malloc@@Base>:
   141e8:	push	{r4, r5, r6, lr}
   141ec:	mov	r4, r0
   141f0:	mov	r5, r1
   141f4:	mov	r6, r2
   141f8:	ldr	r0, [r0, #80]	; 0x50
   141fc:	bl	10850 <mcsync_lock@plt>
   14200:	mov	r1, r5
   14204:	mov	r2, r6
   14208:	mov	r0, r4
   1420c:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   14210:	mov	r5, r0
   14214:	ldr	r0, [r4, #80]	; 0x50
   14218:	bl	10ebc <mcsync_unlock@plt>
   1421c:	mov	r0, r5
   14220:	pop	{r4, r5, r6, pc}

00014224 <mchar_async_clean@@Base>:
   14224:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14228:	mov	r3, #1
   1422c:	mov	r4, #0
   14230:	mov	r5, r0
   14234:	str	r3, [r0, #12]
   14238:	str	r4, [r0, #20]
   1423c:	add	r0, r0, #24
   14240:	bl	10724 <mchar_async_cache_clean@plt>
   14244:	ldr	r3, [r5, #60]	; 0x3c
   14248:	cmp	r3, r4
   1424c:	movne	r6, r4
   14250:	movne	r9, r4
   14254:	bne	14270 <mchar_async_clean@@Base+0x4c>
   14258:	b	142a8 <mchar_async_clean@@Base+0x84>
   1425c:	ldr	r3, [r5, #60]	; 0x3c
   14260:	add	r4, r4, #36	; 0x24
   14264:	cmp	r3, r6
   14268:	str	r9, [r0, #16]
   1426c:	bls	142a8 <mchar_async_clean@@Base+0x84>
   14270:	ldr	r7, [r5, #56]	; 0x38
   14274:	add	r6, r6, #1
   14278:	add	r8, r7, r4
   1427c:	add	r0, r8, #4
   14280:	bl	10724 <mchar_async_cache_clean@plt>
   14284:	mov	r1, r8
   14288:	ldr	r2, [r5]
   1428c:	mov	r0, r5
   14290:	bl	109d0 <mchar_async_chunk_malloc@plt>
   14294:	cmp	r0, #0
   14298:	str	r0, [r7, r4]
   1429c:	bne	1425c <mchar_async_clean@@Base+0x38>
   142a0:	mov	r0, #2
   142a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   142a8:	mov	r0, #0
   142ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000142b0 <mchar_async_init@@Base>:
   142b0:	push	{r4, r5, r6, lr}
   142b4:	cmp	r2, #4096	; 0x1000
   142b8:	mov	r4, r0
   142bc:	movcc	r2, #4096	; 0x1000
   142c0:	mov	r0, #1024	; 0x400
   142c4:	str	r1, [r4, #16]
   142c8:	str	r2, [r4]
   142cc:	str	r0, [r4, #8]
   142d0:	mov	r1, #4
   142d4:	bl	ff14 <mycore_calloc@plt>
   142d8:	cmp	r0, #0
   142dc:	str	r0, [r4, #4]
   142e0:	beq	14378 <mchar_async_init@@Base+0xc8>
   142e4:	mov	r5, r0
   142e8:	mov	r1, #20
   142ec:	ldr	r0, [r4, #16]
   142f0:	bl	ff14 <mycore_calloc@plt>
   142f4:	ldr	r3, [r4, #4]
   142f8:	str	r0, [r5]
   142fc:	ldr	r2, [r3]
   14300:	cmp	r2, #0
   14304:	beq	14384 <mchar_async_init@@Base+0xd4>
   14308:	add	r0, r4, #24
   1430c:	bl	10c34 <mchar_async_cache_init@plt>
   14310:	subs	r5, r0, #0
   14314:	bne	1439c <mchar_async_init@@Base+0xec>
   14318:	mov	r0, #64	; 0x40
   1431c:	str	r5, [r4, #60]	; 0x3c
   14320:	str	r0, [r4, #64]	; 0x40
   14324:	mov	r1, #36	; 0x24
   14328:	bl	ff14 <mycore_calloc@plt>
   1432c:	cmp	r0, #0
   14330:	str	r0, [r4, #56]	; 0x38
   14334:	beq	1437c <mchar_async_init@@Base+0xcc>
   14338:	ldr	r0, [r4, #64]	; 0x40
   1433c:	str	r5, [r4, #72]	; 0x48
   14340:	str	r0, [r4, #76]	; 0x4c
   14344:	lsl	r0, r0, #2
   14348:	bl	10c94 <mycore_malloc@plt>
   1434c:	cmp	r0, #0
   14350:	str	r0, [r4, #68]	; 0x44
   14354:	beq	1437c <mchar_async_init@@Base+0xcc>
   14358:	mov	r0, r4
   1435c:	bl	10bc8 <mchar_async_clean@plt>
   14360:	bl	fd94 <mcsync_create@plt>
   14364:	cmp	r0, #0
   14368:	str	r0, [r4, #80]	; 0x50
   1436c:	beq	14378 <mchar_async_init@@Base+0xc8>
   14370:	pop	{r4, r5, r6, lr}
   14374:	b	10868 <mcsync_init@plt>
   14378:	mov	r5, #2
   1437c:	mov	r0, r5
   14380:	pop	{r4, r5, r6, pc}
   14384:	mov	r0, r3
   14388:	bl	10dcc <mycore_free@plt>
   1438c:	mov	r5, #2
   14390:	str	r0, [r4, #4]
   14394:	mov	r0, r5
   14398:	pop	{r4, r5, r6, pc}
   1439c:	ldr	r3, [r4, #4]
   143a0:	ldr	r0, [r3]
   143a4:	bl	10dcc <mycore_free@plt>
   143a8:	ldr	r0, [r4, #4]
   143ac:	bl	10dcc <mycore_free@plt>
   143b0:	str	r0, [r4, #4]
   143b4:	mov	r0, r5
   143b8:	pop	{r4, r5, r6, pc}

000143bc <mchar_async_node_add@@Base>:
   143bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143c0:	mov	r4, r0
   143c4:	ldr	r0, [r0, #80]	; 0x50
   143c8:	mov	r6, r1
   143cc:	bl	10850 <mcsync_lock@plt>
   143d0:	cmp	r0, #0
   143d4:	beq	143f0 <mchar_async_node_add@@Base+0x34>
   143d8:	cmp	r6, #0
   143dc:	mov	r5, #0
   143e0:	movne	r3, #96	; 0x60
   143e4:	strne	r3, [r6]
   143e8:	mov	r0, r5
   143ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   143f0:	ldr	r5, [r4, #72]	; 0x48
   143f4:	cmp	r5, #0
   143f8:	beq	1444c <mchar_async_node_add@@Base+0x90>
   143fc:	ldr	r3, [r4, #68]	; 0x44
   14400:	sub	r5, r5, #1
   14404:	str	r5, [r4, #72]	; 0x48
   14408:	ldr	r7, [r3, r5, lsl #2]
   1440c:	add	r5, r7, r7, lsl #3
   14410:	ldr	r8, [r4, #56]	; 0x38
   14414:	lsl	r5, r5, #2
   14418:	add	r9, r8, r5
   1441c:	add	r0, r9, #4
   14420:	bl	10c34 <mchar_async_cache_init@plt>
   14424:	subs	sl, r0, #0
   14428:	beq	14484 <mchar_async_node_add@@Base+0xc8>
   1442c:	cmp	r6, #0
   14430:	movne	r3, #2
   14434:	strne	r3, [r6]
   14438:	ldr	r0, [r4, #80]	; 0x50
   1443c:	mov	r5, #0
   14440:	bl	10ebc <mcsync_unlock@plt>
   14444:	mov	r0, r5
   14448:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1444c:	ldr	r7, [r4, #60]	; 0x3c
   14450:	ldr	r3, [r4, #64]	; 0x40
   14454:	cmp	r7, r3
   14458:	bcc	14478 <mchar_async_node_add@@Base+0xbc>
   1445c:	cmp	r6, #0
   14460:	movne	r3, #98	; 0x62
   14464:	strne	r3, [r6]
   14468:	ldr	r0, [r4, #80]	; 0x50
   1446c:	bl	10ebc <mcsync_unlock@plt>
   14470:	mov	r0, r5
   14474:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14478:	add	r3, r7, #1
   1447c:	str	r3, [r4, #60]	; 0x3c
   14480:	b	1440c <mchar_async_node_add@@Base+0x50>
   14484:	mov	r1, r9
   14488:	ldr	r2, [r4]
   1448c:	mov	r0, r4
   14490:	bl	10ba4 <mchar_async_chunk_malloc_without_lock@plt>
   14494:	cmp	r0, #0
   14498:	str	r0, [r8, r5]
   1449c:	beq	1442c <mchar_async_node_add@@Base+0x70>
   144a0:	str	sl, [r0, #12]
   144a4:	str	sl, [r0, #16]
   144a8:	ldr	r0, [r4, #80]	; 0x50
   144ac:	bl	10ebc <mcsync_unlock@plt>
   144b0:	cmp	r6, #0
   144b4:	strne	sl, [r6]
   144b8:	mov	r5, r7
   144bc:	b	143e8 <mchar_async_node_add@@Base+0x2c>

000144c0 <mchar_async_cache_add@@Base>:
   144c0:	push	{r4, r5, r6, r7, r8, lr}
   144c4:	mov	r6, r0
   144c8:	ldr	r3, [r0, #16]
   144cc:	ldr	r4, [r0, #12]
   144d0:	add	r3, r3, #1
   144d4:	cmp	r4, #0
   144d8:	mov	r7, r1
   144dc:	mov	r5, r2
   144e0:	str	r3, [r0, #16]
   144e4:	beq	1455c <mchar_async_cache_add@@Base+0x9c>
   144e8:	bl	fec0 <mchar_async_cache_malloc@plt>
   144ec:	ldr	r2, [r6]
   144f0:	b	14508 <mchar_async_cache_add@@Base+0x48>
   144f4:	bcc	1458c <mchar_async_cache_add@@Base+0xcc>
   144f8:	ldr	ip, [r3, #12]
   144fc:	cmp	ip, #0
   14500:	beq	145d8 <mchar_async_cache_add@@Base+0x118>
   14504:	mov	r4, ip
   14508:	add	r3, r4, r4, lsl #2
   1450c:	add	r3, r2, r3, lsl #2
   14510:	ldr	ip, [r3, #4]
   14514:	cmp	r5, ip
   14518:	bne	144f4 <mchar_async_cache_add@@Base+0x34>
   1451c:	ldr	ip, [r3, #12]
   14520:	add	r1, r0, r0, lsl #2
   14524:	cmp	ip, #0
   14528:	add	r1, r2, r1, lsl #2
   1452c:	str	ip, [r1, #12]
   14530:	ldrne	ip, [r3, #12]
   14534:	addne	ip, ip, ip, lsl #2
   14538:	addne	r2, r2, ip, lsl #2
   1453c:	strne	r0, [r2, #16]
   14540:	mov	r2, #0
   14544:	str	r0, [r3, #12]
   14548:	str	r4, [r1, #16]
   1454c:	str	r5, [r1, #4]
   14550:	str	r7, [r1]
   14554:	str	r2, [r1, #8]
   14558:	pop	{r4, r5, r6, r7, r8, pc}
   1455c:	ldr	r8, [r0]
   14560:	bl	fec0 <mchar_async_cache_malloc@plt>
   14564:	str	r0, [r6, #12]
   14568:	add	r0, r0, r0, lsl #2
   1456c:	lsl	r0, r0, #2
   14570:	add	r3, r8, r0
   14574:	str	r4, [r3, #16]
   14578:	str	r4, [r3, #8]
   1457c:	str	r4, [r3, #12]
   14580:	str	r5, [r3, #4]
   14584:	str	r7, [r8, r0]
   14588:	pop	{r4, r5, r6, r7, r8, pc}
   1458c:	ldr	ip, [r3, #16]
   14590:	cmp	ip, #0
   14594:	beq	14600 <mchar_async_cache_add@@Base+0x140>
   14598:	add	r1, ip, ip, lsl #2
   1459c:	add	r1, r2, r1, lsl #2
   145a0:	ldr	lr, [r1, #8]
   145a4:	cmp	r4, lr
   145a8:	streq	r0, [r1, #8]
   145ac:	strne	r0, [r1, #12]
   145b0:	add	r1, r0, r0, lsl #2
   145b4:	add	r2, r2, r1, lsl #2
   145b8:	str	ip, [r2, #16]
   145bc:	mov	r1, #0
   145c0:	str	r0, [r3, #16]
   145c4:	str	r4, [r2, #12]
   145c8:	str	r5, [r2, #4]
   145cc:	str	r7, [r2]
   145d0:	str	r1, [r2, #8]
   145d4:	pop	{r4, r5, r6, r7, r8, pc}
   145d8:	add	r1, r0, r0, lsl #2
   145dc:	str	r0, [r3, #12]
   145e0:	lsl	r3, r1, #2
   145e4:	add	r1, r2, r3
   145e8:	str	ip, [r1, #12]
   145ec:	str	ip, [r1, #8]
   145f0:	str	r4, [r1, #16]
   145f4:	str	r5, [r1, #4]
   145f8:	str	r7, [r2, r3]
   145fc:	pop	{r4, r5, r6, r7, r8, pc}
   14600:	add	r1, r0, r0, lsl #2
   14604:	str	r0, [r6, #12]
   14608:	add	r2, r2, r1, lsl #2
   1460c:	str	ip, [r2, #16]
   14610:	b	145bc <mchar_async_cache_add@@Base+0xfc>

00014614 <mchar_async_node_delete@@Base>:
   14614:	push	{r4, r5, r6, r7, r8, lr}
   14618:	mov	r5, r0
   1461c:	ldr	r0, [r0, #80]	; 0x50
   14620:	mov	r7, r1
   14624:	bl	10850 <mcsync_lock@plt>
   14628:	ldr	r3, [r5, #60]	; 0x3c
   1462c:	cmp	r3, r7
   14630:	bls	14700 <mchar_async_node_delete@@Base+0xec>
   14634:	add	r3, r7, r7, lsl #3
   14638:	ldr	r2, [r5, #56]	; 0x38
   1463c:	lsl	r3, r3, #2
   14640:	add	r8, r2, r3
   14644:	ldr	r4, [r2, r3]
   14648:	b	14650 <mchar_async_node_delete@@Base+0x3c>
   1464c:	mov	r4, r3
   14650:	ldr	r3, [r4, #12]
   14654:	cmp	r3, #0
   14658:	bne	1464c <mchar_async_node_delete@@Base+0x38>
   1465c:	add	r6, r5, #24
   14660:	ldr	r2, [r4, #8]
   14664:	mov	r1, r4
   14668:	mov	r0, r6
   1466c:	bl	10c7c <mchar_async_cache_add@plt>
   14670:	ldr	r4, [r4, #16]
   14674:	cmp	r4, #0
   14678:	bne	14660 <mchar_async_node_delete@@Base+0x4c>
   1467c:	ldr	r3, [r8, #4]
   14680:	cmp	r3, #0
   14684:	beq	14694 <mchar_async_node_delete@@Base+0x80>
   14688:	mov	r1, r4
   1468c:	add	r0, r8, #4
   14690:	bl	1088c <mchar_async_cache_destroy@plt>
   14694:	mov	r2, #36	; 0x24
   14698:	mov	r0, r8
   1469c:	mov	r1, #0
   146a0:	bl	108b0 <memset@plt>
   146a4:	ldr	r3, [r5, #72]	; 0x48
   146a8:	ldr	r2, [r5, #76]	; 0x4c
   146ac:	cmp	r3, r2
   146b0:	bcs	146d4 <mchar_async_node_delete@@Base+0xc0>
   146b4:	ldr	r0, [r5, #68]	; 0x44
   146b8:	str	r7, [r0, r3, lsl #2]
   146bc:	ldr	r3, [r5, #72]	; 0x48
   146c0:	ldr	r0, [r5, #80]	; 0x50
   146c4:	add	r3, r3, #1
   146c8:	str	r3, [r5, #72]	; 0x48
   146cc:	pop	{r4, r5, r6, r7, r8, lr}
   146d0:	b	10ebc <mcsync_unlock@plt>
   146d4:	lsl	r1, r2, #2
   146d8:	ldr	r0, [r5, #68]	; 0x44
   146dc:	lsl	r4, r2, #1
   146e0:	bl	fbd8 <mycore_realloc@plt>
   146e4:	cmp	r0, #0
   146e8:	strne	r0, [r5, #68]	; 0x44
   146ec:	ldreq	r0, [r5, #68]	; 0x44
   146f0:	ldreq	r3, [r5, #72]	; 0x48
   146f4:	ldrne	r3, [r5, #72]	; 0x48
   146f8:	strne	r4, [r5, #76]	; 0x4c
   146fc:	b	146b8 <mchar_async_node_delete@@Base+0xa4>
   14700:	ldr	r0, [r5, #80]	; 0x50
   14704:	pop	{r4, r5, r6, r7, r8, lr}
   14708:	b	10ebc <mcsync_unlock@plt>

0001470c <mchar_async_malloc@@Base>:
   1470c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14710:	subs	r6, r2, #0
   14714:	beq	14804 <mchar_async_malloc@@Base+0xf8>
   14718:	add	r1, r1, r1, lsl #3
   1471c:	ldr	r8, [r0, #56]	; 0x38
   14720:	lsl	r4, r1, #2
   14724:	add	sl, r8, r4
   14728:	mov	r7, r0
   1472c:	ldr	r3, [sl, #20]
   14730:	ldr	r5, [r8, r4]
   14734:	cmp	r3, #0
   14738:	bne	147b0 <mchar_async_malloc@@Base+0xa4>
   1473c:	ldr	r3, [r5, #4]
   14740:	add	r9, r6, #4
   14744:	ldr	r2, [r5, #8]
   14748:	add	r1, r3, r9
   1474c:	cmp	r1, r2
   14750:	bls	14790 <mchar_async_malloc@@Base+0x84>
   14754:	add	r1, r3, #4
   14758:	cmp	r2, r1
   1475c:	bhi	147d4 <mchar_async_malloc@@Base+0xc8>
   14760:	mov	r1, r9
   14764:	mov	r0, sl
   14768:	bl	10b14 <mchar_sync_chunk_find_by_size@plt>
   1476c:	subs	r5, r0, #0
   14770:	beq	1480c <mchar_async_malloc@@Base+0x100>
   14774:	mov	r3, #0
   14778:	str	r3, [r5, #4]
   1477c:	mov	r1, r5
   14780:	ldr	r0, [r8, r4]
   14784:	bl	ff44 <mchar_sync_chunk_insert_after@plt>
   14788:	ldr	r3, [r5, #4]
   1478c:	str	r5, [r8, r4]
   14790:	ldr	r2, [r5]
   14794:	add	r0, r3, #4
   14798:	add	r0, r2, r0
   1479c:	str	r6, [r2, r3]
   147a0:	ldr	r1, [r5, #4]
   147a4:	add	r1, r1, r9
   147a8:	str	r1, [r5, #4]
   147ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147b0:	mov	r1, r6
   147b4:	add	r0, sl, #4
   147b8:	bl	10f64 <mchar_async_cache_delete@plt>
   147bc:	cmp	r0, #0
   147c0:	beq	1473c <mchar_async_malloc@@Base+0x30>
   147c4:	ldr	r3, [sl, #4]
   147c8:	add	r0, r0, r0, lsl #2
   147cc:	ldr	r0, [r3, r0, lsl #2]
   147d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147d4:	sub	r2, r2, #4
   147d8:	subs	r0, r2, r3
   147dc:	beq	14760 <mchar_async_malloc@@Base+0x54>
   147e0:	ldr	ip, [r5]
   147e4:	mov	r2, r0
   147e8:	add	r1, ip, r1
   147ec:	str	r0, [ip, r3]
   147f0:	ldr	r3, [r5, #8]
   147f4:	add	r0, sl, #4
   147f8:	str	r3, [r5, #4]
   147fc:	bl	10c7c <mchar_async_cache_add@plt>
   14800:	b	14760 <mchar_async_malloc@@Base+0x54>
   14804:	mov	r0, r6
   14808:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1480c:	ldr	r2, [r7]
   14810:	mov	r1, sl
   14814:	cmp	r2, r9
   14818:	addcc	r2, r2, r9
   1481c:	mov	r0, r7
   14820:	bl	109d0 <mchar_async_chunk_malloc@plt>
   14824:	mov	r5, r0
   14828:	b	1477c <mchar_async_malloc@@Base+0x70>

0001482c <mchar_async_realloc@@Base>:
   1482c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14830:	subs	ip, r2, #0
   14834:	ldr	r2, [sp, #32]
   14838:	beq	148b8 <mchar_async_realloc@@Base+0x8c>
   1483c:	ldr	r4, [ip, #-4]
   14840:	ldr	r5, [ip, #-4]
   14844:	cmp	r4, r2
   14848:	bcs	148b8 <mchar_async_realloc@@Base+0x8c>
   1484c:	add	lr, r1, r1, lsl #3
   14850:	ldr	r8, [r0, #56]	; 0x38
   14854:	lsl	lr, lr, #2
   14858:	add	r6, r8, lr
   1485c:	ldr	r9, [r8, lr]
   14860:	ldr	r7, [r9, #4]
   14864:	cmp	r4, r7
   14868:	bhi	14880 <mchar_async_realloc@@Base+0x54>
   1486c:	ldr	sl, [r9]
   14870:	sub	r4, r7, r4
   14874:	add	r7, sl, r4
   14878:	cmp	ip, r7
   1487c:	beq	148c4 <mchar_async_realloc@@Base+0x98>
   14880:	mov	r7, r3
   14884:	mov	r8, ip
   14888:	bl	10910 <mchar_async_malloc@plt>
   1488c:	subs	r4, r0, #0
   14890:	beq	148b0 <mchar_async_realloc@@Base+0x84>
   14894:	mov	r2, r7
   14898:	mov	r1, r8
   1489c:	bl	ff5c <memcpy@plt>
   148a0:	mov	r2, r5
   148a4:	mov	r1, r8
   148a8:	add	r0, r6, #4
   148ac:	bl	10c7c <mchar_async_cache_add@plt>
   148b0:	mov	r0, r4
   148b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148b8:	mov	r4, ip
   148bc:	mov	r0, r4
   148c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148c4:	ldr	r9, [r9, #8]
   148c8:	add	r7, r4, r2
   148cc:	cmp	r7, r9
   148d0:	bhi	14880 <mchar_async_realloc@@Base+0x54>
   148d4:	str	r2, [ip, #-4]
   148d8:	ldr	r3, [r8, lr]
   148dc:	mov	r4, ip
   148e0:	str	r7, [r3, #4]
   148e4:	b	148b0 <mchar_async_realloc@@Base+0x84>

000148e8 <mchar_async_crop_first_chars@@Base>:
   148e8:	cmp	r2, #0
   148ec:	push	{r4, lr}
   148f0:	beq	1493c <mchar_async_crop_first_chars@@Base+0x54>
   148f4:	ldr	ip, [r2, #-4]
   148f8:	add	r4, r2, r3
   148fc:	add	lr, r3, #4
   14900:	sub	ip, ip, r3
   14904:	cmp	lr, #4
   14908:	str	ip, [r4, #-4]
   1490c:	bls	14934 <mchar_async_crop_first_chars@@Base+0x4c>
   14910:	mov	ip, r1
   14914:	mov	r1, r2
   14918:	sub	r2, r3, #4
   1491c:	str	r2, [r1, #-4]
   14920:	add	ip, ip, ip, lsl #3
   14924:	ldr	r0, [r0, #56]	; 0x38
   14928:	add	r0, r0, ip, lsl #2
   1492c:	add	r0, r0, #4
   14930:	bl	10c7c <mchar_async_cache_add@plt>
   14934:	mov	r0, r4
   14938:	pop	{r4, pc}
   1493c:	mov	r4, r2
   14940:	b	14934 <mchar_async_crop_first_chars@@Base+0x4c>

00014944 <mchar_async_free@@Base>:
   14944:	subs	r3, r2, #0
   14948:	bxeq	lr
   1494c:	add	r1, r1, r1, lsl #3
   14950:	ldr	r0, [r0, #56]	; 0x38
   14954:	ldr	r2, [r3, #-4]
   14958:	add	r0, r0, r1, lsl #2
   1495c:	add	r0, r0, #4
   14960:	mov	r1, r3
   14964:	b	10c7c <mchar_async_cache_add@plt>

00014968 <mcobject_create@@Base>:
   14968:	mov	r1, #24
   1496c:	mov	r0, #1
   14970:	b	ff14 <mycore_calloc@plt>

00014974 <mcobject_init@@Base>:
   14974:	push	{r4, lr}
   14978:	mov	r4, r0
   1497c:	mov	r3, #0
   14980:	str	r2, [r0, #16]
   14984:	str	r1, [r0, #20]
   14988:	str	r1, [r0, #8]
   1498c:	lsl	r0, r1, #2
   14990:	str	r3, [r4]
   14994:	str	r3, [r4, #12]
   14998:	bl	10c94 <mycore_malloc@plt>
   1499c:	cmp	r0, #0
   149a0:	str	r0, [r4, #4]
   149a4:	moveq	r0, #85	; 0x55
   149a8:	movne	r0, #0
   149ac:	pop	{r4, pc}

000149b0 <mcobject_clean@@Base>:
   149b0:	push	{r4, r5, r6, lr}
   149b4:	ldr	r4, [r0]
   149b8:	cmp	r4, #0
   149bc:	movne	r6, r0
   149c0:	bne	149cc <mcobject_clean@@Base+0x1c>
   149c4:	b	14a0c <mcobject_clean@@Base+0x5c>
   149c8:	mov	r4, r3
   149cc:	ldr	r3, [r4, #12]
   149d0:	cmp	r3, #0
   149d4:	bne	149c8 <mcobject_clean@@Base+0x18>
   149d8:	ldr	r3, [r4]
   149dc:	ldr	r5, [r4, #16]
   149e0:	subs	r0, r3, #0
   149e4:	beq	149ec <mcobject_clean@@Base+0x3c>
   149e8:	bl	10dcc <mycore_free@plt>
   149ec:	mov	r0, r4
   149f0:	bl	10dcc <mycore_free@plt>
   149f4:	cmp	r5, #0
   149f8:	mov	r4, r5
   149fc:	bne	149d8 <mcobject_clean@@Base+0x28>
   14a00:	str	r5, [r6]
   14a04:	str	r5, [r6, #12]
   14a08:	pop	{r4, r5, r6, pc}
   14a0c:	pop	{r4, r5, r6, pc}

00014a10 <mcobject_destroy@@Base>:
   14a10:	push	{r4, r5, r6, lr}
   14a14:	subs	r4, r0, #0
   14a18:	beq	14a44 <mcobject_destroy@@Base+0x34>
   14a1c:	mov	r5, r1
   14a20:	bl	10f70 <mcobject_clean@plt>
   14a24:	ldr	r0, [r4, #4]
   14a28:	cmp	r0, #0
   14a2c:	beq	14a3c <mcobject_destroy@@Base+0x2c>
   14a30:	bl	10dcc <mycore_free@plt>
   14a34:	mov	r3, #0
   14a38:	str	r3, [r4, #4]
   14a3c:	cmp	r5, #0
   14a40:	bne	14a4c <mcobject_destroy@@Base+0x3c>
   14a44:	mov	r0, r4
   14a48:	pop	{r4, r5, r6, pc}
   14a4c:	mov	r0, r4
   14a50:	bl	10dcc <mycore_free@plt>
   14a54:	mov	r4, #0
   14a58:	b	14a44 <mcobject_destroy@@Base+0x34>

00014a5c <mcobject_chunk_malloc@@Base>:
   14a5c:	push	{r4, r5, r6, lr}
   14a60:	subs	r5, r1, #0
   14a64:	movne	r3, #0
   14a68:	strne	r3, [r5]
   14a6c:	ldr	r3, [r0]
   14a70:	cmp	r3, #0
   14a74:	beq	14a94 <mcobject_chunk_malloc@@Base+0x38>
   14a78:	ldr	r3, [r3, #12]
   14a7c:	cmp	r3, #0
   14a80:	beq	14a94 <mcobject_chunk_malloc@@Base+0x38>
   14a84:	mov	r2, #0
   14a88:	str	r3, [r0]
   14a8c:	str	r2, [r3, #4]
   14a90:	pop	{r4, r5, r6, pc}
   14a94:	mov	r4, r0
   14a98:	mov	r1, #20
   14a9c:	mov	r0, #1
   14aa0:	bl	ff14 <mycore_calloc@plt>
   14aa4:	subs	r6, r0, #0
   14aa8:	beq	14ae8 <mcobject_chunk_malloc@@Base+0x8c>
   14aac:	ldr	r3, [r4, #16]
   14ab0:	ldr	r0, [r4, #20]
   14ab4:	mul	r0, r0, r3
   14ab8:	bl	10c94 <mycore_malloc@plt>
   14abc:	cmp	r0, #0
   14ac0:	str	r0, [r6]
   14ac4:	beq	14af8 <mcobject_chunk_malloc@@Base+0x9c>
   14ac8:	ldr	r3, [r4]
   14acc:	ldr	r2, [r4, #20]
   14ad0:	cmp	r3, #0
   14ad4:	str	r2, [r6, #8]
   14ad8:	strne	r3, [r6, #16]
   14adc:	strne	r6, [r3, #12]
   14ae0:	str	r6, [r4]
   14ae4:	pop	{r4, r5, r6, pc}
   14ae8:	cmp	r5, #0
   14aec:	movne	r3, #86	; 0x56
   14af0:	strne	r3, [r5]
   14af4:	pop	{r4, r5, r6, pc}
   14af8:	cmp	r5, #0
   14afc:	movne	r3, #87	; 0x57
   14b00:	strne	r3, [r5]
   14b04:	mov	r0, r6
   14b08:	pop	{r4, r5, r6, lr}
   14b0c:	b	10dcc <mycore_free@plt>

00014b10 <mcobject_malloc@@Base>:
   14b10:	ldr	r3, [r0, #12]
   14b14:	cmp	r3, #0
   14b18:	beq	14b40 <mcobject_malloc@@Base+0x30>
   14b1c:	cmp	r1, #0
   14b20:	movne	r3, #0
   14b24:	strne	r3, [r1]
   14b28:	ldrne	r3, [r0, #12]
   14b2c:	ldr	r2, [r0, #4]
   14b30:	sub	r3, r3, #1
   14b34:	str	r3, [r0, #12]
   14b38:	ldr	r0, [r2, r3, lsl #2]
   14b3c:	bx	lr
   14b40:	ldr	r3, [r0]
   14b44:	push	{r4, r5, lr}
   14b48:	cmp	r3, #0
   14b4c:	sub	sp, sp, #12
   14b50:	mov	r5, r1
   14b54:	mov	r4, r0
   14b58:	beq	14b68 <mcobject_malloc@@Base+0x58>
   14b5c:	ldmib	r3, {r1, r2}
   14b60:	cmp	r1, r2
   14b64:	bcc	14b84 <mcobject_malloc@@Base+0x74>
   14b68:	add	r1, sp, #4
   14b6c:	mov	r0, r4
   14b70:	bl	fee4 <mcobject_chunk_malloc@plt>
   14b74:	ldr	r3, [sp, #4]
   14b78:	cmp	r3, #0
   14b7c:	ldreq	r3, [r4]
   14b80:	bne	14bb0 <mcobject_malloc@@Base+0xa0>
   14b84:	cmp	r5, #0
   14b88:	movne	r2, #0
   14b8c:	strne	r2, [r5]
   14b90:	ldr	r0, [r3, #4]
   14b94:	ldr	ip, [r4, #16]
   14b98:	ldr	r1, [r3]
   14b9c:	add	r2, r0, #1
   14ba0:	mla	r0, ip, r0, r1
   14ba4:	str	r2, [r3, #4]
   14ba8:	add	sp, sp, #12
   14bac:	pop	{r4, r5, pc}
   14bb0:	cmp	r5, #0
   14bb4:	strne	r3, [r5]
   14bb8:	mov	r0, #0
   14bbc:	b	14ba8 <mcobject_malloc@@Base+0x98>

00014bc0 <mcobject_free@@Base>:
   14bc0:	ldr	r3, [r0, #12]
   14bc4:	ldr	r2, [r0, #8]
   14bc8:	push	{r4, r5, r6, lr}
   14bcc:	cmp	r3, r2
   14bd0:	mov	r4, r0
   14bd4:	mov	r6, r1
   14bd8:	bcs	14bf4 <mcobject_free@@Base+0x34>
   14bdc:	ldr	r0, [r0, #4]
   14be0:	add	r2, r3, #1
   14be4:	str	r6, [r0, r3, lsl #2]
   14be8:	mov	r0, #0
   14bec:	str	r2, [r4, #12]
   14bf0:	pop	{r4, r5, r6, pc}
   14bf4:	lsl	r1, r2, #3
   14bf8:	ldr	r0, [r0, #4]
   14bfc:	lsl	r5, r2, #1
   14c00:	bl	fbd8 <mycore_realloc@plt>
   14c04:	cmp	r0, #0
   14c08:	ldrne	r3, [r4, #12]
   14c0c:	stmibne	r4, {r0, r5}
   14c10:	bne	14be0 <mcobject_free@@Base+0x20>
   14c14:	mov	r0, #88	; 0x58
   14c18:	pop	{r4, r5, r6, pc}

00014c1c <mcobject_async_create@@Base>:
   14c1c:	mov	r1, #72	; 0x48
   14c20:	mov	r0, #1
   14c24:	b	ff14 <mycore_calloc@plt>

00014c28 <mcobject_async_chunk_up@@Base>:
   14c28:	push	{r4, r5, r6, lr}
   14c2c:	mov	r3, #0
   14c30:	ldr	r6, [r0, #32]
   14c34:	ldr	r5, [r0, #24]
   14c38:	str	r3, [r0, #40]	; 0x28
   14c3c:	ldr	r3, [r5, r6, lsl #2]
   14c40:	cmp	r3, #0
   14c44:	beq	14c50 <mcobject_async_chunk_up@@Base+0x28>
   14c48:	mov	r0, #0
   14c4c:	pop	{r4, r5, r6, pc}
   14c50:	mov	r4, r0
   14c54:	mov	r1, #20
   14c58:	ldr	r0, [r0, #36]	; 0x24
   14c5c:	bl	ff14 <mycore_calloc@plt>
   14c60:	ldr	r2, [r4, #32]
   14c64:	ldr	r3, [r4, #24]
   14c68:	str	r0, [r5, r6, lsl #2]
   14c6c:	ldr	r3, [r3, r2, lsl #2]
   14c70:	cmp	r3, #0
   14c74:	bne	14c48 <mcobject_async_chunk_up@@Base+0x20>
   14c78:	mov	r0, #2
   14c7c:	pop	{r4, r5, r6, pc}

00014c80 <mcobject_async_destroy@@Base>:
   14c80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c84:	subs	r6, r0, #0
   14c88:	beq	14dac <mcobject_async_destroy@@Base+0x12c>
   14c8c:	ldr	r2, [r6, #44]	; 0x2c
   14c90:	mov	r9, r1
   14c94:	cmp	r2, #0
   14c98:	beq	14cdc <mcobject_async_destroy@@Base+0x5c>
   14c9c:	ldr	r1, [r6, #48]	; 0x30
   14ca0:	cmp	r1, #0
   14ca4:	beq	14cd4 <mcobject_async_destroy@@Base+0x54>
   14ca8:	mov	r4, #0
   14cac:	add	r3, r2, r4, lsl #4
   14cb0:	add	r4, r4, #1
   14cb4:	ldr	r3, [r3, #4]
   14cb8:	subs	r0, r3, #0
   14cbc:	beq	14ccc <mcobject_async_destroy@@Base+0x4c>
   14cc0:	bl	10dcc <mycore_free@plt>
   14cc4:	ldr	r2, [r6, #44]	; 0x2c
   14cc8:	ldr	r1, [r6, #48]	; 0x30
   14ccc:	cmp	r1, r4
   14cd0:	bhi	14cac <mcobject_async_destroy@@Base+0x2c>
   14cd4:	mov	r0, r2
   14cd8:	bl	10dcc <mycore_free@plt>
   14cdc:	ldr	r0, [r6, #56]	; 0x38
   14ce0:	cmp	r0, #0
   14ce4:	beq	14cec <mcobject_async_destroy@@Base+0x6c>
   14ce8:	bl	10dcc <mycore_free@plt>
   14cec:	ldr	r0, [r6, #24]
   14cf0:	cmp	r0, #0
   14cf4:	beq	14d78 <mcobject_async_destroy@@Base+0xf8>
   14cf8:	ldr	r3, [r6, #32]
   14cfc:	cmp	r3, #0
   14d00:	beq	14d74 <mcobject_async_destroy@@Base+0xf4>
   14d04:	mov	r8, #0
   14d08:	ldr	r2, [r0, r8, lsl #2]
   14d0c:	lsl	r7, r8, #2
   14d10:	cmp	r2, #0
   14d14:	beq	14d68 <mcobject_async_destroy@@Base+0xe8>
   14d18:	ldr	r1, [r6, #36]	; 0x24
   14d1c:	cmp	r1, #0
   14d20:	beq	14d58 <mcobject_async_destroy@@Base+0xd8>
   14d24:	mov	r4, #0
   14d28:	mov	r5, r4
   14d2c:	ldr	r3, [r2, r4]
   14d30:	add	r5, r5, #1
   14d34:	subs	r0, r3, #0
   14d38:	beq	14d4c <mcobject_async_destroy@@Base+0xcc>
   14d3c:	bl	10dcc <mycore_free@plt>
   14d40:	ldr	r3, [r6, #24]
   14d44:	ldr	r1, [r6, #36]	; 0x24
   14d48:	ldr	r2, [r3, r7]
   14d4c:	cmp	r1, r5
   14d50:	add	r4, r4, #20
   14d54:	bhi	14d2c <mcobject_async_destroy@@Base+0xac>
   14d58:	mov	r0, r2
   14d5c:	bl	10dcc <mycore_free@plt>
   14d60:	ldr	r0, [r6, #24]
   14d64:	ldr	r3, [r6, #32]
   14d68:	add	r8, r8, #1
   14d6c:	cmp	r3, r8
   14d70:	bhi	14d08 <mcobject_async_destroy@@Base+0x88>
   14d74:	bl	10dcc <mycore_free@plt>
   14d78:	ldr	r0, [r6, #12]
   14d7c:	cmp	r0, #0
   14d80:	beq	14d88 <mcobject_async_destroy@@Base+0x108>
   14d84:	bl	10dcc <mycore_free@plt>
   14d88:	mov	r1, #1
   14d8c:	ldr	r0, [r6, #68]	; 0x44
   14d90:	bl	101b4 <mcsync_destroy@plt>
   14d94:	mov	r2, #72	; 0x48
   14d98:	mov	r1, #0
   14d9c:	mov	r0, r6
   14da0:	bl	108b0 <memset@plt>
   14da4:	cmp	r9, #0
   14da8:	bne	14db4 <mcobject_async_destroy@@Base+0x134>
   14dac:	mov	r0, r6
   14db0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14db4:	mov	r0, r6
   14db8:	bl	10dcc <mycore_free@plt>
   14dbc:	mov	r6, #0
   14dc0:	b	14dac <mcobject_async_destroy@@Base+0x12c>

00014dc4 <mcobject_async_mem_malloc@@Base>:
   14dc4:	push	{r4, r5, r6, lr}
   14dc8:	mov	r6, r0
   14dcc:	ldr	r0, [r1]
   14dd0:	mov	r4, r1
   14dd4:	cmp	r0, #0
   14dd8:	mov	r5, r2
   14ddc:	beq	14e38 <mcobject_async_mem_malloc@@Base+0x74>
   14de0:	ldr	r3, [r1, #8]
   14de4:	cmp	r3, r2
   14de8:	bcc	14dfc <mcobject_async_mem_malloc@@Base+0x38>
   14dec:	mov	r3, #0
   14df0:	mov	r0, r3
   14df4:	str	r3, [r1, #4]
   14df8:	pop	{r4, r5, r6, pc}
   14dfc:	bl	10dcc <mycore_free@plt>
   14e00:	ldr	r2, [r6]
   14e04:	ldr	r0, [r6, #8]
   14e08:	add	r5, r5, r2
   14e0c:	str	r5, [r4, #8]
   14e10:	mul	r0, r0, r5
   14e14:	bl	10c94 <mycore_malloc@plt>
   14e18:	mov	r3, r0
   14e1c:	str	r0, [r4]
   14e20:	mov	r2, #0
   14e24:	cmp	r3, r2
   14e28:	moveq	r0, #2
   14e2c:	movne	r0, r2
   14e30:	str	r2, [r4, #4]
   14e34:	pop	{r4, r5, r6, pc}
   14e38:	ldr	r3, [r6]
   14e3c:	ldr	r0, [r6, #8]
   14e40:	cmp	r2, r3
   14e44:	addhi	r3, r3, r2
   14e48:	str	r3, [r1, #8]
   14e4c:	mul	r0, r0, r3
   14e50:	bl	10c94 <mycore_malloc@plt>
   14e54:	mov	r3, r0
   14e58:	str	r0, [r4]
   14e5c:	b	14e20 <mcobject_async_mem_malloc@@Base+0x5c>

00014e60 <mcobject_async_chunk_malloc_without_lock@@Base>:
   14e60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e64:	subs	r7, r2, #0
   14e68:	ldr	r5, [r0, #20]
   14e6c:	movne	r3, #0
   14e70:	strne	r3, [r7]
   14e74:	cmp	r5, #0
   14e78:	bne	14f5c <mcobject_async_chunk_malloc_without_lock@@Base+0xfc>
   14e7c:	ldr	r3, [r0, #40]	; 0x28
   14e80:	ldr	r2, [r0, #36]	; 0x24
   14e84:	mov	r6, r1
   14e88:	cmp	r3, r2
   14e8c:	mov	r4, r0
   14e90:	bcs	14ee4 <mcobject_async_chunk_malloc_without_lock@@Base+0x84>
   14e94:	ldr	r2, [r0, #32]
   14e98:	ldr	r0, [r4, #24]
   14e9c:	sub	r2, r2, #-1073741823	; 0xc0000001
   14ea0:	add	r1, r3, r3, lsl #2
   14ea4:	ldr	r5, [r0, r2, lsl #2]
   14ea8:	add	r3, r3, #1
   14eac:	add	r5, r5, r1, lsl #2
   14eb0:	mov	r2, #0
   14eb4:	cmp	r7, #0
   14eb8:	str	r3, [r4, #40]	; 0x28
   14ebc:	mov	r0, r4
   14ec0:	str	r2, [r5, #12]
   14ec4:	str	r2, [r5, #16]
   14ec8:	mov	r1, r5
   14ecc:	mov	r2, r6
   14ed0:	beq	14fa0 <mcobject_async_chunk_malloc_without_lock@@Base+0x140>
   14ed4:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   14ed8:	str	r0, [r7]
   14edc:	mov	r0, r5
   14ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ee4:	ldr	r3, [r0, #28]
   14ee8:	ldr	r2, [r0, #32]
   14eec:	cmp	r2, r3
   14ef0:	bcc	14f2c <mcobject_async_chunk_malloc_without_lock@@Base+0xcc>
   14ef4:	lsl	r1, r3, #3
   14ef8:	ldr	r0, [r0, #24]
   14efc:	lsl	r8, r3, #1
   14f00:	bl	fbd8 <mycore_realloc@plt>
   14f04:	subs	r9, r0, #0
   14f08:	beq	14f3c <mcobject_async_chunk_malloc_without_lock@@Base+0xdc>
   14f0c:	ldr	r0, [r4, #32]
   14f10:	mov	r1, r5
   14f14:	sub	r2, r8, r0
   14f18:	add	r0, r9, r0, lsl #2
   14f1c:	lsl	r2, r2, #2
   14f20:	bl	108b0 <memset@plt>
   14f24:	str	r8, [r4, #28]
   14f28:	str	r9, [r4, #24]
   14f2c:	mov	r0, r4
   14f30:	bl	1019c <mcobject_async_chunk_up@plt>
   14f34:	cmp	r0, #0
   14f38:	beq	14f8c <mcobject_async_chunk_malloc_without_lock@@Base+0x12c>
   14f3c:	cmp	r7, #0
   14f40:	moveq	r5, r7
   14f44:	beq	14edc <mcobject_async_chunk_malloc_without_lock@@Base+0x7c>
   14f48:	mov	r3, #2
   14f4c:	mov	r5, #0
   14f50:	str	r3, [r7]
   14f54:	mov	r0, r5
   14f58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f5c:	ldr	r3, [r0, #12]
   14f60:	sub	r5, r5, #1
   14f64:	mov	r2, #0
   14f68:	ldr	r1, [r3, r5, lsl #2]
   14f6c:	str	r5, [r0, #20]
   14f70:	str	r2, [r1, #12]
   14f74:	ldr	r0, [r3, r5, lsl #2]
   14f78:	str	r2, [r1, #4]
   14f7c:	str	r2, [r0, #16]
   14f80:	ldr	r5, [r3, r5, lsl #2]
   14f84:	mov	r0, r5
   14f88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f8c:	ldr	r2, [r4, #32]
   14f90:	ldr	r3, [r4, #40]	; 0x28
   14f94:	add	r2, r2, #1
   14f98:	str	r2, [r4, #32]
   14f9c:	b	14e98 <mcobject_async_chunk_malloc_without_lock@@Base+0x38>
   14fa0:	bl	fdc4 <mcobject_async_mem_malloc@plt>
   14fa4:	b	14edc <mcobject_async_chunk_malloc_without_lock@@Base+0x7c>

00014fa8 <mcobject_async_chunk_malloc@@Base>:
   14fa8:	push	{r4, r5, r6, lr}
   14fac:	mov	r5, r0
   14fb0:	ldr	r0, [r0, #68]	; 0x44
   14fb4:	mov	r6, r1
   14fb8:	mov	r4, r2
   14fbc:	bl	10850 <mcsync_lock@plt>
   14fc0:	cmp	r0, #0
   14fc4:	beq	14fe0 <mcobject_async_chunk_malloc@@Base+0x38>
   14fc8:	cmp	r4, #0
   14fcc:	movne	r3, #1
   14fd0:	strne	r3, [r4]
   14fd4:	movne	r4, #0
   14fd8:	mov	r0, r4
   14fdc:	pop	{r4, r5, r6, pc}
   14fe0:	mov	r2, r4
   14fe4:	mov	r1, r6
   14fe8:	mov	r0, r5
   14fec:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   14ff0:	mov	r4, r0
   14ff4:	ldr	r0, [r5, #68]	; 0x44
   14ff8:	bl	10ebc <mcsync_unlock@plt>
   14ffc:	mov	r0, r4
   15000:	pop	{r4, r5, r6, pc}

00015004 <mcobject_async_clean@@Base>:
   15004:	ldr	r3, [r0, #24]
   15008:	ldr	ip, [r0, #48]	; 0x30
   1500c:	push	{r4, r5, r6, r7, r8, lr}
   15010:	mov	r4, #0
   15014:	ldr	r3, [r3]
   15018:	str	r4, [r0, #40]	; 0x28
   1501c:	cmp	r3, #0
   15020:	movne	r3, #1
   15024:	cmp	ip, r4
   15028:	str	r3, [r0, #32]
   1502c:	str	r4, [r0, #20]
   15030:	popeq	{r4, r5, r6, r7, r8, pc}
   15034:	mov	r5, r0
   15038:	mov	r7, r4
   1503c:	ldr	r6, [r5, #44]	; 0x2c
   15040:	mov	r2, r7
   15044:	add	r1, r6, r4, lsl #4
   15048:	ldr	r3, [r6, r4, lsl #4]
   1504c:	mov	r0, r5
   15050:	cmp	r3, #0
   15054:	str	r7, [r1, #12]
   15058:	beq	1506c <mcobject_async_clean@@Base+0x68>
   1505c:	ldr	r1, [r5]
   15060:	bl	1010c <mcobject_async_chunk_malloc@plt>
   15064:	ldr	ip, [r5, #48]	; 0x30
   15068:	str	r0, [r6, r4, lsl #4]
   1506c:	add	r4, r4, #1
   15070:	cmp	ip, r4
   15074:	bhi	1503c <mcobject_async_clean@@Base+0x38>
   15078:	pop	{r4, r5, r6, r7, r8, pc}

0001507c <mcobject_async_init@@Base>:
   1507c:	push	{r4, r5, r6, lr}
   15080:	add	ip, r3, #4
   15084:	mov	r4, r0
   15088:	mov	r5, #0
   1508c:	mov	r0, #128	; 0x80
   15090:	str	r1, [r4, #36]	; 0x24
   15094:	stm	r4, {r2, r3, ip}
   15098:	mov	r1, #4
   1509c:	str	r5, [r4, #32]
   150a0:	str	r0, [r4, #28]
   150a4:	bl	ff14 <mycore_calloc@plt>
   150a8:	cmp	r0, r5
   150ac:	str	r0, [r4, #24]
   150b0:	beq	15150 <mcobject_async_init@@Base+0xd4>
   150b4:	mov	r0, r4
   150b8:	bl	1019c <mcobject_async_chunk_up@plt>
   150bc:	ldr	r0, [r4, #36]	; 0x24
   150c0:	mov	r1, #4
   150c4:	str	r0, [r4, #16]
   150c8:	bl	ff14 <mycore_calloc@plt>
   150cc:	cmp	r0, r5
   150d0:	str	r0, [r4, #12]
   150d4:	beq	15140 <mcobject_async_init@@Base+0xc4>
   150d8:	mov	r0, #64	; 0x40
   150dc:	str	r5, [r4, #48]	; 0x30
   150e0:	str	r0, [r4, #52]	; 0x34
   150e4:	mov	r1, #16
   150e8:	bl	ff14 <mycore_calloc@plt>
   150ec:	cmp	r0, r5
   150f0:	str	r0, [r4, #44]	; 0x2c
   150f4:	beq	15148 <mcobject_async_init@@Base+0xcc>
   150f8:	ldr	r0, [r4, #52]	; 0x34
   150fc:	str	r5, [r4, #60]	; 0x3c
   15100:	str	r0, [r4, #64]	; 0x40
   15104:	lsl	r0, r0, #2
   15108:	bl	10c94 <mycore_malloc@plt>
   1510c:	cmp	r0, #0
   15110:	str	r0, [r4, #56]	; 0x38
   15114:	beq	15148 <mcobject_async_init@@Base+0xcc>
   15118:	mov	r0, r4
   1511c:	bl	11054 <mcobject_async_clean@plt>
   15120:	bl	fd94 <mcsync_create@plt>
   15124:	cmp	r0, #0
   15128:	str	r0, [r4, #68]	; 0x44
   1512c:	beq	15158 <mcobject_async_init@@Base+0xdc>
   15130:	bl	10868 <mcsync_init@plt>
   15134:	adds	r0, r0, #0
   15138:	movne	r0, #1
   1513c:	pop	{r4, r5, r6, pc}
   15140:	mov	r0, #3
   15144:	pop	{r4, r5, r6, pc}
   15148:	mov	r0, #4
   1514c:	pop	{r4, r5, r6, pc}
   15150:	mov	r0, #2
   15154:	pop	{r4, r5, r6, pc}
   15158:	mov	r0, #1
   1515c:	pop	{r4, r5, r6, pc}

00015160 <mcobject_async_node_add@@Base>:
   15160:	push	{r4, r5, r6, r7, r8, lr}
   15164:	mov	r4, r0
   15168:	ldr	r0, [r0, #68]	; 0x44
   1516c:	mov	r5, r1
   15170:	bl	10850 <mcsync_lock@plt>
   15174:	cmp	r5, #0
   15178:	ldr	r6, [r4, #60]	; 0x3c
   1517c:	movne	r3, #0
   15180:	strne	r3, [r5]
   15184:	cmp	r6, #0
   15188:	beq	15204 <mcobject_async_node_add@@Base+0xa4>
   1518c:	ldr	r3, [r4, #56]	; 0x38
   15190:	sub	r6, r6, #1
   15194:	str	r6, [r4, #60]	; 0x3c
   15198:	ldr	r7, [r3, r6, lsl #2]
   1519c:	mov	r2, r5
   151a0:	ldr	r1, [r4]
   151a4:	mov	r0, r4
   151a8:	ldr	r6, [r4, #44]	; 0x2c
   151ac:	bl	108e0 <mcobject_async_chunk_malloc_without_lock@plt>
   151b0:	cmp	r5, #0
   151b4:	str	r0, [r6, r7, lsl #4]
   151b8:	add	r6, r6, r7, lsl #4
   151bc:	beq	1523c <mcobject_async_node_add@@Base+0xdc>
   151c0:	ldr	r3, [r5]
   151c4:	cmp	r3, #0
   151c8:	bne	15228 <mcobject_async_node_add@@Base+0xc8>
   151cc:	ldr	r2, [r4]
   151d0:	str	r3, [r0, #12]
   151d4:	str	r3, [r0, #16]
   151d8:	lsl	r0, r2, #2
   151dc:	str	r3, [r6, #12]
   151e0:	str	r2, [r6, #8]
   151e4:	bl	10c94 <mycore_malloc@plt>
   151e8:	cmp	r0, #0
   151ec:	str	r0, [r6, #4]
   151f0:	beq	15220 <mcobject_async_node_add@@Base+0xc0>
   151f4:	ldr	r0, [r4, #68]	; 0x44
   151f8:	bl	10ebc <mcsync_unlock@plt>
   151fc:	mov	r0, r7
   15200:	pop	{r4, r5, r6, r7, r8, pc}
   15204:	ldr	r7, [r4, #48]	; 0x30
   15208:	ldr	r3, [r4, #52]	; 0x34
   1520c:	cmp	r7, r3
   15210:	bcs	15228 <mcobject_async_node_add@@Base+0xc8>
   15214:	add	r3, r7, #1
   15218:	str	r3, [r4, #48]	; 0x30
   1521c:	b	1519c <mcobject_async_node_add@@Base+0x3c>
   15220:	mov	r3, #3
   15224:	str	r3, [r5]
   15228:	ldr	r0, [r4, #68]	; 0x44
   1522c:	mov	r7, #0
   15230:	bl	10ebc <mcsync_unlock@plt>
   15234:	mov	r0, r7
   15238:	pop	{r4, r5, r6, r7, r8, pc}
   1523c:	ldr	r3, [r4]
   15240:	str	r5, [r0, #12]
   15244:	str	r5, [r0, #16]
   15248:	lsl	r0, r3, #2
   1524c:	str	r5, [r6, #12]
   15250:	str	r3, [r6, #8]
   15254:	bl	10c94 <mycore_malloc@plt>
   15258:	cmp	r0, #0
   1525c:	str	r0, [r6, #4]
   15260:	bne	151f4 <mcobject_async_node_add@@Base+0x94>
   15264:	b	15228 <mcobject_async_node_add@@Base+0xc8>

00015268 <mcobject_async_node_clean@@Base>:
   15268:	ldr	r3, [r0, #48]	; 0x30
   1526c:	cmp	r3, r1
   15270:	bxls	lr
   15274:	ldr	r0, [r0, #44]	; 0x2c
   15278:	mov	r2, #0
   1527c:	add	ip, r0, r1, lsl #4
   15280:	ldr	r3, [r0, r1, lsl #4]
   15284:	str	r2, [ip, #12]
   15288:	cmp	r3, r2
   1528c:	bxeq	lr
   15290:	ldr	r2, [r3, #16]
   15294:	cmp	r2, #0
   15298:	bne	152a8 <mcobject_async_node_clean@@Base+0x40>
   1529c:	mov	r2, r3
   152a0:	b	152b8 <mcobject_async_node_clean@@Base+0x50>
   152a4:	mov	r2, r3
   152a8:	ldr	r3, [r2, #16]
   152ac:	cmp	r3, #0
   152b0:	bne	152a4 <mcobject_async_node_clean@@Base+0x3c>
   152b4:	str	r2, [r0, r1, lsl #4]
   152b8:	mov	r3, #0
   152bc:	str	r3, [r2, #4]
   152c0:	str	r3, [ip, #12]
   152c4:	bx	lr

000152c8 <mcobject_async_node_all_clean@@Base>:
   152c8:	ldr	r3, [r0, #48]	; 0x30
   152cc:	cmp	r3, #0
   152d0:	bxeq	lr
   152d4:	push	{r4, r5, r6, lr}
   152d8:	mov	r5, r0
   152dc:	mov	r4, #0
   152e0:	mov	r1, r4
   152e4:	mov	r0, r5
   152e8:	bl	10880 <mcobject_async_node_clean@plt>
   152ec:	ldr	r3, [r5, #48]	; 0x30
   152f0:	add	r4, r4, #1
   152f4:	cmp	r3, r4
   152f8:	bhi	152e0 <mcobject_async_node_all_clean@@Base+0x18>
   152fc:	pop	{r4, r5, r6, pc}

00015300 <mcobject_async_node_delete@@Base>:
   15300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15304:	mov	r5, r0
   15308:	ldr	r0, [r0, #68]	; 0x44
   1530c:	mov	r7, r1
   15310:	bl	10850 <mcsync_lock@plt>
   15314:	ldr	r3, [r5, #48]	; 0x30
   15318:	cmp	r3, r7
   1531c:	bls	153e8 <mcobject_async_node_delete@@Base+0xe8>
   15320:	ldr	r9, [r5, #44]	; 0x2c
   15324:	add	r8, r9, r7, lsl #4
   15328:	ldr	r4, [r9, r7, lsl #4]
   1532c:	b	15334 <mcobject_async_node_delete@@Base+0x34>
   15330:	mov	r4, r3
   15334:	ldr	r3, [r4, #12]
   15338:	cmp	r3, #0
   1533c:	bne	15330 <mcobject_async_node_delete@@Base+0x30>
   15340:	ldr	r3, [r5, #20]
   15344:	ldr	r0, [r5, #12]
   15348:	b	15364 <mcobject_async_node_delete@@Base+0x64>
   1534c:	str	r4, [r0, r3, lsl #2]
   15350:	ldr	r4, [r4, #16]
   15354:	add	r3, r3, #1
   15358:	cmp	r4, #0
   1535c:	str	r3, [r5, #20]
   15360:	beq	15394 <mcobject_async_node_delete@@Base+0x94>
   15364:	ldr	r2, [r5, #16]
   15368:	cmp	r2, r3
   1536c:	bhi	1534c <mcobject_async_node_delete@@Base+0x4c>
   15370:	lsl	r1, r2, #3
   15374:	lsl	r6, r2, #1
   15378:	bl	fbd8 <mycore_realloc@plt>
   1537c:	cmp	r0, #0
   15380:	beq	153e8 <mcobject_async_node_delete@@Base+0xe8>
   15384:	str	r6, [r5, #16]
   15388:	str	r0, [r5, #12]
   1538c:	ldr	r3, [r5, #20]
   15390:	b	1534c <mcobject_async_node_delete@@Base+0x4c>
   15394:	ldr	r0, [r8, #4]
   15398:	cmp	r0, #0
   1539c:	beq	153a4 <mcobject_async_node_delete@@Base+0xa4>
   153a0:	bl	10dcc <mycore_free@plt>
   153a4:	mov	r3, #0
   153a8:	str	r3, [r9, r7, lsl #4]
   153ac:	str	r3, [r8, #4]
   153b0:	str	r3, [r8, #8]
   153b4:	str	r3, [r8, #12]
   153b8:	ldr	r3, [r5, #60]	; 0x3c
   153bc:	ldr	r2, [r5, #64]	; 0x40
   153c0:	cmp	r3, r2
   153c4:	bcs	153f4 <mcobject_async_node_delete@@Base+0xf4>
   153c8:	ldr	r0, [r5, #56]	; 0x38
   153cc:	str	r7, [r0, r3, lsl #2]
   153d0:	ldr	r3, [r5, #60]	; 0x3c
   153d4:	ldr	r0, [r5, #68]	; 0x44
   153d8:	add	r3, r3, #1
   153dc:	str	r3, [r5, #60]	; 0x3c
   153e0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   153e4:	b	10ebc <mcsync_unlock@plt>
   153e8:	ldr	r0, [r5, #68]	; 0x44
   153ec:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   153f0:	b	10ebc <mcsync_unlock@plt>
   153f4:	lsl	r1, r2, #2
   153f8:	ldr	r0, [r5, #56]	; 0x38
   153fc:	lsl	r4, r2, #1
   15400:	bl	fbd8 <mycore_realloc@plt>
   15404:	cmp	r0, #0
   15408:	strne	r0, [r5, #56]	; 0x38
   1540c:	ldreq	r0, [r5, #56]	; 0x38
   15410:	ldreq	r3, [r5, #60]	; 0x3c
   15414:	ldrne	r3, [r5, #60]	; 0x3c
   15418:	strne	r4, [r5, #64]	; 0x40
   1541c:	b	153cc <mcobject_async_node_delete@@Base+0xcc>

00015420 <mcobject_async_malloc@@Base>:
   15420:	push	{r4, r5, r6, r7, lr}
   15424:	sub	sp, sp, #12
   15428:	ldr	r6, [r0, #44]	; 0x2c
   1542c:	add	ip, r6, r1, lsl #4
   15430:	ldr	r3, [ip, #12]
   15434:	cmp	r3, #0
   15438:	beq	15460 <mcobject_async_malloc@@Base+0x40>
   1543c:	cmp	r2, #0
   15440:	movne	r1, #0
   15444:	strne	r1, [r2]
   15448:	ldr	r2, [ip, #4]
   1544c:	sub	r3, r3, #1
   15450:	str	r3, [ip, #12]
   15454:	ldr	r0, [r2, r3, lsl #2]
   15458:	add	sp, sp, #12
   1545c:	pop	{r4, r5, r6, r7, pc}
   15460:	mov	r5, r1
   15464:	ldr	r1, [r6, r1, lsl #4]
   15468:	mov	r7, r2
   1546c:	mov	r4, r0
   15470:	ldmib	r1, {r2, ip}
   15474:	cmp	r2, ip
   15478:	bcc	15494 <mcobject_async_malloc@@Base+0x74>
   1547c:	ldr	r1, [r1, #12]
   15480:	cmp	r1, #0
   15484:	beq	154cc <mcobject_async_malloc@@Base+0xac>
   15488:	mov	r2, r3
   1548c:	str	r1, [r6, r5, lsl #4]
   15490:	str	r3, [r1, #4]
   15494:	cmp	r7, #0
   15498:	movne	r3, #0
   1549c:	strne	r3, [r7]
   154a0:	ldr	r3, [r4, #8]
   154a4:	ldr	r0, [r1]
   154a8:	mul	r3, r3, r2
   154ac:	add	r2, r3, #4
   154b0:	str	r5, [r0, r3]
   154b4:	ldr	r3, [r1, #4]
   154b8:	add	r0, r0, r2
   154bc:	add	r3, r3, #1
   154c0:	str	r3, [r1, #4]
   154c4:	add	sp, sp, #12
   154c8:	pop	{r4, r5, r6, r7, pc}
   154cc:	ldr	r1, [r0]
   154d0:	add	r2, sp, #4
   154d4:	bl	1010c <mcobject_async_chunk_malloc@plt>
   154d8:	ldr	r3, [sp, #4]
   154dc:	cmp	r3, #0
   154e0:	mov	r1, r0
   154e4:	bne	15500 <mcobject_async_malloc@@Base+0xe0>
   154e8:	ldr	r3, [r6, r5, lsl #4]
   154ec:	ldr	r2, [r0, #4]
   154f0:	str	r3, [r0, #16]
   154f4:	str	r0, [r3, #12]
   154f8:	str	r0, [r6, r5, lsl #4]
   154fc:	b	15494 <mcobject_async_malloc@@Base+0x74>
   15500:	cmp	r7, #0
   15504:	strne	r3, [r7]
   15508:	mov	r0, #0
   1550c:	b	15458 <mcobject_async_malloc@@Base+0x38>

00015510 <mcobject_async_free@@Base>:
   15510:	ldr	r2, [r0, #48]	; 0x30
   15514:	ldr	r3, [r1, #-4]
   15518:	cmp	r3, r2
   1551c:	bcc	15528 <mcobject_async_free@@Base+0x18>
   15520:	mov	r0, #5
   15524:	bx	lr
   15528:	push	{r4, r5, r6, lr}
   1552c:	mov	r5, r1
   15530:	ldr	r4, [r0, #44]	; 0x2c
   15534:	add	r4, r4, r3, lsl #4
   15538:	ldr	r3, [r4, #12]
   1553c:	ldr	r2, [r4, #8]
   15540:	cmp	r3, r2
   15544:	bcs	15560 <mcobject_async_free@@Base+0x50>
   15548:	ldr	r0, [r4, #4]
   1554c:	add	r2, r3, #1
   15550:	str	r5, [r0, r3, lsl #2]
   15554:	mov	r0, #0
   15558:	str	r2, [r4, #12]
   1555c:	pop	{r4, r5, r6, pc}
   15560:	lsl	r1, r2, #3
   15564:	ldr	r0, [r4, #4]
   15568:	lsl	r6, r2, #1
   1556c:	bl	fbd8 <mycore_realloc@plt>
   15570:	cmp	r0, #0
   15574:	ldrne	r3, [r4, #12]
   15578:	stmibne	r4, {r0, r6}
   1557c:	bne	1554c <mcobject_async_free@@Base+0x3c>
   15580:	mov	r0, #6
   15584:	pop	{r4, r5, r6, pc}

00015588 <mcsimple_create@@Base>:
   15588:	mov	r1, #28
   1558c:	mov	r0, #1
   15590:	b	ff14 <mycore_calloc@plt>

00015594 <mcsimple_clean@@Base>:
   15594:	mov	r3, #0
   15598:	str	r3, [r0, #24]
   1559c:	str	r3, [r0, #12]
   155a0:	bx	lr

000155a4 <mcsimple_destroy@@Base>:
   155a4:	push	{r4, r5, r6, lr}
   155a8:	subs	r5, r0, #0
   155ac:	beq	15604 <mcsimple_destroy@@Base+0x60>
   155b0:	ldr	r2, [r5, #4]
   155b4:	mov	r6, r1
   155b8:	cmp	r2, #0
   155bc:	beq	155fc <mcsimple_destroy@@Base+0x58>
   155c0:	ldr	r1, [r5, #16]
   155c4:	cmp	r1, #0
   155c8:	beq	155f4 <mcsimple_destroy@@Base+0x50>
   155cc:	mov	r4, #0
   155d0:	ldr	r3, [r2, r4, lsl #2]
   155d4:	add	r4, r4, #1
   155d8:	subs	r0, r3, #0
   155dc:	beq	155ec <mcsimple_destroy@@Base+0x48>
   155e0:	bl	10dcc <mycore_free@plt>
   155e4:	ldr	r2, [r5, #4]
   155e8:	ldr	r1, [r5, #16]
   155ec:	cmp	r1, r4
   155f0:	bhi	155d0 <mcsimple_destroy@@Base+0x2c>
   155f4:	mov	r0, r2
   155f8:	bl	10dcc <mycore_free@plt>
   155fc:	cmp	r6, #0
   15600:	bne	1560c <mcsimple_destroy@@Base+0x68>
   15604:	mov	r0, r5
   15608:	pop	{r4, r5, r6, pc}
   1560c:	mov	r0, r5
   15610:	bl	10dcc <mycore_free@plt>
   15614:	mov	r5, #0
   15618:	b	15604 <mcsimple_destroy@@Base+0x60>

0001561c <mcsimple_init_list_entries@@Base>:
   1561c:	ldr	r3, [r0, #8]
   15620:	ldr	r2, [r0, #12]
   15624:	push	{r4, r5, r6, lr}
   15628:	cmp	r2, r3
   1562c:	mov	r5, r1
   15630:	mov	r4, r0
   15634:	lslcc	r5, r1, #2
   15638:	bcs	15678 <mcsimple_init_list_entries@@Base+0x5c>
   1563c:	ldr	r6, [r4, #4]
   15640:	mov	r3, #0
   15644:	str	r3, [r4, #24]
   15648:	ldr	r0, [r6, r5]
   1564c:	cmp	r0, r3
   15650:	popne	{r4, r5, r6, pc}
   15654:	ldr	r3, [r4, #16]
   15658:	ldr	r0, [r4, #20]
   1565c:	add	r3, r3, #1
   15660:	str	r3, [r4, #16]
   15664:	bl	10c94 <mycore_malloc@plt>
   15668:	ldr	r3, [r4, #4]
   1566c:	str	r0, [r6, r5]
   15670:	ldr	r0, [r3, r5]
   15674:	pop	{r4, r5, r6, pc}
   15678:	lsl	r1, r3, #2
   1567c:	ldr	r0, [r0, #4]
   15680:	add	r6, r3, #128	; 0x80
   15684:	bl	fbd8 <mycore_realloc@plt>
   15688:	cmp	r0, #0
   1568c:	popeq	{r4, r5, r6, pc}
   15690:	ldr	r2, [r4, #8]
   15694:	lsl	r5, r5, #2
   15698:	sub	r2, r6, r2
   1569c:	str	r0, [r4, #4]
   156a0:	lsl	r2, r2, #2
   156a4:	add	r0, r0, r5
   156a8:	mov	r1, #0
   156ac:	bl	108b0 <memset@plt>
   156b0:	str	r6, [r4, #8]
   156b4:	b	1563c <mcsimple_init_list_entries@@Base+0x20>

000156b8 <mcsimple_init@@Base>:
   156b8:	push	{r4, r5, r6, lr}
   156bc:	mov	r4, r0
   156c0:	mov	ip, #0
   156c4:	str	r1, [r0, #8]
   156c8:	mov	r0, r1
   156cc:	str	r3, [r4]
   156d0:	str	ip, [r4, #16]
   156d4:	str	ip, [r4, #12]
   156d8:	mov	r1, #4
   156dc:	mov	r6, r3
   156e0:	mov	r5, r2
   156e4:	bl	ff14 <mycore_calloc@plt>
   156e8:	cmp	r0, #0
   156ec:	str	r0, [r4, #4]
   156f0:	popeq	{r4, r5, r6, pc}
   156f4:	mul	r5, r5, r6
   156f8:	ldr	r1, [r4, #12]
   156fc:	str	r5, [r4, #20]
   15700:	mov	r0, r4
   15704:	pop	{r4, r5, r6, lr}
   15708:	b	10994 <mcsimple_init_list_entries@plt>

0001570c <mcsimple_malloc@@Base>:
   1570c:	ldr	r3, [r0, #24]
   15710:	ldr	r2, [r0, #20]
   15714:	push	{r4, lr}
   15718:	cmp	r3, r2
   1571c:	mov	r4, r0
   15720:	bcs	15744 <mcsimple_malloc@@Base+0x38>
   15724:	ldr	r0, [r4, #12]
   15728:	ldr	r1, [r4, #4]
   1572c:	ldr	r2, [r4]
   15730:	ldr	r0, [r1, r0, lsl #2]
   15734:	add	r2, r2, r3
   15738:	add	r0, r0, r3
   1573c:	str	r2, [r4, #24]
   15740:	pop	{r4, pc}
   15744:	ldr	r1, [r0, #12]
   15748:	add	r1, r1, #1
   1574c:	str	r1, [r0, #12]
   15750:	bl	10994 <mcsimple_init_list_entries@plt>
   15754:	cmp	r0, #0
   15758:	popeq	{r4, pc}
   1575c:	ldr	r3, [r4, #24]
   15760:	b	15724 <mcsimple_malloc@@Base+0x18>

00015764 <mcsimple_get_by_absolute_position@@Base>:
   15764:	push	{r4, r5, r6, r7, r8, lr}
   15768:	mov	r4, r0
   1576c:	ldr	r5, [r0]
   15770:	ldr	r7, [r0, #20]
   15774:	mul	r5, r5, r1
   15778:	mov	r1, r7
   1577c:	mov	r0, r5
   15780:	bl	2ce38 <mcsync_mutex_unlock@@Base+0x14>
   15784:	ldr	r3, [r4, #16]
   15788:	cmp	r0, r3
   1578c:	bcs	157b0 <mcsimple_get_by_absolute_position@@Base+0x4c>
   15790:	mov	r6, r0
   15794:	mov	r1, r7
   15798:	mov	r0, r5
   1579c:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   157a0:	ldr	r3, [r4, #4]
   157a4:	ldr	r0, [r3, r6, lsl #2]
   157a8:	add	r0, r0, r1
   157ac:	pop	{r4, r5, r6, r7, r8, pc}
   157b0:	mov	r0, #0
   157b4:	pop	{r4, r5, r6, r7, r8, pc}

000157b8 <mcsync_create@@Base>:
   157b8:	mov	r1, #8
   157bc:	mov	r0, #1
   157c0:	b	ff14 <mycore_calloc@plt>

000157c4 <mcsync_init@@Base>:
   157c4:	push	{r4, r5, r6, lr}
   157c8:	mov	r4, r0
   157cc:	bl	1055c <mcsync_spin_create@plt>
   157d0:	cmp	r0, #0
   157d4:	str	r0, [r4]
   157d8:	beq	1582c <mcsync_init@@Base+0x68>
   157dc:	bl	104fc <mcsync_spin_init@plt>
   157e0:	subs	r5, r0, #0
   157e4:	bne	1581c <mcsync_init@@Base+0x58>
   157e8:	bl	108c8 <mcsync_mutex_create@plt>
   157ec:	cmp	r0, #0
   157f0:	str	r0, [r4, #4]
   157f4:	beq	1582c <mcsync_init@@Base+0x68>
   157f8:	bl	10b50 <mcsync_mutex_init@plt>
   157fc:	subs	r5, r0, #0
   15800:	beq	15814 <mcsync_init@@Base+0x50>
   15804:	ldr	r0, [r4]
   15808:	bl	ffa4 <mcsync_spin_destroy@plt>
   1580c:	ldr	r0, [r4, #4]
   15810:	bl	fd70 <mcsync_mutex_destroy@plt>
   15814:	mov	r0, r5
   15818:	pop	{r4, r5, r6, pc}
   1581c:	ldr	r0, [r4]
   15820:	bl	ffa4 <mcsync_spin_destroy@plt>
   15824:	mov	r0, r5
   15828:	pop	{r4, r5, r6, pc}
   1582c:	mov	r5, #1
   15830:	mov	r0, r5
   15834:	pop	{r4, r5, r6, pc}

00015838 <mcsync_clean@@Base>:
   15838:	push	{r4, lr}
   1583c:	mov	r4, r0
   15840:	ldr	r0, [r0]
   15844:	bl	10a78 <mcsync_spin_clean@plt>
   15848:	ldr	r0, [r4, #4]
   1584c:	pop	{r4, lr}
   15850:	b	10e50 <mcsync_mutex_clean@plt>

00015854 <mcsync_destroy@@Base>:
   15854:	push	{r4, r5, r6, lr}
   15858:	subs	r4, r0, #0
   1585c:	beq	1587c <mcsync_destroy@@Base+0x28>
   15860:	ldr	r0, [r4]
   15864:	mov	r5, r1
   15868:	bl	ffa4 <mcsync_spin_destroy@plt>
   1586c:	ldr	r0, [r4, #4]
   15870:	bl	fd70 <mcsync_mutex_destroy@plt>
   15874:	cmp	r5, #0
   15878:	bne	15884 <mcsync_destroy@@Base+0x30>
   1587c:	mov	r0, r4
   15880:	pop	{r4, r5, r6, pc}
   15884:	mov	r0, r4
   15888:	bl	10dcc <mycore_free@plt>
   1588c:	mov	r4, #0
   15890:	b	1587c <mcsync_destroy@@Base+0x28>

00015894 <mcsync_lock@@Base>:
   15894:	ldr	r0, [r0]
   15898:	b	105b0 <mcsync_spin_lock@plt>

0001589c <mcsync_unlock@@Base>:
   1589c:	ldr	r0, [r0]
   158a0:	b	11024 <mcsync_spin_unlock@plt>

000158a4 <mctree_create@@Base>:
   158a4:	push	{r4, r5, r6, lr}
   158a8:	mov	r5, r0
   158ac:	mov	r0, #16
   158b0:	bl	10c94 <mycore_malloc@plt>
   158b4:	subs	r4, r0, #0
   158b8:	beq	158e8 <mctree_create@@Base+0x44>
   158bc:	add	r0, r5, #512	; 0x200
   158c0:	add	r3, r5, #1
   158c4:	str	r0, [r4, #8]
   158c8:	str	r3, [r4, #4]
   158cc:	mov	r1, #28
   158d0:	bl	ff14 <mycore_calloc@plt>
   158d4:	cmp	r0, #0
   158d8:	mov	r6, r0
   158dc:	str	r0, [r4]
   158e0:	strne	r5, [r4, #12]
   158e4:	beq	158f0 <mctree_create@@Base+0x4c>
   158e8:	mov	r0, r4
   158ec:	pop	{r4, r5, r6, pc}
   158f0:	mov	r0, r4
   158f4:	bl	10dcc <mycore_free@plt>
   158f8:	mov	r4, r6
   158fc:	b	158e8 <mctree_create@@Base+0x44>

00015900 <mctree_clean@@Base>:
   15900:	ldr	r2, [r0, #8]
   15904:	ldr	ip, [r0, #12]
   15908:	mov	r3, r0
   1590c:	rsb	r2, r2, r2, lsl #3
   15910:	add	ip, ip, #1
   15914:	ldr	r0, [r0]
   15918:	mov	r1, #0
   1591c:	str	ip, [r3, #4]
   15920:	lsl	r2, r2, #2
   15924:	b	108b0 <memset@plt>

00015928 <mctree_destroy@@Base>:
   15928:	push	{r4, lr}
   1592c:	subs	r4, r0, #0
   15930:	beq	1594c <mctree_destroy@@Base+0x24>
   15934:	ldr	r0, [r4]
   15938:	cmp	r0, #0
   1593c:	beq	15944 <mctree_destroy@@Base+0x1c>
   15940:	bl	10dcc <mycore_free@plt>
   15944:	mov	r0, r4
   15948:	bl	10dcc <mycore_free@plt>
   1594c:	mov	r0, #0
   15950:	pop	{r4, pc}

00015954 <__mtree_search_lowercase_to_start@@Base>:
   15954:	push	{r4, r5, r6, r7, r8, lr}
   15958:	subs	r4, r1, #0
   1595c:	ldr	r6, [r0]
   15960:	movne	r8, r2
   15964:	movne	r7, r3
   15968:	bne	15990 <__mtree_search_lowercase_to_start@@Base+0x3c>
   1596c:	b	159c0 <__mtree_search_lowercase_to_start@@Base+0x6c>
   15970:	ldr	r4, [r5, #20]
   15974:	rsb	r3, r4, r4, lsl #3
   15978:	add	r3, r6, r3, lsl #2
   1597c:	ldr	r3, [r3, #4]
   15980:	cmp	r7, r3
   15984:	bcc	159c0 <__mtree_search_lowercase_to_start@@Base+0x6c>
   15988:	cmp	r4, #0
   1598c:	beq	159c0 <__mtree_search_lowercase_to_start@@Base+0x6c>
   15990:	rsb	r2, r4, r4, lsl #3
   15994:	add	r5, r6, r2, lsl #2
   15998:	ldr	r3, [r5, #4]
   1599c:	cmp	r3, r7
   159a0:	beq	159c8 <__mtree_search_lowercase_to_start@@Base+0x74>
   159a4:	bcc	15970 <__mtree_search_lowercase_to_start@@Base+0x1c>
   159a8:	ldr	r4, [r5, #16]
   159ac:	rsb	r3, r4, r4, lsl #3
   159b0:	add	r3, r6, r3, lsl #2
   159b4:	ldr	r3, [r3, #4]
   159b8:	cmp	r7, r3
   159bc:	bls	15988 <__mtree_search_lowercase_to_start@@Base+0x34>
   159c0:	mov	r0, #0
   159c4:	pop	{r4, r5, r6, r7, r8, pc}
   159c8:	ldr	r1, [r6, r2, lsl #2]
   159cc:	mov	r0, r8
   159d0:	mov	r2, r7
   159d4:	bl	102a4 <mycore_strncasecmp@plt>
   159d8:	cmp	r0, #0
   159dc:	ldrne	r4, [r5, #24]
   159e0:	bne	15988 <__mtree_search_lowercase_to_start@@Base+0x34>
   159e4:	mov	r0, r4
   159e8:	pop	{r4, r5, r6, r7, r8, pc}

000159ec <__mtree_search_to_start@@Base>:
   159ec:	push	{r4, r5, r6, r7, r8, lr}
   159f0:	subs	r4, r1, #0
   159f4:	ldr	r6, [r0]
   159f8:	beq	15a58 <__mtree_search_to_start@@Base+0x6c>
   159fc:	mov	r8, r2
   15a00:	mov	r7, r3
   15a04:	b	15a28 <__mtree_search_to_start@@Base+0x3c>
   15a08:	ldr	r4, [r5, #20]
   15a0c:	rsb	r3, r4, r4, lsl #3
   15a10:	add	r3, r6, r3, lsl #2
   15a14:	ldr	r3, [r3, #4]
   15a18:	cmp	r7, r3
   15a1c:	bcc	15a58 <__mtree_search_to_start@@Base+0x6c>
   15a20:	cmp	r4, #0
   15a24:	beq	15a58 <__mtree_search_to_start@@Base+0x6c>
   15a28:	rsb	r2, r4, r4, lsl #3
   15a2c:	add	r5, r6, r2, lsl #2
   15a30:	ldr	r3, [r5, #4]
   15a34:	cmp	r3, r7
   15a38:	beq	15a60 <__mtree_search_to_start@@Base+0x74>
   15a3c:	bcc	15a08 <__mtree_search_to_start@@Base+0x1c>
   15a40:	ldr	r4, [r5, #16]
   15a44:	rsb	r3, r4, r4, lsl #3
   15a48:	add	r3, r6, r3, lsl #2
   15a4c:	ldr	r3, [r3, #4]
   15a50:	cmp	r7, r3
   15a54:	bls	15a20 <__mtree_search_to_start@@Base+0x34>
   15a58:	mov	r0, #0
   15a5c:	pop	{r4, r5, r6, r7, r8, pc}
   15a60:	ldr	r1, [r6, r2, lsl #2]
   15a64:	mov	r0, r8
   15a68:	mov	r2, r7
   15a6c:	bl	10070 <memcmp@plt>
   15a70:	cmp	r0, #0
   15a74:	ldrne	r4, [r5, #24]
   15a78:	bne	15a20 <__mtree_search_to_start@@Base+0x34>
   15a7c:	mov	r0, r4
   15a80:	pop	{r4, r5, r6, r7, r8, pc}

00015a84 <mctree_insert_child@@Base>:
   15a84:	push	{r4, r5, r6, lr}
   15a88:	rsb	r1, r1, r1, lsl #3
   15a8c:	ldr	r5, [r0, #4]
   15a90:	ldr	ip, [r0]
   15a94:	ldr	r6, [r0, #8]
   15a98:	rsb	lr, r5, r5, lsl #3
   15a9c:	add	r4, ip, r1, lsl #2
   15aa0:	lsl	r1, lr, #2
   15aa4:	add	lr, ip, r1
   15aa8:	str	r5, [r4, #24]
   15aac:	str	r2, [ip, r1]
   15ab0:	str	r3, [lr, #4]
   15ab4:	ldr	r2, [sp, #16]
   15ab8:	add	r3, r5, #1
   15abc:	cmp	r3, r6
   15ac0:	str	r2, [lr, #8]
   15ac4:	str	r3, [r0, #4]
   15ac8:	bcc	15af8 <mctree_insert_child@@Base+0x74>
   15acc:	mov	r4, r0
   15ad0:	add	r3, r5, #4096	; 0x1000
   15ad4:	add	r3, r3, #1
   15ad8:	add	r1, r1, #114688	; 0x1c000
   15adc:	mov	r0, ip
   15ae0:	str	r3, [r4, #8]
   15ae4:	add	r1, r1, #28
   15ae8:	bl	fbd8 <mycore_realloc@plt>
   15aec:	ldr	r3, [r4, #4]
   15af0:	mov	ip, r0
   15af4:	str	r0, [r4]
   15af8:	rsb	r3, r3, r3, lsl #3
   15afc:	mov	r2, #0
   15b00:	lsl	r3, r3, #2
   15b04:	add	r1, ip, r3
   15b08:	str	r2, [ip, r3]
   15b0c:	mov	r0, r5
   15b10:	str	r2, [r1, #8]
   15b14:	str	r2, [r1, #12]
   15b18:	str	r2, [r1, #16]
   15b1c:	str	r2, [r1, #20]
   15b20:	str	r2, [r1, #24]
   15b24:	pop	{r4, r5, r6, pc}

00015b28 <mctree_insert_after@@Base>:
   15b28:	push	{r4, r5, r6, r7, r8, lr}
   15b2c:	rsb	ip, r1, r1, lsl #3
   15b30:	ldr	r5, [r0]
   15b34:	ldr	r4, [r0, #4]
   15b38:	add	ip, r5, ip, lsl #2
   15b3c:	ldr	r7, [sp, #24]
   15b40:	ldr	r6, [ip, #20]
   15b44:	cmp	r6, #0
   15b48:	rsbne	lr, r4, r4, lsl #3
   15b4c:	rsbne	r8, r6, r6, lsl #3
   15b50:	addne	lr, r5, lr, lsl #2
   15b54:	addne	r8, r5, r8, lsl #2
   15b58:	rsbeq	lr, r4, r4, lsl #3
   15b5c:	strne	r4, [r8, #16]
   15b60:	strne	r6, [lr, #20]
   15b64:	ldr	r6, [r0, #8]
   15b68:	addeq	lr, r5, lr, lsl #2
   15b6c:	str	r4, [ip, #20]
   15b70:	add	ip, r4, #1
   15b74:	cmp	ip, r6
   15b78:	str	r1, [lr, #16]
   15b7c:	stm	lr, {r2, r3, r7}
   15b80:	str	ip, [r0, #4]
   15b84:	bcc	15bb4 <mctree_insert_after@@Base+0x8c>
   15b88:	add	r3, r4, #4096	; 0x1000
   15b8c:	add	r3, r3, #1
   15b90:	mov	r6, r0
   15b94:	rsb	r1, r3, r3, lsl #3
   15b98:	mov	r0, r5
   15b9c:	str	r3, [r6, #8]
   15ba0:	lsl	r1, r1, #2
   15ba4:	bl	fbd8 <mycore_realloc@plt>
   15ba8:	ldr	ip, [r6, #4]
   15bac:	mov	r5, r0
   15bb0:	str	r0, [r6]
   15bb4:	rsb	ip, ip, ip, lsl #3
   15bb8:	mov	r3, #0
   15bbc:	lsl	ip, ip, #2
   15bc0:	add	r2, r5, ip
   15bc4:	str	r3, [r5, ip]
   15bc8:	mov	r0, r4
   15bcc:	str	r3, [r2, #8]
   15bd0:	str	r3, [r2, #12]
   15bd4:	str	r3, [r2, #16]
   15bd8:	str	r3, [r2, #20]
   15bdc:	str	r3, [r2, #24]
   15be0:	pop	{r4, r5, r6, r7, r8, pc}

00015be4 <mctree_insert_before@@Base>:
   15be4:	push	{r4, r5, r6, r7, r8, lr}
   15be8:	rsb	ip, r1, r1, lsl #3
   15bec:	ldr	r5, [r0]
   15bf0:	ldr	r4, [r0, #4]
   15bf4:	add	ip, r5, ip, lsl #2
   15bf8:	ldr	r7, [sp, #24]
   15bfc:	ldr	r6, [ip, #16]
   15c00:	cmp	r6, #0
   15c04:	rsbne	lr, r4, r4, lsl #3
   15c08:	rsbne	r8, r6, r6, lsl #3
   15c0c:	addne	lr, r5, lr, lsl #2
   15c10:	addne	r8, r5, r8, lsl #2
   15c14:	rsbeq	lr, r4, r4, lsl #3
   15c18:	strne	r4, [r8, #20]
   15c1c:	strne	r6, [lr, #16]
   15c20:	ldr	r6, [r0, #8]
   15c24:	addeq	lr, r5, lr, lsl #2
   15c28:	str	r4, [ip, #16]
   15c2c:	add	ip, r4, #1
   15c30:	cmp	ip, r6
   15c34:	str	r1, [lr, #20]
   15c38:	stm	lr, {r2, r3, r7}
   15c3c:	str	ip, [r0, #4]
   15c40:	bcc	15c70 <mctree_insert_before@@Base+0x8c>
   15c44:	add	r3, r4, #4096	; 0x1000
   15c48:	add	r3, r3, #1
   15c4c:	mov	r6, r0
   15c50:	rsb	r1, r3, r3, lsl #3
   15c54:	mov	r0, r5
   15c58:	str	r3, [r6, #8]
   15c5c:	lsl	r1, r1, #2
   15c60:	bl	fbd8 <mycore_realloc@plt>
   15c64:	ldr	ip, [r6, #4]
   15c68:	mov	r5, r0
   15c6c:	str	r0, [r6]
   15c70:	rsb	ip, ip, ip, lsl #3
   15c74:	mov	r3, #0
   15c78:	lsl	ip, ip, #2
   15c7c:	add	r2, r5, ip
   15c80:	str	r3, [r5, ip]
   15c84:	mov	r0, r4
   15c88:	str	r3, [r2, #8]
   15c8c:	str	r3, [r2, #12]
   15c90:	str	r3, [r2, #16]
   15c94:	str	r3, [r2, #20]
   15c98:	str	r3, [r2, #24]
   15c9c:	pop	{r4, r5, r6, r7, r8, pc}

00015ca0 <__mtree_insert_to_start@@Base>:
   15ca0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ca4:	subs	r4, r1, #0
   15ca8:	sub	sp, sp, #8
   15cac:	ldr	r6, [r0]
   15cb0:	beq	15e3c <__mtree_insert_to_start@@Base+0x19c>
   15cb4:	mov	r8, r2
   15cb8:	lsl	r2, r4, #3
   15cbc:	mov	r7, r3
   15cc0:	sub	r3, r2, r4
   15cc4:	mov	r9, r0
   15cc8:	add	r3, r6, r3, lsl #2
   15ccc:	ldr	r5, [r3, #4]
   15cd0:	b	15cfc <__mtree_insert_to_start@@Base+0x5c>
   15cd4:	ldr	r3, [sl, #20]
   15cd8:	cmp	r3, #0
   15cdc:	beq	15da8 <__mtree_insert_to_start@@Base+0x108>
   15ce0:	rsb	r2, r3, r3, lsl #3
   15ce4:	add	r2, r6, r2, lsl #2
   15ce8:	ldr	r5, [r2, #4]
   15cec:	cmp	r7, r5
   15cf0:	bcc	15da8 <__mtree_insert_to_start@@Base+0x108>
   15cf4:	mov	r4, r3
   15cf8:	lsl	r2, r4, #3
   15cfc:	sub	r2, r2, r4
   15d00:	cmp	r7, r5
   15d04:	add	sl, r6, r2, lsl #2
   15d08:	beq	15d70 <__mtree_insert_to_start@@Base+0xd0>
   15d0c:	bhi	15cd4 <__mtree_insert_to_start@@Base+0x34>
   15d10:	ldr	r3, [sl, #16]
   15d14:	cmp	r3, #0
   15d18:	beq	15d30 <__mtree_insert_to_start@@Base+0x90>
   15d1c:	rsb	r2, r3, r3, lsl #3
   15d20:	add	r2, r6, r2, lsl #2
   15d24:	ldr	r5, [r2, #4]
   15d28:	cmp	r7, r5
   15d2c:	bls	15cf4 <__mtree_insert_to_start@@Base+0x54>
   15d30:	ldr	r3, [sp, #44]	; 0x2c
   15d34:	cmp	r3, #0
   15d38:	beq	15d4c <__mtree_insert_to_start@@Base+0xac>
   15d3c:	add	r2, sp, #40	; 0x28
   15d40:	mov	r1, r7
   15d44:	mov	r0, r8
   15d48:	blx	r3
   15d4c:	ldr	ip, [sp, #40]	; 0x28
   15d50:	mov	r3, r7
   15d54:	mov	r2, r8
   15d58:	mov	r1, r4
   15d5c:	mov	r0, r9
   15d60:	str	ip, [sp]
   15d64:	bl	100ac <mctree_insert_before@plt>
   15d68:	add	sp, sp, #8
   15d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d70:	ldr	r1, [r6, r2, lsl #2]
   15d74:	mov	r0, r8
   15d78:	mov	r2, r7
   15d7c:	bl	10070 <memcmp@plt>
   15d80:	cmp	r0, #0
   15d84:	beq	15de8 <__mtree_insert_to_start@@Base+0x148>
   15d88:	ldr	r3, [sl, #24]
   15d8c:	cmp	r3, #0
   15d90:	beq	15e00 <__mtree_insert_to_start@@Base+0x160>
   15d94:	rsb	r2, r3, r3, lsl #3
   15d98:	mov	r4, r3
   15d9c:	add	r3, r6, r2, lsl #2
   15da0:	ldr	r5, [r3, #4]
   15da4:	b	15cf8 <__mtree_insert_to_start@@Base+0x58>
   15da8:	ldr	r3, [sp, #44]	; 0x2c
   15dac:	cmp	r3, #0
   15db0:	beq	15dc4 <__mtree_insert_to_start@@Base+0x124>
   15db4:	add	r2, sp, #40	; 0x28
   15db8:	mov	r1, r7
   15dbc:	mov	r0, r8
   15dc0:	blx	r3
   15dc4:	ldr	ip, [sp, #40]	; 0x28
   15dc8:	mov	r3, r7
   15dcc:	mov	r2, r8
   15dd0:	mov	r1, r4
   15dd4:	mov	r0, r9
   15dd8:	str	ip, [sp]
   15ddc:	bl	10cc4 <mctree_insert_after@plt>
   15de0:	add	sp, sp, #8
   15de4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15de8:	ldr	r3, [sp, #40]	; 0x28
   15dec:	cmp	r3, #0
   15df0:	beq	15e3c <__mtree_insert_to_start@@Base+0x19c>
   15df4:	str	r3, [sl, #8]
   15df8:	mov	r0, r4
   15dfc:	b	15d68 <__mtree_insert_to_start@@Base+0xc8>
   15e00:	ldr	r3, [sp, #44]	; 0x2c
   15e04:	cmp	r3, #0
   15e08:	beq	15e1c <__mtree_insert_to_start@@Base+0x17c>
   15e0c:	add	r2, sp, #40	; 0x28
   15e10:	mov	r1, r5
   15e14:	mov	r0, r8
   15e18:	blx	r3
   15e1c:	ldr	ip, [sp, #40]	; 0x28
   15e20:	mov	r3, r5
   15e24:	mov	r2, r8
   15e28:	mov	r1, r4
   15e2c:	mov	r0, r9
   15e30:	str	ip, [sp]
   15e34:	bl	10244 <mctree_insert_child@plt>
   15e38:	b	15d68 <__mtree_insert_to_start@@Base+0xc8>
   15e3c:	mov	r0, r4
   15e40:	b	15d68 <__mtree_insert_to_start@@Base+0xc8>

00015e44 <mctree_insert@@Base>:
   15e44:	push	{r4, r5, r6, r7, lr}
   15e48:	sub	sp, sp, #20
   15e4c:	subs	r4, r2, #0
   15e50:	str	r3, [sp, #12]
   15e54:	moveq	r0, r4
   15e58:	beq	15ee0 <mctree_insert@@Base+0x9c>
   15e5c:	add	r3, r1, r4
   15e60:	ldrb	r2, [r1]
   15e64:	mov	r6, r0
   15e68:	ldrb	r0, [r3, #-1]
   15e6c:	ldr	r3, [pc, #156]	; 15f10 <mctree_insert@@Base+0xcc>
   15e70:	mov	r5, r1
   15e74:	add	r3, pc, r3
   15e78:	ldr	r1, [r6, #12]
   15e7c:	ldrb	r0, [r3, r0]
   15e80:	ldrb	r3, [r3, r2]
   15e84:	add	r0, r0, r3
   15e88:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   15e8c:	ldr	r3, [r6]
   15e90:	add	r7, r1, #1
   15e94:	rsb	r2, r7, r7, lsl #3
   15e98:	add	r3, r3, r2, lsl #2
   15e9c:	ldr	r1, [r3, #24]
   15ea0:	cmp	r1, #0
   15ea4:	bne	15ee8 <mctree_insert@@Base+0xa4>
   15ea8:	ldr	r3, [sp, #40]	; 0x28
   15eac:	cmp	r3, #0
   15eb0:	beq	15ec4 <mctree_insert@@Base+0x80>
   15eb4:	add	r2, sp, #12
   15eb8:	mov	r1, r4
   15ebc:	mov	r0, r5
   15ec0:	blx	r3
   15ec4:	ldr	ip, [sp, #12]
   15ec8:	mov	r3, r4
   15ecc:	mov	r2, r5
   15ed0:	mov	r1, r7
   15ed4:	mov	r0, r6
   15ed8:	str	ip, [sp]
   15edc:	bl	10244 <mctree_insert_child@plt>
   15ee0:	add	sp, sp, #20
   15ee4:	pop	{r4, r5, r6, r7, pc}
   15ee8:	ldr	r3, [sp, #40]	; 0x28
   15eec:	ldr	ip, [sp, #12]
   15ef0:	str	r3, [sp, #4]
   15ef4:	mov	r2, r5
   15ef8:	mov	r3, r4
   15efc:	mov	r0, r6
   15f00:	str	ip, [sp]
   15f04:	bl	103b8 <__mtree_insert_to_start@plt>
   15f08:	add	sp, sp, #20
   15f0c:	pop	{r4, r5, r6, r7, pc}
   15f10:	andeq	r7, r1, r0, ror #13

00015f14 <mctree_search@@Base>:
   15f14:	push	{r4, r5, r6, lr}
   15f18:	subs	r6, r2, #0
   15f1c:	beq	15f84 <mctree_search@@Base+0x70>
   15f20:	add	r3, r1, r6
   15f24:	mov	r4, r0
   15f28:	ldrb	r2, [r1]
   15f2c:	ldrb	r0, [r3, #-1]
   15f30:	ldr	r3, [pc, #84]	; 15f8c <mctree_search@@Base+0x78>
   15f34:	mov	r5, r1
   15f38:	add	r3, pc, r3
   15f3c:	ldr	r1, [r4, #12]
   15f40:	ldrb	r0, [r3, r0]
   15f44:	ldrb	r3, [r3, r2]
   15f48:	add	r0, r0, r3
   15f4c:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   15f50:	ldr	r3, [r4]
   15f54:	add	r1, r1, #1
   15f58:	rsb	r1, r1, r1, lsl #3
   15f5c:	add	r1, r3, r1, lsl #2
   15f60:	ldr	r0, [r1, #24]
   15f64:	cmp	r0, #0
   15f68:	popeq	{r4, r5, r6, pc}
   15f6c:	mov	r3, r6
   15f70:	mov	r2, r5
   15f74:	mov	r1, r0
   15f78:	mov	r0, r4
   15f7c:	pop	{r4, r5, r6, lr}
   15f80:	b	109e8 <__mtree_search_to_start@plt>
   15f84:	mov	r0, r6
   15f88:	pop	{r4, r5, r6, pc}
   15f8c:	andeq	r7, r1, ip, lsl r6

00015f90 <mctree_search_lowercase@@Base>:
   15f90:	push	{r4, r5, r6, lr}
   15f94:	subs	r6, r2, #0
   15f98:	beq	16000 <mctree_search_lowercase@@Base+0x70>
   15f9c:	add	r3, r1, r6
   15fa0:	mov	r4, r0
   15fa4:	ldrb	r2, [r1]
   15fa8:	ldrb	r0, [r3, #-1]
   15fac:	ldr	r3, [pc, #84]	; 16008 <mctree_search_lowercase@@Base+0x78>
   15fb0:	mov	r5, r1
   15fb4:	add	r3, pc, r3
   15fb8:	ldr	r1, [r4, #12]
   15fbc:	ldrb	r0, [r3, r0]
   15fc0:	ldrb	r3, [r3, r2]
   15fc4:	add	r0, r0, r3
   15fc8:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   15fcc:	ldr	r3, [r4]
   15fd0:	add	r1, r1, #1
   15fd4:	rsb	r1, r1, r1, lsl #3
   15fd8:	add	r1, r3, r1, lsl #2
   15fdc:	ldr	r0, [r1, #24]
   15fe0:	cmp	r0, #0
   15fe4:	popeq	{r4, r5, r6, pc}
   15fe8:	mov	r3, r6
   15fec:	mov	r2, r5
   15ff0:	mov	r1, r0
   15ff4:	mov	r0, r4
   15ff8:	pop	{r4, r5, r6, lr}
   15ffc:	b	10f1c <__mtree_search_lowercase_to_start@plt>
   16000:	mov	r0, r6
   16004:	pop	{r4, r5, r6, pc}
   16008:	andeq	r7, r1, r0, lsr #11

0001600c <mycore_utils_mhash_hash@@Base>:
   1600c:	cmp	r1, #0
   16010:	beq	16054 <mycore_utils_mhash_hash@@Base+0x48>
   16014:	push	{r4, lr}
   16018:	mov	r3, #0
   1601c:	add	lr, r0, r1
   16020:	ldrb	ip, [r0], #1
   16024:	add	r3, ip, r3
   16028:	cmp	lr, r0
   1602c:	add	r3, r3, r3, lsl #10
   16030:	eor	r3, r3, r3, lsr #6
   16034:	bne	16020 <mycore_utils_mhash_hash@@Base+0x14>
   16038:	add	r3, r3, r3, lsl #3
   1603c:	mov	r1, r2
   16040:	eor	r0, r3, r3, lsr #11
   16044:	add	r0, r0, r0, lsl #15
   16048:	bl	2d024 <mcsync_mutex_unlock@@Base+0x200>
   1604c:	mov	r0, r1
   16050:	pop	{r4, pc}
   16054:	mov	r0, r1
   16058:	bx	lr

0001605c <mycore_utils_mhash_create@@Base>:
   1605c:	mov	r1, #24
   16060:	mov	r0, #1
   16064:	b	ff14 <mycore_calloc@plt>

00016068 <mycore_utils_mhash_init@@Base>:
   16068:	push	{r4, r5, r6, r7, lr}
   1606c:	sub	sp, sp, #12
   16070:	mov	r5, r0
   16074:	mov	r6, r1
   16078:	mov	r7, r2
   1607c:	bl	10160 <mchar_async_create@plt>
   16080:	cmp	r0, #0
   16084:	str	r0, [r5]
   16088:	beq	160b4 <mycore_utils_mhash_init@@Base+0x4c>
   1608c:	mov	r2, #4096	; 0x1000
   16090:	mov	r1, #128	; 0x80
   16094:	bl	104a8 <mchar_async_init@plt>
   16098:	cmp	r0, #0
   1609c:	mov	r4, r0
   160a0:	str	r0, [sp, #4]
   160a4:	beq	160c4 <mycore_utils_mhash_init@@Base+0x5c>
   160a8:	mov	r0, r4
   160ac:	add	sp, sp, #12
   160b0:	pop	{r4, r5, r6, r7, pc}
   160b4:	mov	r4, #2
   160b8:	mov	r0, r4
   160bc:	add	sp, sp, #12
   160c0:	pop	{r4, r5, r6, r7, pc}
   160c4:	add	r1, sp, #4
   160c8:	ldr	r0, [r5]
   160cc:	bl	10298 <mchar_async_node_add@plt>
   160d0:	ldr	r4, [sp, #4]
   160d4:	cmp	r4, #0
   160d8:	str	r0, [r5, #4]
   160dc:	bne	160a8 <mycore_utils_mhash_init@@Base+0x40>
   160e0:	cmp	r6, #128	; 0x80
   160e4:	movcc	r6, #128	; 0x80
   160e8:	mov	r0, r6
   160ec:	mov	r1, #4
   160f0:	bl	ff14 <mycore_calloc@plt>
   160f4:	cmp	r0, #0
   160f8:	str	r0, [r5, #8]
   160fc:	beq	160b4 <mycore_utils_mhash_init@@Base+0x4c>
   16100:	cmp	r7, #0
   16104:	moveq	r7, #1
   16108:	str	r7, [r5, #20]
   1610c:	str	r6, [r5, #12]
   16110:	b	160a8 <mycore_utils_mhash_init@@Base+0x40>

00016114 <mycore_utils_mhash_clean@@Base>:
   16114:	push	{r4, lr}
   16118:	mov	r4, r0
   1611c:	ldr	r0, [r0]
   16120:	bl	10bc8 <mchar_async_clean@plt>
   16124:	ldr	r2, [r4, #12]
   16128:	ldr	r0, [r4, #8]
   1612c:	mov	r1, #0
   16130:	lsl	r2, r2, #2
   16134:	pop	{r4, lr}
   16138:	b	108b0 <memset@plt>

0001613c <mycore_utils_mhash_destroy@@Base>:
   1613c:	push	{r4, r5, r6, lr}
   16140:	subs	r4, r0, #0
   16144:	beq	1616c <mycore_utils_mhash_destroy@@Base+0x30>
   16148:	ldr	r0, [r4, #8]
   1614c:	mov	r5, r1
   16150:	cmp	r0, #0
   16154:	beq	16164 <mycore_utils_mhash_destroy@@Base+0x28>
   16158:	bl	10dcc <mycore_free@plt>
   1615c:	mov	r3, #0
   16160:	str	r3, [r4, #8]
   16164:	cmp	r5, #0
   16168:	bne	16174 <mycore_utils_mhash_destroy@@Base+0x38>
   1616c:	mov	r0, r4
   16170:	pop	{r4, r5, r6, pc}
   16174:	ldr	r0, [r4, #8]
   16178:	bl	10dcc <mycore_free@plt>
   1617c:	mov	r4, #0
   16180:	b	1616c <mycore_utils_mhash_destroy@@Base+0x30>

00016184 <mycore_utils_mhash_create_entry@@Base>:
   16184:	push	{r4, r5, r6, r7, r8, lr}
   16188:	mov	r5, r0
   1618c:	mov	r6, r2
   16190:	mov	r8, r1
   16194:	mov	r2, #16
   16198:	ldm	r0, {r0, r1}
   1619c:	mov	r7, r3
   161a0:	bl	10910 <mchar_async_malloc@plt>
   161a4:	add	r2, r6, #1
   161a8:	mov	r4, r0
   161ac:	ldm	r5, {r0, r1}
   161b0:	bl	10910 <mchar_async_malloc@plt>
   161b4:	cmp	r0, #0
   161b8:	str	r0, [r4]
   161bc:	beq	161e8 <mycore_utils_mhash_create_entry@@Base+0x64>
   161c0:	mov	r2, r6
   161c4:	mov	r1, r8
   161c8:	bl	ff5c <memcpy@plt>
   161cc:	ldr	r2, [r4]
   161d0:	mov	r3, #0
   161d4:	strb	r3, [r2, r6]
   161d8:	str	r3, [r4, #12]
   161dc:	stmib	r4, {r6, r7}
   161e0:	mov	r0, r4
   161e4:	pop	{r4, r5, r6, r7, r8, pc}
   161e8:	mov	r3, r0
   161ec:	mov	r2, r4
   161f0:	ldm	r5, {r0, r1}
   161f4:	mov	r4, r3
   161f8:	bl	10718 <mchar_async_free@plt>
   161fc:	b	161e0 <mycore_utils_mhash_create_entry@@Base+0x5c>

00016200 <mycore_utils_mhash_search@@Base>:
   16200:	cmp	r2, #0
   16204:	cmpne	r1, #0
   16208:	push	{r4, r5, r6, lr}
   1620c:	beq	16278 <mycore_utils_mhash_search@@Base+0x78>
   16210:	mov	r5, r2
   16214:	mov	r6, r1
   16218:	mov	r4, r0
   1621c:	ldr	r2, [r0, #12]
   16220:	mov	r1, r5
   16224:	mov	r0, r6
   16228:	bl	1007c <mycore_utils_mhash_hash@plt>
   1622c:	ldr	r3, [r4, #8]
   16230:	ldr	r4, [r3, r0, lsl #2]
   16234:	cmp	r4, #0
   16238:	bne	1624c <mycore_utils_mhash_search@@Base+0x4c>
   1623c:	b	16278 <mycore_utils_mhash_search@@Base+0x78>
   16240:	ldr	r4, [r4, #12]
   16244:	cmp	r4, #0
   16248:	beq	16278 <mycore_utils_mhash_search@@Base+0x78>
   1624c:	ldr	r3, [r4, #4]
   16250:	cmp	r5, r3
   16254:	bne	16240 <mycore_utils_mhash_search@@Base+0x40>
   16258:	mov	r2, r5
   1625c:	mov	r1, r6
   16260:	ldr	r0, [r4]
   16264:	bl	10f94 <strncmp@plt>
   16268:	cmp	r0, #0
   1626c:	bne	16240 <mycore_utils_mhash_search@@Base+0x40>
   16270:	mov	r0, r4
   16274:	pop	{r4, r5, r6, pc}
   16278:	mov	r4, #0
   1627c:	mov	r0, r4
   16280:	pop	{r4, r5, r6, pc}

00016284 <mycore_utils_mhash_entry_by_id@@Base>:
   16284:	ldr	r3, [r0, #12]
   16288:	cmp	r3, r1
   1628c:	ldrhi	r3, [r0, #8]
   16290:	ldrhi	r0, [r3, r1, lsl #2]
   16294:	movls	r0, #0
   16298:	bx	lr

0001629c <mycore_utils_mhash_get_table_size@@Base>:
   1629c:	ldr	r0, [r0, #12]
   162a0:	bx	lr

000162a4 <mycore_utils_mhash_rebuild_add_entry@@Base>:
   162a4:	cmp	r2, #0
   162a8:	cmpne	r1, #0
   162ac:	moveq	ip, #1
   162b0:	movne	ip, #0
   162b4:	beq	16308 <mycore_utils_mhash_rebuild_add_entry@@Base+0x64>
   162b8:	push	{r4, r5, r6, lr}
   162bc:	mov	r5, r0
   162c0:	str	ip, [r3, #12]
   162c4:	mov	r0, r1
   162c8:	mov	r1, r2
   162cc:	ldr	r2, [r5, #12]
   162d0:	mov	r4, r3
   162d4:	bl	1007c <mycore_utils_mhash_hash@plt>
   162d8:	ldr	r3, [r5, #8]
   162dc:	ldr	r1, [r3, r0, lsl #2]
   162e0:	cmp	r1, #0
   162e4:	bne	162f0 <mycore_utils_mhash_rebuild_add_entry@@Base+0x4c>
   162e8:	b	16310 <mycore_utils_mhash_rebuild_add_entry@@Base+0x6c>
   162ec:	mov	r1, r2
   162f0:	ldr	r2, [r1, #12]
   162f4:	cmp	r2, #0
   162f8:	bne	162ec <mycore_utils_mhash_rebuild_add_entry@@Base+0x48>
   162fc:	str	r4, [r1, #12]
   16300:	mov	r0, r4
   16304:	pop	{r4, r5, r6, pc}
   16308:	mov	r0, #0
   1630c:	bx	lr
   16310:	str	r4, [r3, r0, lsl #2]
   16314:	mov	r0, r4
   16318:	pop	{r4, r5, r6, pc}

0001631c <mycore_utils_mhash_rebuld@@Base>:
   1631c:	push	{r4, r5, r6, r7, r8, lr}
   16320:	mov	r5, r0
   16324:	ldr	r4, [r0, #12]
   16328:	ldr	r8, [r0, #8]
   1632c:	mov	r1, #4
   16330:	lsl	r0, r4, #1
   16334:	str	r0, [r5, #12]
   16338:	bl	ff14 <mycore_calloc@plt>
   1633c:	cmp	r0, #0
   16340:	str	r0, [r5, #8]
   16344:	beq	163a4 <mycore_utils_mhash_rebuld@@Base+0x88>
   16348:	ldr	r3, [r5, #12]
   1634c:	cmp	r3, #0
   16350:	subne	r7, r8, #4
   16354:	movne	r6, #0
   16358:	beq	16394 <mycore_utils_mhash_rebuld@@Base+0x78>
   1635c:	ldr	r4, [r7, #4]!
   16360:	cmp	r4, #0
   16364:	beq	16388 <mycore_utils_mhash_rebuld@@Base+0x6c>
   16368:	mov	r3, r4
   1636c:	ldm	r4, {r1, r2}
   16370:	mov	r0, r5
   16374:	bl	10ea4 <mycore_utils_mhash_rebuild_add_entry@plt>
   16378:	ldr	r4, [r4, #12]
   1637c:	cmp	r4, #0
   16380:	bne	16368 <mycore_utils_mhash_rebuld@@Base+0x4c>
   16384:	ldr	r3, [r5, #12]
   16388:	add	r6, r6, #1
   1638c:	cmp	r3, r6
   16390:	bhi	1635c <mycore_utils_mhash_rebuld@@Base+0x40>
   16394:	mov	r0, r8
   16398:	bl	10dcc <mycore_free@plt>
   1639c:	ldr	r0, [r5, #8]
   163a0:	pop	{r4, r5, r6, r7, r8, pc}
   163a4:	str	r8, [r5, #8]
   163a8:	str	r4, [r5, #12]
   163ac:	pop	{r4, r5, r6, r7, r8, pc}

000163b0 <mycore_utils_mhash_add_with_choice@@Base>:
   163b0:	cmp	r2, #0
   163b4:	cmpne	r1, #0
   163b8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163bc:	moveq	r5, #1
   163c0:	movne	r5, #0
   163c4:	moveq	r6, #0
   163c8:	beq	16444 <mycore_utils_mhash_add_with_choice@@Base+0x94>
   163cc:	mov	r6, r2
   163d0:	mov	r7, r1
   163d4:	mov	r8, r0
   163d8:	ldr	r2, [r0, #12]
   163dc:	mov	r1, r6
   163e0:	mov	r0, r7
   163e4:	bl	1007c <mycore_utils_mhash_hash@plt>
   163e8:	ldr	r3, [r8, #8]
   163ec:	ldr	r4, [r3, r0, lsl #2]
   163f0:	lsl	fp, r0, #2
   163f4:	cmp	r4, #0
   163f8:	mov	r9, r0
   163fc:	add	sl, r3, fp
   16400:	bne	1641c <mycore_utils_mhash_add_with_choice@@Base+0x6c>
   16404:	b	16480 <mycore_utils_mhash_add_with_choice@@Base+0xd0>
   16408:	ldr	r3, [r4, #12]
   1640c:	cmp	r3, #0
   16410:	beq	1644c <mycore_utils_mhash_add_with_choice@@Base+0x9c>
   16414:	add	r5, r5, #1
   16418:	mov	r4, r3
   1641c:	ldr	r3, [r4, #4]
   16420:	cmp	r6, r3
   16424:	bne	16408 <mycore_utils_mhash_add_with_choice@@Base+0x58>
   16428:	mov	r2, r6
   1642c:	mov	r1, r7
   16430:	ldr	r0, [r4]
   16434:	bl	10f94 <strncmp@plt>
   16438:	cmp	r0, #0
   1643c:	bne	16408 <mycore_utils_mhash_add_with_choice@@Base+0x58>
   16440:	mov	r6, r4
   16444:	mov	r0, r6
   16448:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1644c:	mov	r2, r6
   16450:	mov	r1, r7
   16454:	mov	r0, r8
   16458:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   1645c:	ldr	r3, [r8, #20]
   16460:	cmp	r5, r3
   16464:	mov	r6, r0
   16468:	str	r0, [r4, #12]
   1646c:	bls	16444 <mycore_utils_mhash_add_with_choice@@Base+0x94>
   16470:	mov	r0, r8
   16474:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   16478:	mov	r0, r6
   1647c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16480:	ldr	r3, [r8, #12]
   16484:	ldr	r2, [r8, #16]
   16488:	sub	r3, r3, r3, lsr #2
   1648c:	cmp	r2, r3
   16490:	bcc	164a4 <mycore_utils_mhash_add_with_choice@@Base+0xf4>
   16494:	mov	r0, r8
   16498:	bl	10a48 <mycore_utils_mhash_rebuld@plt>
   1649c:	ldr	sl, [r8, #8]
   164a0:	add	sl, sl, fp
   164a4:	mov	r2, r6
   164a8:	mov	r1, r7
   164ac:	mov	r3, #0
   164b0:	mov	r0, r8
   164b4:	bl	10ef8 <mycore_utils_mhash_create_entry@plt>
   164b8:	ldr	r3, [r8, #8]
   164bc:	str	r0, [sl]
   164c0:	ldr	r6, [r3, r9, lsl #2]
   164c4:	mov	r0, r6
   164c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

000164cc <mycore_utils_mhash_add@@Base>:
   164cc:	push	{r4, lr}
   164d0:	mov	r4, r3
   164d4:	bl	10db4 <mycore_utils_mhash_add_with_choice@plt>
   164d8:	cmp	r0, #0
   164dc:	strne	r4, [r0, #8]
   164e0:	pop	{r4, pc}

000164e4 <myencoding_detect_by_trigram@@Base>:
   164e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164e8:	sub	sp, sp, #28
   164ec:	subs	sl, r2, #3
   164f0:	str	r2, [sp, #16]
   164f4:	str	r0, [sp, #20]
   164f8:	str	r3, [sp, #12]
   164fc:	ldr	r7, [sp, #64]	; 0x40
   16500:	beq	165d0 <myencoding_detect_by_trigram@@Base+0xec>
   16504:	mov	r3, #0
   16508:	mov	r9, r1
   1650c:	str	r3, [sp, #8]
   16510:	str	r3, [sp, #4]
   16514:	mov	r5, r3
   16518:	mov	r8, #3
   1651c:	b	1652c <myencoding_detect_by_trigram@@Base+0x48>
   16520:	add	r5, r5, #1
   16524:	cmp	r5, sl
   16528:	bcs	165b0 <myencoding_detect_by_trigram@@Base+0xcc>
   1652c:	ldrsb	r3, [r9, r5]
   16530:	add	r6, r9, r5
   16534:	cmp	r3, #0
   16538:	bge	16520 <myencoding_detect_by_trigram@@Base+0x3c>
   1653c:	cmp	r7, #0
   16540:	beq	16520 <myencoding_detect_by_trigram@@Base+0x3c>
   16544:	ldr	r4, [sp, #12]
   16548:	mov	fp, #0
   1654c:	b	1655c <myencoding_detect_by_trigram@@Base+0x78>
   16550:	cmp	r7, fp
   16554:	add	r4, r4, #8
   16558:	beq	16520 <myencoding_detect_by_trigram@@Base+0x3c>
   1655c:	mov	r2, r8
   16560:	mov	r1, r6
   16564:	mov	r0, r4
   16568:	bl	10070 <memcmp@plt>
   1656c:	add	fp, fp, #1
   16570:	cmp	r0, #0
   16574:	bne	16550 <myencoding_detect_by_trigram@@Base+0x6c>
   16578:	ldr	r2, [sp, #4]
   1657c:	ldr	r3, [r4, #4]
   16580:	add	r2, r2, #1
   16584:	str	r2, [sp, #4]
   16588:	ldr	r2, [sp, #8]
   1658c:	ldr	r1, [sp, #68]	; 0x44
   16590:	add	r3, r2, r3
   16594:	ldr	r2, [sp, #16]
   16598:	cmp	r3, r1
   1659c:	movcs	r5, r2
   165a0:	add	r5, r5, #1
   165a4:	cmp	r5, sl
   165a8:	str	r3, [sp, #8]
   165ac:	bcc	1652c <myencoding_detect_by_trigram@@Base+0x48>
   165b0:	ldr	r3, [sp, #20]
   165b4:	ldr	r2, [sp, #4]
   165b8:	mov	r0, r3
   165bc:	str	r2, [r3]
   165c0:	ldr	r2, [sp, #8]
   165c4:	str	r2, [r3, #4]
   165c8:	add	sp, sp, #28
   165cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   165d0:	str	sl, [sp, #8]
   165d4:	str	sl, [sp, #4]
   165d8:	b	165b0 <myencoding_detect_by_trigram@@Base+0xcc>

000165dc <myencoding_detect_russian_has_end@@Base>:
   165dc:	ldr	r3, [r0, #4]
   165e0:	cmp	r3, r2
   165e4:	bcs	165fc <myencoding_detect_russian_has_end@@Base+0x20>
   165e8:	ldr	r0, [r0]
   165ec:	cmp	r0, r1
   165f0:	movcc	r0, #0
   165f4:	movcs	r0, #1
   165f8:	bx	lr
   165fc:	mov	r0, #1
   16600:	bx	lr

00016604 <myencoding_detect_unicode_has_end@@Base>:
   16604:	ldr	r3, [r0, #4]
   16608:	cmp	r3, #0
   1660c:	bne	16620 <myencoding_detect_unicode_has_end@@Base+0x1c>
   16610:	ldr	r0, [r0, #8]
   16614:	clz	r0, r0
   16618:	lsr	r0, r0, #5
   1661c:	bx	lr
   16620:	ldr	r2, [r0, #8]
   16624:	cmp	r2, #0
   16628:	beq	16654 <myencoding_detect_unicode_has_end@@Base+0x50>
   1662c:	mov	r0, #100	; 0x64
   16630:	push	{r4, lr}
   16634:	mul	r0, r0, r2
   16638:	mov	r4, r1
   1663c:	mov	r1, r3
   16640:	bl	2ce38 <mcsync_mutex_unlock@@Base+0x14>
   16644:	cmp	r0, r4
   16648:	movcs	r0, #0
   1664c:	movcc	r0, #1
   16650:	pop	{r4, pc}
   16654:	mov	r0, #1
   16658:	bx	lr

0001665c <myencoding_detect_utf_8@@Base>:
   1665c:	cmp	r2, #0
   16660:	push	{r4, r5, r6, lr}
   16664:	beq	16750 <myencoding_detect_utf_8@@Base+0xf4>
   16668:	mov	r4, #0
   1666c:	mov	r6, r4
   16670:	mov	lr, r4
   16674:	mov	r3, r4
   16678:	b	1668c <myencoding_detect_utf_8@@Base+0x30>
   1667c:	add	r3, r3, #1
   16680:	add	lr, lr, #1
   16684:	cmp	r2, r3
   16688:	bls	1675c <myencoding_detect_utf_8@@Base+0x100>
   1668c:	ldrb	ip, [r1, r3]
   16690:	tst	ip, #128	; 0x80
   16694:	beq	1667c <myencoding_detect_utf_8@@Base+0x20>
   16698:	and	r5, ip, #224	; 0xe0
   1669c:	cmp	r5, #192	; 0xc0
   166a0:	beq	166ec <myencoding_detect_utf_8@@Base+0x90>
   166a4:	and	r5, ip, #240	; 0xf0
   166a8:	cmp	r5, #224	; 0xe0
   166ac:	beq	1671c <myencoding_detect_utf_8@@Base+0xc0>
   166b0:	and	ip, ip, #248	; 0xf8
   166b4:	cmp	ip, #240	; 0xf0
   166b8:	addne	r3, r3, #1
   166bc:	addne	r4, r4, #1
   166c0:	bne	16684 <myencoding_detect_utf_8@@Base+0x28>
   166c4:	add	ip, r3, #4
   166c8:	cmp	r2, ip
   166cc:	bls	1675c <myencoding_detect_utf_8@@Base+0x100>
   166d0:	add	r3, r1, r3
   166d4:	ldrb	r5, [r3, #3]
   166d8:	tst	r5, #128	; 0x80
   166dc:	bne	1676c <myencoding_detect_utf_8@@Base+0x110>
   166e0:	add	r4, r4, #1
   166e4:	mov	r3, ip
   166e8:	b	1668c <myencoding_detect_utf_8@@Base+0x30>
   166ec:	add	ip, r3, #2
   166f0:	cmp	r2, ip
   166f4:	bls	1675c <myencoding_detect_utf_8@@Base+0x100>
   166f8:	add	r3, r1, r3
   166fc:	ldrb	r3, [r3, #1]
   16700:	tst	r3, #128	; 0x80
   16704:	beq	166e0 <myencoding_detect_utf_8@@Base+0x84>
   16708:	tst	r3, #64	; 0x40
   1670c:	addeq	r6, r6, #1
   16710:	moveq	r3, ip
   16714:	beq	1668c <myencoding_detect_utf_8@@Base+0x30>
   16718:	b	166e0 <myencoding_detect_utf_8@@Base+0x84>
   1671c:	add	ip, r3, #3
   16720:	cmp	r2, ip
   16724:	bls	1675c <myencoding_detect_utf_8@@Base+0x100>
   16728:	add	r3, r1, r3
   1672c:	ldrb	r5, [r3, #2]
   16730:	tst	r5, #128	; 0x80
   16734:	beq	166e0 <myencoding_detect_utf_8@@Base+0x84>
   16738:	tst	r5, #64	; 0x40
   1673c:	bne	166e0 <myencoding_detect_utf_8@@Base+0x84>
   16740:	ldrb	r3, [r3, #1]
   16744:	tst	r3, #128	; 0x80
   16748:	beq	166e0 <myencoding_detect_utf_8@@Base+0x84>
   1674c:	b	16708 <myencoding_detect_utf_8@@Base+0xac>
   16750:	mov	r4, r2
   16754:	mov	r6, r2
   16758:	mov	lr, r2
   1675c:	str	lr, [r0]
   16760:	str	r6, [r0, #4]
   16764:	str	r4, [r0, #8]
   16768:	pop	{r4, r5, r6, pc}
   1676c:	tst	r5, #64	; 0x40
   16770:	bne	166e0 <myencoding_detect_utf_8@@Base+0x84>
   16774:	ldrb	r5, [r3, #2]
   16778:	tst	r5, #128	; 0x80
   1677c:	beq	166e0 <myencoding_detect_utf_8@@Base+0x84>
   16780:	b	16738 <myencoding_detect_utf_8@@Base+0xdc>

00016784 <myencoding_detect_utf_16@@Base>:
   16784:	cmp	r2, #0
   16788:	push	{r4, r5, lr}
   1678c:	beq	16804 <myencoding_detect_utf_16@@Base+0x80>
   16790:	mov	r4, #0
   16794:	mov	r5, r4
   16798:	mov	r3, #1
   1679c:	b	167bc <myencoding_detect_utf_16@@Base+0x38>
   167a0:	ldrb	ip, [r1]
   167a4:	sub	ip, ip, #32
   167a8:	cmp	ip, #94	; 0x5e
   167ac:	addls	r4, r4, #1
   167b0:	cmp	r2, r3
   167b4:	add	r3, r3, #1
   167b8:	bls	167f0 <myencoding_detect_utf_16@@Base+0x6c>
   167bc:	ldrb	ip, [r1], #1
   167c0:	sub	lr, r3, #1
   167c4:	cmp	ip, #0
   167c8:	bne	167b0 <myencoding_detect_utf_16@@Base+0x2c>
   167cc:	tst	lr, #1
   167d0:	beq	167a0 <myencoding_detect_utf_16@@Base+0x1c>
   167d4:	ldrb	ip, [r1, #-2]
   167d8:	sub	ip, ip, #32
   167dc:	cmp	ip, #94	; 0x5e
   167e0:	addls	r5, r5, #1
   167e4:	cmp	r2, r3
   167e8:	add	r3, r3, #1
   167ec:	bhi	167bc <myencoding_detect_utf_16@@Base+0x38>
   167f0:	mov	r3, #0
   167f4:	str	r5, [r0, #4]
   167f8:	str	r4, [r0, #8]
   167fc:	str	r3, [r0]
   16800:	pop	{r4, r5, pc}
   16804:	mov	r4, r2
   16808:	mov	r5, r2
   1680c:	b	167f0 <myencoding_detect_utf_16@@Base+0x6c>

00016810 <myencoding_detect_bom@@Base>:
   16810:	cmp	r1, #2
   16814:	bls	16848 <myencoding_detect_bom@@Base+0x38>
   16818:	ldrb	r3, [r0]
   1681c:	cmp	r3, #239	; 0xef
   16820:	beq	16874 <myencoding_detect_bom@@Base+0x64>
   16824:	cmp	r3, #254	; 0xfe
   16828:	beq	16858 <myencoding_detect_bom@@Base+0x48>
   1682c:	cmp	r3, #255	; 0xff
   16830:	bne	16840 <myencoding_detect_bom@@Base+0x30>
   16834:	ldrb	r3, [r0, #1]
   16838:	cmp	r3, #254	; 0xfe
   1683c:	beq	1689c <myencoding_detect_bom@@Base+0x8c>
   16840:	mov	r0, #0
   16844:	bx	lr
   16848:	bne	16840 <myencoding_detect_bom@@Base+0x30>
   1684c:	ldrb	r3, [r0]
   16850:	cmp	r3, #254	; 0xfe
   16854:	bne	1682c <myencoding_detect_bom@@Base+0x1c>
   16858:	ldrb	r3, [r0, #1]
   1685c:	cmp	r3, #255	; 0xff
   16860:	bne	16840 <myencoding_detect_bom@@Base+0x30>
   16864:	mov	r3, #5
   16868:	str	r3, [r2]
   1686c:	mov	r0, #1
   16870:	bx	lr
   16874:	ldrb	r3, [r0, #1]
   16878:	cmp	r3, #187	; 0xbb
   1687c:	bne	16840 <myencoding_detect_bom@@Base+0x30>
   16880:	ldrb	r3, [r0, #2]
   16884:	cmp	r3, #191	; 0xbf
   16888:	bne	16840 <myencoding_detect_bom@@Base+0x30>
   1688c:	mov	r3, #0
   16890:	str	r3, [r2]
   16894:	mov	r0, #1
   16898:	bx	lr
   1689c:	mov	r3, #4
   168a0:	str	r3, [r2]
   168a4:	mov	r0, #1
   168a8:	bx	lr

000168ac <myencoding_detect_and_cut_bom@@Base>:
   168ac:	push	{r4, r5, r6, r7, r8, lr}
   168b0:	mov	r7, r3
   168b4:	mov	r5, r0
   168b8:	mov	r4, r1
   168bc:	mov	r6, r2
   168c0:	bl	10214 <myencoding_detect_bom@plt>
   168c4:	cmp	r0, #0
   168c8:	popeq	{r4, r5, r6, r7, r8, pc}
   168cc:	ldr	r3, [r6]
   168d0:	cmp	r3, #0
   168d4:	ldr	r3, [sp, #24]
   168d8:	addeq	r5, r5, #3
   168dc:	subeq	r4, r4, #3
   168e0:	addne	r5, r5, #2
   168e4:	subne	r4, r4, #2
   168e8:	str	r5, [r7]
   168ec:	str	r4, [r3]
   168f0:	pop	{r4, r5, r6, r7, r8, pc}

000168f4 <myencoding_detect_unicode@@Base>:
   168f4:	push	{r4, r5, r6, r7, lr}
   168f8:	sub	sp, sp, #36	; 0x24
   168fc:	mov	r3, #0
   16900:	add	r4, sp, #20
   16904:	str	r3, [r2]
   16908:	mov	r6, r2
   1690c:	mov	r5, r0
   16910:	mov	r2, r1
   16914:	mov	r7, r1
   16918:	mov	r1, r0
   1691c:	mov	r0, r4
   16920:	bl	fed8 <myencoding_detect_utf_16@plt>
   16924:	ldr	r3, [sp, #28]
   16928:	cmp	r3, #0
   1692c:	bne	16974 <myencoding_detect_unicode@@Base+0x80>
   16930:	ldr	r3, [sp, #24]
   16934:	cmp	r3, #2
   16938:	bhi	1699c <myencoding_detect_unicode@@Base+0xa8>
   1693c:	mov	r2, r7
   16940:	mov	r1, r5
   16944:	mov	r0, sp
   16948:	bl	11018 <myencoding_detect_utf_8@plt>
   1694c:	ldm	sp, {r0, r1, r2}
   16950:	stm	r4, {r0, r1, r2}
   16954:	mov	r0, r4
   16958:	mov	r1, #10
   1695c:	bl	10a6c <myencoding_detect_unicode_has_end@plt>
   16960:	cmp	r0, #0
   16964:	movne	r3, #0
   16968:	strne	r3, [r6]
   1696c:	add	sp, sp, #36	; 0x24
   16970:	pop	{r4, r5, r6, r7, pc}
   16974:	cmp	r3, #2
   16978:	bls	1693c <myencoding_detect_unicode@@Base+0x48>
   1697c:	ldr	r3, [sp, #24]
   16980:	cmp	r3, #0
   16984:	bne	1693c <myencoding_detect_unicode@@Base+0x48>
   16988:	mov	r3, #5
   1698c:	mov	r0, #1
   16990:	str	r3, [r6]
   16994:	add	sp, sp, #36	; 0x24
   16998:	pop	{r4, r5, r6, r7, pc}
   1699c:	mov	r3, #4
   169a0:	mov	r0, #1
   169a4:	str	r3, [r6]
   169a8:	add	sp, sp, #36	; 0x24
   169ac:	pop	{r4, r5, r6, r7, pc}

000169b0 <myencoding_detect_russian@@Base>:
   169b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   169b4:	mov	r6, r2
   169b8:	sub	sp, sp, #24
   169bc:	mov	r2, #0
   169c0:	mov	r3, #1000	; 0x3e8
   169c4:	str	r2, [r6]
   169c8:	ldr	r5, [pc, #496]	; 16bc0 <myencoding_detect_russian@@Base+0x210>
   169cc:	str	r3, [sp]
   169d0:	ldr	r3, [pc, #492]	; 16bc4 <myencoding_detect_russian@@Base+0x214>
   169d4:	add	r4, sp, #16
   169d8:	add	r3, pc, r3
   169dc:	mov	r2, r1
   169e0:	mov	r7, r0
   169e4:	mov	r8, r1
   169e8:	str	r5, [sp, #4]
   169ec:	mov	r1, r0
   169f0:	mov	r0, r4
   169f4:	bl	1070c <myencoding_detect_by_trigram@plt>
   169f8:	mov	r2, r5
   169fc:	mov	r0, r4
   16a00:	mov	r1, #50	; 0x32
   16a04:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16a08:	cmp	r0, #0
   16a0c:	movne	r3, #32
   16a10:	strne	r3, [r6]
   16a14:	bne	16bb8 <myencoding_detect_russian@@Base+0x208>
   16a18:	ldr	r9, [sp, #20]
   16a1c:	ldr	sl, [pc, #412]	; 16bc0 <myencoding_detect_russian@@Base+0x210>
   16a20:	cmp	r9, #0
   16a24:	movne	r3, #32
   16a28:	strne	r3, [r6]
   16a2c:	ldr	r3, [pc, #404]	; 16bc8 <myencoding_detect_russian@@Base+0x218>
   16a30:	add	r5, sp, #8
   16a34:	mov	r2, #1000	; 0x3e8
   16a38:	add	r3, pc, r3
   16a3c:	sub	r3, r3, #136	; 0x88
   16a40:	mov	r0, r5
   16a44:	str	r2, [sp]
   16a48:	mov	r1, r7
   16a4c:	mov	r2, r8
   16a50:	str	sl, [sp, #4]
   16a54:	bl	1070c <myencoding_detect_by_trigram@plt>
   16a58:	ldm	r5, {r0, r1}
   16a5c:	mov	r2, sl
   16a60:	stm	r4, {r0, r1}
   16a64:	mov	r1, #50	; 0x32
   16a68:	mov	r0, r4
   16a6c:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16a70:	cmp	r0, #0
   16a74:	movne	r3, #27
   16a78:	strne	r3, [r6]
   16a7c:	bne	16bb8 <myencoding_detect_russian@@Base+0x208>
   16a80:	ldr	r3, [sp, #20]
   16a84:	ldr	sl, [pc, #308]	; 16bc0 <myencoding_detect_russian@@Base+0x210>
   16a88:	cmp	r9, r3
   16a8c:	movcc	r9, r3
   16a90:	movcc	r3, #27
   16a94:	strcc	r3, [r6]
   16a98:	ldr	r3, [pc, #300]	; 16bcc <myencoding_detect_russian@@Base+0x21c>
   16a9c:	mov	r2, #1000	; 0x3e8
   16aa0:	add	r3, pc, r3
   16aa4:	sub	r3, r3, #272	; 0x110
   16aa8:	stm	sp, {r2, sl}
   16aac:	mov	r1, r7
   16ab0:	mov	r2, r8
   16ab4:	mov	r0, r5
   16ab8:	bl	1070c <myencoding_detect_by_trigram@plt>
   16abc:	ldm	r5, {r0, r1}
   16ac0:	mov	r2, sl
   16ac4:	stm	r4, {r0, r1}
   16ac8:	mov	r1, #50	; 0x32
   16acc:	mov	r0, r4
   16ad0:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16ad4:	cmp	r0, #0
   16ad8:	movne	r3, #22
   16adc:	strne	r3, [r6]
   16ae0:	bne	16bb8 <myencoding_detect_russian@@Base+0x208>
   16ae4:	ldr	r3, [sp, #20]
   16ae8:	ldr	sl, [pc, #208]	; 16bc0 <myencoding_detect_russian@@Base+0x210>
   16aec:	cmp	r9, r3
   16af0:	movcc	r9, r3
   16af4:	movcc	r3, #22
   16af8:	strcc	r3, [r6]
   16afc:	ldr	r3, [pc, #204]	; 16bd0 <myencoding_detect_russian@@Base+0x220>
   16b00:	mov	r2, #1000	; 0x3e8
   16b04:	add	r3, pc, r3
   16b08:	sub	r3, r3, #408	; 0x198
   16b0c:	stm	sp, {r2, sl}
   16b10:	mov	r1, r7
   16b14:	mov	r2, r8
   16b18:	mov	r0, r5
   16b1c:	bl	1070c <myencoding_detect_by_trigram@plt>
   16b20:	ldm	r5, {r0, r1}
   16b24:	mov	r2, sl
   16b28:	stm	r4, {r0, r1}
   16b2c:	mov	r1, #50	; 0x32
   16b30:	mov	r0, r4
   16b34:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16b38:	cmp	r0, #0
   16b3c:	movne	r3, #41	; 0x29
   16b40:	strne	r3, [r6]
   16b44:	bne	16bb8 <myencoding_detect_russian@@Base+0x208>
   16b48:	ldr	r3, [sp, #20]
   16b4c:	ldr	sl, [pc, #108]	; 16bc0 <myencoding_detect_russian@@Base+0x210>
   16b50:	cmp	r9, r3
   16b54:	movcc	r9, r3
   16b58:	movcc	r3, #41	; 0x29
   16b5c:	strcc	r3, [r6]
   16b60:	ldr	r3, [pc, #108]	; 16bd4 <myencoding_detect_russian@@Base+0x224>
   16b64:	mov	r0, #1000	; 0x3e8
   16b68:	add	r3, pc, r3
   16b6c:	mov	r2, r8
   16b70:	mov	r1, r7
   16b74:	sub	r3, r3, #544	; 0x220
   16b78:	stm	sp, {r0, sl}
   16b7c:	mov	r0, r5
   16b80:	bl	1070c <myencoding_detect_by_trigram@plt>
   16b84:	ldm	r5, {r0, r1}
   16b88:	mov	r2, sl
   16b8c:	stm	r4, {r0, r1}
   16b90:	mov	r0, r4
   16b94:	mov	r1, #50	; 0x32
   16b98:	bl	10d54 <myencoding_detect_russian_has_end@plt>
   16b9c:	cmp	r0, #0
   16ba0:	bne	16bb0 <myencoding_detect_russian@@Base+0x200>
   16ba4:	ldr	r3, [sp, #20]
   16ba8:	cmp	r9, r3
   16bac:	bcs	16bb8 <myencoding_detect_russian@@Base+0x208>
   16bb0:	mov	r3, #12
   16bb4:	str	r3, [r6]
   16bb8:	add	sp, sp, #24
   16bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16bc0:	andeq	r8, r1, r0, lsr #13
   16bc4:	andeq	r6, r1, ip, ror ip
   16bc8:	andeq	r8, r1, r4, lsl ip
   16bcc:	andeq	sl, r1, r4, lsr #23
   16bd0:	andeq	ip, r1, r8, lsr fp
   16bd4:	andeq	lr, r1, ip, asr #21

00016bd8 <myencoding_detect@@Base>:
   16bd8:	mov	r3, #0
   16bdc:	push	{r4, r5, r6, lr}
   16be0:	mov	r4, r2
   16be4:	str	r3, [r2]
   16be8:	mov	r5, r0
   16bec:	mov	r6, r1
   16bf0:	bl	fc44 <myencoding_detect_unicode@plt>
   16bf4:	cmp	r0, #0
   16bf8:	popne	{r4, r5, r6, pc}
   16bfc:	mov	r2, r4
   16c00:	mov	r1, r6
   16c04:	mov	r0, r5
   16c08:	pop	{r4, r5, r6, lr}
   16c0c:	b	10f4c <myencoding_detect_russian@plt>

00016c10 <myencoding_name_entry_by_name@@Base>:
   16c10:	add	r3, r0, r1
   16c14:	push	{r4, r5, r6, r7, r8, lr}
   16c18:	mov	r5, r1
   16c1c:	mov	r7, r0
   16c20:	ldrb	r1, [r3, #-1]
   16c24:	ldrb	r0, [r0]
   16c28:	ldr	r2, [pc, #164]	; 16cd4 <myencoding_name_entry_by_name@@Base+0xc4>
   16c2c:	ldr	r3, [pc, #164]	; 16cd8 <myencoding_name_entry_by_name@@Base+0xc8>
   16c30:	add	r2, pc, r2
   16c34:	add	r1, r2, r1
   16c38:	add	r2, r2, r0
   16c3c:	ldrb	r4, [r1, #-680]	; 0xfffffd58
   16c40:	ldrb	r2, [r2, #-680]	; 0xfffffd58
   16c44:	ldr	r6, [pc, #144]	; 16cdc <myencoding_name_entry_by_name@@Base+0xcc>
   16c48:	add	r6, pc, r6
   16c4c:	smulbb	r4, r4, r2
   16c50:	mul	r4, r5, r4
   16c54:	umull	r2, r3, r3, r4
   16c58:	sub	r2, r4, r3
   16c5c:	add	r3, r3, r2, lsr #1
   16c60:	lsr	r3, r3, #8
   16c64:	rsb	r2, r3, r3, lsl #3
   16c68:	rsb	r2, r2, r2, lsl #4
   16c6c:	rsb	r3, r3, r2, lsl #2
   16c70:	sub	r4, r4, r3
   16c74:	add	r4, r4, #1
   16c78:	b	16c84 <myencoding_name_entry_by_name@@Base+0x74>
   16c7c:	bcc	16cc4 <myencoding_name_entry_by_name@@Base+0xb4>
   16c80:	ldr	r4, [r4, #20]
   16c84:	rsb	r4, r4, r4, lsl #3
   16c88:	add	r4, r6, r4, lsl #2
   16c8c:	ldr	r0, [r4, #8]
   16c90:	cmp	r0, #0
   16c94:	beq	16cc4 <myencoding_name_entry_by_name@@Base+0xb4>
   16c98:	ldr	r3, [r4, #12]
   16c9c:	cmp	r5, r3
   16ca0:	bne	16c7c <myencoding_name_entry_by_name@@Base+0x6c>
   16ca4:	mov	r2, r5
   16ca8:	mov	r1, r7
   16cac:	bl	102a4 <mycore_strncasecmp@plt>
   16cb0:	cmp	r0, #0
   16cb4:	beq	16ccc <myencoding_name_entry_by_name@@Base+0xbc>
   16cb8:	ldr	r4, [r4, #20]
   16cbc:	cmp	r4, #0
   16cc0:	bne	16c84 <myencoding_name_entry_by_name@@Base+0x74>
   16cc4:	mov	r0, #0
   16cc8:	pop	{r4, r5, r6, r7, r8, pc}
   16ccc:	mov	r0, r4
   16cd0:	pop	{r4, r5, r6, r7, r8, pc}
   16cd4:	strdeq	r0, [r2], -ip
   16cd8:	ldmcc	r2, {r0, r1, r2, r4, r5, r8, sl, fp, sp}^
   16cdc:	muleq	pc, ip, pc	; <UNPREDICTABLE>

00016ce0 <myencoding_by_name@@Base>:
   16ce0:	push	{r4, lr}
   16ce4:	mov	r4, r2
   16ce8:	bl	ff68 <myencoding_name_entry_by_name@plt>
   16cec:	cmp	r0, #0
   16cf0:	popeq	{r4, pc}
   16cf4:	cmp	r4, #0
   16cf8:	ldrne	r3, [r0, #16]
   16cfc:	movne	r0, #1
   16d00:	strne	r3, [r4]
   16d04:	moveq	r0, #1
   16d08:	pop	{r4, pc}

00016d0c <myencoding_name_by_id@@Base>:
   16d0c:	cmp	r0, #41	; 0x29
   16d10:	bls	16d28 <myencoding_name_by_id@@Base+0x1c>
   16d14:	cmp	r1, #0
   16d18:	beq	16d60 <myencoding_name_by_id@@Base+0x54>
   16d1c:	mov	r0, #0
   16d20:	str	r0, [r1]
   16d24:	bx	lr
   16d28:	cmp	r1, #0
   16d2c:	lsleq	r0, r0, #3
   16d30:	beq	16d4c <myencoding_name_by_id@@Base+0x40>
   16d34:	ldr	r3, [pc, #44]	; 16d68 <myencoding_name_by_id@@Base+0x5c>
   16d38:	lsl	r0, r0, #3
   16d3c:	add	r3, pc, r3
   16d40:	add	r3, r3, r0
   16d44:	ldr	r3, [r3, #-2532]	; 0xfffff61c
   16d48:	str	r3, [r1]
   16d4c:	ldr	r3, [pc, #24]	; 16d6c <myencoding_name_by_id@@Base+0x60>
   16d50:	add	r3, pc, r3
   16d54:	add	r0, r3, r0
   16d58:	ldr	r0, [r0, #-2536]	; 0xfffff618
   16d5c:	bx	lr
   16d60:	mov	r0, r1
   16d64:	bx	lr
   16d68:	muleq	pc, r8, lr	; <UNPREDICTABLE>
   16d6c:	andeq	r9, pc, r4, lsl #29

00016d70 <myencoding_extracting_character_encoding_from_charset_with_found@@Base>:
   16d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d74:	sub	sp, sp, #12
   16d78:	subs	r7, r3, #0
   16d7c:	ldr	r9, [sp, #48]	; 0x30
   16d80:	mov	r3, #2
   16d84:	str	r3, [r2]
   16d88:	movne	r3, #0
   16d8c:	strne	r3, [r7]
   16d90:	cmp	r9, #0
   16d94:	movne	r3, #0
   16d98:	strne	r3, [r9]
   16d9c:	cmp	r1, #7
   16da0:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16da4:	ldr	r6, [pc, #664]	; 17044 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d4>
   16da8:	mov	r5, r1
   16dac:	mov	fp, r0
   16db0:	str	r2, [sp, #4]
   16db4:	add	r6, pc, r6
   16db8:	ldr	sl, [pc, #648]	; 17048 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d8>
   16dbc:	mov	r4, #7
   16dc0:	mov	r8, #0
   16dc4:	b	16e00 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x90>
   16dc8:	cmp	r5, r4
   16dcc:	ldrb	r2, [fp, r4]
   16dd0:	bls	16de8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   16dd4:	sub	r3, r2, #9
   16dd8:	add	r1, fp, r4
   16ddc:	uxtb	r3, r3
   16de0:	cmp	r3, #23
   16de4:	bls	16e34 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xc4>
   16de8:	cmp	r2, #61	; 0x3d
   16dec:	beq	16e7c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x10c>
   16df0:	add	r8, r4, #1
   16df4:	add	r4, r4, #8
   16df8:	cmp	r4, r5
   16dfc:	bcs	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16e00:	add	r1, fp, r8
   16e04:	mov	r0, r6
   16e08:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   16e0c:	cmp	r0, #0
   16e10:	bne	16dc8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x58>
   16e14:	mov	r4, r8
   16e18:	add	r8, r4, #1
   16e1c:	add	r4, r4, #8
   16e20:	cmp	r4, r5
   16e24:	bcc	16e00 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x90>
   16e28:	mov	r0, #0
   16e2c:	add	sp, sp, #12
   16e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e34:	mvn	r3, sl, lsr r3
   16e38:	tst	r3, #1
   16e3c:	beq	16e64 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xf4>
   16e40:	b	16df0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16e44:	ldrb	r2, [r1, #1]!
   16e48:	sub	r3, r2, #9
   16e4c:	uxtb	r3, r3
   16e50:	cmp	r3, #23
   16e54:	mvn	r3, sl, lsr r3
   16e58:	bhi	16de8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x78>
   16e5c:	tst	r3, #1
   16e60:	bne	16df0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16e64:	add	r4, r4, #1
   16e68:	cmp	r5, r4
   16e6c:	bhi	16e44 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xd4>
   16e70:	ldrb	r2, [fp, r4]
   16e74:	cmp	r2, #61	; 0x3d
   16e78:	bne	16df0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x80>
   16e7c:	add	r1, r4, #1
   16e80:	cmp	r5, r1
   16e84:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16e88:	ldrb	ip, [fp, r1]
   16e8c:	add	r0, fp, r1
   16e90:	sub	lr, ip, #9
   16e94:	uxtb	r3, lr
   16e98:	cmp	r3, #23
   16e9c:	bhi	16ee4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x174>
   16ea0:	ldr	r2, [pc, #416]	; 17048 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d8>
   16ea4:	mvn	r3, r2, lsr r3
   16ea8:	tst	r3, #1
   16eac:	addeq	r3, r4, #2
   16eb0:	addeq	r3, fp, r3
   16eb4:	moveq	r4, r2
   16eb8:	bne	16f38 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c8>
   16ebc:	add	r1, r1, #1
   16ec0:	cmp	r5, r1
   16ec4:	mov	r0, r3
   16ec8:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16ecc:	ldrb	ip, [r3], #1
   16ed0:	sub	lr, ip, #9
   16ed4:	uxtb	r2, lr
   16ed8:	cmp	r2, #23
   16edc:	mvn	r2, r4, lsr r2
   16ee0:	bls	16f30 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c0>
   16ee4:	cmp	ip, #34	; 0x22
   16ee8:	bne	16f38 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1c8>
   16eec:	add	r1, r1, #1
   16ef0:	cmp	r5, r1
   16ef4:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16ef8:	ldrb	r3, [fp, r1]
   16efc:	add	r0, fp, r1
   16f00:	cmp	r3, #34	; 0x22
   16f04:	movne	r2, r0
   16f08:	movne	r3, r1
   16f0c:	bne	16f20 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1b0>
   16f10:	b	1702c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2bc>
   16f14:	ldrb	ip, [r2, #1]!
   16f18:	cmp	ip, #34	; 0x22
   16f1c:	beq	16fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   16f20:	add	r3, r3, #1
   16f24:	cmp	r5, r3
   16f28:	bhi	16f14 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1a4>
   16f2c:	b	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16f30:	tst	r2, #1
   16f34:	beq	16ebc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x14c>
   16f38:	cmp	ip, #39	; 0x27
   16f3c:	beq	16fe8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x278>
   16f40:	uxtb	lr, lr
   16f44:	cmp	lr, #23
   16f48:	bhi	16f90 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x220>
   16f4c:	ldr	r4, [pc, #244]	; 17048 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2d8>
   16f50:	mvn	lr, r4, lsr lr
   16f54:	tst	lr, #1
   16f58:	addeq	r2, r1, #1
   16f5c:	addeq	lr, fp, r2
   16f60:	bne	16f98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x228>
   16f64:	cmp	r5, r2
   16f68:	mov	r0, lr
   16f6c:	mov	r1, r2
   16f70:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16f74:	ldrb	ip, [lr], #1
   16f78:	add	r2, r2, #1
   16f7c:	sub	r3, ip, #9
   16f80:	uxtb	r3, r3
   16f84:	cmp	r3, #23
   16f88:	mvn	r3, r4, lsr r3
   16f8c:	bls	16fdc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x26c>
   16f90:	cmp	ip, #59	; 0x3b
   16f94:	beq	1702c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2bc>
   16f98:	add	fp, fp, r1
   16f9c:	mov	r3, r1
   16fa0:	add	r3, r3, #1
   16fa4:	cmp	r5, r3
   16fa8:	bls	17034 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2c4>
   16fac:	ldrb	r2, [fp, #1]!
   16fb0:	cmp	r2, #59	; 0x3b
   16fb4:	bne	16fa0 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x230>
   16fb8:	sub	r1, r3, r1
   16fbc:	cmp	r7, #0
   16fc0:	strne	r0, [r7]
   16fc4:	cmp	r9, #0
   16fc8:	strne	r1, [r9]
   16fcc:	ldr	r2, [sp, #4]
   16fd0:	add	sp, sp, #12
   16fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fd8:	b	10cd0 <myencoding_by_name@plt>
   16fdc:	tst	r3, #1
   16fe0:	beq	16f64 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x1f4>
   16fe4:	b	16f98 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x228>
   16fe8:	add	r1, r1, #1
   16fec:	cmp	r5, r1
   16ff0:	bls	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   16ff4:	ldrb	r3, [fp, r1]
   16ff8:	add	r0, fp, r1
   16ffc:	cmp	r3, #39	; 0x27
   17000:	movne	r2, r0
   17004:	movne	r3, r1
   17008:	bne	1701c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2ac>
   1700c:	b	1702c <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2bc>
   17010:	ldrb	ip, [r2, #1]!
   17014:	cmp	ip, #39	; 0x27
   17018:	beq	16fb8 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x248>
   1701c:	add	r3, r3, #1
   17020:	cmp	r5, r3
   17024:	bhi	17010 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x2a0>
   17028:	b	16e28 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0xb8>
   1702c:	mov	r1, #0
   17030:	b	16fbc <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x24c>
   17034:	cmp	r7, #0
   17038:	strne	r0, [r7]
   1703c:	sub	r1, r3, r1
   17040:	b	16fc4 <myencoding_extracting_character_encoding_from_charset_with_found@@Base+0x254>
   17044:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   17048:	addeq	r0, r0, fp, lsl r0

0001704c <myencoding_extracting_character_encoding_from_charset@@Base>:
   1704c:	push	{lr}		; (str lr, [sp, #-4]!)
   17050:	sub	sp, sp, #12
   17054:	mov	r3, #0
   17058:	str	r3, [sp]
   1705c:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   17060:	add	sp, sp, #12
   17064:	pop	{pc}		; (ldr pc, [sp], #4)

00017068 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base>:
   17068:	push	{r4, r5, r6, lr}
   1706c:	ldr	ip, [r3]
   17070:	ldr	lr, [r1]
   17074:	sub	ip, lr, ip
   17078:	cmp	lr, r2
   1707c:	str	ip, [r3, #4]
   17080:	bcs	170fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x94>
   17084:	ldrb	r4, [r0, lr]
   17088:	add	r0, r0, lr
   1708c:	sub	r3, r4, #9
   17090:	uxtb	ip, r3
   17094:	cmp	ip, #23
   17098:	movhi	r3, #1
   1709c:	ldrls	r3, [pc, #124]	; 17120 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   170a0:	mvnls	r3, r3, lsr ip
   170a4:	cmp	r4, #47	; 0x2f
   170a8:	moveq	r3, #0
   170ac:	andne	r3, r3, #1
   170b0:	cmp	r3, #0
   170b4:	moveq	r5, #1
   170b8:	ldreq	r6, [pc, #96]	; 17120 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xb8>
   170bc:	beq	170ec <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x84>
   170c0:	b	17108 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xa0>
   170c4:	ldrb	r4, [r0, #1]!
   170c8:	sub	ip, r4, #9
   170cc:	uxtb	ip, ip
   170d0:	cmp	ip, #23
   170d4:	mvnls	r3, r6, lsr ip
   170d8:	cmp	r4, #47	; 0x2f
   170dc:	moveq	r3, #0
   170e0:	andne	r3, r3, #1
   170e4:	cmp	r3, #0
   170e8:	bne	17108 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0xa0>
   170ec:	add	lr, lr, #1
   170f0:	cmp	r2, lr
   170f4:	mov	r3, r5
   170f8:	bne	170c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x5c>
   170fc:	str	lr, [r1]
   17100:	mov	r0, #0
   17104:	pop	{r4, r5, r6, pc}
   17108:	cmp	r4, #61	; 0x3d
   1710c:	bne	170fc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@@Base+0x94>
   17110:	add	lr, lr, #1
   17114:	str	lr, [r1]
   17118:	mov	r0, #1
   1711c:	pop	{r4, r5, r6, pc}
   17120:	addeq	r0, r0, fp, lsl r0

00017124 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base>:
   17124:	cmp	r1, r2
   17128:	push	{r4, r5, r6, r7, lr}
   1712c:	bcs	1720c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   17130:	ldrb	r5, [r0, r1]
   17134:	add	r7, r0, r1
   17138:	sub	ip, r5, #9
   1713c:	uxtb	ip, ip
   17140:	cmp	ip, #23
   17144:	bhi	1718c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   17148:	ldr	r6, [pc, #468]	; 17324 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   1714c:	mvn	ip, r6, lsr ip
   17150:	tst	ip, #1
   17154:	addeq	lr, r1, #1
   17158:	addeq	r4, r0, lr
   1715c:	bne	1718c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   17160:	cmp	r2, lr
   17164:	mov	r7, r4
   17168:	mov	r1, lr
   1716c:	beq	1720c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xe8>
   17170:	ldrb	r5, [r4], #1
   17174:	add	lr, lr, #1
   17178:	sub	ip, r5, #9
   1717c:	uxtb	ip, ip
   17180:	cmp	ip, #23
   17184:	mvn	ip, r6, lsr ip
   17188:	bls	171f4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xd0>
   1718c:	cmp	r5, #39	; 0x27
   17190:	beq	172d4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1b0>
   17194:	cmp	r5, #62	; 0x3e
   17198:	beq	1726c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x148>
   1719c:	cmp	r5, #34	; 0x22
   171a0:	beq	17290 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x16c>
   171a4:	str	r1, [r3, #8]
   171a8:	ldrb	lr, [r7]
   171ac:	sub	ip, lr, #9
   171b0:	uxtb	ip, ip
   171b4:	cmp	ip, #23
   171b8:	movhi	r5, #0
   171bc:	ldrls	r5, [pc, #352]	; 17324 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   171c0:	mvnls	r5, r5, lsr ip
   171c4:	andls	r5, r5, #1
   171c8:	eorls	r5, r5, #1
   171cc:	cmp	lr, #62	; 0x3e
   171d0:	orreq	r5, r5, #1
   171d4:	cmp	r5, #0
   171d8:	addeq	r7, r0, r1
   171dc:	ldreq	r6, [pc, #320]	; 17324 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x200>
   171e0:	moveq	r0, r1
   171e4:	beq	17250 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x12c>
   171e8:	mov	r0, r1
   171ec:	mov	r1, #0
   171f0:	b	17284 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x160>
   171f4:	tst	ip, #1
   171f8:	bne	1718c <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x68>
   171fc:	cmp	r2, lr
   17200:	mov	r7, r4
   17204:	mov	r1, lr
   17208:	bne	17170 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x4c>
   1720c:	ldr	r2, [sp, #20]
   17210:	mov	r3, #1
   17214:	mov	r0, r1
   17218:	strb	r3, [r2]
   1721c:	pop	{r4, r5, r6, r7, pc}
   17220:	ldrb	r4, [r7, #1]!
   17224:	sub	ip, r4, #9
   17228:	uxtb	ip, ip
   1722c:	cmp	ip, #23
   17230:	mvn	ip, r6, lsr ip
   17234:	andls	ip, ip, #1
   17238:	eorls	lr, ip, #1
   1723c:	cmp	r4, #62	; 0x3e
   17240:	movne	ip, lr
   17244:	orreq	ip, lr, #1
   17248:	cmp	ip, #0
   1724c:	bne	17280 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   17250:	add	r0, r0, #1
   17254:	cmp	r2, r0
   17258:	mov	lr, r5
   1725c:	bhi	17220 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xfc>
   17260:	sub	r1, r0, r1
   17264:	str	r1, [r3, #12]
   17268:	pop	{r4, r5, r6, r7, pc}
   1726c:	ldr	r2, [sp, #20]
   17270:	mov	r3, #1
   17274:	add	r0, r1, r3
   17278:	strb	r3, [r2]
   1727c:	pop	{r4, r5, r6, r7, pc}
   17280:	sub	r1, r0, r1
   17284:	str	r1, [r3, #12]
   17288:	add	r0, r0, #1
   1728c:	pop	{r4, r5, r6, r7, pc}
   17290:	add	r1, r1, #1
   17294:	cmp	r2, r1
   17298:	str	r1, [r3, #8]
   1729c:	bls	17318 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f4>
   172a0:	ldrb	lr, [r0, r1]
   172a4:	add	ip, r0, r1
   172a8:	cmp	lr, #34	; 0x22
   172ac:	movne	r0, r1
   172b0:	bne	172c4 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1a0>
   172b4:	b	171e8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc4>
   172b8:	ldrb	lr, [ip, #1]!
   172bc:	cmp	lr, #34	; 0x22
   172c0:	beq	17280 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   172c4:	add	r0, r0, #1
   172c8:	cmp	r2, r0
   172cc:	bhi	172b8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x194>
   172d0:	b	17260 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   172d4:	add	r1, r1, #1
   172d8:	cmp	r2, r1
   172dc:	str	r1, [r3, #8]
   172e0:	bls	17318 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1f4>
   172e4:	ldrb	lr, [r0, r1]
   172e8:	add	ip, r0, r1
   172ec:	cmp	lr, #39	; 0x27
   172f0:	movne	r0, r1
   172f4:	bne	17308 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1e4>
   172f8:	b	171e8 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0xc4>
   172fc:	ldrb	lr, [ip, #1]!
   17300:	cmp	lr, #39	; 0x27
   17304:	beq	17280 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x15c>
   17308:	add	r0, r0, #1
   1730c:	cmp	r2, r0
   17310:	bhi	172fc <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x1d8>
   17314:	b	17260 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x13c>
   17318:	mov	r0, r1
   1731c:	mov	r1, #0
   17320:	b	17264 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@@Base+0x140>
   17324:	addeq	r0, r0, fp, lsl r0

00017328 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base>:
   17328:	push	{r4, r5, r6, r7, lr}
   1732c:	mov	r5, r3
   17330:	sub	sp, sp, #20
   17334:	mov	r3, #0
   17338:	cmp	r2, r1
   1733c:	mov	ip, r1
   17340:	str	r1, [sp, #12]
   17344:	str	r3, [r5]
   17348:	str	r3, [r5, #4]
   1734c:	str	r3, [r5, #8]
   17350:	str	r3, [r5, #12]
   17354:	str	r3, [r5, #16]
   17358:	bls	173e4 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xbc>
   1735c:	ldrb	r1, [r0, r1]
   17360:	mov	r4, r2
   17364:	mov	r6, r0
   17368:	sub	r3, r1, #9
   1736c:	add	r0, r0, ip
   17370:	uxtb	r2, r3
   17374:	cmp	r2, #23
   17378:	movhi	r3, #1
   1737c:	ldrls	r3, [pc, #660]	; 17618 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   17380:	mvnls	r3, r3, lsr r2
   17384:	cmp	r1, #47	; 0x2f
   17388:	moveq	r3, #0
   1738c:	andne	r3, r3, #1
   17390:	cmp	r3, #0
   17394:	addeq	ip, ip, #1
   17398:	moveq	lr, #1
   1739c:	ldreq	r7, [pc, #628]	; 17618 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2f0>
   173a0:	beq	173d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xb0>
   173a4:	b	17400 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xd8>
   173a8:	ldrb	r1, [r0, #1]!
   173ac:	sub	r2, r1, #9
   173b0:	uxtb	r2, r2
   173b4:	cmp	r2, #23
   173b8:	mvnls	r3, r7, lsr r2
   173bc:	cmp	r1, #47	; 0x2f
   173c0:	moveq	r3, #0
   173c4:	andne	r3, r3, #1
   173c8:	cmp	r3, #0
   173cc:	add	r3, ip, #1
   173d0:	bne	173fc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xd4>
   173d4:	mov	ip, r3
   173d8:	cmp	r4, ip
   173dc:	mov	r3, lr
   173e0:	bne	173a8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x80>
   173e4:	ldr	r2, [sp, #40]	; 0x28
   173e8:	mov	r3, #1
   173ec:	strb	r3, [r2]
   173f0:	mov	r0, ip
   173f4:	add	sp, sp, #20
   173f8:	pop	{r4, r5, r6, r7, pc}
   173fc:	str	ip, [sp, #12]
   17400:	cmp	r1, #62	; 0x3e
   17404:	beq	175fc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2d4>
   17408:	ldr	r3, [sp, #12]
   1740c:	str	ip, [r5]
   17410:	cmp	r4, r3
   17414:	addhi	r1, r6, r3
   17418:	bls	175bc <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x294>
   1741c:	ldrb	r2, [r1], #1
   17420:	sub	r2, r2, #9
   17424:	cmp	r2, #53	; 0x35
   17428:	addls	pc, pc, r2, lsl #2
   1742c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17430:	b	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17434:	b	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17438:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1743c:	b	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17440:	b	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17444:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17448:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1744c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17450:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17454:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17458:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1745c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17460:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17464:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17468:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1746c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17470:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17474:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17478:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1747c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17480:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17484:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17488:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1748c:	b	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17490:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17494:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17498:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   1749c:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174a0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174a4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174a8:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174ac:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174b0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174b4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174b8:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174bc:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174c0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174c4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174c8:	b	17548 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x220>
   174cc:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174d0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174d4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174d8:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174dc:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174e0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174e4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174e8:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174ec:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174f0:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174f4:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174f8:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   174fc:	b	175ac <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x284>
   17500:	b	1756c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x244>
   17504:	b	17548 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x220>
   17508:	add	r1, sp, #16
   1750c:	add	r3, r3, #1
   17510:	str	r3, [r1, #-4]!
   17514:	mov	r2, r4
   17518:	mov	r3, r5
   1751c:	mov	r0, r6
   17520:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   17524:	cmp	r0, #0
   17528:	bne	175d8 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x2b0>
   1752c:	ldr	r2, [sp, #40]	; 0x28
   17530:	ldr	ip, [sp, #12]
   17534:	mov	r3, #1
   17538:	mov	r0, ip
   1753c:	strb	r3, [r2]
   17540:	add	sp, sp, #20
   17544:	pop	{r4, r5, r6, r7, pc}
   17548:	mov	r1, #1
   1754c:	sub	r2, r3, ip
   17550:	add	ip, r3, r1
   17554:	ldr	r3, [sp, #40]	; 0x28
   17558:	mov	r0, ip
   1755c:	strb	r1, [r3]
   17560:	str	r2, [r5, #4]
   17564:	add	sp, sp, #20
   17568:	pop	{r4, r5, r6, r7, pc}
   1756c:	sub	r2, r3, #1
   17570:	cmp	r2, ip
   17574:	beq	17508 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x1e0>
   17578:	sub	ip, r3, ip
   1757c:	add	lr, r3, #1
   17580:	ldr	r3, [sp, #40]	; 0x28
   17584:	str	ip, [r5, #4]
   17588:	mov	r1, lr
   1758c:	str	r3, [sp]
   17590:	mov	r2, r4
   17594:	mov	r3, r5
   17598:	mov	r0, r6
   1759c:	str	lr, [sp, #12]
   175a0:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   175a4:	mov	ip, r0
   175a8:	b	173f0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc8>
   175ac:	add	r3, r3, #1
   175b0:	cmp	r4, r3
   175b4:	bne	1741c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xf4>
   175b8:	str	r4, [sp, #12]
   175bc:	mov	r3, r5
   175c0:	mov	r2, r4
   175c4:	add	r1, sp, #12
   175c8:	mov	r0, r6
   175cc:	bl	104cc <myencoding_prescan_stream_to_determine_encoding_get_attr_spaces@plt>
   175d0:	cmp	r0, #0
   175d4:	beq	1752c <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0x204>
   175d8:	ldr	r3, [sp, #40]	; 0x28
   175dc:	ldr	r1, [sp, #12]
   175e0:	str	r3, [sp]
   175e4:	mov	r2, r4
   175e8:	mov	r3, r5
   175ec:	mov	r0, r6
   175f0:	bl	fe48 <myencoding_prescan_stream_to_determine_encoding_get_attr_value@plt>
   175f4:	mov	ip, r0
   175f8:	b	173f0 <myencoding_prescan_stream_to_determine_encoding_get_attr@@Base+0xc8>
   175fc:	ldr	r2, [sp, #40]	; 0x28
   17600:	mov	r3, #1
   17604:	add	ip, ip, r3
   17608:	mov	r0, ip
   1760c:	strb	r3, [r2]
   17610:	add	sp, sp, #20
   17614:	pop	{r4, r5, r6, r7, pc}
   17618:	addeq	r0, r0, fp, lsl r0

0001761c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base>:
   1761c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17620:	mov	fp, r3
   17624:	ldr	r3, [pc, #552]	; 17854 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x238>
   17628:	sub	sp, sp, #60	; 0x3c
   1762c:	add	r3, pc, r3
   17630:	str	r3, [sp, #16]
   17634:	ldr	r3, [pc, #540]	; 17858 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x23c>
   17638:	mov	ip, #0
   1763c:	add	r3, pc, r3
   17640:	str	r3, [sp, #20]
   17644:	ldr	r3, [pc, #528]	; 1785c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x240>
   17648:	mov	r9, ip
   1764c:	add	r3, pc, r3
   17650:	str	r3, [sp, #12]
   17654:	ldr	r3, [pc, #516]	; 17860 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x244>
   17658:	mov	r6, r0
   1765c:	add	r3, pc, r3
   17660:	mov	r5, r1
   17664:	mov	r4, r2
   17668:	strb	ip, [sp, #35]	; 0x23
   1766c:	mov	sl, ip
   17670:	str	ip, [sp, #24]
   17674:	add	r8, sp, #36	; 0x24
   17678:	add	r7, sp, #35	; 0x23
   1767c:	str	r3, [sp, #28]
   17680:	b	17698 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   17684:	cmp	r3, #7
   17688:	beq	176ec <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0xd0>
   1768c:	ldrb	r3, [sp, #35]	; 0x23
   17690:	cmp	r3, #0
   17694:	bne	17744 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x128>
   17698:	ldr	r1, [r5]
   1769c:	cmp	r1, r4
   176a0:	bcs	17744 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x128>
   176a4:	mov	r3, r8
   176a8:	str	r7, [sp]
   176ac:	mov	r2, r4
   176b0:	mov	r0, r6
   176b4:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   176b8:	ldr	r3, [sp, #40]	; 0x28
   176bc:	cmp	r3, #10
   176c0:	str	r0, [r5]
   176c4:	bne	17684 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x68>
   176c8:	ldr	r1, [sp, #36]	; 0x24
   176cc:	ldr	r0, [sp, #12]
   176d0:	add	r1, r6, r1
   176d4:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   176d8:	cmp	r0, #0
   176dc:	bne	177ac <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x190>
   176e0:	ldr	r3, [sp, #40]	; 0x28
   176e4:	cmp	r3, #7
   176e8:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   176ec:	ldr	r1, [sp, #36]	; 0x24
   176f0:	ldr	r0, [sp, #16]
   176f4:	add	r1, r6, r1
   176f8:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   176fc:	cmp	r0, #0
   17700:	beq	177e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x1cc>
   17704:	tst	r9, #2
   17708:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   1770c:	ldr	r3, [sp, #100]	; 0x64
   17710:	ldr	r0, [sp, #44]	; 0x2c
   17714:	str	r3, [sp]
   17718:	ldr	r1, [sp, #48]	; 0x30
   1771c:	ldr	r3, [sp, #96]	; 0x60
   17720:	add	r0, r6, r0
   17724:	mov	r2, fp
   17728:	bl	10838 <myencoding_extracting_character_encoding_from_charset_with_found@plt>
   1772c:	ldrb	r3, [sp, #35]	; 0x23
   17730:	orr	r9, r9, #2
   17734:	cmp	r0, #0
   17738:	movne	sl, #2
   1773c:	cmp	r3, #0
   17740:	beq	17698 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x7c>
   17744:	cmp	sl, #0
   17748:	beq	17798 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x17c>
   1774c:	ldr	r3, [sp, #24]
   17750:	eor	r3, r3, #1
   17754:	cmp	sl, #2
   17758:	movne	sl, #0
   1775c:	andeq	sl, r3, #1
   17760:	cmp	sl, #0
   17764:	bne	17798 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x17c>
   17768:	ldr	r3, [fp]
   1776c:	sub	r2, r3, #4
   17770:	cmp	r2, #1
   17774:	strls	sl, [fp]
   17778:	movls	r0, #1
   1777c:	bls	177a4 <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x188>
   17780:	cmp	r3, #6
   17784:	moveq	r3, #33	; 0x21
   17788:	mov	r0, #1
   1778c:	streq	r3, [fp]
   17790:	add	sp, sp, #60	; 0x3c
   17794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17798:	mov	r0, #0
   1779c:	mov	r3, #2
   177a0:	str	r3, [fp]
   177a4:	add	sp, sp, #60	; 0x3c
   177a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177ac:	tst	r9, #1
   177b0:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177b4:	ldr	r3, [sp, #48]	; 0x30
   177b8:	orr	r9, r9, #1
   177bc:	cmp	r3, #12
   177c0:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177c4:	ldr	r1, [sp, #44]	; 0x2c
   177c8:	ldr	r0, [sp, #28]
   177cc:	add	r1, r6, r1
   177d0:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   177d4:	ldr	r3, [sp, #24]
   177d8:	cmp	r0, #0
   177dc:	movne	r3, r0
   177e0:	str	r3, [sp, #24]
   177e4:	b	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177e8:	ldr	r3, [sp, #40]	; 0x28
   177ec:	cmp	r3, #7
   177f0:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   177f4:	ldr	r1, [sp, #36]	; 0x24
   177f8:	ldr	r0, [sp, #20]
   177fc:	add	r1, r6, r1
   17800:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17804:	cmp	r0, #0
   17808:	beq	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   1780c:	tst	r9, #4
   17810:	bne	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   17814:	ldr	r3, [sp, #96]	; 0x60
   17818:	ldr	r0, [sp, #44]	; 0x2c
   1781c:	cmp	r3, #0
   17820:	add	r0, r6, r0
   17824:	ldrne	r3, [sp, #96]	; 0x60
   17828:	ldr	r1, [sp, #48]	; 0x30
   1782c:	mov	r2, fp
   17830:	strne	r0, [r3]
   17834:	ldr	r3, [sp, #100]	; 0x64
   17838:	orr	r9, r9, #4
   1783c:	cmp	r3, #0
   17840:	mov	sl, #1
   17844:	ldrne	r3, [sp, #100]	; 0x64
   17848:	strne	r1, [r3]
   1784c:	bl	10cd0 <myencoding_by_name@plt>
   17850:	b	1768c <myencoding_prescan_stream_to_determine_encoding_check_meta@@Base+0x70>
   17854:	andeq	pc, r1, ip, ror pc	; <UNPREDICTABLE>
   17858:	andeq	pc, r1, r8, asr #30
   1785c:	andeq	pc, r1, r0, asr #30
   17860:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>

00017864 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base>:
   17864:	cmp	r1, r2
   17868:	bcs	17938 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xd4>
   1786c:	push	{r4, r5, r6, r7, lr}
   17870:	add	ip, r0, r1
   17874:	ldrb	lr, [r0, r1]
   17878:	sub	sp, sp, #36	; 0x24
   1787c:	sub	r3, lr, #9
   17880:	uxtb	r3, r3
   17884:	cmp	r3, #23
   17888:	bhi	178c0 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x5c>
   1788c:	ldr	r4, [pc, #172]	; 17940 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xdc>
   17890:	mvn	r3, r4, lsr r3
   17894:	tst	r3, #1
   17898:	bne	178c8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   1789c:	add	r1, r1, #1
   178a0:	cmp	r2, r1
   178a4:	beq	17910 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xac>
   178a8:	ldrb	lr, [ip, #1]!
   178ac:	sub	r3, lr, #9
   178b0:	uxtb	r3, r3
   178b4:	cmp	r3, #23
   178b8:	mvn	r3, r4, lsr r3
   178bc:	bls	1791c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xb8>
   178c0:	cmp	lr, #62	; 0x3e
   178c4:	beq	17928 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xc4>
   178c8:	mov	r3, #0
   178cc:	mov	r7, r0
   178d0:	mov	r4, r2
   178d4:	add	r6, sp, #12
   178d8:	add	r5, sp, #11
   178dc:	strb	r3, [sp, #11]
   178e0:	b	178ec <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x88>
   178e4:	cmp	r4, r0
   178e8:	bls	17910 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0xac>
   178ec:	mov	r3, r6
   178f0:	str	r5, [sp]
   178f4:	mov	r2, r4
   178f8:	mov	r0, r7
   178fc:	bl	10cf4 <myencoding_prescan_stream_to_determine_encoding_get_attr@plt>
   17900:	ldrb	r3, [sp, #11]
   17904:	cmp	r3, #0
   17908:	mov	r1, r0
   1790c:	beq	178e4 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x80>
   17910:	mov	r0, r1
   17914:	add	sp, sp, #36	; 0x24
   17918:	pop	{r4, r5, r6, r7, pc}
   1791c:	tst	r3, #1
   17920:	beq	1789c <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x38>
   17924:	b	178c8 <myencoding_prescan_stream_to_determine_encoding_skip_name@@Base+0x64>
   17928:	add	r1, r1, #1
   1792c:	mov	r0, r1
   17930:	add	sp, sp, #36	; 0x24
   17934:	pop	{r4, r5, r6, r7, pc}
   17938:	mov	r0, r1
   1793c:	bx	lr
   17940:	addeq	r0, r0, fp, lsl r0

00017944 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base>:
   17944:	push	{r4, lr}
   17948:	mov	r3, r0
   1794c:	ldrb	r4, [r0, r1]
   17950:	mov	lr, r1
   17954:	mov	ip, r2
   17958:	cmp	r4, #47	; 0x2f
   1795c:	beq	179f8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xb4>
   17960:	cmp	r4, #33	; 0x21
   17964:	beq	179b8 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x74>
   17968:	cmp	r4, #63	; 0x3f
   1796c:	beq	17978 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x34>
   17970:	pop	{r4, lr}
   17974:	b	10088 <myencoding_prescan_stream_to_determine_encoding_skip_name@plt>
   17978:	add	r1, r1, #1
   1797c:	cmp	r2, r1
   17980:	bls	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17984:	ldrb	r2, [r0, r1]
   17988:	add	r3, r0, r1
   1798c:	cmp	r2, #62	; 0x3e
   17990:	beq	179a4 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x60>
   17994:	b	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17998:	ldrb	r2, [r3, #1]!
   1799c:	cmp	r2, #62	; 0x3e
   179a0:	bne	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   179a4:	add	r1, r1, #1
   179a8:	cmp	ip, r1
   179ac:	bhi	17998 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x54>
   179b0:	mov	r0, r1
   179b4:	pop	{r4, pc}
   179b8:	add	r2, r1, #3
   179bc:	cmp	ip, r2
   179c0:	add	r1, r1, #1
   179c4:	bls	17a4c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   179c8:	ldrb	r2, [r0, r1]
   179cc:	cmp	r2, #45	; 0x2d
   179d0:	bne	17a4c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x108>
   179d4:	add	r2, r0, lr
   179d8:	ldrb	r2, [r2, #2]
   179dc:	cmp	r2, #45	; 0x2d
   179e0:	beq	17a84 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x140>
   179e4:	cmp	ip, r1
   179e8:	bls	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   179ec:	add	r1, r1, #1
   179f0:	mov	r0, r1
   179f4:	pop	{r4, pc}
   179f8:	add	r1, r1, #1
   179fc:	cmp	r1, r2
   17a00:	bcs	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a04:	ldrb	r4, [r0, r1]
   17a08:	ldr	lr, [pc, #192]	; 17ad0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x18c>
   17a0c:	add	r3, r0, r1
   17a10:	add	lr, pc, lr
   17a14:	add	lr, lr, r4
   17a18:	ldrb	lr, [lr, #-424]	; 0xfffffe58
   17a1c:	cmp	lr, #1
   17a20:	beq	17970 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x2c>
   17a24:	cmp	r4, #62	; 0x3e
   17a28:	beq	17a3c <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xf8>
   17a2c:	b	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17a30:	ldrb	r2, [r3, #1]!
   17a34:	cmp	r2, #62	; 0x3e
   17a38:	bne	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17a3c:	add	r1, r1, #1
   17a40:	cmp	ip, r1
   17a44:	bhi	17a30 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xec>
   17a48:	b	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a4c:	cmp	ip, r1
   17a50:	bls	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a54:	ldrb	r2, [r3, r1]
   17a58:	add	r3, r3, r1
   17a5c:	cmp	r2, #62	; 0x3e
   17a60:	beq	17a74 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x130>
   17a64:	b	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17a68:	ldrb	r2, [r3, #1]!
   17a6c:	cmp	r2, #62	; 0x3e
   17a70:	bne	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17a74:	add	r1, r1, #1
   17a78:	cmp	ip, r1
   17a7c:	bhi	17a68 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x124>
   17a80:	b	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a84:	cmp	ip, r1
   17a88:	bls	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17a8c:	sub	lr, lr, #1
   17a90:	add	r3, r0, lr
   17a94:	b	17aac <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x168>
   17a98:	add	r1, r1, #1
   17a9c:	cmp	ip, r1
   17aa0:	add	r3, r3, #1
   17aa4:	bls	179b0 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x6c>
   17aa8:	ldrb	r2, [r3, #2]
   17aac:	cmp	r2, #62	; 0x3e
   17ab0:	beq	17a98 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x154>
   17ab4:	ldrb	r2, [r3, #1]
   17ab8:	cmp	r2, #45	; 0x2d
   17abc:	bne	17a98 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x154>
   17ac0:	ldrb	r2, [r3]
   17ac4:	cmp	r2, #45	; 0x2d
   17ac8:	bne	17a98 <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0x154>
   17acc:	b	179ec <myencoding_prescan_stream_to_determine_encoding_skip_other@@Base+0xa8>
   17ad0:	andeq	pc, r1, ip, lsl ip	; <UNPREDICTABLE>

00017ad4 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base>:
   17ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad8:	subs	r8, r2, #0
   17adc:	ldr	r6, [pc, #288]	; 17c04 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x130>
   17ae0:	mov	r7, r3
   17ae4:	sub	sp, sp, #20
   17ae8:	movne	r3, #0
   17aec:	ldr	r9, [pc, #276]	; 17c08 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x134>
   17af0:	strne	r3, [r8]
   17af4:	mov	r4, r0
   17af8:	cmp	r7, #0
   17afc:	mov	r5, r1
   17b00:	mov	r0, #0
   17b04:	add	r6, pc, r6
   17b08:	add	fp, sp, #8
   17b0c:	add	sl, sp, #12
   17b10:	mov	r2, #2
   17b14:	movne	r3, #0
   17b18:	str	r2, [sp, #8]
   17b1c:	strne	r3, [r7]
   17b20:	cmp	r5, r0
   17b24:	bls	17b7c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17b28:	ldrb	r3, [r4, r0]
   17b2c:	cmp	r3, #60	; 0x3c
   17b30:	addne	r0, r0, #1
   17b34:	bne	17b20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17b38:	add	r3, r0, #5
   17b3c:	cmp	r5, r3
   17b40:	bls	17b7c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17b44:	add	r0, r0, #1
   17b48:	str	r0, [sp, #12]
   17b4c:	ldrb	r3, [r4, r0]
   17b50:	add	r1, r4, r0
   17b54:	cmp	r3, #77	; 0x4d
   17b58:	beq	17b88 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb4>
   17b5c:	cmp	r3, #109	; 0x6d
   17b60:	beq	17b88 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xb4>
   17b64:	mov	r1, r0
   17b68:	mov	r2, r5
   17b6c:	mov	r0, r4
   17b70:	bl	1034c <myencoding_prescan_stream_to_determine_encoding_skip_other@plt>
   17b74:	cmp	r5, r0
   17b78:	bhi	17b28 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x54>
   17b7c:	ldr	r0, [sp, #8]
   17b80:	add	sp, sp, #20
   17b84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b88:	mov	r0, r6
   17b8c:	bl	fcd4 <mycore_ustrcasecmp_without_checks_by_secondary@plt>
   17b90:	cmp	r0, #0
   17b94:	beq	17bfc <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x128>
   17b98:	ldr	r2, [sp, #12]
   17b9c:	add	r0, r2, #4
   17ba0:	ldrb	r1, [r4, r0]
   17ba4:	sub	r3, r1, #9
   17ba8:	uxtb	r3, r3
   17bac:	cmp	r3, #23
   17bb0:	mvnls	r3, r9, lsr r3
   17bb4:	andls	r3, r3, #1
   17bb8:	eorls	r3, r3, #1
   17bbc:	movhi	r3, #0
   17bc0:	cmp	r1, #47	; 0x2f
   17bc4:	orreq	r3, r3, #1
   17bc8:	cmp	r3, #0
   17bcc:	beq	17b20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17bd0:	add	ip, r2, #5
   17bd4:	str	r7, [sp, #4]
   17bd8:	str	r8, [sp]
   17bdc:	mov	r3, fp
   17be0:	mov	r2, r5
   17be4:	mov	r1, sl
   17be8:	mov	r0, r4
   17bec:	str	ip, [sp, #12]
   17bf0:	bl	103e8 <myencoding_prescan_stream_to_determine_encoding_check_meta@plt>
   17bf4:	cmp	r0, #0
   17bf8:	bne	17b7c <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0xa8>
   17bfc:	ldr	r0, [sp, #12]
   17c00:	b	17b20 <myencoding_prescan_stream_to_determine_encoding_with_found@@Base+0x4c>
   17c04:	andeq	pc, r1, ip, lsr #21
   17c08:	addeq	r0, r0, fp, lsl r0

00017c0c <myencoding_prescan_stream_to_determine_encoding@@Base>:
   17c0c:	mov	r3, #0
   17c10:	mov	r2, r3
   17c14:	b	10b8c <myencoding_prescan_stream_to_determine_encoding_with_found@plt>

00017c18 <myencoding_decode_ibm866@@Base>:
   17c18:	tst	r0, #128	; 0x80
   17c1c:	streq	r0, [r1, #12]
   17c20:	beq	17c38 <myencoding_decode_ibm866@@Base+0x20>
   17c24:	ldr	r3, [pc, #20]	; 17c40 <myencoding_decode_ibm866@@Base+0x28>
   17c28:	sub	r0, r0, #128	; 0x80
   17c2c:	add	r3, pc, r3
   17c30:	ldr	r3, [r3, r0, lsl #2]
   17c34:	str	r3, [r1, #12]
   17c38:	mov	r0, #0
   17c3c:	bx	lr
   17c40:	andeq	r0, r2, r8, ror #9

00017c44 <myencoding_decode_iso_8859_2@@Base>:
   17c44:	tst	r0, #128	; 0x80
   17c48:	streq	r0, [r1, #12]
   17c4c:	ldrne	r3, [pc, #16]	; 17c64 <myencoding_decode_iso_8859_2@@Base+0x20>
   17c50:	addne	r3, pc, r3
   17c54:	ldrne	r3, [r3, r0, lsl #2]
   17c58:	strne	r3, [r1, #12]
   17c5c:	mov	r0, #0
   17c60:	bx	lr
   17c64:	andeq	r0, r2, r4, asr #9

00017c68 <myencoding_decode_iso_8859_3@@Base>:
   17c68:	tst	r0, #128	; 0x80
   17c6c:	streq	r0, [r1, #12]
   17c70:	beq	17c88 <myencoding_decode_iso_8859_3@@Base+0x20>
   17c74:	ldr	r3, [pc, #20]	; 17c90 <myencoding_decode_iso_8859_3@@Base+0x28>
   17c78:	add	r3, pc, r3
   17c7c:	add	r0, r3, r0, lsl #2
   17c80:	ldr	r3, [r0, #512]	; 0x200
   17c84:	str	r3, [r1, #12]
   17c88:	mov	r0, #0
   17c8c:	bx	lr
   17c90:	muleq	r2, ip, r4

00017c94 <myencoding_decode_iso_8859_4@@Base>:
   17c94:	tst	r0, #128	; 0x80
   17c98:	streq	r0, [r1, #12]
   17c9c:	beq	17cb4 <myencoding_decode_iso_8859_4@@Base+0x20>
   17ca0:	ldr	r3, [pc, #20]	; 17cbc <myencoding_decode_iso_8859_4@@Base+0x28>
   17ca4:	add	r3, pc, r3
   17ca8:	add	r0, r3, r0, lsl #2
   17cac:	ldr	r3, [r0, #1024]	; 0x400
   17cb0:	str	r3, [r1, #12]
   17cb4:	mov	r0, #0
   17cb8:	bx	lr
   17cbc:	andeq	r0, r2, r0, ror r4

00017cc0 <myencoding_decode_iso_8859_5@@Base>:
   17cc0:	tst	r0, #128	; 0x80
   17cc4:	streq	r0, [r1, #12]
   17cc8:	beq	17ce0 <myencoding_decode_iso_8859_5@@Base+0x20>
   17ccc:	ldr	r3, [pc, #20]	; 17ce8 <myencoding_decode_iso_8859_5@@Base+0x28>
   17cd0:	add	r3, pc, r3
   17cd4:	add	r0, r3, r0, lsl #2
   17cd8:	ldr	r3, [r0, #1536]	; 0x600
   17cdc:	str	r3, [r1, #12]
   17ce0:	mov	r0, #0
   17ce4:	bx	lr
   17ce8:	andeq	r0, r2, r4, asr #8

00017cec <myencoding_decode_iso_8859_6@@Base>:
   17cec:	tst	r0, #128	; 0x80
   17cf0:	streq	r0, [r1, #12]
   17cf4:	beq	17d0c <myencoding_decode_iso_8859_6@@Base+0x20>
   17cf8:	ldr	r3, [pc, #20]	; 17d14 <myencoding_decode_iso_8859_6@@Base+0x28>
   17cfc:	add	r3, pc, r3
   17d00:	add	r0, r3, r0, lsl #2
   17d04:	ldr	r3, [r0, #2048]	; 0x800
   17d08:	str	r3, [r1, #12]
   17d0c:	mov	r0, #0
   17d10:	bx	lr
   17d14:	andeq	r0, r2, r8, lsl r4

00017d18 <myencoding_decode_iso_8859_7@@Base>:
   17d18:	tst	r0, #128	; 0x80
   17d1c:	streq	r0, [r1, #12]
   17d20:	beq	17d38 <myencoding_decode_iso_8859_7@@Base+0x20>
   17d24:	ldr	r3, [pc, #20]	; 17d40 <myencoding_decode_iso_8859_7@@Base+0x28>
   17d28:	add	r3, pc, r3
   17d2c:	add	r0, r3, r0, lsl #2
   17d30:	ldr	r3, [r0, #2560]	; 0xa00
   17d34:	str	r3, [r1, #12]
   17d38:	mov	r0, #0
   17d3c:	bx	lr
   17d40:	andeq	r0, r2, ip, ror #7

00017d44 <myencoding_decode_iso_8859_8_i@@Base>:
   17d44:	tst	r0, #128	; 0x80
   17d48:	streq	r0, [r1, #12]
   17d4c:	beq	17d64 <myencoding_decode_iso_8859_8_i@@Base+0x20>
   17d50:	ldr	r3, [pc, #20]	; 17d6c <myencoding_decode_iso_8859_8_i@@Base+0x28>
   17d54:	add	r3, pc, r3
   17d58:	add	r0, r3, r0, lsl #2
   17d5c:	ldr	r3, [r0, #3072]	; 0xc00
   17d60:	str	r3, [r1, #12]
   17d64:	mov	r0, #0
   17d68:	bx	lr
   17d6c:	andeq	r0, r2, r0, asr #7

00017d70 <myencoding_decode_iso_8859_10@@Base>:
   17d70:	tst	r0, #128	; 0x80
   17d74:	streq	r0, [r1, #12]
   17d78:	beq	17d94 <myencoding_decode_iso_8859_10@@Base+0x24>
   17d7c:	ldr	r3, [pc, #24]	; 17d9c <myencoding_decode_iso_8859_10@@Base+0x2c>
   17d80:	sub	r0, r0, #128	; 0x80
   17d84:	add	r3, pc, r3
   17d88:	add	r0, r3, r0, lsl #2
   17d8c:	ldr	r3, [r0, #-4088]	; 0xfffff008
   17d90:	str	r3, [r1, #12]
   17d94:	mov	r0, #0
   17d98:	bx	lr
   17d9c:	andeq	r2, r2, r8, lsl #7

00017da0 <myencoding_decode_iso_8859_13@@Base>:
   17da0:	tst	r0, #128	; 0x80
   17da4:	streq	r0, [r1, #12]
   17da8:	beq	17dc0 <myencoding_decode_iso_8859_13@@Base+0x20>
   17dac:	ldr	r3, [pc, #20]	; 17dc8 <myencoding_decode_iso_8859_13@@Base+0x28>
   17db0:	add	r3, pc, r3
   17db4:	add	r0, r3, r0, lsl #2
   17db8:	ldr	r3, [r0, #-4088]	; 0xfffff008
   17dbc:	str	r3, [r1, #12]
   17dc0:	mov	r0, #0
   17dc4:	bx	lr
   17dc8:	andeq	r2, r2, ip, asr r3

00017dcc <myencoding_decode_iso_8859_14@@Base>:
   17dcc:	tst	r0, #128	; 0x80
   17dd0:	streq	r0, [r1, #12]
   17dd4:	beq	17dec <myencoding_decode_iso_8859_14@@Base+0x20>
   17dd8:	ldr	r3, [pc, #20]	; 17df4 <myencoding_decode_iso_8859_14@@Base+0x28>
   17ddc:	add	r3, pc, r3
   17de0:	add	r0, r3, r0, lsl #2
   17de4:	ldr	r3, [r0, #-3576]	; 0xfffff208
   17de8:	str	r3, [r1, #12]
   17dec:	mov	r0, #0
   17df0:	bx	lr
   17df4:	andeq	r2, r2, r0, lsr r3

00017df8 <myencoding_decode_iso_8859_15@@Base>:
   17df8:	tst	r0, #128	; 0x80
   17dfc:	streq	r0, [r1, #12]
   17e00:	beq	17e18 <myencoding_decode_iso_8859_15@@Base+0x20>
   17e04:	ldr	r3, [pc, #20]	; 17e20 <myencoding_decode_iso_8859_15@@Base+0x28>
   17e08:	add	r3, pc, r3
   17e0c:	add	r0, r3, r0, lsl #2
   17e10:	ldr	r3, [r0, #-3064]	; 0xfffff408
   17e14:	str	r3, [r1, #12]
   17e18:	mov	r0, #0
   17e1c:	bx	lr
   17e20:	andeq	r2, r2, r4, lsl #6

00017e24 <myencoding_decode_iso_8859_16@@Base>:
   17e24:	tst	r0, #128	; 0x80
   17e28:	streq	r0, [r1, #12]
   17e2c:	beq	17e44 <myencoding_decode_iso_8859_16@@Base+0x20>
   17e30:	ldr	r3, [pc, #20]	; 17e4c <myencoding_decode_iso_8859_16@@Base+0x28>
   17e34:	add	r3, pc, r3
   17e38:	add	r0, r3, r0, lsl #2
   17e3c:	ldr	r3, [r0, #-2552]	; 0xfffff608
   17e40:	str	r3, [r1, #12]
   17e44:	mov	r0, #0
   17e48:	bx	lr
   17e4c:	ldrdeq	r2, [r2], -r8

00017e50 <myencoding_decode_koi8_r@@Base>:
   17e50:	tst	r0, #128	; 0x80
   17e54:	streq	r0, [r1, #12]
   17e58:	beq	17e70 <myencoding_decode_koi8_r@@Base+0x20>
   17e5c:	ldr	r3, [pc, #20]	; 17e78 <myencoding_decode_koi8_r@@Base+0x28>
   17e60:	add	r3, pc, r3
   17e64:	add	r0, r3, r0, lsl #2
   17e68:	ldr	r3, [r0, #-2040]	; 0xfffff808
   17e6c:	str	r3, [r1, #12]
   17e70:	mov	r0, #0
   17e74:	bx	lr
   17e78:	andeq	r2, r2, ip, lsr #5

00017e7c <myencoding_decode_koi8_u@@Base>:
   17e7c:	tst	r0, #128	; 0x80
   17e80:	streq	r0, [r1, #12]
   17e84:	beq	17e9c <myencoding_decode_koi8_u@@Base+0x20>
   17e88:	ldr	r3, [pc, #20]	; 17ea4 <myencoding_decode_koi8_u@@Base+0x28>
   17e8c:	add	r3, pc, r3
   17e90:	add	r0, r3, r0, lsl #2
   17e94:	ldr	r3, [r0, #-1528]	; 0xfffffa08
   17e98:	str	r3, [r1, #12]
   17e9c:	mov	r0, #0
   17ea0:	bx	lr
   17ea4:	andeq	r2, r2, r0, lsl #5

00017ea8 <myencoding_decode_macintosh@@Base>:
   17ea8:	tst	r0, #128	; 0x80
   17eac:	streq	r0, [r1, #12]
   17eb0:	beq	17ec8 <myencoding_decode_macintosh@@Base+0x20>
   17eb4:	ldr	r3, [pc, #20]	; 17ed0 <myencoding_decode_macintosh@@Base+0x28>
   17eb8:	add	r3, pc, r3
   17ebc:	add	r0, r3, r0, lsl #2
   17ec0:	ldr	r3, [r0, #-1016]	; 0xfffffc08
   17ec4:	str	r3, [r1, #12]
   17ec8:	mov	r0, #0
   17ecc:	bx	lr
   17ed0:	andeq	r2, r2, r4, asr r2

00017ed4 <myencoding_decode_windows_874@@Base>:
   17ed4:	tst	r0, #128	; 0x80
   17ed8:	streq	r0, [r1, #12]
   17edc:	beq	17ef4 <myencoding_decode_windows_874@@Base+0x20>
   17ee0:	ldr	r3, [pc, #20]	; 17efc <myencoding_decode_windows_874@@Base+0x28>
   17ee4:	add	r3, pc, r3
   17ee8:	add	r0, r3, r0, lsl #2
   17eec:	ldr	r3, [r0, #-504]	; 0xfffffe08
   17ef0:	str	r3, [r1, #12]
   17ef4:	mov	r0, #0
   17ef8:	bx	lr
   17efc:	andeq	r2, r2, r8, lsr #4

00017f00 <myencoding_decode_windows_1250@@Base>:
   17f00:	tst	r0, #128	; 0x80
   17f04:	streq	r0, [r1, #12]
   17f08:	beq	17f20 <myencoding_decode_windows_1250@@Base+0x20>
   17f0c:	ldr	r3, [pc, #20]	; 17f28 <myencoding_decode_windows_1250@@Base+0x28>
   17f10:	add	r3, pc, r3
   17f14:	add	r0, r3, r0, lsl #2
   17f18:	ldr	r3, [r0, #8]
   17f1c:	str	r3, [r1, #12]
   17f20:	mov	r0, #0
   17f24:	bx	lr
   17f28:	strdeq	r2, [r2], -ip

00017f2c <myencoding_decode_windows_1251@@Base>:
   17f2c:	tst	r0, #128	; 0x80
   17f30:	streq	r0, [r1, #12]
   17f34:	beq	17f4c <myencoding_decode_windows_1251@@Base+0x20>
   17f38:	ldr	r3, [pc, #20]	; 17f54 <myencoding_decode_windows_1251@@Base+0x28>
   17f3c:	add	r3, pc, r3
   17f40:	add	r0, r3, r0, lsl #2
   17f44:	ldr	r3, [r0, #520]	; 0x208
   17f48:	str	r3, [r1, #12]
   17f4c:	mov	r0, #0
   17f50:	bx	lr
   17f54:	ldrdeq	r2, [r2], -r0

00017f58 <myencoding_decode_windows_1252@@Base>:
   17f58:	tst	r0, #128	; 0x80
   17f5c:	streq	r0, [r1, #12]
   17f60:	beq	17f78 <myencoding_decode_windows_1252@@Base+0x20>
   17f64:	ldr	r3, [pc, #20]	; 17f80 <myencoding_decode_windows_1252@@Base+0x28>
   17f68:	add	r3, pc, r3
   17f6c:	add	r0, r3, r0, lsl #2
   17f70:	ldr	r3, [r0, #1032]	; 0x408
   17f74:	str	r3, [r1, #12]
   17f78:	mov	r0, #0
   17f7c:	bx	lr
   17f80:	andeq	r2, r2, r4, lsr #3

00017f84 <myencoding_decode_windows_1253@@Base>:
   17f84:	tst	r0, #128	; 0x80
   17f88:	streq	r0, [r1, #12]
   17f8c:	beq	17fa4 <myencoding_decode_windows_1253@@Base+0x20>
   17f90:	ldr	r3, [pc, #20]	; 17fac <myencoding_decode_windows_1253@@Base+0x28>
   17f94:	add	r3, pc, r3
   17f98:	add	r0, r3, r0, lsl #2
   17f9c:	ldr	r3, [r0, #1544]	; 0x608
   17fa0:	str	r3, [r1, #12]
   17fa4:	mov	r0, #0
   17fa8:	bx	lr
   17fac:	andeq	r2, r2, r8, ror r1

00017fb0 <myencoding_decode_windows_1254@@Base>:
   17fb0:	tst	r0, #128	; 0x80
   17fb4:	streq	r0, [r1, #12]
   17fb8:	beq	17fd0 <myencoding_decode_windows_1254@@Base+0x20>
   17fbc:	ldr	r3, [pc, #20]	; 17fd8 <myencoding_decode_windows_1254@@Base+0x28>
   17fc0:	add	r3, pc, r3
   17fc4:	add	r0, r3, r0, lsl #2
   17fc8:	ldr	r3, [r0, #2056]	; 0x808
   17fcc:	str	r3, [r1, #12]
   17fd0:	mov	r0, #0
   17fd4:	bx	lr
   17fd8:	andeq	r2, r2, ip, asr #2

00017fdc <myencoding_decode_windows_1255@@Base>:
   17fdc:	tst	r0, #128	; 0x80
   17fe0:	streq	r0, [r1, #12]
   17fe4:	beq	17ffc <myencoding_decode_windows_1255@@Base+0x20>
   17fe8:	ldr	r3, [pc, #20]	; 18004 <myencoding_decode_windows_1255@@Base+0x28>
   17fec:	add	r3, pc, r3
   17ff0:	add	r0, r3, r0, lsl #2
   17ff4:	ldr	r3, [r0, #2568]	; 0xa08
   17ff8:	str	r3, [r1, #12]
   17ffc:	mov	r0, #0
   18000:	bx	lr
   18004:	andeq	r2, r2, r0, lsr #2

00018008 <myencoding_decode_windows_1256@@Base>:
   18008:	tst	r0, #128	; 0x80
   1800c:	streq	r0, [r1, #12]
   18010:	beq	18028 <myencoding_decode_windows_1256@@Base+0x20>
   18014:	ldr	r3, [pc, #20]	; 18030 <myencoding_decode_windows_1256@@Base+0x28>
   18018:	add	r3, pc, r3
   1801c:	add	r0, r3, r0, lsl #2
   18020:	ldr	r3, [r0, #3080]	; 0xc08
   18024:	str	r3, [r1, #12]
   18028:	mov	r0, #0
   1802c:	bx	lr
   18030:	strdeq	r2, [r2], -r4

00018034 <myencoding_decode_windows_1257@@Base>:
   18034:	tst	r0, #128	; 0x80
   18038:	streq	r0, [r1, #12]
   1803c:	beq	18058 <myencoding_decode_windows_1257@@Base+0x24>
   18040:	ldr	r3, [pc, #24]	; 18060 <myencoding_decode_windows_1257@@Base+0x2c>
   18044:	sub	r0, r0, #128	; 0x80
   18048:	add	r3, pc, r3
   1804c:	add	r0, r3, r0, lsl #2
   18050:	ldr	r3, [r0, #-4080]	; 0xfffff010
   18054:	str	r3, [r1, #12]
   18058:	mov	r0, #0
   1805c:	bx	lr
   18060:	strheq	r4, [r2], -ip

00018064 <myencoding_decode_windows_1258@@Base>:
   18064:	tst	r0, #128	; 0x80
   18068:	streq	r0, [r1, #12]
   1806c:	beq	18084 <myencoding_decode_windows_1258@@Base+0x20>
   18070:	ldr	r3, [pc, #20]	; 1808c <myencoding_decode_windows_1258@@Base+0x28>
   18074:	add	r3, pc, r3
   18078:	add	r0, r3, r0, lsl #2
   1807c:	ldr	r3, [r0, #-4080]	; 0xfffff010
   18080:	str	r3, [r1, #12]
   18084:	mov	r0, #0
   18088:	bx	lr
   1808c:	muleq	r2, r0, r0

00018090 <myencoding_decode_x_mac_cyrillic@@Base>:
   18090:	tst	r0, #128	; 0x80
   18094:	streq	r0, [r1, #12]
   18098:	beq	180b0 <myencoding_decode_x_mac_cyrillic@@Base+0x20>
   1809c:	ldr	r3, [pc, #20]	; 180b8 <myencoding_decode_x_mac_cyrillic@@Base+0x28>
   180a0:	add	r3, pc, r3
   180a4:	add	r0, r3, r0, lsl #2
   180a8:	ldr	r3, [r0, #-3568]	; 0xfffff210
   180ac:	str	r3, [r1, #12]
   180b0:	mov	r0, #0
   180b4:	bx	lr
   180b8:	andeq	r4, r2, r4, rrx

000180bc <myencoding_decode_big5@@Base>:
   180bc:	ldr	r3, [r1]
   180c0:	cmp	r3, #0
   180c4:	beq	18104 <myencoding_decode_big5@@Base+0x48>
   180c8:	add	r2, r0, #95	; 0x5f
   180cc:	cmp	r0, #126	; 0x7e
   180d0:	sub	ip, r0, #64	; 0x40
   180d4:	uxtb	r2, r2
   180d8:	push	{r4, lr}
   180dc:	movls	lr, #64	; 0x40
   180e0:	movhi	lr, #98	; 0x62
   180e4:	mov	r4, #0
   180e8:	cmp	r2, #93	; 0x5d
   180ec:	cmphi	ip, #62	; 0x3e
   180f0:	str	r4, [r1]
   180f4:	bls	18118 <myencoding_decode_big5@@Base+0x5c>
   180f8:	mov	r3, #1
   180fc:	mov	r0, r3
   18100:	pop	{r4, pc}
   18104:	tst	r0, #128	; 0x80
   18108:	streq	r0, [r1, #12]
   1810c:	bne	181c8 <myencoding_decode_big5@@Base+0x10c>
   18110:	mov	r0, r3
   18114:	bx	lr
   18118:	sub	r0, r0, #20224	; 0x4f00
   1811c:	mov	r2, #157	; 0x9d
   18120:	sub	r0, r0, #29
   18124:	mla	r3, r2, r3, r0
   18128:	sub	lr, r3, lr
   1812c:	sub	r3, lr, #1120	; 0x460
   18130:	sub	r3, r3, #13
   18134:	cmp	r3, #33	; 0x21
   18138:	addls	pc, pc, r3, lsl #2
   1813c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18140:	b	18240 <myencoding_decode_big5@@Base+0x184>
   18144:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18148:	b	18224 <myencoding_decode_big5@@Base+0x168>
   1814c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18150:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18154:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18158:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   1815c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18160:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18164:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18168:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   1816c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18170:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18174:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18178:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   1817c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18180:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18184:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18188:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   1818c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18190:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18194:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   18198:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   1819c:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181a0:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181a4:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181a8:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181ac:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181b0:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181b4:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181b8:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181bc:	b	18208 <myencoding_decode_big5@@Base+0x14c>
   181c0:	b	1825c <myencoding_decode_big5@@Base+0x1a0>
   181c4:	b	181ec <myencoding_decode_big5@@Base+0x130>
   181c8:	add	r3, r0, #127	; 0x7f
   181cc:	uxtb	r3, r3
   181d0:	cmp	r3, #125	; 0x7d
   181d4:	movhi	r3, #1
   181d8:	bhi	18110 <myencoding_decode_big5@@Base+0x54>
   181dc:	mov	r3, #2
   181e0:	str	r0, [r1]
   181e4:	mov	r0, r3
   181e8:	bx	lr
   181ec:	mov	r3, #780	; 0x30c
   181f0:	mov	r2, #234	; 0xea
   181f4:	str	r3, [r1, #16]
   181f8:	mov	r3, #0
   181fc:	str	r2, [r1, #12]
   18200:	mov	r0, r3
   18204:	pop	{r4, pc}
   18208:	mov	r3, #772	; 0x304
   1820c:	mov	r2, #234	; 0xea
   18210:	str	r3, [r1, #16]
   18214:	mov	r3, #0
   18218:	str	r2, [r1, #12]
   1821c:	mov	r0, r3
   18220:	pop	{r4, pc}
   18224:	mov	r3, #780	; 0x30c
   18228:	mov	r2, #202	; 0xca
   1822c:	str	r3, [r1, #16]
   18230:	mov	r3, #0
   18234:	str	r2, [r1, #12]
   18238:	mov	r0, r3
   1823c:	pop	{r4, pc}
   18240:	mov	r3, #772	; 0x304
   18244:	mov	r2, #202	; 0xca
   18248:	str	r3, [r1, #16]
   1824c:	mov	r3, #0
   18250:	str	r2, [r1, #12]
   18254:	mov	r0, r3
   18258:	pop	{r4, pc}
   1825c:	cmp	lr, #0
   18260:	beq	180f8 <myencoding_decode_big5@@Base+0x3c>
   18264:	ldr	r2, [pc, #24]	; 18284 <myencoding_decode_big5@@Base+0x1c8>
   18268:	mov	r3, #0
   1826c:	add	r2, pc, r2
   18270:	add	lr, r2, lr, lsl #2
   18274:	str	r3, [r1, #16]
   18278:	ldr	r2, [lr, #-2544]	; 0xfffff610
   1827c:	str	r2, [r1, #12]
   18280:	b	180fc <myencoding_decode_big5@@Base+0x40>
   18284:	muleq	r2, r8, lr

00018288 <myencoding_decode_euc_jp@@Base>:
   18288:	ldr	r3, [r1]
   1828c:	cmp	r3, #142	; 0x8e
   18290:	beq	182dc <myencoding_decode_euc_jp@@Base+0x54>
   18294:	cmp	r3, #143	; 0x8f
   18298:	beq	182b8 <myencoding_decode_euc_jp@@Base+0x30>
   1829c:	cmp	r3, #0
   182a0:	bne	1833c <myencoding_decode_euc_jp@@Base+0xb4>
   182a4:	tst	r0, #128	; 0x80
   182a8:	bne	182fc <myencoding_decode_euc_jp@@Base+0x74>
   182ac:	str	r0, [r1, #12]
   182b0:	mov	r0, #0
   182b4:	bx	lr
   182b8:	add	r3, r0, #95	; 0x5f
   182bc:	uxtb	r3, r3
   182c0:	cmp	r3, #93	; 0x5d
   182c4:	bhi	182ec <myencoding_decode_euc_jp@@Base+0x64>
   182c8:	mov	r3, #1
   182cc:	str	r0, [r1]
   182d0:	str	r3, [r1, #20]
   182d4:	mov	r0, #2
   182d8:	bx	lr
   182dc:	add	r3, r0, #95	; 0x5f
   182e0:	uxtb	r3, r3
   182e4:	cmp	r3, #62	; 0x3e
   182e8:	bls	18324 <myencoding_decode_euc_jp@@Base+0x9c>
   182ec:	mov	r3, #0
   182f0:	tst	r0, #128	; 0x80
   182f4:	str	r3, [r1]
   182f8:	beq	182ac <myencoding_decode_euc_jp@@Base+0x24>
   182fc:	add	r2, r0, #114	; 0x72
   18300:	add	r3, r0, #95	; 0x5f
   18304:	uxtb	r2, r2
   18308:	uxtb	r3, r3
   1830c:	cmp	r3, #93	; 0x5d
   18310:	cmphi	r2, #1
   18314:	strls	r0, [r1]
   18318:	movls	r0, #2
   1831c:	movhi	r0, #1
   18320:	bx	lr
   18324:	add	r0, r0, #65024	; 0xfe00
   18328:	add	r3, r0, #192	; 0xc0
   1832c:	mov	r0, #0
   18330:	str	r3, [r1, #12]
   18334:	str	r0, [r1]
   18338:	bx	lr
   1833c:	sub	r2, r3, #161	; 0xa1
   18340:	cmp	r2, #93	; 0x5d
   18344:	mov	r2, #0
   18348:	str	r2, [r1]
   1834c:	bhi	182a4 <myencoding_decode_euc_jp@@Base+0x1c>
   18350:	add	r2, r0, #95	; 0x5f
   18354:	uxtb	r2, r2
   18358:	cmp	r2, #93	; 0x5d
   1835c:	bhi	182a4 <myencoding_decode_euc_jp@@Base+0x1c>
   18360:	ldr	ip, [r1, #20]
   18364:	sub	r0, r0, #15232	; 0x3b80
   18368:	mov	r2, #94	; 0x5e
   1836c:	sub	r0, r0, #63	; 0x3f
   18370:	cmp	ip, #0
   18374:	mla	r3, r2, r3, r0
   18378:	bne	183a4 <myencoding_decode_euc_jp@@Base+0x11c>
   1837c:	ldr	r2, [pc, #56]	; 183bc <myencoding_decode_euc_jp@@Base+0x134>
   18380:	add	r2, pc, r2
   18384:	add	r3, r2, r3, lsl #2
   18388:	ldr	r0, [r3, #-2648]	; 0xfffff5a8
   1838c:	str	r0, [r1, #12]
   18390:	mov	r3, #0
   18394:	clz	r0, r0
   18398:	str	r3, [r1, #20]
   1839c:	lsr	r0, r0, #5
   183a0:	bx	lr
   183a4:	ldr	r2, [pc, #20]	; 183c0 <myencoding_decode_euc_jp@@Base+0x138>
   183a8:	add	r2, pc, r2
   183ac:	add	r3, r2, r3, lsl #2
   183b0:	ldr	r0, [r3, #2928]	; 0xb70
   183b4:	str	r0, [r1, #12]
   183b8:	b	18390 <myencoding_decode_euc_jp@@Base+0x108>
   183bc:	andeq	pc, r3, r4, lsl sp	; <UNPREDICTABLE>
   183c0:	andeq	r5, r3, r4, lsl sp

000183c4 <myencoding_decode_iso_2022_jp@@Base>:
   183c4:	ldr	r3, [r1, #4]
   183c8:	cmp	r3, #7
   183cc:	addls	pc, pc, r3, lsl #2
   183d0:	b	185c4 <myencoding_decode_iso_2022_jp@@Base+0x200>
   183d4:	b	18488 <myencoding_decode_iso_2022_jp@@Base+0xc4>
   183d8:	b	184c0 <myencoding_decode_iso_2022_jp@@Base+0xfc>
   183dc:	b	185c4 <myencoding_decode_iso_2022_jp@@Base+0x200>
   183e0:	b	184ec <myencoding_decode_iso_2022_jp@@Base+0x128>
   183e4:	b	18518 <myencoding_decode_iso_2022_jp@@Base+0x154>
   183e8:	b	18548 <myencoding_decode_iso_2022_jp@@Base+0x184>
   183ec:	b	18598 <myencoding_decode_iso_2022_jp@@Base+0x1d4>
   183f0:	b	183f4 <myencoding_decode_iso_2022_jp@@Base+0x30>
   183f4:	ldr	r3, [r1]
   183f8:	mov	r2, #0
   183fc:	cmp	r0, #66	; 0x42
   18400:	cmpeq	r3, #40	; 0x28
   18404:	sub	ip, r3, #40	; 0x28
   18408:	str	r2, [r1]
   1840c:	clz	ip, ip
   18410:	str	r2, [r1, #4]
   18414:	lsr	ip, ip, #5
   18418:	beq	18470 <myencoding_decode_iso_2022_jp@@Base+0xac>
   1841c:	cmp	r0, #74	; 0x4a
   18420:	movne	r2, #0
   18424:	andeq	r2, ip, #1
   18428:	cmp	r2, #0
   1842c:	movne	r3, #1
   18430:	strne	r3, [r1, #4]
   18434:	bne	185cc <myencoding_decode_iso_2022_jp@@Base+0x208>
   18438:	cmp	r0, #73	; 0x49
   1843c:	movne	ip, #0
   18440:	andeq	ip, ip, #1
   18444:	cmp	ip, #0
   18448:	movne	r3, #2
   1844c:	strne	r3, [r1, #4]
   18450:	bne	185cc <myencoding_decode_iso_2022_jp@@Base+0x208>
   18454:	cmp	r3, #36	; 0x24
   18458:	bne	18470 <myencoding_decode_iso_2022_jp@@Base+0xac>
   1845c:	and	r0, r0, #253	; 0xfd
   18460:	cmp	r0, #64	; 0x40
   18464:	moveq	r3, #4
   18468:	streq	r3, [r1, #4]
   1846c:	beq	185cc <myencoding_decode_iso_2022_jp@@Base+0x208>
   18470:	ldr	r2, [r1, #8]
   18474:	mov	r3, #0
   18478:	mov	r0, #1
   1847c:	str	r2, [r1, #4]
   18480:	str	r3, [r1, #20]
   18484:	bx	lr
   18488:	cmp	r0, #27
   1848c:	beq	185ec <myencoding_decode_iso_2022_jp@@Base+0x228>
   18490:	eor	r2, r0, #128	; 0x80
   18494:	sub	r3, r0, #14
   18498:	lsr	r2, r2, #7
   1849c:	cmp	r3, #1
   184a0:	movls	r3, #0
   184a4:	andhi	r3, r2, #1
   184a8:	cmp	r3, #0
   184ac:	bne	1861c <myencoding_decode_iso_2022_jp@@Base+0x258>
   184b0:	mov	r3, #0
   184b4:	str	r3, [r1, #20]
   184b8:	mov	r0, #1
   184bc:	bx	lr
   184c0:	cmp	r0, #27
   184c4:	beq	185ec <myencoding_decode_iso_2022_jp@@Base+0x228>
   184c8:	cmp	r0, #92	; 0x5c
   184cc:	beq	18630 <myencoding_decode_iso_2022_jp@@Base+0x26c>
   184d0:	cmp	r0, #126	; 0x7e
   184d4:	bne	18490 <myencoding_decode_iso_2022_jp@@Base+0xcc>
   184d8:	ldr	r3, [pc, #356]	; 18644 <myencoding_decode_iso_2022_jp@@Base+0x280>
   184dc:	mov	r0, #0
   184e0:	str	r3, [r1, #12]
   184e4:	str	r0, [r1, #20]
   184e8:	bx	lr
   184ec:	cmp	r0, #27
   184f0:	beq	185ec <myencoding_decode_iso_2022_jp@@Base+0x228>
   184f4:	sub	r3, r0, #33	; 0x21
   184f8:	cmp	r3, #62	; 0x3e
   184fc:	bhi	184b0 <myencoding_decode_iso_2022_jp@@Base+0xec>
   18500:	add	r0, r0, #65280	; 0xff00
   18504:	add	r3, r0, #64	; 0x40
   18508:	mov	r0, #0
   1850c:	str	r3, [r1, #12]
   18510:	str	r0, [r1, #20]
   18514:	bx	lr
   18518:	cmp	r0, #27
   1851c:	beq	185ec <myencoding_decode_iso_2022_jp@@Base+0x228>
   18520:	sub	r3, r0, #33	; 0x21
   18524:	cmp	r3, #93	; 0x5d
   18528:	bhi	184b0 <myencoding_decode_iso_2022_jp@@Base+0xec>
   1852c:	mov	r2, #0
   18530:	mov	r3, #5
   18534:	str	r0, [r1]
   18538:	str	r2, [r1, #20]
   1853c:	str	r3, [r1, #4]
   18540:	mov	r0, #2
   18544:	bx	lr
   18548:	cmp	r0, #27
   1854c:	beq	185fc <myencoding_decode_iso_2022_jp@@Base+0x238>
   18550:	sub	r3, r0, #33	; 0x21
   18554:	cmp	r3, #93	; 0x5d
   18558:	bhi	1860c <myencoding_decode_iso_2022_jp@@Base+0x248>
   1855c:	ldr	r3, [r1]
   18560:	sub	r2, r0, #3120	; 0xc30
   18564:	mov	r0, #94	; 0x5e
   18568:	sub	r2, r2, #15
   1856c:	mla	r2, r0, r3, r2
   18570:	ldr	r3, [pc, #208]	; 18648 <myencoding_decode_iso_2022_jp@@Base+0x284>
   18574:	mov	r0, #4
   18578:	add	r3, pc, r3
   1857c:	add	r3, r3, r2, lsl #2
   18580:	str	r0, [r1, #4]
   18584:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   18588:	clz	r0, r3
   1858c:	str	r3, [r1, #12]
   18590:	lsr	r0, r0, #5
   18594:	bx	lr
   18598:	sub	r3, r0, #36	; 0x24
   1859c:	tst	r3, #251	; 0xfb
   185a0:	moveq	r3, #7
   185a4:	ldrne	r2, [r1, #8]
   185a8:	movne	r3, #0
   185ac:	stmeq	r1, {r0, r3}
   185b0:	strne	r2, [r1, #4]
   185b4:	moveq	r0, #2
   185b8:	strne	r3, [r1, #20]
   185bc:	movne	r0, #1
   185c0:	bx	lr
   185c4:	mov	r0, #0
   185c8:	bx	lr
   185cc:	ldr	r0, [r1, #20]
   185d0:	mov	r2, #1
   185d4:	cmp	r0, #0
   185d8:	str	r3, [r1, #8]
   185dc:	moveq	r0, #2
   185e0:	movne	r0, r2
   185e4:	str	r2, [r1, #20]
   185e8:	bx	lr
   185ec:	mov	r3, #6
   185f0:	str	r3, [r1, #4]
   185f4:	mov	r0, #2
   185f8:	bx	lr
   185fc:	mov	r3, #6
   18600:	str	r3, [r1, #4]
   18604:	mov	r0, #3
   18608:	bx	lr
   1860c:	mov	r3, #4
   18610:	str	r3, [r1, #4]
   18614:	mov	r0, #1
   18618:	bx	lr
   1861c:	mov	r3, #0
   18620:	str	r0, [r1, #12]
   18624:	str	r3, [r1, #20]
   18628:	mov	r0, r3
   1862c:	bx	lr
   18630:	mov	r0, #0
   18634:	mov	r3, #165	; 0xa5
   18638:	str	r0, [r1, #20]
   1863c:	str	r3, [r1, #12]
   18640:	bx	lr
   18644:	andeq	r2, r0, lr, lsr r0
   18648:	andeq	pc, r3, ip, lsl fp	; <UNPREDICTABLE>

0001864c <myencoding_decode_x_user_defined@@Base>:
   1864c:	tst	r0, #128	; 0x80
   18650:	addne	r0, r0, #63232	; 0xf700
   18654:	str	r0, [r1, #12]
   18658:	mov	r0, #0
   1865c:	bx	lr

00018660 <myencoding_decode_utf_8@@Base>:
   18660:	ldr	r3, [r1, #20]
   18664:	cmp	r3, #0
   18668:	bne	18680 <myencoding_decode_utf_8@@Base+0x20>
   1866c:	tst	r0, #128	; 0x80
   18670:	bne	18704 <myencoding_decode_utf_8@@Base+0xa4>
   18674:	str	r0, [r1, #12]
   18678:	mov	r0, r3
   1867c:	bx	lr
   18680:	ldr	r2, [r1]
   18684:	cmp	r0, r2
   18688:	bcc	186d8 <myencoding_decode_utf_8@@Base+0x78>
   1868c:	ldr	ip, [r1, #8]
   18690:	push	{r4, lr}
   18694:	add	ip, ip, #1
   18698:	sub	r2, r3, ip
   1869c:	ldr	lr, [r1, #12]
   186a0:	add	r2, r2, r2, lsl #1
   186a4:	sub	r0, r0, #128	; 0x80
   186a8:	lsl	r2, r2, #1
   186ac:	cmp	r3, ip
   186b0:	add	r0, lr, r0, lsl r2
   186b4:	mov	r4, #128	; 0x80
   186b8:	mov	r3, #191	; 0xbf
   186bc:	str	ip, [r1, #8]
   186c0:	str	r0, [r1, #12]
   186c4:	str	r4, [r1]
   186c8:	str	r3, [r1, #4]
   186cc:	beq	18774 <myencoding_decode_utf_8@@Base+0x114>
   186d0:	mov	r0, #2
   186d4:	pop	{r4, pc}
   186d8:	ldr	r2, [r1, #4]
   186dc:	cmp	r0, r2
   186e0:	bls	1868c <myencoding_decode_utf_8@@Base+0x2c>
   186e4:	mov	r3, #0
   186e8:	mov	r0, #128	; 0x80
   186ec:	mov	r2, #191	; 0xbf
   186f0:	str	r3, [r1, #12]
   186f4:	stm	r1, {r0, r2, r3}
   186f8:	mov	r0, #5
   186fc:	str	r3, [r1, #20]
   18700:	bx	lr
   18704:	add	r3, r0, #62	; 0x3e
   18708:	uxtb	r3, r3
   1870c:	cmp	r3, #29
   18710:	bhi	18734 <myencoding_decode_utf_8@@Base+0xd4>
   18714:	mov	r3, #1
   18718:	str	r3, [r1, #20]
   1871c:	sub	r0, r0, #192	; 0xc0
   18720:	mov	r3, #6
   18724:	lsl	r3, r0, r3
   18728:	mov	r0, #2
   1872c:	str	r3, [r1, #12]
   18730:	bx	lr
   18734:	add	r3, r0, #32
   18738:	uxtb	r3, r3
   1873c:	cmp	r3, #15
   18740:	bhi	18784 <myencoding_decode_utf_8@@Base+0x124>
   18744:	cmp	r0, #224	; 0xe0
   18748:	moveq	r3, #160	; 0xa0
   1874c:	streq	r3, [r1]
   18750:	beq	18760 <myencoding_decode_utf_8@@Base+0x100>
   18754:	cmp	r0, #237	; 0xed
   18758:	moveq	r3, #159	; 0x9f
   1875c:	streq	r3, [r1, #4]
   18760:	mov	r3, #2
   18764:	str	r3, [r1, #20]
   18768:	sub	r0, r0, #224	; 0xe0
   1876c:	mov	r3, #12
   18770:	b	18724 <myencoding_decode_utf_8@@Base+0xc4>
   18774:	mov	r0, #0
   18778:	str	r0, [r1, #20]
   1877c:	str	r0, [r1, #8]
   18780:	pop	{r4, pc}
   18784:	add	r3, r0, #16
   18788:	uxtb	r3, r3
   1878c:	cmp	r3, #4
   18790:	bhi	187c4 <myencoding_decode_utf_8@@Base+0x164>
   18794:	cmp	r0, #240	; 0xf0
   18798:	moveq	r3, #144	; 0x90
   1879c:	streq	r3, [r1]
   187a0:	beq	187b0 <myencoding_decode_utf_8@@Base+0x150>
   187a4:	cmp	r0, #244	; 0xf4
   187a8:	moveq	r3, #143	; 0x8f
   187ac:	streq	r3, [r1, #4]
   187b0:	mov	r2, #2
   187b4:	sub	r0, r0, #240	; 0xf0
   187b8:	mov	r3, #12
   187bc:	str	r2, [r1, #20]
   187c0:	b	18724 <myencoding_decode_utf_8@@Base+0xc4>
   187c4:	mov	r0, #1
   187c8:	bx	lr

000187cc <myencoding_decode_shift_jis@@Base>:
   187cc:	ldr	r3, [r1]
   187d0:	cmp	r3, #0
   187d4:	beq	18844 <myencoding_decode_shift_jis@@Base+0x78>
   187d8:	cmp	r0, #126	; 0x7e
   187dc:	push	{r4, lr}
   187e0:	sub	ip, r0, #64	; 0x40
   187e4:	eor	r2, r0, #128	; 0x80
   187e8:	movhi	lr, #65	; 0x41
   187ec:	movls	lr, #64	; 0x40
   187f0:	cmp	r3, #159	; 0x9f
   187f4:	movhi	r4, #193	; 0xc1
   187f8:	movls	r4, #129	; 0x81
   187fc:	cmp	r2, #124	; 0x7c
   18800:	cmphi	ip, #62	; 0x3e
   18804:	bhi	18884 <myencoding_decode_shift_jis@@Base+0xb8>
   18808:	sub	r3, r3, r4
   1880c:	mov	r2, #188	; 0xbc
   18810:	sub	r0, r0, lr
   18814:	mlas	r2, r3, r2, r0
   18818:	beq	18884 <myencoding_decode_shift_jis@@Base+0xb8>
   1881c:	ldr	r3, [pc, #168]	; 188cc <myencoding_decode_shift_jis@@Base+0x100>
   18820:	add	r3, pc, r3
   18824:	add	r3, r3, r2, lsl #2
   18828:	ldr	r3, [r3, #-2648]	; 0xfffff5a8
   1882c:	cmp	r3, #0
   18830:	str	r3, [r1, #12]
   18834:	beq	188a8 <myencoding_decode_shift_jis@@Base+0xdc>
   18838:	clz	r0, r3
   1883c:	lsr	r0, r0, #5
   18840:	pop	{r4, pc}
   18844:	cmp	r0, #128	; 0x80
   18848:	bls	1889c <myencoding_decode_shift_jis@@Base+0xd0>
   1884c:	add	r2, r0, #95	; 0x5f
   18850:	uxtb	r2, r2
   18854:	cmp	r2, #62	; 0x3e
   18858:	bls	18894 <myencoding_decode_shift_jis@@Base+0xc8>
   1885c:	add	r2, r0, #127	; 0x7f
   18860:	add	r3, r0, #32
   18864:	uxtb	r2, r2
   18868:	uxtb	r3, r3
   1886c:	cmp	r3, #28
   18870:	cmphi	r2, #30
   18874:	strls	r0, [r1]
   18878:	movls	r0, #2
   1887c:	movhi	r0, #1
   18880:	bx	lr
   18884:	mov	r3, #0
   18888:	str	r3, [r1, #12]
   1888c:	ldr	r3, [r1, #12]
   18890:	b	18838 <myencoding_decode_shift_jis@@Base+0x6c>
   18894:	add	r0, r0, #65024	; 0xfe00
   18898:	add	r0, r0, #192	; 0xc0
   1889c:	str	r0, [r1, #12]
   188a0:	mov	r0, r3
   188a4:	bx	lr
   188a8:	sub	r3, r2, #8832	; 0x2280
   188ac:	ldr	r0, [pc, #28]	; 188d0 <myencoding_decode_shift_jis@@Base+0x104>
   188b0:	sub	r3, r3, #4
   188b4:	cmp	r3, r0
   188b8:	addls	r3, r2, #48384	; 0xbd00
   188bc:	addls	r3, r3, #124	; 0x7c
   188c0:	strls	r3, [r1, #12]
   188c4:	bls	18838 <myencoding_decode_shift_jis@@Base+0x6c>
   188c8:	b	1888c <myencoding_decode_shift_jis@@Base+0xc0>
   188cc:	andeq	pc, r3, r4, ror r8	; <UNPREDICTABLE>
   188d0:	muleq	r0, ip, r6

000188d4 <myencoding_decode_euc_kr@@Base>:
   188d4:	ldr	r3, [r1]
   188d8:	cmp	r3, #0
   188dc:	beq	18924 <myencoding_decode_euc_kr@@Base+0x50>
   188e0:	sub	r2, r0, #65	; 0x41
   188e4:	mov	ip, #0
   188e8:	uxtb	r2, r2
   188ec:	cmp	r2, #189	; 0xbd
   188f0:	str	ip, [r1]
   188f4:	bhi	18938 <myencoding_decode_euc_kr@@Base+0x64>
   188f8:	sub	r0, r0, #24320	; 0x5f00
   188fc:	mov	r2, #190	; 0xbe
   18900:	sub	r0, r0, #255	; 0xff
   18904:	mlas	r0, r2, r3, r0
   18908:	beq	18938 <myencoding_decode_euc_kr@@Base+0x64>
   1890c:	ldr	r3, [pc, #80]	; 18964 <myencoding_decode_euc_kr@@Base+0x90>
   18910:	add	r3, pc, r3
   18914:	add	r0, r3, r0, lsl #2
   18918:	ldr	r0, [r0, #1552]	; 0x610
   1891c:	str	r0, [r1, #12]
   18920:	b	1893c <myencoding_decode_euc_kr@@Base+0x68>
   18924:	tst	r0, #128	; 0x80
   18928:	bne	18948 <myencoding_decode_euc_kr@@Base+0x74>
   1892c:	str	r0, [r1, #12]
   18930:	mov	r0, r3
   18934:	bx	lr
   18938:	ldr	r0, [r1, #12]
   1893c:	clz	r0, r0
   18940:	lsr	r0, r0, #5
   18944:	bx	lr
   18948:	add	r3, r0, #127	; 0x7f
   1894c:	uxtb	r3, r3
   18950:	cmp	r3, #125	; 0x7d
   18954:	strls	r0, [r1]
   18958:	movls	r0, #2
   1895c:	movhi	r0, #1
   18960:	bx	lr
   18964:	andeq	r9, r4, ip, asr r7

00018968 <myencoding_decode_iso_8859_8@@Base>:
   18968:	b	17d44 <myencoding_decode_iso_8859_8_i@@Base>

0001896c <myencoding_get_function_by_id@@Base>:
   1896c:	ldr	r3, [pc, #8]	; 1897c <myencoding_get_function_by_id@@Base+0x10>
   18970:	add	r3, pc, r3
   18974:	ldr	r0, [r3, r0, lsl #2]
   18978:	bx	lr
   1897c:	andeq	ip, pc, ip, ror #9

00018980 <myencoding_index_gb18030_ranges_code_point@@Base>:
   18980:	ldr	r3, [pc, #148]	; 18a1c <myencoding_index_gb18030_ranges_code_point@@Base+0x9c>
   18984:	sub	r2, r0, #39168	; 0x9900
   18988:	cmp	r0, r3
   1898c:	ldr	r1, [pc, #140]	; 18a20 <myencoding_index_gb18030_ranges_code_point@@Base+0xa0>
   18990:	movls	r3, #0
   18994:	movhi	r3, #1
   18998:	sub	r2, r2, #252	; 0xfc
   1899c:	cmp	r2, r1
   189a0:	orrls	r3, r3, #1
   189a4:	cmp	r3, #0
   189a8:	bne	18a08 <myencoding_index_gb18030_ranges_code_point@@Base+0x88>
   189ac:	ldr	r3, [pc, #112]	; 18a24 <myencoding_index_gb18030_ranges_code_point@@Base+0xa4>
   189b0:	cmp	r0, r3
   189b4:	beq	18a00 <myencoding_index_gb18030_ranges_code_point@@Base+0x80>
   189b8:	ldr	r1, [pc, #104]	; 18a28 <myencoding_index_gb18030_ranges_code_point@@Base+0xa8>
   189bc:	ldr	r2, [pc, #104]	; 18a2c <myencoding_index_gb18030_ranges_code_point@@Base+0xac>
   189c0:	add	r1, pc, r1
   189c4:	sub	r1, r1, #896	; 0x380
   189c8:	mov	r3, #206	; 0xce
   189cc:	b	189dc <myencoding_index_gb18030_ranges_code_point@@Base+0x5c>
   189d0:	subs	r3, r3, #1
   189d4:	bcc	18a10 <myencoding_index_gb18030_ranges_code_point@@Base+0x90>
   189d8:	ldr	r2, [r1, r3, lsl #3]
   189dc:	cmp	r0, r2
   189e0:	bcc	189d0 <myencoding_index_gb18030_ranges_code_point@@Base+0x50>
   189e4:	ldr	r2, [pc, #68]	; 18a30 <myencoding_index_gb18030_ranges_code_point@@Base+0xb0>
   189e8:	add	r2, pc, r2
   189ec:	add	r2, r2, r3, lsl #3
   189f0:	ldr	r2, [r2, #-892]	; 0xfffffc84
   189f4:	add	r0, r0, r2
   189f8:	sub	r0, r0, r3
   189fc:	bx	lr
   18a00:	ldr	r0, [pc, #44]	; 18a34 <myencoding_index_gb18030_ranges_code_point@@Base+0xb4>
   18a04:	bx	lr
   18a08:	mov	r0, #0
   18a0c:	bx	lr
   18a10:	mov	r3, #0
   18a14:	mov	r2, r3
   18a18:	b	189f4 <myencoding_index_gb18030_ranges_code_point@@Base+0x74>
   18a1c:	andseq	lr, r2, r7, asr #4
   18a20:	andeq	r4, r2, fp, asr #16
   18a24:	andeq	r1, r0, r1, lsr #26
   18a28:	andeq	r1, r6, ip, asr #12
   18a2c:	andeq	lr, r2, r8, asr #4
   18a30:	andeq	r1, r6, r4, lsr #12
   18a34:	andeq	lr, r0, r7, asr #15

00018a38 <myencoding_decode_gb18030@@Base>:
   18a38:	ldr	ip, [r1, #8]
   18a3c:	push	{r4, lr}
   18a40:	cmp	ip, #0
   18a44:	mov	r2, r0
   18a48:	beq	18a7c <myencoding_decode_gb18030@@Base+0x44>
   18a4c:	sub	r3, r0, #48	; 0x30
   18a50:	cmp	r3, #9
   18a54:	mov	r4, r1
   18a58:	bls	18ad0 <myencoding_decode_gb18030@@Base+0x98>
   18a5c:	ldr	r0, [r1, #12]
   18a60:	mov	r3, #0
   18a64:	clz	r0, r0
   18a68:	str	r3, [r4]
   18a6c:	lsr	r0, r0, #5
   18a70:	str	r3, [r4, #4]
   18a74:	str	r3, [r4, #8]
   18a78:	pop	{r4, pc}
   18a7c:	ldr	r0, [r1, #4]
   18a80:	cmp	r0, #0
   18a84:	beq	18aac <myencoding_decode_gb18030@@Base+0x74>
   18a88:	add	r3, r2, #127	; 0x7f
   18a8c:	uxtb	r3, r3
   18a90:	cmp	r3, #125	; 0x7d
   18a94:	movls	r0, #2
   18a98:	strls	r2, [r1, #8]
   18a9c:	strhi	ip, [r1]
   18aa0:	strhi	ip, [r1, #4]
   18aa4:	movhi	r0, #1
   18aa8:	pop	{r4, pc}
   18aac:	ldr	r3, [r1]
   18ab0:	cmp	r3, #0
   18ab4:	beq	18b04 <myencoding_decode_gb18030@@Base+0xcc>
   18ab8:	sub	ip, r2, #48	; 0x30
   18abc:	cmp	ip, #9
   18ac0:	bhi	18b34 <myencoding_decode_gb18030@@Base+0xfc>
   18ac4:	str	r2, [r1, #4]
   18ac8:	mov	r0, #2
   18acc:	pop	{r4, pc}
   18ad0:	ldr	r3, [r1]
   18ad4:	ldr	r1, [r1, #4]
   18ad8:	ldr	r0, [pc, #180]	; 18b94 <myencoding_decode_gb18030@@Base+0x15c>
   18adc:	add	r3, r3, r3, lsl #2
   18ae0:	add	r0, r2, r0
   18ae4:	add	r3, r1, r3, lsl #1
   18ae8:	rsb	r3, r3, r3, lsl #6
   18aec:	add	r3, ip, r3, lsl #1
   18af0:	add	r3, r3, r3, lsl #2
   18af4:	add	r0, r0, r3, lsl #1
   18af8:	bl	10f10 <myencoding_index_gb18030_ranges_code_point@plt>
   18afc:	str	r0, [r4, #12]
   18b00:	b	18a60 <myencoding_decode_gb18030@@Base+0x28>
   18b04:	tst	r2, #128	; 0x80
   18b08:	bne	18b18 <myencoding_decode_gb18030@@Base+0xe0>
   18b0c:	str	r2, [r1, #12]
   18b10:	mov	r0, r3
   18b14:	pop	{r4, pc}
   18b18:	cmp	r2, #128	; 0x80
   18b1c:	beq	18b84 <myencoding_decode_gb18030@@Base+0x14c>
   18b20:	cmp	r2, #255	; 0xff
   18b24:	beq	18b7c <myencoding_decode_gb18030@@Base+0x144>
   18b28:	mov	r0, #2
   18b2c:	str	r2, [r1]
   18b30:	pop	{r4, pc}
   18b34:	cmp	r2, #126	; 0x7e
   18b38:	sub	lr, r2, #64	; 0x40
   18b3c:	eor	ip, r2, #128	; 0x80
   18b40:	movhi	r4, #65	; 0x41
   18b44:	movls	r4, #64	; 0x40
   18b48:	cmp	ip, #126	; 0x7e
   18b4c:	cmphi	lr, #62	; 0x3e
   18b50:	str	r0, [r1]
   18b54:	bhi	18b7c <myencoding_decode_gb18030@@Base+0x144>
   18b58:	mov	ip, #190	; 0xbe
   18b5c:	sub	r2, r2, r4
   18b60:	mla	r3, ip, r3, r2
   18b64:	ldr	r2, [pc, #44]	; 18b98 <myencoding_decode_gb18030@@Base+0x160>
   18b68:	sub	r3, r3, #24320	; 0x5f00
   18b6c:	add	r2, pc, r2
   18b70:	ldr	r3, [r2, r3, lsl #2]
   18b74:	str	r3, [r1, #12]
   18b78:	pop	{r4, pc}
   18b7c:	mov	r0, #1
   18b80:	pop	{r4, pc}
   18b84:	ldr	r2, [pc, #16]	; 18b9c <myencoding_decode_gb18030@@Base+0x164>
   18b88:	mov	r0, r3
   18b8c:	str	r2, [r1, #12]
   18b90:	pop	{r4, pc}
   18b94:			; <UNDEFINED> instruction: 0xffe6414e
   18b98:	andeq	r1, r6, r0, lsr #9
   18b9c:	andeq	r2, r0, ip, lsr #1

00018ba0 <myencoding_decode_gbk@@Base>:
   18ba0:	b	10bf8 <myencoding_decode_gb18030@plt>

00018ba4 <myencoding_decode_shared_utf_16@@Base>:
   18ba4:	ldr	r3, [r1]
   18ba8:	cmp	r3, #0
   18bac:	bne	18bbc <myencoding_decode_shared_utf_16@@Base+0x18>
   18bb0:	str	r0, [r1]
   18bb4:	mov	r0, #2
   18bb8:	bx	lr
   18bbc:	ldr	ip, [r1, #20]
   18bc0:	ldr	r2, [r1, #4]
   18bc4:	cmp	ip, #0
   18bc8:	addne	r3, r0, r3, lsl #8
   18bcc:	addeq	r3, r3, r0, lsl #8
   18bd0:	mov	r0, #0
   18bd4:	cmp	r2, r0
   18bd8:	str	r0, [r1]
   18bdc:	beq	18c24 <myencoding_decode_shared_utf_16@@Base+0x80>
   18be0:	push	{lr}		; (str lr, [sp, #-4]!)
   18be4:	sub	lr, r3, #56320	; 0xdc00
   18be8:	cmp	lr, #1024	; 0x400
   18bec:	str	r0, [r1, #4]
   18bf0:	bcc	18c40 <myencoding_decode_shared_utf_16@@Base+0x9c>
   18bf4:	lsr	r2, r3, #8
   18bf8:	cmp	ip, #0
   18bfc:	uxtbne	r2, r2
   18c00:	uxtbne	r3, r3
   18c04:	uxtbeq	r3, r3
   18c08:	uxtbeq	r2, r2
   18c0c:	strne	r2, [r1, #12]
   18c10:	strne	r3, [r1, #16]
   18c14:	streq	r3, [r1, #12]
   18c18:	streq	r2, [r1, #16]
   18c1c:	mov	r0, #5
   18c20:	pop	{pc}		; (ldr pc, [sp], #4)
   18c24:	ldr	r0, [pc, #64]	; 18c6c <myencoding_decode_shared_utf_16@@Base+0xc8>
   18c28:	sub	ip, r3, #55296	; 0xd800
   18c2c:	cmp	ip, r0
   18c30:	bhi	18c54 <myencoding_decode_shared_utf_16@@Base+0xb0>
   18c34:	str	r3, [r1, #4]
   18c38:	mov	r0, #2
   18c3c:	bx	lr
   18c40:	sub	r2, r2, #55296	; 0xd800
   18c44:	add	r3, r3, r2, lsl #10
   18c48:	add	r3, r3, #9216	; 0x2400
   18c4c:	str	r3, [r1, #12]
   18c50:	pop	{pc}		; (ldr pc, [sp], #4)
   18c54:	sub	ip, r3, #56320	; 0xdc00
   18c58:	cmp	ip, r0
   18c5c:	movhi	r0, r2
   18c60:	strhi	r3, [r1, #12]
   18c64:	movls	r0, #1
   18c68:	bx	lr
   18c6c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00018c70 <myencoding_decode_utf_16be@@Base>:
   18c70:	ldr	r3, [r1, #20]
   18c74:	cmp	r3, #0
   18c78:	moveq	r3, #1
   18c7c:	streq	r3, [r1, #20]
   18c80:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00018c84 <myencoding_decode_utf_16le@@Base>:
   18c84:	ldr	r3, [r1, #20]
   18c88:	cmp	r3, #0
   18c8c:	movne	r3, #0
   18c90:	strne	r3, [r1, #20]
   18c94:	b	10bd4 <myencoding_decode_shared_utf_16@plt>

00018c98 <myencoding_result_clean@@Base>:
   18c98:	mov	r3, #0
   18c9c:	str	r3, [r0]
   18ca0:	str	r3, [r0, #4]
   18ca4:	str	r3, [r0, #8]
   18ca8:	str	r3, [r0, #12]
   18cac:	str	r3, [r0, #16]
   18cb0:	str	r3, [r0, #20]
   18cb4:	bx	lr

00018cb8 <myencoding_codepoint_ascii_length@@Base>:
   18cb8:	cmp	r0, #127	; 0x7f
   18cbc:	bls	18ce0 <myencoding_codepoint_ascii_length@@Base+0x28>
   18cc0:	cmp	r0, #2048	; 0x800
   18cc4:	bcs	18cd0 <myencoding_codepoint_ascii_length@@Base+0x18>
   18cc8:	mov	r0, #2
   18ccc:	bx	lr
   18cd0:	cmp	r0, #65536	; 0x10000
   18cd4:	bcs	18ce8 <myencoding_codepoint_ascii_length@@Base+0x30>
   18cd8:	mov	r0, #3
   18cdc:	bx	lr
   18ce0:	mov	r0, #1
   18ce4:	bx	lr
   18ce8:	cmp	r0, #2097152	; 0x200000
   18cec:	bcs	18cf8 <myencoding_codepoint_ascii_length@@Base+0x40>
   18cf0:	mov	r0, #4
   18cf4:	bx	lr
   18cf8:	cmn	r0, #-67108863	; 0xfc000001
   18cfc:	bhi	18d08 <myencoding_codepoint_ascii_length@@Base+0x50>
   18d00:	mov	r0, #5
   18d04:	bx	lr
   18d08:	cmp	r0, #0
   18d0c:	movge	r0, #6
   18d10:	movlt	r0, #0
   18d14:	bx	lr

00018d18 <myencoding_ascii_utf_8_length@@Base>:
   18d18:	tst	r0, #128	; 0x80
   18d1c:	bne	18d28 <myencoding_ascii_utf_8_length@@Base+0x10>
   18d20:	mov	r0, #1
   18d24:	bx	lr
   18d28:	and	r3, r0, #224	; 0xe0
   18d2c:	cmp	r3, #192	; 0xc0
   18d30:	beq	18d70 <myencoding_ascii_utf_8_length@@Base+0x58>
   18d34:	and	r3, r0, #240	; 0xf0
   18d38:	cmp	r3, #224	; 0xe0
   18d3c:	beq	18d68 <myencoding_ascii_utf_8_length@@Base+0x50>
   18d40:	and	r3, r0, #248	; 0xf8
   18d44:	cmp	r3, #240	; 0xf0
   18d48:	beq	18d78 <myencoding_ascii_utf_8_length@@Base+0x60>
   18d4c:	and	r3, r0, #252	; 0xfc
   18d50:	cmp	r3, #248	; 0xf8
   18d54:	beq	18d80 <myencoding_ascii_utf_8_length@@Base+0x68>
   18d58:	cmp	r0, #252	; 0xfc
   18d5c:	moveq	r0, #6
   18d60:	movne	r0, #0
   18d64:	bx	lr
   18d68:	mov	r0, #3
   18d6c:	bx	lr
   18d70:	mov	r0, #2
   18d74:	bx	lr
   18d78:	mov	r0, #4
   18d7c:	bx	lr
   18d80:	mov	r0, #5
   18d84:	bx	lr

00018d88 <myencoding_codepoint_to_ascii_utf_8@@Base>:
   18d88:	cmp	r0, #127	; 0x7f
   18d8c:	bls	18df8 <myencoding_codepoint_to_ascii_utf_8@@Base+0x70>
   18d90:	cmp	r0, #2048	; 0x800
   18d94:	bcs	18dbc <myencoding_codepoint_to_ascii_utf_8@@Base+0x34>
   18d98:	and	r3, r0, #63	; 0x3f
   18d9c:	mvn	r2, #63	; 0x3f
   18da0:	mvn	r3, r3, lsl #25
   18da4:	orr	r0, r2, r0, lsr #6
   18da8:	mvn	r3, r3, lsr #25
   18dac:	strb	r0, [r1]
   18db0:	strb	r3, [r1, #1]
   18db4:	mov	r0, #2
   18db8:	bx	lr
   18dbc:	cmp	r0, #65536	; 0x10000
   18dc0:	push	{r4, lr}
   18dc4:	bcs	18e04 <myencoding_codepoint_to_ascii_utf_8@@Base+0x7c>
   18dc8:	lsl	ip, r0, #20
   18dcc:	mvn	lr, #127	; 0x7f
   18dd0:	and	r2, r0, #63	; 0x3f
   18dd4:	mvn	r3, #31
   18dd8:	orr	r0, r3, r0, lsr #12
   18ddc:	orr	ip, lr, ip, lsr #26
   18de0:	orr	r2, r2, lr
   18de4:	strb	r0, [r1]
   18de8:	strb	ip, [r1, #1]
   18dec:	strb	r2, [r1, #2]
   18df0:	mov	r0, #3
   18df4:	pop	{r4, pc}
   18df8:	strb	r0, [r1]
   18dfc:	mov	r0, #1
   18e00:	bx	lr
   18e04:	cmp	r0, #2097152	; 0x200000
   18e08:	bcs	18e48 <myencoding_codepoint_to_ascii_utf_8@@Base+0xc0>
   18e0c:	lsl	lr, r0, #14
   18e10:	lsl	ip, r0, #20
   18e14:	mvn	r4, #127	; 0x7f
   18e18:	and	r2, r0, #63	; 0x3f
   18e1c:	mvn	r3, #15
   18e20:	orr	r0, r3, r0, lsr #18
   18e24:	orr	lr, r4, lr, lsr #26
   18e28:	orr	ip, r4, ip, lsr #26
   18e2c:	orr	r2, r2, r4
   18e30:	strb	r0, [r1]
   18e34:	strb	lr, [r1, #1]
   18e38:	strb	ip, [r1, #2]
   18e3c:	strb	r2, [r1, #3]
   18e40:	mov	r0, #4
   18e44:	pop	{r4, pc}
   18e48:	mov	r0, #0
   18e4c:	pop	{r4, pc}

00018e50 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base>:
   18e50:	cmp	r0, #127	; 0x7f
   18e54:	mov	r3, r0
   18e58:	bls	18ec4 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x74>
   18e5c:	cmp	r0, #2048	; 0x800
   18e60:	bcs	18e88 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x38>
   18e64:	and	r2, r0, #63	; 0x3f
   18e68:	mvn	r0, #63	; 0x3f
   18e6c:	mvn	r2, r2, lsl #25
   18e70:	orr	r3, r0, r3, lsr #6
   18e74:	mvn	r2, r2, lsr #25
   18e78:	strb	r2, [r1, #1]
   18e7c:	strb	r3, [r1]
   18e80:	mov	r0, #2
   18e84:	bx	lr
   18e88:	cmp	r0, #65536	; 0x10000
   18e8c:	push	{r4, lr}
   18e90:	bcs	18ee0 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0x90>
   18e94:	lsl	ip, r0, #20
   18e98:	mvn	lr, #127	; 0x7f
   18e9c:	and	r2, r0, #63	; 0x3f
   18ea0:	mvn	r0, #31
   18ea4:	orr	r3, r0, r3, lsr #12
   18ea8:	orr	ip, lr, ip, lsr #26
   18eac:	orr	r2, r2, lr
   18eb0:	strb	ip, [r1, #1]
   18eb4:	strb	r2, [r1, #2]
   18eb8:	strb	r3, [r1]
   18ebc:	mov	r0, #3
   18ec0:	pop	{r4, pc}
   18ec4:	ldr	r2, [pc, #96]	; 18f2c <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xdc>
   18ec8:	mov	r0, #1
   18ecc:	add	r2, pc, r2
   18ed0:	add	r3, r2, r3
   18ed4:	ldrb	r3, [r3, #-1688]	; 0xfffff968
   18ed8:	strb	r3, [r1]
   18edc:	bx	lr
   18ee0:	cmp	r0, #2097152	; 0x200000
   18ee4:	bcs	18f24 <myencoding_codepoint_to_lowercase_ascii_utf_8@@Base+0xd4>
   18ee8:	lsl	lr, r0, #14
   18eec:	lsl	ip, r0, #20
   18ef0:	mvn	r4, #127	; 0x7f
   18ef4:	and	r2, r0, #63	; 0x3f
   18ef8:	mvn	r0, #15
   18efc:	orr	r3, r0, r3, lsr #18
   18f00:	orr	lr, r4, lr, lsr #26
   18f04:	orr	ip, r4, ip, lsr #26
   18f08:	orr	r2, r2, r4
   18f0c:	strb	lr, [r1, #1]
   18f10:	strb	ip, [r1, #2]
   18f14:	strb	r2, [r1, #3]
   18f18:	strb	r3, [r1]
   18f1c:	mov	r0, #4
   18f20:	pop	{r4, pc}
   18f24:	mov	r0, #0
   18f28:	pop	{r4, pc}
   18f2c:	andeq	r9, r7, r0, ror #1

00018f30 <myencoding_ascii_utf_8_to_codepoint@@Base>:
   18f30:	ldrb	r3, [r0]
   18f34:	mov	r2, r0
   18f38:	tst	r3, #128	; 0x80
   18f3c:	bne	18f4c <myencoding_ascii_utf_8_to_codepoint@@Base+0x1c>
   18f40:	str	r3, [r1]
   18f44:	mov	r0, #1
   18f48:	bx	lr
   18f4c:	and	r0, r3, #224	; 0xe0
   18f50:	cmp	r0, #192	; 0xc0
   18f54:	beq	18fb0 <myencoding_ascii_utf_8_to_codepoint@@Base+0x80>
   18f58:	and	r0, r3, #240	; 0xf0
   18f5c:	cmp	r0, #224	; 0xe0
   18f60:	beq	18f78 <myencoding_ascii_utf_8_to_codepoint@@Base+0x48>
   18f64:	and	r0, r3, #248	; 0xf8
   18f68:	cmp	r0, #240	; 0xf0
   18f6c:	beq	18fd4 <myencoding_ascii_utf_8_to_codepoint@@Base+0xa4>
   18f70:	mov	r0, #0
   18f74:	bx	lr
   18f78:	lsl	r3, r3, #12
   18f7c:	and	r3, r3, #126976	; 0x1f000
   18f80:	str	r3, [r1]
   18f84:	ldrb	ip, [r2, #1]
   18f88:	mov	r0, #3
   18f8c:	lsl	ip, ip, #6
   18f90:	and	ip, ip, #8128	; 0x1fc0
   18f94:	orr	r3, ip, r3
   18f98:	str	r3, [r1]
   18f9c:	ldrb	r2, [r2, #2]
   18fa0:	and	r2, r2, #127	; 0x7f
   18fa4:	orr	r3, r2, r3
   18fa8:	str	r3, [r1]
   18fac:	bx	lr
   18fb0:	lsl	r3, r3, #6
   18fb4:	and	r3, r3, #4032	; 0xfc0
   18fb8:	str	r3, [r1]
   18fbc:	ldrb	r2, [r2, #1]
   18fc0:	mov	r0, #2
   18fc4:	and	r2, r2, #127	; 0x7f
   18fc8:	orr	r3, r2, r3
   18fcc:	str	r3, [r1]
   18fd0:	bx	lr
   18fd4:	lsl	r3, r3, #18
   18fd8:	and	r3, r3, #3932160	; 0x3c0000
   18fdc:	str	r3, [r1]
   18fe0:	ldrb	ip, [r2, #1]
   18fe4:	mov	r0, #4
   18fe8:	lsl	ip, ip, #12
   18fec:	and	ip, ip, #520192	; 0x7f000
   18ff0:	orr	ip, ip, r3
   18ff4:	str	ip, [r1]
   18ff8:	ldrb	r3, [r2, #2]
   18ffc:	lsl	r3, r3, #6
   19000:	and	r3, r3, #8128	; 0x1fc0
   19004:	orr	r3, r3, ip
   19008:	str	r3, [r1]
   1900c:	ldrb	r2, [r2, #3]
   19010:	and	r2, r2, #127	; 0x7f
   19014:	orr	r3, r2, r3
   19018:	str	r3, [r1]
   1901c:	bx	lr

00019020 <myencoding_codepoint_to_ascii_utf_16@@Base>:
   19020:	lsrs	r2, r0, #16
   19024:	mov	r3, r0
   19028:	bne	19040 <myencoding_codepoint_to_ascii_utf_16@@Base+0x20>
   1902c:	lsr	r2, r3, #8
   19030:	mov	r0, #2
   19034:	strb	r3, [r1, #1]
   19038:	strb	r2, [r1]
   1903c:	bx	lr
   19040:	sub	r3, r0, #65536	; 0x10000
   19044:	push	{lr}		; (str lr, [sp, #-4]!)
   19048:	lsl	r2, r3, #22
   1904c:	lsr	r3, r3, #10
   19050:	lsr	r2, r2, #22
   19054:	orr	r2, r2, #56320	; 0xdc00
   19058:	orr	r3, r3, #55296	; 0xd800
   1905c:	lsr	lr, r2, #8
   19060:	lsr	ip, r3, #8
   19064:	mov	r0, #4
   19068:	strb	r2, [r1, #3]
   1906c:	strb	lr, [r1, #2]
   19070:	strb	r3, [r1, #1]
   19074:	strb	ip, [r1]
   19078:	pop	{pc}		; (ldr pc, [sp], #4)

0001907c <myencoding_convert_to_ascii_utf_8@@Base>:
   1907c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19080:	mov	r8, r1
   19084:	ldr	r1, [r0]
   19088:	sub	sp, sp, #36	; 0x24
   1908c:	cmp	r1, #0
   19090:	mov	r5, r0
   19094:	mov	r7, r2
   19098:	beq	19154 <myencoding_convert_to_ascii_utf_8@@Base+0xd8>
   1909c:	add	r6, sp, #8
   190a0:	mov	r0, r3
   190a4:	mov	r3, #0
   190a8:	str	r3, [r6, #4]
   190ac:	str	r3, [sp, #8]
   190b0:	str	r3, [r6, #8]
   190b4:	str	r3, [r6, #12]
   190b8:	str	r3, [r6, #16]
   190bc:	str	r3, [r6, #20]
   190c0:	bl	1082c <myencoding_get_function_by_id@plt>
   190c4:	cmp	r7, #0
   190c8:	lsrne	sl, r7, #1
   190cc:	addne	sl, sl, #6
   190d0:	addne	r7, r8, r7
   190d4:	movne	r4, r8
   190d8:	mov	r9, r0
   190dc:	bne	1910c <myencoding_convert_to_ascii_utf_8@@Base+0x90>
   190e0:	b	19174 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   190e4:	ldr	r1, [r5]
   190e8:	add	r1, r1, r3
   190ec:	ldr	r0, [sp, #20]
   190f0:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   190f4:	ldr	r3, [r5, #8]
   190f8:	add	r0, r3, r0
   190fc:	str	r0, [r5, #8]
   19100:	cmp	r4, r7
   19104:	sub	r0, r4, r8
   19108:	beq	19178 <myencoding_convert_to_ascii_utf_8@@Base+0xfc>
   1910c:	mov	r1, r6
   19110:	ldrb	r0, [r4], #1
   19114:	blx	r9
   19118:	cmp	r0, #0
   1911c:	bne	19100 <myencoding_convert_to_ascii_utf_8@@Base+0x84>
   19120:	ldmib	r5, {r2, r3}
   19124:	add	r0, r3, #6
   19128:	add	fp, sl, r3
   1912c:	cmp	r0, r2
   19130:	mov	r1, fp
   19134:	bcc	190e4 <myencoding_convert_to_ascii_utf_8@@Base+0x68>
   19138:	ldr	r0, [r5]
   1913c:	bl	fbd8 <mycore_realloc@plt>
   19140:	subs	r1, r0, #0
   19144:	beq	19174 <myencoding_convert_to_ascii_utf_8@@Base+0xf8>
   19148:	ldr	r3, [r5, #8]
   1914c:	stm	r5, {r1, fp}
   19150:	b	190e8 <myencoding_convert_to_ascii_utf_8@@Base+0x6c>
   19154:	add	r0, r2, #1
   19158:	str	r3, [sp, #4]
   1915c:	stmib	r5, {r0, r1}
   19160:	bl	10c94 <mycore_malloc@plt>
   19164:	ldr	r3, [sp, #4]
   19168:	cmp	r0, #0
   1916c:	str	r0, [r5]
   19170:	bne	1909c <myencoding_convert_to_ascii_utf_8@@Base+0x20>
   19174:	mov	r0, #0
   19178:	add	sp, sp, #36	; 0x24
   1917c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00019180 <myencoding_string_append_chunk@@Base>:
   19180:	push	{r4, r5, r6, r7, r8, lr}
   19184:	mov	r5, r0
   19188:	ldr	r0, [sp, #24]
   1918c:	mov	r7, r3
   19190:	mov	r4, r2
   19194:	mov	r6, r1
   19198:	bl	1082c <myencoding_get_function_by_id@plt>
   1919c:	cmp	r7, #0
   191a0:	addne	r7, r4, r7
   191a4:	movne	r8, r0
   191a8:	bne	191d4 <myencoding_string_append_chunk@@Base+0x54>
   191ac:	b	1920c <myencoding_string_append_chunk@@Base+0x8c>
   191b0:	ldr	r1, [r5]
   191b4:	ldr	r0, [r6, #12]
   191b8:	add	r1, r1, r2
   191bc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   191c0:	ldr	r2, [r5, #8]
   191c4:	add	r0, r2, r0
   191c8:	str	r0, [r5, #8]
   191cc:	cmp	r7, r4
   191d0:	beq	1920c <myencoding_string_append_chunk@@Base+0x8c>
   191d4:	mov	r1, r6
   191d8:	ldrb	r0, [r4], #1
   191dc:	blx	r8
   191e0:	cmp	r0, #0
   191e4:	bne	191cc <myencoding_string_append_chunk@@Base+0x4c>
   191e8:	ldr	r2, [r5, #8]
   191ec:	ldr	r3, [r5, #4]
   191f0:	add	r1, r2, #5
   191f4:	cmp	r1, r3
   191f8:	bcc	191b0 <myencoding_string_append_chunk@@Base+0x30>
   191fc:	mov	r0, r5
   19200:	bl	10964 <mycore_string_realloc@plt>
   19204:	ldr	r2, [r5, #8]
   19208:	b	191b0 <myencoding_string_append_chunk@@Base+0x30>
   1920c:	ldr	r1, [r5, #8]
   19210:	ldr	r3, [r5, #4]
   19214:	cmp	r1, r3
   19218:	bcc	1922c <myencoding_string_append_chunk@@Base+0xac>
   1921c:	add	r1, r1, #1
   19220:	mov	r0, r5
   19224:	bl	10964 <mycore_string_realloc@plt>
   19228:	ldr	r1, [r5, #8]
   1922c:	ldr	r3, [r5]
   19230:	mov	r2, #0
   19234:	strb	r2, [r3, r1]
   19238:	pop	{r4, r5, r6, r7, r8, pc}

0001923c <myencoding_string_append@@Base>:
   1923c:	push	{r4, r5, r6, r7, r8, lr}
   19240:	sub	sp, sp, #32
   19244:	add	r4, sp, #8
   19248:	mov	r6, r1
   1924c:	mov	r7, r2
   19250:	mov	r8, r3
   19254:	mov	r5, r0
   19258:	mov	r0, r4
   1925c:	bl	101c0 <myencoding_result_clean@plt>
   19260:	str	r8, [sp]
   19264:	mov	r3, r7
   19268:	mov	r2, r6
   1926c:	mov	r1, r4
   19270:	mov	r0, r5
   19274:	bl	fc14 <myencoding_string_append_chunk@plt>
   19278:	add	sp, sp, #32
   1927c:	pop	{r4, r5, r6, r7, r8, pc}

00019280 <myencoding_string_append_one@@Base>:
   19280:	push	{r4, r5, r6, lr}
   19284:	mov	r4, r0
   19288:	mov	r0, r3
   1928c:	mov	r6, r2
   19290:	mov	r5, r1
   19294:	bl	1082c <myencoding_get_function_by_id@plt>
   19298:	mov	r1, r5
   1929c:	mov	r3, r0
   192a0:	mov	r0, r6
   192a4:	blx	r3
   192a8:	cmp	r0, #0
   192ac:	popne	{r4, r5, r6, pc}
   192b0:	ldmib	r4, {r2, r3}
   192b4:	add	r1, r3, #5
   192b8:	cmp	r1, r2
   192bc:	bcs	192ec <myencoding_string_append_one@@Base+0x6c>
   192c0:	ldr	r1, [r4]
   192c4:	ldr	r0, [r5, #12]
   192c8:	add	r1, r1, r3
   192cc:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   192d0:	ldr	r3, [r4, #8]
   192d4:	ldr	r2, [r4]
   192d8:	mov	r1, #0
   192dc:	add	r0, r0, r3
   192e0:	str	r0, [r4, #8]
   192e4:	strb	r1, [r2, r0]
   192e8:	pop	{r4, r5, r6, pc}
   192ec:	mov	r0, r4
   192f0:	bl	10964 <mycore_string_realloc@plt>
   192f4:	ldr	r3, [r4, #8]
   192f8:	b	192c0 <myencoding_string_append_one@@Base+0x40>

000192fc <myencoding_string_append_chunk_lowercase_ascii@@Base>:
   192fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19300:	mov	r7, r3
   19304:	mov	r5, r0
   19308:	ldr	r0, [sp, #32]
   1930c:	mov	r6, r1
   19310:	mov	r4, r2
   19314:	bl	1082c <myencoding_get_function_by_id@plt>
   19318:	cmp	r7, #0
   1931c:	beq	193b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb4>
   19320:	ldr	r9, [pc, #184]	; 193e0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xe4>
   19324:	mov	r8, r0
   19328:	add	r9, pc, r9
   1932c:	add	r7, r4, r7
   19330:	b	19374 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x78>
   19334:	ldr	r3, [r5]
   19338:	ldr	r0, [r6, #12]
   1933c:	add	r1, r3, r1
   19340:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19344:	cmp	r0, #1
   19348:	ldrbeq	r1, [r4]
   1934c:	ldreq	r2, [r5]
   19350:	ldreq	r3, [r5, #8]
   19354:	ldrbeq	r1, [r9, r1]
   19358:	strbeq	r1, [r2, r3]
   1935c:	ldr	r2, [r5, #8]
   19360:	add	r0, r2, r0
   19364:	str	r0, [r5, #8]
   19368:	add	r4, r4, #1
   1936c:	cmp	r7, r4
   19370:	beq	193b0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xb4>
   19374:	mov	r1, r6
   19378:	ldrb	r0, [r4]
   1937c:	blx	r8
   19380:	cmp	r0, #0
   19384:	bne	19368 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x6c>
   19388:	ldr	r1, [r5, #8]
   1938c:	ldr	r3, [r5, #4]
   19390:	add	r2, r1, #5
   19394:	cmp	r2, r3
   19398:	bcc	19334 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   1939c:	add	r1, r1, #6
   193a0:	mov	r0, r5
   193a4:	bl	10964 <mycore_string_realloc@plt>
   193a8:	ldr	r1, [r5, #8]
   193ac:	b	19334 <myencoding_string_append_chunk_lowercase_ascii@@Base+0x38>
   193b0:	ldr	r1, [r5, #8]
   193b4:	ldr	r3, [r5, #4]
   193b8:	cmp	r1, r3
   193bc:	bcc	193d0 <myencoding_string_append_chunk_lowercase_ascii@@Base+0xd4>
   193c0:	add	r1, r1, #1
   193c4:	mov	r0, r5
   193c8:	bl	10964 <mycore_string_realloc@plt>
   193cc:	ldr	r1, [r5, #8]
   193d0:	ldr	r3, [r5]
   193d4:	mov	r2, #0
   193d8:	strb	r2, [r3, r1]
   193dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   193e0:	andeq	r8, r7, ip, ror #13

000193e4 <myencoding_string_append_lowercase_ascii@@Base>:
   193e4:	push	{r4, r5, r6, r7, r8, lr}
   193e8:	sub	sp, sp, #32
   193ec:	add	r4, sp, #8
   193f0:	mov	r6, r1
   193f4:	mov	r7, r2
   193f8:	mov	r8, r3
   193fc:	mov	r5, r0
   19400:	mov	r0, r4
   19404:	bl	101c0 <myencoding_result_clean@plt>
   19408:	str	r8, [sp]
   1940c:	mov	r3, r7
   19410:	mov	r2, r6
   19414:	mov	r1, r4
   19418:	mov	r0, r5
   1941c:	bl	10c88 <myencoding_string_append_chunk_lowercase_ascii@plt>
   19420:	add	sp, sp, #32
   19424:	pop	{r4, r5, r6, r7, r8, pc}

00019428 <myhtml_callback_before_token_done@@Base>:
   19428:	ldr	r0, [r0, #220]	; 0xdc
   1942c:	bx	lr

00019430 <myhtml_callback_after_token_done@@Base>:
   19430:	ldr	r0, [r0, #224]	; 0xe0
   19434:	bx	lr

00019438 <myhtml_callback_before_token_done_set@@Base>:
   19438:	str	r1, [r0, #220]	; 0xdc
   1943c:	str	r2, [r0, #228]	; 0xe4
   19440:	bx	lr

00019444 <myhtml_callback_after_token_done_set@@Base>:
   19444:	str	r1, [r0, #224]	; 0xe0
   19448:	str	r2, [r0, #232]	; 0xe8
   1944c:	bx	lr

00019450 <myhtml_callback_tree_node_insert@@Base>:
   19450:	ldr	r0, [r0, #236]	; 0xec
   19454:	bx	lr

00019458 <myhtml_callback_tree_node_remove@@Base>:
   19458:	ldr	r0, [r0, #240]	; 0xf0
   1945c:	bx	lr

00019460 <myhtml_callback_tree_node_insert_set@@Base>:
   19460:	str	r1, [r0, #236]	; 0xec
   19464:	str	r2, [r0, #244]	; 0xf4
   19468:	bx	lr

0001946c <myhtml_callback_tree_node_remove_set@@Base>:
   1946c:	str	r1, [r0, #240]	; 0xf0
   19470:	str	r2, [r0, #248]	; 0xf8
   19474:	bx	lr

00019478 <myhtml_charef_find@@Base>:
   19478:	push	{r4, r5, r6, r7, r8, lr}
   1947c:	ldr	r7, [pc, #172]	; 19530 <myhtml_charef_find@@Base+0xb8>
   19480:	ldrb	lr, [r0]
   19484:	add	r7, pc, r7
   19488:	lsl	r6, lr, #1
   1948c:	add	ip, r6, lr
   19490:	ldrb	r5, [r7, ip, lsl #3]
   19494:	add	ip, r7, ip, lsl #3
   19498:	cmp	r5, #0
   1949c:	beq	194dc <myhtml_charef_find@@Base+0x64>
   194a0:	ldr	r4, [r1]
   194a4:	ldrb	r8, [r0, r4]
   194a8:	cmp	r5, r8
   194ac:	beq	194bc <myhtml_charef_find@@Base+0x44>
   194b0:	bcs	194dc <myhtml_charef_find@@Base+0x64>
   194b4:	add	lr, lr, #1
   194b8:	b	19488 <myhtml_charef_find@@Base+0x10>
   194bc:	ldr	r5, [ip, #4]
   194c0:	add	r4, r4, #1
   194c4:	cmp	r5, #0
   194c8:	cmpne	r4, r2
   194cc:	str	r4, [r1]
   194d0:	bcs	19510 <myhtml_charef_find@@Base+0x98>
   194d4:	mov	lr, r5
   194d8:	b	19488 <myhtml_charef_find@@Base+0x10>
   194dc:	cmp	r3, #0
   194e0:	beq	194fc <myhtml_charef_find@@Base+0x84>
   194e4:	ldr	r2, [pc, #72]	; 19534 <myhtml_charef_find@@Base+0xbc>
   194e8:	add	r1, r6, lr
   194ec:	add	r2, pc, r2
   194f0:	add	r2, r2, r1, lsl #3
   194f4:	ldr	r2, [r2, #20]
   194f8:	str	r2, [r3]
   194fc:	ldr	r0, [pc, #52]	; 19538 <myhtml_charef_find@@Base+0xc0>
   19500:	add	lr, r6, lr
   19504:	add	r0, pc, r0
   19508:	add	r0, r0, lr, lsl #3
   1950c:	pop	{r4, r5, r6, r7, r8, pc}
   19510:	cmp	r3, #0
   19514:	ldr	r0, [pc, #32]	; 1953c <myhtml_charef_find@@Base+0xc4>
   19518:	ldrne	r2, [ip, #20]
   1951c:	add	lr, r6, lr
   19520:	add	r0, pc, r0
   19524:	strne	r2, [r3]
   19528:	add	r0, r0, lr, lsl #3
   1952c:	pop	{r4, r5, r6, r7, r8, pc}
   19530:	muleq	r7, r0, r6
   19534:	andeq	r8, r7, r8, lsr #12
   19538:	andeq	r8, r7, r0, lsl r6
   1953c:	strdeq	r8, [r7], -r4

00019540 <myhtml_charef_get_first_position@@Base>:
   19540:	ldr	r3, [pc, #12]	; 19554 <myhtml_charef_get_first_position@@Base+0x14>
   19544:	add	r0, r0, r0, lsl #1
   19548:	add	r3, pc, r3
   1954c:	add	r0, r3, r0, lsl #3
   19550:	bx	lr
   19554:	andeq	r8, r7, ip, asr #11

00019558 <myhtml_charef_find_by_pos@@Base>:
   19558:	ldr	ip, [r2]
   1955c:	push	{r4, r5, r6, r7, lr}
   19560:	ldrb	ip, [r1, ip]
   19564:	ldr	r7, [sp, #20]
   19568:	cmp	ip, #38	; 0x26
   1956c:	beq	19610 <myhtml_charef_find_by_pos@@Base+0xb8>
   19570:	ldr	r6, [pc, #292]	; 1969c <myhtml_charef_find_by_pos@@Base+0x144>
   19574:	mov	ip, #0
   19578:	add	r6, pc, r6
   1957c:	str	ip, [r7, #12]
   19580:	add	ip, r0, r0, lsl #1
   19584:	ldrb	lr, [r6, ip, lsl #3]
   19588:	add	r4, r6, ip, lsl #3
   1958c:	cmp	lr, #0
   19590:	beq	195f0 <myhtml_charef_find_by_pos@@Base+0x98>
   19594:	ldr	ip, [r2]
   19598:	ldrb	r5, [r1, ip]
   1959c:	cmp	lr, r5
   195a0:	beq	195b0 <myhtml_charef_find_by_pos@@Base+0x58>
   195a4:	bcs	195f0 <myhtml_charef_find_by_pos@@Base+0x98>
   195a8:	add	r0, r0, #1
   195ac:	b	19580 <myhtml_charef_find_by_pos@@Base+0x28>
   195b0:	cmp	lr, #59	; 0x3b
   195b4:	beq	19640 <myhtml_charef_find_by_pos@@Base+0xe8>
   195b8:	ldr	r0, [r4, #4]
   195bc:	add	ip, ip, #1
   195c0:	cmp	r0, #0
   195c4:	str	ip, [r2]
   195c8:	beq	19654 <myhtml_charef_find_by_pos@@Base+0xfc>
   195cc:	cmp	ip, r3
   195d0:	bcs	19664 <myhtml_charef_find_by_pos@@Base+0x10c>
   195d4:	ldrb	lr, [r1, ip]
   195d8:	cmp	lr, #38	; 0x26
   195dc:	beq	1967c <myhtml_charef_find_by_pos@@Base+0x124>
   195e0:	ldr	lr, [r4, #20]
   195e4:	cmp	lr, #0
   195e8:	stmibne	r7, {r4, ip}
   195ec:	b	19580 <myhtml_charef_find_by_pos@@Base+0x28>
   195f0:	ldr	r0, [r7, #4]
   195f4:	mov	r3, #1
   195f8:	cmp	r0, #0
   195fc:	str	r3, [r7, #12]
   19600:	beq	19634 <myhtml_charef_find_by_pos@@Base+0xdc>
   19604:	ldr	r3, [r7, #8]
   19608:	str	r3, [r2]
   1960c:	pop	{r4, r5, r6, r7, pc}
   19610:	ldr	r0, [r7]
   19614:	mov	r3, #1
   19618:	str	r3, [r7, #12]
   1961c:	ldr	r3, [r0, #20]
   19620:	cmp	r3, #0
   19624:	popne	{r4, r5, r6, r7, pc}
   19628:	ldr	r0, [r7, #4]
   1962c:	cmp	r0, #0
   19630:	bne	19604 <myhtml_charef_find_by_pos@@Base+0xac>
   19634:	ldr	r0, [pc, #100]	; 196a0 <myhtml_charef_find_by_pos@@Base+0x148>
   19638:	add	r0, pc, r0
   1963c:	pop	{r4, r5, r6, r7, pc}
   19640:	mov	r3, #1
   19644:	mov	r0, r4
   19648:	str	r4, [r7]
   1964c:	str	r3, [r7, #12]
   19650:	pop	{r4, r5, r6, r7, pc}
   19654:	mov	r3, #1
   19658:	mov	r0, r4
   1965c:	str	r3, [r7, #12]
   19660:	pop	{r4, r5, r6, r7, pc}
   19664:	ldr	r3, [r4, #20]
   19668:	mov	r0, r4
   1966c:	cmp	r3, #0
   19670:	str	r4, [r7]
   19674:	stmibne	r7, {r0, ip}
   19678:	pop	{r4, r5, r6, r7, pc}
   1967c:	ldr	r1, [r4, #20]
   19680:	mov	r3, #1
   19684:	cmp	r1, #0
   19688:	str	r4, [r7]
   1968c:	str	r3, [r7, #12]
   19690:	mov	r0, r4
   19694:	beq	19628 <myhtml_charef_find_by_pos@@Base+0xd0>
   19698:	pop	{r4, r5, r6, r7, pc}
   1969c:	muleq	r7, ip, r5
   196a0:	ldrdeq	r8, [r7], -ip

000196a4 <myhtml_data_process_state_ampersand_data@@Base>:
   196a4:	push	{r4, r5, r6, r7, r8, lr}
   196a8:	mov	lr, r0
   196ac:	sub	sp, sp, #16
   196b0:	mov	r4, r0
   196b4:	ldr	r0, [lr, #44]!	; 0x2c
   196b8:	add	ip, sp, #16
   196bc:	mov	r7, r2
   196c0:	str	r3, [ip, #-4]!
   196c4:	ldr	r0, [r0, #4]
   196c8:	mov	r5, r1
   196cc:	str	lr, [sp]
   196d0:	mov	r1, r7
   196d4:	mov	r2, ip
   196d8:	mov	r6, r3
   196dc:	ldr	r3, [sp, #40]	; 0x28
   196e0:	bl	107c0 <myhtml_charef_find_by_pos@plt>
   196e4:	ldr	r3, [r4, #56]	; 0x38
   196e8:	ldr	r1, [pc, #512]	; 198f0 <myhtml_data_process_state_ampersand_data@@Base+0x24c>
   196ec:	cmp	r3, #0
   196f0:	add	r1, pc, r1
   196f4:	beq	197d4 <myhtml_data_process_state_ampersand_data@@Base+0x130>
   196f8:	ldr	r3, [pc, #500]	; 198f4 <myhtml_data_process_state_ampersand_data@@Base+0x250>
   196fc:	ldr	r2, [sp, #12]
   19700:	mov	r8, r0
   19704:	ldr	r3, [r1, r3]
   19708:	str	r3, [r4]
   1970c:	ldrb	r3, [r7, r2]
   19710:	cmp	r3, #59	; 0x3b
   19714:	addeq	r2, r2, #1
   19718:	streq	r2, [sp, #12]
   1971c:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   19720:	ldrb	r1, [r4, #60]	; 0x3c
   19724:	cmp	r1, #0
   19728:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   1972c:	cmp	r3, #61	; 0x3d
   19730:	beq	19748 <myhtml_data_process_state_ampersand_data@@Base+0xa4>
   19734:	ldr	r1, [pc, #444]	; 198f8 <myhtml_data_process_state_ampersand_data@@Base+0x254>
   19738:	add	r1, pc, r1
   1973c:	ldr	r3, [r1, r3, lsl #2]
   19740:	cmp	r3, #255	; 0xff
   19744:	beq	19754 <myhtml_data_process_state_ampersand_data@@Base+0xb0>
   19748:	sub	r2, r2, r6
   1974c:	ldr	r3, [r4, #32]
   19750:	b	197e0 <myhtml_data_process_state_ampersand_data@@Base+0x13c>
   19754:	ldr	r3, [r8, #20]
   19758:	cmp	r3, #0
   1975c:	beq	19870 <myhtml_data_process_state_ampersand_data@@Base+0x1cc>
   19760:	add	r6, r8, #12
   19764:	mov	r7, #0
   19768:	ldr	r1, [r5, #8]
   1976c:	ldr	r3, [r5, #4]
   19770:	add	r1, r1, #5
   19774:	cmp	r1, r3
   19778:	add	r7, r7, #1
   1977c:	bcs	19830 <myhtml_data_process_state_ampersand_data@@Base+0x18c>
   19780:	ldr	r3, [r4, #36]	; 0x24
   19784:	ldr	r1, [r5]
   19788:	ldr	r0, [r6], #4
   1978c:	add	r1, r1, r3
   19790:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19794:	ldr	r3, [r4, #36]	; 0x24
   19798:	ldr	r2, [r8, #20]
   1979c:	cmp	r2, r7
   197a0:	add	r0, r0, r3
   197a4:	str	r0, [r4, #36]	; 0x24
   197a8:	bhi	19768 <myhtml_data_process_state_ampersand_data@@Base+0xc4>
   197ac:	ldr	r3, [r5]
   197b0:	mov	r2, #0
   197b4:	str	r0, [r5, #8]
   197b8:	strb	r2, [r3, r0]
   197bc:	ldr	r3, [sp, #12]
   197c0:	mov	r2, #0
   197c4:	str	r2, [r4, #48]	; 0x30
   197c8:	mov	r0, r3
   197cc:	add	sp, sp, #16
   197d0:	pop	{r4, r5, r6, r7, r8, pc}
   197d4:	ldr	r2, [sp, #12]
   197d8:	ldr	r3, [r4, #32]
   197dc:	sub	r2, r2, r6
   197e0:	add	r1, r7, r6
   197e4:	mov	r0, r5
   197e8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   197ec:	ldr	r3, [sp, #12]
   197f0:	add	r0, r6, r0
   197f4:	cmp	r0, r3
   197f8:	beq	197c8 <myhtml_data_process_state_ampersand_data@@Base+0x124>
   197fc:	ldr	r2, [r4, #4]
   19800:	cmp	r2, #0
   19804:	bne	1983c <myhtml_data_process_state_ampersand_data@@Base+0x198>
   19808:	sub	r2, r3, r0
   1980c:	add	r1, r7, r0
   19810:	ldrb	r3, [r4, #61]	; 0x3d
   19814:	mov	r0, r5
   19818:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1981c:	ldr	r3, [sp, #12]
   19820:	str	r0, [r4, #32]
   19824:	mov	r0, r3
   19828:	add	sp, sp, #16
   1982c:	pop	{r4, r5, r6, r7, r8, pc}
   19830:	mov	r0, r5
   19834:	bl	10964 <mycore_string_realloc@plt>
   19838:	b	19780 <myhtml_data_process_state_ampersand_data@@Base+0xdc>
   1983c:	ldrb	r1, [r4, #61]	; 0x3d
   19840:	sub	r3, r3, r0
   19844:	str	r2, [sp]
   19848:	str	r1, [sp, #4]
   1984c:	add	r2, r7, r0
   19850:	add	r1, r4, #8
   19854:	mov	r0, r5
   19858:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1985c:	ldr	r3, [sp, #12]
   19860:	str	r0, [r4, #32]
   19864:	mov	r0, r3
   19868:	add	sp, sp, #16
   1986c:	pop	{r4, r5, r6, r7, r8, pc}
   19870:	ldr	r2, [sp, #12]
   19874:	ldr	r3, [r4, #32]
   19878:	sub	r2, r2, r6
   1987c:	add	r1, r7, r6
   19880:	mov	r0, r5
   19884:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19888:	ldr	r3, [sp, #12]
   1988c:	add	r0, r6, r0
   19890:	cmp	r0, r3
   19894:	beq	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   19898:	ldr	r2, [r4, #4]
   1989c:	cmp	r2, #0
   198a0:	bne	198c4 <myhtml_data_process_state_ampersand_data@@Base+0x220>
   198a4:	sub	r2, r3, r0
   198a8:	add	r1, r7, r0
   198ac:	ldrb	r3, [r4, #61]	; 0x3d
   198b0:	mov	r0, r5
   198b4:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   198b8:	ldr	r3, [sp, #12]
   198bc:	str	r0, [r4, #32]
   198c0:	b	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   198c4:	ldrb	r1, [r4, #61]	; 0x3d
   198c8:	sub	r3, r3, r0
   198cc:	str	r2, [sp]
   198d0:	str	r1, [sp, #4]
   198d4:	add	r2, r7, r0
   198d8:	add	r1, r4, #8
   198dc:	mov	r0, r5
   198e0:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   198e4:	ldr	r3, [sp, #12]
   198e8:	str	r0, [r4, #32]
   198ec:	b	197c0 <myhtml_data_process_state_ampersand_data@@Base+0x11c>
   198f0:	andeq	fp, pc, r8, lsl #18
   198f4:			; <UNDEFINED> instruction: 0x000009b8
   198f8:	andeq	r0, lr, ip, asr #14

000198fc <myhtml_data_process_entry_clean@@Base>:
   198fc:	push	{r4, r5, r6, lr}
   19900:	mov	r2, #64	; 0x40
   19904:	mov	r1, #0
   19908:	ldr	r4, [pc, #28]	; 1992c <myhtml_data_process_entry_clean@@Base+0x30>
   1990c:	mov	r5, r0
   19910:	bl	108b0 <memset@plt>
   19914:	ldr	r2, [pc, #20]	; 19930 <myhtml_data_process_entry_clean@@Base+0x34>
   19918:	add	r4, pc, r4
   1991c:	mov	r3, r4
   19920:	ldr	r3, [r4, r2]
   19924:	str	r3, [r5]
   19928:	pop	{r4, r5, r6, pc}
   1992c:	andeq	fp, pc, r0, ror #13
   19930:			; <UNDEFINED> instruction: 0x000009b8

00019934 <myhtml_data_process_string_append_char@@Base>:
   19934:	ldmib	r0, {r2, r3}
   19938:	push	{r4, r5, r6, lr}
   1993c:	mov	r5, r1
   19940:	add	r1, r3, #2
   19944:	cmp	r1, r2
   19948:	mov	r4, r0
   1994c:	bcc	19958 <myhtml_data_process_string_append_char@@Base+0x24>
   19950:	bl	10964 <mycore_string_realloc@plt>
   19954:	ldr	r3, [r4, #8]
   19958:	ldr	r2, [r4]
   1995c:	mov	r1, #0
   19960:	strb	r5, [r2, r3]
   19964:	ldr	r3, [r4, #8]
   19968:	ldr	r2, [r4]
   1996c:	add	r3, r3, #1
   19970:	str	r3, [r4, #8]
   19974:	strb	r1, [r2, r3]
   19978:	pop	{r4, r5, r6, pc}

0001997c <myhtml_data_process_state_data@@Base>:
   1997c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19980:	sub	sp, sp, #8
   19984:	ldr	sl, [pc, #408]	; 19b24 <myhtml_data_process_state_data@@Base+0x1a8>
   19988:	ldr	ip, [sp, #40]	; 0x28
   1998c:	mov	r9, r1
   19990:	cmp	r3, ip
   19994:	mov	r8, r2
   19998:	add	sl, pc, sl
   1999c:	addcs	r1, r2, r3
   199a0:	mov	r6, r3
   199a4:	mov	r7, r0
   199a8:	movcs	r4, r3
   199ac:	movcs	r2, #0
   199b0:	bcs	199f8 <myhtml_data_process_state_data@@Base+0x7c>
   199b4:	ldrb	r3, [r8, r3]
   199b8:	add	r1, r8, r6
   199bc:	cmp	r3, #38	; 0x26
   199c0:	addne	r3, r6, #1
   199c4:	addne	r3, r8, r3
   199c8:	movne	r4, r6
   199cc:	bne	199e4 <myhtml_data_process_state_data@@Base+0x68>
   199d0:	b	19b14 <myhtml_data_process_state_data@@Base+0x198>
   199d4:	ldrb	r2, [r5]
   199d8:	add	r3, r5, #1
   199dc:	cmp	r2, #38	; 0x26
   199e0:	beq	19a4c <myhtml_data_process_state_data@@Base+0xd0>
   199e4:	add	r4, r4, #1
   199e8:	cmp	ip, r4
   199ec:	mov	r5, r3
   199f0:	bne	199d4 <myhtml_data_process_state_data@@Base+0x58>
   199f4:	sub	r2, r4, r6
   199f8:	ldr	r3, [r7, #32]
   199fc:	mov	r0, r9
   19a00:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19a04:	add	r0, r6, r0
   19a08:	cmp	r0, r4
   19a0c:	beq	19a40 <myhtml_data_process_state_data@@Base+0xc4>
   19a10:	ldr	r3, [r7, #4]
   19a14:	cmp	r3, #0
   19a18:	beq	19af0 <myhtml_data_process_state_data@@Base+0x174>
   19a1c:	ldrb	r1, [r7, #61]	; 0x3d
   19a20:	add	r2, r8, r0
   19a24:	str	r3, [sp]
   19a28:	str	r1, [sp, #4]
   19a2c:	sub	r3, r4, r0
   19a30:	add	r1, r7, #8
   19a34:	mov	r0, r9
   19a38:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19a3c:	str	r0, [r7, #32]
   19a40:	mov	r0, r4
   19a44:	add	sp, sp, #8
   19a48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19a4c:	sub	r2, r4, r6
   19a50:	ldr	r3, [r7, #32]
   19a54:	mov	r0, r9
   19a58:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19a5c:	add	r6, r6, r0
   19a60:	cmp	r6, r4
   19a64:	beq	19a8c <myhtml_data_process_state_data@@Base+0x110>
   19a68:	ldr	r3, [r7, #4]
   19a6c:	cmp	r3, #0
   19a70:	bne	19abc <myhtml_data_process_state_data@@Base+0x140>
   19a74:	add	r1, r8, r6
   19a78:	sub	r2, r4, r6
   19a7c:	ldrb	r3, [r7, #61]	; 0x3d
   19a80:	mov	r0, r9
   19a84:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19a88:	str	r0, [r7, #32]
   19a8c:	ldr	r3, [pc, #148]	; 19b28 <myhtml_data_process_state_data@@Base+0x1ac>
   19a90:	ldr	r2, [r9, #8]
   19a94:	mov	r0, r9
   19a98:	str	r2, [r7, #36]	; 0x24
   19a9c:	ldr	r3, [sl, r3]
   19aa0:	add	r4, r4, #1
   19aa4:	str	r3, [r7]
   19aa8:	ldrb	r1, [r5]
   19aac:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19ab0:	mov	r0, r4
   19ab4:	add	sp, sp, #8
   19ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19abc:	ldrb	r0, [r7, #61]	; 0x3d
   19ac0:	add	r1, r7, #8
   19ac4:	str	r3, [sp]
   19ac8:	add	r2, r8, r6
   19acc:	sub	r3, r4, r6
   19ad0:	str	r0, [sp, #4]
   19ad4:	mov	r0, r9
   19ad8:	mov	r6, r1
   19adc:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19ae0:	str	r0, [r7, #32]
   19ae4:	mov	r0, r6
   19ae8:	bl	101c0 <myencoding_result_clean@plt>
   19aec:	b	19a8c <myhtml_data_process_state_data@@Base+0x110>
   19af0:	add	r1, r8, r0
   19af4:	sub	r2, r4, r0
   19af8:	ldrb	r3, [r7, #61]	; 0x3d
   19afc:	mov	r0, r9
   19b00:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19b04:	str	r0, [r7, #32]
   19b08:	mov	r0, r4
   19b0c:	add	sp, sp, #8
   19b10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19b14:	mov	r5, r1
   19b18:	mov	r4, r6
   19b1c:	mov	r2, #0
   19b20:	b	19a50 <myhtml_data_process_state_data@@Base+0xd4>
   19b24:	andeq	fp, pc, r0, ror #12
   19b28:	andeq	r0, r0, ip, ror r9

00019b2c <myhtml_data_process_state_ampersand@@Base>:
   19b2c:	push	{r4, r5, r6, r7, r8, lr}
   19b30:	mov	r4, r3
   19b34:	ldrb	r3, [r2, r3]
   19b38:	ldr	r7, [pc, #216]	; 19c18 <myhtml_data_process_state_ampersand@@Base+0xec>
   19b3c:	mov	r6, r2
   19b40:	cmp	r3, #35	; 0x23
   19b44:	mov	r5, r0
   19b48:	mov	r8, r1
   19b4c:	add	r7, pc, r7
   19b50:	beq	19ba8 <myhtml_data_process_state_ampersand@@Base+0x7c>
   19b54:	mov	r3, #0
   19b58:	str	r3, [r0, #48]	; 0x30
   19b5c:	ldrb	r0, [r2, r4]
   19b60:	bl	10a54 <myhtml_charef_get_first_position@plt>
   19b64:	str	r0, [r5, #44]	; 0x2c
   19b68:	ldrb	r3, [r0]
   19b6c:	cmp	r3, #0
   19b70:	bne	19b88 <myhtml_data_process_state_ampersand@@Base+0x5c>
   19b74:	ldr	r3, [pc, #160]	; 19c1c <myhtml_data_process_state_ampersand@@Base+0xf0>
   19b78:	mov	r0, r4
   19b7c:	ldr	r3, [r7, r3]
   19b80:	str	r3, [r5]
   19b84:	pop	{r4, r5, r6, r7, r8, pc}
   19b88:	ldr	r3, [pc, #144]	; 19c20 <myhtml_data_process_state_ampersand@@Base+0xf4>
   19b8c:	mov	r0, r8
   19b90:	ldr	r3, [r7, r3]
   19b94:	str	r3, [r5]
   19b98:	ldrb	r1, [r6, r4]
   19b9c:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19ba0:	add	r0, r4, #1
   19ba4:	pop	{r4, r5, r6, r7, r8, pc}
   19ba8:	mov	r1, r3
   19bac:	mov	r0, r8
   19bb0:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19bb4:	ldr	r3, [sp, #24]
   19bb8:	add	r0, r4, #1
   19bbc:	cmp	r0, r3
   19bc0:	mov	r3, #0
   19bc4:	str	r3, [r5, #40]	; 0x28
   19bc8:	bcs	19bec <myhtml_data_process_state_ampersand@@Base+0xc0>
   19bcc:	ldrb	r1, [r6, r0]
   19bd0:	and	r3, r1, #223	; 0xdf
   19bd4:	cmp	r3, #88	; 0x58
   19bd8:	beq	19bfc <myhtml_data_process_state_ampersand@@Base+0xd0>
   19bdc:	ldr	r3, [pc, #64]	; 19c24 <myhtml_data_process_state_ampersand@@Base+0xf8>
   19be0:	ldr	r3, [r7, r3]
   19be4:	str	r3, [r5]
   19be8:	pop	{r4, r5, r6, r7, r8, pc}
   19bec:	ldr	r3, [pc, #52]	; 19c28 <myhtml_data_process_state_ampersand@@Base+0xfc>
   19bf0:	ldr	r3, [r7, r3]
   19bf4:	str	r3, [r5]
   19bf8:	pop	{r4, r5, r6, r7, r8, pc}
   19bfc:	mov	r0, r8
   19c00:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19c04:	ldr	r3, [pc, #32]	; 19c2c <myhtml_data_process_state_ampersand@@Base+0x100>
   19c08:	add	r0, r4, #2
   19c0c:	ldr	r3, [r7, r3]
   19c10:	str	r3, [r5]
   19c14:	pop	{r4, r5, r6, r7, r8, pc}
   19c18:	andeq	fp, pc, ip, lsr #9
   19c1c:			; <UNDEFINED> instruction: 0x000009b8
   19c20:	andeq	r0, r0, ip, asr #16
   19c24:	andeq	r0, r0, r0, lsr #19
   19c28:	andeq	r0, r0, r0, ror r7
   19c2c:	andeq	r0, r0, r8, ror r7

00019c30 <myhtml_data_process_state_ampersand_hash@@Base>:
   19c30:	push	{r4, r5, r6, lr}
   19c34:	ldrb	r2, [r2, r3]
   19c38:	ldr	r5, [pc, #80]	; 19c90 <myhtml_data_process_state_ampersand_hash@@Base+0x60>
   19c3c:	and	ip, r2, #223	; 0xdf
   19c40:	cmp	ip, #88	; 0x58
   19c44:	add	r5, pc, r5
   19c48:	beq	19c60 <myhtml_data_process_state_ampersand_hash@@Base+0x30>
   19c4c:	ldr	r2, [pc, #64]	; 19c94 <myhtml_data_process_state_ampersand_hash@@Base+0x64>
   19c50:	ldr	r2, [r5, r2]
   19c54:	str	r2, [r0]
   19c58:	mov	r0, r3
   19c5c:	pop	{r4, r5, r6, pc}
   19c60:	mov	ip, r1
   19c64:	mov	r6, r0
   19c68:	mov	r1, r2
   19c6c:	mov	r0, ip
   19c70:	mov	r4, r3
   19c74:	bl	1106c <myhtml_data_process_string_append_char@plt>
   19c78:	ldr	r2, [pc, #24]	; 19c98 <myhtml_data_process_state_ampersand_hash@@Base+0x68>
   19c7c:	add	r3, r4, #1
   19c80:	mov	r0, r3
   19c84:	ldr	r2, [r5, r2]
   19c88:	str	r2, [r6]
   19c8c:	pop	{r4, r5, r6, pc}
   19c90:			; <UNDEFINED> instruction: 0x000fb3b4
   19c94:	andeq	r0, r0, r0, lsr #19
   19c98:	andeq	r0, r0, r8, ror r7

00019c9c <myhtml_data_process_state_end@@Base>:
   19c9c:	push	{r4, r5, r6, lr}
   19ca0:	mov	r4, r1
   19ca4:	ldr	r1, [r1, #8]
   19ca8:	ldr	r3, [r4, #4]
   19cac:	add	r1, r1, #5
   19cb0:	cmp	r1, r3
   19cb4:	mov	r5, r0
   19cb8:	bcs	19d24 <myhtml_data_process_state_end@@Base+0x88>
   19cbc:	ldr	r0, [r5, #40]	; 0x28
   19cc0:	cmp	r0, #159	; 0x9f
   19cc4:	bls	19d0c <myhtml_data_process_state_end@@Base+0x70>
   19cc8:	sub	r3, r0, #55296	; 0xd800
   19ccc:	cmp	r3, #2048	; 0x800
   19cd0:	bcc	19cdc <myhtml_data_process_state_end@@Base+0x40>
   19cd4:	cmp	r0, #1114112	; 0x110000
   19cd8:	bcc	19ce4 <myhtml_data_process_state_end@@Base+0x48>
   19cdc:	ldr	r0, [pc, #76]	; 19d30 <myhtml_data_process_state_end@@Base+0x94>
   19ce0:	str	r0, [r5, #40]	; 0x28
   19ce4:	ldr	r5, [r5, #36]	; 0x24
   19ce8:	ldr	r1, [r4]
   19cec:	add	r1, r1, r5
   19cf0:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   19cf4:	ldr	r3, [r4]
   19cf8:	mov	r2, #0
   19cfc:	add	r0, r5, r0
   19d00:	str	r0, [r4, #8]
   19d04:	strb	r2, [r3, r0]
   19d08:	pop	{r4, r5, r6, pc}
   19d0c:	ldr	r3, [pc, #32]	; 19d34 <myhtml_data_process_state_end@@Base+0x98>
   19d10:	add	r3, pc, r3
   19d14:	add	r0, r3, r0, lsl #2
   19d18:	ldr	r0, [r0, #1024]	; 0x400
   19d1c:	str	r0, [r5, #40]	; 0x28
   19d20:	b	19ce4 <myhtml_data_process_state_end@@Base+0x48>
   19d24:	mov	r0, r4
   19d28:	bl	10964 <mycore_string_realloc@plt>
   19d2c:	b	19cbc <myhtml_data_process_state_end@@Base+0x20>
   19d30:	strdeq	pc, [r0], -sp
   19d34:	andeq	r0, lr, r4, ror r1

00019d38 <myhtml_data_process_state_ampersand_hash_data@@Base>:
   19d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d3c:	sub	sp, sp, #20
   19d40:	ldr	fp, [pc, #480]	; 19f28 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1f0>
   19d44:	ldr	ip, [sp, #56]	; 0x38
   19d48:	mov	r8, r1
   19d4c:	cmp	r3, ip
   19d50:	mov	r7, r2
   19d54:	add	fp, pc, fp
   19d58:	addcs	r1, r2, r3
   19d5c:	mov	r6, r3
   19d60:	mov	r5, r0
   19d64:	movcs	r4, r3
   19d68:	movcs	r2, #0
   19d6c:	bcs	19df8 <myhtml_data_process_state_ampersand_hash_data@@Base+0xc0>
   19d70:	ldrb	r2, [r7, r3]
   19d74:	ldr	r3, [pc, #432]	; 19f2c <myhtml_data_process_state_ampersand_hash_data@@Base+0x1f4>
   19d78:	add	r1, r7, r6
   19d7c:	add	r3, pc, r3
   19d80:	add	r3, r3, r2
   19d84:	str	r1, [sp, #12]
   19d88:	ldrb	r2, [r3, #1664]	; 0x680
   19d8c:	cmp	r2, #255	; 0xff
   19d90:	beq	19ea8 <myhtml_data_process_state_ampersand_hash_data@@Base+0x170>
   19d94:	ldr	sl, [pc, #404]	; 19f30 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1f8>
   19d98:	add	r0, r6, #1
   19d9c:	add	r0, r7, r0
   19da0:	mov	lr, r6
   19da4:	ldr	r9, [pc, #392]	; 19f34 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1fc>
   19da8:	add	sl, pc, sl
   19dac:	b	19dcc <myhtml_data_process_state_ampersand_hash_data@@Base+0x94>
   19db0:	ldrb	r3, [r1]
   19db4:	add	r0, r0, #1
   19db8:	add	r3, sl, r3
   19dbc:	ldrb	r2, [r3, #1664]	; 0x680
   19dc0:	cmp	r2, #255	; 0xff
   19dc4:	beq	19e4c <myhtml_data_process_state_ampersand_hash_data@@Base+0x114>
   19dc8:	mov	lr, r4
   19dcc:	ldr	r3, [r5, #40]	; 0x28
   19dd0:	add	r4, lr, #1
   19dd4:	cmp	r3, r9
   19dd8:	add	r3, r3, r3, lsl #2
   19ddc:	mov	r1, r0
   19de0:	addls	r3, r2, r3, lsl #1
   19de4:	strls	r3, [r5, #40]	; 0x28
   19de8:	cmp	ip, r4
   19dec:	bne	19db0 <myhtml_data_process_state_ampersand_hash_data@@Base+0x78>
   19df0:	ldr	r1, [sp, #12]
   19df4:	sub	r2, r4, r6
   19df8:	ldr	r3, [r5, #32]
   19dfc:	mov	r0, r8
   19e00:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19e04:	add	r0, r6, r0
   19e08:	cmp	r0, r4
   19e0c:	beq	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   19e10:	ldr	r3, [r5, #4]
   19e14:	cmp	r3, #0
   19e18:	beq	19e84 <myhtml_data_process_state_ampersand_hash_data@@Base+0x14c>
   19e1c:	ldrb	r1, [r5, #61]	; 0x3d
   19e20:	add	r2, r7, r0
   19e24:	str	r3, [sp]
   19e28:	str	r1, [sp, #4]
   19e2c:	sub	r3, r4, r0
   19e30:	add	r1, r5, #8
   19e34:	mov	r0, r8
   19e38:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19e3c:	str	r0, [r5, #32]
   19e40:	mov	r0, r4
   19e44:	add	sp, sp, #20
   19e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e4c:	ldr	r3, [pc, #228]	; 19f38 <myhtml_data_process_state_ampersand_hash_data@@Base+0x200>
   19e50:	cmp	r6, r4
   19e54:	ldr	r3, [fp, r3]
   19e58:	str	r3, [r5]
   19e5c:	beq	19ebc <myhtml_data_process_state_ampersand_hash_data@@Base+0x184>
   19e60:	ldrb	r3, [r1]
   19e64:	mov	r0, r5
   19e68:	mov	r1, r8
   19e6c:	cmp	r3, #59	; 0x3b
   19e70:	addeq	r4, lr, #2
   19e74:	bl	10370 <myhtml_data_process_state_end@plt>
   19e78:	mov	r0, r4
   19e7c:	add	sp, sp, #20
   19e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e84:	add	r1, r7, r0
   19e88:	sub	r2, r4, r0
   19e8c:	ldrb	r3, [r5, #61]	; 0x3d
   19e90:	mov	r0, r8
   19e94:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19e98:	str	r0, [r5, #32]
   19e9c:	mov	r0, r4
   19ea0:	add	sp, sp, #20
   19ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ea8:	ldr	r3, [pc, #136]	; 19f38 <myhtml_data_process_state_ampersand_hash_data@@Base+0x200>
   19eac:	add	r1, r7, r6
   19eb0:	mov	r4, r6
   19eb4:	ldr	r3, [fp, r3]
   19eb8:	str	r3, [r0]
   19ebc:	ldr	r3, [r5, #32]
   19ec0:	mov	r2, #0
   19ec4:	mov	r0, r8
   19ec8:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   19ecc:	add	r1, r0, r4
   19ed0:	cmp	r1, r4
   19ed4:	beq	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   19ed8:	ldr	r3, [r5, #4]
   19edc:	cmp	r3, #0
   19ee0:	bne	19f00 <myhtml_data_process_state_ampersand_hash_data@@Base+0x1c8>
   19ee4:	rsb	r2, r0, #0
   19ee8:	add	r1, r7, r1
   19eec:	mov	r0, r8
   19ef0:	ldrb	r3, [r5, #61]	; 0x3d
   19ef4:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   19ef8:	str	r0, [r5, #32]
   19efc:	b	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   19f00:	ldrb	ip, [r5, #61]	; 0x3d
   19f04:	add	r2, r7, r1
   19f08:	str	r3, [sp]
   19f0c:	str	ip, [sp, #4]
   19f10:	rsb	r3, r0, #0
   19f14:	add	r1, r5, #8
   19f18:	mov	r0, r8
   19f1c:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   19f20:	str	r0, [r5, #32]
   19f24:	b	19e40 <myhtml_data_process_state_ampersand_hash_data@@Base+0x108>
   19f28:	andeq	fp, pc, r4, lsr #5
   19f2c:	andeq	r0, lr, r8, lsl #2
   19f30:	ldrdeq	r0, [lr], -ip
   19f34:			; <UNDEFINED> instruction: 0x0010ffff
   19f38:			; <UNDEFINED> instruction: 0x000009b8

00019f3c <myhtml_data_process_state_ampersand_hash_x_data@@Base>:
   19f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f40:	sub	sp, sp, #28
   19f44:	mov	r7, r3
   19f48:	ldr	lr, [sp, #64]	; 0x40
   19f4c:	str	r1, [sp, #12]
   19f50:	cmp	r3, lr
   19f54:	ldr	r3, [pc, #520]	; 1a164 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x228>
   19f58:	mov	r6, r2
   19f5c:	add	r3, pc, r3
   19f60:	addcs	r1, r2, r7
   19f64:	mov	r5, r0
   19f68:	str	r3, [sp, #16]
   19f6c:	movcs	r4, r7
   19f70:	movcs	r2, #0
   19f74:	bcs	1a028 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xec>
   19f78:	ldrb	r2, [r6, r7]
   19f7c:	ldr	r3, [pc, #484]	; 1a168 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x22c>
   19f80:	add	r1, r6, r7
   19f84:	add	r3, pc, r3
   19f88:	add	r3, r3, r2
   19f8c:	str	r1, [sp, #20]
   19f90:	ldrb	r3, [r3, #1920]	; 0x780
   19f94:	cmp	r3, #255	; 0xff
   19f98:	beq	1a0dc <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1a0>
   19f9c:	ldr	fp, [pc, #456]	; 1a16c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x230>
   19fa0:	ldr	sl, [pc, #456]	; 1a170 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x234>
   19fa4:	add	r2, r6, r7
   19fa8:	add	r8, r7, #1
   19fac:	sub	r8, r8, r2
   19fb0:	mov	ip, r2
   19fb4:	mov	r0, r7
   19fb8:	ldr	r9, [pc, #436]	; 1a174 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x238>
   19fbc:	add	fp, pc, fp
   19fc0:	add	sl, pc, sl
   19fc4:	b	19fe8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xac>
   19fc8:	ldrb	r3, [ip, #1]!
   19fcc:	add	r1, r6, r1
   19fd0:	mov	r2, r1
   19fd4:	add	r3, sl, r3
   19fd8:	ldrb	r3, [r3, #1920]	; 0x780
   19fdc:	cmp	r3, #255	; 0xff
   19fe0:	beq	1a07c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x140>
   19fe4:	mov	r0, r4
   19fe8:	ldr	r3, [r5, #40]	; 0x28
   19fec:	add	r4, r0, #1
   19ff0:	cmp	r3, r9
   19ff4:	add	r1, r2, r8
   19ff8:	lsl	r3, r3, #4
   19ffc:	bhi	1a018 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0xdc>
   1a000:	str	r3, [r5, #40]	; 0x28
   1a004:	ldrb	r2, [r2]
   1a008:	add	r2, fp, r2
   1a00c:	ldrb	r2, [r2, #1920]	; 0x780
   1a010:	orr	r3, r2, r3
   1a014:	str	r3, [r5, #40]	; 0x28
   1a018:	cmp	lr, r4
   1a01c:	bne	19fc8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x8c>
   1a020:	ldr	r1, [sp, #20]
   1a024:	sub	r2, r4, r7
   1a028:	ldr	r3, [r5, #32]
   1a02c:	ldr	r0, [sp, #12]
   1a030:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a034:	add	r0, r7, r0
   1a038:	cmp	r0, r4
   1a03c:	beq	1a070 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1a040:	ldr	r3, [r5, #4]
   1a044:	cmp	r3, #0
   1a048:	beq	1a0b8 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x17c>
   1a04c:	ldrb	r1, [r5, #61]	; 0x3d
   1a050:	add	r2, r6, r0
   1a054:	str	r3, [sp]
   1a058:	str	r1, [sp, #4]
   1a05c:	sub	r3, r4, r0
   1a060:	add	r1, r5, #8
   1a064:	ldr	r0, [sp, #12]
   1a068:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a06c:	str	r0, [r5, #32]
   1a070:	mov	r0, r4
   1a074:	add	sp, sp, #28
   1a078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a07c:	ldr	r3, [pc, #244]	; 1a178 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x23c>
   1a080:	ldr	r2, [sp, #16]
   1a084:	cmp	r7, r4
   1a088:	ldr	r3, [r2, r3]
   1a08c:	str	r3, [r5]
   1a090:	beq	1a0f4 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x1b8>
   1a094:	ldrb	r3, [r1]
   1a098:	ldr	r1, [sp, #12]
   1a09c:	cmp	r3, #59	; 0x3b
   1a0a0:	addeq	r4, r0, #2
   1a0a4:	mov	r0, r5
   1a0a8:	bl	10370 <myhtml_data_process_state_end@plt>
   1a0ac:	mov	r0, r4
   1a0b0:	add	sp, sp, #28
   1a0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0b8:	add	r1, r6, r0
   1a0bc:	sub	r2, r4, r0
   1a0c0:	ldrb	r3, [r5, #61]	; 0x3d
   1a0c4:	ldr	r0, [sp, #12]
   1a0c8:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a0cc:	str	r0, [r5, #32]
   1a0d0:	mov	r0, r4
   1a0d4:	add	sp, sp, #28
   1a0d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0dc:	ldr	r3, [pc, #148]	; 1a178 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x23c>
   1a0e0:	ldr	r2, [sp, #16]
   1a0e4:	add	r1, r6, r7
   1a0e8:	mov	r4, r7
   1a0ec:	ldr	r3, [r2, r3]
   1a0f0:	str	r3, [r0]
   1a0f4:	ldr	r7, [sp, #12]
   1a0f8:	ldr	r3, [r5, #32]
   1a0fc:	mov	r2, #0
   1a100:	mov	r0, r7
   1a104:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1a108:	add	r1, r0, r4
   1a10c:	cmp	r1, r4
   1a110:	beq	1a070 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1a114:	ldr	r3, [r5, #4]
   1a118:	cmp	r3, #0
   1a11c:	bne	1a13c <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x200>
   1a120:	rsb	r2, r0, #0
   1a124:	add	r1, r6, r1
   1a128:	mov	r0, r7
   1a12c:	ldrb	r3, [r5, #61]	; 0x3d
   1a130:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1a134:	str	r0, [r5, #32]
   1a138:	b	1a070 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1a13c:	ldrb	ip, [r5, #61]	; 0x3d
   1a140:	add	r2, r6, r1
   1a144:	str	r3, [sp]
   1a148:	str	ip, [sp, #4]
   1a14c:	rsb	r3, r0, #0
   1a150:	add	r1, r5, #8
   1a154:	ldr	r0, [sp, #12]
   1a158:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1a15c:	str	r0, [r5, #32]
   1a160:	b	1a070 <myhtml_data_process_state_ampersand_hash_x_data@@Base+0x134>
   1a164:	muleq	pc, ip, r0	; <UNPREDICTABLE>
   1a168:	andeq	pc, sp, r0, lsl #30
   1a16c:	andeq	pc, sp, r8, asr #29
   1a170:	andeq	pc, sp, r4, asr #29
   1a174:			; <UNDEFINED> instruction: 0x0010ffff
   1a178:			; <UNDEFINED> instruction: 0x000009b8

0001a17c <myhtml_data_process@@Base>:
   1a17c:	push	{r4, r5, r6, r7, r8, lr}
   1a180:	subs	r4, r3, #0
   1a184:	sub	sp, sp, #8
   1a188:	beq	1a1c0 <myhtml_data_process@@Base+0x44>
   1a18c:	mov	r8, r2
   1a190:	mov	r7, r1
   1a194:	mov	r5, r0
   1a198:	mov	r3, #0
   1a19c:	str	r4, [sp]
   1a1a0:	mov	r2, r8
   1a1a4:	ldr	r6, [r5]
   1a1a8:	mov	r1, r7
   1a1ac:	mov	r0, r5
   1a1b0:	blx	r6
   1a1b4:	cmp	r4, r0
   1a1b8:	mov	r3, r0
   1a1bc:	bhi	1a19c <myhtml_data_process@@Base+0x20>
   1a1c0:	add	sp, sp, #8
   1a1c4:	pop	{r4, r5, r6, r7, r8, pc}

0001a1c8 <myhtml_data_process_end@@Base>:
   1a1c8:	ldr	r3, [pc, #256]	; 1a2d0 <myhtml_data_process_end@@Base+0x108>
   1a1cc:	ldr	r2, [pc, #256]	; 1a2d4 <myhtml_data_process_end@@Base+0x10c>
   1a1d0:	add	r3, pc, r3
   1a1d4:	push	{r4, r5, r6, r7, r8, lr}
   1a1d8:	ldr	ip, [r0]
   1a1dc:	ldr	r2, [r3, r2]
   1a1e0:	cmp	ip, r2
   1a1e4:	beq	1a228 <myhtml_data_process_end@@Base+0x60>
   1a1e8:	ldr	r2, [pc, #232]	; 1a2d8 <myhtml_data_process_end@@Base+0x110>
   1a1ec:	ldr	r2, [r3, r2]
   1a1f0:	cmp	ip, r2
   1a1f4:	beq	1a2ac <myhtml_data_process_end@@Base+0xe4>
   1a1f8:	ldr	r2, [pc, #220]	; 1a2dc <myhtml_data_process_end@@Base+0x114>
   1a1fc:	ldr	r3, [r3, r2]
   1a200:	cmp	ip, r3
   1a204:	popne	{r4, r5, r6, r7, r8, pc}
   1a208:	ldr	r3, [r1, #8]
   1a20c:	ldr	r2, [r0, #36]	; 0x24
   1a210:	sub	r3, r3, r2
   1a214:	cmp	r3, #3
   1a218:	beq	1a224 <myhtml_data_process_end@@Base+0x5c>
   1a21c:	pop	{r4, r5, r6, r7, r8, lr}
   1a220:	b	10370 <myhtml_data_process_state_end@plt>
   1a224:	pop	{r4, r5, r6, r7, r8, pc}
   1a228:	ldr	r5, [r0, #48]	; 0x30
   1a22c:	cmp	r5, #0
   1a230:	beq	1a1e8 <myhtml_data_process_end@@Base+0x20>
   1a234:	ldr	r3, [r5, #20]
   1a238:	mov	r6, r0
   1a23c:	cmp	r3, #0
   1a240:	mov	r4, r1
   1a244:	ldreq	r0, [r0, #36]	; 0x24
   1a248:	beq	1a298 <myhtml_data_process_end@@Base+0xd0>
   1a24c:	add	r7, r5, #12
   1a250:	mov	r8, #0
   1a254:	ldr	r1, [r4, #8]
   1a258:	ldr	r3, [r4, #4]
   1a25c:	add	r1, r1, #5
   1a260:	cmp	r1, r3
   1a264:	add	r8, r8, #1
   1a268:	bcs	1a2c4 <myhtml_data_process_end@@Base+0xfc>
   1a26c:	ldr	r3, [r6, #36]	; 0x24
   1a270:	ldr	r1, [r4]
   1a274:	ldr	r0, [r7], #4
   1a278:	add	r1, r1, r3
   1a27c:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1a280:	ldr	r3, [r6, #36]	; 0x24
   1a284:	ldr	r2, [r5, #20]
   1a288:	cmp	r2, r8
   1a28c:	add	r0, r0, r3
   1a290:	str	r0, [r6, #36]	; 0x24
   1a294:	bhi	1a254 <myhtml_data_process_end@@Base+0x8c>
   1a298:	ldr	r3, [r4]
   1a29c:	mov	r2, #0
   1a2a0:	str	r0, [r4, #8]
   1a2a4:	strb	r2, [r3, r0]
   1a2a8:	pop	{r4, r5, r6, r7, r8, pc}
   1a2ac:	ldr	r3, [r1, #8]
   1a2b0:	ldr	r2, [r0, #36]	; 0x24
   1a2b4:	sub	r3, r3, r2
   1a2b8:	cmp	r3, #2
   1a2bc:	bne	1a21c <myhtml_data_process_end@@Base+0x54>
   1a2c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a2c4:	mov	r0, r4
   1a2c8:	bl	10964 <mycore_string_realloc@plt>
   1a2cc:	b	1a26c <myhtml_data_process_end@@Base+0xa4>
   1a2d0:	andeq	sl, pc, r8, lsr #28
   1a2d4:	andeq	r0, r0, ip, asr #16
   1a2d8:	andeq	r0, r0, r0, lsr #19
   1a2dc:	andeq	r0, r0, r8, ror r7

0001a2e0 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base>:
   1a2e0:	ldr	r3, [r0, #8]
   1a2e4:	cmp	r3, r2
   1a2e8:	beq	1a2f4 <myhtml_get_nodes_by_attribute_value_recursion_eq_i@@Base+0x14>
   1a2ec:	mov	r0, #0
   1a2f0:	bx	lr
   1a2f4:	push	{r4, lr}
   1a2f8:	ldr	r0, [r0]
   1a2fc:	bl	102a4 <mycore_strncasecmp@plt>
   1a300:	clz	r0, r0
   1a304:	lsr	r0, r0, #5
   1a308:	pop	{r4, pc}

0001a30c <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base>:
   1a30c:	ldr	r3, [r0, #8]
   1a310:	cmp	r3, r2
   1a314:	bcs	1a320 <myhtml_get_nodes_by_attribute_value_recursion_end_i@@Base+0x14>
   1a318:	mov	r0, #0
   1a31c:	bx	lr
   1a320:	ldr	r0, [r0]
   1a324:	sub	r3, r3, r2
   1a328:	push	{r4, lr}
   1a32c:	add	r0, r0, r3
   1a330:	bl	102a4 <mycore_strncasecmp@plt>
   1a334:	clz	r0, r0
   1a338:	lsr	r0, r0, #5
   1a33c:	pop	{r4, pc}

0001a340 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base>:
   1a340:	push	{r4, r5, r6, lr}
   1a344:	ldr	lr, [r0, #8]
   1a348:	cmp	lr, r2
   1a34c:	bcc	1a384 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1a350:	mov	r4, r2
   1a354:	mov	r5, r1
   1a358:	ldr	r6, [r0]
   1a35c:	beq	1a38c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x4c>
   1a360:	mov	r1, r5
   1a364:	mov	r2, r4
   1a368:	mov	r0, r6
   1a36c:	bl	102a4 <mycore_strncasecmp@plt>
   1a370:	cmp	r0, #0
   1a374:	bne	1a384 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x44>
   1a378:	ldrb	r3, [r6, r4]
   1a37c:	cmp	r3, #45	; 0x2d
   1a380:	beq	1a39c <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x5c>
   1a384:	mov	r0, #0
   1a388:	pop	{r4, r5, r6, pc}
   1a38c:	mov	r0, r6
   1a390:	bl	102a4 <mycore_strncasecmp@plt>
   1a394:	cmp	r0, #0
   1a398:	bne	1a360 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated_i@@Base+0x20>
   1a39c:	mov	r0, #1
   1a3a0:	pop	{r4, r5, r6, pc}

0001a3a4 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base>:
   1a3a4:	ldr	r3, [r0, #8]
   1a3a8:	cmp	r3, r2
   1a3ac:	beq	1a3b8 <myhtml_get_nodes_by_attribute_value_recursion_eq@@Base+0x14>
   1a3b0:	mov	r0, #0
   1a3b4:	bx	lr
   1a3b8:	push	{r4, lr}
   1a3bc:	ldr	r0, [r0]
   1a3c0:	bl	10eec <mycore_strncmp@plt>
   1a3c4:	clz	r0, r0
   1a3c8:	lsr	r0, r0, #5
   1a3cc:	pop	{r4, pc}

0001a3d0 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base>:
   1a3d0:	ldr	r3, [r0, #8]
   1a3d4:	cmp	r3, r2
   1a3d8:	bcs	1a3e4 <myhtml_get_nodes_by_attribute_value_recursion_end@@Base+0x14>
   1a3dc:	mov	r0, #0
   1a3e0:	bx	lr
   1a3e4:	ldr	r0, [r0]
   1a3e8:	sub	r3, r3, r2
   1a3ec:	push	{r4, lr}
   1a3f0:	add	r0, r0, r3
   1a3f4:	bl	10eec <mycore_strncmp@plt>
   1a3f8:	clz	r0, r0
   1a3fc:	lsr	r0, r0, #5
   1a400:	pop	{r4, pc}

0001a404 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base>:
   1a404:	push	{r4, r5, r6, lr}
   1a408:	ldr	lr, [r0, #8]
   1a40c:	cmp	lr, r2
   1a410:	bcc	1a448 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1a414:	mov	r4, r2
   1a418:	mov	r5, r1
   1a41c:	ldr	r6, [r0]
   1a420:	beq	1a450 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x4c>
   1a424:	mov	r1, r5
   1a428:	mov	r2, r4
   1a42c:	mov	r0, r6
   1a430:	bl	10eec <mycore_strncmp@plt>
   1a434:	cmp	r0, #0
   1a438:	bne	1a448 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x44>
   1a43c:	ldrb	r3, [r6, r4]
   1a440:	cmp	r3, #45	; 0x2d
   1a444:	beq	1a460 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x5c>
   1a448:	mov	r0, #0
   1a44c:	pop	{r4, r5, r6, pc}
   1a450:	mov	r0, r6
   1a454:	bl	10eec <mycore_strncmp@plt>
   1a458:	cmp	r0, #0
   1a45c:	bne	1a424 <myhtml_get_nodes_by_attribute_value_recursion_hyphen_separated@@Base+0x20>
   1a460:	mov	r0, #1
   1a464:	pop	{r4, r5, r6, pc}

0001a468 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base>:
   1a468:	ldr	r3, [r0, #8]
   1a46c:	cmp	r3, r2
   1a470:	bcs	1a47c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x14>
   1a474:	mov	r0, #0
   1a478:	bx	lr
   1a47c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a480:	mov	r7, r0
   1a484:	ldr	r5, [r0]
   1a488:	mov	sl, r2
   1a48c:	mov	r0, r5
   1a490:	mov	r8, r1
   1a494:	bl	102a4 <mycore_strncasecmp@plt>
   1a498:	ldr	r2, [r7, #8]
   1a49c:	cmp	r0, #0
   1a4a0:	beq	1a564 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xfc>
   1a4a4:	sub	r3, r2, #1
   1a4a8:	cmp	sl, r3
   1a4ac:	addls	r9, r5, sl
   1a4b0:	ldrls	r6, [pc, #228]	; 1a59c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x134>
   1a4b4:	movls	r4, #1
   1a4b8:	bls	1a4d0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1a4bc:	b	1a51c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   1a4c0:	add	r4, r4, #1
   1a4c4:	sub	r3, r2, r4
   1a4c8:	cmp	sl, r3
   1a4cc:	bhi	1a51c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xb4>
   1a4d0:	ldrb	r3, [r5], #1
   1a4d4:	sub	r3, r3, #9
   1a4d8:	uxtb	r3, r3
   1a4dc:	cmp	r3, #23
   1a4e0:	mvn	r3, r6, lsr r3
   1a4e4:	bhi	1a4c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a4e8:	tst	r3, #1
   1a4ec:	bne	1a4c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a4f0:	mov	r2, sl
   1a4f4:	mov	r1, r8
   1a4f8:	mov	r0, r5
   1a4fc:	bl	102a4 <mycore_strncasecmp@plt>
   1a500:	cmp	r0, #0
   1a504:	beq	1a524 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xbc>
   1a508:	ldr	r2, [r7, #8]
   1a50c:	add	r4, r4, #1
   1a510:	sub	r3, r2, r4
   1a514:	cmp	sl, r3
   1a518:	bls	1a4d0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x68>
   1a51c:	mov	r0, #0
   1a520:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a524:	cmp	sl, r4
   1a528:	bcs	1a54c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xe4>
   1a52c:	ldrb	r3, [r9, r4]
   1a530:	sub	r3, r3, #9
   1a534:	uxtb	r3, r3
   1a538:	cmp	r3, #23
   1a53c:	mvn	r3, r6, lsr r3
   1a540:	bhi	1a54c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xe4>
   1a544:	tst	r3, #1
   1a548:	beq	1a55c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a54c:	ldr	r2, [r7, #8]
   1a550:	sub	r3, r2, r4
   1a554:	cmp	sl, r3
   1a558:	bne	1a4c0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x58>
   1a55c:	mov	r0, #1
   1a560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a564:	cmp	sl, r2
   1a568:	bcc	1a574 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x10c>
   1a56c:	beq	1a55c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a570:	b	1a4a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a574:	ldrb	r3, [r5, sl]
   1a578:	sub	r3, r3, #9
   1a57c:	uxtb	r3, r3
   1a580:	cmp	r3, #23
   1a584:	bhi	1a4a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a588:	ldr	r1, [pc, #12]	; 1a59c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x134>
   1a58c:	mvn	r3, r1, lsr r3
   1a590:	tst	r3, #1
   1a594:	bne	1a4a4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0x3c>
   1a598:	b	1a55c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated_i@@Base+0xf4>
   1a59c:	addeq	r0, r0, fp, lsl r0

0001a5a0 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base>:
   1a5a0:	ldr	r3, [r0, #8]
   1a5a4:	cmp	r3, r2
   1a5a8:	bcs	1a5b4 <myhtml_get_nodes_by_attribute_value_recursion_begin_i@@Base+0x14>
   1a5ac:	mov	r0, #0
   1a5b0:	bx	lr
   1a5b4:	push	{r4, lr}
   1a5b8:	ldr	r0, [r0]
   1a5bc:	bl	102a4 <mycore_strncasecmp@plt>
   1a5c0:	clz	r0, r0
   1a5c4:	lsr	r0, r0, #5
   1a5c8:	pop	{r4, pc}

0001a5cc <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base>:
   1a5cc:	ldr	r3, [r0, #8]
   1a5d0:	cmp	r3, r2
   1a5d4:	bcc	1a630 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x64>
   1a5d8:	push	{r4, r5, r6, r7, r8, lr}
   1a5dc:	mov	r7, r1
   1a5e0:	mov	r5, r2
   1a5e4:	mov	r6, r0
   1a5e8:	ldr	r8, [r0]
   1a5ec:	mov	r4, #0
   1a5f0:	b	1a604 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x38>
   1a5f4:	ldr	r3, [r6, #8]
   1a5f8:	sub	r3, r3, r4
   1a5fc:	cmp	r5, r3
   1a600:	bhi	1a628 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x5c>
   1a604:	add	r0, r8, r4
   1a608:	mov	r2, r5
   1a60c:	mov	r1, r7
   1a610:	bl	102a4 <mycore_strncasecmp@plt>
   1a614:	add	r4, r4, #1
   1a618:	cmp	r0, #0
   1a61c:	bne	1a5f4 <myhtml_get_nodes_by_attribute_value_recursion_contain_i@@Base+0x28>
   1a620:	mov	r0, #1
   1a624:	pop	{r4, r5, r6, r7, r8, pc}
   1a628:	mov	r0, #0
   1a62c:	pop	{r4, r5, r6, r7, r8, pc}
   1a630:	mov	r0, #0
   1a634:	bx	lr

0001a638 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base>:
   1a638:	ldr	r3, [r0, #8]
   1a63c:	cmp	r3, r2
   1a640:	bcs	1a64c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x14>
   1a644:	mov	r0, #0
   1a648:	bx	lr
   1a64c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a650:	mov	r7, r0
   1a654:	ldr	r5, [r0]
   1a658:	mov	sl, r2
   1a65c:	mov	r0, r5
   1a660:	mov	r8, r1
   1a664:	bl	10eec <mycore_strncmp@plt>
   1a668:	ldr	r2, [r7, #8]
   1a66c:	cmp	r0, #0
   1a670:	beq	1a734 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xfc>
   1a674:	sub	r3, r2, #1
   1a678:	cmp	sl, r3
   1a67c:	addls	r9, r5, sl
   1a680:	ldrls	r6, [pc, #228]	; 1a76c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x134>
   1a684:	movls	r4, #1
   1a688:	bls	1a6a0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1a68c:	b	1a6ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   1a690:	add	r4, r4, #1
   1a694:	sub	r3, r2, r4
   1a698:	cmp	sl, r3
   1a69c:	bhi	1a6ec <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xb4>
   1a6a0:	ldrb	r3, [r5], #1
   1a6a4:	sub	r3, r3, #9
   1a6a8:	uxtb	r3, r3
   1a6ac:	cmp	r3, #23
   1a6b0:	mvn	r3, r6, lsr r3
   1a6b4:	bhi	1a690 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a6b8:	tst	r3, #1
   1a6bc:	bne	1a690 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a6c0:	mov	r2, sl
   1a6c4:	mov	r1, r8
   1a6c8:	mov	r0, r5
   1a6cc:	bl	10eec <mycore_strncmp@plt>
   1a6d0:	cmp	r0, #0
   1a6d4:	beq	1a6f4 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xbc>
   1a6d8:	ldr	r2, [r7, #8]
   1a6dc:	add	r4, r4, #1
   1a6e0:	sub	r3, r2, r4
   1a6e4:	cmp	sl, r3
   1a6e8:	bls	1a6a0 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x68>
   1a6ec:	mov	r0, #0
   1a6f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a6f4:	cmp	sl, r4
   1a6f8:	bcs	1a71c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xe4>
   1a6fc:	ldrb	r3, [r9, r4]
   1a700:	sub	r3, r3, #9
   1a704:	uxtb	r3, r3
   1a708:	cmp	r3, #23
   1a70c:	mvn	r3, r6, lsr r3
   1a710:	bhi	1a71c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xe4>
   1a714:	tst	r3, #1
   1a718:	beq	1a72c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a71c:	ldr	r2, [r7, #8]
   1a720:	sub	r3, r2, r4
   1a724:	cmp	sl, r3
   1a728:	bne	1a690 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x58>
   1a72c:	mov	r0, #1
   1a730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a734:	cmp	sl, r2
   1a738:	bcc	1a744 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x10c>
   1a73c:	beq	1a72c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a740:	b	1a674 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a744:	ldrb	r3, [r5, sl]
   1a748:	sub	r3, r3, #9
   1a74c:	uxtb	r3, r3
   1a750:	cmp	r3, #23
   1a754:	bhi	1a674 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a758:	ldr	r1, [pc, #12]	; 1a76c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x134>
   1a75c:	mvn	r3, r1, lsr r3
   1a760:	tst	r3, #1
   1a764:	bne	1a674 <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0x3c>
   1a768:	b	1a72c <myhtml_get_nodes_by_attribute_value_recursion_whitespace_separated@@Base+0xf4>
   1a76c:	addeq	r0, r0, fp, lsl r0

0001a770 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base>:
   1a770:	ldr	r3, [r0, #8]
   1a774:	cmp	r3, r2
   1a778:	bcs	1a784 <myhtml_get_nodes_by_attribute_value_recursion_begin@@Base+0x14>
   1a77c:	mov	r0, #0
   1a780:	bx	lr
   1a784:	push	{r4, lr}
   1a788:	ldr	r0, [r0]
   1a78c:	bl	10eec <mycore_strncmp@plt>
   1a790:	clz	r0, r0
   1a794:	lsr	r0, r0, #5
   1a798:	pop	{r4, pc}

0001a79c <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base>:
   1a79c:	ldr	r3, [r0, #8]
   1a7a0:	cmp	r3, r2
   1a7a4:	bcc	1a800 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x64>
   1a7a8:	push	{r4, r5, r6, r7, r8, lr}
   1a7ac:	mov	r7, r1
   1a7b0:	mov	r5, r2
   1a7b4:	mov	r6, r0
   1a7b8:	ldr	r8, [r0]
   1a7bc:	mov	r4, #0
   1a7c0:	b	1a7d4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x38>
   1a7c4:	ldr	r3, [r6, #8]
   1a7c8:	sub	r3, r3, r4
   1a7cc:	cmp	r5, r3
   1a7d0:	bhi	1a7f8 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x5c>
   1a7d4:	add	r0, r8, r4
   1a7d8:	mov	r2, r5
   1a7dc:	mov	r1, r7
   1a7e0:	bl	10eec <mycore_strncmp@plt>
   1a7e4:	add	r4, r4, #1
   1a7e8:	cmp	r0, #0
   1a7ec:	bne	1a7c4 <myhtml_get_nodes_by_attribute_value_recursion_contain@@Base+0x28>
   1a7f0:	mov	r0, #1
   1a7f4:	pop	{r4, r5, r6, r7, r8, pc}
   1a7f8:	mov	r0, #0
   1a7fc:	pop	{r4, r5, r6, r7, r8, pc}
   1a800:	mov	r0, #0
   1a804:	bx	lr

0001a808 <myhtml_init_marker@@Base>:
   1a808:	push	{r4, lr}
   1a80c:	mov	r4, r0
   1a810:	mov	r0, #44	; 0x2c
   1a814:	bl	10c94 <mycore_malloc@plt>
   1a818:	subs	r3, r0, #0
   1a81c:	str	r0, [r4, #36]	; 0x24
   1a820:	popeq	{r4, pc}
   1a824:	pop	{r4, lr}
   1a828:	b	1109c <myhtml_tree_node_clean@plt>

0001a82c <myhtml_destroy_marker@@Base>:
   1a82c:	ldr	r0, [r0, #36]	; 0x24
   1a830:	cmp	r0, #0
   1a834:	bxeq	lr
   1a838:	b	10dcc <mycore_free@plt>

0001a83c <myhtml_stream_create@@Base>:
   1a83c:	push	{r4, r5, r6, r7, r8, lr}
   1a840:	subs	r4, r2, #0
   1a844:	bne	1a85c <myhtml_stream_create@@Base+0x20>
   1a848:	mov	r3, r4
   1a84c:	str	r4, [r0]
   1a850:	str	r4, [r1]
   1a854:	mov	r0, r3
   1a858:	pop	{r4, r5, r6, r7, r8, pc}
   1a85c:	mov	r7, r1
   1a860:	mov	r6, r3
   1a864:	mov	r5, r0
   1a868:	bl	fe18 <mythread_create@plt>
   1a86c:	mov	r2, r4
   1a870:	mov	r1, #0
   1a874:	cmp	r0, #0
   1a878:	moveq	r3, #9
   1a87c:	str	r0, [r5]
   1a880:	streq	r3, [r7]
   1a884:	mov	r3, r6
   1a888:	bl	110a8 <mythread_init@plt>
   1a88c:	cmp	r0, #0
   1a890:	mov	r3, r0
   1a894:	str	r0, [r7]
   1a898:	beq	1a854 <myhtml_stream_create@@Base+0x18>
   1a89c:	mov	r2, #0
   1a8a0:	mov	r1, r2
   1a8a4:	mov	r3, #1
   1a8a8:	ldr	r0, [r5]
   1a8ac:	bl	109ac <mythread_destroy@plt>
   1a8b0:	ldr	r3, [r7]
   1a8b4:	str	r0, [r5]
   1a8b8:	mov	r0, r3
   1a8bc:	pop	{r4, r5, r6, r7, r8, pc}

0001a8c0 <myhtml_batch_create@@Base>:
   1a8c0:	push	{r4, r5, r6, r7, r8, lr}
   1a8c4:	subs	r4, r2, #0
   1a8c8:	bne	1a8e0 <myhtml_batch_create@@Base+0x20>
   1a8cc:	mov	r3, r4
   1a8d0:	str	r4, [r0, #4]
   1a8d4:	str	r4, [r1]
   1a8d8:	mov	r0, r3
   1a8dc:	pop	{r4, r5, r6, r7, r8, pc}
   1a8e0:	mov	r5, r0
   1a8e4:	mov	r6, r1
   1a8e8:	mov	r7, r3
   1a8ec:	bl	fe18 <mythread_create@plt>
   1a8f0:	ldr	r2, [r5]
   1a8f4:	cmp	r2, #0
   1a8f8:	mov	r1, r0
   1a8fc:	str	r0, [r5, #4]
   1a900:	beq	1a94c <myhtml_batch_create@@Base+0x8c>
   1a904:	mov	r3, r7
   1a908:	mov	r0, r1
   1a90c:	mov	r2, r4
   1a910:	mov	r1, #1
   1a914:	bl	110a8 <mythread_init@plt>
   1a918:	cmp	r0, #0
   1a91c:	mov	r3, r0
   1a920:	str	r0, [r6]
   1a924:	beq	1a8d8 <myhtml_batch_create@@Base+0x18>
   1a928:	mov	r2, #0
   1a92c:	mov	r1, r2
   1a930:	mov	r3, #1
   1a934:	ldr	r0, [r5, #4]
   1a938:	bl	109ac <mythread_destroy@plt>
   1a93c:	ldr	r3, [r6]
   1a940:	str	r0, [r5, #4]
   1a944:	mov	r0, r3
   1a948:	pop	{r4, r5, r6, r7, r8, pc}
   1a94c:	mov	r3, #1
   1a950:	mov	r1, r2
   1a954:	mov	r0, r2
   1a958:	bl	109ac <mythread_destroy@plt>
   1a95c:	mov	r3, #9
   1a960:	ldr	r1, [r5, #4]
   1a964:	str	r0, [r5]
   1a968:	str	r3, [r6]
   1a96c:	b	1a904 <myhtml_batch_create@@Base+0x44>

0001a970 <myhtml_create_stream_and_batch@@Base>:
   1a970:	push	{r4, r5, r6, r7, r8, lr}
   1a974:	sub	sp, sp, #8
   1a978:	mov	r5, r1
   1a97c:	add	r4, sp, #4
   1a980:	mov	r7, r2
   1a984:	mov	r1, r4
   1a988:	mov	r2, r5
   1a98c:	mov	r3, #0
   1a990:	mov	r6, r0
   1a994:	bl	1043c <myhtml_stream_create@plt>
   1a998:	subs	r8, r0, #0
   1a99c:	beq	1a9b0 <myhtml_create_stream_and_batch@@Base+0x40>
   1a9a0:	ldr	r3, [sp, #4]
   1a9a4:	mov	r0, r3
   1a9a8:	add	sp, sp, #8
   1a9ac:	pop	{r4, r5, r6, r7, r8, pc}
   1a9b0:	mov	r3, r5
   1a9b4:	mov	r2, r7
   1a9b8:	mov	r1, r4
   1a9bc:	mov	r0, r6
   1a9c0:	bl	10598 <myhtml_batch_create@plt>
   1a9c4:	cmp	r0, #0
   1a9c8:	beq	1a9a0 <myhtml_create_stream_and_batch@@Base+0x30>
   1a9cc:	mov	r3, #1
   1a9d0:	mov	r2, r8
   1a9d4:	mov	r1, r8
   1a9d8:	ldr	r0, [r6]
   1a9dc:	bl	109ac <mythread_destroy@plt>
   1a9e0:	ldr	r3, [sp, #4]
   1a9e4:	str	r0, [r6]
   1a9e8:	b	1a9a4 <myhtml_create_stream_and_batch@@Base+0x34>

0001a9ec <myhtml_create@@Base>:
   1a9ec:	mov	r1, #40	; 0x28
   1a9f0:	mov	r0, #1
   1a9f4:	b	ff14 <mycore_calloc@plt>

0001a9f8 <myhtml_clean@@Base>:
   1a9f8:	bx	lr

0001a9fc <myhtml_init@@Base>:
   1a9fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1aa00:	mov	r4, r0
   1aa04:	sub	sp, sp, #12
   1aa08:	str	r1, [r0, #32]
   1aa0c:	mov	r5, r1
   1aa10:	mov	r7, r2
   1aa14:	bl	10ab4 <myhtml_init_marker@plt>
   1aa18:	mov	r0, r4
   1aa1c:	bl	fcbc <myhtml_tokenizer_state_init@plt>
   1aa20:	ldr	r6, [pc, #492]	; 1ac14 <myhtml_init@@Base+0x218>
   1aa24:	add	r6, pc, r6
   1aa28:	cmp	r0, #0
   1aa2c:	str	r0, [sp, #4]
   1aa30:	beq	1aa3c <myhtml_init@@Base+0x40>
   1aa34:	add	sp, sp, #12
   1aa38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1aa3c:	mov	r0, r4
   1aa40:	bl	10bec <myhtml_rules_init@plt>
   1aa44:	cmp	r0, #0
   1aa48:	str	r0, [sp, #4]
   1aa4c:	bne	1aa34 <myhtml_init@@Base+0x38>
   1aa50:	cmp	r7, #0
   1aa54:	beq	1ab34 <myhtml_init@@Base+0x138>
   1aa58:	cmp	r5, #1
   1aa5c:	beq	1abc0 <myhtml_init@@Base+0x1c4>
   1aa60:	cmp	r5, #2
   1aa64:	beq	1ab48 <myhtml_init@@Base+0x14c>
   1aa68:	cmp	r7, #2
   1aa6c:	movcc	r7, #2
   1aa70:	sub	r2, r7, #1
   1aa74:	mov	r1, #1
   1aa78:	mov	r0, r4
   1aa7c:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1aa80:	cmp	r0, #0
   1aa84:	str	r0, [sp, #4]
   1aa88:	bne	1aa34 <myhtml_init@@Base+0x38>
   1aa8c:	add	r0, sp, #4
   1aa90:	ldr	r5, [r4]
   1aa94:	bl	107d8 <mythread_queue_list_create@plt>
   1aa98:	ldm	r4, {ip, lr}
   1aa9c:	ldr	r2, [pc, #372]	; 1ac18 <myhtml_init@@Base+0x21c>
   1aaa0:	ldr	r1, [pc, #372]	; 1ac1c <myhtml_init@@Base+0x220>
   1aaa4:	mov	r3, #4
   1aaa8:	str	r0, [r5, #16]
   1aaac:	ldr	r5, [ip, #16]
   1aab0:	mov	r0, ip
   1aab4:	str	r5, [lr, #16]
   1aab8:	ldr	r2, [r6, r2]
   1aabc:	ldr	r1, [r6, r1]
   1aac0:	bl	108bc <myhread_entry_create@plt>
   1aac4:	cmp	r0, #0
   1aac8:	str	r0, [sp, #4]
   1aacc:	bne	1aa34 <myhtml_init@@Base+0x38>
   1aad0:	ldr	r3, [r4, #4]
   1aad4:	ldr	r2, [r3, #8]
   1aad8:	cmp	r2, #0
   1aadc:	beq	1abe0 <myhtml_init@@Base+0x1e4>
   1aae0:	ldr	r1, [pc, #312]	; 1ac20 <myhtml_init@@Base+0x224>
   1aae4:	ldr	r2, [pc, #312]	; 1ac24 <myhtml_init@@Base+0x228>
   1aae8:	mov	r5, r0
   1aaec:	ldr	r8, [r6, r1]
   1aaf0:	ldr	r9, [r6, r2]
   1aaf4:	mov	r6, #4
   1aaf8:	b	1ab0c <myhtml_init@@Base+0x110>
   1aafc:	ldr	r3, [r4, #4]
   1ab00:	ldr	r2, [r3, #8]
   1ab04:	cmp	r2, r5
   1ab08:	bls	1abe0 <myhtml_init@@Base+0x1e4>
   1ab0c:	mov	r0, r3
   1ab10:	mov	r2, r8
   1ab14:	mov	r3, r6
   1ab18:	mov	r1, r9
   1ab1c:	bl	108bc <myhread_entry_create@plt>
   1ab20:	add	r5, r5, #1
   1ab24:	cmp	r0, #0
   1ab28:	str	r0, [sp, #4]
   1ab2c:	beq	1aafc <myhtml_init@@Base+0x100>
   1ab30:	b	1aa34 <myhtml_init@@Base+0x38>
   1ab34:	cmp	r5, #1
   1ab38:	beq	1abbc <myhtml_init@@Base+0x1c0>
   1ab3c:	cmp	r5, #2
   1ab40:	moveq	r7, #1
   1ab44:	bne	1ac08 <myhtml_init@@Base+0x20c>
   1ab48:	mov	r2, #0
   1ab4c:	mov	r1, #1
   1ab50:	mov	r0, r4
   1ab54:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1ab58:	cmp	r0, #0
   1ab5c:	str	r0, [sp, #4]
   1ab60:	bne	1aa34 <myhtml_init@@Base+0x38>
   1ab64:	add	r0, sp, #4
   1ab68:	ldr	r5, [r4]
   1ab6c:	bl	107d8 <mythread_queue_list_create@plt>
   1ab70:	ldr	r2, [pc, #176]	; 1ac28 <myhtml_init@@Base+0x22c>
   1ab74:	ldr	r1, [pc, #160]	; 1ac1c <myhtml_init@@Base+0x220>
   1ab78:	mov	r3, #4
   1ab7c:	str	r0, [r5, #16]
   1ab80:	ldr	r0, [r4]
   1ab84:	ldr	r2, [r6, r2]
   1ab88:	ldr	r1, [r6, r1]
   1ab8c:	bl	108bc <myhread_entry_create@plt>
   1ab90:	ldr	r1, [r4, #4]
   1ab94:	ldr	r2, [r4]
   1ab98:	mov	r3, #0
   1ab9c:	str	r7, [r4, #20]
   1aba0:	str	r1, [r4, #12]
   1aba4:	str	r2, [r4, #8]
   1aba8:	str	r3, [r4, #16]
   1abac:	cmp	r0, #0
   1abb0:	str	r0, [sp, #4]
   1abb4:	bne	1aa34 <myhtml_init@@Base+0x38>
   1abb8:	b	1abf8 <myhtml_init@@Base+0x1fc>
   1abbc:	mov	r7, r5
   1abc0:	mov	r2, #0
   1abc4:	mov	r1, r2
   1abc8:	mov	r0, r4
   1abcc:	bl	104e4 <myhtml_create_stream_and_batch@plt>
   1abd0:	cmp	r0, #0
   1abd4:	str	r0, [sp, #4]
   1abd8:	bne	1aa34 <myhtml_init@@Base+0x38>
   1abdc:	ldr	r3, [r4, #4]
   1abe0:	ldr	r1, [r4]
   1abe4:	mov	r2, #0
   1abe8:	str	r7, [r4, #20]
   1abec:	str	r3, [r4, #12]
   1abf0:	str	r1, [r4, #8]
   1abf4:	str	r2, [r4, #16]
   1abf8:	mov	r0, r4
   1abfc:	bl	fde8 <myhtml_clean@plt>
   1ac00:	ldr	r0, [sp, #4]
   1ac04:	b	1aa34 <myhtml_init@@Base+0x38>
   1ac08:	mov	r2, #1
   1ac0c:	mov	r7, #2
   1ac10:	b	1aa74 <myhtml_init@@Base+0x78>
   1ac14:	ldrdeq	sl, [pc], -r4
   1ac18:	andeq	r0, r0, ip, asr #19
   1ac1c:	andeq	r0, r0, r0, asr #14
   1ac20:	andeq	r0, r0, r4, asr r7
   1ac24:	andeq	r0, r0, r4, lsr r7
   1ac28:	andeq	r0, r0, ip, asr #14

0001ac2c <myhtml_destroy@@Base>:
   1ac2c:	push	{r4, r5, r6, lr}
   1ac30:	subs	r4, r0, #0
   1ac34:	ldr	r5, [pc, #224]	; 1ad1c <myhtml_destroy@@Base+0xf0>
   1ac38:	add	r5, pc, r5
   1ac3c:	beq	1acd0 <myhtml_destroy@@Base+0xa4>
   1ac40:	bl	10790 <myhtml_destroy_marker@plt>
   1ac44:	ldr	r0, [r4]
   1ac48:	cmp	r0, #0
   1ac4c:	beq	1acb0 <myhtml_destroy@@Base+0x84>
   1ac50:	ldr	r6, [r0, #16]
   1ac54:	cmp	r6, #0
   1ac58:	beq	1acd8 <myhtml_destroy@@Base+0xac>
   1ac5c:	mov	r1, r6
   1ac60:	bl	10dd8 <mythread_queue_list_wait_for_done@plt>
   1ac64:	ldr	r1, [pc, #180]	; 1ad20 <myhtml_destroy@@Base+0xf4>
   1ac68:	mov	r3, #1
   1ac6c:	mov	r2, #0
   1ac70:	ldr	r5, [r5, r1]
   1ac74:	ldr	r0, [r4]
   1ac78:	mov	r1, r5
   1ac7c:	bl	109ac <mythread_destroy@plt>
   1ac80:	ldr	r3, [r4, #4]
   1ac84:	cmp	r3, #0
   1ac88:	str	r0, [r4]
   1ac8c:	beq	1aca8 <myhtml_destroy@@Base+0x7c>
   1ac90:	mov	r0, r3
   1ac94:	mov	r1, r5
   1ac98:	mov	r3, #1
   1ac9c:	mov	r2, #0
   1aca0:	bl	109ac <mythread_destroy@plt>
   1aca4:	str	r0, [r4, #4]
   1aca8:	mov	r0, r6
   1acac:	bl	10130 <mythread_queue_list_destroy@plt>
   1acb0:	mov	r0, r4
   1acb4:	bl	100f4 <myhtml_tokenizer_state_destroy@plt>
   1acb8:	ldr	r0, [r4, #28]
   1acbc:	cmp	r0, #0
   1acc0:	beq	1acc8 <myhtml_destroy@@Base+0x9c>
   1acc4:	bl	10dcc <mycore_free@plt>
   1acc8:	mov	r0, r4
   1accc:	bl	10dcc <mycore_free@plt>
   1acd0:	mov	r0, #0
   1acd4:	pop	{r4, r5, r6, pc}
   1acd8:	ldr	r2, [pc, #64]	; 1ad20 <myhtml_destroy@@Base+0xf4>
   1acdc:	mov	r3, #1
   1ace0:	ldr	r5, [r5, r2]
   1ace4:	mov	r2, r6
   1ace8:	mov	r1, r5
   1acec:	bl	109ac <mythread_destroy@plt>
   1acf0:	ldr	r3, [r4, #4]
   1acf4:	cmp	r3, #0
   1acf8:	str	r0, [r4]
   1acfc:	beq	1acb0 <myhtml_destroy@@Base+0x84>
   1ad00:	mov	r0, r3
   1ad04:	mov	r2, r6
   1ad08:	mov	r1, r5
   1ad0c:	mov	r3, #1
   1ad10:	bl	109ac <mythread_destroy@plt>
   1ad14:	str	r0, [r4, #4]
   1ad18:	b	1acb0 <myhtml_destroy@@Base+0x84>
   1ad1c:	andeq	sl, pc, r0, asr #7
   1ad20:	andeq	r0, r0, r8, ror #16

0001ad24 <myhtml_parse_chunk@@Base>:
   1ad24:	ldr	r3, [r0, #180]	; 0xb4
   1ad28:	push	{r4, lr}
   1ad2c:	tst	r3, #32
   1ad30:	sub	sp, sp, #8
   1ad34:	mov	r4, r0
   1ad38:	beq	1ad48 <myhtml_parse_chunk@@Base+0x24>
   1ad3c:	stm	sp, {r1, r2}
   1ad40:	bl	106d0 <myhtml_tree_clean@plt>
   1ad44:	ldm	sp, {r1, r2}
   1ad48:	mov	r0, r4
   1ad4c:	add	sp, sp, #8
   1ad50:	pop	{r4, lr}
   1ad54:	b	100c4 <myhtml_tokenizer_chunk@plt>

0001ad58 <myhtml_parse_chunk_fragment@@Base>:
   1ad58:	push	{r4, r5, r6, r7, r8, lr}
   1ad5c:	mov	r7, r1
   1ad60:	ldr	r1, [r0, #180]	; 0xb4
   1ad64:	mov	r4, r0
   1ad68:	tst	r1, #32
   1ad6c:	mov	r8, r2
   1ad70:	mov	r5, r3
   1ad74:	ldr	r6, [sp, #24]
   1ad78:	bne	1adc0 <myhtml_parse_chunk_fragment@@Base+0x68>
   1ad7c:	cmp	r6, #0
   1ad80:	movne	r2, r6
   1ad84:	moveq	r2, #1
   1ad88:	cmp	r5, #0
   1ad8c:	movne	r1, r5
   1ad90:	moveq	r1, #42	; 0x2a
   1ad94:	mov	r0, r4
   1ad98:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1ad9c:	cmp	r0, #0
   1ada0:	beq	1adb8 <myhtml_parse_chunk_fragment@@Base+0x60>
   1ada4:	mov	r2, r8
   1ada8:	mov	r1, r7
   1adac:	mov	r0, r4
   1adb0:	pop	{r4, r5, r6, r7, r8, lr}
   1adb4:	b	100c4 <myhtml_tokenizer_chunk@plt>
   1adb8:	ldr	r0, [pc, #8]	; 1adc8 <myhtml_parse_chunk_fragment@@Base+0x70>
   1adbc:	pop	{r4, r5, r6, r7, r8, pc}
   1adc0:	bl	106d0 <myhtml_tree_clean@plt>
   1adc4:	b	1ad7c <myhtml_parse_chunk_fragment@@Base+0x24>
   1adc8:	andeq	r9, r0, sp, lsr #2

0001adcc <myhtml_parse_chunk_single@@Base>:
   1adcc:	ldr	r3, [r0, #180]	; 0xb4
   1add0:	tst	r3, #16
   1add4:	ldreq	r3, [r0, #180]	; 0xb4
   1add8:	orreq	r3, r3, #16
   1addc:	streq	r3, [r0, #180]	; 0xb4
   1ade0:	b	10a3c <myhtml_parse_chunk@plt>

0001ade4 <myhtml_parse_chunk_fragment_single@@Base>:
   1ade4:	ldr	ip, [r0, #180]	; 0xb4
   1ade8:	push	{lr}		; (str lr, [sp, #-4]!)
   1adec:	tst	ip, #16
   1adf0:	ldr	lr, [sp, #4]
   1adf4:	ldreq	ip, [r0, #180]	; 0xb4
   1adf8:	orreq	ip, ip, #16
   1adfc:	streq	ip, [r0, #180]	; 0xb4
   1ae00:	str	lr, [sp, #4]
   1ae04:	pop	{lr}		; (ldr lr, [sp], #4)
   1ae08:	b	105a4 <myhtml_parse_chunk_fragment@plt>

0001ae0c <myhtml_parse_chunk_end@@Base>:
   1ae0c:	b	10268 <myhtml_tokenizer_end@plt>

0001ae10 <myhtml_encoding_set@@Base>:
   1ae10:	cmp	r1, #41	; 0x29
   1ae14:	strls	r1, [r0, #204]	; 0xcc
   1ae18:	strls	r1, [r0, #200]	; 0xc8
   1ae1c:	bx	lr

0001ae20 <myhtml_parse@@Base>:
   1ae20:	ldr	ip, [r0, #180]	; 0xb4
   1ae24:	push	{r4, r5, r6, lr}
   1ae28:	tst	ip, #32
   1ae2c:	sub	sp, sp, #8
   1ae30:	mov	r4, r0
   1ae34:	mov	r5, r2
   1ae38:	mov	r6, r3
   1ae3c:	bne	1ae78 <myhtml_parse@@Base+0x58>
   1ae40:	mov	r0, r4
   1ae44:	bl	106a0 <myhtml_encoding_set@plt>
   1ae48:	mov	r2, r6
   1ae4c:	mov	r1, r5
   1ae50:	mov	r0, r4
   1ae54:	bl	10154 <myhtml_tokenizer_begin@plt>
   1ae58:	cmp	r0, #0
   1ae5c:	beq	1ae68 <myhtml_parse@@Base+0x48>
   1ae60:	add	sp, sp, #8
   1ae64:	pop	{r4, r5, r6, pc}
   1ae68:	mov	r0, r4
   1ae6c:	add	sp, sp, #8
   1ae70:	pop	{r4, r5, r6, lr}
   1ae74:	b	10268 <myhtml_tokenizer_end@plt>
   1ae78:	str	r1, [sp, #4]
   1ae7c:	bl	106d0 <myhtml_tree_clean@plt>
   1ae80:	ldr	r1, [sp, #4]
   1ae84:	b	1ae40 <myhtml_parse@@Base+0x20>

0001ae88 <myhtml_parse_fragment@@Base>:
   1ae88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ae8c:	mov	r9, r1
   1ae90:	ldr	r1, [r0, #180]	; 0xb4
   1ae94:	mov	r4, r0
   1ae98:	tst	r1, #32
   1ae9c:	mov	r7, r2
   1aea0:	mov	r8, r3
   1aea4:	ldr	r5, [sp, #32]
   1aea8:	ldr	r6, [sp, #36]	; 0x24
   1aeac:	bne	1af10 <myhtml_parse_fragment@@Base+0x88>
   1aeb0:	cmp	r6, #0
   1aeb4:	movne	r2, r6
   1aeb8:	moveq	r2, #1
   1aebc:	cmp	r5, #0
   1aec0:	movne	r1, r5
   1aec4:	moveq	r1, #42	; 0x2a
   1aec8:	mov	r0, r4
   1aecc:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1aed0:	cmp	r0, #0
   1aed4:	beq	1af08 <myhtml_parse_fragment@@Base+0x80>
   1aed8:	mov	r1, r9
   1aedc:	mov	r0, r4
   1aee0:	bl	106a0 <myhtml_encoding_set@plt>
   1aee4:	mov	r2, r8
   1aee8:	mov	r1, r7
   1aeec:	mov	r0, r4
   1aef0:	bl	10154 <myhtml_tokenizer_begin@plt>
   1aef4:	cmp	r0, #0
   1aef8:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1aefc:	mov	r0, r4
   1af00:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af04:	b	10268 <myhtml_tokenizer_end@plt>
   1af08:	ldr	r0, [pc, #8]	; 1af18 <myhtml_parse_fragment@@Base+0x90>
   1af0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1af10:	bl	106d0 <myhtml_tree_clean@plt>
   1af14:	b	1aeb0 <myhtml_parse_fragment@@Base+0x28>
   1af18:	andeq	r9, r0, sp, lsr #2

0001af1c <myhtml_parse_single@@Base>:
   1af1c:	ldr	ip, [r0, #180]	; 0xb4
   1af20:	push	{r4, r5, r6, lr}
   1af24:	tst	ip, #32
   1af28:	sub	sp, sp, #8
   1af2c:	mov	r4, r0
   1af30:	mov	r5, r2
   1af34:	mov	r6, r3
   1af38:	bne	1af80 <myhtml_parse_single@@Base+0x64>
   1af3c:	ldr	r3, [r4, #180]	; 0xb4
   1af40:	mov	r0, r4
   1af44:	orr	r3, r3, #16
   1af48:	str	r3, [r4, #180]	; 0xb4
   1af4c:	bl	106a0 <myhtml_encoding_set@plt>
   1af50:	mov	r2, r6
   1af54:	mov	r1, r5
   1af58:	mov	r0, r4
   1af5c:	bl	10154 <myhtml_tokenizer_begin@plt>
   1af60:	cmp	r0, #0
   1af64:	beq	1af70 <myhtml_parse_single@@Base+0x54>
   1af68:	add	sp, sp, #8
   1af6c:	pop	{r4, r5, r6, pc}
   1af70:	mov	r0, r4
   1af74:	add	sp, sp, #8
   1af78:	pop	{r4, r5, r6, lr}
   1af7c:	b	10268 <myhtml_tokenizer_end@plt>
   1af80:	str	r1, [sp, #4]
   1af84:	bl	106d0 <myhtml_tree_clean@plt>
   1af88:	ldr	r1, [sp, #4]
   1af8c:	b	1af3c <myhtml_parse_single@@Base+0x20>

0001af90 <myhtml_parse_fragment_single@@Base>:
   1af90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1af94:	mov	r8, r1
   1af98:	ldr	r1, [r0, #180]	; 0xb4
   1af9c:	mov	r4, r0
   1afa0:	tst	r1, #32
   1afa4:	mov	r7, r2
   1afa8:	mov	r9, r3
   1afac:	ldr	r5, [sp, #32]
   1afb0:	ldr	r6, [sp, #36]	; 0x24
   1afb4:	bne	1b024 <myhtml_parse_fragment_single@@Base+0x94>
   1afb8:	ldr	r3, [r4, #180]	; 0xb4
   1afbc:	cmp	r6, #0
   1afc0:	movne	r2, r6
   1afc4:	moveq	r2, #1
   1afc8:	orr	r3, r3, #16
   1afcc:	cmp	r5, #0
   1afd0:	movne	r1, r5
   1afd4:	moveq	r1, #42	; 0x2a
   1afd8:	str	r3, [r4, #180]	; 0xb4
   1afdc:	mov	r0, r4
   1afe0:	bl	fc98 <myhtml_tokenizer_fragment_init@plt>
   1afe4:	cmp	r0, #0
   1afe8:	beq	1b01c <myhtml_parse_fragment_single@@Base+0x8c>
   1afec:	mov	r1, r8
   1aff0:	mov	r0, r4
   1aff4:	bl	106a0 <myhtml_encoding_set@plt>
   1aff8:	mov	r2, r9
   1affc:	mov	r1, r7
   1b000:	mov	r0, r4
   1b004:	bl	10154 <myhtml_tokenizer_begin@plt>
   1b008:	cmp	r0, #0
   1b00c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b010:	mov	r0, r4
   1b014:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b018:	b	10268 <myhtml_tokenizer_end@plt>
   1b01c:	ldr	r0, [pc, #8]	; 1b02c <myhtml_parse_fragment_single@@Base+0x9c>
   1b020:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b024:	bl	106d0 <myhtml_tree_clean@plt>
   1b028:	b	1afb8 <myhtml_parse_fragment_single@@Base+0x28>
   1b02c:	andeq	r9, r0, sp, lsr #2

0001b030 <myhtml_encoding_get@@Base>:
   1b030:	ldr	r0, [r0, #200]	; 0xc8
   1b034:	bx	lr

0001b038 <myhtml_node_first@@Base>:
   1b038:	ldr	r3, [r0, #88]	; 0x58
   1b03c:	ldr	r0, [r0, #84]	; 0x54
   1b040:	cmp	r3, #0
   1b044:	beq	1b064 <myhtml_node_first@@Base+0x2c>
   1b048:	cmp	r0, #0
   1b04c:	bxeq	lr
   1b050:	ldr	r0, [r0, #20]
   1b054:	cmp	r0, #0
   1b058:	beq	1b074 <myhtml_node_first@@Base+0x3c>
   1b05c:	ldr	r0, [r0, #20]
   1b060:	bx	lr
   1b064:	cmp	r0, #0
   1b068:	bxeq	lr
   1b06c:	ldr	r0, [r0, #20]
   1b070:	bx	lr
   1b074:	bx	lr

0001b078 <myhtml_node_next@@Base>:
   1b078:	ldr	r0, [r0, #16]
   1b07c:	bx	lr

0001b080 <myhtml_node_prev@@Base>:
   1b080:	ldr	r0, [r0, #12]
   1b084:	bx	lr

0001b088 <myhtml_node_parent@@Base>:
   1b088:	ldr	r0, [r0, #24]
   1b08c:	bx	lr

0001b090 <myhtml_node_child@@Base>:
   1b090:	ldr	r0, [r0, #20]
   1b094:	bx	lr

0001b098 <myhtml_node_last_child@@Base>:
   1b098:	ldr	r0, [r0, #28]
   1b09c:	bx	lr

0001b0a0 <myhtml_node_create@@Base>:
   1b0a0:	push	{r4, r5, r6, lr}
   1b0a4:	mov	r5, r1
   1b0a8:	mov	r4, r2
   1b0ac:	bl	ffe0 <myhtml_tree_node_create@plt>
   1b0b0:	str	r5, [r0, #4]
   1b0b4:	str	r4, [r0, #8]
   1b0b8:	pop	{r4, r5, r6, pc}

0001b0bc <myhtml_node_remove@@Base>:
   1b0bc:	b	10df0 <myhtml_tree_node_remove@plt>

0001b0c0 <myhtml_node_delete@@Base>:
   1b0c0:	b	10dc0 <myhtml_tree_node_delete@plt>

0001b0c4 <myhtml_node_delete_recursive@@Base>:
   1b0c4:	b	ffec <myhtml_tree_node_delete_recursive@plt>

0001b0c8 <myhtml_node_free@@Base>:
   1b0c8:	b	10d00 <myhtml_tree_node_free@plt>

0001b0cc <myhtml_node_insert_before@@Base>:
   1b0cc:	cmp	r1, #0
   1b0d0:	cmpne	r0, #0
   1b0d4:	beq	1b0ec <myhtml_node_insert_before@@Base+0x20>
   1b0d8:	push	{r4, lr}
   1b0dc:	mov	r4, r1
   1b0e0:	bl	103f4 <myhtml_tree_node_insert_before@plt>
   1b0e4:	mov	r0, r4
   1b0e8:	pop	{r4, pc}
   1b0ec:	mov	r0, #0
   1b0f0:	bx	lr

0001b0f4 <myhtml_node_insert_after@@Base>:
   1b0f4:	cmp	r1, #0
   1b0f8:	cmpne	r0, #0
   1b0fc:	beq	1b114 <myhtml_node_insert_after@@Base+0x20>
   1b100:	push	{r4, lr}
   1b104:	mov	r4, r1
   1b108:	bl	10364 <myhtml_tree_node_insert_after@plt>
   1b10c:	mov	r0, r4
   1b110:	pop	{r4, pc}
   1b114:	mov	r0, #0
   1b118:	bx	lr

0001b11c <myhtml_node_append_child@@Base>:
   1b11c:	cmp	r1, #0
   1b120:	cmpne	r0, #0
   1b124:	beq	1b13c <myhtml_node_append_child@@Base+0x20>
   1b128:	push	{r4, lr}
   1b12c:	mov	r4, r1
   1b130:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1b134:	mov	r0, r4
   1b138:	pop	{r4, pc}
   1b13c:	mov	r0, #0
   1b140:	bx	lr

0001b144 <myhtml_node_insert_to_appropriate_place@@Base>:
   1b144:	cmp	r1, #0
   1b148:	cmpne	r0, #0
   1b14c:	push	{r4, r5, lr}
   1b150:	moveq	r0, #0
   1b154:	sub	sp, sp, #12
   1b158:	moveq	r5, #1
   1b15c:	movne	r5, #0
   1b160:	beq	1b194 <myhtml_node_insert_to_appropriate_place@@Base+0x50>
   1b164:	ldr	r3, [r0, #40]	; 0x28
   1b168:	mov	r2, #1
   1b16c:	mov	r4, r1
   1b170:	strb	r2, [r3, #188]	; 0xbc
   1b174:	add	r1, sp, #4
   1b178:	bl	10a30 <myhtml_tree_appropriate_place_inserting_in_tree@plt>
   1b17c:	ldr	r2, [sp, #4]
   1b180:	mov	r1, r4
   1b184:	ldr	r3, [r0, #40]	; 0x28
   1b188:	strb	r5, [r3, #188]	; 0xbc
   1b18c:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1b190:	mov	r0, r4
   1b194:	add	sp, sp, #12
   1b198:	pop	{r4, r5, pc}

0001b19c <myhtml_node_text_set@@Base>:
   1b19c:	cmp	r3, #41	; 0x29
   1b1a0:	movls	ip, #0
   1b1a4:	movhi	ip, #1
   1b1a8:	cmp	r0, #0
   1b1ac:	orreq	ip, ip, #1
   1b1b0:	cmp	ip, #0
   1b1b4:	bne	1b2b8 <myhtml_node_text_set@@Base+0x11c>
   1b1b8:	push	{r4, r5, r6, r7, r8, lr}
   1b1bc:	mov	r4, r0
   1b1c0:	ldr	r0, [r0, #32]
   1b1c4:	mov	r6, r2
   1b1c8:	cmp	r0, #0
   1b1cc:	mov	r7, r1
   1b1d0:	mov	r5, r3
   1b1d4:	ldr	r8, [r4, #40]	; 0x28
   1b1d8:	beq	1b270 <myhtml_node_text_set@@Base+0xd4>
   1b1dc:	ldr	r2, [r0, #4]
   1b1e0:	cmp	r2, #0
   1b1e4:	beq	1b29c <myhtml_node_text_set@@Base+0x100>
   1b1e8:	ldr	r3, [r0, #8]
   1b1ec:	cmp	r6, r3
   1b1f0:	movls	r3, #0
   1b1f4:	strls	r3, [r0, #12]
   1b1f8:	bhi	1b244 <myhtml_node_text_set@@Base+0xa8>
   1b1fc:	cmp	r5, #0
   1b200:	bne	1b22c <myhtml_node_text_set@@Base+0x90>
   1b204:	mov	r2, r6
   1b208:	mov	r1, r7
   1b20c:	add	r0, r0, #4
   1b210:	bl	108d4 <mycore_string_append@plt>
   1b214:	ldr	r3, [r4, #32]
   1b218:	mov	r2, #0
   1b21c:	add	r0, r3, #4
   1b220:	str	r2, [r3, #24]
   1b224:	str	r2, [r3, #28]
   1b228:	pop	{r4, r5, r6, r7, r8, pc}
   1b22c:	mov	r3, r5
   1b230:	mov	r2, r6
   1b234:	mov	r1, r7
   1b238:	add	r0, r0, #4
   1b23c:	bl	10460 <myencoding_string_append@plt>
   1b240:	b	1b214 <myhtml_node_text_set@@Base+0x78>
   1b244:	ldr	r1, [r0, #20]
   1b248:	ldr	r0, [r8, #4]
   1b24c:	bl	10718 <mchar_async_free@plt>
   1b250:	ldr	r2, [r4, #32]
   1b254:	mov	r3, r6
   1b258:	add	r2, r2, #4
   1b25c:	ldr	r1, [r8, #52]	; 0x34
   1b260:	ldr	r0, [r8, #4]
   1b264:	bl	10610 <mycore_string_init@plt>
   1b268:	ldr	r0, [r4, #32]
   1b26c:	b	1b1fc <myhtml_node_text_set@@Base+0x60>
   1b270:	ldr	r1, [r8, #40]	; 0x28
   1b274:	ldr	r0, [r8, #8]
   1b278:	bl	10a0c <myhtml_token_node_create@plt>
   1b27c:	cmp	r0, #0
   1b280:	str	r0, [r4, #32]
   1b284:	ldrne	r3, [r0, #48]	; 0x30
   1b288:	orrne	r3, r3, #4
   1b28c:	strne	r3, [r0, #48]	; 0x30
   1b290:	bne	1b1dc <myhtml_node_text_set@@Base+0x40>
   1b294:	mov	r0, #0
   1b298:	pop	{r4, r5, r6, r7, r8, pc}
   1b29c:	add	r2, r0, #4
   1b2a0:	add	r3, r6, #2
   1b2a4:	ldr	r1, [r8, #52]	; 0x34
   1b2a8:	ldr	r0, [r8, #4]
   1b2ac:	bl	10610 <mycore_string_init@plt>
   1b2b0:	ldr	r0, [r4, #32]
   1b2b4:	b	1b1fc <myhtml_node_text_set@@Base+0x60>
   1b2b8:	mov	r0, #0
   1b2bc:	bx	lr

0001b2c0 <myhtml_node_text_set_with_charef@@Base>:
   1b2c0:	cmp	r3, #41	; 0x29
   1b2c4:	movls	ip, #0
   1b2c8:	movhi	ip, #1
   1b2cc:	cmp	r0, #0
   1b2d0:	orreq	ip, ip, #1
   1b2d4:	cmp	ip, #0
   1b2d8:	bne	1b3e8 <myhtml_node_text_set_with_charef@@Base+0x128>
   1b2dc:	push	{r4, r5, r6, r7, r8, lr}
   1b2e0:	mov	r4, r0
   1b2e4:	ldr	r0, [r0, #32]
   1b2e8:	sub	sp, sp, #64	; 0x40
   1b2ec:	cmp	r0, #0
   1b2f0:	mov	r5, r2
   1b2f4:	mov	r8, r1
   1b2f8:	mov	r7, r3
   1b2fc:	ldr	r6, [r4, #40]	; 0x28
   1b300:	beq	1b3a4 <myhtml_node_text_set_with_charef@@Base+0xe4>
   1b304:	ldr	r2, [r0, #4]
   1b308:	cmp	r2, #0
   1b30c:	beq	1b3d0 <myhtml_node_text_set_with_charef@@Base+0x110>
   1b310:	ldr	r3, [r0, #8]
   1b314:	cmp	r5, r3
   1b318:	movls	r3, #0
   1b31c:	strls	r3, [r0, #12]
   1b320:	bhi	1b37c <myhtml_node_text_set_with_charef@@Base+0xbc>
   1b324:	mov	r0, sp
   1b328:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1b32c:	add	r0, sp, #8
   1b330:	str	r7, [sp, #4]
   1b334:	bl	101c0 <myencoding_result_clean@plt>
   1b338:	ldr	r1, [r4, #32]
   1b33c:	mov	r3, r5
   1b340:	mov	r2, r8
   1b344:	mov	r0, sp
   1b348:	add	r1, r1, #4
   1b34c:	bl	10754 <myhtml_data_process@plt>
   1b350:	ldr	r1, [r4, #32]
   1b354:	mov	r0, sp
   1b358:	add	r1, r1, #4
   1b35c:	bl	10928 <myhtml_data_process_end@plt>
   1b360:	ldr	r3, [r4, #32]
   1b364:	mov	r2, #0
   1b368:	add	r0, r3, #4
   1b36c:	str	r2, [r3, #24]
   1b370:	str	r2, [r3, #28]
   1b374:	add	sp, sp, #64	; 0x40
   1b378:	pop	{r4, r5, r6, r7, r8, pc}
   1b37c:	ldr	r1, [r0, #20]
   1b380:	ldr	r0, [r6, #4]
   1b384:	bl	10718 <mchar_async_free@plt>
   1b388:	ldr	r2, [r4, #32]
   1b38c:	mov	r3, r5
   1b390:	add	r2, r2, #4
   1b394:	ldr	r1, [r6, #52]	; 0x34
   1b398:	ldr	r0, [r6, #4]
   1b39c:	bl	10610 <mycore_string_init@plt>
   1b3a0:	b	1b324 <myhtml_node_text_set_with_charef@@Base+0x64>
   1b3a4:	ldr	r1, [r6, #40]	; 0x28
   1b3a8:	ldr	r0, [r6, #8]
   1b3ac:	bl	10a0c <myhtml_token_node_create@plt>
   1b3b0:	cmp	r0, #0
   1b3b4:	str	r0, [r4, #32]
   1b3b8:	ldrne	r3, [r0, #48]	; 0x30
   1b3bc:	orrne	r3, r3, #4
   1b3c0:	strne	r3, [r0, #48]	; 0x30
   1b3c4:	bne	1b304 <myhtml_node_text_set_with_charef@@Base+0x44>
   1b3c8:	mov	r0, #0
   1b3cc:	b	1b374 <myhtml_node_text_set_with_charef@@Base+0xb4>
   1b3d0:	add	r2, r0, #4
   1b3d4:	add	r3, r5, #2
   1b3d8:	ldr	r1, [r6, #52]	; 0x34
   1b3dc:	ldr	r0, [r6, #4]
   1b3e0:	bl	10610 <mycore_string_init@plt>
   1b3e4:	b	1b324 <myhtml_node_text_set_with_charef@@Base+0x64>
   1b3e8:	mov	r0, #0
   1b3ec:	bx	lr

0001b3f0 <myhtml_node_token@@Base>:
   1b3f0:	ldr	r0, [r0, #32]
   1b3f4:	bx	lr

0001b3f8 <myhtml_node_namespace@@Base>:
   1b3f8:	ldr	r0, [r0, #8]
   1b3fc:	bx	lr

0001b400 <myhtml_node_namespace_set@@Base>:
   1b400:	str	r1, [r0, #8]
   1b404:	bx	lr

0001b408 <myhtml_node_tag_id@@Base>:
   1b408:	ldr	r0, [r0, #4]
   1b40c:	bx	lr

0001b410 <myhtml_tag_name_by_id@@Base>:
   1b410:	push	{r4, lr}
   1b414:	subs	r4, r2, #0
   1b418:	movne	r3, #0
   1b41c:	strne	r3, [r4]
   1b420:	cmp	r0, #0
   1b424:	beq	1b454 <myhtml_tag_name_by_id@@Base+0x44>
   1b428:	ldr	r0, [r0, #28]
   1b42c:	cmp	r0, #0
   1b430:	beq	1b454 <myhtml_tag_name_by_id@@Base+0x44>
   1b434:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1b438:	cmp	r0, #0
   1b43c:	beq	1b454 <myhtml_tag_name_by_id@@Base+0x44>
   1b440:	cmp	r4, #0
   1b444:	ldrne	r3, [r0, #8]
   1b448:	ldr	r0, [r0, #4]
   1b44c:	strne	r3, [r4]
   1b450:	pop	{r4, pc}
   1b454:	mov	r0, #0
   1b458:	pop	{r4, pc}

0001b45c <myhtml_tag_id_by_name@@Base>:
   1b45c:	cmp	r0, #0
   1b460:	beq	1b490 <myhtml_tag_id_by_name@@Base+0x34>
   1b464:	ldr	r0, [r0, #28]
   1b468:	cmp	r0, #0
   1b46c:	beq	1b490 <myhtml_tag_id_by_name@@Base+0x34>
   1b470:	push	{r4, lr}
   1b474:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1b478:	cmp	r0, #0
   1b47c:	beq	1b488 <myhtml_tag_id_by_name@@Base+0x2c>
   1b480:	ldr	r0, [r0]
   1b484:	pop	{r4, pc}
   1b488:	mov	r0, #0
   1b48c:	pop	{r4, pc}
   1b490:	mov	r0, #0
   1b494:	bx	lr

0001b498 <myhtml_node_is_close_self@@Base>:
   1b498:	ldr	r0, [r0, #32]
   1b49c:	cmp	r0, #0
   1b4a0:	ldrne	r0, [r0, #48]	; 0x30
   1b4a4:	lsrne	r0, r0, #1
   1b4a8:	andne	r0, r0, #1
   1b4ac:	bx	lr

0001b4b0 <myhtml_node_is_void_element@@Base>:
   1b4b0:	ldr	r3, [r0, #4]
   1b4b4:	sub	r3, r3, #10
   1b4b8:	cmp	r3, #132	; 0x84
   1b4bc:	addls	pc, pc, r3, lsl #2
   1b4c0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4c4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b4c8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4cc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4d0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4d4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4d8:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b4dc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4e0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4e4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4e8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4ec:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4f0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4f4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4f8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b4fc:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b500:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b504:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b508:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b50c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b510:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b514:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b518:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b51c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b520:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b524:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b528:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b52c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b530:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b534:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b538:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b53c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b540:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b544:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b548:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b54c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b550:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b554:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b558:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b55c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b560:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b564:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b568:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b56c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b570:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b574:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b578:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b57c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b580:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b584:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b588:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b58c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b590:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b594:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b598:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b59c:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5a0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5a4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5a8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5ac:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5b0:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5b4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5b8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5bc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5c0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5c4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5c8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5cc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5d0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5d4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5d8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5dc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5e0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5e4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5e8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5ec:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5f0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5f4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b5f8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b5fc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b600:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b604:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b608:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b60c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b610:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b614:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b618:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b61c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b620:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b624:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b628:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b62c:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b630:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b634:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b638:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b63c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b640:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b644:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b648:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b64c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b650:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b654:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b658:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b65c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b660:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b664:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b668:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b66c:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b670:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b674:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b678:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b67c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b680:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b684:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b688:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b68c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b690:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b694:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b698:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b69c:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6a0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6a4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6a8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6ac:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6b0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6b4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6b8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6bc:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b6c0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6c4:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6c8:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6cc:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6d0:	b	1b6d8 <myhtml_node_is_void_element@@Base+0x228>
   1b6d4:	b	1b6e0 <myhtml_node_is_void_element@@Base+0x230>
   1b6d8:	mov	r0, #0
   1b6dc:	bx	lr
   1b6e0:	mov	r0, #1
   1b6e4:	bx	lr

0001b6e8 <myhtml_node_attribute_first@@Base>:
   1b6e8:	ldr	r0, [r0, #32]
   1b6ec:	cmp	r0, #0
   1b6f0:	ldrne	r0, [r0, #40]	; 0x28
   1b6f4:	bx	lr

0001b6f8 <myhtml_node_attribute_last@@Base>:
   1b6f8:	ldr	r0, [r0, #32]
   1b6fc:	cmp	r0, #0
   1b700:	ldrne	r0, [r0, #44]	; 0x2c
   1b704:	bx	lr

0001b708 <myhtml_node_text@@Base>:
   1b708:	ldr	r3, [r0, #32]
   1b70c:	cmp	r3, #0
   1b710:	beq	1b738 <myhtml_node_text@@Base+0x30>
   1b714:	ldr	r2, [r3, #12]
   1b718:	cmp	r2, #0
   1b71c:	beq	1b738 <myhtml_node_text@@Base+0x30>
   1b720:	ldr	r0, [r3, #4]
   1b724:	cmp	r0, #0
   1b728:	beq	1b738 <myhtml_node_text@@Base+0x30>
   1b72c:	cmp	r1, #0
   1b730:	strne	r2, [r1]
   1b734:	bx	lr
   1b738:	cmp	r1, #0
   1b73c:	movne	r0, #0
   1b740:	strne	r0, [r1]
   1b744:	moveq	r0, r1
   1b748:	bx	lr

0001b74c <myhtml_node_string@@Base>:
   1b74c:	cmp	r0, #0
   1b750:	bxeq	lr
   1b754:	ldr	r0, [r0, #32]
   1b758:	cmp	r0, #0
   1b75c:	addne	r0, r0, #4
   1b760:	bx	lr

0001b764 <myhtml_node_raw_position@@Base>:
   1b764:	cmp	r1, #0
   1b768:	beq	1b78c <myhtml_node_raw_position@@Base+0x28>
   1b76c:	ldr	r3, [r1, #32]
   1b770:	cmp	r3, #0
   1b774:	beq	1b78c <myhtml_node_raw_position@@Base+0x28>
   1b778:	ldr	r2, [r3, #28]
   1b77c:	ldr	r3, [r3, #24]
   1b780:	str	r2, [r0, #4]
   1b784:	str	r3, [r0]
   1b788:	bx	lr
   1b78c:	mov	r3, #0
   1b790:	str	r3, [r0]
   1b794:	str	r3, [r0, #4]
   1b798:	bx	lr

0001b79c <myhtml_node_element_position@@Base>:
   1b79c:	cmp	r1, #0
   1b7a0:	beq	1b7c4 <myhtml_node_element_position@@Base+0x28>
   1b7a4:	ldr	r3, [r1, #32]
   1b7a8:	cmp	r3, #0
   1b7ac:	beq	1b7c4 <myhtml_node_element_position@@Base+0x28>
   1b7b0:	ldr	r2, [r3, #36]	; 0x24
   1b7b4:	ldr	r3, [r3, #32]
   1b7b8:	str	r2, [r0, #4]
   1b7bc:	str	r3, [r0]
   1b7c0:	bx	lr
   1b7c4:	mov	r3, #0
   1b7c8:	str	r3, [r0]
   1b7cc:	str	r3, [r0, #4]
   1b7d0:	bx	lr

0001b7d4 <myhtml_node_set_data@@Base>:
   1b7d4:	str	r1, [r0, #36]	; 0x24
   1b7d8:	bx	lr

0001b7dc <myhtml_node_get_data@@Base>:
   1b7dc:	ldr	r0, [r0, #36]	; 0x24
   1b7e0:	bx	lr

0001b7e4 <myhtml_node_tree@@Base>:
   1b7e4:	ldr	r0, [r0, #40]	; 0x28
   1b7e8:	bx	lr

0001b7ec <myhtml_attribute_next@@Base>:
   1b7ec:	ldr	r0, [r0]
   1b7f0:	bx	lr

0001b7f4 <myhtml_attribute_prev@@Base>:
   1b7f4:	ldr	r0, [r0, #4]
   1b7f8:	bx	lr

0001b7fc <myhtml_attribute_namespace@@Base>:
   1b7fc:	ldr	r0, [r0, #64]	; 0x40
   1b800:	bx	lr

0001b804 <myhtml_attribute_namespace_set@@Base>:
   1b804:	str	r1, [r0, #64]	; 0x40
   1b808:	bx	lr

0001b80c <myhtml_attribute_key@@Base>:
   1b80c:	ldr	r3, [r0, #8]
   1b810:	cmp	r3, #0
   1b814:	beq	1b838 <myhtml_attribute_key@@Base+0x2c>
   1b818:	ldr	r2, [r0, #16]
   1b81c:	cmp	r2, #0
   1b820:	beq	1b838 <myhtml_attribute_key@@Base+0x2c>
   1b824:	cmp	r1, #0
   1b828:	beq	1b858 <myhtml_attribute_key@@Base+0x4c>
   1b82c:	str	r2, [r1]
   1b830:	mov	r0, r3
   1b834:	bx	lr
   1b838:	cmp	r1, #0
   1b83c:	beq	1b850 <myhtml_attribute_key@@Base+0x44>
   1b840:	mov	r3, #0
   1b844:	str	r3, [r1]
   1b848:	mov	r0, r3
   1b84c:	bx	lr
   1b850:	mov	r0, r1
   1b854:	bx	lr
   1b858:	mov	r0, r3
   1b85c:	bx	lr

0001b860 <myhtml_attribute_value@@Base>:
   1b860:	ldr	r3, [r0, #28]
   1b864:	cmp	r3, #0
   1b868:	beq	1b88c <myhtml_attribute_value@@Base+0x2c>
   1b86c:	ldr	r2, [r0, #36]	; 0x24
   1b870:	cmp	r2, #0
   1b874:	beq	1b88c <myhtml_attribute_value@@Base+0x2c>
   1b878:	cmp	r1, #0
   1b87c:	beq	1b8ac <myhtml_attribute_value@@Base+0x4c>
   1b880:	str	r2, [r1]
   1b884:	mov	r0, r3
   1b888:	bx	lr
   1b88c:	cmp	r1, #0
   1b890:	beq	1b8a4 <myhtml_attribute_value@@Base+0x44>
   1b894:	mov	r3, #0
   1b898:	str	r3, [r1]
   1b89c:	mov	r0, r3
   1b8a0:	bx	lr
   1b8a4:	mov	r0, r1
   1b8a8:	bx	lr
   1b8ac:	mov	r0, r3
   1b8b0:	bx	lr

0001b8b4 <myhtml_attribute_key_string@@Base>:
   1b8b4:	cmp	r0, #0
   1b8b8:	addne	r0, r0, #8
   1b8bc:	bx	lr

0001b8c0 <myhtml_attribute_value_string@@Base>:
   1b8c0:	cmp	r0, #0
   1b8c4:	addne	r0, r0, #28
   1b8c8:	bx	lr

0001b8cc <myhtml_attribute_by_key@@Base>:
   1b8cc:	cmp	r0, #0
   1b8d0:	bxeq	lr
   1b8d4:	ldr	r0, [r0, #32]
   1b8d8:	cmp	r0, #0
   1b8dc:	bxeq	lr
   1b8e0:	b	10eb0 <myhtml_token_attr_by_name@plt>

0001b8e4 <myhtml_attribute_add@@Base>:
   1b8e4:	push	{r4, r5, r6, lr}
   1b8e8:	subs	r4, r0, #0
   1b8ec:	sub	sp, sp, #24
   1b8f0:	beq	1b974 <myhtml_attribute_add@@Base+0x90>
   1b8f4:	mov	r5, r3
   1b8f8:	mov	r3, r2
   1b8fc:	mov	r2, r1
   1b900:	ldr	r1, [r4, #32]
   1b904:	ldr	r6, [r4, #40]	; 0x28
   1b908:	cmp	r1, #0
   1b90c:	beq	1b938 <myhtml_attribute_add@@Base+0x54>
   1b910:	ldr	ip, [sp, #44]	; 0x2c
   1b914:	ldr	r0, [r6, #8]
   1b918:	str	ip, [sp, #12]
   1b91c:	ldr	ip, [r6, #40]	; 0x28
   1b920:	str	ip, [sp, #8]
   1b924:	ldr	ip, [sp, #40]	; 0x28
   1b928:	stm	sp, {r5, ip}
   1b92c:	bl	107f0 <myhtml_token_node_attr_append_with_convert_encoding@plt>
   1b930:	add	sp, sp, #24
   1b934:	pop	{r4, r5, r6, pc}
   1b938:	ldr	r1, [r6, #40]	; 0x28
   1b93c:	ldr	r0, [r6, #8]
   1b940:	str	r3, [sp, #20]
   1b944:	str	r2, [sp, #16]
   1b948:	bl	10a0c <myhtml_token_node_create@plt>
   1b94c:	cmp	r0, #0
   1b950:	mov	r1, r0
   1b954:	str	r0, [r4, #32]
   1b958:	beq	1b974 <myhtml_attribute_add@@Base+0x90>
   1b95c:	ldr	r0, [r0, #48]	; 0x30
   1b960:	ldr	r3, [sp, #20]
   1b964:	orr	r0, r0, #4
   1b968:	str	r0, [r1, #48]	; 0x30
   1b96c:	ldr	r2, [sp, #16]
   1b970:	b	1b910 <myhtml_attribute_add@@Base+0x2c>
   1b974:	mov	r0, #0
   1b978:	b	1b930 <myhtml_attribute_add@@Base+0x4c>

0001b97c <myhtml_attribute_remove@@Base>:
   1b97c:	cmp	r0, #0
   1b980:	bxeq	lr
   1b984:	ldr	r0, [r0, #32]
   1b988:	cmp	r0, #0
   1b98c:	bxeq	lr
   1b990:	b	10574 <myhtml_token_attr_remove@plt>

0001b994 <myhtml_attribute_remove_by_key@@Base>:
   1b994:	cmp	r0, #0
   1b998:	bxeq	lr
   1b99c:	ldr	r0, [r0, #32]
   1b9a0:	cmp	r0, #0
   1b9a4:	bxeq	lr
   1b9a8:	b	10e98 <myhtml_token_attr_remove_by_name@plt>

0001b9ac <myhtml_attribute_free@@Base>:
   1b9ac:	ldr	r2, [r1, #8]
   1b9b0:	push	{r4, r5, r6, lr}
   1b9b4:	cmp	r2, #0
   1b9b8:	mov	r4, r1
   1b9bc:	mov	r5, r0
   1b9c0:	beq	1b9d0 <myhtml_attribute_free@@Base+0x24>
   1b9c4:	ldr	r1, [r1, #24]
   1b9c8:	ldr	r0, [r4, #20]
   1b9cc:	bl	10718 <mchar_async_free@plt>
   1b9d0:	ldr	r2, [r4, #28]
   1b9d4:	cmp	r2, #0
   1b9d8:	beq	1b9e8 <myhtml_attribute_free@@Base+0x3c>
   1b9dc:	ldr	r1, [r4, #44]	; 0x2c
   1b9e0:	ldr	r0, [r4, #40]	; 0x28
   1b9e4:	bl	10718 <mchar_async_free@plt>
   1b9e8:	ldr	r3, [r5, #8]
   1b9ec:	mov	r1, r4
   1b9f0:	pop	{r4, r5, r6, lr}
   1b9f4:	ldr	r0, [r3, #8]
   1b9f8:	b	1004c <mcobject_async_free@plt>

0001b9fc <myhtml_attribute_delete@@Base>:
   1b9fc:	cmp	r1, #0
   1ba00:	bxeq	lr
   1ba04:	ldr	r3, [r1, #32]
   1ba08:	cmp	r3, #0
   1ba0c:	bxeq	lr
   1ba10:	push	{r4, r5, r6, lr}
   1ba14:	mov	r1, r2
   1ba18:	mov	r4, r2
   1ba1c:	mov	r5, r0
   1ba20:	mov	r0, r3
   1ba24:	bl	10574 <myhtml_token_attr_remove@plt>
   1ba28:	mov	r1, r4
   1ba2c:	mov	r0, r5
   1ba30:	pop	{r4, r5, r6, lr}
   1ba34:	b	107a8 <myhtml_attribute_free@plt>

0001ba38 <myhtml_attribute_key_raw_position@@Base>:
   1ba38:	cmp	r1, #0
   1ba3c:	streq	r1, [r0]
   1ba40:	ldrne	r2, [r1, #52]	; 0x34
   1ba44:	ldrne	r3, [r1, #48]	; 0x30
   1ba48:	strne	r2, [r0, #4]
   1ba4c:	strne	r3, [r0]
   1ba50:	streq	r1, [r0, #4]
   1ba54:	bx	lr

0001ba58 <myhtml_attribute_value_raw_position@@Base>:
   1ba58:	cmp	r1, #0
   1ba5c:	streq	r1, [r0]
   1ba60:	ldrne	r2, [r1, #60]	; 0x3c
   1ba64:	ldrne	r3, [r1, #56]	; 0x38
   1ba68:	strne	r2, [r0, #4]
   1ba6c:	strne	r3, [r0]
   1ba70:	streq	r1, [r0, #4]
   1ba74:	bx	lr

0001ba78 <myhtml_collection_create@@Base>:
   1ba78:	push	{r4, r5, r6, r7, r8, lr}
   1ba7c:	mov	r6, r0
   1ba80:	mov	r0, #12
   1ba84:	mov	r5, r1
   1ba88:	bl	10c94 <mycore_malloc@plt>
   1ba8c:	subs	r4, r0, #0
   1ba90:	beq	1bac4 <myhtml_collection_create@@Base+0x4c>
   1ba94:	mov	r7, #0
   1ba98:	str	r6, [r4, #4]
   1ba9c:	lsl	r0, r6, #2
   1baa0:	str	r7, [r4, #8]
   1baa4:	bl	10c94 <mycore_malloc@plt>
   1baa8:	cmp	r0, r7
   1baac:	str	r0, [r4]
   1bab0:	beq	1bae0 <myhtml_collection_create@@Base+0x68>
   1bab4:	cmp	r5, #0
   1bab8:	strne	r7, [r5]
   1babc:	mov	r0, r4
   1bac0:	pop	{r4, r5, r6, r7, r8, pc}
   1bac4:	cmp	r5, #0
   1bac8:	beq	1bad4 <myhtml_collection_create@@Base+0x5c>
   1bacc:	mov	r3, #2
   1bad0:	str	r3, [r5]
   1bad4:	mov	r4, #0
   1bad8:	mov	r0, r4
   1badc:	pop	{r4, r5, r6, r7, r8, pc}
   1bae0:	mov	r0, r4
   1bae4:	bl	10dcc <mycore_free@plt>
   1bae8:	cmp	r5, r7
   1baec:	bne	1bacc <myhtml_collection_create@@Base+0x54>
   1baf0:	b	1bad4 <myhtml_collection_create@@Base+0x5c>

0001baf4 <myhtml_collection_check_size@@Base>:
   1baf4:	ldr	r3, [r0, #8]
   1baf8:	ldr	ip, [r0, #4]
   1bafc:	add	r1, r1, r3
   1bb00:	cmp	r1, ip
   1bb04:	bcs	1bb10 <myhtml_collection_check_size@@Base+0x1c>
   1bb08:	mov	r0, #0
   1bb0c:	bx	lr
   1bb10:	push	{r4, r5, r6, lr}
   1bb14:	add	r5, r2, #1
   1bb18:	add	r5, r5, r1
   1bb1c:	mov	r4, r0
   1bb20:	lsl	r1, r5, #2
   1bb24:	ldr	r0, [r0]
   1bb28:	bl	fbd8 <mycore_realloc@plt>
   1bb2c:	cmp	r0, #0
   1bb30:	beq	1bb40 <myhtml_collection_check_size@@Base+0x4c>
   1bb34:	stm	r4, {r0, r5}
   1bb38:	mov	r0, #0
   1bb3c:	pop	{r4, r5, r6, pc}
   1bb40:	mov	r0, #2
   1bb44:	pop	{r4, r5, r6, pc}

0001bb48 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base>:
   1bb48:	push	{r4, r5, r6, r7, r8, lr}
   1bb4c:	subs	r4, r0, #0
   1bb50:	movne	r5, r1
   1bb54:	movne	r6, r2
   1bb58:	movne	r8, #0
   1bb5c:	movne	r7, #1024	; 0x400
   1bb60:	bne	1bb8c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x44>
   1bb64:	b	1bbd4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x8c>
   1bb68:	ldr	r3, [r4, #20]
   1bb6c:	mov	r2, r6
   1bb70:	subs	r0, r3, #0
   1bb74:	mov	r1, r5
   1bb78:	beq	1bb80 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x38>
   1bb7c:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bb80:	ldr	r4, [r4, #16]
   1bb84:	cmp	r4, #0
   1bb88:	beq	1bbd4 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x8c>
   1bb8c:	ldr	r3, [r4, #4]
   1bb90:	cmp	r3, r6
   1bb94:	bne	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bb98:	ldr	r2, [r5, #8]
   1bb9c:	ldr	r0, [r5, #4]
   1bba0:	ldr	r1, [r5]
   1bba4:	add	r3, r2, #1
   1bba8:	cmp	r3, r0
   1bbac:	str	r4, [r1, r2, lsl #2]
   1bbb0:	str	r3, [r5, #8]
   1bbb4:	bcc	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bbb8:	mov	r2, r8
   1bbbc:	mov	r1, r7
   1bbc0:	mov	r0, r5
   1bbc4:	bl	10dfc <myhtml_collection_check_size@plt>
   1bbc8:	cmp	r0, #0
   1bbcc:	beq	1bb68 <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@@Base+0x20>
   1bbd0:	pop	{r4, r5, r6, r7, r8, pc}
   1bbd4:	mov	r0, #0
   1bbd8:	pop	{r4, r5, r6, r7, r8, pc}

0001bbdc <myhtml_get_nodes_by_tag_id_in_scope@@Base>:
   1bbdc:	push	{r4, r5, r6, lr}
   1bbe0:	sub	sp, sp, #16
   1bbe4:	subs	r6, r2, #0
   1bbe8:	ldr	r5, [sp, #32]
   1bbec:	beq	1bc84 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa8>
   1bbf0:	mov	r4, r1
   1bbf4:	cmp	r1, #0
   1bbf8:	mov	r1, #0
   1bbfc:	str	r1, [sp, #12]
   1bc00:	beq	1bc4c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x70>
   1bc04:	ldr	r0, [r6, #20]
   1bc08:	cmp	r0, #0
   1bc0c:	beq	1bc20 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x44>
   1bc10:	mov	r2, r3
   1bc14:	mov	r1, r4
   1bc18:	bl	10c4c <myhtml_get_nodes_by_tag_id_in_scope_find_recursion@plt>
   1bc1c:	str	r0, [sp, #12]
   1bc20:	ldr	r2, [r4, #8]
   1bc24:	ldr	r3, [r4]
   1bc28:	mov	r1, #0
   1bc2c:	cmp	r5, #0
   1bc30:	str	r1, [r3, r2, lsl #2]
   1bc34:	beq	1bc7c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xa0>
   1bc38:	ldr	r3, [sp, #12]
   1bc3c:	mov	r0, r4
   1bc40:	str	r3, [r5]
   1bc44:	add	sp, sp, #16
   1bc48:	pop	{r4, r5, r6, pc}
   1bc4c:	add	r1, sp, #12
   1bc50:	mov	r0, #1024	; 0x400
   1bc54:	str	r3, [sp, #4]
   1bc58:	bl	10304 <myhtml_collection_create@plt>
   1bc5c:	ldr	r2, [sp, #12]
   1bc60:	ldr	r3, [sp, #4]
   1bc64:	cmp	r2, #0
   1bc68:	beq	1bc8c <myhtml_get_nodes_by_tag_id_in_scope@@Base+0xb0>
   1bc6c:	cmp	r5, #0
   1bc70:	strne	r2, [r5]
   1bc74:	add	sp, sp, #16
   1bc78:	pop	{r4, r5, r6, pc}
   1bc7c:	mov	r0, r4
   1bc80:	b	1bc44 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x68>
   1bc84:	mov	r0, r6
   1bc88:	b	1bc44 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x68>
   1bc8c:	mov	r4, r0
   1bc90:	b	1bc04 <myhtml_get_nodes_by_tag_id_in_scope@@Base+0x28>

0001bc94 <myhtml_get_nodes_by_name_in_scope@@Base>:
   1bc94:	push	{r4, r5, r6, r7, r8, lr}
   1bc98:	mov	r4, r0
   1bc9c:	mov	r5, r1
   1bca0:	mov	r7, r2
   1bca4:	mov	r1, r3
   1bca8:	ldr	r0, [r0, #28]
   1bcac:	ldr	r2, [sp, #24]
   1bcb0:	ldr	r6, [sp, #28]
   1bcb4:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1bcb8:	subs	r3, r0, #0
   1bcbc:	popeq	{r4, r5, r6, r7, r8, pc}
   1bcc0:	ldr	r3, [r3]
   1bcc4:	mov	r2, r7
   1bcc8:	str	r6, [sp, #24]
   1bccc:	mov	r1, r5
   1bcd0:	mov	r0, r4
   1bcd4:	pop	{r4, r5, r6, r7, r8, lr}
   1bcd8:	b	ff38 <myhtml_get_nodes_by_tag_id_in_scope@plt>

0001bcdc <myhtml_get_nodes_by_tag_id@@Base>:
   1bcdc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bce0:	subs	r6, r1, #0
   1bce4:	mov	r7, r0
   1bce8:	mov	r5, r2
   1bcec:	mov	sl, r3
   1bcf0:	beq	1bdbc <myhtml_get_nodes_by_tag_id@@Base+0xe0>
   1bcf4:	ldr	r4, [r7, #96]	; 0x60
   1bcf8:	cmp	r4, #0
   1bcfc:	beq	1bd4c <myhtml_get_nodes_by_tag_id@@Base+0x70>
   1bd00:	mov	r9, #1024	; 0x400
   1bd04:	mov	r8, #1
   1bd08:	b	1bd10 <myhtml_get_nodes_by_tag_id@@Base+0x34>
   1bd0c:	mov	r4, r3
   1bd10:	ldr	r3, [r4, #4]
   1bd14:	cmp	r3, r5
   1bd18:	beq	1bd78 <myhtml_get_nodes_by_tag_id@@Base+0x9c>
   1bd1c:	ldr	r3, [r4, #20]
   1bd20:	cmp	r3, #0
   1bd24:	bne	1bd0c <myhtml_get_nodes_by_tag_id@@Base+0x30>
   1bd28:	ldr	r2, [r7, #96]	; 0x60
   1bd2c:	cmp	r2, r4
   1bd30:	beq	1bd4c <myhtml_get_nodes_by_tag_id@@Base+0x70>
   1bd34:	ldr	r3, [r4, #16]
   1bd38:	cmp	r3, #0
   1bd3c:	bne	1bd0c <myhtml_get_nodes_by_tag_id@@Base+0x30>
   1bd40:	ldr	r4, [r4, #24]
   1bd44:	cmp	r2, r4
   1bd48:	bne	1bd34 <myhtml_get_nodes_by_tag_id@@Base+0x58>
   1bd4c:	mov	r2, #1024	; 0x400
   1bd50:	mov	r1, #1
   1bd54:	mov	r0, r6
   1bd58:	bl	10dfc <myhtml_collection_check_size@plt>
   1bd5c:	cmp	r0, #0
   1bd60:	beq	1bda8 <myhtml_get_nodes_by_tag_id@@Base+0xcc>
   1bd64:	cmp	sl, #0
   1bd68:	movne	r3, #2
   1bd6c:	strne	r3, [sl]
   1bd70:	mov	r0, r6
   1bd74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bd78:	mov	r2, r9
   1bd7c:	mov	r1, r8
   1bd80:	mov	r0, r6
   1bd84:	bl	10dfc <myhtml_collection_check_size@plt>
   1bd88:	cmp	r0, #0
   1bd8c:	bne	1bd64 <myhtml_get_nodes_by_tag_id@@Base+0x88>
   1bd90:	ldr	r3, [r6, #8]
   1bd94:	ldr	r1, [r6]
   1bd98:	add	r2, r3, #1
   1bd9c:	str	r4, [r1, r3, lsl #2]
   1bda0:	str	r2, [r6, #8]
   1bda4:	b	1bd1c <myhtml_get_nodes_by_tag_id@@Base+0x40>
   1bda8:	ldr	r2, [r6, #8]
   1bdac:	ldr	r3, [r6]
   1bdb0:	str	r0, [r3, r2, lsl #2]
   1bdb4:	mov	r0, r6
   1bdb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1bdbc:	mov	r0, #1024	; 0x400
   1bdc0:	bl	10304 <myhtml_collection_create@plt>
   1bdc4:	subs	r6, r0, #0
   1bdc8:	bne	1bcf4 <myhtml_get_nodes_by_tag_id@@Base+0x18>
   1bdcc:	b	1bd70 <myhtml_get_nodes_by_tag_id@@Base+0x94>

0001bdd0 <myhtml_get_nodes_by_name@@Base>:
   1bdd0:	push	{r4, r5, r6, lr}
   1bdd4:	mov	r4, r0
   1bdd8:	mov	r0, r2
   1bddc:	mov	r5, r1
   1bde0:	mov	r2, r3
   1bde4:	mov	r1, r0
   1bde8:	ldr	r0, [r4, #28]
   1bdec:	ldr	r6, [sp, #16]
   1bdf0:	bl	10b74 <myhtml_tag_get_by_name@plt>
   1bdf4:	subs	r2, r0, #0
   1bdf8:	popeq	{r4, r5, r6, pc}
   1bdfc:	mov	r3, r6
   1be00:	mov	r1, r5
   1be04:	mov	r0, r4
   1be08:	ldr	r2, [r2]
   1be0c:	pop	{r4, r5, r6, lr}
   1be10:	b	1031c <myhtml_get_nodes_by_tag_id@plt>

0001be14 <myhtml_get_nodes_by_attribute_key_recursion@@Base>:
   1be14:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1be18:	subs	r8, r0, #0
   1be1c:	beq	1beec <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xd8>
   1be20:	mov	r5, r3
   1be24:	mov	r7, r2
   1be28:	mov	fp, r1
   1be2c:	mov	r6, r8
   1be30:	mov	sl, #0
   1be34:	mov	r9, #1024	; 0x400
   1be38:	ldr	r3, [r6, #32]
   1be3c:	cmp	r3, #0
   1be40:	beq	1bec0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be44:	ldr	r4, [r3, #40]	; 0x28
   1be48:	cmp	r4, #0
   1be4c:	bne	1be60 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x4c>
   1be50:	b	1bec0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be54:	ldr	r4, [r4]
   1be58:	cmp	r4, #0
   1be5c:	beq	1bec0 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xac>
   1be60:	ldr	r0, [r4, #16]
   1be64:	cmp	r0, r5
   1be68:	bne	1be54 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1be6c:	mov	r2, r5
   1be70:	mov	r1, r7
   1be74:	ldr	r0, [r4, #8]
   1be78:	bl	102a4 <mycore_strncasecmp@plt>
   1be7c:	cmp	r0, #0
   1be80:	bne	1be54 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1be84:	ldr	r2, [fp, #8]
   1be88:	ldr	r0, [fp, #4]
   1be8c:	ldr	r1, [fp]
   1be90:	add	r3, r2, #1
   1be94:	cmp	r3, r0
   1be98:	str	r6, [r1, r2, lsl #2]
   1be9c:	str	r3, [fp, #8]
   1bea0:	bcc	1be54 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1bea4:	mov	r2, sl
   1bea8:	mov	r1, r9
   1beac:	mov	r0, fp
   1beb0:	bl	10dfc <myhtml_collection_check_size@plt>
   1beb4:	cmp	r0, #0
   1beb8:	beq	1be54 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x40>
   1bebc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bec0:	ldr	r3, [r6, #20]
   1bec4:	cmp	r3, #0
   1bec8:	beq	1bed4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1becc:	mov	r6, r3
   1bed0:	b	1be38 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0x24>
   1bed4:	ldr	r3, [r6, #16]
   1bed8:	cmp	r3, #0
   1bedc:	bne	1becc <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xb8>
   1bee0:	ldr	r6, [r6, #24]
   1bee4:	cmp	r8, r6
   1bee8:	bne	1bed4 <myhtml_get_nodes_by_attribute_key_recursion@@Base+0xc0>
   1beec:	mov	r0, #0
   1bef0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001bef4 <myhtml_get_nodes_by_attribute_key@@Base>:
   1bef4:	push	{r4, r5, r6, r7, lr}
   1bef8:	sub	sp, sp, #12
   1befc:	subs	r5, r1, #0
   1bf00:	mov	r7, r0
   1bf04:	mov	r4, r2
   1bf08:	ldr	r6, [sp, #36]	; 0x24
   1bf0c:	beq	1bf44 <myhtml_get_nodes_by_attribute_key@@Base+0x50>
   1bf10:	cmp	r4, #0
   1bf14:	mov	r2, r3
   1bf18:	ldreq	r4, [r7, #96]	; 0x60
   1bf1c:	ldr	r3, [sp, #32]
   1bf20:	mov	r0, r4
   1bf24:	mov	r1, r5
   1bf28:	bl	fea8 <myhtml_get_nodes_by_attribute_key_recursion@plt>
   1bf2c:	cmp	r0, #0
   1bf30:	cmpne	r6, #0
   1bf34:	strne	r0, [r6]
   1bf38:	mov	r0, r5
   1bf3c:	add	sp, sp, #12
   1bf40:	pop	{r4, r5, r6, r7, pc}
   1bf44:	mov	r1, r6
   1bf48:	mov	r0, #1024	; 0x400
   1bf4c:	str	r3, [sp, #4]
   1bf50:	bl	10304 <myhtml_collection_create@plt>
   1bf54:	cmp	r6, #0
   1bf58:	ldr	r3, [sp, #4]
   1bf5c:	beq	1bf6c <myhtml_get_nodes_by_attribute_key@@Base+0x78>
   1bf60:	ldr	r2, [r6]
   1bf64:	cmp	r2, #0
   1bf68:	bne	1bf38 <myhtml_get_nodes_by_attribute_key@@Base+0x44>
   1bf6c:	subs	r5, r0, #0
   1bf70:	bne	1bf10 <myhtml_get_nodes_by_attribute_key@@Base+0x1c>
   1bf74:	b	1bf38 <myhtml_get_nodes_by_attribute_key@@Base+0x44>

0001bf78 <myhtml_get_nodes_by_attribute_value_recursion@@Base>:
   1bf78:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf7c:	subs	r9, r0, #0
   1bf80:	ldr	r8, [sp, #40]	; 0x28
   1bf84:	beq	1c040 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xc8>
   1bf88:	mov	r7, r3
   1bf8c:	mov	r6, r2
   1bf90:	mov	sl, r1
   1bf94:	mov	r5, r9
   1bf98:	mov	fp, #0
   1bf9c:	ldr	r2, [r5, #32]
   1bfa0:	cmp	r2, #0
   1bfa4:	beq	1c014 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfa8:	ldr	r4, [r2, #40]	; 0x28
   1bfac:	cmp	r4, #0
   1bfb0:	bne	1bfc4 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x4c>
   1bfb4:	b	1c014 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfb8:	ldr	r4, [r4]
   1bfbc:	cmp	r4, #0
   1bfc0:	beq	1c014 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x9c>
   1bfc4:	mov	r2, r8
   1bfc8:	mov	r1, r7
   1bfcc:	add	r0, r4, #28
   1bfd0:	blx	r6
   1bfd4:	cmp	r0, #0
   1bfd8:	beq	1bfb8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1bfdc:	ldr	r1, [sl, #8]
   1bfe0:	ldm	sl, {r0, ip}
   1bfe4:	add	r2, r1, #1
   1bfe8:	cmp	r2, ip
   1bfec:	str	r5, [r0, r1, lsl #2]
   1bff0:	str	r2, [sl, #8]
   1bff4:	bcc	1bfb8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1bff8:	mov	r2, fp
   1bffc:	mov	r1, #1024	; 0x400
   1c000:	mov	r0, sl
   1c004:	bl	10dfc <myhtml_collection_check_size@plt>
   1c008:	cmp	r0, #0
   1c00c:	beq	1bfb8 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x40>
   1c010:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c014:	ldr	r2, [r5, #20]
   1c018:	cmp	r2, #0
   1c01c:	beq	1c028 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb0>
   1c020:	mov	r5, r2
   1c024:	b	1bf9c <myhtml_get_nodes_by_attribute_value_recursion@@Base+0x24>
   1c028:	ldr	r2, [r5, #16]
   1c02c:	cmp	r2, #0
   1c030:	bne	1c020 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xa8>
   1c034:	ldr	r5, [r5, #24]
   1c038:	cmp	r9, r5
   1c03c:	bne	1c028 <myhtml_get_nodes_by_attribute_value_recursion@@Base+0xb0>
   1c040:	mov	r0, #0
   1c044:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c048 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base>:
   1c048:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c04c:	subs	r7, r0, #0
   1c050:	ldr	r5, [sp, #40]	; 0x28
   1c054:	beq	1c134 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xec>
   1c058:	mov	r6, r3
   1c05c:	mov	r9, r2
   1c060:	mov	r8, r1
   1c064:	mov	sl, r7
   1c068:	mov	fp, #0
   1c06c:	ldr	r2, [sl, #32]
   1c070:	cmp	r2, #0
   1c074:	beq	1c108 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c078:	ldr	r4, [r2, #40]	; 0x28
   1c07c:	cmp	r4, #0
   1c080:	bne	1c094 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x4c>
   1c084:	b	1c108 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c088:	ldr	r4, [r4]
   1c08c:	cmp	r4, #0
   1c090:	beq	1c108 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xc0>
   1c094:	ldr	r2, [r4, #16]
   1c098:	cmp	r2, r5
   1c09c:	bne	1c088 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0a0:	mov	r2, r5
   1c0a4:	mov	r1, r6
   1c0a8:	ldr	r0, [r4, #8]
   1c0ac:	bl	102a4 <mycore_strncasecmp@plt>
   1c0b0:	cmp	r0, #0
   1c0b4:	bne	1c088 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0b8:	ldr	r2, [sp, #48]	; 0x30
   1c0bc:	ldr	r1, [sp, #44]	; 0x2c
   1c0c0:	add	r0, r4, #28
   1c0c4:	blx	r9
   1c0c8:	cmp	r0, #0
   1c0cc:	beq	1c088 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0d0:	ldr	r1, [r8, #8]
   1c0d4:	ldm	r8, {r0, ip}
   1c0d8:	add	r2, r1, #1
   1c0dc:	cmp	r2, ip
   1c0e0:	str	sl, [r0, r1, lsl #2]
   1c0e4:	str	r2, [r8, #8]
   1c0e8:	bcc	1c088 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c0ec:	mov	r2, fp
   1c0f0:	mov	r1, #1024	; 0x400
   1c0f4:	mov	r0, r8
   1c0f8:	bl	10dfc <myhtml_collection_check_size@plt>
   1c0fc:	cmp	r0, #0
   1c100:	beq	1c088 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x40>
   1c104:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c108:	ldr	r2, [sl, #20]
   1c10c:	cmp	r2, #0
   1c110:	beq	1c11c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd4>
   1c114:	mov	sl, r2
   1c118:	b	1c06c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0x24>
   1c11c:	ldr	r2, [sl, #16]
   1c120:	cmp	r2, #0
   1c124:	bne	1c114 <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xcc>
   1c128:	ldr	sl, [sl, #24]
   1c12c:	cmp	r7, sl
   1c130:	bne	1c11c <myhtml_get_nodes_by_attribute_value_recursion_by_key@@Base+0xd4>
   1c134:	mov	r0, #0
   1c138:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c13c <_myhtml_get_nodes_by_attribute_value@@Base>:
   1c13c:	push	{r4, r5, r6, r7, r8, lr}
   1c140:	sub	sp, sp, #24
   1c144:	subs	r5, r1, #0
   1c148:	mov	r4, r2
   1c14c:	mov	r8, r0
   1c150:	mov	r2, r3
   1c154:	ldr	r7, [sp, #52]	; 0x34
   1c158:	ldr	r3, [sp, #48]	; 0x30
   1c15c:	ldr	r6, [sp, #64]	; 0x40
   1c160:	beq	1c1cc <_myhtml_get_nodes_by_attribute_value@@Base+0x90>
   1c164:	cmp	r4, #0
   1c168:	ldreq	r4, [r8, #96]	; 0x60
   1c16c:	cmp	r3, #0
   1c170:	cmpne	r7, #0
   1c174:	bne	1c1a8 <_myhtml_get_nodes_by_attribute_value@@Base+0x6c>
   1c178:	ldr	r3, [sp, #60]	; 0x3c
   1c17c:	mov	r0, r4
   1c180:	str	r3, [sp]
   1c184:	mov	r1, r5
   1c188:	ldr	r3, [sp, #56]	; 0x38
   1c18c:	bl	fbcc <myhtml_get_nodes_by_attribute_value_recursion@plt>
   1c190:	cmp	r0, #0
   1c194:	cmpne	r6, #0
   1c198:	strne	r0, [r6]
   1c19c:	mov	r0, r5
   1c1a0:	add	sp, sp, #24
   1c1a4:	pop	{r4, r5, r6, r7, r8, pc}
   1c1a8:	ldr	r1, [sp, #60]	; 0x3c
   1c1ac:	str	r7, [sp]
   1c1b0:	str	r1, [sp, #8]
   1c1b4:	ldr	r1, [sp, #56]	; 0x38
   1c1b8:	mov	r0, r4
   1c1bc:	str	r1, [sp, #4]
   1c1c0:	mov	r1, r5
   1c1c4:	bl	fdf4 <myhtml_get_nodes_by_attribute_value_recursion_by_key@plt>
   1c1c8:	b	1c190 <_myhtml_get_nodes_by_attribute_value@@Base+0x54>
   1c1cc:	mov	r1, r6
   1c1d0:	mov	r0, #1024	; 0x400
   1c1d4:	str	r3, [sp, #20]
   1c1d8:	str	r2, [sp, #16]
   1c1dc:	bl	10304 <myhtml_collection_create@plt>
   1c1e0:	cmp	r6, #0
   1c1e4:	ldr	r2, [sp, #16]
   1c1e8:	ldr	r3, [sp, #20]
   1c1ec:	beq	1c1fc <_myhtml_get_nodes_by_attribute_value@@Base+0xc0>
   1c1f0:	ldr	r1, [r6]
   1c1f4:	cmp	r1, #0
   1c1f8:	bne	1c19c <_myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1c1fc:	subs	r5, r0, #0
   1c200:	bne	1c164 <_myhtml_get_nodes_by_attribute_value@@Base+0x28>
   1c204:	b	1c19c <_myhtml_get_nodes_by_attribute_value@@Base+0x60>

0001c208 <myhtml_get_nodes_by_attribute_value@@Base>:
   1c208:	push	{r4, r5, r6, r7, lr}
   1c20c:	cmp	r3, #0
   1c210:	add	r4, sp, #28
   1c214:	ldr	r3, [pc, #68]	; 1c260 <myhtml_get_nodes_by_attribute_value@@Base+0x58>
   1c218:	ldr	ip, [sp, #20]
   1c21c:	add	r3, pc, r3
   1c220:	ldr	lr, [sp, #24]
   1c224:	ldm	r4, {r4, r5, r6}
   1c228:	bne	1c250 <myhtml_get_nodes_by_attribute_value@@Base+0x48>
   1c22c:	ldr	r7, [pc, #48]	; 1c264 <myhtml_get_nodes_by_attribute_value@@Base+0x5c>
   1c230:	ldr	r3, [r3, r7]
   1c234:	str	r6, [sp, #36]	; 0x24
   1c238:	str	r5, [sp, #32]
   1c23c:	str	r4, [sp, #28]
   1c240:	str	lr, [sp, #24]
   1c244:	str	ip, [sp, #20]
   1c248:	pop	{r4, r5, r6, r7, lr}
   1c24c:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c250:	ldr	r7, [pc, #16]	; 1c268 <myhtml_get_nodes_by_attribute_value@@Base+0x60>
   1c254:	ldr	r3, [r3, r7]
   1c258:	pop	{r4, r5, r6, r7, lr}
   1c25c:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c260:	ldrdeq	r8, [pc], -ip
   1c264:	andeq	r0, r0, ip, lsr #17
   1c268:	andeq	r0, r0, r4, lsl #17

0001c26c <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base>:
   1c26c:	push	{r4, r5, r6, r7, lr}
   1c270:	cmp	r3, #0
   1c274:	add	r4, sp, #28
   1c278:	ldr	r3, [pc, #68]	; 1c2c4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x58>
   1c27c:	ldr	ip, [sp, #20]
   1c280:	add	r3, pc, r3
   1c284:	ldr	lr, [sp, #24]
   1c288:	ldm	r4, {r4, r5, r6}
   1c28c:	bne	1c2b4 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x48>
   1c290:	ldr	r7, [pc, #48]	; 1c2c8 <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x5c>
   1c294:	ldr	r3, [r3, r7]
   1c298:	str	r6, [sp, #36]	; 0x24
   1c29c:	str	r5, [sp, #32]
   1c2a0:	str	r4, [sp, #28]
   1c2a4:	str	lr, [sp, #24]
   1c2a8:	str	ip, [sp, #20]
   1c2ac:	pop	{r4, r5, r6, r7, lr}
   1c2b0:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c2b4:	ldr	r7, [pc, #16]	; 1c2cc <myhtml_get_nodes_by_attribute_value_whitespace_separated@@Base+0x60>
   1c2b8:	ldr	r3, [r3, r7]
   1c2bc:	pop	{r4, r5, r6, r7, lr}
   1c2c0:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c2c4:	andeq	r8, pc, r8, ror sp	; <UNPREDICTABLE>
   1c2c8:	andeq	r0, r0, r8, lsr #18
   1c2cc:	andeq	r0, r0, r8, lsl r7

0001c2d0 <myhtml_get_nodes_by_attribute_value_begin@@Base>:
   1c2d0:	push	{r4, r5, r6, r7, lr}
   1c2d4:	cmp	r3, #0
   1c2d8:	add	r4, sp, #28
   1c2dc:	ldr	r3, [pc, #68]	; 1c328 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x58>
   1c2e0:	ldr	ip, [sp, #20]
   1c2e4:	add	r3, pc, r3
   1c2e8:	ldr	lr, [sp, #24]
   1c2ec:	ldm	r4, {r4, r5, r6}
   1c2f0:	bne	1c318 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x48>
   1c2f4:	ldr	r7, [pc, #48]	; 1c32c <myhtml_get_nodes_by_attribute_value_begin@@Base+0x5c>
   1c2f8:	ldr	r3, [r3, r7]
   1c2fc:	str	r6, [sp, #36]	; 0x24
   1c300:	str	r5, [sp, #32]
   1c304:	str	r4, [sp, #28]
   1c308:	str	lr, [sp, #24]
   1c30c:	str	ip, [sp, #20]
   1c310:	pop	{r4, r5, r6, r7, lr}
   1c314:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c318:	ldr	r7, [pc, #16]	; 1c330 <myhtml_get_nodes_by_attribute_value_begin@@Base+0x60>
   1c31c:	ldr	r3, [r3, r7]
   1c320:	pop	{r4, r5, r6, r7, lr}
   1c324:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c328:	andeq	r8, pc, r4, lsl sp	; <UNPREDICTABLE>
   1c32c:	andeq	r0, r0, r4, ror #14
   1c330:	andeq	r0, r0, r4, ror r7

0001c334 <myhtml_get_nodes_by_attribute_value_end@@Base>:
   1c334:	push	{r4, r5, r6, r7, lr}
   1c338:	cmp	r3, #0
   1c33c:	add	r4, sp, #28
   1c340:	ldr	r3, [pc, #68]	; 1c38c <myhtml_get_nodes_by_attribute_value_end@@Base+0x58>
   1c344:	ldr	ip, [sp, #20]
   1c348:	add	r3, pc, r3
   1c34c:	ldr	lr, [sp, #24]
   1c350:	ldm	r4, {r4, r5, r6}
   1c354:	bne	1c37c <myhtml_get_nodes_by_attribute_value_end@@Base+0x48>
   1c358:	ldr	r7, [pc, #48]	; 1c390 <myhtml_get_nodes_by_attribute_value_end@@Base+0x5c>
   1c35c:	ldr	r3, [r3, r7]
   1c360:	str	r6, [sp, #36]	; 0x24
   1c364:	str	r5, [sp, #32]
   1c368:	str	r4, [sp, #28]
   1c36c:	str	lr, [sp, #24]
   1c370:	str	ip, [sp, #20]
   1c374:	pop	{r4, r5, r6, r7, lr}
   1c378:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c37c:	ldr	r7, [pc, #16]	; 1c394 <myhtml_get_nodes_by_attribute_value_end@@Base+0x60>
   1c380:	ldr	r3, [r3, r7]
   1c384:	pop	{r4, r5, r6, r7, lr}
   1c388:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c38c:			; <UNDEFINED> instruction: 0x000f8cb0
   1c390:	strdeq	r0, [r0], -r4
   1c394:	andeq	r0, r0, r4, lsl #19

0001c398 <myhtml_get_nodes_by_attribute_value_contain@@Base>:
   1c398:	push	{r4, r5, r6, r7, lr}
   1c39c:	cmp	r3, #0
   1c3a0:	add	r4, sp, #28
   1c3a4:	ldr	r3, [pc, #68]	; 1c3f0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x58>
   1c3a8:	ldr	ip, [sp, #20]
   1c3ac:	add	r3, pc, r3
   1c3b0:	ldr	lr, [sp, #24]
   1c3b4:	ldm	r4, {r4, r5, r6}
   1c3b8:	bne	1c3e0 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x48>
   1c3bc:	ldr	r7, [pc, #48]	; 1c3f4 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x5c>
   1c3c0:	ldr	r3, [r3, r7]
   1c3c4:	str	r6, [sp, #36]	; 0x24
   1c3c8:	str	r5, [sp, #32]
   1c3cc:	str	r4, [sp, #28]
   1c3d0:	str	lr, [sp, #24]
   1c3d4:	str	ip, [sp, #20]
   1c3d8:	pop	{r4, r5, r6, r7, lr}
   1c3dc:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c3e0:	ldr	r7, [pc, #16]	; 1c3f8 <myhtml_get_nodes_by_attribute_value_contain@@Base+0x60>
   1c3e4:	ldr	r3, [r3, r7]
   1c3e8:	pop	{r4, r5, r6, r7, lr}
   1c3ec:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c3f0:	andeq	r8, pc, ip, asr #24
   1c3f4:	andeq	r0, r0, r8, lsl #17
   1c3f8:	andeq	r0, r0, r8, ror #14

0001c3fc <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base>:
   1c3fc:	push	{r4, r5, r6, r7, lr}
   1c400:	cmp	r3, #0
   1c404:	add	r4, sp, #28
   1c408:	ldr	r3, [pc, #68]	; 1c454 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x58>
   1c40c:	ldr	ip, [sp, #20]
   1c410:	add	r3, pc, r3
   1c414:	ldr	lr, [sp, #24]
   1c418:	ldm	r4, {r4, r5, r6}
   1c41c:	bne	1c444 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x48>
   1c420:	ldr	r7, [pc, #48]	; 1c458 <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x5c>
   1c424:	ldr	r3, [r3, r7]
   1c428:	str	r6, [sp, #36]	; 0x24
   1c42c:	str	r5, [sp, #32]
   1c430:	str	r4, [sp, #28]
   1c434:	str	lr, [sp, #24]
   1c438:	str	ip, [sp, #20]
   1c43c:	pop	{r4, r5, r6, r7, lr}
   1c440:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c444:	ldr	r7, [pc, #16]	; 1c45c <myhtml_get_nodes_by_attribute_value_hyphen_separated@@Base+0x60>
   1c448:	ldr	r3, [r3, r7]
   1c44c:	pop	{r4, r5, r6, r7, lr}
   1c450:	b	10b38 <_myhtml_get_nodes_by_attribute_value@plt>
   1c454:	andeq	r8, pc, r8, ror #23
   1c458:	andeq	r0, r0, r0, ror r8
   1c45c:	andeq	r0, r0, r4, lsl #16

0001c460 <myhtml_collection_clean@@Base>:
   1c460:	cmp	r0, #0
   1c464:	movne	r3, #0
   1c468:	strne	r3, [r0, #8]
   1c46c:	bx	lr

0001c470 <myhtml_collection_destroy@@Base>:
   1c470:	push	{r4, lr}
   1c474:	subs	r4, r0, #0
   1c478:	beq	1c494 <myhtml_collection_destroy@@Base+0x24>
   1c47c:	ldr	r0, [r4]
   1c480:	cmp	r0, #0
   1c484:	beq	1c48c <myhtml_collection_destroy@@Base+0x1c>
   1c488:	bl	10dcc <mycore_free@plt>
   1c48c:	mov	r0, r4
   1c490:	bl	10dcc <mycore_free@plt>
   1c494:	mov	r0, #0
   1c498:	pop	{r4, pc}

0001c49c <myhtml_queue_add@@Base>:
   1c49c:	ldr	r3, [r0, #184]	; 0xb8
   1c4a0:	push	{r4, r5, r6, r7, r8, lr}
   1c4a4:	adds	r5, r2, #0
   1c4a8:	movne	r5, #1
   1c4ac:	ands	r3, r5, r3, lsr #2
   1c4b0:	mov	r4, r0
   1c4b4:	mov	r7, r1
   1c4b8:	mov	r8, r2
   1c4bc:	ldr	r6, [r0, #68]	; 0x44
   1c4c0:	beq	1c4d0 <myhtml_queue_add@@Base+0x34>
   1c4c4:	ldr	r3, [r2]
   1c4c8:	cmp	r3, #1
   1c4cc:	beq	1c5b8 <myhtml_queue_add@@Base+0x11c>
   1c4d0:	ldr	r3, [r4, #180]	; 0xb4
   1c4d4:	tst	r3, #16
   1c4d8:	bne	1c568 <myhtml_queue_add@@Base+0xcc>
   1c4dc:	ldr	r3, [r4]
   1c4e0:	cmp	r6, #0
   1c4e4:	strne	r8, [r6, #4]
   1c4e8:	ldr	r1, [r4, #20]
   1c4ec:	ldr	r0, [r3]
   1c4f0:	bl	10538 <mythread_queue_node_malloc_round@plt>
   1c4f4:	ldr	r1, [r4, #20]
   1c4f8:	ldr	r3, [r1]
   1c4fc:	ldr	r3, [r3, #12]
   1c500:	cmp	r3, #0
   1c504:	str	r0, [r4, #68]	; 0x44
   1c508:	beq	1c604 <myhtml_queue_add@@Base+0x168>
   1c50c:	cmp	r0, #0
   1c510:	beq	1c5a0 <myhtml_queue_add@@Base+0x104>
   1c514:	cmp	r6, #0
   1c518:	moveq	r5, #0
   1c51c:	andne	r5, r5, #1
   1c520:	cmp	r5, #0
   1c524:	str	r4, [r0]
   1c528:	str	r6, [r0, #8]
   1c52c:	bne	1c5a8 <myhtml_queue_add@@Base+0x10c>
   1c530:	ldr	r3, [r4, #8]
   1c534:	mov	r0, r3
   1c538:	ldr	r1, [r3, #12]
   1c53c:	bl	10a0c <myhtml_token_node_create@plt>
   1c540:	cmp	r0, #0
   1c544:	mov	r3, r0
   1c548:	str	r0, [r4, #64]	; 0x40
   1c54c:	beq	1c5a0 <myhtml_queue_add@@Base+0x104>
   1c550:	ldr	r1, [r4, #192]	; 0xc0
   1c554:	mov	r0, #0
   1c558:	add	r1, r7, r1
   1c55c:	str	r1, [r3, #32]
   1c560:	str	r1, [r3, #24]
   1c564:	pop	{r4, r5, r6, r7, r8, pc}
   1c568:	cmp	r6, #0
   1c56c:	moveq	r3, #0
   1c570:	andne	r3, r5, #1
   1c574:	cmp	r3, #0
   1c578:	bne	1c5e4 <myhtml_queue_add@@Base+0x148>
   1c57c:	ldr	r1, [r4]
   1c580:	mov	r3, #0
   1c584:	mov	r2, #4
   1c588:	ldr	r0, [r1]
   1c58c:	ldr	r1, [r4, #24]
   1c590:	bl	10cac <mythread_queue_node_malloc_limit@plt>
   1c594:	cmp	r0, #0
   1c598:	str	r0, [r4, #68]	; 0x44
   1c59c:	bne	1c514 <myhtml_queue_add@@Base+0x78>
   1c5a0:	mov	r0, #2
   1c5a4:	pop	{r4, r5, r6, r7, r8, pc}
   1c5a8:	mov	r1, r8
   1c5ac:	mov	r0, r4
   1c5b0:	bl	1022c <myhtml_tokenizer_calc_current_namespace@plt>
   1c5b4:	b	1c530 <myhtml_queue_add@@Base+0x94>
   1c5b8:	ldr	r3, [r2, #48]	; 0x30
   1c5bc:	tst	r3, #8
   1c5c0:	beq	1c4d0 <myhtml_queue_add@@Base+0x34>
   1c5c4:	mov	r0, r2
   1c5c8:	bl	10f7c <myhtml_token_node_clean@plt>
   1c5cc:	ldr	r1, [r4, #192]	; 0xc0
   1c5d0:	mov	r0, #0
   1c5d4:	add	r1, r7, r1
   1c5d8:	str	r1, [r8, #32]
   1c5dc:	str	r1, [r8, #24]
   1c5e0:	pop	{r4, r5, r6, r7, r8, pc}
   1c5e4:	mov	r1, r6
   1c5e8:	str	r8, [r6, #4]
   1c5ec:	mov	r0, #0
   1c5f0:	bl	fd7c <myhtml_parser_worker@plt>
   1c5f4:	mov	r1, r6
   1c5f8:	mov	r0, #0
   1c5fc:	bl	10ff4 <myhtml_parser_stream@plt>
   1c600:	b	1c57c <myhtml_queue_add@@Base+0xe0>
   1c604:	ldr	r3, [r4]
   1c608:	ldr	r0, [r3, #4]
   1c60c:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   1c610:	ldr	r3, [r4]
   1c614:	ldr	r1, [r4, #20]
   1c618:	ldr	r0, [r3]
   1c61c:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   1c620:	ldr	r0, [r4, #68]	; 0x44
   1c624:	b	1c50c <myhtml_queue_add@@Base+0x70>

0001c628 <myhtml_utils_strcmp@@Base>:
   1c628:	cmp	r2, #0
   1c62c:	beq	1c678 <myhtml_utils_strcmp@@Base+0x50>
   1c630:	push	{lr}		; (str lr, [sp, #-4]!)
   1c634:	add	r2, r1, r2
   1c638:	sub	r0, r0, #1
   1c63c:	b	1c648 <myhtml_utils_strcmp@@Base+0x20>
   1c640:	cmp	r1, r2
   1c644:	beq	1c670 <myhtml_utils_strcmp@@Base+0x48>
   1c648:	ldrb	r3, [r1], #1
   1c64c:	sub	lr, r3, #65	; 0x41
   1c650:	cmp	lr, #25
   1c654:	mov	ip, r3
   1c658:	orrls	ip, r3, #96	; 0x60
   1c65c:	ldrb	r3, [r0, #1]!
   1c660:	cmp	ip, r3
   1c664:	beq	1c640 <myhtml_utils_strcmp@@Base+0x18>
   1c668:	mov	r0, #0
   1c66c:	pop	{pc}		; (ldr pc, [sp], #4)
   1c670:	mov	r0, #1
   1c674:	pop	{pc}		; (ldr pc, [sp], #4)
   1c678:	mov	r0, #1
   1c67c:	bx	lr

0001c680 <myhtml_is_html_node@@Base>:
   1c680:	cmp	r0, #0
   1c684:	bxeq	lr
   1c688:	ldr	r3, [r0, #4]
   1c68c:	cmp	r3, r1
   1c690:	ldreq	r0, [r0, #8]
   1c694:	subeq	r0, r0, #1
   1c698:	clzeq	r0, r0
   1c69c:	lsreq	r0, r0, #5
   1c6a0:	movne	r0, #0
   1c6a4:	bx	lr

0001c6a8 <myhtml_version@@Base>:
   1c6a8:	ldr	r3, [pc, #20]	; 1c6c4 <myhtml_version@@Base+0x1c>
   1c6ac:	mov	ip, r0
   1c6b0:	add	r3, pc, r3
   1c6b4:	ldm	r3, {r0, r1, r2}
   1c6b8:	stm	ip, {r0, r1, r2}
   1c6bc:	mov	r0, ip
   1c6c0:	bx	lr
   1c6c4:	andeq	lr, sp, r4, asr r0

0001c6c8 <myhtml_node_clone@@Base>:
   1c6c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c6cc:	sub	sp, sp, #12
   1c6d0:	mov	r5, r1
   1c6d4:	mov	r6, r0
   1c6d8:	bl	ffe0 <myhtml_tree_node_create@plt>
   1c6dc:	ldr	r7, [r5, #4]
   1c6e0:	cmp	r7, #251	; 0xfb
   1c6e4:	mov	r4, r0
   1c6e8:	bhi	1c730 <myhtml_node_clone@@Base+0x68>
   1c6ec:	ldr	r3, [r6, #44]	; 0x2c
   1c6f0:	ldr	r2, [r6, #40]	; 0x28
   1c6f4:	ldr	r0, [r6, #8]
   1c6f8:	ldr	r1, [r5, #32]
   1c6fc:	bl	ff2c <myhtml_token_node_clone@plt>
   1c700:	ldr	r3, [r5, #8]
   1c704:	str	r7, [r4, #4]
   1c708:	str	r3, [r4, #8]
   1c70c:	cmp	r0, #0
   1c710:	str	r0, [r4, #32]
   1c714:	ldrne	r3, [r0, #48]	; 0x30
   1c718:	strne	r7, [r0]
   1c71c:	orrne	r3, r3, #4
   1c720:	strne	r3, [r0, #48]	; 0x30
   1c724:	mov	r0, r4
   1c728:	add	sp, sp, #12
   1c72c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c730:	mov	r1, r7
   1c734:	ldr	r0, [r6, #28]
   1c738:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1c73c:	ldr	r3, [r5, #40]	; 0x28
   1c740:	ldr	r1, [r5, #4]
   1c744:	mov	r9, r0
   1c748:	ldr	r0, [r3, #28]
   1c74c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1c750:	cmp	r9, #0
   1c754:	mov	r8, r0
   1c758:	ldr	r2, [r0, #8]
   1c75c:	beq	1c76c <myhtml_node_clone@@Base+0xa4>
   1c760:	ldr	r3, [r9, #8]
   1c764:	cmp	r3, r2
   1c768:	beq	1c78c <myhtml_node_clone@@Base+0xc4>
   1c76c:	mov	r3, #1
   1c770:	ldr	r1, [r8, #4]
   1c774:	ldr	r0, [r6, #28]
   1c778:	str	r3, [sp]
   1c77c:	mov	r3, #0
   1c780:	bl	10010 <myhtml_tag_add@plt>
   1c784:	mov	r7, r0
   1c788:	b	1c6ec <myhtml_node_clone@@Base+0x24>
   1c78c:	ldr	r0, [r9, #4]
   1c790:	ldr	r1, [r8, #4]
   1c794:	bl	10eec <mycore_strncmp@plt>
   1c798:	cmp	r0, #0
   1c79c:	beq	1c6ec <myhtml_node_clone@@Base+0x24>
   1c7a0:	ldr	r2, [r8, #8]
   1c7a4:	b	1c76c <myhtml_node_clone@@Base+0xa4>

0001c7a8 <myhtml_node_clone_deep@@Base>:
   1c7a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c7ac:	subs	r7, r1, #0
   1c7b0:	mov	r8, r0
   1c7b4:	beq	1c7d4 <myhtml_node_clone_deep@@Base+0x2c>
   1c7b8:	ldr	r3, [r7, #40]	; 0x28
   1c7bc:	cmp	r3, #0
   1c7c0:	beq	1c7d4 <myhtml_node_clone_deep@@Base+0x2c>
   1c7c4:	ldr	r3, [r3, #84]	; 0x54
   1c7c8:	cmp	r7, r3
   1c7cc:	ldreq	r4, [r7, #20]
   1c7d0:	beq	1c7d8 <myhtml_node_clone_deep@@Base+0x30>
   1c7d4:	mov	r4, r7
   1c7d8:	mov	r1, r4
   1c7dc:	mov	r0, r8
   1c7e0:	bl	10f34 <myhtml_node_clone@plt>
   1c7e4:	subs	r9, r0, #0
   1c7e8:	beq	1c864 <myhtml_node_clone_deep@@Base+0xbc>
   1c7ec:	ldr	r4, [r4, #20]
   1c7f0:	cmp	r4, #0
   1c7f4:	beq	1c868 <myhtml_node_clone_deep@@Base+0xc0>
   1c7f8:	mov	r5, r9
   1c7fc:	b	1c808 <myhtml_node_clone_deep@@Base+0x60>
   1c800:	mov	r5, r6
   1c804:	mov	r4, r3
   1c808:	mov	r1, r4
   1c80c:	mov	r0, r8
   1c810:	bl	10f34 <myhtml_node_clone@plt>
   1c814:	subs	r6, r0, #0
   1c818:	beq	1c864 <myhtml_node_clone_deep@@Base+0xbc>
   1c81c:	mov	r1, r6
   1c820:	mov	r0, r5
   1c824:	bl	106b8 <myhtml_tree_node_add_child@plt>
   1c828:	ldr	r3, [r4, #20]
   1c82c:	cmp	r3, #0
   1c830:	bne	1c800 <myhtml_node_clone_deep@@Base+0x58>
   1c834:	cmp	r7, r4
   1c838:	bne	1c850 <myhtml_node_clone_deep@@Base+0xa8>
   1c83c:	b	1c868 <myhtml_node_clone_deep@@Base+0xc0>
   1c840:	ldr	r4, [r4, #24]
   1c844:	ldr	r5, [r5, #24]
   1c848:	cmp	r7, r4
   1c84c:	beq	1c868 <myhtml_node_clone_deep@@Base+0xc0>
   1c850:	ldr	r3, [r4, #16]
   1c854:	cmp	r3, #0
   1c858:	beq	1c840 <myhtml_node_clone_deep@@Base+0x98>
   1c85c:	mov	r6, r5
   1c860:	b	1c800 <myhtml_node_clone_deep@@Base+0x58>
   1c864:	mov	r9, #0
   1c868:	mov	r0, r9
   1c86c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001c870 <myhtml_namespace_name_entry_by_name@@Base>:
   1c870:	add	r3, r0, r1
   1c874:	push	{r4, r5, r6, r7, r8, lr}
   1c878:	mov	r6, r1
   1c87c:	mov	r7, r0
   1c880:	ldrb	r1, [r0]
   1c884:	ldr	r2, [pc, #156]	; 1c928 <myhtml_namespace_name_entry_by_name@@Base+0xb8>
   1c888:	ldrb	r0, [r3, #-1]
   1c88c:	add	r2, pc, r2
   1c890:	ldr	r3, [pc, #148]	; 1c92c <myhtml_namespace_name_entry_by_name@@Base+0xbc>
   1c894:	ldr	r5, [pc, #148]	; 1c930 <myhtml_namespace_name_entry_by_name@@Base+0xc0>
   1c898:	ldrb	r0, [r2, r0]
   1c89c:	ldrb	r2, [r2, r1]
   1c8a0:	add	r5, pc, r5
   1c8a4:	smulbb	r0, r0, r2
   1c8a8:	mul	r0, r6, r0
   1c8ac:	umull	r2, r3, r3, r0
   1c8b0:	sub	r2, r0, r3
   1c8b4:	add	r3, r3, r2, lsr #1
   1c8b8:	lsr	r3, r3, #4
   1c8bc:	add	r2, r3, r3, lsl #3
   1c8c0:	add	r3, r3, r2, lsl #1
   1c8c4:	sub	r0, r0, r3
   1c8c8:	add	r0, r0, #1
   1c8cc:	b	1c8d8 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1c8d0:	bcc	1c918 <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1c8d4:	ldr	r0, [r4, #12]
   1c8d8:	add	r3, r0, r0, lsl #2
   1c8dc:	ldr	r0, [r5, r3, lsl #2]
   1c8e0:	add	r4, r5, r3, lsl #2
   1c8e4:	cmp	r0, #0
   1c8e8:	beq	1c918 <myhtml_namespace_name_entry_by_name@@Base+0xa8>
   1c8ec:	ldr	r3, [r4, #4]
   1c8f0:	cmp	r6, r3
   1c8f4:	bne	1c8d0 <myhtml_namespace_name_entry_by_name@@Base+0x60>
   1c8f8:	mov	r2, r6
   1c8fc:	mov	r1, r7
   1c900:	bl	102a4 <mycore_strncasecmp@plt>
   1c904:	cmp	r0, #0
   1c908:	beq	1c920 <myhtml_namespace_name_entry_by_name@@Base+0xb0>
   1c90c:	ldr	r0, [r4, #12]
   1c910:	cmp	r0, #0
   1c914:	bne	1c8d8 <myhtml_namespace_name_entry_by_name@@Base+0x68>
   1c918:	mov	r0, #0
   1c91c:	pop	{r4, r5, r6, r7, r8, pc}
   1c920:	mov	r0, r4
   1c924:	pop	{r4, r5, r6, r7, r8, pc}
   1c928:	andeq	sp, sp, r4, lsl #29
   1c92c:	svcge	0x00286bcb
   1c930:	andeq	r3, pc, r4, lsr #21

0001c934 <myhtml_namespace_id_by_name@@Base>:
   1c934:	push	{r4, lr}
   1c938:	mov	r4, r2
   1c93c:	bl	10208 <myhtml_namespace_name_entry_by_name@plt>
   1c940:	cmp	r0, #0
   1c944:	popeq	{r4, pc}
   1c948:	cmp	r4, #0
   1c94c:	ldrne	r3, [r0, #8]
   1c950:	movne	r0, #1
   1c954:	strne	r3, [r4]
   1c958:	moveq	r0, #1
   1c95c:	pop	{r4, pc}

0001c960 <myhtml_namespace_name_by_id@@Base>:
   1c960:	cmp	r0, #7
   1c964:	push	{r4, r5, r6, lr}
   1c968:	bls	1c984 <myhtml_namespace_name_by_id@@Base+0x24>
   1c96c:	cmp	r1, #0
   1c970:	moveq	r4, r1
   1c974:	movne	r4, #0
   1c978:	strne	r4, [r1]
   1c97c:	mov	r0, r4
   1c980:	pop	{r4, r5, r6, pc}
   1c984:	ldr	r4, [pc, #40]	; 1c9b4 <myhtml_namespace_name_by_id@@Base+0x54>
   1c988:	cmp	r1, #0
   1c98c:	add	r4, pc, r4
   1c990:	add	r4, r4, #256	; 0x100
   1c994:	add	r4, r4, r0, lsl #3
   1c998:	beq	1c97c <myhtml_namespace_name_by_id@@Base+0x1c>
   1c99c:	mov	r0, r4
   1c9a0:	mov	r5, r1
   1c9a4:	bl	10670 <strlen@plt>
   1c9a8:	str	r0, [r5]
   1c9ac:	mov	r0, r4
   1c9b0:	pop	{r4, r5, r6, pc}
   1c9b4:	andeq	sp, sp, r4, lsl #27

0001c9b8 <myhtml_namespace_url_by_id@@Base>:
   1c9b8:	cmp	r0, #7
   1c9bc:	bls	1c9d4 <myhtml_namespace_url_by_id@@Base+0x1c>
   1c9c0:	cmp	r1, #0
   1c9c4:	beq	1ca10 <myhtml_namespace_url_by_id@@Base+0x58>
   1c9c8:	mov	r0, #0
   1c9cc:	str	r0, [r1]
   1c9d0:	bx	lr
   1c9d4:	cmp	r1, #0
   1c9d8:	lsl	r3, r0, #1
   1c9dc:	beq	1c9f8 <myhtml_namespace_url_by_id@@Base+0x40>
   1c9e0:	ldr	r2, [pc, #48]	; 1ca18 <myhtml_namespace_url_by_id@@Base+0x60>
   1c9e4:	add	ip, r3, r0
   1c9e8:	add	r2, pc, r2
   1c9ec:	add	r2, r2, ip, lsl #2
   1c9f0:	ldr	r2, [r2, #404]	; 0x194
   1c9f4:	str	r2, [r1]
   1c9f8:	add	r0, r3, r0
   1c9fc:	ldr	r3, [pc, #24]	; 1ca1c <myhtml_namespace_url_by_id@@Base+0x64>
   1ca00:	add	r3, pc, r3
   1ca04:	add	r0, r3, r0, lsl #2
   1ca08:	ldr	r0, [r0, #400]	; 0x190
   1ca0c:	bx	lr
   1ca10:	mov	r0, r1
   1ca14:	bx	lr
   1ca18:	andeq	r3, pc, ip, asr r9	; <UNPREDICTABLE>
   1ca1c:	andeq	r3, pc, r4, asr #18

0001ca20 <myhtml_namespace_id_by_url@@Base>:
   1ca20:	mov	r0, #0
   1ca24:	bx	lr

0001ca28 <myhtml_string_append_with_preprocessing@@Base>:
   1ca28:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca2c:	mov	r7, r2
   1ca30:	ldr	lr, [r0, #8]
   1ca34:	add	r2, r2, #1
   1ca38:	ldr	ip, [r0, #4]
   1ca3c:	add	r2, r2, lr
   1ca40:	cmp	r2, ip
   1ca44:	mov	r5, r0
   1ca48:	mov	r6, r1
   1ca4c:	mov	fp, r3
   1ca50:	bcs	1cb34 <myhtml_string_append_with_preprocessing@@Base+0x10c>
   1ca54:	cmp	r7, #0
   1ca58:	ldr	r0, [r5]
   1ca5c:	beq	1cb80 <myhtml_string_append_with_preprocessing@@Base+0x158>
   1ca60:	mov	r4, #0
   1ca64:	mvn	sl, #16
   1ca68:	mvn	r9, #64	; 0x40
   1ca6c:	mov	r8, #10
   1ca70:	ldrb	r2, [r6, r4]
   1ca74:	cmp	r2, #13
   1ca78:	beq	1cac0 <myhtml_string_append_with_preprocessing@@Base+0x98>
   1ca7c:	cmp	r2, #0
   1ca80:	moveq	r1, fp
   1ca84:	orrne	r1, fp, #1
   1ca88:	cmp	r1, #0
   1ca8c:	beq	1caf0 <myhtml_string_append_with_preprocessing@@Base+0xc8>
   1ca90:	ldr	r1, [r5, #8]
   1ca94:	strb	r2, [r0, r1]
   1ca98:	ldr	r1, [r5, #8]
   1ca9c:	add	r4, r4, #1
   1caa0:	add	r1, r1, #1
   1caa4:	cmp	r7, r4
   1caa8:	str	r1, [r5, #8]
   1caac:	bhi	1ca70 <myhtml_string_append_with_preprocessing@@Base+0x48>
   1cab0:	ldr	r3, [r5]
   1cab4:	mov	r0, #0
   1cab8:	strb	r0, [r3, r1]
   1cabc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cac0:	ldr	r2, [r5, #8]
   1cac4:	add	r4, r4, #1
   1cac8:	cmp	r7, r4
   1cacc:	strb	r8, [r0, r2]
   1cad0:	bls	1cb40 <myhtml_string_append_with_preprocessing@@Base+0x118>
   1cad4:	ldrb	r2, [r6, r4]
   1cad8:	cmp	r2, #10
   1cadc:	beq	1ca98 <myhtml_string_append_with_preprocessing@@Base+0x70>
   1cae0:	ldr	r2, [r5, #8]
   1cae4:	add	r2, r2, #1
   1cae8:	str	r2, [r5, #8]
   1caec:	b	1ca70 <myhtml_string_append_with_preprocessing@@Base+0x48>
   1caf0:	ldr	r1, [r5, #4]
   1caf4:	mov	r0, r5
   1caf8:	add	r1, r1, #5
   1cafc:	bl	10964 <mycore_string_realloc@plt>
   1cb00:	ldr	r2, [r5, #8]
   1cb04:	ldr	r0, [r5]
   1cb08:	mvn	r3, #66	; 0x42
   1cb0c:	strb	sl, [r0, r2]
   1cb10:	ldr	r2, [r5, #8]
   1cb14:	add	r2, r2, #1
   1cb18:	str	r2, [r5, #8]
   1cb1c:	strb	r9, [r0, r2]
   1cb20:	ldr	r2, [r5, #8]
   1cb24:	add	r2, r2, #1
   1cb28:	str	r2, [r5, #8]
   1cb2c:	strb	r3, [r0, r2]
   1cb30:	b	1ca98 <myhtml_string_append_with_preprocessing@@Base+0x70>
   1cb34:	mov	r1, r2
   1cb38:	bl	10964 <mycore_string_realloc@plt>
   1cb3c:	b	1ca54 <myhtml_string_append_with_preprocessing@@Base+0x2c>
   1cb40:	ldr	r1, [r5, #8]
   1cb44:	ldr	r2, [r5, #4]
   1cb48:	add	r3, r1, #1
   1cb4c:	cmp	r3, r2
   1cb50:	str	r3, [r5, #8]
   1cb54:	bcs	1cb6c <myhtml_string_append_with_preprocessing@@Base+0x144>
   1cb58:	ldr	r2, [r5]
   1cb5c:	mov	r1, #0
   1cb60:	strb	r1, [r2, r3]
   1cb64:	ldr	r0, [r5, #8]
   1cb68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb6c:	add	r1, r1, #3
   1cb70:	mov	r0, r5
   1cb74:	bl	10964 <mycore_string_realloc@plt>
   1cb78:	ldr	r3, [r5, #8]
   1cb7c:	b	1cb58 <myhtml_string_append_with_preprocessing@@Base+0x130>
   1cb80:	ldr	r1, [r5, #8]
   1cb84:	mov	r3, r0
   1cb88:	b	1cab4 <myhtml_string_append_with_preprocessing@@Base+0x8c>

0001cb8c <myhtml_string_append_lowercase_with_preprocessing@@Base>:
   1cb8c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cb90:	mov	r7, r2
   1cb94:	ldr	lr, [r0, #8]
   1cb98:	add	r2, r2, #1
   1cb9c:	ldr	ip, [r0, #4]
   1cba0:	add	r2, r2, lr
   1cba4:	cmp	r2, ip
   1cba8:	mov	r5, r0
   1cbac:	mov	r6, r1
   1cbb0:	mov	sl, r3
   1cbb4:	bcs	1cca4 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x118>
   1cbb8:	cmp	r7, #0
   1cbbc:	ldr	r0, [r5]
   1cbc0:	beq	1ccf0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x164>
   1cbc4:	ldr	r8, [pc, #304]	; 1ccfc <myhtml_string_append_lowercase_with_preprocessing@@Base+0x170>
   1cbc8:	mov	r4, #0
   1cbcc:	add	r8, pc, r8
   1cbd0:	mvn	fp, #16
   1cbd4:	mov	r9, #10
   1cbd8:	ldrb	r1, [r6, r4]
   1cbdc:	cmp	r1, #13
   1cbe0:	beq	1cc2c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xa0>
   1cbe4:	cmp	r1, #0
   1cbe8:	moveq	ip, sl
   1cbec:	orrne	ip, sl, #1
   1cbf0:	cmp	ip, #0
   1cbf4:	beq	1cc5c <myhtml_string_append_lowercase_with_preprocessing@@Base+0xd0>
   1cbf8:	ldrb	ip, [r8, r1]
   1cbfc:	ldr	r1, [r5, #8]
   1cc00:	strb	ip, [r0, r1]
   1cc04:	ldr	r1, [r5, #8]
   1cc08:	add	r4, r4, #1
   1cc0c:	add	r1, r1, #1
   1cc10:	cmp	r7, r4
   1cc14:	str	r1, [r5, #8]
   1cc18:	bhi	1cbd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x4c>
   1cc1c:	ldr	r3, [r5]
   1cc20:	mov	r0, #0
   1cc24:	strb	r0, [r3, r1]
   1cc28:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc2c:	ldr	r1, [r5, #8]
   1cc30:	add	r4, r4, #1
   1cc34:	cmp	r7, r4
   1cc38:	strb	r9, [r0, r1]
   1cc3c:	bls	1ccb0 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x124>
   1cc40:	ldrb	r1, [r6, r4]
   1cc44:	cmp	r1, #10
   1cc48:	beq	1cc04 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x78>
   1cc4c:	ldr	r1, [r5, #8]
   1cc50:	add	r1, r1, #1
   1cc54:	str	r1, [r5, #8]
   1cc58:	b	1cbd8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x4c>
   1cc5c:	ldr	r1, [r5, #4]
   1cc60:	mov	r0, r5
   1cc64:	add	r1, r1, #5
   1cc68:	bl	10964 <mycore_string_realloc@plt>
   1cc6c:	ldr	r1, [r5, #8]
   1cc70:	ldr	r0, [r5]
   1cc74:	mvn	r3, #64	; 0x40
   1cc78:	strb	fp, [r0, r1]
   1cc7c:	ldr	r1, [r5, #8]
   1cc80:	add	r1, r1, #1
   1cc84:	str	r1, [r5, #8]
   1cc88:	strb	r3, [r0, r1]
   1cc8c:	ldr	r1, [r5, #8]
   1cc90:	mvn	r3, #66	; 0x42
   1cc94:	add	r1, r1, #1
   1cc98:	str	r1, [r5, #8]
   1cc9c:	strb	r3, [r0, r1]
   1cca0:	b	1cc04 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x78>
   1cca4:	mov	r1, r2
   1cca8:	bl	10964 <mycore_string_realloc@plt>
   1ccac:	b	1cbb8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x2c>
   1ccb0:	ldr	r1, [r5, #8]
   1ccb4:	ldr	r2, [r5, #4]
   1ccb8:	add	r3, r1, #1
   1ccbc:	cmp	r3, r2
   1ccc0:	str	r3, [r5, #8]
   1ccc4:	bcs	1ccdc <myhtml_string_append_lowercase_with_preprocessing@@Base+0x150>
   1ccc8:	ldr	r2, [r5]
   1cccc:	mov	r1, #0
   1ccd0:	strb	r1, [r2, r3]
   1ccd4:	ldr	r0, [r5, #8]
   1ccd8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ccdc:	add	r1, r1, #3
   1cce0:	mov	r0, r5
   1cce4:	bl	10964 <mycore_string_realloc@plt>
   1cce8:	ldr	r3, [r5, #8]
   1ccec:	b	1ccc8 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x13c>
   1ccf0:	ldr	r1, [r5, #8]
   1ccf4:	mov	r3, r0
   1ccf8:	b	1cc20 <myhtml_string_append_lowercase_with_preprocessing@@Base+0x94>
   1ccfc:	andeq	sp, sp, ip, ror sp

0001cd00 <myhtml_string_before_append_any_preprocessing@@Base>:
   1cd00:	cmp	r2, #0
   1cd04:	cmpne	r3, #0
   1cd08:	ldrbne	r0, [r1]
   1cd0c:	subne	r0, r0, #10
   1cd10:	clzne	r0, r0
   1cd14:	lsrne	r0, r0, #5
   1cd18:	moveq	r0, #0
   1cd1c:	bx	lr

0001cd20 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1cd20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd24:	mov	r6, r3
   1cd28:	ldr	lr, [r0, #8]
   1cd2c:	add	r3, r3, #1
   1cd30:	ldr	ip, [r0, #4]
   1cd34:	sub	sp, sp, #12
   1cd38:	add	r3, r3, lr
   1cd3c:	cmp	r3, ip
   1cd40:	mov	r4, r0
   1cd44:	mov	r5, r1
   1cd48:	mov	r7, r2
   1cd4c:	ldrb	r9, [sp, #52]	; 0x34
   1cd50:	bcs	1cec8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   1cd54:	ldr	r0, [sp, #48]	; 0x30
   1cd58:	bl	1082c <myencoding_get_function_by_id@plt>
   1cd5c:	cmp	r6, #0
   1cd60:	movne	fp, #0
   1cd64:	movne	sl, #10
   1cd68:	mov	r8, r0
   1cd6c:	bne	1cda8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x88>
   1cd70:	b	1ce78 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cd74:	ldr	r3, [r4]
   1cd78:	ldr	r0, [r5, #12]
   1cd7c:	add	r1, r3, r1
   1cd80:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   1cd84:	cmp	r0, #1
   1cd88:	mov	r3, r0
   1cd8c:	beq	1cde8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1cd90:	ldr	r2, [r4, #8]
   1cd94:	add	fp, fp, #1
   1cd98:	add	r3, r3, r2
   1cd9c:	str	r3, [r4, #8]
   1cda0:	cmp	r6, fp
   1cda4:	bls	1ce78 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cda8:	ldrb	r0, [r7, fp]
   1cdac:	mov	r1, r5
   1cdb0:	blx	r8
   1cdb4:	cmp	r0, #0
   1cdb8:	addne	fp, fp, #1
   1cdbc:	bne	1cda0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1cdc0:	ldr	r1, [r4, #8]
   1cdc4:	ldr	r3, [r4, #4]
   1cdc8:	add	r2, r1, #5
   1cdcc:	cmp	r2, r3
   1cdd0:	bcc	1cd74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1cdd4:	add	r1, r1, #6
   1cdd8:	mov	r0, r4
   1cddc:	bl	10964 <mycore_string_realloc@plt>
   1cde0:	ldr	r1, [r4, #8]
   1cde4:	b	1cd74 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1cde8:	ldr	r2, [r4, #8]
   1cdec:	ldr	r0, [r4]
   1cdf0:	ldrb	r1, [r0, r2]
   1cdf4:	cmp	r1, #13
   1cdf8:	beq	1cea0 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x180>
   1cdfc:	cmp	r1, #0
   1ce00:	moveq	r1, r9
   1ce04:	orrne	r1, r9, #1
   1ce08:	cmp	r1, #0
   1ce0c:	addne	fp, fp, #1
   1ce10:	bne	1cd98 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1ce14:	ldr	r1, [r4, #4]
   1ce18:	mov	r0, r4
   1ce1c:	add	r1, r1, #5
   1ce20:	str	r3, [sp, #4]
   1ce24:	bl	10964 <mycore_string_realloc@plt>
   1ce28:	ldr	r2, [r4, #8]
   1ce2c:	ldr	r1, [r4]
   1ce30:	mvn	r3, #16
   1ce34:	add	fp, fp, #1
   1ce38:	strb	r3, [r1, r2]
   1ce3c:	ldr	r2, [r4, #8]
   1ce40:	ldr	r1, [r4]
   1ce44:	add	r2, r2, #1
   1ce48:	mvn	r3, #64	; 0x40
   1ce4c:	str	r2, [r4, #8]
   1ce50:	strb	r3, [r1, r2]
   1ce54:	ldr	r2, [r4, #8]
   1ce58:	ldr	r1, [r4]
   1ce5c:	add	r2, r2, #1
   1ce60:	mvn	r3, #66	; 0x42
   1ce64:	str	r2, [r4, #8]
   1ce68:	strb	r3, [r1, r2]
   1ce6c:	ldr	r3, [sp, #4]
   1ce70:	ldr	r2, [r4, #8]
   1ce74:	b	1cd98 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1ce78:	ldr	r1, [r4, #8]
   1ce7c:	ldr	r3, [r4, #4]
   1ce80:	cmp	r1, r3
   1ce84:	bcs	1ced4 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1ce88:	mov	r3, #0
   1ce8c:	ldr	r2, [r4]
   1ce90:	mov	r0, r3
   1ce94:	strb	r3, [r2, r1]
   1ce98:	add	sp, sp, #12
   1ce9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cea0:	add	r1, fp, #1
   1cea4:	cmp	r6, r1
   1cea8:	strb	sl, [r0, r2]
   1ceac:	bls	1cee8 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1ceb0:	ldrb	r2, [r7, r1]
   1ceb4:	cmp	r2, #10
   1ceb8:	movne	fp, r1
   1cebc:	addeq	fp, fp, #2
   1cec0:	ldr	r2, [r4, #8]
   1cec4:	b	1cd98 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1cec8:	mov	r1, r3
   1cecc:	bl	10964 <mycore_string_realloc@plt>
   1ced0:	b	1cd54 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x34>
   1ced4:	add	r1, r1, #1
   1ced8:	mov	r0, r4
   1cedc:	bl	10964 <mycore_string_realloc@plt>
   1cee0:	ldr	r1, [r4, #8]
   1cee4:	b	1ce88 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1cee8:	ldr	r1, [r4, #8]
   1ceec:	ldr	r2, [r4, #4]
   1cef0:	add	r3, r1, #1
   1cef4:	cmp	r3, r2
   1cef8:	str	r3, [r4, #8]
   1cefc:	bcc	1cf10 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1cf00:	add	r1, r1, #3
   1cf04:	mov	r0, r4
   1cf08:	bl	10964 <mycore_string_realloc@plt>
   1cf0c:	ldr	r3, [r4, #8]
   1cf10:	ldr	r2, [r4]
   1cf14:	mov	r1, #0
   1cf18:	strb	r1, [r2, r3]
   1cf1c:	ldr	r0, [r4, #8]
   1cf20:	b	1ce98 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@@Base+0x178>

0001cf24 <myhtml_string_append_with_convert_encoding_with_preprocessing@@Base>:
   1cf24:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cf28:	sub	sp, sp, #36	; 0x24
   1cf2c:	add	r4, sp, #8
   1cf30:	ldrb	r8, [sp, #64]	; 0x40
   1cf34:	mov	r6, r1
   1cf38:	mov	r7, r2
   1cf3c:	mov	r9, r3
   1cf40:	mov	r5, r0
   1cf44:	mov	r0, r4
   1cf48:	bl	101c0 <myencoding_result_clean@plt>
   1cf4c:	str	r9, [sp]
   1cf50:	str	r8, [sp, #4]
   1cf54:	mov	r3, r7
   1cf58:	mov	r2, r6
   1cf5c:	mov	r1, r4
   1cf60:	mov	r0, r5
   1cf64:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1cf68:	add	sp, sp, #36	; 0x24
   1cf6c:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001cf70 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base>:
   1cf70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf74:	mov	r6, r3
   1cf78:	ldr	lr, [r0, #8]
   1cf7c:	add	r3, r3, #1
   1cf80:	ldr	ip, [r0, #4]
   1cf84:	sub	sp, sp, #12
   1cf88:	add	r3, r3, lr
   1cf8c:	cmp	r3, ip
   1cf90:	mov	r4, r0
   1cf94:	mov	r5, r1
   1cf98:	mov	r7, r2
   1cf9c:	ldrb	r9, [sp, #52]	; 0x34
   1cfa0:	bcs	1d118 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1a8>
   1cfa4:	ldr	r0, [sp, #48]	; 0x30
   1cfa8:	bl	1082c <myencoding_get_function_by_id@plt>
   1cfac:	cmp	r6, #0
   1cfb0:	movne	fp, #0
   1cfb4:	movne	sl, #10
   1cfb8:	mov	r8, r0
   1cfbc:	bne	1cff8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x88>
   1cfc0:	b	1d0c8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cfc4:	ldr	r3, [r4]
   1cfc8:	ldr	r0, [r5, #12]
   1cfcc:	add	r1, r3, r1
   1cfd0:	bl	fcc8 <myencoding_codepoint_to_lowercase_ascii_utf_8@plt>
   1cfd4:	cmp	r0, #1
   1cfd8:	mov	r3, r0
   1cfdc:	beq	1d038 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0xc8>
   1cfe0:	ldr	r2, [r4, #8]
   1cfe4:	add	fp, fp, #1
   1cfe8:	add	r3, r3, r2
   1cfec:	str	r3, [r4, #8]
   1cff0:	cmp	r6, fp
   1cff4:	bls	1d0c8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x158>
   1cff8:	ldrb	r0, [r7, fp]
   1cffc:	mov	r1, r5
   1d000:	blx	r8
   1d004:	cmp	r0, #0
   1d008:	addne	fp, fp, #1
   1d00c:	bne	1cff0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x80>
   1d010:	ldr	r1, [r4, #8]
   1d014:	ldr	r3, [r4, #4]
   1d018:	add	r2, r1, #5
   1d01c:	cmp	r2, r3
   1d020:	bcc	1cfc4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1d024:	add	r1, r1, #6
   1d028:	mov	r0, r4
   1d02c:	bl	10964 <mycore_string_realloc@plt>
   1d030:	ldr	r1, [r4, #8]
   1d034:	b	1cfc4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x54>
   1d038:	ldr	r2, [r4, #8]
   1d03c:	ldr	r0, [r4]
   1d040:	ldrb	r1, [r0, r2]
   1d044:	cmp	r1, #13
   1d048:	beq	1d0f0 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x180>
   1d04c:	cmp	r1, #0
   1d050:	moveq	r1, r9
   1d054:	orrne	r1, r9, #1
   1d058:	cmp	r1, #0
   1d05c:	addne	fp, fp, #1
   1d060:	bne	1cfe8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d064:	ldr	r1, [r4, #4]
   1d068:	mov	r0, r4
   1d06c:	add	r1, r1, #5
   1d070:	str	r3, [sp, #4]
   1d074:	bl	10964 <mycore_string_realloc@plt>
   1d078:	ldr	r2, [r4, #8]
   1d07c:	ldr	r1, [r4]
   1d080:	mvn	r3, #16
   1d084:	add	fp, fp, #1
   1d088:	strb	r3, [r1, r2]
   1d08c:	ldr	r2, [r4, #8]
   1d090:	ldr	r1, [r4]
   1d094:	add	r2, r2, #1
   1d098:	mvn	r3, #64	; 0x40
   1d09c:	str	r2, [r4, #8]
   1d0a0:	strb	r3, [r1, r2]
   1d0a4:	ldr	r2, [r4, #8]
   1d0a8:	ldr	r1, [r4]
   1d0ac:	add	r2, r2, #1
   1d0b0:	mvn	r3, #66	; 0x42
   1d0b4:	str	r2, [r4, #8]
   1d0b8:	strb	r3, [r1, r2]
   1d0bc:	ldr	r3, [sp, #4]
   1d0c0:	ldr	r2, [r4, #8]
   1d0c4:	b	1cfe8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d0c8:	ldr	r1, [r4, #8]
   1d0cc:	ldr	r3, [r4, #4]
   1d0d0:	cmp	r1, r3
   1d0d4:	bcs	1d124 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1b4>
   1d0d8:	mov	r3, #0
   1d0dc:	ldr	r2, [r4]
   1d0e0:	mov	r0, r3
   1d0e4:	strb	r3, [r2, r1]
   1d0e8:	add	sp, sp, #12
   1d0ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0f0:	add	r1, fp, #1
   1d0f4:	cmp	r6, r1
   1d0f8:	strb	sl, [r0, r2]
   1d0fc:	bls	1d138 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1c8>
   1d100:	ldrb	r2, [r7, r1]
   1d104:	cmp	r2, #10
   1d108:	movne	fp, r1
   1d10c:	addeq	fp, fp, #2
   1d110:	ldr	r2, [r4, #8]
   1d114:	b	1cfe8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x78>
   1d118:	mov	r1, r3
   1d11c:	bl	10964 <mycore_string_realloc@plt>
   1d120:	b	1cfa4 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x34>
   1d124:	add	r1, r1, #1
   1d128:	mov	r0, r4
   1d12c:	bl	10964 <mycore_string_realloc@plt>
   1d130:	ldr	r1, [r4, #8]
   1d134:	b	1d0d8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x168>
   1d138:	ldr	r1, [r4, #8]
   1d13c:	ldr	r2, [r4, #4]
   1d140:	add	r3, r1, #1
   1d144:	cmp	r3, r2
   1d148:	str	r3, [r4, #8]
   1d14c:	bcc	1d160 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x1f0>
   1d150:	add	r1, r1, #3
   1d154:	mov	r0, r4
   1d158:	bl	10964 <mycore_string_realloc@plt>
   1d15c:	ldr	r3, [r4, #8]
   1d160:	ldr	r2, [r4]
   1d164:	mov	r1, #0
   1d168:	strb	r1, [r2, r3]
   1d16c:	ldr	r0, [r4, #8]
   1d170:	b	1d0e8 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@@Base+0x178>

0001d174 <myhtml_string_append_lowercase_with_convert_encoding_with_preprocessing@@Base>:
   1d174:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d178:	sub	sp, sp, #36	; 0x24
   1d17c:	add	r4, sp, #8
   1d180:	ldrb	r8, [sp, #64]	; 0x40
   1d184:	mov	r6, r1
   1d188:	mov	r7, r2
   1d18c:	mov	r9, r3
   1d190:	mov	r5, r0
   1d194:	mov	r0, r4
   1d198:	bl	101c0 <myencoding_result_clean@plt>
   1d19c:	str	r9, [sp]
   1d1a0:	str	r8, [sp, #4]
   1d1a4:	mov	r3, r7
   1d1a8:	mov	r2, r6
   1d1ac:	mov	r1, r4
   1d1b0:	mov	r0, r5
   1d1b4:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d1b8:	add	sp, sp, #36	; 0x24
   1d1bc:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001d1c0 <myhtml_parser_stream@@Base>:
   1d1c0:	ldr	r0, [r1]
   1d1c4:	ldr	r3, [r0, #184]	; 0xb8
   1d1c8:	tst	r3, #1
   1d1cc:	bxne	lr
   1d1d0:	push	{r4, lr}
   1d1d4:	mov	r4, r1
   1d1d8:	ldr	r1, [r4, #4]
   1d1dc:	bl	fe9c <myhtml_rules_tree_dispatcher@plt>
   1d1e0:	cmp	r0, #0
   1d1e4:	popeq	{r4, pc}
   1d1e8:	ldr	r0, [r4]
   1d1ec:	b	1d1d8 <myhtml_parser_stream@@Base+0x18>

0001d1f0 <myhtml_parser_token_data_to_string_lowercase@@Base>:
   1d1f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1f4:	sub	sp, sp, #20
   1d1f8:	mov	fp, r0
   1d1fc:	mov	r8, r1
   1d200:	ldr	r0, [r0, #80]	; 0x50
   1d204:	mov	r1, r3
   1d208:	mov	r6, r3
   1d20c:	ldr	r7, [sp, #56]	; 0x38
   1d210:	mov	sl, r2
   1d214:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d218:	ldr	r3, [r0, #12]
   1d21c:	ldr	r4, [r0, #8]
   1d220:	sub	r6, r6, r3
   1d224:	add	r3, r6, r7
   1d228:	cmp	r3, r4
   1d22c:	mov	r5, r0
   1d230:	bhi	1d264 <myhtml_parser_token_data_to_string_lowercase@@Base+0x74>
   1d234:	ldr	r3, [fp, #200]	; 0xc8
   1d238:	cmp	r3, #0
   1d23c:	bne	1d310 <myhtml_parser_token_data_to_string_lowercase@@Base+0x120>
   1d240:	ldr	r1, [r0]
   1d244:	ldrb	r3, [sl, #61]	; 0x3d
   1d248:	add	r1, r1, r6
   1d24c:	mov	r2, r7
   1d250:	mov	r0, r8
   1d254:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d258:	ldr	r0, [r8, #8]
   1d25c:	add	sp, sp, #20
   1d260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d264:	add	r3, sl, #8
   1d268:	mov	r9, #0
   1d26c:	str	r3, [sp, #12]
   1d270:	b	1d2a4 <myhtml_parser_token_data_to_string_lowercase@@Base+0xb4>
   1d274:	ldr	r1, [r5]
   1d278:	ldrb	r3, [sl, #61]	; 0x3d
   1d27c:	add	r1, r1, ip
   1d280:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d284:	mov	r9, r0
   1d288:	ldr	r5, [r5, #20]
   1d28c:	mov	r6, #0
   1d290:	cmp	r5, r6
   1d294:	beq	1d258 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d298:	ldr	r4, [r5, #8]
   1d29c:	cmp	r4, r7
   1d2a0:	bcs	1d344 <myhtml_parser_token_data_to_string_lowercase@@Base+0x154>
   1d2a4:	ldr	r1, [r5]
   1d2a8:	sub	r4, r4, r6
   1d2ac:	mov	r2, r4
   1d2b0:	add	r1, r1, r6
   1d2b4:	mov	r3, r9
   1d2b8:	mov	r0, r8
   1d2bc:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d2c0:	cmp	r4, #0
   1d2c4:	sub	r7, r7, r4
   1d2c8:	beq	1d288 <myhtml_parser_token_data_to_string_lowercase@@Base+0x98>
   1d2cc:	ldr	lr, [fp, #200]	; 0xc8
   1d2d0:	sub	r3, r4, r0
   1d2d4:	cmp	lr, #0
   1d2d8:	add	ip, r0, r6
   1d2dc:	ldr	r1, [sp, #12]
   1d2e0:	mov	r0, r8
   1d2e4:	mov	r2, r3
   1d2e8:	beq	1d274 <myhtml_parser_token_data_to_string_lowercase@@Base+0x84>
   1d2ec:	ldrb	r4, [sl, #61]	; 0x3d
   1d2f0:	ldr	r2, [r5]
   1d2f4:	ldr	lr, [sl, #4]
   1d2f8:	add	r2, r2, ip
   1d2fc:	str	r4, [sp, #4]
   1d300:	str	lr, [sp]
   1d304:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d308:	mov	r9, r0
   1d30c:	b	1d288 <myhtml_parser_token_data_to_string_lowercase@@Base+0x98>
   1d310:	ldrb	r0, [sl, #61]	; 0x3d
   1d314:	ldr	r2, [r5]
   1d318:	ldr	r1, [sl, #4]
   1d31c:	add	r2, r2, r6
   1d320:	str	r0, [sp, #4]
   1d324:	str	r1, [sp]
   1d328:	mov	r3, r7
   1d32c:	add	r1, sl, #8
   1d330:	mov	r0, r8
   1d334:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d338:	ldr	r0, [r8, #8]
   1d33c:	add	sp, sp, #20
   1d340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d344:	mov	r3, r9
   1d348:	mov	r2, r7
   1d34c:	ldr	r1, [r5]
   1d350:	mov	r0, r8
   1d354:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d358:	cmp	r7, #0
   1d35c:	beq	1d258 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d360:	ldr	r3, [fp, #200]	; 0xc8
   1d364:	cmp	r3, #0
   1d368:	bne	1d388 <myhtml_parser_token_data_to_string_lowercase@@Base+0x198>
   1d36c:	ldr	r1, [r5]
   1d370:	sub	r2, r7, r0
   1d374:	add	r1, r1, r0
   1d378:	ldrb	r3, [sl, #61]	; 0x3d
   1d37c:	mov	r0, r8
   1d380:	bl	11030 <myhtml_string_append_lowercase_with_preprocessing@plt>
   1d384:	b	1d258 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>
   1d388:	ldrb	ip, [sl, #61]	; 0x3d
   1d38c:	ldr	r1, [sl, #4]
   1d390:	ldr	r2, [r5]
   1d394:	sub	r3, r7, r0
   1d398:	add	r2, r2, r0
   1d39c:	stm	sp, {r1, ip}
   1d3a0:	mov	r0, r8
   1d3a4:	add	r1, sl, #8
   1d3a8:	bl	10d90 <myhtml_string_append_lowercase_chunk_with_convert_encoding_with_preprocessing@plt>
   1d3ac:	b	1d258 <myhtml_parser_token_data_to_string_lowercase@@Base+0x68>

0001d3b0 <myhtml_parser_token_data_to_string@@Base>:
   1d3b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3b4:	sub	sp, sp, #20
   1d3b8:	mov	fp, r0
   1d3bc:	mov	r8, r1
   1d3c0:	ldr	r0, [r0, #80]	; 0x50
   1d3c4:	mov	r1, r3
   1d3c8:	mov	r6, r3
   1d3cc:	ldr	r7, [sp, #56]	; 0x38
   1d3d0:	mov	sl, r2
   1d3d4:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d3d8:	ldr	r3, [r0, #12]
   1d3dc:	ldr	r4, [r0, #8]
   1d3e0:	sub	r6, r6, r3
   1d3e4:	add	r3, r6, r7
   1d3e8:	cmp	r3, r4
   1d3ec:	mov	r5, r0
   1d3f0:	bhi	1d424 <myhtml_parser_token_data_to_string@@Base+0x74>
   1d3f4:	ldr	r3, [fp, #200]	; 0xc8
   1d3f8:	cmp	r3, #0
   1d3fc:	bne	1d4d0 <myhtml_parser_token_data_to_string@@Base+0x120>
   1d400:	ldr	r1, [r0]
   1d404:	ldrb	r3, [sl, #61]	; 0x3d
   1d408:	add	r1, r1, r6
   1d40c:	mov	r2, r7
   1d410:	mov	r0, r8
   1d414:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d418:	ldr	r0, [r8, #8]
   1d41c:	add	sp, sp, #20
   1d420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d424:	add	r3, sl, #8
   1d428:	mov	r9, #0
   1d42c:	str	r3, [sp, #12]
   1d430:	b	1d464 <myhtml_parser_token_data_to_string@@Base+0xb4>
   1d434:	ldr	r1, [r5]
   1d438:	ldrb	r3, [sl, #61]	; 0x3d
   1d43c:	add	r1, r1, ip
   1d440:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d444:	mov	r9, r0
   1d448:	ldr	r5, [r5, #20]
   1d44c:	mov	r6, #0
   1d450:	cmp	r5, r6
   1d454:	beq	1d418 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d458:	ldr	r4, [r5, #8]
   1d45c:	cmp	r4, r7
   1d460:	bcs	1d504 <myhtml_parser_token_data_to_string@@Base+0x154>
   1d464:	ldr	r1, [r5]
   1d468:	sub	r4, r4, r6
   1d46c:	mov	r2, r4
   1d470:	add	r1, r1, r6
   1d474:	mov	r3, r9
   1d478:	mov	r0, r8
   1d47c:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d480:	cmp	r4, #0
   1d484:	sub	r7, r7, r4
   1d488:	beq	1d448 <myhtml_parser_token_data_to_string@@Base+0x98>
   1d48c:	ldr	lr, [fp, #200]	; 0xc8
   1d490:	sub	r3, r4, r0
   1d494:	cmp	lr, #0
   1d498:	add	ip, r0, r6
   1d49c:	ldr	r1, [sp, #12]
   1d4a0:	mov	r0, r8
   1d4a4:	mov	r2, r3
   1d4a8:	beq	1d434 <myhtml_parser_token_data_to_string@@Base+0x84>
   1d4ac:	ldrb	r4, [sl, #61]	; 0x3d
   1d4b0:	ldr	r2, [r5]
   1d4b4:	ldr	lr, [sl, #4]
   1d4b8:	add	r2, r2, ip
   1d4bc:	str	r4, [sp, #4]
   1d4c0:	str	lr, [sp]
   1d4c4:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d4c8:	mov	r9, r0
   1d4cc:	b	1d448 <myhtml_parser_token_data_to_string@@Base+0x98>
   1d4d0:	ldrb	r0, [sl, #61]	; 0x3d
   1d4d4:	ldr	r2, [r5]
   1d4d8:	ldr	r1, [sl, #4]
   1d4dc:	add	r2, r2, r6
   1d4e0:	str	r0, [sp, #4]
   1d4e4:	str	r1, [sp]
   1d4e8:	mov	r3, r7
   1d4ec:	add	r1, sl, #8
   1d4f0:	mov	r0, r8
   1d4f4:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d4f8:	ldr	r0, [r8, #8]
   1d4fc:	add	sp, sp, #20
   1d500:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d504:	mov	r3, r9
   1d508:	mov	r2, r7
   1d50c:	ldr	r1, [r5]
   1d510:	mov	r0, r8
   1d514:	bl	10c1c <myhtml_string_before_append_any_preprocessing@plt>
   1d518:	cmp	r7, #0
   1d51c:	beq	1d418 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d520:	ldr	r3, [fp, #200]	; 0xc8
   1d524:	cmp	r3, #0
   1d528:	bne	1d548 <myhtml_parser_token_data_to_string@@Base+0x198>
   1d52c:	ldr	r1, [r5]
   1d530:	sub	r2, r7, r0
   1d534:	add	r1, r1, r0
   1d538:	ldrb	r3, [sl, #61]	; 0x3d
   1d53c:	mov	r0, r8
   1d540:	bl	101cc <myhtml_string_append_with_preprocessing@plt>
   1d544:	b	1d418 <myhtml_parser_token_data_to_string@@Base+0x68>
   1d548:	ldrb	ip, [sl, #61]	; 0x3d
   1d54c:	ldr	r1, [sl, #4]
   1d550:	ldr	r2, [r5]
   1d554:	sub	r3, r7, r0
   1d558:	add	r2, r2, r0
   1d55c:	stm	sp, {r1, ip}
   1d560:	mov	r0, r8
   1d564:	add	r1, sl, #8
   1d568:	bl	10e14 <myhtml_string_append_chunk_with_convert_encoding_with_preprocessing@plt>
   1d56c:	b	1d418 <myhtml_parser_token_data_to_string@@Base+0x68>

0001d570 <myhtml_parser_token_data_to_string_charef@@Base>:
   1d570:	push	{r4, r5, r6, r7, r8, lr}
   1d574:	mov	r7, r1
   1d578:	ldr	r0, [r0, #80]	; 0x50
   1d57c:	mov	r1, r3
   1d580:	mov	r5, r3
   1d584:	ldr	r6, [sp, #24]
   1d588:	mov	r8, r2
   1d58c:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   1d590:	ldr	r1, [r0, #12]
   1d594:	mov	r4, r0
   1d598:	sub	r1, r5, r1
   1d59c:	ldr	r0, [r0, #8]
   1d5a0:	add	r3, r1, r6
   1d5a4:	cmp	r3, r0
   1d5a8:	movhi	r5, #0
   1d5ac:	bhi	1d5c0 <myhtml_parser_token_data_to_string_charef@@Base+0x50>
   1d5b0:	b	1d61c <myhtml_parser_token_data_to_string_charef@@Base+0xac>
   1d5b4:	ldr	r0, [r4, #8]
   1d5b8:	cmp	r0, r6
   1d5bc:	bcs	1d604 <myhtml_parser_token_data_to_string_charef@@Base+0x94>
   1d5c0:	ldr	r2, [r4]
   1d5c4:	sub	ip, r0, r1
   1d5c8:	add	r2, r2, r1
   1d5cc:	mov	r3, ip
   1d5d0:	mov	r1, r7
   1d5d4:	mov	r0, r8
   1d5d8:	sub	r6, r6, ip
   1d5dc:	bl	10754 <myhtml_data_process@plt>
   1d5e0:	ldr	r4, [r4, #20]
   1d5e4:	mov	r1, r5
   1d5e8:	cmp	r4, #0
   1d5ec:	bne	1d5b4 <myhtml_parser_token_data_to_string_charef@@Base+0x44>
   1d5f0:	mov	r0, r8
   1d5f4:	mov	r1, r7
   1d5f8:	bl	10928 <myhtml_data_process_end@plt>
   1d5fc:	ldr	r0, [r7, #8]
   1d600:	pop	{r4, r5, r6, r7, r8, pc}
   1d604:	mov	r3, r6
   1d608:	ldr	r2, [r4]
   1d60c:	mov	r1, r7
   1d610:	mov	r0, r8
   1d614:	bl	10754 <myhtml_data_process@plt>
   1d618:	b	1d5f0 <myhtml_parser_token_data_to_string_charef@@Base+0x80>
   1d61c:	ldr	r2, [r4]
   1d620:	mov	r3, r6
   1d624:	add	r2, r2, r1
   1d628:	mov	r0, r8
   1d62c:	mov	r1, r7
   1d630:	bl	10754 <myhtml_data_process@plt>
   1d634:	mov	r0, r8
   1d638:	mov	r1, r7
   1d63c:	bl	10928 <myhtml_data_process_end@plt>
   1d640:	ldr	r0, [r7, #8]
   1d644:	pop	{r4, r5, r6, r7, r8, pc}

0001d648 <myhtml_parser_worker@@Base>:
   1d648:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d64c:	sub	sp, sp, #72	; 0x48
   1d650:	ldm	r1, {r5, r8}
   1d654:	ldr	r3, [r5, #184]	; 0xb8
   1d658:	tst	r3, #3
   1d65c:	beq	1d66c <myhtml_parser_worker@@Base+0x24>
   1d660:	ldr	r3, [r5, #184]	; 0xb8
   1d664:	tst	r3, #2
   1d668:	bne	1d7f4 <myhtml_parser_worker@@Base+0x1ac>
   1d66c:	ldr	r3, [r5]
   1d670:	ldr	r3, [r3, #4]
   1d674:	cmp	r3, #0
   1d678:	ldrne	r2, [r3, #12]
   1d67c:	ldreq	r3, [r5, #144]	; 0x90
   1d680:	ldrne	r3, [r5, #144]	; 0x90
   1d684:	addne	r0, r0, r2
   1d688:	ldr	r9, [r3, r0, lsl #2]
   1d68c:	ldr	r3, [r5, #220]	; 0xdc
   1d690:	cmp	r3, #0
   1d694:	beq	1d6ac <myhtml_parser_worker@@Base+0x64>
   1d698:	ldr	r2, [r5, #228]	; 0xe4
   1d69c:	mov	r1, r8
   1d6a0:	mov	r0, r5
   1d6a4:	blx	r3
   1d6a8:	str	r0, [r5, #228]	; 0xe4
   1d6ac:	ldr	r3, [r8]
   1d6b0:	sub	r3, r3, #1
   1d6b4:	cmp	r3, #1
   1d6b8:	bls	1d818 <myhtml_parser_worker@@Base+0x1d0>
   1d6bc:	ldr	r3, [r8, #40]	; 0x28
   1d6c0:	cmp	r3, #0
   1d6c4:	beq	1d898 <myhtml_parser_worker@@Base+0x250>
   1d6c8:	add	r0, r8, #4
   1d6cc:	bl	11090 <mycore_string_clean_all@plt>
   1d6d0:	ldr	r4, [r8, #40]	; 0x28
   1d6d4:	cmp	r4, #0
   1d6d8:	beq	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d6dc:	add	r6, sp, #8
   1d6e0:	mov	sl, #1
   1d6e4:	b	1d794 <myhtml_parser_worker@@Base+0x14c>
   1d6e8:	mov	r0, r6
   1d6ec:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d6f0:	ldr	r3, [r4, #52]	; 0x34
   1d6f4:	ldr	ip, [r5, #200]	; 0xc8
   1d6f8:	add	r3, r3, #1
   1d6fc:	mov	r2, r7
   1d700:	mov	r1, r9
   1d704:	ldr	r0, [r5, #4]
   1d708:	str	ip, [sp, #12]
   1d70c:	bl	10610 <mycore_string_init@plt>
   1d710:	ldr	r2, [r4, #52]	; 0x34
   1d714:	ldr	r3, [r4, #48]	; 0x30
   1d718:	mov	r1, r7
   1d71c:	str	r2, [sp]
   1d720:	mov	r0, r5
   1d724:	mov	r2, r6
   1d728:	bl	1100c <myhtml_parser_token_data_to_string_lowercase@plt>
   1d72c:	ldr	r3, [r4, #60]	; 0x3c
   1d730:	add	r0, r4, #28
   1d734:	cmp	r3, #0
   1d738:	mov	r7, r0
   1d73c:	beq	1d7b0 <myhtml_parser_worker@@Base+0x168>
   1d740:	mov	r0, r6
   1d744:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d748:	ldr	r3, [r4, #60]	; 0x3c
   1d74c:	ldr	ip, [r5, #200]	; 0xc8
   1d750:	ldr	r0, [r5, #4]
   1d754:	add	r3, r3, #1
   1d758:	mov	r2, r7
   1d75c:	mov	r1, r9
   1d760:	str	ip, [sp, #12]
   1d764:	strb	sl, [sp, #68]	; 0x44
   1d768:	bl	10610 <mycore_string_init@plt>
   1d76c:	ldr	r2, [r4, #60]	; 0x3c
   1d770:	ldr	r3, [r4, #56]	; 0x38
   1d774:	mov	r1, r7
   1d778:	str	r2, [sp]
   1d77c:	mov	r0, r5
   1d780:	mov	r2, r6
   1d784:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d788:	ldr	r4, [r4]
   1d78c:	cmp	r4, #0
   1d790:	beq	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d794:	ldr	r3, [r4, #52]	; 0x34
   1d798:	add	r0, r4, #8
   1d79c:	cmp	r3, #0
   1d7a0:	mov	r7, r0
   1d7a4:	bne	1d6e8 <myhtml_parser_worker@@Base+0xa0>
   1d7a8:	bl	11090 <mycore_string_clean_all@plt>
   1d7ac:	b	1d72c <myhtml_parser_worker@@Base+0xe4>
   1d7b0:	bl	11090 <mycore_string_clean_all@plt>
   1d7b4:	ldr	r4, [r4]
   1d7b8:	cmp	r4, #0
   1d7bc:	bne	1d794 <myhtml_parser_worker@@Base+0x14c>
   1d7c0:	ldr	r3, [r8, #48]	; 0x30
   1d7c4:	ldr	r4, [r5, #224]	; 0xe0
   1d7c8:	orr	r3, r3, #4
   1d7cc:	cmp	r4, #0
   1d7d0:	str	r3, [r8, #48]	; 0x30
   1d7d4:	beq	1d7ec <myhtml_parser_worker@@Base+0x1a4>
   1d7d8:	mov	r1, r8
   1d7dc:	ldr	r2, [r5, #232]	; 0xe8
   1d7e0:	mov	r0, r5
   1d7e4:	blx	r4
   1d7e8:	str	r0, [r5, #232]	; 0xe8
   1d7ec:	add	sp, sp, #72	; 0x48
   1d7f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d7f4:	ldr	r3, [r5, #220]	; 0xdc
   1d7f8:	cmp	r3, #0
   1d7fc:	beq	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d800:	ldr	r2, [r5, #228]	; 0xe4
   1d804:	mov	r1, r8
   1d808:	mov	r0, r5
   1d80c:	blx	r3
   1d810:	str	r0, [r5, #228]	; 0xe4
   1d814:	b	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d818:	ldr	r3, [r8, #28]
   1d81c:	add	r4, r8, #4
   1d820:	mov	r2, r4
   1d824:	mov	r1, r9
   1d828:	add	r3, r3, #1
   1d82c:	ldr	r0, [r5, #4]
   1d830:	bl	10610 <mycore_string_init@plt>
   1d834:	add	r6, sp, #8
   1d838:	mov	r3, #0
   1d83c:	str	r3, [r8, #40]	; 0x28
   1d840:	str	r3, [r8, #44]	; 0x2c
   1d844:	mov	r0, r6
   1d848:	bl	104f0 <myhtml_data_process_entry_clean@plt>
   1d84c:	ldr	r2, [r8, #48]	; 0x30
   1d850:	ldr	r3, [r5, #200]	; 0xc8
   1d854:	tst	r2, #512	; 0x200
   1d858:	str	r3, [sp, #12]
   1d85c:	bne	1d8c8 <myhtml_parser_worker@@Base+0x280>
   1d860:	ldr	r3, [r8, #48]	; 0x30
   1d864:	tst	r3, #16
   1d868:	bne	1d878 <myhtml_parser_worker@@Base+0x230>
   1d86c:	ldr	r3, [r8, #48]	; 0x30
   1d870:	tst	r3, #256	; 0x100
   1d874:	beq	1d8a8 <myhtml_parser_worker@@Base+0x260>
   1d878:	ldr	r0, [r8, #28]
   1d87c:	ldr	r3, [r8, #24]
   1d880:	mov	r2, r6
   1d884:	str	r0, [sp]
   1d888:	mov	r1, r4
   1d88c:	mov	r0, r5
   1d890:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d894:	b	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d898:	str	r3, [r8, #44]	; 0x2c
   1d89c:	add	r0, r8, #4
   1d8a0:	bl	11090 <mycore_string_clean_all@plt>
   1d8a4:	b	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d8a8:	ldr	r0, [r8, #28]
   1d8ac:	ldr	r3, [r8, #24]
   1d8b0:	mov	r2, r6
   1d8b4:	str	r0, [sp]
   1d8b8:	mov	r1, r4
   1d8bc:	mov	r0, r5
   1d8c0:	bl	10acc <myhtml_parser_token_data_to_string@plt>
   1d8c4:	b	1d7c0 <myhtml_parser_worker@@Base+0x178>
   1d8c8:	ldr	r0, [r8, #28]
   1d8cc:	ldr	r3, [r8, #24]
   1d8d0:	mov	ip, #1
   1d8d4:	str	r0, [sp]
   1d8d8:	mov	r2, r6
   1d8dc:	mov	r1, r4
   1d8e0:	mov	r0, r5
   1d8e4:	strb	ip, [sp, #69]	; 0x45
   1d8e8:	bl	10400 <myhtml_parser_token_data_to_string_charef@plt>
   1d8ec:	b	1d7c0 <myhtml_parser_worker@@Base+0x178>

0001d8f0 <myhtml_parser_worker_stream@@Base>:
   1d8f0:	push	{r4, r5, r6, lr}
   1d8f4:	mov	r4, r0
   1d8f8:	mov	r5, r1
   1d8fc:	bl	fd7c <myhtml_parser_worker@plt>
   1d900:	mov	r1, r5
   1d904:	mov	r0, r4
   1d908:	pop	{r4, r5, r6, lr}
   1d90c:	b	10ff4 <myhtml_parser_stream@plt>

0001d910 <myhtml_insertion_mode_text@@Base>:
   1d910:	ldr	r3, [r1, #48]	; 0x30
   1d914:	push	{r4, r5, r6, lr}
   1d918:	ands	r4, r3, #1
   1d91c:	mov	r5, r0
   1d920:	ldr	r3, [r1]
   1d924:	beq	1d93c <myhtml_insertion_mode_text@@Base+0x2c>
   1d928:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d92c:	ldr	r3, [r5, #172]	; 0xac
   1d930:	mov	r0, #0
   1d934:	str	r3, [r5, #168]	; 0xa8
   1d938:	pop	{r4, r5, r6, pc}
   1d93c:	cmp	r3, #251	; 0xfb
   1d940:	beq	1d950 <myhtml_insertion_mode_text@@Base+0x40>
   1d944:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1d948:	mov	r0, r4
   1d94c:	pop	{r4, r5, r6, pc}
   1d950:	bl	10628 <myhtml_tree_current_node@plt>
   1d954:	ldr	r3, [r0, #4]
   1d958:	cmp	r3, #112	; 0x70
   1d95c:	ldreq	r3, [r0]
   1d960:	orreq	r3, r3, #8
   1d964:	streq	r3, [r0]
   1d968:	mov	r0, r5
   1d96c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1d970:	ldr	r3, [r5, #172]	; 0xac
   1d974:	mov	r0, #1
   1d978:	str	r3, [r5, #168]	; 0xa8
   1d97c:	pop	{r4, r5, r6, pc}

0001d980 <myhtml_insertion_fix_emit_for_text_begin_ws@@Base>:
   1d980:	push	{r4, lr}
   1d984:	mov	r4, r1
   1d988:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d98c:	add	r0, r4, #4
   1d990:	pop	{r4, lr}
   1d994:	b	104b4 <mycore_string_crop_whitespace_from_begin@plt>

0001d998 <myhtml_insertion_mode_initial@@Base>:
   1d998:	push	{r4, r5, r6, lr}
   1d99c:	mov	r5, r0
   1d9a0:	ldr	r4, [r1]
   1d9a4:	cmp	r4, #2
   1d9a8:	beq	1da3c <myhtml_insertion_mode_initial@@Base+0xa4>
   1d9ac:	cmp	r4, #3
   1d9b0:	mov	r6, r1
   1d9b4:	beq	1d9e4 <myhtml_insertion_mode_initial@@Base+0x4c>
   1d9b8:	cmp	r4, #1
   1d9bc:	beq	1d9d0 <myhtml_insertion_mode_initial@@Base+0x38>
   1d9c0:	mov	r0, #1
   1d9c4:	str	r0, [r5, #176]	; 0xb0
   1d9c8:	str	r0, [r5, #168]	; 0xa8
   1d9cc:	pop	{r4, r5, r6, pc}
   1d9d0:	ldr	r3, [r1, #48]	; 0x30
   1d9d4:	tst	r3, #8
   1d9d8:	beq	1da5c <myhtml_insertion_mode_initial@@Base+0xc4>
   1d9dc:	mov	r0, #0
   1d9e0:	pop	{r4, r5, r6, pc}
   1d9e4:	ldr	r0, [r0, #8]
   1d9e8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1d9ec:	add	r2, r5, #108	; 0x6c
   1d9f0:	mov	r1, r6
   1d9f4:	ldr	r0, [r5, #8]
   1d9f8:	bl	fc20 <myhtml_token_release_and_check_doctype_attributes@plt>
   1d9fc:	ldr	r3, [r5, #184]	; 0xb8
   1da00:	tst	r3, #8
   1da04:	beq	1da4c <myhtml_insertion_mode_initial@@Base+0xb4>
   1da08:	ldrb	r3, [r5, #108]	; 0x6c
   1da0c:	cmp	r3, #0
   1da10:	bne	1da2c <myhtml_insertion_mode_initial@@Base+0x94>
   1da14:	ldr	r3, [r5, #116]	; 0x74
   1da18:	cmp	r3, #0
   1da1c:	beq	1da74 <myhtml_insertion_mode_initial@@Base+0xdc>
   1da20:	ldr	r3, [r5, #120]	; 0x78
   1da24:	cmp	r3, #0
   1da28:	beq	1da74 <myhtml_insertion_mode_initial@@Base+0xdc>
   1da2c:	mov	r3, #1
   1da30:	str	r3, [r5, #168]	; 0xa8
   1da34:	mov	r0, #0
   1da38:	pop	{r4, r5, r6, pc}
   1da3c:	ldr	r2, [r0, #84]	; 0x54
   1da40:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1da44:	mov	r0, #0
   1da48:	pop	{r4, r5, r6, pc}
   1da4c:	mov	r1, r6
   1da50:	mov	r0, r5
   1da54:	bl	10e2c <myhtml_tree_node_insert_doctype@plt>
   1da58:	b	1da08 <myhtml_insertion_mode_initial@@Base+0x70>
   1da5c:	ldr	r0, [r0, #8]
   1da60:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1da64:	str	r4, [r5, #176]	; 0xb0
   1da68:	str	r4, [r5, #168]	; 0xa8
   1da6c:	mov	r0, r4
   1da70:	pop	{r4, r5, r6, pc}
   1da74:	mov	r3, #1
   1da78:	str	r3, [r5, #176]	; 0xb0
   1da7c:	b	1da2c <myhtml_insertion_mode_initial@@Base+0x94>

0001da80 <myhtml_insertion_mode_before_html@@Base>:
   1da80:	ldr	r3, [r1, #48]	; 0x30
   1da84:	push	{r4, r5, r6, r7, r8, lr}
   1da88:	ands	r4, r3, #1
   1da8c:	mov	r5, r0
   1da90:	beq	1dab8 <myhtml_insertion_mode_before_html@@Base+0x38>
   1da94:	ldr	r3, [r1]
   1da98:	cmp	r3, #61	; 0x3d
   1da9c:	beq	1daf8 <myhtml_insertion_mode_before_html@@Base+0x78>
   1daa0:	bhi	1daf0 <myhtml_insertion_mode_before_html@@Base+0x70>
   1daa4:	sub	r3, r3, #23
   1daa8:	cmp	r3, #1
   1daac:	bls	1daf8 <myhtml_insertion_mode_before_html@@Base+0x78>
   1dab0:	mov	r0, #0
   1dab4:	pop	{r4, r5, r6, r7, r8, pc}
   1dab8:	ldr	r6, [r1]
   1dabc:	cmp	r6, #2
   1dac0:	beq	1db18 <myhtml_insertion_mode_before_html@@Base+0x98>
   1dac4:	bls	1db28 <myhtml_insertion_mode_before_html@@Base+0xa8>
   1dac8:	cmp	r6, #3
   1dacc:	beq	1dab0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1dad0:	cmp	r6, #65	; 0x41
   1dad4:	bne	1daf8 <myhtml_insertion_mode_before_html@@Base+0x78>
   1dad8:	mov	r2, #1
   1dadc:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1dae0:	mov	r3, #2
   1dae4:	mov	r0, r4
   1dae8:	str	r3, [r5, #168]	; 0xa8
   1daec:	pop	{r4, r5, r6, r7, r8, pc}
   1daf0:	cmp	r3, #65	; 0x41
   1daf4:	bne	1dab0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1daf8:	mov	r2, #1
   1dafc:	mov	r1, #0
   1db00:	mov	r0, r5
   1db04:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1db08:	mov	r3, #2
   1db0c:	str	r3, [r5, #168]	; 0xa8
   1db10:	mov	r0, #1
   1db14:	pop	{r4, r5, r6, r7, r8, pc}
   1db18:	ldr	r2, [r0, #84]	; 0x54
   1db1c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1db20:	mov	r0, r4
   1db24:	pop	{r4, r5, r6, r7, r8, pc}
   1db28:	cmp	r6, #1
   1db2c:	bne	1daf8 <myhtml_insertion_mode_before_html@@Base+0x78>
   1db30:	ldr	r3, [r1, #48]	; 0x30
   1db34:	ands	r7, r3, #8
   1db38:	bne	1dab0 <myhtml_insertion_mode_before_html@@Base+0x30>
   1db3c:	ldr	r0, [r0, #8]
   1db40:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1db44:	mov	r2, r6
   1db48:	mov	r1, r7
   1db4c:	mov	r0, r5
   1db50:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   1db54:	mov	r3, #2
   1db58:	mov	r0, r6
   1db5c:	str	r3, [r5, #168]	; 0xa8
   1db60:	pop	{r4, r5, r6, r7, r8, pc}

0001db64 <myhtml_insertion_fix_split_for_text_begin_ws@@Base>:
   1db64:	push	{r4, r5, r6, r7, r8, lr}
   1db68:	mov	r4, r1
   1db6c:	mov	r5, r0
   1db70:	ldr	r0, [r0, #8]
   1db74:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1db78:	add	r0, r4, #4
   1db7c:	bl	10de4 <mycore_string_whitespace_from_begin@plt>
   1db80:	subs	r7, r0, #0
   1db84:	moveq	r6, r7
   1db88:	beq	1dbf0 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1db8c:	ldr	r1, [r5, #40]	; 0x28
   1db90:	ldr	r0, [r5, #8]
   1db94:	bl	10a0c <myhtml_token_node_create@plt>
   1db98:	subs	r6, r0, #0
   1db9c:	beq	1dbf0 <myhtml_insertion_fix_split_for_text_begin_ws@@Base+0x8c>
   1dba0:	add	r8, r6, #4
   1dba4:	add	r3, r7, #2
   1dba8:	mov	r2, r8
   1dbac:	ldr	r1, [r5, #52]	; 0x34
   1dbb0:	ldr	r0, [r5, #4]
   1dbb4:	bl	10610 <mycore_string_init@plt>
   1dbb8:	mov	r2, r7
   1dbbc:	mov	r0, r8
   1dbc0:	ldr	r1, [r4, #4]
   1dbc4:	bl	108d4 <mycore_string_append@plt>
   1dbc8:	ldr	r3, [r6, #48]	; 0x30
   1dbcc:	mov	r1, r7
   1dbd0:	orr	r3, r3, #4
   1dbd4:	str	r3, [r6, #48]	; 0x30
   1dbd8:	ldr	r0, [r4, #4]
   1dbdc:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   1dbe0:	ldr	r3, [r4, #12]
   1dbe4:	sub	r7, r3, r7
   1dbe8:	str	r7, [r4, #12]
   1dbec:	str	r0, [r4, #4]
   1dbf0:	mov	r0, r6
   1dbf4:	pop	{r4, r5, r6, r7, r8, pc}

0001dbf8 <myhtml_insertion_fix_for_null_char_drop_all@@Base>:
   1dbf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1dbfc:	mov	r6, r1
   1dc00:	ldr	r0, [r0, #8]
   1dc04:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1dc08:	ldr	r5, [r6, #12]
   1dc0c:	cmp	r5, #0
   1dc10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dc14:	mov	lr, #0
   1dc18:	mov	r8, lr
   1dc1c:	mov	r7, lr
   1dc20:	ldr	r9, [r6, #4]
   1dc24:	add	r1, r9, lr
   1dc28:	ldrb	r3, [r9, lr]
   1dc2c:	cmp	r3, #0
   1dc30:	bne	1dc9c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xa4>
   1dc34:	cmp	r5, lr
   1dc38:	bls	1dcfc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x104>
   1dc3c:	add	r3, lr, #1
   1dc40:	add	r3, r9, r3
   1dc44:	mov	r2, lr
   1dc48:	b	1dc5c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x64>
   1dc4c:	ldrb	r0, [r3]
   1dc50:	add	r3, r3, #1
   1dc54:	cmp	r0, #0
   1dc58:	bne	1dcac <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xb4>
   1dc5c:	add	r2, r2, #1
   1dc60:	cmp	r5, r2
   1dc64:	mov	r1, r3
   1dc68:	bne	1dc4c <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x54>
   1dc6c:	add	r1, r9, r5
   1dc70:	mov	r4, r5
   1dc74:	ldr	r3, [r6, #12]
   1dc78:	mov	r2, r7
   1dc7c:	add	r3, lr, r3
   1dc80:	sub	r3, r3, r4
   1dc84:	str	r3, [r6, #12]
   1dc88:	sub	r0, lr, r8
   1dc8c:	add	r0, r9, r0
   1dc90:	bl	fe78 <memmove@plt>
   1dc94:	add	r8, r8, #1
   1dc98:	sub	lr, r4, #1
   1dc9c:	add	lr, lr, #1
   1dca0:	cmp	r5, lr
   1dca4:	bhi	1dc20 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x28>
   1dca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1dcac:	ldr	r3, [r6, #12]
   1dcb0:	add	r3, lr, r3
   1dcb4:	sub	r3, r3, r2
   1dcb8:	str	r3, [r6, #12]
   1dcbc:	ldrb	r3, [r1]
   1dcc0:	cmp	r3, #0
   1dcc4:	moveq	r4, r2
   1dcc8:	moveq	r2, r7
   1dccc:	beq	1dc88 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x90>
   1dcd0:	add	r3, r9, r2
   1dcd4:	mov	r4, r2
   1dcd8:	b	1dce8 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xf0>
   1dcdc:	ldrb	ip, [r3, #1]!
   1dce0:	cmp	ip, #0
   1dce4:	beq	1dcf4 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xfc>
   1dce8:	add	r4, r4, #1
   1dcec:	cmp	r5, r4
   1dcf0:	bhi	1dcdc <myhtml_insertion_fix_for_null_char_drop_all@@Base+0xe4>
   1dcf4:	sub	r2, r4, r2
   1dcf8:	b	1dc88 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x90>
   1dcfc:	mov	r4, lr
   1dd00:	b	1dc74 <myhtml_insertion_fix_for_null_char_drop_all@@Base+0x7c>

0001dd04 <myhtml_insertion_mode_in_body_other_end_tag@@Base>:
   1dd04:	ldr	r3, [r0, #128]	; 0x80
   1dd08:	push	{r4, r5, r6, r7, r8, lr}
   1dd0c:	ldr	r6, [r3, #4]
   1dd10:	cmp	r6, #0
   1dd14:	beq	1dd84 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1dd18:	sub	r5, r6, #-1073741823	; 0xc0000001
   1dd1c:	mov	r8, r1
   1dd20:	mov	r7, r0
   1dd24:	lsl	r5, r5, #2
   1dd28:	b	1dd38 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x34>
   1dd2c:	cmp	r6, #0
   1dd30:	beq	1dd84 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x80>
   1dd34:	ldr	r3, [r7, #128]	; 0x80
   1dd38:	ldr	r3, [r3]
   1dd3c:	ldr	r2, [r8]
   1dd40:	sub	r6, r6, #1
   1dd44:	ldr	r4, [r3, r5]
   1dd48:	sub	r5, r5, #4
   1dd4c:	ldr	r3, [r4, #4]
   1dd50:	cmp	r3, r2
   1dd54:	mov	r1, r3
   1dd58:	bne	1dd68 <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x64>
   1dd5c:	ldr	r2, [r4, #8]
   1dd60:	cmp	r2, #1
   1dd64:	beq	1dd8c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x88>
   1dd68:	ldr	r0, [r7, #28]
   1dd6c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1dd70:	ldr	r3, [r4, #8]
   1dd74:	add	r3, r3, #4
   1dd78:	ldr	r3, [r0, r3, lsl #2]
   1dd7c:	tst	r3, #2
   1dd80:	beq	1dd2c <myhtml_insertion_mode_in_body_other_end_tag@@Base+0x28>
   1dd84:	mov	r0, #0
   1dd88:	pop	{r4, r5, r6, r7, r8, pc}
   1dd8c:	mov	r0, r7
   1dd90:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1dd94:	mov	r0, r7
   1dd98:	bl	10628 <myhtml_tree_current_node@plt>
   1dd9c:	mov	r0, r7
   1dda0:	mov	r1, r4
   1dda4:	mov	r2, #0
   1dda8:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1ddac:	mov	r0, #0
   1ddb0:	pop	{r4, r5, r6, r7, r8, pc}

0001ddb4 <myhtml_insertion_mode_in_foreign_content_end_other@@Base>:
   1ddb4:	ldr	r3, [r0, #128]	; 0x80
   1ddb8:	push	{r4, r5, r6, lr}
   1ddbc:	ldr	r1, [r3, #4]
   1ddc0:	cmp	r1, #0
   1ddc4:	beq	1de40 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1ddc8:	ldr	r4, [r3, #4]
   1ddcc:	ldr	r3, [r3]
   1ddd0:	subs	ip, r4, #1
   1ddd4:	beq	1de40 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1ddd8:	ldr	r1, [r3, ip, lsl #2]
   1dddc:	ldr	r5, [r2]
   1dde0:	lsl	ip, ip, #2
   1dde4:	ldr	lr, [r1, #4]
   1dde8:	cmp	r5, lr
   1ddec:	beq	1de5c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa8>
   1ddf0:	add	lr, r3, ip
   1ddf4:	sub	ip, r4, #2
   1ddf8:	ldr	r1, [lr, #-4]
   1ddfc:	ldr	r1, [r1, #8]
   1de00:	cmp	r1, #1
   1de04:	beq	1de40 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1de08:	sub	r4, r4, #-1073741822	; 0xc0000002
   1de0c:	add	r3, r3, r4, lsl #2
   1de10:	b	1de38 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x84>
   1de14:	ldr	r1, [r3]
   1de18:	sub	ip, ip, #1
   1de1c:	ldr	r4, [r1, #4]
   1de20:	cmp	r5, r4
   1de24:	beq	1de5c <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0xa8>
   1de28:	ldr	lr, [r3, #-4]!
   1de2c:	ldr	lr, [lr, #8]
   1de30:	cmp	lr, #1
   1de34:	beq	1de40 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x8c>
   1de38:	cmp	ip, #0
   1de3c:	bne	1de14 <myhtml_insertion_mode_in_foreign_content_end_other@@Base+0x60>
   1de40:	ldr	r3, [r0]
   1de44:	ldr	ip, [r0, #168]	; 0xa8
   1de48:	mov	r1, r2
   1de4c:	ldr	r3, [r3, #28]
   1de50:	pop	{r4, r5, r6, lr}
   1de54:	ldr	r3, [r3, ip, lsl #2]
   1de58:	bx	r3
   1de5c:	mov	r2, #0
   1de60:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1de64:	mov	r0, #0
   1de68:	pop	{r4, r5, r6, pc}

0001de6c <myhtml_insertion_mode_in_foreign_content_start_other@@Base>:
   1de6c:	push	{r4, r5, r6, lr}
   1de70:	mov	r5, r1
   1de74:	mov	r6, r0
   1de78:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   1de7c:	mov	r1, r5
   1de80:	mov	r4, r0
   1de84:	ldr	r0, [r6, #8]
   1de88:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1de8c:	ldr	r3, [r4, #8]
   1de90:	cmp	r3, #2
   1de94:	beq	1def0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x84>
   1de98:	cmp	r3, #3
   1de9c:	beq	1defc <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x90>
   1dea0:	mov	r0, r5
   1dea4:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1dea8:	mov	r1, r5
   1deac:	mov	r0, r6
   1deb0:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1deb4:	ldr	r3, [r5, #48]	; 0x30
   1deb8:	ldr	r2, [r4, #8]
   1debc:	ands	r4, r3, #2
   1dec0:	str	r2, [r0, #8]
   1dec4:	beq	1dee8 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x7c>
   1dec8:	ldr	r4, [r5]
   1decc:	mov	r0, r6
   1ded0:	cmp	r4, #112	; 0x70
   1ded4:	cmpeq	r2, #3
   1ded8:	moveq	r4, #1
   1dedc:	movne	r4, #0
   1dee0:	beq	1df08 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x9c>
   1dee4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1dee8:	mov	r0, r4
   1deec:	pop	{r4, r5, r6, pc}
   1def0:	mov	r0, r5
   1def4:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1def8:	b	1dea0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1defc:	mov	r0, r5
   1df00:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1df04:	b	1dea0 <myhtml_insertion_mode_in_foreign_content_start_other@@Base+0x34>
   1df08:	bl	10628 <myhtml_tree_current_node@plt>
   1df0c:	mov	r2, r5
   1df10:	mov	r1, r0
   1df14:	mov	r0, r6
   1df18:	pop	{r4, r5, r6, lr}
   1df1c:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>

0001df20 <myhtml_insertion_mode_in_foreign_content@@Base>:
   1df20:	ldr	r3, [r1, #48]	; 0x30
   1df24:	push	{r4, r5, r6, lr}
   1df28:	tst	r3, #1
   1df2c:	mov	r4, r1
   1df30:	mov	r5, r0
   1df34:	bne	1e1a8 <myhtml_insertion_mode_in_foreign_content@@Base+0x288>
   1df38:	ldr	r2, [r1]
   1df3c:	sub	r3, r2, #1
   1df40:	cmp	r3, #139	; 0x8b
   1df44:	addls	pc, pc, r3, lsl #2
   1df48:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df4c:	b	1e238 <myhtml_insertion_mode_in_foreign_content@@Base+0x318>
   1df50:	b	1e274 <myhtml_insertion_mode_in_foreign_content@@Base+0x354>
   1df54:	b	1e17c <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   1df58:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df5c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df60:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df64:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df68:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df6c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df70:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df74:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df78:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df7c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df80:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1df84:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df88:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df8c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df90:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df94:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1df98:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1df9c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfa0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfa4:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfa8:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfac:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfb0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfb4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfb8:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfbc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfc0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfc4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfc8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfcc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfd0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfd4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfd8:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dfdc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfe8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dfec:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1dff0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dff4:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dff8:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1dffc:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e000:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e004:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e008:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e00c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e010:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e014:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e018:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e01c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e020:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e024:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e028:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e02c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e030:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e034:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e038:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e03c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e040:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e044:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e048:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e04c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e050:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e054:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e058:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e05c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e060:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e064:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e068:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e06c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e070:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e074:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e078:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e07c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e080:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e084:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e088:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e08c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e090:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e094:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e098:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e09c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0a0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0a4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0a8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0ac:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0b0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0b4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0b8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0bc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0c0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0c4:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0c8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0cc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0d0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0d4:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0d8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0dc:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0e0:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e0e4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0e8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0ec:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f0:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f4:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0f8:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e0fc:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e100:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e104:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e108:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e10c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e110:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e114:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e118:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e11c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e120:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e124:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e128:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e12c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e130:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e134:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e138:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e13c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e140:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e144:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e148:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e14c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e150:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e154:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e158:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e15c:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e160:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e164:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e168:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e16c:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e170:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e174:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e178:	b	1e184 <myhtml_insertion_mode_in_foreign_content@@Base+0x264>
   1e17c:	mov	r0, #0
   1e180:	pop	{r4, r5, r6, pc}
   1e184:	cmp	r2, #50	; 0x32
   1e188:	beq	1e2ac <myhtml_insertion_mode_in_foreign_content@@Base+0x38c>
   1e18c:	ldr	r3, [r5, #88]	; 0x58
   1e190:	cmp	r3, #0
   1e194:	beq	1e210 <myhtml_insertion_mode_in_foreign_content@@Base+0x2f0>
   1e198:	mov	r1, r4
   1e19c:	mov	r0, r5
   1e1a0:	pop	{r4, r5, r6, lr}
   1e1a4:	b	fe90 <myhtml_insertion_mode_in_foreign_content_start_other@plt>
   1e1a8:	bl	10628 <myhtml_tree_current_node@plt>
   1e1ac:	ldr	r3, [r4]
   1e1b0:	cmp	r3, #112	; 0x70
   1e1b4:	bne	1e1d0 <myhtml_insertion_mode_in_foreign_content@@Base+0x2b0>
   1e1b8:	ldr	r3, [r0, #4]
   1e1bc:	cmp	r3, #112	; 0x70
   1e1c0:	bne	1e1d0 <myhtml_insertion_mode_in_foreign_content@@Base+0x2b0>
   1e1c4:	ldr	r3, [r0, #8]
   1e1c8:	cmp	r3, #3
   1e1cc:	beq	1e284 <myhtml_insertion_mode_in_foreign_content@@Base+0x364>
   1e1d0:	mov	r2, r4
   1e1d4:	mov	r1, r0
   1e1d8:	mov	r0, r5
   1e1dc:	pop	{r4, r5, r6, lr}
   1e1e0:	b	fcf8 <myhtml_insertion_mode_in_foreign_content_end_other@plt>
   1e1e4:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   1e1e8:	mov	r1, r4
   1e1ec:	cmp	r0, #0
   1e1f0:	mov	r0, r5
   1e1f4:	bne	1e230 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e1f8:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   1e1fc:	cmp	r0, #0
   1e200:	bne	1e230 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e204:	ldr	r3, [r4, #8]
   1e208:	cmp	r3, #1
   1e20c:	beq	1e230 <myhtml_insertion_mode_in_foreign_content@@Base+0x310>
   1e210:	mov	r0, r5
   1e214:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e218:	mov	r0, r5
   1e21c:	bl	10628 <myhtml_tree_current_node@plt>
   1e220:	subs	r4, r0, #0
   1e224:	mov	r1, r4
   1e228:	mov	r0, r5
   1e22c:	bne	1e1e4 <myhtml_insertion_mode_in_foreign_content@@Base+0x2c4>
   1e230:	mov	r0, #1
   1e234:	pop	{r4, r5, r6, pc}
   1e238:	ldr	r3, [r1, #48]	; 0x30
   1e23c:	tst	r3, #2048	; 0x800
   1e240:	bne	1e294 <myhtml_insertion_mode_in_foreign_content@@Base+0x374>
   1e244:	mov	r1, r4
   1e248:	mov	r0, r5
   1e24c:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1e250:	ldr	r0, [r4, #48]	; 0x30
   1e254:	ands	r0, r0, #8
   1e258:	bne	1e17c <myhtml_insertion_mode_in_foreign_content@@Base+0x25c>
   1e25c:	ldr	r3, [r5, #180]	; 0xb4
   1e260:	ldr	r2, [r5, #180]	; 0xb4
   1e264:	and	r3, r3, #2
   1e268:	eor	r3, r3, r2
   1e26c:	str	r3, [r5, #180]	; 0xb4
   1e270:	pop	{r4, r5, r6, pc}
   1e274:	mov	r2, #0
   1e278:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1e27c:	mov	r0, #0
   1e280:	pop	{r4, r5, r6, pc}
   1e284:	mov	r0, r5
   1e288:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1e28c:	mov	r0, #0
   1e290:	pop	{r4, r5, r6, pc}
   1e294:	ldr	r0, [r0, #8]
   1e298:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e29c:	mov	r1, r4
   1e2a0:	mov	r0, r5
   1e2a4:	bl	10334 <myhtml_token_set_replacement_character_for_null_token@plt>
   1e2a8:	b	1e244 <myhtml_insertion_mode_in_foreign_content@@Base+0x324>
   1e2ac:	ldr	r0, [r0, #8]
   1e2b0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1e2b4:	ldr	r1, [pc, #80]	; 1e30c <myhtml_insertion_mode_in_foreign_content@@Base+0x3ec>
   1e2b8:	mov	r2, #5
   1e2bc:	add	r1, pc, r1
   1e2c0:	mov	r0, r4
   1e2c4:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e2c8:	cmp	r0, #0
   1e2cc:	bne	1e18c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e2d0:	ldr	r1, [pc, #56]	; 1e310 <myhtml_insertion_mode_in_foreign_content@@Base+0x3f0>
   1e2d4:	mov	r2, #4
   1e2d8:	add	r1, pc, r1
   1e2dc:	mov	r0, r4
   1e2e0:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e2e4:	cmp	r0, #0
   1e2e8:	bne	1e18c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e2ec:	ldr	r1, [pc, #32]	; 1e314 <myhtml_insertion_mode_in_foreign_content@@Base+0x3f4>
   1e2f0:	mov	r2, #4
   1e2f4:	add	r1, pc, r1
   1e2f8:	mov	r0, r4
   1e2fc:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   1e300:	cmp	r0, #0
   1e304:	bne	1e18c <myhtml_insertion_mode_in_foreign_content@@Base+0x26c>
   1e308:	b	1e198 <myhtml_insertion_mode_in_foreign_content@@Base+0x278>
   1e30c:	andeq	ip, sp, ip, lsl #15
   1e310:	andeq	ip, sp, r8, ror r7
   1e314:	andeq	ip, sp, r4, ror #14

0001e318 <myhtml_rules_stop_parsing@@Base>:
   1e318:	bx	lr

0001e31c <myhtml_insertion_mode_in_body@@Base>:
   1e31c:	ldr	r3, [r1, #48]	; 0x30
   1e320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e324:	tst	r3, #1
   1e328:	sub	sp, sp, #20
   1e32c:	mov	r5, r1
   1e330:	mov	r4, r0
   1e334:	beq	1e56c <myhtml_insertion_mode_in_body@@Base+0x250>
   1e338:	ldr	r1, [r1]
   1e33c:	sub	r3, r1, #4
   1e340:	cmp	r3, #135	; 0x87
   1e344:	addls	pc, pc, r3, lsl #2
   1e348:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e34c:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e350:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e354:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e358:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e35c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e360:	b	1ebe4 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e364:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e368:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e36c:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e370:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e374:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e378:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e37c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e380:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e384:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e388:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e38c:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e390:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e394:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e398:	b	1eb98 <myhtml_insertion_mode_in_body@@Base+0x87c>
   1e39c:	b	1eb40 <myhtml_insertion_mode_in_body@@Base+0x824>
   1e3a0:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3a4:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3a8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3ac:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3b0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3b4:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e3b8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3bc:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c4:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3c8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3cc:	b	1ecf8 <myhtml_insertion_mode_in_body@@Base+0x9dc>
   1e3d0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3d4:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3d8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3dc:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e0:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e4:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3e8:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3ec:	b	1ecf8 <myhtml_insertion_mode_in_body@@Base+0x9dc>
   1e3f0:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e3f4:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e3f8:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e3fc:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e400:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e404:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e408:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e40c:	b	1ec88 <myhtml_insertion_mode_in_body@@Base+0x96c>
   1e410:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e414:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e418:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e41c:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e420:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e424:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e428:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e42c:	b	1ead4 <myhtml_insertion_mode_in_body@@Base+0x7b8>
   1e430:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e434:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e438:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e43c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e440:	b	1ea88 <myhtml_insertion_mode_in_body@@Base+0x76c>
   1e444:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e448:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e44c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e450:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e454:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e458:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e45c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e460:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e464:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e468:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e46c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e470:	b	1ea34 <myhtml_insertion_mode_in_body@@Base+0x718>
   1e474:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e478:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e47c:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e480:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e484:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e488:	b	1ebe4 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e48c:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e490:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e494:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e498:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e49c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4a0:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4a4:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e4a8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4ac:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4b0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4b4:	b	1ebe4 <myhtml_insertion_mode_in_body@@Base+0x8c8>
   1e4b8:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4bc:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4c0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4c4:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4c8:	b	1ea08 <myhtml_insertion_mode_in_body@@Base+0x6ec>
   1e4cc:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4d0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4d4:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e4d8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4dc:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e4:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4e8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4ec:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4f0:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4f4:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e4f8:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e4fc:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e500:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e504:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e508:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e50c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e510:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e514:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e518:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e51c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e520:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e524:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e528:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e52c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e530:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e534:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e538:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e53c:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e540:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e544:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e548:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e54c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e550:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e554:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e558:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e55c:	b	1ed18 <myhtml_insertion_mode_in_body@@Base+0x9fc>
   1e560:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e564:	b	1e9f4 <myhtml_insertion_mode_in_body@@Base+0x6d8>
   1e568:	b	1ec3c <myhtml_insertion_mode_in_body@@Base+0x920>
   1e56c:	ldr	r3, [r1]
   1e570:	sub	r3, r3, #1
   1e574:	cmp	r3, #250	; 0xfa
   1e578:	addls	pc, pc, r3, lsl #2
   1e57c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e580:	b	1f6c4 <myhtml_insertion_mode_in_body@@Base+0x13a8>
   1e584:	b	1f3a0 <myhtml_insertion_mode_in_body@@Base+0x1084>
   1e588:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e58c:	b	1ee4c <myhtml_insertion_mode_in_body@@Base+0xb30>
   1e590:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e594:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e598:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e59c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5a0:	b	1f328 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e5a4:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e5a8:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5ac:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5b0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5b4:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5b8:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5bc:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5c0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5c4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5c8:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e5cc:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5d0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5d4:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5d8:	b	1ef90 <myhtml_insertion_mode_in_body@@Base+0xc74>
   1e5dc:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e5e0:	b	1e96c <myhtml_insertion_mode_in_body@@Base+0x650>
   1e5e4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5e8:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e5ec:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e5f0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e5f4:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e5f8:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e5fc:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e600:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e604:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e608:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e60c:	b	1f1bc <myhtml_insertion_mode_in_body@@Base+0xea0>
   1e610:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e614:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e618:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e61c:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e620:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e624:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e628:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e62c:	b	1f1bc <myhtml_insertion_mode_in_body@@Base+0xea0>
   1e630:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e634:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e638:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e63c:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e640:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e644:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e648:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e64c:	b	1f148 <myhtml_insertion_mode_in_body@@Base+0xe2c>
   1e650:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e654:	b	1f0d8 <myhtml_insertion_mode_in_body@@Base+0xdbc>
   1e658:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e65c:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e660:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e664:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e668:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e66c:	b	1f084 <myhtml_insertion_mode_in_body@@Base+0xd68>
   1e670:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e674:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e678:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e67c:	b	1f67c <myhtml_insertion_mode_in_body@@Base+0x1360>
   1e680:	b	1f610 <myhtml_insertion_mode_in_body@@Base+0x12f4>
   1e684:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e688:	b	1eef4 <myhtml_insertion_mode_in_body@@Base+0xbd8>
   1e68c:	b	1f43c <myhtml_insertion_mode_in_body@@Base+0x1120>
   1e690:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e694:	b	1f71c <myhtml_insertion_mode_in_body@@Base+0x1400>
   1e698:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e69c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6a0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6a4:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e6a8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6ac:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6b0:	b	1ed28 <myhtml_insertion_mode_in_body@@Base+0xa0c>
   1e6b4:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6b8:	b	1f54c <myhtml_insertion_mode_in_body@@Base+0x1230>
   1e6bc:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6c0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6c4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6c8:	b	1f328 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e6cc:	b	1f50c <myhtml_insertion_mode_in_body@@Base+0x11f0>
   1e6d0:	b	1f480 <myhtml_insertion_mode_in_body@@Base+0x1164>
   1e6d4:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6d8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6dc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e6e0:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6e4:	b	1f44c <myhtml_insertion_mode_in_body@@Base+0x1130>
   1e6e8:	b	1ef30 <myhtml_insertion_mode_in_body@@Base+0xc14>
   1e6ec:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e6f0:	b	1ef24 <myhtml_insertion_mode_in_body@@Base+0xc08>
   1e6f4:	b	1f328 <myhtml_insertion_mode_in_body@@Base+0x100c>
   1e6f8:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e6fc:	b	1ef60 <myhtml_insertion_mode_in_body@@Base+0xc44>
   1e700:	b	1ef60 <myhtml_insertion_mode_in_body@@Base+0xc44>
   1e704:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e708:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e70c:	b	1ef4c <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e710:	b	1f4cc <myhtml_insertion_mode_in_body@@Base+0x11b0>
   1e714:	b	1f54c <myhtml_insertion_mode_in_body@@Base+0x1230>
   1e718:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e71c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e720:	b	1f4a0 <myhtml_insertion_mode_in_body@@Base+0x1184>
   1e724:	b	1f408 <myhtml_insertion_mode_in_body@@Base+0x10ec>
   1e728:	b	1f408 <myhtml_insertion_mode_in_body@@Base+0x10ec>
   1e72c:	b	1f4a0 <myhtml_insertion_mode_in_body@@Base+0x1184>
   1e730:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e734:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e738:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e73c:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e740:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e744:	b	1f3b0 <myhtml_insertion_mode_in_body@@Base+0x1094>
   1e748:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e74c:	b	1ef4c <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e750:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e754:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e758:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e75c:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e760:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e764:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e768:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e76c:	b	1f5cc <myhtml_insertion_mode_in_body@@Base+0x12b0>
   1e770:	b	1f590 <myhtml_insertion_mode_in_body@@Base+0x1274>
   1e774:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e778:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e77c:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e780:	b	1f2c8 <myhtml_insertion_mode_in_body@@Base+0xfac>
   1e784:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e788:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e78c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e790:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e794:	b	1e9e0 <myhtml_insertion_mode_in_body@@Base+0x6c4>
   1e798:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1e79c:	b	1ef4c <myhtml_insertion_mode_in_body@@Base+0xc30>
   1e7a0:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e7a4:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1e7a8:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1e7ac:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7b0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7b4:	b	1f30c <myhtml_insertion_mode_in_body@@Base+0xff0>
   1e7b8:	b	1eec8 <myhtml_insertion_mode_in_body@@Base+0xbac>
   1e7bc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7c8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7cc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7d8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7dc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7e8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7ec:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7f8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e7fc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e800:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e804:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e808:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e80c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e810:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e814:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e818:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e81c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e820:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e824:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e828:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e82c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e830:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e834:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e838:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e83c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e840:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e844:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e848:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e84c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e850:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e854:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e858:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e85c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e860:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e864:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e868:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e86c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e870:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e874:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e878:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e87c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e880:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e884:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e888:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e88c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e890:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e894:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e898:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e89c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8a8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8ac:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8b8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8bc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8c8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8cc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8d8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8dc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8e0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8e4:	b	1f350 <myhtml_insertion_mode_in_body@@Base+0x1034>
   1e8e8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8ec:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f0:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f4:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8f8:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e8fc:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e900:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e904:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e908:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e90c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e910:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e914:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e918:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e91c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e920:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e924:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e928:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e92c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e930:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e934:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e938:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e93c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e940:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e944:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e948:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e94c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e950:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e954:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e958:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e95c:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e960:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e964:	b	1f790 <myhtml_insertion_mode_in_body@@Base+0x1474>
   1e968:	b	1f044 <myhtml_insertion_mode_in_body@@Base+0xd28>
   1e96c:	mov	r3, #8
   1e970:	mov	r2, #1
   1e974:	mov	r1, #25
   1e978:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1e97c:	cmp	r0, #0
   1e980:	beq	1e9a8 <myhtml_insertion_mode_in_body@@Base+0x68c>
   1e984:	mov	r2, #0
   1e988:	mov	r1, r2
   1e98c:	mov	r0, r4
   1e990:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1e994:	mov	r3, #0
   1e998:	mov	r2, #1
   1e99c:	mov	r1, #25
   1e9a0:	mov	r0, r4
   1e9a4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1e9a8:	mov	r0, r4
   1e9ac:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1e9b0:	mov	r1, r5
   1e9b4:	mov	r0, r4
   1e9b8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1e9bc:	ldr	r3, [r4, #180]	; 0xb4
   1e9c0:	ldr	r2, [r4, #180]	; 0xb4
   1e9c4:	and	r3, r3, #2
   1e9c8:	eor	r3, r3, r2
   1e9cc:	str	r3, [r4, #180]	; 0xb4
   1e9d0:	mov	r6, #0
   1e9d4:	mov	r0, r6
   1e9d8:	add	sp, sp, #20
   1e9dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9e0:	mov	r1, r5
   1e9e4:	mov	r0, r4
   1e9e8:	add	sp, sp, #20
   1e9ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e9f0:	b	10058 <myhtml_insertion_mode_in_head@plt>
   1e9f4:	mov	r2, r1
   1e9f8:	mov	r1, r5
   1e9fc:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1ea00:	mov	r6, #0
   1ea04:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea08:	mov	r3, #32
   1ea0c:	mov	r2, #1
   1ea10:	mov	r1, #99	; 0x63
   1ea14:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea18:	cmp	r0, #0
   1ea1c:	beq	1f904 <myhtml_insertion_mode_in_body@@Base+0x15e8>
   1ea20:	mov	r1, r5
   1ea24:	mov	r0, r4
   1ea28:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1ea2c:	mov	r6, #0
   1ea30:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea34:	mov	r3, #16
   1ea38:	mov	r2, #1
   1ea3c:	mov	r1, #77	; 0x4d
   1ea40:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea44:	cmp	r0, #0
   1ea48:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ea4c:	mov	r2, #1
   1ea50:	mov	r1, #77	; 0x4d
   1ea54:	mov	r0, r4
   1ea58:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ea5c:	mov	r0, r4
   1ea60:	bl	10628 <myhtml_tree_current_node@plt>
   1ea64:	mov	r1, #77	; 0x4d
   1ea68:	bl	10aa8 <myhtml_is_html_node@plt>
   1ea6c:	mov	r0, r4
   1ea70:	mov	r3, #0
   1ea74:	mov	r2, #1
   1ea78:	mov	r1, #77	; 0x4d
   1ea7c:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ea80:	mov	r6, #0
   1ea84:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ea88:	mov	r3, #8
   1ea8c:	mov	r2, #1
   1ea90:	mov	r1, #23
   1ea94:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ea98:	cmp	r0, #0
   1ea9c:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eaa0:	ldr	r1, [r4, #128]	; 0x80
   1eaa4:	ldr	r3, [r1, #4]
   1eaa8:	cmp	r3, #0
   1eaac:	beq	1eac4 <myhtml_insertion_mode_in_body@@Base+0x7a8>
   1eab0:	mov	r3, #0
   1eab4:	ldr	r2, [r1, #4]
   1eab8:	add	r3, r3, #1
   1eabc:	cmp	r2, r3
   1eac0:	bhi	1eab4 <myhtml_insertion_mode_in_body@@Base+0x798>
   1eac4:	mov	r3, #18
   1eac8:	str	r3, [r4, #168]	; 0xa8
   1eacc:	mov	r6, #1
   1ead0:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ead4:	ldr	r3, [r0, #128]	; 0x80
   1ead8:	ldr	r6, [r3, #4]
   1eadc:	ldr	r7, [r3]
   1eae0:	cmp	r6, #0
   1eae4:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eae8:	add	r8, r7, r6, lsl #2
   1eaec:	b	1eaf8 <myhtml_insertion_mode_in_body@@Base+0x7dc>
   1eaf0:	cmp	r6, #0
   1eaf4:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eaf8:	ldr	r3, [r8, #-4]
   1eafc:	ldr	r0, [r4, #28]
   1eb00:	sub	r6, r6, #1
   1eb04:	ldr	r1, [r3, #4]
   1eb08:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1eb0c:	ldr	r2, [r8, #-4]!
   1eb10:	ldr	r3, [r2, #4]
   1eb14:	sub	r3, r3, #55	; 0x37
   1eb18:	cmp	r3, #5
   1eb1c:	ldr	r3, [r2, #8]
   1eb20:	bhi	1eb2c <myhtml_insertion_mode_in_body@@Base+0x810>
   1eb24:	cmp	r3, #1
   1eb28:	beq	1f7a4 <myhtml_insertion_mode_in_body@@Base+0x1488>
   1eb2c:	add	r3, r3, #4
   1eb30:	ldr	r3, [r0, r3, lsl #2]
   1eb34:	tst	r3, #8
   1eb38:	beq	1eaf0 <myhtml_insertion_mode_in_body@@Base+0x7d4>
   1eb3c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eb40:	ldr	r3, [r5, #40]	; 0x28
   1eb44:	mov	r6, #0
   1eb48:	cmp	r3, #0
   1eb4c:	movne	r3, #0
   1eb50:	strne	r3, [r5, #40]	; 0x28
   1eb54:	ldr	r3, [r5, #44]	; 0x2c
   1eb58:	cmp	r3, #0
   1eb5c:	movne	r3, #0
   1eb60:	strne	r3, [r5, #44]	; 0x2c
   1eb64:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eb68:	str	r6, [r5, #48]	; 0x30
   1eb6c:	mov	r1, r5
   1eb70:	mov	r0, r4
   1eb74:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eb78:	mov	r0, r4
   1eb7c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1eb80:	ldr	r3, [r4, #180]	; 0xb4
   1eb84:	ldr	r2, [r4, #180]	; 0xb4
   1eb88:	and	r3, r3, #2
   1eb8c:	eor	r3, r3, r2
   1eb90:	str	r3, [r4, #180]	; 0xb4
   1eb94:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1eb98:	mov	r3, #8
   1eb9c:	mov	r2, #1
   1eba0:	mov	r1, #23
   1eba4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1eba8:	cmp	r0, #0
   1ebac:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ebb0:	ldr	r1, [r4, #128]	; 0x80
   1ebb4:	ldr	r3, [r1, #4]
   1ebb8:	cmp	r3, #0
   1ebbc:	beq	1ebd4 <myhtml_insertion_mode_in_body@@Base+0x8b8>
   1ebc0:	mov	r3, #0
   1ebc4:	ldr	r2, [r1, #4]
   1ebc8:	add	r3, r3, #1
   1ebcc:	cmp	r2, r3
   1ebd0:	bhi	1ebc4 <myhtml_insertion_mode_in_body@@Base+0x8a8>
   1ebd4:	mov	r3, #18
   1ebd8:	str	r3, [r4, #168]	; 0xa8
   1ebdc:	mov	r6, #0
   1ebe0:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ebe4:	mov	r3, #8
   1ebe8:	mov	r2, #1
   1ebec:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ebf0:	cmp	r0, #0
   1ebf4:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ebf8:	mov	r2, #0
   1ebfc:	mov	r1, r2
   1ec00:	mov	r0, r4
   1ec04:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ec08:	mov	r0, r4
   1ec0c:	bl	10628 <myhtml_tree_current_node@plt>
   1ec10:	ldr	r1, [r5]
   1ec14:	bl	10aa8 <myhtml_is_html_node@plt>
   1ec18:	ldr	r1, [r5]
   1ec1c:	mov	r3, #0
   1ec20:	mov	r2, #1
   1ec24:	mov	r0, r4
   1ec28:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ec2c:	mov	r0, r4
   1ec30:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ec34:	mov	r6, #0
   1ec38:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ec3c:	mov	r3, #8
   1ec40:	mov	r2, #1
   1ec44:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ec48:	cmp	r0, #0
   1ec4c:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ec50:	mov	r2, #0
   1ec54:	mov	r1, r2
   1ec58:	mov	r0, r4
   1ec5c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1ec60:	mov	r0, r4
   1ec64:	bl	10628 <myhtml_tree_current_node@plt>
   1ec68:	ldr	r1, [r5]
   1ec6c:	bl	10aa8 <myhtml_is_html_node@plt>
   1ec70:	ldr	r1, [r5]
   1ec74:	mov	r0, r4
   1ec78:	mov	r3, #0
   1ec7c:	mov	r2, #1
   1ec80:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ec84:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ec88:	mov	r3, #0
   1ec8c:	mov	r2, #1
   1ec90:	mov	r1, #128	; 0x80
   1ec94:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ec98:	subs	r6, r0, #0
   1ec9c:	beq	1f870 <myhtml_insertion_mode_in_body@@Base+0x1554>
   1eca0:	mov	r3, #8
   1eca4:	mov	r2, #1
   1eca8:	mov	r1, #52	; 0x34
   1ecac:	mov	r0, r4
   1ecb0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ecb4:	cmp	r0, #0
   1ecb8:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ecbc:	mov	r2, #0
   1ecc0:	mov	r1, r2
   1ecc4:	mov	r0, r4
   1ecc8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1eccc:	mov	r0, r4
   1ecd0:	bl	10628 <myhtml_tree_current_node@plt>
   1ecd4:	mov	r1, #52	; 0x34
   1ecd8:	bl	10aa8 <myhtml_is_html_node@plt>
   1ecdc:	mov	r0, r4
   1ece0:	mov	r3, #0
   1ece4:	mov	r2, #1
   1ece8:	mov	r1, #52	; 0x34
   1ecec:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ecf0:	mov	r6, #0
   1ecf4:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ecf8:	mov	r3, #8
   1ecfc:	mov	r2, #1
   1ed00:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ed04:	cmp	r0, #0
   1ed08:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ed0c:	mov	r2, #1
   1ed10:	ldr	r1, [r5]
   1ed14:	b	1ec58 <myhtml_insertion_mode_in_body@@Base+0x93c>
   1ed18:	mov	r1, r5
   1ed1c:	add	sp, sp, #20
   1ed20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed24:	b	fd1c <myhtml_insertion_mode_in_body_other_end_tag@plt>
   1ed28:	ldr	r2, [r0, #180]	; 0xb4
   1ed2c:	ldr	r3, [r0, #128]	; 0x80
   1ed30:	ldr	r1, [r0, #180]	; 0xb4
   1ed34:	and	r2, r2, #2
   1ed38:	eor	r2, r2, r1
   1ed3c:	str	r2, [r0, #180]	; 0xb4
   1ed40:	ldr	r8, [r3, #4]
   1ed44:	cmp	r8, #0
   1ed48:	beq	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1ed4c:	sub	r7, r8, #-1073741823	; 0xc0000001
   1ed50:	mov	r9, #77	; 0x4d
   1ed54:	lsl	r7, r7, #2
   1ed58:	b	1edac <myhtml_insertion_mode_in_body@@Base+0xa90>
   1ed5c:	ldr	r3, [r6, #8]
   1ed60:	add	r2, r3, #4
   1ed64:	ldr	r2, [sl, r2, lsl #2]
   1ed68:	tst	r2, #2
   1ed6c:	beq	1eda0 <myhtml_insertion_mode_in_body@@Base+0xa84>
   1ed70:	ldr	r1, [r6, #4]
   1ed74:	cmp	r1, #7
   1ed78:	cmpne	r1, #42	; 0x2a
   1ed7c:	movne	r2, #1
   1ed80:	moveq	r2, #0
   1ed84:	cmp	r1, #99	; 0x63
   1ed88:	moveq	r2, #0
   1ed8c:	andne	r2, r2, #1
   1ed90:	cmp	r2, #0
   1ed94:	bne	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1ed98:	cmp	r3, #1
   1ed9c:	bne	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1eda0:	cmp	r8, #0
   1eda4:	beq	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1eda8:	ldr	r3, [r4, #128]	; 0x80
   1edac:	ldr	r3, [r3]
   1edb0:	ldr	r0, [r4, #28]
   1edb4:	sub	r8, r8, #1
   1edb8:	ldr	r6, [r3, r7]
   1edbc:	sub	r7, r7, #4
   1edc0:	ldr	r1, [r6, #4]
   1edc4:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1edc8:	mov	r1, r9
   1edcc:	mov	sl, r0
   1edd0:	mov	r0, r6
   1edd4:	bl	10aa8 <myhtml_is_html_node@plt>
   1edd8:	cmp	r0, #0
   1eddc:	beq	1ed5c <myhtml_insertion_mode_in_body@@Base+0xa40>
   1ede0:	mov	r2, #1
   1ede4:	mov	r1, #77	; 0x4d
   1ede8:	mov	r0, r4
   1edec:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1edf0:	mov	r0, r4
   1edf4:	bl	10628 <myhtml_tree_current_node@plt>
   1edf8:	mov	r1, #77	; 0x4d
   1edfc:	bl	10aa8 <myhtml_is_html_node@plt>
   1ee00:	mov	r3, #0
   1ee04:	mov	r2, #1
   1ee08:	mov	r1, #77	; 0x4d
   1ee0c:	mov	r0, r4
   1ee10:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1ee14:	mov	r3, #32
   1ee18:	mov	r2, #1
   1ee1c:	mov	r1, #99	; 0x63
   1ee20:	mov	r0, r4
   1ee24:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1ee28:	cmp	r0, #0
   1ee2c:	beq	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1ee30:	mov	r1, r5
   1ee34:	mov	r0, r4
   1ee38:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1ee3c:	mov	r1, r5
   1ee40:	mov	r0, r4
   1ee44:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ee48:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1ee4c:	mov	r2, #0
   1ee50:	mov	r1, #4
   1ee54:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1ee58:	cmp	r0, #0
   1ee5c:	beq	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1ee60:	mov	r2, #4
   1ee64:	mov	r1, r5
   1ee68:	mov	r0, r4
   1ee6c:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1ee70:	mov	r2, #0
   1ee74:	mov	r1, #4
   1ee78:	mov	r0, r4
   1ee7c:	bl	1064c <myhtml_tree_active_formatting_between_last_marker@plt>
   1ee80:	subs	r6, r0, #0
   1ee84:	beq	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1ee88:	mov	r1, r6
   1ee8c:	mov	r0, r4
   1ee90:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1ee94:	mov	r1, r6
   1ee98:	mov	r0, r4
   1ee9c:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   1eea0:	mov	r0, r4
   1eea4:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eea8:	mov	r1, r5
   1eeac:	mov	r0, r4
   1eeb0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1eeb4:	mov	r6, #0
   1eeb8:	mov	r1, r0
   1eebc:	mov	r0, r4
   1eec0:	bl	10814 <myhtml_tree_active_formatting_append_with_check@plt>
   1eec4:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1eec8:	mov	r3, #32
   1eecc:	mov	r2, #1
   1eed0:	mov	r1, #99	; 0x63
   1eed4:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1eed8:	cmp	r0, #0
   1eedc:	beq	1eeec <myhtml_insertion_mode_in_body@@Base+0xbd0>
   1eee0:	mov	r1, r5
   1eee4:	mov	r0, r4
   1eee8:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1eeec:	mov	r0, r4
   1eef0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1eef4:	ldr	r3, [r4, #180]	; 0xb4
   1eef8:	ldr	r2, [r4, #180]	; 0xb4
   1eefc:	and	r3, r3, #2
   1ef00:	eor	r3, r3, r2
   1ef04:	mov	r2, #4
   1ef08:	mov	r1, r5
   1ef0c:	str	r3, [r4, #180]	; 0xb4
   1ef10:	str	r2, [r4, #164]	; 0xa4
   1ef14:	mov	r0, r4
   1ef18:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1ef1c:	mov	r6, #0
   1ef20:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef24:	ldr	r3, [r0, #180]	; 0xb4
   1ef28:	tst	r3, #1
   1ef2c:	beq	1ef74 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1ef30:	mov	r3, #4
   1ef34:	mov	r1, r5
   1ef38:	str	r3, [r4, #164]	; 0xa4
   1ef3c:	mov	r0, r4
   1ef40:	bl	10f40 <myhtml_tree_generic_raw_text_element_parsing_algorithm@plt>
   1ef44:	mov	r6, #0
   1ef48:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef4c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ef50:	mov	r0, r4
   1ef54:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1ef58:	mov	r6, #0
   1ef5c:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef60:	bl	10628 <myhtml_tree_current_node@plt>
   1ef64:	mov	r1, #97	; 0x61
   1ef68:	bl	10aa8 <myhtml_is_html_node@plt>
   1ef6c:	cmp	r0, #0
   1ef70:	bne	1f494 <myhtml_insertion_mode_in_body@@Base+0x1178>
   1ef74:	mov	r0, r4
   1ef78:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1ef7c:	mov	r1, r5
   1ef80:	mov	r0, r4
   1ef84:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1ef88:	mov	r6, #0
   1ef8c:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1ef90:	ldr	r3, [r0, #128]	; 0x80
   1ef94:	ldr	r2, [r3, #4]
   1ef98:	cmp	r2, #1
   1ef9c:	bls	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efa0:	ldr	r3, [r3]
   1efa4:	ldr	r3, [r3, #4]
   1efa8:	ldr	r2, [r3, #4]
   1efac:	cmp	r2, #23
   1efb0:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efb4:	ldr	r2, [r3, #8]
   1efb8:	cmp	r2, #1
   1efbc:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efc0:	mov	r3, #0
   1efc4:	mov	r1, #128	; 0x80
   1efc8:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1efcc:	subs	r8, r0, #0
   1efd0:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1efd4:	ldr	r3, [r4, #180]	; 0xb4
   1efd8:	ldr	r2, [r4, #128]	; 0x80
   1efdc:	ldr	r1, [r4, #180]	; 0xb4
   1efe0:	and	r3, r3, #2
   1efe4:	eor	r3, r3, r1
   1efe8:	str	r3, [r4, #180]	; 0xb4
   1efec:	ldr	r3, [r2, #4]
   1eff0:	cmp	r3, #1
   1eff4:	bls	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1eff8:	ldr	r3, [r2]
   1effc:	ldr	r7, [r3, #4]
   1f000:	ldr	r6, [r7, #32]
   1f004:	cmp	r6, #0
   1f008:	streq	r5, [r7, #32]
   1f00c:	beq	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f010:	mov	r1, r5
   1f014:	ldr	r0, [r4, #8]
   1f018:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f01c:	ldr	r1, [r7, #32]
   1f020:	ldr	r0, [r4, #8]
   1f024:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f028:	ldr	r2, [r7, #32]
   1f02c:	mov	r1, r5
   1f030:	ldr	r3, [r4, #44]	; 0x2c
   1f034:	ldr	r0, [r4, #8]
   1f038:	mov	r6, r8
   1f03c:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1f040:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f044:	ldr	r3, [r0, #140]	; 0x8c
   1f048:	ldr	r3, [r3, #4]
   1f04c:	cmp	r3, #0
   1f050:	bne	1f950 <myhtml_insertion_mode_in_body@@Base+0x1634>
   1f054:	ldr	r1, [r0, #128]	; 0x80
   1f058:	ldr	r2, [r1, #4]
   1f05c:	cmp	r2, #0
   1f060:	beq	1f074 <myhtml_insertion_mode_in_body@@Base+0xd58>
   1f064:	ldr	r2, [r1, #4]
   1f068:	add	r3, r3, #1
   1f06c:	cmp	r2, r3
   1f070:	bhi	1f064 <myhtml_insertion_mode_in_body@@Base+0xd48>
   1f074:	mov	r0, r4
   1f078:	bl	10310 <myhtml_rules_stop_parsing@plt>
   1f07c:	mov	r6, #0
   1f080:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f084:	mov	r3, #32
   1f088:	mov	r2, #1
   1f08c:	mov	r1, #99	; 0x63
   1f090:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f094:	cmp	r0, #0
   1f098:	beq	1f0a8 <myhtml_insertion_mode_in_body@@Base+0xd8c>
   1f09c:	mov	r1, r5
   1f0a0:	mov	r0, r4
   1f0a4:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f0a8:	mov	r0, r4
   1f0ac:	bl	10628 <myhtml_tree_current_node@plt>
   1f0b0:	ldr	r3, [r0, #4]
   1f0b4:	sub	r3, r3, #55	; 0x37
   1f0b8:	cmp	r3, #5
   1f0bc:	bhi	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0c0:	ldr	r3, [r0, #8]
   1f0c4:	cmp	r3, #1
   1f0c8:	bne	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0cc:	mov	r0, r4
   1f0d0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f0d4:	b	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f0d8:	ldr	r3, [r0, #128]	; 0x80
   1f0dc:	ldr	r2, [r3, #4]
   1f0e0:	cmp	r2, #1
   1f0e4:	bls	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f0e8:	ldr	r3, [r3]
   1f0ec:	ldr	r0, [r3, #4]
   1f0f0:	ldr	r3, [r0, #4]
   1f0f4:	cmp	r3, #23
   1f0f8:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f0fc:	ldr	r6, [r0, #8]
   1f100:	cmp	r6, #1
   1f104:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f108:	ldr	r3, [r4, #180]	; 0xb4
   1f10c:	tst	r3, #2
   1f110:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f114:	bl	10df0 <myhtml_tree_node_remove@plt>
   1f118:	mov	r3, r6
   1f11c:	mov	r2, r6
   1f120:	mov	r1, #65	; 0x41
   1f124:	mov	r0, r4
   1f128:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f12c:	mov	r1, r5
   1f130:	mov	r0, r4
   1f134:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f138:	mov	r3, #19
   1f13c:	str	r3, [r4, #168]	; 0xa8
   1f140:	mov	r6, #0
   1f144:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f148:	mov	r3, #0
   1f14c:	mov	r2, #1
   1f150:	mov	r1, #128	; 0x80
   1f154:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f158:	ldr	r6, [r4, #104]	; 0x68
   1f15c:	adds	r6, r6, #0
   1f160:	movne	r6, #1
   1f164:	cmp	r0, #0
   1f168:	movne	r6, #0
   1f16c:	cmp	r6, #0
   1f170:	mov	r7, r0
   1f174:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f178:	mov	r3, #32
   1f17c:	mov	r2, #1
   1f180:	mov	r1, #99	; 0x63
   1f184:	mov	r0, r4
   1f188:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f18c:	cmp	r0, #0
   1f190:	beq	1f1a0 <myhtml_insertion_mode_in_body@@Base+0xe84>
   1f194:	mov	r1, r5
   1f198:	mov	r0, r4
   1f19c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f1a0:	mov	r1, r5
   1f1a4:	mov	r0, r4
   1f1a8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f1ac:	cmp	r7, #0
   1f1b0:	streq	r0, [r4, #104]	; 0x68
   1f1b4:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f1b8:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f1bc:	ldr	r2, [r0, #180]	; 0xb4
   1f1c0:	ldr	r3, [r0, #128]	; 0x80
   1f1c4:	ldr	r1, [r0, #180]	; 0xb4
   1f1c8:	and	r2, r2, #2
   1f1cc:	eor	r2, r2, r1
   1f1d0:	str	r2, [r0, #180]	; 0xb4
   1f1d4:	ldr	r8, [r3, #4]
   1f1d8:	cmp	r8, #0
   1f1dc:	beq	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f1e0:	sub	r7, r8, #-1073741823	; 0xc0000001
   1f1e4:	mov	fp, #36	; 0x24
   1f1e8:	lsl	r7, r7, #2
   1f1ec:	mov	sl, #44	; 0x2c
   1f1f0:	b	1f250 <myhtml_insertion_mode_in_body@@Base+0xf34>
   1f1f4:	bl	10aa8 <myhtml_is_html_node@plt>
   1f1f8:	cmp	r0, #0
   1f1fc:	bne	1f918 <myhtml_insertion_mode_in_body@@Base+0x15fc>
   1f200:	ldr	r3, [r6, #8]
   1f204:	add	r2, r3, #4
   1f208:	ldr	r2, [r9, r2, lsl #2]
   1f20c:	tst	r2, #2
   1f210:	beq	1f244 <myhtml_insertion_mode_in_body@@Base+0xf28>
   1f214:	ldr	r1, [r6, #4]
   1f218:	cmp	r1, #7
   1f21c:	cmpne	r1, #42	; 0x2a
   1f220:	movne	r2, #1
   1f224:	moveq	r2, #0
   1f228:	cmp	r1, #99	; 0x63
   1f22c:	moveq	r2, #0
   1f230:	andne	r2, r2, #1
   1f234:	cmp	r2, #0
   1f238:	bne	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f23c:	cmp	r3, #1
   1f240:	bne	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f244:	cmp	r8, #0
   1f248:	beq	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f24c:	ldr	r3, [r4, #128]	; 0x80
   1f250:	ldr	r3, [r3]
   1f254:	ldr	r0, [r4, #28]
   1f258:	sub	r8, r8, #1
   1f25c:	ldr	r6, [r3, r7]
   1f260:	sub	r7, r7, #4
   1f264:	ldr	r1, [r6, #4]
   1f268:	bl	10a24 <myhtml_tag_get_by_id@plt>
   1f26c:	mov	r1, fp
   1f270:	mov	r9, r0
   1f274:	mov	r0, r6
   1f278:	bl	10aa8 <myhtml_is_html_node@plt>
   1f27c:	mov	r1, sl
   1f280:	subs	r3, r0, #0
   1f284:	str	r3, [sp, #12]
   1f288:	mov	r0, r6
   1f28c:	beq	1f1f4 <myhtml_insertion_mode_in_body@@Base+0xed8>
   1f290:	mov	r2, #1
   1f294:	mov	r1, #36	; 0x24
   1f298:	mov	r0, r4
   1f29c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f2a0:	mov	r0, r4
   1f2a4:	bl	10628 <myhtml_tree_current_node@plt>
   1f2a8:	mov	r1, #36	; 0x24
   1f2ac:	bl	10aa8 <myhtml_is_html_node@plt>
   1f2b0:	mov	r3, #0
   1f2b4:	mov	r2, #1
   1f2b8:	mov	r1, #36	; 0x24
   1f2bc:	mov	r0, r4
   1f2c0:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f2c4:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f2c8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f2cc:	ldr	r3, [r4, #180]	; 0xb4
   1f2d0:	ldr	r0, [r4, #168]	; 0xa8
   1f2d4:	orr	r3, r3, #192	; 0xc0
   1f2d8:	str	r3, [r4, #180]	; 0xb4
   1f2dc:	ldr	r3, [r4, #180]	; 0xb4
   1f2e0:	ldr	r2, [r4, #180]	; 0xb4
   1f2e4:	and	r3, r3, #2
   1f2e8:	eor	r3, r3, r2
   1f2ec:	mov	r1, #7
   1f2f0:	mov	r2, #2
   1f2f4:	str	r3, [r4, #180]	; 0xb4
   1f2f8:	str	r0, [r4, #172]	; 0xac
   1f2fc:	str	r1, [r4, #168]	; 0xa8
   1f300:	str	r2, [r4, #164]	; 0xa4
   1f304:	mov	r6, #0
   1f308:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f30c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f310:	mov	r1, r5
   1f314:	mov	r0, r4
   1f318:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f31c:	mov	r0, r4
   1f320:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f324:	b	1e9bc <myhtml_insertion_mode_in_body@@Base+0x6a0>
   1f328:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f32c:	mov	r1, r5
   1f330:	mov	r0, r4
   1f334:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f338:	ldr	r3, [r4]
   1f33c:	mov	r0, r4
   1f340:	mov	r6, #0
   1f344:	ldr	r1, [r3, #36]	; 0x24
   1f348:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1f34c:	b	1eb80 <myhtml_insertion_mode_in_body@@Base+0x864>
   1f350:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f354:	mov	r1, r5
   1f358:	ldr	r0, [r4, #8]
   1f35c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f360:	mov	r0, r5
   1f364:	bl	ff74 <myhtml_token_adjust_mathml_attributes@plt>
   1f368:	mov	r0, r5
   1f36c:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1f370:	mov	r1, r5
   1f374:	mov	r0, r4
   1f378:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1f37c:	ldr	r2, [r5, #48]	; 0x30
   1f380:	mov	r3, #2
   1f384:	tst	r2, #2
   1f388:	str	r3, [r0, #8]
   1f38c:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f390:	mov	r0, r4
   1f394:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f398:	mov	r6, #0
   1f39c:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f3a0:	mov	r2, #0
   1f3a4:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f3a8:	mov	r6, #0
   1f3ac:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f3b0:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f3b4:	mov	r1, r5
   1f3b8:	mov	r0, r4
   1f3bc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f3c0:	ldr	r2, [r4, #168]	; 0xa8
   1f3c4:	ldr	r3, [r4, #180]	; 0xb4
   1f3c8:	ldr	r1, [r4, #180]	; 0xb4
   1f3cc:	bic	r6, r2, #2
   1f3d0:	and	r3, r3, #2
   1f3d4:	sub	r2, r2, #12
   1f3d8:	cmp	r6, #8
   1f3dc:	cmpne	r2, #2
   1f3e0:	eor	r3, r3, r1
   1f3e4:	str	r3, [r4, #180]	; 0xb4
   1f3e8:	movls	r3, #16
   1f3ec:	movhi	r3, #15
   1f3f0:	movls	r6, #1
   1f3f4:	movhi	r6, #0
   1f3f8:	strls	r3, [r4, #168]	; 0xa8
   1f3fc:	movls	r6, #0
   1f400:	strhi	r3, [r4, #168]	; 0xa8
   1f404:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f408:	mov	r3, #8
   1f40c:	mov	r2, #1
   1f410:	mov	r1, #109	; 0x6d
   1f414:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f418:	cmp	r0, #0
   1f41c:	beq	1f430 <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f420:	mov	r2, #1
   1f424:	mov	r1, #108	; 0x6c
   1f428:	mov	r0, r4
   1f42c:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f430:	mov	r0, r4
   1f434:	bl	10628 <myhtml_tree_current_node@plt>
   1f438:	b	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f43c:	mov	r3, #69	; 0x45
   1f440:	str	r3, [r1]
   1f444:	mov	r6, #1
   1f448:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f44c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f450:	mov	r3, #8
   1f454:	mov	r2, #1
   1f458:	mov	r1, #90	; 0x5a
   1f45c:	mov	r0, r4
   1f460:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f464:	cmp	r0, #0
   1f468:	beq	1eea8 <myhtml_insertion_mode_in_body@@Base+0xb8c>
   1f46c:	mov	r2, #90	; 0x5a
   1f470:	mov	r1, r5
   1f474:	mov	r0, r4
   1f478:	bl	10898 <myhtml_tree_adoption_agency_algorithm@plt>
   1f47c:	b	1eea0 <myhtml_insertion_mode_in_body@@Base+0xb84>
   1f480:	bl	10628 <myhtml_tree_current_node@plt>
   1f484:	mov	r1, #85	; 0x55
   1f488:	bl	10aa8 <myhtml_is_html_node@plt>
   1f48c:	cmp	r0, #0
   1f490:	beq	1ef74 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1f494:	mov	r0, r4
   1f498:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f49c:	b	1ef74 <myhtml_insertion_mode_in_body@@Base+0xc58>
   1f4a0:	mov	r3, #8
   1f4a4:	mov	r2, #1
   1f4a8:	mov	r1, #109	; 0x6d
   1f4ac:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f4b0:	cmp	r0, #0
   1f4b4:	beq	1f430 <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f4b8:	mov	r2, #0
   1f4bc:	mov	r1, r2
   1f4c0:	mov	r0, r4
   1f4c4:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f4c8:	b	1f430 <myhtml_insertion_mode_in_body@@Base+0x1114>
   1f4cc:	mov	r3, #32
   1f4d0:	mov	r2, #1
   1f4d4:	mov	r1, #99	; 0x63
   1f4d8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f4dc:	cmp	r0, #0
   1f4e0:	beq	1f4f0 <myhtml_insertion_mode_in_body@@Base+0x11d4>
   1f4e4:	mov	r1, r5
   1f4e8:	mov	r0, r4
   1f4ec:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f4f0:	mov	r1, r5
   1f4f4:	mov	r0, r4
   1f4f8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f4fc:	mov	r3, #6
   1f500:	str	r3, [r4, #164]	; 0xa4
   1f504:	mov	r6, #0
   1f508:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f50c:	mov	r3, #32
   1f510:	mov	r2, #1
   1f514:	mov	r1, #99	; 0x63
   1f518:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f51c:	cmp	r0, #0
   1f520:	beq	1f530 <myhtml_insertion_mode_in_body@@Base+0x1214>
   1f524:	mov	r1, r5
   1f528:	mov	r0, r4
   1f52c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f530:	mov	r0, r4
   1f534:	bl	10628 <myhtml_tree_current_node@plt>
   1f538:	mov	r1, #85	; 0x55
   1f53c:	bl	10aa8 <myhtml_is_html_node@plt>
   1f540:	cmp	r0, #0
   1f544:	beq	1ee3c <myhtml_insertion_mode_in_body@@Base+0xb20>
   1f548:	b	1f0cc <myhtml_insertion_mode_in_body@@Base+0xdb0>
   1f54c:	mov	r3, #32
   1f550:	mov	r2, #1
   1f554:	mov	r1, #99	; 0x63
   1f558:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f55c:	cmp	r0, #0
   1f560:	beq	1f570 <myhtml_insertion_mode_in_body@@Base+0x1254>
   1f564:	mov	r1, r5
   1f568:	mov	r0, r4
   1f56c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f570:	mov	r1, r5
   1f574:	mov	r0, r4
   1f578:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f57c:	ldr	r3, [r4, #180]	; 0xb4
   1f580:	mov	r6, #0
   1f584:	orr	r3, r3, #192	; 0xc0
   1f588:	str	r3, [r4, #180]	; 0xb4
   1f58c:	b	1eb80 <myhtml_insertion_mode_in_body@@Base+0x864>
   1f590:	ldr	r3, [r0, #176]	; 0xb0
   1f594:	tst	r3, #1
   1f598:	beq	1f8dc <myhtml_insertion_mode_in_body@@Base+0x15c0>
   1f59c:	mov	r1, r5
   1f5a0:	mov	r0, r4
   1f5a4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f5a8:	ldr	r3, [r4, #180]	; 0xb4
   1f5ac:	ldr	r2, [r4, #180]	; 0xb4
   1f5b0:	and	r3, r3, #2
   1f5b4:	eor	r3, r3, r2
   1f5b8:	mov	r2, #8
   1f5bc:	str	r3, [r4, #180]	; 0xb4
   1f5c0:	str	r2, [r4, #168]	; 0xa8
   1f5c4:	mov	r6, #0
   1f5c8:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f5cc:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f5d0:	mov	r1, r5
   1f5d4:	ldr	r0, [r4, #8]
   1f5d8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f5dc:	mov	r0, r5
   1f5e0:	bl	101d8 <myhtml_token_adjust_svg_attributes@plt>
   1f5e4:	mov	r0, r5
   1f5e8:	bl	10be0 <myhtml_token_adjust_foreign_attributes@plt>
   1f5ec:	mov	r1, r5
   1f5f0:	mov	r0, r4
   1f5f4:	bl	10d84 <myhtml_tree_node_insert_foreign_element@plt>
   1f5f8:	ldr	r2, [r5, #48]	; 0x30
   1f5fc:	mov	r3, #3
   1f600:	tst	r2, #2
   1f604:	str	r3, [r0, #8]
   1f608:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f60c:	b	1f390 <myhtml_insertion_mode_in_body@@Base+0x1074>
   1f610:	mov	r3, #0
   1f614:	mov	r2, #1
   1f618:	mov	r1, #128	; 0x80
   1f61c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1f620:	subs	r6, r0, #0
   1f624:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f628:	ldr	r3, [r4, #128]	; 0x80
   1f62c:	ldr	r2, [r3, #4]
   1f630:	cmp	r2, #0
   1f634:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f638:	ldr	r3, [r3]
   1f63c:	ldr	r7, [r3]
   1f640:	ldr	r3, [r7, #32]
   1f644:	cmp	r3, #0
   1f648:	beq	1f95c <myhtml_insertion_mode_in_body@@Base+0x1640>
   1f64c:	mov	r1, r5
   1f650:	ldr	r0, [r4, #8]
   1f654:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f658:	ldr	r1, [r7, #32]
   1f65c:	ldr	r0, [r4, #8]
   1f660:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f664:	ldr	r2, [r7, #32]
   1f668:	mov	r1, r5
   1f66c:	ldr	r3, [r4, #44]	; 0x2c
   1f670:	ldr	r0, [r4, #8]
   1f674:	bl	10694 <myhtml_token_node_attr_copy_with_check@plt>
   1f678:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f67c:	mov	r3, #32
   1f680:	mov	r2, #1
   1f684:	mov	r1, #99	; 0x63
   1f688:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f68c:	cmp	r0, #0
   1f690:	beq	1f6a0 <myhtml_insertion_mode_in_body@@Base+0x1384>
   1f694:	mov	r1, r5
   1f698:	mov	r0, r4
   1f69c:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f6a0:	mov	r0, r4
   1f6a4:	bl	10628 <myhtml_tree_current_node@plt>
   1f6a8:	mov	r1, #85	; 0x55
   1f6ac:	bl	10aa8 <myhtml_is_html_node@plt>
   1f6b0:	cmp	r0, #0
   1f6b4:	beq	1f310 <myhtml_insertion_mode_in_body@@Base+0xff4>
   1f6b8:	mov	r0, r4
   1f6bc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f6c0:	b	1f310 <myhtml_insertion_mode_in_body@@Base+0xff4>
   1f6c4:	ldr	r3, [r1, #48]	; 0x30
   1f6c8:	tst	r3, #2048	; 0x800
   1f6cc:	beq	1f8bc <myhtml_insertion_mode_in_body@@Base+0x15a0>
   1f6d0:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   1f6d4:	ldr	r3, [r5, #12]
   1f6d8:	cmp	r3, #0
   1f6dc:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f6e0:	mov	r0, r4
   1f6e4:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f6e8:	mov	r1, r5
   1f6ec:	mov	r0, r4
   1f6f0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f6f4:	ldr	r3, [r5, #48]	; 0x30
   1f6f8:	ands	r3, r3, #8
   1f6fc:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f700:	ldr	r2, [r4, #180]	; 0xb4
   1f704:	ldr	r1, [r4, #180]	; 0xb4
   1f708:	and	r2, r2, #2
   1f70c:	eor	r2, r2, r1
   1f710:	mov	r6, r3
   1f714:	str	r2, [r4, #180]	; 0xb4
   1f718:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f71c:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f720:	mov	r1, r5
   1f724:	mov	r0, r4
   1f728:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f72c:	mov	r0, r4
   1f730:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1f734:	mov	r1, r5
   1f738:	ldr	r0, [r4, #8]
   1f73c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   1f740:	mov	r2, #6
   1f744:	ldr	r3, [pc, #540]	; 1f968 <myhtml_insertion_mode_in_body@@Base+0x164c>
   1f748:	ldr	r0, [r4, #8]
   1f74c:	str	r2, [sp, #4]
   1f750:	ldr	r2, [pc, #532]	; 1f96c <myhtml_insertion_mode_in_body@@Base+0x1650>
   1f754:	add	r3, pc, r3
   1f758:	str	r3, [sp]
   1f75c:	mov	r1, r5
   1f760:	mov	r3, #4
   1f764:	add	r2, pc, r2
   1f768:	bl	fd34 <myhtml_token_attr_match_case@plt>
   1f76c:	cmp	r0, #0
   1f770:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f774:	ldr	r3, [r4, #180]	; 0xb4
   1f778:	ldr	r2, [r4, #180]	; 0xb4
   1f77c:	and	r3, r3, #2
   1f780:	eor	r3, r3, r2
   1f784:	mov	r6, r0
   1f788:	str	r3, [r4, #180]	; 0xb4
   1f78c:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f790:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f794:	mov	r1, r5
   1f798:	mov	r0, r4
   1f79c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1f7a0:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f7a4:	mov	r2, #0
   1f7a8:	mov	r1, r2
   1f7ac:	mov	r0, r4
   1f7b0:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f7b4:	mov	r0, r4
   1f7b8:	bl	10628 <myhtml_tree_current_node@plt>
   1f7bc:	ldr	r1, [r5]
   1f7c0:	bl	10aa8 <myhtml_is_html_node@plt>
   1f7c4:	ldr	r3, [r4, #128]	; 0x80
   1f7c8:	ldr	r2, [r3, #4]
   1f7cc:	cmp	r2, #0
   1f7d0:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f7d4:	ldr	r2, [r3, #4]
   1f7d8:	sub	r2, r2, #1
   1f7dc:	str	r2, [r3, #4]
   1f7e0:	ldr	r2, [r3, #4]
   1f7e4:	ldr	r2, [r7, r2, lsl #2]
   1f7e8:	ldr	r2, [r2, #4]
   1f7ec:	cmp	r2, #55	; 0x37
   1f7f0:	beq	1f858 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f7f4:	ldr	r2, [r3, #4]
   1f7f8:	ldr	r2, [r7, r2, lsl #2]
   1f7fc:	ldr	r2, [r2, #4]
   1f800:	cmp	r2, #56	; 0x38
   1f804:	beq	1f858 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f808:	ldr	r2, [r3, #4]
   1f80c:	ldr	r2, [r7, r2, lsl #2]
   1f810:	ldr	r2, [r2, #4]
   1f814:	cmp	r2, #57	; 0x39
   1f818:	beq	1f858 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f81c:	ldr	r2, [r3, #4]
   1f820:	ldr	r2, [r7, r2, lsl #2]
   1f824:	ldr	r2, [r2, #4]
   1f828:	cmp	r2, #58	; 0x3a
   1f82c:	beq	1f858 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f830:	ldr	r2, [r3, #4]
   1f834:	ldr	r2, [r7, r2, lsl #2]
   1f838:	ldr	r2, [r2, #4]
   1f83c:	cmp	r2, #59	; 0x3b
   1f840:	beq	1f858 <myhtml_insertion_mode_in_body@@Base+0x153c>
   1f844:	ldr	r2, [r3, #4]
   1f848:	ldr	r2, [r7, r2, lsl #2]
   1f84c:	ldr	r2, [r2, #4]
   1f850:	cmp	r2, #60	; 0x3c
   1f854:	bne	1f7c8 <myhtml_insertion_mode_in_body@@Base+0x14ac>
   1f858:	ldr	r2, [r3, #4]
   1f85c:	ldr	r2, [r7, r2, lsl #2]
   1f860:	ldr	r2, [r2, #8]
   1f864:	cmp	r2, #1
   1f868:	bne	1f7c8 <myhtml_insertion_mode_in_body@@Base+0x14ac>
   1f86c:	b	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f870:	ldr	r5, [r4, #104]	; 0x68
   1f874:	str	r6, [r4, #104]	; 0x68
   1f878:	cmp	r5, #0
   1f87c:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f880:	mov	r1, #8
   1f884:	mov	r0, r5
   1f888:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   1f88c:	cmp	r0, #0
   1f890:	beq	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f894:	mov	r1, r6
   1f898:	mov	r2, r6
   1f89c:	mov	r0, r4
   1f8a0:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f8a4:	mov	r0, r4
   1f8a8:	bl	10628 <myhtml_tree_current_node@plt>
   1f8ac:	mov	r1, r5
   1f8b0:	mov	r0, r4
   1f8b4:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   1f8b8:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f8bc:	bl	10544 <myhtml_tree_active_formatting_reconstruction@plt>
   1f8c0:	mov	r1, r5
   1f8c4:	mov	r0, r4
   1f8c8:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1f8cc:	ldr	r3, [r5, #48]	; 0x30
   1f8d0:	ands	r6, r3, #8
   1f8d4:	bne	1e9d0 <myhtml_insertion_mode_in_body@@Base+0x6b4>
   1f8d8:	b	1eb80 <myhtml_insertion_mode_in_body@@Base+0x864>
   1f8dc:	mov	r3, #32
   1f8e0:	mov	r2, #1
   1f8e4:	mov	r1, #99	; 0x63
   1f8e8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   1f8ec:	cmp	r0, #0
   1f8f0:	beq	1f59c <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f8f4:	mov	r1, r5
   1f8f8:	mov	r0, r4
   1f8fc:	bl	10448 <myhtml_tree_tags_close_p@plt>
   1f900:	b	1f59c <myhtml_insertion_mode_in_body@@Base+0x1280>
   1f904:	mov	r2, #1
   1f908:	mov	r1, #99	; 0x63
   1f90c:	mov	r0, r4
   1f910:	bl	10970 <myhtml_tree_node_insert@plt>
   1f914:	b	1ea20 <myhtml_insertion_mode_in_body@@Base+0x704>
   1f918:	mov	r2, #1
   1f91c:	mov	r1, #44	; 0x2c
   1f920:	mov	r0, r4
   1f924:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   1f928:	mov	r0, r4
   1f92c:	bl	10628 <myhtml_tree_current_node@plt>
   1f930:	mov	r1, #44	; 0x2c
   1f934:	bl	10aa8 <myhtml_is_html_node@plt>
   1f938:	ldr	r3, [sp, #12]
   1f93c:	mov	r2, #1
   1f940:	mov	r1, #44	; 0x2c
   1f944:	mov	r0, r4
   1f948:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1f94c:	b	1ee14 <myhtml_insertion_mode_in_body@@Base+0xaf8>
   1f950:	add	sp, sp, #20
   1f954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f958:	b	fda0 <myhtml_insertion_mode_in_template@plt>
   1f95c:	str	r5, [r7, #32]
   1f960:	mov	r6, r3
   1f964:	b	1e9d4 <myhtml_insertion_mode_in_body@@Base+0x6b8>
   1f968:	andeq	fp, sp, ip, lsl #6
   1f96c:	andeq	r7, r1, ip, lsr lr

0001f970 <myhtml_insertion_mode_before_head@@Base>:
   1f970:	ldr	r2, [r1, #48]	; 0x30
   1f974:	push	{r4, r5, r6, lr}
   1f978:	ands	r4, r2, #1
   1f97c:	mov	r5, r0
   1f980:	beq	1f9ac <myhtml_insertion_mode_before_head@@Base+0x3c>
   1f984:	ldr	r3, [r1]
   1f988:	cmp	r3, #61	; 0x3d
   1f98c:	beq	1f9e0 <myhtml_insertion_mode_before_head@@Base+0x70>
   1f990:	bhi	1f9d8 <myhtml_insertion_mode_before_head@@Base+0x68>
   1f994:	sub	r3, r3, #23
   1f998:	cmp	r3, #1
   1f99c:	bls	1f9e0 <myhtml_insertion_mode_before_head@@Base+0x70>
   1f9a0:	mov	r4, #0
   1f9a4:	mov	r0, r4
   1f9a8:	pop	{r4, r5, r6, pc}
   1f9ac:	ldr	r6, [r1]
   1f9b0:	cmp	r6, #3
   1f9b4:	beq	1f9a4 <myhtml_insertion_mode_before_head@@Base+0x34>
   1f9b8:	bhi	1fa08 <myhtml_insertion_mode_before_head@@Base+0x98>
   1f9bc:	cmp	r6, #1
   1f9c0:	beq	1fa20 <myhtml_insertion_mode_before_head@@Base+0xb0>
   1f9c4:	cmp	r6, #2
   1f9c8:	bne	1f9e0 <myhtml_insertion_mode_before_head@@Base+0x70>
   1f9cc:	mov	r2, r4
   1f9d0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1f9d4:	b	1f9a4 <myhtml_insertion_mode_before_head@@Base+0x34>
   1f9d8:	cmp	r3, #65	; 0x41
   1f9dc:	bne	1f9a0 <myhtml_insertion_mode_before_head@@Base+0x30>
   1f9e0:	mov	r2, #1
   1f9e4:	mov	r1, #61	; 0x3d
   1f9e8:	mov	r0, r5
   1f9ec:	bl	10970 <myhtml_tree_node_insert@plt>
   1f9f0:	mov	r4, #1
   1f9f4:	mov	r3, #3
   1f9f8:	str	r3, [r5, #168]	; 0xa8
   1f9fc:	str	r0, [r5, #92]	; 0x5c
   1fa00:	mov	r0, r4
   1fa04:	pop	{r4, r5, r6, pc}
   1fa08:	cmp	r6, #61	; 0x3d
   1fa0c:	beq	1fa58 <myhtml_insertion_mode_before_head@@Base+0xe8>
   1fa10:	cmp	r6, #65	; 0x41
   1fa14:	bne	1f9e0 <myhtml_insertion_mode_before_head@@Base+0x70>
   1fa18:	pop	{r4, r5, r6, lr}
   1fa1c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1fa20:	ldr	r3, [r1, #48]	; 0x30
   1fa24:	tst	r3, #8
   1fa28:	bne	1f9a4 <myhtml_insertion_mode_before_head@@Base+0x34>
   1fa2c:	ldr	r0, [r0, #8]
   1fa30:	bl	10118 <myhtml_insertion_fix_emit_for_text_begin_ws@plt>
   1fa34:	mov	r2, r6
   1fa38:	mov	r1, #61	; 0x3d
   1fa3c:	mov	r0, r5
   1fa40:	bl	10970 <myhtml_tree_node_insert@plt>
   1fa44:	mov	r3, #3
   1fa48:	mov	r4, r6
   1fa4c:	str	r3, [r5, #168]	; 0xa8
   1fa50:	str	r0, [r5, #92]	; 0x5c
   1fa54:	b	1f9a4 <myhtml_insertion_mode_before_head@@Base+0x34>
   1fa58:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fa5c:	mov	r3, #3
   1fa60:	str	r3, [r5, #168]	; 0xa8
   1fa64:	str	r0, [r5, #92]	; 0x5c
   1fa68:	b	1f9a4 <myhtml_insertion_mode_before_head@@Base+0x34>

0001fa6c <myhtml_insertion_mode_in_head@@Base>:
   1fa6c:	ldr	r3, [r1, #48]	; 0x30
   1fa70:	push	{r4, r5, r6, r7, lr}
   1fa74:	tst	r3, #1
   1fa78:	sub	sp, sp, #12
   1fa7c:	mov	r5, r1
   1fa80:	mov	r4, r0
   1fa84:	beq	1fb10 <myhtml_insertion_mode_in_head@@Base+0xa4>
   1fa88:	ldr	r5, [r1]
   1fa8c:	cmp	r5, #61	; 0x3d
   1fa90:	beq	1fd3c <myhtml_insertion_mode_in_head@@Base+0x2d0>
   1fa94:	bls	1fda4 <myhtml_insertion_mode_in_head@@Base+0x338>
   1fa98:	cmp	r5, #65	; 0x41
   1fa9c:	beq	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1faa0:	cmp	r5, #128	; 0x80
   1faa4:	bne	1fdb0 <myhtml_insertion_mode_in_head@@Base+0x344>
   1faa8:	mov	r3, #0
   1faac:	mov	r2, #1
   1fab0:	mov	r1, r5
   1fab4:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   1fab8:	cmp	r0, #0
   1fabc:	beq	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fac0:	mov	r2, #0
   1fac4:	mov	r1, r2
   1fac8:	mov	r0, r4
   1facc:	bl	fe30 <myhtml_tree_generate_all_implied_end_tags@plt>
   1fad0:	mov	r0, r4
   1fad4:	bl	10628 <myhtml_tree_current_node@plt>
   1fad8:	mov	r1, r5
   1fadc:	mov	r3, #0
   1fae0:	mov	r2, #1
   1fae4:	mov	r0, r4
   1fae8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   1faec:	mov	r0, r4
   1faf0:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1faf4:	mov	r0, r4
   1faf8:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1fafc:	mov	r0, r4
   1fb00:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1fb04:	mov	r0, #0
   1fb08:	add	sp, sp, #12
   1fb0c:	pop	{r4, r5, r6, r7, pc}
   1fb10:	ldr	r3, [r1]
   1fb14:	sub	r3, r3, #1
   1fb18:	cmp	r3, #133	; 0x85
   1fb1c:	addls	pc, pc, r3, lsl #2
   1fb20:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb24:	b	1fd68 <myhtml_insertion_mode_in_head@@Base+0x2fc>
   1fb28:	b	1fe68 <myhtml_insertion_mode_in_head@@Base+0x3fc>
   1fb2c:	b	1fdb0 <myhtml_insertion_mode_in_head@@Base+0x344>
   1fb30:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb34:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb38:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb3c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb40:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb44:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb48:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb4c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb50:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb54:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb58:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb5c:	b	1fd54 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb60:	b	1fd54 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb64:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb68:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb6c:	b	1fd54 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fb70:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb74:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb78:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb7c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb80:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb84:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb88:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb8c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb90:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb94:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb98:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fb9c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fba8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbac:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbb8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbbc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbc8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbcc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbd8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbdc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbe8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbec:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbf8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fbfc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc00:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc04:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc08:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc0c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc10:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc14:	b	1fdb0 <myhtml_insertion_mode_in_head@@Base+0x344>
   1fc18:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc1c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc20:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc24:	b	1fe78 <myhtml_insertion_mode_in_head@@Base+0x40c>
   1fc28:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc2c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc30:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc34:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc38:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc3c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc40:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc44:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc48:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc4c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc50:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc54:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc58:	b	1fd54 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fc5c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc60:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc64:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc68:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc6c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc70:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc74:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc78:	b	1fd54 <myhtml_insertion_mode_in_head@@Base+0x2e8>
   1fc7c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc80:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc84:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc88:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc8c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc90:	b	1fdbc <myhtml_insertion_mode_in_head@@Base+0x350>
   1fc94:	b	1fde0 <myhtml_insertion_mode_in_head@@Base+0x374>
   1fc98:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fc9c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fca8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcac:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcb8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcbc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcc8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fccc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcd8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcdc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fce0:	b	1fe80 <myhtml_insertion_mode_in_head@@Base+0x414>
   1fce4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fce8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcec:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf0:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf4:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcf8:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fcfc:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd00:	b	1fdbc <myhtml_insertion_mode_in_head@@Base+0x350>
   1fd04:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd08:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd0c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd10:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd14:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd18:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd1c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd20:	b	1fe28 <myhtml_insertion_mode_in_head@@Base+0x3bc>
   1fd24:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd28:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd2c:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd30:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd34:	b	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd38:	b	1fe04 <myhtml_insertion_mode_in_head@@Base+0x398>
   1fd3c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd40:	mov	r3, #5
   1fd44:	mov	r0, #0
   1fd48:	str	r3, [r4, #168]	; 0xa8
   1fd4c:	add	sp, sp, #12
   1fd50:	pop	{r4, r5, r6, r7, pc}
   1fd54:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fd58:	mov	r0, r4
   1fd5c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd60:	mov	r0, #0
   1fd64:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fd68:	ldr	r3, [r1, #48]	; 0x30
   1fd6c:	tst	r3, #8
   1fd70:	bne	1fef0 <myhtml_insertion_mode_in_head@@Base+0x484>
   1fd74:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   1fd78:	subs	r1, r0, #0
   1fd7c:	beq	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fd80:	mov	r0, r4
   1fd84:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fd88:	mov	r0, r4
   1fd8c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   1fd90:	mov	r3, #5
   1fd94:	mov	r0, #1
   1fd98:	str	r3, [r4, #168]	; 0xa8
   1fd9c:	add	sp, sp, #12
   1fda0:	pop	{r4, r5, r6, r7, pc}
   1fda4:	sub	r5, r5, #23
   1fda8:	cmp	r5, #1
   1fdac:	bls	1fd88 <myhtml_insertion_mode_in_head@@Base+0x31c>
   1fdb0:	mov	r0, #0
   1fdb4:	add	sp, sp, #12
   1fdb8:	pop	{r4, r5, r6, r7, pc}
   1fdbc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fdc0:	ldr	r1, [r4, #168]	; 0xa8
   1fdc4:	mov	r2, #7
   1fdc8:	mov	r3, #4
   1fdcc:	str	r1, [r4, #172]	; 0xac
   1fdd0:	str	r2, [r4, #168]	; 0xa8
   1fdd4:	str	r3, [r4, #164]	; 0xa4
   1fdd8:	mov	r0, #0
   1fddc:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fde0:	ldr	r0, [r0, #180]	; 0xb4
   1fde4:	ands	r6, r0, #1
   1fde8:	mov	r0, r4
   1fdec:	bne	1fdbc <myhtml_insertion_mode_in_head@@Base+0x350>
   1fdf0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fdf4:	mov	r3, #4
   1fdf8:	mov	r0, r6
   1fdfc:	str	r3, [r4, #168]	; 0xa8
   1fe00:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe04:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe08:	ldr	r1, [r4, #168]	; 0xa8
   1fe0c:	mov	r2, #7
   1fe10:	mov	r3, #2
   1fe14:	str	r1, [r4, #172]	; 0xac
   1fe18:	str	r2, [r4, #168]	; 0xa8
   1fe1c:	str	r3, [r4, #164]	; 0xa4
   1fe20:	mov	r0, #0
   1fe24:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe28:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   1fe2c:	ldr	r3, [r4]
   1fe30:	mov	r0, r4
   1fe34:	ldr	r1, [r3, #36]	; 0x24
   1fe38:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   1fe3c:	ldr	r3, [r4, #180]	; 0xb4
   1fe40:	ldr	r2, [r4, #180]	; 0xb4
   1fe44:	and	r3, r3, #2
   1fe48:	eor	r3, r3, r2
   1fe4c:	mov	r1, #17
   1fe50:	mov	r0, r4
   1fe54:	str	r3, [r4, #180]	; 0xb4
   1fe58:	str	r1, [r4, #168]	; 0xa8
   1fe5c:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1fe60:	mov	r0, #0
   1fe64:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe68:	mov	r2, #0
   1fe6c:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   1fe70:	mov	r0, #0
   1fe74:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe78:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   1fe7c:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fe80:	add	r2, sp, #4
   1fe84:	mov	r1, #0
   1fe88:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   1fe8c:	mov	r7, r0
   1fe90:	mov	r0, r4
   1fe94:	bl	ffe0 <myhtml_tree_node_create@plt>
   1fe98:	mov	r1, #112	; 0x70
   1fe9c:	mov	r2, #1
   1fea0:	mov	r3, #3
   1fea4:	mov	r6, r0
   1fea8:	str	r5, [r0, #32]
   1feac:	stmib	r6, {r1, r2}
   1feb0:	str	r3, [r6]
   1feb4:	ldr	r2, [sp, #4]
   1feb8:	mov	r0, r7
   1febc:	mov	r1, r6
   1fec0:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   1fec4:	mov	r1, r6
   1fec8:	mov	r0, r4
   1fecc:	bl	10988 <myhtml_tree_open_elements_append@plt>
   1fed0:	ldr	r1, [r4, #168]	; 0xa8
   1fed4:	mov	r2, #7
   1fed8:	mov	r3, #5
   1fedc:	str	r1, [r4, #172]	; 0xac
   1fee0:	str	r2, [r4, #168]	; 0xa8
   1fee4:	str	r3, [r4, #164]	; 0xa4
   1fee8:	mov	r0, #0
   1feec:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>
   1fef0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   1fef4:	mov	r0, #0
   1fef8:	b	1fb08 <myhtml_insertion_mode_in_head@@Base+0x9c>

0001fefc <myhtml_insertion_mode_in_template@@Base>:
   1fefc:	ldr	r3, [r1, #48]	; 0x30
   1ff00:	mov	r2, r1
   1ff04:	ands	r3, r3, #1
   1ff08:	beq	1ff20 <myhtml_insertion_mode_in_template@@Base+0x24>
   1ff0c:	ldr	r3, [r1]
   1ff10:	cmp	r3, #128	; 0x80
   1ff14:	beq	1ffc4 <myhtml_insertion_mode_in_template@@Base+0xc8>
   1ff18:	mov	r0, #0
   1ff1c:	bx	lr
   1ff20:	ldr	ip, [r1]
   1ff24:	push	{r4, lr}
   1ff28:	cmp	ip, #92	; 0x5c
   1ff2c:	mov	lr, r0
   1ff30:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ff34:	mov	r4, r0
   1ff38:	bls	1ffa4 <myhtml_insertion_mode_in_template@@Base+0xa8>
   1ff3c:	cmp	ip, #130	; 0x82
   1ff40:	beq	20074 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ff44:	bls	20004 <myhtml_insertion_mode_in_template@@Base+0x108>
   1ff48:	cmp	ip, #134	; 0x86
   1ff4c:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ff50:	bls	20064 <myhtml_insertion_mode_in_template@@Base+0x168>
   1ff54:	cmp	ip, #135	; 0x87
   1ff58:	beq	20098 <myhtml_insertion_mode_in_template@@Base+0x19c>
   1ff5c:	cmp	ip, #251	; 0xfb
   1ff60:	bne	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   1ff64:	mov	r1, #128	; 0x80
   1ff68:	mov	r2, #1
   1ff6c:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   1ff70:	subs	r1, r0, #0
   1ff74:	beq	20100 <myhtml_insertion_mode_in_template@@Base+0x204>
   1ff78:	mov	r2, #0
   1ff7c:	mov	r0, r4
   1ff80:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   1ff84:	mov	r0, r4
   1ff88:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   1ff8c:	mov	r0, r4
   1ff90:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1ff94:	mov	r0, r4
   1ff98:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   1ff9c:	mov	r0, #1
   1ffa0:	pop	{r4, pc}
   1ffa4:	cmp	ip, #19
   1ffa8:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   1ffac:	bhi	1ffc8 <myhtml_insertion_mode_in_template@@Base+0xcc>
   1ffb0:	cmp	ip, #1
   1ffb4:	bcc	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   1ffb8:	cmp	ip, #3
   1ffbc:	bhi	200f0 <myhtml_insertion_mode_in_template@@Base+0x1f4>
   1ffc0:	pop	{r4, lr}
   1ffc4:	b	10640 <myhtml_insertion_mode_in_body@plt>
   1ffc8:	cmp	ip, #32
   1ffcc:	beq	20074 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ffd0:	bhi	200dc <myhtml_insertion_mode_in_template@@Base+0x1e0>
   1ffd4:	cmp	ip, #27
   1ffd8:	beq	20074 <myhtml_insertion_mode_in_template@@Base+0x178>
   1ffdc:	cmp	ip, #31
   1ffe0:	bne	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   1ffe4:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   1ffe8:	mov	r0, r4
   1ffec:	mov	r1, #11
   1fff0:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   1fff4:	mov	r3, #11
   1fff8:	str	r3, [r4, #168]	; 0xa8
   1fffc:	mov	r0, #1
   20000:	pop	{r4, pc}
   20004:	cmp	ip, #126	; 0x7e
   20008:	beq	20074 <myhtml_insertion_mode_in_template@@Base+0x178>
   2000c:	bls	20044 <myhtml_insertion_mode_in_template@@Base+0x148>
   20010:	cmp	ip, #127	; 0x7f
   20014:	beq	200b8 <myhtml_insertion_mode_in_template@@Base+0x1bc>
   20018:	cmp	ip, #128	; 0x80
   2001c:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   20020:	mov	r0, r4
   20024:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   20028:	mov	r0, r4
   2002c:	mov	r1, #6
   20030:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   20034:	mov	r3, #6
   20038:	str	r3, [r4, #168]	; 0xa8
   2003c:	mov	r0, #1
   20040:	pop	{r4, pc}
   20044:	cmp	ip, #112	; 0x70
   20048:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   2004c:	cmp	ip, #120	; 0x78
   20050:	bne	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   20054:	mov	r0, lr
   20058:	mov	r1, r2
   2005c:	pop	{r4, lr}
   20060:	b	10058 <myhtml_insertion_mode_in_head@plt>
   20064:	cmp	ip, #131	; 0x83
   20068:	beq	200b8 <myhtml_insertion_mode_in_template@@Base+0x1bc>
   2006c:	cmp	ip, #132	; 0x84
   20070:	bne	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   20074:	mov	r0, r4
   20078:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   2007c:	mov	r0, r4
   20080:	mov	r1, #8
   20084:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   20088:	mov	r3, #8
   2008c:	str	r3, [r4, #168]	; 0xa8
   20090:	mov	r0, #1
   20094:	pop	{r4, pc}
   20098:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   2009c:	mov	r0, r4
   200a0:	mov	r1, #12
   200a4:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   200a8:	mov	r3, #12
   200ac:	str	r3, [r4, #168]	; 0xa8
   200b0:	mov	r0, #1
   200b4:	pop	{r4, pc}
   200b8:	mov	r0, r4
   200bc:	bl	109dc <myhtml_tree_template_insertion_pop@plt>
   200c0:	mov	r0, r4
   200c4:	mov	r1, #13
   200c8:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   200cc:	mov	r3, #13
   200d0:	str	r3, [r4, #168]	; 0xa8
   200d4:	mov	r0, #1
   200d8:	pop	{r4, pc}
   200dc:	cmp	ip, #78	; 0x4e
   200e0:	beq	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   200e4:	cmp	ip, #86	; 0x56
   200e8:	bne	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   200ec:	b	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   200f0:	sub	ip, ip, #15
   200f4:	cmp	ip, #1
   200f8:	bhi	20020 <myhtml_insertion_mode_in_template@@Base+0x124>
   200fc:	b	20054 <myhtml_insertion_mode_in_template@@Base+0x158>
   20100:	mov	r0, r4
   20104:	bl	10310 <myhtml_rules_stop_parsing@plt>
   20108:	mov	r0, #0
   2010c:	pop	{r4, pc}

00020110 <myhtml_insertion_mode_in_head_noscript@@Base>:
   20110:	ldr	r3, [r1, #48]	; 0x30
   20114:	push	{r4, lr}
   20118:	tst	r3, #1
   2011c:	mov	r4, r0
   20120:	ldr	r3, [r1]
   20124:	beq	2014c <myhtml_insertion_mode_in_head_noscript@@Base+0x3c>
   20128:	cmp	r3, #24
   2012c:	beq	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20130:	cmp	r3, #93	; 0x5d
   20134:	bne	2035c <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   20138:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2013c:	mov	r3, #3
   20140:	str	r3, [r4, #168]	; 0xa8
   20144:	mov	r0, #0
   20148:	pop	{r4, pc}
   2014c:	sub	r3, r3, #1
   20150:	cmp	r3, #119	; 0x77
   20154:	addls	pc, pc, r3, lsl #2
   20158:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2015c:	b	2033c <myhtml_insertion_mode_in_head_noscript@@Base+0x22c>
   20160:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20164:	b	2035c <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   20168:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2016c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20170:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20174:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20178:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2017c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20180:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20184:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20188:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2018c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20190:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20194:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20198:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   2019c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201a0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201a4:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   201a8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201ac:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201b8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201bc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201c8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201cc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201d8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201dc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201e8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201ec:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201f8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   201fc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20200:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20204:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20208:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2020c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20210:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20214:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20218:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2021c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20220:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20224:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20228:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2022c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20230:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20234:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20238:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2023c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20240:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20244:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20248:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2024c:	b	2035c <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   20250:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20254:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20258:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2025c:	b	2036c <myhtml_insertion_mode_in_head_noscript@@Base+0x25c>
   20260:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20264:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20268:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2026c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20270:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20274:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20278:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2027c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20280:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20284:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20288:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2028c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20290:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20294:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20298:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2029c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202a8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202ac:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202b0:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   202b4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202b8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202bc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202c0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202c4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202c8:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   202cc:	b	2035c <myhtml_insertion_mode_in_head_noscript@@Base+0x24c>
   202d0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202d4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202d8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202dc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202e8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202ec:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f0:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f4:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202f8:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   202fc:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20300:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20304:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20308:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2030c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20310:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20314:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20318:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2031c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20320:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20324:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20328:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   2032c:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20330:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20334:	b	20348 <myhtml_insertion_mode_in_head_noscript@@Base+0x238>
   20338:	b	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   2033c:	ldr	r3, [r1, #48]	; 0x30
   20340:	tst	r3, #8
   20344:	bne	20364 <myhtml_insertion_mode_in_head_noscript@@Base+0x254>
   20348:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2034c:	mov	r3, #3
   20350:	str	r3, [r4, #168]	; 0xa8
   20354:	mov	r0, #1
   20358:	pop	{r4, pc}
   2035c:	mov	r0, #0
   20360:	pop	{r4, pc}
   20364:	pop	{r4, lr}
   20368:	b	10058 <myhtml_insertion_mode_in_head@plt>
   2036c:	pop	{r4, lr}
   20370:	b	10640 <myhtml_insertion_mode_in_body@plt>

00020374 <myhtml_insertion_mode_after_head@@Base>:
   20374:	ldr	r3, [r1, #48]	; 0x30
   20378:	push	{r4, r5, r6, lr}
   2037c:	tst	r3, #1
   20380:	mov	r4, r1
   20384:	mov	r5, r0
   20388:	ldr	r3, [r1]
   2038c:	beq	203ac <myhtml_insertion_mode_after_head@@Base+0x38>
   20390:	cmp	r3, #65	; 0x41
   20394:	beq	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20398:	bls	2061c <myhtml_insertion_mode_after_head@@Base+0x2a8>
   2039c:	cmp	r3, #128	; 0x80
   203a0:	bne	20628 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   203a4:	pop	{r4, r5, r6, lr}
   203a8:	b	10058 <myhtml_insertion_mode_in_head@plt>
   203ac:	sub	r3, r3, #1
   203b0:	cmp	r3, #133	; 0x85
   203b4:	addls	pc, pc, r3, lsl #2
   203b8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203bc:	b	205d4 <myhtml_insertion_mode_after_head@@Base+0x260>
   203c0:	b	20634 <myhtml_insertion_mode_after_head@@Base+0x2c0>
   203c4:	b	20628 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   203c8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203cc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203d8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203dc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203e8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203ec:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203f0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   203f4:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   203f8:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   203fc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20400:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20404:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20408:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2040c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20410:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20414:	b	20674 <myhtml_insertion_mode_after_head@@Base+0x300>
   20418:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2041c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20420:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20424:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20428:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2042c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20430:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20434:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20438:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2043c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20440:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20444:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20448:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2044c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20450:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20454:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20458:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2045c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20460:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20464:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20468:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2046c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20470:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20474:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20478:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2047c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20480:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20484:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20488:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2048c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20490:	b	206a0 <myhtml_insertion_mode_after_head@@Base+0x32c>
   20494:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20498:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2049c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204a8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204ac:	b	20628 <myhtml_insertion_mode_after_head@@Base+0x2b4>
   204b0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204b4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204b8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204bc:	b	2066c <myhtml_insertion_mode_after_head@@Base+0x2f8>
   204c0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204c4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204c8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204cc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204d8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204dc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204e8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204ec:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204f0:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   204f4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204f8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   204fc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20500:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20504:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20508:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2050c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20510:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   20514:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20518:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2051c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20520:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20524:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20528:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   2052c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20530:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20534:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20538:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2053c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20540:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20544:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20548:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2054c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20550:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20554:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20558:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2055c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20560:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20564:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20568:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2056c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20570:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20574:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20578:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   2057c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20580:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20584:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20588:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   2058c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20590:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20594:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20598:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   2059c:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205a8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205ac:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205b0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205b4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205b8:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   205bc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c0:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c4:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205c8:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205cc:	b	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205d0:	b	20644 <myhtml_insertion_mode_after_head@@Base+0x2d0>
   205d4:	ldr	r3, [r1, #48]	; 0x30
   205d8:	tst	r3, #8
   205dc:	bne	206b4 <myhtml_insertion_mode_after_head@@Base+0x340>
   205e0:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   205e4:	subs	r1, r0, #0
   205e8:	beq	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   205ec:	mov	r0, r5
   205f0:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   205f4:	mov	r2, #1
   205f8:	mov	r1, #23
   205fc:	mov	r0, r5
   20600:	bl	10970 <myhtml_tree_node_insert@plt>
   20604:	mov	r3, #6
   20608:	str	r3, [r5, #168]	; 0xa8
   2060c:	mov	r3, #1
   20610:	str	r0, [r5, #100]	; 0x64
   20614:	mov	r0, r3
   20618:	pop	{r4, r5, r6, pc}
   2061c:	sub	r3, r3, #23
   20620:	cmp	r3, #1
   20624:	bls	205f4 <myhtml_insertion_mode_after_head@@Base+0x280>
   20628:	mov	r3, #0
   2062c:	mov	r0, r3
   20630:	pop	{r4, r5, r6, pc}
   20634:	mov	r2, #0
   20638:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   2063c:	mov	r3, #0
   20640:	b	20614 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   20644:	ldr	r1, [r0, #92]	; 0x5c
   20648:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2064c:	mov	r1, r4
   20650:	mov	r0, r5
   20654:	bl	10058 <myhtml_insertion_mode_in_head@plt>
   20658:	ldr	r1, [r5, #92]	; 0x5c
   2065c:	mov	r0, r5
   20660:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   20664:	mov	r3, #0
   20668:	b	20614 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   2066c:	pop	{r4, r5, r6, lr}
   20670:	b	10640 <myhtml_insertion_mode_in_body@plt>
   20674:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20678:	ldr	r3, [r5, #180]	; 0xb4
   2067c:	ldr	r2, [r5, #180]	; 0xb4
   20680:	and	r3, r3, #2
   20684:	eor	r3, r3, r2
   20688:	mov	r2, #6
   2068c:	str	r3, [r5, #180]	; 0xb4
   20690:	str	r2, [r5, #168]	; 0xa8
   20694:	mov	r3, #0
   20698:	str	r0, [r5, #100]	; 0x64
   2069c:	b	20614 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   206a0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   206a4:	mov	r3, #19
   206a8:	str	r3, [r5, #168]	; 0xa8
   206ac:	mov	r3, #0
   206b0:	b	20614 <myhtml_insertion_mode_after_head@@Base+0x2a0>
   206b4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   206b8:	mov	r3, #0
   206bc:	b	20614 <myhtml_insertion_mode_after_head@@Base+0x2a0>

000206c0 <myhtml_insertion_mode_in_table@@Base>:
   206c0:	ldr	r3, [r1, #48]	; 0x30
   206c4:	push	{r4, r5, r6, r7, lr}
   206c8:	ands	r4, r3, #1
   206cc:	sub	sp, sp, #12
   206d0:	mov	r6, r1
   206d4:	mov	r5, r0
   206d8:	beq	208b4 <myhtml_insertion_mode_in_table@@Base+0x1f4>
   206dc:	ldr	r3, [r1]
   206e0:	sub	r3, r3, #23
   206e4:	cmp	r3, #112	; 0x70
   206e8:	addls	pc, pc, r3, lsl #2
   206ec:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   206f0:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   206f4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   206f8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   206fc:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20700:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20704:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20708:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2070c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20710:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20714:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20718:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2071c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20720:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20724:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20728:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2072c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20730:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20734:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20738:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2073c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20740:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20744:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20748:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2074c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20750:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20754:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20758:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2075c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20760:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20764:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20768:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2076c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20770:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20774:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20778:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2077c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20780:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20784:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20788:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2078c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20790:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20794:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20798:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   2079c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207a8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207ac:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207b8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207bc:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207c8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207cc:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207d8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207dc:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207e8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207ec:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f0:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f4:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207f8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   207fc:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20800:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20804:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20808:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2080c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20810:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20814:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20818:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2081c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20820:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20824:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20828:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2082c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20830:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20834:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20838:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2083c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20840:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20844:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20848:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2084c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20850:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20854:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20858:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2085c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20860:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20864:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20868:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2086c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20870:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20874:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20878:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2087c:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20880:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20884:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20888:	b	20968 <myhtml_insertion_mode_in_table@@Base+0x2a8>
   2088c:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20890:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20894:	b	20954 <myhtml_insertion_mode_in_table@@Base+0x294>
   20898:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   2089c:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   208a0:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   208a4:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   208a8:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   208ac:	b	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   208b0:	b	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   208b4:	ldr	r7, [r1]
   208b8:	cmp	r7, #120	; 0x78
   208bc:	beq	20954 <myhtml_insertion_mode_in_table@@Base+0x294>
   208c0:	bhi	2092c <myhtml_insertion_mode_in_table@@Base+0x26c>
   208c4:	cmp	r7, #31
   208c8:	beq	20bcc <myhtml_insertion_mode_in_table@@Base+0x50c>
   208cc:	bhi	2099c <myhtml_insertion_mode_in_table@@Base+0x2dc>
   208d0:	cmp	r7, #2
   208d4:	beq	20bbc <myhtml_insertion_mode_in_table@@Base+0x4fc>
   208d8:	bls	20b04 <myhtml_insertion_mode_in_table@@Base+0x444>
   208dc:	cmp	r7, #3
   208e0:	moveq	r0, r4
   208e4:	beq	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   208e8:	cmp	r7, #27
   208ec:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   208f0:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   208f4:	mov	r1, r6
   208f8:	mov	r0, r5
   208fc:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20900:	ldr	r3, [r5]
   20904:	mov	r0, r5
   20908:	ldr	r1, [r3, #36]	; 0x24
   2090c:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   20910:	mov	r3, #10
   20914:	mov	r0, r4
   20918:	str	r3, [r5, #168]	; 0xa8
   2091c:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20920:	mov	r0, #0
   20924:	add	sp, sp, #12
   20928:	pop	{r4, r5, r6, r7, pc}
   2092c:	cmp	r7, #130	; 0x82
   20930:	beq	20b98 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   20934:	bhi	20a40 <myhtml_insertion_mode_in_table@@Base+0x380>
   20938:	cmp	r7, #126	; 0x7e
   2093c:	beq	20b98 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   20940:	bls	20a70 <myhtml_insertion_mode_in_table@@Base+0x3b0>
   20944:	cmp	r7, #127	; 0x7f
   20948:	beq	20ab4 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   2094c:	cmp	r7, #128	; 0x80
   20950:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20954:	mov	r1, r6
   20958:	mov	r0, r5
   2095c:	add	sp, sp, #12
   20960:	pop	{r4, r5, r6, r7, lr}
   20964:	b	10058 <myhtml_insertion_mode_in_head@plt>
   20968:	mov	r1, #125	; 0x7d
   2096c:	mov	r3, #64	; 0x40
   20970:	mov	r2, #1
   20974:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20978:	subs	r1, r0, #0
   2097c:	beq	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20980:	mov	r2, #0
   20984:	mov	r0, r5
   20988:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   2098c:	mov	r0, r5
   20990:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20994:	mov	r0, #0
   20998:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   2099c:	cmp	r7, #52	; 0x34
   209a0:	beq	20b5c <myhtml_insertion_mode_in_table@@Base+0x49c>
   209a4:	bls	20adc <myhtml_insertion_mode_in_table@@Base+0x41c>
   209a8:	cmp	r7, #70	; 0x46
   209ac:	bne	20a14 <myhtml_insertion_mode_in_table@@Base+0x354>
   209b0:	ldr	r0, [r0, #8]
   209b4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   209b8:	mov	r2, #6
   209bc:	ldr	r3, [pc, #556]	; 20bf0 <myhtml_insertion_mode_in_table@@Base+0x530>
   209c0:	ldr	r0, [r5, #8]
   209c4:	str	r2, [sp, #4]
   209c8:	ldr	r2, [pc, #548]	; 20bf4 <myhtml_insertion_mode_in_table@@Base+0x534>
   209cc:	add	r3, pc, r3
   209d0:	str	r3, [sp]
   209d4:	add	r2, pc, r2
   209d8:	mov	r3, #4
   209dc:	mov	r1, r6
   209e0:	bl	fd34 <myhtml_token_attr_match_case@plt>
   209e4:	cmp	r0, #0
   209e8:	beq	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   209ec:	mov	r1, r6
   209f0:	mov	r0, r5
   209f4:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   209f8:	mov	r0, r5
   209fc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20a00:	ldr	r3, [r6, #48]	; 0x30
   20a04:	mov	r0, r4
   20a08:	orr	r3, r3, #2
   20a0c:	str	r3, [r6, #48]	; 0x30
   20a10:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20a14:	cmp	r7, #112	; 0x70
   20a18:	beq	20954 <myhtml_insertion_mode_in_table@@Base+0x294>
   20a1c:	mov	r3, #1
   20a20:	mov	r1, r6
   20a24:	strb	r3, [r5, #188]	; 0xbc
   20a28:	mov	r0, r5
   20a2c:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   20a30:	mov	r0, #0
   20a34:	strb	r0, [r5, #188]	; 0xbc
   20a38:	add	sp, sp, #12
   20a3c:	pop	{r4, r5, r6, r7, pc}
   20a40:	cmp	r7, #132	; 0x84
   20a44:	beq	20b98 <myhtml_insertion_mode_in_table@@Base+0x4d8>
   20a48:	bcc	20ab4 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   20a4c:	cmp	r7, #135	; 0x87
   20a50:	beq	20ab4 <myhtml_insertion_mode_in_table@@Base+0x3f4>
   20a54:	cmp	r7, #251	; 0xfb
   20a58:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20a5c:	mov	r1, r6
   20a60:	mov	r0, r5
   20a64:	add	sp, sp, #12
   20a68:	pop	{r4, r5, r6, r7, lr}
   20a6c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   20a70:	cmp	r7, #125	; 0x7d
   20a74:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20a78:	mov	r3, #64	; 0x40
   20a7c:	mov	r2, #1
   20a80:	mov	r1, r7
   20a84:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20a88:	cmp	r0, #0
   20a8c:	beq	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20a90:	mov	r3, r4
   20a94:	mov	r1, r7
   20a98:	mov	r2, #1
   20a9c:	mov	r0, r5
   20aa0:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   20aa4:	mov	r0, r5
   20aa8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   20aac:	mov	r0, #1
   20ab0:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20ab4:	mov	r0, r5
   20ab8:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20abc:	mov	r2, #1
   20ac0:	mov	r1, #126	; 0x7e
   20ac4:	mov	r0, r5
   20ac8:	bl	10970 <myhtml_tree_node_insert@plt>
   20acc:	mov	r3, #12
   20ad0:	str	r3, [r5, #168]	; 0xa8
   20ad4:	mov	r0, #1
   20ad8:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20adc:	cmp	r7, #32
   20ae0:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20ae4:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20ae8:	mov	r1, r6
   20aec:	mov	r0, r5
   20af0:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20af4:	mov	r3, #11
   20af8:	mov	r0, r4
   20afc:	str	r3, [r5, #168]	; 0xa8
   20b00:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20b04:	cmp	r7, #1
   20b08:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b0c:	bl	10628 <myhtml_tree_current_node@plt>
   20b10:	ldr	r3, [r0, #4]
   20b14:	sub	r3, r3, #125	; 0x7d
   20b18:	cmp	r3, #10
   20b1c:	bhi	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b20:	ldr	r2, [pc, #208]	; 20bf8 <myhtml_insertion_mode_in_table@@Base+0x538>
   20b24:	mvn	r3, r2, lsr r3
   20b28:	tst	r3, #1
   20b2c:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b30:	ldr	r4, [r0, #8]
   20b34:	cmp	r4, #1
   20b38:	bne	20a1c <myhtml_insertion_mode_in_table@@Base+0x35c>
   20b3c:	ldr	r0, [r5, #136]	; 0x88
   20b40:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   20b44:	ldr	r2, [r5, #168]	; 0xa8
   20b48:	mov	r3, #9
   20b4c:	mov	r0, r4
   20b50:	str	r2, [r5, #172]	; 0xac
   20b54:	str	r3, [r5, #168]	; 0xa8
   20b58:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20b5c:	mov	r3, r4
   20b60:	mov	r2, #1
   20b64:	mov	r1, #128	; 0x80
   20b68:	bl	107fc <myhtml_tree_open_elements_find_by_tag_idx@plt>
   20b6c:	ldr	r3, [r5, #104]	; 0x68
   20b70:	cmp	r0, #0
   20b74:	cmpeq	r3, #0
   20b78:	bne	20920 <myhtml_insertion_mode_in_table@@Base+0x260>
   20b7c:	mov	r1, r6
   20b80:	mov	r0, r5
   20b84:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20b88:	str	r0, [r5, #104]	; 0x68
   20b8c:	mov	r0, r5
   20b90:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20b94:	b	20a5c <myhtml_insertion_mode_in_table@@Base+0x39c>
   20b98:	mov	r0, r5
   20b9c:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20ba0:	mov	r1, r6
   20ba4:	mov	r0, r5
   20ba8:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20bac:	mov	r3, #12
   20bb0:	str	r3, [r5, #168]	; 0xa8
   20bb4:	mov	r0, #0
   20bb8:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bbc:	mov	r2, r4
   20bc0:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   20bc4:	mov	r0, r4
   20bc8:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bcc:	bl	10fd0 <myhtml_tree_clear_stack_back_table_context@plt>
   20bd0:	mov	r2, #1
   20bd4:	mov	r1, #32
   20bd8:	mov	r0, r5
   20bdc:	bl	10970 <myhtml_tree_node_insert@plt>
   20be0:	mov	r3, #11
   20be4:	str	r3, [r5, #168]	; 0xa8
   20be8:	mov	r0, #1
   20bec:	b	20924 <myhtml_insertion_mode_in_table@@Base+0x264>
   20bf0:	muleq	sp, r4, r0
   20bf4:	andeq	r6, r1, ip, asr #23
   20bf8:	andeq	r0, r0, r3, lsr #9

00020bfc <myhtml_insertion_mode_in_table_body@@Base>:
   20bfc:	ldr	r3, [r1, #48]	; 0x30
   20c00:	push	{r4, r5, r6, lr}
   20c04:	ands	r4, r3, #1
   20c08:	sub	sp, sp, #8
   20c0c:	mov	r5, r0
   20c10:	beq	20dec <myhtml_insertion_mode_in_table_body@@Base+0x1f0>
   20c14:	ldr	r2, [r1]
   20c18:	sub	r3, r2, #23
   20c1c:	cmp	r3, #112	; 0x70
   20c20:	addls	pc, pc, r3, lsl #2
   20c24:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c28:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c2c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c30:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c34:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c38:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c3c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c40:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c44:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c48:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c4c:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20c50:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c54:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c58:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c5c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c60:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c64:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c68:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c6c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c70:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c74:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c78:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c7c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c80:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c84:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c88:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c8c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c90:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c94:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c98:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20c9c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ca8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cac:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cb8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cbc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cc8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ccc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cd0:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20cd4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cd8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cdc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20ce8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cec:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cf8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20cfc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d00:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d04:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d08:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d0c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d10:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d14:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d18:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d1c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d20:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d24:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d28:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d2c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d30:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d34:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d38:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d3c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d40:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d44:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d48:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d4c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d50:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d54:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d58:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d5c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d60:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d64:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d68:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d6c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d70:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d74:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d78:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d7c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d80:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d84:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d88:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d8c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d90:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d94:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d98:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20d9c:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20da8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dac:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20db8:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dbc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dc0:	b	20e58 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20dc4:	b	20f08 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20dc8:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20dcc:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dd0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20dd4:	b	20f08 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20dd8:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20ddc:	b	20f08 <myhtml_insertion_mode_in_table_body@@Base+0x30c>
   20de0:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20de4:	b	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20de8:	b	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20dec:	ldr	r3, [r1]
   20df0:	cmp	r3, #127	; 0x7f
   20df4:	beq	20f40 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   20df8:	bls	20e40 <myhtml_insertion_mode_in_table_body@@Base+0x244>
   20dfc:	cmp	r3, #131	; 0x83
   20e00:	beq	20f40 <myhtml_insertion_mode_in_table_body@@Base+0x344>
   20e04:	bls	20f6c <myhtml_insertion_mode_in_table_body@@Base+0x370>
   20e08:	cmp	r3, #132	; 0x84
   20e0c:	beq	20e58 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20e10:	cmp	r3, #135	; 0x87
   20e14:	bne	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20e18:	str	r1, [sp, #4]
   20e1c:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20e20:	ldr	r1, [sp, #4]
   20e24:	mov	r0, r5
   20e28:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   20e2c:	mov	r3, #13
   20e30:	mov	r0, r4
   20e34:	str	r3, [r5, #168]	; 0xa8
   20e38:	add	sp, sp, #8
   20e3c:	pop	{r4, r5, r6, pc}
   20e40:	cmp	r3, #32
   20e44:	bhi	20ef0 <myhtml_insertion_mode_in_table_body@@Base+0x2f4>
   20e48:	cmp	r3, #31
   20e4c:	bcs	20e58 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20e50:	cmp	r3, #27
   20e54:	bne	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20e58:	mov	r3, #64	; 0x40
   20e5c:	mov	r2, #1
   20e60:	mov	r1, #126	; 0x7e
   20e64:	mov	r0, r5
   20e68:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e6c:	mov	r3, #64	; 0x40
   20e70:	mov	r2, #1
   20e74:	mov	r1, #130	; 0x82
   20e78:	mov	r4, r0
   20e7c:	mov	r0, r5
   20e80:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e84:	mov	r3, #64	; 0x40
   20e88:	mov	r2, #1
   20e8c:	mov	r1, #132	; 0x84
   20e90:	mov	r6, r0
   20e94:	mov	r0, r5
   20e98:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20e9c:	cmp	r4, #0
   20ea0:	cmpeq	r6, #0
   20ea4:	moveq	r4, #1
   20ea8:	movne	r4, #0
   20eac:	cmp	r0, #0
   20eb0:	movne	r4, #0
   20eb4:	andeq	r4, r4, #1
   20eb8:	cmp	r4, #0
   20ebc:	bne	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20ec0:	mov	r0, r5
   20ec4:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20ec8:	mov	r0, r5
   20ecc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20ed0:	mov	r0, #1
   20ed4:	mov	r3, #8
   20ed8:	str	r3, [r5, #168]	; 0xa8
   20edc:	add	sp, sp, #8
   20ee0:	pop	{r4, r5, r6, pc}
   20ee4:	mov	r0, #0
   20ee8:	add	sp, sp, #8
   20eec:	pop	{r4, r5, r6, pc}
   20ef0:	cmp	r3, #126	; 0x7e
   20ef4:	beq	20e58 <myhtml_insertion_mode_in_table_body@@Base+0x25c>
   20ef8:	mov	r0, r5
   20efc:	add	sp, sp, #8
   20f00:	pop	{r4, r5, r6, lr}
   20f04:	b	10178 <myhtml_insertion_mode_in_table@plt>
   20f08:	mov	r1, r2
   20f0c:	mov	r3, #64	; 0x40
   20f10:	mov	r2, #1
   20f14:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   20f18:	cmp	r0, #0
   20f1c:	beq	20ee4 <myhtml_insertion_mode_in_table_body@@Base+0x2e8>
   20f20:	mov	r0, r5
   20f24:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20f28:	mov	r0, r5
   20f2c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   20f30:	mov	r3, #8
   20f34:	str	r3, [r5, #168]	; 0xa8
   20f38:	mov	r0, #0
   20f3c:	b	20edc <myhtml_insertion_mode_in_table_body@@Base+0x2e0>
   20f40:	mov	r0, r5
   20f44:	bl	10394 <myhtml_tree_clear_stack_back_table_body_context@plt>
   20f48:	mov	r2, #1
   20f4c:	mov	r1, #135	; 0x87
   20f50:	mov	r0, r5
   20f54:	bl	10970 <myhtml_tree_node_insert@plt>
   20f58:	mov	r3, #13
   20f5c:	mov	r0, #1
   20f60:	str	r3, [r5, #168]	; 0xa8
   20f64:	add	sp, sp, #8
   20f68:	pop	{r4, r5, r6, pc}
   20f6c:	cmp	r3, #130	; 0x82
   20f70:	bne	20ef8 <myhtml_insertion_mode_in_table_body@@Base+0x2fc>
   20f74:	b	20e58 <myhtml_insertion_mode_in_table_body@@Base+0x25c>

00020f78 <myhtml_insertion_mode_in_row@@Base>:
   20f78:	ldr	r3, [r1, #48]	; 0x30
   20f7c:	push	{r4, lr}
   20f80:	tst	r3, #1
   20f84:	sub	sp, sp, #8
   20f88:	mov	r4, r0
   20f8c:	beq	21168 <myhtml_insertion_mode_in_row@@Base+0x1f0>
   20f90:	ldr	r2, [r1]
   20f94:	sub	r3, r2, #23
   20f98:	cmp	r3, #112	; 0x70
   20f9c:	addls	pc, pc, r3, lsl #2
   20fa0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fa4:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   20fa8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fac:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fb0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fb4:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   20fb8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fbc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fc0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fc4:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   20fc8:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   20fcc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fd8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fdc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fe8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20fec:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ff8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   20ffc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21000:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21004:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21008:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2100c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21010:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21014:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21018:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2101c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21020:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21024:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21028:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2102c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21030:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21034:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21038:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2103c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21040:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21044:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21048:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2104c:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   21050:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21054:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21058:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2105c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21060:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21064:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21068:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2106c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21070:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21074:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21078:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2107c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21080:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21084:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21088:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2108c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21090:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21094:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21098:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2109c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210a8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210ac:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210b8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210bc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210c8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210cc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210d8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210dc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210e8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210ec:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f0:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f4:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210f8:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   210fc:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21100:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21104:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21108:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2110c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21110:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21114:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21118:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2111c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21120:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21124:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21128:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2112c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21130:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21134:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21138:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2113c:	b	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   21140:	b	211a4 <myhtml_insertion_mode_in_row@@Base+0x22c>
   21144:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   21148:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   2114c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21150:	b	211a4 <myhtml_insertion_mode_in_row@@Base+0x22c>
   21154:	b	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   21158:	b	211a4 <myhtml_insertion_mode_in_row@@Base+0x22c>
   2115c:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21160:	b	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21164:	b	21208 <myhtml_insertion_mode_in_row@@Base+0x290>
   21168:	ldr	r3, [r1]
   2116c:	cmp	r3, #127	; 0x7f
   21170:	beq	21240 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   21174:	bls	2127c <myhtml_insertion_mode_in_row@@Base+0x304>
   21178:	cmp	r3, #131	; 0x83
   2117c:	beq	21240 <myhtml_insertion_mode_in_row@@Base+0x2c8>
   21180:	bls	21298 <myhtml_insertion_mode_in_row@@Base+0x320>
   21184:	cmp	r3, #132	; 0x84
   21188:	beq	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   2118c:	cmp	r3, #135	; 0x87
   21190:	beq	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   21194:	mov	r0, r4
   21198:	add	sp, sp, #8
   2119c:	pop	{r4, lr}
   211a0:	b	10178 <myhtml_insertion_mode_in_table@plt>
   211a4:	mov	r1, r2
   211a8:	mov	r3, #64	; 0x40
   211ac:	mov	r2, #1
   211b0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   211b4:	cmp	r0, #0
   211b8:	beq	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   211bc:	mov	r3, #64	; 0x40
   211c0:	mov	r2, #1
   211c4:	mov	r1, #135	; 0x87
   211c8:	mov	r0, r4
   211cc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   211d0:	cmp	r0, #0
   211d4:	beq	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   211d8:	mov	r0, r4
   211dc:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   211e0:	mov	r0, r4
   211e4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   211e8:	mov	r0, #1
   211ec:	mov	r3, #12
   211f0:	str	r3, [r4, #168]	; 0xa8
   211f4:	add	sp, sp, #8
   211f8:	pop	{r4, pc}
   211fc:	mov	r0, #0
   21200:	add	sp, sp, #8
   21204:	pop	{r4, pc}
   21208:	mov	r3, #64	; 0x40
   2120c:	mov	r2, #1
   21210:	mov	r1, #135	; 0x87
   21214:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21218:	cmp	r0, #0
   2121c:	beq	211fc <myhtml_insertion_mode_in_row@@Base+0x284>
   21220:	mov	r0, r4
   21224:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   21228:	mov	r0, r4
   2122c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21230:	mov	r3, #12
   21234:	str	r3, [r4, #168]	; 0xa8
   21238:	mov	r0, #0
   2123c:	b	211f4 <myhtml_insertion_mode_in_row@@Base+0x27c>
   21240:	mov	r0, r4
   21244:	str	r1, [sp, #4]
   21248:	bl	10418 <myhtml_tree_clear_stack_back_table_row_context@plt>
   2124c:	ldr	r1, [sp, #4]
   21250:	mov	r0, r4
   21254:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21258:	ldr	r3, [r4]
   2125c:	mov	r0, r4
   21260:	ldr	r1, [r3, #36]	; 0x24
   21264:	bl	100d0 <myhtml_tree_active_formatting_append@plt>
   21268:	mov	r3, #14
   2126c:	mov	r0, #0
   21270:	str	r3, [r4, #168]	; 0xa8
   21274:	add	sp, sp, #8
   21278:	pop	{r4, pc}
   2127c:	cmp	r3, #32
   21280:	bhi	212a4 <myhtml_insertion_mode_in_row@@Base+0x32c>
   21284:	cmp	r3, #31
   21288:	bcs	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   2128c:	cmp	r3, #27
   21290:	bne	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   21294:	b	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   21298:	cmp	r3, #130	; 0x82
   2129c:	bne	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   212a0:	b	211bc <myhtml_insertion_mode_in_row@@Base+0x244>
   212a4:	cmp	r3, #126	; 0x7e
   212a8:	bne	21194 <myhtml_insertion_mode_in_row@@Base+0x21c>
   212ac:	b	211bc <myhtml_insertion_mode_in_row@@Base+0x244>

000212b0 <myhtml_insertion_mode_in_table_text@@Base>:
   212b0:	ldr	r3, [r1]
   212b4:	push	{r4, r5, r6, r7, r8, lr}
   212b8:	cmp	r3, #1
   212bc:	mov	r5, r0
   212c0:	beq	21384 <myhtml_insertion_mode_in_table_text@@Base+0xd4>
   212c4:	ldr	r6, [r0, #136]	; 0x88
   212c8:	ldr	ip, [r6, #4]
   212cc:	cmp	ip, #0
   212d0:	beq	21338 <myhtml_insertion_mode_in_table_text@@Base+0x88>
   212d4:	ldr	r1, [r6]
   212d8:	ldr	r3, [r1]
   212dc:	ldr	r4, [r3, #48]	; 0x30
   212e0:	ands	r4, r4, #8
   212e4:	movne	r0, r1
   212e8:	movne	r2, #0
   212ec:	bne	21304 <myhtml_insertion_mode_in_table_text@@Base+0x54>
   212f0:	b	2134c <myhtml_insertion_mode_in_table_text@@Base+0x9c>
   212f4:	ldr	r3, [r0, #4]!
   212f8:	ldr	r3, [r3, #48]	; 0x30
   212fc:	ands	r3, r3, #8
   21300:	beq	21348 <myhtml_insertion_mode_in_table_text@@Base+0x98>
   21304:	add	r2, r2, #1
   21308:	cmp	r2, ip
   2130c:	bne	212f4 <myhtml_insertion_mode_in_table_text@@Base+0x44>
   21310:	mov	r4, #0
   21314:	b	2131c <myhtml_insertion_mode_in_table_text@@Base+0x6c>
   21318:	ldr	r1, [r6]
   2131c:	ldr	r1, [r1, r4, lsl #2]
   21320:	mov	r0, r5
   21324:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21328:	ldr	r3, [r6, #4]
   2132c:	add	r4, r4, #1
   21330:	cmp	r3, r4
   21334:	bhi	21318 <myhtml_insertion_mode_in_table_text@@Base+0x68>
   21338:	ldr	r3, [r5, #172]	; 0xac
   2133c:	mov	r0, #1
   21340:	str	r3, [r5, #168]	; 0xa8
   21344:	pop	{r4, r5, r6, r7, r8, pc}
   21348:	mov	r4, r3
   2134c:	mov	r8, #1
   21350:	mov	r7, #0
   21354:	b	2135c <myhtml_insertion_mode_in_table_text@@Base+0xac>
   21358:	ldr	r1, [r6]
   2135c:	ldr	r1, [r1, r4, lsl #2]
   21360:	strb	r8, [r5, #188]	; 0xbc
   21364:	mov	r0, r5
   21368:	bl	10640 <myhtml_insertion_mode_in_body@plt>
   2136c:	ldr	r3, [r6, #4]
   21370:	add	r4, r4, #1
   21374:	cmp	r3, r4
   21378:	strb	r7, [r5, #188]	; 0xbc
   2137c:	bhi	21358 <myhtml_insertion_mode_in_table_text@@Base+0xa8>
   21380:	b	21338 <myhtml_insertion_mode_in_table_text@@Base+0x88>
   21384:	ldr	r3, [r1, #48]	; 0x30
   21388:	mov	r6, r1
   2138c:	ands	r4, r3, #2048	; 0x800
   21390:	beq	213a8 <myhtml_insertion_mode_in_table_text@@Base+0xf8>
   21394:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21398:	ldr	r0, [r6, #12]
   2139c:	cmp	r0, #0
   213a0:	popeq	{r4, r5, r6, r7, r8, pc}
   213a4:	mov	r1, r6
   213a8:	ldr	r0, [r5, #136]	; 0x88
   213ac:	bl	10ec8 <myhtml_tree_token_list_append@plt>
   213b0:	mov	r0, #0
   213b4:	pop	{r4, r5, r6, r7, r8, pc}

000213b8 <myhtml_insertion_mode_in_caption@@Base>:
   213b8:	ldr	r3, [r1, #48]	; 0x30
   213bc:	push	{r4, r5, r6, lr}
   213c0:	tst	r3, #1
   213c4:	mov	r4, r0
   213c8:	beq	21460 <myhtml_insertion_mode_in_caption@@Base+0xa8>
   213cc:	ldr	r5, [r1]
   213d0:	cmp	r5, #125	; 0x7d
   213d4:	beq	21538 <myhtml_insertion_mode_in_caption@@Base+0x180>
   213d8:	bhi	21518 <myhtml_insertion_mode_in_caption@@Base+0x160>
   213dc:	cmp	r5, #32
   213e0:	bhi	21554 <myhtml_insertion_mode_in_caption@@Base+0x19c>
   213e4:	cmp	r5, #31
   213e8:	bcs	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   213ec:	cmp	r5, #23
   213f0:	beq	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   213f4:	cmp	r5, #27
   213f8:	bne	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   213fc:	mov	r3, #64	; 0x40
   21400:	mov	r2, #1
   21404:	mov	r1, r5
   21408:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   2140c:	cmp	r0, #0
   21410:	beq	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   21414:	mov	r2, #0
   21418:	mov	r1, r2
   2141c:	mov	r0, r4
   21420:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   21424:	mov	r0, r4
   21428:	bl	10628 <myhtml_tree_current_node@plt>
   2142c:	mov	r1, r5
   21430:	bl	10aa8 <myhtml_is_html_node@plt>
   21434:	mov	r1, r5
   21438:	mov	r3, #0
   2143c:	mov	r2, #1
   21440:	mov	r0, r4
   21444:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21448:	mov	r0, r4
   2144c:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21450:	mov	r3, #8
   21454:	str	r3, [r4, #168]	; 0xa8
   21458:	mov	r0, #0
   2145c:	pop	{r4, r5, r6, pc}
   21460:	ldr	r3, [r1]
   21464:	cmp	r3, #127	; 0x7f
   21468:	bhi	21498 <myhtml_insertion_mode_in_caption@@Base+0xe0>
   2146c:	cmp	r3, #126	; 0x7e
   21470:	bcs	214b0 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   21474:	cmp	r3, #27
   21478:	beq	214b0 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   2147c:	bcc	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   21480:	sub	r3, r3, #31
   21484:	cmp	r3, #1
   21488:	bls	214b0 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   2148c:	mov	r0, r4
   21490:	pop	{r4, r5, r6, lr}
   21494:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21498:	cmp	r3, #130	; 0x82
   2149c:	bcc	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   214a0:	cmp	r3, #132	; 0x84
   214a4:	bls	214b0 <myhtml_insertion_mode_in_caption@@Base+0xf8>
   214a8:	cmp	r3, #135	; 0x87
   214ac:	bne	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   214b0:	mov	r3, #64	; 0x40
   214b4:	mov	r2, #1
   214b8:	mov	r1, #27
   214bc:	mov	r0, r4
   214c0:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   214c4:	cmp	r0, #0
   214c8:	beq	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   214cc:	mov	r2, #0
   214d0:	mov	r1, r2
   214d4:	mov	r0, r4
   214d8:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   214dc:	mov	r0, r4
   214e0:	bl	10628 <myhtml_tree_current_node@plt>
   214e4:	mov	r1, #27
   214e8:	bl	10aa8 <myhtml_is_html_node@plt>
   214ec:	mov	r3, #0
   214f0:	mov	r2, #1
   214f4:	mov	r1, #27
   214f8:	mov	r0, r4
   214fc:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21500:	mov	r0, r4
   21504:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   21508:	mov	r3, #8
   2150c:	str	r3, [r4, #168]	; 0xa8
   21510:	mov	r0, #1
   21514:	pop	{r4, r5, r6, pc}
   21518:	cmp	r5, #132	; 0x84
   2151c:	bhi	21560 <myhtml_insertion_mode_in_caption@@Base+0x1a8>
   21520:	cmp	r5, #130	; 0x82
   21524:	bcs	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   21528:	cmp	r5, #127	; 0x7f
   2152c:	bhi	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   21530:	mov	r0, #0
   21534:	pop	{r4, r5, r6, pc}
   21538:	mov	r3, #64	; 0x40
   2153c:	mov	r2, #1
   21540:	mov	r1, #27
   21544:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21548:	cmp	r0, #0
   2154c:	bne	214cc <myhtml_insertion_mode_in_caption@@Base+0x114>
   21550:	b	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   21554:	cmp	r5, #65	; 0x41
   21558:	bne	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   2155c:	b	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>
   21560:	cmp	r5, #135	; 0x87
   21564:	bne	2148c <myhtml_insertion_mode_in_caption@@Base+0xd4>
   21568:	b	21530 <myhtml_insertion_mode_in_caption@@Base+0x178>

0002156c <myhtml_insertion_mode_in_column_group@@Base>:
   2156c:	ldr	r2, [r1, #48]	; 0x30
   21570:	push	{r4, r5, r6, lr}
   21574:	ands	r4, r2, #1
   21578:	mov	r5, r0
   2157c:	beq	215d0 <myhtml_insertion_mode_in_column_group@@Base+0x64>
   21580:	ldr	r4, [r1]
   21584:	cmp	r4, #32
   21588:	beq	21630 <myhtml_insertion_mode_in_column_group@@Base+0xc4>
   2158c:	cmp	r4, #128	; 0x80
   21590:	beq	21664 <myhtml_insertion_mode_in_column_group@@Base+0xf8>
   21594:	cmp	r4, #31
   21598:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   2159c:	bl	10628 <myhtml_tree_current_node@plt>
   215a0:	cmp	r0, #0
   215a4:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215a8:	mov	r1, #32
   215ac:	bl	10aa8 <myhtml_is_html_node@plt>
   215b0:	cmp	r0, #0
   215b4:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215b8:	mov	r0, r5
   215bc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   215c0:	mov	r3, #8
   215c4:	str	r3, [r5, #168]	; 0xa8
   215c8:	mov	r0, #1
   215cc:	pop	{r4, r5, r6, pc}
   215d0:	ldr	r2, [r1]
   215d4:	cmp	r2, #31
   215d8:	beq	2167c <myhtml_insertion_mode_in_column_group@@Base+0x110>
   215dc:	bhi	21610 <myhtml_insertion_mode_in_column_group@@Base+0xa4>
   215e0:	cmp	r2, #2
   215e4:	beq	2166c <myhtml_insertion_mode_in_column_group@@Base+0x100>
   215e8:	cmp	r2, #3
   215ec:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   215f0:	cmp	r2, #1
   215f4:	beq	21690 <myhtml_insertion_mode_in_column_group@@Base+0x124>
   215f8:	mov	r0, r5
   215fc:	bl	10628 <myhtml_tree_current_node@plt>
   21600:	cmp	r0, #0
   21604:	bne	215a8 <myhtml_insertion_mode_in_column_group@@Base+0x3c>
   21608:	mov	r0, #0
   2160c:	pop	{r4, r5, r6, pc}
   21610:	cmp	r2, #128	; 0x80
   21614:	beq	21664 <myhtml_insertion_mode_in_column_group@@Base+0xf8>
   21618:	cmp	r2, #251	; 0xfb
   2161c:	beq	21628 <myhtml_insertion_mode_in_column_group@@Base+0xbc>
   21620:	cmp	r2, #65	; 0x41
   21624:	bne	215f8 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   21628:	pop	{r4, r5, r6, lr}
   2162c:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21630:	bl	10628 <myhtml_tree_current_node@plt>
   21634:	cmp	r0, #0
   21638:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   2163c:	mov	r1, r4
   21640:	bl	10aa8 <myhtml_is_html_node@plt>
   21644:	cmp	r0, #0
   21648:	beq	21608 <myhtml_insertion_mode_in_column_group@@Base+0x9c>
   2164c:	mov	r0, r5
   21650:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21654:	mov	r3, #8
   21658:	str	r3, [r5, #168]	; 0xa8
   2165c:	mov	r0, #0
   21660:	pop	{r4, r5, r6, pc}
   21664:	pop	{r4, r5, r6, lr}
   21668:	b	10058 <myhtml_insertion_mode_in_head@plt>
   2166c:	mov	r2, r4
   21670:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   21674:	mov	r0, r4
   21678:	pop	{r4, r5, r6, pc}
   2167c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21680:	mov	r0, r5
   21684:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21688:	mov	r0, r4
   2168c:	pop	{r4, r5, r6, pc}
   21690:	ldr	r3, [r1, #48]	; 0x30
   21694:	tst	r3, #8
   21698:	bne	216b4 <myhtml_insertion_mode_in_column_group@@Base+0x148>
   2169c:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   216a0:	subs	r1, r0, #0
   216a4:	beq	215f8 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   216a8:	mov	r0, r5
   216ac:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216b0:	b	215f8 <myhtml_insertion_mode_in_column_group@@Base+0x8c>
   216b4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   216b8:	mov	r0, r4
   216bc:	pop	{r4, r5, r6, pc}

000216c0 <myhtml_insertion_mode_in_cell@@Base>:
   216c0:	ldr	r3, [r1, #48]	; 0x30
   216c4:	push	{r4, r5, r6, lr}
   216c8:	tst	r3, #1
   216cc:	mov	r4, r1
   216d0:	mov	r5, r0
   216d4:	beq	218b0 <myhtml_insertion_mode_in_cell@@Base+0x1f0>
   216d8:	ldr	r1, [r1]
   216dc:	sub	r3, r1, #23
   216e0:	cmp	r3, #112	; 0x70
   216e4:	addls	pc, pc, r3, lsl #2
   216e8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216ec:	b	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   216f0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216f4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216f8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   216fc:	b	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21700:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21704:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21708:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2170c:	b	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21710:	b	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21714:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21718:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2171c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21720:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21724:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21728:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2172c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21730:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21734:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21738:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2173c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21740:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21744:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21748:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2174c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21750:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21754:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21758:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2175c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21760:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21764:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21768:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2176c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21770:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21774:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21778:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2177c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21780:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21784:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21788:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2178c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21790:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21794:	b	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21798:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2179c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217a8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217ac:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217b8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217bc:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217c8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217cc:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217d8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217dc:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217e8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217ec:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f0:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217f8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   217fc:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21800:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21804:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21808:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2180c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21810:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21814:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21818:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2181c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21820:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21824:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21828:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2182c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21830:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21834:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21838:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2183c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21840:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21844:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21848:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2184c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21850:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21854:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21858:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2185c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21860:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21864:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21868:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2186c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21870:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21874:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21878:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   2187c:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21880:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21884:	b	219c4 <myhtml_insertion_mode_in_cell@@Base+0x304>
   21888:	b	219c4 <myhtml_insertion_mode_in_cell@@Base+0x304>
   2188c:	b	21964 <myhtml_insertion_mode_in_cell@@Base+0x2a4>
   21890:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21894:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   21898:	b	219c4 <myhtml_insertion_mode_in_cell@@Base+0x304>
   2189c:	b	21964 <myhtml_insertion_mode_in_cell@@Base+0x2a4>
   218a0:	b	219c4 <myhtml_insertion_mode_in_cell@@Base+0x304>
   218a4:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   218a8:	b	21a08 <myhtml_insertion_mode_in_cell@@Base+0x348>
   218ac:	b	219c4 <myhtml_insertion_mode_in_cell@@Base+0x304>
   218b0:	ldr	r3, [r1]
   218b4:	cmp	r3, #127	; 0x7f
   218b8:	bhi	218ec <myhtml_insertion_mode_in_cell@@Base+0x22c>
   218bc:	cmp	r3, #126	; 0x7e
   218c0:	bcs	21904 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218c4:	cmp	r3, #27
   218c8:	beq	21904 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218cc:	bcc	218dc <myhtml_insertion_mode_in_cell@@Base+0x21c>
   218d0:	sub	r3, r3, #31
   218d4:	cmp	r3, #1
   218d8:	bls	21904 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218dc:	mov	r1, r4
   218e0:	mov	r0, r5
   218e4:	pop	{r4, r5, r6, lr}
   218e8:	b	10640 <myhtml_insertion_mode_in_body@plt>
   218ec:	cmp	r3, #130	; 0x82
   218f0:	bcc	218dc <myhtml_insertion_mode_in_cell@@Base+0x21c>
   218f4:	cmp	r3, #132	; 0x84
   218f8:	bls	21904 <myhtml_insertion_mode_in_cell@@Base+0x244>
   218fc:	cmp	r3, #135	; 0x87
   21900:	bne	218dc <myhtml_insertion_mode_in_cell@@Base+0x21c>
   21904:	mov	r3, #64	; 0x40
   21908:	mov	r2, #1
   2190c:	mov	r1, #127	; 0x7f
   21910:	mov	r0, r5
   21914:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21918:	mov	r3, #64	; 0x40
   2191c:	mov	r2, #1
   21920:	mov	r1, #131	; 0x83
   21924:	mov	r6, r0
   21928:	mov	r0, r5
   2192c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21930:	cmp	r6, #0
   21934:	cmpeq	r0, #0
   21938:	beq	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   2193c:	cmp	r6, #0
   21940:	moveq	r1, r0
   21944:	mov	r2, r4
   21948:	mov	r0, r5
   2194c:	movne	r1, r6
   21950:	bl	10d3c <myhtml_tree_close_cell@plt>
   21954:	mov	r0, #1
   21958:	pop	{r4, r5, r6, pc}
   2195c:	mov	r0, #0
   21960:	pop	{r4, r5, r6, pc}
   21964:	mov	r3, #64	; 0x40
   21968:	mov	r2, #1
   2196c:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21970:	cmp	r0, #0
   21974:	beq	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   21978:	mov	r2, #0
   2197c:	mov	r1, r2
   21980:	mov	r0, r5
   21984:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   21988:	mov	r0, r5
   2198c:	bl	10628 <myhtml_tree_current_node@plt>
   21990:	ldr	r1, [r4]
   21994:	bl	10aa8 <myhtml_is_html_node@plt>
   21998:	ldr	r1, [r4]
   2199c:	mov	r3, #0
   219a0:	mov	r2, #1
   219a4:	mov	r0, r5
   219a8:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   219ac:	mov	r0, r5
   219b0:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   219b4:	mov	r3, #13
   219b8:	str	r3, [r5, #168]	; 0xa8
   219bc:	mov	r0, #0
   219c0:	pop	{r4, r5, r6, pc}
   219c4:	mov	r3, #64	; 0x40
   219c8:	mov	r2, #1
   219cc:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   219d0:	cmp	r0, #0
   219d4:	beq	2195c <myhtml_insertion_mode_in_cell@@Base+0x29c>
   219d8:	mov	r1, #127	; 0x7f
   219dc:	mov	r3, #64	; 0x40
   219e0:	mov	r2, #1
   219e4:	mov	r0, r5
   219e8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   219ec:	subs	r1, r0, #0
   219f0:	beq	21a14 <myhtml_insertion_mode_in_cell@@Base+0x354>
   219f4:	mov	r0, r5
   219f8:	mov	r2, r4
   219fc:	bl	10d3c <myhtml_tree_close_cell@plt>
   21a00:	mov	r0, #1
   21a04:	pop	{r4, r5, r6, pc}
   21a08:	mov	r1, r4
   21a0c:	pop	{r4, r5, r6, lr}
   21a10:	b	10178 <myhtml_insertion_mode_in_table@plt>
   21a14:	mov	r1, #131	; 0x83
   21a18:	mov	r3, #64	; 0x40
   21a1c:	mov	r2, #1
   21a20:	mov	r0, r5
   21a24:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21a28:	subs	r1, r0, #0
   21a2c:	bne	219f4 <myhtml_insertion_mode_in_cell@@Base+0x334>
   21a30:	mov	r0, #1
   21a34:	pop	{r4, r5, r6, pc}

00021a38 <myhtml_insertion_mode_in_select@@Base>:
   21a38:	ldr	r2, [r1, #48]	; 0x30
   21a3c:	push	{r4, r5, r6, lr}
   21a40:	ands	r4, r2, #1
   21a44:	mov	r5, r1
   21a48:	mov	r6, r0
   21a4c:	ldr	r3, [r1]
   21a50:	beq	21ae8 <myhtml_insertion_mode_in_select@@Base+0xb0>
   21a54:	sub	r3, r3, #96	; 0x60
   21a58:	cmp	r3, #32
   21a5c:	addls	pc, pc, r3, lsl #2
   21a60:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a64:	b	21b8c <myhtml_insertion_mode_in_select@@Base+0x154>
   21a68:	b	21c00 <myhtml_insertion_mode_in_select@@Base+0x1c8>
   21a6c:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a70:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a74:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a78:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a7c:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a80:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a84:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a88:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a8c:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a90:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a94:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a98:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21a9c:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa0:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa4:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21aa8:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21aac:	b	21c18 <myhtml_insertion_mode_in_select@@Base+0x1e0>
   21ab0:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ab4:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ab8:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21abc:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac0:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac4:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ac8:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21acc:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad0:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad4:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ad8:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21adc:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ae0:	b	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ae4:	b	21b7c <myhtml_insertion_mode_in_select@@Base+0x144>
   21ae8:	cmp	r3, #96	; 0x60
   21aec:	beq	21c4c <myhtml_insertion_mode_in_select@@Base+0x214>
   21af0:	bls	21b48 <myhtml_insertion_mode_in_select@@Base+0x110>
   21af4:	cmp	r3, #114	; 0x72
   21af8:	beq	21c88 <myhtml_insertion_mode_in_select@@Base+0x250>
   21afc:	bls	21cbc <myhtml_insertion_mode_in_select@@Base+0x284>
   21b00:	cmp	r3, #129	; 0x81
   21b04:	beq	21cf4 <myhtml_insertion_mode_in_select@@Base+0x2bc>
   21b08:	cmp	r3, #251	; 0xfb
   21b0c:	bne	21d54 <myhtml_insertion_mode_in_select@@Base+0x31c>
   21b10:	pop	{r4, r5, r6, lr}
   21b14:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21b18:	ldr	r3, [r1, #48]	; 0x30
   21b1c:	tst	r3, #2048	; 0x800
   21b20:	beq	21b34 <myhtml_insertion_mode_in_select@@Base+0xfc>
   21b24:	bl	107cc <myhtml_insertion_fix_for_null_char_drop_all@plt>
   21b28:	ldr	r3, [r5, #12]
   21b2c:	cmp	r3, #0
   21b30:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21b34:	mov	r1, r5
   21b38:	mov	r0, r6
   21b3c:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21b40:	mov	r0, #0
   21b44:	pop	{r4, r5, r6, pc}
   21b48:	cmp	r3, #65	; 0x41
   21b4c:	beq	21b10 <myhtml_insertion_mode_in_select@@Base+0xd8>
   21b50:	bhi	21ce4 <myhtml_insertion_mode_in_select@@Base+0x2ac>
   21b54:	cmp	r3, #1
   21b58:	beq	21b18 <myhtml_insertion_mode_in_select@@Base+0xe0>
   21b5c:	cmp	r3, #2
   21b60:	bne	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21b64:	mov	r2, r4
   21b68:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   21b6c:	mov	r0, r4
   21b70:	pop	{r4, r5, r6, pc}
   21b74:	cmp	r3, #112	; 0x70
   21b78:	bne	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21b7c:	mov	r1, r5
   21b80:	mov	r0, r6
   21b84:	pop	{r4, r5, r6, lr}
   21b88:	b	10058 <myhtml_insertion_mode_in_head@plt>
   21b8c:	bl	10628 <myhtml_tree_current_node@plt>
   21b90:	mov	r1, #97	; 0x61
   21b94:	bl	10aa8 <myhtml_is_html_node@plt>
   21b98:	cmp	r0, #0
   21b9c:	beq	21bd8 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21ba0:	ldr	r3, [r6, #128]	; 0x80
   21ba4:	ldr	r2, [r3, #4]
   21ba8:	cmp	r2, #1
   21bac:	bls	21bd8 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21bb0:	ldr	r2, [r3, #4]
   21bb4:	ldr	r0, [r3]
   21bb8:	sub	r3, r2, #-1073741822	; 0xc0000002
   21bbc:	mov	r1, #96	; 0x60
   21bc0:	ldr	r0, [r0, r3, lsl #2]
   21bc4:	bl	10aa8 <myhtml_is_html_node@plt>
   21bc8:	cmp	r0, #0
   21bcc:	beq	21bd8 <myhtml_insertion_mode_in_select@@Base+0x1a0>
   21bd0:	mov	r0, r6
   21bd4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21bd8:	mov	r0, r6
   21bdc:	bl	10628 <myhtml_tree_current_node@plt>
   21be0:	mov	r1, #96	; 0x60
   21be4:	bl	10aa8 <myhtml_is_html_node@plt>
   21be8:	cmp	r0, #0
   21bec:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21bf0:	mov	r0, r6
   21bf4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21bf8:	mov	r0, #0
   21bfc:	pop	{r4, r5, r6, pc}
   21c00:	bl	10628 <myhtml_tree_current_node@plt>
   21c04:	mov	r1, #97	; 0x61
   21c08:	bl	10aa8 <myhtml_is_html_node@plt>
   21c0c:	cmp	r0, #0
   21c10:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21c14:	b	21bf0 <myhtml_insertion_mode_in_select@@Base+0x1b8>
   21c18:	mov	r1, #114	; 0x72
   21c1c:	mov	r3, #128	; 0x80
   21c20:	mov	r2, #1
   21c24:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21c28:	subs	r1, r0, #0
   21c2c:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21c30:	mov	r2, #0
   21c34:	mov	r0, r6
   21c38:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21c3c:	mov	r0, r6
   21c40:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21c44:	mov	r0, #0
   21c48:	pop	{r4, r5, r6, pc}
   21c4c:	bl	10628 <myhtml_tree_current_node@plt>
   21c50:	ldr	r3, [r0, #4]
   21c54:	cmp	r3, #97	; 0x61
   21c58:	beq	21d3c <myhtml_insertion_mode_in_select@@Base+0x304>
   21c5c:	mov	r0, r6
   21c60:	bl	10628 <myhtml_tree_current_node@plt>
   21c64:	ldr	r3, [r5]
   21c68:	ldr	r2, [r0, #4]
   21c6c:	cmp	r2, r3
   21c70:	beq	21d2c <myhtml_insertion_mode_in_select@@Base+0x2f4>
   21c74:	mov	r1, r5
   21c78:	mov	r0, r6
   21c7c:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   21c80:	mov	r0, #0
   21c84:	pop	{r4, r5, r6, pc}
   21c88:	mov	r1, r3
   21c8c:	mov	r2, #1
   21c90:	mov	r3, #128	; 0x80
   21c94:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21c98:	subs	r1, r0, #0
   21c9c:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21ca0:	mov	r2, r4
   21ca4:	mov	r0, r6
   21ca8:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21cac:	mov	r0, r6
   21cb0:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21cb4:	mov	r0, r4
   21cb8:	pop	{r4, r5, r6, pc}
   21cbc:	cmp	r3, #97	; 0x61
   21cc0:	bne	21b74 <myhtml_insertion_mode_in_select@@Base+0x13c>
   21cc4:	bl	10628 <myhtml_tree_current_node@plt>
   21cc8:	ldr	r1, [r5]
   21ccc:	bl	10aa8 <myhtml_is_html_node@plt>
   21cd0:	cmp	r0, #0
   21cd4:	beq	21c74 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21cd8:	mov	r0, r6
   21cdc:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21ce0:	b	21c74 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21ce4:	cmp	r3, #70	; 0x46
   21ce8:	beq	21cf4 <myhtml_insertion_mode_in_select@@Base+0x2bc>
   21cec:	cmp	r3, #74	; 0x4a
   21cf0:	bne	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21cf4:	mov	r1, #114	; 0x72
   21cf8:	mov	r3, #128	; 0x80
   21cfc:	mov	r2, #1
   21d00:	mov	r0, r6
   21d04:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21d08:	subs	r1, r0, #0
   21d0c:	beq	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21d10:	mov	r2, #0
   21d14:	mov	r0, r6
   21d18:	bl	1013c <myhtml_tree_open_elements_pop_until_by_node@plt>
   21d1c:	mov	r0, r6
   21d20:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21d24:	mov	r0, #1
   21d28:	pop	{r4, r5, r6, pc}
   21d2c:	ldr	r3, [r0, #8]
   21d30:	cmp	r3, #1
   21d34:	bne	21c74 <myhtml_insertion_mode_in_select@@Base+0x23c>
   21d38:	b	21cd8 <myhtml_insertion_mode_in_select@@Base+0x2a0>
   21d3c:	ldr	r3, [r0, #8]
   21d40:	cmp	r3, #1
   21d44:	bne	21c5c <myhtml_insertion_mode_in_select@@Base+0x224>
   21d48:	mov	r0, r6
   21d4c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   21d50:	b	21c5c <myhtml_insertion_mode_in_select@@Base+0x224>
   21d54:	cmp	r3, #128	; 0x80
   21d58:	bne	21b40 <myhtml_insertion_mode_in_select@@Base+0x108>
   21d5c:	b	21b7c <myhtml_insertion_mode_in_select@@Base+0x144>

00021d60 <myhtml_insertion_mode_in_select_in_table@@Base>:
   21d60:	ldr	r3, [r1, #48]	; 0x30
   21d64:	push	{r4, lr}
   21d68:	tst	r3, #1
   21d6c:	mov	r4, r0
   21d70:	ldr	r3, [r1]
   21d74:	beq	21dd8 <myhtml_insertion_mode_in_select_in_table@@Base+0x78>
   21d78:	cmp	r3, #127	; 0x7f
   21d7c:	bls	21e18 <myhtml_insertion_mode_in_select_in_table@@Base+0xb8>
   21d80:	cmp	r3, #130	; 0x82
   21d84:	bcc	21df0 <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21d88:	cmp	r3, #132	; 0x84
   21d8c:	bls	21d98 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21d90:	cmp	r3, #135	; 0x87
   21d94:	bne	21df0 <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21d98:	mov	r1, r3
   21d9c:	mov	r2, #1
   21da0:	mov	r3, #64	; 0x40
   21da4:	mov	r0, r4
   21da8:	bl	10f04 <myhtml_tree_element_in_scope@plt>
   21dac:	cmp	r0, #0
   21db0:	beq	21e34 <myhtml_insertion_mode_in_select_in_table@@Base+0xd4>
   21db4:	mov	r3, #0
   21db8:	mov	r2, #1
   21dbc:	mov	r1, #114	; 0x72
   21dc0:	mov	r0, r4
   21dc4:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   21dc8:	mov	r0, r4
   21dcc:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   21dd0:	mov	r0, #1
   21dd4:	pop	{r4, pc}
   21dd8:	cmp	r3, #127	; 0x7f
   21ddc:	bhi	21dfc <myhtml_insertion_mode_in_select_in_table@@Base+0x9c>
   21de0:	cmp	r3, #125	; 0x7d
   21de4:	bcs	21db4 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21de8:	cmp	r3, #27
   21dec:	beq	21db4 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21df0:	mov	r0, r4
   21df4:	pop	{r4, lr}
   21df8:	b	103c4 <myhtml_insertion_mode_in_select@plt>
   21dfc:	cmp	r3, #130	; 0x82
   21e00:	bcc	21df0 <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21e04:	cmp	r3, #132	; 0x84
   21e08:	bls	21db4 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21e0c:	cmp	r3, #135	; 0x87
   21e10:	bne	21df0 <myhtml_insertion_mode_in_select_in_table@@Base+0x90>
   21e14:	b	21db4 <myhtml_insertion_mode_in_select_in_table@@Base+0x54>
   21e18:	cmp	r3, #125	; 0x7d
   21e1c:	bcs	21d98 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21e20:	cmp	r3, #27
   21e24:	beq	21d98 <myhtml_insertion_mode_in_select_in_table@@Base+0x38>
   21e28:	mov	r0, r4
   21e2c:	pop	{r4, lr}
   21e30:	b	103c4 <myhtml_insertion_mode_in_select@plt>
   21e34:	pop	{r4, pc}

00021e38 <myhtml_insertion_mode_after_body@@Base>:
   21e38:	ldr	r2, [r1, #48]	; 0x30
   21e3c:	push	{r4, r5, r6, lr}
   21e40:	ands	r4, r2, #1
   21e44:	sub	sp, sp, #8
   21e48:	mov	r3, r1
   21e4c:	mov	ip, r0
   21e50:	beq	21e80 <myhtml_insertion_mode_after_body@@Base+0x48>
   21e54:	ldr	r3, [r1]
   21e58:	cmp	r3, #65	; 0x41
   21e5c:	bne	21eec <myhtml_insertion_mode_after_body@@Base+0xb4>
   21e60:	ldr	r0, [r0, #88]	; 0x58
   21e64:	cmp	r0, #0
   21e68:	moveq	r3, #21
   21e6c:	streq	r3, [ip, #168]	; 0xa8
   21e70:	beq	21e78 <myhtml_insertion_mode_after_body@@Base+0x40>
   21e74:	mov	r0, #0
   21e78:	add	sp, sp, #8
   21e7c:	pop	{r4, r5, r6, pc}
   21e80:	ldr	r5, [r1]
   21e84:	cmp	r5, #3
   21e88:	beq	21e74 <myhtml_insertion_mode_after_body@@Base+0x3c>
   21e8c:	bhi	21f00 <myhtml_insertion_mode_after_body@@Base+0xc8>
   21e90:	cmp	r5, #1
   21e94:	beq	21f28 <myhtml_insertion_mode_after_body@@Base+0xf0>
   21e98:	cmp	r5, #2
   21e9c:	bne	21eec <myhtml_insertion_mode_after_body@@Base+0xb4>
   21ea0:	ldr	r1, [r0, #128]	; 0x80
   21ea4:	ldr	r2, [r1, #4]
   21ea8:	cmp	r2, #0
   21eac:	moveq	r0, r2
   21eb0:	beq	21e78 <myhtml_insertion_mode_after_body@@Base+0x40>
   21eb4:	ldr	r2, [r1]
   21eb8:	str	r3, [sp, #4]
   21ebc:	ldr	r6, [r2]
   21ec0:	bl	ffe0 <myhtml_tree_node_create@plt>
   21ec4:	ldr	r3, [sp, #4]
   21ec8:	ldr	r2, [r6, #8]
   21ecc:	mov	r1, r0
   21ed0:	str	r5, [r0, #4]
   21ed4:	str	r3, [r0, #32]
   21ed8:	str	r2, [r0, #8]
   21edc:	mov	r0, r6
   21ee0:	bl	106b8 <myhtml_tree_node_add_child@plt>
   21ee4:	mov	r0, r4
   21ee8:	b	21e78 <myhtml_insertion_mode_after_body@@Base+0x40>
   21eec:	mov	r3, #6
   21ef0:	mov	r0, #1
   21ef4:	str	r3, [ip, #168]	; 0xa8
   21ef8:	add	sp, sp, #8
   21efc:	pop	{r4, r5, r6, pc}
   21f00:	cmp	r5, #65	; 0x41
   21f04:	beq	21f1c <myhtml_insertion_mode_after_body@@Base+0xe4>
   21f08:	cmp	r5, #251	; 0xfb
   21f0c:	bne	21eec <myhtml_insertion_mode_after_body@@Base+0xb4>
   21f10:	bl	10310 <myhtml_rules_stop_parsing@plt>
   21f14:	mov	r0, r4
   21f18:	b	21e78 <myhtml_insertion_mode_after_body@@Base+0x40>
   21f1c:	add	sp, sp, #8
   21f20:	pop	{r4, r5, r6, lr}
   21f24:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21f28:	ldr	r3, [r1, #48]	; 0x30
   21f2c:	tst	r3, #8
   21f30:	bne	21f1c <myhtml_insertion_mode_after_body@@Base+0xe4>
   21f34:	mov	r3, #6
   21f38:	mov	r0, r5
   21f3c:	str	r3, [ip, #168]	; 0xa8
   21f40:	b	21e78 <myhtml_insertion_mode_after_body@@Base+0x40>

00021f44 <myhtml_insertion_mode_in_frameset@@Base>:
   21f44:	ldr	r2, [r1, #48]	; 0x30
   21f48:	push	{r4, r5, r6, lr}
   21f4c:	ands	r4, r2, #1
   21f50:	mov	r5, r1
   21f54:	mov	r6, r0
   21f58:	ldr	r3, [r1]
   21f5c:	beq	21f70 <myhtml_insertion_mode_in_frameset@@Base+0x2c>
   21f60:	cmp	r3, #54	; 0x36
   21f64:	beq	21ff0 <myhtml_insertion_mode_in_frameset@@Base+0xac>
   21f68:	mov	r0, #0
   21f6c:	pop	{r4, r5, r6, pc}
   21f70:	cmp	r3, #54	; 0x36
   21f74:	beq	22054 <myhtml_insertion_mode_in_frameset@@Base+0x110>
   21f78:	bhi	21fd0 <myhtml_insertion_mode_in_frameset@@Base+0x8c>
   21f7c:	cmp	r3, #2
   21f80:	beq	2203c <myhtml_insertion_mode_in_frameset@@Base+0xf8>
   21f84:	cmp	r3, #53	; 0x35
   21f88:	beq	22074 <myhtml_insertion_mode_in_frameset@@Base+0x130>
   21f8c:	cmp	r3, #1
   21f90:	bne	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21f94:	ldr	r3, [r1, #48]	; 0x30
   21f98:	tst	r3, #8
   21f9c:	bne	21fbc <myhtml_insertion_mode_in_frameset@@Base+0x78>
   21fa0:	ldr	r0, [r0, #8]
   21fa4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   21fa8:	add	r0, r5, #4
   21fac:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   21fb0:	ldr	r3, [r5, #12]
   21fb4:	cmp	r3, #0
   21fb8:	beq	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21fbc:	mov	r1, r5
   21fc0:	mov	r0, r6
   21fc4:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   21fc8:	mov	r0, #0
   21fcc:	pop	{r4, r5, r6, pc}
   21fd0:	cmp	r3, #92	; 0x5c
   21fd4:	beq	2204c <myhtml_insertion_mode_in_frameset@@Base+0x108>
   21fd8:	cmp	r3, #251	; 0xfb
   21fdc:	beq	22060 <myhtml_insertion_mode_in_frameset@@Base+0x11c>
   21fe0:	cmp	r3, #65	; 0x41
   21fe4:	bne	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   21fe8:	pop	{r4, r5, r6, lr}
   21fec:	b	10640 <myhtml_insertion_mode_in_body@plt>
   21ff0:	bl	10628 <myhtml_tree_current_node@plt>
   21ff4:	ldr	r3, [r6, #84]	; 0x54
   21ff8:	ldr	r3, [r3, #20]
   21ffc:	cmp	r3, r0
   22000:	beq	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   22004:	mov	r0, r6
   22008:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2200c:	mov	r0, r6
   22010:	bl	10628 <myhtml_tree_current_node@plt>
   22014:	ldr	r3, [r6, #88]	; 0x58
   22018:	cmp	r3, #0
   2201c:	bne	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>
   22020:	ldr	r3, [r0, #4]
   22024:	cmp	r3, #54	; 0x36
   22028:	beq	22088 <myhtml_insertion_mode_in_frameset@@Base+0x144>
   2202c:	mov	r3, #20
   22030:	str	r3, [r6, #168]	; 0xa8
   22034:	mov	r0, #0
   22038:	pop	{r4, r5, r6, pc}
   2203c:	mov	r2, r4
   22040:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   22044:	mov	r0, r4
   22048:	pop	{r4, r5, r6, pc}
   2204c:	pop	{r4, r5, r6, lr}
   22050:	b	10058 <myhtml_insertion_mode_in_head@plt>
   22054:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   22058:	mov	r0, r4
   2205c:	pop	{r4, r5, r6, pc}
   22060:	bl	10628 <myhtml_tree_current_node@plt>
   22064:	mov	r0, r6
   22068:	bl	10310 <myhtml_rules_stop_parsing@plt>
   2206c:	mov	r0, r4
   22070:	pop	{r4, r5, r6, pc}
   22074:	bl	fc68 <myhtml_tree_node_insert_html_element@plt>
   22078:	mov	r0, r6
   2207c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   22080:	mov	r0, r4
   22084:	pop	{r4, r5, r6, pc}
   22088:	ldr	r3, [r0, #8]
   2208c:	cmp	r3, #1
   22090:	bne	2202c <myhtml_insertion_mode_in_frameset@@Base+0xe8>
   22094:	b	21f68 <myhtml_insertion_mode_in_frameset@@Base+0x24>

00022098 <myhtml_insertion_mode_after_frameset@@Base>:
   22098:	ldr	r2, [r1, #48]	; 0x30
   2209c:	push	{r4, r5, r6, lr}
   220a0:	ands	r4, r2, #1
   220a4:	mov	r5, r1
   220a8:	mov	r6, r0
   220ac:	beq	220c8 <myhtml_insertion_mode_after_frameset@@Base+0x30>
   220b0:	ldr	r3, [r1]
   220b4:	cmp	r3, #65	; 0x41
   220b8:	moveq	r3, #22
   220bc:	streq	r3, [r0, #168]	; 0xa8
   220c0:	mov	r0, #0
   220c4:	pop	{r4, r5, r6, pc}
   220c8:	ldr	r2, [r1]
   220cc:	cmp	r2, #65	; 0x41
   220d0:	beq	22150 <myhtml_insertion_mode_after_frameset@@Base+0xb8>
   220d4:	bhi	220f8 <myhtml_insertion_mode_after_frameset@@Base+0x60>
   220d8:	cmp	r2, #1
   220dc:	beq	22114 <myhtml_insertion_mode_after_frameset@@Base+0x7c>
   220e0:	cmp	r2, #2
   220e4:	bne	220c0 <myhtml_insertion_mode_after_frameset@@Base+0x28>
   220e8:	mov	r2, r4
   220ec:	bl	1025c <myhtml_tree_node_insert_comment@plt>
   220f0:	mov	r0, r4
   220f4:	pop	{r4, r5, r6, pc}
   220f8:	cmp	r2, #92	; 0x5c
   220fc:	beq	22158 <myhtml_insertion_mode_after_frameset@@Base+0xc0>
   22100:	cmp	r2, #251	; 0xfb
   22104:	bne	220c0 <myhtml_insertion_mode_after_frameset@@Base+0x28>
   22108:	bl	10310 <myhtml_rules_stop_parsing@plt>
   2210c:	mov	r0, r4
   22110:	pop	{r4, r5, r6, pc}
   22114:	ldr	r3, [r1, #48]	; 0x30
   22118:	tst	r3, #8
   2211c:	bne	2213c <myhtml_insertion_mode_after_frameset@@Base+0xa4>
   22120:	ldr	r0, [r0, #8]
   22124:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   22128:	add	r0, r5, #4
   2212c:	bl	102ec <mycore_string_stay_only_whitespace@plt>
   22130:	ldr	r2, [r5, #12]
   22134:	cmp	r2, #0
   22138:	beq	220c0 <myhtml_insertion_mode_after_frameset@@Base+0x28>
   2213c:	mov	r1, r5
   22140:	mov	r0, r6
   22144:	bl	ff8c <myhtml_tree_node_insert_text@plt>
   22148:	mov	r0, #0
   2214c:	pop	{r4, r5, r6, pc}
   22150:	pop	{r4, r5, r6, lr}
   22154:	b	10640 <myhtml_insertion_mode_in_body@plt>
   22158:	pop	{r4, r5, r6, lr}
   2215c:	b	10058 <myhtml_insertion_mode_in_head@plt>

00022160 <myhtml_insertion_mode_after_after_body@@Base>:
   22160:	ldr	r3, [r1, #48]	; 0x30
   22164:	push	{r4, r5, r6, r7, r8, lr}
   22168:	ands	r4, r3, #1
   2216c:	mov	ip, r0
   22170:	bne	221f4 <myhtml_insertion_mode_after_after_body@@Base+0x94>
   22174:	ldr	r5, [r1]
   22178:	mov	r2, r1
   2217c:	cmp	r5, #3
   22180:	beq	22204 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   22184:	mov	r3, r0
   22188:	mov	r6, r1
   2218c:	bhi	221cc <myhtml_insertion_mode_after_after_body@@Base+0x6c>
   22190:	cmp	r5, #1
   22194:	beq	221e8 <myhtml_insertion_mode_after_after_body@@Base+0x88>
   22198:	cmp	r5, #2
   2219c:	bne	22214 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   221a0:	ldr	r7, [r0, #84]	; 0x54
   221a4:	bl	ffe0 <myhtml_tree_node_create@plt>
   221a8:	ldr	r3, [r7, #8]
   221ac:	mov	r1, r0
   221b0:	str	r5, [r0, #4]
   221b4:	str	r6, [r0, #32]
   221b8:	str	r3, [r0, #8]
   221bc:	mov	r0, r7
   221c0:	bl	106b8 <myhtml_tree_node_add_child@plt>
   221c4:	mov	r0, r4
   221c8:	pop	{r4, r5, r6, r7, r8, pc}
   221cc:	cmp	r5, #65	; 0x41
   221d0:	beq	22204 <myhtml_insertion_mode_after_after_body@@Base+0xa4>
   221d4:	cmp	r5, #251	; 0xfb
   221d8:	bne	22214 <myhtml_insertion_mode_after_after_body@@Base+0xb4>
   221dc:	bl	10310 <myhtml_rules_stop_parsing@plt>
   221e0:	mov	r0, r4
   221e4:	pop	{r4, r5, r6, r7, r8, pc}
   221e8:	ldr	r3, [r1, #48]	; 0x30
   221ec:	tst	r3, #8
   221f0:	bne	2220c <myhtml_insertion_mode_after_after_body@@Base+0xac>
   221f4:	mov	r3, #6
   221f8:	str	r3, [ip, #168]	; 0xa8
   221fc:	mov	r0, #1
   22200:	pop	{r4, r5, r6, r7, r8, pc}
   22204:	mov	r1, r2
   22208:	mov	r0, ip
   2220c:	pop	{r4, r5, r6, r7, r8, lr}
   22210:	b	10640 <myhtml_insertion_mode_in_body@plt>
   22214:	mov	r2, #6
   22218:	mov	r0, #1
   2221c:	str	r2, [r3, #168]	; 0xa8
   22220:	pop	{r4, r5, r6, r7, r8, pc}

00022224 <myhtml_insertion_mode_after_after_frameset@@Base>:
   22224:	ldr	r3, [r1, #48]	; 0x30
   22228:	push	{r4, r5, r6, r7, r8, lr}
   2222c:	ands	r4, r3, #1
   22230:	bne	22278 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   22234:	ldr	r5, [r1]
   22238:	mov	r2, r1
   2223c:	cmp	r5, #3
   22240:	mov	ip, r0
   22244:	beq	222e0 <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   22248:	mov	r7, r0
   2224c:	mov	r6, r1
   22250:	bls	22280 <myhtml_insertion_mode_after_after_frameset@@Base+0x5c>
   22254:	cmp	r5, #92	; 0x5c
   22258:	beq	222f0 <myhtml_insertion_mode_after_after_frameset@@Base+0xcc>
   2225c:	cmp	r5, #251	; 0xfb
   22260:	bne	22270 <myhtml_insertion_mode_after_after_frameset@@Base+0x4c>
   22264:	bl	10310 <myhtml_rules_stop_parsing@plt>
   22268:	mov	r0, r4
   2226c:	pop	{r4, r5, r6, r7, r8, pc}
   22270:	cmp	r5, #65	; 0x41
   22274:	beq	222e0 <myhtml_insertion_mode_after_after_frameset@@Base+0xbc>
   22278:	mov	r0, #0
   2227c:	pop	{r4, r5, r6, r7, r8, pc}
   22280:	cmp	r5, #1
   22284:	beq	222bc <myhtml_insertion_mode_after_after_frameset@@Base+0x98>
   22288:	cmp	r5, #2
   2228c:	bne	22278 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   22290:	ldr	r7, [r0, #84]	; 0x54
   22294:	bl	ffe0 <myhtml_tree_node_create@plt>
   22298:	ldr	r3, [r7, #8]
   2229c:	mov	r1, r0
   222a0:	str	r5, [r0, #4]
   222a4:	str	r6, [r0, #32]
   222a8:	str	r3, [r0, #8]
   222ac:	mov	r0, r7
   222b0:	bl	106b8 <myhtml_tree_node_add_child@plt>
   222b4:	mov	r0, r4
   222b8:	pop	{r4, r5, r6, r7, r8, pc}
   222bc:	ldr	r3, [r1, #48]	; 0x30
   222c0:	tst	r3, #8
   222c4:	bne	222d8 <myhtml_insertion_mode_after_after_frameset@@Base+0xb4>
   222c8:	bl	fef0 <myhtml_insertion_fix_split_for_text_begin_ws@plt>
   222cc:	subs	r1, r0, #0
   222d0:	beq	22278 <myhtml_insertion_mode_after_after_frameset@@Base+0x54>
   222d4:	mov	r0, r7
   222d8:	pop	{r4, r5, r6, r7, r8, lr}
   222dc:	b	10640 <myhtml_insertion_mode_in_body@plt>
   222e0:	mov	r1, r2
   222e4:	mov	r0, ip
   222e8:	pop	{r4, r5, r6, r7, r8, lr}
   222ec:	b	10640 <myhtml_insertion_mode_in_body@plt>
   222f0:	pop	{r4, r5, r6, r7, r8, lr}
   222f4:	b	10058 <myhtml_insertion_mode_in_head@plt>

000222f8 <myhtml_rules_check_for_first_newline@@Base>:
   222f8:	ldr	r3, [r0, #180]	; 0xb4
   222fc:	ands	r3, r3, #64	; 0x40
   22300:	beq	223b8 <myhtml_rules_check_for_first_newline@@Base+0xc0>
   22304:	ldr	r3, [r0, #180]	; 0xb4
   22308:	push	{r4, r5, lr}
   2230c:	tst	r3, #128	; 0x80
   22310:	sub	sp, sp, #12
   22314:	mov	r5, r0
   22318:	bne	2233c <myhtml_rules_check_for_first_newline@@Base+0x44>
   2231c:	ldr	r3, [r5, #180]	; 0xb4
   22320:	ldr	r2, [r5, #180]	; 0xb4
   22324:	and	r3, r3, #64	; 0x40
   22328:	mov	r0, #0
   2232c:	eor	r3, r3, r2
   22330:	str	r3, [r5, #180]	; 0xb4
   22334:	add	sp, sp, #12
   22338:	pop	{r4, r5, pc}
   2233c:	ldr	r4, [r1]
   22340:	cmp	r4, #1
   22344:	bne	2231c <myhtml_rules_check_for_first_newline@@Base+0x24>
   22348:	ldr	r0, [r0, #8]
   2234c:	str	r1, [sp, #4]
   22350:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   22354:	ldr	r2, [sp, #4]
   22358:	ldr	r3, [r2, #12]
   2235c:	cmp	r3, #0
   22360:	moveq	r0, r4
   22364:	beq	22334 <myhtml_rules_check_for_first_newline@@Base+0x3c>
   22368:	ldr	r0, [r2, #4]
   2236c:	ldrb	r3, [r0]
   22370:	cmp	r3, #10
   22374:	bne	2231c <myhtml_rules_check_for_first_newline@@Base+0x24>
   22378:	mov	r1, r4
   2237c:	bl	10c64 <mchar_async_crop_first_chars_without_cache@plt>
   22380:	ldr	r2, [sp, #4]
   22384:	ldr	r3, [r2, #12]
   22388:	sub	r3, r3, #1
   2238c:	cmp	r3, #0
   22390:	str	r3, [r2, #12]
   22394:	str	r0, [r2, #4]
   22398:	bne	2231c <myhtml_rules_check_for_first_newline@@Base+0x24>
   2239c:	ldr	r3, [r5, #180]	; 0xb4
   223a0:	ldr	r2, [r5, #180]	; 0xb4
   223a4:	and	r3, r3, #64	; 0x40
   223a8:	eor	r3, r3, r2
   223ac:	mov	r0, r4
   223b0:	str	r3, [r5, #180]	; 0xb4
   223b4:	b	22334 <myhtml_rules_check_for_first_newline@@Base+0x3c>
   223b8:	mov	r0, r3
   223bc:	bx	lr

000223c0 <myhtml_rules_tree_dispatcher@@Base>:
   223c0:	push	{r4, r5, r6, lr}
   223c4:	mov	r4, r0
   223c8:	mov	r5, r1
   223cc:	bl	10d60 <myhtml_rules_check_for_first_newline@plt>
   223d0:	cmp	r0, #0
   223d4:	bne	224e0 <myhtml_rules_tree_dispatcher@@Base+0x120>
   223d8:	ldr	r3, [r4, #164]	; 0xa4
   223dc:	cmp	r3, #0
   223e0:	strne	r0, [r4, #164]	; 0xa4
   223e4:	mov	r0, r4
   223e8:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   223ec:	ldr	r3, [r4, #128]	; 0x80
   223f0:	ldr	r3, [r3, #4]
   223f4:	cmp	r3, #0
   223f8:	mov	r6, r0
   223fc:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22400:	ldr	r3, [r0, #8]
   22404:	cmp	r3, #1
   22408:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   2240c:	mov	r1, r0
   22410:	mov	r0, r4
   22414:	bl	10040 <myhtml_tree_is_mathml_integration_point@plt>
   22418:	cmp	r0, #0
   2241c:	beq	22444 <myhtml_rules_tree_dispatcher@@Base+0x84>
   22420:	ldr	r3, [r5]
   22424:	cmp	r3, #1
   22428:	beq	22438 <myhtml_rules_tree_dispatcher@@Base+0x78>
   2242c:	cmp	r3, #226	; 0xe2
   22430:	cmpne	r3, #221	; 0xdd
   22434:	beq	22444 <myhtml_rules_tree_dispatcher@@Base+0x84>
   22438:	ldr	r3, [r5, #48]	; 0x30
   2243c:	tst	r3, #1
   22440:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22444:	ldr	r3, [r6, #4]
   22448:	cmp	r3, #8
   2244c:	beq	22494 <myhtml_rules_tree_dispatcher@@Base+0xd4>
   22450:	mov	r1, r6
   22454:	mov	r0, r4
   22458:	bl	101fc <myhtml_tree_is_html_integration_point@plt>
   2245c:	cmp	r0, #0
   22460:	beq	224ec <myhtml_rules_tree_dispatcher@@Base+0x12c>
   22464:	ldr	r3, [r5, #48]	; 0x30
   22468:	tst	r3, #1
   2246c:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22470:	ldr	r3, [r5]
   22474:	cmp	r3, #1
   22478:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   2247c:	cmp	r3, #251	; 0xfb
   22480:	beq	224b8 <myhtml_rules_tree_dispatcher@@Base+0xf8>
   22484:	mov	r1, r5
   22488:	mov	r0, r4
   2248c:	bl	fe24 <myhtml_insertion_mode_in_foreign_content@plt>
   22490:	b	224d4 <myhtml_rules_tree_dispatcher@@Base+0x114>
   22494:	ldr	r3, [r6, #8]
   22498:	cmp	r3, #2
   2249c:	bne	22450 <myhtml_rules_tree_dispatcher@@Base+0x90>
   224a0:	ldr	r3, [r5]
   224a4:	cmp	r3, #124	; 0x7c
   224a8:	bne	22450 <myhtml_rules_tree_dispatcher@@Base+0x90>
   224ac:	ldr	r3, [r5, #48]	; 0x30
   224b0:	tst	r3, #1
   224b4:	bne	22450 <myhtml_rules_tree_dispatcher@@Base+0x90>
   224b8:	ldr	r3, [r4]
   224bc:	ldr	r2, [r4, #168]	; 0xa8
   224c0:	mov	r1, r5
   224c4:	ldr	r3, [r3, #28]
   224c8:	mov	r0, r4
   224cc:	ldr	r3, [r3, r2, lsl #2]
   224d0:	blx	r3
   224d4:	cmp	r0, #0
   224d8:	streq	r5, [r4, #152]	; 0x98
   224dc:	pop	{r4, r5, r6, pc}
   224e0:	str	r5, [r4, #152]	; 0x98
   224e4:	mov	r0, #0
   224e8:	pop	{r4, r5, r6, pc}
   224ec:	ldr	r3, [r5]
   224f0:	b	2247c <myhtml_rules_tree_dispatcher@@Base+0xbc>

000224f4 <myhtml_rules_init@@Base>:
   224f4:	push	{r4, lr}
   224f8:	mov	r4, r0
   224fc:	mov	r0, #92	; 0x5c
   22500:	bl	10c94 <mycore_malloc@plt>
   22504:	ldr	r2, [pc, #308]	; 22640 <myhtml_rules_init@@Base+0x14c>
   22508:	add	r2, pc, r2
   2250c:	cmp	r0, #0
   22510:	str	r0, [r4, #28]
   22514:	beq	22638 <myhtml_rules_init@@Base+0x144>
   22518:	ldr	ip, [pc, #292]	; 22644 <myhtml_rules_init@@Base+0x150>
   2251c:	ldr	r1, [pc, #292]	; 22648 <myhtml_rules_init@@Base+0x154>
   22520:	mov	r3, r0
   22524:	ldr	lr, [r2, ip]
   22528:	ldr	r0, [pc, #284]	; 2264c <myhtml_rules_init@@Base+0x158>
   2252c:	str	lr, [r3]
   22530:	ldr	lr, [r2, r1]
   22534:	ldr	ip, [pc, #276]	; 22650 <myhtml_rules_init@@Base+0x15c>
   22538:	str	lr, [r3, #4]
   2253c:	ldr	lr, [r2, r0]
   22540:	ldr	r1, [pc, #268]	; 22654 <myhtml_rules_init@@Base+0x160>
   22544:	str	lr, [r3, #8]
   22548:	ldr	lr, [r2, ip]
   2254c:	ldr	r0, [pc, #260]	; 22658 <myhtml_rules_init@@Base+0x164>
   22550:	str	lr, [r3, #12]
   22554:	ldr	lr, [r2, r1]
   22558:	ldr	ip, [pc, #252]	; 2265c <myhtml_rules_init@@Base+0x168>
   2255c:	str	lr, [r3, #16]
   22560:	ldr	lr, [r2, r0]
   22564:	ldr	r1, [pc, #244]	; 22660 <myhtml_rules_init@@Base+0x16c>
   22568:	str	lr, [r3, #20]
   2256c:	ldr	lr, [r2, ip]
   22570:	ldr	r0, [pc, #236]	; 22664 <myhtml_rules_init@@Base+0x170>
   22574:	str	lr, [r3, #24]
   22578:	ldr	lr, [r2, r1]
   2257c:	ldr	ip, [pc, #228]	; 22668 <myhtml_rules_init@@Base+0x174>
   22580:	str	lr, [r3, #28]
   22584:	ldr	lr, [r2, r0]
   22588:	ldr	r1, [pc, #220]	; 2266c <myhtml_rules_init@@Base+0x178>
   2258c:	str	lr, [r3, #32]
   22590:	ldr	lr, [r2, ip]
   22594:	ldr	r0, [pc, #212]	; 22670 <myhtml_rules_init@@Base+0x17c>
   22598:	str	lr, [r3, #36]	; 0x24
   2259c:	ldr	lr, [r2, r1]
   225a0:	ldr	ip, [pc, #204]	; 22674 <myhtml_rules_init@@Base+0x180>
   225a4:	str	lr, [r3, #40]	; 0x28
   225a8:	ldr	lr, [r2, r0]
   225ac:	ldr	r1, [pc, #196]	; 22678 <myhtml_rules_init@@Base+0x184>
   225b0:	str	lr, [r3, #44]	; 0x2c
   225b4:	ldr	lr, [r2, ip]
   225b8:	ldr	r0, [pc, #188]	; 2267c <myhtml_rules_init@@Base+0x188>
   225bc:	str	lr, [r3, #48]	; 0x30
   225c0:	ldr	lr, [r2, r1]
   225c4:	ldr	ip, [pc, #180]	; 22680 <myhtml_rules_init@@Base+0x18c>
   225c8:	str	lr, [r3, #52]	; 0x34
   225cc:	ldr	lr, [r2, r0]
   225d0:	ldr	r1, [pc, #172]	; 22684 <myhtml_rules_init@@Base+0x190>
   225d4:	str	lr, [r3, #56]	; 0x38
   225d8:	ldr	lr, [r2, ip]
   225dc:	ldr	r0, [pc, #164]	; 22688 <myhtml_rules_init@@Base+0x194>
   225e0:	str	lr, [r3, #60]	; 0x3c
   225e4:	ldr	lr, [r2, r1]
   225e8:	ldr	ip, [pc, #156]	; 2268c <myhtml_rules_init@@Base+0x198>
   225ec:	str	lr, [r3, #64]	; 0x40
   225f0:	ldr	lr, [r2, r0]
   225f4:	ldr	r1, [pc, #148]	; 22690 <myhtml_rules_init@@Base+0x19c>
   225f8:	str	lr, [r3, #68]	; 0x44
   225fc:	ldr	lr, [r2, ip]
   22600:	ldr	r0, [pc, #140]	; 22694 <myhtml_rules_init@@Base+0x1a0>
   22604:	str	lr, [r3, #72]	; 0x48
   22608:	ldr	lr, [r2, r1]
   2260c:	ldr	ip, [pc, #132]	; 22698 <myhtml_rules_init@@Base+0x1a4>
   22610:	str	lr, [r3, #76]	; 0x4c
   22614:	ldr	lr, [r2, r0]
   22618:	ldr	r1, [pc, #124]	; 2269c <myhtml_rules_init@@Base+0x1a8>
   2261c:	str	lr, [r3, #80]	; 0x50
   22620:	ldr	ip, [r2, ip]
   22624:	mov	r0, #0
   22628:	str	ip, [r3, #84]	; 0x54
   2262c:	ldr	r2, [r2, r1]
   22630:	str	r2, [r3, #88]	; 0x58
   22634:	pop	{r4, pc}
   22638:	ldr	r0, [pc, #96]	; 226a0 <myhtml_rules_init@@Base+0x1ac>
   2263c:	pop	{r4, pc}
   22640:	strdeq	r2, [pc], -r0
   22644:	andeq	r0, r0, r8, lsr #16
   22648:	andeq	r0, r0, r8, asr r9
   2264c:	andeq	r0, r0, r4, ror #18
   22650:	andeq	r0, r0, ip, lsr #15
   22654:	andeq	r0, r0, r0, lsl #18
   22658:	andeq	r0, r0, ip, lsr #18
   2265c:	muleq	r0, r8, r8
   22660:	andeq	r0, r0, r0, lsl #16
   22664:	ldrdeq	r0, [r0], -ip
   22668:	andeq	r0, r0, r4, ror #17
   2266c:	andeq	r0, r0, r4, lsr #18
   22670:	andeq	r0, r0, r4, lsl r9
   22674:	andeq	r0, r0, ip, lsl r9
   22678:	andeq	r0, r0, r8, lsr #15
   2267c:	andeq	r0, r0, r8, lsr #19
   22680:	andeq	r0, r0, r8, lsr r8
   22684:	muleq	r0, ip, r8
   22688:	andeq	r0, r0, r0, ror #14
   2268c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   22690:	andeq	r0, r0, r4, ror r9
   22694:	andeq	r0, r0, r4, lsr #14
   22698:	andeq	r0, r0, r0, lsr #14
   2269c:	andeq	r0, r0, r0, lsr #16
   226a0:	andeq	r9, r0, r4, rrx
   226a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226a8:	subs	r5, r1, #0
   226ac:	sub	sp, sp, #20
   226b0:	beq	2279c <myhtml_rules_init@@Base+0x2a8>
   226b4:	mov	r7, r3
   226b8:	ldr	r3, [pc, #452]	; 22884 <myhtml_rules_init@@Base+0x390>
   226bc:	ldr	fp, [pc, #452]	; 22888 <myhtml_rules_init@@Base+0x394>
   226c0:	add	r3, pc, r3
   226c4:	str	r3, [sp, #4]
   226c8:	ldr	r3, [pc, #444]	; 2288c <myhtml_rules_init@@Base+0x398>
   226cc:	mov	r4, #0
   226d0:	add	r3, pc, r3
   226d4:	str	r3, [sp, #12]
   226d8:	ldr	r3, [pc, #432]	; 22890 <myhtml_rules_init@@Base+0x39c>
   226dc:	mov	r6, r2
   226e0:	add	r3, pc, r3
   226e4:	mov	r8, r0
   226e8:	add	fp, pc, fp
   226ec:	str	r3, [sp, #8]
   226f0:	mov	r1, r4
   226f4:	sub	sl, r0, #1
   226f8:	mov	r9, #4
   226fc:	b	22734 <myhtml_rules_init@@Base+0x240>
   22700:	cmp	r2, #62	; 0x3e
   22704:	beq	227ec <myhtml_rules_init@@Base+0x2f8>
   22708:	cmp	r2, #160	; 0xa0
   2270c:	bne	22724 <myhtml_rules_init@@Base+0x230>
   22710:	cmp	r4, #0
   22714:	beq	22724 <myhtml_rules_init@@Base+0x230>
   22718:	ldrb	r2, [sl, #-1]
   2271c:	cmp	r2, #194	; 0xc2
   22720:	beq	22828 <myhtml_rules_init@@Base+0x334>
   22724:	add	r4, r4, #1
   22728:	cmp	r5, r4
   2272c:	add	r1, r1, #1
   22730:	beq	22794 <myhtml_rules_init@@Base+0x2a0>
   22734:	ldrb	r2, [sl, #1]!
   22738:	cmp	r2, #60	; 0x3c
   2273c:	beq	227a8 <myhtml_rules_init@@Base+0x2b4>
   22740:	bhi	22700 <myhtml_rules_init@@Base+0x20c>
   22744:	cmp	r2, #38	; 0x26
   22748:	bne	22724 <myhtml_rules_init@@Base+0x230>
   2274c:	cmp	r1, #0
   22750:	beq	2276c <myhtml_rules_init@@Base+0x278>
   22754:	sub	r0, r4, r1
   22758:	add	r0, r8, r0
   2275c:	mov	r2, r7
   22760:	blx	r6
   22764:	cmp	r0, #0
   22768:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   2276c:	mov	r2, r7
   22770:	mov	r1, #5
   22774:	ldr	r0, [sp, #8]
   22778:	blx	r6
   2277c:	cmp	r0, #0
   22780:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   22784:	add	r4, r4, #1
   22788:	cmp	r5, r4
   2278c:	mov	r1, #0
   22790:	bne	22734 <myhtml_rules_init@@Base+0x240>
   22794:	cmp	r1, #0
   22798:	bne	22868 <myhtml_rules_init@@Base+0x374>
   2279c:	mov	r0, #0
   227a0:	add	sp, sp, #20
   227a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227a8:	cmp	r1, #0
   227ac:	beq	227c8 <myhtml_rules_init@@Base+0x2d4>
   227b0:	sub	r0, r4, r1
   227b4:	add	r0, r8, r0
   227b8:	mov	r2, r7
   227bc:	blx	r6
   227c0:	cmp	r0, #0
   227c4:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   227c8:	mov	r2, r7
   227cc:	mov	r1, r9
   227d0:	mov	r0, fp
   227d4:	blx	r6
   227d8:	cmp	r0, #0
   227dc:	beq	22784 <myhtml_rules_init@@Base+0x290>
   227e0:	mov	r0, #2
   227e4:	add	sp, sp, #20
   227e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227ec:	cmp	r1, #0
   227f0:	beq	2280c <myhtml_rules_init@@Base+0x318>
   227f4:	sub	r0, r4, r1
   227f8:	add	r0, r8, r0
   227fc:	mov	r2, r7
   22800:	blx	r6
   22804:	cmp	r0, #0
   22808:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   2280c:	mov	r2, r7
   22810:	mov	r1, r9
   22814:	ldr	r0, [sp, #4]
   22818:	blx	r6
   2281c:	cmp	r0, #0
   22820:	beq	22784 <myhtml_rules_init@@Base+0x290>
   22824:	b	227e0 <myhtml_rules_init@@Base+0x2ec>
   22828:	cmp	r1, #0
   2282c:	beq	2284c <myhtml_rules_init@@Base+0x358>
   22830:	sub	r0, r4, r1
   22834:	add	r0, r8, r0
   22838:	sub	r1, r1, #1
   2283c:	mov	r2, r7
   22840:	blx	r6
   22844:	cmp	r0, #0
   22848:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   2284c:	mov	r2, r7
   22850:	mov	r1, #6
   22854:	ldr	r0, [sp, #12]
   22858:	blx	r6
   2285c:	cmp	r0, #0
   22860:	beq	22784 <myhtml_rules_init@@Base+0x290>
   22864:	b	227e0 <myhtml_rules_init@@Base+0x2ec>
   22868:	sub	r0, r5, r1
   2286c:	add	r0, r8, r0
   22870:	mov	r2, r7
   22874:	blx	r6
   22878:	cmp	r0, #0
   2287c:	bne	227e0 <myhtml_rules_init@@Base+0x2ec>
   22880:	b	2279c <myhtml_rules_init@@Base+0x2a8>
   22884:			; <UNDEFINED> instruction: 0x000d83b8
   22888:	andeq	r8, sp, r8, lsl #7
   2288c:			; <UNDEFINED> instruction: 0x000d83b0
   22890:	andeq	r8, sp, r8, lsl #7
   22894:	ldr	ip, [r0, #4]
   22898:	sub	r3, ip, #1
   2289c:	cmp	r3, #141	; 0x8d
   228a0:	addls	pc, pc, r3, lsl #2
   228a4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228a8:	b	22b38 <myhtml_rules_init@@Base+0x644>
   228ac:	b	22b38 <myhtml_rules_init@@Base+0x644>
   228b0:	b	22b38 <myhtml_rules_init@@Base+0x644>
   228b4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228b8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228bc:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228c0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228c4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228c8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228cc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   228d0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228d4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228d8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228dc:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228e0:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   228e4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228e8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228ec:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228f0:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   228f4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228f8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   228fc:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22900:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22904:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22908:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2290c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22910:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22914:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22918:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2291c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22920:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22924:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22928:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2292c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22930:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22934:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22938:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2293c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22940:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22944:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22948:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2294c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22950:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22954:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22958:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2295c:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22960:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22964:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22968:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2296c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22970:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22974:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22978:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   2297c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22980:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22984:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22988:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2298c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22990:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22994:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22998:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   2299c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229a0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229a4:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   229a8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229ac:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229b0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229b4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229b8:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   229bc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   229c0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229c4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229c8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229cc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   229d0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229d4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229d8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229dc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   229e0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229e4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229e8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229ec:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229f0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229f4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229f8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   229fc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22a00:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a04:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a08:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a0c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a10:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a14:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a18:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a1c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a20:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a24:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a28:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a2c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a30:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a34:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22a38:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a3c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a40:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a44:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a48:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a4c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a50:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a54:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a58:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a5c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a60:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a64:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a68:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a6c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a70:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a74:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22a78:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a7c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a80:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a84:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a88:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a8c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a90:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a94:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a98:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22a9c:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22aa0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22aa4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22aa8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22aac:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ab0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ab4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ab8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22abc:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ac0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ac4:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22ac8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22acc:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ad0:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ad4:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22ad8:	b	22aec <myhtml_rules_init@@Base+0x5f8>
   22adc:	b	22ae0 <myhtml_rules_init@@Base+0x5ec>
   22ae0:	ldr	r3, [r0, #8]
   22ae4:	cmp	r3, #1
   22ae8:	beq	22b38 <myhtml_rules_init@@Base+0x644>
   22aec:	push	{r4, r5, r6, lr}
   22af0:	sub	sp, sp, #8
   22af4:	mov	r5, r2
   22af8:	mov	r4, r1
   22afc:	add	r2, sp, #4
   22b00:	mov	r1, ip
   22b04:	ldr	r0, [r0, #40]	; 0x28
   22b08:	bl	10af0 <myhtml_tag_name_by_id@plt>
   22b0c:	mov	r2, r5
   22b10:	mov	r1, #2
   22b14:	mov	r6, r0
   22b18:	ldr	r0, [pc, #92]	; 22b7c <myhtml_rules_init@@Base+0x688>
   22b1c:	add	r0, pc, r0
   22b20:	blx	r4
   22b24:	cmp	r0, #0
   22b28:	beq	22b40 <myhtml_rules_init@@Base+0x64c>
   22b2c:	mov	r0, #2
   22b30:	add	sp, sp, #8
   22b34:	pop	{r4, r5, r6, pc}
   22b38:	mov	r0, #0
   22b3c:	bx	lr
   22b40:	mov	r0, r6
   22b44:	mov	r2, r5
   22b48:	ldr	r1, [sp, #4]
   22b4c:	blx	r4
   22b50:	cmp	r0, #0
   22b54:	bne	22b2c <myhtml_rules_init@@Base+0x638>
   22b58:	ldr	r0, [pc, #32]	; 22b80 <myhtml_rules_init@@Base+0x68c>
   22b5c:	mov	r2, r5
   22b60:	mov	r1, #1
   22b64:	add	r0, pc, r0
   22b68:	blx	r4
   22b6c:	cmp	r0, #0
   22b70:	bne	22b2c <myhtml_rules_init@@Base+0x638>
   22b74:	mov	r0, #0
   22b78:	b	22b30 <myhtml_rules_init@@Base+0x63c>
   22b7c:	andeq	r7, sp, ip, ror #30
   22b80:	andeq	r7, sp, r8, lsr #30

00022b84 <myhtml_serialization_node_callback@@Base>:
   22b84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b88:	mov	fp, r1
   22b8c:	ldr	r1, [r0, #4]
   22b90:	sub	sp, sp, #52	; 0x34
   22b94:	cmp	r1, #2
   22b98:	mov	r4, r0
   22b9c:	mov	r8, r2
   22ba0:	beq	22ce0 <myhtml_serialization_node_callback@@Base+0x15c>
   22ba4:	cmp	r1, #3
   22ba8:	beq	22c5c <myhtml_serialization_node_callback@@Base+0xd8>
   22bac:	cmp	r1, #1
   22bb0:	beq	22bec <myhtml_serialization_node_callback@@Base+0x68>
   22bb4:	add	r2, sp, #40	; 0x28
   22bb8:	ldr	r0, [r0, #40]	; 0x28
   22bbc:	bl	10af0 <myhtml_tag_name_by_id@plt>
   22bc0:	mov	r2, r8
   22bc4:	mov	r1, #1
   22bc8:	mov	r5, r0
   22bcc:	ldr	r0, [pc, #1616]	; 23224 <myhtml_serialization_node_callback@@Base+0x6a0>
   22bd0:	add	r0, pc, r0
   22bd4:	blx	fp
   22bd8:	cmp	r0, #0
   22bdc:	beq	22d74 <myhtml_serialization_node_callback@@Base+0x1f0>
   22be0:	mov	r0, #2
   22be4:	add	sp, sp, #52	; 0x34
   22be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22bec:	ldr	r1, [r0, #32]
   22bf0:	cmp	r1, #0
   22bf4:	beq	22c50 <myhtml_serialization_node_callback@@Base+0xcc>
   22bf8:	ldr	r0, [r1, #4]
   22bfc:	cmp	r0, #0
   22c00:	beq	22c50 <myhtml_serialization_node_callback@@Base+0xcc>
   22c04:	ldr	r3, [r4, #24]
   22c08:	cmp	r3, #0
   22c0c:	beq	22c38 <myhtml_serialization_node_callback@@Base+0xb4>
   22c10:	ldr	r3, [r3, #4]
   22c14:	cmp	r3, #101	; 0x65
   22c18:	beq	22d5c <myhtml_serialization_node_callback@@Base+0x1d8>
   22c1c:	bls	22d44 <myhtml_serialization_node_callback@@Base+0x1c0>
   22c20:	cmp	r3, #120	; 0x78
   22c24:	beq	22d5c <myhtml_serialization_node_callback@@Base+0x1d8>
   22c28:	cmp	r3, #143	; 0x8f
   22c2c:	beq	22d5c <myhtml_serialization_node_callback@@Base+0x1d8>
   22c30:	cmp	r3, #112	; 0x70
   22c34:	beq	22d5c <myhtml_serialization_node_callback@@Base+0x1d8>
   22c38:	mov	r3, r8
   22c3c:	mov	r2, fp
   22c40:	ldr	r1, [r1, #12]
   22c44:	bl	226a4 <myhtml_rules_init@@Base+0x1b0>
   22c48:	cmp	r0, #0
   22c4c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22c50:	mov	r0, #0
   22c54:	add	sp, sp, #52	; 0x34
   22c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c5c:	ldr	r0, [pc, #1476]	; 23228 <myhtml_serialization_node_callback@@Base+0x6a4>
   22c60:	mov	r1, #9
   22c64:	add	r0, pc, r0
   22c68:	blx	fp
   22c6c:	cmp	r0, #0
   22c70:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22c74:	ldr	r0, [pc, #1456]	; 2322c <myhtml_serialization_node_callback@@Base+0x6a8>
   22c78:	mov	r2, r8
   22c7c:	mov	r1, #1
   22c80:	add	r0, pc, r0
   22c84:	blx	fp
   22c88:	cmp	r0, #0
   22c8c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22c90:	ldr	r3, [r4, #32]
   22c94:	cmp	r3, #0
   22c98:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   22c9c:	ldr	r4, [r3, #40]	; 0x28
   22ca0:	cmp	r4, #0
   22ca4:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   22ca8:	ldr	r0, [r4, #8]
   22cac:	cmp	r0, #0
   22cb0:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   22cb4:	ldr	r1, [r4, #16]
   22cb8:	cmp	r1, #0
   22cbc:	bne	230a4 <myhtml_serialization_node_callback@@Base+0x520>
   22cc0:	ldr	r0, [pc, #1384]	; 23230 <myhtml_serialization_node_callback@@Base+0x6ac>
   22cc4:	mov	r2, r8
   22cc8:	mov	r1, #1
   22ccc:	add	r0, pc, r0
   22cd0:	blx	fp
   22cd4:	cmp	r0, #0
   22cd8:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22cdc:	b	22c50 <myhtml_serialization_node_callback@@Base+0xcc>
   22ce0:	ldr	r0, [pc, #1356]	; 23234 <myhtml_serialization_node_callback@@Base+0x6b0>
   22ce4:	mov	r1, #4
   22ce8:	add	r0, pc, r0
   22cec:	blx	fp
   22cf0:	cmp	r0, #0
   22cf4:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22cf8:	ldr	r3, [r4, #32]
   22cfc:	cmp	r3, #0
   22d00:	beq	22d24 <myhtml_serialization_node_callback@@Base+0x1a0>
   22d04:	ldr	r0, [r3, #4]
   22d08:	cmp	r0, #0
   22d0c:	beq	22d24 <myhtml_serialization_node_callback@@Base+0x1a0>
   22d10:	ldr	r1, [r3, #12]
   22d14:	mov	r2, r8
   22d18:	blx	fp
   22d1c:	cmp	r0, #0
   22d20:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22d24:	ldr	r0, [pc, #1292]	; 23238 <myhtml_serialization_node_callback@@Base+0x6b4>
   22d28:	mov	r2, r8
   22d2c:	mov	r1, #3
   22d30:	add	r0, pc, r0
   22d34:	blx	fp
   22d38:	cmp	r0, #0
   22d3c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22d40:	b	22c50 <myhtml_serialization_node_callback@@Base+0xcc>
   22d44:	cmp	r3, #67	; 0x43
   22d48:	beq	22d5c <myhtml_serialization_node_callback@@Base+0x1d8>
   22d4c:	bcc	22c38 <myhtml_serialization_node_callback@@Base+0xb4>
   22d50:	sub	r3, r3, #91	; 0x5b
   22d54:	cmp	r3, #1
   22d58:	bhi	22c38 <myhtml_serialization_node_callback@@Base+0xb4>
   22d5c:	mov	r2, r8
   22d60:	ldr	r1, [r1, #12]
   22d64:	blx	fp
   22d68:	cmp	r0, #0
   22d6c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22d70:	b	22c50 <myhtml_serialization_node_callback@@Base+0xcc>
   22d74:	mov	r0, r5
   22d78:	mov	r2, r8
   22d7c:	ldr	r1, [sp, #40]	; 0x28
   22d80:	blx	fp
   22d84:	cmp	r0, #0
   22d88:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22d8c:	ldr	r3, [r4, #32]
   22d90:	cmp	r3, #0
   22d94:	beq	23008 <myhtml_serialization_node_callback@@Base+0x484>
   22d98:	ldr	r9, [r3, #40]	; 0x28
   22d9c:	cmp	r9, #0
   22da0:	beq	23008 <myhtml_serialization_node_callback@@Base+0x484>
   22da4:	ldr	r3, [pc, #1168]	; 2323c <myhtml_serialization_node_callback@@Base+0x6b8>
   22da8:	add	r3, pc, r3
   22dac:	str	r3, [sp, #16]
   22db0:	ldr	r3, [pc, #1160]	; 23240 <myhtml_serialization_node_callback@@Base+0x6bc>
   22db4:	add	r3, pc, r3
   22db8:	str	r3, [sp, #24]
   22dbc:	ldr	r3, [pc, #1152]	; 23244 <myhtml_serialization_node_callback@@Base+0x6c0>
   22dc0:	add	r3, pc, r3
   22dc4:	str	r3, [sp, #32]
   22dc8:	ldr	r3, [pc, #1144]	; 23248 <myhtml_serialization_node_callback@@Base+0x6c4>
   22dcc:	add	r3, pc, r3
   22dd0:	str	r3, [sp, #36]	; 0x24
   22dd4:	ldr	r3, [pc, #1136]	; 2324c <myhtml_serialization_node_callback@@Base+0x6c8>
   22dd8:	add	r3, pc, r3
   22ddc:	str	r3, [sp, #28]
   22de0:	ldr	r3, [pc, #1128]	; 23250 <myhtml_serialization_node_callback@@Base+0x6cc>
   22de4:	add	r3, pc, r3
   22de8:	str	r3, [sp, #20]
   22dec:	mov	r2, r8
   22df0:	mov	r1, #1
   22df4:	ldr	r0, [sp, #16]
   22df8:	blx	fp
   22dfc:	cmp	r0, #0
   22e00:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22e04:	ldr	r4, [r9, #64]	; 0x40
   22e08:	cmp	r4, #5
   22e0c:	beq	23088 <myhtml_serialization_node_callback@@Base+0x504>
   22e10:	cmp	r4, #6
   22e14:	beq	23044 <myhtml_serialization_node_callback@@Base+0x4c0>
   22e18:	cmp	r4, #4
   22e1c:	beq	23028 <myhtml_serialization_node_callback@@Base+0x4a4>
   22e20:	add	r5, sp, #44	; 0x2c
   22e24:	mov	r1, r5
   22e28:	mov	r0, r9
   22e2c:	bl	10b08 <myhtml_attribute_key@plt>
   22e30:	cmp	r0, #0
   22e34:	beq	22e4c <myhtml_serialization_node_callback@@Base+0x2c8>
   22e38:	mov	r2, r8
   22e3c:	ldr	r1, [sp, #44]	; 0x2c
   22e40:	blx	fp
   22e44:	cmp	r0, #0
   22e48:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22e4c:	mov	r2, r8
   22e50:	mov	r1, #2
   22e54:	ldr	r0, [sp, #20]
   22e58:	blx	fp
   22e5c:	subs	r4, r0, #0
   22e60:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22e64:	mov	r1, r5
   22e68:	mov	r0, r9
   22e6c:	bl	10490 <myhtml_attribute_value@plt>
   22e70:	subs	r6, r0, #0
   22e74:	beq	22fe0 <myhtml_serialization_node_callback@@Base+0x45c>
   22e78:	ldr	r5, [sp, #44]	; 0x2c
   22e7c:	cmp	r5, #0
   22e80:	beq	22fe0 <myhtml_serialization_node_callback@@Base+0x45c>
   22e84:	ldr	r3, [pc, #968]	; 23254 <myhtml_serialization_node_callback@@Base+0x6d0>
   22e88:	sub	sl, r6, #1
   22e8c:	add	r3, pc, r3
   22e90:	str	r3, [sp, #4]
   22e94:	ldr	r3, [pc, #956]	; 23258 <myhtml_serialization_node_callback@@Base+0x6d4>
   22e98:	str	r9, [sp, #12]
   22e9c:	add	r3, pc, r3
   22ea0:	str	r3, [sp, #8]
   22ea4:	ldr	r3, [pc, #944]	; 2325c <myhtml_serialization_node_callback@@Base+0x6d8>
   22ea8:	mov	r9, sl
   22eac:	add	r3, pc, r3
   22eb0:	mov	r1, r4
   22eb4:	mov	r7, #6
   22eb8:	mov	sl, r3
   22ebc:	b	22ee0 <myhtml_serialization_node_callback@@Base+0x35c>
   22ec0:	cmp	r2, #160	; 0xa0
   22ec4:	beq	22f68 <myhtml_serialization_node_callback@@Base+0x3e4>
   22ec8:	cmp	r2, #34	; 0x22
   22ecc:	beq	22f2c <myhtml_serialization_node_callback@@Base+0x3a8>
   22ed0:	add	r1, r1, #1
   22ed4:	add	r4, r4, #1
   22ed8:	cmp	r5, r4
   22edc:	beq	22fbc <myhtml_serialization_node_callback@@Base+0x438>
   22ee0:	ldrb	r2, [r9, #1]!
   22ee4:	cmp	r2, #38	; 0x26
   22ee8:	bne	22ec0 <myhtml_serialization_node_callback@@Base+0x33c>
   22eec:	cmp	r1, #0
   22ef0:	beq	22f0c <myhtml_serialization_node_callback@@Base+0x388>
   22ef4:	sub	r0, r4, r1
   22ef8:	add	r0, r6, r0
   22efc:	mov	r2, r8
   22f00:	blx	fp
   22f04:	cmp	r0, #0
   22f08:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22f0c:	mov	r2, r8
   22f10:	mov	r1, #5
   22f14:	ldr	r0, [sp, #4]
   22f18:	blx	fp
   22f1c:	cmp	r0, #0
   22f20:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22f24:	mov	r1, #0
   22f28:	b	22ed4 <myhtml_serialization_node_callback@@Base+0x350>
   22f2c:	cmp	r1, #0
   22f30:	beq	22f4c <myhtml_serialization_node_callback@@Base+0x3c8>
   22f34:	sub	r0, r4, r1
   22f38:	add	r0, r6, r0
   22f3c:	mov	r2, r8
   22f40:	blx	fp
   22f44:	cmp	r0, #0
   22f48:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22f4c:	mov	r2, r8
   22f50:	mov	r1, r7
   22f54:	mov	r0, sl
   22f58:	blx	fp
   22f5c:	cmp	r0, #0
   22f60:	beq	22f24 <myhtml_serialization_node_callback@@Base+0x3a0>
   22f64:	b	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22f68:	cmp	r4, #0
   22f6c:	beq	22ed0 <myhtml_serialization_node_callback@@Base+0x34c>
   22f70:	ldrb	r2, [r9, #-1]
   22f74:	cmp	r2, #194	; 0xc2
   22f78:	bne	22ed0 <myhtml_serialization_node_callback@@Base+0x34c>
   22f7c:	cmp	r1, #0
   22f80:	beq	22fa0 <myhtml_serialization_node_callback@@Base+0x41c>
   22f84:	sub	r0, r4, r1
   22f88:	add	r0, r6, r0
   22f8c:	sub	r1, r1, #1
   22f90:	mov	r2, r8
   22f94:	blx	fp
   22f98:	cmp	r0, #0
   22f9c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22fa0:	mov	r2, r8
   22fa4:	mov	r1, r7
   22fa8:	ldr	r0, [sp, #8]
   22fac:	blx	fp
   22fb0:	cmp	r0, #0
   22fb4:	beq	22f24 <myhtml_serialization_node_callback@@Base+0x3a0>
   22fb8:	b	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22fbc:	cmp	r1, #0
   22fc0:	ldr	r9, [sp, #12]
   22fc4:	beq	22fe0 <myhtml_serialization_node_callback@@Base+0x45c>
   22fc8:	sub	r0, r5, r1
   22fcc:	add	r0, r6, r0
   22fd0:	mov	r2, r8
   22fd4:	blx	fp
   22fd8:	cmp	r0, #0
   22fdc:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22fe0:	ldr	r0, [pc, #632]	; 23260 <myhtml_serialization_node_callback@@Base+0x6dc>
   22fe4:	mov	r2, r8
   22fe8:	mov	r1, #1
   22fec:	add	r0, pc, r0
   22ff0:	blx	fp
   22ff4:	cmp	r0, #0
   22ff8:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   22ffc:	ldr	r9, [r9]
   23000:	cmp	r9, #0
   23004:	bne	22dec <myhtml_serialization_node_callback@@Base+0x268>
   23008:	ldr	r0, [pc, #596]	; 23264 <myhtml_serialization_node_callback@@Base+0x6e0>
   2300c:	mov	r2, r8
   23010:	mov	r1, #1
   23014:	add	r0, pc, r0
   23018:	blx	fp
   2301c:	cmp	r0, #0
   23020:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23024:	b	22be4 <myhtml_serialization_node_callback@@Base+0x60>
   23028:	mov	r2, r8
   2302c:	mov	r1, #6
   23030:	ldr	r0, [sp, #28]
   23034:	blx	fp
   23038:	cmp	r0, #0
   2303c:	beq	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   23040:	b	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23044:	ldr	r0, [r9, #8]
   23048:	cmp	r0, #0
   2304c:	beq	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   23050:	ldr	r3, [r9, #16]
   23054:	cmp	r3, #5
   23058:	bne	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   2305c:	ldr	r1, [sp, #32]
   23060:	bl	fbf0 <mycore_strcmp@plt>
   23064:	cmp	r0, #0
   23068:	beq	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   2306c:	mov	r1, r4
   23070:	mov	r2, r8
   23074:	ldr	r0, [sp, #36]	; 0x24
   23078:	blx	fp
   2307c:	cmp	r0, #0
   23080:	beq	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   23084:	b	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23088:	mov	r2, r8
   2308c:	mov	r1, #4
   23090:	ldr	r0, [sp, #24]
   23094:	blx	fp
   23098:	cmp	r0, #0
   2309c:	beq	22e20 <myhtml_serialization_node_callback@@Base+0x29c>
   230a0:	b	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   230a4:	mov	r2, r8
   230a8:	blx	fp
   230ac:	cmp	r0, #0
   230b0:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   230b4:	ldr	r4, [r4]
   230b8:	cmp	r4, #0
   230bc:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   230c0:	ldr	r3, [r4, #36]	; 0x24
   230c4:	cmp	r3, #6
   230c8:	bne	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   230cc:	ldr	r1, [pc, #404]	; 23268 <myhtml_serialization_node_callback@@Base+0x6e4>
   230d0:	ldr	r0, [r4, #28]
   230d4:	add	r1, pc, r1
   230d8:	bl	1052c <mycore_strcasecmp@plt>
   230dc:	cmp	r0, #0
   230e0:	bne	23188 <myhtml_serialization_node_callback@@Base+0x604>
   230e4:	ldr	r5, [r4]
   230e8:	mov	r4, r0
   230ec:	cmp	r5, #0
   230f0:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   230f4:	ldr	r3, [r5, #36]	; 0x24
   230f8:	cmp	r3, #0
   230fc:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   23100:	cmp	r4, #0
   23104:	beq	23168 <myhtml_serialization_node_callback@@Base+0x5e4>
   23108:	ldr	r3, [r4, #36]	; 0x24
   2310c:	cmp	r3, #0
   23110:	beq	23168 <myhtml_serialization_node_callback@@Base+0x5e4>
   23114:	ldr	r0, [pc, #336]	; 2326c <myhtml_serialization_node_callback@@Base+0x6e8>
   23118:	mov	r2, r8
   2311c:	mov	r1, #2
   23120:	add	r0, pc, r0
   23124:	blx	fp
   23128:	cmp	r0, #0
   2312c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23130:	ldr	r0, [r5, #28]
   23134:	cmp	r0, #0
   23138:	beq	23148 <myhtml_serialization_node_callback@@Base+0x5c4>
   2313c:	ldr	r1, [r5, #36]	; 0x24
   23140:	cmp	r1, #0
   23144:	bne	23210 <myhtml_serialization_node_callback@@Base+0x68c>
   23148:	ldr	r0, [pc, #288]	; 23270 <myhtml_serialization_node_callback@@Base+0x6ec>
   2314c:	mov	r2, r8
   23150:	mov	r1, #1
   23154:	add	r0, pc, r0
   23158:	blx	fp
   2315c:	cmp	r0, #0
   23160:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23164:	b	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   23168:	ldr	r0, [pc, #260]	; 23274 <myhtml_serialization_node_callback@@Base+0x6f0>
   2316c:	mov	r2, r8
   23170:	mov	r1, #7
   23174:	add	r0, pc, r0
   23178:	blx	fp
   2317c:	cmp	r0, #0
   23180:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23184:	b	23114 <myhtml_serialization_node_callback@@Base+0x590>
   23188:	ldr	r1, [pc, #232]	; 23278 <myhtml_serialization_node_callback@@Base+0x6f4>
   2318c:	ldr	r0, [r4, #28]
   23190:	add	r1, pc, r1
   23194:	bl	1052c <mycore_strcasecmp@plt>
   23198:	cmp	r0, #0
   2319c:	bne	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   231a0:	ldr	r4, [r4]
   231a4:	cmp	r4, #0
   231a8:	beq	22cc0 <myhtml_serialization_node_callback@@Base+0x13c>
   231ac:	ldr	r3, [r4, #36]	; 0x24
   231b0:	ldr	r5, [r4]
   231b4:	cmp	r3, #0
   231b8:	beq	230ec <myhtml_serialization_node_callback@@Base+0x568>
   231bc:	ldr	r0, [pc, #184]	; 2327c <myhtml_serialization_node_callback@@Base+0x6f8>
   231c0:	mov	r2, r8
   231c4:	mov	r1, #9
   231c8:	add	r0, pc, r0
   231cc:	blx	fp
   231d0:	cmp	r0, #0
   231d4:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   231d8:	mov	r2, r8
   231dc:	ldr	r1, [r4, #36]	; 0x24
   231e0:	ldr	r0, [r4, #28]
   231e4:	blx	fp
   231e8:	cmp	r0, #0
   231ec:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   231f0:	ldr	r0, [pc, #136]	; 23280 <myhtml_serialization_node_callback@@Base+0x6fc>
   231f4:	mov	r2, r8
   231f8:	mov	r1, #1
   231fc:	add	r0, pc, r0
   23200:	blx	fp
   23204:	cmp	r0, #0
   23208:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   2320c:	b	230ec <myhtml_serialization_node_callback@@Base+0x568>
   23210:	mov	r2, r8
   23214:	blx	fp
   23218:	cmp	r0, #0
   2321c:	bne	22be0 <myhtml_serialization_node_callback@@Base+0x5c>
   23220:	b	23148 <myhtml_serialization_node_callback@@Base+0x5c4>
   23224:	andeq	r7, sp, r4, lsl #30
   23228:	andeq	r7, sp, r8, lsr lr
   2322c:	andeq	r7, sp, r8, lsr #28
   23230:	andeq	r7, sp, r0, asr #27
   23234:	andeq	r7, sp, r8, lsr #27
   23238:	andeq	r7, sp, r8, ror #26
   2323c:	andeq	r7, sp, r0, lsl #26
   23240:	andeq	r7, sp, r4, lsr #26
   23244:	andeq	r7, sp, r0, lsr #26
   23248:	andeq	r7, sp, ip, lsl sp
   2324c:	andeq	r7, sp, r8, lsl sp
   23250:	andeq	r7, sp, r4, lsl sp
   23254:	ldrdeq	r7, [sp], -ip
   23258:	andeq	r7, sp, r4, ror #23
   2325c:	andeq	r7, sp, r0, asr ip
   23260:	ldrdeq	r7, [sp], -r8
   23264:	andeq	r7, sp, r8, ror sl
   23268:	ldrdeq	r7, [sp], -r8
   2326c:	andeq	r7, sp, r8, lsr #19
   23270:	andeq	r7, sp, r0, ror r9
   23274:	andeq	r7, sp, r8, asr r9
   23278:	andeq	r7, sp, r4, lsr #18
   2327c:	strdeq	r7, [sp], -r4
   23280:	andeq	r7, sp, r8, asr #17

00023284 <myhtml_serialization_tree_callback@@Base>:
   23284:	push	{r4, r5, r6, r7, r8, lr}
   23288:	subs	r7, r0, #0
   2328c:	beq	2336c <myhtml_serialization_tree_callback@@Base+0xe8>
   23290:	ldr	r3, [r7, #40]	; 0x28
   23294:	mov	r6, r2
   23298:	cmp	r3, #0
   2329c:	mov	r5, r1
   232a0:	beq	232b4 <myhtml_serialization_tree_callback@@Base+0x30>
   232a4:	ldr	r3, [r3, #84]	; 0x54
   232a8:	cmp	r7, r3
   232ac:	ldreq	r4, [r7, #20]
   232b0:	beq	232b8 <myhtml_serialization_tree_callback@@Base+0x34>
   232b4:	mov	r4, r7
   232b8:	cmp	r4, #0
   232bc:	bne	232d4 <myhtml_serialization_tree_callback@@Base+0x50>
   232c0:	b	2336c <myhtml_serialization_tree_callback@@Base+0xe8>
   232c4:	ldr	r3, [r4, #20]
   232c8:	cmp	r3, #0
   232cc:	beq	232f4 <myhtml_serialization_tree_callback@@Base+0x70>
   232d0:	mov	r4, r3
   232d4:	mov	r2, r6
   232d8:	mov	r1, r5
   232dc:	mov	r0, r4
   232e0:	bl	10700 <myhtml_serialization_node_callback@plt>
   232e4:	cmp	r0, #0
   232e8:	beq	232c4 <myhtml_serialization_tree_callback@@Base+0x40>
   232ec:	mov	r0, #2
   232f0:	pop	{r4, r5, r6, r7, r8, pc}
   232f4:	cmp	r7, r4
   232f8:	bne	23318 <myhtml_serialization_tree_callback@@Base+0x94>
   232fc:	b	23344 <myhtml_serialization_tree_callback@@Base+0xc0>
   23300:	bl	22894 <myhtml_rules_init@@Base+0x3a0>
   23304:	cmp	r0, #0
   23308:	bne	232ec <myhtml_serialization_tree_callback@@Base+0x68>
   2330c:	ldr	r4, [r4, #24]
   23310:	cmp	r7, r4
   23314:	beq	23344 <myhtml_serialization_tree_callback@@Base+0xc0>
   23318:	ldr	r3, [r4, #16]
   2331c:	mov	r2, r6
   23320:	cmp	r3, #0
   23324:	mov	r1, r5
   23328:	mov	r0, r4
   2332c:	beq	23300 <myhtml_serialization_tree_callback@@Base+0x7c>
   23330:	bl	22894 <myhtml_rules_init@@Base+0x3a0>
   23334:	cmp	r0, #0
   23338:	bne	232ec <myhtml_serialization_tree_callback@@Base+0x68>
   2333c:	ldr	r4, [r4, #16]
   23340:	b	232b8 <myhtml_serialization_tree_callback@@Base+0x34>
   23344:	ldr	r3, [r7, #40]	; 0x28
   23348:	ldr	r3, [r3, #84]	; 0x54
   2334c:	cmp	r7, r3
   23350:	beq	2336c <myhtml_serialization_tree_callback@@Base+0xe8>
   23354:	mov	r2, r6
   23358:	mov	r1, r5
   2335c:	mov	r0, r7
   23360:	bl	22894 <myhtml_rules_init@@Base+0x3a0>
   23364:	cmp	r0, #0
   23368:	bne	232ec <myhtml_serialization_tree_callback@@Base+0x68>
   2336c:	mov	r0, #0
   23370:	pop	{r4, r5, r6, r7, r8, pc}

00023374 <myhtml_serialization_reallocate@@Base>:
   23374:	push	{r4, r5, r6, lr}
   23378:	mov	r4, r0
   2337c:	ldr	r0, [r0]
   23380:	mov	r5, r1
   23384:	bl	fbd8 <mycore_realloc@plt>
   23388:	subs	r3, r0, #0
   2338c:	moveq	r0, #2
   23390:	streq	r3, [r4]
   23394:	streq	r3, [r4, #4]
   23398:	streq	r3, [r4, #8]
   2339c:	movne	r0, #0
   233a0:	stmne	r4, {r3, r5}
   233a4:	pop	{r4, r5, r6, pc}

000233a8 <myhtml_serialization_concatenate@@Base>:
   233a8:	push	{r4, r5, r6, lr}
   233ac:	mov	r4, r2
   233b0:	ldmib	r2, {r2, r3}
   233b4:	mov	r5, r1
   233b8:	mov	r6, r0
   233bc:	add	r1, r3, r1
   233c0:	cmp	r1, r2
   233c4:	bcc	233e8 <myhtml_serialization_concatenate@@Base+0x40>
   233c8:	add	r1, r1, #4096	; 0x1000
   233cc:	mov	r0, r4
   233d0:	bl	1037c <myhtml_serialization_reallocate@plt>
   233d4:	cmp	r0, #0
   233d8:	beq	233e4 <myhtml_serialization_concatenate@@Base+0x3c>
   233dc:	mov	r0, #2
   233e0:	pop	{r4, r5, r6, pc}
   233e4:	ldr	r3, [r4, #8]
   233e8:	ldr	r0, [r4]
   233ec:	mov	r2, r5
   233f0:	mov	r1, r6
   233f4:	add	r0, r0, r3
   233f8:	bl	108ec <strncpy@plt>
   233fc:	ldr	r3, [r4, #8]
   23400:	ldr	r2, [r4]
   23404:	add	r5, r5, r3
   23408:	mov	r3, #0
   2340c:	str	r5, [r4, #8]
   23410:	mov	r0, r3
   23414:	strb	r3, [r2, r5]
   23418:	pop	{r4, r5, r6, pc}

0002341c <myhtml_serialization_tree_buffer@@Base>:
   2341c:	push	{r4, r5, lr}
   23420:	subs	r2, r1, #0
   23424:	ldr	r5, [pc, #108]	; 23498 <myhtml_serialization_tree_buffer@@Base+0x7c>
   23428:	sub	sp, sp, #12
   2342c:	add	r5, pc, r5
   23430:	beq	2348c <myhtml_serialization_tree_buffer@@Base+0x70>
   23434:	ldr	r3, [r2]
   23438:	mov	r4, r0
   2343c:	cmp	r3, #0
   23440:	beq	2345c <myhtml_serialization_tree_buffer@@Base+0x40>
   23444:	ldr	r3, [pc, #80]	; 2349c <myhtml_serialization_tree_buffer@@Base+0x80>
   23448:	mov	r0, r4
   2344c:	ldr	r1, [r5, r3]
   23450:	add	sp, sp, #12
   23454:	pop	{r4, r5, lr}
   23458:	b	10e68 <myhtml_serialization_tree_callback@plt>
   2345c:	ldr	r0, [pc, #60]	; 234a0 <myhtml_serialization_tree_buffer@@Base+0x84>
   23460:	str	r2, [sp, #4]
   23464:	stmib	r2, {r0, r3}
   23468:	bl	10c94 <mycore_malloc@plt>
   2346c:	ldr	r2, [sp, #4]
   23470:	cmp	r0, #0
   23474:	str	r0, [r2]
   23478:	streq	r0, [r2, #4]
   2347c:	moveq	r0, #2
   23480:	bne	23444 <myhtml_serialization_tree_buffer@@Base+0x28>
   23484:	add	sp, sp, #12
   23488:	pop	{r4, r5, pc}
   2348c:	mov	r0, r2
   23490:	add	sp, sp, #12
   23494:	pop	{r4, r5, pc}
   23498:	andeq	r1, pc, ip, asr #23
   2349c:	andeq	r0, r0, r8, lsr #17
   234a0:	andeq	r5, r0, sl

000234a4 <myhtml_serialization@@Base>:
   234a4:	b	10328 <myhtml_serialization_tree_buffer@plt>

000234a8 <myhtml_serialization_node_buffer@@Base>:
   234a8:	push	{r4, r5, lr}
   234ac:	subs	r2, r1, #0
   234b0:	ldr	r5, [pc, #104]	; 23520 <myhtml_serialization_node_buffer@@Base+0x78>
   234b4:	sub	sp, sp, #12
   234b8:	add	r5, pc, r5
   234bc:	beq	23514 <myhtml_serialization_node_buffer@@Base+0x6c>
   234c0:	ldr	r3, [r2]
   234c4:	mov	r4, r0
   234c8:	cmp	r3, #0
   234cc:	beq	234e8 <myhtml_serialization_node_buffer@@Base+0x40>
   234d0:	ldr	r3, [pc, #76]	; 23524 <myhtml_serialization_node_buffer@@Base+0x7c>
   234d4:	mov	r0, r4
   234d8:	ldr	r1, [r5, r3]
   234dc:	add	sp, sp, #12
   234e0:	pop	{r4, r5, lr}
   234e4:	b	10700 <myhtml_serialization_node_callback@plt>
   234e8:	mov	r0, #2048	; 0x800
   234ec:	str	r2, [sp, #4]
   234f0:	stmib	r2, {r0, r3}
   234f4:	bl	10c94 <mycore_malloc@plt>
   234f8:	ldr	r2, [sp, #4]
   234fc:	cmp	r0, #0
   23500:	str	r0, [r2]
   23504:	streq	r0, [r2, #4]
   23508:	bne	234d0 <myhtml_serialization_node_buffer@@Base+0x28>
   2350c:	add	sp, sp, #12
   23510:	pop	{r4, r5, pc}
   23514:	mov	r0, r2
   23518:	add	sp, sp, #12
   2351c:	pop	{r4, r5, pc}
   23520:	andeq	r1, pc, r0, asr #22
   23524:	andeq	r0, r0, r8, lsr #17

00023528 <myhtml_serialization_node@@Base>:
   23528:	b	107b4 <myhtml_serialization_node_buffer@plt>

0002352c <myhtml_stream_buffer_create@@Base>:
   2352c:	mov	r1, #36	; 0x24
   23530:	mov	r0, #1
   23534:	b	ff14 <mycore_calloc@plt>

00023538 <myhtml_stream_buffer_init@@Base>:
   23538:	push	{r4, lr}
   2353c:	mov	r4, r0
   23540:	mov	r3, #0
   23544:	str	r1, [r0, #8]
   23548:	str	r3, [r4, #4]
   2354c:	mov	r0, r1
   23550:	mov	r1, #12
   23554:	bl	ff14 <mycore_calloc@plt>
   23558:	ldr	r3, [pc, #16]	; 23570 <myhtml_stream_buffer_init@@Base+0x38>
   2355c:	cmp	r0, #0
   23560:	str	r0, [r4]
   23564:	moveq	r0, r3
   23568:	movne	r0, #0
   2356c:	pop	{r4, pc}
   23570:	andeq	r9, r0, r1, lsl #6

00023574 <myhtml_stream_buffer_entry_init@@Base>:
   23574:	push	{r4, r5, r6, lr}
   23578:	mov	r4, r0
   2357c:	ldr	r0, [r0]
   23580:	mov	r5, r1
   23584:	cmp	r0, #0
   23588:	beq	235a4 <myhtml_stream_buffer_entry_init@@Base+0x30>
   2358c:	ldr	r3, [r4, #8]
   23590:	cmp	r3, r1
   23594:	bcc	235a0 <myhtml_stream_buffer_entry_init@@Base+0x2c>
   23598:	mov	r0, #0
   2359c:	pop	{r4, r5, r6, pc}
   235a0:	bl	10dcc <mycore_free@plt>
   235a4:	mov	r3, #0
   235a8:	str	r5, [r4, #8]
   235ac:	mov	r0, r5
   235b0:	str	r3, [r4, #4]
   235b4:	bl	10c94 <mycore_malloc@plt>
   235b8:	cmp	r0, #0
   235bc:	str	r0, [r4]
   235c0:	bne	23598 <myhtml_stream_buffer_entry_init@@Base+0x24>
   235c4:	ldr	r0, [pc]	; 235cc <myhtml_stream_buffer_entry_init@@Base+0x58>
   235c8:	pop	{r4, r5, r6, pc}
   235cc:	andeq	r9, r0, r3, lsl #6

000235d0 <myhtml_stream_buffer_entry_clean@@Base>:
   235d0:	cmp	r0, #0
   235d4:	movne	r3, #0
   235d8:	strne	r3, [r0, #4]
   235dc:	bx	lr

000235e0 <myhtml_stream_buffer_entry_destroy@@Base>:
   235e0:	push	{r4, r5, r6, lr}
   235e4:	subs	r4, r0, #0
   235e8:	beq	23608 <myhtml_stream_buffer_entry_destroy@@Base+0x28>
   235ec:	ldr	r0, [r4]
   235f0:	mov	r5, r1
   235f4:	cmp	r0, #0
   235f8:	beq	23600 <myhtml_stream_buffer_entry_destroy@@Base+0x20>
   235fc:	bl	10dcc <mycore_free@plt>
   23600:	cmp	r5, #0
   23604:	bne	23610 <myhtml_stream_buffer_entry_destroy@@Base+0x30>
   23608:	mov	r0, r4
   2360c:	pop	{r4, r5, r6, pc}
   23610:	mov	r0, r4
   23614:	bl	10dcc <mycore_free@plt>
   23618:	mov	r4, #0
   2361c:	b	23608 <myhtml_stream_buffer_entry_destroy@@Base+0x28>

00023620 <myhtml_stream_buffer_clean@@Base>:
   23620:	cmp	r0, #0
   23624:	movne	r3, #0
   23628:	strne	r3, [r0, #4]
   2362c:	bx	lr

00023630 <myhtml_stream_buffer_destroy@@Base>:
   23630:	push	{r4, r5, r6, r7, r8, lr}
   23634:	subs	r6, r0, #0
   23638:	beq	23694 <myhtml_stream_buffer_destroy@@Base+0x64>
   2363c:	ldr	r0, [r6]
   23640:	mov	r8, r1
   23644:	cmp	r0, #0
   23648:	beq	2368c <myhtml_stream_buffer_destroy@@Base+0x5c>
   2364c:	ldr	r3, [r6, #4]
   23650:	cmp	r3, #0
   23654:	beq	23688 <myhtml_stream_buffer_destroy@@Base+0x58>
   23658:	mov	r4, #0
   2365c:	mov	r5, r4
   23660:	mov	r7, r4
   23664:	add	r0, r0, r4
   23668:	mov	r1, r7
   2366c:	bl	10148 <myhtml_stream_buffer_entry_destroy@plt>
   23670:	ldr	r3, [r6, #4]
   23674:	add	r5, r5, #1
   23678:	cmp	r3, r5
   2367c:	ldr	r0, [r6]
   23680:	add	r4, r4, #12
   23684:	bhi	23664 <myhtml_stream_buffer_destroy@@Base+0x34>
   23688:	bl	10dcc <mycore_free@plt>
   2368c:	cmp	r8, #0
   23690:	bne	2369c <myhtml_stream_buffer_destroy@@Base+0x6c>
   23694:	mov	r0, r6
   23698:	pop	{r4, r5, r6, r7, r8, pc}
   2369c:	mov	r0, r6
   236a0:	bl	10dcc <mycore_free@plt>
   236a4:	mov	r6, #0
   236a8:	b	23694 <myhtml_stream_buffer_destroy@@Base+0x64>

000236ac <myhtml_stream_buffer_add_entry@@Base>:
   236ac:	push	{r4, r5, r6, r7, r8, lr}
   236b0:	mov	r6, r1
   236b4:	ldr	r3, [r0, #4]
   236b8:	ldr	r1, [r0, #8]
   236bc:	mov	r4, r0
   236c0:	cmp	r3, r1
   236c4:	bcs	236fc <myhtml_stream_buffer_add_entry@@Base+0x50>
   236c8:	ldr	r5, [r0]
   236cc:	add	r3, r3, r3, lsl #1
   236d0:	mov	r1, r6
   236d4:	add	r5, r5, r3, lsl #2
   236d8:	mov	r0, r5
   236dc:	bl	10808 <myhtml_stream_buffer_entry_init@plt>
   236e0:	cmp	r0, #0
   236e4:	bne	2373c <myhtml_stream_buffer_add_entry@@Base+0x90>
   236e8:	ldr	r3, [r4, #4]
   236ec:	mov	r0, r5
   236f0:	add	r3, r3, #1
   236f4:	str	r3, [r4, #4]
   236f8:	pop	{r4, r5, r6, r7, r8, pc}
   236fc:	lsl	r7, r1, #1
   23700:	add	r1, r7, r1, lsl #2
   23704:	lsl	r1, r1, #2
   23708:	bl	fbd8 <mycore_realloc@plt>
   2370c:	subs	r5, r0, #0
   23710:	beq	2373c <myhtml_stream_buffer_add_entry@@Base+0x90>
   23714:	ldr	r0, [r4, #8]
   23718:	mov	r1, #0
   2371c:	sub	r2, r7, r0
   23720:	add	r0, r0, r0, lsl #1
   23724:	add	r0, r5, r0, lsl #2
   23728:	bl	108b0 <memset@plt>
   2372c:	ldr	r3, [r4, #4]
   23730:	str	r5, [r4]
   23734:	str	r7, [r4, #8]
   23738:	b	236cc <myhtml_stream_buffer_add_entry@@Base+0x20>
   2373c:	mov	r5, #0
   23740:	mov	r0, r5
   23744:	pop	{r4, r5, r6, r7, r8, pc}

00023748 <myhtml_stream_buffer_current_entry@@Base>:
   23748:	ldr	r3, [r0, #4]
   2374c:	cmp	r3, #0
   23750:	addne	r3, r3, r3, lsl #1
   23754:	ldrne	r2, [r0]
   23758:	lslne	r0, r3, #2
   2375c:	subne	r0, r0, #12
   23760:	addne	r0, r2, r0
   23764:	moveq	r0, r3
   23768:	bx	lr

0002376c <myhtml_tag_create@@Base>:
   2376c:	mov	r0, #20
   23770:	b	10c94 <mycore_malloc@plt>

00023774 <myhtml_tag_clean@@Base>:
   23774:	push	{r4, lr}
   23778:	mov	r3, #252	; 0xfc
   2377c:	mov	r4, r0
   23780:	str	r3, [r0, #8]
   23784:	ldr	r0, [r0, #4]
   23788:	bl	10250 <mcsimple_clean@plt>
   2378c:	ldr	r0, [r4, #16]
   23790:	ldr	r1, [r4, #12]
   23794:	bl	106e8 <mchar_async_node_clean@plt>
   23798:	ldr	r0, [r4]
   2379c:	pop	{r4, lr}
   237a0:	b	102f8 <mctree_clean@plt>

000237a4 <myhtml_tag_init@@Base>:
   237a4:	push	{r4, r5, r6, lr}
   237a8:	sub	sp, sp, #8
   237ac:	mov	r4, r1
   237b0:	mov	r6, r0
   237b4:	bl	102c8 <mcsimple_create@plt>
   237b8:	cmp	r0, #0
   237bc:	str	r0, [r4, #4]
   237c0:	ldreq	r5, [pc, #104]	; 23830 <myhtml_tag_init@@Base+0x8c>
   237c4:	beq	23824 <myhtml_tag_init@@Base+0x80>
   237c8:	mov	r3, #44	; 0x2c
   237cc:	mov	r2, #1024	; 0x400
   237d0:	mov	r1, #128	; 0x80
   237d4:	bl	10454 <mcsimple_init@plt>
   237d8:	add	r1, sp, #4
   237dc:	ldr	r0, [r6, #4]
   237e0:	bl	10298 <mchar_async_node_add@plt>
   237e4:	str	r0, [r4, #12]
   237e8:	mov	r0, #2
   237ec:	bl	10658 <mctree_create@plt>
   237f0:	ldr	r5, [sp, #4]
   237f4:	ldr	r2, [r6, #4]
   237f8:	mov	r3, #252	; 0xfc
   237fc:	cmp	r5, #0
   23800:	str	r2, [r4, #16]
   23804:	str	r3, [r4, #8]
   23808:	str	r0, [r4]
   2380c:	bne	23824 <myhtml_tag_init@@Base+0x80>
   23810:	cmp	r0, #0
   23814:	moveq	r5, #2
   23818:	beq	23824 <myhtml_tag_init@@Base+0x80>
   2381c:	mov	r0, r4
   23820:	bl	11078 <myhtml_tag_clean@plt>
   23824:	mov	r0, r5
   23828:	add	sp, sp, #8
   2382c:	pop	{r4, r5, r6, pc}
   23830:	muleq	r0, r0, r1

00023834 <myhtml_tag_destroy@@Base>:
   23834:	push	{r4, lr}
   23838:	subs	r4, r0, #0
   2383c:	beq	23870 <myhtml_tag_destroy@@Base+0x3c>
   23840:	ldr	r0, [r4]
   23844:	bl	100b8 <mctree_destroy@plt>
   23848:	mov	r1, #1
   2384c:	str	r0, [r4]
   23850:	ldr	r0, [r4, #4]
   23854:	bl	103a0 <mcsimple_destroy@plt>
   23858:	ldr	r1, [r4, #12]
   2385c:	str	r0, [r4, #4]
   23860:	ldr	r0, [r4, #16]
   23864:	bl	10c58 <mchar_async_node_delete@plt>
   23868:	mov	r0, r4
   2386c:	bl	10dcc <mycore_free@plt>
   23870:	mov	r0, #0
   23874:	pop	{r4, pc}

00023878 <myhtml_tag_add@@Base>:
   23878:	push	{r4, r5, r6, r7, r8, r9, lr}
   2387c:	sub	sp, sp, #12
   23880:	mov	r5, r0
   23884:	mov	r6, r2
   23888:	mov	r4, r1
   2388c:	add	r2, r2, #1
   23890:	ldr	r1, [r0, #12]
   23894:	ldr	r0, [r0, #16]
   23898:	ldrb	r9, [sp, #40]	; 0x28
   2389c:	mov	r8, r3
   238a0:	bl	10910 <mchar_async_malloc@plt>
   238a4:	cmp	r9, #0
   238a8:	mov	r7, r0
   238ac:	beq	2394c <myhtml_tag_add@@Base+0xd4>
   238b0:	cmp	r6, #0
   238b4:	beq	238e0 <myhtml_tag_add@@Base+0x68>
   238b8:	mov	r1, r4
   238bc:	add	ip, r4, r6
   238c0:	sub	r2, r0, #1
   238c4:	ldrb	r3, [r1], #1
   238c8:	sub	r0, r3, #65	; 0x41
   238cc:	cmp	r0, #25
   238d0:	orrls	r3, r3, #96	; 0x60
   238d4:	cmp	r1, ip
   238d8:	strb	r3, [r2, #1]!
   238dc:	bne	238c4 <myhtml_tag_add@@Base+0x4c>
   238e0:	mov	r3, #0
   238e4:	strb	r3, [r7, r6]
   238e8:	ldr	r0, [r5, #4]
   238ec:	bl	1073c <mcsimple_malloc@plt>
   238f0:	mov	r4, #0
   238f4:	mov	r2, r6
   238f8:	mov	r1, r7
   238fc:	mov	r9, r0
   23900:	mov	r3, r9
   23904:	ldr	r0, [r5]
   23908:	str	r4, [sp]
   2390c:	bl	10958 <mctree_insert@plt>
   23910:	ldr	r0, [r5, #8]
   23914:	str	r8, [r9, #12]
   23918:	add	r2, r0, #1
   2391c:	stm	r9, {r0, r7}
   23920:	str	r6, [r9, #8]
   23924:	str	r2, [r5, #8]
   23928:	str	r4, [r9, #16]
   2392c:	str	r4, [r9, #20]
   23930:	str	r4, [r9, #24]
   23934:	str	r4, [r9, #28]
   23938:	str	r4, [r9, #32]
   2393c:	str	r4, [r9, #36]	; 0x24
   23940:	str	r4, [r9, #40]	; 0x28
   23944:	add	sp, sp, #12
   23948:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2394c:	mov	r1, r4
   23950:	mov	r2, r6
   23954:	bl	108ec <strncpy@plt>
   23958:	strb	r9, [r7, r6]
   2395c:	b	238e8 <myhtml_tag_add@@Base+0x70>

00023960 <myhtml_tag_set_category@@Base>:
   23960:	cmp	r1, #251	; 0xfb
   23964:	bxls	lr
   23968:	push	{r4, r5, r6, lr}
   2396c:	sub	r1, r1, #252	; 0xfc
   23970:	ldr	r0, [r0, #4]
   23974:	mov	r5, r3
   23978:	mov	r4, r2
   2397c:	bl	10fa0 <mcsimple_get_by_absolute_position@plt>
   23980:	add	r2, r4, #4
   23984:	str	r5, [r0, r2, lsl #2]
   23988:	pop	{r4, r5, r6, pc}

0002398c <myhtml_tag_get_by_id@@Base>:
   2398c:	cmp	r1, #251	; 0xfb
   23990:	bhi	2399c <myhtml_tag_get_by_id@@Base+0x10>
   23994:	mov	r0, r1
   23998:	b	fff8 <myhtml_tag_static_get_by_id@plt>
   2399c:	sub	r1, r1, #252	; 0xfc
   239a0:	ldr	r0, [r0, #4]
   239a4:	b	10fa0 <mcsimple_get_by_absolute_position@plt>

000239a8 <myhtml_tag_get_by_name@@Base>:
   239a8:	push	{r4, r5, r6, lr}
   239ac:	mov	r4, r1
   239b0:	mov	r6, r0
   239b4:	mov	r1, r2
   239b8:	mov	r0, r4
   239bc:	mov	r5, r2
   239c0:	bl	1091c <myhtml_tag_static_search@plt>
   239c4:	cmp	r0, #0
   239c8:	popne	{r4, r5, r6, pc}
   239cc:	mov	r2, r5
   239d0:	mov	r1, r4
   239d4:	ldr	r0, [r6]
   239d8:	bl	10748 <mctree_search_lowercase@plt>
   239dc:	ldr	r3, [r6]
   239e0:	ldr	r3, [r3]
   239e4:	rsb	r0, r0, r0, lsl #3
   239e8:	add	r3, r3, r0, lsl #2
   239ec:	ldr	r0, [r3, #8]
   239f0:	pop	{r4, r5, r6, pc}

000239f4 <myhtml_tag_static_search@@Base>:
   239f4:	add	r3, r0, r1
   239f8:	push	{r4, r5, r6, r7, r8, lr}
   239fc:	mov	r6, r1
   23a00:	mov	r7, r0
   23a04:	ldrb	r3, [r3, #-1]
   23a08:	ldrb	r0, [r0]
   23a0c:	ldr	r1, [pc, #152]	; 23aac <myhtml_tag_static_search@@Base+0xb8>
   23a10:	ldr	r2, [pc, #152]	; 23ab0 <myhtml_tag_static_search@@Base+0xbc>
   23a14:	add	r1, pc, r1
   23a18:	ldr	r5, [pc, #148]	; 23ab4 <myhtml_tag_static_search@@Base+0xc0>
   23a1c:	ldrb	r3, [r1, r3]
   23a20:	ldrb	r1, [r1, r0]
   23a24:	add	r5, pc, r5
   23a28:	smulbb	r3, r3, r1
   23a2c:	mul	r3, r6, r3
   23a30:	umull	r1, r2, r2, r3
   23a34:	sub	r1, r3, r2
   23a38:	add	r2, r2, r1, lsr #1
   23a3c:	lsr	r2, r2, #8
   23a40:	rsb	r1, r2, r2, lsl #4
   23a44:	rsb	r2, r2, r1, lsl #5
   23a48:	sub	r3, r3, r2
   23a4c:	add	r3, r3, #1
   23a50:	b	23a5c <myhtml_tag_static_search@@Base+0x68>
   23a54:	bcc	23aa0 <myhtml_tag_static_search@@Base+0xac>
   23a58:	ldr	r3, [r4, #4]
   23a5c:	add	r3, r3, r3, lsl #1
   23a60:	ldr	r8, [r5, r3, lsl #2]
   23a64:	add	r4, r5, r3, lsl #2
   23a68:	cmp	r8, #0
   23a6c:	beq	23aa0 <myhtml_tag_static_search@@Base+0xac>
   23a70:	ldr	r3, [r8, #8]
   23a74:	cmp	r6, r3
   23a78:	bne	23a54 <myhtml_tag_static_search@@Base+0x60>
   23a7c:	mov	r2, r6
   23a80:	mov	r1, r7
   23a84:	ldr	r0, [r8, #4]
   23a88:	bl	102a4 <mycore_strncasecmp@plt>
   23a8c:	cmp	r0, #0
   23a90:	beq	23aa4 <myhtml_tag_static_search@@Base+0xb0>
   23a94:	ldr	r3, [r4, #4]
   23a98:	cmp	r3, #0
   23a9c:	bne	23a5c <myhtml_tag_static_search@@Base+0x68>
   23aa0:	mov	r8, #0
   23aa4:	mov	r0, r8
   23aa8:	pop	{r4, r5, r6, r7, r8, pc}
   23aac:	strdeq	r7, [sp], -r0
   23ab0:			; <UNDEFINED> instruction: 0x11a3019b
   23ab4:	andeq	ip, lr, r0, lsl fp

00023ab8 <myhtml_tag_static_get_by_id@@Base>:
   23ab8:	ldr	r3, [pc, #20]	; 23ad4 <myhtml_tag_static_get_by_id@@Base+0x1c>
   23abc:	mov	r2, #44	; 0x2c
   23ac0:	add	r3, pc, r3
   23ac4:	sub	r3, r3, #1680	; 0x690
   23ac8:	sub	r3, r3, #12
   23acc:	mla	r0, r2, r0, r3
   23ad0:	bx	lr
   23ad4:	andeq	lr, lr, ip, ror #20

00023ad8 <myhtml_token_create@@Base>:
   23ad8:	push	{r4, r5, r6, r7, r8, lr}
   23adc:	cmp	r1, #0
   23ae0:	mov	r7, r0
   23ae4:	mov	r0, #24
   23ae8:	movne	r6, r1
   23aec:	moveq	r6, #4096	; 0x1000
   23af0:	bl	10c94 <mycore_malloc@plt>
   23af4:	subs	r4, r0, #0
   23af8:	beq	23b70 <myhtml_token_create@@Base+0x98>
   23afc:	bl	fd58 <mcobject_async_create@plt>
   23b00:	cmp	r0, #0
   23b04:	mov	r5, r0
   23b08:	str	r0, [r4, #4]
   23b0c:	beq	23b80 <myhtml_token_create@@Base+0xa8>
   23b10:	bl	fd58 <mcobject_async_create@plt>
   23b14:	cmp	r0, #0
   23b18:	mov	r5, r0
   23b1c:	str	r0, [r4, #8]
   23b20:	beq	23b78 <myhtml_token_create@@Base+0xa0>
   23b24:	mov	r3, #52	; 0x34
   23b28:	mov	r2, r6
   23b2c:	mov	r1, #128	; 0x80
   23b30:	ldr	r0, [r4, #4]
   23b34:	bl	fc80 <mcobject_async_init@plt>
   23b38:	mov	r2, r6
   23b3c:	mov	r3, #68	; 0x44
   23b40:	mov	r1, #128	; 0x80
   23b44:	ldr	r0, [r4, #8]
   23b48:	bl	fc80 <mcobject_async_init@plt>
   23b4c:	mov	r1, #0
   23b50:	ldr	r0, [r4, #4]
   23b54:	bl	10a90 <mcobject_async_node_add@plt>
   23b58:	mov	r1, #0
   23b5c:	str	r0, [r4, #12]
   23b60:	ldr	r0, [r4, #8]
   23b64:	bl	10a90 <mcobject_async_node_add@plt>
   23b68:	str	r7, [r4]
   23b6c:	str	r0, [r4, #16]
   23b70:	mov	r0, r4
   23b74:	pop	{r4, r5, r6, r7, r8, pc}
   23b78:	ldr	r0, [r4, #4]
   23b7c:	bl	10dcc <mycore_free@plt>
   23b80:	mov	r0, r4
   23b84:	bl	10dcc <mycore_free@plt>
   23b88:	mov	r4, r5
   23b8c:	b	23b70 <myhtml_token_create@@Base+0x98>

00023b90 <myhtml_token_clean@@Base>:
   23b90:	push	{r4, lr}
   23b94:	mov	r4, r0
   23b98:	ldr	r1, [r0, #12]
   23b9c:	ldr	r0, [r0, #4]
   23ba0:	bl	10880 <mcobject_async_node_clean@plt>
   23ba4:	ldr	r1, [r4, #16]
   23ba8:	ldr	r0, [r4, #8]
   23bac:	pop	{r4, lr}
   23bb0:	b	10880 <mcobject_async_node_clean@plt>

00023bb4 <myhtml_token_clean_all@@Base>:
   23bb4:	push	{r4, lr}
   23bb8:	mov	r4, r0
   23bbc:	ldr	r0, [r0, #4]
   23bc0:	bl	11054 <mcobject_async_clean@plt>
   23bc4:	ldr	r0, [r4, #8]
   23bc8:	pop	{r4, lr}
   23bcc:	b	11054 <mcobject_async_clean@plt>

00023bd0 <myhtml_token_destroy@@Base>:
   23bd0:	push	{r4, lr}
   23bd4:	subs	r4, r0, #0
   23bd8:	beq	23c14 <myhtml_token_destroy@@Base+0x44>
   23bdc:	ldr	r0, [r4, #4]
   23be0:	cmp	r0, #0
   23be4:	beq	23bf4 <myhtml_token_destroy@@Base+0x24>
   23be8:	mov	r1, #1
   23bec:	bl	10b20 <mcobject_async_destroy@plt>
   23bf0:	str	r0, [r4, #4]
   23bf4:	ldr	r0, [r4, #8]
   23bf8:	cmp	r0, #0
   23bfc:	beq	23c0c <myhtml_token_destroy@@Base+0x3c>
   23c00:	mov	r1, #1
   23c04:	bl	10b20 <mcobject_async_destroy@plt>
   23c08:	str	r0, [r4, #8]
   23c0c:	mov	r0, r4
   23c10:	bl	10dcc <mycore_free@plt>
   23c14:	mov	r0, #0
   23c18:	pop	{r4, pc}

00023c1c <myhtml_token_node_clean@@Base>:
   23c1c:	push	{r4, lr}
   23c20:	mov	r2, #52	; 0x34
   23c24:	mov	r4, r0
   23c28:	mov	r1, #0
   23c2c:	bl	108b0 <memset@plt>
   23c30:	mov	r3, #8
   23c34:	str	r3, [r4, #48]	; 0x30
   23c38:	add	r0, r4, #4
   23c3c:	pop	{r4, lr}
   23c40:	b	11090 <mycore_string_clean_all@plt>

00023c44 <myhtml_token_node_create@@Base>:
   23c44:	push	{r4, lr}
   23c48:	mov	r2, #0
   23c4c:	ldr	r0, [r0, #4]
   23c50:	bl	10bbc <mcobject_async_malloc@plt>
   23c54:	subs	r4, r0, #0
   23c58:	beq	23c60 <myhtml_token_node_create@@Base+0x1c>
   23c5c:	bl	10f7c <myhtml_token_node_clean@plt>
   23c60:	mov	r0, r4
   23c64:	pop	{r4, pc}

00023c68 <myhtml_token_attr_clean@@Base>:
   23c68:	push	{r4, lr}
   23c6c:	mov	r2, #68	; 0x44
   23c70:	mov	r4, r0
   23c74:	mov	r1, #0
   23c78:	bl	108b0 <memset@plt>
   23c7c:	mov	r3, #1
   23c80:	add	r0, r4, #8
   23c84:	str	r3, [r4, #64]	; 0x40
   23c88:	bl	11090 <mycore_string_clean_all@plt>
   23c8c:	add	r0, r4, #28
   23c90:	pop	{r4, lr}
   23c94:	b	11090 <mycore_string_clean_all@plt>

00023c98 <myhtml_token_attr_create@@Base>:
   23c98:	push	{r4, lr}
   23c9c:	mov	r2, #0
   23ca0:	ldr	r0, [r0, #8]
   23ca4:	bl	10bbc <mcobject_async_malloc@plt>
   23ca8:	subs	r4, r0, #0
   23cac:	beq	23cb4 <myhtml_token_attr_create@@Base+0x1c>
   23cb0:	bl	10004 <myhtml_token_attr_clean@plt>
   23cb4:	mov	r0, r4
   23cb8:	pop	{r4, pc}

00023cbc <myhtml_token_node_tag_id@@Base>:
   23cbc:	ldr	r0, [r0]
   23cc0:	bx	lr

00023cc4 <myhtml_token_node_raw_position@@Base>:
   23cc4:	cmp	r1, #0
   23cc8:	streq	r1, [r0]
   23ccc:	ldrne	r2, [r1, #28]
   23cd0:	ldrne	r3, [r1, #24]
   23cd4:	strne	r2, [r0, #4]
   23cd8:	strne	r3, [r0]
   23cdc:	streq	r1, [r0, #4]
   23ce0:	bx	lr

00023ce4 <myhtml_token_node_element_position@@Base>:
   23ce4:	cmp	r1, #0
   23ce8:	streq	r1, [r0]
   23cec:	ldrne	r2, [r1, #36]	; 0x24
   23cf0:	ldrne	r3, [r1, #32]
   23cf4:	strne	r2, [r0, #4]
   23cf8:	strne	r3, [r0]
   23cfc:	streq	r1, [r0, #4]
   23d00:	bx	lr

00023d04 <myhtml_token_node_attribute_first@@Base>:
   23d04:	ldr	r0, [r0, #40]	; 0x28
   23d08:	bx	lr

00023d0c <myhtml_token_node_attribute_last@@Base>:
   23d0c:	ldr	r0, [r0, #44]	; 0x2c
   23d10:	bx	lr

00023d14 <myhtml_token_node_text@@Base>:
   23d14:	cmp	r1, #0
   23d18:	ldrne	r3, [r0, #12]
   23d1c:	ldr	r0, [r0, #4]
   23d20:	strne	r3, [r1]
   23d24:	bx	lr

00023d28 <myhtml_token_node_string@@Base>:
   23d28:	add	r0, r0, #4
   23d2c:	bx	lr

00023d30 <myhtml_token_node_is_close@@Base>:
   23d30:	ldr	r0, [r0, #48]	; 0x30
   23d34:	and	r0, r0, #1
   23d38:	bx	lr

00023d3c <myhtml_token_node_is_close_self@@Base>:
   23d3c:	ldr	r0, [r0, #48]	; 0x30
   23d40:	lsr	r0, r0, #1
   23d44:	and	r0, r0, #1
   23d48:	bx	lr

00023d4c <myhtml_token_node_wait_for_done@@Base>:
   23d4c:	ldr	r3, [r1, #48]	; 0x30
   23d50:	tst	r3, #4
   23d54:	bxne	lr
   23d58:	push	{r4, r5, r6, lr}
   23d5c:	mov	r4, r1
   23d60:	mov	r5, r0
   23d64:	ldr	r3, [r5]
   23d68:	ldr	r3, [r3]
   23d6c:	ldr	r3, [r3]
   23d70:	ldr	r0, [r3, #24]
   23d74:	bl	100a0 <mythread_nanosleep_sleep@plt>
   23d78:	ldr	r3, [r4, #48]	; 0x30
   23d7c:	tst	r3, #4
   23d80:	beq	23d64 <myhtml_token_node_wait_for_done@@Base+0x18>
   23d84:	pop	{r4, r5, r6, pc}

00023d88 <myhtml_token_set_done@@Base>:
   23d88:	ldr	r3, [r0, #48]	; 0x30
   23d8c:	orr	r3, r3, #4
   23d90:	str	r3, [r0, #48]	; 0x30
   23d94:	bx	lr

00023d98 <myhtml_token_node_text_append@@Base>:
   23d98:	ldr	r0, [r0]
   23d9c:	push	{r4, r5, r6, lr}
   23da0:	add	r4, r1, #4
   23da4:	mov	r5, r3
   23da8:	mov	r6, r2
   23dac:	ldr	r1, [r0, #52]	; 0x34
   23db0:	mov	r2, r4
   23db4:	add	r3, r3, #2
   23db8:	ldr	r0, [r0, #4]
   23dbc:	bl	10610 <mycore_string_init@plt>
   23dc0:	mov	r2, r5
   23dc4:	mov	r1, r6
   23dc8:	mov	r0, r4
   23dcc:	pop	{r4, r5, r6, lr}
   23dd0:	b	108d4 <mycore_string_append@plt>

00023dd4 <myhtml_token_node_attr_append@@Base>:
   23dd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23dd8:	mov	r7, r0
   23ddc:	mov	r5, r1
   23de0:	mov	sl, r2
   23de4:	ldr	r0, [r0, #8]
   23de8:	mov	r2, #0
   23dec:	ldr	r1, [sp, #40]	; 0x28
   23df0:	mov	r8, r3
   23df4:	ldr	r6, [sp, #36]	; 0x24
   23df8:	bl	10bbc <mcobject_async_malloc@plt>
   23dfc:	mov	r3, #0
   23e00:	cmp	r8, #0
   23e04:	mov	r4, r0
   23e08:	str	r3, [r0]
   23e0c:	beq	23ea0 <myhtml_token_node_attr_append@@Base+0xcc>
   23e10:	ldr	r3, [r7]
   23e14:	add	r9, r0, #8
   23e18:	mov	r2, r9
   23e1c:	ldr	r1, [r3, #52]	; 0x34
   23e20:	ldr	r0, [r3, #4]
   23e24:	add	r3, r8, #1
   23e28:	bl	10610 <mycore_string_init@plt>
   23e2c:	mov	r2, r8
   23e30:	mov	r1, sl
   23e34:	mov	r0, r9
   23e38:	bl	10688 <mycore_string_append_lowercase@plt>
   23e3c:	cmp	r6, #0
   23e40:	beq	23eb0 <myhtml_token_node_attr_append@@Base+0xdc>
   23e44:	ldr	r3, [r7]
   23e48:	add	r7, r4, #28
   23e4c:	mov	r2, r7
   23e50:	ldr	r1, [r3, #52]	; 0x34
   23e54:	ldr	r0, [r3, #4]
   23e58:	add	r3, r6, #1
   23e5c:	bl	10610 <mycore_string_init@plt>
   23e60:	mov	r2, r6
   23e64:	ldr	r1, [sp, #32]
   23e68:	mov	r0, r7
   23e6c:	bl	108d4 <mycore_string_append@plt>
   23e70:	ldr	r3, [r5, #40]	; 0x28
   23e74:	mov	r0, r4
   23e78:	cmp	r3, #0
   23e7c:	streq	r3, [r4, #4]
   23e80:	ldrne	r3, [r5, #44]	; 0x2c
   23e84:	streq	r4, [r5, #40]	; 0x28
   23e88:	strne	r4, [r3]
   23e8c:	strne	r3, [r4, #4]
   23e90:	mov	r3, #1
   23e94:	str	r4, [r5, #44]	; 0x2c
   23e98:	str	r3, [r4, #64]	; 0x40
   23e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23ea0:	add	r0, r0, #8
   23ea4:	bl	11090 <mycore_string_clean_all@plt>
   23ea8:	cmp	r6, #0
   23eac:	bne	23e44 <myhtml_token_node_attr_append@@Base+0x70>
   23eb0:	add	r0, r4, #28
   23eb4:	bl	11090 <mycore_string_clean_all@plt>
   23eb8:	b	23e70 <myhtml_token_node_attr_append@@Base+0x9c>

00023ebc <myhtml_token_node_attr_append_with_convert_encoding@@Base>:
   23ebc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23ec0:	mov	r7, r0
   23ec4:	mov	r5, r1
   23ec8:	mov	sl, r2
   23ecc:	ldr	r0, [r0, #8]
   23ed0:	mov	r2, #0
   23ed4:	ldr	r1, [sp, #40]	; 0x28
   23ed8:	mov	r8, r3
   23edc:	ldr	r6, [sp, #36]	; 0x24
   23ee0:	bl	10bbc <mcobject_async_malloc@plt>
   23ee4:	mov	r3, #0
   23ee8:	cmp	r8, #0
   23eec:	mov	r4, r0
   23ef0:	str	r3, [r0]
   23ef4:	beq	23f70 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0xb4>
   23ef8:	ldr	r3, [r7]
   23efc:	add	r9, r0, #8
   23f00:	mov	r2, r9
   23f04:	ldr	r1, [r3, #52]	; 0x34
   23f08:	ldr	r0, [r3, #4]
   23f0c:	add	r3, r8, #1
   23f10:	bl	10610 <mycore_string_init@plt>
   23f14:	ldr	r3, [sp, #44]	; 0x2c
   23f18:	mov	r2, r8
   23f1c:	cmp	r3, #0
   23f20:	mov	r1, sl
   23f24:	mov	r0, r9
   23f28:	bne	23fbc <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x100>
   23f2c:	bl	10688 <mycore_string_append_lowercase@plt>
   23f30:	cmp	r6, #0
   23f34:	bne	24000 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x144>
   23f38:	add	r0, r4, #28
   23f3c:	bl	11090 <mycore_string_clean_all@plt>
   23f40:	ldr	r3, [r5, #40]	; 0x28
   23f44:	mov	r0, r4
   23f48:	cmp	r3, #0
   23f4c:	streq	r3, [r4, #4]
   23f50:	ldrne	r3, [r5, #44]	; 0x2c
   23f54:	streq	r4, [r5, #40]	; 0x28
   23f58:	strne	r4, [r3]
   23f5c:	strne	r3, [r4, #4]
   23f60:	mov	r3, #1
   23f64:	str	r4, [r5, #44]	; 0x2c
   23f68:	str	r3, [r4, #64]	; 0x40
   23f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23f70:	add	r0, r0, #8
   23f74:	bl	11090 <mycore_string_clean_all@plt>
   23f78:	cmp	r6, #0
   23f7c:	beq	23f38 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   23f80:	ldr	r3, [r7]
   23f84:	add	r7, r4, #28
   23f88:	mov	r2, r7
   23f8c:	ldr	r1, [r3, #52]	; 0x34
   23f90:	ldr	r0, [r3, #4]
   23f94:	add	r3, r6, #1
   23f98:	bl	10610 <mycore_string_init@plt>
   23f9c:	ldr	r3, [sp, #44]	; 0x2c
   23fa0:	cmp	r3, #0
   23fa4:	bne	23fe8 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x12c>
   23fa8:	mov	r2, r6
   23fac:	mov	r0, r7
   23fb0:	ldr	r1, [sp, #32]
   23fb4:	bl	108d4 <mycore_string_append@plt>
   23fb8:	b	23f40 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   23fbc:	ldr	r3, [sp, #44]	; 0x2c
   23fc0:	bl	fe3c <myencoding_string_append_lowercase_ascii@plt>
   23fc4:	cmp	r6, #0
   23fc8:	beq	23f38 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x7c>
   23fcc:	ldr	r3, [r7]
   23fd0:	add	r7, r4, #28
   23fd4:	mov	r2, r7
   23fd8:	ldr	r1, [r3, #52]	; 0x34
   23fdc:	ldr	r0, [r3, #4]
   23fe0:	add	r3, r6, #1
   23fe4:	bl	10610 <mycore_string_init@plt>
   23fe8:	mov	r2, r6
   23fec:	mov	r0, r7
   23ff0:	ldr	r3, [sp, #44]	; 0x2c
   23ff4:	ldr	r1, [sp, #32]
   23ff8:	bl	10460 <myencoding_string_append@plt>
   23ffc:	b	23f40 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>
   24000:	ldr	r3, [r7]
   24004:	add	r7, r4, #28
   24008:	mov	r2, r7
   2400c:	ldr	r1, [r3, #52]	; 0x34
   24010:	ldr	r0, [r3, #4]
   24014:	add	r3, r6, #1
   24018:	bl	10610 <mycore_string_init@plt>
   2401c:	mov	r2, r6
   24020:	mov	r0, r7
   24024:	ldr	r1, [sp, #32]
   24028:	bl	108d4 <mycore_string_append@plt>
   2402c:	b	23f40 <myhtml_token_node_attr_append_with_convert_encoding@@Base+0x84>

00024030 <myhtml_token_attr_copy@@Base>:
   24030:	push	{r4, r5, r6, r7, r8, lr}
   24034:	mov	r5, r1
   24038:	mov	r7, r0
   2403c:	mov	r1, r3
   24040:	mov	r6, r2
   24044:	ldr	r0, [r0, #8]
   24048:	mov	r2, #0
   2404c:	bl	10bbc <mcobject_async_malloc@plt>
   24050:	ldr	r3, [r5, #16]
   24054:	mov	r2, #0
   24058:	cmp	r3, r2
   2405c:	mov	r4, r0
   24060:	str	r2, [r0]
   24064:	beq	240fc <myhtml_token_attr_copy@@Base+0xcc>
   24068:	ldr	r2, [r7]
   2406c:	add	r8, r0, #8
   24070:	add	r3, r3, #1
   24074:	ldr	r1, [r2, #52]	; 0x34
   24078:	ldr	r0, [r2, #4]
   2407c:	mov	r2, r8
   24080:	bl	10610 <mycore_string_init@plt>
   24084:	mov	r0, r8
   24088:	ldr	r2, [r5, #16]
   2408c:	ldr	r1, [r5, #8]
   24090:	bl	10688 <mycore_string_append_lowercase@plt>
   24094:	ldr	r3, [r5, #36]	; 0x24
   24098:	cmp	r3, #0
   2409c:	beq	24110 <myhtml_token_attr_copy@@Base+0xe0>
   240a0:	ldr	r2, [r7]
   240a4:	add	r7, r4, #28
   240a8:	add	r3, r3, #1
   240ac:	ldr	r1, [r2, #52]	; 0x34
   240b0:	ldr	r0, [r2, #4]
   240b4:	mov	r2, r7
   240b8:	bl	10610 <mycore_string_init@plt>
   240bc:	mov	r0, r7
   240c0:	ldr	r2, [r5, #36]	; 0x24
   240c4:	ldr	r1, [r5, #28]
   240c8:	bl	108d4 <mycore_string_append@plt>
   240cc:	ldr	r3, [r6, #40]	; 0x28
   240d0:	mov	r0, #1
   240d4:	cmp	r3, #0
   240d8:	streq	r3, [r4, #4]
   240dc:	ldrne	r3, [r6, #44]	; 0x2c
   240e0:	streq	r4, [r6, #40]	; 0x28
   240e4:	strne	r4, [r3]
   240e8:	strne	r3, [r4, #4]
   240ec:	ldr	r3, [r5, #64]	; 0x40
   240f0:	str	r4, [r6, #44]	; 0x2c
   240f4:	str	r3, [r4, #64]	; 0x40
   240f8:	pop	{r4, r5, r6, r7, r8, pc}
   240fc:	add	r0, r0, #8
   24100:	bl	11090 <mycore_string_clean_all@plt>
   24104:	ldr	r3, [r5, #36]	; 0x24
   24108:	cmp	r3, #0
   2410c:	bne	240a0 <myhtml_token_attr_copy@@Base+0x70>
   24110:	add	r0, r4, #28
   24114:	bl	11090 <mycore_string_clean_all@plt>
   24118:	b	240cc <myhtml_token_attr_copy@@Base+0x9c>

0002411c <myhtml_token_node_attr_copy@@Base>:
   2411c:	push	{r4, r5, r6, r7, r8, lr}
   24120:	ldr	r4, [r1, #40]	; 0x28
   24124:	cmp	r4, #0
   24128:	popeq	{r4, r5, r6, r7, r8, pc}
   2412c:	mov	r7, r0
   24130:	mov	r6, r2
   24134:	mov	r5, r3
   24138:	mov	r1, r4
   2413c:	mov	r3, r5
   24140:	mov	r2, r6
   24144:	mov	r0, r7
   24148:	bl	10760 <myhtml_token_attr_copy@plt>
   2414c:	ldr	r4, [r4]
   24150:	cmp	r4, #0
   24154:	bne	24138 <myhtml_token_node_attr_copy@@Base+0x1c>
   24158:	pop	{r4, r5, r6, r7, r8, pc}

0002415c <myhtml_token_node_clone@@Base>:
   2415c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24160:	subs	r5, r1, #0
   24164:	beq	2421c <myhtml_token_node_clone@@Base+0xc0>
   24168:	mov	r1, r2
   2416c:	mov	r6, r0
   24170:	mov	r7, r3
   24174:	ldr	r9, [r0]
   24178:	bl	10a0c <myhtml_token_node_create@plt>
   2417c:	subs	r4, r0, #0
   24180:	beq	2421c <myhtml_token_node_clone@@Base+0xc0>
   24184:	ldr	r2, [r5]
   24188:	ldr	r1, [r5, #48]	; 0x30
   2418c:	ldr	r3, [r5, #12]
   24190:	str	r2, [r4]
   24194:	ldr	r2, [r5, #24]
   24198:	str	r1, [r4, #48]	; 0x30
   2419c:	ldr	r1, [r5, #28]
   241a0:	str	r2, [r4, #24]
   241a4:	ldr	r2, [r5, #32]
   241a8:	str	r1, [r4, #28]
   241ac:	ldr	r1, [r5, #36]	; 0x24
   241b0:	cmp	r3, #0
   241b4:	str	r2, [r4, #32]
   241b8:	mov	r2, #0
   241bc:	str	r1, [r4, #36]	; 0x24
   241c0:	str	r2, [r4, #40]	; 0x28
   241c4:	str	r2, [r4, #44]	; 0x2c
   241c8:	bne	241f0 <myhtml_token_node_clone@@Base+0x94>
   241cc:	add	r0, r4, #4
   241d0:	bl	11090 <mycore_string_clean_all@plt>
   241d4:	mov	r3, r7
   241d8:	mov	r1, r5
   241dc:	mov	r0, r6
   241e0:	mov	r2, r4
   241e4:	bl	10580 <myhtml_token_node_attr_copy@plt>
   241e8:	mov	r0, r4
   241ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   241f0:	add	r8, r4, #4
   241f4:	mov	r2, r8
   241f8:	ldr	r1, [r9, #52]	; 0x34
   241fc:	add	r3, r3, #1
   24200:	ldr	r0, [r9, #4]
   24204:	bl	10610 <mycore_string_init@plt>
   24208:	mov	r0, r8
   2420c:	ldr	r2, [r5, #12]
   24210:	ldr	r1, [r5, #4]
   24214:	bl	108d4 <mycore_string_append@plt>
   24218:	b	241d4 <myhtml_token_node_clone@@Base+0x78>
   2421c:	mov	r4, #0
   24220:	b	241e8 <myhtml_token_node_clone@@Base+0x8c>

00024224 <myhtml_token_attr_match@@Base>:
   24224:	push	{r4, r5, r6, r7, r8, lr}
   24228:	ldr	r4, [r1, #40]	; 0x28
   2422c:	ldr	r6, [sp, #28]
   24230:	cmp	r4, #0
   24234:	beq	24290 <myhtml_token_attr_match@@Base+0x6c>
   24238:	mov	r7, r2
   2423c:	mov	r5, r3
   24240:	b	24250 <myhtml_token_attr_match@@Base+0x2c>
   24244:	ldr	r4, [r4]
   24248:	cmp	r4, #0
   2424c:	beq	24290 <myhtml_token_attr_match@@Base+0x6c>
   24250:	ldr	r1, [r4, #16]
   24254:	cmp	r1, r5
   24258:	bne	24244 <myhtml_token_attr_match@@Base+0x20>
   2425c:	ldr	r3, [r4, #36]	; 0x24
   24260:	cmp	r3, r6
   24264:	bne	24244 <myhtml_token_attr_match@@Base+0x20>
   24268:	mov	r1, r7
   2426c:	ldr	r0, [r4, #8]
   24270:	bl	fbf0 <mycore_strcmp@plt>
   24274:	cmp	r0, #0
   24278:	bne	24244 <myhtml_token_attr_match@@Base+0x20>
   2427c:	ldr	r1, [sp, #24]
   24280:	ldr	r0, [r4, #28]
   24284:	bl	fbf0 <mycore_strcmp@plt>
   24288:	cmp	r0, #0
   2428c:	beq	24294 <myhtml_token_attr_match@@Base+0x70>
   24290:	mov	r4, #0
   24294:	mov	r0, r4
   24298:	pop	{r4, r5, r6, r7, r8, pc}

0002429c <myhtml_token_attr_match_case@@Base>:
   2429c:	push	{r4, r5, r6, r7, r8, lr}
   242a0:	ldr	r4, [r1, #40]	; 0x28
   242a4:	ldr	r6, [sp, #28]
   242a8:	cmp	r4, #0
   242ac:	beq	24308 <myhtml_token_attr_match_case@@Base+0x6c>
   242b0:	mov	r7, r2
   242b4:	mov	r5, r3
   242b8:	b	242c8 <myhtml_token_attr_match_case@@Base+0x2c>
   242bc:	ldr	r4, [r4]
   242c0:	cmp	r4, #0
   242c4:	beq	24308 <myhtml_token_attr_match_case@@Base+0x6c>
   242c8:	ldr	r1, [r4, #16]
   242cc:	cmp	r1, r5
   242d0:	bne	242bc <myhtml_token_attr_match_case@@Base+0x20>
   242d4:	ldr	r3, [r4, #36]	; 0x24
   242d8:	cmp	r3, r6
   242dc:	bne	242bc <myhtml_token_attr_match_case@@Base+0x20>
   242e0:	mov	r1, r7
   242e4:	ldr	r0, [r4, #8]
   242e8:	bl	fbf0 <mycore_strcmp@plt>
   242ec:	cmp	r0, #0
   242f0:	bne	242bc <myhtml_token_attr_match_case@@Base+0x20>
   242f4:	ldr	r1, [sp, #24]
   242f8:	ldr	r0, [r4, #28]
   242fc:	bl	1052c <mycore_strcasecmp@plt>
   24300:	cmp	r0, #0
   24304:	beq	2430c <myhtml_token_attr_match_case@@Base+0x70>
   24308:	mov	r4, #0
   2430c:	mov	r0, r4
   24310:	pop	{r4, r5, r6, r7, r8, pc}

00024314 <_myhtml_token_create_copy_srt@@Base>:
   24314:	ldr	r0, [r0]
   24318:	push	{r4, r5, r6, lr}
   2431c:	mov	r4, r2
   24320:	mov	r6, r1
   24324:	add	r2, r2, #2
   24328:	ldr	r1, [r0, #52]	; 0x34
   2432c:	ldr	r0, [r0, #4]
   24330:	mov	r5, r3
   24334:	bl	10910 <mchar_async_malloc@plt>
   24338:	mov	r2, r4
   2433c:	mov	r1, r6
   24340:	str	r0, [r5]
   24344:	pop	{r4, r5, r6, lr}
   24348:	b	102e0 <mycore_string_raw_copy@plt>

0002434c <myhtml_token_strict_doctype_by_token@@Base>:
   2434c:	push	{r4, r5, r6, lr}
   24350:	mov	r4, r2
   24354:	ldr	r5, [r1, #40]	; 0x28
   24358:	mov	r6, r0
   2435c:	cmp	r5, #0
   24360:	beq	24370 <myhtml_token_strict_doctype_by_token@@Base+0x24>
   24364:	ldr	r2, [r5, #16]
   24368:	cmp	r2, #0
   2436c:	bne	243c4 <myhtml_token_strict_doctype_by_token@@Base+0x78>
   24370:	mov	r3, r4
   24374:	ldr	r1, [pc, #392]	; 24504 <myhtml_token_strict_doctype_by_token@@Base+0x1b8>
   24378:	mov	r2, #0
   2437c:	strb	r2, [r3], #4
   24380:	mov	r0, r6
   24384:	mov	r2, #1
   24388:	add	r1, pc, r1
   2438c:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24390:	ldr	r0, [r4, #8]
   24394:	cmp	r0, #0
   24398:	beq	243a0 <myhtml_token_strict_doctype_by_token@@Base+0x54>
   2439c:	bl	10dcc <mycore_free@plt>
   243a0:	ldr	r0, [r4, #12]
   243a4:	mov	r3, #0
   243a8:	cmp	r0, r3
   243ac:	str	r3, [r4, #8]
   243b0:	beq	243b8 <myhtml_token_strict_doctype_by_token@@Base+0x6c>
   243b4:	bl	10dcc <mycore_free@plt>
   243b8:	mov	r3, #0
   243bc:	str	r3, [r4, #12]
   243c0:	pop	{r4, r5, r6, pc}
   243c4:	add	r3, r4, #4
   243c8:	ldr	r1, [r5, #8]
   243cc:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   243d0:	ldr	r0, [pc, #304]	; 24508 <myhtml_token_strict_doctype_by_token@@Base+0x1bc>
   243d4:	ldr	r1, [r4, #4]
   243d8:	add	r0, pc, r0
   243dc:	bl	fbf0 <mycore_strcmp@plt>
   243e0:	ldr	r5, [r5]
   243e4:	cmp	r0, #0
   243e8:	movne	r3, #0
   243ec:	moveq	r3, #1
   243f0:	cmp	r5, #0
   243f4:	strb	r3, [r4]
   243f8:	popeq	{r4, r5, r6, pc}
   243fc:	ldr	r3, [r5, #36]	; 0x24
   24400:	cmp	r3, #0
   24404:	popeq	{r4, r5, r6, pc}
   24408:	ldr	r1, [pc, #252]	; 2450c <myhtml_token_strict_doctype_by_token@@Base+0x1c0>
   2440c:	ldr	r0, [r5, #28]
   24410:	add	r1, pc, r1
   24414:	bl	1052c <mycore_strcasecmp@plt>
   24418:	cmp	r0, #0
   2441c:	bne	2448c <myhtml_token_strict_doctype_by_token@@Base+0x140>
   24420:	ldr	r5, [r5]
   24424:	cmp	r5, #0
   24428:	beq	24390 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   2442c:	ldr	r2, [r5, #36]	; 0x24
   24430:	cmp	r2, #0
   24434:	beq	24390 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   24438:	ldr	r1, [r5, #28]
   2443c:	add	r3, r4, #8
   24440:	mov	r0, r6
   24444:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   24448:	ldr	r1, [r5]
   2444c:	cmp	r1, #0
   24450:	beq	24460 <myhtml_token_strict_doctype_by_token@@Base+0x114>
   24454:	ldr	r2, [r1, #36]	; 0x24
   24458:	cmp	r2, #0
   2445c:	bne	244f0 <myhtml_token_strict_doctype_by_token@@Base+0x1a4>
   24460:	ldr	r0, [r4, #12]
   24464:	cmp	r0, #0
   24468:	beq	24470 <myhtml_token_strict_doctype_by_token@@Base+0x124>
   2446c:	bl	10dcc <mycore_free@plt>
   24470:	ldr	r1, [pc, #152]	; 24510 <myhtml_token_strict_doctype_by_token@@Base+0x1c4>
   24474:	add	r3, r4, #12
   24478:	mov	r0, r6
   2447c:	mov	r2, #1
   24480:	add	r1, pc, r1
   24484:	pop	{r4, r5, r6, lr}
   24488:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   2448c:	ldr	r1, [pc, #128]	; 24514 <myhtml_token_strict_doctype_by_token@@Base+0x1c8>
   24490:	ldr	r2, [r5, #36]	; 0x24
   24494:	add	r1, pc, r1
   24498:	ldr	r0, [r5, #28]
   2449c:	bl	102a4 <mycore_strncasecmp@plt>
   244a0:	cmp	r0, #0
   244a4:	bne	24390 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   244a8:	ldr	r5, [r5]
   244ac:	cmp	r5, #0
   244b0:	beq	24390 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   244b4:	ldr	r3, [r5, #36]	; 0x24
   244b8:	cmp	r3, #0
   244bc:	beq	24390 <myhtml_token_strict_doctype_by_token@@Base+0x44>
   244c0:	ldr	r1, [pc, #80]	; 24518 <myhtml_token_strict_doctype_by_token@@Base+0x1cc>
   244c4:	add	r3, r4, #8
   244c8:	mov	r0, r6
   244cc:	mov	r2, #1
   244d0:	add	r1, pc, r1
   244d4:	bl	fe6c <_myhtml_token_create_copy_srt@plt>
   244d8:	add	r3, r4, #12
   244dc:	mov	r0, r6
   244e0:	ldr	r2, [r5, #36]	; 0x24
   244e4:	ldr	r1, [r5, #28]
   244e8:	pop	{r4, r5, r6, lr}
   244ec:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   244f0:	add	r3, r4, #12
   244f4:	mov	r0, r6
   244f8:	ldr	r1, [r1, #28]
   244fc:	pop	{r4, r5, r6, lr}
   24500:	b	fe6c <_myhtml_token_create_copy_srt@plt>
   24504:	muleq	sp, r8, r0
   24508:	muleq	sp, r8, r4
   2450c:	andeq	r6, sp, r4, lsr #13
   24510:	andeq	r6, sp, r0, lsr #31
   24514:	andeq	r6, sp, r8, lsl r6
   24518:	andeq	r6, sp, r0, asr pc

0002451c <myhtml_token_doctype_check_html_4_0@@Base>:
   2451c:	ldr	r1, [pc, #68]	; 24568 <myhtml_token_doctype_check_html_4_0@@Base+0x4c>
   24520:	push	{r4, lr}
   24524:	add	r1, pc, r1
   24528:	mov	r4, r0
   2452c:	ldr	r0, [r0, #8]
   24530:	bl	fbf0 <mycore_strcmp@plt>
   24534:	cmp	r0, #0
   24538:	popeq	{r4, pc}
   2453c:	ldr	r0, [r4, #12]
   24540:	cmp	r0, #0
   24544:	beq	24560 <myhtml_token_doctype_check_html_4_0@@Base+0x44>
   24548:	ldr	r1, [pc, #28]	; 2456c <myhtml_token_doctype_check_html_4_0@@Base+0x50>
   2454c:	add	r1, pc, r1
   24550:	bl	fbf0 <mycore_strcmp@plt>
   24554:	adds	r0, r0, #0
   24558:	movne	r0, #1
   2455c:	pop	{r4, pc}
   24560:	mov	r0, #1
   24564:	pop	{r4, pc}
   24568:	andeq	r6, sp, r0, lsl #30
   2456c:	strdeq	r6, [sp], -r4

00024570 <myhtml_token_doctype_check_html_4_01@@Base>:
   24570:	ldr	r1, [pc, #68]	; 245bc <myhtml_token_doctype_check_html_4_01@@Base+0x4c>
   24574:	push	{r4, lr}
   24578:	add	r1, pc, r1
   2457c:	mov	r4, r0
   24580:	ldr	r0, [r0, #8]
   24584:	bl	fbf0 <mycore_strcmp@plt>
   24588:	cmp	r0, #0
   2458c:	popeq	{r4, pc}
   24590:	ldr	r0, [r4, #12]
   24594:	cmp	r0, #0
   24598:	beq	245b4 <myhtml_token_doctype_check_html_4_01@@Base+0x44>
   2459c:	ldr	r1, [pc, #28]	; 245c0 <myhtml_token_doctype_check_html_4_01@@Base+0x50>
   245a0:	add	r1, pc, r1
   245a4:	bl	fbf0 <mycore_strcmp@plt>
   245a8:	adds	r0, r0, #0
   245ac:	movne	r0, #1
   245b0:	pop	{r4, pc}
   245b4:	mov	r0, #1
   245b8:	pop	{r4, pc}
   245bc:	strdeq	r6, [sp], -r4
   245c0:	andeq	r6, sp, r8, ror #29

000245c4 <myhtml_token_doctype_check_xhtml_1_0@@Base>:
   245c4:	ldr	r3, [r0, #12]
   245c8:	cmp	r3, #0
   245cc:	beq	2460c <myhtml_token_doctype_check_xhtml_1_0@@Base+0x48>
   245d0:	ldr	r1, [pc, #60]	; 24614 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x50>
   245d4:	push	{r4, lr}
   245d8:	add	r1, pc, r1
   245dc:	mov	r4, r0
   245e0:	ldr	r0, [r0, #8]
   245e4:	bl	fbf0 <mycore_strcmp@plt>
   245e8:	cmp	r0, #0
   245ec:	popeq	{r4, pc}
   245f0:	ldr	r1, [pc, #32]	; 24618 <myhtml_token_doctype_check_xhtml_1_0@@Base+0x54>
   245f4:	ldr	r0, [r4, #12]
   245f8:	add	r1, pc, r1
   245fc:	bl	fbf0 <mycore_strcmp@plt>
   24600:	adds	r0, r0, #0
   24604:	movne	r0, #1
   24608:	pop	{r4, pc}
   2460c:	mov	r0, #1
   24610:	bx	lr
   24614:	ldrdeq	r6, [sp], -r8
   24618:	ldrdeq	r6, [sp], -ip

0002461c <myhtml_token_doctype_check_xhtml_1_1@@Base>:
   2461c:	ldr	r3, [r0, #12]
   24620:	cmp	r3, #0
   24624:	beq	24664 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x48>
   24628:	ldr	r1, [pc, #60]	; 2466c <myhtml_token_doctype_check_xhtml_1_1@@Base+0x50>
   2462c:	push	{r4, lr}
   24630:	add	r1, pc, r1
   24634:	mov	r4, r0
   24638:	ldr	r0, [r0, #8]
   2463c:	bl	fbf0 <mycore_strcmp@plt>
   24640:	cmp	r0, #0
   24644:	popeq	{r4, pc}
   24648:	ldr	r1, [pc, #32]	; 24670 <myhtml_token_doctype_check_xhtml_1_1@@Base+0x54>
   2464c:	ldr	r0, [r4, #12]
   24650:	add	r1, pc, r1
   24654:	bl	fbf0 <mycore_strcmp@plt>
   24658:	adds	r0, r0, #0
   2465c:	movne	r0, #1
   24660:	pop	{r4, pc}
   24664:	mov	r0, #1
   24668:	bx	lr
   2466c:	ldrdeq	r6, [sp], -r8
   24670:	ldrdeq	r6, [sp], -r4

00024674 <myhtml_token_release_and_check_doctype_attributes@@Base>:
   24674:	push	{r4, lr}
   24678:	subs	r4, r2, #0
   2467c:	beq	246fc <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   24680:	bl	1049c <myhtml_token_strict_doctype_by_token@plt>
   24684:	ldr	r3, [r4, #4]
   24688:	cmp	r3, #0
   2468c:	beq	246fc <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   24690:	ldrb	r3, [r4]
   24694:	cmp	r3, #0
   24698:	ldr	r3, [r4, #8]
   2469c:	beq	246ec <myhtml_token_release_and_check_doctype_attributes@@Base+0x78>
   246a0:	cmp	r3, #0
   246a4:	beq	246fc <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   246a8:	mov	r0, r4
   246ac:	bl	10520 <myhtml_token_doctype_check_html_4_0@plt>
   246b0:	cmp	r0, #0
   246b4:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   246b8:	mov	r0, r4
   246bc:	bl	103ac <myhtml_token_doctype_check_html_4_01@plt>
   246c0:	cmp	r0, #0
   246c4:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   246c8:	mov	r0, r4
   246cc:	bl	10664 <myhtml_token_doctype_check_xhtml_1_0@plt>
   246d0:	cmp	r0, #0
   246d4:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   246d8:	mov	r0, r4
   246dc:	bl	fc38 <myhtml_token_doctype_check_xhtml_1_1@plt>
   246e0:	eor	r0, r0, #1
   246e4:	uxtb	r0, r0
   246e8:	pop	{r4, pc}
   246ec:	cmp	r3, #0
   246f0:	beq	24704 <myhtml_token_release_and_check_doctype_attributes@@Base+0x90>
   246f4:	mov	r0, #1
   246f8:	pop	{r4, pc}
   246fc:	mov	r0, #0
   24700:	pop	{r4, pc}
   24704:	ldr	r0, [r4, #12]
   24708:	cmp	r0, #0
   2470c:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   24710:	ldr	r1, [pc, #40]	; 24740 <myhtml_token_release_and_check_doctype_attributes@@Base+0xcc>
   24714:	add	r1, pc, r1
   24718:	bl	fbf0 <mycore_strcmp@plt>
   2471c:	cmp	r0, #0
   24720:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   24724:	ldr	r3, [r4, #8]
   24728:	cmp	r3, #0
   2472c:	beq	246fc <myhtml_token_release_and_check_doctype_attributes@@Base+0x88>
   24730:	ldrb	r3, [r4]
   24734:	cmp	r3, #0
   24738:	beq	246f4 <myhtml_token_release_and_check_doctype_attributes@@Base+0x80>
   2473c:	b	246a8 <myhtml_token_release_and_check_doctype_attributes@@Base+0x34>
   24740:	andeq	r6, sp, r0, asr #28

00024744 <myhtml_token_attr_compare@@Base>:
   24744:	cmp	r1, #0
   24748:	cmpne	r0, #0
   2474c:	beq	247f0 <myhtml_token_attr_compare@@Base+0xac>
   24750:	push	{r4, r5, r6, lr}
   24754:	ldr	r4, [r0, #40]	; 0x28
   24758:	ldr	r5, [r1, #40]	; 0x28
   2475c:	cmp	r5, #0
   24760:	cmpne	r4, #0
   24764:	beq	247f8 <myhtml_token_attr_compare@@Base+0xb4>
   24768:	ldr	r2, [r4, #16]
   2476c:	ldr	r3, [r5, #16]
   24770:	cmp	r2, r3
   24774:	bne	247e8 <myhtml_token_attr_compare@@Base+0xa4>
   24778:	ldr	r2, [r5, #36]	; 0x24
   2477c:	ldr	r3, [r4, #36]	; 0x24
   24780:	cmp	r2, r3
   24784:	beq	247d4 <myhtml_token_attr_compare@@Base+0x90>
   24788:	b	247e8 <myhtml_token_attr_compare@@Base+0xa4>
   2478c:	ldr	r1, [r5, #28]
   24790:	ldr	r0, [r4, #28]
   24794:	bl	1052c <mycore_strcasecmp@plt>
   24798:	cmp	r0, #0
   2479c:	bne	247e8 <myhtml_token_attr_compare@@Base+0xa4>
   247a0:	ldr	r4, [r4]
   247a4:	ldr	r5, [r5]
   247a8:	cmp	r4, #0
   247ac:	cmpne	r5, #0
   247b0:	beq	247f8 <myhtml_token_attr_compare@@Base+0xb4>
   247b4:	ldr	r2, [r4, #16]
   247b8:	ldr	r3, [r5, #16]
   247bc:	cmp	r2, r3
   247c0:	bne	247e8 <myhtml_token_attr_compare@@Base+0xa4>
   247c4:	ldr	r2, [r4, #36]	; 0x24
   247c8:	ldr	r3, [r5, #36]	; 0x24
   247cc:	cmp	r2, r3
   247d0:	bne	247e8 <myhtml_token_attr_compare@@Base+0xa4>
   247d4:	ldr	r1, [r5, #8]
   247d8:	ldr	r0, [r4, #8]
   247dc:	bl	fbf0 <mycore_strcmp@plt>
   247e0:	cmp	r0, #0
   247e4:	beq	2478c <myhtml_token_attr_compare@@Base+0x48>
   247e8:	mov	r0, #0
   247ec:	pop	{r4, r5, r6, pc}
   247f0:	mov	r0, #0
   247f4:	bx	lr
   247f8:	cmp	r4, #0
   247fc:	cmpeq	r5, #0
   24800:	moveq	r0, #1
   24804:	movne	r0, #0
   24808:	pop	{r4, r5, r6, pc}

0002480c <myhtml_token_attr_by_name@@Base>:
   2480c:	push	{r4, r5, r6, lr}
   24810:	ldr	r4, [r0, #40]	; 0x28
   24814:	cmp	r4, #0
   24818:	movne	r6, r1
   2481c:	movne	r5, r2
   24820:	bne	24834 <myhtml_token_attr_by_name@@Base+0x28>
   24824:	b	2485c <myhtml_token_attr_by_name@@Base+0x50>
   24828:	ldr	r4, [r4]
   2482c:	cmp	r4, #0
   24830:	beq	2485c <myhtml_token_attr_by_name@@Base+0x50>
   24834:	ldr	r3, [r4, #16]
   24838:	cmp	r3, r5
   2483c:	bne	24828 <myhtml_token_attr_by_name@@Base+0x1c>
   24840:	mov	r1, r6
   24844:	ldr	r0, [r4, #8]
   24848:	bl	fbf0 <mycore_strcmp@plt>
   2484c:	cmp	r0, #0
   24850:	bne	24828 <myhtml_token_attr_by_name@@Base+0x1c>
   24854:	mov	r0, r4
   24858:	pop	{r4, r5, r6, pc}
   2485c:	mov	r4, #0
   24860:	mov	r0, r4
   24864:	pop	{r4, r5, r6, pc}

00024868 <myhtml_token_node_attr_copy_with_check@@Base>:
   24868:	push	{r4, r5, r6, r7, r8, lr}
   2486c:	ldr	r4, [r1, #40]	; 0x28
   24870:	cmp	r4, #0
   24874:	popeq	{r4, r5, r6, r7, r8, pc}
   24878:	mov	r7, r0
   2487c:	mov	r5, r2
   24880:	mov	r6, r3
   24884:	b	24894 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   24888:	ldr	r4, [r4]
   2488c:	cmp	r4, #0
   24890:	beq	248d4 <myhtml_token_node_attr_copy_with_check@@Base+0x6c>
   24894:	ldr	r2, [r4, #16]
   24898:	cmp	r2, #0
   2489c:	beq	24888 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   248a0:	ldr	r1, [r4, #8]
   248a4:	mov	r0, r5
   248a8:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   248ac:	cmp	r0, #0
   248b0:	bne	24888 <myhtml_token_node_attr_copy_with_check@@Base+0x20>
   248b4:	mov	r1, r4
   248b8:	mov	r3, r6
   248bc:	mov	r2, r5
   248c0:	mov	r0, r7
   248c4:	bl	10760 <myhtml_token_attr_copy@plt>
   248c8:	ldr	r4, [r4]
   248cc:	cmp	r4, #0
   248d0:	bne	24894 <myhtml_token_node_attr_copy_with_check@@Base+0x2c>
   248d4:	pop	{r4, r5, r6, r7, r8, pc}

000248d8 <myhtml_token_adjust_mathml_attributes@@Base>:
   248d8:	ldr	r1, [pc, #60]	; 2491c <myhtml_token_adjust_mathml_attributes@@Base+0x44>
   248dc:	push	{r4, lr}
   248e0:	mov	r2, #13
   248e4:	add	r1, pc, r1
   248e8:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   248ec:	cmp	r0, #0
   248f0:	popeq	{r4, pc}
   248f4:	ldr	r3, [pc, #36]	; 24920 <myhtml_token_adjust_mathml_attributes@@Base+0x48>
   248f8:	ldr	ip, [r0, #8]
   248fc:	add	r3, pc, r3
   24900:	ldm	r3!, {r0, r1, r2}
   24904:	ldrb	r3, [r3]
   24908:	str	r0, [ip]
   2490c:	str	r1, [ip, #4]
   24910:	strb	r3, [ip, #12]
   24914:	str	r2, [ip, #8]
   24918:	pop	{r4, pc}
   2491c:	andeq	r6, sp, r4, lsl #25
   24920:	andeq	r6, sp, ip, ror ip

00024924 <myhtml_token_adjust_svg_attributes@@Base>:
   24924:	push	{r4, r5, r6, r7, r8, lr}
   24928:	mov	r2, #13
   2492c:	ldr	r4, [pc, #80]	; 24984 <myhtml_token_adjust_svg_attributes@@Base+0x60>
   24930:	ldr	r1, [pc, #80]	; 24988 <myhtml_token_adjust_svg_attributes@@Base+0x64>
   24934:	add	r4, pc, r4
   24938:	add	r1, pc, r1
   2493c:	mov	r7, r0
   24940:	add	r6, r4, #928	; 0x3a0
   24944:	mov	r0, r7
   24948:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   2494c:	cmp	r0, #0
   24950:	add	r5, r0, #8
   24954:	mov	r0, r5
   24958:	beq	24970 <myhtml_token_adjust_svg_attributes@@Base+0x4c>
   2495c:	bl	10d18 <mycore_string_clean@plt>
   24960:	mov	r0, r5
   24964:	ldr	r2, [r4, #12]
   24968:	ldr	r1, [r4, #8]
   2496c:	bl	108d4 <mycore_string_append@plt>
   24970:	add	r4, r4, #16
   24974:	cmp	r4, r6
   24978:	popeq	{r4, r5, r6, r7, r8, pc}
   2497c:	ldm	r4, {r1, r2}
   24980:	b	24944 <myhtml_token_adjust_svg_attributes@@Base+0x20>
   24984:	andeq	r0, pc, ip, lsr #1
   24988:	andeq	r6, sp, r0, asr ip

0002498c <myhtml_token_adjust_foreign_attributes@@Base>:
   2498c:	push	{r4, r5, r6, r7, r8, lr}
   24990:	mov	r2, #13
   24994:	ldr	r4, [pc, #92]	; 249f8 <myhtml_token_adjust_foreign_attributes@@Base+0x6c>
   24998:	ldr	r1, [pc, #92]	; 249fc <myhtml_token_adjust_foreign_attributes@@Base+0x70>
   2499c:	add	r4, pc, r4
   249a0:	add	r4, r4, #928	; 0x3a0
   249a4:	add	r1, pc, r1
   249a8:	mov	r8, r0
   249ac:	add	r7, r4, #220	; 0xdc
   249b0:	mov	r0, r8
   249b4:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   249b8:	subs	r5, r0, #0
   249bc:	add	r6, r5, #8
   249c0:	mov	r0, r6
   249c4:	beq	249e4 <myhtml_token_adjust_foreign_attributes@@Base+0x58>
   249c8:	bl	10d18 <mycore_string_clean@plt>
   249cc:	mov	r0, r6
   249d0:	ldr	r2, [r4, #12]
   249d4:	ldr	r1, [r4, #8]
   249d8:	bl	108d4 <mycore_string_append@plt>
   249dc:	ldr	r3, [r4, #16]
   249e0:	str	r3, [r5, #64]	; 0x40
   249e4:	add	r4, r4, #20
   249e8:	cmp	r4, r7
   249ec:	popeq	{r4, r5, r6, r7, r8, pc}
   249f0:	ldm	r4, {r1, r2}
   249f4:	b	249b0 <myhtml_token_adjust_foreign_attributes@@Base+0x24>
   249f8:	andeq	r0, pc, r4, asr #32
   249fc:	strdeq	r6, [sp], -r4

00024a00 <myhtml_token_delete@@Base>:
   24a00:	ldr	r2, [r1, #4]
   24a04:	push	{r4, r5, r6, lr}
   24a08:	cmp	r2, #0
   24a0c:	mov	r4, r1
   24a10:	mov	r5, r0
   24a14:	beq	24a2c <myhtml_token_delete@@Base+0x2c>
   24a18:	ldr	r0, [r1, #16]
   24a1c:	cmp	r0, #0
   24a20:	beq	24a2c <myhtml_token_delete@@Base+0x2c>
   24a24:	ldr	r1, [r1, #20]
   24a28:	bl	10718 <mchar_async_free@plt>
   24a2c:	mov	r1, r4
   24a30:	ldr	r0, [r5, #4]
   24a34:	pop	{r4, r5, r6, lr}
   24a38:	b	1004c <mcobject_async_free@plt>

00024a3c <myhtml_token_attr_delete_all@@Base>:
   24a3c:	push	{r4, lr}
   24a40:	ldr	r4, [r1, #40]	; 0x28
   24a44:	cmp	r4, #0
   24a48:	popeq	{r4, pc}
   24a4c:	ldr	r3, [r4, #8]
   24a50:	subs	r2, r3, #0
   24a54:	beq	24a6c <myhtml_token_attr_delete_all@@Base+0x30>
   24a58:	ldr	r3, [r4, #20]
   24a5c:	subs	r0, r3, #0
   24a60:	beq	24a6c <myhtml_token_attr_delete_all@@Base+0x30>
   24a64:	ldr	r1, [r4, #24]
   24a68:	bl	10718 <mchar_async_free@plt>
   24a6c:	ldr	r3, [r4, #28]
   24a70:	subs	r2, r3, #0
   24a74:	beq	24a8c <myhtml_token_attr_delete_all@@Base+0x50>
   24a78:	ldr	r3, [r4, #40]	; 0x28
   24a7c:	subs	r0, r3, #0
   24a80:	beq	24a8c <myhtml_token_attr_delete_all@@Base+0x50>
   24a84:	ldr	r1, [r4, #44]	; 0x2c
   24a88:	bl	10718 <mchar_async_free@plt>
   24a8c:	ldr	r4, [r4]
   24a90:	cmp	r4, #0
   24a94:	bne	24a4c <myhtml_token_attr_delete_all@@Base+0x10>
   24a98:	pop	{r4, pc}

00024a9c <myhtml_token_attr_remove@@Base>:
   24a9c:	cmp	r1, #0
   24aa0:	beq	24ad0 <myhtml_token_attr_remove@@Base+0x34>
   24aa4:	ldm	r1, {r2, r3}
   24aa8:	cmp	r3, #0
   24aac:	strne	r2, [r3]
   24ab0:	ldrne	r2, [r1]
   24ab4:	streq	r2, [r0, #40]	; 0x28
   24ab8:	cmp	r2, #0
   24abc:	strne	r3, [r2, #4]
   24ac0:	streq	r3, [r0, #44]	; 0x2c
   24ac4:	mov	r3, #0
   24ac8:	str	r3, [r1]
   24acc:	str	r3, [r1, #4]
   24ad0:	mov	r0, r1
   24ad4:	bx	lr

00024ad8 <myhtml_token_attr_remove_by_name@@Base>:
   24ad8:	push	{r4, lr}
   24adc:	mov	r4, r0
   24ae0:	bl	10eb0 <myhtml_token_attr_by_name@plt>
   24ae4:	mov	r1, r0
   24ae8:	mov	r0, r4
   24aec:	pop	{r4, lr}
   24af0:	b	10574 <myhtml_token_attr_remove@plt>

00024af4 <myhtml_token_merged_two_token_string@@Base>:
   24af4:	push	{r4, r5, r6, r7, r8, r9, lr}
   24af8:	mov	r7, r0
   24afc:	mov	r4, r1
   24b00:	mov	r6, r2
   24b04:	sub	sp, sp, #28
   24b08:	ldr	r0, [r0, #8]
   24b0c:	mov	r8, r3
   24b10:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24b14:	mov	r1, r6
   24b18:	ldr	r0, [r7, #8]
   24b1c:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24b20:	ldr	r1, [r7, #52]	; 0x34
   24b24:	ldr	r2, [r4, #20]
   24b28:	mov	r3, #0
   24b2c:	cmp	r2, r1
   24b30:	add	r5, r4, #4
   24b34:	add	r9, r6, #4
   24b38:	str	r3, [r4, #24]
   24b3c:	str	r3, [r4, #28]
   24b40:	beq	24bdc <myhtml_token_merged_two_token_string@@Base+0xe8>
   24b44:	ldr	r3, [r6, #20]
   24b48:	cmp	r1, r3
   24b4c:	beq	24bb4 <myhtml_token_merged_two_token_string@@Base+0xc0>
   24b50:	ldr	r3, [r6, #12]
   24b54:	ldr	r2, [r4, #12]
   24b58:	add	r3, r3, #2
   24b5c:	add	r6, sp, #4
   24b60:	add	r3, r3, r2
   24b64:	ldr	r0, [r7, #4]
   24b68:	mov	r2, r6
   24b6c:	bl	10610 <mycore_string_init@plt>
   24b70:	cmp	r8, #0
   24b74:	bne	24bf4 <myhtml_token_merged_two_token_string@@Base+0x100>
   24b78:	mov	r1, r5
   24b7c:	mov	r0, r6
   24b80:	bl	1016c <mycore_string_copy@plt>
   24b84:	mov	r1, r9
   24b88:	mov	r0, r6
   24b8c:	bl	1016c <mycore_string_copy@plt>
   24b90:	mov	lr, r6
   24b94:	mov	ip, r5
   24b98:	ldm	lr!, {r0, r1, r2, r3}
   24b9c:	ldr	lr, [lr]
   24ba0:	stmia	ip!, {r0, r1, r2, r3}
   24ba4:	mov	r0, r4
   24ba8:	str	lr, [ip]
   24bac:	add	sp, sp, #28
   24bb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24bb4:	cmp	r8, #0
   24bb8:	movne	r1, r5
   24bbc:	movne	r0, r9
   24bc0:	moveq	r1, r9
   24bc4:	moveq	r0, r5
   24bc8:	bl	1016c <mycore_string_copy@plt>
   24bcc:	mov	r4, r6
   24bd0:	mov	r0, r4
   24bd4:	add	sp, sp, #28
   24bd8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24bdc:	cmp	r8, r3
   24be0:	bne	24bd0 <myhtml_token_merged_two_token_string@@Base+0xdc>
   24be4:	mov	r1, r9
   24be8:	mov	r0, r5
   24bec:	bl	1016c <mycore_string_copy@plt>
   24bf0:	b	24bd0 <myhtml_token_merged_two_token_string@@Base+0xdc>
   24bf4:	mov	r1, r9
   24bf8:	mov	r0, r6
   24bfc:	bl	1016c <mycore_string_copy@plt>
   24c00:	mov	r1, r5
   24c04:	mov	r0, r6
   24c08:	bl	1016c <mycore_string_copy@plt>
   24c0c:	b	24b90 <myhtml_token_merged_two_token_string@@Base+0x9c>

00024c10 <myhtml_token_set_replacement_character_for_null_token@@Base>:
   24c10:	push	{r4, r5, lr}
   24c14:	mov	r4, r1
   24c18:	sub	sp, sp, #28
   24c1c:	mov	r5, r0
   24c20:	ldr	r0, [r0, #8]
   24c24:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   24c28:	ldr	r3, [r4, #12]
   24c2c:	ldr	r1, [r5, #52]	; 0x34
   24c30:	ldr	r0, [r5, #4]
   24c34:	add	r5, sp, #4
   24c38:	add	r3, r3, #2
   24c3c:	mov	r2, r5
   24c40:	bl	10610 <mycore_string_init@plt>
   24c44:	ldr	r2, [r4, #12]
   24c48:	mov	r0, r5
   24c4c:	ldr	r1, [r4, #4]!
   24c50:	bl	10388 <mycore_string_append_with_replacement_null_characters@plt>
   24c54:	mov	ip, r5
   24c58:	ldm	ip!, {r0, r1, r2, r3}
   24c5c:	ldr	ip, [ip]
   24c60:	stmia	r4!, {r0, r1, r2, r3}
   24c64:	str	ip, [r4]
   24c68:	add	sp, sp, #28
   24c6c:	pop	{r4, r5, pc}

00024c70 <myhtml_tokenizer_state_rcdata_less_than_sign@@Base>:
   24c70:	ldrb	r2, [r2, r3]
   24c74:	cmp	r2, #47	; 0x2f
   24c78:	moveq	r2, #11
   24c7c:	addeq	r3, r3, #1
   24c80:	movne	r2, #2
   24c84:	str	r2, [r0, #160]	; 0xa0
   24c88:	mov	r0, r3
   24c8c:	bx	lr

00024c90 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base>:
   24c90:	ldrb	r2, [r2, r3]
   24c94:	ldr	r1, [pc, #28]	; 24cb8 <myhtml_tokenizer_state_rcdata_end_tag_open@@Base+0x28>
   24c98:	add	r1, pc, r1
   24c9c:	ldrb	r2, [r1, r2]
   24ca0:	cmp	r2, #1
   24ca4:	moveq	r2, #12
   24ca8:	movne	r2, #2
   24cac:	str	r2, [r0, #160]	; 0xa0
   24cb0:	mov	r0, r3
   24cb4:	bx	lr
   24cb8:	andeq	r7, sp, r4, lsr #32

00024cbc <myhtml_tokenizer_state_rawtext_less_than_sign@@Base>:
   24cbc:	ldrb	r2, [r2, r3]
   24cc0:	cmp	r2, #47	; 0x2f
   24cc4:	moveq	r2, #14
   24cc8:	addeq	r3, r3, #1
   24ccc:	movne	r2, #4
   24cd0:	str	r2, [r0, #160]	; 0xa0
   24cd4:	mov	r0, r3
   24cd8:	bx	lr

00024cdc <myhtml_tokenizer_state_rawtext_end_tag_open@@Base>:
   24cdc:	ldrb	r2, [r2, r3]
   24ce0:	ldr	r1, [pc, #28]	; 24d04 <myhtml_tokenizer_state_rawtext_end_tag_open@@Base+0x28>
   24ce4:	add	r1, pc, r1
   24ce8:	ldrb	r2, [r1, r2]
   24cec:	cmp	r2, #1
   24cf0:	moveq	r2, #15
   24cf4:	movne	r2, #4
   24cf8:	str	r2, [r0, #160]	; 0xa0
   24cfc:	mov	r0, r3
   24d00:	bx	lr
   24d04:	ldrdeq	r6, [sp], -r8

00024d08 <myhtml_tokenizer_state_data@@Base>:
   24d08:	push	{r4, r5, lr}
   24d0c:	ldr	lr, [sp, #12]
   24d10:	cmp	r3, lr
   24d14:	bcs	24db8 <myhtml_tokenizer_state_data@@Base+0xb0>
   24d18:	ldrb	ip, [r2, r3]
   24d1c:	add	r2, r2, r3
   24d20:	cmp	ip, #60	; 0x3c
   24d24:	beq	24dc0 <myhtml_tokenizer_state_data@@Base+0xb8>
   24d28:	ldr	r5, [pc, #176]	; 24de0 <myhtml_tokenizer_state_data@@Base+0xd8>
   24d2c:	add	r5, pc, r5
   24d30:	b	24d8c <myhtml_tokenizer_state_data@@Base+0x84>
   24d34:	ldr	ip, [r1, #48]	; 0x30
   24d38:	tst	ip, #2048	; 0x800
   24d3c:	ldr	ip, [r1, #48]	; 0x30
   24d40:	orreq	ip, ip, #2048	; 0x800
   24d44:	streq	ip, [r1, #48]	; 0x30
   24d48:	beq	24d74 <myhtml_tokenizer_state_data@@Base+0x6c>
   24d4c:	tst	ip, #8
   24d50:	beq	24d74 <myhtml_tokenizer_state_data@@Base+0x6c>
   24d54:	ldr	ip, [r1, #48]	; 0x30
   24d58:	ldr	r4, [r1, #48]	; 0x30
   24d5c:	and	ip, ip, #8
   24d60:	eor	ip, ip, r4
   24d64:	str	ip, [r1, #48]	; 0x30
   24d68:	ldr	ip, [r1, #48]	; 0x30
   24d6c:	orr	ip, ip, #512	; 0x200
   24d70:	str	ip, [r1, #48]	; 0x30
   24d74:	add	r3, r3, #1
   24d78:	cmp	lr, r3
   24d7c:	beq	24db8 <myhtml_tokenizer_state_data@@Base+0xb0>
   24d80:	ldrb	ip, [r2, #1]!
   24d84:	cmp	ip, #60	; 0x3c
   24d88:	beq	24dc0 <myhtml_tokenizer_state_data@@Base+0xb8>
   24d8c:	cmp	ip, #0
   24d90:	beq	24d34 <myhtml_tokenizer_state_data@@Base+0x2c>
   24d94:	ldr	r4, [r1, #48]	; 0x30
   24d98:	tst	r4, #8
   24d9c:	beq	24d74 <myhtml_tokenizer_state_data@@Base+0x6c>
   24da0:	ldrb	ip, [r5, ip]
   24da4:	cmp	ip, #2
   24da8:	bne	24d54 <myhtml_tokenizer_state_data@@Base+0x4c>
   24dac:	add	r3, r3, #1
   24db0:	cmp	lr, r3
   24db4:	bne	24d80 <myhtml_tokenizer_state_data@@Base+0x78>
   24db8:	mov	r0, r3
   24dbc:	pop	{r4, r5, pc}
   24dc0:	ldr	r2, [r0, #192]	; 0xc0
   24dc4:	mov	ip, #7
   24dc8:	add	r2, r2, r3
   24dcc:	add	r3, r3, #1
   24dd0:	str	r2, [r1, #32]
   24dd4:	str	ip, [r0, #160]	; 0xa0
   24dd8:	mov	r0, r3
   24ddc:	pop	{r4, r5, pc}
   24de0:	muleq	sp, r0, pc	; <UNPREDICTABLE>

00024de4 <myhtml_tokenizer_state_comment@@Base>:
   24de4:	push	{lr}		; (str lr, [sp, #-4]!)
   24de8:	mov	lr, #2
   24dec:	ldr	ip, [sp, #4]
   24df0:	str	lr, [r1]
   24df4:	cmp	r3, ip
   24df8:	bcs	24e28 <myhtml_tokenizer_state_comment@@Base+0x44>
   24dfc:	ldrb	r1, [r2, r3]
   24e00:	add	r2, r2, r3
   24e04:	cmp	r1, #45	; 0x2d
   24e08:	bne	24e1c <myhtml_tokenizer_state_comment@@Base+0x38>
   24e0c:	b	24e30 <myhtml_tokenizer_state_comment@@Base+0x4c>
   24e10:	ldrb	r1, [r2, #1]!
   24e14:	cmp	r1, #45	; 0x2d
   24e18:	beq	24e30 <myhtml_tokenizer_state_comment@@Base+0x4c>
   24e1c:	add	r3, r3, #1
   24e20:	cmp	ip, r3
   24e24:	bne	24e10 <myhtml_tokenizer_state_comment@@Base+0x2c>
   24e28:	mov	r0, r3
   24e2c:	pop	{pc}		; (ldr pc, [sp], #4)
   24e30:	mov	r2, #48	; 0x30
   24e34:	add	r3, r3, #1
   24e38:	str	r2, [r0, #160]	; 0xa0
   24e3c:	mov	r0, r3
   24e40:	pop	{pc}		; (ldr pc, [sp], #4)

00024e44 <myhtml_tokenizer_state_comment_end_dash@@Base>:
   24e44:	ldrb	r2, [r2, r3]
   24e48:	cmp	r2, #45	; 0x2d
   24e4c:	moveq	r2, #49	; 0x31
   24e50:	addeq	r3, r3, #1
   24e54:	addne	r3, r3, #1
   24e58:	movne	r2, #47	; 0x2f
   24e5c:	str	r2, [r0, #160]	; 0xa0
   24e60:	mov	r0, r3
   24e64:	bx	lr

00024e68 <myhtml_tokenizer_state_parse_error_stop@@Base>:
   24e68:	ldr	r3, [pc, #8]	; 24e78 <myhtml_tokenizer_state_parse_error_stop@@Base+0x10>
   24e6c:	str	r3, [r0, #196]	; 0xc4
   24e70:	ldr	r0, [sp]
   24e74:	bx	lr
   24e78:	andeq	r9, r0, ip, lsr #2

00024e7c <myhtml_tokenizer_state_plaintext@@Base>:
   24e7c:	mov	r2, r1
   24e80:	ldr	r1, [r1, #48]	; 0x30
   24e84:	push	{r4, r5, r6, lr}
   24e88:	tst	r1, #128	; 0x80
   24e8c:	ldr	r5, [sp, #16]
   24e90:	ldreq	r1, [r2, #48]	; 0x30
   24e94:	mov	r4, r0
   24e98:	orreq	r1, r1, #128	; 0x80
   24e9c:	streq	r1, [r2, #48]	; 0x30
   24ea0:	ldr	r1, [r0, #192]	; 0xc0
   24ea4:	ldr	ip, [r2, #48]	; 0x30
   24ea8:	ldr	r0, [r2, #48]	; 0x30
   24eac:	add	r3, r1, r3
   24eb0:	and	ip, ip, #8
   24eb4:	add	r1, r1, r5
   24eb8:	sub	r1, r1, r3
   24ebc:	eor	ip, ip, r0
   24ec0:	mov	r6, #0
   24ec4:	mov	r0, #1
   24ec8:	str	r1, [r2, #36]	; 0x24
   24ecc:	str	r1, [r2, #28]
   24ed0:	str	r3, [r2, #24]
   24ed4:	str	r0, [r2]
   24ed8:	str	ip, [r2, #48]	; 0x30
   24edc:	mov	r1, r5
   24ee0:	str	r6, [r4, #160]	; 0xa0
   24ee4:	mov	r0, r4
   24ee8:	bl	10028 <myhtml_queue_add@plt>
   24eec:	cmp	r0, r6
   24ef0:	movne	r3, #69	; 0x45
   24ef4:	movne	r0, r6
   24ef8:	strne	r3, [r4, #160]	; 0xa0
   24efc:	moveq	r0, r5
   24f00:	pop	{r4, r5, r6, pc}

00024f04 <myhtml_tokenizer_state_bogus_comment@@Base>:
   24f04:	push	{r4, r5, r6, lr}
   24f08:	mov	r4, #2
   24f0c:	ldr	lr, [r1, #48]	; 0x30
   24f10:	ldr	ip, [sp, #16]
   24f14:	orr	lr, lr, #1024	; 0x400
   24f18:	cmp	r3, ip
   24f1c:	str	r4, [r1]
   24f20:	str	lr, [r1, #48]	; 0x30
   24f24:	bcs	24fbc <myhtml_tokenizer_state_bogus_comment@@Base+0xb8>
   24f28:	ldrb	lr, [r2, r3]
   24f2c:	add	r2, r2, r3
   24f30:	cmp	lr, #62	; 0x3e
   24f34:	movne	r4, r3
   24f38:	bne	24f4c <myhtml_tokenizer_state_bogus_comment@@Base+0x48>
   24f3c:	b	24f60 <myhtml_tokenizer_state_bogus_comment@@Base+0x5c>
   24f40:	ldrb	r3, [r2, #1]!
   24f44:	cmp	r3, #62	; 0x3e
   24f48:	beq	24f64 <myhtml_tokenizer_state_bogus_comment@@Base+0x60>
   24f4c:	add	r4, r4, #1
   24f50:	cmp	ip, r4
   24f54:	bne	24f40 <myhtml_tokenizer_state_bogus_comment@@Base+0x3c>
   24f58:	mov	r0, r4
   24f5c:	pop	{r4, r5, r6, pc}
   24f60:	mov	r4, r3
   24f64:	mov	r2, r1
   24f68:	ldr	r3, [r0, #192]	; 0xc0
   24f6c:	ldr	r1, [r1, #24]
   24f70:	mov	r5, r0
   24f74:	ldr	r0, [r2, #32]
   24f78:	sub	r1, r3, r1
   24f7c:	add	r1, r1, r4
   24f80:	sub	r3, r3, r0
   24f84:	add	r4, r4, #1
   24f88:	add	r3, r3, r4
   24f8c:	str	r1, [r2, #28]
   24f90:	str	r3, [r2, #36]	; 0x24
   24f94:	mov	r1, r4
   24f98:	mov	r0, r5
   24f9c:	bl	10028 <myhtml_queue_add@plt>
   24fa0:	cmp	r0, #0
   24fa4:	movne	r3, #69	; 0x45
   24fa8:	movne	r4, #0
   24fac:	streq	r0, [r5, #160]	; 0xa0
   24fb0:	strne	r3, [r5, #160]	; 0xa0
   24fb4:	mov	r0, r4
   24fb8:	pop	{r4, r5, r6, pc}
   24fbc:	mov	r4, r3
   24fc0:	b	24f58 <myhtml_tokenizer_state_bogus_comment@@Base+0x54>

00024fc4 <myhtml_tokenizer_state_cdata_section@@Base>:
   24fc4:	ldr	ip, [r1, #48]	; 0x30
   24fc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24fcc:	tst	ip, #256	; 0x100
   24fd0:	ldr	r6, [sp, #32]
   24fd4:	ldreq	ip, [r1, #48]	; 0x30
   24fd8:	mov	r4, r3
   24fdc:	orreq	ip, ip, #256	; 0x100
   24fe0:	streq	ip, [r1, #48]	; 0x30
   24fe4:	cmp	r3, r6
   24fe8:	bcs	25078 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>
   24fec:	mov	r8, r0
   24ff0:	mov	r7, r1
   24ff4:	add	r2, r2, r3
   24ff8:	mov	r9, #2
   24ffc:	b	25010 <myhtml_tokenizer_state_cdata_section@@Base+0x4c>
   25000:	add	r4, r4, #1
   25004:	cmp	r6, r4
   25008:	mov	r2, r5
   2500c:	beq	25078 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>
   25010:	ldrb	r3, [r2]
   25014:	add	r5, r2, #1
   25018:	cmp	r3, #62	; 0x3e
   2501c:	bne	25000 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   25020:	cmp	r4, #1
   25024:	sub	r0, r2, #2
   25028:	bls	25080 <myhtml_tokenizer_state_cdata_section@@Base+0xbc>
   2502c:	ldrb	r3, [r0]
   25030:	cmp	r3, #93	; 0x5d
   25034:	bne	25000 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   25038:	ldrb	r3, [r0, #1]
   2503c:	cmp	r3, #93	; 0x5d
   25040:	bne	25000 <myhtml_tokenizer_state_cdata_section@@Base+0x3c>
   25044:	ldr	r1, [r8, #192]	; 0xc0
   25048:	ldr	r2, [r7, #24]
   2504c:	sub	r3, r1, #2
   25050:	sub	r3, r3, r2
   25054:	add	r3, r3, r4
   25058:	cmp	r3, #0
   2505c:	add	r4, r4, #1
   25060:	addeq	r1, r1, r4
   25064:	str	r3, [r7, #28]
   25068:	streq	r1, [r7, #24]
   2506c:	bne	2509c <myhtml_tokenizer_state_cdata_section@@Base+0xd8>
   25070:	mov	r3, #0
   25074:	str	r3, [r8, #160]	; 0xa0
   25078:	mov	r0, r4
   2507c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25080:	ldr	r1, [r8, #192]	; 0xc0
   25084:	mov	r2, r9
   25088:	sub	r1, r1, #2
   2508c:	add	r1, r1, r4
   25090:	mov	r0, r8
   25094:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25098:	b	2502c <myhtml_tokenizer_state_cdata_section@@Base+0x68>
   2509c:	ldr	r3, [r7, #32]
   250a0:	mov	r2, r7
   250a4:	sub	r3, r1, r3
   250a8:	add	r3, r3, r4
   250ac:	str	r3, [r7, #36]	; 0x24
   250b0:	mov	r1, r4
   250b4:	mov	r0, r8
   250b8:	bl	10028 <myhtml_queue_add@plt>
   250bc:	cmp	r0, #0
   250c0:	beq	25070 <myhtml_tokenizer_state_cdata_section@@Base+0xac>
   250c4:	mov	r3, #69	; 0x45
   250c8:	str	r3, [r8, #160]	; 0xa0
   250cc:	mov	r4, #0
   250d0:	b	25078 <myhtml_tokenizer_state_cdata_section@@Base+0xb4>

000250d4 <myhtml_tokenizer_state_rcdata@@Base>:
   250d4:	push	{r4, r5, r6, r7, r8, lr}
   250d8:	mov	r8, r1
   250dc:	ldr	r1, [r0, #60]	; 0x3c
   250e0:	mov	r7, r0
   250e4:	cmp	r1, #0
   250e8:	mov	r5, r2
   250ec:	mov	r4, r3
   250f0:	ldr	r6, [sp, #24]
   250f4:	beq	25154 <myhtml_tokenizer_state_rcdata@@Base+0x80>
   250f8:	cmp	r4, r6
   250fc:	bcs	25198 <myhtml_tokenizer_state_rcdata@@Base+0xc4>
   25100:	ldrb	r3, [r5, r4]
   25104:	add	r2, r5, r4
   25108:	cmp	r3, #60	; 0x3c
   2510c:	movne	r0, r4
   25110:	bne	25124 <myhtml_tokenizer_state_rcdata@@Base+0x50>
   25114:	b	25134 <myhtml_tokenizer_state_rcdata@@Base+0x60>
   25118:	ldrb	r3, [r2, #1]!
   2511c:	cmp	r3, #60	; 0x3c
   25120:	beq	25138 <myhtml_tokenizer_state_rcdata@@Base+0x64>
   25124:	add	r0, r0, #1
   25128:	cmp	r6, r0
   2512c:	bne	25118 <myhtml_tokenizer_state_rcdata@@Base+0x44>
   25130:	pop	{r4, r5, r6, r7, r8, pc}
   25134:	mov	r0, r4
   25138:	ldr	r3, [r7, #192]	; 0xc0
   2513c:	mov	r2, #10
   25140:	add	r3, r3, r0
   25144:	str	r3, [r8, #32]
   25148:	add	r0, r0, #1
   2514c:	str	r2, [r7, #160]	; 0xa0
   25150:	pop	{r4, r5, r6, r7, r8, pc}
   25154:	ldr	r3, [r0, #192]	; 0xc0
   25158:	ldr	r0, [r0, #68]	; 0x44
   2515c:	add	r3, r3, r4
   25160:	str	r3, [r8, #24]
   25164:	bl	fcec <mythread_queue_get_prev_node@plt>
   25168:	cmp	r0, #0
   2516c:	beq	25184 <myhtml_tokenizer_state_rcdata@@Base+0xb0>
   25170:	ldr	r3, [r0, #4]
   25174:	cmp	r3, #0
   25178:	ldrne	r3, [r3]
   2517c:	strne	r3, [r7, #60]	; 0x3c
   25180:	bne	250f8 <myhtml_tokenizer_state_rcdata@@Base+0x24>
   25184:	ldr	r3, [r7, #88]	; 0x58
   25188:	cmp	r3, #0
   2518c:	ldrne	r3, [r3, #4]
   25190:	strne	r3, [r7, #60]	; 0x3c
   25194:	b	250f8 <myhtml_tokenizer_state_rcdata@@Base+0x24>
   25198:	mov	r0, r4
   2519c:	pop	{r4, r5, r6, r7, r8, pc}

000251a0 <myhtml_tokenizer_state_rawtext@@Base>:
   251a0:	push	{r4, r5, r6, r7, r8, lr}
   251a4:	mov	r8, r1
   251a8:	ldr	r1, [r0, #60]	; 0x3c
   251ac:	mov	r7, r0
   251b0:	cmp	r1, #0
   251b4:	mov	r5, r2
   251b8:	mov	r4, r3
   251bc:	ldr	r6, [sp, #24]
   251c0:	beq	25220 <myhtml_tokenizer_state_rawtext@@Base+0x80>
   251c4:	cmp	r4, r6
   251c8:	bcs	25264 <myhtml_tokenizer_state_rawtext@@Base+0xc4>
   251cc:	ldrb	r3, [r5, r4]
   251d0:	add	r2, r5, r4
   251d4:	cmp	r3, #60	; 0x3c
   251d8:	movne	r0, r4
   251dc:	bne	251f0 <myhtml_tokenizer_state_rawtext@@Base+0x50>
   251e0:	b	25200 <myhtml_tokenizer_state_rawtext@@Base+0x60>
   251e4:	ldrb	r3, [r2, #1]!
   251e8:	cmp	r3, #60	; 0x3c
   251ec:	beq	25204 <myhtml_tokenizer_state_rawtext@@Base+0x64>
   251f0:	add	r0, r0, #1
   251f4:	cmp	r6, r0
   251f8:	bne	251e4 <myhtml_tokenizer_state_rawtext@@Base+0x44>
   251fc:	pop	{r4, r5, r6, r7, r8, pc}
   25200:	mov	r0, r4
   25204:	ldr	r3, [r7, #192]	; 0xc0
   25208:	mov	r2, #13
   2520c:	add	r3, r3, r0
   25210:	str	r3, [r8, #32]
   25214:	add	r0, r0, #1
   25218:	str	r2, [r7, #160]	; 0xa0
   2521c:	pop	{r4, r5, r6, r7, r8, pc}
   25220:	ldr	r3, [r0, #192]	; 0xc0
   25224:	ldr	r0, [r0, #68]	; 0x44
   25228:	add	r3, r3, r4
   2522c:	str	r3, [r8, #24]
   25230:	bl	fcec <mythread_queue_get_prev_node@plt>
   25234:	cmp	r0, #0
   25238:	beq	25250 <myhtml_tokenizer_state_rawtext@@Base+0xb0>
   2523c:	ldr	r3, [r0, #4]
   25240:	cmp	r3, #0
   25244:	ldrne	r3, [r3]
   25248:	strne	r3, [r7, #60]	; 0x3c
   2524c:	bne	251c4 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   25250:	ldr	r3, [r7, #88]	; 0x58
   25254:	cmp	r3, #0
   25258:	ldrne	r3, [r3, #4]
   2525c:	strne	r3, [r7, #60]	; 0x3c
   25260:	b	251c4 <myhtml_tokenizer_state_rawtext@@Base+0x24>
   25264:	mov	r0, r4
   25268:	pop	{r4, r5, r6, r7, r8, pc}

0002526c <myhtml_tokenizer_state_attribute_value_double_quoted@@Base>:
   2526c:	push	{r4, r5, r6, lr}
   25270:	ldr	r1, [sp, #16]
   25274:	cmp	r3, r1
   25278:	bcs	25308 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x9c>
   2527c:	ldrb	ip, [r2, r3]
   25280:	add	r2, r2, r3
   25284:	cmp	ip, #34	; 0x22
   25288:	movne	r4, r3
   2528c:	bne	252a0 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x34>
   25290:	b	252b4 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x48>
   25294:	ldrb	r3, [r2, #1]!
   25298:	cmp	r3, #34	; 0x22
   2529c:	beq	252b8 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x4c>
   252a0:	add	r4, r4, #1
   252a4:	cmp	r1, r4
   252a8:	bne	25294 <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x28>
   252ac:	mov	r0, r4
   252b0:	pop	{r4, r5, r6, pc}
   252b4:	mov	r4, r3
   252b8:	ldr	r1, [r0, #56]	; 0x38
   252bc:	ldr	r3, [r0, #192]	; 0xc0
   252c0:	ldr	r2, [r0, #8]
   252c4:	ldr	ip, [r1, #56]	; 0x38
   252c8:	mov	r5, r0
   252cc:	sub	r3, r3, ip
   252d0:	add	r3, r3, r4
   252d4:	str	r3, [r1, #60]	; 0x3c
   252d8:	mov	r0, r2
   252dc:	ldr	r1, [r2, #16]
   252e0:	bl	10904 <myhtml_token_attr_create@plt>
   252e4:	cmp	r0, #0
   252e8:	moveq	r3, #69	; 0x45
   252ec:	moveq	r4, r0
   252f0:	movne	r3, #41	; 0x29
   252f4:	addne	r4, r4, #1
   252f8:	str	r0, [r5, #56]	; 0x38
   252fc:	str	r3, [r5, #160]	; 0xa0
   25300:	mov	r0, r4
   25304:	pop	{r4, r5, r6, pc}
   25308:	mov	r4, r3
   2530c:	b	252ac <myhtml_tokenizer_state_attribute_value_double_quoted@@Base+0x40>

00025310 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base>:
   25310:	push	{r4, r5, r6, lr}
   25314:	ldr	r1, [sp, #16]
   25318:	cmp	r3, r1
   2531c:	bcs	253ac <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x9c>
   25320:	ldrb	ip, [r2, r3]
   25324:	add	r2, r2, r3
   25328:	cmp	ip, #39	; 0x27
   2532c:	movne	r4, r3
   25330:	bne	25344 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x34>
   25334:	b	25358 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x48>
   25338:	ldrb	r3, [r2, #1]!
   2533c:	cmp	r3, #39	; 0x27
   25340:	beq	2535c <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x4c>
   25344:	add	r4, r4, #1
   25348:	cmp	r1, r4
   2534c:	bne	25338 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x28>
   25350:	mov	r0, r4
   25354:	pop	{r4, r5, r6, pc}
   25358:	mov	r4, r3
   2535c:	ldr	r1, [r0, #56]	; 0x38
   25360:	ldr	r3, [r0, #192]	; 0xc0
   25364:	ldr	r2, [r0, #8]
   25368:	ldr	ip, [r1, #56]	; 0x38
   2536c:	mov	r5, r0
   25370:	sub	r3, r3, ip
   25374:	add	r3, r3, r4
   25378:	str	r3, [r1, #60]	; 0x3c
   2537c:	mov	r0, r2
   25380:	ldr	r1, [r2, #16]
   25384:	bl	10904 <myhtml_token_attr_create@plt>
   25388:	cmp	r0, #0
   2538c:	moveq	r3, #69	; 0x45
   25390:	moveq	r4, r0
   25394:	movne	r3, #41	; 0x29
   25398:	addne	r4, r4, #1
   2539c:	str	r0, [r5, #56]	; 0x38
   253a0:	str	r3, [r5, #160]	; 0xa0
   253a4:	mov	r0, r4
   253a8:	pop	{r4, r5, r6, pc}
   253ac:	mov	r4, r3
   253b0:	b	25350 <myhtml_tokenizer_state_attribute_value_single_quoted@@Base+0x40>

000253b4 <myhtml_tokenizer_state_comment_start_dash@@Base>:
   253b4:	mov	ip, #2
   253b8:	push	{r4, r5, r6, lr}
   253bc:	mov	r5, r0
   253c0:	str	ip, [r1]
   253c4:	ldrb	ip, [r2, r3]
   253c8:	cmp	ip, #45	; 0x2d
   253cc:	moveq	r1, #49	; 0x31
   253d0:	streq	r1, [r0, #160]	; 0xa0
   253d4:	beq	253e8 <myhtml_tokenizer_state_comment_start_dash@@Base+0x34>
   253d8:	cmp	ip, #62	; 0x3e
   253dc:	movne	r1, #47	; 0x2f
   253e0:	strne	r1, [r0, #160]	; 0xa0
   253e4:	beq	253f4 <myhtml_tokenizer_state_comment_start_dash@@Base+0x40>
   253e8:	add	r4, r3, #1
   253ec:	mov	r0, r4
   253f0:	pop	{r4, r5, r6, pc}
   253f4:	mov	r2, r1
   253f8:	ldr	r1, [r0, #192]	; 0xc0
   253fc:	add	r4, r3, #1
   25400:	ldr	ip, [r2, #32]
   25404:	add	r3, r4, r1
   25408:	sub	r3, r3, ip
   2540c:	mov	r6, #0
   25410:	str	r3, [r2, #36]	; 0x24
   25414:	mov	r1, r4
   25418:	str	r6, [r2, #28]
   2541c:	bl	10028 <myhtml_queue_add@plt>
   25420:	cmp	r0, #0
   25424:	movne	r3, #69	; 0x45
   25428:	movne	r4, r6
   2542c:	strne	r3, [r5, #160]	; 0xa0
   25430:	streq	r0, [r5, #160]	; 0xa0
   25434:	b	253ec <myhtml_tokenizer_state_comment_start_dash@@Base+0x38>

00025438 <myhtml_tokenizer_state_comment_end@@Base>:
   25438:	push	{r4, r5, r6, lr}
   2543c:	ldrb	ip, [r2, r3]
   25440:	cmp	ip, #62	; 0x3e
   25444:	beq	25474 <myhtml_tokenizer_state_comment_end@@Base+0x3c>
   25448:	cmp	ip, #33	; 0x21
   2544c:	moveq	r2, #50	; 0x32
   25450:	addeq	r4, r3, #1
   25454:	streq	r2, [r0, #160]	; 0xa0
   25458:	beq	2546c <myhtml_tokenizer_state_comment_end@@Base+0x34>
   2545c:	cmp	ip, #45	; 0x2d
   25460:	add	r4, r3, #1
   25464:	movne	r3, #47	; 0x2f
   25468:	strne	r3, [r0, #160]	; 0xa0
   2546c:	mov	r0, r4
   25470:	pop	{r4, r5, r6, pc}
   25474:	ldr	ip, [r0, #192]	; 0xc0
   25478:	ldr	r2, [r1, #24]
   2547c:	add	r4, r3, #1
   25480:	sub	r2, ip, r2
   25484:	add	r2, r2, r3
   25488:	cmp	r2, #1
   2548c:	str	r2, [r1, #28]
   25490:	subhi	r2, r2, #2
   25494:	movls	r2, #0
   25498:	str	r2, [r1, #28]
   2549c:	mov	r2, r1
   254a0:	ldr	r1, [r1, #32]
   254a4:	mov	r5, r0
   254a8:	sub	ip, ip, r1
   254ac:	add	ip, ip, r4
   254b0:	mov	r1, r4
   254b4:	str	ip, [r2, #36]	; 0x24
   254b8:	bl	10028 <myhtml_queue_add@plt>
   254bc:	cmp	r0, #0
   254c0:	movne	r3, #69	; 0x45
   254c4:	movne	r4, #0
   254c8:	streq	r0, [r5, #160]	; 0xa0
   254cc:	strne	r3, [r5, #160]	; 0xa0
   254d0:	mov	r0, r4
   254d4:	pop	{r4, r5, r6, pc}

000254d8 <myhtml_tokenizer_state_comment_end_bang@@Base>:
   254d8:	push	{r4, r5, r6, r7, r8, lr}
   254dc:	mov	r5, r0
   254e0:	ldrb	ip, [r2, r3]
   254e4:	cmp	ip, #62	; 0x3e
   254e8:	beq	25510 <myhtml_tokenizer_state_comment_end_bang@@Base+0x38>
   254ec:	cmp	ip, #45	; 0x2d
   254f0:	addne	r4, r3, #1
   254f4:	moveq	r1, #48	; 0x30
   254f8:	addeq	r4, r3, #1
   254fc:	movne	r3, #47	; 0x2f
   25500:	streq	r1, [r0, #160]	; 0xa0
   25504:	strne	r3, [r0, #160]	; 0xa0
   25508:	mov	r0, r4
   2550c:	pop	{r4, r5, r6, r7, r8, pc}
   25510:	mov	r2, r1
   25514:	ldr	r1, [r0, #192]	; 0xc0
   25518:	ldr	r6, [r2, #24]
   2551c:	add	lr, r3, r1
   25520:	sub	ip, lr, #3
   25524:	cmp	ip, r6
   25528:	bcc	25574 <myhtml_tokenizer_state_comment_end_bang@@Base+0x9c>
   2552c:	ldr	r7, [r2, #32]
   25530:	mvn	ip, #2
   25534:	add	r4, r3, #1
   25538:	sub	r1, r1, r7
   2553c:	sub	ip, ip, r6
   25540:	add	r1, r1, r4
   25544:	add	ip, ip, lr
   25548:	str	r1, [r2, #36]	; 0x24
   2554c:	str	ip, [r2, #28]
   25550:	mov	r1, r4
   25554:	bl	10028 <myhtml_queue_add@plt>
   25558:	cmp	r0, #0
   2555c:	beq	255a0 <myhtml_tokenizer_state_comment_end_bang@@Base+0xc8>
   25560:	mov	r3, #69	; 0x45
   25564:	mov	r4, #0
   25568:	str	r3, [r5, #160]	; 0xa0
   2556c:	mov	r0, r4
   25570:	pop	{r4, r5, r6, r7, r8, pc}
   25574:	ldr	ip, [r2, #32]
   25578:	add	r4, r3, #1
   2557c:	sub	r1, r1, ip
   25580:	add	r1, r1, r4
   25584:	mov	r3, #0
   25588:	str	r1, [r2, #36]	; 0x24
   2558c:	str	r3, [r2, #28]
   25590:	mov	r1, r4
   25594:	bl	10028 <myhtml_queue_add@plt>
   25598:	cmp	r0, #0
   2559c:	bne	25560 <myhtml_tokenizer_state_comment_end_bang@@Base+0x88>
   255a0:	mov	r3, #0
   255a4:	str	r3, [r5, #160]	; 0xa0
   255a8:	mov	r0, r4
   255ac:	pop	{r4, r5, r6, r7, r8, pc}

000255b0 <myhtml_tokenizer_state_markup_declaration_open@@Base>:
   255b0:	push	{r4, r5, r6, r7, r8, lr}
   255b4:	ldr	r2, [r0, #192]	; 0xc0
   255b8:	ldr	lr, [r1, #24]
   255bc:	ldr	r4, [sp, #24]
   255c0:	add	r5, lr, #2
   255c4:	add	r2, r4, r2
   255c8:	cmp	r5, r2
   255cc:	bls	255e0 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x30>
   255d0:	ldr	r2, [r0, #76]	; 0x4c
   255d4:	mov	r0, r4
   255d8:	str	r3, [r2, #4]
   255dc:	pop	{r4, r5, r6, r7, r8, pc}
   255e0:	mov	r6, r1
   255e4:	mov	r2, #2
   255e8:	mov	r1, lr
   255ec:	mov	r7, r3
   255f0:	mov	r5, r0
   255f4:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   255f8:	ldrb	r3, [r0]
   255fc:	cmp	r3, #45	; 0x2d
   25600:	beq	2570c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x15c>
   25604:	ldr	r1, [r6, #24]
   25608:	ldr	r3, [r5, #192]	; 0xc0
   2560c:	add	r2, r1, #7
   25610:	add	r3, r4, r3
   25614:	cmp	r2, r3
   25618:	bls	2562c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x7c>
   2561c:	ldr	r3, [r5, #76]	; 0x4c
   25620:	mov	r0, r4
   25624:	str	r7, [r3, #4]
   25628:	pop	{r4, r5, r6, r7, r8, pc}
   2562c:	mov	r2, #7
   25630:	mov	r0, r5
   25634:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25638:	ldr	r1, [pc, #296]	; 25768 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1b8>
   2563c:	mov	r2, #7
   25640:	add	r1, pc, r1
   25644:	mov	r4, r0
   25648:	bl	102a4 <mycore_strncasecmp@plt>
   2564c:	cmp	r0, #0
   25650:	beq	25738 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x188>
   25654:	ldr	r1, [pc, #272]	; 2576c <myhtml_tokenizer_state_markup_declaration_open@@Base+0x1bc>
   25658:	mov	r0, r4
   2565c:	mov	r2, #7
   25660:	add	r1, pc, r1
   25664:	bl	10f94 <strncmp@plt>
   25668:	subs	r8, r0, #0
   2566c:	bne	256f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   25670:	ldr	r3, [r5, #68]	; 0x44
   25674:	ldr	r3, [r3, #8]
   25678:	cmp	r3, #0
   2567c:	beq	256f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   25680:	ldr	r1, [r3, #4]
   25684:	cmp	r1, #0
   25688:	beq	256f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   2568c:	mov	r0, r5
   25690:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   25694:	mov	r0, r5
   25698:	bl	10d48 <myhtml_tree_adjusted_current_node@plt>
   2569c:	cmp	r0, #0
   256a0:	beq	256f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   256a4:	ldr	r3, [r0, #8]
   256a8:	cmp	r3, #1
   256ac:	beq	256f4 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x144>
   256b0:	ldr	r0, [r5, #76]	; 0x4c
   256b4:	ldr	r3, [r6, #48]	; 0x30
   256b8:	ldr	r2, [r6, #24]
   256bc:	ldr	r1, [r6, #48]	; 0x30
   256c0:	ldr	r4, [r0, #12]
   256c4:	and	r3, r3, #8
   256c8:	eor	r3, r3, r1
   256cc:	add	r2, r2, #7
   256d0:	mov	r0, #67	; 0x43
   256d4:	mov	r1, #1
   256d8:	str	r0, [r5, #160]	; 0xa0
   256dc:	sub	r0, r2, r4
   256e0:	str	r3, [r6, #48]	; 0x30
   256e4:	str	r8, [r6, #28]
   256e8:	str	r2, [r6, #24]
   256ec:	str	r1, [r6]
   256f0:	pop	{r4, r5, r6, r7, r8, pc}
   256f4:	mov	r2, #0
   256f8:	mov	r3, #43	; 0x2b
   256fc:	str	r2, [r6, #28]
   25700:	mov	r0, r7
   25704:	str	r3, [r5, #160]	; 0xa0
   25708:	pop	{r4, r5, r6, r7, r8, pc}
   2570c:	ldrb	r3, [r0, #1]
   25710:	cmp	r3, #45	; 0x2d
   25714:	bne	25604 <myhtml_tokenizer_state_markup_declaration_open@@Base+0x54>
   25718:	ldr	r2, [r5, #192]	; 0xc0
   2571c:	add	r0, r7, #2
   25720:	add	r2, r2, r0
   25724:	mov	r1, #0
   25728:	str	r3, [r5, #160]	; 0xa0
   2572c:	str	r2, [r6, #24]
   25730:	str	r1, [r6, #28]
   25734:	pop	{r4, r5, r6, r7, r8, pc}
   25738:	ldr	r3, [r5, #76]	; 0x4c
   2573c:	ldr	r0, [r6, #24]
   25740:	mov	r1, #51	; 0x33
   25744:	ldr	ip, [r3, #12]
   25748:	add	r4, r0, #7
   2574c:	mov	r2, #7
   25750:	mov	r3, #3
   25754:	str	r1, [r5, #160]	; 0xa0
   25758:	sub	r0, r4, ip
   2575c:	str	r2, [r6, #28]
   25760:	str	r3, [r6]
   25764:	pop	{r4, r5, r6, r7, r8, pc}
   25768:	andeq	r6, sp, ip, ror r7
   2576c:	andeq	r6, sp, r4, ror #14

00025770 <myhtml_tokenizer_state_comment_start@@Base>:
   25770:	mov	ip, #2
   25774:	push	{r4, r5, r6, lr}
   25778:	mov	r5, r0
   2577c:	str	ip, [r1]
   25780:	ldrb	ip, [r2, r3]
   25784:	cmp	ip, #45	; 0x2d
   25788:	moveq	r1, #46	; 0x2e
   2578c:	streq	r1, [r0, #160]	; 0xa0
   25790:	beq	257a4 <myhtml_tokenizer_state_comment_start@@Base+0x34>
   25794:	cmp	ip, #62	; 0x3e
   25798:	movne	r1, #47	; 0x2f
   2579c:	strne	r1, [r0, #160]	; 0xa0
   257a0:	beq	257b0 <myhtml_tokenizer_state_comment_start@@Base+0x40>
   257a4:	add	r4, r3, #1
   257a8:	mov	r0, r4
   257ac:	pop	{r4, r5, r6, pc}
   257b0:	mov	r2, r1
   257b4:	ldr	r1, [r0, #192]	; 0xc0
   257b8:	add	r4, r3, #1
   257bc:	ldr	ip, [r2, #32]
   257c0:	add	r3, r4, r1
   257c4:	sub	r3, r3, ip
   257c8:	mov	r6, #0
   257cc:	str	r3, [r2, #36]	; 0x24
   257d0:	mov	r1, r4
   257d4:	str	r6, [r2, #28]
   257d8:	bl	10028 <myhtml_queue_add@plt>
   257dc:	cmp	r0, #0
   257e0:	movne	r3, #69	; 0x45
   257e4:	movne	r4, r6
   257e8:	strne	r3, [r5, #160]	; 0xa0
   257ec:	streq	r0, [r5, #160]	; 0xa0
   257f0:	b	257a8 <myhtml_tokenizer_state_comment_start@@Base+0x38>

000257f4 <myhtml_tokenizer_set_first_settings@@Base>:
   257f4:	push	{r4, lr}
   257f8:	mov	r4, r0
   257fc:	ldr	r0, [r0, #24]
   25800:	bl	10190 <mythread_queue_get_current_node@plt>
   25804:	str	r0, [r4, #68]	; 0x44
   25808:	bl	10d78 <mythread_queue_node_clean@plt>
   2580c:	ldr	r3, [r4, #68]	; 0x44
   25810:	ldr	r0, [r4, #8]
   25814:	str	r4, [r3]
   25818:	ldr	r1, [r0, #12]
   2581c:	bl	10a0c <myhtml_token_node_create@plt>
   25820:	cmp	r0, #0
   25824:	str	r0, [r4, #64]	; 0x40
   25828:	ldrne	r3, [r4, #76]	; 0x4c
   2582c:	movne	r0, #0
   25830:	strne	r3, [r4, #80]	; 0x50
   25834:	moveq	r0, #2
   25838:	pop	{r4, pc}

0002583c <myhtml_tokenizer_fragment_init@@Base>:
   2583c:	push	{r4, r5, r6, r7, r8, lr}
   25840:	mov	r7, r2
   25844:	mov	r6, r1
   25848:	mov	r4, r0
   2584c:	bl	ffe0 <myhtml_tree_node_create@plt>
   25850:	cmp	r7, #1
   25854:	str	r0, [r4, #88]	; 0x58
   25858:	mov	r5, r0
   2585c:	stmib	r0, {r6, r7}
   25860:	beq	258c4 <myhtml_tokenizer_fragment_init@@Base+0x88>
   25864:	ldr	r3, [r4, #8]
   25868:	mov	r0, r3
   2586c:	ldr	r1, [r3, #12]
   25870:	bl	10a0c <myhtml_token_node_create@plt>
   25874:	ldr	r3, [r4, #88]	; 0x58
   25878:	str	r0, [r5, #32]
   2587c:	ldr	r0, [r3, #32]
   25880:	cmp	r0, #0
   25884:	beq	25910 <myhtml_tokenizer_fragment_init@@Base+0xd4>
   25888:	bl	10550 <myhtml_token_set_done@plt>
   2588c:	ldr	r3, [r4, #88]	; 0x58
   25890:	mov	r2, #1
   25894:	mov	r1, #0
   25898:	ldr	r3, [r3, #32]
   2589c:	mov	r0, r4
   258a0:	str	r3, [r4, #156]	; 0x9c
   258a4:	bl	fbfc <myhtml_tree_node_insert_root@plt>
   258a8:	cmp	r6, #128	; 0x80
   258ac:	mov	r5, r0
   258b0:	beq	25900 <myhtml_tokenizer_fragment_init@@Base+0xc4>
   258b4:	mov	r0, r4
   258b8:	bl	10730 <myhtml_tree_reset_insertion_mode_appropriately@plt>
   258bc:	mov	r0, r5
   258c0:	pop	{r4, r5, r6, r7, r8, pc}
   258c4:	cmp	r6, #93	; 0x5d
   258c8:	beq	258e8 <myhtml_tokenizer_fragment_init@@Base+0xac>
   258cc:	mov	r1, r6
   258d0:	ldr	r0, [r4, #28]
   258d4:	bl	10a24 <myhtml_tag_get_by_id@plt>
   258d8:	ldr	r5, [r4, #88]	; 0x58
   258dc:	ldr	r3, [r0, #12]
   258e0:	str	r3, [r4, #160]	; 0xa0
   258e4:	b	25864 <myhtml_tokenizer_fragment_init@@Base+0x28>
   258e8:	ldr	r3, [r4, #180]	; 0xb4
   258ec:	ands	r3, r3, #1
   258f0:	movne	r3, #4
   258f4:	strne	r3, [r4, #160]	; 0xa0
   258f8:	bne	25864 <myhtml_tokenizer_fragment_init@@Base+0x28>
   258fc:	b	258e0 <myhtml_tokenizer_fragment_init@@Base+0xa4>
   25900:	mov	r1, #17
   25904:	mov	r0, r4
   25908:	bl	ffb0 <myhtml_tree_template_insertion_append@plt>
   2590c:	b	258b4 <myhtml_tokenizer_fragment_init@@Base+0x78>
   25910:	mov	r5, r0
   25914:	b	258bc <myhtml_tokenizer_fragment_init@@Base+0x80>

00025918 <myhtml_tokenizer_wait@@Base>:
   25918:	ldr	r3, [r0]
   2591c:	ldr	r3, [r3]
   25920:	cmp	r3, #0
   25924:	bxeq	lr
   25928:	ldr	r1, [r0, #20]
   2592c:	mov	r0, r3
   25930:	b	1097c <mythread_queue_list_entry_wait_for_done@plt>

00025934 <myhtml_tokenizer_post@@Base>:
   25934:	ldr	r3, [r0]
   25938:	ldr	r2, [r3]
   2593c:	cmp	r2, #0
   25940:	beq	25974 <myhtml_tokenizer_post@@Base+0x40>
   25944:	push	{r4, lr}
   25948:	mov	r4, r0
   2594c:	mov	r1, #0
   25950:	mov	r0, r2
   25954:	bl	104c0 <mythread_resume@plt>
   25958:	ldr	r3, [r4]
   2595c:	ldr	r0, [r3, #4]
   25960:	cmp	r0, #0
   25964:	popeq	{r4, pc}
   25968:	mov	r1, #0
   2596c:	pop	{r4, lr}
   25970:	b	104c0 <mythread_resume@plt>
   25974:	ldr	r0, [r3, #4]
   25978:	cmp	r0, #0
   2597c:	bxeq	lr
   25980:	mov	r1, #0
   25984:	b	104c0 <mythread_resume@plt>

00025988 <myhtml_tokenizer_chunk_process@@Base>:
   25988:	push	{r4, r5, r6, r7, r8, lr}
   2598c:	mov	r3, r2
   25990:	ldr	r6, [r0]
   25994:	mov	r4, r0
   25998:	sub	sp, sp, #16
   2599c:	mov	r7, r1
   259a0:	mov	r5, r2
   259a4:	mov	r2, r1
   259a8:	ldr	r1, [r0, #72]	; 0x48
   259ac:	ldr	r0, [r0, #76]	; 0x4c
   259b0:	ldr	r8, [r6, #24]
   259b4:	bl	10094 <mycore_incoming_buffer_add@plt>
   259b8:	ldr	r3, [r6, #32]
   259bc:	tst	r3, #1
   259c0:	ldrne	r3, [r4, #180]	; 0xb4
   259c4:	orrne	r3, r3, #16
   259c8:	strne	r3, [r4, #180]	; 0xb4
   259cc:	ldr	r3, [r4, #180]	; 0xb4
   259d0:	tst	r3, #16
   259d4:	str	r0, [r4, #76]	; 0x4c
   259d8:	bne	259f0 <myhtml_tokenizer_chunk_process@@Base+0x68>
   259dc:	ldr	r3, [r4, #20]
   259e0:	cmp	r3, #0
   259e4:	beq	25a4c <myhtml_tokenizer_chunk_process@@Base+0xc4>
   259e8:	mov	r0, r4
   259ec:	bl	102b0 <myhtml_tokenizer_post@plt>
   259f0:	ldr	r3, [r4, #68]	; 0x44
   259f4:	cmp	r3, #0
   259f8:	beq	25a8c <myhtml_tokenizer_chunk_process@@Base+0x104>
   259fc:	cmp	r5, #0
   25a00:	movne	r3, #0
   25a04:	beq	25a30 <myhtml_tokenizer_chunk_process@@Base+0xa8>
   25a08:	ldr	r2, [r4, #160]	; 0xa0
   25a0c:	ldr	r1, [r4, #64]	; 0x40
   25a10:	mov	r0, r4
   25a14:	str	r5, [sp]
   25a18:	ldr	r6, [r8, r2, lsl #2]
   25a1c:	mov	r2, r7
   25a20:	blx	r6
   25a24:	cmp	r5, r0
   25a28:	mov	r3, r0
   25a2c:	bhi	25a08 <myhtml_tokenizer_chunk_process@@Base+0x80>
   25a30:	ldr	r3, [r4, #192]	; 0xc0
   25a34:	mov	r2, #0
   25a38:	add	r5, r3, r5
   25a3c:	str	r5, [r4, #192]	; 0xc0
   25a40:	mov	r0, r2
   25a44:	add	sp, sp, #16
   25a48:	pop	{r4, r5, r6, r7, r8, pc}
   25a4c:	mov	r0, r6
   25a50:	add	r1, sp, #16
   25a54:	ldr	r2, [r0], #8
   25a58:	str	r3, [r1, #-4]!
   25a5c:	ldr	r3, [r4, #24]
   25a60:	ldr	r2, [r2, #16]
   25a64:	str	r1, [sp, #4]
   25a68:	ldr	r1, [r6, #20]
   25a6c:	str	r1, [sp]
   25a70:	mov	r1, #2
   25a74:	bl	10184 <mythread_queue_list_entry_push@plt>
   25a78:	ldr	r2, [sp, #12]
   25a7c:	cmp	r2, #0
   25a80:	str	r0, [r4, #20]
   25a84:	beq	259e8 <myhtml_tokenizer_chunk_process@@Base+0x60>
   25a88:	b	25a40 <myhtml_tokenizer_chunk_process@@Base+0xb8>
   25a8c:	mov	r2, r5
   25a90:	mov	r1, r7
   25a94:	mov	r0, r4
   25a98:	bl	105f8 <myhtml_tokenizer_set_first_settings@plt>
   25a9c:	subs	r2, r0, #0
   25aa0:	beq	259fc <myhtml_tokenizer_chunk_process@@Base+0x74>
   25aa4:	b	25a40 <myhtml_tokenizer_chunk_process@@Base+0xb8>

00025aa8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base>:
   25aa8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25aac:	mov	sl, r0
   25ab0:	ldr	r0, [r0, #200]	; 0xc8
   25ab4:	mov	r5, r1
   25ab8:	mov	r7, r2
   25abc:	bl	1082c <myencoding_get_function_by_id@plt>
   25ac0:	ldr	fp, [sl, #148]	; 0x94
   25ac4:	cmp	fp, #0
   25ac8:	mov	r8, r0
   25acc:	beq	25ba8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x100>
   25ad0:	mov	r0, fp
   25ad4:	bl	10b80 <myhtml_stream_buffer_current_entry@plt>
   25ad8:	cmp	r7, #0
   25adc:	addne	r7, r5, r7
   25ae0:	addne	r9, fp, #12
   25ae4:	mov	r4, r0
   25ae8:	ldr	r6, [r0, #4]
   25aec:	beq	25ba0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xf8>
   25af0:	mov	r1, r9
   25af4:	ldrb	r0, [r5], #1
   25af8:	blx	r8
   25afc:	subs	ip, r0, #0
   25b00:	bne	25b68 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xc0>
   25b04:	ldr	r3, [r4, #4]
   25b08:	ldr	r1, [r4, #8]
   25b0c:	add	lr, r3, #4
   25b10:	cmp	lr, r1
   25b14:	mov	r0, sl
   25b18:	sub	r2, r3, r6
   25b1c:	bcc	25b4c <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xa4>
   25b20:	ldr	r1, [r4]
   25b24:	str	ip, [sl, #200]	; 0xc8
   25b28:	add	r1, r1, r6
   25b2c:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   25b30:	mov	r1, #16384	; 0x4000
   25b34:	mov	r0, fp
   25b38:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   25b3c:	subs	r4, r0, #0
   25b40:	beq	25be0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x138>
   25b44:	ldr	r6, [r4, #4]
   25b48:	mov	r3, r6
   25b4c:	ldr	r1, [r4]
   25b50:	ldr	r0, [fp, #24]
   25b54:	add	r1, r1, r3
   25b58:	bl	10e8c <myencoding_codepoint_to_ascii_utf_8@plt>
   25b5c:	ldr	r3, [r4, #4]
   25b60:	add	r0, r3, r0
   25b64:	str	r0, [r4, #4]
   25b68:	cmp	r5, r7
   25b6c:	bne	25af0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x48>
   25b70:	ldr	r2, [r4, #4]
   25b74:	cmp	r6, r2
   25b78:	beq	25ba0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0xf8>
   25b7c:	ldr	r1, [r4]
   25b80:	mov	r4, #0
   25b84:	add	r1, r1, r6
   25b88:	sub	r2, r2, r6
   25b8c:	str	r4, [sl, #200]	; 0xc8
   25b90:	mov	r0, sl
   25b94:	bl	10430 <myhtml_tokenizer_chunk_process@plt>
   25b98:	mov	r0, r4
   25b9c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ba0:	mov	r0, #0
   25ba4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ba8:	bl	10e74 <myhtml_stream_buffer_create@plt>
   25bac:	cmp	r0, #0
   25bb0:	str	r0, [sl, #148]	; 0x94
   25bb4:	beq	25be8 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x140>
   25bb8:	mov	r1, #1024	; 0x400
   25bbc:	bl	10d6c <myhtml_stream_buffer_init@plt>
   25bc0:	cmp	r0, #0
   25bc4:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25bc8:	mov	r1, #16384	; 0x4000
   25bcc:	ldr	r0, [sl, #148]	; 0x94
   25bd0:	bl	10934 <myhtml_stream_buffer_add_entry@plt>
   25bd4:	cmp	r0, #0
   25bd8:	ldrne	fp, [sl, #148]	; 0x94
   25bdc:	bne	25ad0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x28>
   25be0:	ldr	r0, [pc, #8]	; 25bf0 <myhtml_tokenizer_chunk_with_stream_buffer@@Base+0x148>
   25be4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25be8:	mov	r0, #37632	; 0x9300
   25bec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25bf0:	andeq	r9, r0, r4, lsl #6

00025bf4 <myhtml_tokenizer_chunk@@Base>:
   25bf4:	ldr	r3, [r0, #204]	; 0xcc
   25bf8:	sub	r3, r3, #4
   25bfc:	cmp	r3, #1
   25c00:	bls	25c08 <myhtml_tokenizer_chunk@@Base+0x14>
   25c04:	b	10430 <myhtml_tokenizer_chunk_process@plt>
   25c08:	b	10b98 <myhtml_tokenizer_chunk_with_stream_buffer@plt>

00025c0c <myhtml_tokenizer_begin@@Base>:
   25c0c:	b	100c4 <myhtml_tokenizer_chunk@plt>

00025c10 <myhtml_tokenizer_pause@@Base>:
   25c10:	ldr	r3, [r0]
   25c14:	ldr	r2, [r3]
   25c18:	cmp	r2, #0
   25c1c:	beq	25c48 <myhtml_tokenizer_pause@@Base+0x38>
   25c20:	push	{r4, lr}
   25c24:	mov	r4, r0
   25c28:	mov	r0, r2
   25c2c:	bl	10ad8 <mythread_stop@plt>
   25c30:	ldr	r3, [r4]
   25c34:	ldr	r0, [r3, #4]
   25c38:	cmp	r0, #0
   25c3c:	popeq	{r4, pc}
   25c40:	pop	{r4, lr}
   25c44:	b	10ad8 <mythread_stop@plt>
   25c48:	ldr	r0, [r3, #4]
   25c4c:	cmp	r0, #0
   25c50:	bxeq	lr
   25c54:	b	10ad8 <mythread_stop@plt>

00025c58 <myhtml_tokenizer_end@@Base>:
   25c58:	ldr	r2, [r0, #76]	; 0x4c
   25c5c:	push	{r4, r5, r6, lr}
   25c60:	cmp	r2, #0
   25c64:	sub	sp, sp, #8
   25c68:	mov	r4, r0
   25c6c:	beq	25ca4 <myhtml_tokenizer_end@@Base+0x4c>
   25c70:	ldr	r1, [r0]
   25c74:	ldr	lr, [r0, #160]	; 0xa0
   25c78:	ldr	r3, [r2, #8]
   25c7c:	ldr	r5, [r1, #24]
   25c80:	ldr	ip, [r0, #192]	; 0xc0
   25c84:	add	lr, lr, #70	; 0x46
   25c88:	sub	ip, ip, r3
   25c8c:	ldr	r2, [r2]
   25c90:	ldr	r1, [r0, #64]	; 0x40
   25c94:	str	r3, [sp]
   25c98:	ldr	r5, [r5, lr, lsl #2]
   25c9c:	str	ip, [r0, #192]	; 0xc0
   25ca0:	blx	r5
   25ca4:	ldr	r3, [r4, #64]	; 0x40
   25ca8:	mov	r1, #251	; 0xfb
   25cac:	mov	r2, r3
   25cb0:	str	r1, [r3]
   25cb4:	mov	r0, r4
   25cb8:	mov	r1, #0
   25cbc:	bl	10028 <myhtml_queue_add@plt>
   25cc0:	cmp	r0, #0
   25cc4:	movne	r3, #2
   25cc8:	movne	r6, r3
   25ccc:	strne	r3, [r4, #196]	; 0xc4
   25cd0:	ldr	r3, [r4, #180]	; 0xb4
   25cd4:	ldreq	r6, [r4, #196]	; 0xc4
   25cd8:	ands	r5, r3, #16
   25cdc:	beq	25cf8 <myhtml_tokenizer_end@@Base+0xa0>
   25ce0:	ldr	r3, [r4, #180]	; 0xb4
   25ce4:	mov	r0, r6
   25ce8:	orr	r3, r3, #32
   25cec:	str	r3, [r4, #180]	; 0xb4
   25cf0:	add	sp, sp, #8
   25cf4:	pop	{r4, r5, r6, pc}
   25cf8:	ldr	r3, [r4]
   25cfc:	ldr	r1, [r4, #20]
   25d00:	ldr	r0, [r3]
   25d04:	bl	1097c <mythread_queue_list_entry_wait_for_done@plt>
   25d08:	ldr	r0, [r4]
   25d0c:	ldr	r3, [r4, #20]
   25d10:	mov	r1, #2
   25d14:	ldr	r2, [r0], #8
   25d18:	ldr	r2, [r2, #16]
   25d1c:	str	r5, [sp]
   25d20:	bl	fc08 <mythread_queue_list_entry_delete@plt>
   25d24:	ldr	r3, [r4]
   25d28:	ldr	r3, [r3]
   25d2c:	str	r0, [r4, #20]
   25d30:	ldr	r0, [r3, #16]
   25d34:	bl	105c8 <mythread_queue_list_get_count@plt>
   25d38:	cmp	r0, #0
   25d3c:	beq	25d5c <myhtml_tokenizer_end@@Base+0x104>
   25d40:	cmp	r6, #0
   25d44:	bne	25ce0 <myhtml_tokenizer_end@@Base+0x88>
   25d48:	ldr	r3, [r4]
   25d4c:	ldr	r0, [r3]
   25d50:	bl	10514 <mythread_check_status@plt>
   25d54:	mov	r6, r0
   25d58:	b	25ce0 <myhtml_tokenizer_end@@Base+0x88>
   25d5c:	mov	r0, r4
   25d60:	bl	105ec <myhtml_tokenizer_pause@plt>
   25d64:	b	25d40 <myhtml_tokenizer_end@@Base+0xe8>

00025d68 <myhtml_tokenizer_calc_current_namespace@@Base>:
   25d68:	ldr	r3, [r0, #184]	; 0xb8
   25d6c:	tst	r3, #1
   25d70:	bxne	lr
   25d74:	ldr	r3, [r0, #180]	; 0xb4
   25d78:	tst	r3, #16
   25d7c:	bne	25df8 <myhtml_tokenizer_calc_current_namespace@@Base+0x90>
   25d80:	ldr	r3, [r1]
   25d84:	cmp	r3, #124	; 0x7c
   25d88:	cmpne	r3, #218	; 0xda
   25d8c:	moveq	r2, #1
   25d90:	movne	r2, #0
   25d94:	cmp	r3, #54	; 0x36
   25d98:	orreq	r2, r2, #1
   25d9c:	cmp	r2, #0
   25da0:	bne	25e04 <myhtml_tokenizer_calc_current_namespace@@Base+0x9c>
   25da4:	ldr	r2, [r0, #156]	; 0x9c
   25da8:	cmp	r2, #0
   25dac:	bxeq	lr
   25db0:	ldr	r2, [r1, #48]	; 0x30
   25db4:	tst	r2, #1
   25db8:	bxne	lr
   25dbc:	push	{r4, r5, r6, lr}
   25dc0:	mov	r5, r1
   25dc4:	mov	r4, r0
   25dc8:	mov	r1, r3
   25dcc:	ldr	r0, [r0, #28]
   25dd0:	bl	10a24 <myhtml_tag_get_by_id@plt>
   25dd4:	ldr	r3, [r0, #12]
   25dd8:	cmp	r3, #0
   25ddc:	popeq	{r4, r5, r6, pc}
   25de0:	mov	r1, r5
   25de4:	mov	r0, r4
   25de8:	bl	fce0 <myhtml_tree_wait_for_last_done_token@plt>
   25dec:	ldr	r3, [r4, #164]	; 0xa4
   25df0:	str	r3, [r4, #160]	; 0xa0
   25df4:	pop	{r4, r5, r6, pc}
   25df8:	ldr	r3, [r0, #164]	; 0xa4
   25dfc:	str	r3, [r0, #160]	; 0xa0
   25e00:	bx	lr
   25e04:	str	r1, [r0, #156]	; 0x9c
   25e08:	bx	lr

00025e0c <myhtml_check_tag_parser@@Base>:
   25e0c:	ldr	ip, [r1, #28]
   25e10:	push	{r4, r5, r6, r7, r8, r9, lr}
   25e14:	cmp	ip, r3
   25e18:	sub	sp, sp, #12
   25e1c:	mov	r4, r1
   25e20:	mov	r8, r3
   25e24:	mov	r6, r0
   25e28:	mov	r9, r2
   25e2c:	ldr	r7, [r0, #28]
   25e30:	bls	25e6c <myhtml_check_tag_parser@@Base+0x60>
   25e34:	mov	r2, ip
   25e38:	ldr	r1, [r1, #24]
   25e3c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25e40:	ldr	r2, [r4, #28]
   25e44:	mov	r1, r0
   25e48:	mov	r0, r7
   25e4c:	bl	10b74 <myhtml_tag_get_by_name@plt>
   25e50:	mov	r5, r0
   25e54:	cmp	r5, #0
   25e58:	beq	25e94 <myhtml_check_tag_parser@@Base+0x88>
   25e5c:	ldr	r3, [r5]
   25e60:	str	r3, [r4]
   25e64:	add	sp, sp, #12
   25e68:	pop	{r4, r5, r6, r7, r8, r9, pc}
   25e6c:	ldr	r3, [r0, #192]	; 0xc0
   25e70:	ldr	r1, [r1, #24]
   25e74:	mov	r2, ip
   25e78:	sub	r1, r1, r3
   25e7c:	add	r1, r9, r1
   25e80:	mov	r0, r7
   25e84:	bl	10b74 <myhtml_tag_get_by_name@plt>
   25e88:	mov	r5, r0
   25e8c:	cmp	r5, #0
   25e90:	bne	25e5c <myhtml_check_tag_parser@@Base+0x50>
   25e94:	ldr	r2, [r4, #28]
   25e98:	cmp	r8, r2
   25e9c:	bcc	25ee4 <myhtml_check_tag_parser@@Base+0xd8>
   25ea0:	ldr	r3, [r6, #192]	; 0xc0
   25ea4:	ldr	r1, [r4, #24]
   25ea8:	mov	r0, #1
   25eac:	sub	r1, r1, r3
   25eb0:	add	r1, r9, r1
   25eb4:	str	r0, [sp]
   25eb8:	mov	r3, r5
   25ebc:	mov	r0, r7
   25ec0:	bl	10010 <myhtml_tag_add@plt>
   25ec4:	mov	r1, r0
   25ec8:	str	r0, [r4]
   25ecc:	mov	r3, #1
   25ed0:	mov	r0, r7
   25ed4:	mov	r2, r3
   25ed8:	add	sp, sp, #12
   25edc:	pop	{r4, r5, r6, r7, r8, r9, lr}
   25ee0:	b	ff98 <myhtml_tag_set_category@plt>
   25ee4:	ldr	r1, [r4, #24]
   25ee8:	mov	r0, r6
   25eec:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   25ef0:	mov	r1, #1
   25ef4:	ldr	r2, [r4, #28]
   25ef8:	mov	r3, r5
   25efc:	str	r1, [sp]
   25f00:	mov	r1, r0
   25f04:	mov	r0, r7
   25f08:	bl	10010 <myhtml_tag_add@plt>
   25f0c:	mov	r1, r0
   25f10:	str	r0, [r4]
   25f14:	b	25ecc <myhtml_check_tag_parser@@Base+0xc0>

00025f18 <myhtml_tokenizer_queue_create_text_node_if_need@@Base>:
   25f18:	push	{r4, r5, r6, lr}
   25f1c:	mov	r2, r1
   25f20:	ldr	r4, [r1]
   25f24:	cmp	r4, #0
   25f28:	bne	25f38 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x20>
   25f2c:	ldr	lr, [r1, #24]
   25f30:	cmp	r3, lr
   25f34:	bhi	25f40 <myhtml_tokenizer_queue_create_text_node_if_need@@Base+0x28>
   25f38:	mov	r0, r2
   25f3c:	pop	{r4, r5, r6, pc}
   25f40:	ldr	ip, [r1, #48]	; 0x30
   25f44:	ldr	r6, [sp, #16]
   25f48:	sub	r3, r3, lr
   25f4c:	ldr	r1, [r1, #32]
   25f50:	orr	ip, r6, ip
   25f54:	str	r3, [r2, #36]	; 0x24
   25f58:	str	r3, [r2, #28]
   25f5c:	mov	r3, #1
   25f60:	str	ip, [r2, #48]	; 0x30
   25f64:	str	lr, [r2, #32]
   25f68:	str	r3, [r2]
   25f6c:	mov	r5, r0
   25f70:	bl	10028 <myhtml_queue_add@plt>
   25f74:	cmp	r0, #0
   25f78:	movne	r2, r4
   25f7c:	ldreq	r2, [r5, #64]	; 0x40
   25f80:	mov	r0, r2
   25f84:	pop	{r4, r5, r6, pc}

00025f88 <myhtml_tokenizer_state_tag_open@@Base>:
   25f88:	push	{r4, r5, lr}
   25f8c:	mov	r4, r3
   25f90:	ldr	ip, [pc, #308]	; 260cc <myhtml_tokenizer_state_tag_open@@Base+0x144>
   25f94:	ldrb	r3, [r2, r3]
   25f98:	add	ip, pc, ip
   25f9c:	sub	sp, sp, #12
   25fa0:	mov	r5, r0
   25fa4:	ldrb	ip, [ip, r3]
   25fa8:	cmp	ip, #1
   25fac:	beq	26000 <myhtml_tokenizer_state_tag_open@@Base+0x78>
   25fb0:	cmp	r3, #33	; 0x21
   25fb4:	beq	26040 <myhtml_tokenizer_state_tag_open@@Base+0xb8>
   25fb8:	cmp	r3, #47	; 0x2f
   25fbc:	moveq	r3, #8
   25fc0:	addeq	r0, r4, #1
   25fc4:	streq	r3, [r5, #160]	; 0xa0
   25fc8:	beq	25ff8 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   25fcc:	cmp	r3, #63	; 0x3f
   25fd0:	beq	26080 <myhtml_tokenizer_state_tag_open@@Base+0xf8>
   25fd4:	ldr	r3, [r1, #48]	; 0x30
   25fd8:	ldr	r2, [r1, #48]	; 0x30
   25fdc:	and	r3, r3, #8
   25fe0:	mov	lr, r1
   25fe4:	mov	r0, r4
   25fe8:	eor	r3, r3, r2
   25fec:	mov	r2, #0
   25ff0:	str	r3, [r1, #48]	; 0x30
   25ff4:	str	r2, [r5, #160]	; 0xa0
   25ff8:	add	sp, sp, #12
   25ffc:	pop	{r4, r5, pc}
   26000:	ldr	r3, [r0, #192]	; 0xc0
   26004:	mov	ip, #512	; 0x200
   26008:	sub	r3, r3, #1
   2600c:	add	r3, r3, r4
   26010:	str	ip, [sp]
   26014:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26018:	cmp	r0, #0
   2601c:	beq	260bc <myhtml_tokenizer_state_tag_open@@Base+0x134>
   26020:	ldr	r3, [r5, #192]	; 0xc0
   26024:	mov	r2, #9
   26028:	add	r3, r3, r4
   2602c:	str	r3, [r0, #24]
   26030:	mov	r0, r4
   26034:	str	r2, [r5, #160]	; 0xa0
   26038:	add	sp, sp, #12
   2603c:	pop	{r4, r5, pc}
   26040:	ldr	r3, [r0, #192]	; 0xc0
   26044:	mov	ip, #512	; 0x200
   26048:	sub	r3, r3, #1
   2604c:	add	r3, r3, r4
   26050:	str	ip, [sp]
   26054:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26058:	subs	r2, r0, #0
   2605c:	beq	260bc <myhtml_tokenizer_state_tag_open@@Base+0x134>
   26060:	ldr	r3, [r5, #192]	; 0xc0
   26064:	add	r0, r4, #1
   26068:	add	r3, r3, r0
   2606c:	mov	r1, #44	; 0x2c
   26070:	str	r3, [r2, #24]
   26074:	str	r1, [r5, #160]	; 0xa0
   26078:	add	sp, sp, #12
   2607c:	pop	{r4, r5, pc}
   26080:	ldr	r3, [r5, #192]	; 0xc0
   26084:	mov	ip, #512	; 0x200
   26088:	sub	r3, r3, #1
   2608c:	add	r3, r3, r4
   26090:	str	ip, [sp]
   26094:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26098:	cmp	r0, #0
   2609c:	beq	260bc <myhtml_tokenizer_state_tag_open@@Base+0x134>
   260a0:	ldr	r3, [r5, #192]	; 0xc0
   260a4:	mov	r2, #43	; 0x2b
   260a8:	add	r3, r3, r4
   260ac:	str	r3, [r0, #24]
   260b0:	mov	r0, r4
   260b4:	str	r2, [r5, #160]	; 0xa0
   260b8:	b	25ff8 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   260bc:	mov	r3, #69	; 0x45
   260c0:	str	r3, [r5, #160]	; 0xa0
   260c4:	mov	r0, #0
   260c8:	b	25ff8 <myhtml_tokenizer_state_tag_open@@Base+0x70>
   260cc:	andeq	r5, sp, r4, lsr #26

000260d0 <myhtml_tokenizer_state_end_tag_open@@Base>:
   260d0:	push	{r4, r5, r6, lr}
   260d4:	mov	r4, r3
   260d8:	ldr	r3, [pc, #200]	; 261a8 <myhtml_tokenizer_state_end_tag_open@@Base+0xd8>
   260dc:	ldrb	ip, [r2, r4]
   260e0:	add	r3, pc, r3
   260e4:	sub	sp, sp, #8
   260e8:	mov	r5, r0
   260ec:	ldrb	r6, [r3, ip]
   260f0:	cmp	r6, #1
   260f4:	beq	26164 <myhtml_tokenizer_state_end_tag_open@@Base+0x94>
   260f8:	cmp	ip, #62	; 0x3e
   260fc:	beq	26140 <myhtml_tokenizer_state_end_tag_open@@Base+0x70>
   26100:	ldr	r3, [r0, #192]	; 0xc0
   26104:	mov	ip, #512	; 0x200
   26108:	sub	r3, r3, #2
   2610c:	add	r3, r3, r4
   26110:	str	ip, [sp]
   26114:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   26118:	subs	r2, r0, #0
   2611c:	beq	26154 <myhtml_tokenizer_state_end_tag_open@@Base+0x84>
   26120:	ldr	r3, [r5, #192]	; 0xc0
   26124:	mov	r0, r4
   26128:	add	r4, r3, r4
   2612c:	mov	r3, #43	; 0x2b
   26130:	str	r4, [r2, #24]
   26134:	str	r3, [r5, #160]	; 0xa0
   26138:	add	sp, sp, #8
   2613c:	pop	{r4, r5, r6, pc}
   26140:	mov	r3, #0
   26144:	add	r0, r4, #1
   26148:	str	r3, [r5, #160]	; 0xa0
   2614c:	add	sp, sp, #8
   26150:	pop	{r4, r5, r6, pc}
   26154:	mov	r3, #69	; 0x45
   26158:	str	r3, [r5, #160]	; 0xa0
   2615c:	mov	r0, #0
   26160:	b	26138 <myhtml_tokenizer_state_end_tag_open@@Base+0x68>
   26164:	ldr	r3, [r0, #192]	; 0xc0
   26168:	mov	ip, #512	; 0x200
   2616c:	sub	r3, r3, #2
   26170:	add	r3, r3, r4
   26174:	str	ip, [sp]
   26178:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2617c:	cmp	r0, #0
   26180:	beq	26154 <myhtml_tokenizer_state_end_tag_open@@Base+0x84>
   26184:	ldr	r3, [r5, #192]	; 0xc0
   26188:	mov	r2, #9
   2618c:	add	r3, r3, r4
   26190:	str	r3, [r0, #24]
   26194:	str	r6, [r0, #48]	; 0x30
   26198:	mov	r0, r4
   2619c:	str	r2, [r5, #160]	; 0xa0
   261a0:	add	sp, sp, #8
   261a4:	pop	{r4, r5, r6, pc}
   261a8:	ldrdeq	r5, [sp], -ip

000261ac <myhtml_tokenizer_set_state@@Base>:
   261ac:	ldr	r3, [r1, #48]	; 0x30
   261b0:	tst	r3, #1
   261b4:	bne	261d0 <myhtml_tokenizer_set_state@@Base+0x24>
   261b8:	ldr	r1, [r1]
   261bc:	cmp	r1, #93	; 0x5d
   261c0:	bne	261dc <myhtml_tokenizer_set_state@@Base+0x30>
   261c4:	ldr	r3, [r0, #180]	; 0xb4
   261c8:	tst	r3, #1
   261cc:	bne	261dc <myhtml_tokenizer_set_state@@Base+0x30>
   261d0:	mov	r3, #0
   261d4:	str	r3, [r0, #160]	; 0xa0
   261d8:	bx	lr
   261dc:	push	{r4, lr}
   261e0:	mov	r4, r0
   261e4:	ldr	r0, [r0, #28]
   261e8:	bl	10a24 <myhtml_tag_get_by_id@plt>
   261ec:	ldr	r3, [r0, #12]
   261f0:	str	r3, [r4, #160]	; 0xa0
   261f4:	pop	{r4, pc}

000261f8 <myhtml_tokenizer_state_tag_name@@Base>:
   261f8:	push	{r4, r5, r6, lr}
   261fc:	mov	r4, r3
   26200:	ldr	lr, [sp, #16]
   26204:	cmp	r3, lr
   26208:	bcs	2627c <myhtml_tokenizer_state_tag_name@@Base+0x84>
   2620c:	mov	r6, r0
   26210:	ldrb	r0, [r2, r3]
   26214:	ldr	r3, [pc, #332]	; 26368 <myhtml_tokenizer_state_tag_name@@Base+0x170>
   26218:	mov	r5, r1
   2621c:	add	r3, pc, r3
   26220:	add	r1, r2, r4
   26224:	ldrb	r3, [r3, r0]
   26228:	cmp	r3, #2
   2622c:	beq	26284 <myhtml_tokenizer_state_tag_name@@Base+0x8c>
   26230:	cmp	r0, #47	; 0x2f
   26234:	beq	262bc <myhtml_tokenizer_state_tag_name@@Base+0xc4>
   26238:	cmp	r0, #62	; 0x3e
   2623c:	beq	262f4 <myhtml_tokenizer_state_tag_name@@Base+0xfc>
   26240:	ldr	r0, [pc, #292]	; 2636c <myhtml_tokenizer_state_tag_name@@Base+0x174>
   26244:	add	r0, pc, r0
   26248:	b	2626c <myhtml_tokenizer_state_tag_name@@Base+0x74>
   2624c:	ldrb	r3, [r1, #1]!
   26250:	ldrb	ip, [r0, r3]
   26254:	cmp	ip, #2
   26258:	beq	26284 <myhtml_tokenizer_state_tag_name@@Base+0x8c>
   2625c:	cmp	r3, #47	; 0x2f
   26260:	beq	262bc <myhtml_tokenizer_state_tag_name@@Base+0xc4>
   26264:	cmp	r3, #62	; 0x3e
   26268:	beq	262f4 <myhtml_tokenizer_state_tag_name@@Base+0xfc>
   2626c:	add	r4, r4, #1
   26270:	cmp	lr, r4
   26274:	bne	2624c <myhtml_tokenizer_state_tag_name@@Base+0x54>
   26278:	mov	r4, lr
   2627c:	mov	r0, r4
   26280:	pop	{r4, r5, r6, pc}
   26284:	ldr	r3, [r6, #192]	; 0xc0
   26288:	ldr	r1, [r5, #24]
   2628c:	mov	r0, r6
   26290:	sub	r3, r3, r1
   26294:	add	r3, r3, r4
   26298:	str	r3, [r5, #28]
   2629c:	mov	r1, r5
   262a0:	mov	r3, r4
   262a4:	bl	10c40 <myhtml_check_tag_parser@plt>
   262a8:	add	r4, r4, #1
   262ac:	mov	r3, #33	; 0x21
   262b0:	str	r3, [r6, #160]	; 0xa0
   262b4:	mov	r0, r4
   262b8:	pop	{r4, r5, r6, pc}
   262bc:	ldr	r3, [r6, #192]	; 0xc0
   262c0:	ldr	r1, [r5, #24]
   262c4:	mov	r0, r6
   262c8:	sub	r3, r3, r1
   262cc:	add	r3, r3, r4
   262d0:	str	r3, [r5, #28]
   262d4:	mov	r1, r5
   262d8:	mov	r3, r4
   262dc:	bl	10c40 <myhtml_check_tag_parser@plt>
   262e0:	add	r4, r4, #1
   262e4:	mov	r3, #42	; 0x2a
   262e8:	str	r3, [r6, #160]	; 0xa0
   262ec:	mov	r0, r4
   262f0:	pop	{r4, r5, r6, pc}
   262f4:	ldr	r3, [r6, #192]	; 0xc0
   262f8:	ldr	r1, [r5, #24]
   262fc:	mov	r0, r6
   26300:	sub	r3, r3, r1
   26304:	add	r3, r3, r4
   26308:	str	r3, [r5, #28]
   2630c:	mov	r1, r5
   26310:	mov	r3, r4
   26314:	bl	10c40 <myhtml_check_tag_parser@plt>
   26318:	mov	r1, r5
   2631c:	mov	r0, r6
   26320:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26324:	ldr	r3, [r6, #192]	; 0xc0
   26328:	ldr	r2, [r5, #32]
   2632c:	add	r4, r4, #1
   26330:	sub	r3, r3, r2
   26334:	add	r3, r3, r4
   26338:	str	r3, [r5, #36]	; 0x24
   2633c:	mov	r2, r5
   26340:	mov	r1, r4
   26344:	mov	r0, r6
   26348:	bl	10028 <myhtml_queue_add@plt>
   2634c:	cmp	r0, #0
   26350:	beq	2627c <myhtml_tokenizer_state_tag_name@@Base+0x84>
   26354:	mov	r3, #69	; 0x45
   26358:	mov	r4, #0
   2635c:	str	r3, [r6, #160]	; 0xa0
   26360:	mov	r0, r4
   26364:	pop	{r4, r5, r6, pc}
   26368:	andeq	r5, sp, r0, lsr #21
   2636c:	andeq	r5, sp, r8, ror sl

00026370 <myhtml_tokenizer_state_self_closing_start_tag@@Base>:
   26370:	push	{r4, r5, r6, lr}
   26374:	mov	r5, r0
   26378:	ldrb	lr, [r2, r3]
   2637c:	cmp	lr, #62	; 0x3e
   26380:	movne	r4, r3
   26384:	movne	r3, #33	; 0x21
   26388:	strne	r3, [r0, #160]	; 0xa0
   2638c:	beq	26398 <myhtml_tokenizer_state_self_closing_start_tag@@Base+0x28>
   26390:	mov	r0, r4
   26394:	pop	{r4, r5, r6, pc}
   26398:	ldr	r2, [r1, #48]	; 0x30
   2639c:	add	r4, r3, #1
   263a0:	mov	r6, r1
   263a4:	orr	r3, r2, #2
   263a8:	str	r3, [r1, #48]	; 0x30
   263ac:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   263b0:	ldr	r3, [r5, #192]	; 0xc0
   263b4:	ldr	r1, [r6, #32]
   263b8:	mov	r2, r6
   263bc:	sub	r3, r3, r1
   263c0:	add	r3, r3, r4
   263c4:	str	r3, [r6, #36]	; 0x24
   263c8:	mov	r1, r4
   263cc:	mov	r0, r5
   263d0:	bl	10028 <myhtml_queue_add@plt>
   263d4:	cmp	r0, #0
   263d8:	movne	r3, #69	; 0x45
   263dc:	movne	r4, #0
   263e0:	strne	r3, [r5, #160]	; 0xa0
   263e4:	mov	r0, r4
   263e8:	pop	{r4, r5, r6, pc}

000263ec <myhtml_tokenizer_state_before_attribute_name@@Base>:
   263ec:	push	{r4, r5, r6, r7, r8, lr}
   263f0:	add	r6, r2, r3
   263f4:	ldrb	lr, [r2, r3]
   263f8:	ldr	r7, [sp, #24]
   263fc:	sub	ip, lr, #9
   26400:	uxtb	ip, ip
   26404:	cmp	ip, #23
   26408:	bls	26420 <myhtml_tokenizer_state_before_attribute_name@@Base+0x34>
   2640c:	cmp	r3, r7
   26410:	mov	r4, r3
   26414:	bcc	2646c <myhtml_tokenizer_state_before_attribute_name@@Base+0x80>
   26418:	mov	r0, r4
   2641c:	pop	{r4, r5, r6, r7, r8, pc}
   26420:	ldr	r5, [pc, #332]	; 26574 <myhtml_tokenizer_state_before_attribute_name@@Base+0x188>
   26424:	mvn	ip, r5, lsr ip
   26428:	tst	ip, #1
   2642c:	bne	2640c <myhtml_tokenizer_state_before_attribute_name@@Base+0x20>
   26430:	cmp	r3, r7
   26434:	bcs	2656c <myhtml_tokenizer_state_before_attribute_name@@Base+0x180>
   26438:	add	ip, r3, #1
   2643c:	add	r2, r2, ip
   26440:	mov	r4, r3
   26444:	add	r4, r4, #1
   26448:	cmp	r7, r4
   2644c:	mov	r6, r2
   26450:	beq	26418 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   26454:	ldrb	lr, [r2], #1
   26458:	sub	ip, lr, #9
   2645c:	uxtb	ip, ip
   26460:	cmp	ip, #23
   26464:	mvn	ip, r5, lsr ip
   26468:	bls	264e0 <myhtml_tokenizer_state_before_attribute_name@@Base+0xf4>
   2646c:	cmp	lr, #62	; 0x3e
   26470:	beq	26508 <myhtml_tokenizer_state_before_attribute_name@@Base+0x11c>
   26474:	cmp	lr, #47	; 0x2f
   26478:	beq	264f0 <myhtml_tokenizer_state_before_attribute_name@@Base+0x104>
   2647c:	ldr	r2, [r1, #40]	; 0x28
   26480:	cmp	r2, #0
   26484:	beq	26550 <myhtml_tokenizer_state_before_attribute_name@@Base+0x164>
   26488:	ldr	r2, [r1, #44]	; 0x2c
   2648c:	ldr	r3, [r0, #56]	; 0x38
   26490:	mov	ip, #0
   26494:	str	r3, [r2]
   26498:	str	r2, [r3, #4]
   2649c:	str	r3, [r1, #44]	; 0x2c
   264a0:	str	ip, [r3]
   264a4:	str	r3, [r0, #56]	; 0x38
   264a8:	ldr	r1, [r0, #192]	; 0xc0
   264ac:	mov	r2, #0
   264b0:	add	r1, r1, r4
   264b4:	str	r1, [r3, #48]	; 0x30
   264b8:	str	r2, [r3, #52]	; 0x34
   264bc:	str	r2, [r3, #56]	; 0x38
   264c0:	str	r2, [r3, #60]	; 0x3c
   264c4:	ldrb	r3, [r6]
   264c8:	cmp	r3, #61	; 0x3d
   264cc:	addeq	r4, r4, #1
   264d0:	mov	r3, #34	; 0x22
   264d4:	str	r3, [r0, #160]	; 0xa0
   264d8:	mov	r0, r4
   264dc:	pop	{r4, r5, r6, r7, r8, pc}
   264e0:	tst	ip, #1
   264e4:	beq	26444 <myhtml_tokenizer_state_before_attribute_name@@Base+0x58>
   264e8:	cmp	lr, #47	; 0x2f
   264ec:	bne	2647c <myhtml_tokenizer_state_before_attribute_name@@Base+0x90>
   264f0:	ldr	r3, [r1, #48]	; 0x30
   264f4:	add	r4, r4, #1
   264f8:	orr	r3, r3, #2
   264fc:	str	r3, [r1, #48]	; 0x30
   26500:	mov	r0, r4
   26504:	pop	{r4, r5, r6, r7, r8, pc}
   26508:	mov	r5, r1
   2650c:	mov	r6, r0
   26510:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26514:	ldr	r3, [r6, #192]	; 0xc0
   26518:	ldr	r2, [r5, #32]
   2651c:	add	r4, r4, #1
   26520:	sub	r3, r3, r2
   26524:	add	r3, r3, r4
   26528:	str	r3, [r5, #36]	; 0x24
   2652c:	mov	r2, r5
   26530:	mov	r1, r4
   26534:	mov	r0, r6
   26538:	bl	10028 <myhtml_queue_add@plt>
   2653c:	cmp	r0, #0
   26540:	movne	r3, #69	; 0x45
   26544:	strne	r3, [r6, #160]	; 0xa0
   26548:	movne	r4, #0
   2654c:	b	26418 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   26550:	ldr	r3, [r0, #56]	; 0x38
   26554:	str	r3, [r1, #40]	; 0x28
   26558:	str	r3, [r1, #44]	; 0x2c
   2655c:	str	r3, [r0, #56]	; 0x38
   26560:	str	r2, [r3]
   26564:	str	r2, [r3, #4]
   26568:	b	264a8 <myhtml_tokenizer_state_before_attribute_name@@Base+0xbc>
   2656c:	mov	r4, r3
   26570:	b	26418 <myhtml_tokenizer_state_before_attribute_name@@Base+0x2c>
   26574:	addeq	r0, r0, fp, lsl r0

00026578 <myhtml_tokenizer_state_attribute_name@@Base>:
   26578:	push	{r4, r5, r6, r7, r8, lr}
   2657c:	mov	r4, r3
   26580:	ldr	lr, [sp, #24]
   26584:	cmp	r3, lr
   26588:	bcs	26730 <myhtml_tokenizer_state_attribute_name@@Base+0x1b8>
   2658c:	ldrb	ip, [r2, r3]
   26590:	add	r2, r2, r3
   26594:	mov	r5, r0
   26598:	sub	r3, ip, #9
   2659c:	mov	r6, r1
   265a0:	uxtb	r3, r3
   265a4:	cmp	r3, #23
   265a8:	bhi	2663c <myhtml_tokenizer_state_attribute_name@@Base+0xc4>
   265ac:	ldr	r1, [pc, #388]	; 26738 <myhtml_tokenizer_state_attribute_name@@Base+0x1c0>
   265b0:	mvn	r3, r1, lsr r3
   265b4:	tst	r3, #1
   265b8:	beq	26610 <myhtml_tokenizer_state_attribute_name@@Base+0x98>
   265bc:	cmp	ip, #62	; 0x3e
   265c0:	ldrne	r3, [pc, #368]	; 26738 <myhtml_tokenizer_state_attribute_name@@Base+0x1c0>
   265c4:	bne	265dc <myhtml_tokenizer_state_attribute_name@@Base+0x64>
   265c8:	b	26654 <myhtml_tokenizer_state_attribute_name@@Base+0xdc>
   265cc:	cmp	ip, #61	; 0x3d
   265d0:	beq	26644 <myhtml_tokenizer_state_attribute_name@@Base+0xcc>
   265d4:	cmp	ip, #62	; 0x3e
   265d8:	beq	26654 <myhtml_tokenizer_state_attribute_name@@Base+0xdc>
   265dc:	cmp	ip, #47	; 0x2f
   265e0:	beq	266b8 <myhtml_tokenizer_state_attribute_name@@Base+0x140>
   265e4:	add	r4, r4, #1
   265e8:	cmp	lr, r4
   265ec:	beq	26704 <myhtml_tokenizer_state_attribute_name@@Base+0x18c>
   265f0:	ldrb	ip, [r2, #1]!
   265f4:	sub	r1, ip, #9
   265f8:	uxtb	r1, r1
   265fc:	cmp	r1, #23
   26600:	mvn	r1, r3, lsr r1
   26604:	bhi	265cc <myhtml_tokenizer_state_attribute_name@@Base+0x54>
   26608:	tst	r1, #1
   2660c:	bne	265d4 <myhtml_tokenizer_state_attribute_name@@Base+0x5c>
   26610:	ldr	r2, [r5, #56]	; 0x38
   26614:	ldr	r3, [r5, #192]	; 0xc0
   26618:	mov	r1, #35	; 0x23
   2661c:	ldr	r0, [r2, #48]	; 0x30
   26620:	add	r7, r4, #1
   26624:	sub	r3, r3, r0
   26628:	add	r4, r3, r4
   2662c:	str	r4, [r2, #52]	; 0x34
   26630:	str	r1, [r5, #160]	; 0xa0
   26634:	mov	r0, r7
   26638:	pop	{r4, r5, r6, r7, r8, pc}
   2663c:	cmp	ip, #61	; 0x3d
   26640:	bne	265bc <myhtml_tokenizer_state_attribute_name@@Base+0x44>
   26644:	ldr	r2, [r5, #56]	; 0x38
   26648:	ldr	r3, [r5, #192]	; 0xc0
   2664c:	mov	r1, #36	; 0x24
   26650:	b	2661c <myhtml_tokenizer_state_attribute_name@@Base+0xa4>
   26654:	ldr	r2, [r5, #56]	; 0x38
   26658:	ldr	r3, [r5, #192]	; 0xc0
   2665c:	mov	r1, r6
   26660:	ldr	ip, [r2, #48]	; 0x30
   26664:	mov	r0, r5
   26668:	sub	r3, r3, ip
   2666c:	add	r3, r3, r4
   26670:	str	r3, [r2, #52]	; 0x34
   26674:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26678:	ldr	r3, [r5, #192]	; 0xc0
   2667c:	ldr	r2, [r6, #32]
   26680:	add	r7, r4, #1
   26684:	sub	r3, r3, r2
   26688:	add	r3, r3, r7
   2668c:	str	r3, [r6, #36]	; 0x24
   26690:	mov	r2, r6
   26694:	mov	r1, r7
   26698:	mov	r0, r5
   2669c:	bl	10028 <myhtml_queue_add@plt>
   266a0:	cmp	r0, #0
   266a4:	beq	26710 <myhtml_tokenizer_state_attribute_name@@Base+0x198>
   266a8:	mov	r3, #69	; 0x45
   266ac:	str	r3, [r5, #160]	; 0xa0
   266b0:	mov	r7, #0
   266b4:	b	26634 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   266b8:	ldr	r1, [r5, #56]	; 0x38
   266bc:	ldr	r3, [r5, #192]	; 0xc0
   266c0:	ldr	r2, [r6, #48]	; 0x30
   266c4:	ldr	ip, [r1, #48]	; 0x30
   266c8:	ldr	r0, [r5, #8]
   266cc:	sub	r3, r3, ip
   266d0:	add	r3, r3, r4
   266d4:	orr	r2, r2, #2
   266d8:	mov	ip, #33	; 0x21
   266dc:	str	r3, [r1, #52]	; 0x34
   266e0:	ldr	r1, [r0, #16]
   266e4:	str	r2, [r6, #48]	; 0x30
   266e8:	str	ip, [r5, #160]	; 0xa0
   266ec:	bl	10904 <myhtml_token_attr_create@plt>
   266f0:	cmp	r0, #0
   266f4:	str	r0, [r5, #56]	; 0x38
   266f8:	addne	r7, r4, #1
   266fc:	bne	26634 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   26700:	b	266a8 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   26704:	mov	r7, lr
   26708:	mov	r0, r7
   2670c:	pop	{r4, r5, r6, r7, r8, pc}
   26710:	ldr	r3, [r5, #8]
   26714:	mov	r0, r3
   26718:	ldr	r1, [r3, #16]
   2671c:	bl	10904 <myhtml_token_attr_create@plt>
   26720:	cmp	r0, #0
   26724:	str	r0, [r5, #56]	; 0x38
   26728:	bne	26634 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   2672c:	b	266a8 <myhtml_tokenizer_state_attribute_name@@Base+0x130>
   26730:	mov	r7, r3
   26734:	b	26634 <myhtml_tokenizer_state_attribute_name@@Base+0xbc>
   26738:	addeq	r0, r0, fp, lsl r0

0002673c <myhtml_tokenizer_state_after_attribute_name@@Base>:
   2673c:	push	{r4, r5, r6, r7, r8, lr}
   26740:	mov	r4, r3
   26744:	ldr	r7, [sp, #24]
   26748:	cmp	r3, r7
   2674c:	bcs	26814 <myhtml_tokenizer_state_after_attribute_name@@Base+0xd8>
   26750:	ldrb	ip, [r2, r3]
   26754:	mov	r5, r0
   26758:	add	r2, r2, r3
   2675c:	cmp	ip, #61	; 0x3d
   26760:	beq	26940 <myhtml_tokenizer_state_after_attribute_name@@Base+0x204>
   26764:	cmp	ip, #62	; 0x3e
   26768:	mov	r6, r1
   2676c:	beq	268d4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   26770:	sub	r3, ip, #34	; 0x22
   26774:	uxtb	r3, r3
   26778:	cmp	r3, #26
   2677c:	bhi	26790 <myhtml_tokenizer_state_after_attribute_name@@Base+0x54>
   26780:	ldr	r1, [pc, #520]	; 26990 <myhtml_tokenizer_state_after_attribute_name@@Base+0x254>
   26784:	mvn	r3, r1, lsr r3
   26788:	tst	r3, #1
   2678c:	beq	26860 <myhtml_tokenizer_state_after_attribute_name@@Base+0x124>
   26790:	ldr	r3, [pc, #508]	; 26994 <myhtml_tokenizer_state_after_attribute_name@@Base+0x258>
   26794:	ldr	r1, [pc, #500]	; 26990 <myhtml_tokenizer_state_after_attribute_name@@Base+0x254>
   26798:	sub	ip, ip, #9
   2679c:	uxtb	ip, ip
   267a0:	cmp	ip, #23
   267a4:	mvn	ip, r3, lsr ip
   267a8:	bls	2681c <myhtml_tokenizer_state_after_attribute_name@@Base+0xe0>
   267ac:	ldr	r3, [r5, #8]
   267b0:	mov	r0, r3
   267b4:	ldr	r1, [r3, #16]
   267b8:	bl	10904 <myhtml_token_attr_create@plt>
   267bc:	cmp	r0, #0
   267c0:	str	r0, [r5, #56]	; 0x38
   267c4:	beq	2692c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   267c8:	ldr	r3, [r6, #40]	; 0x28
   267cc:	cmp	r3, #0
   267d0:	beq	26978 <myhtml_tokenizer_state_after_attribute_name@@Base+0x23c>
   267d4:	ldr	r3, [r6, #44]	; 0x2c
   267d8:	mov	r2, #0
   267dc:	str	r0, [r3]
   267e0:	str	r3, [r0, #4]
   267e4:	str	r0, [r6, #44]	; 0x2c
   267e8:	str	r2, [r0]
   267ec:	str	r0, [r5, #56]	; 0x38
   267f0:	ldr	r2, [r5, #192]	; 0xc0
   267f4:	mov	r3, #0
   267f8:	add	r2, r2, r4
   267fc:	mov	r1, #34	; 0x22
   26800:	str	r2, [r0, #48]	; 0x30
   26804:	str	r3, [r0, #52]	; 0x34
   26808:	str	r3, [r0, #56]	; 0x38
   2680c:	str	r3, [r0, #60]	; 0x3c
   26810:	str	r1, [r5, #160]	; 0xa0
   26814:	mov	r0, r4
   26818:	pop	{r4, r5, r6, r7, r8, pc}
   2681c:	tst	ip, #1
   26820:	bne	267ac <myhtml_tokenizer_state_after_attribute_name@@Base+0x70>
   26824:	add	r4, r4, #1
   26828:	cmp	r7, r4
   2682c:	beq	26954 <myhtml_tokenizer_state_after_attribute_name@@Base+0x218>
   26830:	ldrb	ip, [r2, #1]!
   26834:	sub	lr, ip, #34	; 0x22
   26838:	cmp	ip, #61	; 0x3d
   2683c:	uxtb	lr, lr
   26840:	beq	26940 <myhtml_tokenizer_state_after_attribute_name@@Base+0x204>
   26844:	cmp	ip, #62	; 0x3e
   26848:	mvn	r0, r1, lsr lr
   2684c:	beq	268d4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x198>
   26850:	cmp	lr, #26
   26854:	bhi	26798 <myhtml_tokenizer_state_after_attribute_name@@Base+0x5c>
   26858:	tst	r0, #1
   2685c:	bne	26798 <myhtml_tokenizer_state_after_attribute_name@@Base+0x5c>
   26860:	ldr	r3, [r5, #8]
   26864:	mov	r0, r3
   26868:	ldr	r1, [r3, #16]
   2686c:	bl	10904 <myhtml_token_attr_create@plt>
   26870:	cmp	r0, #0
   26874:	str	r0, [r5, #56]	; 0x38
   26878:	beq	2692c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   2687c:	ldr	r3, [r6, #40]	; 0x28
   26880:	cmp	r3, #0
   26884:	beq	26960 <myhtml_tokenizer_state_after_attribute_name@@Base+0x224>
   26888:	ldr	r3, [r6, #44]	; 0x2c
   2688c:	mov	r2, #0
   26890:	str	r0, [r3]
   26894:	str	r3, [r0, #4]
   26898:	str	r0, [r6, #44]	; 0x2c
   2689c:	str	r2, [r0]
   268a0:	str	r0, [r5, #56]	; 0x38
   268a4:	ldr	r1, [r5, #192]	; 0xc0
   268a8:	ldr	r3, [r5, #56]	; 0x38
   268ac:	mov	r2, #0
   268b0:	add	r1, r1, r4
   268b4:	mov	r0, #34	; 0x22
   268b8:	str	r1, [r3, #48]	; 0x30
   268bc:	str	r2, [r3, #52]	; 0x34
   268c0:	str	r2, [r3, #56]	; 0x38
   268c4:	str	r2, [r3, #60]	; 0x3c
   268c8:	str	r0, [r5, #160]	; 0xa0
   268cc:	mov	r0, r4
   268d0:	pop	{r4, r5, r6, r7, r8, pc}
   268d4:	mov	r1, r6
   268d8:	mov	r0, r5
   268dc:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   268e0:	ldr	r3, [r5, #192]	; 0xc0
   268e4:	ldr	r2, [r6, #32]
   268e8:	add	r4, r4, #1
   268ec:	sub	r3, r3, r2
   268f0:	add	r3, r3, r4
   268f4:	str	r3, [r6, #36]	; 0x24
   268f8:	mov	r2, r6
   268fc:	mov	r1, r4
   26900:	mov	r0, r5
   26904:	bl	10028 <myhtml_queue_add@plt>
   26908:	cmp	r0, #0
   2690c:	bne	2692c <myhtml_tokenizer_state_after_attribute_name@@Base+0x1f0>
   26910:	ldr	r3, [r5, #8]
   26914:	mov	r0, r3
   26918:	ldr	r1, [r3, #16]
   2691c:	bl	10904 <myhtml_token_attr_create@plt>
   26920:	cmp	r0, #0
   26924:	str	r0, [r5, #56]	; 0x38
   26928:	bne	26814 <myhtml_tokenizer_state_after_attribute_name@@Base+0xd8>
   2692c:	mov	r3, #69	; 0x45
   26930:	mov	r4, #0
   26934:	str	r3, [r5, #160]	; 0xa0
   26938:	mov	r0, r4
   2693c:	pop	{r4, r5, r6, r7, r8, pc}
   26940:	mov	r3, #36	; 0x24
   26944:	add	r4, r4, #1
   26948:	str	r3, [r5, #160]	; 0xa0
   2694c:	mov	r0, r4
   26950:	pop	{r4, r5, r6, r7, r8, pc}
   26954:	mov	r4, r7
   26958:	mov	r0, r4
   2695c:	pop	{r4, r5, r6, r7, r8, pc}
   26960:	str	r0, [r6, #40]	; 0x28
   26964:	str	r0, [r6, #44]	; 0x2c
   26968:	str	r0, [r5, #56]	; 0x38
   2696c:	str	r3, [r0]
   26970:	str	r3, [r0, #4]
   26974:	b	268a4 <myhtml_tokenizer_state_after_attribute_name@@Base+0x168>
   26978:	str	r0, [r6, #40]	; 0x28
   2697c:	str	r0, [r6, #44]	; 0x2c
   26980:	str	r0, [r5, #56]	; 0x38
   26984:	str	r3, [r0]
   26988:	str	r3, [r0, #4]
   2698c:	b	267f0 <myhtml_tokenizer_state_after_attribute_name@@Base+0xb4>
   26990:	streq	r0, [r0], #-33	; 0xffffffdf
   26994:	addeq	r0, r0, fp, lsl r0

00026998 <myhtml_tokenizer_state_before_attribute_value@@Base>:
   26998:	push	{r4, r5, r6, lr}
   2699c:	mov	r4, r3
   269a0:	ldr	lr, [sp, #16]
   269a4:	cmp	r3, lr
   269a8:	bcs	26a54 <myhtml_tokenizer_state_before_attribute_value@@Base+0xbc>
   269ac:	ldrb	r3, [r2, r3]
   269b0:	mov	r5, r0
   269b4:	mov	r6, r1
   269b8:	cmp	r3, #62	; 0x3e
   269bc:	add	r2, r2, r4
   269c0:	beq	26a5c <myhtml_tokenizer_state_before_attribute_value@@Base+0xc4>
   269c4:	sub	r1, r3, #9
   269c8:	uxtb	r1, r1
   269cc:	cmp	r1, #23
   269d0:	bhi	26a10 <myhtml_tokenizer_state_before_attribute_value@@Base+0x78>
   269d4:	ldr	r0, [pc, #256]	; 26adc <myhtml_tokenizer_state_before_attribute_value@@Base+0x144>
   269d8:	mvn	r1, r0, lsr r1
   269dc:	tst	r1, #1
   269e0:	bne	26a30 <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   269e4:	add	r4, r4, #1
   269e8:	cmp	lr, r4
   269ec:	beq	26aac <myhtml_tokenizer_state_before_attribute_value@@Base+0x114>
   269f0:	ldrb	r3, [r2, #1]!
   269f4:	sub	ip, r3, #9
   269f8:	cmp	r3, #62	; 0x3e
   269fc:	uxtb	ip, ip
   26a00:	beq	26a5c <myhtml_tokenizer_state_before_attribute_value@@Base+0xc4>
   26a04:	cmp	ip, #23
   26a08:	mvn	r1, r0, lsr ip
   26a0c:	bls	26a28 <myhtml_tokenizer_state_before_attribute_value@@Base+0x90>
   26a10:	cmp	r3, #34	; 0x22
   26a14:	bne	26a30 <myhtml_tokenizer_state_before_attribute_value@@Base+0x98>
   26a18:	mov	r3, #37	; 0x25
   26a1c:	add	r4, r4, #1
   26a20:	str	r3, [r5, #160]	; 0xa0
   26a24:	b	26a44 <myhtml_tokenizer_state_before_attribute_value@@Base+0xac>
   26a28:	tst	r1, #1
   26a2c:	beq	269e4 <myhtml_tokenizer_state_before_attribute_value@@Base+0x4c>
   26a30:	cmp	r3, #39	; 0x27
   26a34:	addeq	r4, r4, #1
   26a38:	moveq	r3, #38	; 0x26
   26a3c:	movne	r3, #39	; 0x27
   26a40:	str	r3, [r5, #160]	; 0xa0
   26a44:	ldr	r3, [r5, #192]	; 0xc0
   26a48:	ldr	r2, [r5, #56]	; 0x38
   26a4c:	add	r3, r3, r4
   26a50:	str	r3, [r2, #56]	; 0x38
   26a54:	mov	r0, r4
   26a58:	pop	{r4, r5, r6, pc}
   26a5c:	mov	r1, r6
   26a60:	mov	r0, r5
   26a64:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26a68:	ldr	r3, [r5, #192]	; 0xc0
   26a6c:	ldr	r2, [r6, #32]
   26a70:	add	r4, r4, #1
   26a74:	sub	r3, r3, r2
   26a78:	add	r3, r3, r4
   26a7c:	str	r3, [r6, #36]	; 0x24
   26a80:	mov	r2, r6
   26a84:	mov	r1, r4
   26a88:	mov	r0, r5
   26a8c:	bl	10028 <myhtml_queue_add@plt>
   26a90:	cmp	r0, #0
   26a94:	beq	26ab8 <myhtml_tokenizer_state_before_attribute_value@@Base+0x120>
   26a98:	mov	r3, #69	; 0x45
   26a9c:	mov	r4, #0
   26aa0:	str	r3, [r5, #160]	; 0xa0
   26aa4:	mov	r0, r4
   26aa8:	pop	{r4, r5, r6, pc}
   26aac:	mov	r4, lr
   26ab0:	mov	r0, r4
   26ab4:	pop	{r4, r5, r6, pc}
   26ab8:	ldr	r3, [r5, #8]
   26abc:	mov	r0, r3
   26ac0:	ldr	r1, [r3, #16]
   26ac4:	bl	10904 <myhtml_token_attr_create@plt>
   26ac8:	cmp	r0, #0
   26acc:	str	r0, [r5, #56]	; 0x38
   26ad0:	beq	26a98 <myhtml_tokenizer_state_before_attribute_value@@Base+0x100>
   26ad4:	mov	r0, r4
   26ad8:	pop	{r4, r5, r6, pc}
   26adc:	addeq	r0, r0, fp, lsl r0

00026ae0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base>:
   26ae0:	push	{r4, r5, r6, lr}
   26ae4:	mov	r4, r3
   26ae8:	ldr	ip, [sp, #16]
   26aec:	cmp	r3, ip
   26af0:	bcs	26c1c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x13c>
   26af4:	mov	r6, r1
   26af8:	ldrb	r1, [r2, r3]
   26afc:	add	r2, r2, r3
   26b00:	mov	r5, r0
   26b04:	sub	r3, r1, #9
   26b08:	uxtb	r3, r3
   26b0c:	cmp	r3, #23
   26b10:	bhi	26c24 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x144>
   26b14:	ldr	r1, [pc, #288]	; 26c3c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   26b18:	mvn	r3, r1, lsr r3
   26b1c:	tst	r3, #1
   26b20:	beq	26be0 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x100>
   26b24:	ldr	r0, [pc, #272]	; 26c3c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x15c>
   26b28:	add	r4, r4, #1
   26b2c:	cmp	ip, r4
   26b30:	beq	26c30 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x150>
   26b34:	ldrb	r3, [r2, #1]!
   26b38:	sub	r1, r3, #9
   26b3c:	uxtb	r1, r1
   26b40:	cmp	r1, #23
   26b44:	mvn	r1, r0, lsr r1
   26b48:	bls	26bd8 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xf8>
   26b4c:	cmp	r3, #62	; 0x3e
   26b50:	bne	26b28 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x48>
   26b54:	ldr	r2, [r5, #56]	; 0x38
   26b58:	ldr	r3, [r5, #192]	; 0xc0
   26b5c:	mov	r1, r6
   26b60:	ldr	ip, [r2, #56]	; 0x38
   26b64:	mov	r0, r5
   26b68:	sub	r3, r3, ip
   26b6c:	add	r3, r3, r4
   26b70:	str	r3, [r2, #60]	; 0x3c
   26b74:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26b78:	ldr	r3, [r5, #192]	; 0xc0
   26b7c:	ldr	r2, [r6, #32]
   26b80:	add	r4, r4, #1
   26b84:	sub	r3, r3, r2
   26b88:	add	r3, r3, r4
   26b8c:	str	r3, [r6, #36]	; 0x24
   26b90:	mov	r2, r6
   26b94:	mov	r1, r4
   26b98:	mov	r0, r5
   26b9c:	bl	10028 <myhtml_queue_add@plt>
   26ba0:	cmp	r0, #0
   26ba4:	bne	26bc4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe4>
   26ba8:	ldr	r3, [r5, #8]
   26bac:	mov	r0, r3
   26bb0:	ldr	r1, [r3, #16]
   26bb4:	bl	10904 <myhtml_token_attr_create@plt>
   26bb8:	cmp	r0, #0
   26bbc:	str	r0, [r5, #56]	; 0x38
   26bc0:	bne	26c1c <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x13c>
   26bc4:	mov	r3, #69	; 0x45
   26bc8:	mov	r4, #0
   26bcc:	str	r3, [r5, #160]	; 0xa0
   26bd0:	mov	r0, r4
   26bd4:	pop	{r4, r5, r6, pc}
   26bd8:	tst	r1, #1
   26bdc:	bne	26b28 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x48>
   26be0:	ldr	r2, [r5, #56]	; 0x38
   26be4:	ldr	r3, [r5, #192]	; 0xc0
   26be8:	ldr	r0, [r5, #8]
   26bec:	ldr	ip, [r2, #56]	; 0x38
   26bf0:	mov	r1, #33	; 0x21
   26bf4:	sub	r3, r3, ip
   26bf8:	add	r3, r3, r4
   26bfc:	str	r1, [r5, #160]	; 0xa0
   26c00:	ldr	r1, [r0, #16]
   26c04:	str	r3, [r2, #60]	; 0x3c
   26c08:	bl	10904 <myhtml_token_attr_create@plt>
   26c0c:	cmp	r0, #0
   26c10:	str	r0, [r5, #56]	; 0x38
   26c14:	addne	r4, r4, #1
   26c18:	beq	26bc4 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0xe4>
   26c1c:	mov	r0, r4
   26c20:	pop	{r4, r5, r6, pc}
   26c24:	cmp	r1, #62	; 0x3e
   26c28:	bne	26b24 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x44>
   26c2c:	b	26b54 <myhtml_tokenizer_state_attribute_value_unquoted@@Base+0x74>
   26c30:	mov	r4, ip
   26c34:	mov	r0, r4
   26c38:	pop	{r4, r5, r6, pc}
   26c3c:	addeq	r0, r0, fp, lsl r0

00026c40 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base>:
   26c40:	push	{r4, r5, r6, lr}
   26c44:	ldrb	r4, [r2, r3]
   26c48:	sub	ip, r4, #9
   26c4c:	uxtb	ip, ip
   26c50:	cmp	ip, #23
   26c54:	bls	26c74 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x34>
   26c58:	cmp	r4, #47	; 0x2f
   26c5c:	moveq	r2, #42	; 0x2a
   26c60:	addeq	r6, r3, #1
   26c64:	streq	r2, [r0, #160]	; 0xa0
   26c68:	bne	26c84 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x44>
   26c6c:	mov	r0, r6
   26c70:	pop	{r4, r5, r6, pc}
   26c74:	ldr	lr, [pc, #124]	; 26cf8 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xb8>
   26c78:	mvn	ip, lr, lsr ip
   26c7c:	tst	ip, #1
   26c80:	beq	26ce4 <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0xa4>
   26c84:	cmp	r4, #62	; 0x3e
   26c88:	movne	r2, #33	; 0x21
   26c8c:	movne	r6, r3
   26c90:	strne	r2, [r0, #160]	; 0xa0
   26c94:	bne	26c6c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x2c>
   26c98:	mov	r4, r1
   26c9c:	mov	r5, r0
   26ca0:	mov	r6, r3
   26ca4:	bl	10b44 <myhtml_tokenizer_set_state@plt>
   26ca8:	ldr	r2, [r5, #192]	; 0xc0
   26cac:	ldr	r1, [r4, #32]
   26cb0:	add	r6, r6, #1
   26cb4:	sub	r2, r2, r1
   26cb8:	add	r2, r2, r6
   26cbc:	str	r2, [r4, #36]	; 0x24
   26cc0:	mov	r1, r6
   26cc4:	mov	r2, r4
   26cc8:	mov	r0, r5
   26ccc:	bl	10028 <myhtml_queue_add@plt>
   26cd0:	cmp	r0, #0
   26cd4:	movne	r3, #69	; 0x45
   26cd8:	strne	r3, [r5, #160]	; 0xa0
   26cdc:	movne	r6, #0
   26ce0:	b	26c6c <myhtml_tokenizer_state_after_attribute_value_quoted@@Base+0x2c>
   26ce4:	mov	r2, #33	; 0x21
   26ce8:	add	r6, r3, #1
   26cec:	str	r2, [r0, #160]	; 0xa0
   26cf0:	mov	r0, r6
   26cf4:	pop	{r4, r5, r6, pc}
   26cf8:	addeq	r0, r0, fp, lsl r0

00026cfc <_myhtml_tokenizer_state_andata_end_tag_name@@Base>:
   26cfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26d00:	mov	r5, r3
   26d04:	ldr	lr, [r1, #24]
   26d08:	ldr	r3, [r0, #192]	; 0xc0
   26d0c:	ldr	ip, [r5]
   26d10:	sub	r3, r3, lr
   26d14:	add	r3, r3, ip
   26d18:	mov	r6, r0
   26d1c:	mov	r4, r1
   26d20:	str	r3, [r1, #28]
   26d24:	ldr	r3, [r5]
   26d28:	ldr	r7, [sp, #32]
   26d2c:	bl	10c40 <myhtml_check_tag_parser@plt>
   26d30:	ldr	r3, [r4]
   26d34:	ldr	r2, [r6, #60]	; 0x3c
   26d38:	cmp	r3, r2
   26d3c:	beq	26d64 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x68>
   26d40:	mov	r0, #0
   26d44:	str	r7, [r4, #24]
   26d48:	str	r0, [r4, #28]
   26d4c:	ldr	r3, [r5]
   26d50:	mov	r2, #2
   26d54:	add	r3, r3, #1
   26d58:	str	r2, [r6, #160]	; 0xa0
   26d5c:	str	r3, [r5]
   26d60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26d64:	ldr	r8, [r4, #24]
   26d68:	sub	r2, r8, #2
   26d6c:	cmp	r7, r2
   26d70:	bcc	26da0 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0xa4>
   26d74:	str	r3, [r4]
   26d78:	ldr	r3, [r5]
   26d7c:	ldr	r1, [r6, #192]	; 0xc0
   26d80:	ldr	r2, [r4, #48]	; 0x30
   26d84:	sub	r3, r3, r8
   26d88:	mov	r0, #1
   26d8c:	add	r3, r3, r1
   26d90:	orr	r2, r2, r0
   26d94:	str	r3, [r4, #28]
   26d98:	str	r2, [r4, #48]	; 0x30
   26d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26da0:	ldr	r3, [r4, #48]	; 0x30
   26da4:	ldr	r2, [sp, #36]	; 0x24
   26da8:	ldr	r9, [r4, #32]
   26dac:	orr	r3, r2, r3
   26db0:	str	r3, [r4, #48]	; 0x30
   26db4:	ldr	r2, [r4, #48]	; 0x30
   26db8:	mvn	r3, #1
   26dbc:	ldr	r1, [r4, #48]	; 0x30
   26dc0:	and	r2, r2, #8
   26dc4:	sub	r3, r3, r7
   26dc8:	add	r3, r3, r8
   26dcc:	eor	r2, r2, r1
   26dd0:	mov	r1, #1
   26dd4:	str	r3, [r4, #28]
   26dd8:	str	r3, [r4, #36]	; 0x24
   26ddc:	str	r7, [r4, #24]
   26de0:	str	r2, [r4, #48]	; 0x30
   26de4:	str	r1, [r4]
   26de8:	str	r7, [r4, #32]
   26dec:	mov	r2, r4
   26df0:	mov	r0, r6
   26df4:	ldr	r1, [r5]
   26df8:	bl	10028 <myhtml_queue_add@plt>
   26dfc:	ldr	r4, [r6, #64]	; 0x40
   26e00:	ldr	r3, [r6, #60]	; 0x3c
   26e04:	str	r9, [r4, #32]
   26e08:	str	r8, [r4, #24]
   26e0c:	b	26d74 <_myhtml_tokenizer_state_andata_end_tag_name@@Base+0x78>

00026e10 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base>:
   26e10:	push	{r4, r5, r6, r7, r8, lr}
   26e14:	sub	sp, sp, #16
   26e18:	ldr	ip, [r0, #192]	; 0xc0
   26e1c:	ldr	r7, [sp, #40]	; 0x28
   26e20:	add	ip, ip, r3
   26e24:	cmp	r3, r7
   26e28:	mov	r5, r0
   26e2c:	ldr	r6, [r1, #24]
   26e30:	mov	r4, r1
   26e34:	mov	r0, r3
   26e38:	str	r3, [sp, #12]
   26e3c:	str	ip, [r1, #24]
   26e40:	bcs	26ec0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   26e44:	ldrb	r1, [r2, r3]
   26e48:	ldr	r3, [pc, #336]	; 26fa0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x190>
   26e4c:	add	ip, r2, r0
   26e50:	add	r3, pc, r3
   26e54:	ldrb	r3, [r3, r1]
   26e58:	cmp	r3, #2
   26e5c:	beq	26ed0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   26e60:	cmp	r1, #62	; 0x3e
   26e64:	beq	26f00 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xf0>
   26e68:	cmp	r1, #47	; 0x2f
   26e6c:	beq	26ed0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xc0>
   26e70:	cmp	r3, #1
   26e74:	bne	26f74 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x164>
   26e78:	ldr	r8, [pc, #292]	; 26fa4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x194>
   26e7c:	add	r0, r0, #1
   26e80:	add	r8, pc, r8
   26e84:	b	26eb8 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xa8>
   26e88:	ldrb	r3, [ip, #1]!
   26e8c:	add	lr, r0, #1
   26e90:	ldrb	r1, [r8, r3]
   26e94:	cmp	r1, #2
   26e98:	beq	26ecc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   26e9c:	cmp	r3, #62	; 0x3e
   26ea0:	beq	26efc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xec>
   26ea4:	cmp	r3, #47	; 0x2f
   26ea8:	beq	26ecc <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xbc>
   26eac:	cmp	r1, #1
   26eb0:	bne	26f74 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x164>
   26eb4:	mov	r0, lr
   26eb8:	cmp	r7, r0
   26ebc:	bne	26e88 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x78>
   26ec0:	str	r6, [r4, #24]
   26ec4:	add	sp, sp, #16
   26ec8:	pop	{r4, r5, r6, r7, r8, pc}
   26ecc:	str	r0, [sp, #12]
   26ed0:	mov	r3, #16
   26ed4:	str	r3, [sp, #4]
   26ed8:	str	r6, [sp]
   26edc:	add	r3, sp, #12
   26ee0:	mov	r1, r4
   26ee4:	mov	r0, r5
   26ee8:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26eec:	cmp	r0, #0
   26ef0:	bne	26f80 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0x170>
   26ef4:	ldr	r0, [sp, #12]
   26ef8:	b	26ec0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   26efc:	str	r0, [sp, #12]
   26f00:	mov	r3, #16
   26f04:	str	r3, [sp, #4]
   26f08:	str	r6, [sp]
   26f0c:	add	r3, sp, #12
   26f10:	mov	r1, r4
   26f14:	mov	r0, r5
   26f18:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   26f1c:	cmp	r0, #0
   26f20:	beq	26ef4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xe4>
   26f24:	ldr	r2, [r5, #64]	; 0x40
   26f28:	ldr	r3, [sp, #12]
   26f2c:	ldr	r0, [r5, #192]	; 0xc0
   26f30:	add	r3, r3, #1
   26f34:	ldr	r1, [r2, #32]
   26f38:	add	r0, r3, r0
   26f3c:	sub	r0, r0, r1
   26f40:	str	r0, [r2, #36]	; 0x24
   26f44:	mov	r1, r3
   26f48:	mov	r0, r5
   26f4c:	str	r3, [sp, #12]
   26f50:	bl	10028 <myhtml_queue_add@plt>
   26f54:	cmp	r0, #0
   26f58:	movne	r3, #69	; 0x45
   26f5c:	streq	r0, [r5, #60]	; 0x3c
   26f60:	streq	r0, [r5, #160]	; 0xa0
   26f64:	strne	r3, [r5, #160]	; 0xa0
   26f68:	movne	r0, #0
   26f6c:	ldreq	r0, [sp, #12]
   26f70:	b	26ec4 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb4>
   26f74:	mov	r3, #2
   26f78:	str	r3, [r5, #160]	; 0xa0
   26f7c:	b	26ec0 <myhtml_tokenizer_state_rcdata_end_tag_name@@Base+0xb0>
   26f80:	ldr	r0, [sp, #12]
   26f84:	mov	r2, #33	; 0x21
   26f88:	mov	r3, #0
   26f8c:	add	r0, r0, #1
   26f90:	str	r2, [r5, #160]	; 0xa0
   26f94:	str	r3, [r5, #60]	; 0x3c
   26f98:	add	sp, sp, #16
   26f9c:	pop	{r4, r5, r6, r7, r8, pc}
   26fa0:	andeq	r4, sp, ip, ror #28
   26fa4:	andeq	r4, sp, ip, lsr lr

00026fa8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base>:
   26fa8:	push	{r4, r5, r6, r7, r8, lr}
   26fac:	sub	sp, sp, #16
   26fb0:	ldr	ip, [r0, #192]	; 0xc0
   26fb4:	ldr	r5, [sp, #40]	; 0x28
   26fb8:	add	ip, ip, r3
   26fbc:	cmp	r3, r5
   26fc0:	mov	r6, r0
   26fc4:	ldr	r8, [r1, #24]
   26fc8:	mov	r0, r3
   26fcc:	str	r3, [sp, #12]
   26fd0:	str	ip, [r1, #24]
   26fd4:	bcs	27054 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xac>
   26fd8:	ldrb	ip, [r2, r3]
   26fdc:	ldr	r3, [pc, #340]	; 27138 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x190>
   26fe0:	add	lr, r2, r0
   26fe4:	add	r3, pc, r3
   26fe8:	ldrb	r3, [r3, ip]
   26fec:	cmp	r3, #2
   26ff0:	beq	27064 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xbc>
   26ff4:	cmp	ip, #62	; 0x3e
   26ff8:	beq	270a8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x100>
   26ffc:	cmp	ip, #47	; 0x2f
   27000:	beq	27064 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xbc>
   27004:	cmp	r3, #1
   27008:	bne	27124 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x17c>
   2700c:	ldr	r7, [pc, #296]	; 2713c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x194>
   27010:	add	r0, r0, #1
   27014:	add	r7, pc, r7
   27018:	b	2704c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xa4>
   2701c:	ldrb	r3, [lr, #1]!
   27020:	add	r4, r0, #1
   27024:	ldrb	ip, [r7, r3]
   27028:	cmp	ip, #2
   2702c:	beq	27060 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb8>
   27030:	cmp	r3, #62	; 0x3e
   27034:	beq	270a4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xfc>
   27038:	cmp	r3, #47	; 0x2f
   2703c:	beq	27060 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb8>
   27040:	cmp	ip, #1
   27044:	bne	27124 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x17c>
   27048:	mov	r0, r4
   2704c:	cmp	r5, r0
   27050:	bne	2701c <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x74>
   27054:	str	r8, [r1, #24]
   27058:	add	sp, sp, #16
   2705c:	pop	{r4, r5, r6, r7, r8, pc}
   27060:	str	r0, [sp, #12]
   27064:	mov	r3, #32
   27068:	str	r3, [sp, #4]
   2706c:	str	r8, [sp]
   27070:	add	r3, sp, #12
   27074:	mov	r0, r6
   27078:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   2707c:	cmp	r0, #0
   27080:	beq	270c8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x120>
   27084:	ldr	r0, [sp, #12]
   27088:	mov	r2, #33	; 0x21
   2708c:	mov	r3, #0
   27090:	add	r0, r0, #1
   27094:	str	r2, [r6, #160]	; 0xa0
   27098:	str	r3, [r6, #60]	; 0x3c
   2709c:	add	sp, sp, #16
   270a0:	pop	{r4, r5, r6, r7, r8, pc}
   270a4:	str	r0, [sp, #12]
   270a8:	mov	r3, #32
   270ac:	str	r3, [sp, #4]
   270b0:	str	r8, [sp]
   270b4:	add	r3, sp, #12
   270b8:	mov	r0, r6
   270bc:	bl	10c70 <_myhtml_tokenizer_state_andata_end_tag_name@plt>
   270c0:	cmp	r0, #0
   270c4:	bne	270d4 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x12c>
   270c8:	ldr	r0, [sp, #12]
   270cc:	add	sp, sp, #16
   270d0:	pop	{r4, r5, r6, r7, r8, pc}
   270d4:	ldr	r2, [r6, #64]	; 0x40
   270d8:	ldr	r3, [sp, #12]
   270dc:	ldr	r0, [r6, #192]	; 0xc0
   270e0:	add	r3, r3, #1
   270e4:	ldr	r1, [r2, #32]
   270e8:	add	r0, r3, r0
   270ec:	sub	r0, r0, r1
   270f0:	str	r0, [r2, #36]	; 0x24
   270f4:	mov	r1, r3
   270f8:	mov	r0, r6
   270fc:	str	r3, [sp, #12]
   27100:	bl	10028 <myhtml_queue_add@plt>
   27104:	cmp	r0, #0
   27108:	streq	r0, [r6, #60]	; 0x3c
   2710c:	streq	r0, [r6, #160]	; 0xa0
   27110:	beq	270c8 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0x120>
   27114:	mov	r3, #69	; 0x45
   27118:	str	r3, [r6, #160]	; 0xa0
   2711c:	mov	r0, #0
   27120:	b	27058 <myhtml_tokenizer_state_rawtext_end_tag_name@@Base+0xb0>
   27124:	mov	r3, #4
   27128:	str	r8, [r1, #24]
   2712c:	str	r3, [r6, #160]	; 0xa0
   27130:	add	sp, sp, #16
   27134:	pop	{r4, r5, r6, r7, r8, pc}
   27138:	ldrdeq	r4, [sp], -r8
   2713c:	andeq	r4, sp, r8, lsr #25

00027140 <myhtml_tokenizer_state_init@@Base>:
   27140:	push	{r4, lr}
   27144:	mov	r4, r0
   27148:	ldr	r0, [pc, #1552]	; 27760 <myhtml_tokenizer_state_init@@Base+0x620>
   2714c:	bl	10c94 <mycore_malloc@plt>
   27150:	ldr	r2, [pc, #1548]	; 27764 <myhtml_tokenizer_state_init@@Base+0x624>
   27154:	add	r2, pc, r2
   27158:	cmp	r0, #0
   2715c:	str	r0, [r4, #24]
   27160:	beq	27758 <myhtml_tokenizer_state_init@@Base+0x618>
   27164:	mov	r3, r0
   27168:	ldr	r0, [pc, #1528]	; 27768 <myhtml_tokenizer_state_init@@Base+0x628>
   2716c:	ldr	ip, [pc, #1528]	; 2776c <myhtml_tokenizer_state_init@@Base+0x62c>
   27170:	ldr	r1, [pc, #1528]	; 27770 <myhtml_tokenizer_state_init@@Base+0x630>
   27174:	ldr	lr, [r2, r0]
   27178:	ldr	r0, [pc, #1524]	; 27774 <myhtml_tokenizer_state_init@@Base+0x634>
   2717c:	str	lr, [r3]
   27180:	ldr	lr, [r2, ip]
   27184:	ldr	ip, [pc, #1516]	; 27778 <myhtml_tokenizer_state_init@@Base+0x638>
   27188:	str	lr, [r3, #28]
   2718c:	ldr	lr, [r2, r1]
   27190:	ldr	r1, [pc, #1508]	; 2777c <myhtml_tokenizer_state_init@@Base+0x63c>
   27194:	str	lr, [r3, #36]	; 0x24
   27198:	ldr	lr, [r2, r0]
   2719c:	ldr	r0, [pc, #1500]	; 27780 <myhtml_tokenizer_state_init@@Base+0x640>
   271a0:	str	lr, [r3, #32]
   271a4:	ldr	lr, [r2, ip]
   271a8:	ldr	ip, [pc, #1492]	; 27784 <myhtml_tokenizer_state_init@@Base+0x644>
   271ac:	str	lr, [r3, #168]	; 0xa8
   271b0:	ldr	lr, [r2, r1]
   271b4:	ldr	r1, [pc, #1484]	; 27788 <myhtml_tokenizer_state_init@@Base+0x648>
   271b8:	str	lr, [r3, #176]	; 0xb0
   271bc:	ldr	lr, [r2, r0]
   271c0:	ldr	r0, [pc, #1476]	; 2778c <myhtml_tokenizer_state_init@@Base+0x64c>
   271c4:	str	lr, [r3, #132]	; 0x84
   271c8:	ldr	lr, [r2, ip]
   271cc:	ldr	ip, [pc, #1468]	; 27790 <myhtml_tokenizer_state_init@@Base+0x650>
   271d0:	str	lr, [r3, #136]	; 0x88
   271d4:	ldr	lr, [r2, r1]
   271d8:	ldr	r1, [pc, #1460]	; 27794 <myhtml_tokenizer_state_init@@Base+0x654>
   271dc:	str	lr, [r3, #140]	; 0x8c
   271e0:	ldr	lr, [r2, r0]
   271e4:	ldr	r0, [pc, #1452]	; 27798 <myhtml_tokenizer_state_init@@Base+0x658>
   271e8:	str	lr, [r3, #144]	; 0x90
   271ec:	ldr	lr, [r2, ip]
   271f0:	ldr	ip, [pc, #1444]	; 2779c <myhtml_tokenizer_state_init@@Base+0x65c>
   271f4:	str	lr, [r3, #164]	; 0xa4
   271f8:	ldr	lr, [r2, r1]
   271fc:	ldr	r1, [pc, #1436]	; 277a0 <myhtml_tokenizer_state_init@@Base+0x660>
   27200:	str	lr, [r3, #148]	; 0x94
   27204:	ldr	lr, [r2, r0]
   27208:	ldr	r0, [pc, #1428]	; 277a4 <myhtml_tokenizer_state_init@@Base+0x664>
   2720c:	str	lr, [r3, #152]	; 0x98
   27210:	ldr	lr, [r2, ip]
   27214:	ldr	ip, [pc, #1420]	; 277a8 <myhtml_tokenizer_state_init@@Base+0x668>
   27218:	str	lr, [r3, #156]	; 0x9c
   2721c:	ldr	lr, [r2, r1]
   27220:	ldr	r1, [pc, #1412]	; 277ac <myhtml_tokenizer_state_init@@Base+0x66c>
   27224:	str	lr, [r3, #180]	; 0xb4
   27228:	ldr	lr, [r2, r0]
   2722c:	ldr	r0, [pc, #1404]	; 277b0 <myhtml_tokenizer_state_init@@Base+0x670>
   27230:	str	lr, [r3, #184]	; 0xb8
   27234:	ldr	lr, [r2, ip]
   27238:	ldr	ip, [pc, #1396]	; 277b4 <myhtml_tokenizer_state_init@@Base+0x674>
   2723c:	str	lr, [r3, #188]	; 0xbc
   27240:	ldr	lr, [r2, r1]
   27244:	ldr	r1, [pc, #1388]	; 277b8 <myhtml_tokenizer_state_init@@Base+0x678>
   27248:	str	lr, [r3, #196]	; 0xc4
   2724c:	ldr	lr, [r2, r0]
   27250:	ldr	r0, [pc, #1380]	; 277bc <myhtml_tokenizer_state_init@@Base+0x67c>
   27254:	str	lr, [r3, #192]	; 0xc0
   27258:	ldr	lr, [r2, ip]
   2725c:	ldr	ip, [pc, #1372]	; 277c0 <myhtml_tokenizer_state_init@@Base+0x680>
   27260:	str	lr, [r3, #200]	; 0xc8
   27264:	ldr	lr, [r2, r1]
   27268:	ldr	r1, [pc, #1364]	; 277c4 <myhtml_tokenizer_state_init@@Base+0x684>
   2726c:	str	lr, [r3, #172]	; 0xac
   27270:	ldr	lr, [r2, r0]
   27274:	ldr	r0, [pc, #1356]	; 277c8 <myhtml_tokenizer_state_init@@Base+0x688>
   27278:	str	lr, [r3, #268]	; 0x10c
   2727c:	ldr	lr, [r2, ip]
   27280:	ldr	ip, [pc, #1348]	; 277cc <myhtml_tokenizer_state_init@@Base+0x68c>
   27284:	str	lr, [r3, #8]
   27288:	ldr	lr, [r2, r1]
   2728c:	ldr	r1, [pc, #1340]	; 277d0 <myhtml_tokenizer_state_init@@Base+0x690>
   27290:	str	lr, [r3, #40]	; 0x28
   27294:	ldr	lr, [r2, r0]
   27298:	ldr	r0, [pc, #1332]	; 277d4 <myhtml_tokenizer_state_init@@Base+0x694>
   2729c:	str	lr, [r3, #44]	; 0x2c
   272a0:	ldr	lr, [r2, ip]
   272a4:	ldr	ip, [pc, #1324]	; 277d8 <myhtml_tokenizer_state_init@@Base+0x698>
   272a8:	str	lr, [r3, #48]	; 0x30
   272ac:	ldr	lr, [r2, r1]
   272b0:	ldr	r1, [pc, #1316]	; 277dc <myhtml_tokenizer_state_init@@Base+0x69c>
   272b4:	str	lr, [r3, #16]
   272b8:	ldr	lr, [r2, r0]
   272bc:	ldr	r0, [pc, #1308]	; 277e0 <myhtml_tokenizer_state_init@@Base+0x6a0>
   272c0:	str	lr, [r3, #52]	; 0x34
   272c4:	ldr	lr, [r2, ip]
   272c8:	ldr	ip, [pc, #1300]	; 277e4 <myhtml_tokenizer_state_init@@Base+0x6a4>
   272cc:	str	lr, [r3, #56]	; 0x38
   272d0:	ldr	lr, [r2, r1]
   272d4:	ldr	r1, [pc, #1292]	; 277e8 <myhtml_tokenizer_state_init@@Base+0x6a8>
   272d8:	str	lr, [r3, #60]	; 0x3c
   272dc:	ldr	lr, [r2, r0]
   272e0:	ldr	r0, [pc, #1284]	; 277ec <myhtml_tokenizer_state_init@@Base+0x6ac>
   272e4:	str	lr, [r3, #24]
   272e8:	ldr	lr, [r2, ip]
   272ec:	ldr	ip, [pc, #1276]	; 277f0 <myhtml_tokenizer_state_init@@Base+0x6b0>
   272f0:	str	lr, [r3, #204]	; 0xcc
   272f4:	ldr	lr, [r2, r1]
   272f8:	ldr	r1, [pc, #1268]	; 277f4 <myhtml_tokenizer_state_init@@Base+0x6b4>
   272fc:	str	lr, [r3, #208]	; 0xd0
   27300:	ldr	lr, [r2, r0]
   27304:	ldr	r0, [pc, #1260]	; 277f8 <myhtml_tokenizer_state_init@@Base+0x6b8>
   27308:	str	lr, [r3, #212]	; 0xd4
   2730c:	ldr	lr, [r2, ip]
   27310:	ldr	ip, [pc, #1252]	; 277fc <myhtml_tokenizer_state_init@@Base+0x6bc>
   27314:	str	lr, [r3, #216]	; 0xd8
   27318:	ldr	lr, [r2, r1]
   2731c:	ldr	r1, [pc, #1244]	; 27800 <myhtml_tokenizer_state_init@@Base+0x6c0>
   27320:	str	lr, [r3, #272]	; 0x110
   27324:	ldr	lr, [r2, r0]
   27328:	ldr	r0, [pc, #1236]	; 27804 <myhtml_tokenizer_state_init@@Base+0x6c4>
   2732c:	str	lr, [r3, #224]	; 0xe0
   27330:	ldr	lr, [r2, ip]
   27334:	ldr	ip, [pc, #1228]	; 27808 <myhtml_tokenizer_state_init@@Base+0x6c8>
   27338:	str	lr, [r3, #228]	; 0xe4
   2733c:	ldr	lr, [r2, r1]
   27340:	ldr	r1, [pc, #1220]	; 2780c <myhtml_tokenizer_state_init@@Base+0x6cc>
   27344:	str	lr, [r3, #232]	; 0xe8
   27348:	ldr	lr, [r2, r0]
   2734c:	ldr	r0, [pc, #1212]	; 27810 <myhtml_tokenizer_state_init@@Base+0x6d0>
   27350:	str	lr, [r3, #236]	; 0xec
   27354:	ldr	lr, [r2, ip]
   27358:	ldr	ip, [pc, #1204]	; 27814 <myhtml_tokenizer_state_init@@Base+0x6d4>
   2735c:	str	lr, [r3, #252]	; 0xfc
   27360:	ldr	lr, [r2, r1]
   27364:	ldr	r1, [pc, #1196]	; 27818 <myhtml_tokenizer_state_init@@Base+0x6d8>
   27368:	str	lr, [r3, #256]	; 0x100
   2736c:	ldr	lr, [r2, r0]
   27370:	ldr	r0, [pc, #1188]	; 2781c <myhtml_tokenizer_state_init@@Base+0x6dc>
   27374:	str	lr, [r3, #260]	; 0x104
   27378:	ldr	lr, [r2, ip]
   2737c:	ldr	ip, [pc, #1180]	; 27820 <myhtml_tokenizer_state_init@@Base+0x6e0>
   27380:	str	lr, [r3, #264]	; 0x108
   27384:	ldr	lr, [r2, r1]
   27388:	ldr	r1, [pc, #1172]	; 27824 <myhtml_tokenizer_state_init@@Base+0x6e4>
   2738c:	str	lr, [r3, #20]
   27390:	ldr	lr, [r2, r0]
   27394:	ldr	r0, [pc, #1164]	; 27828 <myhtml_tokenizer_state_init@@Base+0x6e8>
   27398:	str	lr, [r3, #64]	; 0x40
   2739c:	ldr	lr, [r2, ip]
   273a0:	ldr	ip, [pc, #1156]	; 2782c <myhtml_tokenizer_state_init@@Base+0x6ec>
   273a4:	str	lr, [r3, #68]	; 0x44
   273a8:	ldr	lr, [r2, r1]
   273ac:	ldr	r1, [pc, #1148]	; 27830 <myhtml_tokenizer_state_init@@Base+0x6f0>
   273b0:	str	lr, [r3, #72]	; 0x48
   273b4:	ldr	lr, [r2, r0]
   273b8:	ldr	r0, [pc, #1140]	; 27834 <myhtml_tokenizer_state_init@@Base+0x6f4>
   273bc:	str	lr, [r3, #76]	; 0x4c
   273c0:	ldr	lr, [r2, ip]
   273c4:	ldr	ip, [pc, #1132]	; 27838 <myhtml_tokenizer_state_init@@Base+0x6f8>
   273c8:	str	lr, [r3, #80]	; 0x50
   273cc:	ldr	lr, [r2, r1]
   273d0:	ldr	r1, [pc, #1124]	; 2783c <myhtml_tokenizer_state_init@@Base+0x6fc>
   273d4:	str	lr, [r3, #84]	; 0x54
   273d8:	ldr	lr, [r2, r0]
   273dc:	ldr	r0, [pc, #1116]	; 27840 <myhtml_tokenizer_state_init@@Base+0x700>
   273e0:	str	lr, [r3, #88]	; 0x58
   273e4:	ldr	lr, [r2, ip]
   273e8:	ldr	ip, [pc, #1108]	; 27844 <myhtml_tokenizer_state_init@@Base+0x704>
   273ec:	str	lr, [r3, #92]	; 0x5c
   273f0:	ldr	lr, [r2, r1]
   273f4:	ldr	r1, [pc, #1100]	; 27848 <myhtml_tokenizer_state_init@@Base+0x708>
   273f8:	str	lr, [r3, #96]	; 0x60
   273fc:	ldr	lr, [r2, r0]
   27400:	ldr	r0, [pc, #1092]	; 2784c <myhtml_tokenizer_state_init@@Base+0x70c>
   27404:	str	lr, [r3, #100]	; 0x64
   27408:	ldr	lr, [r2, ip]
   2740c:	ldr	ip, [pc, #1084]	; 27850 <myhtml_tokenizer_state_init@@Base+0x710>
   27410:	str	lr, [r3, #104]	; 0x68
   27414:	ldr	lr, [r2, r1]
   27418:	ldr	r1, [pc, #1076]	; 27854 <myhtml_tokenizer_state_init@@Base+0x714>
   2741c:	str	lr, [r3, #108]	; 0x6c
   27420:	ldr	lr, [r2, r0]
   27424:	ldr	r0, [pc, #1068]	; 27858 <myhtml_tokenizer_state_init@@Base+0x718>
   27428:	str	lr, [r3, #112]	; 0x70
   2742c:	ldr	lr, [r2, ip]
   27430:	ldr	ip, [pc, #1060]	; 2785c <myhtml_tokenizer_state_init@@Base+0x71c>
   27434:	str	lr, [r3, #116]	; 0x74
   27438:	ldr	lr, [r2, r1]
   2743c:	ldr	r1, [pc, #1052]	; 27860 <myhtml_tokenizer_state_init@@Base+0x720>
   27440:	str	lr, [r3, #120]	; 0x78
   27444:	ldr	lr, [r2, r0]
   27448:	ldr	r0, [pc, #1044]	; 27864 <myhtml_tokenizer_state_init@@Base+0x724>
   2744c:	str	lr, [r3, #124]	; 0x7c
   27450:	ldr	lr, [r2, ip]
   27454:	ldr	ip, [pc, #1036]	; 27868 <myhtml_tokenizer_state_init@@Base+0x728>
   27458:	str	lr, [r3, #128]	; 0x80
   2745c:	ldr	lr, [r2, r1]
   27460:	ldr	r1, [pc, #1028]	; 2786c <myhtml_tokenizer_state_init@@Base+0x72c>
   27464:	str	lr, [r3, #276]	; 0x114
   27468:	ldr	lr, [r2, r0]
   2746c:	ldr	r0, [pc, #1020]	; 27870 <myhtml_tokenizer_state_init@@Base+0x730>
   27470:	str	lr, [r3, #280]	; 0x118
   27474:	ldr	lr, [r2, ip]
   27478:	ldr	ip, [pc, #1012]	; 27874 <myhtml_tokenizer_state_init@@Base+0x734>
   2747c:	str	lr, [r3, #308]	; 0x134
   27480:	ldr	lr, [r2, r1]
   27484:	ldr	r1, [pc, #1004]	; 27878 <myhtml_tokenizer_state_init@@Base+0x738>
   27488:	str	lr, [r3, #316]	; 0x13c
   2748c:	ldr	lr, [r2, r0]
   27490:	ldr	r0, [pc, #996]	; 2787c <myhtml_tokenizer_state_init@@Base+0x73c>
   27494:	str	lr, [r3, #312]	; 0x138
   27498:	ldr	lr, [r2, ip]
   2749c:	ldr	ip, [pc, #988]	; 27880 <myhtml_tokenizer_state_init@@Base+0x740>
   274a0:	str	lr, [r3, #448]	; 0x1c0
   274a4:	ldr	lr, [r2, r1]
   274a8:	ldr	r1, [pc, #980]	; 27884 <myhtml_tokenizer_state_init@@Base+0x744>
   274ac:	str	lr, [r3, #456]	; 0x1c8
   274b0:	ldr	lr, [r2, r0]
   274b4:	ldr	r0, [pc, #972]	; 27888 <myhtml_tokenizer_state_init@@Base+0x748>
   274b8:	str	lr, [r3, #412]	; 0x19c
   274bc:	ldr	lr, [r2, ip]
   274c0:	ldr	ip, [pc, #964]	; 2788c <myhtml_tokenizer_state_init@@Base+0x74c>
   274c4:	str	lr, [r3, #416]	; 0x1a0
   274c8:	ldr	lr, [r2, r1]
   274cc:	ldr	r1, [pc, #956]	; 27890 <myhtml_tokenizer_state_init@@Base+0x750>
   274d0:	str	lr, [r3, #420]	; 0x1a4
   274d4:	ldr	lr, [r2, r0]
   274d8:	ldr	r0, [pc, #948]	; 27894 <myhtml_tokenizer_state_init@@Base+0x754>
   274dc:	str	lr, [r3, #424]	; 0x1a8
   274e0:	ldr	lr, [r2, ip]
   274e4:	ldr	ip, [pc, #940]	; 27898 <myhtml_tokenizer_state_init@@Base+0x758>
   274e8:	str	lr, [r3, #428]	; 0x1ac
   274ec:	ldr	lr, [r2, r1]
   274f0:	ldr	r1, [pc, #932]	; 2789c <myhtml_tokenizer_state_init@@Base+0x75c>
   274f4:	str	lr, [r3, #432]	; 0x1b0
   274f8:	ldr	lr, [r2, r0]
   274fc:	ldr	r0, [pc, #924]	; 278a0 <myhtml_tokenizer_state_init@@Base+0x760>
   27500:	str	lr, [r3, #436]	; 0x1b4
   27504:	ldr	lr, [r2, ip]
   27508:	ldr	ip, [pc, #916]	; 278a4 <myhtml_tokenizer_state_init@@Base+0x764>
   2750c:	str	lr, [r3, #444]	; 0x1bc
   27510:	ldr	lr, [r2, r1]
   27514:	ldr	r1, [pc, #908]	; 278a8 <myhtml_tokenizer_state_init@@Base+0x768>
   27518:	str	lr, [r3, #460]	; 0x1cc
   2751c:	ldr	lr, [r2, r0]
   27520:	ldr	r0, [pc, #900]	; 278ac <myhtml_tokenizer_state_init@@Base+0x76c>
   27524:	str	lr, [r3, #464]	; 0x1d0
   27528:	ldr	lr, [r2, ip]
   2752c:	ldr	ip, [pc, #892]	; 278b0 <myhtml_tokenizer_state_init@@Base+0x770>
   27530:	str	lr, [r3, #468]	; 0x1d4
   27534:	ldr	lr, [r2, r1]
   27538:	ldr	r1, [pc, #884]	; 278b4 <myhtml_tokenizer_state_init@@Base+0x774>
   2753c:	str	lr, [r3, #476]	; 0x1dc
   27540:	ldr	lr, [r2, r0]
   27544:	ldr	r0, [pc, #876]	; 278b8 <myhtml_tokenizer_state_init@@Base+0x778>
   27548:	str	lr, [r3, #472]	; 0x1d8
   2754c:	ldr	lr, [r2, ip]
   27550:	ldr	ip, [pc, #868]	; 278bc <myhtml_tokenizer_state_init@@Base+0x77c>
   27554:	str	lr, [r3, #480]	; 0x1e0
   27558:	ldr	lr, [r2, r1]
   2755c:	ldr	r1, [pc, #860]	; 278c0 <myhtml_tokenizer_state_init@@Base+0x780>
   27560:	str	lr, [r3, #452]	; 0x1c4
   27564:	ldr	lr, [r2, r0]
   27568:	ldr	r0, [pc, #852]	; 278c4 <myhtml_tokenizer_state_init@@Base+0x784>
   2756c:	str	lr, [r3, #548]	; 0x224
   27570:	ldr	lr, [r2, ip]
   27574:	ldr	ip, [pc, #844]	; 278c8 <myhtml_tokenizer_state_init@@Base+0x788>
   27578:	str	lr, [r3, #288]	; 0x120
   2757c:	ldr	lr, [r2, r1]
   27580:	ldr	r1, [pc, #836]	; 278cc <myhtml_tokenizer_state_init@@Base+0x78c>
   27584:	str	lr, [r3, #320]	; 0x140
   27588:	ldr	lr, [r2, r0]
   2758c:	ldr	r0, [pc, #828]	; 278d0 <myhtml_tokenizer_state_init@@Base+0x790>
   27590:	str	lr, [r3, #324]	; 0x144
   27594:	ldr	lr, [r2, ip]
   27598:	ldr	ip, [pc, #820]	; 278d4 <myhtml_tokenizer_state_init@@Base+0x794>
   2759c:	str	lr, [r3, #328]	; 0x148
   275a0:	ldr	lr, [r2, r1]
   275a4:	ldr	r1, [pc, #812]	; 278d8 <myhtml_tokenizer_state_init@@Base+0x798>
   275a8:	str	lr, [r3, #296]	; 0x128
   275ac:	ldr	lr, [r2, r0]
   275b0:	ldr	r0, [pc, #804]	; 278dc <myhtml_tokenizer_state_init@@Base+0x79c>
   275b4:	str	lr, [r3, #332]	; 0x14c
   275b8:	ldr	lr, [r2, ip]
   275bc:	ldr	ip, [pc, #796]	; 278e0 <myhtml_tokenizer_state_init@@Base+0x7a0>
   275c0:	str	lr, [r3, #336]	; 0x150
   275c4:	ldr	lr, [r2, r1]
   275c8:	ldr	r1, [pc, #788]	; 278e4 <myhtml_tokenizer_state_init@@Base+0x7a4>
   275cc:	str	lr, [r3, #340]	; 0x154
   275d0:	ldr	lr, [r2, r0]
   275d4:	ldr	r0, [pc, #780]	; 278e8 <myhtml_tokenizer_state_init@@Base+0x7a8>
   275d8:	str	lr, [r3, #304]	; 0x130
   275dc:	ldr	lr, [r2, ip]
   275e0:	ldr	ip, [pc, #772]	; 278ec <myhtml_tokenizer_state_init@@Base+0x7ac>
   275e4:	str	lr, [r3, #484]	; 0x1e4
   275e8:	ldr	lr, [r2, r1]
   275ec:	ldr	r1, [pc, #764]	; 278f0 <myhtml_tokenizer_state_init@@Base+0x7b0>
   275f0:	str	lr, [r3, #488]	; 0x1e8
   275f4:	ldr	lr, [r2, r0]
   275f8:	ldr	r0, [pc, #756]	; 278f4 <myhtml_tokenizer_state_init@@Base+0x7b4>
   275fc:	str	lr, [r3, #492]	; 0x1ec
   27600:	ldr	lr, [r2, ip]
   27604:	ldr	ip, [pc, #748]	; 278f8 <myhtml_tokenizer_state_init@@Base+0x7b8>
   27608:	str	lr, [r3, #496]	; 0x1f0
   2760c:	ldr	lr, [r2, r1]
   27610:	ldr	r1, [pc, #740]	; 278fc <myhtml_tokenizer_state_init@@Base+0x7bc>
   27614:	str	lr, [r3, #552]	; 0x228
   27618:	ldr	lr, [r2, r0]
   2761c:	ldr	r0, [pc, #732]	; 27900 <myhtml_tokenizer_state_init@@Base+0x7c0>
   27620:	str	lr, [r3, #504]	; 0x1f8
   27624:	ldr	lr, [r2, ip]
   27628:	ldr	ip, [pc, #724]	; 27904 <myhtml_tokenizer_state_init@@Base+0x7c4>
   2762c:	str	lr, [r3, #508]	; 0x1fc
   27630:	ldr	lr, [r2, r1]
   27634:	ldr	r1, [pc, #716]	; 27908 <myhtml_tokenizer_state_init@@Base+0x7c8>
   27638:	str	lr, [r3, #512]	; 0x200
   2763c:	ldr	lr, [r2, r0]
   27640:	ldr	r0, [pc, #708]	; 2790c <myhtml_tokenizer_state_init@@Base+0x7cc>
   27644:	str	lr, [r3, #516]	; 0x204
   27648:	ldr	lr, [r2, ip]
   2764c:	ldr	ip, [pc, #700]	; 27910 <myhtml_tokenizer_state_init@@Base+0x7d0>
   27650:	str	lr, [r3, #532]	; 0x214
   27654:	ldr	lr, [r2, r1]
   27658:	ldr	r1, [pc, #692]	; 27914 <myhtml_tokenizer_state_init@@Base+0x7d4>
   2765c:	str	lr, [r3, #536]	; 0x218
   27660:	ldr	lr, [r2, r0]
   27664:	ldr	r0, [pc, #684]	; 27918 <myhtml_tokenizer_state_init@@Base+0x7d8>
   27668:	str	lr, [r3, #540]	; 0x21c
   2766c:	ldr	lr, [r2, ip]
   27670:	ldr	ip, [pc, #676]	; 2791c <myhtml_tokenizer_state_init@@Base+0x7dc>
   27674:	str	lr, [r3, #544]	; 0x220
   27678:	ldr	lr, [r2, r1]
   2767c:	ldr	r1, [pc, #668]	; 27920 <myhtml_tokenizer_state_init@@Base+0x7e0>
   27680:	str	lr, [r3, #300]	; 0x12c
   27684:	ldr	lr, [r2, r0]
   27688:	ldr	r0, [pc, #660]	; 27924 <myhtml_tokenizer_state_init@@Base+0x7e4>
   2768c:	str	lr, [r3, #344]	; 0x158
   27690:	ldr	lr, [r2, ip]
   27694:	ldr	ip, [pc, #652]	; 27928 <myhtml_tokenizer_state_init@@Base+0x7e8>
   27698:	str	lr, [r3, #348]	; 0x15c
   2769c:	ldr	lr, [r2, r1]
   276a0:	ldr	r1, [pc, #644]	; 2792c <myhtml_tokenizer_state_init@@Base+0x7ec>
   276a4:	str	lr, [r3, #352]	; 0x160
   276a8:	ldr	lr, [r2, r0]
   276ac:	ldr	r0, [pc, #636]	; 27930 <myhtml_tokenizer_state_init@@Base+0x7f0>
   276b0:	str	lr, [r3, #356]	; 0x164
   276b4:	ldr	lr, [r2, ip]
   276b8:	ldr	ip, [pc, #628]	; 27934 <myhtml_tokenizer_state_init@@Base+0x7f4>
   276bc:	str	lr, [r3, #360]	; 0x168
   276c0:	ldr	lr, [r2, r1]
   276c4:	ldr	r1, [pc, #620]	; 27938 <myhtml_tokenizer_state_init@@Base+0x7f8>
   276c8:	str	lr, [r3, #364]	; 0x16c
   276cc:	ldr	lr, [r2, r0]
   276d0:	ldr	r0, [pc, #612]	; 2793c <myhtml_tokenizer_state_init@@Base+0x7fc>
   276d4:	str	lr, [r3, #368]	; 0x170
   276d8:	ldr	lr, [r2, ip]
   276dc:	ldr	ip, [pc, #604]	; 27940 <myhtml_tokenizer_state_init@@Base+0x800>
   276e0:	str	lr, [r3, #372]	; 0x174
   276e4:	ldr	lr, [r2, r1]
   276e8:	ldr	r1, [pc, #596]	; 27944 <myhtml_tokenizer_state_init@@Base+0x804>
   276ec:	str	lr, [r3, #376]	; 0x178
   276f0:	ldr	lr, [r2, r0]
   276f4:	ldr	r0, [pc, #588]	; 27948 <myhtml_tokenizer_state_init@@Base+0x808>
   276f8:	str	lr, [r3, #380]	; 0x17c
   276fc:	ldr	lr, [r2, ip]
   27700:	ldr	ip, [pc, #580]	; 2794c <myhtml_tokenizer_state_init@@Base+0x80c>
   27704:	str	lr, [r3, #384]	; 0x180
   27708:	ldr	lr, [r2, r1]
   2770c:	ldr	r1, [pc, #572]	; 27950 <myhtml_tokenizer_state_init@@Base+0x810>
   27710:	str	lr, [r3, #388]	; 0x184
   27714:	ldr	lr, [r2, r0]
   27718:	ldr	r0, [pc, #564]	; 27954 <myhtml_tokenizer_state_init@@Base+0x814>
   2771c:	str	lr, [r3, #392]	; 0x188
   27720:	ldr	lr, [r2, ip]
   27724:	ldr	ip, [pc, #556]	; 27958 <myhtml_tokenizer_state_init@@Base+0x818>
   27728:	str	lr, [r3, #396]	; 0x18c
   2772c:	ldr	lr, [r2, r1]
   27730:	ldr	r1, [pc, #548]	; 2795c <myhtml_tokenizer_state_init@@Base+0x81c>
   27734:	str	lr, [r3, #400]	; 0x190
   27738:	ldr	lr, [r2, r0]
   2773c:	mov	r0, #0
   27740:	str	lr, [r3, #404]	; 0x194
   27744:	ldr	ip, [r2, ip]
   27748:	str	ip, [r3, #408]	; 0x198
   2774c:	ldr	r2, [r2, r1]
   27750:	str	r2, [r3, #556]	; 0x22c
   27754:	pop	{r4, pc}
   27758:	ldr	r0, [pc, #512]	; 27960 <myhtml_tokenizer_state_init@@Base+0x820>
   2775c:	pop	{r4, pc}
   27760:	muleq	r0, r4, ip
   27764:	andeq	sp, lr, r4, lsr #29
   27768:	muleq	r0, r0, r7
   2776c:	andeq	r0, r0, r0, lsr r9
   27770:	andeq	r0, r0, ip, ror #17
   27774:	andeq	r0, r0, ip, asr r9
   27778:	andeq	r0, r0, r0, lsl #15
   2777c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27780:	andeq	r0, r0, ip, asr #17
   27784:	andeq	r0, r0, r8, lsl #14
   27788:	andeq	r0, r0, r8, lsr r9
   2778c:	andeq	r0, r0, r8, ror r9
   27790:	andeq	r0, r0, r0, lsr #18
   27794:	andeq	r0, r0, ip, lsl #18
   27798:	andeq	r0, r0, r4, asr r9
   2779c:	andeq	r0, r0, ip, lsr r8
   277a0:	andeq	r0, r0, ip, ror #18
   277a4:	andeq	r0, r0, ip, asr r8
   277a8:	andeq	r0, r0, r8, lsl #18
   277ac:	andeq	r0, r0, ip, lsl #14
   277b0:			; <UNDEFINED> instruction: 0x000007b0
   277b4:	muleq	r0, r4, r8
   277b8:	muleq	r0, r8, r7
   277bc:	andeq	r0, r0, r8, asr #19
   277c0:	andeq	r0, r0, r4, lsr #17
   277c4:	andeq	r0, r0, r8, asr #15
   277c8:	andeq	r0, r0, ip, lsr #14
   277cc:	andeq	r0, r0, ip, asr #15
   277d0:	andeq	r0, r0, ip, ror r7
   277d4:	andeq	r0, r0, ip, ror #15
   277d8:	andeq	r0, r0, r8, asr r7
   277dc:	andeq	r0, r0, r0, ror #18
   277e0:			; <UNDEFINED> instruction: 0x000009b0
   277e4:	andeq	r0, r0, ip, lsl #16
   277e8:	andeq	r0, r0, r4, lsl r7
   277ec:	andeq	r0, r0, r4, asr r8
   277f0:	muleq	r0, r0, r9
   277f4:	andeq	r0, r0, ip, ror r8
   277f8:			; <UNDEFINED> instruction: 0x000007b4
   277fc:	andeq	r0, r0, ip, ror #16
   27800:	andeq	r0, r0, r0, lsl #17
   27804:	andeq	r0, r0, r0, asr #19
   27808:	andeq	r0, r0, ip, ror #14
   2780c:	andeq	r0, r0, ip, lsl r8
   27810:	andeq	r0, r0, r0, asr #15
   27814:	andeq	r0, r0, ip, lsr #16
   27818:			; <UNDEFINED> instruction: 0x000007bc
   2781c:	andeq	r0, r0, r4, lsr #16
   27820:	andeq	r0, r0, r0, ror #15
   27824:	andeq	r0, r0, r8, ror #18
   27828:	strdeq	r0, [r0], -ip
   2782c:	andeq	r0, r0, r8, asr r8
   27830:	andeq	r0, r0, r4, lsl #18
   27834:	andeq	r0, r0, r0, lsr r8
   27838:	andeq	r0, r0, r0, asr r8
   2783c:	muleq	r0, ip, r9
   27840:	muleq	r0, r4, r7
   27844:	andeq	r0, r0, r0, lsr #15
   27848:	andeq	r0, r0, r8, lsl r8
   2784c:	andeq	r0, r0, ip, asr #18
   27850:	andeq	r0, r0, r8, lsr r7
   27854:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27858:	andeq	r0, r0, r4, asr #15
   2785c:	andeq	r0, r0, r0, lsl r9
   27860:	andeq	r0, r0, r4, lsr #15
   27864:	andeq	r0, r0, r8, ror #15
   27868:	andeq	r0, r0, r0, lsl r8
   2786c:	muleq	r0, r4, r9
   27870:	muleq	r0, r8, r9
   27874:	ldrdeq	r0, [r0], -r4
   27878:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2787c:	strdeq	r0, [r0], -r4
   27880:	andeq	r0, r0, r0, asr #18
   27884:	andeq	r0, r0, ip, asr r7
   27888:			; <UNDEFINED> instruction: 0x000008b0
   2788c:	andeq	r0, r0, r4, lsr r8
   27890:	strdeq	r0, [r0], -ip
   27894:	andeq	r0, r0, r4, ror #15
   27898:	andeq	r0, r0, r4, asr #17
   2789c:	andeq	r0, r0, r0, ror r9
   278a0:	ldrdeq	r0, [r0], -r8
   278a4:	andeq	r0, r0, r0, lsr #17
   278a8:	andeq	r0, r0, ip, lsl #15
   278ac:	andeq	r0, r0, ip, lsr #19
   278b0:	andeq	r0, r0, r4, lsl #15
   278b4:	andeq	r0, r0, r4, ror #16
   278b8:	strdeq	r0, [r0], -r8
   278bc:	andeq	r0, r0, r0, asr r9
   278c0:	muleq	r0, ip, r7
   278c4:	andeq	r0, r0, r0, ror #17
   278c8:			; <UNDEFINED> instruction: 0x000008bc
   278cc:	andeq	r0, r0, r4, ror r8
   278d0:	andeq	r0, r0, r4, asr #19
   278d4:	andeq	r0, r0, r8, ror #17
   278d8:			; <UNDEFINED> instruction: 0x000008b4
   278dc:	andeq	r0, r0, r8, asr #16
   278e0:	andeq	r0, r0, ip, lsl r7
   278e4:	andeq	r0, r0, r8, lsl r9
   278e8:	andeq	r0, r0, r8, lsr #14
   278ec:	andeq	r0, r0, ip, lsr r7
   278f0:	andeq	r0, r0, r8, asr #14
   278f4:	andeq	r0, r0, ip, lsl #17
   278f8:	andeq	r0, r0, r8, asr #18
   278fc:	andeq	r0, r0, r8, lsl #15
   27900:			; <UNDEFINED> instruction: 0x000009b4
   27904:	andeq	r0, r0, r8, lsl #19
   27908:			; <UNDEFINED> instruction: 0x000008b8
   2790c:	andeq	r0, r0, r0, lsl #19
   27910:	andeq	r0, r0, r0, ror #16
   27914:			; <UNDEFINED> instruction: 0x000007b8
   27918:	muleq	r0, r0, r8
   2791c:	ldrdeq	r0, [r0], -ip
   27920:	ldrdeq	r0, [r0], -r8
   27924:	andeq	r0, r0, r4, lsr r9
   27928:	andeq	r0, r0, r4, lsl r8
   2792c:	andeq	r0, r0, r0, lsl r7
   27930:	andeq	r0, r0, r4, lsr #19
   27934:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   27938:			; <UNDEFINED> instruction: 0x000009bc
   2793c:	andeq	r0, r0, r0, asr r7
   27940:	andeq	r0, r0, r8, asr #17
   27944:	strdeq	r0, [r0], -r8
   27948:	andeq	r0, r0, r4, asr #16
   2794c:	andeq	r0, r0, r4, asr #18
   27950:	andeq	r0, r0, r0, asr #16
   27954:	andeq	r0, r0, r0, asr #17
   27958:	ldrdeq	r0, [r0], -r4
   2795c:	andeq	r0, r0, r8, lsl #16
   27960:	andeq	r9, r0, ip, lsr #2

00027964 <myhtml_tokenizer_state_destroy@@Base>:
   27964:	ldr	r0, [r0, #24]
   27968:	cmp	r0, #0
   2796c:	bxeq	lr
   27970:	b	10dcc <mycore_free@plt>

00027974 <myhtml_tokenizer_state_doctype@@Base>:
   27974:	mov	r2, #52	; 0x34
   27978:	str	r2, [r0, #160]	; 0xa0
   2797c:	mov	r0, r3
   27980:	bx	lr

00027984 <myhtml_tokenizer_state_before_doctype_name@@Base>:
   27984:	push	{r4, r5, r6, lr}
   27988:	add	ip, r2, r3
   2798c:	ldrb	lr, [r2, r3]
   27990:	ldr	r5, [sp, #16]
   27994:	mov	r4, r3
   27998:	sub	r6, lr, #9
   2799c:	uxtb	r6, r6
   279a0:	cmp	r6, #23
   279a4:	bls	279b8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x34>
   279a8:	cmp	r3, r5
   279ac:	bcc	279f8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x74>
   279b0:	mov	r0, r4
   279b4:	pop	{r4, r5, r6, pc}
   279b8:	ldr	r2, [pc, #284]	; 27adc <myhtml_tokenizer_state_before_doctype_name@@Base+0x158>
   279bc:	mvn	r6, r2, lsr r6
   279c0:	tst	r6, #1
   279c4:	bne	279a8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x24>
   279c8:	cmp	r3, r5
   279cc:	bcs	279b0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   279d0:	mov	r3, r2
   279d4:	add	r4, r4, #1
   279d8:	cmp	r5, r4
   279dc:	beq	279b0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   279e0:	ldrb	lr, [ip, #1]!
   279e4:	sub	r2, lr, #9
   279e8:	uxtb	r2, r2
   279ec:	cmp	r2, #23
   279f0:	mvn	r2, r3, lsr r2
   279f4:	bls	27a48 <myhtml_tokenizer_state_before_doctype_name@@Base+0xc4>
   279f8:	cmp	lr, #62	; 0x3e
   279fc:	beq	27a54 <myhtml_tokenizer_state_before_doctype_name@@Base+0xd0>
   27a00:	ldr	r2, [r1, #40]	; 0x28
   27a04:	cmp	r2, #0
   27a08:	beq	27a9c <myhtml_tokenizer_state_before_doctype_name@@Base+0x118>
   27a0c:	ldr	r2, [r1, #44]	; 0x2c
   27a10:	ldr	r3, [r0, #56]	; 0x38
   27a14:	mov	ip, #0
   27a18:	str	r3, [r2]
   27a1c:	str	r2, [r3, #4]
   27a20:	str	r3, [r1, #44]	; 0x2c
   27a24:	str	ip, [r3]
   27a28:	str	r3, [r0, #56]	; 0x38
   27a2c:	ldr	r2, [r0, #192]	; 0xc0
   27a30:	mov	r1, #53	; 0x35
   27a34:	add	r2, r2, r4
   27a38:	str	r2, [r3, #48]	; 0x30
   27a3c:	str	r1, [r0, #160]	; 0xa0
   27a40:	mov	r0, r4
   27a44:	pop	{r4, r5, r6, pc}
   27a48:	tst	r2, #1
   27a4c:	beq	279d4 <myhtml_tokenizer_state_before_doctype_name@@Base+0x50>
   27a50:	b	27a00 <myhtml_tokenizer_state_before_doctype_name@@Base+0x7c>
   27a54:	ldr	r2, [r1, #32]
   27a58:	ldr	r3, [r0, #192]	; 0xc0
   27a5c:	add	r4, r4, #1
   27a60:	sub	r3, r3, r2
   27a64:	add	r3, r3, r4
   27a68:	mov	r2, #1
   27a6c:	str	r2, [r0, #176]	; 0xb0
   27a70:	mov	r2, r1
   27a74:	str	r3, [r1, #36]	; 0x24
   27a78:	mov	r1, r4
   27a7c:	mov	r5, r0
   27a80:	bl	10028 <myhtml_queue_add@plt>
   27a84:	subs	r6, r0, #0
   27a88:	beq	27ab8 <myhtml_tokenizer_state_before_doctype_name@@Base+0x134>
   27a8c:	mov	r3, #69	; 0x45
   27a90:	str	r3, [r5, #160]	; 0xa0
   27a94:	mov	r4, #0
   27a98:	b	279b0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27a9c:	ldr	r3, [r0, #56]	; 0x38
   27aa0:	str	r3, [r1, #40]	; 0x28
   27aa4:	str	r3, [r1, #44]	; 0x2c
   27aa8:	str	r3, [r0, #56]	; 0x38
   27aac:	str	r2, [r3]
   27ab0:	str	r2, [r3, #4]
   27ab4:	b	27a2c <myhtml_tokenizer_state_before_doctype_name@@Base+0xa8>
   27ab8:	ldr	r3, [r5, #8]
   27abc:	mov	r0, r3
   27ac0:	ldr	r1, [r3, #16]
   27ac4:	bl	10904 <myhtml_token_attr_create@plt>
   27ac8:	cmp	r0, #0
   27acc:	str	r0, [r5, #56]	; 0x38
   27ad0:	strne	r6, [r5, #160]	; 0xa0
   27ad4:	bne	279b0 <myhtml_tokenizer_state_before_doctype_name@@Base+0x2c>
   27ad8:	b	27a8c <myhtml_tokenizer_state_before_doctype_name@@Base+0x108>
   27adc:	addeq	r0, r0, fp, lsl r0

00027ae0 <myhtml_tokenizer_state_doctype_name@@Base>:
   27ae0:	push	{r4, r5, r6, lr}
   27ae4:	mov	r4, r3
   27ae8:	ldr	lr, [sp, #16]
   27aec:	cmp	r3, lr
   27af0:	bcs	27c30 <myhtml_tokenizer_state_doctype_name@@Base+0x150>
   27af4:	ldrb	r3, [r2, r3]
   27af8:	mov	r5, r0
   27afc:	add	r2, r2, r4
   27b00:	cmp	r3, #62	; 0x3e
   27b04:	beq	27bb8 <myhtml_tokenizer_state_doctype_name@@Base+0xd8>
   27b08:	sub	r3, r3, #9
   27b0c:	uxtb	r3, r3
   27b10:	cmp	r3, #23
   27b14:	bhi	27b28 <myhtml_tokenizer_state_doctype_name@@Base+0x48>
   27b18:	ldr	r0, [pc, #280]	; 27c38 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   27b1c:	mvn	r3, r0, lsr r3
   27b20:	tst	r3, #1
   27b24:	beq	27b70 <myhtml_tokenizer_state_doctype_name@@Base+0x90>
   27b28:	ldr	r0, [pc, #264]	; 27c38 <myhtml_tokenizer_state_doctype_name@@Base+0x158>
   27b2c:	b	27b58 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   27b30:	ldrb	r3, [r2, #1]!
   27b34:	sub	ip, r3, #9
   27b38:	cmp	r3, #62	; 0x3e
   27b3c:	uxtb	ip, ip
   27b40:	beq	27bb8 <myhtml_tokenizer_state_doctype_name@@Base+0xd8>
   27b44:	cmp	ip, #23
   27b48:	mvn	r3, r0, lsr ip
   27b4c:	bhi	27b58 <myhtml_tokenizer_state_doctype_name@@Base+0x78>
   27b50:	tst	r3, #1
   27b54:	beq	27b70 <myhtml_tokenizer_state_doctype_name@@Base+0x90>
   27b58:	add	r4, r4, #1
   27b5c:	cmp	lr, r4
   27b60:	bne	27b30 <myhtml_tokenizer_state_doctype_name@@Base+0x50>
   27b64:	mov	r6, lr
   27b68:	mov	r0, r6
   27b6c:	pop	{r4, r5, r6, pc}
   27b70:	ldr	r1, [r5, #56]	; 0x38
   27b74:	ldr	r3, [r5, #192]	; 0xc0
   27b78:	ldr	r2, [r5, #8]
   27b7c:	ldr	ip, [r1, #48]	; 0x30
   27b80:	mov	r0, r2
   27b84:	sub	r3, r3, ip
   27b88:	add	r3, r3, r4
   27b8c:	str	r3, [r1, #52]	; 0x34
   27b90:	ldr	r1, [r2, #16]
   27b94:	bl	10904 <myhtml_token_attr_create@plt>
   27b98:	cmp	r0, #0
   27b9c:	str	r0, [r5, #56]	; 0x38
   27ba0:	beq	27c1c <myhtml_tokenizer_state_doctype_name@@Base+0x13c>
   27ba4:	add	r6, r4, #1
   27ba8:	mov	r3, #54	; 0x36
   27bac:	str	r3, [r5, #160]	; 0xa0
   27bb0:	mov	r0, r6
   27bb4:	pop	{r4, r5, r6, pc}
   27bb8:	ldr	r0, [r5, #56]	; 0x38
   27bbc:	ldr	r3, [r5, #192]	; 0xc0
   27bc0:	ldr	r2, [r1, #32]
   27bc4:	ldr	ip, [r0, #48]	; 0x30
   27bc8:	sub	r2, r3, r2
   27bcc:	add	r6, r4, #1
   27bd0:	sub	r3, r3, ip
   27bd4:	add	r4, r3, r4
   27bd8:	add	r3, r2, r6
   27bdc:	str	r4, [r0, #52]	; 0x34
   27be0:	mov	r2, r1
   27be4:	str	r3, [r1, #36]	; 0x24
   27be8:	mov	r0, r5
   27bec:	mov	r1, r6
   27bf0:	bl	10028 <myhtml_queue_add@plt>
   27bf4:	subs	r4, r0, #0
   27bf8:	bne	27c1c <myhtml_tokenizer_state_doctype_name@@Base+0x13c>
   27bfc:	ldr	r3, [r5, #8]
   27c00:	mov	r0, r3
   27c04:	ldr	r1, [r3, #16]
   27c08:	bl	10904 <myhtml_token_attr_create@plt>
   27c0c:	cmp	r0, #0
   27c10:	str	r0, [r5, #56]	; 0x38
   27c14:	strne	r4, [r5, #160]	; 0xa0
   27c18:	bne	27bb0 <myhtml_tokenizer_state_doctype_name@@Base+0xd0>
   27c1c:	mov	r3, #69	; 0x45
   27c20:	mov	r6, #0
   27c24:	str	r3, [r5, #160]	; 0xa0
   27c28:	mov	r0, r6
   27c2c:	pop	{r4, r5, r6, pc}
   27c30:	mov	r6, r3
   27c34:	b	27bb0 <myhtml_tokenizer_state_doctype_name@@Base+0xd0>
   27c38:	addeq	r0, r0, fp, lsl r0

00027c3c <myhtml_tokenizer_state_after_doctype_name@@Base>:
   27c3c:	push	{r4, r5, r6, lr}
   27c40:	mov	r4, r3
   27c44:	ldrb	lr, [r2, r3]
   27c48:	ldr	r5, [sp, #16]
   27c4c:	add	r2, r2, r3
   27c50:	sub	r6, lr, #9
   27c54:	uxtb	r6, r6
   27c58:	cmp	r6, #23
   27c5c:	bls	27c70 <myhtml_tokenizer_state_after_doctype_name@@Base+0x34>
   27c60:	cmp	r3, r5
   27c64:	bcc	27cb0 <myhtml_tokenizer_state_after_doctype_name@@Base+0x74>
   27c68:	mov	r0, r4
   27c6c:	pop	{r4, r5, r6, pc}
   27c70:	ldr	ip, [pc, #168]	; 27d20 <myhtml_tokenizer_state_after_doctype_name@@Base+0xe4>
   27c74:	mvn	r6, ip, lsr r6
   27c78:	tst	r6, #1
   27c7c:	bne	27c60 <myhtml_tokenizer_state_after_doctype_name@@Base+0x24>
   27c80:	cmp	r3, r5
   27c84:	bcs	27c68 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27c88:	mov	r3, ip
   27c8c:	add	r4, r4, #1
   27c90:	cmp	r5, r4
   27c94:	beq	27c68 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27c98:	ldrb	lr, [r2, #1]!
   27c9c:	sub	ip, lr, #9
   27ca0:	uxtb	ip, ip
   27ca4:	cmp	ip, #23
   27ca8:	mvn	ip, r3, lsr ip
   27cac:	bls	27cd4 <myhtml_tokenizer_state_after_doctype_name@@Base+0x98>
   27cb0:	cmp	lr, #62	; 0x3e
   27cb4:	beq	27ce0 <myhtml_tokenizer_state_after_doctype_name@@Base+0xa4>
   27cb8:	ldr	r3, [r0, #192]	; 0xc0
   27cbc:	mov	r2, #68	; 0x44
   27cc0:	add	r3, r3, r4
   27cc4:	str	r3, [r1, #12]
   27cc8:	str	r2, [r0, #160]	; 0xa0
   27ccc:	mov	r0, r4
   27cd0:	pop	{r4, r5, r6, pc}
   27cd4:	tst	ip, #1
   27cd8:	beq	27c8c <myhtml_tokenizer_state_after_doctype_name@@Base+0x50>
   27cdc:	b	27cb8 <myhtml_tokenizer_state_after_doctype_name@@Base+0x7c>
   27ce0:	mov	r2, r1
   27ce4:	ldr	r3, [r0, #192]	; 0xc0
   27ce8:	ldr	r1, [r1, #32]
   27cec:	add	r4, r4, #1
   27cf0:	sub	r3, r3, r1
   27cf4:	add	r3, r3, r4
   27cf8:	str	r3, [r2, #36]	; 0x24
   27cfc:	mov	r1, r4
   27d00:	mov	r5, r0
   27d04:	bl	10028 <myhtml_queue_add@plt>
   27d08:	cmp	r0, #0
   27d0c:	movne	r3, #69	; 0x45
   27d10:	strne	r3, [r5, #160]	; 0xa0
   27d14:	movne	r4, #0
   27d18:	streq	r0, [r5, #160]	; 0xa0
   27d1c:	b	27c68 <myhtml_tokenizer_state_after_doctype_name@@Base+0x2c>
   27d20:	addeq	r0, r0, fp, lsl r0

00027d24 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base>:
   27d24:	push	{r4, r5, r6, r7, r8, lr}
   27d28:	ldr	ip, [r0, #192]	; 0xc0
   27d2c:	ldr	lr, [r1, #12]
   27d30:	ldr	r7, [sp, #24]
   27d34:	add	r5, lr, #6
   27d38:	add	ip, r7, ip
   27d3c:	cmp	r5, ip
   27d40:	bls	27d4c <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x28>
   27d44:	mov	r0, r7
   27d48:	pop	{r4, r5, r6, r7, r8, pc}
   27d4c:	mov	r2, #6
   27d50:	mov	r5, r1
   27d54:	mov	r1, lr
   27d58:	mov	r7, r3
   27d5c:	mov	r4, r0
   27d60:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   27d64:	ldr	r1, [pc, #368]	; 27edc <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1b8>
   27d68:	mov	r2, #6
   27d6c:	add	r1, pc, r1
   27d70:	mov	r6, r0
   27d74:	bl	102a4 <mycore_strncasecmp@plt>
   27d78:	cmp	r0, #0
   27d7c:	bne	27df4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0xd0>
   27d80:	ldr	r2, [r5, #40]	; 0x28
   27d84:	cmp	r2, #0
   27d88:	beq	27ec0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x19c>
   27d8c:	ldr	r2, [r5, #44]	; 0x2c
   27d90:	ldr	r3, [r4, #56]	; 0x38
   27d94:	str	r3, [r2]
   27d98:	str	r2, [r3, #4]
   27d9c:	str	r3, [r5, #44]	; 0x2c
   27da0:	str	r0, [r3]
   27da4:	str	r3, [r4, #56]	; 0x38
   27da8:	ldr	r0, [r4, #8]
   27dac:	ldr	ip, [r5, #12]
   27db0:	mov	r2, #6
   27db4:	ldr	r1, [r0, #16]
   27db8:	str	ip, [r3, #56]	; 0x38
   27dbc:	str	r2, [r3, #60]	; 0x3c
   27dc0:	bl	10904 <myhtml_token_attr_create@plt>
   27dc4:	cmp	r0, #0
   27dc8:	str	r0, [r4, #56]	; 0x38
   27dcc:	beq	27e94 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   27dd0:	ldr	r1, [r4, #76]	; 0x4c
   27dd4:	ldr	r2, [r5, #12]
   27dd8:	mov	r3, #56	; 0x38
   27ddc:	ldr	r1, [r1, #12]
   27de0:	add	r2, r2, #6
   27de4:	sub	r7, r2, r1
   27de8:	str	r3, [r4, #160]	; 0xa0
   27dec:	mov	r0, r7
   27df0:	pop	{r4, r5, r6, r7, r8, pc}
   27df4:	ldr	r1, [pc, #228]	; 27ee0 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x1bc>
   27df8:	mov	r0, r6
   27dfc:	mov	r2, #6
   27e00:	add	r1, pc, r1
   27e04:	bl	102a4 <mycore_strncasecmp@plt>
   27e08:	cmp	r0, #0
   27e0c:	bne	27e80 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x15c>
   27e10:	ldr	r2, [r5, #40]	; 0x28
   27e14:	cmp	r2, #0
   27e18:	beq	27ea4 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x180>
   27e1c:	ldr	r2, [r5, #44]	; 0x2c
   27e20:	ldr	r3, [r4, #56]	; 0x38
   27e24:	str	r3, [r2]
   27e28:	str	r2, [r3, #4]
   27e2c:	str	r3, [r5, #44]	; 0x2c
   27e30:	str	r0, [r3]
   27e34:	str	r3, [r4, #56]	; 0x38
   27e38:	ldr	r0, [r4, #8]
   27e3c:	ldr	ip, [r5, #12]
   27e40:	mov	r2, #6
   27e44:	ldr	r1, [r0, #16]
   27e48:	str	ip, [r3, #56]	; 0x38
   27e4c:	str	r2, [r3, #60]	; 0x3c
   27e50:	bl	10904 <myhtml_token_attr_create@plt>
   27e54:	cmp	r0, #0
   27e58:	str	r0, [r4, #56]	; 0x38
   27e5c:	beq	27e94 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x170>
   27e60:	ldr	r1, [r4, #76]	; 0x4c
   27e64:	ldr	r2, [r5, #12]
   27e68:	mov	r3, #59	; 0x3b
   27e6c:	ldr	r1, [r1, #12]
   27e70:	add	r2, r2, #6
   27e74:	sub	r7, r2, r1
   27e78:	str	r3, [r4, #160]	; 0xa0
   27e7c:	b	27d44 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   27e80:	mov	r1, #1
   27e84:	mov	r3, #66	; 0x42
   27e88:	str	r1, [r4, #176]	; 0xb0
   27e8c:	str	r3, [r4, #160]	; 0xa0
   27e90:	b	27d44 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   27e94:	mov	r3, #69	; 0x45
   27e98:	str	r3, [r4, #160]	; 0xa0
   27e9c:	mov	r7, #0
   27ea0:	b	27d44 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x20>
   27ea4:	ldr	r3, [r4, #56]	; 0x38
   27ea8:	str	r3, [r5, #40]	; 0x28
   27eac:	str	r3, [r5, #44]	; 0x2c
   27eb0:	str	r3, [r4, #56]	; 0x38
   27eb4:	str	r2, [r3]
   27eb8:	str	r2, [r3, #4]
   27ebc:	b	27e38 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x114>
   27ec0:	ldr	r3, [r4, #56]	; 0x38
   27ec4:	str	r3, [r5, #40]	; 0x28
   27ec8:	str	r3, [r5, #44]	; 0x2c
   27ecc:	str	r3, [r4, #56]	; 0x38
   27ed0:	str	r2, [r3]
   27ed4:	str	r2, [r3, #4]
   27ed8:	b	27da8 <myhtml_tokenizer_state_custom_after_doctype_name_a_z@@Base+0x84>
   27edc:	andeq	r2, sp, r8, asr #26
   27ee0:	andeq	r2, sp, ip, lsr #25

00027ee4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base>:
   27ee4:	push	{r4, r5, r6, lr}
   27ee8:	add	ip, r2, r3
   27eec:	ldrb	lr, [r2, r3]
   27ef0:	ldr	r5, [sp, #16]
   27ef4:	mov	r4, r3
   27ef8:	sub	r6, lr, #9
   27efc:	uxtb	r6, r6
   27f00:	cmp	r6, #23
   27f04:	bls	27f18 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x34>
   27f08:	cmp	r3, r5
   27f0c:	bcc	27f58 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x74>
   27f10:	mov	r0, r4
   27f14:	pop	{r4, r5, r6, pc}
   27f18:	ldr	r2, [pc, #268]	; 2802c <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x148>
   27f1c:	mvn	r6, r2, lsr r6
   27f20:	tst	r6, #1
   27f24:	bne	27f08 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x24>
   27f28:	cmp	r3, r5
   27f2c:	bcs	27f10 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   27f30:	mov	r3, r2
   27f34:	add	r4, r4, #1
   27f38:	cmp	r5, r4
   27f3c:	beq	27f10 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   27f40:	ldrb	lr, [ip, #1]!
   27f44:	sub	r2, lr, #9
   27f48:	uxtb	r2, r2
   27f4c:	cmp	r2, #23
   27f50:	mvn	r2, r3, lsr r2
   27f54:	bls	27f88 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xa4>
   27f58:	cmp	lr, #34	; 0x22
   27f5c:	bne	27f90 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xac>
   27f60:	ldr	r3, [r0, #192]	; 0xc0
   27f64:	ldr	r2, [r0, #56]	; 0x38
   27f68:	add	r3, r3, #1
   27f6c:	add	r3, r3, r4
   27f70:	mov	ip, #0
   27f74:	mov	r1, #57	; 0x39
   27f78:	str	r3, [r2, #56]	; 0x38
   27f7c:	str	ip, [r2, #60]	; 0x3c
   27f80:	str	r1, [r0, #160]	; 0xa0
   27f84:	b	27fb0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   27f88:	tst	r2, #1
   27f8c:	beq	27f34 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x50>
   27f90:	cmp	lr, #39	; 0x27
   27f94:	beq	27fbc <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xd8>
   27f98:	cmp	lr, #62	; 0x3e
   27f9c:	beq	27fe4 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x100>
   27fa0:	mov	r2, #1
   27fa4:	mov	r3, #66	; 0x42
   27fa8:	str	r2, [r0, #176]	; 0xb0
   27fac:	str	r3, [r0, #160]	; 0xa0
   27fb0:	add	r4, r4, #1
   27fb4:	mov	r0, r4
   27fb8:	pop	{r4, r5, r6, pc}
   27fbc:	ldr	r3, [r0, #192]	; 0xc0
   27fc0:	ldr	r2, [r0, #56]	; 0x38
   27fc4:	add	r3, r3, #1
   27fc8:	add	r3, r3, r4
   27fcc:	mov	ip, #0
   27fd0:	mov	r1, #58	; 0x3a
   27fd4:	str	r3, [r2, #56]	; 0x38
   27fd8:	str	ip, [r2, #60]	; 0x3c
   27fdc:	str	r1, [r0, #160]	; 0xa0
   27fe0:	b	27fb0 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0xcc>
   27fe4:	ldr	r2, [r1, #32]
   27fe8:	ldr	r3, [r0, #192]	; 0xc0
   27fec:	add	r4, r4, #1
   27ff0:	sub	r3, r3, r2
   27ff4:	add	r3, r3, r4
   27ff8:	mov	r2, #1
   27ffc:	str	r2, [r0, #176]	; 0xb0
   28000:	str	r3, [r1, #36]	; 0x24
   28004:	mov	r2, r1
   28008:	mov	r1, r4
   2800c:	mov	r5, r0
   28010:	bl	10028 <myhtml_queue_add@plt>
   28014:	cmp	r0, #0
   28018:	movne	r3, #69	; 0x45
   2801c:	strne	r3, [r5, #160]	; 0xa0
   28020:	movne	r4, #0
   28024:	streq	r0, [r5, #160]	; 0xa0
   28028:	b	27f10 <myhtml_tokenizer_state_before_doctype_public_identifier@@Base+0x2c>
   2802c:	addeq	r0, r0, fp, lsl r0

00028030 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base>:
   28030:	push	{r4, r5, r6, lr}
   28034:	mov	r6, r1
   28038:	ldr	ip, [sp, #16]
   2803c:	mov	r4, r3
   28040:	cmp	r3, ip
   28044:	ldrb	r1, [sp, #20]
   28048:	bcs	28124 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   2804c:	ldrb	r3, [r2, r3]
   28050:	mov	r5, r0
   28054:	add	r2, r2, r4
   28058:	cmp	r1, r3
   2805c:	bne	2807c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x4c>
   28060:	b	2812c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xfc>
   28064:	add	r4, r4, #1
   28068:	cmp	ip, r4
   2806c:	beq	281a8 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x178>
   28070:	ldrb	r3, [r2, #1]!
   28074:	cmp	r3, r1
   28078:	beq	2812c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xfc>
   2807c:	cmp	r3, #62	; 0x3e
   28080:	bne	28064 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x34>
   28084:	ldr	r3, [r5, #56]	; 0x38
   28088:	ldr	r1, [r5, #192]	; 0xc0
   2808c:	mov	ip, #1
   28090:	ldr	r0, [r3, #56]	; 0x38
   28094:	add	r2, r1, r4
   28098:	cmp	r0, r2
   2809c:	str	ip, [r5, #176]	; 0xb0
   280a0:	bcs	280f4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xc4>
   280a4:	ldr	r1, [r6, #40]	; 0x28
   280a8:	sub	r2, r2, r0
   280ac:	cmp	r1, #0
   280b0:	str	r2, [r3, #60]	; 0x3c
   280b4:	beq	281cc <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x19c>
   280b8:	ldr	r2, [r6, #44]	; 0x2c
   280bc:	mov	r1, #0
   280c0:	str	r3, [r2]
   280c4:	str	r2, [r3, #4]
   280c8:	str	r3, [r6, #44]	; 0x2c
   280cc:	str	r1, [r3]
   280d0:	str	r3, [r5, #56]	; 0x38
   280d4:	ldr	r3, [r5, #8]
   280d8:	mov	r0, r3
   280dc:	ldr	r1, [r3, #16]
   280e0:	bl	10904 <myhtml_token_attr_create@plt>
   280e4:	cmp	r0, #0
   280e8:	str	r0, [r5, #56]	; 0x38
   280ec:	beq	28194 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x164>
   280f0:	ldr	r1, [r5, #192]	; 0xc0
   280f4:	ldr	r3, [r6, #32]
   280f8:	add	r4, r4, #1
   280fc:	sub	r3, r4, r3
   28100:	add	r3, r3, r1
   28104:	str	r3, [r6, #36]	; 0x24
   28108:	mov	r2, r6
   2810c:	mov	r1, r4
   28110:	mov	r0, r5
   28114:	bl	10028 <myhtml_queue_add@plt>
   28118:	cmp	r0, #0
   2811c:	streq	r0, [r5, #160]	; 0xa0
   28120:	bne	28194 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x164>
   28124:	mov	r0, r4
   28128:	pop	{r4, r5, r6, pc}
   2812c:	ldr	r3, [r5, #56]	; 0x38
   28130:	ldr	r2, [r5, #192]	; 0xc0
   28134:	ldr	r1, [r6, #40]	; 0x28
   28138:	ldr	r0, [r3, #56]	; 0x38
   2813c:	cmp	r1, #0
   28140:	sub	r2, r2, r0
   28144:	add	r2, r2, r4
   28148:	str	r2, [r3, #60]	; 0x3c
   2814c:	beq	281b4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x184>
   28150:	ldr	r2, [r6, #44]	; 0x2c
   28154:	mov	r1, #0
   28158:	str	r3, [r2]
   2815c:	str	r2, [r3, #4]
   28160:	str	r3, [r6, #44]	; 0x2c
   28164:	str	r1, [r3]
   28168:	str	r3, [r5, #56]	; 0x38
   2816c:	ldr	r3, [r5, #8]
   28170:	mov	r0, r3
   28174:	ldr	r1, [r3, #16]
   28178:	bl	10904 <myhtml_token_attr_create@plt>
   2817c:	cmp	r0, #0
   28180:	movne	r3, #59	; 0x3b
   28184:	str	r0, [r5, #56]	; 0x38
   28188:	addne	r4, r4, #1
   2818c:	strne	r3, [r5, #160]	; 0xa0
   28190:	bne	28124 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xf4>
   28194:	mov	r3, #69	; 0x45
   28198:	mov	r4, #0
   2819c:	str	r3, [r5, #160]	; 0xa0
   281a0:	mov	r0, r4
   281a4:	pop	{r4, r5, r6, pc}
   281a8:	mov	r4, ip
   281ac:	mov	r0, r4
   281b0:	pop	{r4, r5, r6, pc}
   281b4:	str	r3, [r6, #40]	; 0x28
   281b8:	str	r3, [r6, #44]	; 0x2c
   281bc:	str	r3, [r5, #56]	; 0x38
   281c0:	str	r1, [r3]
   281c4:	str	r1, [r3, #4]
   281c8:	b	2816c <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0x13c>
   281cc:	str	r3, [r6, #40]	; 0x28
   281d0:	str	r3, [r6, #44]	; 0x2c
   281d4:	str	r3, [r5, #56]	; 0x38
   281d8:	str	r1, [r3]
   281dc:	str	r1, [r3, #4]
   281e0:	b	280d4 <myhtml_tokenizer_doctype_public_identifier_dsq@@Base+0xa4>

000281e4 <myhtml_tokenizer_state_doctype_public_identifier_double_quoted@@Base>:
   281e4:	push	{lr}		; (str lr, [sp, #-4]!)
   281e8:	sub	sp, sp, #12
   281ec:	mov	ip, #34	; 0x22
   281f0:	ldr	lr, [sp, #16]
   281f4:	str	ip, [sp, #4]
   281f8:	str	lr, [sp]
   281fc:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   28200:	add	sp, sp, #12
   28204:	pop	{pc}		; (ldr pc, [sp], #4)

00028208 <myhtml_tokenizer_state_doctype_public_identifier_single_quoted@@Base>:
   28208:	push	{lr}		; (str lr, [sp, #-4]!)
   2820c:	sub	sp, sp, #12
   28210:	mov	ip, #39	; 0x27
   28214:	ldr	lr, [sp, #16]
   28218:	str	ip, [sp, #4]
   2821c:	str	lr, [sp]
   28220:	bl	104d8 <myhtml_tokenizer_doctype_public_identifier_dsq@plt>
   28224:	add	sp, sp, #12
   28228:	pop	{pc}		; (ldr pc, [sp], #4)

0002822c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base>:
   2822c:	push	{r4, r5, r6, lr}
   28230:	mov	r4, r3
   28234:	ldrb	lr, [r2, r3]
   28238:	ldr	r5, [sp, #16]
   2823c:	add	r2, r2, r3
   28240:	sub	r6, lr, #9
   28244:	uxtb	r6, r6
   28248:	cmp	r6, #23
   2824c:	bls	28260 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x34>
   28250:	cmp	r3, r5
   28254:	bcc	282a0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x74>
   28258:	mov	r0, r4
   2825c:	pop	{r4, r5, r6, pc}
   28260:	ldr	ip, [pc, #264]	; 28370 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x144>
   28264:	mvn	r6, ip, lsr r6
   28268:	tst	r6, #1
   2826c:	bne	28250 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x24>
   28270:	cmp	r3, r5
   28274:	bcs	28258 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28278:	mov	r3, ip
   2827c:	add	r4, r4, #1
   28280:	cmp	r5, r4
   28284:	beq	28258 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28288:	ldrb	lr, [r2, #1]!
   2828c:	sub	ip, lr, #9
   28290:	uxtb	ip, ip
   28294:	cmp	ip, #23
   28298:	mvn	ip, r3, lsr ip
   2829c:	bls	282d8 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xac>
   282a0:	cmp	lr, #34	; 0x22
   282a4:	bne	282e0 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xb4>
   282a8:	ldr	r3, [r0, #192]	; 0xc0
   282ac:	ldr	r2, [r0, #56]	; 0x38
   282b0:	add	r3, r3, #1
   282b4:	add	r3, r3, r4
   282b8:	mov	ip, #0
   282bc:	mov	r1, #63	; 0x3f
   282c0:	str	r3, [r2, #56]	; 0x38
   282c4:	str	ip, [r2, #60]	; 0x3c
   282c8:	str	r1, [r0, #160]	; 0xa0
   282cc:	add	r4, r4, #1
   282d0:	mov	r0, r4
   282d4:	pop	{r4, r5, r6, pc}
   282d8:	tst	ip, #1
   282dc:	beq	2827c <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x50>
   282e0:	cmp	lr, #39	; 0x27
   282e4:	beq	28308 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xdc>
   282e8:	cmp	lr, #62	; 0x3e
   282ec:	beq	28330 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x104>
   282f0:	mov	r2, #1
   282f4:	mov	r3, #66	; 0x42
   282f8:	str	r2, [r0, #176]	; 0xb0
   282fc:	str	r3, [r0, #160]	; 0xa0
   28300:	mov	r0, r4
   28304:	pop	{r4, r5, r6, pc}
   28308:	ldr	r3, [r0, #192]	; 0xc0
   2830c:	ldr	r2, [r0, #56]	; 0x38
   28310:	add	r3, r3, #1
   28314:	add	r3, r3, r4
   28318:	mov	ip, #0
   2831c:	mov	r1, #64	; 0x40
   28320:	str	r3, [r2, #56]	; 0x38
   28324:	str	ip, [r2, #60]	; 0x3c
   28328:	str	r1, [r0, #160]	; 0xa0
   2832c:	b	282cc <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0xa0>
   28330:	mov	r2, r1
   28334:	ldr	r3, [r0, #192]	; 0xc0
   28338:	ldr	r1, [r1, #32]
   2833c:	add	r4, r4, #1
   28340:	sub	r3, r3, r1
   28344:	add	r3, r3, r4
   28348:	str	r3, [r2, #36]	; 0x24
   2834c:	mov	r1, r4
   28350:	mov	r5, r0
   28354:	bl	10028 <myhtml_queue_add@plt>
   28358:	cmp	r0, #0
   2835c:	movne	r3, #69	; 0x45
   28360:	strne	r3, [r5, #160]	; 0xa0
   28364:	movne	r4, #0
   28368:	streq	r0, [r5, #160]	; 0xa0
   2836c:	b	28258 <myhtml_tokenizer_state_after_doctype_public_identifier@@Base+0x2c>
   28370:	addeq	r0, r0, fp, lsl r0

00028374 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base>:
   28374:	push	{r4, r5, r6, lr}
   28378:	mov	r6, r1
   2837c:	ldr	ip, [sp, #16]
   28380:	mov	r4, r3
   28384:	cmp	r3, ip
   28388:	ldrb	r1, [sp, #20]
   2838c:	bcs	28468 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   28390:	ldrb	r3, [r2, r3]
   28394:	mov	r5, r0
   28398:	add	r2, r2, r4
   2839c:	cmp	r1, r3
   283a0:	bne	283c0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x4c>
   283a4:	b	28470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xfc>
   283a8:	add	r4, r4, #1
   283ac:	cmp	ip, r4
   283b0:	beq	284ec <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x178>
   283b4:	ldrb	r3, [r2, #1]!
   283b8:	cmp	r3, r1
   283bc:	beq	28470 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xfc>
   283c0:	cmp	r3, #62	; 0x3e
   283c4:	bne	283a8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x34>
   283c8:	ldr	r3, [r5, #56]	; 0x38
   283cc:	ldr	r1, [r5, #192]	; 0xc0
   283d0:	mov	ip, #1
   283d4:	ldr	r0, [r3, #56]	; 0x38
   283d8:	add	r2, r1, r4
   283dc:	cmp	r0, r2
   283e0:	str	ip, [r5, #176]	; 0xb0
   283e4:	bcs	28438 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xc4>
   283e8:	ldr	r1, [r6, #40]	; 0x28
   283ec:	sub	r2, r2, r0
   283f0:	cmp	r1, #0
   283f4:	str	r2, [r3, #60]	; 0x3c
   283f8:	beq	28510 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x19c>
   283fc:	ldr	r2, [r6, #44]	; 0x2c
   28400:	mov	r1, #0
   28404:	str	r3, [r2]
   28408:	str	r2, [r3, #4]
   2840c:	str	r3, [r6, #44]	; 0x2c
   28410:	str	r1, [r3]
   28414:	str	r3, [r5, #56]	; 0x38
   28418:	ldr	r3, [r5, #8]
   2841c:	mov	r0, r3
   28420:	ldr	r1, [r3, #16]
   28424:	bl	10904 <myhtml_token_attr_create@plt>
   28428:	cmp	r0, #0
   2842c:	str	r0, [r5, #56]	; 0x38
   28430:	beq	284d8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x164>
   28434:	ldr	r1, [r5, #192]	; 0xc0
   28438:	ldr	r3, [r6, #32]
   2843c:	add	r4, r4, #1
   28440:	sub	r3, r4, r3
   28444:	add	r3, r3, r1
   28448:	str	r3, [r6, #36]	; 0x24
   2844c:	mov	r2, r6
   28450:	mov	r1, r4
   28454:	mov	r0, r5
   28458:	bl	10028 <myhtml_queue_add@plt>
   2845c:	cmp	r0, #0
   28460:	streq	r0, [r5, #160]	; 0xa0
   28464:	bne	284d8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x164>
   28468:	mov	r0, r4
   2846c:	pop	{r4, r5, r6, pc}
   28470:	ldr	r3, [r5, #56]	; 0x38
   28474:	ldr	r2, [r5, #192]	; 0xc0
   28478:	ldr	r1, [r6, #40]	; 0x28
   2847c:	ldr	r0, [r3, #56]	; 0x38
   28480:	cmp	r1, #0
   28484:	sub	r2, r2, r0
   28488:	add	r2, r2, r4
   2848c:	str	r2, [r3, #60]	; 0x3c
   28490:	beq	284f8 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x184>
   28494:	ldr	r2, [r6, #44]	; 0x2c
   28498:	mov	r1, #0
   2849c:	str	r3, [r2]
   284a0:	str	r2, [r3, #4]
   284a4:	str	r3, [r6, #44]	; 0x2c
   284a8:	str	r1, [r3]
   284ac:	str	r3, [r5, #56]	; 0x38
   284b0:	ldr	r3, [r5, #8]
   284b4:	mov	r0, r3
   284b8:	ldr	r1, [r3, #16]
   284bc:	bl	10904 <myhtml_token_attr_create@plt>
   284c0:	cmp	r0, #0
   284c4:	movne	r3, #65	; 0x41
   284c8:	str	r0, [r5, #56]	; 0x38
   284cc:	addne	r4, r4, #1
   284d0:	strne	r3, [r5, #160]	; 0xa0
   284d4:	bne	28468 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xf4>
   284d8:	mov	r3, #69	; 0x45
   284dc:	mov	r4, #0
   284e0:	str	r3, [r5, #160]	; 0xa0
   284e4:	mov	r0, r4
   284e8:	pop	{r4, r5, r6, pc}
   284ec:	mov	r4, ip
   284f0:	mov	r0, r4
   284f4:	pop	{r4, r5, r6, pc}
   284f8:	str	r3, [r6, #40]	; 0x28
   284fc:	str	r3, [r6, #44]	; 0x2c
   28500:	str	r3, [r5, #56]	; 0x38
   28504:	str	r1, [r3]
   28508:	str	r1, [r3, #4]
   2850c:	b	284b0 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0x13c>
   28510:	str	r3, [r6, #40]	; 0x28
   28514:	str	r3, [r6, #44]	; 0x2c
   28518:	str	r3, [r5, #56]	; 0x38
   2851c:	str	r1, [r3]
   28520:	str	r1, [r3, #4]
   28524:	b	28418 <myhtml_tokenizer_doctype_system_identifier_dsq@@Base+0xa4>

00028528 <myhtml_tokenizer_state_doctype_system_identifier_double_quoted@@Base>:
   28528:	push	{lr}		; (str lr, [sp, #-4]!)
   2852c:	sub	sp, sp, #12
   28530:	mov	ip, #34	; 0x22
   28534:	ldr	lr, [sp, #16]
   28538:	str	ip, [sp, #4]
   2853c:	str	lr, [sp]
   28540:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   28544:	add	sp, sp, #12
   28548:	pop	{pc}		; (ldr pc, [sp], #4)

0002854c <myhtml_tokenizer_state_doctype_system_identifier_single_quoted@@Base>:
   2854c:	push	{lr}		; (str lr, [sp, #-4]!)
   28550:	sub	sp, sp, #12
   28554:	mov	ip, #39	; 0x27
   28558:	ldr	lr, [sp, #16]
   2855c:	str	ip, [sp, #4]
   28560:	str	lr, [sp]
   28564:	bl	10a9c <myhtml_tokenizer_doctype_system_identifier_dsq@plt>
   28568:	add	sp, sp, #12
   2856c:	pop	{pc}		; (ldr pc, [sp], #4)

00028570 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base>:
   28570:	push	{r4, r5, r6, lr}
   28574:	mov	r4, r3
   28578:	ldrb	lr, [r2, r3]
   2857c:	ldr	r5, [sp, #16]
   28580:	add	r2, r2, r3
   28584:	sub	r6, lr, #9
   28588:	uxtb	r6, r6
   2858c:	cmp	r6, #23
   28590:	bls	285a4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x34>
   28594:	cmp	r3, r5
   28598:	bcc	285e4 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x74>
   2859c:	mov	r0, r4
   285a0:	pop	{r4, r5, r6, pc}
   285a4:	ldr	ip, [pc, #156]	; 28648 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0xd8>
   285a8:	mvn	r6, ip, lsr r6
   285ac:	tst	r6, #1
   285b0:	bne	28594 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x24>
   285b4:	cmp	r3, r5
   285b8:	bcs	2859c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   285bc:	mov	r3, ip
   285c0:	add	r4, r4, #1
   285c4:	cmp	r5, r4
   285c8:	beq	2859c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   285cc:	ldrb	lr, [r2, #1]!
   285d0:	sub	ip, lr, #9
   285d4:	uxtb	ip, ip
   285d8:	cmp	ip, #23
   285dc:	mvn	ip, r3, lsr ip
   285e0:	bls	285fc <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x8c>
   285e4:	cmp	lr, #62	; 0x3e
   285e8:	beq	28608 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x98>
   285ec:	mov	r3, #66	; 0x42
   285f0:	str	r3, [r0, #160]	; 0xa0
   285f4:	mov	r0, r4
   285f8:	pop	{r4, r5, r6, pc}
   285fc:	tst	ip, #1
   28600:	beq	285c0 <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x50>
   28604:	b	285ec <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x7c>
   28608:	mov	r2, r1
   2860c:	ldr	r3, [r0, #192]	; 0xc0
   28610:	ldr	r1, [r1, #32]
   28614:	add	r4, r4, #1
   28618:	sub	r3, r3, r1
   2861c:	add	r3, r3, r4
   28620:	str	r3, [r2, #36]	; 0x24
   28624:	mov	r1, r4
   28628:	mov	r5, r0
   2862c:	bl	10028 <myhtml_queue_add@plt>
   28630:	cmp	r0, #0
   28634:	movne	r3, #69	; 0x45
   28638:	strne	r3, [r5, #160]	; 0xa0
   2863c:	movne	r4, #0
   28640:	streq	r0, [r5, #160]	; 0xa0
   28644:	b	2859c <myhtml_tokenizer_state_after_doctype_system_identifier@@Base+0x2c>
   28648:	addeq	r0, r0, fp, lsl r0

0002864c <myhtml_tokenizer_state_bogus_doctype@@Base>:
   2864c:	push	{r4, r5, r6, lr}
   28650:	ldr	ip, [sp, #16]
   28654:	cmp	r3, ip
   28658:	bcs	286dc <myhtml_tokenizer_state_bogus_doctype@@Base+0x90>
   2865c:	ldrb	lr, [r2, r3]
   28660:	add	r2, r2, r3
   28664:	cmp	lr, #62	; 0x3e
   28668:	movne	r4, r3
   2866c:	bne	28680 <myhtml_tokenizer_state_bogus_doctype@@Base+0x34>
   28670:	b	28694 <myhtml_tokenizer_state_bogus_doctype@@Base+0x48>
   28674:	ldrb	r3, [r2, #1]!
   28678:	cmp	r3, #62	; 0x3e
   2867c:	beq	28698 <myhtml_tokenizer_state_bogus_doctype@@Base+0x4c>
   28680:	add	r4, r4, #1
   28684:	cmp	ip, r4
   28688:	bne	28674 <myhtml_tokenizer_state_bogus_doctype@@Base+0x28>
   2868c:	mov	r0, r4
   28690:	pop	{r4, r5, r6, pc}
   28694:	mov	r4, r3
   28698:	mov	r2, r1
   2869c:	ldr	r3, [r0, #192]	; 0xc0
   286a0:	ldr	r1, [r1, #32]
   286a4:	add	r4, r4, #1
   286a8:	sub	r3, r3, r1
   286ac:	add	r3, r3, r4
   286b0:	str	r3, [r2, #36]	; 0x24
   286b4:	mov	r1, r4
   286b8:	mov	r5, r0
   286bc:	bl	10028 <myhtml_queue_add@plt>
   286c0:	cmp	r0, #0
   286c4:	movne	r3, #69	; 0x45
   286c8:	movne	r4, #0
   286cc:	streq	r0, [r5, #160]	; 0xa0
   286d0:	strne	r3, [r5, #160]	; 0xa0
   286d4:	mov	r0, r4
   286d8:	pop	{r4, r5, r6, pc}
   286dc:	mov	r4, r3
   286e0:	b	2868c <myhtml_tokenizer_state_bogus_doctype@@Base+0x40>

000286e4 <myhtml_tokenizer_end_state_tag_open@@Base>:
   286e4:	push	{r4, r5, r6, r7, lr}
   286e8:	sub	sp, sp, #12
   286ec:	ldr	r7, [r0, #192]	; 0xc0
   286f0:	ldr	ip, [sp, #32]
   286f4:	ldr	r5, [r1, #32]
   286f8:	ldr	lr, [r1, #24]
   286fc:	add	ip, r7, ip
   28700:	sub	r5, ip, r5
   28704:	cmp	ip, lr
   28708:	str	r5, [r1, #36]	; 0x24
   2870c:	mov	r5, r3
   28710:	bls	2874c <myhtml_tokenizer_end_state_tag_open@@Base+0x68>
   28714:	cmp	lr, #0
   28718:	mov	r4, r1
   2871c:	beq	28758 <myhtml_tokenizer_end_state_tag_open@@Base+0x74>
   28720:	sub	lr, r3, lr
   28724:	add	lr, lr, r7
   28728:	str	lr, [r1, #28]
   2872c:	mov	r6, r0
   28730:	bl	10c40 <myhtml_check_tag_parser@plt>
   28734:	mov	r2, r4
   28738:	mov	r1, r5
   2873c:	mov	r0, r6
   28740:	bl	10028 <myhtml_queue_add@plt>
   28744:	cmp	r0, #0
   28748:	bne	28780 <myhtml_tokenizer_end_state_tag_open@@Base+0x9c>
   2874c:	mov	r0, r5
   28750:	add	sp, sp, #12
   28754:	pop	{r4, r5, r6, r7, pc}
   28758:	ldr	lr, [r1, #48]	; 0x30
   2875c:	ldr	r3, [r1, #48]	; 0x30
   28760:	and	lr, lr, #8
   28764:	eor	lr, lr, r3
   28768:	mov	r6, #512	; 0x200
   2876c:	str	lr, [r1, #48]	; 0x30
   28770:	mov	r3, ip
   28774:	str	r6, [sp]
   28778:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2877c:	b	2874c <myhtml_tokenizer_end_state_tag_open@@Base+0x68>
   28780:	mov	r3, #69	; 0x45
   28784:	mov	r0, #0
   28788:	str	r3, [r6, #160]	; 0xa0
   2878c:	add	sp, sp, #12
   28790:	pop	{r4, r5, r6, r7, pc}

00028794 <myhtml_tokenizer_end_state_end_tag_open@@Base>:
   28794:	push	{r4, r5, r6, r7, lr}
   28798:	sub	sp, sp, #12
   2879c:	ldr	r7, [r0, #192]	; 0xc0
   287a0:	ldr	lr, [sp, #32]
   287a4:	ldr	r4, [r1, #32]
   287a8:	ldr	r5, [r1, #24]
   287ac:	add	lr, r7, lr
   287b0:	sub	r4, lr, r4
   287b4:	cmp	lr, r5
   287b8:	mov	r6, r3
   287bc:	str	r4, [r1, #36]	; 0x24
   287c0:	bls	287f4 <myhtml_tokenizer_end_state_end_tag_open@@Base+0x60>
   287c4:	ldr	r4, [r1, #48]	; 0x30
   287c8:	sub	r5, r3, r5
   287cc:	ldr	r3, [r1, #48]	; 0x30
   287d0:	add	r5, r5, r7
   287d4:	and	r4, r4, #8
   287d8:	eor	r4, r4, r3
   287dc:	str	r5, [r1, #28]
   287e0:	mov	r5, #512	; 0x200
   287e4:	mov	r3, lr
   287e8:	str	r4, [r1, #48]	; 0x30
   287ec:	str	r5, [sp]
   287f0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   287f4:	mov	r0, r6
   287f8:	add	sp, sp, #12
   287fc:	pop	{r4, r5, r6, r7, pc}

00028800 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>:
   28800:	push	{r4, r5, r6, lr}
   28804:	sub	sp, sp, #8
   28808:	ldr	r5, [r0, #192]	; 0xc0
   2880c:	ldr	ip, [sp, #24]
   28810:	ldr	lr, [r1, #32]
   28814:	add	ip, ip, r5
   28818:	sub	lr, ip, lr
   2881c:	mov	r6, #512	; 0x200
   28820:	mov	r5, r3
   28824:	str	lr, [r1, #36]	; 0x24
   28828:	mov	r3, ip
   2882c:	str	r6, [sp]
   28830:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28834:	mov	r0, r5
   28838:	add	sp, sp, #8
   2883c:	pop	{r4, r5, r6, pc}

00028840 <myhtml_tokenizer_end_state_tag_name@@Base>:
   28840:	b	28800 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>

00028844 <myhtml_tokenizer_end_state_data@@Base>:
   28844:	b	28800 <myhtml_tokenizer_end_state_self_closing_start_tag@@Base>

00028848 <myhtml_tokenizer_end_state_markup_declaration_open@@Base>:
   28848:	push	{r4, r5, r6, r7, r8, lr}
   2884c:	sub	sp, sp, #8
   28850:	ldr	ip, [r1, #32]
   28854:	ldr	r7, [sp, #32]
   28858:	ldr	r6, [r0, #192]	; 0xc0
   2885c:	ldr	lr, [r1, #24]
   28860:	sub	ip, r7, ip
   28864:	add	ip, ip, r6
   28868:	cmp	lr, #1
   2886c:	mov	r6, r3
   28870:	str	ip, [r1, #36]	; 0x24
   28874:	bls	288bc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   28878:	str	r7, [sp]
   2887c:	mov	r3, lr
   28880:	mov	r4, r1
   28884:	mov	r5, r0
   28888:	ldr	r8, [r0, #76]	; 0x4c
   2888c:	bl	ffd4 <myhtml_tokenizer_state_bogus_comment@plt>
   28890:	ldr	r2, [r5, #64]	; 0x40
   28894:	cmp	r4, r2
   28898:	str	r0, [r8, #4]
   2889c:	beq	28918 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xd0>
   288a0:	ldr	r3, [r5, #192]	; 0xc0
   288a4:	ldr	r1, [r2, #24]
   288a8:	add	r3, r7, r3
   288ac:	sub	r3, r3, r1
   288b0:	cmp	r3, #0
   288b4:	str	r3, [r2, #28]
   288b8:	bne	288c8 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x80>
   288bc:	mov	r0, r6
   288c0:	add	sp, sp, #8
   288c4:	pop	{r4, r5, r6, r7, r8, pc}
   288c8:	ldr	r3, [r2, #48]	; 0x30
   288cc:	ldr	r1, [r2, #48]	; 0x30
   288d0:	and	r3, r3, #8
   288d4:	eor	r3, r3, r1
   288d8:	str	r3, [r2, #48]	; 0x30
   288dc:	ldr	r3, [r2, #48]	; 0x30
   288e0:	mov	r1, #1
   288e4:	orr	r3, r3, #512	; 0x200
   288e8:	str	r3, [r2, #48]	; 0x30
   288ec:	str	r1, [r2]
   288f0:	mov	r1, r6
   288f4:	mov	r0, r5
   288f8:	bl	10028 <myhtml_queue_add@plt>
   288fc:	cmp	r0, #0
   28900:	beq	288bc <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0x74>
   28904:	mov	r3, #69	; 0x45
   28908:	mov	r0, #0
   2890c:	str	r3, [r5, #160]	; 0xa0
   28910:	add	sp, sp, #8
   28914:	pop	{r4, r5, r6, r7, r8, pc}
   28918:	ldr	r2, [r4, #48]	; 0x30
   2891c:	ldr	r3, [r4, #48]	; 0x30
   28920:	and	r2, r2, #8
   28924:	eor	r2, r2, r3
   28928:	ldr	r3, [r5, #192]	; 0xc0
   2892c:	ldr	r1, [r4, #24]
   28930:	str	r2, [r4, #48]	; 0x30
   28934:	ldr	r2, [r4, #48]	; 0x30
   28938:	add	r3, r7, r3
   2893c:	orr	r2, r2, #1024	; 0x400
   28940:	sub	r3, r3, r1
   28944:	mov	r1, #2
   28948:	str	r2, [r4, #48]	; 0x30
   2894c:	str	r3, [r4, #28]
   28950:	str	r1, [r4]
   28954:	mov	r2, r4
   28958:	b	288f0 <myhtml_tokenizer_end_state_markup_declaration_open@@Base+0xa8>

0002895c <myhtml_tokenizer_end_state_before_attribute_value@@Base>:
   2895c:	push	{r4, r5, r6, lr}
   28960:	mov	r2, r1
   28964:	ldr	lr, [r1, #32]
   28968:	ldr	ip, [sp, #16]
   2896c:	ldr	r1, [r0, #192]	; 0xc0
   28970:	sub	ip, ip, lr
   28974:	add	ip, ip, r1
   28978:	str	ip, [r2, #36]	; 0x24
   2897c:	mov	r1, r3
   28980:	mov	r5, r0
   28984:	mov	r4, r3
   28988:	bl	10028 <myhtml_queue_add@plt>
   2898c:	cmp	r0, #0
   28990:	beq	289a4 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x48>
   28994:	mov	r3, #69	; 0x45
   28998:	str	r3, [r5, #160]	; 0xa0
   2899c:	mov	r0, #0
   289a0:	pop	{r4, r5, r6, pc}
   289a4:	ldr	r3, [r5, #8]
   289a8:	mov	r0, r3
   289ac:	ldr	r1, [r3, #16]
   289b0:	bl	10904 <myhtml_token_attr_create@plt>
   289b4:	cmp	r0, #0
   289b8:	str	r0, [r5, #56]	; 0x38
   289bc:	beq	28994 <myhtml_tokenizer_end_state_before_attribute_value@@Base+0x38>
   289c0:	mov	r0, r4
   289c4:	pop	{r4, r5, r6, pc}

000289c8 <myhtml_tokenizer_end_state_attribute_value_double_quoted@@Base>:
   289c8:	ldr	r2, [r0, #192]	; 0xc0
   289cc:	ldr	ip, [r1, #32]
   289d0:	ldr	r0, [sp]
   289d4:	sub	r2, r2, ip
   289d8:	add	r2, r2, r0
   289dc:	str	r2, [r1, #36]	; 0x24
   289e0:	mov	r0, r3
   289e4:	bx	lr

000289e8 <myhtml_tokenizer_end_state_attribute_value_single_quoted@@Base>:
   289e8:	ldr	r2, [r0, #192]	; 0xc0
   289ec:	ldr	ip, [r1, #32]
   289f0:	ldr	r0, [sp]
   289f4:	sub	r2, r2, ip
   289f8:	add	r2, r2, r0
   289fc:	str	r2, [r1, #36]	; 0x24
   28a00:	mov	r0, r3
   28a04:	bx	lr

00028a08 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base>:
   28a08:	mov	r2, r1
   28a0c:	push	{r4, r5, r6, lr}
   28a10:	mov	r4, r3
   28a14:	ldr	r1, [r0, #56]	; 0x38
   28a18:	ldr	r6, [r2, #32]
   28a1c:	ldr	lr, [sp, #16]
   28a20:	ldr	ip, [r0, #192]	; 0xc0
   28a24:	ldr	r3, [r1, #56]	; 0x38
   28a28:	sub	lr, lr, r6
   28a2c:	add	lr, lr, ip
   28a30:	add	ip, ip, r4
   28a34:	sub	ip, ip, r3
   28a38:	str	lr, [r2, #36]	; 0x24
   28a3c:	str	ip, [r1, #60]	; 0x3c
   28a40:	mov	r1, r4
   28a44:	mov	r5, r0
   28a48:	bl	10028 <myhtml_queue_add@plt>
   28a4c:	cmp	r0, #0
   28a50:	beq	28a64 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x5c>
   28a54:	mov	r3, #69	; 0x45
   28a58:	str	r3, [r5, #160]	; 0xa0
   28a5c:	mov	r0, #0
   28a60:	pop	{r4, r5, r6, pc}
   28a64:	ldr	r3, [r5, #8]
   28a68:	mov	r0, r3
   28a6c:	ldr	r1, [r3, #16]
   28a70:	bl	10904 <myhtml_token_attr_create@plt>
   28a74:	cmp	r0, #0
   28a78:	str	r0, [r5, #56]	; 0x38
   28a7c:	beq	28a54 <myhtml_tokenizer_end_state_attribute_value_unquoted@@Base+0x4c>
   28a80:	mov	r0, r4
   28a84:	pop	{r4, r5, r6, pc}

00028a88 <myhtml_tokenizer_end_state_comment_end@@Base>:
   28a88:	push	{r4, r5, r6, lr}
   28a8c:	mov	r5, r3
   28a90:	ldr	ip, [r1, #24]
   28a94:	ldr	r3, [r0, #192]	; 0xc0
   28a98:	ldr	r2, [r1, #32]
   28a9c:	ldr	lr, [sp, #16]
   28aa0:	sub	ip, r5, ip
   28aa4:	sub	lr, lr, r2
   28aa8:	add	ip, ip, r3
   28aac:	add	lr, lr, r3
   28ab0:	cmp	ip, #2
   28ab4:	str	lr, [r1, #36]	; 0x24
   28ab8:	bhi	28ac8 <myhtml_tokenizer_end_state_comment_end@@Base+0x40>
   28abc:	str	ip, [r1, #28]
   28ac0:	mov	r0, r5
   28ac4:	pop	{r4, r5, r6, pc}
   28ac8:	sub	ip, ip, #2
   28acc:	str	ip, [r1, #28]
   28ad0:	mov	r2, r1
   28ad4:	mov	r1, r5
   28ad8:	mov	r4, r0
   28adc:	bl	10028 <myhtml_queue_add@plt>
   28ae0:	cmp	r0, #0
   28ae4:	beq	28ac0 <myhtml_tokenizer_end_state_comment_end@@Base+0x38>
   28ae8:	mov	r3, #69	; 0x45
   28aec:	mov	r0, #0
   28af0:	str	r3, [r4, #160]	; 0xa0
   28af4:	pop	{r4, r5, r6, pc}

00028af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>:
   28af8:	push	{r4, r5, r6, lr}
   28afc:	mov	r2, r1
   28b00:	ldr	lr, [r1, #32]
   28b04:	ldr	ip, [sp, #16]
   28b08:	ldr	r1, [r1, #24]
   28b0c:	mov	r5, r3
   28b10:	ldr	r3, [r0, #192]	; 0xc0
   28b14:	sub	ip, ip, lr
   28b18:	sub	r1, r5, r1
   28b1c:	add	r1, r1, r3
   28b20:	add	ip, ip, r3
   28b24:	str	r1, [r2, #28]
   28b28:	str	ip, [r2, #36]	; 0x24
   28b2c:	mov	r1, r5
   28b30:	mov	r4, r0
   28b34:	bl	10028 <myhtml_queue_add@plt>
   28b38:	cmp	r0, #0
   28b3c:	movne	r3, #69	; 0x45
   28b40:	movne	r0, #0
   28b44:	strne	r3, [r4, #160]	; 0xa0
   28b48:	moveq	r0, r5
   28b4c:	pop	{r4, r5, r6, pc}

00028b50 <myhtml_tokenizer_end_state_comment_end_bang@@Base>:
   28b50:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b54 <myhtml_tokenizer_end_state_comment_end_dash@@Base>:
   28b54:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b58 <myhtml_tokenizer_end_state_comment@@Base>:
   28b58:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b5c <myhtml_tokenizer_end_state_comment_start_dash@@Base>:
   28b5c:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b60 <myhtml_tokenizer_end_state_comment_start@@Base>:
   28b60:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b64 <myhtml_tokenizer_end_state_after_attribute_value_quoted@@Base>:
   28b64:	b	28af8 <myhtml_tokenizer_end_state_bogus_comment@@Base>

00028b68 <myhtml_tokenizer_end_state_cdata_section@@Base>:
   28b68:	push	{r4, r5, r6, lr}
   28b6c:	mov	r5, r3
   28b70:	ldr	ip, [r1, #24]
   28b74:	ldr	r3, [r0, #192]	; 0xc0
   28b78:	ldr	r2, [r1, #32]
   28b7c:	ldr	lr, [sp, #16]
   28b80:	sub	ip, r5, ip
   28b84:	add	ip, ip, r3
   28b88:	sub	lr, lr, r2
   28b8c:	add	lr, lr, r3
   28b90:	cmp	ip, #0
   28b94:	str	lr, [r1, #36]	; 0x24
   28b98:	str	ip, [r1, #28]
   28b9c:	bne	28ba8 <myhtml_tokenizer_end_state_cdata_section@@Base+0x40>
   28ba0:	mov	r0, r5
   28ba4:	pop	{r4, r5, r6, pc}
   28ba8:	mov	r2, r1
   28bac:	mov	r1, r5
   28bb0:	mov	r4, r0
   28bb4:	bl	10028 <myhtml_queue_add@plt>
   28bb8:	cmp	r0, #0
   28bbc:	beq	28ba0 <myhtml_tokenizer_end_state_cdata_section@@Base+0x38>
   28bc0:	mov	r3, #69	; 0x45
   28bc4:	mov	r0, #0
   28bc8:	str	r3, [r4, #160]	; 0xa0
   28bcc:	pop	{r4, r5, r6, pc}

00028bd0 <myhtml_tokenizer_end_state_rcdata@@Base>:
   28bd0:	push	{r4, r5, r6, lr}
   28bd4:	ldr	ip, [sp, #16]
   28bd8:	ldr	r5, [r0, #192]	; 0xc0
   28bdc:	ldr	r2, [r1, #32]
   28be0:	ldr	lr, [r1, #24]
   28be4:	add	ip, ip, r5
   28be8:	sub	r2, ip, r2
   28bec:	cmp	ip, lr
   28bf0:	mov	r5, r3
   28bf4:	str	r2, [r1, #36]	; 0x24
   28bf8:	bhi	28c04 <myhtml_tokenizer_end_state_rcdata@@Base+0x34>
   28bfc:	mov	r0, r5
   28c00:	pop	{r4, r5, r6, pc}
   28c04:	ldr	r3, [r1, #48]	; 0x30
   28c08:	sub	ip, ip, lr
   28c0c:	orr	r3, r3, #16
   28c10:	mov	r2, #1
   28c14:	str	r2, [r1]
   28c18:	str	ip, [r1, #28]
   28c1c:	str	r3, [r1, #48]	; 0x30
   28c20:	mov	r2, r1
   28c24:	mov	r1, #0
   28c28:	mov	r4, r0
   28c2c:	bl	10028 <myhtml_queue_add@plt>
   28c30:	cmp	r0, #0
   28c34:	beq	28bfc <myhtml_tokenizer_end_state_rcdata@@Base+0x2c>
   28c38:	mov	r3, #69	; 0x45
   28c3c:	mov	r0, #0
   28c40:	str	r3, [r4, #160]	; 0xa0
   28c44:	pop	{r4, r5, r6, pc}

00028c48 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>:
   28c48:	push	{r4, r5, r6, lr}
   28c4c:	sub	sp, sp, #8
   28c50:	ldr	r4, [r1, #32]
   28c54:	ldr	ip, [sp, #24]
   28c58:	ldr	lr, [r0, #192]	; 0xc0
   28c5c:	sub	ip, ip, r4
   28c60:	add	ip, ip, lr
   28c64:	mov	r6, #16
   28c68:	mov	r4, r3
   28c6c:	str	ip, [r1, #36]	; 0x24
   28c70:	add	r3, lr, r3
   28c74:	str	r6, [sp]
   28c78:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28c7c:	mov	r0, r4
   28c80:	add	sp, sp, #8
   28c84:	pop	{r4, r5, r6, pc}

00028c88 <myhtml_tokenizer_end_state_rcdata_end_tag_open@@Base>:
   28c88:	b	28c48 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>

00028c8c <myhtml_tokenizer_end_state_rcdata_less_than_sign@@Base>:
   28c8c:	b	28c48 <myhtml_tokenizer_end_state_rcdata_end_tag_name@@Base>

00028c90 <myhtml_tokenizer_end_state_plaintext@@Base>:
   28c90:	ldr	ip, [sp]
   28c94:	ldr	r2, [r1, #32]
   28c98:	ldr	r0, [r0, #192]	; 0xc0
   28c9c:	sub	r2, ip, r2
   28ca0:	add	r2, r2, r0
   28ca4:	str	r2, [r1, #36]	; 0x24
   28ca8:	mov	r0, r3
   28cac:	bx	lr

00028cb0 <myhtml_tokenizer_end_state_doctype@@Base>:
   28cb0:	push	{r4, r5, r6, lr}
   28cb4:	sub	sp, sp, #8
   28cb8:	ldr	r4, [r1, #32]
   28cbc:	ldr	ip, [sp, #24]
   28cc0:	ldr	lr, [r0, #192]	; 0xc0
   28cc4:	sub	ip, ip, r4
   28cc8:	add	ip, ip, lr
   28ccc:	mov	r6, #32
   28cd0:	mov	r4, r3
   28cd4:	str	ip, [r1, #36]	; 0x24
   28cd8:	add	r3, lr, r3
   28cdc:	str	r6, [sp]
   28ce0:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28ce4:	mov	r0, r4
   28ce8:	add	sp, sp, #8
   28cec:	pop	{r4, r5, r6, pc}

00028cf0 <myhtml_tokenizer_end_state_rawtext_end_tag_name@@Base>:
   28cf0:	b	28cb0 <myhtml_tokenizer_end_state_doctype@@Base>

00028cf4 <myhtml_tokenizer_end_state_rawtext_end_tag_open@@Base>:
   28cf4:	b	28cb0 <myhtml_tokenizer_end_state_doctype@@Base>

00028cf8 <myhtml_tokenizer_end_state_rawtext_less_than_sign@@Base>:
   28cf8:	b	28cb0 <myhtml_tokenizer_end_state_doctype@@Base>

00028cfc <myhtml_tokenizer_end_state_rawtext@@Base>:
   28cfc:	b	28cb0 <myhtml_tokenizer_end_state_doctype@@Base>

00028d00 <myhtml_tokenizer_end_state_doctype_name@@Base>:
   28d00:	mov	r2, r1
   28d04:	push	{r4, r5, r6, lr}
   28d08:	mov	r4, r3
   28d0c:	ldr	r1, [r0, #56]	; 0x38
   28d10:	ldr	r6, [r2, #32]
   28d14:	ldr	lr, [sp, #16]
   28d18:	ldr	ip, [r0, #192]	; 0xc0
   28d1c:	ldr	r3, [r1, #48]	; 0x30
   28d20:	sub	lr, lr, r6
   28d24:	add	lr, lr, ip
   28d28:	add	ip, ip, r4
   28d2c:	sub	ip, ip, r3
   28d30:	str	lr, [r2, #36]	; 0x24
   28d34:	str	ip, [r1, #52]	; 0x34
   28d38:	mov	r1, r4
   28d3c:	mov	r5, r0
   28d40:	bl	10028 <myhtml_queue_add@plt>
   28d44:	cmp	r0, #0
   28d48:	movne	r3, #69	; 0x45
   28d4c:	movne	r0, #0
   28d50:	strne	r3, [r5, #160]	; 0xa0
   28d54:	moveq	r0, r4
   28d58:	pop	{r4, r5, r6, pc}

00028d5c <myhtml_tokenizer_end_state_attribute_name@@Base>:
   28d5c:	b	28d00 <myhtml_tokenizer_end_state_doctype_name@@Base>

00028d60 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>:
   28d60:	push	{r4, r5, r6, lr}
   28d64:	mov	r2, r1
   28d68:	ldr	lr, [r1, #32]
   28d6c:	ldr	ip, [sp, #16]
   28d70:	ldr	r1, [r0, #192]	; 0xc0
   28d74:	sub	ip, ip, lr
   28d78:	mov	r4, r3
   28d7c:	add	ip, ip, r1
   28d80:	mov	r3, #1
   28d84:	str	ip, [r2, #36]	; 0x24
   28d88:	mov	r1, r4
   28d8c:	str	r3, [r0, #176]	; 0xb0
   28d90:	mov	r5, r0
   28d94:	bl	10028 <myhtml_queue_add@plt>
   28d98:	cmp	r0, #0
   28d9c:	movne	r3, #69	; 0x45
   28da0:	movne	r0, #0
   28da4:	strne	r3, [r5, #160]	; 0xa0
   28da8:	moveq	r0, r4
   28dac:	pop	{r4, r5, r6, pc}

00028db0 <myhtml_tokenizer_end_state_before_doctype_name@@Base>:
   28db0:	b	28d60 <myhtml_tokenizer_end_state_before_doctype_public_identifier@@Base>

00028db4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>:
   28db4:	push	{r4, r5, r6, lr}
   28db8:	mov	r4, r0
   28dbc:	ldr	lr, [r0, #56]	; 0x38
   28dc0:	ldr	ip, [r1, #32]
   28dc4:	ldr	r0, [sp, #16]
   28dc8:	ldr	r6, [lr, #48]	; 0x30
   28dcc:	mov	r2, r1
   28dd0:	ldr	r1, [r4, #192]	; 0xc0
   28dd4:	cmp	r6, #0
   28dd8:	cmpne	r0, #0
   28ddc:	sub	ip, r0, ip
   28de0:	add	ip, ip, r1
   28de4:	addne	r1, r1, r3
   28de8:	subne	r1, r1, r6
   28dec:	mov	r0, #1
   28df0:	str	ip, [r2, #36]	; 0x24
   28df4:	str	r0, [r4, #176]	; 0xb0
   28df8:	strne	r1, [lr, #52]	; 0x34
   28dfc:	mov	r0, r4
   28e00:	mov	r1, r3
   28e04:	mov	r5, r3
   28e08:	bl	10028 <myhtml_queue_add@plt>
   28e0c:	cmp	r0, #0
   28e10:	movne	r3, #69	; 0x45
   28e14:	movne	r0, #0
   28e18:	strne	r3, [r4, #160]	; 0xa0
   28e1c:	moveq	r0, r5
   28e20:	pop	{r4, r5, r6, pc}

00028e24 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@@Base>:
   28e24:	b	28db4 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@@Base>

00028e28 <myhtml_tokenizer_end_state_doctype_public_identifier_single_quoted@@Base>:
   28e28:	push	{r4, r5, r6, lr}
   28e2c:	sub	sp, sp, #8
   28e30:	ldr	ip, [r1, #32]
   28e34:	ldr	r5, [sp, #24]
   28e38:	ldr	lr, [r0, #192]	; 0xc0
   28e3c:	sub	ip, r5, ip
   28e40:	add	ip, ip, lr
   28e44:	mov	r4, r3
   28e48:	str	ip, [r1, #36]	; 0x24
   28e4c:	str	r5, [sp]
   28e50:	add	r3, lr, r3
   28e54:	bl	10c28 <myhtml_tokenizer_end_state_doctype_public_identifier_double_quoted@plt>
   28e58:	mov	r0, r4
   28e5c:	add	sp, sp, #8
   28e60:	pop	{r4, r5, r6, pc}

00028e64 <myhtml_tokenizer_end_state_doctype_system_identifier_single_quoted@@Base>:
   28e64:	push	{r4, r5, r6, lr}
   28e68:	sub	sp, sp, #8
   28e6c:	ldr	ip, [r1, #32]
   28e70:	ldr	r5, [sp, #24]
   28e74:	ldr	lr, [r0, #192]	; 0xc0
   28e78:	sub	ip, r5, ip
   28e7c:	add	ip, ip, lr
   28e80:	mov	r4, r3
   28e84:	str	ip, [r1, #36]	; 0x24
   28e88:	str	r5, [sp]
   28e8c:	add	r3, lr, r3
   28e90:	bl	10e08 <myhtml_tokenizer_end_state_doctype_system_identifier_double_quoted@plt>
   28e94:	mov	r0, r4
   28e98:	add	sp, sp, #8
   28e9c:	pop	{r4, r5, r6, pc}

00028ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>:
   28ea0:	push	{r4, r5, r6, lr}
   28ea4:	mov	r2, r1
   28ea8:	ldr	lr, [r1, #32]
   28eac:	ldr	ip, [sp, #16]
   28eb0:	ldr	r1, [r0, #192]	; 0xc0
   28eb4:	sub	ip, ip, lr
   28eb8:	add	ip, ip, r1
   28ebc:	str	ip, [r2, #36]	; 0x24
   28ec0:	mov	r1, r3
   28ec4:	mov	r4, r3
   28ec8:	mov	r5, r0
   28ecc:	bl	10028 <myhtml_queue_add@plt>
   28ed0:	cmp	r0, #0
   28ed4:	movne	r3, #69	; 0x45
   28ed8:	movne	r0, #0
   28edc:	strne	r3, [r5, #160]	; 0xa0
   28ee0:	moveq	r0, r4
   28ee4:	pop	{r4, r5, r6, pc}

00028ee8 <myhtml_tokenizer_end_state_after_doctype_system_identifier@@Base>:
   28ee8:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028eec <myhtml_tokenizer_end_state_after_doctype_public_identifier@@Base>:
   28eec:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028ef0 <myhtml_tokenizer_end_state_custom_after_doctype_name_a_z@@Base>:
   28ef0:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028ef4 <myhtml_tokenizer_end_state_after_doctype_name@@Base>:
   28ef4:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028ef8 <myhtml_tokenizer_end_state_after_attribute_name@@Base>:
   28ef8:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028efc <myhtml_tokenizer_end_state_before_attribute_name@@Base>:
   28efc:	b	28ea0 <myhtml_tokenizer_end_state_bogus_doctype@@Base>

00028f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>:
   28f00:	push	{r4, r5, r6, lr}
   28f04:	sub	sp, sp, #8
   28f08:	ldr	r4, [r1, #32]
   28f0c:	ldr	ip, [sp, #24]
   28f10:	ldr	lr, [r0, #192]	; 0xc0
   28f14:	sub	ip, ip, r4
   28f18:	add	ip, ip, lr
   28f1c:	mov	r6, #64	; 0x40
   28f20:	mov	r4, r3
   28f24:	str	ip, [r1, #36]	; 0x24
   28f28:	add	r3, lr, r3
   28f2c:	str	r6, [sp]
   28f30:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   28f34:	mov	r0, r4
   28f38:	add	sp, sp, #8
   28f3c:	pop	{r4, r5, r6, pc}

00028f40 <myhtml_tokenizer_end_state_script_data_double_escaped_less_than_sign@@Base>:
   28f40:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f44 <myhtml_tokenizer_end_state_script_data_double_escaped_dash_dash@@Base>:
   28f44:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f48 <myhtml_tokenizer_end_state_script_data_double_escaped_dash@@Base>:
   28f48:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f4c <myhtml_tokenizer_end_state_script_data_double_escaped@@Base>:
   28f4c:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f50 <myhtml_tokenizer_end_state_script_data_double_escape_start@@Base>:
   28f50:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f54 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_name@@Base>:
   28f54:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f58 <myhtml_tokenizer_end_state_script_data_escaped_end_tag_open@@Base>:
   28f58:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f5c <myhtml_tokenizer_end_state_script_data_escaped_less_than_sign@@Base>:
   28f5c:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f60 <myhtml_tokenizer_end_state_script_data_escaped_dash_dash@@Base>:
   28f60:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f64 <myhtml_tokenizer_end_state_script_data_escaped_dash@@Base>:
   28f64:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f68 <myhtml_tokenizer_end_state_script_data_escaped@@Base>:
   28f68:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f6c <myhtml_tokenizer_end_state_script_data_escape_start_dash@@Base>:
   28f6c:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f70 <myhtml_tokenizer_end_state_script_data_escape_start@@Base>:
   28f70:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f74 <myhtml_tokenizer_end_state_script_data_end_tag_name@@Base>:
   28f74:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f78 <myhtml_tokenizer_end_state_script_data_end_tag_open@@Base>:
   28f78:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f7c <myhtml_tokenizer_end_state_script_data_less_than_sign@@Base>:
   28f7c:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f80 <myhtml_tokenizer_end_state_script_data@@Base>:
   28f80:	b	28f00 <myhtml_tokenizer_end_state_script_data_double_escape_end@@Base>

00028f84 <myhtml_tokenizer_end_state_parse_error_stop@@Base>:
   28f84:	ldr	r0, [sp]
   28f88:	bx	lr

00028f8c <myhtml_tokenizer_state_script_data@@Base>:
   28f8c:	push	{lr}		; (str lr, [sp, #-4]!)
   28f90:	ldr	lr, [sp, #4]
   28f94:	cmp	r3, lr
   28f98:	bcs	28fc8 <myhtml_tokenizer_state_script_data@@Base+0x3c>
   28f9c:	ldrb	ip, [r2, r3]
   28fa0:	add	r2, r2, r3
   28fa4:	cmp	ip, #60	; 0x3c
   28fa8:	bne	28fbc <myhtml_tokenizer_state_script_data@@Base+0x30>
   28fac:	b	28fd0 <myhtml_tokenizer_state_script_data@@Base+0x44>
   28fb0:	ldrb	ip, [r2, #1]!
   28fb4:	cmp	ip, #60	; 0x3c
   28fb8:	beq	28fd0 <myhtml_tokenizer_state_script_data@@Base+0x44>
   28fbc:	add	r3, r3, #1
   28fc0:	cmp	lr, r3
   28fc4:	bne	28fb0 <myhtml_tokenizer_state_script_data@@Base+0x24>
   28fc8:	mov	r0, r3
   28fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   28fd0:	ldr	r2, [r0, #192]	; 0xc0
   28fd4:	mov	ip, #16
   28fd8:	add	r2, r2, r3
   28fdc:	add	r3, r3, #1
   28fe0:	str	r2, [r1, #32]
   28fe4:	str	ip, [r0, #160]	; 0xa0
   28fe8:	mov	r0, r3
   28fec:	pop	{pc}		; (ldr pc, [sp], #4)

00028ff0 <myhtml_tokenizer_state_script_data_less_than_sign@@Base>:
   28ff0:	ldrb	r2, [r2, r3]
   28ff4:	cmp	r2, #47	; 0x2f
   28ff8:	moveq	r2, #17
   28ffc:	addeq	r3, r3, #1
   29000:	streq	r2, [r0, #160]	; 0xa0
   29004:	beq	2901c <myhtml_tokenizer_state_script_data_less_than_sign@@Base+0x2c>
   29008:	cmp	r2, #33	; 0x21
   2900c:	addeq	r3, r3, #1
   29010:	moveq	r2, #19
   29014:	movne	r2, #5
   29018:	str	r2, [r0, #160]	; 0xa0
   2901c:	mov	r0, r3
   29020:	bx	lr

00029024 <myhtml_tokenizer_state_script_data_escape_start@@Base>:
   29024:	ldrb	r2, [r2, r3]
   29028:	cmp	r2, #45	; 0x2d
   2902c:	moveq	r2, #20
   29030:	addeq	r3, r3, #1
   29034:	movne	r2, #5
   29038:	str	r2, [r0, #160]	; 0xa0
   2903c:	mov	r0, r3
   29040:	bx	lr

00029044 <myhtml_tokenizer_state_script_data_escape_start_dash@@Base>:
   29044:	ldrb	r2, [r2, r3]
   29048:	cmp	r2, #45	; 0x2d
   2904c:	moveq	r2, #23
   29050:	addeq	r3, r3, #1
   29054:	movne	r2, #5
   29058:	str	r2, [r0, #160]	; 0xa0
   2905c:	mov	r0, r3
   29060:	bx	lr

00029064 <myhtml_tokenizer_state_script_data_end_tag_open@@Base>:
   29064:	ldrb	r2, [r2, r3]
   29068:	bic	r2, r2, #32
   2906c:	sub	r2, r2, #65	; 0x41
   29070:	cmp	r2, #25
   29074:	movls	ip, #18
   29078:	ldrls	r2, [r0, #192]	; 0xc0
   2907c:	movhi	r2, #5
   29080:	addls	r2, r2, r3
   29084:	strls	r2, [r1, #12]
   29088:	strhi	r2, [r0, #160]	; 0xa0
   2908c:	strls	ip, [r0, #160]	; 0xa0
   29090:	mov	r0, r3
   29094:	bx	lr

00029098 <myhtml_tokenizer_state_script_data_end_tag_name@@Base>:
   29098:	push	{r4, r5, r6, r7, r8, r9, lr}
   2909c:	sub	sp, sp, #12
   290a0:	mov	r4, r3
   290a4:	ldr	ip, [sp, #40]	; 0x28
   290a8:	cmp	r3, ip
   290ac:	bcs	29164 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   290b0:	ldrb	r3, [r2, r3]
   290b4:	mov	r7, r1
   290b8:	mov	r5, r2
   290bc:	add	r1, r2, r4
   290c0:	sub	r2, r3, #9
   290c4:	mov	r6, r0
   290c8:	uxtb	r2, r2
   290cc:	cmp	r2, #23
   290d0:	bhi	29170 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xd8>
   290d4:	ldr	r0, [pc, #652]	; 29368 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d0>
   290d8:	mvn	r2, r0, lsr r2
   290dc:	tst	r2, #1
   290e0:	beq	29140 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xa8>
   290e4:	cmp	r3, #62	; 0x3e
   290e8:	ldrne	r0, [pc, #632]	; 29368 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d0>
   290ec:	bne	29104 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x6c>
   290f0:	b	29248 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1b0>
   290f4:	cmp	r3, #47	; 0x2f
   290f8:	beq	29178 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xe0>
   290fc:	cmp	r3, #62	; 0x3e
   29100:	beq	29248 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1b0>
   29104:	bic	r3, r3, #32
   29108:	sub	r3, r3, #65	; 0x41
   2910c:	cmp	r3, #25
   29110:	bhi	2930c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x274>
   29114:	add	r4, r4, #1
   29118:	cmp	ip, r4
   2911c:	beq	29320 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x288>
   29120:	ldrb	r3, [r1, #1]!
   29124:	sub	r2, r3, #9
   29128:	uxtb	r2, r2
   2912c:	cmp	r2, #23
   29130:	mvn	r2, r0, lsr r2
   29134:	bhi	290f4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x5c>
   29138:	tst	r2, #1
   2913c:	bne	290fc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x64>
   29140:	ldr	r9, [r7, #12]
   29144:	ldr	r8, [r6, #192]	; 0xc0
   29148:	sub	r8, r8, r9
   2914c:	add	r8, r8, r4
   29150:	cmp	r8, #6
   29154:	beq	29208 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x170>
   29158:	add	r4, r4, #1
   2915c:	mov	r3, #5
   29160:	str	r3, [r6, #160]	; 0xa0
   29164:	mov	r0, r4
   29168:	add	sp, sp, #12
   2916c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29170:	cmp	r3, #47	; 0x2f
   29174:	bne	290e4 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x4c>
   29178:	ldr	r9, [r7, #12]
   2917c:	ldr	r8, [r6, #192]	; 0xc0
   29180:	sub	r8, r8, r9
   29184:	add	r8, r8, r4
   29188:	cmp	r8, #6
   2918c:	bne	29158 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29190:	mov	r2, r8
   29194:	mov	r1, r9
   29198:	mov	r0, r6
   2919c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   291a0:	ldr	r1, [pc, #452]	; 2936c <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d4>
   291a4:	mov	r2, r8
   291a8:	add	r1, pc, r1
   291ac:	bl	102a4 <mycore_strncasecmp@plt>
   291b0:	cmp	r0, #0
   291b4:	bne	29230 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x198>
   291b8:	ldr	r3, [r6, #192]	; 0xc0
   291bc:	mov	r0, #64	; 0x40
   291c0:	sub	r3, r3, #8
   291c4:	str	r0, [sp]
   291c8:	mov	r2, r5
   291cc:	mov	r1, r7
   291d0:	add	r3, r3, r4
   291d4:	mov	r0, r6
   291d8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   291dc:	cmp	r0, #0
   291e0:	beq	292fc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   291e4:	mov	r1, #112	; 0x70
   291e8:	mov	r2, #3
   291ec:	mov	r3, #33	; 0x21
   291f0:	str	r9, [r0, #24]
   291f4:	str	r8, [r0, #28]
   291f8:	str	r1, [r0]
   291fc:	str	r2, [r0, #48]	; 0x30
   29200:	str	r3, [r6, #160]	; 0xa0
   29204:	b	29238 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x1a0>
   29208:	mov	r2, r8
   2920c:	mov	r1, r9
   29210:	mov	r0, r6
   29214:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29218:	ldr	r1, [pc, #336]	; 29370 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2d8>
   2921c:	mov	r2, r8
   29220:	add	r1, pc, r1
   29224:	bl	102a4 <mycore_strncasecmp@plt>
   29228:	cmp	r0, #0
   2922c:	beq	29330 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x298>
   29230:	mov	r3, #5
   29234:	str	r3, [r6, #160]	; 0xa0
   29238:	add	r4, r4, #1
   2923c:	mov	r0, r4
   29240:	add	sp, sp, #12
   29244:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29248:	ldr	r9, [r7, #12]
   2924c:	ldr	r8, [r6, #192]	; 0xc0
   29250:	sub	r8, r8, r9
   29254:	add	r8, r8, r4
   29258:	cmp	r8, #6
   2925c:	bne	29158 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29260:	mov	r2, r8
   29264:	mov	r1, r9
   29268:	mov	r0, r6
   2926c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29270:	ldr	r1, [pc, #252]	; 29374 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x2dc>
   29274:	mov	r2, r8
   29278:	add	r1, pc, r1
   2927c:	bl	102a4 <mycore_strncasecmp@plt>
   29280:	cmp	r0, #0
   29284:	bne	29158 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xc0>
   29288:	ldr	r3, [r6, #192]	; 0xc0
   2928c:	mov	r0, #64	; 0x40
   29290:	sub	r3, r3, #8
   29294:	mov	r2, r5
   29298:	str	r0, [sp]
   2929c:	mov	r1, r7
   292a0:	add	r3, r3, r4
   292a4:	mov	r0, r6
   292a8:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   292ac:	subs	r2, r0, #0
   292b0:	beq	292fc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   292b4:	ldr	r3, [r6, #192]	; 0xc0
   292b8:	ldr	r1, [r2, #32]
   292bc:	add	r4, r4, #1
   292c0:	add	r3, r4, r3
   292c4:	sub	r3, r3, r1
   292c8:	mov	ip, #112	; 0x70
   292cc:	mov	r0, #1
   292d0:	str	r0, [r2, #48]	; 0x30
   292d4:	str	r9, [r2, #24]
   292d8:	str	r8, [r2, #28]
   292dc:	str	r3, [r2, #36]	; 0x24
   292e0:	mov	r1, r4
   292e4:	str	ip, [r2]
   292e8:	mov	r0, r6
   292ec:	bl	10028 <myhtml_queue_add@plt>
   292f0:	cmp	r0, #0
   292f4:	streq	r0, [r6, #160]	; 0xa0
   292f8:	beq	29164 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   292fc:	mov	r3, #69	; 0x45
   29300:	str	r3, [r6, #160]	; 0xa0
   29304:	mov	r4, #0
   29308:	b	29164 <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0xcc>
   2930c:	mov	r3, #5
   29310:	mov	r0, r4
   29314:	str	r3, [r6, #160]	; 0xa0
   29318:	add	sp, sp, #12
   2931c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29320:	mov	r4, ip
   29324:	mov	r0, r4
   29328:	add	sp, sp, #12
   2932c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   29330:	ldr	r3, [r6, #192]	; 0xc0
   29334:	mov	r0, #64	; 0x40
   29338:	sub	r3, r3, #8
   2933c:	mov	r2, r5
   29340:	mov	r1, r7
   29344:	str	r0, [sp]
   29348:	add	r3, r3, r4
   2934c:	mov	r0, r6
   29350:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   29354:	cmp	r0, #0
   29358:	movne	r1, #112	; 0x70
   2935c:	movne	r2, #1
   29360:	bne	291ec <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x154>
   29364:	b	292fc <myhtml_tokenizer_state_script_data_end_tag_name@@Base+0x264>
   29368:	addeq	r0, r0, fp, lsl r0
   2936c:	andeq	r1, sp, r4, asr #26
   29370:	andeq	r1, sp, ip, asr #25
   29374:	andeq	r1, sp, r4, ror ip

00029378 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base>:
   29378:	ldrb	r2, [r2, r3]
   2937c:	cmp	r2, #45	; 0x2d
   29380:	beq	293a4 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   29384:	cmp	r2, #60	; 0x3c
   29388:	moveq	r2, #24
   2938c:	streq	r2, [r0, #160]	; 0xa0
   29390:	beq	293a4 <myhtml_tokenizer_state_script_data_escaped_dash_dash@@Base+0x2c>
   29394:	cmp	r2, #62	; 0x3e
   29398:	moveq	r2, #5
   2939c:	movne	r2, #21
   293a0:	str	r2, [r0, #160]	; 0xa0
   293a4:	add	r0, r3, #1
   293a8:	bx	lr

000293ac <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base>:
   293ac:	ldrb	r2, [r2, r3]
   293b0:	cmp	r2, #47	; 0x2f
   293b4:	moveq	r2, #25
   293b8:	addeq	r3, r3, #1
   293bc:	streq	r2, [r0, #160]	; 0xa0
   293c0:	beq	293ec <myhtml_tokenizer_state_script_data_escaped_less_than_sign@@Base+0x40>
   293c4:	bic	r2, r2, #32
   293c8:	sub	r2, r2, #65	; 0x41
   293cc:	cmp	r2, #25
   293d0:	movls	ip, #27
   293d4:	ldrls	r2, [r0, #192]	; 0xc0
   293d8:	movhi	r2, #21
   293dc:	addls	r2, r2, r3
   293e0:	strls	r2, [r1, #12]
   293e4:	strhi	r2, [r0, #160]	; 0xa0
   293e8:	strls	ip, [r0, #160]	; 0xa0
   293ec:	mov	r0, r3
   293f0:	bx	lr

000293f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_open@@Base>:
   293f4:	ldrb	r2, [r2, r3]
   293f8:	bic	r2, r2, #32
   293fc:	sub	r2, r2, #65	; 0x41
   29400:	cmp	r2, #25
   29404:	movls	ip, #26
   29408:	ldrls	r2, [r0, #192]	; 0xc0
   2940c:	movhi	r2, #21
   29410:	addls	r2, r2, r3
   29414:	strls	r2, [r1, #12]
   29418:	strhi	r2, [r0, #160]	; 0xa0
   2941c:	strls	ip, [r0, #160]	; 0xa0
   29420:	mov	r0, r3
   29424:	bx	lr

00029428 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base>:
   29428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2942c:	sub	sp, sp, #8
   29430:	mov	r4, r3
   29434:	ldr	ip, [sp, #40]	; 0x28
   29438:	cmp	r3, ip
   2943c:	bcs	294f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   29440:	ldrb	r3, [r2, r3]
   29444:	mov	r7, r1
   29448:	mov	r5, r2
   2944c:	add	r1, r2, r4
   29450:	sub	r2, r3, #9
   29454:	mov	r6, r0
   29458:	uxtb	r2, r2
   2945c:	cmp	r2, #23
   29460:	bhi	29500 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xd8>
   29464:	ldr	r0, [pc, #656]	; 296fc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d4>
   29468:	mvn	r2, r0, lsr r2
   2946c:	tst	r2, #1
   29470:	beq	294d0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xa8>
   29474:	cmp	r3, #62	; 0x3e
   29478:	ldrne	r0, [pc, #636]	; 296fc <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d4>
   2947c:	bne	29494 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x6c>
   29480:	b	295d8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1b0>
   29484:	cmp	r3, #47	; 0x2f
   29488:	beq	29508 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xe0>
   2948c:	cmp	r3, #62	; 0x3e
   29490:	beq	295d8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1b0>
   29494:	bic	r3, r3, #32
   29498:	sub	r3, r3, #65	; 0x41
   2949c:	cmp	r3, #25
   294a0:	bhi	296a0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x278>
   294a4:	add	r4, r4, #1
   294a8:	cmp	ip, r4
   294ac:	beq	296b4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x28c>
   294b0:	ldrb	r3, [r1, #1]!
   294b4:	sub	r2, r3, #9
   294b8:	uxtb	r2, r2
   294bc:	cmp	r2, #23
   294c0:	mvn	r2, r0, lsr r2
   294c4:	bhi	29484 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x5c>
   294c8:	tst	r2, #1
   294cc:	bne	2948c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x64>
   294d0:	ldr	r9, [r7, #12]
   294d4:	ldr	r8, [r6, #192]	; 0xc0
   294d8:	sub	r8, r8, r9
   294dc:	add	r8, r8, r4
   294e0:	cmp	r8, #6
   294e4:	beq	29598 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x170>
   294e8:	add	r4, r4, #1
   294ec:	mov	r3, #21
   294f0:	str	r3, [r6, #160]	; 0xa0
   294f4:	mov	r0, r4
   294f8:	add	sp, sp, #8
   294fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29500:	cmp	r3, #47	; 0x2f
   29504:	bne	29474 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x4c>
   29508:	ldr	r9, [r7, #12]
   2950c:	ldr	r8, [r6, #192]	; 0xc0
   29510:	sub	r8, r8, r9
   29514:	add	r8, r8, r4
   29518:	cmp	r8, #6
   2951c:	bne	294e8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   29520:	mov	r2, r8
   29524:	mov	r1, r9
   29528:	mov	r0, r6
   2952c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29530:	ldr	r1, [pc, #456]	; 29700 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2d8>
   29534:	mov	r2, r8
   29538:	add	r1, pc, r1
   2953c:	bl	102a4 <mycore_strncasecmp@plt>
   29540:	cmp	r0, #0
   29544:	bne	295c0 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x198>
   29548:	ldr	r3, [r6, #192]	; 0xc0
   2954c:	mov	r0, #64	; 0x40
   29550:	sub	r3, r3, #8
   29554:	str	r0, [sp]
   29558:	mov	r2, r5
   2955c:	mov	r1, r7
   29560:	add	r3, r3, r4
   29564:	mov	r0, r6
   29568:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2956c:	cmp	r0, #0
   29570:	beq	29690 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   29574:	mov	r1, #112	; 0x70
   29578:	mov	r2, #3
   2957c:	mov	r3, #33	; 0x21
   29580:	str	r9, [r0, #24]
   29584:	str	r8, [r0, #28]
   29588:	str	r1, [r0]
   2958c:	str	r2, [r0, #48]	; 0x30
   29590:	str	r3, [r6, #160]	; 0xa0
   29594:	b	295c8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x1a0>
   29598:	mov	r2, r8
   2959c:	mov	r1, r9
   295a0:	mov	r0, r6
   295a4:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   295a8:	ldr	r1, [pc, #340]	; 29704 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2dc>
   295ac:	mov	r2, r8
   295b0:	add	r1, pc, r1
   295b4:	bl	102a4 <mycore_strncasecmp@plt>
   295b8:	cmp	r0, #0
   295bc:	beq	296c4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x29c>
   295c0:	mov	r3, #21
   295c4:	str	r3, [r6, #160]	; 0xa0
   295c8:	add	r4, r4, #1
   295cc:	mov	r0, r4
   295d0:	add	sp, sp, #8
   295d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   295d8:	ldr	r9, [r7, #12]
   295dc:	ldr	r8, [r6, #192]	; 0xc0
   295e0:	sub	r8, r8, r9
   295e4:	add	r8, r8, r4
   295e8:	cmp	r8, #6
   295ec:	bne	294e8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   295f0:	mov	r2, r8
   295f4:	mov	r1, r9
   295f8:	mov	r0, r6
   295fc:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29600:	ldr	r1, [pc, #256]	; 29708 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x2e0>
   29604:	mov	r2, r8
   29608:	add	r1, pc, r1
   2960c:	bl	102a4 <mycore_strncasecmp@plt>
   29610:	subs	sl, r0, #0
   29614:	bne	294e8 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xc0>
   29618:	ldr	r3, [r6, #192]	; 0xc0
   2961c:	mov	r0, #64	; 0x40
   29620:	sub	r3, r3, #8
   29624:	str	r0, [sp]
   29628:	mov	r2, r5
   2962c:	mov	r1, r7
   29630:	add	r3, r3, r4
   29634:	mov	r0, r6
   29638:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   2963c:	cmp	r0, #0
   29640:	beq	29690 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   29644:	ldr	r3, [r6, #192]	; 0xc0
   29648:	ldr	r2, [r0, #32]
   2964c:	add	r4, r4, #1
   29650:	add	r3, r4, r3
   29654:	sub	r3, r3, r2
   29658:	mov	r1, #112	; 0x70
   2965c:	mov	r2, #1
   29660:	str	r1, [r0]
   29664:	str	r2, [r0, #48]	; 0x30
   29668:	str	r9, [r0, #24]
   2966c:	str	r8, [r0, #28]
   29670:	mov	r2, r0
   29674:	str	sl, [r6, #160]	; 0xa0
   29678:	mov	r1, r4
   2967c:	str	r3, [r0, #36]	; 0x24
   29680:	mov	r0, r6
   29684:	bl	10028 <myhtml_queue_add@plt>
   29688:	cmp	r0, #0
   2968c:	beq	294f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   29690:	mov	r3, #69	; 0x45
   29694:	str	r3, [r6, #160]	; 0xa0
   29698:	mov	r4, #0
   2969c:	b	294f4 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0xcc>
   296a0:	mov	r3, #21
   296a4:	mov	r0, r4
   296a8:	str	r3, [r6, #160]	; 0xa0
   296ac:	add	sp, sp, #8
   296b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   296b4:	mov	r4, ip
   296b8:	mov	r0, r4
   296bc:	add	sp, sp, #8
   296c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   296c4:	ldr	r3, [r6, #192]	; 0xc0
   296c8:	mov	r0, #64	; 0x40
   296cc:	sub	r3, r3, #8
   296d0:	mov	r2, r5
   296d4:	mov	r1, r7
   296d8:	str	r0, [sp]
   296dc:	add	r3, r3, r4
   296e0:	mov	r0, r6
   296e4:	bl	10ca0 <myhtml_tokenizer_queue_create_text_node_if_need@plt>
   296e8:	cmp	r0, #0
   296ec:	movne	r1, #112	; 0x70
   296f0:	movne	r2, #1
   296f4:	bne	2957c <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x154>
   296f8:	b	29690 <myhtml_tokenizer_state_script_data_escaped_end_tag_name@@Base+0x268>
   296fc:	addeq	r0, r0, fp, lsl r0
   29700:			; <UNDEFINED> instruction: 0x000d19b4
   29704:	andeq	r1, sp, ip, lsr r9
   29708:	andeq	r1, sp, r4, ror #17

0002970c <myhtml_tokenizer_state_script_data_escaped@@Base>:
   2970c:	ldr	ip, [sp]
   29710:	cmp	r3, ip
   29714:	bcs	29774 <myhtml_tokenizer_state_script_data_escaped@@Base+0x68>
   29718:	ldrb	r1, [r2, r3]
   2971c:	add	r2, r2, r3
   29720:	cmp	r1, #45	; 0x2d
   29724:	bne	29744 <myhtml_tokenizer_state_script_data_escaped@@Base+0x38>
   29728:	b	29760 <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   2972c:	add	r3, r3, #1
   29730:	cmp	ip, r3
   29734:	beq	29758 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4c>
   29738:	ldrb	r1, [r2, #1]!
   2973c:	cmp	r1, #45	; 0x2d
   29740:	beq	29760 <myhtml_tokenizer_state_script_data_escaped@@Base+0x54>
   29744:	cmp	r1, #60	; 0x3c
   29748:	bne	2972c <myhtml_tokenizer_state_script_data_escaped@@Base+0x20>
   2974c:	add	ip, r3, #1
   29750:	mov	r2, #24
   29754:	str	r2, [r0, #160]	; 0xa0
   29758:	mov	r0, ip
   2975c:	bx	lr
   29760:	mov	r2, #22
   29764:	add	ip, r3, #1
   29768:	str	r2, [r0, #160]	; 0xa0
   2976c:	mov	r0, ip
   29770:	bx	lr
   29774:	mov	ip, r3
   29778:	b	29758 <myhtml_tokenizer_state_script_data_escaped@@Base+0x4c>

0002977c <myhtml_tokenizer_state_script_data_escaped_dash@@Base>:
   2977c:	ldrb	r2, [r2, r3]
   29780:	cmp	r2, #45	; 0x2d
   29784:	moveq	r2, #23
   29788:	addeq	r3, r3, #1
   2978c:	streq	r2, [r0, #160]	; 0xa0
   29790:	beq	297b4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   29794:	cmp	r2, #60	; 0x3c
   29798:	moveq	r2, #24
   2979c:	streq	r2, [r0, #160]	; 0xa0
   297a0:	beq	297b4 <myhtml_tokenizer_state_script_data_escaped_dash@@Base+0x38>
   297a4:	cmp	r2, #0
   297a8:	addne	r3, r3, #1
   297ac:	mov	r2, #21
   297b0:	str	r2, [r0, #160]	; 0xa0
   297b4:	mov	r0, r3
   297b8:	bx	lr

000297bc <myhtml_tokenizer_state_script_data_double_escape_start@@Base>:
   297bc:	push	{r4, r5, r6, r7, lr}
   297c0:	sub	sp, sp, #12
   297c4:	ldr	r5, [sp, #32]
   297c8:	cmp	r3, r5
   297cc:	bcs	298fc <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x140>
   297d0:	ldrb	ip, [r2, r3]
   297d4:	mov	r4, r0
   297d8:	add	r2, r2, r3
   297dc:	sub	r0, ip, #9
   297e0:	uxtb	lr, r0
   297e4:	cmp	lr, #23
   297e8:	movhi	r0, #0
   297ec:	ldrls	r0, [pc, #272]	; 29904 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x148>
   297f0:	mvnls	r0, r0, lsr lr
   297f4:	andls	r0, r0, #1
   297f8:	eorls	r0, r0, #1
   297fc:	cmp	ip, #62	; 0x3e
   29800:	cmpne	ip, #47	; 0x2f
   29804:	moveq	lr, #1
   29808:	movne	lr, #0
   2980c:	orrs	r0, r0, lr
   29810:	ldreq	r6, [pc, #236]	; 29904 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x148>
   29814:	beq	2985c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xa0>
   29818:	b	29884 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc8>
   2981c:	add	r3, r3, #1
   29820:	cmp	r5, r3
   29824:	beq	298f0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x134>
   29828:	ldrb	ip, [r2, #1]!
   2982c:	sub	lr, ip, #9
   29830:	uxtb	lr, lr
   29834:	cmp	lr, #23
   29838:	mvn	lr, r6, lsr lr
   2983c:	andls	lr, lr, #1
   29840:	eorls	r7, lr, #1
   29844:	cmp	ip, #62	; 0x3e
   29848:	cmpne	ip, #47	; 0x2f
   2984c:	moveq	lr, #1
   29850:	movne	lr, #0
   29854:	orrs	lr, r7, lr
   29858:	bne	29884 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xc8>
   2985c:	bic	ip, ip, #32
   29860:	sub	ip, ip, #65	; 0x41
   29864:	cmp	ip, #25
   29868:	mov	r7, r0
   2986c:	bls	2981c <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x60>
   29870:	mov	r2, #21
   29874:	mov	r0, r3
   29878:	str	r2, [r4, #160]	; 0xa0
   2987c:	add	sp, sp, #12
   29880:	pop	{r4, r5, r6, r7, pc}
   29884:	ldr	r1, [r1, #12]
   29888:	ldr	r5, [r4, #192]	; 0xc0
   2988c:	sub	r5, r5, r1
   29890:	add	r5, r5, r3
   29894:	cmp	r5, #6
   29898:	beq	298b0 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xf4>
   2989c:	add	r0, r3, #1
   298a0:	mov	r2, #21
   298a4:	str	r2, [r4, #160]	; 0xa0
   298a8:	add	sp, sp, #12
   298ac:	pop	{r4, r5, r6, r7, pc}
   298b0:	mov	r2, r5
   298b4:	mov	r0, r4
   298b8:	str	r3, [sp, #4]
   298bc:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   298c0:	ldr	r1, [pc, #64]	; 29908 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0x14c>
   298c4:	mov	r2, r5
   298c8:	add	r1, pc, r1
   298cc:	bl	102a4 <mycore_strncasecmp@plt>
   298d0:	ldr	r3, [sp, #4]
   298d4:	cmp	r0, #0
   298d8:	moveq	r2, #28
   298dc:	movne	r2, #21
   298e0:	add	r0, r3, #1
   298e4:	str	r2, [r4, #160]	; 0xa0
   298e8:	add	sp, sp, #12
   298ec:	pop	{r4, r5, r6, r7, pc}
   298f0:	mov	r0, r5
   298f4:	add	sp, sp, #12
   298f8:	pop	{r4, r5, r6, r7, pc}
   298fc:	mov	r0, r3
   29900:	b	298a8 <myhtml_tokenizer_state_script_data_double_escape_start@@Base+0xec>
   29904:	addeq	r0, r0, fp, lsl r0
   29908:	andeq	r1, sp, r4, lsr #12

0002990c <myhtml_tokenizer_state_script_data_double_escaped@@Base>:
   2990c:	ldr	ip, [sp]
   29910:	cmp	r3, ip
   29914:	bcs	29974 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x68>
   29918:	ldrb	r1, [r2, r3]
   2991c:	add	r2, r2, r3
   29920:	cmp	r1, #45	; 0x2d
   29924:	bne	29944 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x38>
   29928:	b	29960 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   2992c:	add	r3, r3, #1
   29930:	cmp	ip, r3
   29934:	beq	29958 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4c>
   29938:	ldrb	r1, [r2, #1]!
   2993c:	cmp	r1, #45	; 0x2d
   29940:	beq	29960 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x54>
   29944:	cmp	r1, #60	; 0x3c
   29948:	bne	2992c <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x20>
   2994c:	add	ip, r3, #1
   29950:	mov	r2, #31
   29954:	str	r2, [r0, #160]	; 0xa0
   29958:	mov	r0, ip
   2995c:	bx	lr
   29960:	mov	r2, #29
   29964:	add	ip, r3, #1
   29968:	str	r2, [r0, #160]	; 0xa0
   2996c:	mov	r0, ip
   29970:	bx	lr
   29974:	mov	ip, r3
   29978:	b	29958 <myhtml_tokenizer_state_script_data_double_escaped@@Base+0x4c>

0002997c <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base>:
   2997c:	ldrb	r2, [r2, r3]
   29980:	cmp	r2, #45	; 0x2d
   29984:	moveq	r2, #30
   29988:	streq	r2, [r0, #160]	; 0xa0
   2998c:	beq	299a0 <myhtml_tokenizer_state_script_data_double_escaped_dash@@Base+0x24>
   29990:	cmp	r2, #60	; 0x3c
   29994:	moveq	r2, #31
   29998:	movne	r2, #28
   2999c:	str	r2, [r0, #160]	; 0xa0
   299a0:	add	r0, r3, #1
   299a4:	bx	lr

000299a8 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base>:
   299a8:	ldrb	r2, [r2, r3]
   299ac:	cmp	r2, #45	; 0x2d
   299b0:	beq	299d4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   299b4:	cmp	r2, #60	; 0x3c
   299b8:	moveq	r2, #31
   299bc:	streq	r2, [r0, #160]	; 0xa0
   299c0:	beq	299d4 <myhtml_tokenizer_state_script_data_double_escaped_dash_dash@@Base+0x2c>
   299c4:	cmp	r2, #62	; 0x3e
   299c8:	moveq	r2, #5
   299cc:	movne	r2, #28
   299d0:	str	r2, [r0, #160]	; 0xa0
   299d4:	add	r0, r3, #1
   299d8:	bx	lr

000299dc <myhtml_tokenizer_state_script_data_double_escaped_less_than_sign@@Base>:
   299dc:	ldrb	r2, [r2, r3]
   299e0:	cmp	r2, #47	; 0x2f
   299e4:	addeq	r3, r3, #1
   299e8:	ldreq	r2, [r0, #192]	; 0xc0
   299ec:	moveq	ip, #32
   299f0:	addeq	r2, r2, r3
   299f4:	movne	r2, #28
   299f8:	streq	ip, [r0, #160]	; 0xa0
   299fc:	strne	r2, [r0, #160]	; 0xa0
   29a00:	streq	r2, [r1, #12]
   29a04:	mov	r0, r3
   29a08:	bx	lr

00029a0c <myhtml_tokenizer_state_script_data_double_escape_end@@Base>:
   29a0c:	push	{r4, r5, r6, r7, lr}
   29a10:	sub	sp, sp, #12
   29a14:	ldr	r5, [sp, #32]
   29a18:	cmp	r3, r5
   29a1c:	bcs	29b4c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x140>
   29a20:	ldrb	ip, [r2, r3]
   29a24:	mov	r4, r0
   29a28:	add	r2, r2, r3
   29a2c:	sub	r0, ip, #9
   29a30:	uxtb	lr, r0
   29a34:	cmp	lr, #23
   29a38:	movhi	r0, #0
   29a3c:	ldrls	r0, [pc, #272]	; 29b54 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x148>
   29a40:	mvnls	r0, r0, lsr lr
   29a44:	andls	r0, r0, #1
   29a48:	eorls	r0, r0, #1
   29a4c:	cmp	ip, #62	; 0x3e
   29a50:	cmpne	ip, #47	; 0x2f
   29a54:	moveq	lr, #1
   29a58:	movne	lr, #0
   29a5c:	orrs	r0, r0, lr
   29a60:	ldreq	r6, [pc, #236]	; 29b54 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x148>
   29a64:	beq	29aac <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xa0>
   29a68:	b	29ad4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc8>
   29a6c:	add	r3, r3, #1
   29a70:	cmp	r5, r3
   29a74:	beq	29b40 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x134>
   29a78:	ldrb	ip, [r2, #1]!
   29a7c:	sub	lr, ip, #9
   29a80:	uxtb	lr, lr
   29a84:	cmp	lr, #23
   29a88:	mvn	lr, r6, lsr lr
   29a8c:	andls	lr, lr, #1
   29a90:	eorls	r7, lr, #1
   29a94:	cmp	ip, #62	; 0x3e
   29a98:	cmpne	ip, #47	; 0x2f
   29a9c:	moveq	lr, #1
   29aa0:	movne	lr, #0
   29aa4:	orrs	lr, r7, lr
   29aa8:	bne	29ad4 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xc8>
   29aac:	bic	ip, ip, #32
   29ab0:	sub	ip, ip, #65	; 0x41
   29ab4:	cmp	ip, #25
   29ab8:	mov	r7, r0
   29abc:	bls	29a6c <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x60>
   29ac0:	mov	r2, #28
   29ac4:	mov	r0, r3
   29ac8:	str	r2, [r4, #160]	; 0xa0
   29acc:	add	sp, sp, #12
   29ad0:	pop	{r4, r5, r6, r7, pc}
   29ad4:	ldr	r1, [r1, #12]
   29ad8:	ldr	r5, [r4, #192]	; 0xc0
   29adc:	sub	r5, r5, r1
   29ae0:	add	r5, r5, r3
   29ae4:	cmp	r5, #6
   29ae8:	beq	29b00 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xf4>
   29aec:	add	r0, r3, #1
   29af0:	mov	r2, #28
   29af4:	str	r2, [r4, #160]	; 0xa0
   29af8:	add	sp, sp, #12
   29afc:	pop	{r4, r5, r6, r7, pc}
   29b00:	mov	r2, r5
   29b04:	mov	r0, r4
   29b08:	str	r3, [sp, #4]
   29b0c:	bl	fe60 <myhtml_tree_incomming_buffer_make_data@plt>
   29b10:	ldr	r1, [pc, #64]	; 29b58 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0x14c>
   29b14:	mov	r2, r5
   29b18:	add	r1, pc, r1
   29b1c:	bl	102a4 <mycore_strncasecmp@plt>
   29b20:	ldr	r3, [sp, #4]
   29b24:	cmp	r0, #0
   29b28:	moveq	r2, #21
   29b2c:	movne	r2, #28
   29b30:	add	r0, r3, #1
   29b34:	str	r2, [r4, #160]	; 0xa0
   29b38:	add	sp, sp, #12
   29b3c:	pop	{r4, r5, r6, r7, pc}
   29b40:	mov	r0, r5
   29b44:	add	sp, sp, #12
   29b48:	pop	{r4, r5, r6, r7, pc}
   29b4c:	mov	r0, r3
   29b50:	b	29af8 <myhtml_tokenizer_state_script_data_double_escape_end@@Base+0xec>
   29b54:	addeq	r0, r0, fp, lsl r0
   29b58:	ldrdeq	r1, [sp], -r4

00029b5c <myhtml_tree_create@@Base>:
   29b5c:	mov	r1, #252	; 0xfc
   29b60:	mov	r0, #1
   29b64:	b	ff14 <mycore_calloc@plt>

00029b68 <myhtml_tree_node_clean@@Base>:
   29b68:	push	{r4, lr}
   29b6c:	mov	r2, #44	; 0x2c
   29b70:	mov	r4, r0
   29b74:	mov	r1, #0
   29b78:	bl	108b0 <memset@plt>
   29b7c:	mov	r3, #1
   29b80:	str	r3, [r4, #8]
   29b84:	pop	{r4, pc}

00029b88 <myhtml_tree_parse_flags@@Base>:
   29b88:	ldr	r0, [r0, #184]	; 0xb8
   29b8c:	bx	lr

00029b90 <myhtml_tree_parse_flags_set@@Base>:
   29b90:	str	r1, [r0, #184]	; 0xb8
   29b94:	bx	lr

00029b98 <myhtml_tree_get_myhtml@@Base>:
   29b98:	cmp	r0, #0
   29b9c:	ldrne	r0, [r0]
   29ba0:	bx	lr

00029ba4 <myhtml_tree_get_tag@@Base>:
   29ba4:	cmp	r0, #0
   29ba8:	ldrne	r0, [r0, #28]
   29bac:	bx	lr

00029bb0 <myhtml_tree_get_document@@Base>:
   29bb0:	ldr	r0, [r0, #84]	; 0x54
   29bb4:	bx	lr

00029bb8 <myhtml_tree_get_node_html@@Base>:
   29bb8:	ldr	r0, [r0, #96]	; 0x60
   29bbc:	bx	lr

00029bc0 <myhtml_tree_get_node_body@@Base>:
   29bc0:	ldr	r0, [r0, #100]	; 0x64
   29bc4:	bx	lr

00029bc8 <myhtml_tree_get_node_head@@Base>:
   29bc8:	ldr	r0, [r0, #92]	; 0x5c
   29bcc:	bx	lr

00029bd0 <myhtml_tree_get_mchar@@Base>:
   29bd0:	ldr	r0, [r0, #4]
   29bd4:	bx	lr

00029bd8 <myhtml_tree_get_mchar_node_id@@Base>:
   29bd8:	ldr	r0, [r0, #52]	; 0x34
   29bdc:	bx	lr

00029be0 <myhtml_tree_node_create@@Base>:
   29be0:	push	{r4, r5, r6, lr}
   29be4:	mov	r2, #0
   29be8:	ldr	r1, [r0, #48]	; 0x30
   29bec:	mov	r4, r0
   29bf0:	ldr	r0, [r0, #12]
   29bf4:	bl	10bbc <mcobject_async_malloc@plt>
   29bf8:	mov	r5, r0
   29bfc:	bl	1109c <myhtml_tree_node_clean@plt>
   29c00:	str	r4, [r5, #40]	; 0x28
   29c04:	mov	r0, r5
   29c08:	pop	{r4, r5, r6, pc}

00029c0c <myhtml_tree_node_add_child@@Base>:
   29c0c:	ldr	r3, [r0, #28]
   29c10:	push	{lr}		; (str lr, [sp, #-4]!)
   29c14:	cmp	r3, #0
   29c18:	strne	r1, [r3, #16]
   29c1c:	strne	r3, [r1, #12]
   29c20:	ldr	r3, [r1, #40]	; 0x28
   29c24:	streq	r1, [r0, #20]
   29c28:	str	r0, [r1, #24]
   29c2c:	ldr	lr, [r3, #236]	; 0xec
   29c30:	str	r1, [r0, #28]
   29c34:	cmp	lr, #0
   29c38:	popeq	{pc}		; (ldreq pc, [sp], #4)
   29c3c:	ldr	r2, [r3, #244]	; 0xf4
   29c40:	mov	r0, r3
   29c44:	mov	r3, lr
   29c48:	pop	{lr}		; (ldr lr, [sp], #4)
   29c4c:	bx	r3

00029c50 <myhtml_tree_node_insert_before@@Base>:
   29c50:	ldr	r3, [r0, #12]
   29c54:	push	{lr}		; (str lr, [sp, #-4]!)
   29c58:	cmp	r3, #0
   29c5c:	strne	r1, [r3, #16]
   29c60:	ldrne	r2, [r0, #24]
   29c64:	strne	r3, [r1, #12]
   29c68:	ldr	r3, [r1, #40]	; 0x28
   29c6c:	ldreq	r2, [r0, #24]
   29c70:	ldr	lr, [r3, #236]	; 0xec
   29c74:	streq	r1, [r2, #20]
   29c78:	cmp	lr, #0
   29c7c:	str	r2, [r1, #24]
   29c80:	str	r0, [r1, #16]
   29c84:	str	r1, [r0, #12]
   29c88:	popeq	{pc}		; (ldreq pc, [sp], #4)
   29c8c:	ldr	r2, [r3, #244]	; 0xf4
   29c90:	mov	r0, r3
   29c94:	mov	r3, lr
   29c98:	pop	{lr}		; (ldr lr, [sp], #4)
   29c9c:	bx	r3

00029ca0 <myhtml_tree_node_insert_after@@Base>:
   29ca0:	ldr	r3, [r0, #16]
   29ca4:	push	{lr}		; (str lr, [sp, #-4]!)
   29ca8:	cmp	r3, #0
   29cac:	strne	r1, [r3, #12]
   29cb0:	ldrne	r2, [r0, #24]
   29cb4:	strne	r3, [r1, #16]
   29cb8:	ldr	r3, [r1, #40]	; 0x28
   29cbc:	ldreq	r2, [r0, #24]
   29cc0:	ldr	lr, [r3, #236]	; 0xec
   29cc4:	streq	r1, [r2, #28]
   29cc8:	cmp	lr, #0
   29ccc:	str	r2, [r1, #24]
   29cd0:	str	r0, [r1, #12]
   29cd4:	str	r1, [r0, #16]
   29cd8:	popeq	{pc}		; (ldreq pc, [sp], #4)
   29cdc:	ldr	r2, [r3, #244]	; 0xf4
   29ce0:	mov	r0, r3
   29ce4:	mov	r3, lr
   29ce8:	pop	{lr}		; (ldr lr, [sp], #4)
   29cec:	bx	r3

00029cf0 <myhtml_tree_node_find_parent_by_tag_id@@Base>:
   29cf0:	ldr	r0, [r0, #24]
   29cf4:	cmp	r0, #0
   29cf8:	bxeq	lr
   29cfc:	ldr	r3, [r0, #4]
   29d00:	cmp	r1, r3
   29d04:	bxeq	lr
   29d08:	ldr	r0, [r0, #24]
   29d0c:	cmp	r0, #0
   29d10:	bxeq	lr
   29d14:	ldr	r3, [r0, #4]
   29d18:	cmp	r3, r1
   29d1c:	bne	29d08 <myhtml_tree_node_find_parent_by_tag_id@@Base+0x18>
   29d20:	bx	lr

00029d24 <myhtml_tree_node_remove@@Base>:
   29d24:	ldr	r3, [r0, #16]
   29d28:	push	{r4, lr}
   29d2c:	cmp	r3, #0
   29d30:	mov	r4, r0
   29d34:	beq	29d84 <myhtml_tree_node_remove@@Base+0x60>
   29d38:	ldr	r2, [r0, #12]
   29d3c:	str	r2, [r3, #12]
   29d40:	ldr	r2, [r0, #12]
   29d44:	cmp	r2, #0
   29d48:	beq	29da8 <myhtml_tree_node_remove@@Base+0x84>
   29d4c:	str	r3, [r2, #16]
   29d50:	ldr	r0, [r4, #40]	; 0x28
   29d54:	ldr	r3, [r0, #240]	; 0xf0
   29d58:	cmp	r3, #0
   29d5c:	beq	29d6c <myhtml_tree_node_remove@@Base+0x48>
   29d60:	ldr	r2, [r0, #248]	; 0xf8
   29d64:	mov	r1, r4
   29d68:	blx	r3
   29d6c:	mov	r3, #0
   29d70:	str	r3, [r4, #16]
   29d74:	str	r3, [r4, #12]
   29d78:	str	r3, [r4, #24]
   29d7c:	mov	r0, r4
   29d80:	pop	{r4, pc}
   29d84:	ldr	r1, [r0, #24]
   29d88:	ldr	r2, [r0, #12]
   29d8c:	cmp	r1, #0
   29d90:	beq	29db8 <myhtml_tree_node_remove@@Base+0x94>
   29d94:	cmp	r2, #0
   29d98:	str	r2, [r1, #28]
   29d9c:	bne	29d4c <myhtml_tree_node_remove@@Base+0x28>
   29da0:	str	r3, [r1, #20]
   29da4:	b	29d50 <myhtml_tree_node_remove@@Base+0x2c>
   29da8:	ldr	r1, [r0, #24]
   29dac:	cmp	r1, #0
   29db0:	strne	r3, [r1, #20]
   29db4:	b	29d50 <myhtml_tree_node_remove@@Base+0x2c>
   29db8:	cmp	r2, #0
   29dbc:	bne	29d4c <myhtml_tree_node_remove@@Base+0x28>
   29dc0:	b	29d50 <myhtml_tree_node_remove@@Base+0x2c>

00029dc4 <myhtml_tree_node_free@@Base>:
   29dc4:	push	{r4, lr}
   29dc8:	subs	r4, r0, #0
   29dcc:	popeq	{r4, pc}
   29dd0:	ldr	r1, [r4, #32]
   29dd4:	cmp	r1, #0
   29dd8:	beq	29df8 <myhtml_tree_node_free@@Base+0x34>
   29ddc:	ldr	r3, [r4, #40]	; 0x28
   29de0:	ldr	r0, [r3, #8]
   29de4:	bl	107e4 <myhtml_token_attr_delete_all@plt>
   29de8:	ldr	r3, [r4, #40]	; 0x28
   29dec:	ldr	r1, [r4, #32]
   29df0:	ldr	r0, [r3, #8]
   29df4:	bl	10f88 <myhtml_token_delete@plt>
   29df8:	ldr	r3, [r4, #40]	; 0x28
   29dfc:	mov	r1, r4
   29e00:	pop	{r4, lr}
   29e04:	ldr	r0, [r3, #12]
   29e08:	b	1004c <mcobject_async_free@plt>

00029e0c <myhtml_tree_node_delete@@Base>:
   29e0c:	subs	r3, r0, #0
   29e10:	bxeq	lr
   29e14:	push	{r4, lr}
   29e18:	mov	r4, r3
   29e1c:	bl	10df0 <myhtml_tree_node_remove@plt>
   29e20:	mov	r0, r4
   29e24:	pop	{r4, lr}
   29e28:	b	10d00 <myhtml_tree_node_free@plt>
   29e2c:	push	{r4, lr}
   29e30:	subs	r4, r0, #0
   29e34:	popeq	{r4, pc}
   29e38:	ldr	r3, [r4, #20]
   29e3c:	subs	r0, r3, #0
   29e40:	beq	29e48 <myhtml_tree_node_delete@@Base+0x3c>
   29e44:	bl	29e2c <myhtml_tree_node_delete@@Base+0x20>
   29e48:	ldr	r4, [r4, #16]
   29e4c:	mov	r0, r4
   29e50:	bl	10dc0 <myhtml_tree_node_delete@plt>
   29e54:	cmp	r4, #0
   29e58:	bne	29e38 <myhtml_tree_node_delete@@Base+0x2c>
   29e5c:	pop	{r4, pc}

00029e60 <myhtml_tree_node_delete_recursive@@Base>:
   29e60:	push	{r4, lr}
   29e64:	subs	r4, r0, #0
   29e68:	popeq	{r4, pc}
   29e6c:	ldr	r0, [r4, #20]
   29e70:	cmp	r0, #0
   29e74:	beq	29e7c <myhtml_tree_node_delete_recursive@@Base+0x1c>
   29e78:	bl	29e2c <myhtml_tree_node_delete@@Base+0x20>
   29e7c:	mov	r0, r4
   29e80:	pop	{r4, lr}
   29e84:	b	10dc0 <myhtml_tree_node_delete@plt>

00029e88 <myhtml_tree_node_clone@@Base>:
   29e88:	push	{r4, r5, r6, lr}
   29e8c:	mov	r4, r0
   29e90:	ldr	r0, [r0, #40]	; 0x28
   29e94:	bl	ffe0 <myhtml_tree_node_create@plt>
   29e98:	ldr	r1, [r4, #32]
   29e9c:	cmp	r1, #0
   29ea0:	mov	r5, r0
   29ea4:	beq	29eb8 <myhtml_tree_node_clone@@Base+0x30>
   29ea8:	ldr	r3, [r4, #40]	; 0x28
   29eac:	ldr	r0, [r3, #8]
   29eb0:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   29eb4:	ldr	r1, [r4, #32]
   29eb8:	ldr	r0, [r4, #40]	; 0x28
   29ebc:	ldr	r3, [r0, #44]	; 0x2c
   29ec0:	ldr	r2, [r0, #40]	; 0x28
   29ec4:	ldr	r0, [r0, #8]
   29ec8:	bl	ff2c <myhtml_token_node_clone@plt>
   29ecc:	ldmib	r4, {r2, r3}
   29ed0:	stmib	r5, {r2, r3}
   29ed4:	cmp	r0, #0
   29ed8:	str	r0, [r5, #32]
   29edc:	ldrne	r3, [r0, #48]	; 0x30
   29ee0:	orrne	r3, r3, #4
   29ee4:	strne	r3, [r0, #48]	; 0x30
   29ee8:	mov	r0, r5
   29eec:	pop	{r4, r5, r6, pc}

00029ef0 <myhtml_tree_node_insert_by_mode@@Base>:
   29ef0:	cmp	r2, #0
   29ef4:	beq	29f04 <myhtml_tree_node_insert_by_mode@@Base+0x14>
   29ef8:	cmp	r2, #1
   29efc:	beq	29f08 <myhtml_tree_node_insert_by_mode@@Base+0x18>
   29f00:	b	10364 <myhtml_tree_node_insert_after@plt>
   29f04:	b	106b8 <myhtml_tree_node_add_child@plt>
   29f08:	b	103f4 <myhtml_tree_node_insert_before@plt>

00029f0c <myhtml_tree_node_insert_doctype@@Base>:
   29f0c:	push	{r4, r5, r6, lr}
   29f10:	mov	r6, r1
   29f14:	mov	r5, r0
   29f18:	bl	ffe0 <myhtml_tree_node_create@plt>
   29f1c:	mov	r2, #1
   29f20:	mov	r3, #3
   29f24:	mov	r4, r0
   29f28:	str	r6, [r0, #32]
   29f2c:	mov	r1, r4
   29f30:	ldr	r0, [r5, #84]	; 0x54
   29f34:	str	r2, [r4, #8]
   29f38:	str	r3, [r4, #4]
   29f3c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   29f40:	mov	r0, r4
   29f44:	pop	{r4, r5, r6, pc}

00029f48 <myhtml_tree_element_in_scope@@Base>:
   29f48:	ldr	ip, [r0, #128]	; 0x80
   29f4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29f50:	ldr	r5, [ip, #4]
   29f54:	ldr	r4, [ip]
   29f58:	cmp	r5, #0
   29f5c:	beq	29fe8 <myhtml_tree_element_in_scope@@Base+0xa0>
   29f60:	mov	r6, r3
   29f64:	mov	r9, r2
   29f68:	mov	r8, r1
   29f6c:	mov	r7, r0
   29f70:	add	r4, r4, r5, lsl #2
   29f74:	b	29f9c <myhtml_tree_element_in_scope@@Base+0x54>
   29f78:	ldr	ip, [r3, #8]
   29f7c:	cmp	r6, #128	; 0x80
   29f80:	add	r3, ip, #4
   29f84:	beq	29fdc <myhtml_tree_element_in_scope@@Base+0x94>
   29f88:	ldr	r3, [r0, r3, lsl #2]
   29f8c:	tst	r6, r3
   29f90:	bne	29fe8 <myhtml_tree_element_in_scope@@Base+0xa0>
   29f94:	cmp	r5, #0
   29f98:	beq	29fe8 <myhtml_tree_element_in_scope@@Base+0xa0>
   29f9c:	ldr	r3, [r4, #-4]
   29fa0:	ldr	r0, [r7, #28]
   29fa4:	sub	r5, r5, #1
   29fa8:	ldr	r1, [r3, #4]
   29fac:	bl	10a24 <myhtml_tag_get_by_id@plt>
   29fb0:	ldr	r3, [r4, #-4]!
   29fb4:	ldr	r2, [r3, #4]
   29fb8:	cmp	r2, r8
   29fbc:	bne	29f78 <myhtml_tree_element_in_scope@@Base+0x30>
   29fc0:	cmp	r9, #0
   29fc4:	beq	29fd4 <myhtml_tree_element_in_scope@@Base+0x8c>
   29fc8:	ldr	ip, [r3, #8]
   29fcc:	cmp	r9, ip
   29fd0:	bne	29f7c <myhtml_tree_element_in_scope@@Base+0x34>
   29fd4:	mov	r0, r3
   29fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   29fdc:	ldr	r3, [r0, r3, lsl #2]
   29fe0:	tst	r3, #128	; 0x80
   29fe4:	bne	29f94 <myhtml_tree_element_in_scope@@Base+0x4c>
   29fe8:	mov	r3, #0
   29fec:	mov	r0, r3
   29ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00029ff4 <myhtml_tree_element_in_scope_by_node@@Base>:
   29ff4:	push	{r4, r5, r6, r7, r8, lr}
   29ff8:	ldr	r8, [r0, #40]	; 0x28
   29ffc:	ldr	r3, [r8, #128]	; 0x80
   2a000:	ldr	r5, [r3, #4]
   2a004:	ldr	r4, [r3]
   2a008:	cmp	r5, #0
   2a00c:	movne	r6, r1
   2a010:	movne	r7, r0
   2a014:	addne	r4, r4, r5, lsl #2
   2a018:	bne	2a030 <myhtml_tree_element_in_scope_by_node@@Base+0x3c>
   2a01c:	b	2a06c <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   2a020:	tst	r6, r3
   2a024:	bne	2a06c <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   2a028:	cmp	r5, #0
   2a02c:	beq	2a06c <myhtml_tree_element_in_scope_by_node@@Base+0x78>
   2a030:	ldr	r3, [r4, #-4]
   2a034:	ldr	r0, [r8, #28]
   2a038:	sub	r5, r5, #1
   2a03c:	ldr	r1, [r3, #4]
   2a040:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2a044:	ldr	r3, [r4, #-4]!
   2a048:	cmp	r7, r3
   2a04c:	beq	2a074 <myhtml_tree_element_in_scope_by_node@@Base+0x80>
   2a050:	ldr	r3, [r3, #8]
   2a054:	cmp	r6, #128	; 0x80
   2a058:	add	r3, r3, #4
   2a05c:	ldr	r3, [r0, r3, lsl #2]
   2a060:	bne	2a020 <myhtml_tree_element_in_scope_by_node@@Base+0x2c>
   2a064:	tst	r3, #128	; 0x80
   2a068:	bne	2a028 <myhtml_tree_element_in_scope_by_node@@Base+0x34>
   2a06c:	mov	r0, #0
   2a070:	pop	{r4, r5, r6, r7, r8, pc}
   2a074:	mov	r0, #1
   2a078:	pop	{r4, r5, r6, r7, r8, pc}

0002a07c <myhtml_tree_list_init@@Base>:
   2a07c:	push	{r4, lr}
   2a080:	mov	r0, #12
   2a084:	bl	10c94 <mycore_malloc@plt>
   2a088:	mov	r2, #0
   2a08c:	mov	r3, #4096	; 0x1000
   2a090:	mov	r4, r0
   2a094:	str	r2, [r0, #4]
   2a098:	str	r3, [r0, #8]
   2a09c:	mov	r0, #16384	; 0x4000
   2a0a0:	bl	10c94 <mycore_malloc@plt>
   2a0a4:	str	r0, [r4]
   2a0a8:	mov	r0, r4
   2a0ac:	pop	{r4, pc}

0002a0b0 <myhtml_tree_list_clean@@Base>:
   2a0b0:	mov	r3, #0
   2a0b4:	str	r3, [r0, #4]
   2a0b8:	bx	lr

0002a0bc <myhtml_tree_list_destroy@@Base>:
   2a0bc:	push	{r4, r5, r6, lr}
   2a0c0:	subs	r4, r0, #0
   2a0c4:	beq	2a0e4 <myhtml_tree_list_destroy@@Base+0x28>
   2a0c8:	ldr	r0, [r4]
   2a0cc:	mov	r5, r1
   2a0d0:	cmp	r0, #0
   2a0d4:	beq	2a0dc <myhtml_tree_list_destroy@@Base+0x20>
   2a0d8:	bl	10dcc <mycore_free@plt>
   2a0dc:	cmp	r5, #0
   2a0e0:	bne	2a0ec <myhtml_tree_list_destroy@@Base+0x30>
   2a0e4:	mov	r0, r4
   2a0e8:	pop	{r4, r5, r6, pc}
   2a0ec:	mov	r0, r4
   2a0f0:	bl	10dcc <mycore_free@plt>
   2a0f4:	mov	r4, #0
   2a0f8:	b	2a0e4 <myhtml_tree_list_destroy@@Base+0x28>

0002a0fc <myhtml_tree_list_append@@Base>:
   2a0fc:	push	{r4, r5, r6, lr}
   2a100:	mov	r5, r1
   2a104:	ldr	r3, [r0, #4]
   2a108:	ldr	r1, [r0, #8]
   2a10c:	mov	r4, r0
   2a110:	cmp	r3, r1
   2a114:	bcs	2a134 <myhtml_tree_list_append@@Base+0x38>
   2a118:	ldr	r0, [r4]
   2a11c:	ldr	r2, [r4, #4]
   2a120:	ldr	r3, [r4, #4]
   2a124:	add	r3, r3, #1
   2a128:	str	r5, [r0, r2, lsl #2]
   2a12c:	str	r3, [r4, #4]
   2a130:	pop	{r4, r5, r6, pc}
   2a134:	lsl	r3, r1, #1
   2a138:	str	r3, [r0, #8]
   2a13c:	lsl	r1, r1, #3
   2a140:	ldr	r0, [r0]
   2a144:	bl	fbd8 <mycore_realloc@plt>
   2a148:	cmp	r0, #0
   2a14c:	strne	r0, [r4]
   2a150:	bne	2a11c <myhtml_tree_list_append@@Base+0x20>
   2a154:	b	2a118 <myhtml_tree_list_append@@Base+0x1c>

0002a158 <myhtml_tree_list_insert_by_index@@Base>:
   2a158:	push	{r4, r5, r6, lr}
   2a15c:	mov	r5, r1
   2a160:	ldr	r3, [r0, #4]
   2a164:	ldr	r1, [r0, #8]
   2a168:	mov	r4, r0
   2a16c:	cmp	r3, r1
   2a170:	mov	r6, r2
   2a174:	bcs	2a1b8 <myhtml_tree_list_insert_by_index@@Base+0x60>
   2a178:	ldr	r1, [r4]
   2a17c:	ldr	r3, [r4, #4]
   2a180:	add	r0, r6, #1
   2a184:	sub	r2, r3, r6
   2a188:	lsl	r0, r0, #2
   2a18c:	sub	r6, r0, #4
   2a190:	lsl	r2, r2, #2
   2a194:	add	r0, r1, r0
   2a198:	add	r1, r1, r6
   2a19c:	bl	fe78 <memmove@plt>
   2a1a0:	ldr	r3, [r4, #4]
   2a1a4:	ldr	r2, [r4]
   2a1a8:	add	r3, r3, #1
   2a1ac:	str	r5, [r2, r6]
   2a1b0:	str	r3, [r4, #4]
   2a1b4:	pop	{r4, r5, r6, pc}
   2a1b8:	lsl	r3, r1, #1
   2a1bc:	str	r3, [r0, #8]
   2a1c0:	lsl	r1, r1, #3
   2a1c4:	ldr	r0, [r0]
   2a1c8:	bl	fbd8 <mycore_realloc@plt>
   2a1cc:	subs	r1, r0, #0
   2a1d0:	strne	r1, [r4]
   2a1d4:	bne	2a17c <myhtml_tree_list_insert_by_index@@Base+0x24>
   2a1d8:	b	2a178 <myhtml_tree_list_insert_by_index@@Base+0x20>

0002a1dc <myhtml_tree_list_append_after_index@@Base>:
   2a1dc:	add	r2, r2, #1
   2a1e0:	b	102bc <myhtml_tree_list_insert_by_index@plt>

0002a1e4 <myhtml_tree_list_current_node@@Base>:
   2a1e4:	ldr	r3, [r0, #4]
   2a1e8:	cmp	r3, #0
   2a1ec:	ldrne	r3, [r0, #4]
   2a1f0:	ldrne	r2, [r0]
   2a1f4:	subne	r3, r3, #-1073741823	; 0xc0000001
   2a1f8:	ldrne	r0, [r2, r3, lsl #2]
   2a1fc:	moveq	r0, r3
   2a200:	bx	lr

0002a204 <myhtml_tree_open_elements_init@@Base>:
   2a204:	b	1085c <myhtml_tree_list_init@plt>

0002a208 <myhtml_tree_open_elements_clean@@Base>:
   2a208:	ldr	r3, [r0, #128]	; 0x80
   2a20c:	mov	r2, #0
   2a210:	str	r2, [r3, #4]
   2a214:	bx	lr

0002a218 <myhtml_tree_open_elements_destroy@@Base>:
   2a218:	ldr	r0, [r0, #128]	; 0x80
   2a21c:	mov	r1, #1
   2a220:	b	106f4 <myhtml_tree_list_destroy@plt>

0002a224 <myhtml_tree_current_node@@Base>:
   2a224:	ldr	r3, [r0, #128]	; 0x80
   2a228:	ldr	r0, [r3, #4]
   2a22c:	cmp	r0, #0
   2a230:	ldrne	r2, [r3, #4]
   2a234:	ldrne	r1, [r3]
   2a238:	subne	r3, r2, #-1073741823	; 0xc0000001
   2a23c:	ldrne	r0, [r1, r3, lsl #2]
   2a240:	bx	lr

0002a244 <myhtml_tree_adjusted_current_node@@Base>:
   2a244:	ldr	r3, [r0, #128]	; 0x80
   2a248:	ldr	r3, [r3, #4]
   2a24c:	cmp	r3, #1
   2a250:	beq	2a258 <myhtml_tree_adjusted_current_node@@Base+0x14>
   2a254:	b	10628 <myhtml_tree_current_node@plt>
   2a258:	ldr	r3, [r0, #88]	; 0x58
   2a25c:	cmp	r3, #0
   2a260:	beq	2a254 <myhtml_tree_adjusted_current_node@@Base+0x10>
   2a264:	mov	r0, r3
   2a268:	bx	lr

0002a26c <myhtml_tree_open_elements_append@@Base>:
   2a26c:	ldr	r0, [r0, #128]	; 0x80
   2a270:	b	10220 <myhtml_tree_list_append@plt>

0002a274 <myhtml_tree_node_insert_root@@Base>:
   2a274:	push	{r4, r5, r6, r7, r8, lr}
   2a278:	mov	r6, r1
   2a27c:	mov	r7, r2
   2a280:	mov	r5, r0
   2a284:	bl	ffe0 <myhtml_tree_node_create@plt>
   2a288:	cmp	r6, #0
   2a28c:	moveq	r3, #65	; 0x41
   2a290:	ldrne	r3, [r6]
   2a294:	mov	r4, r0
   2a298:	str	r3, [r0, #4]
   2a29c:	str	r6, [r0, #32]
   2a2a0:	str	r7, [r0, #8]
   2a2a4:	mov	r1, r0
   2a2a8:	ldr	r0, [r5, #84]	; 0x54
   2a2ac:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2a2b0:	mov	r0, r5
   2a2b4:	mov	r1, r4
   2a2b8:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2a2bc:	str	r4, [r5, #96]	; 0x60
   2a2c0:	mov	r0, r4
   2a2c4:	pop	{r4, r5, r6, r7, r8, pc}

0002a2c8 <myhtml_tree_open_elements_append_after_index@@Base>:
   2a2c8:	ldr	r0, [r0, #128]	; 0x80
   2a2cc:	b	109c4 <myhtml_tree_list_append_after_index@plt>

0002a2d0 <myhtml_tree_open_elements_pop@@Base>:
   2a2d0:	ldr	r3, [r0, #128]	; 0x80
   2a2d4:	ldr	r2, [r3, #4]
   2a2d8:	cmp	r2, #0
   2a2dc:	ldrne	r2, [r3, #4]
   2a2e0:	subne	r2, r2, #1
   2a2e4:	strne	r2, [r3, #4]
   2a2e8:	bx	lr

0002a2ec <myhtml_tree_open_elements_remove@@Base>:
   2a2ec:	push	{r4, r5, r6, lr}
   2a2f0:	ldr	r5, [r0, #128]	; 0x80
   2a2f4:	ldr	r3, [r5, #4]
   2a2f8:	ldr	r4, [r5]
   2a2fc:	cmp	r3, #0
   2a300:	popeq	{r4, r5, r6, pc}
   2a304:	sub	r2, r3, #1
   2a308:	ldr	lr, [r4, r2, lsl #2]
   2a30c:	add	ip, r4, r2, lsl #2
   2a310:	cmp	r1, lr
   2a314:	subne	r3, r3, #-1073741822	; 0xc0000002
   2a318:	addne	r3, r4, r3, lsl #2
   2a31c:	bne	2a33c <myhtml_tree_open_elements_remove@@Base+0x50>
   2a320:	b	2a34c <myhtml_tree_open_elements_remove@@Base+0x60>
   2a324:	ldr	lr, [ip]
   2a328:	sub	r3, r3, #4
   2a32c:	cmp	lr, r1
   2a330:	sub	lr, r2, #1
   2a334:	beq	2a354 <myhtml_tree_open_elements_remove@@Base+0x68>
   2a338:	mov	r2, lr
   2a33c:	cmp	r2, #0
   2a340:	mov	ip, r3
   2a344:	bne	2a324 <myhtml_tree_open_elements_remove@@Base+0x38>
   2a348:	pop	{r4, r5, r6, pc}
   2a34c:	mov	lr, r2
   2a350:	mov	r2, r3
   2a354:	ldr	r3, [r5, #4]
   2a358:	add	r1, r4, r2, lsl #2
   2a35c:	sub	r2, r3, lr
   2a360:	mov	r6, r0
   2a364:	lsl	r2, r2, #2
   2a368:	mov	r0, ip
   2a36c:	bl	fe78 <memmove@plt>
   2a370:	ldr	r2, [r6, #128]	; 0x80
   2a374:	ldr	r3, [r2, #4]
   2a378:	sub	r3, r3, #1
   2a37c:	str	r3, [r2, #4]
   2a380:	pop	{r4, r5, r6, pc}

0002a384 <myhtml_tree_open_elements_pop_until@@Base>:
   2a384:	ldr	r0, [r0, #128]	; 0x80
   2a388:	push	{lr}		; (str lr, [sp, #-4]!)
   2a38c:	ldr	lr, [r0]
   2a390:	ldr	ip, [r0, #4]
   2a394:	cmp	ip, #0
   2a398:	beq	2a3ec <myhtml_tree_open_elements_pop_until@@Base+0x68>
   2a39c:	ldr	ip, [r0, #4]
   2a3a0:	sub	ip, ip, #1
   2a3a4:	str	ip, [r0, #4]
   2a3a8:	ldr	ip, [r0, #4]
   2a3ac:	ldr	ip, [lr, ip, lsl #2]
   2a3b0:	ldr	ip, [ip, #4]
   2a3b4:	cmp	ip, r1
   2a3b8:	bne	2a390 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   2a3bc:	cmp	r2, #0
   2a3c0:	beq	2a3d8 <myhtml_tree_open_elements_pop_until@@Base+0x54>
   2a3c4:	ldr	ip, [r0, #4]
   2a3c8:	ldr	ip, [lr, ip, lsl #2]
   2a3cc:	ldr	ip, [ip, #8]
   2a3d0:	cmp	r2, ip
   2a3d4:	bne	2a390 <myhtml_tree_open_elements_pop_until@@Base+0xc>
   2a3d8:	cmp	r3, #0
   2a3dc:	ldrne	r3, [r0, #4]
   2a3e0:	addne	r3, r3, #1
   2a3e4:	strne	r3, [r0, #4]
   2a3e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a3ec:	pop	{pc}		; (ldr pc, [sp], #4)

0002a3f0 <myhtml_tree_open_elements_pop_until_by_node@@Base>:
   2a3f0:	ldr	r3, [r0, #128]	; 0x80
   2a3f4:	ldr	ip, [r3]
   2a3f8:	b	2a418 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x28>
   2a3fc:	ldr	r0, [r3, #4]
   2a400:	sub	r0, r0, #1
   2a404:	str	r0, [r3, #4]
   2a408:	ldr	r0, [r3, #4]
   2a40c:	ldr	r0, [ip, r0, lsl #2]
   2a410:	cmp	r0, r1
   2a414:	beq	2a428 <myhtml_tree_open_elements_pop_until_by_node@@Base+0x38>
   2a418:	ldr	r0, [r3, #4]
   2a41c:	cmp	r0, #0
   2a420:	bne	2a3fc <myhtml_tree_open_elements_pop_until_by_node@@Base+0xc>
   2a424:	bx	lr
   2a428:	cmp	r2, #0
   2a42c:	ldrne	r2, [r3, #4]
   2a430:	addne	r2, r2, #1
   2a434:	strne	r2, [r3, #4]
   2a438:	bx	lr

0002a43c <myhtml_tree_open_elements_pop_until_by_index@@Base>:
   2a43c:	ldr	r3, [r0, #128]	; 0x80
   2a440:	b	2a45c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x20>
   2a444:	ldr	r0, [r3, #4]
   2a448:	sub	r0, r0, #1
   2a44c:	str	r0, [r3, #4]
   2a450:	ldr	r0, [r3, #4]
   2a454:	cmp	r0, r1
   2a458:	beq	2a46c <myhtml_tree_open_elements_pop_until_by_index@@Base+0x30>
   2a45c:	ldr	r0, [r3, #4]
   2a460:	cmp	r0, #0
   2a464:	bne	2a444 <myhtml_tree_open_elements_pop_until_by_index@@Base+0x8>
   2a468:	bx	lr
   2a46c:	cmp	r2, #0
   2a470:	ldrne	r2, [r3, #4]
   2a474:	addne	r2, r2, #1
   2a478:	strne	r2, [r3, #4]
   2a47c:	bx	lr

0002a480 <myhtml_tree_open_elements_find_reverse@@Base>:
   2a480:	ldr	r3, [r0, #128]	; 0x80
   2a484:	ldr	ip, [r3, #4]
   2a488:	ldr	r3, [r3]
   2a48c:	cmp	ip, #0
   2a490:	beq	2a4ec <myhtml_tree_open_elements_find_reverse@@Base+0x6c>
   2a494:	sub	r0, ip, #1
   2a498:	push	{lr}		; (str lr, [sp, #-4]!)
   2a49c:	ldr	lr, [r3, r0, lsl #2]
   2a4a0:	cmp	r1, lr
   2a4a4:	subne	ip, ip, #-1073741823	; 0xc0000001
   2a4a8:	addne	r3, r3, ip, lsl #2
   2a4ac:	bne	2a4c4 <myhtml_tree_open_elements_find_reverse@@Base+0x44>
   2a4b0:	b	2a4d0 <myhtml_tree_open_elements_find_reverse@@Base+0x50>
   2a4b4:	ldr	ip, [r3, #-4]!
   2a4b8:	sub	r0, r0, #1
   2a4bc:	cmp	ip, r1
   2a4c0:	beq	2a4d0 <myhtml_tree_open_elements_find_reverse@@Base+0x50>
   2a4c4:	cmp	r0, #0
   2a4c8:	bne	2a4b4 <myhtml_tree_open_elements_find_reverse@@Base+0x34>
   2a4cc:	pop	{pc}		; (ldr pc, [sp], #4)
   2a4d0:	cmp	r2, #0
   2a4d4:	beq	2a4e4 <myhtml_tree_open_elements_find_reverse@@Base+0x64>
   2a4d8:	str	r0, [r2]
   2a4dc:	mov	r0, #1
   2a4e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2a4e4:	mov	r0, #1
   2a4e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2a4ec:	mov	r0, ip
   2a4f0:	bx	lr

0002a4f4 <myhtml_tree_open_elements_find@@Base>:
   2a4f4:	push	{lr}		; (str lr, [sp, #-4]!)
   2a4f8:	ldr	lr, [r0, #128]	; 0x80
   2a4fc:	ldr	r3, [lr, #4]
   2a500:	ldr	r0, [lr]
   2a504:	cmp	r3, #0
   2a508:	beq	2a53c <myhtml_tree_open_elements_find@@Base+0x48>
   2a50c:	ldr	r3, [r0]
   2a510:	cmp	r1, r3
   2a514:	movne	r3, #0
   2a518:	bne	2a52c <myhtml_tree_open_elements_find@@Base+0x38>
   2a51c:	b	2a544 <myhtml_tree_open_elements_find@@Base+0x50>
   2a520:	ldr	ip, [r0, #4]!
   2a524:	cmp	ip, r1
   2a528:	beq	2a548 <myhtml_tree_open_elements_find@@Base+0x54>
   2a52c:	ldr	ip, [lr, #4]
   2a530:	add	r3, r3, #1
   2a534:	cmp	ip, r3
   2a538:	bhi	2a520 <myhtml_tree_open_elements_find@@Base+0x2c>
   2a53c:	mov	r0, #0
   2a540:	pop	{pc}		; (ldr pc, [sp], #4)
   2a544:	mov	r3, #0
   2a548:	cmp	r2, #0
   2a54c:	beq	2a55c <myhtml_tree_open_elements_find@@Base+0x68>
   2a550:	str	r3, [r2]
   2a554:	mov	r0, #1
   2a558:	pop	{pc}		; (ldr pc, [sp], #4)
   2a55c:	mov	r0, #1
   2a560:	pop	{pc}		; (ldr pc, [sp], #4)

0002a564 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base>:
   2a564:	ldr	r0, [r0, #128]	; 0x80
   2a568:	push	{r4, lr}
   2a56c:	ldr	ip, [r0, #4]
   2a570:	ldr	lr, [r0]
   2a574:	cmp	ip, #0
   2a578:	beq	2a5c4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x60>
   2a57c:	add	lr, lr, ip, lsl #2
   2a580:	b	2a58c <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x28>
   2a584:	cmp	ip, #0
   2a588:	beq	2a5c4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x60>
   2a58c:	ldr	r0, [lr, #-4]!
   2a590:	sub	ip, ip, #1
   2a594:	ldr	r4, [r0, #4]
   2a598:	cmp	r4, r1
   2a59c:	bne	2a584 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   2a5a0:	cmp	r2, #0
   2a5a4:	beq	2a5b4 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x50>
   2a5a8:	ldr	r4, [r0, #8]
   2a5ac:	cmp	r2, r4
   2a5b0:	bne	2a584 <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x20>
   2a5b4:	cmp	r3, #0
   2a5b8:	beq	2a5cc <myhtml_tree_open_elements_find_by_tag_idx_reverse@@Base+0x68>
   2a5bc:	str	ip, [r3]
   2a5c0:	pop	{r4, pc}
   2a5c4:	mov	r0, ip
   2a5c8:	pop	{r4, pc}
   2a5cc:	pop	{r4, pc}

0002a5d0 <myhtml_tree_open_elements_find_by_tag_idx@@Base>:
   2a5d0:	push	{r4, r5, lr}
   2a5d4:	ldr	r5, [r0, #128]	; 0x80
   2a5d8:	ldr	r0, [r5, #4]
   2a5dc:	ldr	lr, [r5]
   2a5e0:	cmp	r0, #0
   2a5e4:	popeq	{r4, r5, pc}
   2a5e8:	sub	lr, lr, #4
   2a5ec:	mov	ip, #0
   2a5f0:	b	2a604 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x34>
   2a5f4:	ldr	r0, [r5, #4]
   2a5f8:	add	ip, ip, #1
   2a5fc:	cmp	r0, ip
   2a600:	bls	2a638 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x68>
   2a604:	ldr	r0, [lr, #4]!
   2a608:	ldr	r4, [r0, #4]
   2a60c:	cmp	r4, r1
   2a610:	bne	2a5f4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   2a614:	cmp	r2, #0
   2a618:	beq	2a628 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x58>
   2a61c:	ldr	r4, [r0, #8]
   2a620:	cmp	r2, r4
   2a624:	bne	2a5f4 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x24>
   2a628:	cmp	r3, #0
   2a62c:	beq	2a640 <myhtml_tree_open_elements_find_by_tag_idx@@Base+0x70>
   2a630:	str	ip, [r3]
   2a634:	pop	{r4, r5, pc}
   2a638:	mov	r0, #0
   2a63c:	pop	{r4, r5, pc}
   2a640:	pop	{r4, r5, pc}

0002a644 <myhtml_tree_generate_implied_end_tags@@Base>:
   2a644:	ldr	r3, [r0, #128]	; 0x80
   2a648:	ldr	ip, [r3, #4]
   2a64c:	cmp	ip, #0
   2a650:	bxeq	lr
   2a654:	ldr	r3, [r3, #4]
   2a658:	push	{r4, r5, r6, lr}
   2a65c:	cmp	r3, #0
   2a660:	mov	r6, r2
   2a664:	mov	r5, r1
   2a668:	mov	r4, r0
   2a66c:	popeq	{r4, r5, r6, pc}
   2a670:	mov	r0, r4
   2a674:	bl	10628 <myhtml_tree_current_node@plt>
   2a678:	mov	lr, r0
   2a67c:	mov	r0, r4
   2a680:	ldr	ip, [lr, #4]
   2a684:	sub	r3, ip, #36	; 0x24
   2a688:	cmp	r3, #72	; 0x48
   2a68c:	addls	pc, pc, r3, lsl #2
   2a690:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a694:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a698:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a69c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6a0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6a4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6a8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6ac:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6b0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6b4:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a6b8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6bc:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6c0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6c4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6c8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6cc:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6d0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6d4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6d8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6dc:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6e0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6e4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6e8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6ec:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6f0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6f4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6f8:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a6fc:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a700:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a704:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a708:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a70c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a710:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a714:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a718:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a71c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a720:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a724:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a728:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a72c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a730:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a734:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a738:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a73c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a740:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a744:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a748:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a74c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a750:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a754:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a758:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a75c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a760:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a764:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a768:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a76c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a770:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a774:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a778:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a77c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a780:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a784:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a788:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a78c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a790:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a794:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a798:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a79c:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a7a0:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a7a4:	b	2a7e8 <myhtml_tree_generate_implied_end_tags@@Base+0x1a4>
   2a7a8:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a7ac:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a7b0:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a7b4:	b	2a7b8 <myhtml_tree_generate_implied_end_tags@@Base+0x174>
   2a7b8:	cmp	r5, ip
   2a7bc:	bne	2a7d4 <myhtml_tree_generate_implied_end_tags@@Base+0x190>
   2a7c0:	cmp	r6, #0
   2a7c4:	popeq	{r4, r5, r6, pc}
   2a7c8:	ldr	r3, [lr, #8]
   2a7cc:	cmp	r6, r3
   2a7d0:	popeq	{r4, r5, r6, pc}
   2a7d4:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2a7d8:	ldr	r3, [r4, #128]	; 0x80
   2a7dc:	ldr	r3, [r3, #4]
   2a7e0:	cmp	r3, #0
   2a7e4:	bne	2a670 <myhtml_tree_generate_implied_end_tags@@Base+0x2c>
   2a7e8:	pop	{r4, r5, r6, pc}

0002a7ec <myhtml_tree_generate_all_implied_end_tags@@Base>:
   2a7ec:	ldr	r3, [r0, #128]	; 0x80
   2a7f0:	ldr	ip, [r3, #4]
   2a7f4:	cmp	ip, #0
   2a7f8:	bxeq	lr
   2a7fc:	ldr	r3, [r3, #4]
   2a800:	push	{r4, r5, r6, lr}
   2a804:	cmp	r3, #0
   2a808:	mov	r6, r2
   2a80c:	mov	r5, r1
   2a810:	mov	r4, r0
   2a814:	popeq	{r4, r5, r6, pc}
   2a818:	mov	r0, r4
   2a81c:	bl	10628 <myhtml_tree_current_node@plt>
   2a820:	mov	lr, r0
   2a824:	mov	r0, r4
   2a828:	ldr	ip, [lr, #4]
   2a82c:	sub	r3, ip, #27
   2a830:	cmp	r3, #108	; 0x6c
   2a834:	addls	pc, pc, r3, lsl #2
   2a838:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a83c:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a840:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a844:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a848:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a84c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a850:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a854:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a858:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a85c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a860:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a864:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a868:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a86c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a870:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a874:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a878:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a87c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a880:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a884:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a888:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a88c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a890:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a894:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a898:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a89c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8a0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8a4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8a8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8ac:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8b0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8b4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8b8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8bc:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8c0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8c4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8c8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8cc:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8d0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8d4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8d8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8dc:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8e0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8e4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8e8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8ec:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8f0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8f4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8f8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a8fc:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a900:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a904:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a908:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a90c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a910:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a914:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a918:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a91c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a920:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a924:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a928:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a92c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a930:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a934:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a938:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a93c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a940:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a944:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a948:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a94c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a950:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a954:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a958:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a95c:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a960:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a964:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a968:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a96c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a970:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a974:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a978:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a97c:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a980:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a984:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a988:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a98c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a990:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a994:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a998:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a99c:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9a0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9a4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9a8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9ac:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9b0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9b4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9b8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9bc:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9c0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9c4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9c8:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9cc:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9d0:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9d4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9d8:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9dc:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9e0:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9e4:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9e8:	b	2aa20 <myhtml_tree_generate_all_implied_end_tags@@Base+0x234>
   2a9ec:	b	2a9f0 <myhtml_tree_generate_all_implied_end_tags@@Base+0x204>
   2a9f0:	cmp	ip, r5
   2a9f4:	bne	2aa0c <myhtml_tree_generate_all_implied_end_tags@@Base+0x220>
   2a9f8:	cmp	r6, #0
   2a9fc:	popeq	{r4, r5, r6, pc}
   2aa00:	ldr	r3, [lr, #8]
   2aa04:	cmp	r6, r3
   2aa08:	popeq	{r4, r5, r6, pc}
   2aa0c:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2aa10:	ldr	r3, [r4, #128]	; 0x80
   2aa14:	ldr	r3, [r3, #4]
   2aa18:	cmp	r3, #0
   2aa1c:	bne	2a818 <myhtml_tree_generate_all_implied_end_tags@@Base+0x2c>
   2aa20:	pop	{r4, r5, r6, pc}

0002aa24 <myhtml_tree_reset_insertion_mode_appropriately@@Base>:
   2aa24:	ldr	r2, [r0, #128]	; 0x80
   2aa28:	ldr	r3, [r2, #4]
   2aa2c:	cmp	r3, #0
   2aa30:	bxeq	lr
   2aa34:	ldr	r3, [r2, #4]
   2aa38:	push	{r4, r5, r6, r7, lr}
   2aa3c:	cmp	r3, #0
   2aa40:	ldr	r5, [r2]
   2aa44:	beq	2ad34 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x310>
   2aa48:	add	r2, r5, r3, lsl #2
   2aa4c:	subs	lr, r3, #1
   2aa50:	mov	r4, #0
   2aa54:	mov	r7, #1
   2aa58:	ldr	r1, [r2, #-4]!
   2aa5c:	beq	2ac60 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x23c>
   2aa60:	ldr	ip, [r1, #8]
   2aa64:	mov	r6, r4
   2aa68:	cmp	ip, #1
   2aa6c:	bne	2ac50 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x22c>
   2aa70:	ldr	r1, [r1, #4]
   2aa74:	cmp	r1, #114	; 0x72
   2aa78:	sub	ip, r1, #23
   2aa7c:	beq	2ad40 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x31c>
   2aa80:	cmp	ip, #112	; 0x70
   2aa84:	addls	pc, pc, ip, lsl #2
   2aa88:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aa8c:	b	2ac78 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2aa90:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aa94:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aa98:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aa9c:	b	2ac90 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x26c>
   2aaa0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaa4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaa8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaac:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aab0:	b	2ac9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x278>
   2aab4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aab8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aabc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aac0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aac4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aac8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aacc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aad0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aad4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aad8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aadc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aae0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aae4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aae8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaec:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaf0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaf4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aaf8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aafc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab00:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab04:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab08:	b	2aca8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x284>
   2ab0c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab10:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab14:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab18:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab1c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab20:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab24:	b	2acb4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x290>
   2ab28:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab2c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab30:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab34:	b	2acc8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2a4>
   2ab38:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab3c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab40:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab44:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab48:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab4c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab50:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab54:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab58:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab5c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab60:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab64:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab68:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab6c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab70:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab74:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab78:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab7c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab80:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab84:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab88:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab8c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab90:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab94:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab98:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ab9c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aba0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aba4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2aba8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abac:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abb0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abb4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abb8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abbc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abc0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abc4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abc8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abcc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abd0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abd4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abd8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abdc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abe0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abe4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abe8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abec:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abf0:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abf4:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abf8:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2abfc:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac00:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac04:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac08:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac0c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac10:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac14:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac18:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac1c:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac20:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac24:	b	2ace0 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2bc>
   2ac28:	b	2acec <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2ac2c:	b	2acf8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2ac30:	b	2ad0c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2e8>
   2ac34:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac38:	b	2acec <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2ac3c:	b	2acf8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2d4>
   2ac40:	b	2acec <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x2c8>
   2ac44:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac48:	b	2ad24 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x300>
   2ac4c:	b	2ac84 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x260>
   2ac50:	mov	r3, lr
   2ac54:	subs	lr, r3, #1
   2ac58:	ldr	r1, [r2, #-4]!
   2ac5c:	bne	2aa60 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x3c>
   2ac60:	ldr	ip, [r0, #88]	; 0x58
   2ac64:	cmp	ip, #0
   2ac68:	moveq	ip, r1
   2ac6c:	ldr	r1, [ip, #8]
   2ac70:	cmp	r1, #1
   2ac74:	beq	2adb4 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x390>
   2ac78:	mov	r3, #6
   2ac7c:	str	r3, [r0, #168]	; 0xa8
   2ac80:	pop	{r4, r5, r6, r7, pc}
   2ac84:	mov	r3, #13
   2ac88:	str	r3, [r0, #168]	; 0xa8
   2ac8c:	pop	{r4, r5, r6, r7, pc}
   2ac90:	mov	r3, #10
   2ac94:	str	r3, [r0, #168]	; 0xa8
   2ac98:	pop	{r4, r5, r6, r7, pc}
   2ac9c:	mov	r3, #11
   2aca0:	str	r3, [r0, #168]	; 0xa8
   2aca4:	pop	{r4, r5, r6, r7, pc}
   2aca8:	mov	r3, #19
   2acac:	str	r3, [r0, #168]	; 0xa8
   2acb0:	pop	{r4, r5, r6, r7, pc}
   2acb4:	cmp	r6, #0
   2acb8:	bne	2ac78 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2acbc:	mov	r3, #3
   2acc0:	str	r3, [r0, #168]	; 0xa8
   2acc4:	pop	{r4, r5, r6, r7, pc}
   2acc8:	ldr	r3, [r0, #92]	; 0x5c
   2accc:	cmp	r3, #0
   2acd0:	movne	r3, #5
   2acd4:	moveq	r3, #2
   2acd8:	str	r3, [r0, #168]	; 0xa8
   2acdc:	pop	{r4, r5, r6, r7, pc}
   2ace0:	mov	r3, #8
   2ace4:	str	r3, [r0, #168]	; 0xa8
   2ace8:	pop	{r4, r5, r6, r7, pc}
   2acec:	mov	r3, #12
   2acf0:	str	r3, [r0, #168]	; 0xa8
   2acf4:	pop	{r4, r5, r6, r7, pc}
   2acf8:	cmp	r6, #0
   2acfc:	bne	2ac78 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2ad00:	mov	r3, #14
   2ad04:	str	r3, [r0, #168]	; 0xa8
   2ad08:	pop	{r4, r5, r6, r7, pc}
   2ad0c:	ldr	r2, [r0, #140]	; 0x8c
   2ad10:	ldm	r2, {r2, r3}
   2ad14:	sub	r3, r3, #-1073741823	; 0xc0000001
   2ad18:	ldr	r3, [r2, r3, lsl #2]
   2ad1c:	str	r3, [r0, #168]	; 0xa8
   2ad20:	pop	{r4, r5, r6, r7, pc}
   2ad24:	cmp	r6, #0
   2ad28:	bne	2ac78 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x254>
   2ad2c:	cmp	lr, #0
   2ad30:	bne	2ac50 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x22c>
   2ad34:	mov	r3, #0
   2ad38:	str	r3, [r0, #168]	; 0xa8
   2ad3c:	pop	{r4, r5, r6, r7, pc}
   2ad40:	cmp	r6, #0
   2ad44:	bne	2ad9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2ad48:	cmp	lr, #0
   2ad4c:	beq	2ad9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2ad50:	sub	r2, r3, #2
   2ad54:	ldr	r1, [r5, r2, lsl #2]
   2ad58:	ldr	r1, [r1, #4]
   2ad5c:	cmp	r1, #128	; 0x80
   2ad60:	beq	2ad9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2ad64:	cmp	r1, #125	; 0x7d
   2ad68:	subne	r3, r3, #-1073741822	; 0xc0000002
   2ad6c:	addne	r3, r5, r3, lsl #2
   2ad70:	bne	2ad94 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x370>
   2ad74:	b	2ada8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2ad78:	ldr	r1, [r3, #-4]!
   2ad7c:	sub	r2, r2, #1
   2ad80:	ldr	r1, [r1, #4]
   2ad84:	cmp	r1, #128	; 0x80
   2ad88:	beq	2ad9c <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x378>
   2ad8c:	cmp	r1, #125	; 0x7d
   2ad90:	beq	2ada8 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x384>
   2ad94:	cmp	r2, #0
   2ad98:	bne	2ad78 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x354>
   2ad9c:	mov	r3, #15
   2ada0:	str	r3, [r0, #168]	; 0xa8
   2ada4:	pop	{r4, r5, r6, r7, pc}
   2ada8:	mov	r3, #16
   2adac:	str	r3, [r0, #168]	; 0xa8
   2adb0:	pop	{r4, r5, r6, r7, pc}
   2adb4:	mov	r1, ip
   2adb8:	mov	r6, r7
   2adbc:	b	2aa70 <myhtml_tree_reset_insertion_mode_appropriately@@Base+0x4c>

0002adc0 <myhtml_tree_active_formatting_init@@Base>:
   2adc0:	b	1085c <myhtml_tree_list_init@plt>

0002adc4 <myhtml_tree_active_formatting_clean@@Base>:
   2adc4:	ldr	r3, [r0, #124]	; 0x7c
   2adc8:	mov	r2, #0
   2adcc:	str	r2, [r3, #4]
   2add0:	bx	lr

0002add4 <myhtml_tree_active_formatting_destroy@@Base>:
   2add4:	ldr	r0, [r0, #124]	; 0x7c
   2add8:	mov	r1, #1
   2addc:	b	106f4 <myhtml_tree_list_destroy@plt>

0002ade0 <myhtml_tree_active_formatting_is_marker@@Base>:
   2ade0:	ldr	r3, [r0]
   2ade4:	ldr	r3, [r3, #36]	; 0x24
   2ade8:	cmp	r3, r1
   2adec:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2adf0:	ldr	r3, [r1, #4]
   2adf4:	cmp	r3, #83	; 0x53
   2adf8:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2adfc:	bhi	2ae20 <myhtml_tree_active_formatting_is_marker@@Base+0x40>
   2ae00:	cmp	r3, #25
   2ae04:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2ae08:	cmp	r3, #27
   2ae0c:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2ae10:	cmp	r3, #9
   2ae14:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2ae18:	mov	r0, #0
   2ae1c:	bx	lr
   2ae20:	cmp	r3, #127	; 0x7f
   2ae24:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2ae28:	cmp	r3, #131	; 0x83
   2ae2c:	beq	2ae38 <myhtml_tree_active_formatting_is_marker@@Base+0x58>
   2ae30:	cmp	r3, #94	; 0x5e
   2ae34:	bne	2ae18 <myhtml_tree_active_formatting_is_marker@@Base+0x38>
   2ae38:	mov	r0, #1
   2ae3c:	bx	lr

0002ae40 <myhtml_tree_active_formatting_append@@Base>:
   2ae40:	ldr	r0, [r0, #124]	; 0x7c
   2ae44:	b	10220 <myhtml_tree_list_append@plt>

0002ae48 <myhtml_tree_active_formatting_pop@@Base>:
   2ae48:	ldr	r3, [r0, #124]	; 0x7c
   2ae4c:	ldr	r2, [r3, #4]
   2ae50:	cmp	r2, #0
   2ae54:	ldrne	r2, [r3, #4]
   2ae58:	subne	r2, r2, #1
   2ae5c:	strne	r2, [r3, #4]
   2ae60:	bx	lr

0002ae64 <myhtml_tree_active_formatting_remove@@Base>:
   2ae64:	push	{r4, r5, r6, lr}
   2ae68:	ldr	r5, [r0, #124]	; 0x7c
   2ae6c:	ldr	r3, [r5, #4]
   2ae70:	ldr	r4, [r5]
   2ae74:	cmp	r3, #0
   2ae78:	popeq	{r4, r5, r6, pc}
   2ae7c:	sub	r2, r3, #1
   2ae80:	ldr	lr, [r4, r2, lsl #2]
   2ae84:	add	ip, r4, r2, lsl #2
   2ae88:	cmp	r1, lr
   2ae8c:	subne	r3, r3, #-1073741822	; 0xc0000002
   2ae90:	addne	r3, r4, r3, lsl #2
   2ae94:	bne	2aeb4 <myhtml_tree_active_formatting_remove@@Base+0x50>
   2ae98:	b	2aec4 <myhtml_tree_active_formatting_remove@@Base+0x60>
   2ae9c:	ldr	lr, [ip]
   2aea0:	sub	r3, r3, #4
   2aea4:	cmp	lr, r1
   2aea8:	sub	lr, r2, #1
   2aeac:	beq	2aecc <myhtml_tree_active_formatting_remove@@Base+0x68>
   2aeb0:	mov	r2, lr
   2aeb4:	cmp	r2, #0
   2aeb8:	mov	ip, r3
   2aebc:	bne	2ae9c <myhtml_tree_active_formatting_remove@@Base+0x38>
   2aec0:	pop	{r4, r5, r6, pc}
   2aec4:	mov	lr, r2
   2aec8:	mov	r2, r3
   2aecc:	ldr	r3, [r5, #4]
   2aed0:	add	r1, r4, r2, lsl #2
   2aed4:	sub	r2, r3, lr
   2aed8:	mov	r6, r0
   2aedc:	lsl	r2, r2, #2
   2aee0:	mov	r0, ip
   2aee4:	bl	fe78 <memmove@plt>
   2aee8:	ldr	r2, [r6, #124]	; 0x7c
   2aeec:	ldr	r3, [r2, #4]
   2aef0:	sub	r3, r3, #1
   2aef4:	str	r3, [r2, #4]
   2aef8:	pop	{r4, r5, r6, pc}

0002aefc <myhtml_tree_active_formatting_remove_by_index@@Base>:
   2aefc:	push	{r4, lr}
   2af00:	mov	r4, r0
   2af04:	ldr	r0, [r0, #124]	; 0x7c
   2af08:	lsl	r3, r1, #2
   2af0c:	add	ip, r3, #4
   2af10:	ldr	r2, [r0, #4]
   2af14:	ldr	r0, [r0]
   2af18:	sub	r2, r2, r1
   2af1c:	add	r1, r0, ip
   2af20:	lsl	r2, r2, #2
   2af24:	add	r0, r0, r3
   2af28:	bl	fe78 <memmove@plt>
   2af2c:	ldr	r2, [r4, #124]	; 0x7c
   2af30:	ldr	r3, [r2, #4]
   2af34:	sub	r3, r3, #1
   2af38:	str	r3, [r2, #4]
   2af3c:	pop	{r4, pc}

0002af40 <myhtml_tree_active_formatting_append_with_check@@Base>:
   2af40:	ldr	r2, [r0, #124]	; 0x7c
   2af44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2af48:	mov	r6, r0
   2af4c:	ldr	r3, [r2, #4]
   2af50:	mov	r7, r1
   2af54:	cmp	r3, #0
   2af58:	ldr	r4, [r2]
   2af5c:	beq	2b024 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>
   2af60:	sub	r5, r3, #1
   2af64:	add	r4, r4, r3, lsl #2
   2af68:	mov	r9, r5
   2af6c:	mov	r8, #0
   2af70:	b	2af84 <myhtml_tree_active_formatting_append_with_check@@Base+0x44>
   2af74:	cmp	r5, #0
   2af78:	sub	r4, r4, #4
   2af7c:	beq	2b010 <myhtml_tree_active_formatting_append_with_check@@Base+0xd0>
   2af80:	sub	r5, r5, #1
   2af84:	ldr	r1, [r4, #-4]
   2af88:	mov	r0, r6
   2af8c:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2af90:	cmp	r0, #0
   2af94:	bne	2b010 <myhtml_tree_active_formatting_append_with_check@@Base+0xd0>
   2af98:	ldr	r3, [r4, #-4]
   2af9c:	ldr	r3, [r3, #32]
   2afa0:	subs	r1, r3, #0
   2afa4:	beq	2af74 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2afa8:	ldr	r3, [r7, #32]
   2afac:	cmp	r3, #0
   2afb0:	beq	2af74 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2afb4:	ldr	r0, [r6, #8]
   2afb8:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2afbc:	ldr	r1, [r7, #32]
   2afc0:	ldr	r0, [r6, #8]
   2afc4:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2afc8:	ldr	r3, [r4, #-4]
   2afcc:	ldr	r2, [r7, #8]
   2afd0:	ldr	r1, [r3, #8]
   2afd4:	cmp	r1, r2
   2afd8:	bne	2af74 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2afdc:	ldr	r1, [r3, #4]
   2afe0:	ldr	r2, [r7, #4]
   2afe4:	cmp	r1, r2
   2afe8:	bne	2af74 <myhtml_tree_active_formatting_append_with_check@@Base+0x34>
   2afec:	ldr	r0, [r3, #32]
   2aff0:	ldr	r1, [r7, #32]
   2aff4:	bl	10b2c <myhtml_token_attr_compare@plt>
   2aff8:	sub	r4, r4, #4
   2affc:	cmp	r0, #0
   2b000:	addne	r8, r8, #1
   2b004:	movne	r9, r5
   2b008:	cmp	r5, #0
   2b00c:	bne	2af80 <myhtml_tree_active_formatting_append_with_check@@Base+0x40>
   2b010:	cmp	r8, #2
   2b014:	bls	2b024 <myhtml_tree_active_formatting_append_with_check@@Base+0xe4>
   2b018:	mov	r1, r9
   2b01c:	mov	r0, r6
   2b020:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2b024:	mov	r1, r7
   2b028:	mov	r0, r6
   2b02c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b030:	b	100d0 <myhtml_tree_active_formatting_append@plt>

0002b034 <myhtml_tree_active_formatting_current_node@@Base>:
   2b034:	ldr	r3, [r0, #124]	; 0x7c
   2b038:	ldr	r0, [r3, #4]
   2b03c:	cmp	r0, #0
   2b040:	ldrne	r2, [r3, #4]
   2b044:	ldrne	r1, [r3]
   2b048:	subne	r3, r2, #-1073741823	; 0xc0000001
   2b04c:	ldrne	r0, [r1, r3, lsl #2]
   2b050:	bx	lr

0002b054 <myhtml_tree_active_formatting_find@@Base>:
   2b054:	ldr	r3, [r0, #124]	; 0x7c
   2b058:	ldr	ip, [r3, #4]
   2b05c:	ldr	r3, [r3]
   2b060:	cmp	ip, #0
   2b064:	beq	2b0c0 <myhtml_tree_active_formatting_find@@Base+0x6c>
   2b068:	sub	r0, ip, #1
   2b06c:	push	{lr}		; (str lr, [sp, #-4]!)
   2b070:	ldr	lr, [r3, r0, lsl #2]
   2b074:	cmp	r1, lr
   2b078:	subne	ip, ip, #-1073741823	; 0xc0000001
   2b07c:	addne	r3, r3, ip, lsl #2
   2b080:	bne	2b098 <myhtml_tree_active_formatting_find@@Base+0x44>
   2b084:	b	2b0a4 <myhtml_tree_active_formatting_find@@Base+0x50>
   2b088:	ldr	ip, [r3, #-4]!
   2b08c:	sub	r0, r0, #1
   2b090:	cmp	ip, r1
   2b094:	beq	2b0a4 <myhtml_tree_active_formatting_find@@Base+0x50>
   2b098:	cmp	r0, #0
   2b09c:	bne	2b088 <myhtml_tree_active_formatting_find@@Base+0x34>
   2b0a0:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0a4:	cmp	r2, #0
   2b0a8:	beq	2b0b8 <myhtml_tree_active_formatting_find@@Base+0x64>
   2b0ac:	str	r0, [r2]
   2b0b0:	mov	r0, #1
   2b0b4:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0b8:	mov	r0, #1
   2b0bc:	pop	{pc}		; (ldr pc, [sp], #4)
   2b0c0:	mov	r0, ip
   2b0c4:	bx	lr

0002b0c8 <myhtml_tree_active_formatting_up_to_last_marker@@Base>:
   2b0c8:	ldr	r3, [r0, #124]	; 0x7c
   2b0cc:	ldr	r2, [r3, #4]
   2b0d0:	cmp	r2, #0
   2b0d4:	bxeq	lr
   2b0d8:	push	{r4, r5, r6, lr}
   2b0dc:	mov	r4, r0
   2b0e0:	ldr	r5, [r3]
   2b0e4:	b	2b10c <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x44>
   2b0e8:	ldr	r2, [r3, #4]
   2b0ec:	sub	r2, r2, #1
   2b0f0:	str	r2, [r3, #4]
   2b0f4:	ldr	r3, [r3, #4]
   2b0f8:	ldr	r1, [r5, r3, lsl #2]
   2b0fc:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2b100:	cmp	r0, #0
   2b104:	popne	{r4, r5, r6, pc}
   2b108:	ldr	r3, [r4, #124]	; 0x7c
   2b10c:	ldr	r2, [r3, #4]
   2b110:	mov	r0, r4
   2b114:	cmp	r2, #0
   2b118:	bne	2b0e8 <myhtml_tree_active_formatting_up_to_last_marker@@Base+0x20>
   2b11c:	pop	{r4, r5, r6, pc}

0002b120 <myhtml_tree_active_formatting_between_last_marker@@Base>:
   2b120:	ldr	r3, [r0, #124]	; 0x7c
   2b124:	push	{r4, r5, r6, r7, r8, lr}
   2b128:	ldr	r4, [r3, #4]
   2b12c:	ldr	r5, [r3]
   2b130:	cmp	r4, #0
   2b134:	movne	r8, r2
   2b138:	movne	r7, r1
   2b13c:	movne	r6, r0
   2b140:	addne	r5, r5, r4, lsl #2
   2b144:	bne	2b154 <myhtml_tree_active_formatting_between_last_marker@@Base+0x34>
   2b148:	b	2b194 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2b14c:	cmp	r4, #0
   2b150:	beq	2b194 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2b154:	ldr	r1, [r5, #-4]
   2b158:	mov	r0, r6
   2b15c:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2b160:	sub	r4, r4, #1
   2b164:	cmp	r0, #0
   2b168:	bne	2b194 <myhtml_tree_active_formatting_between_last_marker@@Base+0x74>
   2b16c:	ldr	r0, [r5, #-4]!
   2b170:	ldr	r3, [r0, #4]
   2b174:	cmp	r3, r7
   2b178:	bne	2b14c <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2b17c:	ldr	r3, [r0, #8]
   2b180:	cmp	r3, #1
   2b184:	bne	2b14c <myhtml_tree_active_formatting_between_last_marker@@Base+0x2c>
   2b188:	cmp	r8, #0
   2b18c:	strne	r4, [r8]
   2b190:	pop	{r4, r5, r6, r7, r8, pc}
   2b194:	mov	r0, #0
   2b198:	pop	{r4, r5, r6, r7, r8, pc}

0002b19c <myhtml_tree_appropriate_place_inserting@@Base>:
   2b19c:	push	{r4, r5, r6, r7, lr}
   2b1a0:	mov	r3, #0
   2b1a4:	subs	r4, r1, #0
   2b1a8:	sub	sp, sp, #12
   2b1ac:	mov	r6, r2
   2b1b0:	str	r3, [r2]
   2b1b4:	mov	r5, r0
   2b1b8:	beq	2b26c <myhtml_tree_appropriate_place_inserting@@Base+0xd0>
   2b1bc:	ldrb	r3, [r5, #188]	; 0xbc
   2b1c0:	cmp	r3, #0
   2b1c4:	beq	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b1c8:	ldr	r7, [r4, #8]
   2b1cc:	cmp	r7, #1
   2b1d0:	beq	2b1e0 <myhtml_tree_appropriate_place_inserting@@Base+0x44>
   2b1d4:	mov	r0, r4
   2b1d8:	add	sp, sp, #12
   2b1dc:	pop	{r4, r5, r6, r7, pc}
   2b1e0:	ldr	r3, [r4, #4]
   2b1e4:	sub	r3, r3, #125	; 0x7d
   2b1e8:	cmp	r3, #10
   2b1ec:	bhi	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b1f0:	ldr	r2, [pc, #176]	; 2b2a8 <myhtml_tree_appropriate_place_inserting@@Base+0x10c>
   2b1f4:	ands	r3, r2, r7, lsl r3
   2b1f8:	beq	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b1fc:	mov	r3, sp
   2b200:	mov	r2, r7
   2b204:	mov	r1, #128	; 0x80
   2b208:	mov	r0, r5
   2b20c:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2b210:	mov	r2, r7
   2b214:	add	r3, sp, #4
   2b218:	mov	r1, #125	; 0x7d
   2b21c:	mov	r4, r0
   2b220:	mov	r0, r5
   2b224:	bl	fcb0 <myhtml_tree_open_elements_find_by_tag_idx_reverse@plt>
   2b228:	cmp	r4, #0
   2b22c:	beq	2b278 <myhtml_tree_appropriate_place_inserting@@Base+0xdc>
   2b230:	cmp	r0, #0
   2b234:	beq	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b238:	ldm	sp, {r2, r3}
   2b23c:	cmp	r2, r3
   2b240:	bhi	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b244:	ldr	r3, [r0, #24]
   2b248:	cmp	r3, #0
   2b24c:	beq	2b290 <myhtml_tree_appropriate_place_inserting@@Base+0xf4>
   2b250:	ldr	r4, [r0, #12]
   2b254:	cmp	r4, #0
   2b258:	movne	r3, #2
   2b25c:	moveq	r3, #1
   2b260:	moveq	r4, r0
   2b264:	str	r3, [r6]
   2b268:	b	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b26c:	bl	10628 <myhtml_tree_current_node@plt>
   2b270:	mov	r4, r0
   2b274:	b	2b1bc <myhtml_tree_appropriate_place_inserting@@Base+0x20>
   2b278:	cmp	r0, #0
   2b27c:	bne	2b244 <myhtml_tree_appropriate_place_inserting@@Base+0xa8>
   2b280:	ldr	r3, [r5, #128]	; 0x80
   2b284:	ldr	r3, [r3]
   2b288:	ldr	r4, [r3]
   2b28c:	b	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b290:	ldr	r2, [r5, #128]	; 0x80
   2b294:	ldr	r3, [sp, #4]
   2b298:	ldr	r2, [r2]
   2b29c:	sub	r3, r3, #-1073741823	; 0xc0000001
   2b2a0:	ldr	r4, [r2, r3, lsl #2]
   2b2a4:	b	2b1d4 <myhtml_tree_appropriate_place_inserting@@Base+0x38>
   2b2a8:	andeq	r0, r0, r3, lsr #9

0002b2ac <myhtml_tree_node_insert_by_token@@Base>:
   2b2ac:	push	{r4, r5, r6, r7, lr}
   2b2b0:	sub	sp, sp, #12
   2b2b4:	mov	r6, r1
   2b2b8:	mov	r7, r2
   2b2bc:	mov	r5, r0
   2b2c0:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b2c4:	ldr	r3, [r6]
   2b2c8:	add	r2, sp, #4
   2b2cc:	mov	r1, #0
   2b2d0:	mov	r4, r0
   2b2d4:	mov	r0, r5
   2b2d8:	stmib	r4, {r3, r7}
   2b2dc:	str	r6, [r4, #32]
   2b2e0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b2e4:	mov	r1, r4
   2b2e8:	ldr	r2, [sp, #4]
   2b2ec:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b2f0:	mov	r0, r5
   2b2f4:	mov	r1, r4
   2b2f8:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b2fc:	mov	r0, r4
   2b300:	add	sp, sp, #12
   2b304:	pop	{r4, r5, r6, r7, pc}

0002b308 <myhtml_tree_node_insert@@Base>:
   2b308:	push	{r4, r5, r6, r7, lr}
   2b30c:	sub	sp, sp, #12
   2b310:	mov	r7, r1
   2b314:	mov	r6, r2
   2b318:	mov	r5, r0
   2b31c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b320:	mov	r1, #0
   2b324:	add	r2, sp, #4
   2b328:	mov	r4, r0
   2b32c:	str	r7, [r0, #4]
   2b330:	str	r6, [r0, #8]
   2b334:	str	r1, [r0, #32]
   2b338:	mov	r0, r5
   2b33c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b340:	mov	r1, r4
   2b344:	ldr	r2, [sp, #4]
   2b348:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b34c:	mov	r0, r5
   2b350:	mov	r1, r4
   2b354:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b358:	mov	r0, r4
   2b35c:	add	sp, sp, #12
   2b360:	pop	{r4, r5, r6, r7, pc}

0002b364 <myhtml_tree_node_insert_comment@@Base>:
   2b364:	push	{r4, r5, r6, r7, lr}
   2b368:	sub	sp, sp, #12
   2b36c:	mov	r5, r2
   2b370:	mov	r6, r1
   2b374:	mov	r7, r0
   2b378:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b37c:	mov	r3, #2
   2b380:	mov	r2, #0
   2b384:	cmp	r5, #0
   2b388:	str	r2, [sp, #4]
   2b38c:	mov	r4, r0
   2b390:	str	r6, [r0, #32]
   2b394:	str	r3, [r0, #4]
   2b398:	beq	2b3bc <myhtml_tree_node_insert_comment@@Base+0x58>
   2b39c:	mov	r0, r5
   2b3a0:	mov	r1, r4
   2b3a4:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b3a8:	ldr	r3, [r5, #8]
   2b3ac:	mov	r0, r4
   2b3b0:	str	r3, [r4, #8]
   2b3b4:	add	sp, sp, #12
   2b3b8:	pop	{r4, r5, r6, r7, pc}
   2b3bc:	mov	r1, r5
   2b3c0:	add	r2, sp, #4
   2b3c4:	mov	r0, r7
   2b3c8:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b3cc:	ldr	r2, [sp, #4]
   2b3d0:	mov	r5, r0
   2b3d4:	b	2b39c <myhtml_tree_node_insert_comment@@Base+0x38>

0002b3d8 <myhtml_tree_node_insert_text@@Base>:
   2b3d8:	push	{r4, r5, r6, lr}
   2b3dc:	sub	sp, sp, #8
   2b3e0:	mov	r6, r1
   2b3e4:	add	r2, sp, #4
   2b3e8:	mov	r1, #0
   2b3ec:	mov	r4, r0
   2b3f0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b3f4:	ldr	r3, [r4, #84]	; 0x54
   2b3f8:	cmp	r0, r3
   2b3fc:	beq	2b4e8 <myhtml_tree_node_insert_text@@Base+0x110>
   2b400:	ldr	r3, [sp, #4]
   2b404:	mov	r5, r0
   2b408:	cmp	r3, #2
   2b40c:	beq	2b468 <myhtml_tree_node_insert_text@@Base+0x90>
   2b410:	cmp	r3, #1
   2b414:	beq	2b4bc <myhtml_tree_node_insert_text@@Base+0xe4>
   2b418:	ldr	r3, [r0, #28]
   2b41c:	cmp	r3, #0
   2b420:	beq	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b424:	ldr	r2, [r3, #4]
   2b428:	cmp	r2, #1
   2b42c:	beq	2b498 <myhtml_tree_node_insert_text@@Base+0xc0>
   2b430:	mov	r0, r4
   2b434:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b438:	ldr	r3, [r5, #8]
   2b43c:	mov	r2, #1
   2b440:	mov	r4, r0
   2b444:	stmib	r0, {r2, r3}
   2b448:	str	r6, [r0, #32]
   2b44c:	mov	r1, r4
   2b450:	mov	r0, r5
   2b454:	ldr	r2, [sp, #4]
   2b458:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b45c:	mov	r0, r4
   2b460:	add	sp, sp, #8
   2b464:	pop	{r4, r5, r6, pc}
   2b468:	ldr	r3, [r0, #4]
   2b46c:	cmp	r3, #1
   2b470:	bne	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b474:	ldr	r1, [r0, #32]
   2b478:	cmp	r1, #0
   2b47c:	beq	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b480:	mov	r2, r6
   2b484:	mov	r0, r4
   2b488:	mov	r3, #0
   2b48c:	mov	r4, r5
   2b490:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2b494:	b	2b45c <myhtml_tree_node_insert_text@@Base+0x84>
   2b498:	ldr	r1, [r3, #32]
   2b49c:	cmp	r1, #0
   2b4a0:	beq	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b4a4:	mov	r0, r4
   2b4a8:	mov	r2, r6
   2b4ac:	mov	r3, #0
   2b4b0:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2b4b4:	ldr	r4, [r5, #28]
   2b4b8:	b	2b45c <myhtml_tree_node_insert_text@@Base+0x84>
   2b4bc:	ldr	r3, [r0, #4]
   2b4c0:	cmp	r3, #1
   2b4c4:	bne	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b4c8:	ldr	r2, [r0, #32]
   2b4cc:	cmp	r2, #0
   2b4d0:	beq	2b430 <myhtml_tree_node_insert_text@@Base+0x58>
   2b4d4:	mov	r0, r4
   2b4d8:	mov	r1, r6
   2b4dc:	bl	10484 <myhtml_token_merged_two_token_string@plt>
   2b4e0:	mov	r4, r5
   2b4e4:	b	2b45c <myhtml_tree_node_insert_text@@Base+0x84>
   2b4e8:	mov	r4, #0
   2b4ec:	b	2b45c <myhtml_tree_node_insert_text@@Base+0x84>

0002b4f0 <myhtml_tree_node_insert_by_node@@Base>:
   2b4f0:	push	{r4, r5, lr}
   2b4f4:	sub	sp, sp, #12
   2b4f8:	mov	r4, r1
   2b4fc:	add	r2, sp, #4
   2b500:	mov	r1, #0
   2b504:	mov	r5, r0
   2b508:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b50c:	mov	r1, r4
   2b510:	ldr	r2, [sp, #4]
   2b514:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b518:	mov	r0, r5
   2b51c:	mov	r1, r4
   2b520:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b524:	mov	r0, r4
   2b528:	add	sp, sp, #12
   2b52c:	pop	{r4, r5, pc}

0002b530 <myhtml_tree_active_formatting_reconstruction@@Base>:
   2b530:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b534:	ldr	r8, [r0, #124]	; 0x7c
   2b538:	ldr	r3, [r8, #4]
   2b53c:	cmp	r3, #0
   2b540:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b544:	ldr	r6, [r8, #4]
   2b548:	ldr	r7, [r8]
   2b54c:	sub	r4, r6, #1
   2b550:	mov	r5, r0
   2b554:	ldr	r1, [r7, r4, lsl #2]
   2b558:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2b55c:	subs	r2, r0, #0
   2b560:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b564:	ldr	r1, [r7, r4, lsl #2]
   2b568:	mov	r0, r5
   2b56c:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2b570:	subs	sl, r0, #0
   2b574:	bne	2b604 <myhtml_tree_active_formatting_reconstruction@@Base+0xd4>
   2b578:	cmp	r4, #0
   2b57c:	subne	r6, r6, #-1073741823	; 0xc0000001
   2b580:	addne	r6, r7, r6, lsl #2
   2b584:	bne	2b5a4 <myhtml_tree_active_formatting_reconstruction@@Base+0x74>
   2b588:	b	2b608 <myhtml_tree_active_formatting_reconstruction@@Base+0xd8>
   2b58c:	ldr	r1, [r6, #-4]!
   2b590:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2b594:	cmp	r0, #0
   2b598:	bne	2b5c4 <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   2b59c:	subs	r4, r9, #0
   2b5a0:	beq	2b608 <myhtml_tree_active_formatting_reconstruction@@Base+0xd8>
   2b5a4:	ldr	r1, [r6, #-4]
   2b5a8:	mov	r0, r5
   2b5ac:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2b5b0:	sub	r9, r4, #1
   2b5b4:	mov	r2, sl
   2b5b8:	cmp	r0, #0
   2b5bc:	mov	r0, r5
   2b5c0:	beq	2b58c <myhtml_tree_active_formatting_reconstruction@@Base+0x5c>
   2b5c4:	ldr	r3, [r8, #4]
   2b5c8:	cmp	r4, r3
   2b5cc:	addcc	r6, r7, r4, lsl #2
   2b5d0:	bcs	2b610 <myhtml_tree_active_formatting_reconstruction@@Base+0xe0>
   2b5d4:	ldr	r0, [r6]
   2b5d8:	bl	10fdc <myhtml_tree_node_clone@plt>
   2b5dc:	add	r4, r4, #1
   2b5e0:	mov	r7, r0
   2b5e4:	mov	r1, r0
   2b5e8:	mov	r0, r5
   2b5ec:	bl	1076c <myhtml_tree_node_insert_by_node@plt>
   2b5f0:	ldr	r3, [r8, #4]
   2b5f4:	str	r7, [r6], #4
   2b5f8:	cmp	r3, r4
   2b5fc:	bhi	2b5d4 <myhtml_tree_active_formatting_reconstruction@@Base+0xa4>
   2b600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b604:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b608:	mov	r4, #0
   2b60c:	b	2b5c4 <myhtml_tree_active_formatting_reconstruction@@Base+0x94>
   2b610:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0002b614 <myhtml_tree_node_insert_foreign_element@@Base>:
   2b614:	push	{r4, r5, r6, r7, lr}
   2b618:	sub	sp, sp, #12
   2b61c:	mov	r7, r1
   2b620:	add	r2, sp, #4
   2b624:	mov	r1, #0
   2b628:	mov	r5, r0
   2b62c:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b630:	mov	r6, r0
   2b634:	mov	r0, r5
   2b638:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b63c:	ldr	r2, [r7]
   2b640:	ldr	r3, [r6, #8]
   2b644:	mov	r4, r0
   2b648:	str	r3, [r0, #8]
   2b64c:	str	r2, [r0, #4]
   2b650:	str	r7, [r0, #32]
   2b654:	mov	r1, r4
   2b658:	mov	r0, r6
   2b65c:	ldr	r2, [sp, #4]
   2b660:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b664:	mov	r0, r5
   2b668:	mov	r1, r4
   2b66c:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b670:	mov	r0, r4
   2b674:	add	sp, sp, #12
   2b678:	pop	{r4, r5, r6, r7, pc}

0002b67c <myhtml_tree_node_insert_html_element@@Base>:
   2b67c:	push	{r4, r5, r6, r7, lr}
   2b680:	sub	sp, sp, #12
   2b684:	mov	r6, r1
   2b688:	add	r2, sp, #4
   2b68c:	mov	r1, #0
   2b690:	mov	r5, r0
   2b694:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b698:	mov	r7, r0
   2b69c:	mov	r0, r5
   2b6a0:	bl	ffe0 <myhtml_tree_node_create@plt>
   2b6a4:	ldr	r2, [r6]
   2b6a8:	mov	r3, #1
   2b6ac:	mov	r4, r0
   2b6b0:	mov	r1, r4
   2b6b4:	mov	r0, r7
   2b6b8:	str	r2, [r4, #4]
   2b6bc:	str	r3, [r4, #8]
   2b6c0:	ldr	r2, [sp, #4]
   2b6c4:	str	r6, [r4, #32]
   2b6c8:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b6cc:	mov	r0, r5
   2b6d0:	mov	r1, r4
   2b6d4:	bl	10988 <myhtml_tree_open_elements_append@plt>
   2b6d8:	mov	r0, r4
   2b6dc:	add	sp, sp, #12
   2b6e0:	pop	{r4, r5, r6, r7, pc}

0002b6e4 <myhtml_tree_adoption_agency_algorithm@@Base>:
   2b6e4:	ldr	r3, [r0, #128]	; 0x80
   2b6e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b6ec:	sub	sp, sp, #68	; 0x44
   2b6f0:	ldr	r1, [r3, #4]
   2b6f4:	cmp	r1, #0
   2b6f8:	beq	2b7a0 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2b6fc:	str	r2, [sp, #24]
   2b700:	ldr	r2, [r3, #4]
   2b704:	ldr	sl, [r3]
   2b708:	sub	r3, r2, #1
   2b70c:	ldr	r2, [r0, #124]	; 0x7c
   2b710:	ldr	r1, [sl, r3, lsl #2]
   2b714:	mov	r5, r0
   2b718:	ldr	r3, [r2]
   2b71c:	str	r3, [sp, #16]
   2b720:	ldr	r3, [r1, #8]
   2b724:	cmp	r3, #1
   2b728:	beq	2ba80 <myhtml_tree_adoption_agency_algorithm@@Base+0x39c>
   2b72c:	ldr	r7, [sp, #16]
   2b730:	mov	r3, #8
   2b734:	str	r3, [sp, #32]
   2b738:	add	r3, sp, #48	; 0x30
   2b73c:	str	r3, [sp, #28]
   2b740:	add	r3, sp, #56	; 0x38
   2b744:	str	r3, [sp, #4]
   2b748:	add	r3, sp, #60	; 0x3c
   2b74c:	str	r3, [sp, #8]
   2b750:	ldr	r4, [r2, #4]
   2b754:	mov	r3, #0
   2b758:	cmp	r4, r3
   2b75c:	str	r3, [sp, #44]	; 0x2c
   2b760:	beq	2b96c <myhtml_tree_adoption_agency_algorithm@@Base+0x288>
   2b764:	add	r7, r7, r4, lsl #2
   2b768:	ldr	r8, [sp, #24]
   2b76c:	b	2b788 <myhtml_tree_adoption_agency_algorithm@@Base+0xa4>
   2b770:	ldr	r6, [r7, #-4]!
   2b774:	ldr	r3, [r6, #4]
   2b778:	cmp	r8, r3
   2b77c:	beq	2b7b4 <myhtml_tree_adoption_agency_algorithm@@Base+0xd0>
   2b780:	cmp	r4, #0
   2b784:	beq	2b96c <myhtml_tree_adoption_agency_algorithm@@Base+0x288>
   2b788:	ldr	r1, [r7, #-4]
   2b78c:	mov	r0, r5
   2b790:	bl	10874 <myhtml_tree_active_formatting_is_marker@plt>
   2b794:	sub	r4, r4, #1
   2b798:	cmp	r0, #0
   2b79c:	beq	2b770 <myhtml_tree_adoption_agency_algorithm@@Base+0x8c>
   2b7a0:	mov	r3, #0
   2b7a4:	str	r3, [sp, #20]
   2b7a8:	ldr	r0, [sp, #20]
   2b7ac:	add	sp, sp, #68	; 0x44
   2b7b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b7b4:	str	r0, [sp, #20]
   2b7b8:	ldr	r2, [sp, #28]
   2b7bc:	mov	r1, r6
   2b7c0:	mov	r0, r5
   2b7c4:	str	r4, [sp, #44]	; 0x2c
   2b7c8:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2b7cc:	cmp	r0, #0
   2b7d0:	beq	2bacc <myhtml_tree_adoption_agency_algorithm@@Base+0x3e8>
   2b7d4:	mov	r1, #8
   2b7d8:	mov	r0, r6
   2b7dc:	bl	fc50 <myhtml_tree_element_in_scope_by_node@plt>
   2b7e0:	cmp	r0, #0
   2b7e4:	beq	2b7a0 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2b7e8:	mov	r0, r5
   2b7ec:	bl	10628 <myhtml_tree_current_node@plt>
   2b7f0:	ldr	r2, [r5, #128]	; 0x80
   2b7f4:	ldr	r3, [sp, #48]	; 0x30
   2b7f8:	ldr	r2, [r2, #4]
   2b7fc:	str	r3, [sp, #52]	; 0x34
   2b800:	cmp	r2, r3
   2b804:	bhi	2b820 <myhtml_tree_adoption_agency_algorithm@@Base+0x13c>
   2b808:	b	2bab4 <myhtml_tree_adoption_agency_algorithm@@Base+0x3d0>
   2b80c:	ldr	r2, [r5, #128]	; 0x80
   2b810:	str	r3, [sp, #52]	; 0x34
   2b814:	ldr	r2, [r2, #4]
   2b818:	cmp	r2, r3
   2b81c:	bls	2bab4 <myhtml_tree_adoption_agency_algorithm@@Base+0x3d0>
   2b820:	ldr	r3, [sl, r3, lsl #2]
   2b824:	ldr	r0, [r5, #28]
   2b828:	ldr	r1, [r3, #4]
   2b82c:	bl	10a24 <myhtml_tag_get_by_id@plt>
   2b830:	ldr	r4, [sp, #52]	; 0x34
   2b834:	add	r3, r4, #1
   2b838:	ldr	r8, [sl, r4, lsl #2]
   2b83c:	ldr	r2, [r8, #8]
   2b840:	add	r2, r2, #4
   2b844:	ldr	r2, [r0, r2, lsl #2]
   2b848:	tst	r2, #2
   2b84c:	beq	2b80c <myhtml_tree_adoption_agency_algorithm@@Base+0x128>
   2b850:	ldr	r3, [sp, #48]	; 0x30
   2b854:	ldr	r2, [sp, #44]	; 0x2c
   2b858:	sub	r3, r3, #-1073741823	; 0xc0000001
   2b85c:	mov	r9, r8
   2b860:	ldr	r3, [sl, r3, lsl #2]
   2b864:	mov	fp, r8
   2b868:	mov	r7, #0
   2b86c:	add	r2, r2, #1
   2b870:	str	r2, [sp, #12]
   2b874:	str	r3, [sp, #36]	; 0x24
   2b878:	mov	r1, fp
   2b87c:	ldr	r2, [sp, #4]
   2b880:	mov	r0, r5
   2b884:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2b888:	add	r7, r7, #1
   2b88c:	cmp	r0, #0
   2b890:	ldrne	r4, [sp, #56]	; 0x38
   2b894:	cmp	r4, #0
   2b898:	beq	2b7a8 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2b89c:	sub	r4, r4, #1
   2b8a0:	str	r4, [sp, #56]	; 0x38
   2b8a4:	ldr	fp, [sl, r4, lsl #2]
   2b8a8:	cmp	fp, r6
   2b8ac:	beq	2b980 <myhtml_tree_adoption_agency_algorithm@@Base+0x29c>
   2b8b0:	ldr	r2, [sp, #8]
   2b8b4:	mov	r1, fp
   2b8b8:	mov	r0, r5
   2b8bc:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2b8c0:	cmp	r7, #3
   2b8c4:	movle	r3, #0
   2b8c8:	andgt	r3, r0, #1
   2b8cc:	cmp	r3, #0
   2b8d0:	bne	2b948 <myhtml_tree_adoption_agency_algorithm@@Base+0x264>
   2b8d4:	cmp	r0, #0
   2b8d8:	bne	2b8ec <myhtml_tree_adoption_agency_algorithm@@Base+0x208>
   2b8dc:	mov	r1, fp
   2b8e0:	mov	r0, r5
   2b8e4:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2b8e8:	b	2b878 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2b8ec:	mov	r0, fp
   2b8f0:	bl	10fdc <myhtml_tree_node_clone@plt>
   2b8f4:	mov	r1, #1
   2b8f8:	ldr	r3, [sp, #60]	; 0x3c
   2b8fc:	ldr	r2, [sp, #56]	; 0x38
   2b900:	cmp	r9, r8
   2b904:	str	r1, [r0, #8]
   2b908:	ldr	r1, [sp, #16]
   2b90c:	mov	fp, r0
   2b910:	str	r0, [r1, r3, lsl #2]
   2b914:	addeq	r3, r3, #1
   2b918:	streq	r3, [sp, #12]
   2b91c:	str	r0, [sl, r2, lsl #2]
   2b920:	ldr	r3, [r9, #24]
   2b924:	cmp	r3, #0
   2b928:	beq	2b934 <myhtml_tree_adoption_agency_algorithm@@Base+0x250>
   2b92c:	mov	r0, r9
   2b930:	bl	10df0 <myhtml_tree_node_remove@plt>
   2b934:	mov	r1, r9
   2b938:	mov	r0, fp
   2b93c:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2b940:	mov	r9, fp
   2b944:	b	2b878 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2b948:	ldr	r1, [sp, #60]	; 0x3c
   2b94c:	mov	r0, r5
   2b950:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2b954:	ldr	r3, [sp, #60]	; 0x3c
   2b958:	ldr	r2, [sp, #12]
   2b95c:	cmp	r2, r3
   2b960:	subhi	r3, r2, #1
   2b964:	strhi	r3, [sp, #12]
   2b968:	b	2b878 <myhtml_tree_adoption_agency_algorithm@@Base+0x194>
   2b96c:	mov	r3, #1
   2b970:	str	r3, [sp, #20]
   2b974:	ldr	r0, [sp, #20]
   2b978:	add	sp, sp, #68	; 0x44
   2b97c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b980:	ldr	r2, [r9, #24]
   2b984:	cmp	r2, #0
   2b988:	beq	2b994 <myhtml_tree_adoption_agency_algorithm@@Base+0x2b0>
   2b98c:	mov	r0, r9
   2b990:	bl	10df0 <myhtml_tree_node_remove@plt>
   2b994:	ldr	r1, [sp, #36]	; 0x24
   2b998:	ldr	r2, [sp, #8]
   2b99c:	mov	r0, r5
   2b9a0:	bl	10e80 <myhtml_tree_appropriate_place_inserting@plt>
   2b9a4:	mov	r1, r9
   2b9a8:	ldr	r2, [sp, #60]	; 0x3c
   2b9ac:	bl	10358 <myhtml_tree_node_insert_by_mode@plt>
   2b9b0:	mov	r0, fp
   2b9b4:	bl	10fdc <myhtml_tree_node_clone@plt>
   2b9b8:	ldr	r7, [r8, #20]
   2b9bc:	mov	r3, #1
   2b9c0:	cmp	r7, #0
   2b9c4:	mov	r4, r0
   2b9c8:	str	r3, [r0, #8]
   2b9cc:	beq	2b9f0 <myhtml_tree_adoption_agency_algorithm@@Base+0x30c>
   2b9d0:	ldr	r6, [r7, #16]
   2b9d4:	mov	r0, r7
   2b9d8:	bl	10df0 <myhtml_tree_node_remove@plt>
   2b9dc:	mov	r1, r7
   2b9e0:	mov	r0, r4
   2b9e4:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2b9e8:	subs	r7, r6, #0
   2b9ec:	bne	2b9d0 <myhtml_tree_adoption_agency_algorithm@@Base+0x2ec>
   2b9f0:	mov	r1, r4
   2b9f4:	mov	r0, r8
   2b9f8:	bl	106b8 <myhtml_tree_node_add_child@plt>
   2b9fc:	add	r2, sp, #44	; 0x2c
   2ba00:	mov	r1, fp
   2ba04:	mov	r0, r5
   2ba08:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2ba0c:	cmp	r0, #0
   2ba10:	beq	2b7a0 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2ba14:	ldr	r3, [sp, #12]
   2ba18:	ldr	r1, [sp, #44]	; 0x2c
   2ba1c:	mov	r0, r5
   2ba20:	cmp	r3, r1
   2ba24:	subhi	r3, r3, #1
   2ba28:	strhi	r3, [sp, #12]
   2ba2c:	bl	10844 <myhtml_tree_active_formatting_remove_by_index@plt>
   2ba30:	ldr	r2, [sp, #12]
   2ba34:	mov	r1, r4
   2ba38:	ldr	r0, [r5, #124]	; 0x7c
   2ba3c:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2ba40:	mov	r1, fp
   2ba44:	mov	r0, r5
   2ba48:	bl	10238 <myhtml_tree_open_elements_remove@plt>
   2ba4c:	mov	r1, r8
   2ba50:	add	r2, sp, #52	; 0x34
   2ba54:	mov	r0, r5
   2ba58:	bl	11048 <myhtml_tree_open_elements_find@plt>
   2ba5c:	cmp	r0, #0
   2ba60:	bne	2badc <myhtml_tree_adoption_agency_algorithm@@Base+0x3f8>
   2ba64:	ldr	r3, [sp, #32]
   2ba68:	subs	r3, r3, #1
   2ba6c:	str	r3, [sp, #32]
   2ba70:	beq	2b7a0 <myhtml_tree_adoption_agency_algorithm@@Base+0xbc>
   2ba74:	ldr	r2, [r5, #124]	; 0x7c
   2ba78:	ldr	r7, [r2]
   2ba7c:	b	2b750 <myhtml_tree_adoption_agency_algorithm@@Base+0x6c>
   2ba80:	ldr	r3, [r1, #4]
   2ba84:	ldr	ip, [sp, #24]
   2ba88:	cmp	r3, ip
   2ba8c:	bne	2b72c <myhtml_tree_adoption_agency_algorithm@@Base+0x48>
   2ba90:	mov	r2, #0
   2ba94:	bl	10124 <myhtml_tree_active_formatting_find@plt>
   2ba98:	subs	r3, r0, #0
   2ba9c:	str	r3, [sp, #20]
   2baa0:	beq	2baf4 <myhtml_tree_adoption_agency_algorithm@@Base+0x410>
   2baa4:	ldr	r2, [r5, #124]	; 0x7c
   2baa8:	ldr	r7, [r2]
   2baac:	b	2b730 <myhtml_tree_adoption_agency_algorithm@@Base+0x4c>
   2bab0:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2bab4:	mov	r0, r5
   2bab8:	bl	10628 <myhtml_tree_current_node@plt>
   2babc:	cmp	r6, r0
   2bac0:	mov	r0, r5
   2bac4:	bne	2bab0 <myhtml_tree_adoption_agency_algorithm@@Base+0x3cc>
   2bac8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2bacc:	mov	r1, r6
   2bad0:	mov	r0, r5
   2bad4:	bl	108a4 <myhtml_tree_active_formatting_remove@plt>
   2bad8:	b	2b7a8 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>
   2badc:	ldr	r2, [sp, #52]	; 0x34
   2bae0:	mov	r1, r4
   2bae4:	add	r2, r2, #1
   2bae8:	ldr	r0, [r5, #128]	; 0x80
   2baec:	bl	102bc <myhtml_tree_list_insert_by_index@plt>
   2baf0:	b	2ba64 <myhtml_tree_adoption_agency_algorithm@@Base+0x380>
   2baf4:	mov	r0, r5
   2baf8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2bafc:	b	2b7a8 <myhtml_tree_adoption_agency_algorithm@@Base+0xc4>

0002bb00 <myhtml_tree_appropriate_place_inserting_in_tree@@Base>:
   2bb00:	ldr	r2, [r0, #40]	; 0x28
   2bb04:	mov	ip, #1
   2bb08:	push	{r4, r5, r6, r7, r8, lr}
   2bb0c:	mov	r4, r0
   2bb10:	ldrb	r2, [r2, #188]	; 0xbc
   2bb14:	str	ip, [r1]
   2bb18:	cmp	r2, #0
   2bb1c:	streq	r2, [r1]
   2bb20:	beq	2bb3c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2bb24:	ldr	r3, [r0, #8]
   2bb28:	mov	r5, r1
   2bb2c:	cmp	r3, ip
   2bb30:	mov	r6, r0
   2bb34:	beq	2bb44 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x44>
   2bb38:	mov	r4, r6
   2bb3c:	mov	r0, r4
   2bb40:	pop	{r4, r5, r6, r7, r8, pc}
   2bb44:	ldr	r2, [r0, #4]
   2bb48:	sub	r2, r2, #125	; 0x7d
   2bb4c:	cmp	r2, #10
   2bb50:	bhi	2bb60 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x60>
   2bb54:	ldr	r1, [pc, #152]	; 2bbf4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xf4>
   2bb58:	ands	r3, r1, r3, lsl r2
   2bb5c:	bne	2bb74 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x74>
   2bb60:	mov	r3, #0
   2bb64:	mov	r4, r6
   2bb68:	str	r3, [r5]
   2bb6c:	mov	r0, r4
   2bb70:	pop	{r4, r5, r6, r7, r8, pc}
   2bb74:	mov	r1, #128	; 0x80
   2bb78:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2bb7c:	mov	r1, #125	; 0x7d
   2bb80:	mov	r4, r0
   2bb84:	mov	r0, r6
   2bb88:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2bb8c:	cmp	r4, #0
   2bb90:	mov	r7, r0
   2bb94:	beq	2bbe8 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xe8>
   2bb98:	mov	r1, #125	; 0x7d
   2bb9c:	mov	r0, r4
   2bba0:	bl	1061c <myhtml_tree_node_find_parent_by_tag_id@plt>
   2bba4:	subs	r0, r7, r0
   2bba8:	movne	r0, #1
   2bbac:	cmp	r7, #0
   2bbb0:	orreq	r0, r0, #1
   2bbb4:	cmp	r0, #0
   2bbb8:	movne	r3, #0
   2bbbc:	strne	r3, [r5]
   2bbc0:	bne	2bb3c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2bbc4:	ldr	r3, [r7, #24]
   2bbc8:	cmp	r3, #0
   2bbcc:	beq	2bb38 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2bbd0:	ldr	r4, [r7, #12]
   2bbd4:	cmp	r4, #0
   2bbd8:	moveq	r4, r7
   2bbdc:	movne	r3, #2
   2bbe0:	strne	r3, [r5]
   2bbe4:	b	2bb3c <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x3c>
   2bbe8:	cmp	r0, #0
   2bbec:	bne	2bbc4 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0xc4>
   2bbf0:	b	2bb38 <myhtml_tree_appropriate_place_inserting_in_tree@@Base+0x38>
   2bbf4:	andeq	r0, r0, r3, lsr #9

0002bbf8 <myhtml_tree_template_insertion_init@@Base>:
   2bbf8:	push	{r4, r5, r6, lr}
   2bbfc:	mov	r5, r0
   2bc00:	mov	r0, #12
   2bc04:	bl	10c94 <mycore_malloc@plt>
   2bc08:	mov	r2, #0
   2bc0c:	mov	r3, #1024	; 0x400
   2bc10:	mov	r4, r0
   2bc14:	stmib	r0, {r2, r3}
   2bc18:	mov	r0, #4096	; 0x1000
   2bc1c:	bl	10c94 <mycore_malloc@plt>
   2bc20:	str	r0, [r4]
   2bc24:	str	r4, [r5, #140]	; 0x8c
   2bc28:	mov	r0, r4
   2bc2c:	pop	{r4, r5, r6, pc}

0002bc30 <myhtml_tree_template_insertion_clean@@Base>:
   2bc30:	ldr	r3, [r0, #140]	; 0x8c
   2bc34:	mov	r2, #0
   2bc38:	str	r2, [r3, #4]
   2bc3c:	bx	lr

0002bc40 <myhtml_tree_template_insertion_destroy@@Base>:
   2bc40:	ldr	r3, [r0, #140]	; 0x8c
   2bc44:	cmp	r3, #0
   2bc48:	beq	2bc80 <myhtml_tree_template_insertion_destroy@@Base+0x40>
   2bc4c:	push	{r4, lr}
   2bc50:	mov	r4, r0
   2bc54:	ldr	r0, [r3]
   2bc58:	cmp	r0, #0
   2bc5c:	beq	2bc70 <myhtml_tree_template_insertion_destroy@@Base+0x30>
   2bc60:	bl	10dcc <mycore_free@plt>
   2bc64:	ldr	r3, [r4, #140]	; 0x8c
   2bc68:	cmp	r3, #0
   2bc6c:	beq	2bc78 <myhtml_tree_template_insertion_destroy@@Base+0x38>
   2bc70:	mov	r0, r3
   2bc74:	bl	10dcc <mycore_free@plt>
   2bc78:	mov	r0, #0
   2bc7c:	pop	{r4, pc}
   2bc80:	mov	r0, #0
   2bc84:	bx	lr

0002bc88 <myhtml_tree_template_insertion_append@@Base>:
   2bc88:	push	{r4, r5, r6, lr}
   2bc8c:	mov	r5, r1
   2bc90:	ldr	r4, [r0, #140]	; 0x8c
   2bc94:	ldr	r3, [r4, #4]
   2bc98:	ldr	r1, [r4, #8]
   2bc9c:	cmp	r3, r1
   2bca0:	bcs	2bcb8 <myhtml_tree_template_insertion_append@@Base+0x30>
   2bca4:	ldr	r0, [r4]
   2bca8:	add	r2, r3, #1
   2bcac:	str	r5, [r0, r3, lsl #2]
   2bcb0:	str	r2, [r4, #4]
   2bcb4:	pop	{r4, r5, r6, pc}
   2bcb8:	lsl	r3, r1, #1
   2bcbc:	str	r3, [r4, #8]
   2bcc0:	lsl	r1, r1, #3
   2bcc4:	ldr	r0, [r4]
   2bcc8:	bl	fbd8 <mycore_realloc@plt>
   2bccc:	cmp	r0, #0
   2bcd0:	strne	r0, [r4]
   2bcd4:	ldmeq	r4, {r0, r3}
   2bcd8:	ldrne	r3, [r4, #4]
   2bcdc:	b	2bca8 <myhtml_tree_template_insertion_append@@Base+0x20>

0002bce0 <myhtml_tree_template_insertion_pop@@Base>:
   2bce0:	ldr	r2, [r0, #140]	; 0x8c
   2bce4:	ldr	r3, [r2, #4]
   2bce8:	cmp	r3, #0
   2bcec:	subne	r3, r3, #1
   2bcf0:	strne	r3, [r2, #4]
   2bcf4:	bx	lr

0002bcf8 <myhtml_tree_template_insertion_length@@Base>:
   2bcf8:	ldr	r3, [r0, #140]	; 0x8c
   2bcfc:	ldr	r0, [r3, #4]
   2bd00:	bx	lr

0002bd04 <myhtml_tree_token_list_init@@Base>:
   2bd04:	push	{r4, lr}
   2bd08:	mov	r0, #12
   2bd0c:	bl	10c94 <mycore_malloc@plt>
   2bd10:	mov	r2, #0
   2bd14:	mov	r3, #4096	; 0x1000
   2bd18:	mov	r4, r0
   2bd1c:	stmib	r0, {r2, r3}
   2bd20:	mov	r0, #16384	; 0x4000
   2bd24:	bl	10c94 <mycore_malloc@plt>
   2bd28:	str	r0, [r4]
   2bd2c:	mov	r0, r4
   2bd30:	pop	{r4, pc}

0002bd34 <myhtml_tree_token_list_clean@@Base>:
   2bd34:	mov	r3, #0
   2bd38:	str	r3, [r0, #4]
   2bd3c:	bx	lr

0002bd40 <myhtml_tree_clean@@Base>:
   2bd40:	push	{r4, r5, r6, lr}
   2bd44:	mov	r4, r0
   2bd48:	ldr	r6, [r0]
   2bd4c:	ldr	r3, [r6, #20]
   2bd50:	cmp	r3, #0
   2bd54:	movne	r5, #0
   2bd58:	beq	2bd7c <myhtml_tree_clean@@Base+0x3c>
   2bd5c:	ldr	r3, [r4, #144]	; 0x90
   2bd60:	ldr	r0, [r4, #4]
   2bd64:	ldr	r1, [r3, r5, lsl #2]
   2bd68:	bl	106e8 <mchar_async_node_clean@plt>
   2bd6c:	ldr	r3, [r6, #20]
   2bd70:	add	r5, r5, #1
   2bd74:	cmp	r3, r5
   2bd78:	bhi	2bd5c <myhtml_tree_clean@@Base+0x1c>
   2bd7c:	ldr	r1, [r4, #48]	; 0x30
   2bd80:	ldr	r0, [r4, #12]
   2bd84:	bl	10880 <mcobject_async_node_clean@plt>
   2bd88:	ldr	r3, [r4, #8]
   2bd8c:	ldr	r1, [r4, #40]	; 0x28
   2bd90:	ldr	r0, [r3, #4]
   2bd94:	bl	10880 <mcobject_async_node_clean@plt>
   2bd98:	ldr	r3, [r4, #8]
   2bd9c:	ldr	r1, [r4, #44]	; 0x2c
   2bda0:	ldr	r0, [r3, #8]
   2bda4:	bl	10880 <mcobject_async_node_clean@plt>
   2bda8:	ldr	r0, [r4, #20]
   2bdac:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2bdb0:	ldr	r3, [r4]
   2bdb4:	ldr	r1, [r4, #20]
   2bdb8:	ldr	r0, [r3, #4]
   2bdbc:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2bdc0:	ldr	r3, [r4]
   2bdc4:	ldr	r1, [r4, #20]
   2bdc8:	ldr	r0, [r3]
   2bdcc:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2bdd0:	ldr	r0, [r4, #8]
   2bdd4:	bl	105bc <myhtml_token_clean@plt>
   2bdd8:	mov	r0, r4
   2bddc:	bl	ffe0 <myhtml_tree_node_create@plt>
   2bde0:	mov	r0, r4
   2bde4:	bl	ffe0 <myhtml_tree_node_create@plt>
   2bde8:	mov	r3, #0
   2bdec:	mov	r2, #2
   2bdf0:	str	r2, [r4, #180]	; 0xb4
   2bdf4:	str	r3, [r4, #88]	; 0x58
   2bdf8:	strb	r3, [r4, #108]	; 0x6c
   2bdfc:	str	r3, [r4, #112]	; 0x70
   2be00:	str	r3, [r4, #116]	; 0x74
   2be04:	str	r3, [r4, #120]	; 0x78
   2be08:	str	r3, [r4, #96]	; 0x60
   2be0c:	str	r3, [r4, #100]	; 0x64
   2be10:	str	r3, [r4, #92]	; 0x5c
   2be14:	str	r3, [r4, #104]	; 0x68
   2be18:	str	r3, [r4, #160]	; 0xa0
   2be1c:	str	r3, [r4, #164]	; 0xa4
   2be20:	str	r3, [r4, #168]	; 0xa8
   2be24:	str	r3, [r4, #172]	; 0xac
   2be28:	str	r3, [r4, #176]	; 0xb0
   2be2c:	str	r3, [r4, #60]	; 0x3c
   2be30:	strb	r3, [r4, #188]	; 0xbc
   2be34:	str	r3, [r4, #156]	; 0x9c
   2be38:	str	r3, [r4, #76]	; 0x4c
   2be3c:	str	r3, [r4, #80]	; 0x50
   2be40:	str	r3, [r4, #192]	; 0xc0
   2be44:	str	r3, [r4, #68]	; 0x44
   2be48:	str	r3, [r4, #152]	; 0x98
   2be4c:	str	r3, [r4, #196]	; 0xc4
   2be50:	str	r3, [r4, #200]	; 0xc8
   2be54:	str	r3, [r4, #204]	; 0xcc
   2be58:	str	r0, [r4, #84]	; 0x54
   2be5c:	ldr	r0, [r4, #148]	; 0x94
   2be60:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2be64:	mov	r0, r4
   2be68:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2be6c:	mov	r0, r4
   2be70:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2be74:	ldr	r0, [r4, #132]	; 0x84
   2be78:	bl	1028c <myhtml_tree_list_clean@plt>
   2be7c:	ldr	r0, [r4, #136]	; 0x88
   2be80:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2be84:	mov	r0, r4
   2be88:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2be8c:	ldr	r0, [r4, #72]	; 0x48
   2be90:	bl	10f70 <mcobject_clean@plt>
   2be94:	ldr	r0, [r4, #28]
   2be98:	bl	11078 <myhtml_tag_clean@plt>
   2be9c:	ldr	r0, [r4, #24]
   2bea0:	bl	fd64 <mythread_queue_clean@plt>
   2bea4:	ldr	r3, [r4, #8]
   2bea8:	mov	r0, r3
   2beac:	ldr	r1, [r3, #16]
   2beb0:	bl	10904 <myhtml_token_attr_create@plt>
   2beb4:	str	r0, [r4, #56]	; 0x38
   2beb8:	pop	{r4, r5, r6, pc}

0002bebc <myhtml_tree_init@@Base>:
   2bebc:	push	{r4, r5, r6, r7, r8, lr}
   2bec0:	sub	sp, sp, #8
   2bec4:	str	r1, [r0]
   2bec8:	mov	r5, #0
   2becc:	mov	r6, r1
   2bed0:	mov	r1, #512	; 0x200
   2bed4:	mov	r4, r0
   2bed8:	str	r5, [sp]
   2bedc:	bl	11000 <myhtml_token_create@plt>
   2bee0:	cmp	r0, r5
   2bee4:	str	r0, [r4, #8]
   2bee8:	beq	2c040 <myhtml_tree_init@@Base+0x184>
   2beec:	ldr	r0, [sp]
   2bef0:	str	r5, [r4, #208]	; 0xd0
   2bef4:	cmp	r0, r5
   2bef8:	str	r5, [r4, #148]	; 0x94
   2befc:	str	r5, [r4, #184]	; 0xb8
   2bf00:	str	r5, [r4, #36]	; 0x24
   2bf04:	str	r5, [r4, #220]	; 0xdc
   2bf08:	str	r5, [r4, #224]	; 0xe0
   2bf0c:	str	r5, [r4, #228]	; 0xe4
   2bf10:	str	r5, [r4, #232]	; 0xe8
   2bf14:	str	r5, [r4, #236]	; 0xec
   2bf18:	str	r5, [r4, #240]	; 0xf0
   2bf1c:	str	r5, [r4, #244]	; 0xf4
   2bf20:	str	r5, [r4, #248]	; 0xf8
   2bf24:	beq	2bf30 <myhtml_tree_init@@Base+0x74>
   2bf28:	add	sp, sp, #8
   2bf2c:	pop	{r4, r5, r6, r7, r8, pc}
   2bf30:	bl	10a84 <mythread_queue_create@plt>
   2bf34:	cmp	r0, r5
   2bf38:	str	r0, [r4, #24]
   2bf3c:	beq	2c04c <myhtml_tree_init@@Base+0x190>
   2bf40:	ldr	r1, [pc, #496]	; 2c138 <myhtml_tree_init@@Base+0x27c>
   2bf44:	bl	106ac <mythread_queue_init@plt>
   2bf48:	cmp	r0, #0
   2bf4c:	str	r0, [sp]
   2bf50:	bne	2bf28 <myhtml_tree_init@@Base+0x6c>
   2bf54:	bl	1001c <mcobject_create@plt>
   2bf58:	cmp	r0, #0
   2bf5c:	str	r0, [r4, #72]	; 0x48
   2bf60:	ldreq	r0, [pc, #468]	; 2c13c <myhtml_tree_init@@Base+0x280>
   2bf64:	beq	2bf28 <myhtml_tree_init@@Base+0x6c>
   2bf68:	mov	r2, #24
   2bf6c:	mov	r1, #256	; 0x100
   2bf70:	bl	10778 <mcobject_init@plt>
   2bf74:	cmp	r0, #0
   2bf78:	str	r0, [sp]
   2bf7c:	bne	2bf28 <myhtml_tree_init@@Base+0x6c>
   2bf80:	bl	fd58 <mcobject_async_create@plt>
   2bf84:	cmp	r0, #0
   2bf88:	str	r0, [r4, #12]
   2bf8c:	ldreq	r0, [pc, #428]	; 2c140 <myhtml_tree_init@@Base+0x284>
   2bf90:	beq	2bf28 <myhtml_tree_init@@Base+0x6c>
   2bf94:	mov	r3, #44	; 0x2c
   2bf98:	mov	r2, #1024	; 0x400
   2bf9c:	mov	r1, #128	; 0x80
   2bfa0:	bl	fc80 <mcobject_async_init@plt>
   2bfa4:	cmp	r0, #0
   2bfa8:	str	r0, [sp, #4]
   2bfac:	ldrne	r0, [pc, #400]	; 2c144 <myhtml_tree_init@@Base+0x288>
   2bfb0:	bne	2bf28 <myhtml_tree_init@@Base+0x6c>
   2bfb4:	bl	10160 <mchar_async_create@plt>
   2bfb8:	str	r0, [r4, #4]
   2bfbc:	mov	r0, r4
   2bfc0:	bl	10ac0 <myhtml_tree_active_formatting_init@plt>
   2bfc4:	str	r0, [r4, #124]	; 0x7c
   2bfc8:	mov	r0, r4
   2bfcc:	bl	10bb0 <myhtml_tree_open_elements_init@plt>
   2bfd0:	str	r0, [r4, #128]	; 0x80
   2bfd4:	bl	1085c <myhtml_tree_list_init@plt>
   2bfd8:	str	r0, [r4, #132]	; 0x84
   2bfdc:	bl	109b8 <myhtml_tree_token_list_init@plt>
   2bfe0:	str	r0, [r4, #136]	; 0x88
   2bfe4:	mov	r0, r4
   2bfe8:	bl	10cdc <myhtml_tree_template_insertion_init@plt>
   2bfec:	ldr	r3, [r4, #4]
   2bff0:	cmp	r3, #0
   2bff4:	str	r0, [r4, #140]	; 0x8c
   2bff8:	beq	2c04c <myhtml_tree_init@@Base+0x190>
   2bffc:	mov	r0, r3
   2c000:	mov	r2, #20480	; 0x5000
   2c004:	mov	r1, #128	; 0x80
   2c008:	bl	104a8 <mchar_async_init@plt>
   2c00c:	cmp	r0, #0
   2c010:	str	r0, [sp]
   2c014:	bne	2bf28 <myhtml_tree_init@@Base+0x6c>
   2c018:	add	r5, sp, #4
   2c01c:	mov	r1, r5
   2c020:	ldr	r0, [r4, #12]
   2c024:	bl	10a90 <mcobject_async_node_add@plt>
   2c028:	ldr	r3, [sp, #4]
   2c02c:	cmp	r3, #0
   2c030:	str	r0, [r4, #48]	; 0x30
   2c034:	beq	2c058 <myhtml_tree_init@@Base+0x19c>
   2c038:	ldr	r0, [pc, #264]	; 2c148 <myhtml_tree_init@@Base+0x28c>
   2c03c:	b	2bf28 <myhtml_tree_init@@Base+0x6c>
   2c040:	ldr	r0, [pc, #260]	; 2c14c <myhtml_tree_init@@Base+0x290>
   2c044:	add	sp, sp, #8
   2c048:	pop	{r4, r5, r6, r7, r8, pc}
   2c04c:	mov	r0, #2
   2c050:	add	sp, sp, #8
   2c054:	pop	{r4, r5, r6, r7, r8, pc}
   2c058:	ldr	r3, [r4, #8]
   2c05c:	mov	r1, r5
   2c060:	ldr	r0, [r3, #4]
   2c064:	bl	10a90 <mcobject_async_node_add@plt>
   2c068:	ldr	r3, [sp, #4]
   2c06c:	cmp	r3, #0
   2c070:	str	r0, [r4, #40]	; 0x28
   2c074:	bne	2c038 <myhtml_tree_init@@Base+0x17c>
   2c078:	ldr	r3, [r4, #8]
   2c07c:	mov	r1, r5
   2c080:	ldr	r0, [r3, #8]
   2c084:	bl	10a90 <mcobject_async_node_add@plt>
   2c088:	ldr	r5, [sp, #4]
   2c08c:	cmp	r5, #0
   2c090:	str	r0, [r4, #44]	; 0x2c
   2c094:	bne	2c038 <myhtml_tree_init@@Base+0x17c>
   2c098:	mov	r1, #4
   2c09c:	ldr	r0, [r6, #20]
   2c0a0:	bl	ff14 <mycore_calloc@plt>
   2c0a4:	cmp	r0, #0
   2c0a8:	str	r0, [r4, #144]	; 0x90
   2c0ac:	movne	r7, sp
   2c0b0:	beq	2c04c <myhtml_tree_init@@Base+0x190>
   2c0b4:	ldr	r3, [r6, #20]
   2c0b8:	mov	r1, r7
   2c0bc:	cmp	r5, r3
   2c0c0:	bcs	2c0e8 <myhtml_tree_init@@Base+0x22c>
   2c0c4:	ldr	r0, [r4, #4]
   2c0c8:	ldr	r8, [r4, #144]	; 0x90
   2c0cc:	bl	10298 <mchar_async_node_add@plt>
   2c0d0:	str	r0, [r8, r5, lsl #2]
   2c0d4:	ldr	r0, [sp]
   2c0d8:	add	r5, r5, #1
   2c0dc:	cmp	r0, #0
   2c0e0:	beq	2c0b4 <myhtml_tree_init@@Base+0x1f8>
   2c0e4:	b	2bf28 <myhtml_tree_init@@Base+0x6c>
   2c0e8:	ldr	r3, [r4, #144]	; 0x90
   2c0ec:	ldr	r3, [r3]
   2c0f0:	str	r3, [r4, #52]	; 0x34
   2c0f4:	bl	fd94 <mcsync_create@plt>
   2c0f8:	cmp	r0, #0
   2c0fc:	str	r0, [r4, #16]
   2c100:	beq	2c04c <myhtml_tree_init@@Base+0x190>
   2c104:	bl	10868 <mcsync_init@plt>
   2c108:	cmp	r0, #0
   2c10c:	bne	2c04c <myhtml_tree_init@@Base+0x190>
   2c110:	bl	10d30 <myhtml_tag_create@plt>
   2c114:	mov	r1, r0
   2c118:	str	r0, [r4, #28]
   2c11c:	mov	r0, r4
   2c120:	bl	10b5c <myhtml_tag_init@plt>
   2c124:	str	r0, [sp]
   2c128:	mov	r0, r4
   2c12c:	bl	106d0 <myhtml_tree_clean@plt>
   2c130:	ldr	r0, [sp]
   2c134:	b	2bf28 <myhtml_tree_init@@Base+0x6c>
   2c138:	ldrdeq	r2, [r0], -lr
   2c13c:	strdeq	r9, [r0], -r8
   2c140:	strdeq	r9, [r0], -r5
   2c144:	strdeq	r9, [r0], -r6
   2c148:	strdeq	r9, [r0], -r7
   2c14c:	andeq	r9, r0, ip, lsr #2

0002c150 <myhtml_tree_clean_all@@Base>:
   2c150:	push	{r4, lr}
   2c154:	mov	r4, r0
   2c158:	ldr	r0, [r0, #12]
   2c15c:	bl	11054 <mcobject_async_clean@plt>
   2c160:	ldr	r0, [r4, #8]
   2c164:	bl	105bc <myhtml_token_clean@plt>
   2c168:	ldr	r0, [r4, #4]
   2c16c:	bl	10bc8 <mchar_async_clean@plt>
   2c170:	mov	r0, r4
   2c174:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c178:	mov	r0, r4
   2c17c:	bl	ffe0 <myhtml_tree_node_create@plt>
   2c180:	mov	r3, #0
   2c184:	mov	r2, #2
   2c188:	str	r2, [r4, #180]	; 0xb4
   2c18c:	str	r3, [r4, #88]	; 0x58
   2c190:	strb	r3, [r4, #108]	; 0x6c
   2c194:	str	r3, [r4, #112]	; 0x70
   2c198:	str	r3, [r4, #116]	; 0x74
   2c19c:	str	r3, [r4, #120]	; 0x78
   2c1a0:	str	r3, [r4, #96]	; 0x60
   2c1a4:	str	r3, [r4, #100]	; 0x64
   2c1a8:	str	r3, [r4, #92]	; 0x5c
   2c1ac:	str	r3, [r4, #104]	; 0x68
   2c1b0:	str	r3, [r4, #160]	; 0xa0
   2c1b4:	str	r3, [r4, #164]	; 0xa4
   2c1b8:	str	r3, [r4, #168]	; 0xa8
   2c1bc:	str	r3, [r4, #172]	; 0xac
   2c1c0:	str	r3, [r4, #176]	; 0xb0
   2c1c4:	str	r3, [r4, #60]	; 0x3c
   2c1c8:	strb	r3, [r4, #188]	; 0xbc
   2c1cc:	str	r3, [r4, #156]	; 0x9c
   2c1d0:	str	r3, [r4, #76]	; 0x4c
   2c1d4:	str	r3, [r4, #80]	; 0x50
   2c1d8:	str	r3, [r4, #192]	; 0xc0
   2c1dc:	str	r3, [r4, #68]	; 0x44
   2c1e0:	str	r3, [r4, #152]	; 0x98
   2c1e4:	str	r3, [r4, #196]	; 0xc4
   2c1e8:	str	r3, [r4, #200]	; 0xc8
   2c1ec:	str	r3, [r4, #204]	; 0xcc
   2c1f0:	str	r0, [r4, #84]	; 0x54
   2c1f4:	ldr	r0, [r4, #148]	; 0x94
   2c1f8:	bl	1046c <myhtml_stream_buffer_clean@plt>
   2c1fc:	mov	r0, r4
   2c200:	bl	10820 <myhtml_tree_active_formatting_clean@plt>
   2c204:	mov	r0, r4
   2c208:	bl	10e20 <myhtml_tree_open_elements_clean@plt>
   2c20c:	ldr	r0, [r4, #132]	; 0x84
   2c210:	bl	1028c <myhtml_tree_list_clean@plt>
   2c214:	ldr	r0, [r4, #136]	; 0x88
   2c218:	bl	10fe8 <myhtml_tree_token_list_clean@plt>
   2c21c:	mov	r0, r4
   2c220:	bl	10424 <myhtml_tree_template_insertion_clean@plt>
   2c224:	ldr	r0, [r4, #72]	; 0x48
   2c228:	bl	10f70 <mcobject_clean@plt>
   2c22c:	ldr	r0, [r4, #28]
   2c230:	bl	11078 <myhtml_tag_clean@plt>
   2c234:	ldr	r0, [r4, #20]
   2c238:	bl	109a0 <mythread_queue_list_entry_clean@plt>
   2c23c:	ldr	r3, [r4]
   2c240:	ldr	r1, [r4, #20]
   2c244:	ldr	r0, [r3, #4]
   2c248:	bl	10d24 <mythread_queue_list_entry_make_batch@plt>
   2c24c:	ldr	r3, [r4]
   2c250:	ldr	r1, [r4, #20]
   2c254:	ldr	r0, [r3]
   2c258:	bl	10ee0 <mythread_queue_list_entry_make_stream@plt>
   2c25c:	ldr	r3, [r4, #8]
   2c260:	mov	r0, r3
   2c264:	ldr	r1, [r3, #16]
   2c268:	bl	10904 <myhtml_token_attr_create@plt>
   2c26c:	str	r0, [r4, #56]	; 0x38
   2c270:	pop	{r4, pc}

0002c274 <myhtml_tree_token_list_destroy@@Base>:
   2c274:	push	{r4, r5, r6, lr}
   2c278:	subs	r4, r0, #0
   2c27c:	beq	2c29c <myhtml_tree_token_list_destroy@@Base+0x28>
   2c280:	ldr	r0, [r4]
   2c284:	mov	r5, r1
   2c288:	cmp	r0, #0
   2c28c:	beq	2c294 <myhtml_tree_token_list_destroy@@Base+0x20>
   2c290:	bl	10dcc <mycore_free@plt>
   2c294:	cmp	r5, #0
   2c298:	bne	2c2a4 <myhtml_tree_token_list_destroy@@Base+0x30>
   2c29c:	mov	r0, r4
   2c2a0:	pop	{r4, r5, r6, pc}
   2c2a4:	mov	r0, r4
   2c2a8:	bl	10dcc <mycore_free@plt>
   2c2ac:	mov	r4, #0
   2c2b0:	b	2c29c <myhtml_tree_token_list_destroy@@Base+0x28>

0002c2b4 <myhtml_tree_token_list_append@@Base>:
   2c2b4:	push	{r4, r5, r6, lr}
   2c2b8:	mov	r5, r1
   2c2bc:	ldr	r3, [r0, #4]
   2c2c0:	ldr	r1, [r0, #8]
   2c2c4:	mov	r4, r0
   2c2c8:	cmp	r3, r1
   2c2cc:	bcs	2c2e4 <myhtml_tree_token_list_append@@Base+0x30>
   2c2d0:	ldr	r0, [r0]
   2c2d4:	add	r2, r3, #1
   2c2d8:	str	r5, [r0, r3, lsl #2]
   2c2dc:	str	r2, [r4, #4]
   2c2e0:	pop	{r4, r5, r6, pc}
   2c2e4:	lsl	r3, r1, #1
   2c2e8:	str	r3, [r0, #8]
   2c2ec:	lsl	r1, r1, #3
   2c2f0:	ldr	r0, [r0]
   2c2f4:	bl	fbd8 <mycore_realloc@plt>
   2c2f8:	cmp	r0, #0
   2c2fc:	strne	r0, [r4]
   2c300:	ldmeq	r4, {r0, r3}
   2c304:	ldrne	r3, [r4, #4]
   2c308:	b	2c2d4 <myhtml_tree_token_list_append@@Base+0x20>

0002c30c <myhtml_tree_token_list_append_after_index@@Base>:
   2c30c:	push	{r4, r5, r6, lr}
   2c310:	mov	r6, r1
   2c314:	ldr	ip, [r0, #4]
   2c318:	ldr	r1, [r0, #8]
   2c31c:	mov	r5, r0
   2c320:	cmp	ip, r1
   2c324:	mov	r4, r2
   2c328:	bcs	2c368 <myhtml_tree_token_list_append_after_index@@Base+0x5c>
   2c32c:	ldr	r0, [r0]
   2c330:	cmp	r4, ip
   2c334:	bls	2c354 <myhtml_tree_token_list_append_after_index@@Base+0x48>
   2c338:	ldr	lr, [r0, r4, lsl #2]
   2c33c:	add	r1, r0, r4, lsl #2
   2c340:	mov	r3, r4
   2c344:	add	r3, r3, #1
   2c348:	cmp	r3, ip
   2c34c:	str	lr, [r1, #4]!
   2c350:	bhi	2c344 <myhtml_tree_token_list_append_after_index@@Base+0x38>
   2c354:	add	r4, r4, #1
   2c358:	add	ip, ip, #1
   2c35c:	str	r6, [r0, r4, lsl #2]
   2c360:	str	ip, [r5, #4]
   2c364:	pop	{r4, r5, r6, pc}
   2c368:	lsl	r3, r1, #1
   2c36c:	str	r3, [r0, #8]
   2c370:	lsl	r1, r1, #3
   2c374:	ldr	r0, [r0]
   2c378:	bl	fbd8 <mycore_realloc@plt>
   2c37c:	cmp	r0, #0
   2c380:	strne	r0, [r5]
   2c384:	ldmeq	r5, {r0, ip}
   2c388:	ldrne	ip, [r5, #4]
   2c38c:	b	2c330 <myhtml_tree_token_list_append_after_index@@Base+0x24>

0002c390 <myhtml_tree_token_list_current_node@@Base>:
   2c390:	ldr	r3, [r0, #4]
   2c394:	cmp	r3, #0
   2c398:	subne	r3, r3, #-1073741823	; 0xc0000001
   2c39c:	ldrne	r2, [r0]
   2c3a0:	ldrne	r0, [r2, r3, lsl #2]
   2c3a4:	moveq	r0, r3
   2c3a8:	bx	lr

0002c3ac <myhtml_tree_tags_close_p@@Base>:
   2c3ac:	push	{r4, lr}
   2c3b0:	mov	r2, #1
   2c3b4:	mov	r4, r0
   2c3b8:	mov	r1, #99	; 0x63
   2c3bc:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2c3c0:	mov	r0, r4
   2c3c4:	bl	10628 <myhtml_tree_current_node@plt>
   2c3c8:	mov	r1, #99	; 0x63
   2c3cc:	bl	10aa8 <myhtml_is_html_node@plt>
   2c3d0:	mov	r0, r4
   2c3d4:	mov	r3, #0
   2c3d8:	mov	r2, #1
   2c3dc:	mov	r1, #99	; 0x63
   2c3e0:	pop	{r4, lr}
   2c3e4:	b	1094c <myhtml_tree_open_elements_pop_until@plt>

0002c3e8 <myhtml_tree_generic_raw_text_element_parsing_algorithm@@Base>:
   2c3e8:	push	{r4, lr}
   2c3ec:	mov	r4, r0
   2c3f0:	mov	r2, #1
   2c3f4:	bl	10cb8 <myhtml_tree_node_insert_by_token@plt>
   2c3f8:	ldr	r2, [r4, #168]	; 0xa8
   2c3fc:	mov	r3, #7
   2c400:	str	r2, [r4, #172]	; 0xac
   2c404:	str	r3, [r4, #168]	; 0xa8
   2c408:	pop	{r4, pc}

0002c40c <myhtml_tree_clear_stack_back_table_context@@Base>:
   2c40c:	push	{r4, lr}
   2c410:	mov	r4, r0
   2c414:	bl	10628 <myhtml_tree_current_node@plt>
   2c418:	mov	r1, r0
   2c41c:	b	2c430 <myhtml_tree_clear_stack_back_table_context@@Base+0x24>
   2c420:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2c424:	mov	r0, r4
   2c428:	bl	10628 <myhtml_tree_current_node@plt>
   2c42c:	mov	r1, r0
   2c430:	ldr	r2, [r1, #4]
   2c434:	mov	r0, r4
   2c438:	cmp	r2, #125	; 0x7d
   2c43c:	cmpne	r2, #128	; 0x80
   2c440:	movne	r3, #1
   2c444:	moveq	r3, #0
   2c448:	cmp	r2, #65	; 0x41
   2c44c:	moveq	r3, #0
   2c450:	andne	r3, r3, #1
   2c454:	cmp	r3, #0
   2c458:	bne	2c420 <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   2c45c:	ldr	r3, [r1, #8]
   2c460:	cmp	r3, #1
   2c464:	bne	2c420 <myhtml_tree_clear_stack_back_table_context@@Base+0x14>
   2c468:	pop	{r4, pc}

0002c46c <myhtml_tree_clear_stack_back_table_body_context@@Base>:
   2c46c:	push	{r4, r5, r6, lr}
   2c470:	mov	r4, r0
   2c474:	bl	10628 <myhtml_tree_current_node@plt>
   2c478:	mov	r6, #1
   2c47c:	mov	r5, #85	; 0x55
   2c480:	mov	ip, r0
   2c484:	b	2c498 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x2c>
   2c488:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2c48c:	mov	r0, r4
   2c490:	bl	10628 <myhtml_tree_current_node@plt>
   2c494:	mov	ip, r0
   2c498:	ldr	r2, [ip, #4]
   2c49c:	mov	r3, r6
   2c4a0:	sub	r1, r2, #126	; 0x7e
   2c4a4:	cmp	r1, #6
   2c4a8:	mvnls	r3, r5, lsr r1
   2c4ac:	cmp	r2, #65	; 0x41
   2c4b0:	moveq	r3, #0
   2c4b4:	andne	r3, r3, #1
   2c4b8:	cmp	r3, #0
   2c4bc:	mov	r0, r4
   2c4c0:	bne	2c488 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x1c>
   2c4c4:	ldr	r3, [ip, #8]
   2c4c8:	cmp	r3, #1
   2c4cc:	bne	2c488 <myhtml_tree_clear_stack_back_table_body_context@@Base+0x1c>
   2c4d0:	pop	{r4, r5, r6, pc}

0002c4d4 <myhtml_tree_clear_stack_back_table_row_context@@Base>:
   2c4d4:	push	{r4, lr}
   2c4d8:	mov	r4, r0
   2c4dc:	bl	10628 <myhtml_tree_current_node@plt>
   2c4e0:	mov	r1, r0
   2c4e4:	b	2c4f8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x24>
   2c4e8:	bl	101a8 <myhtml_tree_open_elements_pop@plt>
   2c4ec:	mov	r0, r4
   2c4f0:	bl	10628 <myhtml_tree_current_node@plt>
   2c4f4:	mov	r1, r0
   2c4f8:	ldr	r2, [r1, #4]
   2c4fc:	mov	r0, r4
   2c500:	cmp	r2, #135	; 0x87
   2c504:	cmpne	r2, #128	; 0x80
   2c508:	movne	r3, #1
   2c50c:	moveq	r3, #0
   2c510:	cmp	r2, #65	; 0x41
   2c514:	moveq	r3, #0
   2c518:	andne	r3, r3, #1
   2c51c:	cmp	r3, #0
   2c520:	bne	2c4e8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   2c524:	ldr	r3, [r1, #8]
   2c528:	cmp	r3, #1
   2c52c:	bne	2c4e8 <myhtml_tree_clear_stack_back_table_row_context@@Base+0x14>
   2c530:	pop	{r4, pc}

0002c534 <myhtml_tree_close_cell@@Base>:
   2c534:	mov	r2, #0
   2c538:	push	{r4, r5, r6, lr}
   2c53c:	mov	r4, r0
   2c540:	mov	r5, r1
   2c544:	mov	r1, r2
   2c548:	bl	106dc <myhtml_tree_generate_implied_end_tags@plt>
   2c54c:	mov	r0, r4
   2c550:	bl	10628 <myhtml_tree_current_node@plt>
   2c554:	mov	r3, #0
   2c558:	ldmib	r5, {r1, r2}
   2c55c:	mov	r0, r4
   2c560:	bl	1094c <myhtml_tree_open_elements_pop_until@plt>
   2c564:	mov	r0, r4
   2c568:	bl	10e5c <myhtml_tree_active_formatting_up_to_last_marker@plt>
   2c56c:	mov	r3, #13
   2c570:	str	r3, [r4, #168]	; 0xa8
   2c574:	pop	{r4, r5, r6, pc}

0002c578 <myhtml_tree_is_mathml_integration_point@@Base>:
   2c578:	ldr	r3, [r1, #8]
   2c57c:	cmp	r3, #2
   2c580:	beq	2c58c <myhtml_tree_is_mathml_integration_point@@Base+0x14>
   2c584:	mov	r0, #0
   2c588:	bx	lr
   2c58c:	ldr	r3, [r1, #4]
   2c590:	sub	r2, r3, #227	; 0xe3
   2c594:	cmp	r2, #11
   2c598:	movhi	r0, #0
   2c59c:	ldrls	r0, [pc, #20]	; 2c5b8 <myhtml_tree_is_mathml_integration_point@@Base+0x40>
   2c5a0:	mvnls	r0, r0, lsr r2
   2c5a4:	andls	r0, r0, #1
   2c5a8:	eorls	r0, r0, #1
   2c5ac:	cmp	r3, #88	; 0x58
   2c5b0:	orreq	r0, r0, #1
   2c5b4:	bx	lr
   2c5b8:	andeq	r0, r0, r1, lsr r8

0002c5bc <myhtml_tree_is_html_integration_point@@Base>:
   2c5bc:	ldr	r3, [r1, #8]
   2c5c0:	cmp	r3, #3
   2c5c4:	beq	2c5f8 <myhtml_tree_is_html_integration_point@@Base+0x3c>
   2c5c8:	cmp	r3, #2
   2c5cc:	beq	2c5d8 <myhtml_tree_is_html_integration_point@@Base+0x1c>
   2c5d0:	mov	r0, #0
   2c5d4:	bx	lr
   2c5d8:	push	{r4, r5, r6, r7, lr}
   2c5dc:	sub	sp, sp, #12
   2c5e0:	ldr	r6, [r1, #4]
   2c5e4:	cmp	r6, #8
   2c5e8:	beq	2c618 <myhtml_tree_is_html_integration_point@@Base+0x5c>
   2c5ec:	mov	r0, #0
   2c5f0:	add	sp, sp, #12
   2c5f4:	pop	{r4, r5, r6, r7, pc}
   2c5f8:	ldr	r1, [r1, #4]
   2c5fc:	cmp	r1, #156	; 0x9c
   2c600:	cmpne	r1, #189	; 0xbd
   2c604:	moveq	r0, #1
   2c608:	movne	r0, #0
   2c60c:	cmp	r1, #134	; 0x86
   2c610:	orreq	r0, r0, #1
   2c614:	bx	lr
   2c618:	ldr	r3, [r1, #32]
   2c61c:	cmp	r3, #0
   2c620:	beq	2c5ec <myhtml_tree_is_html_integration_point@@Base+0x30>
   2c624:	ldr	r2, [r3, #48]	; 0x30
   2c628:	tst	r2, #1
   2c62c:	bne	2c5ec <myhtml_tree_is_html_integration_point@@Base+0x30>
   2c630:	mov	r5, r0
   2c634:	mov	r4, r1
   2c638:	ldr	r0, [r0, #8]
   2c63c:	mov	r1, r3
   2c640:	bl	1067c <myhtml_token_node_wait_for_done@plt>
   2c644:	ldr	r3, [pc, #96]	; 2c6ac <myhtml_tree_is_html_integration_point@@Base+0xf0>
   2c648:	ldr	r7, [pc, #96]	; 2c6b0 <myhtml_tree_is_html_integration_point@@Base+0xf4>
   2c64c:	add	r3, pc, r3
   2c650:	mov	ip, #9
   2c654:	add	r7, pc, r7
   2c658:	ldr	r1, [r4, #32]
   2c65c:	ldr	r0, [r5, #8]
   2c660:	mov	r2, r7
   2c664:	stm	sp, {r3, ip}
   2c668:	mov	r3, r6
   2c66c:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2c670:	cmp	r0, #0
   2c674:	movne	r0, #1
   2c678:	bne	2c5f0 <myhtml_tree_is_html_integration_point@@Base+0x34>
   2c67c:	ldr	ip, [pc, #48]	; 2c6b4 <myhtml_tree_is_html_integration_point@@Base+0xf8>
   2c680:	mov	lr, #21
   2c684:	add	ip, pc, ip
   2c688:	ldr	r1, [r4, #32]
   2c68c:	ldr	r0, [r5, #8]
   2c690:	mov	r3, r6
   2c694:	mov	r2, r7
   2c698:	stm	sp, {ip, lr}
   2c69c:	bl	fd34 <myhtml_token_attr_match_case@plt>
   2c6a0:	adds	r0, r0, #0
   2c6a4:	movne	r0, #1
   2c6a8:	b	2c5f0 <myhtml_tree_is_html_integration_point@@Base+0x34>
   2c6ac:	andeq	pc, ip, ip, lsl #15
   2c6b0:	andeq	pc, ip, r8, ror r7	; <UNPREDICTABLE>
   2c6b4:	andeq	pc, ip, r0, ror #14

0002c6b8 <myhtml_tree_temp_tag_name_init@@Base>:
   2c6b8:	push	{r4, lr}
   2c6bc:	mov	r4, r0
   2c6c0:	mov	r3, #0
   2c6c4:	mov	r0, #1024	; 0x400
   2c6c8:	str	r3, [r4, #4]
   2c6cc:	str	r0, [r4, #8]
   2c6d0:	bl	10c94 <mycore_malloc@plt>
   2c6d4:	cmp	r0, #0
   2c6d8:	str	r0, [r4]
   2c6dc:	moveq	r0, #2
   2c6e0:	movne	r0, #0
   2c6e4:	pop	{r4, pc}

0002c6e8 <myhtml_tree_temp_tag_name_clean@@Base>:
   2c6e8:	mov	r3, #0
   2c6ec:	str	r3, [r0, #4]
   2c6f0:	bx	lr

0002c6f4 <myhtml_tree_temp_tag_name_destroy@@Base>:
   2c6f4:	push	{r4, r5, r6, lr}
   2c6f8:	subs	r4, r0, #0
   2c6fc:	beq	2c724 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>
   2c700:	ldr	r0, [r4]
   2c704:	mov	r5, r1
   2c708:	cmp	r0, #0
   2c70c:	beq	2c71c <myhtml_tree_temp_tag_name_destroy@@Base+0x28>
   2c710:	bl	10dcc <mycore_free@plt>
   2c714:	mov	r3, #0
   2c718:	str	r3, [r4]
   2c71c:	cmp	r5, #0
   2c720:	bne	2c72c <myhtml_tree_temp_tag_name_destroy@@Base+0x38>
   2c724:	mov	r0, r4
   2c728:	pop	{r4, r5, r6, pc}
   2c72c:	mov	r0, r4
   2c730:	bl	10dcc <mycore_free@plt>
   2c734:	mov	r4, #0
   2c738:	b	2c724 <myhtml_tree_temp_tag_name_destroy@@Base+0x30>

0002c73c <myhtml_tree_destroy@@Base>:
   2c73c:	push	{r4, lr}
   2c740:	subs	r4, r0, #0
   2c744:	beq	2c81c <myhtml_tree_destroy@@Base+0xe0>
   2c748:	ldr	r0, [r4, #28]
   2c74c:	bl	10e44 <myhtml_tag_destroy@plt>
   2c750:	str	r0, [r4, #28]
   2c754:	mov	r0, r4
   2c758:	bl	100dc <myhtml_tree_active_formatting_destroy@plt>
   2c75c:	str	r0, [r4, #124]	; 0x7c
   2c760:	mov	r0, r4
   2c764:	bl	10ce8 <myhtml_tree_open_elements_destroy@plt>
   2c768:	mov	r1, #1
   2c76c:	str	r0, [r4, #128]	; 0x80
   2c770:	ldr	r0, [r4, #132]	; 0x84
   2c774:	bl	106f4 <myhtml_tree_list_destroy@plt>
   2c778:	mov	r1, #1
   2c77c:	str	r0, [r4, #132]	; 0x84
   2c780:	ldr	r0, [r4, #136]	; 0x88
   2c784:	bl	fc74 <myhtml_tree_token_list_destroy@plt>
   2c788:	str	r0, [r4, #136]	; 0x88
   2c78c:	mov	r0, r4
   2c790:	bl	10e38 <myhtml_tree_template_insertion_destroy@plt>
   2c794:	mov	r1, #1
   2c798:	str	r0, [r4, #140]	; 0x8c
   2c79c:	ldr	r0, [r4, #16]
   2c7a0:	bl	101b4 <mcsync_destroy@plt>
   2c7a4:	mov	r1, #1
   2c7a8:	str	r0, [r4, #16]
   2c7ac:	ldr	r0, [r4, #12]
   2c7b0:	bl	10b20 <mcobject_async_destroy@plt>
   2c7b4:	str	r0, [r4, #12]
   2c7b8:	ldr	r0, [r4, #8]
   2c7bc:	bl	10784 <myhtml_token_destroy@plt>
   2c7c0:	mov	r1, #1
   2c7c4:	str	r0, [r4, #8]
   2c7c8:	ldr	r0, [r4, #4]
   2c7cc:	bl	10da8 <mchar_async_destroy@plt>
   2c7d0:	mov	r1, #1
   2c7d4:	str	r0, [r4, #4]
   2c7d8:	ldr	r0, [r4, #148]	; 0x94
   2c7dc:	bl	fd28 <myhtml_stream_buffer_destroy@plt>
   2c7e0:	str	r0, [r4, #148]	; 0x94
   2c7e4:	ldr	r0, [r4, #24]
   2c7e8:	bl	102d4 <mythread_queue_destroy@plt>
   2c7ec:	mov	r1, #1
   2c7f0:	str	r0, [r4, #24]
   2c7f4:	ldr	r0, [r4, #72]	; 0x48
   2c7f8:	bl	fdd0 <mcobject_destroy@plt>
   2c7fc:	mov	r1, #0
   2c800:	str	r0, [r4, #72]	; 0x48
   2c804:	add	r0, r4, #208	; 0xd0
   2c808:	bl	10940 <myhtml_tree_temp_tag_name_destroy@plt>
   2c80c:	ldr	r0, [r4, #144]	; 0x90
   2c810:	bl	10dcc <mycore_free@plt>
   2c814:	mov	r0, r4
   2c818:	bl	10dcc <mycore_free@plt>
   2c81c:	mov	r0, #0
   2c820:	pop	{r4, pc}

0002c824 <myhtml_tree_temp_tag_name_append_one@@Base>:
   2c824:	push	{r4, r5, r6, lr}
   2c828:	mov	r6, r1
   2c82c:	ldr	r3, [r0, #4]
   2c830:	ldr	r1, [r0, #8]
   2c834:	mov	r4, r0
   2c838:	cmp	r3, r1
   2c83c:	bcs	2c85c <myhtml_tree_temp_tag_name_append_one@@Base+0x38>
   2c840:	ldr	r0, [r0]
   2c844:	strb	r6, [r0, r3]
   2c848:	ldr	r3, [r4, #4]
   2c84c:	mov	r0, #0
   2c850:	add	r3, r3, #1
   2c854:	str	r3, [r4, #4]
   2c858:	pop	{r4, r5, r6, pc}
   2c85c:	lsl	r5, r1, #1
   2c860:	mov	r1, r5
   2c864:	ldr	r0, [r0]
   2c868:	bl	fbd8 <mycore_realloc@plt>
   2c86c:	cmp	r0, #0
   2c870:	ldrne	r3, [r4, #4]
   2c874:	strne	r5, [r4, #8]
   2c878:	strne	r0, [r4]
   2c87c:	bne	2c844 <myhtml_tree_temp_tag_name_append_one@@Base+0x20>
   2c880:	mov	r0, #2
   2c884:	pop	{r4, r5, r6, pc}

0002c888 <myhtml_tree_temp_tag_name_append@@Base>:
   2c888:	ldr	r3, [r0]
   2c88c:	cmp	r3, #0
   2c890:	cmpne	r2, #0
   2c894:	beq	2c900 <myhtml_tree_temp_tag_name_append@@Base+0x78>
   2c898:	push	{r4, r5, r6, r7, r8, lr}
   2c89c:	mov	r5, r1
   2c8a0:	mov	r4, r0
   2c8a4:	ldmib	r0, {r0, r1}
   2c8a8:	mov	r6, r2
   2c8ac:	add	r2, r2, r0
   2c8b0:	cmp	r2, r1
   2c8b4:	bcc	2c8dc <myhtml_tree_temp_tag_name_append@@Base+0x54>
   2c8b8:	add	r7, r6, r1, lsl #1
   2c8bc:	mov	r0, r3
   2c8c0:	mov	r1, r7
   2c8c4:	bl	fbd8 <mycore_realloc@plt>
   2c8c8:	subs	r3, r0, #0
   2c8cc:	beq	2c908 <myhtml_tree_temp_tag_name_append@@Base+0x80>
   2c8d0:	ldr	r0, [r4, #4]
   2c8d4:	str	r7, [r4, #8]
   2c8d8:	str	r3, [r4]
   2c8dc:	mov	r2, r6
   2c8e0:	mov	r1, r5
   2c8e4:	add	r0, r3, r0
   2c8e8:	bl	ff5c <memcpy@plt>
   2c8ec:	ldr	r2, [r4, #4]
   2c8f0:	mov	r0, #0
   2c8f4:	add	r2, r2, r6
   2c8f8:	str	r2, [r4, #4]
   2c8fc:	pop	{r4, r5, r6, r7, r8, pc}
   2c900:	mov	r0, #0
   2c904:	bx	lr
   2c908:	mov	r0, #2
   2c90c:	pop	{r4, r5, r6, r7, r8, pc}

0002c910 <myhtml_tree_wait_for_last_done_token@@Base>:
   2c910:	ldr	r3, [r0, #152]	; 0x98
   2c914:	cmp	r1, r3
   2c918:	bxeq	lr
   2c91c:	push	{r4, r5, r6, lr}
   2c920:	mov	r4, r0
   2c924:	mov	r5, r1
   2c928:	ldr	r3, [r4]
   2c92c:	ldr	r3, [r3]
   2c930:	ldr	r0, [r3, #24]
   2c934:	bl	100a0 <mythread_nanosleep_sleep@plt>
   2c938:	ldr	r3, [r4, #152]	; 0x98
   2c93c:	cmp	r3, r5
   2c940:	bne	2c928 <myhtml_tree_wait_for_last_done_token@@Base+0x18>
   2c944:	pop	{r4, r5, r6, pc}

0002c948 <myhtml_tree_special_list_init@@Base>:
   2c948:	mov	r2, #0
   2c94c:	mov	r3, #1024	; 0x400
   2c950:	push	{r4, lr}
   2c954:	mov	r4, r0
   2c958:	stmib	r0, {r2, r3}
   2c95c:	mov	r0, #8192	; 0x2000
   2c960:	bl	10c94 <mycore_malloc@plt>
   2c964:	cmp	r0, #0
   2c968:	str	r0, [r4]
   2c96c:	moveq	r0, #2
   2c970:	movne	r0, #0
   2c974:	pop	{r4, pc}

0002c978 <myhtml_tree_special_list_clean@@Base>:
   2c978:	mov	r3, #0
   2c97c:	str	r3, [r0, #4]
   2c980:	bx	lr

0002c984 <myhtml_tree_special_list_destroy@@Base>:
   2c984:	push	{r4, r5, r6, lr}
   2c988:	subs	r4, r0, #0
   2c98c:	beq	2c9b4 <myhtml_tree_special_list_destroy@@Base+0x30>
   2c990:	ldr	r0, [r4]
   2c994:	mov	r5, r1
   2c998:	cmp	r0, #0
   2c99c:	beq	2c9ac <myhtml_tree_special_list_destroy@@Base+0x28>
   2c9a0:	bl	10dcc <mycore_free@plt>
   2c9a4:	mov	r3, #0
   2c9a8:	str	r3, [r4]
   2c9ac:	cmp	r5, #0
   2c9b0:	bne	2c9bc <myhtml_tree_special_list_destroy@@Base+0x38>
   2c9b4:	mov	r0, r4
   2c9b8:	pop	{r4, r5, r6, pc}
   2c9bc:	mov	r0, r4
   2c9c0:	bl	10dcc <mycore_free@plt>
   2c9c4:	mov	r4, #0
   2c9c8:	b	2c9b4 <myhtml_tree_special_list_destroy@@Base+0x30>

0002c9cc <myhtml_tree_special_list_append@@Base>:
   2c9cc:	ldmib	r0, {r3, ip}
   2c9d0:	push	{r4, r5, r6, r7, r8, lr}
   2c9d4:	mov	r4, r0
   2c9d8:	cmp	r3, ip
   2c9dc:	mov	r6, r1
   2c9e0:	mov	r7, r2
   2c9e4:	bcs	2ca08 <myhtml_tree_special_list_append@@Base+0x3c>
   2c9e8:	ldr	r1, [r0]
   2c9ec:	add	r0, r1, r3, lsl #3
   2c9f0:	add	r2, r3, #1
   2c9f4:	str	r7, [r0, #4]
   2c9f8:	str	r6, [r1, r3, lsl #3]
   2c9fc:	mov	r0, #0
   2ca00:	str	r2, [r4, #4]
   2ca04:	pop	{r4, r5, r6, r7, r8, pc}
   2ca08:	lsl	r1, ip, #4
   2ca0c:	ldr	r0, [r0]
   2ca10:	lsl	r5, ip, #1
   2ca14:	bl	fbd8 <mycore_realloc@plt>
   2ca18:	subs	r1, r0, #0
   2ca1c:	ldrne	r3, [r4, #4]
   2ca20:	strne	r5, [r4, #8]
   2ca24:	strne	r1, [r4]
   2ca28:	bne	2c9ec <myhtml_tree_special_list_append@@Base+0x20>
   2ca2c:	mov	r0, #2
   2ca30:	pop	{r4, r5, r6, r7, r8, pc}

0002ca34 <myhtml_tree_special_list_length@@Base>:
   2ca34:	ldr	r0, [r0, #4]
   2ca38:	bx	lr

0002ca3c <myhtml_tree_special_list_pop@@Base>:
   2ca3c:	ldr	r3, [r0, #4]
   2ca40:	cmp	r3, #0
   2ca44:	subne	r3, r3, #1
   2ca48:	strne	r3, [r0, #4]
   2ca4c:	mov	r0, r3
   2ca50:	bx	lr

0002ca54 <myhtml_tree_special_list_get_last@@Base>:
   2ca54:	ldr	r3, [r0, #4]
   2ca58:	cmp	r3, #0
   2ca5c:	ldrne	r0, [r0]
   2ca60:	addne	r0, r0, r3, lsl #3
   2ca64:	moveq	r0, r3
   2ca68:	bx	lr

0002ca6c <myhtml_tree_incoming_buffer_first@@Base>:
   2ca6c:	ldr	r0, [r0, #80]	; 0x50
   2ca70:	bx	lr

0002ca74 <myhtml_tree_incomming_buffer_make_data@@Base>:
   2ca74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ca78:	mov	r9, r0
   2ca7c:	ldr	r0, [r0, #80]	; 0x50
   2ca80:	mov	r6, r2
   2ca84:	mov	r5, r1
   2ca88:	bl	10100 <mycore_incoming_buffer_find_by_position@plt>
   2ca8c:	mov	r4, r0
   2ca90:	ldr	r0, [r0, #12]
   2ca94:	ldr	r3, [r4, #8]
   2ca98:	sub	r5, r5, r0
   2ca9c:	add	sl, r5, r6
   2caa0:	cmp	sl, r3
   2caa4:	bls	2cb0c <myhtml_tree_incomming_buffer_make_data@@Base+0x98>
   2caa8:	ldr	r3, [r9, #208]	; 0xd0
   2caac:	add	r7, r9, #208	; 0xd0
   2cab0:	cmp	r3, #0
   2cab4:	mov	r0, r7
   2cab8:	beq	2cb30 <myhtml_tree_incomming_buffer_make_data@@Base+0xbc>
   2cabc:	bl	10280 <myhtml_tree_temp_tag_name_clean@plt>
   2cac0:	mov	r8, #0
   2cac4:	b	2cacc <myhtml_tree_incomming_buffer_make_data@@Base+0x58>
   2cac8:	mov	sl, r6
   2cacc:	ldr	r3, [r4, #8]
   2cad0:	mov	r0, r7
   2cad4:	sub	ip, r3, r5
   2cad8:	cmp	sl, r3
   2cadc:	mov	r2, ip
   2cae0:	ldr	r1, [r4]
   2cae4:	bls	2cb18 <myhtml_tree_incomming_buffer_make_data@@Base+0xa4>
   2cae8:	add	r1, r1, r5
   2caec:	sub	r6, r6, ip
   2caf0:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2caf4:	ldr	r4, [r4, #20]
   2caf8:	mov	r5, r8
   2cafc:	cmp	r4, #0
   2cb00:	bne	2cac8 <myhtml_tree_incomming_buffer_make_data@@Base+0x54>
   2cb04:	ldr	r0, [r9, #208]	; 0xd0
   2cb08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb0c:	ldr	r0, [r4]
   2cb10:	add	r0, r0, r5
   2cb14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb18:	mov	r2, r6
   2cb1c:	add	r1, r1, r5
   2cb20:	mov	r0, r7
   2cb24:	bl	fc8c <myhtml_tree_temp_tag_name_append@plt>
   2cb28:	ldr	r0, [r9, #208]	; 0xd0
   2cb2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cb30:	bl	10604 <myhtml_tree_temp_tag_name_init@plt>
   2cb34:	b	2cac0 <myhtml_tree_incomming_buffer_make_data@@Base+0x4c>

0002cb38 <mycore_fopen@@Base>:
   2cb38:	b	fdb8 <fopen@plt>

0002cb3c <mycore_fclose@@Base>:
   2cb3c:	b	10a00 <fclose@plt>

0002cb40 <mycore_fread@@Base>:
   2cb40:	b	103d0 <fread@plt>

0002cb44 <mycore_fwrite@@Base>:
   2cb44:	b	10340 <fwrite@plt>

0002cb48 <mycore_fflush@@Base>:
   2cb48:	b	fe0c <fflush@plt>

0002cb4c <mycore_fseek@@Base>:
   2cb4c:	b	10f28 <fseek@plt>

0002cb50 <mycore_ftell@@Base>:
   2cb50:	b	10064 <ftell@plt>

0002cb54 <mycore_ferror@@Base>:
   2cb54:	b	ff50 <ferror@plt>

0002cb58 <mycore_setbuf@@Base>:
   2cb58:	b	fd04 <setbuf@plt>

0002cb5c <mycore_malloc@@Base>:
   2cb5c:	b	10508 <malloc@plt>

0002cb60 <mycore_realloc@@Base>:
   2cb60:	b	101e4 <realloc@plt>

0002cb64 <mycore_calloc@@Base>:
   2cb64:	b	fbe4 <calloc@plt>

0002cb68 <mycore_free@@Base>:
   2cb68:	push	{r4, lr}
   2cb6c:	bl	feb4 <free@plt>
   2cb70:	mov	r0, #0
   2cb74:	pop	{r4, pc}

0002cb78 <mythread_thread_create@@Base>:
   2cb78:	push	{r4, r5, r6, r7, r8, lr}
   2cb7c:	mov	r5, r0
   2cb80:	mov	r6, r1
   2cb84:	mov	r0, #1
   2cb88:	mov	r1, #4
   2cb8c:	mov	r7, r2
   2cb90:	bl	ff14 <mycore_calloc@plt>
   2cb94:	subs	r4, r0, #0
   2cb98:	beq	2cbbc <mythread_thread_create@@Base+0x44>
   2cb9c:	mov	r3, r7
   2cba0:	mov	r2, r6
   2cba4:	ldr	r1, [r5, #20]
   2cba8:	bl	103dc <pthread_create@plt>
   2cbac:	cmp	r0, #0
   2cbb0:	bne	2cbbc <mythread_thread_create@@Base+0x44>
   2cbb4:	mov	r0, r4
   2cbb8:	pop	{r4, r5, r6, r7, r8, pc}
   2cbbc:	mov	r4, #0
   2cbc0:	mov	r0, r4
   2cbc4:	pop	{r4, r5, r6, r7, r8, pc}

0002cbc8 <mythread_thread_join@@Base>:
   2cbc8:	push	{r4, lr}
   2cbcc:	ldr	r0, [r1]
   2cbd0:	mov	r1, #0
   2cbd4:	bl	10b68 <pthread_join@plt>
   2cbd8:	adds	r0, r0, #0
   2cbdc:	movne	r0, #1
   2cbe0:	pop	{r4, pc}

0002cbe4 <mythread_thread_cancel@@Base>:
   2cbe4:	push	{r4, lr}
   2cbe8:	ldr	r0, [r1]
   2cbec:	bl	108f8 <pthread_cancel@plt>
   2cbf0:	adds	r0, r0, #0
   2cbf4:	movne	r0, #1
   2cbf8:	pop	{r4, pc}

0002cbfc <mythread_thread_destroy@@Base>:
   2cbfc:	push	{r4, lr}
   2cc00:	mov	r0, r1
   2cc04:	bl	10dcc <mycore_free@plt>
   2cc08:	mov	r0, #0
   2cc0c:	pop	{r4, pc}

0002cc10 <mythread_thread_attr_init@@Base>:
   2cc10:	push	{r4, r5, r6, lr}
   2cc14:	mov	r1, #36	; 0x24
   2cc18:	mov	r6, r0
   2cc1c:	mov	r0, #1
   2cc20:	bl	ff14 <mycore_calloc@plt>
   2cc24:	subs	r4, r0, #0
   2cc28:	beq	2cc68 <mythread_thread_attr_init@@Base+0x58>
   2cc2c:	bl	1079c <pthread_attr_init@plt>
   2cc30:	cmp	r0, #0
   2cc34:	mov	r5, r0
   2cc38:	str	r0, [r6, #28]
   2cc3c:	bne	2cc60 <mythread_thread_attr_init@@Base+0x50>
   2cc40:	mov	r1, r0
   2cc44:	mov	r0, r4
   2cc48:	bl	10f58 <pthread_attr_setdetachstate@plt>
   2cc4c:	cmp	r0, #0
   2cc50:	str	r0, [r6, #28]
   2cc54:	mov	r0, r4
   2cc58:	bne	2cc64 <mythread_thread_attr_init@@Base+0x54>
   2cc5c:	pop	{r4, r5, r6, pc}
   2cc60:	mov	r0, r4
   2cc64:	bl	10dcc <mycore_free@plt>
   2cc68:	mov	r0, #0
   2cc6c:	pop	{r4, r5, r6, pc}

0002cc70 <mythread_thread_attr_clean@@Base>:
   2cc70:	bx	lr

0002cc74 <mythread_thread_attr_destroy@@Base>:
   2cc74:	push	{r4, r5, r6, lr}
   2cc78:	subs	r4, r1, #0
   2cc7c:	popeq	{r4, r5, r6, pc}
   2cc80:	mov	r5, r0
   2cc84:	mov	r0, r4
   2cc88:	bl	fddc <pthread_attr_destroy@plt>
   2cc8c:	str	r0, [r5, #28]
   2cc90:	mov	r0, r4
   2cc94:	pop	{r4, r5, r6, lr}
   2cc98:	b	10dcc <mycore_free@plt>

0002cc9c <mythread_mutex_create@@Base>:
   2cc9c:	push	{r4, lr}
   2cca0:	bl	108c8 <mcsync_mutex_create@plt>
   2cca4:	subs	r4, r0, #0
   2cca8:	beq	2ccb8 <mythread_mutex_create@@Base+0x1c>
   2ccac:	bl	10b50 <mcsync_mutex_init@plt>
   2ccb0:	cmp	r0, #0
   2ccb4:	bne	2ccc0 <mythread_mutex_create@@Base+0x24>
   2ccb8:	mov	r0, r4
   2ccbc:	pop	{r4, pc}
   2ccc0:	mov	r0, r4
   2ccc4:	bl	10dcc <mycore_free@plt>
   2ccc8:	mov	r4, #0
   2cccc:	b	2ccb8 <mythread_mutex_create@@Base+0x1c>

0002ccd0 <mythread_mutex_post@@Base>:
   2ccd0:	mov	r0, r1
   2ccd4:	b	fefc <mcsync_mutex_unlock@plt>

0002ccd8 <mythread_mutex_wait@@Base>:
   2ccd8:	mov	r0, r1
   2ccdc:	b	1103c <mcsync_mutex_lock@plt>

0002cce0 <mythread_mutex_try_wait@@Base>:
   2cce0:	mov	r0, r1
   2cce4:	b	10fac <mcsync_mutex_try_lock@plt>

0002cce8 <mythread_mutex_close@@Base>:
   2cce8:	mov	r0, r1
   2ccec:	b	fd70 <mcsync_mutex_destroy@plt>

0002ccf0 <mythread_nanosleep_create@@Base>:
   2ccf0:	mov	r1, #8
   2ccf4:	mov	r0, #1
   2ccf8:	b	ff14 <mycore_calloc@plt>

0002ccfc <mythread_nanosleep_clean@@Base>:
   2ccfc:	mov	r3, #0
   2cd00:	str	r3, [r0]
   2cd04:	str	r3, [r0, #4]
   2cd08:	bx	lr

0002cd0c <mythread_nanosleep_destroy@@Base>:
   2cd0c:	b	10dcc <mycore_free@plt>

0002cd10 <mythread_nanosleep_sleep@@Base>:
   2cd10:	push	{r4, lr}
   2cd14:	mov	r1, #0
   2cd18:	bl	ff20 <nanosleep@plt>
   2cd1c:	adds	r0, r0, #0
   2cd20:	movne	r0, #1
   2cd24:	pop	{r4, pc}

0002cd28 <mcsync_spin_create@@Base>:
   2cd28:	mov	r1, #4
   2cd2c:	mov	r0, #1
   2cd30:	b	ff14 <mycore_calloc@plt>

0002cd34 <mcsync_spin_init@@Base>:
   2cd34:	mov	r0, #0
   2cd38:	bx	lr

0002cd3c <mcsync_spin_clean@@Base>:
   2cd3c:	mov	r3, #0
   2cd40:	str	r3, [r0]
   2cd44:	bx	lr

0002cd48 <mcsync_spin_destroy@@Base>:
   2cd48:	b	10dcc <mycore_free@plt>

0002cd4c <mcsync_spin_lock@@Base>:
   2cd4c:	push	{lr}		; (str lr, [sp, #-4]!)
   2cd50:	sub	sp, sp, #12
   2cd54:	add	r2, sp, #8
   2cd58:	mov	ip, #1
   2cd5c:	mov	r3, #0
   2cd60:	str	r3, [r2, #-4]!
   2cd64:	ldr	r3, [r2]
   2cd68:	mcr	15, 0, r0, cr7, cr10, {5}
   2cd6c:	ldrex	r1, [r0]
   2cd70:	cmp	r1, r3
   2cd74:	bne	2cd84 <mcsync_spin_lock@@Base+0x38>
   2cd78:	strex	lr, ip, [r0]
   2cd7c:	cmp	lr, #0
   2cd80:	bne	2cd6c <mcsync_spin_lock@@Base+0x20>
   2cd84:	mcr	15, 0, r0, cr7, cr10, {5}
   2cd88:	bne	2cd98 <mcsync_spin_lock@@Base+0x4c>
   2cd8c:	mov	r0, #0
   2cd90:	add	sp, sp, #12
   2cd94:	pop	{pc}		; (ldr pc, [sp], #4)
   2cd98:	str	r1, [r2]
   2cd9c:	b	2cd64 <mcsync_spin_lock@@Base+0x18>

0002cda0 <mcsync_spin_unlock@@Base>:
   2cda0:	mov	r2, r0
   2cda4:	mov	r3, #0
   2cda8:	mcr	15, 0, r0, cr7, cr10, {5}
   2cdac:	mov	r0, r3
   2cdb0:	str	r3, [r2]
   2cdb4:	mcr	15, 0, r0, cr7, cr10, {5}
   2cdb8:	bx	lr

0002cdbc <mcsync_mutex_create@@Base>:
   2cdbc:	mov	r1, #24
   2cdc0:	mov	r0, #1
   2cdc4:	b	ff14 <mycore_calloc@plt>

0002cdc8 <mcsync_mutex_init@@Base>:
   2cdc8:	push	{r4, lr}
   2cdcc:	mov	r1, #0
   2cdd0:	bl	ffc8 <pthread_mutex_init@plt>
   2cdd4:	adds	r0, r0, #0
   2cdd8:	movne	r0, #1
   2cddc:	pop	{r4, pc}

0002cde0 <mcsync_mutex_clean@@Base>:
   2cde0:	bx	lr

0002cde4 <mcsync_mutex_destroy@@Base>:
   2cde4:	push	{r4, lr}
   2cde8:	mov	r4, r0
   2cdec:	bl	fe00 <pthread_mutex_destroy@plt>
   2cdf0:	mov	r0, r4
   2cdf4:	pop	{r4, lr}
   2cdf8:	b	10dcc <mycore_free@plt>

0002cdfc <mcsync_mutex_lock@@Base>:
   2cdfc:	push	{r4, lr}
   2ce00:	bl	ff08 <pthread_mutex_lock@plt>
   2ce04:	adds	r0, r0, #0
   2ce08:	movne	r0, #1
   2ce0c:	pop	{r4, pc}

0002ce10 <mcsync_mutex_try_lock@@Base>:
   2ce10:	push	{r4, lr}
   2ce14:	bl	10034 <pthread_mutex_trylock@plt>
   2ce18:	adds	r0, r0, #0
   2ce1c:	movne	r0, #1
   2ce20:	pop	{r4, pc}

0002ce24 <mcsync_mutex_unlock@@Base>:
   2ce24:	push	{r4, lr}
   2ce28:	bl	fbc0 <pthread_mutex_unlock@plt>
   2ce2c:	adds	r0, r0, #0
   2ce30:	movne	r0, #1
   2ce34:	pop	{r4, pc}
   2ce38:	subs	r2, r1, #1
   2ce3c:	bxeq	lr
   2ce40:	bcc	2d018 <mcsync_mutex_unlock@@Base+0x1f4>
   2ce44:	cmp	r0, r1
   2ce48:	bls	2cffc <mcsync_mutex_unlock@@Base+0x1d8>
   2ce4c:	tst	r1, r2
   2ce50:	beq	2d008 <mcsync_mutex_unlock@@Base+0x1e4>
   2ce54:	clz	r3, r0
   2ce58:	clz	r2, r1
   2ce5c:	sub	r3, r2, r3
   2ce60:	rsbs	r3, r3, #31
   2ce64:	addne	r3, r3, r3, lsl #1
   2ce68:	mov	r2, #0
   2ce6c:	addne	pc, pc, r3, lsl #2
   2ce70:	nop			; (mov r0, r0)
   2ce74:	cmp	r0, r1, lsl #31
   2ce78:	adc	r2, r2, r2
   2ce7c:	subcs	r0, r0, r1, lsl #31
   2ce80:	cmp	r0, r1, lsl #30
   2ce84:	adc	r2, r2, r2
   2ce88:	subcs	r0, r0, r1, lsl #30
   2ce8c:	cmp	r0, r1, lsl #29
   2ce90:	adc	r2, r2, r2
   2ce94:	subcs	r0, r0, r1, lsl #29
   2ce98:	cmp	r0, r1, lsl #28
   2ce9c:	adc	r2, r2, r2
   2cea0:	subcs	r0, r0, r1, lsl #28
   2cea4:	cmp	r0, r1, lsl #27
   2cea8:	adc	r2, r2, r2
   2ceac:	subcs	r0, r0, r1, lsl #27
   2ceb0:	cmp	r0, r1, lsl #26
   2ceb4:	adc	r2, r2, r2
   2ceb8:	subcs	r0, r0, r1, lsl #26
   2cebc:	cmp	r0, r1, lsl #25
   2cec0:	adc	r2, r2, r2
   2cec4:	subcs	r0, r0, r1, lsl #25
   2cec8:	cmp	r0, r1, lsl #24
   2cecc:	adc	r2, r2, r2
   2ced0:	subcs	r0, r0, r1, lsl #24
   2ced4:	cmp	r0, r1, lsl #23
   2ced8:	adc	r2, r2, r2
   2cedc:	subcs	r0, r0, r1, lsl #23
   2cee0:	cmp	r0, r1, lsl #22
   2cee4:	adc	r2, r2, r2
   2cee8:	subcs	r0, r0, r1, lsl #22
   2ceec:	cmp	r0, r1, lsl #21
   2cef0:	adc	r2, r2, r2
   2cef4:	subcs	r0, r0, r1, lsl #21
   2cef8:	cmp	r0, r1, lsl #20
   2cefc:	adc	r2, r2, r2
   2cf00:	subcs	r0, r0, r1, lsl #20
   2cf04:	cmp	r0, r1, lsl #19
   2cf08:	adc	r2, r2, r2
   2cf0c:	subcs	r0, r0, r1, lsl #19
   2cf10:	cmp	r0, r1, lsl #18
   2cf14:	adc	r2, r2, r2
   2cf18:	subcs	r0, r0, r1, lsl #18
   2cf1c:	cmp	r0, r1, lsl #17
   2cf20:	adc	r2, r2, r2
   2cf24:	subcs	r0, r0, r1, lsl #17
   2cf28:	cmp	r0, r1, lsl #16
   2cf2c:	adc	r2, r2, r2
   2cf30:	subcs	r0, r0, r1, lsl #16
   2cf34:	cmp	r0, r1, lsl #15
   2cf38:	adc	r2, r2, r2
   2cf3c:	subcs	r0, r0, r1, lsl #15
   2cf40:	cmp	r0, r1, lsl #14
   2cf44:	adc	r2, r2, r2
   2cf48:	subcs	r0, r0, r1, lsl #14
   2cf4c:	cmp	r0, r1, lsl #13
   2cf50:	adc	r2, r2, r2
   2cf54:	subcs	r0, r0, r1, lsl #13
   2cf58:	cmp	r0, r1, lsl #12
   2cf5c:	adc	r2, r2, r2
   2cf60:	subcs	r0, r0, r1, lsl #12
   2cf64:	cmp	r0, r1, lsl #11
   2cf68:	adc	r2, r2, r2
   2cf6c:	subcs	r0, r0, r1, lsl #11
   2cf70:	cmp	r0, r1, lsl #10
   2cf74:	adc	r2, r2, r2
   2cf78:	subcs	r0, r0, r1, lsl #10
   2cf7c:	cmp	r0, r1, lsl #9
   2cf80:	adc	r2, r2, r2
   2cf84:	subcs	r0, r0, r1, lsl #9
   2cf88:	cmp	r0, r1, lsl #8
   2cf8c:	adc	r2, r2, r2
   2cf90:	subcs	r0, r0, r1, lsl #8
   2cf94:	cmp	r0, r1, lsl #7
   2cf98:	adc	r2, r2, r2
   2cf9c:	subcs	r0, r0, r1, lsl #7
   2cfa0:	cmp	r0, r1, lsl #6
   2cfa4:	adc	r2, r2, r2
   2cfa8:	subcs	r0, r0, r1, lsl #6
   2cfac:	cmp	r0, r1, lsl #5
   2cfb0:	adc	r2, r2, r2
   2cfb4:	subcs	r0, r0, r1, lsl #5
   2cfb8:	cmp	r0, r1, lsl #4
   2cfbc:	adc	r2, r2, r2
   2cfc0:	subcs	r0, r0, r1, lsl #4
   2cfc4:	cmp	r0, r1, lsl #3
   2cfc8:	adc	r2, r2, r2
   2cfcc:	subcs	r0, r0, r1, lsl #3
   2cfd0:	cmp	r0, r1, lsl #2
   2cfd4:	adc	r2, r2, r2
   2cfd8:	subcs	r0, r0, r1, lsl #2
   2cfdc:	cmp	r0, r1, lsl #1
   2cfe0:	adc	r2, r2, r2
   2cfe4:	subcs	r0, r0, r1, lsl #1
   2cfe8:	cmp	r0, r1
   2cfec:	adc	r2, r2, r2
   2cff0:	subcs	r0, r0, r1
   2cff4:	mov	r0, r2
   2cff8:	bx	lr
   2cffc:	moveq	r0, #1
   2d000:	movne	r0, #0
   2d004:	bx	lr
   2d008:	clz	r2, r1
   2d00c:	rsb	r2, r2, #31
   2d010:	lsr	r0, r0, r2
   2d014:	bx	lr
   2d018:	cmp	r0, #0
   2d01c:	mvnne	r0, #0
   2d020:	b	2d044 <mcsync_mutex_unlock@@Base+0x220>
   2d024:	cmp	r1, #0
   2d028:	beq	2d018 <mcsync_mutex_unlock@@Base+0x1f4>
   2d02c:	push	{r0, r1, lr}
   2d030:	bl	2ce38 <mcsync_mutex_unlock@@Base+0x14>
   2d034:	pop	{r1, r2, lr}
   2d038:	mul	r3, r2, r0
   2d03c:	sub	r1, r1, r3
   2d040:	bx	lr
   2d044:	push	{r1, lr}
   2d048:	mov	r0, #8
   2d04c:	bl	fc2c <raise@plt>
   2d050:	pop	{r1, pc}

Disassembly of section .fini:

0002d054 <.fini>:
   2d054:	push	{r3, lr}
   2d058:	pop	{r3, pc}
