
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	10ac4 <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r1, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <strcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <_start@@Base>:
   10a88:	mov	fp, #0
   10a8c:	mov	lr, #0
   10a90:	pop	{r1}		; (ldr r1, [sp], #4)
   10a94:	mov	r2, sp
   10a98:	push	{r2}		; (str r2, [sp, #-4]!)
   10a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10aa0:	ldr	ip, [pc, #16]	; 10ab8 <_start@@Base+0x30>
   10aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa8:	ldr	r0, [pc, #12]	; 10abc <_start@@Base+0x34>
   10aac:	ldr	r3, [pc, #12]	; 10ac0 <_start@@Base+0x38>
   10ab0:	bl	10a4c <__libc_start_main@plt>
   10ab4:	bl	10a7c <abort@plt>
   10ab8:	ldrdeq	r1, [r1], -r8
   10abc:	andeq	r0, r1, ip, asr #25
   10ac0:	andeq	r1, r1, r8, ror r8
   10ac4:	ldr	r3, [pc, #20]	; 10ae0 <_start@@Base+0x58>
   10ac8:	ldr	r2, [pc, #20]	; 10ae4 <_start@@Base+0x5c>
   10acc:	add	r3, pc, r3
   10ad0:	ldr	r2, [r3, r2]
   10ad4:	cmp	r2, #0
   10ad8:	bxeq	lr
   10adc:	b	10a58 <__gmon_start__@plt>
   10ae0:	andeq	r1, r1, ip, lsr #10
   10ae4:	andeq	r0, r0, r8, lsr r0
   10ae8:	ldr	r0, [pc, #24]	; 10b08 <_start@@Base+0x80>
   10aec:	ldr	r3, [pc, #24]	; 10b0c <_start@@Base+0x84>
   10af0:	cmp	r3, r0
   10af4:	bxeq	lr
   10af8:	ldr	r3, [pc, #16]	; 10b10 <_start@@Base+0x88>
   10afc:	cmp	r3, #0
   10b00:	bxeq	lr
   10b04:	bx	r3
   10b08:	andeq	r2, r2, r4, asr #32
   10b0c:	andeq	r2, r2, r4, asr #32
   10b10:	andeq	r0, r0, r0
   10b14:	ldr	r0, [pc, #36]	; 10b40 <_start@@Base+0xb8>
   10b18:	ldr	r1, [pc, #36]	; 10b44 <_start@@Base+0xbc>
   10b1c:	sub	r1, r1, r0
   10b20:	asr	r1, r1, #2
   10b24:	add	r1, r1, r1, lsr #31
   10b28:	asrs	r1, r1, #1
   10b2c:	bxeq	lr
   10b30:	ldr	r3, [pc, #16]	; 10b48 <_start@@Base+0xc0>
   10b34:	cmp	r3, #0
   10b38:	bxeq	lr
   10b3c:	bx	r3
   10b40:	andeq	r2, r2, r4, asr #32
   10b44:	andeq	r2, r2, r4, asr #32
   10b48:	andeq	r0, r0, r0
   10b4c:	push	{r4, lr}
   10b50:	ldr	r4, [pc, #24]	; 10b70 <_start@@Base+0xe8>
   10b54:	ldrb	r3, [r4]
   10b58:	cmp	r3, #0
   10b5c:	popne	{r4, pc}
   10b60:	bl	10ae8 <_start@@Base+0x60>
   10b64:	mov	r3, #1
   10b68:	strb	r3, [r4]
   10b6c:	pop	{r4, pc}
   10b70:	andeq	r2, r2, r4, asr #32
   10b74:	b	10b14 <_start@@Base+0x8c>

00010b78 <imprimeArmazem@@Base>:
   10b78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10b7c:	strd	r6, [sp, #8]
   10b80:	strd	r8, [sp, #16]
   10b84:	strd	sl, [sp, #24]
   10b88:	str	lr, [sp, #32]
   10b8c:	sub	sp, sp, #12
   10b90:	subs	r9, r0, #0
   10b94:	beq	10cb0 <imprimeArmazem@@Base+0x138>
   10b98:	ldr	r4, [r9, #8]
   10b9c:	cmp	r4, #0
   10ba0:	beq	10cb0 <imprimeArmazem@@Base+0x138>
   10ba4:	ldr	sl, [r4, #4]
   10ba8:	mov	r1, #4
   10bac:	mov	r0, sl
   10bb0:	bl	10a04 <calloc@plt>
   10bb4:	str	r0, [sp, #4]
   10bb8:	ldr	r3, [r4]
   10bbc:	cmp	r3, #0
   10bc0:	beq	10be0 <imprimeArmazem@@Base+0x68>
   10bc4:	sub	r2, r0, #4
   10bc8:	ldr	r1, [r3]
   10bcc:	ldr	r1, [r1, #4]
   10bd0:	str	r1, [r2, #4]!
   10bd4:	ldr	r3, [r3, #4]
   10bd8:	cmp	r3, #0
   10bdc:	bne	10bc8 <imprimeArmazem@@Base+0x50>
   10be0:	mov	r0, #10
   10be4:	bl	10a70 <putchar@plt>
   10be8:	ldr	r5, [r9, #4]
   10bec:	cmp	r5, #0
   10bf0:	ble	10c60 <imprimeArmazem@@Base+0xe8>
   10bf4:	ldr	r3, [sp, #4]
   10bf8:	str	r3, [sp]
   10bfc:	add	r6, r3, sl, lsl #2
   10c00:	movw	fp, #6376	; 0x18e8
   10c04:	movt	fp, #1
   10c08:	movw	r8, #6388	; 0x18f4
   10c0c:	movt	r8, #1
   10c10:	movw	r7, #6380	; 0x18ec
   10c14:	movt	r7, #1
   10c18:	b	10c2c <imprimeArmazem@@Base+0xb4>
   10c1c:	mov	r0, #10
   10c20:	bl	10a70 <putchar@plt>
   10c24:	subs	r5, r5, #1
   10c28:	beq	10c60 <imprimeArmazem@@Base+0xe8>
   10c2c:	mov	r0, fp
   10c30:	bl	10a10 <printf@plt>
   10c34:	cmp	sl, #0
   10c38:	ble	10c1c <imprimeArmazem@@Base+0xa4>
   10c3c:	ldr	r4, [sp]
   10c40:	ldr	r3, [r4], #4
   10c44:	cmp	r3, r5
   10c48:	movge	r0, r7
   10c4c:	movlt	r0, r8
   10c50:	bl	10a10 <printf@plt>
   10c54:	cmp	r6, r4
   10c58:	bne	10c40 <imprimeArmazem@@Base+0xc8>
   10c5c:	b	10c1c <imprimeArmazem@@Base+0xa4>
   10c60:	movw	r0, #6396	; 0x18fc
   10c64:	movt	r0, #1
   10c68:	bl	10a10 <printf@plt>
   10c6c:	ldr	r3, [r9]
   10c70:	cmp	r3, #0
   10c74:	ble	10c9c <imprimeArmazem@@Base+0x124>
   10c78:	mov	r4, #0
   10c7c:	movw	r5, #6400	; 0x1900
   10c80:	movt	r5, #1
   10c84:	mov	r0, r5
   10c88:	bl	10a10 <printf@plt>
   10c8c:	add	r4, r4, #1
   10c90:	ldr	r3, [r9]
   10c94:	cmp	r3, r4
   10c98:	bgt	10c84 <imprimeArmazem@@Base+0x10c>
   10c9c:	movw	r0, #6640	; 0x19f0
   10ca0:	movt	r0, #1
   10ca4:	bl	10a34 <puts@plt>
   10ca8:	ldr	r0, [sp, #4]
   10cac:	bl	10a1c <free@plt>
   10cb0:	add	sp, sp, #12
   10cb4:	ldrd	r4, [sp]
   10cb8:	ldrd	r6, [sp, #8]
   10cbc:	ldrd	r8, [sp, #16]
   10cc0:	ldrd	sl, [sp, #24]
   10cc4:	add	sp, sp, #32
   10cc8:	pop	{pc}		; (ldr pc, [sp], #4)

00010ccc <main@@Base>:
   10ccc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10cd0:	strd	r6, [sp, #8]
   10cd4:	strd	r8, [sp, #16]
   10cd8:	strd	sl, [sp, #24]
   10cdc:	str	lr, [sp, #32]
   10ce0:	vpush	{d8}
   10ce4:	sub	sp, sp, #28
   10ce8:	mov	r1, #3
   10cec:	mov	r0, #4
   10cf0:	bl	111b0 <armazem_novo@@Base>
   10cf4:	mov	r4, r0
   10cf8:	movw	r0, #6408	; 0x1908
   10cfc:	movt	r0, #1
   10d00:	bl	10a34 <puts@plt>
   10d04:	vldr	s0, [pc, #992]	; 110ec <main@@Base+0x420>
   10d08:	movw	r0, #6428	; 0x191c
   10d0c:	movt	r0, #1
   10d10:	bl	113f0 <contentor_novo@@Base>
   10d14:	mov	fp, r0
   10d18:	vldr	s0, [pc, #976]	; 110f0 <main@@Base+0x424>
   10d1c:	movw	r0, #6436	; 0x1924
   10d20:	movt	r0, #1
   10d24:	bl	113f0 <contentor_novo@@Base>
   10d28:	mov	sl, r0
   10d2c:	vldr	s0, [pc, #960]	; 110f4 <main@@Base+0x428>
   10d30:	movw	r0, #6440	; 0x1928
   10d34:	movt	r0, #1
   10d38:	bl	113f0 <contentor_novo@@Base>
   10d3c:	mov	r5, r0
   10d40:	vldr	s0, [pc, #944]	; 110f8 <main@@Base+0x42c>
   10d44:	movw	r0, #6448	; 0x1930
   10d48:	movt	r0, #1
   10d4c:	bl	113f0 <contentor_novo@@Base>
   10d50:	str	r0, [sp]
   10d54:	vldr	s16, [pc, #928]	; 110fc <main@@Base+0x430>
   10d58:	vmov.f32	s0, s16
   10d5c:	movw	r0, #6456	; 0x1938
   10d60:	movt	r0, #1
   10d64:	bl	113f0 <contentor_novo@@Base>
   10d68:	str	r0, [sp, #4]
   10d6c:	vldr	s0, [pc, #908]	; 11100 <main@@Base+0x434>
   10d70:	movw	r0, #6464	; 0x1940
   10d74:	movt	r0, #1
   10d78:	bl	113f0 <contentor_novo@@Base>
   10d7c:	str	r0, [sp, #8]
   10d80:	vldr	s0, [pc, #892]	; 11104 <main@@Base+0x438>
   10d84:	movw	r0, #6472	; 0x1948
   10d88:	movt	r0, #1
   10d8c:	bl	113f0 <contentor_novo@@Base>
   10d90:	str	r0, [sp, #12]
   10d94:	vldr	s0, [pc, #876]	; 11108 <main@@Base+0x43c>
   10d98:	movw	r0, #6484	; 0x1954
   10d9c:	movt	r0, #1
   10da0:	bl	113f0 <contentor_novo@@Base>
   10da4:	str	r0, [sp, #16]
   10da8:	vmov.f32	s0, s16
   10dac:	movw	r0, #6492	; 0x195c
   10db0:	movt	r0, #1
   10db4:	bl	113f0 <contentor_novo@@Base>
   10db8:	mov	r9, r0
   10dbc:	vldr	s0, [pc, #840]	; 1110c <main@@Base+0x440>
   10dc0:	movw	r0, #6504	; 0x1968
   10dc4:	movt	r0, #1
   10dc8:	bl	113f0 <contentor_novo@@Base>
   10dcc:	mov	r8, r0
   10dd0:	vldr	s0, [pc, #824]	; 11110 <main@@Base+0x444>
   10dd4:	movw	r0, #6512	; 0x1970
   10dd8:	movt	r0, #1
   10ddc:	bl	113f0 <contentor_novo@@Base>
   10de0:	mov	r7, r0
   10de4:	vldr	s0, [pc, #808]	; 11114 <main@@Base+0x448>
   10de8:	movw	r0, #6524	; 0x197c
   10dec:	movt	r0, #1
   10df0:	bl	113f0 <contentor_novo@@Base>
   10df4:	mov	r6, r0
   10df8:	vldr	s0, [pc, #792]	; 11118 <main@@Base+0x44c>
   10dfc:	movw	r0, #6532	; 0x1984
   10e00:	movt	r0, #1
   10e04:	bl	113f0 <contentor_novo@@Base>
   10e08:	str	r0, [sp, #20]
   10e0c:	movw	r0, #6540	; 0x198c
   10e10:	movt	r0, #1
   10e14:	bl	10a34 <puts@plt>
   10e18:	mov	r0, r4
   10e1c:	bl	10b78 <imprimeArmazem@@Base>
   10e20:	movw	r0, #6568	; 0x19a8
   10e24:	movt	r0, #1
   10e28:	bl	10a34 <puts@plt>
   10e2c:	mov	r1, fp
   10e30:	mov	r0, r4
   10e34:	bl	11290 <armazenar_contentor@@Base>
   10e38:	cmp	r0, #0
   10e3c:	bne	11068 <main@@Base+0x39c>
   10e40:	mov	r1, sl
   10e44:	mov	r0, r4
   10e48:	bl	11290 <armazenar_contentor@@Base>
   10e4c:	cmp	r0, #0
   10e50:	bne	1107c <main@@Base+0x3b0>
   10e54:	mov	r1, r5
   10e58:	mov	r0, r4
   10e5c:	bl	11290 <armazenar_contentor@@Base>
   10e60:	cmp	r0, #0
   10e64:	bne	11090 <main@@Base+0x3c4>
   10e68:	ldr	r1, [sp]
   10e6c:	mov	r0, r4
   10e70:	bl	11290 <armazenar_contentor@@Base>
   10e74:	cmp	r0, #0
   10e78:	bne	110a4 <main@@Base+0x3d8>
   10e7c:	movw	r0, #6644	; 0x19f4
   10e80:	movt	r0, #1
   10e84:	bl	10a34 <puts@plt>
   10e88:	mov	r0, r4
   10e8c:	bl	10b78 <imprimeArmazem@@Base>
   10e90:	movw	r0, #6672	; 0x1a10
   10e94:	movt	r0, #1
   10e98:	bl	10a34 <puts@plt>
   10e9c:	ldr	r1, [sp, #4]
   10ea0:	mov	r0, r4
   10ea4:	bl	11290 <armazenar_contentor@@Base>
   10ea8:	cmp	r0, #0
   10eac:	bne	110bc <main@@Base+0x3f0>
   10eb0:	ldr	r1, [sp, #8]
   10eb4:	mov	r0, r4
   10eb8:	bl	11290 <armazenar_contentor@@Base>
   10ebc:	cmp	r0, #0
   10ec0:	bne	110d4 <main@@Base+0x408>
   10ec4:	ldr	r1, [sp, #12]
   10ec8:	mov	r0, r4
   10ecc:	bl	11290 <armazenar_contentor@@Base>
   10ed0:	cmp	r0, #0
   10ed4:	bne	1111c <main@@Base+0x450>
   10ed8:	ldr	r1, [sp, #16]
   10edc:	mov	r0, r4
   10ee0:	bl	11290 <armazenar_contentor@@Base>
   10ee4:	cmp	r0, #0
   10ee8:	bne	11134 <main@@Base+0x468>
   10eec:	mov	r1, r9
   10ef0:	mov	r0, r4
   10ef4:	bl	11290 <armazenar_contentor@@Base>
   10ef8:	cmp	r0, #0
   10efc:	bne	1114c <main@@Base+0x480>
   10f00:	mov	r1, r8
   10f04:	mov	r0, r4
   10f08:	bl	11290 <armazenar_contentor@@Base>
   10f0c:	cmp	r0, #0
   10f10:	bne	11160 <main@@Base+0x494>
   10f14:	mov	r1, r7
   10f18:	mov	r0, r4
   10f1c:	bl	11290 <armazenar_contentor@@Base>
   10f20:	cmp	r0, #0
   10f24:	bne	11174 <main@@Base+0x4a8>
   10f28:	mov	r1, r6
   10f2c:	mov	r0, r4
   10f30:	bl	11290 <armazenar_contentor@@Base>
   10f34:	cmp	r0, #0
   10f38:	bne	11188 <main@@Base+0x4bc>
   10f3c:	movw	r0, #6708	; 0x1a34
   10f40:	movt	r0, #1
   10f44:	bl	10a34 <puts@plt>
   10f48:	mov	r0, r4
   10f4c:	bl	10b78 <imprimeArmazem@@Base>
   10f50:	mov	r0, r4
   10f54:	bl	11228 <armazem_cheio@@Base>
   10f58:	cmp	r0, #0
   10f5c:	movwne	r0, #6736	; 0x1a50
   10f60:	movtne	r0, #1
   10f64:	movweq	r0, #6752	; 0x1a60
   10f68:	movteq	r0, #1
   10f6c:	bl	10a34 <puts@plt>
   10f70:	ldr	r1, [sp, #20]
   10f74:	mov	r0, r4
   10f78:	bl	11290 <armazenar_contentor@@Base>
   10f7c:	cmp	r0, #0
   10f80:	bne	1119c <main@@Base+0x4d0>
   10f84:	movw	r0, #6868	; 0x1ad4
   10f88:	movt	r0, #1
   10f8c:	bl	10a34 <puts@plt>
   10f90:	mov	r5, #8
   10f94:	movw	r7, #6904	; 0x1af8
   10f98:	movt	r7, #1
   10f9c:	mov	r0, r4
   10fa0:	bl	11350 <expedir_contentor@@Base>
   10fa4:	mov	r6, r0
   10fa8:	mov	r0, r7
   10fac:	bl	10a34 <puts@plt>
   10fb0:	mov	r0, r6
   10fb4:	bl	11474 <contentor_imprime@@Base>
   10fb8:	subs	r5, r5, #1
   10fbc:	bne	10f9c <main@@Base+0x2d0>
   10fc0:	movw	r0, #6936	; 0x1b18
   10fc4:	movt	r0, #1
   10fc8:	bl	10a34 <puts@plt>
   10fcc:	mov	r0, r4
   10fd0:	bl	10b78 <imprimeArmazem@@Base>
   10fd4:	movw	r0, #6964	; 0x1b34
   10fd8:	movt	r0, #1
   10fdc:	bl	10a34 <puts@plt>
   10fe0:	mov	r5, #4
   10fe4:	movw	r7, #6904	; 0x1af8
   10fe8:	movt	r7, #1
   10fec:	mov	r0, r4
   10ff0:	bl	11350 <expedir_contentor@@Base>
   10ff4:	mov	r6, r0
   10ff8:	mov	r0, r7
   10ffc:	bl	10a34 <puts@plt>
   11000:	mov	r0, r6
   11004:	bl	11474 <contentor_imprime@@Base>
   11008:	subs	r5, r5, #1
   1100c:	bne	10fec <main@@Base+0x320>
   11010:	movw	r0, #7000	; 0x1b58
   11014:	movt	r0, #1
   11018:	bl	10a34 <puts@plt>
   1101c:	mov	r0, r4
   11020:	bl	10b78 <imprimeArmazem@@Base>
   11024:	mov	r0, r4
   11028:	bl	111f4 <armazem_vazio@@Base>
   1102c:	cmp	r0, #0
   11030:	movwne	r0, #7028	; 0x1b74
   11034:	movtne	r0, #1
   11038:	movweq	r0, #7044	; 0x1b84
   1103c:	movteq	r0, #1
   11040:	bl	10a34 <puts@plt>
   11044:	mov	r0, #0
   11048:	add	sp, sp, #28
   1104c:	vpop	{d8}
   11050:	ldrd	r4, [sp]
   11054:	ldrd	r6, [sp, #8]
   11058:	ldrd	r8, [sp, #16]
   1105c:	ldrd	sl, [sp, #24]
   11060:	add	sp, sp, #32
   11064:	pop	{pc}		; (ldr pc, [sp], #4)
   11068:	ldr	r1, [fp]
   1106c:	movw	r0, #6604	; 0x19cc
   11070:	movt	r0, #1
   11074:	bl	10a10 <printf@plt>
   11078:	b	10e40 <main@@Base+0x174>
   1107c:	ldr	r1, [sl]
   11080:	movw	r0, #6604	; 0x19cc
   11084:	movt	r0, #1
   11088:	bl	10a10 <printf@plt>
   1108c:	b	10e54 <main@@Base+0x188>
   11090:	ldr	r1, [r5]
   11094:	movw	r0, #6604	; 0x19cc
   11098:	movt	r0, #1
   1109c:	bl	10a10 <printf@plt>
   110a0:	b	10e68 <main@@Base+0x19c>
   110a4:	ldr	r3, [sp]
   110a8:	ldr	r1, [r3]
   110ac:	movw	r0, #6604	; 0x19cc
   110b0:	movt	r0, #1
   110b4:	bl	10a10 <printf@plt>
   110b8:	b	10e7c <main@@Base+0x1b0>
   110bc:	ldr	r3, [sp, #4]
   110c0:	ldr	r1, [r3]
   110c4:	movw	r0, #6604	; 0x19cc
   110c8:	movt	r0, #1
   110cc:	bl	10a10 <printf@plt>
   110d0:	b	10eb0 <main@@Base+0x1e4>
   110d4:	ldr	r3, [sp, #8]
   110d8:	ldr	r1, [r3]
   110dc:	movw	r0, #6604	; 0x19cc
   110e0:	movt	r0, #1
   110e4:	bl	10a10 <printf@plt>
   110e8:	b	10ec4 <main@@Base+0x1f8>
   110ec:	cmnmi	r6, #0
   110f0:	cmnmi	sl, #0
   110f4:	strmi	r8, [r4], #-0
   110f8:	ldrtmi	r8, [r1], #-0
   110fc:			; <UNDEFINED> instruction: 0x43be0000
   11100:	bicmi	r0, r3, #0
   11104:	sbcmi	r0, r8, #0
   11108:	adcmi	r0, r0, #0
   1110c:	tstmi	r6, #0
   11110:	orrmi	r0, r7, #0
   11114:	bicsmi	r0, r7, #0
   11118:	movtmi	r0, #32768	; 0x8000
   1111c:	ldr	r3, [sp, #12]
   11120:	ldr	r1, [r3]
   11124:	movw	r0, #6604	; 0x19cc
   11128:	movt	r0, #1
   1112c:	bl	10a10 <printf@plt>
   11130:	b	10ed8 <main@@Base+0x20c>
   11134:	ldr	r3, [sp, #16]
   11138:	ldr	r1, [r3]
   1113c:	movw	r0, #6604	; 0x19cc
   11140:	movt	r0, #1
   11144:	bl	10a10 <printf@plt>
   11148:	b	10eec <main@@Base+0x220>
   1114c:	ldr	r1, [r9]
   11150:	movw	r0, #6604	; 0x19cc
   11154:	movt	r0, #1
   11158:	bl	10a10 <printf@plt>
   1115c:	b	10f00 <main@@Base+0x234>
   11160:	ldr	r1, [r8]
   11164:	movw	r0, #6604	; 0x19cc
   11168:	movt	r0, #1
   1116c:	bl	10a10 <printf@plt>
   11170:	b	10f14 <main@@Base+0x248>
   11174:	ldr	r1, [r7]
   11178:	movw	r0, #6604	; 0x19cc
   1117c:	movt	r0, #1
   11180:	bl	10a10 <printf@plt>
   11184:	b	10f28 <main@@Base+0x25c>
   11188:	ldr	r1, [r6]
   1118c:	movw	r0, #6604	; 0x19cc
   11190:	movt	r0, #1
   11194:	bl	10a10 <printf@plt>
   11198:	b	10f3c <main@@Base+0x270>
   1119c:	ldr	r1, [r5]
   111a0:	movw	r0, #6792	; 0x1a88
   111a4:	movt	r0, #1
   111a8:	bl	10a10 <printf@plt>
   111ac:	b	10f84 <main@@Base+0x2b8>

000111b0 <armazem_novo@@Base>:
   111b0:	strd	r4, [sp, #-16]!
   111b4:	str	r6, [sp, #8]
   111b8:	str	lr, [sp, #12]
   111bc:	mov	r6, r0
   111c0:	mov	r5, r1
   111c4:	mov	r0, #12
   111c8:	bl	10a40 <malloc@plt>
   111cc:	mov	r4, r0
   111d0:	str	r6, [r0]
   111d4:	str	r5, [r0, #4]
   111d8:	bl	11504 <fila_nova@@Base>
   111dc:	str	r0, [r4, #8]
   111e0:	mov	r0, r4
   111e4:	ldrd	r4, [sp]
   111e8:	ldr	r6, [sp, #8]
   111ec:	add	sp, sp, #12
   111f0:	pop	{pc}		; (ldr pc, [sp], #4)

000111f4 <armazem_vazio@@Base>:
   111f4:	cmp	r0, #0
   111f8:	beq	11220 <armazem_vazio@@Base+0x2c>
   111fc:	str	r4, [sp, #-8]!
   11200:	str	lr, [sp, #4]
   11204:	ldr	r0, [r0, #8]
   11208:	bl	11590 <fila_tamanho@@Base>
   1120c:	clz	r0, r0
   11210:	lsr	r0, r0, #5
   11214:	ldr	r4, [sp]
   11218:	add	sp, sp, #4
   1121c:	pop	{pc}		; (ldr pc, [sp], #4)
   11220:	mov	r0, #1
   11224:	bx	lr

00011228 <armazem_cheio@@Base>:
   11228:	strd	r4, [sp, #-16]!
   1122c:	str	r6, [sp, #8]
   11230:	str	lr, [sp, #12]
   11234:	mov	r5, r0
   11238:	bl	111f4 <armazem_vazio@@Base>
   1123c:	subs	r4, r0, #0
   11240:	movne	r4, #0
   11244:	beq	1125c <armazem_cheio@@Base+0x34>
   11248:	mov	r0, r4
   1124c:	ldrd	r4, [sp]
   11250:	ldr	r6, [sp, #8]
   11254:	add	sp, sp, #12
   11258:	pop	{pc}		; (ldr pc, [sp], #4)
   1125c:	ldr	r0, [r5, #8]
   11260:	bl	11590 <fila_tamanho@@Base>
   11264:	ldr	r3, [r5]
   11268:	cmp	r0, r3
   1126c:	bne	11248 <armazem_cheio@@Base+0x20>
   11270:	ldr	r0, [r5, #8]
   11274:	bl	115c8 <fila_back@@Base>
   11278:	ldr	r4, [r0, #4]
   1127c:	ldr	r3, [r5, #4]
   11280:	cmp	r4, r3
   11284:	movne	r4, #0
   11288:	moveq	r4, #1
   1128c:	b	11248 <armazem_cheio@@Base+0x20>

00011290 <armazenar_contentor@@Base>:
   11290:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11294:	strd	r6, [sp, #8]
   11298:	str	r8, [sp, #16]
   1129c:	str	lr, [sp, #20]
   112a0:	mov	r4, r0
   112a4:	mov	r5, r1
   112a8:	bl	11720 <pilha_nova@@Base>
   112ac:	cmp	r5, #0
   112b0:	cmpne	r4, #0
   112b4:	moveq	r0, #0
   112b8:	bne	112d0 <armazenar_contentor@@Base+0x40>
   112bc:	ldrd	r4, [sp]
   112c0:	ldrd	r6, [sp, #8]
   112c4:	ldr	r8, [sp, #16]
   112c8:	add	sp, sp, #20
   112cc:	pop	{pc}		; (ldr pc, [sp], #4)
   112d0:	mov	r6, r0
   112d4:	mov	r0, r4
   112d8:	bl	11228 <armazem_cheio@@Base>
   112dc:	cmp	r0, #0
   112e0:	movne	r0, #0
   112e4:	bne	112bc <armazenar_contentor@@Base+0x2c>
   112e8:	mov	r0, r4
   112ec:	bl	111f4 <armazem_vazio@@Base>
   112f0:	cmp	r0, #0
   112f4:	bne	11328 <armazenar_contentor@@Base+0x98>
   112f8:	ldr	r0, [r4, #8]
   112fc:	bl	115c8 <fila_back@@Base>
   11300:	ldr	r2, [r0, #4]
   11304:	ldr	r3, [r4, #4]
   11308:	cmp	r2, r3
   1130c:	beq	11340 <armazenar_contentor@@Base+0xb0>
   11310:	ldr	r0, [r4, #8]
   11314:	bl	115c8 <fila_back@@Base>
   11318:	mov	r1, r5
   1131c:	bl	117e4 <pilha_push@@Base>
   11320:	mov	r0, #1
   11324:	b	112bc <armazenar_contentor@@Base+0x2c>
   11328:	ldr	r7, [r4, #8]
   1132c:	bl	11720 <pilha_nova@@Base>
   11330:	mov	r1, r0
   11334:	mov	r0, r7
   11338:	bl	11604 <fila_push@@Base>
   1133c:	b	112f8 <armazenar_contentor@@Base+0x68>
   11340:	mov	r1, r6
   11344:	ldr	r0, [r4, #8]
   11348:	bl	11604 <fila_push@@Base>
   1134c:	b	11310 <armazenar_contentor@@Base+0x80>

00011350 <expedir_contentor@@Base>:
   11350:	strd	r4, [sp, #-16]!
   11354:	str	r6, [sp, #8]
   11358:	str	lr, [sp, #12]
   1135c:	mov	r4, r0
   11360:	bl	111f4 <armazem_vazio@@Base>
   11364:	cmp	r0, #0
   11368:	movne	r5, #0
   1136c:	bne	113d0 <expedir_contentor@@Base+0x80>
   11370:	ldr	r0, [r4, #8]
   11374:	bl	115a0 <fila_front@@Base>
   11378:	bl	117bc <pilha_top@@Base>
   1137c:	subs	r5, r0, #0
   11380:	beq	113d0 <expedir_contentor@@Base+0x80>
   11384:	ldr	r0, [r4, #8]
   11388:	bl	115a0 <fila_front@@Base>
   1138c:	bl	117bc <pilha_top@@Base>
   11390:	ldr	r5, [r0]
   11394:	ldr	r0, [r4, #8]
   11398:	bl	115a0 <fila_front@@Base>
   1139c:	bl	117bc <pilha_top@@Base>
   113a0:	vldr	s0, [r0, #4]
   113a4:	mov	r0, r5
   113a8:	bl	113f0 <contentor_novo@@Base>
   113ac:	mov	r5, r0
   113b0:	ldr	r0, [r4, #8]
   113b4:	bl	115a0 <fila_front@@Base>
   113b8:	ldr	r3, [r0, #4]
   113bc:	cmp	r3, #1
   113c0:	ble	113e4 <expedir_contentor@@Base+0x94>
   113c4:	ldr	r0, [r4, #8]
   113c8:	bl	115a0 <fila_front@@Base>
   113cc:	bl	1182c <pilha_pop@@Base>
   113d0:	mov	r0, r5
   113d4:	ldrd	r4, [sp]
   113d8:	ldr	r6, [sp, #8]
   113dc:	add	sp, sp, #12
   113e0:	pop	{pc}		; (ldr pc, [sp], #4)
   113e4:	ldr	r0, [r4, #8]
   113e8:	bl	1166c <fila_pop@@Base>
   113ec:	b	113d0 <expedir_contentor@@Base+0x80>

000113f0 <contentor_novo@@Base>:
   113f0:	strd	r4, [sp, #-16]!
   113f4:	str	r6, [sp, #8]
   113f8:	str	lr, [sp, #12]
   113fc:	vpush	{d8}
   11400:	mov	r5, r0
   11404:	vmov.f32	s16, s0
   11408:	mov	r0, #8
   1140c:	bl	10a40 <malloc@plt>
   11410:	mov	r4, r0
   11414:	mov	r0, r5
   11418:	bl	10a64 <strlen@plt>
   1141c:	add	r0, r0, #1
   11420:	bl	10a40 <malloc@plt>
   11424:	str	r0, [r4]
   11428:	mov	r1, r5
   1142c:	bl	10a28 <strcpy@plt>
   11430:	vstr	s16, [r4, #4]
   11434:	mov	r0, r4
   11438:	vpop	{d8}
   1143c:	ldrd	r4, [sp]
   11440:	ldr	r6, [sp, #8]
   11444:	add	sp, sp, #12
   11448:	pop	{pc}		; (ldr pc, [sp], #4)

0001144c <contentor_apaga@@Base>:
   1144c:	str	r4, [sp, #-8]!
   11450:	str	lr, [sp, #4]
   11454:	mov	r4, r0
   11458:	ldr	r0, [r0]
   1145c:	bl	10a1c <free@plt>
   11460:	mov	r0, r4
   11464:	bl	10a1c <free@plt>
   11468:	ldr	r4, [sp]
   1146c:	add	sp, sp, #4
   11470:	pop	{pc}		; (ldr pc, [sp], #4)

00011474 <contentor_imprime@@Base>:
   11474:	str	r4, [sp, #-8]!
   11478:	str	lr, [sp, #4]
   1147c:	cmp	r0, #0
   11480:	beq	114ac <contentor_imprime@@Base+0x38>
   11484:	vldr	s15, [r0, #4]
   11488:	vcvt.f64.f32	d7, s15
   1148c:	vmov	r2, r3, d7
   11490:	ldr	r1, [r0]
   11494:	movw	r0, #7100	; 0x1bbc
   11498:	movt	r0, #1
   1149c:	bl	10a10 <printf@plt>
   114a0:	ldr	r4, [sp]
   114a4:	add	sp, sp, #4
   114a8:	pop	{pc}		; (ldr pc, [sp], #4)
   114ac:	movw	r0, #7084	; 0x1bac
   114b0:	movt	r0, #1
   114b4:	bl	10a34 <puts@plt>
   114b8:	b	114a0 <contentor_imprime@@Base+0x2c>

000114bc <fila_novo_elemento@@Base>:
   114bc:	str	r4, [sp, #-8]!
   114c0:	str	lr, [sp, #4]
   114c4:	mov	r4, r0
   114c8:	mov	r0, #8
   114cc:	bl	10a40 <malloc@plt>
   114d0:	cmp	r0, #0
   114d4:	beq	114ec <fila_novo_elemento@@Base+0x30>
   114d8:	str	r4, [r0]
   114dc:	cmp	r4, #0
   114e0:	movne	r3, #0
   114e4:	strne	r3, [r0, #4]
   114e8:	beq	114f8 <fila_novo_elemento@@Base+0x3c>
   114ec:	ldr	r4, [sp]
   114f0:	add	sp, sp, #4
   114f4:	pop	{pc}		; (ldr pc, [sp], #4)
   114f8:	bl	10a1c <free@plt>
   114fc:	mov	r0, r4
   11500:	b	114ec <fila_novo_elemento@@Base+0x30>

00011504 <fila_nova@@Base>:
   11504:	str	r4, [sp, #-8]!
   11508:	str	lr, [sp, #4]
   1150c:	mov	r0, #8
   11510:	bl	10a40 <malloc@plt>
   11514:	cmp	r0, #0
   11518:	beq	11528 <fila_nova@@Base+0x24>
   1151c:	mov	r3, #0
   11520:	str	r3, [r0]
   11524:	str	r3, [r0, #4]
   11528:	ldr	r4, [sp]
   1152c:	add	sp, sp, #4
   11530:	pop	{pc}		; (ldr pc, [sp], #4)

00011534 <fila_apaga@@Base>:
   11534:	strd	r4, [sp, #-16]!
   11538:	str	r6, [sp, #8]
   1153c:	str	lr, [sp, #12]
   11540:	subs	r5, r0, #0
   11544:	beq	11580 <fila_apaga@@Base+0x4c>
   11548:	ldr	r4, [r5]
   1154c:	cmp	r4, #0
   11550:	beq	11578 <fila_apaga@@Base+0x44>
   11554:	ldr	r3, [r4, #4]
   11558:	str	r3, [r5]
   1155c:	ldr	r0, [r4]
   11560:	bl	11750 <pilha_apaga@@Base>
   11564:	mov	r0, r4
   11568:	bl	10a1c <free@plt>
   1156c:	ldr	r4, [r5]
   11570:	cmp	r4, #0
   11574:	bne	11554 <fila_apaga@@Base+0x20>
   11578:	mov	r0, r5
   1157c:	bl	10a1c <free@plt>
   11580:	ldrd	r4, [sp]
   11584:	ldr	r6, [sp, #8]
   11588:	add	sp, sp, #12
   1158c:	pop	{pc}		; (ldr pc, [sp], #4)

00011590 <fila_tamanho@@Base>:
   11590:	cmp	r0, #0
   11594:	ldrne	r0, [r0, #4]
   11598:	mvneq	r0, #0
   1159c:	bx	lr

000115a0 <fila_front@@Base>:
   115a0:	cmp	r0, #0
   115a4:	beq	115c4 <fila_front@@Base+0x24>
   115a8:	ldr	r3, [r0, #4]
   115ac:	cmp	r3, #0
   115b0:	beq	115c0 <fila_front@@Base+0x20>
   115b4:	ldr	r3, [r0]
   115b8:	ldr	r0, [r3]
   115bc:	bx	lr
   115c0:	mov	r0, #0
   115c4:	bx	lr

000115c8 <fila_back@@Base>:
   115c8:	cmp	r0, #0
   115cc:	beq	11600 <fila_back@@Base+0x38>
   115d0:	ldr	r3, [r0, #4]
   115d4:	cmp	r3, #0
   115d8:	beq	115fc <fila_back@@Base+0x34>
   115dc:	ldr	r2, [r0]
   115e0:	b	115e8 <fila_back@@Base+0x20>
   115e4:	mov	r2, r3
   115e8:	ldr	r3, [r2, #4]
   115ec:	cmp	r3, #0
   115f0:	bne	115e4 <fila_back@@Base+0x1c>
   115f4:	ldr	r0, [r2]
   115f8:	bx	lr
   115fc:	mov	r0, #0
   11600:	bx	lr

00011604 <fila_push@@Base>:
   11604:	strd	r4, [sp, #-16]!
   11608:	str	r6, [sp, #8]
   1160c:	str	lr, [sp, #12]
   11610:	subs	r5, r0, #0
   11614:	beq	1165c <fila_push@@Base+0x58>
   11618:	mov	r0, r1
   1161c:	ldr	r4, [r5]
   11620:	bl	114bc <fila_novo_elemento@@Base>
   11624:	cmp	r0, #0
   11628:	beq	1165c <fila_push@@Base+0x58>
   1162c:	ldr	r3, [r5, #4]
   11630:	add	r3, r3, #1
   11634:	str	r3, [r5, #4]
   11638:	cmp	r4, #0
   1163c:	streq	r0, [r5]
   11640:	bne	1164c <fila_push@@Base+0x48>
   11644:	b	1165c <fila_push@@Base+0x58>
   11648:	mov	r4, r3
   1164c:	ldr	r3, [r4, #4]
   11650:	cmp	r3, #0
   11654:	bne	11648 <fila_push@@Base+0x44>
   11658:	str	r0, [r4, #4]
   1165c:	ldrd	r4, [sp]
   11660:	ldr	r6, [sp, #8]
   11664:	add	sp, sp, #12
   11668:	pop	{pc}		; (ldr pc, [sp], #4)

0001166c <fila_pop@@Base>:
   1166c:	cmp	r0, #0
   11670:	bxeq	lr
   11674:	ldr	r3, [r0, #4]
   11678:	cmp	r3, #0
   1167c:	bxeq	lr
   11680:	str	r4, [sp, #-8]!
   11684:	str	lr, [sp, #4]
   11688:	ldr	r4, [r0]
   1168c:	sub	r3, r3, #1
   11690:	str	r3, [r0, #4]
   11694:	ldr	r3, [r4, #4]
   11698:	str	r3, [r0]
   1169c:	ldr	r0, [r4]
   116a0:	bl	11750 <pilha_apaga@@Base>
   116a4:	mov	r0, r4
   116a8:	bl	10a1c <free@plt>
   116ac:	ldr	r4, [sp]
   116b0:	add	sp, sp, #4
   116b4:	pop	{pc}		; (ldr pc, [sp], #4)

000116b8 <pilha_novo_elemento@@Base>:
   116b8:	strd	r4, [sp, #-16]!
   116bc:	str	r6, [sp, #8]
   116c0:	str	lr, [sp, #12]
   116c4:	mov	r5, r0
   116c8:	mov	r0, #8
   116cc:	bl	10a40 <malloc@plt>
   116d0:	subs	r4, r0, #0
   116d4:	beq	116fc <pilha_novo_elemento@@Base+0x44>
   116d8:	vldr	s0, [r5, #4]
   116dc:	ldr	r0, [r5]
   116e0:	bl	113f0 <contentor_novo@@Base>
   116e4:	mov	r5, r0
   116e8:	str	r0, [r4]
   116ec:	cmp	r0, #0
   116f0:	movne	r3, #0
   116f4:	strne	r3, [r4, #4]
   116f8:	beq	11710 <pilha_novo_elemento@@Base+0x58>
   116fc:	mov	r0, r4
   11700:	ldrd	r4, [sp]
   11704:	ldr	r6, [sp, #8]
   11708:	add	sp, sp, #12
   1170c:	pop	{pc}		; (ldr pc, [sp], #4)
   11710:	mov	r0, r4
   11714:	bl	10a1c <free@plt>
   11718:	mov	r4, r5
   1171c:	b	116fc <pilha_novo_elemento@@Base+0x44>

00011720 <pilha_nova@@Base>:
   11720:	str	r4, [sp, #-8]!
   11724:	str	lr, [sp, #4]
   11728:	mov	r0, #8
   1172c:	bl	10a40 <malloc@plt>
   11730:	cmp	r0, #0
   11734:	beq	11744 <pilha_nova@@Base+0x24>
   11738:	mov	r3, #0
   1173c:	str	r3, [r0]
   11740:	str	r3, [r0, #4]
   11744:	ldr	r4, [sp]
   11748:	add	sp, sp, #4
   1174c:	pop	{pc}		; (ldr pc, [sp], #4)

00011750 <pilha_apaga@@Base>:
   11750:	strd	r4, [sp, #-16]!
   11754:	str	r6, [sp, #8]
   11758:	str	lr, [sp, #12]
   1175c:	subs	r5, r0, #0
   11760:	beq	1179c <pilha_apaga@@Base+0x4c>
   11764:	ldr	r4, [r5]
   11768:	cmp	r4, #0
   1176c:	beq	11794 <pilha_apaga@@Base+0x44>
   11770:	ldr	r3, [r4, #4]
   11774:	str	r3, [r5]
   11778:	ldr	r0, [r4]
   1177c:	bl	1144c <contentor_apaga@@Base>
   11780:	mov	r0, r4
   11784:	bl	10a1c <free@plt>
   11788:	ldr	r4, [r5]
   1178c:	cmp	r4, #0
   11790:	bne	11770 <pilha_apaga@@Base+0x20>
   11794:	mov	r0, r5
   11798:	bl	10a1c <free@plt>
   1179c:	ldrd	r4, [sp]
   117a0:	ldr	r6, [sp, #8]
   117a4:	add	sp, sp, #12
   117a8:	pop	{pc}		; (ldr pc, [sp], #4)

000117ac <pilha_tamanho@@Base>:
   117ac:	cmp	r0, #0
   117b0:	ldrne	r0, [r0, #4]
   117b4:	mvneq	r0, #0
   117b8:	bx	lr

000117bc <pilha_top@@Base>:
   117bc:	cmp	r0, #0
   117c0:	beq	117e0 <pilha_top@@Base+0x24>
   117c4:	ldr	r3, [r0, #4]
   117c8:	cmp	r3, #0
   117cc:	beq	117dc <pilha_top@@Base+0x20>
   117d0:	ldr	r3, [r0]
   117d4:	ldr	r0, [r3]
   117d8:	bx	lr
   117dc:	mov	r0, #0
   117e0:	bx	lr

000117e4 <pilha_push@@Base>:
   117e4:	str	r4, [sp, #-8]!
   117e8:	str	lr, [sp, #4]
   117ec:	subs	r4, r0, #0
   117f0:	beq	11820 <pilha_push@@Base+0x3c>
   117f4:	mov	r0, r1
   117f8:	bl	116b8 <pilha_novo_elemento@@Base>
   117fc:	cmp	r0, #0
   11800:	beq	11820 <pilha_push@@Base+0x3c>
   11804:	ldr	r3, [r4, #4]
   11808:	add	r3, r3, #1
   1180c:	str	r3, [r4, #4]
   11810:	ldr	r3, [r4]
   11814:	cmp	r3, #0
   11818:	strne	r3, [r0, #4]
   1181c:	str	r0, [r4]
   11820:	ldr	r4, [sp]
   11824:	add	sp, sp, #4
   11828:	pop	{pc}		; (ldr pc, [sp], #4)

0001182c <pilha_pop@@Base>:
   1182c:	cmp	r0, #0
   11830:	bxeq	lr
   11834:	ldr	r3, [r0, #4]
   11838:	cmp	r3, #0
   1183c:	bxeq	lr
   11840:	str	r4, [sp, #-8]!
   11844:	str	lr, [sp, #4]
   11848:	ldr	r4, [r0]
   1184c:	ldr	r2, [r4, #4]
   11850:	str	r2, [r0]
   11854:	sub	r3, r3, #1
   11858:	str	r3, [r0, #4]
   1185c:	ldr	r0, [r4]
   11860:	bl	1144c <contentor_apaga@@Base>
   11864:	mov	r0, r4
   11868:	bl	10a1c <free@plt>
   1186c:	ldr	r4, [sp]
   11870:	add	sp, sp, #4
   11874:	pop	{pc}		; (ldr pc, [sp], #4)

00011878 <__libc_csu_init@@Base>:
   11878:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1187c:	mov	r7, r0
   11880:	ldr	r6, [pc, #72]	; 118d0 <__libc_csu_init@@Base+0x58>
   11884:	ldr	r5, [pc, #72]	; 118d4 <__libc_csu_init@@Base+0x5c>
   11888:	add	r6, pc, r6
   1188c:	add	r5, pc, r5
   11890:	sub	r6, r6, r5
   11894:	mov	r8, r1
   11898:	mov	r9, r2
   1189c:	bl	109e4 <calloc@plt-0x20>
   118a0:	asrs	r6, r6, #2
   118a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   118a8:	mov	r4, #0
   118ac:	add	r4, r4, #1
   118b0:	ldr	r3, [r5], #4
   118b4:	mov	r2, r9
   118b8:	mov	r1, r8
   118bc:	mov	r0, r7
   118c0:	blx	r3
   118c4:	cmp	r6, r4
   118c8:	bne	118ac <__libc_csu_init@@Base+0x34>
   118cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118d0:	andeq	r0, r1, r4, lsl #13
   118d4:	andeq	r0, r1, ip, ror r6

000118d8 <__libc_csu_fini@@Base>:
   118d8:	bx	lr

Disassembly of section .fini:

000118dc <.fini>:
   118dc:	push	{r3, lr}
   118e0:	pop	{r3, pc}
