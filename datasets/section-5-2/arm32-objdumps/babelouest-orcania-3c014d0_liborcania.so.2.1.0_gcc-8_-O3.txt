
../repos/babelouest-orcania-3c014d0/liborcania.so.2.1.0:     file format elf32-littlearm


Disassembly of section .init:

00000e24 <.init>:
 e24:	push	{r3, lr}
 e28:	bl	1010 <o_strchr@plt+0x10>
 e2c:	pop	{r3, pc}

Disassembly of section .plt:

00000e30 <strstr@plt-0x14>:
     e30:	push	{lr}		; (str lr, [sp, #-4]!)
     e34:	ldr	lr, [pc, #4]	; e40 <strstr@plt-0x4>
     e38:	add	lr, pc, lr
     e3c:	ldr	pc, [lr, #8]!
     e40:	andeq	r2, r1, r0, asr #3

00000e44 <strstr@plt>:
     e44:	add	ip, pc, #0, 12
     e48:	add	ip, ip, #73728	; 0x12000
     e4c:	ldr	pc, [ip, #448]!	; 0x1c0

00000e50 <pointer_list_get_at@plt>:
     e50:	add	ip, pc, #0, 12
     e54:	add	ip, ip, #73728	; 0x12000
     e58:	ldr	pc, [ip, #440]!	; 0x1b8

00000e5c <o_strncasecmp@plt>:
     e5c:	add	ip, pc, #0, 12
     e60:	add	ip, ip, #73728	; 0x12000
     e64:	ldr	pc, [ip, #432]!	; 0x1b0

00000e68 <strcasestr@plt>:
     e68:	add	ip, pc, #0, 12
     e6c:	add	ip, ip, #73728	; 0x12000
     e70:	ldr	pc, [ip, #424]!	; 0x1a8

00000e74 <strcmp@plt>:
     e74:	add	ip, pc, #0, 12
     e78:	add	ip, ip, #73728	; 0x12000
     e7c:	ldr	pc, [ip, #416]!	; 0x1a0

00000e80 <__cxa_finalize@plt>:
     e80:	add	ip, pc, #0, 12
     e84:	add	ip, ip, #73728	; 0x12000
     e88:	ldr	pc, [ip, #408]!	; 0x198

00000e8c <o_strndup@plt>:
     e8c:	add	ip, pc, #0, 12
     e90:	add	ip, ip, #73728	; 0x12000
     e94:	ldr	pc, [ip, #400]!	; 0x190

00000e98 <trunc@plt>:
     e98:	add	ip, pc, #0, 12
     e9c:	add	ip, ip, #73728	; 0x12000
     ea0:	ldr	pc, [ip, #392]!	; 0x188

00000ea4 <o_free@plt>:
     ea4:	add	ip, pc, #0, 12
     ea8:	add	ip, ip, #73728	; 0x12000
     eac:	ldr	pc, [ip, #384]!	; 0x180

00000eb0 <pointer_list_remove_at@plt>:
     eb0:	add	ip, pc, #0, 12
     eb4:	add	ip, ip, #73728	; 0x12000
     eb8:	ldr	pc, [ip, #376]!	; 0x178

00000ebc <memcpy@plt>:
     ebc:	add	ip, pc, #0, 12
     ec0:	add	ip, ip, #73728	; 0x12000
     ec4:	ldr	pc, [ip, #368]!	; 0x170

00000ec8 <o_strdup@plt>:
     ec8:	add	ip, pc, #0, 12
     ecc:	add	ip, ip, #73728	; 0x12000
     ed0:	ldr	pc, [ip, #360]!	; 0x168

00000ed4 <o_base64_encode@plt>:
     ed4:	add	ip, pc, #0, 12
     ed8:	add	ip, ip, #73728	; 0x12000
     edc:	ldr	pc, [ip, #352]!	; 0x160

00000ee0 <strcasecmp@plt>:
     ee0:	add	ip, pc, #0, 12
     ee4:	add	ip, ip, #73728	; 0x12000
     ee8:	ldr	pc, [ip, #344]!	; 0x158

00000eec <o_strcmp@plt>:
     eec:	add	ip, pc, #0, 12
     ef0:	add	ip, ip, #73728	; 0x12000
     ef4:	ldr	pc, [ip, #336]!	; 0x150

00000ef8 <trimwhitespace@plt>:
     ef8:	add	ip, pc, #0, 12
     efc:	add	ip, ip, #73728	; 0x12000
     f00:	ldr	pc, [ip, #328]!	; 0x148

00000f04 <strcpy@plt>:
     f04:	add	ip, pc, #0, 12
     f08:	add	ip, ip, #73728	; 0x12000
     f0c:	ldr	pc, [ip, #320]!	; 0x140

00000f10 <o_strlen@plt>:
     f10:	add	ip, pc, #0, 12
     f14:	add	ip, ip, #73728	; 0x12000
     f18:	ldr	pc, [ip, #312]!	; 0x138

00000f1c <o_strcasecmp@plt>:
     f1c:	add	ip, pc, #0, 12
     f20:	add	ip, ip, #73728	; 0x12000
     f24:	ldr	pc, [ip, #304]!	; 0x130

00000f28 <o_realloc@plt>:
     f28:	add	ip, pc, #0, 12
     f2c:	add	ip, ip, #73728	; 0x12000
     f30:	ldr	pc, [ip, #296]!	; 0x128

00000f34 <__gmon_start__@plt>:
     f34:	add	ip, pc, #0, 12
     f38:	add	ip, ip, #73728	; 0x12000
     f3c:	ldr	pc, [ip, #288]!	; 0x120

00000f40 <__ctype_b_loc@plt>:
     f40:	add	ip, pc, #0, 12
     f44:	add	ip, ip, #73728	; 0x12000
     f48:	ldr	pc, [ip, #280]!	; 0x118

00000f4c <strlen@plt>:
     f4c:	add	ip, pc, #0, 12
     f50:	add	ip, ip, #73728	; 0x12000
     f54:	ldr	pc, [ip, #272]!	; 0x110

00000f58 <strchr@plt>:
     f58:	add	ip, pc, #0, 12
     f5c:	add	ip, ip, #73728	; 0x12000
     f60:	ldr	pc, [ip, #264]!	; 0x108

00000f64 <strncasecmp@plt>:
     f64:	add	ip, pc, #0, 12
     f68:	add	ip, ip, #73728	; 0x12000
     f6c:	ldr	pc, [ip, #256]!	; 0x100

00000f70 <snprintf@plt>:
     f70:	add	ip, pc, #0, 12
     f74:	add	ip, ip, #73728	; 0x12000
     f78:	ldr	pc, [ip, #248]!	; 0xf8

00000f7c <o_malloc@plt>:
     f7c:	add	ip, pc, #0, 12
     f80:	add	ip, ip, #73728	; 0x12000
     f84:	ldr	pc, [ip, #240]!	; 0xf0

00000f88 <memset@plt>:
     f88:	add	ip, pc, #0, 12
     f8c:	add	ip, ip, #73728	; 0x12000
     f90:	ldr	pc, [ip, #232]!	; 0xe8

00000f94 <strncpy@plt>:
     f94:	add	ip, pc, #0, 12
     f98:	add	ip, ip, #73728	; 0x12000
     f9c:	ldr	pc, [ip, #224]!	; 0xe0

00000fa0 <pointer_list_size@plt>:
     fa0:	add	ip, pc, #0, 12
     fa4:	add	ip, ip, #73728	; 0x12000
     fa8:	ldr	pc, [ip, #216]!	; 0xd8

00000fac <msprintf@plt>:
     fac:	add	ip, pc, #0, 12
     fb0:	add	ip, ip, #73728	; 0x12000
     fb4:	ldr	pc, [ip, #208]!	; 0xd0

00000fb8 <o_base64url_2_base64@plt>:
     fb8:	add	ip, pc, #0, 12
     fbc:	add	ip, ip, #73728	; 0x12000
     fc0:	ldr	pc, [ip, #200]!	; 0xc8

00000fc4 <strrchr@plt>:
     fc4:	add	ip, pc, #0, 12
     fc8:	add	ip, ip, #73728	; 0x12000
     fcc:	ldr	pc, [ip, #192]!	; 0xc0

00000fd0 <o_base64_decode@plt>:
     fd0:	add	ip, pc, #0, 12
     fd4:	add	ip, ip, #73728	; 0x12000
     fd8:	ldr	pc, [ip, #184]!	; 0xb8

00000fdc <vsnprintf@plt>:
     fdc:	add	ip, pc, #0, 12
     fe0:	add	ip, ip, #73728	; 0x12000
     fe4:	ldr	pc, [ip, #176]!	; 0xb0

00000fe8 <o_strncmp@plt>:
     fe8:	add	ip, pc, #0, 12
     fec:	add	ip, ip, #73728	; 0x12000
     ff0:	ldr	pc, [ip, #168]!	; 0xa8

00000ff4 <strncmp@plt>:
     ff4:	add	ip, pc, #0, 12
     ff8:	add	ip, ip, #73728	; 0x12000
     ffc:	ldr	pc, [ip, #160]!	; 0xa0

00001000 <o_strchr@plt>:
    1000:	add	ip, pc, #0, 12
    1004:	add	ip, ip, #73728	; 0x12000
    1008:	ldr	pc, [ip, #152]!	; 0x98

Disassembly of section .text:

00001010 <o_base64_encode@@Base-0x334>:
    1010:	ldr	r3, [pc, #20]	; 102c <o_strchr@plt+0x2c>
    1014:	ldr	r2, [pc, #20]	; 1030 <o_strchr@plt+0x30>
    1018:	add	r3, pc, r3
    101c:	ldr	r2, [r3, r2]
    1020:	cmp	r2, #0
    1024:	bxeq	lr
    1028:	b	f34 <__gmon_start__@plt>
    102c:	andeq	r1, r1, r0, ror #31
    1030:	andeq	r0, r0, ip, lsr #1
    1034:	ldr	r0, [pc, #44]	; 1068 <o_strchr@plt+0x68>
    1038:	ldr	r3, [pc, #44]	; 106c <o_strchr@plt+0x6c>
    103c:	add	r0, pc, r0
    1040:	add	r3, pc, r3
    1044:	cmp	r3, r0
    1048:	ldr	r3, [pc, #32]	; 1070 <o_strchr@plt+0x70>
    104c:	add	r3, pc, r3
    1050:	bxeq	lr
    1054:	ldr	r2, [pc, #24]	; 1074 <o_strchr@plt+0x74>
    1058:	ldr	r3, [r3, r2]
    105c:	cmp	r3, #0
    1060:	bxeq	lr
    1064:	bx	r3
    1068:	andeq	r2, r1, r0, lsl #1
    106c:	andeq	r2, r1, ip, ror r0
    1070:	andeq	r1, r1, ip, lsr #31
    1074:	andeq	r0, r0, r8, lsr #1
    1078:	ldr	r0, [pc, #56]	; 10b8 <o_strchr@plt+0xb8>
    107c:	ldr	r3, [pc, #56]	; 10bc <o_strchr@plt+0xbc>
    1080:	add	r0, pc, r0
    1084:	add	r3, pc, r3
    1088:	sub	r1, r3, r0
    108c:	ldr	r3, [pc, #44]	; 10c0 <o_strchr@plt+0xc0>
    1090:	asr	r1, r1, #2
    1094:	add	r3, pc, r3
    1098:	add	r1, r1, r1, lsr #31
    109c:	asrs	r1, r1, #1
    10a0:	bxeq	lr
    10a4:	ldr	r2, [pc, #24]	; 10c4 <o_strchr@plt+0xc4>
    10a8:	ldr	r3, [r3, r2]
    10ac:	cmp	r3, #0
    10b0:	bxeq	lr
    10b4:	bx	r3
    10b8:	andeq	r2, r1, ip, lsr r0
    10bc:	andeq	r2, r1, r8, lsr r0
    10c0:	andeq	r1, r1, r4, ror #30
    10c4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    10c8:	ldr	r3, [pc, #76]	; 111c <o_strchr@plt+0x11c>
    10cc:	ldr	r2, [pc, #76]	; 1120 <o_strchr@plt+0x120>
    10d0:	add	r3, pc, r3
    10d4:	add	r2, pc, r2
    10d8:	ldrb	r3, [r3]
    10dc:	cmp	r3, #0
    10e0:	bxne	lr
    10e4:	ldr	r3, [pc, #56]	; 1124 <o_strchr@plt+0x124>
    10e8:	push	{r4, lr}
    10ec:	ldr	r3, [r2, r3]
    10f0:	cmp	r3, #0
    10f4:	beq	1104 <o_strchr@plt+0x104>
    10f8:	ldr	r3, [pc, #40]	; 1128 <o_strchr@plt+0x128>
    10fc:	ldr	r0, [pc, r3]
    1100:	bl	e80 <__cxa_finalize@plt>
    1104:	bl	1034 <o_strchr@plt+0x34>
    1108:	ldr	r3, [pc, #28]	; 112c <o_strchr@plt+0x12c>
    110c:	mov	r2, #1
    1110:	add	r3, pc, r3
    1114:	strb	r2, [r3]
    1118:	pop	{r4, pc}
    111c:	andeq	r1, r1, ip, ror #31
    1120:	andeq	r1, r1, r4, lsr #30
    1124:	andeq	r0, r0, r4, lsr #1
    1128:			; <UNDEFINED> instruction: 0x00011fb0
    112c:	andeq	r1, r1, ip, lsr #31
    1130:	b	1078 <o_strchr@plt+0x78>
    1134:	andeq	r0, r0, r0
    1138:	strd	r4, [sp, #-32]!	; 0xffffffe0
    113c:	mov	r4, r1
    1140:	mov	r5, r2
    1144:	strd	r6, [sp, #8]
    1148:	mov	r2, #256	; 0x100
    114c:	mov	r1, #128	; 0x80
    1150:	strd	r8, [sp, #16]
    1154:	mov	r7, r0
    1158:	mov	r6, r3
    115c:	str	sl, [sp, #24]
    1160:	str	lr, [sp, #28]
    1164:	sub	sp, sp, #264	; 0x108
    1168:	add	r0, sp, #8
    116c:	bl	f88 <memset@plt>
    1170:	ldr	r0, [pc, #452]	; 133c <o_strchr@plt+0x33c>
    1174:	add	r0, pc, r0
    1178:	sub	ip, r0, #1
    117c:	add	r0, r0, #63	; 0x3f
    1180:	mov	r2, ip
    1184:	add	r2, r2, #1
    1188:	add	lr, sp, #264	; 0x108
    118c:	mov	r3, r2
    1190:	cmp	r2, r0
    1194:	ldrb	r1, [r3], #-1
    1198:	add	r1, lr, r1
    119c:	sub	r3, r3, ip
    11a0:	strb	r3, [r1, #-256]	; 0xffffff00
    11a4:	bne	1184 <o_strchr@plt+0x184>
    11a8:	mov	r1, #0
    11ac:	cmp	r4, r1
    11b0:	subne	r8, r7, #1
    11b4:	subne	r4, r4, #1
    11b8:	strb	r1, [sp, #69]	; 0x45
    11bc:	addne	r7, r7, r4
    11c0:	movne	r2, r8
    11c4:	beq	128c <o_strchr@plt+0x28c>
    11c8:	ldrb	r3, [r2, #1]!
    11cc:	add	r0, sp, #264	; 0x108
    11d0:	add	r3, r0, r3
    11d4:	ldrb	r3, [r3, #-256]	; 0xffffff00
    11d8:	cmp	r3, #128	; 0x80
    11dc:	addne	r1, r1, #1
    11e0:	cmp	r2, r7
    11e4:	bne	11c8 <o_strchr@plt+0x1c8>
    11e8:	cmp	r1, #0
    11ec:	beq	128c <o_strchr@plt+0x28c>
    11f0:	ands	r1, r1, #3
    11f4:	bne	128c <o_strchr@plt+0x28c>
    11f8:	ldr	sl, [pc, #320]	; 1340 <o_strchr@plt+0x340>
    11fc:	mov	r4, r1
    1200:	mov	r9, r1
    1204:	str	r1, [r6]
    1208:	add	sl, pc, sl
    120c:	b	124c <o_strchr@plt+0x24c>
    1210:	add	r2, sp, #264	; 0x108
    1214:	add	r2, r2, r3
    1218:	ldrb	r2, [r2, #-256]	; 0xffffff00
    121c:	cmp	r2, #128	; 0x80
    1220:	beq	1244 <o_strchr@plt+0x244>
    1224:	cmp	r3, #61	; 0x3d
    1228:	add	r3, sp, #264	; 0x108
    122c:	add	r3, r3, r4
    1230:	add	r4, r4, #1
    1234:	addeq	r9, r9, #1
    1238:	cmp	r4, #4
    123c:	strb	r2, [r3, #-260]	; 0xfffffefc
    1240:	beq	12b0 <o_strchr@plt+0x2b0>
    1244:	cmp	r8, r7
    1248:	beq	130c <o_strchr@plt+0x30c>
    124c:	ldrb	r1, [r8, #1]!
    1250:	mov	r0, sl
    1254:	bl	1000 <o_strchr@plt>
    1258:	cmp	r0, #0
    125c:	ldrb	r3, [r8]
    1260:	bne	1210 <o_strchr@plt+0x210>
    1264:	cmp	r3, #61	; 0x3d
    1268:	cmpne	r3, #32
    126c:	sub	r1, r3, #9
    1270:	movne	r2, #1
    1274:	moveq	r2, #0
    1278:	cmp	r1, #1
    127c:	movls	r2, #0
    1280:	andhi	r2, r2, #1
    1284:	cmp	r2, #0
    1288:	beq	1210 <o_strchr@plt+0x210>
    128c:	mov	r9, #0
    1290:	mov	r0, r9
    1294:	add	sp, sp, #264	; 0x108
    1298:	ldrd	r4, [sp]
    129c:	ldrd	r6, [sp, #8]
    12a0:	ldrd	r8, [sp, #16]
    12a4:	ldr	sl, [sp, #24]
    12a8:	add	sp, sp, #28
    12ac:	pop	{pc}		; (ldr pc, [sp], #4)
    12b0:	cmp	r5, #0
    12b4:	beq	12ec <o_strchr@plt+0x2ec>
    12b8:	ldrb	ip, [sp, #5]
    12bc:	add	r5, r5, #3
    12c0:	ldrb	r0, [sp, #6]
    12c4:	ldrb	lr, [sp, #4]
    12c8:	lsr	r1, ip, #4
    12cc:	ldrb	r3, [sp, #7]
    12d0:	lsr	r2, r0, #2
    12d4:	orr	r1, r1, lr, lsl #2
    12d8:	orr	r2, r2, ip, lsl #4
    12dc:	orr	r3, r3, r0, lsl #6
    12e0:	strb	r1, [r5, #-3]
    12e4:	strb	r2, [r5, #-2]
    12e8:	strb	r3, [r5, #-1]
    12ec:	ldr	r3, [r6]
    12f0:	cmp	r9, #0
    12f4:	add	r2, r3, #3
    12f8:	str	r2, [r6]
    12fc:	bne	1314 <o_strchr@plt+0x314>
    1300:	cmp	r8, r7
    1304:	mov	r4, r9
    1308:	bne	124c <o_strchr@plt+0x24c>
    130c:	mov	r9, #1
    1310:	b	1290 <o_strchr@plt+0x290>
    1314:	cmp	r9, #1
    1318:	addeq	r3, r3, #2
    131c:	streq	r3, [r6]
    1320:	beq	1290 <o_strchr@plt+0x290>
    1324:	cmp	r9, #2
    1328:	bne	128c <o_strchr@plt+0x28c>
    132c:	add	r3, r3, #1
    1330:	mov	r9, #1
    1334:	str	r3, [r6]
    1338:	b	1290 <o_strchr@plt+0x290>
    133c:	ldrdeq	r1, [r0], -r4
    1340:	andeq	r1, r0, r0, asr #22

00001344 <o_base64_encode@@Base>:
    1344:	lsl	ip, r1, #2
    1348:	strd	r4, [sp, #-20]!	; 0xffffffec
    134c:	movw	r5, #43691	; 0xaaab
    1350:	movt	r5, #43690	; 0xaaaa
    1354:	movw	r4, #36409	; 0x8e39
    1358:	movt	r4, #14563	; 0x38e3
    135c:	cmp	r0, #0
    1360:	strd	r6, [sp, #8]
    1364:	umull	r5, ip, r5, ip
    1368:	str	lr, [sp, #16]
    136c:	clz	lr, r3
    1370:	lsr	lr, lr, #5
    1374:	moveq	lr, #1
    1378:	lsr	ip, ip, #1
    137c:	add	r5, ip, #4
    1380:	add	ip, ip, #5
    1384:	umull	r5, r4, r4, r5
    1388:	add	ip, ip, r4, lsr #4
    138c:	cmp	r1, ip
    1390:	orrhi	lr, lr, #1
    1394:	cmp	lr, #0
    1398:	movne	r0, #0
    139c:	bne	14f0 <o_base64_encode@@Base+0x1ac>
    13a0:	cmp	r1, #2
    13a4:	add	r5, r0, r1
    13a8:	str	lr, [r3]
    13ac:	bls	155c <o_base64_encode@@Base+0x218>
    13b0:	ldr	r6, [pc, #476]	; 1594 <o_base64_encode@@Base+0x250>
    13b4:	add	ip, r0, #3
    13b8:	add	r6, pc, r6
    13bc:	cmp	r2, #0
    13c0:	sub	r1, r5, ip
    13c4:	beq	1500 <o_base64_encode@@Base+0x1bc>
    13c8:	ldrb	lr, [ip, #-3]
    13cc:	add	r4, r2, #4
    13d0:	cmp	r1, #2
    13d4:	mov	r0, ip
    13d8:	add	ip, ip, #3
    13dc:	ldrb	lr, [r6, lr, lsr #2]
    13e0:	strb	lr, [r2]
    13e4:	ldrb	lr, [ip, #-6]
    13e8:	ldrb	r7, [ip, #-5]
    13ec:	lsl	lr, lr, #4
    13f0:	and	lr, lr, #48	; 0x30
    13f4:	orr	lr, lr, r7, lsr #4
    13f8:	ldrb	lr, [r6, lr]
    13fc:	strb	lr, [r2, #1]
    1400:	ldrb	lr, [ip, #-5]
    1404:	ldrb	r7, [ip, #-4]
    1408:	lsl	lr, lr, #2
    140c:	and	lr, lr, #60	; 0x3c
    1410:	orr	lr, lr, r7, lsr #6
    1414:	ldrb	lr, [r6, lr]
    1418:	strb	lr, [r2, #2]
    141c:	ldrb	lr, [ip, #-4]
    1420:	and	lr, lr, #63	; 0x3f
    1424:	ldrb	lr, [r6, lr]
    1428:	strb	lr, [r2, #3]
    142c:	mov	r2, r4
    1430:	ldr	lr, [r3]
    1434:	add	lr, lr, #4
    1438:	str	lr, [r3]
    143c:	bgt	13bc <o_base64_encode@@Base+0x78>
    1440:	cmp	r5, r0
    1444:	beq	14dc <o_base64_encode@@Base+0x198>
    1448:	cmp	r4, #0
    144c:	beq	1564 <o_base64_encode@@Base+0x220>
    1450:	ldr	ip, [pc, #320]	; 1598 <o_base64_encode@@Base+0x254>
    1454:	cmp	r1, #1
    1458:	mov	r2, r4
    145c:	ldrb	r1, [r0]
    1460:	add	ip, pc, ip
    1464:	ldrb	r1, [ip, r1, lsr #2]
    1468:	strb	r1, [r2], #1
    146c:	ldr	lr, [r3]
    1470:	add	r1, lr, #1
    1474:	str	r1, [r3]
    1478:	beq	1524 <o_base64_encode@@Base+0x1e0>
    147c:	cmp	r2, #0
    1480:	beq	158c <o_base64_encode@@Base+0x248>
    1484:	ldrb	r2, [r0]
    1488:	add	r1, r4, #3
    148c:	ldrb	lr, [r0, #1]
    1490:	lsl	r2, r2, #4
    1494:	and	r2, r2, #48	; 0x30
    1498:	orr	r2, r2, lr, lsr #4
    149c:	ldrb	r2, [ip, r2]
    14a0:	strb	r2, [r4, #1]
    14a4:	ldrb	r2, [r0, #1]
    14a8:	lsl	r2, r2, #2
    14ac:	and	r2, r2, #60	; 0x3c
    14b0:	ldrb	r2, [ip, r2]
    14b4:	strb	r2, [r4, #2]
    14b8:	ldr	r2, [r3]
    14bc:	add	r2, r2, #2
    14c0:	str	r2, [r3]
    14c4:	mov	r2, #61	; 0x3d
    14c8:	mov	r4, r1
    14cc:	strb	r2, [r4], #1
    14d0:	ldr	r2, [r3]
    14d4:	add	r2, r2, #1
    14d8:	str	r2, [r3]
    14dc:	cmp	r4, #0
    14e0:	movne	r3, #0
    14e4:	movne	r0, #1
    14e8:	moveq	r0, #1
    14ec:	strbne	r3, [r4]
    14f0:	ldrd	r4, [sp]
    14f4:	ldrd	r6, [sp, #8]
    14f8:	add	sp, sp, #16
    14fc:	pop	{pc}		; (ldr pc, [sp], #4)
    1500:	sub	r1, r5, ip
    1504:	add	lr, lr, #4
    1508:	cmp	r1, #2
    150c:	mov	r0, ip
    1510:	add	ip, ip, #3
    1514:	str	lr, [r3]
    1518:	bgt	1500 <o_base64_encode@@Base+0x1bc>
    151c:	mov	r4, #0
    1520:	b	1440 <o_base64_encode@@Base+0xfc>
    1524:	cmp	r2, #0
    1528:	beq	158c <o_base64_encode@@Base+0x248>
    152c:	ldrb	r2, [r0]
    1530:	mov	r0, #61	; 0x3d
    1534:	add	r1, r4, #3
    1538:	strb	r0, [r4, #2]
    153c:	lsl	r2, r2, #4
    1540:	and	r2, r2, #48	; 0x30
    1544:	ldrb	r2, [ip, r2]
    1548:	strb	r2, [r4, #1]
    154c:	ldr	r2, [r3]
    1550:	add	r2, r2, #2
    1554:	str	r2, [r3]
    1558:	b	14c4 <o_base64_encode@@Base+0x180>
    155c:	mov	r4, r2
    1560:	b	1440 <o_base64_encode@@Base+0xfc>
    1564:	add	r2, lr, #1
    1568:	add	lr, lr, #3
    156c:	str	r2, [r3]
    1570:	add	lr, lr, #1
    1574:	ldrd	r4, [sp]
    1578:	mov	r0, #1
    157c:	ldrd	r6, [sp, #8]
    1580:	add	sp, sp, #16
    1584:	str	lr, [r3]
    1588:	pop	{pc}		; (ldr pc, [sp], #4)
    158c:	add	lr, lr, #3
    1590:	b	1570 <o_base64_encode@@Base+0x22c>
    1594:	muleq	r0, r0, r9
    1598:	andeq	r1, r0, r8, ror #17

0000159c <o_base64_decode@@Base>:
    159c:	cmp	r1, #0
    15a0:	clz	ip, r3
    15a4:	lsr	ip, ip, #5
    15a8:	moveq	ip, #1
    15ac:	cmp	r0, #0
    15b0:	moveq	ip, #1
    15b4:	cmp	ip, #0
    15b8:	beq	15c4 <o_base64_decode@@Base+0x28>
    15bc:	mov	r0, #0
    15c0:	bx	lr
    15c4:	b	1138 <o_strchr@plt+0x138>

000015c8 <o_base64url_encode@@Base>:
    15c8:	strd	r4, [sp, #-16]!
    15cc:	subs	r4, r2, #0
    15d0:	mov	r5, r3
    15d4:	str	r6, [sp, #8]
    15d8:	str	lr, [sp, #12]
    15dc:	vpush	{d8}
    15e0:	beq	1684 <o_base64url_encode@@Base+0xbc>
    15e4:	bl	ed4 <o_base64_encode@plt>
    15e8:	cmp	r0, #0
    15ec:	bne	1608 <o_base64url_encode@@Base+0x40>
    15f0:	mov	r0, #0
    15f4:	vpop	{d8}
    15f8:	ldrd	r4, [sp]
    15fc:	ldr	r6, [sp, #8]
    1600:	add	sp, sp, #12
    1604:	pop	{pc}		; (ldr pc, [sp], #4)
    1608:	ldr	ip, [r5]
    160c:	cmp	ip, #1
    1610:	bls	16d0 <o_base64url_encode@@Base+0x108>
    1614:	sub	r3, ip, #2
    1618:	ldrb	r2, [r4, r3]
    161c:	cmp	r2, #61	; 0x3d
    1620:	beq	1704 <o_base64url_encode@@Base+0x13c>
    1624:	sub	r3, ip, #1
    1628:	ldrb	r2, [r4, r3]
    162c:	add	r3, r4, r3
    1630:	cmp	r2, #61	; 0x3d
    1634:	beq	16e8 <o_base64url_encode@@Base+0x120>
    1638:	sub	r3, r4, #1
    163c:	mov	r6, #95	; 0x5f
    1640:	mov	lr, #45	; 0x2d
    1644:	b	1668 <o_base64url_encode@@Base+0xa0>
    1648:	cmp	r2, #47	; 0x2f
    164c:	strbeq	r6, [r1]
    1650:	ldreq	ip, [r5]
    1654:	add	r2, r3, #2
    1658:	mov	r3, r1
    165c:	sub	r2, r2, r4
    1660:	cmp	ip, r2
    1664:	bls	15f4 <o_base64url_encode@@Base+0x2c>
    1668:	ldrb	r2, [r3, #1]
    166c:	add	r1, r3, #1
    1670:	cmp	r2, #43	; 0x2b
    1674:	bne	1648 <o_base64url_encode@@Base+0x80>
    1678:	strb	lr, [r3, #1]
    167c:	ldr	ip, [r5]
    1680:	b	1654 <o_base64url_encode@@Base+0x8c>
    1684:	cmp	r1, #0
    1688:	cmpne	r3, #0
    168c:	beq	15f0 <o_base64url_encode@@Base+0x28>
    1690:	vmov	s15, r1
    1694:	vldr	d5, [pc, #140]	; 1728 <o_base64url_encode@@Base+0x160>
    1698:	vldr	d6, [pc, #144]	; 1730 <o_base64url_encode@@Base+0x168>
    169c:	vcvt.f64.u32	d7, s15
    16a0:	vmul.f64	d7, d7, d5
    16a4:	vdiv.f64	d8, d7, d6
    16a8:	vmov.f64	d0, d8
    16ac:	bl	e98 <trunc@plt>
    16b0:	vcmp.f64	d0, d8
    16b4:	mov	r0, #1
    16b8:	vmrs	APSR_nzcv, fpscr
    16bc:	vldrne	d8, [pc, #116]	; 1738 <o_base64url_encode@@Base+0x170>
    16c0:	vaddne.f64	d8, d0, d8
    16c4:	vcvt.u32.f64	s16, d8
    16c8:	vstr	s16, [r5]
    16cc:	b	15f4 <o_base64url_encode@@Base+0x2c>
    16d0:	cmp	ip, #0
    16d4:	beq	15f4 <o_base64url_encode@@Base+0x2c>
    16d8:	ldrb	r3, [r4]
    16dc:	cmp	r3, #61	; 0x3d
    16e0:	bne	1638 <o_base64url_encode@@Base+0x70>
    16e4:	mov	r3, r4
    16e8:	mov	r2, #0
    16ec:	strb	r2, [r3]
    16f0:	ldr	ip, [r5]
    16f4:	sub	r3, ip, #1
    16f8:	mov	ip, r3
    16fc:	str	r3, [r5]
    1700:	b	171c <o_base64url_encode@@Base+0x154>
    1704:	mov	r2, #0
    1708:	strb	r2, [r4, r3]
    170c:	ldr	ip, [r5]
    1710:	sub	r3, ip, #2
    1714:	mov	ip, r3
    1718:	str	r3, [r5]
    171c:	cmp	r3, #0
    1720:	bne	1638 <o_base64url_encode@@Base+0x70>
    1724:	b	15f4 <o_base64url_encode@@Base+0x2c>
    1728:	andeq	r0, r0, r0
    172c:	andsmi	r0, r0, r0
    1730:	andeq	r0, r0, r0
    1734:	andmi	r0, r8, r0
    1738:	andeq	r0, r0, r0
    173c:	svccc	0x00f00000	; IMB

00001740 <o_base64url_2_base64@@Base>:
    1740:	cmp	r0, #0
    1744:	bxeq	lr
    1748:	strd	r4, [sp, #-16]!
    174c:	mov	r4, r1
    1750:	mov	r5, r2
    1754:	mov	r1, r0
    1758:	mov	r2, r4
    175c:	str	r6, [sp, #8]
    1760:	mov	r0, r5
    1764:	mov	r6, r3
    1768:	str	lr, [sp, #12]
    176c:	bl	ebc <memcpy@plt>
    1770:	cmp	r4, #0
    1774:	str	r4, [r6]
    1778:	beq	17c4 <o_base64url_2_base64@@Base+0x84>
    177c:	sub	lr, r4, #1
    1780:	sub	r0, r5, #1
    1784:	add	lr, r5, lr
    1788:	mov	r2, #47	; 0x2f
    178c:	mov	r3, #43	; 0x2b
    1790:	ldrb	ip, [r0, #1]!
    1794:	cmp	ip, #45	; 0x2d
    1798:	strbeq	r3, [r0]
    179c:	beq	17a8 <o_base64url_2_base64@@Base+0x68>
    17a0:	cmp	ip, #95	; 0x5f
    17a4:	strbeq	r2, [r0]
    17a8:	cmp	lr, r0
    17ac:	bne	1790 <o_base64url_2_base64@@Base+0x50>
    17b0:	and	r3, r4, #3
    17b4:	cmp	r3, #2
    17b8:	beq	1800 <o_base64url_2_base64@@Base+0xc0>
    17bc:	cmp	r3, #3
    17c0:	beq	17d8 <o_base64url_2_base64@@Base+0x98>
    17c4:	ldrd	r4, [sp]
    17c8:	mov	r0, #1
    17cc:	ldr	r6, [sp, #8]
    17d0:	add	sp, sp, #12
    17d4:	pop	{pc}		; (ldr pc, [sp], #4)
    17d8:	mov	r3, #61	; 0x3d
    17dc:	mov	r0, #1
    17e0:	strb	r3, [r5, r4]
    17e4:	ldr	r3, [r6]
    17e8:	ldrd	r4, [sp]
    17ec:	add	r3, r3, r0
    17f0:	str	r3, [r6]
    17f4:	ldr	r6, [sp, #8]
    17f8:	add	sp, sp, #12
    17fc:	pop	{pc}		; (ldr pc, [sp], #4)
    1800:	mov	r3, #61	; 0x3d
    1804:	mov	r0, #1
    1808:	strb	r3, [r5, r4]!
    180c:	strb	r3, [r5, #1]
    1810:	ldr	r3, [r6]
    1814:	ldrd	r4, [sp]
    1818:	add	r3, r3, #2
    181c:	str	r3, [r6]
    1820:	ldr	r6, [sp, #8]
    1824:	add	sp, sp, #12
    1828:	pop	{pc}		; (ldr pc, [sp], #4)

0000182c <o_base64url_decode@@Base>:
    182c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    1830:	subs	r5, r0, #0
    1834:	strd	r6, [sp, #8]
    1838:	str	r8, [sp, #16]
    183c:	str	lr, [sp, #20]
    1840:	sub	sp, sp, #8
    1844:	beq	1890 <o_base64url_decode@@Base+0x64>
    1848:	add	r0, r1, #3
    184c:	mov	r7, r3
    1850:	mov	r6, r2
    1854:	mov	r4, r1
    1858:	bl	f7c <o_malloc@plt>
    185c:	subs	r8, r0, #0
    1860:	beq	1890 <o_base64url_decode@@Base+0x64>
    1864:	mov	r1, r4
    1868:	mov	r0, r5
    186c:	add	r3, sp, #4
    1870:	mov	r2, r8
    1874:	bl	fb8 <o_base64url_2_base64@plt>
    1878:	cmp	r0, #0
    187c:	moveq	r4, #1
    1880:	bne	18b0 <o_base64url_decode@@Base+0x84>
    1884:	mov	r0, r8
    1888:	bl	ea4 <o_free@plt>
    188c:	b	1894 <o_base64url_decode@@Base+0x68>
    1890:	mov	r4, #0
    1894:	mov	r0, r4
    1898:	add	sp, sp, #8
    189c:	ldrd	r4, [sp]
    18a0:	ldrd	r6, [sp, #8]
    18a4:	ldr	r8, [sp, #16]
    18a8:	add	sp, sp, #20
    18ac:	pop	{pc}		; (ldr pc, [sp], #4)
    18b0:	mov	r3, r7
    18b4:	mov	r2, r6
    18b8:	ldr	r1, [sp, #4]
    18bc:	mov	r0, r8
    18c0:	bl	fd0 <o_base64_decode@plt>
    18c4:	mov	r4, r0
    18c8:	b	1884 <o_base64url_decode@@Base+0x58>

000018cc <o_base64_2_base64url@@Base>:
    18cc:	cmp	r0, #0
    18d0:	bxeq	lr
    18d4:	strd	r4, [sp, #-16]!
    18d8:	mov	r5, r1
    18dc:	mov	r4, r2
    18e0:	mov	r1, r0
    18e4:	mov	r2, r5
    18e8:	str	r6, [sp, #8]
    18ec:	mov	r0, r4
    18f0:	mov	r6, r3
    18f4:	str	lr, [sp, #12]
    18f8:	bl	ebc <memcpy@plt>
    18fc:	cmp	r5, #0
    1900:	str	r5, [r6]
    1904:	beq	1940 <o_base64_2_base64url@@Base+0x74>
    1908:	sub	r1, r5, #1
    190c:	sub	r0, r4, #1
    1910:	add	r1, r4, r1
    1914:	mov	ip, #95	; 0x5f
    1918:	mov	r3, #45	; 0x2d
    191c:	ldrb	r2, [r0, #1]!
    1920:	cmp	r2, #43	; 0x2b
    1924:	strbeq	r3, [r0]
    1928:	beq	1934 <o_base64_2_base64url@@Base+0x68>
    192c:	cmp	r2, #47	; 0x2f
    1930:	strbeq	ip, [r0]
    1934:	cmp	r0, r1
    1938:	bne	191c <o_base64_2_base64url@@Base+0x50>
    193c:	ldr	r5, [r6]
    1940:	add	r3, r4, r5
    1944:	ldrb	r3, [r3, #-1]
    1948:	cmp	r3, #61	; 0x3d
    194c:	subeq	r2, r5, #2
    1950:	rsbeq	r1, r4, #1
    1954:	addeq	r2, r4, r2
    1958:	bne	1970 <o_base64_2_base64url@@Base+0xa4>
    195c:	add	r3, r1, r2
    1960:	str	r3, [r6]
    1964:	ldrb	r3, [r2], #-1
    1968:	cmp	r3, #61	; 0x3d
    196c:	beq	195c <o_base64_2_base64url@@Base+0x90>
    1970:	ldrd	r4, [sp]
    1974:	mov	r0, #1
    1978:	ldr	r6, [sp, #8]
    197c:	add	sp, sp, #12
    1980:	pop	{pc}		; (ldr pc, [sp], #4)

00001984 <o_malloc@@Base>:
    1984:	cmp	r0, #0
    1988:	beq	199c <o_malloc@@Base+0x18>
    198c:	ldr	r3, [pc, #12]	; 19a0 <o_malloc@@Base+0x1c>
    1990:	add	r3, pc, r3
    1994:	ldr	r3, [r3]
    1998:	bx	r3
    199c:	bx	lr
    19a0:	andeq	r1, r1, r0, lsr #14

000019a4 <o_realloc@@Base>:
    19a4:	subs	r3, r1, #0
    19a8:	beq	19bc <o_realloc@@Base+0x18>
    19ac:	ldr	r3, [pc, #16]	; 19c4 <o_realloc@@Base+0x20>
    19b0:	add	r3, pc, r3
    19b4:	ldr	r3, [r3, #4]
    19b8:	bx	r3
    19bc:	mov	r0, r3
    19c0:	bx	lr
    19c4:	andeq	r1, r1, r0, lsl #14

000019c8 <o_free@@Base>:
    19c8:	cmp	r0, #0
    19cc:	beq	19e0 <o_free@@Base+0x18>
    19d0:	ldr	r3, [pc, #12]	; 19e4 <o_free@@Base+0x1c>
    19d4:	add	r3, pc, r3
    19d8:	ldr	r3, [r3, #8]
    19dc:	bx	r3
    19e0:	bx	lr
    19e4:	ldrdeq	r1, [r1], -ip

000019e8 <o_set_alloc_funcs@@Base>:
    19e8:	ldr	r3, [pc, #12]	; 19fc <o_set_alloc_funcs@@Base+0x14>
    19ec:	add	r3, pc, r3
    19f0:	strd	r0, [r3]
    19f4:	str	r2, [r3, #8]
    19f8:	bx	lr
    19fc:	andeq	r1, r1, r4, asr #13

00001a00 <o_get_alloc_funcs@@Base>:
    1a00:	cmp	r0, #0
    1a04:	beq	1a18 <o_get_alloc_funcs@@Base+0x18>
    1a08:	ldr	r3, [pc, #60]	; 1a4c <o_get_alloc_funcs@@Base+0x4c>
    1a0c:	add	r3, pc, r3
    1a10:	ldr	r3, [r3]
    1a14:	str	r3, [r0]
    1a18:	cmp	r1, #0
    1a1c:	beq	1a30 <o_get_alloc_funcs@@Base+0x30>
    1a20:	ldr	r3, [pc, #40]	; 1a50 <o_get_alloc_funcs@@Base+0x50>
    1a24:	add	r3, pc, r3
    1a28:	ldr	r3, [r3, #4]
    1a2c:	str	r3, [r1]
    1a30:	cmp	r2, #0
    1a34:	beq	1a48 <o_get_alloc_funcs@@Base+0x48>
    1a38:	ldr	r3, [pc, #20]	; 1a54 <o_get_alloc_funcs@@Base+0x54>
    1a3c:	add	r3, pc, r3
    1a40:	ldr	r3, [r3, #8]
    1a44:	str	r3, [r2]
    1a48:	bx	lr
    1a4c:	andeq	r1, r1, r4, lsr #13
    1a50:	andeq	r1, r1, ip, lsl #13
    1a54:	andeq	r1, r1, r4, ror r6

00001a58 <msprintf@@Base>:
    1a58:	push	{r0, r1, r2, r3}
    1a5c:	strd	r4, [sp, #-16]!
    1a60:	str	r6, [sp, #8]
    1a64:	str	lr, [sp, #12]
    1a68:	sub	sp, sp, #8
    1a6c:	ldr	r4, [sp, #24]
    1a70:	cmp	r4, #0
    1a74:	moveq	r6, r4
    1a78:	beq	1ac0 <msprintf@@Base+0x68>
    1a7c:	add	ip, sp, #28
    1a80:	mov	r1, #0
    1a84:	mov	r3, ip
    1a88:	mov	r0, r1
    1a8c:	mov	r2, r4
    1a90:	str	ip, [sp]
    1a94:	str	ip, [sp, #4]
    1a98:	bl	fdc <vsnprintf@plt>
    1a9c:	add	r5, r0, #1
    1aa0:	mov	r0, r5
    1aa4:	bl	f7c <o_malloc@plt>
    1aa8:	subs	r6, r0, #0
    1aac:	beq	1ac0 <msprintf@@Base+0x68>
    1ab0:	mov	r2, r4
    1ab4:	mov	r1, r5
    1ab8:	ldr	r3, [sp, #4]
    1abc:	bl	fdc <vsnprintf@plt>
    1ac0:	mov	r0, r6
    1ac4:	add	sp, sp, #8
    1ac8:	ldrd	r4, [sp]
    1acc:	ldr	r6, [sp, #8]
    1ad0:	ldr	lr, [sp, #12]
    1ad4:	add	sp, sp, #16
    1ad8:	add	sp, sp, #16
    1adc:	bx	lr

00001ae0 <mstrcatf@@Base>:
    1ae0:	push	{r1, r2, r3}
    1ae4:	strd	r4, [sp, #-20]!	; 0xffffffec
    1ae8:	strd	r6, [sp, #8]
    1aec:	str	lr, [sp, #16]
    1af0:	sub	sp, sp, #8
    1af4:	ldr	r5, [sp, #28]
    1af8:	cmp	r5, #0
    1afc:	moveq	r6, r5
    1b00:	beq	1b80 <mstrcatf@@Base+0xa0>
    1b04:	cmp	r0, #0
    1b08:	mov	r4, r0
    1b0c:	add	ip, sp, #32
    1b10:	beq	1ba0 <mstrcatf@@Base+0xc0>
    1b14:	mov	r1, #0
    1b18:	mov	r3, ip
    1b1c:	str	ip, [sp]
    1b20:	mov	r0, r1
    1b24:	mov	r2, r5
    1b28:	str	ip, [sp, #4]
    1b2c:	bl	fdc <vsnprintf@plt>
    1b30:	add	r7, r0, #1
    1b34:	mov	r0, r7
    1b38:	bl	f7c <o_malloc@plt>
    1b3c:	subs	r6, r0, #0
    1b40:	beq	1b80 <mstrcatf@@Base+0xa0>
    1b44:	mov	r2, r5
    1b48:	mov	r1, r7
    1b4c:	ldr	r3, [sp, #4]
    1b50:	bl	fdc <vsnprintf@plt>
    1b54:	ldr	r0, [pc, #132]	; 1be0 <mstrcatf@@Base+0x100>
    1b58:	mov	r2, r6
    1b5c:	mov	r1, r4
    1b60:	add	r0, pc, r0
    1b64:	bl	fac <msprintf@plt>
    1b68:	mov	r5, r0
    1b6c:	mov	r0, r6
    1b70:	bl	ea4 <o_free@plt>
    1b74:	mov	r0, r4
    1b78:	mov	r6, r5
    1b7c:	bl	ea4 <o_free@plt>
    1b80:	mov	r0, r6
    1b84:	add	sp, sp, #8
    1b88:	ldrd	r4, [sp]
    1b8c:	ldrd	r6, [sp, #8]
    1b90:	ldr	lr, [sp, #16]
    1b94:	add	sp, sp, #20
    1b98:	add	sp, sp, #12
    1b9c:	bx	lr
    1ba0:	mov	r1, r0
    1ba4:	mov	r3, ip
    1ba8:	str	ip, [sp]
    1bac:	mov	r2, r5
    1bb0:	str	ip, [sp, #4]
    1bb4:	bl	fdc <vsnprintf@plt>
    1bb8:	add	r4, r0, #1
    1bbc:	mov	r0, r4
    1bc0:	bl	f7c <o_malloc@plt>
    1bc4:	subs	r6, r0, #0
    1bc8:	beq	1b80 <mstrcatf@@Base+0xa0>
    1bcc:	mov	r2, r5
    1bd0:	mov	r1, r4
    1bd4:	ldr	r3, [sp, #4]
    1bd8:	bl	fdc <vsnprintf@plt>
    1bdc:	b	1b80 <mstrcatf@@Base+0xa0>
    1be0:	andeq	r1, r0, ip, lsr #4

00001be4 <o_strndup@@Base>:
    1be4:	strd	r4, [sp, #-16]!
    1be8:	subs	r5, r0, #0
    1bec:	str	r6, [sp, #8]
    1bf0:	moveq	r6, r5
    1bf4:	str	lr, [sp, #12]
    1bf8:	beq	1c24 <o_strndup@@Base+0x40>
    1bfc:	add	r0, r1, #1
    1c00:	mov	r4, r1
    1c04:	bl	f7c <o_malloc@plt>
    1c08:	subs	r6, r0, #0
    1c0c:	beq	1c24 <o_strndup@@Base+0x40>
    1c10:	mov	r1, r5
    1c14:	mov	r2, r4
    1c18:	bl	ebc <memcpy@plt>
    1c1c:	mov	r3, #0
    1c20:	strb	r3, [r6, r4]
    1c24:	mov	r0, r6
    1c28:	ldrd	r4, [sp]
    1c2c:	ldr	r6, [sp, #8]
    1c30:	add	sp, sp, #12
    1c34:	pop	{pc}		; (ldr pc, [sp], #4)

00001c38 <o_strdup@@Base>:
    1c38:	subs	r3, r0, #0
    1c3c:	bxeq	lr
    1c40:	str	r4, [sp, #-8]!
    1c44:	mov	r4, r3
    1c48:	str	lr, [sp, #4]
    1c4c:	bl	f4c <strlen@plt>
    1c50:	mov	r1, r0
    1c54:	mov	r0, r4
    1c58:	ldr	r4, [sp]
    1c5c:	ldr	lr, [sp, #4]
    1c60:	add	sp, sp, #8
    1c64:	b	e8c <o_strndup@plt>

00001c68 <str_replace@@Base>:
    1c68:	clz	r3, r2
    1c6c:	cmp	r1, #0
    1c70:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1c74:	lsr	r3, r3, #5
    1c78:	moveq	r3, #1
    1c7c:	cmp	r0, #0
    1c80:	moveq	r4, #1
    1c84:	strd	r6, [sp, #8]
    1c88:	movne	r4, r3
    1c8c:	strd	r8, [sp, #16]
    1c90:	cmp	r4, #0
    1c94:	str	sl, [sp, #24]
    1c98:	str	lr, [sp, #28]
    1c9c:	sub	sp, sp, #8
    1ca0:	bne	1d90 <str_replace@@Base+0x128>
    1ca4:	mov	r8, r1
    1ca8:	mov	r5, r0
    1cac:	mov	r6, r2
    1cb0:	bl	e44 <strstr@plt>
    1cb4:	cmp	r0, #0
    1cb8:	beq	1d98 <str_replace@@Base+0x130>
    1cbc:	sub	r7, r0, r5
    1cc0:	add	sl, r7, #1
    1cc4:	mov	r0, sl
    1cc8:	bl	f7c <o_malloc@plt>
    1ccc:	subs	r9, r0, #0
    1cd0:	beq	1d90 <str_replace@@Base+0x128>
    1cd4:	mov	r2, r7
    1cd8:	mov	r1, r5
    1cdc:	bl	ebc <memcpy@plt>
    1ce0:	mov	r0, r9
    1ce4:	strb	r4, [r9, r7]
    1ce8:	bl	f4c <strlen@plt>
    1cec:	mov	r7, r0
    1cf0:	mov	r0, r8
    1cf4:	bl	f4c <strlen@plt>
    1cf8:	add	r0, r7, r0
    1cfc:	mov	r1, r8
    1d00:	add	r0, r5, r0
    1d04:	mov	r2, r6
    1d08:	bl	1c68 <str_replace@@Base>
    1d0c:	subs	r7, r0, #0
    1d10:	beq	1dd8 <str_replace@@Base+0x170>
    1d14:	mov	r0, r6
    1d18:	bl	f4c <strlen@plt>
    1d1c:	mov	r5, r0
    1d20:	mov	r0, r7
    1d24:	bl	f4c <strlen@plt>
    1d28:	add	r5, r5, r0
    1d2c:	add	r5, r5, sl
    1d30:	mov	r0, r5
    1d34:	bl	f7c <o_malloc@plt>
    1d38:	subs	r8, r0, #0
    1d3c:	beq	1de8 <str_replace@@Base+0x180>
    1d40:	ldr	r2, [pc, #180]	; 1dfc <str_replace@@Base+0x194>
    1d44:	mov	r1, r5
    1d48:	mov	r3, r9
    1d4c:	strd	r6, [sp]
    1d50:	add	r2, pc, r2
    1d54:	bl	f70 <snprintf@plt>
    1d58:	cmp	r0, #0
    1d5c:	mov	r0, r9
    1d60:	blt	1dbc <str_replace@@Base+0x154>
    1d64:	bl	ea4 <o_free@plt>
    1d68:	mov	r0, r7
    1d6c:	bl	ea4 <o_free@plt>
    1d70:	mov	r0, r8
    1d74:	add	sp, sp, #8
    1d78:	ldrd	r4, [sp]
    1d7c:	ldrd	r6, [sp, #8]
    1d80:	ldrd	r8, [sp, #16]
    1d84:	ldr	sl, [sp, #24]
    1d88:	add	sp, sp, #28
    1d8c:	pop	{pc}		; (ldr pc, [sp], #4)
    1d90:	mov	r8, #0
    1d94:	b	1d70 <str_replace@@Base+0x108>
    1d98:	mov	r0, r5
    1d9c:	add	sp, sp, #8
    1da0:	ldrd	r4, [sp]
    1da4:	ldrd	r6, [sp, #8]
    1da8:	ldrd	r8, [sp, #16]
    1dac:	ldr	sl, [sp, #24]
    1db0:	ldr	lr, [sp, #28]
    1db4:	add	sp, sp, #32
    1db8:	b	ec8 <o_strdup@plt>
    1dbc:	bl	ea4 <o_free@plt>
    1dc0:	mov	r0, r7
    1dc4:	bl	ea4 <o_free@plt>
    1dc8:	mov	r0, r8
    1dcc:	mov	r8, r4
    1dd0:	bl	ea4 <o_free@plt>
    1dd4:	b	1d70 <str_replace@@Base+0x108>
    1dd8:	mov	r0, r9
    1ddc:	mov	r8, r7
    1de0:	bl	ea4 <o_free@plt>
    1de4:	b	1d70 <str_replace@@Base+0x108>
    1de8:	mov	r0, r9
    1dec:	bl	ea4 <o_free@plt>
    1df0:	mov	r0, r7
    1df4:	bl	ea4 <o_free@plt>
    1df8:	b	1d70 <str_replace@@Base+0x108>
    1dfc:	andeq	r1, r0, r4, asr #32

00001e00 <o_strcmp@@Base>:
    1e00:	orrs	ip, r0, r1
    1e04:	mov	r2, r1
    1e08:	beq	1e34 <o_strcmp@@Base+0x34>
    1e0c:	adds	ip, r0, #0
    1e10:	movne	ip, #1
    1e14:	cmp	r1, #0
    1e18:	moveq	r2, ip
    1e1c:	movne	r2, #0
    1e20:	cmp	r2, #0
    1e24:	bne	1e44 <o_strcmp@@Base+0x44>
    1e28:	cmp	r0, #0
    1e2c:	beq	1e3c <o_strcmp@@Base+0x3c>
    1e30:	b	e74 <strcmp@plt>
    1e34:	mov	r0, ip
    1e38:	bx	lr
    1e3c:	mov	r0, #1
    1e40:	bx	lr
    1e44:	mvn	r0, #0
    1e48:	bx	lr

00001e4c <o_strncmp@@Base>:
    1e4c:	orrs	r3, r0, r1
    1e50:	moveq	r3, #1
    1e54:	movne	r3, #0
    1e58:	cmp	r2, #0
    1e5c:	moveq	r3, #1
    1e60:	cmp	r3, #0
    1e64:	beq	1e70 <o_strncmp@@Base+0x24>
    1e68:	mov	r0, #0
    1e6c:	bx	lr
    1e70:	adds	r3, r0, #0
    1e74:	push	{lr}		; (str lr, [sp, #-4]!)
    1e78:	mov	lr, r1
    1e7c:	movne	r3, #1
    1e80:	cmp	r1, #0
    1e84:	moveq	lr, r3
    1e88:	movne	lr, #0
    1e8c:	cmp	lr, #0
    1e90:	bne	1eac <o_strncmp@@Base+0x60>
    1e94:	cmp	r0, #0
    1e98:	beq	1ea4 <o_strncmp@@Base+0x58>
    1e9c:	pop	{lr}		; (ldr lr, [sp], #4)
    1ea0:	b	ff4 <strncmp@plt>
    1ea4:	mov	r0, #1
    1ea8:	pop	{pc}		; (ldr pc, [sp], #4)
    1eac:	mvn	r0, #0
    1eb0:	b	1ea8 <o_strncmp@@Base+0x5c>

00001eb4 <o_strcpy@@Base>:
    1eb4:	cmp	r1, #0
    1eb8:	cmpne	r0, #0
    1ebc:	beq	1ec4 <o_strcpy@@Base+0x10>
    1ec0:	b	f04 <strcpy@plt>
    1ec4:	mov	r0, #0
    1ec8:	bx	lr

00001ecc <o_strncpy@@Base>:
    1ecc:	cmp	r1, #0
    1ed0:	cmpne	r0, #0
    1ed4:	beq	1edc <o_strncpy@@Base+0x10>
    1ed8:	b	f94 <strncpy@plt>
    1edc:	mov	r0, #0
    1ee0:	bx	lr

00001ee4 <o_strcasecmp@@Base>:
    1ee4:	orrs	ip, r0, r1
    1ee8:	beq	1f28 <o_strcasecmp@@Base+0x44>
    1eec:	adds	ip, r0, #0
    1ef0:	movne	ip, #1
    1ef4:	cmp	r1, #0
    1ef8:	movne	ip, #0
    1efc:	cmp	ip, #0
    1f00:	bne	1f30 <o_strcasecmp@@Base+0x4c>
    1f04:	adds	r3, r1, #0
    1f08:	movne	r3, #1
    1f0c:	cmp	r0, #0
    1f10:	movne	r3, #0
    1f14:	cmp	r3, #0
    1f18:	beq	1f24 <o_strcasecmp@@Base+0x40>
    1f1c:	mov	r0, #1
    1f20:	bx	lr
    1f24:	b	ee0 <strcasecmp@plt>
    1f28:	mov	r0, ip
    1f2c:	bx	lr
    1f30:	mvn	r0, #0
    1f34:	bx	lr

00001f38 <o_strncasecmp@@Base>:
    1f38:	orrs	ip, r0, r1
    1f3c:	moveq	ip, #1
    1f40:	movne	ip, #0
    1f44:	cmp	r2, #0
    1f48:	moveq	ip, #1
    1f4c:	cmp	ip, #0
    1f50:	beq	1f5c <o_strncasecmp@@Base+0x24>
    1f54:	mov	r0, #0
    1f58:	bx	lr
    1f5c:	adds	ip, r0, #0
    1f60:	push	{lr}		; (str lr, [sp, #-4]!)
    1f64:	mov	lr, r0
    1f68:	movne	ip, #1
    1f6c:	cmp	r1, #0
    1f70:	movne	ip, #0
    1f74:	cmp	ip, #0
    1f78:	bne	1fa4 <o_strncasecmp@@Base+0x6c>
    1f7c:	adds	r3, r1, #0
    1f80:	movne	r3, #1
    1f84:	cmp	r0, #0
    1f88:	movne	r3, #0
    1f8c:	cmp	r3, #0
    1f90:	bne	1f9c <o_strncasecmp@@Base+0x64>
    1f94:	pop	{lr}		; (ldr lr, [sp], #4)
    1f98:	b	f64 <strncasecmp@plt>
    1f9c:	mov	r0, #1
    1fa0:	pop	{pc}		; (ldr pc, [sp], #4)
    1fa4:	mvn	r0, #0
    1fa8:	b	1fa0 <o_strncasecmp@@Base+0x68>

00001fac <o_strstr@@Base>:
    1fac:	cmp	r1, #0
    1fb0:	cmpne	r0, #0
    1fb4:	beq	1fbc <o_strstr@@Base+0x10>
    1fb8:	b	e44 <strstr@plt>
    1fbc:	mov	r0, #0
    1fc0:	bx	lr

00001fc4 <o_strchr@@Base>:
    1fc4:	cmp	r0, #0
    1fc8:	beq	1fd0 <o_strchr@@Base+0xc>
    1fcc:	b	f58 <strchr@plt>
    1fd0:	bx	lr

00001fd4 <o_strrchr@@Base>:
    1fd4:	cmp	r0, #0
    1fd8:	beq	1fe0 <o_strrchr@@Base+0xc>
    1fdc:	b	fc4 <strrchr@plt>
    1fe0:	bx	lr

00001fe4 <o_strnstr@@Base>:
    1fe4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1fe8:	clz	r4, r1
    1fec:	cmp	r0, #0
    1ff0:	lsr	r4, r4, #5
    1ff4:	moveq	r5, #1
    1ff8:	strd	r6, [sp, #8]
    1ffc:	strd	r8, [sp, #16]
    2000:	movne	r5, r4
    2004:	str	sl, [sp, #24]
    2008:	cmp	r5, #0
    200c:	str	lr, [sp, #28]
    2010:	bne	209c <o_strnstr@@Base+0xb8>
    2014:	mov	r4, r0
    2018:	mov	r0, r1
    201c:	mov	r7, r1
    2020:	mov	r6, r2
    2024:	bl	f4c <strlen@plt>
    2028:	subs	r8, r0, #0
    202c:	beq	2080 <o_strnstr@@Base+0x9c>
    2030:	subs	r6, r6, r8
    2034:	bmi	20a4 <o_strnstr@@Base+0xc0>
    2038:	ldrb	r9, [r7]
    203c:	sub	r5, r4, #1
    2040:	rsb	sl, r4, #1
    2044:	b	2054 <o_strnstr@@Base+0x70>
    2048:	add	r3, sl, r5
    204c:	cmp	r6, r3
    2050:	blt	209c <o_strnstr@@Base+0xb8>
    2054:	add	r5, r5, #1
    2058:	ldrb	r3, [r5]
    205c:	mov	r4, r5
    2060:	cmp	r3, r9
    2064:	bne	2048 <o_strnstr@@Base+0x64>
    2068:	mov	r2, r8
    206c:	mov	r1, r7
    2070:	mov	r0, r5
    2074:	bl	ff4 <strncmp@plt>
    2078:	cmp	r0, #0
    207c:	bne	2048 <o_strnstr@@Base+0x64>
    2080:	mov	r0, r4
    2084:	ldrd	r4, [sp]
    2088:	ldrd	r6, [sp, #8]
    208c:	ldrd	r8, [sp, #16]
    2090:	ldr	sl, [sp, #24]
    2094:	add	sp, sp, #28
    2098:	pop	{pc}		; (ldr pc, [sp], #4)
    209c:	mov	r4, #0
    20a0:	b	2080 <o_strnstr@@Base+0x9c>
    20a4:	mov	r4, r5
    20a8:	b	2080 <o_strnstr@@Base+0x9c>

000020ac <o_strcasestr@@Base>:
    20ac:	cmp	r1, #0
    20b0:	cmpne	r0, #0
    20b4:	beq	20bc <o_strcasestr@@Base+0x10>
    20b8:	b	e68 <strcasestr@plt>
    20bc:	mov	r0, #0
    20c0:	bx	lr

000020c4 <o_strlen@@Base>:
    20c4:	cmp	r0, #0
    20c8:	beq	20d0 <o_strlen@@Base+0xc>
    20cc:	b	f4c <strlen@plt>
    20d0:	bx	lr

000020d4 <o_strnchr@@Base>:
    20d4:	cmp	r0, #0
    20d8:	cmpne	r1, #0
    20dc:	beq	2148 <o_strnchr@@Base+0x74>
    20e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    20e4:	mov	r5, r0
    20e8:	mov	r4, #0
    20ec:	strd	r6, [sp, #8]
    20f0:	mov	r7, r1
    20f4:	mov	r6, r2
    20f8:	str	r8, [sp, #16]
    20fc:	str	lr, [sp, #20]
    2100:	b	211c <o_strnchr@@Base+0x48>
    2104:	ldrb	r3, [r5, r4]
    2108:	add	r4, r4, #1
    210c:	cmp	r3, r6
    2110:	beq	2134 <o_strnchr@@Base+0x60>
    2114:	cmp	r7, r4
    2118:	bls	2130 <o_strnchr@@Base+0x5c>
    211c:	mov	r0, r5
    2120:	bl	f10 <o_strlen@plt>
    2124:	cmp	r0, r4
    2128:	add	r0, r5, r4
    212c:	bhi	2104 <o_strnchr@@Base+0x30>
    2130:	mov	r0, #0
    2134:	ldrd	r4, [sp]
    2138:	ldrd	r6, [sp, #8]
    213c:	ldr	r8, [sp, #16]
    2140:	add	sp, sp, #20
    2144:	pop	{pc}		; (ldr pc, [sp], #4)
    2148:	mov	r0, #0
    214c:	bx	lr

00002150 <o_strrnchr@@Base>:
    2150:	cmp	r0, #0
    2154:	cmpne	r1, #0
    2158:	beq	21d4 <o_strrnchr@@Base+0x84>
    215c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2160:	mov	r5, r0
    2164:	strd	r6, [sp, #8]
    2168:	mov	r6, r1
    216c:	mov	r7, r2
    2170:	str	r8, [sp, #16]
    2174:	str	lr, [sp, #20]
    2178:	bl	f10 <o_strlen@plt>
    217c:	subs	r4, r0, #1
    2180:	bpl	21a0 <o_strrnchr@@Base+0x50>
    2184:	b	21bc <o_strrnchr@@Base+0x6c>
    2188:	ldrb	r3, [r5, r4]
    218c:	sub	r4, r4, #1
    2190:	cmp	r3, r7
    2194:	beq	21c0 <o_strrnchr@@Base+0x70>
    2198:	cmn	r4, #1
    219c:	beq	21bc <o_strrnchr@@Base+0x6c>
    21a0:	mov	r0, r5
    21a4:	bl	f10 <o_strlen@plt>
    21a8:	sub	r3, r0, #1
    21ac:	add	r0, r5, r4
    21b0:	sub	r3, r3, r4
    21b4:	cmp	r3, r6
    21b8:	bcc	2188 <o_strrnchr@@Base+0x38>
    21bc:	mov	r0, #0
    21c0:	ldrd	r4, [sp]
    21c4:	ldrd	r6, [sp, #8]
    21c8:	ldr	r8, [sp, #16]
    21cc:	add	sp, sp, #20
    21d0:	pop	{pc}		; (ldr pc, [sp], #4)
    21d4:	mov	r0, #0
    21d8:	bx	lr

000021dc <split_string@@Base>:
    21dc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    21e0:	adds	r4, r1, #0
    21e4:	movne	r4, #1
    21e8:	cmp	r0, #0
    21ec:	strd	r6, [sp, #8]
    21f0:	moveq	r4, #0
    21f4:	strd	r8, [sp, #16]
    21f8:	cmp	r4, #0
    21fc:	strd	sl, [sp, #24]
    2200:	str	lr, [sp, #32]
    2204:	sub	sp, sp, #12
    2208:	beq	22f8 <split_string@@Base+0x11c>
    220c:	cmp	r2, #0
    2210:	mov	r9, r2
    2214:	mov	r7, r1
    2218:	beq	2340 <split_string@@Base+0x164>
    221c:	mov	fp, #0
    2220:	mov	r5, r0
    2224:	str	fp, [r2]
    2228:	bl	e44 <strstr@plt>
    222c:	subs	r8, r0, #0
    2230:	moveq	fp, r8
    2234:	moveq	r4, #1
    2238:	beq	22b4 <split_string@@Base+0xd8>
    223c:	mov	r4, #1
    2240:	add	r4, r4, #1
    2244:	mov	r0, fp
    2248:	lsl	sl, r4, #2
    224c:	sub	r3, sl, #8
    2250:	mov	r1, sl
    2254:	str	r3, [sp, #4]
    2258:	bl	f28 <o_realloc@plt>
    225c:	mov	r6, r0
    2260:	sub	r1, r8, r5
    2264:	cmp	r6, #0
    2268:	mov	r0, r5
    226c:	mov	fp, r6
    2270:	str	r6, [r9]
    2274:	beq	2318 <split_string@@Base+0x13c>
    2278:	bl	e8c <o_strndup@plt>
    227c:	ldr	fp, [r9]
    2280:	sub	r3, sl, #8
    2284:	mov	r2, #0
    2288:	str	r0, [r6, r3]
    228c:	mov	r0, r7
    2290:	add	r3, fp, sl
    2294:	str	r2, [r3, #-4]
    2298:	bl	f4c <strlen@plt>
    229c:	add	r5, r8, r0
    22a0:	mov	r1, r7
    22a4:	mov	r0, r5
    22a8:	bl	e44 <strstr@plt>
    22ac:	subs	r8, r0, #0
    22b0:	bne	2240 <split_string@@Base+0x64>
    22b4:	add	r6, r4, #1
    22b8:	mov	r0, fp
    22bc:	lsl	r6, r6, #2
    22c0:	mov	r1, r6
    22c4:	bl	f28 <o_realloc@plt>
    22c8:	cmp	r0, #0
    22cc:	mov	r7, r0
    22d0:	str	r0, [r9]
    22d4:	beq	22f8 <split_string@@Base+0x11c>
    22d8:	mov	r0, r5
    22dc:	sub	r5, r6, #8
    22e0:	bl	ec8 <o_strdup@plt>
    22e4:	ldr	r3, [r9]
    22e8:	mov	r2, #0
    22ec:	str	r0, [r7, r5]
    22f0:	add	r6, r3, r6
    22f4:	str	r2, [r6, #-4]
    22f8:	mov	r0, r4
    22fc:	add	sp, sp, #12
    2300:	ldrd	r4, [sp]
    2304:	ldrd	r6, [sp, #8]
    2308:	ldrd	r8, [sp, #16]
    230c:	ldrd	sl, [sp, #24]
    2310:	add	sp, sp, #32
    2314:	pop	{pc}		; (ldr pc, [sp], #4)
    2318:	mov	r0, r7
    231c:	bl	f4c <strlen@plt>
    2320:	add	r5, r8, r0
    2324:	mov	r1, r7
    2328:	mov	r0, r5
    232c:	bl	e44 <strstr@plt>
    2330:	subs	r8, r0, #0
    2334:	bne	2240 <split_string@@Base+0x64>
    2338:	mov	fp, r8
    233c:	b	22b4 <split_string@@Base+0xd8>
    2340:	bl	e44 <strstr@plt>
    2344:	subs	r5, r0, #0
    2348:	mov	r4, #1
    234c:	beq	22f8 <split_string@@Base+0x11c>
    2350:	mov	r0, r7
    2354:	add	r4, r4, #1
    2358:	bl	f4c <strlen@plt>
    235c:	add	r0, r5, r0
    2360:	mov	r1, r7
    2364:	bl	e44 <strstr@plt>
    2368:	subs	r5, r0, #0
    236c:	bne	2350 <split_string@@Base+0x174>
    2370:	b	22f8 <split_string@@Base+0x11c>

00002374 <free_string_array@@Base>:
    2374:	strd	r4, [sp, #-16]!
    2378:	str	r6, [sp, #8]
    237c:	subs	r6, r0, #0
    2380:	str	lr, [sp, #12]
    2384:	beq	23c8 <free_string_array@@Base+0x54>
    2388:	ldr	r0, [r6]
    238c:	cmp	r0, #0
    2390:	beq	23b0 <free_string_array@@Base+0x3c>
    2394:	mov	r4, r6
    2398:	mov	r5, #0
    239c:	bl	ea4 <o_free@plt>
    23a0:	str	r5, [r4]
    23a4:	ldr	r0, [r4, #4]!
    23a8:	cmp	r0, #0
    23ac:	bne	239c <free_string_array@@Base+0x28>
    23b0:	mov	r0, r6
    23b4:	ldrd	r4, [sp]
    23b8:	ldr	r6, [sp, #8]
    23bc:	ldr	lr, [sp, #12]
    23c0:	add	sp, sp, #16
    23c4:	b	ea4 <o_free@plt>
    23c8:	ldrd	r4, [sp]
    23cc:	ldr	r6, [sp, #8]
    23d0:	add	sp, sp, #12
    23d4:	pop	{pc}		; (ldr pc, [sp], #4)

000023d8 <string_array_size@@Base>:
    23d8:	cmp	r0, #0
    23dc:	beq	240c <string_array_size@@Base+0x34>
    23e0:	ldr	r3, [r0]
    23e4:	cmp	r3, #0
    23e8:	beq	2408 <string_array_size@@Base+0x30>
    23ec:	mov	r3, r0
    23f0:	mov	r0, #0
    23f4:	ldr	r2, [r3, #4]!
    23f8:	add	r0, r0, #1
    23fc:	cmp	r2, #0
    2400:	bne	23f4 <string_array_size@@Base+0x1c>
    2404:	bx	lr
    2408:	mov	r0, r3
    240c:	bx	lr

00002410 <string_array_join@@Base>:
    2410:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2414:	strd	r6, [sp, #8]
    2418:	adds	r6, r1, #0
    241c:	movne	r6, #1
    2420:	cmp	r0, #0
    2424:	str	r8, [sp, #16]
    2428:	moveq	r6, #0
    242c:	str	lr, [sp, #20]
    2430:	cmp	r6, #0
    2434:	beq	24ac <string_array_join@@Base+0x9c>
    2438:	ldr	ip, [r0]
    243c:	cmp	ip, #0
    2440:	beq	24c4 <string_array_join@@Base+0xb4>
    2444:	ldr	r8, [pc, #128]	; 24cc <string_array_join@@Base+0xbc>
    2448:	mov	r7, r1
    244c:	mov	r5, r0
    2450:	mov	r4, #0
    2454:	add	r8, pc, r8
    2458:	b	247c <string_array_join@@Base+0x6c>
    245c:	bl	fac <msprintf@plt>
    2460:	mov	r6, r0
    2464:	mov	r0, r4
    2468:	bl	ea4 <o_free@plt>
    246c:	ldr	ip, [r5, #4]!
    2470:	cmp	ip, #0
    2474:	beq	24ac <string_array_join@@Base+0x9c>
    2478:	mov	r4, r6
    247c:	cmp	r4, #0
    2480:	mov	r3, ip
    2484:	mov	r1, r4
    2488:	mov	r2, r7
    248c:	mov	r0, r8
    2490:	bne	245c <string_array_join@@Base+0x4c>
    2494:	mov	r0, ip
    2498:	bl	ec8 <o_strdup@plt>
    249c:	ldr	ip, [r5, #4]!
    24a0:	mov	r6, r0
    24a4:	cmp	ip, #0
    24a8:	bne	2478 <string_array_join@@Base+0x68>
    24ac:	mov	r0, r6
    24b0:	ldrd	r4, [sp]
    24b4:	ldrd	r6, [sp, #8]
    24b8:	ldr	r8, [sp, #16]
    24bc:	add	sp, sp, #20
    24c0:	pop	{pc}		; (ldr pc, [sp], #4)
    24c4:	mov	r6, ip
    24c8:	b	24ac <string_array_join@@Base+0x9c>
    24cc:	andeq	r0, r0, r0, asr #18

000024d0 <trimwhitespace@@Base>:
    24d0:	strd	r4, [sp, #-16]!
    24d4:	subs	r4, r0, #0
    24d8:	str	r6, [sp, #8]
    24dc:	str	lr, [sp, #12]
    24e0:	beq	2584 <trimwhitespace@@Base+0xb4>
    24e4:	ldrb	r5, [r4]
    24e8:	cmp	r5, #0
    24ec:	beq	2584 <trimwhitespace@@Base+0xb4>
    24f0:	bl	f40 <__ctype_b_loc@plt>
    24f4:	ldr	r2, [r0]
    24f8:	lsl	r5, r5, #1
    24fc:	mov	r6, r0
    2500:	ldrh	r3, [r2, r5]
    2504:	tst	r3, #8192	; 0x2000
    2508:	beq	2520 <trimwhitespace@@Base+0x50>
    250c:	ldrb	r3, [r4, #1]!
    2510:	lsl	r3, r3, #1
    2514:	ldrh	r3, [r2, r3]
    2518:	tst	r3, #8192	; 0x2000
    251c:	bne	250c <trimwhitespace@@Base+0x3c>
    2520:	mov	r0, r4
    2524:	bl	f10 <o_strlen@plt>
    2528:	sub	r0, r0, #1
    252c:	add	r1, r4, r0
    2530:	cmp	r1, r4
    2534:	bls	257c <trimwhitespace@@Base+0xac>
    2538:	ldrb	r3, [r4, r0]
    253c:	ldr	r0, [r6]
    2540:	lsl	r3, r3, #1
    2544:	ldrh	r3, [r0, r3]
    2548:	tst	r3, #8192	; 0x2000
    254c:	beq	257c <trimwhitespace@@Base+0xac>
    2550:	sub	r3, r1, #1
    2554:	b	2570 <trimwhitespace@@Base+0xa0>
    2558:	ldrb	r2, [r3]
    255c:	sub	r3, r3, #1
    2560:	lsl	r2, r2, #1
    2564:	ldrh	r2, [r0, r2]
    2568:	tst	r2, #8192	; 0x2000
    256c:	beq	257c <trimwhitespace@@Base+0xac>
    2570:	cmp	r4, r3
    2574:	mov	r1, r3
    2578:	bne	2558 <trimwhitespace@@Base+0x88>
    257c:	mov	r3, #0
    2580:	strb	r3, [r1, #1]
    2584:	mov	r0, r4
    2588:	ldrd	r4, [sp]
    258c:	ldr	r6, [sp, #8]
    2590:	add	sp, sp, #12
    2594:	pop	{pc}		; (ldr pc, [sp], #4)

00002598 <trimcharacter@@Base>:
    2598:	strd	r4, [sp, #-16]!
    259c:	subs	r4, r0, #0
    25a0:	str	r6, [sp, #8]
    25a4:	str	lr, [sp, #12]
    25a8:	beq	2620 <trimcharacter@@Base+0x88>
    25ac:	ldrb	r3, [r4]
    25b0:	cmp	r3, #0
    25b4:	beq	2620 <trimcharacter@@Base+0x88>
    25b8:	cmp	r3, r1
    25bc:	mov	r5, r1
    25c0:	bne	25d0 <trimcharacter@@Base+0x38>
    25c4:	ldrb	r3, [r4, #1]!
    25c8:	cmp	r3, r5
    25cc:	beq	25c4 <trimcharacter@@Base+0x2c>
    25d0:	mov	r0, r4
    25d4:	bl	f10 <o_strlen@plt>
    25d8:	sub	r0, r0, #1
    25dc:	add	r2, r4, r0
    25e0:	cmp	r2, r4
    25e4:	bls	2618 <trimcharacter@@Base+0x80>
    25e8:	ldrb	r3, [r4, r0]
    25ec:	cmp	r3, r5
    25f0:	bne	2618 <trimcharacter@@Base+0x80>
    25f4:	sub	r3, r2, #1
    25f8:	b	260c <trimcharacter@@Base+0x74>
    25fc:	ldrb	r1, [r3]
    2600:	sub	r3, r3, #1
    2604:	cmp	r1, r5
    2608:	bne	2618 <trimcharacter@@Base+0x80>
    260c:	cmp	r3, r4
    2610:	mov	r2, r3
    2614:	bne	25fc <trimcharacter@@Base+0x64>
    2618:	mov	r3, #0
    261c:	strb	r3, [r2, #1]
    2620:	mov	r0, r4
    2624:	ldrd	r4, [sp]
    2628:	ldr	r6, [sp, #8]
    262c:	add	sp, sp, #12
    2630:	pop	{pc}		; (ldr pc, [sp], #4)

00002634 <string_array_has_value@@Base>:
    2634:	cmp	r0, #0
    2638:	cmpne	r1, #0
    263c:	beq	26a8 <string_array_has_value@@Base+0x74>
    2640:	strd	r4, [sp, #-16]!
    2644:	mov	r4, r0
    2648:	ldr	r0, [r0]
    264c:	str	r6, [sp, #8]
    2650:	str	lr, [sp, #12]
    2654:	cmp	r0, #0
    2658:	beq	2694 <string_array_has_value@@Base+0x60>
    265c:	mov	r5, r1
    2660:	b	2670 <string_array_has_value@@Base+0x3c>
    2664:	ldr	r0, [r4, #4]!
    2668:	cmp	r0, #0
    266c:	beq	2694 <string_array_has_value@@Base+0x60>
    2670:	mov	r1, r5
    2674:	bl	eec <o_strcmp@plt>
    2678:	cmp	r0, #0
    267c:	bne	2664 <string_array_has_value@@Base+0x30>
    2680:	ldrd	r4, [sp]
    2684:	mov	r0, #1
    2688:	ldr	r6, [sp, #8]
    268c:	add	sp, sp, #12
    2690:	pop	{pc}		; (ldr pc, [sp], #4)
    2694:	ldrd	r4, [sp]
    2698:	mov	r0, #0
    269c:	ldr	r6, [sp, #8]
    26a0:	add	sp, sp, #12
    26a4:	pop	{pc}		; (ldr pc, [sp], #4)
    26a8:	mov	r0, #0
    26ac:	bx	lr

000026b0 <string_array_has_value_case@@Base>:
    26b0:	cmp	r0, #0
    26b4:	cmpne	r1, #0
    26b8:	beq	2724 <string_array_has_value_case@@Base+0x74>
    26bc:	strd	r4, [sp, #-16]!
    26c0:	mov	r4, r0
    26c4:	ldr	r0, [r0]
    26c8:	str	r6, [sp, #8]
    26cc:	str	lr, [sp, #12]
    26d0:	cmp	r0, #0
    26d4:	beq	2710 <string_array_has_value_case@@Base+0x60>
    26d8:	mov	r5, r1
    26dc:	b	26ec <string_array_has_value_case@@Base+0x3c>
    26e0:	ldr	r0, [r4, #4]!
    26e4:	cmp	r0, #0
    26e8:	beq	2710 <string_array_has_value_case@@Base+0x60>
    26ec:	mov	r1, r5
    26f0:	bl	f1c <o_strcasecmp@plt>
    26f4:	cmp	r0, #0
    26f8:	bne	26e0 <string_array_has_value_case@@Base+0x30>
    26fc:	ldrd	r4, [sp]
    2700:	mov	r0, #1
    2704:	ldr	r6, [sp, #8]
    2708:	add	sp, sp, #12
    270c:	pop	{pc}		; (ldr pc, [sp], #4)
    2710:	ldrd	r4, [sp]
    2714:	mov	r0, #0
    2718:	ldr	r6, [sp, #8]
    271c:	add	sp, sp, #12
    2720:	pop	{pc}		; (ldr pc, [sp], #4)
    2724:	mov	r0, #0
    2728:	bx	lr

0000272c <string_array_has_value_n@@Base>:
    272c:	cmp	r0, #0
    2730:	cmpne	r1, #0
    2734:	beq	27a8 <string_array_has_value_n@@Base+0x7c>
    2738:	strd	r4, [sp, #-16]!
    273c:	mov	r4, r0
    2740:	ldr	r0, [r0]
    2744:	str	r6, [sp, #8]
    2748:	str	lr, [sp, #12]
    274c:	cmp	r0, #0
    2750:	beq	2794 <string_array_has_value_n@@Base+0x68>
    2754:	mov	r6, r1
    2758:	mov	r5, r2
    275c:	b	276c <string_array_has_value_n@@Base+0x40>
    2760:	ldr	r0, [r4, #4]!
    2764:	cmp	r0, #0
    2768:	beq	2794 <string_array_has_value_n@@Base+0x68>
    276c:	mov	r2, r5
    2770:	mov	r1, r6
    2774:	bl	fe8 <o_strncmp@plt>
    2778:	cmp	r0, #0
    277c:	bne	2760 <string_array_has_value_n@@Base+0x34>
    2780:	ldrd	r4, [sp]
    2784:	mov	r0, #1
    2788:	ldr	r6, [sp, #8]
    278c:	add	sp, sp, #12
    2790:	pop	{pc}		; (ldr pc, [sp], #4)
    2794:	ldrd	r4, [sp]
    2798:	mov	r0, #0
    279c:	ldr	r6, [sp, #8]
    27a0:	add	sp, sp, #12
    27a4:	pop	{pc}		; (ldr pc, [sp], #4)
    27a8:	mov	r0, #0
    27ac:	bx	lr

000027b0 <string_array_has_value_ncase@@Base>:
    27b0:	cmp	r0, #0
    27b4:	cmpne	r1, #0
    27b8:	beq	282c <string_array_has_value_ncase@@Base+0x7c>
    27bc:	strd	r4, [sp, #-16]!
    27c0:	mov	r4, r0
    27c4:	ldr	r0, [r0]
    27c8:	str	r6, [sp, #8]
    27cc:	str	lr, [sp, #12]
    27d0:	cmp	r0, #0
    27d4:	beq	2818 <string_array_has_value_ncase@@Base+0x68>
    27d8:	mov	r6, r1
    27dc:	mov	r5, r2
    27e0:	b	27f0 <string_array_has_value_ncase@@Base+0x40>
    27e4:	ldr	r0, [r4, #4]!
    27e8:	cmp	r0, #0
    27ec:	beq	2818 <string_array_has_value_ncase@@Base+0x68>
    27f0:	mov	r2, r5
    27f4:	mov	r1, r6
    27f8:	bl	e5c <o_strncasecmp@plt>
    27fc:	cmp	r0, #0
    2800:	bne	27e4 <string_array_has_value_ncase@@Base+0x34>
    2804:	ldrd	r4, [sp]
    2808:	mov	r0, #1
    280c:	ldr	r6, [sp, #8]
    2810:	add	sp, sp, #12
    2814:	pop	{pc}		; (ldr pc, [sp], #4)
    2818:	ldrd	r4, [sp]
    281c:	mov	r0, #0
    2820:	ldr	r6, [sp, #8]
    2824:	add	sp, sp, #12
    2828:	pop	{pc}		; (ldr pc, [sp], #4)
    282c:	mov	r0, #0
    2830:	bx	lr

00002834 <string_array_has_trimmed_value@@Base>:
    2834:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2838:	adds	r4, r1, #0
    283c:	movne	r4, #1
    2840:	cmp	r0, #0
    2844:	strd	r6, [sp, #8]
    2848:	moveq	r4, #0
    284c:	str	r8, [sp, #16]
    2850:	cmp	r4, #0
    2854:	str	lr, [sp, #20]
    2858:	bne	2874 <string_array_has_trimmed_value@@Base+0x40>
    285c:	mov	r0, r4
    2860:	ldrd	r4, [sp]
    2864:	ldrd	r6, [sp, #8]
    2868:	ldr	r8, [sp, #16]
    286c:	add	sp, sp, #20
    2870:	pop	{pc}		; (ldr pc, [sp], #4)
    2874:	mov	r5, r0
    2878:	mov	r0, r1
    287c:	bl	ec8 <o_strdup@plt>
    2880:	subs	r8, r0, #0
    2884:	beq	28d8 <string_array_has_trimmed_value@@Base+0xa4>
    2888:	bl	ef8 <trimwhitespace@plt>
    288c:	mov	r7, r0
    2890:	ldr	r0, [r5]
    2894:	cmp	r0, #0
    2898:	bne	28cc <string_array_has_trimmed_value@@Base+0x98>
    289c:	b	28d8 <string_array_has_trimmed_value@@Base+0xa4>
    28a0:	bl	ef8 <trimwhitespace@plt>
    28a4:	mov	r1, r7
    28a8:	bl	eec <o_strcmp@plt>
    28ac:	mov	r4, r0
    28b0:	mov	r0, r6
    28b4:	bl	ea4 <o_free@plt>
    28b8:	ldr	r0, [r5, #4]!
    28bc:	cmp	r0, #0
    28c0:	beq	28e8 <string_array_has_trimmed_value@@Base+0xb4>
    28c4:	cmp	r4, #0
    28c8:	beq	28f4 <string_array_has_trimmed_value@@Base+0xc0>
    28cc:	bl	ec8 <o_strdup@plt>
    28d0:	subs	r6, r0, #0
    28d4:	bne	28a0 <string_array_has_trimmed_value@@Base+0x6c>
    28d8:	mov	r4, #0
    28dc:	mov	r0, r8
    28e0:	bl	ea4 <o_free@plt>
    28e4:	b	285c <string_array_has_trimmed_value@@Base+0x28>
    28e8:	clz	r4, r4
    28ec:	lsr	r4, r4, #5
    28f0:	b	28dc <string_array_has_trimmed_value@@Base+0xa8>
    28f4:	mov	r4, #1
    28f8:	b	28dc <string_array_has_trimmed_value@@Base+0xa8>

000028fc <pointer_list_init@@Base>:
    28fc:	cmp	r0, #0
    2900:	beq	2910 <pointer_list_init@@Base+0x14>
    2904:	mov	r3, #0
    2908:	str	r3, [r0]
    290c:	str	r3, [r0, #4]
    2910:	bx	lr

00002914 <pointer_list_size@@Base>:
    2914:	cmp	r0, #0
    2918:	ldrne	r0, [r0]
    291c:	bx	lr

00002920 <pointer_list_append@@Base>:
    2920:	strd	r4, [sp, #-16]!
    2924:	subs	r4, r0, #0
    2928:	moveq	r0, r4
    292c:	str	r6, [sp, #8]
    2930:	str	lr, [sp, #12]
    2934:	beq	2974 <pointer_list_append@@Base+0x54>
    2938:	ldr	r3, [r4]
    293c:	mov	r6, r1
    2940:	ldr	r0, [r4, #4]
    2944:	add	r3, r3, #1
    2948:	lsl	r1, r3, #2
    294c:	bl	f28 <o_realloc@plt>
    2950:	cmp	r0, #0
    2954:	mov	r5, r0
    2958:	str	r0, [r4, #4]
    295c:	beq	2984 <pointer_list_append@@Base+0x64>
    2960:	ldr	r3, [r4]
    2964:	mov	r0, #1
    2968:	add	r2, r3, r0
    296c:	str	r6, [r5, r3, lsl #2]
    2970:	str	r2, [r4]
    2974:	ldrd	r4, [sp]
    2978:	ldr	r6, [sp, #8]
    297c:	add	sp, sp, #12
    2980:	pop	{pc}		; (ldr pc, [sp], #4)
    2984:	bl	ea4 <o_free@plt>
    2988:	mov	r0, r5
    298c:	str	r5, [r4, #4]
    2990:	ldrd	r4, [sp]
    2994:	ldr	r6, [sp, #8]
    2998:	add	sp, sp, #12
    299c:	pop	{pc}		; (ldr pc, [sp], #4)

000029a0 <pointer_list_get_at@@Base>:
    29a0:	cmp	r0, #0
    29a4:	beq	29c4 <pointer_list_get_at@@Base+0x24>
    29a8:	ldr	r3, [r0]
    29ac:	cmp	r3, r1
    29b0:	bls	29c0 <pointer_list_get_at@@Base+0x20>
    29b4:	ldr	r3, [r0, #4]
    29b8:	ldr	r0, [r3, r1, lsl #2]
    29bc:	bx	lr
    29c0:	mov	r0, #0
    29c4:	bx	lr

000029c8 <pointer_list_remove_at@@Base>:
    29c8:	strd	r4, [sp, #-16]!
    29cc:	subs	r4, r0, #0
    29d0:	str	r6, [sp, #8]
    29d4:	str	lr, [sp, #12]
    29d8:	beq	2a54 <pointer_list_remove_at@@Base+0x8c>
    29dc:	ldr	r5, [r4]
    29e0:	cmp	r5, r1
    29e4:	bls	2a54 <pointer_list_remove_at@@Base+0x8c>
    29e8:	sub	lr, r5, #1
    29ec:	cmp	r1, lr
    29f0:	addcc	r1, r1, #1
    29f4:	lslcc	r2, r1, #2
    29f8:	bcs	2a18 <pointer_list_remove_at@@Base+0x50>
    29fc:	ldr	r3, [r4, #4]
    2a00:	cmp	r1, lr
    2a04:	add	r1, r1, #1
    2a08:	ldr	ip, [r3, r2]!
    2a0c:	add	r2, r2, #4
    2a10:	str	ip, [r3, #-4]
    2a14:	bne	29fc <pointer_list_remove_at@@Base+0x34>
    2a18:	cmp	r5, #1
    2a1c:	ldr	r0, [r4, #4]
    2a20:	bls	2a68 <pointer_list_remove_at@@Base+0xa0>
    2a24:	sub	r1, r5, #-1073741823	; 0xc0000001
    2a28:	lsl	r1, r1, #2
    2a2c:	bl	f28 <o_realloc@plt>
    2a30:	str	r0, [r4, #4]
    2a34:	ldr	r3, [r4]
    2a38:	mov	r0, #1
    2a3c:	ldr	r6, [sp, #8]
    2a40:	sub	r3, r3, #1
    2a44:	str	r3, [r4]
    2a48:	ldrd	r4, [sp]
    2a4c:	add	sp, sp, #12
    2a50:	pop	{pc}		; (ldr pc, [sp], #4)
    2a54:	ldrd	r4, [sp]
    2a58:	mov	r0, #0
    2a5c:	ldr	r6, [sp, #8]
    2a60:	add	sp, sp, #12
    2a64:	pop	{pc}		; (ldr pc, [sp], #4)
    2a68:	bl	ea4 <o_free@plt>
    2a6c:	mov	r3, #0
    2a70:	str	r3, [r4, #4]
    2a74:	b	2a34 <pointer_list_remove_at@@Base+0x6c>

00002a78 <pointer_list_clean@@Base>:
    2a78:	strd	r4, [sp, #-16]!
    2a7c:	subs	r5, r0, #0
    2a80:	str	r6, [sp, #8]
    2a84:	str	lr, [sp, #12]
    2a88:	beq	2ab0 <pointer_list_clean@@Base+0x38>
    2a8c:	bl	fa0 <pointer_list_size@plt>
    2a90:	subs	r4, r0, #0
    2a94:	beq	2ab0 <pointer_list_clean@@Base+0x38>
    2a98:	sub	r4, r4, #1
    2a9c:	mov	r0, r5
    2aa0:	mov	r1, r4
    2aa4:	bl	eb0 <pointer_list_remove_at@plt>
    2aa8:	cmp	r4, #0
    2aac:	bne	2a98 <pointer_list_clean@@Base+0x20>
    2ab0:	ldrd	r4, [sp]
    2ab4:	ldr	r6, [sp, #8]
    2ab8:	add	sp, sp, #12
    2abc:	pop	{pc}		; (ldr pc, [sp], #4)

00002ac0 <pointer_list_clean_free@@Base>:
    2ac0:	strd	r4, [sp, #-16]!
    2ac4:	subs	r5, r0, #0
    2ac8:	str	r6, [sp, #8]
    2acc:	str	lr, [sp, #12]
    2ad0:	beq	2b0c <pointer_list_clean_free@@Base+0x4c>
    2ad4:	mov	r6, r1
    2ad8:	bl	fa0 <pointer_list_size@plt>
    2adc:	subs	r4, r0, #0
    2ae0:	beq	2b0c <pointer_list_clean_free@@Base+0x4c>
    2ae4:	sub	r4, r4, #1
    2ae8:	mov	r0, r5
    2aec:	mov	r1, r4
    2af0:	bl	e50 <pointer_list_get_at@plt>
    2af4:	blx	r6
    2af8:	mov	r1, r4
    2afc:	mov	r0, r5
    2b00:	bl	eb0 <pointer_list_remove_at@plt>
    2b04:	cmp	r4, #0
    2b08:	bne	2ae4 <pointer_list_clean_free@@Base+0x24>
    2b0c:	ldrd	r4, [sp]
    2b10:	ldr	r6, [sp, #8]
    2b14:	add	sp, sp, #12
    2b18:	pop	{pc}		; (ldr pc, [sp], #4)

00002b1c <pointer_list_remove_at_free@@Base>:
    2b1c:	subs	r3, r0, #0
    2b20:	beq	2b80 <pointer_list_remove_at_free@@Base+0x64>
    2b24:	strd	r4, [sp, #-16]!
    2b28:	mov	r5, r1
    2b2c:	str	r6, [sp, #8]
    2b30:	str	lr, [sp, #12]
    2b34:	ldr	lr, [r3]
    2b38:	cmp	lr, r1
    2b3c:	bhi	2b54 <pointer_list_remove_at_free@@Base+0x38>
    2b40:	ldrd	r4, [sp]
    2b44:	mov	r0, #0
    2b48:	ldr	r6, [sp, #8]
    2b4c:	add	sp, sp, #12
    2b50:	pop	{pc}		; (ldr pc, [sp], #4)
    2b54:	mov	r4, r3
    2b58:	mov	r6, r2
    2b5c:	bl	e50 <pointer_list_get_at@plt>
    2b60:	blx	r6
    2b64:	mov	r1, r5
    2b68:	mov	r0, r4
    2b6c:	ldrd	r4, [sp]
    2b70:	ldr	r6, [sp, #8]
    2b74:	ldr	lr, [sp, #12]
    2b78:	add	sp, sp, #16
    2b7c:	b	eb0 <pointer_list_remove_at@plt>
    2b80:	mov	r0, #0
    2b84:	bx	lr

00002b88 <pointer_list_insert_at@@Base>:
    2b88:	strd	r4, [sp, #-16]!
    2b8c:	subs	r4, r0, #0
    2b90:	str	r6, [sp, #8]
    2b94:	str	lr, [sp, #12]
    2b98:	beq	2ba8 <pointer_list_insert_at@@Base+0x20>
    2b9c:	ldr	r3, [r4]
    2ba0:	cmp	r3, r2
    2ba4:	bcs	2bbc <pointer_list_insert_at@@Base+0x34>
    2ba8:	ldrd	r4, [sp]
    2bac:	mov	r0, #0
    2bb0:	ldr	r6, [sp, #8]
    2bb4:	add	sp, sp, #12
    2bb8:	pop	{pc}		; (ldr pc, [sp], #4)
    2bbc:	mov	r6, r1
    2bc0:	add	r1, r3, #1
    2bc4:	ldr	r0, [r4, #4]
    2bc8:	lsl	r1, r1, #2
    2bcc:	mov	r5, r2
    2bd0:	bl	f28 <o_realloc@plt>
    2bd4:	cmp	r0, #0
    2bd8:	mov	r2, r0
    2bdc:	str	r0, [r4, #4]
    2be0:	beq	2ba8 <pointer_list_insert_at@@Base+0x20>
    2be4:	ldr	r1, [r4]
    2be8:	cmp	r5, r1
    2bec:	bcs	2c34 <pointer_list_insert_at@@Base+0xac>
    2bf0:	sub	r0, r1, #-1073741823	; 0xc0000001
    2bf4:	sub	r3, r1, #1
    2bf8:	ldr	ip, [r2, r0, lsl #2]
    2bfc:	add	r2, r2, r0, lsl #2
    2c00:	cmp	r3, r5
    2c04:	str	ip, [r2, #4]
    2c08:	subhi	ip, r1, #-1073741822	; 0xc0000002
    2c0c:	lslhi	ip, ip, #2
    2c10:	bls	2c30 <pointer_list_insert_at@@Base+0xa8>
    2c14:	ldr	r0, [r4, #4]
    2c18:	ldr	r2, [r0, ip]
    2c1c:	sub	ip, ip, #4
    2c20:	str	r2, [r0, r3, lsl #2]
    2c24:	sub	r3, r3, #1
    2c28:	cmp	r5, r3
    2c2c:	bne	2c14 <pointer_list_insert_at@@Base+0x8c>
    2c30:	ldr	r2, [r4, #4]
    2c34:	add	r1, r1, #1
    2c38:	str	r6, [r2, r5, lsl #2]
    2c3c:	mov	r0, #1
    2c40:	ldr	r6, [sp, #8]
    2c44:	str	r1, [r4]
    2c48:	ldrd	r4, [sp]
    2c4c:	add	sp, sp, #12
    2c50:	pop	{pc}		; (ldr pc, [sp], #4)

00002c54 <pointer_list_remove_pointer@@Base>:
    2c54:	cmp	r0, #0
    2c58:	beq	2cb4 <pointer_list_remove_pointer@@Base+0x60>
    2c5c:	push	{lr}		; (str lr, [sp, #-4]!)
    2c60:	ldr	lr, [r0]
    2c64:	cmp	lr, #0
    2c68:	beq	2c9c <pointer_list_remove_pointer@@Base+0x48>
    2c6c:	ldr	r2, [r0, #4]
    2c70:	ldr	r3, [r2]
    2c74:	cmp	r1, r3
    2c78:	movne	r3, #0
    2c7c:	bne	2c90 <pointer_list_remove_pointer@@Base+0x3c>
    2c80:	b	2ca4 <pointer_list_remove_pointer@@Base+0x50>
    2c84:	ldr	ip, [r2, #4]!
    2c88:	cmp	ip, r1
    2c8c:	beq	2ca8 <pointer_list_remove_pointer@@Base+0x54>
    2c90:	add	r3, r3, #1
    2c94:	cmp	r3, lr
    2c98:	bne	2c84 <pointer_list_remove_pointer@@Base+0x30>
    2c9c:	mov	r0, #0
    2ca0:	pop	{pc}		; (ldr pc, [sp], #4)
    2ca4:	mov	r3, #0
    2ca8:	mov	r1, r3
    2cac:	pop	{lr}		; (ldr lr, [sp], #4)
    2cb0:	b	eb0 <pointer_list_remove_at@plt>
    2cb4:	mov	r0, #0
    2cb8:	bx	lr

00002cbc <pointer_list_remove_pointer_free@@Base>:
    2cbc:	strd	r4, [sp, #-16]!
    2cc0:	subs	r5, r0, #0
    2cc4:	str	r6, [sp, #8]
    2cc8:	str	lr, [sp, #12]
    2ccc:	beq	2d0c <pointer_list_remove_pointer_free@@Base+0x50>
    2cd0:	ldr	lr, [r5]
    2cd4:	cmp	lr, #0
    2cd8:	beq	2d0c <pointer_list_remove_pointer_free@@Base+0x50>
    2cdc:	ldr	r3, [r5, #4]
    2ce0:	ldr	r0, [r3]
    2ce4:	cmp	r1, r0
    2ce8:	movne	r4, #0
    2cec:	bne	2d00 <pointer_list_remove_pointer_free@@Base+0x44>
    2cf0:	b	2d20 <pointer_list_remove_pointer_free@@Base+0x64>
    2cf4:	ldr	ip, [r3, #4]!
    2cf8:	cmp	ip, r1
    2cfc:	beq	2d24 <pointer_list_remove_pointer_free@@Base+0x68>
    2d00:	add	r4, r4, #1
    2d04:	cmp	r4, lr
    2d08:	bne	2cf4 <pointer_list_remove_pointer_free@@Base+0x38>
    2d0c:	ldrd	r4, [sp]
    2d10:	mov	r0, #0
    2d14:	ldr	r6, [sp, #8]
    2d18:	add	sp, sp, #12
    2d1c:	pop	{pc}		; (ldr pc, [sp], #4)
    2d20:	mov	r4, #0
    2d24:	mov	r0, r1
    2d28:	blx	r2
    2d2c:	mov	r1, r4
    2d30:	mov	r0, r5
    2d34:	ldrd	r4, [sp]
    2d38:	ldr	r6, [sp, #8]
    2d3c:	ldr	lr, [sp, #12]
    2d40:	add	sp, sp, #16
    2d44:	b	eb0 <pointer_list_remove_at@plt>

Disassembly of section .fini:

00002d48 <.fini>:
    2d48:	push	{r3, lr}
    2d4c:	pop	{r3, pc}
