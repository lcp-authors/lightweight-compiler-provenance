
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010710 <.init>:
   10710:	push	{r3, lr}
   10714:	bl	10874 <sprintf@plt+0x48>
   10718:	pop	{r3, pc}

Disassembly of section .plt:

0001071c <open@plt-0x14>:
   1071c:	push	{lr}		; (str lr, [sp, #-4]!)
   10720:	ldr	lr, [pc, #4]	; 1072c <open@plt-0x4>
   10724:	add	lr, pc, lr
   10728:	ldr	pc, [lr, #8]!
   1072c:	ldrdeq	r1, [r1], -r4

00010730 <open@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001073c <abort@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2252]!	; 0x8cc

00010748 <srand@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2244]!	; 0x8c4

00010754 <__libc_start_main@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010760 <__gmon_start__@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001076c <getpass@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2220]!	; 0x8ac

00010778 <calloc@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2212]!	; 0x8a4

00010784 <free@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2204]!	; 0x89c

00010790 <read@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2196]!	; 0x894

0001079c <strlen@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2188]!	; 0x88c

000107a8 <getopt@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2180]!	; 0x884

000107b4 <printf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2172]!	; 0x87c

000107c0 <atoi@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2164]!	; 0x874

000107cc <fwrite@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2156]!	; 0x86c

000107d8 <time@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2148]!	; 0x864

000107e4 <strdup@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2140]!	; 0x85c

000107f0 <rb_crypt@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2132]!	; 0x854

000107fc <puts@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2124]!	; 0x84c

00010808 <rand@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2116]!	; 0x844

00010814 <strcmp@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2108]!	; 0x83c

00010820 <exit@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2100]!	; 0x834

0001082c <sprintf@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2092]!	; 0x82c

Disassembly of section .text:

00010838 <.text>:
   10838:	mov	fp, #0
   1083c:	mov	lr, #0
   10840:	pop	{r1}		; (ldr r1, [sp], #4)
   10844:	mov	r2, sp
   10848:	push	{r2}		; (str r2, [sp, #-4]!)
   1084c:	push	{r0}		; (str r0, [sp, #-4]!)
   10850:	ldr	ip, [pc, #16]	; 10868 <sprintf@plt+0x3c>
   10854:	push	{ip}		; (str ip, [sp, #-4]!)
   10858:	ldr	r0, [pc, #12]	; 1086c <sprintf@plt+0x40>
   1085c:	ldr	r3, [pc, #12]	; 10870 <sprintf@plt+0x44>
   10860:	bl	10754 <__libc_start_main@plt>
   10864:	bl	1073c <abort@plt>
   10868:	andeq	r1, r1, r8, lsr r0
   1086c:	andeq	r0, r1, r8, lsr #18
   10870:	ldrdeq	r0, [r1], -r8
   10874:	ldr	r3, [pc, #20]	; 10890 <sprintf@plt+0x64>
   10878:	ldr	r2, [pc, #20]	; 10894 <sprintf@plt+0x68>
   1087c:	add	r3, pc, r3
   10880:	ldr	r2, [r3, r2]
   10884:	cmp	r2, #0
   10888:	bxeq	lr
   1088c:	b	10760 <__gmon_start__@plt>
   10890:	andeq	r1, r1, ip, ror r7
   10894:	andeq	r0, r0, r4, rrx
   10898:	ldr	r0, [pc, #24]	; 108b8 <sprintf@plt+0x8c>
   1089c:	ldr	r3, [pc, #24]	; 108bc <sprintf@plt+0x90>
   108a0:	cmp	r3, r0
   108a4:	bxeq	lr
   108a8:	ldr	r3, [pc, #16]	; 108c0 <sprintf@plt+0x94>
   108ac:	cmp	r3, #0
   108b0:	bxeq	lr
   108b4:	bx	r3
   108b8:	andeq	r2, r2, r0, ror r0
   108bc:	andeq	r2, r2, r0, ror r0
   108c0:	andeq	r0, r0, r0
   108c4:	ldr	r0, [pc, #36]	; 108f0 <sprintf@plt+0xc4>
   108c8:	ldr	r1, [pc, #36]	; 108f4 <sprintf@plt+0xc8>
   108cc:	sub	r1, r1, r0
   108d0:	asr	r1, r1, #2
   108d4:	add	r1, r1, r1, lsr #31
   108d8:	asrs	r1, r1, #1
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <sprintf@plt+0xcc>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	andeq	r2, r2, r0, ror r0
   108f4:	andeq	r2, r2, r0, ror r0
   108f8:	andeq	r0, r0, r0
   108fc:	push	{r4, lr}
   10900:	ldr	r4, [pc, #24]	; 10920 <sprintf@plt+0xf4>
   10904:	ldrb	r3, [r4]
   10908:	cmp	r3, #0
   1090c:	popne	{r4, pc}
   10910:	bl	10898 <sprintf@plt+0x6c>
   10914:	mov	r3, #1
   10918:	strb	r3, [r4]
   1091c:	pop	{r4, pc}
   10920:	andeq	r2, r2, ip, ror r0
   10924:	b	108c4 <sprintf@plt+0x98>
   10928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1092c:	add	fp, sp, #28
   10930:	sub	sp, sp, #12
   10934:	movw	r7, #4168	; 0x1048
   10938:	movw	r9, #8312	; 0x2078
   1093c:	mov	r5, r0
   10940:	mov	r0, #0
   10944:	mov	r4, r1
   10948:	mov	r8, #0
   1094c:	mov	r6, #0
   10950:	mov	sl, #0
   10954:	movt	r7, #1
   10958:	movt	r9, #2
   1095c:	str	r0, [sp, #4]
   10960:	mov	r0, #0
   10964:	str	r0, [sp]
   10968:	mov	r0, r5
   1096c:	mov	r1, r4
   10970:	mov	r2, r7
   10974:	bl	107a8 <getopt@plt>
   10978:	mov	r1, r0
   1097c:	cmp	r0, #103	; 0x67
   10980:	ble	109f4 <sprintf@plt+0x1c8>
   10984:	sub	r0, r1, #104	; 0x68
   10988:	cmp	r0, #17
   1098c:	bhi	10a64 <sprintf@plt+0x238>
   10990:	add	r2, pc, #0
   10994:	ldr	pc, [r2, r0, lsl #2]
   10998:	andeq	r0, r1, r8, ror sp
   1099c:	andeq	r0, r1, r4, ror #20
   109a0:	andeq	r0, r1, r4, ror #20
   109a4:	andeq	r0, r1, r4, ror #20
   109a8:	andeq	r0, r1, r0, ror #19
   109ac:	andeq	r0, r1, r8, lsr sl
   109b0:	andeq	r0, r1, r4, ror #20
   109b4:	andeq	r0, r1, r4, ror #20
   109b8:	andeq	r0, r1, r8, lsr #20
   109bc:	andeq	r0, r1, r4, ror #20
   109c0:	andeq	r0, r1, r8, asr #20
   109c4:	andeq	r0, r1, r0, lsl sl
   109c8:	andeq	r0, r1, r4, ror #20
   109cc:	andeq	r0, r1, r4, ror #20
   109d0:	andeq	r0, r1, r4, ror #20
   109d4:	andeq	r0, r1, r4, ror #20
   109d8:	andeq	r0, r1, r0, asr #20
   109dc:	andeq	r0, r1, r0, lsr #20
   109e0:	ldr	r0, [r9]
   109e4:	orr	r8, r8, #8
   109e8:	bl	107c0 <atoi@plt>
   109ec:	mov	r6, r0
   109f0:	b	10968 <sprintf@plt+0x13c>
   109f4:	cmn	r1, #1
   109f8:	beq	10a74 <sprintf@plt+0x248>
   109fc:	cmp	r1, #98	; 0x62
   10a00:	bne	10a5c <sprintf@plt+0x230>
   10a04:	orr	r8, r8, #16
   10a08:	mov	sl, #4
   10a0c:	b	10968 <sprintf@plt+0x13c>
   10a10:	ldr	r0, [r9]
   10a14:	orr	r8, r8, #2
   10a18:	str	r0, [sp]
   10a1c:	b	10968 <sprintf@plt+0x13c>
   10a20:	orr	r8, r8, #128	; 0x80
   10a24:	b	10968 <sprintf@plt+0x13c>
   10a28:	ldr	r0, [r9]
   10a2c:	orr	r8, r8, #4
   10a30:	str	r0, [sp, #4]
   10a34:	b	10968 <sprintf@plt+0x13c>
   10a38:	orr	r8, r8, #1
   10a3c:	b	10968 <sprintf@plt+0x13c>
   10a40:	orr	r8, r8, #64	; 0x40
   10a44:	b	10968 <sprintf@plt+0x13c>
   10a48:	ldr	r0, [r9]
   10a4c:	orr	r8, r8, #32
   10a50:	bl	107c0 <atoi@plt>
   10a54:	mov	sl, r0
   10a58:	b	10968 <sprintf@plt+0x13c>
   10a5c:	cmp	r1, #63	; 0x3f
   10a60:	beq	10d74 <sprintf@plt+0x548>
   10a64:	movw	r0, #4183	; 0x1057
   10a68:	movt	r0, #1
   10a6c:	bl	107b4 <printf@plt>
   10a70:	b	10968 <sprintf@plt+0x13c>
   10a74:	tst	r8, #1
   10a78:	bne	10abc <sprintf@plt+0x290>
   10a7c:	tst	r8, #16
   10a80:	bne	10b04 <sprintf@plt+0x2d8>
   10a84:	cmp	r6, #0
   10a88:	and	r0, r8, #2
   10a8c:	movweq	r6, #16
   10a90:	tst	r8, #64	; 0x40
   10a94:	bne	10ba8 <sprintf@plt+0x37c>
   10a98:	cmp	r0, #0
   10a9c:	bne	10ccc <sprintf@plt+0x4a0>
   10aa0:	cmp	r6, #17
   10aa4:	bge	10db4 <sprintf@plt+0x588>
   10aa8:	movw	r7, #8422	; 0x20e6
   10aac:	mov	r4, #36	; 0x24
   10ab0:	movw	r0, #13860	; 0x3624
   10ab4:	movt	r7, #2
   10ab8:	b	10ae4 <sprintf@plt+0x2b8>
   10abc:	cmp	r6, #0
   10ac0:	movweq	r6, #8
   10ac4:	tst	r8, #2
   10ac8:	bne	10b6c <sprintf@plt+0x340>
   10acc:	cmp	r6, #17
   10ad0:	bge	10d88 <sprintf@plt+0x55c>
   10ad4:	movw	r7, #8338	; 0x2092
   10ad8:	mov	r4, #36	; 0x24
   10adc:	movw	r0, #12580	; 0x3124
   10ae0:	movt	r7, #2
   10ae4:	strb	r4, [r7, #2]
   10ae8:	strh	r0, [r7]
   10aec:	add	r0, r7, #3
   10af0:	mov	r1, r6
   10af4:	bl	10ed8 <sprintf@plt+0x6ac>
   10af8:	add	r0, r6, r7
   10afc:	strh	r4, [r0, #3]
   10b00:	b	10c20 <sprintf@plt+0x3f4>
   10b04:	cmp	r6, #0
   10b08:	movweq	r6, #22
   10b0c:	tst	r8, #2
   10b10:	bne	10bcc <sprintf@plt+0x3a0>
   10b14:	cmp	r6, #23
   10b18:	bge	10da8 <sprintf@plt+0x57c>
   10b1c:	movw	r1, #4396	; 0x112c
   10b20:	add	r4, sp, #9
   10b24:	mov	r2, sl
   10b28:	movt	r1, #1
   10b2c:	mov	r0, r4
   10b30:	bl	1082c <sprintf@plt>
   10b34:	movw	r7, #8474	; 0x211a
   10b38:	movw	r1, #4412	; 0x113c
   10b3c:	mov	r2, r4
   10b40:	movt	r7, #2
   10b44:	movt	r1, #1
   10b48:	mov	r0, r7
   10b4c:	bl	1082c <sprintf@plt>
   10b50:	add	r0, r7, #7
   10b54:	mov	r1, r6
   10b58:	bl	10ed8 <sprintf@plt+0x6ac>
   10b5c:	add	r0, r6, r7
   10b60:	mov	r1, #36	; 0x24
   10b64:	strh	r1, [r0, #7]
   10b68:	b	10c20 <sprintf@plt+0x3f4>
   10b6c:	ldr	r4, [sp]
   10b70:	cmp	r4, #0
   10b74:	beq	10d7c <sprintf@plt+0x550>
   10b78:	mov	r0, r4
   10b7c:	bl	1079c <strlen@plt>
   10b80:	cmp	r0, #17
   10b84:	bcs	10d7c <sprintf@plt+0x550>
   10b88:	movw	r7, #8317	; 0x207d
   10b8c:	movw	r1, #4298	; 0x10ca
   10b90:	movt	r7, #2
   10b94:	movt	r1, #1
   10b98:	mov	r0, r7
   10b9c:	mov	r2, r4
   10ba0:	bl	1082c <sprintf@plt>
   10ba4:	b	10c20 <sprintf@plt+0x3f4>
   10ba8:	cmp	r0, #0
   10bac:	bne	10cfc <sprintf@plt+0x4d0>
   10bb0:	cmp	r6, #17
   10bb4:	bge	10dc0 <sprintf@plt+0x594>
   10bb8:	movw	r7, #8401	; 0x20d1
   10bbc:	mov	r4, #36	; 0x24
   10bc0:	movw	r0, #13604	; 0x3524
   10bc4:	movt	r7, #2
   10bc8:	b	10ae4 <sprintf@plt+0x2b8>
   10bcc:	ldr	r5, [sp]
   10bd0:	cmp	r5, #0
   10bd4:	beq	10d94 <sprintf@plt+0x568>
   10bd8:	mov	r0, r5
   10bdc:	bl	1079c <strlen@plt>
   10be0:	cmp	r0, #23
   10be4:	bcs	10d94 <sprintf@plt+0x568>
   10be8:	movw	r1, #4396	; 0x112c
   10bec:	add	r4, sp, #9
   10bf0:	mov	r2, sl
   10bf4:	movt	r1, #1
   10bf8:	mov	r0, r4
   10bfc:	bl	1082c <sprintf@plt>
   10c00:	movw	r7, #8443	; 0x20fb
   10c04:	movw	r1, #4401	; 0x1131
   10c08:	mov	r2, r4
   10c0c:	mov	r3, r5
   10c10:	movt	r7, #2
   10c14:	movt	r1, #1
   10c18:	mov	r0, r7
   10c1c:	bl	1082c <sprintf@plt>
   10c20:	tst	r8, #4
   10c24:	bne	10c9c <sprintf@plt+0x470>
   10c28:	movw	r0, #4235	; 0x108b
   10c2c:	movt	r0, #1
   10c30:	bl	1076c <getpass@plt>
   10c34:	mov	r1, r7
   10c38:	bl	107f0 <rb_crypt@plt>
   10c3c:	cmp	r0, #0
   10c40:	beq	10d2c <sprintf@plt+0x500>
   10c44:	bl	107e4 <strdup@plt>
   10c48:	mov	r4, r0
   10c4c:	movw	r0, #4266	; 0x10aa
   10c50:	movt	r0, #1
   10c54:	bl	1076c <getpass@plt>
   10c58:	mov	r1, r7
   10c5c:	bl	107f0 <rb_crypt@plt>
   10c60:	cmp	r0, #0
   10c64:	beq	10d2c <sprintf@plt+0x500>
   10c68:	mov	r1, r0
   10c6c:	mov	r0, r4
   10c70:	bl	10814 <strcmp@plt>
   10c74:	cmp	r0, #0
   10c78:	beq	10cb4 <sprintf@plt+0x488>
   10c7c:	movw	r0, #8304	; 0x2070
   10c80:	mov	r4, #1
   10c84:	mov	r1, #23
   10c88:	movt	r0, #2
   10c8c:	ldr	r3, [r0]
   10c90:	movw	r0, #4274	; 0x10b2
   10c94:	movt	r0, #1
   10c98:	b	10d68 <sprintf@plt+0x53c>
   10c9c:	ldr	r0, [sp, #4]
   10ca0:	cmp	r0, #0
   10ca4:	beq	10d4c <sprintf@plt+0x520>
   10ca8:	mov	r1, r7
   10cac:	bl	107f0 <rb_crypt@plt>
   10cb0:	mov	r4, r0
   10cb4:	mov	r0, r4
   10cb8:	bl	107fc <puts@plt>
   10cbc:	mov	r4, #0
   10cc0:	mov	r0, r4
   10cc4:	sub	sp, fp, #28
   10cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ccc:	ldr	r4, [sp]
   10cd0:	cmp	r4, #0
   10cd4:	beq	10d7c <sprintf@plt+0x550>
   10cd8:	mov	r0, r4
   10cdc:	bl	1079c <strlen@plt>
   10ce0:	cmp	r0, #17
   10ce4:	bcs	10d7c <sprintf@plt+0x550>
   10ce8:	movw	r7, #8380	; 0x20bc
   10cec:	movw	r1, #4389	; 0x1125
   10cf0:	movt	r7, #2
   10cf4:	movt	r1, #1
   10cf8:	b	10b98 <sprintf@plt+0x36c>
   10cfc:	ldr	r4, [sp]
   10d00:	cmp	r4, #0
   10d04:	beq	10d7c <sprintf@plt+0x550>
   10d08:	mov	r0, r4
   10d0c:	bl	1079c <strlen@plt>
   10d10:	cmp	r0, #17
   10d14:	bcs	10d7c <sprintf@plt+0x550>
   10d18:	movw	r7, #8359	; 0x20a7
   10d1c:	movw	r1, #4382	; 0x111e
   10d20:	movt	r7, #2
   10d24:	movt	r1, #1
   10d28:	b	10b98 <sprintf@plt+0x36c>
   10d2c:	movw	r0, #8304	; 0x2070
   10d30:	mov	r4, #1
   10d34:	mov	r1, #18
   10d38:	movt	r0, #2
   10d3c:	ldr	r3, [r0]
   10d40:	movw	r0, #4247	; 0x1097
   10d44:	movt	r0, #1
   10d48:	b	10d68 <sprintf@plt+0x53c>
   10d4c:	movw	r0, #8304	; 0x2070
   10d50:	mov	r4, #1
   10d54:	mov	r1, #30
   10d58:	movt	r0, #2
   10d5c:	ldr	r3, [r0]
   10d60:	movw	r0, #4204	; 0x106c
   10d64:	movt	r0, #1
   10d68:	mov	r2, #1
   10d6c:	bl	107cc <fwrite@plt>
   10d70:	b	10cc0 <sprintf@plt+0x494>
   10d74:	bl	10e74 <sprintf@plt+0x648>
   10d78:	bl	10dd4 <sprintf@plt+0x5a8>
   10d7c:	movw	r0, #5419	; 0x152b
   10d80:	movt	r0, #1
   10d84:	b	10d9c <sprintf@plt+0x570>
   10d88:	movw	r0, #5271	; 0x1497
   10d8c:	movt	r0, #1
   10d90:	b	10dc8 <sprintf@plt+0x59c>
   10d94:	movw	r0, #5296	; 0x14b0
   10d98:	movt	r0, #1
   10d9c:	bl	107fc <puts@plt>
   10da0:	mov	r0, #1
   10da4:	bl	10820 <exit@plt>
   10da8:	movw	r0, #5361	; 0x14f1
   10dac:	movt	r0, #1
   10db0:	b	10dc8 <sprintf@plt+0x59c>
   10db4:	movw	r0, #5484	; 0x156c
   10db8:	movt	r0, #1
   10dbc:	b	10dc8 <sprintf@plt+0x59c>
   10dc0:	movw	r0, #5391	; 0x150f
   10dc4:	movt	r0, #1
   10dc8:	bl	107fc <puts@plt>
   10dcc:	mov	r0, #0
   10dd0:	bl	10820 <exit@plt>
   10dd4:	push	{fp, lr}
   10dd8:	mov	fp, sp
   10ddc:	movw	r0, #4420	; 0x1144
   10de0:	movt	r0, #1
   10de4:	bl	107fc <puts@plt>
   10de8:	movw	r0, #4496	; 0x1190
   10dec:	movt	r0, #1
   10df0:	bl	107fc <puts@plt>
   10df4:	movw	r0, #4526	; 0x11ae
   10df8:	movt	r0, #1
   10dfc:	bl	107fc <puts@plt>
   10e00:	movw	r0, #4556	; 0x11cc
   10e04:	movt	r0, #1
   10e08:	bl	107fc <puts@plt>
   10e0c:	movw	r0, #4584	; 0x11e8
   10e10:	movt	r0, #1
   10e14:	bl	107fc <puts@plt>
   10e18:	movw	r0, #4616	; 0x1208
   10e1c:	movt	r0, #1
   10e20:	bl	107fc <puts@plt>
   10e24:	movw	r0, #4670	; 0x123e
   10e28:	movt	r0, #1
   10e2c:	bl	107fc <puts@plt>
   10e30:	movw	r0, #4724	; 0x1274
   10e34:	movt	r0, #1
   10e38:	bl	107fc <puts@plt>
   10e3c:	movw	r0, #4765	; 0x129d
   10e40:	movt	r0, #1
   10e44:	bl	107fc <puts@plt>
   10e48:	movw	r0, #4821	; 0x12d5
   10e4c:	movt	r0, #1
   10e50:	bl	107fc <puts@plt>
   10e54:	movw	r0, #4846	; 0x12ee
   10e58:	movt	r0, #1
   10e5c:	bl	107fc <puts@plt>
   10e60:	movw	r0, #4885	; 0x1315
   10e64:	movt	r0, #1
   10e68:	bl	107fc <puts@plt>
   10e6c:	mov	r0, #0
   10e70:	bl	10820 <exit@plt>
   10e74:	push	{fp, lr}
   10e78:	mov	fp, sp
   10e7c:	movw	r0, #4921	; 0x1339
   10e80:	movt	r0, #1
   10e84:	bl	107fc <puts@plt>
   10e88:	movw	r0, #4956	; 0x135c
   10e8c:	movt	r0, #1
   10e90:	bl	107fc <puts@plt>
   10e94:	movw	r0, #5022	; 0x139e
   10e98:	movt	r0, #1
   10e9c:	bl	107fc <puts@plt>
   10ea0:	movw	r0, #5086	; 0x13de
   10ea4:	movt	r0, #1
   10ea8:	bl	107fc <puts@plt>
   10eac:	movw	r0, #5150	; 0x141e
   10eb0:	movt	r0, #1
   10eb4:	bl	107fc <puts@plt>
   10eb8:	movw	r0, #5211	; 0x145b
   10ebc:	movt	r0, #1
   10ec0:	bl	107fc <puts@plt>
   10ec4:	movw	r0, #5249	; 0x1481
   10ec8:	movt	r0, #1
   10ecc:	bl	107fc <puts@plt>
   10ed0:	mov	r0, #0
   10ed4:	bl	10820 <exit@plt>
   10ed8:	push	{r4, r5, r6, r7, fp, lr}
   10edc:	add	fp, sp, #16
   10ee0:	mov	r5, r0
   10ee4:	movw	r0, #4305	; 0x10d1
   10ee8:	mov	r4, r1
   10eec:	mov	r1, #0
   10ef0:	movt	r0, #1
   10ef4:	bl	10730 <open@plt>
   10ef8:	cmn	r0, #1
   10efc:	ble	10f6c <sprintf@plt+0x740>
   10f00:	mov	r7, r0
   10f04:	mov	r0, #1
   10f08:	mov	r1, r4
   10f0c:	bl	10778 <calloc@plt>
   10f10:	mov	r6, r0
   10f14:	mov	r0, r7
   10f18:	mov	r2, r4
   10f1c:	mov	r1, r6
   10f20:	bl	10790 <read@plt>
   10f24:	cmp	r0, r4
   10f28:	bne	10f64 <sprintf@plt+0x738>
   10f2c:	cmp	r4, #1
   10f30:	blt	10f58 <sprintf@plt+0x72c>
   10f34:	movw	r0, #4317	; 0x10dd
   10f38:	mov	r1, r6
   10f3c:	movt	r0, #1
   10f40:	ldrb	r2, [r1], #1
   10f44:	subs	r4, r4, #1
   10f48:	and	r2, r2, #63	; 0x3f
   10f4c:	ldrb	r2, [r0, r2]
   10f50:	strb	r2, [r5], #1
   10f54:	bne	10f40 <sprintf@plt+0x714>
   10f58:	mov	r0, r6
   10f5c:	pop	{r4, r5, r6, r7, fp, lr}
   10f60:	b	10784 <free@plt>
   10f64:	mov	r0, r6
   10f68:	bl	10784 <free@plt>
   10f6c:	mov	r0, r5
   10f70:	mov	r1, r4
   10f74:	pop	{r4, r5, r6, r7, fp, lr}
   10f78:	b	10f7c <sprintf@plt+0x750>
   10f7c:	push	{r4, r5, r6, r7, fp, lr}
   10f80:	add	fp, sp, #16
   10f84:	mov	r4, r0
   10f88:	mov	r0, #0
   10f8c:	mov	r5, r1
   10f90:	bl	107d8 <time@plt>
   10f94:	bl	10748 <srand@plt>
   10f98:	cmp	r5, #1
   10f9c:	blt	10fd0 <sprintf@plt+0x7a4>
   10fa0:	movw	r6, #4317	; 0x10dd
   10fa4:	mov	r7, r4
   10fa8:	movt	r6, #1
   10fac:	bl	10808 <rand@plt>
   10fb0:	asr	r1, r0, #31
   10fb4:	subs	r5, r5, #1
   10fb8:	add	r1, r0, r1, lsr #26
   10fbc:	bic	r1, r1, #63	; 0x3f
   10fc0:	sub	r0, r0, r1
   10fc4:	ldrb	r0, [r6, r0]
   10fc8:	strb	r0, [r7], #1
   10fcc:	bne	10fac <sprintf@plt+0x780>
   10fd0:	mov	r0, r4
   10fd4:	pop	{r4, r5, r6, r7, fp, pc}
   10fd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fdc:	mov	r7, r0
   10fe0:	ldr	r6, [pc, #72]	; 11030 <sprintf@plt+0x804>
   10fe4:	ldr	r5, [pc, #72]	; 11034 <sprintf@plt+0x808>
   10fe8:	add	r6, pc, r6
   10fec:	add	r5, pc, r5
   10ff0:	sub	r6, r6, r5
   10ff4:	mov	r8, r1
   10ff8:	mov	r9, r2
   10ffc:	bl	10710 <open@plt-0x20>
   11000:	asrs	r6, r6, #2
   11004:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11008:	mov	r4, #0
   1100c:	add	r4, r4, #1
   11010:	ldr	r3, [r5], #4
   11014:	mov	r2, r9
   11018:	mov	r1, r8
   1101c:	mov	r0, r7
   11020:	blx	r3
   11024:	cmp	r6, r4
   11028:	bne	1100c <sprintf@plt+0x7e0>
   1102c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11030:	andeq	r0, r1, r4, lsl #30
   11034:	strdeq	r0, [r1], -ip
   11038:	bx	lr

Disassembly of section .fini:

0001103c <.fini>:
   1103c:	push	{r3, lr}
   11040:	pop	{r3, pc}
