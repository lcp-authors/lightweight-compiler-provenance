
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	11054 <rb_base64_encode@plt+0x48>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <open@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <open@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r4, r1, ip, asr r2

00010da8 <open@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <sigemptyset@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <strerror@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <rb_get_type@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <abort@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <rb_event_addish@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <rb_ignore_errno@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <__libc_start_main@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <rb_setselect@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <__gmon_start__@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <rb_send_fd_buf@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <vsnprintf@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <getenv@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <calloc@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <rb_set_nb@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <memset@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <rb_linebuf_parse@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <rb_strlcpy@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <rb_init_rawbuffers@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <free@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <rb_lib_loop@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <rb_read@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <rb_set_type@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <rb_linebuf_get@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <rb_linebuf_flush@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <strlen@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <memcpy@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <rb_linebuf_donebuf@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <rb_strcasestr@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <rb_close@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <sigaddset@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <atoi@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <rb_rawbuf_length@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <rb_free_rawbuffer@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <close@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

00010f4c <fwrite@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #324]!	; 0x144

00010f58 <rb_outofmemory@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #316]!	; 0x13c

00010f64 <rb_rawbuf_get@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #308]!	; 0x134

00010f70 <sigaction@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #300]!	; 0x12c

00010f7c <rb_lib_init@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #292]!	; 0x124

00010f88 <rb_new_rawbuffer@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #284]!	; 0x11c

00010f94 <rb_open@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #276]!	; 0x114

00010fa0 <rb_recv_fd_buf@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #268]!	; 0x10c

00010fac <dup2@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #260]!	; 0x104

00010fb8 <rb_linebuf_newbuf@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #252]!	; 0xfc

00010fc4 <rb_linebuf_init@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #244]!	; 0xf4

00010fd0 <getrlimit@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #236]!	; 0xec

00010fdc <rb_rawbuf_append@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #228]!	; 0xe4

00010fe8 <rb_rawbuf_flush@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #220]!	; 0xdc

00010ff4 <exit@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #212]!	; 0xd4

00011000 <__errno_location@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #204]!	; 0xcc

0001100c <rb_base64_encode@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #196]!	; 0xc4

Disassembly of section .text:

00011018 <.text>:
   11018:	mov	fp, #0
   1101c:	mov	lr, #0
   11020:	pop	{r1}		; (ldr r1, [sp], #4)
   11024:	mov	r2, sp
   11028:	push	{r2}		; (str r2, [sp, #-4]!)
   1102c:	push	{r0}		; (str r0, [sp, #-4]!)
   11030:	ldr	ip, [pc, #16]	; 11048 <rb_base64_encode@plt+0x3c>
   11034:	push	{ip}		; (str ip, [sp, #-4]!)
   11038:	ldr	r0, [pc, #12]	; 1104c <rb_base64_encode@plt+0x40>
   1103c:	ldr	r3, [pc, #12]	; 11050 <rb_base64_encode@plt+0x44>
   11040:	bl	10dfc <__libc_start_main@plt>
   11044:	bl	10dd8 <abort@plt>
   11048:	andeq	r3, r1, r0, asr #27
   1104c:	andeq	r1, r1, r8, lsl #2
   11050:	andeq	r3, r1, r0, ror #26
   11054:	ldr	r3, [pc, #20]	; 11070 <rb_base64_encode@plt+0x64>
   11058:	ldr	r2, [pc, #20]	; 11074 <rb_base64_encode@plt+0x68>
   1105c:	add	r3, pc, r3
   11060:	ldr	r2, [r3, r2]
   11064:	cmp	r2, #0
   11068:	bxeq	lr
   1106c:	b	10e14 <__gmon_start__@plt>
   11070:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11074:	ldrdeq	r0, [r0], -ip
   11078:	ldr	r0, [pc, #24]	; 11098 <rb_base64_encode@plt+0x8c>
   1107c:	ldr	r3, [pc, #24]	; 1109c <rb_base64_encode@plt+0x90>
   11080:	cmp	r3, r0
   11084:	bxeq	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <rb_base64_encode@plt+0x94>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	andeq	r5, r2, r8, ror #1
   1109c:	andeq	r5, r2, r8, ror #1
   110a0:	andeq	r0, r0, r0
   110a4:	ldr	r0, [pc, #36]	; 110d0 <rb_base64_encode@plt+0xc4>
   110a8:	ldr	r1, [pc, #36]	; 110d4 <rb_base64_encode@plt+0xc8>
   110ac:	sub	r1, r1, r0
   110b0:	asr	r1, r1, #2
   110b4:	add	r1, r1, r1, lsr #31
   110b8:	asrs	r1, r1, #1
   110bc:	bxeq	lr
   110c0:	ldr	r3, [pc, #16]	; 110d8 <rb_base64_encode@plt+0xcc>
   110c4:	cmp	r3, #0
   110c8:	bxeq	lr
   110cc:	bx	r3
   110d0:	andeq	r5, r2, r8, ror #1
   110d4:	andeq	r5, r2, r8, ror #1
   110d8:	andeq	r0, r0, r0
   110dc:	push	{r4, lr}
   110e0:	ldr	r4, [pc, #24]	; 11100 <rb_base64_encode@plt+0xf4>
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11078 <rb_base64_encode@plt+0x6c>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	andeq	r5, r2, ip, ror #1
   11104:	b	110a4 <rb_base64_encode@plt+0x98>
   11108:	push	{fp, lr}
   1110c:	mov	fp, sp
   11110:	sub	sp, sp, #24
   11114:	sub	r1, fp, #8
   11118:	mov	r0, #7
   1111c:	bl	10fd0 <getrlimit@plt>
   11120:	ldr	r7, [fp, #-8]
   11124:	cmp	r0, #0
   11128:	movw	r0, #15824	; 0x3dd0
   1112c:	movt	r0, #1
   11130:	movwne	r7, #65535	; 0xffff
   11134:	bl	10e38 <getenv@plt>
   11138:	mov	r5, r0
   1113c:	movw	r0, #15831	; 0x3dd7
   11140:	movt	r0, #1
   11144:	bl	10e38 <getenv@plt>
   11148:	mov	r4, r0
   1114c:	movw	r0, #15840	; 0x3de0
   11150:	movt	r0, #1
   11154:	bl	10e38 <getenv@plt>
   11158:	cmp	r5, #0
   1115c:	beq	11170 <rb_base64_encode@plt+0x164>
   11160:	cmp	r4, #0
   11164:	movne	r6, r0
   11168:	cmpne	r0, #0
   1116c:	bne	111b0 <rb_base64_encode@plt+0x1a4>
   11170:	movw	r4, #20712	; 0x50e8
   11174:	movw	r0, #15849	; 0x3de9
   11178:	mov	r1, #52	; 0x34
   1117c:	mov	r2, #1
   11180:	movt	r4, #2
   11184:	movt	r0, #1
   11188:	ldr	r3, [r4]
   1118c:	bl	10f4c <fwrite@plt>
   11190:	ldr	r3, [r4]
   11194:	movw	r0, #15902	; 0x3e1e
   11198:	mov	r1, #49	; 0x31
   1119c:	mov	r2, #1
   111a0:	movt	r0, #1
   111a4:	bl	10f4c <fwrite@plt>
   111a8:	mov	r0, #1
   111ac:	bl	10ff4 <exit@plt>
   111b0:	mov	r0, r5
   111b4:	bl	10f1c <atoi@plt>
   111b8:	mov	r5, r0
   111bc:	mov	r0, r4
   111c0:	bl	10f1c <atoi@plt>
   111c4:	mov	r4, r0
   111c8:	mov	r0, r6
   111cc:	bl	10f1c <atoi@plt>
   111d0:	movw	r1, #20720	; 0x50f0
   111d4:	cmp	r7, #1
   111d8:	movt	r1, #2
   111dc:	str	r0, [r1]
   111e0:	blt	11218 <rb_base64_encode@plt+0x20c>
   111e4:	mov	r6, #0
   111e8:	b	11200 <rb_base64_encode@plt+0x1f4>
   111ec:	cmp	r6, #3
   111f0:	bcc	1120c <rb_base64_encode@plt+0x200>
   111f4:	mov	r0, r6
   111f8:	bl	10f40 <close@plt>
   111fc:	b	1120c <rb_base64_encode@plt+0x200>
   11200:	cmp	r5, r6
   11204:	cmpne	r4, r6
   11208:	bne	111ec <rb_base64_encode@plt+0x1e0>
   1120c:	add	r6, r6, #1
   11210:	cmp	r7, r6
   11214:	bne	11200 <rb_base64_encode@plt+0x1f4>
   11218:	movw	r0, #15952	; 0x3e50
   1121c:	mov	r1, #2
   11220:	movt	r0, #1
   11224:	bl	10da8 <open@plt>
   11228:	cmp	r0, #0
   1122c:	blt	1128c <rb_base64_encode@plt+0x280>
   11230:	cmp	r5, #0
   11234:	mov	r6, r0
   11238:	cmpne	r4, #0
   1123c:	beq	1124c <rb_base64_encode@plt+0x240>
   11240:	mov	r0, r6
   11244:	mov	r1, #0
   11248:	bl	10fac <dup2@plt>
   1124c:	cmp	r5, #1
   11250:	cmpne	r4, #1
   11254:	beq	11264 <rb_base64_encode@plt+0x258>
   11258:	mov	r0, r6
   1125c:	mov	r1, #1
   11260:	bl	10fac <dup2@plt>
   11264:	cmp	r5, #2
   11268:	cmpne	r4, #2
   1126c:	beq	1127c <rb_base64_encode@plt+0x270>
   11270:	mov	r0, r6
   11274:	mov	r1, #2
   11278:	bl	10fac <dup2@plt>
   1127c:	cmp	r6, #3
   11280:	blt	1128c <rb_base64_encode@plt+0x280>
   11284:	mov	r0, r6
   11288:	bl	10f40 <close@plt>
   1128c:	bl	11368 <rb_base64_encode@plt+0x35c>
   11290:	mov	r0, #4096	; 0x1000
   11294:	mov	r1, #1024	; 0x400
   11298:	mov	r2, #0
   1129c:	mov	r3, #0
   112a0:	str	r7, [sp]
   112a4:	str	r1, [sp, #4]
   112a8:	str	r0, [sp, #8]
   112ac:	mov	r0, #0
   112b0:	mov	r1, #0
   112b4:	bl	10f7c <rb_lib_init@plt>
   112b8:	mov	r0, #4096	; 0x1000
   112bc:	bl	10fc4 <rb_linebuf_init@plt>
   112c0:	mov	r0, #4096	; 0x1000
   112c4:	bl	10e80 <rb_init_rawbuffers@plt>
   112c8:	mov	r0, #48	; 0x30
   112cc:	bl	11418 <rb_base64_encode@plt+0x40c>
   112d0:	movw	r6, #20724	; 0x50f4
   112d4:	movw	r2, #15962	; 0x3e5a
   112d8:	mov	r1, #4
   112dc:	movt	r6, #2
   112e0:	movt	r2, #1
   112e4:	str	r0, [r6]
   112e8:	mov	r0, r5
   112ec:	bl	10f94 <rb_open@plt>
   112f0:	ldr	r1, [r6]
   112f4:	movw	r2, #15982	; 0x3e6e
   112f8:	movt	r2, #1
   112fc:	str	r0, [r1, #16]
   11300:	mov	r0, r4
   11304:	mov	r1, #8
   11308:	bl	10f94 <rb_open@plt>
   1130c:	ldr	r1, [r6]
   11310:	str	r0, [r1, #20]
   11314:	ldr	r0, [r1, #16]
   11318:	bl	10e50 <rb_set_nb@plt>
   1131c:	ldr	r0, [r6]
   11320:	ldr	r0, [r0, #20]
   11324:	bl	10e50 <rb_set_nb@plt>
   11328:	movw	r0, #15992	; 0x3e78
   1132c:	movw	r1, #5176	; 0x1438
   11330:	mov	r2, #0
   11334:	mov	r3, #10
   11338:	movt	r0, #1
   1133c:	movt	r1, #1
   11340:	bl	10de4 <rb_event_addish@plt>
   11344:	ldr	r0, [r6]
   11348:	mov	r1, #0
   1134c:	ldr	r0, [r0, #20]
   11350:	bl	114a0 <rb_base64_encode@plt+0x494>
   11354:	ldr	r1, [r6]
   11358:	ldr	r0, [r1, #16]
   1135c:	bl	1150c <rb_base64_encode@plt+0x500>
   11360:	mov	r0, #0
   11364:	bl	10e98 <rb_lib_loop@plt>
   11368:	push	{r4, r5, fp, lr}
   1136c:	add	fp, sp, #8
   11370:	sub	sp, sp, #144	; 0x90
   11374:	mov	r0, #1
   11378:	add	r4, sp, #4
   1137c:	str	r0, [sp, #4]
   11380:	mov	r0, #0
   11384:	add	r5, r4, #4
   11388:	str	r0, [sp, #136]	; 0x88
   1138c:	mov	r0, r5
   11390:	bl	10db4 <sigemptyset@plt>
   11394:	mov	r0, r5
   11398:	mov	r1, #13
   1139c:	bl	10f10 <sigaddset@plt>
   113a0:	mov	r0, r5
   113a4:	mov	r1, #14
   113a8:	bl	10f10 <sigaddset@plt>
   113ac:	mov	r0, r5
   113b0:	mov	r1, #5
   113b4:	bl	10f10 <sigaddset@plt>
   113b8:	mov	r0, r5
   113bc:	mov	r1, #28
   113c0:	bl	10f10 <sigaddset@plt>
   113c4:	mov	r0, #28
   113c8:	mov	r1, r4
   113cc:	mov	r2, #0
   113d0:	bl	10f70 <sigaction@plt>
   113d4:	mov	r0, #13
   113d8:	mov	r1, r4
   113dc:	mov	r2, #0
   113e0:	bl	10f70 <sigaction@plt>
   113e4:	mov	r0, #5
   113e8:	mov	r1, r4
   113ec:	mov	r2, #0
   113f0:	bl	10f70 <sigaction@plt>
   113f4:	movw	r0, #6264	; 0x1878
   113f8:	mov	r1, r4
   113fc:	mov	r2, #0
   11400:	movt	r0, #1
   11404:	str	r0, [sp, #4]
   11408:	mov	r0, #14
   1140c:	bl	10f70 <sigaction@plt>
   11410:	sub	sp, fp, #8
   11414:	pop	{r4, r5, fp, pc}
   11418:	push	{fp, lr}
   1141c:	mov	fp, sp
   11420:	mov	r1, r0
   11424:	mov	r0, #1
   11428:	bl	10e44 <calloc@plt>
   1142c:	cmp	r0, #0
   11430:	popne	{fp, pc}
   11434:	bl	10f58 <rb_outofmemory@plt>
   11438:	push	{r4, r5, r6, sl, fp, lr}
   1143c:	add	fp, sp, #16
   11440:	movw	r5, #20728	; 0x50f8
   11444:	movt	r5, #2
   11448:	ldr	r6, [r5]
   1144c:	b	11488 <rb_base64_encode@plt+0x47c>
   11450:	ldr	r4, [r6]
   11454:	ldr	r6, [r6, #8]
   11458:	add	r0, r4, #52	; 0x34
   1145c:	bl	10eec <rb_linebuf_donebuf@plt>
   11460:	add	r0, r4, #24
   11464:	bl	10eec <rb_linebuf_donebuf@plt>
   11468:	ldr	r0, [r4, #20]
   1146c:	bl	10f34 <rb_free_rawbuffer@plt>
   11470:	ldr	r0, [r4, #16]
   11474:	bl	10f34 <rb_free_rawbuffer@plt>
   11478:	cmp	r4, #0
   1147c:	beq	11488 <rb_base64_encode@plt+0x47c>
   11480:	mov	r0, r4
   11484:	bl	10e8c <free@plt>
   11488:	cmp	r6, #0
   1148c:	bne	11450 <rb_base64_encode@plt+0x444>
   11490:	mov	r0, #0
   11494:	str	r0, [r5]
   11498:	str	r0, [r5, #4]
   1149c:	pop	{r4, r5, r6, sl, fp, pc}
   114a0:	push	{r4, r5, r6, r7, fp, lr}
   114a4:	add	fp, sp, #16
   114a8:	sub	sp, sp, #16384	; 0x4000
   114ac:	mov	r4, r0
   114b0:	mov	r5, sp
   114b4:	mov	r0, r4
   114b8:	mov	r1, r5
   114bc:	mov	r2, #16384	; 0x4000
   114c0:	bl	10ea4 <rb_read@plt>
   114c4:	cmp	r0, #0
   114c8:	bgt	114b4 <rb_base64_encode@plt+0x4a8>
   114cc:	beq	11504 <rb_base64_encode@plt+0x4f8>
   114d0:	bl	11000 <__errno_location@plt>
   114d4:	ldr	r0, [r0]
   114d8:	bl	10df0 <rb_ignore_errno@plt>
   114dc:	cmp	r0, #0
   114e0:	beq	11504 <rb_base64_encode@plt+0x4f8>
   114e4:	movw	r2, #5280	; 0x14a0
   114e8:	mov	r0, r4
   114ec:	mov	r1, #1
   114f0:	mov	r3, #0
   114f4:	movt	r2, #1
   114f8:	bl	10e08 <rb_setselect@plt>
   114fc:	sub	sp, fp, #16
   11500:	pop	{r4, r5, r6, r7, fp, pc}
   11504:	mov	r0, #0
   11508:	bl	10ff4 <exit@plt>
   1150c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11510:	add	fp, sp, #28
   11514:	sub	sp, sp, #12
   11518:	add	r0, r1, #24
   1151c:	mov	r4, r1
   11520:	mov	r8, #16384	; 0x4000
   11524:	mov	r9, #4
   11528:	mov	sl, #0
   1152c:	str	r0, [sp, #8]
   11530:	mov	r0, #1
   11534:	mov	r1, #40	; 0x28
   11538:	bl	10e44 <calloc@plt>
   1153c:	cmp	r0, #0
   11540:	beq	1186c <rb_base64_encode@plt+0x860>
   11544:	mov	r5, r0
   11548:	mov	r0, #1
   1154c:	mov	r1, #16384	; 0x4000
   11550:	bl	10e44 <calloc@plt>
   11554:	cmp	r0, #0
   11558:	beq	1186c <rb_base64_encode@plt+0x860>
   1155c:	str	r0, [r5, #12]
   11560:	str	r8, [r5, #16]
   11564:	mov	r1, r0
   11568:	add	r7, r5, #20
   1156c:	mov	r2, #16384	; 0x4000
   11570:	ldr	r0, [r4, #16]
   11574:	mov	r3, r7
   11578:	str	r9, [sp]
   1157c:	bl	10fa0 <rb_recv_fd_buf@plt>
   11580:	mov	r6, r0
   11584:	cmp	r0, #0
   11588:	ble	11604 <rb_base64_encode@plt+0x5f8>
   1158c:	str	r6, [r5, #16]
   11590:	ldr	r0, [r4, #28]
   11594:	str	r5, [r5]
   11598:	cmp	r0, #0
   1159c:	stmib	r5, {r0, sl}
   115a0:	beq	115b0 <rb_base64_encode@plt+0x5a4>
   115a4:	add	r0, r0, #8
   115a8:	str	r5, [r0]
   115ac:	b	115c0 <rb_base64_encode@plt+0x5b4>
   115b0:	ldr	r0, [sp, #8]
   115b4:	ldr	r0, [r0]
   115b8:	cmp	r0, #0
   115bc:	beq	115fc <rb_base64_encode@plt+0x5f0>
   115c0:	str	r5, [r4, #28]
   115c4:	ldr	r0, [r4, #32]
   115c8:	add	r0, r0, #1
   115cc:	str	r0, [r4, #32]
   115d0:	mov	r0, #0
   115d4:	ldr	r1, [r7, r0, lsl #2]
   115d8:	cmp	r1, #0
   115dc:	beq	115ec <rb_base64_encode@plt+0x5e0>
   115e0:	add	r0, r0, #1
   115e4:	cmp	r0, #4
   115e8:	bcc	115d4 <rb_base64_encode@plt+0x5c8>
   115ec:	cmp	r6, #0
   115f0:	str	r0, [r5, #36]	; 0x24
   115f4:	bgt	11530 <rb_base64_encode@plt+0x524>
   115f8:	b	1161c <rb_base64_encode@plt+0x610>
   115fc:	ldr	r0, [sp, #8]
   11600:	b	115a8 <rb_base64_encode@plt+0x59c>
   11604:	ldr	r0, [r5, #12]
   11608:	cmp	r0, #0
   1160c:	beq	11614 <rb_base64_encode@plt+0x608>
   11610:	bl	10e8c <free@plt>
   11614:	mov	r0, r5
   11618:	bl	10e8c <free@plt>
   1161c:	cmp	r6, #0
   11620:	beq	11870 <rb_base64_encode@plt+0x864>
   11624:	bl	11000 <__errno_location@plt>
   11628:	ldr	r0, [r0]
   1162c:	bl	10df0 <rb_ignore_errno@plt>
   11630:	cmp	r0, #0
   11634:	beq	11870 <rb_base64_encode@plt+0x864>
   11638:	ldr	r8, [sp, #8]
   1163c:	ldr	r9, [r8]
   11640:	cmp	r9, #0
   11644:	beq	1184c <rb_base64_encode@plt+0x840>
   11648:	ldr	r5, [r9]
   1164c:	ldr	sl, [r9, #8]
   11650:	ldr	r0, [r5, #12]
   11654:	ldrb	r0, [r0]
   11658:	cmp	r0, #65	; 0x41
   1165c:	bne	117e8 <rb_base64_encode@plt+0x7dc>
   11660:	ldr	r0, [r5, #36]	; 0x24
   11664:	cmp	r0, #2
   11668:	bne	11738 <rb_base64_encode@plt+0x72c>
   1166c:	ldr	r0, [r5, #16]
   11670:	cmp	r0, #5
   11674:	bne	11740 <rb_base64_encode@plt+0x734>
   11678:	ldr	r7, [r5, #20]
   1167c:	ldr	r8, [r5, #24]
   11680:	mov	r0, #1
   11684:	mov	r1, #168	; 0xa8
   11688:	bl	10e44 <calloc@plt>
   1168c:	cmp	r0, #0
   11690:	beq	1186c <rb_base64_encode@plt+0x860>
   11694:	mov	r6, r0
   11698:	str	r4, [r0, #12]
   1169c:	mvn	r0, #0
   116a0:	add	r1, r6, #80	; 0x50
   116a4:	stm	r1, {r0, r7, r8}
   116a8:	mov	r0, r7
   116ac:	bl	10e50 <rb_set_nb@plt>
   116b0:	mov	r0, r8
   116b4:	bl	10e50 <rb_set_nb@plt>
   116b8:	add	r0, r6, #52	; 0x34
   116bc:	bl	10fb8 <rb_linebuf_newbuf@plt>
   116c0:	add	r0, r6, #24
   116c4:	bl	10fb8 <rb_linebuf_newbuf@plt>
   116c8:	bl	10f88 <rb_new_rawbuffer@plt>
   116cc:	str	r0, [r6, #20]
   116d0:	bl	10f88 <rb_new_rawbuffer@plt>
   116d4:	str	r0, [r6, #16]
   116d8:	movw	r1, #19923	; 0x4dd3
   116dc:	movw	r7, #20740	; 0x5104
   116e0:	mov	r3, #0
   116e4:	ldr	r0, [r5, #12]
   116e8:	movt	r1, #4194	; 0x1062
   116ec:	movt	r7, #2
   116f0:	ldr	r0, [r0, #1]
   116f4:	umull	r1, r2, r0, r1
   116f8:	str	r0, [r6, #80]	; 0x50
   116fc:	str	r6, [r6]
   11700:	str	r3, [r6, #4]
   11704:	lsr	r1, r2, #7
   11708:	mov	r2, #2000	; 0x7d0
   1170c:	mls	r0, r1, r2, r0
   11710:	mov	r1, r7
   11714:	add	r0, r0, r0, lsl #1
   11718:	ldr	r2, [r1, r0, lsl #2]!
   1171c:	cmp	r2, #0
   11720:	str	r2, [r6, #8]
   11724:	beq	11764 <rb_base64_encode@plt+0x758>
   11728:	ldr	r8, [sp, #8]
   1172c:	add	r2, r2, #4
   11730:	str	r6, [r2]
   11734:	b	11778 <rb_base64_encode@plt+0x76c>
   11738:	cmp	r0, #1
   1173c:	blt	117e8 <rb_base64_encode@plt+0x7dc>
   11740:	add	r6, r5, #20
   11744:	mov	r7, #0
   11748:	ldr	r0, [r6, r7, lsl #2]
   1174c:	bl	10f04 <rb_close@plt>
   11750:	ldr	r0, [r5, #36]	; 0x24
   11754:	add	r7, r7, #1
   11758:	cmp	r7, r0
   1175c:	blt	11748 <rb_base64_encode@plt+0x73c>
   11760:	b	117e8 <rb_base64_encode@plt+0x7dc>
   11764:	add	r2, r7, r0, lsl #2
   11768:	ldr	r8, [sp, #8]
   1176c:	ldr	r3, [r2, #4]!
   11770:	cmp	r3, #0
   11774:	streq	r6, [r2]
   11778:	str	r6, [r1]
   1177c:	add	r0, r7, r0, lsl #2
   11780:	ldr	r1, [r0, #8]
   11784:	add	r1, r1, #1
   11788:	str	r1, [r0, #8]
   1178c:	ldrb	r0, [r6, #128]	; 0x80
   11790:	orr	r0, r0, #4
   11794:	strb	r0, [r6, #128]	; 0x80
   11798:	ldr	r0, [r6, #84]	; 0x54
   1179c:	bl	10dcc <rb_get_type@plt>
   117a0:	tst	r0, #64	; 0x40
   117a4:	beq	117b4 <rb_base64_encode@plt+0x7a8>
   117a8:	ldr	r0, [r6, #84]	; 0x54
   117ac:	mov	r1, #4
   117b0:	bl	10eb0 <rb_set_type@plt>
   117b4:	ldr	r0, [r6, #88]	; 0x58
   117b8:	bl	10dcc <rb_get_type@plt>
   117bc:	cmp	r0, #64	; 0x40
   117c0:	bne	117d0 <rb_base64_encode@plt+0x7c4>
   117c4:	ldr	r0, [r6, #88]	; 0x58
   117c8:	mov	r1, #4
   117cc:	bl	10eb0 <rb_set_type@plt>
   117d0:	ldr	r0, [r6, #84]	; 0x54
   117d4:	mov	r1, r6
   117d8:	bl	1187c <rb_base64_encode@plt+0x870>
   117dc:	ldr	r0, [r6, #88]	; 0x58
   117e0:	mov	r1, r6
   117e4:	bl	1199c <rb_base64_encode@plt+0x990>
   117e8:	ldr	r0, [r9, #8]
   117ec:	ldr	r1, [r9, #4]
   117f0:	mov	r2, r8
   117f4:	cmp	r0, #0
   117f8:	streq	r1, [r4, #28]
   117fc:	strne	r1, [r0, #4]
   11800:	ldrne	r1, [r9, #4]
   11804:	cmp	r1, #0
   11808:	addne	r2, r1, #8
   1180c:	str	r0, [r2]
   11810:	mov	r0, #0
   11814:	str	r0, [r9, #4]
   11818:	str	r0, [r9, #8]
   1181c:	ldr	r0, [r4, #32]
   11820:	sub	r0, r0, #1
   11824:	str	r0, [r4, #32]
   11828:	ldr	r0, [r5, #12]
   1182c:	cmp	r0, #0
   11830:	beq	11838 <rb_base64_encode@plt+0x82c>
   11834:	bl	10e8c <free@plt>
   11838:	mov	r0, r5
   1183c:	bl	10e8c <free@plt>
   11840:	cmp	sl, #0
   11844:	mov	r9, sl
   11848:	bne	11648 <rb_base64_encode@plt+0x63c>
   1184c:	ldr	r0, [r4, #16]
   11850:	movw	r2, #5388	; 0x150c
   11854:	mov	r1, #1
   11858:	mov	r3, r4
   1185c:	movt	r2, #1
   11860:	sub	sp, fp, #28
   11864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11868:	b	10e08 <rb_setselect@plt>
   1186c:	bl	10f58 <rb_outofmemory@plt>
   11870:	mov	r0, #0
   11874:	bl	10ff4 <exit@plt>
   11878:	bx	lr
   1187c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11880:	add	fp, sp, #24
   11884:	sub	sp, sp, #16384	; 0x4000
   11888:	mov	r4, r1
   1188c:	mov	r5, r0
   11890:	mov	r0, sp
   11894:	mov	r1, #0
   11898:	mov	r2, #16384	; 0x4000
   1189c:	bl	10e5c <memset@plt>
   118a0:	cmp	r4, #0
   118a4:	beq	11994 <rb_base64_encode@plt+0x988>
   118a8:	ldrb	r0, [r4, #128]	; 0x80
   118ac:	tst	r0, #2
   118b0:	bne	11994 <rb_base64_encode@plt+0x988>
   118b4:	bne	11994 <rb_base64_encode@plt+0x988>
   118b8:	mov	r6, sp
   118bc:	mov	r0, r5
   118c0:	mov	r1, r6
   118c4:	mov	r2, #16384	; 0x4000
   118c8:	bl	10ea4 <rb_read@plt>
   118cc:	cmn	r0, #1
   118d0:	ble	11928 <rb_base64_encode@plt+0x91c>
   118d4:	mov	r7, r0
   118d8:	cmp	r0, #0
   118dc:	beq	11964 <rb_base64_encode@plt+0x958>
   118e0:	ldr	r0, [r4, #20]
   118e4:	mov	r1, r6
   118e8:	mov	r2, r7
   118ec:	bl	10fdc <rb_rawbuf_append@plt>
   118f0:	ldrb	r0, [r4, #128]	; 0x80
   118f4:	tst	r0, #8
   118f8:	bne	11908 <rb_base64_encode@plt+0x8fc>
   118fc:	mov	r0, r4
   11900:	bl	11dcc <rb_base64_encode@plt+0xdc0>
   11904:	b	11910 <rb_base64_encode@plt+0x904>
   11908:	mov	r0, r4
   1190c:	bl	11fb4 <rb_base64_encode@plt+0xfa8>
   11910:	cmp	r7, #16384	; 0x4000
   11914:	bcc	1197c <rb_base64_encode@plt+0x970>
   11918:	ldrb	r0, [r4, #128]	; 0x80
   1191c:	tst	r0, #2
   11920:	beq	118bc <rb_base64_encode@plt+0x8b0>
   11924:	b	11994 <rb_base64_encode@plt+0x988>
   11928:	bl	11000 <__errno_location@plt>
   1192c:	ldr	r0, [r0]
   11930:	bl	10df0 <rb_ignore_errno@plt>
   11934:	cmp	r0, #0
   11938:	beq	11964 <rb_base64_encode@plt+0x958>
   1193c:	movw	r2, #6268	; 0x187c
   11940:	mov	r0, r5
   11944:	mov	r1, #1
   11948:	mov	r3, r4
   1194c:	movt	r2, #1
   11950:	bl	10e08 <rb_setselect@plt>
   11954:	ldr	r0, [r4, #88]	; 0x58
   11958:	mov	r1, r4
   1195c:	bl	11ab8 <rb_base64_encode@plt+0xaac>
   11960:	b	11994 <rb_base64_encode@plt+0x988>
   11964:	movw	r2, #16009	; 0x3e89
   11968:	mov	r0, r4
   1196c:	mov	r1, #0
   11970:	movt	r2, #1
   11974:	bl	11b80 <rb_base64_encode@plt+0xb74>
   11978:	b	11994 <rb_base64_encode@plt+0x988>
   1197c:	movw	r2, #6268	; 0x187c
   11980:	mov	r0, r5
   11984:	mov	r1, #1
   11988:	mov	r3, r4
   1198c:	movt	r2, #1
   11990:	bl	10e08 <rb_setselect@plt>
   11994:	sub	sp, fp, #24
   11998:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1199c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   119a0:	add	fp, sp, #24
   119a4:	sub	sp, sp, #16384	; 0x4000
   119a8:	mov	r4, r1
   119ac:	mov	r0, sp
   119b0:	mov	r1, #0
   119b4:	mov	r2, #16384	; 0x4000
   119b8:	bl	10e5c <memset@plt>
   119bc:	cmp	r4, #0
   119c0:	beq	11ab0 <rb_base64_encode@plt+0xaa4>
   119c4:	ldrb	r0, [r4, #128]	; 0x80
   119c8:	tst	r0, #2
   119cc:	bne	11ab0 <rb_base64_encode@plt+0xaa4>
   119d0:	mov	r0, r4
   119d4:	bl	12648 <rb_base64_encode@plt+0x163c>
   119d8:	cmp	r0, #0
   119dc:	bne	11ab0 <rb_base64_encode@plt+0xaa4>
   119e0:	add	r5, r4, #52	; 0x34
   119e4:	add	r7, r4, #112	; 0x70
   119e8:	mov	r6, sp
   119ec:	ldrb	r0, [r4, #128]	; 0x80
   119f0:	tst	r0, #2
   119f4:	bne	11ab0 <rb_base64_encode@plt+0xaa4>
   119f8:	ldr	r0, [r4, #88]	; 0x58
   119fc:	mov	r1, r6
   11a00:	mov	r2, #16384	; 0x4000
   11a04:	bl	10ea4 <rb_read@plt>
   11a08:	cmp	r0, #0
   11a0c:	beq	11aa0 <rb_base64_encode@plt+0xa94>
   11a10:	mov	r2, r0
   11a14:	cmn	r0, #1
   11a18:	ble	11a5c <rb_base64_encode@plt+0xa50>
   11a1c:	ldrd	r0, [r7]
   11a20:	mov	r3, #0
   11a24:	adds	r0, r0, r2
   11a28:	adc	r1, r1, r2, asr #31
   11a2c:	strd	r0, [r7]
   11a30:	mov	r0, r5
   11a34:	mov	r1, r6
   11a38:	bl	10e68 <rb_linebuf_parse@plt>
   11a3c:	ldrb	r0, [r4, #128]	; 0x80
   11a40:	tst	r0, #2
   11a44:	bne	11ab0 <rb_base64_encode@plt+0xaa4>
   11a48:	mov	r0, r4
   11a4c:	bl	12648 <rb_base64_encode@plt+0x163c>
   11a50:	cmp	r0, #0
   11a54:	beq	119ec <rb_base64_encode@plt+0x9e0>
   11a58:	b	11ab0 <rb_base64_encode@plt+0xaa4>
   11a5c:	bl	11000 <__errno_location@plt>
   11a60:	ldr	r0, [r0]
   11a64:	bl	10df0 <rb_ignore_errno@plt>
   11a68:	cmp	r0, #0
   11a6c:	beq	11aa0 <rb_base64_encode@plt+0xa94>
   11a70:	ldr	r0, [r4, #88]	; 0x58
   11a74:	movw	r2, #6556	; 0x199c
   11a78:	mov	r1, #1
   11a7c:	mov	r3, r4
   11a80:	movt	r2, #1
   11a84:	bl	10e08 <rb_setselect@plt>
   11a88:	ldrb	r0, [r4, #128]	; 0x80
   11a8c:	tst	r0, #8
   11a90:	beq	11ab0 <rb_base64_encode@plt+0xaa4>
   11a94:	mov	r0, r4
   11a98:	bl	121b4 <rb_base64_encode@plt+0x11a8>
   11a9c:	b	11ab0 <rb_base64_encode@plt+0xaa4>
   11aa0:	mov	r0, r4
   11aa4:	mov	r1, #0
   11aa8:	mov	r2, #0
   11aac:	bl	11b80 <rb_base64_encode@plt+0xb74>
   11ab0:	sub	sp, fp, #24
   11ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ab8:	push	{r4, r5, r6, r7, fp, lr}
   11abc:	add	fp, sp, #16
   11ac0:	mov	r5, r0
   11ac4:	ldrb	r0, [r1, #128]	; 0x80
   11ac8:	tst	r0, #2
   11acc:	popne	{r4, r5, r6, r7, fp, pc}
   11ad0:	add	r6, r1, #24
   11ad4:	mov	r4, r1
   11ad8:	mov	r0, r5
   11adc:	mov	r1, r6
   11ae0:	bl	10ec8 <rb_linebuf_flush@plt>
   11ae4:	cmp	r0, #1
   11ae8:	blt	11b14 <rb_base64_encode@plt+0xb08>
   11aec:	add	r7, r4, #120	; 0x78
   11af0:	ldrd	r2, [r7]
   11af4:	mov	r1, r6
   11af8:	adds	r2, r2, r0
   11afc:	adc	r3, r3, r0, asr #31
   11b00:	mov	r0, r5
   11b04:	strd	r2, [r7]
   11b08:	bl	10ec8 <rb_linebuf_flush@plt>
   11b0c:	cmp	r0, #0
   11b10:	bgt	11af0 <rb_base64_encode@plt+0xae4>
   11b14:	cmp	r0, #0
   11b18:	beq	11b58 <rb_base64_encode@plt+0xb4c>
   11b1c:	bl	11000 <__errno_location@plt>
   11b20:	ldr	r0, [r0]
   11b24:	bl	10df0 <rb_ignore_errno@plt>
   11b28:	cmp	r0, #0
   11b2c:	beq	11b58 <rb_base64_encode@plt+0xb4c>
   11b30:	ldr	r1, [r4, #40]	; 0x28
   11b34:	ldr	r0, [r4, #88]	; 0x58
   11b38:	cmp	r1, #1
   11b3c:	blt	11b6c <rb_base64_encode@plt+0xb60>
   11b40:	movw	r2, #6840	; 0x1ab8
   11b44:	mov	r1, #2
   11b48:	mov	r3, r4
   11b4c:	movt	r2, #1
   11b50:	pop	{r4, r5, r6, r7, fp, lr}
   11b54:	b	10e08 <rb_setselect@plt>
   11b58:	mov	r0, r4
   11b5c:	mov	r1, #0
   11b60:	mov	r2, #0
   11b64:	pop	{r4, r5, r6, r7, fp, lr}
   11b68:	b	11b80 <rb_base64_encode@plt+0xb74>
   11b6c:	mov	r1, #2
   11b70:	mov	r2, #0
   11b74:	mov	r3, #0
   11b78:	pop	{r4, r5, r6, r7, fp, lr}
   11b7c:	b	10e08 <rb_setselect@plt>
   11b80:	sub	sp, sp, #4
   11b84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11b88:	add	fp, sp, #24
   11b8c:	sub	sp, sp, #388	; 0x184
   11b90:	str	r3, [fp, #8]
   11b94:	mov	r4, r0
   11b98:	ldrb	r0, [r0, #128]	; 0x80
   11b9c:	tst	r0, #2
   11ba0:	bne	11db8 <rb_base64_encode@plt+0xdac>
   11ba4:	tst	r0, #8
   11ba8:	mov	r5, r2
   11bac:	mov	r6, r1
   11bb0:	movne	r0, r4
   11bb4:	blne	121b4 <rb_base64_encode@plt+0x11a8>
   11bb8:	ldr	r0, [r4, #16]
   11bbc:	ldr	r1, [r4, #84]	; 0x54
   11bc0:	bl	10fe8 <rb_rawbuf_flush@plt>
   11bc4:	ldr	r0, [r4, #88]	; 0x58
   11bc8:	add	r1, r4, #24
   11bcc:	bl	10ec8 <rb_linebuf_flush@plt>
   11bd0:	ldr	r0, [r4, #84]	; 0x54
   11bd4:	bl	10f04 <rb_close@plt>
   11bd8:	ldrb	r0, [r4, #128]	; 0x80
   11bdc:	movw	r3, #19923	; 0x4dd3
   11be0:	movt	r3, #4194	; 0x1062
   11be4:	orr	r0, r0, #2
   11be8:	strb	r0, [r4, #128]	; 0x80
   11bec:	ldr	r2, [r4, #80]	; 0x50
   11bf0:	ldr	r0, [r4, #8]
   11bf4:	ldr	r1, [r4, #4]
   11bf8:	umull	r3, r7, r2, r3
   11bfc:	cmp	r0, #0
   11c00:	lsr	r3, r7, #7
   11c04:	mov	r7, #2000	; 0x7d0
   11c08:	mls	r2, r3, r7, r2
   11c0c:	movw	r3, #20740	; 0x5104
   11c10:	mov	r7, #0
   11c14:	add	r2, r2, r2, lsl #1
   11c18:	movt	r3, #2
   11c1c:	add	r2, r3, r2, lsl #2
   11c20:	streq	r1, [r2, #4]
   11c24:	strne	r1, [r0, #4]
   11c28:	mov	r3, r2
   11c2c:	ldrne	r1, [r4, #4]
   11c30:	cmp	r1, #0
   11c34:	addne	r3, r1, #8
   11c38:	cmp	r6, #0
   11c3c:	str	r0, [r3]
   11c40:	str	r7, [r4, #4]
   11c44:	str	r7, [r4, #8]
   11c48:	cmpne	r5, #0
   11c4c:	ldr	r0, [r2, #8]
   11c50:	sub	r0, r0, #1
   11c54:	str	r0, [r2, #8]
   11c58:	ldr	r0, [r4, #88]	; 0x58
   11c5c:	bne	11c8c <rb_base64_encode@plt+0xc80>
   11c60:	bl	10f04 <rb_close@plt>
   11c64:	movw	r0, #20728	; 0x50f8
   11c68:	stm	r4, {r4, r7}
   11c6c:	movt	r0, #2
   11c70:	ldr	r1, [r0]
   11c74:	cmp	r1, #0
   11c78:	str	r1, [r4, #8]
   11c7c:	beq	11d68 <rb_base64_encode@plt+0xd5c>
   11c80:	add	r1, r1, #4
   11c84:	str	r4, [r1]
   11c88:	b	11d78 <rb_base64_encode@plt+0xd6c>
   11c8c:	movw	r2, #8940	; 0x22ec
   11c90:	mov	r1, #1
   11c94:	mov	r3, r4
   11c98:	movt	r2, #1
   11c9c:	bl	10e08 <rb_setselect@plt>
   11ca0:	ldr	r0, [r4, #88]	; 0x58
   11ca4:	mov	r1, #2
   11ca8:	mov	r2, #0
   11cac:	mov	r3, #0
   11cb0:	bl	10e08 <rb_setselect@plt>
   11cb4:	sub	r6, fp, #156	; 0x9c
   11cb8:	add	r3, fp, #8
   11cbc:	mov	r1, #128	; 0x80
   11cc0:	mov	r2, r5
   11cc4:	mov	r0, r6
   11cc8:	str	r3, [fp, #-28]	; 0xffffffe4
   11ccc:	bl	10e2c <vsnprintf@plt>
   11cd0:	mov	r0, #68	; 0x44
   11cd4:	mov	r1, r6
   11cd8:	mov	r2, #251	; 0xfb
   11cdc:	strb	r0, [sp]
   11ce0:	ldr	r0, [r4, #80]	; 0x50
   11ce4:	str	r0, [sp, #1]
   11ce8:	mov	r0, sp
   11cec:	orr	r0, r0, #5
   11cf0:	bl	10e74 <rb_strlcpy@plt>
   11cf4:	mov	r0, r6
   11cf8:	bl	10ed4 <strlen@plt>
   11cfc:	ldr	r4, [r4, #12]
   11d00:	mov	r6, r0
   11d04:	mov	r0, #1
   11d08:	mov	r1, #40	; 0x28
   11d0c:	bl	10e44 <calloc@plt>
   11d10:	cmp	r0, #0
   11d14:	beq	11dc8 <rb_base64_encode@plt+0xdbc>
   11d18:	add	r6, r6, #6
   11d1c:	mov	r5, r0
   11d20:	mov	r0, #1
   11d24:	mov	r1, r6
   11d28:	bl	10e44 <calloc@plt>
   11d2c:	cmp	r0, #0
   11d30:	beq	11dc8 <rb_base64_encode@plt+0xdbc>
   11d34:	mov	r1, sp
   11d38:	mov	r2, r6
   11d3c:	str	r0, [r5, #12]
   11d40:	str	r6, [r5, #16]
   11d44:	bl	10ee0 <memcpy@plt>
   11d48:	str	r5, [r5]
   11d4c:	ldr	r0, [r4, #40]	; 0x28
   11d50:	cmp	r0, #0
   11d54:	str	r0, [r5, #4]
   11d58:	beq	11d8c <rb_base64_encode@plt+0xd80>
   11d5c:	add	r0, r0, #8
   11d60:	str	r5, [r0]
   11d64:	b	11d9c <rb_base64_encode@plt+0xd90>
   11d68:	mov	r1, r0
   11d6c:	ldr	r2, [r1, #4]!
   11d70:	cmp	r2, #0
   11d74:	streq	r4, [r1]
   11d78:	str	r4, [r0]
   11d7c:	ldr	r1, [r0, #8]
   11d80:	add	r1, r1, #1
   11d84:	str	r1, [r0, #8]
   11d88:	b	11db8 <rb_base64_encode@plt+0xdac>
   11d8c:	mov	r0, r4
   11d90:	ldr	r1, [r0, #36]!	; 0x24
   11d94:	cmp	r1, #0
   11d98:	streq	r5, [r0]
   11d9c:	str	r5, [r4, #40]	; 0x28
   11da0:	ldr	r1, [r4, #44]	; 0x2c
   11da4:	ldr	r0, [r4, #16]
   11da8:	add	r1, r1, #1
   11dac:	str	r1, [r4, #44]	; 0x2c
   11db0:	mov	r1, r4
   11db4:	bl	124f0 <rb_base64_encode@plt+0x14e4>
   11db8:	sub	sp, fp, #24
   11dbc:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   11dc0:	add	sp, sp, #4
   11dc4:	bx	lr
   11dc8:	bl	10f58 <rb_outofmemory@plt>
   11dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dd0:	add	fp, sp, #28
   11dd4:	sub	sp, sp, #124	; 0x7c
   11dd8:	sub	sp, sp, #16384	; 0x4000
   11ddc:	add	r5, sp, #120	; 0x78
   11de0:	mov	sl, r0
   11de4:	mov	r1, #0
   11de8:	mov	r2, #16384	; 0x4000
   11dec:	mov	r8, #0
   11df0:	mov	r0, r5
   11df4:	bl	10e5c <memset@plt>
   11df8:	ldr	r0, [sl, #20]
   11dfc:	mov	r1, r5
   11e00:	mov	r2, #16384	; 0x4000
   11e04:	bl	10f64 <rb_rawbuf_get@plt>
   11e08:	add	r7, sl, #128	; 0x80
   11e0c:	cmp	r0, #0
   11e10:	beq	11ec4 <rb_base64_encode@plt+0xeb8>
   11e14:	movw	r9, #16077	; 0x3ecd
   11e18:	add	r6, sl, #129	; 0x81
   11e1c:	add	r4, r5, #16384	; 0x4000
   11e20:	movt	r9, #1
   11e24:	mov	r0, r5
   11e28:	mov	r1, r9
   11e2c:	bl	10ef8 <rb_strcasestr@plt>
   11e30:	cmp	r0, #0
   11e34:	beq	11eac <rb_base64_encode@plt+0xea0>
   11e38:	add	r1, r0, #18
   11e3c:	b	11e44 <rb_base64_encode@plt+0xe38>
   11e40:	add	r1, r1, #1
   11e44:	cmp	r1, r4
   11e48:	bcs	11e5c <rb_base64_encode@plt+0xe50>
   11e4c:	ldrb	r0, [r1]
   11e50:	cmp	r0, #32
   11e54:	cmpne	r0, #9
   11e58:	beq	11e40 <rb_base64_encode@plt+0xe34>
   11e5c:	cmp	r1, r4
   11e60:	bcs	11e94 <rb_base64_encode@plt+0xe88>
   11e64:	mov	r0, r1
   11e68:	ldrb	r2, [r0]
   11e6c:	cmp	r2, #0
   11e70:	beq	11e94 <rb_base64_encode@plt+0xe88>
   11e74:	cmp	r2, #13
   11e78:	cmpne	r2, #10
   11e7c:	beq	11e90 <rb_base64_encode@plt+0xe84>
   11e80:	add	r0, r0, #1
   11e84:	cmp	r0, r4
   11e88:	bcc	11e68 <rb_base64_encode@plt+0xe5c>
   11e8c:	b	11e94 <rb_base64_encode@plt+0xe88>
   11e90:	strb	r8, [r0]
   11e94:	mov	r0, r6
   11e98:	mov	r2, #37	; 0x25
   11e9c:	bl	10e74 <rb_strlcpy@plt>
   11ea0:	ldrb	r0, [r7]
   11ea4:	orr	r0, r0, #8
   11ea8:	strb	r0, [r7]
   11eac:	ldr	r0, [sl, #20]
   11eb0:	mov	r1, r5
   11eb4:	mov	r2, #16384	; 0x4000
   11eb8:	bl	10f64 <rb_rawbuf_get@plt>
   11ebc:	cmp	r0, #0
   11ec0:	bne	11e24 <rb_base64_encode@plt+0xe18>
   11ec4:	ldrb	r0, [r7]
   11ec8:	tst	r0, #8
   11ecc:	beq	11fa0 <rb_base64_encode@plt+0xf94>
   11ed0:	add	r5, sp, #24
   11ed4:	mov	r0, r5
   11ed8:	bl	126b0 <rb_base64_encode@plt+0x16a4>
   11edc:	add	r6, sl, #129	; 0x81
   11ee0:	mov	r0, r6
   11ee4:	bl	10ed4 <strlen@plt>
   11ee8:	mov	r2, r0
   11eec:	mov	r0, r5
   11ef0:	mov	r1, r6
   11ef4:	bl	126f0 <rb_base64_encode@plt+0x16e4>
   11ef8:	movw	r1, #16096	; 0x3ee0
   11efc:	mov	r0, r5
   11f00:	mov	r2, #36	; 0x24
   11f04:	movt	r1, #1
   11f08:	bl	126f0 <rb_base64_encode@plt+0x16e4>
   11f0c:	add	r6, sp, #4
   11f10:	mov	r0, r5
   11f14:	mov	r1, r6
   11f18:	bl	13c30 <rb_base64_encode@plt+0x2c24>
   11f1c:	mov	r0, r6
   11f20:	mov	r1, #20
   11f24:	bl	1100c <rb_base64_encode@plt>
   11f28:	mov	r5, r0
   11f2c:	ldrb	r0, [sl, #128]	; 0x80
   11f30:	tst	r0, #2
   11f34:	bne	11f50 <rb_base64_encode@plt+0xf44>
   11f38:	ldr	r0, [sl, #16]
   11f3c:	movw	r1, #16133	; 0x3f05
   11f40:	mov	r2, #129	; 0x81
   11f44:	movt	r1, #1
   11f48:	bl	10fdc <rb_rawbuf_append@plt>
   11f4c:	ldrb	r0, [sl, #128]	; 0x80
   11f50:	tst	r0, #2
   11f54:	bne	11f74 <rb_base64_encode@plt+0xf68>
   11f58:	mov	r0, r5
   11f5c:	bl	10ed4 <strlen@plt>
   11f60:	mov	r2, r0
   11f64:	ldr	r0, [sl, #16]
   11f68:	mov	r1, r5
   11f6c:	bl	10fdc <rb_rawbuf_append@plt>
   11f70:	ldrb	r0, [sl, #128]	; 0x80
   11f74:	tst	r0, #2
   11f78:	bne	11f90 <rb_base64_encode@plt+0xf84>
   11f7c:	ldr	r0, [sl, #16]
   11f80:	movw	r1, #16263	; 0x3f87
   11f84:	mov	r2, #4
   11f88:	movt	r1, #1
   11f8c:	bl	10fdc <rb_rawbuf_append@plt>
   11f90:	cmp	r5, #0
   11f94:	beq	11fa0 <rb_base64_encode@plt+0xf94>
   11f98:	mov	r0, r5
   11f9c:	bl	10e8c <free@plt>
   11fa0:	ldr	r0, [sl, #84]	; 0x54
   11fa4:	mov	r1, sl
   11fa8:	bl	123b8 <rb_base64_encode@plt+0x13ac>
   11fac:	sub	sp, fp, #28
   11fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fb8:	add	fp, sp, #28
   11fbc:	sub	sp, sp, #12
   11fc0:	sub	sp, sp, #16384	; 0x4000
   11fc4:	mov	r4, r0
   11fc8:	ldr	r0, [r0, #20]
   11fcc:	mov	r1, sp
   11fd0:	mov	r2, #2
   11fd4:	bl	10f64 <rb_rawbuf_get@plt>
   11fd8:	cmp	r0, #2
   11fdc:	bne	121a0 <rb_base64_encode@plt+0x1194>
   11fe0:	add	sl, r4, #24
   11fe4:	mov	r6, sp
   11fe8:	add	r7, sp, #8
   11fec:	add	r8, sp, #6
   11ff0:	add	r5, sp, #2
   11ff4:	ldrb	r0, [sp, #1]
   11ff8:	and	r2, r0, #127	; 0x7f
   11ffc:	cmp	r2, #127	; 0x7f
   12000:	strb	r2, [sp, #1]
   12004:	beq	12188 <rb_base64_encode@plt+0x117c>
   12008:	lsr	r9, r0, #7
   1200c:	cmp	r2, #126	; 0x7e
   12010:	bne	12070 <rb_base64_encode@plt+0x1064>
   12014:	mov	r0, r7
   12018:	mov	r1, #0
   1201c:	mov	r2, #16384	; 0x4000
   12020:	bl	10e5c <memset@plt>
   12024:	ldr	r0, [r4, #20]
   12028:	mov	r1, r8
   1202c:	mov	r2, #2
   12030:	bl	10f64 <rb_rawbuf_get@plt>
   12034:	cmp	r0, #0
   12038:	beq	120e4 <rb_base64_encode@plt+0x10d8>
   1203c:	ldrh	r0, [sp, #6]
   12040:	cmp	r9, #0
   12044:	rev16	r1, r0
   12048:	strh	r1, [sp, #6]
   1204c:	beq	1210c <rb_base64_encode@plt+0x1100>
   12050:	ldr	r0, [r4, #20]
   12054:	mov	r1, r5
   12058:	mov	r2, #4
   1205c:	bl	10f64 <rb_rawbuf_get@plt>
   12060:	cmp	r0, #0
   12064:	beq	120f8 <rb_base64_encode@plt+0x10ec>
   12068:	ldrh	r2, [sp, #6]
   1206c:	b	12114 <rb_base64_encode@plt+0x1108>
   12070:	cmp	r9, #0
   12074:	beq	12094 <rb_base64_encode@plt+0x1088>
   12078:	ldr	r0, [r4, #20]
   1207c:	mov	r1, r5
   12080:	mov	r2, #4
   12084:	bl	10f64 <rb_rawbuf_get@plt>
   12088:	cmp	r0, #0
   1208c:	beq	120f8 <rb_base64_encode@plt+0x10ec>
   12090:	ldrb	r2, [sp, #1]
   12094:	ldr	r0, [r4, #20]
   12098:	mov	r1, r7
   1209c:	bl	10f64 <rb_rawbuf_get@plt>
   120a0:	cmp	r0, #0
   120a4:	beq	12174 <rb_base64_encode@plt+0x1168>
   120a8:	mov	r2, r0
   120ac:	cmp	r9, #0
   120b0:	beq	12160 <rb_base64_encode@plt+0x1154>
   120b4:	cmp	r2, #1
   120b8:	blt	12160 <rb_base64_encode@plt+0x1154>
   120bc:	mov	r0, #0
   120c0:	and	r3, r0, #3
   120c4:	ldrb	r1, [r7, r0]
   120c8:	ldrb	r3, [r5, r3]
   120cc:	eor	r1, r3, r1
   120d0:	strb	r1, [r7, r0]
   120d4:	add	r0, r0, #1
   120d8:	cmp	r2, r0
   120dc:	bne	120c0 <rb_base64_encode@plt+0x10b4>
   120e0:	b	12160 <rb_base64_encode@plt+0x1154>
   120e4:	movw	r2, #16268	; 0x3f8c
   120e8:	mov	r0, r4
   120ec:	mov	r1, #1
   120f0:	movt	r2, #1
   120f4:	b	12184 <rb_base64_encode@plt+0x1178>
   120f8:	movw	r2, #16314	; 0x3fba
   120fc:	mov	r0, r4
   12100:	mov	r1, #1
   12104:	movt	r2, #1
   12108:	b	12184 <rb_base64_encode@plt+0x1178>
   1210c:	rev	r0, r0
   12110:	lsr	r2, r0, #16
   12114:	ldr	r0, [r4, #20]
   12118:	mov	r1, r7
   1211c:	bl	10f64 <rb_rawbuf_get@plt>
   12120:	cmp	r0, #0
   12124:	beq	12174 <rb_base64_encode@plt+0x1168>
   12128:	mov	r2, r0
   1212c:	cmp	r9, #0
   12130:	beq	12160 <rb_base64_encode@plt+0x1154>
   12134:	cmp	r2, #1
   12138:	blt	12160 <rb_base64_encode@plt+0x1154>
   1213c:	mov	r0, #0
   12140:	and	r3, r0, #3
   12144:	ldrb	r1, [r7, r0]
   12148:	ldrb	r3, [r5, r3]
   1214c:	eor	r1, r3, r1
   12150:	strb	r1, [r7, r0]
   12154:	add	r0, r0, #1
   12158:	cmp	r2, r0
   1215c:	bne	12140 <rb_base64_encode@plt+0x1134>
   12160:	mov	r0, sl
   12164:	mov	r1, r7
   12168:	mov	r3, #1
   1216c:	bl	10e68 <rb_linebuf_parse@plt>
   12170:	b	12188 <rb_base64_encode@plt+0x117c>
   12174:	movw	r2, #16358	; 0x3fe6
   12178:	mov	r0, r4
   1217c:	mov	r1, #1
   12180:	movt	r2, #1
   12184:	bl	11b80 <rb_base64_encode@plt+0xb74>
   12188:	ldr	r0, [r4, #20]
   1218c:	mov	r1, r6
   12190:	mov	r2, #2
   12194:	bl	10f64 <rb_rawbuf_get@plt>
   12198:	cmp	r0, #2
   1219c:	beq	11ff4 <rb_base64_encode@plt+0xfe8>
   121a0:	ldr	r0, [r4, #88]	; 0x58
   121a4:	mov	r1, r4
   121a8:	bl	11ab8 <rb_base64_encode@plt+0xaac>
   121ac:	sub	sp, fp, #28
   121b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b8:	add	fp, sp, #28
   121bc:	sub	sp, sp, #20
   121c0:	sub	sp, sp, #16384	; 0x4000
   121c4:	add	r6, sp, #8
   121c8:	mov	r4, r0
   121cc:	mov	r1, #0
   121d0:	mov	r2, #16384	; 0x4000
   121d4:	mov	sl, #0
   121d8:	mov	r0, r6
   121dc:	bl	10e5c <memset@plt>
   121e0:	add	r5, r4, #52	; 0x34
   121e4:	mov	r1, r6
   121e8:	mov	r2, #16384	; 0x4000
   121ec:	mov	r3, #0
   121f0:	str	sl, [sp]
   121f4:	mov	r0, r5
   121f8:	bl	10ebc <rb_linebuf_get@plt>
   121fc:	mov	r6, r0
   12200:	ldrb	r0, [r4, #128]	; 0x80
   12204:	cmp	r6, #0
   12208:	beq	122d0 <rb_base64_encode@plt+0x12c4>
   1220c:	movw	r8, #16265	; 0x3f89
   12210:	sub	r9, fp, #36	; 0x24
   12214:	add	r7, sp, #8
   12218:	movt	r8, #1
   1221c:	tst	r0, #2
   12220:	bne	122a8 <rb_base64_encode@plt+0x129c>
   12224:	cmp	r6, #122	; 0x7a
   12228:	bgt	1224c <rb_base64_encode@plt+0x1240>
   1222c:	mov	r0, #129	; 0x81
   12230:	mov	r1, r9
   12234:	mov	r2, #2
   12238:	strh	r0, [fp, #-36]	; 0xffffffdc
   1223c:	add	r0, r6, #2
   12240:	and	r0, r0, #127	; 0x7f
   12244:	strb	r0, [fp, #-35]	; 0xffffffdd
   12248:	b	12268 <rb_base64_encode@plt+0x125c>
   1224c:	movw	r0, #32385	; 0x7e81
   12250:	mov	r1, r9
   12254:	mov	r2, #4
   12258:	str	r0, [fp, #-36]	; 0xffffffdc
   1225c:	add	r0, r6, #2
   12260:	rev16	r0, r0
   12264:	strh	r0, [fp, #-34]	; 0xffffffde
   12268:	ldr	r0, [r4, #16]
   1226c:	bl	10fdc <rb_rawbuf_append@plt>
   12270:	ldrb	r0, [r4, #128]	; 0x80
   12274:	tst	r0, #2
   12278:	bne	12290 <rb_base64_encode@plt+0x1284>
   1227c:	ldr	r0, [r4, #16]
   12280:	mov	r1, r7
   12284:	mov	r2, r6
   12288:	bl	10fdc <rb_rawbuf_append@plt>
   1228c:	ldrb	r0, [r4, #128]	; 0x80
   12290:	tst	r0, #2
   12294:	bne	122a8 <rb_base64_encode@plt+0x129c>
   12298:	ldr	r0, [r4, #16]
   1229c:	mov	r1, r8
   122a0:	mov	r2, #2
   122a4:	bl	10fdc <rb_rawbuf_append@plt>
   122a8:	mov	r0, r5
   122ac:	mov	r1, r7
   122b0:	mov	r2, #16384	; 0x4000
   122b4:	mov	r3, #0
   122b8:	str	sl, [sp]
   122bc:	bl	10ebc <rb_linebuf_get@plt>
   122c0:	mov	r6, r0
   122c4:	ldrb	r0, [r4, #128]	; 0x80
   122c8:	cmp	r6, #0
   122cc:	bne	1221c <rb_base64_encode@plt+0x1210>
   122d0:	tst	r0, #8
   122d4:	beq	122e4 <rb_base64_encode@plt+0x12d8>
   122d8:	ldr	r0, [r4, #84]	; 0x54
   122dc:	mov	r1, r4
   122e0:	bl	123b8 <rb_base64_encode@plt+0x13ac>
   122e4:	sub	sp, fp, #28
   122e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122ec:	push	{r4, r5, r6, r7, fp, lr}
   122f0:	add	fp, sp, #16
   122f4:	sub	sp, sp, #16384	; 0x4000
   122f8:	cmp	r1, #0
   122fc:	beq	123b0 <rb_base64_encode@plt+0x13a4>
   12300:	mov	r4, r1
   12304:	mov	r5, sp
   12308:	ldr	r0, [r4, #88]	; 0x58
   1230c:	mov	r1, r5
   12310:	mov	r2, #16384	; 0x4000
   12314:	bl	10ea4 <rb_read@plt>
   12318:	cmp	r0, #0
   1231c:	beq	12358 <rb_base64_encode@plt+0x134c>
   12320:	cmn	r0, #1
   12324:	bgt	12308 <rb_base64_encode@plt+0x12fc>
   12328:	bl	11000 <__errno_location@plt>
   1232c:	ldr	r0, [r0]
   12330:	bl	10df0 <rb_ignore_errno@plt>
   12334:	cmp	r0, #0
   12338:	beq	12358 <rb_base64_encode@plt+0x134c>
   1233c:	ldr	r0, [r4, #88]	; 0x58
   12340:	movw	r2, #8940	; 0x22ec
   12344:	mov	r1, #1
   12348:	mov	r3, r4
   1234c:	movt	r2, #1
   12350:	bl	10e08 <rb_setselect@plt>
   12354:	b	123b0 <rb_base64_encode@plt+0x13a4>
   12358:	ldr	r0, [r4, #88]	; 0x58
   1235c:	bl	10f04 <rb_close@plt>
   12360:	mov	r0, #0
   12364:	str	r0, [r4, #4]
   12368:	movw	r0, #20728	; 0x50f8
   1236c:	str	r4, [r4]
   12370:	movt	r0, #2
   12374:	ldr	r1, [r0]
   12378:	cmp	r1, #0
   1237c:	str	r1, [r4, #8]
   12380:	beq	12390 <rb_base64_encode@plt+0x1384>
   12384:	add	r1, r1, #4
   12388:	str	r4, [r1]
   1238c:	b	123a0 <rb_base64_encode@plt+0x1394>
   12390:	mov	r1, r0
   12394:	ldr	r2, [r1, #4]!
   12398:	cmp	r2, #0
   1239c:	streq	r4, [r1]
   123a0:	str	r4, [r0]
   123a4:	ldr	r1, [r0, #8]
   123a8:	add	r1, r1, #1
   123ac:	str	r1, [r0, #8]
   123b0:	sub	sp, fp, #16
   123b4:	pop	{r4, r5, r6, r7, fp, pc}
   123b8:	push	{r4, r5, r6, sl, fp, lr}
   123bc:	add	fp, sp, #16
   123c0:	mov	r5, r0
   123c4:	ldrb	r0, [r1, #128]	; 0x80
   123c8:	tst	r0, #2
   123cc:	bne	124d0 <rb_base64_encode@plt+0x14c4>
   123d0:	ldr	r0, [r1, #16]
   123d4:	mov	r4, r1
   123d8:	mov	r1, r5
   123dc:	bl	10fe8 <rb_rawbuf_flush@plt>
   123e0:	cmp	r0, #1
   123e4:	blt	12410 <rb_base64_encode@plt+0x1404>
   123e8:	add	r6, r4, #96	; 0x60
   123ec:	ldrd	r2, [r6]
   123f0:	mov	r1, r5
   123f4:	adds	r2, r2, r0
   123f8:	adc	r3, r3, r0, asr #31
   123fc:	strd	r2, [r6]
   12400:	ldr	r0, [r4, #16]
   12404:	bl	10fe8 <rb_rawbuf_flush@plt>
   12408:	cmp	r0, #0
   1240c:	bgt	123ec <rb_base64_encode@plt+0x13e0>
   12410:	cmp	r0, #0
   12414:	beq	1245c <rb_base64_encode@plt+0x1450>
   12418:	bl	11000 <__errno_location@plt>
   1241c:	mov	r5, r0
   12420:	ldr	r0, [r0]
   12424:	bl	10df0 <rb_ignore_errno@plt>
   12428:	cmp	r0, #0
   1242c:	beq	12480 <rb_base64_encode@plt+0x1474>
   12430:	ldr	r0, [r4, #16]
   12434:	bl	10f28 <rb_rawbuf_length@plt>
   12438:	mov	r1, r0
   1243c:	ldr	r0, [r4, #84]	; 0x54
   12440:	cmp	r1, #1
   12444:	blt	124a4 <rb_base64_encode@plt+0x1498>
   12448:	movw	r2, #9144	; 0x23b8
   1244c:	mov	r1, #2
   12450:	mov	r3, r4
   12454:	movt	r2, #1
   12458:	b	124b0 <rb_base64_encode@plt+0x14a4>
   1245c:	movw	r2, #16040	; 0x3ea8
   12460:	movw	r3, #16043	; 0x3eab
   12464:	mov	r0, r4
   12468:	mov	r1, #1
   1246c:	movt	r2, #1
   12470:	movt	r3, #1
   12474:	bl	11b80 <rb_base64_encode@plt+0xb74>
   12478:	bl	11000 <__errno_location@plt>
   1247c:	mov	r5, r0
   12480:	ldr	r0, [r5]
   12484:	bl	10dc0 <strerror@plt>
   12488:	movw	r2, #16027	; 0x3e9b
   1248c:	mov	r3, r0
   12490:	mov	r0, r4
   12494:	mov	r1, #1
   12498:	movt	r2, #1
   1249c:	pop	{r4, r5, r6, sl, fp, lr}
   124a0:	b	11b80 <rb_base64_encode@plt+0xb74>
   124a4:	mov	r1, #2
   124a8:	mov	r2, #0
   124ac:	mov	r3, #0
   124b0:	bl	10e08 <rb_setselect@plt>
   124b4:	ldrb	r0, [r4, #128]	; 0x80
   124b8:	tst	r0, #1
   124bc:	popeq	{r4, r5, r6, sl, fp, pc}
   124c0:	ldr	r0, [r4, #16]
   124c4:	bl	10f28 <rb_rawbuf_length@plt>
   124c8:	cmp	r0, #0
   124cc:	beq	124d4 <rb_base64_encode@plt+0x14c8>
   124d0:	pop	{r4, r5, r6, sl, fp, pc}
   124d4:	ldrb	r0, [r4, #128]	; 0x80
   124d8:	mov	r1, r4
   124dc:	and	r0, r0, #254	; 0xfe
   124e0:	strb	r0, [r4, #128]	; 0x80
   124e4:	ldr	r0, [r4, #88]	; 0x58
   124e8:	pop	{r4, r5, r6, sl, fp, lr}
   124ec:	b	1199c <rb_base64_encode@plt+0x990>
   124f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124f4:	add	fp, sp, #28
   124f8:	sub	sp, sp, #20
   124fc:	mov	r0, r1
   12500:	mov	r4, r1
   12504:	add	r8, r1, #44	; 0x2c
   12508:	ldr	sl, [r0, #36]!	; 0x24
   1250c:	cmp	sl, #0
   12510:	str	r0, [sp, #16]
   12514:	beq	12610 <rb_base64_encode@plt+0x1604>
   12518:	str	r4, [sp, #12]
   1251c:	ldr	r5, [sl]
   12520:	movw	r7, #20720	; 0x50f0
   12524:	ldr	r0, [r4, #16]
   12528:	ldr	r9, [sl, #8]
   1252c:	movt	r7, #2
   12530:	ldr	r7, [r7]
   12534:	ldr	r1, [r5, #16]
   12538:	ldr	r3, [r5, #12]
   1253c:	ldr	r2, [r5, #36]	; 0x24
   12540:	stm	sp, {r1, r7}
   12544:	add	r7, r5, #20
   12548:	mov	r1, r7
   1254c:	bl	10e20 <rb_send_fd_buf@plt>
   12550:	mov	r6, r0
   12554:	cmp	r0, #1
   12558:	blt	125e0 <rb_base64_encode@plt+0x15d4>
   1255c:	ldr	r0, [sl, #8]
   12560:	ldr	r1, [sl, #4]
   12564:	ldr	r2, [sp, #16]
   12568:	cmp	r0, #0
   1256c:	streq	r1, [r4, #40]	; 0x28
   12570:	strne	r1, [r0, #4]
   12574:	ldrne	r1, [sl, #4]
   12578:	cmp	r1, #0
   1257c:	addne	r2, r1, #8
   12580:	str	r0, [r2]
   12584:	mov	r0, #0
   12588:	str	r0, [sl, #4]
   1258c:	str	r0, [sl, #8]
   12590:	ldr	r0, [r8]
   12594:	sub	r0, r0, #1
   12598:	str	r0, [r8]
   1259c:	ldr	r0, [r5, #36]	; 0x24
   125a0:	cmp	r0, #1
   125a4:	blt	125c4 <rb_base64_encode@plt+0x15b8>
   125a8:	mov	r4, #0
   125ac:	ldr	r0, [r7, r4, lsl #2]
   125b0:	bl	10f04 <rb_close@plt>
   125b4:	ldr	r0, [r5, #36]	; 0x24
   125b8:	add	r4, r4, #1
   125bc:	cmp	r4, r0
   125c0:	blt	125ac <rb_base64_encode@plt+0x15a0>
   125c4:	ldr	r0, [r5, #12]
   125c8:	cmp	r0, #0
   125cc:	beq	125d4 <rb_base64_encode@plt+0x15c8>
   125d0:	bl	10e8c <free@plt>
   125d4:	mov	r0, r5
   125d8:	bl	10e8c <free@plt>
   125dc:	ldr	r4, [sp, #12]
   125e0:	cmp	r6, #0
   125e4:	beq	12640 <rb_base64_encode@plt+0x1634>
   125e8:	cmn	r6, #1
   125ec:	bgt	12604 <rb_base64_encode@plt+0x15f8>
   125f0:	bl	11000 <__errno_location@plt>
   125f4:	ldr	r0, [r0]
   125f8:	bl	10df0 <rb_ignore_errno@plt>
   125fc:	cmp	r0, #0
   12600:	beq	12640 <rb_base64_encode@plt+0x1634>
   12604:	cmp	r9, #0
   12608:	mov	sl, r9
   1260c:	bne	1251c <rb_base64_encode@plt+0x1510>
   12610:	ldr	r0, [r8]
   12614:	cmp	r0, #0
   12618:	subeq	sp, fp, #28
   1261c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12620:	ldr	r0, [r4, #16]
   12624:	movw	r2, #9456	; 0x24f0
   12628:	mov	r1, #2
   1262c:	mov	r3, r4
   12630:	movt	r2, #1
   12634:	sub	sp, fp, #28
   12638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1263c:	b	10e08 <rb_setselect@plt>
   12640:	mov	r0, #0
   12644:	bl	10ff4 <exit@plt>
   12648:	push	{r4, r5, fp, lr}
   1264c:	add	fp, sp, #8
   12650:	mov	r4, r0
   12654:	ldr	r0, [r0, #16]
   12658:	bl	10f28 <rb_rawbuf_length@plt>
   1265c:	mov	r5, #0
   12660:	cmp	r0, #4096	; 0x1000
   12664:	blt	126a4 <rb_base64_encode@plt+0x1698>
   12668:	ldrb	r0, [r4, #128]	; 0x80
   1266c:	mov	r1, #1
   12670:	mov	r2, #0
   12674:	mov	r3, #0
   12678:	mov	r5, #1
   1267c:	orr	r0, r0, #1
   12680:	strb	r0, [r4, #128]	; 0x80
   12684:	ldr	r0, [r4, #88]	; 0x58
   12688:	bl	10e08 <rb_setselect@plt>
   1268c:	ldrb	r0, [r4, #128]	; 0x80
   12690:	tst	r0, #8
   12694:	beq	126a4 <rb_base64_encode@plt+0x1698>
   12698:	ldr	r0, [r4, #84]	; 0x54
   1269c:	mov	r1, r4
   126a0:	bl	123b8 <rb_base64_encode@plt+0x13ac>
   126a4:	mov	r0, r5
   126a8:	pop	{r4, r5, fp, pc}
   126ac:	andeq	r0, r0, r0
   126b0:	add	r2, pc, #40	; 0x28
   126b4:	movw	r1, #57840	; 0xe1f0
   126b8:	vld1.64	{d16-d17}, [r2]
   126bc:	movt	r1, #50130	; 0xc3d2
   126c0:	str	r1, [r0, #16]
   126c4:	mov	r1, #24
   126c8:	vst1.32	{d16-d17}, [r0], r1
   126cc:	mov	r1, #0
   126d0:	str	r1, [r0]
   126d4:	str	r1, [r0, #4]
   126d8:	bx	lr
   126dc:	nop	{0}
   126e0:	strbvs	r2, [r5, -r1, lsl #6]
   126e4:	svc	0x00cdab89
   126e8:	ldmls	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
   126ec:	eorsne	r5, r2, r6, ror r4
   126f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126f4:	add	fp, sp, #24
   126f8:	mov	r5, r1
   126fc:	mov	r7, r0
   12700:	ldrd	r0, [r0, #24]
   12704:	mov	r4, r2
   12708:	adds	r2, r0, r2, lsl #3
   1270c:	adc	r3, r1, #0
   12710:	strd	r2, [r7, #24]
   12714:	ubfx	r9, r0, #3, #6
   12718:	add	r0, r9, r4
   1271c:	cmp	r0, #63	; 0x3f
   12720:	bls	1277c <rb_base64_encode@plt+0x1770>
   12724:	add	r8, r7, #32
   12728:	rsb	r6, r9, #64	; 0x40
   1272c:	mov	r1, r5
   12730:	add	r0, r8, r9
   12734:	mov	r2, r6
   12738:	bl	10ee0 <memcpy@plt>
   1273c:	mov	r0, r7
   12740:	mov	r1, r8
   12744:	bl	1279c <rb_base64_encode@plt+0x1790>
   12748:	rsb	r0, r9, #127	; 0x7f
   1274c:	cmp	r0, r4
   12750:	bcs	12788 <rb_base64_encode@plt+0x177c>
   12754:	add	r1, r5, r6
   12758:	mov	r0, r7
   1275c:	bl	1279c <rb_base64_encode@plt+0x1790>
   12760:	add	r1, r6, #127	; 0x7f
   12764:	add	r0, r6, #64	; 0x40
   12768:	cmp	r1, r4
   1276c:	mov	r6, r0
   12770:	bcc	12754 <rb_base64_encode@plt+0x1748>
   12774:	mov	r6, r0
   12778:	b	12788 <rb_base64_encode@plt+0x177c>
   1277c:	add	r0, r7, r9
   12780:	mov	r6, #0
   12784:	add	r8, r0, #32
   12788:	add	r1, r5, r6
   1278c:	sub	r2, r4, r6
   12790:	mov	r0, r8
   12794:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   12798:	b	10ee0 <memcpy@plt>
   1279c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127a0:	add	fp, sp, #28
   127a4:	sub	sp, sp, #180	; 0xb4
   127a8:	ldr	r3, [r0, #8]
   127ac:	ldr	r4, [r0, #4]
   127b0:	ldr	r6, [r0]
   127b4:	ldr	r5, [r0, #12]
   127b8:	mov	ip, r0
   127bc:	str	r0, [sp, #76]	; 0x4c
   127c0:	ldr	r0, [r1, #4]
   127c4:	ldr	r7, [r1]
   127c8:	ldr	sl, [r1, #8]
   127cc:	ldr	r9, [r1, #12]
   127d0:	eor	r2, r3, r4, ror #2
   127d4:	str	r0, [fp, #-36]	; 0xffffffdc
   127d8:	rev	r0, r0
   127dc:	str	r7, [fp, #-40]	; 0xffffffd8
   127e0:	mov	r8, r3
   127e4:	str	r3, [sp, #80]	; 0x50
   127e8:	str	r5, [sp, #88]	; 0x58
   127ec:	str	r4, [sp, #92]	; 0x5c
   127f0:	str	r6, [sp, #84]	; 0x54
   127f4:	str	sl, [fp, #-68]	; 0xffffffbc
   127f8:	str	r9, [sp, #104]	; 0x68
   127fc:	and	r2, r2, r6
   12800:	add	r0, r0, r5
   12804:	eor	r2, r2, r3
   12808:	add	r0, r0, r2
   1280c:	eor	r2, r5, r3
   12810:	rev	r3, r7
   12814:	ldr	r7, [ip, #16]
   12818:	ldr	ip, [r1, #52]	; 0x34
   1281c:	and	r2, r2, r4
   12820:	add	r3, r3, r6, ror #27
   12824:	eor	r2, r2, r5
   12828:	add	r3, r3, r7
   1282c:	str	r7, [sp, #72]	; 0x48
   12830:	movw	r7, #31129	; 0x7999
   12834:	str	ip, [fp, #-72]	; 0xffffffb8
   12838:	movt	r7, #23170	; 0x5a82
   1283c:	add	r2, r3, r2
   12840:	add	r3, r2, r7
   12844:	rev	r2, sl
   12848:	mov	lr, r7
   1284c:	ldr	sl, [r1, #60]	; 0x3c
   12850:	add	r0, r0, r3, ror #27
   12854:	add	r2, r2, r8
   12858:	mov	r8, r6
   1285c:	add	r5, r0, r7
   12860:	ror	r0, r4, #2
   12864:	mov	r7, r4
   12868:	eor	r0, r0, r6, ror #2
   1286c:	and	r0, r3, r0
   12870:	str	sl, [fp, #-80]	; 0xffffffb0
   12874:	eor	r0, r0, r4, ror #2
   12878:	add	r0, r2, r0
   1287c:	rev	r2, r9
   12880:	ldr	r9, [r1, #56]	; 0x38
   12884:	add	r0, r0, r5, ror #27
   12888:	add	r2, r2, r7, ror #2
   1288c:	ldr	r7, [r1, #16]
   12890:	add	r4, r0, lr
   12894:	ror	r0, r3, #2
   12898:	eor	r0, r0, r6, ror #2
   1289c:	and	r0, r5, r0
   128a0:	str	r9, [fp, #-76]	; 0xffffffb4
   128a4:	eor	r0, r0, r6, ror #2
   128a8:	rev	r6, r7
   128ac:	str	r7, [fp, #-92]	; 0xffffffa4
   128b0:	ldr	r7, [r1, #20]
   128b4:	add	r0, r2, r0
   128b8:	ror	r2, r5, #2
   128bc:	add	r6, r6, r8, ror #2
   128c0:	eor	r2, r2, r3, ror #2
   128c4:	add	r0, r0, r4, ror #27
   128c8:	and	r2, r4, r2
   128cc:	add	r0, r0, lr
   128d0:	eor	r2, r2, r3, ror #2
   128d4:	str	r7, [fp, #-100]	; 0xffffff9c
   128d8:	rev	r7, r7
   128dc:	add	r2, r6, r2
   128e0:	ror	r6, r4, #2
   128e4:	add	r3, r7, r3, ror #2
   128e8:	ldr	r7, [r1, #24]
   128ec:	eor	r6, r6, r5, ror #2
   128f0:	add	r2, r2, r0, ror #27
   128f4:	and	r6, r0, r6
   128f8:	add	r2, r2, lr
   128fc:	eor	r8, r6, r5, ror #2
   12900:	ror	r6, r0, #2
   12904:	eor	r6, r6, r4, ror #2
   12908:	add	r3, r3, r8
   1290c:	str	r7, [fp, #-48]	; 0xffffffd0
   12910:	rev	r7, r7
   12914:	and	r6, r2, r6
   12918:	add	r3, r3, r2, ror #27
   1291c:	add	r5, r7, r5, ror #2
   12920:	eor	r8, r6, r4, ror #2
   12924:	ldr	r6, [r1, #28]
   12928:	add	r3, r3, lr
   1292c:	add	r5, r5, r8
   12930:	add	r5, r5, r3, ror #27
   12934:	add	r7, r5, lr
   12938:	ror	r5, r2, #2
   1293c:	eor	r5, r5, r0, ror #2
   12940:	str	r6, [fp, #-96]	; 0xffffffa0
   12944:	rev	r6, r6
   12948:	and	r5, r3, r5
   1294c:	add	r4, r6, r4, ror #2
   12950:	ldr	r6, [r1, #32]
   12954:	eor	r8, r5, r0, ror #2
   12958:	add	r4, r4, r8
   1295c:	add	r4, r4, r7, ror #27
   12960:	add	r5, r4, lr
   12964:	ror	r4, r3, #2
   12968:	str	r6, [fp, #-32]	; 0xffffffe0
   1296c:	rev	r6, r6
   12970:	eor	r4, r4, r2, ror #2
   12974:	add	r0, r6, r0, ror #2
   12978:	ldr	r6, [r1, #36]	; 0x24
   1297c:	and	r4, r7, r4
   12980:	eor	r8, r4, r2, ror #2
   12984:	ror	r4, r7, #2
   12988:	eor	r4, r4, r3, ror #2
   1298c:	add	r0, r0, r8
   12990:	and	r4, r5, r4
   12994:	str	r6, [fp, #-52]	; 0xffffffcc
   12998:	rev	r6, r6
   1299c:	add	r0, r0, r5, ror #27
   129a0:	eor	r8, r4, r3, ror #2
   129a4:	add	r2, r6, r2, ror #2
   129a8:	add	r0, r0, lr
   129ac:	add	r2, r2, r8
   129b0:	add	r2, r2, r0, ror #27
   129b4:	add	r6, r2, lr
   129b8:	ror	r2, r5, #2
   129bc:	eor	r2, r2, r7, ror #2
   129c0:	and	r2, r0, r2
   129c4:	eor	r8, r2, r7, ror #2
   129c8:	ldr	r2, [r1, #40]	; 0x28
   129cc:	rev	r4, r2
   129d0:	str	r2, [fp, #-84]	; 0xffffffac
   129d4:	add	r3, r4, r3, ror #2
   129d8:	add	r2, r3, r8
   129dc:	ldr	r3, [r1, #44]	; 0x2c
   129e0:	add	r2, r2, r6, ror #27
   129e4:	add	r8, r2, lr
   129e8:	ror	r2, r0, #2
   129ec:	eor	r2, r2, r5, ror #2
   129f0:	and	r2, r6, r2
   129f4:	str	r3, [fp, #-64]	; 0xffffffc0
   129f8:	rev	r3, r3
   129fc:	add	r3, r3, r7, ror #2
   12a00:	eor	r2, r2, r5, ror #2
   12a04:	ldr	r7, [fp, #-40]	; 0xffffffd8
   12a08:	add	r2, r3, r2
   12a0c:	ldr	r3, [r1, #48]	; 0x30
   12a10:	rev	r1, sl
   12a14:	add	r2, r2, r8, ror #27
   12a18:	str	r1, [fp, #-88]	; 0xffffffa8
   12a1c:	add	r1, r1, r8, ror #2
   12a20:	add	r4, r2, lr
   12a24:	ror	r2, r6, #2
   12a28:	eor	r2, r2, r0, ror #2
   12a2c:	and	r2, r8, r2
   12a30:	str	r3, [fp, #-44]	; 0xffffffd4
   12a34:	rev	r3, r3
   12a38:	add	r3, r3, r5, ror #2
   12a3c:	eor	r2, r2, r0, ror #2
   12a40:	rev	r5, ip
   12a44:	add	r2, r3, r2
   12a48:	ror	r3, r8, #2
   12a4c:	add	r0, r5, r0, ror #2
   12a50:	rev	r5, r9
   12a54:	eor	r3, r3, r6, ror #2
   12a58:	add	r2, r2, r4, ror #27
   12a5c:	str	r5, [sp, #96]	; 0x60
   12a60:	add	r5, r5, r6, ror #2
   12a64:	and	r3, r4, r3
   12a68:	add	r2, r2, lr
   12a6c:	eor	r3, r3, r6, ror #2
   12a70:	add	r0, r0, r3
   12a74:	add	r0, r0, r2, ror #27
   12a78:	add	r3, r0, lr
   12a7c:	ror	r0, r4, #2
   12a80:	eor	r0, r0, r8, ror #2
   12a84:	and	r0, r2, r0
   12a88:	eor	r0, r0, r8, ror #2
   12a8c:	ldr	r8, [fp, #-68]	; 0xffffffbc
   12a90:	add	r0, r5, r0
   12a94:	ror	r5, r2, #2
   12a98:	eor	r5, r5, r4, ror #2
   12a9c:	add	r0, r0, r3, ror #27
   12aa0:	and	r5, r3, r5
   12aa4:	add	r0, r0, lr
   12aa8:	eor	r6, r8, r7
   12aac:	ldr	r7, [fp, #-32]	; 0xffffffe0
   12ab0:	eor	r5, r5, r4, ror #2
   12ab4:	add	r1, r1, r5
   12ab8:	ror	r5, r3, #2
   12abc:	eor	r5, r5, r2, ror #2
   12ac0:	add	r1, r1, r0, ror #27
   12ac4:	and	r5, r0, r5
   12ac8:	add	r1, r1, lr
   12acc:	eor	r6, r6, r7
   12ad0:	eor	r5, r5, r2, ror #2
   12ad4:	eor	r6, r6, ip
   12ad8:	mov	ip, lr
   12adc:	rev	r7, r6
   12ae0:	ror	r6, r7, #31
   12ae4:	str	r7, [fp, #-56]	; 0xffffffc8
   12ae8:	ldr	r7, [fp, #-36]	; 0xffffffdc
   12aec:	add	r6, r6, r4, ror #2
   12af0:	add	r6, r6, r5
   12af4:	add	r6, r6, r1, ror #27
   12af8:	add	r4, r6, lr
   12afc:	ldr	lr, [sp, #104]	; 0x68
   12b00:	ror	r6, r0, #2
   12b04:	eor	r6, r6, r3, ror #2
   12b08:	and	r6, r1, r6
   12b0c:	eor	r6, r6, r3, ror #2
   12b10:	eor	r5, lr, r7
   12b14:	ldr	r7, [fp, #-52]	; 0xffffffcc
   12b18:	eor	r5, r5, r7
   12b1c:	eor	r5, r5, r9
   12b20:	mov	r9, ip
   12b24:	rev	r5, r5
   12b28:	ror	r7, r5, #31
   12b2c:	str	r5, [fp, #-60]	; 0xffffffc4
   12b30:	ldr	r5, [fp, #-84]	; 0xffffffac
   12b34:	add	r2, r7, r2, ror #2
   12b38:	ldr	r7, [fp, #-92]	; 0xffffffa4
   12b3c:	add	r2, r2, r6
   12b40:	add	r2, r2, r4, ror #27
   12b44:	add	ip, r2, ip
   12b48:	ror	r2, r1, #2
   12b4c:	eor	r6, r7, r8
   12b50:	eor	r2, r2, r0, ror #2
   12b54:	eor	r6, r6, r5
   12b58:	ldr	r5, [fp, #-64]	; 0xffffffc0
   12b5c:	and	r2, r4, r2
   12b60:	eor	r6, r6, sl
   12b64:	ldr	sl, [fp, #-100]	; 0xffffff9c
   12b68:	eor	r2, r2, r0, ror #2
   12b6c:	rev	r8, r6
   12b70:	ror	r6, r8, #31
   12b74:	str	r8, [fp, #-68]	; 0xffffffbc
   12b78:	add	r3, r6, r3, ror #2
   12b7c:	str	r6, [sp, #68]	; 0x44
   12b80:	eor	r6, sl, lr
   12b84:	add	r2, r3, r2
   12b88:	ror	r3, r4, #2
   12b8c:	eor	r6, r6, r5
   12b90:	ldr	r5, [fp, #-56]	; 0xffffffc8
   12b94:	eor	r3, r3, r1, ror #2
   12b98:	add	r2, r2, ip, ror #27
   12b9c:	rev	r6, r6
   12ba0:	and	r3, ip, r3
   12ba4:	add	r2, r2, r9
   12ba8:	eor	r3, r3, r1, ror #2
   12bac:	eor	r6, r6, r5, ror #31
   12bb0:	ror	r5, r6, #31
   12bb4:	str	r6, [fp, #-40]	; 0xffffffd8
   12bb8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   12bbc:	add	r0, r5, r0, ror #2
   12bc0:	str	r5, [sp, #60]	; 0x3c
   12bc4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   12bc8:	add	r0, r0, r3
   12bcc:	add	r0, r0, r2, ror #27
   12bd0:	eor	r7, r6, r7
   12bd4:	add	r3, r0, r9
   12bd8:	ror	r0, ip, #2
   12bdc:	eor	r7, r7, r5
   12be0:	ldr	r5, [fp, #-60]	; 0xffffffc4
   12be4:	eor	r0, r0, r4, ror #2
   12be8:	rev	r7, r7
   12bec:	eor	r0, r0, r2
   12bf0:	eor	r9, r7, r5, ror #31
   12bf4:	ror	r5, r9, #31
   12bf8:	str	r9, [fp, #-92]	; 0xffffffa4
   12bfc:	add	r1, r5, r1, ror #2
   12c00:	str	r5, [sp, #56]	; 0x38
   12c04:	ldr	r5, [fp, #-96]	; 0xffffffa0
   12c08:	add	r0, r1, r0
   12c0c:	movw	r1, #60321	; 0xeba1
   12c10:	add	r0, r0, r3, ror #27
   12c14:	movt	r1, #28377	; 0x6ed9
   12c18:	add	r0, r0, r1
   12c1c:	ror	r1, r2, #2
   12c20:	eor	r1, r1, ip, ror #2
   12c24:	eor	r7, r5, sl
   12c28:	eor	lr, r1, r3
   12c2c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   12c30:	eor	r7, r7, r1
   12c34:	rev	r7, r7
   12c38:	eor	r7, r7, r8, ror #31
   12c3c:	ldr	r8, [fp, #-32]	; 0xffffffe0
   12c40:	ror	r1, r7, #31
   12c44:	mov	sl, r7
   12c48:	str	r7, [fp, #-100]	; 0xffffff9c
   12c4c:	add	r7, r1, r4, ror #2
   12c50:	str	r1, [sp, #52]	; 0x34
   12c54:	add	r1, r7, lr
   12c58:	movw	r7, #60321	; 0xeba1
   12c5c:	add	r1, r1, r0, ror #27
   12c60:	movt	r7, #28377	; 0x6ed9
   12c64:	eor	r4, r8, r6
   12c68:	ldr	r6, [fp, #-40]	; 0xffffffd8
   12c6c:	add	lr, r1, r7
   12c70:	ldr	r7, [fp, #-76]	; 0xffffffb4
   12c74:	ror	r1, r3, #2
   12c78:	eor	r1, r1, r2, ror #2
   12c7c:	eor	r1, r1, r0
   12c80:	eor	r4, r4, r7
   12c84:	rev	r4, r4
   12c88:	eor	r4, r4, r6, ror #31
   12c8c:	ror	r6, r4, #31
   12c90:	str	r4, [fp, #-48]	; 0xffffffd0
   12c94:	add	r7, r6, ip, ror #2
   12c98:	str	r6, [sp, #44]	; 0x2c
   12c9c:	movw	r6, #60321	; 0xeba1
   12ca0:	add	r1, r7, r1
   12ca4:	ldr	r7, [fp, #-52]	; 0xffffffcc
   12ca8:	movt	r6, #28377	; 0x6ed9
   12cac:	add	r1, r1, lr, ror #27
   12cb0:	add	ip, r1, r6
   12cb4:	ror	r1, r0, #2
   12cb8:	eor	r1, r1, r3, ror #2
   12cbc:	eor	r4, r7, r5
   12cc0:	ldr	r5, [fp, #-80]	; 0xffffffb0
   12cc4:	eor	r1, r1, lr
   12cc8:	eor	r4, r4, r5
   12ccc:	rev	r4, r4
   12cd0:	eor	r4, r4, r9, ror #31
   12cd4:	ldr	r9, [fp, #-84]	; 0xffffffac
   12cd8:	ror	r5, r4, #31
   12cdc:	str	r4, [fp, #-36]	; 0xffffffdc
   12ce0:	add	r2, r5, r2, ror #2
   12ce4:	str	r5, [sp, #24]
   12ce8:	mov	r5, r6
   12cec:	add	r1, r2, r1
   12cf0:	add	r1, r1, ip, ror #27
   12cf4:	eor	r4, r9, r8
   12cf8:	ldr	r8, [fp, #-44]	; 0xffffffd4
   12cfc:	add	r2, r1, r6
   12d00:	ldr	r6, [fp, #-56]	; 0xffffffc8
   12d04:	rev	r4, r4
   12d08:	ror	r1, lr, #2
   12d0c:	eor	r1, r1, r0, ror #2
   12d10:	eor	r1, r1, ip
   12d14:	eor	r4, r4, r6, ror #31
   12d18:	mov	r6, r5
   12d1c:	eor	r4, r4, sl, ror #31
   12d20:	str	r4, [fp, #-32]	; 0xffffffe0
   12d24:	ror	r4, r4, #31
   12d28:	add	r3, r4, r3, ror #2
   12d2c:	str	r4, [sp, #16]
   12d30:	ldr	r4, [fp, #-60]	; 0xffffffc4
   12d34:	add	r1, r3, r1
   12d38:	add	r1, r1, r2, ror #27
   12d3c:	add	r3, r1, r5
   12d40:	ldr	r5, [fp, #-64]	; 0xffffffc0
   12d44:	ror	r1, ip, #2
   12d48:	eor	r1, r1, lr, ror #2
   12d4c:	eor	r1, r1, r2
   12d50:	eor	r7, r5, r7
   12d54:	rev	r7, r7
   12d58:	eor	r7, r7, r4, ror #31
   12d5c:	ldr	r4, [fp, #-48]	; 0xffffffd0
   12d60:	eor	sl, r7, r4, ror #31
   12d64:	ldr	r4, [fp, #-68]	; 0xffffffbc
   12d68:	ror	r7, sl, #31
   12d6c:	str	sl, [sp, #100]	; 0x64
   12d70:	add	r0, r7, r0, ror #2
   12d74:	str	r7, [sp, #64]	; 0x40
   12d78:	eor	r7, r8, r9
   12d7c:	rev	r7, r7
   12d80:	add	r0, r0, r1
   12d84:	eor	r7, r7, r4, ror #31
   12d88:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12d8c:	add	r0, r0, r3, ror #27
   12d90:	add	r1, r0, r6
   12d94:	ror	r0, r2, #2
   12d98:	eor	r0, r0, ip, ror #2
   12d9c:	eor	r0, r0, r3
   12da0:	eor	r4, r7, r4, ror #31
   12da4:	str	r4, [fp, #-52]	; 0xffffffcc
   12da8:	ror	r4, r4, #31
   12dac:	add	r7, r4, lr, ror #2
   12db0:	str	r4, [sp]
   12db4:	add	r0, r7, r0
   12db8:	add	r0, r0, r1, ror #27
   12dbc:	add	lr, r0, r6
   12dc0:	ldr	r6, [fp, #-72]	; 0xffffffb8
   12dc4:	ror	r0, r3, #2
   12dc8:	eor	r0, r0, r2, ror #2
   12dcc:	eor	r4, r0, r1
   12dd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12dd4:	eor	r7, r6, r5
   12dd8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12ddc:	rev	r7, r7
   12de0:	eor	r7, r7, r0, ror #31
   12de4:	eor	r9, r7, r5, ror #31
   12de8:	ldr	r5, [fp, #-76]	; 0xffffffb4
   12dec:	ror	r0, r9, #31
   12df0:	str	r9, [sp, #104]	; 0x68
   12df4:	add	r7, r0, ip, ror #2
   12df8:	str	r0, [sp, #12]
   12dfc:	movw	ip, #60321	; 0xeba1
   12e00:	add	r0, r7, r4
   12e04:	movw	r7, #60321	; 0xeba1
   12e08:	movt	ip, #28377	; 0x6ed9
   12e0c:	eor	r4, r5, r8
   12e10:	ldr	r5, [fp, #-92]	; 0xffffffa4
   12e14:	add	r0, r0, lr, ror #27
   12e18:	movt	r7, #28377	; 0x6ed9
   12e1c:	rev	r4, r4
   12e20:	add	r0, r0, r7
   12e24:	ror	r7, r1, #2
   12e28:	eor	r7, r7, r3, ror #2
   12e2c:	eor	r7, r7, lr
   12e30:	eor	r4, r4, r5, ror #31
   12e34:	eor	r5, r4, sl, ror #31
   12e38:	ldr	sl, [fp, #-56]	; 0xffffffc8
   12e3c:	ror	r4, r5, #31
   12e40:	str	r5, [fp, #-96]	; 0xffffffa0
   12e44:	add	r2, r4, r2, ror #2
   12e48:	str	r4, [sp, #8]
   12e4c:	ror	r4, lr, #2
   12e50:	add	r2, r2, r7
   12e54:	ldr	r7, [fp, #-80]	; 0xffffffb0
   12e58:	eor	r4, r4, r1, ror #2
   12e5c:	eor	r4, r4, r0
   12e60:	add	r2, r2, r0, ror #27
   12e64:	add	r2, r2, ip
   12e68:	eor	r7, r7, r6
   12e6c:	ldr	r6, [fp, #-100]	; 0xffffff9c
   12e70:	rev	r7, r7
   12e74:	eor	r7, r7, r6, ror #31
   12e78:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12e7c:	eor	r6, r7, r6, ror #31
   12e80:	ldr	r7, [sp, #96]	; 0x60
   12e84:	str	r6, [fp, #-44]	; 0xffffffd4
   12e88:	ror	r6, r6, #31
   12e8c:	add	r3, r6, r3, ror #2
   12e90:	str	r6, [sp, #4]
   12e94:	ldr	r6, [fp, #-48]	; 0xffffffd0
   12e98:	add	r3, r3, r4
   12e9c:	ror	r4, r0, #2
   12ea0:	eor	r7, r7, sl, ror #31
   12ea4:	eor	r4, r4, lr, ror #2
   12ea8:	add	r3, r3, r2, ror #27
   12eac:	eor	r4, r4, r2
   12eb0:	add	r3, r3, ip
   12eb4:	eor	r7, r7, r6, ror #31
   12eb8:	eor	r8, r7, r9, ror #31
   12ebc:	ldr	r7, [fp, #-88]	; 0xffffffa8
   12ec0:	ror	r6, r8, #31
   12ec4:	str	r8, [fp, #-76]	; 0xffffffb4
   12ec8:	add	r1, r6, r1, ror #2
   12ecc:	str	r6, [sp, #20]
   12ed0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   12ed4:	add	r1, r1, r4
   12ed8:	ror	r4, r2, #2
   12edc:	add	r1, r1, r3, ror #27
   12ee0:	eor	r4, r4, r0, ror #2
   12ee4:	add	r1, r1, ip
   12ee8:	ldr	ip, [fp, #-60]	; 0xffffffc4
   12eec:	eor	r4, r4, r3
   12ef0:	eor	r7, r7, ip, ror #31
   12ef4:	eor	r7, r7, r6, ror #31
   12ef8:	movw	r6, #60321	; 0xeba1
   12efc:	eor	r9, r7, r5, ror #31
   12f00:	movt	r6, #28377	; 0x6ed9
   12f04:	ror	r5, r9, #31
   12f08:	str	r9, [fp, #-88]	; 0xffffffa8
   12f0c:	add	r7, r5, lr, ror #2
   12f10:	str	r5, [sp, #28]
   12f14:	ldr	r5, [sp, #68]	; 0x44
   12f18:	add	r7, r7, r4
   12f1c:	ror	r4, r3, #2
   12f20:	add	r7, r7, r1, ror #27
   12f24:	eor	r4, r4, r2, ror #2
   12f28:	add	r7, r7, r6
   12f2c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   12f30:	eor	r4, r4, r1
   12f34:	eor	r5, r5, sl, ror #31
   12f38:	movw	sl, #60321	; 0xeba1
   12f3c:	movt	sl, #28377	; 0x6ed9
   12f40:	eor	r5, r5, r6, ror #31
   12f44:	ldr	r6, [fp, #-44]	; 0xffffffd4
   12f48:	eor	r6, r5, r6, ror #31
   12f4c:	ror	r5, r6, #31
   12f50:	str	r6, [sp, #96]	; 0x60
   12f54:	ldr	r6, [sp, #60]	; 0x3c
   12f58:	add	r0, r5, r0, ror #2
   12f5c:	str	r5, [sp, #48]	; 0x30
   12f60:	ror	r5, r1, #2
   12f64:	add	r0, r0, r4
   12f68:	eor	r5, r5, r3, ror #2
   12f6c:	eor	r5, r5, r7
   12f70:	add	r0, r0, r7, ror #27
   12f74:	eor	r4, r6, ip, ror #31
   12f78:	ldr	r6, [sp, #100]	; 0x64
   12f7c:	add	r0, r0, sl
   12f80:	eor	r4, r4, r6, ror #31
   12f84:	eor	r4, r4, r8, ror #31
   12f88:	ror	r6, r4, #31
   12f8c:	mov	r8, r4
   12f90:	str	r4, [fp, #-80]	; 0xffffffb0
   12f94:	ldr	r4, [sp, #56]	; 0x38
   12f98:	add	r2, r6, r2, ror #2
   12f9c:	str	r6, [sp, #32]
   12fa0:	ldr	r6, [fp, #-68]	; 0xffffffbc
   12fa4:	add	r2, r2, r5
   12fa8:	ror	r5, r7, #2
   12fac:	eor	r5, r5, r1, ror #2
   12fb0:	add	r2, r2, r0, ror #27
   12fb4:	eor	lr, r5, r0
   12fb8:	add	r2, r2, sl
   12fbc:	eor	r4, r4, r6, ror #31
   12fc0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   12fc4:	eor	r4, r4, r6, ror #31
   12fc8:	eor	r4, r4, r9, ror #31
   12fcc:	mov	r9, sl
   12fd0:	ror	r5, r4, #31
   12fd4:	mov	r6, r4
   12fd8:	str	r4, [fp, #-84]	; 0xffffffac
   12fdc:	ldr	r4, [sp, #52]	; 0x34
   12fe0:	add	r3, r5, r3, ror #2
   12fe4:	str	r5, [sp, #36]	; 0x24
   12fe8:	ldr	r5, [fp, #-40]	; 0xffffffd8
   12fec:	add	r3, r3, lr
   12ff0:	add	r3, r3, r2, ror #27
   12ff4:	add	lr, r3, sl
   12ff8:	ldr	sl, [sp, #96]	; 0x60
   12ffc:	ror	r3, r0, #2
   13000:	eor	r4, r4, r5, ror #31
   13004:	ldr	r5, [sp, #104]	; 0x68
   13008:	eor	r3, r3, r7, ror #2
   1300c:	eor	r3, r3, r2
   13010:	eor	r4, r4, r5, ror #31
   13014:	eor	r5, r4, sl, ror #31
   13018:	ror	r4, r5, #31
   1301c:	mov	ip, r5
   13020:	str	r5, [fp, #-72]	; 0xffffffb8
   13024:	ldr	r5, [fp, #-92]	; 0xffffffa4
   13028:	add	r1, r4, r1, ror #2
   1302c:	str	r4, [sp, #40]	; 0x28
   13030:	ldr	r4, [sp, #44]	; 0x2c
   13034:	add	r1, r1, r3
   13038:	ror	r3, r2, #2
   1303c:	add	r1, r1, lr, ror #27
   13040:	eor	r3, r3, r0, ror #2
   13044:	add	r1, r1, r9
   13048:	eor	r3, r3, lr
   1304c:	eor	r4, r4, r5, ror #31
   13050:	ldr	r5, [fp, #-96]	; 0xffffffa0
   13054:	eor	r4, r4, r5, ror #31
   13058:	eor	r5, r4, r8, ror #31
   1305c:	movw	r8, #60321	; 0xeba1
   13060:	ror	r4, r5, #31
   13064:	mov	r9, r5
   13068:	str	r5, [fp, #-92]	; 0xffffffa4
   1306c:	ldr	r5, [sp, #24]
   13070:	movt	r8, #28377	; 0x6ed9
   13074:	str	r4, [sp, #44]	; 0x2c
   13078:	add	r4, r4, r7, ror #2
   1307c:	ldr	r7, [fp, #-100]	; 0xffffff9c
   13080:	add	r3, r4, r3
   13084:	movw	r4, #60321	; 0xeba1
   13088:	add	r3, r3, r1, ror #27
   1308c:	movt	r4, #28377	; 0x6ed9
   13090:	add	r3, r3, r4
   13094:	ror	r4, lr, #2
   13098:	eor	r5, r5, r7, ror #31
   1309c:	ldr	r7, [fp, #-44]	; 0xffffffd4
   130a0:	eor	r4, r4, r2, ror #2
   130a4:	eor	r4, r4, r1
   130a8:	eor	r5, r5, r7, ror #31
   130ac:	eor	r7, r5, r6, ror #31
   130b0:	ror	r5, r7, #31
   130b4:	mov	r6, r7
   130b8:	str	r7, [fp, #-56]	; 0xffffffc8
   130bc:	ldr	r7, [fp, #-48]	; 0xffffffd0
   130c0:	add	r0, r5, r0, ror #2
   130c4:	str	r5, [sp, #52]	; 0x34
   130c8:	add	r0, r0, r4
   130cc:	ldr	r4, [sp, #16]
   130d0:	add	r0, r0, r3, ror #27
   130d4:	add	r5, r0, r8
   130d8:	ror	r0, r1, #2
   130dc:	eor	r0, r0, lr, ror #2
   130e0:	eor	r4, r4, r7, ror #31
   130e4:	ldr	r7, [fp, #-76]	; 0xffffffb4
   130e8:	eor	r0, r0, r3
   130ec:	eor	r4, r4, r7, ror #31
   130f0:	ldr	r7, [sp]
   130f4:	eor	ip, r4, ip, ror #31
   130f8:	ror	r4, ip, #31
   130fc:	str	ip, [fp, #-64]	; 0xffffffc0
   13100:	add	r2, r4, r2, ror #2
   13104:	str	r4, [fp, #-48]	; 0xffffffd0
   13108:	add	r0, r2, r0
   1310c:	add	r0, r0, r5, ror #27
   13110:	add	r2, r0, r8
   13114:	orr	r0, r2, r5, ror #2
   13118:	and	r4, r2, r5, ror #2
   1311c:	and	r0, r0, r3, ror #2
   13120:	orr	r0, r0, r4
   13124:	ldr	r4, [fp, #-32]	; 0xffffffe0
   13128:	eor	r4, r7, r4, ror #31
   1312c:	movw	r7, #60321	; 0xeba1
   13130:	eor	r4, r4, sl, ror #31
   13134:	movt	r7, #28377	; 0x6ed9
   13138:	movw	sl, #48348	; 0xbcdc
   1313c:	eor	r8, r4, r6, ror #31
   13140:	movt	sl, #36635	; 0x8f1b
   13144:	ror	r6, r8, #31
   13148:	str	r8, [fp, #-60]	; 0xffffffc4
   1314c:	add	r4, r6, r1, ror #2
   13150:	str	r6, [sp, #68]	; 0x44
   13154:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13158:	add	r0, r4, r0
   1315c:	ror	r4, r3, #2
   13160:	eor	r1, r4, r1, ror #2
   13164:	eor	r4, r1, r5
   13168:	ldr	r1, [sp, #64]	; 0x40
   1316c:	eor	r1, r1, r6, ror #31
   13170:	ldr	r6, [fp, #-88]	; 0xffffffa8
   13174:	eor	r1, r1, r6, ror #31
   13178:	eor	r9, r1, r9, ror #31
   1317c:	ror	r6, r9, #31
   13180:	str	r9, [sp, #16]
   13184:	add	r1, r6, lr, ror #2
   13188:	str	r6, [sp, #24]
   1318c:	add	r1, r1, r4
   13190:	ldr	r4, [sp, #100]	; 0x64
   13194:	add	r1, r1, r2, ror #27
   13198:	add	r6, r1, r7
   1319c:	orr	r1, r6, r2, ror #2
   131a0:	and	r7, r6, r2, ror #2
   131a4:	add	r0, r0, r6, ror #27
   131a8:	and	r1, r1, r5, ror #2
   131ac:	add	r0, r0, sl
   131b0:	orr	r1, r1, r7
   131b4:	ldr	r7, [sp, #12]
   131b8:	eor	r7, r7, r4, ror #31
   131bc:	ldr	r4, [fp, #-80]	; 0xffffffb0
   131c0:	eor	r7, r7, r4, ror #31
   131c4:	eor	r7, r7, ip, ror #31
   131c8:	ror	r4, r7, #31
   131cc:	mov	lr, r7
   131d0:	str	r7, [fp, #-68]	; 0xffffffbc
   131d4:	and	r7, r0, r6, ror #2
   131d8:	add	r3, r4, r3, ror #2
   131dc:	str	r4, [sp, #100]	; 0x64
   131e0:	ldr	r4, [fp, #-52]	; 0xffffffcc
   131e4:	add	r1, r3, r1
   131e8:	add	r1, r1, r0, ror #27
   131ec:	add	r3, r1, sl
   131f0:	orr	r1, r0, r6, ror #2
   131f4:	and	r1, r1, r2, ror #2
   131f8:	orr	r1, r1, r7
   131fc:	ldr	r7, [sp, #8]
   13200:	eor	r7, r7, r4, ror #31
   13204:	ldr	r4, [fp, #-84]	; 0xffffffac
   13208:	eor	r7, r7, r4, ror #31
   1320c:	eor	ip, r7, r9, ror #31
   13210:	ror	r4, ip, #31
   13214:	str	ip, [sp, #12]
   13218:	add	r7, r4, r5, ror #2
   1321c:	str	r4, [sp, #64]	; 0x40
   13220:	ldr	r4, [sp, #4]
   13224:	add	r1, r7, r1
   13228:	and	r7, r3, r0, ror #2
   1322c:	add	r1, r1, r3, ror #27
   13230:	add	r5, r1, sl
   13234:	orr	r1, r3, r0, ror #2
   13238:	and	r1, r1, r6, ror #2
   1323c:	orr	r1, r1, r7
   13240:	ldr	r7, [sp, #104]	; 0x68
   13244:	eor	r7, r4, r7, ror #31
   13248:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1324c:	eor	r7, r7, r4, ror #31
   13250:	eor	r4, r7, r8, ror #31
   13254:	and	r7, r5, r3, ror #2
   13258:	mov	r8, sl
   1325c:	str	r4, [fp, #-32]	; 0xffffffe0
   13260:	ror	r4, r4, #31
   13264:	add	r2, r4, r2, ror #2
   13268:	str	r4, [sp, #104]	; 0x68
   1326c:	ldr	r4, [sp, #20]
   13270:	add	r1, r2, r1
   13274:	add	r1, r1, r5, ror #27
   13278:	add	r2, r1, sl
   1327c:	orr	r1, r5, r3, ror #2
   13280:	and	r1, r1, r0, ror #2
   13284:	orr	r1, r1, r7
   13288:	ldr	r7, [fp, #-96]	; 0xffffffa0
   1328c:	eor	r7, r4, r7, ror #31
   13290:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13294:	eor	r7, r7, r4, ror #31
   13298:	eor	r7, r7, lr, ror #31
   1329c:	ror	r4, r7, #31
   132a0:	str	r7, [fp, #-96]	; 0xffffffa0
   132a4:	add	r7, r4, r6, ror #2
   132a8:	str	r4, [sp, #60]	; 0x3c
   132ac:	ldr	r4, [sp, #28]
   132b0:	ldr	r6, [fp, #-44]	; 0xffffffd4
   132b4:	add	r1, r7, r1
   132b8:	and	r7, r2, r5, ror #2
   132bc:	add	r1, r1, r2, ror #27
   132c0:	add	lr, r1, sl
   132c4:	orr	r1, r2, r5, ror #2
   132c8:	mov	sl, ip
   132cc:	and	r1, r1, r3, ror #2
   132d0:	orr	r1, r1, r7
   132d4:	eor	r7, r4, r6, ror #31
   132d8:	ldr	r4, [fp, #-56]	; 0xffffffc8
   132dc:	ldr	r6, [fp, #-88]	; 0xffffffa8
   132e0:	eor	r7, r7, r4, ror #31
   132e4:	ldr	r4, [fp, #-76]	; 0xffffffb4
   132e8:	eor	r7, r7, ip, ror #31
   132ec:	str	r7, [fp, #-100]	; 0xffffff9c
   132f0:	ror	r7, r7, #31
   132f4:	add	r0, r7, r0, ror #2
   132f8:	str	r7, [sp, #56]	; 0x38
   132fc:	and	r7, lr, r2, ror #2
   13300:	add	r0, r0, r1
   13304:	orr	r1, lr, r2, ror #2
   13308:	add	r0, r0, lr, ror #27
   1330c:	and	r1, r1, r5, ror #2
   13310:	add	ip, r0, r8
   13314:	ldr	r0, [sp, #48]	; 0x30
   13318:	orr	r1, r1, r7
   1331c:	eor	r7, r0, r4, ror #31
   13320:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13324:	movw	r4, #48348	; 0xbcdc
   13328:	movt	r4, #36635	; 0x8f1b
   1332c:	eor	r7, r7, r0, ror #31
   13330:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13334:	eor	r8, r7, r0, ror #31
   13338:	and	r7, ip, lr, ror #2
   1333c:	ror	r0, r8, #31
   13340:	str	r8, [fp, #-76]	; 0xffffffb4
   13344:	add	r3, r0, r3, ror #2
   13348:	str	r0, [sp, #48]	; 0x30
   1334c:	ldr	r0, [sp, #32]
   13350:	add	r1, r3, r1
   13354:	add	r1, r1, ip, ror #27
   13358:	add	r3, r1, r4
   1335c:	orr	r1, ip, lr, ror #2
   13360:	and	r1, r1, r2, ror #2
   13364:	orr	r1, r1, r7
   13368:	eor	r7, r0, r6, ror #31
   1336c:	ldr	r6, [sp, #96]	; 0x60
   13370:	eor	r7, r7, r9, ror #31
   13374:	ldr	r9, [fp, #-96]	; 0xffffffa0
   13378:	eor	r0, r7, r9, ror #31
   1337c:	str	r0, [fp, #-36]	; 0xffffffdc
   13380:	ror	r0, r0, #31
   13384:	add	r7, r0, r5, ror #2
   13388:	str	r0, [fp, #-88]	; 0xffffffa8
   1338c:	ldr	r0, [sp, #36]	; 0x24
   13390:	add	r1, r7, r1
   13394:	and	r7, r3, ip, ror #2
   13398:	add	r1, r1, r3, ror #27
   1339c:	add	r5, r1, r4
   133a0:	orr	r1, r3, ip, ror #2
   133a4:	and	r1, r1, lr, ror #2
   133a8:	orr	r1, r1, r7
   133ac:	eor	r7, r0, r6, ror #31
   133b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   133b4:	ldr	r6, [fp, #-100]	; 0xffffff9c
   133b8:	eor	r7, r7, r0, ror #31
   133bc:	eor	r0, r7, r6, ror #31
   133c0:	and	r7, r5, r3, ror #2
   133c4:	str	r0, [fp, #-40]	; 0xffffffd8
   133c8:	ror	r0, r0, #31
   133cc:	add	r2, r0, r2, ror #2
   133d0:	str	r0, [sp, #96]	; 0x60
   133d4:	ldr	r0, [sp, #40]	; 0x28
   133d8:	add	r1, r2, r1
   133dc:	add	r1, r1, r5, ror #27
   133e0:	add	r2, r1, r4
   133e4:	orr	r1, r5, r3, ror #2
   133e8:	and	r1, r1, ip, ror #2
   133ec:	orr	r1, r1, r7
   133f0:	ldr	r7, [fp, #-80]	; 0xffffffb0
   133f4:	eor	r7, r0, r7, ror #31
   133f8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   133fc:	eor	r7, r7, r0, ror #31
   13400:	eor	r0, r7, r8, ror #31
   13404:	mov	r8, r4
   13408:	str	r0, [fp, #-44]	; 0xffffffd4
   1340c:	ror	r0, r0, #31
   13410:	add	r7, r0, lr, ror #2
   13414:	str	r0, [sp, #40]	; 0x28
   13418:	ldr	r0, [sp, #44]	; 0x2c
   1341c:	add	r1, r7, r1
   13420:	and	r7, r2, r5, ror #2
   13424:	add	r1, r1, r2, ror #27
   13428:	add	lr, r1, r4
   1342c:	ldr	r4, [fp, #-84]	; 0xffffffac
   13430:	orr	r1, r2, r5, ror #2
   13434:	and	r1, r1, r3, ror #2
   13438:	orr	r1, r1, r7
   1343c:	eor	r7, r0, r4, ror #31
   13440:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13444:	ldr	r4, [fp, #-72]	; 0xffffffb8
   13448:	eor	r7, r7, sl, ror #31
   1344c:	eor	r0, r7, r0, ror #31
   13450:	and	r7, lr, r2, ror #2
   13454:	str	r0, [fp, #-80]	; 0xffffffb0
   13458:	ror	r0, r0, #31
   1345c:	str	r0, [sp, #44]	; 0x2c
   13460:	add	r0, r0, ip, ror #2
   13464:	mov	ip, r8
   13468:	add	r0, r0, r1
   1346c:	orr	r1, lr, r2, ror #2
   13470:	and	r1, r1, r5, ror #2
   13474:	add	r0, r0, lr, ror #27
   13478:	orr	sl, r1, r7
   1347c:	ldr	r7, [sp, #52]	; 0x34
   13480:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13484:	add	r0, r0, r8
   13488:	eor	r7, r7, r4, ror #31
   1348c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13490:	eor	r7, r7, r1, ror #31
   13494:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13498:	eor	r8, r7, r1, ror #31
   1349c:	ror	r7, r8, #31
   134a0:	str	r8, [sp, #32]
   134a4:	add	r3, r7, r3, ror #2
   134a8:	str	r7, [sp, #52]	; 0x34
   134ac:	and	r7, r0, lr, ror #2
   134b0:	add	r1, r3, sl
   134b4:	add	r1, r1, r0, ror #27
   134b8:	add	r3, r1, ip
   134bc:	orr	r1, r0, lr, ror #2
   134c0:	and	r1, r1, r2, ror #2
   134c4:	orr	r1, r1, r7
   134c8:	ldr	r7, [fp, #-48]	; 0xffffffd0
   134cc:	eor	r7, r7, r4, ror #31
   134d0:	ldr	r4, [fp, #-44]	; 0xffffffd4
   134d4:	eor	r7, r7, r9, ror #31
   134d8:	ldr	r9, [fp, #-80]	; 0xffffffb0
   134dc:	eor	r4, r7, r4, ror #31
   134e0:	str	r4, [fp, #-48]	; 0xffffffd0
   134e4:	ror	r4, r4, #31
   134e8:	add	r7, r4, r5, ror #2
   134ec:	ldr	r5, [fp, #-56]	; 0xffffffc8
   134f0:	str	r4, [fp, #-92]	; 0xffffffa4
   134f4:	mov	r4, ip
   134f8:	add	r1, r7, r1
   134fc:	and	r7, r3, r0, ror #2
   13500:	add	r1, r1, r3, ror #27
   13504:	add	sl, r1, ip
   13508:	orr	r1, r3, r0, ror #2
   1350c:	and	r1, r1, lr, ror #2
   13510:	orr	r1, r1, r7
   13514:	ldr	r7, [sp, #24]
   13518:	eor	r7, r7, r5, ror #31
   1351c:	ldr	r5, [sp, #68]	; 0x44
   13520:	eor	r7, r7, r6, ror #31
   13524:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13528:	eor	r7, r7, r9, ror #31
   1352c:	str	r7, [fp, #-52]	; 0xffffffcc
   13530:	ror	r7, r7, #31
   13534:	add	r2, r7, r2, ror #2
   13538:	str	r7, [sp, #36]	; 0x24
   1353c:	and	r7, sl, r3, ror #2
   13540:	add	r1, r2, r1
   13544:	add	r1, r1, sl, ror #27
   13548:	add	r2, r1, ip
   1354c:	orr	r1, sl, r3, ror #2
   13550:	and	r1, r1, r0, ror #2
   13554:	orr	r1, r1, r7
   13558:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1355c:	eor	r7, r5, r7, ror #31
   13560:	ldr	r5, [sp, #16]
   13564:	eor	r7, r7, r6, ror #31
   13568:	eor	r6, r7, r8, ror #31
   1356c:	ror	r7, r6, #31
   13570:	mov	ip, r6
   13574:	str	r6, [fp, #-72]	; 0xffffffb8
   13578:	and	r6, r2, sl, ror #2
   1357c:	str	r7, [sp, #68]	; 0x44
   13580:	add	r7, r7, lr, ror #2
   13584:	add	r1, r7, r1
   13588:	orr	r7, r2, sl, ror #2
   1358c:	and	r7, r7, r3, ror #2
   13590:	add	r1, r1, r2, ror #27
   13594:	orr	r7, r7, r6
   13598:	ldr	r6, [sp, #100]	; 0x64
   1359c:	add	r1, r1, r4
   135a0:	eor	r6, r6, r5, ror #31
   135a4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   135a8:	eor	r6, r6, r5, ror #31
   135ac:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135b0:	eor	r6, r6, r5, ror #31
   135b4:	ror	r5, r6, #31
   135b8:	mov	lr, r6
   135bc:	and	r6, r1, r2, ror #2
   135c0:	add	r0, r5, r0, ror #2
   135c4:	str	r5, [sp, #100]	; 0x64
   135c8:	ldr	r5, [fp, #-60]	; 0xffffffc4
   135cc:	str	lr, [sp, #28]
   135d0:	add	r0, r0, r7
   135d4:	orr	r7, r1, r2, ror #2
   135d8:	and	r7, r7, sl, ror #2
   135dc:	add	r0, r0, r1, ror #27
   135e0:	orr	r7, r7, r6
   135e4:	ldr	r6, [sp, #64]	; 0x40
   135e8:	add	r0, r0, r4
   135ec:	eor	r6, r6, r5, ror #31
   135f0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   135f4:	eor	r6, r6, r5, ror #31
   135f8:	ldr	r5, [fp, #-52]	; 0xffffffcc
   135fc:	eor	r5, r6, r5, ror #31
   13600:	and	r6, r0, r1, ror #2
   13604:	str	r5, [fp, #-56]	; 0xffffffc8
   13608:	ror	r5, r5, #31
   1360c:	add	r3, r5, r3, ror #2
   13610:	str	r5, [sp, #64]	; 0x40
   13614:	ldr	r5, [fp, #-68]	; 0xffffffbc
   13618:	add	r3, r3, r7
   1361c:	orr	r7, r0, r1, ror #2
   13620:	and	r7, r7, r2, ror #2
   13624:	add	r3, r3, r0, ror #27
   13628:	orr	r7, r7, r6
   1362c:	ldr	r6, [sp, #104]	; 0x68
   13630:	add	r3, r3, r4
   13634:	eor	r6, r6, r5, ror #31
   13638:	ldr	r5, [fp, #-44]	; 0xffffffd4
   1363c:	eor	r6, r6, r5, ror #31
   13640:	eor	r6, r6, ip, ror #31
   13644:	ror	r5, r6, #31
   13648:	str	r6, [fp, #-68]	; 0xffffffbc
   1364c:	add	r6, r5, sl, ror #2
   13650:	str	r5, [sp, #104]	; 0x68
   13654:	ldr	r5, [sp, #60]	; 0x3c
   13658:	mov	sl, lr
   1365c:	add	r7, r6, r7
   13660:	and	r6, r3, r0, ror #2
   13664:	add	r7, r7, r3, ror #27
   13668:	add	ip, r7, r4
   1366c:	orr	r7, r3, r0, ror #2
   13670:	and	r7, r7, r1, ror #2
   13674:	orr	r7, r7, r6
   13678:	ldr	r6, [sp, #12]
   1367c:	eor	r6, r5, r6, ror #31
   13680:	eor	r6, r6, r9, ror #31
   13684:	eor	lr, r6, lr, ror #31
   13688:	ror	r6, lr, #31
   1368c:	str	lr, [fp, #-84]	; 0xffffffac
   13690:	add	r2, r6, r2, ror #2
   13694:	str	r6, [sp, #60]	; 0x3c
   13698:	ldr	r6, [sp, #56]	; 0x38
   1369c:	add	r2, r2, r7
   136a0:	and	r7, ip, r3, ror #2
   136a4:	add	r2, r2, ip, ror #27
   136a8:	add	r5, r2, r4
   136ac:	orr	r2, ip, r3, ror #2
   136b0:	and	r2, r2, r0, ror #2
   136b4:	orr	r9, r2, r7
   136b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   136bc:	eor	r7, r6, r2, ror #31
   136c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   136c4:	eor	r7, r7, r8, ror #31
   136c8:	eor	r6, r7, r2, ror #31
   136cc:	ror	r2, r6, #31
   136d0:	mov	r7, r6
   136d4:	str	r6, [fp, #-64]	; 0xffffffc0
   136d8:	ldr	r6, [fp, #-96]	; 0xffffffa0
   136dc:	add	r1, r2, r1, ror #2
   136e0:	str	r2, [sp, #56]	; 0x38
   136e4:	ldr	r2, [sp, #48]	; 0x30
   136e8:	add	r1, r1, r9
   136ec:	ldr	r9, [fp, #-68]	; 0xffffffbc
   136f0:	add	r1, r1, r5, ror #27
   136f4:	add	r4, r1, r4
   136f8:	ror	r1, ip, #2
   136fc:	eor	r2, r2, r6, ror #31
   13700:	ldr	r6, [fp, #-48]	; 0xffffffd0
   13704:	eor	r1, r1, r3, ror #2
   13708:	eor	r1, r1, r5
   1370c:	eor	r2, r2, r6, ror #31
   13710:	eor	r8, r2, r9, ror #31
   13714:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13718:	ror	r6, r8, #31
   1371c:	str	r8, [fp, #-60]	; 0xffffffc4
   13720:	add	r0, r6, r0, ror #2
   13724:	str	r6, [sp, #48]	; 0x30
   13728:	ldr	r6, [fp, #-100]	; 0xffffff9c
   1372c:	add	r0, r0, r1
   13730:	movw	r1, #49622	; 0xc1d6
   13734:	add	r0, r0, r4, ror #27
   13738:	movt	r1, #51810	; 0xca62
   1373c:	add	r0, r0, r1
   13740:	ror	r1, r5, #2
   13744:	eor	r2, r2, r6, ror #31
   13748:	ldr	r6, [fp, #-52]	; 0xffffffcc
   1374c:	eor	r1, r1, ip, ror #2
   13750:	eor	r1, r1, r4
   13754:	eor	r2, r2, r6, ror #31
   13758:	eor	r2, r2, lr, ror #31
   1375c:	ror	r6, r2, #31
   13760:	str	r2, [fp, #-32]	; 0xffffffe0
   13764:	add	r2, r6, r3, ror #2
   13768:	str	r6, [fp, #-100]	; 0xffffff9c
   1376c:	ldr	r3, [sp, #96]	; 0x60
   13770:	ldr	r6, [fp, #-76]	; 0xffffffb4
   13774:	add	r1, r2, r1
   13778:	movw	r2, #49622	; 0xc1d6
   1377c:	add	r1, r1, r0, ror #27
   13780:	movt	r2, #51810	; 0xca62
   13784:	add	r1, r1, r2
   13788:	ror	r2, r4, #2
   1378c:	eor	r3, r3, r6, ror #31
   13790:	ldr	r6, [fp, #-72]	; 0xffffffb8
   13794:	eor	r2, r2, r5, ror #2
   13798:	eor	r2, r2, r0
   1379c:	eor	r3, r3, r6, ror #31
   137a0:	eor	lr, r3, r7, ror #31
   137a4:	ldr	r7, [sp, #40]	; 0x28
   137a8:	ror	r6, lr, #31
   137ac:	str	lr, [sp, #96]	; 0x60
   137b0:	add	r3, r6, ip, ror #2
   137b4:	str	r6, [fp, #-96]	; 0xffffffa0
   137b8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   137bc:	add	r2, r3, r2
   137c0:	movw	r3, #49622	; 0xc1d6
   137c4:	add	r2, r2, r1, ror #27
   137c8:	movt	r3, #51810	; 0xca62
   137cc:	add	r2, r2, r3
   137d0:	ror	r3, r0, #2
   137d4:	eor	r7, r7, r6, ror #31
   137d8:	eor	r3, r3, r4, ror #2
   137dc:	eor	r7, r7, sl, ror #31
   137e0:	eor	r3, r3, r1
   137e4:	eor	r7, r7, r8, ror #31
   137e8:	ror	r6, r7, #31
   137ec:	mov	ip, r7
   137f0:	str	r7, [fp, #-36]	; 0xffffffdc
   137f4:	add	r7, r6, r5, ror #2
   137f8:	movw	r5, #49622	; 0xc1d6
   137fc:	str	r6, [fp, #-88]	; 0xffffffa8
   13800:	add	r3, r7, r3
   13804:	movt	r5, #51810	; 0xca62
   13808:	add	r3, r3, r2, ror #27
   1380c:	add	r7, r3, r5
   13810:	ror	r3, r1, #2
   13814:	ldr	r5, [sp, #44]	; 0x2c
   13818:	eor	r3, r3, r0, ror #2
   1381c:	eor	sl, r3, r2
   13820:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13824:	eor	r6, r5, r3, ror #31
   13828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1382c:	ldr	r5, [fp, #-44]	; 0xffffffd4
   13830:	eor	r6, r6, r3, ror #31
   13834:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13838:	eor	r8, r6, r3, ror #31
   1383c:	ror	r3, r8, #31
   13840:	str	r8, [sp, #44]	; 0x2c
   13844:	add	r6, r3, r4, ror #2
   13848:	str	r3, [fp, #-76]	; 0xffffffb4
   1384c:	add	r3, r6, sl
   13850:	ldr	r6, [sp, #52]	; 0x34
   13854:	movw	sl, #49622	; 0xc1d6
   13858:	add	r3, r3, r7, ror #27
   1385c:	movt	sl, #51810	; 0xca62
   13860:	add	r4, r3, sl
   13864:	ror	r3, r2, #2
   13868:	eor	r3, r3, r1, ror #2
   1386c:	eor	r6, r6, r5, ror #31
   13870:	eor	r3, r3, r7
   13874:	eor	r6, r6, r9, ror #31
   13878:	eor	r5, r6, lr, ror #31
   1387c:	ror	r6, r5, #31
   13880:	mov	r9, r5
   13884:	str	r5, [sp, #52]	; 0x34
   13888:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1388c:	add	r0, r6, r0, ror #2
   13890:	str	r6, [fp, #-44]	; 0xffffffd4
   13894:	ldr	r6, [fp, #-92]	; 0xffffffa4
   13898:	add	r0, r0, r3
   1389c:	ror	r3, r7, #2
   138a0:	eor	r3, r3, r2, ror #2
   138a4:	add	r0, r0, r4, ror #27
   138a8:	eor	r3, r3, r4
   138ac:	add	r0, r0, sl
   138b0:	eor	r6, r6, r5, ror #31
   138b4:	ldr	r5, [fp, #-84]	; 0xffffffac
   138b8:	eor	r6, r6, r5, ror #31
   138bc:	eor	r5, r6, ip, ror #31
   138c0:	ror	r6, r5, #31
   138c4:	mov	ip, r5
   138c8:	str	r5, [fp, #-92]	; 0xffffffa4
   138cc:	ldr	r5, [sp, #32]
   138d0:	add	r1, r6, r1, ror #2
   138d4:	ldr	r6, [sp, #36]	; 0x24
   138d8:	add	r1, r1, r3
   138dc:	ror	r3, r4, #2
   138e0:	eor	r3, r3, r7, ror #2
   138e4:	add	r1, r1, r0, ror #27
   138e8:	eor	r3, r3, r0
   138ec:	add	r1, r1, sl
   138f0:	eor	r6, r6, r5, ror #31
   138f4:	ldr	r5, [fp, #-64]	; 0xffffffc0
   138f8:	eor	r6, r6, r5, ror #31
   138fc:	eor	r5, r6, r8, ror #31
   13900:	ror	r6, r5, #31
   13904:	mov	r8, r5
   13908:	str	r5, [sp, #40]	; 0x28
   1390c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13910:	add	r2, r6, r2, ror #2
   13914:	ldr	r6, [sp, #68]	; 0x44
   13918:	add	r2, r2, r3
   1391c:	ror	r3, r0, #2
   13920:	eor	r3, r3, r4, ror #2
   13924:	add	r2, r2, r1, ror #27
   13928:	eor	r3, r3, r1
   1392c:	add	r2, r2, sl
   13930:	eor	r6, r6, r5, ror #31
   13934:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13938:	eor	r6, r6, r5, ror #31
   1393c:	ldr	r5, [fp, #-52]	; 0xffffffcc
   13940:	eor	r9, r6, r9, ror #31
   13944:	ror	r6, r9, #31
   13948:	str	r9, [fp, #-80]	; 0xffffffb0
   1394c:	add	r7, r6, r7, ror #2
   13950:	add	r3, r7, r3
   13954:	ror	r7, r1, #2
   13958:	eor	r7, r7, r0, ror #2
   1395c:	add	r3, r3, r2, ror #27
   13960:	eor	r6, r7, r2
   13964:	ldr	r7, [sp, #100]	; 0x64
   13968:	add	r3, r3, sl
   1396c:	eor	r7, r7, r5, ror #31
   13970:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13974:	eor	r7, r7, r5, ror #31
   13978:	ldr	r5, [sp, #28]
   1397c:	eor	r7, r7, ip, ror #31
   13980:	str	r7, [fp, #-40]	; 0xffffffd8
   13984:	ror	r7, r7, #31
   13988:	add	r7, r7, r4, ror #2
   1398c:	ror	r4, r2, #2
   13990:	add	r7, r7, r6
   13994:	ldr	r6, [fp, #-72]	; 0xffffffb8
   13998:	eor	r4, r4, r1, ror #2
   1399c:	add	r7, r7, r3, ror #27
   139a0:	eor	r4, r4, r3
   139a4:	add	ip, r7, sl
   139a8:	ldr	r7, [sp, #64]	; 0x40
   139ac:	eor	r6, r7, r6, ror #31
   139b0:	ldr	r7, [sp, #60]	; 0x3c
   139b4:	eor	r6, r6, lr, ror #31
   139b8:	eor	r8, r6, r8, ror #31
   139bc:	ror	r6, r8, #31
   139c0:	str	r8, [fp, #-52]	; 0xffffffcc
   139c4:	add	r0, r6, r0, ror #2
   139c8:	ldr	r6, [sp, #104]	; 0x68
   139cc:	add	r0, r0, r4
   139d0:	ror	r4, r3, #2
   139d4:	eor	r4, r4, r2, ror #2
   139d8:	add	r0, r0, ip, ror #27
   139dc:	eor	r4, r4, ip
   139e0:	add	r0, r0, sl
   139e4:	eor	r6, r6, r5, ror #31
   139e8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   139ec:	eor	r6, r6, r5, ror #31
   139f0:	eor	r5, r6, r9, ror #31
   139f4:	ror	r6, r5, #31
   139f8:	mov	r9, r5
   139fc:	str	r5, [fp, #-48]	; 0xffffffd0
   13a00:	add	r1, r6, r1, ror #2
   13a04:	ldr	r6, [fp, #-56]	; 0xffffffc8
   13a08:	add	r1, r1, r4
   13a0c:	add	r1, r1, r0, ror #27
   13a10:	add	r4, r1, sl
   13a14:	ror	r1, ip, #2
   13a18:	eor	r6, r7, r6, ror #31
   13a1c:	ldr	r7, [sp, #44]	; 0x2c
   13a20:	eor	r1, r1, r3, ror #2
   13a24:	eor	r1, r1, r0
   13a28:	eor	r5, r6, r7, ror #31
   13a2c:	ldr	r7, [fp, #-40]	; 0xffffffd8
   13a30:	mov	r6, sl
   13a34:	eor	lr, r5, r7, ror #31
   13a38:	ldr	r7, [sp, #56]	; 0x38
   13a3c:	ror	r5, lr, #31
   13a40:	add	r2, r5, r2, ror #2
   13a44:	ldr	r5, [fp, #-68]	; 0xffffffbc
   13a48:	add	r1, r2, r1
   13a4c:	ror	r2, r0, #2
   13a50:	add	r1, r1, r4, ror #27
   13a54:	eor	r2, r2, ip, ror #2
   13a58:	add	r1, r1, sl
   13a5c:	eor	r2, r2, r4
   13a60:	eor	r5, r7, r5, ror #31
   13a64:	ldr	r7, [sp, #52]	; 0x34
   13a68:	eor	r7, r5, r7, ror #31
   13a6c:	eor	sl, r7, r8, ror #31
   13a70:	ror	r5, sl, #31
   13a74:	add	r3, r5, r3, ror #2
   13a78:	ldr	r5, [sp, #48]	; 0x30
   13a7c:	add	r2, r3, r2
   13a80:	ror	r3, r4, #2
   13a84:	add	r2, r2, r1, ror #27
   13a88:	eor	r3, r3, r0, ror #2
   13a8c:	add	r2, r2, r6
   13a90:	ldr	r6, [fp, #-84]	; 0xffffffac
   13a94:	eor	r3, r3, r1
   13a98:	eor	r5, r5, r6, ror #31
   13a9c:	ldr	r6, [fp, #-92]	; 0xffffffa4
   13aa0:	eor	r5, r5, r6, ror #31
   13aa4:	ldr	r6, [fp, #-64]	; 0xffffffc0
   13aa8:	eor	r8, r5, r9, ror #31
   13aac:	ldr	r5, [fp, #-100]	; 0xffffff9c
   13ab0:	ror	r7, r8, #31
   13ab4:	add	r7, r7, ip, ror #2
   13ab8:	add	r3, r7, r3
   13abc:	movw	r7, #49622	; 0xc1d6
   13ac0:	eor	r5, r5, r6, ror #31
   13ac4:	ldr	r6, [sp, #40]	; 0x28
   13ac8:	add	r3, r3, r2, ror #27
   13acc:	movt	r7, #51810	; 0xca62
   13ad0:	add	r3, r3, r7
   13ad4:	ror	r7, r1, #2
   13ad8:	eor	r7, r7, r4, ror #2
   13adc:	eor	r7, r7, r2
   13ae0:	eor	r5, r5, r6, ror #31
   13ae4:	ldr	r6, [sp, #76]	; 0x4c
   13ae8:	eor	r9, r5, lr, ror #31
   13aec:	movw	lr, #49622	; 0xc1d6
   13af0:	ror	r5, r9, #31
   13af4:	movt	lr, #51810	; 0xca62
   13af8:	add	r0, r5, r0, ror #2
   13afc:	ldr	r5, [fp, #-60]	; 0xffffffc4
   13b00:	add	r0, r0, r7
   13b04:	ldr	r7, [sp, #72]	; 0x48
   13b08:	add	r0, r0, r3, ror #27
   13b0c:	add	r0, r0, lr
   13b10:	add	r7, r7, r0, ror #2
   13b14:	str	r7, [r6, #16]
   13b18:	ror	r7, r2, #2
   13b1c:	eor	r7, r7, r1, ror #2
   13b20:	eor	ip, r7, r3
   13b24:	ldr	r7, [fp, #-96]	; 0xffffffa0
   13b28:	eor	r7, r7, r5, ror #31
   13b2c:	ldr	r5, [fp, #-80]	; 0xffffffb0
   13b30:	eor	r7, r7, r5, ror #31
   13b34:	ldr	r5, [sp, #88]	; 0x58
   13b38:	eor	sl, r7, sl, ror #31
   13b3c:	ror	r7, sl, #31
   13b40:	add	r7, r7, r4, ror #2
   13b44:	ldr	r4, [fp, #-88]	; 0xffffffa8
   13b48:	add	r7, r7, ip
   13b4c:	mov	ip, lr
   13b50:	add	r7, r7, r0, ror #27
   13b54:	add	r7, r7, lr
   13b58:	mov	lr, r6
   13b5c:	add	r5, r5, r7, ror #2
   13b60:	str	r5, [r6, #12]
   13b64:	ldr	r6, [fp, #-32]	; 0xffffffe0
   13b68:	ror	r5, r3, #2
   13b6c:	eor	r5, r5, r2, ror #2
   13b70:	eor	r5, r5, r0
   13b74:	eor	r4, r4, r6, ror #31
   13b78:	ldr	r6, [fp, #-40]	; 0xffffffd8
   13b7c:	eor	r4, r4, r6, ror #31
   13b80:	ldr	r6, [sp, #96]	; 0x60
   13b84:	eor	r4, r4, r8, ror #31
   13b88:	ror	r4, r4, #31
   13b8c:	add	r1, r4, r1, ror #2
   13b90:	ldr	r4, [sp, #80]	; 0x50
   13b94:	add	r1, r1, r5
   13b98:	add	r1, r1, r7, ror #27
   13b9c:	add	r1, r1, ip
   13ba0:	add	r5, r4, r1, ror #2
   13ba4:	ldr	r4, [fp, #-76]	; 0xffffffb4
   13ba8:	str	r5, [lr, #8]
   13bac:	ror	r5, r0, #2
   13bb0:	eor	r5, r5, r3, ror #2
   13bb4:	eor	r5, r5, r7
   13bb8:	ror	r7, r7, #2
   13bbc:	eor	r4, r4, r6, ror #31
   13bc0:	ldr	r6, [fp, #-52]	; 0xffffffcc
   13bc4:	eor	r0, r7, r0, ror #2
   13bc8:	ldr	r7, [fp, #-36]	; 0xffffffdc
   13bcc:	eor	r0, r0, r1
   13bd0:	eor	r4, r4, r6, ror #31
   13bd4:	eor	r6, r4, r9, ror #31
   13bd8:	ldr	r4, [sp, #92]	; 0x5c
   13bdc:	ror	r6, r6, #31
   13be0:	add	r2, r6, r2, ror #2
   13be4:	add	r2, r2, r5
   13be8:	add	r2, r2, r1, ror #27
   13bec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13bf0:	add	r2, r2, ip
   13bf4:	add	r6, r2, r4
   13bf8:	str	r6, [lr, #4]
   13bfc:	eor	r1, r1, r7, ror #31
   13c00:	ldr	r7, [fp, #-48]	; 0xffffffd0
   13c04:	eor	r1, r1, r7, ror #31
   13c08:	ldr	r7, [sp, #84]	; 0x54
   13c0c:	eor	r1, r1, sl, ror #31
   13c10:	add	r1, r7, r1, ror #31
   13c14:	add	r1, r1, r3, ror #2
   13c18:	add	r0, r1, r0
   13c1c:	add	r0, r0, r2, ror #27
   13c20:	add	r0, r0, ip
   13c24:	str	r0, [lr]
   13c28:	sub	sp, fp, #28
   13c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c30:	push	{r4, r5, r6, r7, fp, lr}
   13c34:	add	fp, sp, #16
   13c38:	sub	sp, sp, #8
   13c3c:	vldr	d16, [r0, #24]
   13c40:	mov	r5, r1
   13c44:	add	r1, pc, #260	; 0x104
   13c48:	mov	r4, r0
   13c4c:	add	r7, r0, #24
   13c50:	mov	r0, #0
   13c54:	vmov.i32	q10, #56	; 0x00000038
   13c58:	vmov.i32	q11, #0	; 0x00000000
   13c5c:	vmov.i32	q12, #4	; 0x00000004
   13c60:	vld1.64	{d18-d19}, [r1]
   13c64:	mov	r1, sp
   13c68:	vorr	d17, d16, d16
   13c6c:	vshl.s32	q13, q9, #3
   13c70:	add	r2, r1, r0
   13c74:	add	r0, r0, #4
   13c78:	vadd.i32	q9, q9, q12
   13c7c:	veor	q13, q13, q10
   13c80:	cmp	r0, #8
   13c84:	vsubw.u32	q14, q11, d27
   13c88:	vsubw.u32	q13, q11, d26
   13c8c:	vshl.u64	q14, q8, q14
   13c90:	vshl.u64	q13, q8, q13
   13c94:	vmovn.i64	d28, q14
   13c98:	vmovn.i64	d26, q13
   13c9c:	vuzp.16	d26, d28
   13ca0:	vuzp.8	d26, d27
   13ca4:	vst1.32	{d26[0]}, [r2]
   13ca8:	bne	13c6c <rb_base64_encode@plt+0x2c60>
   13cac:	movw	r1, #16399	; 0x400f
   13cb0:	mov	r0, r4
   13cb4:	mov	r2, #1
   13cb8:	movt	r1, #1
   13cbc:	bl	126f0 <rb_base64_encode@plt+0x16e4>
   13cc0:	ldr	r0, [r7]
   13cc4:	and	r0, r0, #504	; 0x1f8
   13cc8:	teq	r0, #448	; 0x1c0
   13ccc:	beq	13cf8 <rb_base64_encode@plt+0x2cec>
   13cd0:	movw	r6, #16401	; 0x4011
   13cd4:	movt	r6, #1
   13cd8:	mov	r0, r4
   13cdc:	mov	r1, r6
   13ce0:	mov	r2, #1
   13ce4:	bl	126f0 <rb_base64_encode@plt+0x16e4>
   13ce8:	ldr	r0, [r7]
   13cec:	and	r0, r0, #504	; 0x1f8
   13cf0:	teq	r0, #448	; 0x1c0
   13cf4:	bne	13cd8 <rb_base64_encode@plt+0x2ccc>
   13cf8:	mov	r1, sp
   13cfc:	mov	r0, r4
   13d00:	mov	r2, #8
   13d04:	bl	126f0 <rb_base64_encode@plt+0x16e4>
   13d08:	mov	r0, #0
   13d0c:	mov	r1, #24
   13d10:	mov	r2, #0
   13d14:	bic	r3, r2, #3
   13d18:	bic	r7, r1, r0
   13d1c:	add	r0, r0, #8
   13d20:	ldr	r3, [r4, r3]
   13d24:	lsr	r3, r3, r7
   13d28:	strb	r3, [r5, r2]
   13d2c:	add	r2, r2, #1
   13d30:	cmp	r2, #20
   13d34:	bne	13d14 <rb_base64_encode@plt+0x2d08>
   13d38:	mov	r0, r4
   13d3c:	mov	r1, #0
   13d40:	mov	r2, #96	; 0x60
   13d44:	bl	10e5c <memset@plt>
   13d48:	sub	sp, fp, #16
   13d4c:	pop	{r4, r5, r6, r7, fp, pc}
   13d50:	andeq	r0, r0, r0
   13d54:	andeq	r0, r0, r1
   13d58:	andeq	r0, r0, r2
   13d5c:	andeq	r0, r0, r3
   13d60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d64:	mov	r7, r0
   13d68:	ldr	r6, [pc, #72]	; 13db8 <rb_base64_encode@plt+0x2dac>
   13d6c:	ldr	r5, [pc, #72]	; 13dbc <rb_base64_encode@plt+0x2db0>
   13d70:	add	r6, pc, r6
   13d74:	add	r5, pc, r5
   13d78:	sub	r6, r6, r5
   13d7c:	mov	r8, r1
   13d80:	mov	r9, r2
   13d84:	bl	10d88 <open@plt-0x20>
   13d88:	asrs	r6, r6, #2
   13d8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d90:	mov	r4, #0
   13d94:	add	r4, r4, #1
   13d98:	ldr	r3, [r5], #4
   13d9c:	mov	r2, r9
   13da0:	mov	r1, r8
   13da4:	mov	r0, r7
   13da8:	blx	r3
   13dac:	cmp	r6, r4
   13db0:	bne	13d94 <rb_base64_encode@plt+0x2d88>
   13db4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13db8:	andeq	r1, r1, ip, ror r1
   13dbc:	andeq	r1, r1, r4, ror r1
   13dc0:	bx	lr

Disassembly of section .fini:

00013dc4 <.fini>:
   13dc4:	push	{r3, lr}
   13dc8:	pop	{r3, pc}
