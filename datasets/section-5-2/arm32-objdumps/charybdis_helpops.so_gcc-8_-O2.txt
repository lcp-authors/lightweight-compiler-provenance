
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000006c8 <_init>:
 6c8:	push	{r3, lr}
 6cc:	bl	79c <call_weak_fn>
 6d0:	pop	{r3, pc}

Disassembly of section .plt:

000006d4 <.plt>:
 6d4:	push	{lr}		; (str lr, [sp, #-4]!)
 6d8:	ldr	lr, [pc, #4]	; 6e4 <.plt+0x10>
 6dc:	add	lr, pc, lr
 6e0:	ldr	pc, [lr, #8]!
 6e4:	.word	0x0001191c

000006e8 <__cxa_finalize@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2332]!	; 0x91c

000006f4 <sendto_one@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2324]!	; 0x914

00000700 <user_mode@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2316]!	; 0x90c

0000070c <sendto_realops_snomask@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2308]!	; 0x904

00000718 <find_umode_slot@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2300]!	; 0x8fc

00000724 <rb_free_rb_dlink_node@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2292]!	; 0x8f4

00000730 <__gmon_start__@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2284]!	; 0x8ec

0000073c <rb_make_rb_dlink_node@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2276]!	; 0x8e4

00000748 <sendto_one_numeric@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2268]!	; 0x8dc

00000754 <find_person@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2260]!	; 0x8d4

00000760 <sendto_one_notice@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2252]!	; 0x8cc

0000076c <find_named_person@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2244]!	; 0x8c4

00000778 <privilegeset_in_set@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2236]!	; 0x8bc

00000784 <__assert_fail@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2228]!	; 0x8b4

00000790 <construct_umodebuf@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2220]!	; 0x8ac

Disassembly of section .text:

0000079c <call_weak_fn>:
     79c:	ldr	r3, [pc, #20]	; 7b8 <call_weak_fn+0x1c>
     7a0:	ldr	r2, [pc, #20]	; 7bc <call_weak_fn+0x20>
     7a4:	add	r3, pc, r3
     7a8:	ldr	r2, [r3, r2]
     7ac:	cmp	r2, #0
     7b0:	bxeq	lr
     7b4:	b	730 <__gmon_start__@plt>
     7b8:	.word	0x00011854
     7bc:	.word	0x00000054

000007c0 <deregister_tm_clones>:
     7c0:	ldr	r0, [pc, #44]	; 7f4 <deregister_tm_clones+0x34>
     7c4:	ldr	r3, [pc, #44]	; 7f8 <deregister_tm_clones+0x38>
     7c8:	add	r0, pc, r0
     7cc:	add	r3, pc, r3
     7d0:	cmp	r3, r0
     7d4:	ldr	r3, [pc, #32]	; 7fc <deregister_tm_clones+0x3c>
     7d8:	add	r3, pc, r3
     7dc:	bxeq	lr
     7e0:	ldr	r2, [pc, #24]	; 800 <deregister_tm_clones+0x40>
     7e4:	ldr	r3, [r3, r2]
     7e8:	cmp	r3, #0
     7ec:	bxeq	lr
     7f0:	bx	r3
     7f4:	.word	0x00011960
     7f8:	.word	0x0001195c
     7fc:	.word	0x00011820
     800:	.word	0x0000004c

00000804 <register_tm_clones>:
     804:	ldr	r0, [pc, #56]	; 844 <register_tm_clones+0x40>
     808:	ldr	r3, [pc, #56]	; 848 <register_tm_clones+0x44>
     80c:	add	r0, pc, r0
     810:	add	r3, pc, r3
     814:	sub	r1, r3, r0
     818:	ldr	r3, [pc, #44]	; 84c <register_tm_clones+0x48>
     81c:	asr	r1, r1, #2
     820:	add	r3, pc, r3
     824:	add	r1, r1, r1, lsr #31
     828:	asrs	r1, r1, #1
     82c:	bxeq	lr
     830:	ldr	r2, [pc, #24]	; 850 <register_tm_clones+0x4c>
     834:	ldr	r3, [r3, r2]
     838:	cmp	r3, #0
     83c:	bxeq	lr
     840:	bx	r3
     844:	.word	0x0001191c
     848:	.word	0x00011918
     84c:	.word	0x000117d8
     850:	.word	0x0000005c

00000854 <__do_global_dtors_aux>:
     854:	ldr	r3, [pc, #76]	; 8a8 <__do_global_dtors_aux+0x54>
     858:	ldr	r2, [pc, #76]	; 8ac <__do_global_dtors_aux+0x58>
     85c:	add	r3, pc, r3
     860:	add	r2, pc, r2
     864:	ldrb	r3, [r3]
     868:	cmp	r3, #0
     86c:	bxne	lr
     870:	ldr	r3, [pc, #56]	; 8b0 <__do_global_dtors_aux+0x5c>
     874:	push	{r4, lr}
     878:	ldr	r3, [r2, r3]
     87c:	cmp	r3, #0
     880:	beq	890 <__do_global_dtors_aux+0x3c>
     884:	ldr	r3, [pc, #40]	; 8b4 <__do_global_dtors_aux+0x60>
     888:	ldr	r0, [pc, r3]
     88c:	bl	6e8 <__cxa_finalize@plt>
     890:	bl	7c0 <deregister_tm_clones>
     894:	ldr	r3, [pc, #28]	; 8b8 <__do_global_dtors_aux+0x64>
     898:	mov	r2, #1
     89c:	add	r3, pc, r3
     8a0:	strb	r2, [r3]
     8a4:	pop	{r4, pc}
     8a8:	.word	0x000118cc
     8ac:	.word	0x00011798
     8b0:	.word	0x00000048
     8b4:	.word	0x000117d4
     8b8:	.word	0x0001188c

000008bc <frame_dummy>:
     8bc:	b	804 <register_tm_clones>

000008c0 <h_hdl_whois>:
     8c0:	ldr	r2, [pc, #84]	; 91c <h_hdl_whois+0x5c>
     8c4:	ldr	r1, [pc, #84]	; 920 <h_hdl_whois+0x60>
     8c8:	ldr	r3, [r0, #4]
     8cc:	add	r2, pc, r2
     8d0:	ldr	r2, [r2, r1]
     8d4:	ldr	r1, [r3, #56]	; 0x38
     8d8:	ldr	r2, [r2, #288]	; 0x120
     8dc:	tst	r1, r2
     8e0:	beq	918 <h_hdl_whois+0x58>
     8e4:	ldr	r2, [r3, #24]
     8e8:	ldr	r2, [r2, #24]
     8ec:	cmp	r2, #0
     8f0:	beq	900 <h_hdl_whois+0x40>
     8f4:	ldrb	r2, [r2]
     8f8:	cmp	r2, #0
     8fc:	bne	918 <h_hdl_whois+0x58>
     900:	ldr	r2, [pc, #28]	; 924 <h_hdl_whois+0x64>
     904:	add	r3, r3, #88	; 0x58
     908:	movw	r1, #310	; 0x136
     90c:	ldr	r0, [r0]
     910:	add	r2, pc, r2
     914:	b	748 <sendto_one_numeric@plt>
     918:	bx	lr
     91c:	.word	0x0001172c
     920:	.word	0x00000050
     924:	.word	0x00000ab8

00000928 <h_hdl_stats_request>:
     928:	ldr	r3, [r0, #8]
     92c:	cmp	r3, #112	; 0x70
     930:	bxne	lr
     934:	strd	r4, [sp, #-20]!	; 0xffffffec
     938:	mov	r5, r0
     93c:	ldr	r3, [pc, #176]	; 9f4 <h_hdl_stats_request+0xcc>
     940:	ldr	r0, [r0]
     944:	ldr	r4, [pc, r3]
     948:	strd	r6, [sp, #8]
     94c:	str	lr, [sp, #16]
     950:	sub	sp, sp, #12
     954:	cmp	r4, #0
     958:	beq	9ec <h_hdl_stats_request+0xc4>
     95c:	ldr	r7, [pc, #148]	; 9f8 <h_hdl_stats_request+0xd0>
     960:	mov	r6, #0
     964:	add	r7, pc, r7
     968:	b	978 <h_hdl_stats_request+0x50>
     96c:	ldr	r4, [r4, #8]
     970:	cmp	r4, #0
     974:	beq	9bc <h_hdl_stats_request+0x94>
     978:	ldr	r3, [r4]
     97c:	ldr	r2, [r3, #24]
     980:	ldr	r2, [r2, #24]
     984:	cmp	r2, #0
     988:	bne	96c <h_hdl_stats_request+0x44>
     98c:	add	ip, r3, #163	; 0xa3
     990:	add	r2, r3, #152	; 0x98
     994:	mov	r1, #249	; 0xf9
     998:	add	r3, r3, #88	; 0x58
     99c:	stm	sp, {r2, ip}
     9a0:	mov	r2, r7
     9a4:	add	r6, r6, #1
     9a8:	bl	748 <sendto_one_numeric@plt>
     9ac:	ldr	r4, [r4, #8]
     9b0:	ldr	r0, [r5]
     9b4:	cmp	r4, #0
     9b8:	bne	978 <h_hdl_stats_request+0x50>
     9bc:	ldr	r2, [pc, #56]	; 9fc <h_hdl_stats_request+0xd4>
     9c0:	mov	r3, r6
     9c4:	mov	r1, #249	; 0xf9
     9c8:	add	r2, pc, r2
     9cc:	bl	748 <sendto_one_numeric@plt>
     9d0:	mov	r3, #1
     9d4:	str	r3, [r5, #12]
     9d8:	add	sp, sp, #12
     9dc:	ldrd	r4, [sp]
     9e0:	ldrd	r6, [sp, #8]
     9e4:	add	sp, sp, #16
     9e8:	pop	{pc}		; (ldr pc, [sp], #4)
     9ec:	mov	r6, r4
     9f0:	b	9bc <h_hdl_stats_request+0x94>
     9f4:	.word	0x000117e8
     9f8:	.word	0x00000a80
     9fc:	.word	0x00000a2c

00000a00 <do_dehelper.part.2>:
     a00:	ldr	r2, [pc, #136]	; a90 <do_dehelper.part.2+0x90>
     a04:	strd	r4, [sp, #-16]!
     a08:	add	r4, r1, #88	; 0x58
     a0c:	mov	r5, r1
     a10:	str	r6, [sp, #8]
     a14:	mov	r1, #256	; 0x100
     a18:	add	r6, r0, #88	; 0x58
     a1c:	str	lr, [sp, #12]
     a20:	sub	sp, sp, #24
     a24:	mov	r3, r6
     a28:	mov	r0, r1
     a2c:	add	r2, pc, r2
     a30:	str	r4, [sp]
     a34:	bl	70c <sendto_realops_snomask@plt>
     a38:	ldr	r1, [pc, #84]	; a94 <do_dehelper.part.2+0x94>
     a3c:	mov	r2, r6
     a40:	mov	r0, r5
     a44:	add	r1, pc, r1
     a48:	bl	760 <sendto_one_notice@plt>
     a4c:	ldr	ip, [pc, #68]	; a98 <do_dehelper.part.2+0x98>
     a50:	mov	lr, #0
     a54:	mov	r1, r5
     a58:	mov	r0, r5
     a5c:	add	r3, sp, #8
     a60:	str	r4, [sp, #8]
     a64:	mov	r2, #3
     a68:	str	r4, [sp, #12]
     a6c:	str	lr, [sp, #20]
     a70:	add	ip, pc, ip
     a74:	str	ip, [sp, #16]
     a78:	bl	700 <user_mode@plt>
     a7c:	add	sp, sp, #24
     a80:	ldrd	r4, [sp]
     a84:	ldr	r6, [sp, #8]
     a88:	add	sp, sp, #12
     a8c:	pop	{pc}		; (ldr pc, [sp], #4)
     a90:	.word	0x000009dc
     a94:	.word	0x000009e0
     a98:	.word	0x000009d8

00000a9c <mo_dehelper>:
     a9c:	ldr	r3, [r2, #24]
     aa0:	strd	r4, [sp, #-16]!
     aa4:	mov	r4, r2
     aa8:	ldr	r5, [pc, #324]	; bf4 <mo_dehelper+0x158>
     aac:	str	r6, [sp, #8]
     ab0:	str	lr, [sp, #12]
     ab4:	cmp	r3, #0
     ab8:	ldr	r6, [sp, #16]
     abc:	add	r5, pc, r5
     ac0:	beq	ae4 <mo_dehelper+0x48>
     ac4:	ldr	r0, [r3, #36]	; 0x24
     ac8:	cmp	r0, #0
     acc:	beq	ae4 <mo_dehelper+0x48>
     ad0:	ldr	r1, [pc, #288]	; bf8 <mo_dehelper+0x15c>
     ad4:	add	r1, pc, r1
     ad8:	bl	778 <privilegeset_in_set@plt>
     adc:	cmp	r0, #0
     ae0:	bne	b20 <mo_dehelper+0x84>
     ae4:	ldr	r2, [pc, #272]	; bfc <mo_dehelper+0x160>
     ae8:	add	r3, r4, #88	; 0x58
     aec:	mov	r0, r4
     af0:	ldr	ip, [pc, #264]	; c00 <mo_dehelper+0x164>
     af4:	ldr	r1, [pc, #264]	; c04 <mo_dehelper+0x168>
     af8:	ldr	r2, [r5, r2]
     afc:	add	ip, pc, ip
     b00:	add	r1, pc, r1
     b04:	str	ip, [sp, #16]
     b08:	add	r2, r2, #88	; 0x58
     b0c:	ldrd	r4, [sp]
     b10:	ldr	r6, [sp, #8]
     b14:	ldr	lr, [sp, #12]
     b18:	add	sp, sp, #16
     b1c:	b	6f4 <sendto_one@plt>
     b20:	ldr	r0, [r6, #4]
     b24:	bl	76c <find_named_person@plt>
     b28:	cmp	r0, #0
     b2c:	beq	bbc <mo_dehelper+0x120>
     b30:	ldr	r1, [r0, #64]	; 0x40
     b34:	mov	r3, #0
     b38:	and	r2, r1, #8192	; 0x2000
     b3c:	orrs	r3, r2, r3
     b40:	beq	b50 <mo_dehelper+0xb4>
     b44:	ldrh	r3, [r0, #80]	; 0x50
     b48:	cmp	r3, #64	; 0x40
     b4c:	beq	b88 <mo_dehelper+0xec>
     b50:	ldrb	r3, [r4, #396]	; 0x18c
     b54:	ldrb	r1, [r0, #396]	; 0x18c
     b58:	cmp	r3, #0
     b5c:	ldr	r3, [r0, #32]
     b60:	addne	r2, r4, #396	; 0x18c
     b64:	addeq	r2, r4, #88	; 0x58
     b68:	cmp	r1, #0
     b6c:	ldr	r1, [pc, #148]	; c08 <mo_dehelper+0x16c>
     b70:	addne	ip, r0, #396	; 0x18c
     b74:	addeq	ip, r0, #88	; 0x58
     b78:	add	r3, r3, #88	; 0x58
     b7c:	str	ip, [sp, #16]
     b80:	add	r1, pc, r1
     b84:	b	b0c <mo_dehelper+0x70>
     b88:	ldr	r3, [pc, #124]	; c0c <mo_dehelper+0x170>
     b8c:	ldr	r2, [r0, #56]	; 0x38
     b90:	ldr	r3, [r5, r3]
     b94:	ldr	r3, [r3, #288]	; 0x120
     b98:	tst	r2, r3
     b9c:	beq	be4 <mo_dehelper+0x148>
     ba0:	mov	r1, r0
     ba4:	mov	r0, r4
     ba8:	ldrd	r4, [sp]
     bac:	ldr	r6, [sp, #8]
     bb0:	ldr	lr, [sp, #12]
     bb4:	add	sp, sp, #16
     bb8:	b	a00 <do_dehelper.part.2>
     bbc:	ldr	r2, [pc, #76]	; c10 <mo_dehelper+0x174>
     bc0:	mov	r0, r4
     bc4:	movw	r1, #401	; 0x191
     bc8:	ldrd	r4, [sp]
     bcc:	ldr	r3, [r6, #4]
     bd0:	add	r2, pc, r2
     bd4:	ldr	r6, [sp, #8]
     bd8:	ldr	lr, [sp, #12]
     bdc:	add	sp, sp, #16
     be0:	b	748 <sendto_one_numeric@plt>
     be4:	ldrd	r4, [sp]
     be8:	ldr	r6, [sp, #8]
     bec:	add	sp, sp, #12
     bf0:	pop	{pc}		; (ldr pc, [sp], #4)
     bf4:	.word	0x0001153c
     bf8:	.word	0x000009ac
     bfc:	.word	0x00000060
     c00:	.word	0x00000978
     c04:	.word	0x0000094c
     c08:	.word	0x0000092c
     c0c:	.word	0x00000050
     c10:	.word	0x000008c0

00000c14 <me_dehelper>:
     c14:	strd	r4, [sp, #-16]!
     c18:	ldr	r5, [sp, #16]
     c1c:	ldr	r4, [pc, #164]	; cc8 <me_dehelper+0xb4>
     c20:	ldr	r0, [r5, #4]
     c24:	str	r6, [sp, #8]
     c28:	mov	r6, r2
     c2c:	str	lr, [sp, #12]
     c30:	add	r4, pc, r4
     c34:	bl	754 <find_person@plt>
     c38:	subs	r1, r0, #0
     c3c:	beq	ca0 <me_dehelper+0x8c>
     c40:	ldr	r0, [r1, #64]	; 0x40
     c44:	mov	r3, #0
     c48:	and	r2, r0, #8192	; 0x2000
     c4c:	orrs	r3, r2, r3
     c50:	beq	c60 <me_dehelper+0x4c>
     c54:	ldrh	r3, [r1, #80]	; 0x50
     c58:	cmp	r3, #64	; 0x40
     c5c:	beq	c70 <me_dehelper+0x5c>
     c60:	ldrd	r4, [sp]
     c64:	ldr	r6, [sp, #8]
     c68:	add	sp, sp, #12
     c6c:	pop	{pc}		; (ldr pc, [sp], #4)
     c70:	ldr	r3, [pc, #84]	; ccc <me_dehelper+0xb8>
     c74:	ldr	r2, [r1, #56]	; 0x38
     c78:	ldr	r3, [r4, r3]
     c7c:	ldr	r3, [r3, #288]	; 0x120
     c80:	tst	r2, r3
     c84:	beq	c60 <me_dehelper+0x4c>
     c88:	mov	r0, r6
     c8c:	ldrd	r4, [sp]
     c90:	ldr	r6, [sp, #8]
     c94:	ldr	lr, [sp, #12]
     c98:	add	sp, sp, #16
     c9c:	b	a00 <do_dehelper.part.2>
     ca0:	ldr	r2, [pc, #40]	; cd0 <me_dehelper+0xbc>
     ca4:	mov	r0, r6
     ca8:	movw	r1, #401	; 0x191
     cac:	ldr	r3, [r5, #4]
     cb0:	ldrd	r4, [sp]
     cb4:	add	r2, pc, r2
     cb8:	ldr	r6, [sp, #8]
     cbc:	ldr	lr, [sp, #12]
     cc0:	add	sp, sp, #16
     cc4:	b	748 <sendto_one_numeric@plt>
     cc8:	.word	0x000113c8
     ccc:	.word	0x00000050
     cd0:	.word	0x000007dc

00000cd4 <_moddeinit>:
     cd4:	ldr	r3, [pc, #188]	; d98 <_moddeinit+0xc4>
     cd8:	mov	r2, #0
     cdc:	strd	r4, [sp, #-24]!	; 0xffffffe8
     ce0:	ldr	r1, [pc, #180]	; d9c <_moddeinit+0xc8>
     ce4:	strd	r6, [sp, #8]
     ce8:	str	r8, [sp, #16]
     cec:	add	r3, pc, r3
     cf0:	ldr	r8, [pc, #168]	; da0 <_moddeinit+0xcc>
     cf4:	str	lr, [sp, #20]
     cf8:	ldr	r3, [r3, r1]
     cfc:	add	r8, pc, r8
     d00:	str	r2, [r3, #288]	; 0x120
     d04:	bl	790 <construct_umodebuf@plt>
     d08:	ldr	r3, [r8]
     d0c:	cmp	r3, #0
     d10:	beq	d84 <_moddeinit+0xb0>
     d14:	ldr	r7, [pc, #136]	; da4 <_moddeinit+0xd0>
     d18:	ldr	r6, [pc, #136]	; da8 <_moddeinit+0xd4>
     d1c:	ldr	r4, [r3, #8]
     d20:	add	r7, pc, r7
     d24:	add	r6, pc, r6
     d28:	mov	r5, r4
     d2c:	ldr	r2, [r3, #4]
     d30:	cmp	r4, #0
     d34:	mov	r1, #0
     d38:	mov	r0, r3
     d3c:	strne	r2, [r4, #4]
     d40:	ldrne	r2, [r3, #4]
     d44:	streq	r2, [r7, #4]
     d48:	cmp	r2, #0
     d4c:	strne	r4, [r2, #8]
     d50:	ldr	r2, [r8, #8]
     d54:	str	r1, [r3, #4]
     d58:	str	r1, [r3, #8]
     d5c:	streq	r4, [r6]
     d60:	sub	r3, r2, #1
     d64:	str	r3, [r8, #8]
     d68:	bl	724 <rb_free_rb_dlink_node@plt>
     d6c:	cmp	r4, #0
     d70:	mov	r3, r5
     d74:	beq	d84 <_moddeinit+0xb0>
     d78:	ldr	r4, [r4, #8]
     d7c:	mov	r5, r4
     d80:	b	d2c <_moddeinit+0x58>
     d84:	ldrd	r4, [sp]
     d88:	ldrd	r6, [sp, #8]
     d8c:	ldr	r8, [sp, #16]
     d90:	add	sp, sp, #20
     d94:	pop	{pc}		; (ldr pc, [sp], #4)
     d98:	.word	0x0001130c
     d9c:	.word	0x00000050
     da0:	.word	0x00011430
     da4:	.word	0x0001140c
     da8:	.word	0x00011408

00000dac <helper_add>:
     dac:	str	r4, [sp, #-8]!
     db0:	subs	r4, r0, #0
     db4:	str	lr, [sp, #4]
     db8:	beq	e60 <helper_add+0xb4>
     dbc:	ldr	r3, [pc, #224]	; ea4 <helper_add+0xf8>
     dc0:	add	r3, pc, r3
     dc4:	ldr	r3, [r3]
     dc8:	cmp	r3, #0
     dcc:	bne	de0 <helper_add+0x34>
     dd0:	b	df8 <helper_add+0x4c>
     dd4:	ldr	r3, [r3, #8]
     dd8:	cmp	r3, #0
     ddc:	beq	df8 <helper_add+0x4c>
     de0:	ldr	r2, [r3]
     de4:	cmp	r4, r2
     de8:	bne	dd4 <helper_add+0x28>
     dec:	ldr	r4, [sp]
     df0:	add	sp, sp, #4
     df4:	pop	{pc}		; (ldr pc, [sp], #4)
     df8:	bl	73c <rb_make_rb_dlink_node@plt>
     dfc:	cmp	r0, #0
     e00:	beq	e80 <helper_add+0xd4>
     e04:	ldr	r2, [pc, #156]	; ea8 <helper_add+0xfc>
     e08:	mov	r3, #0
     e0c:	str	r4, [r0]
     e10:	str	r3, [r0, #4]
     e14:	add	r2, pc, r2
     e18:	ldr	r3, [r2]
     e1c:	cmp	r3, #0
     e20:	str	r3, [r0, #8]
     e24:	strne	r0, [r3, #4]
     e28:	beq	e50 <helper_add+0xa4>
     e2c:	ldr	r3, [pc, #120]	; eac <helper_add+0x100>
     e30:	ldr	r4, [sp]
     e34:	add	sp, sp, #4
     e38:	add	r3, pc, r3
     e3c:	ldr	r2, [r3, #8]
     e40:	str	r0, [r3]
     e44:	add	r2, r2, #1
     e48:	str	r2, [r3, #8]
     e4c:	pop	{pc}		; (ldr pc, [sp], #4)
     e50:	ldr	r3, [r2, #4]
     e54:	cmp	r3, #0
     e58:	streq	r0, [r2, #4]
     e5c:	b	e2c <helper_add+0x80>
     e60:	ldr	r3, [pc, #72]	; eb0 <helper_add+0x104>
     e64:	movw	r2, #311	; 0x137
     e68:	ldr	r1, [pc, #68]	; eb4 <helper_add+0x108>
     e6c:	ldr	r0, [pc, #68]	; eb8 <helper_add+0x10c>
     e70:	add	r3, pc, r3
     e74:	add	r1, pc, r1
     e78:	add	r0, pc, r0
     e7c:	bl	784 <__assert_fail@plt>
     e80:	ldr	r3, [pc, #52]	; ebc <helper_add+0x110>
     e84:	mov	r2, #144	; 0x90
     e88:	ldr	r1, [pc, #48]	; ec0 <helper_add+0x114>
     e8c:	ldr	r0, [pc, #48]	; ec4 <helper_add+0x118>
     e90:	add	r3, pc, r3
     e94:	add	r3, r3, #16
     e98:	add	r1, pc, r1
     e9c:	add	r0, pc, r0
     ea0:	bl	784 <__assert_fail@plt>
     ea4:	.word	0x0001136c
     ea8:	.word	0x00011318
     eac:	.word	0x000112f4
     eb0:	.word	0x00000514
     eb4:	.word	0x00000654
     eb8:	.word	0x0000066c
     ebc:	.word	0x000004f4
     ec0:	.word	0x00000630
     ec4:	.word	0x00000658

00000ec8 <h_hdl_new_remote_user>:
     ec8:	ldr	r2, [pc, #32]	; ef0 <h_hdl_new_remote_user+0x28>
     ecc:	ldr	r3, [pc, #32]	; ef4 <h_hdl_new_remote_user+0x2c>
     ed0:	ldr	r1, [r0, #56]	; 0x38
     ed4:	add	r2, pc, r2
     ed8:	ldr	r3, [r2, r3]
     edc:	ldr	r3, [r3, #288]	; 0x120
     ee0:	tst	r1, r3
     ee4:	bne	eec <h_hdl_new_remote_user+0x24>
     ee8:	bx	lr
     eec:	b	dac <helper_add>
     ef0:	.word	0x00011124
     ef4:	.word	0x00000050

00000ef8 <_modinit>:
     ef8:	strd	r4, [sp, #-16]!
     efc:	ldr	r4, [pc, #144]	; f94 <_modinit+0x9c>
     f00:	str	r6, [sp, #8]
     f04:	str	lr, [sp, #12]
     f08:	bl	718 <find_umode_slot@plt>
     f0c:	ldr	r3, [pc, #132]	; f98 <_modinit+0xa0>
     f10:	add	r4, pc, r4
     f14:	ldr	r5, [r4, r3]
     f18:	str	r0, [r5, #288]	; 0x120
     f1c:	bl	790 <construct_umodebuf@plt>
     f20:	ldr	r3, [pc, #116]	; f9c <_modinit+0xa4>
     f24:	ldr	r3, [r4, r3]
     f28:	ldr	r4, [r3]
     f2c:	cmp	r4, #0
     f30:	bne	f44 <_modinit+0x4c>
     f34:	b	f80 <_modinit+0x88>
     f38:	ldr	r4, [r4, #8]
     f3c:	cmp	r4, #0
     f40:	beq	f80 <_modinit+0x88>
     f44:	ldr	r0, [r4]
     f48:	ldrh	r3, [r0, #80]	; 0x50
     f4c:	cmp	r3, #64	; 0x40
     f50:	bne	f38 <_modinit+0x40>
     f54:	ldr	r3, [r0, #24]
     f58:	cmp	r3, #0
     f5c:	beq	f38 <_modinit+0x40>
     f60:	ldr	r2, [r0, #56]	; 0x38
     f64:	ldr	r3, [r5, #288]	; 0x120
     f68:	tst	r2, r3
     f6c:	beq	f38 <_modinit+0x40>
     f70:	bl	dac <helper_add>
     f74:	ldr	r4, [r4, #8]
     f78:	cmp	r4, #0
     f7c:	bne	f44 <_modinit+0x4c>
     f80:	ldrd	r4, [sp]
     f84:	mov	r0, #0
     f88:	ldr	r6, [sp, #8]
     f8c:	add	sp, sp, #12
     f90:	pop	{pc}		; (ldr pc, [sp], #4)
     f94:	.word	0x000110e8
     f98:	.word	0x00000050
     f9c:	.word	0x00000058

00000fa0 <h_hdl_umode_changed>:
     fa0:	strd	r4, [sp, #-20]!	; 0xffffffec
     fa4:	ldr	r5, [r0]
     fa8:	ldr	r3, [r0, #4]
     fac:	strd	r6, [sp, #8]
     fb0:	ldr	r6, [pc, #560]	; 11e8 <h_hdl_umode_changed+0x248>
     fb4:	str	lr, [sp, #16]
     fb8:	sub	sp, sp, #12
     fbc:	ldr	r2, [pc, #552]	; 11ec <h_hdl_umode_changed+0x24c>
     fc0:	add	r6, pc, r6
     fc4:	ldr	r7, [r6, r2]
     fc8:	ldr	r2, [r5, #56]	; 0x38
     fcc:	ldr	ip, [r7, #288]	; 0x120
     fd0:	eor	r3, r3, r2
     fd4:	tst	r2, ip
     fd8:	and	r4, r3, ip
     fdc:	beq	10bc <h_hdl_umode_changed+0x11c>
     fe0:	ldr	r3, [r5, #64]	; 0x40
     fe4:	mov	r1, #0
     fe8:	and	r0, r3, #8192	; 0x2000
     fec:	orrs	r3, r0, r1
     ff0:	bne	1010 <h_hdl_umode_changed+0x70>
     ff4:	cmp	r4, #0
     ff8:	bne	115c <h_hdl_umode_changed+0x1bc>
     ffc:	add	sp, sp, #12
    1000:	ldrd	r4, [sp]
    1004:	ldrd	r6, [sp, #8]
    1008:	add	sp, sp, #16
    100c:	pop	{pc}		; (ldr pc, [sp], #4)
    1010:	ldrh	r3, [r5, #80]	; 0x50
    1014:	cmp	r3, #64	; 0x40
    1018:	bne	ff4 <h_hdl_umode_changed+0x54>
    101c:	ldr	r3, [r5, #24]
    1020:	cmp	r3, r1
    1024:	beq	1050 <h_hdl_umode_changed+0xb0>
    1028:	ldr	r0, [r3, #36]	; 0x24
    102c:	cmp	r0, r1
    1030:	beq	1050 <h_hdl_umode_changed+0xb0>
    1034:	ldr	r1, [pc, #436]	; 11f0 <h_hdl_umode_changed+0x250>
    1038:	add	r1, pc, r1
    103c:	bl	778 <privilegeset_in_set@plt>
    1040:	cmp	r0, #0
    1044:	bne	ff4 <h_hdl_umode_changed+0x54>
    1048:	ldr	r2, [r5, #56]	; 0x38
    104c:	ldr	ip, [r7, #288]	; 0x120
    1050:	bic	r2, r2, ip
    1054:	add	r3, r5, #88	; 0x58
    1058:	ldr	r1, [pc, #404]	; 11f4 <h_hdl_umode_changed+0x254>
    105c:	mov	r0, r5
    1060:	str	r2, [r5, #56]	; 0x38
    1064:	ldr	ip, [pc, #396]	; 11f8 <h_hdl_umode_changed+0x258>
    1068:	ldr	r2, [r6, r1]
    106c:	ldr	r1, [pc, #392]	; 11fc <h_hdl_umode_changed+0x25c>
    1070:	add	ip, pc, ip
    1074:	str	ip, [sp]
    1078:	add	r2, r2, #88	; 0x58
    107c:	add	r1, pc, r1
    1080:	bl	6f4 <sendto_one@plt>
    1084:	cmp	r4, #0
    1088:	bne	ffc <h_hdl_umode_changed+0x5c>
    108c:	ldr	r3, [pc, #364]	; 1200 <h_hdl_umode_changed+0x260>
    1090:	add	r3, pc, r3
    1094:	ldr	r3, [r3]
    1098:	cmp	r3, #0
    109c:	beq	ffc <h_hdl_umode_changed+0x5c>
    10a0:	ldr	r2, [r3]
    10a4:	cmp	r5, r2
    10a8:	beq	1198 <h_hdl_umode_changed+0x1f8>
    10ac:	ldr	r3, [r3, #8]
    10b0:	cmp	r3, #0
    10b4:	bne	10a0 <h_hdl_umode_changed+0x100>
    10b8:	b	ffc <h_hdl_umode_changed+0x5c>
    10bc:	cmp	r4, #0
    10c0:	beq	ffc <h_hdl_umode_changed+0x5c>
    10c4:	ldr	r3, [pc, #312]	; 1204 <h_hdl_umode_changed+0x264>
    10c8:	add	r3, pc, r3
    10cc:	ldr	r3, [r3]
    10d0:	cmp	r3, #0
    10d4:	beq	ffc <h_hdl_umode_changed+0x5c>
    10d8:	ldr	r2, [r3]
    10dc:	cmp	r5, r2
    10e0:	beq	10fc <h_hdl_umode_changed+0x15c>
    10e4:	ldr	r3, [r3, #8]
    10e8:	cmp	r3, #0
    10ec:	beq	ffc <h_hdl_umode_changed+0x5c>
    10f0:	ldr	r2, [r3]
    10f4:	cmp	r5, r2
    10f8:	bne	10e4 <h_hdl_umode_changed+0x144>
    10fc:	ldr	r2, [r3, #4]
    1100:	ldr	r1, [r3, #8]
    1104:	cmp	r1, #0
    1108:	beq	1188 <h_hdl_umode_changed+0x1e8>
    110c:	str	r2, [r1, #4]
    1110:	ldr	r2, [r3, #4]
    1114:	cmp	r2, #0
    1118:	strne	r1, [r2, #8]
    111c:	beq	1178 <h_hdl_umode_changed+0x1d8>
    1120:	ldr	r2, [pc, #224]	; 1208 <h_hdl_umode_changed+0x268>
    1124:	add	r2, pc, r2
    1128:	mov	r1, #0
    112c:	mov	r0, r3
    1130:	str	r1, [r3, #4]
    1134:	str	r1, [r3, #8]
    1138:	ldr	r3, [r2, #8]
    113c:	sub	r3, r3, #1
    1140:	str	r3, [r2, #8]
    1144:	add	sp, sp, #12
    1148:	ldrd	r4, [sp]
    114c:	ldrd	r6, [sp, #8]
    1150:	ldr	lr, [sp, #16]
    1154:	add	sp, sp, #20
    1158:	b	724 <rb_free_rb_dlink_node@plt>
    115c:	mov	r0, r5
    1160:	add	sp, sp, #12
    1164:	ldrd	r4, [sp]
    1168:	ldrd	r6, [sp, #8]
    116c:	ldr	lr, [sp, #16]
    1170:	add	sp, sp, #20
    1174:	b	dac <helper_add>
    1178:	ldr	r2, [pc, #140]	; 120c <h_hdl_umode_changed+0x26c>
    117c:	add	r2, pc, r2
    1180:	str	r1, [r2]
    1184:	b	1120 <h_hdl_umode_changed+0x180>
    1188:	ldr	r0, [pc, #128]	; 1210 <h_hdl_umode_changed+0x270>
    118c:	add	r0, pc, r0
    1190:	str	r2, [r0, #4]
    1194:	b	1114 <h_hdl_umode_changed+0x174>
    1198:	ldr	r2, [r3, #4]
    119c:	ldr	r1, [r3, #8]
    11a0:	cmp	r1, #0
    11a4:	beq	11c8 <h_hdl_umode_changed+0x228>
    11a8:	str	r2, [r1, #4]
    11ac:	ldr	r2, [r3, #4]
    11b0:	cmp	r2, #0
    11b4:	strne	r1, [r2, #8]
    11b8:	beq	11d8 <h_hdl_umode_changed+0x238>
    11bc:	ldr	r2, [pc, #80]	; 1214 <h_hdl_umode_changed+0x274>
    11c0:	add	r2, pc, r2
    11c4:	b	1128 <h_hdl_umode_changed+0x188>
    11c8:	ldr	r0, [pc, #72]	; 1218 <h_hdl_umode_changed+0x278>
    11cc:	add	r0, pc, r0
    11d0:	str	r2, [r0, #4]
    11d4:	b	11b0 <h_hdl_umode_changed+0x210>
    11d8:	ldr	r2, [pc, #60]	; 121c <h_hdl_umode_changed+0x27c>
    11dc:	add	r2, pc, r2
    11e0:	str	r1, [r2]
    11e4:	b	11bc <h_hdl_umode_changed+0x21c>
    11e8:	.word	0x00011038
    11ec:	.word	0x00000050
    11f0:	.word	0x000004c8
    11f4:	.word	0x00000060
    11f8:	.word	0x00000490
    11fc:	.word	0x000003d0
    1200:	.word	0x0001109c
    1204:	.word	0x00011064
    1208:	.word	0x00011008
    120c:	.word	0x00010fb0
    1210:	.word	0x00010fa0
    1214:	.word	0x00010f6c
    1218:	.word	0x00010f60
    121c:	.word	0x00010f50

00001220 <recurse_client_exit>:
    1220:	ldrh	r3, [r0, #80]	; 0x50
    1224:	ldr	r2, [pc, #312]	; 1364 <recurse_client_exit+0x144>
    1228:	cmp	r3, #64	; 0x40
    122c:	add	r2, pc, r2
    1230:	beq	12a4 <recurse_client_exit+0x84>
    1234:	cmp	r3, #32
    1238:	bxne	lr
    123c:	strd	r4, [sp, #-16]!
    1240:	mov	r5, r0
    1244:	ldr	r3, [r0, #28]
    1248:	ldr	r4, [r3, #48]	; 0x30
    124c:	str	r6, [sp, #8]
    1250:	str	lr, [sp, #12]
    1254:	cmp	r4, #0
    1258:	beq	1274 <recurse_client_exit+0x54>
    125c:	ldr	r0, [r4]
    1260:	bl	1220 <recurse_client_exit>
    1264:	ldr	r4, [r4, #8]
    1268:	cmp	r4, #0
    126c:	bne	125c <recurse_client_exit+0x3c>
    1270:	ldr	r3, [r5, #28]
    1274:	ldr	r4, [r3, #36]	; 0x24
    1278:	cmp	r4, #0
    127c:	beq	1294 <recurse_client_exit+0x74>
    1280:	ldr	r0, [r4]
    1284:	bl	1220 <recurse_client_exit>
    1288:	ldr	r4, [r4, #8]
    128c:	cmp	r4, #0
    1290:	bne	1280 <recurse_client_exit+0x60>
    1294:	ldrd	r4, [sp]
    1298:	ldr	r6, [sp, #8]
    129c:	add	sp, sp, #12
    12a0:	pop	{pc}		; (ldr pc, [sp], #4)
    12a4:	ldr	r3, [r0, #24]
    12a8:	cmp	r3, #0
    12ac:	bxeq	lr
    12b0:	ldr	r3, [pc, #176]	; 1368 <recurse_client_exit+0x148>
    12b4:	ldr	r1, [r0, #56]	; 0x38
    12b8:	ldr	r3, [r2, r3]
    12bc:	ldr	r3, [r3, #288]	; 0x120
    12c0:	tst	r1, r3
    12c4:	bxeq	lr
    12c8:	ldr	r3, [pc, #156]	; 136c <recurse_client_exit+0x14c>
    12cc:	add	r3, pc, r3
    12d0:	ldr	r3, [r3]
    12d4:	cmp	r3, #0
    12d8:	bxeq	lr
    12dc:	ldr	r2, [r3]
    12e0:	cmp	r0, r2
    12e4:	beq	12f8 <recurse_client_exit+0xd8>
    12e8:	ldr	r3, [r3, #8]
    12ec:	cmp	r3, #0
    12f0:	bne	12dc <recurse_client_exit+0xbc>
    12f4:	bx	lr
    12f8:	ldr	r2, [r3, #4]
    12fc:	ldr	r1, [r3, #8]
    1300:	cmp	r1, #0
    1304:	beq	1344 <recurse_client_exit+0x124>
    1308:	str	r2, [r1, #4]
    130c:	ldr	r2, [r3, #4]
    1310:	cmp	r2, #0
    1314:	strne	r1, [r2, #8]
    1318:	beq	1354 <recurse_client_exit+0x134>
    131c:	ldr	r2, [pc, #76]	; 1370 <recurse_client_exit+0x150>
    1320:	mov	r1, #0
    1324:	mov	r0, r3
    1328:	str	r1, [r3, #4]
    132c:	str	r1, [r3, #8]
    1330:	add	r2, pc, r2
    1334:	ldr	r3, [r2, #8]
    1338:	sub	r3, r3, #1
    133c:	str	r3, [r2, #8]
    1340:	b	724 <rb_free_rb_dlink_node@plt>
    1344:	ldr	r0, [pc, #40]	; 1374 <recurse_client_exit+0x154>
    1348:	add	r0, pc, r0
    134c:	str	r2, [r0, #4]
    1350:	b	1310 <recurse_client_exit+0xf0>
    1354:	ldr	r2, [pc, #28]	; 1378 <recurse_client_exit+0x158>
    1358:	add	r2, pc, r2
    135c:	str	r1, [r2]
    1360:	b	131c <recurse_client_exit+0xfc>
    1364:	.word	0x00010dcc
    1368:	.word	0x00000050
    136c:	.word	0x00010e60
    1370:	.word	0x00010dfc
    1374:	.word	0x00010de4
    1378:	.word	0x00010dd4

0000137c <h_hdl_client_exit>:
    137c:	ldr	r0, [r0, #4]
    1380:	b	1220 <recurse_client_exit>

Disassembly of section .fini:

00001384 <_fini>:
    1384:	push	{r3, lr}
    1388:	pop	{r3, pc}
