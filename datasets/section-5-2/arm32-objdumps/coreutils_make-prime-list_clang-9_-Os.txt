
../repos/coreutils/src/make-prime-list:     file format elf32-littlearm


Disassembly of section .init:

000105b8 <.init>:
   105b8:	push	{r3, lr}
   105bc:	bl	106d4 <abort@plt+0x48>
   105c0:	pop	{r3, pc}

Disassembly of section .plt:

000105c4 <raise@plt-0x14>:
   105c4:	push	{lr}		; (str lr, [sp, #-4]!)
   105c8:	ldr	lr, [pc, #4]	; 105d4 <raise@plt-0x4>
   105cc:	add	lr, pc, lr
   105d0:	ldr	pc, [lr, #8]!
   105d4:	andeq	r1, r1, ip, lsr #20

000105d8 <raise@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #69632	; 0x11000
   105e0:	ldr	pc, [ip, #2604]!	; 0xa2c

000105e4 <free@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #69632	; 0x11000
   105ec:	ldr	pc, [ip, #2596]!	; 0xa24

000105f0 <ferror@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #69632	; 0x11000
   105f8:	ldr	pc, [ip, #2588]!	; 0xa1c

000105fc <puts@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #69632	; 0x11000
   10604:	ldr	pc, [ip, #2580]!	; 0xa14

00010608 <malloc@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #69632	; 0x11000
   10610:	ldr	pc, [ip, #2572]!	; 0xa0c

00010614 <__libc_start_main@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #69632	; 0x11000
   1061c:	ldr	pc, [ip, #2564]!	; 0xa04

00010620 <strerror@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #69632	; 0x11000
   10628:	ldr	pc, [ip, #2556]!	; 0x9fc

0001062c <__gmon_start__@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #69632	; 0x11000
   10634:	ldr	pc, [ip, #2548]!	; 0x9f4

00010638 <exit@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #69632	; 0x11000
   10640:	ldr	pc, [ip, #2540]!	; 0x9ec

00010644 <__errno_location@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #69632	; 0x11000
   1064c:	ldr	pc, [ip, #2532]!	; 0x9e4

00010650 <memset@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #69632	; 0x11000
   10658:	ldr	pc, [ip, #2524]!	; 0x9dc

0001065c <__printf_chk@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #69632	; 0x11000
   10664:	ldr	pc, [ip, #2516]!	; 0x9d4

00010668 <__fprintf_chk@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #69632	; 0x11000
   10670:	ldr	pc, [ip, #2508]!	; 0x9cc

00010674 <fclose@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #69632	; 0x11000
   1067c:	ldr	pc, [ip, #2500]!	; 0x9c4

00010680 <atoi@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #69632	; 0x11000
   10688:	ldr	pc, [ip, #2492]!	; 0x9bc

0001068c <abort@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #69632	; 0x11000
   10694:	ldr	pc, [ip, #2484]!	; 0x9b4

Disassembly of section .text:

00010698 <.text>:
   10698:	mov	fp, #0
   1069c:	mov	lr, #0
   106a0:	pop	{r1}		; (ldr r1, [sp], #4)
   106a4:	mov	r2, sp
   106a8:	push	{r2}		; (str r2, [sp, #-4]!)
   106ac:	push	{r0}		; (str r0, [sp, #-4]!)
   106b0:	ldr	ip, [pc, #16]	; 106c8 <abort@plt+0x3c>
   106b4:	push	{ip}		; (str ip, [sp, #-4]!)
   106b8:	ldr	r0, [pc, #12]	; 106cc <abort@plt+0x40>
   106bc:	ldr	r3, [pc, #12]	; 106d0 <abort@plt+0x44>
   106c0:	bl	10614 <__libc_start_main@plt>
   106c4:	bl	1068c <abort@plt>
   106c8:	andeq	r0, r1, r0, ror #27
   106cc:	andeq	r0, r1, r8, lsl #15
   106d0:	andeq	r0, r1, r0, lsl #27
   106d4:	ldr	r3, [pc, #20]	; 106f0 <abort@plt+0x64>
   106d8:	ldr	r2, [pc, #20]	; 106f4 <abort@plt+0x68>
   106dc:	add	r3, pc, r3
   106e0:	ldr	r2, [r3, r2]
   106e4:	cmp	r2, #0
   106e8:	bxeq	lr
   106ec:	b	1062c <__gmon_start__@plt>
   106f0:	andeq	r1, r1, ip, lsl r9
   106f4:	andeq	r0, r0, ip, asr #32
   106f8:	ldr	r0, [pc, #24]	; 10718 <abort@plt+0x8c>
   106fc:	ldr	r3, [pc, #24]	; 1071c <abort@plt+0x90>
   10700:	cmp	r3, r0
   10704:	bxeq	lr
   10708:	ldr	r3, [pc, #16]	; 10720 <abort@plt+0x94>
   1070c:	cmp	r3, #0
   10710:	bxeq	lr
   10714:	bx	r3
   10718:	andeq	r2, r2, r8, asr r0
   1071c:	andeq	r2, r2, r8, asr r0
   10720:	andeq	r0, r0, r0
   10724:	ldr	r0, [pc, #36]	; 10750 <abort@plt+0xc4>
   10728:	ldr	r1, [pc, #36]	; 10754 <abort@plt+0xc8>
   1072c:	sub	r1, r1, r0
   10730:	asr	r1, r1, #2
   10734:	add	r1, r1, r1, lsr #31
   10738:	asrs	r1, r1, #1
   1073c:	bxeq	lr
   10740:	ldr	r3, [pc, #16]	; 10758 <abort@plt+0xcc>
   10744:	cmp	r3, #0
   10748:	bxeq	lr
   1074c:	bx	r3
   10750:	andeq	r2, r2, r8, asr r0
   10754:	andeq	r2, r2, r8, asr r0
   10758:	andeq	r0, r0, r0
   1075c:	push	{r4, lr}
   10760:	ldr	r4, [pc, #24]	; 10780 <abort@plt+0xf4>
   10764:	ldrb	r3, [r4]
   10768:	cmp	r3, #0
   1076c:	popne	{r4, pc}
   10770:	bl	106f8 <abort@plt+0x6c>
   10774:	mov	r3, #1
   10778:	strb	r3, [r4]
   1077c:	pop	{r4, pc}
   10780:	andeq	r2, r2, r0, rrx
   10784:	b	10724 <abort@plt+0x98>
   10788:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1078c:	add	fp, sp, #28
   10790:	sub	sp, sp, #12
   10794:	cmp	r0, #2
   10798:	bne	10904 <abort@plt+0x278>
   1079c:	ldr	r0, [r1, #4]
   107a0:	bl	10680 <atoi@plt>
   107a4:	mov	r4, #0
   107a8:	cmp	r0, #3
   107ac:	blt	10928 <abort@plt+0x29c>
   107b0:	and	r1, r0, #1
   107b4:	add	r0, r0, r1
   107b8:	sub	r5, r0, #2
   107bc:	add	r0, r5, r5, lsr #31
   107c0:	asr	r6, r0, #1
   107c4:	mov	r0, r6
   107c8:	bl	10af0 <abort@plt+0x464>
   107cc:	mov	r1, #1
   107d0:	mov	r2, r6
   107d4:	mov	r9, r0
   107d8:	bl	10650 <memset@plt>
   107dc:	add	r0, r6, r6, lsl #1
   107e0:	lsl	r0, r0, #3
   107e4:	bl	10af0 <abort@plt+0x464>
   107e8:	mov	sl, r0
   107ec:	mov	r4, #0
   107f0:	cmp	r5, #2
   107f4:	str	r0, [sp, #8]
   107f8:	bcc	10934 <abort@plt+0x2a8>
   107fc:	movw	r2, #32177	; 0x7db1
   10800:	add	r5, r9, #1
   10804:	mov	r0, #3
   10808:	mov	r1, #28
   1080c:	mov	r4, #0
   10810:	mov	r8, #0
   10814:	str	r9, [sp]
   10818:	movt	r2, #62777	; 0xf539
   1081c:	add	r7, r0, r8, lsl #1
   10820:	add	r0, r4, r4, lsl #1
   10824:	str	r0, [sp, #4]
   10828:	str	r7, [sl, r0, lsl #3]
   1082c:	and	r0, r1, r7, lsl #1
   10830:	mov	r1, #0
   10834:	lsr	r0, r2, r0
   10838:	mov	r9, r1
   1083c:	mov	sl, r0
   10840:	umull	r0, r1, r0, r7
   10844:	mla	r1, r9, r7, r1
   10848:	rsbs	r2, r0, #2
   1084c:	umull	r0, r3, r2, sl
   10850:	rsc	r1, r1, #0
   10854:	mla	r2, r2, r9, r3
   10858:	mla	r1, r1, sl, r2
   1085c:	eor	r3, r0, sl
   10860:	eor	r2, r1, r9
   10864:	orrs	r2, r3, r2
   10868:	bne	10838 <abort@plt+0x1ac>
   1086c:	mvn	r0, #0
   10870:	mvn	r1, #0
   10874:	mov	r2, r7
   10878:	mov	r3, #0
   1087c:	bl	10c0c <abort@plt+0x580>
   10880:	ldr	r2, [sp, #8]
   10884:	ldr	r3, [sp, #4]
   10888:	add	r2, r2, r3, lsl #3
   1088c:	str	r9, [r2, #12]
   10890:	str	sl, [r2, #8]
   10894:	str	r0, [r2, #16]
   10898:	mul	r0, r7, r7
   1089c:	ldr	r9, [sp]
   108a0:	str	r1, [r2, #20]
   108a4:	mov	r1, #0
   108a8:	sub	r0, r0, #3
   108ac:	cmp	r6, r0, lsr #1
   108b0:	bls	108c8 <abort@plt+0x23c>
   108b4:	lsr	r0, r0, #1
   108b8:	strb	r1, [r9, r0]
   108bc:	add	r0, r0, r7
   108c0:	cmp	r0, r6
   108c4:	bcc	108b8 <abort@plt+0x22c>
   108c8:	ldr	sl, [sp, #8]
   108cc:	add	r4, r4, #1
   108d0:	add	r0, r8, #1
   108d4:	cmp	r0, r6
   108d8:	bcs	10934 <abort@plt+0x2a8>
   108dc:	ldrb	r1, [r5, r8]
   108e0:	mov	r8, r0
   108e4:	cmp	r1, #0
   108e8:	beq	108d0 <abort@plt+0x244>
   108ec:	movw	r2, #32177	; 0x7db1
   108f0:	mov	r8, r0
   108f4:	mov	r0, #3
   108f8:	mov	r1, #28
   108fc:	movt	r2, #62777	; 0xf539
   10900:	b	1081c <abort@plt+0x190>
   10904:	movw	r0, #8280	; 0x2058
   10908:	ldr	r3, [r1]
   1090c:	movw	r2, #3568	; 0xdf0
   10910:	mov	r1, #1
   10914:	mov	r4, #1
   10918:	movt	r0, #2
   1091c:	movt	r2, #1
   10920:	ldr	r0, [r0]
   10924:	bl	10668 <__fprintf_chk@plt>
   10928:	mov	r0, r4
   1092c:	sub	sp, fp, #28
   10930:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10934:	movw	r0, #3668	; 0xe54
   10938:	movt	r0, #1
   1093c:	bl	105fc <puts@plt>
   10940:	movw	r1, #3705	; 0xe79
   10944:	mov	r0, #1
   10948:	mov	r2, #64	; 0x40
   1094c:	movt	r1, #1
   10950:	bl	1065c <__printf_chk@plt>
   10954:	cmp	r4, #0
   10958:	beq	109f4 <abort@plt+0x368>
   1095c:	movw	r8, #3732	; 0xe94
   10960:	add	r6, sl, #192	; 0xc0
   10964:	movw	sl, #3748	; 0xea4
   10968:	mov	r0, #2
   1096c:	mov	r7, #0
   10970:	movt	r8, #1
   10974:	movt	sl, #1
   10978:	add	r1, r7, #8
   1097c:	cmp	r1, r4
   10980:	bcs	1099c <abort@plt+0x310>
   10984:	ldr	r5, [r6, #-192]	; 0xffffff40
   10988:	ldr	r1, [r6]
   1098c:	sub	r3, r1, r5
   10990:	cmp	r3, #256	; 0x100
   10994:	bcc	109a4 <abort@plt+0x318>
   10998:	b	10aec <abort@plt+0x460>
   1099c:	ldr	r5, [r6, #-192]	; 0xffffff40
   109a0:	mov	r3, #255	; 0xff
   109a4:	sub	r2, r5, r0
   109a8:	mov	r0, #1
   109ac:	mov	r1, r8
   109b0:	bl	1065c <__printf_chk@plt>
   109b4:	ldrd	r0, [r6, #-184]	; 0xffffff48
   109b8:	mov	r2, #0
   109bc:	mov	r3, #64	; 0x40
   109c0:	bl	10b28 <abort@plt+0x49c>
   109c4:	mov	r0, #1
   109c8:	mov	r1, sl
   109cc:	mov	r2, r5
   109d0:	bl	1065c <__printf_chk@plt>
   109d4:	add	r7, r7, #1
   109d8:	add	r6, r6, #24
   109dc:	mov	r0, r5
   109e0:	cmp	r4, r7
   109e4:	bne	10978 <abort@plt+0x2ec>
   109e8:	ldr	sl, [sp, #8]
   109ec:	add	r6, r5, #2
   109f0:	b	109f8 <abort@plt+0x36c>
   109f4:	mov	r6, #4
   109f8:	movw	r1, #3773	; 0xebd
   109fc:	mov	r0, #1
   10a00:	movt	r1, #1
   10a04:	bl	1065c <__printf_chk@plt>
   10a08:	ldr	r0, [sl]
   10a0c:	mul	r0, r0, r0
   10a10:	cmp	r0, r6
   10a14:	bhi	10a64 <abort@plt+0x3d8>
   10a18:	add	ip, sl, #24
   10a1c:	mov	r2, ip
   10a20:	ldr	r3, [r2, #-16]
   10a24:	ldr	r7, [r2, #-12]
   10a28:	ldr	r5, [r2, #-8]
   10a2c:	ldr	r4, [r2, #-4]
   10a30:	umull	r3, r1, r3, r6
   10a34:	mla	r1, r7, r6, r1
   10a38:	subs	r3, r5, r3
   10a3c:	sbcs	r1, r4, r1
   10a40:	bcs	10a58 <abort@plt+0x3cc>
   10a44:	ldr	r3, [r2], #24
   10a48:	mul	r3, r3, r3
   10a4c:	cmp	r3, r6
   10a50:	bls	10a20 <abort@plt+0x394>
   10a54:	b	10a64 <abort@plt+0x3d8>
   10a58:	add	r6, r6, #2
   10a5c:	cmp	r0, r6
   10a60:	bls	10a1c <abort@plt+0x390>
   10a64:	movw	r1, #3802	; 0xeda
   10a68:	mov	r0, #1
   10a6c:	mov	r2, r6
   10a70:	movt	r1, #1
   10a74:	bl	1065c <__printf_chk@plt>
   10a78:	mov	r0, r9
   10a7c:	bl	105e4 <free@plt>
   10a80:	mov	r0, sl
   10a84:	bl	105e4 <free@plt>
   10a88:	movw	r0, #8284	; 0x205c
   10a8c:	movt	r0, #2
   10a90:	ldr	r4, [r0]
   10a94:	mov	r0, r4
   10a98:	bl	105f0 <ferror@plt>
   10a9c:	mov	r5, r0
   10aa0:	mov	r0, r4
   10aa4:	bl	10674 <fclose@plt>
   10aa8:	mov	r4, #0
   10aac:	cmn	r5, r0
   10ab0:	beq	10928 <abort@plt+0x29c>
   10ab4:	movw	r0, #8280	; 0x2058
   10ab8:	movt	r0, #2
   10abc:	ldr	r4, [r0]
   10ac0:	bl	10644 <__errno_location@plt>
   10ac4:	ldr	r0, [r0]
   10ac8:	bl	10620 <strerror@plt>
   10acc:	movw	r2, #3624	; 0xe28
   10ad0:	mov	r3, r0
   10ad4:	mov	r0, r4
   10ad8:	mov	r1, #1
   10adc:	movt	r2, #1
   10ae0:	bl	10668 <__fprintf_chk@plt>
   10ae4:	mov	r4, #1
   10ae8:	b	10928 <abort@plt+0x29c>
   10aec:	bl	1068c <abort@plt>
   10af0:	push	{fp, lr}
   10af4:	mov	fp, sp
   10af8:	bl	10608 <malloc@plt>
   10afc:	cmp	r0, #0
   10b00:	popne	{fp, pc}
   10b04:	movw	r0, #8280	; 0x2058
   10b08:	movw	r2, #3641	; 0xe39
   10b0c:	mov	r1, #1
   10b10:	movt	r0, #2
   10b14:	movt	r2, #1
   10b18:	ldr	r0, [r0]
   10b1c:	bl	10668 <__fprintf_chk@plt>
   10b20:	mov	r0, #1
   10b24:	bl	10638 <exit@plt>
   10b28:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10b2c:	add	fp, sp, #24
   10b30:	bic	r4, r0, #-268435456	; 0xf0000000
   10b34:	mov	r6, r2
   10b38:	mov	r5, r3
   10b3c:	eor	r2, r4, r0
   10b40:	orrs	r2, r2, r1
   10b44:	bne	10b70 <abort@plt+0x4e4>
   10b48:	cmp	r6, #0
   10b4c:	beq	10bf0 <abort@plt+0x564>
   10b50:	movw	r1, #3850	; 0xf0a
   10b54:	mov	r0, #1
   10b58:	movt	r1, #1
   10b5c:	bl	1065c <__printf_chk@plt>
   10b60:	sub	r0, r5, #1
   10b64:	and	r0, r0, #3
   10b68:	add	r2, r0, #1
   10b6c:	b	10bf4 <abort@plt+0x568>
   10b70:	lsr	r0, r0, #28
   10b74:	lsr	r8, r1, #28
   10b78:	cmp	r1, #16777216	; 0x1000000
   10b7c:	orr	r7, r0, r1, lsl #4
   10b80:	bcc	10bc8 <abort@plt+0x53c>
   10b84:	movw	r1, #3746	; 0xea2
   10b88:	mov	r0, #1
   10b8c:	movt	r1, #1
   10b90:	bl	1065c <__printf_chk@plt>
   10b94:	add	r2, r6, #1
   10b98:	mov	r0, r7
   10b9c:	mov	r1, r8
   10ba0:	mov	r3, r5
   10ba4:	bl	10b28 <abort@plt+0x49c>
   10ba8:	movw	r1, #3834	; 0xefa
   10bac:	movw	r3, #3772	; 0xebc
   10bb0:	add	r2, r6, #3
   10bb4:	mov	r0, #1
   10bb8:	movt	r1, #1
   10bbc:	movt	r3, #1
   10bc0:	bl	1065c <__printf_chk@plt>
   10bc4:	b	10bdc <abort@plt+0x550>
   10bc8:	add	r2, r6, #1
   10bcc:	mov	r0, r7
   10bd0:	mov	r1, r8
   10bd4:	mov	r3, r5
   10bd8:	bl	10b28 <abort@plt+0x49c>
   10bdc:	movw	r1, #3840	; 0xf00
   10be0:	mov	r0, #1
   10be4:	mov	r2, #28
   10be8:	movt	r1, #1
   10bec:	bl	1065c <__printf_chk@plt>
   10bf0:	mov	r2, #7
   10bf4:	movw	r1, #3863	; 0xf17
   10bf8:	mov	r0, #1
   10bfc:	mov	r3, r4
   10c00:	movt	r1, #1
   10c04:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10c08:	b	1065c <__printf_chk@plt>
   10c0c:	cmp	r3, #0
   10c10:	cmpeq	r2, #0
   10c14:	bne	10c2c <abort@plt+0x5a0>
   10c18:	cmp	r1, #0
   10c1c:	cmpeq	r0, #0
   10c20:	mvnne	r1, #0
   10c24:	mvnne	r0, #0
   10c28:	b	10c48 <abort@plt+0x5bc>
   10c2c:	sub	sp, sp, #8
   10c30:	push	{sp, lr}
   10c34:	bl	10c58 <abort@plt+0x5cc>
   10c38:	ldr	lr, [sp, #4]
   10c3c:	add	sp, sp, #8
   10c40:	pop	{r2, r3}
   10c44:	bx	lr
   10c48:	push	{r1, lr}
   10c4c:	mov	r0, #8
   10c50:	bl	105d8 <raise@plt>
   10c54:	pop	{r1, pc}
   10c58:	cmp	r1, r3
   10c5c:	cmpeq	r0, r2
   10c60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c64:	mov	r4, r0
   10c68:	movcc	r0, #0
   10c6c:	mov	r5, r1
   10c70:	ldr	lr, [sp, #36]	; 0x24
   10c74:	movcc	r1, r0
   10c78:	bcc	10d74 <abort@plt+0x6e8>
   10c7c:	cmp	r3, #0
   10c80:	clzeq	ip, r2
   10c84:	clzne	ip, r3
   10c88:	addeq	ip, ip, #32
   10c8c:	cmp	r5, #0
   10c90:	clzeq	r1, r4
   10c94:	addeq	r1, r1, #32
   10c98:	clzne	r1, r5
   10c9c:	sub	ip, ip, r1
   10ca0:	sub	sl, ip, #32
   10ca4:	lsl	r9, r3, ip
   10ca8:	rsb	fp, ip, #32
   10cac:	orr	r9, r9, r2, lsl sl
   10cb0:	orr	r9, r9, r2, lsr fp
   10cb4:	lsl	r8, r2, ip
   10cb8:	cmp	r5, r9
   10cbc:	cmpeq	r4, r8
   10cc0:	movcc	r0, #0
   10cc4:	movcc	r1, r0
   10cc8:	bcc	10ce4 <abort@plt+0x658>
   10ccc:	mov	r0, #1
   10cd0:	subs	r4, r4, r8
   10cd4:	lsl	r1, r0, sl
   10cd8:	orr	r1, r1, r0, lsr fp
   10cdc:	lsl	r0, r0, ip
   10ce0:	sbc	r5, r5, r9
   10ce4:	cmp	ip, #0
   10ce8:	beq	10d74 <abort@plt+0x6e8>
   10cec:	lsr	r6, r8, #1
   10cf0:	orr	r6, r6, r9, lsl #31
   10cf4:	lsr	r7, r9, #1
   10cf8:	mov	r2, ip
   10cfc:	b	10d20 <abort@plt+0x694>
   10d00:	subs	r3, r4, r6
   10d04:	sbc	r8, r5, r7
   10d08:	adds	r3, r3, r3
   10d0c:	adc	r8, r8, r8
   10d10:	adds	r4, r3, #1
   10d14:	adc	r5, r8, #0
   10d18:	subs	r2, r2, #1
   10d1c:	beq	10d3c <abort@plt+0x6b0>
   10d20:	cmp	r5, r7
   10d24:	cmpeq	r4, r6
   10d28:	bcs	10d00 <abort@plt+0x674>
   10d2c:	adds	r4, r4, r4
   10d30:	adc	r5, r5, r5
   10d34:	subs	r2, r2, #1
   10d38:	bne	10d20 <abort@plt+0x694>
   10d3c:	lsr	r3, r4, ip
   10d40:	orr	r3, r3, r5, lsl fp
   10d44:	lsr	r2, r5, ip
   10d48:	orr	r3, r3, r5, lsr sl
   10d4c:	adds	r0, r0, r4
   10d50:	mov	r4, r3
   10d54:	lsl	r3, r2, ip
   10d58:	orr	r3, r3, r4, lsl sl
   10d5c:	lsl	ip, r4, ip
   10d60:	orr	r3, r3, r4, lsr fp
   10d64:	adc	r1, r1, r5
   10d68:	subs	r0, r0, ip
   10d6c:	mov	r5, r2
   10d70:	sbc	r1, r1, r3
   10d74:	cmp	lr, #0
   10d78:	strdne	r4, [lr]
   10d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d84:	mov	r7, r0
   10d88:	ldr	r6, [pc, #72]	; 10dd8 <abort@plt+0x74c>
   10d8c:	ldr	r5, [pc, #72]	; 10ddc <abort@plt+0x750>
   10d90:	add	r6, pc, r6
   10d94:	add	r5, pc, r5
   10d98:	sub	r6, r6, r5
   10d9c:	mov	r8, r1
   10da0:	mov	r9, r2
   10da4:	bl	105b8 <raise@plt-0x20>
   10da8:	asrs	r6, r6, #2
   10dac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10db0:	mov	r4, #0
   10db4:	add	r4, r4, #1
   10db8:	ldr	r3, [r5], #4
   10dbc:	mov	r2, r9
   10dc0:	mov	r1, r8
   10dc4:	mov	r0, r7
   10dc8:	blx	r3
   10dcc:	cmp	r6, r4
   10dd0:	bne	10db4 <abort@plt+0x728>
   10dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10dd8:	andeq	r1, r1, r4, ror r1
   10ddc:	andeq	r1, r1, ip, ror #2
   10de0:	bx	lr

Disassembly of section .fini:

00010de4 <.fini>:
   10de4:	push	{r3, lr}
   10de8:	pop	{r3, pc}
