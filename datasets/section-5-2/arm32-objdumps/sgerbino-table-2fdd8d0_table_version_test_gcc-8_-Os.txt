
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011a28 <.init>:
   11a28:	push	{r3, lr}
   11a2c:	bl	11b70 <_start@@Base+0x3c>
   11a30:	pop	{r3, pc}

Disassembly of section .plt:

00011a34 <strcmp@plt-0x14>:
   11a34:	push	{lr}		; (str lr, [sp, #-4]!)
   11a38:	ldr	lr, [pc, #4]	; 11a44 <strcmp@plt-0x4>
   11a3c:	add	lr, pc, lr
   11a40:	ldr	pc, [lr, #8]!
   11a44:			; <UNDEFINED> instruction: 0x000135bc

00011a48 <strcmp@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #77824	; 0x13000
   11a50:	ldr	pc, [ip, #1468]!	; 0x5bc

00011a54 <printf@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #77824	; 0x13000
   11a5c:	ldr	pc, [ip, #1460]!	; 0x5b4

00011a60 <free@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #77824	; 0x13000
   11a68:	ldr	pc, [ip, #1452]!	; 0x5ac

00011a6c <realloc@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #77824	; 0x13000
   11a74:	ldr	pc, [ip, #1444]!	; 0x5a4

00011a78 <strcpy@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #77824	; 0x13000
   11a80:	ldr	pc, [ip, #1436]!	; 0x59c

00011a84 <malloc@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #77824	; 0x13000
   11a8c:	ldr	pc, [ip, #1428]!	; 0x594

00011a90 <__libc_start_main@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1420]!	; 0x58c

00011a9c <__gmon_start__@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1412]!	; 0x584

00011aa8 <strlen@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1404]!	; 0x57c

00011ab4 <snprintf@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1396]!	; 0x574

00011ac0 <__isoc99_sscanf@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1388]!	; 0x56c

00011acc <abort@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1380]!	; 0x564

Disassembly of section .text:

00011ad8 <main@@Base>:
   11ad8:	push	{r4, lr}
   11adc:	bl	12224 <table_get_major_version@@Base>
   11ae0:	mov	r1, r0
   11ae4:	ldr	r0, [pc, #56]	; 11b24 <main@@Base+0x4c>
   11ae8:	bl	11a54 <printf@plt>
   11aec:	bl	1222c <table_get_minor_version@@Base>
   11af0:	mov	r1, r0
   11af4:	ldr	r0, [pc, #44]	; 11b28 <main@@Base+0x50>
   11af8:	bl	11a54 <printf@plt>
   11afc:	bl	12234 <table_get_patch_version@@Base>
   11b00:	mov	r1, r0
   11b04:	ldr	r0, [pc, #32]	; 11b2c <main@@Base+0x54>
   11b08:	bl	11a54 <printf@plt>
   11b0c:	bl	1223c <table_get_version@@Base>
   11b10:	mov	r1, r0
   11b14:	ldr	r0, [pc, #20]	; 11b30 <main@@Base+0x58>
   11b18:	bl	11a54 <printf@plt>
   11b1c:	mov	r0, #0
   11b20:	pop	{r4, pc}
   11b24:	andeq	r4, r1, r8, asr #2
   11b28:	andeq	r4, r1, r1, ror #2
   11b2c:	andeq	r4, r1, sl, ror r1
   11b30:	muleq	r1, r3, r1

00011b34 <_start@@Base>:
   11b34:	mov	fp, #0
   11b38:	mov	lr, #0
   11b3c:	pop	{r1}		; (ldr r1, [sp], #4)
   11b40:	mov	r2, sp
   11b44:	push	{r2}		; (str r2, [sp, #-4]!)
   11b48:	push	{r0}		; (str r0, [sp, #-4]!)
   11b4c:	ldr	ip, [pc, #16]	; 11b64 <_start@@Base+0x30>
   11b50:	push	{ip}		; (str ip, [sp, #-4]!)
   11b54:	ldr	r0, [pc, #12]	; 11b68 <_start@@Base+0x34>
   11b58:	ldr	r3, [pc, #12]	; 11b6c <_start@@Base+0x38>
   11b5c:	bl	11a90 <__libc_start_main@plt>
   11b60:	bl	11acc <abort@plt>
   11b64:	andeq	r4, r1, r8, lsr r1
   11b68:	ldrdeq	r1, [r1], -r8
   11b6c:	ldrdeq	r4, [r1], -r8
   11b70:	ldr	r3, [pc, #20]	; 11b8c <_start@@Base+0x58>
   11b74:	ldr	r2, [pc, #20]	; 11b90 <_start@@Base+0x5c>
   11b78:	add	r3, pc, r3
   11b7c:	ldr	r2, [r3, r2]
   11b80:	cmp	r2, #0
   11b84:	bxeq	lr
   11b88:	b	11a9c <__gmon_start__@plt>
   11b8c:	andeq	r3, r1, r0, lsl #9
   11b90:	andeq	r0, r0, ip, lsr r0
   11b94:	ldr	r0, [pc, #24]	; 11bb4 <_start@@Base+0x80>
   11b98:	ldr	r3, [pc, #24]	; 11bb8 <_start@@Base+0x84>
   11b9c:	cmp	r3, r0
   11ba0:	bxeq	lr
   11ba4:	ldr	r3, [pc, #16]	; 11bbc <_start@@Base+0x88>
   11ba8:	cmp	r3, #0
   11bac:	bxeq	lr
   11bb0:	bx	r3
   11bb4:	andeq	r5, r2, r8, asr #32
   11bb8:	andeq	r5, r2, r8, asr #32
   11bbc:	andeq	r0, r0, r0
   11bc0:	ldr	r0, [pc, #36]	; 11bec <_start@@Base+0xb8>
   11bc4:	ldr	r1, [pc, #36]	; 11bf0 <_start@@Base+0xbc>
   11bc8:	sub	r1, r1, r0
   11bcc:	asr	r1, r1, #2
   11bd0:	add	r1, r1, r1, lsr #31
   11bd4:	asrs	r1, r1, #1
   11bd8:	bxeq	lr
   11bdc:	ldr	r3, [pc, #16]	; 11bf4 <_start@@Base+0xc0>
   11be0:	cmp	r3, #0
   11be4:	bxeq	lr
   11be8:	bx	r3
   11bec:	andeq	r5, r2, r8, asr #32
   11bf0:	andeq	r5, r2, r8, asr #32
   11bf4:	andeq	r0, r0, r0
   11bf8:	push	{r4, lr}
   11bfc:	ldr	r4, [pc, #24]	; 11c1c <_start@@Base+0xe8>
   11c00:	ldrb	r3, [r4]
   11c04:	cmp	r3, #0
   11c08:	popne	{r4, pc}
   11c0c:	bl	11b94 <_start@@Base+0x60>
   11c10:	mov	r3, #1
   11c14:	strb	r3, [r4]
   11c18:	pop	{r4, pc}
   11c1c:	andeq	r5, r2, r8, asr #32
   11c20:	b	11bc0 <_start@@Base+0x8c>

00011c24 <table_init@@Base>:
   11c24:	mov	r3, #0
   11c28:	mov	r2, #10
   11c2c:	mov	r1, #20
   11c30:	str	r3, [r0]
   11c34:	str	r3, [r0, #4]
   11c38:	strd	r2, [r0, #8]
   11c3c:	str	r3, [r0, #16]
   11c40:	str	r3, [r0, #20]
   11c44:	str	r1, [r0, #24]
   11c48:	str	r3, [r0, #28]
   11c4c:	str	r3, [r0, #32]
   11c50:	str	r3, [r0, #36]	; 0x24
   11c54:	str	r3, [r0, #40]	; 0x28
   11c58:	str	r3, [r0, #44]	; 0x2c
   11c5c:	strd	r2, [r0, #48]	; 0x30
   11c60:	bx	lr

00011c64 <table_new@@Base>:
   11c64:	push	{r4, lr}
   11c68:	mov	r0, #56	; 0x38
   11c6c:	bl	11a84 <malloc@plt>
   11c70:	mov	r4, r0
   11c74:	bl	11c24 <table_init@@Base>
   11c78:	pop	{r4, pc}

00011c7c <table_destroy@@Base>:
   11c7c:	push	{r4, r5, r6, lr}
   11c80:	subs	r4, r0, #0
   11c84:	popeq	{r4, r5, r6, pc}
   11c88:	mvn	r2, #0
   11c8c:	mov	r3, #64	; 0x40
   11c90:	mov	r1, r2
   11c94:	mov	r5, #0
   11c98:	bl	12450 <table_notify@@Base>
   11c9c:	mov	r0, r4
   11ca0:	bl	13044 <table_get_row_length@@Base>
   11ca4:	mov	r6, r0
   11ca8:	cmp	r6, r5
   11cac:	bgt	11d1c <table_destroy@@Base+0xa0>
   11cb0:	ldr	r0, [r4, #16]
   11cb4:	cmp	r0, #0
   11cb8:	beq	11cc0 <table_destroy@@Base+0x44>
   11cbc:	bl	11a60 <free@plt>
   11cc0:	mov	r0, r4
   11cc4:	mov	r5, #0
   11cc8:	bl	12528 <table_get_column_length@@Base>
   11ccc:	mov	r6, r0
   11cd0:	cmp	r6, r5
   11cd4:	bgt	11d30 <table_destroy@@Base+0xb4>
   11cd8:	ldr	r0, [r4]
   11cdc:	cmp	r0, #0
   11ce0:	beq	11ce8 <table_destroy@@Base+0x6c>
   11ce4:	bl	11a60 <free@plt>
   11ce8:	ldr	r0, [r4, #36]	; 0x24
   11cec:	cmp	r0, #0
   11cf0:	beq	11cf8 <table_destroy@@Base+0x7c>
   11cf4:	bl	11a60 <free@plt>
   11cf8:	ldr	r0, [r4, #40]	; 0x28
   11cfc:	cmp	r0, #0
   11d00:	beq	11d08 <table_destroy@@Base+0x8c>
   11d04:	bl	11a60 <free@plt>
   11d08:	ldr	r0, [r4, #44]	; 0x2c
   11d0c:	cmp	r0, #0
   11d10:	popeq	{r4, r5, r6, pc}
   11d14:	pop	{r4, r5, r6, lr}
   11d18:	b	11a60 <free@plt>
   11d1c:	mov	r1, r5
   11d20:	mov	r0, r4
   11d24:	bl	12ff4 <table_row_destroy@@Base>
   11d28:	add	r5, r5, #1
   11d2c:	b	11ca8 <table_destroy@@Base+0x2c>
   11d30:	mov	r1, r5
   11d34:	mov	r0, r4
   11d38:	bl	1250c <table_column_destroy@@Base>
   11d3c:	add	r5, r5, #1
   11d40:	b	11cd0 <table_destroy@@Base+0x54>

00011d44 <table_delete@@Base>:
   11d44:	push	{r4, lr}
   11d48:	mov	r4, r0
   11d4c:	bl	11c7c <table_destroy@@Base>
   11d50:	mov	r0, r4
   11d54:	pop	{r4, lr}
   11d58:	b	11a60 <free@plt>

00011d5c <table_dupe@@Base>:
   11d5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11d60:	sub	sp, sp, #20
   11d64:	mov	r6, r0
   11d68:	mov	r4, #0
   11d6c:	bl	13044 <table_get_row_length@@Base>
   11d70:	mov	r9, r0
   11d74:	mov	r0, r6
   11d78:	bl	12528 <table_get_column_length@@Base>
   11d7c:	mov	r8, r0
   11d80:	bl	11c64 <table_new@@Base>
   11d84:	mov	r7, r0
   11d88:	cmp	r4, r8
   11d8c:	blt	11da8 <table_dupe@@Base+0x4c>
   11d90:	mov	r5, #0
   11d94:	cmp	r5, r9
   11d98:	mov	r0, r7
   11d9c:	blt	11ddc <table_dupe@@Base+0x80>
   11da0:	add	sp, sp, #20
   11da4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11da8:	mov	r1, r4
   11dac:	mov	r0, r6
   11db0:	bl	127ec <table_get_column_name@@Base>
   11db4:	mov	r5, r0
   11db8:	mov	r1, r4
   11dbc:	mov	r0, r6
   11dc0:	add	r4, r4, #1
   11dc4:	bl	12580 <table_get_column_data_type@@Base>
   11dc8:	mov	r2, r0
   11dcc:	mov	r1, r5
   11dd0:	mov	r0, r7
   11dd4:	bl	12594 <table_add_column@@Base>
   11dd8:	b	11d88 <table_dupe@@Base+0x2c>
   11ddc:	mov	r4, #0
   11de0:	bl	1304c <table_add_row@@Base>
   11de4:	cmp	r4, r8
   11de8:	addge	r5, r5, #1
   11dec:	bge	11d94 <table_dupe@@Base+0x38>
   11df0:	mov	r1, r4
   11df4:	mov	r0, r6
   11df8:	bl	12580 <table_get_column_data_type@@Base>
   11dfc:	cmp	r0, #23
   11e00:	ldrls	pc, [pc, r0, lsl #2]
   11e04:	b	11e8c <table_dupe@@Base+0x130>
   11e08:	andeq	r1, r1, r8, ror #28
   11e0c:	muleq	r1, r4, lr
   11e10:			; <UNDEFINED> instruction: 0x00011ebc
   11e14:	andeq	r1, r1, r4, ror #29
   11e18:	andeq	r1, r1, ip, lsl #30
   11e1c:	andeq	r1, r1, r4, lsr pc
   11e20:	andeq	r1, r1, ip, asr pc
   11e24:	andeq	r1, r1, r4, lsl #31
   11e28:	andeq	r1, r1, ip, lsr #31
   11e2c:	ldrdeq	r1, [r1], -r4
   11e30:	strdeq	r1, [r1], -ip
   11e34:	andeq	r2, r1, r4, lsr #32
   11e38:	andeq	r2, r1, ip, asr #32
   11e3c:	andeq	r2, r1, r4, ror r0
   11e40:	muleq	r1, ip, r0
   11e44:	andeq	r2, r1, r4, asr #1
   11e48:	andeq	r2, r1, r4, lsl r1
   11e4c:	andeq	r2, r1, r8, lsr r1
   11e50:	andeq	r2, r1, ip, asr r1
   11e54:	andeq	r2, r1, r8, lsr #3
   11e58:	ldrdeq	r2, [r1], -r0
   11e5c:	andeq	r2, r1, ip, ror #1
   11e60:	andeq	r2, r1, r0, lsl #3
   11e64:	strdeq	r2, [r1], -r8
   11e68:	mov	r2, r4
   11e6c:	mov	r1, r5
   11e70:	mov	r0, r6
   11e74:	bl	12edc <table_get_int@@Base>
   11e78:	mov	r3, r0
   11e7c:	mov	r2, r4
   11e80:	mov	r1, r5
   11e84:	mov	r0, r7
   11e88:	bl	134fc <table_set_int@@Base>
   11e8c:	add	r4, r4, #1
   11e90:	b	11de4 <table_dupe@@Base+0x88>
   11e94:	mov	r2, r4
   11e98:	mov	r1, r5
   11e9c:	mov	r0, r6
   11ea0:	bl	12eec <table_get_uint@@Base>
   11ea4:	mov	r3, r0
   11ea8:	mov	r2, r4
   11eac:	mov	r1, r5
   11eb0:	mov	r0, r7
   11eb4:	bl	1351c <table_set_uint@@Base>
   11eb8:	b	11e8c <table_dupe@@Base+0x130>
   11ebc:	mov	r2, r4
   11ec0:	mov	r1, r5
   11ec4:	mov	r0, r6
   11ec8:	bl	12efc <table_get_int8@@Base>
   11ecc:	mov	r3, r0
   11ed0:	mov	r2, r4
   11ed4:	mov	r1, r5
   11ed8:	mov	r0, r7
   11edc:	bl	1353c <table_set_int8@@Base>
   11ee0:	b	11e8c <table_dupe@@Base+0x130>
   11ee4:	mov	r2, r4
   11ee8:	mov	r1, r5
   11eec:	mov	r0, r6
   11ef0:	bl	12f0c <table_get_uint8@@Base>
   11ef4:	mov	r3, r0
   11ef8:	mov	r2, r4
   11efc:	mov	r1, r5
   11f00:	mov	r0, r7
   11f04:	bl	1355c <table_set_uint8@@Base>
   11f08:	b	11e8c <table_dupe@@Base+0x130>
   11f0c:	mov	r2, r4
   11f10:	mov	r1, r5
   11f14:	mov	r0, r6
   11f18:	bl	12f1c <table_get_int16@@Base>
   11f1c:	mov	r3, r0
   11f20:	mov	r2, r4
   11f24:	mov	r1, r5
   11f28:	mov	r0, r7
   11f2c:	bl	1357c <table_set_int16@@Base>
   11f30:	b	11e8c <table_dupe@@Base+0x130>
   11f34:	mov	r2, r4
   11f38:	mov	r1, r5
   11f3c:	mov	r0, r6
   11f40:	bl	12f2c <table_get_uint16@@Base>
   11f44:	mov	r3, r0
   11f48:	mov	r2, r4
   11f4c:	mov	r1, r5
   11f50:	mov	r0, r7
   11f54:	bl	1359c <table_set_uint16@@Base>
   11f58:	b	11e8c <table_dupe@@Base+0x130>
   11f5c:	mov	r2, r4
   11f60:	mov	r1, r5
   11f64:	mov	r0, r6
   11f68:	bl	12f3c <table_get_int32@@Base>
   11f6c:	mov	r3, r0
   11f70:	mov	r2, r4
   11f74:	mov	r1, r5
   11f78:	mov	r0, r7
   11f7c:	bl	135bc <table_set_int32@@Base>
   11f80:	b	11e8c <table_dupe@@Base+0x130>
   11f84:	mov	r2, r4
   11f88:	mov	r1, r5
   11f8c:	mov	r0, r6
   11f90:	bl	12f40 <table_get_uint32@@Base>
   11f94:	mov	r3, r0
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	mov	r0, r7
   11fa4:	bl	135dc <table_set_uint32@@Base>
   11fa8:	b	11e8c <table_dupe@@Base+0x130>
   11fac:	mov	r2, r4
   11fb0:	mov	r1, r5
   11fb4:	mov	r0, r6
   11fb8:	bl	12f44 <table_get_int64@@Base>
   11fbc:	mov	r2, r4
   11fc0:	strd	r0, [sp]
   11fc4:	mov	r1, r5
   11fc8:	mov	r0, r7
   11fcc:	bl	135fc <table_set_int64@@Base>
   11fd0:	b	11e8c <table_dupe@@Base+0x130>
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r0, r6
   11fe0:	bl	12f54 <table_get_uint64@@Base>
   11fe4:	mov	r2, r4
   11fe8:	strd	r0, [sp]
   11fec:	mov	r1, r5
   11ff0:	mov	r0, r7
   11ff4:	bl	13618 <table_set_uint64@@Base>
   11ff8:	b	11e8c <table_dupe@@Base+0x130>
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r0, r6
   12008:	bl	12f64 <table_get_short@@Base>
   1200c:	mov	r3, r0
   12010:	mov	r2, r4
   12014:	mov	r1, r5
   12018:	mov	r0, r7
   1201c:	bl	13634 <table_set_short@@Base>
   12020:	b	11e8c <table_dupe@@Base+0x130>
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r0, r6
   12030:	bl	12f68 <table_get_ushort@@Base>
   12034:	mov	r3, r0
   12038:	mov	r2, r4
   1203c:	mov	r1, r5
   12040:	mov	r0, r7
   12044:	bl	13654 <table_set_ushort@@Base>
   12048:	b	11e8c <table_dupe@@Base+0x130>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r0, r6
   12058:	bl	12f6c <table_get_long@@Base>
   1205c:	mov	r3, r0
   12060:	mov	r2, r4
   12064:	mov	r1, r5
   12068:	mov	r0, r7
   1206c:	bl	13674 <table_set_long@@Base>
   12070:	b	11e8c <table_dupe@@Base+0x130>
   12074:	mov	r2, r4
   12078:	mov	r1, r5
   1207c:	mov	r0, r6
   12080:	bl	12f7c <table_get_ulong@@Base>
   12084:	mov	r3, r0
   12088:	mov	r2, r4
   1208c:	mov	r1, r5
   12090:	mov	r0, r7
   12094:	bl	13694 <table_set_ulong@@Base>
   12098:	b	11e8c <table_dupe@@Base+0x130>
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r0, r6
   120a8:	bl	12f8c <table_get_llong@@Base>
   120ac:	mov	r2, r4
   120b0:	strd	r0, [sp]
   120b4:	mov	r1, r5
   120b8:	mov	r0, r7
   120bc:	bl	136b4 <table_set_llong@@Base>
   120c0:	b	11e8c <table_dupe@@Base+0x130>
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r6
   120d0:	bl	12f90 <table_get_ullong@@Base>
   120d4:	mov	r2, r4
   120d8:	strd	r0, [sp]
   120dc:	mov	r1, r5
   120e0:	mov	r0, r7
   120e4:	bl	136d0 <table_set_ullong@@Base>
   120e8:	b	11e8c <table_dupe@@Base+0x130>
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r6
   120f8:	bl	12fcc <table_get_string@@Base>
   120fc:	mov	r3, r0
   12100:	mov	r2, r4
   12104:	mov	r1, r5
   12108:	mov	r0, r7
   1210c:	bl	1374c <table_set_string@@Base>
   12110:	b	11e8c <table_dupe@@Base+0x130>
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r6
   12120:	bl	12f94 <table_get_float@@Base>
   12124:	mov	r2, r4
   12128:	mov	r1, r5
   1212c:	mov	r0, r7
   12130:	bl	136ec <table_set_float@@Base>
   12134:	b	11e8c <table_dupe@@Base+0x130>
   12138:	mov	r2, r4
   1213c:	mov	r1, r5
   12140:	mov	r0, r6
   12144:	bl	12fa4 <table_get_double@@Base>
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	mov	r0, r7
   12154:	bl	1370c <table_set_double@@Base>
   12158:	b	11e8c <table_dupe@@Base+0x130>
   1215c:	mov	r2, r4
   12160:	mov	r1, r5
   12164:	mov	r0, r6
   12168:	bl	12fb4 <table_get_ldouble@@Base>
   1216c:	mov	r2, r4
   12170:	mov	r1, r5
   12174:	mov	r0, r7
   12178:	bl	1372c <table_set_ldouble@@Base>
   1217c:	b	11e8c <table_dupe@@Base+0x130>
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r0, r6
   1218c:	bl	12ecc <table_get_bool@@Base>
   12190:	mov	r3, r0
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r0, r7
   121a0:	bl	134dc <table_set_bool@@Base>
   121a4:	b	11e8c <table_dupe@@Base+0x130>
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r0, r6
   121b4:	bl	12fc4 <table_get_char@@Base>
   121b8:	mov	r3, r0
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r0, r7
   121c8:	bl	13764 <table_set_char@@Base>
   121cc:	b	11e8c <table_dupe@@Base+0x130>
   121d0:	mov	r2, r4
   121d4:	mov	r1, r5
   121d8:	mov	r0, r6
   121dc:	bl	12fc8 <table_get_uchar@@Base>
   121e0:	mov	r3, r0
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	mov	r0, r7
   121f0:	bl	13784 <table_set_uchar@@Base>
   121f4:	b	11e8c <table_dupe@@Base+0x130>
   121f8:	mov	r2, r4
   121fc:	mov	r1, r5
   12200:	mov	r0, r6
   12204:	bl	12fd0 <table_get_ptr@@Base>
   12208:	add	r3, sp, #12
   1220c:	mov	r2, r4
   12210:	str	r0, [sp, #12]
   12214:	mov	r1, r5
   12218:	mov	r0, r7
   1221c:	bl	137a4 <table_set_ptr@@Base>
   12220:	b	11e8c <table_dupe@@Base+0x130>

00012224 <table_get_major_version@@Base>:
   12224:	mov	r0, #0
   12228:	bx	lr

0001222c <table_get_minor_version@@Base>:
   1222c:	mov	r0, #0
   12230:	bx	lr

00012234 <table_get_patch_version@@Base>:
   12234:	mov	r0, #0
   12238:	bx	lr

0001223c <table_get_version@@Base>:
   1223c:	ldr	r0, [pc]	; 12244 <table_get_version@@Base+0x8>
   12240:	bx	lr
   12244:	muleq	r1, r2, r1

00012248 <table_get_callback_length@@Base>:
   12248:	ldr	r0, [r0, #32]
   1224c:	bx	lr

00012250 <table_register_callback@@Base>:
   12250:	push	{r4, r5, r6, r7, r8, lr}
   12254:	mov	r4, r0
   12258:	mov	ip, #0
   1225c:	ldr	lr, [r0, #32]
   12260:	ldr	r0, [r0, #36]	; 0x24
   12264:	cmp	ip, lr
   12268:	blt	122f8 <table_register_callback@@Base+0xa8>
   1226c:	ldr	ip, [r4, #48]	; 0x30
   12270:	mov	r5, r3
   12274:	mov	r6, r2
   12278:	mov	r7, r1
   1227c:	udiv	r3, lr, ip
   12280:	mls	r3, ip, r3, lr
   12284:	cmp	r3, #0
   12288:	bne	122cc <table_register_callback@@Base+0x7c>
   1228c:	ldr	r1, [r4, #52]	; 0x34
   12290:	add	r1, ip, r1
   12294:	str	r1, [r4, #52]	; 0x34
   12298:	lsl	r1, r1, #2
   1229c:	bl	11a6c <realloc@plt>
   122a0:	ldr	r1, [r4, #52]	; 0x34
   122a4:	str	r0, [r4, #36]	; 0x24
   122a8:	ldr	r0, [r4, #40]	; 0x28
   122ac:	lsl	r1, r1, #2
   122b0:	bl	11a6c <realloc@plt>
   122b4:	ldr	r1, [r4, #52]	; 0x34
   122b8:	str	r0, [r4, #40]	; 0x28
   122bc:	ldr	r0, [r4, #44]	; 0x2c
   122c0:	lsl	r1, r1, #2
   122c4:	bl	11a6c <realloc@plt>
   122c8:	str	r0, [r4, #44]	; 0x2c
   122cc:	ldr	r3, [r4, #32]
   122d0:	ldr	r2, [r4, #36]	; 0x24
   122d4:	str	r7, [r2, r3, lsl #2]
   122d8:	ldr	r2, [r4, #40]	; 0x28
   122dc:	str	r6, [r2, r3, lsl #2]
   122e0:	ldr	r2, [r4, #44]	; 0x2c
   122e4:	str	r5, [r2, r3, lsl #2]
   122e8:	ldr	r3, [r4, #32]
   122ec:	add	r3, r3, #1
   122f0:	str	r3, [r4, #32]
   122f4:	pop	{r4, r5, r6, r7, r8, pc}
   122f8:	ldr	r6, [r0, ip, lsl #2]
   122fc:	lsl	r5, ip, #2
   12300:	cmp	r1, r6
   12304:	bne	12318 <table_register_callback@@Base+0xc8>
   12308:	ldr	r6, [r4, #40]	; 0x28
   1230c:	ldr	r6, [r6, ip, lsl #2]
   12310:	cmp	r2, r6
   12314:	beq	12320 <table_register_callback@@Base+0xd0>
   12318:	add	ip, ip, #1
   1231c:	b	12264 <table_register_callback@@Base+0x14>
   12320:	cmp	ip, #0
   12324:	ble	1226c <table_register_callback@@Base+0x1c>
   12328:	ldr	r1, [r4, #44]	; 0x2c
   1232c:	ldr	r2, [r1, r5]
   12330:	orr	r2, r2, r3
   12334:	str	r2, [r1, r5]
   12338:	pop	{r4, r5, r6, r7, r8, pc}

0001233c <table_unregister_callback@@Base>:
   1233c:	ldr	ip, [r0, #32]
   12340:	mov	r3, #0
   12344:	cmp	r3, ip
   12348:	bxge	lr
   1234c:	push	{r4, r5, r6, lr}
   12350:	ldr	lr, [r0, #36]	; 0x24
   12354:	ldr	lr, [lr, r3, lsl #2]
   12358:	cmp	r1, lr
   1235c:	bne	12370 <table_unregister_callback@@Base+0x34>
   12360:	ldr	lr, [r0, #40]	; 0x28
   12364:	ldr	lr, [lr, r3, lsl #2]
   12368:	cmp	r2, lr
   1236c:	beq	123b0 <table_unregister_callback@@Base+0x74>
   12370:	add	r3, r3, #1
   12374:	cmp	r3, ip
   12378:	blt	12350 <table_unregister_callback@@Base+0x14>
   1237c:	pop	{r4, r5, r6, pc}
   12380:	ldr	r1, [r0, #36]	; 0x24
   12384:	add	r2, r3, #1
   12388:	lsl	r3, r3, #2
   1238c:	ldr	ip, [r1, r2, lsl #2]
   12390:	str	ip, [r1, r3]
   12394:	ldr	r1, [r0, #40]	; 0x28
   12398:	ldr	ip, [r1, r2, lsl #2]
   1239c:	str	ip, [r1, r3]
   123a0:	ldr	r1, [r0, #44]	; 0x2c
   123a4:	ldr	ip, [r1, r2, lsl #2]
   123a8:	str	ip, [r1, r3]
   123ac:	mov	r3, r2
   123b0:	ldr	r2, [r0, #32]
   123b4:	sub	r2, r2, #1
   123b8:	cmp	r2, r3
   123bc:	bgt	12380 <table_unregister_callback@@Base+0x44>
   123c0:	ldr	r1, [r0, #48]	; 0x30
   123c4:	str	r2, [r0, #32]
   123c8:	udiv	r3, r2, r1
   123cc:	mls	r2, r1, r3, r2
   123d0:	cmp	r2, #0
   123d4:	popne	{r4, r5, r6, pc}
   123d8:	mov	r4, r0
   123dc:	ldr	r5, [r4, #52]	; 0x34
   123e0:	ldr	r0, [r0, #36]	; 0x24
   123e4:	sub	r5, r5, r1
   123e8:	cmp	r5, #0
   123ec:	str	r5, [r4, #52]	; 0x34
   123f0:	beq	1242c <table_unregister_callback@@Base+0xf0>
   123f4:	lsl	r1, r5, #2
   123f8:	bl	11a6c <realloc@plt>
   123fc:	ldr	r1, [r4, #52]	; 0x34
   12400:	str	r0, [r4, #36]	; 0x24
   12404:	ldr	r0, [r4, #40]	; 0x28
   12408:	lsl	r1, r1, #2
   1240c:	bl	11a6c <realloc@plt>
   12410:	ldr	r1, [r4, #52]	; 0x34
   12414:	str	r0, [r4, #40]	; 0x28
   12418:	ldr	r0, [r4, #44]	; 0x2c
   1241c:	lsl	r1, r1, #2
   12420:	bl	11a6c <realloc@plt>
   12424:	str	r0, [r4, #44]	; 0x2c
   12428:	pop	{r4, r5, r6, pc}
   1242c:	bl	11a60 <free@plt>
   12430:	ldr	r0, [r4, #40]	; 0x28
   12434:	bl	11a60 <free@plt>
   12438:	ldr	r0, [r4, #44]	; 0x2c
   1243c:	bl	11a60 <free@plt>
   12440:	str	r5, [r4, #36]	; 0x24
   12444:	str	r5, [r4, #40]	; 0x28
   12448:	str	r5, [r4, #44]	; 0x2c
   1244c:	pop	{r4, r5, r6, pc}

00012450 <table_notify@@Base>:
   12450:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12454:	mov	r5, r0
   12458:	mov	r7, r1
   1245c:	mov	r8, r2
   12460:	mov	r6, r3
   12464:	mov	r4, #0
   12468:	ldr	r3, [r5, #32]
   1246c:	cmp	r3, r4
   12470:	bgt	1247c <table_notify@@Base+0x2c>
   12474:	add	sp, sp, #12
   12478:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1247c:	ldr	r3, [r5, #44]	; 0x2c
   12480:	ldr	r3, [r3, r4, lsl #2]
   12484:	tst	r6, r3
   12488:	beq	124b4 <table_notify@@Base+0x64>
   1248c:	ldr	r3, [r5, #36]	; 0x24
   12490:	mov	r1, r7
   12494:	mov	r0, r5
   12498:	ldr	r2, [r5, #40]	; 0x28
   1249c:	ldr	r2, [r2, r4, lsl #2]
   124a0:	str	r2, [sp]
   124a4:	mov	r2, r8
   124a8:	ldr	r9, [r3, r4, lsl #2]
   124ac:	mov	r3, r6
   124b0:	blx	r9
   124b4:	add	r4, r4, #1
   124b8:	b	12468 <table_notify@@Base+0x18>

000124bc <table_column_init@@Base>:
   124bc:	push	{r4, r5, r6, r7, r8, lr}
   124c0:	mov	r4, #12
   124c4:	mov	r6, r2
   124c8:	mov	r8, r3
   124cc:	mul	r4, r4, r1
   124d0:	ldr	r7, [r0]
   124d4:	mov	r0, r2
   124d8:	bl	11aa8 <strlen@plt>
   124dc:	add	r0, r0, #1
   124e0:	bl	11a84 <malloc@plt>
   124e4:	cmp	r0, #0
   124e8:	add	r5, r7, r4
   124ec:	str	r0, [r7, r4]
   124f0:	beq	124fc <table_column_init@@Base+0x40>
   124f4:	mov	r1, r6
   124f8:	bl	11a78 <strcpy@plt>
   124fc:	ldr	r3, [sp, #24]
   12500:	str	r8, [r5, #4]
   12504:	str	r3, [r5, #8]
   12508:	pop	{r4, r5, r6, r7, r8, pc}

0001250c <table_column_destroy@@Base>:
   1250c:	mov	r3, #12
   12510:	ldr	r2, [r0]
   12514:	mul	r1, r3, r1
   12518:	ldr	r0, [r2, r1]
   1251c:	cmp	r0, #0
   12520:	bxeq	lr
   12524:	b	11a60 <free@plt>

00012528 <table_get_column_length@@Base>:
   12528:	ldr	r0, [r0, #4]
   1252c:	bx	lr

00012530 <table_get_column@@Base>:
   12530:	push	{r4, r5, r6, r7, r8, lr}
   12534:	mov	r5, r0
   12538:	mov	r7, r1
   1253c:	mov	r4, #0
   12540:	mov	r8, #12
   12544:	ldr	r6, [r0, #4]
   12548:	cmp	r4, r6
   1254c:	blt	1255c <table_get_column@@Base+0x2c>
   12550:	mvneq	r4, #0
   12554:	mov	r0, r4
   12558:	pop	{r4, r5, r6, r7, r8, pc}
   1255c:	ldr	r2, [r5]
   12560:	mul	r3, r8, r4
   12564:	mov	r1, r7
   12568:	ldr	r0, [r2, r3]
   1256c:	bl	11a48 <strcmp@plt>
   12570:	cmp	r0, #0
   12574:	beq	12554 <table_get_column@@Base+0x24>
   12578:	add	r4, r4, #1
   1257c:	b	12548 <table_get_column@@Base+0x18>

00012580 <table_get_column_data_type@@Base>:
   12580:	ldr	r2, [r0]
   12584:	mov	r3, #12
   12588:	mla	r1, r3, r1, r2
   1258c:	ldr	r0, [r1, #4]
   12590:	bx	lr

00012594 <table_add_column@@Base>:
   12594:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12598:	mov	r7, r1
   1259c:	mov	r4, r0
   125a0:	mov	r6, r2
   125a4:	ldr	r3, [r0, #4]
   125a8:	ldr	r1, [r0, #8]
   125ac:	udiv	r5, r3, r1
   125b0:	mls	r5, r1, r5, r3
   125b4:	cmp	r5, #0
   125b8:	beq	12620 <table_add_column@@Base+0x8c>
   125bc:	mov	r0, r4
   125c0:	mov	r5, #0
   125c4:	bl	13044 <table_get_row_length@@Base>
   125c8:	ldr	r8, [r4, #4]
   125cc:	mov	r9, r0
   125d0:	mov	r0, r6
   125d4:	bl	12ea4 <table_get_default_compare_function_for_data_type@@Base>
   125d8:	mov	r3, r6
   125dc:	mov	r2, r7
   125e0:	str	r0, [sp]
   125e4:	mov	r0, r4
   125e8:	mov	r1, r8
   125ec:	bl	124bc <table_column_init@@Base>
   125f0:	cmp	r9, r5
   125f4:	bgt	12680 <table_add_column@@Base+0xec>
   125f8:	mov	r0, r4
   125fc:	mov	r3, #8
   12600:	ldr	r2, [r4, #4]
   12604:	mvn	r1, #0
   12608:	bl	12450 <table_notify@@Base>
   1260c:	ldr	r0, [r4, #4]
   12610:	add	r3, r0, #1
   12614:	str	r3, [r4, #4]
   12618:	add	sp, sp, #12
   1261c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12620:	ldr	r3, [r4, #12]
   12624:	ldr	r0, [r0]
   12628:	add	r1, r1, r3
   1262c:	mov	r3, #12
   12630:	str	r1, [r4, #12]
   12634:	mul	r1, r3, r1
   12638:	bl	11a6c <realloc@plt>
   1263c:	str	r0, [r4]
   12640:	mov	r0, r4
   12644:	bl	13044 <table_get_row_length@@Base>
   12648:	mov	r9, r0
   1264c:	cmp	r9, r5
   12650:	ble	125bc <table_add_column@@Base+0x28>
   12654:	mov	r1, r5
   12658:	mov	r0, r4
   1265c:	bl	131e0 <table_get_row_ptr@@Base>
   12660:	ldr	r1, [r4, #12]
   12664:	mov	r8, r0
   12668:	add	r5, r5, #1
   1266c:	ldr	r0, [r0]
   12670:	lsl	r1, r1, #2
   12674:	bl	11a6c <realloc@plt>
   12678:	str	r0, [r8]
   1267c:	b	1264c <table_add_column@@Base+0xb8>
   12680:	mov	r1, r5
   12684:	mov	r2, r8
   12688:	mov	r0, r4
   1268c:	add	r5, r5, #1
   12690:	bl	14054 <table_cell_init@@Base>
   12694:	b	125f0 <table_add_column@@Base+0x5c>

00012698 <table_remove_column@@Base>:
   12698:	push	{r4, r5, r6, r7, r8, lr}
   1269c:	mov	r4, r0
   126a0:	mov	r6, r1
   126a4:	mov	r5, #12
   126a8:	bl	1250c <table_column_destroy@@Base>
   126ac:	ldr	r7, [r4, #4]
   126b0:	mov	r1, r6
   126b4:	sub	r7, r7, #1
   126b8:	cmp	r1, r7
   126bc:	blt	12748 <table_remove_column@@Base+0xb0>
   126c0:	mov	r0, r4
   126c4:	mov	r5, #0
   126c8:	bl	13044 <table_get_row_length@@Base>
   126cc:	mov	r8, r0
   126d0:	cmp	r8, r5
   126d4:	bgt	1277c <table_remove_column@@Base+0xe4>
   126d8:	ldr	r5, [r4, #4]
   126dc:	ldr	r1, [r4, #8]
   126e0:	sub	r3, r5, #1
   126e4:	udiv	r5, r3, r1
   126e8:	str	r3, [r4, #4]
   126ec:	mls	r5, r1, r5, r3
   126f0:	cmp	r5, #0
   126f4:	bne	1272c <table_remove_column@@Base+0x94>
   126f8:	ldr	r0, [r4]
   126fc:	ldr	r3, [r4, #12]
   12700:	sub	r3, r3, r1
   12704:	mov	r1, #12
   12708:	mul	r1, r1, r3
   1270c:	str	r3, [r4, #12]
   12710:	bl	11a6c <realloc@plt>
   12714:	str	r0, [r4]
   12718:	mov	r0, r4
   1271c:	bl	13044 <table_get_row_length@@Base>
   12720:	mov	r8, r0
   12724:	cmp	r8, r5
   12728:	bgt	127c0 <table_remove_column@@Base+0x128>
   1272c:	mov	r0, r4
   12730:	mov	r3, #16
   12734:	mov	r2, r6
   12738:	mvn	r1, #0
   1273c:	bl	12450 <table_notify@@Base>
   12740:	mov	r0, #0
   12744:	pop	{r4, r5, r6, r7, r8, pc}
   12748:	ldr	ip, [r4]
   1274c:	mul	r0, r5, r1
   12750:	add	r1, r1, #1
   12754:	add	r2, r0, #12
   12758:	add	r2, ip, r2
   1275c:	add	lr, ip, r0
   12760:	ldr	r3, [r2]
   12764:	str	r3, [ip, r0]
   12768:	ldr	r3, [r2, #4]
   1276c:	str	r3, [lr, #4]
   12770:	ldr	r3, [r2, #8]
   12774:	str	r3, [lr, #8]
   12778:	b	126b8 <table_remove_column@@Base+0x20>
   1277c:	mov	r2, r6
   12780:	mov	r1, r5
   12784:	mov	r0, r4
   12788:	bl	14068 <table_cell_destroy@@Base>
   1278c:	mov	r1, r5
   12790:	mov	r0, r4
   12794:	bl	131e0 <table_get_row_ptr@@Base>
   12798:	mov	r3, r6
   1279c:	cmp	r7, r3
   127a0:	addle	r5, r5, #1
   127a4:	ble	126d0 <table_remove_column@@Base+0x38>
   127a8:	ldr	r2, [r0]
   127ac:	add	r1, r2, r3, lsl #2
   127b0:	ldr	r1, [r1, #4]
   127b4:	str	r1, [r2, r3, lsl #2]
   127b8:	add	r3, r3, #1
   127bc:	b	1279c <table_remove_column@@Base+0x104>
   127c0:	mov	r1, r5
   127c4:	mov	r0, r4
   127c8:	bl	131e0 <table_get_row_ptr@@Base>
   127cc:	ldr	r1, [r4, #12]
   127d0:	mov	r7, r0
   127d4:	add	r5, r5, #1
   127d8:	ldr	r0, [r0]
   127dc:	lsl	r1, r1, #2
   127e0:	bl	11a6c <realloc@plt>
   127e4:	str	r0, [r7]
   127e8:	b	12724 <table_remove_column@@Base+0x8c>

000127ec <table_get_column_name@@Base>:
   127ec:	mov	r3, #12
   127f0:	ldr	r2, [r0]
   127f4:	mul	r1, r3, r1
   127f8:	ldr	r0, [r2, r1]
   127fc:	bx	lr

00012800 <table_get_col_ptr@@Base>:
   12800:	ldr	r3, [r0]
   12804:	mov	r0, #12
   12808:	mla	r0, r0, r1, r3
   1280c:	bx	lr

00012810 <table_get_column_compare_function@@Base>:
   12810:	ldr	r2, [r0]
   12814:	mov	r3, #12
   12818:	mla	r1, r3, r1, r2
   1281c:	ldr	r0, [r1, #8]
   12820:	bx	lr

00012824 <table_set_column_compare_function@@Base>:
   12824:	ldr	r0, [r0]
   12828:	mov	r3, #12
   1282c:	mla	r1, r3, r1, r0
   12830:	str	r2, [r1, #8]
   12834:	bx	lr

00012838 <table_compare_ptr@@Base>:
   12838:	cmp	r0, r1
   1283c:	bhi	1284c <table_compare_ptr@@Base+0x14>
   12840:	mvncc	r0, #0
   12844:	movcs	r0, #0
   12848:	bx	lr
   1284c:	mov	r0, #1
   12850:	bx	lr

00012854 <table_compare_string@@Base>:
   12854:	cmp	r0, #0
   12858:	bne	1286c <table_compare_string@@Base+0x18>
   1285c:	adds	r0, r1, #0
   12860:	movne	r0, #1
   12864:	rsb	r0, r0, #0
   12868:	bx	lr
   1286c:	cmp	r1, #0
   12870:	beq	12878 <table_compare_string@@Base+0x24>
   12874:	b	11a48 <strcmp@plt>
   12878:	mov	r0, #1
   1287c:	bx	lr

00012880 <table_compare_bool@@Base>:
   12880:	cmp	r0, #0
   12884:	bne	12898 <table_compare_bool@@Base+0x18>
   12888:	adds	r0, r1, #0
   1288c:	movne	r0, #1
   12890:	rsb	r0, r0, #0
   12894:	bx	lr
   12898:	cmp	r1, #0
   1289c:	beq	128bc <table_compare_bool@@Base+0x3c>
   128a0:	ldrb	r2, [r0]
   128a4:	ldrb	r3, [r1]
   128a8:	cmp	r2, r3
   128ac:	bhi	128bc <table_compare_bool@@Base+0x3c>
   128b0:	mvncc	r0, #0
   128b4:	movcs	r0, #0
   128b8:	bx	lr
   128bc:	mov	r0, #1
   128c0:	bx	lr

000128c4 <table_compare_int32@@Base>:
   128c4:	cmp	r0, #0
   128c8:	bne	128dc <table_compare_int32@@Base+0x18>
   128cc:	adds	r0, r1, #0
   128d0:	movne	r0, #1
   128d4:	rsb	r0, r0, #0
   128d8:	bx	lr
   128dc:	cmp	r1, #0
   128e0:	beq	12900 <table_compare_int32@@Base+0x3c>
   128e4:	ldr	r2, [r0]
   128e8:	ldr	r3, [r1]
   128ec:	cmp	r2, r3
   128f0:	bgt	12900 <table_compare_int32@@Base+0x3c>
   128f4:	mvnlt	r0, #0
   128f8:	movge	r0, #0
   128fc:	bx	lr
   12900:	mov	r0, #1
   12904:	bx	lr

00012908 <table_compare_uint32@@Base>:
   12908:	cmp	r0, #0
   1290c:	bne	12920 <table_compare_uint32@@Base+0x18>
   12910:	adds	r0, r1, #0
   12914:	movne	r0, #1
   12918:	rsb	r0, r0, #0
   1291c:	bx	lr
   12920:	cmp	r1, #0
   12924:	beq	12944 <table_compare_uint32@@Base+0x3c>
   12928:	ldr	r2, [r0]
   1292c:	ldr	r3, [r1]
   12930:	cmp	r2, r3
   12934:	bhi	12944 <table_compare_uint32@@Base+0x3c>
   12938:	mvncc	r0, #0
   1293c:	movcs	r0, #0
   12940:	bx	lr
   12944:	mov	r0, #1
   12948:	bx	lr

0001294c <table_compare_int8@@Base>:
   1294c:	cmp	r0, #0
   12950:	bne	12964 <table_compare_int8@@Base+0x18>
   12954:	adds	r0, r1, #0
   12958:	movne	r0, #1
   1295c:	rsb	r0, r0, #0
   12960:	bx	lr
   12964:	cmp	r1, #0
   12968:	beq	12988 <table_compare_int8@@Base+0x3c>
   1296c:	ldrsb	r2, [r0]
   12970:	ldrsb	r3, [r1]
   12974:	cmp	r2, r3
   12978:	bgt	12988 <table_compare_int8@@Base+0x3c>
   1297c:	mvnlt	r0, #0
   12980:	movge	r0, #0
   12984:	bx	lr
   12988:	mov	r0, #1
   1298c:	bx	lr

00012990 <table_compare_char@@Base>:
   12990:	cmp	r0, #0
   12994:	bne	129a8 <table_compare_char@@Base+0x18>
   12998:	adds	r0, r1, #0
   1299c:	movne	r0, #1
   129a0:	rsb	r0, r0, #0
   129a4:	bx	lr
   129a8:	cmp	r1, #0
   129ac:	beq	129cc <table_compare_char@@Base+0x3c>
   129b0:	ldrb	r2, [r0]
   129b4:	ldrb	r3, [r1]
   129b8:	cmp	r2, r3
   129bc:	bhi	129cc <table_compare_char@@Base+0x3c>
   129c0:	mvncc	r0, #0
   129c4:	movcs	r0, #0
   129c8:	bx	lr
   129cc:	mov	r0, #1
   129d0:	bx	lr

000129d4 <table_compare_short@@Base>:
   129d4:	cmp	r0, #0
   129d8:	bne	129ec <table_compare_short@@Base+0x18>
   129dc:	adds	r0, r1, #0
   129e0:	movne	r0, #1
   129e4:	rsb	r0, r0, #0
   129e8:	bx	lr
   129ec:	cmp	r1, #0
   129f0:	beq	12a10 <table_compare_short@@Base+0x3c>
   129f4:	ldrsh	r2, [r0]
   129f8:	ldrsh	r3, [r1]
   129fc:	cmp	r2, r3
   12a00:	bgt	12a10 <table_compare_short@@Base+0x3c>
   12a04:	mvnlt	r0, #0
   12a08:	movge	r0, #0
   12a0c:	bx	lr
   12a10:	mov	r0, #1
   12a14:	bx	lr

00012a18 <table_compare_ushort@@Base>:
   12a18:	cmp	r0, #0
   12a1c:	bne	12a30 <table_compare_ushort@@Base+0x18>
   12a20:	adds	r0, r1, #0
   12a24:	movne	r0, #1
   12a28:	rsb	r0, r0, #0
   12a2c:	bx	lr
   12a30:	cmp	r1, #0
   12a34:	beq	12a54 <table_compare_ushort@@Base+0x3c>
   12a38:	ldrh	r2, [r0]
   12a3c:	ldrh	r3, [r1]
   12a40:	cmp	r2, r3
   12a44:	bhi	12a54 <table_compare_ushort@@Base+0x3c>
   12a48:	mvncc	r0, #0
   12a4c:	movcs	r0, #0
   12a50:	bx	lr
   12a54:	mov	r0, #1
   12a58:	bx	lr

00012a5c <table_compare_llong@@Base>:
   12a5c:	cmp	r0, #0
   12a60:	bne	12a74 <table_compare_llong@@Base+0x18>
   12a64:	adds	r0, r1, #0
   12a68:	movne	r0, #1
   12a6c:	rsb	r0, r0, #0
   12a70:	bx	lr
   12a74:	cmp	r1, #0
   12a78:	beq	12aa8 <table_compare_llong@@Base+0x4c>
   12a7c:	push	{r4, r5, lr}
   12a80:	ldrd	r2, [r1]
   12a84:	ldrd	r4, [r0]
   12a88:	cmp	r2, r4
   12a8c:	sbcs	r1, r3, r5
   12a90:	blt	12ab0 <table_compare_llong@@Base+0x54>
   12a94:	cmp	r4, r2
   12a98:	sbcs	r3, r5, r3
   12a9c:	mvnlt	r0, #0
   12aa0:	movge	r0, #0
   12aa4:	pop	{r4, r5, pc}
   12aa8:	mov	r0, #1
   12aac:	bx	lr
   12ab0:	mov	r0, #1
   12ab4:	pop	{r4, r5, pc}

00012ab8 <table_compare_uint64@@Base>:
   12ab8:	cmp	r0, #0
   12abc:	bne	12ad0 <table_compare_uint64@@Base+0x18>
   12ac0:	adds	r0, r1, #0
   12ac4:	movne	r0, #1
   12ac8:	rsb	r0, r0, #0
   12acc:	bx	lr
   12ad0:	cmp	r1, #0
   12ad4:	beq	12afc <table_compare_uint64@@Base+0x44>
   12ad8:	push	{r4, r5, lr}
   12adc:	ldrd	r2, [r1]
   12ae0:	ldrd	r4, [r0]
   12ae4:	cmp	r5, r3
   12ae8:	cmpeq	r4, r2
   12aec:	bhi	12b04 <table_compare_uint64@@Base+0x4c>
   12af0:	mvncc	r0, #0
   12af4:	movcs	r0, #0
   12af8:	pop	{r4, r5, pc}
   12afc:	mov	r0, #1
   12b00:	bx	lr
   12b04:	mov	r0, #1
   12b08:	pop	{r4, r5, pc}

00012b0c <table_compare_long@@Base>:
   12b0c:	cmp	r0, #0
   12b10:	bne	12b24 <table_compare_long@@Base+0x18>
   12b14:	adds	r0, r1, #0
   12b18:	movne	r0, #1
   12b1c:	rsb	r0, r0, #0
   12b20:	bx	lr
   12b24:	cmp	r1, #0
   12b28:	beq	12b48 <table_compare_long@@Base+0x3c>
   12b2c:	ldr	r2, [r0]
   12b30:	ldr	r3, [r1]
   12b34:	cmp	r2, r3
   12b38:	bgt	12b48 <table_compare_long@@Base+0x3c>
   12b3c:	mvnlt	r0, #0
   12b40:	movge	r0, #0
   12b44:	bx	lr
   12b48:	mov	r0, #1
   12b4c:	bx	lr

00012b50 <table_compare_ullong@@Base>:
   12b50:	cmp	r0, #0
   12b54:	bne	12b68 <table_compare_ullong@@Base+0x18>
   12b58:	adds	r0, r1, #0
   12b5c:	movne	r0, #1
   12b60:	rsb	r0, r0, #0
   12b64:	bx	lr
   12b68:	cmp	r1, #0
   12b6c:	beq	12b8c <table_compare_ullong@@Base+0x3c>
   12b70:	ldr	r2, [r0]
   12b74:	ldr	r3, [r1]
   12b78:	cmp	r2, r3
   12b7c:	bhi	12b8c <table_compare_ullong@@Base+0x3c>
   12b80:	mvncc	r0, #0
   12b84:	movcs	r0, #0
   12b88:	bx	lr
   12b8c:	mov	r0, #1
   12b90:	bx	lr

00012b94 <table_compare_float@@Base>:
   12b94:	cmp	r0, #0
   12b98:	bne	12bac <table_compare_float@@Base+0x18>
   12b9c:	adds	r0, r1, #0
   12ba0:	movne	r0, #1
   12ba4:	rsb	r0, r0, #0
   12ba8:	bx	lr
   12bac:	cmp	r1, #0
   12bb0:	beq	12bd4 <table_compare_float@@Base+0x40>
   12bb4:	vldr	s14, [r0]
   12bb8:	vldr	s15, [r1]
   12bbc:	vcmpe.f32	s14, s15
   12bc0:	vmrs	APSR_nzcv, fpscr
   12bc4:	bgt	12bd4 <table_compare_float@@Base+0x40>
   12bc8:	mvnmi	r0, #0
   12bcc:	movpl	r0, #0
   12bd0:	bx	lr
   12bd4:	mov	r0, #1
   12bd8:	bx	lr

00012bdc <table_compare_double@@Base>:
   12bdc:	cmp	r0, #0
   12be0:	bne	12bf4 <table_compare_double@@Base+0x18>
   12be4:	adds	r0, r1, #0
   12be8:	movne	r0, #1
   12bec:	rsb	r0, r0, #0
   12bf0:	bx	lr
   12bf4:	cmp	r1, #0
   12bf8:	beq	12c1c <table_compare_double@@Base+0x40>
   12bfc:	vldr	d6, [r0]
   12c00:	vldr	d7, [r1]
   12c04:	vcmpe.f64	d6, d7
   12c08:	vmrs	APSR_nzcv, fpscr
   12c0c:	bgt	12c1c <table_compare_double@@Base+0x40>
   12c10:	mvnmi	r0, #0
   12c14:	movpl	r0, #0
   12c18:	bx	lr
   12c1c:	mov	r0, #1
   12c20:	bx	lr

00012c24 <table_compare_ldouble@@Base>:
   12c24:	cmp	r0, #0
   12c28:	bne	12c3c <table_compare_ldouble@@Base+0x18>
   12c2c:	adds	r0, r1, #0
   12c30:	movne	r0, #1
   12c34:	rsb	r0, r0, #0
   12c38:	bx	lr
   12c3c:	cmp	r1, #0
   12c40:	beq	12c64 <table_compare_ldouble@@Base+0x40>
   12c44:	vldr	d6, [r0]
   12c48:	vldr	d7, [r1]
   12c4c:	vcmpe.f64	d6, d7
   12c50:	vmrs	APSR_nzcv, fpscr
   12c54:	bgt	12c64 <table_compare_ldouble@@Base+0x40>
   12c58:	mvnmi	r0, #0
   12c5c:	movpl	r0, #0
   12c60:	bx	lr
   12c64:	mov	r0, #1
   12c68:	bx	lr

00012c6c <table_compare_uchar@@Base>:
   12c6c:	cmp	r0, #0
   12c70:	bne	12c84 <table_compare_uchar@@Base+0x18>
   12c74:	adds	r0, r1, #0
   12c78:	movne	r0, #1
   12c7c:	rsb	r0, r0, #0
   12c80:	bx	lr
   12c84:	cmp	r1, #0
   12c88:	beq	12ca8 <table_compare_uchar@@Base+0x3c>
   12c8c:	ldrb	r2, [r0]
   12c90:	ldrb	r3, [r1]
   12c94:	cmp	r2, r3
   12c98:	bhi	12ca8 <table_compare_uchar@@Base+0x3c>
   12c9c:	mvncc	r0, #0
   12ca0:	movcs	r0, #0
   12ca4:	bx	lr
   12ca8:	mov	r0, #1
   12cac:	bx	lr

00012cb0 <table_compare_int@@Base>:
   12cb0:	cmp	r0, #0
   12cb4:	bne	12cc8 <table_compare_int@@Base+0x18>
   12cb8:	adds	r0, r1, #0
   12cbc:	movne	r0, #1
   12cc0:	rsb	r0, r0, #0
   12cc4:	bx	lr
   12cc8:	cmp	r1, #0
   12ccc:	beq	12cec <table_compare_int@@Base+0x3c>
   12cd0:	ldr	r2, [r0]
   12cd4:	ldr	r3, [r1]
   12cd8:	cmp	r2, r3
   12cdc:	bgt	12cec <table_compare_int@@Base+0x3c>
   12ce0:	mvnlt	r0, #0
   12ce4:	movge	r0, #0
   12ce8:	bx	lr
   12cec:	mov	r0, #1
   12cf0:	bx	lr

00012cf4 <table_compare_uint@@Base>:
   12cf4:	cmp	r0, #0
   12cf8:	bne	12d0c <table_compare_uint@@Base+0x18>
   12cfc:	adds	r0, r1, #0
   12d00:	movne	r0, #1
   12d04:	rsb	r0, r0, #0
   12d08:	bx	lr
   12d0c:	cmp	r1, #0
   12d10:	beq	12d30 <table_compare_uint@@Base+0x3c>
   12d14:	ldr	r2, [r0]
   12d18:	ldr	r3, [r1]
   12d1c:	cmp	r2, r3
   12d20:	bhi	12d30 <table_compare_uint@@Base+0x3c>
   12d24:	mvncc	r0, #0
   12d28:	movcs	r0, #0
   12d2c:	bx	lr
   12d30:	mov	r0, #1
   12d34:	bx	lr

00012d38 <table_compare_uint8@@Base>:
   12d38:	cmp	r0, #0
   12d3c:	bne	12d50 <table_compare_uint8@@Base+0x18>
   12d40:	adds	r0, r1, #0
   12d44:	movne	r0, #1
   12d48:	rsb	r0, r0, #0
   12d4c:	bx	lr
   12d50:	cmp	r1, #0
   12d54:	beq	12d74 <table_compare_uint8@@Base+0x3c>
   12d58:	ldrb	r2, [r0]
   12d5c:	ldrb	r3, [r1]
   12d60:	cmp	r2, r3
   12d64:	bhi	12d74 <table_compare_uint8@@Base+0x3c>
   12d68:	mvncc	r0, #0
   12d6c:	movcs	r0, #0
   12d70:	bx	lr
   12d74:	mov	r0, #1
   12d78:	bx	lr

00012d7c <table_compare_int16@@Base>:
   12d7c:	cmp	r0, #0
   12d80:	bne	12d94 <table_compare_int16@@Base+0x18>
   12d84:	adds	r0, r1, #0
   12d88:	movne	r0, #1
   12d8c:	rsb	r0, r0, #0
   12d90:	bx	lr
   12d94:	cmp	r1, #0
   12d98:	beq	12db8 <table_compare_int16@@Base+0x3c>
   12d9c:	ldrsh	r2, [r0]
   12da0:	ldrsh	r3, [r1]
   12da4:	cmp	r2, r3
   12da8:	bgt	12db8 <table_compare_int16@@Base+0x3c>
   12dac:	mvnlt	r0, #0
   12db0:	movge	r0, #0
   12db4:	bx	lr
   12db8:	mov	r0, #1
   12dbc:	bx	lr

00012dc0 <table_compare_uint16@@Base>:
   12dc0:	cmp	r0, #0
   12dc4:	bne	12dd8 <table_compare_uint16@@Base+0x18>
   12dc8:	adds	r0, r1, #0
   12dcc:	movne	r0, #1
   12dd0:	rsb	r0, r0, #0
   12dd4:	bx	lr
   12dd8:	cmp	r1, #0
   12ddc:	beq	12dfc <table_compare_uint16@@Base+0x3c>
   12de0:	ldrh	r2, [r0]
   12de4:	ldrh	r3, [r1]
   12de8:	cmp	r2, r3
   12dec:	bhi	12dfc <table_compare_uint16@@Base+0x3c>
   12df0:	mvncc	r0, #0
   12df4:	movcs	r0, #0
   12df8:	bx	lr
   12dfc:	mov	r0, #1
   12e00:	bx	lr

00012e04 <table_compare_ulong@@Base>:
   12e04:	cmp	r0, #0
   12e08:	bne	12e1c <table_compare_ulong@@Base+0x18>
   12e0c:	adds	r0, r1, #0
   12e10:	movne	r0, #1
   12e14:	rsb	r0, r0, #0
   12e18:	bx	lr
   12e1c:	cmp	r1, #0
   12e20:	beq	12e40 <table_compare_ulong@@Base+0x3c>
   12e24:	ldr	r2, [r0]
   12e28:	ldr	r3, [r1]
   12e2c:	cmp	r2, r3
   12e30:	bhi	12e40 <table_compare_ulong@@Base+0x3c>
   12e34:	mvncc	r0, #0
   12e38:	movcs	r0, #0
   12e3c:	bx	lr
   12e40:	mov	r0, #1
   12e44:	bx	lr

00012e48 <table_compare_int64@@Base>:
   12e48:	cmp	r0, #0
   12e4c:	bne	12e60 <table_compare_int64@@Base+0x18>
   12e50:	adds	r0, r1, #0
   12e54:	movne	r0, #1
   12e58:	rsb	r0, r0, #0
   12e5c:	bx	lr
   12e60:	cmp	r1, #0
   12e64:	beq	12e94 <table_compare_int64@@Base+0x4c>
   12e68:	push	{r4, r5, lr}
   12e6c:	ldrd	r2, [r1]
   12e70:	ldrd	r4, [r0]
   12e74:	cmp	r2, r4
   12e78:	sbcs	r1, r3, r5
   12e7c:	blt	12e9c <table_compare_int64@@Base+0x54>
   12e80:	cmp	r4, r2
   12e84:	sbcs	r3, r5, r3
   12e88:	mvnlt	r0, #0
   12e8c:	movge	r0, #0
   12e90:	pop	{r4, r5, pc}
   12e94:	mov	r0, #1
   12e98:	bx	lr
   12e9c:	mov	r0, #1
   12ea0:	pop	{r4, r5, pc}

00012ea4 <table_get_default_compare_function_for_data_type@@Base>:
   12ea4:	cmp	r0, #23
   12ea8:	ldrls	r3, [pc, #8]	; 12eb8 <table_get_default_compare_function_for_data_type@@Base+0x14>
   12eac:	ldrls	r0, [r3, r0, lsl #2]
   12eb0:	movhi	r0, #0
   12eb4:	bx	lr
   12eb8:	andeq	r4, r1, r8, lsr #3

00012ebc <table_get@@Base>:
   12ebc:	push	{r4, lr}
   12ec0:	bl	1403c <table_get_cell_ptr@@Base>
   12ec4:	ldr	r0, [r0]
   12ec8:	pop	{r4, pc}

00012ecc <table_get_bool@@Base>:
   12ecc:	push	{r4, lr}
   12ed0:	bl	12ebc <table_get@@Base>
   12ed4:	ldrb	r0, [r0]
   12ed8:	pop	{r4, pc}

00012edc <table_get_int@@Base>:
   12edc:	push	{r4, lr}
   12ee0:	bl	12ebc <table_get@@Base>
   12ee4:	ldr	r0, [r0]
   12ee8:	pop	{r4, pc}

00012eec <table_get_uint@@Base>:
   12eec:	push	{r4, lr}
   12ef0:	bl	12ebc <table_get@@Base>
   12ef4:	ldr	r0, [r0]
   12ef8:	pop	{r4, pc}

00012efc <table_get_int8@@Base>:
   12efc:	push	{r4, lr}
   12f00:	bl	12ebc <table_get@@Base>
   12f04:	ldrsb	r0, [r0]
   12f08:	pop	{r4, pc}

00012f0c <table_get_uint8@@Base>:
   12f0c:	push	{r4, lr}
   12f10:	bl	12ebc <table_get@@Base>
   12f14:	ldrb	r0, [r0]
   12f18:	pop	{r4, pc}

00012f1c <table_get_int16@@Base>:
   12f1c:	push	{r4, lr}
   12f20:	bl	12ebc <table_get@@Base>
   12f24:	ldrsh	r0, [r0]
   12f28:	pop	{r4, pc}

00012f2c <table_get_uint16@@Base>:
   12f2c:	push	{r4, lr}
   12f30:	bl	12ebc <table_get@@Base>
   12f34:	ldrh	r0, [r0]
   12f38:	pop	{r4, pc}

00012f3c <table_get_int32@@Base>:
   12f3c:	b	12edc <table_get_int@@Base>

00012f40 <table_get_uint32@@Base>:
   12f40:	b	12eec <table_get_uint@@Base>

00012f44 <table_get_int64@@Base>:
   12f44:	push	{r4, lr}
   12f48:	bl	12ebc <table_get@@Base>
   12f4c:	ldrd	r0, [r0]
   12f50:	pop	{r4, pc}

00012f54 <table_get_uint64@@Base>:
   12f54:	push	{r4, lr}
   12f58:	bl	12ebc <table_get@@Base>
   12f5c:	ldrd	r0, [r0]
   12f60:	pop	{r4, pc}

00012f64 <table_get_short@@Base>:
   12f64:	b	12f1c <table_get_int16@@Base>

00012f68 <table_get_ushort@@Base>:
   12f68:	b	12f2c <table_get_uint16@@Base>

00012f6c <table_get_long@@Base>:
   12f6c:	push	{r4, lr}
   12f70:	bl	12ebc <table_get@@Base>
   12f74:	ldr	r0, [r0]
   12f78:	pop	{r4, pc}

00012f7c <table_get_ulong@@Base>:
   12f7c:	push	{r4, lr}
   12f80:	bl	12ebc <table_get@@Base>
   12f84:	ldr	r0, [r0]
   12f88:	pop	{r4, pc}

00012f8c <table_get_llong@@Base>:
   12f8c:	b	12f44 <table_get_int64@@Base>

00012f90 <table_get_ullong@@Base>:
   12f90:	b	12f54 <table_get_uint64@@Base>

00012f94 <table_get_float@@Base>:
   12f94:	push	{r4, lr}
   12f98:	bl	12ebc <table_get@@Base>
   12f9c:	vldr	s0, [r0]
   12fa0:	pop	{r4, pc}

00012fa4 <table_get_double@@Base>:
   12fa4:	push	{r4, lr}
   12fa8:	bl	12ebc <table_get@@Base>
   12fac:	vldr	d0, [r0]
   12fb0:	pop	{r4, pc}

00012fb4 <table_get_ldouble@@Base>:
   12fb4:	push	{r4, lr}
   12fb8:	bl	12ebc <table_get@@Base>
   12fbc:	vldr	d0, [r0]
   12fc0:	pop	{r4, pc}

00012fc4 <table_get_char@@Base>:
   12fc4:	b	12f0c <table_get_uint8@@Base>

00012fc8 <table_get_uchar@@Base>:
   12fc8:	b	12f0c <table_get_uint8@@Base>

00012fcc <table_get_string@@Base>:
   12fcc:	b	12ebc <table_get@@Base>

00012fd0 <table_get_ptr@@Base>:
   12fd0:	b	12ebc <table_get@@Base>

00012fd4 <table_row_init@@Base>:
   12fd4:	push	{r4, r5, r6, lr}
   12fd8:	mov	r5, r1
   12fdc:	ldr	r4, [r0, #16]
   12fe0:	ldr	r0, [r0, #12]
   12fe4:	lsl	r0, r0, #2
   12fe8:	bl	11a84 <malloc@plt>
   12fec:	str	r0, [r4, r5, lsl #2]
   12ff0:	pop	{r4, r5, r6, pc}

00012ff4 <table_row_destroy@@Base>:
   12ff4:	push	{r4, r5, r6, r7, r8, lr}
   12ff8:	mov	r6, r0
   12ffc:	mov	r5, r1
   13000:	mov	r4, #0
   13004:	bl	12528 <table_get_column_length@@Base>
   13008:	ldr	r7, [r6, #16]
   1300c:	mov	r8, r0
   13010:	cmp	r4, r8
   13014:	blt	1302c <table_row_destroy@@Base+0x38>
   13018:	ldr	r0, [r7, r5, lsl #2]
   1301c:	cmp	r0, #0
   13020:	popeq	{r4, r5, r6, r7, r8, pc}
   13024:	pop	{r4, r5, r6, r7, r8, lr}
   13028:	b	11a60 <free@plt>
   1302c:	mov	r2, r4
   13030:	mov	r1, r5
   13034:	mov	r0, r6
   13038:	add	r4, r4, #1
   1303c:	bl	14068 <table_cell_destroy@@Base>
   13040:	b	13010 <table_row_destroy@@Base+0x1c>

00013044 <table_get_row_length@@Base>:
   13044:	ldr	r0, [r0, #20]
   13048:	bx	lr

0001304c <table_add_row@@Base>:
   1304c:	ldr	r2, [r0, #20]
   13050:	push	{r4, r5, r6, r7, r8, lr}
   13054:	mov	r4, r0
   13058:	ldr	r1, [r0, #24]
   1305c:	udiv	r3, r2, r1
   13060:	mls	r3, r1, r3, r2
   13064:	cmp	r3, #0
   13068:	bne	13088 <table_add_row@@Base+0x3c>
   1306c:	ldr	r3, [r4, #28]
   13070:	ldr	r0, [r0, #16]
   13074:	add	r1, r1, r3
   13078:	str	r1, [r4, #28]
   1307c:	lsl	r1, r1, #2
   13080:	bl	11a6c <realloc@plt>
   13084:	str	r0, [r4, #16]
   13088:	ldr	r6, [r4, #20]
   1308c:	mov	r0, r4
   13090:	mov	r5, #0
   13094:	bl	12528 <table_get_column_length@@Base>
   13098:	mov	r7, r0
   1309c:	mov	r0, r4
   130a0:	mov	r1, r6
   130a4:	bl	12fd4 <table_row_init@@Base>
   130a8:	cmp	r7, r5
   130ac:	bgt	130d4 <table_add_row@@Base+0x88>
   130b0:	mov	r0, r4
   130b4:	mov	r3, #2
   130b8:	ldr	r1, [r4, #20]
   130bc:	mvn	r2, #0
   130c0:	bl	12450 <table_notify@@Base>
   130c4:	ldr	r0, [r4, #20]
   130c8:	add	r3, r0, #1
   130cc:	str	r3, [r4, #20]
   130d0:	pop	{r4, r5, r6, r7, r8, pc}
   130d4:	mov	r2, r5
   130d8:	mov	r1, r6
   130dc:	mov	r0, r4
   130e0:	add	r5, r5, #1
   130e4:	bl	14054 <table_cell_init@@Base>
   130e8:	b	130a8 <table_add_row@@Base+0x5c>

000130ec <table_remove_row@@Base>:
   130ec:	push	{r4, r5, r6, r7, r8, lr}
   130f0:	mov	r4, r0
   130f4:	mov	r6, r1
   130f8:	mov	r5, #0
   130fc:	ldr	r7, [r0, #20]
   13100:	bl	12528 <table_get_column_length@@Base>
   13104:	mov	r8, r0
   13108:	cmp	r8, r5
   1310c:	bgt	1318c <table_remove_row@@Base+0xa0>
   13110:	ldr	r3, [r4, #16]
   13114:	ldr	r0, [r3, r6, lsl #2]
   13118:	cmp	r0, #0
   1311c:	beq	13124 <table_remove_row@@Base+0x38>
   13120:	bl	11a60 <free@plt>
   13124:	mov	r3, r6
   13128:	sub	r7, r7, #1
   1312c:	cmp	r3, r7
   13130:	blt	131c8 <table_remove_row@@Base+0xdc>
   13134:	ldr	r3, [r4, #20]
   13138:	ldr	r2, [r4, #24]
   1313c:	sub	r3, r3, #1
   13140:	udiv	r1, r3, r2
   13144:	str	r3, [r4, #20]
   13148:	mls	r3, r2, r1, r3
   1314c:	cmp	r3, #0
   13150:	bne	13170 <table_remove_row@@Base+0x84>
   13154:	ldr	r0, [r4, #16]
   13158:	ldr	r1, [r4, #28]
   1315c:	sub	r1, r1, r2
   13160:	str	r1, [r4, #28]
   13164:	lsl	r1, r1, #2
   13168:	bl	11a6c <realloc@plt>
   1316c:	str	r0, [r4, #16]
   13170:	mov	r0, r4
   13174:	mov	r3, #4
   13178:	mvn	r2, #0
   1317c:	mov	r1, r6
   13180:	bl	12450 <table_notify@@Base>
   13184:	mov	r0, #0
   13188:	pop	{r4, r5, r6, r7, r8, pc}
   1318c:	mov	r1, r5
   13190:	mov	r0, r4
   13194:	bl	12580 <table_get_column_data_type@@Base>
   13198:	cmp	r0, #23
   1319c:	beq	131c0 <table_remove_row@@Base+0xd4>
   131a0:	mov	r2, r5
   131a4:	mov	r1, r6
   131a8:	mov	r0, r4
   131ac:	bl	1403c <table_get_cell_ptr@@Base>
   131b0:	ldr	r0, [r0]
   131b4:	cmp	r0, #0
   131b8:	beq	131c0 <table_remove_row@@Base+0xd4>
   131bc:	bl	11a60 <free@plt>
   131c0:	add	r5, r5, #1
   131c4:	b	13108 <table_remove_row@@Base+0x1c>
   131c8:	ldr	r2, [r4, #16]
   131cc:	add	r1, r2, r3, lsl #2
   131d0:	ldr	r1, [r1, #4]
   131d4:	str	r1, [r2, r3, lsl #2]
   131d8:	add	r3, r3, #1
   131dc:	b	1312c <table_remove_row@@Base+0x40>

000131e0 <table_get_row_ptr@@Base>:
   131e0:	ldr	r0, [r0, #16]
   131e4:	add	r0, r0, r1, lsl #2
   131e8:	bx	lr

000131ec <table_set_row_ptr@@Base>:
   131ec:	ldr	r2, [r2]
   131f0:	ldr	r3, [r0, #16]
   131f4:	str	r2, [r3, r1, lsl #2]
   131f8:	bx	lr

000131fc <table_set@@Base>:
   131fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13200:	mov	r6, r0
   13204:	mov	r8, r1
   13208:	mov	r7, r2
   1320c:	mov	r5, r3
   13210:	ldr	r9, [sp, #32]
   13214:	bl	1403c <table_get_cell_ptr@@Base>
   13218:	mov	r4, r0
   1321c:	mov	r1, r7
   13220:	mov	r0, r6
   13224:	bl	12800 <table_get_col_ptr@@Base>
   13228:	cmp	r9, #23
   1322c:	ldrls	pc, [pc, r9, lsl #2]
   13230:	b	13380 <table_set@@Base+0x184>
   13234:	ldrdeq	r3, [r1], -r0
   13238:	andeq	r3, r1, r4, lsr #6
   1323c:	andeq	r3, r1, r0, lsr r3
   13240:	andeq	r3, r1, ip, lsr r3
   13244:	andeq	r3, r1, r8, asr #6
   13248:	andeq	r3, r1, r8, lsl #7
   1324c:	muleq	r1, r4, r3
   13250:	andeq	r3, r1, r0, lsr #7
   13254:	andeq	r3, r1, ip, lsr #7
   13258:	andeq	r3, r1, ip, ror #7
   1325c:	andeq	r3, r1, ip, lsl #8
   13260:	andeq	r3, r1, r8, lsl r4
   13264:	andeq	r3, r1, r4, lsr #8
   13268:	andeq	r3, r1, r0, lsr r4
   1326c:	andeq	r3, r1, ip, lsr r4
   13270:	andeq	r3, r1, r8, asr #8
   13274:	andeq	r3, r1, r4, asr r4
   13278:	andeq	r3, r1, r0, ror #8
   1327c:	andeq	r3, r1, ip, ror #8
   13280:			; <UNDEFINED> instruction: 0x000134b0
   13284:			; <UNDEFINED> instruction: 0x000134bc
   13288:	andeq	r3, r1, r8, ror r4
   1328c:	muleq	r1, r4, r2
   13290:	andeq	r3, r1, r8, asr #9
   13294:	ldr	r3, [r0, #4]
   13298:	cmp	r3, #22
   1329c:	bne	13380 <table_set@@Base+0x184>
   132a0:	ldr	r3, [r4]
   132a4:	cmp	r3, #0
   132a8:	bne	132b8 <table_set@@Base+0xbc>
   132ac:	mov	r0, #1
   132b0:	bl	11a84 <malloc@plt>
   132b4:	str	r0, [r4]
   132b8:	ldr	r3, [r4]
   132bc:	cmp	r3, #0
   132c0:	ldrbne	r2, [r5]
   132c4:	strbne	r2, [r3]
   132c8:	bne	13308 <table_set@@Base+0x10c>
   132cc:	b	13380 <table_set@@Base+0x184>
   132d0:	ldr	r3, [r0, #4]
   132d4:	cmp	r3, #0
   132d8:	bne	13380 <table_set@@Base+0x184>
   132dc:	ldr	r3, [r4]
   132e0:	cmp	r3, #0
   132e4:	bne	132f4 <table_set@@Base+0xf8>
   132e8:	mov	r0, #4
   132ec:	bl	11a84 <malloc@plt>
   132f0:	str	r0, [r4]
   132f4:	ldr	r3, [r4]
   132f8:	cmp	r3, #0
   132fc:	ldrne	r2, [r5]
   13300:	strne	r2, [r3]
   13304:	beq	13380 <table_set@@Base+0x184>
   13308:	mov	r0, r6
   1330c:	mov	r3, #1
   13310:	mov	r2, r7
   13314:	mov	r1, r8
   13318:	bl	12450 <table_notify@@Base>
   1331c:	mov	r0, #0
   13320:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13324:	ldr	r3, [r0, #4]
   13328:	cmp	r3, #1
   1332c:	b	132d8 <table_set@@Base+0xdc>
   13330:	ldr	r3, [r0, #4]
   13334:	cmp	r3, #2
   13338:	b	1329c <table_set@@Base+0xa0>
   1333c:	ldr	r3, [r0, #4]
   13340:	cmp	r3, #3
   13344:	b	1329c <table_set@@Base+0xa0>
   13348:	ldr	r3, [r0, #4]
   1334c:	cmp	r3, #4
   13350:	bne	13380 <table_set@@Base+0x184>
   13354:	ldr	r3, [r4]
   13358:	cmp	r3, #0
   1335c:	bne	1336c <table_set@@Base+0x170>
   13360:	mov	r0, #2
   13364:	bl	11a84 <malloc@plt>
   13368:	str	r0, [r4]
   1336c:	ldr	r3, [r4]
   13370:	cmp	r3, #0
   13374:	ldrhne	r2, [r5]
   13378:	strhne	r2, [r3]
   1337c:	bne	13308 <table_set@@Base+0x10c>
   13380:	mvn	r0, #0
   13384:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13388:	ldr	r3, [r0, #4]
   1338c:	cmp	r3, #5
   13390:	b	13350 <table_set@@Base+0x154>
   13394:	ldr	r3, [r0, #4]
   13398:	cmp	r3, #6
   1339c:	b	132d8 <table_set@@Base+0xdc>
   133a0:	ldr	r3, [r0, #4]
   133a4:	cmp	r3, #7
   133a8:	b	132d8 <table_set@@Base+0xdc>
   133ac:	ldr	r0, [r0, #4]
   133b0:	cmp	r0, #8
   133b4:	bne	13380 <table_set@@Base+0x184>
   133b8:	ldr	r3, [r4]
   133bc:	cmp	r3, #0
   133c0:	bne	133cc <table_set@@Base+0x1d0>
   133c4:	bl	11a84 <malloc@plt>
   133c8:	str	r0, [r4]
   133cc:	ldr	r3, [r4]
   133d0:	cmp	r3, #0
   133d4:	beq	13380 <table_set@@Base+0x184>
   133d8:	ldr	r2, [r5]
   133dc:	str	r2, [r3]
   133e0:	ldr	r2, [r5, #4]
   133e4:	str	r2, [r3, #4]
   133e8:	b	13308 <table_set@@Base+0x10c>
   133ec:	ldr	r3, [r0, #4]
   133f0:	cmp	r3, #9
   133f4:	bne	13380 <table_set@@Base+0x184>
   133f8:	ldr	r3, [r4]
   133fc:	cmp	r3, #0
   13400:	bne	133cc <table_set@@Base+0x1d0>
   13404:	mov	r0, #8
   13408:	b	133c4 <table_set@@Base+0x1c8>
   1340c:	ldr	r3, [r0, #4]
   13410:	cmp	r3, #10
   13414:	b	13350 <table_set@@Base+0x154>
   13418:	ldr	r3, [r0, #4]
   1341c:	cmp	r3, #11
   13420:	b	13350 <table_set@@Base+0x154>
   13424:	ldr	r3, [r0, #4]
   13428:	cmp	r3, #12
   1342c:	b	132d8 <table_set@@Base+0xdc>
   13430:	ldr	r3, [r0, #4]
   13434:	cmp	r3, #13
   13438:	b	132d8 <table_set@@Base+0xdc>
   1343c:	ldr	r3, [r0, #4]
   13440:	cmp	r3, #14
   13444:	b	133f4 <table_set@@Base+0x1f8>
   13448:	ldr	r3, [r0, #4]
   1344c:	cmp	r3, #15
   13450:	b	133f4 <table_set@@Base+0x1f8>
   13454:	ldr	r3, [r0, #4]
   13458:	cmp	r3, #16
   1345c:	b	132d8 <table_set@@Base+0xdc>
   13460:	ldr	r3, [r0, #4]
   13464:	cmp	r3, #17
   13468:	b	133f4 <table_set@@Base+0x1f8>
   1346c:	ldr	r3, [r0, #4]
   13470:	cmp	r3, #18
   13474:	b	133f4 <table_set@@Base+0x1f8>
   13478:	ldr	r3, [r0, #4]
   1347c:	cmp	r3, #21
   13480:	bne	13380 <table_set@@Base+0x184>
   13484:	mov	r0, r5
   13488:	bl	11aa8 <strlen@plt>
   1348c:	add	r1, r0, #1
   13490:	ldr	r0, [r4]
   13494:	bl	11a6c <realloc@plt>
   13498:	cmp	r0, #0
   1349c:	str	r0, [r4]
   134a0:	beq	13380 <table_set@@Base+0x184>
   134a4:	mov	r1, r5
   134a8:	bl	11a78 <strcpy@plt>
   134ac:	b	13308 <table_set@@Base+0x10c>
   134b0:	ldr	r3, [r0, #4]
   134b4:	cmp	r3, #19
   134b8:	b	1329c <table_set@@Base+0xa0>
   134bc:	ldr	r3, [r0, #4]
   134c0:	cmp	r3, #20
   134c4:	b	1329c <table_set@@Base+0xa0>
   134c8:	ldr	r3, [r0, #4]
   134cc:	cmp	r3, #23
   134d0:	bne	13380 <table_set@@Base+0x184>
   134d4:	str	r5, [r4]
   134d8:	b	13308 <table_set@@Base+0x10c>

000134dc <table_set_bool@@Base>:
   134dc:	push	{r0, r1, r2, r3, r4, lr}
   134e0:	strb	r3, [sp, #15]
   134e4:	mov	r3, #22
   134e8:	str	r3, [sp]
   134ec:	add	r3, sp, #15
   134f0:	bl	131fc <table_set@@Base>
   134f4:	add	sp, sp, #20
   134f8:	pop	{pc}		; (ldr pc, [sp], #4)

000134fc <table_set_int@@Base>:
   134fc:	push	{r0, r1, r2, r3, r4, lr}
   13500:	str	r3, [sp, #12]
   13504:	mov	r3, #0
   13508:	str	r3, [sp]
   1350c:	add	r3, sp, #12
   13510:	bl	131fc <table_set@@Base>
   13514:	add	sp, sp, #20
   13518:	pop	{pc}		; (ldr pc, [sp], #4)

0001351c <table_set_uint@@Base>:
   1351c:	push	{r0, r1, r2, r3, r4, lr}
   13520:	str	r3, [sp, #12]
   13524:	mov	r3, #1
   13528:	str	r3, [sp]
   1352c:	add	r3, sp, #12
   13530:	bl	131fc <table_set@@Base>
   13534:	add	sp, sp, #20
   13538:	pop	{pc}		; (ldr pc, [sp], #4)

0001353c <table_set_int8@@Base>:
   1353c:	push	{r0, r1, r2, r3, r4, lr}
   13540:	strb	r3, [sp, #15]
   13544:	mov	r3, #2
   13548:	str	r3, [sp]
   1354c:	add	r3, sp, #15
   13550:	bl	131fc <table_set@@Base>
   13554:	add	sp, sp, #20
   13558:	pop	{pc}		; (ldr pc, [sp], #4)

0001355c <table_set_uint8@@Base>:
   1355c:	push	{r0, r1, r2, r3, r4, lr}
   13560:	strb	r3, [sp, #15]
   13564:	mov	r3, #3
   13568:	str	r3, [sp]
   1356c:	add	r3, sp, #15
   13570:	bl	131fc <table_set@@Base>
   13574:	add	sp, sp, #20
   13578:	pop	{pc}		; (ldr pc, [sp], #4)

0001357c <table_set_int16@@Base>:
   1357c:	push	{r0, r1, r2, r3, r4, lr}
   13580:	strh	r3, [sp, #14]
   13584:	mov	r3, #4
   13588:	str	r3, [sp]
   1358c:	add	r3, sp, #14
   13590:	bl	131fc <table_set@@Base>
   13594:	add	sp, sp, #20
   13598:	pop	{pc}		; (ldr pc, [sp], #4)

0001359c <table_set_uint16@@Base>:
   1359c:	push	{r0, r1, r2, r3, r4, lr}
   135a0:	strh	r3, [sp, #14]
   135a4:	mov	r3, #5
   135a8:	str	r3, [sp]
   135ac:	add	r3, sp, #14
   135b0:	bl	131fc <table_set@@Base>
   135b4:	add	sp, sp, #20
   135b8:	pop	{pc}		; (ldr pc, [sp], #4)

000135bc <table_set_int32@@Base>:
   135bc:	push	{r0, r1, r2, r3, r4, lr}
   135c0:	str	r3, [sp, #12]
   135c4:	mov	r3, #6
   135c8:	str	r3, [sp]
   135cc:	add	r3, sp, #12
   135d0:	bl	131fc <table_set@@Base>
   135d4:	add	sp, sp, #20
   135d8:	pop	{pc}		; (ldr pc, [sp], #4)

000135dc <table_set_uint32@@Base>:
   135dc:	push	{r0, r1, r2, r3, r4, lr}
   135e0:	str	r3, [sp, #12]
   135e4:	mov	r3, #7
   135e8:	str	r3, [sp]
   135ec:	add	r3, sp, #12
   135f0:	bl	131fc <table_set@@Base>
   135f4:	add	sp, sp, #20
   135f8:	pop	{pc}		; (ldr pc, [sp], #4)

000135fc <table_set_int64@@Base>:
   135fc:	mov	r3, #8
   13600:	push	{r0, r1, r2, lr}
   13604:	str	r3, [sp]
   13608:	add	r3, sp, #16
   1360c:	bl	131fc <table_set@@Base>
   13610:	add	sp, sp, #12
   13614:	pop	{pc}		; (ldr pc, [sp], #4)

00013618 <table_set_uint64@@Base>:
   13618:	mov	r3, #9
   1361c:	push	{r0, r1, r2, lr}
   13620:	str	r3, [sp]
   13624:	add	r3, sp, #16
   13628:	bl	131fc <table_set@@Base>
   1362c:	add	sp, sp, #12
   13630:	pop	{pc}		; (ldr pc, [sp], #4)

00013634 <table_set_short@@Base>:
   13634:	push	{r0, r1, r2, r3, r4, lr}
   13638:	strh	r3, [sp, #14]
   1363c:	mov	r3, #10
   13640:	str	r3, [sp]
   13644:	add	r3, sp, #14
   13648:	bl	131fc <table_set@@Base>
   1364c:	add	sp, sp, #20
   13650:	pop	{pc}		; (ldr pc, [sp], #4)

00013654 <table_set_ushort@@Base>:
   13654:	push	{r0, r1, r2, r3, r4, lr}
   13658:	strh	r3, [sp, #14]
   1365c:	mov	r3, #11
   13660:	str	r3, [sp]
   13664:	add	r3, sp, #14
   13668:	bl	131fc <table_set@@Base>
   1366c:	add	sp, sp, #20
   13670:	pop	{pc}		; (ldr pc, [sp], #4)

00013674 <table_set_long@@Base>:
   13674:	push	{r0, r1, r2, r3, r4, lr}
   13678:	str	r3, [sp, #12]
   1367c:	mov	r3, #12
   13680:	str	r3, [sp]
   13684:	add	r3, sp, r3
   13688:	bl	131fc <table_set@@Base>
   1368c:	add	sp, sp, #20
   13690:	pop	{pc}		; (ldr pc, [sp], #4)

00013694 <table_set_ulong@@Base>:
   13694:	push	{r0, r1, r2, r3, r4, lr}
   13698:	str	r3, [sp, #12]
   1369c:	mov	r3, #13
   136a0:	str	r3, [sp]
   136a4:	add	r3, sp, #12
   136a8:	bl	131fc <table_set@@Base>
   136ac:	add	sp, sp, #20
   136b0:	pop	{pc}		; (ldr pc, [sp], #4)

000136b4 <table_set_llong@@Base>:
   136b4:	mov	r3, #14
   136b8:	push	{r0, r1, r2, lr}
   136bc:	str	r3, [sp]
   136c0:	add	r3, sp, #16
   136c4:	bl	131fc <table_set@@Base>
   136c8:	add	sp, sp, #12
   136cc:	pop	{pc}		; (ldr pc, [sp], #4)

000136d0 <table_set_ullong@@Base>:
   136d0:	mov	r3, #15
   136d4:	push	{r0, r1, r2, lr}
   136d8:	str	r3, [sp]
   136dc:	add	r3, sp, #16
   136e0:	bl	131fc <table_set@@Base>
   136e4:	add	sp, sp, #12
   136e8:	pop	{pc}		; (ldr pc, [sp], #4)

000136ec <table_set_float@@Base>:
   136ec:	push	{r0, r1, r2, r3, r4, lr}
   136f0:	mov	r3, #16
   136f4:	str	r3, [sp]
   136f8:	add	r3, sp, #12
   136fc:	vstr	s0, [sp, #12]
   13700:	bl	131fc <table_set@@Base>
   13704:	add	sp, sp, #20
   13708:	pop	{pc}		; (ldr pc, [sp], #4)

0001370c <table_set_double@@Base>:
   1370c:	push	{r0, r1, r2, r3, r4, lr}
   13710:	mov	r3, #17
   13714:	str	r3, [sp]
   13718:	add	r3, sp, #8
   1371c:	vstr	d0, [sp, #8]
   13720:	bl	131fc <table_set@@Base>
   13724:	add	sp, sp, #20
   13728:	pop	{pc}		; (ldr pc, [sp], #4)

0001372c <table_set_ldouble@@Base>:
   1372c:	push	{r0, r1, r2, r3, r4, lr}
   13730:	mov	r3, #18
   13734:	str	r3, [sp]
   13738:	add	r3, sp, #8
   1373c:	vstr	d0, [sp, #8]
   13740:	bl	131fc <table_set@@Base>
   13744:	add	sp, sp, #20
   13748:	pop	{pc}		; (ldr pc, [sp], #4)

0001374c <table_set_string@@Base>:
   1374c:	mov	ip, #21
   13750:	push	{r0, r1, r2, lr}
   13754:	str	ip, [sp]
   13758:	bl	131fc <table_set@@Base>
   1375c:	add	sp, sp, #12
   13760:	pop	{pc}		; (ldr pc, [sp], #4)

00013764 <table_set_char@@Base>:
   13764:	push	{r0, r1, r2, r3, r4, lr}
   13768:	strb	r3, [sp, #15]
   1376c:	mov	r3, #19
   13770:	str	r3, [sp]
   13774:	add	r3, sp, #15
   13778:	bl	131fc <table_set@@Base>
   1377c:	add	sp, sp, #20
   13780:	pop	{pc}		; (ldr pc, [sp], #4)

00013784 <table_set_uchar@@Base>:
   13784:	push	{r0, r1, r2, r3, r4, lr}
   13788:	strb	r3, [sp, #15]
   1378c:	mov	r3, #20
   13790:	str	r3, [sp]
   13794:	add	r3, sp, #15
   13798:	bl	131fc <table_set@@Base>
   1379c:	add	sp, sp, #20
   137a0:	pop	{pc}		; (ldr pc, [sp], #4)

000137a4 <table_set_ptr@@Base>:
   137a4:	mov	ip, #23
   137a8:	push	{r0, r1, r2, lr}
   137ac:	str	ip, [sp]
   137b0:	bl	131fc <table_set@@Base>
   137b4:	add	sp, sp, #12
   137b8:	pop	{pc}		; (ldr pc, [sp], #4)

000137bc <table_cell_to_buffer@@Base>:
   137bc:	push	{r4, r5, r6, r7, lr}
   137c0:	sub	sp, sp, #20
   137c4:	mov	r7, r1
   137c8:	mov	r1, r2
   137cc:	mov	r6, r0
   137d0:	mov	r4, r3
   137d4:	str	r2, [sp, #12]
   137d8:	ldr	r5, [sp, #40]	; 0x28
   137dc:	bl	12580 <table_get_column_data_type@@Base>
   137e0:	ldr	r2, [sp, #12]
   137e4:	cmp	r0, #23
   137e8:	ldrls	pc, [pc, r0, lsl #2]
   137ec:	b	1390c <table_cell_to_buffer@@Base+0x150>
   137f0:	andeq	r3, r1, r0, asr r8
   137f4:	andeq	r3, r1, r8, ror #16
   137f8:	andeq	r3, r1, ip, lsl #17
   137fc:	muleq	r1, ip, r8
   13800:	andeq	r3, r1, ip, lsr #17
   13804:			; <UNDEFINED> instruction: 0x000138bc
   13808:	andeq	r3, r1, ip, asr #17
   1380c:	ldrdeq	r3, [r1], -ip
   13810:	andeq	r3, r1, ip, ror #17
   13814:	andeq	r3, r1, r8, lsl r9
   13818:	andeq	r3, r1, r0, lsr r9
   1381c:	andeq	r3, r1, r8, asr #18
   13820:	andeq	r3, r1, r0, ror #18
   13824:	andeq	r3, r1, r8, ror r9
   13828:	muleq	r1, r0, r9
   1382c:	andeq	r3, r1, r0, lsr #19
   13830:	andeq	r3, r1, r8, asr #19
   13834:	strdeq	r3, [r1], -r0
   13838:	andeq	r3, r1, r8, lsl #20
   1383c:	andeq	r3, r1, r0, lsr sl
   13840:	andeq	r3, r1, r8, asr #20
   13844:			; <UNDEFINED> instruction: 0x000139b0
   13848:	andeq	r3, r1, r0, lsr #20
   1384c:	andeq	r3, r1, r8, asr sl
   13850:	mov	r1, r7
   13854:	mov	r0, r6
   13858:	bl	12edc <table_get_int@@Base>
   1385c:	mov	r3, r0
   13860:	ldr	r2, [pc, #520]	; 13a70 <table_cell_to_buffer@@Base+0x2b4>
   13864:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13868:	mov	r1, r7
   1386c:	mov	r0, r6
   13870:	bl	12eec <table_get_uint@@Base>
   13874:	ldr	r2, [pc, #504]	; 13a74 <table_cell_to_buffer@@Base+0x2b8>
   13878:	mov	r3, r0
   1387c:	mov	r1, r5
   13880:	mov	r0, r4
   13884:	bl	11ab4 <snprintf@plt>
   13888:	b	1390c <table_cell_to_buffer@@Base+0x150>
   1388c:	mov	r1, r7
   13890:	mov	r0, r6
   13894:	bl	12efc <table_get_int8@@Base>
   13898:	b	1385c <table_cell_to_buffer@@Base+0xa0>
   1389c:	mov	r1, r7
   138a0:	mov	r0, r6
   138a4:	bl	12f0c <table_get_uint8@@Base>
   138a8:	b	13874 <table_cell_to_buffer@@Base+0xb8>
   138ac:	mov	r1, r7
   138b0:	mov	r0, r6
   138b4:	bl	12f1c <table_get_int16@@Base>
   138b8:	b	1385c <table_cell_to_buffer@@Base+0xa0>
   138bc:	mov	r1, r7
   138c0:	mov	r0, r6
   138c4:	bl	12f2c <table_get_uint16@@Base>
   138c8:	b	13874 <table_cell_to_buffer@@Base+0xb8>
   138cc:	mov	r1, r7
   138d0:	mov	r0, r6
   138d4:	bl	12f3c <table_get_int32@@Base>
   138d8:	b	1385c <table_cell_to_buffer@@Base+0xa0>
   138dc:	mov	r1, r7
   138e0:	mov	r0, r6
   138e4:	bl	12f40 <table_get_uint32@@Base>
   138e8:	b	13874 <table_cell_to_buffer@@Base+0xb8>
   138ec:	mov	r1, r7
   138f0:	mov	r0, r6
   138f4:	bl	12f44 <table_get_int64@@Base>
   138f8:	ldr	r2, [pc, #376]	; 13a78 <table_cell_to_buffer@@Base+0x2bc>
   138fc:	strd	r0, [sp]
   13900:	mov	r1, r5
   13904:	mov	r0, r4
   13908:	bl	11ab4 <snprintf@plt>
   1390c:	mov	r0, #0
   13910:	add	sp, sp, #20
   13914:	pop	{r4, r5, r6, r7, pc}
   13918:	mov	r1, r7
   1391c:	mov	r0, r6
   13920:	bl	12f54 <table_get_uint64@@Base>
   13924:	ldr	r2, [pc, #336]	; 13a7c <table_cell_to_buffer@@Base+0x2c0>
   13928:	strd	r0, [sp]
   1392c:	b	13900 <table_cell_to_buffer@@Base+0x144>
   13930:	mov	r1, r7
   13934:	mov	r0, r6
   13938:	bl	12f64 <table_get_short@@Base>
   1393c:	mov	r3, r0
   13940:	ldr	r2, [pc, #312]	; 13a80 <table_cell_to_buffer@@Base+0x2c4>
   13944:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13948:	mov	r1, r7
   1394c:	mov	r0, r6
   13950:	bl	12f68 <table_get_ushort@@Base>
   13954:	mov	r3, r0
   13958:	ldr	r2, [pc, #292]	; 13a84 <table_cell_to_buffer@@Base+0x2c8>
   1395c:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13960:	mov	r1, r7
   13964:	mov	r0, r6
   13968:	bl	12f6c <table_get_long@@Base>
   1396c:	mov	r3, r0
   13970:	ldr	r2, [pc, #272]	; 13a88 <table_cell_to_buffer@@Base+0x2cc>
   13974:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13978:	mov	r1, r7
   1397c:	mov	r0, r6
   13980:	bl	12f7c <table_get_ulong@@Base>
   13984:	mov	r3, r0
   13988:	ldr	r2, [pc, #252]	; 13a8c <table_cell_to_buffer@@Base+0x2d0>
   1398c:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13990:	mov	r1, r7
   13994:	mov	r0, r6
   13998:	bl	12f8c <table_get_llong@@Base>
   1399c:	b	138f8 <table_cell_to_buffer@@Base+0x13c>
   139a0:	mov	r1, r7
   139a4:	mov	r0, r6
   139a8:	bl	12f90 <table_get_ullong@@Base>
   139ac:	b	13924 <table_cell_to_buffer@@Base+0x168>
   139b0:	mov	r1, r7
   139b4:	mov	r0, r6
   139b8:	bl	12fcc <table_get_string@@Base>
   139bc:	mov	r3, r0
   139c0:	ldr	r2, [pc, #200]	; 13a90 <table_cell_to_buffer@@Base+0x2d4>
   139c4:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   139c8:	mov	r1, r7
   139cc:	mov	r0, r6
   139d0:	bl	12f94 <table_get_float@@Base>
   139d4:	vcvt.f64.f32	d0, s0
   139d8:	ldr	r2, [pc, #180]	; 13a94 <table_cell_to_buffer@@Base+0x2d8>
   139dc:	vstr	d0, [sp]
   139e0:	mov	r1, r5
   139e4:	mov	r0, r4
   139e8:	bl	11ab4 <snprintf@plt>
   139ec:	b	1390c <table_cell_to_buffer@@Base+0x150>
   139f0:	mov	r1, r7
   139f4:	mov	r0, r6
   139f8:	bl	12fa4 <table_get_double@@Base>
   139fc:	ldr	r2, [pc, #148]	; 13a98 <table_cell_to_buffer@@Base+0x2dc>
   13a00:	vstr	d0, [sp]
   13a04:	b	139e0 <table_cell_to_buffer@@Base+0x224>
   13a08:	mov	r1, r7
   13a0c:	mov	r0, r6
   13a10:	bl	12fb4 <table_get_ldouble@@Base>
   13a14:	ldr	r2, [pc, #128]	; 13a9c <table_cell_to_buffer@@Base+0x2e0>
   13a18:	vstr	d0, [sp]
   13a1c:	b	139e0 <table_cell_to_buffer@@Base+0x224>
   13a20:	mov	r1, r7
   13a24:	mov	r0, r6
   13a28:	bl	12ecc <table_get_bool@@Base>
   13a2c:	b	1385c <table_cell_to_buffer@@Base+0xa0>
   13a30:	mov	r1, r7
   13a34:	mov	r0, r6
   13a38:	bl	12fc4 <table_get_char@@Base>
   13a3c:	mov	r3, r0
   13a40:	ldr	r2, [pc, #88]	; 13aa0 <table_cell_to_buffer@@Base+0x2e4>
   13a44:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13a48:	mov	r1, r7
   13a4c:	mov	r0, r6
   13a50:	bl	12fc8 <table_get_uchar@@Base>
   13a54:	b	13a3c <table_cell_to_buffer@@Base+0x280>
   13a58:	mov	r1, r7
   13a5c:	mov	r0, r6
   13a60:	bl	12fd0 <table_get_ptr@@Base>
   13a64:	mov	r3, r0
   13a68:	ldr	r2, [pc, #52]	; 13aa4 <table_cell_to_buffer@@Base+0x2e8>
   13a6c:	b	1387c <table_cell_to_buffer@@Base+0xc0>
   13a70:	andeq	r4, r1, r8, lsl #4
   13a74:	andeq	r4, r1, fp, lsl #4
   13a78:	andeq	r4, r1, lr, lsl #4
   13a7c:	andeq	r4, r1, r3, lsl r2
   13a80:	andeq	r4, r1, r8, lsl r2
   13a84:	andeq	r4, r1, ip, lsl r2
   13a88:	andeq	r4, r1, r0, lsr #4
   13a8c:	andeq	r4, r1, r4, lsr #4
   13a90:	andeq	r4, r1, r8, lsr #4
   13a94:	andeq	r4, r1, fp, lsr #4
   13a98:	andeq	r4, r1, lr, lsr #4
   13a9c:	andeq	r4, r1, r2, lsr r2
   13aa0:	andeq	r4, r1, r6, lsr r2
   13aa4:	andeq	r4, r1, r9, lsr r2

00013aa8 <table_cell_from_buffer@@Base>:
   13aa8:	push	{r4, r5, r6, r7, lr}
   13aac:	mov	r7, r1
   13ab0:	sub	sp, sp, #268	; 0x10c
   13ab4:	mov	r1, r2
   13ab8:	mov	r6, r0
   13abc:	mov	r5, r2
   13ac0:	mov	r4, r3
   13ac4:	bl	12580 <table_get_column_data_type@@Base>
   13ac8:	cmp	r0, #23
   13acc:	ldrls	pc, [pc, r0, lsl #2]
   13ad0:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13ad4:	andeq	r3, r1, r4, lsr fp
   13ad8:	andeq	r3, r1, r8, ror #22
   13adc:	muleq	r1, r8, fp
   13ae0:	andeq	r3, r1, r8, asr #23
   13ae4:	strdeq	r3, [r1], -r8
   13ae8:	andeq	r3, r1, r8, lsr #24
   13aec:	andeq	r3, r1, r8, asr ip
   13af0:	andeq	r3, r1, r8, lsl #25
   13af4:			; <UNDEFINED> instruction: 0x00013cb8
   13af8:	andeq	r3, r1, ip, ror #25
   13afc:	andeq	r3, r1, r0, lsr #26
   13b00:	andeq	r3, r1, r0, asr sp
   13b04:	andeq	r3, r1, r0, lsl #27
   13b08:			; <UNDEFINED> instruction: 0x00013db0
   13b0c:	andeq	r3, r1, r0, ror #27
   13b10:	andeq	r3, r1, r4, lsl lr
   13b14:	andeq	r3, r1, r8, ror lr
   13b18:	andeq	r3, r1, r8, lsr #29
   13b1c:	ldrdeq	r3, [r1], -r8
   13b20:	andeq	r3, r1, r4, ror #30
   13b24:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13b28:	andeq	r3, r1, r8, asr #28
   13b2c:	andeq	r3, r1, r8, lsl #30
   13b30:	andeq	r3, r1, r4, asr #31
   13b34:	add	r2, sp, #8
   13b38:	ldr	r1, [pc, #1212]	; 13ffc <table_cell_from_buffer@@Base+0x554>
   13b3c:	mov	r0, r4
   13b40:	bl	11ac0 <__isoc99_sscanf@plt>
   13b44:	cmp	r0, #1
   13b48:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13b4c:	mov	r2, r5
   13b50:	mov	r1, r7
   13b54:	ldr	r3, [sp, #8]
   13b58:	mov	r0, r6
   13b5c:	bl	134fc <table_set_int@@Base>
   13b60:	mov	r4, #0
   13b64:	b	13f58 <table_cell_from_buffer@@Base+0x4b0>
   13b68:	add	r2, sp, #8
   13b6c:	ldr	r1, [pc, #1164]	; 14000 <table_cell_from_buffer@@Base+0x558>
   13b70:	mov	r0, r4
   13b74:	bl	11ac0 <__isoc99_sscanf@plt>
   13b78:	cmp	r0, #1
   13b7c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13b80:	mov	r2, r5
   13b84:	mov	r1, r7
   13b88:	ldr	r3, [sp, #8]
   13b8c:	mov	r0, r6
   13b90:	bl	1351c <table_set_uint@@Base>
   13b94:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13b98:	add	r2, sp, #8
   13b9c:	ldr	r1, [pc, #1120]	; 14004 <table_cell_from_buffer@@Base+0x55c>
   13ba0:	mov	r0, r4
   13ba4:	bl	11ac0 <__isoc99_sscanf@plt>
   13ba8:	cmp	r0, #1
   13bac:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13bb0:	ldrsb	r3, [sp, #8]
   13bb4:	mov	r2, r5
   13bb8:	mov	r1, r7
   13bbc:	mov	r0, r6
   13bc0:	bl	1353c <table_set_int8@@Base>
   13bc4:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13bc8:	add	r2, sp, #8
   13bcc:	ldr	r1, [pc, #1076]	; 14008 <table_cell_from_buffer@@Base+0x560>
   13bd0:	mov	r0, r4
   13bd4:	bl	11ac0 <__isoc99_sscanf@plt>
   13bd8:	cmp	r0, #1
   13bdc:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13be0:	ldrb	r3, [sp, #8]
   13be4:	mov	r2, r5
   13be8:	mov	r1, r7
   13bec:	mov	r0, r6
   13bf0:	bl	1355c <table_set_uint8@@Base>
   13bf4:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13bf8:	add	r2, sp, #8
   13bfc:	ldr	r1, [pc, #1032]	; 1400c <table_cell_from_buffer@@Base+0x564>
   13c00:	mov	r0, r4
   13c04:	bl	11ac0 <__isoc99_sscanf@plt>
   13c08:	cmp	r0, #1
   13c0c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13c10:	ldrsh	r3, [sp, #8]
   13c14:	mov	r2, r5
   13c18:	mov	r1, r7
   13c1c:	mov	r0, r6
   13c20:	bl	1357c <table_set_int16@@Base>
   13c24:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13c28:	add	r2, sp, #8
   13c2c:	ldr	r1, [pc, #988]	; 14010 <table_cell_from_buffer@@Base+0x568>
   13c30:	mov	r0, r4
   13c34:	bl	11ac0 <__isoc99_sscanf@plt>
   13c38:	cmp	r0, #1
   13c3c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13c40:	ldrh	r3, [sp, #8]
   13c44:	mov	r2, r5
   13c48:	mov	r1, r7
   13c4c:	mov	r0, r6
   13c50:	bl	1359c <table_set_uint16@@Base>
   13c54:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13c58:	add	r2, sp, #8
   13c5c:	ldr	r1, [pc, #920]	; 13ffc <table_cell_from_buffer@@Base+0x554>
   13c60:	mov	r0, r4
   13c64:	bl	11ac0 <__isoc99_sscanf@plt>
   13c68:	cmp	r0, #1
   13c6c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13c70:	mov	r2, r5
   13c74:	mov	r1, r7
   13c78:	ldr	r3, [sp, #8]
   13c7c:	mov	r0, r6
   13c80:	bl	135bc <table_set_int32@@Base>
   13c84:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13c88:	add	r2, sp, #8
   13c8c:	ldr	r1, [pc, #876]	; 14000 <table_cell_from_buffer@@Base+0x558>
   13c90:	mov	r0, r4
   13c94:	bl	11ac0 <__isoc99_sscanf@plt>
   13c98:	cmp	r0, #1
   13c9c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13ca0:	mov	r2, r5
   13ca4:	mov	r1, r7
   13ca8:	ldr	r3, [sp, #8]
   13cac:	mov	r0, r6
   13cb0:	bl	135dc <table_set_uint32@@Base>
   13cb4:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13cb8:	add	r2, sp, #8
   13cbc:	ldr	r1, [pc, #848]	; 14014 <table_cell_from_buffer@@Base+0x56c>
   13cc0:	mov	r0, r4
   13cc4:	bl	11ac0 <__isoc99_sscanf@plt>
   13cc8:	cmp	r0, #1
   13ccc:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13cd0:	ldrd	r2, [sp, #8]
   13cd4:	mov	r1, r7
   13cd8:	mov	r0, r6
   13cdc:	strd	r2, [sp]
   13ce0:	mov	r2, r5
   13ce4:	bl	135fc <table_set_int64@@Base>
   13ce8:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13cec:	add	r2, sp, #8
   13cf0:	ldr	r1, [pc, #800]	; 14018 <table_cell_from_buffer@@Base+0x570>
   13cf4:	mov	r0, r4
   13cf8:	bl	11ac0 <__isoc99_sscanf@plt>
   13cfc:	cmp	r0, #1
   13d00:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13d04:	ldrd	r2, [sp, #8]
   13d08:	mov	r1, r7
   13d0c:	mov	r0, r6
   13d10:	strd	r2, [sp]
   13d14:	mov	r2, r5
   13d18:	bl	13618 <table_set_uint64@@Base>
   13d1c:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13d20:	add	r2, sp, #8
   13d24:	ldr	r1, [pc, #736]	; 1400c <table_cell_from_buffer@@Base+0x564>
   13d28:	mov	r0, r4
   13d2c:	bl	11ac0 <__isoc99_sscanf@plt>
   13d30:	cmp	r0, #1
   13d34:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13d38:	ldrsh	r3, [sp, #8]
   13d3c:	mov	r2, r5
   13d40:	mov	r1, r7
   13d44:	mov	r0, r6
   13d48:	bl	13634 <table_set_short@@Base>
   13d4c:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13d50:	add	r2, sp, #8
   13d54:	ldr	r1, [pc, #692]	; 14010 <table_cell_from_buffer@@Base+0x568>
   13d58:	mov	r0, r4
   13d5c:	bl	11ac0 <__isoc99_sscanf@plt>
   13d60:	cmp	r0, #1
   13d64:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13d68:	ldrh	r3, [sp, #8]
   13d6c:	mov	r2, r5
   13d70:	mov	r1, r7
   13d74:	mov	r0, r6
   13d78:	bl	13654 <table_set_ushort@@Base>
   13d7c:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13d80:	add	r2, sp, #8
   13d84:	ldr	r1, [pc, #656]	; 1401c <table_cell_from_buffer@@Base+0x574>
   13d88:	mov	r0, r4
   13d8c:	bl	11ac0 <__isoc99_sscanf@plt>
   13d90:	cmp	r0, #1
   13d94:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13d98:	mov	r2, r5
   13d9c:	mov	r1, r7
   13da0:	ldr	r3, [sp, #8]
   13da4:	mov	r0, r6
   13da8:	bl	13674 <table_set_long@@Base>
   13dac:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13db0:	add	r2, sp, #8
   13db4:	ldr	r1, [pc, #612]	; 14020 <table_cell_from_buffer@@Base+0x578>
   13db8:	mov	r0, r4
   13dbc:	bl	11ac0 <__isoc99_sscanf@plt>
   13dc0:	cmp	r0, #1
   13dc4:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13dc8:	mov	r2, r5
   13dcc:	mov	r1, r7
   13dd0:	ldr	r3, [sp, #8]
   13dd4:	mov	r0, r6
   13dd8:	bl	13694 <table_set_ulong@@Base>
   13ddc:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13de0:	add	r2, sp, #8
   13de4:	ldr	r1, [pc, #552]	; 14014 <table_cell_from_buffer@@Base+0x56c>
   13de8:	mov	r0, r4
   13dec:	bl	11ac0 <__isoc99_sscanf@plt>
   13df0:	cmp	r0, #1
   13df4:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13df8:	ldrd	r2, [sp, #8]
   13dfc:	mov	r1, r7
   13e00:	mov	r0, r6
   13e04:	strd	r2, [sp]
   13e08:	mov	r2, r5
   13e0c:	bl	136b4 <table_set_llong@@Base>
   13e10:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13e14:	add	r2, sp, #8
   13e18:	ldr	r1, [pc, #504]	; 14018 <table_cell_from_buffer@@Base+0x570>
   13e1c:	mov	r0, r4
   13e20:	bl	11ac0 <__isoc99_sscanf@plt>
   13e24:	cmp	r0, #1
   13e28:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13e2c:	ldrd	r2, [sp, #8]
   13e30:	mov	r1, r7
   13e34:	mov	r0, r6
   13e38:	strd	r2, [sp]
   13e3c:	mov	r2, r5
   13e40:	bl	136d0 <table_set_ullong@@Base>
   13e44:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13e48:	add	r2, sp, #8
   13e4c:	ldr	r1, [pc, #464]	; 14024 <table_cell_from_buffer@@Base+0x57c>
   13e50:	mov	r0, r4
   13e54:	bl	11ac0 <__isoc99_sscanf@plt>
   13e58:	cmp	r0, #1
   13e5c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13e60:	add	r3, sp, #8
   13e64:	mov	r2, r5
   13e68:	mov	r1, r7
   13e6c:	mov	r0, r6
   13e70:	bl	1374c <table_set_string@@Base>
   13e74:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13e78:	add	r2, sp, #8
   13e7c:	ldr	r1, [pc, #420]	; 14028 <table_cell_from_buffer@@Base+0x580>
   13e80:	mov	r0, r4
   13e84:	bl	11ac0 <__isoc99_sscanf@plt>
   13e88:	cmp	r0, #1
   13e8c:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13e90:	mov	r2, r5
   13e94:	mov	r1, r7
   13e98:	vldr	s0, [sp, #8]
   13e9c:	mov	r0, r6
   13ea0:	bl	136ec <table_set_float@@Base>
   13ea4:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13ea8:	add	r2, sp, #8
   13eac:	ldr	r1, [pc, #376]	; 1402c <table_cell_from_buffer@@Base+0x584>
   13eb0:	mov	r0, r4
   13eb4:	bl	11ac0 <__isoc99_sscanf@plt>
   13eb8:	cmp	r0, #1
   13ebc:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13ec0:	mov	r2, r5
   13ec4:	mov	r1, r7
   13ec8:	vldr	d0, [sp, #8]
   13ecc:	mov	r0, r6
   13ed0:	bl	1370c <table_set_double@@Base>
   13ed4:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13ed8:	add	r2, sp, #8
   13edc:	ldr	r1, [pc, #332]	; 14030 <table_cell_from_buffer@@Base+0x588>
   13ee0:	mov	r0, r4
   13ee4:	bl	11ac0 <__isoc99_sscanf@plt>
   13ee8:	cmp	r0, #1
   13eec:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13ef0:	mov	r2, r5
   13ef4:	mov	r1, r7
   13ef8:	vldr	d0, [sp, #8]
   13efc:	mov	r0, r6
   13f00:	bl	1372c <table_set_ldouble@@Base>
   13f04:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13f08:	add	r2, sp, #8
   13f0c:	ldr	r1, [pc, #232]	; 13ffc <table_cell_from_buffer@@Base+0x554>
   13f10:	mov	r0, r4
   13f14:	bl	11ac0 <__isoc99_sscanf@plt>
   13f18:	cmp	r0, #1
   13f1c:	mov	r3, r0
   13f20:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13f24:	ldr	r4, [sp, #8]
   13f28:	cmp	r4, #0
   13f2c:	beq	13f44 <table_cell_from_buffer@@Base+0x49c>
   13f30:	mov	r2, r5
   13f34:	mov	r1, r7
   13f38:	mov	r0, r6
   13f3c:	bl	134dc <table_set_bool@@Base>
   13f40:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13f44:	mov	r3, r4
   13f48:	mov	r2, r5
   13f4c:	mov	r1, r7
   13f50:	mov	r0, r6
   13f54:	bl	134dc <table_set_bool@@Base>
   13f58:	mov	r0, r4
   13f5c:	add	sp, sp, #268	; 0x10c
   13f60:	pop	{r4, r5, r6, r7, pc}
   13f64:	add	r2, sp, #8
   13f68:	ldr	r1, [pc, #196]	; 14034 <table_cell_from_buffer@@Base+0x58c>
   13f6c:	mov	r0, r4
   13f70:	bl	11ac0 <__isoc99_sscanf@plt>
   13f74:	cmp	r0, #1
   13f78:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13f7c:	ldrb	r3, [sp, #8]
   13f80:	mov	r2, r5
   13f84:	mov	r1, r7
   13f88:	mov	r0, r6
   13f8c:	bl	13764 <table_set_char@@Base>
   13f90:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13f94:	add	r2, sp, #8
   13f98:	ldr	r1, [pc, #148]	; 14034 <table_cell_from_buffer@@Base+0x58c>
   13f9c:	mov	r0, r4
   13fa0:	bl	11ac0 <__isoc99_sscanf@plt>
   13fa4:	cmp	r0, #1
   13fa8:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13fac:	ldrb	r3, [sp, #8]
   13fb0:	mov	r2, r5
   13fb4:	mov	r1, r7
   13fb8:	mov	r0, r6
   13fbc:	bl	13784 <table_set_uchar@@Base>
   13fc0:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13fc4:	add	r2, sp, #8
   13fc8:	ldr	r1, [pc, #104]	; 14038 <table_cell_from_buffer@@Base+0x590>
   13fcc:	mov	r0, r4
   13fd0:	bl	11ac0 <__isoc99_sscanf@plt>
   13fd4:	cmp	r0, #1
   13fd8:	bne	13ff4 <table_cell_from_buffer@@Base+0x54c>
   13fdc:	mov	r2, r5
   13fe0:	mov	r1, r7
   13fe4:	ldr	r3, [sp, #8]
   13fe8:	mov	r0, r6
   13fec:	bl	137a4 <table_set_ptr@@Base>
   13ff0:	b	13b60 <table_cell_from_buffer@@Base+0xb8>
   13ff4:	mvn	r4, #0
   13ff8:	b	13f58 <table_cell_from_buffer@@Base+0x4b0>
   13ffc:	andeq	r4, r1, r8, lsl #4
   14000:	andeq	r4, r1, fp, lsl #4
   14004:	andeq	r4, r1, ip, lsr r2
   14008:	andeq	r4, r1, r1, asr #4
   1400c:	andeq	r4, r1, r8, lsl r2
   14010:	andeq	r4, r1, ip, lsl r2
   14014:	andeq	r4, r1, lr, lsl #4
   14018:	andeq	r4, r1, r3, lsl r2
   1401c:	andeq	r4, r1, r0, lsr #4
   14020:	andeq	r4, r1, r4, lsr #4
   14024:	andeq	r4, r1, r8, lsr #4
   14028:	andeq	r4, r1, fp, lsr #4
   1402c:	andeq	r4, r1, lr, lsr #4
   14030:	andeq	r4, r1, r2, lsr r2
   14034:	andeq	r4, r1, r6, lsr r2
   14038:	andeq	r4, r1, r9, lsr r2

0001403c <table_get_cell_ptr@@Base>:
   1403c:	push	{r4, lr}
   14040:	mov	r4, r2
   14044:	bl	131e0 <table_get_row_ptr@@Base>
   14048:	ldr	r0, [r0]
   1404c:	add	r0, r0, r4, lsl #2
   14050:	pop	{r4, pc}

00014054 <table_cell_init@@Base>:
   14054:	push	{r4, lr}
   14058:	bl	1403c <table_get_cell_ptr@@Base>
   1405c:	mov	r3, #0
   14060:	str	r3, [r0]
   14064:	pop	{r4, pc}

00014068 <table_cell_destroy@@Base>:
   14068:	push	{r4, r5, r6, lr}
   1406c:	mov	r6, r1
   14070:	mov	r1, r2
   14074:	mov	r5, r0
   14078:	mov	r4, r2
   1407c:	bl	12580 <table_get_column_data_type@@Base>
   14080:	cmp	r0, #23
   14084:	popeq	{r4, r5, r6, pc}
   14088:	mov	r2, r4
   1408c:	mov	r1, r6
   14090:	mov	r0, r5
   14094:	bl	1403c <table_get_cell_ptr@@Base>
   14098:	ldr	r0, [r0]
   1409c:	cmp	r0, #0
   140a0:	popeq	{r4, r5, r6, pc}
   140a4:	pop	{r4, r5, r6, lr}
   140a8:	b	11a60 <free@plt>

000140ac <table_cell_nullify@@Base>:
   140ac:	push	{r4, lr}
   140b0:	bl	1403c <table_get_cell_ptr@@Base>
   140b4:	mov	r4, r0
   140b8:	ldr	r0, [r0]
   140bc:	cmp	r0, #0
   140c0:	beq	140d0 <table_cell_nullify@@Base+0x24>
   140c4:	bl	11a60 <free@plt>
   140c8:	mov	r3, #0
   140cc:	str	r3, [r4]
   140d0:	mov	r0, #0
   140d4:	pop	{r4, pc}

000140d8 <__libc_csu_init@@Base>:
   140d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   140dc:	mov	r7, r0
   140e0:	ldr	r6, [pc, #72]	; 14130 <__libc_csu_init@@Base+0x58>
   140e4:	ldr	r5, [pc, #72]	; 14134 <__libc_csu_init@@Base+0x5c>
   140e8:	add	r6, pc, r6
   140ec:	add	r5, pc, r5
   140f0:	sub	r6, r6, r5
   140f4:	mov	r8, r1
   140f8:	mov	r9, r2
   140fc:	bl	11a28 <strcmp@plt-0x20>
   14100:	asrs	r6, r6, #2
   14104:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14108:	mov	r4, #0
   1410c:	add	r4, r4, #1
   14110:	ldr	r3, [r5], #4
   14114:	mov	r2, r9
   14118:	mov	r1, r8
   1411c:	mov	r0, r7
   14120:	blx	r3
   14124:	cmp	r6, r4
   14128:	bne	1410c <__libc_csu_init@@Base+0x34>
   1412c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14130:	andeq	r0, r1, r4, lsr #28
   14134:	andeq	r0, r1, ip, lsl lr

00014138 <__libc_csu_fini@@Base>:
   14138:	bx	lr

Disassembly of section .fini:

0001413c <.fini>:
   1413c:	push	{r3, lr}
   14140:	pop	{r3, pc}
