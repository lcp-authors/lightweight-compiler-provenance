
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	andeq	r5, r1, r0, lsr r7
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	ldrdeq	r5, [r1], -r0
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	add	r4, sp, #8
   12198:	mov	r6, r0
   1219c:	mov	r0, r4
   121a0:	bl	12358 <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	14b40 <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	ldr	r0, [pc, #300]	; 122ec <main@@Base+0x18c>
   121bc:	mov	r1, r5
   121c0:	add	r0, pc, r0
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14b04 <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	ldr	r0, [pc, #256]	; 122f0 <main@@Base+0x190>
   121ec:	mov	r1, r6
   121f0:	add	r0, pc, r0
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	14b7c <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	ldr	r0, [pc, #216]	; 122f4 <main@@Base+0x194>
   12218:	mov	r1, r5
   1221c:	mov	r2, r6
   12220:	add	r0, pc, r0
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	13a70 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	14b40 <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	ldr	r0, [pc, #160]	; 122f8 <main@@Base+0x198>
   12254:	mov	r1, r5
   12258:	add	r0, pc, r0
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	ldr	r1, [pc, #144]	; 122fc <main@@Base+0x19c>
   12268:	add	r7, sp, #8
   1226c:	mov	r2, #0
   12270:	mov	r0, r7
   12274:	add	r1, pc, r1
   12278:	bl	12dcc <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14b04 <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	ldr	r0, [pc, #100]	; 12300 <main@@Base+0x1a0>
   12298:	mov	r1, r6
   1229c:	add	r0, pc, r0
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	14b7c <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	ldr	r0, [pc, #60]	; 12304 <main@@Base+0x1a4>
   122c4:	mov	r1, r5
   122c8:	mov	r2, r6
   122cc:	add	r0, pc, r0
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	123b4 <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}
   122ec:	andeq	r3, r0, r8, ror r5
   122f0:	andeq	r3, r0, r3, ror #10
   122f4:	andeq	r3, r0, r1, asr r5
   122f8:	andeq	r3, r0, r9, lsr r5
   122fc:	andeq	r3, r0, r7, ror #10
   12300:	andeq	r3, r0, ip, lsl #10
   12304:	strdeq	r3, [r0], -r6

00012308 <table_new@@Base>:
   12308:	push	{fp, lr}
   1230c:	mov	fp, sp
   12310:	mov	r0, #56	; 0x38
   12314:	bl	12004 <malloc@plt>
   12318:	mov	r1, #0
   1231c:	mov	r2, #10
   12320:	mov	r3, #20
   12324:	vmov.i32	q8, #0	; 0x00000000
   12328:	str	r1, [r0]
   1232c:	stmib	r0, {r1, r2}
   12330:	str	r1, [r0, #12]
   12334:	str	r1, [r0, #16]
   12338:	str	r1, [r0, #20]
   1233c:	str	r3, [r0, #24]
   12340:	str	r1, [r0, #28]
   12344:	str	r2, [r0, #48]	; 0x30
   12348:	str	r1, [r0, #52]	; 0x34
   1234c:	add	r1, r0, #32
   12350:	vst1.32	{d16-d17}, [r1]
   12354:	pop	{fp, pc}

00012358 <table_init@@Base>:
   12358:	mov	r1, #0
   1235c:	mov	r2, #10
   12360:	mov	r3, #20
   12364:	vmov.i32	q8, #0	; 0x00000000
   12368:	str	r1, [r0]
   1236c:	stmib	r0, {r1, r2}
   12370:	str	r1, [r0, #12]
   12374:	str	r1, [r0, #16]
   12378:	str	r1, [r0, #20]
   1237c:	str	r3, [r0, #24]
   12380:	str	r1, [r0, #28]
   12384:	str	r2, [r0, #48]	; 0x30
   12388:	str	r1, [r0, #52]	; 0x34
   1238c:	add	r0, r0, #32
   12390:	vst1.32	{d16-d17}, [r0]
   12394:	bx	lr

00012398 <table_delete@@Base>:
   12398:	push	{r4, sl, fp, lr}
   1239c:	add	fp, sp, #8
   123a0:	mov	r4, r0
   123a4:	bl	123b4 <table_destroy@@Base>
   123a8:	mov	r0, r4
   123ac:	pop	{r4, sl, fp, lr}
   123b0:	b	11fd4 <free@plt>

000123b4 <table_destroy@@Base>:
   123b4:	cmp	r0, #0
   123b8:	bxeq	lr
   123bc:	push	{r4, r5, r6, sl, fp, lr}
   123c0:	add	fp, sp, #16
   123c4:	mvn	r1, #0
   123c8:	mvn	r2, #0
   123cc:	mov	r3, #64	; 0x40
   123d0:	mov	r4, r0
   123d4:	bl	12c50 <table_notify@@Base>
   123d8:	mov	r0, r4
   123dc:	bl	13a68 <table_get_row_length@@Base>
   123e0:	cmp	r0, #1
   123e4:	blt	12408 <table_destroy@@Base+0x54>
   123e8:	mov	r5, r0
   123ec:	mov	r6, #0
   123f0:	mov	r0, r4
   123f4:	mov	r1, r6
   123f8:	bl	13a10 <table_row_destroy@@Base>
   123fc:	add	r6, r6, #1
   12400:	cmp	r5, r6
   12404:	bne	123f0 <table_destroy@@Base+0x3c>
   12408:	ldr	r0, [r4, #16]
   1240c:	cmp	r0, #0
   12410:	beq	12418 <table_destroy@@Base+0x64>
   12414:	bl	11fd4 <free@plt>
   12418:	mov	r0, r4
   1241c:	bl	12d44 <table_get_column_length@@Base>
   12420:	cmp	r0, #1
   12424:	blt	12448 <table_destroy@@Base+0x94>
   12428:	mov	r5, r0
   1242c:	mov	r6, #0
   12430:	mov	r0, r4
   12434:	mov	r1, r6
   12438:	bl	12d2c <table_column_destroy@@Base>
   1243c:	add	r6, r6, #1
   12440:	cmp	r5, r6
   12444:	bne	12430 <table_destroy@@Base+0x7c>
   12448:	ldr	r0, [r4]
   1244c:	cmp	r0, #0
   12450:	beq	12458 <table_destroy@@Base+0xa4>
   12454:	bl	11fd4 <free@plt>
   12458:	ldr	r0, [r4, #36]	; 0x24
   1245c:	cmp	r0, #0
   12460:	beq	12468 <table_destroy@@Base+0xb4>
   12464:	bl	11fd4 <free@plt>
   12468:	ldr	r0, [r4, #40]	; 0x28
   1246c:	cmp	r0, #0
   12470:	beq	12478 <table_destroy@@Base+0xc4>
   12474:	bl	11fd4 <free@plt>
   12478:	ldr	r0, [r4, #44]	; 0x2c
   1247c:	cmp	r0, #0
   12480:	pop	{r4, r5, r6, sl, fp, lr}
   12484:	beq	1248c <table_destroy@@Base+0xd8>
   12488:	b	11fd4 <free@plt>
   1248c:	bx	lr

00012490 <table_dupe@@Base>:
   12490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12494:	add	fp, sp, #28
   12498:	sub	sp, sp, #12
   1249c:	mov	r4, r0
   124a0:	bl	13a68 <table_get_row_length@@Base>
   124a4:	mov	r8, r0
   124a8:	mov	r0, r4
   124ac:	bl	12d44 <table_get_column_length@@Base>
   124b0:	mov	r6, r0
   124b4:	mov	r0, #56	; 0x38
   124b8:	bl	12004 <malloc@plt>
   124bc:	mov	sl, r0
   124c0:	mov	r5, #0
   124c4:	mov	r0, #10
   124c8:	mov	r1, #20
   124cc:	cmp	r6, #1
   124d0:	vmov.i32	q8, #0	; 0x00000000
   124d4:	str	r5, [sl]
   124d8:	str	r5, [sl, #4]
   124dc:	str	r0, [sl, #8]
   124e0:	str	r5, [sl, #12]
   124e4:	str	r5, [sl, #16]
   124e8:	str	r5, [sl, #20]
   124ec:	str	r1, [sl, #24]
   124f0:	str	r5, [sl, #28]
   124f4:	str	r0, [sl, #48]	; 0x30
   124f8:	add	r0, sl, #32
   124fc:	str	r5, [sl, #52]	; 0x34
   12500:	vst1.32	{d16-d17}, [r0]
   12504:	blt	12540 <table_dupe@@Base+0xb0>
   12508:	mov	r0, r4
   1250c:	mov	r1, r5
   12510:	bl	12da8 <table_get_column_name@@Base>
   12514:	mov	r7, r0
   12518:	mov	r0, r4
   1251c:	mov	r1, r5
   12520:	bl	12db8 <table_get_column_data_type@@Base>
   12524:	mov	r2, r0
   12528:	mov	r0, sl
   1252c:	mov	r1, r7
   12530:	bl	12dcc <table_add_column@@Base>
   12534:	add	r5, r5, #1
   12538:	cmp	r6, r5
   1253c:	bne	12508 <table_dupe@@Base+0x78>
   12540:	cmp	r8, #1
   12544:	blt	129b0 <table_dupe@@Base+0x520>
   12548:	mov	r5, #0
   1254c:	add	r9, sp, #8
   12550:	mov	r0, sl
   12554:	bl	13a70 <table_add_row@@Base>
   12558:	cmp	r6, #1
   1255c:	blt	129a4 <table_dupe@@Base+0x514>
   12560:	mov	r7, #0
   12564:	mov	r0, r4
   12568:	mov	r1, r7
   1256c:	bl	12db8 <table_get_column_data_type@@Base>
   12570:	cmp	r0, #23
   12574:	bhi	12998 <table_dupe@@Base+0x508>
   12578:	add	r1, pc, #4
   1257c:	ldr	r0, [r1, r0, lsl #2]
   12580:	add	pc, r1, r0
   12584:	andeq	r0, r0, r0, rrx
   12588:	andeq	r0, r0, r8, lsl #1
   1258c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12590:	ldrdeq	r0, [r0], -r8
   12594:	andeq	r0, r0, r0, lsl #2
   12598:	andeq	r0, r0, r8, lsr #2
   1259c:	andeq	r0, r0, r0, asr r1
   125a0:	andeq	r0, r0, r8, ror r1
   125a4:	andeq	r0, r0, r0, lsr #3
   125a8:	andeq	r0, r0, r8, asr #3
   125ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   125b0:	andeq	r0, r0, r8, lsl r2
   125b4:	andeq	r0, r0, r0, asr #4
   125b8:	andeq	r0, r0, r8, ror #4
   125bc:	muleq	r0, r0, r2
   125c0:			; <UNDEFINED> instruction: 0x000002b8
   125c4:	andeq	r0, r0, r0, ror #5
   125c8:	andeq	r0, r0, r4, lsl #6
   125cc:	andeq	r0, r0, r8, lsr #6
   125d0:	andeq	r0, r0, ip, asr #6
   125d4:	andeq	r0, r0, r4, ror r3
   125d8:	muleq	r0, ip, r3
   125dc:	andeq	r0, r0, r4, asr #7
   125e0:	andeq	r0, r0, ip, ror #7
   125e4:	mov	r0, r4
   125e8:	mov	r1, r5
   125ec:	mov	r2, r7
   125f0:	bl	137c0 <table_get_int@@Base>
   125f4:	mov	r3, r0
   125f8:	mov	r0, sl
   125fc:	mov	r1, r5
   12600:	mov	r2, r7
   12604:	bl	13fcc <table_set_int@@Base>
   12608:	b	12998 <table_dupe@@Base+0x508>
   1260c:	mov	r0, r4
   12610:	mov	r1, r5
   12614:	mov	r2, r7
   12618:	bl	137d8 <table_get_uint@@Base>
   1261c:	mov	r3, r0
   12620:	mov	r0, sl
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	1404c <table_set_uint@@Base>
   12630:	b	12998 <table_dupe@@Base+0x508>
   12634:	mov	r0, r4
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	137f0 <table_get_int8@@Base>
   12644:	mov	r3, r0
   12648:	mov	r0, sl
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	140cc <table_set_int8@@Base>
   12658:	b	12998 <table_dupe@@Base+0x508>
   1265c:	mov	r0, r4
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	13808 <table_get_uint8@@Base>
   1266c:	mov	r3, r0
   12670:	mov	r0, sl
   12674:	mov	r1, r5
   12678:	mov	r2, r7
   1267c:	bl	1414c <table_set_uint8@@Base>
   12680:	b	12998 <table_dupe@@Base+0x508>
   12684:	mov	r0, r4
   12688:	mov	r1, r5
   1268c:	mov	r2, r7
   12690:	bl	13820 <table_get_int16@@Base>
   12694:	mov	r3, r0
   12698:	mov	r0, sl
   1269c:	mov	r1, r5
   126a0:	mov	r2, r7
   126a4:	bl	141cc <table_set_int16@@Base>
   126a8:	b	12998 <table_dupe@@Base+0x508>
   126ac:	mov	r0, r4
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	13838 <table_get_uint16@@Base>
   126bc:	mov	r3, r0
   126c0:	mov	r0, sl
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	1424c <table_set_uint16@@Base>
   126d0:	b	12998 <table_dupe@@Base+0x508>
   126d4:	mov	r0, r4
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	13850 <table_get_int32@@Base>
   126e4:	mov	r3, r0
   126e8:	mov	r0, sl
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	142cc <table_set_int32@@Base>
   126f8:	b	12998 <table_dupe@@Base+0x508>
   126fc:	mov	r0, r4
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	13868 <table_get_uint32@@Base>
   1270c:	mov	r3, r0
   12710:	mov	r0, sl
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	1434c <table_set_uint32@@Base>
   12720:	b	12998 <table_dupe@@Base+0x508>
   12724:	mov	r0, r4
   12728:	mov	r1, r5
   1272c:	mov	r2, r7
   12730:	bl	13880 <table_get_int64@@Base>
   12734:	stm	sp, {r0, r1}
   12738:	mov	r0, sl
   1273c:	mov	r1, r5
   12740:	mov	r2, r7
   12744:	bl	143cc <table_set_int64@@Base>
   12748:	b	12998 <table_dupe@@Base+0x508>
   1274c:	mov	r0, r4
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	13898 <table_get_uint64@@Base>
   1275c:	stm	sp, {r0, r1}
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	14454 <table_set_uint64@@Base>
   12770:	b	12998 <table_dupe@@Base+0x508>
   12774:	mov	r0, r4
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	138b0 <table_get_short@@Base>
   12784:	mov	r3, r0
   12788:	mov	r0, sl
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	144dc <table_set_short@@Base>
   12798:	b	12998 <table_dupe@@Base+0x508>
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	138c8 <table_get_ushort@@Base>
   127ac:	mov	r3, r0
   127b0:	mov	r0, sl
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	1455c <table_set_ushort@@Base>
   127c0:	b	12998 <table_dupe@@Base+0x508>
   127c4:	mov	r0, r4
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	bl	138e0 <table_get_long@@Base>
   127d4:	mov	r3, r0
   127d8:	mov	r0, sl
   127dc:	mov	r1, r5
   127e0:	mov	r2, r7
   127e4:	bl	145dc <table_set_long@@Base>
   127e8:	b	12998 <table_dupe@@Base+0x508>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	138f8 <table_get_ulong@@Base>
   127fc:	mov	r3, r0
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	1465c <table_set_ulong@@Base>
   12810:	b	12998 <table_dupe@@Base+0x508>
   12814:	mov	r0, r4
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	13910 <table_get_llong@@Base>
   12824:	stm	sp, {r0, r1}
   12828:	mov	r0, sl
   1282c:	mov	r1, r5
   12830:	mov	r2, r7
   12834:	bl	146dc <table_set_llong@@Base>
   12838:	b	12998 <table_dupe@@Base+0x508>
   1283c:	mov	r0, r4
   12840:	mov	r1, r5
   12844:	mov	r2, r7
   12848:	bl	13928 <table_get_ullong@@Base>
   1284c:	stm	sp, {r0, r1}
   12850:	mov	r0, sl
   12854:	mov	r1, r5
   12858:	mov	r2, r7
   1285c:	bl	14764 <table_set_ullong@@Base>
   12860:	b	12998 <table_dupe@@Base+0x508>
   12864:	mov	r0, r4
   12868:	mov	r1, r5
   1286c:	mov	r2, r7
   12870:	bl	13940 <table_get_float@@Base>
   12874:	mov	r0, sl
   12878:	mov	r1, r5
   1287c:	mov	r2, r7
   12880:	bl	147ec <table_set_float@@Base>
   12884:	b	12998 <table_dupe@@Base+0x508>
   12888:	mov	r0, r4
   1288c:	mov	r1, r5
   12890:	mov	r2, r7
   12894:	bl	13958 <table_get_double@@Base>
   12898:	mov	r0, sl
   1289c:	mov	r1, r5
   128a0:	mov	r2, r7
   128a4:	bl	14878 <table_set_double@@Base>
   128a8:	b	12998 <table_dupe@@Base+0x508>
   128ac:	mov	r0, r4
   128b0:	mov	r1, r5
   128b4:	mov	r2, r7
   128b8:	bl	13970 <table_get_ldouble@@Base>
   128bc:	mov	r0, sl
   128c0:	mov	r1, r5
   128c4:	mov	r2, r7
   128c8:	bl	14900 <table_set_ldouble@@Base>
   128cc:	b	12998 <table_dupe@@Base+0x508>
   128d0:	mov	r0, r4
   128d4:	mov	r1, r5
   128d8:	mov	r2, r7
   128dc:	bl	13988 <table_get_char@@Base>
   128e0:	mov	r3, r0
   128e4:	mov	r0, sl
   128e8:	mov	r1, r5
   128ec:	mov	r2, r7
   128f0:	bl	149a8 <table_set_char@@Base>
   128f4:	b	12998 <table_dupe@@Base+0x508>
   128f8:	mov	r0, r4
   128fc:	mov	r1, r5
   12900:	mov	r2, r7
   12904:	bl	139a0 <table_get_uchar@@Base>
   12908:	mov	r3, r0
   1290c:	mov	r0, sl
   12910:	mov	r1, r5
   12914:	mov	r2, r7
   12918:	bl	14a28 <table_set_uchar@@Base>
   1291c:	b	12998 <table_dupe@@Base+0x508>
   12920:	mov	r0, r4
   12924:	mov	r1, r5
   12928:	mov	r2, r7
   1292c:	bl	139b8 <table_get_string@@Base>
   12930:	mov	r3, r0
   12934:	mov	r0, sl
   12938:	mov	r1, r5
   1293c:	mov	r2, r7
   12940:	bl	14988 <table_set_string@@Base>
   12944:	b	12998 <table_dupe@@Base+0x508>
   12948:	mov	r0, r4
   1294c:	mov	r1, r5
   12950:	mov	r2, r7
   12954:	bl	137a8 <table_get_bool@@Base>
   12958:	mov	r3, r0
   1295c:	mov	r0, sl
   12960:	mov	r1, r5
   12964:	mov	r2, r7
   12968:	bl	13f4c <table_set_bool@@Base>
   1296c:	b	12998 <table_dupe@@Base+0x508>
   12970:	mov	r0, r4
   12974:	mov	r1, r5
   12978:	mov	r2, r7
   1297c:	bl	139cc <table_get_ptr@@Base>
   12980:	str	r0, [sp, #8]
   12984:	mov	r0, sl
   12988:	mov	r1, r5
   1298c:	mov	r2, r7
   12990:	mov	r3, r9
   12994:	bl	14aa8 <table_set_ptr@@Base>
   12998:	add	r7, r7, #1
   1299c:	cmp	r6, r7
   129a0:	bne	12564 <table_dupe@@Base+0xd4>
   129a4:	add	r5, r5, #1
   129a8:	cmp	r5, r8
   129ac:	bne	12550 <table_dupe@@Base+0xc0>
   129b0:	mov	r0, sl
   129b4:	sub	sp, fp, #28
   129b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000129bc <table_get_major_version@@Base>:
   129bc:	mov	r0, #0
   129c0:	bx	lr

000129c4 <table_get_minor_version@@Base>:
   129c4:	mov	r0, #0
   129c8:	bx	lr

000129cc <table_get_patch_version@@Base>:
   129cc:	mov	r0, #0
   129d0:	bx	lr

000129d4 <table_get_version@@Base>:
   129d4:	ldr	r0, [pc, #4]	; 129e0 <table_get_version@@Base+0xc>
   129d8:	add	r0, pc, r0
   129dc:	bx	lr
   129e0:	andeq	r2, r0, r6, lsr lr

000129e4 <table_get_callback_length@@Base>:
   129e4:	ldr	r0, [r0, #32]
   129e8:	bx	lr

000129ec <table_register_callback@@Base>:
   129ec:	push	{r4, r5, r6, r7, fp, lr}
   129f0:	add	fp, sp, #16
   129f4:	mov	r5, r0
   129f8:	ldr	r0, [r0, #32]
   129fc:	mov	r4, r3
   12a00:	mov	r6, r2
   12a04:	mov	r7, r1
   12a08:	cmp	r0, #1
   12a0c:	blt	12a40 <table_register_callback@@Base+0x54>
   12a10:	ldr	r2, [r5, #36]	; 0x24
   12a14:	mov	r1, #0
   12a18:	ldr	r3, [r2, r1, lsl #2]
   12a1c:	cmp	r3, r7
   12a20:	bne	12a34 <table_register_callback@@Base+0x48>
   12a24:	ldr	r3, [r5, #40]	; 0x28
   12a28:	ldr	r3, [r3, r1, lsl #2]
   12a2c:	cmp	r3, r6
   12a30:	beq	12ac4 <table_register_callback@@Base+0xd8>
   12a34:	add	r1, r1, #1
   12a38:	cmp	r1, r0
   12a3c:	blt	12a18 <table_register_callback@@Base+0x2c>
   12a40:	ldr	r1, [r5, #48]	; 0x30
   12a44:	udiv	r2, r0, r1
   12a48:	mls	r2, r2, r1, r0
   12a4c:	cmp	r2, #0
   12a50:	bne	12a9c <table_register_callback@@Base+0xb0>
   12a54:	ldr	r2, [r5, #52]	; 0x34
   12a58:	ldr	r0, [r5, #36]	; 0x24
   12a5c:	add	r1, r2, r1
   12a60:	str	r1, [r5, #52]	; 0x34
   12a64:	lsl	r1, r1, #2
   12a68:	bl	11fec <realloc@plt>
   12a6c:	str	r0, [r5, #36]	; 0x24
   12a70:	ldr	r1, [r5, #52]	; 0x34
   12a74:	ldr	r0, [r5, #40]	; 0x28
   12a78:	lsl	r1, r1, #2
   12a7c:	bl	11fec <realloc@plt>
   12a80:	str	r0, [r5, #40]	; 0x28
   12a84:	ldr	r1, [r5, #52]	; 0x34
   12a88:	ldr	r0, [r5, #44]	; 0x2c
   12a8c:	lsl	r1, r1, #2
   12a90:	bl	11fec <realloc@plt>
   12a94:	str	r0, [r5, #44]	; 0x2c
   12a98:	ldr	r0, [r5, #32]
   12a9c:	ldr	r1, [r5, #36]	; 0x24
   12aa0:	str	r7, [r1, r0, lsl #2]
   12aa4:	ldr	r1, [r5, #40]	; 0x28
   12aa8:	str	r6, [r1, r0, lsl #2]
   12aac:	ldr	r1, [r5, #44]	; 0x2c
   12ab0:	str	r4, [r1, r0, lsl #2]
   12ab4:	ldr	r0, [r5, #32]
   12ab8:	add	r0, r0, #1
   12abc:	str	r0, [r5, #32]
   12ac0:	pop	{r4, r5, r6, r7, fp, pc}
   12ac4:	cmp	r1, #0
   12ac8:	ldrne	r0, [r5, #44]	; 0x2c
   12acc:	ldrne	r2, [r0, r1, lsl #2]
   12ad0:	orrne	r2, r2, r4
   12ad4:	strne	r2, [r0, r1, lsl #2]
   12ad8:	popne	{r4, r5, r6, r7, fp, pc}
   12adc:	b	12a40 <table_register_callback@@Base+0x54>

00012ae0 <table_unregister_callback@@Base>:
   12ae0:	push	{r4, r5, r6, sl, fp, lr}
   12ae4:	add	fp, sp, #16
   12ae8:	ldr	r4, [r0, #32]
   12aec:	cmp	r4, #1
   12af0:	blt	12b28 <table_unregister_callback@@Base+0x48>
   12af4:	ldr	r3, [r0, #36]	; 0x24
   12af8:	mov	r6, r0
   12afc:	mov	r0, #0
   12b00:	ldr	r5, [r3, r0, lsl #2]
   12b04:	cmp	r5, r1
   12b08:	bne	12b1c <table_unregister_callback@@Base+0x3c>
   12b0c:	ldr	r5, [r6, #40]	; 0x28
   12b10:	ldr	r5, [r5, r0, lsl #2]
   12b14:	cmp	r5, r2
   12b18:	beq	12b2c <table_unregister_callback@@Base+0x4c>
   12b1c:	add	r0, r0, #1
   12b20:	cmp	r0, r4
   12b24:	blt	12b00 <table_unregister_callback@@Base+0x20>
   12b28:	pop	{r4, r5, r6, sl, fp, pc}
   12b2c:	sub	r1, r4, #1
   12b30:	cmp	r0, r1
   12b34:	bge	12bc4 <table_unregister_callback@@Base+0xe4>
   12b38:	add	r1, r3, r0, lsl #2
   12b3c:	ldr	r1, [r1, #4]
   12b40:	str	r1, [r3, r0, lsl #2]
   12b44:	ldr	r1, [r6, #40]	; 0x28
   12b48:	add	r2, r1, r0, lsl #2
   12b4c:	ldr	r2, [r2, #4]
   12b50:	str	r2, [r1, r0, lsl #2]
   12b54:	ldr	r1, [r6, #44]	; 0x2c
   12b58:	add	r2, r1, r0, lsl #2
   12b5c:	ldr	r2, [r2, #4]
   12b60:	str	r2, [r1, r0, lsl #2]
   12b64:	add	r2, r0, #1
   12b68:	ldr	r1, [r6, #32]
   12b6c:	sub	r1, r1, #1
   12b70:	cmp	r2, r1
   12b74:	bge	12bc4 <table_unregister_callback@@Base+0xe4>
   12b78:	ldr	r1, [r6, #36]	; 0x24
   12b7c:	add	r1, r1, r0, lsl #2
   12b80:	ldr	r2, [r1, #8]
   12b84:	str	r2, [r1, #4]
   12b88:	ldr	r1, [r6, #40]	; 0x28
   12b8c:	add	r1, r1, r0, lsl #2
   12b90:	ldr	r2, [r1, #8]
   12b94:	str	r2, [r1, #4]
   12b98:	ldr	r1, [r6, #44]	; 0x2c
   12b9c:	add	r1, r1, r0, lsl #2
   12ba0:	ldr	r2, [r1, #8]
   12ba4:	str	r2, [r1, #4]
   12ba8:	add	r2, r0, #1
   12bac:	add	r0, r0, #2
   12bb0:	ldr	r1, [r6, #32]
   12bb4:	sub	r1, r1, #1
   12bb8:	cmp	r0, r1
   12bbc:	mov	r0, r2
   12bc0:	blt	12b78 <table_unregister_callback@@Base+0x98>
   12bc4:	str	r1, [r6, #32]
   12bc8:	ldr	r2, [r6, #48]	; 0x30
   12bcc:	udiv	r0, r1, r2
   12bd0:	mls	r0, r0, r2, r1
   12bd4:	cmp	r0, #0
   12bd8:	popne	{r4, r5, r6, sl, fp, pc}
   12bdc:	ldr	r1, [r6, #52]	; 0x34
   12be0:	ldr	r0, [r6, #36]	; 0x24
   12be4:	subs	r1, r1, r2
   12be8:	str	r1, [r6, #52]	; 0x34
   12bec:	beq	12c28 <table_unregister_callback@@Base+0x148>
   12bf0:	lsl	r1, r1, #2
   12bf4:	bl	11fec <realloc@plt>
   12bf8:	str	r0, [r6, #36]	; 0x24
   12bfc:	ldr	r1, [r6, #52]	; 0x34
   12c00:	ldr	r0, [r6, #40]	; 0x28
   12c04:	lsl	r1, r1, #2
   12c08:	bl	11fec <realloc@plt>
   12c0c:	str	r0, [r6, #40]	; 0x28
   12c10:	ldr	r1, [r6, #52]	; 0x34
   12c14:	ldr	r0, [r6, #44]	; 0x2c
   12c18:	lsl	r1, r1, #2
   12c1c:	bl	11fec <realloc@plt>
   12c20:	str	r0, [r6, #44]	; 0x2c
   12c24:	pop	{r4, r5, r6, sl, fp, pc}
   12c28:	bl	11fd4 <free@plt>
   12c2c:	ldr	r0, [r6, #40]	; 0x28
   12c30:	bl	11fd4 <free@plt>
   12c34:	ldr	r0, [r6, #44]	; 0x2c
   12c38:	bl	11fd4 <free@plt>
   12c3c:	mov	r0, #0
   12c40:	str	r0, [r6, #36]	; 0x24
   12c44:	str	r0, [r6, #40]	; 0x28
   12c48:	str	r0, [r6, #44]	; 0x2c
   12c4c:	pop	{r4, r5, r6, sl, fp, pc}

00012c50 <table_notify@@Base>:
   12c50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c54:	add	fp, sp, #24
   12c58:	sub	sp, sp, #8
   12c5c:	mov	r7, r0
   12c60:	ldr	r0, [r0, #32]
   12c64:	cmp	r0, #1
   12c68:	blt	12cc4 <table_notify@@Base+0x74>
   12c6c:	mov	r4, r3
   12c70:	mov	r8, r2
   12c74:	mov	r9, r1
   12c78:	mov	r5, #0
   12c7c:	ldr	r1, [r7, #44]	; 0x2c
   12c80:	ldr	r1, [r1, r5, lsl #2]
   12c84:	tst	r1, r4
   12c88:	beq	12cb8 <table_notify@@Base+0x68>
   12c8c:	ldr	r0, [r7, #36]	; 0x24
   12c90:	ldr	r1, [r7, #40]	; 0x28
   12c94:	mov	r2, r8
   12c98:	mov	r3, r4
   12c9c:	ldr	r6, [r0, r5, lsl #2]
   12ca0:	ldr	r0, [r1, r5, lsl #2]
   12ca4:	mov	r1, r9
   12ca8:	str	r0, [sp]
   12cac:	mov	r0, r7
   12cb0:	blx	r6
   12cb4:	ldr	r0, [r7, #32]
   12cb8:	add	r5, r5, #1
   12cbc:	cmp	r5, r0
   12cc0:	blt	12c7c <table_notify@@Base+0x2c>
   12cc4:	sub	sp, fp, #24
   12cc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ccc <table_column_init@@Base>:
   12ccc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cd0:	add	fp, sp, #24
   12cd4:	ldr	r7, [r0]
   12cd8:	mov	r0, r2
   12cdc:	mov	r4, r3
   12ce0:	mov	r5, r2
   12ce4:	mov	r6, r1
   12ce8:	bl	12028 <strlen@plt>
   12cec:	add	r0, r0, #1
   12cf0:	bl	12004 <malloc@plt>
   12cf4:	ldr	r8, [fp, #8]
   12cf8:	add	r6, r6, r6, lsl #1
   12cfc:	cmp	r0, #0
   12d00:	str	r0, [r7, r6, lsl #2]
   12d04:	beq	12d10 <table_column_init@@Base+0x44>
   12d08:	mov	r1, r5
   12d0c:	bl	11ff8 <strcpy@plt>
   12d10:	add	r0, r7, r6, lsl #2
   12d14:	stmib	r0, {r4, r8}
   12d18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012d1c <table_get_col_ptr@@Base>:
   12d1c:	ldr	r0, [r0]
   12d20:	add	r1, r1, r1, lsl #1
   12d24:	add	r0, r0, r1, lsl #2
   12d28:	bx	lr

00012d2c <table_column_destroy@@Base>:
   12d2c:	ldr	r0, [r0]
   12d30:	add	r1, r1, r1, lsl #1
   12d34:	ldr	r0, [r0, r1, lsl #2]
   12d38:	cmp	r0, #0
   12d3c:	bxeq	lr
   12d40:	b	11fd4 <free@plt>

00012d44 <table_get_column_length@@Base>:
   12d44:	ldr	r0, [r0, #4]
   12d48:	bx	lr

00012d4c <table_get_column@@Base>:
   12d4c:	push	{r4, r5, r6, r7, fp, lr}
   12d50:	add	fp, sp, #16
   12d54:	ldr	r6, [r0, #4]
   12d58:	cmp	r6, #1
   12d5c:	blt	12d94 <table_get_column@@Base+0x48>
   12d60:	ldr	r7, [r0]
   12d64:	mov	r5, r1
   12d68:	mov	r4, #0
   12d6c:	ldr	r0, [r7]
   12d70:	mov	r1, r5
   12d74:	bl	11fbc <strcmp@plt>
   12d78:	cmp	r0, #0
   12d7c:	beq	12d98 <table_get_column@@Base+0x4c>
   12d80:	add	r4, r4, #1
   12d84:	add	r7, r7, #12
   12d88:	cmp	r4, r6
   12d8c:	blt	12d6c <table_get_column@@Base+0x20>
   12d90:	b	12d98 <table_get_column@@Base+0x4c>
   12d94:	mov	r4, #0
   12d98:	cmp	r4, r6
   12d9c:	mvneq	r4, #0
   12da0:	mov	r0, r4
   12da4:	pop	{r4, r5, r6, r7, fp, pc}

00012da8 <table_get_column_name@@Base>:
   12da8:	ldr	r0, [r0]
   12dac:	add	r1, r1, r1, lsl #1
   12db0:	ldr	r0, [r0, r1, lsl #2]
   12db4:	bx	lr

00012db8 <table_get_column_data_type@@Base>:
   12db8:	ldr	r0, [r0]
   12dbc:	add	r1, r1, r1, lsl #1
   12dc0:	add	r0, r0, r1, lsl #2
   12dc4:	ldr	r0, [r0, #4]
   12dc8:	bx	lr

00012dcc <table_add_column@@Base>:
   12dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dd0:	add	fp, sp, #28
   12dd4:	sub	sp, sp, #4
   12dd8:	mov	r4, r0
   12ddc:	mov	r8, r1
   12de0:	ldr	r0, [r0, #4]
   12de4:	mov	r9, r2
   12de8:	ldr	r1, [r4, #8]
   12dec:	udiv	r2, r0, r1
   12df0:	mls	r0, r2, r1, r0
   12df4:	cmp	r0, #0
   12df8:	bne	12e64 <table_add_column@@Base+0x98>
   12dfc:	ldr	r2, [r4, #12]
   12e00:	ldr	r0, [r4]
   12e04:	add	r1, r2, r1
   12e08:	str	r1, [r4, #12]
   12e0c:	add	r1, r1, r1, lsl #1
   12e10:	lsl	r1, r1, #2
   12e14:	bl	11fec <realloc@plt>
   12e18:	str	r0, [r4]
   12e1c:	mov	r0, r4
   12e20:	bl	13a68 <table_get_row_length@@Base>
   12e24:	cmp	r0, #1
   12e28:	blt	12e64 <table_add_column@@Base+0x98>
   12e2c:	mov	r6, r0
   12e30:	mov	r5, #0
   12e34:	mov	r0, r4
   12e38:	mov	r1, r5
   12e3c:	bl	13a04 <table_get_row_ptr@@Base>
   12e40:	ldr	r1, [r4, #12]
   12e44:	mov	r7, r0
   12e48:	ldr	r0, [r0]
   12e4c:	lsl	r1, r1, #2
   12e50:	bl	11fec <realloc@plt>
   12e54:	add	r5, r5, #1
   12e58:	str	r0, [r7]
   12e5c:	cmp	r6, r5
   12e60:	bne	12e34 <table_add_column@@Base+0x68>
   12e64:	mov	r0, r4
   12e68:	bl	13a68 <table_get_row_length@@Base>
   12e6c:	ldr	r6, [r4, #4]
   12e70:	mov	r7, r0
   12e74:	mov	r0, r9
   12e78:	bl	13778 <table_get_default_compare_function_for_data_type@@Base>
   12e7c:	ldr	r5, [r4]
   12e80:	mov	sl, r0
   12e84:	mov	r0, r8
   12e88:	bl	12028 <strlen@plt>
   12e8c:	add	r0, r0, #1
   12e90:	bl	12004 <malloc@plt>
   12e94:	mov	r1, r8
   12e98:	add	r8, r6, r6, lsl #1
   12e9c:	cmp	r0, #0
   12ea0:	str	r0, [r5, r8, lsl #2]
   12ea4:	beq	12eac <table_add_column@@Base+0xe0>
   12ea8:	bl	11ff8 <strcpy@plt>
   12eac:	add	r0, r5, r8, lsl #2
   12eb0:	cmp	r7, #1
   12eb4:	stmib	r0, {r9, sl}
   12eb8:	blt	12edc <table_add_column@@Base+0x110>
   12ebc:	mov	r5, #0
   12ec0:	mov	r0, r4
   12ec4:	mov	r1, r5
   12ec8:	mov	r2, r6
   12ecc:	bl	14c08 <table_cell_init@@Base>
   12ed0:	add	r5, r5, #1
   12ed4:	cmp	r7, r5
   12ed8:	bne	12ec0 <table_add_column@@Base+0xf4>
   12edc:	ldr	r2, [r4, #4]
   12ee0:	mov	r0, r4
   12ee4:	mvn	r1, #0
   12ee8:	mov	r3, #8
   12eec:	bl	12c50 <table_notify@@Base>
   12ef0:	ldr	r0, [r4, #4]
   12ef4:	add	r1, r0, #1
   12ef8:	str	r1, [r4, #4]
   12efc:	sub	sp, fp, #28
   12f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012f04 <table_remove_column@@Base>:
   12f04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f08:	add	fp, sp, #24
   12f0c:	mov	r5, r0
   12f10:	ldr	r0, [r0]
   12f14:	add	r6, r1, r1, lsl #1
   12f18:	mov	r9, r1
   12f1c:	ldr	r0, [r0, r6, lsl #2]
   12f20:	cmp	r0, #0
   12f24:	beq	12f2c <table_remove_column@@Base+0x28>
   12f28:	bl	11fd4 <free@plt>
   12f2c:	ldr	r0, [r5, #4]
   12f30:	sub	r4, r0, #1
   12f34:	cmp	r4, r9
   12f38:	ble	12f68 <table_remove_column@@Base+0x64>
   12f3c:	sub	r0, r4, r9
   12f40:	lsl	r1, r6, #2
   12f44:	ldr	r2, [r5]
   12f48:	subs	r0, r0, #1
   12f4c:	add	r2, r2, r1
   12f50:	add	r1, r1, #12
   12f54:	vldr	d16, [r2, #12]
   12f58:	ldr	r3, [r2, #20]
   12f5c:	str	r3, [r2, #8]
   12f60:	vstr	d16, [r2]
   12f64:	bne	12f44 <table_remove_column@@Base+0x40>
   12f68:	mov	r0, r5
   12f6c:	bl	13a68 <table_get_row_length@@Base>
   12f70:	cmp	r0, #1
   12f74:	blt	12fd0 <table_remove_column@@Base+0xcc>
   12f78:	mov	r6, r0
   12f7c:	mov	r7, #0
   12f80:	mov	r0, r5
   12f84:	mov	r1, r7
   12f88:	mov	r2, r9
   12f8c:	bl	14c44 <table_cell_destroy@@Base>
   12f90:	mov	r0, r5
   12f94:	mov	r1, r7
   12f98:	bl	13a04 <table_get_row_ptr@@Base>
   12f9c:	cmp	r4, r9
   12fa0:	ble	12fc4 <table_remove_column@@Base+0xc0>
   12fa4:	mov	r1, r9
   12fa8:	ldr	r2, [r0]
   12fac:	add	r3, r2, r1, lsl #2
   12fb0:	ldr	r3, [r3, #4]
   12fb4:	str	r3, [r2, r1, lsl #2]
   12fb8:	add	r1, r1, #1
   12fbc:	cmp	r4, r1
   12fc0:	bne	12fa8 <table_remove_column@@Base+0xa4>
   12fc4:	add	r7, r7, #1
   12fc8:	cmp	r7, r6
   12fcc:	bne	12f80 <table_remove_column@@Base+0x7c>
   12fd0:	ldmib	r5, {r0, r1}
   12fd4:	sub	r0, r0, #1
   12fd8:	udiv	r2, r0, r1
   12fdc:	str	r0, [r5, #4]
   12fe0:	mls	r0, r2, r1, r0
   12fe4:	cmp	r0, #0
   12fe8:	bne	13054 <table_remove_column@@Base+0x150>
   12fec:	ldr	r2, [r5, #12]
   12ff0:	ldr	r0, [r5]
   12ff4:	sub	r1, r2, r1
   12ff8:	str	r1, [r5, #12]
   12ffc:	add	r1, r1, r1, lsl #1
   13000:	lsl	r1, r1, #2
   13004:	bl	11fec <realloc@plt>
   13008:	str	r0, [r5]
   1300c:	mov	r0, r5
   13010:	bl	13a68 <table_get_row_length@@Base>
   13014:	cmp	r0, #1
   13018:	blt	13054 <table_remove_column@@Base+0x150>
   1301c:	mov	r8, r0
   13020:	mov	r7, #0
   13024:	mov	r0, r5
   13028:	mov	r1, r7
   1302c:	bl	13a04 <table_get_row_ptr@@Base>
   13030:	ldr	r1, [r5, #12]
   13034:	mov	r6, r0
   13038:	ldr	r0, [r0]
   1303c:	lsl	r1, r1, #2
   13040:	bl	11fec <realloc@plt>
   13044:	add	r7, r7, #1
   13048:	str	r0, [r6]
   1304c:	cmp	r8, r7
   13050:	bne	13024 <table_remove_column@@Base+0x120>
   13054:	mov	r0, r5
   13058:	mvn	r1, #0
   1305c:	mov	r2, r9
   13060:	mov	r3, #16
   13064:	bl	12c50 <table_notify@@Base>
   13068:	mov	r0, #0
   1306c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013070 <table_get_column_compare_function@@Base>:
   13070:	ldr	r0, [r0]
   13074:	add	r1, r1, r1, lsl #1
   13078:	add	r0, r0, r1, lsl #2
   1307c:	ldr	r0, [r0, #8]
   13080:	bx	lr

00013084 <table_set_column_compare_function@@Base>:
   13084:	ldr	r0, [r0]
   13088:	add	r1, r1, r1, lsl #1
   1308c:	add	r0, r0, r1, lsl #2
   13090:	str	r2, [r0, #8]
   13094:	bx	lr

00013098 <table_compare_bool@@Base>:
   13098:	cmp	r0, #0
   1309c:	beq	130d0 <table_compare_bool@@Base+0x38>
   130a0:	cmp	r1, #0
   130a4:	moveq	r1, #1
   130a8:	moveq	r0, r1
   130ac:	bxeq	lr
   130b0:	ldrb	r2, [r1]
   130b4:	ldrb	r0, [r0]
   130b8:	mov	r1, #0
   130bc:	cmp	r0, r2
   130c0:	mvncc	r1, #0
   130c4:	movwhi	r1, #1
   130c8:	mov	r0, r1
   130cc:	bx	lr
   130d0:	cmp	r1, #0
   130d4:	mvnne	r1, #0
   130d8:	mov	r0, r1
   130dc:	bx	lr

000130e0 <table_compare_int@@Base>:
   130e0:	cmp	r0, #0
   130e4:	beq	13118 <table_compare_int@@Base+0x38>
   130e8:	cmp	r1, #0
   130ec:	moveq	r1, #1
   130f0:	moveq	r0, r1
   130f4:	bxeq	lr
   130f8:	ldr	r2, [r1]
   130fc:	ldr	r0, [r0]
   13100:	mov	r1, #0
   13104:	cmp	r0, r2
   13108:	mvnlt	r1, #0
   1310c:	movwgt	r1, #1
   13110:	mov	r0, r1
   13114:	bx	lr
   13118:	cmp	r1, #0
   1311c:	mvnne	r1, #0
   13120:	mov	r0, r1
   13124:	bx	lr

00013128 <table_compare_uint@@Base>:
   13128:	cmp	r0, #0
   1312c:	beq	13160 <table_compare_uint@@Base+0x38>
   13130:	cmp	r1, #0
   13134:	moveq	r1, #1
   13138:	moveq	r0, r1
   1313c:	bxeq	lr
   13140:	ldr	r2, [r1]
   13144:	ldr	r0, [r0]
   13148:	mov	r1, #0
   1314c:	cmp	r0, r2
   13150:	mvncc	r1, #0
   13154:	movwhi	r1, #1
   13158:	mov	r0, r1
   1315c:	bx	lr
   13160:	cmp	r1, #0
   13164:	mvnne	r1, #0
   13168:	mov	r0, r1
   1316c:	bx	lr

00013170 <table_compare_int8@@Base>:
   13170:	cmp	r0, #0
   13174:	beq	131a8 <table_compare_int8@@Base+0x38>
   13178:	cmp	r1, #0
   1317c:	moveq	r1, #1
   13180:	moveq	r0, r1
   13184:	bxeq	lr
   13188:	ldrsb	r2, [r1]
   1318c:	ldrsb	r0, [r0]
   13190:	mov	r1, #0
   13194:	cmp	r0, r2
   13198:	mvnlt	r1, #0
   1319c:	movwgt	r1, #1
   131a0:	mov	r0, r1
   131a4:	bx	lr
   131a8:	cmp	r1, #0
   131ac:	mvnne	r1, #0
   131b0:	mov	r0, r1
   131b4:	bx	lr

000131b8 <table_compare_uint8@@Base>:
   131b8:	cmp	r0, #0
   131bc:	beq	131f0 <table_compare_uint8@@Base+0x38>
   131c0:	cmp	r1, #0
   131c4:	moveq	r1, #1
   131c8:	moveq	r0, r1
   131cc:	bxeq	lr
   131d0:	ldrb	r2, [r1]
   131d4:	ldrb	r0, [r0]
   131d8:	mov	r1, #0
   131dc:	cmp	r0, r2
   131e0:	mvncc	r1, #0
   131e4:	movwhi	r1, #1
   131e8:	mov	r0, r1
   131ec:	bx	lr
   131f0:	cmp	r1, #0
   131f4:	mvnne	r1, #0
   131f8:	mov	r0, r1
   131fc:	bx	lr

00013200 <table_compare_int16@@Base>:
   13200:	cmp	r0, #0
   13204:	beq	13238 <table_compare_int16@@Base+0x38>
   13208:	cmp	r1, #0
   1320c:	moveq	r1, #1
   13210:	moveq	r0, r1
   13214:	bxeq	lr
   13218:	ldrsh	r2, [r1]
   1321c:	ldrsh	r0, [r0]
   13220:	mov	r1, #0
   13224:	cmp	r0, r2
   13228:	mvnlt	r1, #0
   1322c:	movwgt	r1, #1
   13230:	mov	r0, r1
   13234:	bx	lr
   13238:	cmp	r1, #0
   1323c:	mvnne	r1, #0
   13240:	mov	r0, r1
   13244:	bx	lr

00013248 <table_compare_uint16@@Base>:
   13248:	cmp	r0, #0
   1324c:	beq	13280 <table_compare_uint16@@Base+0x38>
   13250:	cmp	r1, #0
   13254:	moveq	r1, #1
   13258:	moveq	r0, r1
   1325c:	bxeq	lr
   13260:	ldrh	r2, [r1]
   13264:	ldrh	r0, [r0]
   13268:	mov	r1, #0
   1326c:	cmp	r0, r2
   13270:	mvncc	r1, #0
   13274:	movwhi	r1, #1
   13278:	mov	r0, r1
   1327c:	bx	lr
   13280:	cmp	r1, #0
   13284:	mvnne	r1, #0
   13288:	mov	r0, r1
   1328c:	bx	lr

00013290 <table_compare_int32@@Base>:
   13290:	cmp	r0, #0
   13294:	beq	132c8 <table_compare_int32@@Base+0x38>
   13298:	cmp	r1, #0
   1329c:	moveq	r1, #1
   132a0:	moveq	r0, r1
   132a4:	bxeq	lr
   132a8:	ldr	r2, [r1]
   132ac:	ldr	r0, [r0]
   132b0:	mov	r1, #0
   132b4:	cmp	r0, r2
   132b8:	mvnlt	r1, #0
   132bc:	movwgt	r1, #1
   132c0:	mov	r0, r1
   132c4:	bx	lr
   132c8:	cmp	r1, #0
   132cc:	mvnne	r1, #0
   132d0:	mov	r0, r1
   132d4:	bx	lr

000132d8 <table_compare_uint32@@Base>:
   132d8:	cmp	r0, #0
   132dc:	beq	13310 <table_compare_uint32@@Base+0x38>
   132e0:	cmp	r1, #0
   132e4:	moveq	r1, #1
   132e8:	moveq	r0, r1
   132ec:	bxeq	lr
   132f0:	ldr	r2, [r1]
   132f4:	ldr	r0, [r0]
   132f8:	mov	r1, #0
   132fc:	cmp	r0, r2
   13300:	mvncc	r1, #0
   13304:	movwhi	r1, #1
   13308:	mov	r0, r1
   1330c:	bx	lr
   13310:	cmp	r1, #0
   13314:	mvnne	r1, #0
   13318:	mov	r0, r1
   1331c:	bx	lr

00013320 <table_compare_int64@@Base>:
   13320:	cmp	r0, #0
   13324:	beq	13378 <table_compare_int64@@Base+0x58>
   13328:	cmp	r1, #0
   1332c:	moveq	r1, #1
   13330:	moveq	r0, r1
   13334:	bxeq	lr
   13338:	push	{r5, r7, fp, lr}
   1333c:	add	fp, sp, #8
   13340:	ldm	r1, {r2, r7}
   13344:	ldm	r0, {r0, r5}
   13348:	mov	r1, #0
   1334c:	subs	r3, r0, r2
   13350:	sbcs	r3, r5, r7
   13354:	movwlt	r1, #1
   13358:	cmp	r1, #0
   1335c:	mvnne	r1, #0
   13360:	subs	r0, r2, r0
   13364:	sbcs	r0, r7, r5
   13368:	movwlt	r1, #1
   1336c:	pop	{r5, r7, fp, lr}
   13370:	mov	r0, r1
   13374:	bx	lr
   13378:	cmp	r1, #0
   1337c:	mvnne	r1, #0
   13380:	mov	r0, r1
   13384:	bx	lr

00013388 <table_compare_uint64@@Base>:
   13388:	cmp	r0, #0
   1338c:	beq	133e0 <table_compare_uint64@@Base+0x58>
   13390:	cmp	r1, #0
   13394:	moveq	r1, #1
   13398:	moveq	r0, r1
   1339c:	bxeq	lr
   133a0:	push	{r5, r7, fp, lr}
   133a4:	add	fp, sp, #8
   133a8:	ldm	r1, {r2, r7}
   133ac:	ldm	r0, {r0, r5}
   133b0:	mov	r1, #0
   133b4:	subs	r3, r0, r2
   133b8:	sbcs	r3, r5, r7
   133bc:	movwcc	r1, #1
   133c0:	cmp	r1, #0
   133c4:	mvnne	r1, #0
   133c8:	subs	r0, r2, r0
   133cc:	sbcs	r0, r7, r5
   133d0:	movwcc	r1, #1
   133d4:	pop	{r5, r7, fp, lr}
   133d8:	mov	r0, r1
   133dc:	bx	lr
   133e0:	cmp	r1, #0
   133e4:	mvnne	r1, #0
   133e8:	mov	r0, r1
   133ec:	bx	lr

000133f0 <table_compare_short@@Base>:
   133f0:	cmp	r0, #0
   133f4:	beq	13428 <table_compare_short@@Base+0x38>
   133f8:	cmp	r1, #0
   133fc:	moveq	r1, #1
   13400:	moveq	r0, r1
   13404:	bxeq	lr
   13408:	ldrsh	r2, [r1]
   1340c:	ldrsh	r0, [r0]
   13410:	mov	r1, #0
   13414:	cmp	r0, r2
   13418:	mvnlt	r1, #0
   1341c:	movwgt	r1, #1
   13420:	mov	r0, r1
   13424:	bx	lr
   13428:	cmp	r1, #0
   1342c:	mvnne	r1, #0
   13430:	mov	r0, r1
   13434:	bx	lr

00013438 <table_compare_ushort@@Base>:
   13438:	cmp	r0, #0
   1343c:	beq	13470 <table_compare_ushort@@Base+0x38>
   13440:	cmp	r1, #0
   13444:	moveq	r1, #1
   13448:	moveq	r0, r1
   1344c:	bxeq	lr
   13450:	ldrh	r2, [r1]
   13454:	ldrh	r0, [r0]
   13458:	mov	r1, #0
   1345c:	cmp	r0, r2
   13460:	mvncc	r1, #0
   13464:	movwhi	r1, #1
   13468:	mov	r0, r1
   1346c:	bx	lr
   13470:	cmp	r1, #0
   13474:	mvnne	r1, #0
   13478:	mov	r0, r1
   1347c:	bx	lr

00013480 <table_compare_long@@Base>:
   13480:	cmp	r0, #0
   13484:	beq	134b8 <table_compare_long@@Base+0x38>
   13488:	cmp	r1, #0
   1348c:	moveq	r1, #1
   13490:	moveq	r0, r1
   13494:	bxeq	lr
   13498:	ldr	r2, [r1]
   1349c:	ldr	r0, [r0]
   134a0:	mov	r1, #0
   134a4:	cmp	r0, r2
   134a8:	mvnlt	r1, #0
   134ac:	movwgt	r1, #1
   134b0:	mov	r0, r1
   134b4:	bx	lr
   134b8:	cmp	r1, #0
   134bc:	mvnne	r1, #0
   134c0:	mov	r0, r1
   134c4:	bx	lr

000134c8 <table_compare_ulong@@Base>:
   134c8:	cmp	r0, #0
   134cc:	beq	13500 <table_compare_ulong@@Base+0x38>
   134d0:	cmp	r1, #0
   134d4:	moveq	r1, #1
   134d8:	moveq	r0, r1
   134dc:	bxeq	lr
   134e0:	ldr	r2, [r1]
   134e4:	ldr	r0, [r0]
   134e8:	mov	r1, #0
   134ec:	cmp	r0, r2
   134f0:	mvncc	r1, #0
   134f4:	movwhi	r1, #1
   134f8:	mov	r0, r1
   134fc:	bx	lr
   13500:	cmp	r1, #0
   13504:	mvnne	r1, #0
   13508:	mov	r0, r1
   1350c:	bx	lr

00013510 <table_compare_llong@@Base>:
   13510:	cmp	r0, #0
   13514:	beq	13568 <table_compare_llong@@Base+0x58>
   13518:	cmp	r1, #0
   1351c:	moveq	r1, #1
   13520:	moveq	r0, r1
   13524:	bxeq	lr
   13528:	push	{r5, r7, fp, lr}
   1352c:	add	fp, sp, #8
   13530:	ldm	r1, {r2, r7}
   13534:	ldm	r0, {r0, r5}
   13538:	mov	r1, #0
   1353c:	subs	r3, r0, r2
   13540:	sbcs	r3, r5, r7
   13544:	movwlt	r1, #1
   13548:	cmp	r1, #0
   1354c:	mvnne	r1, #0
   13550:	subs	r0, r2, r0
   13554:	sbcs	r0, r7, r5
   13558:	movwlt	r1, #1
   1355c:	pop	{r5, r7, fp, lr}
   13560:	mov	r0, r1
   13564:	bx	lr
   13568:	cmp	r1, #0
   1356c:	mvnne	r1, #0
   13570:	mov	r0, r1
   13574:	bx	lr

00013578 <table_compare_ullong@@Base>:
   13578:	cmp	r0, #0
   1357c:	beq	135b0 <table_compare_ullong@@Base+0x38>
   13580:	cmp	r1, #0
   13584:	moveq	r1, #1
   13588:	moveq	r0, r1
   1358c:	bxeq	lr
   13590:	ldr	r2, [r1]
   13594:	ldr	r0, [r0]
   13598:	mov	r1, #0
   1359c:	cmp	r0, r2
   135a0:	mvncc	r1, #0
   135a4:	movwhi	r1, #1
   135a8:	mov	r0, r1
   135ac:	bx	lr
   135b0:	cmp	r1, #0
   135b4:	mvnne	r1, #0
   135b8:	mov	r0, r1
   135bc:	bx	lr

000135c0 <table_compare_float@@Base>:
   135c0:	cmp	r0, #0
   135c4:	beq	135fc <table_compare_float@@Base+0x3c>
   135c8:	cmp	r1, #0
   135cc:	moveq	r1, #1
   135d0:	moveq	r0, r1
   135d4:	bxeq	lr
   135d8:	vldr	s0, [r1]
   135dc:	vldr	s2, [r0]
   135e0:	mov	r1, #0
   135e4:	vcmpe.f32	s2, s0
   135e8:	vmrs	APSR_nzcv, fpscr
   135ec:	mvnmi	r1, #0
   135f0:	movwgt	r1, #1
   135f4:	mov	r0, r1
   135f8:	bx	lr
   135fc:	cmp	r1, #0
   13600:	mvnne	r1, #0
   13604:	mov	r0, r1
   13608:	bx	lr

0001360c <table_compare_double@@Base>:
   1360c:	cmp	r0, #0
   13610:	beq	13648 <table_compare_double@@Base+0x3c>
   13614:	cmp	r1, #0
   13618:	moveq	r1, #1
   1361c:	moveq	r0, r1
   13620:	bxeq	lr
   13624:	vldr	d16, [r1]
   13628:	vldr	d17, [r0]
   1362c:	mov	r1, #0
   13630:	vcmpe.f64	d17, d16
   13634:	vmrs	APSR_nzcv, fpscr
   13638:	mvnmi	r1, #0
   1363c:	movwgt	r1, #1
   13640:	mov	r0, r1
   13644:	bx	lr
   13648:	cmp	r1, #0
   1364c:	mvnne	r1, #0
   13650:	mov	r0, r1
   13654:	bx	lr

00013658 <table_compare_ldouble@@Base>:
   13658:	cmp	r0, #0
   1365c:	beq	13694 <table_compare_ldouble@@Base+0x3c>
   13660:	cmp	r1, #0
   13664:	moveq	r1, #1
   13668:	moveq	r0, r1
   1366c:	bxeq	lr
   13670:	vldr	d16, [r1]
   13674:	vldr	d17, [r0]
   13678:	mov	r1, #0
   1367c:	vcmpe.f64	d17, d16
   13680:	vmrs	APSR_nzcv, fpscr
   13684:	mvnmi	r1, #0
   13688:	movwgt	r1, #1
   1368c:	mov	r0, r1
   13690:	bx	lr
   13694:	cmp	r1, #0
   13698:	mvnne	r1, #0
   1369c:	mov	r0, r1
   136a0:	bx	lr

000136a4 <table_compare_char@@Base>:
   136a4:	cmp	r0, #0
   136a8:	beq	136dc <table_compare_char@@Base+0x38>
   136ac:	cmp	r1, #0
   136b0:	moveq	r1, #1
   136b4:	moveq	r0, r1
   136b8:	bxeq	lr
   136bc:	ldrb	r2, [r1]
   136c0:	ldrb	r0, [r0]
   136c4:	mov	r1, #0
   136c8:	cmp	r0, r2
   136cc:	mvncc	r1, #0
   136d0:	movwhi	r1, #1
   136d4:	mov	r0, r1
   136d8:	bx	lr
   136dc:	cmp	r1, #0
   136e0:	mvnne	r1, #0
   136e4:	mov	r0, r1
   136e8:	bx	lr

000136ec <table_compare_uchar@@Base>:
   136ec:	cmp	r0, #0
   136f0:	beq	13724 <table_compare_uchar@@Base+0x38>
   136f4:	cmp	r1, #0
   136f8:	moveq	r1, #1
   136fc:	moveq	r0, r1
   13700:	bxeq	lr
   13704:	ldrb	r2, [r1]
   13708:	ldrb	r0, [r0]
   1370c:	mov	r1, #0
   13710:	cmp	r0, r2
   13714:	mvncc	r1, #0
   13718:	movwhi	r1, #1
   1371c:	mov	r0, r1
   13720:	bx	lr
   13724:	cmp	r1, #0
   13728:	mvnne	r1, #0
   1372c:	mov	r0, r1
   13730:	bx	lr

00013734 <table_compare_string@@Base>:
   13734:	cmp	r0, #0
   13738:	beq	13750 <table_compare_string@@Base+0x1c>
   1373c:	cmp	r1, #0
   13740:	moveq	r1, #1
   13744:	moveq	r0, r1
   13748:	bxeq	lr
   1374c:	b	11fbc <strcmp@plt>
   13750:	cmp	r1, #0
   13754:	mvnne	r1, #0
   13758:	mov	r0, r1
   1375c:	bx	lr

00013760 <table_compare_ptr@@Base>:
   13760:	mov	r2, #0
   13764:	cmp	r0, r1
   13768:	mvncc	r2, #0
   1376c:	movwhi	r2, #1
   13770:	mov	r0, r2
   13774:	bx	lr

00013778 <table_get_default_compare_function_for_data_type@@Base>:
   13778:	cmp	r0, #23
   1377c:	ldrls	r1, [pc, #12]	; 13790 <table_get_default_compare_function_for_data_type@@Base+0x18>
   13780:	movhi	r0, #0
   13784:	addls	r1, pc, r1
   13788:	ldrls	r0, [r1, r0, lsl #2]
   1378c:	bx	lr
   13790:	andeq	r2, r1, r4, lsr #14

00013794 <table_get@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	14c28 <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_bool@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	14c28 <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldrb	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_int@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14c28 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	ldr	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_uint@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14c28 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	ldr	r0, [r0]
   137ec:	pop	{fp, pc}

000137f0 <table_get_int8@@Base>:
   137f0:	push	{fp, lr}
   137f4:	mov	fp, sp
   137f8:	bl	14c28 <table_get_cell_ptr@@Base>
   137fc:	ldr	r0, [r0]
   13800:	ldrsb	r0, [r0]
   13804:	pop	{fp, pc}

00013808 <table_get_uint8@@Base>:
   13808:	push	{fp, lr}
   1380c:	mov	fp, sp
   13810:	bl	14c28 <table_get_cell_ptr@@Base>
   13814:	ldr	r0, [r0]
   13818:	ldrb	r0, [r0]
   1381c:	pop	{fp, pc}

00013820 <table_get_int16@@Base>:
   13820:	push	{fp, lr}
   13824:	mov	fp, sp
   13828:	bl	14c28 <table_get_cell_ptr@@Base>
   1382c:	ldr	r0, [r0]
   13830:	ldrsh	r0, [r0]
   13834:	pop	{fp, pc}

00013838 <table_get_uint16@@Base>:
   13838:	push	{fp, lr}
   1383c:	mov	fp, sp
   13840:	bl	14c28 <table_get_cell_ptr@@Base>
   13844:	ldr	r0, [r0]
   13848:	ldrh	r0, [r0]
   1384c:	pop	{fp, pc}

00013850 <table_get_int32@@Base>:
   13850:	push	{fp, lr}
   13854:	mov	fp, sp
   13858:	bl	14c28 <table_get_cell_ptr@@Base>
   1385c:	ldr	r0, [r0]
   13860:	ldr	r0, [r0]
   13864:	pop	{fp, pc}

00013868 <table_get_uint32@@Base>:
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	bl	14c28 <table_get_cell_ptr@@Base>
   13874:	ldr	r0, [r0]
   13878:	ldr	r0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_int64@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	14c28 <table_get_cell_ptr@@Base>
   1388c:	ldr	r0, [r0]
   13890:	ldrd	r0, [r0]
   13894:	pop	{fp, pc}

00013898 <table_get_uint64@@Base>:
   13898:	push	{fp, lr}
   1389c:	mov	fp, sp
   138a0:	bl	14c28 <table_get_cell_ptr@@Base>
   138a4:	ldr	r0, [r0]
   138a8:	ldrd	r0, [r0]
   138ac:	pop	{fp, pc}

000138b0 <table_get_short@@Base>:
   138b0:	push	{fp, lr}
   138b4:	mov	fp, sp
   138b8:	bl	14c28 <table_get_cell_ptr@@Base>
   138bc:	ldr	r0, [r0]
   138c0:	ldrsh	r0, [r0]
   138c4:	pop	{fp, pc}

000138c8 <table_get_ushort@@Base>:
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	bl	14c28 <table_get_cell_ptr@@Base>
   138d4:	ldr	r0, [r0]
   138d8:	ldrh	r0, [r0]
   138dc:	pop	{fp, pc}

000138e0 <table_get_long@@Base>:
   138e0:	push	{fp, lr}
   138e4:	mov	fp, sp
   138e8:	bl	14c28 <table_get_cell_ptr@@Base>
   138ec:	ldr	r0, [r0]
   138f0:	ldr	r0, [r0]
   138f4:	pop	{fp, pc}

000138f8 <table_get_ulong@@Base>:
   138f8:	push	{fp, lr}
   138fc:	mov	fp, sp
   13900:	bl	14c28 <table_get_cell_ptr@@Base>
   13904:	ldr	r0, [r0]
   13908:	ldr	r0, [r0]
   1390c:	pop	{fp, pc}

00013910 <table_get_llong@@Base>:
   13910:	push	{fp, lr}
   13914:	mov	fp, sp
   13918:	bl	14c28 <table_get_cell_ptr@@Base>
   1391c:	ldr	r0, [r0]
   13920:	ldrd	r0, [r0]
   13924:	pop	{fp, pc}

00013928 <table_get_ullong@@Base>:
   13928:	push	{fp, lr}
   1392c:	mov	fp, sp
   13930:	bl	14c28 <table_get_cell_ptr@@Base>
   13934:	ldr	r0, [r0]
   13938:	ldrd	r0, [r0]
   1393c:	pop	{fp, pc}

00013940 <table_get_float@@Base>:
   13940:	push	{fp, lr}
   13944:	mov	fp, sp
   13948:	bl	14c28 <table_get_cell_ptr@@Base>
   1394c:	ldr	r0, [r0]
   13950:	vldr	s0, [r0]
   13954:	pop	{fp, pc}

00013958 <table_get_double@@Base>:
   13958:	push	{fp, lr}
   1395c:	mov	fp, sp
   13960:	bl	14c28 <table_get_cell_ptr@@Base>
   13964:	ldr	r0, [r0]
   13968:	vldr	d0, [r0]
   1396c:	pop	{fp, pc}

00013970 <table_get_ldouble@@Base>:
   13970:	push	{fp, lr}
   13974:	mov	fp, sp
   13978:	bl	14c28 <table_get_cell_ptr@@Base>
   1397c:	ldr	r0, [r0]
   13980:	vldr	d0, [r0]
   13984:	pop	{fp, pc}

00013988 <table_get_char@@Base>:
   13988:	push	{fp, lr}
   1398c:	mov	fp, sp
   13990:	bl	14c28 <table_get_cell_ptr@@Base>
   13994:	ldr	r0, [r0]
   13998:	ldrb	r0, [r0]
   1399c:	pop	{fp, pc}

000139a0 <table_get_uchar@@Base>:
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	bl	14c28 <table_get_cell_ptr@@Base>
   139ac:	ldr	r0, [r0]
   139b0:	ldrb	r0, [r0]
   139b4:	pop	{fp, pc}

000139b8 <table_get_string@@Base>:
   139b8:	push	{fp, lr}
   139bc:	mov	fp, sp
   139c0:	bl	14c28 <table_get_cell_ptr@@Base>
   139c4:	ldr	r0, [r0]
   139c8:	pop	{fp, pc}

000139cc <table_get_ptr@@Base>:
   139cc:	push	{fp, lr}
   139d0:	mov	fp, sp
   139d4:	bl	14c28 <table_get_cell_ptr@@Base>
   139d8:	ldr	r0, [r0]
   139dc:	pop	{fp, pc}

000139e0 <table_row_init@@Base>:
   139e0:	push	{r4, r5, fp, lr}
   139e4:	add	fp, sp, #8
   139e8:	mov	r4, r1
   139ec:	ldr	r1, [r0, #12]
   139f0:	ldr	r5, [r0, #16]
   139f4:	lsl	r0, r1, #2
   139f8:	bl	12004 <malloc@plt>
   139fc:	str	r0, [r5, r4, lsl #2]
   13a00:	pop	{r4, r5, fp, pc}

00013a04 <table_get_row_ptr@@Base>:
   13a04:	ldr	r0, [r0, #16]
   13a08:	add	r0, r0, r1, lsl #2
   13a0c:	bx	lr

00013a10 <table_row_destroy@@Base>:
   13a10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a14:	add	fp, sp, #24
   13a18:	mov	r4, r1
   13a1c:	mov	r5, r0
   13a20:	bl	12d44 <table_get_column_length@@Base>
   13a24:	ldr	r8, [r5, #16]
   13a28:	cmp	r0, #1
   13a2c:	blt	13a54 <table_row_destroy@@Base+0x44>
   13a30:	mov	r6, r0
   13a34:	mov	r7, #0
   13a38:	mov	r0, r5
   13a3c:	mov	r1, r4
   13a40:	mov	r2, r7
   13a44:	bl	14c44 <table_cell_destroy@@Base>
   13a48:	add	r7, r7, #1
   13a4c:	cmp	r6, r7
   13a50:	bne	13a38 <table_row_destroy@@Base+0x28>
   13a54:	ldr	r0, [r8, r4, lsl #2]
   13a58:	cmp	r0, #0
   13a5c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a60:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a64:	b	11fd4 <free@plt>

00013a68 <table_get_row_length@@Base>:
   13a68:	ldr	r0, [r0, #20]
   13a6c:	bx	lr

00013a70 <table_add_row@@Base>:
   13a70:	push	{r4, r5, r6, r7, fp, lr}
   13a74:	add	fp, sp, #16
   13a78:	ldr	r5, [r0, #20]
   13a7c:	ldr	r1, [r0, #24]
   13a80:	mov	r4, r0
   13a84:	udiv	r0, r5, r1
   13a88:	mls	r0, r0, r1, r5
   13a8c:	cmp	r0, #0
   13a90:	bne	13ab4 <table_add_row@@Base+0x44>
   13a94:	ldr	r2, [r4, #28]
   13a98:	ldr	r0, [r4, #16]
   13a9c:	add	r1, r2, r1
   13aa0:	str	r1, [r4, #28]
   13aa4:	lsl	r1, r1, #2
   13aa8:	bl	11fec <realloc@plt>
   13aac:	str	r0, [r4, #16]
   13ab0:	ldr	r5, [r4, #20]
   13ab4:	mov	r0, r4
   13ab8:	bl	12d44 <table_get_column_length@@Base>
   13abc:	mov	r6, r0
   13ac0:	ldr	r0, [r4, #12]
   13ac4:	ldr	r7, [r4, #16]
   13ac8:	lsl	r0, r0, #2
   13acc:	bl	12004 <malloc@plt>
   13ad0:	cmp	r6, #1
   13ad4:	str	r0, [r7, r5, lsl #2]
   13ad8:	blt	13afc <table_add_row@@Base+0x8c>
   13adc:	mov	r7, #0
   13ae0:	mov	r0, r4
   13ae4:	mov	r1, r5
   13ae8:	mov	r2, r7
   13aec:	bl	14c08 <table_cell_init@@Base>
   13af0:	add	r7, r7, #1
   13af4:	cmp	r6, r7
   13af8:	bne	13ae0 <table_add_row@@Base+0x70>
   13afc:	ldr	r1, [r4, #20]
   13b00:	mov	r0, r4
   13b04:	mvn	r2, #0
   13b08:	mov	r3, #2
   13b0c:	bl	12c50 <table_notify@@Base>
   13b10:	ldr	r0, [r4, #20]
   13b14:	add	r1, r0, #1
   13b18:	str	r1, [r4, #20]
   13b1c:	pop	{r4, r5, r6, r7, fp, pc}

00013b20 <table_remove_row@@Base>:
   13b20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b24:	add	fp, sp, #24
   13b28:	ldr	r8, [r0, #20]
   13b2c:	mov	r4, r1
   13b30:	mov	r5, r0
   13b34:	bl	12d44 <table_get_column_length@@Base>
   13b38:	cmp	r0, #1
   13b3c:	blt	13b88 <table_remove_row@@Base+0x68>
   13b40:	mov	r6, r0
   13b44:	mov	r7, #0
   13b48:	mov	r0, r5
   13b4c:	mov	r1, r7
   13b50:	bl	12db8 <table_get_column_data_type@@Base>
   13b54:	cmp	r0, #23
   13b58:	beq	13b7c <table_remove_row@@Base+0x5c>
   13b5c:	mov	r0, r5
   13b60:	mov	r1, r4
   13b64:	mov	r2, r7
   13b68:	bl	14c28 <table_get_cell_ptr@@Base>
   13b6c:	ldr	r0, [r0]
   13b70:	cmp	r0, #0
   13b74:	beq	13b7c <table_remove_row@@Base+0x5c>
   13b78:	bl	11fd4 <free@plt>
   13b7c:	add	r7, r7, #1
   13b80:	cmp	r6, r7
   13b84:	bne	13b48 <table_remove_row@@Base+0x28>
   13b88:	ldr	r0, [r5, #16]
   13b8c:	ldr	r0, [r0, r4, lsl #2]
   13b90:	cmp	r0, #0
   13b94:	beq	13b9c <table_remove_row@@Base+0x7c>
   13b98:	bl	11fd4 <free@plt>
   13b9c:	sub	r0, r8, #1
   13ba0:	cmp	r0, r4
   13ba4:	ble	13bc8 <table_remove_row@@Base+0xa8>
   13ba8:	mov	r1, r4
   13bac:	ldr	r2, [r5, #16]
   13bb0:	add	r3, r2, r1, lsl #2
   13bb4:	ldr	r3, [r3, #4]
   13bb8:	str	r3, [r2, r1, lsl #2]
   13bbc:	add	r1, r1, #1
   13bc0:	cmp	r0, r1
   13bc4:	bne	13bac <table_remove_row@@Base+0x8c>
   13bc8:	ldr	r0, [r5, #20]
   13bcc:	ldr	r1, [r5, #24]
   13bd0:	sub	r0, r0, #1
   13bd4:	udiv	r2, r0, r1
   13bd8:	str	r0, [r5, #20]
   13bdc:	mls	r0, r2, r1, r0
   13be0:	cmp	r0, #0
   13be4:	bne	13c04 <table_remove_row@@Base+0xe4>
   13be8:	ldr	r2, [r5, #28]
   13bec:	ldr	r0, [r5, #16]
   13bf0:	sub	r1, r2, r1
   13bf4:	str	r1, [r5, #28]
   13bf8:	lsl	r1, r1, #2
   13bfc:	bl	11fec <realloc@plt>
   13c00:	str	r0, [r5, #16]
   13c04:	mov	r0, r5
   13c08:	mov	r1, r4
   13c0c:	mvn	r2, #0
   13c10:	mov	r3, #4
   13c14:	bl	12c50 <table_notify@@Base>
   13c18:	mov	r0, #0
   13c1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013c20 <table_set_row_ptr@@Base>:
   13c20:	ldr	r2, [r2]
   13c24:	ldr	r0, [r0, #16]
   13c28:	str	r2, [r0, r1, lsl #2]
   13c2c:	bx	lr

00013c30 <table_set@@Base>:
   13c30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c34:	add	fp, sp, #24
   13c38:	mov	r8, r3
   13c3c:	mov	r4, r2
   13c40:	mov	r9, r1
   13c44:	mov	r6, r0
   13c48:	bl	14c28 <table_get_cell_ptr@@Base>
   13c4c:	mov	r5, r0
   13c50:	mov	r0, r6
   13c54:	mov	r1, r4
   13c58:	bl	12d1c <table_get_col_ptr@@Base>
   13c5c:	ldr	r1, [fp, #8]
   13c60:	mvn	r7, #0
   13c64:	cmp	r1, #23
   13c68:	bhi	13f30 <table_set@@Base+0x300>
   13c6c:	add	r2, pc, #4
   13c70:	ldr	r1, [r2, r1, lsl #2]
   13c74:	add	pc, r2, r1
   13c78:	andeq	r0, r0, r0, rrx
   13c7c:	andeq	r0, r0, r0, ror r0
   13c80:	andeq	r0, r0, r0, lsl #1
   13c84:	muleq	r0, r0, r0
   13c88:	andeq	r0, r0, r0, lsr #1
   13c8c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13c90:	andeq	r0, r0, r0, asr #1
   13c94:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13c98:	andeq	r0, r0, r0, ror #1
   13c9c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13ca0:	andeq	r0, r0, r0, lsl #2
   13ca4:	andeq	r0, r0, r0, lsl r1
   13ca8:	andeq	r0, r0, r8, asr #2
   13cac:	andeq	r0, r0, r8, asr r1
   13cb0:	andeq	r0, r0, r8, ror #2
   13cb4:	andeq	r0, r0, r8, ror r1
   13cb8:	andeq	r0, r0, r8, lsl #3
   13cbc:	andeq	r0, r0, r0, asr #3
   13cc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13cc4:	andeq	r0, r0, r0, lsl r2
   13cc8:	andeq	r0, r0, r0, lsr #4
   13ccc:	andeq	r0, r0, r0, lsr r2
   13cd0:	andeq	r0, r0, ip, ror #4
   13cd4:	andeq	r0, r0, r0, asr #5
   13cd8:	ldr	r0, [r0, #4]
   13cdc:	cmp	r0, #0
   13ce0:	bne	13f30 <table_set@@Base+0x300>
   13ce4:	b	13e0c <table_set@@Base+0x1dc>
   13ce8:	ldr	r0, [r0, #4]
   13cec:	cmp	r0, #1
   13cf0:	beq	13e0c <table_set@@Base+0x1dc>
   13cf4:	b	13f30 <table_set@@Base+0x300>
   13cf8:	ldr	r0, [r0, #4]
   13cfc:	cmp	r0, #2
   13d00:	beq	13ef0 <table_set@@Base+0x2c0>
   13d04:	b	13f30 <table_set@@Base+0x300>
   13d08:	ldr	r0, [r0, #4]
   13d0c:	cmp	r0, #3
   13d10:	beq	13ef0 <table_set@@Base+0x2c0>
   13d14:	b	13f30 <table_set@@Base+0x300>
   13d18:	ldr	r0, [r0, #4]
   13d1c:	cmp	r0, #4
   13d20:	beq	13d94 <table_set@@Base+0x164>
   13d24:	b	13f30 <table_set@@Base+0x300>
   13d28:	ldr	r0, [r0, #4]
   13d2c:	cmp	r0, #5
   13d30:	beq	13d94 <table_set@@Base+0x164>
   13d34:	b	13f30 <table_set@@Base+0x300>
   13d38:	ldr	r0, [r0, #4]
   13d3c:	cmp	r0, #6
   13d40:	beq	13e0c <table_set@@Base+0x1dc>
   13d44:	b	13f30 <table_set@@Base+0x300>
   13d48:	ldr	r0, [r0, #4]
   13d4c:	cmp	r0, #7
   13d50:	beq	13e0c <table_set@@Base+0x1dc>
   13d54:	b	13f30 <table_set@@Base+0x300>
   13d58:	ldr	r0, [r0, #4]
   13d5c:	cmp	r0, #8
   13d60:	beq	13e54 <table_set@@Base+0x224>
   13d64:	b	13f30 <table_set@@Base+0x300>
   13d68:	ldr	r0, [r0, #4]
   13d6c:	cmp	r0, #9
   13d70:	beq	13e54 <table_set@@Base+0x224>
   13d74:	b	13f30 <table_set@@Base+0x300>
   13d78:	ldr	r0, [r0, #4]
   13d7c:	cmp	r0, #10
   13d80:	beq	13d94 <table_set@@Base+0x164>
   13d84:	b	13f30 <table_set@@Base+0x300>
   13d88:	ldr	r0, [r0, #4]
   13d8c:	cmp	r0, #11
   13d90:	bne	13f30 <table_set@@Base+0x300>
   13d94:	ldr	r0, [r5]
   13d98:	cmp	r0, #0
   13d9c:	bne	13db4 <table_set@@Base+0x184>
   13da0:	mov	r0, #2
   13da4:	bl	12004 <malloc@plt>
   13da8:	cmp	r0, #0
   13dac:	str	r0, [r5]
   13db0:	beq	13f30 <table_set@@Base+0x300>
   13db4:	ldrh	r1, [r8]
   13db8:	strh	r1, [r0]
   13dbc:	b	13f18 <table_set@@Base+0x2e8>
   13dc0:	ldr	r0, [r0, #4]
   13dc4:	cmp	r0, #12
   13dc8:	beq	13e0c <table_set@@Base+0x1dc>
   13dcc:	b	13f30 <table_set@@Base+0x300>
   13dd0:	ldr	r0, [r0, #4]
   13dd4:	cmp	r0, #13
   13dd8:	beq	13e0c <table_set@@Base+0x1dc>
   13ddc:	b	13f30 <table_set@@Base+0x300>
   13de0:	ldr	r0, [r0, #4]
   13de4:	cmp	r0, #14
   13de8:	beq	13e54 <table_set@@Base+0x224>
   13dec:	b	13f30 <table_set@@Base+0x300>
   13df0:	ldr	r0, [r0, #4]
   13df4:	cmp	r0, #15
   13df8:	beq	13e54 <table_set@@Base+0x224>
   13dfc:	b	13f30 <table_set@@Base+0x300>
   13e00:	ldr	r0, [r0, #4]
   13e04:	cmp	r0, #16
   13e08:	bne	13f30 <table_set@@Base+0x300>
   13e0c:	ldr	r0, [r5]
   13e10:	cmp	r0, #0
   13e14:	bne	13e2c <table_set@@Base+0x1fc>
   13e18:	mov	r0, #4
   13e1c:	bl	12004 <malloc@plt>
   13e20:	cmp	r0, #0
   13e24:	str	r0, [r5]
   13e28:	beq	13f30 <table_set@@Base+0x300>
   13e2c:	ldr	r1, [r8]
   13e30:	str	r1, [r0]
   13e34:	b	13f18 <table_set@@Base+0x2e8>
   13e38:	ldr	r0, [r0, #4]
   13e3c:	cmp	r0, #17
   13e40:	beq	13e54 <table_set@@Base+0x224>
   13e44:	b	13f30 <table_set@@Base+0x300>
   13e48:	ldr	r0, [r0, #4]
   13e4c:	cmp	r0, #18
   13e50:	bne	13f30 <table_set@@Base+0x300>
   13e54:	ldr	r0, [r5]
   13e58:	cmp	r0, #0
   13e5c:	bne	13e74 <table_set@@Base+0x244>
   13e60:	mov	r0, #8
   13e64:	bl	12004 <malloc@plt>
   13e68:	cmp	r0, #0
   13e6c:	str	r0, [r5]
   13e70:	beq	13f30 <table_set@@Base+0x300>
   13e74:	ldr	r1, [r8]
   13e78:	ldr	r2, [r8, #4]
   13e7c:	str	r2, [r0, #4]
   13e80:	str	r1, [r0]
   13e84:	b	13f18 <table_set@@Base+0x2e8>
   13e88:	ldr	r0, [r0, #4]
   13e8c:	cmp	r0, #19
   13e90:	beq	13ef0 <table_set@@Base+0x2c0>
   13e94:	b	13f30 <table_set@@Base+0x300>
   13e98:	ldr	r0, [r0, #4]
   13e9c:	cmp	r0, #20
   13ea0:	beq	13ef0 <table_set@@Base+0x2c0>
   13ea4:	b	13f30 <table_set@@Base+0x300>
   13ea8:	ldr	r0, [r0, #4]
   13eac:	cmp	r0, #21
   13eb0:	bne	13f30 <table_set@@Base+0x300>
   13eb4:	mov	r0, r8
   13eb8:	bl	12028 <strlen@plt>
   13ebc:	ldr	r2, [r5]
   13ec0:	add	r1, r0, #1
   13ec4:	mov	r0, r2
   13ec8:	bl	11fec <realloc@plt>
   13ecc:	cmp	r0, #0
   13ed0:	str	r0, [r5]
   13ed4:	beq	13f30 <table_set@@Base+0x300>
   13ed8:	mov	r1, r8
   13edc:	bl	11ff8 <strcpy@plt>
   13ee0:	b	13f18 <table_set@@Base+0x2e8>
   13ee4:	ldr	r0, [r0, #4]
   13ee8:	cmp	r0, #22
   13eec:	bne	13f30 <table_set@@Base+0x300>
   13ef0:	ldr	r0, [r5]
   13ef4:	cmp	r0, #0
   13ef8:	bne	13f10 <table_set@@Base+0x2e0>
   13efc:	mov	r0, #1
   13f00:	bl	12004 <malloc@plt>
   13f04:	cmp	r0, #0
   13f08:	str	r0, [r5]
   13f0c:	beq	13f30 <table_set@@Base+0x300>
   13f10:	ldrb	r1, [r8]
   13f14:	strb	r1, [r0]
   13f18:	mov	r0, r6
   13f1c:	mov	r1, r9
   13f20:	mov	r2, r4
   13f24:	mov	r3, #1
   13f28:	bl	12c50 <table_notify@@Base>
   13f2c:	mov	r7, #0
   13f30:	mov	r0, r7
   13f34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13f38:	ldr	r0, [r0, #4]
   13f3c:	cmp	r0, #23
   13f40:	bne	13f30 <table_set@@Base+0x300>
   13f44:	str	r8, [r5]
   13f48:	b	13f18 <table_set@@Base+0x2e8>

00013f4c <table_set_bool@@Base>:
   13f4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f50:	add	fp, sp, #24
   13f54:	mov	r8, r3
   13f58:	mov	r4, r2
   13f5c:	mov	r9, r1
   13f60:	mov	r6, r0
   13f64:	bl	14c28 <table_get_cell_ptr@@Base>
   13f68:	mov	r5, r0
   13f6c:	mov	r0, r6
   13f70:	mov	r1, r4
   13f74:	bl	12d1c <table_get_col_ptr@@Base>
   13f78:	ldr	r0, [r0, #4]
   13f7c:	mvn	r7, #0
   13f80:	cmp	r0, #22
   13f84:	bne	13fc4 <table_set_bool@@Base+0x78>
   13f88:	ldr	r0, [r5]
   13f8c:	cmp	r0, #0
   13f90:	bne	13fa8 <table_set_bool@@Base+0x5c>
   13f94:	mov	r0, #1
   13f98:	bl	12004 <malloc@plt>
   13f9c:	cmp	r0, #0
   13fa0:	str	r0, [r5]
   13fa4:	beq	13fc4 <table_set_bool@@Base+0x78>
   13fa8:	strb	r8, [r0]
   13fac:	mov	r0, r6
   13fb0:	mov	r1, r9
   13fb4:	mov	r2, r4
   13fb8:	mov	r3, #1
   13fbc:	bl	12c50 <table_notify@@Base>
   13fc0:	mov	r7, #0
   13fc4:	mov	r0, r7
   13fc8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fcc <table_set_int@@Base>:
   13fcc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fd0:	add	fp, sp, #24
   13fd4:	mov	r8, r3
   13fd8:	mov	r4, r2
   13fdc:	mov	r5, r1
   13fe0:	mov	r6, r0
   13fe4:	bl	14c28 <table_get_cell_ptr@@Base>
   13fe8:	mov	r9, r0
   13fec:	mov	r0, r6
   13ff0:	mov	r1, r4
   13ff4:	bl	12d1c <table_get_col_ptr@@Base>
   13ff8:	ldr	r0, [r0, #4]
   13ffc:	mvn	r7, #0
   14000:	cmp	r0, #0
   14004:	bne	14044 <table_set_int@@Base+0x78>
   14008:	ldr	r0, [r9]
   1400c:	cmp	r0, #0
   14010:	bne	14028 <table_set_int@@Base+0x5c>
   14014:	mov	r0, #4
   14018:	bl	12004 <malloc@plt>
   1401c:	cmp	r0, #0
   14020:	str	r0, [r9]
   14024:	beq	14044 <table_set_int@@Base+0x78>
   14028:	str	r8, [r0]
   1402c:	mov	r0, r6
   14030:	mov	r1, r5
   14034:	mov	r2, r4
   14038:	mov	r3, #1
   1403c:	bl	12c50 <table_notify@@Base>
   14040:	mov	r7, #0
   14044:	mov	r0, r7
   14048:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001404c <table_set_uint@@Base>:
   1404c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14050:	add	fp, sp, #24
   14054:	mov	r8, r3
   14058:	mov	r4, r2
   1405c:	mov	r5, r1
   14060:	mov	r6, r0
   14064:	bl	14c28 <table_get_cell_ptr@@Base>
   14068:	mov	r9, r0
   1406c:	mov	r0, r6
   14070:	mov	r1, r4
   14074:	bl	12d1c <table_get_col_ptr@@Base>
   14078:	ldr	r0, [r0, #4]
   1407c:	mvn	r7, #0
   14080:	cmp	r0, #1
   14084:	bne	140c4 <table_set_uint@@Base+0x78>
   14088:	ldr	r0, [r9]
   1408c:	cmp	r0, #0
   14090:	bne	140a8 <table_set_uint@@Base+0x5c>
   14094:	mov	r0, #4
   14098:	bl	12004 <malloc@plt>
   1409c:	cmp	r0, #0
   140a0:	str	r0, [r9]
   140a4:	beq	140c4 <table_set_uint@@Base+0x78>
   140a8:	str	r8, [r0]
   140ac:	mov	r0, r6
   140b0:	mov	r1, r5
   140b4:	mov	r2, r4
   140b8:	mov	r3, #1
   140bc:	bl	12c50 <table_notify@@Base>
   140c0:	mov	r7, #0
   140c4:	mov	r0, r7
   140c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140cc <table_set_int8@@Base>:
   140cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140d0:	add	fp, sp, #24
   140d4:	mov	r8, r3
   140d8:	mov	r4, r2
   140dc:	mov	r9, r1
   140e0:	mov	r6, r0
   140e4:	bl	14c28 <table_get_cell_ptr@@Base>
   140e8:	mov	r5, r0
   140ec:	mov	r0, r6
   140f0:	mov	r1, r4
   140f4:	bl	12d1c <table_get_col_ptr@@Base>
   140f8:	ldr	r0, [r0, #4]
   140fc:	mvn	r7, #0
   14100:	cmp	r0, #2
   14104:	bne	14144 <table_set_int8@@Base+0x78>
   14108:	ldr	r0, [r5]
   1410c:	cmp	r0, #0
   14110:	bne	14128 <table_set_int8@@Base+0x5c>
   14114:	mov	r0, #1
   14118:	bl	12004 <malloc@plt>
   1411c:	cmp	r0, #0
   14120:	str	r0, [r5]
   14124:	beq	14144 <table_set_int8@@Base+0x78>
   14128:	strb	r8, [r0]
   1412c:	mov	r0, r6
   14130:	mov	r1, r9
   14134:	mov	r2, r4
   14138:	mov	r3, #1
   1413c:	bl	12c50 <table_notify@@Base>
   14140:	mov	r7, #0
   14144:	mov	r0, r7
   14148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001414c <table_set_uint8@@Base>:
   1414c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14150:	add	fp, sp, #24
   14154:	mov	r8, r3
   14158:	mov	r4, r2
   1415c:	mov	r9, r1
   14160:	mov	r6, r0
   14164:	bl	14c28 <table_get_cell_ptr@@Base>
   14168:	mov	r5, r0
   1416c:	mov	r0, r6
   14170:	mov	r1, r4
   14174:	bl	12d1c <table_get_col_ptr@@Base>
   14178:	ldr	r0, [r0, #4]
   1417c:	mvn	r7, #0
   14180:	cmp	r0, #3
   14184:	bne	141c4 <table_set_uint8@@Base+0x78>
   14188:	ldr	r0, [r5]
   1418c:	cmp	r0, #0
   14190:	bne	141a8 <table_set_uint8@@Base+0x5c>
   14194:	mov	r0, #1
   14198:	bl	12004 <malloc@plt>
   1419c:	cmp	r0, #0
   141a0:	str	r0, [r5]
   141a4:	beq	141c4 <table_set_uint8@@Base+0x78>
   141a8:	strb	r8, [r0]
   141ac:	mov	r0, r6
   141b0:	mov	r1, r9
   141b4:	mov	r2, r4
   141b8:	mov	r3, #1
   141bc:	bl	12c50 <table_notify@@Base>
   141c0:	mov	r7, #0
   141c4:	mov	r0, r7
   141c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141cc <table_set_int16@@Base>:
   141cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141d0:	add	fp, sp, #24
   141d4:	mov	r8, r3
   141d8:	mov	r4, r2
   141dc:	mov	r9, r1
   141e0:	mov	r6, r0
   141e4:	bl	14c28 <table_get_cell_ptr@@Base>
   141e8:	mov	r5, r0
   141ec:	mov	r0, r6
   141f0:	mov	r1, r4
   141f4:	bl	12d1c <table_get_col_ptr@@Base>
   141f8:	ldr	r0, [r0, #4]
   141fc:	mvn	r7, #0
   14200:	cmp	r0, #4
   14204:	bne	14244 <table_set_int16@@Base+0x78>
   14208:	ldr	r0, [r5]
   1420c:	cmp	r0, #0
   14210:	bne	14228 <table_set_int16@@Base+0x5c>
   14214:	mov	r0, #2
   14218:	bl	12004 <malloc@plt>
   1421c:	cmp	r0, #0
   14220:	str	r0, [r5]
   14224:	beq	14244 <table_set_int16@@Base+0x78>
   14228:	strh	r8, [r0]
   1422c:	mov	r0, r6
   14230:	mov	r1, r9
   14234:	mov	r2, r4
   14238:	mov	r3, #1
   1423c:	bl	12c50 <table_notify@@Base>
   14240:	mov	r7, #0
   14244:	mov	r0, r7
   14248:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001424c <table_set_uint16@@Base>:
   1424c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14250:	add	fp, sp, #24
   14254:	mov	r8, r3
   14258:	mov	r4, r2
   1425c:	mov	r9, r1
   14260:	mov	r6, r0
   14264:	bl	14c28 <table_get_cell_ptr@@Base>
   14268:	mov	r5, r0
   1426c:	mov	r0, r6
   14270:	mov	r1, r4
   14274:	bl	12d1c <table_get_col_ptr@@Base>
   14278:	ldr	r0, [r0, #4]
   1427c:	mvn	r7, #0
   14280:	cmp	r0, #5
   14284:	bne	142c4 <table_set_uint16@@Base+0x78>
   14288:	ldr	r0, [r5]
   1428c:	cmp	r0, #0
   14290:	bne	142a8 <table_set_uint16@@Base+0x5c>
   14294:	mov	r0, #2
   14298:	bl	12004 <malloc@plt>
   1429c:	cmp	r0, #0
   142a0:	str	r0, [r5]
   142a4:	beq	142c4 <table_set_uint16@@Base+0x78>
   142a8:	strh	r8, [r0]
   142ac:	mov	r0, r6
   142b0:	mov	r1, r9
   142b4:	mov	r2, r4
   142b8:	mov	r3, #1
   142bc:	bl	12c50 <table_notify@@Base>
   142c0:	mov	r7, #0
   142c4:	mov	r0, r7
   142c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142cc <table_set_int32@@Base>:
   142cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142d0:	add	fp, sp, #24
   142d4:	mov	r8, r3
   142d8:	mov	r4, r2
   142dc:	mov	r5, r1
   142e0:	mov	r6, r0
   142e4:	bl	14c28 <table_get_cell_ptr@@Base>
   142e8:	mov	r9, r0
   142ec:	mov	r0, r6
   142f0:	mov	r1, r4
   142f4:	bl	12d1c <table_get_col_ptr@@Base>
   142f8:	ldr	r0, [r0, #4]
   142fc:	mvn	r7, #0
   14300:	cmp	r0, #6
   14304:	bne	14344 <table_set_int32@@Base+0x78>
   14308:	ldr	r0, [r9]
   1430c:	cmp	r0, #0
   14310:	bne	14328 <table_set_int32@@Base+0x5c>
   14314:	mov	r0, #4
   14318:	bl	12004 <malloc@plt>
   1431c:	cmp	r0, #0
   14320:	str	r0, [r9]
   14324:	beq	14344 <table_set_int32@@Base+0x78>
   14328:	str	r8, [r0]
   1432c:	mov	r0, r6
   14330:	mov	r1, r5
   14334:	mov	r2, r4
   14338:	mov	r3, #1
   1433c:	bl	12c50 <table_notify@@Base>
   14340:	mov	r7, #0
   14344:	mov	r0, r7
   14348:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001434c <table_set_uint32@@Base>:
   1434c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14350:	add	fp, sp, #24
   14354:	mov	r8, r3
   14358:	mov	r4, r2
   1435c:	mov	r5, r1
   14360:	mov	r6, r0
   14364:	bl	14c28 <table_get_cell_ptr@@Base>
   14368:	mov	r9, r0
   1436c:	mov	r0, r6
   14370:	mov	r1, r4
   14374:	bl	12d1c <table_get_col_ptr@@Base>
   14378:	ldr	r0, [r0, #4]
   1437c:	mvn	r7, #0
   14380:	cmp	r0, #7
   14384:	bne	143c4 <table_set_uint32@@Base+0x78>
   14388:	ldr	r0, [r9]
   1438c:	cmp	r0, #0
   14390:	bne	143a8 <table_set_uint32@@Base+0x5c>
   14394:	mov	r0, #4
   14398:	bl	12004 <malloc@plt>
   1439c:	cmp	r0, #0
   143a0:	str	r0, [r9]
   143a4:	beq	143c4 <table_set_uint32@@Base+0x78>
   143a8:	str	r8, [r0]
   143ac:	mov	r0, r6
   143b0:	mov	r1, r5
   143b4:	mov	r2, r4
   143b8:	mov	r3, #1
   143bc:	bl	12c50 <table_notify@@Base>
   143c0:	mov	r7, #0
   143c4:	mov	r0, r7
   143c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143cc <table_set_int64@@Base>:
   143cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   143d0:	add	fp, sp, #24
   143d4:	mov	r4, r2
   143d8:	mov	r8, r1
   143dc:	mov	r6, r0
   143e0:	bl	14c28 <table_get_cell_ptr@@Base>
   143e4:	mov	r5, r0
   143e8:	mov	r0, r6
   143ec:	mov	r1, r4
   143f0:	bl	12d1c <table_get_col_ptr@@Base>
   143f4:	ldr	r0, [r0, #4]
   143f8:	mvn	r7, #0
   143fc:	cmp	r0, #8
   14400:	bne	1444c <table_set_int64@@Base+0x80>
   14404:	ldr	r0, [r5]
   14408:	cmp	r0, #0
   1440c:	bne	14424 <table_set_int64@@Base+0x58>
   14410:	mov	r0, #8
   14414:	bl	12004 <malloc@plt>
   14418:	cmp	r0, #0
   1441c:	str	r0, [r5]
   14420:	beq	1444c <table_set_int64@@Base+0x80>
   14424:	ldr	r1, [fp, #12]
   14428:	ldr	r2, [fp, #8]
   1442c:	mov	r3, #1
   14430:	str	r2, [r0]
   14434:	str	r1, [r0, #4]
   14438:	mov	r0, r6
   1443c:	mov	r1, r8
   14440:	mov	r2, r4
   14444:	bl	12c50 <table_notify@@Base>
   14448:	mov	r7, #0
   1444c:	mov	r0, r7
   14450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014454 <table_set_uint64@@Base>:
   14454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14458:	add	fp, sp, #24
   1445c:	mov	r4, r2
   14460:	mov	r8, r1
   14464:	mov	r6, r0
   14468:	bl	14c28 <table_get_cell_ptr@@Base>
   1446c:	mov	r5, r0
   14470:	mov	r0, r6
   14474:	mov	r1, r4
   14478:	bl	12d1c <table_get_col_ptr@@Base>
   1447c:	ldr	r0, [r0, #4]
   14480:	mvn	r7, #0
   14484:	cmp	r0, #9
   14488:	bne	144d4 <table_set_uint64@@Base+0x80>
   1448c:	ldr	r0, [r5]
   14490:	cmp	r0, #0
   14494:	bne	144ac <table_set_uint64@@Base+0x58>
   14498:	mov	r0, #8
   1449c:	bl	12004 <malloc@plt>
   144a0:	cmp	r0, #0
   144a4:	str	r0, [r5]
   144a8:	beq	144d4 <table_set_uint64@@Base+0x80>
   144ac:	ldr	r1, [fp, #12]
   144b0:	ldr	r2, [fp, #8]
   144b4:	mov	r3, #1
   144b8:	str	r2, [r0]
   144bc:	str	r1, [r0, #4]
   144c0:	mov	r0, r6
   144c4:	mov	r1, r8
   144c8:	mov	r2, r4
   144cc:	bl	12c50 <table_notify@@Base>
   144d0:	mov	r7, #0
   144d4:	mov	r0, r7
   144d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000144dc <table_set_short@@Base>:
   144dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144e0:	add	fp, sp, #24
   144e4:	mov	r8, r3
   144e8:	mov	r4, r2
   144ec:	mov	r9, r1
   144f0:	mov	r6, r0
   144f4:	bl	14c28 <table_get_cell_ptr@@Base>
   144f8:	mov	r5, r0
   144fc:	mov	r0, r6
   14500:	mov	r1, r4
   14504:	bl	12d1c <table_get_col_ptr@@Base>
   14508:	ldr	r0, [r0, #4]
   1450c:	mvn	r7, #0
   14510:	cmp	r0, #10
   14514:	bne	14554 <table_set_short@@Base+0x78>
   14518:	ldr	r0, [r5]
   1451c:	cmp	r0, #0
   14520:	bne	14538 <table_set_short@@Base+0x5c>
   14524:	mov	r0, #2
   14528:	bl	12004 <malloc@plt>
   1452c:	cmp	r0, #0
   14530:	str	r0, [r5]
   14534:	beq	14554 <table_set_short@@Base+0x78>
   14538:	strh	r8, [r0]
   1453c:	mov	r0, r6
   14540:	mov	r1, r9
   14544:	mov	r2, r4
   14548:	mov	r3, #1
   1454c:	bl	12c50 <table_notify@@Base>
   14550:	mov	r7, #0
   14554:	mov	r0, r7
   14558:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001455c <table_set_ushort@@Base>:
   1455c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14560:	add	fp, sp, #24
   14564:	mov	r8, r3
   14568:	mov	r4, r2
   1456c:	mov	r9, r1
   14570:	mov	r6, r0
   14574:	bl	14c28 <table_get_cell_ptr@@Base>
   14578:	mov	r5, r0
   1457c:	mov	r0, r6
   14580:	mov	r1, r4
   14584:	bl	12d1c <table_get_col_ptr@@Base>
   14588:	ldr	r0, [r0, #4]
   1458c:	mvn	r7, #0
   14590:	cmp	r0, #11
   14594:	bne	145d4 <table_set_ushort@@Base+0x78>
   14598:	ldr	r0, [r5]
   1459c:	cmp	r0, #0
   145a0:	bne	145b8 <table_set_ushort@@Base+0x5c>
   145a4:	mov	r0, #2
   145a8:	bl	12004 <malloc@plt>
   145ac:	cmp	r0, #0
   145b0:	str	r0, [r5]
   145b4:	beq	145d4 <table_set_ushort@@Base+0x78>
   145b8:	strh	r8, [r0]
   145bc:	mov	r0, r6
   145c0:	mov	r1, r9
   145c4:	mov	r2, r4
   145c8:	mov	r3, #1
   145cc:	bl	12c50 <table_notify@@Base>
   145d0:	mov	r7, #0
   145d4:	mov	r0, r7
   145d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000145dc <table_set_long@@Base>:
   145dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   145e0:	add	fp, sp, #24
   145e4:	mov	r8, r3
   145e8:	mov	r4, r2
   145ec:	mov	r5, r1
   145f0:	mov	r6, r0
   145f4:	bl	14c28 <table_get_cell_ptr@@Base>
   145f8:	mov	r9, r0
   145fc:	mov	r0, r6
   14600:	mov	r1, r4
   14604:	bl	12d1c <table_get_col_ptr@@Base>
   14608:	ldr	r0, [r0, #4]
   1460c:	mvn	r7, #0
   14610:	cmp	r0, #12
   14614:	bne	14654 <table_set_long@@Base+0x78>
   14618:	ldr	r0, [r9]
   1461c:	cmp	r0, #0
   14620:	bne	14638 <table_set_long@@Base+0x5c>
   14624:	mov	r0, #4
   14628:	bl	12004 <malloc@plt>
   1462c:	cmp	r0, #0
   14630:	str	r0, [r9]
   14634:	beq	14654 <table_set_long@@Base+0x78>
   14638:	str	r8, [r0]
   1463c:	mov	r0, r6
   14640:	mov	r1, r5
   14644:	mov	r2, r4
   14648:	mov	r3, #1
   1464c:	bl	12c50 <table_notify@@Base>
   14650:	mov	r7, #0
   14654:	mov	r0, r7
   14658:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001465c <table_set_ulong@@Base>:
   1465c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14660:	add	fp, sp, #24
   14664:	mov	r8, r3
   14668:	mov	r4, r2
   1466c:	mov	r5, r1
   14670:	mov	r6, r0
   14674:	bl	14c28 <table_get_cell_ptr@@Base>
   14678:	mov	r9, r0
   1467c:	mov	r0, r6
   14680:	mov	r1, r4
   14684:	bl	12d1c <table_get_col_ptr@@Base>
   14688:	ldr	r0, [r0, #4]
   1468c:	mvn	r7, #0
   14690:	cmp	r0, #13
   14694:	bne	146d4 <table_set_ulong@@Base+0x78>
   14698:	ldr	r0, [r9]
   1469c:	cmp	r0, #0
   146a0:	bne	146b8 <table_set_ulong@@Base+0x5c>
   146a4:	mov	r0, #4
   146a8:	bl	12004 <malloc@plt>
   146ac:	cmp	r0, #0
   146b0:	str	r0, [r9]
   146b4:	beq	146d4 <table_set_ulong@@Base+0x78>
   146b8:	str	r8, [r0]
   146bc:	mov	r0, r6
   146c0:	mov	r1, r5
   146c4:	mov	r2, r4
   146c8:	mov	r3, #1
   146cc:	bl	12c50 <table_notify@@Base>
   146d0:	mov	r7, #0
   146d4:	mov	r0, r7
   146d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146dc <table_set_llong@@Base>:
   146dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146e0:	add	fp, sp, #24
   146e4:	mov	r4, r2
   146e8:	mov	r8, r1
   146ec:	mov	r6, r0
   146f0:	bl	14c28 <table_get_cell_ptr@@Base>
   146f4:	mov	r5, r0
   146f8:	mov	r0, r6
   146fc:	mov	r1, r4
   14700:	bl	12d1c <table_get_col_ptr@@Base>
   14704:	ldr	r0, [r0, #4]
   14708:	mvn	r7, #0
   1470c:	cmp	r0, #14
   14710:	bne	1475c <table_set_llong@@Base+0x80>
   14714:	ldr	r0, [r5]
   14718:	cmp	r0, #0
   1471c:	bne	14734 <table_set_llong@@Base+0x58>
   14720:	mov	r0, #8
   14724:	bl	12004 <malloc@plt>
   14728:	cmp	r0, #0
   1472c:	str	r0, [r5]
   14730:	beq	1475c <table_set_llong@@Base+0x80>
   14734:	ldr	r1, [fp, #12]
   14738:	ldr	r2, [fp, #8]
   1473c:	mov	r3, #1
   14740:	str	r2, [r0]
   14744:	str	r1, [r0, #4]
   14748:	mov	r0, r6
   1474c:	mov	r1, r8
   14750:	mov	r2, r4
   14754:	bl	12c50 <table_notify@@Base>
   14758:	mov	r7, #0
   1475c:	mov	r0, r7
   14760:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014764 <table_set_ullong@@Base>:
   14764:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14768:	add	fp, sp, #24
   1476c:	mov	r4, r2
   14770:	mov	r8, r1
   14774:	mov	r6, r0
   14778:	bl	14c28 <table_get_cell_ptr@@Base>
   1477c:	mov	r5, r0
   14780:	mov	r0, r6
   14784:	mov	r1, r4
   14788:	bl	12d1c <table_get_col_ptr@@Base>
   1478c:	ldr	r0, [r0, #4]
   14790:	mvn	r7, #0
   14794:	cmp	r0, #15
   14798:	bne	147e4 <table_set_ullong@@Base+0x80>
   1479c:	ldr	r0, [r5]
   147a0:	cmp	r0, #0
   147a4:	bne	147bc <table_set_ullong@@Base+0x58>
   147a8:	mov	r0, #8
   147ac:	bl	12004 <malloc@plt>
   147b0:	cmp	r0, #0
   147b4:	str	r0, [r5]
   147b8:	beq	147e4 <table_set_ullong@@Base+0x80>
   147bc:	ldr	r1, [fp, #12]
   147c0:	ldr	r2, [fp, #8]
   147c4:	mov	r3, #1
   147c8:	str	r2, [r0]
   147cc:	str	r1, [r0, #4]
   147d0:	mov	r0, r6
   147d4:	mov	r1, r8
   147d8:	mov	r2, r4
   147dc:	bl	12c50 <table_notify@@Base>
   147e0:	mov	r7, #0
   147e4:	mov	r0, r7
   147e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147ec <table_set_float@@Base>:
   147ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147f0:	add	fp, sp, #24
   147f4:	vpush	{d8}
   147f8:	vmov.f32	s16, s0
   147fc:	mov	r4, r2
   14800:	mov	r8, r1
   14804:	mov	r6, r0
   14808:	bl	14c28 <table_get_cell_ptr@@Base>
   1480c:	mov	r5, r0
   14810:	mov	r0, r6
   14814:	mov	r1, r4
   14818:	bl	12d1c <table_get_col_ptr@@Base>
   1481c:	ldr	r0, [r0, #4]
   14820:	mvn	r7, #0
   14824:	cmp	r0, #16
   14828:	bne	1486c <table_set_float@@Base+0x80>
   1482c:	ldr	r0, [r5]
   14830:	cmp	r0, #0
   14834:	bne	1484c <table_set_float@@Base+0x60>
   14838:	mov	r0, #4
   1483c:	bl	12004 <malloc@plt>
   14840:	cmp	r0, #0
   14844:	str	r0, [r5]
   14848:	beq	1486c <table_set_float@@Base+0x80>
   1484c:	vmov	r1, s16
   14850:	mov	r2, r4
   14854:	mov	r3, #1
   14858:	str	r1, [r0]
   1485c:	mov	r0, r6
   14860:	mov	r1, r8
   14864:	bl	12c50 <table_notify@@Base>
   14868:	mov	r7, #0
   1486c:	mov	r0, r7
   14870:	vpop	{d8}
   14874:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014878 <table_set_double@@Base>:
   14878:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1487c:	add	fp, sp, #24
   14880:	vpush	{d8}
   14884:	vorr	d8, d0, d0
   14888:	mov	r4, r2
   1488c:	mov	r5, r1
   14890:	mov	r6, r0
   14894:	bl	14c28 <table_get_cell_ptr@@Base>
   14898:	mov	r8, r0
   1489c:	mov	r0, r6
   148a0:	mov	r1, r4
   148a4:	bl	12d1c <table_get_col_ptr@@Base>
   148a8:	ldr	r0, [r0, #4]
   148ac:	mvn	r7, #0
   148b0:	cmp	r0, #17
   148b4:	bne	148f4 <table_set_double@@Base+0x7c>
   148b8:	ldr	r0, [r8]
   148bc:	cmp	r0, #0
   148c0:	bne	148d8 <table_set_double@@Base+0x60>
   148c4:	mov	r0, #8
   148c8:	bl	12004 <malloc@plt>
   148cc:	cmp	r0, #0
   148d0:	str	r0, [r8]
   148d4:	beq	148f4 <table_set_double@@Base+0x7c>
   148d8:	vst1.8	{d8}, [r0]
   148dc:	mov	r0, r6
   148e0:	mov	r1, r5
   148e4:	mov	r2, r4
   148e8:	mov	r3, #1
   148ec:	bl	12c50 <table_notify@@Base>
   148f0:	mov	r7, #0
   148f4:	mov	r0, r7
   148f8:	vpop	{d8}
   148fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014900 <table_set_ldouble@@Base>:
   14900:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14904:	add	fp, sp, #24
   14908:	vpush	{d8}
   1490c:	vorr	d8, d0, d0
   14910:	mov	r4, r2
   14914:	mov	r5, r1
   14918:	mov	r6, r0
   1491c:	bl	14c28 <table_get_cell_ptr@@Base>
   14920:	mov	r8, r0
   14924:	mov	r0, r6
   14928:	mov	r1, r4
   1492c:	bl	12d1c <table_get_col_ptr@@Base>
   14930:	ldr	r0, [r0, #4]
   14934:	mvn	r7, #0
   14938:	cmp	r0, #18
   1493c:	bne	1497c <table_set_ldouble@@Base+0x7c>
   14940:	ldr	r0, [r8]
   14944:	cmp	r0, #0
   14948:	bne	14960 <table_set_ldouble@@Base+0x60>
   1494c:	mov	r0, #8
   14950:	bl	12004 <malloc@plt>
   14954:	cmp	r0, #0
   14958:	str	r0, [r8]
   1495c:	beq	1497c <table_set_ldouble@@Base+0x7c>
   14960:	vst1.8	{d8}, [r0]
   14964:	mov	r0, r6
   14968:	mov	r1, r5
   1496c:	mov	r2, r4
   14970:	mov	r3, #1
   14974:	bl	12c50 <table_notify@@Base>
   14978:	mov	r7, #0
   1497c:	mov	r0, r7
   14980:	vpop	{d8}
   14984:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014988 <table_set_string@@Base>:
   14988:	push	{fp, lr}
   1498c:	mov	fp, sp
   14990:	sub	sp, sp, #8
   14994:	mov	ip, #21
   14998:	str	ip, [sp]
   1499c:	bl	13c30 <table_set@@Base>
   149a0:	mov	sp, fp
   149a4:	pop	{fp, pc}

000149a8 <table_set_char@@Base>:
   149a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149ac:	add	fp, sp, #24
   149b0:	mov	r8, r3
   149b4:	mov	r4, r2
   149b8:	mov	r9, r1
   149bc:	mov	r6, r0
   149c0:	bl	14c28 <table_get_cell_ptr@@Base>
   149c4:	mov	r5, r0
   149c8:	mov	r0, r6
   149cc:	mov	r1, r4
   149d0:	bl	12d1c <table_get_col_ptr@@Base>
   149d4:	ldr	r0, [r0, #4]
   149d8:	mvn	r7, #0
   149dc:	cmp	r0, #19
   149e0:	bne	14a20 <table_set_char@@Base+0x78>
   149e4:	ldr	r0, [r5]
   149e8:	cmp	r0, #0
   149ec:	bne	14a04 <table_set_char@@Base+0x5c>
   149f0:	mov	r0, #1
   149f4:	bl	12004 <malloc@plt>
   149f8:	cmp	r0, #0
   149fc:	str	r0, [r5]
   14a00:	beq	14a20 <table_set_char@@Base+0x78>
   14a04:	strb	r8, [r0]
   14a08:	mov	r0, r6
   14a0c:	mov	r1, r9
   14a10:	mov	r2, r4
   14a14:	mov	r3, #1
   14a18:	bl	12c50 <table_notify@@Base>
   14a1c:	mov	r7, #0
   14a20:	mov	r0, r7
   14a24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014a28 <table_set_uchar@@Base>:
   14a28:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14a2c:	add	fp, sp, #24
   14a30:	mov	r8, r3
   14a34:	mov	r4, r2
   14a38:	mov	r9, r1
   14a3c:	mov	r6, r0
   14a40:	bl	14c28 <table_get_cell_ptr@@Base>
   14a44:	mov	r5, r0
   14a48:	mov	r0, r6
   14a4c:	mov	r1, r4
   14a50:	bl	12d1c <table_get_col_ptr@@Base>
   14a54:	ldr	r0, [r0, #4]
   14a58:	mvn	r7, #0
   14a5c:	cmp	r0, #20
   14a60:	bne	14aa0 <table_set_uchar@@Base+0x78>
   14a64:	ldr	r0, [r5]
   14a68:	cmp	r0, #0
   14a6c:	bne	14a84 <table_set_uchar@@Base+0x5c>
   14a70:	mov	r0, #1
   14a74:	bl	12004 <malloc@plt>
   14a78:	cmp	r0, #0
   14a7c:	str	r0, [r5]
   14a80:	beq	14aa0 <table_set_uchar@@Base+0x78>
   14a84:	strb	r8, [r0]
   14a88:	mov	r0, r6
   14a8c:	mov	r1, r9
   14a90:	mov	r2, r4
   14a94:	mov	r3, #1
   14a98:	bl	12c50 <table_notify@@Base>
   14a9c:	mov	r7, #0
   14aa0:	mov	r0, r7
   14aa4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014aa8 <table_set_ptr@@Base>:
   14aa8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14aac:	add	fp, sp, #24
   14ab0:	mov	r8, r3
   14ab4:	mov	r4, r2
   14ab8:	mov	r5, r1
   14abc:	mov	r6, r0
   14ac0:	bl	14c28 <table_get_cell_ptr@@Base>
   14ac4:	mov	r7, r0
   14ac8:	mov	r0, r6
   14acc:	mov	r1, r4
   14ad0:	bl	12d1c <table_get_col_ptr@@Base>
   14ad4:	ldr	r1, [r0, #4]
   14ad8:	mvn	r0, #0
   14adc:	cmp	r1, #23
   14ae0:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14ae4:	mov	r0, r6
   14ae8:	mov	r1, r5
   14aec:	mov	r2, r4
   14af0:	mov	r3, #1
   14af4:	str	r8, [r7]
   14af8:	bl	12c50 <table_notify@@Base>
   14afc:	mov	r0, #0
   14b00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014b04 <table_column_is_valid@@Base>:
   14b04:	cmp	r0, #0
   14b08:	moveq	r0, #0
   14b0c:	bxeq	lr
   14b10:	push	{r4, sl, fp, lr}
   14b14:	add	fp, sp, #8
   14b18:	mov	r4, r1
   14b1c:	bl	12d44 <table_get_column_length@@Base>
   14b20:	cmp	r0, r4
   14b24:	mov	r0, #0
   14b28:	mov	r1, #0
   14b2c:	movwgt	r0, #1
   14b30:	cmn	r4, #1
   14b34:	movwgt	r1, #1
   14b38:	and	r0, r1, r0
   14b3c:	pop	{r4, sl, fp, pc}

00014b40 <table_row_is_valid@@Base>:
   14b40:	cmp	r0, #0
   14b44:	moveq	r0, #0
   14b48:	bxeq	lr
   14b4c:	push	{r4, sl, fp, lr}
   14b50:	add	fp, sp, #8
   14b54:	mov	r4, r1
   14b58:	bl	13a68 <table_get_row_length@@Base>
   14b5c:	cmp	r0, r4
   14b60:	mov	r0, #0
   14b64:	mov	r1, #0
   14b68:	movwgt	r0, #1
   14b6c:	cmn	r4, #1
   14b70:	movwgt	r1, #1
   14b74:	and	r0, r1, r0
   14b78:	pop	{r4, sl, fp, pc}

00014b7c <table_cell_is_valid@@Base>:
   14b7c:	push	{r4, r5, r6, r7, fp, lr}
   14b80:	add	fp, sp, #16
   14b84:	mov	r5, #0
   14b88:	cmp	r0, #0
   14b8c:	beq	14bac <table_cell_is_valid@@Base+0x30>
   14b90:	mov	r7, r2
   14b94:	mov	r4, r1
   14b98:	mov	r6, r0
   14b9c:	bl	12d44 <table_get_column_length@@Base>
   14ba0:	cmp	r7, #0
   14ba4:	cmpge	r0, r7
   14ba8:	bgt	14bb4 <table_cell_is_valid@@Base+0x38>
   14bac:	mov	r0, r5
   14bb0:	pop	{r4, r5, r6, r7, fp, pc}
   14bb4:	mov	r0, r6
   14bb8:	bl	13a68 <table_get_row_length@@Base>
   14bbc:	cmp	r0, r4
   14bc0:	mov	r0, #0
   14bc4:	mov	r1, #0
   14bc8:	movwgt	r0, #1
   14bcc:	cmn	r4, #1
   14bd0:	movwgt	r1, #1
   14bd4:	and	r5, r1, r0
   14bd8:	mov	r0, r5
   14bdc:	pop	{r4, r5, r6, r7, fp, pc}

00014be0 <table_cell_has_value@@Base>:
   14be0:	push	{fp, lr}
   14be4:	mov	fp, sp
   14be8:	bl	14c28 <table_get_cell_ptr@@Base>
   14bec:	cmp	r0, #0
   14bf0:	moveq	r0, #0
   14bf4:	popeq	{fp, pc}
   14bf8:	ldr	r0, [r0]
   14bfc:	cmp	r0, #0
   14c00:	movwne	r0, #1
   14c04:	pop	{fp, pc}

00014c08 <table_cell_init@@Base>:
   14c08:	push	{r4, sl, fp, lr}
   14c0c:	add	fp, sp, #8
   14c10:	mov	r4, r2
   14c14:	bl	13a04 <table_get_row_ptr@@Base>
   14c18:	ldr	r0, [r0]
   14c1c:	mov	r1, #0
   14c20:	str	r1, [r0, r4, lsl #2]
   14c24:	pop	{r4, sl, fp, pc}

00014c28 <table_get_cell_ptr@@Base>:
   14c28:	push	{r4, sl, fp, lr}
   14c2c:	add	fp, sp, #8
   14c30:	mov	r4, r2
   14c34:	bl	13a04 <table_get_row_ptr@@Base>
   14c38:	ldr	r0, [r0]
   14c3c:	add	r0, r0, r4, lsl #2
   14c40:	pop	{r4, sl, fp, pc}

00014c44 <table_cell_destroy@@Base>:
   14c44:	push	{r4, r5, r6, sl, fp, lr}
   14c48:	add	fp, sp, #16
   14c4c:	mov	r5, r1
   14c50:	mov	r1, r2
   14c54:	mov	r4, r2
   14c58:	mov	r6, r0
   14c5c:	bl	12db8 <table_get_column_data_type@@Base>
   14c60:	cmp	r0, #23
   14c64:	popeq	{r4, r5, r6, sl, fp, pc}
   14c68:	mov	r0, r6
   14c6c:	mov	r1, r5
   14c70:	bl	13a04 <table_get_row_ptr@@Base>
   14c74:	ldr	r0, [r0]
   14c78:	ldr	r0, [r0, r4, lsl #2]
   14c7c:	cmp	r0, #0
   14c80:	beq	14c8c <table_cell_destroy@@Base+0x48>
   14c84:	pop	{r4, r5, r6, sl, fp, lr}
   14c88:	b	11fd4 <free@plt>
   14c8c:	pop	{r4, r5, r6, sl, fp, pc}

00014c90 <table_cell_to_buffer@@Base>:
   14c90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c94:	add	fp, sp, #24
   14c98:	sub	sp, sp, #8
   14c9c:	mov	r7, r1
   14ca0:	mov	r1, r2
   14ca4:	mov	r5, r3
   14ca8:	mov	r6, r2
   14cac:	mov	r4, r0
   14cb0:	bl	12db8 <table_get_column_data_type@@Base>
   14cb4:	cmp	r0, #23
   14cb8:	bhi	14fac <table_cell_to_buffer@@Base+0x31c>
   14cbc:	add	r1, pc, #8
   14cc0:	ldr	r8, [fp, #8]
   14cc4:	ldr	r0, [r1, r0, lsl #2]
   14cc8:	add	pc, r1, r0
   14ccc:	andeq	r0, r0, r0, rrx
   14cd0:	andeq	r0, r0, r4, ror r0
   14cd4:	andeq	r0, r0, r8, lsl #1
   14cd8:	muleq	r0, ip, r0
   14cdc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14ce0:	andeq	r0, r0, r4, asr #1
   14ce4:	ldrdeq	r0, [r0], -r8
   14ce8:	andeq	r0, r0, ip, ror #1
   14cec:	andeq	r0, r0, ip, lsl #2
   14cf0:	andeq	r0, r0, r0, lsr #2
   14cf4:	andeq	r0, r0, r4, lsr r1
   14cf8:	andeq	r0, r0, r4, asr r1
   14cfc:	andeq	r0, r0, r4, ror r1
   14d00:	muleq	r0, r4, r1
   14d04:			; <UNDEFINED> instruction: 0x000001b4
   14d08:	ldrdeq	r0, [r0], -r4
   14d0c:	strdeq	r0, [r0], -r4
   14d10:	andeq	r0, r0, r8, lsl r2
   14d14:	andeq	r0, r0, r8, lsr r2
   14d18:	andeq	r0, r0, r4, ror #4
   14d1c:	andeq	r0, r0, r8, ror r2
   14d20:	muleq	r0, r8, r2
   14d24:			; <UNDEFINED> instruction: 0x000002b8
   14d28:	andeq	r0, r0, ip, ror #5
   14d2c:	mov	r0, r4
   14d30:	mov	r1, r7
   14d34:	mov	r2, r6
   14d38:	bl	137c0 <table_get_int@@Base>
   14d3c:	b	14f94 <table_cell_to_buffer@@Base+0x304>
   14d40:	mov	r0, r4
   14d44:	mov	r1, r7
   14d48:	mov	r2, r6
   14d4c:	bl	137d8 <table_get_uint@@Base>
   14d50:	b	14dc8 <table_cell_to_buffer@@Base+0x138>
   14d54:	mov	r0, r4
   14d58:	mov	r1, r7
   14d5c:	mov	r2, r6
   14d60:	bl	137f0 <table_get_int8@@Base>
   14d64:	b	14f94 <table_cell_to_buffer@@Base+0x304>
   14d68:	mov	r0, r4
   14d6c:	mov	r1, r7
   14d70:	mov	r2, r6
   14d74:	bl	13808 <table_get_uint8@@Base>
   14d78:	b	14dc8 <table_cell_to_buffer@@Base+0x138>
   14d7c:	mov	r0, r4
   14d80:	mov	r1, r7
   14d84:	mov	r2, r6
   14d88:	bl	13820 <table_get_int16@@Base>
   14d8c:	b	14f94 <table_cell_to_buffer@@Base+0x304>
   14d90:	mov	r0, r4
   14d94:	mov	r1, r7
   14d98:	mov	r2, r6
   14d9c:	bl	13838 <table_get_uint16@@Base>
   14da0:	b	14dc8 <table_cell_to_buffer@@Base+0x138>
   14da4:	mov	r0, r4
   14da8:	mov	r1, r7
   14dac:	mov	r2, r6
   14db0:	bl	13850 <table_get_int32@@Base>
   14db4:	b	14f94 <table_cell_to_buffer@@Base+0x304>
   14db8:	mov	r0, r4
   14dbc:	mov	r1, r7
   14dc0:	mov	r2, r6
   14dc4:	bl	13868 <table_get_uint32@@Base>
   14dc8:	ldr	r2, [pc, #524]	; 14fdc <table_cell_to_buffer@@Base+0x34c>
   14dcc:	mov	r3, r0
   14dd0:	add	r2, pc, r2
   14dd4:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14dd8:	mov	r0, r4
   14ddc:	mov	r1, r7
   14de0:	mov	r2, r6
   14de4:	bl	13880 <table_get_int64@@Base>
   14de8:	b	14e90 <table_cell_to_buffer@@Base+0x200>
   14dec:	mov	r0, r4
   14df0:	mov	r1, r7
   14df4:	mov	r2, r6
   14df8:	bl	13898 <table_get_uint64@@Base>
   14dfc:	b	14eb0 <table_cell_to_buffer@@Base+0x220>
   14e00:	mov	r0, r4
   14e04:	mov	r1, r7
   14e08:	mov	r2, r6
   14e0c:	bl	138b0 <table_get_short@@Base>
   14e10:	ldr	r2, [pc, #464]	; 14fe8 <table_cell_to_buffer@@Base+0x358>
   14e14:	mov	r3, r0
   14e18:	add	r2, pc, r2
   14e1c:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14e20:	mov	r0, r4
   14e24:	mov	r1, r7
   14e28:	mov	r2, r6
   14e2c:	bl	138c8 <table_get_ushort@@Base>
   14e30:	ldr	r2, [pc, #436]	; 14fec <table_cell_to_buffer@@Base+0x35c>
   14e34:	mov	r3, r0
   14e38:	add	r2, pc, r2
   14e3c:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14e40:	mov	r0, r4
   14e44:	mov	r1, r7
   14e48:	mov	r2, r6
   14e4c:	bl	138e0 <table_get_long@@Base>
   14e50:	ldr	r2, [pc, #408]	; 14ff0 <table_cell_to_buffer@@Base+0x360>
   14e54:	mov	r3, r0
   14e58:	add	r2, pc, r2
   14e5c:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14e60:	mov	r0, r4
   14e64:	mov	r1, r7
   14e68:	mov	r2, r6
   14e6c:	bl	138f8 <table_get_ulong@@Base>
   14e70:	ldr	r2, [pc, #380]	; 14ff4 <table_cell_to_buffer@@Base+0x364>
   14e74:	mov	r3, r0
   14e78:	add	r2, pc, r2
   14e7c:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14e80:	mov	r0, r4
   14e84:	mov	r1, r7
   14e88:	mov	r2, r6
   14e8c:	bl	13910 <table_get_llong@@Base>
   14e90:	stm	sp, {r0, r1}
   14e94:	ldr	r2, [pc, #324]	; 14fe0 <table_cell_to_buffer@@Base+0x350>
   14e98:	add	r2, pc, r2
   14e9c:	b	14f20 <table_cell_to_buffer@@Base+0x290>
   14ea0:	mov	r0, r4
   14ea4:	mov	r1, r7
   14ea8:	mov	r2, r6
   14eac:	bl	13928 <table_get_ullong@@Base>
   14eb0:	stm	sp, {r0, r1}
   14eb4:	ldr	r2, [pc, #296]	; 14fe4 <table_cell_to_buffer@@Base+0x354>
   14eb8:	add	r2, pc, r2
   14ebc:	b	14f20 <table_cell_to_buffer@@Base+0x290>
   14ec0:	mov	r0, r4
   14ec4:	mov	r1, r7
   14ec8:	mov	r2, r6
   14ecc:	bl	13940 <table_get_float@@Base>
   14ed0:	vcvt.f64.f32	d16, s0
   14ed4:	vstr	d16, [sp]
   14ed8:	ldr	r2, [pc, #284]	; 14ffc <table_cell_to_buffer@@Base+0x36c>
   14edc:	add	r2, pc, r2
   14ee0:	b	14f20 <table_cell_to_buffer@@Base+0x290>
   14ee4:	mov	r0, r4
   14ee8:	mov	r1, r7
   14eec:	mov	r2, r6
   14ef0:	bl	13958 <table_get_double@@Base>
   14ef4:	vstr	d0, [sp]
   14ef8:	ldr	r2, [pc, #256]	; 15000 <table_cell_to_buffer@@Base+0x370>
   14efc:	add	r2, pc, r2
   14f00:	b	14f20 <table_cell_to_buffer@@Base+0x290>
   14f04:	mov	r0, r4
   14f08:	mov	r1, r7
   14f0c:	mov	r2, r6
   14f10:	bl	13970 <table_get_ldouble@@Base>
   14f14:	vstr	d0, [sp]
   14f18:	ldr	r2, [pc, #228]	; 15004 <table_cell_to_buffer@@Base+0x374>
   14f1c:	add	r2, pc, r2
   14f20:	mov	r0, r5
   14f24:	mov	r1, r8
   14f28:	bl	12040 <snprintf@plt>
   14f2c:	b	14fac <table_cell_to_buffer@@Base+0x31c>
   14f30:	mov	r0, r4
   14f34:	mov	r1, r7
   14f38:	mov	r2, r6
   14f3c:	bl	13988 <table_get_char@@Base>
   14f40:	b	14f54 <table_cell_to_buffer@@Base+0x2c4>
   14f44:	mov	r0, r4
   14f48:	mov	r1, r7
   14f4c:	mov	r2, r6
   14f50:	bl	139a0 <table_get_uchar@@Base>
   14f54:	ldr	r2, [pc, #172]	; 15008 <table_cell_to_buffer@@Base+0x378>
   14f58:	mov	r3, r0
   14f5c:	add	r2, pc, r2
   14f60:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14f64:	mov	r0, r4
   14f68:	mov	r1, r7
   14f6c:	mov	r2, r6
   14f70:	bl	139b8 <table_get_string@@Base>
   14f74:	ldr	r2, [pc, #124]	; 14ff8 <table_cell_to_buffer@@Base+0x368>
   14f78:	mov	r3, r0
   14f7c:	add	r2, pc, r2
   14f80:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14f84:	mov	r0, r4
   14f88:	mov	r1, r7
   14f8c:	mov	r2, r6
   14f90:	bl	137a8 <table_get_bool@@Base>
   14f94:	ldr	r2, [pc, #60]	; 14fd8 <table_cell_to_buffer@@Base+0x348>
   14f98:	mov	r3, r0
   14f9c:	add	r2, pc, r2
   14fa0:	mov	r0, r5
   14fa4:	mov	r1, r8
   14fa8:	bl	12040 <snprintf@plt>
   14fac:	mov	r0, #0
   14fb0:	sub	sp, fp, #24
   14fb4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14fb8:	mov	r0, r4
   14fbc:	mov	r1, r7
   14fc0:	mov	r2, r6
   14fc4:	bl	139cc <table_get_ptr@@Base>
   14fc8:	ldr	r2, [pc, #60]	; 1500c <table_cell_to_buffer@@Base+0x37c>
   14fcc:	mov	r3, r0
   14fd0:	add	r2, pc, r2
   14fd4:	b	14fa0 <table_cell_to_buffer@@Base+0x310>
   14fd8:	andeq	r0, r0, r2, asr #16
   14fdc:	andeq	r0, r0, r1, lsl sl
   14fe0:	andeq	r0, r0, ip, asr #18
   14fe4:	andeq	r0, r0, r1, lsr r9
   14fe8:	ldrdeq	r0, [r0], -r6
   14fec:			; <UNDEFINED> instruction: 0x000009ba
   14ff0:	muleq	r0, lr, r9
   14ff4:	andeq	r0, r0, r2, lsl #19
   14ff8:	andeq	r0, r0, r2, lsl #17
   14ffc:	andeq	r0, r0, r5, lsr #18
   15000:	andeq	r0, r0, r8, lsl #18
   15004:	andeq	r0, r0, ip, ror #17
   15008:			; <UNDEFINED> instruction: 0x000008b0
   1500c:	andeq	r0, r0, pc, lsr r8

00015010 <table_cell_from_buffer@@Base>:
   15010:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15014:	add	fp, sp, #24
   15018:	sub	sp, sp, #264	; 0x108
   1501c:	mov	r5, r1
   15020:	mov	r1, r2
   15024:	mov	r7, r3
   15028:	mov	r4, r2
   1502c:	mov	r6, r0
   15030:	bl	12db8 <table_get_column_data_type@@Base>
   15034:	cmp	r0, #23
   15038:	bhi	15610 <table_cell_from_buffer@@Base+0x600>
   1503c:	add	r1, pc, #4
   15040:	ldr	r0, [r1, r0, lsl #2]
   15044:	add	pc, r1, r0
   15048:	andeq	r0, r0, r0, rrx
   1504c:	muleq	r0, r8, r0
   15050:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15054:	andeq	r0, r0, r8, lsl #2
   15058:	andeq	r0, r0, r0, asr #2
   1505c:	andeq	r0, r0, r8, ror r1
   15060:			; <UNDEFINED> instruction: 0x000001b0
   15064:	andeq	r0, r0, r8, ror #3
   15068:	andeq	r0, r0, r0, lsr #4
   1506c:	andeq	r0, r0, r0, ror #4
   15070:	andeq	r0, r0, r0, lsr #5
   15074:	ldrdeq	r0, [r0], -r8
   15078:	andeq	r0, r0, r0, lsl r3
   1507c:	andeq	r0, r0, r8, asr #6
   15080:	andeq	r0, r0, r0, lsl #7
   15084:	andeq	r0, r0, r0, asr #7
   15088:	andeq	r0, r0, r0, lsl #8
   1508c:	andeq	r0, r0, r8, lsr r4
   15090:	andeq	r0, r0, r0, ror r4
   15094:	andeq	r0, r0, r8, lsr #9
   15098:	andeq	r0, r0, r0, ror #9
   1509c:	andeq	r0, r0, r8, lsl r5
   150a0:	andeq	r0, r0, r0, asr r5
   150a4:	muleq	r0, r4, r5
   150a8:	ldr	r1, [pc, #1420]	; 1563c <table_cell_from_buffer@@Base+0x62c>
   150ac:	add	r2, sp, #8
   150b0:	mov	r0, r7
   150b4:	add	r1, pc, r1
   150b8:	bl	1204c <__isoc99_sscanf@plt>
   150bc:	mvn	r7, #0
   150c0:	cmp	r0, #1
   150c4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   150c8:	ldr	r3, [sp, #8]
   150cc:	mov	r0, r6
   150d0:	mov	r1, r5
   150d4:	mov	r2, r4
   150d8:	bl	13fcc <table_set_int@@Base>
   150dc:	b	15610 <table_cell_from_buffer@@Base+0x600>
   150e0:	ldr	r1, [pc, #1368]	; 15640 <table_cell_from_buffer@@Base+0x630>
   150e4:	add	r2, sp, #8
   150e8:	mov	r0, r7
   150ec:	add	r1, pc, r1
   150f0:	bl	1204c <__isoc99_sscanf@plt>
   150f4:	mvn	r7, #0
   150f8:	cmp	r0, #1
   150fc:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15100:	ldr	r3, [sp, #8]
   15104:	mov	r0, r6
   15108:	mov	r1, r5
   1510c:	mov	r2, r4
   15110:	bl	1404c <table_set_uint@@Base>
   15114:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15118:	ldr	r1, [pc, #1316]	; 15644 <table_cell_from_buffer@@Base+0x634>
   1511c:	add	r2, sp, #8
   15120:	mov	r0, r7
   15124:	add	r1, pc, r1
   15128:	bl	1204c <__isoc99_sscanf@plt>
   1512c:	mvn	r7, #0
   15130:	cmp	r0, #1
   15134:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15138:	ldrsb	r3, [sp, #8]
   1513c:	mov	r0, r6
   15140:	mov	r1, r5
   15144:	mov	r2, r4
   15148:	bl	140cc <table_set_int8@@Base>
   1514c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15150:	ldr	r1, [pc, #1264]	; 15648 <table_cell_from_buffer@@Base+0x638>
   15154:	add	r2, sp, #8
   15158:	mov	r0, r7
   1515c:	add	r1, pc, r1
   15160:	bl	1204c <__isoc99_sscanf@plt>
   15164:	mvn	r7, #0
   15168:	cmp	r0, #1
   1516c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15170:	ldrb	r3, [sp, #8]
   15174:	mov	r0, r6
   15178:	mov	r1, r5
   1517c:	mov	r2, r4
   15180:	bl	1414c <table_set_uint8@@Base>
   15184:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15188:	ldr	r1, [pc, #1212]	; 1564c <table_cell_from_buffer@@Base+0x63c>
   1518c:	add	r2, sp, #8
   15190:	mov	r0, r7
   15194:	add	r1, pc, r1
   15198:	bl	1204c <__isoc99_sscanf@plt>
   1519c:	mvn	r7, #0
   151a0:	cmp	r0, #1
   151a4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   151a8:	ldrsh	r3, [sp, #8]
   151ac:	mov	r0, r6
   151b0:	mov	r1, r5
   151b4:	mov	r2, r4
   151b8:	bl	141cc <table_set_int16@@Base>
   151bc:	b	15610 <table_cell_from_buffer@@Base+0x600>
   151c0:	ldr	r1, [pc, #1160]	; 15650 <table_cell_from_buffer@@Base+0x640>
   151c4:	add	r2, sp, #8
   151c8:	mov	r0, r7
   151cc:	add	r1, pc, r1
   151d0:	bl	1204c <__isoc99_sscanf@plt>
   151d4:	mvn	r7, #0
   151d8:	cmp	r0, #1
   151dc:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   151e0:	ldrh	r3, [sp, #8]
   151e4:	mov	r0, r6
   151e8:	mov	r1, r5
   151ec:	mov	r2, r4
   151f0:	bl	1424c <table_set_uint16@@Base>
   151f4:	b	15610 <table_cell_from_buffer@@Base+0x600>
   151f8:	ldr	r1, [pc, #1108]	; 15654 <table_cell_from_buffer@@Base+0x644>
   151fc:	add	r2, sp, #8
   15200:	mov	r0, r7
   15204:	add	r1, pc, r1
   15208:	bl	1204c <__isoc99_sscanf@plt>
   1520c:	mvn	r7, #0
   15210:	cmp	r0, #1
   15214:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15218:	ldr	r3, [sp, #8]
   1521c:	mov	r0, r6
   15220:	mov	r1, r5
   15224:	mov	r2, r4
   15228:	bl	142cc <table_set_int32@@Base>
   1522c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15230:	ldr	r1, [pc, #1056]	; 15658 <table_cell_from_buffer@@Base+0x648>
   15234:	add	r2, sp, #8
   15238:	mov	r0, r7
   1523c:	add	r1, pc, r1
   15240:	bl	1204c <__isoc99_sscanf@plt>
   15244:	mvn	r7, #0
   15248:	cmp	r0, #1
   1524c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15250:	ldr	r3, [sp, #8]
   15254:	mov	r0, r6
   15258:	mov	r1, r5
   1525c:	mov	r2, r4
   15260:	bl	1434c <table_set_uint32@@Base>
   15264:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15268:	ldr	r1, [pc, #1004]	; 1565c <table_cell_from_buffer@@Base+0x64c>
   1526c:	add	r2, sp, #8
   15270:	mov	r0, r7
   15274:	add	r1, pc, r1
   15278:	bl	1204c <__isoc99_sscanf@plt>
   1527c:	mvn	r7, #0
   15280:	cmp	r0, #1
   15284:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15288:	ldr	r0, [sp, #8]
   1528c:	ldr	r1, [sp, #12]
   15290:	mov	r2, r4
   15294:	stm	sp, {r0, r1}
   15298:	mov	r0, r6
   1529c:	mov	r1, r5
   152a0:	bl	143cc <table_set_int64@@Base>
   152a4:	b	15610 <table_cell_from_buffer@@Base+0x600>
   152a8:	ldr	r1, [pc, #944]	; 15660 <table_cell_from_buffer@@Base+0x650>
   152ac:	add	r2, sp, #8
   152b0:	mov	r0, r7
   152b4:	add	r1, pc, r1
   152b8:	bl	1204c <__isoc99_sscanf@plt>
   152bc:	mvn	r7, #0
   152c0:	cmp	r0, #1
   152c4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   152c8:	ldr	r0, [sp, #8]
   152cc:	ldr	r1, [sp, #12]
   152d0:	mov	r2, r4
   152d4:	stm	sp, {r0, r1}
   152d8:	mov	r0, r6
   152dc:	mov	r1, r5
   152e0:	bl	14454 <table_set_uint64@@Base>
   152e4:	b	15610 <table_cell_from_buffer@@Base+0x600>
   152e8:	ldr	r1, [pc, #884]	; 15664 <table_cell_from_buffer@@Base+0x654>
   152ec:	add	r2, sp, #8
   152f0:	mov	r0, r7
   152f4:	add	r1, pc, r1
   152f8:	bl	1204c <__isoc99_sscanf@plt>
   152fc:	mvn	r7, #0
   15300:	cmp	r0, #1
   15304:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15308:	ldrsh	r3, [sp, #8]
   1530c:	mov	r0, r6
   15310:	mov	r1, r5
   15314:	mov	r2, r4
   15318:	bl	144dc <table_set_short@@Base>
   1531c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15320:	ldr	r1, [pc, #832]	; 15668 <table_cell_from_buffer@@Base+0x658>
   15324:	add	r2, sp, #8
   15328:	mov	r0, r7
   1532c:	add	r1, pc, r1
   15330:	bl	1204c <__isoc99_sscanf@plt>
   15334:	mvn	r7, #0
   15338:	cmp	r0, #1
   1533c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15340:	ldrh	r3, [sp, #8]
   15344:	mov	r0, r6
   15348:	mov	r1, r5
   1534c:	mov	r2, r4
   15350:	bl	1455c <table_set_ushort@@Base>
   15354:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15358:	ldr	r1, [pc, #780]	; 1566c <table_cell_from_buffer@@Base+0x65c>
   1535c:	add	r2, sp, #8
   15360:	mov	r0, r7
   15364:	add	r1, pc, r1
   15368:	bl	1204c <__isoc99_sscanf@plt>
   1536c:	mvn	r7, #0
   15370:	cmp	r0, #1
   15374:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15378:	ldr	r3, [sp, #8]
   1537c:	mov	r0, r6
   15380:	mov	r1, r5
   15384:	mov	r2, r4
   15388:	bl	145dc <table_set_long@@Base>
   1538c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15390:	ldr	r1, [pc, #728]	; 15670 <table_cell_from_buffer@@Base+0x660>
   15394:	add	r2, sp, #8
   15398:	mov	r0, r7
   1539c:	add	r1, pc, r1
   153a0:	bl	1204c <__isoc99_sscanf@plt>
   153a4:	mvn	r7, #0
   153a8:	cmp	r0, #1
   153ac:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   153b0:	ldr	r3, [sp, #8]
   153b4:	mov	r0, r6
   153b8:	mov	r1, r5
   153bc:	mov	r2, r4
   153c0:	bl	1465c <table_set_ulong@@Base>
   153c4:	b	15610 <table_cell_from_buffer@@Base+0x600>
   153c8:	ldr	r1, [pc, #676]	; 15674 <table_cell_from_buffer@@Base+0x664>
   153cc:	add	r2, sp, #8
   153d0:	mov	r0, r7
   153d4:	add	r1, pc, r1
   153d8:	bl	1204c <__isoc99_sscanf@plt>
   153dc:	mvn	r7, #0
   153e0:	cmp	r0, #1
   153e4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   153e8:	ldr	r0, [sp, #8]
   153ec:	ldr	r1, [sp, #12]
   153f0:	mov	r2, r4
   153f4:	stm	sp, {r0, r1}
   153f8:	mov	r0, r6
   153fc:	mov	r1, r5
   15400:	bl	146dc <table_set_llong@@Base>
   15404:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15408:	ldr	r1, [pc, #616]	; 15678 <table_cell_from_buffer@@Base+0x668>
   1540c:	add	r2, sp, #8
   15410:	mov	r0, r7
   15414:	add	r1, pc, r1
   15418:	bl	1204c <__isoc99_sscanf@plt>
   1541c:	mvn	r7, #0
   15420:	cmp	r0, #1
   15424:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15428:	ldr	r0, [sp, #8]
   1542c:	ldr	r1, [sp, #12]
   15430:	mov	r2, r4
   15434:	stm	sp, {r0, r1}
   15438:	mov	r0, r6
   1543c:	mov	r1, r5
   15440:	bl	14764 <table_set_ullong@@Base>
   15444:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15448:	ldr	r1, [pc, #560]	; 15680 <table_cell_from_buffer@@Base+0x670>
   1544c:	add	r2, sp, #8
   15450:	mov	r0, r7
   15454:	add	r1, pc, r1
   15458:	bl	1204c <__isoc99_sscanf@plt>
   1545c:	mvn	r7, #0
   15460:	cmp	r0, #1
   15464:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15468:	vldr	s0, [sp, #8]
   1546c:	mov	r0, r6
   15470:	mov	r1, r5
   15474:	mov	r2, r4
   15478:	bl	147ec <table_set_float@@Base>
   1547c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15480:	ldr	r1, [pc, #508]	; 15684 <table_cell_from_buffer@@Base+0x674>
   15484:	add	r2, sp, #8
   15488:	mov	r0, r7
   1548c:	add	r1, pc, r1
   15490:	bl	1204c <__isoc99_sscanf@plt>
   15494:	mvn	r7, #0
   15498:	cmp	r0, #1
   1549c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   154a0:	vldr	d0, [sp, #8]
   154a4:	mov	r0, r6
   154a8:	mov	r1, r5
   154ac:	mov	r2, r4
   154b0:	bl	14878 <table_set_double@@Base>
   154b4:	b	15610 <table_cell_from_buffer@@Base+0x600>
   154b8:	ldr	r1, [pc, #456]	; 15688 <table_cell_from_buffer@@Base+0x678>
   154bc:	add	r2, sp, #8
   154c0:	mov	r0, r7
   154c4:	add	r1, pc, r1
   154c8:	bl	1204c <__isoc99_sscanf@plt>
   154cc:	mvn	r7, #0
   154d0:	cmp	r0, #1
   154d4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   154d8:	vldr	d0, [sp, #8]
   154dc:	mov	r0, r6
   154e0:	mov	r1, r5
   154e4:	mov	r2, r4
   154e8:	bl	14900 <table_set_ldouble@@Base>
   154ec:	b	15610 <table_cell_from_buffer@@Base+0x600>
   154f0:	ldr	r1, [pc, #408]	; 15690 <table_cell_from_buffer@@Base+0x680>
   154f4:	add	r2, sp, #8
   154f8:	mov	r0, r7
   154fc:	add	r1, pc, r1
   15500:	bl	1204c <__isoc99_sscanf@plt>
   15504:	mvn	r7, #0
   15508:	cmp	r0, #1
   1550c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15510:	ldrb	r3, [sp, #8]
   15514:	mov	r0, r6
   15518:	mov	r1, r5
   1551c:	mov	r2, r4
   15520:	bl	149a8 <table_set_char@@Base>
   15524:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15528:	ldr	r1, [pc, #356]	; 15694 <table_cell_from_buffer@@Base+0x684>
   1552c:	add	r2, sp, #8
   15530:	mov	r0, r7
   15534:	add	r1, pc, r1
   15538:	bl	1204c <__isoc99_sscanf@plt>
   1553c:	mvn	r7, #0
   15540:	cmp	r0, #1
   15544:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15548:	ldrb	r3, [sp, #8]
   1554c:	mov	r0, r6
   15550:	mov	r1, r5
   15554:	mov	r2, r4
   15558:	bl	14a28 <table_set_uchar@@Base>
   1555c:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15560:	ldr	r1, [pc, #276]	; 1567c <table_cell_from_buffer@@Base+0x66c>
   15564:	add	r2, sp, #8
   15568:	mov	r0, r7
   1556c:	add	r1, pc, r1
   15570:	bl	1204c <__isoc99_sscanf@plt>
   15574:	mvn	r7, #0
   15578:	cmp	r0, #1
   1557c:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   15580:	add	r3, sp, #8
   15584:	mov	r0, r6
   15588:	mov	r1, r5
   1558c:	mov	r2, r4
   15590:	bl	14988 <table_set_string@@Base>
   15594:	b	15610 <table_cell_from_buffer@@Base+0x600>
   15598:	ldr	r1, [pc, #236]	; 1568c <table_cell_from_buffer@@Base+0x67c>
   1559c:	add	r2, sp, #8
   155a0:	mov	r0, r7
   155a4:	add	r1, pc, r1
   155a8:	bl	1204c <__isoc99_sscanf@plt>
   155ac:	mvn	r7, #0
   155b0:	cmp	r0, #1
   155b4:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   155b8:	ldr	r0, [sp, #8]
   155bc:	cmp	r0, #0
   155c0:	beq	15620 <table_cell_from_buffer@@Base+0x610>
   155c4:	mov	r0, r6
   155c8:	mov	r1, r5
   155cc:	mov	r2, r4
   155d0:	mov	r3, #1
   155d4:	bl	13f4c <table_set_bool@@Base>
   155d8:	b	15610 <table_cell_from_buffer@@Base+0x600>
   155dc:	ldr	r1, [pc, #180]	; 15698 <table_cell_from_buffer@@Base+0x688>
   155e0:	add	r2, sp, #8
   155e4:	mov	r0, r7
   155e8:	add	r1, pc, r1
   155ec:	bl	1204c <__isoc99_sscanf@plt>
   155f0:	mvn	r7, #0
   155f4:	cmp	r0, #1
   155f8:	bne	15614 <table_cell_from_buffer@@Base+0x604>
   155fc:	ldr	r3, [sp, #8]
   15600:	mov	r0, r6
   15604:	mov	r1, r5
   15608:	mov	r2, r4
   1560c:	bl	14aa8 <table_set_ptr@@Base>
   15610:	mov	r7, #0
   15614:	mov	r0, r7
   15618:	sub	sp, fp, #24
   1561c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15620:	mov	r0, r6
   15624:	mov	r1, r5
   15628:	mov	r2, r4
   1562c:	mov	r3, #0
   15630:	mov	r7, #0
   15634:	bl	13f4c <table_set_bool@@Base>
   15638:	b	15614 <table_cell_from_buffer@@Base+0x604>
   1563c:	andeq	r0, r0, sl, lsr #14
   15640:	strdeq	r0, [r0], -r5
   15644:	andeq	r0, r0, lr, ror #13
   15648:			; <UNDEFINED> instruction: 0x000006bb
   1564c:	andeq	r0, r0, sl, asr r6
   15650:	andeq	r0, r0, r6, lsr #12
   15654:	ldrdeq	r0, [r0], -sl
   15658:	andeq	r0, r0, r5, lsr #11
   1565c:	andeq	r0, r0, r0, ror r5
   15660:	andeq	r0, r0, r5, lsr r5
   15664:	strdeq	r0, [r0], -sl
   15668:	andeq	r0, r0, r6, asr #9
   1566c:	muleq	r0, r2, r4
   15670:	andeq	r0, r0, lr, asr r4
   15674:	andeq	r0, r0, r0, lsl r4
   15678:	ldrdeq	r0, [r0], -r5
   1567c:	muleq	r0, r2, r2
   15680:	andeq	r0, r0, sp, lsr #7
   15684:	andeq	r0, r0, r8, ror r3
   15688:	andeq	r0, r0, r4, asr #6
   1568c:	andeq	r0, r0, sl, lsr r2
   15690:	andeq	r0, r0, r0, lsl r3
   15694:	ldrdeq	r0, [r0], -r8
   15698:	andeq	r0, r0, r7, lsr #4

0001569c <table_cell_nullify@@Base>:
   1569c:	push	{r4, r5, fp, lr}
   156a0:	add	fp, sp, #8
   156a4:	mov	r4, r2
   156a8:	bl	13a04 <table_get_row_ptr@@Base>
   156ac:	ldr	r5, [r0]
   156b0:	ldr	r0, [r5, r4, lsl #2]
   156b4:	cmp	r0, #0
   156b8:	beq	156c8 <table_cell_nullify@@Base+0x2c>
   156bc:	bl	11fd4 <free@plt>
   156c0:	mov	r0, #0
   156c4:	str	r0, [r5, r4, lsl #2]
   156c8:	mov	r0, #0
   156cc:	pop	{r4, r5, fp, pc}

000156d0 <__libc_csu_init@@Base>:
   156d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156d4:	mov	r7, r0
   156d8:	ldr	r6, [pc, #72]	; 15728 <__libc_csu_init@@Base+0x58>
   156dc:	ldr	r5, [pc, #72]	; 1572c <__libc_csu_init@@Base+0x5c>
   156e0:	add	r6, pc, r6
   156e4:	add	r5, pc, r5
   156e8:	sub	r6, r6, r5
   156ec:	mov	r8, r1
   156f0:	mov	r9, r2
   156f4:	bl	11f9c <strcmp@plt-0x20>
   156f8:	asrs	r6, r6, #2
   156fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15700:	mov	r4, #0
   15704:	add	r4, r4, #1
   15708:	ldr	r3, [r5], #4
   1570c:	mov	r2, r9
   15710:	mov	r1, r8
   15714:	mov	r0, r7
   15718:	blx	r3
   1571c:	cmp	r6, r4
   15720:	bne	15704 <__libc_csu_init@@Base+0x34>
   15724:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15728:	andeq	r0, r1, r4, asr #15
   1572c:			; <UNDEFINED> instruction: 0x000107bc

00015730 <__libc_csu_fini@@Base>:
   15730:	bx	lr

Disassembly of section .fini:

00015734 <.fini>:
   15734:	push	{r3, lr}
   15738:	pop	{r3, pc}
