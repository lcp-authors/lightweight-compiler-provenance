
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010960 <.init>:
   10960:	push	{r3, lr}
   10964:	bl	10aec <_start@@Base+0x3c>
   10968:	pop	{r3, pc}

Disassembly of section .plt:

0001096c <strcmp@plt-0x14>:
   1096c:	push	{lr}		; (str lr, [sp, #-4]!)
   10970:	ldr	lr, [pc, #4]	; 1097c <strcmp@plt-0x4>
   10974:	add	lr, pc, lr
   10978:	ldr	pc, [lr, #8]!
   1097c:	andeq	r1, r1, r4, lsl #13

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1668]!	; 0x684

0001098c <printf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1660]!	; 0x67c

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1652]!	; 0x674

000109a4 <strdup@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1644]!	; 0x66c

000109b0 <strcpy@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1636]!	; 0x664

000109bc <puts@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1628]!	; 0x65c

000109c8 <malloc@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1620]!	; 0x654

000109d4 <__libc_start_main@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1612]!	; 0x64c

000109e0 <__gmon_start__@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1604]!	; 0x644

000109ec <strlen@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1596]!	; 0x63c

000109f8 <setvbuf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1588]!	; 0x634

00010a04 <putchar@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1580]!	; 0x62c

00010a10 <abort@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1572]!	; 0x624

Disassembly of section .text:

00010a1c <main@@Base>:
   10a1c:	ldr	r0, [pc, #124]	; 10aa0 <main@@Base+0x84>
   10a20:	mov	r3, #0
   10a24:	push	{r4, lr}
   10a28:	mov	r1, r3
   10a2c:	mov	r2, #2
   10a30:	ldr	r0, [r0]
   10a34:	bl	109f8 <setvbuf@plt>
   10a38:	ldr	r0, [pc, #100]	; 10aa4 <main@@Base+0x88>
   10a3c:	mov	r3, #0
   10a40:	mov	r1, r3
   10a44:	mov	r2, #2
   10a48:	ldr	r0, [r0]
   10a4c:	bl	109f8 <setvbuf@plt>
   10a50:	bl	10ccc <teste_lista_nova@@Base>
   10a54:	mov	r4, r0
   10a58:	bl	10d50 <teste_lista_insere@@Base>
   10a5c:	add	r4, r4, r0
   10a60:	bl	10ffc <teste_lista_remove@@Base>
   10a64:	add	r4, r4, r0
   10a68:	bl	11164 <teste_lista_pesquisa@@Base>
   10a6c:	add	r4, r4, r0
   10a70:	bl	112ac <teste_lista_ordena@@Base>
   10a74:	add	r4, r4, r0
   10a78:	bl	11468 <teste_lista_inverte@@Base>
   10a7c:	adds	r1, r4, r0
   10a80:	bne	10a94 <main@@Base+0x78>
   10a84:	ldr	r0, [pc, #28]	; 10aa8 <main@@Base+0x8c>
   10a88:	bl	109bc <puts@plt>
   10a8c:	mov	r0, #0
   10a90:	pop	{r4, pc}
   10a94:	ldr	r0, [pc, #16]	; 10aac <main@@Base+0x90>
   10a98:	bl	1098c <printf@plt>
   10a9c:	b	10a8c <main@@Base+0x70>
   10aa0:	andeq	r2, r2, r4, asr r0
   10aa4:	andeq	r2, r2, r0, asr r0
   10aa8:	andeq	r1, r1, r0, asr #29
   10aac:	ldrdeq	r1, [r1], -r8

00010ab0 <_start@@Base>:
   10ab0:	mov	fp, #0
   10ab4:	mov	lr, #0
   10ab8:	pop	{r1}		; (ldr r1, [sp], #4)
   10abc:	mov	r2, sp
   10ac0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac8:	ldr	ip, [pc, #16]	; 10ae0 <_start@@Base+0x30>
   10acc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ad0:	ldr	r0, [pc, #12]	; 10ae4 <_start@@Base+0x34>
   10ad4:	ldr	r3, [pc, #12]	; 10ae8 <_start@@Base+0x38>
   10ad8:	bl	109d4 <__libc_start_main@plt>
   10adc:	bl	10a10 <abort@plt>
   10ae0:	andeq	r1, r1, r4, ror #19
   10ae4:	andeq	r0, r1, ip, lsl sl
   10ae8:	andeq	r1, r1, r4, lsl #19
   10aec:	ldr	r3, [pc, #20]	; 10b08 <_start@@Base+0x58>
   10af0:	ldr	r2, [pc, #20]	; 10b0c <_start@@Base+0x5c>
   10af4:	add	r3, pc, r3
   10af8:	ldr	r2, [r3, r2]
   10afc:	cmp	r2, #0
   10b00:	bxeq	lr
   10b04:	b	109e0 <__gmon_start__@plt>
   10b08:	andeq	r1, r1, r4, lsl #10
   10b0c:	andeq	r0, r0, r0, asr #32
   10b10:	ldr	r3, [pc, #28]	; 10b34 <_start@@Base+0x84>
   10b14:	ldr	r0, [pc, #28]	; 10b38 <_start@@Base+0x88>
   10b18:	sub	r3, r3, r0
   10b1c:	cmp	r3, #6
   10b20:	bxls	lr
   10b24:	ldr	r3, [pc, #16]	; 10b3c <_start@@Base+0x8c>
   10b28:	cmp	r3, #0
   10b2c:	bxeq	lr
   10b30:	bx	r3
   10b34:	andeq	r2, r2, pc, asr #32
   10b38:	andeq	r2, r2, ip, asr #32
   10b3c:	andeq	r0, r0, r0
   10b40:	ldr	r1, [pc, #36]	; 10b6c <_start@@Base+0xbc>
   10b44:	ldr	r0, [pc, #36]	; 10b70 <_start@@Base+0xc0>
   10b48:	sub	r1, r1, r0
   10b4c:	asr	r1, r1, #2
   10b50:	add	r1, r1, r1, lsr #31
   10b54:	asrs	r1, r1, #1
   10b58:	bxeq	lr
   10b5c:	ldr	r3, [pc, #16]	; 10b74 <_start@@Base+0xc4>
   10b60:	cmp	r3, #0
   10b64:	bxeq	lr
   10b68:	bx	r3
   10b6c:	andeq	r2, r2, ip, asr #32
   10b70:	andeq	r2, r2, ip, asr #32
   10b74:	andeq	r0, r0, r0
   10b78:	push	{r4, lr}
   10b7c:	ldr	r4, [pc, #24]	; 10b9c <_start@@Base+0xec>
   10b80:	ldrb	r3, [r4]
   10b84:	cmp	r3, #0
   10b88:	popne	{r4, pc}
   10b8c:	bl	10b10 <_start@@Base+0x60>
   10b90:	mov	r3, #1
   10b94:	strb	r3, [r4]
   10b98:	pop	{r4, pc}
   10b9c:	andeq	r2, r2, r8, asr r0
   10ba0:	ldr	r0, [pc, #40]	; 10bd0 <_start@@Base+0x120>
   10ba4:	ldr	r3, [r0]
   10ba8:	cmp	r3, #0
   10bac:	bne	10bb4 <_start@@Base+0x104>
   10bb0:	b	10b40 <_start@@Base+0x90>
   10bb4:	ldr	r3, [pc, #24]	; 10bd4 <_start@@Base+0x124>
   10bb8:	cmp	r3, #0
   10bbc:	beq	10bb0 <_start@@Base+0x100>
   10bc0:	push	{r4, lr}
   10bc4:	blx	r3
   10bc8:	pop	{r4, lr}
   10bcc:	b	10b40 <_start@@Base+0x90>
   10bd0:	andeq	r1, r2, r4, lsl pc
   10bd4:	andeq	r0, r0, r0

00010bd8 <_l@@Base>:
   10bd8:	push	{r0, r1, r2, r3}
   10bdc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   10be0:	mov	r0, #12
   10be4:	ldr	r7, [sp, #40]	; 0x28
   10be8:	bl	109c8 <malloc@plt>
   10bec:	mov	r5, #0
   10bf0:	mov	r8, #12
   10bf4:	add	r3, sp, #44	; 0x2c
   10bf8:	str	r3, [sp, #4]
   10bfc:	mov	r6, r0
   10c00:	str	r5, [r0]
   10c04:	stmib	r0, {r5, r7}
   10c08:	cmp	r5, r7
   10c0c:	blt	10c30 <_l@@Base+0x58>
   10c10:	mov	r3, #0
   10c14:	mov	r0, r6
   10c18:	str	r3, [r4, #4]
   10c1c:	str	r4, [r6, #4]
   10c20:	add	sp, sp, #12
   10c24:	pop	{r4, r5, r6, r7, r8, r9, lr}
   10c28:	add	sp, sp, #16
   10c2c:	bx	lr
   10c30:	ldr	r3, [sp, #4]
   10c34:	cmp	r5, #0
   10c38:	add	r2, r3, #4
   10c3c:	str	r2, [sp, #4]
   10c40:	ldr	r9, [r3]
   10c44:	mov	r0, r8
   10c48:	bne	10c80 <_l@@Base+0xa8>
   10c4c:	bl	109c8 <malloc@plt>
   10c50:	str	r0, [r6]
   10c54:	str	r5, [r0, #8]
   10c58:	mov	r4, r0
   10c5c:	mov	r0, r9
   10c60:	bl	109ec <strlen@plt>
   10c64:	add	r5, r5, #1
   10c68:	add	r0, r0, #1
   10c6c:	bl	109c8 <malloc@plt>
   10c70:	mov	r1, r9
   10c74:	str	r0, [r4]
   10c78:	bl	109b0 <strcpy@plt>
   10c7c:	b	10c08 <_l@@Base+0x30>
   10c80:	bl	109c8 <malloc@plt>
   10c84:	str	r0, [r4, #4]
   10c88:	str	r4, [r0, #8]
   10c8c:	b	10c58 <_l@@Base+0x80>

00010c90 <_f@@Base>:
   10c90:	cmp	r0, #0
   10c94:	movne	r2, #0
   10c98:	ldrne	r3, [r0]
   10c9c:	bne	10cac <_f@@Base+0x1c>
   10ca0:	bx	lr
   10ca4:	ldr	r3, [r3, #4]
   10ca8:	add	r2, r2, #1
   10cac:	cmp	r3, #0
   10cb0:	cmpne	r2, r1
   10cb4:	blt	10ca4 <_f@@Base+0x14>
   10cb8:	cmp	r2, r1
   10cbc:	ldreq	r0, [r3]
   10cc0:	ldrne	r0, [pc]	; 10cc8 <_f@@Base+0x38>
   10cc4:	bx	lr
   10cc8:	strdeq	r1, [r1], -sp

00010ccc <teste_lista_nova@@Base>:
   10ccc:	push	{r4, r5, r6, lr}
   10cd0:	ldr	r0, [pc, #104]	; 10d40 <teste_lista_nova@@Base+0x74>
   10cd4:	bl	1098c <printf@plt>
   10cd8:	bl	11640 <lista_nova@@Base>
   10cdc:	subs	r5, r0, #0
   10ce0:	bne	10d00 <teste_lista_nova@@Base+0x34>
   10ce4:	ldr	r0, [pc, #88]	; 10d44 <teste_lista_nova@@Base+0x78>
   10ce8:	bl	1098c <printf@plt>
   10cec:	mov	r0, #10
   10cf0:	bl	10a04 <putchar@plt>
   10cf4:	mov	r4, #1
   10cf8:	mov	r0, r4
   10cfc:	pop	{r4, r5, r6, pc}
   10d00:	ldr	r4, [r5, #8]
   10d04:	cmp	r4, #0
   10d08:	beq	10d18 <teste_lista_nova@@Base+0x4c>
   10d0c:	ldr	r0, [pc, #52]	; 10d48 <teste_lista_nova@@Base+0x7c>
   10d10:	bl	1098c <printf@plt>
   10d14:	mov	r4, #1
   10d18:	mov	r0, r5
   10d1c:	bl	1165c <lista_apaga@@Base>
   10d20:	cmp	r4, #0
   10d24:	bne	10d34 <teste_lista_nova@@Base+0x68>
   10d28:	ldr	r0, [pc, #28]	; 10d4c <teste_lista_nova@@Base+0x80>
   10d2c:	bl	109bc <puts@plt>
   10d30:	b	10cf8 <teste_lista_nova@@Base+0x2c>
   10d34:	mov	r0, #10
   10d38:	bl	10a04 <putchar@plt>
   10d3c:	b	10cf8 <teste_lista_nova@@Base+0x2c>
   10d40:	strdeq	r1, [r1], -r4
   10d44:	andeq	r1, r1, r3, lsl #20
   10d48:	andeq	r1, r1, r9, lsl sl
   10d4c:	andeq	r1, r1, ip, lsr sl

00010d50 <teste_lista_insere@@Base>:
   10d50:	ldr	r2, [pc, #632]	; 10fd0 <teste_lista_insere@@Base+0x280>
   10d54:	push	{r4, r5, r6, lr}
   10d58:	mov	r1, r2
   10d5c:	mov	r0, #2
   10d60:	bl	10bd8 <_l@@Base>
   10d64:	mov	r5, r0
   10d68:	ldr	r0, [pc, #612]	; 10fd4 <teste_lista_insere@@Base+0x284>
   10d6c:	bl	1098c <printf@plt>
   10d70:	ldr	r3, [r5]
   10d74:	ldr	r1, [pc, #604]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10d78:	mov	r0, r5
   10d7c:	ldr	r2, [r3, #4]
   10d80:	bl	116d8 <lista_insere@@Base>
   10d84:	cmp	r0, #0
   10d88:	movne	r4, #0
   10d8c:	bne	10d9c <teste_lista_insere@@Base+0x4c>
   10d90:	ldr	r0, [pc, #580]	; 10fdc <teste_lista_insere@@Base+0x28c>
   10d94:	bl	1098c <printf@plt>
   10d98:	mov	r4, #1
   10d9c:	ldr	r3, [r5, #8]
   10da0:	cmp	r3, #3
   10da4:	beq	10db4 <teste_lista_insere@@Base+0x64>
   10da8:	ldr	r0, [pc, #560]	; 10fe0 <teste_lista_insere@@Base+0x290>
   10dac:	bl	1098c <printf@plt>
   10db0:	add	r4, r4, #1
   10db4:	ldr	r3, [r5, #8]
   10db8:	cmp	r3, #3
   10dbc:	beq	10ddc <teste_lista_insere@@Base+0x8c>
   10dc0:	cmp	r4, #0
   10dc4:	bne	10fc4 <teste_lista_insere@@Base+0x274>
   10dc8:	ldr	r0, [pc, #532]	; 10fe4 <teste_lista_insere@@Base+0x294>
   10dcc:	bl	109bc <puts@plt>
   10dd0:	mov	r4, #0
   10dd4:	mov	r0, r4
   10dd8:	pop	{r4, r5, r6, pc}
   10ddc:	ldr	r6, [r5]
   10de0:	ldr	r1, [pc, #488]	; 10fd0 <teste_lista_insere@@Base+0x280>
   10de4:	ldr	r0, [r6]
   10de8:	bl	10980 <strcmp@plt>
   10dec:	cmp	r0, #0
   10df0:	bne	10e24 <teste_lista_insere@@Base+0xd4>
   10df4:	ldr	r6, [r6, #4]
   10df8:	ldr	r1, [pc, #472]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10dfc:	ldr	r0, [r6]
   10e00:	bl	10980 <strcmp@plt>
   10e04:	cmp	r0, #0
   10e08:	bne	10e24 <teste_lista_insere@@Base+0xd4>
   10e0c:	ldr	r3, [r6, #4]
   10e10:	ldr	r1, [pc, #440]	; 10fd0 <teste_lista_insere@@Base+0x280>
   10e14:	ldr	r0, [r3]
   10e18:	bl	10980 <strcmp@plt>
   10e1c:	cmp	r0, #0
   10e20:	beq	10e30 <teste_lista_insere@@Base+0xe0>
   10e24:	ldr	r0, [pc, #444]	; 10fe8 <teste_lista_insere@@Base+0x298>
   10e28:	bl	1098c <printf@plt>
   10e2c:	add	r4, r4, #1
   10e30:	ldr	r2, [r5]
   10e34:	ldr	r1, [pc, #412]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10e38:	mov	r0, r5
   10e3c:	bl	116d8 <lista_insere@@Base>
   10e40:	ldr	r3, [r5]
   10e44:	cmp	r3, r0
   10e48:	beq	10e58 <teste_lista_insere@@Base+0x108>
   10e4c:	ldr	r0, [pc, #408]	; 10fec <teste_lista_insere@@Base+0x29c>
   10e50:	bl	1098c <printf@plt>
   10e54:	add	r4, r4, #1
   10e58:	ldr	r3, [r5, #8]
   10e5c:	cmp	r3, #4
   10e60:	beq	10e70 <teste_lista_insere@@Base+0x120>
   10e64:	ldr	r0, [pc, #388]	; 10ff0 <teste_lista_insere@@Base+0x2a0>
   10e68:	bl	1098c <printf@plt>
   10e6c:	add	r4, r4, #1
   10e70:	ldr	r3, [r5, #8]
   10e74:	cmp	r3, #4
   10e78:	bne	10dc0 <teste_lista_insere@@Base+0x70>
   10e7c:	ldr	r6, [r5]
   10e80:	ldr	r1, [pc, #336]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10e84:	ldr	r0, [r6]
   10e88:	bl	10980 <strcmp@plt>
   10e8c:	cmp	r0, #0
   10e90:	bne	10edc <teste_lista_insere@@Base+0x18c>
   10e94:	ldr	r6, [r6, #4]
   10e98:	ldr	r1, [pc, #304]	; 10fd0 <teste_lista_insere@@Base+0x280>
   10e9c:	ldr	r0, [r6]
   10ea0:	bl	10980 <strcmp@plt>
   10ea4:	cmp	r0, #0
   10ea8:	bne	10edc <teste_lista_insere@@Base+0x18c>
   10eac:	ldr	r6, [r6, #4]
   10eb0:	ldr	r1, [pc, #288]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10eb4:	ldr	r0, [r6]
   10eb8:	bl	10980 <strcmp@plt>
   10ebc:	cmp	r0, #0
   10ec0:	bne	10edc <teste_lista_insere@@Base+0x18c>
   10ec4:	ldr	r3, [r6, #4]
   10ec8:	ldr	r1, [pc, #256]	; 10fd0 <teste_lista_insere@@Base+0x280>
   10ecc:	ldr	r0, [r3]
   10ed0:	bl	10980 <strcmp@plt>
   10ed4:	cmp	r0, #0
   10ed8:	beq	10ee8 <teste_lista_insere@@Base+0x198>
   10edc:	ldr	r0, [pc, #260]	; 10fe8 <teste_lista_insere@@Base+0x298>
   10ee0:	bl	1098c <printf@plt>
   10ee4:	add	r4, r4, #1
   10ee8:	mov	r2, #0
   10eec:	ldr	r1, [pc, #228]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10ef0:	mov	r0, r5
   10ef4:	bl	116d8 <lista_insere@@Base>
   10ef8:	ldr	r3, [r5, #8]
   10efc:	cmp	r3, #5
   10f00:	beq	10f10 <teste_lista_insere@@Base+0x1c0>
   10f04:	ldr	r0, [pc, #232]	; 10ff4 <teste_lista_insere@@Base+0x2a4>
   10f08:	bl	1098c <printf@plt>
   10f0c:	add	r4, r4, #1
   10f10:	ldr	r3, [r5, #8]
   10f14:	cmp	r3, #5
   10f18:	bne	10dc0 <teste_lista_insere@@Base+0x70>
   10f1c:	ldr	r3, [r5]
   10f20:	ldr	r1, [pc, #176]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10f24:	ldr	r3, [r3, #4]
   10f28:	ldr	r3, [r3, #4]
   10f2c:	ldr	r3, [r3, #4]
   10f30:	ldr	r3, [r3, #4]
   10f34:	ldr	r0, [r3]
   10f38:	bl	10980 <strcmp@plt>
   10f3c:	cmp	r0, #0
   10f40:	beq	10f50 <teste_lista_insere@@Base+0x200>
   10f44:	ldr	r0, [pc, #156]	; 10fe8 <teste_lista_insere@@Base+0x298>
   10f48:	bl	1098c <printf@plt>
   10f4c:	add	r4, r4, #1
   10f50:	mov	r0, r5
   10f54:	bl	1165c <lista_apaga@@Base>
   10f58:	bl	11640 <lista_nova@@Base>
   10f5c:	mov	r2, #0
   10f60:	ldr	r1, [pc, #112]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10f64:	mov	r5, r0
   10f68:	bl	116d8 <lista_insere@@Base>
   10f6c:	ldr	r3, [r5, #8]
   10f70:	cmp	r3, #1
   10f74:	beq	10f84 <teste_lista_insere@@Base+0x234>
   10f78:	ldr	r0, [pc, #120]	; 10ff8 <teste_lista_insere@@Base+0x2a8>
   10f7c:	bl	1098c <printf@plt>
   10f80:	add	r4, r4, #1
   10f84:	mov	r0, r5
   10f88:	bl	116b0 <lista_tamanho@@Base>
   10f8c:	cmp	r0, #1
   10f90:	bne	10dc0 <teste_lista_insere@@Base+0x70>
   10f94:	ldr	r3, [r5]
   10f98:	ldr	r1, [pc, #56]	; 10fd8 <teste_lista_insere@@Base+0x288>
   10f9c:	ldr	r0, [r3]
   10fa0:	bl	10980 <strcmp@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	10fb8 <teste_lista_insere@@Base+0x268>
   10fac:	ldr	r0, [pc, #52]	; 10fe8 <teste_lista_insere@@Base+0x298>
   10fb0:	bl	1098c <printf@plt>
   10fb4:	add	r4, r4, #1
   10fb8:	mov	r0, r5
   10fbc:	bl	1165c <lista_apaga@@Base>
   10fc0:	b	10dc0 <teste_lista_insere@@Base+0x70>
   10fc4:	mov	r0, #10
   10fc8:	bl	10a04 <putchar@plt>
   10fcc:	b	10dd4 <teste_lista_insere@@Base+0x84>
   10fd0:	andeq	r1, r1, pc, lsr sl
   10fd4:	andeq	r1, r1, r3, asr #20
   10fd8:	andeq	r1, r1, r4, asr sl
   10fdc:	andeq	r1, r1, sl, asr sl
   10fe0:	andeq	r1, r1, r4, lsl #21
   10fe4:	andeq	r1, r1, ip, lsr sl
   10fe8:	andeq	r1, r1, r0, asr #21
   10fec:	strdeq	r1, [r1], -r6
   10ff0:	andeq	r1, r1, r6, lsr #22
   10ff4:	andeq	r1, r1, r2, ror #22
   10ff8:	muleq	r1, lr, fp

00010ffc <teste_lista_remove@@Base>:
   10ffc:	ldr	r3, [pc, #308]	; 11138 <teste_lista_remove@@Base+0x13c>
   11000:	push	{r0, r1, r4, r5, r6, lr}
   11004:	mov	r0, #5
   11008:	str	r3, [sp, #4]
   1100c:	ldr	r3, [pc, #296]	; 1113c <teste_lista_remove@@Base+0x140>
   11010:	ldr	r2, [pc, #296]	; 11140 <teste_lista_remove@@Base+0x144>
   11014:	ldr	r1, [pc, #296]	; 11144 <teste_lista_remove@@Base+0x148>
   11018:	str	r3, [sp]
   1101c:	ldr	r3, [pc, #292]	; 11148 <teste_lista_remove@@Base+0x14c>
   11020:	bl	10bd8 <_l@@Base>
   11024:	mov	r5, r0
   11028:	ldr	r0, [pc, #284]	; 1114c <teste_lista_remove@@Base+0x150>
   1102c:	bl	1098c <printf@plt>
   11030:	ldr	r3, [r5]
   11034:	mov	r0, r5
   11038:	ldr	r3, [r3, #4]
   1103c:	ldr	r3, [r3, #4]
   11040:	ldr	r1, [r3, #4]
   11044:	bl	11788 <lista_remove@@Base>
   11048:	ldr	r3, [r5, #4]
   1104c:	cmp	r3, r0
   11050:	moveq	r4, #0
   11054:	beq	11064 <teste_lista_remove@@Base+0x68>
   11058:	ldr	r0, [pc, #240]	; 11150 <teste_lista_remove@@Base+0x154>
   1105c:	bl	1098c <printf@plt>
   11060:	mov	r4, #1
   11064:	ldr	r3, [r5, #8]
   11068:	cmp	r3, #4
   1106c:	beq	1107c <teste_lista_remove@@Base+0x80>
   11070:	ldr	r0, [pc, #220]	; 11154 <teste_lista_remove@@Base+0x158>
   11074:	bl	1098c <printf@plt>
   11078:	add	r4, r4, #1
   1107c:	ldr	r6, [r5]
   11080:	ldr	r1, [pc, #188]	; 11144 <teste_lista_remove@@Base+0x148>
   11084:	ldr	r0, [r6]
   11088:	bl	10980 <strcmp@plt>
   1108c:	cmp	r0, #0
   11090:	bne	110dc <teste_lista_remove@@Base+0xe0>
   11094:	ldr	r6, [r6, #4]
   11098:	ldr	r1, [pc, #160]	; 11140 <teste_lista_remove@@Base+0x144>
   1109c:	ldr	r0, [r6]
   110a0:	bl	10980 <strcmp@plt>
   110a4:	cmp	r0, #0
   110a8:	bne	110dc <teste_lista_remove@@Base+0xe0>
   110ac:	ldr	r6, [r6, #4]
   110b0:	ldr	r1, [pc, #144]	; 11148 <teste_lista_remove@@Base+0x14c>
   110b4:	ldr	r0, [r6]
   110b8:	bl	10980 <strcmp@plt>
   110bc:	cmp	r0, #0
   110c0:	bne	110dc <teste_lista_remove@@Base+0xe0>
   110c4:	ldr	r3, [r6, #4]
   110c8:	ldr	r1, [pc, #104]	; 11138 <teste_lista_remove@@Base+0x13c>
   110cc:	ldr	r0, [r3]
   110d0:	bl	10980 <strcmp@plt>
   110d4:	cmp	r0, #0
   110d8:	beq	110e8 <teste_lista_remove@@Base+0xec>
   110dc:	ldr	r0, [pc, #116]	; 11158 <teste_lista_remove@@Base+0x15c>
   110e0:	bl	1098c <printf@plt>
   110e4:	add	r4, r4, #1
   110e8:	mov	r1, #0
   110ec:	mov	r0, r5
   110f0:	bl	11788 <lista_remove@@Base>
   110f4:	cmp	r0, #0
   110f8:	beq	11108 <teste_lista_remove@@Base+0x10c>
   110fc:	ldr	r0, [pc, #88]	; 1115c <teste_lista_remove@@Base+0x160>
   11100:	bl	1098c <printf@plt>
   11104:	add	r4, r4, #1
   11108:	mov	r0, r5
   1110c:	bl	1165c <lista_apaga@@Base>
   11110:	cmp	r4, #0
   11114:	bne	1112c <teste_lista_remove@@Base+0x130>
   11118:	ldr	r0, [pc, #64]	; 11160 <teste_lista_remove@@Base+0x164>
   1111c:	bl	109bc <puts@plt>
   11120:	mov	r0, r4
   11124:	add	sp, sp, #8
   11128:	pop	{r4, r5, r6, pc}
   1112c:	mov	r0, #10
   11130:	bl	10a04 <putchar@plt>
   11134:	b	11120 <teste_lista_remove@@Base+0x124>
   11138:	andeq	r1, r1, r3, ror #23
   1113c:	andeq	r1, r1, r6, ror #23
   11140:	ldrdeq	r1, [r1], -sp
   11144:	andeq	r1, r1, r0, ror #23
   11148:	ldrdeq	r1, [r1], -sl
   1114c:	andeq	r1, r1, r9, ror #23
   11150:	strdeq	r1, [r1], -sl
   11154:	andeq	r1, r1, r3, lsr ip
   11158:	andeq	r1, r1, pc, ror #24
   1115c:	andeq	r1, r1, r5, lsr #25
   11160:	andeq	r1, r1, ip, lsr sl

00011164 <teste_lista_pesquisa@@Base>:
   11164:	push	{r4, r5, lr}
   11168:	sub	sp, sp, #20
   1116c:	ldr	r3, [pc, #284]	; 11290 <teste_lista_pesquisa@@Base+0x12c>
   11170:	ldr	r4, [pc, #284]	; 11294 <teste_lista_pesquisa@@Base+0x130>
   11174:	mov	r2, r3
   11178:	mov	r1, r3
   1117c:	stm	sp, {r3, r4}
   11180:	str	r3, [sp, #12]
   11184:	str	r3, [sp, #8]
   11188:	mov	r0, #7
   1118c:	bl	10bd8 <_l@@Base>
   11190:	mov	r5, r0
   11194:	ldr	r0, [pc, #252]	; 11298 <teste_lista_pesquisa@@Base+0x134>
   11198:	bl	1098c <printf@plt>
   1119c:	mov	r1, r4
   111a0:	mov	r2, #0
   111a4:	mov	r0, r5
   111a8:	bl	11800 <lista_pesquisa@@Base>
   111ac:	ldr	r3, [r5]
   111b0:	ldr	r3, [r3, #4]
   111b4:	ldr	r3, [r3, #4]
   111b8:	ldr	r3, [r3, #4]
   111bc:	ldr	r3, [r3, #4]
   111c0:	cmp	r3, r0
   111c4:	moveq	r4, #0
   111c8:	beq	111d8 <teste_lista_pesquisa@@Base+0x74>
   111cc:	ldr	r0, [pc, #200]	; 1129c <teste_lista_pesquisa@@Base+0x138>
   111d0:	bl	1098c <printf@plt>
   111d4:	mov	r4, #1
   111d8:	mov	r2, #0
   111dc:	ldr	r1, [pc, #188]	; 112a0 <teste_lista_pesquisa@@Base+0x13c>
   111e0:	mov	r0, r5
   111e4:	bl	11800 <lista_pesquisa@@Base>
   111e8:	cmp	r0, #0
   111ec:	beq	111fc <teste_lista_pesquisa@@Base+0x98>
   111f0:	ldr	r0, [pc, #172]	; 112a4 <teste_lista_pesquisa@@Base+0x140>
   111f4:	bl	1098c <printf@plt>
   111f8:	add	r4, r4, #1
   111fc:	mov	r2, #1
   11200:	ldr	r1, [pc, #136]	; 11290 <teste_lista_pesquisa@@Base+0x12c>
   11204:	mov	r0, r5
   11208:	bl	11800 <lista_pesquisa@@Base>
   1120c:	ldr	r3, [r5]
   11210:	ldr	r3, [r3, #4]
   11214:	ldr	r3, [r3, #4]
   11218:	ldr	r3, [r3, #4]
   1121c:	ldr	r3, [r3, #4]
   11220:	ldr	r3, [r3, #4]
   11224:	ldr	r3, [r3, #4]
   11228:	cmp	r3, r0
   1122c:	beq	1123c <teste_lista_pesquisa@@Base+0xd8>
   11230:	ldr	r0, [pc, #100]	; 1129c <teste_lista_pesquisa@@Base+0x138>
   11234:	bl	1098c <printf@plt>
   11238:	add	r4, r4, #1
   1123c:	mov	r2, #1
   11240:	ldr	r1, [pc, #88]	; 112a0 <teste_lista_pesquisa@@Base+0x13c>
   11244:	mov	r0, r5
   11248:	bl	11800 <lista_pesquisa@@Base>
   1124c:	cmp	r0, #0
   11250:	beq	11260 <teste_lista_pesquisa@@Base+0xfc>
   11254:	ldr	r0, [pc, #72]	; 112a4 <teste_lista_pesquisa@@Base+0x140>
   11258:	bl	1098c <printf@plt>
   1125c:	add	r4, r4, #1
   11260:	mov	r0, r5
   11264:	bl	1165c <lista_apaga@@Base>
   11268:	cmp	r4, #0
   1126c:	bne	11284 <teste_lista_pesquisa@@Base+0x120>
   11270:	ldr	r0, [pc, #48]	; 112a8 <teste_lista_pesquisa@@Base+0x144>
   11274:	bl	109bc <puts@plt>
   11278:	mov	r0, r4
   1127c:	add	sp, sp, #20
   11280:	pop	{r4, r5, pc}
   11284:	mov	r0, #10
   11288:	bl	10a04 <putchar@plt>
   1128c:	b	11278 <teste_lista_pesquisa@@Base+0x114>
   11290:	andeq	r1, r1, pc, lsr sl
   11294:	ldrdeq	r1, [r1], -r7
   11298:	ldrdeq	r1, [r1], -sl
   1129c:	andeq	r1, r1, sp, ror #25
   112a0:	andeq	r1, r1, r4, lsr sp
   112a4:	andeq	r1, r1, fp, lsr sp
   112a8:	andeq	r1, r1, ip, lsr sl

000112ac <teste_lista_ordena@@Base>:
   112ac:	ldr	r3, [pc, #396]	; 11440 <teste_lista_ordena@@Base+0x194>
   112b0:	push	{r0, r1, r4, r5, r6, lr}
   112b4:	mov	r0, #5
   112b8:	str	r3, [sp, #4]
   112bc:	ldr	r3, [pc, #384]	; 11444 <teste_lista_ordena@@Base+0x198>
   112c0:	ldr	r2, [pc, #384]	; 11448 <teste_lista_ordena@@Base+0x19c>
   112c4:	ldr	r1, [pc, #384]	; 1144c <teste_lista_ordena@@Base+0x1a0>
   112c8:	str	r3, [sp]
   112cc:	ldr	r3, [pc, #380]	; 11450 <teste_lista_ordena@@Base+0x1a4>
   112d0:	bl	10bd8 <_l@@Base>
   112d4:	mov	r5, r0
   112d8:	ldr	r0, [pc, #372]	; 11454 <teste_lista_ordena@@Base+0x1a8>
   112dc:	bl	1098c <printf@plt>
   112e0:	mov	r0, #0
   112e4:	bl	1188c <lista_ordena@@Base>
   112e8:	cmn	r0, #1
   112ec:	moveq	r4, #0
   112f0:	beq	11300 <teste_lista_ordena@@Base+0x54>
   112f4:	ldr	r0, [pc, #348]	; 11458 <teste_lista_ordena@@Base+0x1ac>
   112f8:	bl	1098c <printf@plt>
   112fc:	mov	r4, #1
   11300:	mov	r0, r5
   11304:	bl	1188c <lista_ordena@@Base>
   11308:	ldr	r6, [r5]
   1130c:	ldr	r1, [pc, #312]	; 1144c <teste_lista_ordena@@Base+0x1a0>
   11310:	ldr	r0, [r6]
   11314:	bl	10980 <strcmp@plt>
   11318:	cmp	r0, #0
   1131c:	bne	11380 <teste_lista_ordena@@Base+0xd4>
   11320:	ldr	r6, [r6, #4]
   11324:	ldr	r1, [pc, #284]	; 11448 <teste_lista_ordena@@Base+0x19c>
   11328:	ldr	r0, [r6]
   1132c:	bl	10980 <strcmp@plt>
   11330:	cmp	r0, #0
   11334:	bne	11380 <teste_lista_ordena@@Base+0xd4>
   11338:	ldr	r6, [r6, #4]
   1133c:	ldr	r1, [pc, #256]	; 11444 <teste_lista_ordena@@Base+0x198>
   11340:	ldr	r0, [r6]
   11344:	bl	10980 <strcmp@plt>
   11348:	cmp	r0, #0
   1134c:	bne	11380 <teste_lista_ordena@@Base+0xd4>
   11350:	ldr	r6, [r6, #4]
   11354:	ldr	r1, [pc, #228]	; 11440 <teste_lista_ordena@@Base+0x194>
   11358:	ldr	r0, [r6]
   1135c:	bl	10980 <strcmp@plt>
   11360:	cmp	r0, #0
   11364:	bne	11380 <teste_lista_ordena@@Base+0xd4>
   11368:	ldr	r3, [r6, #4]
   1136c:	ldr	r1, [pc, #220]	; 11450 <teste_lista_ordena@@Base+0x1a4>
   11370:	ldr	r0, [r3]
   11374:	bl	10980 <strcmp@plt>
   11378:	cmp	r0, #0
   1137c:	beq	1138c <teste_lista_ordena@@Base+0xe0>
   11380:	ldr	r0, [pc, #212]	; 1145c <teste_lista_ordena@@Base+0x1b0>
   11384:	bl	1098c <printf@plt>
   11388:	add	r4, r4, #1
   1138c:	ldr	r6, [r5, #4]
   11390:	ldr	r1, [pc, #184]	; 11450 <teste_lista_ordena@@Base+0x1a4>
   11394:	ldr	r0, [r6]
   11398:	bl	10980 <strcmp@plt>
   1139c:	cmp	r0, #0
   113a0:	bne	11404 <teste_lista_ordena@@Base+0x158>
   113a4:	ldr	r6, [r6, #8]
   113a8:	ldr	r1, [pc, #144]	; 11440 <teste_lista_ordena@@Base+0x194>
   113ac:	ldr	r0, [r6]
   113b0:	bl	10980 <strcmp@plt>
   113b4:	cmp	r0, #0
   113b8:	bne	11404 <teste_lista_ordena@@Base+0x158>
   113bc:	ldr	r6, [r6, #8]
   113c0:	ldr	r1, [pc, #124]	; 11444 <teste_lista_ordena@@Base+0x198>
   113c4:	ldr	r0, [r6]
   113c8:	bl	10980 <strcmp@plt>
   113cc:	cmp	r0, #0
   113d0:	bne	11404 <teste_lista_ordena@@Base+0x158>
   113d4:	ldr	r6, [r6, #8]
   113d8:	ldr	r1, [pc, #104]	; 11448 <teste_lista_ordena@@Base+0x19c>
   113dc:	ldr	r0, [r6]
   113e0:	bl	10980 <strcmp@plt>
   113e4:	cmp	r0, #0
   113e8:	bne	11404 <teste_lista_ordena@@Base+0x158>
   113ec:	ldr	r3, [r6, #8]
   113f0:	ldr	r1, [pc, #84]	; 1144c <teste_lista_ordena@@Base+0x1a0>
   113f4:	ldr	r0, [r3]
   113f8:	bl	10980 <strcmp@plt>
   113fc:	cmp	r0, #0
   11400:	beq	11410 <teste_lista_ordena@@Base+0x164>
   11404:	ldr	r0, [pc, #84]	; 11460 <teste_lista_ordena@@Base+0x1b4>
   11408:	bl	1098c <printf@plt>
   1140c:	add	r4, r4, #1
   11410:	mov	r0, r5
   11414:	bl	1165c <lista_apaga@@Base>
   11418:	cmp	r4, #0
   1141c:	bne	11434 <teste_lista_ordena@@Base+0x188>
   11420:	ldr	r0, [pc, #60]	; 11464 <teste_lista_ordena@@Base+0x1b8>
   11424:	bl	109bc <puts@plt>
   11428:	mov	r0, r4
   1142c:	add	sp, sp, #8
   11430:	pop	{r4, r5, r6, pc}
   11434:	mov	r0, #10
   11438:	bl	10a04 <putchar@plt>
   1143c:	b	11428 <teste_lista_ordena@@Base+0x17c>
   11440:	andeq	r1, r1, r4, lsl #27
   11444:	andeq	r1, r1, r7, lsl #27
   11448:	andeq	r1, r1, lr, ror sp
   1144c:	andeq	r1, r1, r1, lsl #27
   11450:	andeq	r1, r1, fp, ror sp
   11454:	andeq	r1, r1, sl, lsl #27
   11458:	muleq	r1, fp, sp
   1145c:	andeq	r1, r1, r9, asr #27
   11460:	andeq	r1, r1, r6, lsl #28
   11464:	andeq	r1, r1, ip, lsr sl

00011468 <teste_lista_inverte@@Base>:
   11468:	ldr	r3, [pc, #420]	; 11614 <teste_lista_inverte@@Base+0x1ac>
   1146c:	push	{r0, r1, r4, r5, r6, lr}
   11470:	mov	r0, #5
   11474:	str	r3, [sp, #4]
   11478:	ldr	r3, [pc, #408]	; 11618 <teste_lista_inverte@@Base+0x1b0>
   1147c:	ldr	r2, [pc, #408]	; 1161c <teste_lista_inverte@@Base+0x1b4>
   11480:	ldr	r1, [pc, #408]	; 11620 <teste_lista_inverte@@Base+0x1b8>
   11484:	str	r3, [sp]
   11488:	ldr	r3, [pc, #404]	; 11624 <teste_lista_inverte@@Base+0x1bc>
   1148c:	bl	10bd8 <_l@@Base>
   11490:	mov	r5, r0
   11494:	ldr	r0, [pc, #396]	; 11628 <teste_lista_inverte@@Base+0x1c0>
   11498:	bl	1098c <printf@plt>
   1149c:	mov	r0, #0
   114a0:	bl	11908 <lista_inverte@@Base>
   114a4:	cmn	r0, #1
   114a8:	moveq	r4, #0
   114ac:	beq	114bc <teste_lista_inverte@@Base+0x54>
   114b0:	ldr	r0, [pc, #372]	; 1162c <teste_lista_inverte@@Base+0x1c4>
   114b4:	bl	1098c <printf@plt>
   114b8:	mov	r4, #1
   114bc:	mov	r0, r5
   114c0:	bl	11908 <lista_inverte@@Base>
   114c4:	ldr	r3, [r5, #8]
   114c8:	cmp	r3, #5
   114cc:	beq	114dc <teste_lista_inverte@@Base+0x74>
   114d0:	ldr	r0, [pc, #344]	; 11630 <teste_lista_inverte@@Base+0x1c8>
   114d4:	bl	1098c <printf@plt>
   114d8:	add	r4, r4, #1
   114dc:	ldr	r6, [r5]
   114e0:	ldr	r1, [pc, #300]	; 11614 <teste_lista_inverte@@Base+0x1ac>
   114e4:	ldr	r0, [r6]
   114e8:	bl	10980 <strcmp@plt>
   114ec:	cmp	r0, #0
   114f0:	bne	11554 <teste_lista_inverte@@Base+0xec>
   114f4:	ldr	r6, [r6, #4]
   114f8:	ldr	r1, [pc, #280]	; 11618 <teste_lista_inverte@@Base+0x1b0>
   114fc:	ldr	r0, [r6]
   11500:	bl	10980 <strcmp@plt>
   11504:	cmp	r0, #0
   11508:	bne	11554 <teste_lista_inverte@@Base+0xec>
   1150c:	ldr	r6, [r6, #4]
   11510:	ldr	r1, [pc, #268]	; 11624 <teste_lista_inverte@@Base+0x1bc>
   11514:	ldr	r0, [r6]
   11518:	bl	10980 <strcmp@plt>
   1151c:	cmp	r0, #0
   11520:	bne	11554 <teste_lista_inverte@@Base+0xec>
   11524:	ldr	r6, [r6, #4]
   11528:	ldr	r1, [pc, #236]	; 1161c <teste_lista_inverte@@Base+0x1b4>
   1152c:	ldr	r0, [r6]
   11530:	bl	10980 <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	bne	11554 <teste_lista_inverte@@Base+0xec>
   1153c:	ldr	r3, [r6, #4]
   11540:	ldr	r1, [pc, #216]	; 11620 <teste_lista_inverte@@Base+0x1b8>
   11544:	ldr	r0, [r3]
   11548:	bl	10980 <strcmp@plt>
   1154c:	cmp	r0, #0
   11550:	beq	11560 <teste_lista_inverte@@Base+0xf8>
   11554:	ldr	r0, [pc, #216]	; 11634 <teste_lista_inverte@@Base+0x1cc>
   11558:	bl	1098c <printf@plt>
   1155c:	add	r4, r4, #1
   11560:	ldr	r6, [r5, #4]
   11564:	ldr	r1, [pc, #180]	; 11620 <teste_lista_inverte@@Base+0x1b8>
   11568:	ldr	r0, [r6]
   1156c:	bl	10980 <strcmp@plt>
   11570:	cmp	r0, #0
   11574:	bne	115d8 <teste_lista_inverte@@Base+0x170>
   11578:	ldr	r6, [r6, #8]
   1157c:	ldr	r1, [pc, #152]	; 1161c <teste_lista_inverte@@Base+0x1b4>
   11580:	ldr	r0, [r6]
   11584:	bl	10980 <strcmp@plt>
   11588:	cmp	r0, #0
   1158c:	bne	115d8 <teste_lista_inverte@@Base+0x170>
   11590:	ldr	r6, [r6, #8]
   11594:	ldr	r1, [pc, #136]	; 11624 <teste_lista_inverte@@Base+0x1bc>
   11598:	ldr	r0, [r6]
   1159c:	bl	10980 <strcmp@plt>
   115a0:	cmp	r0, #0
   115a4:	bne	115d8 <teste_lista_inverte@@Base+0x170>
   115a8:	ldr	r6, [r6, #8]
   115ac:	ldr	r1, [pc, #100]	; 11618 <teste_lista_inverte@@Base+0x1b0>
   115b0:	ldr	r0, [r6]
   115b4:	bl	10980 <strcmp@plt>
   115b8:	cmp	r0, #0
   115bc:	bne	115d8 <teste_lista_inverte@@Base+0x170>
   115c0:	ldr	r3, [r6, #8]
   115c4:	ldr	r1, [pc, #72]	; 11614 <teste_lista_inverte@@Base+0x1ac>
   115c8:	ldr	r0, [r3]
   115cc:	bl	10980 <strcmp@plt>
   115d0:	cmp	r0, #0
   115d4:	beq	115e4 <teste_lista_inverte@@Base+0x17c>
   115d8:	ldr	r0, [pc, #88]	; 11638 <teste_lista_inverte@@Base+0x1d0>
   115dc:	bl	1098c <printf@plt>
   115e0:	add	r4, r4, #1
   115e4:	mov	r0, r5
   115e8:	bl	1165c <lista_apaga@@Base>
   115ec:	cmp	r4, #0
   115f0:	bne	11608 <teste_lista_inverte@@Base+0x1a0>
   115f4:	ldr	r0, [pc, #64]	; 1163c <teste_lista_inverte@@Base+0x1d4>
   115f8:	bl	109bc <puts@plt>
   115fc:	mov	r0, r4
   11600:	add	sp, sp, #8
   11604:	pop	{r4, r5, r6, pc}
   11608:	mov	r0, #10
   1160c:	bl	10a04 <putchar@plt>
   11610:	b	115fc <teste_lista_inverte@@Base+0x194>
   11614:	andeq	r1, r1, r4, lsl #27
   11618:	andeq	r1, r1, r7, lsl #27
   1161c:	andeq	r1, r1, lr, ror sp
   11620:	andeq	r1, r1, r1, lsl #27
   11624:	andeq	r1, r1, fp, ror sp
   11628:	andeq	r1, r1, r4, asr #28
   1162c:	muleq	r1, fp, sp
   11630:	andeq	r1, r1, r6, asr lr
   11634:	andeq	r1, r1, r2, lsl #29
   11638:	andeq	r1, r1, r6, lsl #28
   1163c:	andeq	r1, r1, ip, lsr sl

00011640 <lista_nova@@Base>:
   11640:	push	{r4, lr}
   11644:	mov	r0, #12
   11648:	bl	109c8 <malloc@plt>
   1164c:	cmp	r0, #0
   11650:	movne	r3, #0
   11654:	strne	r3, [r0, #8]
   11658:	pop	{r4, pc}

0001165c <lista_apaga@@Base>:
   1165c:	push	{r4, r5, r6, lr}
   11660:	subs	r5, r0, #0
   11664:	popeq	{r4, r5, r6, pc}
   11668:	ldr	r3, [r5, #8]
   1166c:	cmp	r3, #0
   11670:	bne	11680 <lista_apaga@@Base+0x24>
   11674:	mov	r0, r5
   11678:	pop	{r4, r5, r6, lr}
   1167c:	b	10998 <free@plt>
   11680:	ldr	r4, [r5]
   11684:	cmp	r4, #0
   11688:	ldrne	r6, [r4, #4]
   1168c:	beq	11674 <lista_apaga@@Base+0x18>
   11690:	cmp	r6, #0
   11694:	beq	11674 <lista_apaga@@Base+0x18>
   11698:	ldm	r4, {r0, r6}
   1169c:	bl	10998 <free@plt>
   116a0:	mov	r0, r4
   116a4:	bl	10998 <free@plt>
   116a8:	mov	r4, r6
   116ac:	b	11690 <lista_apaga@@Base+0x34>

000116b0 <lista_tamanho@@Base>:
   116b0:	cmp	r0, #0
   116b4:	ldrne	r0, [r0, #8]
   116b8:	mvneq	r0, #0
   116bc:	bx	lr

000116c0 <lista_inicio@@Base>:
   116c0:	cmp	r0, #0
   116c4:	ldrne	r0, [r0]
   116c8:	bx	lr

000116cc <lista_fim@@Base>:
   116cc:	cmp	r0, #0
   116d0:	ldrne	r0, [r0, #4]
   116d4:	bx	lr

000116d8 <lista_insere@@Base>:
   116d8:	push	{r4, r5, r6, r7, r8, lr}
   116dc:	subs	r4, r0, #0
   116e0:	beq	11754 <lista_insere@@Base+0x7c>
   116e4:	mov	r0, #12
   116e8:	mov	r7, r1
   116ec:	mov	r5, r2
   116f0:	bl	109c8 <malloc@plt>
   116f4:	mov	r6, r4
   116f8:	mov	r4, r0
   116fc:	mov	r0, r7
   11700:	bl	109ec <strlen@plt>
   11704:	add	r0, r0, #1
   11708:	bl	109c8 <malloc@plt>
   1170c:	mov	r1, r7
   11710:	str	r0, [r4]
   11714:	bl	109b0 <strcpy@plt>
   11718:	ldr	r3, [r6, #8]
   1171c:	cmp	r3, #0
   11720:	streq	r3, [r4, #8]
   11724:	streq	r3, [r4, #4]
   11728:	streq	r4, [r6]
   1172c:	beq	11748 <lista_insere@@Base+0x70>
   11730:	cmp	r5, #0
   11734:	bne	1175c <lista_insere@@Base+0x84>
   11738:	ldr	r2, [r6, #4]
   1173c:	str	r5, [r4, #4]
   11740:	str	r2, [r4, #8]
   11744:	str	r4, [r2, #4]
   11748:	str	r4, [r6, #4]
   1174c:	add	r3, r3, #1
   11750:	str	r3, [r6, #8]
   11754:	mov	r0, r4
   11758:	pop	{r4, r5, r6, r7, r8, pc}
   1175c:	ldr	r2, [r6]
   11760:	cmp	r5, r2
   11764:	streq	r5, [r4, #4]
   11768:	ldrne	r2, [r5, #8]
   1176c:	streq	r4, [r6]
   11770:	streq	r4, [r4, #8]
   11774:	strne	r4, [r2, #4]
   11778:	strne	r2, [r4, #8]
   1177c:	strne	r5, [r4, #4]
   11780:	strne	r4, [r5, #8]
   11784:	b	1174c <lista_insere@@Base+0x74>

00011788 <lista_remove@@Base>:
   11788:	push	{r4, r5, r6, lr}
   1178c:	subs	r4, r1, #0
   11790:	beq	117f8 <lista_remove@@Base+0x70>
   11794:	ldr	r3, [r0]
   11798:	ldr	r6, [r4, #4]
   1179c:	cmp	r4, r3
   117a0:	moveq	r3, #0
   117a4:	streq	r3, [r6, #8]
   117a8:	mov	r5, r0
   117ac:	streq	r6, [r0]
   117b0:	beq	117d8 <lista_remove@@Base+0x50>
   117b4:	ldr	r3, [r0, #4]
   117b8:	cmp	r4, r3
   117bc:	ldr	r3, [r4, #8]
   117c0:	moveq	r2, #0
   117c4:	strne	r6, [r3, #4]
   117c8:	ldrne	r2, [r4, #4]
   117cc:	streq	r2, [r3, #4]
   117d0:	streq	r3, [r0, #4]
   117d4:	strne	r3, [r2, #8]
   117d8:	ldr	r0, [r4]
   117dc:	bl	10998 <free@plt>
   117e0:	mov	r0, r4
   117e4:	bl	10998 <free@plt>
   117e8:	ldr	r3, [r5, #8]
   117ec:	mov	r4, r6
   117f0:	sub	r3, r3, #1
   117f4:	str	r3, [r5, #8]
   117f8:	mov	r0, r4
   117fc:	pop	{r4, r5, r6, pc}

00011800 <lista_pesquisa@@Base>:
   11800:	cmp	r0, #0
   11804:	push	{r4, r5, r6, r7, r8, lr}
   11808:	beq	11880 <lista_pesquisa@@Base+0x80>
   1180c:	cmp	r2, #0
   11810:	mov	r6, r1
   11814:	mov	r5, r2
   11818:	ldreq	r4, [r0]
   1181c:	ldreq	r7, [r0, #8]
   11820:	beq	11878 <lista_pesquisa@@Base+0x78>
   11824:	cmp	r2, #1
   11828:	bne	11880 <lista_pesquisa@@Base+0x80>
   1182c:	ldmib	r0, {r4, r7}
   11830:	mov	r5, #0
   11834:	cmp	r5, r7
   11838:	bge	11880 <lista_pesquisa@@Base+0x80>
   1183c:	mov	r1, r6
   11840:	ldr	r0, [r4]
   11844:	bl	10980 <strcmp@plt>
   11848:	cmp	r0, #0
   1184c:	beq	11884 <lista_pesquisa@@Base+0x84>
   11850:	ldr	r4, [r4, #8]
   11854:	add	r5, r5, #1
   11858:	b	11834 <lista_pesquisa@@Base+0x34>
   1185c:	mov	r1, r6
   11860:	ldr	r0, [r4]
   11864:	bl	10980 <strcmp@plt>
   11868:	cmp	r0, #0
   1186c:	beq	11884 <lista_pesquisa@@Base+0x84>
   11870:	ldr	r4, [r4, #4]
   11874:	add	r5, r5, #1
   11878:	cmp	r5, r7
   1187c:	blt	1185c <lista_pesquisa@@Base+0x5c>
   11880:	mov	r4, #0
   11884:	mov	r0, r4
   11888:	pop	{r4, r5, r6, r7, r8, pc}

0001188c <lista_ordena@@Base>:
   1188c:	cmp	r0, #0
   11890:	beq	11900 <lista_ordena@@Base+0x74>
   11894:	ldr	r3, [r0, #8]
   11898:	cmp	r3, #0
   1189c:	bne	118b0 <lista_ordena@@Base+0x24>
   118a0:	mov	r0, #0
   118a4:	bx	lr
   118a8:	mov	r0, #0
   118ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   118b4:	ldm	r0, {r6, sl}
   118b8:	mov	r5, r6
   118bc:	cmp	r5, sl
   118c0:	beq	118a8 <lista_ordena@@Base+0x1c>
   118c4:	mov	r4, r5
   118c8:	b	118dc <lista_ordena@@Base+0x50>
   118cc:	cmp	r4, r6
   118d0:	str	r8, [r4]
   118d4:	ldrne	r4, [r4, #8]
   118d8:	str	r7, [r9]
   118dc:	ldm	r4, {r7, r9}
   118e0:	ldr	r8, [r9]
   118e4:	mov	r0, r7
   118e8:	mov	r1, r8
   118ec:	bl	10980 <strcmp@plt>
   118f0:	cmp	r0, #0
   118f4:	bgt	118cc <lista_ordena@@Base+0x40>
   118f8:	ldr	r5, [r5, #4]
   118fc:	b	118bc <lista_ordena@@Base+0x30>
   11900:	mvn	r0, #0
   11904:	bx	lr

00011908 <lista_inverte@@Base>:
   11908:	cmp	r0, #0
   1190c:	beq	1197c <lista_inverte@@Base+0x74>
   11910:	ldr	r3, [r0, #8]
   11914:	cmp	r3, #0
   11918:	bne	11924 <lista_inverte@@Base+0x1c>
   1191c:	mov	r0, #0
   11920:	bx	lr
   11924:	add	r3, r3, r3, lsr #31
   11928:	push	{r4, r5, r6, r7, r8, lr}
   1192c:	asr	r4, r3, #1
   11930:	ldm	r0, {r5, r6}
   11934:	mov	r7, #0
   11938:	cmp	r7, r4
   1193c:	blt	11948 <lista_inverte@@Base+0x40>
   11940:	mov	r0, #0
   11944:	pop	{r4, r5, r6, r7, r8, pc}
   11948:	ldr	r0, [r5]
   1194c:	bl	109a4 <strdup@plt>
   11950:	add	r7, r7, #1
   11954:	mov	r8, r0
   11958:	ldr	r0, [r6]
   1195c:	bl	109a4 <strdup@plt>
   11960:	str	r0, [r5]
   11964:	mov	r0, r8
   11968:	bl	109a4 <strdup@plt>
   1196c:	ldr	r5, [r5, #4]
   11970:	str	r0, [r6]
   11974:	ldr	r6, [r6, #8]
   11978:	b	11938 <lista_inverte@@Base+0x30>
   1197c:	mvn	r0, #0
   11980:	bx	lr

00011984 <__libc_csu_init@@Base>:
   11984:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11988:	mov	r7, r0
   1198c:	ldr	r6, [pc, #72]	; 119dc <__libc_csu_init@@Base+0x58>
   11990:	ldr	r5, [pc, #72]	; 119e0 <__libc_csu_init@@Base+0x5c>
   11994:	add	r6, pc, r6
   11998:	add	r5, pc, r5
   1199c:	sub	r6, r6, r5
   119a0:	mov	r8, r1
   119a4:	mov	r9, r2
   119a8:	bl	10960 <strcmp@plt-0x20>
   119ac:	asrs	r6, r6, #2
   119b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119b4:	mov	r4, #0
   119b8:	add	r4, r4, #1
   119bc:	ldr	r3, [r5], #4
   119c0:	mov	r2, r9
   119c4:	mov	r1, r8
   119c8:	mov	r0, r7
   119cc:	blx	r3
   119d0:	cmp	r6, r4
   119d4:	bne	119b8 <__libc_csu_init@@Base+0x34>
   119d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119dc:	andeq	r0, r1, r4, ror r5
   119e0:	andeq	r0, r1, ip, ror #10

000119e4 <__libc_csu_fini@@Base>:
   119e4:	bx	lr

Disassembly of section .fini:

000119e8 <.fini>:
   119e8:	push	{r3, lr}
   119ec:	pop	{r3, pc}
