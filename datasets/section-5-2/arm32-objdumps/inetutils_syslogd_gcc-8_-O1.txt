
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011610 <.init>:
   11610:	push	{r3, lr}
   11614:	bl	11b28 <__assert_fail@plt+0x48>
   11618:	pop	{r3, pc}

Disassembly of section .plt:

0001161c <calloc@plt-0x14>:
   1161c:	push	{lr}		; (str lr, [sp, #-4]!)
   11620:	ldr	lr, [pc, #4]	; 1162c <calloc@plt-0x4>
   11624:	add	lr, pc, lr
   11628:	ldr	pc, [lr, #8]!
   1162c:	ldrdeq	sp, [r1], -r4

00011630 <calloc@plt>:
   11630:	add	ip, pc, #0, 12
   11634:	add	ip, ip, #118784	; 0x1d000
   11638:	ldr	pc, [ip, #2516]!	; 0x9d4

0001163c <fputs_unlocked@plt>:
   1163c:	add	ip, pc, #0, 12
   11640:	add	ip, ip, #118784	; 0x1d000
   11644:	ldr	pc, [ip, #2508]!	; 0x9cc

00011648 <fsync@plt>:
   11648:	add	ip, pc, #0, 12
   1164c:	add	ip, ip, #118784	; 0x1d000
   11650:	ldr	pc, [ip, #2500]!	; 0x9c4

00011654 <strcmp@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #118784	; 0x1d000
   1165c:	ldr	pc, [ip, #2492]!	; 0x9bc

00011660 <strtol@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #118784	; 0x1d000
   11668:	ldr	pc, [ip, #2484]!	; 0x9b4

0001166c <setsockopt@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #118784	; 0x1d000
   11674:	ldr	pc, [ip, #2476]!	; 0x9ac

00011678 <pause@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #118784	; 0x1d000
   11680:	ldr	pc, [ip, #2468]!	; 0x9a4

00011684 <printf@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #118784	; 0x1d000
   1168c:	ldr	pc, [ip, #2460]!	; 0x99c

00011690 <read@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #118784	; 0x1d000
   11698:	ldr	pc, [ip, #2452]!	; 0x994

0001169c <fflush@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #118784	; 0x1d000
   116a4:	ldr	pc, [ip, #2444]!	; 0x98c

000116a8 <utmpxname@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #118784	; 0x1d000
   116b0:	ldr	pc, [ip, #2436]!	; 0x984

000116b4 <sigprocmask@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #118784	; 0x1d000
   116bc:	ldr	pc, [ip, #2428]!	; 0x97c

000116c0 <memmove@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #118784	; 0x1d000
   116c8:	ldr	pc, [ip, #2420]!	; 0x974

000116cc <strchrnul@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #118784	; 0x1d000
   116d4:	ldr	pc, [ip, #2412]!	; 0x96c

000116d8 <free@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #118784	; 0x1d000
   116e0:	ldr	pc, [ip, #2404]!	; 0x964

000116e4 <gai_strerror@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #118784	; 0x1d000
   116ec:	ldr	pc, [ip, #2396]!	; 0x95c

000116f0 <fgets@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #118784	; 0x1d000
   116f8:	ldr	pc, [ip, #2388]!	; 0x954

000116fc <strndup@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #118784	; 0x1d000
   11704:	ldr	pc, [ip, #2380]!	; 0x94c

00011708 <_exit@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #118784	; 0x1d000
   11710:	ldr	pc, [ip, #2372]!	; 0x944

00011714 <memcpy@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #118784	; 0x1d000
   1171c:	ldr	pc, [ip, #2364]!	; 0x93c

00011720 <signal@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #118784	; 0x1d000
   11728:	ldr	pc, [ip, #2356]!	; 0x934

0001172c <time@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #118784	; 0x1d000
   11734:	ldr	pc, [ip, #2348]!	; 0x92c

00011738 <fwrite_unlocked@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #118784	; 0x1d000
   11740:	ldr	pc, [ip, #2340]!	; 0x924

00011744 <sleep@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #118784	; 0x1d000
   1174c:	ldr	pc, [ip, #2332]!	; 0x91c

00011750 <ctime@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #118784	; 0x1d000
   11758:	ldr	pc, [ip, #2324]!	; 0x914

0001175c <recvfrom@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #118784	; 0x1d000
   11764:	ldr	pc, [ip, #2316]!	; 0x90c

00011768 <strdup@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #118784	; 0x1d000
   11770:	ldr	pc, [ip, #2308]!	; 0x904

00011774 <setutxent@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #118784	; 0x1d000
   1177c:	ldr	pc, [ip, #2300]!	; 0x8fc

00011780 <alarm@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #118784	; 0x1d000
   11788:	ldr	pc, [ip, #2292]!	; 0x8f4

0001178c <sysconf@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #118784	; 0x1d000
   11794:	ldr	pc, [ip, #2284]!	; 0x8ec

00011798 <unlink@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #118784	; 0x1d000
   117a0:	ldr	pc, [ip, #2276]!	; 0x8e4

000117a4 <dup2@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #118784	; 0x1d000
   117ac:	ldr	pc, [ip, #2268]!	; 0x8dc

000117b0 <realloc@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #118784	; 0x1d000
   117b8:	ldr	pc, [ip, #2260]!	; 0x8d4

000117bc <chdir@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #118784	; 0x1d000
   117c4:	ldr	pc, [ip, #2252]!	; 0x8cc

000117c8 <strcasecmp@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #118784	; 0x1d000
   117d0:	ldr	pc, [ip, #2244]!	; 0x8c4

000117d4 <funlockfile@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #118784	; 0x1d000
   117dc:	ldr	pc, [ip, #2236]!	; 0x8bc

000117e0 <poll@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #118784	; 0x1d000
   117e8:	ldr	pc, [ip, #2228]!	; 0x8b4

000117ec <sigaction@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #118784	; 0x1d000
   117f4:	ldr	pc, [ip, #2220]!	; 0x8ac

000117f8 <fwrite@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #118784	; 0x1d000
   11800:	ldr	pc, [ip, #2212]!	; 0x8a4

00011804 <strcat@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #118784	; 0x1d000
   1180c:	ldr	pc, [ip, #2204]!	; 0x89c

00011810 <waitpid@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #118784	; 0x1d000
   11818:	ldr	pc, [ip, #2196]!	; 0x894

0001181c <strcpy@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #118784	; 0x1d000
   11824:	ldr	pc, [ip, #2188]!	; 0x88c

00011828 <error@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #118784	; 0x1d000
   11830:	ldr	pc, [ip, #2180]!	; 0x884

00011834 <gethostname@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #118784	; 0x1d000
   1183c:	ldr	pc, [ip, #2172]!	; 0x87c

00011840 <opendir@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #118784	; 0x1d000
   11848:	ldr	pc, [ip, #2164]!	; 0x874

0001184c <open64@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #118784	; 0x1d000
   11854:	ldr	pc, [ip, #2156]!	; 0x86c

00011858 <getenv@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #118784	; 0x1d000
   11860:	ldr	pc, [ip, #2148]!	; 0x864

00011864 <malloc@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #118784	; 0x1d000
   1186c:	ldr	pc, [ip, #2140]!	; 0x85c

00011870 <sigaddset@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #118784	; 0x1d000
   11878:	ldr	pc, [ip, #2132]!	; 0x854

0001187c <__libc_start_main@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #118784	; 0x1d000
   11884:	ldr	pc, [ip, #2124]!	; 0x84c

00011888 <strerror@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #118784	; 0x1d000
   11890:	ldr	pc, [ip, #2116]!	; 0x844

00011894 <__ctype_tolower_loc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #118784	; 0x1d000
   1189c:	ldr	pc, [ip, #2108]!	; 0x83c

000118a0 <__gmon_start__@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #118784	; 0x1d000
   118a8:	ldr	pc, [ip, #2100]!	; 0x834

000118ac <mempcpy@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #118784	; 0x1d000
   118b4:	ldr	pc, [ip, #2092]!	; 0x82c

000118b8 <kill@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #118784	; 0x1d000
   118c0:	ldr	pc, [ip, #2084]!	; 0x824

000118c4 <__ctype_b_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #118784	; 0x1d000
   118cc:	ldr	pc, [ip, #2076]!	; 0x81c

000118d0 <getpid@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #118784	; 0x1d000
   118d8:	ldr	pc, [ip, #2068]!	; 0x814

000118dc <exit@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #118784	; 0x1d000
   118e4:	ldr	pc, [ip, #2060]!	; 0x80c

000118e8 <strlen@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #118784	; 0x1d000
   118f0:	ldr	pc, [ip, #2052]!	; 0x804

000118f4 <setsid@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #118784	; 0x1d000
   118fc:	ldr	pc, [ip, #2044]!	; 0x7fc

00011900 <strchr@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #118784	; 0x1d000
   11908:	ldr	pc, [ip, #2036]!	; 0x7f4

0001190c <fprintf@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #118784	; 0x1d000
   11914:	ldr	pc, [ip, #2028]!	; 0x7ec

00011918 <__errno_location@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #118784	; 0x1d000
   11920:	ldr	pc, [ip, #2020]!	; 0x7e4

00011924 <snprintf@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #118784	; 0x1d000
   1192c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011930 <strerror_r@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #118784	; 0x1d000
   11938:	ldr	pc, [ip, #2004]!	; 0x7d4

0001193c <bind@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #118784	; 0x1d000
   11944:	ldr	pc, [ip, #1996]!	; 0x7cc

00011948 <setvbuf@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #118784	; 0x1d000
   11950:	ldr	pc, [ip, #1988]!	; 0x7c4

00011954 <memset@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #118784	; 0x1d000
   1195c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011960 <strncpy@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #118784	; 0x1d000
   11968:	ldr	pc, [ip, #1972]!	; 0x7b4

0001196c <asprintf@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #118784	; 0x1d000
   11974:	ldr	pc, [ip, #1964]!	; 0x7ac

00011978 <memchr@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #118784	; 0x1d000
   11980:	ldr	pc, [ip, #1956]!	; 0x7a4

00011984 <writev@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #118784	; 0x1d000
   1198c:	ldr	pc, [ip, #1948]!	; 0x79c

00011990 <fclose@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #118784	; 0x1d000
   11998:	ldr	pc, [ip, #1940]!	; 0x794

0001199c <fcntl64@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #118784	; 0x1d000
   119a4:	ldr	pc, [ip, #1932]!	; 0x78c

000119a8 <sendto@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #118784	; 0x1d000
   119b0:	ldr	pc, [ip, #1924]!	; 0x784

000119b4 <endutxent@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #118784	; 0x1d000
   119bc:	ldr	pc, [ip, #1916]!	; 0x77c

000119c0 <__overflow@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #118784	; 0x1d000
   119c8:	ldr	pc, [ip, #1908]!	; 0x774

000119cc <sigemptyset@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #118784	; 0x1d000
   119d4:	ldr	pc, [ip, #1900]!	; 0x76c

000119d8 <fork@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #118784	; 0x1d000
   119e0:	ldr	pc, [ip, #1892]!	; 0x764

000119e4 <getnameinfo@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #118784	; 0x1d000
   119ec:	ldr	pc, [ip, #1884]!	; 0x75c

000119f0 <strrchr@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #118784	; 0x1d000
   119f8:	ldr	pc, [ip, #1876]!	; 0x754

000119fc <vfprintf@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #118784	; 0x1d000
   11a04:	ldr	pc, [ip, #1868]!	; 0x74c

00011a08 <fputc@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #118784	; 0x1d000
   11a10:	ldr	pc, [ip, #1860]!	; 0x744

00011a14 <readdir64@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #118784	; 0x1d000
   11a1c:	ldr	pc, [ip, #1852]!	; 0x73c

00011a20 <flockfile@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #118784	; 0x1d000
   11a28:	ldr	pc, [ip, #1844]!	; 0x734

00011a2c <vsnprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #118784	; 0x1d000
   11a34:	ldr	pc, [ip, #1836]!	; 0x72c

00011a38 <fopen64@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #118784	; 0x1d000
   11a40:	ldr	pc, [ip, #1828]!	; 0x724

00011a44 <qsort@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #118784	; 0x1d000
   11a4c:	ldr	pc, [ip, #1820]!	; 0x71c

00011a50 <strpbrk@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #118784	; 0x1d000
   11a58:	ldr	pc, [ip, #1812]!	; 0x714

00011a5c <freeaddrinfo@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #118784	; 0x1d000
   11a64:	ldr	pc, [ip, #1804]!	; 0x70c

00011a68 <getaddrinfo@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #118784	; 0x1d000
   11a70:	ldr	pc, [ip, #1796]!	; 0x704

00011a74 <socket@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #118784	; 0x1d000
   11a7c:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a80 <chmod@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #118784	; 0x1d000
   11a88:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a8c <__xstat64@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #118784	; 0x1d000
   11a94:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a98 <isatty@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #118784	; 0x1d000
   11aa0:	ldr	pc, [ip, #1764]!	; 0x6e4

00011aa4 <strncmp@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #118784	; 0x1d000
   11aac:	ldr	pc, [ip, #1756]!	; 0x6dc

00011ab0 <abort@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #118784	; 0x1d000
   11ab8:	ldr	pc, [ip, #1748]!	; 0x6d4

00011abc <getutxent@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #118784	; 0x1d000
   11ac4:	ldr	pc, [ip, #1740]!	; 0x6cc

00011ac8 <close@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #118784	; 0x1d000
   11ad0:	ldr	pc, [ip, #1732]!	; 0x6c4

00011ad4 <closedir@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #118784	; 0x1d000
   11adc:	ldr	pc, [ip, #1724]!	; 0x6bc

00011ae0 <__assert_fail@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #118784	; 0x1d000
   11ae8:	ldr	pc, [ip, #1716]!	; 0x6b4

Disassembly of section .text:

00011aec <daemon@@Base-0x42d4>:
   11aec:	mov	fp, #0
   11af0:	mov	lr, #0
   11af4:	pop	{r1}		; (ldr r1, [sp], #4)
   11af8:	mov	r2, sp
   11afc:	push	{r2}		; (str r2, [sp, #-4]!)
   11b00:	push	{r0}		; (str r0, [sp, #-4]!)
   11b04:	ldr	ip, [pc, #16]	; 11b1c <__assert_fail@plt+0x3c>
   11b08:	push	{ip}		; (str ip, [sp, #-4]!)
   11b0c:	ldr	r0, [pc, #12]	; 11b20 <__assert_fail@plt+0x40>
   11b10:	ldr	r3, [pc, #12]	; 11b24 <__assert_fail@plt+0x44>
   11b14:	bl	1187c <__libc_start_main@plt>
   11b18:	bl	11ab0 <abort@plt>
   11b1c:	andeq	sp, r1, r0, ror #1
   11b20:	andeq	r4, r1, r0, lsl lr
   11b24:	andeq	sp, r1, r0, lsl #1
   11b28:	ldr	r3, [pc, #20]	; 11b44 <__assert_fail@plt+0x64>
   11b2c:	ldr	r2, [pc, #20]	; 11b48 <__assert_fail@plt+0x68>
   11b30:	add	r3, pc, r3
   11b34:	ldr	r2, [r3, r2]
   11b38:	cmp	r2, #0
   11b3c:	bxeq	lr
   11b40:	b	118a0 <__gmon_start__@plt>
   11b44:	andeq	sp, r1, r8, asr #9
   11b48:	andeq	r0, r0, r0, lsr #3
   11b4c:	ldr	r0, [pc, #24]	; 11b6c <__assert_fail@plt+0x8c>
   11b50:	ldr	r3, [pc, #24]	; 11b70 <__assert_fail@plt+0x90>
   11b54:	cmp	r3, r0
   11b58:	bxeq	lr
   11b5c:	ldr	r3, [pc, #16]	; 11b74 <__assert_fail@plt+0x94>
   11b60:	cmp	r3, #0
   11b64:	bxeq	lr
   11b68:	bx	r3
   11b6c:			; <UNDEFINED> instruction: 0x0002f5b8
   11b70:			; <UNDEFINED> instruction: 0x0002f5b8
   11b74:	andeq	r0, r0, r0
   11b78:	ldr	r0, [pc, #36]	; 11ba4 <__assert_fail@plt+0xc4>
   11b7c:	ldr	r1, [pc, #36]	; 11ba8 <__assert_fail@plt+0xc8>
   11b80:	sub	r1, r1, r0
   11b84:	asr	r1, r1, #2
   11b88:	add	r1, r1, r1, lsr #31
   11b8c:	asrs	r1, r1, #1
   11b90:	bxeq	lr
   11b94:	ldr	r3, [pc, #16]	; 11bac <__assert_fail@plt+0xcc>
   11b98:	cmp	r3, #0
   11b9c:	bxeq	lr
   11ba0:	bx	r3
   11ba4:			; <UNDEFINED> instruction: 0x0002f5b8
   11ba8:			; <UNDEFINED> instruction: 0x0002f5b8
   11bac:	andeq	r0, r0, r0
   11bb0:	push	{r4, lr}
   11bb4:	ldr	r4, [pc, #24]	; 11bd4 <__assert_fail@plt+0xf4>
   11bb8:	ldrb	r3, [r4]
   11bbc:	cmp	r3, #0
   11bc0:	popne	{r4, pc}
   11bc4:	bl	11b4c <__assert_fail@plt+0x6c>
   11bc8:	mov	r3, #1
   11bcc:	strb	r3, [r4]
   11bd0:	pop	{r4, pc}
   11bd4:	andeq	pc, r2, r8, asr #11
   11bd8:	b	11b78 <__assert_fail@plt+0x98>
   11bdc:	movw	r3, #62924	; 0xf5cc
   11be0:	movt	r3, #2
   11be4:	mov	r2, #1
   11be8:	str	r2, [r3]
   11bec:	bx	lr
   11bf0:	strd	r4, [sp, #-16]!
   11bf4:	str	r6, [sp, #8]
   11bf8:	str	lr, [sp, #12]
   11bfc:	mov	r5, r0
   11c00:	movw	r3, #64544	; 0xfc20
   11c04:	movt	r3, #2
   11c08:	ldr	r1, [r3]
   11c0c:	add	r1, r1, #1
   11c10:	movw	r4, #64640	; 0xfc80
   11c14:	movt	r4, #2
   11c18:	lsl	r1, r1, #3
   11c1c:	ldr	r0, [r4]
   11c20:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   11c24:	str	r0, [r4]
   11c28:	cmp	r0, #0
   11c2c:	beq	11c78 <__assert_fail@plt+0x198>
   11c30:	movw	r3, #64544	; 0xfc20
   11c34:	movt	r3, #2
   11c38:	ldr	r0, [r3]
   11c3c:	movw	r1, #64640	; 0xfc80
   11c40:	movt	r1, #2
   11c44:	ldr	r2, [r1]
   11c48:	str	r5, [r2, r0, lsl #3]
   11c4c:	ldr	r2, [r3]
   11c50:	ldr	r1, [r1]
   11c54:	add	r1, r1, r2, lsl #3
   11c58:	mvn	r0, #0
   11c5c:	str	r0, [r1, #4]
   11c60:	add	r2, r2, #1
   11c64:	str	r2, [r3]
   11c68:	ldrd	r4, [sp]
   11c6c:	ldr	r6, [sp, #8]
   11c70:	add	sp, sp, #12
   11c74:	pop	{pc}		; (ldr pc, [sp], #4)
   11c78:	bl	11918 <__errno_location@plt>
   11c7c:	movw	r2, #53516	; 0xd10c
   11c80:	movt	r2, #1
   11c84:	ldr	r1, [r0]
   11c88:	mov	r0, #1
   11c8c:	bl	11828 <error@plt>
   11c90:	b	11c30 <__assert_fail@plt+0x150>
   11c94:	push	{r0, r1, r2, r3}
   11c98:	str	r4, [sp, #-8]!
   11c9c:	str	lr, [sp, #4]
   11ca0:	sub	sp, sp, #8
   11ca4:	movw	r3, #64572	; 0xfc3c
   11ca8:	movt	r3, #2
   11cac:	ldr	r3, [r3]
   11cb0:	cmp	r3, #0
   11cb4:	beq	11ccc <__assert_fail@plt+0x1ec>
   11cb8:	movw	r3, #62924	; 0xf5cc
   11cbc:	movt	r3, #2
   11cc0:	ldr	r3, [r3, #4]
   11cc4:	cmp	r3, #0
   11cc8:	bne	11ce4 <__assert_fail@plt+0x204>
   11ccc:	add	sp, sp, #8
   11cd0:	ldr	r4, [sp]
   11cd4:	ldr	lr, [sp, #4]
   11cd8:	add	sp, sp, #8
   11cdc:	add	sp, sp, #16
   11ce0:	bx	lr
   11ce4:	add	r2, sp, #20
   11ce8:	str	r2, [sp, #4]
   11cec:	movw	r4, #62916	; 0xf5c4
   11cf0:	movt	r4, #2
   11cf4:	ldr	r1, [sp, #16]
   11cf8:	ldr	r0, [r4]
   11cfc:	bl	119fc <vfprintf@plt>
   11d00:	ldr	r0, [r4]
   11d04:	bl	1169c <fflush@plt>
   11d08:	b	11ccc <__assert_fail@plt+0x1ec>
   11d0c:	str	r4, [sp, #-8]!
   11d10:	str	lr, [sp, #4]
   11d14:	movw	r3, #62924	; 0xf5cc
   11d18:	movt	r3, #2
   11d1c:	ldr	r4, [r3, #4]
   11d20:	mov	r2, #1
   11d24:	str	r2, [r3, #4]
   11d28:	movw	r1, #53556	; 0xd134
   11d2c:	movt	r1, #1
   11d30:	movw	r3, #53564	; 0xd13c
   11d34:	movt	r3, #1
   11d38:	cmp	r4, #0
   11d3c:	movne	r1, r3
   11d40:	movw	r0, #53572	; 0xd144
   11d44:	movt	r0, #1
   11d48:	bl	11c94 <__assert_fail@plt+0x1b4>
   11d4c:	movw	r2, #62924	; 0xf5cc
   11d50:	movt	r2, #2
   11d54:	clz	r3, r4
   11d58:	lsr	r3, r3, #5
   11d5c:	str	r3, [r2, #4]
   11d60:	ldr	r4, [sp]
   11d64:	add	sp, sp, #4
   11d68:	pop	{pc}		; (ldr pc, [sp], #4)
   11d6c:	str	r4, [sp, #-8]!
   11d70:	str	lr, [sp, #4]
   11d74:	mov	r0, #0
   11d78:	bl	11708 <_exit@plt>
   11d7c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11d80:	strd	r6, [sp, #8]
   11d84:	strd	r8, [sp, #16]
   11d88:	strd	sl, [sp, #24]
   11d8c:	str	lr, [sp, #32]
   11d90:	sub	sp, sp, #4
   11d94:	mov	r9, r0
   11d98:	mov	r4, r1
   11d9c:	mov	r5, #0
   11da0:	mov	r0, r4
   11da4:	bl	118e8 <strlen@plt>
   11da8:	sub	r0, r0, #1
   11dac:	ldrb	r3, [r4, r0]
   11db0:	cmp	r3, #58	; 0x3a
   11db4:	bne	11dc0 <__assert_fail@plt+0x2e0>
   11db8:	strb	r5, [r4, r0]
   11dbc:	b	11da0 <__assert_fail@plt+0x2c0>
   11dc0:	ldrb	r3, [r4]
   11dc4:	cmp	r3, #58	; 0x3a
   11dc8:	bne	11dd8 <__assert_fail@plt+0x2f8>
   11dcc:	ldrb	r3, [r4, #1]!
   11dd0:	cmp	r3, #58	; 0x3a
   11dd4:	beq	11dcc <__assert_fail@plt+0x2ec>
   11dd8:	cmp	r3, #0
   11ddc:	beq	11f70 <__assert_fail@plt+0x490>
   11de0:	ldrb	r3, [r4]
   11de4:	cmp	r3, #0
   11de8:	beq	11e60 <__assert_fail@plt+0x380>
   11dec:	mov	r2, r4
   11df0:	mov	r1, #1
   11df4:	cmp	r3, #58	; 0x3a
   11df8:	addeq	r1, r1, #1
   11dfc:	ldrb	r3, [r2, #1]!
   11e00:	cmp	r3, #0
   11e04:	bne	11df4 <__assert_fail@plt+0x314>
   11e08:	cmp	r9, #0
   11e0c:	beq	11e68 <__assert_fail@plt+0x388>
   11e10:	ldr	r3, [r9]
   11e14:	cmp	r3, #0
   11e18:	beq	11e70 <__assert_fail@plt+0x390>
   11e1c:	mov	r3, r9
   11e20:	mov	r5, #0
   11e24:	add	r5, r5, #1
   11e28:	ldr	r2, [r3, #4]!
   11e2c:	cmp	r2, #0
   11e30:	bne	11e24 <__assert_fail@plt+0x344>
   11e34:	add	r1, r1, r5
   11e38:	add	r1, r1, #1
   11e3c:	lsl	r1, r1, #2
   11e40:	mov	r0, r9
   11e44:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   11e48:	subs	r9, r0, #0
   11e4c:	beq	11e78 <__assert_fail@plt+0x398>
   11e50:	add	r6, r9, r5, lsl #2
   11e54:	movw	fp, #53604	; 0xd164
   11e58:	movt	fp, #1
   11e5c:	b	11eb8 <__assert_fail@plt+0x3d8>
   11e60:	mov	r1, #1
   11e64:	b	11e08 <__assert_fail@plt+0x328>
   11e68:	mov	r5, #0
   11e6c:	b	11e34 <__assert_fail@plt+0x354>
   11e70:	mov	r5, #0
   11e74:	b	11e34 <__assert_fail@plt+0x354>
   11e78:	bl	11918 <__errno_location@plt>
   11e7c:	movw	r2, #53604	; 0xd164
   11e80:	movt	r2, #1
   11e84:	ldr	r1, [r0]
   11e88:	mov	r0, #1
   11e8c:	bl	11828 <error@plt>
   11e90:	b	11e50 <__assert_fail@plt+0x370>
   11e94:	mov	r2, r7
   11e98:	mov	r1, r4
   11e9c:	ldr	r0, [sl]
   11ea0:	bl	11960 <strncpy@plt>
   11ea4:	ldr	r3, [r6], #4
   11ea8:	mov	r2, #0
   11eac:	strb	r2, [r3, r7]
   11eb0:	add	r5, r5, #1
   11eb4:	add	r4, r8, #1
   11eb8:	mov	r1, #58	; 0x3a
   11ebc:	mov	r0, r4
   11ec0:	bl	11900 <strchr@plt>
   11ec4:	subs	r8, r0, #0
   11ec8:	beq	11f00 <__assert_fail@plt+0x420>
   11ecc:	sub	r7, r8, r4
   11ed0:	add	r0, r7, #1
   11ed4:	bl	1bb58 <argp_parse@@Base+0x1c68>
   11ed8:	mov	sl, r6
   11edc:	str	r0, [r6]
   11ee0:	cmp	r0, #0
   11ee4:	bne	11e94 <__assert_fail@plt+0x3b4>
   11ee8:	bl	11918 <__errno_location@plt>
   11eec:	mov	r2, fp
   11ef0:	ldr	r1, [r0]
   11ef4:	mov	r0, #1
   11ef8:	bl	11828 <error@plt>
   11efc:	b	11e94 <__assert_fail@plt+0x3b4>
   11f00:	mov	r0, r4
   11f04:	bl	118e8 <strlen@plt>
   11f08:	add	r6, r9, r5, lsl #2
   11f0c:	add	r0, r0, #1
   11f10:	bl	1b620 <argp_parse@@Base+0x1730>
   11f14:	str	r0, [r9, r5, lsl #2]
   11f18:	mov	r1, r4
   11f1c:	bl	1181c <strcpy@plt>
   11f20:	mov	r3, #0
   11f24:	str	r3, [r6, #4]
   11f28:	movw	r3, #64548	; 0xfc24
   11f2c:	movt	r3, #2
   11f30:	ldr	r3, [r3]
   11f34:	cmp	r3, #0
   11f38:	beq	11f70 <__assert_fail@plt+0x490>
   11f3c:	ldr	r2, [r9]
   11f40:	cmp	r2, #0
   11f44:	beq	11f70 <__assert_fail@plt+0x490>
   11f48:	mov	r4, #0
   11f4c:	movw	r5, #53628	; 0xd17c
   11f50:	movt	r5, #1
   11f54:	mov	r1, r4
   11f58:	mov	r0, r5
   11f5c:	bl	11684 <printf@plt>
   11f60:	add	r4, r4, #1
   11f64:	ldr	r2, [r9, r4, lsl #2]
   11f68:	cmp	r2, #0
   11f6c:	bne	11f54 <__assert_fail@plt+0x474>
   11f70:	mov	r0, r9
   11f74:	add	sp, sp, #4
   11f78:	ldrd	r4, [sp]
   11f7c:	ldrd	r6, [sp, #8]
   11f80:	ldrd	r8, [sp, #16]
   11f84:	ldrd	sl, [sp, #24]
   11f88:	add	sp, sp, #32
   11f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f90:	strd	r4, [sp, #-16]!
   11f94:	str	r6, [sp, #8]
   11f98:	str	lr, [sp, #12]
   11f9c:	sub	sp, sp, #8
   11fa0:	mov	r4, r1
   11fa4:	sub	r0, r0, #52	; 0x34
   11fa8:	cmp	r0, #207	; 0xcf
   11fac:	ldrls	pc, [pc, r0, lsl #2]
   11fb0:	b	12554 <__assert_fail@plt+0xa74>
   11fb4:	muleq	r1, ip, r3
   11fb8:	andeq	r2, r1, r4, asr r5
   11fbc:			; <UNDEFINED> instruction: 0x000123b4
   11fc0:	andeq	r2, r1, r4, asr r5
   11fc4:	andeq	r2, r1, r4, asr r5
   11fc8:	andeq	r2, r1, r4, asr r5
   11fcc:	andeq	r2, r1, r4, asr r5
   11fd0:	andeq	r2, r1, r4, asr r5
   11fd4:	andeq	r2, r1, r4, asr r5
   11fd8:	andeq	r2, r1, r4, asr r5
   11fdc:	andeq	r2, r1, r4, asr r5
   11fe0:	andeq	r2, r1, r4, asr r5
   11fe4:	andeq	r2, r1, r4, asr r5
   11fe8:	andeq	r2, r1, r4, asr r5
   11fec:	strdeq	r2, [r1], -r4
   11ff0:	andeq	r2, r1, r4, asr r5
   11ff4:	andeq	r2, r1, ip, ror #9
   11ff8:	andeq	r2, r1, r4, asr r5
   11ffc:	andeq	r2, r1, r4, asr r5
   12000:	andeq	r2, r1, r4, asr r5
   12004:	andeq	r2, r1, r4, asr r5
   12008:	andeq	r2, r1, r4, asr r5
   1200c:	andeq	r2, r1, r4, asr r5
   12010:	andeq	r2, r1, r4, asr r5
   12014:	andeq	r2, r1, r4, asr r5
   12018:	andeq	r2, r1, r4, asr r5
   1201c:	andeq	r2, r1, r4, asr r5
   12020:	andeq	r2, r1, r4, asr r5
   12024:	andeq	r2, r1, r4, asr #9
   12028:	andeq	r2, r1, r4, asr r5
   1202c:	andeq	r2, r1, r4, asr r5
   12030:	andeq	r2, r1, r4, lsr #10
   12034:	andeq	r2, r1, ip, lsr r5
   12038:	andeq	r2, r1, r4, asr r5
   1203c:	andeq	r2, r1, r4, asr r5
   12040:	andeq	r2, r1, r4, asr r5
   12044:	andeq	r2, r1, r4, asr r5
   12048:	andeq	r2, r1, r4, asr r5
   1204c:	andeq	r2, r1, r4, asr r5
   12050:	andeq	r2, r1, r4, asr r5
   12054:	andeq	r2, r1, r4, asr r5
   12058:	andeq	r2, r1, r4, asr r5
   1205c:	andeq	r2, r1, r4, asr r5
   12060:	andeq	r2, r1, r4, asr r5
   12064:	andeq	r2, r1, r4, asr r5
   12068:	strdeq	r2, [r1], -r4
   1206c:	andeq	r2, r1, r0, ror #7
   12070:	andeq	r2, r1, r4, asr r5
   12074:	andeq	r2, r1, ip, asr #6
   12078:	andeq	r2, r1, r4, asr r5
   1207c:	ldrdeq	r2, [r1], -r8
   12080:	andeq	r2, r1, r4, asr r5
   12084:	andeq	r2, r1, r0, ror r3
   12088:	andeq	r2, r1, r4, asr r5
   1208c:	andeq	r2, r1, r4, asr r5
   12090:	andeq	r2, r1, r4, asr r5
   12094:	andeq	r2, r1, r4, lsl r3
   12098:	andeq	r2, r1, r8, lsl #8
   1209c:	andeq	r2, r1, r4, ror #8
   120a0:	andeq	r2, r1, r4, asr r5
   120a4:	andeq	r2, r1, r0, lsl #10
   120a8:	andeq	r2, r1, r4, asr r5
   120ac:	andeq	r2, r1, r4, lsl #7
   120b0:	andeq	r2, r1, r0, lsr r3
   120b4:	andeq	r2, r1, r4, asr r5
   120b8:	andeq	r2, r1, r4, asr r5
   120bc:	andeq	r2, r1, r4, asr r5
   120c0:	andeq	r2, r1, r4, asr r5
   120c4:	andeq	r2, r1, r4, asr r5
   120c8:	andeq	r2, r1, r4, asr r5
   120cc:	andeq	r2, r1, r4, asr r5
   120d0:	andeq	r2, r1, r4, asr r5
   120d4:	andeq	r2, r1, r4, asr r5
   120d8:	andeq	r2, r1, r4, asr r5
   120dc:	andeq	r2, r1, r4, asr r5
   120e0:	andeq	r2, r1, r4, asr r5
   120e4:	andeq	r2, r1, r4, asr r5
   120e8:	andeq	r2, r1, r4, asr r5
   120ec:	andeq	r2, r1, r4, asr r5
   120f0:	andeq	r2, r1, r4, asr r5
   120f4:	andeq	r2, r1, r4, asr r5
   120f8:	andeq	r2, r1, r4, asr r5
   120fc:	andeq	r2, r1, r4, asr r5
   12100:	andeq	r2, r1, r4, asr r5
   12104:	andeq	r2, r1, r4, asr r5
   12108:	andeq	r2, r1, r4, asr r5
   1210c:	andeq	r2, r1, r4, asr r5
   12110:	andeq	r2, r1, r4, asr r5
   12114:	andeq	r2, r1, r4, asr r5
   12118:	andeq	r2, r1, r4, asr r5
   1211c:	andeq	r2, r1, r4, asr r5
   12120:	andeq	r2, r1, r4, asr r5
   12124:	andeq	r2, r1, r4, asr r5
   12128:	andeq	r2, r1, r4, asr r5
   1212c:	andeq	r2, r1, r4, asr r5
   12130:	andeq	r2, r1, r4, asr r5
   12134:	andeq	r2, r1, r4, asr r5
   12138:	andeq	r2, r1, r4, asr r5
   1213c:	andeq	r2, r1, r4, asr r5
   12140:	andeq	r2, r1, r4, asr r5
   12144:	andeq	r2, r1, r4, asr r5
   12148:	andeq	r2, r1, r4, asr r5
   1214c:	andeq	r2, r1, r4, asr r5
   12150:	andeq	r2, r1, r4, asr r5
   12154:	andeq	r2, r1, r4, asr r5
   12158:	andeq	r2, r1, r4, asr r5
   1215c:	andeq	r2, r1, r4, asr r5
   12160:	andeq	r2, r1, r4, asr r5
   12164:	andeq	r2, r1, r4, asr r5
   12168:	andeq	r2, r1, r4, asr r5
   1216c:	andeq	r2, r1, r4, asr r5
   12170:	andeq	r2, r1, r4, asr r5
   12174:	andeq	r2, r1, r4, asr r5
   12178:	andeq	r2, r1, r4, asr r5
   1217c:	andeq	r2, r1, r4, asr r5
   12180:	andeq	r2, r1, r4, asr r5
   12184:	andeq	r2, r1, r4, asr r5
   12188:	andeq	r2, r1, r4, asr r5
   1218c:	andeq	r2, r1, r4, asr r5
   12190:	andeq	r2, r1, r4, asr r5
   12194:	andeq	r2, r1, r4, asr r5
   12198:	andeq	r2, r1, r4, asr r5
   1219c:	andeq	r2, r1, r4, asr r5
   121a0:	andeq	r2, r1, r4, asr r5
   121a4:	andeq	r2, r1, r4, asr r5
   121a8:	andeq	r2, r1, r4, asr r5
   121ac:	andeq	r2, r1, r4, asr r5
   121b0:	andeq	r2, r1, r4, asr r5
   121b4:	andeq	r2, r1, r4, asr r5
   121b8:	andeq	r2, r1, r4, asr r5
   121bc:	andeq	r2, r1, r4, asr r5
   121c0:	andeq	r2, r1, r4, asr r5
   121c4:	andeq	r2, r1, r4, asr r5
   121c8:	andeq	r2, r1, r4, asr r5
   121cc:	andeq	r2, r1, r4, asr r5
   121d0:	andeq	r2, r1, r4, asr r5
   121d4:	andeq	r2, r1, r4, asr r5
   121d8:	andeq	r2, r1, r4, asr r5
   121dc:	andeq	r2, r1, r4, asr r5
   121e0:	andeq	r2, r1, r4, asr r5
   121e4:	andeq	r2, r1, r4, asr r5
   121e8:	andeq	r2, r1, r4, asr r5
   121ec:	andeq	r2, r1, r4, asr r5
   121f0:	andeq	r2, r1, r4, asr r5
   121f4:	andeq	r2, r1, r4, asr r5
   121f8:	andeq	r2, r1, r4, asr r5
   121fc:	andeq	r2, r1, r4, asr r5
   12200:	andeq	r2, r1, r4, asr r5
   12204:	andeq	r2, r1, r4, asr r5
   12208:	andeq	r2, r1, r4, asr r5
   1220c:	andeq	r2, r1, r4, asr r5
   12210:	andeq	r2, r1, r4, asr r5
   12214:	andeq	r2, r1, r4, asr r5
   12218:	andeq	r2, r1, r4, asr r5
   1221c:	andeq	r2, r1, r4, asr r5
   12220:	andeq	r2, r1, r4, asr r5
   12224:	andeq	r2, r1, r4, asr r5
   12228:	andeq	r2, r1, r4, asr r5
   1222c:	andeq	r2, r1, r4, asr r5
   12230:	andeq	r2, r1, r4, asr r5
   12234:	andeq	r2, r1, r4, asr r5
   12238:	andeq	r2, r1, r4, asr r5
   1223c:	andeq	r2, r1, r4, asr r5
   12240:	andeq	r2, r1, r4, asr r5
   12244:	andeq	r2, r1, r4, asr r5
   12248:	andeq	r2, r1, r4, asr r5
   1224c:	andeq	r2, r1, r4, asr r5
   12250:	andeq	r2, r1, r4, asr r5
   12254:	andeq	r2, r1, r4, asr r5
   12258:	andeq	r2, r1, r4, asr r5
   1225c:	andeq	r2, r1, r4, asr r5
   12260:	andeq	r2, r1, r4, asr r5
   12264:	andeq	r2, r1, r4, asr r5
   12268:	andeq	r2, r1, r4, asr r5
   1226c:	andeq	r2, r1, r4, asr r5
   12270:	andeq	r2, r1, r4, asr r5
   12274:	andeq	r2, r1, r4, asr r5
   12278:	andeq	r2, r1, r4, asr r5
   1227c:	andeq	r2, r1, r4, asr r5
   12280:	andeq	r2, r1, r4, asr r5
   12284:	andeq	r2, r1, r4, asr r5
   12288:	andeq	r2, r1, r4, asr r5
   1228c:	andeq	r2, r1, r4, asr r5
   12290:	andeq	r2, r1, r4, asr r5
   12294:	andeq	r2, r1, r4, asr r5
   12298:	andeq	r2, r1, r4, asr r5
   1229c:	andeq	r2, r1, r4, asr r5
   122a0:	andeq	r2, r1, r4, asr r5
   122a4:	andeq	r2, r1, r4, asr r5
   122a8:	andeq	r2, r1, r4, asr r5
   122ac:	andeq	r2, r1, r4, asr r5
   122b0:	andeq	r2, r1, r4, asr r5
   122b4:	andeq	r2, r1, r4, asr r5
   122b8:	andeq	r2, r1, r4, asr r5
   122bc:	andeq	r2, r1, r4, asr r5
   122c0:	andeq	r2, r1, r4, asr r5
   122c4:	andeq	r2, r1, r4, asr r5
   122c8:	andeq	r2, r1, r4, asr r5
   122cc:	andeq	r2, r1, r4, asr r5
   122d0:	andeq	r2, r1, r4, asr r5
   122d4:	andeq	r2, r1, r4, asr r5
   122d8:	andeq	r2, r1, r4, asr r5
   122dc:	andeq	r2, r1, r4, asr r5
   122e0:	andeq	r2, r1, r4, asr r5
   122e4:	andeq	r2, r1, ip, ror r4
   122e8:	muleq	r1, r4, r4
   122ec:	andeq	r2, r1, ip, lsr #9
   122f0:	andeq	r2, r1, ip, asr #7
   122f4:	mov	r0, r1
   122f8:	bl	11bf0 <__assert_fail@plt+0x110>
   122fc:	mov	r0, #0
   12300:	add	sp, sp, #8
   12304:	ldrd	r4, [sp]
   12308:	ldr	r6, [sp, #8]
   1230c:	add	sp, sp, #12
   12310:	pop	{pc}		; (ldr pc, [sp], #4)
   12314:	movw	r5, #64580	; 0xfc44
   12318:	movt	r5, #2
   1231c:	ldr	r0, [r5]
   12320:	bl	11d7c <__assert_fail@plt+0x29c>
   12324:	str	r0, [r5]
   12328:	mov	r0, #0
   1232c:	b	12300 <__assert_fail@plt+0x820>
   12330:	movw	r5, #64540	; 0xfc1c
   12334:	movt	r5, #2
   12338:	ldr	r0, [r5]
   1233c:	bl	11d7c <__assert_fail@plt+0x29c>
   12340:	str	r0, [r5]
   12344:	mov	r0, #0
   12348:	b	12300 <__assert_fail@plt+0x820>
   1234c:	movw	r3, #64548	; 0xfc24
   12350:	movt	r3, #2
   12354:	mov	r2, #1
   12358:	str	r2, [r3]
   1235c:	movw	r3, #64572	; 0xfc3c
   12360:	movt	r3, #2
   12364:	str	r2, [r3]
   12368:	mov	r0, #0
   1236c:	b	12300 <__assert_fail@plt+0x820>
   12370:	movw	r3, #61868	; 0xf1ac
   12374:	movt	r3, #2
   12378:	mov	r0, #0
   1237c:	str	r0, [r3]
   12380:	b	12300 <__assert_fail@plt+0x820>
   12384:	movw	r3, #64064	; 0xfa40
   12388:	movt	r3, #2
   1238c:	mov	r2, #1
   12390:	str	r2, [r3]
   12394:	mov	r0, #0
   12398:	b	12300 <__assert_fail@plt+0x820>
   1239c:	movw	r3, #61868	; 0xf1ac
   123a0:	movt	r3, #2
   123a4:	mov	r2, #2
   123a8:	str	r2, [r3, #4]
   123ac:	mov	r0, #0
   123b0:	b	12300 <__assert_fail@plt+0x820>
   123b4:	movw	r3, #61868	; 0xf1ac
   123b8:	movt	r3, #2
   123bc:	mov	r2, #10
   123c0:	str	r2, [r3, #4]
   123c4:	mov	r0, #0
   123c8:	b	12300 <__assert_fail@plt+0x820>
   123cc:	movw	r3, #61868	; 0xf1ac
   123d0:	movt	r3, #2
   123d4:	mov	r0, #0
   123d8:	str	r0, [r3, #4]
   123dc:	b	12300 <__assert_fail@plt+0x820>
   123e0:	movw	r3, #62924	; 0xf5cc
   123e4:	movt	r3, #2
   123e8:	str	r1, [r3, #8]
   123ec:	mov	r0, #0
   123f0:	b	12300 <__assert_fail@plt+0x820>
   123f4:	movw	r3, #62924	; 0xf5cc
   123f8:	movt	r3, #2
   123fc:	str	r1, [r3, #12]
   12400:	mov	r0, #0
   12404:	b	12300 <__assert_fail@plt+0x820>
   12408:	mov	r5, r2
   1240c:	mov	r2, #10
   12410:	add	r1, sp, #4
   12414:	mov	r0, r4
   12418:	bl	11660 <strtol@plt>
   1241c:	mov	r6, r0
   12420:	ldr	r3, [sp, #4]
   12424:	ldrb	r2, [r3]
   12428:	cmp	r2, #0
   1242c:	bne	1244c <__assert_fail@plt+0x96c>
   12430:	movw	r3, #61868	; 0xf1ac
   12434:	movt	r3, #2
   12438:	rsb	r6, r6, r6, lsl #4
   1243c:	lsl	r6, r6, #2
   12440:	str	r6, [r3, #8]
   12444:	mov	r0, #0
   12448:	b	12300 <__assert_fail@plt+0x820>
   1244c:	mov	r2, r4
   12450:	movw	r1, #53640	; 0xd188
   12454:	movt	r1, #1
   12458:	mov	r0, r5
   1245c:	bl	1975c <argp_error@@Base>
   12460:	b	12430 <__assert_fail@plt+0x950>
   12464:	movw	r3, #64572	; 0xfc3c
   12468:	movt	r3, #2
   1246c:	mov	r2, #1
   12470:	str	r2, [r3]
   12474:	mov	r0, #0
   12478:	b	12300 <__assert_fail@plt+0x820>
   1247c:	movw	r3, #64636	; 0xfc7c
   12480:	movt	r3, #2
   12484:	mov	r2, #1
   12488:	str	r2, [r3]
   1248c:	mov	r0, #0
   12490:	b	12300 <__assert_fail@plt+0x820>
   12494:	movw	r3, #64060	; 0xfa3c
   12498:	movt	r3, #2
   1249c:	mov	r2, #1
   124a0:	str	r2, [r3]
   124a4:	mov	r0, #0
   124a8:	b	12300 <__assert_fail@plt+0x820>
   124ac:	movw	r3, #64552	; 0xfc28
   124b0:	movt	r3, #2
   124b4:	mov	r2, #1
   124b8:	str	r2, [r3]
   124bc:	mov	r0, #0
   124c0:	b	12300 <__assert_fail@plt+0x820>
   124c4:	movw	r3, #61868	; 0xf1ac
   124c8:	movt	r3, #2
   124cc:	str	r1, [r3, #12]
   124d0:	mov	r0, #0
   124d4:	b	12300 <__assert_fail@plt+0x820>
   124d8:	movw	r3, #61868	; 0xf1ac
   124dc:	movt	r3, #2
   124e0:	str	r1, [r3, #16]
   124e4:	mov	r0, #0
   124e8:	b	12300 <__assert_fail@plt+0x820>
   124ec:	movw	r3, #61868	; 0xf1ac
   124f0:	movt	r3, #2
   124f4:	str	r1, [r3, #20]
   124f8:	mov	r0, #0
   124fc:	b	12300 <__assert_fail@plt+0x820>
   12500:	movw	r3, #64640	; 0xfc80
   12504:	movt	r3, #2
   12508:	ldr	r2, [r3]
   1250c:	str	r1, [r2]
   12510:	ldr	r3, [r3]
   12514:	mvn	r2, #0
   12518:	str	r2, [r3, #4]
   1251c:	mov	r0, #0
   12520:	b	12300 <__assert_fail@plt+0x820>
   12524:	movw	r3, #64556	; 0xfc2c
   12528:	movt	r3, #2
   1252c:	mov	r2, #1
   12530:	str	r2, [r3]
   12534:	mov	r0, #0
   12538:	b	12300 <__assert_fail@plt+0x820>
   1253c:	movw	r3, #62924	; 0xf5cc
   12540:	movt	r3, #2
   12544:	mov	r2, #1
   12548:	str	r2, [r3, #16]
   1254c:	mov	r0, #0
   12550:	b	12300 <__assert_fail@plt+0x820>
   12554:	mov	r0, #7
   12558:	b	12300 <__assert_fail@plt+0x820>
   1255c:	str	r4, [sp, #-8]!
   12560:	str	lr, [sp, #4]
   12564:	sub	sp, sp, #8
   12568:	movw	r3, #61868	; 0xf1ac
   1256c:	movt	r3, #2
   12570:	ldr	r3, [r3, #24]
   12574:	cmp	r3, #0
   12578:	beq	125b4 <__assert_fail@plt+0xad4>
   1257c:	and	ip, r0, #1016	; 0x3f8
   12580:	movw	r2, #61868	; 0xf1ac
   12584:	movt	r2, #2
   12588:	ldr	r2, [r2, #28]
   1258c:	cmp	r2, ip
   12590:	beq	125b4 <__assert_fail@plt+0xad4>
   12594:	ldr	r2, [pc, #148]	; 12630 <__assert_fail@plt+0xb50>
   12598:	ldr	r3, [r2, #8]
   1259c:	cmp	r3, #0
   125a0:	beq	125b4 <__assert_fail@plt+0xad4>
   125a4:	add	r2, r2, #8
   125a8:	ldr	r1, [r2, #4]
   125ac:	cmp	r1, ip
   125b0:	bne	12598 <__assert_fail@plt+0xab8>
   125b4:	movw	r2, #61868	; 0xf1ac
   125b8:	movt	r2, #2
   125bc:	ldr	r1, [r2, #208]	; 0xd0
   125c0:	cmp	r1, #0
   125c4:	beq	12600 <__assert_fail@plt+0xb20>
   125c8:	and	r0, r0, #7
   125cc:	movw	r2, #61868	; 0xf1ac
   125d0:	movt	r2, #2
   125d4:	ldr	r2, [r2, #212]	; 0xd4
   125d8:	cmp	r2, r0
   125dc:	ldrne	r2, [pc, #80]	; 12634 <__assert_fail@plt+0xb54>
   125e0:	beq	12600 <__assert_fail@plt+0xb20>
   125e4:	ldr	r1, [r2, #8]
   125e8:	cmp	r1, #0
   125ec:	beq	12600 <__assert_fail@plt+0xb20>
   125f0:	add	r2, r2, #8
   125f4:	ldr	ip, [r2, #4]
   125f8:	cmp	ip, r0
   125fc:	bne	125e4 <__assert_fail@plt+0xb04>
   12600:	ldr	r4, [pc, #48]	; 12638 <__assert_fail@plt+0xb58>
   12604:	str	r1, [sp]
   12608:	movw	r2, #53672	; 0xd1a8
   1260c:	movt	r2, #1
   12610:	mov	r1, #20
   12614:	mov	r0, r4
   12618:	bl	11924 <snprintf@plt>
   1261c:	mov	r0, r4
   12620:	add	sp, sp, #8
   12624:	ldr	r4, [sp]
   12628:	add	sp, sp, #4
   1262c:	pop	{pc}		; (ldr pc, [sp], #4)
   12630:	andeq	pc, r2, r4, asr #3
   12634:	andeq	pc, r2, ip, ror r2	; <UNPREDICTABLE>
   12638:	andeq	pc, r2, r0, ror #11
   1263c:	strd	r4, [sp, #-16]!
   12640:	str	r6, [sp, #8]
   12644:	str	lr, [sp, #12]
   12648:	sub	sp, sp, #16
   1264c:	mov	r4, r0
   12650:	mov	r5, r1
   12654:	mov	r3, #1
   12658:	str	r3, [sp, #8]
   1265c:	mov	r3, #0
   12660:	str	r3, [sp, #4]
   12664:	str	r3, [sp]
   12668:	mov	r3, #46	; 0x2e
   1266c:	movw	r2, #64584	; 0xfc48
   12670:	movt	r2, #2
   12674:	bl	119e4 <getnameinfo@plt>
   12678:	cmp	r0, #0
   1267c:	bne	12714 <__assert_fail@plt+0xc34>
   12680:	movw	r1, #64584	; 0xfc48
   12684:	movt	r1, #2
   12688:	movw	r0, #53716	; 0xd1d4
   1268c:	movt	r0, #1
   12690:	bl	11c94 <__assert_fail@plt+0x1b4>
   12694:	mov	r3, #8
   12698:	str	r3, [sp, #8]
   1269c:	mov	r3, #0
   126a0:	str	r3, [sp, #4]
   126a4:	str	r3, [sp]
   126a8:	movw	r3, #1025	; 0x401
   126ac:	movw	r2, #64648	; 0xfc88
   126b0:	movt	r2, #2
   126b4:	mov	r1, r5
   126b8:	mov	r0, r4
   126bc:	bl	119e4 <getnameinfo@plt>
   126c0:	cmp	r0, #0
   126c4:	bne	12744 <__assert_fail@plt+0xc64>
   126c8:	mov	r1, #46	; 0x2e
   126cc:	movw	r0, #64648	; 0xfc88
   126d0:	movt	r0, #2
   126d4:	bl	11900 <strchr@plt>
   126d8:	subs	r6, r0, #0
   126dc:	beq	12818 <__assert_fail@plt+0xd38>
   126e0:	add	r5, r6, #1
   126e4:	movw	r3, #64564	; 0xfc34
   126e8:	movt	r3, #2
   126ec:	ldr	r1, [r3]
   126f0:	mov	r0, r5
   126f4:	bl	117c8 <strcasecmp@plt>
   126f8:	cmp	r0, #0
   126fc:	bne	12764 <__assert_fail@plt+0xc84>
   12700:	mov	r3, #0
   12704:	strb	r3, [r6]
   12708:	movw	r0, #64648	; 0xfc88
   1270c:	movt	r0, #2
   12710:	b	12730 <__assert_fail@plt+0xc50>
   12714:	bl	116e4 <gai_strerror@plt>
   12718:	mov	r1, r0
   1271c:	movw	r0, #53684	; 0xd1b4
   12720:	movt	r0, #1
   12724:	bl	11c94 <__assert_fail@plt+0x1b4>
   12728:	movw	r0, #53680	; 0xd1b0
   1272c:	movt	r0, #1
   12730:	add	sp, sp, #16
   12734:	ldrd	r4, [sp]
   12738:	ldr	r6, [sp, #8]
   1273c:	add	sp, sp, #12
   12740:	pop	{pc}		; (ldr pc, [sp], #4)
   12744:	movw	r4, #64584	; 0xfc48
   12748:	movt	r4, #2
   1274c:	mov	r1, r4
   12750:	movw	r0, #53732	; 0xd1e4
   12754:	movt	r0, #1
   12758:	bl	11c94 <__assert_fail@plt+0x1b4>
   1275c:	mov	r0, r4
   12760:	b	12730 <__assert_fail@plt+0xc50>
   12764:	movw	r3, #64540	; 0xfc1c
   12768:	movt	r3, #2
   1276c:	ldr	r4, [r3]
   12770:	cmp	r4, #0
   12774:	beq	127a0 <__assert_fail@plt+0xcc0>
   12778:	ldr	r1, [r4]
   1277c:	cmp	r1, #0
   12780:	beq	127a0 <__assert_fail@plt+0xcc0>
   12784:	mov	r0, r5
   12788:	bl	117c8 <strcasecmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	127f0 <__assert_fail@plt+0xd10>
   12794:	ldr	r1, [r4, #4]!
   12798:	cmp	r1, #0
   1279c:	bne	12784 <__assert_fail@plt+0xca4>
   127a0:	movw	r3, #64580	; 0xfc44
   127a4:	movt	r3, #2
   127a8:	ldr	r4, [r3]
   127ac:	cmp	r4, #0
   127b0:	beq	12824 <__assert_fail@plt+0xd44>
   127b4:	ldr	r1, [r4]
   127b8:	cmp	r1, #0
   127bc:	beq	12830 <__assert_fail@plt+0xd50>
   127c0:	movw	r5, #64648	; 0xfc88
   127c4:	movt	r5, #2
   127c8:	mov	r0, r5
   127cc:	bl	117c8 <strcasecmp@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	12804 <__assert_fail@plt+0xd24>
   127d8:	ldr	r1, [r4, #4]!
   127dc:	cmp	r1, #0
   127e0:	bne	127c8 <__assert_fail@plt+0xce8>
   127e4:	movw	r0, #64648	; 0xfc88
   127e8:	movt	r0, #2
   127ec:	b	12730 <__assert_fail@plt+0xc50>
   127f0:	mov	r3, #0
   127f4:	strb	r3, [r6]
   127f8:	movw	r0, #64648	; 0xfc88
   127fc:	movt	r0, #2
   12800:	b	12730 <__assert_fail@plt+0xc50>
   12804:	mov	r3, #0
   12808:	strb	r3, [r6]
   1280c:	movw	r0, #64648	; 0xfc88
   12810:	movt	r0, #2
   12814:	b	12730 <__assert_fail@plt+0xc50>
   12818:	movw	r0, #64648	; 0xfc88
   1281c:	movt	r0, #2
   12820:	b	12730 <__assert_fail@plt+0xc50>
   12824:	movw	r0, #64648	; 0xfc88
   12828:	movt	r0, #2
   1282c:	b	12730 <__assert_fail@plt+0xc50>
   12830:	movw	r0, #64648	; 0xfc88
   12834:	movt	r0, #2
   12838:	b	12730 <__assert_fail@plt+0xc50>
   1283c:	strd	r4, [sp, #-12]!
   12840:	str	lr, [sp, #8]
   12844:	sub	sp, sp, #116	; 0x74
   12848:	mov	r5, r0
   1284c:	bl	11918 <__errno_location@plt>
   12850:	mov	r4, r0
   12854:	ldr	r0, [r0]
   12858:	cmp	r0, #0
   1285c:	beq	128c4 <__assert_fail@plt+0xde4>
   12860:	bl	11888 <strerror@plt>
   12864:	str	r0, [sp]
   12868:	mov	r3, r5
   1286c:	movw	r2, #53776	; 0xd210
   12870:	movt	r2, #1
   12874:	mov	r1, #100	; 0x64
   12878:	add	r0, sp, #12
   1287c:	bl	11924 <snprintf@plt>
   12880:	mov	r3, #0
   12884:	str	r3, [r4]
   12888:	add	r1, sp, #12
   1288c:	movw	r0, #59400	; 0xe808
   12890:	movt	r0, #1
   12894:	bl	11c94 <__assert_fail@plt+0x1b4>
   12898:	movw	r2, #64568	; 0xfc38
   1289c:	movt	r2, #2
   128a0:	mov	r3, #4
   128a4:	ldr	r2, [r2]
   128a8:	add	r1, sp, #12
   128ac:	mov	r0, #43	; 0x2b
   128b0:	bl	1321c <__assert_fail@plt+0x173c>
   128b4:	add	sp, sp, #116	; 0x74
   128b8:	ldrd	r4, [sp]
   128bc:	add	sp, sp, #8
   128c0:	pop	{pc}		; (ldr pc, [sp], #4)
   128c4:	mov	r3, r5
   128c8:	movw	r2, #53792	; 0xd220
   128cc:	movt	r2, #1
   128d0:	mov	r1, #100	; 0x64
   128d4:	add	r0, sp, #12
   128d8:	bl	11924 <snprintf@plt>
   128dc:	b	12880 <__assert_fail@plt+0xda0>
   128e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   128e4:	strd	r6, [sp, #8]
   128e8:	strd	r8, [sp, #16]
   128ec:	strd	sl, [sp, #24]
   128f0:	str	lr, [sp, #32]
   128f4:	sub	sp, sp, #60	; 0x3c
   128f8:	movw	r3, #62924	; 0xf5cc
   128fc:	movt	r3, #2
   12900:	ldr	sl, [r3, #40]	; 0x28
   12904:	add	r2, sl, #1
   12908:	str	r2, [r3, #40]	; 0x28
   1290c:	cmp	sl, #0
   12910:	beq	12930 <__assert_fail@plt+0xe50>
   12914:	add	sp, sp, #60	; 0x3c
   12918:	ldrd	r4, [sp]
   1291c:	ldrd	r6, [sp, #8]
   12920:	ldrd	r8, [sp, #16]
   12924:	ldrd	sl, [sp, #24]
   12928:	add	sp, sp, #32
   1292c:	pop	{pc}		; (ldr pc, [sp], #4)
   12930:	str	r1, [sp, #4]
   12934:	mov	r9, r0
   12938:	mov	r3, #3
   1293c:	add	r2, sp, #52	; 0x34
   12940:	add	r1, sp, #48	; 0x30
   12944:	movw	r0, #53804	; 0xd22c
   12948:	movt	r0, #1
   1294c:	bl	1b0a8 <argp_parse@@Base+0x11b8>
   12950:	cmp	r0, #0
   12954:	blt	12980 <__assert_fail@plt+0xea0>
   12958:	ldr	r0, [sp, #52]	; 0x34
   1295c:	ldr	r3, [sp, #48]	; 0x30
   12960:	add	r3, r3, r3, lsl #1
   12964:	add	r3, r0, r3, lsl #7
   12968:	cmp	r0, r3
   1296c:	bcs	12a70 <__assert_fail@plt+0xf90>
   12970:	add	r6, r0, #44	; 0x2c
   12974:	mov	r8, #32
   12978:	mov	fp, #0
   1297c:	b	12a10 <__assert_fail@plt+0xf30>
   12980:	movw	r0, #53820	; 0xd23c
   12984:	movt	r0, #1
   12988:	bl	1283c <__assert_fail@plt+0xd5c>
   1298c:	b	12914 <__assert_fail@plt+0xe34>
   12990:	mov	r3, #10
   12994:	add	r2, sp, #12
   12998:	mov	r1, #6
   1299c:	ldr	r0, [sp, #4]
   129a0:	bl	15f5c <daemon@@Base+0x19c>
   129a4:	subs	r4, r0, #0
   129a8:	beq	129ec <__assert_fail@plt+0xf0c>
   129ac:	bl	11918 <__errno_location@plt>
   129b0:	str	fp, [r0]
   129b4:	mov	r0, r4
   129b8:	bl	1283c <__assert_fail@plt+0xd5c>
   129bc:	b	129ec <__assert_fail@plt+0xf0c>
   129c0:	mov	r3, #10
   129c4:	add	r2, sp, #12
   129c8:	mov	r1, #6
   129cc:	ldr	r0, [sp, #4]
   129d0:	bl	15f5c <daemon@@Base+0x19c>
   129d4:	subs	r4, r0, #0
   129d8:	beq	129ec <__assert_fail@plt+0xf0c>
   129dc:	bl	11918 <__errno_location@plt>
   129e0:	str	fp, [r0]
   129e4:	mov	r0, r4
   129e8:	bl	1283c <__assert_fail@plt+0xd5c>
   129ec:	ldr	r0, [sp, #52]	; 0x34
   129f0:	add	r2, r6, #384	; 0x180
   129f4:	ldr	r3, [sp, #48]	; 0x30
   129f8:	add	r3, r3, r3, lsl #1
   129fc:	add	r3, r0, r3, lsl #7
   12a00:	add	r6, r6, #340	; 0x154
   12a04:	cmp	r3, r6
   12a08:	bls	12a70 <__assert_fail@plt+0xf90>
   12a0c:	mov	r6, r2
   12a10:	mov	r2, r8
   12a14:	sub	r1, r6, #36	; 0x24
   12a18:	add	r0, sp, #12
   12a1c:	bl	11960 <strncpy@plt>
   12a20:	strb	fp, [sp, #44]	; 0x2c
   12a24:	ldrsh	r3, [r9, #4]
   12a28:	cmp	r3, #6
   12a2c:	beq	12990 <__assert_fail@plt+0xeb0>
   12a30:	ldr	r7, [r9, #40]	; 0x28
   12a34:	cmp	r7, #0
   12a38:	ble	129ec <__assert_fail@plt+0xf0c>
   12a3c:	ldr	r5, [r9, #44]	; 0x2c
   12a40:	sub	r5, r5, #4
   12a44:	mov	r4, sl
   12a48:	mov	r2, r8
   12a4c:	mov	r1, r6
   12a50:	ldr	r0, [r5, #4]!
   12a54:	bl	11aa4 <strncmp@plt>
   12a58:	cmp	r0, #0
   12a5c:	beq	129c0 <__assert_fail@plt+0xee0>
   12a60:	add	r4, r4, #1
   12a64:	cmp	r4, r7
   12a68:	bne	12a48 <__assert_fail@plt+0xf68>
   12a6c:	b	129ec <__assert_fail@plt+0xf0c>
   12a70:	bl	1ae34 <argp_parse@@Base+0xf44>
   12a74:	movw	r3, #62924	; 0xf5cc
   12a78:	movt	r3, #2
   12a7c:	mov	r2, #0
   12a80:	str	r2, [r3, #40]	; 0x28
   12a84:	b	12914 <__assert_fail@plt+0xe34>
   12a88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12a8c:	strd	r6, [sp, #8]
   12a90:	strd	r8, [sp, #16]
   12a94:	str	lr, [sp, #24]
   12a98:	sub	sp, sp, #1392	; 0x570
   12a9c:	sub	sp, sp, #12
   12aa0:	mov	r4, r0
   12aa4:	mov	r5, r1
   12aa8:	mov	r9, r2
   12aac:	mov	r7, r3
   12ab0:	add	r1, sp, #1344	; 0x540
   12ab4:	add	r1, r1, #8
   12ab8:	mov	r2, #0
   12abc:	mov	r3, #0
   12ac0:	strd	r2, [r1]
   12ac4:	strd	r2, [r1, #8]
   12ac8:	strd	r2, [r1, #16]
   12acc:	strd	r2, [r1, #24]
   12ad0:	strd	r2, [r1, #32]
   12ad4:	strd	r2, [r1, #40]	; 0x28
   12ad8:	ldrsh	r3, [r4, #4]
   12adc:	cmp	r3, #6
   12ae0:	beq	12ba8 <__assert_fail@plt+0x10c8>
   12ae4:	add	r3, r4, #416	; 0x1a0
   12ae8:	str	r3, [sp, #1352]	; 0x548
   12aec:	mov	r3, #15
   12af0:	str	r3, [sp, #1356]	; 0x54c
   12af4:	movw	r3, #53884	; 0xd27c
   12af8:	movt	r3, #1
   12afc:	str	r3, [sp, #1360]	; 0x550
   12b00:	mov	r3, #1
   12b04:	str	r3, [sp, #1364]	; 0x554
   12b08:	ldr	r0, [r4, #432]	; 0x1b0
   12b0c:	cmp	r0, #0
   12b10:	beq	12c00 <__assert_fail@plt+0x1120>
   12b14:	str	r0, [sp, #1368]	; 0x558
   12b18:	bl	118e8 <strlen@plt>
   12b1c:	str	r0, [sp, #1372]	; 0x55c
   12b20:	add	r6, sp, #1376	; 0x560
   12b24:	movw	r3, #53884	; 0xd27c
   12b28:	movt	r3, #1
   12b2c:	str	r3, [r6]
   12b30:	mov	r3, #1
   12b34:	str	r3, [r6, #4]
   12b38:	cmp	r7, #0
   12b3c:	beq	12c0c <__assert_fail@plt+0x112c>
   12b40:	str	r7, [r6, #8]
   12b44:	mov	r0, r7
   12b48:	bl	118e8 <strlen@plt>
   12b4c:	str	r0, [r6, #12]
   12b50:	movw	r3, #61868	; 0xf1ac
   12b54:	movt	r3, #2
   12b58:	ldrsh	r2, [r4, #4]
   12b5c:	add	r3, r3, r2, lsl #2
   12b60:	ldr	r1, [r3, #320]	; 0x140
   12b64:	movw	r0, #53920	; 0xd2a0
   12b68:	movt	r0, #1
   12b6c:	bl	11c94 <__assert_fail@plt+0x1b4>
   12b70:	ldrsh	r3, [r4, #4]
   12b74:	cmp	r3, #9
   12b78:	ldrls	pc, [pc, r3, lsl #2]
   12b7c:	b	12c74 <__assert_fail@plt+0x1194>
   12b80:	andeq	r2, r1, r8, asr ip
   12b84:	andeq	r3, r1, ip, ror r0
   12b88:	andeq	r3, r1, ip, ror r0
   12b8c:	andeq	r3, r1, r4, rrx
   12b90:	strdeq	r2, [r1], -r4
   12b94:	ldrdeq	r3, [r1], -r8
   12b98:	ldrdeq	r3, [r1], -r8
   12b9c:	andeq	r2, r1, r4, lsr #25
   12ba0:	strdeq	r2, [r1], -r8
   12ba4:	andeq	r3, r1, ip, ror r0
   12ba8:	add	r6, sp, #44	; 0x2c
   12bac:	str	r6, [sp, #1352]	; 0x548
   12bb0:	ldr	r8, [r4, #432]	; 0x1b0
   12bb4:	movw	r0, #64632	; 0xfc78
   12bb8:	movt	r0, #2
   12bbc:	bl	11750 <ctime@plt>
   12bc0:	str	r0, [sp]
   12bc4:	mov	r3, r8
   12bc8:	movw	r2, #53840	; 0xd250
   12bcc:	movt	r2, #1
   12bd0:	mov	r1, #200	; 0xc8
   12bd4:	mov	r0, r6
   12bd8:	bl	11924 <snprintf@plt>
   12bdc:	mov	r0, r6
   12be0:	bl	118e8 <strlen@plt>
   12be4:	str	r0, [sp, #1356]	; 0x54c
   12be8:	movw	r3, #60544	; 0xec80
   12bec:	movt	r3, #1
   12bf0:	str	r3, [sp, #1360]	; 0x550
   12bf4:	mov	r3, #0
   12bf8:	str	r3, [sp, #1364]	; 0x554
   12bfc:	b	12b08 <__assert_fail@plt+0x1028>
   12c00:	add	r6, sp, #1360	; 0x550
   12c04:	add	r6, r6, #8
   12c08:	b	12b24 <__assert_fail@plt+0x1044>
   12c0c:	ldr	r3, [r4, #452]	; 0x1c4
   12c10:	cmp	r3, #1
   12c14:	bgt	12c2c <__assert_fail@plt+0x114c>
   12c18:	add	r3, r4, #176	; 0xb0
   12c1c:	str	r3, [r6, #8]
   12c20:	ldr	r3, [r4, #448]	; 0x1c0
   12c24:	str	r3, [r6, #12]
   12c28:	b	12b50 <__assert_fail@plt+0x1070>
   12c2c:	add	r7, sp, #244	; 0xf4
   12c30:	str	r7, [r6, #8]
   12c34:	movw	r2, #53888	; 0xd280
   12c38:	movt	r2, #1
   12c3c:	mov	r1, #80	; 0x50
   12c40:	mov	r0, r7
   12c44:	bl	11924 <snprintf@plt>
   12c48:	mov	r0, r7
   12c4c:	bl	118e8 <strlen@plt>
   12c50:	str	r0, [r6, #12]
   12c54:	b	12b50 <__assert_fail@plt+0x1070>
   12c58:	movw	r3, #64632	; 0xfc78
   12c5c:	movt	r3, #2
   12c60:	ldr	r3, [r3]
   12c64:	str	r3, [r4, #8]
   12c68:	movw	r0, #53880	; 0xd278
   12c6c:	movt	r0, #1
   12c70:	bl	11c94 <__assert_fail@plt+0x1b4>
   12c74:	ldrsh	r3, [r4, #4]
   12c78:	cmp	r3, #8
   12c7c:	beq	12c88 <__assert_fail@plt+0x11a8>
   12c80:	mov	r3, #0
   12c84:	str	r3, [r4, #452]	; 0x1c4
   12c88:	add	sp, sp, #1392	; 0x570
   12c8c:	add	sp, sp, #12
   12c90:	ldrd	r4, [sp]
   12c94:	ldrd	r6, [sp, #8]
   12c98:	ldrd	r8, [sp, #16]
   12c9c:	add	sp, sp, #24
   12ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ca4:	mov	r0, #0
   12ca8:	bl	1172c <time@plt>
   12cac:	ldr	r6, [r4, #8]
   12cb0:	sub	r6, r0, r6
   12cb4:	cmp	r6, #179	; 0xb3
   12cb8:	bgt	12ce0 <__assert_fail@plt+0x1200>
   12cbc:	ldr	r1, [r4, #40]	; 0x28
   12cc0:	movw	r0, #53632	; 0xd180
   12cc4:	movt	r0, #1
   12cc8:	bl	11c94 <__assert_fail@plt+0x1b4>
   12ccc:	rsb	r1, r6, #180	; 0xb4
   12cd0:	movw	r0, #53980	; 0xd2dc
   12cd4:	movt	r0, #1
   12cd8:	bl	11c94 <__assert_fail@plt+0x1b4>
   12cdc:	b	12c74 <__assert_fail@plt+0x1194>
   12ce0:	movw	r0, #53936	; 0xd2b0
   12ce4:	movt	r0, #1
   12ce8:	bl	11c94 <__assert_fail@plt+0x1b4>
   12cec:	mov	r3, #4
   12cf0:	strh	r3, [r4, #4]
   12cf4:	ldr	r1, [r4, #40]	; 0x28
   12cf8:	movw	r0, #53632	; 0xd180
   12cfc:	movt	r0, #1
   12d00:	bl	11c94 <__assert_fail@plt+0x1b4>
   12d04:	movw	r3, #64568	; 0xfc38
   12d08:	movt	r3, #2
   12d0c:	ldr	r1, [r3]
   12d10:	mov	r0, r5
   12d14:	bl	117c8 <strcasecmp@plt>
   12d18:	cmp	r0, #0
   12d1c:	beq	12d34 <__assert_fail@plt+0x1254>
   12d20:	movw	r3, #61868	; 0xf1ac
   12d24:	movt	r3, #2
   12d28:	ldr	r3, [r3]
   12d2c:	cmp	r3, #0
   12d30:	bne	12f20 <__assert_fail@plt+0x1440>
   12d34:	movw	r3, #64636	; 0xfc7c
   12d38:	movt	r3, #2
   12d3c:	ldr	r3, [r3]
   12d40:	cmp	r3, #0
   12d44:	bne	12f30 <__assert_fail@plt+0x1450>
   12d48:	ldrh	r3, [r4, #44]	; 0x2c
   12d4c:	cmp	r3, #2
   12d50:	movw	r5, #61868	; 0xf1ac
   12d54:	movt	r5, #2
   12d58:	ldreq	r6, [r5, #312]!	; 0x138
   12d5c:	ldrne	r6, [r5, #316]!	; 0x13c
   12d60:	cmp	r6, #0
   12d64:	blt	12f40 <__assert_fail@plt+0x1460>
   12d68:	movw	r3, #64632	; 0xfc78
   12d6c:	movt	r3, #2
   12d70:	ldr	r3, [r3]
   12d74:	str	r3, [r4, #8]
   12d78:	ldr	r3, [sp, #1384]	; 0x568
   12d7c:	str	r3, [sp, #4]
   12d80:	ldr	r3, [sp, #1352]	; 0x548
   12d84:	str	r3, [sp]
   12d88:	ldr	r3, [r4, #444]	; 0x1bc
   12d8c:	movw	r2, #54336	; 0xd440
   12d90:	movt	r2, #1
   12d94:	movw	r1, #1025	; 0x401
   12d98:	add	r0, sp, #324	; 0x144
   12d9c:	bl	11924 <snprintf@plt>
   12da0:	add	r0, sp, #324	; 0x144
   12da4:	bl	118e8 <strlen@plt>
   12da8:	cmp	r0, #1024	; 0x400
   12dac:	movlt	r7, r0
   12db0:	movge	r7, #1024	; 0x400
   12db4:	add	r3, r4, #44	; 0x2c
   12db8:	ldr	r2, [r4, #172]	; 0xac
   12dbc:	str	r2, [sp, #4]
   12dc0:	str	r3, [sp]
   12dc4:	mov	r3, #0
   12dc8:	mov	r2, r7
   12dcc:	add	r1, sp, #324	; 0x144
   12dd0:	mov	r0, r6
   12dd4:	bl	119a8 <sendto@plt>
   12dd8:	cmp	r0, r7
   12ddc:	bne	13020 <__assert_fail@plt+0x1540>
   12de0:	ldr	r3, [r5]
   12de4:	cmp	r3, #0
   12de8:	bge	12c74 <__assert_fail@plt+0x1194>
   12dec:	mov	r0, r6
   12df0:	bl	11ac8 <close@plt>
   12df4:	b	12c74 <__assert_fail@plt+0x1194>
   12df8:	ldr	r1, [r4, #40]	; 0x28
   12dfc:	movw	r0, #53632	; 0xd180
   12e00:	movt	r0, #1
   12e04:	bl	11c94 <__assert_fail@plt+0x1b4>
   12e08:	mov	r0, #0
   12e0c:	bl	1172c <time@plt>
   12e10:	ldr	r1, [r4, #8]
   12e14:	sub	r1, r0, r1
   12e18:	cmp	r1, #179	; 0xb3
   12e1c:	ble	12f0c <__assert_fail@plt+0x142c>
   12e20:	mov	r2, #0
   12e24:	mov	r3, #0
   12e28:	strd	r2, [sp, #12]
   12e2c:	strd	r2, [sp, #20]
   12e30:	strd	r2, [sp, #28]
   12e34:	strd	r2, [sp, #36]	; 0x24
   12e38:	movw	r3, #61868	; 0xf1ac
   12e3c:	movt	r3, #2
   12e40:	ldr	r3, [r3, #4]
   12e44:	str	r3, [sp, #16]
   12e48:	cmp	r3, #0
   12e4c:	moveq	r3, #32
   12e50:	streq	r3, [sp, #12]
   12e54:	movw	r1, #62924	; 0xf5cc
   12e58:	movt	r1, #2
   12e5c:	add	r3, sp, #8
   12e60:	add	r2, sp, #12
   12e64:	ldr	r1, [r1, #44]	; 0x2c
   12e68:	ldr	r0, [r4, #40]	; 0x28
   12e6c:	bl	11a68 <getaddrinfo@plt>
   12e70:	cmp	r0, #0
   12e74:	beq	12ec8 <__assert_fail@plt+0x13e8>
   12e78:	bl	116e4 <gai_strerror@plt>
   12e7c:	mov	r1, r0
   12e80:	movw	r0, #54028	; 0xd30c
   12e84:	movt	r0, #1
   12e88:	bl	11c94 <__assert_fail@plt+0x1b4>
   12e8c:	ldr	r1, [r4, #452]	; 0x1c4
   12e90:	movw	r0, #54044	; 0xd31c
   12e94:	movt	r0, #1
   12e98:	bl	11c94 <__assert_fail@plt+0x1b4>
   12e9c:	ldr	r3, [r4, #452]	; 0x1c4
   12ea0:	sub	r3, r3, #1
   12ea4:	str	r3, [r4, #452]	; 0x1c4
   12ea8:	cmp	r3, #0
   12eac:	bge	12c74 <__assert_fail@plt+0x1194>
   12eb0:	mov	r5, #0
   12eb4:	strh	r5, [r4, #4]
   12eb8:	ldr	r0, [r4, #40]	; 0x28
   12ebc:	bl	1ae34 <argp_parse@@Base+0xf44>
   12ec0:	str	r5, [r4, #40]	; 0x28
   12ec4:	b	12c74 <__assert_fail@plt+0x1194>
   12ec8:	ldr	r1, [r4, #40]	; 0x28
   12ecc:	movw	r0, #54060	; 0xd32c
   12ed0:	movt	r0, #1
   12ed4:	bl	11c94 <__assert_fail@plt+0x1b4>
   12ed8:	ldr	r6, [sp, #8]
   12edc:	ldr	r2, [r6, #16]
   12ee0:	str	r2, [r4, #172]	; 0xac
   12ee4:	ldr	r1, [r6, #20]
   12ee8:	add	r0, r4, #44	; 0x2c
   12eec:	bl	11714 <memcpy@plt>
   12ef0:	mov	r0, r6
   12ef4:	bl	11a5c <freeaddrinfo@plt>
   12ef8:	mov	r3, #0
   12efc:	str	r3, [r4, #452]	; 0x1c4
   12f00:	mov	r3, #4
   12f04:	strh	r3, [r4, #4]
   12f08:	b	12cf4 <__assert_fail@plt+0x1214>
   12f0c:	rsb	r1, r1, #180	; 0xb4
   12f10:	movw	r0, #54084	; 0xd344
   12f14:	movt	r0, #1
   12f18:	bl	11c94 <__assert_fail@plt+0x1b4>
   12f1c:	b	12c74 <__assert_fail@plt+0x1194>
   12f20:	movw	r0, #54132	; 0xd374
   12f24:	movt	r0, #1
   12f28:	bl	11c94 <__assert_fail@plt+0x1b4>
   12f2c:	b	12c74 <__assert_fail@plt+0x1194>
   12f30:	movw	r0, #54164	; 0xd394
   12f34:	movt	r0, #1
   12f38:	bl	11c94 <__assert_fail@plt+0x1b4>
   12f3c:	b	12c74 <__assert_fail@plt+0x1194>
   12f40:	mov	r0, #0
   12f44:	str	r0, [sp, #24]
   12f48:	str	r0, [sp, #28]
   12f4c:	str	r0, [sp, #32]
   12f50:	str	r0, [sp, #36]	; 0x24
   12f54:	str	r0, [sp, #40]	; 0x28
   12f58:	str	r3, [sp, #16]
   12f5c:	mov	r3, #2
   12f60:	str	r3, [sp, #20]
   12f64:	mov	r3, #1
   12f68:	str	r3, [sp, #12]
   12f6c:	movw	r1, #62924	; 0xf5cc
   12f70:	movt	r1, #2
   12f74:	add	r3, sp, #8
   12f78:	add	r2, sp, #12
   12f7c:	ldr	r1, [r1, #44]	; 0x2c
   12f80:	bl	11a68 <getaddrinfo@plt>
   12f84:	cmp	r0, #0
   12f88:	beq	12fa4 <__assert_fail@plt+0x14c4>
   12f8c:	bl	116e4 <gai_strerror@plt>
   12f90:	mov	r1, r0
   12f94:	movw	r0, #54212	; 0xd3c4
   12f98:	movt	r0, #1
   12f9c:	bl	11c94 <__assert_fail@plt+0x1b4>
   12fa0:	b	12c74 <__assert_fail@plt+0x1194>
   12fa4:	ldr	r3, [sp, #8]
   12fa8:	ldr	r2, [r3, #12]
   12fac:	ldr	r1, [r3, #8]
   12fb0:	ldr	r0, [r3, #4]
   12fb4:	bl	11a74 <socket@plt>
   12fb8:	subs	r6, r0, #0
   12fbc:	blt	13008 <__assert_fail@plt+0x1528>
   12fc0:	ldr	r3, [sp, #8]
   12fc4:	ldr	r2, [r3, #16]
   12fc8:	ldr	r1, [r3, #20]
   12fcc:	mov	r0, r6
   12fd0:	bl	1193c <bind@plt>
   12fd4:	mov	r7, r0
   12fd8:	ldr	r0, [sp, #8]
   12fdc:	bl	11a5c <freeaddrinfo@plt>
   12fe0:	cmp	r7, #0
   12fe4:	beq	12d68 <__assert_fail@plt+0x1288>
   12fe8:	bl	11918 <__errno_location@plt>
   12fec:	ldr	r0, [r0]
   12ff0:	bl	11888 <strerror@plt>
   12ff4:	mov	r1, r0
   12ff8:	movw	r0, #54296	; 0xd418
   12ffc:	movt	r0, #1
   13000:	bl	11c94 <__assert_fail@plt+0x1b4>
   13004:	b	12c74 <__assert_fail@plt+0x1194>
   13008:	movw	r0, #54256	; 0xd3f0
   1300c:	movt	r0, #1
   13010:	bl	11c94 <__assert_fail@plt+0x1b4>
   13014:	ldr	r0, [sp, #8]
   13018:	bl	11a5c <freeaddrinfo@plt>
   1301c:	b	12c74 <__assert_fail@plt+0x1194>
   13020:	bl	11918 <__errno_location@plt>
   13024:	mov	r8, r0
   13028:	ldr	r7, [r0]
   1302c:	mov	r0, r7
   13030:	bl	11888 <strerror@plt>
   13034:	mov	r2, r0
   13038:	mov	r1, r7
   1303c:	movw	r0, #54352	; 0xd450
   13040:	movt	r0, #1
   13044:	bl	11c94 <__assert_fail@plt+0x1b4>
   13048:	mov	r3, #7
   1304c:	strh	r3, [r4, #4]
   13050:	str	r7, [r8]
   13054:	movw	r0, #54384	; 0xd470
   13058:	movt	r0, #1
   1305c:	bl	1283c <__assert_fail@plt+0xd5c>
   13060:	b	12de0 <__assert_fail@plt+0x1300>
   13064:	movw	r3, #64632	; 0xfc78
   13068:	movt	r3, #2
   1306c:	ldr	r3, [r3]
   13070:	str	r3, [r4, #8]
   13074:	tst	r9, #1
   13078:	bne	1316c <__assert_fail@plt+0x168c>
   1307c:	movw	r3, #64632	; 0xfc78
   13080:	movt	r3, #2
   13084:	ldr	r3, [r3]
   13088:	str	r3, [r4, #8]
   1308c:	ldr	r1, [r4, #40]	; 0x28
   13090:	movw	r0, #53632	; 0xd180
   13094:	movt	r0, #1
   13098:	bl	11c94 <__assert_fail@plt+0x1b4>
   1309c:	ldrh	r3, [r4, #4]
   130a0:	sub	r3, r3, #2
   130a4:	uxth	r3, r3
   130a8:	cmp	r3, #1
   130ac:	bls	1317c <__assert_fail@plt+0x169c>
   130b0:	movw	r3, #53880	; 0xd278
   130b4:	movt	r3, #1
   130b8:	str	r3, [r6, #16]
   130bc:	mov	r3, #1
   130c0:	str	r3, [r6, #20]
   130c4:	mov	r7, #6
   130c8:	mov	r8, #0
   130cc:	mov	r2, r7
   130d0:	add	r1, sp, #1344	; 0x540
   130d4:	add	r1, r1, #8
   130d8:	ldrsh	r0, [r4, #6]
   130dc:	bl	11984 <writev@plt>
   130e0:	cmp	r0, #0
   130e4:	bge	131b8 <__assert_fail@plt+0x16d8>
   130e8:	bl	11918 <__errno_location@plt>
   130ec:	mov	r6, r0
   130f0:	ldr	r5, [r0]
   130f4:	ldrsh	r3, [r4, #4]
   130f8:	cmp	r3, #9
   130fc:	cmpeq	r5, #11
   13100:	beq	12c80 <__assert_fail@plt+0x11a0>
   13104:	ldrsh	r0, [r4, #6]
   13108:	bl	11ac8 <close@plt>
   1310c:	sub	r3, r5, #5
   13110:	bics	r3, r3, #4
   13114:	bne	13194 <__assert_fail@plt+0x16b4>
   13118:	ldrh	r3, [r4, #4]
   1311c:	sub	r3, r3, #2
   13120:	uxth	r3, r3
   13124:	cmp	r3, #1
   13128:	bhi	13194 <__assert_fail@plt+0x16b4>
   1312c:	mov	r2, r8
   13130:	movw	r1, #1025	; 0x401
   13134:	ldr	r0, [r4, #40]	; 0x28
   13138:	bl	1184c <open64@plt>
   1313c:	sxth	r0, r0
   13140:	strh	r0, [r4, #6]
   13144:	cmp	r0, #0
   13148:	bge	130cc <__assert_fail@plt+0x15ec>
   1314c:	mov	r5, #0
   13150:	strh	r5, [r4, #4]
   13154:	ldr	r0, [r4, #40]	; 0x28
   13158:	bl	1283c <__assert_fail@plt+0xd5c>
   1315c:	ldr	r0, [r4, #40]	; 0x28
   13160:	bl	1ae34 <argp_parse@@Base+0xf44>
   13164:	str	r5, [r4, #40]	; 0x28
   13168:	b	12c74 <__assert_fail@plt+0x1194>
   1316c:	movw	r0, #54392	; 0xd478
   13170:	movt	r0, #1
   13174:	bl	11c94 <__assert_fail@plt+0x1b4>
   13178:	b	12c74 <__assert_fail@plt+0x1194>
   1317c:	movw	r3, #54404	; 0xd484
   13180:	movt	r3, #1
   13184:	str	r3, [r6, #16]
   13188:	mov	r3, #2
   1318c:	str	r3, [r6, #20]
   13190:	b	130c4 <__assert_fail@plt+0x15e4>
   13194:	mov	r7, #0
   13198:	strh	r7, [r4, #4]
   1319c:	str	r5, [r6]
   131a0:	ldr	r0, [r4, #40]	; 0x28
   131a4:	bl	1283c <__assert_fail@plt+0xd5c>
   131a8:	ldr	r0, [r4, #40]	; 0x28
   131ac:	bl	1ae34 <argp_parse@@Base+0xf44>
   131b0:	str	r7, [r4, #40]	; 0x28
   131b4:	b	12c74 <__assert_fail@plt+0x1194>
   131b8:	tst	r9, #2
   131bc:	beq	12c74 <__assert_fail@plt+0x1194>
   131c0:	ldr	r3, [r4, #460]	; 0x1cc
   131c4:	tst	r3, #1
   131c8:	bne	12c74 <__assert_fail@plt+0x1194>
   131cc:	ldrsh	r0, [r4, #6]
   131d0:	bl	11648 <fsync@plt>
   131d4:	b	12c74 <__assert_fail@plt+0x1194>
   131d8:	movw	r3, #64632	; 0xfc78
   131dc:	movt	r3, #2
   131e0:	ldr	r3, [r3]
   131e4:	str	r3, [r4, #8]
   131e8:	movw	r0, #53880	; 0xd278
   131ec:	movt	r0, #1
   131f0:	bl	11c94 <__assert_fail@plt+0x1b4>
   131f4:	movw	r3, #54404	; 0xd484
   131f8:	movt	r3, #1
   131fc:	str	r3, [r6, #16]
   13200:	mov	r3, #2
   13204:	str	r3, [r6, #20]
   13208:	add	r1, sp, #1344	; 0x540
   1320c:	add	r1, r1, #8
   13210:	mov	r0, r4
   13214:	bl	128e0 <__assert_fail@plt+0xe00>
   13218:	b	12c74 <__assert_fail@plt+0x1194>
   1321c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13220:	strd	r6, [sp, #8]
   13224:	strd	r8, [sp, #16]
   13228:	strd	sl, [sp, #24]
   1322c:	str	lr, [sp, #32]
   13230:	sub	sp, sp, #292	; 0x124
   13234:	mov	r7, r0
   13238:	str	r0, [sp, #20]
   1323c:	mov	r5, r1
   13240:	mov	r4, r2
   13244:	str	r2, [sp, #8]
   13248:	mov	r6, r3
   1324c:	bl	1255c <__assert_fail@plt+0xa7c>
   13250:	str	r5, [sp, #4]
   13254:	str	r4, [sp]
   13258:	mov	r3, r6
   1325c:	mov	r2, r7
   13260:	mov	r1, r0
   13264:	movw	r0, #54408	; 0xd488
   13268:	movt	r0, #1
   1326c:	bl	11c94 <__assert_fail@plt+0x1b4>
   13270:	add	r0, sp, #160	; 0xa0
   13274:	bl	119cc <sigemptyset@plt>
   13278:	mov	r1, #1
   1327c:	add	r0, sp, #160	; 0xa0
   13280:	bl	11870 <sigaddset@plt>
   13284:	mov	r1, #14
   13288:	add	r0, sp, #160	; 0xa0
   1328c:	bl	11870 <sigaddset@plt>
   13290:	add	r2, sp, #32
   13294:	add	r1, sp, #160	; 0xa0
   13298:	mov	r0, #0
   1329c:	bl	116b4 <sigprocmask@plt>
   132a0:	mov	r0, r5
   132a4:	bl	118e8 <strlen@plt>
   132a8:	str	r0, [sp, #12]
   132ac:	cmp	r0, #15
   132b0:	ble	132c4 <__assert_fail@plt+0x17e4>
   132b4:	mov	r4, r0
   132b8:	ldrb	r3, [r5, #3]
   132bc:	cmp	r3, #32
   132c0:	beq	132ec <__assert_fail@plt+0x180c>
   132c4:	orr	r6, r6, #4
   132c8:	movw	r0, #64632	; 0xfc78
   132cc:	movt	r0, #2
   132d0:	bl	1172c <time@plt>
   132d4:	movw	r0, #64632	; 0xfc78
   132d8:	movt	r0, #2
   132dc:	bl	11750 <ctime@plt>
   132e0:	add	r3, r0, #4
   132e4:	str	r3, [sp, #24]
   132e8:	b	13354 <__assert_fail@plt+0x1874>
   132ec:	ldrb	r3, [r5, #6]
   132f0:	cmp	r3, #32
   132f4:	bne	132c4 <__assert_fail@plt+0x17e4>
   132f8:	ldrb	r3, [r5, #9]
   132fc:	cmp	r3, #58	; 0x3a
   13300:	bne	132c4 <__assert_fail@plt+0x17e4>
   13304:	ldrb	r3, [r5, #12]
   13308:	cmp	r3, #58	; 0x3a
   1330c:	bne	132c4 <__assert_fail@plt+0x17e4>
   13310:	ldrb	r3, [r5, #15]
   13314:	cmp	r3, #32
   13318:	bne	132c4 <__assert_fail@plt+0x17e4>
   1331c:	movw	r0, #64632	; 0xfc78
   13320:	movt	r0, #2
   13324:	bl	1172c <time@plt>
   13328:	tst	r6, #4
   1332c:	bne	132d4 <__assert_fail@plt+0x17f4>
   13330:	movw	r3, #62924	; 0xf5cc
   13334:	movt	r3, #2
   13338:	ldr	r3, [r3, #16]
   1333c:	cmp	r3, #0
   13340:	streq	r5, [sp, #24]
   13344:	bne	133c0 <__assert_fail@plt+0x18e0>
   13348:	add	r5, r5, #16
   1334c:	sub	r3, r4, #16
   13350:	str	r3, [sp, #12]
   13354:	ands	r9, r6, #8
   13358:	ldreq	r3, [sp, #20]
   1335c:	ubfxeq	r8, r3, #3, #7
   13360:	movne	r8, #24
   13364:	movw	r3, #64560	; 0xfc30
   13368:	movt	r3, #2
   1336c:	ldr	r3, [r3]
   13370:	cmp	r3, #0
   13374:	beq	133d8 <__assert_fail@plt+0x18f8>
   13378:	movw	r3, #64072	; 0xfa48
   1337c:	movt	r3, #2
   13380:	ldr	r4, [r3]
   13384:	cmp	r4, #0
   13388:	beq	135e8 <__assert_fail@plt+0x1b08>
   1338c:	ldr	r3, [sp, #20]
   13390:	and	r3, r3, #7
   13394:	mov	r7, #1
   13398:	lsl	r7, r7, r3
   1339c:	movw	fp, #61868	; 0xf1ac
   133a0:	movt	fp, #2
   133a4:	movw	sl, #64632	; 0xfc78
   133a8:	movt	sl, #2
   133ac:	movw	r3, #54456	; 0xd4b8
   133b0:	movt	r3, #1
   133b4:	str	r3, [sp, #28]
   133b8:	str	r6, [sp, #16]
   133bc:	b	13674 <__assert_fail@plt+0x1b94>
   133c0:	movw	r0, #64632	; 0xfc78
   133c4:	movt	r0, #2
   133c8:	bl	11750 <ctime@plt>
   133cc:	add	r3, r0, #4
   133d0:	str	r3, [sp, #24]
   133d4:	b	13348 <__assert_fail@plt+0x1868>
   133d8:	mov	r2, #0
   133dc:	mov	r1, #1
   133e0:	ldr	r0, [pc, #732]	; 136c4 <__assert_fail@plt+0x1be4>
   133e4:	bl	1184c <open64@plt>
   133e8:	sxth	r7, r0
   133ec:	movw	r4, #64076	; 0xfa4c
   133f0:	movt	r4, #2
   133f4:	strh	r7, [r4, #6]
   133f8:	movw	r3, #64568	; 0xfc38
   133fc:	movt	r3, #2
   13400:	ldr	r0, [r3]
   13404:	bl	11768 <strdup@plt>
   13408:	str	r0, [r4, #432]	; 0x1b0
   1340c:	cmp	r7, #0
   13410:	bge	13428 <__assert_fail@plt+0x1948>
   13414:	mov	r2, #0
   13418:	add	r1, sp, #32
   1341c:	mov	r0, #2
   13420:	bl	116b4 <sigprocmask@plt>
   13424:	b	135f8 <__assert_fail@plt+0x1b18>
   13428:	movw	r4, #64076	; 0xfa4c
   1342c:	movt	r4, #2
   13430:	mov	r3, r5
   13434:	mov	r2, r6
   13438:	ldr	r1, [sp, #8]
   1343c:	mov	r0, r4
   13440:	bl	12a88 <__assert_fail@plt+0xfa8>
   13444:	ldrsh	r0, [r4, #6]
   13448:	bl	11ac8 <close@plt>
   1344c:	b	13414 <__assert_fail@plt+0x1934>
   13450:	ldr	r3, [sp, #16]
   13454:	tst	r3, #1
   13458:	beq	13690 <__assert_fail@plt+0x1bb0>
   1345c:	b	13668 <__assert_fail@plt+0x1b88>
   13460:	cmp	r9, #0
   13464:	bne	13478 <__assert_fail@plt+0x1998>
   13468:	ldr	r3, [r4, #448]	; 0x1c0
   1346c:	ldr	r2, [sp, #12]
   13470:	cmp	r3, r2
   13474:	beq	134f0 <__assert_fail@plt+0x1a10>
   13478:	ldr	r3, [r4, #452]	; 0x1c4
   1347c:	cmp	r3, #0
   13480:	bne	135ac <__assert_fail@plt+0x1acc>
   13484:	mov	r3, #0
   13488:	str	r3, [r4, #456]	; 0x1c8
   1348c:	mov	r2, #15
   13490:	ldr	r1, [sp, #24]
   13494:	add	r0, r4, #416	; 0x1a0
   13498:	bl	11960 <strncpy@plt>
   1349c:	ldr	r0, [r4, #432]	; 0x1b0
   134a0:	bl	1ae34 <argp_parse@@Base+0xf44>
   134a4:	ldr	r6, [sp, #8]
   134a8:	mov	r0, r6
   134ac:	bl	11768 <strdup@plt>
   134b0:	str	r0, [r4, #432]	; 0x1b0
   134b4:	ldr	r3, [sp, #12]
   134b8:	cmp	r3, #239	; 0xef
   134bc:	bgt	135c4 <__assert_fail@plt+0x1ae4>
   134c0:	str	r3, [r4, #448]	; 0x1c0
   134c4:	ldr	r3, [sp, #20]
   134c8:	str	r3, [r4, #444]	; 0x1bc
   134cc:	mov	r1, r5
   134d0:	add	r0, r4, #176	; 0xb0
   134d4:	bl	1181c <strcpy@plt>
   134d8:	mov	r3, #0
   134dc:	ldr	r2, [sp, #16]
   134e0:	mov	r1, r6
   134e4:	mov	r0, r4
   134e8:	bl	12a88 <__assert_fail@plt+0xfa8>
   134ec:	b	13668 <__assert_fail@plt+0x1b88>
   134f0:	ldr	r6, [r4, #432]	; 0x1b0
   134f4:	cmp	r6, #0
   134f8:	beq	13478 <__assert_fail@plt+0x1998>
   134fc:	add	r1, r4, #176	; 0xb0
   13500:	mov	r0, r5
   13504:	bl	11654 <strcmp@plt>
   13508:	cmp	r0, #0
   1350c:	bne	13478 <__assert_fail@plt+0x1998>
   13510:	mov	r1, r6
   13514:	ldr	r0, [sp, #8]
   13518:	bl	11654 <strcmp@plt>
   1351c:	cmp	r0, #0
   13520:	bne	13478 <__assert_fail@plt+0x1998>
   13524:	mov	r2, #15
   13528:	ldr	r1, [sp, #24]
   1352c:	add	r0, r4, #416	; 0x1a0
   13530:	bl	11960 <strncpy@plt>
   13534:	ldr	r1, [r4, #452]	; 0x1c4
   13538:	add	r1, r1, #1
   1353c:	str	r1, [r4, #452]	; 0x1c4
   13540:	ldr	r3, [r4, #456]	; 0x1c8
   13544:	add	r3, fp, r3, lsl #2
   13548:	ldr	r0, [sl]
   1354c:	ldr	r2, [r4, #8]
   13550:	ldr	r3, [r3, #376]	; 0x178
   13554:	sub	r2, r0, r2
   13558:	ldr	r0, [sp, #28]
   1355c:	bl	11c94 <__assert_fail@plt+0x1b4>
   13560:	ldr	r3, [r4, #456]	; 0x1c8
   13564:	add	r3, fp, r3, lsl #2
   13568:	ldr	r3, [r3, #376]	; 0x178
   1356c:	ldr	r2, [r4, #8]
   13570:	add	r3, r3, r2
   13574:	ldr	r2, [sl]
   13578:	cmp	r3, r2
   1357c:	bge	13668 <__assert_fail@plt+0x1b88>
   13580:	mov	r3, #0
   13584:	ldr	r2, [sp, #16]
   13588:	ldr	r1, [sp, #8]
   1358c:	mov	r0, r4
   13590:	bl	12a88 <__assert_fail@plt+0xfa8>
   13594:	ldr	r3, [r4, #456]	; 0x1c8
   13598:	add	r3, r3, #1
   1359c:	cmp	r3, #1
   135a0:	movhi	r3, #1
   135a4:	str	r3, [r4, #456]	; 0x1c8
   135a8:	b	13668 <__assert_fail@plt+0x1b88>
   135ac:	mov	r3, #0
   135b0:	mov	r2, r3
   135b4:	ldr	r1, [sp, #8]
   135b8:	mov	r0, r4
   135bc:	bl	12a88 <__assert_fail@plt+0xfa8>
   135c0:	b	13484 <__assert_fail@plt+0x19a4>
   135c4:	mov	r3, #0
   135c8:	strb	r3, [r4, #176]	; 0xb0
   135cc:	str	r3, [r4, #448]	; 0x1c0
   135d0:	mov	r3, r5
   135d4:	ldr	r2, [sp, #16]
   135d8:	ldr	r1, [sp, #8]
   135dc:	mov	r0, r4
   135e0:	bl	12a88 <__assert_fail@plt+0xfa8>
   135e4:	b	13668 <__assert_fail@plt+0x1b88>
   135e8:	mov	r2, #0
   135ec:	add	r1, sp, #32
   135f0:	mov	r0, #2
   135f4:	bl	116b4 <sigprocmask@plt>
   135f8:	add	sp, sp, #292	; 0x124
   135fc:	ldrd	r4, [sp]
   13600:	ldrd	r6, [sp, #8]
   13604:	ldrd	r8, [sp, #16]
   13608:	ldrd	sl, [sp, #24]
   1360c:	add	sp, sp, #32
   13610:	pop	{pc}		; (ldr pc, [sp], #4)
   13614:	ldr	r1, [r4, #436]	; 0x1b4
   13618:	cmp	r1, #0
   1361c:	beq	13468 <__assert_fail@plt+0x1988>
   13620:	ldr	r6, [r4, #440]	; 0x1b8
   13624:	mov	r2, r6
   13628:	mov	r0, r5
   1362c:	bl	11aa4 <strncmp@plt>
   13630:	cmp	r0, #0
   13634:	bne	13668 <__assert_fail@plt+0x1b88>
   13638:	bl	118c4 <__ctype_b_loc@plt>
   1363c:	ldrb	r3, [r5, r6]
   13640:	ldr	r1, [r0]
   13644:	lsl	r2, r3, #1
   13648:	ldrh	r2, [r1, r2]
   1364c:	ubfx	r2, r2, #3, #1
   13650:	cmp	r3, #95	; 0x5f
   13654:	cmpne	r3, #45	; 0x2d
   13658:	moveq	r3, #1
   1365c:	movne	r3, #0
   13660:	orrs	r3, r2, r3
   13664:	beq	13460 <__assert_fail@plt+0x1980>
   13668:	ldr	r4, [r4]
   1366c:	cmp	r4, #0
   13670:	beq	135e8 <__assert_fail@plt+0x1b08>
   13674:	add	r3, r4, r8
   13678:	ldrb	r3, [r3, #12]
   1367c:	tst	r3, r7
   13680:	beq	13668 <__assert_fail@plt+0x1b88>
   13684:	ldrsh	r3, [r4, #4]
   13688:	cmp	r3, #3
   1368c:	beq	13450 <__assert_fail@plt+0x1970>
   13690:	cmp	r9, #0
   13694:	beq	13614 <__assert_fail@plt+0x1b34>
   13698:	ldr	r2, [sl]
   1369c:	ldr	r3, [r4, #8]
   136a0:	sub	r2, r2, r3
   136a4:	ldr	r3, [fp, #8]
   136a8:	add	r3, r3, r3, lsr #31
   136ac:	cmp	r2, r3, asr #1
   136b0:	blt	13668 <__assert_fail@plt+0x1b88>
   136b4:	ldr	r1, [r4, #436]	; 0x1b4
   136b8:	cmp	r1, #0
   136bc:	bne	13620 <__assert_fail@plt+0x1b40>
   136c0:	b	13478 <__assert_fail@plt+0x1998>
   136c4:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   136c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   136cc:	strd	r6, [sp, #8]
   136d0:	strd	r8, [sp, #16]
   136d4:	strd	sl, [sp, #24]
   136d8:	str	lr, [sp, #32]
   136dc:	sub	sp, sp, #1040	; 0x410
   136e0:	sub	sp, sp, #4
   136e4:	str	r0, [sp, #4]
   136e8:	mov	r6, r1
   136ec:	ldrb	r3, [r1]
   136f0:	cmp	r3, #60	; 0x3c
   136f4:	movne	r7, #13
   136f8:	beq	1370c <__assert_fail@plt+0x1c2c>
   136fc:	tst	r7, #1016	; 0x3f8
   13700:	andeq	r7, r7, #7
   13704:	orreq	r7, r7, #8
   13708:	b	13774 <__assert_fail@plt+0x1c94>
   1370c:	bl	118c4 <__ctype_b_loc@plt>
   13710:	ldr	r0, [r0]
   13714:	mov	r2, r6
   13718:	mov	r7, #0
   1371c:	b	13730 <__assert_fail@plt+0x1c50>
   13720:	add	r7, r7, r7, lsl #2
   13724:	sub	r3, r3, #48	; 0x30
   13728:	add	r7, r3, r7, lsl #1
   1372c:	mov	r2, r6
   13730:	add	r6, r2, #1
   13734:	ldrb	r3, [r2, #1]
   13738:	lsl	r1, r3, #1
   1373c:	ldrh	r1, [r0, r1]
   13740:	tst	r1, #2048	; 0x800
   13744:	bne	13720 <__assert_fail@plt+0x1c40>
   13748:	cmp	r3, #62	; 0x3e
   1374c:	addeq	r6, r2, #2
   13750:	bic	r3, r7, #1020	; 0x3fc
   13754:	bic	r3, r3, #3
   13758:	cmp	r3, #0
   1375c:	movne	r7, #13
   13760:	bne	13774 <__assert_fail@plt+0x1c94>
   13764:	ubfx	r3, r7, #3, #7
   13768:	cmp	r3, #24
   1376c:	movgt	r7, #13
   13770:	ble	136fc <__assert_fail@plt+0x1c1c>
   13774:	add	r4, sp, #12
   13778:	add	r8, sp, #1024	; 0x400
   1377c:	add	r8, r8, #12
   13780:	mov	fp, #94	; 0x5e
   13784:	mov	sl, #9
   13788:	mov	r9, #32
   1378c:	ldrb	r5, [r6], #1
   13790:	cmp	r5, #0
   13794:	cmpne	r4, r8
   13798:	bcs	137f4 <__assert_fail@plt+0x1d14>
   1379c:	bl	118c4 <__ctype_b_loc@plt>
   137a0:	ldr	r2, [r0]
   137a4:	lsl	r3, r5, #1
   137a8:	ldrh	r3, [r2, r3]
   137ac:	tst	r3, #2
   137b0:	strbeq	r5, [r4], #1
   137b4:	beq	1378c <__assert_fail@plt+0x1cac>
   137b8:	cmp	r5, #10
   137bc:	strbeq	r9, [r4], #1
   137c0:	beq	1378c <__assert_fail@plt+0x1cac>
   137c4:	cmp	r5, #9
   137c8:	strbeq	sl, [r4], #1
   137cc:	beq	1378c <__assert_fail@plt+0x1cac>
   137d0:	cmp	r5, #126	; 0x7e
   137d4:	strbgt	r5, [r4], #1
   137d8:	bgt	1378c <__assert_fail@plt+0x1cac>
   137dc:	mov	r3, r4
   137e0:	strb	fp, [r3], #2
   137e4:	eor	r5, r5, #64	; 0x40
   137e8:	strb	r5, [r4, #1]
   137ec:	mov	r4, r3
   137f0:	b	1378c <__assert_fail@plt+0x1cac>
   137f4:	mov	r3, #0
   137f8:	strb	r3, [r4]
   137fc:	movw	r3, #64556	; 0xfc2c
   13800:	movt	r3, #2
   13804:	ldr	r3, [r3]
   13808:	cmp	r3, #0
   1380c:	movne	r3, #2
   13810:	moveq	r3, #0
   13814:	ldr	r2, [sp, #4]
   13818:	add	r1, sp, #12
   1381c:	mov	r0, r7
   13820:	bl	1321c <__assert_fail@plt+0x173c>
   13824:	add	sp, sp, #1040	; 0x410
   13828:	add	sp, sp, #4
   1382c:	ldrd	r4, [sp]
   13830:	ldrd	r6, [sp, #8]
   13834:	ldrd	r8, [sp, #16]
   13838:	ldrd	sl, [sp, #24]
   1383c:	add	sp, sp, #32
   13840:	pop	{pc}		; (ldr pc, [sp], #4)
   13844:	strd	r4, [sp, #-16]!
   13848:	str	r6, [sp, #8]
   1384c:	str	lr, [sp, #12]
   13850:	sub	sp, sp, #1024	; 0x400
   13854:	sub	sp, sp, #8
   13858:	mov	r4, r0
   1385c:	movw	r3, #54496	; 0xd4e0
   13860:	movt	r3, #1
   13864:	ldrd	r0, [r3]
   13868:	strd	r0, [sp, #4]
   1386c:	ldrb	r3, [r3, #8]
   13870:	strb	r3, [sp, #12]
   13874:	add	r0, sp, #4
   13878:	bl	118e8 <strlen@plt>
   1387c:	add	r3, sp, #4
   13880:	add	r6, r3, r0
   13884:	ldrb	r3, [r4]
   13888:	cmp	r3, #0
   1388c:	beq	13988 <__assert_fail@plt+0x1ea8>
   13890:	add	r2, sp, #8
   13894:	add	r5, r2, #1020	; 0x3fc
   13898:	b	1392c <__assert_fail@plt+0x1e4c>
   1389c:	bl	118c4 <__ctype_b_loc@plt>
   138a0:	ldr	ip, [r0]
   138a4:	mov	r2, r4
   138a8:	mov	r0, #0
   138ac:	b	138c0 <__assert_fail@plt+0x1de0>
   138b0:	add	r0, r0, r0, lsl #2
   138b4:	sub	r3, r3, #48	; 0x30
   138b8:	add	r0, r3, r0, lsl #1
   138bc:	mov	r2, r4
   138c0:	add	r4, r2, #1
   138c4:	ldrb	r3, [r2, #1]
   138c8:	lsl	r1, r3, #1
   138cc:	ldrh	r1, [ip, r1]
   138d0:	tst	r1, #2048	; 0x800
   138d4:	bne	138b0 <__assert_fail@plt+0x1dd0>
   138d8:	cmp	r3, #62	; 0x3e
   138dc:	addeq	r4, r2, #2
   138e0:	bic	r2, r0, #1020	; 0x3fc
   138e4:	bic	r2, r2, #3
   138e8:	mov	r3, #6
   138ec:	cmp	r2, #0
   138f0:	movne	r0, #2
   138f4:	b	1393c <__assert_fail@plt+0x1e5c>
   138f8:	mov	ip, r6
   138fc:	b	13904 <__assert_fail@plt+0x1e24>
   13900:	mov	ip, r6
   13904:	mov	r2, #0
   13908:	strb	r2, [ip]
   1390c:	movw	r2, #64568	; 0xfc38
   13910:	movt	r2, #2
   13914:	ldr	r2, [r2]
   13918:	add	r1, sp, #4
   1391c:	bl	1321c <__assert_fail@plt+0x173c>
   13920:	ldrb	r3, [r4]
   13924:	cmp	r3, #0
   13928:	beq	13988 <__assert_fail@plt+0x1ea8>
   1392c:	cmp	r3, #60	; 0x3c
   13930:	movne	r3, #7
   13934:	movne	r0, #2
   13938:	beq	1389c <__assert_fail@plt+0x1dbc>
   1393c:	ldrb	r2, [r4]
   13940:	cmp	r2, #0
   13944:	beq	138f8 <__assert_fail@plt+0x1e18>
   13948:	add	r4, r4, #1
   1394c:	cmp	r2, #10
   13950:	cmpne	r6, r5
   13954:	bcs	13900 <__assert_fail@plt+0x1e20>
   13958:	mov	r1, r4
   1395c:	mov	ip, r6
   13960:	mov	r4, r1
   13964:	strb	r2, [ip], #1
   13968:	ldrb	r2, [r1], #1
   1396c:	cmp	r2, #0
   13970:	beq	13904 <__assert_fail@plt+0x1e24>
   13974:	mov	r4, r1
   13978:	cmp	r2, #10
   1397c:	cmpne	ip, r5
   13980:	bcc	13960 <__assert_fail@plt+0x1e80>
   13984:	b	13904 <__assert_fail@plt+0x1e24>
   13988:	add	sp, sp, #1024	; 0x400
   1398c:	add	sp, sp, #8
   13990:	ldrd	r4, [sp]
   13994:	ldr	r6, [sp, #8]
   13998:	add	sp, sp, #12
   1399c:	pop	{pc}		; (ldr pc, [sp], #4)
   139a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   139a4:	strd	r6, [sp, #8]
   139a8:	str	r8, [sp, #16]
   139ac:	str	lr, [sp, #20]
   139b0:	mov	r0, #0
   139b4:	bl	1172c <time@plt>
   139b8:	movw	r3, #64632	; 0xfc78
   139bc:	movt	r3, #2
   139c0:	str	r0, [r3]
   139c4:	movw	r3, #61868	; 0xf1ac
   139c8:	movt	r3, #2
   139cc:	ldr	r1, [r3, #8]
   139d0:	cmp	r1, #0
   139d4:	ble	139f4 <__assert_fail@plt+0x1f14>
   139d8:	movw	r2, #64644	; 0xfc84
   139dc:	movt	r2, #2
   139e0:	ldr	r3, [r2]
   139e4:	add	r3, r3, #30
   139e8:	str	r3, [r2]
   139ec:	cmp	r1, r3
   139f0:	ble	13a24 <__assert_fail@plt+0x1f44>
   139f4:	movw	r3, #64072	; 0xfa48
   139f8:	movt	r3, #2
   139fc:	ldr	r4, [r3]
   13a00:	cmp	r4, #0
   13a04:	beq	13ad8 <__assert_fail@plt+0x1ff8>
   13a08:	movw	r5, #61868	; 0xf1ac
   13a0c:	movt	r5, #2
   13a10:	movw	r6, #64632	; 0xfc78
   13a14:	movt	r6, #2
   13a18:	movw	r7, #54520	; 0xd4f8
   13a1c:	movt	r7, #1
   13a20:	b	13aa8 <__assert_fail@plt+0x1fc8>
   13a24:	movw	r2, #64568	; 0xfc38
   13a28:	movt	r2, #2
   13a2c:	mov	r3, #12
   13a30:	ldr	r2, [r2]
   13a34:	movw	r1, #54508	; 0xd4ec
   13a38:	movt	r1, #1
   13a3c:	mov	r0, #6
   13a40:	bl	1321c <__assert_fail@plt+0x173c>
   13a44:	movw	r3, #64644	; 0xfc84
   13a48:	movt	r3, #2
   13a4c:	mov	r2, #0
   13a50:	str	r2, [r3]
   13a54:	b	139f4 <__assert_fail@plt+0x1f14>
   13a58:	ldrsh	r1, [r4, #4]
   13a5c:	add	r1, r5, r1, lsl #2
   13a60:	ldr	r1, [r1, #320]	; 0x140
   13a64:	mov	r0, r7
   13a68:	bl	11c94 <__assert_fail@plt+0x1b4>
   13a6c:	movw	r1, #64568	; 0xfc38
   13a70:	movt	r1, #2
   13a74:	mov	r3, #0
   13a78:	mov	r2, r3
   13a7c:	ldr	r1, [r1]
   13a80:	mov	r0, r4
   13a84:	bl	12a88 <__assert_fail@plt+0xfa8>
   13a88:	ldr	r3, [r4, #456]	; 0x1c8
   13a8c:	add	r3, r3, #1
   13a90:	cmp	r3, #1
   13a94:	movhi	r3, #1
   13a98:	str	r3, [r4, #456]	; 0x1c8
   13a9c:	ldr	r4, [r4]
   13aa0:	cmp	r4, #0
   13aa4:	beq	13ad8 <__assert_fail@plt+0x1ff8>
   13aa8:	ldr	r2, [r4, #452]	; 0x1c4
   13aac:	cmp	r2, #0
   13ab0:	beq	13a9c <__assert_fail@plt+0x1fbc>
   13ab4:	ldr	r3, [r4, #456]	; 0x1c8
   13ab8:	add	r3, r5, r3, lsl #2
   13abc:	ldr	r3, [r3, #376]	; 0x178
   13ac0:	ldr	r1, [r4, #8]
   13ac4:	add	r1, r3, r1
   13ac8:	ldr	r0, [r6]
   13acc:	cmp	r1, r0
   13ad0:	bgt	13a9c <__assert_fail@plt+0x1fbc>
   13ad4:	b	13a58 <__assert_fail@plt+0x1f78>
   13ad8:	mov	r0, #30
   13adc:	bl	11780 <alarm@plt>
   13ae0:	ldrd	r4, [sp]
   13ae4:	ldrd	r6, [sp, #8]
   13ae8:	ldr	r8, [sp, #16]
   13aec:	add	sp, sp, #20
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)
   13af4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13af8:	strd	r6, [sp, #8]
   13afc:	str	r8, [sp, #16]
   13b00:	str	lr, [sp, #20]
   13b04:	sub	sp, sp, #104	; 0x68
   13b08:	mov	r6, r0
   13b0c:	movw	r3, #64560	; 0xfc30
   13b10:	movt	r3, #2
   13b14:	ldr	r7, [r3]
   13b18:	mov	r2, #0
   13b1c:	str	r2, [r3]
   13b20:	movw	r3, #64072	; 0xfa48
   13b24:	movt	r3, #2
   13b28:	ldr	r4, [r3]
   13b2c:	cmp	r4, r2
   13b30:	beq	13b74 <__assert_fail@plt+0x2094>
   13b34:	movw	r5, #64568	; 0xfc38
   13b38:	movt	r5, #2
   13b3c:	mov	r8, r2
   13b40:	b	13b64 <__assert_fail@plt+0x2084>
   13b44:	mov	r3, r8
   13b48:	mov	r2, r8
   13b4c:	ldr	r1, [r5]
   13b50:	mov	r0, r4
   13b54:	bl	12a88 <__assert_fail@plt+0xfa8>
   13b58:	ldr	r4, [r4]
   13b5c:	cmp	r4, #0
   13b60:	beq	13b74 <__assert_fail@plt+0x2094>
   13b64:	ldr	r3, [r4, #452]	; 0x1c4
   13b68:	cmp	r3, #0
   13b6c:	beq	13b58 <__assert_fail@plt+0x2078>
   13b70:	b	13b44 <__assert_fail@plt+0x2064>
   13b74:	movw	r3, #64560	; 0xfc30
   13b78:	movt	r3, #2
   13b7c:	str	r7, [r3]
   13b80:	cmp	r6, #0
   13b84:	bne	13bc8 <__assert_fail@plt+0x20e8>
   13b88:	movw	r3, #61868	; 0xf1ac
   13b8c:	movt	r3, #2
   13b90:	ldr	r0, [r3, #384]	; 0x180
   13b94:	cmp	r0, #0
   13b98:	bge	13c14 <__assert_fail@plt+0x2134>
   13b9c:	movw	r3, #64544	; 0xfc20
   13ba0:	movt	r3, #2
   13ba4:	ldr	r3, [r3]
   13ba8:	cmp	r3, #0
   13bac:	beq	13c5c <__assert_fail@plt+0x217c>
   13bb0:	mov	r4, #0
   13bb4:	movw	r5, #64640	; 0xfc80
   13bb8:	movt	r5, #2
   13bbc:	movw	r6, #64544	; 0xfc20
   13bc0:	movt	r6, #2
   13bc4:	b	13c2c <__assert_fail@plt+0x214c>
   13bc8:	movw	r3, #62908	; 0xf5bc
   13bcc:	movt	r3, #2
   13bd0:	mov	r2, r6
   13bd4:	ldr	r1, [r3]
   13bd8:	movw	r0, #54560	; 0xd520
   13bdc:	movt	r0, #1
   13be0:	bl	11c94 <__assert_fail@plt+0x1b4>
   13be4:	mov	r3, r6
   13be8:	movw	r2, #54588	; 0xd53c
   13bec:	movt	r2, #1
   13bf0:	mov	r1, #100	; 0x64
   13bf4:	add	r0, sp, #4
   13bf8:	bl	11924 <snprintf@plt>
   13bfc:	bl	11918 <__errno_location@plt>
   13c00:	mov	r3, #0
   13c04:	str	r3, [r0]
   13c08:	add	r0, sp, #4
   13c0c:	bl	1283c <__assert_fail@plt+0xd5c>
   13c10:	b	13b88 <__assert_fail@plt+0x20a8>
   13c14:	bl	11ac8 <close@plt>
   13c18:	b	13b9c <__assert_fail@plt+0x20bc>
   13c1c:	add	r4, r4, #1
   13c20:	ldr	r3, [r6]
   13c24:	cmp	r3, r4
   13c28:	bls	13c5c <__assert_fail@plt+0x217c>
   13c2c:	ldr	r3, [r5]
   13c30:	add	r3, r3, r4, lsl #3
   13c34:	ldr	r0, [r3, #4]
   13c38:	cmp	r0, #0
   13c3c:	blt	13c1c <__assert_fail@plt+0x213c>
   13c40:	bl	11ac8 <close@plt>
   13c44:	ldr	r3, [r5]
   13c48:	ldr	r0, [r3, r4, lsl #3]
   13c4c:	cmp	r0, #0
   13c50:	beq	13c1c <__assert_fail@plt+0x213c>
   13c54:	bl	11798 <unlink@plt>
   13c58:	b	13c1c <__assert_fail@plt+0x213c>
   13c5c:	movw	r3, #61868	; 0xf1ac
   13c60:	movt	r3, #2
   13c64:	ldr	r0, [r3, #312]	; 0x138
   13c68:	cmp	r0, #0
   13c6c:	bge	13c8c <__assert_fail@plt+0x21ac>
   13c70:	movw	r3, #61868	; 0xf1ac
   13c74:	movt	r3, #2
   13c78:	ldr	r0, [r3, #316]	; 0x13c
   13c7c:	cmp	r0, #0
   13c80:	bge	13c94 <__assert_fail@plt+0x21b4>
   13c84:	mov	r0, #0
   13c88:	bl	118dc <exit@plt>
   13c8c:	bl	11ac8 <close@plt>
   13c90:	b	13c70 <__assert_fail@plt+0x2190>
   13c94:	bl	11ac8 <close@plt>
   13c98:	b	13c84 <__assert_fail@plt+0x21a4>
   13c9c:	strd	r4, [sp, #-16]!
   13ca0:	str	r6, [sp, #8]
   13ca4:	str	lr, [sp, #12]
   13ca8:	mov	r5, r0
   13cac:	mov	r4, r1
   13cb0:	bl	118c4 <__ctype_b_loc@plt>
   13cb4:	ldrb	r3, [r5]
   13cb8:	ldr	r2, [r0]
   13cbc:	lsl	r3, r3, #1
   13cc0:	ldrh	r3, [r2, r3]
   13cc4:	tst	r3, #2048	; 0x800
   13cc8:	bne	13d00 <__assert_fail@plt+0x2220>
   13ccc:	ldr	r1, [r4]
   13cd0:	cmp	r1, #0
   13cd4:	mvneq	r0, #0
   13cd8:	beq	13d18 <__assert_fail@plt+0x2238>
   13cdc:	mov	r0, r5
   13ce0:	bl	117c8 <strcasecmp@plt>
   13ce4:	cmp	r0, #0
   13ce8:	beq	13d14 <__assert_fail@plt+0x2234>
   13cec:	ldr	r1, [r4, #8]!
   13cf0:	cmp	r1, #0
   13cf4:	bne	13cdc <__assert_fail@plt+0x21fc>
   13cf8:	mvn	r0, #0
   13cfc:	b	13d18 <__assert_fail@plt+0x2238>
   13d00:	mov	r2, #10
   13d04:	mov	r1, #0
   13d08:	mov	r0, r5
   13d0c:	bl	11660 <strtol@plt>
   13d10:	b	13d18 <__assert_fail@plt+0x2238>
   13d14:	ldr	r0, [r4, #4]
   13d18:	ldrd	r4, [sp]
   13d1c:	ldr	r6, [sp, #8]
   13d20:	add	sp, sp, #12
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)
   13d28:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13d2c:	strd	r6, [sp, #8]
   13d30:	strd	r8, [sp, #16]
   13d34:	strd	sl, [sp, #24]
   13d38:	str	lr, [sp, #32]
   13d3c:	sub	sp, sp, #1280	; 0x500
   13d40:	sub	sp, sp, #12
   13d44:	mov	r5, r0
   13d48:	mov	fp, r1
   13d4c:	movw	r3, #64576	; 0xfc40
   13d50:	movt	r3, #2
   13d54:	ldr	r3, [r3]
   13d58:	cmp	r3, #0
   13d5c:	beq	13de8 <__assert_fail@plt+0x2308>
   13d60:	movw	r2, #54612	; 0xd554
   13d64:	movt	r2, #1
   13d68:	mov	r1, r5
   13d6c:	movw	r0, #54624	; 0xd560
   13d70:	movt	r0, #1
   13d74:	bl	11c94 <__assert_fail@plt+0x1b4>
   13d78:	bl	11918 <__errno_location@plt>
   13d7c:	mov	r1, #0
   13d80:	str	r1, [r0]
   13d84:	mov	r2, #464	; 0x1d0
   13d88:	mov	r0, fp
   13d8c:	bl	11954 <memset@plt>
   13d90:	add	r3, fp, #12
   13d94:	str	r3, [sp, #16]
   13d98:	add	r3, fp, #11
   13d9c:	add	r1, fp, #36	; 0x24
   13da0:	mov	r2, #0
   13da4:	strb	r2, [r3, #1]!
   13da8:	cmp	r1, r3
   13dac:	bne	13da4 <__assert_fail@plt+0x22c4>
   13db0:	mov	r3, #0
   13db4:	str	r3, [fp, #460]	; 0x1cc
   13db8:	movw	r3, #54640	; 0xd570
   13dbc:	movt	r3, #1
   13dc0:	str	r3, [sp, #8]
   13dc4:	movw	r3, #61868	; 0xf1ac
   13dc8:	movt	r3, #2
   13dcc:	str	r3, [sp, #20]
   13dd0:	movw	r2, #54716	; 0xd5bc
   13dd4:	movt	r2, #1
   13dd8:	str	r2, [sp, #4]
   13ddc:	add	r3, r3, #24
   13de0:	str	r3, [sp, #12]
   13de4:	b	1405c <__assert_fail@plt+0x257c>
   13de8:	movw	r2, #60544	; 0xec80
   13dec:	movt	r2, #1
   13df0:	mov	r3, r2
   13df4:	b	13d68 <__assert_fail@plt+0x2288>
   13df8:	ldrb	r3, [r2], #1
   13dfc:	cmp	r3, #0
   13e00:	cmpne	r3, #9
   13e04:	bne	14074 <__assert_fail@plt+0x2594>
   13e08:	b	14080 <__assert_fail@plt+0x25a0>
   13e0c:	cmp	r3, #61	; 0x3d
   13e10:	moveq	r4, #1
   13e14:	mov	r7, r2
   13e18:	ldrb	r3, [r2], #1
   13e1c:	cmp	r3, #61	; 0x3d
   13e20:	cmpne	r3, #33	; 0x21
   13e24:	bne	13e38 <__assert_fail@plt+0x2358>
   13e28:	cmp	r3, #33	; 0x21
   13e2c:	moveq	r8, r1
   13e30:	bne	13e0c <__assert_fail@plt+0x232c>
   13e34:	b	13e14 <__assert_fail@plt+0x2334>
   13e38:	cmp	r3, #42	; 0x2a
   13e3c:	moveq	r7, #0
   13e40:	moveq	r4, #255	; 0xff
   13e44:	bne	13e64 <__assert_fail@plt+0x2384>
   13e48:	cmp	r8, #0
   13e4c:	moveq	r3, r7
   13e50:	movne	r3, r4
   13e54:	cmp	r8, #0
   13e58:	movne	r4, r7
   13e5c:	mov	r7, r3
   13e60:	b	13f64 <__assert_fail@plt+0x2484>
   13e64:	ldr	r3, [sp, #20]
   13e68:	add	r1, r3, #208	; 0xd0
   13e6c:	mov	r0, r7
   13e70:	bl	13c9c <__assert_fail@plt+0x21bc>
   13e74:	cmp	r0, #0
   13e78:	blt	13ea8 <__assert_fail@plt+0x23c8>
   13e7c:	cmp	r0, #16
   13e80:	cmpne	r0, #7
   13e84:	bgt	13ea8 <__assert_fail@plt+0x23c8>
   13e88:	cmp	r0, #16
   13e8c:	beq	13ee0 <__assert_fail@plt+0x2400>
   13e90:	cmp	r4, #0
   13e94:	beq	13ecc <__assert_fail@plt+0x23ec>
   13e98:	mov	r4, #1
   13e9c:	lsl	r4, r4, r0
   13ea0:	mov	r7, #0
   13ea4:	b	13e48 <__assert_fail@plt+0x2368>
   13ea8:	mov	r3, r7
   13eac:	movw	r2, #54652	; 0xd57c
   13eb0:	movt	r2, #1
   13eb4:	mov	r1, #200	; 0xc8
   13eb8:	add	r0, sp, #28
   13ebc:	bl	11924 <snprintf@plt>
   13ec0:	add	r0, sp, #28
   13ec4:	bl	1283c <__assert_fail@plt+0xd5c>
   13ec8:	b	14030 <__assert_fail@plt+0x2550>
   13ecc:	add	r0, r0, #1
   13ed0:	mvn	r4, #0
   13ed4:	mvn	r4, r4, lsl r0
   13ed8:	mov	r7, #0
   13edc:	b	13e48 <__assert_fail@plt+0x2368>
   13ee0:	mov	r7, #255	; 0xff
   13ee4:	mov	r4, #0
   13ee8:	b	13e48 <__assert_fail@plt+0x2368>
   13eec:	mov	r3, #0
   13ef0:	strb	r3, [r9]
   13ef4:	ldrb	r3, [sp, #228]	; 0xe4
   13ef8:	cmp	r3, #42	; 0x2a
   13efc:	beq	13fb8 <__assert_fail@plt+0x24d8>
   13f00:	ldr	r1, [sp, #12]
   13f04:	add	r0, sp, #228	; 0xe4
   13f08:	bl	13c9c <__assert_fail@plt+0x21bc>
   13f0c:	cmp	r0, #192	; 0xc0
   13f10:	bhi	14010 <__assert_fail@plt+0x2530>
   13f14:	asr	r0, r0, #3
   13f18:	add	r2, fp, r0
   13f1c:	ldrb	r3, [r2, #12]
   13f20:	bic	r3, r3, r7
   13f24:	orr	r3, r3, r4
   13f28:	strb	r3, [r2, #12]
   13f2c:	movw	r3, #64068	; 0xfa44
   13f30:	movt	r3, #2
   13f34:	ldr	r2, [r3]
   13f38:	mov	r1, #1
   13f3c:	orr	r0, r2, r1, lsl r0
   13f40:	str	r0, [r3]
   13f44:	ldrb	r3, [r5]
   13f48:	cmp	r3, #32
   13f4c:	cmpne	r3, #44	; 0x2c
   13f50:	bne	13f64 <__assert_fail@plt+0x2484>
   13f54:	ldrb	r3, [r5, #1]!
   13f58:	cmp	r3, #32
   13f5c:	cmpne	r3, #44	; 0x2c
   13f60:	beq	13f54 <__assert_fail@plt+0x2474>
   13f64:	ldrb	r8, [r5]
   13f68:	cmp	r8, #0
   13f6c:	beq	14058 <__assert_fail@plt+0x2578>
   13f70:	mov	r1, r8
   13f74:	ldr	r0, [sp, #4]
   13f78:	bl	11900 <strchr@plt>
   13f7c:	cmp	r0, #0
   13f80:	bne	14050 <__assert_fail@plt+0x2570>
   13f84:	add	r9, sp, #228	; 0xe4
   13f88:	movw	sl, #54680	; 0xd598
   13f8c:	movt	sl, #1
   13f90:	mov	r1, r8
   13f94:	mov	r0, sl
   13f98:	bl	11900 <strchr@plt>
   13f9c:	cmp	r0, #0
   13fa0:	bne	13eec <__assert_fail@plt+0x240c>
   13fa4:	strb	r8, [r9], #1
   13fa8:	ldrb	r8, [r5, #1]!
   13fac:	cmp	r8, #0
   13fb0:	bne	13f90 <__assert_fail@plt+0x24b0>
   13fb4:	b	13eec <__assert_fail@plt+0x240c>
   13fb8:	ldrb	r0, [sp, #229]	; 0xe5
   13fbc:	movw	r3, #64068	; 0xfa44
   13fc0:	movt	r3, #2
   13fc4:	ldr	lr, [r3]
   13fc8:	ldr	r2, [sp, #16]
   13fcc:	mov	r1, #0
   13fd0:	mvn	ip, r7
   13fd4:	b	13ff8 <__assert_fail@plt+0x2518>
   13fd8:	ldrb	r3, [r2]
   13fdc:	and	r3, r3, ip
   13fe0:	orr	r3, r3, r4
   13fe4:	strb	r3, [r2]
   13fe8:	add	r1, r1, #1
   13fec:	add	r2, r2, #1
   13ff0:	cmp	r1, #25
   13ff4:	beq	13f44 <__assert_fail@plt+0x2464>
   13ff8:	cmp	r0, #42	; 0x2a
   13ffc:	bne	13fd8 <__assert_fail@plt+0x24f8>
   14000:	asr	r3, lr, r1
   14004:	tst	r3, #1
   14008:	beq	13fd8 <__assert_fail@plt+0x24f8>
   1400c:	b	13fe8 <__assert_fail@plt+0x2508>
   14010:	add	r3, sp, #228	; 0xe4
   14014:	movw	r2, #54688	; 0xd5a0
   14018:	movt	r2, #1
   1401c:	mov	r1, #200	; 0xc8
   14020:	add	r0, sp, #28
   14024:	bl	11924 <snprintf@plt>
   14028:	add	r0, sp, #28
   1402c:	bl	1283c <__assert_fail@plt+0xd5c>
   14030:	add	sp, sp, #1280	; 0x500
   14034:	add	sp, sp, #12
   14038:	ldrd	r4, [sp]
   1403c:	ldrd	r6, [sp, #8]
   14040:	ldrd	r8, [sp, #16]
   14044:	ldrd	sl, [sp, #24]
   14048:	add	sp, sp, #32
   1404c:	pop	{pc}		; (ldr pc, [sp], #4)
   14050:	mov	r5, r6
   14054:	b	1405c <__assert_fail@plt+0x257c>
   14058:	mov	r5, r6
   1405c:	ldrb	r3, [r5]
   14060:	and	r2, r3, #223	; 0xdf
   14064:	cmp	r3, #9
   14068:	cmpne	r2, #0
   1406c:	beq	14100 <__assert_fail@plt+0x2620>
   14070:	add	r2, r5, #1
   14074:	mov	r6, r2
   14078:	cmp	r3, #46	; 0x2e
   1407c:	bne	13df8 <__assert_fail@plt+0x2318>
   14080:	ldrb	r4, [r6]
   14084:	cmp	r4, #0
   14088:	addne	r7, sp, #228	; 0xe4
   1408c:	beq	144d8 <__assert_fail@plt+0x29f8>
   14090:	mov	r1, r4
   14094:	ldr	r0, [sp, #8]
   14098:	bl	11900 <strchr@plt>
   1409c:	cmp	r0, #0
   140a0:	bne	140b4 <__assert_fail@plt+0x25d4>
   140a4:	strb	r4, [r7], #1
   140a8:	ldrb	r4, [r6, #1]!
   140ac:	cmp	r4, #0
   140b0:	bne	14090 <__assert_fail@plt+0x25b0>
   140b4:	mov	r3, #0
   140b8:	strb	r3, [r7]
   140bc:	ldrb	r1, [r6]
   140c0:	cmp	r1, r3
   140c4:	beq	140ec <__assert_fail@plt+0x260c>
   140c8:	movw	r4, #54648	; 0xd578
   140cc:	movt	r4, #1
   140d0:	mov	r0, r4
   140d4:	bl	11900 <strchr@plt>
   140d8:	cmp	r0, #0
   140dc:	beq	140ec <__assert_fail@plt+0x260c>
   140e0:	ldrb	r1, [r6, #1]!
   140e4:	cmp	r1, #0
   140e8:	bne	140d0 <__assert_fail@plt+0x25f0>
   140ec:	add	r2, sp, #228	; 0xe4
   140f0:	mov	r4, #0
   140f4:	mov	r8, r4
   140f8:	mov	r1, #1
   140fc:	b	13e14 <__assert_fail@plt+0x2334>
   14100:	cmp	r3, #32
   14104:	cmpne	r3, #9
   14108:	bne	1411c <__assert_fail@plt+0x263c>
   1410c:	ldrb	r3, [r5, #1]!
   14110:	cmp	r3, #32
   14114:	cmpne	r3, #9
   14118:	beq	1410c <__assert_fail@plt+0x262c>
   1411c:	cmp	r3, #45	; 0x2d
   14120:	beq	14198 <__assert_fail@plt+0x26b8>
   14124:	ldrb	r3, [r5]
   14128:	cmp	r3, #0
   1412c:	beq	141ac <__assert_fail@plt+0x26cc>
   14130:	cmp	r3, #47	; 0x2f
   14134:	beq	14344 <__assert_fail@plt+0x2864>
   14138:	bls	141c0 <__assert_fail@plt+0x26e0>
   1413c:	cmp	r3, #64	; 0x40
   14140:	beq	14208 <__assert_fail@plt+0x2728>
   14144:	cmp	r3, #124	; 0x7c
   14148:	bne	143cc <__assert_fail@plt+0x28ec>
   1414c:	mov	r0, r5
   14150:	bl	11768 <strdup@plt>
   14154:	str	r0, [fp, #40]	; 0x28
   14158:	add	r5, r5, #1
   1415c:	movw	r1, #2050	; 0x802
   14160:	mov	r0, r5
   14164:	bl	1184c <open64@plt>
   14168:	sxth	r4, r0
   1416c:	strh	r4, [fp, #6]
   14170:	cmp	r4, #0
   14174:	blt	14308 <__assert_fail@plt+0x2828>
   14178:	ldr	r1, [pc, #868]	; 144e4 <__assert_fail@plt+0x2a04>
   1417c:	mov	r0, r5
   14180:	bl	11654 <strcmp@plt>
   14184:	cmp	r0, #0
   14188:	bne	14328 <__assert_fail@plt+0x2848>
   1418c:	mov	r3, #3
   14190:	strh	r3, [fp, #4]
   14194:	b	141d0 <__assert_fail@plt+0x26f0>
   14198:	ldr	r3, [fp, #460]	; 0x1cc
   1419c:	orr	r3, r3, #1
   141a0:	str	r3, [fp, #460]	; 0x1cc
   141a4:	add	r5, r5, #1
   141a8:	b	14124 <__assert_fail@plt+0x2644>
   141ac:	strh	r3, [fp, #4]
   141b0:	movw	r0, #54724	; 0xd5c4
   141b4:	movt	r0, #1
   141b8:	bl	1283c <__assert_fail@plt+0xd5c>
   141bc:	b	14030 <__assert_fail@plt+0x2550>
   141c0:	cmp	r3, #42	; 0x2a
   141c4:	moveq	r3, #6
   141c8:	strheq	r3, [fp, #4]
   141cc:	bne	143cc <__assert_fail@plt+0x28ec>
   141d0:	movw	r3, #64576	; 0xfc40
   141d4:	movt	r3, #2
   141d8:	ldr	r4, [r3]
   141dc:	cmp	r4, #0
   141e0:	moveq	r3, #0
   141e4:	streq	r3, [fp, #436]	; 0x1b4
   141e8:	beq	14030 <__assert_fail@plt+0x2550>
   141ec:	mov	r0, r4
   141f0:	bl	11768 <strdup@plt>
   141f4:	str	r0, [fp, #436]	; 0x1b4
   141f8:	mov	r0, r4
   141fc:	bl	118e8 <strlen@plt>
   14200:	str	r0, [fp, #440]	; 0x1b8
   14204:	b	14030 <__assert_fail@plt+0x2550>
   14208:	add	r5, r5, #1
   1420c:	mov	r0, r5
   14210:	bl	11768 <strdup@plt>
   14214:	str	r0, [fp, #40]	; 0x28
   14218:	add	r1, sp, #1248	; 0x4e0
   1421c:	add	r1, r1, #8
   14220:	mov	r2, #0
   14224:	mov	r3, #0
   14228:	strd	r2, [r1]
   1422c:	strd	r2, [r1, #8]
   14230:	strd	r2, [r1, #16]
   14234:	strd	r2, [r1, #24]
   14238:	movw	r3, #61868	; 0xf1ac
   1423c:	movt	r3, #2
   14240:	ldr	r3, [r3, #4]
   14244:	str	r3, [sp, #1260]	; 0x4ec
   14248:	mov	r2, #2
   1424c:	str	r2, [sp, #1264]	; 0x4f0
   14250:	cmp	r3, #0
   14254:	moveq	r3, #32
   14258:	streq	r3, [sp, #1256]	; 0x4e8
   1425c:	mov	r1, #0
   14260:	str	r1, [fp, #172]	; 0xac
   14264:	add	r6, fp, #44	; 0x2c
   14268:	mov	r2, #128	; 0x80
   1426c:	mov	r0, r6
   14270:	bl	11954 <memset@plt>
   14274:	movw	r1, #62924	; 0xf5cc
   14278:	movt	r1, #2
   1427c:	add	r3, sp, #1248	; 0x4e0
   14280:	add	r3, r3, #4
   14284:	add	r2, sp, #1248	; 0x4e0
   14288:	add	r2, r2, #8
   1428c:	ldr	r1, [r1, #44]	; 0x2c
   14290:	mov	r0, r5
   14294:	bl	11a68 <getaddrinfo@plt>
   14298:	cmp	r0, #0
   1429c:	beq	142dc <__assert_fail@plt+0x27fc>
   142a0:	cmn	r0, #10
   142a4:	beq	142c8 <__assert_fail@plt+0x27e8>
   142a8:	cmn	r0, #3
   142ac:	movne	r3, #0
   142b0:	strhne	r3, [fp, #4]
   142b4:	beq	142c8 <__assert_fail@plt+0x27e8>
   142b8:	mov	r0, #0
   142bc:	bl	1172c <time@plt>
   142c0:	str	r0, [fp, #8]
   142c4:	b	141d0 <__assert_fail@plt+0x26f0>
   142c8:	mov	r3, #8
   142cc:	strh	r3, [fp, #4]
   142d0:	mov	r3, #10
   142d4:	str	r3, [fp, #452]	; 0x1c4
   142d8:	b	142b8 <__assert_fail@plt+0x27d8>
   142dc:	mov	r3, #4
   142e0:	strh	r3, [fp, #4]
   142e4:	ldr	r4, [sp, #1252]	; 0x4e4
   142e8:	ldr	r2, [r4, #16]
   142ec:	str	r2, [fp, #172]	; 0xac
   142f0:	ldr	r1, [r4, #20]
   142f4:	mov	r0, r6
   142f8:	bl	11714 <memcpy@plt>
   142fc:	mov	r0, r4
   14300:	bl	11a5c <freeaddrinfo@plt>
   14304:	b	141d0 <__assert_fail@plt+0x26f0>
   14308:	mov	r4, #0
   1430c:	strh	r4, [fp, #4]
   14310:	mov	r0, r5
   14314:	bl	1283c <__assert_fail@plt+0xd5c>
   14318:	ldr	r0, [fp, #40]	; 0x28
   1431c:	bl	1ae34 <argp_parse@@Base+0xf44>
   14320:	str	r4, [fp, #40]	; 0x28
   14324:	b	141d0 <__assert_fail@plt+0x26f0>
   14328:	mov	r0, r4
   1432c:	bl	11a98 <isatty@plt>
   14330:	cmp	r0, #0
   14334:	movne	r3, #2
   14338:	moveq	r3, #9
   1433c:	strh	r3, [fp, #4]
   14340:	b	141d0 <__assert_fail@plt+0x26f0>
   14344:	mov	r0, r5
   14348:	bl	11768 <strdup@plt>
   1434c:	str	r0, [fp, #40]	; 0x28
   14350:	mov	r2, #420	; 0x1a4
   14354:	movw	r1, #1089	; 0x441
   14358:	mov	r0, r5
   1435c:	bl	1184c <open64@plt>
   14360:	sxth	r4, r0
   14364:	strh	r4, [fp, #6]
   14368:	cmp	r4, #0
   1436c:	blt	14390 <__assert_fail@plt+0x28b0>
   14370:	ldr	r1, [pc, #364]	; 144e4 <__assert_fail@plt+0x2a04>
   14374:	mov	r0, r5
   14378:	bl	11654 <strcmp@plt>
   1437c:	cmp	r0, #0
   14380:	bne	143b0 <__assert_fail@plt+0x28d0>
   14384:	mov	r3, #3
   14388:	strh	r3, [fp, #4]
   1438c:	b	141d0 <__assert_fail@plt+0x26f0>
   14390:	mov	r4, #0
   14394:	strh	r4, [fp, #4]
   14398:	mov	r0, r5
   1439c:	bl	1283c <__assert_fail@plt+0xd5c>
   143a0:	ldr	r0, [fp, #40]	; 0x28
   143a4:	bl	1ae34 <argp_parse@@Base+0xf44>
   143a8:	str	r4, [fp, #40]	; 0x28
   143ac:	b	141d0 <__assert_fail@plt+0x26f0>
   143b0:	mov	r0, r4
   143b4:	bl	11a98 <isatty@plt>
   143b8:	cmp	r0, #0
   143bc:	movne	r3, #2
   143c0:	moveq	r3, #1
   143c4:	strh	r3, [fp, #4]
   143c8:	b	141d0 <__assert_fail@plt+0x26f0>
   143cc:	mov	r3, #1
   143d0:	str	r3, [fp, #40]	; 0x28
   143d4:	ldrb	r3, [r5]
   143d8:	cmp	r3, #0
   143dc:	beq	1440c <__assert_fail@plt+0x292c>
   143e0:	mov	r2, r5
   143e4:	b	143f4 <__assert_fail@plt+0x2914>
   143e8:	ldrb	r3, [r2, #1]!
   143ec:	cmp	r3, #0
   143f0:	beq	1440c <__assert_fail@plt+0x292c>
   143f4:	cmp	r3, #44	; 0x2c
   143f8:	bne	143e8 <__assert_fail@plt+0x2908>
   143fc:	ldr	r3, [fp, #40]	; 0x28
   14400:	add	r3, r3, #1
   14404:	str	r3, [fp, #40]	; 0x28
   14408:	b	143e8 <__assert_fail@plt+0x2908>
   1440c:	ldr	r0, [fp, #40]	; 0x28
   14410:	lsl	r0, r0, #2
   14414:	bl	1bb58 <argp_parse@@Base+0x1c68>
   14418:	str	r0, [fp, #44]	; 0x2c
   1441c:	ldrb	r3, [r5]
   14420:	cmp	r3, #0
   14424:	movne	r6, #0
   14428:	movne	r8, r6
   1442c:	bne	14470 <__assert_fail@plt+0x2990>
   14430:	mov	r3, #5
   14434:	strh	r3, [fp, #4]
   14438:	b	141d0 <__assert_fail@plt+0x26f0>
   1443c:	ldrb	r3, [r4]
   14440:	cmp	r3, #32
   14444:	cmpne	r3, #44	; 0x2c
   14448:	bne	1445c <__assert_fail@plt+0x297c>
   1444c:	ldrb	r3, [r4, #1]!
   14450:	cmp	r3, #32
   14454:	cmpne	r3, #44	; 0x2c
   14458:	beq	1444c <__assert_fail@plt+0x296c>
   1445c:	add	r6, r6, #4
   14460:	mov	r5, r4
   14464:	ldrb	r3, [r4]
   14468:	cmp	r3, #0
   1446c:	beq	14430 <__assert_fail@plt+0x2950>
   14470:	ldrb	r3, [r5]
   14474:	cmp	r3, #0
   14478:	cmpne	r3, #44	; 0x2c
   1447c:	moveq	r4, r5
   14480:	beq	14498 <__assert_fail@plt+0x29b8>
   14484:	mov	r4, r5
   14488:	ldrb	r3, [r4, #1]!
   1448c:	cmp	r3, #0
   14490:	cmpne	r3, #44	; 0x2c
   14494:	bne	14488 <__assert_fail@plt+0x29a8>
   14498:	sub	r7, r4, r5
   1449c:	ldr	r9, [fp, #44]	; 0x2c
   144a0:	add	r0, r7, #1
   144a4:	bl	1bb58 <argp_parse@@Base+0x1c68>
   144a8:	str	r0, [r9, r6]
   144ac:	ldr	r3, [fp, #44]	; 0x2c
   144b0:	ldr	r0, [r3, r6]
   144b4:	cmp	r0, #0
   144b8:	beq	1443c <__assert_fail@plt+0x295c>
   144bc:	mov	r2, r7
   144c0:	mov	r1, r5
   144c4:	bl	11960 <strncpy@plt>
   144c8:	ldr	r3, [fp, #44]	; 0x2c
   144cc:	ldr	r3, [r3, r6]
   144d0:	strb	r8, [r3, r7]
   144d4:	b	1443c <__assert_fail@plt+0x295c>
   144d8:	mov	r3, #0
   144dc:	strb	r3, [sp, #228]	; 0xe4
   144e0:	b	140ec <__assert_fail@plt+0x260c>
   144e4:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   144e8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   144ec:	strd	r6, [sp, #8]
   144f0:	strd	r8, [sp, #16]
   144f4:	strd	sl, [sp, #24]
   144f8:	str	lr, [sp, #32]
   144fc:	sub	sp, sp, #12
   14500:	mov	r4, r0
   14504:	mov	fp, r1
   14508:	movw	r1, #58356	; 0xe3f4
   1450c:	movt	r1, #1
   14510:	bl	11a38 <fopen64@plt>
   14514:	subs	r3, r0, #0
   14518:	str	r3, [sp]
   1451c:	beq	14568 <__assert_fail@plt+0x2a88>
   14520:	mov	r0, #2048	; 0x800
   14524:	bl	1bb58 <argp_parse@@Base+0x1c68>
   14528:	subs	r6, r0, #0
   1452c:	beq	145e0 <__assert_fail@plt+0x2b00>
   14530:	movw	r4, #64576	; 0xfc40
   14534:	movt	r4, #2
   14538:	ldr	r0, [r4]
   1453c:	bl	1ae34 <argp_parse@@Base+0xf44>
   14540:	mov	r7, #0
   14544:	str	r7, [r4]
   14548:	mov	r4, r6
   1454c:	mov	r8, #2048	; 0x800
   14550:	movw	sl, #64576	; 0xfc40
   14554:	movt	sl, #2
   14558:	movw	r3, #54876	; 0xd65c
   1455c:	movt	r3, #1
   14560:	str	r3, [sp, #4]
   14564:	b	1466c <__assert_fail@plt+0x2b8c>
   14568:	mov	r1, r4
   1456c:	movw	r0, #54744	; 0xd5d8
   14570:	movt	r0, #1
   14574:	bl	11c94 <__assert_fail@plt+0x1b4>
   14578:	ldr	r3, [fp]
   1457c:	cmp	r3, #0
   14580:	beq	14598 <__assert_fail@plt+0x2ab8>
   14584:	movw	r3, #64560	; 0xfc30
   14588:	movt	r3, #2
   1458c:	mov	r0, #1
   14590:	str	r0, [r3]
   14594:	b	14744 <__assert_fail@plt+0x2c64>
   14598:	mov	r1, #464	; 0x1d0
   1459c:	mov	r0, #1
   145a0:	bl	1bae4 <argp_parse@@Base+0x1bf4>
   145a4:	mov	r4, r0
   145a8:	mov	r1, r0
   145ac:	movw	r0, #54760	; 0xd5e8
   145b0:	movt	r0, #1
   145b4:	bl	13d28 <__assert_fail@plt+0x2248>
   145b8:	mov	r1, #464	; 0x1d0
   145bc:	mov	r0, #1
   145c0:	bl	1bae4 <argp_parse@@Base+0x1bf4>
   145c4:	mov	r1, r0
   145c8:	str	r0, [r4]
   145cc:	movw	r0, #54780	; 0xd5fc
   145d0:	movt	r0, #1
   145d4:	bl	13d28 <__assert_fail@plt+0x2248>
   145d8:	str	r4, [fp]
   145dc:	b	14584 <__assert_fail@plt+0x2aa4>
   145e0:	movw	r0, #54792	; 0xd608
   145e4:	movt	r0, #1
   145e8:	bl	11c94 <__assert_fail@plt+0x1b4>
   145ec:	ldr	r0, [sp]
   145f0:	bl	11990 <fclose@plt>
   145f4:	mov	r0, #0
   145f8:	b	14744 <__assert_fail@plt+0x2c64>
   145fc:	ldrb	r3, [r4]
   14600:	cmp	r3, #9
   14604:	cmpne	r3, #32
   14608:	bne	14638 <__assert_fail@plt+0x2b58>
   1460c:	mov	r1, r4
   14610:	ldrb	r3, [r1, #1]!
   14614:	cmp	r3, #9
   14618:	cmpne	r3, #32
   1461c:	beq	14610 <__assert_fail@plt+0x2b30>
   14620:	sub	r3, r1, r4
   14624:	sub	r9, r9, r3
   14628:	add	r2, r9, #1
   1462c:	mov	r0, r4
   14630:	bl	116c0 <memmove@plt>
   14634:	b	1469c <__assert_fail@plt+0x2bbc>
   14638:	mov	r1, r4
   1463c:	b	14620 <__assert_fail@plt+0x2b40>
   14640:	lsl	r8, r8, #1
   14644:	mov	r1, r8
   14648:	mov	r0, r6
   1464c:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   14650:	cmp	r0, #0
   14654:	beq	14724 <__assert_fail@plt+0x2c44>
   14658:	sub	r4, r5, #1
   1465c:	add	r4, r4, r9
   14660:	add	r4, r0, r4
   14664:	mov	r6, r0
   14668:	mov	r7, #0
   1466c:	sub	r5, r4, r6
   14670:	ldr	r2, [sp]
   14674:	sub	r1, r8, r5
   14678:	mov	r0, r4
   1467c:	bl	116f0 <fgets@plt>
   14680:	cmp	r0, #0
   14684:	beq	148a0 <__assert_fail@plt+0x2dc0>
   14688:	mov	r0, r4
   1468c:	bl	118e8 <strlen@plt>
   14690:	mov	r9, r0
   14694:	cmp	r7, #0
   14698:	bne	145fc <__assert_fail@plt+0x2b1c>
   1469c:	mov	r1, #10
   146a0:	mov	r0, r4
   146a4:	bl	11900 <strchr@plt>
   146a8:	cmp	r0, #0
   146ac:	beq	14640 <__assert_fail@plt+0x2b60>
   146b0:	bl	118c4 <__ctype_b_loc@plt>
   146b4:	mov	r5, r0
   146b8:	ldr	r0, [r0]
   146bc:	mov	r3, r6
   146c0:	mov	r4, r3
   146c4:	ldrb	r2, [r3], #1
   146c8:	lsl	r1, r2, #1
   146cc:	ldrh	r1, [r0, r1]
   146d0:	tst	r1, #8192	; 0x2000
   146d4:	bne	146c0 <__assert_fail@plt+0x2be0>
   146d8:	cmp	r2, #33	; 0x21
   146dc:	beq	14778 <__assert_fail@plt+0x2c98>
   146e0:	cmp	r2, #35	; 0x23
   146e4:	beq	14760 <__assert_fail@plt+0x2c80>
   146e8:	cmp	r2, #0
   146ec:	moveq	r4, r6
   146f0:	moveq	r7, #0
   146f4:	beq	1466c <__assert_fail@plt+0x2b8c>
   146f8:	mov	r0, r4
   146fc:	bl	118e8 <strlen@plt>
   14700:	add	r2, r0, #1
   14704:	mov	r1, r4
   14708:	mov	r0, r6
   1470c:	bl	116c0 <memmove@plt>
   14710:	mov	r0, r6
   14714:	bl	118e8 <strlen@plt>
   14718:	add	r0, r6, r0
   1471c:	ldr	r1, [r5]
   14720:	b	14830 <__assert_fail@plt+0x2d50>
   14724:	movw	r0, #54836	; 0xd634
   14728:	movt	r0, #1
   1472c:	bl	11c94 <__assert_fail@plt+0x1b4>
   14730:	ldr	r0, [sp]
   14734:	bl	11990 <fclose@plt>
   14738:	mov	r0, r6
   1473c:	bl	1ae34 <argp_parse@@Base+0xf44>
   14740:	mov	r0, #0
   14744:	add	sp, sp, #12
   14748:	ldrd	r4, [sp]
   1474c:	ldrd	r6, [sp, #8]
   14750:	ldrd	r8, [sp, #16]
   14754:	ldrd	sl, [sp, #24]
   14758:	add	sp, sp, #32
   1475c:	pop	{pc}		; (ldr pc, [sp], #4)
   14760:	ldrb	r3, [r4, #1]
   14764:	cmp	r3, #33	; 0x21
   14768:	beq	14824 <__assert_fail@plt+0x2d44>
   1476c:	mov	r4, r6
   14770:	mov	r7, #0
   14774:	b	1466c <__assert_fail@plt+0x2b8c>
   14778:	add	r5, r4, #1
   1477c:	ldrb	r3, [r4, #1]
   14780:	cmp	r3, #33	; 0x21
   14784:	beq	14824 <__assert_fail@plt+0x2d44>
   14788:	ldrb	r3, [r5]
   1478c:	lsl	r2, r3, #1
   14790:	ldrh	r2, [r0, r2]
   14794:	tst	r2, #8192	; 0x2000
   14798:	beq	147b0 <__assert_fail@plt+0x2cd0>
   1479c:	ldrb	r3, [r5, #1]!
   147a0:	lsl	r2, r3, #1
   147a4:	ldrh	r2, [r0, r2]
   147a8:	tst	r2, #8192	; 0x2000
   147ac:	bne	1479c <__assert_fail@plt+0x2cbc>
   147b0:	cmp	r3, #0
   147b4:	moveq	r4, r6
   147b8:	moveq	r7, #0
   147bc:	beq	1466c <__assert_fail@plt+0x2b8c>
   147c0:	ldr	r0, [sl]
   147c4:	bl	1ae34 <argp_parse@@Base+0xf44>
   147c8:	mov	r3, #0
   147cc:	str	r3, [sl]
   147d0:	ldrb	r3, [r5]
   147d4:	cmp	r3, #42	; 0x2a
   147d8:	beq	14894 <__assert_fail@plt+0x2db4>
   147dc:	mov	r1, #44	; 0x2c
   147e0:	mov	r0, r5
   147e4:	bl	11900 <strchr@plt>
   147e8:	cmp	r0, #0
   147ec:	movne	r3, #0
   147f0:	strbne	r3, [r0]
   147f4:	ldr	r1, [sp, #4]
   147f8:	mov	r0, r5
   147fc:	bl	11a50 <strpbrk@plt>
   14800:	cmp	r0, #0
   14804:	movne	r3, #0
   14808:	strbne	r3, [r0]
   1480c:	mov	r0, r5
   14810:	bl	11768 <strdup@plt>
   14814:	str	r0, [sl]
   14818:	mov	r4, r6
   1481c:	mov	r7, #0
   14820:	b	1466c <__assert_fail@plt+0x2b8c>
   14824:	add	r5, r4, #2
   14828:	b	14788 <__assert_fail@plt+0x2ca8>
   1482c:	mov	r0, r4
   14830:	sub	r4, r0, #1
   14834:	ldrb	r3, [r0, #-1]
   14838:	lsl	r2, r3, #1
   1483c:	ldrh	r2, [r1, r2]
   14840:	tst	r2, #8192	; 0x2000
   14844:	bne	1482c <__assert_fail@plt+0x2d4c>
   14848:	cmp	r3, #92	; 0x5c
   1484c:	moveq	r3, #0
   14850:	strbeq	r3, [r4]
   14854:	moveq	r7, #1
   14858:	beq	1466c <__assert_fail@plt+0x2b8c>
   1485c:	mov	r7, #0
   14860:	strb	r7, [r0]
   14864:	mov	r1, #464	; 0x1d0
   14868:	mov	r0, #1
   1486c:	bl	1bae4 <argp_parse@@Base+0x1bf4>
   14870:	mov	r4, r0
   14874:	mov	r1, r0
   14878:	mov	r0, r6
   1487c:	bl	13d28 <__assert_fail@plt+0x2248>
   14880:	ldr	r3, [fp]
   14884:	str	r3, [r4]
   14888:	str	r4, [fp]
   1488c:	mov	r4, r6
   14890:	b	1466c <__assert_fail@plt+0x2b8c>
   14894:	mov	r4, r6
   14898:	mov	r7, #0
   1489c:	b	1466c <__assert_fail@plt+0x2b8c>
   148a0:	ldr	r0, [sp]
   148a4:	bl	11990 <fclose@plt>
   148a8:	mov	r0, r6
   148ac:	bl	1ae34 <argp_parse@@Base+0xf44>
   148b0:	mov	r0, #1
   148b4:	b	14744 <__assert_fail@plt+0x2c64>
   148b8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   148bc:	strd	r6, [sp, #8]
   148c0:	strd	r8, [sp, #16]
   148c4:	strd	sl, [sp, #24]
   148c8:	str	lr, [sp, #32]
   148cc:	sub	sp, sp, #116	; 0x74
   148d0:	movw	r0, #54884	; 0xd664
   148d4:	movt	r0, #1
   148d8:	bl	11c94 <__assert_fail@plt+0x1b4>
   148dc:	movw	r3, #64560	; 0xfc30
   148e0:	movt	r3, #2
   148e4:	mov	r2, #0
   148e8:	str	r2, [r3]
   148ec:	movw	r3, #64072	; 0xfa48
   148f0:	movt	r3, #2
   148f4:	ldr	r4, [r3]
   148f8:	cmp	r4, r2
   148fc:	beq	149e8 <__assert_fail@plt+0x2f08>
   14900:	movw	r6, #64568	; 0xfc38
   14904:	movt	r6, #2
   14908:	mov	r7, r2
   1490c:	b	14998 <__assert_fail@plt+0x2eb8>
   14910:	mov	r3, r7
   14914:	mov	r2, r7
   14918:	ldr	r1, [r6]
   1491c:	mov	r0, r4
   14920:	bl	12a88 <__assert_fail@plt+0xfa8>
   14924:	b	149a4 <__assert_fail@plt+0x2ec4>
   14928:	ldr	r3, [r4, #40]	; 0x28
   1492c:	cmp	r3, #0
   14930:	movgt	r5, #0
   14934:	ble	14954 <__assert_fail@plt+0x2e74>
   14938:	ldr	r3, [r4, #44]	; 0x2c
   1493c:	ldr	r0, [r3, r5, lsl #2]
   14940:	bl	1ae34 <argp_parse@@Base+0xf44>
   14944:	add	r5, r5, #1
   14948:	ldr	r3, [r4, #40]	; 0x28
   1494c:	cmp	r3, r5
   14950:	bgt	14938 <__assert_fail@plt+0x2e58>
   14954:	ldr	r0, [r4, #44]	; 0x2c
   14958:	bl	1ae34 <argp_parse@@Base+0xf44>
   1495c:	b	14970 <__assert_fail@plt+0x2e90>
   14960:	ldr	r0, [r4, #40]	; 0x28
   14964:	bl	1ae34 <argp_parse@@Base+0xf44>
   14968:	ldrsh	r0, [r4, #6]
   1496c:	bl	11ac8 <close@plt>
   14970:	ldr	r0, [r4, #436]	; 0x1b4
   14974:	bl	1ae34 <argp_parse@@Base+0xf44>
   14978:	ldr	r0, [r4, #432]	; 0x1b0
   1497c:	bl	1ae34 <argp_parse@@Base+0xf44>
   14980:	ldr	r5, [r4]
   14984:	mov	r0, r4
   14988:	bl	1ae34 <argp_parse@@Base+0xf44>
   1498c:	mov	r4, r5
   14990:	cmp	r5, #0
   14994:	beq	149e8 <__assert_fail@plt+0x2f08>
   14998:	ldr	r3, [r4, #452]	; 0x1c4
   1499c:	cmp	r3, #0
   149a0:	bne	14910 <__assert_fail@plt+0x2e30>
   149a4:	ldrsh	r3, [r4, #4]
   149a8:	sub	r3, r3, #1
   149ac:	cmp	r3, #8
   149b0:	ldrls	pc, [pc, r3, lsl #2]
   149b4:	b	14970 <__assert_fail@plt+0x2e90>
   149b8:	andeq	r4, r1, r0, ror #18
   149bc:	andeq	r4, r1, r0, ror #18
   149c0:	andeq	r4, r1, r0, ror #18
   149c4:	ldrdeq	r4, [r1], -ip
   149c8:	andeq	r4, r1, r8, lsr #18
   149cc:	andeq	r4, r1, r0, ror r9
   149d0:	ldrdeq	r4, [r1], -ip
   149d4:	ldrdeq	r4, [r1], -ip
   149d8:	andeq	r4, r1, r0, ror #18
   149dc:	ldr	r0, [r4, #40]	; 0x28
   149e0:	bl	1ae34 <argp_parse@@Base+0xf44>
   149e4:	b	14970 <__assert_fail@plt+0x2e90>
   149e8:	movw	r1, #64072	; 0xfa48
   149ec:	movt	r1, #2
   149f0:	mov	r2, #0
   149f4:	str	r2, [r1]
   149f8:	movw	r3, #64068	; 0xfa44
   149fc:	movt	r3, #2
   14a00:	str	r2, [r3]
   14a04:	movw	r4, #61868	; 0xf1ac
   14a08:	movt	r4, #2
   14a0c:	ldr	r0, [r4, #16]
   14a10:	bl	144e8 <__assert_fail@plt+0x2a08>
   14a14:	mov	r9, r0
   14a18:	ldr	r5, [r4, #20]
   14a1c:	mov	r0, r5
   14a20:	bl	11840 <opendir@plt>
   14a24:	subs	r6, r0, #0
   14a28:	beq	14a50 <__assert_fail@plt+0x2f70>
   14a2c:	mov	r7, #0
   14a30:	mov	fp, r7
   14a34:	movw	r4, #54892	; 0xd66c
   14a38:	movt	r4, #1
   14a3c:	movw	sl, #64072	; 0xfa48
   14a40:	movt	sl, #2
   14a44:	movw	r8, #54952	; 0xd6a8
   14a48:	movt	r8, #1
   14a4c:	b	14ad4 <__assert_fail@plt+0x2ff4>
   14a50:	mov	r1, r5
   14a54:	movw	r0, #54744	; 0xd5d8
   14a58:	movt	r0, #1
   14a5c:	bl	11c94 <__assert_fail@plt+0x1b4>
   14a60:	b	14a74 <__assert_fail@plt+0x2f94>
   14a64:	movw	r0, #54900	; 0xd674
   14a68:	movt	r0, #1
   14a6c:	bl	11c94 <__assert_fail@plt+0x1b4>
   14a70:	mov	r9, #0
   14a74:	movw	r3, #64560	; 0xfc30
   14a78:	movt	r3, #2
   14a7c:	mov	r2, #1
   14a80:	str	r2, [r3]
   14a84:	movw	r3, #64548	; 0xfc24
   14a88:	movt	r3, #2
   14a8c:	ldr	r3, [r3]
   14a90:	cmp	r3, #0
   14a94:	beq	14c60 <__assert_fail@plt+0x3180>
   14a98:	movw	r3, #64072	; 0xfa48
   14a9c:	movt	r3, #2
   14aa0:	ldr	r8, [r3]
   14aa4:	cmp	r8, #0
   14aa8:	beq	14c60 <__assert_fail@plt+0x3180>
   14aac:	movw	r7, #54992	; 0xd6d0
   14ab0:	movt	r7, #1
   14ab4:	movw	r6, #54996	; 0xd6d4
   14ab8:	movt	r6, #1
   14abc:	b	14c40 <__assert_fail@plt+0x3160>
   14ac0:	mov	r0, r8
   14ac4:	bl	11c94 <__assert_fail@plt+0x1b4>
   14ac8:	b	14ad4 <__assert_fail@plt+0x2ff4>
   14acc:	ldr	r0, [sp, #4]
   14ad0:	bl	1ae34 <argp_parse@@Base+0xf44>
   14ad4:	mov	r0, r6
   14ad8:	bl	11a14 <readdir64@plt>
   14adc:	cmp	r0, #0
   14ae0:	beq	14b40 <__assert_fail@plt+0x3060>
   14ae4:	add	r3, r0, #19
   14ae8:	mov	r2, r5
   14aec:	mov	r1, r4
   14af0:	add	r0, sp, #4
   14af4:	bl	1196c <asprintf@plt>
   14af8:	cmp	r0, #0
   14afc:	blt	14a64 <__assert_fail@plt+0x2f84>
   14b00:	add	r2, sp, #8
   14b04:	ldr	r1, [sp, #4]
   14b08:	mov	r0, #3
   14b0c:	bl	11a8c <__xstat64@plt>
   14b10:	cmp	r0, #0
   14b14:	bne	14ac0 <__assert_fail@plt+0x2fe0>
   14b18:	ldr	r3, [sp, #24]
   14b1c:	and	r3, r3, #61440	; 0xf000
   14b20:	cmp	r3, #32768	; 0x8000
   14b24:	bne	14acc <__assert_fail@plt+0x2fec>
   14b28:	add	r7, r7, #1
   14b2c:	mov	r1, sl
   14b30:	ldr	r0, [sp, #4]
   14b34:	bl	144e8 <__assert_fail@plt+0x2a08>
   14b38:	add	fp, fp, r0
   14b3c:	b	14acc <__assert_fail@plt+0x2fec>
   14b40:	mov	r0, r6
   14b44:	bl	11ad4 <closedir@plt>
   14b48:	cmp	r7, #0
   14b4c:	beq	14a74 <__assert_fail@plt+0x2f94>
   14b50:	cmp	fp, #0
   14b54:	moveq	r9, fp
   14b58:	b	14a74 <__assert_fail@plt+0x2f94>
   14b5c:	mov	r0, r6
   14b60:	bl	11c94 <__assert_fail@plt+0x1b4>
   14b64:	cmp	r5, r4
   14b68:	beq	14b84 <__assert_fail@plt+0x30a4>
   14b6c:	ldrb	r1, [r4, #1]!
   14b70:	cmp	r1, #0
   14b74:	bne	14b5c <__assert_fail@plt+0x307c>
   14b78:	mov	r0, r7
   14b7c:	bl	11c94 <__assert_fail@plt+0x1b4>
   14b80:	b	14b64 <__assert_fail@plt+0x3084>
   14b84:	movw	r3, #61868	; 0xf1ac
   14b88:	movt	r3, #2
   14b8c:	ldrsh	r2, [r8, #4]
   14b90:	add	r3, r3, r2, lsl #2
   14b94:	ldr	r1, [r3, #320]	; 0x140
   14b98:	movw	r0, #55004	; 0xd6dc
   14b9c:	movt	r0, #1
   14ba0:	bl	11c94 <__assert_fail@plt+0x1b4>
   14ba4:	ldrsh	r3, [r8, #4]
   14ba8:	sub	r3, r3, #1
   14bac:	cmp	r3, #8
   14bb0:	ldrls	pc, [pc, r3, lsl #2]
   14bb4:	b	14c28 <__assert_fail@plt+0x3148>
   14bb8:	andeq	r4, r1, r8, lsl ip
   14bbc:	andeq	r4, r1, r8, lsl ip
   14bc0:	andeq	r4, r1, r8, lsl ip
   14bc4:	andeq	r4, r1, ip, asr #24
   14bc8:	ldrdeq	r4, [r1], -ip
   14bcc:	andeq	r4, r1, r8, lsr #24
   14bd0:	andeq	r4, r1, ip, asr #24
   14bd4:	andeq	r4, r1, ip, asr #24
   14bd8:	andeq	r4, r1, r8, lsl ip
   14bdc:	ldr	r3, [r8, #40]	; 0x28
   14be0:	cmp	r3, #0
   14be4:	movgt	r4, #0
   14be8:	movwgt	r5, #55012	; 0xd6e4
   14bec:	movtgt	r5, #1
   14bf0:	ble	14c28 <__assert_fail@plt+0x3148>
   14bf4:	ldr	r3, [r8, #44]	; 0x2c
   14bf8:	ldr	r1, [r3, r4, lsl #2]
   14bfc:	mov	r0, r5
   14c00:	bl	11c94 <__assert_fail@plt+0x1b4>
   14c04:	add	r4, r4, #1
   14c08:	ldr	r3, [r8, #40]	; 0x28
   14c0c:	cmp	r3, r4
   14c10:	bgt	14bf4 <__assert_fail@plt+0x3114>
   14c14:	b	14c28 <__assert_fail@plt+0x3148>
   14c18:	ldr	r1, [r8, #40]	; 0x28
   14c1c:	movw	r0, #57768	; 0xe1a8
   14c20:	movt	r0, #1
   14c24:	bl	11c94 <__assert_fail@plt+0x1b4>
   14c28:	movw	r0, #53880	; 0xd278
   14c2c:	movt	r0, #1
   14c30:	bl	11c94 <__assert_fail@plt+0x1b4>
   14c34:	ldr	r8, [r8]
   14c38:	cmp	r8, #0
   14c3c:	beq	14c60 <__assert_fail@plt+0x3180>
   14c40:	add	r4, r8, #11
   14c44:	add	r5, r8, #36	; 0x24
   14c48:	b	14b6c <__assert_fail@plt+0x308c>
   14c4c:	ldr	r1, [r8, #40]	; 0x28
   14c50:	movw	r0, #57768	; 0xe1a8
   14c54:	movt	r0, #1
   14c58:	bl	11c94 <__assert_fail@plt+0x1b4>
   14c5c:	b	14c28 <__assert_fail@plt+0x3148>
   14c60:	movw	r3, #64064	; 0xfa40
   14c64:	movt	r3, #2
   14c68:	ldr	r3, [r3]
   14c6c:	cmp	r3, #0
   14c70:	movw	r2, #64568	; 0xfc38
   14c74:	movt	r2, #2
   14c78:	mov	r3, #4
   14c7c:	ldr	r2, [r2]
   14c80:	movwne	r1, #55020	; 0xd6ec
   14c84:	movtne	r1, #1
   14c88:	movweq	r1, #55088	; 0xd730
   14c8c:	movteq	r1, #1
   14c90:	mov	r0, #46	; 0x2e
   14c94:	bl	1321c <__assert_fail@plt+0x173c>
   14c98:	cmp	r9, #0
   14c9c:	beq	14cc8 <__assert_fail@plt+0x31e8>
   14ca0:	movw	r0, #55172	; 0xd784
   14ca4:	movt	r0, #1
   14ca8:	bl	11c94 <__assert_fail@plt+0x1b4>
   14cac:	add	sp, sp, #116	; 0x74
   14cb0:	ldrd	r4, [sp]
   14cb4:	ldrd	r6, [sp, #8]
   14cb8:	ldrd	r8, [sp, #16]
   14cbc:	ldrd	sl, [sp, #24]
   14cc0:	add	sp, sp, #32
   14cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cc8:	movw	r2, #64568	; 0xfc38
   14ccc:	movt	r2, #2
   14cd0:	mov	r3, #4
   14cd4:	ldr	r2, [r2]
   14cd8:	movw	r1, #55136	; 0xd760
   14cdc:	movt	r1, #1
   14ce0:	mov	r0, #43	; 0x2b
   14ce4:	bl	1321c <__assert_fail@plt+0x173c>
   14ce8:	b	14ca0 <__assert_fail@plt+0x31c0>
   14cec:	str	r4, [sp, #-8]!
   14cf0:	str	lr, [sp, #4]
   14cf4:	sub	sp, sp, #40	; 0x28
   14cf8:	mov	r4, r0
   14cfc:	movw	r3, #62924	; 0xf5cc
   14d00:	movt	r3, #2
   14d04:	movw	r2, #55192	; 0xd798
   14d08:	movt	r2, #1
   14d0c:	str	r2, [r3, #44]	; 0x2c
   14d10:	mov	r0, #0
   14d14:	str	r0, [sp, #12]
   14d18:	str	r0, [sp, #20]
   14d1c:	str	r0, [sp, #24]
   14d20:	str	r0, [sp, #28]
   14d24:	str	r0, [sp, #32]
   14d28:	str	r0, [sp, #36]	; 0x24
   14d2c:	mov	r3, #2
   14d30:	str	r3, [sp, #16]
   14d34:	mov	r3, #1
   14d38:	str	r3, [sp, #8]
   14d3c:	add	r3, sp, #4
   14d40:	add	r2, sp, #8
   14d44:	movw	r1, #55196	; 0xd79c
   14d48:	movt	r1, #1
   14d4c:	bl	11a68 <getaddrinfo@plt>
   14d50:	cmp	r0, #0
   14d54:	beq	14dd0 <__assert_fail@plt+0x32f0>
   14d58:	movw	r3, #62924	; 0xf5cc
   14d5c:	movt	r3, #2
   14d60:	str	r4, [r3, #48]	; 0x30
   14d64:	cmp	r4, #0
   14d68:	beq	14df0 <__assert_fail@plt+0x3310>
   14d6c:	mov	r0, #0
   14d70:	str	r0, [sp, #12]
   14d74:	str	r0, [sp, #20]
   14d78:	str	r0, [sp, #24]
   14d7c:	str	r0, [sp, #28]
   14d80:	str	r0, [sp, #32]
   14d84:	str	r0, [sp, #36]	; 0x24
   14d88:	mov	r3, #2
   14d8c:	str	r3, [sp, #16]
   14d90:	mov	r3, #1
   14d94:	str	r3, [sp, #8]
   14d98:	add	r3, sp, #4
   14d9c:	add	r2, sp, #8
   14da0:	mov	r1, r4
   14da4:	bl	11a68 <getaddrinfo@plt>
   14da8:	cmp	r0, #0
   14dac:	beq	14e04 <__assert_fail@plt+0x3324>
   14db0:	movw	r3, #62924	; 0xf5cc
   14db4:	movt	r3, #2
   14db8:	mov	r2, #0
   14dbc:	str	r2, [r3, #48]	; 0x30
   14dc0:	add	sp, sp, #40	; 0x28
   14dc4:	ldr	r4, [sp]
   14dc8:	add	sp, sp, #4
   14dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   14dd0:	movw	r3, #62924	; 0xf5cc
   14dd4:	movt	r3, #2
   14dd8:	movw	r2, #55196	; 0xd79c
   14ddc:	movt	r2, #1
   14de0:	str	r2, [r3, #44]	; 0x2c
   14de4:	ldr	r0, [sp, #4]
   14de8:	bl	11a5c <freeaddrinfo@plt>
   14dec:	b	14d58 <__assert_fail@plt+0x3278>
   14df0:	movw	r3, #62924	; 0xf5cc
   14df4:	movt	r3, #2
   14df8:	ldr	r2, [r3, #44]	; 0x2c
   14dfc:	str	r2, [r3, #48]	; 0x30
   14e00:	b	14dc0 <__assert_fail@plt+0x32e0>
   14e04:	ldr	r0, [sp, #4]
   14e08:	bl	11a5c <freeaddrinfo@plt>
   14e0c:	b	14dc0 <__assert_fail@plt+0x32e0>
   14e10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14e14:	strd	r6, [sp, #8]
   14e18:	strd	r8, [sp, #16]
   14e1c:	strd	sl, [sp, #24]
   14e20:	str	lr, [sp, #32]
   14e24:	sub	sp, sp, #3376	; 0xd30
   14e28:	sub	sp, sp, #12
   14e2c:	mov	r5, r0
   14e30:	mov	r4, r1
   14e34:	ldr	r0, [r1]
   14e38:	bl	1af4c <argp_parse@@Base+0x105c>
   14e3c:	movw	r0, #57080	; 0xdef8
   14e40:	movt	r0, #1
   14e44:	bl	11bf0 <__assert_fail@plt+0x110>
   14e48:	movw	r3, #140	; 0x8c
   14e4c:	movt	r3, #3
   14e50:	movw	r2, #55204	; 0xd7a4
   14e54:	movt	r2, #1
   14e58:	str	r2, [r3]
   14e5c:	movw	r1, #62836	; 0xf574
   14e60:	movt	r1, #2
   14e64:	movw	r0, #55228	; 0xd7bc
   14e68:	movt	r0, #1
   14e6c:	bl	1aadc <argp_parse@@Base+0xbec>
   14e70:	mov	r3, #0
   14e74:	str	r3, [sp, #4]
   14e78:	str	r3, [sp]
   14e7c:	mov	r2, r4
   14e80:	mov	r1, r5
   14e84:	ldr	r0, [pc, #3428]	; 15bf0 <__assert_fail@plt+0x4110>
   14e88:	bl	19ef0 <argp_parse@@Base>
   14e8c:	movw	r3, #62924	; 0xf5cc
   14e90:	movt	r3, #2
   14e94:	ldr	r0, [r3, #12]
   14e98:	bl	14cec <__assert_fail@plt+0x320c>
   14e9c:	movw	r3, #64572	; 0xfc3c
   14ea0:	movt	r3, #2
   14ea4:	ldr	r3, [r3]
   14ea8:	cmp	r3, #0
   14eac:	beq	150a8 <__assert_fail@plt+0x35c8>
   14eb0:	movw	r3, #64548	; 0xfc24
   14eb4:	movt	r3, #2
   14eb8:	ldr	r3, [r3]
   14ebc:	cmp	r3, #0
   14ec0:	beq	14ed4 <__assert_fail@plt+0x33f4>
   14ec4:	movw	r3, #62924	; 0xf5cc
   14ec8:	movt	r3, #2
   14ecc:	mov	r2, #1
   14ed0:	str	r2, [r3, #4]
   14ed4:	movw	r0, #62916	; 0xf5c4
   14ed8:	movt	r0, #2
   14edc:	mov	r3, #0
   14ee0:	mov	r2, #1
   14ee4:	mov	r1, r3
   14ee8:	ldr	r0, [r0]
   14eec:	bl	11948 <setvbuf@plt>
   14ef0:	mov	r9, #0
   14ef4:	bl	15dec <daemon@@Base+0x2c>
   14ef8:	movw	r3, #64568	; 0xfc38
   14efc:	movt	r3, #2
   14f00:	str	r0, [r3]
   14f04:	cmp	r0, #0
   14f08:	beq	150ec <__assert_fail@plt+0x360c>
   14f0c:	movw	r3, #64568	; 0xfc38
   14f10:	movt	r3, #2
   14f14:	ldr	r4, [r3]
   14f18:	mov	r1, #46	; 0x2e
   14f1c:	mov	r0, r4
   14f20:	bl	11900 <strchr@plt>
   14f24:	subs	r3, r0, #0
   14f28:	beq	15108 <__assert_fail@plt+0x3628>
   14f2c:	mov	r2, #0
   14f30:	strb	r2, [r3], #1
   14f34:	movw	r2, #64564	; 0xfc34
   14f38:	movt	r2, #2
   14f3c:	str	r3, [r2]
   14f40:	movw	r4, #64076	; 0xfa4c
   14f44:	movt	r4, #2
   14f48:	mov	r3, #3
   14f4c:	strh	r3, [r4, #4]
   14f50:	ldr	r0, [pc, #3228]	; 15bf4 <__assert_fail@plt+0x4114>
   14f54:	bl	11768 <strdup@plt>
   14f58:	str	r0, [r4, #40]	; 0x28
   14f5c:	movw	r1, #15092	; 0x3af4
   14f60:	movt	r1, #1
   14f64:	mov	r0, #15
   14f68:	bl	11720 <signal@plt>
   14f6c:	movw	r3, #64572	; 0xfc3c
   14f70:	movt	r3, #2
   14f74:	ldr	r3, [r3]
   14f78:	movw	r1, #15092	; 0x3af4
   14f7c:	movt	r1, #1
   14f80:	cmp	r3, #0
   14f84:	moveq	r1, #1
   14f88:	mov	r0, #2
   14f8c:	bl	11720 <signal@plt>
   14f90:	movw	r3, #64572	; 0xfc3c
   14f94:	movt	r3, #2
   14f98:	ldr	r3, [r3]
   14f9c:	movw	r1, #15092	; 0x3af4
   14fa0:	movt	r1, #1
   14fa4:	cmp	r3, #0
   14fa8:	moveq	r1, #1
   14fac:	mov	r0, #3
   14fb0:	bl	11720 <signal@plt>
   14fb4:	mov	r3, #268435456	; 0x10000000
   14fb8:	str	r3, [sp, #1320]	; 0x528
   14fbc:	add	r0, sp, #1184	; 0x4a0
   14fc0:	add	r0, r0, #8
   14fc4:	bl	119cc <sigemptyset@plt>
   14fc8:	movw	r3, #14752	; 0x39a0
   14fcc:	movt	r3, #1
   14fd0:	str	r3, [sp, #1188]	; 0x4a4
   14fd4:	mov	r2, #0
   14fd8:	add	r1, sp, #1184	; 0x4a0
   14fdc:	add	r1, r1, #4
   14fe0:	mov	r0, #14
   14fe4:	bl	117ec <sigaction@plt>
   14fe8:	movw	r3, #64572	; 0xfc3c
   14fec:	movt	r3, #2
   14ff0:	ldr	r2, [r3]
   14ff4:	movw	r3, #7436	; 0x1d0c
   14ff8:	movt	r3, #1
   14ffc:	cmp	r2, #0
   15000:	moveq	r3, #1
   15004:	str	r3, [sp, #1188]	; 0x4a4
   15008:	mov	r2, #0
   1500c:	add	r1, sp, #1184	; 0x4a0
   15010:	add	r1, r1, #4
   15014:	mov	r0, #10
   15018:	bl	117ec <sigaction@plt>
   1501c:	mov	r0, #30
   15020:	bl	11780 <alarm@plt>
   15024:	movw	r3, #64544	; 0xfc20
   15028:	movt	r3, #2
   1502c:	ldr	r0, [r3]
   15030:	add	r0, r0, #3
   15034:	lsl	r0, r0, #3
   15038:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1503c:	subs	r3, r0, #0
   15040:	str	r3, [sp, #12]
   15044:	beq	151cc <__assert_fail@plt+0x36ec>
   15048:	mov	r0, #0
   1504c:	bl	148b8 <__assert_fail@plt+0x2dd8>
   15050:	movw	r3, #64060	; 0xfa3c
   15054:	movt	r3, #2
   15058:	ldr	r3, [r3]
   1505c:	cmp	r3, #0
   15060:	movne	r3, #0
   15064:	strne	r3, [sp, #8]
   15068:	beq	151e8 <__assert_fail@plt+0x3708>
   1506c:	movw	r3, #64552	; 0xfc28
   15070:	movt	r3, #2
   15074:	ldr	r3, [r3]
   15078:	cmp	r3, #0
   1507c:	bne	15420 <__assert_fail@plt+0x3940>
   15080:	movw	r3, #64544	; 0xfc20
   15084:	movt	r3, #2
   15088:	ldr	r3, [r3]
   1508c:	cmp	r3, #0
   15090:	beq	15420 <__assert_fail@plt+0x3940>
   15094:	mov	r6, #0
   15098:	movw	r7, #64640	; 0xfc80
   1509c:	movt	r7, #2
   150a0:	add	fp, sp, #50	; 0x32
   150a4:	b	1532c <__assert_fail@plt+0x384c>
   150a8:	movw	r1, #7532	; 0x1d6c
   150ac:	movt	r1, #1
   150b0:	mov	r0, #15
   150b4:	bl	11720 <signal@plt>
   150b8:	mov	r2, #30
   150bc:	mov	r1, #0
   150c0:	mov	r0, r1
   150c4:	bl	15c44 <__assert_fail@plt+0x4164>
   150c8:	subs	r9, r0, #0
   150cc:	bge	14ef4 <__assert_fail@plt+0x3414>
   150d0:	bl	11918 <__errno_location@plt>
   150d4:	movw	r2, #55236	; 0xd7c4
   150d8:	movt	r2, #1
   150dc:	ldr	r1, [r0]
   150e0:	mov	r0, #1
   150e4:	bl	11828 <error@plt>
   150e8:	b	14ef4 <__assert_fail@plt+0x3414>
   150ec:	bl	11918 <__errno_location@plt>
   150f0:	movw	r2, #55260	; 0xd7dc
   150f4:	movt	r2, #1
   150f8:	ldr	r1, [r0]
   150fc:	mov	r0, #1
   15100:	bl	11828 <error@plt>
   15104:	b	14f0c <__assert_fail@plt+0x342c>
   15108:	add	r3, sp, #168	; 0xa8
   1510c:	mov	r1, #0
   15110:	str	r1, [sp, #164]	; 0xa4
   15114:	str	r1, [r3], #-4
   15118:	str	r1, [r3, #8]
   1511c:	str	r1, [r3, #12]
   15120:	str	r1, [r3, #16]
   15124:	str	r1, [r3, #20]
   15128:	str	r1, [r3, #24]
   1512c:	mov	r3, #2
   15130:	str	r3, [sp, #160]	; 0xa0
   15134:	add	r3, sp, #48	; 0x30
   15138:	add	r2, sp, #160	; 0xa0
   1513c:	mov	r0, r4
   15140:	bl	11a68 <getaddrinfo@plt>
   15144:	cmp	r0, #0
   15148:	beq	1517c <__assert_fail@plt+0x369c>
   1514c:	movw	r3, #64564	; 0xfc34
   15150:	movt	r3, #2
   15154:	ldr	r3, [r3]
   15158:	cmp	r3, #0
   1515c:	bne	14f40 <__assert_fail@plt+0x3460>
   15160:	movw	r0, #60544	; 0xec80
   15164:	movt	r0, #1
   15168:	bl	11768 <strdup@plt>
   1516c:	movw	r3, #64564	; 0xfc34
   15170:	movt	r3, #2
   15174:	str	r0, [r3]
   15178:	b	14f40 <__assert_fail@plt+0x3460>
   1517c:	movw	r4, #64568	; 0xfc38
   15180:	movt	r4, #2
   15184:	ldr	r0, [r4]
   15188:	bl	1ae34 <argp_parse@@Base+0xf44>
   1518c:	ldr	r5, [sp, #48]	; 0x30
   15190:	ldr	r0, [r5, #24]
   15194:	bl	11768 <strdup@plt>
   15198:	str	r0, [r4]
   1519c:	mov	r1, #46	; 0x2e
   151a0:	bl	11900 <strchr@plt>
   151a4:	subs	r3, r0, #0
   151a8:	beq	151c0 <__assert_fail@plt+0x36e0>
   151ac:	mov	r2, #0
   151b0:	strb	r2, [r3], #1
   151b4:	movw	r2, #64564	; 0xfc34
   151b8:	movt	r2, #2
   151bc:	str	r3, [r2]
   151c0:	mov	r0, r5
   151c4:	bl	11a5c <freeaddrinfo@plt>
   151c8:	b	1514c <__assert_fail@plt+0x366c>
   151cc:	bl	11918 <__errno_location@plt>
   151d0:	movw	r2, #55288	; 0xd7f8
   151d4:	movt	r2, #1
   151d8:	ldr	r1, [r0]
   151dc:	mov	r0, #1
   151e0:	bl	11828 <error@plt>
   151e4:	b	15048 <__assert_fail@plt+0x3568>
   151e8:	mov	r2, #0
   151ec:	mov	r1, r2
   151f0:	movw	r0, #55312	; 0xd810
   151f4:	movt	r0, #1
   151f8:	bl	1184c <open64@plt>
   151fc:	movw	r3, #61868	; 0xf1ac
   15200:	movt	r3, #2
   15204:	str	r0, [r3, #384]	; 0x180
   15208:	cmp	r0, #0
   1520c:	blt	15240 <__assert_fail@plt+0x3760>
   15210:	ldr	r2, [sp, #12]
   15214:	str	r0, [r2]
   15218:	mov	r3, #3
   1521c:	strh	r3, [r2, #4]
   15220:	movw	r1, #55312	; 0xd810
   15224:	movt	r1, #1
   15228:	movw	r0, #55324	; 0xd81c
   1522c:	movt	r0, #1
   15230:	bl	11c94 <__assert_fail@plt+0x1b4>
   15234:	mov	r3, #1
   15238:	str	r3, [sp, #8]
   1523c:	b	1506c <__assert_fail@plt+0x358c>
   15240:	bl	11918 <__errno_location@plt>
   15244:	ldr	r0, [r0]
   15248:	bl	11888 <strerror@plt>
   1524c:	mov	r2, r0
   15250:	movw	r1, #55312	; 0xd810
   15254:	movt	r1, #1
   15258:	movw	r0, #55340	; 0xd82c
   1525c:	movt	r0, #1
   15260:	bl	11c94 <__assert_fail@plt+0x1b4>
   15264:	mov	r3, #0
   15268:	str	r3, [sp, #8]
   1526c:	b	1506c <__assert_fail@plt+0x358c>
   15270:	mov	r3, r4
   15274:	movw	r2, #55360	; 0xd840
   15278:	movt	r2, #1
   1527c:	movw	r1, #1025	; 0x401
   15280:	add	r0, sp, #160	; 0xa0
   15284:	bl	11924 <snprintf@plt>
   15288:	add	r0, sp, #160	; 0xa0
   1528c:	bl	1283c <__assert_fail@plt+0xd5c>
   15290:	mvn	r5, #0
   15294:	b	153d4 <__assert_fail@plt+0x38f4>
   15298:	mov	r3, r4
   1529c:	movw	r2, #55392	; 0xd860
   152a0:	movt	r2, #1
   152a4:	movw	r1, #1025	; 0x401
   152a8:	add	r0, sp, #160	; 0xa0
   152ac:	bl	11924 <snprintf@plt>
   152b0:	add	r0, sp, #160	; 0xa0
   152b4:	bl	1283c <__assert_fail@plt+0xd5c>
   152b8:	bl	11918 <__errno_location@plt>
   152bc:	ldr	r0, [r0]
   152c0:	bl	11888 <strerror@plt>
   152c4:	mov	r2, r0
   152c8:	mov	r1, r4
   152cc:	movw	r0, #55412	; 0xd874
   152d0:	movt	r0, #1
   152d4:	bl	11c94 <__assert_fail@plt+0x1b4>
   152d8:	mov	r0, r5
   152dc:	bl	11ac8 <close@plt>
   152e0:	mvn	r5, #0
   152e4:	b	153d4 <__assert_fail@plt+0x38f4>
   152e8:	mvn	r5, #0
   152ec:	b	153d4 <__assert_fail@plt+0x38f4>
   152f0:	ldr	r4, [r3, r8]
   152f4:	bl	11918 <__errno_location@plt>
   152f8:	ldr	r0, [r0]
   152fc:	bl	11888 <strerror@plt>
   15300:	mov	r2, r0
   15304:	mov	r1, r4
   15308:	movw	r0, #55340	; 0xd82c
   1530c:	movt	r0, #1
   15310:	bl	11c94 <__assert_fail@plt+0x1b4>
   15314:	add	r6, r6, #1
   15318:	movw	r3, #64544	; 0xfc20
   1531c:	movt	r3, #2
   15320:	ldr	r3, [r3]
   15324:	cmp	r3, r6
   15328:	bls	15420 <__assert_fail@plt+0x3940>
   1532c:	lsl	r8, r6, #3
   15330:	ldr	r3, [r7]
   15334:	add	sl, r3, r8
   15338:	ldr	r4, [r3, r6, lsl #3]
   1533c:	ldrb	r3, [r4]
   15340:	cmp	r3, #0
   15344:	beq	152e8 <__assert_fail@plt+0x3808>
   15348:	mov	r0, r4
   1534c:	bl	118e8 <strlen@plt>
   15350:	cmp	r0, #107	; 0x6b
   15354:	bhi	15270 <__assert_fail@plt+0x3790>
   15358:	mov	r0, r4
   1535c:	bl	11798 <unlink@plt>
   15360:	mov	r2, #108	; 0x6c
   15364:	mov	r1, #0
   15368:	mov	r0, fp
   1536c:	bl	11954 <memset@plt>
   15370:	mov	r5, #1
   15374:	strh	r5, [sp, #48]	; 0x30
   15378:	mov	r2, #107	; 0x6b
   1537c:	mov	r1, r4
   15380:	mov	r0, fp
   15384:	bl	11960 <strncpy@plt>
   15388:	mov	r2, #0
   1538c:	mov	r1, #2
   15390:	mov	r0, r5
   15394:	bl	11a74 <socket@plt>
   15398:	subs	r5, r0, #0
   1539c:	blt	15298 <__assert_fail@plt+0x37b8>
   153a0:	mov	r0, fp
   153a4:	bl	118e8 <strlen@plt>
   153a8:	add	r2, r0, #2
   153ac:	add	r1, sp, #48	; 0x30
   153b0:	mov	r0, r5
   153b4:	bl	1193c <bind@plt>
   153b8:	cmp	r0, #0
   153bc:	blt	15298 <__assert_fail@plt+0x37b8>
   153c0:	movw	r1, #438	; 0x1b6
   153c4:	mov	r0, r4
   153c8:	bl	11a80 <chmod@plt>
   153cc:	cmp	r0, #0
   153d0:	blt	15298 <__assert_fail@plt+0x37b8>
   153d4:	str	r5, [sl, #4]
   153d8:	ldr	r3, [r7]
   153dc:	add	r2, r3, r8
   153e0:	ldr	r2, [r2, #4]
   153e4:	cmp	r2, #0
   153e8:	blt	152f0 <__assert_fail@plt+0x3810>
   153ec:	ldr	ip, [sp, #12]
   153f0:	ldr	r0, [sp, #8]
   153f4:	add	r1, ip, r0, lsl #3
   153f8:	str	r2, [ip, r0, lsl #3]
   153fc:	mov	r2, #3
   15400:	strh	r2, [r1, #4]
   15404:	add	r2, r0, #1
   15408:	str	r2, [sp, #8]
   1540c:	ldr	r1, [r3, r8]
   15410:	movw	r0, #55436	; 0xd88c
   15414:	movt	r0, #1
   15418:	bl	11c94 <__assert_fail@plt+0x1b4>
   1541c:	b	15314 <__assert_fail@plt+0x3834>
   15420:	movw	r3, #64064	; 0xfa40
   15424:	movt	r3, #2
   15428:	ldr	r3, [r3]
   1542c:	cmp	r3, #0
   15430:	bne	15504 <__assert_fail@plt+0x3a24>
   15434:	movw	r3, #61868	; 0xf1ac
   15438:	movt	r3, #2
   1543c:	movw	r1, #55692	; 0xd98c
   15440:	movt	r1, #1
   15444:	ldr	r0, [r3, #12]
   15448:	bl	11a38 <fopen64@plt>
   1544c:	subs	r4, r0, #0
   15450:	beq	15474 <__assert_fail@plt+0x3994>
   15454:	bl	118d0 <getpid@plt>
   15458:	mov	r2, r0
   1545c:	movw	r1, #55696	; 0xd990
   15460:	movt	r1, #1
   15464:	mov	r0, r4
   15468:	bl	1190c <fprintf@plt>
   1546c:	mov	r0, r4
   15470:	bl	11990 <fclose@plt>
   15474:	movw	r0, #55700	; 0xd994
   15478:	movt	r0, #1
   1547c:	bl	11c94 <__assert_fail@plt+0x1b4>
   15480:	movw	r3, #7132	; 0x1bdc
   15484:	movt	r3, #1
   15488:	str	r3, [sp, #1188]	; 0x4a4
   1548c:	mov	r2, #0
   15490:	add	r1, sp, #1184	; 0x4a0
   15494:	add	r1, r1, #4
   15498:	mov	r0, #1
   1549c:	bl	117ec <sigaction@plt>
   154a0:	movw	r3, #64572	; 0xfc3c
   154a4:	movt	r3, #2
   154a8:	ldr	r3, [r3]
   154ac:	cmp	r3, #0
   154b0:	bne	157cc <__assert_fail@plt+0x3cec>
   154b4:	cmp	r9, #0
   154b8:	bne	157fc <__assert_fail@plt+0x3d1c>
   154bc:	ldr	r3, [sp, #12]
   154c0:	str	r3, [sp, #24]
   154c4:	ldr	r2, [sp, #8]
   154c8:	add	fp, r3, r2, lsl #3
   154cc:	mov	r5, #0
   154d0:	movw	r3, #62924	; 0xf5cc
   154d4:	movt	r3, #2
   154d8:	str	r3, [sp, #16]
   154dc:	movw	r3, #55832	; 0xda18
   154e0:	movt	r3, #1
   154e4:	str	r3, [sp, #36]	; 0x24
   154e8:	movw	r3, #55904	; 0xda60
   154ec:	movt	r3, #1
   154f0:	str	r3, [sp, #32]
   154f4:	movw	r3, #55892	; 0xda54
   154f8:	movt	r3, #1
   154fc:	str	r3, [sp, #28]
   15500:	b	15840 <__assert_fail@plt+0x3d60>
   15504:	movw	r3, #61868	; 0xf1ac
   15508:	movt	r3, #2
   1550c:	ldr	r0, [r3, #4]
   15510:	mvn	r2, #0
   15514:	str	r2, [r3, #316]	; 0x13c
   15518:	str	r2, [r3, #312]	; 0x138
   1551c:	movw	r3, #62924	; 0xf5cc
   15520:	movt	r3, #2
   15524:	ldr	r1, [r3, #48]	; 0x30
   15528:	cmp	r1, #0
   1552c:	beq	15598 <__assert_fail@plt+0x3ab8>
   15530:	add	r2, sp, #172	; 0xac
   15534:	mov	r3, #0
   15538:	str	r3, [sp, #172]	; 0xac
   1553c:	str	r3, [r2, #4]
   15540:	str	r3, [r2, #8]
   15544:	str	r3, [r2, #12]
   15548:	str	r3, [r2, #16]
   1554c:	str	r0, [sp, #164]	; 0xa4
   15550:	mov	r3, #2
   15554:	str	r3, [sp, #168]	; 0xa8
   15558:	mov	r3, #1
   1555c:	str	r3, [sp, #160]	; 0xa0
   15560:	movw	r0, #62924	; 0xf5cc
   15564:	movt	r0, #2
   15568:	add	r3, sp, #44	; 0x2c
   1556c:	add	r2, sp, #160	; 0xa0
   15570:	ldr	r0, [r0, #8]
   15574:	bl	11a68 <getaddrinfo@plt>
   15578:	cmp	r0, #0
   1557c:	bne	155a8 <__assert_fail@plt+0x3ac8>
   15580:	ldr	r4, [sp, #44]	; 0x2c
   15584:	cmp	r4, #0
   15588:	beq	15698 <__assert_fail@plt+0x3bb8>
   1558c:	movw	r5, #61868	; 0xf1ac
   15590:	movt	r5, #2
   15594:	b	1560c <__assert_fail@plt+0x3b2c>
   15598:	movw	r0, #55464	; 0xd8a8
   1559c:	movt	r0, #1
   155a0:	bl	11c94 <__assert_fail@plt+0x1b4>
   155a4:	b	156b4 <__assert_fail@plt+0x3bd4>
   155a8:	movw	r0, #55500	; 0xd8cc
   155ac:	movt	r0, #1
   155b0:	bl	1283c <__assert_fail@plt+0xd5c>
   155b4:	b	156b4 <__assert_fail@plt+0x3bd4>
   155b8:	movw	r0, #55540	; 0xd8f4
   155bc:	movt	r0, #1
   155c0:	bl	1283c <__assert_fail@plt+0xd5c>
   155c4:	b	15650 <__assert_fail@plt+0x3b70>
   155c8:	mov	r3, #4
   155cc:	str	r3, [sp]
   155d0:	add	r3, sp, #48	; 0x30
   155d4:	mov	r2, #26
   155d8:	mov	r1, #41	; 0x29
   155dc:	mov	r0, r6
   155e0:	bl	1166c <setsockopt@plt>
   155e4:	b	1565c <__assert_fail@plt+0x3b7c>
   155e8:	mov	r0, r6
   155ec:	bl	11ac8 <close@plt>
   155f0:	b	15600 <__assert_fail@plt+0x3b20>
   155f4:	ldr	r3, [r5, #312]	; 0x138
   155f8:	cmp	r3, #0
   155fc:	strlt	r6, [r5, #312]	; 0x138
   15600:	ldr	r4, [r4, #28]
   15604:	cmp	r4, #0
   15608:	beq	15698 <__assert_fail@plt+0x3bb8>
   1560c:	mov	r3, #1
   15610:	str	r3, [sp, #48]	; 0x30
   15614:	ldr	r2, [r4, #12]
   15618:	ldr	r1, [r4, #8]
   1561c:	ldr	r0, [r4, #4]
   15620:	bl	11a74 <socket@plt>
   15624:	subs	r6, r0, #0
   15628:	blt	15600 <__assert_fail@plt+0x3b20>
   1562c:	mov	r3, #4
   15630:	str	r3, [sp]
   15634:	add	r3, sp, #48	; 0x30
   15638:	mov	r2, #2
   1563c:	mov	r1, #1
   15640:	mov	r0, r6
   15644:	bl	1166c <setsockopt@plt>
   15648:	cmp	r0, #0
   1564c:	blt	155b8 <__assert_fail@plt+0x3ad8>
   15650:	ldr	r3, [r4, #4]
   15654:	cmp	r3, #10
   15658:	beq	155c8 <__assert_fail@plt+0x3ae8>
   1565c:	ldr	r2, [r4, #16]
   15660:	ldr	r1, [r4, #20]
   15664:	mov	r0, r6
   15668:	bl	1193c <bind@plt>
   1566c:	cmp	r0, #0
   15670:	blt	155e8 <__assert_fail@plt+0x3b08>
   15674:	ldr	r3, [r4, #4]
   15678:	cmp	r3, #2
   1567c:	beq	155f4 <__assert_fail@plt+0x3b14>
   15680:	cmp	r3, #10
   15684:	bne	15600 <__assert_fail@plt+0x3b20>
   15688:	ldr	r3, [r5, #316]	; 0x13c
   1568c:	cmp	r3, #0
   15690:	strlt	r6, [r5, #316]	; 0x13c
   15694:	b	15600 <__assert_fail@plt+0x3b20>
   15698:	ldr	r0, [sp, #44]	; 0x2c
   1569c:	bl	11a5c <freeaddrinfo@plt>
   156a0:	movw	r3, #61868	; 0xf1ac
   156a4:	movt	r3, #2
   156a8:	ldr	r3, [r3, #312]	; 0x138
   156ac:	cmp	r3, #0
   156b0:	blt	15750 <__assert_fail@plt+0x3c70>
   156b4:	movw	r3, #61868	; 0xf1ac
   156b8:	movt	r3, #2
   156bc:	ldr	r3, [r3, #312]	; 0x138
   156c0:	cmp	r3, #0
   156c4:	bge	15774 <__assert_fail@plt+0x3c94>
   156c8:	movw	r3, #61868	; 0xf1ac
   156cc:	movt	r3, #2
   156d0:	ldr	r3, [r3, #316]	; 0x13c
   156d4:	cmp	r3, #0
   156d8:	blt	15730 <__assert_fail@plt+0x3c50>
   156dc:	ldr	r0, [sp, #12]
   156e0:	ldr	r1, [sp, #8]
   156e4:	add	r2, r0, r1, lsl #3
   156e8:	str	r3, [r0, r1, lsl #3]
   156ec:	mov	r3, #3
   156f0:	strh	r3, [r2, #4]
   156f4:	add	r3, r1, #1
   156f8:	str	r3, [sp, #8]
   156fc:	movw	r0, #55632	; 0xd950
   15700:	movt	r0, #1
   15704:	bl	11c94 <__assert_fail@plt+0x1b4>
   15708:	movw	r3, #61868	; 0xf1ac
   1570c:	movt	r3, #2
   15710:	ldr	r3, [r3, #312]	; 0x138
   15714:	cmp	r3, #0
   15718:	bge	15434 <__assert_fail@plt+0x3954>
   1571c:	movw	r3, #61868	; 0xf1ac
   15720:	movt	r3, #2
   15724:	ldr	r3, [r3, #316]	; 0x13c
   15728:	cmp	r3, #0
   1572c:	bge	15434 <__assert_fail@plt+0x3954>
   15730:	bl	11918 <__errno_location@plt>
   15734:	ldr	r0, [r0]
   15738:	bl	11888 <strerror@plt>
   1573c:	mov	r1, r0
   15740:	movw	r0, #55664	; 0xd970
   15744:	movt	r0, #1
   15748:	bl	11c94 <__assert_fail@plt+0x1b4>
   1574c:	b	15434 <__assert_fail@plt+0x3954>
   15750:	movw	r3, #61868	; 0xf1ac
   15754:	movt	r3, #2
   15758:	ldr	r3, [r3, #316]	; 0x13c
   1575c:	cmp	r3, #0
   15760:	bge	156b4 <__assert_fail@plt+0x3bd4>
   15764:	movw	r0, #55568	; 0xd910
   15768:	movt	r0, #1
   1576c:	bl	1283c <__assert_fail@plt+0xd5c>
   15770:	b	156b4 <__assert_fail@plt+0x3bd4>
   15774:	ldr	r0, [sp, #12]
   15778:	ldr	r1, [sp, #8]
   1577c:	add	r2, r0, r1, lsl #3
   15780:	str	r3, [r0, r1, lsl #3]
   15784:	mov	r3, #3
   15788:	strh	r3, [r2, #4]
   1578c:	add	r3, r1, #1
   15790:	str	r3, [sp, #8]
   15794:	movw	r0, #55600	; 0xd930
   15798:	movt	r0, #1
   1579c:	bl	11c94 <__assert_fail@plt+0x1b4>
   157a0:	movw	r3, #61868	; 0xf1ac
   157a4:	movt	r3, #2
   157a8:	ldr	r3, [r3, #316]	; 0x13c
   157ac:	cmp	r3, #0
   157b0:	bge	156dc <__assert_fail@plt+0x3bfc>
   157b4:	movw	r3, #61868	; 0xf1ac
   157b8:	movt	r3, #2
   157bc:	ldr	r3, [r3, #312]	; 0x138
   157c0:	cmp	r3, #0
   157c4:	bge	15434 <__assert_fail@plt+0x3954>
   157c8:	b	15730 <__assert_fail@plt+0x3c50>
   157cc:	movw	r4, #62924	; 0xf5cc
   157d0:	movt	r4, #2
   157d4:	mov	r3, #1
   157d8:	str	r3, [r4, #4]
   157dc:	bl	118d0 <getpid@plt>
   157e0:	mov	r1, r0
   157e4:	movw	r0, #55720	; 0xd9a8
   157e8:	movt	r0, #1
   157ec:	bl	11c94 <__assert_fail@plt+0x1b4>
   157f0:	mov	r3, #0
   157f4:	str	r3, [r4, #4]
   157f8:	b	154b4 <__assert_fail@plt+0x39d4>
   157fc:	mov	r1, #15
   15800:	mov	r0, r9
   15804:	bl	118b8 <kill@plt>
   15808:	b	154bc <__assert_fail@plt+0x39dc>
   1580c:	movw	r0, #55792	; 0xd9f0
   15810:	movt	r0, #1
   15814:	bl	11c94 <__assert_fail@plt+0x1b4>
   15818:	mov	r0, #0
   1581c:	bl	148b8 <__assert_fail@plt+0x2dd8>
   15820:	mov	r3, #0
   15824:	ldr	r2, [sp, #16]
   15828:	str	r3, [r2]
   1582c:	b	15840 <__assert_fail@plt+0x3d60>
   15830:	bl	11918 <__errno_location@plt>
   15834:	ldr	r3, [r0]
   15838:	cmp	r3, #4
   1583c:	bne	15890 <__assert_fail@plt+0x3db0>
   15840:	mvn	r2, #0
   15844:	ldr	r1, [sp, #8]
   15848:	ldr	r0, [sp, #12]
   1584c:	bl	117e0 <poll@plt>
   15850:	cmp	r0, #0
   15854:	beq	15840 <__assert_fail@plt+0x3d60>
   15858:	ldr	r3, [sp, #16]
   1585c:	ldr	sl, [r3]
   15860:	cmp	sl, #0
   15864:	bne	1580c <__assert_fail@plt+0x3d2c>
   15868:	cmp	r0, #0
   1586c:	blt	15830 <__assert_fail@plt+0x3d50>
   15870:	ldr	r3, [sp, #8]
   15874:	cmp	r3, #0
   15878:	beq	15840 <__assert_fail@plt+0x3d60>
   1587c:	ldr	r6, [sp, #24]
   15880:	movw	r3, #55880	; 0xda48
   15884:	movt	r3, #1
   15888:	str	r3, [sp, #20]
   1588c:	b	15a34 <__assert_fail@plt+0x3f54>
   15890:	ldr	r0, [sp, #36]	; 0x24
   15894:	bl	1283c <__assert_fail@plt+0xd5c>
   15898:	b	15840 <__assert_fail@plt+0x3d60>
   1589c:	rsb	r2, r5, #1024	; 0x400
   158a0:	add	r3, sp, #1328	; 0x530
   158a4:	add	r1, r3, r5
   158a8:	mov	r0, r4
   158ac:	bl	11690 <read@plt>
   158b0:	cmp	r0, #0
   158b4:	ble	158cc <__assert_fail@plt+0x3dec>
   158b8:	add	r5, r5, r0
   158bc:	mov	r8, #0
   158c0:	add	r9, sp, #1328	; 0x530
   158c4:	mov	r7, #10
   158c8:	b	15b58 <__assert_fail@plt+0x4078>
   158cc:	cmp	r0, #0
   158d0:	bge	158bc <__assert_fail@plt+0x3ddc>
   158d4:	bl	11918 <__errno_location@plt>
   158d8:	ldr	r3, [r0]
   158dc:	cmp	r3, #4
   158e0:	beq	158bc <__assert_fail@plt+0x3ddc>
   158e4:	movw	r0, #55840	; 0xda20
   158e8:	movt	r0, #1
   158ec:	bl	1283c <__assert_fail@plt+0xd5c>
   158f0:	movw	r3, #61868	; 0xf1ac
   158f4:	movt	r3, #2
   158f8:	mvn	r2, #0
   158fc:	str	r2, [r3, #384]	; 0x180
   15900:	str	r2, [r6]
   15904:	b	158bc <__assert_fail@plt+0x3ddc>
   15908:	mov	r4, r9
   1590c:	b	15bb0 <__assert_fail@plt+0x40d0>
   15910:	cmp	r5, #1024	; 0x400
   15914:	blt	15a28 <__assert_fail@plt+0x3f48>
   15918:	mov	r0, r9
   1591c:	bl	13844 <__assert_fail@plt+0x1d64>
   15920:	ldrb	r3, [sp, #1328]	; 0x530
   15924:	cmp	r3, #60	; 0x3c
   15928:	movne	r5, sl
   1592c:	bne	15b58 <__assert_fail@plt+0x4078>
   15930:	bl	118c4 <__ctype_b_loc@plt>
   15934:	ldrb	r3, [sp, #1329]	; 0x531
   15938:	ldr	r2, [r0]
   1593c:	lsl	r3, r3, #1
   15940:	ldrh	r3, [r2, r3]
   15944:	tst	r3, #2048	; 0x800
   15948:	moveq	r5, sl
   1594c:	beq	15b58 <__assert_fail@plt+0x4078>
   15950:	ldrb	r3, [sp, #1330]	; 0x532
   15954:	cmp	r3, #62	; 0x3e
   15958:	movne	r5, sl
   1595c:	moveq	r5, #3
   15960:	b	15b58 <__assert_fail@plt+0x4078>
   15964:	add	r3, sp, #3376	; 0xd30
   15968:	add	r3, r3, #8
   1596c:	add	r0, r3, r0
   15970:	mov	r3, #0
   15974:	strb	r3, [r0, #-1028]	; 0xfffffbfc
   15978:	ldr	r1, [sp, #48]	; 0x30
   1597c:	add	r0, sp, #160	; 0xa0
   15980:	bl	1263c <__assert_fail@plt+0xb5c>
   15984:	add	r1, sp, #2352	; 0x930
   15988:	add	r1, r1, #4
   1598c:	bl	136c8 <__assert_fail@plt+0x1be8>
   15990:	b	15a28 <__assert_fail@plt+0x3f48>
   15994:	mov	r3, #110	; 0x6e
   15998:	str	r3, [sp, #48]	; 0x30
   1599c:	add	r3, sp, #48	; 0x30
   159a0:	str	r3, [sp, #4]
   159a4:	add	r3, sp, #160	; 0xa0
   159a8:	str	r3, [sp]
   159ac:	mov	r3, #0
   159b0:	mov	r2, #1024	; 0x400
   159b4:	add	r1, sp, #2352	; 0x930
   159b8:	add	r1, r1, #4
   159bc:	mov	r0, r4
   159c0:	bl	1175c <recvfrom@plt>
   159c4:	cmp	r0, #0
   159c8:	bgt	159f4 <__assert_fail@plt+0x3f14>
   159cc:	cmp	r0, #0
   159d0:	bge	15a28 <__assert_fail@plt+0x3f48>
   159d4:	bl	11918 <__errno_location@plt>
   159d8:	ldr	r3, [r0]
   159dc:	cmp	r3, #4
   159e0:	beq	15a28 <__assert_fail@plt+0x3f48>
   159e4:	movw	r0, #55864	; 0xda38
   159e8:	movt	r0, #1
   159ec:	bl	1283c <__assert_fail@plt+0xd5c>
   159f0:	b	15a28 <__assert_fail@plt+0x3f48>
   159f4:	add	r3, sp, #3376	; 0xd30
   159f8:	add	r3, r3, #8
   159fc:	add	r0, r3, r0
   15a00:	mov	r3, #0
   15a04:	strb	r3, [r0, #-1028]	; 0xfffffbfc
   15a08:	movw	r3, #64568	; 0xfc38
   15a0c:	movt	r3, #2
   15a10:	add	r1, sp, #2352	; 0x930
   15a14:	add	r1, r1, #4
   15a18:	ldr	r0, [r3]
   15a1c:	bl	136c8 <__assert_fail@plt+0x1be8>
   15a20:	b	15a28 <__assert_fail@plt+0x3f48>
   15a24:	mov	r5, sl
   15a28:	add	r6, r6, #8
   15a2c:	cmp	r6, fp
   15a30:	beq	15840 <__assert_fail@plt+0x3d60>
   15a34:	ldrh	r3, [r6, #6]
   15a38:	tst	r3, #3
   15a3c:	beq	15afc <__assert_fail@plt+0x401c>
   15a40:	ldr	r4, [r6]
   15a44:	cmn	r4, #1
   15a48:	beq	15a28 <__assert_fail@plt+0x3f48>
   15a4c:	movw	r3, #61868	; 0xf1ac
   15a50:	movt	r3, #2
   15a54:	ldr	r3, [r3, #384]	; 0x180
   15a58:	cmp	r4, r3
   15a5c:	beq	1589c <__assert_fail@plt+0x3dbc>
   15a60:	movw	r3, #61868	; 0xf1ac
   15a64:	movt	r3, #2
   15a68:	ldr	r3, [r3, #312]	; 0x138
   15a6c:	cmp	r4, r3
   15a70:	beq	15a88 <__assert_fail@plt+0x3fa8>
   15a74:	movw	r3, #61868	; 0xf1ac
   15a78:	movt	r3, #2
   15a7c:	ldr	r3, [r3, #316]	; 0x13c
   15a80:	cmp	r4, r3
   15a84:	bne	15994 <__assert_fail@plt+0x3eb4>
   15a88:	mov	r3, #128	; 0x80
   15a8c:	str	r3, [sp, #48]	; 0x30
   15a90:	movw	r2, #1025	; 0x401
   15a94:	mov	r1, #0
   15a98:	add	r0, sp, #2352	; 0x930
   15a9c:	add	r0, r0, #4
   15aa0:	bl	11954 <memset@plt>
   15aa4:	add	r3, sp, #48	; 0x30
   15aa8:	str	r3, [sp, #4]
   15aac:	add	r3, sp, #160	; 0xa0
   15ab0:	str	r3, [sp]
   15ab4:	mov	r3, #0
   15ab8:	mov	r2, #1024	; 0x400
   15abc:	add	r1, sp, #2352	; 0x930
   15ac0:	add	r1, r1, #4
   15ac4:	mov	r0, r4
   15ac8:	bl	1175c <recvfrom@plt>
   15acc:	cmp	r0, #0
   15ad0:	bgt	15964 <__assert_fail@plt+0x3e84>
   15ad4:	cmp	r0, #0
   15ad8:	bge	15a28 <__assert_fail@plt+0x3f48>
   15adc:	bl	11918 <__errno_location@plt>
   15ae0:	ldr	r3, [r0]
   15ae4:	cmp	r3, #4
   15ae8:	beq	15a28 <__assert_fail@plt+0x3f48>
   15aec:	movw	r0, #55848	; 0xda28
   15af0:	movt	r0, #1
   15af4:	bl	1283c <__assert_fail@plt+0xd5c>
   15af8:	b	15a28 <__assert_fail@plt+0x3f48>
   15afc:	tst	r3, #32
   15b00:	bne	15b20 <__assert_fail@plt+0x4040>
   15b04:	tst	r3, #8
   15b08:	bne	15b34 <__assert_fail@plt+0x4054>
   15b0c:	tst	r3, #16
   15b10:	beq	15a28 <__assert_fail@plt+0x3f48>
   15b14:	ldr	r0, [sp, #32]
   15b18:	bl	1283c <__assert_fail@plt+0xd5c>
   15b1c:	b	15a28 <__assert_fail@plt+0x3f48>
   15b20:	ldr	r0, [sp, #20]
   15b24:	bl	1283c <__assert_fail@plt+0xd5c>
   15b28:	mvn	r3, #0
   15b2c:	str	r3, [r6]
   15b30:	b	15a28 <__assert_fail@plt+0x3f48>
   15b34:	ldr	r0, [sp, #28]
   15b38:	bl	1283c <__assert_fail@plt+0xd5c>
   15b3c:	b	15a28 <__assert_fail@plt+0x3f48>
   15b40:	cmp	r4, r9
   15b44:	beq	15910 <__assert_fail@plt+0x3e30>
   15b48:	mov	r2, r5
   15b4c:	mov	r1, r4
   15b50:	mov	r0, r9
   15b54:	bl	116c0 <memmove@plt>
   15b58:	add	r3, sp, #3376	; 0xd30
   15b5c:	add	r3, r3, #8
   15b60:	add	r3, r3, r5
   15b64:	strb	r8, [r3, #-2056]	; 0xfffff7f8
   15b68:	mov	r1, r7
   15b6c:	mov	r0, r9
   15b70:	bl	11900 <strchr@plt>
   15b74:	cmp	r0, #0
   15b78:	beq	15908 <__assert_fail@plt+0x3e28>
   15b7c:	mov	r3, r9
   15b80:	mov	r4, r0
   15b84:	strb	r8, [r4], #1
   15b88:	sub	r2, r4, r3
   15b8c:	sub	r5, r5, r2
   15b90:	mov	r0, r3
   15b94:	bl	13844 <__assert_fail@plt+0x1d64>
   15b98:	mov	r1, r7
   15b9c:	mov	r0, r4
   15ba0:	bl	11900 <strchr@plt>
   15ba4:	mov	r3, r4
   15ba8:	cmp	r0, #0
   15bac:	bne	15b80 <__assert_fail@plt+0x40a0>
   15bb0:	cmp	r5, #0
   15bb4:	beq	15a28 <__assert_fail@plt+0x3f48>
   15bb8:	ldrb	r3, [r4]
   15bbc:	cmp	r3, #0
   15bc0:	bne	15b40 <__assert_fail@plt+0x4060>
   15bc4:	add	r3, r4, #1
   15bc8:	add	r2, r4, r5
   15bcc:	mov	r4, r3
   15bd0:	sub	r5, r2, r3
   15bd4:	cmp	r3, r2
   15bd8:	beq	15a24 <__assert_fail@plt+0x3f44>
   15bdc:	add	r3, r3, #1
   15be0:	ldrb	r1, [r4]
   15be4:	cmp	r1, #0
   15be8:	beq	15bcc <__assert_fail@plt+0x40ec>
   15bec:	b	15b40 <__assert_fail@plt+0x4060>
   15bf0:	andeq	pc, r2, r0, lsr r3	; <UNPREDICTABLE>
   15bf4:	andeq	pc, r2, r4, lsl r3	; <UNPREDICTABLE>
   15bf8:	str	r4, [sp, #-8]!
   15bfc:	str	lr, [sp, #4]
   15c00:	mov	r0, #0
   15c04:	bl	11780 <alarm@plt>
   15c08:	mov	r4, r0
   15c0c:	mov	r1, #0
   15c10:	mov	r0, #14
   15c14:	bl	11720 <signal@plt>
   15c18:	cmp	r4, #0
   15c1c:	beq	15c2c <__assert_fail@plt+0x414c>
   15c20:	ldr	r4, [sp]
   15c24:	add	sp, sp, #4
   15c28:	pop	{pc}		; (ldr pc, [sp], #4)
   15c2c:	movw	r2, #57592	; 0xe0f8
   15c30:	movt	r2, #1
   15c34:	mov	r1, #0
   15c38:	mov	r0, #1
   15c3c:	bl	11828 <error@plt>
   15c40:	b	15c20 <__assert_fail@plt+0x4140>
   15c44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15c48:	strd	r6, [sp, #8]
   15c4c:	str	r8, [sp, #16]
   15c50:	str	lr, [sp, #20]
   15c54:	mov	r6, r0
   15c58:	mov	r4, r1
   15c5c:	mov	r5, r2
   15c60:	bl	118d0 <getpid@plt>
   15c64:	mov	r7, r0
   15c68:	bl	119d8 <fork@plt>
   15c6c:	cmn	r0, #1
   15c70:	beq	15cf4 <__assert_fail@plt+0x4214>
   15c74:	cmp	r0, #0
   15c78:	beq	15cac <__assert_fail@plt+0x41cc>
   15c7c:	cmp	r5, #0
   15c80:	bgt	15c8c <__assert_fail@plt+0x41ac>
   15c84:	mov	r0, #0
   15c88:	bl	11708 <_exit@plt>
   15c8c:	movw	r1, #23544	; 0x5bf8
   15c90:	movt	r1, #1
   15c94:	mov	r0, #14
   15c98:	bl	11720 <signal@plt>
   15c9c:	mov	r0, r5
   15ca0:	bl	11780 <alarm@plt>
   15ca4:	bl	11678 <pause@plt>
   15ca8:	b	15c84 <__assert_fail@plt+0x41a4>
   15cac:	bl	118f4 <setsid@plt>
   15cb0:	cmn	r0, #1
   15cb4:	beq	15cf4 <__assert_fail@plt+0x4214>
   15cb8:	mov	r1, #1
   15cbc:	mov	r0, r1
   15cc0:	bl	11720 <signal@plt>
   15cc4:	bl	119d8 <fork@plt>
   15cc8:	cmn	r0, #1
   15ccc:	beq	15cf4 <__assert_fail@plt+0x4214>
   15cd0:	cmp	r0, #0
   15cd4:	beq	15ce0 <__assert_fail@plt+0x4200>
   15cd8:	mov	r0, #0
   15cdc:	bl	11708 <_exit@plt>
   15ce0:	cmp	r6, #0
   15ce4:	beq	15d08 <__assert_fail@plt+0x4228>
   15ce8:	cmp	r4, #0
   15cec:	movne	r0, r7
   15cf0:	beq	15d24 <__assert_fail@plt+0x4244>
   15cf4:	ldrd	r4, [sp]
   15cf8:	ldrd	r6, [sp, #8]
   15cfc:	ldr	r8, [sp, #16]
   15d00:	add	sp, sp, #20
   15d04:	pop	{pc}		; (ldr pc, [sp], #4)
   15d08:	movw	r0, #57740	; 0xe18c
   15d0c:	movt	r0, #1
   15d10:	bl	117bc <chdir@plt>
   15d14:	cmp	r0, #0
   15d18:	bge	15ce8 <__assert_fail@plt+0x4208>
   15d1c:	mvn	r0, #0
   15d20:	b	15cf4 <__assert_fail@plt+0x4214>
   15d24:	mov	r0, #4
   15d28:	bl	1178c <sysconf@plt>
   15d2c:	mov	r5, r0
   15d30:	cmn	r0, #1
   15d34:	beq	15db8 <__assert_fail@plt+0x42d8>
   15d38:	cmp	r0, #0
   15d3c:	ble	15d54 <__assert_fail@plt+0x4274>
   15d40:	mov	r0, r4
   15d44:	bl	11ac8 <close@plt>
   15d48:	add	r4, r4, #1
   15d4c:	cmp	r4, r5
   15d50:	blt	15d40 <__assert_fail@plt+0x4260>
   15d54:	mov	r2, #0
   15d58:	mov	r1, #2
   15d5c:	movw	r0, #57620	; 0xe114
   15d60:	movt	r0, #1
   15d64:	bl	1184c <open64@plt>
   15d68:	mov	r4, r0
   15d6c:	cmn	r0, #1
   15d70:	moveq	r0, r7
   15d74:	beq	15cf4 <__assert_fail@plt+0x4214>
   15d78:	mov	r1, #0
   15d7c:	mov	r0, r4
   15d80:	bl	117a4 <dup2@plt>
   15d84:	mov	r1, #1
   15d88:	mov	r0, r4
   15d8c:	bl	117a4 <dup2@plt>
   15d90:	mov	r1, #2
   15d94:	mov	r0, r4
   15d98:	bl	117a4 <dup2@plt>
   15d9c:	cmp	r4, #2
   15da0:	movle	r0, r7
   15da4:	ble	15cf4 <__assert_fail@plt+0x4214>
   15da8:	mov	r0, r4
   15dac:	bl	11ac8 <close@plt>
   15db0:	mov	r0, r7
   15db4:	b	15cf4 <__assert_fail@plt+0x4214>
   15db8:	mov	r5, #64	; 0x40
   15dbc:	b	15d40 <__assert_fail@plt+0x4260>

00015dc0 <daemon@@Base>:
   15dc0:	str	r4, [sp, #-8]!
   15dc4:	str	lr, [sp, #4]
   15dc8:	mov	r2, #0
   15dcc:	bl	15c44 <__assert_fail@plt+0x4164>
   15dd0:	cmn	r0, #1
   15dd4:	movne	r0, #0
   15dd8:	moveq	r0, #1
   15ddc:	rsb	r0, r0, #0
   15de0:	ldr	r4, [sp]
   15de4:	add	sp, sp, #4
   15de8:	pop	{pc}		; (ldr pc, [sp], #4)
   15dec:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15df0:	strd	r6, [sp, #8]
   15df4:	strd	r8, [sp, #16]
   15df8:	str	lr, [sp, #24]
   15dfc:	sub	sp, sp, #1072	; 0x430
   15e00:	sub	sp, sp, #12
   15e04:	bl	11918 <__errno_location@plt>
   15e08:	mov	r7, r0
   15e0c:	mov	r4, #0
   15e10:	mov	r6, r4
   15e14:	mov	r8, r4
   15e18:	b	15e5c <daemon@@Base+0x9c>
   15e1c:	mov	r3, #12
   15e20:	str	r3, [r7]
   15e24:	mov	r0, r6
   15e28:	bl	1ae34 <argp_parse@@Base+0xf44>
   15e2c:	mov	r0, r5
   15e30:	add	sp, sp, #1072	; 0x430
   15e34:	add	sp, sp, #12
   15e38:	ldrd	r4, [sp]
   15e3c:	ldrd	r6, [sp, #8]
   15e40:	ldrd	r8, [sp, #16]
   15e44:	add	sp, sp, #24
   15e48:	pop	{pc}		; (ldr pc, [sp], #4)
   15e4c:	ldr	r3, [r7]
   15e50:	mov	r6, r5
   15e54:	cmp	r3, #36	; 0x24
   15e58:	bne	15eac <daemon@@Base+0xec>
   15e5c:	str	r8, [r7]
   15e60:	add	r4, r4, #256	; 0x100
   15e64:	mov	r1, r4
   15e68:	mov	r0, r6
   15e6c:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   15e70:	subs	r5, r0, #0
   15e74:	beq	15e1c <daemon@@Base+0x5c>
   15e78:	mov	r1, r4
   15e7c:	mov	r0, r5
   15e80:	bl	11834 <gethostname@plt>
   15e84:	subs	r9, r0, #0
   15e88:	bne	15e4c <daemon@@Base+0x8c>
   15e8c:	mov	r2, r4
   15e90:	mov	r1, r8
   15e94:	mov	r0, r5
   15e98:	bl	11978 <memchr@plt>
   15e9c:	cmp	r0, #0
   15ea0:	bne	15e4c <daemon@@Base+0x8c>
   15ea4:	mov	r6, r5
   15ea8:	b	15e5c <daemon@@Base+0x9c>
   15eac:	cmp	r3, #0
   15eb0:	cmpne	r9, #0
   15eb4:	bne	15f34 <daemon@@Base+0x174>
   15eb8:	mov	r2, #0
   15ebc:	mov	r3, #0
   15ec0:	strd	r2, [sp, #20]
   15ec4:	strd	r2, [sp, #28]
   15ec8:	strd	r2, [sp, #36]	; 0x24
   15ecc:	strd	r2, [sp, #44]	; 0x2c
   15ed0:	mov	r3, #2
   15ed4:	str	r3, [sp, #24]
   15ed8:	add	r3, sp, #16
   15edc:	add	r2, sp, #20
   15ee0:	mov	r1, #0
   15ee4:	mov	r0, r5
   15ee8:	bl	11a68 <getaddrinfo@plt>
   15eec:	cmp	r0, #0
   15ef0:	bne	15e2c <daemon@@Base+0x6c>
   15ef4:	ldr	r3, [sp, #16]
   15ef8:	ldr	r1, [r3, #16]
   15efc:	ldr	r0, [r3, #20]
   15f00:	mov	r3, #8
   15f04:	str	r3, [sp, #8]
   15f08:	mov	r3, #0
   15f0c:	str	r3, [sp, #4]
   15f10:	str	r3, [sp]
   15f14:	movw	r3, #1025	; 0x401
   15f18:	add	r2, sp, #52	; 0x34
   15f1c:	bl	119e4 <getnameinfo@plt>
   15f20:	cmp	r0, #0
   15f24:	beq	15f44 <daemon@@Base+0x184>
   15f28:	ldr	r0, [sp, #16]
   15f2c:	bl	11a5c <freeaddrinfo@plt>
   15f30:	b	15e2c <daemon@@Base+0x6c>
   15f34:	mov	r0, r5
   15f38:	bl	1ae34 <argp_parse@@Base+0xf44>
   15f3c:	mov	r5, #0
   15f40:	b	15e2c <daemon@@Base+0x6c>
   15f44:	mov	r0, r5
   15f48:	bl	1ae34 <argp_parse@@Base+0xf44>
   15f4c:	add	r0, sp, #52	; 0x34
   15f50:	bl	11768 <strdup@plt>
   15f54:	mov	r5, r0
   15f58:	b	15f28 <daemon@@Base+0x168>
   15f5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15f60:	strd	r6, [sp, #8]
   15f64:	strd	r8, [sp, #16]
   15f68:	strd	sl, [sp, #24]
   15f6c:	str	lr, [sp, #32]
   15f70:	sub	sp, sp, #204	; 0xcc
   15f74:	str	r3, [sp, #12]
   15f78:	cmp	r1, #6
   15f7c:	movwgt	r0, #57648	; 0xe130
   15f80:	movtgt	r0, #1
   15f84:	ble	15fa4 <daemon@@Base+0x1e4>
   15f88:	add	sp, sp, #204	; 0xcc
   15f8c:	ldrd	r4, [sp]
   15f90:	ldrd	r6, [sp, #8]
   15f94:	ldrd	r8, [sp, #16]
   15f98:	ldrd	sl, [sp, #24]
   15f9c:	add	sp, sp, #32
   15fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   15fa4:	mov	r6, r0
   15fa8:	mov	r5, r1
   15fac:	mov	r7, r2
   15fb0:	mov	r0, r2
   15fb4:	bl	118e8 <strlen@plt>
   15fb8:	add	r0, r0, #6
   15fbc:	bl	1bb58 <argp_parse@@Base+0x1c68>
   15fc0:	subs	r4, r0, #0
   15fc4:	beq	1602c <daemon@@Base+0x26c>
   15fc8:	movw	r3, #57736	; 0xe188
   15fcc:	movt	r3, #1
   15fd0:	ldr	r2, [r3]
   15fd4:	str	r2, [r4]
   15fd8:	ldrh	r3, [r3, #4]
   15fdc:	strh	r3, [r4, #4]
   15fe0:	mov	r1, r7
   15fe4:	mov	r0, r4
   15fe8:	bl	11804 <strcat@plt>
   15fec:	mov	r0, r4
   15ff0:	bl	118e8 <strlen@plt>
   15ff4:	cmp	r0, #0
   15ff8:	beq	16130 <daemon@@Base+0x370>
   15ffc:	sub	r0, r0, #1
   16000:	ldrb	r3, [r4, r0]
   16004:	cmp	r3, #47	; 0x2f
   16008:	moveq	r3, #0
   1600c:	strbeq	r3, [r4, r0]
   16010:	mov	r1, #46	; 0x2e
   16014:	mov	r0, r4
   16018:	bl	11900 <strchr@plt>
   1601c:	subs	r3, r0, #0
   16020:	beq	16114 <daemon@@Base+0x354>
   16024:	mov	r8, #46	; 0x2e
   16028:	b	160a0 <daemon@@Base+0x2e0>
   1602c:	movw	r0, #62976	; 0xf600
   16030:	movt	r0, #2
   16034:	movw	r3, #57696	; 0xe160
   16038:	movt	r3, #1
   1603c:	ldrd	r4, [r3]
   16040:	strd	r4, [r0]
   16044:	ldrd	r4, [r3, #8]
   16048:	strd	r4, [r0, #8]
   1604c:	ldrd	r4, [r3, #16]
   16050:	strd	r4, [r0, #16]
   16054:	ldrd	r4, [r3, #24]
   16058:	strd	r4, [r0, #24]
   1605c:	ldr	r2, [r3, #32]
   16060:	str	r2, [r0, #32]
   16064:	ldrh	r3, [r3, #36]	; 0x24
   16068:	strh	r3, [r0, #36]	; 0x24
   1606c:	b	15f88 <daemon@@Base+0x1c8>
   16070:	add	r3, r3, #2
   16074:	sub	r1, r0, #1
   16078:	ldrb	r2, [r3], #1
   1607c:	strb	r2, [r1, #1]!
   16080:	cmp	r2, #0
   16084:	bne	16078 <daemon@@Base+0x2b8>
   16088:	b	16090 <daemon@@Base+0x2d0>
   1608c:	add	r0, r3, #1
   16090:	mov	r1, r8
   16094:	bl	11900 <strchr@plt>
   16098:	subs	r3, r0, #0
   1609c:	beq	16114 <daemon@@Base+0x354>
   160a0:	cmp	r4, r3
   160a4:	bcs	1608c <daemon@@Base+0x2cc>
   160a8:	ldrb	r2, [r3, #-1]
   160ac:	cmp	r2, #47	; 0x2f
   160b0:	bne	1608c <daemon@@Base+0x2cc>
   160b4:	ldrb	r2, [r3, #1]
   160b8:	cmp	r2, #46	; 0x2e
   160bc:	bne	1608c <daemon@@Base+0x2cc>
   160c0:	ldrb	r2, [r3, #2]
   160c4:	cmp	r2, #0
   160c8:	cmpne	r2, #47	; 0x2f
   160cc:	bne	1608c <daemon@@Base+0x2cc>
   160d0:	sub	r0, r3, #2
   160d4:	ldrb	r1, [r3, #-2]
   160d8:	subs	r2, r1, #47	; 0x2f
   160dc:	movne	r2, #1
   160e0:	cmp	r4, r0
   160e4:	movhi	r2, #0
   160e8:	cmp	r2, #0
   160ec:	beq	1610c <daemon@@Base+0x34c>
   160f0:	ldrb	r1, [r0, #-1]!
   160f4:	subs	r2, r1, #47	; 0x2f
   160f8:	movne	r2, #1
   160fc:	cmp	r4, r0
   16100:	movhi	r2, #0
   16104:	cmp	r2, #0
   16108:	bne	160f0 <daemon@@Base+0x330>
   1610c:	cmp	r4, r0
   16110:	bls	16070 <daemon@@Base+0x2b0>
   16114:	ldrb	r3, [r4]
   16118:	cmp	r3, #0
   1611c:	bne	16130 <daemon@@Base+0x370>
   16120:	mov	r3, #47	; 0x2f
   16124:	strb	r3, [r4]
   16128:	mov	r3, #0
   1612c:	strb	r3, [r4, #1]
   16130:	mov	r2, #5
   16134:	movw	r1, #57736	; 0xe188
   16138:	movt	r1, #1
   1613c:	mov	r0, r4
   16140:	bl	11aa4 <strncmp@plt>
   16144:	subs	r9, r0, #0
   16148:	bne	16198 <daemon@@Base+0x3d8>
   1614c:	mov	r2, #0
   16150:	movw	r1, #2049	; 0x801
   16154:	mov	r0, r4
   16158:	bl	1184c <open64@plt>
   1615c:	subs	fp, r0, #0
   16160:	blt	161c0 <daemon@@Base+0x400>
   16164:	cmp	r5, #0
   16168:	movle	r8, r9
   1616c:	ble	16190 <daemon@@Base+0x3d0>
   16170:	mov	r3, r6
   16174:	add	r1, r6, r5, lsl #3
   16178:	mov	r8, r9
   1617c:	ldr	r2, [r3, #4]
   16180:	add	r8, r8, r2
   16184:	add	r3, r3, #8
   16188:	cmp	r3, r1
   1618c:	bne	1617c <daemon@@Base+0x3bc>
   16190:	mov	sl, #0
   16194:	b	16348 <daemon@@Base+0x588>
   16198:	movw	r4, #62976	; 0xf600
   1619c:	movt	r4, #2
   161a0:	mov	r3, r7
   161a4:	movw	r2, #57744	; 0xe190
   161a8:	movt	r2, #1
   161ac:	mov	r1, #1024	; 0x400
   161b0:	mov	r0, r4
   161b4:	bl	11924 <snprintf@plt>
   161b8:	mov	r0, r4
   161bc:	b	15f88 <daemon@@Base+0x1c8>
   161c0:	bl	11918 <__errno_location@plt>
   161c4:	ldr	r0, [r0]
   161c8:	cmp	r0, #13
   161cc:	cmpne	r0, #16
   161d0:	moveq	r0, #0
   161d4:	beq	15f88 <daemon@@Base+0x1c8>
   161d8:	bl	11888 <strerror@plt>
   161dc:	movw	r5, #62976	; 0xf600
   161e0:	movt	r5, #2
   161e4:	str	r0, [sp]
   161e8:	mov	r3, r4
   161ec:	movw	r2, #57764	; 0xe1a4
   161f0:	movt	r2, #1
   161f4:	mov	r1, #1024	; 0x400
   161f8:	mov	r0, r5
   161fc:	bl	11924 <snprintf@plt>
   16200:	mov	r0, r4
   16204:	bl	1ae34 <argp_parse@@Base+0xf44>
   16208:	mov	r0, r5
   1620c:	b	15f88 <daemon@@Base+0x1c8>
   16210:	sub	r8, r8, r0
   16214:	add	r3, sp, #152	; 0x98
   16218:	cmp	r6, r3
   1621c:	beq	16230 <daemon@@Base+0x470>
   16220:	lsl	r2, r5, #3
   16224:	mov	r1, r6
   16228:	mov	r0, r3
   1622c:	bl	11714 <memcpy@plt>
   16230:	ldr	r3, [sp, #156]	; 0x9c
   16234:	cmp	r7, r3
   16238:	blt	16278 <daemon@@Base+0x4b8>
   1623c:	add	r6, sp, #152	; 0x98
   16240:	sub	r7, r7, r3
   16244:	add	r6, r6, #8
   16248:	sub	r5, r5, #1
   1624c:	ldr	r3, [r6, #4]
   16250:	cmp	r3, r7
   16254:	ble	16240 <daemon@@Base+0x480>
   16258:	cmp	r7, #0
   1625c:	beq	16348 <daemon@@Base+0x588>
   16260:	ldr	r2, [r6]
   16264:	add	r2, r2, r7
   16268:	str	r2, [r6]
   1626c:	sub	r7, r3, r7
   16270:	str	r7, [r6, #4]
   16274:	b	16348 <daemon@@Base+0x588>
   16278:	add	r6, sp, #152	; 0x98
   1627c:	b	16258 <daemon@@Base+0x498>
   16280:	mov	r0, fp
   16284:	bl	11ac8 <close@plt>
   16288:	mov	r0, #1
   1628c:	bl	11708 <_exit@plt>
   16290:	bl	119d8 <fork@plt>
   16294:	cmn	r0, #1
   16298:	beq	162ac <daemon@@Base+0x4ec>
   1629c:	cmp	r0, #0
   162a0:	beq	162fc <daemon@@Base+0x53c>
   162a4:	mov	r0, #0
   162a8:	bl	11708 <_exit@plt>
   162ac:	ldr	r0, [r7]
   162b0:	bl	11708 <_exit@plt>
   162b4:	mov	r3, #4
   162b8:	str	r3, [r7]
   162bc:	ldr	r0, [r7]
   162c0:	bl	11888 <strerror@plt>
   162c4:	movw	r5, #62976	; 0xf600
   162c8:	movt	r5, #2
   162cc:	mov	r3, r0
   162d0:	movw	r2, #57772	; 0xe1ac
   162d4:	movt	r2, #1
   162d8:	mov	r1, #1024	; 0x400
   162dc:	mov	r0, r5
   162e0:	bl	11924 <snprintf@plt>
   162e4:	mov	r0, fp
   162e8:	bl	11ac8 <close@plt>
   162ec:	mov	r0, r4
   162f0:	bl	1ae34 <argp_parse@@Base+0xf44>
   162f4:	mov	r0, r5
   162f8:	b	15f88 <daemon@@Base+0x1c8>
   162fc:	mov	r1, sl
   16300:	mov	r0, #14
   16304:	bl	11720 <signal@plt>
   16308:	mov	r1, sl
   1630c:	mov	r0, #15
   16310:	bl	11720 <signal@plt>
   16314:	add	r0, sp, #24
   16318:	bl	119cc <sigemptyset@plt>
   1631c:	mov	r2, sl
   16320:	add	r1, sp, #24
   16324:	mov	r0, #2
   16328:	bl	116b4 <sigprocmask@plt>
   1632c:	ldr	r0, [sp, #12]
   16330:	bl	11780 <alarm@plt>
   16334:	add	r2, sp, #20
   16338:	mov	r1, #2048	; 0x800
   1633c:	mov	r0, fp
   16340:	bl	1abc8 <argp_parse@@Base+0xcd8>
   16344:	mov	r9, #1
   16348:	mov	r2, r5
   1634c:	mov	r1, r6
   16350:	mov	r0, fp
   16354:	bl	11984 <writev@plt>
   16358:	mov	r7, r0
   1635c:	cmp	r8, r0
   16360:	ble	163f4 <daemon@@Base+0x634>
   16364:	cmp	r0, #0
   16368:	bge	16210 <daemon@@Base+0x450>
   1636c:	bl	11918 <__errno_location@plt>
   16370:	mov	r7, r0
   16374:	ldr	r3, [r0]
   16378:	cmp	r3, #11
   1637c:	bne	163e8 <daemon@@Base+0x628>
   16380:	str	sl, [sp, #20]
   16384:	cmp	r9, #0
   16388:	bne	16280 <daemon@@Base+0x4c0>
   1638c:	bl	119d8 <fork@plt>
   16390:	cmp	r0, #0
   16394:	beq	16290 <daemon@@Base+0x4d0>
   16398:	cmp	r0, #0
   1639c:	blt	162bc <daemon@@Base+0x4fc>
   163a0:	mov	r2, #0
   163a4:	add	r1, sp, #24
   163a8:	bl	11810 <waitpid@plt>
   163ac:	cmp	r0, #0
   163b0:	blt	162bc <daemon@@Base+0x4fc>
   163b4:	ldr	r3, [sp, #24]
   163b8:	tst	r3, #127	; 0x7f
   163bc:	bne	162b4 <daemon@@Base+0x4f4>
   163c0:	ubfx	r3, r3, #8, #8
   163c4:	cmp	r3, #0
   163c8:	strne	r3, [r7]
   163cc:	bne	162bc <daemon@@Base+0x4fc>
   163d0:	mov	r0, fp
   163d4:	bl	11ac8 <close@plt>
   163d8:	mov	r0, r4
   163dc:	bl	1ae34 <argp_parse@@Base+0xf44>
   163e0:	mov	r0, #0
   163e4:	b	15f88 <daemon@@Base+0x1c8>
   163e8:	cmp	r3, #5
   163ec:	cmpne	r3, #19
   163f0:	bne	16414 <daemon@@Base+0x654>
   163f4:	mov	r0, r4
   163f8:	bl	1ae34 <argp_parse@@Base+0xf44>
   163fc:	mov	r0, fp
   16400:	bl	11ac8 <close@plt>
   16404:	cmp	r9, #0
   16408:	beq	16468 <daemon@@Base+0x6a8>
   1640c:	mov	r0, #0
   16410:	bl	11708 <_exit@plt>
   16414:	mov	r0, fp
   16418:	bl	11ac8 <close@plt>
   1641c:	cmp	r9, #0
   16420:	bne	16460 <daemon@@Base+0x6a0>
   16424:	ldr	r0, [r7]
   16428:	bl	11888 <strerror@plt>
   1642c:	movw	r5, #62976	; 0xf600
   16430:	movt	r5, #2
   16434:	str	r0, [sp]
   16438:	mov	r3, r4
   1643c:	movw	r2, #57764	; 0xe1a4
   16440:	movt	r2, #1
   16444:	mov	r1, #1024	; 0x400
   16448:	mov	r0, r5
   1644c:	bl	11924 <snprintf@plt>
   16450:	mov	r0, r4
   16454:	bl	1ae34 <argp_parse@@Base+0xf44>
   16458:	mov	r0, r5
   1645c:	b	15f88 <daemon@@Base+0x1c8>
   16460:	mov	r0, #1
   16464:	bl	11708 <_exit@plt>
   16468:	mov	r0, #0
   1646c:	b	15f88 <daemon@@Base+0x1c8>
   16470:	ldr	r3, [r0]
   16474:	ldr	r2, [r0, #4]
   16478:	cmp	r2, #0
   1647c:	beq	164b8 <daemon@@Base+0x6f8>
   16480:	add	r3, r3, #24
   16484:	b	16494 <daemon@@Base+0x6d4>
   16488:	add	r3, r3, #24
   1648c:	subs	r2, r2, #1
   16490:	beq	164b0 <daemon@@Base+0x6f0>
   16494:	ldr	r0, [r3, #-24]	; 0xffffffe8
   16498:	cmp	r0, #0
   1649c:	beq	16488 <daemon@@Base+0x6c8>
   164a0:	ldr	r1, [r3, #-12]
   164a4:	tst	r1, #2
   164a8:	bne	16488 <daemon@@Base+0x6c8>
   164ac:	bx	lr
   164b0:	mov	r0, #0
   164b4:	bx	lr
   164b8:	mov	r0, #0
   164bc:	b	164ac <daemon@@Base+0x6ec>
   164c0:	ldr	r2, [r0, #8]
   164c4:	cmp	r2, #0
   164c8:	beq	164d4 <daemon@@Base+0x714>
   164cc:	mov	r0, #0
   164d0:	bx	lr
   164d4:	ldr	r2, [r1, #8]
   164d8:	cmp	r2, #0
   164dc:	bne	164cc <daemon@@Base+0x70c>
   164e0:	ldr	r2, [r0, #12]
   164e4:	ldr	r1, [r1, #12]
   164e8:	orr	r2, r2, r1
   164ec:	tst	r2, #16
   164f0:	bne	164cc <daemon@@Base+0x70c>
   164f4:	ldr	r1, [r0, #4]
   164f8:	ldr	r2, [r3]
   164fc:	add	r0, r2, #1
   16500:	str	r0, [r3]
   16504:	strb	r1, [r2]
   16508:	b	164cc <daemon@@Base+0x70c>
   1650c:	str	r4, [sp, #-8]!
   16510:	str	lr, [sp, #4]
   16514:	mov	r4, r0
   16518:	bl	118c4 <__ctype_b_loc@plt>
   1651c:	ldr	r3, [r4]
   16520:	ldrb	r2, [r3]
   16524:	ldr	ip, [r0]
   16528:	lsl	r1, r2, #1
   1652c:	ldrh	r1, [ip, r1]
   16530:	tst	r1, #8192	; 0x2000
   16534:	beq	16544 <daemon@@Base+0x784>
   16538:	add	r3, r3, #1
   1653c:	str	r3, [r4]
   16540:	b	1651c <daemon@@Base+0x75c>
   16544:	subs	ip, r2, #45	; 0x2d
   16548:	movne	ip, #1
   1654c:	cmp	r2, #0
   16550:	beq	16584 <daemon@@Base+0x7c4>
   16554:	tst	r1, #8
   16558:	bne	16584 <daemon@@Base+0x7c4>
   1655c:	add	r3, r3, #1
   16560:	str	r3, [r4]
   16564:	ldrb	r2, [r3]
   16568:	cmp	r2, #0
   1656c:	beq	16584 <daemon@@Base+0x7c4>
   16570:	ldr	r1, [r0]
   16574:	lsl	r2, r2, #1
   16578:	ldrh	r2, [r1, r2]
   1657c:	tst	r2, #8
   16580:	beq	1655c <daemon@@Base+0x79c>
   16584:	mov	r0, ip
   16588:	ldr	r4, [sp]
   1658c:	add	sp, sp, #4
   16590:	pop	{pc}		; (ldr pc, [sp], #4)
   16594:	strd	r4, [sp, #-16]!
   16598:	str	r6, [sp, #8]
   1659c:	str	lr, [sp, #12]
   165a0:	mov	r5, r0
   165a4:	ldr	r0, [r0, #12]
   165a8:	cmp	r0, #0
   165ac:	beq	165c4 <daemon@@Base+0x804>
   165b0:	ldr	r4, [r0, #24]
   165b4:	bl	1ae34 <argp_parse@@Base+0xf44>
   165b8:	mov	r0, r4
   165bc:	cmp	r4, #0
   165c0:	bne	165b0 <daemon@@Base+0x7f0>
   165c4:	ldr	r3, [r5, #4]
   165c8:	cmp	r3, #0
   165cc:	bne	165e8 <daemon@@Base+0x828>
   165d0:	mov	r0, r5
   165d4:	bl	1ae34 <argp_parse@@Base+0xf44>
   165d8:	ldrd	r4, [sp]
   165dc:	ldr	r6, [sp, #8]
   165e0:	add	sp, sp, #12
   165e4:	pop	{pc}		; (ldr pc, [sp], #4)
   165e8:	ldr	r0, [r5]
   165ec:	bl	1ae34 <argp_parse@@Base+0xf44>
   165f0:	ldr	r0, [r5, #8]
   165f4:	bl	1ae34 <argp_parse@@Base+0xf44>
   165f8:	b	165d0 <daemon@@Base+0x810>
   165fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16600:	strd	r6, [sp, #8]
   16604:	str	r8, [sp, #16]
   16608:	str	lr, [sp, #20]
   1660c:	mov	r6, r1
   16610:	ldr	r7, [r0]
   16614:	ldr	r3, [r0, #4]
   16618:	sub	r8, r3, #1
   1661c:	cmp	r3, #0
   16620:	bne	1668c <daemon@@Base+0x8cc>
   16624:	mov	r7, #0
   16628:	b	16664 <daemon@@Base+0x8a4>
   1662c:	sub	r5, r5, #1
   16630:	add	r4, r4, #24
   16634:	cmn	r5, #1
   16638:	beq	1667c <daemon@@Base+0x8bc>
   1663c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   16640:	cmp	r0, #0
   16644:	beq	1662c <daemon@@Base+0x86c>
   16648:	ldr	r3, [r4, #-12]
   1664c:	tst	r3, #2
   16650:	bne	1662c <daemon@@Base+0x86c>
   16654:	mov	r1, r6
   16658:	bl	11654 <strcmp@plt>
   1665c:	cmp	r0, #0
   16660:	bne	1662c <daemon@@Base+0x86c>
   16664:	mov	r0, r7
   16668:	ldrd	r4, [sp]
   1666c:	ldrd	r6, [sp, #8]
   16670:	ldr	r8, [sp, #16]
   16674:	add	sp, sp, #20
   16678:	pop	{pc}		; (ldr pc, [sp], #4)
   1667c:	add	r7, r7, #28
   16680:	sub	r8, r8, #1
   16684:	cmn	r8, #1
   16688:	beq	166a8 <daemon@@Base+0x8e8>
   1668c:	ldr	r4, [r7]
   16690:	ldr	r3, [r7, #4]
   16694:	sub	r5, r3, #1
   16698:	cmp	r3, #0
   1669c:	beq	1667c <daemon@@Base+0x8bc>
   166a0:	add	r4, r4, #24
   166a4:	b	1663c <daemon@@Base+0x87c>
   166a8:	mov	r7, #0
   166ac:	b	16664 <daemon@@Base+0x8a4>
   166b0:	strd	r4, [sp, #-16]!
   166b4:	str	r6, [sp, #8]
   166b8:	str	lr, [sp, #12]
   166bc:	ldr	r4, [r0, #16]
   166c0:	ldr	r0, [r0, #8]
   166c4:	cmp	r0, #0
   166c8:	moveq	r5, #0
   166cc:	beq	166e0 <daemon@@Base+0x920>
   166d0:	mov	r1, #10
   166d4:	bl	11900 <strchr@plt>
   166d8:	adds	r5, r0, #0
   166dc:	movne	r5, #1
   166e0:	cmp	r4, #0
   166e4:	beq	16708 <daemon@@Base+0x948>
   166e8:	ldr	r0, [r4]
   166ec:	cmp	r0, #0
   166f0:	beq	16708 <daemon@@Base+0x948>
   166f4:	bl	166b0 <daemon@@Base+0x8f0>
   166f8:	add	r5, r5, r0
   166fc:	ldr	r0, [r4, #16]!
   16700:	cmp	r0, #0
   16704:	bne	166f4 <daemon@@Base+0x934>
   16708:	mov	r0, r5
   1670c:	ldrd	r4, [sp]
   16710:	ldr	r6, [sp, #8]
   16714:	add	sp, sp, #12
   16718:	pop	{pc}		; (ldr pc, [sp], #4)
   1671c:	strd	r4, [sp, #-16]!
   16720:	str	r6, [sp, #8]
   16724:	str	lr, [sp, #12]
   16728:	mov	r4, r0
   1672c:	subs	r5, r2, #0
   16730:	beq	16768 <daemon@@Base+0x9a8>
   16734:	mov	r6, r1
   16738:	ldr	r2, [r5, #20]
   1673c:	cmp	r2, #0
   16740:	beq	16768 <daemon@@Base+0x9a8>
   16744:	mov	r1, r3
   16748:	mov	r0, r5
   1674c:	bl	1aa44 <argp_parse@@Base+0xb54>
   16750:	ldr	r3, [r5, #20]
   16754:	mov	r2, r0
   16758:	mov	r1, r4
   1675c:	mov	r0, r6
   16760:	blx	r3
   16764:	mov	r4, r0
   16768:	mov	r0, r4
   1676c:	ldrd	r4, [sp]
   16770:	ldr	r6, [sp, #8]
   16774:	add	sp, sp, #12
   16778:	pop	{pc}		; (ldr pc, [sp], #4)
   1677c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16780:	strd	r6, [sp, #8]
   16784:	strd	r8, [sp, #16]
   16788:	strd	sl, [sp, #24]
   1678c:	str	lr, [sp, #32]
   16790:	sub	sp, sp, #20
   16794:	ldr	r4, [r0]
   16798:	ldr	r9, [r0, #8]
   1679c:	ldr	r6, [r0, #4]
   167a0:	cmp	r6, #0
   167a4:	beq	167f8 <daemon@@Base+0xa38>
   167a8:	str	r3, [sp, #12]
   167ac:	str	r2, [sp, #8]
   167b0:	str	r1, [sp, #4]
   167b4:	mov	fp, r4
   167b8:	mov	sl, #0
   167bc:	b	16848 <daemon@@Base+0xa88>
   167c0:	and	r3, r5, #4
   167c4:	cmp	r3, #0
   167c8:	moveq	fp, r4
   167cc:	tst	r5, #2
   167d0:	bne	167f0 <daemon@@Base+0xa30>
   167d4:	ldr	r3, [sp, #12]
   167d8:	ldr	r2, [sp, #8]
   167dc:	mov	r1, fp
   167e0:	mov	r0, r4
   167e4:	ldr	ip, [sp, #4]
   167e8:	blx	ip
   167ec:	mov	r7, r0
   167f0:	add	r9, r9, #1
   167f4:	b	16828 <daemon@@Base+0xa68>
   167f8:	mov	r7, #0
   167fc:	mov	r0, r7
   16800:	add	sp, sp, #20
   16804:	ldrd	r4, [sp]
   16808:	ldrd	r6, [sp, #8]
   1680c:	ldrd	r8, [sp, #16]
   16810:	ldrd	sl, [sp, #24]
   16814:	add	sp, sp, #32
   16818:	pop	{pc}		; (ldr pc, [sp], #4)
   1681c:	ldrb	r3, [r9]
   16820:	cmp	r3, r8
   16824:	beq	167c0 <daemon@@Base+0xa00>
   16828:	add	r4, r4, #24
   1682c:	subs	r6, r6, #1
   16830:	movne	r3, #1
   16834:	moveq	r3, #0
   16838:	cmp	r7, #0
   1683c:	movne	r3, #0
   16840:	cmp	r3, #0
   16844:	beq	167fc <daemon@@Base+0xa3c>
   16848:	ldr	r5, [r4, #12]
   1684c:	ands	r7, r5, #8
   16850:	movne	r7, sl
   16854:	bne	16828 <daemon@@Base+0xa68>
   16858:	ldr	r8, [r4, #4]
   1685c:	sub	r3, r8, #1
   16860:	cmp	r3, #254	; 0xfe
   16864:	bhi	16828 <daemon@@Base+0xa68>
   16868:	bl	118c4 <__ctype_b_loc@plt>
   1686c:	ldr	r2, [r0]
   16870:	lsl	r3, r8, #1
   16874:	ldrh	r3, [r2, r3]
   16878:	tst	r3, #16384	; 0x4000
   1687c:	bne	1681c <daemon@@Base+0xa5c>
   16880:	b	16828 <daemon@@Base+0xa68>
   16884:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16888:	strd	r6, [sp, #8]
   1688c:	strd	r8, [sp, #16]
   16890:	strd	sl, [sp, #24]
   16894:	str	lr, [sp, #32]
   16898:	add	fp, sp, #32
   1689c:	sub	sp, sp, #20
   168a0:	ldr	r5, [r0, #4]
   168a4:	cmp	r5, #0
   168a8:	beq	16a50 <daemon@@Base+0xc90>
   168ac:	str	r1, [fp, #-48]	; 0xffffffd0
   168b0:	mov	r6, r0
   168b4:	ldr	r0, [r0, #8]
   168b8:	bl	118e8 <strlen@plt>
   168bc:	add	r3, r0, #8
   168c0:	bic	r3, r3, #7
   168c4:	sub	sp, sp, r3
   168c8:	mov	r8, sp
   168cc:	str	r8, [fp, #-40]	; 0xffffffd8
   168d0:	ldr	r4, [r6]
   168d4:	movw	r7, #25792	; 0x64c0
   168d8:	movt	r7, #1
   168dc:	ldr	r2, [r4, #20]
   168e0:	sub	r3, fp, #40	; 0x28
   168e4:	ldr	r2, [r2, #24]
   168e8:	mov	r1, r7
   168ec:	mov	r0, r4
   168f0:	bl	1677c <daemon@@Base+0x9bc>
   168f4:	add	r4, r4, #28
   168f8:	subs	r5, r5, #1
   168fc:	bne	168dc <daemon@@Base+0xb1c>
   16900:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16904:	cmp	r3, r8
   16908:	bhi	1697c <daemon@@Base+0xbbc>
   1690c:	ldr	r4, [r6]
   16910:	ldr	r5, [r6, #4]
   16914:	cmp	r5, #0
   16918:	beq	16a50 <daemon@@Base+0xc90>
   1691c:	movw	r7, #27720	; 0x6c48
   16920:	movt	r7, #1
   16924:	ldr	r2, [r4, #20]
   16928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1692c:	ldr	r2, [r2, #24]
   16930:	mov	r1, r7
   16934:	mov	r0, r4
   16938:	bl	1677c <daemon@@Base+0x9bc>
   1693c:	add	r4, r4, #28
   16940:	subs	r5, r5, #1
   16944:	bne	16924 <daemon@@Base+0xb64>
   16948:	ldr	r7, [r6]
   1694c:	ldr	r8, [r6, #4]
   16950:	cmp	r8, #0
   16954:	beq	16a50 <daemon@@Base+0xc90>
   16958:	add	r7, r7, #28
   1695c:	movw	sl, #57976	; 0xe278
   16960:	movt	sl, #1
   16964:	movw	r9, #57960	; 0xe268
   16968:	movt	r9, #1
   1696c:	movw	r3, #57988	; 0xe284
   16970:	movt	r3, #1
   16974:	str	r3, [fp, #-52]	; 0xffffffcc
   16978:	b	16a38 <daemon@@Base+0xc78>
   1697c:	add	r2, r3, #1
   16980:	str	r2, [fp, #-40]	; 0xffffffd8
   16984:	mov	r2, #0
   16988:	strb	r2, [r3]
   1698c:	mov	r2, r8
   16990:	movw	r1, #57952	; 0xe260
   16994:	movt	r1, #1
   16998:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1699c:	bl	1c300 <argp_parse@@Base+0x2410>
   169a0:	b	1690c <daemon@@Base+0xb4c>
   169a4:	tst	r1, #16
   169a8:	bne	169dc <daemon@@Base+0xc1c>
   169ac:	ldr	r3, [r6, #8]
   169b0:	cmp	r3, #0
   169b4:	bne	169c8 <daemon@@Base+0xc08>
   169b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   169bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   169c0:	bl	1c300 <argp_parse@@Base+0x2410>
   169c4:	b	169dc <daemon@@Base+0xc1c>
   169c8:	tst	r1, #1
   169cc:	movne	r1, r9
   169d0:	moveq	r1, sl
   169d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   169d8:	bl	1c300 <argp_parse@@Base+0x2410>
   169dc:	add	r4, r4, #24
   169e0:	subs	r5, r5, #1
   169e4:	beq	16a2c <daemon@@Base+0xc6c>
   169e8:	ldr	r2, [r4]
   169ec:	cmp	r2, #0
   169f0:	beq	169dc <daemon@@Base+0xc1c>
   169f4:	ldr	r1, [r4, #12]
   169f8:	and	r3, r1, #4
   169fc:	cmp	r3, #0
   16a00:	moveq	r6, r4
   16a04:	tst	r1, #2
   16a08:	bne	169dc <daemon@@Base+0xc1c>
   16a0c:	ldr	r3, [r4, #8]
   16a10:	ldr	r0, [r6, #12]
   16a14:	orr	r1, r1, r0
   16a18:	cmp	r3, #0
   16a1c:	beq	169a4 <daemon@@Base+0xbe4>
   16a20:	tst	r1, #16
   16a24:	beq	169c8 <daemon@@Base+0xc08>
   16a28:	b	169dc <daemon@@Base+0xc1c>
   16a2c:	add	r7, r7, #28
   16a30:	subs	r8, r8, #1
   16a34:	beq	16a50 <daemon@@Base+0xc90>
   16a38:	ldr	r4, [r7, #-28]	; 0xffffffe4
   16a3c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   16a40:	cmp	r5, #0
   16a44:	beq	16a2c <daemon@@Base+0xc6c>
   16a48:	mov	r6, r4
   16a4c:	b	169e8 <daemon@@Base+0xc28>
   16a50:	sub	sp, fp, #32
   16a54:	ldrd	r4, [sp]
   16a58:	ldrd	r6, [sp, #8]
   16a5c:	ldrd	r8, [sp, #16]
   16a60:	ldrd	sl, [sp, #24]
   16a64:	add	sp, sp, #32
   16a68:	pop	{pc}		; (ldr pc, [sp], #4)
   16a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16a70:	strd	r6, [sp, #8]
   16a74:	str	r8, [sp, #16]
   16a78:	str	lr, [sp, #20]
   16a7c:	mov	r4, r0
   16a80:	mov	r5, r1
   16a84:	ldr	r3, [r0, #28]
   16a88:	ldr	r2, [r0, #24]
   16a8c:	sub	r3, r3, r2
   16a90:	ldr	r2, [r0, #16]
   16a94:	cmp	r3, r2
   16a98:	bhi	16ab4 <daemon@@Base+0xcf4>
   16a9c:	ldr	r3, [r4, #20]
   16aa0:	cmp	r3, #0
   16aa4:	subge	r5, r5, r3
   16aa8:	mov	r6, #32
   16aac:	mov	r7, #1
   16ab0:	b	16ad0 <daemon@@Base+0xd10>
   16ab4:	bl	1bc88 <argp_parse@@Base+0x1d98>
   16ab8:	b	16a9c <daemon@@Base+0xcdc>
   16abc:	ldr	r3, [r4, #28]
   16ac0:	add	r2, r3, #1
   16ac4:	str	r2, [r4, #28]
   16ac8:	strb	r6, [r3]
   16acc:	sub	r5, r5, #1
   16ad0:	cmp	r5, #0
   16ad4:	ble	16b00 <daemon@@Base+0xd40>
   16ad8:	ldr	r2, [r4, #28]
   16adc:	ldr	r3, [r4, #32]
   16ae0:	cmp	r2, r3
   16ae4:	bcc	16abc <daemon@@Base+0xcfc>
   16ae8:	mov	r1, r7
   16aec:	mov	r0, r4
   16af0:	bl	1c200 <argp_parse@@Base+0x2310>
   16af4:	cmp	r0, #0
   16af8:	bne	16abc <daemon@@Base+0xcfc>
   16afc:	b	16acc <daemon@@Base+0xd0c>
   16b00:	ldrd	r4, [sp]
   16b04:	ldrd	r6, [sp, #8]
   16b08:	ldr	r8, [sp, #16]
   16b0c:	add	sp, sp, #20
   16b10:	pop	{pc}		; (ldr pc, [sp], #4)
   16b14:	strd	r4, [sp, #-16]!
   16b18:	str	r6, [sp, #8]
   16b1c:	str	lr, [sp, #12]
   16b20:	ldr	r4, [r0, #12]
   16b24:	ands	r4, r4, #8
   16b28:	movne	r4, #0
   16b2c:	bne	16b5c <daemon@@Base+0xd9c>
   16b30:	ldr	r5, [r0, #4]
   16b34:	sub	r3, r5, #1
   16b38:	cmp	r3, #254	; 0xfe
   16b3c:	bhi	16b5c <daemon@@Base+0xd9c>
   16b40:	bl	118c4 <__ctype_b_loc@plt>
   16b44:	ldr	r2, [r0]
   16b48:	lsl	r3, r5, #1
   16b4c:	ldrh	r3, [r2, r3]
   16b50:	and	r3, r3, #16384	; 0x4000
   16b54:	cmp	r3, #0
   16b58:	movne	r4, r5
   16b5c:	mov	r0, r4
   16b60:	ldrd	r4, [sp]
   16b64:	ldr	r6, [sp, #8]
   16b68:	add	sp, sp, #12
   16b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b70:	strd	r4, [sp, #-16]!
   16b74:	str	r6, [sp, #8]
   16b78:	str	lr, [sp, #12]
   16b7c:	mov	r4, r0
   16b80:	mov	r5, r1
   16b84:	ldr	r3, [r0, #28]
   16b88:	ldr	r2, [r0, #24]
   16b8c:	sub	r3, r3, r2
   16b90:	ldr	r2, [r0, #16]
   16b94:	cmp	r3, r2
   16b98:	bhi	16be8 <daemon@@Base+0xe28>
   16b9c:	ldr	r3, [r4, #20]
   16ba0:	cmp	r3, #0
   16ba4:	addge	r5, r5, r3
   16ba8:	ldr	r3, [r4, #8]
   16bac:	cmp	r5, r3
   16bb0:	bcc	16c08 <daemon@@Base+0xe48>
   16bb4:	ldr	r2, [r4, #28]
   16bb8:	ldr	r3, [r4, #32]
   16bbc:	cmp	r2, r3
   16bc0:	bcs	16bf0 <daemon@@Base+0xe30>
   16bc4:	ldr	r3, [r4, #28]
   16bc8:	add	r2, r3, #1
   16bcc:	str	r2, [r4, #28]
   16bd0:	mov	r2, #10
   16bd4:	strb	r2, [r3]
   16bd8:	ldrd	r4, [sp]
   16bdc:	ldr	r6, [sp, #8]
   16be0:	add	sp, sp, #12
   16be4:	pop	{pc}		; (ldr pc, [sp], #4)
   16be8:	bl	1bc88 <argp_parse@@Base+0x1d98>
   16bec:	b	16b9c <daemon@@Base+0xddc>
   16bf0:	mov	r1, #1
   16bf4:	mov	r0, r4
   16bf8:	bl	1c200 <argp_parse@@Base+0x2310>
   16bfc:	cmp	r0, #0
   16c00:	bne	16bc4 <daemon@@Base+0xe04>
   16c04:	b	16bd8 <daemon@@Base+0xe18>
   16c08:	ldr	r2, [r4, #28]
   16c0c:	ldr	r3, [r4, #32]
   16c10:	cmp	r2, r3
   16c14:	bcs	16c30 <daemon@@Base+0xe70>
   16c18:	ldr	r3, [r4, #28]
   16c1c:	add	r2, r3, #1
   16c20:	str	r2, [r4, #28]
   16c24:	mov	r2, #32
   16c28:	strb	r2, [r3]
   16c2c:	b	16bd8 <daemon@@Base+0xe18>
   16c30:	mov	r1, #1
   16c34:	mov	r0, r4
   16c38:	bl	1c200 <argp_parse@@Base+0x2310>
   16c3c:	cmp	r0, #0
   16c40:	bne	16c18 <daemon@@Base+0xe58>
   16c44:	b	16bd8 <daemon@@Base+0xe18>
   16c48:	strd	r4, [sp, #-16]!
   16c4c:	str	r6, [sp, #8]
   16c50:	str	lr, [sp, #12]
   16c54:	ldr	r5, [r0, #8]
   16c58:	cmp	r5, #0
   16c5c:	beq	16ca0 <daemon@@Base+0xee0>
   16c60:	ldr	r2, [r0, #12]
   16c64:	ldr	r1, [r1, #12]
   16c68:	orr	r2, r2, r1
   16c6c:	tst	r2, #16
   16c70:	bne	16cac <daemon@@Base+0xeec>
   16c74:	mov	r6, r3
   16c78:	mov	r4, r0
   16c7c:	tst	r2, #1
   16c80:	beq	16cc0 <daemon@@Base+0xf00>
   16c84:	mov	r3, r5
   16c88:	ldr	r2, [r0, #4]
   16c8c:	movw	r1, #57996	; 0xe28c
   16c90:	movt	r1, #1
   16c94:	mov	r0, r6
   16c98:	bl	1c300 <argp_parse@@Base+0x2410>
   16c9c:	b	16cac <daemon@@Base+0xeec>
   16ca0:	ldr	r5, [r1, #8]
   16ca4:	cmp	r5, #0
   16ca8:	bne	16c60 <daemon@@Base+0xea0>
   16cac:	mov	r0, #0
   16cb0:	ldrd	r4, [sp]
   16cb4:	ldr	r6, [sp, #8]
   16cb8:	add	sp, sp, #12
   16cbc:	pop	{pc}		; (ldr pc, [sp], #4)
   16cc0:	mov	r0, r5
   16cc4:	bl	118e8 <strlen@plt>
   16cc8:	add	r1, r0, #6
   16ccc:	mov	r0, r6
   16cd0:	bl	16b70 <daemon@@Base+0xdb0>
   16cd4:	mov	r3, r5
   16cd8:	ldr	r2, [r4, #4]
   16cdc:	movw	r1, #58008	; 0xe298
   16ce0:	movt	r1, #1
   16ce4:	mov	r0, r6
   16ce8:	bl	1c300 <argp_parse@@Base+0x2410>
   16cec:	b	16cac <daemon@@Base+0xeec>
   16cf0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16cf4:	strd	r6, [sp, #8]
   16cf8:	strd	r8, [sp, #16]
   16cfc:	strd	sl, [sp, #24]
   16d00:	str	lr, [sp, #32]
   16d04:	sub	sp, sp, #28
   16d08:	str	r1, [sp, #8]
   16d0c:	mov	sl, r2
   16d10:	mov	r4, r3
   16d14:	ldr	r9, [sp, #64]	; 0x40
   16d18:	ldr	r6, [r2]
   16d1c:	str	r6, [sp, #20]
   16d20:	ldr	r7, [r0, #16]
   16d24:	ldr	r2, [r0, #8]
   16d28:	mov	ip, r2
   16d2c:	str	r2, [sp, #16]
   16d30:	mov	r3, r1
   16d34:	mov	r2, r0
   16d38:	mov	r1, #6
   16d3c:	movt	r1, #512	; 0x200
   16d40:	mov	r0, ip
   16d44:	bl	1671c <daemon@@Base+0x95c>
   16d48:	cmp	r0, #0
   16d4c:	str	r0, [sp, #12]
   16d50:	beq	16ee0 <daemon@@Base+0x1120>
   16d54:	mov	r1, #10
   16d58:	bl	116cc <strchrnul@plt>
   16d5c:	mov	r5, r0
   16d60:	ldrb	r3, [r0]
   16d64:	cmp	r3, #0
   16d68:	beq	16eb0 <daemon@@Base+0x10f0>
   16d6c:	ldrb	fp, [r6]
   16d70:	cmp	fp, #0
   16d74:	ble	16ea8 <daemon@@Base+0x10e8>
   16d78:	mov	r6, #0
   16d7c:	add	r8, r0, #1
   16d80:	mov	r1, #10
   16d84:	mov	r0, r8
   16d88:	bl	116cc <strchrnul@plt>
   16d8c:	add	r6, r6, #1
   16d90:	cmp	r6, fp
   16d94:	bne	16d7c <daemon@@Base+0xfbc>
   16d98:	mov	r5, r0
   16d9c:	ldr	r3, [sl]
   16da0:	add	r3, r3, #1
   16da4:	str	r3, [sl]
   16da8:	mov	fp, #1
   16dac:	add	r1, r5, #1
   16db0:	sub	r1, r1, r8
   16db4:	mov	r0, r9
   16db8:	bl	16b70 <daemon@@Base+0xdb0>
   16dbc:	sub	r6, r5, r8
   16dc0:	ldr	r3, [r9, #28]
   16dc4:	add	r3, r3, r6
   16dc8:	ldr	r2, [r9, #32]
   16dcc:	cmp	r2, r3
   16dd0:	bcs	16de8 <daemon@@Base+0x1028>
   16dd4:	mov	r1, r6
   16dd8:	mov	r0, r9
   16ddc:	bl	1c200 <argp_parse@@Base+0x2310>
   16de0:	cmp	r0, #0
   16de4:	beq	16e04 <daemon@@Base+0x1044>
   16de8:	mov	r2, r6
   16dec:	mov	r1, r8
   16df0:	ldr	r0, [r9, #28]
   16df4:	bl	11714 <memcpy@plt>
   16df8:	ldr	r3, [r9, #28]
   16dfc:	add	r6, r3, r6
   16e00:	str	r6, [r9, #28]
   16e04:	ldr	r2, [sp, #16]
   16e08:	ldr	r3, [sp, #12]
   16e0c:	cmp	r2, r3
   16e10:	bne	16ebc <daemon@@Base+0x10fc>
   16e14:	cmp	r7, #0
   16e18:	beq	16e54 <daemon@@Base+0x1094>
   16e1c:	ldr	r0, [r7]
   16e20:	cmp	r0, #0
   16e24:	beq	16e54 <daemon@@Base+0x1094>
   16e28:	mov	r3, r4
   16e2c:	str	r9, [sp]
   16e30:	mov	r2, sl
   16e34:	ldr	r1, [sp, #8]
   16e38:	bl	16cf0 <daemon@@Base+0xf30>
   16e3c:	clz	r3, r0
   16e40:	lsr	r3, r3, #5
   16e44:	ldr	r0, [r7, #16]!
   16e48:	cmp	r0, #0
   16e4c:	bne	16e2c <daemon@@Base+0x106c>
   16e50:	mov	r4, r3
   16e54:	cmp	r4, #0
   16e58:	moveq	fp, #0
   16e5c:	cmp	fp, #0
   16e60:	beq	16e84 <daemon@@Base+0x10c4>
   16e64:	ldrb	r3, [r5]
   16e68:	cmp	r3, #0
   16e6c:	beq	16ec8 <daemon@@Base+0x1108>
   16e70:	ldr	r2, [sp, #20]
   16e74:	ldrb	r3, [r2]
   16e78:	add	r3, r3, #1
   16e7c:	strb	r3, [r2]
   16e80:	mov	r4, #0
   16e84:	clz	r0, r4
   16e88:	lsr	r0, r0, #5
   16e8c:	add	sp, sp, #28
   16e90:	ldrd	r4, [sp]
   16e94:	ldrd	r6, [sp, #8]
   16e98:	ldrd	r8, [sp, #16]
   16e9c:	ldrd	sl, [sp, #24]
   16ea0:	add	sp, sp, #32
   16ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ea8:	ldr	r8, [sp, #12]
   16eac:	b	16d9c <daemon@@Base+0xfdc>
   16eb0:	ldr	r8, [sp, #12]
   16eb4:	mov	fp, #0
   16eb8:	b	16dac <daemon@@Base+0xfec>
   16ebc:	mov	r0, r3
   16ec0:	bl	1ae34 <argp_parse@@Base+0xf44>
   16ec4:	b	16e14 <daemon@@Base+0x1054>
   16ec8:	ldr	r2, [sp, #20]
   16ecc:	ldrb	r3, [r2]
   16ed0:	cmp	r3, #0
   16ed4:	movne	r3, #0
   16ed8:	strbne	r3, [r2]
   16edc:	b	16e84 <daemon@@Base+0x10c4>
   16ee0:	cmp	r7, #0
   16ee4:	beq	16e84 <daemon@@Base+0x10c4>
   16ee8:	ldr	r5, [sp, #12]
   16eec:	mov	fp, #0
   16ef0:	b	16e1c <daemon@@Base+0x105c>
   16ef4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16ef8:	strd	r6, [sp, #8]
   16efc:	str	r8, [sp, #16]
   16f00:	str	lr, [sp, #20]
   16f04:	mov	r6, r0
   16f08:	mov	r4, r2
   16f0c:	ldr	r3, [r2, #16]
   16f10:	mov	r2, r1
   16f14:	mov	r1, #3
   16f18:	movt	r1, #512	; 0x200
   16f1c:	bl	1671c <daemon@@Base+0x95c>
   16f20:	subs	r5, r0, #0
   16f24:	beq	17038 <daemon@@Base+0x1278>
   16f28:	ldrb	r3, [r5]
   16f2c:	cmp	r3, #0
   16f30:	beq	1702c <daemon@@Base+0x126c>
   16f34:	ldr	r3, [r4, #8]
   16f38:	ldr	r3, [r3]
   16f3c:	cmp	r3, #0
   16f40:	beq	16f6c <daemon@@Base+0x11ac>
   16f44:	ldr	r7, [r4, #4]
   16f48:	ldr	r2, [r7, #28]
   16f4c:	ldr	r3, [r7, #32]
   16f50:	cmp	r2, r3
   16f54:	bcs	1705c <daemon@@Base+0x129c>
   16f58:	ldr	r3, [r7, #28]
   16f5c:	add	r2, r3, #1
   16f60:	str	r2, [r7, #28]
   16f64:	mov	r2, #10
   16f68:	strb	r2, [r3]
   16f6c:	movw	r8, #62844	; 0xf57c
   16f70:	movt	r8, #2
   16f74:	ldr	r1, [r8, #24]
   16f78:	ldr	r0, [r4, #4]
   16f7c:	bl	16a6c <daemon@@Base+0xcac>
   16f80:	ldr	r7, [r4, #4]
   16f84:	ldr	r8, [r8, #24]
   16f88:	ldr	r3, [r7, #28]
   16f8c:	ldr	r2, [r7, #24]
   16f90:	sub	r3, r3, r2
   16f94:	ldr	r2, [r7, #16]
   16f98:	cmp	r3, r2
   16f9c:	bhi	17074 <daemon@@Base+0x12b4>
   16fa0:	str	r8, [r7, #4]
   16fa4:	ldr	r7, [r4, #4]
   16fa8:	movw	r3, #62844	; 0xf57c
   16fac:	movt	r3, #2
   16fb0:	ldr	r8, [r3, #24]
   16fb4:	ldr	r3, [r7, #28]
   16fb8:	ldr	r2, [r7, #24]
   16fbc:	sub	r3, r3, r2
   16fc0:	ldr	r2, [r7, #16]
   16fc4:	cmp	r3, r2
   16fc8:	bhi	17080 <daemon@@Base+0x12c0>
   16fcc:	str	r8, [r7, #12]
   16fd0:	mov	r0, r5
   16fd4:	bl	118e8 <strlen@plt>
   16fd8:	subs	r7, r0, #0
   16fdc:	bne	1708c <daemon@@Base+0x12cc>
   16fe0:	ldr	r7, [r4, #4]
   16fe4:	ldr	r3, [r7, #28]
   16fe8:	ldr	r2, [r7, #24]
   16fec:	sub	r3, r3, r2
   16ff0:	ldr	r2, [r7, #16]
   16ff4:	cmp	r3, r2
   16ff8:	bhi	170d8 <daemon@@Base+0x1318>
   16ffc:	mov	r3, #0
   17000:	str	r3, [r7, #4]
   17004:	ldr	r7, [r4, #4]
   17008:	ldr	r2, [r7, #28]
   1700c:	ldr	r3, [r7, #32]
   17010:	cmp	r2, r3
   17014:	bcs	170e4 <daemon@@Base+0x1324>
   17018:	ldr	r3, [r7, #28]
   1701c:	add	r2, r3, #1
   17020:	str	r2, [r7, #28]
   17024:	mov	r2, #10
   17028:	strb	r2, [r3]
   1702c:	ldr	r3, [r4, #8]
   17030:	mov	r2, #1
   17034:	str	r2, [r3, #4]
   17038:	cmp	r6, r5
   1703c:	beq	17048 <daemon@@Base+0x1288>
   17040:	mov	r0, r5
   17044:	bl	1ae34 <argp_parse@@Base+0xf44>
   17048:	ldrd	r4, [sp]
   1704c:	ldrd	r6, [sp, #8]
   17050:	ldr	r8, [sp, #16]
   17054:	add	sp, sp, #20
   17058:	pop	{pc}		; (ldr pc, [sp], #4)
   1705c:	mov	r1, #1
   17060:	mov	r0, r7
   17064:	bl	1c200 <argp_parse@@Base+0x2310>
   17068:	cmp	r0, #0
   1706c:	bne	16f58 <daemon@@Base+0x1198>
   17070:	b	16f6c <daemon@@Base+0x11ac>
   17074:	mov	r0, r7
   17078:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1707c:	b	16fa0 <daemon@@Base+0x11e0>
   17080:	mov	r0, r7
   17084:	bl	1bc88 <argp_parse@@Base+0x1d98>
   17088:	b	16fcc <daemon@@Base+0x120c>
   1708c:	ldr	r8, [r4, #4]
   17090:	ldr	r3, [r8, #28]
   17094:	add	r3, r3, r7
   17098:	ldr	r2, [r8, #32]
   1709c:	cmp	r2, r3
   170a0:	bcs	170b8 <daemon@@Base+0x12f8>
   170a4:	mov	r1, r7
   170a8:	mov	r0, r8
   170ac:	bl	1c200 <argp_parse@@Base+0x2310>
   170b0:	cmp	r0, #0
   170b4:	beq	16fe0 <daemon@@Base+0x1220>
   170b8:	mov	r2, r7
   170bc:	mov	r1, r5
   170c0:	ldr	r0, [r8, #28]
   170c4:	bl	11714 <memcpy@plt>
   170c8:	ldr	r3, [r8, #28]
   170cc:	add	r7, r3, r7
   170d0:	str	r7, [r8, #28]
   170d4:	b	16fe0 <daemon@@Base+0x1220>
   170d8:	mov	r0, r7
   170dc:	bl	1bc88 <argp_parse@@Base+0x1d98>
   170e0:	b	16ffc <daemon@@Base+0x123c>
   170e4:	mov	r1, #1
   170e8:	mov	r0, r7
   170ec:	bl	1c200 <argp_parse@@Base+0x2310>
   170f0:	cmp	r0, #0
   170f4:	bne	17018 <daemon@@Base+0x1258>
   170f8:	b	1702c <daemon@@Base+0x126c>
   170fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17100:	strd	r6, [sp, #8]
   17104:	str	r8, [sp, #16]
   17108:	str	lr, [sp, #20]
   1710c:	mov	r6, r0
   17110:	mov	r4, r1
   17114:	ldr	r3, [r1, #12]
   17118:	cmp	r3, #0
   1711c:	beq	17250 <daemon@@Base+0x1490>
   17120:	ldr	r3, [r1, #8]
   17124:	ldr	r7, [r3]
   17128:	ldr	r2, [r1]
   1712c:	ldr	r5, [r2, #16]
   17130:	ldr	r3, [r3, #4]
   17134:	cmp	r3, #0
   17138:	cmpne	r7, #0
   1713c:	bne	171f0 <daemon@@Base+0x1430>
   17140:	cmp	r5, #0
   17144:	beq	171c8 <daemon@@Base+0x1408>
   17148:	ldr	r0, [r5]
   1714c:	cmp	r0, #0
   17150:	beq	171c8 <daemon@@Base+0x1408>
   17154:	ldrb	r3, [r0]
   17158:	cmp	r3, #0
   1715c:	beq	171c8 <daemon@@Base+0x1408>
   17160:	cmp	r7, #0
   17164:	beq	17194 <daemon@@Base+0x13d4>
   17168:	ldr	r3, [r7, #16]
   1716c:	cmp	r3, r5
   17170:	beq	171c8 <daemon@@Base+0x1408>
   17174:	cmp	r3, #0
   17178:	beq	17194 <daemon@@Base+0x13d4>
   1717c:	ldr	r3, [r3, #12]
   17180:	cmp	r3, #0
   17184:	cmpne	r5, r3
   17188:	bne	1717c <daemon@@Base+0x13bc>
   1718c:	cmp	r5, r3
   17190:	beq	171c8 <daemon@@Base+0x1408>
   17194:	ldr	r3, [r4, #4]
   17198:	ldr	r7, [r3, #12]
   1719c:	mov	r2, r4
   171a0:	ldr	r1, [r5, #16]
   171a4:	bl	16ef4 <daemon@@Base+0x1134>
   171a8:	ldr	r5, [r4, #4]
   171ac:	ldr	r3, [r5, #28]
   171b0:	ldr	r2, [r5, #24]
   171b4:	sub	r3, r3, r2
   171b8:	ldr	r2, [r5, #16]
   171bc:	cmp	r3, r2
   171c0:	bhi	17244 <daemon@@Base+0x1484>
   171c4:	str	r7, [r5, #12]
   171c8:	mov	r3, #0
   171cc:	str	r3, [r4, #12]
   171d0:	mov	r1, r6
   171d4:	ldr	r0, [r4, #4]
   171d8:	bl	16a6c <daemon@@Base+0xcac>
   171dc:	ldrd	r4, [sp]
   171e0:	ldrd	r6, [sp, #8]
   171e4:	ldr	r8, [sp, #16]
   171e8:	add	sp, sp, #20
   171ec:	pop	{pc}		; (ldr pc, [sp], #4)
   171f0:	ldr	r2, [r2, #12]
   171f4:	ldr	r3, [r7, #12]
   171f8:	cmp	r2, r3
   171fc:	beq	17140 <daemon@@Base+0x1380>
   17200:	ldr	r8, [r1, #4]
   17204:	ldr	r2, [r8, #28]
   17208:	ldr	r3, [r8, #32]
   1720c:	cmp	r2, r3
   17210:	bcs	1722c <daemon@@Base+0x146c>
   17214:	ldr	r3, [r8, #28]
   17218:	add	r2, r3, #1
   1721c:	str	r2, [r8, #28]
   17220:	mov	r2, #10
   17224:	strb	r2, [r3]
   17228:	b	17140 <daemon@@Base+0x1380>
   1722c:	mov	r1, #1
   17230:	mov	r0, r8
   17234:	bl	1c200 <argp_parse@@Base+0x2310>
   17238:	cmp	r0, #0
   1723c:	bne	17214 <daemon@@Base+0x1454>
   17240:	b	17140 <daemon@@Base+0x1380>
   17244:	mov	r0, r5
   17248:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1724c:	b	171c4 <daemon@@Base+0x1404>
   17250:	ldr	r5, [r1, #4]
   17254:	ldr	r3, [r5, #28]
   17258:	add	r3, r3, #2
   1725c:	ldr	r2, [r5, #32]
   17260:	cmp	r2, r3
   17264:	bcs	1727c <daemon@@Base+0x14bc>
   17268:	mov	r1, #2
   1726c:	mov	r0, r5
   17270:	bl	1c200 <argp_parse@@Base+0x2310>
   17274:	cmp	r0, #0
   17278:	beq	171d0 <daemon@@Base+0x1410>
   1727c:	ldr	r2, [r5, #28]
   17280:	movw	r3, #58020	; 0xe2a4
   17284:	movt	r3, #1
   17288:	ldrh	r3, [r3]
   1728c:	strh	r3, [r2]
   17290:	ldr	r3, [r5, #28]
   17294:	add	r3, r3, #2
   17298:	str	r3, [r5, #28]
   1729c:	b	171d0 <daemon@@Base+0x1410>
   172a0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   172a4:	strd	r6, [sp, #8]
   172a8:	strd	r8, [sp, #16]
   172ac:	strd	sl, [sp, #24]
   172b0:	str	lr, [sp, #32]
   172b4:	sub	sp, sp, #28
   172b8:	mov	r8, r0
   172bc:	str	r1, [sp, #12]
   172c0:	str	r2, [sp, #8]
   172c4:	mov	fp, r3
   172c8:	ldr	sl, [sp, #64]	; 0x40
   172cc:	ldr	r4, [sp, #68]	; 0x44
   172d0:	ldr	r6, [r0, #12]
   172d4:	ldr	r9, [r0, #16]
   172d8:	cmp	r6, #0
   172dc:	beq	17758 <daemon@@Base+0x1998>
   172e0:	mov	r5, r2
   172e4:	mov	r1, #11
   172e8:	mov	r0, r6
   172ec:	bl	11900 <strchr@plt>
   172f0:	cmp	r5, #0
   172f4:	beq	17334 <daemon@@Base+0x1574>
   172f8:	cmp	r0, #0
   172fc:	addne	r6, r0, #1
   17300:	beq	177a0 <daemon@@Base+0x19e0>
   17304:	ldr	r3, [r8, #20]
   17308:	cmp	r3, #0
   1730c:	beq	177a8 <daemon@@Base+0x19e8>
   17310:	ldr	r1, [sp, #12]
   17314:	mov	r0, r8
   17318:	bl	1aa44 <argp_parse@@Base+0xb54>
   1731c:	str	r0, [sp, #16]
   17320:	ldr	r3, [r8, #20]
   17324:	mov	r7, #0
   17328:	mov	r0, #2
   1732c:	movt	r0, #512	; 0x200
   17330:	b	17380 <daemon@@Base+0x15c0>
   17334:	cmp	r0, #0
   17338:	beq	177c4 <daemon@@Base+0x1a04>
   1733c:	sub	r7, r0, r6
   17340:	ldr	r3, [r8, #20]
   17344:	cmp	r3, #0
   17348:	beq	17568 <daemon@@Base+0x17a8>
   1734c:	cmp	r7, #0
   17350:	beq	17364 <daemon@@Base+0x15a4>
   17354:	mov	r1, r7
   17358:	mov	r0, r6
   1735c:	bl	116fc <strndup@plt>
   17360:	mov	r6, r0
   17364:	ldr	r1, [sp, #12]
   17368:	mov	r0, r8
   1736c:	bl	1aa44 <argp_parse@@Base+0xb54>
   17370:	str	r0, [sp, #16]
   17374:	ldr	r3, [r8, #20]
   17378:	mov	r0, #1
   1737c:	movt	r0, #512	; 0x200
   17380:	ldr	r2, [sp, #16]
   17384:	mov	r1, r6
   17388:	blx	r3
   1738c:	subs	r5, r0, #0
   17390:	beq	17674 <daemon@@Base+0x18b4>
   17394:	cmp	fp, #0
   17398:	bne	17578 <daemon@@Base+0x17b8>
   1739c:	cmp	r5, r6
   173a0:	movne	r3, #0
   173a4:	moveq	r3, #1
   173a8:	cmp	r7, #0
   173ac:	moveq	r3, #0
   173b0:	cmp	r3, #0
   173b4:	beq	175b8 <daemon@@Base+0x17f8>
   173b8:	ldr	r3, [r4, #28]
   173bc:	add	r3, r3, r7
   173c0:	ldr	r2, [r4, #32]
   173c4:	cmp	r2, r3
   173c8:	bcs	173e0 <daemon@@Base+0x1620>
   173cc:	mov	r1, r7
   173d0:	mov	r0, r4
   173d4:	bl	1c200 <argp_parse@@Base+0x2310>
   173d8:	cmp	r0, #0
   173dc:	beq	173fc <daemon@@Base+0x163c>
   173e0:	mov	r2, r7
   173e4:	mov	r1, r6
   173e8:	ldr	r0, [r4, #28]
   173ec:	bl	11714 <memcpy@plt>
   173f0:	ldr	r3, [r4, #28]
   173f4:	add	r3, r3, r7
   173f8:	str	r3, [r4, #28]
   173fc:	ldr	r3, [r4, #28]
   17400:	ldr	r2, [r4, #24]
   17404:	sub	r3, r3, r2
   17408:	ldr	r2, [r4, #16]
   1740c:	cmp	r3, r2
   17410:	bhi	17618 <daemon@@Base+0x1858>
   17414:	ldr	r3, [r4, #20]
   17418:	bic	r3, r3, r3, asr #31
   1741c:	ldr	r2, [r4, #4]
   17420:	cmp	r2, r3
   17424:	bcc	17624 <daemon@@Base+0x1864>
   17428:	cmp	r5, r6
   1742c:	moveq	r5, #1
   17430:	bne	17664 <daemon@@Base+0x18a4>
   17434:	cmp	r6, #0
   17438:	cmpne	r7, #0
   1743c:	beq	17454 <daemon@@Base+0x1694>
   17440:	ldr	r3, [r8, #20]
   17444:	cmp	r3, #0
   17448:	beq	174d8 <daemon@@Base+0x1718>
   1744c:	mov	r0, r6
   17450:	bl	1ae34 <argp_parse@@Base+0xf44>
   17454:	ldr	r3, [sp, #8]
   17458:	cmp	r3, #0
   1745c:	beq	174d8 <daemon@@Base+0x1718>
   17460:	ldr	r3, [r8, #20]
   17464:	cmp	r3, #0
   17468:	beq	174d8 <daemon@@Base+0x1718>
   1746c:	ldr	r2, [sp, #16]
   17470:	mov	r1, #0
   17474:	mov	r0, #4
   17478:	movt	r0, #512	; 0x200
   1747c:	blx	r3
   17480:	subs	r6, r0, #0
   17484:	beq	174d8 <daemon@@Base+0x1718>
   17488:	orrs	r3, fp, r5
   1748c:	bne	1767c <daemon@@Base+0x18bc>
   17490:	mov	r0, r6
   17494:	bl	118e8 <strlen@plt>
   17498:	subs	r5, r0, #0
   1749c:	bne	176bc <daemon@@Base+0x18fc>
   174a0:	mov	r0, r6
   174a4:	bl	1ae34 <argp_parse@@Base+0xf44>
   174a8:	ldr	r3, [r4, #28]
   174ac:	ldr	r2, [r4, #24]
   174b0:	sub	r3, r3, r2
   174b4:	ldr	r2, [r4, #16]
   174b8:	cmp	r3, r2
   174bc:	bhi	17704 <daemon@@Base+0x1944>
   174c0:	ldr	r3, [r4, #20]
   174c4:	bic	r3, r3, r3, asr #31
   174c8:	ldr	r2, [r4, #4]
   174cc:	cmp	r2, r3
   174d0:	movcs	r5, #1
   174d4:	bcc	17710 <daemon@@Base+0x1950>
   174d8:	cmp	r9, #0
   174dc:	beq	17548 <daemon@@Base+0x1788>
   174e0:	ldr	r0, [r9]
   174e4:	cmp	r0, #0
   174e8:	beq	17548 <daemon@@Base+0x1788>
   174ec:	clz	r6, sl
   174f0:	lsr	r6, r6, #5
   174f4:	cmp	sl, #0
   174f8:	cmpne	r5, #0
   174fc:	bne	17548 <daemon@@Base+0x1788>
   17500:	orrs	r3, fp, r5
   17504:	str	r4, [sp, #4]
   17508:	str	sl, [sp]
   1750c:	movne	r3, #1
   17510:	moveq	r3, #0
   17514:	ldr	r2, [sp, #8]
   17518:	ldr	r1, [sp, #12]
   1751c:	bl	172a0 <daemon@@Base+0x14e0>
   17520:	orr	r5, r5, r0
   17524:	ldr	r0, [r9, #16]
   17528:	cmp	r0, #0
   1752c:	beq	17548 <daemon@@Base+0x1788>
   17530:	add	r9, r9, #16
   17534:	cmp	r5, #0
   17538:	movne	r3, r6
   1753c:	moveq	r3, #1
   17540:	cmp	r3, #0
   17544:	bne	17500 <daemon@@Base+0x1740>
   17548:	mov	r0, r5
   1754c:	add	sp, sp, #28
   17550:	ldrd	r4, [sp]
   17554:	ldrd	r6, [sp, #8]
   17558:	ldrd	r8, [sp, #16]
   1755c:	ldrd	sl, [sp, #24]
   17560:	add	sp, sp, #32
   17564:	pop	{pc}		; (ldr pc, [sp], #4)
   17568:	mov	r5, r6
   1756c:	mov	r3, #0
   17570:	str	r3, [sp, #16]
   17574:	b	17394 <daemon@@Base+0x15d4>
   17578:	ldr	r2, [r4, #28]
   1757c:	ldr	r3, [r4, #32]
   17580:	cmp	r2, r3
   17584:	bcs	175a0 <daemon@@Base+0x17e0>
   17588:	ldr	r3, [r4, #28]
   1758c:	add	r2, r3, #1
   17590:	str	r2, [r4, #28]
   17594:	mov	r2, #10
   17598:	strb	r2, [r3]
   1759c:	b	1739c <daemon@@Base+0x15dc>
   175a0:	mov	r1, #1
   175a4:	mov	r0, r4
   175a8:	bl	1c200 <argp_parse@@Base+0x2310>
   175ac:	cmp	r0, #0
   175b0:	bne	17588 <daemon@@Base+0x17c8>
   175b4:	b	1739c <daemon@@Base+0x15dc>
   175b8:	mov	r0, r5
   175bc:	bl	118e8 <strlen@plt>
   175c0:	subs	r3, r0, #0
   175c4:	str	r3, [sp, #20]
   175c8:	beq	173fc <daemon@@Base+0x163c>
   175cc:	ldr	r3, [r4, #28]
   175d0:	mov	r1, r0
   175d4:	add	r3, r3, r0
   175d8:	ldr	r2, [r4, #32]
   175dc:	cmp	r2, r3
   175e0:	bcs	175f4 <daemon@@Base+0x1834>
   175e4:	mov	r0, r4
   175e8:	bl	1c200 <argp_parse@@Base+0x2310>
   175ec:	cmp	r0, #0
   175f0:	beq	173fc <daemon@@Base+0x163c>
   175f4:	ldr	r2, [sp, #20]
   175f8:	mov	r1, r5
   175fc:	ldr	r0, [r4, #28]
   17600:	bl	11714 <memcpy@plt>
   17604:	ldr	r3, [r4, #28]
   17608:	ldr	r2, [sp, #20]
   1760c:	add	r3, r3, r2
   17610:	str	r3, [r4, #28]
   17614:	b	173fc <daemon@@Base+0x163c>
   17618:	mov	r0, r4
   1761c:	bl	1bc88 <argp_parse@@Base+0x1d98>
   17620:	b	17414 <daemon@@Base+0x1654>
   17624:	ldr	r2, [r4, #28]
   17628:	ldr	r3, [r4, #32]
   1762c:	cmp	r2, r3
   17630:	bcs	1764c <daemon@@Base+0x188c>
   17634:	ldr	r3, [r4, #28]
   17638:	add	r2, r3, #1
   1763c:	str	r2, [r4, #28]
   17640:	mov	r2, #10
   17644:	strb	r2, [r3]
   17648:	b	17428 <daemon@@Base+0x1668>
   1764c:	mov	r1, #1
   17650:	mov	r0, r4
   17654:	bl	1c200 <argp_parse@@Base+0x2310>
   17658:	cmp	r0, #0
   1765c:	bne	17634 <daemon@@Base+0x1874>
   17660:	b	17428 <daemon@@Base+0x1668>
   17664:	mov	r0, r5
   17668:	bl	1ae34 <argp_parse@@Base+0xf44>
   1766c:	mov	r5, #1
   17670:	b	17434 <daemon@@Base+0x1674>
   17674:	mov	r5, #0
   17678:	b	17434 <daemon@@Base+0x1674>
   1767c:	ldr	r2, [r4, #28]
   17680:	ldr	r3, [r4, #32]
   17684:	cmp	r2, r3
   17688:	bcs	176a4 <daemon@@Base+0x18e4>
   1768c:	ldr	r3, [r4, #28]
   17690:	add	r2, r3, #1
   17694:	str	r2, [r4, #28]
   17698:	mov	r2, #10
   1769c:	strb	r2, [r3]
   176a0:	b	17490 <daemon@@Base+0x16d0>
   176a4:	mov	r1, #1
   176a8:	mov	r0, r4
   176ac:	bl	1c200 <argp_parse@@Base+0x2310>
   176b0:	cmp	r0, #0
   176b4:	bne	1768c <daemon@@Base+0x18cc>
   176b8:	b	17490 <daemon@@Base+0x16d0>
   176bc:	ldr	r3, [r4, #28]
   176c0:	add	r3, r3, r5
   176c4:	ldr	r2, [r4, #32]
   176c8:	cmp	r2, r3
   176cc:	bcs	176e4 <daemon@@Base+0x1924>
   176d0:	mov	r1, r5
   176d4:	mov	r0, r4
   176d8:	bl	1c200 <argp_parse@@Base+0x2310>
   176dc:	cmp	r0, #0
   176e0:	beq	174a0 <daemon@@Base+0x16e0>
   176e4:	mov	r2, r5
   176e8:	mov	r1, r6
   176ec:	ldr	r0, [r4, #28]
   176f0:	bl	11714 <memcpy@plt>
   176f4:	ldr	r3, [r4, #28]
   176f8:	add	r5, r3, r5
   176fc:	str	r5, [r4, #28]
   17700:	b	174a0 <daemon@@Base+0x16e0>
   17704:	mov	r0, r4
   17708:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1770c:	b	174c0 <daemon@@Base+0x1700>
   17710:	ldr	r2, [r4, #28]
   17714:	ldr	r3, [r4, #32]
   17718:	cmp	r2, r3
   1771c:	bcs	1773c <daemon@@Base+0x197c>
   17720:	ldr	r3, [r4, #28]
   17724:	add	r2, r3, #1
   17728:	str	r2, [r4, #28]
   1772c:	mov	r2, #10
   17730:	strb	r2, [r3]
   17734:	mov	r5, #1
   17738:	b	174d8 <daemon@@Base+0x1718>
   1773c:	mov	r1, #1
   17740:	mov	r0, r4
   17744:	bl	1c200 <argp_parse@@Base+0x2310>
   17748:	cmp	r0, #0
   1774c:	bne	17720 <daemon@@Base+0x1960>
   17750:	mov	r5, #1
   17754:	b	174d8 <daemon@@Base+0x1718>
   17758:	ldr	r3, [r0, #20]
   1775c:	cmp	r3, #0
   17760:	moveq	r5, r6
   17764:	beq	177ac <daemon@@Base+0x19ec>
   17768:	ldr	r1, [sp, #12]
   1776c:	mov	r0, r8
   17770:	bl	1aa44 <argp_parse@@Base+0xb54>
   17774:	str	r0, [sp, #16]
   17778:	ldr	r3, [r8, #20]
   1777c:	mov	r7, #0
   17780:	mov	r0, #2
   17784:	movt	r0, #512	; 0x200
   17788:	mov	r2, #1
   1778c:	movt	r2, #512	; 0x200
   17790:	ldr	r1, [sp, #8]
   17794:	cmp	r1, r7
   17798:	moveq	r0, r2
   1779c:	b	17380 <daemon@@Base+0x15c0>
   177a0:	mov	r6, r0
   177a4:	b	17304 <daemon@@Base+0x1544>
   177a8:	mov	r5, r6
   177ac:	cmp	r5, #0
   177b0:	streq	r5, [sp, #16]
   177b4:	beq	17454 <daemon@@Base+0x1694>
   177b8:	mov	r7, #0
   177bc:	str	r7, [sp, #16]
   177c0:	b	17394 <daemon@@Base+0x15d4>
   177c4:	ldr	r3, [r8, #20]
   177c8:	cmp	r3, #0
   177cc:	moveq	r5, r6
   177d0:	beq	177ac <daemon@@Base+0x19ec>
   177d4:	ldr	r1, [sp, #12]
   177d8:	mov	r0, r8
   177dc:	bl	1aa44 <argp_parse@@Base+0xb54>
   177e0:	str	r0, [sp, #16]
   177e4:	ldr	r3, [r8, #20]
   177e8:	mov	r7, #0
   177ec:	mov	r0, #1
   177f0:	movt	r0, #512	; 0x200
   177f4:	b	17380 <daemon@@Base+0x15c0>
   177f8:	ldr	r3, [r0, #12]
   177fc:	ldr	r2, [r1, #12]
   17800:	cmp	r3, r2
   17804:	beq	17874 <daemon@@Base+0x1ab4>
   17808:	strd	r4, [sp, #-16]!
   1780c:	str	r6, [sp, #8]
   17810:	str	lr, [sp, #12]
   17814:	mov	r5, r1
   17818:	mov	r4, r0
   1781c:	mov	r1, r2
   17820:	mov	r0, r3
   17824:	bl	177f8 <daemon@@Base+0x1a38>
   17828:	subs	r3, r0, #0
   1782c:	bne	17860 <daemon@@Base+0x1aa0>
   17830:	ldr	r0, [r4, #8]
   17834:	ldr	r3, [r5, #8]
   17838:	mvn	r2, r3
   1783c:	lsr	r2, r2, #31
   17840:	cmp	r2, r0, lsr #31
   17844:	subne	r3, r0, r3
   17848:	subeq	r3, r3, r0
   1784c:	cmp	r3, #0
   17850:	bne	17860 <daemon@@Base+0x1aa0>
   17854:	ldr	r3, [r5, #4]
   17858:	ldr	r0, [r4, #4]
   1785c:	sub	r3, r3, r0
   17860:	mov	r0, r3
   17864:	ldrd	r4, [sp]
   17868:	ldr	r6, [sp, #8]
   1786c:	add	sp, sp, #12
   17870:	pop	{pc}		; (ldr pc, [sp], #4)
   17874:	ldr	r2, [r0, #8]
   17878:	ldr	r3, [r1, #8]
   1787c:	mvn	ip, r3
   17880:	lsr	ip, ip, #31
   17884:	cmp	ip, r2, lsr #31
   17888:	subne	r3, r2, r3
   1788c:	subeq	r3, r3, r2
   17890:	cmp	r3, #0
   17894:	bne	178a4 <daemon@@Base+0x1ae4>
   17898:	ldr	r3, [r1, #4]
   1789c:	ldr	r0, [r0, #4]
   178a0:	sub	r3, r3, r0
   178a4:	mov	r0, r3
   178a8:	bx	lr
   178ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   178b0:	strd	r6, [sp, #8]
   178b4:	str	r8, [sp, #16]
   178b8:	str	lr, [sp, #20]
   178bc:	sub	sp, sp, #8
   178c0:	ldr	lr, [r0, #16]
   178c4:	cmp	lr, #0
   178c8:	movne	r3, lr
   178cc:	bne	178dc <daemon@@Base+0x1b1c>
   178d0:	ldr	ip, [r0, #12]
   178d4:	b	178ec <daemon@@Base+0x1b2c>
   178d8:	mov	r3, r2
   178dc:	ldr	r2, [r3, #12]
   178e0:	cmp	r2, #0
   178e4:	bne	178d8 <daemon@@Base+0x1b18>
   178e8:	ldr	ip, [r3, #8]
   178ec:	ldr	r5, [r1, #16]
   178f0:	cmp	r5, #0
   178f4:	movne	r3, r5
   178f8:	bne	17908 <daemon@@Base+0x1b48>
   178fc:	ldr	r4, [r1, #12]
   17900:	b	17918 <daemon@@Base+0x1b58>
   17904:	mov	r3, r2
   17908:	ldr	r2, [r3, #12]
   1790c:	cmp	r2, #0
   17910:	bne	17904 <daemon@@Base+0x1b44>
   17914:	ldr	r4, [r3, #8]
   17918:	mvn	r3, r4
   1791c:	lsr	r3, r3, #31
   17920:	cmp	r3, ip, lsr #31
   17924:	subne	r4, ip, r4
   17928:	subeq	r4, r4, ip
   1792c:	cmp	r4, #0
   17930:	bne	17a70 <daemon@@Base+0x1cb0>
   17934:	adds	r4, r5, #0
   17938:	movne	r4, #1
   1793c:	cmp	lr, #0
   17940:	rsbeq	r4, r4, #0
   17944:	rsbne	r4, r4, #1
   17948:	cmp	r4, #0
   1794c:	bne	17a70 <daemon@@Base+0x1cb0>
   17950:	mov	r7, r1
   17954:	mov	r6, r0
   17958:	cmp	lr, #0
   1795c:	beq	179dc <daemon@@Base+0x1c1c>
   17960:	ldr	r1, [lr, #20]
   17964:	ldr	r2, [r5, #20]
   17968:	cmp	r1, r2
   1796c:	ble	17998 <daemon@@Base+0x1bd8>
   17970:	ldr	lr, [lr, #12]
   17974:	ldr	r3, [lr, #20]
   17978:	cmp	r2, r3
   1797c:	blt	17970 <daemon@@Base+0x1bb0>
   17980:	mov	r1, r5
   17984:	mov	r0, lr
   17988:	bl	177f8 <daemon@@Base+0x1a38>
   1798c:	subs	r4, r0, #0
   17990:	moveq	r4, #1
   17994:	b	17a70 <daemon@@Base+0x1cb0>
   17998:	cmp	r1, r2
   1799c:	bge	179c8 <daemon@@Base+0x1c08>
   179a0:	ldr	r5, [r5, #12]
   179a4:	ldr	r3, [r5, #20]
   179a8:	cmp	r1, r3
   179ac:	blt	179a0 <daemon@@Base+0x1be0>
   179b0:	mov	r1, r5
   179b4:	mov	r0, lr
   179b8:	bl	177f8 <daemon@@Base+0x1a38>
   179bc:	subs	r4, r0, #0
   179c0:	mvneq	r4, #0
   179c4:	b	17a70 <daemon@@Base+0x1cb0>
   179c8:	mov	r1, r5
   179cc:	mov	r0, lr
   179d0:	bl	177f8 <daemon@@Base+0x1a38>
   179d4:	subs	r4, r0, #0
   179d8:	bne	17a70 <daemon@@Base+0x1cb0>
   179dc:	ldr	r3, [r6, #12]
   179e0:	ldr	r4, [r7, #12]
   179e4:	mvn	r2, r4
   179e8:	lsr	r2, r2, #31
   179ec:	cmp	r2, r3, lsr #31
   179f0:	subne	r4, r3, r4
   179f4:	subeq	r4, r4, r3
   179f8:	cmp	r4, #0
   179fc:	bne	17a70 <daemon@@Base+0x1cb0>
   17a00:	mov	r0, r6
   17a04:	bl	16470 <daemon@@Base+0x6b0>
   17a08:	mov	r5, r0
   17a0c:	str	r0, [sp]
   17a10:	mov	r0, r7
   17a14:	bl	16470 <daemon@@Base+0x6b0>
   17a18:	str	r0, [sp, #4]
   17a1c:	ldr	r3, [r6]
   17a20:	ldr	r0, [r3, #12]
   17a24:	ubfx	r0, r0, #3, #1
   17a28:	cmp	r5, #0
   17a2c:	moveq	r0, #0
   17a30:	cmp	r0, #0
   17a34:	bne	17a8c <daemon@@Base+0x1ccc>
   17a38:	ldr	r3, [r7]
   17a3c:	ldr	r3, [r3, #12]
   17a40:	tst	r3, #8
   17a44:	beq	17ac4 <daemon@@Base+0x1d04>
   17a48:	ldr	r3, [sp, #4]
   17a4c:	cmp	r3, #0
   17a50:	beq	17ac4 <daemon@@Base+0x1d04>
   17a54:	add	r0, sp, #4
   17a58:	bl	1650c <daemon@@Base+0x74c>
   17a5c:	adds	r3, r0, #0
   17a60:	movne	r3, #1
   17a64:	mov	r0, r4
   17a68:	subs	r4, r0, r3
   17a6c:	beq	17ac4 <daemon@@Base+0x1d04>
   17a70:	mov	r0, r4
   17a74:	add	sp, sp, #8
   17a78:	ldrd	r4, [sp]
   17a7c:	ldrd	r6, [sp, #8]
   17a80:	ldr	r8, [sp, #16]
   17a84:	add	sp, sp, #20
   17a88:	pop	{pc}		; (ldr pc, [sp], #4)
   17a8c:	mov	r0, sp
   17a90:	bl	1650c <daemon@@Base+0x74c>
   17a94:	adds	r0, r0, #0
   17a98:	movne	r0, #1
   17a9c:	ldr	r3, [r7]
   17aa0:	ldr	r3, [r3, #12]
   17aa4:	ands	r3, r3, #8
   17aa8:	beq	17a68 <daemon@@Base+0x1ca8>
   17aac:	ldr	r3, [sp, #4]
   17ab0:	cmp	r3, #0
   17ab4:	moveq	r3, r4
   17ab8:	beq	17a68 <daemon@@Base+0x1ca8>
   17abc:	mov	r4, r0
   17ac0:	b	17a54 <daemon@@Base+0x1c94>
   17ac4:	ldr	r2, [r6, #20]
   17ac8:	movw	r4, #27412	; 0x6b14
   17acc:	movt	r4, #1
   17ad0:	mov	r3, #0
   17ad4:	ldr	r2, [r2, #24]
   17ad8:	mov	r1, r4
   17adc:	mov	r0, r6
   17ae0:	bl	1677c <daemon@@Base+0x9bc>
   17ae4:	mov	r5, r0
   17ae8:	uxtb	r8, r0
   17aec:	ldr	r2, [r7, #20]
   17af0:	mov	r3, #0
   17af4:	ldr	r2, [r2, #24]
   17af8:	mov	r1, r4
   17afc:	mov	r0, r7
   17b00:	bl	1677c <daemon@@Base+0x9bc>
   17b04:	uxtb	r7, r0
   17b08:	cmp	r8, #0
   17b0c:	movne	r5, r8
   17b10:	bne	17b24 <daemon@@Base+0x1d64>
   17b14:	ldr	r3, [sp]
   17b18:	cmp	r3, #0
   17b1c:	ldrbne	r5, [r3]
   17b20:	moveq	r5, #0
   17b24:	cmp	r7, #0
   17b28:	uxtbne	r6, r0
   17b2c:	bne	17b40 <daemon@@Base+0x1d80>
   17b30:	ldr	r3, [sp, #4]
   17b34:	cmp	r3, #0
   17b38:	ldrbne	r6, [r3]
   17b3c:	moveq	r6, #0
   17b40:	bl	11894 <__ctype_tolower_loc@plt>
   17b44:	ldr	r3, [r0]
   17b48:	ldr	r4, [r3, r5, lsl #2]
   17b4c:	ldr	r3, [r3, r6, lsl #2]
   17b50:	subs	r4, r4, r3
   17b54:	bne	17a70 <daemon@@Base+0x1cb0>
   17b58:	subs	r4, r6, r5
   17b5c:	bne	17a70 <daemon@@Base+0x1cb0>
   17b60:	adds	r4, r7, #0
   17b64:	movne	r4, #1
   17b68:	cmp	r8, #0
   17b6c:	rsbeq	r4, r4, #0
   17b70:	rsbne	r4, r4, #1
   17b74:	cmp	r4, #0
   17b78:	bne	17a70 <daemon@@Base+0x1cb0>
   17b7c:	cmp	r8, #0
   17b80:	bne	17a70 <daemon@@Base+0x1cb0>
   17b84:	ldr	r0, [sp]
   17b88:	ldr	r1, [sp, #4]
   17b8c:	adds	r4, r1, #0
   17b90:	movne	r4, #1
   17b94:	cmp	r0, #0
   17b98:	rsbeq	r4, r4, #0
   17b9c:	rsbne	r4, r4, #1
   17ba0:	cmp	r4, #0
   17ba4:	bne	17a70 <daemon@@Base+0x1cb0>
   17ba8:	cmp	r0, #0
   17bac:	beq	17a70 <daemon@@Base+0x1cb0>
   17bb0:	bl	117c8 <strcasecmp@plt>
   17bb4:	mov	r4, r0
   17bb8:	b	17a70 <daemon@@Base+0x1cb0>
   17bbc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17bc0:	strd	r6, [sp, #8]
   17bc4:	strd	r8, [sp, #16]
   17bc8:	strd	sl, [sp, #24]
   17bcc:	str	lr, [sp, #32]
   17bd0:	sub	sp, sp, #52	; 0x34
   17bd4:	str	r0, [sp, #12]
   17bd8:	str	r1, [sp, #4]
   17bdc:	ldr	fp, [r0, #16]
   17be0:	ldr	r4, [r0]
   17be4:	mov	r0, #16
   17be8:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17bec:	subs	sl, r0, #0
   17bf0:	beq	17c20 <daemon@@Base+0x1e60>
   17bf4:	mov	r3, #0
   17bf8:	str	r3, [sl, #4]
   17bfc:	str	r3, [sl, #12]
   17c00:	cmp	r4, r3
   17c04:	beq	17e2c <daemon@@Base+0x206c>
   17c08:	ldr	r3, [r4, #12]
   17c0c:	tst	r3, #4
   17c10:	bne	17c40 <daemon@@Base+0x1e80>
   17c14:	add	r5, r4, #24
   17c18:	mov	r6, #0
   17c1c:	b	17c64 <daemon@@Base+0x1ea4>
   17c20:	movw	r3, #57784	; 0xe1b8
   17c24:	movt	r3, #1
   17c28:	movw	r2, #450	; 0x1c2
   17c2c:	movw	r1, #58024	; 0xe2a8
   17c30:	movt	r1, #1
   17c34:	movw	r0, #58036	; 0xe2b4
   17c38:	movt	r0, #1
   17c3c:	bl	11ae0 <__assert_fail@plt>
   17c40:	movw	r3, #57784	; 0xe1b8
   17c44:	movt	r3, #1
   17c48:	mov	r2, #460	; 0x1cc
   17c4c:	movw	r1, #58024	; 0xe2a8
   17c50:	movt	r1, #1
   17c54:	movw	r0, #58040	; 0xe2b8
   17c58:	movt	r0, #1
   17c5c:	bl	11ae0 <__assert_fail@plt>
   17c60:	add	r5, r5, #24
   17c64:	mov	r3, r5
   17c68:	ldr	r2, [r5, #-20]	; 0xffffffec
   17c6c:	cmp	r2, #0
   17c70:	bne	17c80 <daemon@@Base+0x1ec0>
   17c74:	ldr	r2, [r5, #-24]	; 0xffffffe8
   17c78:	cmp	r2, #0
   17c7c:	beq	17cd0 <daemon@@Base+0x1f10>
   17c80:	ldr	r2, [r3, #-12]
   17c84:	tst	r2, #4
   17c88:	bne	17c98 <daemon@@Base+0x1ed8>
   17c8c:	ldr	r2, [sl, #4]
   17c90:	add	r2, r2, #1
   17c94:	str	r2, [sl, #4]
   17c98:	ldr	r2, [r3, #-12]
   17c9c:	tst	r2, #8
   17ca0:	bne	17c60 <daemon@@Base+0x1ea0>
   17ca4:	ldr	r7, [r3, #-20]	; 0xffffffec
   17ca8:	sub	r3, r7, #1
   17cac:	cmp	r3, #254	; 0xfe
   17cb0:	bhi	17c60 <daemon@@Base+0x1ea0>
   17cb4:	bl	118c4 <__ctype_b_loc@plt>
   17cb8:	ldr	r3, [r0]
   17cbc:	lsl	r7, r7, #1
   17cc0:	ldrh	r3, [r3, r7]
   17cc4:	tst	r3, #16384	; 0x4000
   17cc8:	addne	r6, r6, #1
   17ccc:	b	17c60 <daemon@@Base+0x1ea0>
   17cd0:	ldr	r2, [r5, #-8]
   17cd4:	cmp	r2, #0
   17cd8:	bne	17c80 <daemon@@Base+0x1ec0>
   17cdc:	ldr	r9, [r5, #-4]
   17ce0:	cmp	r9, #0
   17ce4:	bne	17c80 <daemon@@Base+0x1ec0>
   17ce8:	ldr	r0, [sl, #4]
   17cec:	rsb	r0, r0, r0, lsl #3
   17cf0:	lsl	r0, r0, #2
   17cf4:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17cf8:	str	r0, [sl]
   17cfc:	add	r0, r6, #1
   17d00:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17d04:	mov	r5, r0
   17d08:	str	r0, [sl, #8]
   17d0c:	ldr	r7, [sl]
   17d10:	cmp	r0, #0
   17d14:	cmpne	r7, #0
   17d18:	beq	17d40 <daemon@@Base+0x1f80>
   17d1c:	movw	r3, #37449	; 0x9249
   17d20:	movt	r3, #2340	; 0x924
   17d24:	ldr	r2, [sl, #4]
   17d28:	cmp	r2, r3
   17d2c:	bhi	17d60 <daemon@@Base+0x1fa0>
   17d30:	add	r7, r7, #28
   17d34:	str	fp, [sp, #8]
   17d38:	ldr	fp, [sp, #12]
   17d3c:	b	17dac <daemon@@Base+0x1fec>
   17d40:	movw	r3, #57784	; 0xe1b8
   17d44:	movt	r3, #1
   17d48:	movw	r2, #474	; 0x1da
   17d4c:	movw	r1, #58024	; 0xe2a8
   17d50:	movt	r1, #1
   17d54:	movw	r0, #58056	; 0xe2c8
   17d58:	movt	r0, #1
   17d5c:	bl	11ae0 <__assert_fail@plt>
   17d60:	movw	r3, #57784	; 0xe1b8
   17d64:	movt	r3, #1
   17d68:	mov	r2, #476	; 0x1dc
   17d6c:	movw	r1, #58024	; 0xe2a8
   17d70:	movt	r1, #1
   17d74:	movw	r0, #58092	; 0xe2ec
   17d78:	movt	r0, #1
   17d7c:	bl	11ae0 <__assert_fail@plt>
   17d80:	ldr	r3, [r4, #4]
   17d84:	cmp	r3, #0
   17d88:	addeq	r9, r9, #1
   17d8c:	b	17df4 <daemon@@Base+0x2034>
   17d90:	ldr	r3, [r4, #16]
   17d94:	cmp	r3, #0
   17d98:	bne	181cc <daemon@@Base+0x240c>
   17d9c:	ldr	r3, [r4, #20]
   17da0:	cmp	r3, #0
   17da4:	bne	181cc <daemon@@Base+0x240c>
   17da8:	add	r7, r7, #28
   17dac:	ldr	r3, [r4, #4]
   17db0:	cmp	r3, #0
   17db4:	bne	17dc4 <daemon@@Base+0x2004>
   17db8:	ldr	r3, [r4]
   17dbc:	cmp	r3, #0
   17dc0:	beq	17e08 <daemon@@Base+0x2048>
   17dc4:	mov	r8, r7
   17dc8:	str	r4, [r7, #-28]	; 0xffffffe4
   17dcc:	mov	r3, #0
   17dd0:	str	r3, [r7, #-24]	; 0xffffffe8
   17dd4:	str	r5, [r7, #-20]	; 0xffffffec
   17dd8:	ldr	r3, [r4, #20]
   17ddc:	cmp	r3, #0
   17de0:	movne	r9, r3
   17de4:	bne	17df4 <daemon@@Base+0x2034>
   17de8:	ldr	r3, [r4]
   17dec:	cmp	r3, #0
   17df0:	beq	17d80 <daemon@@Base+0x1fc0>
   17df4:	str	r9, [r8, #-16]
   17df8:	ldr	r3, [sp, #4]
   17dfc:	str	r3, [r8, #-12]
   17e00:	str	fp, [r8, #-8]
   17e04:	b	181d8 <daemon@@Base+0x2418>
   17e08:	ldr	r3, [r4, #16]
   17e0c:	cmp	r3, #0
   17e10:	bne	17dc4 <daemon@@Base+0x2004>
   17e14:	ldr	r3, [r4, #20]
   17e18:	cmp	r3, #0
   17e1c:	bne	17dc4 <daemon@@Base+0x2004>
   17e20:	ldr	fp, [sp, #8]
   17e24:	mov	r3, #0
   17e28:	strb	r3, [r5]
   17e2c:	cmp	fp, #0
   17e30:	beq	18250 <daemon@@Base+0x2490>
   17e34:	ldr	r3, [fp]
   17e38:	cmp	r3, #0
   17e3c:	beq	18250 <daemon@@Base+0x2490>
   17e40:	movw	r3, #37449	; 0x9249
   17e44:	movt	r3, #2340	; 0x924
   17e48:	str	r3, [sp, #32]
   17e4c:	b	17ec0 <daemon@@Base+0x2100>
   17e50:	ldr	r1, [sp, #4]
   17e54:	b	17f38 <daemon@@Base+0x2178>
   17e58:	mov	r3, r2
   17e5c:	ldr	r2, [r3, #24]
   17e60:	cmp	r2, #0
   17e64:	bne	17e58 <daemon@@Base+0x2098>
   17e68:	add	r3, r3, #24
   17e6c:	ldr	r2, [r5, #12]
   17e70:	str	r2, [r3]
   17e74:	mov	r1, #0
   17e78:	str	r1, [r5, #12]
   17e7c:	ldr	r3, [r5, #4]
   17e80:	cmp	r3, r1
   17e84:	beq	17eac <daemon@@Base+0x20ec>
   17e88:	ldr	r2, [sl, #4]
   17e8c:	cmp	r2, r1
   17e90:	bne	17f58 <daemon@@Base+0x2198>
   17e94:	str	r3, [sl, #4]
   17e98:	ldr	r3, [r5]
   17e9c:	str	r3, [sl]
   17ea0:	ldr	r3, [r5, #8]
   17ea4:	str	r3, [sl, #8]
   17ea8:	str	r1, [r5, #4]
   17eac:	mov	r0, r5
   17eb0:	bl	16594 <daemon@@Base+0x7d4>
   17eb4:	ldr	r3, [fp, #16]!
   17eb8:	cmp	r3, #0
   17ebc:	beq	18250 <daemon@@Base+0x2490>
   17ec0:	mov	r5, fp
   17ec4:	ldr	r6, [fp, #12]
   17ec8:	cmp	r6, #0
   17ecc:	bne	17edc <daemon@@Base+0x211c>
   17ed0:	ldr	r3, [fp, #8]
   17ed4:	cmp	r3, #0
   17ed8:	beq	17e50 <daemon@@Base+0x2090>
   17edc:	ldr	r7, [r5, #8]
   17ee0:	ldr	r8, [sp, #12]
   17ee4:	ldr	r4, [r8, #16]
   17ee8:	mov	r0, #28
   17eec:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17ef0:	subs	r1, r0, #0
   17ef4:	beq	17f38 <daemon@@Base+0x2178>
   17ef8:	str	r6, [r1, #8]
   17efc:	str	r7, [r1]
   17f00:	sub	r4, r5, r4
   17f04:	asr	r4, r4, #4
   17f08:	str	r4, [r1, #4]
   17f0c:	ldr	r3, [sp, #4]
   17f10:	str	r3, [r1, #12]
   17f14:	str	r8, [r1, #16]
   17f18:	cmp	r3, #0
   17f1c:	ldrne	r3, [r3, #20]
   17f20:	addne	r3, r3, #1
   17f24:	moveq	r3, #0
   17f28:	str	r3, [r1, #20]
   17f2c:	ldr	r3, [sl, #12]
   17f30:	str	r3, [r1, #24]
   17f34:	str	r1, [sl, #12]
   17f38:	ldr	r0, [r5]
   17f3c:	bl	17bbc <daemon@@Base+0x1dfc>
   17f40:	mov	r5, r0
   17f44:	ldr	r3, [sl, #12]
   17f48:	cmp	r3, #0
   17f4c:	bne	17e5c <daemon@@Base+0x209c>
   17f50:	add	r3, sl, #12
   17f54:	b	17e6c <daemon@@Base+0x20ac>
   17f58:	add	r3, r3, r2
   17f5c:	str	r3, [sp, #24]
   17f60:	rsb	r0, r3, r3, lsl #3
   17f64:	lsl	r0, r0, #2
   17f68:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17f6c:	mov	r4, r0
   17f70:	str	r0, [sp, #20]
   17f74:	ldr	r0, [sl, #8]
   17f78:	bl	118e8 <strlen@plt>
   17f7c:	mov	r7, r0
   17f80:	ldr	r0, [r5, #8]
   17f84:	bl	118e8 <strlen@plt>
   17f88:	add	r0, r7, r0
   17f8c:	add	r0, r0, #1
   17f90:	bl	1bb58 <argp_parse@@Base+0x1c68>
   17f94:	mov	r9, r0
   17f98:	cmp	r4, #0
   17f9c:	cmpne	r0, #0
   17fa0:	beq	1806c <daemon@@Base+0x22ac>
   17fa4:	ldr	r3, [sp, #24]
   17fa8:	ldr	r2, [sp, #32]
   17fac:	cmp	r3, r2
   17fb0:	bhi	18088 <daemon@@Base+0x22c8>
   17fb4:	ldr	r1, [sl]
   17fb8:	str	r1, [sp, #28]
   17fbc:	ldr	r4, [sl, #4]
   17fc0:	rsb	r8, r4, r4, lsl #3
   17fc4:	lsl	r8, r8, #2
   17fc8:	mov	r2, r8
   17fcc:	ldr	r0, [sp, #20]
   17fd0:	bl	118ac <mempcpy@plt>
   17fd4:	ldr	r3, [r5, #4]
   17fd8:	str	r3, [sp, #16]
   17fdc:	rsb	r2, r3, r3, lsl #3
   17fe0:	lsl	r2, r2, #2
   17fe4:	ldr	r1, [r5]
   17fe8:	bl	11714 <memcpy@plt>
   17fec:	ldr	r6, [sl, #8]
   17ff0:	mov	r2, r7
   17ff4:	mov	r1, r6
   17ff8:	mov	r0, r9
   17ffc:	bl	11714 <memcpy@plt>
   18000:	cmp	r4, #0
   18004:	beq	180a4 <daemon@@Base+0x22e4>
   18008:	ldr	r2, [sp, #20]
   1800c:	ldr	r3, [r2, #8]
   18010:	sub	r3, r3, r6
   18014:	add	r3, r9, r3
   18018:	str	r3, [r2, #8]
   1801c:	add	r2, r2, #28
   18020:	subs	r4, r4, #1
   18024:	bne	1800c <daemon@@Base+0x224c>
   18028:	ldr	r3, [sp, #20]
   1802c:	add	r4, r3, r8
   18030:	add	r3, r9, r7
   18034:	str	r3, [sp, #8]
   18038:	ldr	r1, [r5, #8]
   1803c:	ldr	r8, [sp, #16]
   18040:	cmp	r8, #0
   18044:	beq	18148 <daemon@@Base+0x2388>
   18048:	add	r4, r4, #28
   1804c:	sub	r2, r3, #1
   18050:	str	r2, [sp, #16]
   18054:	str	r5, [sp, #36]	; 0x24
   18058:	str	fp, [sp, #40]	; 0x28
   1805c:	mov	fp, r3
   18060:	str	sl, [sp, #44]	; 0x2c
   18064:	mov	sl, r1
   18068:	b	180f0 <daemon@@Base+0x2330>
   1806c:	ldr	r3, [pc, #508]	; 18270 <daemon@@Base+0x24b0>
   18070:	movw	r2, #970	; 0x3ca
   18074:	movw	r1, #58024	; 0xe2a8
   18078:	movt	r1, #1
   1807c:	movw	r0, #58152	; 0xe328
   18080:	movt	r0, #1
   18084:	bl	11ae0 <__assert_fail@plt>
   18088:	ldr	r3, [pc, #480]	; 18270 <daemon@@Base+0x24b0>
   1808c:	mov	r2, #972	; 0x3cc
   18090:	movw	r1, #58024	; 0xe2a8
   18094:	movt	r1, #1
   18098:	movw	r0, #58180	; 0xe344
   1809c:	movt	r0, #1
   180a0:	bl	11ae0 <__assert_fail@plt>
   180a4:	ldr	r4, [sp, #20]
   180a8:	b	18030 <daemon@@Base+0x2270>
   180ac:	ldr	r2, [sp, #8]
   180b0:	cmp	r9, r2
   180b4:	bcs	18150 <daemon@@Base+0x2390>
   180b8:	ldrb	r2, [r9]
   180bc:	cmp	r2, r3
   180c0:	beq	18154 <daemon@@Base+0x2394>
   180c4:	mov	r2, r9
   180c8:	ldr	r1, [sp, #16]
   180cc:	cmp	r1, r2
   180d0:	beq	18150 <daemon@@Base+0x2390>
   180d4:	ldrb	r1, [r2, #1]!
   180d8:	cmp	r1, r3
   180dc:	bne	180c8 <daemon@@Base+0x2308>
   180e0:	b	18154 <daemon@@Base+0x2394>
   180e4:	add	r4, r4, #28
   180e8:	subs	r8, r8, #1
   180ec:	beq	18108 <daemon@@Base+0x2348>
   180f0:	str	fp, [r4, #-20]	; 0xffffffec
   180f4:	ldr	r5, [r4, #-24]	; 0xffffffe8
   180f8:	ldr	r6, [r4, #-28]	; 0xffffffe4
   180fc:	cmp	r5, #0
   18100:	bne	18174 <daemon@@Base+0x23b4>
   18104:	b	180e4 <daemon@@Base+0x2324>
   18108:	ldr	r5, [sp, #36]	; 0x24
   1810c:	mov	r3, fp
   18110:	ldr	fp, [sp, #40]	; 0x28
   18114:	ldr	sl, [sp, #44]	; 0x2c
   18118:	mov	r2, #0
   1811c:	strb	r2, [r3]
   18120:	ldr	r0, [sp, #28]
   18124:	bl	1ae34 <argp_parse@@Base+0xf44>
   18128:	ldr	r0, [sl, #8]
   1812c:	bl	1ae34 <argp_parse@@Base+0xf44>
   18130:	ldr	r3, [sp, #20]
   18134:	str	r3, [sl]
   18138:	ldr	r3, [sp, #24]
   1813c:	str	r3, [sl, #4]
   18140:	str	r9, [sl, #8]
   18144:	b	17eac <daemon@@Base+0x20ec>
   18148:	ldr	r3, [sp, #8]
   1814c:	b	18118 <daemon@@Base+0x2358>
   18150:	strb	r3, [fp], #1
   18154:	add	sl, sl, #1
   18158:	b	18168 <daemon@@Base+0x23a8>
   1815c:	ldrb	r3, [sl]
   18160:	cmp	r3, r7
   18164:	beq	180ac <daemon@@Base+0x22ec>
   18168:	add	r6, r6, #24
   1816c:	subs	r5, r5, #1
   18170:	beq	180e4 <daemon@@Base+0x2324>
   18174:	ldr	r3, [r6, #12]
   18178:	tst	r3, #8
   1817c:	bne	18168 <daemon@@Base+0x23a8>
   18180:	ldr	r7, [r6, #4]
   18184:	sub	r3, r7, #1
   18188:	cmp	r3, #254	; 0xfe
   1818c:	bhi	18168 <daemon@@Base+0x23a8>
   18190:	bl	118c4 <__ctype_b_loc@plt>
   18194:	ldr	r2, [r0]
   18198:	lsl	r3, r7, #1
   1819c:	ldrh	r3, [r2, r3]
   181a0:	tst	r3, #16384	; 0x4000
   181a4:	bne	1815c <daemon@@Base+0x239c>
   181a8:	b	18168 <daemon@@Base+0x23a8>
   181ac:	strb	r6, [r5], #1
   181b0:	add	r4, r4, #24
   181b4:	ldr	r3, [r4, #4]
   181b8:	cmp	r3, #0
   181bc:	bne	181cc <daemon@@Base+0x240c>
   181c0:	ldr	r3, [r4]
   181c4:	cmp	r3, #0
   181c8:	beq	17d90 <daemon@@Base+0x1fd0>
   181cc:	ldr	r3, [r4, #12]
   181d0:	tst	r3, #4
   181d4:	beq	17da8 <daemon@@Base+0x1fe8>
   181d8:	ldr	r3, [r8, #-24]	; 0xffffffe8
   181dc:	add	r3, r3, #1
   181e0:	str	r3, [r8, #-24]	; 0xffffffe8
   181e4:	ldr	r3, [r4, #12]
   181e8:	tst	r3, #8
   181ec:	bne	181b0 <daemon@@Base+0x23f0>
   181f0:	ldr	r6, [r4, #4]
   181f4:	sub	r3, r6, #1
   181f8:	cmp	r3, #254	; 0xfe
   181fc:	bhi	181b0 <daemon@@Base+0x23f0>
   18200:	bl	118c4 <__ctype_b_loc@plt>
   18204:	ldr	r2, [r0]
   18208:	lsl	r3, r6, #1
   1820c:	ldrh	r3, [r2, r3]
   18210:	tst	r3, #16384	; 0x4000
   18214:	beq	181b0 <daemon@@Base+0x23f0>
   18218:	uxtb	r6, r6
   1821c:	ldr	r3, [sl, #8]
   18220:	cmp	r3, r5
   18224:	bcs	181ac <daemon@@Base+0x23ec>
   18228:	ldrb	r2, [r3]
   1822c:	cmp	r2, r6
   18230:	beq	181b0 <daemon@@Base+0x23f0>
   18234:	sub	r2, r5, #1
   18238:	cmp	r3, r2
   1823c:	beq	181ac <daemon@@Base+0x23ec>
   18240:	ldrb	r1, [r3, #1]!
   18244:	cmp	r1, r6
   18248:	bne	18238 <daemon@@Base+0x2478>
   1824c:	b	181b0 <daemon@@Base+0x23f0>
   18250:	mov	r0, sl
   18254:	add	sp, sp, #52	; 0x34
   18258:	ldrd	r4, [sp]
   1825c:	ldrd	r6, [sp, #8]
   18260:	ldrd	r8, [sp, #16]
   18264:	ldrd	sl, [sp, #24]
   18268:	add	sp, sp, #32
   1826c:	pop	{pc}		; (ldr pc, [sp], #4)
   18270:	andeq	lr, r1, r4, asr #3

00018274 <argp_failure@@Base>:
   18274:	push	{r3}		; (str r3, [sp, #-4]!)
   18278:	strd	r4, [sp, #-20]!	; 0xffffffec
   1827c:	strd	r6, [sp, #8]
   18280:	str	lr, [sp, #16]
   18284:	sub	sp, sp, #200	; 0xc8
   18288:	mov	r7, r1
   1828c:	mov	r6, r2
   18290:	subs	r5, r0, #0
   18294:	beq	183f0 <argp_failure@@Base+0x17c>
   18298:	ldr	r3, [r5, #16]
   1829c:	tst	r3, #2
   182a0:	bne	183d4 <argp_failure@@Base+0x160>
   182a4:	ldr	r4, [r5, #44]	; 0x2c
   182a8:	cmp	r4, #0
   182ac:	beq	183d4 <argp_failure@@Base+0x160>
   182b0:	mov	r0, r4
   182b4:	bl	11a20 <flockfile@plt>
   182b8:	ldr	r0, [r5, #40]	; 0x28
   182bc:	mov	r1, r4
   182c0:	bl	1163c <fputs_unlocked@plt>
   182c4:	ldr	r3, [sp, #220]	; 0xdc
   182c8:	cmp	r3, #0
   182cc:	beq	18328 <argp_failure@@Base+0xb4>
   182d0:	add	r3, sp, #224	; 0xe0
   182d4:	str	r3, [sp]
   182d8:	ldr	r3, [r4, #20]
   182dc:	ldr	r2, [r4, #24]
   182e0:	cmp	r3, r2
   182e4:	addcc	r2, r3, #1
   182e8:	strcc	r2, [r4, #20]
   182ec:	movcc	r2, #58	; 0x3a
   182f0:	strbcc	r2, [r3]
   182f4:	bcs	1841c <argp_failure@@Base+0x1a8>
   182f8:	ldr	r3, [r4, #20]
   182fc:	ldr	r2, [r4, #24]
   18300:	cmp	r3, r2
   18304:	addcc	r2, r3, #1
   18308:	strcc	r2, [r4, #20]
   1830c:	movcc	r2, #32
   18310:	strbcc	r2, [r3]
   18314:	bcs	1842c <argp_failure@@Base+0x1b8>
   18318:	ldr	r2, [sp]
   1831c:	ldr	r1, [sp, #220]	; 0xdc
   18320:	mov	r0, r4
   18324:	bl	119fc <vfprintf@plt>
   18328:	cmp	r6, #0
   1832c:	beq	18390 <argp_failure@@Base+0x11c>
   18330:	ldr	r3, [r4, #20]
   18334:	ldr	r2, [r4, #24]
   18338:	cmp	r3, r2
   1833c:	addcc	r2, r3, #1
   18340:	strcc	r2, [r4, #20]
   18344:	movcc	r2, #58	; 0x3a
   18348:	strbcc	r2, [r3]
   1834c:	bcs	1843c <argp_failure@@Base+0x1c8>
   18350:	ldr	r3, [r4, #20]
   18354:	ldr	r2, [r4, #24]
   18358:	cmp	r3, r2
   1835c:	addcc	r2, r3, #1
   18360:	strcc	r2, [r4, #20]
   18364:	movcc	r2, #32
   18368:	strbcc	r2, [r3]
   1836c:	bcs	1844c <argp_failure@@Base+0x1d8>
   18370:	mov	r2, #200	; 0xc8
   18374:	mov	r1, sp
   18378:	mov	r0, r6
   1837c:	bl	11930 <strerror_r@plt>
   18380:	cmp	r0, #0
   18384:	beq	1845c <argp_failure@@Base+0x1e8>
   18388:	mov	r1, r4
   1838c:	bl	1163c <fputs_unlocked@plt>
   18390:	ldr	r3, [r4, #20]
   18394:	ldr	r2, [r4, #24]
   18398:	cmp	r3, r2
   1839c:	addcc	r2, r3, #1
   183a0:	strcc	r2, [r4, #20]
   183a4:	movcc	r2, #10
   183a8:	strbcc	r2, [r3]
   183ac:	bcs	18478 <argp_failure@@Base+0x204>
   183b0:	mov	r0, r4
   183b4:	bl	117d4 <funlockfile@plt>
   183b8:	cmp	r7, #0
   183bc:	beq	183d4 <argp_failure@@Base+0x160>
   183c0:	cmp	r5, #0
   183c4:	beq	18488 <argp_failure@@Base+0x214>
   183c8:	ldr	r3, [r5, #16]
   183cc:	tst	r3, #32
   183d0:	beq	18488 <argp_failure@@Base+0x214>
   183d4:	add	sp, sp, #200	; 0xc8
   183d8:	ldrd	r4, [sp]
   183dc:	ldrd	r6, [sp, #8]
   183e0:	ldr	lr, [sp, #16]
   183e4:	add	sp, sp, #20
   183e8:	add	sp, sp, #4
   183ec:	bx	lr
   183f0:	movw	r3, #62912	; 0xf5c0
   183f4:	movt	r3, #2
   183f8:	ldr	r4, [r3]
   183fc:	cmp	r4, #0
   18400:	beq	183d4 <argp_failure@@Base+0x160>
   18404:	mov	r0, r4
   18408:	bl	11a20 <flockfile@plt>
   1840c:	movw	r3, #62904	; 0xf5b8
   18410:	movt	r3, #2
   18414:	ldr	r0, [r3]
   18418:	b	182bc <argp_failure@@Base+0x48>
   1841c:	mov	r1, #58	; 0x3a
   18420:	mov	r0, r4
   18424:	bl	119c0 <__overflow@plt>
   18428:	b	182f8 <argp_failure@@Base+0x84>
   1842c:	mov	r1, #32
   18430:	mov	r0, r4
   18434:	bl	119c0 <__overflow@plt>
   18438:	b	18318 <argp_failure@@Base+0xa4>
   1843c:	mov	r1, #58	; 0x3a
   18440:	mov	r0, r4
   18444:	bl	119c0 <__overflow@plt>
   18448:	b	18350 <argp_failure@@Base+0xdc>
   1844c:	mov	r1, #32
   18450:	mov	r0, r4
   18454:	bl	119c0 <__overflow@plt>
   18458:	b	18370 <argp_failure@@Base+0xfc>
   1845c:	mov	r0, r6
   18460:	bl	11888 <strerror@plt>
   18464:	movw	r3, #58232	; 0xe378
   18468:	movt	r3, #1
   1846c:	cmp	r0, #0
   18470:	moveq	r0, r3
   18474:	b	18388 <argp_failure@@Base+0x114>
   18478:	mov	r1, #10
   1847c:	mov	r0, r4
   18480:	bl	119c0 <__overflow@plt>
   18484:	b	183b0 <argp_failure@@Base+0x13c>
   18488:	mov	r0, r7
   1848c:	bl	118dc <exit@plt>
   18490:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18494:	strd	r6, [sp, #8]
   18498:	strd	r8, [sp, #16]
   1849c:	strd	sl, [sp, #24]
   184a0:	str	lr, [sp, #32]
   184a4:	add	fp, sp, #32
   184a8:	sub	sp, sp, #124	; 0x7c
   184ac:	str	r0, [fp, #-108]	; 0xffffff94
   184b0:	str	r1, [fp, #-104]	; 0xffffff98
   184b4:	str	r3, [fp, #-100]	; 0xffffff9c
   184b8:	subs	r3, r2, #0
   184bc:	str	r3, [fp, #-132]	; 0xffffff7c
   184c0:	beq	194a8 <argp_failure@@Base+0x1234>
   184c4:	mov	r0, r3
   184c8:	bl	11a20 <flockfile@plt>
   184cc:	movw	r3, #62844	; 0xf57c
   184d0:	movt	r3, #2
   184d4:	ldr	r9, [r3, #36]	; 0x24
   184d8:	cmp	r9, #0
   184dc:	beq	185b4 <argp_failure@@Base+0x340>
   184e0:	movw	r2, #62844	; 0xf57c
   184e4:	movt	r2, #2
   184e8:	mov	r3, #0
   184ec:	ldr	r2, [r2, #32]
   184f0:	mov	r1, r3
   184f4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   184f8:	bl	1bbf0 <argp_parse@@Base+0x1d00>
   184fc:	subs	sl, r0, #0
   18500:	beq	18990 <argp_failure@@Base+0x71c>
   18504:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18508:	tst	r3, #11
   1850c:	moveq	r3, #0
   18510:	streq	r3, [fp, #-128]	; 0xffffff80
   18514:	bne	1899c <argp_failure@@Base+0x728>
   18518:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1851c:	tst	r3, #3
   18520:	moveq	r4, #0
   18524:	bne	18a2c <argp_failure@@Base+0x7b8>
   18528:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1852c:	tst	r3, #16
   18530:	bne	18c50 <argp_failure@@Base+0x9dc>
   18534:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18538:	tst	r3, #4
   1853c:	bne	18c78 <argp_failure@@Base+0xa04>
   18540:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18544:	tst	r3, #8
   18548:	beq	19434 <argp_failure@@Base+0x11c0>
   1854c:	ldr	r3, [fp, #-128]	; 0xffffff80
   18550:	ldr	r3, [r3, #4]
   18554:	cmp	r3, #0
   18558:	beq	19434 <argp_failure@@Base+0x11c0>
   1855c:	cmp	r4, #0
   18560:	bne	18c98 <argp_failure@@Base+0xa24>
   18564:	mov	r3, #0
   18568:	str	r3, [fp, #-88]	; 0xffffffa8
   1856c:	str	r3, [fp, #-84]	; 0xffffffac
   18570:	str	r3, [fp, #-80]	; 0xffffffb0
   18574:	ldr	r3, [fp, #-128]	; 0xffffff80
   18578:	ldr	r9, [r3]
   1857c:	ldr	r3, [r3, #4]
   18580:	str	r3, [fp, #-116]	; 0xffffff8c
   18584:	cmp	r3, #0
   18588:	beq	19430 <argp_failure@@Base+0x11bc>
   1858c:	movw	r3, #62844	; 0xf57c
   18590:	movt	r3, #2
   18594:	str	r3, [fp, #-96]	; 0xffffffa0
   18598:	movw	r3, #58564	; 0xe4c4
   1859c:	movt	r3, #1
   185a0:	str	r3, [fp, #-140]	; 0xffffff74
   185a4:	movw	r3, #59060	; 0xe6b4
   185a8:	movt	r3, #1
   185ac:	str	r3, [fp, #-144]	; 0xffffff70
   185b0:	b	192b0 <argp_failure@@Base+0x103c>
   185b4:	movw	r0, #58256	; 0xe390
   185b8:	movt	r0, #1
   185bc:	bl	11858 <getenv@plt>
   185c0:	movw	r1, #62844	; 0xf57c
   185c4:	movt	r1, #2
   185c8:	ldrd	r2, [r1]
   185cc:	strd	r2, [fp, #-76]	; 0xffffffb4
   185d0:	ldrd	r2, [r1, #8]
   185d4:	strd	r2, [fp, #-68]	; 0xffffffbc
   185d8:	ldrd	r2, [r1, #16]
   185dc:	strd	r2, [fp, #-60]	; 0xffffffc4
   185e0:	ldrd	r2, [r1, #24]
   185e4:	strd	r2, [fp, #-52]	; 0xffffffcc
   185e8:	ldrd	r2, [r1, #32]
   185ec:	strd	r2, [fp, #-44]	; 0xffffffd4
   185f0:	subs	r6, r0, #0
   185f4:	beq	184e0 <argp_failure@@Base+0x26c>
   185f8:	movw	sl, #57784	; 0xe1b8
   185fc:	movt	sl, #1
   18600:	add	r8, sl, #168	; 0xa8
   18604:	b	18860 <argp_failure@@Base+0x5ec>
   18608:	cmp	r0, #45	; 0x2d
   1860c:	cmpne	r0, #95	; 0x5f
   18610:	moveq	r3, #1
   18614:	movne	r3, #0
   18618:	ubfx	r1, r1, #3, #1
   1861c:	orrs	r3, r3, r1
   18620:	beq	1960c <argp_failure@@Base+0x1398>
   18624:	mov	r4, r6
   18628:	ldrb	r3, [r4, #1]!
   1862c:	lsl	r1, r3, #1
   18630:	ldrh	r1, [r2, r1]
   18634:	ubfx	r1, r1, #3, #1
   18638:	cmp	r3, #95	; 0x5f
   1863c:	cmpne	r3, #45	; 0x2d
   18640:	moveq	r3, #1
   18644:	movne	r3, #0
   18648:	orrs	r3, r1, r3
   1864c:	bne	18628 <argp_failure@@Base+0x3b4>
   18650:	sub	r7, r4, r6
   18654:	ldrb	r3, [r4]
   18658:	lsl	r1, r3, #1
   1865c:	ldrh	r1, [r2, r1]
   18660:	tst	r1, #8192	; 0x2000
   18664:	beq	1867c <argp_failure@@Base+0x408>
   18668:	ldrb	r3, [r4, #1]!
   1866c:	lsl	r1, r3, #1
   18670:	ldrh	r1, [r2, r1]
   18674:	tst	r1, #8192	; 0x2000
   18678:	bne	18668 <argp_failure@@Base+0x3f4>
   1867c:	cmp	r3, #44	; 0x2c
   18680:	cmpne	r3, #0
   18684:	beq	186e8 <argp_failure@@Base+0x474>
   18688:	cmp	r3, #61	; 0x3d
   1868c:	beq	186b4 <argp_failure@@Base+0x440>
   18690:	ldrb	r3, [r4]
   18694:	lsl	r3, r3, #1
   18698:	ldrh	r3, [r2, r3]
   1869c:	tst	r3, #2048	; 0x800
   186a0:	streq	r9, [fp, #-96]	; 0xffffffa0
   186a4:	streq	r9, [fp, #-112]	; 0xffffff90
   186a8:	bne	1874c <argp_failure@@Base+0x4d8>
   186ac:	add	r5, sl, #24
   186b0:	b	187f4 <argp_failure@@Base+0x580>
   186b4:	add	r1, r4, #1
   186b8:	ldrb	r3, [r4, #1]
   186bc:	lsl	r3, r3, #1
   186c0:	ldrh	r3, [r2, r3]
   186c4:	tst	r3, #8192	; 0x2000
   186c8:	beq	18744 <argp_failure@@Base+0x4d0>
   186cc:	ldrb	r3, [r1, #1]!
   186d0:	lsl	r3, r3, #1
   186d4:	ldrh	r3, [r2, r3]
   186d8:	tst	r3, #8192	; 0x2000
   186dc:	bne	186cc <argp_failure@@Base+0x458>
   186e0:	mov	r4, r1
   186e4:	b	18690 <argp_failure@@Base+0x41c>
   186e8:	cmp	r0, #110	; 0x6e
   186ec:	movne	r3, #1
   186f0:	strne	r3, [fp, #-96]	; 0xffffffa0
   186f4:	strne	r3, [fp, #-112]	; 0xffffff90
   186f8:	bne	186ac <argp_failure@@Base+0x438>
   186fc:	ldrb	r3, [r6, #1]
   18700:	cmp	r3, #111	; 0x6f
   18704:	movne	r3, #1
   18708:	strne	r3, [fp, #-96]	; 0xffffffa0
   1870c:	strne	r3, [fp, #-112]	; 0xffffff90
   18710:	bne	186ac <argp_failure@@Base+0x438>
   18714:	ldrb	r3, [r6, #2]
   18718:	cmp	r3, #45	; 0x2d
   1871c:	movne	r3, #1
   18720:	strne	r3, [fp, #-96]	; 0xffffffa0
   18724:	strne	r3, [fp, #-112]	; 0xffffff90
   18728:	bne	186ac <argp_failure@@Base+0x438>
   1872c:	add	r6, r6, #3
   18730:	sub	r7, r7, #3
   18734:	str	r9, [fp, #-112]	; 0xffffff90
   18738:	mov	r3, #1
   1873c:	str	r3, [fp, #-96]	; 0xffffffa0
   18740:	b	186ac <argp_failure@@Base+0x438>
   18744:	mov	r4, r1
   18748:	b	18690 <argp_failure@@Base+0x41c>
   1874c:	mov	r2, #10
   18750:	mov	r1, #0
   18754:	mov	r0, r4
   18758:	bl	11660 <strtol@plt>
   1875c:	str	r0, [fp, #-112]	; 0xffffff90
   18760:	ldr	r2, [r5]
   18764:	ldrb	r3, [r4]
   18768:	lsl	r3, r3, #1
   1876c:	ldrh	r3, [r2, r3]
   18770:	tst	r3, #2048	; 0x800
   18774:	beq	1878c <argp_failure@@Base+0x518>
   18778:	ldrb	r3, [r4, #1]!
   1877c:	lsl	r3, r3, #1
   18780:	ldrh	r3, [r2, r3]
   18784:	tst	r3, #2048	; 0x800
   18788:	bne	18778 <argp_failure@@Base+0x504>
   1878c:	ldrb	r3, [r4]
   18790:	lsl	r3, r3, #1
   18794:	ldrh	r3, [r2, r3]
   18798:	tst	r3, #8192	; 0x2000
   1879c:	beq	187bc <argp_failure@@Base+0x548>
   187a0:	ldrb	r3, [r4, #1]!
   187a4:	lsl	r3, r3, #1
   187a8:	ldrh	r3, [r2, r3]
   187ac:	tst	r3, #8192	; 0x2000
   187b0:	bne	187a0 <argp_failure@@Base+0x52c>
   187b4:	str	r9, [fp, #-96]	; 0xffffffa0
   187b8:	b	186ac <argp_failure@@Base+0x438>
   187bc:	str	r9, [fp, #-96]	; 0xffffffa0
   187c0:	b	186ac <argp_failure@@Base+0x438>
   187c4:	str	r6, [sp, #4]
   187c8:	str	r7, [sp]
   187cc:	movw	r3, #58272	; 0xe3a0
   187d0:	movt	r3, #1
   187d4:	mov	r2, #0
   187d8:	mov	r1, r2
   187dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   187e0:	bl	18274 <argp_failure@@Base>
   187e4:	b	18848 <argp_failure@@Base+0x5d4>
   187e8:	add	r5, r5, #16
   187ec:	cmp	r5, r8
   187f0:	beq	18930 <argp_failure@@Base+0x6bc>
   187f4:	mov	r0, r5
   187f8:	bl	118e8 <strlen@plt>
   187fc:	cmp	r0, r7
   18800:	bne	187e8 <argp_failure@@Base+0x574>
   18804:	mov	r2, r7
   18808:	mov	r1, r5
   1880c:	mov	r0, r6
   18810:	bl	11aa4 <strncmp@plt>
   18814:	cmp	r0, #0
   18818:	bne	187e8 <argp_failure@@Base+0x574>
   1881c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18820:	cmp	r3, #0
   18824:	beq	18834 <argp_failure@@Base+0x5c0>
   18828:	ldrb	r3, [r5, #14]
   1882c:	cmp	r3, #0
   18830:	beq	187c4 <argp_failure@@Base+0x550>
   18834:	ldrb	r3, [r5, #15]
   18838:	sub	r2, fp, #36	; 0x24
   1883c:	add	r3, r2, r3
   18840:	ldr	r2, [fp, #-112]	; 0xffffff90
   18844:	str	r2, [r3, #-40]	; 0xffffffd8
   18848:	cmp	r5, r8
   1884c:	beq	18930 <argp_failure@@Base+0x6bc>
   18850:	ldrb	r3, [r4]
   18854:	cmp	r3, #44	; 0x2c
   18858:	addeq	r6, r4, #1
   1885c:	movne	r6, r4
   18860:	ldrb	r3, [r6]
   18864:	cmp	r3, #0
   18868:	beq	188c0 <argp_failure@@Base+0x64c>
   1886c:	bl	118c4 <__ctype_b_loc@plt>
   18870:	mov	r5, r0
   18874:	ldr	r2, [r0]
   18878:	mov	r3, r6
   1887c:	mov	r6, r3
   18880:	ldrb	r0, [r3], #1
   18884:	lsl	r1, r0, #1
   18888:	ldrh	r1, [r2, r1]
   1888c:	tst	r1, #8192	; 0x2000
   18890:	bne	1887c <argp_failure@@Base+0x608>
   18894:	tst	r1, #1024	; 0x400
   18898:	bne	18608 <argp_failure@@Base+0x394>
   1889c:	cmp	r0, #0
   188a0:	beq	18860 <argp_failure@@Base+0x5ec>
   188a4:	str	r6, [sp]
   188a8:	movw	r3, #58360	; 0xe3f8
   188ac:	movt	r3, #1
   188b0:	mov	r2, #0
   188b4:	mov	r1, r2
   188b8:	ldr	r0, [fp, #-104]	; 0xffffff98
   188bc:	bl	18274 <argp_failure@@Base>
   188c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   188c4:	ldr	r3, [pc, #3488]	; 1966c <argp_failure@@Base+0x13f8>
   188c8:	add	r1, r3, #144	; 0x90
   188cc:	add	r3, r3, #16
   188d0:	cmp	r3, r1
   188d4:	beq	18954 <argp_failure@@Base+0x6e0>
   188d8:	ldrb	r2, [r3, #14]
   188dc:	cmp	r2, #0
   188e0:	bne	188cc <argp_failure@@Base+0x658>
   188e4:	ldrb	r2, [r3, #15]
   188e8:	cmp	r2, #32
   188ec:	beq	188cc <argp_failure@@Base+0x658>
   188f0:	sub	ip, fp, #36	; 0x24
   188f4:	add	r2, ip, r2
   188f8:	ldr	r2, [r2, #-40]	; 0xffffffd8
   188fc:	cmp	r2, r0
   18900:	blt	188cc <argp_failure@@Base+0x658>
   18904:	str	r3, [sp, #4]
   18908:	movw	r3, #58444	; 0xe44c
   1890c:	movt	r3, #1
   18910:	str	r3, [sp]
   18914:	movw	r3, #58392	; 0xe418
   18918:	movt	r3, #1
   1891c:	mov	r2, #0
   18920:	mov	r1, r2
   18924:	ldr	r0, [fp, #-104]	; 0xffffff98
   18928:	bl	18274 <argp_failure@@Base>
   1892c:	b	184e0 <argp_failure@@Base+0x26c>
   18930:	str	r6, [sp, #4]
   18934:	str	r7, [sp]
   18938:	movw	r3, #58320	; 0xe3d0
   1893c:	movt	r3, #1
   18940:	mov	r2, #0
   18944:	mov	r1, r2
   18948:	ldr	r0, [fp, #-104]	; 0xffffff98
   1894c:	bl	18274 <argp_failure@@Base>
   18950:	b	18850 <argp_failure@@Base+0x5dc>
   18954:	movw	r1, #62844	; 0xf57c
   18958:	movt	r1, #2
   1895c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   18960:	strd	r2, [r1]
   18964:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18968:	strd	r2, [r1, #8]
   1896c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   18970:	strd	r2, [r1, #16]
   18974:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18978:	strd	r2, [r1, #24]
   1897c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18980:	strd	r2, [r1, #32]
   18984:	mov	r3, #1
   18988:	str	r3, [r1, #36]	; 0x24
   1898c:	b	184e0 <argp_failure@@Base+0x26c>
   18990:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18994:	bl	117d4 <funlockfile@plt>
   18998:	b	194a8 <argp_failure@@Base+0x1234>
   1899c:	mov	r1, #0
   189a0:	ldr	r0, [fp, #-108]	; 0xffffff94
   189a4:	bl	17bbc <daemon@@Base+0x1dfc>
   189a8:	str	r0, [fp, #-128]	; 0xffffff80
   189ac:	movw	r1, #58452	; 0xe454
   189b0:	movt	r1, #1
   189b4:	bl	165fc <daemon@@Base+0x83c>
   189b8:	cmp	r0, #0
   189bc:	mvnne	r3, #0
   189c0:	strne	r3, [r0, #12]
   189c4:	movw	r1, #58460	; 0xe45c
   189c8:	movt	r1, #1
   189cc:	ldr	r0, [fp, #-128]	; 0xffffff80
   189d0:	bl	165fc <daemon@@Base+0x83c>
   189d4:	cmp	r0, #0
   189d8:	mvnne	r3, #0
   189dc:	strne	r3, [r0, #12]
   189e0:	ldr	r0, [fp, #-128]	; 0xffffff80
   189e4:	ldr	r3, [r0, #4]
   189e8:	cmp	r3, #0
   189ec:	beq	18518 <argp_failure@@Base+0x2a4>
   189f0:	ldr	r2, [r0]
   189f4:	mov	r3, #0
   189f8:	str	r3, [r2, #24]
   189fc:	add	r3, r3, #1
   18a00:	add	r2, r2, #28
   18a04:	ldr	r1, [r0, #4]
   18a08:	cmp	r3, r1
   18a0c:	bcc	189f8 <argp_failure@@Base+0x784>
   18a10:	movw	r3, #30892	; 0x78ac
   18a14:	movt	r3, #1
   18a18:	mov	r2, #28
   18a1c:	ldr	r0, [fp, #-128]	; 0xffffff80
   18a20:	ldr	r0, [r0]
   18a24:	bl	11a44 <qsort@plt>
   18a28:	b	18518 <argp_failure@@Base+0x2a4>
   18a2c:	ldr	r0, [fp, #-108]	; 0xffffff94
   18a30:	bl	166b0 <daemon@@Base+0x8f0>
   18a34:	mov	r2, r0
   18a38:	add	r3, r0, #7
   18a3c:	bic	r3, r3, #7
   18a40:	sub	sp, sp, r3
   18a44:	add	r9, sp, #8
   18a48:	mov	r1, #0
   18a4c:	mov	r0, r9
   18a50:	bl	11954 <memset@plt>
   18a54:	mov	r5, #1
   18a58:	movw	r4, #62844	; 0xf57c
   18a5c:	movt	r4, #2
   18a60:	movw	r3, #58484	; 0xe474
   18a64:	movt	r3, #1
   18a68:	str	r3, [fp, #-116]	; 0xffffff8c
   18a6c:	movw	r8, #58476	; 0xe46c
   18a70:	movt	r8, #1
   18a74:	str	r9, [fp, #-96]	; 0xffffffa0
   18a78:	ldr	r9, [fp, #-128]	; 0xffffff80
   18a7c:	str	r8, [fp, #-112]	; 0xffffff90
   18a80:	ldr	r8, [fp, #-100]	; 0xffffff9c
   18a84:	b	18b34 <argp_failure@@Base+0x8c0>
   18a88:	mov	r0, sl
   18a8c:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18a90:	b	18b50 <argp_failure@@Base+0x8dc>
   18a94:	mov	r0, sl
   18a98:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18a9c:	b	18b9c <argp_failure@@Base+0x928>
   18aa0:	mov	r1, sl
   18aa4:	mov	r0, r9
   18aa8:	bl	16884 <daemon@@Base+0xac4>
   18aac:	orr	r8, r8, #2
   18ab0:	str	sl, [sp]
   18ab4:	mov	r3, #1
   18ab8:	sub	r2, fp, #76	; 0x4c
   18abc:	ldr	r1, [fp, #-104]	; 0xffffff98
   18ac0:	ldr	r0, [fp, #-108]	; 0xffffff94
   18ac4:	bl	16cf0 <daemon@@Base+0xf30>
   18ac8:	mov	r6, r0
   18acc:	ldr	r3, [sl, #28]
   18ad0:	ldr	r2, [sl, #24]
   18ad4:	sub	r3, r3, r2
   18ad8:	ldr	r2, [sl, #16]
   18adc:	cmp	r3, r2
   18ae0:	bhi	18c14 <argp_failure@@Base+0x9a0>
   18ae4:	str	r7, [sl, #12]
   18ae8:	ldr	r3, [sl, #28]
   18aec:	ldr	r2, [sl, #24]
   18af0:	sub	r3, r3, r2
   18af4:	ldr	r2, [sl, #16]
   18af8:	cmp	r3, r2
   18afc:	bhi	18c20 <argp_failure@@Base+0x9ac>
   18b00:	str	r5, [sl, #4]
   18b04:	ldr	r2, [sl, #28]
   18b08:	ldr	r3, [sl, #32]
   18b0c:	cmp	r2, r3
   18b10:	bcs	18c2c <argp_failure@@Base+0x9b8>
   18b14:	ldr	r3, [sl, #28]
   18b18:	add	r2, r3, #1
   18b1c:	str	r2, [sl, #28]
   18b20:	mov	r2, #10
   18b24:	strb	r2, [r3]
   18b28:	mov	r5, #0
   18b2c:	cmp	r6, r5
   18b30:	beq	18c44 <argp_failure@@Base+0x9d0>
   18b34:	ldr	r6, [r4, #28]
   18b38:	ldr	r3, [sl, #28]
   18b3c:	ldr	r2, [sl, #24]
   18b40:	sub	r3, r3, r2
   18b44:	ldr	r2, [sl, #16]
   18b48:	cmp	r3, r2
   18b4c:	bhi	18a88 <argp_failure@@Base+0x814>
   18b50:	ldr	r7, [sl, #12]
   18b54:	str	r6, [sl, #12]
   18b58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18b5c:	str	r3, [fp, #-76]	; 0xffffffb4
   18b60:	cmp	r5, #0
   18b64:	ldr	r3, [fp, #4]
   18b68:	movwne	r2, #58468	; 0xe464
   18b6c:	movtne	r2, #1
   18b70:	ldreq	r2, [fp, #-116]	; 0xffffff8c
   18b74:	ldr	r1, [fp, #-112]	; 0xffffff90
   18b78:	mov	r0, sl
   18b7c:	bl	1c300 <argp_parse@@Base+0x2410>
   18b80:	ldr	r6, [r4, #28]
   18b84:	ldr	r3, [sl, #28]
   18b88:	ldr	r2, [sl, #24]
   18b8c:	sub	r3, r3, r2
   18b90:	ldr	r2, [sl, #16]
   18b94:	cmp	r3, r2
   18b98:	bhi	18a94 <argp_failure@@Base+0x820>
   18b9c:	ldr	r5, [sl, #4]
   18ba0:	str	r6, [sl, #4]
   18ba4:	tst	r8, #2
   18ba8:	beq	18aa0 <argp_failure@@Base+0x82c>
   18bac:	ldr	r3, [r9, #4]
   18bb0:	cmp	r3, #0
   18bb4:	beq	18ab0 <argp_failure@@Base+0x83c>
   18bb8:	ldr	r3, [sl, #28]
   18bbc:	add	r3, r3, #12
   18bc0:	ldr	r2, [sl, #32]
   18bc4:	cmp	r2, r3
   18bc8:	bcs	18be0 <argp_failure@@Base+0x96c>
   18bcc:	mov	r1, #12
   18bd0:	mov	r0, sl
   18bd4:	bl	1c200 <argp_parse@@Base+0x2310>
   18bd8:	cmp	r0, #0
   18bdc:	beq	18ab0 <argp_failure@@Base+0x83c>
   18be0:	ldr	r2, [sl, #28]
   18be4:	movw	r3, #58492	; 0xe47c
   18be8:	movt	r3, #1
   18bec:	ldr	r0, [r3]
   18bf0:	ldr	r1, [r3, #4]
   18bf4:	str	r0, [r2]
   18bf8:	str	r1, [r2, #4]
   18bfc:	ldr	r3, [r3, #8]
   18c00:	str	r3, [r2, #8]
   18c04:	ldr	r3, [sl, #28]
   18c08:	add	r3, r3, #12
   18c0c:	str	r3, [sl, #28]
   18c10:	b	18ab0 <argp_failure@@Base+0x83c>
   18c14:	mov	r0, sl
   18c18:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18c1c:	b	18ae4 <argp_failure@@Base+0x870>
   18c20:	mov	r0, sl
   18c24:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18c28:	b	18b00 <argp_failure@@Base+0x88c>
   18c2c:	mov	r1, #1
   18c30:	mov	r0, sl
   18c34:	bl	1c200 <argp_parse@@Base+0x2310>
   18c38:	cmp	r0, #0
   18c3c:	bne	18b14 <argp_failure@@Base+0x8a0>
   18c40:	b	18b28 <argp_failure@@Base+0x8b4>
   18c44:	str	r8, [fp, #-100]	; 0xffffff9c
   18c48:	mov	r4, #1
   18c4c:	b	18528 <argp_failure@@Base+0x2b4>
   18c50:	str	sl, [sp, #4]
   18c54:	mov	r3, #1
   18c58:	str	r3, [sp]
   18c5c:	mov	r3, #0
   18c60:	mov	r2, r3
   18c64:	ldr	r1, [fp, #-104]	; 0xffffff98
   18c68:	ldr	r0, [fp, #-108]	; 0xffffff94
   18c6c:	bl	172a0 <daemon@@Base+0x14e0>
   18c70:	orr	r4, r4, r0
   18c74:	b	18534 <argp_failure@@Base+0x2c0>
   18c78:	ldr	r3, [fp, #4]
   18c7c:	mov	r2, r3
   18c80:	movw	r1, #58508	; 0xe48c
   18c84:	movt	r1, #1
   18c88:	mov	r0, sl
   18c8c:	bl	1c300 <argp_parse@@Base+0x2410>
   18c90:	mov	r4, #1
   18c94:	b	18540 <argp_failure@@Base+0x2cc>
   18c98:	ldr	r2, [sl, #28]
   18c9c:	ldr	r3, [sl, #32]
   18ca0:	cmp	r2, r3
   18ca4:	bcs	18cc0 <argp_failure@@Base+0xa4c>
   18ca8:	ldr	r3, [sl, #28]
   18cac:	add	r2, r3, #1
   18cb0:	str	r2, [sl, #28]
   18cb4:	mov	r2, #10
   18cb8:	strb	r2, [r3]
   18cbc:	b	18564 <argp_failure@@Base+0x2f0>
   18cc0:	mov	r1, #1
   18cc4:	mov	r0, sl
   18cc8:	bl	1c200 <argp_parse@@Base+0x2310>
   18ccc:	cmp	r0, #0
   18cd0:	bne	18ca8 <argp_failure@@Base+0xa34>
   18cd4:	b	18564 <argp_failure@@Base+0x2f0>
   18cd8:	mov	r0, sl
   18cdc:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18ce0:	b	192d0 <argp_failure@@Base+0x105c>
   18ce4:	add	r3, r3, #24
   18ce8:	subs	r2, r2, #1
   18cec:	beq	18d10 <argp_failure@@Base+0xa9c>
   18cf0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   18cf4:	cmp	r1, #0
   18cf8:	beq	18ce4 <argp_failure@@Base+0xa70>
   18cfc:	ldr	r1, [r3, #-12]
   18d00:	tst	r1, #2
   18d04:	bne	18ce4 <argp_failure@@Base+0xa70>
   18d08:	mov	r3, #1
   18d0c:	str	r3, [fp, #-112]	; 0xffffff90
   18d10:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18d14:	ldr	r5, [r3, #8]
   18d18:	ldr	r3, [sl, #28]
   18d1c:	ldr	r2, [sl, #24]
   18d20:	sub	r3, r3, r2
   18d24:	ldr	r2, [sl, #16]
   18d28:	cmp	r3, r2
   18d2c:	bhi	18d4c <argp_failure@@Base+0xad8>
   18d30:	str	r5, [sl, #12]
   18d34:	ldr	r6, [r9, #4]
   18d38:	cmp	r6, #0
   18d3c:	beq	18e4c <argp_failure@@Base+0xbd8>
   18d40:	mov	r5, r4
   18d44:	str	r9, [fp, #-136]	; 0xffffff78
   18d48:	b	19634 <argp_failure@@Base+0x13c0>
   18d4c:	mov	r0, sl
   18d50:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18d54:	b	18d30 <argp_failure@@Base+0xabc>
   18d58:	tst	r9, #2
   18d5c:	beq	18d68 <argp_failure@@Base+0xaf4>
   18d60:	add	r8, r8, #1
   18d64:	b	19628 <argp_failure@@Base+0x13b4>
   18d68:	sub	r1, fp, #76	; 0x4c
   18d6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18d70:	ldr	r0, [r3, #8]
   18d74:	bl	170fc <daemon@@Base+0x133c>
   18d78:	ldr	r2, [sl, #28]
   18d7c:	ldr	r3, [sl, #32]
   18d80:	cmp	r2, r3
   18d84:	bcs	18e04 <argp_failure@@Base+0xb90>
   18d88:	ldr	r3, [sl, #28]
   18d8c:	add	r2, r3, #1
   18d90:	str	r2, [sl, #28]
   18d94:	mov	r2, #45	; 0x2d
   18d98:	strb	r2, [r3]
   18d9c:	ldrb	r7, [r8]
   18da0:	ldr	r2, [sl, #28]
   18da4:	ldr	r3, [sl, #32]
   18da8:	cmp	r2, r3
   18dac:	bcs	18e1c <argp_failure@@Base+0xba8>
   18db0:	ldr	r3, [sl, #28]
   18db4:	add	r2, r3, #1
   18db8:	str	r2, [sl, #28]
   18dbc:	strb	r7, [r3]
   18dc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   18dc4:	cmp	r3, #0
   18dc8:	beq	18ddc <argp_failure@@Base+0xb68>
   18dcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18dd0:	ldr	r3, [r3]
   18dd4:	cmp	r3, #0
   18dd8:	beq	18e34 <argp_failure@@Base+0xbc0>
   18ddc:	ldr	r2, [r4, #8]
   18de0:	cmp	r2, #0
   18de4:	beq	18d60 <argp_failure@@Base+0xaec>
   18de8:	ldr	r3, [r4, #12]
   18dec:	tst	r3, #1
   18df0:	ldrne	r1, [fp, #-140]	; 0xffffff74
   18df4:	ldreq	r1, [fp, #-144]	; 0xffffff70
   18df8:	mov	r0, sl
   18dfc:	bl	1c300 <argp_parse@@Base+0x2410>
   18e00:	b	18d60 <argp_failure@@Base+0xaec>
   18e04:	mov	r1, #1
   18e08:	mov	r0, sl
   18e0c:	bl	1c200 <argp_parse@@Base+0x2310>
   18e10:	cmp	r0, #0
   18e14:	bne	18d88 <argp_failure@@Base+0xb14>
   18e18:	b	18d9c <argp_failure@@Base+0xb28>
   18e1c:	mov	r1, #1
   18e20:	mov	r0, sl
   18e24:	bl	1c200 <argp_parse@@Base+0x2310>
   18e28:	cmp	r0, #0
   18e2c:	bne	18db0 <argp_failure@@Base+0xb3c>
   18e30:	b	18dc0 <argp_failure@@Base+0xb4c>
   18e34:	ldr	r3, [r4, #8]
   18e38:	cmp	r3, #0
   18e3c:	movne	r3, #1
   18e40:	strne	r3, [fp, #-80]	; 0xffffffb0
   18e44:	b	18d60 <argp_failure@@Base+0xaec>
   18e48:	ldr	r9, [fp, #-136]	; 0xffffff78
   18e4c:	ldr	r3, [r4, #12]
   18e50:	tst	r3, #8
   18e54:	beq	18f2c <argp_failure@@Base+0xcb8>
   18e58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18e5c:	ldr	r5, [r3, #16]
   18e60:	ldr	r3, [sl, #28]
   18e64:	ldr	r2, [sl, #24]
   18e68:	sub	r3, r3, r2
   18e6c:	ldr	r2, [sl, #16]
   18e70:	cmp	r3, r2
   18e74:	bhi	18e90 <argp_failure@@Base+0xc1c>
   18e78:	str	r5, [sl, #12]
   18e7c:	ldr	r6, [r9, #4]
   18e80:	cmp	r6, #0
   18e84:	beq	18ff4 <argp_failure@@Base+0xd80>
   18e88:	add	r5, r4, #24
   18e8c:	b	18ec4 <argp_failure@@Base+0xc50>
   18e90:	mov	r0, sl
   18e94:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18e98:	b	18e78 <argp_failure@@Base+0xc04>
   18e9c:	mov	r2, r8
   18ea0:	mov	r1, r7
   18ea4:	ldr	r0, [sl, #28]
   18ea8:	bl	11714 <memcpy@plt>
   18eac:	ldr	r3, [sl, #28]
   18eb0:	add	r8, r3, r8
   18eb4:	str	r8, [sl, #28]
   18eb8:	add	r5, r5, #24
   18ebc:	subs	r6, r6, #1
   18ec0:	beq	18ff4 <argp_failure@@Base+0xd80>
   18ec4:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18ec8:	cmp	r3, #0
   18ecc:	beq	18eb8 <argp_failure@@Base+0xc44>
   18ed0:	ldr	r3, [r5, #-12]
   18ed4:	tst	r3, #2
   18ed8:	bne	18eb8 <argp_failure@@Base+0xc44>
   18edc:	sub	r1, fp, #76	; 0x4c
   18ee0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18ee4:	ldr	r0, [r3, #16]
   18ee8:	bl	170fc <daemon@@Base+0x133c>
   18eec:	ldr	r7, [r5, #-24]	; 0xffffffe8
   18ef0:	mov	r0, r7
   18ef4:	bl	118e8 <strlen@plt>
   18ef8:	subs	r8, r0, #0
   18efc:	beq	18eb8 <argp_failure@@Base+0xc44>
   18f00:	ldr	r3, [sl, #28]
   18f04:	add	r3, r3, r8
   18f08:	ldr	r2, [sl, #32]
   18f0c:	cmp	r2, r3
   18f10:	bcs	18e9c <argp_failure@@Base+0xc28>
   18f14:	mov	r1, r8
   18f18:	mov	r0, sl
   18f1c:	bl	1c200 <argp_parse@@Base+0x2310>
   18f20:	cmp	r0, #0
   18f24:	beq	18eb8 <argp_failure@@Base+0xc44>
   18f28:	b	18e9c <argp_failure@@Base+0xc28>
   18f2c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18f30:	ldr	r5, [r3, #12]
   18f34:	ldr	r3, [sl, #28]
   18f38:	ldr	r2, [sl, #24]
   18f3c:	sub	r3, r3, r2
   18f40:	ldr	r2, [sl, #16]
   18f44:	cmp	r3, r2
   18f48:	bhi	18f78 <argp_failure@@Base+0xd04>
   18f4c:	str	r5, [sl, #12]
   18f50:	ldr	r6, [r9, #4]
   18f54:	cmp	r6, #0
   18f58:	beq	18ff4 <argp_failure@@Base+0xd80>
   18f5c:	add	r5, r4, #24
   18f60:	movw	r8, #58572	; 0xe4cc
   18f64:	movt	r8, #1
   18f68:	movw	r7, #58588	; 0xe4dc
   18f6c:	movt	r7, #1
   18f70:	str	r7, [fp, #-112]	; 0xffffff90
   18f74:	b	18f90 <argp_failure@@Base+0xd1c>
   18f78:	mov	r0, sl
   18f7c:	bl	1bc88 <argp_parse@@Base+0x1d98>
   18f80:	b	18f4c <argp_failure@@Base+0xcd8>
   18f84:	add	r5, r5, #24
   18f88:	subs	r6, r6, #1
   18f8c:	beq	18ff4 <argp_failure@@Base+0xd80>
   18f90:	ldr	r3, [r5, #-24]	; 0xffffffe8
   18f94:	cmp	r3, #0
   18f98:	beq	18f84 <argp_failure@@Base+0xd10>
   18f9c:	ldr	r3, [r5, #-12]
   18fa0:	tst	r3, #2
   18fa4:	bne	18f84 <argp_failure@@Base+0xd10>
   18fa8:	sub	r1, fp, #76	; 0x4c
   18fac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18fb0:	ldr	r0, [r3, #12]
   18fb4:	bl	170fc <daemon@@Base+0x133c>
   18fb8:	ldr	r2, [r5, #-24]	; 0xffffffe8
   18fbc:	mov	r1, r8
   18fc0:	mov	r0, sl
   18fc4:	bl	1c300 <argp_parse@@Base+0x2410>
   18fc8:	ldr	r2, [r4, #8]
   18fcc:	cmp	r2, #0
   18fd0:	beq	18f84 <argp_failure@@Base+0xd10>
   18fd4:	ldr	r3, [r4, #12]
   18fd8:	tst	r3, #1
   18fdc:	movwne	r1, #58580	; 0xe4d4
   18fe0:	movtne	r1, #1
   18fe4:	ldreq	r1, [fp, #-112]	; 0xffffff90
   18fe8:	mov	r0, sl
   18fec:	bl	1c300 <argp_parse@@Base+0x2410>
   18ff0:	b	18f84 <argp_failure@@Base+0xd10>
   18ff4:	ldr	r3, [sl, #28]
   18ff8:	ldr	r2, [sl, #24]
   18ffc:	sub	r3, r3, r2
   19000:	ldr	r2, [sl, #16]
   19004:	cmp	r3, r2
   19008:	bhi	19074 <argp_failure@@Base+0xe00>
   1900c:	mov	r3, #0
   19010:	str	r3, [sl, #4]
   19014:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19018:	cmp	r3, #0
   1901c:	beq	19080 <argp_failure@@Base+0xe0c>
   19020:	ldr	r3, [r4, #12]
   19024:	tst	r3, #8
   19028:	bne	19054 <argp_failure@@Base+0xde0>
   1902c:	ldr	r5, [r4, #4]
   19030:	sub	r3, r5, #1
   19034:	cmp	r3, #254	; 0xfe
   19038:	bhi	19054 <argp_failure@@Base+0xde0>
   1903c:	bl	118c4 <__ctype_b_loc@plt>
   19040:	ldr	r3, [r0]
   19044:	lsl	r5, r5, #1
   19048:	ldrh	r3, [r3, r5]
   1904c:	tst	r3, #16384	; 0x4000
   19050:	bne	1925c <argp_failure@@Base+0xfe8>
   19054:	ldr	r3, [r4]
   19058:	cmp	r3, #0
   1905c:	bne	1925c <argp_failure@@Base+0xfe8>
   19060:	sub	r2, fp, #76	; 0x4c
   19064:	ldr	r1, [r9, #20]
   19068:	ldr	r0, [r4, #16]
   1906c:	bl	16ef4 <daemon@@Base+0x1134>
   19070:	b	19258 <argp_failure@@Base+0xfe4>
   19074:	mov	r0, sl
   19078:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1907c:	b	1900c <argp_failure@@Base+0xd98>
   19080:	ldr	r5, [r4, #16]
   19084:	ldr	r3, [fp, #-104]	; 0xffffff98
   19088:	ldr	r2, [r9, #20]
   1908c:	ldr	r1, [r4, #4]
   19090:	mov	r0, r5
   19094:	bl	1671c <daemon@@Base+0x95c>
   19098:	subs	r4, r0, #0
   1909c:	beq	19214 <argp_failure@@Base+0xfa0>
   190a0:	ldrb	r3, [r4]
   190a4:	cmp	r3, #0
   190a8:	beq	1920c <argp_failure@@Base+0xf98>
   190ac:	ldr	r3, [sl, #28]
   190b0:	ldr	r2, [sl, #24]
   190b4:	sub	r3, r3, r2
   190b8:	ldr	r2, [sl, #16]
   190bc:	cmp	r3, r2
   190c0:	bhi	1916c <argp_failure@@Base+0xef8>
   190c4:	ldr	r6, [sl, #20]
   190c8:	bic	r6, r6, r6, asr #31
   190cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   190d0:	ldr	r7, [r3, #20]
   190d4:	str	r7, [sl, #4]
   190d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   190dc:	ldr	r7, [r3, #20]
   190e0:	ldr	r3, [sl, #28]
   190e4:	ldr	r2, [sl, #24]
   190e8:	sub	r3, r3, r2
   190ec:	ldr	r2, [sl, #16]
   190f0:	cmp	r3, r2
   190f4:	bhi	191a8 <argp_failure@@Base+0xf34>
   190f8:	str	r7, [sl, #12]
   190fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19100:	ldr	r1, [r3, #20]
   19104:	add	r3, r1, #3
   19108:	cmp	r6, r3
   1910c:	bhi	191b4 <argp_failure@@Base+0xf40>
   19110:	cmp	r6, r1
   19114:	bcc	191f4 <argp_failure@@Base+0xf80>
   19118:	ldr	r3, [sl, #28]
   1911c:	add	r3, r3, #3
   19120:	ldr	r2, [sl, #32]
   19124:	cmp	r2, r3
   19128:	bcs	19140 <argp_failure@@Base+0xecc>
   1912c:	mov	r1, #3
   19130:	mov	r0, sl
   19134:	bl	1c200 <argp_parse@@Base+0x2310>
   19138:	cmp	r0, #0
   1913c:	beq	191fc <argp_failure@@Base+0xf88>
   19140:	ldr	r2, [sl, #28]
   19144:	movw	r3, #58592	; 0xe4e0
   19148:	movt	r3, #1
   1914c:	ldrh	r1, [r3]
   19150:	strh	r1, [r2]
   19154:	ldrb	r3, [r3, #2]
   19158:	strb	r3, [r2, #2]
   1915c:	ldr	r3, [sl, #28]
   19160:	add	r3, r3, #3
   19164:	str	r3, [sl, #28]
   19168:	b	191fc <argp_failure@@Base+0xf88>
   1916c:	mov	r0, sl
   19170:	bl	1bc88 <argp_parse@@Base+0x1d98>
   19174:	ldr	r6, [sl, #20]
   19178:	bic	r6, r6, r6, asr #31
   1917c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19180:	ldr	r7, [r3, #20]
   19184:	ldr	r3, [sl, #28]
   19188:	ldr	r2, [sl, #24]
   1918c:	sub	r3, r3, r2
   19190:	ldr	r2, [sl, #16]
   19194:	cmp	r3, r2
   19198:	bls	190d4 <argp_failure@@Base+0xe60>
   1919c:	mov	r0, sl
   191a0:	bl	1bc88 <argp_parse@@Base+0x1d98>
   191a4:	b	190d4 <argp_failure@@Base+0xe60>
   191a8:	mov	r0, sl
   191ac:	bl	1bc88 <argp_parse@@Base+0x1d98>
   191b0:	b	190f8 <argp_failure@@Base+0xe84>
   191b4:	ldr	r2, [sl, #28]
   191b8:	ldr	r3, [sl, #32]
   191bc:	cmp	r2, r3
   191c0:	bcs	191dc <argp_failure@@Base+0xf68>
   191c4:	ldr	r3, [sl, #28]
   191c8:	add	r2, r3, #1
   191cc:	str	r2, [sl, #28]
   191d0:	mov	r2, #10
   191d4:	strb	r2, [r3]
   191d8:	b	191fc <argp_failure@@Base+0xf88>
   191dc:	mov	r1, #1
   191e0:	mov	r0, sl
   191e4:	bl	1c200 <argp_parse@@Base+0x2310>
   191e8:	cmp	r0, #0
   191ec:	bne	191c4 <argp_failure@@Base+0xf50>
   191f0:	b	191fc <argp_failure@@Base+0xf88>
   191f4:	mov	r0, sl
   191f8:	bl	16a6c <daemon@@Base+0xcac>
   191fc:	mov	r0, r4
   19200:	bl	118e8 <strlen@plt>
   19204:	subs	r6, r0, #0
   19208:	bne	19334 <argp_failure@@Base+0x10c0>
   1920c:	cmp	r5, r4
   19210:	bne	1937c <argp_failure@@Base+0x1108>
   19214:	ldr	r3, [sl, #28]
   19218:	ldr	r2, [sl, #24]
   1921c:	sub	r3, r3, r2
   19220:	ldr	r2, [sl, #16]
   19224:	cmp	r3, r2
   19228:	bhi	19388 <argp_failure@@Base+0x1114>
   1922c:	mov	r3, #0
   19230:	str	r3, [sl, #4]
   19234:	ldr	r2, [sl, #28]
   19238:	ldr	r3, [sl, #32]
   1923c:	cmp	r2, r3
   19240:	bcs	19394 <argp_failure@@Base+0x1120>
   19244:	ldr	r3, [sl, #28]
   19248:	add	r2, r3, #1
   1924c:	str	r2, [sl, #28]
   19250:	mov	r2, #10
   19254:	strb	r2, [r3]
   19258:	str	r9, [fp, #-88]	; 0xffffffa8
   1925c:	ldr	r3, [sl, #28]
   19260:	ldr	r2, [sl, #24]
   19264:	sub	r3, r3, r2
   19268:	ldr	r2, [sl, #16]
   1926c:	cmp	r3, r2
   19270:	bhi	193ac <argp_failure@@Base+0x1138>
   19274:	ldr	r3, [fp, #-120]	; 0xffffff88
   19278:	str	r3, [sl, #4]
   1927c:	ldr	r3, [sl, #28]
   19280:	ldr	r2, [sl, #24]
   19284:	sub	r3, r3, r2
   19288:	ldr	r2, [sl, #16]
   1928c:	cmp	r3, r2
   19290:	bhi	193b8 <argp_failure@@Base+0x1144>
   19294:	ldr	r3, [fp, #-124]	; 0xffffff84
   19298:	str	r3, [sl, #12]
   1929c:	add	r9, r9, #28
   192a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   192a4:	subs	r3, r3, #1
   192a8:	str	r3, [fp, #-116]	; 0xffffff8c
   192ac:	beq	193c4 <argp_failure@@Base+0x1150>
   192b0:	ldr	r4, [r9]
   192b4:	ldr	r8, [r9, #8]
   192b8:	ldr	r3, [sl, #28]
   192bc:	ldr	r2, [sl, #24]
   192c0:	sub	r3, r3, r2
   192c4:	ldr	r2, [sl, #16]
   192c8:	cmp	r3, r2
   192cc:	bhi	18cd8 <argp_failure@@Base+0xa64>
   192d0:	ldr	r3, [sl, #4]
   192d4:	str	r3, [fp, #-120]	; 0xffffff88
   192d8:	mov	r3, #0
   192dc:	str	r3, [sl, #4]
   192e0:	ldr	r3, [sl, #12]
   192e4:	str	r3, [fp, #-124]	; 0xffffff84
   192e8:	str	r9, [fp, #-76]	; 0xffffffb4
   192ec:	str	sl, [fp, #-72]	; 0xffffffb8
   192f0:	sub	r3, fp, #88	; 0x58
   192f4:	str	r3, [fp, #-68]	; 0xffffffbc
   192f8:	mov	r3, #1
   192fc:	str	r3, [fp, #-64]	; 0xffffffc0
   19300:	ldr	r3, [fp, #-104]	; 0xffffff98
   19304:	str	r3, [fp, #-60]	; 0xffffffc4
   19308:	ldr	r3, [r4, #12]
   1930c:	ands	r3, r3, #8
   19310:	str	r3, [fp, #-112]	; 0xffffff90
   19314:	movne	r3, #0
   19318:	strne	r3, [fp, #-112]	; 0xffffff90
   1931c:	bne	18d10 <argp_failure@@Base+0xa9c>
   19320:	ldr	r2, [r9, #4]
   19324:	cmp	r2, #0
   19328:	beq	18d10 <argp_failure@@Base+0xa9c>
   1932c:	add	r3, r4, #24
   19330:	b	18cf0 <argp_failure@@Base+0xa7c>
   19334:	ldr	r3, [sl, #28]
   19338:	add	r3, r3, r6
   1933c:	ldr	r2, [sl, #32]
   19340:	cmp	r2, r3
   19344:	bcs	1935c <argp_failure@@Base+0x10e8>
   19348:	mov	r1, r6
   1934c:	mov	r0, sl
   19350:	bl	1c200 <argp_parse@@Base+0x2310>
   19354:	cmp	r0, #0
   19358:	beq	1920c <argp_failure@@Base+0xf98>
   1935c:	mov	r2, r6
   19360:	mov	r1, r4
   19364:	ldr	r0, [sl, #28]
   19368:	bl	11714 <memcpy@plt>
   1936c:	ldr	r3, [sl, #28]
   19370:	add	r6, r3, r6
   19374:	str	r6, [sl, #28]
   19378:	b	1920c <argp_failure@@Base+0xf98>
   1937c:	mov	r0, r4
   19380:	bl	1ae34 <argp_parse@@Base+0xf44>
   19384:	b	19214 <argp_failure@@Base+0xfa0>
   19388:	mov	r0, sl
   1938c:	bl	1bc88 <argp_parse@@Base+0x1d98>
   19390:	b	1922c <argp_failure@@Base+0xfb8>
   19394:	mov	r1, #1
   19398:	mov	r0, sl
   1939c:	bl	1c200 <argp_parse@@Base+0x2310>
   193a0:	cmp	r0, #0
   193a4:	bne	19244 <argp_failure@@Base+0xfd0>
   193a8:	b	19258 <argp_failure@@Base+0xfe4>
   193ac:	mov	r0, sl
   193b0:	bl	1bc88 <argp_parse@@Base+0x1d98>
   193b4:	b	19274 <argp_failure@@Base+0x1000>
   193b8:	mov	r0, sl
   193bc:	bl	1bc88 <argp_parse@@Base+0x1d98>
   193c0:	b	19294 <argp_failure@@Base+0x1020>
   193c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   193c8:	cmp	r3, #0
   193cc:	beq	19430 <argp_failure@@Base+0x11bc>
   193d0:	movw	r3, #62844	; 0xf57c
   193d4:	movt	r3, #2
   193d8:	ldr	r3, [r3, #4]
   193dc:	cmp	r3, #0
   193e0:	beq	19430 <argp_failure@@Base+0x11bc>
   193e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   193e8:	cmp	r3, #0
   193ec:	ldrne	r2, [r3]
   193f0:	ldreq	r2, [fp, #-104]	; 0xffffff98
   193f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   193f8:	mov	r1, #5
   193fc:	movt	r1, #512	; 0x200
   19400:	movw	r0, #58596	; 0xe4e4
   19404:	movt	r0, #1
   19408:	bl	1671c <daemon@@Base+0x95c>
   1940c:	subs	r4, r0, #0
   19410:	beq	19430 <argp_failure@@Base+0x11bc>
   19414:	ldrb	r3, [r4]
   19418:	cmp	r3, #0
   1941c:	bne	194c4 <argp_failure@@Base+0x1250>
   19420:	movw	r3, #58596	; 0xe4e4
   19424:	movt	r3, #1
   19428:	cmp	r4, r3
   1942c:	bne	19598 <argp_failure@@Base+0x1324>
   19430:	mov	r4, #1
   19434:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19438:	tst	r3, #32
   1943c:	bne	195a4 <argp_failure@@Base+0x1330>
   19440:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19444:	tst	r3, #64	; 0x40
   19448:	beq	19484 <argp_failure@@Base+0x1210>
   1944c:	movw	r3, #140	; 0x8c
   19450:	movt	r3, #3
   19454:	ldr	r3, [r3]
   19458:	cmp	r3, #0
   1945c:	beq	19484 <argp_failure@@Base+0x1210>
   19460:	cmp	r4, #0
   19464:	bne	195cc <argp_failure@@Base+0x1358>
   19468:	movw	r3, #140	; 0x8c
   1946c:	movt	r3, #3
   19470:	ldr	r2, [r3]
   19474:	movw	r1, #58712	; 0xe558
   19478:	movt	r1, #1
   1947c:	mov	r0, sl
   19480:	bl	1c300 <argp_parse@@Base+0x2410>
   19484:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19488:	bl	117d4 <funlockfile@plt>
   1948c:	ldr	r3, [fp, #-128]	; 0xffffff80
   19490:	cmp	r3, #0
   19494:	beq	194a0 <argp_failure@@Base+0x122c>
   19498:	mov	r0, r3
   1949c:	bl	16594 <daemon@@Base+0x7d4>
   194a0:	mov	r0, sl
   194a4:	bl	1c1b4 <argp_parse@@Base+0x22c4>
   194a8:	sub	sp, fp, #32
   194ac:	ldrd	r4, [sp]
   194b0:	ldrd	r6, [sp, #8]
   194b4:	ldrd	r8, [sp, #16]
   194b8:	ldrd	sl, [sp, #24]
   194bc:	add	sp, sp, #32
   194c0:	pop	{pc}		; (ldr pc, [sp], #4)
   194c4:	ldr	r2, [sl, #28]
   194c8:	ldr	r3, [sl, #32]
   194cc:	cmp	r2, r3
   194d0:	bcs	19520 <argp_failure@@Base+0x12ac>
   194d4:	ldr	r3, [sl, #28]
   194d8:	add	r2, r3, #1
   194dc:	str	r2, [sl, #28]
   194e0:	mov	r2, #10
   194e4:	strb	r2, [r3]
   194e8:	mov	r0, r4
   194ec:	bl	118e8 <strlen@plt>
   194f0:	subs	r5, r0, #0
   194f4:	bne	19538 <argp_failure@@Base+0x12c4>
   194f8:	ldr	r2, [sl, #28]
   194fc:	ldr	r3, [sl, #32]
   19500:	cmp	r2, r3
   19504:	bcs	19580 <argp_failure@@Base+0x130c>
   19508:	ldr	r3, [sl, #28]
   1950c:	add	r2, r3, #1
   19510:	str	r2, [sl, #28]
   19514:	mov	r2, #10
   19518:	strb	r2, [r3]
   1951c:	b	19420 <argp_failure@@Base+0x11ac>
   19520:	mov	r1, #1
   19524:	mov	r0, sl
   19528:	bl	1c200 <argp_parse@@Base+0x2310>
   1952c:	cmp	r0, #0
   19530:	bne	194d4 <argp_failure@@Base+0x1260>
   19534:	b	194e8 <argp_failure@@Base+0x1274>
   19538:	ldr	r3, [sl, #28]
   1953c:	add	r3, r3, r5
   19540:	ldr	r2, [sl, #32]
   19544:	cmp	r2, r3
   19548:	bcs	19560 <argp_failure@@Base+0x12ec>
   1954c:	mov	r1, r5
   19550:	mov	r0, sl
   19554:	bl	1c200 <argp_parse@@Base+0x2310>
   19558:	cmp	r0, #0
   1955c:	beq	194f8 <argp_failure@@Base+0x1284>
   19560:	mov	r2, r5
   19564:	mov	r1, r4
   19568:	ldr	r0, [sl, #28]
   1956c:	bl	11714 <memcpy@plt>
   19570:	ldr	r3, [sl, #28]
   19574:	add	r5, r3, r5
   19578:	str	r5, [sl, #28]
   1957c:	b	194f8 <argp_failure@@Base+0x1284>
   19580:	mov	r1, #1
   19584:	mov	r0, sl
   19588:	bl	1c200 <argp_parse@@Base+0x2310>
   1958c:	cmp	r0, #0
   19590:	bne	19508 <argp_failure@@Base+0x1294>
   19594:	b	19420 <argp_failure@@Base+0x11ac>
   19598:	mov	r0, r4
   1959c:	bl	1ae34 <argp_parse@@Base+0xf44>
   195a0:	b	19430 <argp_failure@@Base+0x11bc>
   195a4:	str	sl, [sp, #4]
   195a8:	mov	r3, #0
   195ac:	str	r3, [sp]
   195b0:	mov	r3, r4
   195b4:	mov	r2, #1
   195b8:	ldr	r1, [fp, #-104]	; 0xffffff98
   195bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   195c0:	bl	172a0 <daemon@@Base+0x14e0>
   195c4:	orr	r4, r4, r0
   195c8:	b	19440 <argp_failure@@Base+0x11cc>
   195cc:	ldr	r2, [sl, #28]
   195d0:	ldr	r3, [sl, #32]
   195d4:	cmp	r2, r3
   195d8:	bcs	195f4 <argp_failure@@Base+0x1380>
   195dc:	ldr	r3, [sl, #28]
   195e0:	add	r2, r3, #1
   195e4:	str	r2, [sl, #28]
   195e8:	mov	r2, #10
   195ec:	strb	r2, [r3]
   195f0:	b	19468 <argp_failure@@Base+0x11f4>
   195f4:	mov	r1, #1
   195f8:	mov	r0, sl
   195fc:	bl	1c200 <argp_parse@@Base+0x2310>
   19600:	cmp	r0, #0
   19604:	bne	195dc <argp_failure@@Base+0x1368>
   19608:	b	19468 <argp_failure@@Base+0x11f4>
   1960c:	ldrb	r3, [r6]
   19610:	mov	r4, r6
   19614:	mov	r7, #0
   19618:	b	1867c <argp_failure@@Base+0x408>
   1961c:	ldrb	r3, [r8]
   19620:	cmp	r3, r7
   19624:	beq	18d58 <argp_failure@@Base+0xae4>
   19628:	add	r5, r5, #24
   1962c:	subs	r6, r6, #1
   19630:	beq	18e48 <argp_failure@@Base+0xbd4>
   19634:	ldr	r9, [r5, #12]
   19638:	tst	r9, #8
   1963c:	bne	19628 <argp_failure@@Base+0x13b4>
   19640:	ldr	r7, [r5, #4]
   19644:	sub	r3, r7, #1
   19648:	cmp	r3, #254	; 0xfe
   1964c:	bhi	19628 <argp_failure@@Base+0x13b4>
   19650:	bl	118c4 <__ctype_b_loc@plt>
   19654:	ldr	r2, [r0]
   19658:	lsl	r3, r7, #1
   1965c:	ldrh	r3, [r2, r3]
   19660:	tst	r3, #16384	; 0x4000
   19664:	bne	1961c <argp_failure@@Base+0x13a8>
   19668:	b	19628 <argp_failure@@Base+0x13b4>
   1966c:	ldrdeq	lr, [r1], -r0

00019670 <argp_help@@Base>:
   19670:	push	{lr}		; (str lr, [sp, #-4]!)
   19674:	sub	sp, sp, #12
   19678:	str	r3, [sp]
   1967c:	mov	r3, r2
   19680:	mov	r2, r1
   19684:	mov	r1, #0
   19688:	bl	18490 <argp_failure@@Base+0x21c>
   1968c:	add	sp, sp, #12
   19690:	pop	{pc}		; (ldr pc, [sp], #4)

00019694 <argp_state_help@@Base>:
   19694:	strd	r4, [sp, #-12]!
   19698:	str	lr, [sp, #8]
   1969c:	sub	sp, sp, #12
   196a0:	mov	r5, r2
   196a4:	subs	r4, r0, #0
   196a8:	beq	196c8 <argp_state_help@@Base+0x34>
   196ac:	ldr	r3, [r4, #16]
   196b0:	tst	r3, #2
   196b4:	beq	19708 <argp_state_help@@Base+0x74>
   196b8:	add	sp, sp, #12
   196bc:	ldrd	r4, [sp]
   196c0:	add	sp, sp, #8
   196c4:	pop	{pc}		; (ldr pc, [sp], #4)
   196c8:	cmp	r1, #0
   196cc:	beq	196b8 <argp_state_help@@Base+0x24>
   196d0:	movw	r3, #62904	; 0xf5b8
   196d4:	movt	r3, #2
   196d8:	ldr	r3, [r3]
   196dc:	str	r3, [sp]
   196e0:	mov	r3, r2
   196e4:	mov	r2, r1
   196e8:	mov	r1, #0
   196ec:	mov	r0, r1
   196f0:	bl	18490 <argp_failure@@Base+0x21c>
   196f4:	b	19744 <argp_state_help@@Base+0xb0>
   196f8:	movw	r3, #62884	; 0xf5a4
   196fc:	movt	r3, #2
   19700:	ldr	r0, [r3]
   19704:	bl	118dc <exit@plt>
   19708:	cmp	r1, #0
   1970c:	beq	196b8 <argp_state_help@@Base+0x24>
   19710:	ldr	r3, [r4, #16]
   19714:	tst	r3, #64	; 0x40
   19718:	orrne	r5, r5, #128	; 0x80
   1971c:	ldr	r3, [r4, #40]	; 0x28
   19720:	str	r3, [sp]
   19724:	mov	r3, r5
   19728:	mov	r2, r1
   1972c:	mov	r1, r4
   19730:	ldr	r0, [r4]
   19734:	bl	18490 <argp_failure@@Base+0x21c>
   19738:	ldr	r3, [r4, #16]
   1973c:	tst	r3, #32
   19740:	bne	196b8 <argp_state_help@@Base+0x24>
   19744:	tst	r5, #256	; 0x100
   19748:	bne	196f8 <argp_state_help@@Base+0x64>
   1974c:	tst	r5, #512	; 0x200
   19750:	beq	196b8 <argp_state_help@@Base+0x24>
   19754:	mov	r0, #0
   19758:	bl	118dc <exit@plt>

0001975c <argp_error@@Base>:
   1975c:	push	{r1, r2, r3}
   19760:	strd	r4, [sp, #-12]!
   19764:	str	lr, [sp, #8]
   19768:	sub	sp, sp, #8
   1976c:	subs	r5, r0, #0
   19770:	beq	19848 <argp_error@@Base+0xec>
   19774:	ldr	r3, [r5, #16]
   19778:	tst	r3, #2
   1977c:	bne	19830 <argp_error@@Base+0xd4>
   19780:	ldr	r4, [r5, #44]	; 0x2c
   19784:	cmp	r4, #0
   19788:	beq	19830 <argp_error@@Base+0xd4>
   1978c:	mov	r0, r4
   19790:	bl	11a20 <flockfile@plt>
   19794:	add	r3, sp, #24
   19798:	str	r3, [sp, #4]
   1979c:	ldr	r0, [r5, #40]	; 0x28
   197a0:	mov	r1, r4
   197a4:	bl	1163c <fputs_unlocked@plt>
   197a8:	ldr	r3, [r4, #20]
   197ac:	ldr	r2, [r4, #24]
   197b0:	cmp	r3, r2
   197b4:	addcc	r2, r3, #1
   197b8:	strcc	r2, [r4, #20]
   197bc:	movcc	r2, #58	; 0x3a
   197c0:	strbcc	r2, [r3]
   197c4:	bcs	1987c <argp_error@@Base+0x120>
   197c8:	ldr	r3, [r4, #20]
   197cc:	ldr	r2, [r4, #24]
   197d0:	cmp	r3, r2
   197d4:	addcc	r2, r3, #1
   197d8:	strcc	r2, [r4, #20]
   197dc:	movcc	r2, #32
   197e0:	strbcc	r2, [r3]
   197e4:	bcs	1988c <argp_error@@Base+0x130>
   197e8:	ldr	r2, [sp, #4]
   197ec:	ldr	r1, [sp, #20]
   197f0:	mov	r0, r4
   197f4:	bl	119fc <vfprintf@plt>
   197f8:	ldr	r3, [r4, #20]
   197fc:	ldr	r2, [r4, #24]
   19800:	cmp	r3, r2
   19804:	addcc	r2, r3, #1
   19808:	strcc	r2, [r4, #20]
   1980c:	movcc	r2, #10
   19810:	strbcc	r2, [r3]
   19814:	bcs	1989c <argp_error@@Base+0x140>
   19818:	mov	r2, #260	; 0x104
   1981c:	mov	r1, r4
   19820:	mov	r0, r5
   19824:	bl	19694 <argp_state_help@@Base>
   19828:	mov	r0, r4
   1982c:	bl	117d4 <funlockfile@plt>
   19830:	add	sp, sp, #8
   19834:	ldrd	r4, [sp]
   19838:	ldr	lr, [sp, #8]
   1983c:	add	sp, sp, #12
   19840:	add	sp, sp, #12
   19844:	bx	lr
   19848:	movw	r3, #62912	; 0xf5c0
   1984c:	movt	r3, #2
   19850:	ldr	r4, [r3]
   19854:	cmp	r4, #0
   19858:	beq	19830 <argp_error@@Base+0xd4>
   1985c:	mov	r0, r4
   19860:	bl	11a20 <flockfile@plt>
   19864:	add	r3, sp, #24
   19868:	str	r3, [sp, #4]
   1986c:	movw	r3, #62904	; 0xf5b8
   19870:	movt	r3, #2
   19874:	ldr	r0, [r3]
   19878:	b	197a0 <argp_error@@Base+0x44>
   1987c:	mov	r1, #58	; 0x3a
   19880:	mov	r0, r4
   19884:	bl	119c0 <__overflow@plt>
   19888:	b	197c8 <argp_error@@Base+0x6c>
   1988c:	mov	r1, #32
   19890:	mov	r0, r4
   19894:	bl	119c0 <__overflow@plt>
   19898:	b	197e8 <argp_error@@Base+0x8c>
   1989c:	mov	r1, #10
   198a0:	mov	r0, r4
   198a4:	bl	119c0 <__overflow@plt>
   198a8:	b	19818 <argp_error@@Base+0xbc>
   198ac:	ldr	ip, [r0]
   198b0:	cmp	ip, #0
   198b4:	beq	1991c <argp_error@@Base+0x1c0>
   198b8:	strd	r4, [sp, #-16]!
   198bc:	str	r6, [sp, #8]
   198c0:	str	lr, [sp, #12]
   198c4:	mov	ip, r2
   198c8:	mov	r5, r1
   198cc:	mov	r4, r0
   198d0:	ldr	r2, [r0, #32]
   198d4:	str	r2, [r1, #36]	; 0x24
   198d8:	ldr	r2, [r0, #24]
   198dc:	str	r2, [r1, #28]
   198e0:	ldr	r2, [r0, #28]
   198e4:	str	r2, [r1, #32]
   198e8:	ldr	r2, [r0, #12]
   198ec:	str	r2, [r1, #20]
   198f0:	ldr	r6, [r0]
   198f4:	mov	r2, r1
   198f8:	mov	r1, r3
   198fc:	mov	r0, ip
   19900:	blx	r6
   19904:	ldr	r3, [r5, #36]	; 0x24
   19908:	str	r3, [r4, #32]
   1990c:	ldrd	r4, [sp]
   19910:	ldr	r6, [sp, #8]
   19914:	add	sp, sp, #12
   19918:	pop	{pc}		; (ldr pc, [sp], #4)
   1991c:	mov	r0, #7
   19920:	bx	lr
   19924:	strd	r4, [sp, #-16]!
   19928:	str	r6, [sp, #8]
   1992c:	str	lr, [sp, #12]
   19930:	ldr	r5, [r0, #16]
   19934:	ldr	r3, [r0]
   19938:	cmp	r3, #0
   1993c:	beq	19954 <argp_error@@Base+0x1f8>
   19940:	ldr	r2, [r1, #8]
   19944:	add	r2, r2, #1
   19948:	str	r2, [r1, #8]
   1994c:	mov	r2, #0
   19950:	b	19974 <argp_error@@Base+0x218>
   19954:	ldr	r3, [r0, #4]
   19958:	cmp	r3, #0
   1995c:	beq	199c4 <argp_error@@Base+0x268>
   19960:	ldr	r3, [r1, #8]
   19964:	add	r3, r3, #1
   19968:	str	r3, [r1, #8]
   1996c:	b	199c4 <argp_error@@Base+0x268>
   19970:	add	r2, r2, #1
   19974:	add	r3, r3, #24
   19978:	ldr	r0, [r3, #-20]	; 0xffffffec
   1997c:	cmp	r0, #0
   19980:	bne	19970 <argp_error@@Base+0x214>
   19984:	ldr	r0, [r3, #-24]	; 0xffffffe8
   19988:	cmp	r0, #0
   1998c:	bne	19970 <argp_error@@Base+0x214>
   19990:	ldr	r0, [r3, #-8]
   19994:	cmp	r0, #0
   19998:	bne	19970 <argp_error@@Base+0x214>
   1999c:	ldr	r0, [r3, #-4]
   199a0:	cmp	r0, #0
   199a4:	bne	19970 <argp_error@@Base+0x214>
   199a8:	add	r0, r2, r2, lsl #1
   199ac:	ldr	r3, [r1]
   199b0:	add	r3, r3, r0
   199b4:	str	r3, [r1]
   199b8:	ldr	r3, [r1, #4]
   199bc:	add	r2, r3, r2
   199c0:	str	r2, [r1, #4]
   199c4:	cmp	r5, #0
   199c8:	beq	199fc <argp_error@@Base+0x2a0>
   199cc:	ldr	r0, [r5]
   199d0:	cmp	r0, #0
   199d4:	beq	199fc <argp_error@@Base+0x2a0>
   199d8:	mov	r4, r1
   199dc:	mov	r1, r4
   199e0:	bl	19924 <argp_error@@Base+0x1c8>
   199e4:	ldr	r3, [r4, #12]
   199e8:	add	r3, r3, #1
   199ec:	str	r3, [r4, #12]
   199f0:	ldr	r0, [r5, #16]!
   199f4:	cmp	r0, #0
   199f8:	bne	199dc <argp_error@@Base+0x280>
   199fc:	ldrd	r4, [sp]
   19a00:	ldr	r6, [sp, #8]
   19a04:	add	sp, sp, #12
   19a08:	pop	{pc}		; (ldr pc, [sp], #4)
   19a0c:	cmp	r0, #86	; 0x56
   19a10:	beq	19a1c <argp_error@@Base+0x2c0>
   19a14:	mov	r0, #7
   19a18:	bx	lr
   19a1c:	str	r4, [sp, #-8]!
   19a20:	str	lr, [sp, #4]
   19a24:	mov	r4, r2
   19a28:	movw	r3, #64004	; 0xfa04
   19a2c:	movt	r3, #2
   19a30:	ldr	r3, [r3]
   19a34:	cmp	r3, #0
   19a38:	beq	19a64 <argp_error@@Base+0x308>
   19a3c:	mov	r1, r2
   19a40:	ldr	r0, [r2, #48]	; 0x30
   19a44:	blx	r3
   19a48:	ldr	r3, [r4, #16]
   19a4c:	tst	r3, #32
   19a50:	beq	19aa8 <argp_error@@Base+0x34c>
   19a54:	mov	r0, #0
   19a58:	ldr	r4, [sp]
   19a5c:	add	sp, sp, #4
   19a60:	pop	{pc}		; (ldr pc, [sp], #4)
   19a64:	movw	r3, #144	; 0x90
   19a68:	movt	r3, #3
   19a6c:	ldr	r2, [r3]
   19a70:	cmp	r2, #0
   19a74:	beq	19a8c <argp_error@@Base+0x330>
   19a78:	movw	r1, #59400	; 0xe808
   19a7c:	movt	r1, #1
   19a80:	ldr	r0, [r4, #48]	; 0x30
   19a84:	bl	1190c <fprintf@plt>
   19a88:	b	19a48 <argp_error@@Base+0x2ec>
   19a8c:	movw	r2, #59012	; 0xe684
   19a90:	movt	r2, #1
   19a94:	movw	r1, #57768	; 0xe1a8
   19a98:	movt	r1, #1
   19a9c:	mov	r0, r4
   19aa0:	bl	1975c <argp_error@@Base>
   19aa4:	b	19a48 <argp_error@@Base+0x2ec>
   19aa8:	mov	r0, #0
   19aac:	bl	118dc <exit@plt>
   19ab0:	strd	r4, [sp, #-16]!
   19ab4:	str	r6, [sp, #8]
   19ab8:	str	lr, [sp, #12]
   19abc:	mov	r4, r2
   19ac0:	cmn	r0, #3
   19ac4:	beq	19b7c <argp_error@@Base+0x420>
   19ac8:	mov	r5, r1
   19acc:	ble	19b08 <argp_error@@Base+0x3ac>
   19ad0:	cmn	r0, #2
   19ad4:	beq	19b94 <argp_error@@Base+0x438>
   19ad8:	cmp	r0, #63	; 0x3f
   19adc:	movne	r0, #7
   19ae0:	bne	19af8 <argp_error@@Base+0x39c>
   19ae4:	movw	r2, #634	; 0x27a
   19ae8:	ldr	r1, [r4, #48]	; 0x30
   19aec:	mov	r0, r4
   19af0:	bl	19694 <argp_state_help@@Base>
   19af4:	mov	r0, #0
   19af8:	ldrd	r4, [sp]
   19afc:	ldr	r6, [sp, #8]
   19b00:	add	sp, sp, #12
   19b04:	pop	{pc}		; (ldr pc, [sp], #4)
   19b08:	cmn	r0, #4
   19b0c:	movne	r0, #7
   19b10:	bne	19af8 <argp_error@@Base+0x39c>
   19b14:	movw	r0, #59048	; 0xe6a8
   19b18:	movt	r0, #1
   19b1c:	mov	r2, #10
   19b20:	mov	r1, #0
   19b24:	cmp	r5, r1
   19b28:	movne	r0, r5
   19b2c:	bl	11660 <strtol@plt>
   19b30:	movw	r3, #64000	; 0xfa00
   19b34:	movt	r3, #2
   19b38:	str	r0, [r3]
   19b3c:	ldr	r2, [r3]
   19b40:	sub	r1, r2, #1
   19b44:	str	r1, [r3]
   19b48:	cmp	r2, #0
   19b4c:	ble	19bdc <argp_error@@Base+0x480>
   19b50:	mov	r5, #1
   19b54:	mov	r4, r3
   19b58:	mov	r0, r5
   19b5c:	bl	11744 <sleep@plt>
   19b60:	ldr	r3, [r4]
   19b64:	sub	r2, r3, #1
   19b68:	str	r2, [r4]
   19b6c:	cmp	r3, #0
   19b70:	bgt	19b58 <argp_error@@Base+0x3fc>
   19b74:	mov	r0, #0
   19b78:	b	19af8 <argp_error@@Base+0x39c>
   19b7c:	movw	r2, #513	; 0x201
   19b80:	ldr	r1, [r4, #48]	; 0x30
   19b84:	mov	r0, r4
   19b88:	bl	19694 <argp_state_help@@Base>
   19b8c:	mov	r0, #0
   19b90:	b	19af8 <argp_error@@Base+0x39c>
   19b94:	movw	r3, #62908	; 0xf5bc
   19b98:	movt	r3, #2
   19b9c:	str	r1, [r3]
   19ba0:	mov	r0, r1
   19ba4:	bl	1ab04 <argp_parse@@Base+0xc14>
   19ba8:	str	r0, [r4, #40]	; 0x28
   19bac:	movw	r3, #62904	; 0xf5b8
   19bb0:	movt	r3, #2
   19bb4:	str	r0, [r3]
   19bb8:	ldr	r3, [r4, #16]
   19bbc:	and	r3, r3, #3
   19bc0:	cmp	r3, #1
   19bc4:	movne	r0, #0
   19bc8:	bne	19af8 <argp_error@@Base+0x39c>
   19bcc:	ldr	r3, [r4, #8]
   19bd0:	str	r5, [r3]
   19bd4:	mov	r0, #0
   19bd8:	b	19af8 <argp_error@@Base+0x39c>
   19bdc:	mov	r0, #0
   19be0:	b	19af8 <argp_error@@Base+0x39c>
   19be4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19be8:	strd	r6, [sp, #8]
   19bec:	strd	r8, [sp, #16]
   19bf0:	strd	sl, [sp, #24]
   19bf4:	str	lr, [sp, #32]
   19bf8:	sub	sp, sp, #36	; 0x24
   19bfc:	str	r0, [sp, #16]
   19c00:	str	r1, [sp, #20]
   19c04:	str	r2, [sp, #24]
   19c08:	str	r3, [sp, #8]
   19c0c:	ldr	r8, [sp, #72]	; 0x48
   19c10:	ldr	r6, [r0]
   19c14:	ldr	sl, [r0, #16]
   19c18:	cmp	r6, #0
   19c1c:	beq	19c38 <argp_error@@Base+0x4dc>
   19c20:	mov	r4, r6
   19c24:	movw	r3, #36409	; 0x8e39
   19c28:	movt	r3, #14563	; 0x38e3
   19c2c:	str	r3, [sp, #12]
   19c30:	str	sl, [sp, #28]
   19c34:	b	19c7c <argp_error@@Base+0x520>
   19c38:	ldr	r3, [r0, #4]
   19c3c:	cmp	r3, #0
   19c40:	bne	19e08 <argp_error@@Base+0x6ac>
   19c44:	ldr	r0, [sp, #8]
   19c48:	str	r6, [sp, #8]
   19c4c:	b	19e8c <argp_error@@Base+0x730>
   19c50:	ldr	r0, [r7, #16]!
   19c54:	cmp	r0, #0
   19c58:	beq	19d5c <argp_error@@Base+0x600>
   19c5c:	mov	r1, r9
   19c60:	bl	11654 <strcmp@plt>
   19c64:	cmp	r0, #0
   19c68:	bne	19c50 <argp_error@@Base+0x4f4>
   19c6c:	sub	sl, r7, fp
   19c70:	cmp	sl, #0
   19c74:	blt	19d5c <argp_error@@Base+0x600>
   19c78:	add	r4, r4, #24
   19c7c:	ldr	r7, [r4, #4]
   19c80:	cmp	r7, #0
   19c84:	bne	19c94 <argp_error@@Base+0x538>
   19c88:	ldr	r3, [r4]
   19c8c:	cmp	r3, #0
   19c90:	beq	19dec <argp_error@@Base+0x690>
   19c94:	ldr	r3, [r4, #12]
   19c98:	and	r2, r3, #4
   19c9c:	cmp	r2, #0
   19ca0:	moveq	r6, r4
   19ca4:	ldr	r5, [r6, #12]
   19ca8:	ands	r5, r5, #8
   19cac:	bne	19c78 <argp_error@@Base+0x51c>
   19cb0:	tst	r3, #8
   19cb4:	bne	19d34 <argp_error@@Base+0x5d8>
   19cb8:	sub	r3, r7, #1
   19cbc:	cmp	r3, #254	; 0xfe
   19cc0:	bhi	19d34 <argp_error@@Base+0x5d8>
   19cc4:	bl	118c4 <__ctype_b_loc@plt>
   19cc8:	ldr	r2, [r0]
   19ccc:	lsl	r3, r7, #1
   19cd0:	ldrh	r3, [r2, r3]
   19cd4:	tst	r3, #16384	; 0x4000
   19cd8:	beq	19d34 <argp_error@@Base+0x5d8>
   19cdc:	ldr	r3, [r8, #4]
   19ce0:	add	r2, r3, #1
   19ce4:	str	r2, [r8, #4]
   19ce8:	strb	r7, [r3]
   19cec:	ldr	r3, [r6, #8]
   19cf0:	cmp	r3, #0
   19cf4:	beq	19d28 <argp_error@@Base+0x5cc>
   19cf8:	ldr	r3, [r8, #4]
   19cfc:	add	r2, r3, #1
   19d00:	str	r2, [r8, #4]
   19d04:	mov	r1, #58	; 0x3a
   19d08:	strb	r1, [r3]
   19d0c:	ldr	r3, [r6, #12]
   19d10:	tst	r3, #1
   19d14:	beq	19d28 <argp_error@@Base+0x5cc>
   19d18:	ldr	r3, [r8, #4]
   19d1c:	add	r2, r3, #1
   19d20:	str	r2, [r8, #4]
   19d24:	strb	r1, [r3]
   19d28:	ldr	r3, [r8, #4]
   19d2c:	mov	r2, #0
   19d30:	strb	r2, [r3]
   19d34:	ldr	r9, [r4]
   19d38:	cmp	r9, #0
   19d3c:	beq	19c78 <argp_error@@Base+0x51c>
   19d40:	ldr	r3, [r8]
   19d44:	ldr	fp, [r3, #8]
   19d48:	ldr	r0, [fp]
   19d4c:	cmp	r0, #0
   19d50:	beq	19d5c <argp_error@@Base+0x600>
   19d54:	mov	r7, fp
   19d58:	b	19c5c <argp_error@@Base+0x500>
   19d5c:	ldr	r3, [r8, #8]
   19d60:	str	r9, [r3]
   19d64:	ldr	r3, [r6, #8]
   19d68:	cmp	r3, #0
   19d6c:	beq	19d84 <argp_error@@Base+0x628>
   19d70:	ldr	r3, [r6, #12]
   19d74:	and	r3, r3, #1
   19d78:	cmp	r3, #0
   19d7c:	movne	r5, #2
   19d80:	moveq	r5, #1
   19d84:	ldr	r3, [r8, #8]
   19d88:	str	r5, [r3, #4]
   19d8c:	ldr	r3, [r8, #8]
   19d90:	mov	r2, #0
   19d94:	str	r2, [r3, #8]
   19d98:	ldr	r3, [r4, #4]
   19d9c:	cmp	r3, r2
   19da0:	ldreq	r3, [r6, #4]
   19da4:	bic	r2, r3, #-16777216	; 0xff000000
   19da8:	ldr	r1, [r8, #8]
   19dac:	ldr	r3, [r8]
   19db0:	ldr	r3, [r3, #48]	; 0x30
   19db4:	ldr	r0, [sp, #8]
   19db8:	sub	r3, r0, r3
   19dbc:	asr	r3, r3, #2
   19dc0:	ldr	r0, [sp, #12]
   19dc4:	mul	r3, r0, r3
   19dc8:	add	r3, r3, #1
   19dcc:	add	r3, r2, r3, lsl #24
   19dd0:	str	r3, [r1, #12]
   19dd4:	ldr	r3, [r8, #8]
   19dd8:	add	r2, r3, #16
   19ddc:	str	r2, [r8, #8]
   19de0:	mov	r2, #0
   19de4:	str	r2, [r3, #16]
   19de8:	b	19c78 <argp_error@@Base+0x51c>
   19dec:	ldr	r3, [r4, #16]
   19df0:	cmp	r3, #0
   19df4:	bne	19c94 <argp_error@@Base+0x538>
   19df8:	ldr	r3, [r4, #20]
   19dfc:	cmp	r3, #0
   19e00:	bne	19c94 <argp_error@@Base+0x538>
   19e04:	ldr	sl, [sp, #28]
   19e08:	ldr	r1, [sp, #16]
   19e0c:	ldr	r3, [r1, #4]
   19e10:	ldr	r2, [sp, #8]
   19e14:	str	r3, [r2]
   19e18:	str	r1, [r2, #4]
   19e1c:	ldr	r3, [r8, #4]
   19e20:	str	r3, [r2, #8]
   19e24:	mov	r3, #0
   19e28:	str	r3, [r2, #12]
   19e2c:	ldr	r1, [sp, #20]
   19e30:	str	r1, [r2, #16]
   19e34:	ldr	r1, [sp, #24]
   19e38:	str	r1, [r2, #20]
   19e3c:	str	r3, [r2, #24]
   19e40:	str	r3, [r2, #32]
   19e44:	str	r3, [r2, #28]
   19e48:	cmp	sl, r3
   19e4c:	beq	19e84 <argp_error@@Base+0x728>
   19e50:	ldr	r3, [sl]
   19e54:	cmp	r3, #0
   19e58:	beq	19ee8 <argp_error@@Base+0x78c>
   19e5c:	mov	r3, #0
   19e60:	add	r3, r3, #1
   19e64:	ldr	r2, [sl, r3, lsl #4]
   19e68:	cmp	r2, #0
   19e6c:	bne	19e60 <argp_error@@Base+0x704>
   19e70:	ldr	r2, [r8, #12]
   19e74:	ldr	r1, [sp, #8]
   19e78:	str	r2, [r1, #28]
   19e7c:	add	r3, r2, r3, lsl #2
   19e80:	str	r3, [r8, #12]
   19e84:	ldr	r3, [sp, #8]
   19e88:	add	r0, r3, #36	; 0x24
   19e8c:	cmp	sl, #0
   19e90:	beq	19ecc <argp_error@@Base+0x770>
   19e94:	ldr	ip, [sl]
   19e98:	cmp	ip, #0
   19e9c:	beq	19ecc <argp_error@@Base+0x770>
   19ea0:	mov	r2, #0
   19ea4:	add	r4, r2, #1
   19ea8:	str	r8, [sp]
   19eac:	mov	r3, r0
   19eb0:	ldr	r1, [sp, #8]
   19eb4:	mov	r0, ip
   19eb8:	bl	19be4 <argp_error@@Base+0x488>
   19ebc:	ldr	ip, [sl, r4, lsl #4]
   19ec0:	mov	r2, r4
   19ec4:	cmp	ip, #0
   19ec8:	bne	19ea4 <argp_error@@Base+0x748>
   19ecc:	add	sp, sp, #36	; 0x24
   19ed0:	ldrd	r4, [sp]
   19ed4:	ldrd	r6, [sp, #8]
   19ed8:	ldrd	r8, [sp, #16]
   19edc:	ldrd	sl, [sp, #24]
   19ee0:	add	sp, sp, #32
   19ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   19ee8:	mov	r3, #0
   19eec:	b	19e70 <argp_error@@Base+0x714>

00019ef0 <argp_parse@@Base>:
   19ef0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19ef4:	strd	r6, [sp, #8]
   19ef8:	strd	r8, [sp, #16]
   19efc:	strd	sl, [sp, #24]
   19f00:	str	lr, [sp, #32]
   19f04:	add	fp, sp, #32
   19f08:	sub	sp, sp, #228	; 0xe4
   19f0c:	mov	r8, r0
   19f10:	str	r1, [fp, #-240]	; 0xffffff10
   19f14:	str	r2, [fp, #-232]	; 0xffffff18
   19f18:	mov	r7, r3
   19f1c:	tst	r3, #1
   19f20:	bne	19f4c <argp_parse@@Base+0x5c>
   19f24:	movw	r3, #62908	; 0xf5bc
   19f28:	movt	r3, #2
   19f2c:	ldr	r3, [r3]
   19f30:	cmp	r3, #0
   19f34:	beq	19fa4 <argp_parse@@Base+0xb4>
   19f38:	movw	r3, #62904	; 0xf5b8
   19f3c:	movt	r3, #2
   19f40:	ldr	r3, [r3]
   19f44:	cmp	r3, #0
   19f48:	beq	19fb8 <argp_parse@@Base+0xc8>
   19f4c:	tst	r7, #16
   19f50:	beq	19fd4 <argp_parse@@Base+0xe4>
   19f54:	str	r7, [fp, #-244]	; 0xffffff0c
   19f58:	mov	r3, #0
   19f5c:	str	r3, [fp, #-188]	; 0xffffff44
   19f60:	str	r3, [fp, #-184]	; 0xffffff48
   19f64:	str	r3, [fp, #-180]	; 0xffffff4c
   19f68:	str	r3, [fp, #-176]	; 0xffffff50
   19f6c:	str	r3, [fp, #-172]	; 0xffffff54
   19f70:	str	r3, [fp, #-168]	; 0xffffff58
   19f74:	str	r3, [fp, #-164]	; 0xffffff5c
   19f78:	ands	r2, r7, #4
   19f7c:	str	r2, [fp, #-248]	; 0xffffff08
   19f80:	moveq	r2, #1
   19f84:	movne	r2, r3
   19f88:	str	r2, [fp, #-228]	; 0xffffff1c
   19f8c:	str	r3, [fp, #-224]	; 0xffffff20
   19f90:	str	r3, [fp, #-220]	; 0xffffff24
   19f94:	str	r3, [fp, #-216]	; 0xffffff28
   19f98:	cmp	r8, r3
   19f9c:	beq	1a0a0 <argp_parse@@Base+0x1b0>
   19fa0:	b	1a094 <argp_parse@@Base+0x1a4>
   19fa4:	ldr	r2, [r2]
   19fa8:	movw	r3, #62908	; 0xf5bc
   19fac:	movt	r3, #2
   19fb0:	str	r2, [r3]
   19fb4:	b	19f38 <argp_parse@@Base+0x48>
   19fb8:	ldr	r3, [fp, #-232]	; 0xffffff18
   19fbc:	ldr	r0, [r3]
   19fc0:	bl	1ab04 <argp_parse@@Base+0xc14>
   19fc4:	movw	r3, #62904	; 0xf5b8
   19fc8:	movt	r3, #2
   19fcc:	str	r0, [r3]
   19fd0:	b	19f4c <argp_parse@@Base+0x5c>
   19fd4:	sub	sp, sp, #64	; 0x40
   19fd8:	add	r5, sp, #8
   19fdc:	sub	sp, sp, #32
   19fe0:	add	r4, sp, #8
   19fe4:	mov	r1, #0
   19fe8:	str	r1, [r4]
   19fec:	str	r1, [r4, #4]
   19ff0:	str	r1, [r4, #8]
   19ff4:	str	r1, [r4, #12]
   19ff8:	str	r1, [r4, #20]
   19ffc:	str	r1, [r4, #24]
   1a000:	str	r5, [r4, #16]
   1a004:	mov	r2, #64	; 0x40
   1a008:	mov	r0, r5
   1a00c:	bl	11954 <memset@plt>
   1a010:	cmp	r8, #0
   1a014:	mov	r0, r5
   1a018:	strne	r8, [r0], #16
   1a01c:	movw	r3, #58732	; 0xe56c
   1a020:	movt	r3, #1
   1a024:	str	r3, [r0]
   1a028:	movw	r3, #144	; 0x90
   1a02c:	movt	r3, #3
   1a030:	ldr	r3, [r3]
   1a034:	cmp	r3, #0
   1a038:	beq	1a260 <argp_parse@@Base+0x370>
   1a03c:	add	r2, r0, #32
   1a040:	ldr	r3, [pc, #2548]	; 1aa3c <argp_parse@@Base+0xb4c>
   1a044:	str	r3, [r0, #16]
   1a048:	mov	r3, #0
   1a04c:	str	r3, [r2]
   1a050:	str	r7, [fp, #-244]	; 0xffffff0c
   1a054:	str	r3, [fp, #-188]	; 0xffffff44
   1a058:	str	r3, [fp, #-184]	; 0xffffff48
   1a05c:	str	r3, [fp, #-180]	; 0xffffff4c
   1a060:	str	r3, [fp, #-176]	; 0xffffff50
   1a064:	str	r3, [fp, #-172]	; 0xffffff54
   1a068:	str	r3, [fp, #-168]	; 0xffffff58
   1a06c:	str	r3, [fp, #-164]	; 0xffffff5c
   1a070:	ands	r2, r7, #4
   1a074:	str	r2, [fp, #-248]	; 0xffffff08
   1a078:	moveq	r2, #1
   1a07c:	movne	r2, r3
   1a080:	str	r2, [fp, #-228]	; 0xffffff1c
   1a084:	str	r3, [fp, #-224]	; 0xffffff20
   1a088:	str	r3, [fp, #-220]	; 0xffffff24
   1a08c:	str	r3, [fp, #-216]	; 0xffffff28
   1a090:	mov	r8, r4
   1a094:	sub	r1, fp, #228	; 0xe4
   1a098:	mov	r0, r8
   1a09c:	bl	19924 <argp_error@@Base+0x1c8>
   1a0a0:	ldr	r4, [fp, #-220]	; 0xffffff24
   1a0a4:	add	r4, r4, #1
   1a0a8:	add	r4, r4, r4, lsl #3
   1a0ac:	lsl	r4, r4, #2
   1a0b0:	ldr	r3, [fp, #-216]	; 0xffffff28
   1a0b4:	lsl	r3, r3, #2
   1a0b8:	str	r3, [fp, #-236]	; 0xffffff14
   1a0bc:	add	r9, r3, r4
   1a0c0:	ldr	r5, [fp, #-224]	; 0xffffff20
   1a0c4:	add	r5, r5, #1
   1a0c8:	add	r5, r9, r5, lsl #4
   1a0cc:	ldr	r0, [fp, #-228]	; 0xffffff1c
   1a0d0:	add	r0, r0, #1
   1a0d4:	add	r0, r0, r5
   1a0d8:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1a0dc:	mov	r6, r0
   1a0e0:	str	r0, [fp, #-40]	; 0xffffffd8
   1a0e4:	cmp	r0, #0
   1a0e8:	moveq	r4, #12
   1a0ec:	beq	1a85c <argp_parse@@Base+0x96c>
   1a0f0:	str	r0, [fp, #-112]	; 0xffffff90
   1a0f4:	add	r4, r0, r4
   1a0f8:	str	r4, [fp, #-104]	; 0xffffff98
   1a0fc:	add	r9, r0, r9
   1a100:	str	r9, [fp, #-152]	; 0xffffff68
   1a104:	add	sl, r0, r5
   1a108:	str	sl, [fp, #-156]	; 0xffffff64
   1a10c:	mov	r3, #1
   1a110:	str	r3, [fp, #-196]	; 0xffffff3c
   1a114:	str	r3, [fp, #-192]	; 0xffffff40
   1a118:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1a11c:	strd	r2, [fp, #-148]	; 0xffffff6c
   1a120:	ldrd	r2, [fp, #-188]	; 0xffffff44
   1a124:	strd	r2, [fp, #-140]	; 0xffffff74
   1a128:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1a12c:	strd	r2, [fp, #-132]	; 0xffffff7c
   1a130:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1a134:	strd	r2, [fp, #-124]	; 0xffffff84
   1a138:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1a13c:	str	r3, [fp, #-116]	; 0xffffff8c
   1a140:	ldr	r2, [fp, #-236]	; 0xffffff14
   1a144:	mov	r1, #0
   1a148:	mov	r0, r4
   1a14c:	bl	11954 <memset@plt>
   1a150:	sub	r3, fp, #160	; 0xa0
   1a154:	str	r3, [fp, #-212]	; 0xffffff2c
   1a158:	str	sl, [fp, #-208]	; 0xffffff30
   1a15c:	str	r9, [fp, #-204]	; 0xffffff34
   1a160:	str	r4, [fp, #-200]	; 0xffffff38
   1a164:	ldr	r3, [fp, #-244]	; 0xffffff0c
   1a168:	tst	r3, #8
   1a16c:	beq	1a27c <argp_parse@@Base+0x38c>
   1a170:	add	sl, sl, #1
   1a174:	str	sl, [fp, #-208]	; 0xffffff30
   1a178:	mov	r3, #45	; 0x2d
   1a17c:	strb	r3, [r6, r5]
   1a180:	mov	r3, #0
   1a184:	ldr	r2, [fp, #-208]	; 0xffffff30
   1a188:	strb	r3, [r2]
   1a18c:	ldr	r2, [fp, #-204]	; 0xffffff34
   1a190:	str	r3, [r2]
   1a194:	str	r8, [fp, #-160]	; 0xffffff60
   1a198:	cmp	r8, r3
   1a19c:	beq	1a29c <argp_parse@@Base+0x3ac>
   1a1a0:	sub	r3, fp, #212	; 0xd4
   1a1a4:	str	r3, [sp]
   1a1a8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a1ac:	mov	r2, #0
   1a1b0:	mov	r1, r2
   1a1b4:	mov	r0, r8
   1a1b8:	bl	19be4 <argp_error@@Base+0x488>
   1a1bc:	str	r0, [fp, #-108]	; 0xffffff94
   1a1c0:	mov	r2, #0
   1a1c4:	mov	r3, #0
   1a1c8:	strd	r2, [fp, #-76]	; 0xffffffb4
   1a1cc:	strd	r2, [fp, #-68]	; 0xffffffbc
   1a1d0:	strd	r2, [fp, #-60]	; 0xffffffc4
   1a1d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   1a1d8:	str	r3, [fp, #-96]	; 0xffffffa0
   1a1dc:	ldr	r3, [fp, #-240]	; 0xffffff10
   1a1e0:	str	r3, [fp, #-92]	; 0xffffffa4
   1a1e4:	ldr	r3, [fp, #-232]	; 0xffffff18
   1a1e8:	str	r3, [fp, #-88]	; 0xffffffa8
   1a1ec:	str	r7, [fp, #-80]	; 0xffffffb0
   1a1f0:	movw	r3, #62912	; 0xf5c0
   1a1f4:	movt	r3, #2
   1a1f8:	ldr	r3, [r3]
   1a1fc:	str	r3, [fp, #-52]	; 0xffffffcc
   1a200:	movw	r3, #62916	; 0xf5c4
   1a204:	movt	r3, #2
   1a208:	ldr	r3, [r3]
   1a20c:	str	r3, [fp, #-48]	; 0xffffffd0
   1a210:	mov	r3, #0
   1a214:	str	r3, [fp, #-84]	; 0xffffffac
   1a218:	sub	r3, fp, #160	; 0xa0
   1a21c:	str	r3, [fp, #-44]	; 0xffffffd4
   1a220:	mov	r3, #1
   1a224:	str	r3, [fp, #-100]	; 0xffffff9c
   1a228:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a22c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1a230:	cmp	r3, r2
   1a234:	bcs	1a348 <argp_parse@@Base+0x458>
   1a238:	ldr	r2, [fp, #8]
   1a23c:	str	r2, [r3, #24]
   1a240:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a244:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a248:	cmp	r5, r3
   1a24c:	bcs	1a348 <argp_parse@@Base+0x458>
   1a250:	mov	r6, #3
   1a254:	movt	r6, #256	; 0x100
   1a258:	mov	r7, #0
   1a25c:	b	1a2e4 <argp_parse@@Base+0x3f4>
   1a260:	movw	r3, #64004	; 0xfa04
   1a264:	movt	r3, #2
   1a268:	ldr	r3, [r3]
   1a26c:	cmp	r3, #0
   1a270:	addeq	r2, r0, #16
   1a274:	bne	1a03c <argp_parse@@Base+0x14c>
   1a278:	b	1a048 <argp_parse@@Base+0x158>
   1a27c:	ldr	r3, [fp, #-248]	; 0xffffff08
   1a280:	cmp	r3, #0
   1a284:	beq	1a180 <argp_parse@@Base+0x290>
   1a288:	add	sl, sl, #1
   1a28c:	str	sl, [fp, #-208]	; 0xffffff30
   1a290:	mov	r3, #43	; 0x2b
   1a294:	strb	r3, [r6, r5]
   1a298:	b	1a180 <argp_parse@@Base+0x290>
   1a29c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a2a0:	str	r3, [fp, #-108]	; 0xffffff94
   1a2a4:	b	1a1c0 <argp_parse@@Base+0x2d0>
   1a2a8:	ldr	r3, [r5]
   1a2ac:	cmp	r3, #0
   1a2b0:	beq	1a304 <argp_parse@@Base+0x414>
   1a2b4:	mov	r3, r7
   1a2b8:	mov	r2, r6
   1a2bc:	sub	r1, fp, #96	; 0x60
   1a2c0:	mov	r0, r5
   1a2c4:	bl	198ac <argp_error@@Base+0x150>
   1a2c8:	add	r5, r5, #36	; 0x24
   1a2cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a2d0:	cmp	r5, r3
   1a2d4:	bcs	1a338 <argp_parse@@Base+0x448>
   1a2d8:	cmp	r0, #7
   1a2dc:	cmpne	r0, #0
   1a2e0:	bne	1a330 <argp_parse@@Base+0x440>
   1a2e4:	ldr	r3, [r5, #16]
   1a2e8:	cmp	r3, #0
   1a2ec:	beq	1a2a8 <argp_parse@@Base+0x3b8>
   1a2f0:	ldr	r2, [r5, #20]
   1a2f4:	ldr	r3, [r3, #28]
   1a2f8:	ldr	r3, [r3, r2, lsl #2]
   1a2fc:	str	r3, [r5, #24]
   1a300:	b	1a2a8 <argp_parse@@Base+0x3b8>
   1a304:	ldr	r3, [r5, #4]
   1a308:	ldr	r3, [r3, #16]
   1a30c:	cmp	r3, #0
   1a310:	beq	1a2b4 <argp_parse@@Base+0x3c4>
   1a314:	ldr	r3, [r3]
   1a318:	cmp	r3, #0
   1a31c:	beq	1a2b4 <argp_parse@@Base+0x3c4>
   1a320:	ldr	r3, [r5, #28]
   1a324:	ldr	r2, [r5, #24]
   1a328:	str	r2, [r3]
   1a32c:	b	1a2b4 <argp_parse@@Base+0x3c4>
   1a330:	mov	r4, r0
   1a334:	b	1a85c <argp_parse@@Base+0x96c>
   1a338:	mov	r4, r0
   1a33c:	cmp	r0, #7
   1a340:	cmpne	r0, #0
   1a344:	bne	1a85c <argp_parse@@Base+0x96c>
   1a348:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a34c:	tst	r3, #2
   1a350:	moveq	r3, #1
   1a354:	streq	r3, [fp, #-144]	; 0xffffff70
   1a358:	beq	1a384 <argp_parse@@Base+0x494>
   1a35c:	mov	r2, #0
   1a360:	str	r2, [fp, #-144]	; 0xffffff70
   1a364:	tst	r3, #1
   1a368:	beq	1a384 <argp_parse@@Base+0x494>
   1a36c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a370:	sub	r3, r3, #4
   1a374:	str	r3, [fp, #-88]	; 0xffffffa8
   1a378:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a37c:	add	r3, r3, #1
   1a380:	str	r3, [fp, #-92]	; 0xffffffa4
   1a384:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a388:	ldr	r2, [fp, #-232]	; 0xffffff18
   1a38c:	cmp	r2, r3
   1a390:	beq	1a3b8 <argp_parse@@Base+0x4c8>
   1a394:	movw	r3, #62904	; 0xf5b8
   1a398:	movt	r3, #2
   1a39c:	ldr	r3, [r3]
   1a3a0:	str	r3, [fp, #-56]	; 0xffffffc8
   1a3a4:	movw	sl, #54516	; 0xd4f4
   1a3a8:	movt	sl, #1
   1a3ac:	mov	r9, #6
   1a3b0:	movt	r9, #256	; 0x100
   1a3b4:	b	1a480 <argp_parse@@Base+0x590>
   1a3b8:	ldr	r0, [r2]
   1a3bc:	cmp	r0, #0
   1a3c0:	beq	1a394 <argp_parse@@Base+0x4a4>
   1a3c4:	bl	1ab04 <argp_parse@@Base+0xc14>
   1a3c8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a3cc:	b	1a3a4 <argp_parse@@Base+0x4b4>
   1a3d0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a3d4:	str	r3, [fp, #-148]	; 0xffffff6c
   1a3d8:	mvn	r3, #0
   1a3dc:	str	r3, [fp, #-140]	; 0xffffff74
   1a3e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a3e4:	tst	r3, #64	; 0x40
   1a3e8:	beq	1a504 <argp_parse@@Base+0x614>
   1a3ec:	sub	r3, fp, #148	; 0x94
   1a3f0:	str	r3, [sp, #4]
   1a3f4:	mov	r3, #0
   1a3f8:	str	r3, [sp]
   1a3fc:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a400:	ldr	r2, [fp, #-156]	; 0xffffff64
   1a404:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a408:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a40c:	bl	1af18 <argp_parse@@Base+0x1028>
   1a410:	mov	r5, r0
   1a414:	ldr	r4, [fp, #-148]	; 0xffffff6c
   1a418:	str	r4, [fp, #-84]	; 0xffffffac
   1a41c:	cmn	r5, #1
   1a420:	beq	1a530 <argp_parse@@Base+0x640>
   1a424:	cmp	r5, #63	; 0x3f
   1a428:	beq	1a560 <argp_parse@@Base+0x670>
   1a42c:	cmp	r5, #1
   1a430:	beq	1a4dc <argp_parse@@Base+0x5ec>
   1a434:	ldr	r4, [fp, #-136]	; 0xffffff78
   1a438:	asrs	r3, r5, #24
   1a43c:	beq	1a570 <argp_parse@@Base+0x680>
   1a440:	ands	r1, r5, #8388608	; 0x800000
   1a444:	movne	r1, #-16777216	; 0xff000000
   1a448:	bic	r2, r5, #-16777216	; 0xff000000
   1a44c:	add	r0, r3, r3, lsl #3
   1a450:	lsl	r0, r0, #2
   1a454:	sub	r0, r0, #36	; 0x24
   1a458:	mov	r3, r4
   1a45c:	orr	r2, r2, r1
   1a460:	sub	r1, fp, #96	; 0x60
   1a464:	ldr	ip, [fp, #-112]	; 0xffffff90
   1a468:	add	r0, ip, r0
   1a46c:	bl	198ac <argp_error@@Base+0x150>
   1a470:	cmp	r0, #7
   1a474:	beq	1a738 <argp_parse@@Base+0x848>
   1a478:	cmp	r0, #0
   1a47c:	bne	1a7bc <argp_parse@@Base+0x8cc>
   1a480:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a484:	cmp	r3, #0
   1a488:	beq	1a4a0 <argp_parse@@Base+0x5b0>
   1a48c:	ldr	r2, [fp, #-84]	; 0xffffffac
   1a490:	cmp	r3, r2
   1a494:	movgt	r3, #0
   1a498:	strgt	r3, [fp, #-72]	; 0xffffffb8
   1a49c:	ble	1a4ac <argp_parse@@Base+0x5bc>
   1a4a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1a4a4:	cmp	r3, #0
   1a4a8:	bne	1a3d0 <argp_parse@@Base+0x4e0>
   1a4ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a4b0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1a4b4:	cmp	r3, r2
   1a4b8:	bge	1aa2c <argp_parse@@Base+0xb3c>
   1a4bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a4c0:	tst	r2, #4
   1a4c4:	bne	1aa34 <argp_parse@@Base+0xb44>
   1a4c8:	add	r2, r3, #1
   1a4cc:	str	r2, [fp, #-84]	; 0xffffffac
   1a4d0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a4d4:	ldr	r3, [r2, r3, lsl #2]
   1a4d8:	str	r3, [fp, #-136]	; 0xffffff78
   1a4dc:	ldr	r7, [fp, #-136]	; 0xffffff78
   1a4e0:	ldr	r4, [fp, #-84]	; 0xffffffac
   1a4e4:	sub	r4, r4, #1
   1a4e8:	str	r4, [fp, #-84]	; 0xffffffac
   1a4ec:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a4f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a4f4:	cmp	r3, r5
   1a4f8:	bls	1a7b4 <argp_parse@@Base+0x8c4>
   1a4fc:	mov	r6, #0
   1a500:	b	1a630 <argp_parse@@Base+0x740>
   1a504:	sub	r3, fp, #148	; 0x94
   1a508:	str	r3, [sp, #4]
   1a50c:	mov	r3, #0
   1a510:	str	r3, [sp]
   1a514:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a518:	ldr	r2, [fp, #-156]	; 0xffffff64
   1a51c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1a520:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a524:	bl	1aebc <argp_parse@@Base+0xfcc>
   1a528:	mov	r5, r0
   1a52c:	b	1a414 <argp_parse@@Base+0x524>
   1a530:	mov	r3, #0
   1a534:	str	r3, [fp, #-100]	; 0xffffff9c
   1a538:	cmp	r4, #1
   1a53c:	ble	1a4ac <argp_parse@@Base+0x5bc>
   1a540:	sub	r3, r4, #-1073741823	; 0xc0000001
   1a544:	mov	r1, sl
   1a548:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a54c:	ldr	r0, [r2, r3, lsl #2]
   1a550:	bl	11654 <strcmp@plt>
   1a554:	cmp	r0, #0
   1a558:	streq	r4, [fp, #-72]	; 0xffffffb8
   1a55c:	b	1a4ac <argp_parse@@Base+0x5bc>
   1a560:	ldr	r3, [fp, #-140]	; 0xffffff74
   1a564:	cmn	r3, #1
   1a568:	bne	1aa24 <argp_parse@@Base+0xb34>
   1a56c:	ldr	r4, [fp, #-136]	; 0xffffff78
   1a570:	mov	r1, r5
   1a574:	ldr	r0, [fp, #-156]	; 0xffffff64
   1a578:	bl	11900 <strchr@plt>
   1a57c:	subs	r1, r0, #0
   1a580:	beq	1a5d0 <argp_parse@@Base+0x6e0>
   1a584:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a588:	ldr	r2, [fp, #-108]	; 0xffffff94
   1a58c:	cmp	r2, r0
   1a590:	bls	1a5d0 <argp_parse@@Base+0x6e0>
   1a594:	ldr	r3, [r0, #8]
   1a598:	cmp	r1, r3
   1a59c:	bcc	1a5b8 <argp_parse@@Base+0x6c8>
   1a5a0:	add	r0, r0, #36	; 0x24
   1a5a4:	cmp	r2, r0
   1a5a8:	bls	1a5d0 <argp_parse@@Base+0x6e0>
   1a5ac:	ldr	r3, [r0, #8]
   1a5b0:	cmp	r1, r3
   1a5b4:	bcs	1a5a0 <argp_parse@@Base+0x6b0>
   1a5b8:	mov	r3, r4
   1a5bc:	mov	r2, r5
   1a5c0:	sub	r1, fp, #96	; 0x60
   1a5c4:	bl	198ac <argp_error@@Base+0x150>
   1a5c8:	cmp	r0, #7
   1a5cc:	bne	1a478 <argp_parse@@Base+0x588>
   1a5d0:	ldr	r3, [pc, #1128]	; 1aa40 <argp_parse@@Base+0xb50>
   1a5d4:	mov	r2, r5
   1a5d8:	movw	r1, #59056	; 0xe6b0
   1a5dc:	movt	r1, #1
   1a5e0:	sub	r0, fp, #96	; 0x60
   1a5e4:	bl	1975c <argp_error@@Base>
   1a5e8:	b	1a670 <argp_parse@@Base+0x780>
   1a5ec:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a5f0:	sub	r3, r3, #1
   1a5f4:	str	r3, [fp, #-84]	; 0xffffffac
   1a5f8:	mov	r3, r6
   1a5fc:	mov	r2, r9
   1a600:	sub	r1, fp, #96	; 0x60
   1a604:	mov	r0, r5
   1a608:	bl	198ac <argp_error@@Base+0x150>
   1a60c:	add	r5, r5, #36	; 0x24
   1a610:	ldr	r2, [fp, #-108]	; 0xffffff94
   1a614:	cmp	r5, r2
   1a618:	movcs	r3, #0
   1a61c:	movcc	r3, #1
   1a620:	cmp	r0, #7
   1a624:	movne	r3, #0
   1a628:	cmp	r3, #0
   1a62c:	beq	1a700 <argp_parse@@Base+0x810>
   1a630:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a634:	add	r3, r3, #1
   1a638:	str	r3, [fp, #-84]	; 0xffffffac
   1a63c:	mov	r3, r7
   1a640:	mov	r2, r6
   1a644:	sub	r1, fp, #96	; 0x60
   1a648:	mov	r0, r5
   1a64c:	bl	198ac <argp_error@@Base+0x150>
   1a650:	cmp	r0, #7
   1a654:	beq	1a5ec <argp_parse@@Base+0x6fc>
   1a658:	add	r5, r5, #36	; 0x24
   1a65c:	cmp	r0, #0
   1a660:	beq	1a710 <argp_parse@@Base+0x820>
   1a664:	cmp	r0, #7
   1a668:	bne	1a478 <argp_parse@@Base+0x588>
   1a66c:	mov	r5, #1
   1a670:	add	r5, r5, #1
   1a674:	bics	r3, r5, #2
   1a678:	moveq	r3, #1
   1a67c:	movne	r3, #0
   1a680:	cmp	r3, #0
   1a684:	beq	1a9c8 <argp_parse@@Base+0xad8>
   1a688:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a68c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1a690:	cmp	r3, r2
   1a694:	beq	1a87c <argp_parse@@Base+0x98c>
   1a698:	ldr	r2, [fp, #4]
   1a69c:	cmp	r2, #0
   1a6a0:	strne	r3, [r2]
   1a6a4:	beq	1a9a0 <argp_parse@@Base+0xab0>
   1a6a8:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a6ac:	sub	r5, r5, #36	; 0x24
   1a6b0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a6b4:	cmp	r5, r3
   1a6b8:	bcc	1aa08 <argp_parse@@Base+0xb18>
   1a6bc:	mov	r6, #4
   1a6c0:	movt	r6, #256	; 0x100
   1a6c4:	mov	r7, #0
   1a6c8:	mov	r3, r7
   1a6cc:	mov	r2, r6
   1a6d0:	sub	r1, fp, #96	; 0x60
   1a6d4:	mov	r0, r5
   1a6d8:	bl	198ac <argp_error@@Base+0x150>
   1a6dc:	sub	r5, r5, #36	; 0x24
   1a6e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a6e4:	cmp	r5, r3
   1a6e8:	bcc	1a9e0 <argp_parse@@Base+0xaf0>
   1a6ec:	cmp	r0, #7
   1a6f0:	cmpne	r0, #0
   1a6f4:	beq	1a6c8 <argp_parse@@Base+0x7d8>
   1a6f8:	mov	r4, r0
   1a6fc:	b	1a9f0 <argp_parse@@Base+0xb00>
   1a700:	cmp	r0, #0
   1a704:	bne	1a664 <argp_parse@@Base+0x774>
   1a708:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1a70c:	str	r3, [fp, #-84]	; 0xffffffac
   1a710:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a714:	cmp	r4, r3
   1a718:	movge	r3, #1
   1a71c:	strge	r3, [fp, #-100]	; 0xffffff9c
   1a720:	bge	1a480 <argp_parse@@Base+0x590>
   1a724:	sub	r4, r3, r4
   1a728:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1a72c:	add	r4, r3, r4
   1a730:	str	r4, [r5, #-24]	; 0xffffffe8
   1a734:	b	1a480 <argp_parse@@Base+0x590>
   1a738:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a73c:	ldr	r2, [r3, #12]
   1a740:	cmp	r2, r5
   1a744:	beq	1a77c <argp_parse@@Base+0x88c>
   1a748:	ldr	r2, [r3]
   1a74c:	cmp	r2, #0
   1a750:	beq	1a7a8 <argp_parse@@Base+0x8b8>
   1a754:	add	r3, r3, #16
   1a758:	ldr	r2, [r3, #12]
   1a75c:	cmp	r5, r2
   1a760:	beq	1a77c <argp_parse@@Base+0x88c>
   1a764:	ldr	r2, [r3]
   1a768:	cmp	r2, #0
   1a76c:	bne	1a754 <argp_parse@@Base+0x864>
   1a770:	movw	r2, #53680	; 0xd1b0
   1a774:	movt	r2, #1
   1a778:	b	1a790 <argp_parse@@Base+0x8a0>
   1a77c:	ldr	r2, [r3]
   1a780:	movw	r3, #53680	; 0xd1b0
   1a784:	movt	r3, #1
   1a788:	cmp	r2, #0
   1a78c:	moveq	r2, r3
   1a790:	ldr	r3, [pc, #680]	; 1aa40 <argp_parse@@Base+0xb50>
   1a794:	movw	r1, #59064	; 0xe6b8
   1a798:	movt	r1, #1
   1a79c:	sub	r0, fp, #96	; 0x60
   1a7a0:	bl	1975c <argp_error@@Base>
   1a7a4:	b	1a670 <argp_parse@@Base+0x780>
   1a7a8:	movw	r2, #53680	; 0xd1b0
   1a7ac:	movt	r2, #1
   1a7b0:	b	1a790 <argp_parse@@Base+0x8a0>
   1a7b4:	mov	r5, #1
   1a7b8:	b	1a670 <argp_parse@@Base+0x780>
   1a7bc:	mov	r4, r0
   1a7c0:	cmp	r4, #7
   1a7c4:	beq	1a9c8 <argp_parse@@Base+0xad8>
   1a7c8:	ldr	r5, [fp, #-112]	; 0xffffff90
   1a7cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a7d0:	cmp	r5, r3
   1a7d4:	bcs	1a808 <argp_parse@@Base+0x918>
   1a7d8:	mov	r6, #5
   1a7dc:	movt	r6, #256	; 0x100
   1a7e0:	mov	r7, #0
   1a7e4:	mov	r3, r7
   1a7e8:	mov	r2, r6
   1a7ec:	sub	r1, fp, #96	; 0x60
   1a7f0:	mov	r0, r5
   1a7f4:	bl	198ac <argp_error@@Base+0x150>
   1a7f8:	add	r5, r5, #36	; 0x24
   1a7fc:	ldr	r3, [fp, #-108]	; 0xffffff94
   1a800:	cmp	r5, r3
   1a804:	bcc	1a7e4 <argp_parse@@Base+0x8f4>
   1a808:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a80c:	sub	r5, r5, #36	; 0x24
   1a810:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a814:	cmp	r3, r5
   1a818:	bhi	1a84c <argp_parse@@Base+0x95c>
   1a81c:	mov	r6, #7
   1a820:	movt	r6, #256	; 0x100
   1a824:	mov	r7, #0
   1a828:	mov	r3, r7
   1a82c:	mov	r2, r6
   1a830:	sub	r1, fp, #96	; 0x60
   1a834:	mov	r0, r5
   1a838:	bl	198ac <argp_error@@Base+0x150>
   1a83c:	sub	r5, r5, #36	; 0x24
   1a840:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a844:	cmp	r5, r3
   1a848:	bcs	1a828 <argp_parse@@Base+0x938>
   1a84c:	cmp	r4, #7
   1a850:	moveq	r4, #22
   1a854:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a858:	bl	1ae34 <argp_parse@@Base+0xf44>
   1a85c:	mov	r0, r4
   1a860:	sub	sp, fp, #32
   1a864:	ldrd	r4, [sp]
   1a868:	ldrd	r6, [sp, #8]
   1a86c:	ldrd	r8, [sp, #16]
   1a870:	ldrd	sl, [sp, #24]
   1a874:	add	sp, sp, #32
   1a878:	pop	{pc}		; (ldr pc, [sp], #4)
   1a87c:	ldr	r6, [fp, #-112]	; 0xffffff90
   1a880:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a884:	cmp	r5, r6
   1a888:	bls	1aa10 <argp_parse@@Base+0xb20>
   1a88c:	mov	r4, #0
   1a890:	mov	r7, #2
   1a894:	movt	r7, #256	; 0x100
   1a898:	mov	r8, r4
   1a89c:	mov	r0, r4
   1a8a0:	b	1a8c0 <argp_parse@@Base+0x9d0>
   1a8a4:	add	r6, r6, #36	; 0x24
   1a8a8:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a8ac:	cmp	r6, r5
   1a8b0:	bcs	1a8fc <argp_parse@@Base+0xa0c>
   1a8b4:	cmp	r0, #7
   1a8b8:	cmpne	r0, #0
   1a8bc:	bne	1a8e4 <argp_parse@@Base+0x9f4>
   1a8c0:	ldr	r3, [r6, #12]
   1a8c4:	cmp	r3, #0
   1a8c8:	bne	1a8a4 <argp_parse@@Base+0x9b4>
   1a8cc:	mov	r3, r8
   1a8d0:	mov	r2, r7
   1a8d4:	sub	r1, fp, #96	; 0x60
   1a8d8:	mov	r0, r6
   1a8dc:	bl	198ac <argp_error@@Base+0x150>
   1a8e0:	b	1a8a4 <argp_parse@@Base+0x9b4>
   1a8e4:	mov	r4, r0
   1a8e8:	sub	r5, r5, #36	; 0x24
   1a8ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a8f0:	cmp	r3, r5
   1a8f4:	bls	1a910 <argp_parse@@Base+0xa20>
   1a8f8:	b	1a95c <argp_parse@@Base+0xa6c>
   1a8fc:	mov	r4, r0
   1a900:	sub	r5, r5, #36	; 0x24
   1a904:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a908:	cmp	r3, r5
   1a90c:	bhi	1a984 <argp_parse@@Base+0xa94>
   1a910:	cmp	r4, #7
   1a914:	cmpne	r4, #0
   1a918:	bne	1a95c <argp_parse@@Base+0xa6c>
   1a91c:	mov	r6, #1
   1a920:	movt	r6, #256	; 0x100
   1a924:	mov	r7, #0
   1a928:	mov	r3, r7
   1a92c:	mov	r2, r6
   1a930:	sub	r1, fp, #96	; 0x60
   1a934:	mov	r0, r5
   1a938:	bl	198ac <argp_error@@Base+0x150>
   1a93c:	sub	r5, r5, #36	; 0x24
   1a940:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a944:	cmp	r5, r3
   1a948:	bcc	1a980 <argp_parse@@Base+0xa90>
   1a94c:	cmp	r0, #7
   1a950:	cmpne	r0, #0
   1a954:	beq	1a928 <argp_parse@@Base+0xa38>
   1a958:	mov	r4, r0
   1a95c:	ldr	r3, [fp, #4]
   1a960:	cmp	r3, #0
   1a964:	beq	1a974 <argp_parse@@Base+0xa84>
   1a968:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a96c:	ldr	r2, [fp, #4]
   1a970:	str	r3, [r2]
   1a974:	cmp	r4, #0
   1a978:	beq	1a6a8 <argp_parse@@Base+0x7b8>
   1a97c:	b	1a7c0 <argp_parse@@Base+0x8d0>
   1a980:	mov	r4, r0
   1a984:	cmp	r4, #7
   1a988:	bne	1a95c <argp_parse@@Base+0xa6c>
   1a98c:	ldr	r3, [fp, #4]
   1a990:	cmp	r3, #0
   1a994:	movne	r4, #0
   1a998:	bne	1a968 <argp_parse@@Base+0xa78>
   1a99c:	b	1a6a8 <argp_parse@@Base+0x7b8>
   1a9a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a9a4:	tst	r3, #2
   1a9a8:	bne	1a9c8 <argp_parse@@Base+0xad8>
   1a9ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a9b0:	cmp	r0, #0
   1a9b4:	beq	1a9c8 <argp_parse@@Base+0xad8>
   1a9b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a9bc:	movw	r1, #59076	; 0xe6c4
   1a9c0:	movt	r1, #1
   1a9c4:	bl	1190c <fprintf@plt>
   1a9c8:	mov	r2, #260	; 0x104
   1a9cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a9d0:	sub	r0, fp, #96	; 0x60
   1a9d4:	bl	19694 <argp_state_help@@Base>
   1a9d8:	mov	r4, #7
   1a9dc:	b	1a7c8 <argp_parse@@Base+0x8d8>
   1a9e0:	mov	r4, r0
   1a9e4:	cmp	r0, #7
   1a9e8:	movne	r4, r0
   1a9ec:	moveq	r4, #0
   1a9f0:	ldr	r5, [fp, #-108]	; 0xffffff94
   1a9f4:	sub	r5, r5, #36	; 0x24
   1a9f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a9fc:	cmp	r3, r5
   1aa00:	bls	1a81c <argp_parse@@Base+0x92c>
   1aa04:	b	1a854 <argp_parse@@Base+0x964>
   1aa08:	mov	r4, #0
   1aa0c:	b	1a854 <argp_parse@@Base+0x964>
   1aa10:	sub	r5, r5, #36	; 0x24
   1aa14:	cmp	r5, r6
   1aa18:	movcc	r4, #0
   1aa1c:	bcs	1a91c <argp_parse@@Base+0xa2c>
   1aa20:	b	1a95c <argp_parse@@Base+0xa6c>
   1aa24:	mov	r3, #0
   1aa28:	b	1a680 <argp_parse@@Base+0x790>
   1aa2c:	mov	r3, #1
   1aa30:	b	1a680 <argp_parse@@Base+0x790>
   1aa34:	mov	r3, #1
   1aa38:	b	1a680 <argp_parse@@Base+0x790>
   1aa3c:	andeq	lr, r1, r8, lsl #11
   1aa40:	andeq	lr, r1, r4, lsr #11
   1aa44:	cmp	r1, #0
   1aa48:	beq	1aa94 <argp_parse@@Base+0xba4>
   1aa4c:	ldr	r2, [r1, #52]	; 0x34
   1aa50:	ldr	r3, [r2, #48]	; 0x30
   1aa54:	ldr	r1, [r2, #52]	; 0x34
   1aa58:	cmp	r3, r1
   1aa5c:	bcs	1aa9c <argp_parse@@Base+0xbac>
   1aa60:	ldr	r2, [r3, #4]
   1aa64:	cmp	r0, r2
   1aa68:	beq	1aa84 <argp_parse@@Base+0xb94>
   1aa6c:	add	r3, r3, #36	; 0x24
   1aa70:	cmp	r3, r1
   1aa74:	bcs	1aa8c <argp_parse@@Base+0xb9c>
   1aa78:	ldr	r2, [r3, #4]
   1aa7c:	cmp	r2, r0
   1aa80:	bne	1aa6c <argp_parse@@Base+0xb7c>
   1aa84:	ldr	r0, [r3, #24]
   1aa88:	bx	lr
   1aa8c:	mov	r0, #0
   1aa90:	bx	lr
   1aa94:	mov	r0, r1
   1aa98:	bx	lr
   1aa9c:	mov	r0, #0
   1aaa0:	bx	lr
   1aaa4:	push	{lr}		; (str lr, [sp, #-4]!)
   1aaa8:	sub	sp, sp, #12
   1aaac:	movw	r1, #64008	; 0xfa08
   1aab0:	movt	r1, #2
   1aab4:	ldr	r3, [r1, #4]
   1aab8:	str	r3, [sp]
   1aabc:	movw	r3, #59292	; 0xe79c
   1aac0:	movt	r3, #1
   1aac4:	movw	r2, #59308	; 0xe7ac
   1aac8:	movt	r2, #1
   1aacc:	ldr	r1, [r1]
   1aad0:	bl	1b4d8 <argp_parse@@Base+0x15e8>
   1aad4:	add	sp, sp, #12
   1aad8:	pop	{pc}		; (ldr pc, [sp], #4)
   1aadc:	movw	r3, #64004	; 0xfa04
   1aae0:	movt	r3, #2
   1aae4:	movw	r2, #43684	; 0xaaa4
   1aae8:	movt	r2, #1
   1aaec:	str	r2, [r3]
   1aaf0:	movw	r3, #64008	; 0xfa08
   1aaf4:	movt	r3, #2
   1aaf8:	str	r0, [r3]
   1aafc:	str	r1, [r3, #4]
   1ab00:	bx	lr
   1ab04:	ldrb	r3, [r0]
   1ab08:	cmp	r3, #47	; 0x2f
   1ab0c:	bne	1ab1c <argp_parse@@Base+0xc2c>
   1ab10:	ldrb	r3, [r0, #1]!
   1ab14:	cmp	r3, #47	; 0x2f
   1ab18:	beq	1ab10 <argp_parse@@Base+0xc20>
   1ab1c:	ldrb	r2, [r0]
   1ab20:	cmp	r2, #0
   1ab24:	bxeq	lr
   1ab28:	push	{lr}		; (str lr, [sp, #-4]!)
   1ab2c:	mov	r1, r0
   1ab30:	mov	r3, #0
   1ab34:	mov	lr, #1
   1ab38:	mov	ip, r3
   1ab3c:	b	1ab58 <argp_parse@@Base+0xc68>
   1ab40:	cmp	r3, #0
   1ab44:	movne	r0, r1
   1ab48:	movne	r3, ip
   1ab4c:	ldrb	r2, [r1, #1]!
   1ab50:	cmp	r2, #0
   1ab54:	beq	1ab68 <argp_parse@@Base+0xc78>
   1ab58:	cmp	r2, #47	; 0x2f
   1ab5c:	moveq	r3, lr
   1ab60:	bne	1ab40 <argp_parse@@Base+0xc50>
   1ab64:	b	1ab4c <argp_parse@@Base+0xc5c>
   1ab68:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab6c:	str	r4, [sp, #-8]!
   1ab70:	str	lr, [sp, #4]
   1ab74:	mov	r4, r0
   1ab78:	bl	118e8 <strlen@plt>
   1ab7c:	cmp	r0, #1
   1ab80:	bls	1aba0 <argp_parse@@Base+0xcb0>
   1ab84:	add	r3, r4, r0
   1ab88:	ldrb	r3, [r3, #-1]
   1ab8c:	cmp	r3, #47	; 0x2f
   1ab90:	subeq	r0, r0, #2
   1ab94:	addeq	r3, r4, r0
   1ab98:	rsbeq	r1, r4, #1
   1ab9c:	beq	1abac <argp_parse@@Base+0xcbc>
   1aba0:	ldr	r4, [sp]
   1aba4:	add	sp, sp, #4
   1aba8:	pop	{pc}		; (ldr pc, [sp], #4)
   1abac:	add	r0, r1, r3
   1abb0:	cmp	r3, r4
   1abb4:	beq	1aba0 <argp_parse@@Base+0xcb0>
   1abb8:	ldrb	r2, [r3], #-1
   1abbc:	cmp	r2, #47	; 0x2f
   1abc0:	bne	1aba0 <argp_parse@@Base+0xcb0>
   1abc4:	b	1abac <argp_parse@@Base+0xcbc>
   1abc8:	push	{r1, r2, r3}
   1abcc:	strd	r4, [sp, #-16]!
   1abd0:	str	r6, [sp, #8]
   1abd4:	str	lr, [sp, #12]
   1abd8:	sub	sp, sp, #12
   1abdc:	mov	r5, r0
   1abe0:	ldr	r1, [sp, #28]
   1abe4:	add	r3, sp, #32
   1abe8:	str	r3, [sp, #4]
   1abec:	cmp	r1, #0
   1abf0:	beq	1ac38 <argp_parse@@Base+0xd48>
   1abf4:	movw	r3, #1030	; 0x406
   1abf8:	cmp	r1, r3
   1abfc:	beq	1ac74 <argp_parse@@Base+0xd84>
   1ac00:	cmp	r1, #11
   1ac04:	beq	1ae24 <argp_parse@@Base+0xf34>
   1ac08:	bgt	1adb0 <argp_parse@@Base+0xec0>
   1ac0c:	cmp	r1, #3
   1ac10:	beq	1ae24 <argp_parse@@Base+0xf34>
   1ac14:	ble	1ad70 <argp_parse@@Base+0xe80>
   1ac18:	cmp	r1, #8
   1ac1c:	beq	1ad90 <argp_parse@@Base+0xea0>
   1ac20:	ble	1ad88 <argp_parse@@Base+0xe98>
   1ac24:	cmp	r1, #9
   1ac28:	beq	1ae24 <argp_parse@@Base+0xf34>
   1ac2c:	cmp	r1, #10
   1ac30:	bne	1ade8 <argp_parse@@Base+0xef8>
   1ac34:	b	1ad90 <argp_parse@@Base+0xea0>
   1ac38:	ldr	r3, [sp, #4]
   1ac3c:	add	r2, r3, #4
   1ac40:	str	r2, [sp, #4]
   1ac44:	ldr	r2, [r3]
   1ac48:	mov	r1, #0
   1ac4c:	bl	1199c <fcntl64@plt>
   1ac50:	mov	r4, r0
   1ac54:	mov	r0, r4
   1ac58:	add	sp, sp, #12
   1ac5c:	ldrd	r4, [sp]
   1ac60:	ldr	r6, [sp, #8]
   1ac64:	ldr	lr, [sp, #12]
   1ac68:	add	sp, sp, #16
   1ac6c:	add	sp, sp, #12
   1ac70:	bx	lr
   1ac74:	ldr	r3, [sp, #4]
   1ac78:	add	r2, r3, #4
   1ac7c:	str	r2, [sp, #4]
   1ac80:	ldr	r6, [r3]
   1ac84:	movw	r3, #64016	; 0xfa10
   1ac88:	movt	r3, #2
   1ac8c:	ldr	r3, [r3]
   1ac90:	cmp	r3, #0
   1ac94:	blt	1acfc <argp_parse@@Base+0xe0c>
   1ac98:	mov	r2, r6
   1ac9c:	movw	r1, #1030	; 0x406
   1aca0:	bl	1199c <fcntl64@plt>
   1aca4:	subs	r4, r0, #0
   1aca8:	blt	1acc0 <argp_parse@@Base+0xdd0>
   1acac:	movw	r3, #64016	; 0xfa10
   1acb0:	movt	r3, #2
   1acb4:	mov	r2, #1
   1acb8:	str	r2, [r3]
   1acbc:	b	1ac54 <argp_parse@@Base+0xd64>
   1acc0:	bl	11918 <__errno_location@plt>
   1acc4:	ldr	r3, [r0]
   1acc8:	cmp	r3, #22
   1accc:	bne	1acac <argp_parse@@Base+0xdbc>
   1acd0:	mov	r2, r6
   1acd4:	mov	r1, #0
   1acd8:	mov	r0, r5
   1acdc:	bl	1199c <fcntl64@plt>
   1ace0:	subs	r4, r0, #0
   1ace4:	blt	1ac54 <argp_parse@@Base+0xd64>
   1ace8:	movw	r3, #64016	; 0xfa10
   1acec:	movt	r3, #2
   1acf0:	mvn	r2, #0
   1acf4:	str	r2, [r3]
   1acf8:	b	1ad24 <argp_parse@@Base+0xe34>
   1acfc:	mov	r2, r6
   1ad00:	mov	r1, #0
   1ad04:	bl	1199c <fcntl64@plt>
   1ad08:	subs	r4, r0, #0
   1ad0c:	blt	1ac54 <argp_parse@@Base+0xd64>
   1ad10:	movw	r3, #64016	; 0xfa10
   1ad14:	movt	r3, #2
   1ad18:	ldr	r3, [r3]
   1ad1c:	cmn	r3, #1
   1ad20:	bne	1ac54 <argp_parse@@Base+0xd64>
   1ad24:	mov	r1, #1
   1ad28:	mov	r0, r4
   1ad2c:	bl	1199c <fcntl64@plt>
   1ad30:	subs	r2, r0, #0
   1ad34:	blt	1ad50 <argp_parse@@Base+0xe60>
   1ad38:	orr	r2, r2, #1
   1ad3c:	mov	r1, #2
   1ad40:	mov	r0, r4
   1ad44:	bl	1199c <fcntl64@plt>
   1ad48:	cmn	r0, #1
   1ad4c:	bne	1ac54 <argp_parse@@Base+0xd64>
   1ad50:	bl	11918 <__errno_location@plt>
   1ad54:	mov	r5, r0
   1ad58:	ldr	r6, [r0]
   1ad5c:	mov	r0, r4
   1ad60:	bl	11ac8 <close@plt>
   1ad64:	str	r6, [r5]
   1ad68:	mvn	r4, #0
   1ad6c:	b	1ac54 <argp_parse@@Base+0xd64>
   1ad70:	cmp	r1, #1
   1ad74:	beq	1ae24 <argp_parse@@Base+0xf34>
   1ad78:	bgt	1ad90 <argp_parse@@Base+0xea0>
   1ad7c:	cmp	r1, #0
   1ad80:	bne	1ade8 <argp_parse@@Base+0xef8>
   1ad84:	b	1ad90 <argp_parse@@Base+0xea0>
   1ad88:	cmp	r1, #4
   1ad8c:	bne	1ade8 <argp_parse@@Base+0xef8>
   1ad90:	ldr	r3, [sp, #4]
   1ad94:	add	r2, r3, #4
   1ad98:	str	r2, [sp, #4]
   1ad9c:	ldr	r2, [r3]
   1ada0:	mov	r0, r5
   1ada4:	bl	1199c <fcntl64@plt>
   1ada8:	mov	r4, r0
   1adac:	b	1ac54 <argp_parse@@Base+0xd64>
   1adb0:	movw	r3, #1031	; 0x407
   1adb4:	cmp	r1, r3
   1adb8:	bgt	1ae08 <argp_parse@@Base+0xf18>
   1adbc:	movw	r3, #1030	; 0x406
   1adc0:	cmp	r1, r3
   1adc4:	bge	1ad90 <argp_parse@@Base+0xea0>
   1adc8:	movw	r3, #1025	; 0x401
   1adcc:	cmp	r1, r3
   1add0:	beq	1ae24 <argp_parse@@Base+0xf34>
   1add4:	movw	r3, #1026	; 0x402
   1add8:	cmp	r1, r3
   1addc:	beq	1ad90 <argp_parse@@Base+0xea0>
   1ade0:	cmp	r1, #1024	; 0x400
   1ade4:	beq	1ad90 <argp_parse@@Base+0xea0>
   1ade8:	ldr	r3, [sp, #4]
   1adec:	add	r2, r3, #4
   1adf0:	str	r2, [sp, #4]
   1adf4:	ldr	r2, [r3]
   1adf8:	mov	r0, r5
   1adfc:	bl	1199c <fcntl64@plt>
   1ae00:	mov	r4, r0
   1ae04:	b	1ac54 <argp_parse@@Base+0xd64>
   1ae08:	movw	r3, #1033	; 0x409
   1ae0c:	cmp	r1, r3
   1ae10:	beq	1ad90 <argp_parse@@Base+0xea0>
   1ae14:	blt	1ae24 <argp_parse@@Base+0xf34>
   1ae18:	movw	r3, #1034	; 0x40a
   1ae1c:	cmp	r1, r3
   1ae20:	bne	1ade8 <argp_parse@@Base+0xef8>
   1ae24:	mov	r0, r5
   1ae28:	bl	1199c <fcntl64@plt>
   1ae2c:	mov	r4, r0
   1ae30:	b	1ac54 <argp_parse@@Base+0xd64>
   1ae34:	strd	r4, [sp, #-12]!
   1ae38:	str	lr, [sp, #8]
   1ae3c:	sub	sp, sp, #12
   1ae40:	mov	r5, r0
   1ae44:	bl	11918 <__errno_location@plt>
   1ae48:	mov	r4, r0
   1ae4c:	ldr	r3, [r0]
   1ae50:	str	r3, [sp]
   1ae54:	str	r3, [sp, #4]
   1ae58:	mov	r3, #0
   1ae5c:	str	r3, [r0]
   1ae60:	mov	r0, r5
   1ae64:	bl	116d8 <free@plt>
   1ae68:	ldr	r3, [r4]
   1ae6c:	clz	r3, r3
   1ae70:	lsr	r3, r3, #5
   1ae74:	add	r2, sp, #8
   1ae78:	add	r3, r2, r3, lsl #2
   1ae7c:	ldr	r3, [r3, #-8]
   1ae80:	str	r3, [r4]
   1ae84:	add	sp, sp, #12
   1ae88:	ldrd	r4, [sp]
   1ae8c:	add	sp, sp, #8
   1ae90:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae94:	push	{lr}		; (str lr, [sp, #-4]!)
   1ae98:	sub	sp, sp, #20
   1ae9c:	mov	ip, #0
   1aea0:	str	ip, [sp, #8]
   1aea4:	str	ip, [sp, #4]
   1aea8:	ldr	ip, [sp, #24]
   1aeac:	str	ip, [sp]
   1aeb0:	bl	1cfa0 <argp_parse@@Base+0x30b0>
   1aeb4:	add	sp, sp, #20
   1aeb8:	pop	{pc}		; (ldr pc, [sp], #4)
   1aebc:	push	{lr}		; (str lr, [sp, #-4]!)
   1aec0:	sub	sp, sp, #20
   1aec4:	mov	ip, #0
   1aec8:	str	ip, [sp, #12]
   1aecc:	ldr	lr, [sp, #28]
   1aed0:	str	lr, [sp, #8]
   1aed4:	str	ip, [sp, #4]
   1aed8:	ldr	ip, [sp, #24]
   1aedc:	str	ip, [sp]
   1aee0:	bl	1c9e4 <argp_parse@@Base+0x2af4>
   1aee4:	add	sp, sp, #20
   1aee8:	pop	{pc}		; (ldr pc, [sp], #4)
   1aeec:	push	{lr}		; (str lr, [sp, #-4]!)
   1aef0:	sub	sp, sp, #20
   1aef4:	mov	ip, #0
   1aef8:	str	ip, [sp, #8]
   1aefc:	mov	ip, #1
   1af00:	str	ip, [sp, #4]
   1af04:	ldr	ip, [sp, #24]
   1af08:	str	ip, [sp]
   1af0c:	bl	1cfa0 <argp_parse@@Base+0x30b0>
   1af10:	add	sp, sp, #20
   1af14:	pop	{pc}		; (ldr pc, [sp], #4)
   1af18:	push	{lr}		; (str lr, [sp, #-4]!)
   1af1c:	sub	sp, sp, #20
   1af20:	mov	ip, #0
   1af24:	str	ip, [sp, #12]
   1af28:	ldr	ip, [sp, #28]
   1af2c:	str	ip, [sp, #8]
   1af30:	mov	ip, #1
   1af34:	str	ip, [sp, #4]
   1af38:	ldr	ip, [sp, #24]
   1af3c:	str	ip, [sp]
   1af40:	bl	1c9e4 <argp_parse@@Base+0x2af4>
   1af44:	add	sp, sp, #20
   1af48:	pop	{pc}		; (ldr pc, [sp], #4)
   1af4c:	strd	r4, [sp, #-16]!
   1af50:	str	r6, [sp, #8]
   1af54:	str	lr, [sp, #12]
   1af58:	subs	r4, r0, #0
   1af5c:	beq	1aff8 <argp_parse@@Base+0x1108>
   1af60:	mov	r1, #47	; 0x2f
   1af64:	mov	r0, r4
   1af68:	bl	119f0 <strrchr@plt>
   1af6c:	subs	r5, r0, #0
   1af70:	beq	1afd0 <argp_parse@@Base+0x10e0>
   1af74:	add	r6, r5, #1
   1af78:	sub	r3, r6, r4
   1af7c:	cmp	r3, #6
   1af80:	ble	1afd0 <argp_parse@@Base+0x10e0>
   1af84:	mov	r2, #7
   1af88:	movw	r1, #59380	; 0xe7f4
   1af8c:	movt	r1, #1
   1af90:	sub	r0, r5, #6
   1af94:	bl	11aa4 <strncmp@plt>
   1af98:	cmp	r0, #0
   1af9c:	bne	1afd0 <argp_parse@@Base+0x10e0>
   1afa0:	mov	r2, #3
   1afa4:	movw	r1, #59388	; 0xe7fc
   1afa8:	movt	r1, #1
   1afac:	mov	r0, r6
   1afb0:	bl	11aa4 <strncmp@plt>
   1afb4:	cmp	r0, #0
   1afb8:	movne	r4, r6
   1afbc:	bne	1afd0 <argp_parse@@Base+0x10e0>
   1afc0:	add	r4, r5, #4
   1afc4:	movw	r3, #62904	; 0xf5b8
   1afc8:	movt	r3, #2
   1afcc:	str	r4, [r3]
   1afd0:	movw	r3, #64020	; 0xfa14
   1afd4:	movt	r3, #2
   1afd8:	str	r4, [r3]
   1afdc:	movw	r3, #62908	; 0xf5bc
   1afe0:	movt	r3, #2
   1afe4:	str	r4, [r3]
   1afe8:	ldrd	r4, [sp]
   1afec:	ldr	r6, [sp, #8]
   1aff0:	add	sp, sp, #12
   1aff4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aff8:	movw	r3, #62912	; 0xf5c0
   1affc:	movt	r3, #2
   1b000:	ldr	r3, [r3]
   1b004:	mov	r2, #55	; 0x37
   1b008:	mov	r1, #1
   1b00c:	movw	r0, #59324	; 0xe7bc
   1b010:	movt	r0, #1
   1b014:	bl	117f8 <fwrite@plt>
   1b018:	bl	11ab0 <abort@plt>
   1b01c:	strd	r4, [sp, #-16]!
   1b020:	str	r6, [sp, #8]
   1b024:	str	lr, [sp, #12]
   1b028:	mov	r5, r0
   1b02c:	mov	r0, #33	; 0x21
   1b030:	bl	1b620 <argp_parse@@Base+0x1730>
   1b034:	mov	r4, r0
   1b038:	mov	r2, #32
   1b03c:	add	r1, r5, #44	; 0x2c
   1b040:	bl	11960 <strncpy@plt>
   1b044:	mov	r3, #0
   1b048:	strb	r3, [r4, #32]
   1b04c:	mov	r0, r4
   1b050:	bl	118e8 <strlen@plt>
   1b054:	add	r0, r4, r0
   1b058:	cmp	r4, r0
   1b05c:	bcs	1b06c <argp_parse@@Base+0x117c>
   1b060:	ldrb	r3, [r0, #-1]
   1b064:	cmp	r3, #32
   1b068:	beq	1b080 <argp_parse@@Base+0x1190>
   1b06c:	mov	r0, r4
   1b070:	ldrd	r4, [sp]
   1b074:	ldr	r6, [sp, #8]
   1b078:	add	sp, sp, #12
   1b07c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b080:	sub	r0, r0, #1
   1b084:	mov	r1, r4
   1b088:	mov	r2, #0
   1b08c:	strb	r2, [r0]
   1b090:	cmp	r0, r1
   1b094:	beq	1b06c <argp_parse@@Base+0x117c>
   1b098:	ldrb	r3, [r0, #-1]!
   1b09c:	cmp	r3, #32
   1b0a0:	bne	1b06c <argp_parse@@Base+0x117c>
   1b0a4:	b	1b08c <argp_parse@@Base+0x119c>
   1b0a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b0ac:	strd	r6, [sp, #8]
   1b0b0:	strd	r8, [sp, #16]
   1b0b4:	strd	sl, [sp, #24]
   1b0b8:	str	lr, [sp, #32]
   1b0bc:	sub	sp, sp, #28
   1b0c0:	mov	fp, r1
   1b0c4:	str	r2, [sp, #12]
   1b0c8:	mov	r7, r3
   1b0cc:	mov	r8, #0
   1b0d0:	str	r8, [sp, #20]
   1b0d4:	bl	116a8 <utmpxname@plt>
   1b0d8:	bl	11774 <setutxent@plt>
   1b0dc:	mov	r6, r8
   1b0e0:	and	r5, r7, #2
   1b0e4:	and	r7, r7, #1
   1b0e8:	mov	r9, r6
   1b0ec:	mov	sl, #0
   1b0f0:	b	1b128 <argp_parse@@Base+0x1238>
   1b0f4:	cmp	r7, #0
   1b0f8:	beq	1b154 <argp_parse@@Base+0x1264>
   1b0fc:	ldr	r0, [r4, #4]
   1b100:	cmp	r0, #0
   1b104:	ble	1b154 <argp_parse@@Base+0x1264>
   1b108:	mov	r1, sl
   1b10c:	bl	118b8 <kill@plt>
   1b110:	cmp	r0, #0
   1b114:	bge	1b154 <argp_parse@@Base+0x1264>
   1b118:	bl	11918 <__errno_location@plt>
   1b11c:	ldr	r3, [r0]
   1b120:	cmp	r3, #3
   1b124:	bne	1b154 <argp_parse@@Base+0x1264>
   1b128:	bl	11abc <getutxent@plt>
   1b12c:	subs	r4, r0, #0
   1b130:	beq	1b1a0 <argp_parse@@Base+0x12b0>
   1b134:	ldrb	r3, [r4, #44]	; 0x2c
   1b138:	cmp	r3, #0
   1b13c:	beq	1b14c <argp_parse@@Base+0x125c>
   1b140:	ldrsh	r3, [r4]
   1b144:	cmp	r3, #7
   1b148:	beq	1b0f4 <argp_parse@@Base+0x1204>
   1b14c:	cmp	r5, #0
   1b150:	bne	1b128 <argp_parse@@Base+0x1238>
   1b154:	ldr	r3, [sp, #20]
   1b158:	cmp	r3, r9
   1b15c:	beq	1b17c <argp_parse@@Base+0x128c>
   1b160:	add	r0, r6, r6, lsl #1
   1b164:	mov	r2, #384	; 0x180
   1b168:	mov	r1, r4
   1b16c:	add	r0, r8, r0, lsl #7
   1b170:	bl	11714 <memcpy@plt>
   1b174:	add	r6, r6, #1
   1b178:	b	1b0e8 <argp_parse@@Base+0x11f8>
   1b17c:	mov	r3, #384	; 0x180
   1b180:	str	r3, [sp]
   1b184:	mvn	r3, #0
   1b188:	mov	r2, #1
   1b18c:	add	r1, sp, #20
   1b190:	mov	r0, r8
   1b194:	bl	1b86c <argp_parse@@Base+0x197c>
   1b198:	mov	r8, r0
   1b19c:	b	1b160 <argp_parse@@Base+0x1270>
   1b1a0:	bl	119b4 <endutxent@plt>
   1b1a4:	str	r6, [fp]
   1b1a8:	ldr	r3, [sp, #12]
   1b1ac:	str	r8, [r3]
   1b1b0:	mov	r0, #0
   1b1b4:	add	sp, sp, #28
   1b1b8:	ldrd	r4, [sp]
   1b1bc:	ldrd	r6, [sp, #8]
   1b1c0:	ldrd	r8, [sp, #16]
   1b1c4:	ldrd	sl, [sp, #24]
   1b1c8:	add	sp, sp, #32
   1b1cc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b1d0:	strd	r4, [sp, #-16]!
   1b1d4:	str	r6, [sp, #8]
   1b1d8:	str	lr, [sp, #12]
   1b1dc:	sub	sp, sp, #32
   1b1e0:	mov	r4, r0
   1b1e4:	ldr	r5, [sp, #48]	; 0x30
   1b1e8:	ldr	r6, [sp, #52]	; 0x34
   1b1ec:	cmp	r1, #0
   1b1f0:	beq	1b28c <argp_parse@@Base+0x139c>
   1b1f4:	str	r3, [sp]
   1b1f8:	mov	r3, r2
   1b1fc:	mov	r2, r1
   1b200:	movw	r1, #59392	; 0xe800
   1b204:	movt	r1, #1
   1b208:	bl	1190c <fprintf@plt>
   1b20c:	movw	r3, #2022	; 0x7e6
   1b210:	movw	r2, #59412	; 0xe814
   1b214:	movt	r2, #1
   1b218:	movw	r1, #60180	; 0xeb14
   1b21c:	movt	r1, #1
   1b220:	mov	r0, r4
   1b224:	bl	1190c <fprintf@plt>
   1b228:	mov	r1, r4
   1b22c:	mov	r0, #10
   1b230:	bl	11a08 <fputc@plt>
   1b234:	movw	r2, #59416	; 0xe818
   1b238:	movt	r2, #1
   1b23c:	movw	r1, #59452	; 0xe83c
   1b240:	movt	r1, #1
   1b244:	mov	r0, r4
   1b248:	bl	1190c <fprintf@plt>
   1b24c:	mov	r1, r4
   1b250:	mov	r0, #10
   1b254:	bl	11a08 <fputc@plt>
   1b258:	cmp	r6, #9
   1b25c:	ldrls	pc, [pc, r6, lsl #2]
   1b260:	b	1b484 <argp_parse@@Base+0x1594>
   1b264:			; <UNDEFINED> instruction: 0x0001b2b0
   1b268:	muleq	r1, ip, r2
   1b26c:	andeq	fp, r1, r4, asr #5
   1b270:	andeq	fp, r1, r0, ror #5
   1b274:	andeq	fp, r1, r4, lsl #6
   1b278:	andeq	fp, r1, r0, lsr r3
   1b27c:	andeq	fp, r1, r4, ror #6
   1b280:	andeq	fp, r1, r0, lsr #7
   1b284:	andeq	fp, r1, r4, ror #7
   1b288:	andeq	fp, r1, r0, lsr r4
   1b28c:	movw	r1, #59404	; 0xe80c
   1b290:	movt	r1, #1
   1b294:	bl	1190c <fprintf@plt>
   1b298:	b	1b20c <argp_parse@@Base+0x131c>
   1b29c:	ldr	r2, [r5]
   1b2a0:	movw	r1, #59624	; 0xe8e8
   1b2a4:	movt	r1, #1
   1b2a8:	mov	r0, r4
   1b2ac:	bl	1190c <fprintf@plt>
   1b2b0:	add	sp, sp, #32
   1b2b4:	ldrd	r4, [sp]
   1b2b8:	ldr	r6, [sp, #8]
   1b2bc:	add	sp, sp, #12
   1b2c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b2c4:	ldr	r3, [r5, #4]
   1b2c8:	ldr	r2, [r5]
   1b2cc:	movw	r1, #59640	; 0xe8f8
   1b2d0:	movt	r1, #1
   1b2d4:	mov	r0, r4
   1b2d8:	bl	1190c <fprintf@plt>
   1b2dc:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b2e0:	ldr	r3, [r5, #8]
   1b2e4:	str	r3, [sp]
   1b2e8:	ldr	r3, [r5, #4]
   1b2ec:	ldr	r2, [r5]
   1b2f0:	movw	r1, #59664	; 0xe910
   1b2f4:	movt	r1, #1
   1b2f8:	mov	r0, r4
   1b2fc:	bl	1190c <fprintf@plt>
   1b300:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b304:	ldr	r3, [r5, #12]
   1b308:	str	r3, [sp, #4]
   1b30c:	ldr	r3, [r5, #8]
   1b310:	str	r3, [sp]
   1b314:	ldr	r3, [r5, #4]
   1b318:	ldr	r2, [r5]
   1b31c:	movw	r1, #59692	; 0xe92c
   1b320:	movt	r1, #1
   1b324:	mov	r0, r4
   1b328:	bl	1190c <fprintf@plt>
   1b32c:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b330:	ldr	r3, [r5, #16]
   1b334:	str	r3, [sp, #8]
   1b338:	ldr	r3, [r5, #12]
   1b33c:	str	r3, [sp, #4]
   1b340:	ldr	r3, [r5, #8]
   1b344:	str	r3, [sp]
   1b348:	ldr	r3, [r5, #4]
   1b34c:	ldr	r2, [r5]
   1b350:	movw	r1, #59724	; 0xe94c
   1b354:	movt	r1, #1
   1b358:	mov	r0, r4
   1b35c:	bl	1190c <fprintf@plt>
   1b360:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b364:	ldr	r3, [r5, #20]
   1b368:	str	r3, [sp, #12]
   1b36c:	ldr	r3, [r5, #16]
   1b370:	str	r3, [sp, #8]
   1b374:	ldr	r3, [r5, #12]
   1b378:	str	r3, [sp, #4]
   1b37c:	ldr	r3, [r5, #8]
   1b380:	str	r3, [sp]
   1b384:	ldr	r3, [r5, #4]
   1b388:	ldr	r2, [r5]
   1b38c:	movw	r1, #59760	; 0xe970
   1b390:	movt	r1, #1
   1b394:	mov	r0, r4
   1b398:	bl	1190c <fprintf@plt>
   1b39c:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b3a0:	ldr	r3, [r5, #24]
   1b3a4:	str	r3, [sp, #16]
   1b3a8:	ldr	r3, [r5, #20]
   1b3ac:	str	r3, [sp, #12]
   1b3b0:	ldr	r3, [r5, #16]
   1b3b4:	str	r3, [sp, #8]
   1b3b8:	ldr	r3, [r5, #12]
   1b3bc:	str	r3, [sp, #4]
   1b3c0:	ldr	r3, [r5, #8]
   1b3c4:	str	r3, [sp]
   1b3c8:	ldr	r3, [r5, #4]
   1b3cc:	ldr	r2, [r5]
   1b3d0:	movw	r1, #59800	; 0xe998
   1b3d4:	movt	r1, #1
   1b3d8:	mov	r0, r4
   1b3dc:	bl	1190c <fprintf@plt>
   1b3e0:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b3e4:	ldr	r3, [r5, #28]
   1b3e8:	str	r3, [sp, #20]
   1b3ec:	ldr	r3, [r5, #24]
   1b3f0:	str	r3, [sp, #16]
   1b3f4:	ldr	r3, [r5, #20]
   1b3f8:	str	r3, [sp, #12]
   1b3fc:	ldr	r3, [r5, #16]
   1b400:	str	r3, [sp, #8]
   1b404:	ldr	r3, [r5, #12]
   1b408:	str	r3, [sp, #4]
   1b40c:	ldr	r3, [r5, #8]
   1b410:	str	r3, [sp]
   1b414:	ldr	r3, [r5, #4]
   1b418:	ldr	r2, [r5]
   1b41c:	movw	r1, #59844	; 0xe9c4
   1b420:	movt	r1, #1
   1b424:	mov	r0, r4
   1b428:	bl	1190c <fprintf@plt>
   1b42c:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b430:	ldr	r3, [r5, #32]
   1b434:	str	r3, [sp, #24]
   1b438:	ldr	r3, [r5, #28]
   1b43c:	str	r3, [sp, #20]
   1b440:	ldr	r3, [r5, #24]
   1b444:	str	r3, [sp, #16]
   1b448:	ldr	r3, [r5, #20]
   1b44c:	str	r3, [sp, #12]
   1b450:	ldr	r3, [r5, #16]
   1b454:	str	r3, [sp, #8]
   1b458:	ldr	r3, [r5, #12]
   1b45c:	str	r3, [sp, #4]
   1b460:	ldr	r3, [r5, #8]
   1b464:	str	r3, [sp]
   1b468:	ldr	r3, [r5, #4]
   1b46c:	ldr	r2, [r5]
   1b470:	movw	r1, #59892	; 0xe9f4
   1b474:	movt	r1, #1
   1b478:	mov	r0, r4
   1b47c:	bl	1190c <fprintf@plt>
   1b480:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b484:	ldr	r3, [r5, #32]
   1b488:	str	r3, [sp, #24]
   1b48c:	ldr	r3, [r5, #28]
   1b490:	str	r3, [sp, #20]
   1b494:	ldr	r3, [r5, #24]
   1b498:	str	r3, [sp, #16]
   1b49c:	ldr	r3, [r5, #20]
   1b4a0:	str	r3, [sp, #12]
   1b4a4:	ldr	r3, [r5, #16]
   1b4a8:	str	r3, [sp, #8]
   1b4ac:	ldr	r3, [r5, #12]
   1b4b0:	str	r3, [sp, #4]
   1b4b4:	ldr	r3, [r5, #8]
   1b4b8:	str	r3, [sp]
   1b4bc:	ldr	r3, [r5, #4]
   1b4c0:	ldr	r2, [r5]
   1b4c4:	movw	r1, #59944	; 0xea28
   1b4c8:	movt	r1, #1
   1b4cc:	mov	r0, r4
   1b4d0:	bl	1190c <fprintf@plt>
   1b4d4:	b	1b2b0 <argp_parse@@Base+0x13c0>
   1b4d8:	strd	r4, [sp, #-12]!
   1b4dc:	str	lr, [sp, #8]
   1b4e0:	sub	sp, sp, #12
   1b4e4:	ldr	r5, [sp, #24]
   1b4e8:	ldr	ip, [r5]
   1b4ec:	cmp	ip, #0
   1b4f0:	beq	1b528 <argp_parse@@Base+0x1638>
   1b4f4:	mov	lr, r5
   1b4f8:	mov	ip, #0
   1b4fc:	add	ip, ip, #1
   1b500:	ldr	r4, [lr, #4]!
   1b504:	cmp	r4, #0
   1b508:	bne	1b4fc <argp_parse@@Base+0x160c>
   1b50c:	str	ip, [sp, #4]
   1b510:	str	r5, [sp]
   1b514:	bl	1b1d0 <argp_parse@@Base+0x12e0>
   1b518:	add	sp, sp, #12
   1b51c:	ldrd	r4, [sp]
   1b520:	add	sp, sp, #8
   1b524:	pop	{pc}		; (ldr pc, [sp], #4)
   1b528:	mov	ip, #0
   1b52c:	b	1b50c <argp_parse@@Base+0x161c>
   1b530:	strd	r4, [sp, #-12]!
   1b534:	str	lr, [sp, #8]
   1b538:	sub	sp, sp, #52	; 0x34
   1b53c:	ldr	r5, [sp, #64]	; 0x40
   1b540:	add	r4, sp, #8
   1b544:	mov	ip, #0
   1b548:	ldr	lr, [r5], #4
   1b54c:	str	lr, [r4], #4
   1b550:	cmp	lr, #0
   1b554:	beq	1b564 <argp_parse@@Base+0x1674>
   1b558:	add	ip, ip, #1
   1b55c:	cmp	ip, #10
   1b560:	bne	1b548 <argp_parse@@Base+0x1658>
   1b564:	str	ip, [sp, #4]
   1b568:	add	ip, sp, #8
   1b56c:	str	ip, [sp]
   1b570:	bl	1b1d0 <argp_parse@@Base+0x12e0>
   1b574:	add	sp, sp, #52	; 0x34
   1b578:	ldrd	r4, [sp]
   1b57c:	add	sp, sp, #8
   1b580:	pop	{pc}		; (ldr pc, [sp], #4)
   1b584:	push	{r3}		; (str r3, [sp, #-4]!)
   1b588:	push	{lr}		; (str lr, [sp, #-4]!)
   1b58c:	sub	sp, sp, #16
   1b590:	add	r3, sp, #24
   1b594:	str	r3, [sp, #12]
   1b598:	str	r3, [sp]
   1b59c:	ldr	r3, [sp, #20]
   1b5a0:	bl	1b530 <argp_parse@@Base+0x1640>
   1b5a4:	add	sp, sp, #16
   1b5a8:	pop	{lr}		; (ldr lr, [sp], #4)
   1b5ac:	add	sp, sp, #4
   1b5b0:	bx	lr
   1b5b4:	str	r4, [sp, #-8]!
   1b5b8:	str	lr, [sp, #4]
   1b5bc:	movw	r3, #62916	; 0xf5c4
   1b5c0:	movt	r3, #2
   1b5c4:	ldr	r1, [r3]
   1b5c8:	mov	r0, #10
   1b5cc:	bl	11a08 <fputc@plt>
   1b5d0:	movw	r1, #60004	; 0xea64
   1b5d4:	movt	r1, #1
   1b5d8:	movw	r0, #60028	; 0xea7c
   1b5dc:	movt	r0, #1
   1b5e0:	bl	11684 <printf@plt>
   1b5e4:	movw	r2, #60048	; 0xea90
   1b5e8:	movt	r2, #1
   1b5ec:	movw	r1, #59308	; 0xe7ac
   1b5f0:	movt	r1, #1
   1b5f4:	movw	r0, #60088	; 0xeab8
   1b5f8:	movt	r0, #1
   1b5fc:	bl	11684 <printf@plt>
   1b600:	movw	r1, #60108	; 0xeacc
   1b604:	movt	r1, #1
   1b608:	movw	r0, #60140	; 0xeaec
   1b60c:	movt	r0, #1
   1b610:	bl	11684 <printf@plt>
   1b614:	ldr	r4, [sp]
   1b618:	add	sp, sp, #4
   1b61c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b620:	str	r4, [sp, #-8]!
   1b624:	str	lr, [sp, #4]
   1b628:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1b62c:	cmp	r0, #0
   1b630:	beq	1b640 <argp_parse@@Base+0x1750>
   1b634:	ldr	r4, [sp]
   1b638:	add	sp, sp, #4
   1b63c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b640:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b644:	str	r4, [sp, #-8]!
   1b648:	str	lr, [sp, #4]
   1b64c:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1b650:	cmp	r0, #0
   1b654:	beq	1b664 <argp_parse@@Base+0x1774>
   1b658:	ldr	r4, [sp]
   1b65c:	add	sp, sp, #4
   1b660:	pop	{pc}		; (ldr pc, [sp], #4)
   1b664:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b668:	str	r4, [sp, #-8]!
   1b66c:	str	lr, [sp, #4]
   1b670:	bl	1b620 <argp_parse@@Base+0x1730>
   1b674:	ldr	r4, [sp]
   1b678:	add	sp, sp, #4
   1b67c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b680:	strd	r4, [sp, #-16]!
   1b684:	str	r6, [sp, #8]
   1b688:	str	lr, [sp, #12]
   1b68c:	mov	r5, r0
   1b690:	mov	r4, r1
   1b694:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   1b698:	cmp	r0, #0
   1b69c:	beq	1b6b0 <argp_parse@@Base+0x17c0>
   1b6a0:	ldrd	r4, [sp]
   1b6a4:	ldr	r6, [sp, #8]
   1b6a8:	add	sp, sp, #12
   1b6ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6b0:	adds	r4, r4, #0
   1b6b4:	movne	r4, #1
   1b6b8:	cmp	r5, #0
   1b6bc:	moveq	r4, #1
   1b6c0:	cmp	r4, #0
   1b6c4:	beq	1b6a0 <argp_parse@@Base+0x17b0>
   1b6c8:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b6cc:	str	r4, [sp, #-8]!
   1b6d0:	str	lr, [sp, #4]
   1b6d4:	cmp	r1, #0
   1b6d8:	orreq	r1, r1, #1
   1b6dc:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   1b6e0:	cmp	r0, #0
   1b6e4:	beq	1b6f4 <argp_parse@@Base+0x1804>
   1b6e8:	ldr	r4, [sp]
   1b6ec:	add	sp, sp, #4
   1b6f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6f4:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b6f8:	strd	r4, [sp, #-16]!
   1b6fc:	str	r6, [sp, #8]
   1b700:	str	lr, [sp, #12]
   1b704:	mov	r4, r0
   1b708:	mov	r6, r1
   1b70c:	mov	r5, r2
   1b710:	bl	1d044 <argp_parse@@Base+0x3154>
   1b714:	cmp	r0, #0
   1b718:	beq	1b72c <argp_parse@@Base+0x183c>
   1b71c:	ldrd	r4, [sp]
   1b720:	ldr	r6, [sp, #8]
   1b724:	add	sp, sp, #12
   1b728:	pop	{pc}		; (ldr pc, [sp], #4)
   1b72c:	cmp	r4, #0
   1b730:	beq	1b740 <argp_parse@@Base+0x1850>
   1b734:	cmp	r6, #0
   1b738:	cmpne	r5, #0
   1b73c:	beq	1b71c <argp_parse@@Base+0x182c>
   1b740:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b744:	str	r4, [sp, #-8]!
   1b748:	str	lr, [sp, #4]
   1b74c:	bl	1b6f8 <argp_parse@@Base+0x1808>
   1b750:	ldr	r4, [sp]
   1b754:	add	sp, sp, #4
   1b758:	pop	{pc}		; (ldr pc, [sp], #4)
   1b75c:	str	r4, [sp, #-8]!
   1b760:	str	lr, [sp, #4]
   1b764:	mov	ip, r1
   1b768:	mov	r3, r2
   1b76c:	cmp	r2, #0
   1b770:	cmpne	r1, #0
   1b774:	moveq	r3, #1
   1b778:	moveq	ip, r3
   1b77c:	mov	r2, r3
   1b780:	mov	r1, ip
   1b784:	bl	1d044 <argp_parse@@Base+0x3154>
   1b788:	cmp	r0, #0
   1b78c:	beq	1b79c <argp_parse@@Base+0x18ac>
   1b790:	ldr	r4, [sp]
   1b794:	add	sp, sp, #4
   1b798:	pop	{pc}		; (ldr pc, [sp], #4)
   1b79c:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b7a0:	str	r4, [sp, #-8]!
   1b7a4:	str	lr, [sp, #4]
   1b7a8:	mov	r2, r1
   1b7ac:	mov	r1, r0
   1b7b0:	mov	r0, #0
   1b7b4:	bl	1b6f8 <argp_parse@@Base+0x1808>
   1b7b8:	ldr	r4, [sp]
   1b7bc:	add	sp, sp, #4
   1b7c0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7c4:	str	r4, [sp, #-8]!
   1b7c8:	str	lr, [sp, #4]
   1b7cc:	mov	r2, r1
   1b7d0:	mov	r1, r0
   1b7d4:	mov	r0, #0
   1b7d8:	bl	1b75c <argp_parse@@Base+0x186c>
   1b7dc:	ldr	r4, [sp]
   1b7e0:	add	sp, sp, #4
   1b7e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7e8:	strd	r4, [sp, #-16]!
   1b7ec:	str	r6, [sp, #8]
   1b7f0:	str	lr, [sp, #12]
   1b7f4:	mov	r5, r1
   1b7f8:	ldr	r4, [r1]
   1b7fc:	cmp	r0, #0
   1b800:	beq	1b830 <argp_parse@@Base+0x1940>
   1b804:	lsr	r3, r4, #1
   1b808:	add	r3, r3, #1
   1b80c:	adds	r4, r4, r3
   1b810:	bcs	1b84c <argp_parse@@Base+0x195c>
   1b814:	mov	r1, r4
   1b818:	bl	1b6f8 <argp_parse@@Base+0x1808>
   1b81c:	str	r4, [r5]
   1b820:	ldrd	r4, [sp]
   1b824:	ldr	r6, [sp, #8]
   1b828:	add	sp, sp, #12
   1b82c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b830:	cmp	r4, #0
   1b834:	bne	1b814 <argp_parse@@Base+0x1924>
   1b838:	mov	r4, #64	; 0x40
   1b83c:	udiv	r4, r4, r2
   1b840:	cmp	r2, #64	; 0x40
   1b844:	addhi	r4, r4, #1
   1b848:	b	1b814 <argp_parse@@Base+0x1924>
   1b84c:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b850:	str	r4, [sp, #-8]!
   1b854:	str	lr, [sp, #4]
   1b858:	mov	r2, #1
   1b85c:	bl	1b7e8 <argp_parse@@Base+0x18f8>
   1b860:	ldr	r4, [sp]
   1b864:	add	sp, sp, #4
   1b868:	pop	{pc}		; (ldr pc, [sp], #4)
   1b86c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b870:	strd	r6, [sp, #8]
   1b874:	str	r8, [sp, #16]
   1b878:	str	lr, [sp, #20]
   1b87c:	mov	r5, r1
   1b880:	ldr	lr, [sp, #24]
   1b884:	ldr	ip, [r1]
   1b888:	asr	r4, ip, #1
   1b88c:	adds	r4, ip, r4
   1b890:	movvs	r1, #1
   1b894:	movvc	r1, #0
   1b898:	cmp	r1, #0
   1b89c:	mvnne	r4, #-2147483648	; 0x80000000
   1b8a0:	mvn	r8, r3
   1b8a4:	lsr	r8, r8, #31
   1b8a8:	cmp	r3, r4
   1b8ac:	movge	r1, #0
   1b8b0:	andlt	r1, r8, #1
   1b8b4:	cmp	r1, #0
   1b8b8:	movne	r4, r3
   1b8bc:	smull	r6, r7, r4, lr
   1b8c0:	asr	r1, r6, #31
   1b8c4:	cmp	r1, r7
   1b8c8:	bne	1b8e0 <argp_parse@@Base+0x19f0>
   1b8cc:	mov	r1, r6
   1b8d0:	cmp	r6, #63	; 0x3f
   1b8d4:	movle	r1, #64	; 0x40
   1b8d8:	ble	1b8e4 <argp_parse@@Base+0x19f4>
   1b8dc:	b	1b8f0 <argp_parse@@Base+0x1a00>
   1b8e0:	mvn	r1, #-2147483648	; 0x80000000
   1b8e4:	sdiv	r4, r1, lr
   1b8e8:	mls	r6, lr, r4, r1
   1b8ec:	sub	r1, r1, r6
   1b8f0:	cmp	r0, #0
   1b8f4:	moveq	r6, #0
   1b8f8:	streq	r6, [r5]
   1b8fc:	sub	r6, r4, ip
   1b900:	cmp	r6, r2
   1b904:	bge	1b93c <argp_parse@@Base+0x1a4c>
   1b908:	adds	r2, ip, r2
   1b90c:	mov	r4, r2
   1b910:	bvs	1b958 <argp_parse@@Base+0x1a68>
   1b914:	cmp	r2, r3
   1b918:	movle	r3, #0
   1b91c:	andgt	r3, r8, #1
   1b920:	cmp	r3, #0
   1b924:	bne	1b958 <argp_parse@@Base+0x1a68>
   1b928:	smull	r2, r3, r2, lr
   1b92c:	asr	ip, r2, #31
   1b930:	mov	r1, r2
   1b934:	cmp	ip, r3
   1b938:	bne	1b958 <argp_parse@@Base+0x1a68>
   1b93c:	bl	1b680 <argp_parse@@Base+0x1790>
   1b940:	str	r4, [r5]
   1b944:	ldrd	r4, [sp]
   1b948:	ldrd	r6, [sp, #8]
   1b94c:	ldr	r8, [sp, #16]
   1b950:	add	sp, sp, #20
   1b954:	pop	{pc}		; (ldr pc, [sp], #4)
   1b958:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b95c:	str	r4, [sp, #-8]!
   1b960:	str	lr, [sp, #4]
   1b964:	bl	1bae4 <argp_parse@@Base+0x1bf4>
   1b968:	cmp	r0, #0
   1b96c:	beq	1b97c <argp_parse@@Base+0x1a8c>
   1b970:	ldr	r4, [sp]
   1b974:	add	sp, sp, #4
   1b978:	pop	{pc}		; (ldr pc, [sp], #4)
   1b97c:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b980:	str	r4, [sp, #-8]!
   1b984:	str	lr, [sp, #4]
   1b988:	mov	r1, #1
   1b98c:	bl	1b95c <argp_parse@@Base+0x1a6c>
   1b990:	ldr	r4, [sp]
   1b994:	add	sp, sp, #4
   1b998:	pop	{pc}		; (ldr pc, [sp], #4)
   1b99c:	str	r4, [sp, #-8]!
   1b9a0:	str	lr, [sp, #4]
   1b9a4:	bl	1bae4 <argp_parse@@Base+0x1bf4>
   1b9a8:	cmp	r0, #0
   1b9ac:	beq	1b9bc <argp_parse@@Base+0x1acc>
   1b9b0:	ldr	r4, [sp]
   1b9b4:	add	sp, sp, #4
   1b9b8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9bc:	bl	1bab4 <argp_parse@@Base+0x1bc4>
   1b9c0:	str	r4, [sp, #-8]!
   1b9c4:	str	lr, [sp, #4]
   1b9c8:	mov	r1, #1
   1b9cc:	bl	1b99c <argp_parse@@Base+0x1aac>
   1b9d0:	ldr	r4, [sp]
   1b9d4:	add	sp, sp, #4
   1b9d8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b9dc:	strd	r4, [sp, #-16]!
   1b9e0:	str	r6, [sp, #8]
   1b9e4:	str	lr, [sp, #12]
   1b9e8:	mov	r5, r0
   1b9ec:	mov	r4, r1
   1b9f0:	mov	r0, r1
   1b9f4:	bl	1b620 <argp_parse@@Base+0x1730>
   1b9f8:	mov	r2, r4
   1b9fc:	mov	r1, r5
   1ba00:	bl	11714 <memcpy@plt>
   1ba04:	ldrd	r4, [sp]
   1ba08:	ldr	r6, [sp, #8]
   1ba0c:	add	sp, sp, #12
   1ba10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba14:	strd	r4, [sp, #-16]!
   1ba18:	str	r6, [sp, #8]
   1ba1c:	str	lr, [sp, #12]
   1ba20:	mov	r5, r0
   1ba24:	mov	r4, r1
   1ba28:	mov	r0, r1
   1ba2c:	bl	1b644 <argp_parse@@Base+0x1754>
   1ba30:	mov	r2, r4
   1ba34:	mov	r1, r5
   1ba38:	bl	11714 <memcpy@plt>
   1ba3c:	ldrd	r4, [sp]
   1ba40:	ldr	r6, [sp, #8]
   1ba44:	add	sp, sp, #12
   1ba48:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba4c:	strd	r4, [sp, #-16]!
   1ba50:	str	r6, [sp, #8]
   1ba54:	str	lr, [sp, #12]
   1ba58:	mov	r5, r0
   1ba5c:	mov	r4, r1
   1ba60:	add	r0, r1, #1
   1ba64:	bl	1b644 <argp_parse@@Base+0x1754>
   1ba68:	mov	r2, #0
   1ba6c:	strb	r2, [r0, r4]
   1ba70:	mov	r2, r4
   1ba74:	mov	r1, r5
   1ba78:	bl	11714 <memcpy@plt>
   1ba7c:	ldrd	r4, [sp]
   1ba80:	ldr	r6, [sp, #8]
   1ba84:	add	sp, sp, #12
   1ba88:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba8c:	str	r4, [sp, #-8]!
   1ba90:	str	lr, [sp, #4]
   1ba94:	mov	r4, r0
   1ba98:	bl	118e8 <strlen@plt>
   1ba9c:	add	r1, r0, #1
   1baa0:	mov	r0, r4
   1baa4:	bl	1b9dc <argp_parse@@Base+0x1aec>
   1baa8:	ldr	r4, [sp]
   1baac:	add	sp, sp, #4
   1bab0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bab4:	str	r4, [sp, #-8]!
   1bab8:	str	lr, [sp, #4]
   1babc:	movw	r3, #62888	; 0xf5a8
   1bac0:	movt	r3, #2
   1bac4:	ldr	r0, [r3]
   1bac8:	movw	r3, #60228	; 0xeb44
   1bacc:	movt	r3, #1
   1bad0:	movw	r2, #57768	; 0xe1a8
   1bad4:	movt	r2, #1
   1bad8:	mov	r1, #0
   1badc:	bl	11828 <error@plt>
   1bae0:	bl	11ab0 <abort@plt>
   1bae4:	strd	r4, [sp, #-16]!
   1bae8:	str	r6, [sp, #8]
   1baec:	str	lr, [sp, #12]
   1baf0:	cmp	r1, #0
   1baf4:	cmpne	r0, #0
   1baf8:	beq	1bb34 <argp_parse@@Base+0x1c44>
   1bafc:	mov	r2, r0
   1bb00:	mov	r3, r1
   1bb04:	umull	r4, r5, r0, r1
   1bb08:	adds	r1, r5, #0
   1bb0c:	movne	r1, #1
   1bb10:	cmp	r4, #0
   1bb14:	movlt	r1, #1
   1bb18:	cmp	r1, #0
   1bb1c:	beq	1bb3c <argp_parse@@Base+0x1c4c>
   1bb20:	bl	11918 <__errno_location@plt>
   1bb24:	mov	r3, #12
   1bb28:	str	r3, [r0]
   1bb2c:	mov	r0, #0
   1bb30:	b	1bb48 <argp_parse@@Base+0x1c58>
   1bb34:	mov	r3, #1
   1bb38:	mov	r2, r3
   1bb3c:	mov	r1, r3
   1bb40:	mov	r0, r2
   1bb44:	bl	11630 <calloc@plt>
   1bb48:	ldrd	r4, [sp]
   1bb4c:	ldr	r6, [sp, #8]
   1bb50:	add	sp, sp, #12
   1bb54:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb58:	str	r4, [sp, #-8]!
   1bb5c:	str	lr, [sp, #4]
   1bb60:	cmp	r0, #0
   1bb64:	beq	1bb80 <argp_parse@@Base+0x1c90>
   1bb68:	bge	1bb84 <argp_parse@@Base+0x1c94>
   1bb6c:	bl	11918 <__errno_location@plt>
   1bb70:	mov	r3, #12
   1bb74:	str	r3, [r0]
   1bb78:	mov	r0, #0
   1bb7c:	b	1bb88 <argp_parse@@Base+0x1c98>
   1bb80:	mov	r0, #1
   1bb84:	bl	11864 <malloc@plt>
   1bb88:	ldr	r4, [sp]
   1bb8c:	add	sp, sp, #4
   1bb90:	pop	{pc}		; (ldr pc, [sp], #4)
   1bb94:	str	r4, [sp, #-8]!
   1bb98:	str	lr, [sp, #4]
   1bb9c:	cmp	r0, #0
   1bba0:	beq	1bbc4 <argp_parse@@Base+0x1cd4>
   1bba4:	cmp	r1, #0
   1bba8:	beq	1bbd0 <argp_parse@@Base+0x1ce0>
   1bbac:	cmp	r1, #0
   1bbb0:	blt	1bbdc <argp_parse@@Base+0x1cec>
   1bbb4:	bl	117b0 <realloc@plt>
   1bbb8:	ldr	r4, [sp]
   1bbbc:	add	sp, sp, #4
   1bbc0:	pop	{pc}		; (ldr pc, [sp], #4)
   1bbc4:	mov	r0, r1
   1bbc8:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1bbcc:	b	1bbb8 <argp_parse@@Base+0x1cc8>
   1bbd0:	bl	1ae34 <argp_parse@@Base+0xf44>
   1bbd4:	mov	r0, #0
   1bbd8:	b	1bbb8 <argp_parse@@Base+0x1cc8>
   1bbdc:	bl	11918 <__errno_location@plt>
   1bbe0:	mov	r3, #12
   1bbe4:	str	r3, [r0]
   1bbe8:	mov	r0, #0
   1bbec:	b	1bbb8 <argp_parse@@Base+0x1cc8>
   1bbf0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1bbf4:	strd	r6, [sp, #8]
   1bbf8:	str	r8, [sp, #16]
   1bbfc:	str	lr, [sp, #20]
   1bc00:	mov	r8, r0
   1bc04:	mov	r7, r1
   1bc08:	mov	r6, r2
   1bc0c:	mov	r5, r3
   1bc10:	mov	r0, #36	; 0x24
   1bc14:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1bc18:	subs	r4, r0, #0
   1bc1c:	beq	1bc60 <argp_parse@@Base+0x1d70>
   1bc20:	str	r8, [r4]
   1bc24:	str	r7, [r4, #4]
   1bc28:	str	r6, [r4, #8]
   1bc2c:	str	r5, [r4, #12]
   1bc30:	mov	r3, #0
   1bc34:	str	r3, [r4, #20]
   1bc38:	str	r3, [r4, #16]
   1bc3c:	mov	r0, #200	; 0xc8
   1bc40:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1bc44:	mov	r5, r0
   1bc48:	str	r0, [r4, #24]
   1bc4c:	cmp	r0, #0
   1bc50:	strne	r0, [r4, #28]
   1bc54:	addne	r5, r0, #200	; 0xc8
   1bc58:	strne	r5, [r4, #32]
   1bc5c:	beq	1bc78 <argp_parse@@Base+0x1d88>
   1bc60:	mov	r0, r4
   1bc64:	ldrd	r4, [sp]
   1bc68:	ldrd	r6, [sp, #8]
   1bc6c:	ldr	r8, [sp, #16]
   1bc70:	add	sp, sp, #20
   1bc74:	pop	{pc}		; (ldr pc, [sp], #4)
   1bc78:	mov	r0, r4
   1bc7c:	bl	1ae34 <argp_parse@@Base+0xf44>
   1bc80:	mov	r4, r5
   1bc84:	b	1bc60 <argp_parse@@Base+0x1d70>
   1bc88:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bc8c:	strd	r6, [sp, #8]
   1bc90:	strd	r8, [sp, #16]
   1bc94:	strd	sl, [sp, #24]
   1bc98:	str	lr, [sp, #32]
   1bc9c:	sub	sp, sp, #20
   1bca0:	mov	r4, r0
   1bca4:	ldr	r5, [r0, #24]
   1bca8:	ldr	r3, [r0, #16]
   1bcac:	add	r5, r5, r3
   1bcb0:	mov	sl, #32
   1bcb4:	str	sl, [sp, #8]
   1bcb8:	b	1bda0 <argp_parse@@Base+0x1eb0>
   1bcbc:	mov	r7, #0
   1bcc0:	ldr	r0, [r4]
   1bcc4:	ldr	r3, [r0, #20]
   1bcc8:	ldr	r2, [r0, #24]
   1bccc:	cmp	r3, r2
   1bcd0:	addcc	r2, r3, #1
   1bcd4:	strcc	r2, [r0, #20]
   1bcd8:	strbcc	sl, [r3]
   1bcdc:	bcs	1be0c <argp_parse@@Base+0x1f1c>
   1bce0:	add	r7, r7, #1
   1bce4:	cmp	r6, r7
   1bce8:	bne	1bcc0 <argp_parse@@Base+0x1dd0>
   1bcec:	str	r6, [r4, #20]
   1bcf0:	ldr	r8, [r4, #28]
   1bcf4:	sub	fp, r8, r5
   1bcf8:	mov	r2, fp
   1bcfc:	mov	r1, #10
   1bd00:	mov	r0, r5
   1bd04:	bl	11978 <memchr@plt>
   1bd08:	mov	r6, r0
   1bd0c:	ldr	r3, [r4, #20]
   1bd10:	cmp	r3, #0
   1bd14:	movlt	r3, #0
   1bd18:	strlt	r3, [r4, #20]
   1bd1c:	cmp	r6, #0
   1bd20:	beq	1be18 <argp_parse@@Base+0x1f28>
   1bd24:	ldr	r0, [r4, #20]
   1bd28:	ldr	r9, [r4, #8]
   1bd2c:	sub	r3, r6, r5
   1bd30:	add	r3, r3, r0
   1bd34:	cmp	r3, r9
   1bd38:	movlt	r3, #0
   1bd3c:	strlt	r3, [r4, #20]
   1bd40:	addlt	r5, r6, #1
   1bd44:	blt	1bda0 <argp_parse@@Base+0x1eb0>
   1bd48:	sub	r7, r9, #1
   1bd4c:	ldr	r3, [r4, #12]
   1bd50:	str	r3, [sp, #4]
   1bd54:	cmp	r3, #0
   1bd58:	bge	1be44 <argp_parse@@Base+0x1f54>
   1bd5c:	cmp	r8, r6
   1bd60:	bls	1bed4 <argp_parse@@Base+0x1fe4>
   1bd64:	sub	r0, r7, r0
   1bd68:	sub	r2, r8, r6
   1bd6c:	mov	r1, r6
   1bd70:	add	r0, r5, r0
   1bd74:	bl	116c0 <memmove@plt>
   1bd78:	ldr	r3, [r4, #20]
   1bd7c:	sub	r7, r7, r3
   1bd80:	add	r7, r5, r7
   1bd84:	sub	r6, r7, r6
   1bd88:	ldr	r3, [r4, #28]
   1bd8c:	sub	r6, r3, r6
   1bd90:	str	r6, [r4, #28]
   1bd94:	mov	r3, #0
   1bd98:	str	r3, [r4, #20]
   1bd9c:	add	r5, r5, r9
   1bda0:	ldr	r8, [r4, #28]
   1bda4:	cmp	r8, r5
   1bda8:	bls	1beec <argp_parse@@Base+0x1ffc>
   1bdac:	ldr	r3, [r4, #20]
   1bdb0:	cmp	r3, #0
   1bdb4:	bne	1bcf0 <argp_parse@@Base+0x1e00>
   1bdb8:	ldr	r6, [r4, #4]
   1bdbc:	cmp	r6, #0
   1bdc0:	beq	1c198 <argp_parse@@Base+0x22a8>
   1bdc4:	add	r3, r8, r6
   1bdc8:	ldr	r2, [r4, #32]
   1bdcc:	cmp	r2, r3
   1bdd0:	bls	1bcbc <argp_parse@@Base+0x1dcc>
   1bdd4:	add	r7, r5, r6
   1bdd8:	sub	r2, r8, r5
   1bddc:	mov	r1, r5
   1bde0:	mov	r0, r7
   1bde4:	bl	116c0 <memmove@plt>
   1bde8:	ldr	r3, [r4, #28]
   1bdec:	add	r3, r3, r6
   1bdf0:	str	r3, [r4, #28]
   1bdf4:	mov	r2, r6
   1bdf8:	mov	r1, sl
   1bdfc:	mov	r0, r5
   1be00:	bl	11954 <memset@plt>
   1be04:	mov	r5, r7
   1be08:	b	1bcec <argp_parse@@Base+0x1dfc>
   1be0c:	ldr	r1, [sp, #8]
   1be10:	bl	119c0 <__overflow@plt>
   1be14:	b	1bce0 <argp_parse@@Base+0x1df0>
   1be18:	ldr	r3, [r4, #20]
   1be1c:	add	r3, fp, r3
   1be20:	ldr	r7, [r4, #8]
   1be24:	cmp	r3, r7
   1be28:	bcc	1becc <argp_parse@@Base+0x1fdc>
   1be2c:	sub	r7, r7, #1
   1be30:	ldr	r3, [r4, #12]
   1be34:	str	r3, [sp, #4]
   1be38:	cmp	r3, #0
   1be3c:	blt	1bed4 <argp_parse@@Base+0x1fe4>
   1be40:	mov	r6, r8
   1be44:	ldr	r3, [r4, #20]
   1be48:	rsb	r3, r3, #1
   1be4c:	add	r7, r3, r7
   1be50:	adds	r7, r5, r7
   1be54:	bcs	1c190 <argp_parse@@Base+0x22a0>
   1be58:	bl	118c4 <__ctype_b_loc@plt>
   1be5c:	ldr	r0, [r0]
   1be60:	mov	r3, r7
   1be64:	mov	r1, r3
   1be68:	sub	r3, r3, #1
   1be6c:	ldrb	r2, [r1]
   1be70:	lsl	r2, r2, #1
   1be74:	ldrh	r2, [r0, r2]
   1be78:	tst	r2, #1
   1be7c:	bne	1bf18 <argp_parse@@Base+0x2028>
   1be80:	mov	r1, r3
   1be84:	cmp	r3, r5
   1be88:	bcs	1be64 <argp_parse@@Base+0x1f74>
   1be8c:	add	r9, r1, #1
   1be90:	cmp	r9, r5
   1be94:	bhi	1bf54 <argp_parse@@Base+0x2064>
   1be98:	cmp	r6, r7
   1be9c:	bhi	1bff0 <argp_parse@@Base+0x2100>
   1bea0:	cmp	r7, r6
   1bea4:	beq	1c030 <argp_parse@@Base+0x2140>
   1bea8:	bl	118c4 <__ctype_b_loc@plt>
   1beac:	ldr	r2, [r0]
   1beb0:	mov	r9, r7
   1beb4:	ldrb	r3, [r9, #1]!
   1beb8:	lsl	r3, r3, #1
   1bebc:	ldrh	r3, [r2, r3]
   1bec0:	tst	r3, #1
   1bec4:	bne	1beb4 <argp_parse@@Base+0x1fc4>
   1bec8:	b	1bf58 <argp_parse@@Base+0x2068>
   1becc:	str	r3, [r4, #20]
   1bed0:	b	1beec <argp_parse@@Base+0x1ffc>
   1bed4:	ldr	r3, [r4, #20]
   1bed8:	add	r3, fp, r3
   1bedc:	str	r3, [r4, #20]
   1bee0:	sub	r3, r7, r3
   1bee4:	add	r8, r8, r3
   1bee8:	str	r8, [r4, #28]
   1beec:	ldr	r3, [r4, #28]
   1bef0:	ldr	r2, [r4, #24]
   1bef4:	sub	r3, r3, r2
   1bef8:	str	r3, [r4, #16]
   1befc:	add	sp, sp, #20
   1bf00:	ldrd	r4, [sp]
   1bf04:	ldrd	r6, [sp, #8]
   1bf08:	ldrd	r8, [sp, #16]
   1bf0c:	ldrd	sl, [sp, #24]
   1bf10:	add	sp, sp, #32
   1bf14:	pop	{pc}		; (ldr pc, [sp], #4)
   1bf18:	add	r9, r1, #1
   1bf1c:	cmp	r9, r5
   1bf20:	bls	1be98 <argp_parse@@Base+0x1fa8>
   1bf24:	cmp	r5, r1
   1bf28:	bhi	1bf54 <argp_parse@@Base+0x2064>
   1bf2c:	sub	ip, r5, #1
   1bf30:	mov	r1, r3
   1bf34:	cmp	r3, ip
   1bf38:	beq	1bf54 <argp_parse@@Base+0x2064>
   1bf3c:	sub	r3, r3, #1
   1bf40:	ldrb	r2, [r1]
   1bf44:	lsl	r2, r2, #1
   1bf48:	ldrh	r2, [r0, r2]
   1bf4c:	tst	r2, #1
   1bf50:	bne	1bf30 <argp_parse@@Base+0x2040>
   1bf54:	add	r7, r1, #1
   1bf58:	add	r3, fp, #1
   1bf5c:	add	r3, r5, r3
   1bf60:	cmp	r9, r3
   1bf64:	beq	1c040 <argp_parse@@Base+0x2150>
   1bf68:	add	r3, r7, #1
   1bf6c:	sub	r3, r9, r3
   1bf70:	ldr	r2, [sp, #4]
   1bf74:	cmp	r3, r2
   1bf78:	bge	1c054 <argp_parse@@Base+0x2164>
   1bf7c:	cmp	r9, r8
   1bf80:	bcs	1c054 <argp_parse@@Base+0x2164>
   1bf84:	ldr	r3, [r4, #32]
   1bf88:	sub	r3, r3, r8
   1bf8c:	ldr	r2, [sp, #4]
   1bf90:	add	r2, r2, #1
   1bf94:	cmp	r3, r2
   1bf98:	bgt	1c0fc <argp_parse@@Base+0x220c>
   1bf9c:	ldr	r0, [r4, #24]
   1bfa0:	cmp	r0, r7
   1bfa4:	bcs	1bfb8 <argp_parse@@Base+0x20c8>
   1bfa8:	ldr	r3, [r4]
   1bfac:	sub	r2, r7, r0
   1bfb0:	mov	r1, #1
   1bfb4:	bl	11738 <fwrite_unlocked@plt>
   1bfb8:	ldr	r0, [r4]
   1bfbc:	ldr	r3, [r0, #20]
   1bfc0:	ldr	r2, [r0, #24]
   1bfc4:	cmp	r3, r2
   1bfc8:	addcc	r2, r3, #1
   1bfcc:	strcc	r2, [r0, #20]
   1bfd0:	movcc	r2, #10
   1bfd4:	strbcc	r2, [r3]
   1bfd8:	bcs	1c13c <argp_parse@@Base+0x224c>
   1bfdc:	ldr	r8, [r4, #24]
   1bfe0:	sub	r5, r5, r8
   1bfe4:	add	fp, fp, r5
   1bfe8:	mov	r5, r8
   1bfec:	b	1c064 <argp_parse@@Base+0x2174>
   1bff0:	add	r9, r7, #1
   1bff4:	str	r6, [sp, #12]
   1bff8:	mov	r7, r9
   1bffc:	cmp	r9, r6
   1c000:	beq	1c028 <argp_parse@@Base+0x2138>
   1c004:	bl	118c4 <__ctype_b_loc@plt>
   1c008:	add	r9, r9, #1
   1c00c:	ldrb	r3, [r7]
   1c010:	ldr	r2, [r0]
   1c014:	lsl	r3, r3, #1
   1c018:	ldrh	r3, [r2, r3]
   1c01c:	tst	r3, #1
   1c020:	beq	1bff8 <argp_parse@@Base+0x2108>
   1c024:	b	1bea8 <argp_parse@@Base+0x1fb8>
   1c028:	ldr	r6, [sp, #12]
   1c02c:	b	1bea0 <argp_parse@@Base+0x1fb0>
   1c030:	mov	r3, #0
   1c034:	str	r3, [r4, #20]
   1c038:	add	r5, r6, #1
   1c03c:	b	1bda0 <argp_parse@@Base+0x1eb0>
   1c040:	ldr	r3, [r4, #32]
   1c044:	sub	r3, r3, r7
   1c048:	ldr	r2, [sp, #4]
   1c04c:	cmp	r3, r2
   1c050:	ble	1bf7c <argp_parse@@Base+0x208c>
   1c054:	mov	r3, #10
   1c058:	strb	r3, [r7], #1
   1c05c:	mov	r8, r5
   1c060:	mov	r5, r7
   1c064:	ldr	r3, [r4, #12]
   1c068:	sub	r2, r9, r5
   1c06c:	cmp	r2, r3
   1c070:	bge	1c148 <argp_parse@@Base+0x2258>
   1c074:	add	r2, fp, #1
   1c078:	add	r2, r8, r2
   1c07c:	cmp	r9, r2
   1c080:	bne	1c094 <argp_parse@@Base+0x21a4>
   1c084:	ldr	r2, [r4, #32]
   1c088:	sub	r2, r2, r9
   1c08c:	cmp	r3, r2
   1c090:	ble	1c148 <argp_parse@@Base+0x2258>
   1c094:	cmp	r3, #0
   1c098:	movgt	r6, #0
   1c09c:	ble	1c0d0 <argp_parse@@Base+0x21e0>
   1c0a0:	ldr	r0, [r4]
   1c0a4:	ldr	r3, [r0, #20]
   1c0a8:	ldr	r2, [r0, #24]
   1c0ac:	cmp	r3, r2
   1c0b0:	addcc	r2, r3, #1
   1c0b4:	strcc	r2, [r0, #20]
   1c0b8:	strbcc	sl, [r3]
   1c0bc:	bcs	1c16c <argp_parse@@Base+0x227c>
   1c0c0:	add	r6, r6, #1
   1c0c4:	ldr	r3, [r4, #12]
   1c0c8:	cmp	r3, r6
   1c0cc:	bgt	1c0a0 <argp_parse@@Base+0x21b0>
   1c0d0:	cmp	r5, r9
   1c0d4:	bcc	1c178 <argp_parse@@Base+0x2288>
   1c0d8:	sub	r9, r9, r8
   1c0dc:	sub	fp, fp, r9
   1c0e0:	add	fp, r5, fp
   1c0e4:	str	fp, [r4, #28]
   1c0e8:	ldr	r3, [r4, #12]
   1c0ec:	cmp	r3, #0
   1c0f0:	mvneq	r3, #0
   1c0f4:	str	r3, [r4, #20]
   1c0f8:	b	1bda0 <argp_parse@@Base+0x1eb0>
   1c0fc:	sub	r8, r8, r9
   1c100:	mov	r0, r2
   1c104:	mov	r2, r8
   1c108:	mov	r1, r9
   1c10c:	add	r0, r7, r0
   1c110:	bl	116c0 <memmove@plt>
   1c114:	ldr	r9, [r4, #12]
   1c118:	add	r9, r9, #1
   1c11c:	add	r9, r7, r9
   1c120:	add	r8, r9, r8
   1c124:	sub	fp, r8, r5
   1c128:	mov	r3, #10
   1c12c:	strb	r3, [r7], #1
   1c130:	mov	r8, r5
   1c134:	mov	r5, r7
   1c138:	b	1c064 <argp_parse@@Base+0x2174>
   1c13c:	mov	r1, #10
   1c140:	bl	119c0 <__overflow@plt>
   1c144:	b	1bfdc <argp_parse@@Base+0x20ec>
   1c148:	cmp	r3, #0
   1c14c:	movgt	r3, #0
   1c150:	ble	1c0d0 <argp_parse@@Base+0x21e0>
   1c154:	strb	sl, [r5], #1
   1c158:	add	r3, r3, #1
   1c15c:	ldr	r2, [r4, #12]
   1c160:	cmp	r2, r3
   1c164:	bgt	1c154 <argp_parse@@Base+0x2264>
   1c168:	b	1c0d0 <argp_parse@@Base+0x21e0>
   1c16c:	ldr	r1, [sp, #8]
   1c170:	bl	119c0 <__overflow@plt>
   1c174:	b	1c0c0 <argp_parse@@Base+0x21d0>
   1c178:	add	r2, r8, fp
   1c17c:	sub	r2, r2, r9
   1c180:	mov	r1, r9
   1c184:	mov	r0, r5
   1c188:	bl	116c0 <memmove@plt>
   1c18c:	b	1c0d8 <argp_parse@@Base+0x21e8>
   1c190:	mov	r1, r7
   1c194:	b	1be8c <argp_parse@@Base+0x1f9c>
   1c198:	sub	fp, r8, r5
   1c19c:	mov	r2, fp
   1c1a0:	mov	r1, #10
   1c1a4:	mov	r0, r5
   1c1a8:	bl	11978 <memchr@plt>
   1c1ac:	mov	r6, r0
   1c1b0:	b	1bd1c <argp_parse@@Base+0x1e2c>
   1c1b4:	str	r4, [sp, #-8]!
   1c1b8:	str	lr, [sp, #4]
   1c1bc:	mov	r4, r0
   1c1c0:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1c1c4:	ldr	r2, [r4, #28]
   1c1c8:	ldr	r0, [r4, #24]
   1c1cc:	cmp	r2, r0
   1c1d0:	bls	1c1e4 <argp_parse@@Base+0x22f4>
   1c1d4:	ldr	r3, [r4]
   1c1d8:	sub	r2, r2, r0
   1c1dc:	mov	r1, #1
   1c1e0:	bl	11738 <fwrite_unlocked@plt>
   1c1e4:	ldr	r0, [r4, #24]
   1c1e8:	bl	1ae34 <argp_parse@@Base+0xf44>
   1c1ec:	mov	r0, r4
   1c1f0:	bl	1ae34 <argp_parse@@Base+0xf44>
   1c1f4:	ldr	r4, [sp]
   1c1f8:	add	sp, sp, #4
   1c1fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1c200:	ldr	r3, [r0, #32]
   1c204:	ldr	r2, [r0, #28]
   1c208:	sub	r3, r3, r2
   1c20c:	cmp	r3, r1
   1c210:	bcc	1c21c <argp_parse@@Base+0x232c>
   1c214:	mov	r0, #1
   1c218:	bx	lr
   1c21c:	strd	r4, [sp, #-16]!
   1c220:	str	r6, [sp, #8]
   1c224:	str	lr, [sp, #12]
   1c228:	mov	r5, r1
   1c22c:	mov	r4, r0
   1c230:	bl	1bc88 <argp_parse@@Base+0x1d98>
   1c234:	ldr	r0, [r4, #24]
   1c238:	ldr	r2, [r4, #28]
   1c23c:	ldr	r3, [r4]
   1c240:	sub	r2, r2, r0
   1c244:	mov	r1, #1
   1c248:	bl	11738 <fwrite_unlocked@plt>
   1c24c:	ldr	r2, [r4, #28]
   1c250:	ldr	r3, [r4, #24]
   1c254:	sub	r1, r2, r3
   1c258:	cmp	r1, r0
   1c25c:	bne	1c29c <argp_parse@@Base+0x23ac>
   1c260:	str	r3, [r4, #28]
   1c264:	mov	r2, #0
   1c268:	str	r2, [r4, #16]
   1c26c:	ldr	r1, [r4, #32]
   1c270:	sub	r1, r1, r3
   1c274:	cmp	r1, r5
   1c278:	movcs	r0, #1
   1c27c:	bcs	1c2c4 <argp_parse@@Base+0x23d4>
   1c280:	adds	r5, r1, r5
   1c284:	bcc	1c2d4 <argp_parse@@Base+0x23e4>
   1c288:	bl	11918 <__errno_location@plt>
   1c28c:	mov	r3, #12
   1c290:	str	r3, [r0]
   1c294:	mov	r0, #0
   1c298:	b	1c2c4 <argp_parse@@Base+0x23d4>
   1c29c:	sub	r2, r2, r0
   1c2a0:	str	r2, [r4, #28]
   1c2a4:	ldr	r1, [r4, #16]
   1c2a8:	sub	r1, r1, r0
   1c2ac:	str	r1, [r4, #16]
   1c2b0:	sub	r2, r2, r3
   1c2b4:	add	r1, r3, r0
   1c2b8:	mov	r0, r3
   1c2bc:	bl	116c0 <memmove@plt>
   1c2c0:	mov	r0, #0
   1c2c4:	ldrd	r4, [sp]
   1c2c8:	ldr	r6, [sp, #8]
   1c2cc:	add	sp, sp, #12
   1c2d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c2d4:	mov	r1, r5
   1c2d8:	mov	r0, r3
   1c2dc:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   1c2e0:	cmp	r0, #0
   1c2e4:	beq	1c288 <argp_parse@@Base+0x2398>
   1c2e8:	str	r0, [r4, #24]
   1c2ec:	add	r5, r0, r5
   1c2f0:	str	r5, [r4, #32]
   1c2f4:	str	r0, [r4, #28]
   1c2f8:	mov	r0, #1
   1c2fc:	b	1c2c4 <argp_parse@@Base+0x23d4>
   1c300:	push	{r1, r2, r3}
   1c304:	strd	r4, [sp, #-16]!
   1c308:	str	r6, [sp, #8]
   1c30c:	str	lr, [sp, #12]
   1c310:	sub	sp, sp, #12
   1c314:	mov	r5, r0
   1c318:	mov	r1, #150	; 0x96
   1c31c:	add	r6, sp, #32
   1c320:	mov	r0, r5
   1c324:	bl	1c200 <argp_parse@@Base+0x2310>
   1c328:	cmp	r0, #0
   1c32c:	beq	1c360 <argp_parse@@Base+0x2470>
   1c330:	str	r6, [sp, #4]
   1c334:	ldr	r0, [r5, #28]
   1c338:	ldr	r4, [r5, #32]
   1c33c:	sub	r4, r4, r0
   1c340:	mov	r3, r6
   1c344:	ldr	r2, [sp, #28]
   1c348:	mov	r1, r4
   1c34c:	bl	11a2c <vsnprintf@plt>
   1c350:	cmp	r0, r4
   1c354:	bcc	1c380 <argp_parse@@Base+0x2490>
   1c358:	add	r1, r0, #1
   1c35c:	b	1c320 <argp_parse@@Base+0x2430>
   1c360:	mvn	r0, #0
   1c364:	add	sp, sp, #12
   1c368:	ldrd	r4, [sp]
   1c36c:	ldr	r6, [sp, #8]
   1c370:	ldr	lr, [sp, #12]
   1c374:	add	sp, sp, #16
   1c378:	add	sp, sp, #12
   1c37c:	bx	lr
   1c380:	ldr	r2, [r5, #28]
   1c384:	add	r3, r2, r0
   1c388:	str	r3, [r5, #28]
   1c38c:	b	1c364 <argp_parse@@Base+0x2474>
   1c390:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1c394:	strd	r6, [sp, #8]
   1c398:	strd	r8, [sp, #16]
   1c39c:	str	lr, [sp, #24]
   1c3a0:	ldr	r5, [r1, #28]
   1c3a4:	ldr	r6, [r1, #32]
   1c3a8:	ldr	r8, [r1]
   1c3ac:	add	r7, r0, r6, lsl #2
   1c3b0:	b	1c3e0 <argp_parse@@Base+0x24f0>
   1c3b4:	add	r3, r0, r5, lsl #2
   1c3b8:	add	r4, r9, r5
   1c3bc:	add	r4, r0, r4, lsl #2
   1c3c0:	mov	r2, r7
   1c3c4:	ldr	ip, [r3]
   1c3c8:	ldr	lr, [r2]
   1c3cc:	str	lr, [r3], #4
   1c3d0:	str	ip, [r2], #4
   1c3d4:	cmp	r3, r4
   1c3d8:	bne	1c3c4 <argp_parse@@Base+0x24d4>
   1c3dc:	add	r5, r5, r9
   1c3e0:	cmp	r8, r6
   1c3e4:	movle	r3, #0
   1c3e8:	movgt	r3, #1
   1c3ec:	cmp	r5, r6
   1c3f0:	movge	r3, #0
   1c3f4:	cmp	r3, #0
   1c3f8:	beq	1c43c <argp_parse@@Base+0x254c>
   1c3fc:	sub	r9, r8, r6
   1c400:	sub	r3, r6, r5
   1c404:	cmp	r9, r3
   1c408:	ble	1c3b4 <argp_parse@@Base+0x24c4>
   1c40c:	add	r2, r0, r5, lsl #2
   1c410:	sub	r9, r8, r3
   1c414:	add	r3, r0, r9, lsl #2
   1c418:	add	r4, r0, r8, lsl #2
   1c41c:	ldr	ip, [r2]
   1c420:	ldr	lr, [r3]
   1c424:	str	lr, [r2], #4
   1c428:	str	ip, [r3], #4
   1c42c:	cmp	r3, r4
   1c430:	bne	1c41c <argp_parse@@Base+0x252c>
   1c434:	mov	r8, r9
   1c438:	b	1c3e0 <argp_parse@@Base+0x24f0>
   1c43c:	ldr	r0, [r1]
   1c440:	ldr	r3, [r1, #32]
   1c444:	sub	r2, r0, r3
   1c448:	ldr	r3, [r1, #28]
   1c44c:	add	r3, r3, r2
   1c450:	str	r3, [r1, #28]
   1c454:	str	r0, [r1, #32]
   1c458:	ldrd	r4, [sp]
   1c45c:	ldrd	r6, [sp, #8]
   1c460:	ldrd	r8, [sp, #16]
   1c464:	add	sp, sp, #24
   1c468:	pop	{pc}		; (ldr pc, [sp], #4)
   1c46c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c470:	strd	r6, [sp, #8]
   1c474:	strd	r8, [sp, #16]
   1c478:	strd	sl, [sp, #24]
   1c47c:	str	lr, [sp, #32]
   1c480:	sub	sp, sp, #52	; 0x34
   1c484:	str	r0, [sp, #32]
   1c488:	str	r1, [sp, #20]
   1c48c:	str	r2, [sp, #28]
   1c490:	str	r3, [sp, #16]
   1c494:	ldr	fp, [sp, #96]	; 0x60
   1c498:	ldr	r9, [fp, #20]
   1c49c:	ldrb	r3, [r9]
   1c4a0:	cmp	r3, #0
   1c4a4:	cmpne	r3, #61	; 0x3d
   1c4a8:	beq	1c4e0 <argp_parse@@Base+0x25f0>
   1c4ac:	mov	r8, r9
   1c4b0:	ldrb	r3, [r8, #1]!
   1c4b4:	cmp	r3, #0
   1c4b8:	cmpne	r3, #61	; 0x3d
   1c4bc:	bne	1c4b0 <argp_parse@@Base+0x25c0>
   1c4c0:	sub	r7, r8, r9
   1c4c4:	ldr	r5, [sp, #16]
   1c4c8:	ldr	sl, [r5]
   1c4cc:	cmp	sl, #0
   1c4d0:	beq	1c9a4 <argp_parse@@Base+0x2ab4>
   1c4d4:	mov	r4, sl
   1c4d8:	mov	r6, #0
   1c4dc:	b	1c4f8 <argp_parse@@Base+0x2608>
   1c4e0:	mov	r8, r9
   1c4e4:	b	1c4c0 <argp_parse@@Base+0x25d0>
   1c4e8:	add	r6, r6, #1
   1c4ec:	ldr	r4, [r5, #16]!
   1c4f0:	cmp	r4, #0
   1c4f4:	beq	1c9a8 <argp_parse@@Base+0x2ab8>
   1c4f8:	str	r5, [sp, #12]
   1c4fc:	mov	r2, r7
   1c500:	mov	r1, r9
   1c504:	mov	r0, r4
   1c508:	bl	11aa4 <strncmp@plt>
   1c50c:	cmp	r0, #0
   1c510:	bne	1c4e8 <argp_parse@@Base+0x25f8>
   1c514:	mov	r0, r4
   1c518:	bl	118e8 <strlen@plt>
   1c51c:	cmp	r0, r7
   1c520:	bne	1c4e8 <argp_parse@@Base+0x25f8>
   1c524:	cmp	r5, #0
   1c528:	beq	1c9b0 <argp_parse@@Base+0x2ac0>
   1c52c:	ldr	r3, [fp]
   1c530:	add	r2, r3, #1
   1c534:	str	r2, [fp]
   1c538:	mov	r1, #0
   1c53c:	str	r1, [fp, #20]
   1c540:	ldrb	r1, [r8]
   1c544:	cmp	r1, #0
   1c548:	beq	1c8f8 <argp_parse@@Base+0x2a08>
   1c54c:	ldr	r3, [sp, #12]
   1c550:	ldr	r3, [r3, #4]
   1c554:	cmp	r3, #0
   1c558:	beq	1c8a4 <argp_parse@@Base+0x29b4>
   1c55c:	add	r8, r8, #1
   1c560:	str	r8, [fp, #12]
   1c564:	ldr	r3, [sp, #88]	; 0x58
   1c568:	cmp	r3, #0
   1c56c:	strne	r6, [r3]
   1c570:	ldr	r2, [sp, #12]
   1c574:	ldr	r3, [r2, #8]
   1c578:	cmp	r3, #0
   1c57c:	beq	1c990 <argp_parse@@Base+0x2aa0>
   1c580:	ldr	r2, [r2, #12]
   1c584:	str	r2, [r3]
   1c588:	mov	r0, #0
   1c58c:	add	sp, sp, #52	; 0x34
   1c590:	ldrd	r4, [sp]
   1c594:	ldrd	r6, [sp, #8]
   1c598:	ldrd	r8, [sp, #16]
   1c59c:	ldrd	sl, [sp, #24]
   1c5a0:	add	sp, sp, #32
   1c5a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1c5a8:	ldr	r2, [sl, #8]
   1c5ac:	ldr	r3, [r9, #8]
   1c5b0:	cmp	r2, r3
   1c5b4:	bne	1c674 <argp_parse@@Base+0x2784>
   1c5b8:	ldr	r2, [sl, #12]
   1c5bc:	ldr	r3, [r9, #12]
   1c5c0:	cmp	r2, r3
   1c5c4:	bne	1c674 <argp_parse@@Base+0x2784>
   1c5c8:	b	1c62c <argp_parse@@Base+0x273c>
   1c5cc:	mov	r0, r6
   1c5d0:	bl	1bb58 <argp_parse@@Base+0x1c68>
   1c5d4:	subs	r3, r0, #0
   1c5d8:	str	r3, [sp, #24]
   1c5dc:	beq	1c6a4 <argp_parse@@Base+0x27b4>
   1c5e0:	mov	r2, r6
   1c5e4:	mov	r1, #0
   1c5e8:	ldr	r7, [sp, #24]
   1c5ec:	mov	r0, r7
   1c5f0:	bl	11954 <memset@plt>
   1c5f4:	ldr	r2, [sp, #36]	; 0x24
   1c5f8:	mov	r1, #1
   1c5fc:	strb	r1, [r7, r2]
   1c600:	ldr	r3, [sp, #44]	; 0x2c
   1c604:	str	r3, [sp, #40]	; 0x28
   1c608:	b	1c694 <argp_parse@@Base+0x27a4>
   1c60c:	ldr	r3, [sp, #24]
   1c610:	cmp	r3, #0
   1c614:	moveq	r5, #1
   1c618:	beq	1c62c <argp_parse@@Base+0x273c>
   1c61c:	mov	r5, #1
   1c620:	b	1c694 <argp_parse@@Base+0x27a4>
   1c624:	str	r4, [sp, #36]	; 0x24
   1c628:	mov	sl, r9
   1c62c:	add	r4, r4, #1
   1c630:	ldr	r0, [r9, #16]!
   1c634:	cmp	r0, #0
   1c638:	beq	1c6ac <argp_parse@@Base+0x27bc>
   1c63c:	ldr	r2, [sp, #12]
   1c640:	ldr	r1, [fp, #20]
   1c644:	bl	11aa4 <strncmp@plt>
   1c648:	cmp	r0, #0
   1c64c:	bne	1c62c <argp_parse@@Base+0x273c>
   1c650:	cmp	sl, #0
   1c654:	beq	1c624 <argp_parse@@Base+0x2734>
   1c658:	ldr	r3, [sp, #92]	; 0x5c
   1c65c:	cmp	r3, #0
   1c660:	bne	1c674 <argp_parse@@Base+0x2784>
   1c664:	ldr	r2, [sl, #4]
   1c668:	ldr	r3, [r9, #4]
   1c66c:	cmp	r2, r3
   1c670:	beq	1c5a8 <argp_parse@@Base+0x26b8>
   1c674:	cmp	r5, #0
   1c678:	bne	1c62c <argp_parse@@Base+0x273c>
   1c67c:	ldr	r3, [sp, #100]	; 0x64
   1c680:	cmp	r3, #0
   1c684:	beq	1c60c <argp_parse@@Base+0x271c>
   1c688:	ldr	r3, [sp, #24]
   1c68c:	cmp	r3, #0
   1c690:	beq	1c5cc <argp_parse@@Base+0x26dc>
   1c694:	ldr	r3, [sp, #24]
   1c698:	mov	r2, #1
   1c69c:	strb	r2, [r3, r4]
   1c6a0:	b	1c62c <argp_parse@@Base+0x273c>
   1c6a4:	mov	r5, #1
   1c6a8:	b	1c62c <argp_parse@@Base+0x273c>
   1c6ac:	str	sl, [sp, #12]
   1c6b0:	ldr	r3, [sp, #24]
   1c6b4:	orrs	r3, r3, r5
   1c6b8:	bne	1c730 <argp_parse@@Base+0x2840>
   1c6bc:	ldr	r3, [sp, #12]
   1c6c0:	cmp	r3, #0
   1c6c4:	bne	1c89c <argp_parse@@Base+0x29ac>
   1c6c8:	ldr	r3, [sp, #92]	; 0x5c
   1c6cc:	cmp	r3, #0
   1c6d0:	beq	1c704 <argp_parse@@Base+0x2814>
   1c6d4:	ldr	r3, [fp]
   1c6d8:	ldr	r2, [sp, #20]
   1c6dc:	ldr	r3, [r2, r3, lsl #2]
   1c6e0:	ldrb	r3, [r3, #1]
   1c6e4:	cmp	r3, #45	; 0x2d
   1c6e8:	beq	1c704 <argp_parse@@Base+0x2814>
   1c6ec:	ldr	r3, [fp, #20]
   1c6f0:	ldrb	r1, [r3]
   1c6f4:	ldr	r0, [sp, #28]
   1c6f8:	bl	11900 <strchr@plt>
   1c6fc:	cmp	r0, #0
   1c700:	bne	1c99c <argp_parse@@Base+0x2aac>
   1c704:	ldr	r3, [sp, #100]	; 0x64
   1c708:	cmp	r3, #0
   1c70c:	bne	1c86c <argp_parse@@Base+0x297c>
   1c710:	mov	r2, #0
   1c714:	str	r2, [fp, #20]
   1c718:	ldr	r3, [fp]
   1c71c:	add	r3, r3, #1
   1c720:	str	r3, [fp]
   1c724:	str	r2, [fp, #8]
   1c728:	mov	r0, #63	; 0x3f
   1c72c:	b	1c58c <argp_parse@@Base+0x269c>
   1c730:	ldr	r3, [sp, #100]	; 0x64
   1c734:	cmp	r3, #0
   1c738:	beq	1c770 <argp_parse@@Base+0x2880>
   1c73c:	cmp	r5, #0
   1c740:	beq	1c7ac <argp_parse@@Base+0x28bc>
   1c744:	movw	r0, #62912	; 0xf5c0
   1c748:	movt	r0, #2
   1c74c:	ldr	r3, [fp, #20]
   1c750:	str	r3, [sp]
   1c754:	ldr	r3, [sp, #104]	; 0x68
   1c758:	ldr	r2, [sp, #20]
   1c75c:	ldr	r2, [r2]
   1c760:	movw	r1, #60248	; 0xeb58
   1c764:	movt	r1, #1
   1c768:	ldr	r0, [r0]
   1c76c:	bl	1190c <fprintf@plt>
   1c770:	ldr	r3, [sp, #40]	; 0x28
   1c774:	cmp	r3, #0
   1c778:	bne	1c860 <argp_parse@@Base+0x2970>
   1c77c:	ldr	r4, [fp, #20]
   1c780:	mov	r0, r4
   1c784:	bl	118e8 <strlen@plt>
   1c788:	add	r0, r4, r0
   1c78c:	str	r0, [fp, #20]
   1c790:	ldr	r3, [fp]
   1c794:	add	r3, r3, #1
   1c798:	str	r3, [fp]
   1c79c:	mov	r3, #0
   1c7a0:	str	r3, [fp, #8]
   1c7a4:	mov	r0, #63	; 0x3f
   1c7a8:	b	1c58c <argp_parse@@Base+0x269c>
   1c7ac:	movw	r4, #62912	; 0xf5c0
   1c7b0:	movt	r4, #2
   1c7b4:	ldr	r0, [r4]
   1c7b8:	bl	11a20 <flockfile@plt>
   1c7bc:	ldr	r3, [fp, #20]
   1c7c0:	str	r3, [sp]
   1c7c4:	ldr	r3, [sp, #104]	; 0x68
   1c7c8:	ldr	r2, [sp, #20]
   1c7cc:	ldr	r2, [r2]
   1c7d0:	movw	r1, #60280	; 0xeb78
   1c7d4:	movt	r1, #1
   1c7d8:	ldr	r0, [r4]
   1c7dc:	bl	1190c <fprintf@plt>
   1c7e0:	cmp	r6, #0
   1c7e4:	ble	1c840 <argp_parse@@Base+0x2950>
   1c7e8:	ldr	r2, [sp, #24]
   1c7ec:	sub	r4, r2, #1
   1c7f0:	sub	r3, r6, #1
   1c7f4:	add	r8, r2, r3
   1c7f8:	movw	r7, #60328	; 0xeba8
   1c7fc:	movt	r7, #1
   1c800:	movw	r6, #62912	; 0xf5c0
   1c804:	movt	r6, #2
   1c808:	ldr	r9, [sp, #16]
   1c80c:	b	1c81c <argp_parse@@Base+0x292c>
   1c810:	add	r5, r5, #1
   1c814:	cmp	r8, r4
   1c818:	beq	1c840 <argp_parse@@Base+0x2950>
   1c81c:	ldrb	r3, [r4, #1]!
   1c820:	cmp	r3, #0
   1c824:	beq	1c810 <argp_parse@@Base+0x2920>
   1c828:	ldr	r3, [r9, r5, lsl #4]
   1c82c:	ldr	r2, [sp, #104]	; 0x68
   1c830:	mov	r1, r7
   1c834:	ldr	r0, [r6]
   1c838:	bl	1190c <fprintf@plt>
   1c83c:	b	1c810 <argp_parse@@Base+0x2920>
   1c840:	movw	r4, #62912	; 0xf5c0
   1c844:	movt	r4, #2
   1c848:	ldr	r1, [r4]
   1c84c:	mov	r0, #10
   1c850:	bl	11a08 <fputc@plt>
   1c854:	ldr	r0, [r4]
   1c858:	bl	117d4 <funlockfile@plt>
   1c85c:	b	1c770 <argp_parse@@Base+0x2880>
   1c860:	ldr	r0, [sp, #24]
   1c864:	bl	1ae34 <argp_parse@@Base+0xf44>
   1c868:	b	1c77c <argp_parse@@Base+0x288c>
   1c86c:	movw	r0, #62912	; 0xf5c0
   1c870:	movt	r0, #2
   1c874:	ldr	r3, [fp, #20]
   1c878:	str	r3, [sp]
   1c87c:	ldr	r3, [sp, #104]	; 0x68
   1c880:	ldr	r2, [sp, #20]
   1c884:	ldr	r2, [r2]
   1c888:	movw	r1, #60336	; 0xebb0
   1c88c:	movt	r1, #1
   1c890:	ldr	r0, [r0]
   1c894:	bl	1190c <fprintf@plt>
   1c898:	b	1c710 <argp_parse@@Base+0x2820>
   1c89c:	ldr	r6, [sp, #36]	; 0x24
   1c8a0:	b	1c52c <argp_parse@@Base+0x263c>
   1c8a4:	ldr	r3, [sp, #100]	; 0x64
   1c8a8:	cmp	r3, #0
   1c8ac:	bne	1c8c4 <argp_parse@@Base+0x29d4>
   1c8b0:	ldr	r3, [sp, #12]
   1c8b4:	ldr	r3, [r3, #12]
   1c8b8:	str	r3, [fp, #8]
   1c8bc:	mov	r0, #63	; 0x3f
   1c8c0:	b	1c58c <argp_parse@@Base+0x269c>
   1c8c4:	movw	r0, #62912	; 0xf5c0
   1c8c8:	movt	r0, #2
   1c8cc:	ldr	r3, [sp, #12]
   1c8d0:	ldr	r3, [r3]
   1c8d4:	str	r3, [sp]
   1c8d8:	ldr	r3, [sp, #104]	; 0x68
   1c8dc:	ldr	r2, [sp, #20]
   1c8e0:	ldr	r2, [r2]
   1c8e4:	movw	r1, #60368	; 0xebd0
   1c8e8:	movt	r1, #1
   1c8ec:	ldr	r0, [r0]
   1c8f0:	bl	1190c <fprintf@plt>
   1c8f4:	b	1c8b0 <argp_parse@@Base+0x29c0>
   1c8f8:	ldr	r1, [sp, #12]
   1c8fc:	ldr	r1, [r1, #4]
   1c900:	cmp	r1, #1
   1c904:	bne	1c564 <argp_parse@@Base+0x2674>
   1c908:	ldr	r1, [sp, #32]
   1c90c:	cmp	r2, r1
   1c910:	bge	1c92c <argp_parse@@Base+0x2a3c>
   1c914:	add	r3, r3, #2
   1c918:	str	r3, [fp]
   1c91c:	ldr	r3, [sp, #20]
   1c920:	ldr	r3, [r3, r2, lsl #2]
   1c924:	str	r3, [fp, #12]
   1c928:	b	1c564 <argp_parse@@Base+0x2674>
   1c92c:	ldr	r3, [sp, #100]	; 0x64
   1c930:	cmp	r3, #0
   1c934:	bne	1c95c <argp_parse@@Base+0x2a6c>
   1c938:	ldr	r3, [sp, #12]
   1c93c:	ldr	r3, [r3, #12]
   1c940:	str	r3, [fp, #8]
   1c944:	ldr	r3, [sp, #28]
   1c948:	ldrb	r3, [r3]
   1c94c:	cmp	r3, #58	; 0x3a
   1c950:	moveq	r0, #58	; 0x3a
   1c954:	movne	r0, #63	; 0x3f
   1c958:	b	1c58c <argp_parse@@Base+0x269c>
   1c95c:	movw	r0, #62912	; 0xf5c0
   1c960:	movt	r0, #2
   1c964:	ldr	r3, [sp, #12]
   1c968:	ldr	r3, [r3]
   1c96c:	str	r3, [sp]
   1c970:	ldr	r3, [sp, #104]	; 0x68
   1c974:	ldr	r2, [sp, #20]
   1c978:	ldr	r2, [r2]
   1c97c:	movw	r1, #60416	; 0xec00
   1c980:	movt	r1, #1
   1c984:	ldr	r0, [r0]
   1c988:	bl	1190c <fprintf@plt>
   1c98c:	b	1c938 <argp_parse@@Base+0x2a48>
   1c990:	ldr	r3, [sp, #12]
   1c994:	ldr	r0, [r3, #12]
   1c998:	b	1c58c <argp_parse@@Base+0x269c>
   1c99c:	mvn	r0, #0
   1c9a0:	b	1c58c <argp_parse@@Base+0x269c>
   1c9a4:	mov	r6, #0
   1c9a8:	cmp	sl, #0
   1c9ac:	beq	1c6c8 <argp_parse@@Base+0x27d8>
   1c9b0:	ldr	r9, [sp, #16]
   1c9b4:	mvn	r3, #0
   1c9b8:	str	r3, [sp, #36]	; 0x24
   1c9bc:	mov	r5, #0
   1c9c0:	str	r5, [sp, #40]	; 0x28
   1c9c4:	str	r5, [sp, #24]
   1c9c8:	mov	r4, r5
   1c9cc:	mov	r3, #1
   1c9d0:	str	r3, [sp, #44]	; 0x2c
   1c9d4:	mov	r0, sl
   1c9d8:	mov	sl, r5
   1c9dc:	str	r7, [sp, #12]
   1c9e0:	b	1c63c <argp_parse@@Base+0x274c>
   1c9e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1c9e8:	strd	r6, [sp, #8]
   1c9ec:	strd	r8, [sp, #16]
   1c9f0:	strd	sl, [sp, #24]
   1c9f4:	str	lr, [sp, #32]
   1c9f8:	sub	sp, sp, #36	; 0x24
   1c9fc:	str	r3, [sp, #24]
   1ca00:	ldr	r4, [sp, #80]	; 0x50
   1ca04:	ldr	r8, [r4, #4]
   1ca08:	subs	r5, r0, #0
   1ca0c:	ble	1cf48 <argp_parse@@Base+0x3058>
   1ca10:	mov	r9, r1
   1ca14:	mov	r6, r2
   1ca18:	mov	r3, #0
   1ca1c:	str	r3, [r4, #12]
   1ca20:	ldr	r3, [r4]
   1ca24:	cmp	r3, #0
   1ca28:	beq	1ca4c <argp_parse@@Base+0x2b5c>
   1ca2c:	ldr	r3, [r4, #16]
   1ca30:	cmp	r3, #0
   1ca34:	beq	1ca54 <argp_parse@@Base+0x2b64>
   1ca38:	ldrb	r3, [r2]
   1ca3c:	sub	r3, r3, #43	; 0x2b
   1ca40:	tst	r3, #253	; 0xfd
   1ca44:	addeq	r6, r2, #1
   1ca48:	b	1cab0 <argp_parse@@Base+0x2bc0>
   1ca4c:	mov	r3, #1
   1ca50:	str	r3, [r4]
   1ca54:	ldr	r3, [r4]
   1ca58:	str	r3, [r4, #32]
   1ca5c:	str	r3, [r4, #28]
   1ca60:	mov	r3, #0
   1ca64:	str	r3, [r4, #20]
   1ca68:	ldrb	r3, [r6]
   1ca6c:	cmp	r3, #45	; 0x2d
   1ca70:	moveq	r3, #2
   1ca74:	streq	r3, [r4, #24]
   1ca78:	addeq	r6, r6, #1
   1ca7c:	beq	1caa8 <argp_parse@@Base+0x2bb8>
   1ca80:	cmp	r3, #43	; 0x2b
   1ca84:	moveq	r3, #0
   1ca88:	streq	r3, [r4, #24]
   1ca8c:	addeq	r6, r6, #1
   1ca90:	beq	1caa8 <argp_parse@@Base+0x2bb8>
   1ca94:	ldr	r3, [sp, #84]	; 0x54
   1ca98:	cmp	r3, #0
   1ca9c:	beq	1cb70 <argp_parse@@Base+0x2c80>
   1caa0:	mov	r3, #0
   1caa4:	str	r3, [r4, #24]
   1caa8:	mov	r3, #1
   1caac:	str	r3, [r4, #16]
   1cab0:	ldrb	r3, [r6]
   1cab4:	cmp	r3, #58	; 0x3a
   1cab8:	moveq	r8, #0
   1cabc:	ldr	r3, [r4, #20]
   1cac0:	cmp	r3, #0
   1cac4:	beq	1cad4 <argp_parse@@Base+0x2be4>
   1cac8:	ldrb	r3, [r3]
   1cacc:	cmp	r3, #0
   1cad0:	bne	1cc74 <argp_parse@@Base+0x2d84>
   1cad4:	ldr	r3, [r4]
   1cad8:	ldr	r2, [r4, #32]
   1cadc:	cmp	r2, r3
   1cae0:	strgt	r3, [r4, #32]
   1cae4:	ldr	r2, [r4, #28]
   1cae8:	cmp	r3, r2
   1caec:	strlt	r3, [r4, #28]
   1caf0:	ldr	r2, [r4, #24]
   1caf4:	cmp	r2, #1
   1caf8:	beq	1cb90 <argp_parse@@Base+0x2ca0>
   1cafc:	ldr	r7, [r4]
   1cb00:	cmp	r7, r5
   1cb04:	beq	1cb50 <argp_parse@@Base+0x2c60>
   1cb08:	ldr	sl, [r9, r7, lsl #2]
   1cb0c:	movw	r1, #54516	; 0xd4f4
   1cb10:	movt	r1, #1
   1cb14:	mov	r0, sl
   1cb18:	bl	11654 <strcmp@plt>
   1cb1c:	cmp	r0, #0
   1cb20:	bne	1cf58 <argp_parse@@Base+0x3068>
   1cb24:	add	r7, r7, #1
   1cb28:	str	r7, [r4]
   1cb2c:	ldr	r2, [r4, #28]
   1cb30:	ldr	r3, [r4, #32]
   1cb34:	cmp	r2, r3
   1cb38:	cmpne	r7, r3
   1cb3c:	bne	1cc0c <argp_parse@@Base+0x2d1c>
   1cb40:	cmp	r2, r3
   1cb44:	streq	r7, [r4, #28]
   1cb48:	str	r5, [r4, #32]
   1cb4c:	str	r5, [r4]
   1cb50:	ldr	r3, [r4, #28]
   1cb54:	ldr	r2, [r4, #32]
   1cb58:	cmp	r3, r2
   1cb5c:	mvneq	r0, #0
   1cb60:	beq	1cf84 <argp_parse@@Base+0x3094>
   1cb64:	str	r3, [r4]
   1cb68:	mvn	r0, #0
   1cb6c:	b	1cf84 <argp_parse@@Base+0x3094>
   1cb70:	movw	r0, #60456	; 0xec28
   1cb74:	movt	r0, #1
   1cb78:	bl	11858 <getenv@plt>
   1cb7c:	cmp	r0, #0
   1cb80:	bne	1caa0 <argp_parse@@Base+0x2bb0>
   1cb84:	mov	r3, #1
   1cb88:	str	r3, [r4, #24]
   1cb8c:	b	1caa8 <argp_parse@@Base+0x2bb8>
   1cb90:	ldr	r2, [r4, #32]
   1cb94:	ldr	r1, [r4, #28]
   1cb98:	cmp	r1, r2
   1cb9c:	cmpne	r3, r2
   1cba0:	bne	1cbc0 <argp_parse@@Base+0x2cd0>
   1cba4:	cmp	r3, r2
   1cba8:	strne	r3, [r4, #28]
   1cbac:	ldr	r3, [r4]
   1cbb0:	cmp	r5, r3
   1cbb4:	ble	1cc04 <argp_parse@@Base+0x2d14>
   1cbb8:	add	r1, r9, r3, lsl #2
   1cbbc:	b	1cbe0 <argp_parse@@Base+0x2cf0>
   1cbc0:	mov	r1, r4
   1cbc4:	mov	r0, r9
   1cbc8:	bl	1c390 <argp_parse@@Base+0x24a0>
   1cbcc:	b	1cbac <argp_parse@@Base+0x2cbc>
   1cbd0:	add	r3, r3, #1
   1cbd4:	str	r3, [r4]
   1cbd8:	cmp	r3, r5
   1cbdc:	beq	1cc00 <argp_parse@@Base+0x2d10>
   1cbe0:	ldr	r2, [r1], #4
   1cbe4:	ldrb	r0, [r2]
   1cbe8:	cmp	r0, #45	; 0x2d
   1cbec:	bne	1cbd0 <argp_parse@@Base+0x2ce0>
   1cbf0:	ldrb	r2, [r2, #1]
   1cbf4:	cmp	r2, #0
   1cbf8:	beq	1cbd0 <argp_parse@@Base+0x2ce0>
   1cbfc:	b	1cc04 <argp_parse@@Base+0x2d14>
   1cc00:	mov	r3, r5
   1cc04:	str	r3, [r4, #32]
   1cc08:	b	1cafc <argp_parse@@Base+0x2c0c>
   1cc0c:	mov	r1, r4
   1cc10:	mov	r0, r9
   1cc14:	bl	1c390 <argp_parse@@Base+0x24a0>
   1cc18:	b	1cb48 <argp_parse@@Base+0x2c58>
   1cc1c:	ldrb	r1, [sl, #1]
   1cc20:	cmp	r1, #0
   1cc24:	beq	1cf64 <argp_parse@@Base+0x3074>
   1cc28:	ldr	r3, [sp, #24]
   1cc2c:	cmp	r3, #0
   1cc30:	beq	1cc64 <argp_parse@@Base+0x2d74>
   1cc34:	cmp	r1, #45	; 0x2d
   1cc38:	beq	1cce0 <argp_parse@@Base+0x2df0>
   1cc3c:	ldr	r3, [sp, #76]	; 0x4c
   1cc40:	cmp	r3, #0
   1cc44:	beq	1cc64 <argp_parse@@Base+0x2d74>
   1cc48:	ldrb	r3, [sl, #2]
   1cc4c:	cmp	r3, #0
   1cc50:	bne	1cd24 <argp_parse@@Base+0x2e34>
   1cc54:	mov	r0, r6
   1cc58:	bl	11900 <strchr@plt>
   1cc5c:	cmp	r0, #0
   1cc60:	beq	1cd24 <argp_parse@@Base+0x2e34>
   1cc64:	ldr	r3, [r4]
   1cc68:	ldr	r3, [r9, r3, lsl #2]
   1cc6c:	add	r3, r3, #1
   1cc70:	str	r3, [r4, #20]
   1cc74:	ldr	sl, [r4, #20]
   1cc78:	add	fp, sl, #1
   1cc7c:	str	fp, [r4, #20]
   1cc80:	ldrb	r7, [sl]
   1cc84:	str	r7, [sp, #28]
   1cc88:	mov	r1, r7
   1cc8c:	mov	r0, r6
   1cc90:	bl	11900 <strchr@plt>
   1cc94:	ldrb	r3, [sl, #1]
   1cc98:	cmp	r3, #0
   1cc9c:	bne	1ccac <argp_parse@@Base+0x2dbc>
   1cca0:	ldr	r3, [r4]
   1cca4:	add	r3, r3, #1
   1cca8:	str	r3, [r4]
   1ccac:	sub	r3, r7, #58	; 0x3a
   1ccb0:	uxtb	r3, r3
   1ccb4:	cmp	r0, #0
   1ccb8:	cmpne	r3, #1
   1ccbc:	bls	1cd70 <argp_parse@@Base+0x2e80>
   1ccc0:	ldrb	r3, [r0]
   1ccc4:	cmp	r3, #87	; 0x57
   1ccc8:	beq	1cdac <argp_parse@@Base+0x2ebc>
   1cccc:	ldrb	r3, [r0, #1]
   1ccd0:	cmp	r3, #58	; 0x3a
   1ccd4:	beq	1ce80 <argp_parse@@Base+0x2f90>
   1ccd8:	mov	r0, r7
   1ccdc:	b	1cf84 <argp_parse@@Base+0x3094>
   1cce0:	add	sl, sl, #2
   1cce4:	str	sl, [r4, #20]
   1cce8:	movw	r3, #54516	; 0xd4f4
   1ccec:	movt	r3, #1
   1ccf0:	str	r3, [sp, #16]
   1ccf4:	str	r8, [sp, #12]
   1ccf8:	str	r4, [sp, #8]
   1ccfc:	ldr	r3, [sp, #76]	; 0x4c
   1cd00:	str	r3, [sp, #4]
   1cd04:	ldr	r3, [sp, #72]	; 0x48
   1cd08:	str	r3, [sp]
   1cd0c:	ldr	r3, [sp, #24]
   1cd10:	mov	r2, r6
   1cd14:	mov	r1, r9
   1cd18:	mov	r0, r5
   1cd1c:	bl	1c46c <argp_parse@@Base+0x257c>
   1cd20:	b	1cf84 <argp_parse@@Base+0x3094>
   1cd24:	add	sl, sl, #1
   1cd28:	str	sl, [r4, #20]
   1cd2c:	movw	r3, #60472	; 0xec38
   1cd30:	movt	r3, #1
   1cd34:	str	r3, [sp, #16]
   1cd38:	str	r8, [sp, #12]
   1cd3c:	str	r4, [sp, #8]
   1cd40:	ldr	r3, [sp, #76]	; 0x4c
   1cd44:	str	r3, [sp, #4]
   1cd48:	ldr	r3, [sp, #72]	; 0x48
   1cd4c:	str	r3, [sp]
   1cd50:	ldr	r3, [sp, #24]
   1cd54:	mov	r2, r6
   1cd58:	mov	r1, r9
   1cd5c:	mov	r0, r5
   1cd60:	bl	1c46c <argp_parse@@Base+0x257c>
   1cd64:	cmn	r0, #1
   1cd68:	bne	1cf84 <argp_parse@@Base+0x3094>
   1cd6c:	b	1cc64 <argp_parse@@Base+0x2d74>
   1cd70:	cmp	r8, #0
   1cd74:	bne	1cd88 <argp_parse@@Base+0x2e98>
   1cd78:	ldr	r3, [sp, #28]
   1cd7c:	str	r3, [r4, #8]
   1cd80:	mov	r0, #63	; 0x3f
   1cd84:	b	1cf84 <argp_parse@@Base+0x3094>
   1cd88:	movw	r0, #62912	; 0xf5c0
   1cd8c:	movt	r0, #2
   1cd90:	ldr	r3, [sp, #28]
   1cd94:	ldr	r2, [r9]
   1cd98:	movw	r1, #60476	; 0xec3c
   1cd9c:	movt	r1, #1
   1cda0:	ldr	r0, [r0]
   1cda4:	bl	1190c <fprintf@plt>
   1cda8:	b	1cd78 <argp_parse@@Base+0x2e88>
   1cdac:	ldrb	r1, [r0, #1]
   1cdb0:	ldr	r2, [sp, #24]
   1cdb4:	cmp	r1, #59	; 0x3b
   1cdb8:	movne	r3, #0
   1cdbc:	moveq	r3, #1
   1cdc0:	cmp	r2, #0
   1cdc4:	moveq	r3, #0
   1cdc8:	cmp	r3, #0
   1cdcc:	beq	1cccc <argp_parse@@Base+0x2ddc>
   1cdd0:	ldrb	r3, [sl, #1]
   1cdd4:	cmp	r3, #0
   1cdd8:	strne	fp, [r4, #12]
   1cddc:	bne	1cdf4 <argp_parse@@Base+0x2f04>
   1cde0:	ldr	r3, [r4]
   1cde4:	cmp	r3, r5
   1cde8:	beq	1ce3c <argp_parse@@Base+0x2f4c>
   1cdec:	ldr	r3, [r9, r3, lsl #2]
   1cdf0:	str	r3, [r4, #12]
   1cdf4:	ldr	r3, [r4, #12]
   1cdf8:	str	r3, [r4, #20]
   1cdfc:	mov	r2, #0
   1ce00:	str	r2, [r4, #12]
   1ce04:	movw	r3, #60548	; 0xec84
   1ce08:	movt	r3, #1
   1ce0c:	str	r3, [sp, #16]
   1ce10:	str	r8, [sp, #12]
   1ce14:	str	r4, [sp, #8]
   1ce18:	str	r2, [sp, #4]
   1ce1c:	ldr	r3, [sp, #72]	; 0x48
   1ce20:	str	r3, [sp]
   1ce24:	ldr	r3, [sp, #24]
   1ce28:	mov	r2, r6
   1ce2c:	mov	r1, r9
   1ce30:	mov	r0, r5
   1ce34:	bl	1c46c <argp_parse@@Base+0x257c>
   1ce38:	b	1cf84 <argp_parse@@Base+0x3094>
   1ce3c:	cmp	r8, #0
   1ce40:	bne	1ce5c <argp_parse@@Base+0x2f6c>
   1ce44:	ldr	r3, [sp, #28]
   1ce48:	str	r3, [r4, #8]
   1ce4c:	ldrb	r0, [r6]
   1ce50:	cmp	r0, #58	; 0x3a
   1ce54:	movne	r0, #63	; 0x3f
   1ce58:	b	1cf84 <argp_parse@@Base+0x3094>
   1ce5c:	movw	r0, #62912	; 0xf5c0
   1ce60:	movt	r0, #2
   1ce64:	ldr	r3, [sp, #28]
   1ce68:	ldr	r2, [r9]
   1ce6c:	movw	r1, #60504	; 0xec58
   1ce70:	movt	r1, #1
   1ce74:	ldr	r0, [r0]
   1ce78:	bl	1190c <fprintf@plt>
   1ce7c:	b	1ce44 <argp_parse@@Base+0x2f54>
   1ce80:	ldrb	r3, [r0, #2]
   1ce84:	cmp	r3, #58	; 0x3a
   1ce88:	beq	1ceb4 <argp_parse@@Base+0x2fc4>
   1ce8c:	ldrb	r3, [sl, #1]
   1ce90:	cmp	r3, #0
   1ce94:	beq	1cee4 <argp_parse@@Base+0x2ff4>
   1ce98:	str	fp, [r4, #12]
   1ce9c:	ldr	r3, [r4]
   1cea0:	add	r3, r3, #1
   1cea4:	str	r3, [r4]
   1cea8:	mov	r3, #0
   1ceac:	str	r3, [r4, #20]
   1ceb0:	b	1ccd8 <argp_parse@@Base+0x2de8>
   1ceb4:	ldrb	r3, [sl, #1]
   1ceb8:	cmp	r3, #0
   1cebc:	moveq	r3, #0
   1cec0:	streq	r3, [r4, #12]
   1cec4:	beq	1ced8 <argp_parse@@Base+0x2fe8>
   1cec8:	str	fp, [r4, #12]
   1cecc:	ldr	r3, [r4]
   1ced0:	add	r3, r3, #1
   1ced4:	str	r3, [r4]
   1ced8:	mov	r3, #0
   1cedc:	str	r3, [r4, #20]
   1cee0:	b	1ccd8 <argp_parse@@Base+0x2de8>
   1cee4:	ldr	r3, [r4]
   1cee8:	cmp	r3, r5
   1ceec:	beq	1cf04 <argp_parse@@Base+0x3014>
   1cef0:	add	r2, r3, #1
   1cef4:	str	r2, [r4]
   1cef8:	ldr	r3, [r9, r3, lsl #2]
   1cefc:	str	r3, [r4, #12]
   1cf00:	b	1cea8 <argp_parse@@Base+0x2fb8>
   1cf04:	cmp	r8, #0
   1cf08:	bne	1cf24 <argp_parse@@Base+0x3034>
   1cf0c:	ldr	r3, [sp, #28]
   1cf10:	str	r3, [r4, #8]
   1cf14:	ldrb	r7, [r6]
   1cf18:	cmp	r7, #58	; 0x3a
   1cf1c:	movne	r7, #63	; 0x3f
   1cf20:	b	1cea8 <argp_parse@@Base+0x2fb8>
   1cf24:	movw	r0, #62912	; 0xf5c0
   1cf28:	movt	r0, #2
   1cf2c:	ldr	r3, [sp, #28]
   1cf30:	ldr	r2, [r9]
   1cf34:	movw	r1, #60504	; 0xec58
   1cf38:	movt	r1, #1
   1cf3c:	ldr	r0, [r0]
   1cf40:	bl	1190c <fprintf@plt>
   1cf44:	b	1cf0c <argp_parse@@Base+0x301c>
   1cf48:	mvn	r0, #0
   1cf4c:	b	1cf84 <argp_parse@@Base+0x3094>
   1cf50:	mvn	r0, #0
   1cf54:	b	1cf84 <argp_parse@@Base+0x3094>
   1cf58:	ldrb	r3, [sl]
   1cf5c:	cmp	r3, #45	; 0x2d
   1cf60:	beq	1cc1c <argp_parse@@Base+0x2d2c>
   1cf64:	ldr	r3, [r4, #24]
   1cf68:	cmp	r3, #0
   1cf6c:	beq	1cf50 <argp_parse@@Base+0x3060>
   1cf70:	add	r3, r7, #1
   1cf74:	str	r3, [r4]
   1cf78:	ldr	r3, [r9, r7, lsl #2]
   1cf7c:	str	r3, [r4, #12]
   1cf80:	mov	r0, #1
   1cf84:	add	sp, sp, #36	; 0x24
   1cf88:	ldrd	r4, [sp]
   1cf8c:	ldrd	r6, [sp, #8]
   1cf90:	ldrd	r8, [sp, #16]
   1cf94:	ldrd	sl, [sp, #24]
   1cf98:	add	sp, sp, #32
   1cf9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1cfa0:	strd	r4, [sp, #-12]!
   1cfa4:	str	lr, [sp, #8]
   1cfa8:	sub	sp, sp, #20
   1cfac:	movw	r4, #64024	; 0xfa18
   1cfb0:	movt	r4, #2
   1cfb4:	movw	r5, #62892	; 0xf5ac
   1cfb8:	movt	r5, #2
   1cfbc:	ldr	ip, [r5]
   1cfc0:	str	ip, [r4]
   1cfc4:	ldr	ip, [r5, #4]
   1cfc8:	str	ip, [r4, #4]
   1cfcc:	ldr	ip, [sp, #40]	; 0x28
   1cfd0:	str	ip, [sp, #12]
   1cfd4:	str	r4, [sp, #8]
   1cfd8:	ldr	ip, [sp, #36]	; 0x24
   1cfdc:	str	ip, [sp, #4]
   1cfe0:	ldr	ip, [sp, #32]
   1cfe4:	str	ip, [sp]
   1cfe8:	bl	1c9e4 <argp_parse@@Base+0x2af4>
   1cfec:	ldr	r3, [r4]
   1cff0:	str	r3, [r5]
   1cff4:	movw	r3, #148	; 0x94
   1cff8:	movt	r3, #3
   1cffc:	ldr	r2, [r4, #12]
   1d000:	str	r2, [r3]
   1d004:	ldr	r3, [r4, #8]
   1d008:	str	r3, [r5, #8]
   1d00c:	add	sp, sp, #20
   1d010:	ldrd	r4, [sp]
   1d014:	add	sp, sp, #8
   1d018:	pop	{pc}		; (ldr pc, [sp], #4)
   1d01c:	push	{lr}		; (str lr, [sp, #-4]!)
   1d020:	sub	sp, sp, #20
   1d024:	mov	r3, #1
   1d028:	str	r3, [sp, #8]
   1d02c:	mov	r3, #0
   1d030:	str	r3, [sp, #4]
   1d034:	str	r3, [sp]
   1d038:	bl	1cfa0 <argp_parse@@Base+0x30b0>
   1d03c:	add	sp, sp, #20
   1d040:	pop	{pc}		; (ldr pc, [sp], #4)
   1d044:	str	r4, [sp, #-8]!
   1d048:	str	lr, [sp, #4]
   1d04c:	umull	r2, r3, r1, r2
   1d050:	cmp	r3, #0
   1d054:	bne	1d06c <argp_parse@@Base+0x317c>
   1d058:	mov	r1, r2
   1d05c:	bl	1bb94 <argp_parse@@Base+0x1ca4>
   1d060:	ldr	r4, [sp]
   1d064:	add	sp, sp, #4
   1d068:	pop	{pc}		; (ldr pc, [sp], #4)
   1d06c:	bl	11918 <__errno_location@plt>
   1d070:	mov	r3, #12
   1d074:	str	r3, [r0]
   1d078:	mov	r0, #0
   1d07c:	b	1d060 <argp_parse@@Base+0x3170>
   1d080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1d084:	mov	r7, r0
   1d088:	ldr	r6, [pc, #72]	; 1d0d8 <argp_parse@@Base+0x31e8>
   1d08c:	ldr	r5, [pc, #72]	; 1d0dc <argp_parse@@Base+0x31ec>
   1d090:	add	r6, pc, r6
   1d094:	add	r5, pc, r5
   1d098:	sub	r6, r6, r5
   1d09c:	mov	r8, r1
   1d0a0:	mov	r9, r2
   1d0a4:	bl	11610 <calloc@plt-0x20>
   1d0a8:	asrs	r6, r6, #2
   1d0ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d0b0:	mov	r4, #0
   1d0b4:	add	r4, r4, #1
   1d0b8:	ldr	r3, [r5], #4
   1d0bc:	mov	r2, r9
   1d0c0:	mov	r1, r8
   1d0c4:	mov	r0, r7
   1d0c8:	blx	r3
   1d0cc:	cmp	r6, r4
   1d0d0:	bne	1d0b4 <argp_parse@@Base+0x31c4>
   1d0d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1d0d8:	andeq	r1, r1, r4, ror lr
   1d0dc:	andeq	r1, r1, ip, ror #28
   1d0e0:	bx	lr

Disassembly of section .fini:

0001d0e4 <.fini>:
   1d0e4:	push	{r3, lr}
   1d0e8:	pop	{r3, pc}
