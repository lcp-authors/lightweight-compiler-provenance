
../repos/charybdis/extensions/.libs/m_roleplay.so:     file format elf32-littlearm


Disassembly of section .init:

000008f8 <_init>:
 8f8:	push	{r3, lr}
 8fc:	bl	9d8 <call_weak_fn>
 900:	pop	{r3, pc}

Disassembly of section .plt:

00000904 <.plt>:
 904:	push	{lr}		; (str lr, [sp, #-4]!)
 908:	ldr	lr, [pc, #4]	; 914 <.plt+0x10>
 90c:	add	lr, pc, lr
 910:	ldr	pc, [lr, #8]!
 914:	.word	0x000116ec

00000918 <sendto_channel_local@plt>:
 918:	add	ip, pc, #0, 12
 91c:	add	ip, ip, #69632	; 0x11000
 920:	ldr	pc, [ip, #1772]!	; 0x6ec

00000924 <can_send@plt>:
 924:	add	ip, pc, #0, 12
 928:	add	ip, ip, #69632	; 0x11000
 92c:	ldr	pc, [ip, #1764]!	; 0x6e4

00000930 <cflag_add@plt>:
 930:	add	ip, pc, #0, 12
 934:	add	ip, ip, #69632	; 0x11000
 938:	ldr	pc, [ip, #1756]!	; 0x6dc

0000093c <sendto_match_servs@plt>:
 93c:	add	ip, pc, #0, 12
 940:	add	ip, ip, #69632	; 0x11000
 944:	ldr	pc, [ip, #1748]!	; 0x6d4

00000948 <__cxa_finalize@plt>:
 948:	add	ip, pc, #0, 12
 94c:	add	ip, ip, #69632	; 0x11000
 950:	ldr	pc, [ip, #1740]!	; 0x6cc

00000954 <sendto_one@plt>:
 954:	add	ip, pc, #0, 12
 958:	add	ip, ip, #69632	; 0x11000
 95c:	ldr	pc, [ip, #1732]!	; 0x6c4

00000960 <find_channel@plt>:
 960:	add	ip, pc, #0, 12
 964:	add	ip, ip, #69632	; 0x11000
 968:	ldr	pc, [ip, #1724]!	; 0x6bc

0000096c <find_channel_membership@plt>:
 96c:	add	ip, pc, #0, 12
 970:	add	ip, ip, #69632	; 0x11000
 974:	ldr	pc, [ip, #1716]!	; 0x6b4

00000978 <__gmon_start__@plt>:
 978:	add	ip, pc, #0, 12
 97c:	add	ip, ip, #69632	; 0x11000
 980:	ldr	pc, [ip, #1708]!	; 0x6ac

00000984 <sendto_one_numeric@plt>:
 984:	add	ip, pc, #0, 12
 988:	add	ip, ip, #69632	; 0x11000
 98c:	ldr	pc, [ip, #1700]!	; 0x6a4

00000990 <add_channel_target@plt>:
 990:	add	ip, pc, #0, 12
 994:	add	ip, ip, #69632	; 0x11000
 998:	ldr	pc, [ip, #1692]!	; 0x69c

0000099c <snprintf@plt>:
 99c:	add	ip, pc, #0, 12
 9a0:	add	ip, ip, #69632	; 0x11000
 9a4:	ldr	pc, [ip, #1684]!	; 0x694

000009a8 <flood_endgrace@plt>:
 9a8:	add	ip, pc, #0, 12
 9ac:	add	ip, ip, #69632	; 0x11000
 9b0:	ldr	pc, [ip, #1676]!	; 0x68c

000009b4 <rb_strlcpy@plt>:
 9b4:	add	ip, pc, #0, 12
 9b8:	add	ip, ip, #69632	; 0x11000
 9bc:	ldr	pc, [ip, #1668]!	; 0x684

000009c0 <flood_attack_channel@plt>:
 9c0:	add	ip, pc, #0, 12
 9c4:	add	ip, ip, #69632	; 0x11000
 9c8:	ldr	pc, [ip, #1660]!	; 0x67c

000009cc <cflag_orphan@plt>:
 9cc:	add	ip, pc, #0, 12
 9d0:	add	ip, ip, #69632	; 0x11000
 9d4:	ldr	pc, [ip, #1652]!	; 0x674

Disassembly of section .text:

000009d8 <call_weak_fn>:
     9d8:	ldr	r3, [pc, #20]	; 9f4 <call_weak_fn+0x1c>
     9dc:	ldr	r2, [pc, #20]	; 9f8 <call_weak_fn+0x20>
     9e0:	add	r3, pc, r3
     9e4:	ldr	r2, [r3, r2]
     9e8:	cmp	r2, #0
     9ec:	bxeq	lr
     9f0:	b	978 <__gmon_start__@plt>
     9f4:	.word	0x00011618
     9f8:	.word	0x00000058

000009fc <deregister_tm_clones>:
     9fc:	ldr	r0, [pc, #44]	; a30 <deregister_tm_clones+0x34>
     a00:	ldr	r3, [pc, #44]	; a34 <deregister_tm_clones+0x38>
     a04:	add	r0, pc, r0
     a08:	add	r3, pc, r3
     a0c:	cmp	r3, r0
     a10:	ldr	r3, [pc, #32]	; a38 <deregister_tm_clones+0x3c>
     a14:	add	r3, pc, r3
     a18:	bxeq	lr
     a1c:	ldr	r2, [pc, #24]	; a3c <deregister_tm_clones+0x40>
     a20:	ldr	r3, [r3, r2]
     a24:	cmp	r3, #0
     a28:	bxeq	lr
     a2c:	bx	r3
     a30:	.word	0x0001188c
     a34:	.word	0x00011888
     a38:	.word	0x000115e4
     a3c:	.word	0x00000050

00000a40 <register_tm_clones>:
     a40:	ldr	r0, [pc, #56]	; a80 <register_tm_clones+0x40>
     a44:	ldr	r3, [pc, #56]	; a84 <register_tm_clones+0x44>
     a48:	add	r0, pc, r0
     a4c:	add	r3, pc, r3
     a50:	sub	r1, r3, r0
     a54:	ldr	r3, [pc, #44]	; a88 <register_tm_clones+0x48>
     a58:	asr	r1, r1, #2
     a5c:	add	r3, pc, r3
     a60:	add	r1, r1, r1, lsr #31
     a64:	asrs	r1, r1, #1
     a68:	bxeq	lr
     a6c:	ldr	r2, [pc, #24]	; a8c <register_tm_clones+0x4c>
     a70:	ldr	r3, [r3, r2]
     a74:	cmp	r3, #0
     a78:	bxeq	lr
     a7c:	bx	r3
     a80:	.word	0x00011848
     a84:	.word	0x00011844
     a88:	.word	0x0001159c
     a8c:	.word	0x00000064

00000a90 <__do_global_dtors_aux>:
     a90:	ldr	r3, [pc, #76]	; ae4 <__do_global_dtors_aux+0x54>
     a94:	ldr	r2, [pc, #76]	; ae8 <__do_global_dtors_aux+0x58>
     a98:	add	r3, pc, r3
     a9c:	add	r2, pc, r2
     aa0:	ldrb	r3, [r3]
     aa4:	cmp	r3, #0
     aa8:	bxne	lr
     aac:	ldr	r3, [pc, #56]	; aec <__do_global_dtors_aux+0x5c>
     ab0:	push	{r4, lr}
     ab4:	ldr	r3, [r2, r3]
     ab8:	cmp	r3, #0
     abc:	beq	acc <__do_global_dtors_aux+0x3c>
     ac0:	ldr	r3, [pc, #40]	; af0 <__do_global_dtors_aux+0x60>
     ac4:	ldr	r0, [pc, r3]
     ac8:	bl	948 <__cxa_finalize@plt>
     acc:	bl	9fc <deregister_tm_clones>
     ad0:	ldr	r3, [pc, #28]	; af4 <__do_global_dtors_aux+0x64>
     ad4:	mov	r2, #1
     ad8:	add	r3, pc, r3
     adc:	strb	r2, [r3]
     ae0:	pop	{r4, pc}
     ae4:	.word	0x000117f8
     ae8:	.word	0x0001155c
     aec:	.word	0x0000004c
     af0:	.word	0x000115a4
     af4:	.word	0x000117b8

00000af8 <frame_dummy>:
     af8:	b	a40 <register_tm_clones>

00000afc <m_scene>:
     afc:	push	{fp, lr}
     b00:	mov	fp, sp
     b04:	sub	sp, sp, #8
     b08:	mov	r0, r2
     b0c:	ldr	r2, [fp, #8]
     b10:	ldmib	r2, {r1, r2}
     b14:	ldr	r3, [pc, #28]	; b38 <m_scene+0x3c>
     b18:	add	r3, pc, r3
     b1c:	str	r3, [sp]
     b20:	str	r2, [sp, #4]
     b24:	mov	r2, #0
     b28:	mov	r3, #0
     b2c:	bl	cb0 <m_displaymsg>
     b30:	mov	sp, fp
     b34:	pop	{fp, pc}
     b38:	.word	0x0000056e

00000b3c <m_npc>:
     b3c:	push	{fp, lr}
     b40:	mov	fp, sp
     b44:	sub	sp, sp, #8
     b48:	mov	r0, r2
     b4c:	ldr	r2, [fp, #8]
     b50:	ldmib	r2, {r1, r3}
     b54:	ldr	r2, [r2, #12]
     b58:	str	r3, [sp]
     b5c:	str	r2, [sp, #4]
     b60:	mov	r2, #1
     b64:	mov	r3, #0
     b68:	bl	cb0 <m_displaymsg>
     b6c:	mov	sp, fp
     b70:	pop	{fp, pc}

00000b74 <m_fsay>:
     b74:	push	{fp, lr}
     b78:	mov	fp, sp
     b7c:	sub	sp, sp, #8
     b80:	mov	r0, r2
     b84:	ldr	r2, [fp, #8]
     b88:	ldmib	r2, {r1, r3}
     b8c:	ldr	r2, [r2, #12]
     b90:	str	r3, [sp]
     b94:	str	r2, [sp, #4]
     b98:	mov	r2, #0
     b9c:	mov	r3, #0
     ba0:	bl	cb0 <m_displaymsg>
     ba4:	mov	sp, fp
     ba8:	pop	{fp, pc}

00000bac <m_npca>:
     bac:	push	{fp, lr}
     bb0:	mov	fp, sp
     bb4:	sub	sp, sp, #8
     bb8:	mov	r0, r2
     bbc:	ldr	r2, [fp, #8]
     bc0:	ldmib	r2, {r1, r3}
     bc4:	ldr	r2, [r2, #12]
     bc8:	str	r3, [sp]
     bcc:	str	r2, [sp, #4]
     bd0:	mov	r2, #1
     bd4:	mov	r3, #1
     bd8:	bl	cb0 <m_displaymsg>
     bdc:	mov	sp, fp
     be0:	pop	{fp, pc}

00000be4 <m_faction>:
     be4:	push	{fp, lr}
     be8:	mov	fp, sp
     bec:	sub	sp, sp, #8
     bf0:	mov	r0, r2
     bf4:	ldr	r2, [fp, #8]
     bf8:	ldmib	r2, {r1, r3}
     bfc:	ldr	r2, [r2, #12]
     c00:	str	r3, [sp]
     c04:	str	r2, [sp, #4]
     c08:	mov	r2, #0
     c0c:	mov	r3, #1
     c10:	bl	cb0 <m_displaymsg>
     c14:	mov	sp, fp
     c18:	pop	{fp, pc}

00000c1c <me_roleplay>:
     c1c:	push	{r4, r5, fp, lr}
     c20:	add	fp, sp, #8
     c24:	sub	sp, sp, #16
     c28:	mov	r4, r2
     c2c:	ldr	r5, [fp, #8]
     c30:	ldr	r0, [r5, #4]
     c34:	bl	960 <find_channel@plt>
     c38:	cmp	r0, #0
     c3c:	beq	c6c <me_roleplay+0x50>
     c40:	mov	r2, r0
     c44:	ldmib	r5, {r0, r1, r3}
     c48:	add	r5, r4, #88	; 0x58
     c4c:	stm	sp, {r1, r5}
     c50:	str	r0, [sp, #8]
     c54:	str	r3, [sp, #12]
     c58:	ldr	r3, [pc, #20]	; c74 <me_roleplay+0x58>
     c5c:	add	r3, pc, r3
     c60:	mov	r0, r4
     c64:	mov	r1, #0
     c68:	bl	918 <sendto_channel_local@plt>
     c6c:	sub	sp, fp, #8
     c70:	pop	{r4, r5, fp, pc}
     c74:	.word	0x0000053f

00000c78 <_modinit>:
     c78:	push	{fp, lr}
     c7c:	mov	fp, sp
     c80:	ldr	r1, [pc, #28]	; ca4 <_modinit+0x2c>
     c84:	ldr	r1, [pc, r1]
     c88:	mov	r0, #78	; 0x4e
     c8c:	bl	930 <cflag_add@plt>
     c90:	mov	r1, #0
     c94:	cmp	r0, #0
     c98:	mvneq	r1, #0
     c9c:	mov	r0, r1
     ca0:	pop	{fp, pc}
     ca4:	.word	0x000113c8

00000ca8 <_moddeinit>:
     ca8:	mov	r0, #78	; 0x4e
     cac:	b	9cc <cflag_orphan@plt>

00000cb0 <m_displaymsg>:
     cb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
     cb4:	add	fp, sp, #24
     cb8:	sub	sp, sp, #88	; 0x58
     cbc:	sub	sp, sp, #1024	; 0x400
     cc0:	mov	r8, r3
     cc4:	mov	r9, r2
     cc8:	mov	r5, r1
     ccc:	mov	r4, r0
     cd0:	ldr	r1, [fp, #8]
     cd4:	sub	r0, fp, #94	; 0x5e
     cd8:	mov	r2, #33	; 0x21
     cdc:	bl	9b4 <rb_strlcpy@plt>
     ce0:	ldrb	r0, [r4, #65]	; 0x41
     ce4:	tst	r0, #1
     ce8:	bne	cf4 <m_displaymsg+0x44>
     cec:	mov	r0, r4
     cf0:	bl	9a8 <flood_endgrace@plt>
     cf4:	mov	r0, r5
     cf8:	bl	960 <find_channel@plt>
     cfc:	cmp	r0, #0
     d00:	beq	db8 <m_displaymsg+0x108>
     d04:	mov	r6, r0
     d08:	mov	r1, r4
     d0c:	bl	96c <find_channel_membership@plt>
     d10:	cmp	r0, #0
     d14:	beq	dd0 <m_displaymsg+0x120>
     d18:	mov	r7, r0
     d1c:	ldr	r0, [r6, #12]
     d20:	ldr	r1, [pc, #528]	; f38 <m_displaymsg+0x288>
     d24:	ldr	r1, [pc, r1]
     d28:	ldr	r1, [r1, #312]	; 0x138
     d2c:	tst	r1, r0
     d30:	beq	de8 <m_displaymsg+0x138>
     d34:	mov	r0, r6
     d38:	mov	r1, r4
     d3c:	mov	r2, r7
     d40:	bl	924 <can_send@plt>
     d44:	ldr	r3, [r6, #236]	; 0xec
     d48:	cmp	r0, #0
     d4c:	beq	df8 <m_displaymsg+0x148>
     d50:	mov	r0, #0
     d54:	mov	r1, r4
     d58:	mov	r2, r6
     d5c:	bl	9c0 <flood_attack_channel@plt>
     d60:	cmp	r0, #0
     d64:	bne	ef8 <m_displaymsg+0x248>
     d68:	ldrb	r0, [r7, #44]	; 0x2c
     d6c:	tst	r0, #3
     d70:	bne	d94 <m_displaymsg+0xe4>
     d74:	ldrb	r0, [r4, #57]	; 0x39
     d78:	tst	r0, #16
     d7c:	bne	d94 <m_displaymsg+0xe4>
     d80:	mov	r0, r4
     d84:	mov	r1, r6
     d88:	bl	990 <add_channel_target@plt>
     d8c:	cmp	r0, #0
     d90:	beq	f00 <m_displaymsg+0x250>
     d94:	sub	r7, fp, #94	; 0x5e
     d98:	mov	r0, r7
     d9c:	bl	f74 <strip_unprintable>
     da0:	sub	r0, fp, #61	; 0x3d
     da4:	cmp	r9, #0
     da8:	beq	e04 <m_displaymsg+0x154>
     dac:	ldr	r2, [pc, #408]	; f4c <m_displaymsg+0x29c>
     db0:	add	r2, pc, r2
     db4:	b	e0c <m_displaymsg+0x15c>
     db8:	ldr	r2, [pc, #368]	; f30 <m_displaymsg+0x280>
     dbc:	add	r2, pc, r2
     dc0:	mov	r0, r4
     dc4:	movw	r1, #403	; 0x193
     dc8:	mov	r3, r5
     dcc:	b	e74 <m_displaymsg+0x1c4>
     dd0:	ldr	r3, [r6, #236]	; 0xec
     dd4:	ldr	r2, [pc, #344]	; f34 <m_displaymsg+0x284>
     dd8:	add	r2, pc, r2
     ddc:	mov	r0, r4
     de0:	movw	r1, #442	; 0x1ba
     de4:	b	e74 <m_displaymsg+0x1c4>
     de8:	ldr	r3, [r6, #236]	; 0xec
     dec:	ldr	r2, [pc, #328]	; f3c <m_displaymsg+0x28c>
     df0:	add	r2, pc, r2
     df4:	b	e6c <m_displaymsg+0x1bc>
     df8:	ldr	r2, [pc, #320]	; f40 <m_displaymsg+0x290>
     dfc:	add	r2, pc, r2
     e00:	b	e6c <m_displaymsg+0x1bc>
     e04:	ldr	r2, [pc, #324]	; f50 <m_displaymsg+0x2a0>
     e08:	add	r2, pc, r2
     e0c:	mov	r1, #33	; 0x21
     e10:	mov	r3, r7
     e14:	bl	99c <snprintf@plt>
     e18:	ldrb	r0, [fp, #-94]	; 0xffffffa2
     e1c:	cmp	r0, #0
     e20:	beq	e60 <m_displaymsg+0x1b0>
     e24:	ldr	r3, [fp, #12]
     e28:	add	r7, r4, #88	; 0x58
     e2c:	str	r7, [sp]
     e30:	add	lr, sp, #512	; 0x200
     e34:	add	r0, lr, #18
     e38:	ldr	r2, [pc, #280]	; f58 <m_displaymsg+0x2a8>
     e3c:	add	r2, pc, r2
     e40:	mov	r1, #512	; 0x200
     e44:	bl	99c <snprintf@plt>
     e48:	add	r0, sp, #18
     e4c:	cmp	r8, #0
     e50:	beq	e80 <m_displaymsg+0x1d0>
     e54:	ldr	r2, [pc, #256]	; f5c <m_displaymsg+0x2ac>
     e58:	add	r2, pc, r2
     e5c:	b	e88 <m_displaymsg+0x1d8>
     e60:	ldr	r3, [r6, #236]	; 0xec
     e64:	ldr	r2, [pc, #232]	; f54 <m_displaymsg+0x2a4>
     e68:	add	r2, pc, r2
     e6c:	mov	r0, r4
     e70:	movw	r1, #573	; 0x23d
     e74:	bl	984 <sendto_one_numeric@plt>
     e78:	sub	sp, fp, #24
     e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     e80:	ldr	r2, [pc, #216]	; f60 <m_displaymsg+0x2b0>
     e84:	add	r2, pc, r2
     e88:	add	lr, sp, #512	; 0x200
     e8c:	add	r3, lr, #18
     e90:	mov	r1, #512	; 0x200
     e94:	bl	99c <snprintf@plt>
     e98:	add	r8, sp, #18
     e9c:	sub	r9, fp, #61	; 0x3d
     ea0:	str	r9, [sp]
     ea4:	str	r7, [sp, #4]
     ea8:	str	r5, [sp, #8]
     eac:	str	r8, [sp, #12]
     eb0:	ldr	r3, [pc, #172]	; f64 <m_displaymsg+0x2b4>
     eb4:	add	r3, pc, r3
     eb8:	mov	r0, r4
     ebc:	mov	r1, #0
     ec0:	mov	r2, r6
     ec4:	bl	918 <sendto_channel_local@plt>
     ec8:	ldr	r0, [pc, #152]	; f68 <m_displaymsg+0x2b8>
     ecc:	ldr	r0, [pc, r0]
     ed0:	ldr	r2, [r0]
     ed4:	ldr	r0, [pc, #144]	; f6c <m_displaymsg+0x2bc>
     ed8:	add	r0, pc, r0
     edc:	stm	sp, {r0, r5, r9}
     ee0:	str	r8, [sp, #12]
     ee4:	ldr	r1, [pc, #132]	; f70 <m_displaymsg+0x2c0>
     ee8:	add	r1, pc, r1
     eec:	mov	r0, r4
     ef0:	mov	r3, #0
     ef4:	bl	93c <sendto_match_servs@plt>
     ef8:	sub	sp, fp, #24
     efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     f00:	ldr	r0, [r6, #236]	; 0xec
     f04:	str	r0, [sp]
     f08:	add	r3, r4, #88	; 0x58
     f0c:	ldr	r0, [pc, #48]	; f44 <m_displaymsg+0x294>
     f10:	ldr	r0, [pc, r0]
     f14:	add	r2, r0, #88	; 0x58
     f18:	ldr	r1, [pc, #40]	; f48 <m_displaymsg+0x298>
     f1c:	add	r1, pc, r1
     f20:	mov	r0, r4
     f24:	bl	954 <sendto_one@plt>
     f28:	sub	sp, fp, #24
     f2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
     f30:	.word	0x000002d2
     f34:	.word	0x000002ca
     f38:	.word	0x00011334
     f3c:	.word	0x000002d1
     f40:	.word	0x000002fc
     f44:	.word	0x00011150
     f48:	.word	0x000001f8
     f4c:	.word	0x0000039e
     f50:	.word	0x000003bb
     f54:	.word	0x000002eb
     f58:	.word	0x00000347
     f5c:	.word	0x00000333
     f60:	.word	0x0000033f
     f64:	.word	0x000002e7
     f68:	.word	0x00011198
     f6c:	.word	0x000002f0
     f70:	.word	0x000002de

00000f74 <strip_unprintable>:
     f74:	cmp	r0, #0
     f78:	beq	1050 <strip_unprintable+0xdc>
     f7c:	push	{r4, sl, fp, lr}
     f80:	add	fp, sp, #8
     f84:	mov	ip, #0
     f88:	ldr	lr, [pc, #196]	; 1054 <strip_unprintable+0xe0>
     f8c:	ldr	lr, [pc, lr]
     f90:	mov	r2, r0
     f94:	mov	r1, r0
     f98:	b	fa0 <strip_unprintable+0x2c>
     f9c:	add	r1, r1, #1
     fa0:	ldrb	r3, [r1]
     fa4:	cmp	r3, #3
     fa8:	beq	fdc <strip_unprintable+0x68>
     fac:	cmp	r3, #32
     fb0:	beq	fd4 <strip_unprintable+0x60>
     fb4:	cmp	r3, #0
     fb8:	beq	1038 <strip_unprintable+0xc4>
     fbc:	cmp	r3, #32
     fc0:	bcc	f9c <strip_unprintable+0x28>
     fc4:	strb	r3, [r2], #1
     fc8:	mov	ip, r2
     fcc:	add	r1, r1, #1
     fd0:	b	fa0 <strip_unprintable+0x2c>
     fd4:	strb	r3, [r2], #1
     fd8:	b	f9c <strip_unprintable+0x28>
     fdc:	mov	r3, r1
     fe0:	ldrb	r4, [r3, #1]!
     fe4:	ldrb	r4, [lr, r4, lsl #2]
     fe8:	tst	r4, #16
     fec:	beq	f9c <strip_unprintable+0x28>
     ff0:	ldrb	r4, [r1, #2]!
     ff4:	ldrb	r4, [lr, r4, lsl #2]
     ff8:	tst	r4, #16
     ffc:	moveq	r1, r3
    1000:	ldrb	r3, [r1, #1]
    1004:	cmp	r3, #44	; 0x2c
    1008:	bne	f9c <strip_unprintable+0x28>
    100c:	mov	r3, r1
    1010:	ldrb	r4, [r3, #2]!
    1014:	ldrb	r4, [lr, r4, lsl #2]
    1018:	tst	r4, #16
    101c:	beq	f9c <strip_unprintable+0x28>
    1020:	ldrb	r4, [r1, #3]!
    1024:	ldrb	r4, [lr, r4, lsl #2]
    1028:	tst	r4, #16
    102c:	moveq	r1, r3
    1030:	add	r1, r1, #1
    1034:	b	fa0 <strip_unprintable+0x2c>
    1038:	mov	r1, #0
    103c:	strb	r1, [r2]
    1040:	cmp	ip, #0
    1044:	pop	{r4, sl, fp, lr}
    1048:	strbne	r1, [ip]
    104c:	bx	lr
    1050:	udf	#65006	; 0xfdee
    1054:	.word	0x000110c8

Disassembly of section .fini:

00001058 <_fini>:
    1058:	push	{r3, lr}
    105c:	pop	{r3, pc}
