
../repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010df8 <.init>:
   10df8:	push	{r3, lr}
   10dfc:	bl	1101c <_start@@Base+0x3c>
   10e00:	pop	{r3, pc}

Disassembly of section .plt:

00010e04 <coda_match_filefilter@plt-0x14>:
   10e04:	push	{lr}		; (str lr, [sp, #-4]!)
   10e08:	ldr	lr, [pc, #4]	; 10e14 <coda_match_filefilter@plt-0x4>
   10e0c:	add	lr, pc, lr
   10e10:	ldr	pc, [lr, #8]!
   10e14:	andeq	r2, r1, ip, ror #3

00010e18 <coda_match_filefilter@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #492]!	; 0x1ec

00010e24 <coda_expression_eval_integer@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #484]!	; 0x1e4

00010e30 <strcmp@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #476]!	; 0x1dc

00010e3c <printf@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #468]!	; 0x1d4

00010e48 <coda_set_error@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #460]!	; 0x1cc

00010e54 <coda_open@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #452]!	; 0x1c4

00010e60 <free@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #444]!	; 0x1bc

00010e6c <coda_set_definition_path_conditional@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #436]!	; 0x1b4

00010e78 <coda_set_definition_path@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #428]!	; 0x1ac

00010e84 <fwrite@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #420]!	; 0x1a4

00010e90 <coda_expression_eval_bool@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #412]!	; 0x19c

00010e9c <coda_cursor_set_product@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #404]!	; 0x194

00010ea8 <coda_done@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #396]!	; 0x18c

00010eb4 <puts@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #388]!	; 0x184

00010ec0 <__libc_start_main@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #380]!	; 0x17c

00010ecc <coda_expression_delete@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #372]!	; 0x174

00010ed8 <__gmon_start__@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #364]!	; 0x16c

00010ee4 <__ctype_b_loc@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #356]!	; 0x164

00010ef0 <exit@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #348]!	; 0x15c

00010efc <strlen@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #73728	; 0x12000
   10f04:	ldr	pc, [ip, #340]!	; 0x154

00010f08 <fprintf@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #73728	; 0x12000
   10f10:	ldr	pc, [ip, #332]!	; 0x14c

00010f14 <coda_init@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #73728	; 0x12000
   10f1c:	ldr	pc, [ip, #324]!	; 0x144

00010f20 <coda_set_option_perform_conversions@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #73728	; 0x12000
   10f28:	ldr	pc, [ip, #316]!	; 0x13c

00010f2c <coda_expression_eval_string@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #73728	; 0x12000
   10f34:	ldr	pc, [ip, #308]!	; 0x134

00010f38 <putchar@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #73728	; 0x12000
   10f40:	ldr	pc, [ip, #300]!	; 0x12c

00010f44 <coda_expression_get_type@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #73728	; 0x12000
   10f4c:	ldr	pc, [ip, #292]!	; 0x124

00010f50 <coda_close@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #73728	; 0x12000
   10f58:	ldr	pc, [ip, #284]!	; 0x11c

00010f5c <coda_expression_is_constant@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #73728	; 0x12000
   10f64:	ldr	pc, [ip, #276]!	; 0x114

00010f68 <coda_expression_eval_float@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #73728	; 0x12000
   10f70:	ldr	pc, [ip, #268]!	; 0x10c

00010f74 <coda_expression_eval_node@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #73728	; 0x12000
   10f7c:	ldr	pc, [ip, #260]!	; 0x104

00010f80 <coda_errno_to_string@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #73728	; 0x12000
   10f88:	ldr	pc, [ip, #252]!	; 0xfc

00010f8c <coda_expression_get_type_name@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #73728	; 0x12000
   10f94:	ldr	pc, [ip, #244]!	; 0xf4

00010f98 <coda_expression_from_string@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #73728	; 0x12000
   10fa0:	ldr	pc, [ip, #236]!	; 0xec

00010fa4 <coda_get_libcoda_version@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #73728	; 0x12000
   10fac:	ldr	pc, [ip, #228]!	; 0xe4

00010fb0 <coda_get_errno@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #73728	; 0x12000
   10fb8:	ldr	pc, [ip, #220]!	; 0xdc

00010fbc <abort@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #73728	; 0x12000
   10fc4:	ldr	pc, [ip, #212]!	; 0xd4

00010fc8 <coda_str64@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #73728	; 0x12000
   10fd0:	ldr	pc, [ip, #204]!	; 0xcc

00010fd4 <__assert_fail@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #73728	; 0x12000
   10fdc:	ldr	pc, [ip, #196]!	; 0xc4

Disassembly of section .text:

00010fe0 <_start@@Base>:
   10fe0:	mov	fp, #0
   10fe4:	mov	lr, #0
   10fe8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fec:	mov	r2, sp
   10ff0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ff4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ff8:	ldr	ip, [pc, #16]	; 11010 <_start@@Base+0x30>
   10ffc:	push	{ip}		; (str ip, [sp, #-4]!)
   11000:	ldr	r0, [pc, #12]	; 11014 <_start@@Base+0x34>
   11004:	ldr	r3, [pc, #12]	; 11018 <_start@@Base+0x38>
   11008:	bl	10ec0 <__libc_start_main@plt>
   1100c:	bl	10fbc <abort@plt>
   11010:	andeq	r1, r1, ip, lsl lr
   11014:	muleq	r1, r8, r2
   11018:			; <UNDEFINED> instruction: 0x00011dbc
   1101c:	ldr	r3, [pc, #20]	; 11038 <_start@@Base+0x58>
   11020:	ldr	r2, [pc, #20]	; 1103c <_start@@Base+0x5c>
   11024:	add	r3, pc, r3
   11028:	ldr	r2, [r3, r2]
   1102c:	cmp	r2, #0
   11030:	bxeq	lr
   11034:	b	10ed8 <__gmon_start__@plt>
   11038:	ldrdeq	r1, [r1], -r4
   1103c:	andeq	r0, r0, r4, lsr #1
   11040:	ldr	r0, [pc, #24]	; 11060 <_start@@Base+0x80>
   11044:	ldr	r3, [pc, #24]	; 11064 <_start@@Base+0x84>
   11048:	cmp	r3, r0
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <_start@@Base+0x88>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	strheq	r3, [r2], -r0
   11064:	strheq	r3, [r2], -r0
   11068:	andeq	r0, r0, r0
   1106c:	ldr	r0, [pc, #36]	; 11098 <_start@@Base+0xb8>
   11070:	ldr	r1, [pc, #36]	; 1109c <_start@@Base+0xbc>
   11074:	sub	r1, r1, r0
   11078:	asr	r1, r1, #2
   1107c:	add	r1, r1, r1, lsr #31
   11080:	asrs	r1, r1, #1
   11084:	bxeq	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <_start@@Base+0xc0>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	strheq	r3, [r2], -r0
   1109c:	strheq	r3, [r2], -r0
   110a0:	andeq	r0, r0, r0
   110a4:	push	{r4, lr}
   110a8:	ldr	r4, [pc, #24]	; 110c8 <_start@@Base+0xe8>
   110ac:	ldrb	r3, [r4]
   110b0:	cmp	r3, #0
   110b4:	popne	{r4, pc}
   110b8:	bl	11040 <_start@@Base+0x60>
   110bc:	mov	r3, #1
   110c0:	strb	r3, [r4]
   110c4:	pop	{r4, pc}
   110c8:	strheq	r3, [r2], -r4
   110cc:	b	1106c <_start@@Base+0x8c>

000110d0 <callback@@Base>:
   110d0:	push	{r4, r5, r6, r7, fp, lr}
   110d4:	add	fp, sp, #16
   110d8:	sub	sp, sp, #528	; 0x210
   110dc:	mov	r5, #0
   110e0:	cmp	r1, #4
   110e4:	bhi	1112c <callback@@Base+0x5c>
   110e8:	mov	r4, r0
   110ec:	add	r0, pc, #4
   110f0:	mov	r3, r2
   110f4:	ldr	pc, [r0, r1, lsl #2]
   110f8:			; <UNDEFINED> instruction: 0x000111b4
   110fc:	ldrdeq	r1, [r1], -r0
   11100:	strdeq	r1, [r1], -r8
   11104:	andeq	r1, r1, ip, lsr #2
   11108:	andeq	r1, r1, ip, lsl #2
   1110c:	mov	r0, #0
   11110:	sub	r1, fp, #20
   11114:	str	r0, [fp, #-20]	; 0xffffffec
   11118:	mov	r0, r4
   1111c:	bl	10e54 <coda_open@plt>
   11120:	mov	r5, #1
   11124:	cmp	r0, #0
   11128:	beq	11138 <callback@@Base+0x68>
   1112c:	mov	r0, r5
   11130:	sub	sp, fp, #16
   11134:	pop	{r4, r5, r6, r7, fp, pc}
   11138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1113c:	mov	r0, sp
   11140:	bl	10e9c <coda_cursor_set_product@plt>
   11144:	cmp	r0, #0
   11148:	beq	11160 <callback@@Base+0x90>
   1114c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11150:	bl	10f50 <coda_close@plt>
   11154:	mov	r0, r5
   11158:	sub	sp, fp, #16
   1115c:	pop	{r4, r5, r6, r7, fp, pc}
   11160:	movw	r0, #12472	; 0x30b8
   11164:	movt	r0, #2
   11168:	ldr	r0, [r0]
   1116c:	cmp	r0, #0
   11170:	beq	11184 <callback@@Base+0xb4>
   11174:	mov	r1, sp
   11178:	bl	10f74 <coda_expression_eval_node@plt>
   1117c:	cmp	r0, #0
   11180:	bne	11254 <callback@@Base+0x184>
   11184:	mov	r0, sp
   11188:	bl	116d0 <main@@Base+0x438>
   1118c:	cmp	r0, #0
   11190:	bne	11220 <callback@@Base+0x150>
   11194:	ldr	r0, [fp, #-20]	; 0xffffffec
   11198:	bl	10f50 <coda_close@plt>
   1119c:	cmp	r0, #0
   111a0:	mov	r5, r0
   111a4:	movwne	r5, #1
   111a8:	mov	r0, r5
   111ac:	sub	sp, fp, #16
   111b0:	pop	{r4, r5, r6, r7, fp, pc}
   111b4:	movw	r0, #12464	; 0x30b0
   111b8:	movw	r1, #7724	; 0x1e2c
   111bc:	mov	r2, r3
   111c0:	mov	r3, r4
   111c4:	movt	r0, #2
   111c8:	movt	r1, #1
   111cc:	b	111e4 <callback@@Base+0x114>
   111d0:	movw	r0, #12464	; 0x30b0
   111d4:	movw	r1, #7780	; 0x1e64
   111d8:	mov	r2, r4
   111dc:	movt	r0, #2
   111e0:	movt	r1, #1
   111e4:	ldr	r0, [r0]
   111e8:	bl	10f08 <fprintf@plt>
   111ec:	mov	r0, r5
   111f0:	sub	sp, fp, #16
   111f4:	pop	{r4, r5, r6, r7, fp, pc}
   111f8:	movw	r0, #12464	; 0x30b0
   111fc:	movw	r1, #7742	; 0x1e3e
   11200:	mov	r2, r4
   11204:	movt	r0, #2
   11208:	movt	r1, #1
   1120c:	ldr	r0, [r0]
   11210:	bl	10f08 <fprintf@plt>
   11214:	mov	r0, r5
   11218:	sub	sp, fp, #16
   1121c:	pop	{r4, r5, r6, r7, fp, pc}
   11220:	movw	r0, #12464	; 0x30b0
   11224:	movt	r0, #2
   11228:	ldr	r5, [r0]
   1122c:	bl	10fb0 <coda_get_errno@plt>
   11230:	ldr	r0, [r0]
   11234:	bl	10f80 <coda_errno_to_string@plt>
   11238:	movw	r1, #7724	; 0x1e2c
   1123c:	mov	r2, r0
   11240:	mov	r0, r5
   11244:	mov	r3, r4
   11248:	movt	r1, #1
   1124c:	bl	10f08 <fprintf@plt>
   11250:	b	11194 <callback@@Base+0xc4>
   11254:	movw	r0, #12464	; 0x30b0
   11258:	movt	r0, #2
   1125c:	ldr	r4, [r0]
   11260:	bl	10fb0 <coda_get_errno@plt>
   11264:	ldr	r0, [r0]
   11268:	bl	10f80 <coda_errno_to_string@plt>
   1126c:	movw	r1, #8222	; 0x201e
   11270:	mov	r2, r0
   11274:	mov	r0, r4
   11278:	movt	r1, #1
   1127c:	bl	10f08 <fprintf@plt>
   11280:	ldr	r0, [fp, #-20]	; 0xffffffec
   11284:	bl	10f50 <coda_close@plt>
   11288:	mov	r5, #0
   1128c:	mov	r0, r5
   11290:	sub	sp, fp, #16
   11294:	pop	{r4, r5, r6, r7, fp, pc}

00011298 <main@@Base>:
   11298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1129c:	add	fp, sp, #28
   112a0:	sub	sp, sp, #12
   112a4:	cmp	r0, #1
   112a8:	beq	115d4 <main@@Base+0x33c>
   112ac:	ldr	r6, [r1, #4]
   112b0:	mov	r4, r1
   112b4:	movw	r1, #7816	; 0x1e88
   112b8:	mov	r5, r0
   112bc:	movt	r1, #1
   112c0:	mov	r0, r6
   112c4:	bl	10e30 <strcmp@plt>
   112c8:	cmp	r0, #0
   112cc:	beq	115d4 <main@@Base+0x33c>
   112d0:	movw	r1, #9746	; 0x2612
   112d4:	mov	r0, r6
   112d8:	movt	r1, #1
   112dc:	bl	10e30 <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	115d4 <main@@Base+0x33c>
   112e8:	movw	r1, #7819	; 0x1e8b
   112ec:	mov	r0, r6
   112f0:	movt	r1, #1
   112f4:	bl	10e30 <strcmp@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11614 <main@@Base+0x37c>
   11300:	movw	r1, #9800	; 0x2648
   11304:	mov	r0, r6
   11308:	movt	r1, #1
   1130c:	bl	10e30 <strcmp@plt>
   11310:	cmp	r0, #0
   11314:	beq	11614 <main@@Base+0x37c>
   11318:	cmp	r5, #3
   1131c:	blt	11338 <main@@Base+0xa0>
   11320:	movw	r1, #7822	; 0x1e8e
   11324:	mov	r0, r6
   11328:	movt	r1, #1
   1132c:	bl	10e30 <strcmp@plt>
   11330:	cmp	r0, #0
   11334:	beq	11514 <main@@Base+0x27c>
   11338:	ldr	r0, [r4]
   1133c:	movw	r2, #7825	; 0x1e91
   11340:	mov	r1, #0
   11344:	movt	r2, #1
   11348:	bl	10e6c <coda_set_definition_path_conditional@plt>
   1134c:	mov	r7, #1
   11350:	cmp	r0, #0
   11354:	bne	115e0 <main@@Base+0x348>
   11358:	cmp	r7, r5
   1135c:	bge	11528 <main@@Base+0x290>
   11360:	movw	r6, #7862	; 0x1eb6
   11364:	mov	r0, #1
   11368:	mov	r9, #0
   1136c:	movt	r6, #1
   11370:	str	r0, [sp, #8]
   11374:	b	1138c <main@@Base+0xf4>
   11378:	mov	r9, #1
   1137c:	mov	sl, r7
   11380:	add	r7, sl, #1
   11384:	cmp	r7, r5
   11388:	bge	11528 <main@@Base+0x290>
   1138c:	ldr	r8, [r4, r7, lsl #2]
   11390:	mov	r1, r6
   11394:	mov	r0, r8
   11398:	bl	10e30 <strcmp@plt>
   1139c:	cmp	r0, #0
   113a0:	beq	11378 <main@@Base+0xe0>
   113a4:	movw	r1, #9037	; 0x234d
   113a8:	mov	r0, r8
   113ac:	movt	r1, #1
   113b0:	bl	10e30 <strcmp@plt>
   113b4:	cmp	r0, #0
   113b8:	beq	11378 <main@@Base+0xe0>
   113bc:	movw	r1, #7865	; 0x1eb9
   113c0:	mov	r0, r8
   113c4:	movt	r1, #1
   113c8:	bl	10e30 <strcmp@plt>
   113cc:	cmp	r0, #0
   113d0:	beq	11438 <main@@Base+0x1a0>
   113d4:	movw	r1, #9221	; 0x2405
   113d8:	mov	r0, r8
   113dc:	movt	r1, #1
   113e0:	bl	10e30 <strcmp@plt>
   113e4:	cmp	r0, #0
   113e8:	beq	11438 <main@@Base+0x1a0>
   113ec:	movw	r1, #7868	; 0x1ebc
   113f0:	mov	r0, r8
   113f4:	movt	r1, #1
   113f8:	bl	10e30 <strcmp@plt>
   113fc:	cmp	r0, #0
   11400:	bne	11444 <main@@Base+0x1ac>
   11404:	add	sl, r7, #1
   11408:	cmp	sl, r5
   1140c:	bge	11444 <main@@Base+0x1ac>
   11410:	ldr	r0, [r4, sl, lsl #2]
   11414:	ldrb	r1, [r0]
   11418:	cmp	r1, #45	; 0x2d
   1141c:	beq	11444 <main@@Base+0x1ac>
   11420:	movw	r1, #12472	; 0x30b8
   11424:	movt	r1, #2
   11428:	bl	10f98 <coda_expression_from_string@plt>
   1142c:	cmp	r0, #0
   11430:	beq	11380 <main@@Base+0xe8>
   11434:	b	115a0 <main@@Base+0x308>
   11438:	mov	r0, #0
   1143c:	str	r0, [sp, #8]
   11440:	b	1137c <main@@Base+0xe4>
   11444:	ldrb	r0, [r8]
   11448:	cmp	r0, #45	; 0x2d
   1144c:	beq	11528 <main@@Base+0x290>
   11450:	movw	r6, #12472	; 0x30b8
   11454:	mov	r0, r8
   11458:	movt	r6, #2
   1145c:	add	r1, r6, #4
   11460:	bl	10f98 <coda_expression_from_string@plt>
   11464:	cmp	r0, #0
   11468:	bne	11620 <main@@Base+0x388>
   1146c:	ldr	r0, [r6, #4]
   11470:	add	r1, r6, #8
   11474:	bl	10f44 <coda_expression_get_type@plt>
   11478:	cmp	r0, #0
   1147c:	bne	115e0 <main@@Base+0x348>
   11480:	ldr	r0, [r6, #8]
   11484:	orr	r1, r0, #1
   11488:	cmp	r1, #5
   1148c:	beq	11654 <main@@Base+0x3bc>
   11490:	cmp	r9, #0
   11494:	beq	114bc <main@@Base+0x224>
   11498:	ldr	r0, [r6, #4]
   1149c:	bl	10ecc <coda_expression_delete@plt>
   114a0:	ldr	r0, [r6]
   114a4:	cmp	r0, #0
   114a8:	beq	114b0 <main@@Base+0x218>
   114ac:	bl	10ecc <coda_expression_delete@plt>
   114b0:	mov	r0, #0
   114b4:	sub	sp, fp, #28
   114b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114bc:	add	r6, r7, #1
   114c0:	cmp	r6, r5
   114c4:	bge	11554 <main@@Base+0x2bc>
   114c8:	bl	10f14 <coda_init@plt>
   114cc:	cmp	r0, #0
   114d0:	bne	115e0 <main@@Base+0x348>
   114d4:	ldr	r0, [sp, #8]
   114d8:	bl	10f20 <coda_set_option_perform_conversions@plt>
   114dc:	movw	r3, #4304	; 0x10d0
   114e0:	mov	r0, #0
   114e4:	add	r2, r4, r6, lsl #2
   114e8:	sub	r1, r5, r6
   114ec:	movt	r3, #1
   114f0:	str	r0, [sp]
   114f4:	mov	r0, #0
   114f8:	bl	10e18 <coda_match_filefilter@plt>
   114fc:	cmp	r0, #0
   11500:	bne	115e0 <main@@Base+0x348>
   11504:	bl	10ea8 <coda_done@plt>
   11508:	movw	r4, #12472	; 0x30b8
   1150c:	movt	r4, #2
   11510:	b	11588 <main@@Base+0x2f0>
   11514:	ldr	r0, [r4, #8]
   11518:	bl	10e78 <coda_set_definition_path@plt>
   1151c:	mov	r7, #3
   11520:	cmp	r7, r5
   11524:	blt	11360 <main@@Base+0xc8>
   11528:	movw	r0, #12464	; 0x30b0
   1152c:	mov	r1, #25
   11530:	mov	r2, #1
   11534:	movt	r0, #2
   11538:	ldr	r3, [r0]
   1153c:	movw	r0, #7908	; 0x1ee4
   11540:	movt	r0, #1
   11544:	bl	10e84 <fwrite@plt>
   11548:	bl	11bcc <main@@Base+0x934>
   1154c:	mov	r0, #1
   11550:	bl	10ef0 <exit@plt>
   11554:	movw	r4, #12472	; 0x30b8
   11558:	movt	r4, #2
   1155c:	ldr	r0, [r4]
   11560:	cmp	r0, #0
   11564:	bne	11680 <main@@Base+0x3e8>
   11568:	ldr	r0, [r4, #4]
   1156c:	bl	10f5c <coda_expression_is_constant@plt>
   11570:	cmp	r0, #0
   11574:	beq	116a8 <main@@Base+0x410>
   11578:	mov	r0, #0
   1157c:	bl	116d0 <main@@Base+0x438>
   11580:	cmp	r0, #0
   11584:	bne	115e0 <main@@Base+0x348>
   11588:	ldr	r0, [r4, #4]
   1158c:	bl	10ecc <coda_expression_delete@plt>
   11590:	ldr	r0, [r4]
   11594:	cmp	r0, #0
   11598:	bne	114ac <main@@Base+0x214>
   1159c:	b	114b0 <main@@Base+0x218>
   115a0:	movw	r0, #12464	; 0x30b0
   115a4:	movt	r0, #2
   115a8:	ldr	r4, [r0]
   115ac:	bl	10fb0 <coda_get_errno@plt>
   115b0:	ldr	r0, [r0]
   115b4:	bl	10f80 <coda_errno_to_string@plt>
   115b8:	movw	r1, #7871	; 0x1ebf
   115bc:	mov	r2, r0
   115c0:	movt	r1, #1
   115c4:	mov	r0, r4
   115c8:	bl	10f08 <fprintf@plt>
   115cc:	mov	r0, #1
   115d0:	bl	10ef0 <exit@plt>
   115d4:	bl	11bcc <main@@Base+0x934>
   115d8:	mov	r0, #0
   115dc:	bl	10ef0 <exit@plt>
   115e0:	movw	r0, #12464	; 0x30b0
   115e4:	movt	r0, #2
   115e8:	ldr	r4, [r0]
   115ec:	bl	10fb0 <coda_get_errno@plt>
   115f0:	ldr	r0, [r0]
   115f4:	bl	10f80 <coda_errno_to_string@plt>
   115f8:	movw	r1, #7851	; 0x1eab
   115fc:	mov	r2, r0
   11600:	movt	r1, #1
   11604:	mov	r0, r4
   11608:	bl	10f08 <fprintf@plt>
   1160c:	mov	r0, #1
   11610:	bl	10ef0 <exit@plt>
   11614:	bl	11d88 <main@@Base+0xaf0>
   11618:	mov	r0, #0
   1161c:	bl	10ef0 <exit@plt>
   11620:	movw	r0, #12464	; 0x30b0
   11624:	movt	r0, #2
   11628:	ldr	r4, [r0]
   1162c:	bl	10fb0 <coda_get_errno@plt>
   11630:	ldr	r0, [r0]
   11634:	bl	10f80 <coda_errno_to_string@plt>
   11638:	movw	r1, #7934	; 0x1efe
   1163c:	mov	r2, r0
   11640:	movt	r1, #1
   11644:	mov	r0, r4
   11648:	bl	10f08 <fprintf@plt>
   1164c:	mov	r0, #1
   11650:	bl	10ef0 <exit@plt>
   11654:	movw	r1, #12464	; 0x30b0
   11658:	movt	r1, #2
   1165c:	ldr	r4, [r1]
   11660:	bl	10f8c <coda_expression_get_type_name@plt>
   11664:	movw	r1, #7966	; 0x1f1e
   11668:	mov	r2, r0
   1166c:	movt	r1, #1
   11670:	mov	r0, r4
   11674:	bl	10f08 <fprintf@plt>
   11678:	mov	r0, #1
   1167c:	bl	10ef0 <exit@plt>
   11680:	movw	r0, #12464	; 0x30b0
   11684:	mov	r1, #96	; 0x60
   11688:	movt	r0, #2
   1168c:	ldr	r3, [r0]
   11690:	movw	r0, #8013	; 0x1f4d
   11694:	movt	r0, #1
   11698:	mov	r2, #1
   1169c:	bl	10e84 <fwrite@plt>
   116a0:	mov	r0, #1
   116a4:	bl	10ef0 <exit@plt>
   116a8:	movw	r0, #12464	; 0x30b0
   116ac:	mov	r1, #111	; 0x6f
   116b0:	movt	r0, #2
   116b4:	ldr	r3, [r0]
   116b8:	movw	r0, #8110	; 0x1fae
   116bc:	movt	r0, #1
   116c0:	mov	r2, #1
   116c4:	bl	10e84 <fwrite@plt>
   116c8:	mov	r0, #1
   116cc:	bl	10ef0 <exit@plt>
   116d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116d4:	add	fp, sp, #28
   116d8:	sub	sp, sp, #36	; 0x24
   116dc:	mov	r1, r0
   116e0:	movw	r0, #12472	; 0x30b8
   116e4:	mov	r4, #0
   116e8:	movt	r0, #2
   116ec:	ldr	r2, [r0, #8]
   116f0:	cmp	r2, #5
   116f4:	bhi	117ec <main@@Base+0x554>
   116f8:	add	r3, pc, #0
   116fc:	ldr	pc, [r3, r2, lsl #2]
   11700:	andeq	r1, r1, r8, lsl r7
   11704:	andeq	r1, r1, r8, asr #14
   11708:	andeq	r1, r1, r8, ror r7
   1170c:	andeq	r1, r1, r8, lsr #15
   11710:	andeq	r1, r1, ip, lsr #23
   11714:	andeq	r1, r1, ip, lsr #23
   11718:	ldr	r0, [r0, #4]
   1171c:	mov	r2, sp
   11720:	bl	10e90 <coda_expression_eval_bool@plt>
   11724:	cmp	r0, #0
   11728:	beq	117f8 <main@@Base+0x560>
   1172c:	bl	10fb0 <coda_get_errno@plt>
   11730:	ldr	r0, [r0]
   11734:	bl	10f80 <coda_errno_to_string@plt>
   11738:	movw	r1, #8282	; 0x205a
   1173c:	mov	r2, r0
   11740:	movt	r1, #1
   11744:	b	117e0 <main@@Base+0x548>
   11748:	ldr	r0, [r0, #4]
   1174c:	add	r2, sp, #24
   11750:	bl	10e24 <coda_expression_eval_integer@plt>
   11754:	cmp	r0, #0
   11758:	beq	11824 <main@@Base+0x58c>
   1175c:	bl	10fb0 <coda_get_errno@plt>
   11760:	ldr	r0, [r0]
   11764:	bl	10f80 <coda_errno_to_string@plt>
   11768:	movw	r1, #8333	; 0x208d
   1176c:	mov	r2, r0
   11770:	movt	r1, #1
   11774:	b	117e0 <main@@Base+0x548>
   11778:	ldr	r0, [r0, #4]
   1177c:	mov	r2, sp
   11780:	bl	10f68 <coda_expression_eval_float@plt>
   11784:	cmp	r0, #0
   11788:	beq	1184c <main@@Base+0x5b4>
   1178c:	bl	10fb0 <coda_get_errno@plt>
   11790:	ldr	r0, [r0]
   11794:	bl	10f80 <coda_errno_to_string@plt>
   11798:	movw	r1, #8373	; 0x20b5
   1179c:	mov	r2, r0
   117a0:	movt	r1, #1
   117a4:	b	117e0 <main@@Base+0x548>
   117a8:	ldr	r0, [r0, #4]
   117ac:	mov	r2, #0
   117b0:	add	r3, sp, #24
   117b4:	str	r2, [sp]
   117b8:	mov	r2, sp
   117bc:	bl	10f2c <coda_expression_eval_string@plt>
   117c0:	cmp	r0, #0
   117c4:	beq	1186c <main@@Base+0x5d4>
   117c8:	bl	10fb0 <coda_get_errno@plt>
   117cc:	ldr	r0, [r0]
   117d0:	bl	10f80 <coda_errno_to_string@plt>
   117d4:	movw	r1, #8427	; 0x20eb
   117d8:	mov	r2, r0
   117dc:	movt	r1, #1
   117e0:	mvn	r0, #400	; 0x190
   117e4:	bl	10e48 <coda_set_error@plt>
   117e8:	mvn	r4, #0
   117ec:	mov	r0, r4
   117f0:	sub	sp, fp, #28
   117f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117f8:	ldr	r1, [sp]
   117fc:	movw	r2, #8327	; 0x2087
   11800:	movw	r0, #8322	; 0x2082
   11804:	movt	r2, #1
   11808:	movt	r0, #1
   1180c:	cmp	r1, #0
   11810:	moveq	r0, r2
   11814:	bl	10eb4 <puts@plt>
   11818:	mov	r0, r4
   1181c:	sub	sp, fp, #28
   11820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11824:	ldr	r0, [sp, #24]
   11828:	ldr	r1, [sp, #28]
   1182c:	mov	r5, sp
   11830:	mov	r2, r5
   11834:	bl	10fc8 <coda_str64@plt>
   11838:	mov	r0, r5
   1183c:	bl	10eb4 <puts@plt>
   11840:	mov	r0, r4
   11844:	sub	sp, fp, #28
   11848:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1184c:	vldr	d16, [sp]
   11850:	movw	r0, #8420	; 0x20e4
   11854:	movt	r0, #1
   11858:	vmov	r2, r3, d16
   1185c:	bl	10e3c <printf@plt>
   11860:	mov	r0, r4
   11864:	sub	sp, fp, #28
   11868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1186c:	ldr	r4, [sp]
   11870:	cmp	r4, #0
   11874:	ldrne	r5, [sp, #24]
   11878:	cmpne	r5, #0
   1187c:	bne	118a8 <main@@Base+0x610>
   11880:	mov	r0, #10
   11884:	bl	10f38 <putchar@plt>
   11888:	ldr	r0, [sp]
   1188c:	cmp	r0, #0
   11890:	beq	11898 <main@@Base+0x600>
   11894:	bl	10e60 <free@plt>
   11898:	mov	r4, #0
   1189c:	mov	r0, r4
   118a0:	sub	sp, fp, #28
   118a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118a8:	cmn	r5, #1
   118ac:	bgt	118c4 <main@@Base+0x62c>
   118b0:	mov	r0, r4
   118b4:	bl	10efc <strlen@plt>
   118b8:	mov	r5, r0
   118bc:	cmp	r0, #1
   118c0:	blt	11880 <main@@Base+0x5e8>
   118c4:	movw	sl, #8587	; 0x218b
   118c8:	movw	r7, #8572	; 0x217c
   118cc:	movw	r6, #8599	; 0x2197
   118d0:	movw	r8, #8596	; 0x2194
   118d4:	movt	sl, #1
   118d8:	movt	r7, #1
   118dc:	movt	r6, #1
   118e0:	movt	r8, #1
   118e4:	b	11900 <main@@Base+0x668>
   118e8:	movw	r0, #8590	; 0x218e
   118ec:	movt	r0, #1
   118f0:	bl	10e3c <printf@plt>
   118f4:	add	r4, r4, #1
   118f8:	subs	r5, r5, #1
   118fc:	beq	11880 <main@@Base+0x5e8>
   11900:	ldrb	r9, [r4]
   11904:	sub	r0, r9, #7
   11908:	cmp	r0, #85	; 0x55
   1190c:	bhi	11af8 <main@@Base+0x860>
   11910:	add	r1, pc, #0
   11914:	ldr	pc, [r1, r0, lsl #2]
   11918:	andeq	r1, r1, r0, ror sl
   1191c:	andeq	r1, r1, ip, lsl #21
   11920:	andeq	r1, r1, r8, ror #17
   11924:	andeq	r1, r1, r8, lsr #21
   11928:	andeq	r1, r1, r8, asr #22
   1192c:	andeq	r1, r1, r4, asr #21
   11930:	andeq	r1, r1, r0, ror #21
   11934:	strdeq	r1, [r1], -r8
   11938:	strdeq	r1, [r1], -r8
   1193c:	strdeq	r1, [r1], -r8
   11940:	strdeq	r1, [r1], -r8
   11944:	strdeq	r1, [r1], -r8
   11948:	strdeq	r1, [r1], -r8
   1194c:	strdeq	r1, [r1], -r8
   11950:	strdeq	r1, [r1], -r8
   11954:	strdeq	r1, [r1], -r8
   11958:	strdeq	r1, [r1], -r8
   1195c:	strdeq	r1, [r1], -r8
   11960:	strdeq	r1, [r1], -r8
   11964:	strdeq	r1, [r1], -r8
   11968:	andeq	r1, r1, r0, lsr fp
   1196c:	strdeq	r1, [r1], -r8
   11970:	strdeq	r1, [r1], -r8
   11974:	strdeq	r1, [r1], -r8
   11978:	strdeq	r1, [r1], -r8
   1197c:	strdeq	r1, [r1], -r8
   11980:	strdeq	r1, [r1], -r8
   11984:	andeq	r1, r1, r4, ror #22
   11988:	strdeq	r1, [r1], -r8
   1198c:	strdeq	r1, [r1], -r8
   11990:	strdeq	r1, [r1], -r8
   11994:	strdeq	r1, [r1], -r8
   11998:	strdeq	r1, [r1], -r8
   1199c:	strdeq	r1, [r1], -r8
   119a0:	strdeq	r1, [r1], -r8
   119a4:	strdeq	r1, [r1], -r8
   119a8:	strdeq	r1, [r1], -r8
   119ac:	strdeq	r1, [r1], -r8
   119b0:	strdeq	r1, [r1], -r8
   119b4:	strdeq	r1, [r1], -r8
   119b8:	strdeq	r1, [r1], -r8
   119bc:	strdeq	r1, [r1], -r8
   119c0:	strdeq	r1, [r1], -r8
   119c4:	strdeq	r1, [r1], -r8
   119c8:	strdeq	r1, [r1], -r8
   119cc:	strdeq	r1, [r1], -r8
   119d0:	strdeq	r1, [r1], -r8
   119d4:	strdeq	r1, [r1], -r8
   119d8:	strdeq	r1, [r1], -r8
   119dc:	strdeq	r1, [r1], -r8
   119e0:	strdeq	r1, [r1], -r8
   119e4:	strdeq	r1, [r1], -r8
   119e8:	strdeq	r1, [r1], -r8
   119ec:	strdeq	r1, [r1], -r8
   119f0:	strdeq	r1, [r1], -r8
   119f4:	strdeq	r1, [r1], -r8
   119f8:	strdeq	r1, [r1], -r8
   119fc:	strdeq	r1, [r1], -r8
   11a00:	strdeq	r1, [r1], -r8
   11a04:	strdeq	r1, [r1], -r8
   11a08:	strdeq	r1, [r1], -r8
   11a0c:	strdeq	r1, [r1], -r8
   11a10:	strdeq	r1, [r1], -r8
   11a14:	strdeq	r1, [r1], -r8
   11a18:	strdeq	r1, [r1], -r8
   11a1c:	strdeq	r1, [r1], -r8
   11a20:	strdeq	r1, [r1], -r8
   11a24:	strdeq	r1, [r1], -r8
   11a28:	strdeq	r1, [r1], -r8
   11a2c:	strdeq	r1, [r1], -r8
   11a30:	strdeq	r1, [r1], -r8
   11a34:	strdeq	r1, [r1], -r8
   11a38:	strdeq	r1, [r1], -r8
   11a3c:	strdeq	r1, [r1], -r8
   11a40:	strdeq	r1, [r1], -r8
   11a44:	strdeq	r1, [r1], -r8
   11a48:	strdeq	r1, [r1], -r8
   11a4c:	strdeq	r1, [r1], -r8
   11a50:	strdeq	r1, [r1], -r8
   11a54:	strdeq	r1, [r1], -r8
   11a58:	strdeq	r1, [r1], -r8
   11a5c:	strdeq	r1, [r1], -r8
   11a60:	strdeq	r1, [r1], -r8
   11a64:	strdeq	r1, [r1], -r8
   11a68:	strdeq	r1, [r1], -r8
   11a6c:	andeq	r1, r1, ip, ror fp
   11a70:	movw	r0, #8575	; 0x217f
   11a74:	movt	r0, #1
   11a78:	bl	10e3c <printf@plt>
   11a7c:	add	r4, r4, #1
   11a80:	subs	r5, r5, #1
   11a84:	bne	11900 <main@@Base+0x668>
   11a88:	b	11880 <main@@Base+0x5e8>
   11a8c:	movw	r0, #8578	; 0x2182
   11a90:	movt	r0, #1
   11a94:	bl	10e3c <printf@plt>
   11a98:	add	r4, r4, #1
   11a9c:	subs	r5, r5, #1
   11aa0:	bne	11900 <main@@Base+0x668>
   11aa4:	b	11880 <main@@Base+0x5e8>
   11aa8:	movw	r0, #8584	; 0x2188
   11aac:	movt	r0, #1
   11ab0:	bl	10e3c <printf@plt>
   11ab4:	add	r4, r4, #1
   11ab8:	subs	r5, r5, #1
   11abc:	bne	11900 <main@@Base+0x668>
   11ac0:	b	11880 <main@@Base+0x5e8>
   11ac4:	movw	r0, #8581	; 0x2185
   11ac8:	movt	r0, #1
   11acc:	bl	10e3c <printf@plt>
   11ad0:	add	r4, r4, #1
   11ad4:	subs	r5, r5, #1
   11ad8:	bne	11900 <main@@Base+0x668>
   11adc:	b	11880 <main@@Base+0x5e8>
   11ae0:	mov	r0, sl
   11ae4:	bl	10e3c <printf@plt>
   11ae8:	add	r4, r4, #1
   11aec:	subs	r5, r5, #1
   11af0:	bne	11900 <main@@Base+0x668>
   11af4:	b	11880 <main@@Base+0x5e8>
   11af8:	bl	10ee4 <__ctype_b_loc@plt>
   11afc:	ldr	r0, [r0]
   11b00:	add	r0, r0, r9, lsl #1
   11b04:	ldrb	r0, [r0, #1]
   11b08:	tst	r0, #64	; 0x40
   11b0c:	bne	11b94 <main@@Base+0x8fc>
   11b10:	movw	r0, #8602	; 0x219a
   11b14:	mov	r1, r9
   11b18:	movt	r0, #1
   11b1c:	bl	10e3c <printf@plt>
   11b20:	add	r4, r4, #1
   11b24:	subs	r5, r5, #1
   11b28:	bne	11900 <main@@Base+0x668>
   11b2c:	b	11880 <main@@Base+0x5e8>
   11b30:	mov	r0, r7
   11b34:	bl	10e3c <printf@plt>
   11b38:	add	r4, r4, #1
   11b3c:	subs	r5, r5, #1
   11b40:	bne	11900 <main@@Base+0x668>
   11b44:	b	11880 <main@@Base+0x5e8>
   11b48:	movw	r0, #8593	; 0x2191
   11b4c:	movt	r0, #1
   11b50:	bl	10e3c <printf@plt>
   11b54:	add	r4, r4, #1
   11b58:	subs	r5, r5, #1
   11b5c:	bne	11900 <main@@Base+0x668>
   11b60:	b	11880 <main@@Base+0x5e8>
   11b64:	mov	r0, r6
   11b68:	bl	10e3c <printf@plt>
   11b6c:	add	r4, r4, #1
   11b70:	subs	r5, r5, #1
   11b74:	bne	11900 <main@@Base+0x668>
   11b78:	b	11880 <main@@Base+0x5e8>
   11b7c:	mov	r0, r8
   11b80:	bl	10e3c <printf@plt>
   11b84:	add	r4, r4, #1
   11b88:	subs	r5, r5, #1
   11b8c:	bne	11900 <main@@Base+0x668>
   11b90:	b	11880 <main@@Base+0x5e8>
   11b94:	mov	r0, r9
   11b98:	bl	10f38 <putchar@plt>
   11b9c:	add	r4, r4, #1
   11ba0:	subs	r5, r5, #1
   11ba4:	bne	11900 <main@@Base+0x668>
   11ba8:	b	11880 <main@@Base+0x5e8>
   11bac:	movw	r0, #8466	; 0x2112
   11bb0:	movw	r1, #8468	; 0x2114
   11bb4:	movw	r3, #8537	; 0x2159
   11bb8:	mov	r2, #230	; 0xe6
   11bbc:	movt	r0, #1
   11bc0:	movt	r1, #1
   11bc4:	movt	r3, #1
   11bc8:	bl	10fd4 <__assert_fail@plt>
   11bcc:	push	{fp, lr}
   11bd0:	mov	fp, sp
   11bd4:	movw	r0, #8608	; 0x21a0
   11bd8:	movt	r0, #1
   11bdc:	bl	10eb4 <puts@plt>
   11be0:	movw	r0, #8615	; 0x21a7
   11be4:	movt	r0, #1
   11be8:	bl	10eb4 <puts@plt>
   11bec:	movw	r0, #8693	; 0x21f5
   11bf0:	movt	r0, #1
   11bf4:	bl	10eb4 <puts@plt>
   11bf8:	movw	r0, #8771	; 0x2243
   11bfc:	movt	r0, #1
   11c00:	bl	10eb4 <puts@plt>
   11c04:	movw	r0, #8807	; 0x2267
   11c08:	movt	r0, #1
   11c0c:	bl	10eb4 <puts@plt>
   11c10:	movw	r0, #8881	; 0x22b1
   11c14:	movt	r0, #1
   11c18:	bl	10eb4 <puts@plt>
   11c1c:	movw	r0, #8956	; 0x22fc
   11c20:	movt	r0, #1
   11c24:	bl	10eb4 <puts@plt>
   11c28:	mov	r0, #10
   11c2c:	bl	10f38 <putchar@plt>
   11c30:	movw	r0, #9004	; 0x232c
   11c34:	movt	r0, #1
   11c38:	bl	10eb4 <puts@plt>
   11c3c:	movw	r0, #9021	; 0x233d
   11c40:	movt	r0, #1
   11c44:	bl	10eb4 <puts@plt>
   11c48:	movw	r0, #9045	; 0x2355
   11c4c:	movt	r0, #1
   11c50:	bl	10eb4 <puts@plt>
   11c54:	movw	r0, #9125	; 0x23a5
   11c58:	movt	r0, #1
   11c5c:	bl	10eb4 <puts@plt>
   11c60:	movw	r0, #9205	; 0x23f5
   11c64:	movt	r0, #1
   11c68:	bl	10eb4 <puts@plt>
   11c6c:	movw	r0, #9243	; 0x241b
   11c70:	movt	r0, #1
   11c74:	bl	10eb4 <puts@plt>
   11c78:	movw	r0, #9301	; 0x2455
   11c7c:	movt	r0, #1
   11c80:	bl	10eb4 <puts@plt>
   11c84:	movw	r0, #9325	; 0x246d
   11c88:	movt	r0, #1
   11c8c:	bl	10eb4 <puts@plt>
   11c90:	movw	r0, #9399	; 0x24b7
   11c94:	movt	r0, #1
   11c98:	bl	10eb4 <puts@plt>
   11c9c:	movw	r0, #9474	; 0x2502
   11ca0:	movt	r0, #1
   11ca4:	bl	10eb4 <puts@plt>
   11ca8:	movw	r0, #9504	; 0x2520
   11cac:	movt	r0, #1
   11cb0:	bl	10eb4 <puts@plt>
   11cb4:	movw	r0, #9580	; 0x256c
   11cb8:	movt	r0, #1
   11cbc:	bl	10eb4 <puts@plt>
   11cc0:	mov	r0, #10
   11cc4:	bl	10f38 <putchar@plt>
   11cc8:	movw	r0, #9627	; 0x259b
   11ccc:	movt	r0, #1
   11cd0:	bl	10eb4 <puts@plt>
   11cd4:	movw	r0, #9707	; 0x25eb
   11cd8:	movt	r0, #1
   11cdc:	bl	10eb4 <puts@plt>
   11ce0:	mov	r0, #10
   11ce4:	bl	10f38 <putchar@plt>
   11ce8:	movw	r0, #9730	; 0x2602
   11cec:	movt	r0, #1
   11cf0:	bl	10eb4 <puts@plt>
   11cf4:	movw	r0, #9753	; 0x2619
   11cf8:	movt	r0, #1
   11cfc:	bl	10eb4 <puts@plt>
   11d00:	mov	r0, #10
   11d04:	bl	10f38 <putchar@plt>
   11d08:	movw	r0, #9783	; 0x2637
   11d0c:	movt	r0, #1
   11d10:	bl	10eb4 <puts@plt>
   11d14:	movw	r0, #9810	; 0x2652
   11d18:	movt	r0, #1
   11d1c:	bl	10eb4 <puts@plt>
   11d20:	mov	r0, #10
   11d24:	bl	10f38 <putchar@plt>
   11d28:	movw	r0, #9860	; 0x2684
   11d2c:	movt	r0, #1
   11d30:	bl	10eb4 <puts@plt>
   11d34:	movw	r0, #9934	; 0x26ce
   11d38:	movt	r0, #1
   11d3c:	bl	10eb4 <puts@plt>
   11d40:	movw	r0, #10008	; 0x2718
   11d44:	movt	r0, #1
   11d48:	bl	10eb4 <puts@plt>
   11d4c:	movw	r0, #10054	; 0x2746
   11d50:	movt	r0, #1
   11d54:	bl	10eb4 <puts@plt>
   11d58:	movw	r0, #10127	; 0x278f
   11d5c:	movt	r0, #1
   11d60:	bl	10eb4 <puts@plt>
   11d64:	movw	r0, #10200	; 0x27d8
   11d68:	movt	r0, #1
   11d6c:	bl	10eb4 <puts@plt>
   11d70:	movw	r0, #10263	; 0x2817
   11d74:	movt	r0, #1
   11d78:	bl	10eb4 <puts@plt>
   11d7c:	mov	r0, #10
   11d80:	pop	{fp, lr}
   11d84:	b	10f38 <putchar@plt>
   11d88:	push	{fp, lr}
   11d8c:	mov	fp, sp
   11d90:	bl	10fa4 <coda_get_libcoda_version@plt>
   11d94:	mov	r1, r0
   11d98:	movw	r0, #8269	; 0x204d
   11d9c:	movt	r0, #1
   11da0:	bl	10e3c <printf@plt>
   11da4:	movw	r0, #10327	; 0x2857
   11da8:	movt	r0, #1
   11dac:	bl	10eb4 <puts@plt>
   11db0:	mov	r0, #10
   11db4:	pop	{fp, lr}
   11db8:	b	10f38 <putchar@plt>

00011dbc <__libc_csu_init@@Base>:
   11dbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11dc0:	mov	r7, r0
   11dc4:	ldr	r6, [pc, #72]	; 11e14 <__libc_csu_init@@Base+0x58>
   11dc8:	ldr	r5, [pc, #72]	; 11e18 <__libc_csu_init@@Base+0x5c>
   11dcc:	add	r6, pc, r6
   11dd0:	add	r5, pc, r5
   11dd4:	sub	r6, r6, r5
   11dd8:	mov	r8, r1
   11ddc:	mov	r9, r2
   11de0:	bl	10df8 <coda_match_filefilter@plt-0x20>
   11de4:	asrs	r6, r6, #2
   11de8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dec:	mov	r4, #0
   11df0:	add	r4, r4, #1
   11df4:	ldr	r3, [r5], #4
   11df8:	mov	r2, r9
   11dfc:	mov	r1, r8
   11e00:	mov	r0, r7
   11e04:	blx	r3
   11e08:	cmp	r6, r4
   11e0c:	bne	11df0 <__libc_csu_init@@Base+0x34>
   11e10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e14:	andeq	r1, r1, r0, lsr #2
   11e18:	andeq	r1, r1, r8, lsl r1

00011e1c <__libc_csu_fini@@Base>:
   11e1c:	bx	lr

Disassembly of section .fini:

00011e20 <.fini>:
   11e20:	push	{r3, lr}
   11e24:	pop	{r3, pc}
