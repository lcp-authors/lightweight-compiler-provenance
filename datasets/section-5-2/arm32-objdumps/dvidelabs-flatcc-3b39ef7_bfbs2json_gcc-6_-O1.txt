
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

0001086c <.init>:
   1086c:	push	{r3, lr}
   10870:	bl	109a0 <_start@@Base+0x3c>
   10874:	pop	{r3, pc}

Disassembly of section .plt:

00010878 <printf@plt-0x14>:
   10878:	push	{lr}		; (str lr, [sp, #-4]!)
   1087c:	ldr	lr, [pc, #4]	; 10888 <printf@plt-0x4>
   10880:	add	lr, pc, lr
   10884:	ldr	pc, [lr, #8]!
   10888:	andeq	r2, r1, r8, ror r7

0001088c <printf@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1912]!	; 0x778

00010898 <fopen@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1904]!	; 0x770

000108a4 <free@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1896]!	; 0x768

000108b0 <ftell@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1888]!	; 0x760

000108bc <rewind@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1880]!	; 0x758

000108c8 <fwrite@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1872]!	; 0x750

000108d4 <fread@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1864]!	; 0x748

000108e0 <puts@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1856]!	; 0x740

000108ec <malloc@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1848]!	; 0x738

000108f8 <__libc_start_main@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1840]!	; 0x730

00010904 <__gmon_start__@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1832]!	; 0x728

00010910 <exit@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1824]!	; 0x720

0001091c <fprintf@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1816]!	; 0x718

00010928 <putchar@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #73728	; 0x12000
   10930:	ldr	pc, [ip, #1808]!	; 0x710

00010934 <fclose@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #73728	; 0x12000
   1093c:	ldr	pc, [ip, #1800]!	; 0x708

00010940 <fseek@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #73728	; 0x12000
   10948:	ldr	pc, [ip, #1792]!	; 0x700

0001094c <abort@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #73728	; 0x12000
   10954:	ldr	pc, [ip, #1784]!	; 0x6f8

00010958 <__assert_fail@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #73728	; 0x12000
   10960:	ldr	pc, [ip, #1776]!	; 0x6f0

Disassembly of section .text:

00010964 <_start@@Base>:
   10964:	mov	fp, #0
   10968:	mov	lr, #0
   1096c:	pop	{r1}		; (ldr r1, [sp], #4)
   10970:	mov	r2, sp
   10974:	push	{r2}		; (str r2, [sp, #-4]!)
   10978:	push	{r0}		; (str r0, [sp, #-4]!)
   1097c:	ldr	ip, [pc, #16]	; 10994 <_start@@Base+0x30>
   10980:	push	{ip}		; (str ip, [sp, #-4]!)
   10984:	ldr	r0, [pc, #12]	; 10998 <_start@@Base+0x34>
   10988:	ldr	r3, [pc, #12]	; 1099c <_start@@Base+0x38>
   1098c:	bl	108f8 <__libc_start_main@plt>
   10990:	bl	1094c <abort@plt>
   10994:	strdeq	r1, [r1], -ip
   10998:	andeq	r1, r1, ip, lsr #18
   1099c:	muleq	r1, ip, r9
   109a0:	ldr	r3, [pc, #20]	; 109bc <_start@@Base+0x58>
   109a4:	ldr	r2, [pc, #20]	; 109c0 <_start@@Base+0x5c>
   109a8:	add	r3, pc, r3
   109ac:	ldr	r2, [r3, r2]
   109b0:	cmp	r2, #0
   109b4:	bxeq	lr
   109b8:	b	10904 <__gmon_start__@plt>
   109bc:	andeq	r2, r1, r0, asr r6
   109c0:	andeq	r0, r0, r4, asr r0
   109c4:	ldr	r3, [pc, #28]	; 109e8 <_start@@Base+0x84>
   109c8:	ldr	r0, [pc, #28]	; 109ec <_start@@Base+0x88>
   109cc:	sub	r3, r3, r0
   109d0:	cmp	r3, #6
   109d4:	bxls	lr
   109d8:	ldr	r3, [pc, #16]	; 109f0 <_start@@Base+0x8c>
   109dc:	cmp	r3, #0
   109e0:	bxeq	lr
   109e4:	bx	r3
   109e8:	andeq	r3, r2, r3, rrx
   109ec:	andeq	r3, r2, r0, rrx
   109f0:	andeq	r0, r0, r0
   109f4:	ldr	r1, [pc, #36]	; 10a20 <_start@@Base+0xbc>
   109f8:	ldr	r0, [pc, #36]	; 10a24 <_start@@Base+0xc0>
   109fc:	sub	r1, r1, r0
   10a00:	asr	r1, r1, #2
   10a04:	add	r1, r1, r1, lsr #31
   10a08:	asrs	r1, r1, #1
   10a0c:	bxeq	lr
   10a10:	ldr	r3, [pc, #16]	; 10a28 <_start@@Base+0xc4>
   10a14:	cmp	r3, #0
   10a18:	bxeq	lr
   10a1c:	bx	r3
   10a20:	andeq	r3, r2, r0, rrx
   10a24:	andeq	r3, r2, r0, rrx
   10a28:	andeq	r0, r0, r0
   10a2c:	push	{r4, lr}
   10a30:	ldr	r4, [pc, #24]	; 10a50 <_start@@Base+0xec>
   10a34:	ldrb	r3, [r4]
   10a38:	cmp	r3, #0
   10a3c:	popne	{r4, pc}
   10a40:	bl	109c4 <_start@@Base+0x60>
   10a44:	mov	r3, #1
   10a48:	strb	r3, [r4]
   10a4c:	pop	{r4, pc}
   10a50:	andeq	r3, r2, r4, rrx
   10a54:	ldr	r0, [pc, #40]	; 10a84 <_start@@Base+0x120>
   10a58:	ldr	r3, [r0]
   10a5c:	cmp	r3, #0
   10a60:	bne	10a68 <_start@@Base+0x104>
   10a64:	b	109f4 <_start@@Base+0x90>
   10a68:	ldr	r3, [pc, #24]	; 10a88 <_start@@Base+0x124>
   10a6c:	cmp	r3, #0
   10a70:	beq	10a64 <_start@@Base+0x100>
   10a74:	push	{r4, lr}
   10a78:	blx	r3
   10a7c:	pop	{r4, lr}
   10a80:	b	109f4 <_start@@Base+0x90>
   10a84:	andeq	r2, r2, r4, lsl pc
   10a88:	andeq	r0, r0, r0

00010a8c <print_type@@Base>:
   10a8c:	push	{r4, lr}
   10a90:	mov	r4, r0
   10a94:	mov	r0, #123	; 0x7b
   10a98:	bl	10928 <putchar@plt>
   10a9c:	cmp	r4, #0
   10aa0:	beq	10b6c <print_type@@Base+0xe0>
   10aa4:	ldr	r3, [r4]
   10aa8:	sub	r3, r4, r3
   10aac:	ldrh	r2, [r3]
   10ab0:	cmp	r2, #5
   10ab4:	movls	r2, #1
   10ab8:	bls	10acc <print_type@@Base+0x40>
   10abc:	ldrh	r3, [r3, #4]
   10ac0:	cmp	r3, #0
   10ac4:	moveq	r2, #1
   10ac8:	bne	10b80 <print_type@@Base+0xf4>
   10acc:	ldr	r3, [r4]
   10ad0:	sub	r3, r4, r3
   10ad4:	ldrh	r1, [r3]
   10ad8:	cmp	r1, #7
   10adc:	bls	10d14 <print_type@@Base+0x288>
   10ae0:	ldrh	r3, [r3, #6]
   10ae4:	cmp	r3, #0
   10ae8:	beq	10d14 <print_type@@Base+0x288>
   10aec:	cmp	r2, #0
   10af0:	beq	10c70 <print_type@@Base+0x1e4>
   10af4:	ldr	r3, [r4]
   10af8:	sub	r3, r4, r3
   10afc:	ldrh	r2, [r3]
   10b00:	cmp	r2, #5
   10b04:	bls	10d04 <print_type@@Base+0x278>
   10b08:	ldrh	r3, [r3, #4]
   10b0c:	cmp	r3, #0
   10b10:	ldreq	r1, [pc, #636]	; 10d94 <print_type@@Base+0x308>
   10b14:	beq	10d08 <print_type@@Base+0x27c>
   10b18:	ldrsb	r3, [r4, r3]
   10b1c:	cmp	r3, #16
   10b20:	ldrls	pc, [pc, r3, lsl #2]
   10b24:	b	10cfc <print_type@@Base+0x270>
   10b28:	andeq	r0, r1, r4, lsl #25
   10b2c:	andeq	r0, r1, ip, ror ip
   10b30:	andeq	r0, r1, r8, ror #26
   10b34:	andeq	r0, r1, ip, lsl #25
   10b38:	muleq	r1, r4, ip
   10b3c:	muleq	r1, ip, ip
   10b40:	andeq	r0, r1, r4, lsr #25
   10b44:	andeq	r0, r1, ip, lsr #25
   10b48:			; <UNDEFINED> instruction: 0x00010cb4
   10b4c:			; <UNDEFINED> instruction: 0x00010cbc
   10b50:	andeq	r0, r1, r4, asr #25
   10b54:	andeq	r0, r1, ip, asr #25
   10b58:	ldrdeq	r0, [r1], -r4
   10b5c:	ldrdeq	r0, [r1], -ip
   10b60:	andeq	r0, r1, r4, ror #25
   10b64:	andeq	r0, r1, ip, ror #25
   10b68:	strdeq	r0, [r1], -r4
   10b6c:	ldr	r3, [pc, #548]	; 10d98 <print_type@@Base+0x30c>
   10b70:	mov	r2, #147	; 0x93
   10b74:	ldr	r1, [pc, #544]	; 10d9c <print_type@@Base+0x310>
   10b78:	ldr	r0, [pc, #544]	; 10da0 <print_type@@Base+0x314>
   10b7c:	bl	10958 <__assert_fail@plt>
   10b80:	ldrsb	r3, [r4, r3]
   10b84:	cmp	r3, #16
   10b88:	ldrls	pc, [pc, r3, lsl #2]
   10b8c:	b	10c54 <print_type@@Base+0x1c8>
   10b90:	andeq	r0, r1, ip, asr ip
   10b94:	ldrdeq	r0, [r1], -r4
   10b98:	ldrdeq	r0, [r1], -ip
   10b9c:	andeq	r0, r1, r4, ror #23
   10ba0:	andeq	r0, r1, ip, ror #23
   10ba4:	strdeq	r0, [r1], -r4
   10ba8:	strdeq	r0, [r1], -ip
   10bac:	andeq	r0, r1, r4, lsl #24
   10bb0:	andeq	r0, r1, ip, lsl #24
   10bb4:	andeq	r0, r1, r4, lsl ip
   10bb8:	andeq	r0, r1, ip, lsl ip
   10bbc:	andeq	r0, r1, r4, lsr #24
   10bc0:	andeq	r0, r1, ip, lsr #24
   10bc4:	andeq	r0, r1, r4, lsr ip
   10bc8:	andeq	r0, r1, ip, lsr ip
   10bcc:	andeq	r0, r1, r4, asr #24
   10bd0:	andeq	r0, r1, ip, asr #24
   10bd4:	ldr	r1, [pc, #456]	; 10da4 <print_type@@Base+0x318>
   10bd8:	b	10c60 <print_type@@Base+0x1d4>
   10bdc:	ldr	r1, [pc, #452]	; 10da8 <print_type@@Base+0x31c>
   10be0:	b	10c60 <print_type@@Base+0x1d4>
   10be4:	ldr	r1, [pc, #448]	; 10dac <print_type@@Base+0x320>
   10be8:	b	10c60 <print_type@@Base+0x1d4>
   10bec:	ldr	r1, [pc, #444]	; 10db0 <print_type@@Base+0x324>
   10bf0:	b	10c60 <print_type@@Base+0x1d4>
   10bf4:	ldr	r1, [pc, #440]	; 10db4 <print_type@@Base+0x328>
   10bf8:	b	10c60 <print_type@@Base+0x1d4>
   10bfc:	ldr	r1, [pc, #436]	; 10db8 <print_type@@Base+0x32c>
   10c00:	b	10c60 <print_type@@Base+0x1d4>
   10c04:	ldr	r1, [pc, #432]	; 10dbc <print_type@@Base+0x330>
   10c08:	b	10c60 <print_type@@Base+0x1d4>
   10c0c:	ldr	r1, [pc, #428]	; 10dc0 <print_type@@Base+0x334>
   10c10:	b	10c60 <print_type@@Base+0x1d4>
   10c14:	ldr	r1, [pc, #424]	; 10dc4 <print_type@@Base+0x338>
   10c18:	b	10c60 <print_type@@Base+0x1d4>
   10c1c:	ldr	r1, [pc, #420]	; 10dc8 <print_type@@Base+0x33c>
   10c20:	b	10c60 <print_type@@Base+0x1d4>
   10c24:	ldr	r1, [pc, #416]	; 10dcc <print_type@@Base+0x340>
   10c28:	b	10c60 <print_type@@Base+0x1d4>
   10c2c:	ldr	r1, [pc, #412]	; 10dd0 <print_type@@Base+0x344>
   10c30:	b	10c60 <print_type@@Base+0x1d4>
   10c34:	ldr	r1, [pc, #408]	; 10dd4 <print_type@@Base+0x348>
   10c38:	b	10c60 <print_type@@Base+0x1d4>
   10c3c:	ldr	r1, [pc, #404]	; 10dd8 <print_type@@Base+0x34c>
   10c40:	b	10c60 <print_type@@Base+0x1d4>
   10c44:	ldr	r1, [pc, #400]	; 10ddc <print_type@@Base+0x350>
   10c48:	b	10c60 <print_type@@Base+0x1d4>
   10c4c:	ldr	r1, [pc, #396]	; 10de0 <print_type@@Base+0x354>
   10c50:	b	10c60 <print_type@@Base+0x1d4>
   10c54:	ldr	r1, [pc, #392]	; 10de4 <print_type@@Base+0x358>
   10c58:	b	10c60 <print_type@@Base+0x1d4>
   10c5c:	ldr	r1, [pc, #304]	; 10d94 <print_type@@Base+0x308>
   10c60:	ldr	r0, [pc, #384]	; 10de8 <print_type@@Base+0x35c>
   10c64:	bl	1088c <printf@plt>
   10c68:	mov	r2, #0
   10c6c:	b	10acc <print_type@@Base+0x40>
   10c70:	mov	r0, #44	; 0x2c
   10c74:	bl	10928 <putchar@plt>
   10c78:	b	10af4 <print_type@@Base+0x68>
   10c7c:	ldr	r1, [pc, #288]	; 10da4 <print_type@@Base+0x318>
   10c80:	b	10d08 <print_type@@Base+0x27c>
   10c84:	ldr	r1, [pc, #264]	; 10d94 <print_type@@Base+0x308>
   10c88:	b	10d08 <print_type@@Base+0x27c>
   10c8c:	ldr	r1, [pc, #280]	; 10dac <print_type@@Base+0x320>
   10c90:	b	10d08 <print_type@@Base+0x27c>
   10c94:	ldr	r1, [pc, #276]	; 10db0 <print_type@@Base+0x324>
   10c98:	b	10d08 <print_type@@Base+0x27c>
   10c9c:	ldr	r1, [pc, #272]	; 10db4 <print_type@@Base+0x328>
   10ca0:	b	10d08 <print_type@@Base+0x27c>
   10ca4:	ldr	r1, [pc, #268]	; 10db8 <print_type@@Base+0x32c>
   10ca8:	b	10d08 <print_type@@Base+0x27c>
   10cac:	ldr	r1, [pc, #264]	; 10dbc <print_type@@Base+0x330>
   10cb0:	b	10d08 <print_type@@Base+0x27c>
   10cb4:	ldr	r1, [pc, #260]	; 10dc0 <print_type@@Base+0x334>
   10cb8:	b	10d08 <print_type@@Base+0x27c>
   10cbc:	ldr	r1, [pc, #256]	; 10dc4 <print_type@@Base+0x338>
   10cc0:	b	10d08 <print_type@@Base+0x27c>
   10cc4:	ldr	r1, [pc, #252]	; 10dc8 <print_type@@Base+0x33c>
   10cc8:	b	10d08 <print_type@@Base+0x27c>
   10ccc:	ldr	r1, [pc, #248]	; 10dcc <print_type@@Base+0x340>
   10cd0:	b	10d08 <print_type@@Base+0x27c>
   10cd4:	ldr	r1, [pc, #244]	; 10dd0 <print_type@@Base+0x344>
   10cd8:	b	10d08 <print_type@@Base+0x27c>
   10cdc:	ldr	r1, [pc, #240]	; 10dd4 <print_type@@Base+0x348>
   10ce0:	b	10d08 <print_type@@Base+0x27c>
   10ce4:	ldr	r1, [pc, #236]	; 10dd8 <print_type@@Base+0x34c>
   10ce8:	b	10d08 <print_type@@Base+0x27c>
   10cec:	ldr	r1, [pc, #232]	; 10ddc <print_type@@Base+0x350>
   10cf0:	b	10d08 <print_type@@Base+0x27c>
   10cf4:	ldr	r1, [pc, #228]	; 10de0 <print_type@@Base+0x354>
   10cf8:	b	10d08 <print_type@@Base+0x27c>
   10cfc:	ldr	r1, [pc, #224]	; 10de4 <print_type@@Base+0x358>
   10d00:	b	10d08 <print_type@@Base+0x27c>
   10d04:	ldr	r1, [pc, #136]	; 10d94 <print_type@@Base+0x308>
   10d08:	ldr	r0, [pc, #220]	; 10dec <print_type@@Base+0x360>
   10d0c:	bl	1088c <printf@plt>
   10d10:	mov	r2, #0
   10d14:	ldr	r3, [r4]
   10d18:	sub	r3, r4, r3
   10d1c:	ldrh	r1, [r3]
   10d20:	cmp	r1, #9
   10d24:	bls	10d5c <print_type@@Base+0x2d0>
   10d28:	ldrh	r3, [r3, #8]
   10d2c:	cmp	r3, #0
   10d30:	beq	10d5c <print_type@@Base+0x2d0>
   10d34:	cmp	r2, #0
   10d38:	beq	10d70 <print_type@@Base+0x2e4>
   10d3c:	ldr	r3, [r4]
   10d40:	sub	r3, r4, r3
   10d44:	ldrh	r3, [r3, #8]
   10d48:	cmp	r3, #0
   10d4c:	ldrne	r1, [r4, r3]
   10d50:	mvneq	r1, #0
   10d54:	ldr	r0, [pc, #148]	; 10df0 <print_type@@Base+0x364>
   10d58:	bl	1088c <printf@plt>
   10d5c:	mov	r0, #125	; 0x7d
   10d60:	bl	10928 <putchar@plt>
   10d64:	pop	{r4, pc}
   10d68:	ldr	r1, [pc, #56]	; 10da8 <print_type@@Base+0x31c>
   10d6c:	b	10d08 <print_type@@Base+0x27c>
   10d70:	mov	r0, #44	; 0x2c
   10d74:	bl	10928 <putchar@plt>
   10d78:	ldr	r3, [r4]
   10d7c:	sub	r3, r4, r3
   10d80:	ldrh	r2, [r3]
   10d84:	cmp	r2, #9
   10d88:	mvnls	r1, #0
   10d8c:	bls	10d54 <print_type@@Base+0x2c8>
   10d90:	b	10d44 <print_type@@Base+0x2b8>
   10d94:	andeq	r1, r1, r0, lsl #23
   10d98:	andeq	r1, r1, ip, lsl #20
   10d9c:	andeq	r1, r1, r0, lsl #24
   10da0:	andeq	r1, r1, r0, ror #24
   10da4:	andeq	r1, r1, r8, lsl #23
   10da8:	muleq	r1, r0, fp
   10dac:	muleq	r1, r8, fp
   10db0:	andeq	r1, r1, r0, lsr #23
   10db4:	andeq	r1, r1, r8, lsr #23
   10db8:			; <UNDEFINED> instruction: 0x00011bb0
   10dbc:			; <UNDEFINED> instruction: 0x00011bb8
   10dc0:			; <UNDEFINED> instruction: 0x00011bbc
   10dc4:	andeq	r1, r1, r4, asr #23
   10dc8:	andeq	r1, r1, ip, asr #23
   10dcc:	ldrdeq	r1, [r1], -r4
   10dd0:	ldrdeq	r1, [r1], -ip
   10dd4:	andeq	r1, r1, r4, ror #23
   10dd8:	andeq	r1, r1, ip, ror #23
   10ddc:	strdeq	r1, [r1], -r4
   10de0:	strdeq	r1, [r1], -r8
   10de4:	andeq	r1, r1, r4, lsl pc
   10de8:	andeq	r1, r1, r8, lsl #25
   10dec:	muleq	r1, ip, ip
   10df0:	andeq	r1, r1, ip, lsr #25

00010df4 <print_object@@Base>:
   10df4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10df8:	subs	sl, r0, #0
   10dfc:	beq	10e4c <print_object@@Base+0x58>
   10e00:	ldr	r3, [sl]
   10e04:	sub	r3, sl, r3
   10e08:	ldrh	r1, [r3]
   10e0c:	cmp	r1, #7
   10e10:	bls	10e60 <print_object@@Base+0x6c>
   10e14:	ldrh	r2, [r3, #6]
   10e18:	cmp	r2, #0
   10e1c:	beq	10e60 <print_object@@Base+0x6c>
   10e20:	add	r8, sl, r2
   10e24:	ldr	r2, [sl, r2]
   10e28:	add	r2, r2, #4
   10e2c:	add	r8, r8, r2
   10e30:	cmp	r1, #5
   10e34:	bhi	10e74 <print_object@@Base+0x80>
   10e38:	ldr	r3, [pc, #836]	; 11184 <print_object@@Base+0x390>
   10e3c:	mov	r2, #218	; 0xda
   10e40:	ldr	r1, [pc, #832]	; 11188 <print_object@@Base+0x394>
   10e44:	ldr	r0, [pc, #832]	; 1118c <print_object@@Base+0x398>
   10e48:	bl	10958 <__assert_fail@plt>
   10e4c:	ldr	r3, [pc, #828]	; 11190 <print_object@@Base+0x39c>
   10e50:	mov	r2, #224	; 0xe0
   10e54:	ldr	r1, [pc, #812]	; 11188 <print_object@@Base+0x394>
   10e58:	ldr	r0, [pc, #820]	; 11194 <print_object@@Base+0x3a0>
   10e5c:	bl	10958 <__assert_fail@plt>
   10e60:	ldr	r3, [pc, #808]	; 11190 <print_object@@Base+0x39c>
   10e64:	mov	r2, #224	; 0xe0
   10e68:	ldr	r1, [pc, #792]	; 11188 <print_object@@Base+0x394>
   10e6c:	ldr	r0, [pc, #792]	; 1118c <print_object@@Base+0x398>
   10e70:	bl	10958 <__assert_fail@plt>
   10e74:	ldrh	r3, [r3, #4]
   10e78:	cmp	r3, #0
   10e7c:	beq	10e38 <print_object@@Base+0x44>
   10e80:	add	r1, sl, r3
   10e84:	ldr	r3, [sl, r3]
   10e88:	add	r3, r3, #4
   10e8c:	add	r1, r1, r3
   10e90:	ldr	r0, [pc, #768]	; 11198 <print_object@@Base+0x3a4>
   10e94:	bl	1088c <printf@plt>
   10e98:	ldr	r0, [pc, #764]	; 1119c <print_object@@Base+0x3a8>
   10e9c:	bl	1088c <printf@plt>
   10ea0:	mov	r9, r8
   10ea4:	mov	r7, #0
   10ea8:	ldr	fp, [pc, #752]	; 111a0 <print_object@@Base+0x3ac>
   10eac:	b	10fc0 <print_object@@Base+0x1cc>
   10eb0:	mov	r0, #44	; 0x2c
   10eb4:	bl	10928 <putchar@plt>
   10eb8:	b	10fdc <print_object@@Base+0x1e8>
   10ebc:	ldr	r3, [pc, #736]	; 111a4 <print_object@@Base+0x3b0>
   10ec0:	mov	r2, #192	; 0xc0
   10ec4:	ldr	r1, [pc, #700]	; 11188 <print_object@@Base+0x394>
   10ec8:	ldr	r0, [pc, #728]	; 111a8 <print_object@@Base+0x3b4>
   10ecc:	bl	10958 <__assert_fail@plt>
   10ed0:	ldr	r3, [pc, #724]	; 111ac <print_object@@Base+0x3b8>
   10ed4:	mov	r2, #195	; 0xc3
   10ed8:	ldr	r1, [pc, #680]	; 11188 <print_object@@Base+0x394>
   10edc:	ldr	r0, [pc, #688]	; 11194 <print_object@@Base+0x3a0>
   10ee0:	bl	10958 <__assert_fail@plt>
   10ee4:	ldr	r3, [pc, #704]	; 111ac <print_object@@Base+0x3b8>
   10ee8:	mov	r2, #195	; 0xc3
   10eec:	ldr	r1, [pc, #660]	; 11188 <print_object@@Base+0x394>
   10ef0:	ldr	r0, [pc, #660]	; 1118c <print_object@@Base+0x398>
   10ef4:	bl	10958 <__assert_fail@plt>
   10ef8:	ldrh	r3, [r3, #6]
   10efc:	cmp	r3, #0
   10f00:	beq	11048 <print_object@@Base+0x254>
   10f04:	add	r0, r4, r3
   10f08:	ldr	r3, [r4, r3]
   10f0c:	add	r0, r0, r3
   10f10:	bl	10a8c <print_type@@Base>
   10f14:	ldr	r3, [r5, r6]
   10f18:	sub	r3, r4, r3
   10f1c:	ldrh	r2, [r3]
   10f20:	cmp	r2, #9
   10f24:	bls	10f34 <print_object@@Base+0x140>
   10f28:	ldrh	r3, [r3, #8]
   10f2c:	cmp	r3, #0
   10f30:	bne	1105c <print_object@@Base+0x268>
   10f34:	ldr	r3, [r5, r6]
   10f38:	sub	r3, r4, r3
   10f3c:	ldrh	r2, [r3]
   10f40:	cmp	r2, #13
   10f44:	bls	10f54 <print_object@@Base+0x160>
   10f48:	ldrh	r3, [r3, #12]
   10f4c:	cmp	r3, #0
   10f50:	bne	1106c <print_object@@Base+0x278>
   10f54:	ldr	r3, [r5, r6]
   10f58:	sub	r3, r4, r3
   10f5c:	ldrh	r2, [r3]
   10f60:	cmp	r2, #15
   10f64:	bls	10f74 <print_object@@Base+0x180>
   10f68:	ldrh	r3, [r3, #14]
   10f6c:	cmp	r3, #0
   10f70:	bne	1107c <print_object@@Base+0x288>
   10f74:	ldr	r3, [r5, r6]
   10f78:	sub	r3, r4, r3
   10f7c:	ldrh	r2, [r3]
   10f80:	cmp	r2, #19
   10f84:	bls	10f94 <print_object@@Base+0x1a0>
   10f88:	ldrh	r3, [r3, #18]
   10f8c:	cmp	r3, #0
   10f90:	bne	11090 <print_object@@Base+0x29c>
   10f94:	ldr	r3, [r5, r6]
   10f98:	sub	r3, r4, r3
   10f9c:	ldrh	r2, [r3]
   10fa0:	cmp	r2, #21
   10fa4:	bls	10fb4 <print_object@@Base+0x1c0>
   10fa8:	ldrh	r3, [r3, #20]
   10fac:	cmp	r3, #0
   10fb0:	bne	110b0 <print_object@@Base+0x2bc>
   10fb4:	mov	r0, #125	; 0x7d
   10fb8:	bl	10928 <putchar@plt>
   10fbc:	add	r7, r7, #1
   10fc0:	cmp	r8, #0
   10fc4:	beq	110d0 <print_object@@Base+0x2dc>
   10fc8:	ldr	r3, [r8, #-4]
   10fcc:	cmp	r7, r3
   10fd0:	bcs	110d0 <print_object@@Base+0x2dc>
   10fd4:	cmp	r7, #0
   10fd8:	bne	10eb0 <print_object@@Base+0xbc>
   10fdc:	mov	r5, r9
   10fe0:	ldr	r3, [r8, #-4]
   10fe4:	cmp	r7, r3
   10fe8:	bcs	10ebc <print_object@@Base+0xc8>
   10fec:	add	r9, r9, #4
   10ff0:	ldr	r6, [r5]
   10ff4:	adds	r4, r5, r6
   10ff8:	beq	10ed0 <print_object@@Base+0xdc>
   10ffc:	ldr	r3, [r5, r6]
   11000:	sub	r3, r4, r3
   11004:	ldrh	r2, [r3]
   11008:	cmp	r2, #5
   1100c:	bls	10ee4 <print_object@@Base+0xf0>
   11010:	ldrh	r3, [r3, #4]
   11014:	cmp	r3, #0
   11018:	beq	10ee4 <print_object@@Base+0xf0>
   1101c:	add	r1, r4, r3
   11020:	ldr	r3, [r4, r3]
   11024:	add	r3, r3, #4
   11028:	add	r1, r1, r3
   1102c:	ldr	r0, [pc, #380]	; 111b0 <print_object@@Base+0x3bc>
   11030:	bl	1088c <printf@plt>
   11034:	ldr	r3, [r5, r6]
   11038:	sub	r3, r4, r3
   1103c:	ldrh	r2, [r3]
   11040:	cmp	r2, #7
   11044:	bhi	10ef8 <print_object@@Base+0x104>
   11048:	ldr	r3, [pc, #356]	; 111b4 <print_object@@Base+0x3c0>
   1104c:	mov	r2, #201	; 0xc9
   11050:	ldr	r1, [pc, #304]	; 11188 <print_object@@Base+0x394>
   11054:	ldr	r0, [pc, #304]	; 1118c <print_object@@Base+0x398>
   11058:	bl	10958 <__assert_fail@plt>
   1105c:	ldrh	r1, [r4, r3]
   11060:	ldr	r0, [pc, #336]	; 111b8 <print_object@@Base+0x3c4>
   11064:	bl	1088c <printf@plt>
   11068:	b	10f34 <print_object@@Base+0x140>
   1106c:	ldrd	r2, [r3, r4]
   11070:	ldr	r0, [pc, #324]	; 111bc <print_object@@Base+0x3c8>
   11074:	bl	1088c <printf@plt>
   11078:	b	10f54 <print_object@@Base+0x160>
   1107c:	add	r3, r4, r3
   11080:	ldrd	r2, [r3]
   11084:	ldr	r0, [pc, #308]	; 111c0 <print_object@@Base+0x3cc>
   11088:	bl	1088c <printf@plt>
   1108c:	b	10f74 <print_object@@Base+0x180>
   11090:	ldrb	r1, [r4, r3]
   11094:	ldr	r3, [pc, #296]	; 111c4 <print_object@@Base+0x3d0>
   11098:	cmp	r1, #0
   1109c:	movne	r3, fp
   110a0:	mov	r1, r3
   110a4:	ldr	r0, [pc, #284]	; 111c8 <print_object@@Base+0x3d4>
   110a8:	bl	1088c <printf@plt>
   110ac:	b	10f94 <print_object@@Base+0x1a0>
   110b0:	ldrb	r1, [r4, r3]
   110b4:	ldr	r3, [pc, #264]	; 111c4 <print_object@@Base+0x3d0>
   110b8:	cmp	r1, #0
   110bc:	movne	r3, fp
   110c0:	mov	r1, r3
   110c4:	ldr	r0, [pc, #256]	; 111cc <print_object@@Base+0x3d8>
   110c8:	bl	1088c <printf@plt>
   110cc:	b	10fb4 <print_object@@Base+0x1c0>
   110d0:	mov	r0, #93	; 0x5d
   110d4:	bl	10928 <putchar@plt>
   110d8:	ldr	r3, [sl]
   110dc:	sub	r3, sl, r3
   110e0:	ldrh	r2, [r3]
   110e4:	cmp	r2, #9
   110e8:	bls	110f8 <print_object@@Base+0x304>
   110ec:	ldrh	r3, [r3, #8]
   110f0:	cmp	r3, #0
   110f4:	bne	11150 <print_object@@Base+0x35c>
   110f8:	ldr	r3, [sl]
   110fc:	sub	r3, sl, r3
   11100:	ldrh	r2, [r3]
   11104:	cmp	r2, #11
   11108:	bls	11118 <print_object@@Base+0x324>
   1110c:	ldrh	r3, [r3, #10]
   11110:	cmp	r3, #0
   11114:	bne	11174 <print_object@@Base+0x380>
   11118:	ldr	r3, [sl]
   1111c:	sub	r3, sl, r3
   11120:	ldrh	r2, [r3]
   11124:	cmp	r2, #13
   11128:	bls	11144 <print_object@@Base+0x350>
   1112c:	ldrh	r3, [r3, #12]
   11130:	cmp	r3, #0
   11134:	beq	11144 <print_object@@Base+0x350>
   11138:	ldr	r1, [sl, r3]
   1113c:	ldr	r0, [pc, #140]	; 111d0 <print_object@@Base+0x3dc>
   11140:	bl	1088c <printf@plt>
   11144:	mov	r0, #125	; 0x7d
   11148:	bl	10928 <putchar@plt>
   1114c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11150:	ldrb	r1, [sl, r3]
   11154:	ldr	r3, [pc, #104]	; 111c4 <print_object@@Base+0x3d0>
   11158:	ldr	r2, [pc, #64]	; 111a0 <print_object@@Base+0x3ac>
   1115c:	cmp	r1, #0
   11160:	movne	r1, r2
   11164:	moveq	r1, r3
   11168:	ldr	r0, [pc, #100]	; 111d4 <print_object@@Base+0x3e0>
   1116c:	bl	1088c <printf@plt>
   11170:	b	110f8 <print_object@@Base+0x304>
   11174:	ldr	r1, [sl, r3]
   11178:	ldr	r0, [pc, #88]	; 111d8 <print_object@@Base+0x3e4>
   1117c:	bl	1088c <printf@plt>
   11180:	b	11118 <print_object@@Base+0x324>
   11184:	andeq	r1, r1, r0, asr sl
   11188:	andeq	r1, r1, r0, lsl #24
   1118c:	andeq	r1, r1, r8, asr #25
   11190:	andeq	r1, r1, r4, lsr sl
   11194:	andeq	r1, r1, r0, ror #24
   11198:	andeq	r1, r1, ip, ror #25
   1119c:	strdeq	r1, [r1], -ip
   111a0:			; <UNDEFINED> instruction: 0x00011cb8
   111a4:	andeq	r1, r1, r8, ror #20
   111a8:	andeq	r1, r1, r8, lsl #26
   111ac:	andeq	r1, r1, r0, lsl #21
   111b0:	andeq	r1, r1, r0, asr #26
   111b4:	muleq	r1, r8, sl
   111b8:	andeq	r1, r1, r8, asr sp
   111bc:	andeq	r1, r1, r4, ror #26
   111c0:	andeq	r1, r1, ip, ror sp
   111c4:	andeq	r1, r1, r0, asr #25
   111c8:	muleq	r1, r4, sp
   111cc:	andeq	r1, r1, r4, lsr #27
   111d0:	ldrdeq	r1, [r1], -r0
   111d4:			; <UNDEFINED> instruction: 0x00011db0
   111d8:	andeq	r1, r1, r0, asr #27

000111dc <print_enum@@Base>:
   111dc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111e0:	subs	sl, r0, #0
   111e4:	beq	11248 <print_enum@@Base+0x6c>
   111e8:	ldr	r3, [sl]
   111ec:	sub	r3, sl, r3
   111f0:	ldrh	r2, [r3]
   111f4:	cmp	r2, #5
   111f8:	bls	1125c <print_enum@@Base+0x80>
   111fc:	ldrh	r3, [r3, #4]
   11200:	cmp	r3, #0
   11204:	beq	1125c <print_enum@@Base+0x80>
   11208:	add	r1, sl, r3
   1120c:	ldr	r3, [sl, r3]
   11210:	add	r3, r3, #4
   11214:	add	r1, r1, r3
   11218:	ldr	r0, [pc, #608]	; 11480 <print_enum@@Base+0x2a4>
   1121c:	bl	1088c <printf@plt>
   11220:	ldr	r3, [sl]
   11224:	sub	r3, sl, r3
   11228:	ldrh	r2, [r3]
   1122c:	cmp	r2, #7
   11230:	bhi	11270 <print_enum@@Base+0x94>
   11234:	ldr	r3, [pc, #584]	; 11484 <print_enum@@Base+0x2a8>
   11238:	mov	r2, #183	; 0xb7
   1123c:	ldr	r1, [pc, #580]	; 11488 <print_enum@@Base+0x2ac>
   11240:	ldr	r0, [pc, #580]	; 1148c <print_enum@@Base+0x2b0>
   11244:	bl	10958 <__assert_fail@plt>
   11248:	ldr	r3, [pc, #576]	; 11490 <print_enum@@Base+0x2b4>
   1124c:	mov	r2, #177	; 0xb1
   11250:	ldr	r1, [pc, #560]	; 11488 <print_enum@@Base+0x2ac>
   11254:	ldr	r0, [pc, #568]	; 11494 <print_enum@@Base+0x2b8>
   11258:	bl	10958 <__assert_fail@plt>
   1125c:	ldr	r3, [pc, #556]	; 11490 <print_enum@@Base+0x2b4>
   11260:	mov	r2, #177	; 0xb1
   11264:	ldr	r1, [pc, #540]	; 11488 <print_enum@@Base+0x2ac>
   11268:	ldr	r0, [pc, #540]	; 1148c <print_enum@@Base+0x2b0>
   1126c:	bl	10958 <__assert_fail@plt>
   11270:	ldrh	r3, [r3, #6]
   11274:	cmp	r3, #0
   11278:	beq	11234 <print_enum@@Base+0x58>
   1127c:	add	r9, sl, r3
   11280:	ldr	r3, [sl, r3]
   11284:	add	r3, r3, #4
   11288:	add	r9, r9, r3
   1128c:	ldr	r0, [pc, #516]	; 11498 <print_enum@@Base+0x2bc>
   11290:	bl	1088c <printf@plt>
   11294:	mov	r8, r9
   11298:	mov	r7, #0
   1129c:	ldr	fp, [pc, #476]	; 11480 <print_enum@@Base+0x2a4>
   112a0:	b	112f8 <print_enum@@Base+0x11c>
   112a4:	mov	r0, #44	; 0x2c
   112a8:	bl	10928 <putchar@plt>
   112ac:	b	11324 <print_enum@@Base+0x148>
   112b0:	ldr	r3, [pc, #484]	; 1149c <print_enum@@Base+0x2c0>
   112b4:	mov	r2, #159	; 0x9f
   112b8:	ldr	r1, [pc, #456]	; 11488 <print_enum@@Base+0x2ac>
   112bc:	ldr	r0, [pc, #464]	; 11494 <print_enum@@Base+0x2b8>
   112c0:	bl	10958 <__assert_fail@plt>
   112c4:	ldr	r3, [pc, #464]	; 1149c <print_enum@@Base+0x2c0>
   112c8:	mov	r2, #159	; 0x9f
   112cc:	ldr	r1, [pc, #436]	; 11488 <print_enum@@Base+0x2ac>
   112d0:	ldr	r0, [pc, #436]	; 1148c <print_enum@@Base+0x2b0>
   112d4:	bl	10958 <__assert_fail@plt>
   112d8:	ldrd	r2, [r3, r4]
   112dc:	ldr	r0, [pc, #444]	; 114a0 <print_enum@@Base+0x2c4>
   112e0:	bl	1088c <printf@plt>
   112e4:	b	11384 <print_enum@@Base+0x1a8>
   112e8:	bl	10df4 <print_object@@Base>
   112ec:	mov	r0, #125	; 0x7d
   112f0:	bl	10928 <putchar@plt>
   112f4:	add	r7, r7, #1
   112f8:	cmp	r9, #0
   112fc:	beq	113e0 <print_enum@@Base+0x204>
   11300:	ldr	r3, [r9, #-4]
   11304:	cmp	r7, r3
   11308:	bcs	113e0 <print_enum@@Base+0x204>
   1130c:	mov	r5, r8
   11310:	add	r8, r8, #4
   11314:	ldr	r6, [r5]
   11318:	add	r4, r5, r6
   1131c:	cmp	r7, #0
   11320:	bne	112a4 <print_enum@@Base+0xc8>
   11324:	cmp	r4, #0
   11328:	beq	112b0 <print_enum@@Base+0xd4>
   1132c:	ldr	r3, [r5, r6]
   11330:	sub	r3, r4, r3
   11334:	ldrh	r2, [r3]
   11338:	cmp	r2, #5
   1133c:	bls	112c4 <print_enum@@Base+0xe8>
   11340:	ldrh	r3, [r3, #4]
   11344:	cmp	r3, #0
   11348:	beq	112c4 <print_enum@@Base+0xe8>
   1134c:	add	r1, r4, r3
   11350:	ldr	r3, [r4, r3]
   11354:	add	r3, r3, #4
   11358:	add	r1, r1, r3
   1135c:	mov	r0, fp
   11360:	bl	1088c <printf@plt>
   11364:	ldr	r3, [r5, r6]
   11368:	sub	r3, r4, r3
   1136c:	ldrh	r2, [r3]
   11370:	cmp	r2, #7
   11374:	bls	11384 <print_enum@@Base+0x1a8>
   11378:	ldrh	r3, [r3, #6]
   1137c:	cmp	r3, #0
   11380:	bne	112d8 <print_enum@@Base+0xfc>
   11384:	ldr	r3, [r5, r6]
   11388:	sub	r3, r4, r3
   1138c:	ldrh	r2, [r3]
   11390:	cmp	r2, #9
   11394:	bls	112ec <print_enum@@Base+0x110>
   11398:	ldrh	r3, [r3, #8]
   1139c:	cmp	r3, #0
   113a0:	beq	112ec <print_enum@@Base+0x110>
   113a4:	ldr	r0, [pc, #248]	; 114a4 <print_enum@@Base+0x2c8>
   113a8:	bl	1088c <printf@plt>
   113ac:	ldr	r3, [r5, r6]
   113b0:	sub	r3, r4, r3
   113b4:	ldrh	r2, [r3]
   113b8:	cmp	r2, #9
   113bc:	movls	r0, #0
   113c0:	bls	112e8 <print_enum@@Base+0x10c>
   113c4:	ldrh	r3, [r3, #8]
   113c8:	cmp	r3, #0
   113cc:	addne	r0, r4, r3
   113d0:	ldrne	r3, [r4, r3]
   113d4:	addne	r0, r0, r3
   113d8:	moveq	r0, #0
   113dc:	b	112e8 <print_enum@@Base+0x10c>
   113e0:	mov	r0, #93	; 0x5d
   113e4:	bl	10928 <putchar@plt>
   113e8:	ldr	r3, [sl]
   113ec:	sub	r3, sl, r3
   113f0:	ldrh	r2, [r3]
   113f4:	cmp	r2, #9
   113f8:	bls	11428 <print_enum@@Base+0x24c>
   113fc:	ldrh	r3, [r3, #8]
   11400:	cmp	r3, #0
   11404:	beq	11428 <print_enum@@Base+0x24c>
   11408:	ldrb	r1, [sl, r3]
   1140c:	ldr	r3, [pc, #148]	; 114a8 <print_enum@@Base+0x2cc>
   11410:	ldr	r2, [pc, #148]	; 114ac <print_enum@@Base+0x2d0>
   11414:	cmp	r1, #0
   11418:	movne	r1, r2
   1141c:	moveq	r1, r3
   11420:	ldr	r0, [pc, #136]	; 114b0 <print_enum@@Base+0x2d4>
   11424:	bl	1088c <printf@plt>
   11428:	ldr	r0, [pc, #132]	; 114b4 <print_enum@@Base+0x2d8>
   1142c:	bl	1088c <printf@plt>
   11430:	ldr	r3, [sl]
   11434:	sub	r3, sl, r3
   11438:	ldrh	r2, [r3]
   1143c:	cmp	r2, #11
   11440:	bls	1146c <print_enum@@Base+0x290>
   11444:	ldrh	r3, [r3, #10]
   11448:	cmp	r3, #0
   1144c:	beq	1146c <print_enum@@Base+0x290>
   11450:	add	r0, sl, r3
   11454:	ldr	r3, [sl, r3]
   11458:	add	r0, r0, r3
   1145c:	bl	10a8c <print_type@@Base>
   11460:	mov	r0, #125	; 0x7d
   11464:	bl	10928 <putchar@plt>
   11468:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1146c:	ldr	r3, [pc, #68]	; 114b8 <print_enum@@Base+0x2dc>
   11470:	mov	r2, #185	; 0xb9
   11474:	ldr	r1, [pc, #12]	; 11488 <print_enum@@Base+0x2ac>
   11478:	ldr	r0, [pc, #12]	; 1148c <print_enum@@Base+0x2b0>
   1147c:	bl	10958 <__assert_fail@plt>
   11480:	andeq	r1, r1, ip, ror #25
   11484:	andeq	r1, r1, r8, asr #21
   11488:	andeq	r1, r1, r0, lsl #24
   1148c:	andeq	r1, r1, r8, asr #25
   11490:			; <UNDEFINED> instruction: 0x00011ab0
   11494:	andeq	r1, r1, r0, ror #24
   11498:	andeq	r1, r1, r0, ror #27
   1149c:	andeq	r1, r1, r0, ror #21
   114a0:	andeq	r1, r1, ip, ror #27
   114a4:	strdeq	r1, [r1], -ip
   114a8:	andeq	r1, r1, r0, asr #25
   114ac:			; <UNDEFINED> instruction: 0x00011cb8
   114b0:	andeq	r1, r1, r8, lsl #28
   114b4:	andeq	r1, r1, r8, lsl lr
   114b8:	strdeq	r1, [r1], -r8

000114bc <print_schema@@Base>:
   114bc:	push	{r4, r5, r6, r7, r8, lr}
   114c0:	subs	r7, r0, #0
   114c4:	beq	11518 <print_schema@@Base+0x5c>
   114c8:	ldr	r3, [r7]
   114cc:	sub	r3, r7, r3
   114d0:	ldrh	r2, [r3]
   114d4:	cmp	r2, #5
   114d8:	bls	1152c <print_schema@@Base+0x70>
   114dc:	ldrh	r3, [r3, #4]
   114e0:	cmp	r3, #0
   114e4:	beq	1152c <print_schema@@Base+0x70>
   114e8:	add	r5, r7, r3
   114ec:	ldr	r3, [r7, r3]
   114f0:	add	r3, r3, #4
   114f4:	add	r5, r5, r3
   114f8:	mov	r0, #123	; 0x7b
   114fc:	bl	10928 <putchar@plt>
   11500:	ldr	r0, [pc, #580]	; 1174c <print_schema@@Base+0x290>
   11504:	bl	1088c <printf@plt>
   11508:	mov	r6, r5
   1150c:	mov	r4, #0
   11510:	mov	r8, #44	; 0x2c
   11514:	b	11564 <print_schema@@Base+0xa8>
   11518:	ldr	r3, [pc, #560]	; 11750 <print_schema@@Base+0x294>
   1151c:	mov	r2, #237	; 0xed
   11520:	ldr	r1, [pc, #556]	; 11754 <print_schema@@Base+0x298>
   11524:	ldr	r0, [pc, #556]	; 11758 <print_schema@@Base+0x29c>
   11528:	bl	10958 <__assert_fail@plt>
   1152c:	ldr	r3, [pc, #540]	; 11750 <print_schema@@Base+0x294>
   11530:	mov	r2, #237	; 0xed
   11534:	ldr	r1, [pc, #536]	; 11754 <print_schema@@Base+0x298>
   11538:	ldr	r0, [pc, #540]	; 1175c <print_schema@@Base+0x2a0>
   1153c:	bl	10958 <__assert_fail@plt>
   11540:	mov	r3, r6
   11544:	ldr	r2, [r5, #-4]
   11548:	cmp	r4, r2
   1154c:	bcs	1158c <print_schema@@Base+0xd0>
   11550:	add	r6, r6, #4
   11554:	ldr	r0, [r3]
   11558:	add	r0, r3, r0
   1155c:	bl	10df4 <print_object@@Base>
   11560:	add	r4, r4, #1
   11564:	cmp	r5, #0
   11568:	beq	115a0 <print_schema@@Base+0xe4>
   1156c:	ldr	r3, [r5, #-4]
   11570:	cmp	r4, r3
   11574:	bcs	115a0 <print_schema@@Base+0xe4>
   11578:	cmp	r4, #0
   1157c:	beq	11540 <print_schema@@Base+0x84>
   11580:	mov	r0, r8
   11584:	bl	10928 <putchar@plt>
   11588:	b	11540 <print_schema@@Base+0x84>
   1158c:	ldr	r3, [pc, #460]	; 11760 <print_schema@@Base+0x2a4>
   11590:	mov	r2, #215	; 0xd7
   11594:	ldr	r1, [pc, #440]	; 11754 <print_schema@@Base+0x298>
   11598:	ldr	r0, [pc, #452]	; 11764 <print_schema@@Base+0x2a8>
   1159c:	bl	10958 <__assert_fail@plt>
   115a0:	mov	r0, #93	; 0x5d
   115a4:	bl	10928 <putchar@plt>
   115a8:	ldr	r3, [r7]
   115ac:	sub	r3, r7, r3
   115b0:	ldrh	r2, [r3]
   115b4:	cmp	r2, #7
   115b8:	bls	115f0 <print_schema@@Base+0x134>
   115bc:	ldrh	r3, [r3, #6]
   115c0:	cmp	r3, #0
   115c4:	beq	115f0 <print_schema@@Base+0x134>
   115c8:	add	r5, r7, r3
   115cc:	ldr	r3, [r7, r3]
   115d0:	add	r3, r3, #4
   115d4:	add	r5, r5, r3
   115d8:	ldr	r0, [pc, #392]	; 11768 <print_schema@@Base+0x2ac>
   115dc:	bl	1088c <printf@plt>
   115e0:	mov	r6, r5
   115e4:	mov	r4, #0
   115e8:	mov	r8, #44	; 0x2c
   115ec:	b	11628 <print_schema@@Base+0x16c>
   115f0:	ldr	r3, [pc, #372]	; 1176c <print_schema@@Base+0x2b0>
   115f4:	mov	r2, #238	; 0xee
   115f8:	ldr	r1, [pc, #340]	; 11754 <print_schema@@Base+0x298>
   115fc:	ldr	r0, [pc, #344]	; 1175c <print_schema@@Base+0x2a0>
   11600:	bl	10958 <__assert_fail@plt>
   11604:	mov	r3, r6
   11608:	ldr	r2, [r5, #-4]
   1160c:	cmp	r4, r2
   11610:	bcs	11650 <print_schema@@Base+0x194>
   11614:	add	r6, r6, #4
   11618:	ldr	r0, [r3]
   1161c:	add	r0, r3, r0
   11620:	bl	111dc <print_enum@@Base>
   11624:	add	r4, r4, #1
   11628:	cmp	r5, #0
   1162c:	beq	11664 <print_schema@@Base+0x1a8>
   11630:	ldr	r3, [r5, #-4]
   11634:	cmp	r4, r3
   11638:	bcs	11664 <print_schema@@Base+0x1a8>
   1163c:	cmp	r4, #0
   11640:	beq	11604 <print_schema@@Base+0x148>
   11644:	mov	r0, r8
   11648:	bl	10928 <putchar@plt>
   1164c:	b	11604 <print_schema@@Base+0x148>
   11650:	ldr	r3, [pc, #280]	; 11770 <print_schema@@Base+0x2b4>
   11654:	mov	r2, #174	; 0xae
   11658:	ldr	r1, [pc, #244]	; 11754 <print_schema@@Base+0x298>
   1165c:	ldr	r0, [pc, #256]	; 11764 <print_schema@@Base+0x2a8>
   11660:	bl	10958 <__assert_fail@plt>
   11664:	mov	r0, #93	; 0x5d
   11668:	bl	10928 <putchar@plt>
   1166c:	ldr	r3, [r7]
   11670:	sub	r3, r7, r3
   11674:	ldrh	r2, [r3]
   11678:	cmp	r2, #9
   1167c:	bls	1168c <print_schema@@Base+0x1d0>
   11680:	ldrh	r3, [r3, #8]
   11684:	cmp	r3, #0
   11688:	bne	11714 <print_schema@@Base+0x258>
   1168c:	ldr	r3, [r7]
   11690:	sub	r3, r7, r3
   11694:	ldrh	r2, [r3]
   11698:	cmp	r2, #11
   1169c:	bls	116ac <print_schema@@Base+0x1f0>
   116a0:	ldrh	r3, [r3, #10]
   116a4:	cmp	r3, #0
   116a8:	bne	11730 <print_schema@@Base+0x274>
   116ac:	ldr	r3, [r7]
   116b0:	sub	r3, r7, r3
   116b4:	ldrh	r2, [r3]
   116b8:	cmp	r2, #13
   116bc:	bls	11708 <print_schema@@Base+0x24c>
   116c0:	ldrh	r3, [r3, #12]
   116c4:	cmp	r3, #0
   116c8:	beq	11708 <print_schema@@Base+0x24c>
   116cc:	ldr	r0, [pc, #160]	; 11774 <print_schema@@Base+0x2b8>
   116d0:	bl	1088c <printf@plt>
   116d4:	ldr	r3, [r7]
   116d8:	sub	r3, r7, r3
   116dc:	ldrh	r2, [r3]
   116e0:	cmp	r2, #13
   116e4:	movls	r0, #0
   116e8:	bls	11704 <print_schema@@Base+0x248>
   116ec:	ldrh	r3, [r3, #12]
   116f0:	cmp	r3, #0
   116f4:	addne	r0, r7, r3
   116f8:	ldrne	r3, [r7, r3]
   116fc:	addne	r0, r0, r3
   11700:	moveq	r0, #0
   11704:	bl	10df4 <print_object@@Base>
   11708:	ldr	r0, [pc, #104]	; 11778 <print_schema@@Base+0x2bc>
   1170c:	bl	108e0 <puts@plt>
   11710:	pop	{r4, r5, r6, r7, r8, pc}
   11714:	add	r1, r7, r3
   11718:	ldr	r3, [r7, r3]
   1171c:	add	r3, r3, #4
   11720:	add	r1, r1, r3
   11724:	ldr	r0, [pc, #80]	; 1177c <print_schema@@Base+0x2c0>
   11728:	bl	1088c <printf@plt>
   1172c:	b	1168c <print_schema@@Base+0x1d0>
   11730:	add	r1, r7, r3
   11734:	ldr	r3, [r7, r3]
   11738:	add	r3, r3, #4
   1173c:	add	r1, r1, r3
   11740:	ldr	r0, [pc, #56]	; 11780 <print_schema@@Base+0x2c4>
   11744:	bl	1088c <printf@plt>
   11748:	b	116ac <print_schema@@Base+0x1f0>
   1174c:	andeq	r1, r1, ip, lsr #28
   11750:	andeq	r1, r1, r8, lsl fp
   11754:	andeq	r1, r1, r0, lsl #24
   11758:	andeq	r1, r1, r0, ror #24
   1175c:	andeq	r1, r1, r8, asr #25
   11760:	andeq	r1, r1, r4, lsr fp
   11764:	andeq	r1, r1, r8, lsl #26
   11768:	andeq	r1, r1, r8, lsr lr
   1176c:	andeq	r1, r1, r0, asr fp
   11770:	andeq	r1, r1, r8, ror #22
   11774:	andeq	r1, r1, ip, ror #28
   11778:	andeq	r1, r1, ip, ror lr
   1177c:	andeq	r1, r1, r4, asr #28
   11780:	andeq	r1, r1, r8, asr lr

00011784 <load_and_dump_schema@@Base>:
   11784:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11788:	mov	r9, r0
   1178c:	ldr	r1, [pc, #376]	; 1190c <load_and_dump_schema@@Base+0x188>
   11790:	bl	10898 <fopen@plt>
   11794:	subs	r6, r0, #0
   11798:	beq	118f0 <load_and_dump_schema@@Base+0x16c>
   1179c:	mov	r2, #2
   117a0:	mov	r1, #0
   117a4:	mov	r0, r6
   117a8:	bl	10940 <fseek@plt>
   117ac:	mov	r0, r6
   117b0:	bl	108b0 <ftell@plt>
   117b4:	mov	r7, r0
   117b8:	ldr	r3, [pc, #336]	; 11910 <load_and_dump_schema@@Base+0x18c>
   117bc:	cmp	r0, r3
   117c0:	bhi	118d4 <load_and_dump_schema@@Base+0x150>
   117c4:	mov	r0, r6
   117c8:	bl	108bc <rewind@plt>
   117cc:	cmp	r7, #0
   117d0:	movne	r0, r7
   117d4:	moveq	r0, #1
   117d8:	bl	108ec <malloc@plt>
   117dc:	subs	r5, r0, #0
   117e0:	beq	118d8 <load_and_dump_schema@@Base+0x154>
   117e4:	mov	r4, #0
   117e8:	mov	r8, #1
   117ec:	b	117f4 <load_and_dump_schema@@Base+0x70>
   117f0:	add	r4, r4, r0
   117f4:	mov	r3, r6
   117f8:	sub	r2, r7, r4
   117fc:	mov	r1, r8
   11800:	add	r0, r5, r4
   11804:	bl	108d4 <fread@plt>
   11808:	cmp	r0, #0
   1180c:	bne	117f0 <load_and_dump_schema@@Base+0x6c>
   11810:	cmp	r7, r4
   11814:	bne	118d8 <load_and_dump_schema@@Base+0x154>
   11818:	mov	r0, r6
   1181c:	bl	10934 <fclose@plt>
   11820:	cmp	r4, #11
   11824:	bls	11860 <load_and_dump_schema@@Base+0xdc>
   11828:	ldr	r3, [r5, #4]
   1182c:	ldr	r2, [pc, #224]	; 11914 <load_and_dump_schema@@Base+0x190>
   11830:	cmp	r3, r2
   11834:	bne	1187c <load_and_dump_schema@@Base+0xf8>
   11838:	ldr	r4, [r5]
   1183c:	adds	r4, r5, r4
   11840:	beq	1187c <load_and_dump_schema@@Base+0xf8>
   11844:	mov	r0, r4
   11848:	bl	114bc <print_schema@@Base>
   1184c:	mov	r4, #0
   11850:	mov	r0, r5
   11854:	bl	108a4 <free@plt>
   11858:	mov	r0, r4
   1185c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11860:	mov	r2, r9
   11864:	ldr	r1, [pc, #172]	; 11918 <load_and_dump_schema@@Base+0x194>
   11868:	ldr	r3, [pc, #172]	; 1191c <load_and_dump_schema@@Base+0x198>
   1186c:	ldr	r0, [r3]
   11870:	bl	1091c <fprintf@plt>
   11874:	mvn	r4, #0
   11878:	b	11850 <load_and_dump_schema@@Base+0xcc>
   1187c:	ldr	r1, [r5, #8]
   11880:	ldr	r2, [pc, #140]	; 11914 <load_and_dump_schema@@Base+0x190>
   11884:	cmp	r1, r2
   11888:	bne	118b4 <load_and_dump_schema@@Base+0x130>
   1188c:	add	r3, r3, #4
   11890:	adds	r4, r5, r3
   11894:	beq	118b4 <load_and_dump_schema@@Base+0x130>
   11898:	ldr	r3, [pc, #124]	; 1191c <load_and_dump_schema@@Base+0x198>
   1189c:	ldr	r3, [r3]
   118a0:	mov	r2, #40	; 0x28
   118a4:	mov	r1, #1
   118a8:	ldr	r0, [pc, #112]	; 11920 <load_and_dump_schema@@Base+0x19c>
   118ac:	bl	108c8 <fwrite@plt>
   118b0:	b	11844 <load_and_dump_schema@@Base+0xc0>
   118b4:	ldr	r3, [pc, #96]	; 1191c <load_and_dump_schema@@Base+0x198>
   118b8:	ldr	r3, [r3]
   118bc:	mov	r2, #27
   118c0:	mov	r1, #1
   118c4:	ldr	r0, [pc, #88]	; 11924 <load_and_dump_schema@@Base+0x1a0>
   118c8:	bl	108c8 <fwrite@plt>
   118cc:	mvn	r4, #0
   118d0:	b	11850 <load_and_dump_schema@@Base+0xcc>
   118d4:	mov	r5, #0
   118d8:	mov	r0, r6
   118dc:	bl	10934 <fclose@plt>
   118e0:	cmp	r5, #0
   118e4:	beq	118f0 <load_and_dump_schema@@Base+0x16c>
   118e8:	mov	r0, r5
   118ec:	bl	108a4 <free@plt>
   118f0:	mov	r2, r9
   118f4:	ldr	r1, [pc, #44]	; 11928 <load_and_dump_schema@@Base+0x1a4>
   118f8:	ldr	r3, [pc, #28]	; 1191c <load_and_dump_schema@@Base+0x198>
   118fc:	ldr	r0, [r3]
   11900:	bl	1091c <fprintf@plt>
   11904:	mvn	r4, #0
   11908:	b	11858 <load_and_dump_schema@@Base+0xd4>
   1190c:	andeq	r1, r1, r0, lsl #29
   11910:	andeq	r2, r0, r0, lsl r7
   11914:	movtpl	r4, #9794	; 0x2642
   11918:	andeq	r1, r1, r4, lsl #29
   1191c:	andeq	r3, r2, r0, rrx
   11920:	andeq	r1, r1, r4, lsr #29
   11924:	ldrdeq	r1, [r1], -r0
   11928:	andeq	r1, r1, ip, ror #29

0001192c <main@@Base>:
   1192c:	push	{r4, lr}
   11930:	cmp	r0, #2
   11934:	bne	11944 <main@@Base+0x18>
   11938:	ldr	r0, [r1, #4]
   1193c:	bl	11784 <load_and_dump_schema@@Base>
   11940:	pop	{r4, pc}
   11944:	ldr	r4, [pc, #64]	; 1198c <main@@Base+0x60>
   11948:	ldr	r3, [r4]
   1194c:	mov	r2, #28
   11950:	mov	r1, #1
   11954:	ldr	r0, [pc, #52]	; 11990 <main@@Base+0x64>
   11958:	bl	108c8 <fwrite@plt>
   1195c:	ldr	r3, [r4]
   11960:	mov	r2, #74	; 0x4a
   11964:	mov	r1, #1
   11968:	ldr	r0, [pc, #36]	; 11994 <main@@Base+0x68>
   1196c:	bl	108c8 <fwrite@plt>
   11970:	ldr	r3, [r4]
   11974:	mov	r2, #180	; 0xb4
   11978:	mov	r1, #1
   1197c:	ldr	r0, [pc, #20]	; 11998 <main@@Base+0x6c>
   11980:	bl	108c8 <fwrite@plt>
   11984:	mvn	r0, #0
   11988:	bl	10910 <exit@plt>
   1198c:	andeq	r3, r2, r0, rrx
   11990:	andeq	r1, r1, r8, lsl pc
   11994:	andeq	r1, r1, r8, lsr pc
   11998:	andeq	r1, r1, r4, lsl #31

0001199c <__libc_csu_init@@Base>:
   1199c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119a0:	mov	r7, r0
   119a4:	ldr	r6, [pc, #72]	; 119f4 <__libc_csu_init@@Base+0x58>
   119a8:	ldr	r5, [pc, #72]	; 119f8 <__libc_csu_init@@Base+0x5c>
   119ac:	add	r6, pc, r6
   119b0:	add	r5, pc, r5
   119b4:	sub	r6, r6, r5
   119b8:	mov	r8, r1
   119bc:	mov	r9, r2
   119c0:	bl	1086c <printf@plt-0x20>
   119c4:	asrs	r6, r6, #2
   119c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119cc:	mov	r4, #0
   119d0:	add	r4, r4, #1
   119d4:	ldr	r3, [r5], #4
   119d8:	mov	r2, r9
   119dc:	mov	r1, r8
   119e0:	mov	r0, r7
   119e4:	blx	r3
   119e8:	cmp	r6, r4
   119ec:	bne	119d0 <__libc_csu_init@@Base+0x34>
   119f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f4:	andeq	r1, r1, ip, asr r5
   119f8:	andeq	r1, r1, r4, asr r5

000119fc <__libc_csu_fini@@Base>:
   119fc:	bx	lr

Disassembly of section .fini:

00011a00 <.fini>:
   11a00:	push	{r3, lr}
   11a04:	pop	{r3, pc}
