
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r3, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #77824	; 0x13000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #77824	; 0x13000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #77824	; 0x13000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #77824	; 0x13000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #77824	; 0x13000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #77824	; 0x13000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #77824	; 0x13000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #77824	; 0x13000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #77824	; 0x13000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #77824	; 0x13000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #77824	; 0x13000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #77824	; 0x13000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #77824	; 0x13000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #77824	; 0x13000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	andeq	r4, r1, ip, lsl #24
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r4, r1, ip, lsr #23
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r3, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r5, r2, r0, asr r0
   1200c:	andeq	r5, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r5, r2, r0, asr r0
   12044:	andeq	r5, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r5, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r7, #0
   12088:	str	r7, [sp, #12]
   1208c:	bl	121b0 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	movw	r1, #8604	; 0x219c
   120a4:	add	r2, sp, #12
   120a8:	mov	r0, r4
   120ac:	mvn	r3, #0
   120b0:	movt	r1, #1
   120b4:	bl	1288c <table_register_callback@@Base>
   120b8:	add	r5, sp, #6
   120bc:	mov	r6, #0
   120c0:	mov	r0, r4
   120c4:	mov	r1, r5
   120c8:	mov	r2, r6
   120cc:	strh	r7, [sp, #6]
   120d0:	strb	r6, [sp, #6]
   120d4:	bl	12c60 <table_add_column@@Base>
   120d8:	add	r6, r6, #1
   120dc:	cmp	r6, #24
   120e0:	bne	120c0 <main@@Base+0x48>
   120e4:	mov	r0, r4
   120e8:	bl	12bd4 <table_get_column_length@@Base>
   120ec:	mov	r8, r0
   120f0:	mov	r9, #0
   120f4:	mov	r6, #0
   120f8:	mov	r0, #64	; 0x40
   120fc:	bl	11f1c <malloc@plt>
   12100:	mov	r7, r0
   12104:	mov	r5, #0
   12108:	bl	11f70 <rand@plt>
   1210c:	asr	r1, r0, #31
   12110:	add	r1, r0, r1, lsr #25
   12114:	and	r1, r1, #128	; 0x80
   12118:	sub	r0, r0, r1
   1211c:	strb	r0, [r7, -r5]
   12120:	sub	r5, r5, #1
   12124:	cmn	r5, #63	; 0x3f
   12128:	bne	12108 <main@@Base+0x90>
   1212c:	mov	r0, r4
   12130:	strb	r9, [r7, #63]	; 0x3f
   12134:	bl	13894 <table_add_row@@Base>
   12138:	cmp	r8, #1
   1213c:	blt	12174 <main@@Base+0xfc>
   12140:	mov	r5, #0
   12144:	mov	r0, r4
   12148:	mov	r1, r5
   1214c:	bl	12c4c <table_get_column_data_type@@Base>
   12150:	str	r0, [sp]
   12154:	mov	r0, r4
   12158:	mov	r1, r6
   1215c:	mov	r2, r5
   12160:	mov	r3, r7
   12164:	bl	13a54 <table_set@@Base>
   12168:	add	r5, r5, #1
   1216c:	cmp	r8, r5
   12170:	bne	12144 <main@@Base+0xcc>
   12174:	mov	r0, r7
   12178:	bl	11eec <free@plt>
   1217c:	add	r6, r6, #1
   12180:	cmp	r6, #500	; 0x1f4
   12184:	bne	120f8 <main@@Base+0x80>
   12188:	mov	r0, r4
   1218c:	bl	12240 <table_delete@@Base>
   12190:	mov	r0, #0
   12194:	sub	sp, fp, #24
   12198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1219c:	ldr	r0, [sp]
   121a0:	ldr	r1, [r0]
   121a4:	orr	r1, r1, r3
   121a8:	str	r1, [r0]
   121ac:	bx	lr

000121b0 <table_new@@Base>:
   121b0:	push	{fp, lr}
   121b4:	mov	fp, sp
   121b8:	mov	r0, #56	; 0x38
   121bc:	bl	11f1c <malloc@plt>
   121c0:	vmov.i32	q8, #0	; 0x00000000
   121c4:	mov	r1, #0
   121c8:	mov	r2, #10
   121cc:	mov	r3, #20
   121d0:	str	r1, [r0]
   121d4:	stmib	r0, {r1, r2}
   121d8:	str	r1, [r0, #12]
   121dc:	str	r1, [r0, #16]
   121e0:	str	r1, [r0, #20]
   121e4:	str	r3, [r0, #24]
   121e8:	str	r1, [r0, #28]
   121ec:	str	r2, [r0, #48]	; 0x30
   121f0:	str	r1, [r0, #52]	; 0x34
   121f4:	add	r1, r0, #32
   121f8:	vst1.32	{d16-d17}, [r1]
   121fc:	pop	{fp, pc}

00012200 <table_init@@Base>:
   12200:	vmov.i32	q8, #0	; 0x00000000
   12204:	mov	r1, #0
   12208:	mov	r2, #10
   1220c:	mov	r3, #20
   12210:	str	r1, [r0]
   12214:	stmib	r0, {r1, r2}
   12218:	str	r1, [r0, #12]
   1221c:	str	r1, [r0, #16]
   12220:	str	r1, [r0, #20]
   12224:	str	r3, [r0, #24]
   12228:	str	r1, [r0, #28]
   1222c:	str	r2, [r0, #48]	; 0x30
   12230:	str	r1, [r0, #52]	; 0x34
   12234:	add	r0, r0, #32
   12238:	vst1.32	{d16-d17}, [r0]
   1223c:	bx	lr

00012240 <table_delete@@Base>:
   12240:	push	{r4, sl, fp, lr}
   12244:	add	fp, sp, #8
   12248:	mov	r4, r0
   1224c:	bl	1225c <table_destroy@@Base>
   12250:	mov	r0, r4
   12254:	pop	{r4, sl, fp, lr}
   12258:	b	11eec <free@plt>

0001225c <table_destroy@@Base>:
   1225c:	cmp	r0, #0
   12260:	bxeq	lr
   12264:	push	{r4, r5, r6, sl, fp, lr}
   12268:	add	fp, sp, #16
   1226c:	mvn	r1, #0
   12270:	mvn	r2, #0
   12274:	mov	r3, #64	; 0x40
   12278:	mov	r4, r0
   1227c:	bl	12ae0 <table_notify@@Base>
   12280:	mov	r0, r4
   12284:	bl	1388c <table_get_row_length@@Base>
   12288:	cmp	r0, #1
   1228c:	blt	122b0 <table_destroy@@Base+0x54>
   12290:	mov	r5, r0
   12294:	mov	r6, #0
   12298:	mov	r0, r4
   1229c:	mov	r1, r6
   122a0:	bl	13830 <table_row_destroy@@Base>
   122a4:	add	r6, r6, #1
   122a8:	cmp	r5, r6
   122ac:	bne	12298 <table_destroy@@Base+0x3c>
   122b0:	ldr	r0, [r4, #16]
   122b4:	cmp	r0, #0
   122b8:	beq	122c0 <table_destroy@@Base+0x64>
   122bc:	bl	11eec <free@plt>
   122c0:	mov	r0, r4
   122c4:	bl	12bd4 <table_get_column_length@@Base>
   122c8:	cmp	r0, #1
   122cc:	blt	122f0 <table_destroy@@Base+0x94>
   122d0:	mov	r5, r0
   122d4:	mov	r6, #0
   122d8:	mov	r0, r4
   122dc:	mov	r1, r6
   122e0:	bl	12bbc <table_column_destroy@@Base>
   122e4:	add	r6, r6, #1
   122e8:	cmp	r5, r6
   122ec:	bne	122d8 <table_destroy@@Base+0x7c>
   122f0:	ldr	r0, [r4]
   122f4:	cmp	r0, #0
   122f8:	beq	12300 <table_destroy@@Base+0xa4>
   122fc:	bl	11eec <free@plt>
   12300:	ldr	r0, [r4, #36]	; 0x24
   12304:	cmp	r0, #0
   12308:	beq	12310 <table_destroy@@Base+0xb4>
   1230c:	bl	11eec <free@plt>
   12310:	ldr	r0, [r4, #40]	; 0x28
   12314:	cmp	r0, #0
   12318:	beq	12320 <table_destroy@@Base+0xc4>
   1231c:	bl	11eec <free@plt>
   12320:	ldr	r0, [r4, #44]	; 0x2c
   12324:	cmp	r0, #0
   12328:	pop	{r4, r5, r6, sl, fp, lr}
   1232c:	beq	12334 <table_destroy@@Base+0xd8>
   12330:	b	11eec <free@plt>
   12334:	bx	lr

00012338 <table_dupe@@Base>:
   12338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1233c:	add	fp, sp, #28
   12340:	sub	sp, sp, #12
   12344:	mov	r4, r0
   12348:	bl	1388c <table_get_row_length@@Base>
   1234c:	mov	r8, r0
   12350:	mov	r0, r4
   12354:	bl	12bd4 <table_get_column_length@@Base>
   12358:	mov	r6, r0
   1235c:	mov	r0, #56	; 0x38
   12360:	bl	11f1c <malloc@plt>
   12364:	vmov.i32	q8, #0	; 0x00000000
   12368:	mov	sl, r0
   1236c:	mov	r5, #0
   12370:	mov	r0, #10
   12374:	mov	r1, #20
   12378:	cmp	r6, #1
   1237c:	str	r5, [sl]
   12380:	str	r5, [sl, #4]
   12384:	str	r0, [sl, #8]
   12388:	str	r5, [sl, #12]
   1238c:	str	r5, [sl, #16]
   12390:	str	r5, [sl, #20]
   12394:	str	r1, [sl, #24]
   12398:	str	r5, [sl, #28]
   1239c:	str	r0, [sl, #48]	; 0x30
   123a0:	add	r0, sl, #32
   123a4:	str	r5, [sl, #52]	; 0x34
   123a8:	vst1.32	{d16-d17}, [r0]
   123ac:	blt	123e8 <table_dupe@@Base+0xb0>
   123b0:	mov	r0, r4
   123b4:	mov	r1, r5
   123b8:	bl	12c3c <table_get_column_name@@Base>
   123bc:	mov	r7, r0
   123c0:	mov	r0, r4
   123c4:	mov	r1, r5
   123c8:	bl	12c4c <table_get_column_data_type@@Base>
   123cc:	mov	r2, r0
   123d0:	mov	r0, sl
   123d4:	mov	r1, r7
   123d8:	bl	12c60 <table_add_column@@Base>
   123dc:	add	r5, r5, #1
   123e0:	cmp	r6, r5
   123e4:	bne	123b0 <table_dupe@@Base+0x78>
   123e8:	cmp	r8, #1
   123ec:	blt	12854 <table_dupe@@Base+0x51c>
   123f0:	mov	r5, #0
   123f4:	add	r9, sp, #8
   123f8:	mov	r0, sl
   123fc:	bl	13894 <table_add_row@@Base>
   12400:	cmp	r6, #1
   12404:	blt	12848 <table_dupe@@Base+0x510>
   12408:	mov	r7, #0
   1240c:	mov	r0, r4
   12410:	mov	r1, r7
   12414:	bl	12c4c <table_get_column_data_type@@Base>
   12418:	cmp	r0, #23
   1241c:	bhi	1283c <table_dupe@@Base+0x504>
   12420:	add	r1, pc, #0
   12424:	ldr	pc, [r1, r0, lsl #2]
   12428:	andeq	r2, r1, r8, lsl #9
   1242c:			; <UNDEFINED> instruction: 0x000124b0
   12430:	ldrdeq	r2, [r1], -r8
   12434:	andeq	r2, r1, r0, lsl #10
   12438:	andeq	r2, r1, r8, lsr #10
   1243c:	andeq	r2, r1, r0, asr r5
   12440:	andeq	r2, r1, r8, ror r5
   12444:	andeq	r2, r1, r0, lsr #11
   12448:	andeq	r2, r1, r8, asr #11
   1244c:	strdeq	r2, [r1], -r0
   12450:	andeq	r2, r1, r8, lsl r6
   12454:	andeq	r2, r1, r0, asr #12
   12458:	andeq	r2, r1, r8, ror #12
   1245c:	muleq	r1, r0, r6
   12460:			; <UNDEFINED> instruction: 0x000126b8
   12464:	andeq	r2, r1, r0, ror #13
   12468:	andeq	r2, r1, r8, lsl #14
   1246c:	andeq	r2, r1, ip, lsr #14
   12470:	andeq	r2, r1, r0, asr r7
   12474:	andeq	r2, r1, r4, ror r7
   12478:	muleq	r1, ip, r7
   1247c:	andeq	r2, r1, r4, asr #15
   12480:	andeq	r2, r1, ip, ror #15
   12484:	andeq	r2, r1, r4, lsl r8
   12488:	mov	r0, r4
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	135e0 <table_get_int@@Base>
   12498:	mov	r3, r0
   1249c:	mov	r0, sl
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	13d90 <table_set_int@@Base>
   124ac:	b	1283c <table_dupe@@Base+0x504>
   124b0:	mov	r0, r4
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	135f8 <table_get_uint@@Base>
   124c0:	mov	r3, r0
   124c4:	mov	r0, sl
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	13db8 <table_set_uint@@Base>
   124d4:	b	1283c <table_dupe@@Base+0x504>
   124d8:	mov	r0, r4
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	13610 <table_get_int8@@Base>
   124e8:	mov	r3, r0
   124ec:	mov	r0, sl
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13de0 <table_set_int8@@Base>
   124fc:	b	1283c <table_dupe@@Base+0x504>
   12500:	mov	r0, r4
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	13628 <table_get_uint8@@Base>
   12510:	mov	r3, r0
   12514:	mov	r0, sl
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	13e08 <table_set_uint8@@Base>
   12524:	b	1283c <table_dupe@@Base+0x504>
   12528:	mov	r0, r4
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	13640 <table_get_int16@@Base>
   12538:	mov	r3, r0
   1253c:	mov	r0, sl
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	13e30 <table_set_int16@@Base>
   1254c:	b	1283c <table_dupe@@Base+0x504>
   12550:	mov	r0, r4
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	13658 <table_get_uint16@@Base>
   12560:	mov	r3, r0
   12564:	mov	r0, sl
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	13e58 <table_set_uint16@@Base>
   12574:	b	1283c <table_dupe@@Base+0x504>
   12578:	mov	r0, r4
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	13670 <table_get_int32@@Base>
   12588:	mov	r3, r0
   1258c:	mov	r0, sl
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	13e80 <table_set_int32@@Base>
   1259c:	b	1283c <table_dupe@@Base+0x504>
   125a0:	mov	r0, r4
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	13688 <table_get_uint32@@Base>
   125b0:	mov	r3, r0
   125b4:	mov	r0, sl
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	13ea8 <table_set_uint32@@Base>
   125c4:	b	1283c <table_dupe@@Base+0x504>
   125c8:	mov	r0, r4
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	136a0 <table_get_int64@@Base>
   125d8:	stm	sp, {r0, r1}
   125dc:	mov	r0, sl
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	13ed0 <table_set_int64@@Base>
   125ec:	b	1283c <table_dupe@@Base+0x504>
   125f0:	mov	r0, r4
   125f4:	mov	r1, r5
   125f8:	mov	r2, r7
   125fc:	bl	136b8 <table_get_uint64@@Base>
   12600:	stm	sp, {r0, r1}
   12604:	mov	r0, sl
   12608:	mov	r1, r5
   1260c:	mov	r2, r7
   12610:	bl	13f04 <table_set_uint64@@Base>
   12614:	b	1283c <table_dupe@@Base+0x504>
   12618:	mov	r0, r4
   1261c:	mov	r1, r5
   12620:	mov	r2, r7
   12624:	bl	136d0 <table_get_short@@Base>
   12628:	mov	r3, r0
   1262c:	mov	r0, sl
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13f38 <table_set_short@@Base>
   1263c:	b	1283c <table_dupe@@Base+0x504>
   12640:	mov	r0, r4
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	136e8 <table_get_ushort@@Base>
   12650:	mov	r3, r0
   12654:	mov	r0, sl
   12658:	mov	r1, r5
   1265c:	mov	r2, r7
   12660:	bl	13f60 <table_set_ushort@@Base>
   12664:	b	1283c <table_dupe@@Base+0x504>
   12668:	mov	r0, r4
   1266c:	mov	r1, r5
   12670:	mov	r2, r7
   12674:	bl	13700 <table_get_long@@Base>
   12678:	mov	r3, r0
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13f88 <table_set_long@@Base>
   1268c:	b	1283c <table_dupe@@Base+0x504>
   12690:	mov	r0, r4
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	13718 <table_get_ulong@@Base>
   126a0:	mov	r3, r0
   126a4:	mov	r0, sl
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13fb0 <table_set_ulong@@Base>
   126b4:	b	1283c <table_dupe@@Base+0x504>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	13730 <table_get_llong@@Base>
   126c8:	stm	sp, {r0, r1}
   126cc:	mov	r0, sl
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	13fd8 <table_set_llong@@Base>
   126dc:	b	1283c <table_dupe@@Base+0x504>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	13748 <table_get_ullong@@Base>
   126f0:	stm	sp, {r0, r1}
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	1400c <table_set_ullong@@Base>
   12704:	b	1283c <table_dupe@@Base+0x504>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	13760 <table_get_float@@Base>
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	14040 <table_set_float@@Base>
   12728:	b	1283c <table_dupe@@Base+0x504>
   1272c:	mov	r0, r4
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	13778 <table_get_double@@Base>
   1273c:	mov	r0, sl
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	14068 <table_set_double@@Base>
   1274c:	b	1283c <table_dupe@@Base+0x504>
   12750:	mov	r0, r4
   12754:	mov	r1, r5
   12758:	mov	r2, r7
   1275c:	bl	13790 <table_get_ldouble@@Base>
   12760:	mov	r0, sl
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	14090 <table_set_ldouble@@Base>
   12770:	b	1283c <table_dupe@@Base+0x504>
   12774:	mov	r0, r4
   12778:	mov	r1, r5
   1277c:	mov	r2, r7
   12780:	bl	137a8 <table_get_char@@Base>
   12784:	mov	r3, r0
   12788:	mov	r0, sl
   1278c:	mov	r1, r5
   12790:	mov	r2, r7
   12794:	bl	140d8 <table_set_char@@Base>
   12798:	b	1283c <table_dupe@@Base+0x504>
   1279c:	mov	r0, r4
   127a0:	mov	r1, r5
   127a4:	mov	r2, r7
   127a8:	bl	137c0 <table_get_uchar@@Base>
   127ac:	mov	r3, r0
   127b0:	mov	r0, sl
   127b4:	mov	r1, r5
   127b8:	mov	r2, r7
   127bc:	bl	14100 <table_set_uchar@@Base>
   127c0:	b	1283c <table_dupe@@Base+0x504>
   127c4:	mov	r0, r4
   127c8:	mov	r1, r5
   127cc:	mov	r2, r7
   127d0:	bl	137d8 <table_get_string@@Base>
   127d4:	mov	r3, r0
   127d8:	mov	r0, sl
   127dc:	mov	r1, r5
   127e0:	mov	r2, r7
   127e4:	bl	140b8 <table_set_string@@Base>
   127e8:	b	1283c <table_dupe@@Base+0x504>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	mov	r2, r7
   127f8:	bl	135c8 <table_get_bool@@Base>
   127fc:	mov	r3, r0
   12800:	mov	r0, sl
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	13d68 <table_set_bool@@Base>
   12810:	b	1283c <table_dupe@@Base+0x504>
   12814:	mov	r0, r4
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	137ec <table_get_ptr@@Base>
   12824:	str	r0, [sp, #8]
   12828:	mov	r0, sl
   1282c:	mov	r1, r5
   12830:	mov	r2, r7
   12834:	mov	r3, r9
   12838:	bl	14128 <table_set_ptr@@Base>
   1283c:	add	r7, r7, #1
   12840:	cmp	r6, r7
   12844:	bne	1240c <table_dupe@@Base+0xd4>
   12848:	add	r5, r5, #1
   1284c:	cmp	r5, r8
   12850:	bne	123f8 <table_dupe@@Base+0xc0>
   12854:	mov	r0, sl
   12858:	sub	sp, fp, #28
   1285c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012860 <table_get_major_version@@Base>:
   12860:	mov	r0, #0
   12864:	bx	lr

00012868 <table_get_minor_version@@Base>:
   12868:	mov	r0, #0
   1286c:	bx	lr

00012870 <table_get_patch_version@@Base>:
   12870:	mov	r0, #0
   12874:	bx	lr

00012878 <table_get_version@@Base>:
   12878:	movw	r0, #19628	; 0x4cac
   1287c:	movt	r0, #1
   12880:	bx	lr

00012884 <table_get_callback_length@@Base>:
   12884:	ldr	r0, [r0, #32]
   12888:	bx	lr

0001288c <table_register_callback@@Base>:
   1288c:	push	{r4, r5, r6, r7, fp, lr}
   12890:	add	fp, sp, #16
   12894:	mov	r5, r0
   12898:	ldr	r0, [r0, #32]
   1289c:	mov	r4, r3
   128a0:	mov	r6, r2
   128a4:	mov	r7, r1
   128a8:	cmp	r0, #1
   128ac:	blt	128e0 <table_register_callback@@Base+0x54>
   128b0:	ldr	r2, [r5, #36]	; 0x24
   128b4:	mov	r1, #0
   128b8:	ldr	r3, [r2, r1, lsl #2]
   128bc:	cmp	r3, r7
   128c0:	bne	128d4 <table_register_callback@@Base+0x48>
   128c4:	ldr	r3, [r5, #40]	; 0x28
   128c8:	ldr	r3, [r3, r1, lsl #2]
   128cc:	cmp	r3, r6
   128d0:	beq	12964 <table_register_callback@@Base+0xd8>
   128d4:	add	r1, r1, #1
   128d8:	cmp	r0, r1
   128dc:	bne	128b8 <table_register_callback@@Base+0x2c>
   128e0:	ldr	r1, [r5, #48]	; 0x30
   128e4:	udiv	r2, r0, r1
   128e8:	mls	r2, r2, r1, r0
   128ec:	cmp	r2, #0
   128f0:	bne	1293c <table_register_callback@@Base+0xb0>
   128f4:	ldr	r2, [r5, #52]	; 0x34
   128f8:	ldr	r0, [r5, #36]	; 0x24
   128fc:	add	r1, r2, r1
   12900:	str	r1, [r5, #52]	; 0x34
   12904:	lsl	r1, r1, #2
   12908:	bl	11f04 <realloc@plt>
   1290c:	str	r0, [r5, #36]	; 0x24
   12910:	ldr	r1, [r5, #52]	; 0x34
   12914:	ldr	r0, [r5, #40]	; 0x28
   12918:	lsl	r1, r1, #2
   1291c:	bl	11f04 <realloc@plt>
   12920:	str	r0, [r5, #40]	; 0x28
   12924:	ldr	r1, [r5, #52]	; 0x34
   12928:	ldr	r0, [r5, #44]	; 0x2c
   1292c:	lsl	r1, r1, #2
   12930:	bl	11f04 <realloc@plt>
   12934:	str	r0, [r5, #44]	; 0x2c
   12938:	ldr	r0, [r5, #32]
   1293c:	ldr	r1, [r5, #36]	; 0x24
   12940:	str	r7, [r1, r0, lsl #2]
   12944:	ldr	r1, [r5, #40]	; 0x28
   12948:	str	r6, [r1, r0, lsl #2]
   1294c:	ldr	r1, [r5, #44]	; 0x2c
   12950:	str	r4, [r1, r0, lsl #2]
   12954:	ldr	r0, [r5, #32]
   12958:	add	r0, r0, #1
   1295c:	str	r0, [r5, #32]
   12960:	pop	{r4, r5, r6, r7, fp, pc}
   12964:	cmp	r1, #0
   12968:	beq	128e0 <table_register_callback@@Base+0x54>
   1296c:	ldr	r0, [r5, #44]	; 0x2c
   12970:	ldr	r2, [r0, r1, lsl #2]
   12974:	orr	r2, r2, r4
   12978:	str	r2, [r0, r1, lsl #2]
   1297c:	pop	{r4, r5, r6, r7, fp, pc}

00012980 <table_unregister_callback@@Base>:
   12980:	push	{r4, r5, r6, sl, fp, lr}
   12984:	add	fp, sp, #16
   12988:	ldr	r4, [r0, #32]
   1298c:	cmp	r4, #1
   12990:	blt	129c8 <table_unregister_callback@@Base+0x48>
   12994:	ldr	r3, [r0, #36]	; 0x24
   12998:	mov	r6, r0
   1299c:	mov	r0, #0
   129a0:	ldr	r5, [r3, r0, lsl #2]
   129a4:	cmp	r5, r1
   129a8:	bne	129bc <table_unregister_callback@@Base+0x3c>
   129ac:	ldr	r5, [r6, #40]	; 0x28
   129b0:	ldr	r5, [r5, r0, lsl #2]
   129b4:	cmp	r5, r2
   129b8:	beq	129cc <table_unregister_callback@@Base+0x4c>
   129bc:	add	r0, r0, #1
   129c0:	cmp	r0, r4
   129c4:	bne	129a0 <table_unregister_callback@@Base+0x20>
   129c8:	pop	{r4, r5, r6, sl, fp, pc}
   129cc:	sub	r1, r4, #1
   129d0:	cmp	r0, r1
   129d4:	bge	12a58 <table_unregister_callback@@Base+0xd8>
   129d8:	add	r2, r0, #1
   129dc:	ldr	r1, [r3, r2, lsl #2]
   129e0:	str	r1, [r3, r0, lsl #2]
   129e4:	ldr	r1, [r6, #40]	; 0x28
   129e8:	ldr	r3, [r1, r2, lsl #2]
   129ec:	str	r3, [r1, r0, lsl #2]
   129f0:	ldr	r1, [r6, #44]	; 0x2c
   129f4:	ldr	r3, [r1, r2, lsl #2]
   129f8:	str	r3, [r1, r0, lsl #2]
   129fc:	ldr	r1, [r6, #32]
   12a00:	sub	r1, r1, #1
   12a04:	cmp	r2, r1
   12a08:	bge	12a58 <table_unregister_callback@@Base+0xd8>
   12a0c:	ldr	r1, [r6, #36]	; 0x24
   12a10:	add	r1, r1, r0, lsl #2
   12a14:	ldr	r2, [r1, #8]
   12a18:	str	r2, [r1, #4]
   12a1c:	ldr	r1, [r6, #40]	; 0x28
   12a20:	add	r1, r1, r0, lsl #2
   12a24:	ldr	r2, [r1, #8]
   12a28:	str	r2, [r1, #4]
   12a2c:	ldr	r1, [r6, #44]	; 0x2c
   12a30:	add	r1, r1, r0, lsl #2
   12a34:	ldr	r2, [r1, #8]
   12a38:	str	r2, [r1, #4]
   12a3c:	add	r2, r0, #1
   12a40:	add	r0, r0, #2
   12a44:	ldr	r1, [r6, #32]
   12a48:	sub	r1, r1, #1
   12a4c:	cmp	r0, r1
   12a50:	mov	r0, r2
   12a54:	blt	12a0c <table_unregister_callback@@Base+0x8c>
   12a58:	str	r1, [r6, #32]
   12a5c:	ldr	r2, [r6, #48]	; 0x30
   12a60:	udiv	r0, r1, r2
   12a64:	mls	r0, r0, r2, r1
   12a68:	cmp	r0, #0
   12a6c:	popne	{r4, r5, r6, sl, fp, pc}
   12a70:	ldr	r1, [r6, #52]	; 0x34
   12a74:	ldr	r0, [r6, #36]	; 0x24
   12a78:	subs	r1, r1, r2
   12a7c:	str	r1, [r6, #52]	; 0x34
   12a80:	beq	12ab8 <table_unregister_callback@@Base+0x138>
   12a84:	lsl	r1, r1, #2
   12a88:	bl	11f04 <realloc@plt>
   12a8c:	str	r0, [r6, #36]	; 0x24
   12a90:	ldr	r1, [r6, #52]	; 0x34
   12a94:	ldr	r0, [r6, #40]	; 0x28
   12a98:	lsl	r1, r1, #2
   12a9c:	bl	11f04 <realloc@plt>
   12aa0:	str	r0, [r6, #40]	; 0x28
   12aa4:	ldr	r1, [r6, #52]	; 0x34
   12aa8:	ldr	r0, [r6, #44]	; 0x2c
   12aac:	lsl	r1, r1, #2
   12ab0:	bl	11f04 <realloc@plt>
   12ab4:	b	12ad8 <table_unregister_callback@@Base+0x158>
   12ab8:	bl	11eec <free@plt>
   12abc:	ldr	r0, [r6, #40]	; 0x28
   12ac0:	bl	11eec <free@plt>
   12ac4:	ldr	r0, [r6, #44]	; 0x2c
   12ac8:	bl	11eec <free@plt>
   12acc:	mov	r0, #0
   12ad0:	str	r0, [r6, #36]	; 0x24
   12ad4:	str	r0, [r6, #40]	; 0x28
   12ad8:	str	r0, [r6, #44]	; 0x2c
   12adc:	pop	{r4, r5, r6, sl, fp, pc}

00012ae0 <table_notify@@Base>:
   12ae0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ae4:	add	fp, sp, #24
   12ae8:	sub	sp, sp, #8
   12aec:	mov	r7, r0
   12af0:	ldr	r0, [r0, #32]
   12af4:	cmp	r0, #1
   12af8:	blt	12b54 <table_notify@@Base+0x74>
   12afc:	mov	r4, r3
   12b00:	mov	r8, r2
   12b04:	mov	r9, r1
   12b08:	mov	r5, #0
   12b0c:	ldr	r1, [r7, #44]	; 0x2c
   12b10:	ldr	r1, [r1, r5, lsl #2]
   12b14:	tst	r1, r4
   12b18:	beq	12b48 <table_notify@@Base+0x68>
   12b1c:	ldr	r0, [r7, #36]	; 0x24
   12b20:	ldr	r1, [r7, #40]	; 0x28
   12b24:	mov	r2, r8
   12b28:	mov	r3, r4
   12b2c:	ldr	r6, [r0, r5, lsl #2]
   12b30:	ldr	r0, [r1, r5, lsl #2]
   12b34:	mov	r1, r9
   12b38:	str	r0, [sp]
   12b3c:	mov	r0, r7
   12b40:	blx	r6
   12b44:	ldr	r0, [r7, #32]
   12b48:	add	r5, r5, #1
   12b4c:	cmp	r5, r0
   12b50:	blt	12b0c <table_notify@@Base+0x2c>
   12b54:	sub	sp, fp, #24
   12b58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b5c <table_column_init@@Base>:
   12b5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b60:	add	fp, sp, #24
   12b64:	ldr	r7, [r0]
   12b68:	mov	r0, r2
   12b6c:	mov	r4, r3
   12b70:	mov	r5, r2
   12b74:	mov	r6, r1
   12b78:	bl	11f40 <strlen@plt>
   12b7c:	add	r0, r0, #1
   12b80:	bl	11f1c <malloc@plt>
   12b84:	ldr	r8, [fp, #8]
   12b88:	add	r6, r6, r6, lsl #1
   12b8c:	cmp	r0, #0
   12b90:	str	r0, [r7, r6, lsl #2]
   12b94:	beq	12ba0 <table_column_init@@Base+0x44>
   12b98:	mov	r1, r5
   12b9c:	bl	11f10 <strcpy@plt>
   12ba0:	add	r0, r7, r6, lsl #2
   12ba4:	stmib	r0, {r4, r8}
   12ba8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012bac <table_get_col_ptr@@Base>:
   12bac:	ldr	r0, [r0]
   12bb0:	add	r1, r1, r1, lsl #1
   12bb4:	add	r0, r0, r1, lsl #2
   12bb8:	bx	lr

00012bbc <table_column_destroy@@Base>:
   12bbc:	ldr	r0, [r0]
   12bc0:	add	r1, r1, r1, lsl #1
   12bc4:	ldr	r0, [r0, r1, lsl #2]
   12bc8:	cmp	r0, #0
   12bcc:	bxeq	lr
   12bd0:	b	11eec <free@plt>

00012bd4 <table_get_column_length@@Base>:
   12bd4:	ldr	r0, [r0, #4]
   12bd8:	bx	lr

00012bdc <table_get_column@@Base>:
   12bdc:	push	{r4, r5, r6, r7, fp, lr}
   12be0:	add	fp, sp, #16
   12be4:	ldr	r6, [r0, #4]
   12be8:	cmp	r6, #1
   12bec:	blt	12c28 <table_get_column@@Base+0x4c>
   12bf0:	ldr	r7, [r0]
   12bf4:	mov	r5, r1
   12bf8:	mov	r4, #0
   12bfc:	ldr	r0, [r7]
   12c00:	mov	r1, r5
   12c04:	bl	11ee0 <strcmp@plt>
   12c08:	cmp	r0, #0
   12c0c:	beq	12c2c <table_get_column@@Base+0x50>
   12c10:	add	r4, r4, #1
   12c14:	add	r7, r7, #12
   12c18:	cmp	r6, r4
   12c1c:	bne	12bfc <table_get_column@@Base+0x20>
   12c20:	mov	r4, r6
   12c24:	b	12c2c <table_get_column@@Base+0x50>
   12c28:	mov	r4, #0
   12c2c:	cmp	r4, r6
   12c30:	mvneq	r4, #0
   12c34:	mov	r0, r4
   12c38:	pop	{r4, r5, r6, r7, fp, pc}

00012c3c <table_get_column_name@@Base>:
   12c3c:	ldr	r0, [r0]
   12c40:	add	r1, r1, r1, lsl #1
   12c44:	ldr	r0, [r0, r1, lsl #2]
   12c48:	bx	lr

00012c4c <table_get_column_data_type@@Base>:
   12c4c:	ldr	r0, [r0]
   12c50:	add	r1, r1, r1, lsl #1
   12c54:	add	r0, r0, r1, lsl #2
   12c58:	ldr	r0, [r0, #4]
   12c5c:	bx	lr

00012c60 <table_add_column@@Base>:
   12c60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c64:	add	fp, sp, #24
   12c68:	sub	sp, sp, #8
   12c6c:	mov	r4, r0
   12c70:	mov	r8, r1
   12c74:	ldr	r0, [r0, #4]
   12c78:	mov	r9, r2
   12c7c:	ldr	r1, [r4, #8]
   12c80:	udiv	r2, r0, r1
   12c84:	mls	r0, r2, r1, r0
   12c88:	cmp	r0, #0
   12c8c:	bne	12cf8 <table_add_column@@Base+0x98>
   12c90:	ldr	r2, [r4, #12]
   12c94:	ldr	r0, [r4]
   12c98:	add	r1, r2, r1
   12c9c:	str	r1, [r4, #12]
   12ca0:	add	r1, r1, r1, lsl #1
   12ca4:	lsl	r1, r1, #2
   12ca8:	bl	11f04 <realloc@plt>
   12cac:	str	r0, [r4]
   12cb0:	mov	r0, r4
   12cb4:	bl	1388c <table_get_row_length@@Base>
   12cb8:	cmp	r0, #1
   12cbc:	blt	12cf8 <table_add_column@@Base+0x98>
   12cc0:	mov	r6, r0
   12cc4:	mov	r7, #0
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, r7
   12cd0:	bl	13824 <table_get_row_ptr@@Base>
   12cd4:	ldr	r1, [r4, #12]
   12cd8:	mov	r5, r0
   12cdc:	ldr	r0, [r0]
   12ce0:	lsl	r1, r1, #2
   12ce4:	bl	11f04 <realloc@plt>
   12ce8:	add	r7, r7, #1
   12cec:	str	r0, [r5]
   12cf0:	cmp	r6, r7
   12cf4:	bne	12cc8 <table_add_column@@Base+0x68>
   12cf8:	mov	r0, r4
   12cfc:	bl	1388c <table_get_row_length@@Base>
   12d00:	ldr	r6, [r4, #4]
   12d04:	mov	r7, r0
   12d08:	mov	r0, r9
   12d0c:	bl	13598 <table_get_default_compare_function_for_data_type@@Base>
   12d10:	str	r0, [sp]
   12d14:	mov	r0, r4
   12d18:	mov	r1, r6
   12d1c:	mov	r2, r8
   12d20:	mov	r3, r9
   12d24:	bl	12b5c <table_column_init@@Base>
   12d28:	cmp	r7, #1
   12d2c:	blt	12d50 <table_add_column@@Base+0xf0>
   12d30:	mov	r5, #0
   12d34:	mov	r0, r4
   12d38:	mov	r1, r5
   12d3c:	mov	r2, r6
   12d40:	bl	14148 <table_cell_init@@Base>
   12d44:	add	r5, r5, #1
   12d48:	cmp	r7, r5
   12d4c:	bne	12d34 <table_add_column@@Base+0xd4>
   12d50:	ldr	r2, [r4, #4]
   12d54:	mov	r0, r4
   12d58:	mvn	r1, #0
   12d5c:	mov	r3, #8
   12d60:	bl	12ae0 <table_notify@@Base>
   12d64:	ldr	r0, [r4, #4]
   12d68:	add	r1, r0, #1
   12d6c:	str	r1, [r4, #4]
   12d70:	sub	sp, fp, #24
   12d74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012d78 <table_remove_column@@Base>:
   12d78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d7c:	add	fp, sp, #24
   12d80:	mov	r5, r0
   12d84:	ldr	r0, [r0]
   12d88:	add	r6, r1, r1, lsl #1
   12d8c:	mov	r9, r1
   12d90:	ldr	r0, [r0, r6, lsl #2]
   12d94:	cmp	r0, #0
   12d98:	beq	12da0 <table_remove_column@@Base+0x28>
   12d9c:	bl	11eec <free@plt>
   12da0:	ldr	r0, [r5, #4]
   12da4:	sub	r4, r0, #1
   12da8:	cmp	r4, r9
   12dac:	ble	12de0 <table_remove_column@@Base+0x68>
   12db0:	mvn	r1, r9
   12db4:	add	r0, r1, r0
   12db8:	lsl	r1, r6, #2
   12dbc:	ldr	r2, [r5]
   12dc0:	subs	r0, r0, #1
   12dc4:	add	r2, r2, r1
   12dc8:	add	r1, r1, #12
   12dcc:	vldr	d16, [r2, #12]
   12dd0:	ldr	r3, [r2, #20]
   12dd4:	str	r3, [r2, #8]
   12dd8:	vstr	d16, [r2]
   12ddc:	bne	12dbc <table_remove_column@@Base+0x44>
   12de0:	mov	r0, r5
   12de4:	bl	1388c <table_get_row_length@@Base>
   12de8:	cmp	r0, #1
   12dec:	blt	12e48 <table_remove_column@@Base+0xd0>
   12df0:	mov	r6, r0
   12df4:	mov	r7, #0
   12df8:	mov	r0, r5
   12dfc:	mov	r1, r7
   12e00:	mov	r2, r9
   12e04:	bl	14184 <table_cell_destroy@@Base>
   12e08:	mov	r0, r5
   12e0c:	mov	r1, r7
   12e10:	bl	13824 <table_get_row_ptr@@Base>
   12e14:	cmp	r4, r9
   12e18:	ble	12e3c <table_remove_column@@Base+0xc4>
   12e1c:	mov	r1, r9
   12e20:	ldr	r2, [r0]
   12e24:	add	r3, r2, r1, lsl #2
   12e28:	ldr	r3, [r3, #4]
   12e2c:	str	r3, [r2, r1, lsl #2]
   12e30:	add	r1, r1, #1
   12e34:	cmp	r4, r1
   12e38:	bne	12e20 <table_remove_column@@Base+0xa8>
   12e3c:	add	r7, r7, #1
   12e40:	cmp	r7, r6
   12e44:	bne	12df8 <table_remove_column@@Base+0x80>
   12e48:	ldmib	r5, {r0, r1}
   12e4c:	sub	r0, r0, #1
   12e50:	udiv	r2, r0, r1
   12e54:	str	r0, [r5, #4]
   12e58:	mls	r0, r2, r1, r0
   12e5c:	cmp	r0, #0
   12e60:	bne	12ecc <table_remove_column@@Base+0x154>
   12e64:	ldr	r2, [r5, #12]
   12e68:	ldr	r0, [r5]
   12e6c:	sub	r1, r2, r1
   12e70:	str	r1, [r5, #12]
   12e74:	add	r1, r1, r1, lsl #1
   12e78:	lsl	r1, r1, #2
   12e7c:	bl	11f04 <realloc@plt>
   12e80:	str	r0, [r5]
   12e84:	mov	r0, r5
   12e88:	bl	1388c <table_get_row_length@@Base>
   12e8c:	cmp	r0, #1
   12e90:	blt	12ecc <table_remove_column@@Base+0x154>
   12e94:	mov	r8, r0
   12e98:	mov	r7, #0
   12e9c:	mov	r0, r5
   12ea0:	mov	r1, r7
   12ea4:	bl	13824 <table_get_row_ptr@@Base>
   12ea8:	ldr	r1, [r5, #12]
   12eac:	mov	r6, r0
   12eb0:	ldr	r0, [r0]
   12eb4:	lsl	r1, r1, #2
   12eb8:	bl	11f04 <realloc@plt>
   12ebc:	add	r7, r7, #1
   12ec0:	str	r0, [r6]
   12ec4:	cmp	r8, r7
   12ec8:	bne	12e9c <table_remove_column@@Base+0x124>
   12ecc:	mov	r0, r5
   12ed0:	mvn	r1, #0
   12ed4:	mov	r2, r9
   12ed8:	mov	r3, #16
   12edc:	bl	12ae0 <table_notify@@Base>
   12ee0:	mov	r0, #0
   12ee4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ee8 <table_get_column_compare_function@@Base>:
   12ee8:	ldr	r0, [r0]
   12eec:	add	r1, r1, r1, lsl #1
   12ef0:	add	r0, r0, r1, lsl #2
   12ef4:	ldr	r0, [r0, #8]
   12ef8:	bx	lr

00012efc <table_set_column_compare_function@@Base>:
   12efc:	ldr	r0, [r0]
   12f00:	add	r1, r1, r1, lsl #1
   12f04:	add	r0, r0, r1, lsl #2
   12f08:	str	r2, [r0, #8]
   12f0c:	bx	lr

00012f10 <table_compare_bool@@Base>:
   12f10:	cmp	r0, #0
   12f14:	beq	12f3c <table_compare_bool@@Base+0x2c>
   12f18:	cmp	r1, #0
   12f1c:	beq	12f48 <table_compare_bool@@Base+0x38>
   12f20:	ldrb	r2, [r1]
   12f24:	ldrb	r0, [r0]
   12f28:	mov	r1, #0
   12f2c:	cmp	r0, r2
   12f30:	mvncc	r1, #0
   12f34:	movwhi	r1, #1
   12f38:	b	12f4c <table_compare_bool@@Base+0x3c>
   12f3c:	cmp	r1, #0
   12f40:	mvnne	r1, #0
   12f44:	b	12f4c <table_compare_bool@@Base+0x3c>
   12f48:	mov	r1, #1
   12f4c:	mov	r0, r1
   12f50:	bx	lr

00012f54 <table_compare_int@@Base>:
   12f54:	cmp	r0, #0
   12f58:	beq	12f80 <table_compare_int@@Base+0x2c>
   12f5c:	cmp	r1, #0
   12f60:	beq	12f8c <table_compare_int@@Base+0x38>
   12f64:	ldr	r2, [r1]
   12f68:	ldr	r0, [r0]
   12f6c:	mov	r1, #0
   12f70:	cmp	r0, r2
   12f74:	mvnlt	r1, #0
   12f78:	movwgt	r1, #1
   12f7c:	b	12f90 <table_compare_int@@Base+0x3c>
   12f80:	cmp	r1, #0
   12f84:	mvnne	r1, #0
   12f88:	b	12f90 <table_compare_int@@Base+0x3c>
   12f8c:	mov	r1, #1
   12f90:	mov	r0, r1
   12f94:	bx	lr

00012f98 <table_compare_uint@@Base>:
   12f98:	cmp	r0, #0
   12f9c:	beq	12fc4 <table_compare_uint@@Base+0x2c>
   12fa0:	cmp	r1, #0
   12fa4:	beq	12fd0 <table_compare_uint@@Base+0x38>
   12fa8:	ldr	r2, [r1]
   12fac:	ldr	r0, [r0]
   12fb0:	mov	r1, #0
   12fb4:	cmp	r0, r2
   12fb8:	mvncc	r1, #0
   12fbc:	movwhi	r1, #1
   12fc0:	b	12fd4 <table_compare_uint@@Base+0x3c>
   12fc4:	cmp	r1, #0
   12fc8:	mvnne	r1, #0
   12fcc:	b	12fd4 <table_compare_uint@@Base+0x3c>
   12fd0:	mov	r1, #1
   12fd4:	mov	r0, r1
   12fd8:	bx	lr

00012fdc <table_compare_int8@@Base>:
   12fdc:	cmp	r0, #0
   12fe0:	beq	13008 <table_compare_int8@@Base+0x2c>
   12fe4:	cmp	r1, #0
   12fe8:	beq	13014 <table_compare_int8@@Base+0x38>
   12fec:	ldrsb	r2, [r1]
   12ff0:	ldrsb	r0, [r0]
   12ff4:	mov	r1, #0
   12ff8:	cmp	r0, r2
   12ffc:	mvnlt	r1, #0
   13000:	movwgt	r1, #1
   13004:	b	13018 <table_compare_int8@@Base+0x3c>
   13008:	cmp	r1, #0
   1300c:	mvnne	r1, #0
   13010:	b	13018 <table_compare_int8@@Base+0x3c>
   13014:	mov	r1, #1
   13018:	mov	r0, r1
   1301c:	bx	lr

00013020 <table_compare_uint8@@Base>:
   13020:	cmp	r0, #0
   13024:	beq	1304c <table_compare_uint8@@Base+0x2c>
   13028:	cmp	r1, #0
   1302c:	beq	13058 <table_compare_uint8@@Base+0x38>
   13030:	ldrb	r2, [r1]
   13034:	ldrb	r0, [r0]
   13038:	mov	r1, #0
   1303c:	cmp	r0, r2
   13040:	mvncc	r1, #0
   13044:	movwhi	r1, #1
   13048:	b	1305c <table_compare_uint8@@Base+0x3c>
   1304c:	cmp	r1, #0
   13050:	mvnne	r1, #0
   13054:	b	1305c <table_compare_uint8@@Base+0x3c>
   13058:	mov	r1, #1
   1305c:	mov	r0, r1
   13060:	bx	lr

00013064 <table_compare_int16@@Base>:
   13064:	cmp	r0, #0
   13068:	beq	13090 <table_compare_int16@@Base+0x2c>
   1306c:	cmp	r1, #0
   13070:	beq	1309c <table_compare_int16@@Base+0x38>
   13074:	ldrsh	r2, [r1]
   13078:	ldrsh	r0, [r0]
   1307c:	mov	r1, #0
   13080:	cmp	r0, r2
   13084:	mvnlt	r1, #0
   13088:	movwgt	r1, #1
   1308c:	b	130a0 <table_compare_int16@@Base+0x3c>
   13090:	cmp	r1, #0
   13094:	mvnne	r1, #0
   13098:	b	130a0 <table_compare_int16@@Base+0x3c>
   1309c:	mov	r1, #1
   130a0:	mov	r0, r1
   130a4:	bx	lr

000130a8 <table_compare_uint16@@Base>:
   130a8:	cmp	r0, #0
   130ac:	beq	130d4 <table_compare_uint16@@Base+0x2c>
   130b0:	cmp	r1, #0
   130b4:	beq	130e0 <table_compare_uint16@@Base+0x38>
   130b8:	ldrh	r2, [r1]
   130bc:	ldrh	r0, [r0]
   130c0:	mov	r1, #0
   130c4:	cmp	r0, r2
   130c8:	mvncc	r1, #0
   130cc:	movwhi	r1, #1
   130d0:	b	130e4 <table_compare_uint16@@Base+0x3c>
   130d4:	cmp	r1, #0
   130d8:	mvnne	r1, #0
   130dc:	b	130e4 <table_compare_uint16@@Base+0x3c>
   130e0:	mov	r1, #1
   130e4:	mov	r0, r1
   130e8:	bx	lr

000130ec <table_compare_int32@@Base>:
   130ec:	cmp	r0, #0
   130f0:	beq	13118 <table_compare_int32@@Base+0x2c>
   130f4:	cmp	r1, #0
   130f8:	beq	13124 <table_compare_int32@@Base+0x38>
   130fc:	ldr	r2, [r1]
   13100:	ldr	r0, [r0]
   13104:	mov	r1, #0
   13108:	cmp	r0, r2
   1310c:	mvnlt	r1, #0
   13110:	movwgt	r1, #1
   13114:	b	13128 <table_compare_int32@@Base+0x3c>
   13118:	cmp	r1, #0
   1311c:	mvnne	r1, #0
   13120:	b	13128 <table_compare_int32@@Base+0x3c>
   13124:	mov	r1, #1
   13128:	mov	r0, r1
   1312c:	bx	lr

00013130 <table_compare_uint32@@Base>:
   13130:	cmp	r0, #0
   13134:	beq	1315c <table_compare_uint32@@Base+0x2c>
   13138:	cmp	r1, #0
   1313c:	beq	13168 <table_compare_uint32@@Base+0x38>
   13140:	ldr	r2, [r1]
   13144:	ldr	r0, [r0]
   13148:	mov	r1, #0
   1314c:	cmp	r0, r2
   13150:	mvncc	r1, #0
   13154:	movwhi	r1, #1
   13158:	b	1316c <table_compare_uint32@@Base+0x3c>
   1315c:	cmp	r1, #0
   13160:	mvnne	r1, #0
   13164:	b	1316c <table_compare_uint32@@Base+0x3c>
   13168:	mov	r1, #1
   1316c:	mov	r0, r1
   13170:	bx	lr

00013174 <table_compare_int64@@Base>:
   13174:	cmp	r0, #0
   13178:	beq	131c0 <table_compare_int64@@Base+0x4c>
   1317c:	cmp	r1, #0
   13180:	beq	131cc <table_compare_int64@@Base+0x58>
   13184:	push	{r5, r7, fp, lr}
   13188:	add	fp, sp, #8
   1318c:	ldm	r0, {r0, r5}
   13190:	ldm	r1, {r2, r7}
   13194:	mov	r1, #0
   13198:	subs	r3, r0, r2
   1319c:	sbcs	r3, r5, r7
   131a0:	movwlt	r1, #1
   131a4:	cmp	r1, #0
   131a8:	mvnne	r1, #0
   131ac:	subs	r0, r2, r0
   131b0:	sbcs	r0, r7, r5
   131b4:	movwlt	r1, #1
   131b8:	pop	{r5, r7, fp, lr}
   131bc:	b	131d0 <table_compare_int64@@Base+0x5c>
   131c0:	cmp	r1, #0
   131c4:	mvnne	r1, #0
   131c8:	b	131d0 <table_compare_int64@@Base+0x5c>
   131cc:	mov	r1, #1
   131d0:	mov	r0, r1
   131d4:	bx	lr

000131d8 <table_compare_uint64@@Base>:
   131d8:	cmp	r0, #0
   131dc:	beq	13224 <table_compare_uint64@@Base+0x4c>
   131e0:	cmp	r1, #0
   131e4:	beq	13230 <table_compare_uint64@@Base+0x58>
   131e8:	push	{r5, r7, fp, lr}
   131ec:	add	fp, sp, #8
   131f0:	ldm	r0, {r0, r5}
   131f4:	ldm	r1, {r2, r7}
   131f8:	mov	r1, #0
   131fc:	subs	r3, r0, r2
   13200:	sbcs	r3, r5, r7
   13204:	movwcc	r1, #1
   13208:	cmp	r1, #0
   1320c:	mvnne	r1, #0
   13210:	subs	r0, r2, r0
   13214:	sbcs	r0, r7, r5
   13218:	movwcc	r1, #1
   1321c:	pop	{r5, r7, fp, lr}
   13220:	b	13234 <table_compare_uint64@@Base+0x5c>
   13224:	cmp	r1, #0
   13228:	mvnne	r1, #0
   1322c:	b	13234 <table_compare_uint64@@Base+0x5c>
   13230:	mov	r1, #1
   13234:	mov	r0, r1
   13238:	bx	lr

0001323c <table_compare_short@@Base>:
   1323c:	cmp	r0, #0
   13240:	beq	13268 <table_compare_short@@Base+0x2c>
   13244:	cmp	r1, #0
   13248:	beq	13274 <table_compare_short@@Base+0x38>
   1324c:	ldrsh	r2, [r1]
   13250:	ldrsh	r0, [r0]
   13254:	mov	r1, #0
   13258:	cmp	r0, r2
   1325c:	mvnlt	r1, #0
   13260:	movwgt	r1, #1
   13264:	b	13278 <table_compare_short@@Base+0x3c>
   13268:	cmp	r1, #0
   1326c:	mvnne	r1, #0
   13270:	b	13278 <table_compare_short@@Base+0x3c>
   13274:	mov	r1, #1
   13278:	mov	r0, r1
   1327c:	bx	lr

00013280 <table_compare_ushort@@Base>:
   13280:	cmp	r0, #0
   13284:	beq	132ac <table_compare_ushort@@Base+0x2c>
   13288:	cmp	r1, #0
   1328c:	beq	132b8 <table_compare_ushort@@Base+0x38>
   13290:	ldrh	r2, [r1]
   13294:	ldrh	r0, [r0]
   13298:	mov	r1, #0
   1329c:	cmp	r0, r2
   132a0:	mvncc	r1, #0
   132a4:	movwhi	r1, #1
   132a8:	b	132bc <table_compare_ushort@@Base+0x3c>
   132ac:	cmp	r1, #0
   132b0:	mvnne	r1, #0
   132b4:	b	132bc <table_compare_ushort@@Base+0x3c>
   132b8:	mov	r1, #1
   132bc:	mov	r0, r1
   132c0:	bx	lr

000132c4 <table_compare_long@@Base>:
   132c4:	cmp	r0, #0
   132c8:	beq	132f0 <table_compare_long@@Base+0x2c>
   132cc:	cmp	r1, #0
   132d0:	beq	132fc <table_compare_long@@Base+0x38>
   132d4:	ldr	r2, [r1]
   132d8:	ldr	r0, [r0]
   132dc:	mov	r1, #0
   132e0:	cmp	r0, r2
   132e4:	mvnlt	r1, #0
   132e8:	movwgt	r1, #1
   132ec:	b	13300 <table_compare_long@@Base+0x3c>
   132f0:	cmp	r1, #0
   132f4:	mvnne	r1, #0
   132f8:	b	13300 <table_compare_long@@Base+0x3c>
   132fc:	mov	r1, #1
   13300:	mov	r0, r1
   13304:	bx	lr

00013308 <table_compare_ulong@@Base>:
   13308:	cmp	r0, #0
   1330c:	beq	13334 <table_compare_ulong@@Base+0x2c>
   13310:	cmp	r1, #0
   13314:	beq	13340 <table_compare_ulong@@Base+0x38>
   13318:	ldr	r2, [r1]
   1331c:	ldr	r0, [r0]
   13320:	mov	r1, #0
   13324:	cmp	r0, r2
   13328:	mvncc	r1, #0
   1332c:	movwhi	r1, #1
   13330:	b	13344 <table_compare_ulong@@Base+0x3c>
   13334:	cmp	r1, #0
   13338:	mvnne	r1, #0
   1333c:	b	13344 <table_compare_ulong@@Base+0x3c>
   13340:	mov	r1, #1
   13344:	mov	r0, r1
   13348:	bx	lr

0001334c <table_compare_llong@@Base>:
   1334c:	cmp	r0, #0
   13350:	beq	13398 <table_compare_llong@@Base+0x4c>
   13354:	cmp	r1, #0
   13358:	beq	133a4 <table_compare_llong@@Base+0x58>
   1335c:	push	{r5, r7, fp, lr}
   13360:	add	fp, sp, #8
   13364:	ldm	r0, {r0, r5}
   13368:	ldm	r1, {r2, r7}
   1336c:	mov	r1, #0
   13370:	subs	r3, r0, r2
   13374:	sbcs	r3, r5, r7
   13378:	movwlt	r1, #1
   1337c:	cmp	r1, #0
   13380:	mvnne	r1, #0
   13384:	subs	r0, r2, r0
   13388:	sbcs	r0, r7, r5
   1338c:	movwlt	r1, #1
   13390:	pop	{r5, r7, fp, lr}
   13394:	b	133a8 <table_compare_llong@@Base+0x5c>
   13398:	cmp	r1, #0
   1339c:	mvnne	r1, #0
   133a0:	b	133a8 <table_compare_llong@@Base+0x5c>
   133a4:	mov	r1, #1
   133a8:	mov	r0, r1
   133ac:	bx	lr

000133b0 <table_compare_ullong@@Base>:
   133b0:	cmp	r0, #0
   133b4:	beq	133dc <table_compare_ullong@@Base+0x2c>
   133b8:	cmp	r1, #0
   133bc:	beq	133e8 <table_compare_ullong@@Base+0x38>
   133c0:	ldr	r2, [r1]
   133c4:	ldr	r0, [r0]
   133c8:	mov	r1, #0
   133cc:	cmp	r0, r2
   133d0:	mvncc	r1, #0
   133d4:	movwhi	r1, #1
   133d8:	b	133ec <table_compare_ullong@@Base+0x3c>
   133dc:	cmp	r1, #0
   133e0:	mvnne	r1, #0
   133e4:	b	133ec <table_compare_ullong@@Base+0x3c>
   133e8:	mov	r1, #1
   133ec:	mov	r0, r1
   133f0:	bx	lr

000133f4 <table_compare_float@@Base>:
   133f4:	cmp	r0, #0
   133f8:	beq	13424 <table_compare_float@@Base+0x30>
   133fc:	cmp	r1, #0
   13400:	beq	13430 <table_compare_float@@Base+0x3c>
   13404:	vldr	s0, [r1]
   13408:	vldr	s2, [r0]
   1340c:	mov	r1, #0
   13410:	vcmpe.f32	s2, s0
   13414:	vmrs	APSR_nzcv, fpscr
   13418:	mvnmi	r1, #0
   1341c:	movwgt	r1, #1
   13420:	b	13434 <table_compare_float@@Base+0x40>
   13424:	cmp	r1, #0
   13428:	mvnne	r1, #0
   1342c:	b	13434 <table_compare_float@@Base+0x40>
   13430:	mov	r1, #1
   13434:	mov	r0, r1
   13438:	bx	lr

0001343c <table_compare_double@@Base>:
   1343c:	cmp	r0, #0
   13440:	beq	1346c <table_compare_double@@Base+0x30>
   13444:	cmp	r1, #0
   13448:	beq	13478 <table_compare_double@@Base+0x3c>
   1344c:	vldr	d16, [r1]
   13450:	vldr	d17, [r0]
   13454:	mov	r1, #0
   13458:	vcmpe.f64	d17, d16
   1345c:	vmrs	APSR_nzcv, fpscr
   13460:	mvnmi	r1, #0
   13464:	movwgt	r1, #1
   13468:	b	1347c <table_compare_double@@Base+0x40>
   1346c:	cmp	r1, #0
   13470:	mvnne	r1, #0
   13474:	b	1347c <table_compare_double@@Base+0x40>
   13478:	mov	r1, #1
   1347c:	mov	r0, r1
   13480:	bx	lr

00013484 <table_compare_ldouble@@Base>:
   13484:	cmp	r0, #0
   13488:	beq	134b4 <table_compare_ldouble@@Base+0x30>
   1348c:	cmp	r1, #0
   13490:	beq	134c0 <table_compare_ldouble@@Base+0x3c>
   13494:	vldr	d16, [r1]
   13498:	vldr	d17, [r0]
   1349c:	mov	r1, #0
   134a0:	vcmpe.f64	d17, d16
   134a4:	vmrs	APSR_nzcv, fpscr
   134a8:	mvnmi	r1, #0
   134ac:	movwgt	r1, #1
   134b0:	b	134c4 <table_compare_ldouble@@Base+0x40>
   134b4:	cmp	r1, #0
   134b8:	mvnne	r1, #0
   134bc:	b	134c4 <table_compare_ldouble@@Base+0x40>
   134c0:	mov	r1, #1
   134c4:	mov	r0, r1
   134c8:	bx	lr

000134cc <table_compare_char@@Base>:
   134cc:	cmp	r0, #0
   134d0:	beq	134f8 <table_compare_char@@Base+0x2c>
   134d4:	cmp	r1, #0
   134d8:	beq	13504 <table_compare_char@@Base+0x38>
   134dc:	ldrb	r2, [r1]
   134e0:	ldrb	r0, [r0]
   134e4:	mov	r1, #0
   134e8:	cmp	r0, r2
   134ec:	mvncc	r1, #0
   134f0:	movwhi	r1, #1
   134f4:	b	13508 <table_compare_char@@Base+0x3c>
   134f8:	cmp	r1, #0
   134fc:	mvnne	r1, #0
   13500:	b	13508 <table_compare_char@@Base+0x3c>
   13504:	mov	r1, #1
   13508:	mov	r0, r1
   1350c:	bx	lr

00013510 <table_compare_uchar@@Base>:
   13510:	cmp	r0, #0
   13514:	beq	1353c <table_compare_uchar@@Base+0x2c>
   13518:	cmp	r1, #0
   1351c:	beq	13548 <table_compare_uchar@@Base+0x38>
   13520:	ldrb	r2, [r1]
   13524:	ldrb	r0, [r0]
   13528:	mov	r1, #0
   1352c:	cmp	r0, r2
   13530:	mvncc	r1, #0
   13534:	movwhi	r1, #1
   13538:	b	1354c <table_compare_uchar@@Base+0x3c>
   1353c:	cmp	r1, #0
   13540:	mvnne	r1, #0
   13544:	b	1354c <table_compare_uchar@@Base+0x3c>
   13548:	mov	r1, #1
   1354c:	mov	r0, r1
   13550:	bx	lr

00013554 <table_compare_string@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	13568 <table_compare_string@@Base+0x14>
   1355c:	cmp	r1, #0
   13560:	beq	13574 <table_compare_string@@Base+0x20>
   13564:	b	11ee0 <strcmp@plt>
   13568:	cmp	r1, #0
   1356c:	mvnne	r1, #0
   13570:	b	13578 <table_compare_string@@Base+0x24>
   13574:	mov	r1, #1
   13578:	mov	r0, r1
   1357c:	bx	lr

00013580 <table_compare_ptr@@Base>:
   13580:	cmp	r0, r1
   13584:	mov	r2, #0
   13588:	mvncc	r2, #0
   1358c:	movwhi	r2, #1
   13590:	mov	r0, r2
   13594:	bx	lr

00013598 <table_get_default_compare_function_for_data_type@@Base>:
   13598:	cmp	r0, #23
   1359c:	movhi	r0, #0
   135a0:	bxhi	lr
   135a4:	movw	r1, #19484	; 0x4c1c
   135a8:	movt	r1, #1
   135ac:	ldr	r0, [r1, r0, lsl #2]
   135b0:	bx	lr

000135b4 <table_get@@Base>:
   135b4:	push	{fp, lr}
   135b8:	mov	fp, sp
   135bc:	bl	14168 <table_get_cell_ptr@@Base>
   135c0:	ldr	r0, [r0]
   135c4:	pop	{fp, pc}

000135c8 <table_get_bool@@Base>:
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	bl	14168 <table_get_cell_ptr@@Base>
   135d4:	ldr	r0, [r0]
   135d8:	ldrb	r0, [r0]
   135dc:	pop	{fp, pc}

000135e0 <table_get_int@@Base>:
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	bl	14168 <table_get_cell_ptr@@Base>
   135ec:	ldr	r0, [r0]
   135f0:	ldr	r0, [r0]
   135f4:	pop	{fp, pc}

000135f8 <table_get_uint@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	14168 <table_get_cell_ptr@@Base>
   13604:	ldr	r0, [r0]
   13608:	ldr	r0, [r0]
   1360c:	pop	{fp, pc}

00013610 <table_get_int8@@Base>:
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	bl	14168 <table_get_cell_ptr@@Base>
   1361c:	ldr	r0, [r0]
   13620:	ldrsb	r0, [r0]
   13624:	pop	{fp, pc}

00013628 <table_get_uint8@@Base>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	bl	14168 <table_get_cell_ptr@@Base>
   13634:	ldr	r0, [r0]
   13638:	ldrb	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_int16@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	14168 <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	ldrsh	r0, [r0]
   13654:	pop	{fp, pc}

00013658 <table_get_uint16@@Base>:
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	bl	14168 <table_get_cell_ptr@@Base>
   13664:	ldr	r0, [r0]
   13668:	ldrh	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_int32@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	14168 <table_get_cell_ptr@@Base>
   1367c:	ldr	r0, [r0]
   13680:	ldr	r0, [r0]
   13684:	pop	{fp, pc}

00013688 <table_get_uint32@@Base>:
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	bl	14168 <table_get_cell_ptr@@Base>
   13694:	ldr	r0, [r0]
   13698:	ldr	r0, [r0]
   1369c:	pop	{fp, pc}

000136a0 <table_get_int64@@Base>:
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	14168 <table_get_cell_ptr@@Base>
   136ac:	ldr	r0, [r0]
   136b0:	ldrd	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_uint64@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	14168 <table_get_cell_ptr@@Base>
   136c4:	ldr	r0, [r0]
   136c8:	ldrd	r0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_short@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	14168 <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	ldrsh	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_ushort@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	14168 <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	ldrh	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_long@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	14168 <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldr	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_ulong@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	14168 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldr	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_llong@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	14168 <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	ldrd	r0, [r0]
   13744:	pop	{fp, pc}

00013748 <table_get_ullong@@Base>:
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	14168 <table_get_cell_ptr@@Base>
   13754:	ldr	r0, [r0]
   13758:	ldrd	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_float@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	14168 <table_get_cell_ptr@@Base>
   1376c:	ldr	r0, [r0]
   13770:	vldr	s0, [r0]
   13774:	pop	{fp, pc}

00013778 <table_get_double@@Base>:
   13778:	push	{fp, lr}
   1377c:	mov	fp, sp
   13780:	bl	14168 <table_get_cell_ptr@@Base>
   13784:	ldr	r0, [r0]
   13788:	vldr	d0, [r0]
   1378c:	pop	{fp, pc}

00013790 <table_get_ldouble@@Base>:
   13790:	push	{fp, lr}
   13794:	mov	fp, sp
   13798:	bl	14168 <table_get_cell_ptr@@Base>
   1379c:	ldr	r0, [r0]
   137a0:	vldr	d0, [r0]
   137a4:	pop	{fp, pc}

000137a8 <table_get_char@@Base>:
   137a8:	push	{fp, lr}
   137ac:	mov	fp, sp
   137b0:	bl	14168 <table_get_cell_ptr@@Base>
   137b4:	ldr	r0, [r0]
   137b8:	ldrb	r0, [r0]
   137bc:	pop	{fp, pc}

000137c0 <table_get_uchar@@Base>:
   137c0:	push	{fp, lr}
   137c4:	mov	fp, sp
   137c8:	bl	14168 <table_get_cell_ptr@@Base>
   137cc:	ldr	r0, [r0]
   137d0:	ldrb	r0, [r0]
   137d4:	pop	{fp, pc}

000137d8 <table_get_string@@Base>:
   137d8:	push	{fp, lr}
   137dc:	mov	fp, sp
   137e0:	bl	14168 <table_get_cell_ptr@@Base>
   137e4:	ldr	r0, [r0]
   137e8:	pop	{fp, pc}

000137ec <table_get_ptr@@Base>:
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	bl	14168 <table_get_cell_ptr@@Base>
   137f8:	ldr	r0, [r0]
   137fc:	pop	{fp, pc}

00013800 <table_row_init@@Base>:
   13800:	push	{r4, r5, fp, lr}
   13804:	add	fp, sp, #8
   13808:	mov	r4, r1
   1380c:	ldr	r1, [r0, #12]
   13810:	ldr	r5, [r0, #16]
   13814:	lsl	r0, r1, #2
   13818:	bl	11f1c <malloc@plt>
   1381c:	str	r0, [r5, r4, lsl #2]
   13820:	pop	{r4, r5, fp, pc}

00013824 <table_get_row_ptr@@Base>:
   13824:	ldr	r0, [r0, #16]
   13828:	add	r0, r0, r1, lsl #2
   1382c:	bx	lr

00013830 <table_row_destroy@@Base>:
   13830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13834:	add	fp, sp, #24
   13838:	mov	r4, r1
   1383c:	mov	r5, r0
   13840:	bl	12bd4 <table_get_column_length@@Base>
   13844:	ldr	r8, [r5, #16]
   13848:	cmp	r0, #1
   1384c:	blt	13874 <table_row_destroy@@Base+0x44>
   13850:	mov	r6, r0
   13854:	mov	r7, #0
   13858:	mov	r0, r5
   1385c:	mov	r1, r4
   13860:	mov	r2, r7
   13864:	bl	14184 <table_cell_destroy@@Base>
   13868:	add	r7, r7, #1
   1386c:	cmp	r6, r7
   13870:	bne	13858 <table_row_destroy@@Base+0x28>
   13874:	ldr	r0, [r8, r4, lsl #2]
   13878:	cmp	r0, #0
   1387c:	beq	13888 <table_row_destroy@@Base+0x58>
   13880:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13884:	b	11eec <free@plt>
   13888:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001388c <table_get_row_length@@Base>:
   1388c:	ldr	r0, [r0, #20]
   13890:	bx	lr

00013894 <table_add_row@@Base>:
   13894:	push	{r4, r5, r6, r7, fp, lr}
   13898:	add	fp, sp, #16
   1389c:	ldr	r5, [r0, #20]
   138a0:	ldr	r1, [r0, #24]
   138a4:	mov	r4, r0
   138a8:	udiv	r0, r5, r1
   138ac:	mls	r0, r0, r1, r5
   138b0:	cmp	r0, #0
   138b4:	bne	138d8 <table_add_row@@Base+0x44>
   138b8:	ldr	r2, [r4, #28]
   138bc:	ldr	r0, [r4, #16]
   138c0:	add	r1, r2, r1
   138c4:	str	r1, [r4, #28]
   138c8:	lsl	r1, r1, #2
   138cc:	bl	11f04 <realloc@plt>
   138d0:	str	r0, [r4, #16]
   138d4:	ldr	r5, [r4, #20]
   138d8:	mov	r0, r4
   138dc:	bl	12bd4 <table_get_column_length@@Base>
   138e0:	mov	r6, r0
   138e4:	ldr	r0, [r4, #12]
   138e8:	ldr	r7, [r4, #16]
   138ec:	lsl	r0, r0, #2
   138f0:	bl	11f1c <malloc@plt>
   138f4:	cmp	r6, #1
   138f8:	str	r0, [r7, r5, lsl #2]
   138fc:	blt	13920 <table_add_row@@Base+0x8c>
   13900:	mov	r7, #0
   13904:	mov	r0, r4
   13908:	mov	r1, r5
   1390c:	mov	r2, r7
   13910:	bl	14148 <table_cell_init@@Base>
   13914:	add	r7, r7, #1
   13918:	cmp	r6, r7
   1391c:	bne	13904 <table_add_row@@Base+0x70>
   13920:	ldr	r1, [r4, #20]
   13924:	mov	r0, r4
   13928:	mvn	r2, #0
   1392c:	mov	r3, #2
   13930:	bl	12ae0 <table_notify@@Base>
   13934:	ldr	r0, [r4, #20]
   13938:	add	r1, r0, #1
   1393c:	str	r1, [r4, #20]
   13940:	pop	{r4, r5, r6, r7, fp, pc}

00013944 <table_remove_row@@Base>:
   13944:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13948:	add	fp, sp, #24
   1394c:	ldr	r8, [r0, #20]
   13950:	mov	r4, r1
   13954:	mov	r5, r0
   13958:	bl	12bd4 <table_get_column_length@@Base>
   1395c:	cmp	r0, #1
   13960:	blt	139ac <table_remove_row@@Base+0x68>
   13964:	mov	r6, r0
   13968:	mov	r7, #0
   1396c:	mov	r0, r5
   13970:	mov	r1, r7
   13974:	bl	12c4c <table_get_column_data_type@@Base>
   13978:	cmp	r0, #23
   1397c:	beq	139a0 <table_remove_row@@Base+0x5c>
   13980:	mov	r0, r5
   13984:	mov	r1, r4
   13988:	mov	r2, r7
   1398c:	bl	14168 <table_get_cell_ptr@@Base>
   13990:	ldr	r0, [r0]
   13994:	cmp	r0, #0
   13998:	beq	139a0 <table_remove_row@@Base+0x5c>
   1399c:	bl	11eec <free@plt>
   139a0:	add	r7, r7, #1
   139a4:	cmp	r6, r7
   139a8:	bne	1396c <table_remove_row@@Base+0x28>
   139ac:	ldr	r0, [r5, #16]
   139b0:	ldr	r0, [r0, r4, lsl #2]
   139b4:	cmp	r0, #0
   139b8:	beq	139c0 <table_remove_row@@Base+0x7c>
   139bc:	bl	11eec <free@plt>
   139c0:	sub	r0, r8, #1
   139c4:	cmp	r0, r4
   139c8:	ble	139ec <table_remove_row@@Base+0xa8>
   139cc:	mov	r1, r4
   139d0:	ldr	r2, [r5, #16]
   139d4:	add	r3, r2, r1, lsl #2
   139d8:	ldr	r3, [r3, #4]
   139dc:	str	r3, [r2, r1, lsl #2]
   139e0:	add	r1, r1, #1
   139e4:	cmp	r0, r1
   139e8:	bne	139d0 <table_remove_row@@Base+0x8c>
   139ec:	ldr	r0, [r5, #20]
   139f0:	ldr	r1, [r5, #24]
   139f4:	sub	r0, r0, #1
   139f8:	udiv	r2, r0, r1
   139fc:	str	r0, [r5, #20]
   13a00:	mls	r0, r2, r1, r0
   13a04:	cmp	r0, #0
   13a08:	bne	13a28 <table_remove_row@@Base+0xe4>
   13a0c:	ldr	r2, [r5, #28]
   13a10:	ldr	r0, [r5, #16]
   13a14:	sub	r1, r2, r1
   13a18:	str	r1, [r5, #28]
   13a1c:	lsl	r1, r1, #2
   13a20:	bl	11f04 <realloc@plt>
   13a24:	str	r0, [r5, #16]
   13a28:	mov	r0, r5
   13a2c:	mov	r1, r4
   13a30:	mvn	r2, #0
   13a34:	mov	r3, #4
   13a38:	bl	12ae0 <table_notify@@Base>
   13a3c:	mov	r0, #0
   13a40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a44 <table_set_row_ptr@@Base>:
   13a44:	ldr	r2, [r2]
   13a48:	ldr	r0, [r0, #16]
   13a4c:	str	r2, [r0, r1, lsl #2]
   13a50:	bx	lr

00013a54 <table_set@@Base>:
   13a54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13a58:	add	fp, sp, #24
   13a5c:	mov	r8, r3
   13a60:	mov	r4, r2
   13a64:	mov	r9, r1
   13a68:	mov	r6, r0
   13a6c:	bl	14168 <table_get_cell_ptr@@Base>
   13a70:	mov	r5, r0
   13a74:	mov	r0, r6
   13a78:	mov	r1, r4
   13a7c:	bl	12bac <table_get_col_ptr@@Base>
   13a80:	ldr	r1, [fp, #8]
   13a84:	mvn	r7, #0
   13a88:	cmp	r1, #23
   13a8c:	bhi	13d4c <table_set@@Base+0x2f8>
   13a90:	add	r2, pc, #0
   13a94:	ldr	pc, [r2, r1, lsl #2]
   13a98:	strdeq	r3, [r1], -r8
   13a9c:	andeq	r3, r1, r8, lsl #22
   13aa0:	andeq	r3, r1, r8, lsl fp
   13aa4:	andeq	r3, r1, r8, lsr #22
   13aa8:	andeq	r3, r1, r8, lsr fp
   13aac:	andeq	r3, r1, r8, asr #22
   13ab0:	andeq	r3, r1, r8, asr fp
   13ab4:	andeq	r3, r1, r8, ror #22
   13ab8:	andeq	r3, r1, r8, ror fp
   13abc:	andeq	r3, r1, r8, lsl #23
   13ac0:	muleq	r1, r8, fp
   13ac4:	andeq	r3, r1, r8, lsr #23
   13ac8:	andeq	r3, r1, r0, ror #23
   13acc:	strdeq	r3, [r1], -r0
   13ad0:	andeq	r3, r1, r0, lsl #24
   13ad4:	andeq	r3, r1, r0, lsl ip
   13ad8:	andeq	r3, r1, r0, lsr #24
   13adc:	andeq	r3, r1, r4, asr ip
   13ae0:	andeq	r3, r1, r4, ror #24
   13ae4:	andeq	r3, r1, r4, lsr #25
   13ae8:			; <UNDEFINED> instruction: 0x00013cb4
   13aec:	andeq	r3, r1, r4, asr #25
   13af0:	andeq	r3, r1, r0, lsl #26
   13af4:	andeq	r3, r1, r4, asr sp
   13af8:	ldr	r0, [r0, #4]
   13afc:	cmp	r0, #0
   13b00:	bne	13d4c <table_set@@Base+0x2f8>
   13b04:	b	13c2c <table_set@@Base+0x1d8>
   13b08:	ldr	r0, [r0, #4]
   13b0c:	cmp	r0, #1
   13b10:	beq	13c2c <table_set@@Base+0x1d8>
   13b14:	b	13d4c <table_set@@Base+0x2f8>
   13b18:	ldr	r0, [r0, #4]
   13b1c:	cmp	r0, #2
   13b20:	beq	13d0c <table_set@@Base+0x2b8>
   13b24:	b	13d4c <table_set@@Base+0x2f8>
   13b28:	ldr	r0, [r0, #4]
   13b2c:	cmp	r0, #3
   13b30:	beq	13d0c <table_set@@Base+0x2b8>
   13b34:	b	13d4c <table_set@@Base+0x2f8>
   13b38:	ldr	r0, [r0, #4]
   13b3c:	cmp	r0, #4
   13b40:	beq	13bb4 <table_set@@Base+0x160>
   13b44:	b	13d4c <table_set@@Base+0x2f8>
   13b48:	ldr	r0, [r0, #4]
   13b4c:	cmp	r0, #5
   13b50:	beq	13bb4 <table_set@@Base+0x160>
   13b54:	b	13d4c <table_set@@Base+0x2f8>
   13b58:	ldr	r0, [r0, #4]
   13b5c:	cmp	r0, #6
   13b60:	beq	13c2c <table_set@@Base+0x1d8>
   13b64:	b	13d4c <table_set@@Base+0x2f8>
   13b68:	ldr	r0, [r0, #4]
   13b6c:	cmp	r0, #7
   13b70:	beq	13c2c <table_set@@Base+0x1d8>
   13b74:	b	13d4c <table_set@@Base+0x2f8>
   13b78:	ldr	r0, [r0, #4]
   13b7c:	cmp	r0, #8
   13b80:	beq	13c70 <table_set@@Base+0x21c>
   13b84:	b	13d4c <table_set@@Base+0x2f8>
   13b88:	ldr	r0, [r0, #4]
   13b8c:	cmp	r0, #9
   13b90:	beq	13c70 <table_set@@Base+0x21c>
   13b94:	b	13d4c <table_set@@Base+0x2f8>
   13b98:	ldr	r0, [r0, #4]
   13b9c:	cmp	r0, #10
   13ba0:	beq	13bb4 <table_set@@Base+0x160>
   13ba4:	b	13d4c <table_set@@Base+0x2f8>
   13ba8:	ldr	r0, [r0, #4]
   13bac:	cmp	r0, #11
   13bb0:	bne	13d4c <table_set@@Base+0x2f8>
   13bb4:	ldr	r0, [r5]
   13bb8:	cmp	r0, #0
   13bbc:	bne	13bd4 <table_set@@Base+0x180>
   13bc0:	mov	r0, #2
   13bc4:	bl	11f1c <malloc@plt>
   13bc8:	cmp	r0, #0
   13bcc:	str	r0, [r5]
   13bd0:	beq	13d4c <table_set@@Base+0x2f8>
   13bd4:	ldrh	r1, [r8]
   13bd8:	strh	r1, [r0]
   13bdc:	b	13d34 <table_set@@Base+0x2e0>
   13be0:	ldr	r0, [r0, #4]
   13be4:	cmp	r0, #12
   13be8:	beq	13c2c <table_set@@Base+0x1d8>
   13bec:	b	13d4c <table_set@@Base+0x2f8>
   13bf0:	ldr	r0, [r0, #4]
   13bf4:	cmp	r0, #13
   13bf8:	beq	13c2c <table_set@@Base+0x1d8>
   13bfc:	b	13d4c <table_set@@Base+0x2f8>
   13c00:	ldr	r0, [r0, #4]
   13c04:	cmp	r0, #14
   13c08:	beq	13c70 <table_set@@Base+0x21c>
   13c0c:	b	13d4c <table_set@@Base+0x2f8>
   13c10:	ldr	r0, [r0, #4]
   13c14:	cmp	r0, #15
   13c18:	beq	13c70 <table_set@@Base+0x21c>
   13c1c:	b	13d4c <table_set@@Base+0x2f8>
   13c20:	ldr	r0, [r0, #4]
   13c24:	cmp	r0, #16
   13c28:	bne	13d4c <table_set@@Base+0x2f8>
   13c2c:	ldr	r0, [r5]
   13c30:	cmp	r0, #0
   13c34:	bne	13c4c <table_set@@Base+0x1f8>
   13c38:	mov	r0, #4
   13c3c:	bl	11f1c <malloc@plt>
   13c40:	cmp	r0, #0
   13c44:	str	r0, [r5]
   13c48:	beq	13d4c <table_set@@Base+0x2f8>
   13c4c:	ldr	r1, [r8]
   13c50:	b	13c9c <table_set@@Base+0x248>
   13c54:	ldr	r0, [r0, #4]
   13c58:	cmp	r0, #17
   13c5c:	beq	13c70 <table_set@@Base+0x21c>
   13c60:	b	13d4c <table_set@@Base+0x2f8>
   13c64:	ldr	r0, [r0, #4]
   13c68:	cmp	r0, #18
   13c6c:	bne	13d4c <table_set@@Base+0x2f8>
   13c70:	ldr	r0, [r5]
   13c74:	cmp	r0, #0
   13c78:	bne	13c90 <table_set@@Base+0x23c>
   13c7c:	mov	r0, #8
   13c80:	bl	11f1c <malloc@plt>
   13c84:	cmp	r0, #0
   13c88:	str	r0, [r5]
   13c8c:	beq	13d4c <table_set@@Base+0x2f8>
   13c90:	ldr	r1, [r8]
   13c94:	ldr	r2, [r8, #4]
   13c98:	str	r2, [r0, #4]
   13c9c:	str	r1, [r0]
   13ca0:	b	13d34 <table_set@@Base+0x2e0>
   13ca4:	ldr	r0, [r0, #4]
   13ca8:	cmp	r0, #19
   13cac:	beq	13d0c <table_set@@Base+0x2b8>
   13cb0:	b	13d4c <table_set@@Base+0x2f8>
   13cb4:	ldr	r0, [r0, #4]
   13cb8:	cmp	r0, #20
   13cbc:	beq	13d0c <table_set@@Base+0x2b8>
   13cc0:	b	13d4c <table_set@@Base+0x2f8>
   13cc4:	ldr	r0, [r0, #4]
   13cc8:	cmp	r0, #21
   13ccc:	bne	13d4c <table_set@@Base+0x2f8>
   13cd0:	mov	r0, r8
   13cd4:	bl	11f40 <strlen@plt>
   13cd8:	ldr	r2, [r5]
   13cdc:	add	r1, r0, #1
   13ce0:	mov	r0, r2
   13ce4:	bl	11f04 <realloc@plt>
   13ce8:	cmp	r0, #0
   13cec:	str	r0, [r5]
   13cf0:	beq	13d4c <table_set@@Base+0x2f8>
   13cf4:	mov	r1, r8
   13cf8:	bl	11f10 <strcpy@plt>
   13cfc:	b	13d34 <table_set@@Base+0x2e0>
   13d00:	ldr	r0, [r0, #4]
   13d04:	cmp	r0, #22
   13d08:	bne	13d4c <table_set@@Base+0x2f8>
   13d0c:	ldr	r0, [r5]
   13d10:	cmp	r0, #0
   13d14:	bne	13d2c <table_set@@Base+0x2d8>
   13d18:	mov	r0, #1
   13d1c:	bl	11f1c <malloc@plt>
   13d20:	cmp	r0, #0
   13d24:	str	r0, [r5]
   13d28:	beq	13d4c <table_set@@Base+0x2f8>
   13d2c:	ldrb	r1, [r8]
   13d30:	strb	r1, [r0]
   13d34:	mov	r0, r6
   13d38:	mov	r1, r9
   13d3c:	mov	r2, r4
   13d40:	mov	r3, #1
   13d44:	bl	12ae0 <table_notify@@Base>
   13d48:	mov	r7, #0
   13d4c:	mov	r0, r7
   13d50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d54:	ldr	r0, [r0, #4]
   13d58:	cmp	r0, #23
   13d5c:	bne	13d4c <table_set@@Base+0x2f8>
   13d60:	str	r8, [r5]
   13d64:	b	13d34 <table_set@@Base+0x2e0>

00013d68 <table_set_bool@@Base>:
   13d68:	push	{fp, lr}
   13d6c:	mov	fp, sp
   13d70:	sub	sp, sp, #8
   13d74:	strb	r3, [fp, #-1]
   13d78:	mov	r3, #22
   13d7c:	str	r3, [sp]
   13d80:	sub	r3, fp, #1
   13d84:	bl	13a54 <table_set@@Base>
   13d88:	mov	sp, fp
   13d8c:	pop	{fp, pc}

00013d90 <table_set_int@@Base>:
   13d90:	push	{fp, lr}
   13d94:	mov	fp, sp
   13d98:	sub	sp, sp, #8
   13d9c:	str	r3, [sp, #4]
   13da0:	mov	r3, #0
   13da4:	str	r3, [sp]
   13da8:	add	r3, sp, #4
   13dac:	bl	13a54 <table_set@@Base>
   13db0:	mov	sp, fp
   13db4:	pop	{fp, pc}

00013db8 <table_set_uint@@Base>:
   13db8:	push	{fp, lr}
   13dbc:	mov	fp, sp
   13dc0:	sub	sp, sp, #8
   13dc4:	str	r3, [sp, #4]
   13dc8:	mov	r3, #1
   13dcc:	str	r3, [sp]
   13dd0:	add	r3, sp, #4
   13dd4:	bl	13a54 <table_set@@Base>
   13dd8:	mov	sp, fp
   13ddc:	pop	{fp, pc}

00013de0 <table_set_int8@@Base>:
   13de0:	push	{fp, lr}
   13de4:	mov	fp, sp
   13de8:	sub	sp, sp, #8
   13dec:	strb	r3, [fp, #-1]
   13df0:	mov	r3, #2
   13df4:	str	r3, [sp]
   13df8:	sub	r3, fp, #1
   13dfc:	bl	13a54 <table_set@@Base>
   13e00:	mov	sp, fp
   13e04:	pop	{fp, pc}

00013e08 <table_set_uint8@@Base>:
   13e08:	push	{fp, lr}
   13e0c:	mov	fp, sp
   13e10:	sub	sp, sp, #8
   13e14:	strb	r3, [fp, #-1]
   13e18:	mov	r3, #3
   13e1c:	str	r3, [sp]
   13e20:	sub	r3, fp, #1
   13e24:	bl	13a54 <table_set@@Base>
   13e28:	mov	sp, fp
   13e2c:	pop	{fp, pc}

00013e30 <table_set_int16@@Base>:
   13e30:	push	{fp, lr}
   13e34:	mov	fp, sp
   13e38:	sub	sp, sp, #8
   13e3c:	strh	r3, [fp, #-2]
   13e40:	mov	r3, #4
   13e44:	str	r3, [sp]
   13e48:	sub	r3, fp, #2
   13e4c:	bl	13a54 <table_set@@Base>
   13e50:	mov	sp, fp
   13e54:	pop	{fp, pc}

00013e58 <table_set_uint16@@Base>:
   13e58:	push	{fp, lr}
   13e5c:	mov	fp, sp
   13e60:	sub	sp, sp, #8
   13e64:	strh	r3, [fp, #-2]
   13e68:	mov	r3, #5
   13e6c:	str	r3, [sp]
   13e70:	sub	r3, fp, #2
   13e74:	bl	13a54 <table_set@@Base>
   13e78:	mov	sp, fp
   13e7c:	pop	{fp, pc}

00013e80 <table_set_int32@@Base>:
   13e80:	push	{fp, lr}
   13e84:	mov	fp, sp
   13e88:	sub	sp, sp, #8
   13e8c:	str	r3, [sp, #4]
   13e90:	mov	r3, #6
   13e94:	str	r3, [sp]
   13e98:	add	r3, sp, #4
   13e9c:	bl	13a54 <table_set@@Base>
   13ea0:	mov	sp, fp
   13ea4:	pop	{fp, pc}

00013ea8 <table_set_uint32@@Base>:
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	sub	sp, sp, #8
   13eb4:	str	r3, [sp, #4]
   13eb8:	mov	r3, #7
   13ebc:	str	r3, [sp]
   13ec0:	add	r3, sp, #4
   13ec4:	bl	13a54 <table_set@@Base>
   13ec8:	mov	sp, fp
   13ecc:	pop	{fp, pc}

00013ed0 <table_set_int64@@Base>:
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	sub	sp, sp, #16
   13edc:	ldr	r3, [fp, #12]
   13ee0:	str	r3, [sp, #12]
   13ee4:	ldr	r3, [fp, #8]
   13ee8:	str	r3, [sp, #8]
   13eec:	mov	r3, #8
   13ef0:	str	r3, [sp]
   13ef4:	add	r3, sp, #8
   13ef8:	bl	13a54 <table_set@@Base>
   13efc:	mov	sp, fp
   13f00:	pop	{fp, pc}

00013f04 <table_set_uint64@@Base>:
   13f04:	push	{fp, lr}
   13f08:	mov	fp, sp
   13f0c:	sub	sp, sp, #16
   13f10:	ldr	r3, [fp, #12]
   13f14:	str	r3, [sp, #12]
   13f18:	ldr	r3, [fp, #8]
   13f1c:	str	r3, [sp, #8]
   13f20:	mov	r3, #9
   13f24:	str	r3, [sp]
   13f28:	add	r3, sp, #8
   13f2c:	bl	13a54 <table_set@@Base>
   13f30:	mov	sp, fp
   13f34:	pop	{fp, pc}

00013f38 <table_set_short@@Base>:
   13f38:	push	{fp, lr}
   13f3c:	mov	fp, sp
   13f40:	sub	sp, sp, #8
   13f44:	strh	r3, [fp, #-2]
   13f48:	mov	r3, #10
   13f4c:	str	r3, [sp]
   13f50:	sub	r3, fp, #2
   13f54:	bl	13a54 <table_set@@Base>
   13f58:	mov	sp, fp
   13f5c:	pop	{fp, pc}

00013f60 <table_set_ushort@@Base>:
   13f60:	push	{fp, lr}
   13f64:	mov	fp, sp
   13f68:	sub	sp, sp, #8
   13f6c:	strh	r3, [fp, #-2]
   13f70:	mov	r3, #11
   13f74:	str	r3, [sp]
   13f78:	sub	r3, fp, #2
   13f7c:	bl	13a54 <table_set@@Base>
   13f80:	mov	sp, fp
   13f84:	pop	{fp, pc}

00013f88 <table_set_long@@Base>:
   13f88:	push	{fp, lr}
   13f8c:	mov	fp, sp
   13f90:	sub	sp, sp, #8
   13f94:	str	r3, [sp, #4]
   13f98:	mov	r3, #12
   13f9c:	str	r3, [sp]
   13fa0:	add	r3, sp, #4
   13fa4:	bl	13a54 <table_set@@Base>
   13fa8:	mov	sp, fp
   13fac:	pop	{fp, pc}

00013fb0 <table_set_ulong@@Base>:
   13fb0:	push	{fp, lr}
   13fb4:	mov	fp, sp
   13fb8:	sub	sp, sp, #8
   13fbc:	str	r3, [sp, #4]
   13fc0:	mov	r3, #13
   13fc4:	str	r3, [sp]
   13fc8:	add	r3, sp, #4
   13fcc:	bl	13a54 <table_set@@Base>
   13fd0:	mov	sp, fp
   13fd4:	pop	{fp, pc}

00013fd8 <table_set_llong@@Base>:
   13fd8:	push	{fp, lr}
   13fdc:	mov	fp, sp
   13fe0:	sub	sp, sp, #16
   13fe4:	ldr	r3, [fp, #12]
   13fe8:	str	r3, [sp, #12]
   13fec:	ldr	r3, [fp, #8]
   13ff0:	str	r3, [sp, #8]
   13ff4:	mov	r3, #14
   13ff8:	str	r3, [sp]
   13ffc:	add	r3, sp, #8
   14000:	bl	13a54 <table_set@@Base>
   14004:	mov	sp, fp
   14008:	pop	{fp, pc}

0001400c <table_set_ullong@@Base>:
   1400c:	push	{fp, lr}
   14010:	mov	fp, sp
   14014:	sub	sp, sp, #16
   14018:	ldr	r3, [fp, #12]
   1401c:	str	r3, [sp, #12]
   14020:	ldr	r3, [fp, #8]
   14024:	str	r3, [sp, #8]
   14028:	mov	r3, #15
   1402c:	str	r3, [sp]
   14030:	add	r3, sp, #8
   14034:	bl	13a54 <table_set@@Base>
   14038:	mov	sp, fp
   1403c:	pop	{fp, pc}

00014040 <table_set_float@@Base>:
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	sub	sp, sp, #8
   1404c:	mov	r3, #16
   14050:	vstr	s0, [sp, #4]
   14054:	str	r3, [sp]
   14058:	add	r3, sp, #4
   1405c:	bl	13a54 <table_set@@Base>
   14060:	mov	sp, fp
   14064:	pop	{fp, pc}

00014068 <table_set_double@@Base>:
   14068:	push	{fp, lr}
   1406c:	mov	fp, sp
   14070:	sub	sp, sp, #16
   14074:	mov	r3, #17
   14078:	vstr	d0, [sp, #8]
   1407c:	str	r3, [sp]
   14080:	add	r3, sp, #8
   14084:	bl	13a54 <table_set@@Base>
   14088:	mov	sp, fp
   1408c:	pop	{fp, pc}

00014090 <table_set_ldouble@@Base>:
   14090:	push	{fp, lr}
   14094:	mov	fp, sp
   14098:	sub	sp, sp, #16
   1409c:	mov	r3, #18
   140a0:	vstr	d0, [sp, #8]
   140a4:	str	r3, [sp]
   140a8:	add	r3, sp, #8
   140ac:	bl	13a54 <table_set@@Base>
   140b0:	mov	sp, fp
   140b4:	pop	{fp, pc}

000140b8 <table_set_string@@Base>:
   140b8:	push	{fp, lr}
   140bc:	mov	fp, sp
   140c0:	sub	sp, sp, #8
   140c4:	mov	ip, #21
   140c8:	str	ip, [sp]
   140cc:	bl	13a54 <table_set@@Base>
   140d0:	mov	sp, fp
   140d4:	pop	{fp, pc}

000140d8 <table_set_char@@Base>:
   140d8:	push	{fp, lr}
   140dc:	mov	fp, sp
   140e0:	sub	sp, sp, #8
   140e4:	strb	r3, [fp, #-1]
   140e8:	mov	r3, #19
   140ec:	str	r3, [sp]
   140f0:	sub	r3, fp, #1
   140f4:	bl	13a54 <table_set@@Base>
   140f8:	mov	sp, fp
   140fc:	pop	{fp, pc}

00014100 <table_set_uchar@@Base>:
   14100:	push	{fp, lr}
   14104:	mov	fp, sp
   14108:	sub	sp, sp, #8
   1410c:	strb	r3, [fp, #-1]
   14110:	mov	r3, #20
   14114:	str	r3, [sp]
   14118:	sub	r3, fp, #1
   1411c:	bl	13a54 <table_set@@Base>
   14120:	mov	sp, fp
   14124:	pop	{fp, pc}

00014128 <table_set_ptr@@Base>:
   14128:	push	{fp, lr}
   1412c:	mov	fp, sp
   14130:	sub	sp, sp, #8
   14134:	mov	ip, #23
   14138:	str	ip, [sp]
   1413c:	bl	13a54 <table_set@@Base>
   14140:	mov	sp, fp
   14144:	pop	{fp, pc}

00014148 <table_cell_init@@Base>:
   14148:	push	{r4, sl, fp, lr}
   1414c:	add	fp, sp, #8
   14150:	mov	r4, r2
   14154:	bl	13824 <table_get_row_ptr@@Base>
   14158:	ldr	r0, [r0]
   1415c:	mov	r1, #0
   14160:	str	r1, [r0, r4, lsl #2]
   14164:	pop	{r4, sl, fp, pc}

00014168 <table_get_cell_ptr@@Base>:
   14168:	push	{r4, sl, fp, lr}
   1416c:	add	fp, sp, #8
   14170:	mov	r4, r2
   14174:	bl	13824 <table_get_row_ptr@@Base>
   14178:	ldr	r0, [r0]
   1417c:	add	r0, r0, r4, lsl #2
   14180:	pop	{r4, sl, fp, pc}

00014184 <table_cell_destroy@@Base>:
   14184:	push	{r4, r5, r6, sl, fp, lr}
   14188:	add	fp, sp, #16
   1418c:	mov	r5, r1
   14190:	mov	r1, r2
   14194:	mov	r4, r2
   14198:	mov	r6, r0
   1419c:	bl	12c4c <table_get_column_data_type@@Base>
   141a0:	cmp	r0, #23
   141a4:	popeq	{r4, r5, r6, sl, fp, pc}
   141a8:	mov	r0, r6
   141ac:	mov	r1, r5
   141b0:	bl	13824 <table_get_row_ptr@@Base>
   141b4:	ldr	r0, [r0]
   141b8:	ldr	r0, [r0, r4, lsl #2]
   141bc:	cmp	r0, #0
   141c0:	beq	141cc <table_cell_destroy@@Base+0x48>
   141c4:	pop	{r4, r5, r6, sl, fp, lr}
   141c8:	b	11eec <free@plt>
   141cc:	pop	{r4, r5, r6, sl, fp, pc}

000141d0 <table_cell_to_buffer@@Base>:
   141d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d4:	add	fp, sp, #24
   141d8:	sub	sp, sp, #8
   141dc:	mov	r7, r1
   141e0:	mov	r1, r2
   141e4:	mov	r5, r3
   141e8:	mov	r6, r2
   141ec:	mov	r4, r0
   141f0:	bl	12c4c <table_get_column_data_type@@Base>
   141f4:	cmp	r0, #23
   141f8:	bhi	144e8 <table_cell_to_buffer@@Base+0x318>
   141fc:	ldr	r8, [fp, #8]
   14200:	add	r1, pc, #0
   14204:	ldr	pc, [r1, r0, lsl #2]
   14208:	andeq	r4, r1, r8, ror #4
   1420c:	andeq	r4, r1, ip, ror r2
   14210:	muleq	r1, r0, r2
   14214:	andeq	r4, r1, r4, lsr #5
   14218:			; <UNDEFINED> instruction: 0x000142b8
   1421c:	andeq	r4, r1, ip, asr #5
   14220:	andeq	r4, r1, r0, ror #5
   14224:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14228:	andeq	r4, r1, r4, lsl r3
   1422c:	andeq	r4, r1, r8, lsr #6
   14230:	andeq	r4, r1, ip, lsr r3
   14234:	andeq	r4, r1, ip, asr r3
   14238:	andeq	r4, r1, ip, ror r3
   1423c:	muleq	r1, ip, r3
   14240:			; <UNDEFINED> instruction: 0x000143bc
   14244:	ldrdeq	r4, [r1], -ip
   14248:	strdeq	r4, [r1], -ip
   1424c:	andeq	r4, r1, r0, lsr #8
   14250:	andeq	r4, r1, r0, asr #8
   14254:	andeq	r4, r1, ip, ror #8
   14258:	andeq	r4, r1, r0, lsl #9
   1425c:	andeq	r4, r1, r0, lsr #9
   14260:	andeq	r4, r1, r0, asr #9
   14264:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14268:	mov	r0, r4
   1426c:	mov	r1, r7
   14270:	mov	r2, r6
   14274:	bl	135e0 <table_get_int@@Base>
   14278:	b	144d0 <table_cell_to_buffer@@Base+0x300>
   1427c:	mov	r0, r4
   14280:	mov	r1, r7
   14284:	mov	r2, r6
   14288:	bl	135f8 <table_get_uint@@Base>
   1428c:	b	14304 <table_cell_to_buffer@@Base+0x134>
   14290:	mov	r0, r4
   14294:	mov	r1, r7
   14298:	mov	r2, r6
   1429c:	bl	13610 <table_get_int8@@Base>
   142a0:	b	144d0 <table_cell_to_buffer@@Base+0x300>
   142a4:	mov	r0, r4
   142a8:	mov	r1, r7
   142ac:	mov	r2, r6
   142b0:	bl	13628 <table_get_uint8@@Base>
   142b4:	b	14304 <table_cell_to_buffer@@Base+0x134>
   142b8:	mov	r0, r4
   142bc:	mov	r1, r7
   142c0:	mov	r2, r6
   142c4:	bl	13640 <table_get_int16@@Base>
   142c8:	b	144d0 <table_cell_to_buffer@@Base+0x300>
   142cc:	mov	r0, r4
   142d0:	mov	r1, r7
   142d4:	mov	r2, r6
   142d8:	bl	13658 <table_get_uint16@@Base>
   142dc:	b	14304 <table_cell_to_buffer@@Base+0x134>
   142e0:	mov	r0, r4
   142e4:	mov	r1, r7
   142e8:	mov	r2, r6
   142ec:	bl	13670 <table_get_int32@@Base>
   142f0:	b	144d0 <table_cell_to_buffer@@Base+0x300>
   142f4:	mov	r0, r4
   142f8:	mov	r1, r7
   142fc:	mov	r2, r6
   14300:	bl	13688 <table_get_uint32@@Base>
   14304:	movw	r2, #19583	; 0x4c7f
   14308:	mov	r3, r0
   1430c:	movt	r2, #1
   14310:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   14314:	mov	r0, r4
   14318:	mov	r1, r7
   1431c:	mov	r2, r6
   14320:	bl	136a0 <table_get_int64@@Base>
   14324:	b	143cc <table_cell_to_buffer@@Base+0x1fc>
   14328:	mov	r0, r4
   1432c:	mov	r1, r7
   14330:	mov	r2, r6
   14334:	bl	136b8 <table_get_uint64@@Base>
   14338:	b	143ec <table_cell_to_buffer@@Base+0x21c>
   1433c:	mov	r0, r4
   14340:	mov	r1, r7
   14344:	mov	r2, r6
   14348:	bl	136d0 <table_get_short@@Base>
   1434c:	movw	r2, #19596	; 0x4c8c
   14350:	mov	r3, r0
   14354:	movt	r2, #1
   14358:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   1435c:	mov	r0, r4
   14360:	mov	r1, r7
   14364:	mov	r2, r6
   14368:	bl	136e8 <table_get_ushort@@Base>
   1436c:	movw	r2, #19600	; 0x4c90
   14370:	mov	r3, r0
   14374:	movt	r2, #1
   14378:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   1437c:	mov	r0, r4
   14380:	mov	r1, r7
   14384:	mov	r2, r6
   14388:	bl	13700 <table_get_long@@Base>
   1438c:	movw	r2, #19604	; 0x4c94
   14390:	mov	r3, r0
   14394:	movt	r2, #1
   14398:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   1439c:	mov	r0, r4
   143a0:	mov	r1, r7
   143a4:	mov	r2, r6
   143a8:	bl	13718 <table_get_ulong@@Base>
   143ac:	movw	r2, #19608	; 0x4c98
   143b0:	mov	r3, r0
   143b4:	movt	r2, #1
   143b8:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   143bc:	mov	r0, r4
   143c0:	mov	r1, r7
   143c4:	mov	r2, r6
   143c8:	bl	13730 <table_get_llong@@Base>
   143cc:	movw	r2, #19586	; 0x4c82
   143d0:	stm	sp, {r0, r1}
   143d4:	movt	r2, #1
   143d8:	b	1445c <table_cell_to_buffer@@Base+0x28c>
   143dc:	mov	r0, r4
   143e0:	mov	r1, r7
   143e4:	mov	r2, r6
   143e8:	bl	13748 <table_get_ullong@@Base>
   143ec:	movw	r2, #19591	; 0x4c87
   143f0:	stm	sp, {r0, r1}
   143f4:	movt	r2, #1
   143f8:	b	1445c <table_cell_to_buffer@@Base+0x28c>
   143fc:	mov	r0, r4
   14400:	mov	r1, r7
   14404:	mov	r2, r6
   14408:	bl	13760 <table_get_float@@Base>
   1440c:	vcvt.f64.f32	d16, s0
   14410:	movw	r2, #19615	; 0x4c9f
   14414:	movt	r2, #1
   14418:	vstr	d16, [sp]
   1441c:	b	1445c <table_cell_to_buffer@@Base+0x28c>
   14420:	mov	r0, r4
   14424:	mov	r1, r7
   14428:	mov	r2, r6
   1442c:	bl	13778 <table_get_double@@Base>
   14430:	movw	r2, #19618	; 0x4ca2
   14434:	vstr	d0, [sp]
   14438:	movt	r2, #1
   1443c:	b	1445c <table_cell_to_buffer@@Base+0x28c>
   14440:	mov	r0, r4
   14444:	mov	r1, r7
   14448:	mov	r2, r6
   1444c:	bl	13790 <table_get_ldouble@@Base>
   14450:	movw	r2, #19622	; 0x4ca6
   14454:	vstr	d0, [sp]
   14458:	movt	r2, #1
   1445c:	mov	r0, r5
   14460:	mov	r1, r8
   14464:	bl	11f58 <snprintf@plt>
   14468:	b	144e8 <table_cell_to_buffer@@Base+0x318>
   1446c:	mov	r0, r4
   14470:	mov	r1, r7
   14474:	mov	r2, r6
   14478:	bl	137a8 <table_get_char@@Base>
   1447c:	b	14490 <table_cell_to_buffer@@Base+0x2c0>
   14480:	mov	r0, r4
   14484:	mov	r1, r7
   14488:	mov	r2, r6
   1448c:	bl	137c0 <table_get_uchar@@Base>
   14490:	movw	r2, #19626	; 0x4caa
   14494:	mov	r3, r0
   14498:	movt	r2, #1
   1449c:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   144a0:	mov	r0, r4
   144a4:	mov	r1, r7
   144a8:	mov	r2, r6
   144ac:	bl	137d8 <table_get_string@@Base>
   144b0:	movw	r2, #19612	; 0x4c9c
   144b4:	mov	r3, r0
   144b8:	movt	r2, #1
   144bc:	b	144dc <table_cell_to_buffer@@Base+0x30c>
   144c0:	mov	r0, r4
   144c4:	mov	r1, r7
   144c8:	mov	r2, r6
   144cc:	bl	135c8 <table_get_bool@@Base>
   144d0:	movw	r2, #19580	; 0x4c7c
   144d4:	mov	r3, r0
   144d8:	movt	r2, #1
   144dc:	mov	r0, r5
   144e0:	mov	r1, r8
   144e4:	bl	11f58 <snprintf@plt>
   144e8:	mov	r0, #0
   144ec:	sub	sp, fp, #24
   144f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   144f4:	mov	r0, r4
   144f8:	mov	r1, r7
   144fc:	mov	r2, r6
   14500:	bl	137ec <table_get_ptr@@Base>
   14504:	movw	r2, #19629	; 0x4cad
   14508:	mov	r3, r0
   1450c:	movt	r2, #1
   14510:	b	144dc <table_cell_to_buffer@@Base+0x30c>

00014514 <table_cell_from_buffer@@Base>:
   14514:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14518:	add	fp, sp, #24
   1451c:	sub	sp, sp, #264	; 0x108
   14520:	mov	r5, r1
   14524:	mov	r1, r2
   14528:	mov	r7, r3
   1452c:	mov	r4, r2
   14530:	mov	r6, r0
   14534:	bl	12c4c <table_get_column_data_type@@Base>
   14538:	cmp	r0, #23
   1453c:	bhi	14b6c <table_cell_from_buffer@@Base+0x658>
   14540:	add	r1, pc, #0
   14544:	ldr	pc, [r1, r0, lsl #2]
   14548:	andeq	r4, r1, r8, lsr #11
   1454c:	andeq	r4, r1, r4, ror #11
   14550:	andeq	r4, r1, r0, lsr #12
   14554:	andeq	r4, r1, ip, asr r6
   14558:	muleq	r1, r8, r6
   1455c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14560:	andeq	r4, r1, r0, lsl r7
   14564:	andeq	r4, r1, ip, asr #14
   14568:	andeq	r4, r1, r8, lsl #15
   1456c:	andeq	r4, r1, ip, asr #15
   14570:	andeq	r4, r1, r0, lsl r8
   14574:	andeq	r4, r1, ip, asr #16
   14578:	andeq	r4, r1, r8, lsl #17
   1457c:	andeq	r4, r1, r4, asr #17
   14580:	andeq	r4, r1, r0, lsl #18
   14584:	andeq	r4, r1, r4, asr #18
   14588:	andeq	r4, r1, r8, lsl #19
   1458c:	andeq	r4, r1, r4, asr #19
   14590:	andeq	r4, r1, r0, lsl #20
   14594:	andeq	r4, r1, ip, lsr sl
   14598:	andeq	r4, r1, r8, ror sl
   1459c:			; <UNDEFINED> instruction: 0x00014ab4
   145a0:	strdeq	r4, [r1], -r0
   145a4:	andeq	r4, r1, r4, lsr fp
   145a8:	movw	r1, #19580	; 0x4c7c
   145ac:	add	r2, sp, #8
   145b0:	mov	r0, r7
   145b4:	movt	r1, #1
   145b8:	bl	11f64 <__isoc99_sscanf@plt>
   145bc:	mov	r1, r0
   145c0:	mvn	r0, #0
   145c4:	cmp	r1, #1
   145c8:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   145cc:	ldr	r3, [sp, #8]
   145d0:	mov	r0, r6
   145d4:	mov	r1, r5
   145d8:	mov	r2, r4
   145dc:	bl	13d90 <table_set_int@@Base>
   145e0:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   145e4:	movw	r1, #19583	; 0x4c7f
   145e8:	add	r2, sp, #8
   145ec:	mov	r0, r7
   145f0:	movt	r1, #1
   145f4:	bl	11f64 <__isoc99_sscanf@plt>
   145f8:	mov	r1, r0
   145fc:	mvn	r0, #0
   14600:	cmp	r1, #1
   14604:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14608:	ldr	r3, [sp, #8]
   1460c:	mov	r0, r6
   14610:	mov	r1, r5
   14614:	mov	r2, r4
   14618:	bl	13db8 <table_set_uint@@Base>
   1461c:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14620:	movw	r1, #19632	; 0x4cb0
   14624:	add	r2, sp, #8
   14628:	mov	r0, r7
   1462c:	movt	r1, #1
   14630:	bl	11f64 <__isoc99_sscanf@plt>
   14634:	mov	r1, r0
   14638:	mvn	r0, #0
   1463c:	cmp	r1, #1
   14640:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14644:	ldrsb	r3, [sp, #8]
   14648:	mov	r0, r6
   1464c:	mov	r1, r5
   14650:	mov	r2, r4
   14654:	bl	13de0 <table_set_int8@@Base>
   14658:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   1465c:	movw	r1, #19637	; 0x4cb5
   14660:	add	r2, sp, #8
   14664:	mov	r0, r7
   14668:	movt	r1, #1
   1466c:	bl	11f64 <__isoc99_sscanf@plt>
   14670:	mov	r1, r0
   14674:	mvn	r0, #0
   14678:	cmp	r1, #1
   1467c:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14680:	ldrb	r3, [sp, #8]
   14684:	mov	r0, r6
   14688:	mov	r1, r5
   1468c:	mov	r2, r4
   14690:	bl	13e08 <table_set_uint8@@Base>
   14694:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14698:	movw	r1, #19596	; 0x4c8c
   1469c:	add	r2, sp, #8
   146a0:	mov	r0, r7
   146a4:	movt	r1, #1
   146a8:	bl	11f64 <__isoc99_sscanf@plt>
   146ac:	mov	r1, r0
   146b0:	mvn	r0, #0
   146b4:	cmp	r1, #1
   146b8:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   146bc:	ldrsh	r3, [sp, #8]
   146c0:	mov	r0, r6
   146c4:	mov	r1, r5
   146c8:	mov	r2, r4
   146cc:	bl	13e30 <table_set_int16@@Base>
   146d0:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   146d4:	movw	r1, #19600	; 0x4c90
   146d8:	add	r2, sp, #8
   146dc:	mov	r0, r7
   146e0:	movt	r1, #1
   146e4:	bl	11f64 <__isoc99_sscanf@plt>
   146e8:	mov	r1, r0
   146ec:	mvn	r0, #0
   146f0:	cmp	r1, #1
   146f4:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   146f8:	ldrh	r3, [sp, #8]
   146fc:	mov	r0, r6
   14700:	mov	r1, r5
   14704:	mov	r2, r4
   14708:	bl	13e58 <table_set_uint16@@Base>
   1470c:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14710:	movw	r1, #19580	; 0x4c7c
   14714:	add	r2, sp, #8
   14718:	mov	r0, r7
   1471c:	movt	r1, #1
   14720:	bl	11f64 <__isoc99_sscanf@plt>
   14724:	mov	r1, r0
   14728:	mvn	r0, #0
   1472c:	cmp	r1, #1
   14730:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14734:	ldr	r3, [sp, #8]
   14738:	mov	r0, r6
   1473c:	mov	r1, r5
   14740:	mov	r2, r4
   14744:	bl	13e80 <table_set_int32@@Base>
   14748:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   1474c:	movw	r1, #19583	; 0x4c7f
   14750:	add	r2, sp, #8
   14754:	mov	r0, r7
   14758:	movt	r1, #1
   1475c:	bl	11f64 <__isoc99_sscanf@plt>
   14760:	mov	r1, r0
   14764:	mvn	r0, #0
   14768:	cmp	r1, #1
   1476c:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14770:	ldr	r3, [sp, #8]
   14774:	mov	r0, r6
   14778:	mov	r1, r5
   1477c:	mov	r2, r4
   14780:	bl	13ea8 <table_set_uint32@@Base>
   14784:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14788:	movw	r1, #19586	; 0x4c82
   1478c:	add	r2, sp, #8
   14790:	mov	r0, r7
   14794:	movt	r1, #1
   14798:	bl	11f64 <__isoc99_sscanf@plt>
   1479c:	mov	r1, r0
   147a0:	mvn	r0, #0
   147a4:	cmp	r1, #1
   147a8:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   147ac:	ldr	r0, [sp, #8]
   147b0:	ldr	r1, [sp, #12]
   147b4:	mov	r2, r4
   147b8:	stm	sp, {r0, r1}
   147bc:	mov	r0, r6
   147c0:	mov	r1, r5
   147c4:	bl	13ed0 <table_set_int64@@Base>
   147c8:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   147cc:	movw	r1, #19591	; 0x4c87
   147d0:	add	r2, sp, #8
   147d4:	mov	r0, r7
   147d8:	movt	r1, #1
   147dc:	bl	11f64 <__isoc99_sscanf@plt>
   147e0:	mov	r1, r0
   147e4:	mvn	r0, #0
   147e8:	cmp	r1, #1
   147ec:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   147f0:	ldr	r0, [sp, #8]
   147f4:	ldr	r1, [sp, #12]
   147f8:	mov	r2, r4
   147fc:	stm	sp, {r0, r1}
   14800:	mov	r0, r6
   14804:	mov	r1, r5
   14808:	bl	13f04 <table_set_uint64@@Base>
   1480c:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14810:	movw	r1, #19596	; 0x4c8c
   14814:	add	r2, sp, #8
   14818:	mov	r0, r7
   1481c:	movt	r1, #1
   14820:	bl	11f64 <__isoc99_sscanf@plt>
   14824:	mov	r1, r0
   14828:	mvn	r0, #0
   1482c:	cmp	r1, #1
   14830:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14834:	ldrsh	r3, [sp, #8]
   14838:	mov	r0, r6
   1483c:	mov	r1, r5
   14840:	mov	r2, r4
   14844:	bl	13f38 <table_set_short@@Base>
   14848:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   1484c:	movw	r1, #19600	; 0x4c90
   14850:	add	r2, sp, #8
   14854:	mov	r0, r7
   14858:	movt	r1, #1
   1485c:	bl	11f64 <__isoc99_sscanf@plt>
   14860:	mov	r1, r0
   14864:	mvn	r0, #0
   14868:	cmp	r1, #1
   1486c:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14870:	ldrh	r3, [sp, #8]
   14874:	mov	r0, r6
   14878:	mov	r1, r5
   1487c:	mov	r2, r4
   14880:	bl	13f60 <table_set_ushort@@Base>
   14884:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14888:	movw	r1, #19604	; 0x4c94
   1488c:	add	r2, sp, #8
   14890:	mov	r0, r7
   14894:	movt	r1, #1
   14898:	bl	11f64 <__isoc99_sscanf@plt>
   1489c:	mov	r1, r0
   148a0:	mvn	r0, #0
   148a4:	cmp	r1, #1
   148a8:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   148ac:	ldr	r3, [sp, #8]
   148b0:	mov	r0, r6
   148b4:	mov	r1, r5
   148b8:	mov	r2, r4
   148bc:	bl	13f88 <table_set_long@@Base>
   148c0:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   148c4:	movw	r1, #19608	; 0x4c98
   148c8:	add	r2, sp, #8
   148cc:	mov	r0, r7
   148d0:	movt	r1, #1
   148d4:	bl	11f64 <__isoc99_sscanf@plt>
   148d8:	mov	r1, r0
   148dc:	mvn	r0, #0
   148e0:	cmp	r1, #1
   148e4:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   148e8:	ldr	r3, [sp, #8]
   148ec:	mov	r0, r6
   148f0:	mov	r1, r5
   148f4:	mov	r2, r4
   148f8:	bl	13fb0 <table_set_ulong@@Base>
   148fc:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14900:	movw	r1, #19586	; 0x4c82
   14904:	add	r2, sp, #8
   14908:	mov	r0, r7
   1490c:	movt	r1, #1
   14910:	bl	11f64 <__isoc99_sscanf@plt>
   14914:	mov	r1, r0
   14918:	mvn	r0, #0
   1491c:	cmp	r1, #1
   14920:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14924:	ldr	r0, [sp, #8]
   14928:	ldr	r1, [sp, #12]
   1492c:	mov	r2, r4
   14930:	stm	sp, {r0, r1}
   14934:	mov	r0, r6
   14938:	mov	r1, r5
   1493c:	bl	13fd8 <table_set_llong@@Base>
   14940:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14944:	movw	r1, #19591	; 0x4c87
   14948:	add	r2, sp, #8
   1494c:	mov	r0, r7
   14950:	movt	r1, #1
   14954:	bl	11f64 <__isoc99_sscanf@plt>
   14958:	mov	r1, r0
   1495c:	mvn	r0, #0
   14960:	cmp	r1, #1
   14964:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14968:	ldr	r0, [sp, #8]
   1496c:	ldr	r1, [sp, #12]
   14970:	mov	r2, r4
   14974:	stm	sp, {r0, r1}
   14978:	mov	r0, r6
   1497c:	mov	r1, r5
   14980:	bl	1400c <table_set_ullong@@Base>
   14984:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14988:	movw	r1, #19615	; 0x4c9f
   1498c:	add	r2, sp, #8
   14990:	mov	r0, r7
   14994:	movt	r1, #1
   14998:	bl	11f64 <__isoc99_sscanf@plt>
   1499c:	mov	r1, r0
   149a0:	mvn	r0, #0
   149a4:	cmp	r1, #1
   149a8:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   149ac:	vldr	s0, [sp, #8]
   149b0:	mov	r0, r6
   149b4:	mov	r1, r5
   149b8:	mov	r2, r4
   149bc:	bl	14040 <table_set_float@@Base>
   149c0:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   149c4:	movw	r1, #19618	; 0x4ca2
   149c8:	add	r2, sp, #8
   149cc:	mov	r0, r7
   149d0:	movt	r1, #1
   149d4:	bl	11f64 <__isoc99_sscanf@plt>
   149d8:	mov	r1, r0
   149dc:	mvn	r0, #0
   149e0:	cmp	r1, #1
   149e4:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   149e8:	vldr	d0, [sp, #8]
   149ec:	mov	r0, r6
   149f0:	mov	r1, r5
   149f4:	mov	r2, r4
   149f8:	bl	14068 <table_set_double@@Base>
   149fc:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14a00:	movw	r1, #19622	; 0x4ca6
   14a04:	add	r2, sp, #8
   14a08:	mov	r0, r7
   14a0c:	movt	r1, #1
   14a10:	bl	11f64 <__isoc99_sscanf@plt>
   14a14:	mov	r1, r0
   14a18:	mvn	r0, #0
   14a1c:	cmp	r1, #1
   14a20:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14a24:	vldr	d0, [sp, #8]
   14a28:	mov	r0, r6
   14a2c:	mov	r1, r5
   14a30:	mov	r2, r4
   14a34:	bl	14090 <table_set_ldouble@@Base>
   14a38:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14a3c:	movw	r1, #19626	; 0x4caa
   14a40:	add	r2, sp, #8
   14a44:	mov	r0, r7
   14a48:	movt	r1, #1
   14a4c:	bl	11f64 <__isoc99_sscanf@plt>
   14a50:	mov	r1, r0
   14a54:	mvn	r0, #0
   14a58:	cmp	r1, #1
   14a5c:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14a60:	ldrb	r3, [sp, #8]
   14a64:	mov	r0, r6
   14a68:	mov	r1, r5
   14a6c:	mov	r2, r4
   14a70:	bl	140d8 <table_set_char@@Base>
   14a74:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14a78:	movw	r1, #19626	; 0x4caa
   14a7c:	add	r2, sp, #8
   14a80:	mov	r0, r7
   14a84:	movt	r1, #1
   14a88:	bl	11f64 <__isoc99_sscanf@plt>
   14a8c:	mov	r1, r0
   14a90:	mvn	r0, #0
   14a94:	cmp	r1, #1
   14a98:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14a9c:	ldrb	r3, [sp, #8]
   14aa0:	mov	r0, r6
   14aa4:	mov	r1, r5
   14aa8:	mov	r2, r4
   14aac:	bl	14100 <table_set_uchar@@Base>
   14ab0:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14ab4:	movw	r1, #19612	; 0x4c9c
   14ab8:	add	r2, sp, #8
   14abc:	mov	r0, r7
   14ac0:	movt	r1, #1
   14ac4:	bl	11f64 <__isoc99_sscanf@plt>
   14ac8:	mov	r1, r0
   14acc:	mvn	r0, #0
   14ad0:	cmp	r1, #1
   14ad4:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14ad8:	add	r3, sp, #8
   14adc:	mov	r0, r6
   14ae0:	mov	r1, r5
   14ae4:	mov	r2, r4
   14ae8:	bl	140b8 <table_set_string@@Base>
   14aec:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14af0:	movw	r1, #19580	; 0x4c7c
   14af4:	add	r2, sp, #8
   14af8:	mov	r0, r7
   14afc:	movt	r1, #1
   14b00:	bl	11f64 <__isoc99_sscanf@plt>
   14b04:	mov	r1, r0
   14b08:	mvn	r0, #0
   14b0c:	cmp	r1, #1
   14b10:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14b14:	ldr	r3, [sp, #8]
   14b18:	mov	r0, r6
   14b1c:	mov	r1, r5
   14b20:	mov	r2, r4
   14b24:	cmp	r3, #0
   14b28:	movwne	r3, #1
   14b2c:	bl	13d68 <table_set_bool@@Base>
   14b30:	b	14b6c <table_cell_from_buffer@@Base+0x658>
   14b34:	movw	r1, #19629	; 0x4cad
   14b38:	add	r2, sp, #8
   14b3c:	mov	r0, r7
   14b40:	movt	r1, #1
   14b44:	bl	11f64 <__isoc99_sscanf@plt>
   14b48:	mov	r1, r0
   14b4c:	mvn	r0, #0
   14b50:	cmp	r1, #1
   14b54:	bne	14b70 <table_cell_from_buffer@@Base+0x65c>
   14b58:	ldr	r3, [sp, #8]
   14b5c:	mov	r0, r6
   14b60:	mov	r1, r5
   14b64:	mov	r2, r4
   14b68:	bl	14128 <table_set_ptr@@Base>
   14b6c:	mov	r0, #0
   14b70:	sub	sp, fp, #24
   14b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b78 <table_cell_nullify@@Base>:
   14b78:	push	{r4, r5, fp, lr}
   14b7c:	add	fp, sp, #8
   14b80:	mov	r4, r2
   14b84:	bl	13824 <table_get_row_ptr@@Base>
   14b88:	ldr	r5, [r0]
   14b8c:	ldr	r0, [r5, r4, lsl #2]
   14b90:	cmp	r0, #0
   14b94:	beq	14ba4 <table_cell_nullify@@Base+0x2c>
   14b98:	bl	11eec <free@plt>
   14b9c:	mov	r0, #0
   14ba0:	str	r0, [r5, r4, lsl #2]
   14ba4:	mov	r0, #0
   14ba8:	pop	{r4, r5, fp, pc}

00014bac <__libc_csu_init@@Base>:
   14bac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14bb0:	mov	r7, r0
   14bb4:	ldr	r6, [pc, #72]	; 14c04 <__libc_csu_init@@Base+0x58>
   14bb8:	ldr	r5, [pc, #72]	; 14c08 <__libc_csu_init@@Base+0x5c>
   14bbc:	add	r6, pc, r6
   14bc0:	add	r5, pc, r5
   14bc4:	sub	r6, r6, r5
   14bc8:	mov	r8, r1
   14bcc:	mov	r9, r2
   14bd0:	bl	11ec0 <strcmp@plt-0x20>
   14bd4:	asrs	r6, r6, #2
   14bd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14bdc:	mov	r4, #0
   14be0:	add	r4, r4, #1
   14be4:	ldr	r3, [r5], #4
   14be8:	mov	r2, r9
   14bec:	mov	r1, r8
   14bf0:	mov	r0, r7
   14bf4:	blx	r3
   14bf8:	cmp	r6, r4
   14bfc:	bne	14be0 <__libc_csu_init@@Base+0x34>
   14c00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14c04:	andeq	r0, r1, r8, asr #6
   14c08:	andeq	r0, r1, r0, asr #6

00014c0c <__libc_csu_fini@@Base>:
   14c0c:	bx	lr

Disassembly of section .fini:

00014c10 <.fini>:
   14c10:	push	{r3, lr}
   14c14:	pop	{r3, pc}
