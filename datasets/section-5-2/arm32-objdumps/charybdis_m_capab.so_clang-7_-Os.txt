
../repos/charybdis/modules/.libs/m_capab.so:     file format elf32-littlearm


Disassembly of section .init:

000005f8 <_init>:
 5f8:	push	{r3, lr}
 5fc:	bl	690 <call_weak_fn>
 600:	pop	{r3, pc}

Disassembly of section .plt:

00000604 <.plt>:
 604:	push	{lr}		; (str lr, [sp, #-4]!)
 608:	ldr	lr, [pc, #4]	; 614 <.plt+0x10>
 60c:	add	lr, pc, lr
 610:	ldr	pc, [lr, #8]!
 614:	.word	0x000109ec

00000618 <__cxa_finalize@plt>:
 618:	add	ip, pc, #0, 12
 61c:	add	ip, ip, #16, 20	; 0x10000
 620:	ldr	pc, [ip, #2540]!	; 0x9ec

00000624 <free@plt>:
 624:	add	ip, pc, #0, 12
 628:	add	ip, ip, #16, 20	; 0x10000
 62c:	ldr	pc, [ip, #2532]!	; 0x9e4

00000630 <rb_outofmemory@plt>:
 630:	add	ip, pc, #0, 12
 634:	add	ip, ip, #16, 20	; 0x10000
 638:	ldr	pc, [ip, #2524]!	; 0x9dc

0000063c <strcpy@plt>:
 63c:	add	ip, pc, #0, 12
 640:	add	ip, ip, #16, 20	; 0x10000
 644:	ldr	pc, [ip, #2516]!	; 0x9d4

00000648 <malloc@plt>:
 648:	add	ip, pc, #0, 12
 64c:	add	ip, ip, #16, 20	; 0x10000
 650:	ldr	pc, [ip, #2508]!	; 0x9cc

00000654 <__gmon_start__@plt>:
 654:	add	ip, pc, #0, 12
 658:	add	ip, ip, #16, 20	; 0x10000
 65c:	ldr	pc, [ip, #2500]!	; 0x9c4

00000660 <strlen@plt>:
 660:	add	ip, pc, #0, 12
 664:	add	ip, ip, #16, 20	; 0x10000
 668:	ldr	pc, [ip, #2492]!	; 0x9bc

0000066c <capability_get@plt>:
 66c:	add	ip, pc, #0, 12
 670:	add	ip, ip, #16, 20	; 0x10000
 674:	ldr	pc, [ip, #2484]!	; 0x9b4

00000678 <rb_strtok_r@plt>:
 678:	add	ip, pc, #0, 12
 67c:	add	ip, ip, #16, 20	; 0x10000
 680:	ldr	pc, [ip, #2476]!	; 0x9ac

00000684 <exit_client@plt>:
 684:	add	ip, pc, #0, 12
 688:	add	ip, ip, #16, 20	; 0x10000
 68c:	ldr	pc, [ip, #2468]!	; 0x9a4

Disassembly of section .text:

00000690 <call_weak_fn>:
 690:	ldr	r3, [pc, #20]	; 6ac <call_weak_fn+0x1c>
 694:	ldr	r2, [pc, #20]	; 6b0 <call_weak_fn+0x20>
 698:	add	r3, pc, r3
 69c:	ldr	r2, [r3, r2]
 6a0:	cmp	r2, #0
 6a4:	bxeq	lr
 6a8:	b	654 <__gmon_start__@plt>
 6ac:	.word	0x00010960
 6b0:	.word	0x00000048

000006b4 <deregister_tm_clones>:
 6b4:	ldr	r0, [pc, #44]	; 6e8 <deregister_tm_clones+0x34>
 6b8:	ldr	r3, [pc, #44]	; 6ec <deregister_tm_clones+0x38>
 6bc:	add	r0, pc, r0
 6c0:	add	r3, pc, r3
 6c4:	cmp	r3, r0
 6c8:	ldr	r3, [pc, #32]	; 6f0 <deregister_tm_clones+0x3c>
 6cc:	add	r3, pc, r3
 6d0:	bxeq	lr
 6d4:	ldr	r2, [pc, #24]	; 6f4 <deregister_tm_clones+0x40>
 6d8:	ldr	r3, [r3, r2]
 6dc:	cmp	r3, #0
 6e0:	bxeq	lr
 6e4:	bx	r3
 6e8:	.word	0x00010a4c
 6ec:	.word	0x00010a48
 6f0:	.word	0x0001092c
 6f4:	.word	0x00000040

000006f8 <register_tm_clones>:
 6f8:	ldr	r0, [pc, #56]	; 738 <register_tm_clones+0x40>
 6fc:	ldr	r3, [pc, #56]	; 73c <register_tm_clones+0x44>
 700:	add	r0, pc, r0
 704:	add	r3, pc, r3
 708:	sub	r1, r3, r0
 70c:	ldr	r3, [pc, #44]	; 740 <register_tm_clones+0x48>
 710:	asr	r1, r1, #2
 714:	add	r3, pc, r3
 718:	add	r1, r1, r1, lsr #31
 71c:	asrs	r1, r1, #1
 720:	bxeq	lr
 724:	ldr	r2, [pc, #24]	; 744 <register_tm_clones+0x4c>
 728:	ldr	r3, [r3, r2]
 72c:	cmp	r3, #0
 730:	bxeq	lr
 734:	bx	r3
 738:	.word	0x00010a08
 73c:	.word	0x00010a04
 740:	.word	0x000108e4
 744:	.word	0x0000004c

00000748 <__do_global_dtors_aux>:
 748:	ldr	r3, [pc, #76]	; 79c <__do_global_dtors_aux+0x54>
 74c:	ldr	r2, [pc, #76]	; 7a0 <__do_global_dtors_aux+0x58>
 750:	add	r3, pc, r3
 754:	add	r2, pc, r2
 758:	ldrb	r3, [r3]
 75c:	cmp	r3, #0
 760:	bxne	lr
 764:	ldr	r3, [pc, #56]	; 7a4 <__do_global_dtors_aux+0x5c>
 768:	push	{r4, lr}
 76c:	ldr	r3, [r2, r3]
 770:	cmp	r3, #0
 774:	beq	784 <__do_global_dtors_aux+0x3c>
 778:	ldr	r3, [pc, #40]	; 7a8 <__do_global_dtors_aux+0x60>
 77c:	ldr	r0, [pc, r3]
 780:	bl	618 <__cxa_finalize@plt>
 784:	bl	6b4 <deregister_tm_clones>
 788:	ldr	r3, [pc, #28]	; 7ac <__do_global_dtors_aux+0x64>
 78c:	mov	r2, #1
 790:	add	r3, pc, r3
 794:	strb	r2, [r3]
 798:	pop	{r4, pc}
 79c:	.word	0x000109b8
 7a0:	.word	0x000108a4
 7a4:	.word	0x00000038
 7a8:	.word	0x000108cc
 7ac:	.word	0x00010978

000007b0 <frame_dummy>:
 7b0:	b	6f8 <register_tm_clones>

000007b4 <mr_capab>:
 7b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 7b8:	add	fp, sp, #28
 7bc:	sub	sp, sp, #12
 7c0:	ldr	r0, [r1, #432]	; 0x1b0
 7c4:	str	r3, [fp, #-40]	; 0xffffffd8
 7c8:	cmp	r0, #0
 7cc:	beq	924 <mr_capab+0x170>
 7d0:	mov	r4, r1
 7d4:	ldr	r1, [r1, #24]
 7d8:	cmp	r1, #0
 7dc:	bne	924 <mr_capab+0x170>
 7e0:	ldr	r1, [r0, #296]	; 0x128
 7e4:	ldr	r2, [pc, #324]	; 930 <mr_capab+0x17c>
 7e8:	ldr	r2, [pc, r2]
 7ec:	ldr	r2, [r2]
 7f0:	mvn	r2, r2
 7f4:	tst	r1, r2
 7f8:	beq	818 <mr_capab+0x64>
 7fc:	ldr	r3, [pc, #304]	; 934 <mr_capab+0x180>
 800:	mov	r0, r4
 804:	mov	r1, r4
 808:	mov	r2, r4
 80c:	add	r3, pc, r3
 810:	bl	684 <exit_client@plt>
 814:	b	924 <mr_capab+0x170>
 818:	ldr	r2, [pc, #280]	; 938 <mr_capab+0x184>
 81c:	ldr	r2, [pc, r2]
 820:	ldr	r2, [r2]
 824:	orr	r1, r2, r1
 828:	str	r1, [r0, #296]	; 0x128
 82c:	ldr	r0, [r0, #288]	; 0x120
 830:	cmp	r0, #0
 834:	beq	83c <mr_capab+0x88>
 838:	bl	624 <free@plt>
 83c:	ldr	r0, [fp, #8]
 840:	ldr	r6, [r0, #4]
 844:	mov	r0, r6
 848:	bl	660 <strlen@plt>
 84c:	add	r0, r0, #1
 850:	bl	648 <malloc@plt>
 854:	cmp	r0, #0
 858:	beq	92c <mr_capab+0x178>
 85c:	mov	r1, r6
 860:	mov	r7, r0
 864:	bl	63c <strcpy@plt>
 868:	ldr	r0, [r4, #432]	; 0x1b0
 86c:	str	r7, [r0, #288]	; 0x120
 870:	ldr	r0, [fp, #-40]	; 0xffffffd8
 874:	cmp	r0, #2
 878:	blt	924 <mr_capab+0x170>
 87c:	ldr	r6, [pc, #184]	; 93c <mr_capab+0x188>
 880:	ldr	r8, [pc, #184]	; 940 <mr_capab+0x18c>
 884:	mov	sl, #1
 888:	sub	r7, fp, #36	; 0x24
 88c:	ldr	r8, [pc, r8]
 890:	add	r6, pc, r6
 894:	ldr	r0, [fp, #8]
 898:	ldr	r9, [r0, sl, lsl #2]
 89c:	mov	r0, r9
 8a0:	bl	660 <strlen@plt>
 8a4:	add	r0, r0, #8
 8a8:	bic	r0, r0, #7
 8ac:	sub	r5, sp, r0
 8b0:	mov	sp, r5
 8b4:	mov	r0, r5
 8b8:	mov	r1, r9
 8bc:	bl	63c <strcpy@plt>
 8c0:	mov	r0, r5
 8c4:	mov	r1, r6
 8c8:	mov	r2, r7
 8cc:	bl	678 <rb_strtok_r@plt>
 8d0:	cmp	r0, #0
 8d4:	beq	914 <mr_capab+0x160>
 8d8:	mov	r1, r0
 8dc:	ldr	r0, [r8]
 8e0:	mov	r2, #0
 8e4:	bl	66c <capability_get@plt>
 8e8:	ldr	r1, [r4, #432]	; 0x1b0
 8ec:	ldr	r2, [r1, #296]	; 0x128
 8f0:	orr	r0, r2, r0
 8f4:	mov	r2, r7
 8f8:	str	r0, [r1, #296]	; 0x128
 8fc:	mov	r0, #0
 900:	mov	r1, r6
 904:	bl	678 <rb_strtok_r@plt>
 908:	mov	r1, r0
 90c:	cmp	r0, #0
 910:	bne	8dc <mr_capab+0x128>
 914:	ldr	r0, [fp, #-40]	; 0xffffffd8
 918:	add	sl, sl, #1
 91c:	cmp	sl, r0
 920:	bne	894 <mr_capab+0xe0>
 924:	sub	sp, fp, #28
 928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 92c:	bl	630 <rb_outofmemory@plt>
 930:	.word	0x00010854
 934:	.word	0x00000263
 938:	.word	0x00010810
 93c:	.word	0x000001f4
 940:	.word	0x000107a8

00000944 <me_gcap>:
 944:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
 948:	add	fp, sp, #24
 94c:	sub	sp, sp, #8
 950:	ldr	r7, [fp, #8]
 954:	mov	r4, r2
 958:	ldr	r6, [r7, #4]
 95c:	mov	r0, r6
 960:	bl	660 <strlen@plt>
 964:	add	r0, r0, #8
 968:	bic	r0, r0, #7
 96c:	sub	r5, sp, r0
 970:	mov	sp, r5
 974:	mov	r0, r5
 978:	mov	r1, r6
 97c:	bl	63c <strcpy@plt>
 980:	ldrh	r0, [r4, #80]	; 0x50
 984:	cmp	r0, #32
 988:	bne	a4c <me_gcap+0x108>
 98c:	ldr	r1, [r4, #28]
 990:	ldr	r0, [r1, #64]	; 0x40
 994:	cmp	r0, #0
 998:	ldrbne	r2, [r0]
 99c:	cmpne	r2, #0
 9a0:	beq	9b0 <me_gcap+0x6c>
 9a4:	mov	r2, #0
 9a8:	str	r2, [r1, #60]	; 0x3c
 9ac:	bl	624 <free@plt>
 9b0:	ldr	r6, [r7, #4]
 9b4:	mov	r0, r6
 9b8:	bl	660 <strlen@plt>
 9bc:	add	r0, r0, #1
 9c0:	bl	648 <malloc@plt>
 9c4:	cmp	r0, #0
 9c8:	beq	a54 <me_gcap+0x110>
 9cc:	mov	r1, r6
 9d0:	mov	r7, r0
 9d4:	bl	63c <strcpy@plt>
 9d8:	ldr	r0, [r4, #28]
 9dc:	sub	r2, fp, #28
 9e0:	str	r7, [r0, #64]	; 0x40
 9e4:	mov	r0, r5
 9e8:	ldr	r1, [pc, #104]	; a58 <me_gcap+0x114>
 9ec:	add	r1, pc, r1
 9f0:	bl	678 <rb_strtok_r@plt>
 9f4:	cmp	r0, #0
 9f8:	beq	a4c <me_gcap+0x108>
 9fc:	ldr	r7, [pc, #88]	; a5c <me_gcap+0x118>
 a00:	mov	r1, r0
 a04:	sub	r6, fp, #28
 a08:	ldr	r7, [pc, r7]
 a0c:	ldr	r5, [pc, #76]	; a60 <me_gcap+0x11c>
 a10:	add	r5, pc, r5
 a14:	ldr	r0, [r7]
 a18:	mov	r2, #0
 a1c:	bl	66c <capability_get@plt>
 a20:	ldr	r1, [r4, #28]
 a24:	ldr	r2, [r1, #60]	; 0x3c
 a28:	orr	r0, r2, r0
 a2c:	mov	r2, r6
 a30:	str	r0, [r1, #60]	; 0x3c
 a34:	mov	r0, #0
 a38:	mov	r1, r5
 a3c:	bl	678 <rb_strtok_r@plt>
 a40:	mov	r1, r0
 a44:	cmp	r0, #0
 a48:	bne	a14 <me_gcap+0xd0>
 a4c:	sub	sp, fp, #24
 a50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
 a54:	bl	630 <rb_outofmemory@plt>
 a58:	.word	0x00000098
 a5c:	.word	0x0001062c
 a60:	.word	0x00000074

Disassembly of section .fini:

00000a64 <_fini>:
 a64:	push	{r3, lr}
 a68:	pop	{r3, pc}
